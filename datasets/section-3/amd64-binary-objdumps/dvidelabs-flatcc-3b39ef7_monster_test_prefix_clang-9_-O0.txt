
../repos/dvidelabs-flatcc-3b39ef7/test/monster_test_prefix/monster_test_prefix:     file format elf64-x86-64


Disassembly of section .init:

0000000000403000 <.init>:
  403000:	endbr64 
  403004:	sub    rsp,0x8
  403008:	mov    rax,QWORD PTR [rip+0xffe9]        # 412ff8 <__gmon_start__>
  40300f:	test   rax,rax
  403012:	je     403016 <free@plt-0x1a>
  403014:	call   rax
  403016:	add    rsp,0x8
  40301a:	ret    

Disassembly of section .plt:

0000000000403020 <free@plt-0x10>:
  403020:	push   QWORD PTR [rip+0xffe2]        # 413008 <flatcc_builder_padding_base@@Base+0x4e38>
  403026:	jmp    QWORD PTR [rip+0xffe4]        # 413010 <flatcc_builder_padding_base@@Base+0x4e40>
  40302c:	nop    DWORD PTR [rax+0x0]

0000000000403030 <free@plt>:
  403030:	jmp    QWORD PTR [rip+0xffe2]        # 413018 <free@GLIBC_2.2.5>
  403036:	push   0x0
  40303b:	jmp    403020 <free@plt-0x10>

0000000000403040 <strncpy@plt>:
  403040:	jmp    QWORD PTR [rip+0xffda]        # 413020 <strncpy@GLIBC_2.2.5>
  403046:	push   0x1
  40304b:	jmp    403020 <free@plt-0x10>

0000000000403050 <strlen@plt>:
  403050:	jmp    QWORD PTR [rip+0xffd2]        # 413028 <strlen@GLIBC_2.2.5>
  403056:	push   0x2
  40305b:	jmp    403020 <free@plt-0x10>

0000000000403060 <__assert_fail@plt>:
  403060:	jmp    QWORD PTR [rip+0xffca]        # 413030 <__assert_fail@GLIBC_2.2.5>
  403066:	push   0x3
  40306b:	jmp    403020 <free@plt-0x10>

0000000000403070 <memset@plt>:
  403070:	jmp    QWORD PTR [rip+0xffc2]        # 413038 <memset@GLIBC_2.2.5>
  403076:	push   0x4
  40307b:	jmp    403020 <free@plt-0x10>

0000000000403080 <memchr@plt>:
  403080:	jmp    QWORD PTR [rip+0xffba]        # 413040 <memchr@GLIBC_2.2.5>
  403086:	push   0x5
  40308b:	jmp    403020 <free@plt-0x10>

0000000000403090 <memcmp@plt>:
  403090:	jmp    QWORD PTR [rip+0xffb2]        # 413048 <memcmp@GLIBC_2.2.5>
  403096:	push   0x6
  40309b:	jmp    403020 <free@plt-0x10>

00000000004030a0 <memcpy@plt>:
  4030a0:	jmp    QWORD PTR [rip+0xffaa]        # 413050 <memcpy@GLIBC_2.14>
  4030a6:	push   0x7
  4030ab:	jmp    403020 <free@plt-0x10>

00000000004030b0 <malloc@plt>:
  4030b0:	jmp    QWORD PTR [rip+0xffa2]        # 413058 <malloc@GLIBC_2.2.5>
  4030b6:	push   0x8
  4030bb:	jmp    403020 <free@plt-0x10>

00000000004030c0 <realloc@plt>:
  4030c0:	jmp    QWORD PTR [rip+0xff9a]        # 413060 <realloc@GLIBC_2.2.5>
  4030c6:	push   0x9
  4030cb:	jmp    403020 <free@plt-0x10>

00000000004030d0 <posix_memalign@plt>:
  4030d0:	jmp    QWORD PTR [rip+0xff92]        # 413068 <posix_memalign@GLIBC_2.2.5>
  4030d6:	push   0xa
  4030db:	jmp    403020 <free@plt-0x10>

Disassembly of section .text:

00000000004030e0 <_start@@Base>:
  4030e0:	endbr64 
  4030e4:	xor    ebp,ebp
  4030e6:	mov    r9,rdx
  4030e9:	pop    rsi
  4030ea:	mov    rdx,rsp
  4030ed:	and    rsp,0xfffffffffffffff0
  4030f1:	push   rax
  4030f2:	push   rsp
  4030f3:	mov    r8,0x40d3b0
  4030fa:	mov    rcx,0x40d340
  403101:	mov    rdi,0x4031d0
  403108:	call   QWORD PTR [rip+0xfee2]        # 412ff0 <__libc_start_main@GLIBC_2.2.5>
  40310e:	hlt    
  40310f:	nop
  403110:	endbr64 
  403114:	ret    
  403115:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40311f:	nop
  403120:	mov    eax,0x413080
  403125:	cmp    rax,0x413080
  40312b:	je     403140 <_start@@Base+0x60>
  40312d:	mov    eax,0x0
  403132:	test   rax,rax
  403135:	je     403140 <_start@@Base+0x60>
  403137:	mov    edi,0x413080
  40313c:	jmp    rax
  40313e:	xchg   ax,ax
  403140:	ret    
  403141:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40314c:	nop    DWORD PTR [rax+0x0]
  403150:	mov    esi,0x413080
  403155:	sub    rsi,0x413080
  40315c:	mov    rax,rsi
  40315f:	shr    rsi,0x3f
  403163:	sar    rax,0x3
  403167:	add    rsi,rax
  40316a:	sar    rsi,1
  40316d:	je     403180 <_start@@Base+0xa0>
  40316f:	mov    eax,0x0
  403174:	test   rax,rax
  403177:	je     403180 <_start@@Base+0xa0>
  403179:	mov    edi,0x413080
  40317e:	jmp    rax
  403180:	ret    
  403181:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40318c:	nop    DWORD PTR [rax+0x0]
  403190:	endbr64 
  403194:	cmp    BYTE PTR [rip+0xfee5],0x0        # 413080 <__bss_start@@Base>
  40319b:	jne    4031b0 <_start@@Base+0xd0>
  40319d:	push   rbp
  40319e:	mov    rbp,rsp
  4031a1:	call   403120 <_start@@Base+0x40>
  4031a6:	mov    BYTE PTR [rip+0xfed3],0x1        # 413080 <__bss_start@@Base>
  4031ad:	pop    rbp
  4031ae:	ret    
  4031af:	nop
  4031b0:	ret    
  4031b1:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4031bc:	nop    DWORD PTR [rax+0x0]
  4031c0:	endbr64 
  4031c4:	jmp    403150 <_start@@Base+0x70>
  4031c6:	nop    WORD PTR cs:[rax+rax*1+0x0]

00000000004031d0 <main@@Base>:
  4031d0:	push   rbp
  4031d1:	mov    rbp,rsp
  4031d4:	sub    rsp,0x1d0
  4031db:	mov    DWORD PTR [rbp-0x4],0x0
  4031e2:	mov    DWORD PTR [rbp-0x8],edi
  4031e5:	mov    QWORD PTR [rbp-0x10],rsi
  4031e9:	lea    rax,[rbp-0x1b0]
  4031f0:	mov    QWORD PTR [rbp-0x1b8],rax
  4031f7:	mov    rdi,QWORD PTR [rbp-0x1b8]
  4031fe:	call   404810 <flatcc_builder_init@@Base>
  403203:	mov    rdi,QWORD PTR [rbp-0x1b8]
  40320a:	mov    DWORD PTR [rbp-0x1bc],eax
  403210:	call   403290 <main@@Base+0xc0>
  403215:	mov    rdi,QWORD PTR [rbp-0x1b8]
  40321c:	lea    rsi,[rip+0xadf5]        # 40e018 <_IO_stdin_used@@Base+0x18>
  403223:	mov    DWORD PTR [rbp-0x1c0],eax
  403229:	call   4032e0 <main@@Base+0x110>
  40322e:	mov    rdi,QWORD PTR [rbp-0x1b8]
  403235:	mov    DWORD PTR [rbp-0x1c4],eax
  40323b:	call   403320 <main@@Base+0x150>
  403240:	mov    rdi,QWORD PTR [rbp-0x1b8]
  403247:	lea    rsi,[rbp-0x28]
  40324b:	mov    DWORD PTR [rbp-0x1c8],eax
  403251:	call   409c70 <flatcc_builder_get_direct_buffer@@Base>
  403256:	mov    QWORD PTR [rbp-0x20],rax
  40325a:	mov    rdi,QWORD PTR [rbp-0x20]
  40325e:	mov    rsi,QWORD PTR [rbp-0x28]
  403262:	lea    rdx,[rip+0xadb9]        # 40e022 <_IO_stdin_used@@Base+0x22>
  403269:	call   403360 <main@@Base+0x190>
  40326e:	mov    DWORD PTR [rbp-0x14],eax
  403271:	mov    rdi,QWORD PTR [rbp-0x1b8]
  403278:	call   404ac0 <flatcc_builder_clear@@Base>
  40327d:	mov    eax,DWORD PTR [rbp-0x14]
  403280:	add    rsp,0x1d0
  403287:	pop    rbp
  403288:	ret    
  403289:	nop    DWORD PTR [rax+0x0]
  403290:	push   rbp
  403291:	mov    rbp,rsp
  403294:	sub    rsp,0x10
  403298:	mov    QWORD PTR [rbp-0x8],rdi
  40329c:	mov    rdi,QWORD PTR [rbp-0x8]
  4032a0:	lea    rsi,[rip+0xad7b]        # 40e022 <_IO_stdin_used@@Base+0x22>
  4032a7:	call   4033a0 <main@@Base+0x1d0>
  4032ac:	cmp    eax,0x0
  4032af:	je     4032c2 <main@@Base+0xf2>
  4032b5:	mov    eax,0xffffffff
  4032ba:	mov    DWORD PTR [rbp-0xc],eax
  4032bd:	jmp    4032ce <main@@Base+0xfe>
  4032c2:	mov    rdi,QWORD PTR [rbp-0x8]
  4032c6:	call   4033d0 <main@@Base+0x200>
  4032cb:	mov    DWORD PTR [rbp-0xc],eax
  4032ce:	mov    eax,DWORD PTR [rbp-0xc]
  4032d1:	add    rsp,0x10
  4032d5:	pop    rbp
  4032d6:	ret    
  4032d7:	nop    WORD PTR [rax+rax*1+0x0]
  4032e0:	push   rbp
  4032e1:	mov    rbp,rsp
  4032e4:	sub    rsp,0x20
  4032e8:	mov    QWORD PTR [rbp-0x8],rdi
  4032ec:	mov    QWORD PTR [rbp-0x10],rsi
  4032f0:	mov    rdi,QWORD PTR [rbp-0x8]
  4032f4:	mov    rax,QWORD PTR [rbp-0x8]
  4032f8:	mov    rsi,QWORD PTR [rbp-0x10]
  4032fc:	mov    QWORD PTR [rbp-0x18],rdi
  403300:	mov    rdi,rax
  403303:	call   409520 <flatcc_builder_create_string_str@@Base>
  403308:	mov    rdi,QWORD PTR [rbp-0x18]
  40330c:	mov    esi,eax
  40330e:	call   4033f0 <main@@Base+0x220>
  403313:	add    rsp,0x20
  403317:	pop    rbp
  403318:	ret    
  403319:	nop    DWORD PTR [rax+0x0]
  403320:	push   rbp
  403321:	mov    rbp,rsp
  403324:	sub    rsp,0x10
  403328:	mov    QWORD PTR [rbp-0x8],rdi
  40332c:	mov    rdi,QWORD PTR [rbp-0x8]
  403330:	mov    rax,QWORD PTR [rbp-0x8]
  403334:	mov    QWORD PTR [rbp-0x10],rdi
  403338:	mov    rdi,rax
  40333b:	call   403480 <main@@Base+0x2b0>
  403340:	mov    rdi,QWORD PTR [rbp-0x10]
  403344:	mov    esi,eax
  403346:	call   403450 <main@@Base+0x280>
  40334b:	add    rsp,0x10
  40334f:	pop    rbp
  403350:	ret    
  403351:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40335b:	nop    DWORD PTR [rax+rax*1+0x0]
  403360:	push   rbp
  403361:	mov    rbp,rsp
  403364:	sub    rsp,0x20
  403368:	mov    QWORD PTR [rbp-0x8],rdi
  40336c:	mov    QWORD PTR [rbp-0x10],rsi
  403370:	mov    QWORD PTR [rbp-0x18],rdx
  403374:	mov    rdi,QWORD PTR [rbp-0x8]
  403378:	mov    rsi,QWORD PTR [rbp-0x10]
  40337c:	mov    rdx,QWORD PTR [rbp-0x18]
  403380:	lea    rcx,[rip+0x159]        # 4034e0 <main@@Base+0x310>
  403387:	call   40c5d0 <flatcc_verify_table_as_root@@Base>
  40338c:	add    rsp,0x20
  403390:	pop    rbp
  403391:	ret    
  403392:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40339c:	nop    DWORD PTR [rax+0x0]
  4033a0:	push   rbp
  4033a1:	mov    rbp,rsp
  4033a4:	sub    rsp,0x10
  4033a8:	xor    eax,eax
  4033aa:	mov    QWORD PTR [rbp-0x8],rdi
  4033ae:	mov    QWORD PTR [rbp-0x10],rsi
  4033b2:	mov    rdi,QWORD PTR [rbp-0x8]
  4033b6:	mov    rsi,QWORD PTR [rbp-0x10]
  4033ba:	mov    edx,eax
  4033bc:	mov    ecx,eax
  4033be:	call   405ab0 <flatcc_builder_start_buffer@@Base>
  4033c3:	add    rsp,0x10
  4033c7:	pop    rbp
  4033c8:	ret    
  4033c9:	nop    DWORD PTR [rax+0x0]
  4033d0:	push   rbp
  4033d1:	mov    rbp,rsp
  4033d4:	sub    rsp,0x10
  4033d8:	mov    QWORD PTR [rbp-0x8],rdi
  4033dc:	mov    rdi,QWORD PTR [rbp-0x8]
  4033e0:	mov    esi,0x24
  4033e5:	call   4070f0 <flatcc_builder_start_table@@Base>
  4033ea:	add    rsp,0x10
  4033ee:	pop    rbp
  4033ef:	ret    
  4033f0:	push   rbp
  4033f1:	mov    rbp,rsp
  4033f4:	sub    rsp,0x20
  4033f8:	mov    QWORD PTR [rbp-0x8],rdi
  4033fc:	mov    DWORD PTR [rbp-0xc],esi
  4033ff:	cmp    DWORD PTR [rbp-0xc],0x0
  403403:	je     403438 <main@@Base+0x268>
  403409:	mov    rdi,QWORD PTR [rbp-0x8]
  40340d:	mov    esi,0x3
  403412:	call   4088d0 <flatcc_builder_table_add_offset@@Base>
  403417:	mov    QWORD PTR [rbp-0x18],rax
  40341b:	cmp    rax,0x0
  40341f:	je     403438 <main@@Base+0x268>
  403425:	xor    eax,eax
  403427:	mov    ecx,DWORD PTR [rbp-0xc]
  40342a:	mov    rdx,QWORD PTR [rbp-0x18]
  40342e:	mov    DWORD PTR [rdx],ecx
  403430:	mov    DWORD PTR [rbp-0x1c],eax
  403433:	jmp    403445 <main@@Base+0x275>
  403438:	mov    eax,0xffffffff
  40343d:	mov    DWORD PTR [rbp-0x1c],eax
  403440:	jmp    403445 <main@@Base+0x275>
  403445:	mov    eax,DWORD PTR [rbp-0x1c]
  403448:	add    rsp,0x20
  40344c:	pop    rbp
  40344d:	ret    
  40344e:	xchg   ax,ax
  403450:	push   rbp
  403451:	mov    rbp,rsp
  403454:	sub    rsp,0x10
  403458:	mov    QWORD PTR [rbp-0x8],rdi
  40345c:	mov    DWORD PTR [rbp-0xc],esi
  40345f:	mov    rdi,QWORD PTR [rbp-0x8]
  403463:	mov    esi,DWORD PTR [rbp-0xc]
  403466:	call   405de0 <flatcc_builder_end_buffer@@Base>
  40346b:	add    rsp,0x10
  40346f:	pop    rbp
  403470:	ret    
  403471:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40347b:	nop    DWORD PTR [rax+rax*1+0x0]
  403480:	push   rbp
  403481:	mov    rbp,rsp
  403484:	sub    rsp,0x10
  403488:	mov    QWORD PTR [rbp-0x8],rdi
  40348c:	mov    rdi,QWORD PTR [rbp-0x8]
  403490:	lea    rsi,[rip+0xab7d]        # 40e014 <_IO_stdin_used@@Base+0x14>
  403497:	mov    edx,0x1
  40349c:	call   407ca0 <flatcc_builder_check_required@@Base>
  4034a1:	cmp    eax,0x0
  4034a4:	je     4034af <main@@Base+0x2df>
  4034aa:	jmp    4034ce <main@@Base+0x2fe>
  4034af:	lea    rdi,[rip+0xab71]        # 40e027 <_IO_stdin_used@@Base+0x27>
  4034b6:	lea    rsi,[rip+0xac18]        # 40e0d5 <_IO_stdin_used@@Base+0xd5>
  4034bd:	mov    edx,0x95e
  4034c2:	lea    rcx,[rip+0xac8c]        # 40e155 <_IO_stdin_used@@Base+0x155>
  4034c9:	call   403060 <__assert_fail@plt>
  4034ce:	mov    rdi,QWORD PTR [rbp-0x8]
  4034d2:	call   407d70 <flatcc_builder_end_table@@Base>
  4034d7:	add    rsp,0x10
  4034db:	pop    rbp
  4034dc:	ret    
  4034dd:	nop    DWORD PTR [rax]
  4034e0:	push   rbp
  4034e1:	mov    rbp,rsp
  4034e4:	sub    rsp,0x20
  4034e8:	xor    esi,esi
  4034ea:	mov    QWORD PTR [rbp-0x10],rdi
  4034ee:	mov    rdi,QWORD PTR [rbp-0x10]
  4034f2:	mov    edx,0x20
  4034f7:	mov    ecx,0x10
  4034fc:	call   40b1e0 <flatcc_verify_field@@Base>
  403501:	mov    DWORD PTR [rbp-0x14],eax
  403504:	cmp    eax,0x0
  403507:	je     403518 <main@@Base+0x348>
  40350d:	mov    eax,DWORD PTR [rbp-0x14]
  403510:	mov    DWORD PTR [rbp-0x4],eax
  403513:	jmp    403b63 <main@@Base+0x993>
  403518:	mov    rdi,QWORD PTR [rbp-0x10]
  40351c:	mov    eax,0x2
  403521:	mov    esi,eax
  403523:	mov    edx,0x2
  403528:	mov    ecx,eax
  40352a:	call   40b1e0 <flatcc_verify_field@@Base>
  40352f:	mov    DWORD PTR [rbp-0x14],eax
  403532:	cmp    eax,0x0
  403535:	je     403546 <main@@Base+0x376>
  40353b:	mov    eax,DWORD PTR [rbp-0x14]
  40353e:	mov    DWORD PTR [rbp-0x4],eax
  403541:	jmp    403b63 <main@@Base+0x993>
  403546:	mov    rdi,QWORD PTR [rbp-0x10]
  40354a:	mov    esi,0x1
  40354f:	mov    edx,0x2
  403554:	mov    ecx,0x2
  403559:	call   40b1e0 <flatcc_verify_field@@Base>
  40355e:	mov    DWORD PTR [rbp-0x14],eax
  403561:	cmp    eax,0x0
  403564:	je     403575 <main@@Base+0x3a5>
  40356a:	mov    eax,DWORD PTR [rbp-0x14]
  40356d:	mov    DWORD PTR [rbp-0x4],eax
  403570:	jmp    403b63 <main@@Base+0x993>
  403575:	mov    rdi,QWORD PTR [rbp-0x10]
  403579:	mov    esi,0x3
  40357e:	mov    edx,0x1
  403583:	call   40b3b0 <flatcc_verify_string_field@@Base>
  403588:	mov    DWORD PTR [rbp-0x14],eax
  40358b:	cmp    eax,0x0
  40358e:	je     40359f <main@@Base+0x3cf>
  403594:	mov    eax,DWORD PTR [rbp-0x14]
  403597:	mov    DWORD PTR [rbp-0x4],eax
  40359a:	jmp    403b63 <main@@Base+0x993>
  40359f:	mov    rdi,QWORD PTR [rbp-0x10]
  4035a3:	mov    esi,0x6
  4035a8:	mov    edx,0x1
  4035ad:	mov    ecx,0x1
  4035b2:	call   40b1e0 <flatcc_verify_field@@Base>
  4035b7:	mov    DWORD PTR [rbp-0x14],eax
  4035ba:	cmp    eax,0x0
  4035bd:	je     4035ce <main@@Base+0x3fe>
  4035c3:	mov    eax,DWORD PTR [rbp-0x14]
  4035c6:	mov    DWORD PTR [rbp-0x4],eax
  4035c9:	jmp    403b63 <main@@Base+0x993>
  4035ce:	xor    edx,edx
  4035d0:	mov    rdi,QWORD PTR [rbp-0x10]
  4035d4:	mov    esi,0x5
  4035d9:	mov    ecx,0x1
  4035de:	mov    r8d,0x1
  4035e4:	mov    r9d,0xffffffff
  4035ea:	call   40b6c0 <flatcc_verify_vector_field@@Base>
  4035ef:	mov    DWORD PTR [rbp-0x14],eax
  4035f2:	cmp    eax,0x0
  4035f5:	je     403606 <main@@Base+0x436>
  4035fb:	mov    eax,DWORD PTR [rbp-0x14]
  4035fe:	mov    DWORD PTR [rbp-0x4],eax
  403601:	jmp    403b63 <main@@Base+0x993>
  403606:	xor    edx,edx
  403608:	mov    rdi,QWORD PTR [rbp-0x10]
  40360c:	mov    esi,0xb
  403611:	lea    rcx,[rip+0xfffffffffffffec8]        # 4034e0 <main@@Base+0x310>
  403618:	call   40bdc0 <flatcc_verify_table_vector_field@@Base>
  40361d:	mov    DWORD PTR [rbp-0x14],eax
  403620:	cmp    eax,0x0
  403623:	je     403634 <main@@Base+0x464>
  403629:	mov    eax,DWORD PTR [rbp-0x14]
  40362c:	mov    DWORD PTR [rbp-0x4],eax
  40362f:	jmp    403b63 <main@@Base+0x993>
  403634:	xor    edx,edx
  403636:	mov    rdi,QWORD PTR [rbp-0x10]
  40363a:	mov    esi,0xa
  40363f:	call   40b890 <flatcc_verify_string_vector_field@@Base>
  403644:	mov    DWORD PTR [rbp-0x14],eax
  403647:	cmp    eax,0x0
  40364a:	je     40365b <main@@Base+0x48b>
  403650:	mov    eax,DWORD PTR [rbp-0x14]
  403653:	mov    DWORD PTR [rbp-0x4],eax
  403656:	jmp    403b63 <main@@Base+0x993>
  40365b:	xor    edx,edx
  40365d:	mov    rdi,QWORD PTR [rbp-0x10]
  403661:	mov    esi,0x1c
  403666:	call   40b890 <flatcc_verify_string_vector_field@@Base>
  40366b:	mov    DWORD PTR [rbp-0x14],eax
  40366e:	cmp    eax,0x0
  403671:	je     403682 <main@@Base+0x4b2>
  403677:	mov    eax,DWORD PTR [rbp-0x14]
  40367a:	mov    DWORD PTR [rbp-0x4],eax
  40367d:	jmp    403b63 <main@@Base+0x993>
  403682:	xor    edx,edx
  403684:	mov    rdi,QWORD PTR [rbp-0x10]
  403688:	mov    esi,0x18
  40368d:	mov    ecx,0x1
  403692:	mov    r8d,0x1
  403698:	mov    r9d,0xffffffff
  40369e:	call   40b6c0 <flatcc_verify_vector_field@@Base>
  4036a3:	mov    DWORD PTR [rbp-0x14],eax
  4036a6:	cmp    eax,0x0
  4036a9:	je     4036ba <main@@Base+0x4ea>
  4036af:	mov    eax,DWORD PTR [rbp-0x14]
  4036b2:	mov    DWORD PTR [rbp-0x4],eax
  4036b5:	jmp    403b63 <main@@Base+0x993>
  4036ba:	xor    edx,edx
  4036bc:	mov    rdi,QWORD PTR [rbp-0x10]
  4036c0:	mov    esi,0x1d
  4036c5:	mov    ecx,0x8
  4036ca:	mov    r8d,0x4
  4036d0:	mov    r9d,0x1fffffff
  4036d6:	call   40b6c0 <flatcc_verify_vector_field@@Base>
  4036db:	mov    DWORD PTR [rbp-0x14],eax
  4036de:	cmp    eax,0x0
  4036e1:	je     4036f2 <main@@Base+0x522>
  4036e7:	mov    eax,DWORD PTR [rbp-0x14]
  4036ea:	mov    DWORD PTR [rbp-0x4],eax
  4036ed:	jmp    403b63 <main@@Base+0x993>
  4036f2:	xor    edx,edx
  4036f4:	mov    rdi,QWORD PTR [rbp-0x10]
  4036f8:	mov    esi,0xc
  4036fd:	lea    rcx,[rip+0xfffffffffffffddc]        # 4034e0 <main@@Base+0x310>
  403704:	call   40ba90 <flatcc_verify_table_field@@Base>
  403709:	mov    DWORD PTR [rbp-0x14],eax
  40370c:	cmp    eax,0x0
  40370f:	je     403720 <main@@Base+0x550>
  403715:	mov    eax,DWORD PTR [rbp-0x14]
  403718:	mov    DWORD PTR [rbp-0x4],eax
  40371b:	jmp    403b63 <main@@Base+0x993>
  403720:	xor    edx,edx
  403722:	mov    rdi,QWORD PTR [rbp-0x10]
  403726:	mov    esi,0x8
  40372b:	lea    rcx,[rip+0x43e]        # 403b70 <main@@Base+0x9a0>
  403732:	call   40ca10 <flatcc_verify_union_field@@Base>
  403737:	mov    DWORD PTR [rbp-0x14],eax
  40373a:	cmp    eax,0x0
  40373d:	je     40374e <main@@Base+0x57e>
  403743:	mov    eax,DWORD PTR [rbp-0x14]
  403746:	mov    DWORD PTR [rbp-0x4],eax
  403749:	jmp    403b63 <main@@Base+0x993>
  40374e:	xor    edx,edx
  403750:	mov    rdi,QWORD PTR [rbp-0x10]
  403754:	mov    esi,0x9
  403759:	mov    ecx,0x4
  40375e:	mov    r8d,0x2
  403764:	mov    r9d,0x3fffffff
  40376a:	call   40b6c0 <flatcc_verify_vector_field@@Base>
  40376f:	mov    DWORD PTR [rbp-0x14],eax
  403772:	cmp    eax,0x0
  403775:	je     403786 <main@@Base+0x5b6>
  40377b:	mov    eax,DWORD PTR [rbp-0x14]
  40377e:	mov    DWORD PTR [rbp-0x4],eax
  403781:	jmp    403b63 <main@@Base+0x993>
  403786:	xor    edx,edx
  403788:	mov    rdi,QWORD PTR [rbp-0x10]
  40378c:	mov    esi,0x1f
  403791:	mov    ecx,0x4
  403796:	mov    r8d,0x2
  40379c:	mov    r9d,0x3fffffff
  4037a2:	call   40b6c0 <flatcc_verify_vector_field@@Base>
  4037a7:	mov    DWORD PTR [rbp-0x14],eax
  4037aa:	cmp    eax,0x0
  4037ad:	je     4037be <main@@Base+0x5ee>
  4037b3:	mov    eax,DWORD PTR [rbp-0x14]
  4037b6:	mov    DWORD PTR [rbp-0x4],eax
  4037b9:	jmp    403b63 <main@@Base+0x993>
  4037be:	xor    edx,edx
  4037c0:	xor    eax,eax
  4037c2:	mov    ecx,eax
  4037c4:	mov    rdi,QWORD PTR [rbp-0x10]
  4037c8:	mov    esi,0xd
  4037cd:	mov    r8d,0x1
  4037d3:	lea    r9,[rip+0xfffffffffffffd06]        # 4034e0 <main@@Base+0x310>
  4037da:	call   40c8a0 <flatcc_verify_table_as_nested_root@@Base>
  4037df:	mov    DWORD PTR [rbp-0x14],eax
  4037e2:	cmp    eax,0x0
  4037e5:	je     4037f6 <main@@Base+0x626>
  4037eb:	mov    eax,DWORD PTR [rbp-0x14]
  4037ee:	mov    DWORD PTR [rbp-0x4],eax
  4037f1:	jmp    403b63 <main@@Base+0x993>
  4037f6:	xor    edx,edx
  4037f8:	mov    rdi,QWORD PTR [rbp-0x10]
  4037fc:	mov    esi,0xe
  403801:	lea    rcx,[rip+0x418]        # 403c20 <main@@Base+0xa50>
  403808:	call   40ba90 <flatcc_verify_table_field@@Base>
  40380d:	mov    DWORD PTR [rbp-0x14],eax
  403810:	cmp    eax,0x0
  403813:	je     403824 <main@@Base+0x654>
  403819:	mov    eax,DWORD PTR [rbp-0x14]
  40381c:	mov    DWORD PTR [rbp-0x4],eax
  40381f:	jmp    403b63 <main@@Base+0x993>
  403824:	mov    rdi,QWORD PTR [rbp-0x10]
  403828:	mov    esi,0xf
  40382d:	mov    edx,0x1
  403832:	mov    ecx,0x1
  403837:	call   40b1e0 <flatcc_verify_field@@Base>
  40383c:	mov    DWORD PTR [rbp-0x14],eax
  40383f:	cmp    eax,0x0
  403842:	je     403853 <main@@Base+0x683>
  403848:	mov    eax,DWORD PTR [rbp-0x14]
  40384b:	mov    DWORD PTR [rbp-0x4],eax
  40384e:	jmp    403b63 <main@@Base+0x993>
  403853:	mov    rdi,QWORD PTR [rbp-0x10]
  403857:	mov    esi,0x10
  40385c:	mov    edx,0x4
  403861:	mov    ecx,0x4
  403866:	call   40b1e0 <flatcc_verify_field@@Base>
  40386b:	mov    DWORD PTR [rbp-0x14],eax
  40386e:	cmp    eax,0x0
  403871:	je     403882 <main@@Base+0x6b2>
  403877:	mov    eax,DWORD PTR [rbp-0x14]
  40387a:	mov    DWORD PTR [rbp-0x4],eax
  40387d:	jmp    403b63 <main@@Base+0x993>
  403882:	mov    rdi,QWORD PTR [rbp-0x10]
  403886:	mov    esi,0x11
  40388b:	mov    edx,0x4
  403890:	mov    ecx,0x4
  403895:	call   40b1e0 <flatcc_verify_field@@Base>
  40389a:	mov    DWORD PTR [rbp-0x14],eax
  40389d:	cmp    eax,0x0
  4038a0:	je     4038b1 <main@@Base+0x6e1>
  4038a6:	mov    eax,DWORD PTR [rbp-0x14]
  4038a9:	mov    DWORD PTR [rbp-0x4],eax
  4038ac:	jmp    403b63 <main@@Base+0x993>
  4038b1:	mov    rdi,QWORD PTR [rbp-0x10]
  4038b5:	mov    esi,0x12
  4038ba:	mov    edx,0x8
  4038bf:	mov    ecx,0x8
  4038c4:	call   40b1e0 <flatcc_verify_field@@Base>
  4038c9:	mov    DWORD PTR [rbp-0x14],eax
  4038cc:	cmp    eax,0x0
  4038cf:	je     4038e0 <main@@Base+0x710>
  4038d5:	mov    eax,DWORD PTR [rbp-0x14]
  4038d8:	mov    DWORD PTR [rbp-0x4],eax
  4038db:	jmp    403b63 <main@@Base+0x993>
  4038e0:	mov    rdi,QWORD PTR [rbp-0x10]
  4038e4:	mov    esi,0x13
  4038e9:	mov    edx,0x8
  4038ee:	mov    ecx,0x8
  4038f3:	call   40b1e0 <flatcc_verify_field@@Base>
  4038f8:	mov    DWORD PTR [rbp-0x14],eax
  4038fb:	cmp    eax,0x0
  4038fe:	je     40390f <main@@Base+0x73f>
  403904:	mov    eax,DWORD PTR [rbp-0x14]
  403907:	mov    DWORD PTR [rbp-0x4],eax
  40390a:	jmp    403b63 <main@@Base+0x993>
  40390f:	mov    rdi,QWORD PTR [rbp-0x10]
  403913:	mov    esi,0x14
  403918:	mov    edx,0x4
  40391d:	mov    ecx,0x4
  403922:	call   40b1e0 <flatcc_verify_field@@Base>
  403927:	mov    DWORD PTR [rbp-0x14],eax
  40392a:	cmp    eax,0x0
  40392d:	je     40393e <main@@Base+0x76e>
  403933:	mov    eax,DWORD PTR [rbp-0x14]
  403936:	mov    DWORD PTR [rbp-0x4],eax
  403939:	jmp    403b63 <main@@Base+0x993>
  40393e:	mov    rdi,QWORD PTR [rbp-0x10]
  403942:	mov    esi,0x15
  403947:	mov    edx,0x4
  40394c:	mov    ecx,0x4
  403951:	call   40b1e0 <flatcc_verify_field@@Base>
  403956:	mov    DWORD PTR [rbp-0x14],eax
  403959:	cmp    eax,0x0
  40395c:	je     40396d <main@@Base+0x79d>
  403962:	mov    eax,DWORD PTR [rbp-0x14]
  403965:	mov    DWORD PTR [rbp-0x4],eax
  403968:	jmp    403b63 <main@@Base+0x993>
  40396d:	mov    rdi,QWORD PTR [rbp-0x10]
  403971:	mov    esi,0x16
  403976:	mov    edx,0x8
  40397b:	mov    ecx,0x8
  403980:	call   40b1e0 <flatcc_verify_field@@Base>
  403985:	mov    DWORD PTR [rbp-0x14],eax
  403988:	cmp    eax,0x0
  40398b:	je     40399c <main@@Base+0x7cc>
  403991:	mov    eax,DWORD PTR [rbp-0x14]
  403994:	mov    DWORD PTR [rbp-0x4],eax
  403997:	jmp    403b63 <main@@Base+0x993>
  40399c:	mov    rdi,QWORD PTR [rbp-0x10]
  4039a0:	mov    esi,0x17
  4039a5:	mov    edx,0x8
  4039aa:	mov    ecx,0x8
  4039af:	call   40b1e0 <flatcc_verify_field@@Base>
  4039b4:	mov    DWORD PTR [rbp-0x14],eax
  4039b7:	cmp    eax,0x0
  4039ba:	je     4039cb <main@@Base+0x7fb>
  4039c0:	mov    eax,DWORD PTR [rbp-0x14]
  4039c3:	mov    DWORD PTR [rbp-0x4],eax
  4039c6:	jmp    403b63 <main@@Base+0x993>
  4039cb:	mov    rdi,QWORD PTR [rbp-0x10]
  4039cf:	mov    esi,0x19
  4039d4:	mov    edx,0x4
  4039d9:	mov    ecx,0x4
  4039de:	call   40b1e0 <flatcc_verify_field@@Base>
  4039e3:	mov    DWORD PTR [rbp-0x14],eax
  4039e6:	cmp    eax,0x0
  4039e9:	je     4039fa <main@@Base+0x82a>
  4039ef:	mov    eax,DWORD PTR [rbp-0x14]
  4039f2:	mov    DWORD PTR [rbp-0x4],eax
  4039f5:	jmp    403b63 <main@@Base+0x993>
  4039fa:	mov    rdi,QWORD PTR [rbp-0x10]
  4039fe:	mov    esi,0x1a
  403a03:	mov    edx,0x4
  403a08:	mov    ecx,0x4
  403a0d:	call   40b1e0 <flatcc_verify_field@@Base>
  403a12:	mov    DWORD PTR [rbp-0x14],eax
  403a15:	cmp    eax,0x0
  403a18:	je     403a29 <main@@Base+0x859>
  403a1e:	mov    eax,DWORD PTR [rbp-0x14]
  403a21:	mov    DWORD PTR [rbp-0x4],eax
  403a24:	jmp    403b63 <main@@Base+0x993>
  403a29:	mov    rdi,QWORD PTR [rbp-0x10]
  403a2d:	mov    esi,0x1b
  403a32:	mov    edx,0x4
  403a37:	mov    ecx,0x4
  403a3c:	call   40b1e0 <flatcc_verify_field@@Base>
  403a41:	mov    DWORD PTR [rbp-0x14],eax
  403a44:	cmp    eax,0x0
  403a47:	je     403a58 <main@@Base+0x888>
  403a4d:	mov    eax,DWORD PTR [rbp-0x14]
  403a50:	mov    DWORD PTR [rbp-0x4],eax
  403a53:	jmp    403b63 <main@@Base+0x993>
  403a58:	xor    edx,edx
  403a5a:	mov    rdi,QWORD PTR [rbp-0x10]
  403a5e:	mov    esi,0x1e
  403a63:	mov    ecx,0x1
  403a68:	mov    r8d,0x1
  403a6e:	mov    r9d,0xffffffff
  403a74:	call   40b6c0 <flatcc_verify_vector_field@@Base>
  403a79:	mov    DWORD PTR [rbp-0x14],eax
  403a7c:	cmp    eax,0x0
  403a7f:	je     403a90 <main@@Base+0x8c0>
  403a85:	mov    eax,DWORD PTR [rbp-0x14]
  403a88:	mov    DWORD PTR [rbp-0x4],eax
  403a8b:	jmp    403b63 <main@@Base+0x993>
  403a90:	xor    edx,edx
  403a92:	mov    rdi,QWORD PTR [rbp-0x10]
  403a96:	mov    esi,0x20
  403a9b:	mov    ecx,0x8
  403aa0:	mov    r8d,0x8
  403aa6:	mov    r9d,0x1fffffff
  403aac:	call   40b6c0 <flatcc_verify_vector_field@@Base>
  403ab1:	mov    DWORD PTR [rbp-0x14],eax
  403ab4:	cmp    eax,0x0
  403ab7:	je     403ac8 <main@@Base+0x8f8>
  403abd:	mov    eax,DWORD PTR [rbp-0x14]
  403ac0:	mov    DWORD PTR [rbp-0x4],eax
  403ac3:	jmp    403b63 <main@@Base+0x993>
  403ac8:	xor    edx,edx
  403aca:	mov    rdi,QWORD PTR [rbp-0x10]
  403ace:	mov    esi,0x21
  403ad3:	mov    ecx,0x8
  403ad8:	mov    r8d,0x8
  403ade:	mov    r9d,0x1fffffff
  403ae4:	call   40b6c0 <flatcc_verify_vector_field@@Base>
  403ae9:	mov    DWORD PTR [rbp-0x14],eax
  403aec:	cmp    eax,0x0
  403aef:	je     403b00 <main@@Base+0x930>
  403af5:	mov    eax,DWORD PTR [rbp-0x14]
  403af8:	mov    DWORD PTR [rbp-0x4],eax
  403afb:	jmp    403b63 <main@@Base+0x993>
  403b00:	xor    edx,edx
  403b02:	mov    rdi,QWORD PTR [rbp-0x10]
  403b06:	mov    esi,0x22
  403b0b:	lea    rcx,[rip+0x1ae]        # 403cc0 <main@@Base+0xaf0>
  403b12:	call   40ba90 <flatcc_verify_table_field@@Base>
  403b17:	mov    DWORD PTR [rbp-0x14],eax
  403b1a:	cmp    eax,0x0
  403b1d:	je     403b2e <main@@Base+0x95e>
  403b23:	mov    eax,DWORD PTR [rbp-0x14]
  403b26:	mov    DWORD PTR [rbp-0x4],eax
  403b29:	jmp    403b63 <main@@Base+0x993>
  403b2e:	xor    edx,edx
  403b30:	mov    rdi,QWORD PTR [rbp-0x10]
  403b34:	mov    esi,0x23
  403b39:	lea    rcx,[rip+0x190]        # 403cd0 <main@@Base+0xb00>
  403b40:	call   40ba90 <flatcc_verify_table_field@@Base>
  403b45:	mov    DWORD PTR [rbp-0x14],eax
  403b48:	cmp    eax,0x0
  403b4b:	je     403b5c <main@@Base+0x98c>
  403b51:	mov    eax,DWORD PTR [rbp-0x14]
  403b54:	mov    DWORD PTR [rbp-0x4],eax
  403b57:	jmp    403b63 <main@@Base+0x993>
  403b5c:	mov    DWORD PTR [rbp-0x4],0x0
  403b63:	mov    eax,DWORD PTR [rbp-0x4]
  403b66:	add    rsp,0x20
  403b6a:	pop    rbp
  403b6b:	ret    
  403b6c:	nop    DWORD PTR [rax+0x0]
  403b70:	push   rbp
  403b71:	mov    rbp,rsp
  403b74:	sub    rsp,0x20
  403b78:	mov    QWORD PTR [rbp-0x10],rdi
  403b7c:	mov    rax,QWORD PTR [rbp-0x10]
  403b80:	movzx  ecx,BYTE PTR [rax+0x10]
  403b84:	dec    ecx
  403b86:	mov    eax,ecx
  403b88:	sub    ecx,0x3
  403b8b:	mov    QWORD PTR [rbp-0x18],rax
  403b8f:	ja     403c09 <main@@Base+0xa39>
  403b95:	lea    rax,[rip+0xa468]        # 40e004 <_IO_stdin_used@@Base+0x4>
  403b9c:	mov    rcx,QWORD PTR [rbp-0x18]
  403ba0:	movsxd rdx,DWORD PTR [rax+rcx*4]
  403ba4:	add    rdx,rax
  403ba7:	jmp    rdx
  403ba9:	mov    rdi,QWORD PTR [rbp-0x10]
  403bad:	lea    rsi,[rip+0xfffffffffffff92c]        # 4034e0 <main@@Base+0x310>
  403bb4:	call   40c020 <flatcc_verify_union_table@@Base>
  403bb9:	mov    DWORD PTR [rbp-0x4],eax
  403bbc:	jmp    403c10 <main@@Base+0xa40>
  403bc1:	mov    rdi,QWORD PTR [rbp-0x10]
  403bc5:	lea    rsi,[rip+0x1d4]        # 403da0 <main@@Base+0xbd0>
  403bcc:	call   40c020 <flatcc_verify_union_table@@Base>
  403bd1:	mov    DWORD PTR [rbp-0x4],eax
  403bd4:	jmp    403c10 <main@@Base+0xa40>
  403bd9:	mov    rdi,QWORD PTR [rbp-0x10]
  403bdd:	lea    rsi,[rip+0x29c]        # 403e80 <main@@Base+0xcb0>
  403be4:	call   40c020 <flatcc_verify_union_table@@Base>
  403be9:	mov    DWORD PTR [rbp-0x4],eax
  403bec:	jmp    403c10 <main@@Base+0xa40>
  403bf1:	mov    rdi,QWORD PTR [rbp-0x10]
  403bf5:	lea    rsi,[rip+0x294]        # 403e90 <main@@Base+0xcc0>
  403bfc:	call   40c020 <flatcc_verify_union_table@@Base>
  403c01:	mov    DWORD PTR [rbp-0x4],eax
  403c04:	jmp    403c10 <main@@Base+0xa40>
  403c09:	mov    DWORD PTR [rbp-0x4],0x0
  403c10:	mov    eax,DWORD PTR [rbp-0x4]
  403c13:	add    rsp,0x20
  403c17:	pop    rbp
  403c18:	ret    
  403c19:	nop    DWORD PTR [rax+0x0]
  403c20:	push   rbp
  403c21:	mov    rbp,rsp
  403c24:	sub    rsp,0x20
  403c28:	xor    eax,eax
  403c2a:	mov    QWORD PTR [rbp-0x10],rdi
  403c2e:	mov    rdi,QWORD PTR [rbp-0x10]
  403c32:	mov    esi,eax
  403c34:	mov    edx,eax
  403c36:	call   40b3b0 <flatcc_verify_string_field@@Base>
  403c3b:	mov    DWORD PTR [rbp-0x14],eax
  403c3e:	cmp    eax,0x0
  403c41:	je     403c52 <main@@Base+0xa82>
  403c47:	mov    eax,DWORD PTR [rbp-0x14]
  403c4a:	mov    DWORD PTR [rbp-0x4],eax
  403c4d:	jmp    403cb6 <main@@Base+0xae6>
  403c52:	mov    rdi,QWORD PTR [rbp-0x10]
  403c56:	mov    esi,0x1
  403c5b:	mov    edx,0x8
  403c60:	mov    ecx,0x8
  403c65:	call   40b1e0 <flatcc_verify_field@@Base>
  403c6a:	mov    DWORD PTR [rbp-0x14],eax
  403c6d:	cmp    eax,0x0
  403c70:	je     403c81 <main@@Base+0xab1>
  403c76:	mov    eax,DWORD PTR [rbp-0x14]
  403c79:	mov    DWORD PTR [rbp-0x4],eax
  403c7c:	jmp    403cb6 <main@@Base+0xae6>
  403c81:	mov    rdi,QWORD PTR [rbp-0x10]
  403c85:	mov    eax,0x2
  403c8a:	mov    esi,eax
  403c8c:	mov    edx,0x2
  403c91:	mov    ecx,eax
  403c93:	call   40b1e0 <flatcc_verify_field@@Base>
  403c98:	mov    DWORD PTR [rbp-0x14],eax
  403c9b:	cmp    eax,0x0
  403c9e:	je     403caf <main@@Base+0xadf>
  403ca4:	mov    eax,DWORD PTR [rbp-0x14]
  403ca7:	mov    DWORD PTR [rbp-0x4],eax
  403caa:	jmp    403cb6 <main@@Base+0xae6>
  403caf:	mov    DWORD PTR [rbp-0x4],0x0
  403cb6:	mov    eax,DWORD PTR [rbp-0x4]
  403cb9:	add    rsp,0x20
  403cbd:	pop    rbp
  403cbe:	ret    
  403cbf:	nop
  403cc0:	push   rbp
  403cc1:	mov    rbp,rsp
  403cc4:	xor    eax,eax
  403cc6:	mov    QWORD PTR [rbp-0x8],rdi
  403cca:	pop    rbp
  403ccb:	ret    
  403ccc:	nop    DWORD PTR [rax+0x0]
  403cd0:	push   rbp
  403cd1:	mov    rbp,rsp
  403cd4:	sub    rsp,0x20
  403cd8:	xor    eax,eax
  403cda:	mov    QWORD PTR [rbp-0x10],rdi
  403cde:	mov    rdi,QWORD PTR [rbp-0x10]
  403ce2:	mov    esi,eax
  403ce4:	mov    edx,eax
  403ce6:	mov    ecx,0x1
  403ceb:	mov    r8d,0x1
  403cf1:	mov    r9d,0xffffffff
  403cf7:	call   40b6c0 <flatcc_verify_vector_field@@Base>
  403cfc:	mov    DWORD PTR [rbp-0x14],eax
  403cff:	cmp    eax,0x0
  403d02:	je     403d13 <main@@Base+0xb43>
  403d08:	mov    eax,DWORD PTR [rbp-0x14]
  403d0b:	mov    DWORD PTR [rbp-0x4],eax
  403d0e:	jmp    403d89 <main@@Base+0xbb9>
  403d13:	xor    edx,edx
  403d15:	mov    rdi,QWORD PTR [rbp-0x10]
  403d19:	mov    eax,0x1
  403d1e:	mov    esi,eax
  403d20:	mov    ecx,0x1
  403d25:	mov    r8d,eax
  403d28:	mov    r9d,0xffffffff
  403d2e:	call   40b6c0 <flatcc_verify_vector_field@@Base>
  403d33:	mov    DWORD PTR [rbp-0x14],eax
  403d36:	cmp    eax,0x0
  403d39:	je     403d4a <main@@Base+0xb7a>
  403d3f:	mov    eax,DWORD PTR [rbp-0x14]
  403d42:	mov    DWORD PTR [rbp-0x4],eax
  403d45:	jmp    403d89 <main@@Base+0xbb9>
  403d4a:	xor    edx,edx
  403d4c:	xor    eax,eax
  403d4e:	mov    ecx,eax
  403d50:	mov    rdi,QWORD PTR [rbp-0x10]
  403d54:	mov    esi,0x2
  403d59:	mov    r8d,0x1
  403d5f:	lea    r9,[rip+0xfffffffffffff77a]        # 4034e0 <main@@Base+0x310>
  403d66:	call   40c8a0 <flatcc_verify_table_as_nested_root@@Base>
  403d6b:	mov    DWORD PTR [rbp-0x14],eax
  403d6e:	cmp    eax,0x0
  403d71:	je     403d82 <main@@Base+0xbb2>
  403d77:	mov    eax,DWORD PTR [rbp-0x14]
  403d7a:	mov    DWORD PTR [rbp-0x4],eax
  403d7d:	jmp    403d89 <main@@Base+0xbb9>
  403d82:	mov    DWORD PTR [rbp-0x4],0x0
  403d89:	mov    eax,DWORD PTR [rbp-0x4]
  403d8c:	add    rsp,0x20
  403d90:	pop    rbp
  403d91:	ret    
  403d92:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403d9c:	nop    DWORD PTR [rax+0x0]
  403da0:	push   rbp
  403da1:	mov    rbp,rsp
  403da4:	sub    rsp,0x20
  403da8:	xor    esi,esi
  403daa:	mov    QWORD PTR [rbp-0x10],rdi
  403dae:	mov    rdi,QWORD PTR [rbp-0x10]
  403db2:	mov    edx,0x1
  403db7:	mov    ecx,0x1
  403dbc:	call   40b1e0 <flatcc_verify_field@@Base>
  403dc1:	mov    DWORD PTR [rbp-0x14],eax
  403dc4:	cmp    eax,0x0
  403dc7:	je     403dd8 <main@@Base+0xc08>
  403dcd:	mov    eax,DWORD PTR [rbp-0x14]
  403dd0:	mov    DWORD PTR [rbp-0x4],eax
  403dd3:	jmp    403e6b <main@@Base+0xc9b>
  403dd8:	mov    rdi,QWORD PTR [rbp-0x10]
  403ddc:	mov    eax,0x1
  403de1:	mov    esi,eax
  403de3:	mov    edx,0x1
  403de8:	mov    ecx,eax
  403dea:	call   40b1e0 <flatcc_verify_field@@Base>
  403def:	mov    DWORD PTR [rbp-0x14],eax
  403df2:	cmp    eax,0x0
  403df5:	je     403e06 <main@@Base+0xc36>
  403dfb:	mov    eax,DWORD PTR [rbp-0x14]
  403dfe:	mov    DWORD PTR [rbp-0x4],eax
  403e01:	jmp    403e6b <main@@Base+0xc9b>
  403e06:	mov    rdi,QWORD PTR [rbp-0x10]
  403e0a:	mov    esi,0x2
  403e0f:	mov    edx,0x1
  403e14:	mov    ecx,0x1
  403e19:	call   40b1e0 <flatcc_verify_field@@Base>
  403e1e:	mov    DWORD PTR [rbp-0x14],eax
  403e21:	cmp    eax,0x0
  403e24:	je     403e35 <main@@Base+0xc65>
  403e2a:	mov    eax,DWORD PTR [rbp-0x14]
  403e2d:	mov    DWORD PTR [rbp-0x4],eax
  403e30:	jmp    403e6b <main@@Base+0xc9b>
  403e35:	mov    rdi,QWORD PTR [rbp-0x10]
  403e39:	mov    esi,0x3
  403e3e:	mov    edx,0x1
  403e43:	mov    ecx,0x1
  403e48:	call   40b1e0 <flatcc_verify_field@@Base>
  403e4d:	mov    DWORD PTR [rbp-0x14],eax
  403e50:	cmp    eax,0x0
  403e53:	je     403e64 <main@@Base+0xc94>
  403e59:	mov    eax,DWORD PTR [rbp-0x14]
  403e5c:	mov    DWORD PTR [rbp-0x4],eax
  403e5f:	jmp    403e6b <main@@Base+0xc9b>
  403e64:	mov    DWORD PTR [rbp-0x4],0x0
  403e6b:	mov    eax,DWORD PTR [rbp-0x4]
  403e6e:	add    rsp,0x20
  403e72:	pop    rbp
  403e73:	ret    
  403e74:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403e7e:	xchg   ax,ax
  403e80:	push   rbp
  403e81:	mov    rbp,rsp
  403e84:	xor    eax,eax
  403e86:	mov    QWORD PTR [rbp-0x8],rdi
  403e8a:	pop    rbp
  403e8b:	ret    
  403e8c:	nop    DWORD PTR [rax+0x0]
  403e90:	push   rbp
  403e91:	mov    rbp,rsp
  403e94:	sub    rsp,0x20
  403e98:	xor    eax,eax
  403e9a:	mov    QWORD PTR [rbp-0x10],rdi
  403e9e:	mov    rdi,QWORD PTR [rbp-0x10]
  403ea2:	mov    esi,eax
  403ea4:	mov    edx,eax
  403ea6:	lea    rcx,[rip+0x93]        # 403f40 <main@@Base+0xd70>
  403ead:	call   40ba90 <flatcc_verify_table_field@@Base>
  403eb2:	mov    DWORD PTR [rbp-0x14],eax
  403eb5:	cmp    eax,0x0
  403eb8:	je     403ec9 <main@@Base+0xcf9>
  403ebe:	mov    eax,DWORD PTR [rbp-0x14]
  403ec1:	mov    DWORD PTR [rbp-0x4],eax
  403ec4:	jmp    403f2c <main@@Base+0xd5c>
  403ec9:	xor    edx,edx
  403ecb:	mov    rdi,QWORD PTR [rbp-0x10]
  403ecf:	mov    esi,0x1
  403ed4:	lea    rcx,[rip+0x115]        # 403ff0 <main@@Base+0xe20>
  403edb:	call   40ba90 <flatcc_verify_table_field@@Base>
  403ee0:	mov    DWORD PTR [rbp-0x14],eax
  403ee3:	cmp    eax,0x0
  403ee6:	je     403ef7 <main@@Base+0xd27>
  403eec:	mov    eax,DWORD PTR [rbp-0x14]
  403eef:	mov    DWORD PTR [rbp-0x4],eax
  403ef2:	jmp    403f2c <main@@Base+0xd5c>
  403ef7:	xor    edx,edx
  403ef9:	mov    rdi,QWORD PTR [rbp-0x10]
  403efd:	mov    esi,0x3
  403f02:	lea    rcx,[rip+0xfffffffffffffc67]        # 403b70 <main@@Base+0x9a0>
  403f09:	call   40ccc0 <flatcc_verify_union_vector_field@@Base>
  403f0e:	mov    DWORD PTR [rbp-0x14],eax
  403f11:	cmp    eax,0x0
  403f14:	je     403f25 <main@@Base+0xd55>
  403f1a:	mov    eax,DWORD PTR [rbp-0x14]
  403f1d:	mov    DWORD PTR [rbp-0x4],eax
  403f20:	jmp    403f2c <main@@Base+0xd5c>
  403f25:	mov    DWORD PTR [rbp-0x4],0x0
  403f2c:	mov    eax,DWORD PTR [rbp-0x4]
  403f2f:	add    rsp,0x20
  403f33:	pop    rbp
  403f34:	ret    
  403f35:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403f3f:	nop
  403f40:	push   rbp
  403f41:	mov    rbp,rsp
  403f44:	sub    rsp,0x20
  403f48:	xor    eax,eax
  403f4a:	mov    QWORD PTR [rbp-0x10],rdi
  403f4e:	mov    rdi,QWORD PTR [rbp-0x10]
  403f52:	mov    esi,eax
  403f54:	mov    edx,eax
  403f56:	lea    rcx,[rip+0x1a3]        # 404100 <main@@Base+0xf30>
  403f5d:	call   40ba90 <flatcc_verify_table_field@@Base>
  403f62:	mov    DWORD PTR [rbp-0x14],eax
  403f65:	cmp    eax,0x0
  403f68:	je     403f79 <main@@Base+0xda9>
  403f6e:	mov    eax,DWORD PTR [rbp-0x14]
  403f71:	mov    DWORD PTR [rbp-0x4],eax
  403f74:	jmp    403fdc <main@@Base+0xe0c>
  403f79:	xor    edx,edx
  403f7b:	mov    rdi,QWORD PTR [rbp-0x10]
  403f7f:	mov    esi,0x1
  403f84:	lea    rcx,[rip+0x325]        # 4042b0 <main@@Base+0x10e0>
  403f8b:	call   40ba90 <flatcc_verify_table_field@@Base>
  403f90:	mov    DWORD PTR [rbp-0x14],eax
  403f93:	cmp    eax,0x0
  403f96:	je     403fa7 <main@@Base+0xdd7>
  403f9c:	mov    eax,DWORD PTR [rbp-0x14]
  403f9f:	mov    DWORD PTR [rbp-0x4],eax
  403fa2:	jmp    403fdc <main@@Base+0xe0c>
  403fa7:	xor    edx,edx
  403fa9:	mov    rdi,QWORD PTR [rbp-0x10]
  403fad:	mov    esi,0x2
  403fb2:	lea    rcx,[rip+0x377]        # 404330 <main@@Base+0x1160>
  403fb9:	call   40ba90 <flatcc_verify_table_field@@Base>
  403fbe:	mov    DWORD PTR [rbp-0x14],eax
  403fc1:	cmp    eax,0x0
  403fc4:	je     403fd5 <main@@Base+0xe05>
  403fca:	mov    eax,DWORD PTR [rbp-0x14]
  403fcd:	mov    DWORD PTR [rbp-0x4],eax
  403fd0:	jmp    403fdc <main@@Base+0xe0c>
  403fd5:	mov    DWORD PTR [rbp-0x4],0x0
  403fdc:	mov    eax,DWORD PTR [rbp-0x4]
  403fdf:	add    rsp,0x20
  403fe3:	pop    rbp
  403fe4:	ret    
  403fe5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403fef:	nop
  403ff0:	push   rbp
  403ff1:	mov    rbp,rsp
  403ff4:	sub    rsp,0x20
  403ff8:	xor    edx,edx
  403ffa:	mov    QWORD PTR [rbp-0x10],rdi
  403ffe:	mov    rdi,QWORD PTR [rbp-0x10]
  404002:	mov    esi,0x1
  404007:	lea    rcx,[rip+0x3a2]        # 4043b0 <main@@Base+0x11e0>
  40400e:	call   40ca10 <flatcc_verify_union_field@@Base>
  404013:	mov    DWORD PTR [rbp-0x14],eax
  404016:	cmp    eax,0x0
  404019:	je     40402a <main@@Base+0xe5a>
  40401f:	mov    eax,DWORD PTR [rbp-0x14]
  404022:	mov    DWORD PTR [rbp-0x4],eax
  404025:	jmp    4040e9 <main@@Base+0xf19>
  40402a:	xor    edx,edx
  40402c:	mov    rdi,QWORD PTR [rbp-0x10]
  404030:	mov    esi,0x3
  404035:	lea    rcx,[rip+0x374]        # 4043b0 <main@@Base+0x11e0>
  40403c:	call   40ca10 <flatcc_verify_union_field@@Base>
  404041:	mov    DWORD PTR [rbp-0x14],eax
  404044:	cmp    eax,0x0
  404047:	je     404058 <main@@Base+0xe88>
  40404d:	mov    eax,DWORD PTR [rbp-0x14]
  404050:	mov    DWORD PTR [rbp-0x4],eax
  404053:	jmp    4040e9 <main@@Base+0xf19>
  404058:	xor    edx,edx
  40405a:	mov    rdi,QWORD PTR [rbp-0x10]
  40405e:	mov    esi,0x5
  404063:	lea    rcx,[rip+0x346]        # 4043b0 <main@@Base+0x11e0>
  40406a:	call   40ca10 <flatcc_verify_union_field@@Base>
  40406f:	mov    DWORD PTR [rbp-0x14],eax
  404072:	cmp    eax,0x0
  404075:	je     404086 <main@@Base+0xeb6>
  40407b:	mov    eax,DWORD PTR [rbp-0x14]
  40407e:	mov    DWORD PTR [rbp-0x4],eax
  404081:	jmp    4040e9 <main@@Base+0xf19>
  404086:	xor    edx,edx
  404088:	mov    rdi,QWORD PTR [rbp-0x10]
  40408c:	mov    esi,0x7
  404091:	lea    rcx,[rip+0x318]        # 4043b0 <main@@Base+0x11e0>
  404098:	call   40ca10 <flatcc_verify_union_field@@Base>
  40409d:	mov    DWORD PTR [rbp-0x14],eax
  4040a0:	cmp    eax,0x0
  4040a3:	je     4040b4 <main@@Base+0xee4>
  4040a9:	mov    eax,DWORD PTR [rbp-0x14]
  4040ac:	mov    DWORD PTR [rbp-0x4],eax
  4040af:	jmp    4040e9 <main@@Base+0xf19>
  4040b4:	xor    edx,edx
  4040b6:	mov    rdi,QWORD PTR [rbp-0x10]
  4040ba:	mov    esi,0x9
  4040bf:	lea    rcx,[rip+0x2ea]        # 4043b0 <main@@Base+0x11e0>
  4040c6:	call   40ccc0 <flatcc_verify_union_vector_field@@Base>
  4040cb:	mov    DWORD PTR [rbp-0x14],eax
  4040ce:	cmp    eax,0x0
  4040d1:	je     4040e2 <main@@Base+0xf12>
  4040d7:	mov    eax,DWORD PTR [rbp-0x14]
  4040da:	mov    DWORD PTR [rbp-0x4],eax
  4040dd:	jmp    4040e9 <main@@Base+0xf19>
  4040e2:	mov    DWORD PTR [rbp-0x4],0x0
  4040e9:	mov    eax,DWORD PTR [rbp-0x4]
  4040ec:	add    rsp,0x20
  4040f0:	pop    rbp
  4040f1:	ret    
  4040f2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4040fc:	nop    DWORD PTR [rax+0x0]
  404100:	push   rbp
  404101:	mov    rbp,rsp
  404104:	sub    rsp,0x20
  404108:	xor    eax,eax
  40410a:	mov    QWORD PTR [rbp-0x10],rdi
  40410e:	mov    rdi,QWORD PTR [rbp-0x10]
  404112:	mov    esi,eax
  404114:	mov    edx,eax
  404116:	call   40b3b0 <flatcc_verify_string_field@@Base>
  40411b:	mov    DWORD PTR [rbp-0x14],eax
  40411e:	cmp    eax,0x0
  404121:	je     404132 <main@@Base+0xf62>
  404127:	mov    eax,DWORD PTR [rbp-0x14]
  40412a:	mov    DWORD PTR [rbp-0x4],eax
  40412d:	jmp    4042a1 <main@@Base+0x10d1>
  404132:	mov    rdi,QWORD PTR [rbp-0x10]
  404136:	mov    esi,0x1
  40413b:	mov    edx,0x4
  404140:	mov    ecx,0x4
  404145:	call   40b1e0 <flatcc_verify_field@@Base>
  40414a:	mov    DWORD PTR [rbp-0x14],eax
  40414d:	cmp    eax,0x0
  404150:	je     404161 <main@@Base+0xf91>
  404156:	mov    eax,DWORD PTR [rbp-0x14]
  404159:	mov    DWORD PTR [rbp-0x4],eax
  40415c:	jmp    4042a1 <main@@Base+0x10d1>
  404161:	xor    edx,edx
  404163:	mov    rdi,QWORD PTR [rbp-0x10]
  404167:	mov    esi,0x2
  40416c:	call   40b3b0 <flatcc_verify_string_field@@Base>
  404171:	mov    DWORD PTR [rbp-0x14],eax
  404174:	cmp    eax,0x0
  404177:	je     404188 <main@@Base+0xfb8>
  40417d:	mov    eax,DWORD PTR [rbp-0x14]
  404180:	mov    DWORD PTR [rbp-0x4],eax
  404183:	jmp    4042a1 <main@@Base+0x10d1>
  404188:	mov    rdi,QWORD PTR [rbp-0x10]
  40418c:	mov    esi,0x3
  404191:	mov    edx,0x8
  404196:	mov    ecx,0x8
  40419b:	call   40b1e0 <flatcc_verify_field@@Base>
  4041a0:	mov    DWORD PTR [rbp-0x14],eax
  4041a3:	cmp    eax,0x0
  4041a6:	je     4041b7 <main@@Base+0xfe7>
  4041ac:	mov    eax,DWORD PTR [rbp-0x14]
  4041af:	mov    DWORD PTR [rbp-0x4],eax
  4041b2:	jmp    4042a1 <main@@Base+0x10d1>
  4041b7:	xor    edx,edx
  4041b9:	mov    rdi,QWORD PTR [rbp-0x10]
  4041bd:	mov    esi,0x4
  4041c2:	call   40b3b0 <flatcc_verify_string_field@@Base>
  4041c7:	mov    DWORD PTR [rbp-0x14],eax
  4041ca:	cmp    eax,0x0
  4041cd:	je     4041de <main@@Base+0x100e>
  4041d3:	mov    eax,DWORD PTR [rbp-0x14]
  4041d6:	mov    DWORD PTR [rbp-0x4],eax
  4041d9:	jmp    4042a1 <main@@Base+0x10d1>
  4041de:	mov    rdi,QWORD PTR [rbp-0x10]
  4041e2:	mov    esi,0x5
  4041e7:	mov    edx,0x8
  4041ec:	mov    ecx,0x8
  4041f1:	call   40b1e0 <flatcc_verify_field@@Base>
  4041f6:	mov    DWORD PTR [rbp-0x14],eax
  4041f9:	cmp    eax,0x0
  4041fc:	je     40420d <main@@Base+0x103d>
  404202:	mov    eax,DWORD PTR [rbp-0x14]
  404205:	mov    DWORD PTR [rbp-0x4],eax
  404208:	jmp    4042a1 <main@@Base+0x10d1>
  40420d:	mov    rdi,QWORD PTR [rbp-0x10]
  404211:	mov    esi,0x6
  404216:	mov    edx,0x4
  40421b:	mov    ecx,0x4
  404220:	call   40b1e0 <flatcc_verify_field@@Base>
  404225:	mov    DWORD PTR [rbp-0x14],eax
  404228:	cmp    eax,0x0
  40422b:	je     40423c <main@@Base+0x106c>
  404231:	mov    eax,DWORD PTR [rbp-0x14]
  404234:	mov    DWORD PTR [rbp-0x4],eax
  404237:	jmp    4042a1 <main@@Base+0x10d1>
  40423c:	mov    rdi,QWORD PTR [rbp-0x10]
  404240:	mov    esi,0x7
  404245:	mov    edx,0x8
  40424a:	mov    ecx,0x8
  40424f:	call   40b1e0 <flatcc_verify_field@@Base>
  404254:	mov    DWORD PTR [rbp-0x14],eax
  404257:	cmp    eax,0x0
  40425a:	je     40426b <main@@Base+0x109b>
  404260:	mov    eax,DWORD PTR [rbp-0x14]
  404263:	mov    DWORD PTR [rbp-0x4],eax
  404266:	jmp    4042a1 <main@@Base+0x10d1>
  40426b:	mov    rdi,QWORD PTR [rbp-0x10]
  40426f:	mov    esi,0x8
  404274:	mov    edx,0x4
  404279:	mov    ecx,0x4
  40427e:	call   40b1e0 <flatcc_verify_field@@Base>
  404283:	mov    DWORD PTR [rbp-0x14],eax
  404286:	cmp    eax,0x0
  404289:	je     40429a <main@@Base+0x10ca>
  40428f:	mov    eax,DWORD PTR [rbp-0x14]
  404292:	mov    DWORD PTR [rbp-0x4],eax
  404295:	jmp    4042a1 <main@@Base+0x10d1>
  40429a:	mov    DWORD PTR [rbp-0x4],0x0
  4042a1:	mov    eax,DWORD PTR [rbp-0x4]
  4042a4:	add    rsp,0x20
  4042a8:	pop    rbp
  4042a9:	ret    
  4042aa:	nop    WORD PTR [rax+rax*1+0x0]
  4042b0:	push   rbp
  4042b1:	mov    rbp,rsp
  4042b4:	sub    rsp,0x20
  4042b8:	xor    esi,esi
  4042ba:	mov    QWORD PTR [rbp-0x10],rdi
  4042be:	mov    rdi,QWORD PTR [rbp-0x10]
  4042c2:	mov    edx,0x8
  4042c7:	mov    ecx,0x8
  4042cc:	call   40b1e0 <flatcc_verify_field@@Base>
  4042d1:	mov    DWORD PTR [rbp-0x14],eax
  4042d4:	cmp    eax,0x0
  4042d7:	je     4042e8 <main@@Base+0x1118>
  4042dd:	mov    eax,DWORD PTR [rbp-0x14]
  4042e0:	mov    DWORD PTR [rbp-0x4],eax
  4042e3:	jmp    40431e <main@@Base+0x114e>
  4042e8:	mov    rdi,QWORD PTR [rbp-0x10]
  4042ec:	mov    esi,0x1
  4042f1:	mov    edx,0x4
  4042f6:	mov    ecx,0x4
  4042fb:	call   40b1e0 <flatcc_verify_field@@Base>
  404300:	mov    DWORD PTR [rbp-0x14],eax
  404303:	cmp    eax,0x0
  404306:	je     404317 <main@@Base+0x1147>
  40430c:	mov    eax,DWORD PTR [rbp-0x14]
  40430f:	mov    DWORD PTR [rbp-0x4],eax
  404312:	jmp    40431e <main@@Base+0x114e>
  404317:	mov    DWORD PTR [rbp-0x4],0x0
  40431e:	mov    eax,DWORD PTR [rbp-0x4]
  404321:	add    rsp,0x20
  404325:	pop    rbp
  404326:	ret    
  404327:	nop    WORD PTR [rax+rax*1+0x0]
  404330:	push   rbp
  404331:	mov    rbp,rsp
  404334:	sub    rsp,0x20
  404338:	xor    esi,esi
  40433a:	mov    QWORD PTR [rbp-0x10],rdi
  40433e:	mov    rdi,QWORD PTR [rbp-0x10]
  404342:	mov    edx,0x8
  404347:	mov    ecx,0x8
  40434c:	call   40b1e0 <flatcc_verify_field@@Base>
  404351:	mov    DWORD PTR [rbp-0x14],eax
  404354:	cmp    eax,0x0
  404357:	je     404368 <main@@Base+0x1198>
  40435d:	mov    eax,DWORD PTR [rbp-0x14]
  404360:	mov    DWORD PTR [rbp-0x4],eax
  404363:	jmp    40439e <main@@Base+0x11ce>
  404368:	mov    rdi,QWORD PTR [rbp-0x10]
  40436c:	mov    esi,0x1
  404371:	mov    edx,0x4
  404376:	mov    ecx,0x4
  40437b:	call   40b1e0 <flatcc_verify_field@@Base>
  404380:	mov    DWORD PTR [rbp-0x14],eax
  404383:	cmp    eax,0x0
  404386:	je     404397 <main@@Base+0x11c7>
  40438c:	mov    eax,DWORD PTR [rbp-0x14]
  40438f:	mov    DWORD PTR [rbp-0x4],eax
  404392:	jmp    40439e <main@@Base+0x11ce>
  404397:	mov    DWORD PTR [rbp-0x4],0x0
  40439e:	mov    eax,DWORD PTR [rbp-0x4]
  4043a1:	add    rsp,0x20
  4043a5:	pop    rbp
  4043a6:	ret    
  4043a7:	nop    WORD PTR [rax+rax*1+0x0]
  4043b0:	push   rbp
  4043b1:	mov    rbp,rsp
  4043b4:	sub    rsp,0x20
  4043b8:	mov    QWORD PTR [rbp-0x10],rdi
  4043bc:	mov    rax,QWORD PTR [rbp-0x10]
  4043c0:	movzx  ecx,BYTE PTR [rax+0x10]
  4043c4:	mov    edx,ecx
  4043c6:	sub    edx,0x2
  4043c9:	mov    DWORD PTR [rbp-0x14],ecx
  4043cc:	je     40442e <main@@Base+0x125e>
  4043d2:	jmp    4043d7 <main@@Base+0x1207>
  4043d7:	mov    eax,DWORD PTR [rbp-0x14]
  4043da:	sub    eax,0x8
  4043dd:	je     404446 <main@@Base+0x1276>
  4043e3:	jmp    4043e8 <main@@Base+0x1218>
  4043e8:	mov    eax,DWORD PTR [rbp-0x14]
  4043eb:	sub    eax,0x9
  4043ee:	je     404461 <main@@Base+0x1291>
  4043f4:	jmp    4043f9 <main@@Base+0x1229>
  4043f9:	mov    eax,DWORD PTR [rbp-0x14]
  4043fc:	sub    eax,0xa
  4043ff:	je     40447c <main@@Base+0x12ac>
  404405:	jmp    40440a <main@@Base+0x123a>
  40440a:	mov    eax,DWORD PTR [rbp-0x14]
  40440d:	sub    eax,0xb
  404410:	je     404497 <main@@Base+0x12c7>
  404416:	jmp    40441b <main@@Base+0x124b>
  40441b:	mov    eax,DWORD PTR [rbp-0x14]
  40441e:	sub    eax,0xff
  404423:	je     4044a8 <main@@Base+0x12d8>
  404429:	jmp    4044b9 <main@@Base+0x12e9>
  40442e:	mov    rdi,QWORD PTR [rbp-0x10]
  404432:	lea    rsi,[rip+0x97]        # 4044d0 <main@@Base+0x1300>
  404439:	call   40c020 <flatcc_verify_union_table@@Base>
  40443e:	mov    DWORD PTR [rbp-0x4],eax
  404441:	jmp    4044c0 <main@@Base+0x12f0>
  404446:	mov    rdi,QWORD PTR [rbp-0x10]
  40444a:	mov    esi,0x2
  40444f:	mov    edx,0x2
  404454:	call   40c070 <flatcc_verify_union_struct@@Base>
  404459:	mov    DWORD PTR [rbp-0x4],eax
  40445c:	jmp    4044c0 <main@@Base+0x12f0>
  404461:	mov    rdi,QWORD PTR [rbp-0x10]
  404465:	mov    esi,0x4
  40446a:	mov    edx,0x4
  40446f:	call   40c070 <flatcc_verify_union_struct@@Base>
  404474:	mov    DWORD PTR [rbp-0x4],eax
  404477:	jmp    4044c0 <main@@Base+0x12f0>
  40447c:	mov    rdi,QWORD PTR [rbp-0x10]
  404480:	mov    esi,0x4
  404485:	mov    edx,0x4
  40448a:	call   40c070 <flatcc_verify_union_struct@@Base>
  40448f:	mov    DWORD PTR [rbp-0x4],eax
  404492:	jmp    4044c0 <main@@Base+0x12f0>
  404497:	mov    rdi,QWORD PTR [rbp-0x10]
  40449b:	call   40c1b0 <flatcc_verify_union_string@@Base>
  4044a0:	mov    DWORD PTR [rbp-0x4],eax
  4044a3:	jmp    4044c0 <main@@Base+0x12f0>
  4044a8:	mov    rdi,QWORD PTR [rbp-0x10]
  4044ac:	call   40c1b0 <flatcc_verify_union_string@@Base>
  4044b1:	mov    DWORD PTR [rbp-0x4],eax
  4044b4:	jmp    4044c0 <main@@Base+0x12f0>
  4044b9:	mov    DWORD PTR [rbp-0x4],0x0
  4044c0:	mov    eax,DWORD PTR [rbp-0x4]
  4044c3:	add    rsp,0x20
  4044c7:	pop    rbp
  4044c8:	ret    
  4044c9:	nop    DWORD PTR [rax+0x0]
  4044d0:	push   rbp
  4044d1:	mov    rbp,rsp
  4044d4:	sub    rsp,0x20
  4044d8:	xor    esi,esi
  4044da:	mov    QWORD PTR [rbp-0x10],rdi
  4044de:	mov    rdi,QWORD PTR [rbp-0x10]
  4044e2:	mov    edx,0x4
  4044e7:	mov    ecx,0x4
  4044ec:	call   40b1e0 <flatcc_verify_field@@Base>
  4044f1:	mov    DWORD PTR [rbp-0x14],eax
  4044f4:	cmp    eax,0x0
  4044f7:	je     404508 <main@@Base+0x1338>
  4044fd:	mov    eax,DWORD PTR [rbp-0x14]
  404500:	mov    DWORD PTR [rbp-0x4],eax
  404503:	jmp    40450f <main@@Base+0x133f>
  404508:	mov    DWORD PTR [rbp-0x4],0x0
  40450f:	mov    eax,DWORD PTR [rbp-0x4]
  404512:	add    rsp,0x20
  404516:	pop    rbp
  404517:	ret    
  404518:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000404520 <flatcc_builder_default_alloc@@Base>:
  404520:	push   rbp
  404521:	mov    rbp,rsp
  404524:	sub    rsp,0x40
  404528:	mov    QWORD PTR [rbp-0x10],rdi
  40452c:	mov    QWORD PTR [rbp-0x18],rsi
  404530:	mov    QWORD PTR [rbp-0x20],rdx
  404534:	mov    DWORD PTR [rbp-0x24],ecx
  404537:	mov    DWORD PTR [rbp-0x28],r8d
  40453b:	cmp    QWORD PTR [rbp-0x20],0x0
  404540:	jne    404583 <flatcc_builder_default_alloc@@Base+0x63>
  404546:	mov    rax,QWORD PTR [rbp-0x18]
  40454a:	cmp    QWORD PTR [rax],0x0
  40454e:	je     404577 <flatcc_builder_default_alloc@@Base+0x57>
  404554:	mov    rax,QWORD PTR [rbp-0x18]
  404558:	mov    rdi,QWORD PTR [rax]
  40455b:	call   403030 <free@plt>
  404560:	mov    rax,QWORD PTR [rbp-0x18]
  404564:	mov    QWORD PTR [rax],0x0
  40456b:	mov    rax,QWORD PTR [rbp-0x18]
  40456f:	mov    QWORD PTR [rax+0x8],0x0
  404577:	mov    DWORD PTR [rbp-0x4],0x0
  40457e:	jmp    4046c8 <flatcc_builder_default_alloc@@Base+0x1a8>
  404583:	mov    eax,DWORD PTR [rbp-0x28]
  404586:	dec    eax
  404588:	mov    ecx,eax
  40458a:	sub    eax,0x6
  40458d:	mov    QWORD PTR [rbp-0x40],rcx
  404591:	ja     4045df <flatcc_builder_default_alloc@@Base+0xbf>
  404597:	lea    rax,[rip+0x9c12]        # 40e1b0 <_IO_stdin_used@@Base+0x1b0>
  40459e:	mov    rcx,QWORD PTR [rbp-0x40]
  4045a2:	movsxd rdx,DWORD PTR [rax+rcx*4]
  4045a6:	add    rdx,rax
  4045a9:	jmp    rdx
  4045ab:	mov    QWORD PTR [rbp-0x38],0x100
  4045b3:	jmp    4045e7 <flatcc_builder_default_alloc@@Base+0xc7>
  4045b8:	mov    rax,QWORD PTR [rbp-0x20]
  4045bc:	mov    QWORD PTR [rbp-0x38],rax
  4045c0:	jmp    4045e7 <flatcc_builder_default_alloc@@Base+0xc7>
  4045c5:	mov    QWORD PTR [rbp-0x38],0x120
  4045cd:	jmp    4045e7 <flatcc_builder_default_alloc@@Base+0xc7>
  4045d2:	mov    QWORD PTR [rbp-0x38],0x40
  4045da:	jmp    4045e7 <flatcc_builder_default_alloc@@Base+0xc7>
  4045df:	mov    QWORD PTR [rbp-0x38],0x20
  4045e7:	jmp    4045ec <flatcc_builder_default_alloc@@Base+0xcc>
  4045ec:	mov    rax,QWORD PTR [rbp-0x38]
  4045f0:	cmp    rax,QWORD PTR [rbp-0x20]
  4045f4:	jae    40460b <flatcc_builder_default_alloc@@Base+0xeb>
  4045fa:	mov    rax,QWORD PTR [rbp-0x38]
  4045fe:	shl    rax,0x1
  404602:	mov    QWORD PTR [rbp-0x38],rax
  404606:	jmp    4045ec <flatcc_builder_default_alloc@@Base+0xcc>
  40460b:	mov    rax,QWORD PTR [rbp-0x20]
  40460f:	mov    rcx,QWORD PTR [rbp-0x18]
  404613:	cmp    rax,QWORD PTR [rcx+0x8]
  404617:	ja     40463f <flatcc_builder_default_alloc@@Base+0x11f>
  40461d:	mov    rax,QWORD PTR [rbp-0x18]
  404621:	mov    rax,QWORD PTR [rax+0x8]
  404625:	shr    rax,0x1
  404629:	cmp    rax,QWORD PTR [rbp-0x38]
  40462d:	jb     40463f <flatcc_builder_default_alloc@@Base+0x11f>
  404633:	mov    DWORD PTR [rbp-0x4],0x0
  40463a:	jmp    4046c8 <flatcc_builder_default_alloc@@Base+0x1a8>
  40463f:	mov    rax,QWORD PTR [rbp-0x18]
  404643:	mov    rdi,QWORD PTR [rax]
  404646:	mov    rsi,QWORD PTR [rbp-0x38]
  40464a:	call   4030c0 <realloc@plt>
  40464f:	mov    QWORD PTR [rbp-0x30],rax
  404653:	cmp    rax,0x0
  404657:	jne    404669 <flatcc_builder_default_alloc@@Base+0x149>
  40465d:	mov    DWORD PTR [rbp-0x4],0xffffffff
  404664:	jmp    4046c8 <flatcc_builder_default_alloc@@Base+0x1a8>
  404669:	cmp    DWORD PTR [rbp-0x24],0x0
  40466d:	je     4046aa <flatcc_builder_default_alloc@@Base+0x18a>
  404673:	mov    rax,QWORD PTR [rbp-0x18]
  404677:	mov    rax,QWORD PTR [rax+0x8]
  40467b:	cmp    rax,QWORD PTR [rbp-0x38]
  40467f:	jae    4046aa <flatcc_builder_default_alloc@@Base+0x18a>
  404685:	xor    esi,esi
  404687:	mov    rax,QWORD PTR [rbp-0x30]
  40468b:	mov    rcx,QWORD PTR [rbp-0x18]
  40468f:	add    rax,QWORD PTR [rcx+0x8]
  404693:	mov    rcx,QWORD PTR [rbp-0x38]
  404697:	mov    rdx,QWORD PTR [rbp-0x18]
  40469b:	sub    rcx,QWORD PTR [rdx+0x8]
  40469f:	mov    rdi,rax
  4046a2:	mov    rdx,rcx
  4046a5:	call   403070 <memset@plt>
  4046aa:	mov    rax,QWORD PTR [rbp-0x30]
  4046ae:	mov    rcx,QWORD PTR [rbp-0x18]
  4046b2:	mov    QWORD PTR [rcx],rax
  4046b5:	mov    rax,QWORD PTR [rbp-0x38]
  4046b9:	mov    rcx,QWORD PTR [rbp-0x18]
  4046bd:	mov    QWORD PTR [rcx+0x8],rax
  4046c1:	mov    DWORD PTR [rbp-0x4],0x0
  4046c8:	mov    eax,DWORD PTR [rbp-0x4]
  4046cb:	add    rsp,0x40
  4046cf:	pop    rbp
  4046d0:	ret    
  4046d1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4046db:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004046e0 <flatcc_builder_flush_vtable_cache@@Base>:
  4046e0:	push   rbp
  4046e1:	mov    rbp,rsp
  4046e4:	sub    rsp,0x10
  4046e8:	mov    QWORD PTR [rbp-0x8],rdi
  4046ec:	mov    rax,QWORD PTR [rbp-0x8]
  4046f0:	add    rax,0x58
  4046f6:	add    rax,0x50
  4046fc:	mov    QWORD PTR [rbp-0x10],rax
  404700:	mov    rax,QWORD PTR [rbp-0x8]
  404704:	cmp    QWORD PTR [rax+0xd8],0x0
  40470c:	jne    404717 <flatcc_builder_flush_vtable_cache@@Base+0x37>
  404712:	jmp    404749 <flatcc_builder_flush_vtable_cache@@Base+0x69>
  404717:	xor    esi,esi
  404719:	mov    rax,QWORD PTR [rbp-0x10]
  40471d:	mov    rdi,QWORD PTR [rax]
  404720:	mov    rax,QWORD PTR [rbp-0x10]
  404724:	mov    rdx,QWORD PTR [rax+0x8]
  404728:	call   403070 <memset@plt>
  40472d:	mov    rax,QWORD PTR [rbp-0x8]
  404731:	mov    DWORD PTR [rax+0xe4],0x10
  40473b:	mov    rax,QWORD PTR [rbp-0x8]
  40473f:	mov    DWORD PTR [rax+0xe0],0x0
  404749:	add    rsp,0x10
  40474d:	pop    rbp
  40474e:	ret    
  40474f:	nop

0000000000404750 <flatcc_builder_custom_init@@Base>:
  404750:	push   rbp
  404751:	mov    rbp,rsp
  404754:	sub    rsp,0x30
  404758:	xor    eax,eax
  40475a:	mov    QWORD PTR [rbp-0x8],rdi
  40475e:	mov    QWORD PTR [rbp-0x10],rsi
  404762:	mov    QWORD PTR [rbp-0x18],rdx
  404766:	mov    QWORD PTR [rbp-0x20],rcx
  40476a:	mov    QWORD PTR [rbp-0x28],r8
  40476e:	mov    rcx,QWORD PTR [rbp-0x8]
  404772:	mov    rdi,rcx
  404775:	mov    esi,eax
  404777:	mov    edx,0x188
  40477c:	call   403070 <memset@plt>
  404781:	cmp    QWORD PTR [rbp-0x10],0x0
  404786:	jne    4047b3 <flatcc_builder_custom_init@@Base+0x63>
  40478c:	lea    rax,[rip+0x5e5d]        # 40a5f0 <flatcc_emitter@@Base>
  404793:	mov    rcx,QWORD PTR [rbp-0x8]
  404797:	mov    DWORD PTR [rcx+0x128],0x1
  4047a1:	mov    QWORD PTR [rbp-0x10],rax
  4047a5:	mov    rax,QWORD PTR [rbp-0x8]
  4047a9:	add    rax,0x130
  4047af:	mov    QWORD PTR [rbp-0x18],rax
  4047b3:	cmp    QWORD PTR [rbp-0x20],0x0
  4047b8:	jne    4047c9 <flatcc_builder_custom_init@@Base+0x79>
  4047be:	lea    rax,[rip+0xfffffffffffffd5b]        # 404520 <flatcc_builder_default_alloc@@Base>
  4047c5:	mov    QWORD PTR [rbp-0x20],rax
  4047c9:	xor    eax,eax
  4047cb:	mov    rcx,QWORD PTR [rbp-0x28]
  4047cf:	mov    rdx,QWORD PTR [rbp-0x8]
  4047d3:	mov    QWORD PTR [rdx+0x40],rcx
  4047d7:	mov    rcx,QWORD PTR [rbp-0x20]
  4047db:	mov    rdx,QWORD PTR [rbp-0x8]
  4047df:	mov    QWORD PTR [rdx+0x50],rcx
  4047e3:	mov    rcx,QWORD PTR [rbp-0x18]
  4047e7:	mov    rdx,QWORD PTR [rbp-0x8]
  4047eb:	mov    QWORD PTR [rdx+0x38],rcx
  4047ef:	mov    rcx,QWORD PTR [rbp-0x10]
  4047f3:	mov    rdx,QWORD PTR [rbp-0x8]
  4047f7:	mov    QWORD PTR [rdx+0x48],rcx
  4047fb:	add    rsp,0x30
  4047ff:	pop    rbp
  404800:	ret    
  404801:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40480b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000404810 <flatcc_builder_init@@Base>:
  404810:	push   rbp
  404811:	mov    rbp,rsp
  404814:	sub    rsp,0x10
  404818:	xor    eax,eax
  40481a:	mov    ecx,eax
  40481c:	mov    QWORD PTR [rbp-0x8],rdi
  404820:	mov    rdi,QWORD PTR [rbp-0x8]
  404824:	mov    rsi,rcx
  404827:	mov    rdx,rcx
  40482a:	mov    QWORD PTR [rbp-0x10],rcx
  40482e:	mov    r8,QWORD PTR [rbp-0x10]
  404832:	call   404750 <flatcc_builder_custom_init@@Base>
  404837:	add    rsp,0x10
  40483b:	pop    rbp
  40483c:	ret    
  40483d:	nop    DWORD PTR [rax]

0000000000404840 <flatcc_builder_custom_reset@@Base>:
  404840:	push   rbp
  404841:	mov    rbp,rsp
  404844:	sub    rsp,0x30
  404848:	mov    QWORD PTR [rbp-0x10],rdi
  40484c:	mov    DWORD PTR [rbp-0x14],esi
  40484f:	mov    DWORD PTR [rbp-0x18],edx
  404852:	mov    DWORD PTR [rbp-0x24],0x0
  404859:	cmp    DWORD PTR [rbp-0x24],0x8
  40485d:	jge    40493d <flatcc_builder_custom_reset@@Base+0xfd>
  404863:	mov    rax,QWORD PTR [rbp-0x10]
  404867:	add    rax,0x58
  40486d:	movsxd rcx,DWORD PTR [rbp-0x24]
  404871:	shl    rcx,0x4
  404875:	add    rax,rcx
  404878:	mov    QWORD PTR [rbp-0x20],rax
  40487c:	mov    rax,QWORD PTR [rbp-0x20]
  404880:	cmp    QWORD PTR [rax],0x0
  404884:	je     4048f2 <flatcc_builder_custom_reset@@Base+0xb2>
  40488a:	cmp    DWORD PTR [rbp-0x24],0x5
  40488e:	je     4048d7 <flatcc_builder_custom_reset@@Base+0x97>
  404894:	cmp    DWORD PTR [rbp-0x18],0x0
  404898:	je     4048d7 <flatcc_builder_custom_reset@@Base+0x97>
  40489e:	mov    rax,QWORD PTR [rbp-0x10]
  4048a2:	mov    rax,QWORD PTR [rax+0x50]
  4048a6:	mov    rcx,QWORD PTR [rbp-0x10]
  4048aa:	mov    rdi,QWORD PTR [rcx+0x40]
  4048ae:	mov    rsi,QWORD PTR [rbp-0x20]
  4048b2:	mov    r8d,DWORD PTR [rbp-0x24]
  4048b6:	mov    edx,0x1
  4048bb:	mov    ecx,0x1
  4048c0:	call   rax
  4048c2:	cmp    eax,0x0
  4048c5:	je     4048d7 <flatcc_builder_custom_reset@@Base+0x97>
  4048cb:	mov    DWORD PTR [rbp-0x4],0xffffffff
  4048d2:	jmp    404a7e <flatcc_builder_custom_reset@@Base+0x23e>
  4048d7:	xor    esi,esi
  4048d9:	mov    rax,QWORD PTR [rbp-0x20]
  4048dd:	mov    rdi,QWORD PTR [rax]
  4048e0:	mov    rax,QWORD PTR [rbp-0x20]
  4048e4:	mov    rdx,QWORD PTR [rax+0x8]
  4048e8:	call   403070 <memset@plt>
  4048ed:	jmp    40492a <flatcc_builder_custom_reset@@Base+0xea>
  4048f2:	mov    rax,QWORD PTR [rbp-0x20]
  4048f6:	cmp    QWORD PTR [rax+0x8],0x0
  4048fb:	jne    404906 <flatcc_builder_custom_reset@@Base+0xc6>
  404901:	jmp    404925 <flatcc_builder_custom_reset@@Base+0xe5>
  404906:	lea    rdi,[rip+0x9ac3]        # 40e3d0 <flatcc_builder_padding_base@@Base+0x200>
  40490d:	lea    rsi,[rip+0x9ace]        # 40e3e2 <flatcc_builder_padding_base@@Base+0x212>
  404914:	mov    edx,0x1b2
  404919:	lea    rcx,[rip+0x9b22]        # 40e442 <flatcc_builder_padding_base@@Base+0x272>
  404920:	call   403060 <__assert_fail@plt>
  404925:	jmp    40492a <flatcc_builder_custom_reset@@Base+0xea>
  40492a:	jmp    40492f <flatcc_builder_custom_reset@@Base+0xef>
  40492f:	mov    eax,DWORD PTR [rbp-0x24]
  404932:	add    eax,0x1
  404935:	mov    DWORD PTR [rbp-0x24],eax
  404938:	jmp    404859 <flatcc_builder_custom_reset@@Base+0x19>
  40493d:	mov    rax,QWORD PTR [rbp-0x10]
  404941:	mov    DWORD PTR [rax+0xe0],0x0
  40494b:	mov    rax,QWORD PTR [rbp-0x10]
  40494f:	cmp    DWORD PTR [rax+0xe4],0x0
  404956:	jbe    40496a <flatcc_builder_custom_reset@@Base+0x12a>
  40495c:	mov    rax,QWORD PTR [rbp-0x10]
  404960:	mov    DWORD PTR [rax+0xe4],0x10
  40496a:	mov    rax,QWORD PTR [rbp-0x10]
  40496e:	mov    WORD PTR [rax+0xe8],0x0
  404977:	mov    rax,QWORD PTR [rbp-0x10]
  40497b:	mov    DWORD PTR [rax+0xf0],0x0
  404985:	mov    rax,QWORD PTR [rbp-0x10]
  404989:	mov    DWORD PTR [rax+0xf4],0x0
  404993:	mov    rax,QWORD PTR [rbp-0x10]
  404997:	mov    DWORD PTR [rax+0x104],0x0
  4049a1:	mov    rax,QWORD PTR [rbp-0x10]
  4049a5:	mov    DWORD PTR [rax+0x108],0x0
  4049af:	mov    rax,QWORD PTR [rbp-0x10]
  4049b3:	mov    DWORD PTR [rax+0x20],0x0
  4049ba:	mov    rax,QWORD PTR [rbp-0x10]
  4049be:	mov    DWORD PTR [rax+0x24],0x0
  4049c5:	mov    rax,QWORD PTR [rbp-0x10]
  4049c9:	mov    DWORD PTR [rax+0xfc],0x0
  4049d3:	mov    rax,QWORD PTR [rbp-0x10]
  4049d7:	mov    DWORD PTR [rax+0x100],0x0
  4049e1:	mov    rax,QWORD PTR [rbp-0x10]
  4049e5:	mov    rax,QWORD PTR [rax+0x68]
  4049e9:	mov    rcx,QWORD PTR [rbp-0x10]
  4049ed:	mov    QWORD PTR [rcx+0x18],rax
  4049f1:	mov    rax,QWORD PTR [rbp-0x10]
  4049f5:	mov    rax,QWORD PTR [rax+0x88]
  4049fc:	mov    rcx,QWORD PTR [rbp-0x10]
  404a00:	mov    QWORD PTR [rcx],rax
  404a03:	mov    rax,QWORD PTR [rbp-0x10]
  404a07:	mov    rax,QWORD PTR [rax+0x58]
  404a0b:	mov    rcx,QWORD PTR [rbp-0x10]
  404a0f:	mov    QWORD PTR [rcx+0x8],rax
  404a13:	mov    rax,QWORD PTR [rbp-0x10]
  404a17:	mov    QWORD PTR [rax+0x30],0x0
  404a1f:	cmp    DWORD PTR [rbp-0x14],0x0
  404a23:	je     404a54 <flatcc_builder_custom_reset@@Base+0x214>
  404a29:	mov    rax,QWORD PTR [rbp-0x10]
  404a2d:	mov    QWORD PTR [rax+0x118],0x0
  404a38:	mov    rax,QWORD PTR [rbp-0x10]
  404a3c:	mov    DWORD PTR [rax+0x120],0x0
  404a46:	mov    rax,QWORD PTR [rbp-0x10]
  404a4a:	mov    DWORD PTR [rax+0x124],0x0
  404a54:	mov    rax,QWORD PTR [rbp-0x10]
  404a58:	cmp    DWORD PTR [rax+0x128],0x0
  404a5f:	je     404a77 <flatcc_builder_custom_reset@@Base+0x237>
  404a65:	mov    rax,QWORD PTR [rbp-0x10]
  404a69:	add    rax,0x130
  404a6f:	mov    rdi,rax
  404a72:	call   40a3b0 <flatcc_emitter_reset@@Base>
  404a77:	mov    DWORD PTR [rbp-0x4],0x0
  404a7e:	mov    eax,DWORD PTR [rbp-0x4]
  404a81:	add    rsp,0x30
  404a85:	pop    rbp
  404a86:	ret    
  404a87:	nop    WORD PTR [rax+rax*1+0x0]

0000000000404a90 <flatcc_builder_reset@@Base>:
  404a90:	push   rbp
  404a91:	mov    rbp,rsp
  404a94:	sub    rsp,0x10
  404a98:	xor    eax,eax
  404a9a:	mov    QWORD PTR [rbp-0x8],rdi
  404a9e:	mov    rdi,QWORD PTR [rbp-0x8]
  404aa2:	mov    esi,eax
  404aa4:	mov    edx,eax
  404aa6:	call   404840 <flatcc_builder_custom_reset@@Base>
  404aab:	add    rsp,0x10
  404aaf:	pop    rbp
  404ab0:	ret    
  404ab1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404abb:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000404ac0 <flatcc_builder_clear@@Base>:
  404ac0:	push   rbp
  404ac1:	mov    rbp,rsp
  404ac4:	sub    rsp,0x20
  404ac8:	mov    QWORD PTR [rbp-0x8],rdi
  404acc:	mov    DWORD PTR [rbp-0x14],0x0
  404ad3:	cmp    DWORD PTR [rbp-0x14],0x8
  404ad7:	jge    404b33 <flatcc_builder_clear@@Base+0x73>
  404add:	xor    eax,eax
  404adf:	mov    edx,eax
  404ae1:	xor    ecx,ecx
  404ae3:	mov    rsi,QWORD PTR [rbp-0x8]
  404ae7:	add    rsi,0x58
  404aee:	movsxd rdi,DWORD PTR [rbp-0x14]
  404af2:	shl    rdi,0x4
  404af6:	add    rsi,rdi
  404af9:	mov    QWORD PTR [rbp-0x10],rsi
  404afd:	mov    rsi,QWORD PTR [rbp-0x8]
  404b01:	mov    rsi,QWORD PTR [rsi+0x50]
  404b05:	mov    rdi,QWORD PTR [rbp-0x8]
  404b09:	mov    rdi,QWORD PTR [rdi+0x40]
  404b0d:	mov    r8,QWORD PTR [rbp-0x10]
  404b11:	mov    eax,DWORD PTR [rbp-0x14]
  404b14:	mov    QWORD PTR [rbp-0x20],rsi
  404b18:	mov    rsi,r8
  404b1b:	mov    r8d,eax
  404b1e:	mov    r9,QWORD PTR [rbp-0x20]
  404b22:	call   r9
  404b25:	mov    eax,DWORD PTR [rbp-0x14]
  404b28:	add    eax,0x1
  404b2b:	mov    DWORD PTR [rbp-0x14],eax
  404b2e:	jmp    404ad3 <flatcc_builder_clear@@Base+0x13>
  404b33:	mov    rax,QWORD PTR [rbp-0x8]
  404b37:	cmp    DWORD PTR [rax+0x128],0x0
  404b3e:	je     404b56 <flatcc_builder_clear@@Base+0x96>
  404b44:	mov    rax,QWORD PTR [rbp-0x8]
  404b48:	add    rax,0x130
  404b4e:	mov    rdi,rax
  404b51:	call   40a550 <flatcc_emitter_clear@@Base>
  404b56:	xor    esi,esi
  404b58:	mov    rax,QWORD PTR [rbp-0x8]
  404b5c:	mov    rdi,rax
  404b5f:	mov    edx,0x188
  404b64:	call   403070 <memset@plt>
  404b69:	add    rsp,0x20
  404b6d:	pop    rbp
  404b6e:	ret    
  404b6f:	nop

0000000000404b70 <flatcc_builder_enter_user_frame_ptr@@Base>:
  404b70:	push   rbp
  404b71:	mov    rbp,rsp
  404b74:	sub    rsp,0x20
  404b78:	xor    r8d,r8d
  404b7b:	mov    QWORD PTR [rbp-0x10],rdi
  404b7f:	mov    QWORD PTR [rbp-0x18],rsi
  404b83:	mov    rax,QWORD PTR [rbp-0x18]
  404b87:	add    rax,0x8
  404b8d:	sub    rax,0x1
  404b93:	and    rax,0xfffffffffffffff8
  404b99:	add    rax,0x8
  404b9f:	mov    QWORD PTR [rbp-0x18],rax
  404ba3:	mov    rdi,QWORD PTR [rbp-0x10]
  404ba7:	mov    rax,QWORD PTR [rbp-0x10]
  404bab:	mov    rdx,QWORD PTR [rax+0x180]
  404bb2:	mov    rcx,QWORD PTR [rbp-0x18]
  404bb6:	mov    esi,0x7
  404bbb:	call   404c60 <flatcc_builder_enter_user_frame_ptr@@Base+0xf0>
  404bc0:	mov    QWORD PTR [rbp-0x20],rax
  404bc4:	cmp    rax,0x0
  404bc8:	jne    404bdb <flatcc_builder_enter_user_frame_ptr@@Base+0x6b>
  404bce:	mov    QWORD PTR [rbp-0x8],0x0
  404bd6:	jmp    404c47 <flatcc_builder_enter_user_frame_ptr@@Base+0xd7>
  404bdb:	xor    esi,esi
  404bdd:	mov    rax,QWORD PTR [rbp-0x20]
  404be1:	mov    rdx,QWORD PTR [rbp-0x18]
  404be5:	mov    rdi,rax
  404be8:	call   403070 <memset@plt>
  404bed:	mov    rax,QWORD PTR [rbp-0x10]
  404bf1:	mov    rax,QWORD PTR [rax+0x178]
  404bf8:	mov    rcx,QWORD PTR [rbp-0x20]
  404bfc:	mov    rdx,rcx
  404bff:	add    rdx,0x8
  404c06:	mov    QWORD PTR [rbp-0x20],rdx
  404c0a:	mov    QWORD PTR [rcx],rax
  404c0d:	mov    rax,QWORD PTR [rbp-0x10]
  404c11:	mov    rax,QWORD PTR [rax+0x180]
  404c18:	add    rax,0x8
  404c1e:	mov    rcx,QWORD PTR [rbp-0x10]
  404c22:	mov    QWORD PTR [rcx+0x178],rax
  404c29:	mov    rax,QWORD PTR [rbp-0x18]
  404c2d:	mov    rcx,QWORD PTR [rbp-0x10]
  404c31:	add    rax,QWORD PTR [rcx+0x180]
  404c38:	mov    QWORD PTR [rcx+0x180],rax
  404c3f:	mov    rax,QWORD PTR [rbp-0x20]
  404c43:	mov    QWORD PTR [rbp-0x8],rax
  404c47:	mov    rax,QWORD PTR [rbp-0x8]
  404c4b:	add    rsp,0x20
  404c4f:	pop    rbp
  404c50:	ret    
  404c51:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404c5b:	nop    DWORD PTR [rax+rax*1+0x0]
  404c60:	push   rbp
  404c61:	mov    rbp,rsp
  404c64:	sub    rsp,0x40
  404c68:	mov    QWORD PTR [rbp-0x8],rdi
  404c6c:	mov    DWORD PTR [rbp-0xc],esi
  404c6f:	mov    QWORD PTR [rbp-0x18],rdx
  404c73:	mov    QWORD PTR [rbp-0x20],rcx
  404c77:	mov    DWORD PTR [rbp-0x24],r8d
  404c7b:	mov    rax,QWORD PTR [rbp-0x8]
  404c7f:	add    rax,0x58
  404c85:	movsxd rcx,DWORD PTR [rbp-0xc]
  404c89:	shl    rcx,0x4
  404c8d:	add    rax,rcx
  404c90:	mov    QWORD PTR [rbp-0x30],rax
  404c94:	mov    rax,QWORD PTR [rbp-0x18]
  404c98:	add    rax,QWORD PTR [rbp-0x20]
  404c9c:	mov    rcx,QWORD PTR [rbp-0x30]
  404ca0:	cmp    rax,QWORD PTR [rcx+0x8]
  404ca4:	jbe    404d05 <flatcc_builder_enter_user_frame_ptr@@Base+0x195>
  404caa:	mov    rax,QWORD PTR [rbp-0x8]
  404cae:	mov    rax,QWORD PTR [rax+0x50]
  404cb2:	mov    rcx,QWORD PTR [rbp-0x8]
  404cb6:	mov    rdi,QWORD PTR [rcx+0x40]
  404cba:	mov    rsi,QWORD PTR [rbp-0x30]
  404cbe:	mov    rcx,QWORD PTR [rbp-0x18]
  404cc2:	add    rcx,QWORD PTR [rbp-0x20]
  404cc6:	mov    edx,DWORD PTR [rbp-0x24]
  404cc9:	mov    r8d,DWORD PTR [rbp-0xc]
  404ccd:	mov    DWORD PTR [rbp-0x34],edx
  404cd0:	mov    rdx,rcx
  404cd3:	mov    ecx,DWORD PTR [rbp-0x34]
  404cd6:	call   rax
  404cd8:	cmp    eax,0x0
  404cdb:	je     404d00 <flatcc_builder_enter_user_frame_ptr@@Base+0x190>
  404ce1:	lea    rdi,[rip+0xa8ba]        # 40f5a2 <flatcc_builder_padding_base@@Base+0x13d2>
  404ce8:	lea    rsi,[rip+0x96f3]        # 40e3e2 <flatcc_builder_padding_base@@Base+0x212>
  404cef:	mov    edx,0x134
  404cf4:	lea    rcx,[rip+0xa6e1]        # 40f3dc <flatcc_builder_padding_base@@Base+0x120c>
  404cfb:	call   403060 <__assert_fail@plt>
  404d00:	jmp    404d05 <flatcc_builder_enter_user_frame_ptr@@Base+0x195>
  404d05:	mov    rax,QWORD PTR [rbp-0x30]
  404d09:	mov    rax,QWORD PTR [rax]
  404d0c:	add    rax,QWORD PTR [rbp-0x18]
  404d10:	add    rsp,0x40
  404d14:	pop    rbp
  404d15:	ret    
  404d16:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000404d20 <flatcc_builder_enter_user_frame@@Base>:
  404d20:	push   rbp
  404d21:	mov    rbp,rsp
  404d24:	sub    rsp,0x20
  404d28:	xor    r8d,r8d
  404d2b:	mov    QWORD PTR [rbp-0x10],rdi
  404d2f:	mov    QWORD PTR [rbp-0x18],rsi
  404d33:	mov    rax,QWORD PTR [rbp-0x18]
  404d37:	add    rax,0x8
  404d3d:	sub    rax,0x1
  404d43:	and    rax,0xfffffffffffffff8
  404d49:	add    rax,0x8
  404d4f:	mov    QWORD PTR [rbp-0x18],rax
  404d53:	mov    rdi,QWORD PTR [rbp-0x10]
  404d57:	mov    rax,QWORD PTR [rbp-0x10]
  404d5b:	mov    rdx,QWORD PTR [rax+0x180]
  404d62:	mov    rcx,QWORD PTR [rbp-0x18]
  404d66:	mov    esi,0x7
  404d6b:	call   404c60 <flatcc_builder_enter_user_frame_ptr@@Base+0xf0>
  404d70:	mov    QWORD PTR [rbp-0x20],rax
  404d74:	cmp    rax,0x0
  404d78:	jne    404d8b <flatcc_builder_enter_user_frame@@Base+0x6b>
  404d7e:	mov    QWORD PTR [rbp-0x8],0x0
  404d86:	jmp    404dfe <flatcc_builder_enter_user_frame@@Base+0xde>
  404d8b:	xor    esi,esi
  404d8d:	mov    rax,QWORD PTR [rbp-0x20]
  404d91:	mov    rdx,QWORD PTR [rbp-0x18]
  404d95:	mov    rdi,rax
  404d98:	call   403070 <memset@plt>
  404d9d:	mov    rax,QWORD PTR [rbp-0x10]
  404da1:	mov    rax,QWORD PTR [rax+0x178]
  404da8:	mov    rcx,QWORD PTR [rbp-0x20]
  404dac:	mov    rdx,rcx
  404daf:	add    rdx,0x8
  404db6:	mov    QWORD PTR [rbp-0x20],rdx
  404dba:	mov    QWORD PTR [rcx],rax
  404dbd:	mov    rax,QWORD PTR [rbp-0x10]
  404dc1:	mov    rax,QWORD PTR [rax+0x180]
  404dc8:	add    rax,0x8
  404dce:	mov    rcx,QWORD PTR [rbp-0x10]
  404dd2:	mov    QWORD PTR [rcx+0x178],rax
  404dd9:	mov    rax,QWORD PTR [rbp-0x18]
  404ddd:	mov    rcx,QWORD PTR [rbp-0x10]
  404de1:	add    rax,QWORD PTR [rcx+0x180]
  404de8:	mov    QWORD PTR [rcx+0x180],rax
  404def:	mov    rax,QWORD PTR [rbp-0x10]
  404df3:	mov    rax,QWORD PTR [rax+0x178]
  404dfa:	mov    QWORD PTR [rbp-0x8],rax
  404dfe:	mov    rax,QWORD PTR [rbp-0x8]
  404e02:	add    rsp,0x20
  404e06:	pop    rbp
  404e07:	ret    
  404e08:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000404e10 <flatcc_builder_exit_user_frame@@Base>:
  404e10:	push   rbp
  404e11:	mov    rbp,rsp
  404e14:	sub    rsp,0x10
  404e18:	mov    QWORD PTR [rbp-0x8],rdi
  404e1c:	mov    rax,QWORD PTR [rbp-0x8]
  404e20:	cmp    QWORD PTR [rax+0x178],0x0
  404e28:	jbe    404e33 <flatcc_builder_exit_user_frame@@Base+0x23>
  404e2e:	jmp    404e52 <flatcc_builder_exit_user_frame@@Base+0x42>
  404e33:	lea    rdi,[rip+0x9646]        # 40e480 <flatcc_builder_padding_base@@Base+0x2b0>
  404e3a:	lea    rsi,[rip+0x95a1]        # 40e3e2 <flatcc_builder_padding_base@@Base+0x212>
  404e41:	mov    edx,0x21e
  404e46:	lea    rcx,[rip+0x964c]        # 40e499 <flatcc_builder_padding_base@@Base+0x2c9>
  404e4d:	call   403060 <__assert_fail@plt>
  404e52:	mov    rax,QWORD PTR [rbp-0x8]
  404e56:	mov    rax,QWORD PTR [rax+0xc8]
  404e5d:	mov    rcx,QWORD PTR [rbp-0x8]
  404e61:	mov    rcx,QWORD PTR [rcx+0x178]
  404e68:	mov    ecx,ecx
  404e6a:	mov    edx,ecx
  404e6c:	add    rax,rdx
  404e6f:	mov    QWORD PTR [rbp-0x10],rax
  404e73:	mov    rax,QWORD PTR [rbp-0x8]
  404e77:	mov    rax,QWORD PTR [rax+0x178]
  404e7e:	sub    rax,0x8
  404e84:	mov    rdx,QWORD PTR [rbp-0x8]
  404e88:	mov    QWORD PTR [rdx+0x180],rax
  404e8f:	mov    rax,QWORD PTR [rbp-0x10]
  404e93:	mov    rax,QWORD PTR [rax-0x8]
  404e97:	mov    rdx,QWORD PTR [rbp-0x8]
  404e9b:	mov    QWORD PTR [rdx+0x178],rax
  404ea2:	add    rsp,0x10
  404ea6:	pop    rbp
  404ea7:	ret    
  404ea8:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000404eb0 <flatcc_builder_exit_user_frame_at@@Base>:
  404eb0:	push   rbp
  404eb1:	mov    rbp,rsp
  404eb4:	sub    rsp,0x10
  404eb8:	mov    QWORD PTR [rbp-0x8],rdi
  404ebc:	mov    QWORD PTR [rbp-0x10],rsi
  404ec0:	mov    rax,QWORD PTR [rbp-0x8]
  404ec4:	mov    rax,QWORD PTR [rax+0x178]
  404ecb:	cmp    rax,QWORD PTR [rbp-0x10]
  404ecf:	jb     404eda <flatcc_builder_exit_user_frame_at@@Base+0x2a>
  404ed5:	jmp    404ef9 <flatcc_builder_exit_user_frame_at@@Base+0x49>
  404eda:	lea    rdi,[rip+0x95f2]        # 40e4d3 <flatcc_builder_padding_base@@Base+0x303>
  404ee1:	lea    rsi,[rip+0x94fa]        # 40e3e2 <flatcc_builder_padding_base@@Base+0x212>
  404ee8:	mov    edx,0x227
  404eed:	lea    rcx,[rip+0x95fe]        # 40e4f2 <flatcc_builder_padding_base@@Base+0x322>
  404ef4:	call   403060 <__assert_fail@plt>
  404ef9:	mov    rax,QWORD PTR [rbp-0x10]
  404efd:	mov    rcx,QWORD PTR [rbp-0x8]
  404f01:	mov    QWORD PTR [rcx+0x178],rax
  404f08:	mov    rdi,QWORD PTR [rbp-0x8]
  404f0c:	call   404e10 <flatcc_builder_exit_user_frame@@Base>
  404f11:	add    rsp,0x10
  404f15:	pop    rbp
  404f16:	ret    
  404f17:	nop    WORD PTR [rax+rax*1+0x0]

0000000000404f20 <flatcc_builder_get_current_user_frame@@Base>:
  404f20:	push   rbp
  404f21:	mov    rbp,rsp
  404f24:	mov    QWORD PTR [rbp-0x8],rdi
  404f28:	mov    rax,QWORD PTR [rbp-0x8]
  404f2c:	mov    rax,QWORD PTR [rax+0x178]
  404f33:	pop    rbp
  404f34:	ret    
  404f35:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404f3f:	nop

0000000000404f40 <flatcc_builder_get_user_frame_ptr@@Base>:
  404f40:	push   rbp
  404f41:	mov    rbp,rsp
  404f44:	mov    QWORD PTR [rbp-0x8],rdi
  404f48:	mov    QWORD PTR [rbp-0x10],rsi
  404f4c:	mov    rax,QWORD PTR [rbp-0x8]
  404f50:	mov    rax,QWORD PTR [rax+0xc8]
  404f57:	mov    rcx,QWORD PTR [rbp-0x10]
  404f5b:	mov    ecx,ecx
  404f5d:	mov    edx,ecx
  404f5f:	add    rax,rdx
  404f62:	pop    rbp
  404f63:	ret    
  404f64:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404f6e:	xchg   ax,ax

0000000000404f70 <flatcc_builder_embed_buffer@@Base>:
  404f70:	push   rbp
  404f71:	mov    rbp,rsp
  404f74:	sub    rsp,0xd0
  404f7b:	mov    QWORD PTR [rbp-0x10],rdi
  404f7f:	mov    WORD PTR [rbp-0x12],si
  404f83:	mov    QWORD PTR [rbp-0x20],rdx
  404f87:	mov    QWORD PTR [rbp-0x28],rcx
  404f8b:	mov    WORD PTR [rbp-0x2a],r8w
  404f90:	mov    DWORD PTR [rbp-0x30],r9d
  404f94:	mov    eax,DWORD PTR [rbp-0x30]
  404f97:	and    eax,0x2
  404f9a:	mov    DWORD PTR [rbp-0xcc],eax
  404fa0:	mov    rdi,QWORD PTR [rbp-0x10]
  404fa4:	mov    si,WORD PTR [rbp-0x12]
  404fa8:	mov    rcx,QWORD PTR [rbp-0x10]
  404fac:	cmp    DWORD PTR [rcx+0x100],0x0
  404fb3:	sete   r10b
  404fb7:	xor    r10b,0xff
  404fbb:	and    r10b,0x1
  404fbf:	movzx  ecx,r10b
  404fc3:	lea    rdx,[rbp-0x2a]
  404fc7:	mov    WORD PTR [rbp-0xce],si
  404fce:	mov    rsi,rdx
  404fd1:	mov    r8w,WORD PTR [rbp-0xce]
  404fd9:	movzx  edx,r8w
  404fdd:	call   4051d0 <flatcc_builder_embed_buffer@@Base+0x260>
  404fe2:	cmp    eax,0x0
  404fe5:	je     404ff7 <flatcc_builder_embed_buffer@@Base+0x87>
  404feb:	mov    DWORD PTR [rbp-0x4],0x0
  404ff2:	jmp    4051bc <flatcc_builder_embed_buffer@@Base+0x24c>
  404ff7:	xor    eax,eax
  404ff9:	mov    ecx,eax
  404ffb:	mov    rdi,QWORD PTR [rbp-0x10]
  404fff:	mov    rdx,QWORD PTR [rbp-0x28]
  405003:	mov    eax,edx
  405005:	mov    esi,eax
  405007:	mov    eax,DWORD PTR [rbp-0xcc]
  40500d:	cmp    eax,0x0
  405010:	mov    r8d,0x4
  405016:	cmovne rcx,r8
  40501a:	add    rsi,rcx
  40501d:	movzx  edx,WORD PTR [rbp-0x2a]
  405021:	call   405370 <flatcc_builder_embed_buffer@@Base+0x400>
  405026:	mov    DWORD PTR [rbp-0x38],eax
  405029:	mov    rcx,QWORD PTR [rbp-0x28]
  40502d:	add    ecx,DWORD PTR [rbp-0x38]
  405030:	mov    edi,ecx
  405032:	call   4053a0 <flatcc_builder_embed_buffer@@Base+0x430>
  405037:	mov    DWORD PTR [rbp-0x34],eax
  40503a:	mov    QWORD PTR [rbp-0xc8],0x0
  405045:	mov    DWORD PTR [rbp-0xc0],0x0
  40504f:	mov    r8,QWORD PTR [rbp-0x10]
  405053:	cmp    DWORD PTR [r8+0x100],0x0
  40505b:	je     4050c7 <flatcc_builder_embed_buffer@@Base+0x157>
  405061:	mov    rax,QWORD PTR [rbp-0xc8]
  405068:	add    rax,0x4
  40506e:	mov    QWORD PTR [rbp-0xc8],rax
  405075:	lea    rax,[rbp-0x34]
  405079:	lea    rcx,[rbp-0xc8]
  405080:	mov    rdx,rcx
  405083:	add    rdx,0x10
  40508a:	movsxd rsi,DWORD PTR [rbp-0xc0]
  405091:	shl    rsi,0x4
  405095:	add    rdx,rsi
  405098:	mov    QWORD PTR [rdx],rax
  40509b:	add    rcx,0x10
  4050a2:	movsxd rax,DWORD PTR [rbp-0xc0]
  4050a9:	shl    rax,0x4
  4050ad:	add    rcx,rax
  4050b0:	mov    QWORD PTR [rcx+0x8],0x4
  4050b8:	mov    edi,DWORD PTR [rbp-0xc0]
  4050be:	add    edi,0x1
  4050c1:	mov    DWORD PTR [rbp-0xc0],edi
  4050c7:	cmp    QWORD PTR [rbp-0x28],0x0
  4050cc:	jbe    405136 <flatcc_builder_embed_buffer@@Base+0x1c6>
  4050d2:	mov    rax,QWORD PTR [rbp-0x28]
  4050d6:	add    rax,QWORD PTR [rbp-0xc8]
  4050dd:	mov    QWORD PTR [rbp-0xc8],rax
  4050e4:	mov    rax,QWORD PTR [rbp-0x20]
  4050e8:	lea    rcx,[rbp-0xc8]
  4050ef:	mov    rdx,rcx
  4050f2:	add    rdx,0x10
  4050f9:	movsxd rsi,DWORD PTR [rbp-0xc0]
  405100:	shl    rsi,0x4
  405104:	add    rdx,rsi
  405107:	mov    QWORD PTR [rdx],rax
  40510a:	mov    rax,QWORD PTR [rbp-0x28]
  40510e:	add    rcx,0x10
  405115:	movsxd rdx,DWORD PTR [rbp-0xc0]
  40511c:	shl    rdx,0x4
  405120:	add    rcx,rdx
  405123:	mov    QWORD PTR [rcx+0x8],rax
  405127:	mov    edi,DWORD PTR [rbp-0xc0]
  40512d:	add    edi,0x1
  405130:	mov    DWORD PTR [rbp-0xc0],edi
  405136:	cmp    DWORD PTR [rbp-0x38],0x0
  40513a:	jbe    4051a9 <flatcc_builder_embed_buffer@@Base+0x239>
  405140:	lea    rax,[rip+0x9089]        # 40e1d0 <flatcc_builder_padding_base@@Base>
  405147:	mov    ecx,DWORD PTR [rbp-0x38]
  40514a:	mov    edx,ecx
  40514c:	add    rdx,QWORD PTR [rbp-0xc8]
  405153:	mov    QWORD PTR [rbp-0xc8],rdx
  40515a:	lea    rdx,[rbp-0xc8]
  405161:	mov    rsi,rdx
  405164:	add    rsi,0x10
  40516b:	movsxd rdi,DWORD PTR [rbp-0xc0]
  405172:	shl    rdi,0x4
  405176:	add    rsi,rdi
  405179:	mov    QWORD PTR [rsi],rax
  40517c:	mov    ecx,DWORD PTR [rbp-0x38]
  40517f:	mov    eax,ecx
  405181:	add    rdx,0x10
  405188:	movsxd rsi,DWORD PTR [rbp-0xc0]
  40518f:	shl    rsi,0x4
  405193:	add    rdx,rsi
  405196:	mov    QWORD PTR [rdx+0x8],rax
  40519a:	mov    ecx,DWORD PTR [rbp-0xc0]
  4051a0:	add    ecx,0x1
  4051a3:	mov    DWORD PTR [rbp-0xc0],ecx
  4051a9:	mov    rdi,QWORD PTR [rbp-0x10]
  4051ad:	lea    rsi,[rbp-0xc8]
  4051b4:	call   4053b0 <flatcc_builder_embed_buffer@@Base+0x440>
  4051b9:	mov    DWORD PTR [rbp-0x4],eax
  4051bc:	mov    eax,DWORD PTR [rbp-0x4]
  4051bf:	add    rsp,0xd0
  4051c6:	pop    rbp
  4051c7:	ret    
  4051c8:	nop    DWORD PTR [rax+rax*1+0x0]
  4051d0:	push   rbp
  4051d1:	mov    rbp,rsp
  4051d4:	sub    rsp,0xc0
  4051db:	mov    QWORD PTR [rbp-0x8],rdi
  4051df:	mov    QWORD PTR [rbp-0x10],rsi
  4051e3:	mov    WORD PTR [rbp-0x12],dx
  4051e7:	mov    DWORD PTR [rbp-0x18],ecx
  4051ea:	movzx  eax,WORD PTR [rbp-0x12]
  4051ee:	cmp    eax,0x0
  4051f1:	je     405206 <flatcc_builder_embed_buffer@@Base+0x296>
  4051f7:	movzx  eax,WORD PTR [rbp-0x12]
  4051fb:	mov    DWORD PTR [rbp-0xb4],eax
  405201:	jmp    40524c <flatcc_builder_embed_buffer@@Base+0x2dc>
  405206:	mov    rax,QWORD PTR [rbp-0x8]
  40520a:	movzx  ecx,WORD PTR [rax+0xec]
  405211:	cmp    ecx,0x0
  405214:	je     405230 <flatcc_builder_embed_buffer@@Base+0x2c0>
  40521a:	mov    rax,QWORD PTR [rbp-0x8]
  40521e:	movzx  ecx,WORD PTR [rax+0xec]
  405225:	mov    DWORD PTR [rbp-0xb8],ecx
  40522b:	jmp    405240 <flatcc_builder_embed_buffer@@Base+0x2d0>
  405230:	mov    eax,0x1
  405235:	mov    DWORD PTR [rbp-0xb8],eax
  40523b:	jmp    405240 <flatcc_builder_embed_buffer@@Base+0x2d0>
  405240:	mov    eax,DWORD PTR [rbp-0xb8]
  405246:	mov    DWORD PTR [rbp-0xb4],eax
  40524c:	mov    eax,DWORD PTR [rbp-0xb4]
  405252:	mov    WORD PTR [rbp-0x12],ax
  405256:	mov    rdi,QWORD PTR [rbp-0x10]
  40525a:	mov    esi,0x4
  40525f:	call   406d40 <flatcc_builder_start_vector@@Base+0xb0>
  405264:	mov    rdi,QWORD PTR [rbp-0x10]
  405268:	movzx  esi,WORD PTR [rbp-0x12]
  40526c:	call   406d40 <flatcc_builder_start_vector@@Base+0xb0>
  405271:	cmp    DWORD PTR [rbp-0x18],0x0
  405275:	jne    405365 <flatcc_builder_embed_buffer@@Base+0x3f5>
  40527b:	mov    rdi,QWORD PTR [rbp-0x8]
  40527f:	movzx  esi,WORD PTR [rbp-0x12]
  405283:	call   40a0a0 <flatcc_builder_get_emit_context@@Base+0x20>
  405288:	mov    eax,eax
  40528a:	mov    ecx,eax
  40528c:	mov    QWORD PTR [rbp-0x20],rcx
  405290:	cmp    QWORD PTR [rbp-0x20],0x0
  405295:	je     405360 <flatcc_builder_embed_buffer@@Base+0x3f0>
  40529b:	mov    QWORD PTR [rbp-0xb0],0x0
  4052a6:	mov    DWORD PTR [rbp-0xa8],0x0
  4052b0:	cmp    QWORD PTR [rbp-0x20],0x0
  4052b5:	jbe    405322 <flatcc_builder_embed_buffer@@Base+0x3b2>
  4052bb:	lea    rax,[rip+0x8f0e]        # 40e1d0 <flatcc_builder_padding_base@@Base>
  4052c2:	mov    rcx,QWORD PTR [rbp-0x20]
  4052c6:	add    rcx,QWORD PTR [rbp-0xb0]
  4052cd:	mov    QWORD PTR [rbp-0xb0],rcx
  4052d4:	lea    rcx,[rbp-0xb0]
  4052db:	mov    rdx,rcx
  4052de:	add    rdx,0x10
  4052e5:	movsxd rsi,DWORD PTR [rbp-0xa8]
  4052ec:	shl    rsi,0x4
  4052f0:	add    rdx,rsi
  4052f3:	mov    QWORD PTR [rdx],rax
  4052f6:	mov    rax,QWORD PTR [rbp-0x20]
  4052fa:	add    rcx,0x10
  405301:	movsxd rdx,DWORD PTR [rbp-0xa8]
  405308:	shl    rdx,0x4
  40530c:	add    rcx,rdx
  40530f:	mov    QWORD PTR [rcx+0x8],rax
  405313:	mov    edi,DWORD PTR [rbp-0xa8]
  405319:	add    edi,0x1
  40531c:	mov    DWORD PTR [rbp-0xa8],edi
  405322:	mov    rdi,QWORD PTR [rbp-0x8]
  405326:	lea    rsi,[rbp-0xb0]
  40532d:	call   407340 <flatcc_builder_create_vtable@@Base+0x140>
  405332:	xor    ecx,ecx
  405334:	cmp    ecx,eax
  405336:	jne    40535b <flatcc_builder_embed_buffer@@Base+0x3eb>
  40533c:	lea    rdi,[rip+0xa25f]        # 40f5a2 <flatcc_builder_padding_base@@Base+0x13d2>
  405343:	lea    rsi,[rip+0x9098]        # 40e3e2 <flatcc_builder_padding_base@@Base+0x212>
  40534a:	mov    edx,0x2be
  40534f:	lea    rcx,[rip+0xa0c9]        # 40f41f <flatcc_builder_padding_base@@Base+0x124f>
  405356:	call   403060 <__assert_fail@plt>
  40535b:	jmp    405360 <flatcc_builder_embed_buffer@@Base+0x3f0>
  405360:	jmp    405365 <flatcc_builder_embed_buffer@@Base+0x3f5>
  405365:	xor    eax,eax
  405367:	add    rsp,0xc0
  40536e:	pop    rbp
  40536f:	ret    
  405370:	push   rbp
  405371:	mov    rbp,rsp
  405374:	mov    QWORD PTR [rbp-0x8],rdi
  405378:	mov    DWORD PTR [rbp-0xc],esi
  40537b:	mov    WORD PTR [rbp-0xe],dx
  40537f:	mov    rax,QWORD PTR [rbp-0x8]
  405383:	mov    ecx,DWORD PTR [rax+0xf0]
  405389:	sub    ecx,DWORD PTR [rbp-0xc]
  40538c:	movzx  esi,WORD PTR [rbp-0xe]
  405390:	sub    esi,0x1
  405393:	and    ecx,esi
  405395:	mov    eax,ecx
  405397:	pop    rbp
  405398:	ret    
  405399:	nop    DWORD PTR [rax+0x0]
  4053a0:	push   rbp
  4053a1:	mov    rbp,rsp
  4053a4:	mov    DWORD PTR [rbp-0x4],edi
  4053a7:	mov    eax,DWORD PTR [rbp-0x4]
  4053aa:	pop    rbp
  4053ab:	ret    
  4053ac:	nop    DWORD PTR [rax+0x0]
  4053b0:	push   rbp
  4053b1:	mov    rbp,rsp
  4053b4:	sub    rsp,0x20
  4053b8:	mov    QWORD PTR [rbp-0x8],rdi
  4053bc:	mov    QWORD PTR [rbp-0x10],rsi
  4053c0:	mov    rax,QWORD PTR [rbp-0x8]
  4053c4:	mov    ecx,DWORD PTR [rax+0xf0]
  4053ca:	mov    rax,QWORD PTR [rbp-0x10]
  4053ce:	mov    rax,QWORD PTR [rax]
  4053d1:	sub    ecx,eax
  4053d3:	mov    DWORD PTR [rbp-0x14],ecx
  4053d6:	mov    rdx,QWORD PTR [rbp-0x10]
  4053da:	cmp    QWORD PTR [rdx],0x10
  4053de:	jbe    4053ff <flatcc_builder_embed_buffer@@Base+0x48f>
  4053e4:	mov    rax,QWORD PTR [rbp-0x10]
  4053e8:	mov    rax,QWORD PTR [rax]
  4053eb:	sub    rax,0x10
  4053f1:	mov    ecx,0xffffffff
  4053f6:	cmp    rax,rcx
  4053f9:	ja     405412 <flatcc_builder_embed_buffer@@Base+0x4a2>
  4053ff:	mov    eax,DWORD PTR [rbp-0x14]
  405402:	mov    rcx,QWORD PTR [rbp-0x8]
  405406:	cmp    eax,DWORD PTR [rcx+0xf0]
  40540c:	jl     405431 <flatcc_builder_embed_buffer@@Base+0x4c1>
  405412:	lea    rdi,[rip+0xa189]        # 40f5a2 <flatcc_builder_padding_base@@Base+0x13d2>
  405419:	lea    rsi,[rip+0x8fc2]        # 40e3e2 <flatcc_builder_padding_base@@Base+0x212>
  405420:	mov    edx,0x287
  405425:	lea    rcx,[rip+0xa035]        # 40f461 <flatcc_builder_padding_base@@Base+0x1291>
  40542c:	call   403060 <__assert_fail@plt>
  405431:	mov    rax,QWORD PTR [rbp-0x8]
  405435:	mov    rax,QWORD PTR [rax+0x48]
  405439:	mov    rcx,QWORD PTR [rbp-0x8]
  40543d:	mov    rdi,QWORD PTR [rcx+0x38]
  405441:	mov    rcx,QWORD PTR [rbp-0x10]
  405445:	add    rcx,0x10
  40544c:	mov    rdx,QWORD PTR [rbp-0x10]
  405450:	mov    edx,DWORD PTR [rdx+0x8]
  405453:	mov    esi,DWORD PTR [rbp-0x14]
  405456:	mov    r8,QWORD PTR [rbp-0x10]
  40545a:	mov    r8,QWORD PTR [r8]
  40545d:	mov    DWORD PTR [rbp-0x18],esi
  405460:	mov    rsi,rcx
  405463:	mov    ecx,DWORD PTR [rbp-0x18]
  405466:	call   rax
  405468:	cmp    eax,0x0
  40546b:	je     405490 <flatcc_builder_embed_buffer@@Base+0x520>
  405471:	lea    rdi,[rip+0xa12a]        # 40f5a2 <flatcc_builder_padding_base@@Base+0x13d2>
  405478:	lea    rsi,[rip+0x8f63]        # 40e3e2 <flatcc_builder_padding_base@@Base+0x212>
  40547f:	mov    edx,0x28b
  405484:	lea    rcx,[rip+0x9fd6]        # 40f461 <flatcc_builder_padding_base@@Base+0x1291>
  40548b:	call   403060 <__assert_fail@plt>
  405490:	mov    eax,DWORD PTR [rbp-0x14]
  405493:	mov    rcx,QWORD PTR [rbp-0x8]
  405497:	mov    DWORD PTR [rcx+0xf0],eax
  40549d:	add    rsp,0x20
  4054a1:	pop    rbp
  4054a2:	ret    
  4054a3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4054ad:	nop    DWORD PTR [rax]

00000000004054b0 <flatcc_builder_create_buffer@@Base>:
  4054b0:	push   rbp
  4054b1:	mov    rbp,rsp
  4054b4:	sub    rsp,0xf0
  4054bb:	mov    QWORD PTR [rbp-0x10],rdi
  4054bf:	mov    QWORD PTR [rbp-0x18],rsi
  4054c3:	mov    WORD PTR [rbp-0x1a],dx
  4054c7:	mov    DWORD PTR [rbp-0x20],ecx
  4054ca:	mov    WORD PTR [rbp-0x22],r8w
  4054cf:	mov    DWORD PTR [rbp-0x28],r9d
  4054d3:	mov    DWORD PTR [rbp-0x34],0x0
  4054da:	mov    DWORD PTR [rbp-0xd4],0x0
  4054e4:	mov    eax,DWORD PTR [rbp-0x28]
  4054e7:	and    eax,0x1
  4054ea:	cmp    eax,0x0
  4054ed:	setne  r10b
  4054f1:	and    r10b,0x1
  4054f5:	movzx  eax,r10b
  4054f9:	mov    DWORD PTR [rbp-0xd8],eax
  4054ff:	mov    eax,DWORD PTR [rbp-0x28]
  405502:	and    eax,0x2
  405505:	cmp    eax,0x0
  405508:	setne  r10b
  40550c:	and    r10b,0x1
  405510:	movzx  eax,r10b
  405514:	mov    DWORD PTR [rbp-0xdc],eax
  40551a:	mov    rdi,QWORD PTR [rbp-0x10]
  40551e:	mov    dx,WORD PTR [rbp-0x1a]
  405522:	mov    ecx,DWORD PTR [rbp-0xd8]
  405528:	lea    rsi,[rbp-0x22]
  40552c:	movzx  edx,dx
  40552f:	call   4051d0 <flatcc_builder_embed_buffer@@Base+0x260>
  405534:	cmp    eax,0x0
  405537:	je     405549 <flatcc_builder_create_buffer@@Base+0x99>
  40553d:	mov    DWORD PTR [rbp-0x4],0x0
  405544:	jmp    4058b5 <flatcc_builder_create_buffer@@Base+0x405>
  405549:	mov    rdi,QWORD PTR [rbp-0x10]
  40554d:	movzx  esi,WORD PTR [rbp-0x22]
  405551:	call   4058d0 <flatcc_builder_create_buffer@@Base+0x420>
  405556:	cmp    QWORD PTR [rbp-0x18],0x0
  40555b:	je     40558f <flatcc_builder_create_buffer@@Base+0xdf>
  405561:	mov    rax,QWORD PTR [rbp-0x18]
  405565:	mov    ecx,DWORD PTR [rax]
  405567:	mov    DWORD PTR [rbp-0xd4],ecx
  40556d:	mov    edi,DWORD PTR [rbp-0xd4]
  405573:	call   405910 <flatcc_builder_create_buffer@@Base+0x460>
  405578:	mov    DWORD PTR [rbp-0xd4],eax
  40557e:	mov    edi,DWORD PTR [rbp-0xd4]
  405584:	call   4053a0 <flatcc_builder_embed_buffer@@Base+0x430>
  405589:	mov    DWORD PTR [rbp-0xd4],eax
  40558f:	xor    eax,eax
  405591:	mov    ecx,eax
  405593:	xor    eax,eax
  405595:	mov    edx,DWORD PTR [rbp-0xd4]
  40559b:	cmp    edx,0x0
  40559e:	mov    edx,0x4
  4055a3:	cmovne eax,edx
  4055a6:	mov    DWORD PTR [rbp-0x34],eax
  4055a9:	mov    rdi,QWORD PTR [rbp-0x10]
  4055ad:	mov    eax,DWORD PTR [rbp-0x34]
  4055b0:	mov    esi,eax
  4055b2:	add    rsi,0x4
  4055b9:	mov    eax,DWORD PTR [rbp-0xdc]
  4055bf:	cmp    eax,0x0
  4055c2:	mov    r8d,0x4
  4055c8:	cmovne rcx,r8
  4055cc:	add    rsi,rcx
  4055cf:	movzx  edx,WORD PTR [rbp-0x22]
  4055d3:	call   405370 <flatcc_builder_embed_buffer@@Base+0x400>
  4055d8:	mov    DWORD PTR [rbp-0x30],eax
  4055db:	mov    QWORD PTR [rbp-0xd0],0x0
  4055e6:	mov    DWORD PTR [rbp-0xc8],0x0
  4055f0:	cmp    DWORD PTR [rbp-0xd8],0x0
  4055f7:	jne    40560a <flatcc_builder_create_buffer@@Base+0x15a>
  4055fd:	cmp    DWORD PTR [rbp-0xdc],0x0
  405604:	je     405670 <flatcc_builder_create_buffer@@Base+0x1c0>
  40560a:	mov    rax,QWORD PTR [rbp-0xd0]
  405611:	add    rax,0x4
  405617:	mov    QWORD PTR [rbp-0xd0],rax
  40561e:	lea    rax,[rbp-0x3c]
  405622:	lea    rcx,[rbp-0xd0]
  405629:	mov    rdx,rcx
  40562c:	add    rdx,0x10
  405633:	movsxd rsi,DWORD PTR [rbp-0xc8]
  40563a:	shl    rsi,0x4
  40563e:	add    rdx,rsi
  405641:	mov    QWORD PTR [rdx],rax
  405644:	add    rcx,0x10
  40564b:	movsxd rax,DWORD PTR [rbp-0xc8]
  405652:	shl    rax,0x4
  405656:	add    rcx,rax
  405659:	mov    QWORD PTR [rcx+0x8],0x4
  405661:	mov    edi,DWORD PTR [rbp-0xc8]
  405667:	add    edi,0x1
  40566a:	mov    DWORD PTR [rbp-0xc8],edi
  405670:	mov    rax,QWORD PTR [rbp-0xd0]
  405677:	add    rax,0x4
  40567d:	mov    QWORD PTR [rbp-0xd0],rax
  405684:	lea    rax,[rbp-0x38]
  405688:	lea    rcx,[rbp-0xd0]
  40568f:	mov    rdx,rcx
  405692:	add    rdx,0x10
  405699:	movsxd rsi,DWORD PTR [rbp-0xc8]
  4056a0:	shl    rsi,0x4
  4056a4:	add    rdx,rsi
  4056a7:	mov    QWORD PTR [rdx],rax
  4056aa:	add    rcx,0x10
  4056b1:	movsxd rax,DWORD PTR [rbp-0xc8]
  4056b8:	shl    rax,0x4
  4056bc:	add    rcx,rax
  4056bf:	mov    QWORD PTR [rcx+0x8],0x4
  4056c7:	mov    edi,DWORD PTR [rbp-0xc8]
  4056cd:	add    edi,0x1
  4056d0:	mov    DWORD PTR [rbp-0xc8],edi
  4056d6:	cmp    DWORD PTR [rbp-0x34],0x0
  4056da:	jbe    405749 <flatcc_builder_create_buffer@@Base+0x299>
  4056e0:	mov    eax,DWORD PTR [rbp-0x34]
  4056e3:	mov    ecx,eax
  4056e5:	add    rcx,QWORD PTR [rbp-0xd0]
  4056ec:	mov    QWORD PTR [rbp-0xd0],rcx
  4056f3:	lea    rcx,[rbp-0xd4]
  4056fa:	lea    rdx,[rbp-0xd0]
  405701:	mov    rsi,rdx
  405704:	add    rsi,0x10
  40570b:	movsxd rdi,DWORD PTR [rbp-0xc8]
  405712:	shl    rdi,0x4
  405716:	add    rsi,rdi
  405719:	mov    QWORD PTR [rsi],rcx
  40571c:	mov    eax,DWORD PTR [rbp-0x34]
  40571f:	mov    ecx,eax
  405721:	add    rdx,0x10
  405728:	movsxd rsi,DWORD PTR [rbp-0xc8]
  40572f:	shl    rsi,0x4
  405733:	add    rdx,rsi
  405736:	mov    QWORD PTR [rdx+0x8],rcx
  40573a:	mov    eax,DWORD PTR [rbp-0xc8]
  405740:	add    eax,0x1
  405743:	mov    DWORD PTR [rbp-0xc8],eax
  405749:	cmp    DWORD PTR [rbp-0x30],0x0
  40574d:	jbe    4057bc <flatcc_builder_create_buffer@@Base+0x30c>
  405753:	lea    rax,[rip+0x8a76]        # 40e1d0 <flatcc_builder_padding_base@@Base>
  40575a:	mov    ecx,DWORD PTR [rbp-0x30]
  40575d:	mov    edx,ecx
  40575f:	add    rdx,QWORD PTR [rbp-0xd0]
  405766:	mov    QWORD PTR [rbp-0xd0],rdx
  40576d:	lea    rdx,[rbp-0xd0]
  405774:	mov    rsi,rdx
  405777:	add    rsi,0x10
  40577e:	movsxd rdi,DWORD PTR [rbp-0xc8]
  405785:	shl    rdi,0x4
  405789:	add    rsi,rdi
  40578c:	mov    QWORD PTR [rsi],rax
  40578f:	mov    ecx,DWORD PTR [rbp-0x30]
  405792:	mov    eax,ecx
  405794:	add    rdx,0x10
  40579b:	movsxd rsi,DWORD PTR [rbp-0xc8]
  4057a2:	shl    rsi,0x4
  4057a6:	add    rdx,rsi
  4057a9:	mov    QWORD PTR [rdx+0x8],rax
  4057ad:	mov    ecx,DWORD PTR [rbp-0xc8]
  4057b3:	add    ecx,0x1
  4057b6:	mov    DWORD PTR [rbp-0xc8],ecx
  4057bc:	mov    rax,QWORD PTR [rbp-0x10]
  4057c0:	mov    ecx,DWORD PTR [rax+0xf0]
  4057c6:	mov    rax,QWORD PTR [rbp-0xd0]
  4057cd:	sub    ecx,eax
  4057cf:	mov    eax,ecx
  4057d1:	mov    edx,eax
  4057d3:	cmp    DWORD PTR [rbp-0xd8],0x0
  4057da:	mov    sil,0x1
  4057dd:	mov    QWORD PTR [rbp-0xe8],rdx
  4057e4:	mov    BYTE PTR [rbp-0xe9],sil
  4057eb:	jne    405801 <flatcc_builder_create_buffer@@Base+0x351>
  4057f1:	cmp    DWORD PTR [rbp-0xdc],0x0
  4057f8:	setne  al
  4057fb:	mov    BYTE PTR [rbp-0xe9],al
  405801:	mov    al,BYTE PTR [rbp-0xe9]
  405807:	xor    ecx,ecx
  405809:	mov    edx,ecx
  40580b:	test   al,0x1
  40580d:	mov    esi,0x4
  405812:	cmovne rdx,rsi
  405816:	mov    rsi,QWORD PTR [rbp-0xe8]
  40581d:	add    rsi,rdx
  405820:	mov    DWORD PTR [rbp-0x40],esi
  405823:	cmp    DWORD PTR [rbp-0xd8],0x0
  40582a:	je     40584c <flatcc_builder_create_buffer@@Base+0x39c>
  405830:	mov    rax,QWORD PTR [rbp-0x10]
  405834:	mov    ecx,DWORD PTR [rax+0xf8]
  40583a:	sub    ecx,DWORD PTR [rbp-0x40]
  40583d:	mov    edi,ecx
  40583f:	call   4053a0 <flatcc_builder_embed_buffer@@Base+0x430>
  405844:	mov    DWORD PTR [rbp-0x3c],eax
  405847:	jmp    405863 <flatcc_builder_create_buffer@@Base+0x3b3>
  40584c:	mov    rax,QWORD PTR [rbp-0x10]
  405850:	mov    ecx,DWORD PTR [rax+0xf4]
  405856:	sub    ecx,DWORD PTR [rbp-0x40]
  405859:	mov    edi,ecx
  40585b:	call   4053a0 <flatcc_builder_embed_buffer@@Base+0x430>
  405860:	mov    DWORD PTR [rbp-0x3c],eax
  405863:	mov    eax,DWORD PTR [rbp-0x20]
  405866:	sub    eax,DWORD PTR [rbp-0x40]
  405869:	mov    edi,eax
  40586b:	call   4053a0 <flatcc_builder_embed_buffer@@Base+0x430>
  405870:	mov    DWORD PTR [rbp-0x38],eax
  405873:	mov    rdi,QWORD PTR [rbp-0x10]
  405877:	lea    rsi,[rbp-0xd0]
  40587e:	call   4053b0 <flatcc_builder_embed_buffer@@Base+0x440>
  405883:	xor    ecx,ecx
  405885:	mov    DWORD PTR [rbp-0x2c],eax
  405888:	cmp    ecx,eax
  40588a:	jne    4058af <flatcc_builder_create_buffer@@Base+0x3ff>
  405890:	lea    rdi,[rip+0x9d0b]        # 40f5a2 <flatcc_builder_padding_base@@Base+0x13d2>
  405897:	lea    rsi,[rip+0x8b44]        # 40e3e2 <flatcc_builder_padding_base@@Base+0x212>
  40589e:	mov    edx,0x304
  4058a3:	lea    rcx,[rip+0x8c8d]        # 40e537 <flatcc_builder_padding_base@@Base+0x367>
  4058aa:	call   403060 <__assert_fail@plt>
  4058af:	mov    eax,DWORD PTR [rbp-0x2c]
  4058b2:	mov    DWORD PTR [rbp-0x4],eax
  4058b5:	mov    eax,DWORD PTR [rbp-0x4]
  4058b8:	add    rsp,0xf0
  4058bf:	pop    rbp
  4058c0:	ret    
  4058c1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4058cb:	nop    DWORD PTR [rax+rax*1+0x0]
  4058d0:	push   rbp
  4058d1:	mov    rbp,rsp
  4058d4:	mov    QWORD PTR [rbp-0x8],rdi
  4058d8:	mov    WORD PTR [rbp-0xa],si
  4058dc:	mov    rax,QWORD PTR [rbp-0x8]
  4058e0:	movzx  ecx,WORD PTR [rax+0xe8]
  4058e7:	movzx  edx,WORD PTR [rbp-0xa]
  4058eb:	cmp    ecx,edx
  4058ed:	jge    405902 <flatcc_builder_create_buffer@@Base+0x452>
  4058f3:	mov    ax,WORD PTR [rbp-0xa]
  4058f7:	mov    rcx,QWORD PTR [rbp-0x8]
  4058fb:	mov    WORD PTR [rcx+0xe8],ax
  405902:	pop    rbp
  405903:	ret    
  405904:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40590e:	xchg   ax,ax
  405910:	push   rbp
  405911:	mov    rbp,rsp
  405914:	mov    DWORD PTR [rbp-0x4],edi
  405917:	mov    eax,DWORD PTR [rbp-0x4]
  40591a:	pop    rbp
  40591b:	ret    
  40591c:	nop    DWORD PTR [rax+0x0]

0000000000405920 <flatcc_builder_create_struct@@Base>:
  405920:	push   rbp
  405921:	mov    rbp,rsp
  405924:	sub    rsp,0xc0
  40592b:	mov    QWORD PTR [rbp-0x8],rdi
  40592f:	mov    QWORD PTR [rbp-0x10],rsi
  405933:	mov    QWORD PTR [rbp-0x18],rdx
  405937:	mov    WORD PTR [rbp-0x1a],cx
  40593b:	movzx  eax,WORD PTR [rbp-0x1a]
  40593f:	cmp    eax,0x1
  405942:	jl     40594d <flatcc_builder_create_struct@@Base+0x2d>
  405948:	jmp    40596c <flatcc_builder_create_struct@@Base+0x4c>
  40594d:	lea    rdi,[rip+0x8c66]        # 40e5ba <flatcc_builder_padding_base@@Base+0x3ea>
  405954:	lea    rsi,[rip+0x8a87]        # 40e3e2 <flatcc_builder_padding_base@@Base+0x212>
  40595b:	mov    edx,0x30f
  405960:	lea    rcx,[rip+0x8c5e]        # 40e5c5 <flatcc_builder_padding_base@@Base+0x3f5>
  405967:	call   403060 <__assert_fail@plt>
  40596c:	mov    rdi,QWORD PTR [rbp-0x8]
  405970:	movzx  esi,WORD PTR [rbp-0x1a]
  405974:	call   4058d0 <flatcc_builder_create_buffer@@Base+0x420>
  405979:	mov    rdi,QWORD PTR [rbp-0x8]
  40597d:	mov    rax,QWORD PTR [rbp-0x18]
  405981:	mov    esi,eax
  405983:	movzx  edx,WORD PTR [rbp-0x1a]
  405987:	call   405370 <flatcc_builder_embed_buffer@@Base+0x400>
  40598c:	mov    eax,eax
  40598e:	mov    ecx,eax
  405990:	mov    QWORD PTR [rbp-0x28],rcx
  405994:	mov    QWORD PTR [rbp-0xb8],0x0
  40599f:	mov    DWORD PTR [rbp-0xb0],0x0
  4059a9:	cmp    QWORD PTR [rbp-0x18],0x0
  4059ae:	jbe    405a18 <flatcc_builder_create_struct@@Base+0xf8>
  4059b4:	mov    rax,QWORD PTR [rbp-0x18]
  4059b8:	add    rax,QWORD PTR [rbp-0xb8]
  4059bf:	mov    QWORD PTR [rbp-0xb8],rax
  4059c6:	mov    rax,QWORD PTR [rbp-0x10]
  4059ca:	lea    rcx,[rbp-0xb8]
  4059d1:	mov    rdx,rcx
  4059d4:	add    rdx,0x10
  4059db:	movsxd rsi,DWORD PTR [rbp-0xb0]
  4059e2:	shl    rsi,0x4
  4059e6:	add    rdx,rsi
  4059e9:	mov    QWORD PTR [rdx],rax
  4059ec:	mov    rax,QWORD PTR [rbp-0x18]
  4059f0:	add    rcx,0x10
  4059f7:	movsxd rdx,DWORD PTR [rbp-0xb0]
  4059fe:	shl    rdx,0x4
  405a02:	add    rcx,rdx
  405a05:	mov    QWORD PTR [rcx+0x8],rax
  405a09:	mov    edi,DWORD PTR [rbp-0xb0]
  405a0f:	add    edi,0x1
  405a12:	mov    DWORD PTR [rbp-0xb0],edi
  405a18:	cmp    QWORD PTR [rbp-0x28],0x0
  405a1d:	jbe    405a8a <flatcc_builder_create_struct@@Base+0x16a>
  405a23:	lea    rax,[rip+0x87a6]        # 40e1d0 <flatcc_builder_padding_base@@Base>
  405a2a:	mov    rcx,QWORD PTR [rbp-0x28]
  405a2e:	add    rcx,QWORD PTR [rbp-0xb8]
  405a35:	mov    QWORD PTR [rbp-0xb8],rcx
  405a3c:	lea    rcx,[rbp-0xb8]
  405a43:	mov    rdx,rcx
  405a46:	add    rdx,0x10
  405a4d:	movsxd rsi,DWORD PTR [rbp-0xb0]
  405a54:	shl    rsi,0x4
  405a58:	add    rdx,rsi
  405a5b:	mov    QWORD PTR [rdx],rax
  405a5e:	mov    rax,QWORD PTR [rbp-0x28]
  405a62:	add    rcx,0x10
  405a69:	movsxd rdx,DWORD PTR [rbp-0xb0]
  405a70:	shl    rdx,0x4
  405a74:	add    rcx,rdx
  405a77:	mov    QWORD PTR [rcx+0x8],rax
  405a7b:	mov    edi,DWORD PTR [rbp-0xb0]
  405a81:	add    edi,0x1
  405a84:	mov    DWORD PTR [rbp-0xb0],edi
  405a8a:	mov    rdi,QWORD PTR [rbp-0x8]
  405a8e:	lea    rsi,[rbp-0xb8]
  405a95:	call   4053b0 <flatcc_builder_embed_buffer@@Base+0x440>
  405a9a:	add    rsp,0xc0
  405aa1:	pop    rbp
  405aa2:	ret    
  405aa3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405aad:	nop    DWORD PTR [rax]

0000000000405ab0 <flatcc_builder_start_buffer@@Base>:
  405ab0:	push   rbp
  405ab1:	mov    rbp,rsp
  405ab4:	sub    rsp,0x30
  405ab8:	mov    QWORD PTR [rbp-0x10],rdi
  405abc:	mov    QWORD PTR [rbp-0x18],rsi
  405ac0:	mov    WORD PTR [rbp-0x1a],dx
  405ac4:	mov    DWORD PTR [rbp-0x20],ecx
  405ac7:	mov    rdi,QWORD PTR [rbp-0x10]
  405acb:	mov    rax,QWORD PTR [rbp-0x10]
  405acf:	movzx  esi,WORD PTR [rax+0xe8]
  405ad6:	call   405c20 <flatcc_builder_start_buffer@@Base+0x170>
  405adb:	cmp    eax,0x0
  405ade:	je     405af0 <flatcc_builder_start_buffer@@Base+0x40>
  405ae4:	mov    DWORD PTR [rbp-0x4],0xffffffff
  405aeb:	jmp    405c11 <flatcc_builder_start_buffer@@Base+0x161>
  405af0:	mov    rax,QWORD PTR [rbp-0x10]
  405af4:	mov    WORD PTR [rax+0xe8],0x1
  405afd:	mov    rax,QWORD PTR [rbp-0x10]
  405b01:	mov    cx,WORD PTR [rax+0xec]
  405b08:	mov    rax,QWORD PTR [rbp-0x10]
  405b0c:	mov    rax,QWORD PTR [rax+0x30]
  405b10:	mov    WORD PTR [rax+0x22],cx
  405b14:	mov    cx,WORD PTR [rbp-0x1a]
  405b18:	mov    rax,QWORD PTR [rbp-0x10]
  405b1c:	mov    WORD PTR [rax+0xec],cx
  405b23:	mov    rax,QWORD PTR [rbp-0x10]
  405b27:	mov    cx,WORD PTR [rax+0x10c]
  405b2e:	mov    rax,QWORD PTR [rbp-0x10]
  405b32:	mov    rax,QWORD PTR [rax+0x30]
  405b36:	mov    WORD PTR [rax+0x20],cx
  405b3a:	mov    edx,DWORD PTR [rbp-0x20]
  405b3d:	mov    rax,QWORD PTR [rbp-0x10]
  405b41:	mov    WORD PTR [rax+0x10c],dx
  405b48:	mov    rax,QWORD PTR [rbp-0x10]
  405b4c:	mov    esi,DWORD PTR [rax+0xf8]
  405b52:	mov    rax,QWORD PTR [rbp-0x10]
  405b56:	mov    rax,QWORD PTR [rax+0x30]
  405b5a:	mov    DWORD PTR [rax+0x14],esi
  405b5d:	mov    rax,QWORD PTR [rbp-0x10]
  405b61:	mov    esi,DWORD PTR [rax+0x100]
  405b67:	mov    rax,QWORD PTR [rbp-0x10]
  405b6b:	mov    rax,QWORD PTR [rax+0x30]
  405b6f:	mov    DWORD PTR [rax+0x1c],esi
  405b72:	mov    rax,QWORD PTR [rbp-0x10]
  405b76:	mov    esi,DWORD PTR [rax+0xf0]
  405b7c:	mov    rax,QWORD PTR [rbp-0x10]
  405b80:	mov    DWORD PTR [rax+0xf8],esi
  405b86:	mov    rax,QWORD PTR [rbp-0x10]
  405b8a:	mov    esi,DWORD PTR [rax+0xfc]
  405b90:	mov    edi,esi
  405b92:	add    edi,0x1
  405b95:	mov    DWORD PTR [rax+0xfc],edi
  405b9b:	mov    rax,QWORD PTR [rbp-0x10]
  405b9f:	mov    DWORD PTR [rax+0x100],esi
  405ba5:	mov    rax,QWORD PTR [rbp-0x10]
  405ba9:	mov    esi,DWORD PTR [rax+0x110]
  405baf:	mov    rax,QWORD PTR [rbp-0x10]
  405bb3:	mov    rax,QWORD PTR [rax+0x30]
  405bb7:	mov    DWORD PTR [rax+0x10],esi
  405bba:	mov    rax,QWORD PTR [rbp-0x10]
  405bbe:	add    rax,0x110
  405bc4:	cmp    QWORD PTR [rbp-0x18],0x0
  405bc9:	mov    QWORD PTR [rbp-0x28],rax
  405bcd:	je     405be0 <flatcc_builder_start_buffer@@Base+0x130>
  405bd3:	mov    rax,QWORD PTR [rbp-0x18]
  405bd7:	mov    QWORD PTR [rbp-0x30],rax
  405bdb:	jmp    405bf0 <flatcc_builder_start_buffer@@Base+0x140>
  405be0:	lea    rax,[rip+0x85e9]        # 40e1d0 <flatcc_builder_padding_base@@Base>
  405be7:	mov    QWORD PTR [rbp-0x30],rax
  405beb:	jmp    405bf0 <flatcc_builder_start_buffer@@Base+0x140>
  405bf0:	mov    rax,QWORD PTR [rbp-0x30]
  405bf4:	mov    ecx,DWORD PTR [rax]
  405bf6:	mov    rax,QWORD PTR [rbp-0x28]
  405bfa:	mov    DWORD PTR [rax],ecx
  405bfc:	mov    rdx,QWORD PTR [rbp-0x10]
  405c00:	mov    rdx,QWORD PTR [rdx+0x30]
  405c04:	mov    WORD PTR [rdx+0xe],0x1
  405c0a:	mov    DWORD PTR [rbp-0x4],0x0
  405c11:	mov    eax,DWORD PTR [rbp-0x4]
  405c14:	add    rsp,0x30
  405c18:	pop    rbp
  405c19:	ret    
  405c1a:	nop    WORD PTR [rax+rax*1+0x0]
  405c20:	push   rbp
  405c21:	mov    rbp,rsp
  405c24:	sub    rsp,0x20
  405c28:	mov    QWORD PTR [rbp-0x10],rdi
  405c2c:	mov    WORD PTR [rbp-0x12],si
  405c30:	mov    rax,QWORD PTR [rbp-0x10]
  405c34:	mov    ecx,DWORD PTR [rax+0x104]
  405c3a:	add    ecx,0x1
  405c3d:	mov    DWORD PTR [rax+0x104],ecx
  405c43:	mov    rax,QWORD PTR [rbp-0x10]
  405c47:	cmp    ecx,DWORD PTR [rax+0x108]
  405c4d:	jle    405d3a <flatcc_builder_start_buffer@@Base+0x28a>
  405c53:	mov    rax,QWORD PTR [rbp-0x10]
  405c57:	cmp    DWORD PTR [rax+0x120],0x0
  405c5e:	jle    405c8a <flatcc_builder_start_buffer@@Base+0x1da>
  405c64:	mov    rax,QWORD PTR [rbp-0x10]
  405c68:	mov    ecx,DWORD PTR [rax+0x104]
  405c6e:	mov    rax,QWORD PTR [rbp-0x10]
  405c72:	cmp    ecx,DWORD PTR [rax+0x120]
  405c78:	jle    405c8a <flatcc_builder_start_buffer@@Base+0x1da>
  405c7e:	mov    DWORD PTR [rbp-0x4],0xffffffff
  405c85:	jmp    405dd5 <flatcc_builder_start_buffer@@Base+0x325>
  405c8a:	xor    r8d,r8d
  405c8d:	mov    rdi,QWORD PTR [rbp-0x10]
  405c91:	mov    rax,QWORD PTR [rbp-0x10]
  405c95:	mov    ecx,DWORD PTR [rax+0x104]
  405c9b:	sub    ecx,0x1
  405c9e:	movsxd rax,ecx
  405ca1:	imul   rdx,rax,0x24
  405ca8:	mov    esi,0x4
  405cad:	mov    ecx,0x24
  405cb2:	call   404c60 <flatcc_builder_enter_user_frame_ptr@@Base+0xf0>
  405cb7:	mov    rcx,QWORD PTR [rbp-0x10]
  405cbb:	mov    QWORD PTR [rcx+0x30],rax
  405cbf:	cmp    rax,0x0
  405cc3:	jne    405cd5 <flatcc_builder_start_buffer@@Base+0x225>
  405cc9:	mov    DWORD PTR [rbp-0x4],0xffffffff
  405cd0:	jmp    405dd5 <flatcc_builder_start_buffer@@Base+0x325>
  405cd5:	mov    rax,QWORD PTR [rbp-0x10]
  405cd9:	mov    rax,QWORD PTR [rax+0xa0]
  405ce0:	xor    ecx,ecx
  405ce2:	mov    edx,ecx
  405ce4:	mov    esi,0x24
  405ce9:	div    rsi
  405cec:	mov    rsi,QWORD PTR [rbp-0x10]
  405cf0:	mov    DWORD PTR [rsi+0x108],eax
  405cf6:	mov    rsi,QWORD PTR [rbp-0x10]
  405cfa:	cmp    DWORD PTR [rsi+0x120],0x0
  405d01:	jle    405d35 <flatcc_builder_start_buffer@@Base+0x285>
  405d07:	mov    rax,QWORD PTR [rbp-0x10]
  405d0b:	mov    ecx,DWORD PTR [rax+0x120]
  405d11:	mov    rax,QWORD PTR [rbp-0x10]
  405d15:	cmp    ecx,DWORD PTR [rax+0x108]
  405d1b:	jge    405d35 <flatcc_builder_start_buffer@@Base+0x285>
  405d21:	mov    rax,QWORD PTR [rbp-0x10]
  405d25:	mov    ecx,DWORD PTR [rax+0x120]
  405d2b:	mov    rax,QWORD PTR [rbp-0x10]
  405d2f:	mov    DWORD PTR [rax+0x108],ecx
  405d35:	jmp    405d4d <flatcc_builder_start_buffer@@Base+0x29d>
  405d3a:	mov    rax,QWORD PTR [rbp-0x10]
  405d3e:	mov    rcx,QWORD PTR [rax+0x30]
  405d42:	add    rcx,0x24
  405d49:	mov    QWORD PTR [rax+0x30],rcx
  405d4d:	mov    rax,QWORD PTR [rbp-0x10]
  405d51:	mov    ecx,DWORD PTR [rax+0x20]
  405d54:	mov    rax,QWORD PTR [rbp-0x10]
  405d58:	mov    rax,QWORD PTR [rax+0x30]
  405d5c:	mov    DWORD PTR [rax+0x8],ecx
  405d5f:	mov    rax,QWORD PTR [rbp-0x10]
  405d63:	mov    dx,WORD PTR [rax+0xea]
  405d6a:	mov    rax,QWORD PTR [rbp-0x10]
  405d6e:	mov    rax,QWORD PTR [rax+0x30]
  405d72:	mov    WORD PTR [rax+0xc],dx
  405d76:	mov    dx,WORD PTR [rbp-0x12]
  405d7a:	mov    rax,QWORD PTR [rbp-0x10]
  405d7e:	mov    WORD PTR [rax+0xea],dx
  405d85:	mov    rax,QWORD PTR [rbp-0x10]
  405d89:	mov    ecx,DWORD PTR [rax+0x28]
  405d8c:	mov    rax,QWORD PTR [rbp-0x10]
  405d90:	mov    rax,QWORD PTR [rax+0x30]
  405d94:	mov    DWORD PTR [rax],ecx
  405d96:	mov    rax,QWORD PTR [rbp-0x10]
  405d9a:	mov    rax,QWORD PTR [rax+0x30]
  405d9e:	mov    DWORD PTR [rax+0x4],0xfffffffc
  405da5:	mov    rax,QWORD PTR [rbp-0x10]
  405da9:	mov    ecx,DWORD PTR [rax+0x28]
  405dac:	mov    rax,QWORD PTR [rbp-0x10]
  405db0:	add    ecx,DWORD PTR [rax+0x20]
  405db3:	add    ecx,0x8
  405db6:	sub    ecx,0x1
  405db9:	and    ecx,0xfffffff8
  405dbc:	mov    rax,QWORD PTR [rbp-0x10]
  405dc0:	mov    DWORD PTR [rax+0x28],ecx
  405dc3:	mov    rax,QWORD PTR [rbp-0x10]
  405dc7:	mov    DWORD PTR [rax+0x20],0x0
  405dce:	mov    DWORD PTR [rbp-0x4],0x0
  405dd5:	mov    eax,DWORD PTR [rbp-0x4]
  405dd8:	add    rsp,0x20
  405ddc:	pop    rbp
  405ddd:	ret    
  405dde:	xchg   ax,ax

0000000000405de0 <flatcc_builder_end_buffer@@Base>:
  405de0:	push   rbp
  405de1:	mov    rbp,rsp
  405de4:	sub    rsp,0x20
  405de8:	xor    eax,eax
  405dea:	mov    QWORD PTR [rbp-0x10],rdi
  405dee:	mov    DWORD PTR [rbp-0x14],esi
  405df1:	mov    rcx,QWORD PTR [rbp-0x10]
  405df5:	movzx  edx,WORD PTR [rcx+0x10c]
  405dfc:	and    edx,0x2
  405dff:	mov    DWORD PTR [rbp-0x1c],edx
  405e02:	mov    rcx,QWORD PTR [rbp-0x10]
  405e06:	mov    edx,DWORD PTR [rcx+0x100]
  405e0c:	cmp    edx,0x0
  405e0f:	mov    edx,0x1
  405e14:	cmove  edx,eax
  405e17:	or     edx,DWORD PTR [rbp-0x1c]
  405e1a:	mov    DWORD PTR [rbp-0x1c],edx
  405e1d:	mov    rcx,QWORD PTR [rbp-0x10]
  405e21:	mov    rcx,QWORD PTR [rcx+0x30]
  405e25:	movzx  eax,WORD PTR [rcx+0xe]
  405e29:	cmp    eax,0x1
  405e2c:	jne    405e37 <flatcc_builder_end_buffer@@Base+0x57>
  405e32:	jmp    405e56 <flatcc_builder_end_buffer@@Base+0x76>
  405e37:	lea    rdi,[rip+0x87ed]        # 40e62b <flatcc_builder_padding_base@@Base+0x45b>
  405e3e:	lea    rsi,[rip+0x859d]        # 40e3e2 <flatcc_builder_padding_base@@Base+0x212>
  405e45:	mov    edx,0x346
  405e4a:	lea    rcx,[rip+0x8806]        # 40e657 <flatcc_builder_padding_base@@Base+0x487>
  405e51:	call   403060 <__assert_fail@plt>
  405e56:	mov    rdi,QWORD PTR [rbp-0x10]
  405e5a:	mov    rax,QWORD PTR [rbp-0x10]
  405e5e:	movzx  esi,WORD PTR [rax+0xec]
  405e65:	call   4058d0 <flatcc_builder_create_buffer@@Base+0x420>
  405e6a:	mov    rdi,QWORD PTR [rbp-0x10]
  405e6e:	mov    rax,QWORD PTR [rbp-0x10]
  405e72:	add    rax,0x110
  405e78:	mov    rcx,QWORD PTR [rbp-0x10]
  405e7c:	mov    dx,WORD PTR [rcx+0xec]
  405e83:	mov    ecx,DWORD PTR [rbp-0x14]
  405e86:	mov    r8,QWORD PTR [rbp-0x10]
  405e8a:	mov    r9w,WORD PTR [r8+0xe8]
  405e92:	mov    esi,DWORD PTR [rbp-0x1c]
  405e95:	mov    DWORD PTR [rbp-0x20],esi
  405e98:	mov    rsi,rax
  405e9b:	movzx  edx,dx
  405e9e:	movzx  r8d,r9w
  405ea2:	mov    r9d,DWORD PTR [rbp-0x20]
  405ea6:	call   4054b0 <flatcc_builder_create_buffer@@Base>
  405eab:	xor    ecx,ecx
  405ead:	mov    DWORD PTR [rbp-0x18],eax
  405eb0:	cmp    ecx,eax
  405eb2:	jne    405ec4 <flatcc_builder_end_buffer@@Base+0xe4>
  405eb8:	mov    DWORD PTR [rbp-0x4],0x0
  405ebf:	jmp    405f29 <flatcc_builder_end_buffer@@Base+0x149>
  405ec4:	mov    rax,QWORD PTR [rbp-0x10]
  405ec8:	mov    rax,QWORD PTR [rax+0x30]
  405ecc:	mov    ecx,DWORD PTR [rax+0x14]
  405ecf:	mov    rax,QWORD PTR [rbp-0x10]
  405ed3:	mov    DWORD PTR [rax+0xf8],ecx
  405ed9:	mov    rax,QWORD PTR [rbp-0x10]
  405edd:	mov    rax,QWORD PTR [rax+0x30]
  405ee1:	mov    ecx,DWORD PTR [rax+0x1c]
  405ee4:	mov    rax,QWORD PTR [rbp-0x10]
  405ee8:	mov    DWORD PTR [rax+0x100],ecx
  405eee:	mov    rax,QWORD PTR [rbp-0x10]
  405ef2:	mov    rax,QWORD PTR [rax+0x30]
  405ef6:	mov    ecx,DWORD PTR [rax+0x10]
  405ef9:	mov    rax,QWORD PTR [rbp-0x10]
  405efd:	mov    DWORD PTR [rax+0x110],ecx
  405f03:	mov    rax,QWORD PTR [rbp-0x10]
  405f07:	mov    rax,QWORD PTR [rax+0x30]
  405f0b:	mov    dx,WORD PTR [rax+0x20]
  405f0f:	mov    rax,QWORD PTR [rbp-0x10]
  405f13:	mov    WORD PTR [rax+0x10c],dx
  405f1a:	mov    rdi,QWORD PTR [rbp-0x10]
  405f1e:	call   405f40 <flatcc_builder_end_buffer@@Base+0x160>
  405f23:	mov    ecx,DWORD PTR [rbp-0x18]
  405f26:	mov    DWORD PTR [rbp-0x4],ecx
  405f29:	mov    eax,DWORD PTR [rbp-0x4]
  405f2c:	add    rsp,0x20
  405f30:	pop    rbp
  405f31:	ret    
  405f32:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405f3c:	nop    DWORD PTR [rax+0x0]
  405f40:	push   rbp
  405f41:	mov    rbp,rsp
  405f44:	sub    rsp,0x10
  405f48:	xor    esi,esi
  405f4a:	mov    QWORD PTR [rbp-0x8],rdi
  405f4e:	mov    rax,QWORD PTR [rbp-0x8]
  405f52:	mov    rdi,QWORD PTR [rax+0x18]
  405f56:	mov    rax,QWORD PTR [rbp-0x8]
  405f5a:	mov    ecx,DWORD PTR [rax+0x20]
  405f5d:	mov    edx,ecx
  405f5f:	call   403070 <memset@plt>
  405f64:	mov    rax,QWORD PTR [rbp-0x8]
  405f68:	mov    rax,QWORD PTR [rax+0x30]
  405f6c:	mov    ecx,DWORD PTR [rax+0x8]
  405f6f:	mov    rax,QWORD PTR [rbp-0x8]
  405f73:	mov    DWORD PTR [rax+0x20],ecx
  405f76:	mov    rax,QWORD PTR [rbp-0x8]
  405f7a:	mov    rax,QWORD PTR [rax+0x30]
  405f7e:	mov    ecx,DWORD PTR [rax]
  405f80:	mov    rax,QWORD PTR [rbp-0x8]
  405f84:	mov    DWORD PTR [rax+0x28],ecx
  405f87:	mov    rdi,QWORD PTR [rbp-0x8]
  405f8b:	mov    rax,QWORD PTR [rbp-0x8]
  405f8f:	mov    rax,QWORD PTR [rax+0x30]
  405f93:	mov    esi,DWORD PTR [rax+0x4]
  405f96:	call   406070 <flatcc_builder_start_struct@@Base+0x70>
  405f9b:	mov    rdi,QWORD PTR [rbp-0x8]
  405f9f:	mov    rax,QWORD PTR [rbp-0x8]
  405fa3:	movzx  esi,WORD PTR [rax+0xea]
  405faa:	call   4058d0 <flatcc_builder_create_buffer@@Base+0x420>
  405faf:	mov    rax,QWORD PTR [rbp-0x8]
  405fb3:	mov    rax,QWORD PTR [rax+0x30]
  405fb7:	mov    r8w,WORD PTR [rax+0xc]
  405fbc:	mov    rax,QWORD PTR [rbp-0x8]
  405fc0:	mov    WORD PTR [rax+0xea],r8w
  405fc8:	mov    rax,QWORD PTR [rbp-0x8]
  405fcc:	mov    rdx,QWORD PTR [rax+0x30]
  405fd0:	add    rdx,0xffffffffffffffdc
  405fd7:	mov    QWORD PTR [rax+0x30],rdx
  405fdb:	mov    rax,QWORD PTR [rbp-0x8]
  405fdf:	mov    ecx,DWORD PTR [rax+0x104]
  405fe5:	add    ecx,0xffffffff
  405fe8:	mov    DWORD PTR [rax+0x104],ecx
  405fee:	add    rsp,0x10
  405ff2:	pop    rbp
  405ff3:	ret    
  405ff4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405ffe:	xchg   ax,ax

0000000000406000 <flatcc_builder_start_struct@@Base>:
  406000:	push   rbp
  406001:	mov    rbp,rsp
  406004:	sub    rsp,0x20
  406008:	mov    QWORD PTR [rbp-0x10],rdi
  40600c:	mov    QWORD PTR [rbp-0x18],rsi
  406010:	mov    WORD PTR [rbp-0x1a],dx
  406014:	mov    rdi,QWORD PTR [rbp-0x10]
  406018:	movzx  esi,WORD PTR [rbp-0x1a]
  40601c:	call   405c20 <flatcc_builder_start_buffer@@Base+0x170>
  406021:	cmp    eax,0x0
  406024:	je     406037 <flatcc_builder_start_struct@@Base+0x37>
  40602a:	mov    QWORD PTR [rbp-0x8],0x0
  406032:	jmp    406066 <flatcc_builder_start_struct@@Base+0x66>
  406037:	mov    rax,QWORD PTR [rbp-0x10]
  40603b:	mov    rax,QWORD PTR [rax+0x30]
  40603f:	mov    WORD PTR [rax+0xe],0x2
  406045:	mov    rdi,QWORD PTR [rbp-0x10]
  406049:	mov    esi,0xfffffffc
  40604e:	call   406070 <flatcc_builder_start_struct@@Base+0x70>
  406053:	mov    rdi,QWORD PTR [rbp-0x10]
  406057:	mov    rax,QWORD PTR [rbp-0x18]
  40605b:	mov    esi,eax
  40605d:	call   4060f0 <flatcc_builder_start_struct@@Base+0xf0>
  406062:	mov    QWORD PTR [rbp-0x8],rax
  406066:	mov    rax,QWORD PTR [rbp-0x8]
  40606a:	add    rsp,0x20
  40606e:	pop    rbp
  40606f:	ret    
  406070:	push   rbp
  406071:	mov    rbp,rsp
  406074:	mov    QWORD PTR [rbp-0x8],rdi
  406078:	mov    DWORD PTR [rbp-0xc],esi
  40607b:	mov    rax,QWORD PTR [rbp-0x8]
  40607f:	add    rax,0x58
  406085:	add    rax,0x10
  40608b:	mov    QWORD PTR [rbp-0x18],rax
  40608f:	mov    rax,QWORD PTR [rbp-0x8]
  406093:	mov    rax,QWORD PTR [rax+0x68]
  406097:	mov    rcx,QWORD PTR [rbp-0x8]
  40609b:	mov    edx,DWORD PTR [rcx+0x28]
  40609e:	mov    ecx,edx
  4060a0:	add    rax,rcx
  4060a3:	mov    rcx,QWORD PTR [rbp-0x8]
  4060a7:	mov    QWORD PTR [rcx+0x18],rax
  4060ab:	mov    rax,QWORD PTR [rbp-0x18]
  4060af:	mov    rax,QWORD PTR [rax+0x8]
  4060b3:	mov    rcx,QWORD PTR [rbp-0x8]
  4060b7:	sub    eax,DWORD PTR [rcx+0x28]
  4060ba:	mov    rcx,QWORD PTR [rbp-0x8]
  4060be:	mov    DWORD PTR [rcx+0x24],eax
  4060c1:	mov    rcx,QWORD PTR [rbp-0x8]
  4060c5:	mov    eax,DWORD PTR [rcx+0x24]
  4060c8:	cmp    eax,DWORD PTR [rbp-0xc]
  4060cb:	jbe    4060db <flatcc_builder_start_struct@@Base+0xdb>
  4060d1:	mov    eax,DWORD PTR [rbp-0xc]
  4060d4:	mov    rcx,QWORD PTR [rbp-0x8]
  4060d8:	mov    DWORD PTR [rcx+0x24],eax
  4060db:	mov    eax,DWORD PTR [rbp-0xc]
  4060de:	mov    rcx,QWORD PTR [rbp-0x8]
  4060e2:	mov    rcx,QWORD PTR [rcx+0x30]
  4060e6:	mov    DWORD PTR [rcx+0x4],eax
  4060e9:	pop    rbp
  4060ea:	ret    
  4060eb:	nop    DWORD PTR [rax+rax*1+0x0]
  4060f0:	push   rbp
  4060f1:	mov    rbp,rsp
  4060f4:	sub    rsp,0x20
  4060f8:	mov    QWORD PTR [rbp-0x10],rdi
  4060fc:	mov    DWORD PTR [rbp-0x14],esi
  4060ff:	mov    rax,QWORD PTR [rbp-0x10]
  406103:	mov    ecx,DWORD PTR [rax+0x20]
  406106:	mov    eax,ecx
  406108:	mov    QWORD PTR [rbp-0x20],rax
  40610c:	mov    ecx,DWORD PTR [rbp-0x14]
  40610f:	mov    rax,QWORD PTR [rbp-0x10]
  406113:	add    ecx,DWORD PTR [rax+0x20]
  406116:	mov    DWORD PTR [rax+0x20],ecx
  406119:	mov    rax,QWORD PTR [rbp-0x10]
  40611d:	cmp    ecx,DWORD PTR [rax+0x24]
  406120:	jb     40615d <flatcc_builder_start_struct@@Base+0x15d>
  406126:	mov    rdi,QWORD PTR [rbp-0x10]
  40612a:	mov    rax,QWORD PTR [rbp-0x10]
  40612e:	mov    ecx,DWORD PTR [rax+0x20]
  406131:	add    ecx,0x1
  406134:	mov    ecx,ecx
  406136:	mov    esi,ecx
  406138:	mov    edx,0xfffffffc
  40613d:	call   40a0d0 <flatcc_builder_get_emit_context@@Base+0x50>
  406142:	cmp    eax,0x0
  406145:	je     406158 <flatcc_builder_start_struct@@Base+0x158>
  40614b:	mov    QWORD PTR [rbp-0x8],0x0
  406153:	jmp    40616d <flatcc_builder_start_struct@@Base+0x16d>
  406158:	jmp    40615d <flatcc_builder_start_struct@@Base+0x15d>
  40615d:	mov    rax,QWORD PTR [rbp-0x10]
  406161:	mov    rax,QWORD PTR [rax+0x18]
  406165:	add    rax,QWORD PTR [rbp-0x20]
  406169:	mov    QWORD PTR [rbp-0x8],rax
  40616d:	mov    rax,QWORD PTR [rbp-0x8]
  406171:	add    rsp,0x20
  406175:	pop    rbp
  406176:	ret    
  406177:	nop    WORD PTR [rax+rax*1+0x0]

0000000000406180 <flatcc_builder_struct_edit@@Base>:
  406180:	push   rbp
  406181:	mov    rbp,rsp
  406184:	mov    QWORD PTR [rbp-0x8],rdi
  406188:	mov    rax,QWORD PTR [rbp-0x8]
  40618c:	mov    rax,QWORD PTR [rax+0x18]
  406190:	pop    rbp
  406191:	ret    
  406192:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40619c:	nop    DWORD PTR [rax+0x0]

00000000004061a0 <flatcc_builder_end_struct@@Base>:
  4061a0:	push   rbp
  4061a1:	mov    rbp,rsp
  4061a4:	sub    rsp,0x20
  4061a8:	mov    QWORD PTR [rbp-0x10],rdi
  4061ac:	mov    rax,QWORD PTR [rbp-0x10]
  4061b0:	mov    rax,QWORD PTR [rax+0x30]
  4061b4:	movzx  ecx,WORD PTR [rax+0xe]
  4061b8:	cmp    ecx,0x2
  4061bb:	jne    4061c6 <flatcc_builder_end_struct@@Base+0x26>
  4061c1:	jmp    4061e5 <flatcc_builder_end_struct@@Base+0x45>
  4061c6:	lea    rdi,[rip+0x84e3]        # 40e6b0 <flatcc_builder_padding_base@@Base+0x4e0>
  4061cd:	lea    rsi,[rip+0x820e]        # 40e3e2 <flatcc_builder_padding_base@@Base+0x212>
  4061d4:	mov    edx,0x368
  4061d9:	lea    rcx,[rip+0x84fc]        # 40e6dc <flatcc_builder_padding_base@@Base+0x50c>
  4061e0:	call   403060 <__assert_fail@plt>
  4061e5:	mov    rdi,QWORD PTR [rbp-0x10]
  4061e9:	mov    rax,QWORD PTR [rbp-0x10]
  4061ed:	mov    rsi,QWORD PTR [rax+0x18]
  4061f1:	mov    rax,QWORD PTR [rbp-0x10]
  4061f5:	mov    ecx,DWORD PTR [rax+0x20]
  4061f8:	mov    edx,ecx
  4061fa:	mov    rax,QWORD PTR [rbp-0x10]
  4061fe:	movzx  ecx,WORD PTR [rax+0xea]
  406205:	call   405920 <flatcc_builder_create_struct@@Base>
  40620a:	xor    ecx,ecx
  40620c:	mov    DWORD PTR [rbp-0x14],eax
  40620f:	cmp    ecx,eax
  406211:	jne    406223 <flatcc_builder_end_struct@@Base+0x83>
  406217:	mov    DWORD PTR [rbp-0x4],0x0
  40621e:	jmp    406232 <flatcc_builder_end_struct@@Base+0x92>
  406223:	mov    rdi,QWORD PTR [rbp-0x10]
  406227:	call   405f40 <flatcc_builder_end_buffer@@Base+0x160>
  40622c:	mov    eax,DWORD PTR [rbp-0x14]
  40622f:	mov    DWORD PTR [rbp-0x4],eax
  406232:	mov    eax,DWORD PTR [rbp-0x4]
  406235:	add    rsp,0x20
  406239:	pop    rbp
  40623a:	ret    
  40623b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000406240 <flatcc_builder_extend_vector@@Base>:
  406240:	push   rbp
  406241:	mov    rbp,rsp
  406244:	sub    rsp,0x20
  406248:	mov    QWORD PTR [rbp-0x10],rdi
  40624c:	mov    QWORD PTR [rbp-0x18],rsi
  406250:	mov    rdi,QWORD PTR [rbp-0x10]
  406254:	mov    rax,QWORD PTR [rbp-0x18]
  406258:	mov    rcx,QWORD PTR [rbp-0x10]
  40625c:	mov    rcx,QWORD PTR [rcx+0x30]
  406260:	mov    edx,DWORD PTR [rcx+0x18]
  406263:	mov    esi,eax
  406265:	call   4062b0 <flatcc_builder_extend_vector@@Base+0x70>
  40626a:	cmp    eax,0x0
  40626d:	je     406280 <flatcc_builder_extend_vector@@Base+0x40>
  406273:	mov    QWORD PTR [rbp-0x8],0x0
  40627b:	jmp    4062a1 <flatcc_builder_extend_vector@@Base+0x61>
  406280:	mov    rdi,QWORD PTR [rbp-0x10]
  406284:	mov    rax,QWORD PTR [rbp-0x10]
  406288:	mov    rax,QWORD PTR [rax+0x30]
  40628c:	mov    ecx,DWORD PTR [rax+0x10]
  40628f:	mov    rax,QWORD PTR [rbp-0x18]
  406293:	imul   ecx,eax
  406296:	mov    esi,ecx
  406298:	call   4060f0 <flatcc_builder_start_struct@@Base+0xf0>
  40629d:	mov    QWORD PTR [rbp-0x8],rax
  4062a1:	mov    rax,QWORD PTR [rbp-0x8]
  4062a5:	add    rsp,0x20
  4062a9:	pop    rbp
  4062aa:	ret    
  4062ab:	nop    DWORD PTR [rax+rax*1+0x0]
  4062b0:	push   rbp
  4062b1:	mov    rbp,rsp
  4062b4:	sub    rsp,0x20
  4062b8:	mov    QWORD PTR [rbp-0x10],rdi
  4062bc:	mov    DWORD PTR [rbp-0x14],esi
  4062bf:	mov    DWORD PTR [rbp-0x18],edx
  4062c2:	mov    rax,QWORD PTR [rbp-0x10]
  4062c6:	mov    rax,QWORD PTR [rax+0x30]
  4062ca:	mov    ecx,DWORD PTR [rax+0x14]
  4062cd:	mov    DWORD PTR [rbp-0x1c],ecx
  4062d0:	mov    ecx,DWORD PTR [rbp-0x1c]
  4062d3:	add    ecx,DWORD PTR [rbp-0x14]
  4062d6:	mov    DWORD PTR [rbp-0x20],ecx
  4062d9:	mov    ecx,DWORD PTR [rbp-0x1c]
  4062dc:	cmp    ecx,DWORD PTR [rbp-0x20]
  4062df:	ja     4062f1 <flatcc_builder_extend_vector@@Base+0xb1>
  4062e5:	mov    eax,DWORD PTR [rbp-0x20]
  4062e8:	cmp    eax,DWORD PTR [rbp-0x18]
  4062eb:	jbe    406339 <flatcc_builder_extend_vector@@Base+0xf9>
  4062f1:	mov    eax,DWORD PTR [rbp-0x1c]
  4062f4:	cmp    eax,DWORD PTR [rbp-0x20]
  4062f7:	ja     40630e <flatcc_builder_extend_vector@@Base+0xce>
  4062fd:	mov    eax,DWORD PTR [rbp-0x20]
  406300:	cmp    eax,DWORD PTR [rbp-0x18]
  406303:	ja     40630e <flatcc_builder_extend_vector@@Base+0xce>
  406309:	jmp    40632d <flatcc_builder_extend_vector@@Base+0xed>
  40630e:	lea    rdi,[rip+0x9196]        # 40f4ab <flatcc_builder_padding_base@@Base+0x12db>
  406315:	lea    rsi,[rip+0x80c6]        # 40e3e2 <flatcc_builder_padding_base@@Base+0x212>
  40631c:	mov    edx,0x37c
  406321:	lea    rcx,[rip+0x919e]        # 40f4c6 <flatcc_builder_padding_base@@Base+0x12f6>
  406328:	call   403060 <__assert_fail@plt>
  40632d:	mov    DWORD PTR [rbp-0x4],0xffffffff
  406334:	jmp    40634e <flatcc_builder_extend_vector@@Base+0x10e>
  406339:	mov    eax,DWORD PTR [rbp-0x20]
  40633c:	mov    rcx,QWORD PTR [rbp-0x10]
  406340:	mov    rcx,QWORD PTR [rcx+0x30]
  406344:	mov    DWORD PTR [rcx+0x14],eax
  406347:	mov    DWORD PTR [rbp-0x4],0x0
  40634e:	mov    eax,DWORD PTR [rbp-0x4]
  406351:	add    rsp,0x20
  406355:	pop    rbp
  406356:	ret    
  406357:	nop    WORD PTR [rax+rax*1+0x0]

0000000000406360 <flatcc_builder_vector_push@@Base>:
  406360:	push   rbp
  406361:	mov    rbp,rsp
  406364:	sub    rsp,0x20
  406368:	mov    QWORD PTR [rbp-0x10],rdi
  40636c:	mov    QWORD PTR [rbp-0x18],rsi
  406370:	mov    rax,QWORD PTR [rbp-0x10]
  406374:	mov    rax,QWORD PTR [rax+0x30]
  406378:	movzx  ecx,WORD PTR [rax+0xe]
  40637c:	cmp    ecx,0x4
  40637f:	jne    40638a <flatcc_builder_vector_push@@Base+0x2a>
  406385:	jmp    4063a9 <flatcc_builder_vector_push@@Base+0x49>
  40638a:	lea    rdi,[rip+0x838e]        # 40e71f <flatcc_builder_padding_base@@Base+0x54f>
  406391:	lea    rsi,[rip+0x804a]        # 40e3e2 <flatcc_builder_padding_base@@Base+0x212>
  406398:	mov    edx,0x38b
  40639d:	lea    rcx,[rip+0x83a7]        # 40e74b <flatcc_builder_padding_base@@Base+0x57b>
  4063a4:	call   403060 <__assert_fail@plt>
  4063a9:	mov    rax,QWORD PTR [rbp-0x10]
  4063ad:	mov    rax,QWORD PTR [rax+0x30]
  4063b1:	mov    ecx,DWORD PTR [rax+0x14]
  4063b4:	mov    rax,QWORD PTR [rbp-0x10]
  4063b8:	mov    rax,QWORD PTR [rax+0x30]
  4063bc:	cmp    ecx,DWORD PTR [rax+0x18]
  4063bf:	jbe    406412 <flatcc_builder_vector_push@@Base+0xb2>
  4063c5:	mov    rax,QWORD PTR [rbp-0x10]
  4063c9:	mov    rax,QWORD PTR [rax+0x30]
  4063cd:	mov    ecx,DWORD PTR [rax+0x14]
  4063d0:	mov    rax,QWORD PTR [rbp-0x10]
  4063d4:	mov    rax,QWORD PTR [rax+0x30]
  4063d8:	cmp    ecx,DWORD PTR [rax+0x18]
  4063db:	ja     4063e6 <flatcc_builder_vector_push@@Base+0x86>
  4063e1:	jmp    406405 <flatcc_builder_vector_push@@Base+0xa5>
  4063e6:	lea    rdi,[rip+0x83a1]        # 40e78e <flatcc_builder_padding_base@@Base+0x5be>
  4063ed:	lea    rsi,[rip+0x7fee]        # 40e3e2 <flatcc_builder_padding_base@@Base+0x212>
  4063f4:	mov    edx,0x38c
  4063f9:	lea    rcx,[rip+0x834b]        # 40e74b <flatcc_builder_padding_base@@Base+0x57b>
  406400:	call   403060 <__assert_fail@plt>
  406405:	mov    QWORD PTR [rbp-0x8],0x0
  40640d:	jmp    40643f <flatcc_builder_vector_push@@Base+0xdf>
  406412:	mov    rax,QWORD PTR [rbp-0x10]
  406416:	mov    rax,QWORD PTR [rax+0x30]
  40641a:	mov    ecx,DWORD PTR [rax+0x14]
  40641d:	add    ecx,0x1
  406420:	mov    DWORD PTR [rax+0x14],ecx
  406423:	mov    rdi,QWORD PTR [rbp-0x10]
  406427:	mov    rsi,QWORD PTR [rbp-0x18]
  40642b:	mov    rax,QWORD PTR [rbp-0x10]
  40642f:	mov    rax,QWORD PTR [rax+0x30]
  406433:	mov    edx,DWORD PTR [rax+0x10]
  406436:	call   406450 <flatcc_builder_vector_push@@Base+0xf0>
  40643b:	mov    QWORD PTR [rbp-0x8],rax
  40643f:	mov    rax,QWORD PTR [rbp-0x8]
  406443:	add    rsp,0x20
  406447:	pop    rbp
  406448:	ret    
  406449:	nop    DWORD PTR [rax+0x0]
  406450:	push   rbp
  406451:	mov    rbp,rsp
  406454:	sub    rsp,0x30
  406458:	mov    QWORD PTR [rbp-0x10],rdi
  40645c:	mov    QWORD PTR [rbp-0x18],rsi
  406460:	mov    DWORD PTR [rbp-0x1c],edx
  406463:	mov    rdi,QWORD PTR [rbp-0x10]
  406467:	mov    esi,DWORD PTR [rbp-0x1c]
  40646a:	call   4060f0 <flatcc_builder_start_struct@@Base+0xf0>
  40646f:	mov    QWORD PTR [rbp-0x28],rax
  406473:	cmp    rax,0x0
  406477:	jne    40648a <flatcc_builder_vector_push@@Base+0x12a>
  40647d:	mov    QWORD PTR [rbp-0x8],0x0
  406485:	jmp    4064a4 <flatcc_builder_vector_push@@Base+0x144>
  40648a:	mov    rdi,QWORD PTR [rbp-0x28]
  40648e:	mov    rsi,QWORD PTR [rbp-0x18]
  406492:	mov    eax,DWORD PTR [rbp-0x1c]
  406495:	mov    edx,eax
  406497:	call   4030a0 <memcpy@plt>
  40649c:	mov    rcx,QWORD PTR [rbp-0x28]
  4064a0:	mov    QWORD PTR [rbp-0x8],rcx
  4064a4:	mov    rax,QWORD PTR [rbp-0x8]
  4064a8:	add    rsp,0x30
  4064ac:	pop    rbp
  4064ad:	ret    
  4064ae:	xchg   ax,ax

00000000004064b0 <flatcc_builder_append_vector@@Base>:
  4064b0:	push   rbp
  4064b1:	mov    rbp,rsp
  4064b4:	sub    rsp,0x20
  4064b8:	mov    QWORD PTR [rbp-0x10],rdi
  4064bc:	mov    QWORD PTR [rbp-0x18],rsi
  4064c0:	mov    QWORD PTR [rbp-0x20],rdx
  4064c4:	mov    rax,QWORD PTR [rbp-0x10]
  4064c8:	mov    rax,QWORD PTR [rax+0x30]
  4064cc:	movzx  ecx,WORD PTR [rax+0xe]
  4064d0:	cmp    ecx,0x4
  4064d3:	jne    4064de <flatcc_builder_append_vector@@Base+0x2e>
  4064d9:	jmp    4064fd <flatcc_builder_append_vector@@Base+0x4d>
  4064de:	lea    rdi,[rip+0x823a]        # 40e71f <flatcc_builder_padding_base@@Base+0x54f>
  4064e5:	lea    rsi,[rip+0x7ef6]        # 40e3e2 <flatcc_builder_padding_base@@Base+0x212>
  4064ec:	mov    edx,0x393
  4064f1:	lea    rcx,[rip+0x82d3]        # 40e7cb <flatcc_builder_padding_base@@Base+0x5fb>
  4064f8:	call   403060 <__assert_fail@plt>
  4064fd:	mov    rdi,QWORD PTR [rbp-0x10]
  406501:	mov    rax,QWORD PTR [rbp-0x20]
  406505:	mov    rcx,QWORD PTR [rbp-0x10]
  406509:	mov    rcx,QWORD PTR [rcx+0x30]
  40650d:	mov    edx,DWORD PTR [rcx+0x18]
  406510:	mov    esi,eax
  406512:	call   4062b0 <flatcc_builder_extend_vector@@Base+0x70>
  406517:	cmp    eax,0x0
  40651a:	je     40652d <flatcc_builder_append_vector@@Base+0x7d>
  406520:	mov    QWORD PTR [rbp-0x8],0x0
  406528:	jmp    406552 <flatcc_builder_append_vector@@Base+0xa2>
  40652d:	mov    rdi,QWORD PTR [rbp-0x10]
  406531:	mov    rsi,QWORD PTR [rbp-0x18]
  406535:	mov    rax,QWORD PTR [rbp-0x10]
  406539:	mov    rax,QWORD PTR [rax+0x30]
  40653d:	mov    ecx,DWORD PTR [rax+0x10]
  406540:	mov    rax,QWORD PTR [rbp-0x20]
  406544:	imul   ecx,eax
  406547:	mov    edx,ecx
  406549:	call   406450 <flatcc_builder_vector_push@@Base+0xf0>
  40654e:	mov    QWORD PTR [rbp-0x8],rax
  406552:	mov    rax,QWORD PTR [rbp-0x8]
  406556:	add    rsp,0x20
  40655a:	pop    rbp
  40655b:	ret    
  40655c:	nop    DWORD PTR [rax+0x0]

0000000000406560 <flatcc_builder_extend_offset_vector@@Base>:
  406560:	push   rbp
  406561:	mov    rbp,rsp
  406564:	sub    rsp,0x20
  406568:	mov    QWORD PTR [rbp-0x10],rdi
  40656c:	mov    QWORD PTR [rbp-0x18],rsi
  406570:	mov    rdi,QWORD PTR [rbp-0x10]
  406574:	mov    rax,QWORD PTR [rbp-0x18]
  406578:	mov    esi,eax
  40657a:	mov    edx,0x3fffffff
  40657f:	call   4062b0 <flatcc_builder_extend_vector@@Base+0x70>
  406584:	cmp    eax,0x0
  406587:	je     40659a <flatcc_builder_extend_offset_vector@@Base+0x3a>
  40658d:	mov    QWORD PTR [rbp-0x8],0x0
  406595:	jmp    4065b5 <flatcc_builder_extend_offset_vector@@Base+0x55>
  40659a:	mov    rdi,QWORD PTR [rbp-0x10]
  40659e:	mov    rax,QWORD PTR [rbp-0x18]
  4065a2:	mov    eax,eax
  4065a4:	mov    ecx,eax
  4065a6:	shl    rcx,0x2
  4065aa:	mov    esi,ecx
  4065ac:	call   4060f0 <flatcc_builder_start_struct@@Base+0xf0>
  4065b1:	mov    QWORD PTR [rbp-0x8],rax
  4065b5:	mov    rax,QWORD PTR [rbp-0x8]
  4065b9:	add    rsp,0x20
  4065bd:	pop    rbp
  4065be:	ret    
  4065bf:	nop

00000000004065c0 <flatcc_builder_offset_vector_push@@Base>:
  4065c0:	push   rbp
  4065c1:	mov    rbp,rsp
  4065c4:	sub    rsp,0x20
  4065c8:	mov    QWORD PTR [rbp-0x10],rdi
  4065cc:	mov    DWORD PTR [rbp-0x14],esi
  4065cf:	mov    rax,QWORD PTR [rbp-0x10]
  4065d3:	mov    rax,QWORD PTR [rax+0x30]
  4065d7:	movzx  ecx,WORD PTR [rax+0xe]
  4065db:	cmp    ecx,0x5
  4065de:	jne    4065e9 <flatcc_builder_offset_vector_push@@Base+0x29>
  4065e4:	jmp    406608 <flatcc_builder_offset_vector_push@@Base+0x48>
  4065e9:	lea    rdi,[rip+0x8228]        # 40e818 <flatcc_builder_padding_base@@Base+0x648>
  4065f0:	lea    rsi,[rip+0x7deb]        # 40e3e2 <flatcc_builder_padding_base@@Base+0x212>
  4065f7:	mov    edx,0x3a6
  4065fc:	lea    rcx,[rip+0x8248]        # 40e84b <flatcc_builder_padding_base@@Base+0x67b>
  406603:	call   403060 <__assert_fail@plt>
  406608:	mov    rax,QWORD PTR [rbp-0x10]
  40660c:	mov    rax,QWORD PTR [rax+0x30]
  406610:	mov    ecx,DWORD PTR [rax+0x14]
  406613:	mov    eax,ecx
  406615:	cmp    rax,0x3fffffff
  40661b:	jne    40662e <flatcc_builder_offset_vector_push@@Base+0x6e>
  406621:	mov    QWORD PTR [rbp-0x8],0x0
  406629:	jmp    40667c <flatcc_builder_offset_vector_push@@Base+0xbc>
  40662e:	mov    rax,QWORD PTR [rbp-0x10]
  406632:	mov    rax,QWORD PTR [rax+0x30]
  406636:	mov    ecx,DWORD PTR [rax+0x14]
  406639:	add    ecx,0x1
  40663c:	mov    DWORD PTR [rax+0x14],ecx
  40663f:	mov    rdi,QWORD PTR [rbp-0x10]
  406643:	mov    esi,0x4
  406648:	call   4060f0 <flatcc_builder_start_struct@@Base+0xf0>
  40664d:	xor    ecx,ecx
  40664f:	mov    edx,ecx
  406651:	mov    QWORD PTR [rbp-0x20],rax
  406655:	cmp    rdx,rax
  406658:	jne    40666b <flatcc_builder_offset_vector_push@@Base+0xab>
  40665e:	mov    QWORD PTR [rbp-0x8],0x0
  406666:	jmp    40667c <flatcc_builder_offset_vector_push@@Base+0xbc>
  40666b:	mov    eax,DWORD PTR [rbp-0x14]
  40666e:	mov    rcx,QWORD PTR [rbp-0x20]
  406672:	mov    DWORD PTR [rcx],eax
  406674:	mov    rcx,QWORD PTR [rbp-0x20]
  406678:	mov    QWORD PTR [rbp-0x8],rcx
  40667c:	mov    rax,QWORD PTR [rbp-0x8]
  406680:	add    rsp,0x20
  406684:	pop    rbp
  406685:	ret    
  406686:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000406690 <flatcc_builder_append_offset_vector@@Base>:
  406690:	push   rbp
  406691:	mov    rbp,rsp
  406694:	sub    rsp,0x20
  406698:	mov    QWORD PTR [rbp-0x10],rdi
  40669c:	mov    QWORD PTR [rbp-0x18],rsi
  4066a0:	mov    QWORD PTR [rbp-0x20],rdx
  4066a4:	mov    rax,QWORD PTR [rbp-0x10]
  4066a8:	mov    rax,QWORD PTR [rax+0x30]
  4066ac:	movzx  ecx,WORD PTR [rax+0xe]
  4066b0:	cmp    ecx,0x5
  4066b3:	jne    4066be <flatcc_builder_append_offset_vector@@Base+0x2e>
  4066b9:	jmp    4066dd <flatcc_builder_append_offset_vector@@Base+0x4d>
  4066be:	lea    rdi,[rip+0x8153]        # 40e818 <flatcc_builder_padding_base@@Base+0x648>
  4066c5:	lea    rsi,[rip+0x7d16]        # 40e3e2 <flatcc_builder_padding_base@@Base+0x212>
  4066cc:	mov    edx,0x3b4
  4066d1:	lea    rcx,[rip+0x81d5]        # 40e8ad <flatcc_builder_padding_base@@Base+0x6dd>
  4066d8:	call   403060 <__assert_fail@plt>
  4066dd:	mov    rdi,QWORD PTR [rbp-0x10]
  4066e1:	mov    rax,QWORD PTR [rbp-0x20]
  4066e5:	mov    esi,eax
  4066e7:	mov    edx,0x3fffffff
  4066ec:	call   4062b0 <flatcc_builder_extend_vector@@Base+0x70>
  4066f1:	cmp    eax,0x0
  4066f4:	je     406707 <flatcc_builder_append_offset_vector@@Base+0x77>
  4066fa:	mov    QWORD PTR [rbp-0x8],0x0
  406702:	jmp    406727 <flatcc_builder_append_offset_vector@@Base+0x97>
  406707:	mov    rdi,QWORD PTR [rbp-0x10]
  40670b:	mov    rax,QWORD PTR [rbp-0x18]
  40670f:	mov    rcx,QWORD PTR [rbp-0x20]
  406713:	mov    ecx,ecx
  406715:	mov    edx,ecx
  406717:	shl    rdx,0x2
  40671b:	mov    rsi,rax
  40671e:	call   406450 <flatcc_builder_vector_push@@Base+0xf0>
  406723:	mov    QWORD PTR [rbp-0x8],rax
  406727:	mov    rax,QWORD PTR [rbp-0x8]
  40672b:	add    rsp,0x20
  40672f:	pop    rbp
  406730:	ret    
  406731:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40673b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000406740 <flatcc_builder_extend_string@@Base>:
  406740:	push   rbp
  406741:	mov    rbp,rsp
  406744:	sub    rsp,0x20
  406748:	mov    QWORD PTR [rbp-0x10],rdi
  40674c:	mov    QWORD PTR [rbp-0x18],rsi
  406750:	mov    rax,QWORD PTR [rbp-0x10]
  406754:	mov    rax,QWORD PTR [rax+0x30]
  406758:	movzx  ecx,WORD PTR [rax+0xe]
  40675c:	cmp    ecx,0x6
  40675f:	jne    40676a <flatcc_builder_extend_string@@Base+0x2a>
  406765:	jmp    406789 <flatcc_builder_extend_string@@Base+0x49>
  40676a:	lea    rdi,[rip+0x81b0]        # 40e921 <flatcc_builder_padding_base@@Base+0x751>
  406771:	lea    rsi,[rip+0x7c6a]        # 40e3e2 <flatcc_builder_padding_base@@Base+0x212>
  406778:	mov    edx,0x3bd
  40677d:	lea    rcx,[rip+0x81c9]        # 40e94d <flatcc_builder_padding_base@@Base+0x77d>
  406784:	call   403060 <__assert_fail@plt>
  406789:	mov    rdi,QWORD PTR [rbp-0x10]
  40678d:	mov    rax,QWORD PTR [rbp-0x18]
  406791:	mov    esi,eax
  406793:	mov    edx,0xffffffff
  406798:	call   4062b0 <flatcc_builder_extend_vector@@Base+0x70>
  40679d:	cmp    eax,0x0
  4067a0:	je     4067b3 <flatcc_builder_extend_string@@Base+0x73>
  4067a6:	mov    QWORD PTR [rbp-0x8],0x0
  4067ae:	jmp    4067c6 <flatcc_builder_extend_string@@Base+0x86>
  4067b3:	mov    rdi,QWORD PTR [rbp-0x10]
  4067b7:	mov    rax,QWORD PTR [rbp-0x18]
  4067bb:	mov    esi,eax
  4067bd:	call   4060f0 <flatcc_builder_start_struct@@Base+0xf0>
  4067c2:	mov    QWORD PTR [rbp-0x8],rax
  4067c6:	mov    rax,QWORD PTR [rbp-0x8]
  4067ca:	add    rsp,0x20
  4067ce:	pop    rbp
  4067cf:	ret    

00000000004067d0 <flatcc_builder_append_string@@Base>:
  4067d0:	push   rbp
  4067d1:	mov    rbp,rsp
  4067d4:	sub    rsp,0x20
  4067d8:	mov    QWORD PTR [rbp-0x10],rdi
  4067dc:	mov    QWORD PTR [rbp-0x18],rsi
  4067e0:	mov    QWORD PTR [rbp-0x20],rdx
  4067e4:	mov    rax,QWORD PTR [rbp-0x10]
  4067e8:	mov    rax,QWORD PTR [rax+0x30]
  4067ec:	movzx  ecx,WORD PTR [rax+0xe]
  4067f0:	cmp    ecx,0x6
  4067f3:	jne    4067fe <flatcc_builder_append_string@@Base+0x2e>
  4067f9:	jmp    40681d <flatcc_builder_append_string@@Base+0x4d>
  4067fe:	lea    rdi,[rip+0x811c]        # 40e921 <flatcc_builder_padding_base@@Base+0x751>
  406805:	lea    rsi,[rip+0x7bd6]        # 40e3e2 <flatcc_builder_padding_base@@Base+0x212>
  40680c:	mov    edx,0x3c6
  406811:	lea    rcx,[rip+0x8174]        # 40e98c <flatcc_builder_padding_base@@Base+0x7bc>
  406818:	call   403060 <__assert_fail@plt>
  40681d:	mov    rdi,QWORD PTR [rbp-0x10]
  406821:	mov    rax,QWORD PTR [rbp-0x20]
  406825:	mov    esi,eax
  406827:	mov    edx,0xffffffff
  40682c:	call   4062b0 <flatcc_builder_extend_vector@@Base+0x70>
  406831:	cmp    eax,0x0
  406834:	je     406847 <flatcc_builder_append_string@@Base+0x77>
  40683a:	mov    QWORD PTR [rbp-0x8],0x0
  406842:	jmp    40685e <flatcc_builder_append_string@@Base+0x8e>
  406847:	mov    rdi,QWORD PTR [rbp-0x10]
  40684b:	mov    rsi,QWORD PTR [rbp-0x18]
  40684f:	mov    rax,QWORD PTR [rbp-0x20]
  406853:	mov    edx,eax
  406855:	call   406450 <flatcc_builder_vector_push@@Base+0xf0>
  40685a:	mov    QWORD PTR [rbp-0x8],rax
  40685e:	mov    rax,QWORD PTR [rbp-0x8]
  406862:	add    rsp,0x20
  406866:	pop    rbp
  406867:	ret    
  406868:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000406870 <flatcc_builder_append_string_str@@Base>:
  406870:	push   rbp
  406871:	mov    rbp,rsp
  406874:	sub    rsp,0x20
  406878:	mov    QWORD PTR [rbp-0x8],rdi
  40687c:	mov    QWORD PTR [rbp-0x10],rsi
  406880:	mov    rdi,QWORD PTR [rbp-0x8]
  406884:	mov    rsi,QWORD PTR [rbp-0x10]
  406888:	mov    rax,QWORD PTR [rbp-0x10]
  40688c:	mov    QWORD PTR [rbp-0x18],rdi
  406890:	mov    rdi,rax
  406893:	mov    QWORD PTR [rbp-0x20],rsi
  406897:	call   403050 <strlen@plt>
  40689c:	mov    rdi,QWORD PTR [rbp-0x18]
  4068a0:	mov    rsi,QWORD PTR [rbp-0x20]
  4068a4:	mov    rdx,rax
  4068a7:	call   4067d0 <flatcc_builder_append_string@@Base>
  4068ac:	add    rsp,0x20
  4068b0:	pop    rbp
  4068b1:	ret    
  4068b2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4068bc:	nop    DWORD PTR [rax+0x0]

00000000004068c0 <flatcc_builder_append_string_strn@@Base>:
  4068c0:	push   rbp
  4068c1:	mov    rbp,rsp
  4068c4:	sub    rsp,0x30
  4068c8:	mov    QWORD PTR [rbp-0x8],rdi
  4068cc:	mov    QWORD PTR [rbp-0x10],rsi
  4068d0:	mov    QWORD PTR [rbp-0x18],rdx
  4068d4:	mov    rdi,QWORD PTR [rbp-0x8]
  4068d8:	mov    rsi,QWORD PTR [rbp-0x10]
  4068dc:	mov    rax,QWORD PTR [rbp-0x10]
  4068e0:	mov    rcx,QWORD PTR [rbp-0x18]
  4068e4:	mov    QWORD PTR [rbp-0x20],rdi
  4068e8:	mov    rdi,rax
  4068eb:	mov    QWORD PTR [rbp-0x28],rsi
  4068ef:	mov    rsi,rcx
  4068f2:	call   406910 <flatcc_builder_append_string_strn@@Base+0x50>
  4068f7:	mov    rdi,QWORD PTR [rbp-0x20]
  4068fb:	mov    rsi,QWORD PTR [rbp-0x28]
  4068ff:	mov    rdx,rax
  406902:	call   4067d0 <flatcc_builder_append_string@@Base>
  406907:	add    rsp,0x30
  40690b:	pop    rbp
  40690c:	ret    
  40690d:	nop    DWORD PTR [rax]
  406910:	push   rbp
  406911:	mov    rbp,rsp
  406914:	sub    rsp,0x20
  406918:	mov    QWORD PTR [rbp-0x8],rdi
  40691c:	mov    QWORD PTR [rbp-0x10],rsi
  406920:	mov    rdi,QWORD PTR [rbp-0x8]
  406924:	mov    rdx,QWORD PTR [rbp-0x10]
  406928:	xor    esi,esi
  40692a:	call   403080 <memchr@plt>
  40692f:	mov    QWORD PTR [rbp-0x18],rax
  406933:	cmp    QWORD PTR [rbp-0x18],0x0
  406938:	je     406952 <flatcc_builder_append_string_strn@@Base+0x92>
  40693e:	mov    rax,QWORD PTR [rbp-0x18]
  406942:	mov    rcx,QWORD PTR [rbp-0x8]
  406946:	sub    rax,rcx
  406949:	mov    QWORD PTR [rbp-0x20],rax
  40694d:	jmp    40695a <flatcc_builder_append_string_strn@@Base+0x9a>
  406952:	mov    rax,QWORD PTR [rbp-0x10]
  406956:	mov    QWORD PTR [rbp-0x20],rax
  40695a:	mov    rax,QWORD PTR [rbp-0x20]
  40695e:	add    rsp,0x20
  406962:	pop    rbp
  406963:	ret    
  406964:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40696e:	xchg   ax,ax

0000000000406970 <flatcc_builder_truncate_vector@@Base>:
  406970:	push   rbp
  406971:	mov    rbp,rsp
  406974:	sub    rsp,0x20
  406978:	mov    QWORD PTR [rbp-0x10],rdi
  40697c:	mov    QWORD PTR [rbp-0x18],rsi
  406980:	mov    rax,QWORD PTR [rbp-0x10]
  406984:	mov    rax,QWORD PTR [rax+0x30]
  406988:	movzx  ecx,WORD PTR [rax+0xe]
  40698c:	cmp    ecx,0x4
  40698f:	jne    40699a <flatcc_builder_truncate_vector@@Base+0x2a>
  406995:	jmp    4069b9 <flatcc_builder_truncate_vector@@Base+0x49>
  40699a:	lea    rdi,[rip+0x7d7e]        # 40e71f <flatcc_builder_padding_base@@Base+0x54f>
  4069a1:	lea    rsi,[rip+0x7a3a]        # 40e3e2 <flatcc_builder_padding_base@@Base+0x212>
  4069a8:	mov    edx,0x3d9
  4069ad:	lea    rcx,[rip+0x8025]        # 40e9d9 <flatcc_builder_padding_base@@Base+0x809>
  4069b4:	call   403060 <__assert_fail@plt>
  4069b9:	mov    rax,QWORD PTR [rbp-0x10]
  4069bd:	mov    rax,QWORD PTR [rax+0x30]
  4069c1:	mov    ecx,DWORD PTR [rax+0x14]
  4069c4:	mov    eax,ecx
  4069c6:	cmp    rax,QWORD PTR [rbp-0x18]
  4069ca:	jae    406a17 <flatcc_builder_truncate_vector@@Base+0xa7>
  4069d0:	mov    rax,QWORD PTR [rbp-0x10]
  4069d4:	mov    rax,QWORD PTR [rax+0x30]
  4069d8:	mov    ecx,DWORD PTR [rax+0x14]
  4069db:	mov    eax,ecx
  4069dd:	cmp    rax,QWORD PTR [rbp-0x18]
  4069e1:	jb     4069ec <flatcc_builder_truncate_vector@@Base+0x7c>
  4069e7:	jmp    406a0b <flatcc_builder_truncate_vector@@Base+0x9b>
  4069ec:	lea    rdi,[rip+0x8025]        # 40ea18 <flatcc_builder_padding_base@@Base+0x848>
  4069f3:	lea    rsi,[rip+0x79e8]        # 40e3e2 <flatcc_builder_padding_base@@Base+0x212>
  4069fa:	mov    edx,0x3da
  4069ff:	lea    rcx,[rip+0x7fd3]        # 40e9d9 <flatcc_builder_padding_base@@Base+0x809>
  406a06:	call   403060 <__assert_fail@plt>
  406a0b:	mov    DWORD PTR [rbp-0x4],0xffffffff
  406a12:	jmp    406a4f <flatcc_builder_truncate_vector@@Base+0xdf>
  406a17:	mov    rax,QWORD PTR [rbp-0x18]
  406a1b:	mov    rcx,QWORD PTR [rbp-0x10]
  406a1f:	mov    rcx,QWORD PTR [rcx+0x30]
  406a23:	mov    edx,DWORD PTR [rcx+0x14]
  406a26:	sub    edx,eax
  406a28:	mov    DWORD PTR [rcx+0x14],edx
  406a2b:	mov    rdi,QWORD PTR [rbp-0x10]
  406a2f:	mov    rcx,QWORD PTR [rbp-0x10]
  406a33:	mov    rcx,QWORD PTR [rcx+0x30]
  406a37:	mov    eax,DWORD PTR [rcx+0x10]
  406a3a:	mov    rcx,QWORD PTR [rbp-0x18]
  406a3e:	imul   eax,ecx
  406a41:	mov    esi,eax
  406a43:	call   406a60 <flatcc_builder_truncate_vector@@Base+0xf0>
  406a48:	mov    DWORD PTR [rbp-0x4],0x0
  406a4f:	mov    eax,DWORD PTR [rbp-0x4]
  406a52:	add    rsp,0x20
  406a56:	pop    rbp
  406a57:	ret    
  406a58:	nop    DWORD PTR [rax+rax*1+0x0]
  406a60:	push   rbp
  406a61:	mov    rbp,rsp
  406a64:	sub    rsp,0x20
  406a68:	xor    eax,eax
  406a6a:	mov    QWORD PTR [rbp-0x8],rdi
  406a6e:	mov    DWORD PTR [rbp-0xc],esi
  406a71:	mov    ecx,DWORD PTR [rbp-0xc]
  406a74:	mov    rdx,QWORD PTR [rbp-0x8]
  406a78:	mov    esi,DWORD PTR [rdx+0x20]
  406a7b:	sub    esi,ecx
  406a7d:	mov    DWORD PTR [rdx+0x20],esi
  406a80:	mov    rdx,QWORD PTR [rbp-0x8]
  406a84:	mov    rdx,QWORD PTR [rdx+0x18]
  406a88:	mov    rdi,QWORD PTR [rbp-0x8]
  406a8c:	mov    ecx,DWORD PTR [rdi+0x20]
  406a8f:	mov    edi,ecx
  406a91:	add    rdx,rdi
  406a94:	mov    ecx,DWORD PTR [rbp-0xc]
  406a97:	mov    edi,ecx
  406a99:	mov    QWORD PTR [rbp-0x18],rdi
  406a9d:	mov    rdi,rdx
  406aa0:	mov    esi,eax
  406aa2:	mov    rdx,QWORD PTR [rbp-0x18]
  406aa6:	call   403070 <memset@plt>
  406aab:	add    rsp,0x20
  406aaf:	pop    rbp
  406ab0:	ret    
  406ab1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  406abb:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000406ac0 <flatcc_builder_truncate_offset_vector@@Base>:
  406ac0:	push   rbp
  406ac1:	mov    rbp,rsp
  406ac4:	sub    rsp,0x20
  406ac8:	mov    QWORD PTR [rbp-0x10],rdi
  406acc:	mov    QWORD PTR [rbp-0x18],rsi
  406ad0:	mov    rax,QWORD PTR [rbp-0x10]
  406ad4:	mov    rax,QWORD PTR [rax+0x30]
  406ad8:	movzx  ecx,WORD PTR [rax+0xe]
  406adc:	cmp    ecx,0x5
  406adf:	jne    406aea <flatcc_builder_truncate_offset_vector@@Base+0x2a>
  406ae5:	jmp    406b09 <flatcc_builder_truncate_offset_vector@@Base+0x49>
  406aea:	lea    rdi,[rip+0x7d27]        # 40e818 <flatcc_builder_padding_base@@Base+0x648>
  406af1:	lea    rsi,[rip+0x78ea]        # 40e3e2 <flatcc_builder_padding_base@@Base+0x212>
  406af8:	mov    edx,0x3e2
  406afd:	lea    rcx,[rip+0x7f38]        # 40ea3c <flatcc_builder_padding_base@@Base+0x86c>
  406b04:	call   403060 <__assert_fail@plt>
  406b09:	mov    rax,QWORD PTR [rbp-0x10]
  406b0d:	mov    rax,QWORD PTR [rax+0x30]
  406b11:	mov    ecx,DWORD PTR [rax+0x14]
  406b14:	mov    rax,QWORD PTR [rbp-0x18]
  406b18:	cmp    ecx,eax
  406b1a:	jae    406b67 <flatcc_builder_truncate_offset_vector@@Base+0xa7>
  406b20:	mov    rax,QWORD PTR [rbp-0x10]
  406b24:	mov    rax,QWORD PTR [rax+0x30]
  406b28:	mov    ecx,DWORD PTR [rax+0x14]
  406b2b:	mov    rax,QWORD PTR [rbp-0x18]
  406b2f:	cmp    ecx,eax
  406b31:	jb     406b3c <flatcc_builder_truncate_offset_vector@@Base+0x7c>
  406b37:	jmp    406b5b <flatcc_builder_truncate_offset_vector@@Base+0x9b>
  406b3c:	lea    rdi,[rip+0x7f3f]        # 40ea82 <flatcc_builder_padding_base@@Base+0x8b2>
  406b43:	lea    rsi,[rip+0x7898]        # 40e3e2 <flatcc_builder_padding_base@@Base+0x212>
  406b4a:	mov    edx,0x3e3
  406b4f:	lea    rcx,[rip+0x7ee6]        # 40ea3c <flatcc_builder_padding_base@@Base+0x86c>
  406b56:	call   403060 <__assert_fail@plt>
  406b5b:	mov    DWORD PTR [rbp-0x4],0xffffffff
  406b62:	jmp    406b9f <flatcc_builder_truncate_offset_vector@@Base+0xdf>
  406b67:	mov    rax,QWORD PTR [rbp-0x18]
  406b6b:	mov    rcx,QWORD PTR [rbp-0x10]
  406b6f:	mov    rcx,QWORD PTR [rcx+0x30]
  406b73:	mov    edx,DWORD PTR [rcx+0x14]
  406b76:	sub    edx,eax
  406b78:	mov    DWORD PTR [rcx+0x14],edx
  406b7b:	mov    rdi,QWORD PTR [rbp-0x10]
  406b7f:	mov    rcx,QWORD PTR [rbp-0x10]
  406b83:	mov    rcx,QWORD PTR [rcx+0x30]
  406b87:	mov    eax,DWORD PTR [rcx+0x10]
  406b8a:	mov    rcx,QWORD PTR [rbp-0x18]
  406b8e:	imul   eax,ecx
  406b91:	mov    esi,eax
  406b93:	call   406a60 <flatcc_builder_truncate_vector@@Base+0xf0>
  406b98:	mov    DWORD PTR [rbp-0x4],0x0
  406b9f:	mov    eax,DWORD PTR [rbp-0x4]
  406ba2:	add    rsp,0x20
  406ba6:	pop    rbp
  406ba7:	ret    
  406ba8:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000406bb0 <flatcc_builder_truncate_string@@Base>:
  406bb0:	push   rbp
  406bb1:	mov    rbp,rsp
  406bb4:	sub    rsp,0x20
  406bb8:	mov    QWORD PTR [rbp-0x10],rdi
  406bbc:	mov    QWORD PTR [rbp-0x18],rsi
  406bc0:	mov    rax,QWORD PTR [rbp-0x10]
  406bc4:	mov    rax,QWORD PTR [rax+0x30]
  406bc8:	movzx  ecx,WORD PTR [rax+0xe]
  406bcc:	cmp    ecx,0x6
  406bcf:	jne    406bda <flatcc_builder_truncate_string@@Base+0x2a>
  406bd5:	jmp    406bf9 <flatcc_builder_truncate_string@@Base+0x49>
  406bda:	lea    rdi,[rip+0x7d40]        # 40e921 <flatcc_builder_padding_base@@Base+0x751>
  406be1:	lea    rsi,[rip+0x77fa]        # 40e3e2 <flatcc_builder_padding_base@@Base+0x212>
  406be8:	mov    edx,0x3eb
  406bed:	lea    rcx,[rip+0x7ec9]        # 40eabd <flatcc_builder_padding_base@@Base+0x8ed>
  406bf4:	call   403060 <__assert_fail@plt>
  406bf9:	mov    rax,QWORD PTR [rbp-0x10]
  406bfd:	mov    rax,QWORD PTR [rax+0x30]
  406c01:	mov    ecx,DWORD PTR [rax+0x14]
  406c04:	mov    eax,ecx
  406c06:	cmp    rax,QWORD PTR [rbp-0x18]
  406c0a:	jae    406c57 <flatcc_builder_truncate_string@@Base+0xa7>
  406c10:	mov    rax,QWORD PTR [rbp-0x10]
  406c14:	mov    rax,QWORD PTR [rax+0x30]
  406c18:	mov    ecx,DWORD PTR [rax+0x14]
  406c1b:	mov    eax,ecx
  406c1d:	cmp    rax,QWORD PTR [rbp-0x18]
  406c21:	jb     406c2c <flatcc_builder_truncate_string@@Base+0x7c>
  406c27:	jmp    406c4b <flatcc_builder_truncate_string@@Base+0x9b>
  406c2c:	lea    rdi,[rip+0x7ec9]        # 40eafc <flatcc_builder_padding_base@@Base+0x92c>
  406c33:	lea    rsi,[rip+0x77a8]        # 40e3e2 <flatcc_builder_padding_base@@Base+0x212>
  406c3a:	mov    edx,0x3ec
  406c3f:	lea    rcx,[rip+0x7e77]        # 40eabd <flatcc_builder_padding_base@@Base+0x8ed>
  406c46:	call   403060 <__assert_fail@plt>
  406c4b:	mov    DWORD PTR [rbp-0x4],0xffffffff
  406c52:	jmp    406c81 <flatcc_builder_truncate_string@@Base+0xd1>
  406c57:	mov    rax,QWORD PTR [rbp-0x18]
  406c5b:	mov    rcx,QWORD PTR [rbp-0x10]
  406c5f:	mov    rcx,QWORD PTR [rcx+0x30]
  406c63:	mov    edx,DWORD PTR [rcx+0x14]
  406c66:	sub    edx,eax
  406c68:	mov    DWORD PTR [rcx+0x14],edx
  406c6b:	mov    rdi,QWORD PTR [rbp-0x10]
  406c6f:	mov    rcx,QWORD PTR [rbp-0x18]
  406c73:	mov    esi,ecx
  406c75:	call   406a60 <flatcc_builder_truncate_vector@@Base+0xf0>
  406c7a:	mov    DWORD PTR [rbp-0x4],0x0
  406c81:	mov    eax,DWORD PTR [rbp-0x4]
  406c84:	add    rsp,0x20
  406c88:	pop    rbp
  406c89:	ret    
  406c8a:	nop    WORD PTR [rax+rax*1+0x0]

0000000000406c90 <flatcc_builder_start_vector@@Base>:
  406c90:	push   rbp
  406c91:	mov    rbp,rsp
  406c94:	sub    rsp,0x30
  406c98:	mov    QWORD PTR [rbp-0x10],rdi
  406c9c:	mov    QWORD PTR [rbp-0x18],rsi
  406ca0:	mov    WORD PTR [rbp-0x1a],dx
  406ca4:	mov    QWORD PTR [rbp-0x28],rcx
  406ca8:	lea    rdi,[rbp-0x1a]
  406cac:	mov    esi,0x4
  406cb1:	call   406d40 <flatcc_builder_start_vector@@Base+0xb0>
  406cb6:	mov    rdi,QWORD PTR [rbp-0x10]
  406cba:	movzx  esi,WORD PTR [rbp-0x1a]
  406cbe:	call   405c20 <flatcc_builder_start_buffer@@Base+0x170>
  406cc3:	cmp    eax,0x0
  406cc6:	je     406cd8 <flatcc_builder_start_vector@@Base+0x48>
  406ccc:	mov    DWORD PTR [rbp-0x4],0xffffffff
  406cd3:	jmp    406d28 <flatcc_builder_start_vector@@Base+0x98>
  406cd8:	mov    rax,QWORD PTR [rbp-0x18]
  406cdc:	mov    rcx,QWORD PTR [rbp-0x10]
  406ce0:	mov    rcx,QWORD PTR [rcx+0x30]
  406ce4:	mov    DWORD PTR [rcx+0x10],eax
  406ce7:	mov    rcx,QWORD PTR [rbp-0x10]
  406ceb:	mov    rcx,QWORD PTR [rcx+0x30]
  406cef:	mov    DWORD PTR [rcx+0x14],0x0
  406cf6:	mov    rcx,QWORD PTR [rbp-0x28]
  406cfa:	mov    rdx,QWORD PTR [rbp-0x10]
  406cfe:	mov    rdx,QWORD PTR [rdx+0x30]
  406d02:	mov    DWORD PTR [rdx+0x18],ecx
  406d05:	mov    rdx,QWORD PTR [rbp-0x10]
  406d09:	mov    rdx,QWORD PTR [rdx+0x30]
  406d0d:	mov    WORD PTR [rdx+0xe],0x4
  406d13:	mov    rdi,QWORD PTR [rbp-0x10]
  406d17:	mov    esi,0xfffffffc
  406d1c:	call   406070 <flatcc_builder_start_struct@@Base+0x70>
  406d21:	mov    DWORD PTR [rbp-0x4],0x0
  406d28:	mov    eax,DWORD PTR [rbp-0x4]
  406d2b:	add    rsp,0x30
  406d2f:	pop    rbp
  406d30:	ret    
  406d31:	nop    WORD PTR cs:[rax+rax*1+0x0]
  406d3b:	nop    DWORD PTR [rax+rax*1+0x0]
  406d40:	push   rbp
  406d41:	mov    rbp,rsp
  406d44:	mov    QWORD PTR [rbp-0x8],rdi
  406d48:	mov    WORD PTR [rbp-0xa],si
  406d4c:	mov    rax,QWORD PTR [rbp-0x8]
  406d50:	movzx  ecx,WORD PTR [rax]
  406d53:	movzx  edx,WORD PTR [rbp-0xa]
  406d57:	cmp    ecx,edx
  406d59:	jge    406d6a <flatcc_builder_start_vector@@Base+0xda>
  406d5f:	mov    ax,WORD PTR [rbp-0xa]
  406d63:	mov    rcx,QWORD PTR [rbp-0x8]
  406d67:	mov    WORD PTR [rcx],ax
  406d6a:	pop    rbp
  406d6b:	ret    
  406d6c:	nop    DWORD PTR [rax+0x0]

0000000000406d70 <flatcc_builder_start_offset_vector@@Base>:
  406d70:	push   rbp
  406d71:	mov    rbp,rsp
  406d74:	sub    rsp,0x10
  406d78:	mov    QWORD PTR [rbp-0x10],rdi
  406d7c:	mov    rdi,QWORD PTR [rbp-0x10]
  406d80:	mov    esi,0x4
  406d85:	call   405c20 <flatcc_builder_start_buffer@@Base+0x170>
  406d8a:	cmp    eax,0x0
  406d8d:	je     406d9f <flatcc_builder_start_offset_vector@@Base+0x2f>
  406d93:	mov    DWORD PTR [rbp-0x4],0xffffffff
  406d9a:	jmp    406de0 <flatcc_builder_start_offset_vector@@Base+0x70>
  406d9f:	mov    rax,QWORD PTR [rbp-0x10]
  406da3:	mov    rax,QWORD PTR [rax+0x30]
  406da7:	mov    DWORD PTR [rax+0x10],0x4
  406dae:	mov    rax,QWORD PTR [rbp-0x10]
  406db2:	mov    rax,QWORD PTR [rax+0x30]
  406db6:	mov    DWORD PTR [rax+0x14],0x0
  406dbd:	mov    rax,QWORD PTR [rbp-0x10]
  406dc1:	mov    rax,QWORD PTR [rax+0x30]
  406dc5:	mov    WORD PTR [rax+0xe],0x5
  406dcb:	mov    rdi,QWORD PTR [rbp-0x10]
  406dcf:	mov    esi,0xfffffffc
  406dd4:	call   406070 <flatcc_builder_start_struct@@Base+0x70>
  406dd9:	mov    DWORD PTR [rbp-0x4],0x0
  406de0:	mov    eax,DWORD PTR [rbp-0x4]
  406de3:	add    rsp,0x10
  406de7:	pop    rbp
  406de8:	ret    
  406de9:	nop    DWORD PTR [rax+0x0]

0000000000406df0 <flatcc_builder_create_offset_vector@@Base>:
  406df0:	push   rbp
  406df1:	mov    rbp,rsp
  406df4:	sub    rsp,0x30
  406df8:	mov    QWORD PTR [rbp-0x10],rdi
  406dfc:	mov    QWORD PTR [rbp-0x18],rsi
  406e00:	mov    QWORD PTR [rbp-0x20],rdx
  406e04:	mov    rdi,QWORD PTR [rbp-0x10]
  406e08:	call   406d70 <flatcc_builder_start_offset_vector@@Base>
  406e0d:	cmp    eax,0x0
  406e10:	je     406e22 <flatcc_builder_create_offset_vector@@Base+0x32>
  406e16:	mov    DWORD PTR [rbp-0x4],0x0
  406e1d:	jmp    406e70 <flatcc_builder_create_offset_vector@@Base+0x80>
  406e22:	mov    rdi,QWORD PTR [rbp-0x10]
  406e26:	mov    rsi,QWORD PTR [rbp-0x20]
  406e2a:	call   406560 <flatcc_builder_extend_offset_vector@@Base>
  406e2f:	mov    QWORD PTR [rbp-0x28],rax
  406e33:	cmp    rax,0x0
  406e37:	jne    406e49 <flatcc_builder_create_offset_vector@@Base+0x59>
  406e3d:	mov    DWORD PTR [rbp-0x4],0x0
  406e44:	jmp    406e70 <flatcc_builder_create_offset_vector@@Base+0x80>
  406e49:	mov    rax,QWORD PTR [rbp-0x28]
  406e4d:	mov    rcx,QWORD PTR [rbp-0x18]
  406e51:	mov    rdx,QWORD PTR [rbp-0x20]
  406e55:	shl    rdx,0x2
  406e59:	mov    rdi,rax
  406e5c:	mov    rsi,rcx
  406e5f:	call   4030a0 <memcpy@plt>
  406e64:	mov    rdi,QWORD PTR [rbp-0x10]
  406e68:	call   406e80 <flatcc_builder_end_offset_vector@@Base>
  406e6d:	mov    DWORD PTR [rbp-0x4],eax
  406e70:	mov    eax,DWORD PTR [rbp-0x4]
  406e73:	add    rsp,0x30
  406e77:	pop    rbp
  406e78:	ret    
  406e79:	nop    DWORD PTR [rax+0x0]

0000000000406e80 <flatcc_builder_end_offset_vector@@Base>:
  406e80:	push   rbp
  406e81:	mov    rbp,rsp
  406e84:	sub    rsp,0x20
  406e88:	mov    QWORD PTR [rbp-0x10],rdi
  406e8c:	mov    rax,QWORD PTR [rbp-0x10]
  406e90:	mov    rax,QWORD PTR [rax+0x30]
  406e94:	movzx  ecx,WORD PTR [rax+0xe]
  406e98:	cmp    ecx,0x5
  406e9b:	jne    406ea6 <flatcc_builder_end_offset_vector@@Base+0x26>
  406ea1:	jmp    406ec5 <flatcc_builder_end_offset_vector@@Base+0x45>
  406ea6:	lea    rdi,[rip+0x796b]        # 40e818 <flatcc_builder_padding_base@@Base+0x648>
  406ead:	lea    rsi,[rip+0x752e]        # 40e3e2 <flatcc_builder_padding_base@@Base+0x212>
  406eb4:	mov    edx,0x5c8
  406eb9:	lea    rcx,[rip+0x7f87]        # 40ee47 <flatcc_builder_padding_base@@Base+0xc77>
  406ec0:	call   403060 <__assert_fail@plt>
  406ec5:	mov    rdi,QWORD PTR [rbp-0x10]
  406ec9:	mov    rax,QWORD PTR [rbp-0x10]
  406ecd:	mov    rax,QWORD PTR [rax+0x18]
  406ed1:	mov    rcx,QWORD PTR [rbp-0x10]
  406ed5:	mov    rcx,QWORD PTR [rcx+0x30]
  406ed9:	mov    edx,DWORD PTR [rcx+0x14]
  406edc:	mov    rsi,rax
  406edf:	call   4082d0 <flatcc_builder_create_offset_vector_direct@@Base>
  406ee4:	xor    r8d,r8d
  406ee7:	mov    DWORD PTR [rbp-0x14],eax
  406eea:	cmp    r8d,eax
  406eed:	jne    406eff <flatcc_builder_end_offset_vector@@Base+0x7f>
  406ef3:	mov    DWORD PTR [rbp-0x4],0x0
  406efa:	jmp    406f0e <flatcc_builder_end_offset_vector@@Base+0x8e>
  406eff:	mov    rdi,QWORD PTR [rbp-0x10]
  406f03:	call   405f40 <flatcc_builder_end_buffer@@Base+0x160>
  406f08:	mov    eax,DWORD PTR [rbp-0x14]
  406f0b:	mov    DWORD PTR [rbp-0x4],eax
  406f0e:	mov    eax,DWORD PTR [rbp-0x4]
  406f11:	add    rsp,0x20
  406f15:	pop    rbp
  406f16:	ret    
  406f17:	nop    WORD PTR [rax+rax*1+0x0]

0000000000406f20 <flatcc_builder_start_string@@Base>:
  406f20:	push   rbp
  406f21:	mov    rbp,rsp
  406f24:	sub    rsp,0x10
  406f28:	mov    QWORD PTR [rbp-0x10],rdi
  406f2c:	mov    rdi,QWORD PTR [rbp-0x10]
  406f30:	mov    esi,0x1
  406f35:	call   405c20 <flatcc_builder_start_buffer@@Base+0x170>
  406f3a:	cmp    eax,0x0
  406f3d:	je     406f4f <flatcc_builder_start_string@@Base+0x2f>
  406f43:	mov    DWORD PTR [rbp-0x4],0xffffffff
  406f4a:	jmp    406f90 <flatcc_builder_start_string@@Base+0x70>
  406f4f:	mov    rax,QWORD PTR [rbp-0x10]
  406f53:	mov    rax,QWORD PTR [rax+0x30]
  406f57:	mov    DWORD PTR [rax+0x10],0x1
  406f5e:	mov    rax,QWORD PTR [rbp-0x10]
  406f62:	mov    rax,QWORD PTR [rax+0x30]
  406f66:	mov    DWORD PTR [rax+0x14],0x0
  406f6d:	mov    rax,QWORD PTR [rbp-0x10]
  406f71:	mov    rax,QWORD PTR [rax+0x30]
  406f75:	mov    WORD PTR [rax+0xe],0x6
  406f7b:	mov    rdi,QWORD PTR [rbp-0x10]
  406f7f:	mov    esi,0xfffffffc
  406f84:	call   406070 <flatcc_builder_start_struct@@Base+0x70>
  406f89:	mov    DWORD PTR [rbp-0x4],0x0
  406f90:	mov    eax,DWORD PTR [rbp-0x4]
  406f93:	add    rsp,0x10
  406f97:	pop    rbp
  406f98:	ret    
  406f99:	nop    DWORD PTR [rax+0x0]

0000000000406fa0 <flatcc_builder_reserve_table@@Base>:
  406fa0:	push   rbp
  406fa1:	mov    rbp,rsp
  406fa4:	sub    rsp,0x10
  406fa8:	mov    QWORD PTR [rbp-0x8],rdi
  406fac:	mov    DWORD PTR [rbp-0xc],esi
  406faf:	cmp    DWORD PTR [rbp-0xc],0x0
  406fb3:	jl     406fbe <flatcc_builder_reserve_table@@Base+0x1e>
  406fb9:	jmp    406fdd <flatcc_builder_reserve_table@@Base+0x3d>
  406fbe:	lea    rdi,[rip+0x7b9a]        # 40eb5f <flatcc_builder_padding_base@@Base+0x98f>
  406fc5:	lea    rsi,[rip+0x7416]        # 40e3e2 <flatcc_builder_padding_base@@Base+0x212>
  406fcc:	mov    edx,0x429
  406fd1:	lea    rcx,[rip+0x7b46]        # 40eb1e <flatcc_builder_padding_base@@Base+0x94e>
  406fd8:	call   403060 <__assert_fail@plt>
  406fdd:	mov    rdi,QWORD PTR [rbp-0x8]
  406fe1:	mov    esi,DWORD PTR [rbp-0xc]
  406fe4:	call   406ff0 <flatcc_builder_reserve_table@@Base+0x50>
  406fe9:	add    rsp,0x10
  406fed:	pop    rbp
  406fee:	ret    
  406fef:	nop
  406ff0:	push   rbp
  406ff1:	mov    rbp,rsp
  406ff4:	sub    rsp,0x20
  406ff8:	xor    eax,eax
  406ffa:	mov    QWORD PTR [rbp-0x10],rdi
  406ffe:	mov    DWORD PTR [rbp-0x14],esi
  407001:	mov    rcx,QWORD PTR [rbp-0x10]
  407005:	mov    rcx,QWORD PTR [rcx+0x30]
  407009:	mov    edx,DWORD PTR [rcx+0x10]
  40700c:	mov    ecx,edx
  40700e:	mov    rdi,QWORD PTR [rbp-0x10]
  407012:	mov    rdi,QWORD PTR [rdi+0x30]
  407016:	movzx  edx,WORD PTR [rdi+0x1c]
  40701a:	mov    edi,edx
  40701c:	shl    rdi,0x1
  407020:	add    rcx,rdi
  407023:	mov    DWORD PTR [rbp-0x18],ecx
  407026:	mov    ecx,DWORD PTR [rbp-0x14]
  407029:	add    ecx,0x2
  40702c:	movsxd rdi,ecx
  40702f:	shl    rdi,0x1
  407033:	mov    DWORD PTR [rbp-0x1c],edi
  407036:	mov    rdi,QWORD PTR [rbp-0x10]
  40703a:	mov    ecx,DWORD PTR [rbp-0x18]
  40703d:	mov    edx,ecx
  40703f:	mov    ecx,DWORD PTR [rbp-0x1c]
  407042:	mov    esi,eax
  407044:	mov    r8d,0x1
  40704a:	call   404c60 <flatcc_builder_enter_user_frame_ptr@@Base+0xf0>
  40704f:	mov    rcx,QWORD PTR [rbp-0x10]
  407053:	mov    QWORD PTR [rcx+0x8],rax
  407057:	cmp    rax,0x0
  40705b:	jne    40706d <flatcc_builder_reserve_table@@Base+0xcd>
  407061:	mov    DWORD PTR [rbp-0x4],0xffffffff
  407068:	jmp    4070de <flatcc_builder_reserve_table@@Base+0x13e>
  40706d:	xor    r8d,r8d
  407070:	mov    rax,QWORD PTR [rbp-0x10]
  407074:	mov    rcx,QWORD PTR [rax+0x8]
  407078:	add    rcx,0x4
  40707f:	mov    QWORD PTR [rax+0x8],rcx
  407083:	mov    rax,QWORD PTR [rbp-0x10]
  407087:	mov    rax,QWORD PTR [rax+0x30]
  40708b:	mov    edx,DWORD PTR [rax+0x14]
  40708e:	mov    DWORD PTR [rbp-0x18],edx
  407091:	movsxd rax,DWORD PTR [rbp-0x14]
  407095:	shl    rax,0x1
  407099:	add    rax,0x1
  40709f:	mov    DWORD PTR [rbp-0x1c],eax
  4070a2:	mov    rdi,QWORD PTR [rbp-0x10]
  4070a6:	mov    eax,DWORD PTR [rbp-0x18]
  4070a9:	mov    edx,eax
  4070ab:	mov    eax,DWORD PTR [rbp-0x1c]
  4070ae:	mov    ecx,eax
  4070b0:	mov    esi,0x3
  4070b5:	call   404c60 <flatcc_builder_enter_user_frame_ptr@@Base+0xf0>
  4070ba:	mov    rcx,QWORD PTR [rbp-0x10]
  4070be:	mov    QWORD PTR [rcx],rax
  4070c1:	cmp    rax,0x0
  4070c5:	jne    4070d7 <flatcc_builder_reserve_table@@Base+0x137>
  4070cb:	mov    DWORD PTR [rbp-0x4],0xffffffff
  4070d2:	jmp    4070de <flatcc_builder_reserve_table@@Base+0x13e>
  4070d7:	mov    DWORD PTR [rbp-0x4],0x0
  4070de:	mov    eax,DWORD PTR [rbp-0x4]
  4070e1:	add    rsp,0x20
  4070e5:	pop    rbp
  4070e6:	ret    
  4070e7:	nop    WORD PTR [rax+rax*1+0x0]

00000000004070f0 <flatcc_builder_start_table@@Base>:
  4070f0:	push   rbp
  4070f1:	mov    rbp,rsp
  4070f4:	sub    rsp,0x20
  4070f8:	mov    QWORD PTR [rbp-0x10],rdi
  4070fc:	mov    DWORD PTR [rbp-0x14],esi
  4070ff:	mov    rdi,QWORD PTR [rbp-0x10]
  407103:	mov    esi,0x4
  407108:	call   405c20 <flatcc_builder_start_buffer@@Base+0x170>
  40710d:	cmp    eax,0x0
  407110:	je     407122 <flatcc_builder_start_table@@Base+0x32>
  407116:	mov    DWORD PTR [rbp-0x4],0xffffffff
  40711d:	jmp    4071ea <flatcc_builder_start_table@@Base+0xfa>
  407122:	mov    rax,QWORD PTR [rbp-0x10]
  407126:	mov    rax,QWORD PTR [rax+0x8]
  40712a:	mov    rcx,QWORD PTR [rbp-0x10]
  40712e:	mov    rcx,QWORD PTR [rcx+0x58]
  407132:	sub    rax,rcx
  407135:	mov    rcx,QWORD PTR [rbp-0x10]
  407139:	mov    rcx,QWORD PTR [rcx+0x30]
  40713d:	mov    DWORD PTR [rcx+0x10],eax
  407140:	mov    rcx,QWORD PTR [rbp-0x10]
  407144:	mov    rcx,QWORD PTR [rcx]
  407147:	mov    rdx,QWORD PTR [rbp-0x10]
  40714b:	mov    rdx,QWORD PTR [rdx+0x88]
  407152:	sub    rcx,rdx
  407155:	mov    rdx,QWORD PTR [rbp-0x10]
  407159:	mov    rdx,QWORD PTR [rdx+0x30]
  40715d:	mov    DWORD PTR [rdx+0x14],ecx
  407160:	mov    rdx,QWORD PTR [rbp-0x10]
  407164:	mov    eax,DWORD PTR [rdx+0x14]
  407167:	mov    rdx,QWORD PTR [rbp-0x10]
  40716b:	mov    rdx,QWORD PTR [rdx+0x30]
  40716f:	mov    DWORD PTR [rdx+0x18],eax
  407172:	mov    rdx,QWORD PTR [rbp-0x10]
  407176:	mov    si,WORD PTR [rdx+0x10]
  40717a:	mov    rdx,QWORD PTR [rbp-0x10]
  40717e:	mov    rdx,QWORD PTR [rdx+0x30]
  407182:	mov    WORD PTR [rdx+0x1c],si
  407186:	mov    rdx,QWORD PTR [rbp-0x10]
  40718a:	mov    DWORD PTR [rdx+0x14],0x0
  407191:	mov    rdx,QWORD PTR [rbp-0x10]
  407195:	mov    DWORD PTR [rdx+0x14],0x2f693b52
  40719c:	mov    rdx,QWORD PTR [rbp-0x10]
  4071a0:	mov    WORD PTR [rdx+0x10],0x0
  4071a6:	mov    rdx,QWORD PTR [rbp-0x10]
  4071aa:	mov    rdx,QWORD PTR [rdx+0x30]
  4071ae:	mov    WORD PTR [rdx+0xe],0x3
  4071b4:	mov    rdi,QWORD PTR [rbp-0x10]
  4071b8:	mov    esi,DWORD PTR [rbp-0x14]
  4071bb:	call   406ff0 <flatcc_builder_reserve_table@@Base+0x50>
  4071c0:	cmp    eax,0x0
  4071c3:	je     4071d5 <flatcc_builder_start_table@@Base+0xe5>
  4071c9:	mov    DWORD PTR [rbp-0x4],0xffffffff
  4071d0:	jmp    4071ea <flatcc_builder_start_table@@Base+0xfa>
  4071d5:	mov    rdi,QWORD PTR [rbp-0x10]
  4071d9:	mov    esi,0xfffc
  4071de:	call   406070 <flatcc_builder_start_struct@@Base+0x70>
  4071e3:	mov    DWORD PTR [rbp-0x4],0x0
  4071ea:	mov    eax,DWORD PTR [rbp-0x4]
  4071ed:	add    rsp,0x20
  4071f1:	pop    rbp
  4071f2:	ret    
  4071f3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4071fd:	nop    DWORD PTR [rax]

0000000000407200 <flatcc_builder_create_vtable@@Base>:
  407200:	push   rbp
  407201:	mov    rbp,rsp
  407204:	sub    rsp,0xc0
  40720b:	mov    QWORD PTR [rbp-0x10],rdi
  40720f:	mov    QWORD PTR [rbp-0x18],rsi
  407213:	mov    WORD PTR [rbp-0x1a],dx
  407217:	mov    QWORD PTR [rbp-0xb0],0x0
  407222:	mov    DWORD PTR [rbp-0xa8],0x0
  40722c:	movzx  eax,WORD PTR [rbp-0x1a]
  407230:	cmp    eax,0x0
  407233:	jle    4072a1 <flatcc_builder_create_vtable@@Base+0xa1>
  407239:	movzx  eax,WORD PTR [rbp-0x1a]
  40723d:	mov    ecx,eax
  40723f:	add    rcx,QWORD PTR [rbp-0xb0]
  407246:	mov    QWORD PTR [rbp-0xb0],rcx
  40724d:	mov    rcx,QWORD PTR [rbp-0x18]
  407251:	lea    rdx,[rbp-0xb0]
  407258:	mov    rsi,rdx
  40725b:	add    rsi,0x10
  407262:	movsxd rdi,DWORD PTR [rbp-0xa8]
  407269:	shl    rdi,0x4
  40726d:	add    rsi,rdi
  407270:	mov    QWORD PTR [rsi],rcx
  407273:	movzx  eax,WORD PTR [rbp-0x1a]
  407277:	mov    ecx,eax
  407279:	add    rdx,0x10
  407280:	movsxd rsi,DWORD PTR [rbp-0xa8]
  407287:	shl    rsi,0x4
  40728b:	add    rdx,rsi
  40728e:	mov    QWORD PTR [rdx+0x8],rcx
  407292:	mov    eax,DWORD PTR [rbp-0xa8]
  407298:	add    eax,0x1
  40729b:	mov    DWORD PTR [rbp-0xa8],eax
  4072a1:	mov    rax,QWORD PTR [rbp-0x10]
  4072a5:	cmp    DWORD PTR [rax+0x100],0x0
  4072ac:	jne    4072f1 <flatcc_builder_create_vtable@@Base+0xf1>
  4072b2:	mov    rax,QWORD PTR [rbp-0x10]
  4072b6:	cmp    DWORD PTR [rax+0x124],0x0
  4072bd:	jne    4072f1 <flatcc_builder_create_vtable@@Base+0xf1>
  4072c3:	mov    rdi,QWORD PTR [rbp-0x10]
  4072c7:	lea    rsi,[rbp-0xb0]
  4072ce:	call   407340 <flatcc_builder_create_vtable@@Base+0x140>
  4072d3:	xor    ecx,ecx
  4072d5:	mov    DWORD PTR [rbp-0x20],eax
  4072d8:	cmp    ecx,eax
  4072da:	jne    4072ec <flatcc_builder_create_vtable@@Base+0xec>
  4072e0:	mov    DWORD PTR [rbp-0x4],0x0
  4072e7:	jmp    407329 <flatcc_builder_create_vtable@@Base+0x129>
  4072ec:	jmp    407323 <flatcc_builder_create_vtable@@Base+0x123>
  4072f1:	mov    rdi,QWORD PTR [rbp-0x10]
  4072f5:	lea    rsi,[rbp-0xb0]
  4072fc:	call   4053b0 <flatcc_builder_embed_buffer@@Base+0x440>
  407301:	xor    ecx,ecx
  407303:	mov    DWORD PTR [rbp-0x20],eax
  407306:	cmp    ecx,eax
  407308:	jne    40731a <flatcc_builder_create_vtable@@Base+0x11a>
  40730e:	mov    DWORD PTR [rbp-0x4],0x0
  407315:	jmp    407329 <flatcc_builder_create_vtable@@Base+0x129>
  40731a:	mov    eax,DWORD PTR [rbp-0x20]
  40731d:	add    eax,0x1
  407320:	mov    DWORD PTR [rbp-0x20],eax
  407323:	mov    eax,DWORD PTR [rbp-0x20]
  407326:	mov    DWORD PTR [rbp-0x4],eax
  407329:	mov    eax,DWORD PTR [rbp-0x4]
  40732c:	add    rsp,0xc0
  407333:	pop    rbp
  407334:	ret    
  407335:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40733f:	nop
  407340:	push   rbp
  407341:	mov    rbp,rsp
  407344:	sub    rsp,0x20
  407348:	mov    QWORD PTR [rbp-0x8],rdi
  40734c:	mov    QWORD PTR [rbp-0x10],rsi
  407350:	mov    rax,QWORD PTR [rbp-0x8]
  407354:	mov    ecx,DWORD PTR [rax+0xf4]
  40735a:	mov    DWORD PTR [rbp-0x14],ecx
  40735d:	mov    ecx,DWORD PTR [rbp-0x14]
  407360:	mov    rax,QWORD PTR [rbp-0x10]
  407364:	mov    rax,QWORD PTR [rax]
  407367:	add    ecx,eax
  407369:	mov    rdx,QWORD PTR [rbp-0x8]
  40736d:	mov    DWORD PTR [rdx+0xf4],ecx
  407373:	mov    rdx,QWORD PTR [rbp-0x8]
  407377:	mov    eax,DWORD PTR [rdx+0xf4]
  40737d:	cmp    eax,DWORD PTR [rbp-0x14]
  407380:	jge    4073a5 <flatcc_builder_create_vtable@@Base+0x1a5>
  407386:	lea    rdi,[rip+0x8215]        # 40f5a2 <flatcc_builder_padding_base@@Base+0x13d2>
  40738d:	lea    rsi,[rip+0x704e]        # 40e3e2 <flatcc_builder_padding_base@@Base+0x212>
  407394:	mov    edx,0x2a1
  407399:	lea    rcx,[rip+0x817d]        # 40f51d <flatcc_builder_padding_base@@Base+0x134d>
  4073a0:	call   403060 <__assert_fail@plt>
  4073a5:	mov    rax,QWORD PTR [rbp-0x8]
  4073a9:	mov    rax,QWORD PTR [rax+0x48]
  4073ad:	mov    rcx,QWORD PTR [rbp-0x8]
  4073b1:	mov    rdi,QWORD PTR [rcx+0x38]
  4073b5:	mov    rcx,QWORD PTR [rbp-0x10]
  4073b9:	add    rcx,0x10
  4073c0:	mov    rdx,QWORD PTR [rbp-0x10]
  4073c4:	mov    edx,DWORD PTR [rdx+0x8]
  4073c7:	mov    esi,DWORD PTR [rbp-0x14]
  4073ca:	mov    r8,QWORD PTR [rbp-0x10]
  4073ce:	mov    r8,QWORD PTR [r8]
  4073d1:	mov    DWORD PTR [rbp-0x18],esi
  4073d4:	mov    rsi,rcx
  4073d7:	mov    ecx,DWORD PTR [rbp-0x18]
  4073da:	call   rax
  4073dc:	cmp    eax,0x0
  4073df:	je     407404 <flatcc_builder_create_vtable@@Base+0x204>
  4073e5:	lea    rdi,[rip+0x81b6]        # 40f5a2 <flatcc_builder_padding_base@@Base+0x13d2>
  4073ec:	lea    rsi,[rip+0x6fef]        # 40e3e2 <flatcc_builder_padding_base@@Base+0x212>
  4073f3:	mov    edx,0x2a5
  4073f8:	lea    rcx,[rip+0x811e]        # 40f51d <flatcc_builder_padding_base@@Base+0x134d>
  4073ff:	call   403060 <__assert_fail@plt>
  407404:	mov    eax,DWORD PTR [rbp-0x14]
  407407:	add    eax,0x1
  40740a:	add    rsp,0x20
  40740e:	pop    rbp
  40740f:	ret    

0000000000407410 <flatcc_builder_create_cached_vtable@@Base>:
  407410:	push   rbp
  407411:	mov    rbp,rsp
  407414:	sub    rsp,0x70
  407418:	mov    QWORD PTR [rbp-0x10],rdi
  40741c:	mov    QWORD PTR [rbp-0x18],rsi
  407420:	mov    WORD PTR [rbp-0x1a],dx
  407424:	mov    DWORD PTR [rbp-0x20],ecx
  407427:	mov    rdi,QWORD PTR [rbp-0x10]
  40742b:	mov    esi,DWORD PTR [rbp-0x20]
  40742e:	call   407740 <flatcc_builder_create_cached_vtable@@Base+0x330>
  407433:	mov    QWORD PTR [rbp-0x40],rax
  407437:	cmp    rax,0x0
  40743b:	jne    40744d <flatcc_builder_create_cached_vtable@@Base+0x3d>
  407441:	mov    DWORD PTR [rbp-0x4],0x0
  407448:	jmp    407728 <flatcc_builder_create_cached_vtable@@Base+0x318>
  40744d:	mov    rax,QWORD PTR [rbp-0x40]
  407451:	mov    QWORD PTR [rbp-0x38],rax
  407455:	mov    rax,QWORD PTR [rbp-0x38]
  407459:	mov    ecx,DWORD PTR [rax]
  40745b:	mov    DWORD PTR [rbp-0x44],ecx
  40745e:	mov    QWORD PTR [rbp-0x30],0x0
  407466:	cmp    DWORD PTR [rbp-0x44],0x0
  40746a:	je     40757d <flatcc_builder_create_cached_vtable@@Base+0x16d>
  407470:	mov    rax,QWORD PTR [rbp-0x10]
  407474:	mov    rax,QWORD PTR [rax+0xb8]
  40747b:	mov    ecx,DWORD PTR [rbp-0x44]
  40747e:	mov    edx,ecx
  407480:	add    rax,rdx
  407483:	mov    QWORD PTR [rbp-0x28],rax
  407487:	mov    rax,QWORD PTR [rbp-0x10]
  40748b:	mov    rax,QWORD PTR [rax+0x78]
  40748f:	mov    rdx,QWORD PTR [rbp-0x28]
  407493:	mov    ecx,DWORD PTR [rdx+0x8]
  407496:	mov    edx,ecx
  407498:	add    rax,rdx
  40749b:	mov    QWORD PTR [rbp-0x50],rax
  40749f:	mov    rax,QWORD PTR [rbp-0x50]
  4074a3:	movzx  ecx,WORD PTR [rax]
  4074a6:	movzx  esi,WORD PTR [rbp-0x1a]
  4074aa:	cmp    ecx,esi
  4074ac:	jne    4074e5 <flatcc_builder_create_cached_vtable@@Base+0xd5>
  4074b2:	xor    eax,eax
  4074b4:	mov    rcx,QWORD PTR [rbp-0x18]
  4074b8:	mov    rdx,QWORD PTR [rbp-0x50]
  4074bc:	movzx  esi,WORD PTR [rbp-0x1a]
  4074c0:	mov    edi,esi
  4074c2:	mov    QWORD PTR [rbp-0x58],rdi
  4074c6:	mov    rdi,rcx
  4074c9:	mov    rsi,rdx
  4074cc:	mov    rdx,QWORD PTR [rbp-0x58]
  4074d0:	mov    DWORD PTR [rbp-0x5c],eax
  4074d3:	call   403090 <memcmp@plt>
  4074d8:	mov    r8d,DWORD PTR [rbp-0x5c]
  4074dc:	cmp    r8d,eax
  4074df:	je     407502 <flatcc_builder_create_cached_vtable@@Base+0xf2>
  4074e5:	mov    rax,QWORD PTR [rbp-0x28]
  4074e9:	add    rax,0xc
  4074ef:	mov    QWORD PTR [rbp-0x38],rax
  4074f3:	mov    rax,QWORD PTR [rbp-0x28]
  4074f7:	mov    ecx,DWORD PTR [rax+0xc]
  4074fa:	mov    DWORD PTR [rbp-0x44],ecx
  4074fd:	jmp    407466 <flatcc_builder_create_cached_vtable@@Base+0x56>
  407502:	mov    rax,QWORD PTR [rbp-0x28]
  407506:	mov    ecx,DWORD PTR [rax+0x4]
  407509:	mov    rax,QWORD PTR [rbp-0x10]
  40750d:	cmp    ecx,DWORD PTR [rax+0x100]
  407513:	je     40753e <flatcc_builder_create_cached_vtable@@Base+0x12e>
  407519:	mov    rax,QWORD PTR [rbp-0x28]
  40751d:	mov    QWORD PTR [rbp-0x30],rax
  407521:	mov    rax,QWORD PTR [rbp-0x28]
  407525:	add    rax,0xc
  40752b:	mov    QWORD PTR [rbp-0x38],rax
  40752f:	mov    rax,QWORD PTR [rbp-0x28]
  407533:	mov    ecx,DWORD PTR [rax+0xc]
  407536:	mov    DWORD PTR [rbp-0x44],ecx
  407539:	jmp    407466 <flatcc_builder_create_cached_vtable@@Base+0x56>
  40753e:	mov    rax,QWORD PTR [rbp-0x38]
  407542:	cmp    rax,QWORD PTR [rbp-0x40]
  407546:	je     40756f <flatcc_builder_create_cached_vtable@@Base+0x15f>
  40754c:	mov    rax,QWORD PTR [rbp-0x28]
  407550:	mov    ecx,DWORD PTR [rax+0xc]
  407553:	mov    rax,QWORD PTR [rbp-0x38]
  407557:	mov    DWORD PTR [rax],ecx
  407559:	mov    rax,QWORD PTR [rbp-0x40]
  40755d:	mov    ecx,DWORD PTR [rax]
  40755f:	mov    rax,QWORD PTR [rbp-0x28]
  407563:	mov    DWORD PTR [rax+0xc],ecx
  407566:	mov    ecx,DWORD PTR [rbp-0x44]
  407569:	mov    rax,QWORD PTR [rbp-0x40]
  40756d:	mov    DWORD PTR [rax],ecx
  40756f:	mov    rax,QWORD PTR [rbp-0x28]
  407573:	mov    ecx,DWORD PTR [rax]
  407575:	mov    DWORD PTR [rbp-0x4],ecx
  407578:	jmp    407728 <flatcc_builder_create_cached_vtable@@Base+0x318>
  40757d:	xor    r8d,r8d
  407580:	mov    rdi,QWORD PTR [rbp-0x10]
  407584:	mov    rax,QWORD PTR [rbp-0x10]
  407588:	mov    ecx,DWORD PTR [rax+0xe4]
  40758e:	mov    edx,ecx
  407590:	mov    esi,0x6
  407595:	mov    ecx,0x10
  40759a:	call   404c60 <flatcc_builder_enter_user_frame_ptr@@Base+0xf0>
  40759f:	mov    QWORD PTR [rbp-0x28],rax
  4075a3:	cmp    rax,0x0
  4075a7:	jne    4075b9 <flatcc_builder_create_cached_vtable@@Base+0x1a9>
  4075ad:	mov    DWORD PTR [rbp-0x4],0x0
  4075b4:	jmp    407728 <flatcc_builder_create_cached_vtable@@Base+0x318>
  4075b9:	mov    rax,QWORD PTR [rbp-0x10]
  4075bd:	mov    ecx,DWORD PTR [rax+0xe4]
  4075c3:	mov    DWORD PTR [rbp-0x44],ecx
  4075c6:	mov    rax,QWORD PTR [rbp-0x10]
  4075ca:	mov    ecx,DWORD PTR [rax+0xe4]
  4075d0:	mov    edx,ecx
  4075d2:	add    rdx,0x10
  4075d9:	mov    DWORD PTR [rax+0xe4],edx
  4075df:	mov    rax,QWORD PTR [rbp-0x10]
  4075e3:	mov    ecx,DWORD PTR [rax+0x100]
  4075e9:	mov    rax,QWORD PTR [rbp-0x28]
  4075ed:	mov    DWORD PTR [rax+0x4],ecx
  4075f0:	mov    rax,QWORD PTR [rbp-0x40]
  4075f4:	mov    ecx,DWORD PTR [rax]
  4075f6:	mov    rax,QWORD PTR [rbp-0x28]
  4075fa:	mov    DWORD PTR [rax+0xc],ecx
  4075fd:	mov    ecx,DWORD PTR [rbp-0x44]
  407600:	mov    rax,QWORD PTR [rbp-0x40]
  407604:	mov    DWORD PTR [rax],ecx
  407606:	mov    rdi,QWORD PTR [rbp-0x10]
  40760a:	mov    rsi,QWORD PTR [rbp-0x18]
  40760e:	movzx  edx,WORD PTR [rbp-0x1a]
  407612:	call   407200 <flatcc_builder_create_vtable@@Base>
  407617:	xor    ecx,ecx
  407619:	mov    rsi,QWORD PTR [rbp-0x28]
  40761d:	mov    DWORD PTR [rsi],eax
  40761f:	cmp    ecx,eax
  407621:	jne    407633 <flatcc_builder_create_cached_vtable@@Base+0x223>
  407627:	mov    DWORD PTR [rbp-0x4],0x0
  40762e:	jmp    407728 <flatcc_builder_create_cached_vtable@@Base+0x318>
  407633:	cmp    QWORD PTR [rbp-0x30],0x0
  407638:	je     407651 <flatcc_builder_create_cached_vtable@@Base+0x241>
  40763e:	mov    rax,QWORD PTR [rbp-0x30]
  407642:	mov    ecx,DWORD PTR [rax+0x8]
  407645:	mov    rax,QWORD PTR [rbp-0x28]
  407649:	mov    DWORD PTR [rax+0x8],ecx
  40764c:	jmp    40771f <flatcc_builder_create_cached_vtable@@Base+0x30f>
  407651:	mov    rax,QWORD PTR [rbp-0x10]
  407655:	cmp    QWORD PTR [rax+0x118],0x0
  40765d:	je     407699 <flatcc_builder_create_cached_vtable@@Base+0x289>
  407663:	mov    rax,QWORD PTR [rbp-0x10]
  407667:	mov    rax,QWORD PTR [rax+0x118]
  40766e:	mov    rcx,QWORD PTR [rbp-0x10]
  407672:	mov    edx,DWORD PTR [rcx+0xe0]
  407678:	movzx  esi,WORD PTR [rbp-0x1a]
  40767c:	add    edx,esi
  40767e:	mov    edx,edx
  407680:	mov    ecx,edx
  407682:	cmp    rax,rcx
  407685:	jae    407699 <flatcc_builder_create_cached_vtable@@Base+0x289>
  40768b:	mov    rdi,QWORD PTR [rbp-0x10]
  40768f:	call   4046e0 <flatcc_builder_flush_vtable_cache@@Base>
  407694:	jmp    40771a <flatcc_builder_create_cached_vtable@@Base+0x30a>
  407699:	xor    r8d,r8d
  40769c:	mov    rdi,QWORD PTR [rbp-0x10]
  4076a0:	mov    rax,QWORD PTR [rbp-0x10]
  4076a4:	mov    ecx,DWORD PTR [rax+0xe0]
  4076aa:	mov    edx,ecx
  4076ac:	movzx  ecx,WORD PTR [rbp-0x1a]
  4076b0:	mov    esi,0x2
  4076b5:	call   404c60 <flatcc_builder_enter_user_frame_ptr@@Base+0xf0>
  4076ba:	mov    QWORD PTR [rbp-0x50],rax
  4076be:	cmp    rax,0x0
  4076c2:	jne    4076d4 <flatcc_builder_create_cached_vtable@@Base+0x2c4>
  4076c8:	mov    DWORD PTR [rbp-0x4],0xffffffff
  4076cf:	jmp    407728 <flatcc_builder_create_cached_vtable@@Base+0x318>
  4076d4:	mov    rax,QWORD PTR [rbp-0x10]
  4076d8:	mov    ecx,DWORD PTR [rax+0xe0]
  4076de:	mov    rax,QWORD PTR [rbp-0x28]
  4076e2:	mov    DWORD PTR [rax+0x8],ecx
  4076e5:	movzx  ecx,WORD PTR [rbp-0x1a]
  4076e9:	mov    rax,QWORD PTR [rbp-0x10]
  4076ed:	add    ecx,DWORD PTR [rax+0xe0]
  4076f3:	mov    DWORD PTR [rax+0xe0],ecx
  4076f9:	mov    rax,QWORD PTR [rbp-0x50]
  4076fd:	mov    rdx,QWORD PTR [rbp-0x18]
  407701:	movzx  ecx,WORD PTR [rbp-0x1a]
  407705:	mov    esi,ecx
  407707:	mov    rdi,rax
  40770a:	mov    QWORD PTR [rbp-0x68],rsi
  40770e:	mov    rsi,rdx
  407711:	mov    rdx,QWORD PTR [rbp-0x68]
  407715:	call   4030a0 <memcpy@plt>
  40771a:	jmp    40771f <flatcc_builder_create_cached_vtable@@Base+0x30f>
  40771f:	mov    rax,QWORD PTR [rbp-0x28]
  407723:	mov    ecx,DWORD PTR [rax]
  407725:	mov    DWORD PTR [rbp-0x4],ecx
  407728:	mov    eax,DWORD PTR [rbp-0x4]
  40772b:	add    rsp,0x70
  40772f:	pop    rbp
  407730:	ret    
  407731:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40773b:	nop    DWORD PTR [rax+rax*1+0x0]
  407740:	push   rbp
  407741:	mov    rbp,rsp
  407744:	sub    rsp,0x30
  407748:	mov    QWORD PTR [rbp-0x10],rdi
  40774c:	mov    DWORD PTR [rbp-0x14],esi
  40774f:	mov    rax,QWORD PTR [rbp-0x10]
  407753:	cmp    QWORD PTR [rax+0xd8],0x0
  40775b:	jne    407785 <flatcc_builder_create_cached_vtable@@Base+0x375>
  407761:	mov    rdi,QWORD PTR [rbp-0x10]
  407765:	call   40a160 <flatcc_builder_get_emit_context@@Base+0xe0>
  40776a:	cmp    eax,0x0
  40776d:	je     407780 <flatcc_builder_create_cached_vtable@@Base+0x370>
  407773:	mov    QWORD PTR [rbp-0x8],0x0
  40777b:	jmp    4077c4 <flatcc_builder_create_cached_vtable@@Base+0x3b4>
  407780:	jmp    407785 <flatcc_builder_create_cached_vtable@@Base+0x375>
  407785:	mov    rax,QWORD PTR [rbp-0x10]
  407789:	mov    rax,QWORD PTR [rax+0xa8]
  407790:	mov    QWORD PTR [rbp-0x20],rax
  407794:	mov    rax,QWORD PTR [rbp-0x20]
  407798:	mov    ecx,DWORD PTR [rbp-0x14]
  40779b:	mov    rdx,QWORD PTR [rbp-0x10]
  40779f:	mov    esi,0x20
  4077a4:	sub    rsi,QWORD PTR [rdx+0xd8]
  4077ab:	mov    DWORD PTR [rbp-0x24],ecx
  4077ae:	mov    ecx,esi
  4077b0:	mov    esi,DWORD PTR [rbp-0x24]
  4077b3:	shr    esi,cl
  4077b5:	mov    esi,esi
  4077b7:	mov    edx,esi
  4077b9:	shl    rdx,0x2
  4077bd:	add    rax,rdx
  4077c0:	mov    QWORD PTR [rbp-0x8],rax
  4077c4:	mov    rax,QWORD PTR [rbp-0x8]
  4077c8:	add    rsp,0x30
  4077cc:	pop    rbp
  4077cd:	ret    
  4077ce:	xchg   ax,ax

00000000004077d0 <flatcc_builder_create_table@@Base>:
  4077d0:	push   rbp
  4077d1:	mov    rbp,rsp
  4077d4:	sub    rsp,0xf0
  4077db:	mov    eax,DWORD PTR [rbp+0x10]
  4077de:	mov    QWORD PTR [rbp-0x10],rdi
  4077e2:	mov    QWORD PTR [rbp-0x18],rsi
  4077e6:	mov    QWORD PTR [rbp-0x20],rdx
  4077ea:	mov    WORD PTR [rbp-0x22],cx
  4077ee:	mov    QWORD PTR [rbp-0x30],r8
  4077f2:	mov    DWORD PTR [rbp-0x34],r9d
  4077f6:	cmp    DWORD PTR [rbp-0x34],0x0
  4077fa:	jl     407805 <flatcc_builder_create_table@@Base+0x35>
  407800:	jmp    407824 <flatcc_builder_create_table@@Base+0x54>
  407805:	lea    rdi,[rip+0x734c]        # 40eb58 <flatcc_builder_padding_base@@Base+0x988>
  40780c:	lea    rsi,[rip+0x6bcf]        # 40e3e2 <flatcc_builder_padding_base@@Base+0x212>
  407813:	mov    edx,0x4d5
  407818:	lea    rcx,[rip+0x734b]        # 40eb6a <flatcc_builder_padding_base@@Base+0x99a>
  40781f:	call   403060 <__assert_fail@plt>
  407824:	mov    eax,DWORD PTR [rbp+0x10]
  407827:	and    eax,0x1
  40782a:	cmp    eax,0x0
  40782d:	je     407838 <flatcc_builder_create_table@@Base+0x68>
  407833:	jmp    407857 <flatcc_builder_create_table@@Base+0x87>
  407838:	lea    rdi,[rip+0x73c7]        # 40ec06 <flatcc_builder_padding_base@@Base+0xa36>
  40783f:	lea    rsi,[rip+0x6b9c]        # 40e3e2 <flatcc_builder_padding_base@@Base+0x212>
  407846:	mov    edx,0x4db
  40784b:	lea    rcx,[rip+0x7318]        # 40eb6a <flatcc_builder_padding_base@@Base+0x99a>
  407852:	call   403060 <__assert_fail@plt>
  407857:	lea    rdi,[rbp-0x22]
  40785b:	mov    esi,0x4
  407860:	call   406d40 <flatcc_builder_start_vector@@Base+0xb0>
  407865:	mov    rdi,QWORD PTR [rbp-0x10]
  407869:	movzx  esi,WORD PTR [rbp-0x22]
  40786d:	call   4058d0 <flatcc_builder_create_buffer@@Base+0x420>
  407872:	mov    rdi,QWORD PTR [rbp-0x10]
  407876:	mov    rax,QWORD PTR [rbp-0x20]
  40787a:	mov    esi,eax
  40787c:	movzx  edx,WORD PTR [rbp-0x22]
  407880:	call   405370 <flatcc_builder_embed_buffer@@Base+0x400>
  407885:	mov    DWORD PTR [rbp-0x3c],eax
  407888:	mov    rcx,QWORD PTR [rbp-0x10]
  40788c:	mov    eax,DWORD PTR [rcx+0xf0]
  407892:	mov    edx,DWORD PTR [rbp-0x3c]
  407895:	mov    ecx,edx
  407897:	add    rcx,QWORD PTR [rbp-0x20]
  40789b:	add    rcx,0x4
  4078a2:	sub    eax,ecx
  4078a4:	mov    DWORD PTR [rbp-0x4c],eax
  4078a7:	mov    eax,DWORD PTR [rbp+0x10]
  4078aa:	sub    eax,0x1
  4078ad:	mov    DWORD PTR [rbp-0x48],eax
  4078b0:	mov    eax,DWORD PTR [rbp-0x4c]
  4078b3:	sub    eax,DWORD PTR [rbp-0x48]
  4078b6:	mov    DWORD PTR [rbp-0x40],eax
  4078b9:	mov    eax,DWORD PTR [rbp-0x4c]
  4078bc:	sub    eax,DWORD PTR [rbp-0x40]
  4078bf:	cmp    eax,DWORD PTR [rbp-0x48]
  4078c2:	je     4078d4 <flatcc_builder_create_table@@Base+0x104>
  4078c8:	mov    DWORD PTR [rbp-0x4],0xffffffff
  4078cf:	jmp    407abb <flatcc_builder_create_table@@Base+0x2eb>
  4078d4:	mov    edi,DWORD PTR [rbp-0x40]
  4078d7:	call   4053a0 <flatcc_builder_embed_buffer@@Base+0x430>
  4078dc:	mov    DWORD PTR [rbp-0x44],eax
  4078df:	mov    DWORD PTR [rbp-0x38],0x0
  4078e6:	mov    eax,DWORD PTR [rbp-0x38]
  4078e9:	cmp    eax,DWORD PTR [rbp-0x34]
  4078ec:	jge    40794b <flatcc_builder_create_table@@Base+0x17b>
  4078f2:	mov    rax,QWORD PTR [rbp-0x18]
  4078f6:	mov    rcx,QWORD PTR [rbp-0x30]
  4078fa:	movsxd rdx,DWORD PTR [rbp-0x38]
  4078fe:	movzx  esi,WORD PTR [rcx+rdx*2]
  407902:	mov    ecx,esi
  407904:	add    rax,rcx
  407907:	mov    QWORD PTR [rbp-0x58],rax
  40790b:	mov    rax,QWORD PTR [rbp-0x58]
  40790f:	mov    esi,DWORD PTR [rax]
  407911:	sub    esi,DWORD PTR [rbp-0x4c]
  407914:	mov    rax,QWORD PTR [rbp-0x30]
  407918:	movsxd rcx,DWORD PTR [rbp-0x38]
  40791c:	movzx  edi,WORD PTR [rax+rcx*2]
  407920:	sub    esi,edi
  407922:	mov    esi,esi
  407924:	mov    eax,esi
  407926:	sub    rax,0x4
  40792c:	mov    DWORD PTR [rbp-0x50],eax
  40792f:	mov    edi,DWORD PTR [rbp-0x50]
  407932:	call   4053a0 <flatcc_builder_embed_buffer@@Base+0x430>
  407937:	mov    rcx,QWORD PTR [rbp-0x58]
  40793b:	mov    DWORD PTR [rcx],eax
  40793d:	mov    eax,DWORD PTR [rbp-0x38]
  407940:	add    eax,0x1
  407943:	mov    DWORD PTR [rbp-0x38],eax
  407946:	jmp    4078e6 <flatcc_builder_create_table@@Base+0x116>
  40794b:	mov    QWORD PTR [rbp-0xe8],0x0
  407956:	mov    DWORD PTR [rbp-0xe0],0x0
  407960:	mov    rax,QWORD PTR [rbp-0xe8]
  407967:	add    rax,0x4
  40796d:	mov    QWORD PTR [rbp-0xe8],rax
  407974:	lea    rax,[rbp-0x44]
  407978:	lea    rcx,[rbp-0xe8]
  40797f:	mov    rdx,rcx
  407982:	add    rdx,0x10
  407989:	movsxd rsi,DWORD PTR [rbp-0xe0]
  407990:	shl    rsi,0x4
  407994:	add    rdx,rsi
  407997:	mov    QWORD PTR [rdx],rax
  40799a:	add    rcx,0x10
  4079a1:	movsxd rax,DWORD PTR [rbp-0xe0]
  4079a8:	shl    rax,0x4
  4079ac:	add    rcx,rax
  4079af:	mov    QWORD PTR [rcx+0x8],0x4
  4079b7:	mov    edi,DWORD PTR [rbp-0xe0]
  4079bd:	add    edi,0x1
  4079c0:	mov    DWORD PTR [rbp-0xe0],edi
  4079c6:	cmp    QWORD PTR [rbp-0x20],0x0
  4079cb:	jbe    407a35 <flatcc_builder_create_table@@Base+0x265>
  4079d1:	mov    rax,QWORD PTR [rbp-0x20]
  4079d5:	add    rax,QWORD PTR [rbp-0xe8]
  4079dc:	mov    QWORD PTR [rbp-0xe8],rax
  4079e3:	mov    rax,QWORD PTR [rbp-0x18]
  4079e7:	lea    rcx,[rbp-0xe8]
  4079ee:	mov    rdx,rcx
  4079f1:	add    rdx,0x10
  4079f8:	movsxd rsi,DWORD PTR [rbp-0xe0]
  4079ff:	shl    rsi,0x4
  407a03:	add    rdx,rsi
  407a06:	mov    QWORD PTR [rdx],rax
  407a09:	mov    rax,QWORD PTR [rbp-0x20]
  407a0d:	add    rcx,0x10
  407a14:	movsxd rdx,DWORD PTR [rbp-0xe0]
  407a1b:	shl    rdx,0x4
  407a1f:	add    rcx,rdx
  407a22:	mov    QWORD PTR [rcx+0x8],rax
  407a26:	mov    edi,DWORD PTR [rbp-0xe0]
  407a2c:	add    edi,0x1
  407a2f:	mov    DWORD PTR [rbp-0xe0],edi
  407a35:	cmp    DWORD PTR [rbp-0x3c],0x0
  407a39:	jbe    407aa8 <flatcc_builder_create_table@@Base+0x2d8>
  407a3f:	lea    rax,[rip+0x678a]        # 40e1d0 <flatcc_builder_padding_base@@Base>
  407a46:	mov    ecx,DWORD PTR [rbp-0x3c]
  407a49:	mov    edx,ecx
  407a4b:	add    rdx,QWORD PTR [rbp-0xe8]
  407a52:	mov    QWORD PTR [rbp-0xe8],rdx
  407a59:	lea    rdx,[rbp-0xe8]
  407a60:	mov    rsi,rdx
  407a63:	add    rsi,0x10
  407a6a:	movsxd rdi,DWORD PTR [rbp-0xe0]
  407a71:	shl    rdi,0x4
  407a75:	add    rsi,rdi
  407a78:	mov    QWORD PTR [rsi],rax
  407a7b:	mov    ecx,DWORD PTR [rbp-0x3c]
  407a7e:	mov    eax,ecx
  407a80:	add    rdx,0x10
  407a87:	movsxd rsi,DWORD PTR [rbp-0xe0]
  407a8e:	shl    rsi,0x4
  407a92:	add    rdx,rsi
  407a95:	mov    QWORD PTR [rdx+0x8],rax
  407a99:	mov    ecx,DWORD PTR [rbp-0xe0]
  407a9f:	add    ecx,0x1
  407aa2:	mov    DWORD PTR [rbp-0xe0],ecx
  407aa8:	mov    rdi,QWORD PTR [rbp-0x10]
  407aac:	lea    rsi,[rbp-0xe8]
  407ab3:	call   4053b0 <flatcc_builder_embed_buffer@@Base+0x440>
  407ab8:	mov    DWORD PTR [rbp-0x4],eax
  407abb:	mov    eax,DWORD PTR [rbp-0x4]
  407abe:	add    rsp,0xf0
  407ac5:	pop    rbp
  407ac6:	ret    
  407ac7:	nop    WORD PTR [rax+rax*1+0x0]

0000000000407ad0 <flatcc_builder_check_required_field@@Base>:
  407ad0:	push   rbp
  407ad1:	mov    rbp,rsp
  407ad4:	sub    rsp,0x10
  407ad8:	mov    QWORD PTR [rbp-0x8],rdi
  407adc:	mov    WORD PTR [rbp-0xa],si
  407ae0:	mov    rax,QWORD PTR [rbp-0x8]
  407ae4:	mov    rax,QWORD PTR [rax+0x30]
  407ae8:	movzx  ecx,WORD PTR [rax+0xe]
  407aec:	cmp    ecx,0x3
  407aef:	jne    407afa <flatcc_builder_check_required_field@@Base+0x2a>
  407af5:	jmp    407b19 <flatcc_builder_check_required_field@@Base+0x49>
  407afa:	lea    rdi,[rip+0x7110]        # 40ec11 <flatcc_builder_padding_base@@Base+0xa41>
  407b01:	lea    rsi,[rip+0x68da]        # 40e3e2 <flatcc_builder_padding_base@@Base+0x212>
  407b08:	mov    edx,0x4f8
  407b0d:	lea    rcx,[rip+0x7128]        # 40ec3c <flatcc_builder_padding_base@@Base+0xa6c>
  407b14:	call   403060 <__assert_fail@plt>
  407b19:	xor    eax,eax
  407b1b:	movzx  ecx,WORD PTR [rbp-0xa]
  407b1f:	mov    rdx,QWORD PTR [rbp-0x8]
  407b23:	movzx  esi,WORD PTR [rdx+0x10]
  407b27:	cmp    ecx,esi
  407b29:	mov    BYTE PTR [rbp-0xb],al
  407b2c:	jge    407b4f <flatcc_builder_check_required_field@@Base+0x7f>
  407b32:	mov    rax,QWORD PTR [rbp-0x8]
  407b36:	mov    rax,QWORD PTR [rax+0x8]
  407b3a:	movzx  ecx,WORD PTR [rbp-0xa]
  407b3e:	mov    edx,ecx
  407b40:	movzx  ecx,WORD PTR [rax+rdx*2]
  407b44:	cmp    ecx,0x0
  407b47:	setne  sil
  407b4b:	mov    BYTE PTR [rbp-0xb],sil
  407b4f:	mov    al,BYTE PTR [rbp-0xb]
  407b52:	and    al,0x1
  407b54:	movzx  eax,al
  407b57:	add    rsp,0x10
  407b5b:	pop    rbp
  407b5c:	ret    
  407b5d:	nop    DWORD PTR [rax]

0000000000407b60 <flatcc_builder_check_union_field@@Base>:
  407b60:	push   rbp
  407b61:	mov    rbp,rsp
  407b64:	sub    rsp,0x20
  407b68:	mov    QWORD PTR [rbp-0x10],rdi
  407b6c:	mov    WORD PTR [rbp-0x12],si
  407b70:	mov    rax,QWORD PTR [rbp-0x10]
  407b74:	mov    rax,QWORD PTR [rax+0x30]
  407b78:	movzx  ecx,WORD PTR [rax+0xe]
  407b7c:	cmp    ecx,0x3
  407b7f:	jne    407b8a <flatcc_builder_check_union_field@@Base+0x2a>
  407b85:	jmp    407ba9 <flatcc_builder_check_union_field@@Base+0x49>
  407b8a:	lea    rdi,[rip+0x7080]        # 40ec11 <flatcc_builder_padding_base@@Base+0xa41>
  407b91:	lea    rsi,[rip+0x684a]        # 40e3e2 <flatcc_builder_padding_base@@Base+0x212>
  407b98:	mov    edx,0x4ff
  407b9d:	lea    rcx,[rip+0x70eb]        # 40ec8f <flatcc_builder_padding_base@@Base+0xabf>
  407ba4:	call   403060 <__assert_fail@plt>
  407ba9:	movzx  eax,WORD PTR [rbp-0x12]
  407bad:	cmp    eax,0x0
  407bb0:	je     407bca <flatcc_builder_check_union_field@@Base+0x6a>
  407bb6:	movzx  eax,WORD PTR [rbp-0x12]
  407bba:	mov    rcx,QWORD PTR [rbp-0x10]
  407bbe:	movzx  edx,WORD PTR [rcx+0x10]
  407bc2:	cmp    eax,edx
  407bc4:	jl     407bd6 <flatcc_builder_check_union_field@@Base+0x76>
  407bca:	mov    DWORD PTR [rbp-0x4],0x0
  407bd1:	jmp    407c96 <flatcc_builder_check_union_field@@Base+0x136>
  407bd6:	mov    rax,QWORD PTR [rbp-0x10]
  407bda:	mov    rax,QWORD PTR [rax+0x8]
  407bde:	movzx  ecx,WORD PTR [rbp-0x12]
  407be2:	sub    ecx,0x1
  407be5:	movsxd rdx,ecx
  407be8:	movzx  ecx,WORD PTR [rax+rdx*2]
  407bec:	cmp    ecx,0x0
  407bef:	jne    407c1e <flatcc_builder_check_union_field@@Base+0xbe>
  407bf5:	mov    rax,QWORD PTR [rbp-0x10]
  407bf9:	mov    rax,QWORD PTR [rax+0x8]
  407bfd:	movzx  ecx,WORD PTR [rbp-0x12]
  407c01:	mov    edx,ecx
  407c03:	movzx  ecx,WORD PTR [rax+rdx*2]
  407c07:	cmp    ecx,0x0
  407c0a:	sete   sil
  407c0e:	and    sil,0x1
  407c12:	movzx  ecx,sil
  407c16:	mov    DWORD PTR [rbp-0x4],ecx
  407c19:	jmp    407c96 <flatcc_builder_check_union_field@@Base+0x136>
  407c1e:	mov    rax,QWORD PTR [rbp-0x10]
  407c22:	mov    rax,QWORD PTR [rax+0x18]
  407c26:	mov    rcx,QWORD PTR [rbp-0x10]
  407c2a:	mov    rcx,QWORD PTR [rcx+0x8]
  407c2e:	movzx  edx,WORD PTR [rbp-0x12]
  407c32:	sub    edx,0x1
  407c35:	movsxd rsi,edx
  407c38:	movzx  edx,WORD PTR [rcx+rsi*2]
  407c3c:	movsxd rcx,edx
  407c3f:	cmp    BYTE PTR [rax+rcx*1],0x0
  407c43:	je     407c72 <flatcc_builder_check_union_field@@Base+0x112>
  407c49:	mov    rax,QWORD PTR [rbp-0x10]
  407c4d:	mov    rax,QWORD PTR [rax+0x8]
  407c51:	movzx  ecx,WORD PTR [rbp-0x12]
  407c55:	mov    edx,ecx
  407c57:	movzx  ecx,WORD PTR [rax+rdx*2]
  407c5b:	cmp    ecx,0x0
  407c5e:	setne  sil
  407c62:	and    sil,0x1
  407c66:	movzx  ecx,sil
  407c6a:	mov    DWORD PTR [rbp-0x4],ecx
  407c6d:	jmp    407c96 <flatcc_builder_check_union_field@@Base+0x136>
  407c72:	mov    rax,QWORD PTR [rbp-0x10]
  407c76:	mov    rax,QWORD PTR [rax+0x8]
  407c7a:	movzx  ecx,WORD PTR [rbp-0x12]
  407c7e:	mov    edx,ecx
  407c80:	movzx  ecx,WORD PTR [rax+rdx*2]
  407c84:	cmp    ecx,0x0
  407c87:	sete   sil
  407c8b:	and    sil,0x1
  407c8f:	movzx  ecx,sil
  407c93:	mov    DWORD PTR [rbp-0x4],ecx
  407c96:	mov    eax,DWORD PTR [rbp-0x4]
  407c99:	add    rsp,0x20
  407c9d:	pop    rbp
  407c9e:	ret    
  407c9f:	nop

0000000000407ca0 <flatcc_builder_check_required@@Base>:
  407ca0:	push   rbp
  407ca1:	mov    rbp,rsp
  407ca4:	sub    rsp,0x20
  407ca8:	mov    QWORD PTR [rbp-0x10],rdi
  407cac:	mov    QWORD PTR [rbp-0x18],rsi
  407cb0:	mov    DWORD PTR [rbp-0x1c],edx
  407cb3:	mov    rax,QWORD PTR [rbp-0x10]
  407cb7:	mov    rax,QWORD PTR [rax+0x30]
  407cbb:	movzx  ecx,WORD PTR [rax+0xe]
  407cbf:	cmp    ecx,0x3
  407cc2:	jne    407ccd <flatcc_builder_check_required@@Base+0x2d>
  407cc8:	jmp    407cec <flatcc_builder_check_required@@Base+0x4c>
  407ccd:	lea    rdi,[rip+0x6f3d]        # 40ec11 <flatcc_builder_padding_base@@Base+0xa41>
  407cd4:	lea    rsi,[rip+0x6707]        # 40e3e2 <flatcc_builder_padding_base@@Base+0x212>
  407cdb:	mov    edx,0x511
  407ce0:	lea    rcx,[rip+0x6ff8]        # 40ecdf <flatcc_builder_padding_base@@Base+0xb0f>
  407ce7:	call   403060 <__assert_fail@plt>
  407cec:	mov    rax,QWORD PTR [rbp-0x10]
  407cf0:	movzx  ecx,WORD PTR [rax+0x10]
  407cf4:	cmp    ecx,DWORD PTR [rbp-0x1c]
  407cf7:	jge    407d09 <flatcc_builder_check_required@@Base+0x69>
  407cfd:	mov    DWORD PTR [rbp-0x4],0x0
  407d04:	jmp    407d65 <flatcc_builder_check_required@@Base+0xc5>
  407d09:	mov    DWORD PTR [rbp-0x20],0x0
  407d10:	mov    eax,DWORD PTR [rbp-0x20]
  407d13:	cmp    eax,DWORD PTR [rbp-0x1c]
  407d16:	jge    407d5e <flatcc_builder_check_required@@Base+0xbe>
  407d1c:	mov    rax,QWORD PTR [rbp-0x10]
  407d20:	mov    rax,QWORD PTR [rax+0x8]
  407d24:	mov    rcx,QWORD PTR [rbp-0x18]
  407d28:	movsxd rdx,DWORD PTR [rbp-0x20]
  407d2c:	movzx  esi,WORD PTR [rcx+rdx*2]
  407d30:	mov    ecx,esi
  407d32:	movzx  esi,WORD PTR [rax+rcx*2]
  407d36:	cmp    esi,0x0
  407d39:	jne    407d4b <flatcc_builder_check_required@@Base+0xab>
  407d3f:	mov    DWORD PTR [rbp-0x4],0x0
  407d46:	jmp    407d65 <flatcc_builder_check_required@@Base+0xc5>
  407d4b:	jmp    407d50 <flatcc_builder_check_required@@Base+0xb0>
  407d50:	mov    eax,DWORD PTR [rbp-0x20]
  407d53:	add    eax,0x1
  407d56:	mov    DWORD PTR [rbp-0x20],eax
  407d59:	jmp    407d10 <flatcc_builder_check_required@@Base+0x70>
  407d5e:	mov    DWORD PTR [rbp-0x4],0x1
  407d65:	mov    eax,DWORD PTR [rbp-0x4]
  407d68:	add    rsp,0x20
  407d6c:	pop    rbp
  407d6d:	ret    
  407d6e:	xchg   ax,ax

0000000000407d70 <flatcc_builder_end_table@@Base>:
  407d70:	push   rbp
  407d71:	mov    rbp,rsp
  407d74:	sub    rsp,0x40
  407d78:	mov    QWORD PTR [rbp-0x10],rdi
  407d7c:	mov    rax,QWORD PTR [rbp-0x10]
  407d80:	mov    rax,QWORD PTR [rax+0x30]
  407d84:	movzx  ecx,WORD PTR [rax+0xe]
  407d88:	cmp    ecx,0x3
  407d8b:	jne    407d96 <flatcc_builder_end_table@@Base+0x26>
  407d91:	jmp    407db5 <flatcc_builder_end_table@@Base+0x45>
  407d96:	lea    rdi,[rip+0x6e74]        # 40ec11 <flatcc_builder_padding_base@@Base+0xa41>
  407d9d:	lea    rsi,[rip+0x663e]        # 40e3e2 <flatcc_builder_padding_base@@Base+0x212>
  407da4:	mov    edx,0x525
  407da9:	lea    rcx,[rip+0x6f89]        # 40ed39 <flatcc_builder_padding_base@@Base+0xb69>
  407db0:	call   403060 <__assert_fail@plt>
  407db5:	mov    rax,QWORD PTR [rbp-0x10]
  407db9:	mov    rax,QWORD PTR [rax+0x8]
  407dbd:	add    rax,0xfffffffffffffffc
  407dc3:	mov    QWORD PTR [rbp-0x18],rax
  407dc7:	mov    rax,QWORD PTR [rbp-0x10]
  407dcb:	movzx  ecx,WORD PTR [rax+0x10]
  407dcf:	add    ecx,0x2
  407dd2:	movsxd rax,ecx
  407dd5:	shl    rax,0x1
  407dd9:	mov    WORD PTR [rbp-0x1a],ax
  407ddd:	mov    ax,WORD PTR [rbp-0x1a]
  407de1:	mov    rdx,QWORD PTR [rbp-0x18]
  407de5:	mov    WORD PTR [rdx],ax
  407de8:	mov    rdx,QWORD PTR [rbp-0x10]
  407dec:	mov    ecx,DWORD PTR [rdx+0x20]
  407def:	movzx  esi,cx
  407df2:	mov    edx,esi
  407df4:	add    rdx,0x4
  407dfb:	mov    rdi,QWORD PTR [rbp-0x18]
  407dff:	mov    WORD PTR [rdi+0x2],dx
  407e03:	mov    rdi,QWORD PTR [rbp-0x18]
  407e07:	movzx  esi,WORD PTR [rdi]
  407e0a:	mov    rdi,QWORD PTR [rbp-0x10]
  407e0e:	xor    esi,DWORD PTR [rdi+0x14]
  407e11:	imul   esi,esi,0x9e3779b1
  407e17:	mov    rdi,QWORD PTR [rbp-0x18]
  407e1b:	movzx  r8d,WORD PTR [rdi+0x2]
  407e20:	xor    esi,r8d
  407e23:	imul   esi,esi,0x9e3779b1
  407e29:	mov    rdi,QWORD PTR [rbp-0x10]
  407e2d:	mov    DWORD PTR [rdi+0x14],esi
  407e30:	mov    rdi,QWORD PTR [rbp-0x10]
  407e34:	mov    rsi,QWORD PTR [rbp-0x18]
  407e38:	mov    ax,WORD PTR [rbp-0x1a]
  407e3c:	mov    r9,QWORD PTR [rbp-0x10]
  407e40:	mov    ecx,DWORD PTR [r9+0x14]
  407e44:	movzx  edx,ax
  407e47:	call   407410 <flatcc_builder_create_cached_vtable@@Base>
  407e4c:	mov    DWORD PTR [rbp-0x24],eax
  407e4f:	cmp    eax,0x0
  407e52:	jne    407e64 <flatcc_builder_end_table@@Base+0xf4>
  407e58:	mov    DWORD PTR [rbp-0x4],0x0
  407e5f:	jmp    407f7f <flatcc_builder_end_table@@Base+0x20f>
  407e64:	xor    esi,esi
  407e66:	mov    rax,QWORD PTR [rbp-0x18]
  407e6a:	movzx  ecx,WORD PTR [rbp-0x1a]
  407e6e:	mov    edx,ecx
  407e70:	mov    rdi,rax
  407e73:	call   403070 <memset@plt>
  407e78:	mov    rax,QWORD PTR [rbp-0x10]
  407e7c:	mov    rax,QWORD PTR [rax+0x88]
  407e83:	mov    rdx,QWORD PTR [rbp-0x10]
  407e87:	mov    rdx,QWORD PTR [rdx+0x30]
  407e8b:	mov    ecx,DWORD PTR [rdx+0x14]
  407e8e:	mov    edx,ecx
  407e90:	add    rax,rdx
  407e93:	mov    QWORD PTR [rbp-0x30],rax
  407e97:	mov    rax,QWORD PTR [rbp-0x10]
  407e9b:	mov    rax,QWORD PTR [rax]
  407e9e:	mov    rdx,QWORD PTR [rbp-0x30]
  407ea2:	sub    rax,rdx
  407ea5:	sar    rax,0x1
  407ea9:	mov    DWORD PTR [rbp-0x28],eax
  407eac:	mov    rdi,QWORD PTR [rbp-0x10]
  407eb0:	mov    rdx,QWORD PTR [rbp-0x10]
  407eb4:	mov    rsi,QWORD PTR [rdx+0x18]
  407eb8:	mov    rdx,QWORD PTR [rbp-0x10]
  407ebc:	mov    eax,DWORD PTR [rdx+0x20]
  407ebf:	mov    edx,eax
  407ec1:	mov    r8,QWORD PTR [rbp-0x10]
  407ec5:	mov    r9w,WORD PTR [r8+0xea]
  407ecd:	mov    r8,QWORD PTR [rbp-0x30]
  407ed1:	mov    eax,DWORD PTR [rbp-0x28]
  407ed4:	mov    ecx,DWORD PTR [rbp-0x24]
  407ed7:	movzx  r10d,r9w
  407edb:	mov    DWORD PTR [rbp-0x34],ecx
  407ede:	mov    ecx,r10d
  407ee1:	mov    r9d,eax
  407ee4:	mov    eax,DWORD PTR [rbp-0x34]
  407ee7:	mov    DWORD PTR [rsp],eax
  407eea:	call   4077d0 <flatcc_builder_create_table@@Base>
  407eef:	xor    ecx,ecx
  407ef1:	mov    DWORD PTR [rbp-0x20],eax
  407ef4:	cmp    ecx,eax
  407ef6:	jne    407f08 <flatcc_builder_end_table@@Base+0x198>
  407efc:	mov    DWORD PTR [rbp-0x4],0x0
  407f03:	jmp    407f7f <flatcc_builder_end_table@@Base+0x20f>
  407f08:	mov    rax,QWORD PTR [rbp-0x10]
  407f0c:	mov    rax,QWORD PTR [rax+0x30]
  407f10:	mov    ecx,DWORD PTR [rax+0x18]
  407f13:	mov    rax,QWORD PTR [rbp-0x10]
  407f17:	mov    DWORD PTR [rax+0x14],ecx
  407f1a:	mov    rax,QWORD PTR [rbp-0x10]
  407f1e:	mov    rax,QWORD PTR [rax+0x30]
  407f22:	mov    dx,WORD PTR [rax+0x1c]
  407f26:	mov    rax,QWORD PTR [rbp-0x10]
  407f2a:	mov    WORD PTR [rax+0x10],dx
  407f2e:	mov    rax,QWORD PTR [rbp-0x10]
  407f32:	mov    rax,QWORD PTR [rax+0x58]
  407f36:	mov    rsi,QWORD PTR [rbp-0x10]
  407f3a:	mov    rsi,QWORD PTR [rsi+0x30]
  407f3e:	mov    ecx,DWORD PTR [rsi+0x10]
  407f41:	mov    esi,ecx
  407f43:	add    rax,rsi
  407f46:	mov    rsi,QWORD PTR [rbp-0x10]
  407f4a:	mov    QWORD PTR [rsi+0x8],rax
  407f4e:	mov    rax,QWORD PTR [rbp-0x10]
  407f52:	mov    rax,QWORD PTR [rax+0x88]
  407f59:	mov    rsi,QWORD PTR [rbp-0x10]
  407f5d:	mov    rsi,QWORD PTR [rsi+0x30]
  407f61:	mov    ecx,DWORD PTR [rsi+0x14]
  407f64:	mov    esi,ecx
  407f66:	add    rax,rsi
  407f69:	mov    rsi,QWORD PTR [rbp-0x10]
  407f6d:	mov    QWORD PTR [rsi],rax
  407f70:	mov    rdi,QWORD PTR [rbp-0x10]
  407f74:	call   405f40 <flatcc_builder_end_buffer@@Base+0x160>
  407f79:	mov    ecx,DWORD PTR [rbp-0x20]
  407f7c:	mov    DWORD PTR [rbp-0x4],ecx
  407f7f:	mov    eax,DWORD PTR [rbp-0x4]
  407f82:	add    rsp,0x40
  407f86:	pop    rbp
  407f87:	ret    
  407f88:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000407f90 <flatcc_builder_create_vector@@Base>:
  407f90:	push   rbp
  407f91:	mov    rbp,rsp
  407f94:	sub    rsp,0xe0
  407f9b:	mov    QWORD PTR [rbp-0x10],rdi
  407f9f:	mov    QWORD PTR [rbp-0x18],rsi
  407fa3:	mov    QWORD PTR [rbp-0x20],rdx
  407fa7:	mov    QWORD PTR [rbp-0x28],rcx
  407fab:	mov    WORD PTR [rbp-0x2a],r8w
  407fb0:	mov    QWORD PTR [rbp-0x38],r9
  407fb4:	mov    rax,QWORD PTR [rbp-0x20]
  407fb8:	cmp    rax,QWORD PTR [rbp-0x38]
  407fbc:	jbe    408000 <flatcc_builder_create_vector@@Base+0x70>
  407fc2:	mov    rax,QWORD PTR [rbp-0x20]
  407fc6:	cmp    rax,QWORD PTR [rbp-0x38]
  407fca:	ja     407fd5 <flatcc_builder_create_vector@@Base+0x45>
  407fd0:	jmp    407ff4 <flatcc_builder_create_vector@@Base+0x64>
  407fd5:	lea    rdi,[rip+0x6d9f]        # 40ed7b <flatcc_builder_padding_base@@Base+0xbab>
  407fdc:	lea    rsi,[rip+0x63ff]        # 40e3e2 <flatcc_builder_padding_base@@Base+0x212>
  407fe3:	mov    edx,0x555
  407fe8:	lea    rcx,[rip+0x6d9f]        # 40ed8e <flatcc_builder_padding_base@@Base+0xbbe>
  407fef:	call   403060 <__assert_fail@plt>
  407ff4:	mov    DWORD PTR [rbp-0x4],0x0
  407ffb:	jmp    4081bc <flatcc_builder_create_vector@@Base+0x22c>
  408000:	lea    rdi,[rbp-0x2a]
  408004:	mov    esi,0x4
  408009:	call   406d40 <flatcc_builder_start_vector@@Base+0xb0>
  40800e:	mov    rdi,QWORD PTR [rbp-0x10]
  408012:	movzx  esi,WORD PTR [rbp-0x2a]
  408016:	call   4058d0 <flatcc_builder_create_buffer@@Base+0x420>
  40801b:	mov    rax,QWORD PTR [rbp-0x20]
  40801f:	mov    rcx,QWORD PTR [rbp-0x28]
  408023:	imul   eax,ecx
  408026:	mov    DWORD PTR [rbp-0x3c],eax
  408029:	mov    rdx,QWORD PTR [rbp-0x20]
  40802d:	mov    edi,edx
  40802f:	call   4053a0 <flatcc_builder_embed_buffer@@Base+0x430>
  408034:	mov    DWORD PTR [rbp-0x44],eax
  408037:	mov    rdi,QWORD PTR [rbp-0x10]
  40803b:	mov    esi,DWORD PTR [rbp-0x3c]
  40803e:	movzx  edx,WORD PTR [rbp-0x2a]
  408042:	call   405370 <flatcc_builder_embed_buffer@@Base+0x400>
  408047:	mov    DWORD PTR [rbp-0x40],eax
  40804a:	mov    QWORD PTR [rbp-0xd8],0x0
  408055:	mov    DWORD PTR [rbp-0xd0],0x0
  40805f:	mov    rdi,QWORD PTR [rbp-0xd8]
  408066:	add    rdi,0x4
  40806d:	mov    QWORD PTR [rbp-0xd8],rdi
  408074:	lea    rdi,[rbp-0x44]
  408078:	lea    r8,[rbp-0xd8]
  40807f:	mov    r9,r8
  408082:	add    r9,0x10
  408089:	movsxd r10,DWORD PTR [rbp-0xd0]
  408090:	shl    r10,0x4
  408094:	add    r9,r10
  408097:	mov    QWORD PTR [r9],rdi
  40809a:	add    r8,0x10
  4080a1:	movsxd rdi,DWORD PTR [rbp-0xd0]
  4080a8:	shl    rdi,0x4
  4080ac:	add    r8,rdi
  4080af:	mov    QWORD PTR [r8+0x8],0x4
  4080b7:	mov    eax,DWORD PTR [rbp-0xd0]
  4080bd:	add    eax,0x1
  4080c0:	mov    DWORD PTR [rbp-0xd0],eax
  4080c6:	cmp    DWORD PTR [rbp-0x3c],0x0
  4080ca:	jbe    408136 <flatcc_builder_create_vector@@Base+0x1a6>
  4080d0:	mov    eax,DWORD PTR [rbp-0x3c]
  4080d3:	mov    ecx,eax
  4080d5:	add    rcx,QWORD PTR [rbp-0xd8]
  4080dc:	mov    QWORD PTR [rbp-0xd8],rcx
  4080e3:	mov    rcx,QWORD PTR [rbp-0x18]
  4080e7:	lea    rdx,[rbp-0xd8]
  4080ee:	mov    rsi,rdx
  4080f1:	add    rsi,0x10
  4080f8:	movsxd rdi,DWORD PTR [rbp-0xd0]
  4080ff:	shl    rdi,0x4
  408103:	add    rsi,rdi
  408106:	mov    QWORD PTR [rsi],rcx
  408109:	mov    eax,DWORD PTR [rbp-0x3c]
  40810c:	mov    ecx,eax
  40810e:	add    rdx,0x10
  408115:	movsxd rsi,DWORD PTR [rbp-0xd0]
  40811c:	shl    rsi,0x4
  408120:	add    rdx,rsi
  408123:	mov    QWORD PTR [rdx+0x8],rcx
  408127:	mov    eax,DWORD PTR [rbp-0xd0]
  40812d:	add    eax,0x1
  408130:	mov    DWORD PTR [rbp-0xd0],eax
  408136:	cmp    DWORD PTR [rbp-0x40],0x0
  40813a:	jbe    4081a9 <flatcc_builder_create_vector@@Base+0x219>
  408140:	lea    rax,[rip+0x6089]        # 40e1d0 <flatcc_builder_padding_base@@Base>
  408147:	mov    ecx,DWORD PTR [rbp-0x40]
  40814a:	mov    edx,ecx
  40814c:	add    rdx,QWORD PTR [rbp-0xd8]
  408153:	mov    QWORD PTR [rbp-0xd8],rdx
  40815a:	lea    rdx,[rbp-0xd8]
  408161:	mov    rsi,rdx
  408164:	add    rsi,0x10
  40816b:	movsxd rdi,DWORD PTR [rbp-0xd0]
  408172:	shl    rdi,0x4
  408176:	add    rsi,rdi
  408179:	mov    QWORD PTR [rsi],rax
  40817c:	mov    ecx,DWORD PTR [rbp-0x40]
  40817f:	mov    eax,ecx
  408181:	add    rdx,0x10
  408188:	movsxd rsi,DWORD PTR [rbp-0xd0]
  40818f:	shl    rsi,0x4
  408193:	add    rdx,rsi
  408196:	mov    QWORD PTR [rdx+0x8],rax
  40819a:	mov    ecx,DWORD PTR [rbp-0xd0]
  4081a0:	add    ecx,0x1
  4081a3:	mov    DWORD PTR [rbp-0xd0],ecx
  4081a9:	mov    rdi,QWORD PTR [rbp-0x10]
  4081ad:	lea    rsi,[rbp-0xd8]
  4081b4:	call   4053b0 <flatcc_builder_embed_buffer@@Base+0x440>
  4081b9:	mov    DWORD PTR [rbp-0x4],eax
  4081bc:	mov    eax,DWORD PTR [rbp-0x4]
  4081bf:	add    rsp,0xe0
  4081c6:	pop    rbp
  4081c7:	ret    
  4081c8:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004081d0 <flatcc_builder_end_vector@@Base>:
  4081d0:	push   rbp
  4081d1:	mov    rbp,rsp
  4081d4:	sub    rsp,0x20
  4081d8:	mov    QWORD PTR [rbp-0x10],rdi
  4081dc:	mov    rax,QWORD PTR [rbp-0x10]
  4081e0:	mov    rax,QWORD PTR [rax+0x30]
  4081e4:	movzx  ecx,WORD PTR [rax+0xe]
  4081e8:	cmp    ecx,0x4
  4081eb:	jne    4081f6 <flatcc_builder_end_vector@@Base+0x26>
  4081f1:	jmp    408215 <flatcc_builder_end_vector@@Base+0x45>
  4081f6:	lea    rdi,[rip+0x6522]        # 40e71f <flatcc_builder_padding_base@@Base+0x54f>
  4081fd:	lea    rsi,[rip+0x61de]        # 40e3e2 <flatcc_builder_padding_base@@Base+0x212>
  408204:	mov    edx,0x578
  408209:	lea    rcx,[rip+0x6bf4]        # 40ee04 <flatcc_builder_padding_base@@Base+0xc34>
  408210:	call   403060 <__assert_fail@plt>
  408215:	mov    rdi,QWORD PTR [rbp-0x10]
  408219:	mov    rax,QWORD PTR [rbp-0x10]
  40821d:	mov    rsi,QWORD PTR [rax+0x18]
  408221:	mov    rax,QWORD PTR [rbp-0x10]
  408225:	mov    rax,QWORD PTR [rax+0x30]
  408229:	mov    ecx,DWORD PTR [rax+0x14]
  40822c:	mov    edx,ecx
  40822e:	mov    rax,QWORD PTR [rbp-0x10]
  408232:	mov    rax,QWORD PTR [rax+0x30]
  408236:	mov    ecx,DWORD PTR [rax+0x10]
  408239:	mov    rax,QWORD PTR [rbp-0x10]
  40823d:	mov    r8w,WORD PTR [rax+0xea]
  408245:	mov    rax,QWORD PTR [rbp-0x10]
  408249:	mov    rax,QWORD PTR [rax+0x30]
  40824d:	mov    r9d,DWORD PTR [rax+0x18]
  408251:	movzx  r8d,r8w
  408255:	call   407f90 <flatcc_builder_create_vector@@Base>
  40825a:	xor    r8d,r8d
  40825d:	mov    DWORD PTR [rbp-0x14],eax
  408260:	cmp    r8d,eax
  408263:	jne    408275 <flatcc_builder_end_vector@@Base+0xa5>
  408269:	mov    DWORD PTR [rbp-0x4],0x0
  408270:	jmp    408284 <flatcc_builder_end_vector@@Base+0xb4>
  408275:	mov    rdi,QWORD PTR [rbp-0x10]
  408279:	call   405f40 <flatcc_builder_end_buffer@@Base+0x160>
  40827e:	mov    eax,DWORD PTR [rbp-0x14]
  408281:	mov    DWORD PTR [rbp-0x4],eax
  408284:	mov    eax,DWORD PTR [rbp-0x4]
  408287:	add    rsp,0x20
  40828b:	pop    rbp
  40828c:	ret    
  40828d:	nop    DWORD PTR [rax]

0000000000408290 <flatcc_builder_vector_count@@Base>:
  408290:	push   rbp
  408291:	mov    rbp,rsp
  408294:	mov    QWORD PTR [rbp-0x8],rdi
  408298:	mov    rax,QWORD PTR [rbp-0x8]
  40829c:	mov    rax,QWORD PTR [rax+0x30]
  4082a0:	mov    ecx,DWORD PTR [rax+0x14]
  4082a3:	mov    eax,ecx
  4082a5:	pop    rbp
  4082a6:	ret    
  4082a7:	nop    WORD PTR [rax+rax*1+0x0]

00000000004082b0 <flatcc_builder_vector_edit@@Base>:
  4082b0:	push   rbp
  4082b1:	mov    rbp,rsp
  4082b4:	mov    QWORD PTR [rbp-0x8],rdi
  4082b8:	mov    rax,QWORD PTR [rbp-0x8]
  4082bc:	mov    rax,QWORD PTR [rax+0x18]
  4082c0:	pop    rbp
  4082c1:	ret    
  4082c2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4082cc:	nop    DWORD PTR [rax+0x0]

00000000004082d0 <flatcc_builder_create_offset_vector_direct@@Base>:
  4082d0:	push   rbp
  4082d1:	mov    rbp,rsp
  4082d4:	sub    rsp,0x20
  4082d8:	xor    eax,eax
  4082da:	mov    ecx,eax
  4082dc:	mov    QWORD PTR [rbp-0x8],rdi
  4082e0:	mov    QWORD PTR [rbp-0x10],rsi
  4082e4:	mov    QWORD PTR [rbp-0x18],rdx
  4082e8:	mov    rdi,QWORD PTR [rbp-0x8]
  4082ec:	mov    rsi,QWORD PTR [rbp-0x10]
  4082f0:	mov    rdx,QWORD PTR [rbp-0x18]
  4082f4:	call   408300 <flatcc_builder_create_offset_vector_direct@@Base+0x30>
  4082f9:	add    rsp,0x20
  4082fd:	pop    rbp
  4082fe:	ret    
  4082ff:	nop
  408300:	push   rbp
  408301:	mov    rbp,rsp
  408304:	sub    rsp,0xd0
  40830b:	mov    QWORD PTR [rbp-0x10],rdi
  40830f:	mov    QWORD PTR [rbp-0x18],rsi
  408313:	mov    QWORD PTR [rbp-0x20],rdx
  408317:	mov    QWORD PTR [rbp-0x28],rcx
  40831b:	mov    rax,QWORD PTR [rbp-0x20]
  40831f:	mov    eax,eax
  408321:	mov    ecx,eax
  408323:	cmp    rcx,0x3fffffff
  40832a:	jbe    40833c <flatcc_builder_create_offset_vector_direct@@Base+0x6c>
  408330:	mov    DWORD PTR [rbp-0x4],0x0
  408337:	jmp    408638 <flatcc_builder_create_offset_vector_direct@@Base+0x368>
  40833c:	mov    rdi,QWORD PTR [rbp-0x10]
  408340:	mov    esi,0x4
  408345:	call   4058d0 <flatcc_builder_create_buffer@@Base+0x420>
  40834a:	mov    rax,QWORD PTR [rbp-0x20]
  40834e:	mov    eax,eax
  408350:	mov    ecx,eax
  408352:	shl    rcx,0x2
  408356:	mov    DWORD PTR [rbp-0x2c],ecx
  408359:	mov    rdx,QWORD PTR [rbp-0x20]
  40835d:	mov    edi,edx
  40835f:	call   4053a0 <flatcc_builder_embed_buffer@@Base+0x430>
  408364:	mov    DWORD PTR [rbp-0x34],eax
  408367:	mov    rdi,QWORD PTR [rbp-0x10]
  40836b:	mov    esi,DWORD PTR [rbp-0x2c]
  40836e:	mov    edx,0x4
  408373:	call   405370 <flatcc_builder_embed_buffer@@Base+0x400>
  408378:	mov    DWORD PTR [rbp-0x30],eax
  40837b:	mov    QWORD PTR [rbp-0xd0],0x0
  408386:	mov    DWORD PTR [rbp-0xc8],0x0
  408390:	mov    rdi,QWORD PTR [rbp-0xd0]
  408397:	add    rdi,0x4
  40839e:	mov    QWORD PTR [rbp-0xd0],rdi
  4083a5:	lea    rdi,[rbp-0x34]
  4083a9:	lea    r8,[rbp-0xd0]
  4083b0:	mov    r9,r8
  4083b3:	add    r9,0x10
  4083ba:	movsxd r10,DWORD PTR [rbp-0xc8]
  4083c1:	shl    r10,0x4
  4083c5:	add    r9,r10
  4083c8:	mov    QWORD PTR [r9],rdi
  4083cb:	add    r8,0x10
  4083d2:	movsxd rdi,DWORD PTR [rbp-0xc8]
  4083d9:	shl    rdi,0x4
  4083dd:	add    r8,rdi
  4083e0:	mov    QWORD PTR [r8+0x8],0x4
  4083e8:	mov    eax,DWORD PTR [rbp-0xc8]
  4083ee:	add    eax,0x1
  4083f1:	mov    DWORD PTR [rbp-0xc8],eax
  4083f7:	cmp    DWORD PTR [rbp-0x2c],0x0
  4083fb:	jbe    408467 <flatcc_builder_create_offset_vector_direct@@Base+0x197>
  408401:	mov    eax,DWORD PTR [rbp-0x2c]
  408404:	mov    ecx,eax
  408406:	add    rcx,QWORD PTR [rbp-0xd0]
  40840d:	mov    QWORD PTR [rbp-0xd0],rcx
  408414:	mov    rcx,QWORD PTR [rbp-0x18]
  408418:	lea    rdx,[rbp-0xd0]
  40841f:	mov    rsi,rdx
  408422:	add    rsi,0x10
  408429:	movsxd rdi,DWORD PTR [rbp-0xc8]
  408430:	shl    rdi,0x4
  408434:	add    rsi,rdi
  408437:	mov    QWORD PTR [rsi],rcx
  40843a:	mov    eax,DWORD PTR [rbp-0x2c]
  40843d:	mov    ecx,eax
  40843f:	add    rdx,0x10
  408446:	movsxd rsi,DWORD PTR [rbp-0xc8]
  40844d:	shl    rsi,0x4
  408451:	add    rdx,rsi
  408454:	mov    QWORD PTR [rdx+0x8],rcx
  408458:	mov    eax,DWORD PTR [rbp-0xc8]
  40845e:	add    eax,0x1
  408461:	mov    DWORD PTR [rbp-0xc8],eax
  408467:	cmp    DWORD PTR [rbp-0x30],0x0
  40846b:	jbe    4084da <flatcc_builder_create_offset_vector_direct@@Base+0x20a>
  408471:	lea    rax,[rip+0x5d58]        # 40e1d0 <flatcc_builder_padding_base@@Base>
  408478:	mov    ecx,DWORD PTR [rbp-0x30]
  40847b:	mov    edx,ecx
  40847d:	add    rdx,QWORD PTR [rbp-0xd0]
  408484:	mov    QWORD PTR [rbp-0xd0],rdx
  40848b:	lea    rdx,[rbp-0xd0]
  408492:	mov    rsi,rdx
  408495:	add    rsi,0x10
  40849c:	movsxd rdi,DWORD PTR [rbp-0xc8]
  4084a3:	shl    rdi,0x4
  4084a7:	add    rsi,rdi
  4084aa:	mov    QWORD PTR [rsi],rax
  4084ad:	mov    ecx,DWORD PTR [rbp-0x30]
  4084b0:	mov    eax,ecx
  4084b2:	add    rdx,0x10
  4084b9:	movsxd rsi,DWORD PTR [rbp-0xc8]
  4084c0:	shl    rsi,0x4
  4084c4:	add    rdx,rsi
  4084c7:	mov    QWORD PTR [rdx+0x8],rax
  4084cb:	mov    ecx,DWORD PTR [rbp-0xc8]
  4084d1:	add    ecx,0x1
  4084d4:	mov    DWORD PTR [rbp-0xc8],ecx
  4084da:	mov    rax,QWORD PTR [rbp-0x10]
  4084de:	mov    ecx,DWORD PTR [rax+0xf0]
  4084e4:	mov    rax,QWORD PTR [rbp-0xd0]
  4084eb:	sub    ecx,eax
  4084ed:	mov    DWORD PTR [rbp-0x38],ecx
  4084f0:	mov    DWORD PTR [rbp-0x40],0x0
  4084f7:	mov    eax,DWORD PTR [rbp-0x40]
  4084fa:	mov    rcx,QWORD PTR [rbp-0x20]
  4084fe:	cmp    eax,ecx
  408500:	jae    408625 <flatcc_builder_create_offset_vector_direct@@Base+0x355>
  408506:	mov    rax,QWORD PTR [rbp-0x18]
  40850a:	mov    ecx,DWORD PTR [rbp-0x40]
  40850d:	mov    edx,ecx
  40850f:	cmp    DWORD PTR [rax+rdx*4],0x0
  408513:	je     4085a4 <flatcc_builder_create_offset_vector_direct@@Base+0x2d4>
  408519:	mov    rax,QWORD PTR [rbp-0x18]
  40851d:	mov    ecx,DWORD PTR [rbp-0x40]
  408520:	mov    edx,ecx
  408522:	mov    ecx,DWORD PTR [rax+rdx*4]
  408525:	sub    ecx,DWORD PTR [rbp-0x38]
  408528:	mov    ecx,ecx
  40852a:	mov    eax,ecx
  40852c:	mov    ecx,DWORD PTR [rbp-0x40]
  40852f:	mov    edx,ecx
  408531:	shl    rdx,0x2
  408535:	sub    rax,rdx
  408538:	sub    rax,0x4
  40853e:	mov    DWORD PTR [rbp-0x3c],eax
  408541:	mov    edi,DWORD PTR [rbp-0x3c]
  408544:	call   4053a0 <flatcc_builder_embed_buffer@@Base+0x430>
  408549:	mov    rdx,QWORD PTR [rbp-0x18]
  40854d:	mov    ecx,DWORD PTR [rbp-0x40]
  408550:	mov    esi,ecx
  408552:	mov    DWORD PTR [rdx+rsi*4],eax
  408555:	cmp    QWORD PTR [rbp-0x28],0x0
  40855a:	je     40859f <flatcc_builder_create_offset_vector_direct@@Base+0x2cf>
  408560:	mov    rax,QWORD PTR [rbp-0x28]
  408564:	mov    ecx,DWORD PTR [rbp-0x40]
  408567:	mov    edx,ecx
  408569:	movzx  ecx,BYTE PTR [rax+rdx*1]
  40856d:	cmp    ecx,0x0
  408570:	je     40857b <flatcc_builder_create_offset_vector_direct@@Base+0x2ab>
  408576:	jmp    40859a <flatcc_builder_create_offset_vector_direct@@Base+0x2ca>
  40857b:	lea    rdi,[rip+0x7014]        # 40f596 <flatcc_builder_padding_base@@Base+0x13c6>
  408582:	lea    rsi,[rip+0x5e59]        # 40e3e2 <flatcc_builder_padding_base@@Base+0x212>
  408589:	mov    edx,0x5b1
  40858e:	lea    rcx,[rip+0x700f]        # 40f5a4 <flatcc_builder_padding_base@@Base+0x13d4>
  408595:	call   403060 <__assert_fail@plt>
  40859a:	jmp    40859f <flatcc_builder_create_offset_vector_direct@@Base+0x2cf>
  40859f:	jmp    408612 <flatcc_builder_create_offset_vector_direct@@Base+0x342>
  4085a4:	cmp    QWORD PTR [rbp-0x28],0x0
  4085a9:	je     4085ee <flatcc_builder_create_offset_vector_direct@@Base+0x31e>
  4085af:	mov    rax,QWORD PTR [rbp-0x28]
  4085b3:	mov    ecx,DWORD PTR [rbp-0x40]
  4085b6:	mov    edx,ecx
  4085b8:	movzx  ecx,BYTE PTR [rax+rdx*1]
  4085bc:	cmp    ecx,0x0
  4085bf:	jne    4085ca <flatcc_builder_create_offset_vector_direct@@Base+0x2fa>
  4085c5:	jmp    4085e9 <flatcc_builder_create_offset_vector_direct@@Base+0x319>
  4085ca:	lea    rdi,[rip+0x7056]        # 40f627 <flatcc_builder_padding_base@@Base+0x1457>
  4085d1:	lea    rsi,[rip+0x5e0a]        # 40e3e2 <flatcc_builder_padding_base@@Base+0x212>
  4085d8:	mov    edx,0x5b5
  4085dd:	lea    rcx,[rip+0x6fc0]        # 40f5a4 <flatcc_builder_padding_base@@Base+0x13d4>
  4085e4:	call   403060 <__assert_fail@plt>
  4085e9:	jmp    40860d <flatcc_builder_create_offset_vector_direct@@Base+0x33d>
  4085ee:	lea    rdi,[rip+0x6fad]        # 40f5a2 <flatcc_builder_padding_base@@Base+0x13d2>
  4085f5:	lea    rsi,[rip+0x5de6]        # 40e3e2 <flatcc_builder_padding_base@@Base+0x212>
  4085fc:	mov    edx,0x5b7
  408601:	lea    rcx,[rip+0x6f9c]        # 40f5a4 <flatcc_builder_padding_base@@Base+0x13d4>
  408608:	call   403060 <__assert_fail@plt>
  40860d:	jmp    408612 <flatcc_builder_create_offset_vector_direct@@Base+0x342>
  408612:	jmp    408617 <flatcc_builder_create_offset_vector_direct@@Base+0x347>
  408617:	mov    eax,DWORD PTR [rbp-0x40]
  40861a:	add    eax,0x1
  40861d:	mov    DWORD PTR [rbp-0x40],eax
  408620:	jmp    4084f7 <flatcc_builder_create_offset_vector_direct@@Base+0x227>
  408625:	mov    rdi,QWORD PTR [rbp-0x10]
  408629:	lea    rsi,[rbp-0xd0]
  408630:	call   4053b0 <flatcc_builder_embed_buffer@@Base+0x440>
  408635:	mov    DWORD PTR [rbp-0x4],eax
  408638:	mov    eax,DWORD PTR [rbp-0x4]
  40863b:	add    rsp,0xd0
  408642:	pop    rbp
  408643:	ret    
  408644:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40864e:	xchg   ax,ax

0000000000408650 <flatcc_builder_end_offset_vector_for_unions@@Base>:
  408650:	push   rbp
  408651:	mov    rbp,rsp
  408654:	sub    rsp,0x20
  408658:	mov    QWORD PTR [rbp-0x10],rdi
  40865c:	mov    QWORD PTR [rbp-0x18],rsi
  408660:	mov    rax,QWORD PTR [rbp-0x10]
  408664:	mov    rax,QWORD PTR [rax+0x30]
  408668:	movzx  ecx,WORD PTR [rax+0xe]
  40866c:	cmp    ecx,0x5
  40866f:	jne    40867a <flatcc_builder_end_offset_vector_for_unions@@Base+0x2a>
  408675:	jmp    408699 <flatcc_builder_end_offset_vector_for_unions@@Base+0x49>
  40867a:	lea    rdi,[rip+0x6197]        # 40e818 <flatcc_builder_padding_base@@Base+0x648>
  408681:	lea    rsi,[rip+0x5d5a]        # 40e3e2 <flatcc_builder_padding_base@@Base+0x212>
  408688:	mov    edx,0x5d5
  40868d:	lea    rcx,[rip+0x67fd]        # 40ee91 <flatcc_builder_padding_base@@Base+0xcc1>
  408694:	call   403060 <__assert_fail@plt>
  408699:	mov    rdi,QWORD PTR [rbp-0x10]
  40869d:	mov    rax,QWORD PTR [rbp-0x10]
  4086a1:	mov    rax,QWORD PTR [rax+0x18]
  4086a5:	mov    rcx,QWORD PTR [rbp-0x10]
  4086a9:	mov    rcx,QWORD PTR [rcx+0x30]
  4086ad:	mov    edx,DWORD PTR [rcx+0x14]
  4086b0:	mov    rcx,QWORD PTR [rbp-0x18]
  4086b4:	mov    rsi,rax
  4086b7:	call   408300 <flatcc_builder_create_offset_vector_direct@@Base+0x30>
  4086bc:	xor    r8d,r8d
  4086bf:	mov    DWORD PTR [rbp-0x1c],eax
  4086c2:	cmp    r8d,eax
  4086c5:	jne    4086d7 <flatcc_builder_end_offset_vector_for_unions@@Base+0x87>
  4086cb:	mov    DWORD PTR [rbp-0x4],0x0
  4086d2:	jmp    4086e6 <flatcc_builder_end_offset_vector_for_unions@@Base+0x96>
  4086d7:	mov    rdi,QWORD PTR [rbp-0x10]
  4086db:	call   405f40 <flatcc_builder_end_buffer@@Base+0x160>
  4086e0:	mov    eax,DWORD PTR [rbp-0x1c]
  4086e3:	mov    DWORD PTR [rbp-0x4],eax
  4086e6:	mov    eax,DWORD PTR [rbp-0x4]
  4086e9:	add    rsp,0x20
  4086ed:	pop    rbp
  4086ee:	ret    
  4086ef:	nop

00000000004086f0 <flatcc_builder_offset_vector_edit@@Base>:
  4086f0:	push   rbp
  4086f1:	mov    rbp,rsp
  4086f4:	mov    QWORD PTR [rbp-0x8],rdi
  4086f8:	mov    rax,QWORD PTR [rbp-0x8]
  4086fc:	mov    rax,QWORD PTR [rax+0x18]
  408700:	pop    rbp
  408701:	ret    
  408702:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40870c:	nop    DWORD PTR [rax+0x0]

0000000000408710 <flatcc_builder_offset_vector_count@@Base>:
  408710:	push   rbp
  408711:	mov    rbp,rsp
  408714:	mov    QWORD PTR [rbp-0x8],rdi
  408718:	mov    rax,QWORD PTR [rbp-0x8]
  40871c:	mov    rax,QWORD PTR [rax+0x30]
  408720:	mov    ecx,DWORD PTR [rax+0x14]
  408723:	mov    eax,ecx
  408725:	pop    rbp
  408726:	ret    
  408727:	nop    WORD PTR [rax+rax*1+0x0]

0000000000408730 <flatcc_builder_table_add_union@@Base>:
  408730:	push   rbp
  408731:	mov    rbp,rsp
  408734:	sub    rsp,0x30
  408738:	mov    QWORD PTR [rbp-0x10],rdx
  40873c:	mov    QWORD PTR [rbp-0x18],rdi
  408740:	mov    DWORD PTR [rbp-0x1c],esi
  408743:	mov    rax,QWORD PTR [rbp-0x18]
  408747:	mov    rax,QWORD PTR [rax+0x30]
  40874b:	movzx  ecx,WORD PTR [rax+0xe]
  40874f:	cmp    ecx,0x3
  408752:	jne    40875d <flatcc_builder_table_add_union@@Base+0x2d>
  408758:	jmp    40877c <flatcc_builder_table_add_union@@Base+0x4c>
  40875d:	lea    rdi,[rip+0x64ad]        # 40ec11 <flatcc_builder_padding_base@@Base+0xa41>
  408764:	lea    rsi,[rip+0x5c77]        # 40e3e2 <flatcc_builder_padding_base@@Base+0x212>
  40876b:	mov    edx,0x5ee
  408770:	lea    rcx,[rip+0x678c]        # 40ef03 <flatcc_builder_padding_base@@Base+0xd33>
  408777:	call   403060 <__assert_fail@plt>
  40877c:	movzx  eax,BYTE PTR [rbp-0x10]
  408780:	cmp    eax,0x0
  408783:	jne    4087da <flatcc_builder_table_add_union@@Base+0xaa>
  408789:	cmp    DWORD PTR [rbp-0xc],0x0
  40878d:	je     4087da <flatcc_builder_table_add_union@@Base+0xaa>
  408793:	movzx  eax,BYTE PTR [rbp-0x10]
  408797:	cmp    eax,0x0
  40879a:	jne    4087aa <flatcc_builder_table_add_union@@Base+0x7a>
  4087a0:	cmp    DWORD PTR [rbp-0xc],0x0
  4087a4:	jne    4087af <flatcc_builder_table_add_union@@Base+0x7f>
  4087aa:	jmp    4087ce <flatcc_builder_table_add_union@@Base+0x9e>
  4087af:	lea    rdi,[rip+0x67a5]        # 40ef5b <flatcc_builder_padding_base@@Base+0xd8b>
  4087b6:	lea    rsi,[rip+0x5c25]        # 40e3e2 <flatcc_builder_padding_base@@Base+0x212>
  4087bd:	mov    edx,0x5ef
  4087c2:	lea    rcx,[rip+0x673a]        # 40ef03 <flatcc_builder_padding_base@@Base+0xd33>
  4087c9:	call   403060 <__assert_fail@plt>
  4087ce:	mov    DWORD PTR [rbp-0x4],0xffffffff
  4087d5:	jmp    4088be <flatcc_builder_table_add_union@@Base+0x18e>
  4087da:	cmp    DWORD PTR [rbp-0xc],0x0
  4087de:	je     408843 <flatcc_builder_table_add_union@@Base+0x113>
  4087e4:	mov    rdi,QWORD PTR [rbp-0x18]
  4087e8:	mov    esi,DWORD PTR [rbp-0x1c]
  4087eb:	call   4088d0 <flatcc_builder_table_add_offset@@Base>
  4087f0:	mov    QWORD PTR [rbp-0x28],rax
  4087f4:	cmp    QWORD PTR [rbp-0x28],0x0
  4087f9:	jne    40883a <flatcc_builder_table_add_union@@Base+0x10a>
  4087ff:	cmp    QWORD PTR [rbp-0x28],0x0
  408804:	je     40880f <flatcc_builder_table_add_union@@Base+0xdf>
  40880a:	jmp    40882e <flatcc_builder_table_add_union@@Base+0xfe>
  40880f:	lea    rdi,[rip+0x6767]        # 40ef7d <flatcc_builder_padding_base@@Base+0xdad>
  408816:	lea    rsi,[rip+0x5bc5]        # 40e3e2 <flatcc_builder_padding_base@@Base+0x212>
  40881d:	mov    edx,0x5f2
  408822:	lea    rcx,[rip+0x66da]        # 40ef03 <flatcc_builder_padding_base@@Base+0xd33>
  408829:	call   403060 <__assert_fail@plt>
  40882e:	mov    DWORD PTR [rbp-0x4],0xffffffff
  408835:	jmp    4088be <flatcc_builder_table_add_union@@Base+0x18e>
  40883a:	mov    eax,DWORD PTR [rbp-0xc]
  40883d:	mov    rcx,QWORD PTR [rbp-0x28]
  408841:	mov    DWORD PTR [rcx],eax
  408843:	mov    rdi,QWORD PTR [rbp-0x18]
  408847:	mov    eax,DWORD PTR [rbp-0x1c]
  40884a:	sub    eax,0x1
  40884d:	mov    esi,eax
  40884f:	mov    edx,0x1
  408854:	mov    ecx,0x1
  408859:	call   4089c0 <flatcc_builder_table_add@@Base>
  40885e:	mov    QWORD PTR [rbp-0x30],rax
  408862:	cmp    QWORD PTR [rbp-0x30],0x0
  408867:	jne    4088a8 <flatcc_builder_table_add_union@@Base+0x178>
  40886d:	cmp    QWORD PTR [rbp-0x30],0x0
  408872:	je     40887d <flatcc_builder_table_add_union@@Base+0x14d>
  408878:	jmp    40889c <flatcc_builder_table_add_union@@Base+0x16c>
  40887d:	lea    rdi,[rip+0x6703]        # 40ef87 <flatcc_builder_padding_base@@Base+0xdb7>
  408884:	lea    rsi,[rip+0x5b57]        # 40e3e2 <flatcc_builder_padding_base@@Base+0x212>
  40888b:	mov    edx,0x5f6
  408890:	lea    rcx,[rip+0x666c]        # 40ef03 <flatcc_builder_padding_base@@Base+0xd33>
  408897:	call   403060 <__assert_fail@plt>
  40889c:	mov    DWORD PTR [rbp-0x4],0xffffffff
  4088a3:	jmp    4088be <flatcc_builder_table_add_union@@Base+0x18e>
  4088a8:	movzx  edi,BYTE PTR [rbp-0x10]
  4088ac:	call   408b00 <flatcc_builder_table_add@@Base+0x140>
  4088b1:	mov    rcx,QWORD PTR [rbp-0x30]
  4088b5:	mov    BYTE PTR [rcx],al
  4088b7:	mov    DWORD PTR [rbp-0x4],0x0
  4088be:	mov    eax,DWORD PTR [rbp-0x4]
  4088c1:	add    rsp,0x30
  4088c5:	pop    rbp
  4088c6:	ret    
  4088c7:	nop    WORD PTR [rax+rax*1+0x0]

00000000004088d0 <flatcc_builder_table_add_offset@@Base>:
  4088d0:	push   rbp
  4088d1:	mov    rbp,rsp
  4088d4:	sub    rsp,0x10
  4088d8:	mov    QWORD PTR [rbp-0x8],rdi
  4088dc:	mov    DWORD PTR [rbp-0xc],esi
  4088df:	mov    rax,QWORD PTR [rbp-0x8]
  4088e3:	mov    rax,QWORD PTR [rax+0x30]
  4088e7:	movzx  ecx,WORD PTR [rax+0xe]
  4088eb:	cmp    ecx,0x3
  4088ee:	jne    4088f9 <flatcc_builder_table_add_offset@@Base+0x29>
  4088f4:	jmp    408918 <flatcc_builder_table_add_offset@@Base+0x48>
  4088f9:	lea    rdi,[rip+0x6311]        # 40ec11 <flatcc_builder_padding_base@@Base+0xa41>
  408900:	lea    rsi,[rip+0x5adb]        # 40e3e2 <flatcc_builder_padding_base@@Base+0x212>
  408907:	mov    edx,0x713
  40890c:	lea    rcx,[rip+0x69f2]        # 40f305 <flatcc_builder_padding_base@@Base+0x1135>
  408913:	call   403060 <__assert_fail@plt>
  408918:	cmp    DWORD PTR [rbp-0xc],0x0
  40891c:	jl     408934 <flatcc_builder_table_add_offset@@Base+0x64>
  408922:	cmp    DWORD PTR [rbp-0xc],0x7ffc
  408929:	jg     408934 <flatcc_builder_table_add_offset@@Base+0x64>
  40892f:	jmp    408953 <flatcc_builder_table_add_offset@@Base+0x83>
  408934:	lea    rdi,[rip+0x694a]        # 40f285 <flatcc_builder_padding_base@@Base+0x10b5>
  40893b:	lea    rsi,[rip+0x5aa0]        # 40e3e2 <flatcc_builder_padding_base@@Base+0x212>
  408942:	mov    edx,0x714
  408947:	lea    rcx,[rip+0x69b7]        # 40f305 <flatcc_builder_padding_base@@Base+0x1135>
  40894e:	call   403060 <__assert_fail@plt>
  408953:	mov    rax,QWORD PTR [rbp-0x8]
  408957:	mov    rax,QWORD PTR [rax+0x8]
  40895b:	movsxd rcx,DWORD PTR [rbp-0xc]
  40895f:	movzx  edx,WORD PTR [rax+rcx*2]
  408963:	cmp    edx,0x0
  408966:	je     40898b <flatcc_builder_table_add_offset@@Base+0xbb>
  40896c:	lea    rdi,[rip+0x6c2f]        # 40f5a2 <flatcc_builder_padding_base@@Base+0x13d2>
  408973:	lea    rsi,[rip+0x5a68]        # 40e3e2 <flatcc_builder_padding_base@@Base+0x212>
  40897a:	mov    edx,0x71b
  40897f:	lea    rcx,[rip+0x697f]        # 40f305 <flatcc_builder_padding_base@@Base+0x1135>
  408986:	call   403060 <__assert_fail@plt>
  40898b:	mov    eax,DWORD PTR [rbp-0xc]
  40898e:	mov    rcx,QWORD PTR [rbp-0x8]
  408992:	xor    eax,DWORD PTR [rcx+0x14]
  408995:	imul   eax,eax,0x9e3779b1
  40899b:	xor    eax,0x4
  40899e:	imul   eax,eax,0x9e3779b1
  4089a4:	mov    rcx,QWORD PTR [rbp-0x8]
  4089a8:	mov    DWORD PTR [rcx+0x14],eax
  4089ab:	mov    rdi,QWORD PTR [rbp-0x8]
  4089af:	mov    eax,DWORD PTR [rbp-0xc]
  4089b2:	movzx  esi,ax
  4089b5:	call   4098a0 <flatcc_builder_table_add_copy@@Base+0x60>
  4089ba:	add    rsp,0x10
  4089be:	pop    rbp
  4089bf:	ret    

00000000004089c0 <flatcc_builder_table_add@@Base>:
  4089c0:	push   rbp
  4089c1:	mov    rbp,rsp
  4089c4:	sub    rsp,0x20
  4089c8:	mov    QWORD PTR [rbp-0x8],rdi
  4089cc:	mov    DWORD PTR [rbp-0xc],esi
  4089cf:	mov    QWORD PTR [rbp-0x18],rdx
  4089d3:	mov    WORD PTR [rbp-0x1a],cx
  4089d7:	mov    rax,QWORD PTR [rbp-0x8]
  4089db:	mov    rax,QWORD PTR [rax+0x30]
  4089df:	movzx  esi,WORD PTR [rax+0xe]
  4089e3:	cmp    esi,0x3
  4089e6:	jne    4089f1 <flatcc_builder_table_add@@Base+0x31>
  4089ec:	jmp    408a10 <flatcc_builder_table_add@@Base+0x50>
  4089f1:	lea    rdi,[rip+0x6219]        # 40ec11 <flatcc_builder_padding_base@@Base+0xa41>
  4089f8:	lea    rsi,[rip+0x59e3]        # 40e3e2 <flatcc_builder_padding_base@@Base+0x212>
  4089ff:	mov    edx,0x6ed
  408a04:	lea    rcx,[rip+0x6830]        # 40f23b <flatcc_builder_padding_base@@Base+0x106b>
  408a0b:	call   403060 <__assert_fail@plt>
  408a10:	cmp    DWORD PTR [rbp-0xc],0x0
  408a14:	jl     408a2c <flatcc_builder_table_add@@Base+0x6c>
  408a1a:	cmp    DWORD PTR [rbp-0xc],0x7ffc
  408a21:	jg     408a2c <flatcc_builder_table_add@@Base+0x6c>
  408a27:	jmp    408a4b <flatcc_builder_table_add@@Base+0x8b>
  408a2c:	lea    rdi,[rip+0x6852]        # 40f285 <flatcc_builder_padding_base@@Base+0x10b5>
  408a33:	lea    rsi,[rip+0x59a8]        # 40e3e2 <flatcc_builder_padding_base@@Base+0x212>
  408a3a:	mov    edx,0x6ee
  408a3f:	lea    rcx,[rip+0x67f5]        # 40f23b <flatcc_builder_padding_base@@Base+0x106b>
  408a46:	call   403060 <__assert_fail@plt>
  408a4b:	movzx  eax,WORD PTR [rbp-0x1a]
  408a4f:	mov    rcx,QWORD PTR [rbp-0x8]
  408a53:	movzx  edx,WORD PTR [rcx+0xea]
  408a5a:	cmp    eax,edx
  408a5c:	jle    408a71 <flatcc_builder_table_add@@Base+0xb1>
  408a62:	mov    ax,WORD PTR [rbp-0x1a]
  408a66:	mov    rcx,QWORD PTR [rbp-0x8]
  408a6a:	mov    WORD PTR [rcx+0xea],ax
  408a71:	mov    rax,QWORD PTR [rbp-0x8]
  408a75:	mov    rax,QWORD PTR [rax+0x8]
  408a79:	movsxd rcx,DWORD PTR [rbp-0xc]
  408a7d:	movzx  edx,WORD PTR [rax+rcx*2]
  408a81:	cmp    edx,0x0
  408a84:	je     408aa9 <flatcc_builder_table_add@@Base+0xe9>
  408a8a:	lea    rdi,[rip+0x6b11]        # 40f5a2 <flatcc_builder_padding_base@@Base+0x13d2>
  408a91:	lea    rsi,[rip+0x594a]        # 40e3e2 <flatcc_builder_padding_base@@Base+0x212>
  408a98:	mov    edx,0x6f8
  408a9d:	lea    rcx,[rip+0x6797]        # 40f23b <flatcc_builder_padding_base@@Base+0x106b>
  408aa4:	call   403060 <__assert_fail@plt>
  408aa9:	mov    eax,DWORD PTR [rbp-0xc]
  408aac:	mov    rcx,QWORD PTR [rbp-0x8]
  408ab0:	xor    eax,DWORD PTR [rcx+0x14]
  408ab3:	imul   eax,eax,0x9e3779b1
  408ab9:	mov    rcx,QWORD PTR [rbp-0x18]
  408abd:	xor    eax,ecx
  408abf:	imul   eax,eax,0x9e3779b1
  408ac5:	mov    rdx,QWORD PTR [rbp-0x8]
  408ac9:	mov    DWORD PTR [rdx+0x14],eax
  408acc:	mov    rdi,QWORD PTR [rbp-0x8]
  408ad0:	mov    rdx,QWORD PTR [rbp-0x18]
  408ad4:	mov    si,WORD PTR [rbp-0x1a]
  408ad8:	mov    eax,DWORD PTR [rbp-0xc]
  408adb:	mov    WORD PTR [rbp-0x1c],si
  408adf:	mov    esi,edx
  408ae1:	mov    r8w,WORD PTR [rbp-0x1c]
  408ae6:	movzx  edx,r8w
  408aea:	movzx  ecx,ax
  408aed:	call   4096d0 <flatcc_builder_string_len@@Base+0x20>
  408af2:	add    rsp,0x20
  408af6:	pop    rbp
  408af7:	ret    
  408af8:	nop    DWORD PTR [rax+rax*1+0x0]
  408b00:	push   rbp
  408b01:	mov    rbp,rsp
  408b04:	mov    BYTE PTR [rbp-0x1],dil
  408b08:	movzx  eax,BYTE PTR [rbp-0x1]
  408b0c:	pop    rbp
  408b0d:	ret    
  408b0e:	xchg   ax,ax

0000000000408b10 <flatcc_builder_table_add_union_vector@@Base>:
  408b10:	push   rbp
  408b11:	mov    rbp,rsp
  408b14:	sub    rsp,0x30
  408b18:	mov    QWORD PTR [rbp-0x10],rdx
  408b1c:	mov    QWORD PTR [rbp-0x18],rdi
  408b20:	mov    DWORD PTR [rbp-0x1c],esi
  408b23:	mov    rax,QWORD PTR [rbp-0x18]
  408b27:	mov    rax,QWORD PTR [rax+0x30]
  408b2b:	movzx  ecx,WORD PTR [rax+0xe]
  408b2f:	cmp    ecx,0x3
  408b32:	jne    408b3d <flatcc_builder_table_add_union_vector@@Base+0x2d>
  408b38:	jmp    408b5c <flatcc_builder_table_add_union_vector@@Base+0x4c>
  408b3d:	lea    rdi,[rip+0x60cd]        # 40ec11 <flatcc_builder_padding_base@@Base+0xa41>
  408b44:	lea    rsi,[rip+0x5897]        # 40e3e2 <flatcc_builder_padding_base@@Base+0x212>
  408b4b:	mov    edx,0x600
  408b50:	lea    rcx,[rip+0x643c]        # 40ef93 <flatcc_builder_padding_base@@Base+0xdc3>
  408b57:	call   403060 <__assert_fail@plt>
  408b5c:	cmp    DWORD PTR [rbp-0x10],0x0
  408b60:	sete   al
  408b63:	and    al,0x1
  408b65:	movzx  ecx,al
  408b68:	cmp    DWORD PTR [rbp-0xc],0x0
  408b6c:	sete   al
  408b6f:	and    al,0x1
  408b71:	movzx  edx,al
  408b74:	cmp    ecx,edx
  408b76:	je     408bcc <flatcc_builder_table_add_union_vector@@Base+0xbc>
  408b7c:	cmp    DWORD PTR [rbp-0x10],0x0
  408b80:	sete   al
  408b83:	and    al,0x1
  408b85:	movzx  ecx,al
  408b88:	cmp    DWORD PTR [rbp-0xc],0x0
  408b8c:	sete   al
  408b8f:	and    al,0x1
  408b91:	movzx  edx,al
  408b94:	cmp    ecx,edx
  408b96:	jne    408ba1 <flatcc_builder_table_add_union_vector@@Base+0x91>
  408b9c:	jmp    408bc0 <flatcc_builder_table_add_union_vector@@Base+0xb0>
  408ba1:	lea    rdi,[rip+0x644e]        # 40eff6 <flatcc_builder_padding_base@@Base+0xe26>
  408ba8:	lea    rsi,[rip+0x5833]        # 40e3e2 <flatcc_builder_padding_base@@Base+0x212>
  408baf:	mov    edx,0x601
  408bb4:	lea    rcx,[rip+0x63d8]        # 40ef93 <flatcc_builder_padding_base@@Base+0xdc3>
  408bbb:	call   403060 <__assert_fail@plt>
  408bc0:	mov    DWORD PTR [rbp-0x4],0xffffffff
  408bc7:	jmp    408ca0 <flatcc_builder_table_add_union_vector@@Base+0x190>
  408bcc:	cmp    DWORD PTR [rbp-0x10],0x0
  408bd0:	je     408c99 <flatcc_builder_table_add_union_vector@@Base+0x189>
  408bd6:	mov    rdi,QWORD PTR [rbp-0x18]
  408bda:	mov    eax,DWORD PTR [rbp-0x1c]
  408bdd:	sub    eax,0x1
  408be0:	mov    esi,eax
  408be2:	call   4088d0 <flatcc_builder_table_add_offset@@Base>
  408be7:	mov    QWORD PTR [rbp-0x28],rax
  408beb:	cmp    QWORD PTR [rbp-0x28],0x0
  408bf0:	jne    408c31 <flatcc_builder_table_add_union_vector@@Base+0x121>
  408bf6:	cmp    QWORD PTR [rbp-0x28],0x0
  408bfb:	je     408c06 <flatcc_builder_table_add_union_vector@@Base+0xf6>
  408c01:	jmp    408c25 <flatcc_builder_table_add_union_vector@@Base+0x115>
  408c06:	lea    rdi,[rip+0x6370]        # 40ef7d <flatcc_builder_padding_base@@Base+0xdad>
  408c0d:	lea    rsi,[rip+0x57ce]        # 40e3e2 <flatcc_builder_padding_base@@Base+0x212>
  408c14:	mov    edx,0x604
  408c19:	lea    rcx,[rip+0x6373]        # 40ef93 <flatcc_builder_padding_base@@Base+0xdc3>
  408c20:	call   403060 <__assert_fail@plt>
  408c25:	mov    DWORD PTR [rbp-0x4],0xffffffff
  408c2c:	jmp    408ca0 <flatcc_builder_table_add_union_vector@@Base+0x190>
  408c31:	mov    eax,DWORD PTR [rbp-0x10]
  408c34:	mov    rcx,QWORD PTR [rbp-0x28]
  408c38:	mov    DWORD PTR [rcx],eax
  408c3a:	mov    rdi,QWORD PTR [rbp-0x18]
  408c3e:	mov    esi,DWORD PTR [rbp-0x1c]
  408c41:	call   4088d0 <flatcc_builder_table_add_offset@@Base>
  408c46:	mov    QWORD PTR [rbp-0x28],rax
  408c4a:	cmp    QWORD PTR [rbp-0x28],0x0
  408c4f:	jne    408c90 <flatcc_builder_table_add_union_vector@@Base+0x180>
  408c55:	cmp    QWORD PTR [rbp-0x28],0x0
  408c5a:	je     408c65 <flatcc_builder_table_add_union_vector@@Base+0x155>
  408c60:	jmp    408c84 <flatcc_builder_table_add_union_vector@@Base+0x174>
  408c65:	lea    rdi,[rip+0x6311]        # 40ef7d <flatcc_builder_padding_base@@Base+0xdad>
  408c6c:	lea    rsi,[rip+0x576f]        # 40e3e2 <flatcc_builder_padding_base@@Base+0x212>
  408c73:	mov    edx,0x608
  408c78:	lea    rcx,[rip+0x6314]        # 40ef93 <flatcc_builder_padding_base@@Base+0xdc3>
  408c7f:	call   403060 <__assert_fail@plt>
  408c84:	mov    DWORD PTR [rbp-0x4],0xffffffff
  408c8b:	jmp    408ca0 <flatcc_builder_table_add_union_vector@@Base+0x190>
  408c90:	mov    eax,DWORD PTR [rbp-0xc]
  408c93:	mov    rcx,QWORD PTR [rbp-0x28]
  408c97:	mov    DWORD PTR [rcx],eax
  408c99:	mov    DWORD PTR [rbp-0x4],0x0
  408ca0:	mov    eax,DWORD PTR [rbp-0x4]
  408ca3:	add    rsp,0x30
  408ca7:	pop    rbp
  408ca8:	ret    
  408ca9:	nop    DWORD PTR [rax+0x0]

0000000000408cb0 <flatcc_builder_create_union_vector@@Base>:
  408cb0:	push   rbp
  408cb1:	mov    rbp,rsp
  408cb4:	sub    rsp,0x40
  408cb8:	xor    eax,eax
  408cba:	mov    QWORD PTR [rbp-0x10],rdi
  408cbe:	mov    QWORD PTR [rbp-0x18],rsi
  408cc2:	mov    QWORD PTR [rbp-0x20],rdx
  408cc6:	lea    rcx,[rbp-0x8]
  408cca:	mov    rdi,rcx
  408ccd:	mov    esi,eax
  408ccf:	mov    edx,0x8
  408cd4:	call   403070 <memset@plt>
  408cd9:	mov    rdi,QWORD PTR [rbp-0x10]
  408cdd:	call   406d70 <flatcc_builder_start_offset_vector@@Base>
  408ce2:	cmp    eax,0x0
  408ce5:	je     408cf0 <flatcc_builder_create_union_vector@@Base+0x40>
  408ceb:	jmp    408dc5 <flatcc_builder_create_union_vector@@Base+0x115>
  408cf0:	mov    rdi,QWORD PTR [rbp-0x10]
  408cf4:	mov    rsi,QWORD PTR [rbp-0x20]
  408cf8:	call   406560 <flatcc_builder_extend_offset_vector@@Base>
  408cfd:	xor    ecx,ecx
  408cff:	mov    edx,ecx
  408d01:	cmp    rdx,rax
  408d04:	jne    408d0f <flatcc_builder_create_union_vector@@Base+0x5f>
  408d0a:	jmp    408dc5 <flatcc_builder_create_union_vector@@Base+0x115>
  408d0f:	mov    rdi,QWORD PTR [rbp-0x10]
  408d13:	mov    rax,QWORD PTR [rbp-0x20]
  408d17:	shl    rax,0x0
  408d1b:	mov    esi,eax
  408d1d:	call   4060f0 <flatcc_builder_start_struct@@Base+0xf0>
  408d22:	xor    ecx,ecx
  408d24:	mov    edx,ecx
  408d26:	mov    QWORD PTR [rbp-0x28],rax
  408d2a:	cmp    rdx,rax
  408d2d:	jne    408d38 <flatcc_builder_create_union_vector@@Base+0x88>
  408d33:	jmp    408dc5 <flatcc_builder_create_union_vector@@Base+0x115>
  408d38:	mov    rdi,QWORD PTR [rbp-0x10]
  408d3c:	call   4086f0 <flatcc_builder_offset_vector_edit@@Base>
  408d41:	mov    QWORD PTR [rbp-0x30],rax
  408d45:	mov    QWORD PTR [rbp-0x38],0x0
  408d4d:	mov    rax,QWORD PTR [rbp-0x38]
  408d51:	cmp    rax,QWORD PTR [rbp-0x20]
  408d55:	jae    408d9b <flatcc_builder_create_union_vector@@Base+0xeb>
  408d5b:	mov    rax,QWORD PTR [rbp-0x18]
  408d5f:	mov    rcx,QWORD PTR [rbp-0x38]
  408d63:	mov    dl,BYTE PTR [rax+rcx*8]
  408d66:	mov    rax,QWORD PTR [rbp-0x28]
  408d6a:	mov    rcx,QWORD PTR [rbp-0x38]
  408d6e:	mov    BYTE PTR [rax+rcx*1],dl
  408d71:	mov    rax,QWORD PTR [rbp-0x18]
  408d75:	mov    rcx,QWORD PTR [rbp-0x38]
  408d79:	mov    esi,DWORD PTR [rax+rcx*8+0x4]
  408d7d:	mov    rax,QWORD PTR [rbp-0x30]
  408d81:	mov    rcx,QWORD PTR [rbp-0x38]
  408d85:	mov    DWORD PTR [rax+rcx*4],esi
  408d88:	mov    rax,QWORD PTR [rbp-0x38]
  408d8c:	add    rax,0x1
  408d92:	mov    QWORD PTR [rbp-0x38],rax
  408d96:	jmp    408d4d <flatcc_builder_create_union_vector@@Base+0x9d>
  408d9b:	mov    rdi,QWORD PTR [rbp-0x10]
  408d9f:	mov    rsi,QWORD PTR [rbp-0x28]
  408da3:	mov    rdx,QWORD PTR [rbp-0x30]
  408da7:	mov    rcx,QWORD PTR [rbp-0x20]
  408dab:	call   408dd0 <flatcc_builder_create_union_vector_direct@@Base>
  408db0:	mov    QWORD PTR [rbp-0x40],rax
  408db4:	mov    rax,QWORD PTR [rbp-0x40]
  408db8:	mov    QWORD PTR [rbp-0x8],rax
  408dbc:	mov    rdi,QWORD PTR [rbp-0x10]
  408dc0:	call   405f40 <flatcc_builder_end_buffer@@Base+0x160>
  408dc5:	mov    rax,QWORD PTR [rbp-0x8]
  408dc9:	add    rsp,0x40
  408dcd:	pop    rbp
  408dce:	ret    
  408dcf:	nop

0000000000408dd0 <flatcc_builder_create_union_vector_direct@@Base>:
  408dd0:	push   rbp
  408dd1:	mov    rbp,rsp
  408dd4:	sub    rsp,0x30
  408dd8:	xor    eax,eax
  408dda:	mov    QWORD PTR [rbp-0x10],rdi
  408dde:	mov    QWORD PTR [rbp-0x18],rsi
  408de2:	mov    QWORD PTR [rbp-0x20],rdx
  408de6:	mov    QWORD PTR [rbp-0x28],rcx
  408dea:	lea    rcx,[rbp-0x8]
  408dee:	mov    rdi,rcx
  408df1:	mov    esi,eax
  408df3:	mov    edx,0x8
  408df8:	call   403070 <memset@plt>
  408dfd:	mov    rdi,QWORD PTR [rbp-0x10]
  408e01:	mov    rsi,QWORD PTR [rbp-0x20]
  408e05:	mov    rdx,QWORD PTR [rbp-0x28]
  408e09:	mov    rcx,QWORD PTR [rbp-0x18]
  408e0d:	call   408300 <flatcc_builder_create_offset_vector_direct@@Base+0x30>
  408e12:	xor    r8d,r8d
  408e15:	mov    DWORD PTR [rbp-0x4],eax
  408e18:	cmp    r8d,eax
  408e1b:	jne    408e26 <flatcc_builder_create_union_vector_direct@@Base+0x56>
  408e21:	jmp    408e61 <flatcc_builder_create_union_vector_direct@@Base+0x91>
  408e26:	mov    rdi,QWORD PTR [rbp-0x10]
  408e2a:	mov    rsi,QWORD PTR [rbp-0x18]
  408e2e:	mov    rdx,QWORD PTR [rbp-0x28]
  408e32:	mov    ecx,0x1
  408e37:	mov    r8d,0x1
  408e3d:	mov    r9d,0xffffffff
  408e43:	call   407f90 <flatcc_builder_create_vector@@Base>
  408e48:	xor    r8d,r8d
  408e4b:	mov    DWORD PTR [rbp-0x8],eax
  408e4e:	cmp    r8d,eax
  408e51:	jne    408e5c <flatcc_builder_create_union_vector_direct@@Base+0x8c>
  408e57:	jmp    408e61 <flatcc_builder_create_union_vector_direct@@Base+0x91>
  408e5c:	jmp    408e61 <flatcc_builder_create_union_vector_direct@@Base+0x91>
  408e61:	mov    rax,QWORD PTR [rbp-0x8]
  408e65:	add    rsp,0x30
  408e69:	pop    rbp
  408e6a:	ret    
  408e6b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000408e70 <flatcc_builder_start_union_vector@@Base>:
  408e70:	push   rbp
  408e71:	mov    rbp,rsp
  408e74:	sub    rsp,0x10
  408e78:	mov    QWORD PTR [rbp-0x10],rdi
  408e7c:	mov    rdi,QWORD PTR [rbp-0x10]
  408e80:	mov    esi,0x4
  408e85:	call   405c20 <flatcc_builder_start_buffer@@Base+0x170>
  408e8a:	cmp    eax,0x0
  408e8d:	je     408e9f <flatcc_builder_start_union_vector@@Base+0x2f>
  408e93:	mov    DWORD PTR [rbp-0x4],0xffffffff
  408e9a:	jmp    408ee0 <flatcc_builder_start_union_vector@@Base+0x70>
  408e9f:	mov    rax,QWORD PTR [rbp-0x10]
  408ea3:	mov    rax,QWORD PTR [rax+0x30]
  408ea7:	mov    DWORD PTR [rax+0x10],0x8
  408eae:	mov    rax,QWORD PTR [rbp-0x10]
  408eb2:	mov    rax,QWORD PTR [rax+0x30]
  408eb6:	mov    DWORD PTR [rax+0x14],0x0
  408ebd:	mov    rax,QWORD PTR [rbp-0x10]
  408ec1:	mov    rax,QWORD PTR [rax+0x30]
  408ec5:	mov    WORD PTR [rax+0xe],0x7
  408ecb:	mov    rdi,QWORD PTR [rbp-0x10]
  408ecf:	mov    esi,0xfffffffc
  408ed4:	call   406070 <flatcc_builder_start_struct@@Base+0x70>
  408ed9:	mov    DWORD PTR [rbp-0x4],0x0
  408ee0:	mov    eax,DWORD PTR [rbp-0x4]
  408ee3:	add    rsp,0x10
  408ee7:	pop    rbp
  408ee8:	ret    
  408ee9:	nop    DWORD PTR [rax+0x0]

0000000000408ef0 <flatcc_builder_end_union_vector@@Base>:
  408ef0:	push   rbp
  408ef1:	mov    rbp,rsp
  408ef4:	sub    rsp,0x40
  408ef8:	xor    esi,esi
  408efa:	mov    QWORD PTR [rbp-0x10],rdi
  408efe:	lea    rax,[rbp-0x8]
  408f02:	mov    rdi,rax
  408f05:	mov    edx,0x8
  408f0a:	call   403070 <memset@plt>
  408f0f:	mov    rax,QWORD PTR [rbp-0x10]
  408f13:	mov    rax,QWORD PTR [rax+0x30]
  408f17:	movzx  ecx,WORD PTR [rax+0xe]
  408f1b:	cmp    ecx,0x7
  408f1e:	jne    408f29 <flatcc_builder_end_union_vector@@Base+0x39>
  408f24:	jmp    408f48 <flatcc_builder_end_union_vector@@Base+0x58>
  408f29:	lea    rdi,[rip+0x60ee]        # 40f01e <flatcc_builder_padding_base@@Base+0xe4e>
  408f30:	lea    rsi,[rip+0x54ab]        # 40e3e2 <flatcc_builder_padding_base@@Base+0x212>
  408f37:	mov    edx,0x651
  408f3c:	lea    rcx,[rip+0x610d]        # 40f050 <flatcc_builder_padding_base@@Base+0xe80>
  408f43:	call   403060 <__assert_fail@plt>
  408f48:	mov    rdi,QWORD PTR [rbp-0x10]
  408f4c:	call   409030 <flatcc_builder_union_vector_count@@Base>
  408f51:	mov    QWORD PTR [rbp-0x38],rax
  408f55:	mov    rdi,QWORD PTR [rbp-0x10]
  408f59:	imul   rax,QWORD PTR [rbp-0x38],0x5
  408f61:	mov    esi,eax
  408f63:	call   4060f0 <flatcc_builder_start_struct@@Base+0xf0>
  408f68:	xor    ecx,ecx
  408f6a:	mov    edx,ecx
  408f6c:	mov    QWORD PTR [rbp-0x28],rax
  408f70:	cmp    rdx,rax
  408f73:	jne    408f7e <flatcc_builder_end_union_vector@@Base+0x8e>
  408f79:	jmp    40901e <flatcc_builder_end_union_vector@@Base+0x12e>
  408f7e:	mov    rax,QWORD PTR [rbp-0x28]
  408f82:	mov    rcx,QWORD PTR [rbp-0x38]
  408f86:	shl    rcx,0x2
  408f8a:	add    rax,rcx
  408f8d:	mov    QWORD PTR [rbp-0x18],rax
  408f91:	mov    rdi,QWORD PTR [rbp-0x10]
  408f95:	call   409050 <flatcc_builder_union_vector_edit@@Base>
  408f9a:	mov    QWORD PTR [rbp-0x20],rax
  408f9e:	mov    QWORD PTR [rbp-0x30],0x0
  408fa6:	mov    rax,QWORD PTR [rbp-0x30]
  408faa:	cmp    rax,QWORD PTR [rbp-0x38]
  408fae:	jae    408ff4 <flatcc_builder_end_union_vector@@Base+0x104>
  408fb4:	mov    rax,QWORD PTR [rbp-0x20]
  408fb8:	mov    rcx,QWORD PTR [rbp-0x30]
  408fbc:	mov    dl,BYTE PTR [rax+rcx*8]
  408fbf:	mov    rax,QWORD PTR [rbp-0x18]
  408fc3:	mov    rcx,QWORD PTR [rbp-0x30]
  408fc7:	mov    BYTE PTR [rax+rcx*1],dl
  408fca:	mov    rax,QWORD PTR [rbp-0x20]
  408fce:	mov    rcx,QWORD PTR [rbp-0x30]
  408fd2:	mov    esi,DWORD PTR [rax+rcx*8+0x4]
  408fd6:	mov    rax,QWORD PTR [rbp-0x28]
  408fda:	mov    rcx,QWORD PTR [rbp-0x30]
  408fde:	mov    DWORD PTR [rax+rcx*4],esi
  408fe1:	mov    rax,QWORD PTR [rbp-0x30]
  408fe5:	add    rax,0x1
  408feb:	mov    QWORD PTR [rbp-0x30],rax
  408fef:	jmp    408fa6 <flatcc_builder_end_union_vector@@Base+0xb6>
  408ff4:	mov    rdi,QWORD PTR [rbp-0x10]
  408ff8:	mov    rsi,QWORD PTR [rbp-0x18]
  408ffc:	mov    rdx,QWORD PTR [rbp-0x28]
  409000:	mov    rcx,QWORD PTR [rbp-0x38]
  409004:	call   408dd0 <flatcc_builder_create_union_vector_direct@@Base>
  409009:	mov    QWORD PTR [rbp-0x40],rax
  40900d:	mov    rax,QWORD PTR [rbp-0x40]
  409011:	mov    QWORD PTR [rbp-0x8],rax
  409015:	mov    rdi,QWORD PTR [rbp-0x10]
  409019:	call   405f40 <flatcc_builder_end_buffer@@Base+0x160>
  40901e:	mov    rax,QWORD PTR [rbp-0x8]
  409022:	add    rsp,0x40
  409026:	pop    rbp
  409027:	ret    
  409028:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000409030 <flatcc_builder_union_vector_count@@Base>:
  409030:	push   rbp
  409031:	mov    rbp,rsp
  409034:	mov    QWORD PTR [rbp-0x8],rdi
  409038:	mov    rax,QWORD PTR [rbp-0x8]
  40903c:	mov    rax,QWORD PTR [rax+0x30]
  409040:	mov    ecx,DWORD PTR [rax+0x14]
  409043:	mov    eax,ecx
  409045:	pop    rbp
  409046:	ret    
  409047:	nop    WORD PTR [rax+rax*1+0x0]

0000000000409050 <flatcc_builder_union_vector_edit@@Base>:
  409050:	push   rbp
  409051:	mov    rbp,rsp
  409054:	mov    QWORD PTR [rbp-0x8],rdi
  409058:	mov    rax,QWORD PTR [rbp-0x8]
  40905c:	mov    rax,QWORD PTR [rax+0x18]
  409060:	pop    rbp
  409061:	ret    
  409062:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40906c:	nop    DWORD PTR [rax+0x0]

0000000000409070 <flatcc_builder_extend_union_vector@@Base>:
  409070:	push   rbp
  409071:	mov    rbp,rsp
  409074:	sub    rsp,0x20
  409078:	mov    QWORD PTR [rbp-0x10],rdi
  40907c:	mov    QWORD PTR [rbp-0x18],rsi
  409080:	mov    rdi,QWORD PTR [rbp-0x10]
  409084:	mov    rax,QWORD PTR [rbp-0x18]
  409088:	mov    esi,eax
  40908a:	mov    edx,0x1fffffff
  40908f:	call   4062b0 <flatcc_builder_extend_vector@@Base+0x70>
  409094:	cmp    eax,0x0
  409097:	je     4090aa <flatcc_builder_extend_union_vector@@Base+0x3a>
  40909d:	mov    QWORD PTR [rbp-0x8],0x0
  4090a5:	jmp    4090c5 <flatcc_builder_extend_union_vector@@Base+0x55>
  4090aa:	mov    rdi,QWORD PTR [rbp-0x10]
  4090ae:	mov    rax,QWORD PTR [rbp-0x18]
  4090b2:	mov    eax,eax
  4090b4:	mov    ecx,eax
  4090b6:	shl    rcx,0x3
  4090ba:	mov    esi,ecx
  4090bc:	call   4060f0 <flatcc_builder_start_struct@@Base+0xf0>
  4090c1:	mov    QWORD PTR [rbp-0x8],rax
  4090c5:	mov    rax,QWORD PTR [rbp-0x8]
  4090c9:	add    rsp,0x20
  4090cd:	pop    rbp
  4090ce:	ret    
  4090cf:	nop

00000000004090d0 <flatcc_builder_truncate_union_vector@@Base>:
  4090d0:	push   rbp
  4090d1:	mov    rbp,rsp
  4090d4:	sub    rsp,0x20
  4090d8:	mov    QWORD PTR [rbp-0x10],rdi
  4090dc:	mov    QWORD PTR [rbp-0x18],rsi
  4090e0:	mov    rax,QWORD PTR [rbp-0x10]
  4090e4:	mov    rax,QWORD PTR [rax+0x30]
  4090e8:	movzx  ecx,WORD PTR [rax+0xe]
  4090ec:	cmp    ecx,0x7
  4090ef:	jne    4090fa <flatcc_builder_truncate_union_vector@@Base+0x2a>
  4090f5:	jmp    409119 <flatcc_builder_truncate_union_vector@@Base+0x49>
  4090fa:	lea    rdi,[rip+0x5f1d]        # 40f01e <flatcc_builder_padding_base@@Base+0xe4e>
  409101:	lea    rsi,[rip+0x52da]        # 40e3e2 <flatcc_builder_padding_base@@Base+0x212>
  409108:	mov    edx,0x681
  40910d:	lea    rcx,[rip+0x5f8f]        # 40f0a3 <flatcc_builder_padding_base@@Base+0xed3>
  409114:	call   403060 <__assert_fail@plt>
  409119:	mov    rax,QWORD PTR [rbp-0x10]
  40911d:	mov    rax,QWORD PTR [rax+0x30]
  409121:	mov    ecx,DWORD PTR [rax+0x14]
  409124:	mov    rax,QWORD PTR [rbp-0x18]
  409128:	cmp    ecx,eax
  40912a:	jae    409177 <flatcc_builder_truncate_union_vector@@Base+0xa7>
  409130:	mov    rax,QWORD PTR [rbp-0x10]
  409134:	mov    rax,QWORD PTR [rax+0x30]
  409138:	mov    ecx,DWORD PTR [rax+0x14]
  40913b:	mov    rax,QWORD PTR [rbp-0x18]
  40913f:	cmp    ecx,eax
  409141:	jb     40914c <flatcc_builder_truncate_union_vector@@Base+0x7c>
  409147:	jmp    40916b <flatcc_builder_truncate_union_vector@@Base+0x9b>
  40914c:	lea    rdi,[rip+0x592f]        # 40ea82 <flatcc_builder_padding_base@@Base+0x8b2>
  409153:	lea    rsi,[rip+0x5288]        # 40e3e2 <flatcc_builder_padding_base@@Base+0x212>
  40915a:	mov    edx,0x682
  40915f:	lea    rcx,[rip+0x5f3d]        # 40f0a3 <flatcc_builder_padding_base@@Base+0xed3>
  409166:	call   403060 <__assert_fail@plt>
  40916b:	mov    DWORD PTR [rbp-0x4],0xffffffff
  409172:	jmp    4091af <flatcc_builder_truncate_union_vector@@Base+0xdf>
  409177:	mov    rax,QWORD PTR [rbp-0x18]
  40917b:	mov    rcx,QWORD PTR [rbp-0x10]
  40917f:	mov    rcx,QWORD PTR [rcx+0x30]
  409183:	mov    edx,DWORD PTR [rcx+0x14]
  409186:	sub    edx,eax
  409188:	mov    DWORD PTR [rcx+0x14],edx
  40918b:	mov    rdi,QWORD PTR [rbp-0x10]
  40918f:	mov    rcx,QWORD PTR [rbp-0x10]
  409193:	mov    rcx,QWORD PTR [rcx+0x30]
  409197:	mov    eax,DWORD PTR [rcx+0x10]
  40919a:	mov    rcx,QWORD PTR [rbp-0x18]
  40919e:	imul   eax,ecx
  4091a1:	mov    esi,eax
  4091a3:	call   406a60 <flatcc_builder_truncate_vector@@Base+0xf0>
  4091a8:	mov    DWORD PTR [rbp-0x4],0x0
  4091af:	mov    eax,DWORD PTR [rbp-0x4]
  4091b2:	add    rsp,0x20
  4091b6:	pop    rbp
  4091b7:	ret    
  4091b8:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004091c0 <flatcc_builder_union_vector_push@@Base>:
  4091c0:	push   rbp
  4091c1:	mov    rbp,rsp
  4091c4:	sub    rsp,0x20
  4091c8:	mov    QWORD PTR [rbp-0x10],rsi
  4091cc:	mov    QWORD PTR [rbp-0x18],rdi
  4091d0:	mov    rax,QWORD PTR [rbp-0x18]
  4091d4:	mov    rax,QWORD PTR [rax+0x30]
  4091d8:	movzx  ecx,WORD PTR [rax+0xe]
  4091dc:	cmp    ecx,0x7
  4091df:	jne    4091ea <flatcc_builder_union_vector_push@@Base+0x2a>
  4091e5:	jmp    409209 <flatcc_builder_union_vector_push@@Base+0x49>
  4091ea:	lea    rdi,[rip+0x5e2d]        # 40f01e <flatcc_builder_padding_base@@Base+0xe4e>
  4091f1:	lea    rsi,[rip+0x51ea]        # 40e3e2 <flatcc_builder_padding_base@@Base+0x212>
  4091f8:	mov    edx,0x68d
  4091fd:	lea    rcx,[rip+0x5ee4]        # 40f0e8 <flatcc_builder_padding_base@@Base+0xf18>
  409204:	call   403060 <__assert_fail@plt>
  409209:	mov    rax,QWORD PTR [rbp-0x18]
  40920d:	mov    rax,QWORD PTR [rax+0x30]
  409211:	mov    ecx,DWORD PTR [rax+0x14]
  409214:	mov    eax,ecx
  409216:	cmp    rax,0x1fffffff
  40921c:	jne    40922f <flatcc_builder_union_vector_push@@Base+0x6f>
  409222:	mov    QWORD PTR [rbp-0x8],0x0
  40922a:	jmp    40927f <flatcc_builder_union_vector_push@@Base+0xbf>
  40922f:	mov    rax,QWORD PTR [rbp-0x18]
  409233:	mov    rax,QWORD PTR [rax+0x30]
  409237:	mov    ecx,DWORD PTR [rax+0x14]
  40923a:	add    ecx,0x1
  40923d:	mov    DWORD PTR [rax+0x14],ecx
  409240:	mov    rdi,QWORD PTR [rbp-0x18]
  409244:	mov    esi,0x8
  409249:	call   4060f0 <flatcc_builder_start_struct@@Base+0xf0>
  40924e:	xor    ecx,ecx
  409250:	mov    edx,ecx
  409252:	mov    QWORD PTR [rbp-0x20],rax
  409256:	cmp    rdx,rax
  409259:	jne    40926c <flatcc_builder_union_vector_push@@Base+0xac>
  40925f:	mov    QWORD PTR [rbp-0x8],0x0
  409267:	jmp    40927f <flatcc_builder_union_vector_push@@Base+0xbf>
  40926c:	mov    rax,QWORD PTR [rbp-0x20]
  409270:	mov    rcx,QWORD PTR [rbp-0x10]
  409274:	mov    QWORD PTR [rax],rcx
  409277:	mov    rax,QWORD PTR [rbp-0x20]
  40927b:	mov    QWORD PTR [rbp-0x8],rax
  40927f:	mov    rax,QWORD PTR [rbp-0x8]
  409283:	add    rsp,0x20
  409287:	pop    rbp
  409288:	ret    
  409289:	nop    DWORD PTR [rax+0x0]

0000000000409290 <flatcc_builder_append_union_vector@@Base>:
  409290:	push   rbp
  409291:	mov    rbp,rsp
  409294:	sub    rsp,0x20
  409298:	mov    QWORD PTR [rbp-0x10],rdi
  40929c:	mov    QWORD PTR [rbp-0x18],rsi
  4092a0:	mov    QWORD PTR [rbp-0x20],rdx
  4092a4:	mov    rax,QWORD PTR [rbp-0x10]
  4092a8:	mov    rax,QWORD PTR [rax+0x30]
  4092ac:	movzx  ecx,WORD PTR [rax+0xe]
  4092b0:	cmp    ecx,0x7
  4092b3:	jne    4092be <flatcc_builder_append_union_vector@@Base+0x2e>
  4092b9:	jmp    4092dd <flatcc_builder_append_union_vector@@Base+0x4d>
  4092be:	lea    rdi,[rip+0x5d59]        # 40f01e <flatcc_builder_padding_base@@Base+0xe4e>
  4092c5:	lea    rsi,[rip+0x5116]        # 40e3e2 <flatcc_builder_padding_base@@Base+0x212>
  4092cc:	mov    edx,0x69c
  4092d1:	lea    rcx,[rip+0x5e7d]        # 40f155 <flatcc_builder_padding_base@@Base+0xf85>
  4092d8:	call   403060 <__assert_fail@plt>
  4092dd:	mov    rdi,QWORD PTR [rbp-0x10]
  4092e1:	mov    rax,QWORD PTR [rbp-0x20]
  4092e5:	mov    esi,eax
  4092e7:	mov    edx,0x1fffffff
  4092ec:	call   4062b0 <flatcc_builder_extend_vector@@Base+0x70>
  4092f1:	cmp    eax,0x0
  4092f4:	je     409307 <flatcc_builder_append_union_vector@@Base+0x77>
  4092fa:	mov    QWORD PTR [rbp-0x8],0x0
  409302:	jmp    409327 <flatcc_builder_append_union_vector@@Base+0x97>
  409307:	mov    rdi,QWORD PTR [rbp-0x10]
  40930b:	mov    rax,QWORD PTR [rbp-0x18]
  40930f:	mov    rcx,QWORD PTR [rbp-0x20]
  409313:	mov    ecx,ecx
  409315:	mov    edx,ecx
  409317:	shl    rdx,0x3
  40931b:	mov    rsi,rax
  40931e:	call   406450 <flatcc_builder_vector_push@@Base+0xf0>
  409323:	mov    QWORD PTR [rbp-0x8],rax
  409327:	mov    rax,QWORD PTR [rbp-0x8]
  40932b:	add    rsp,0x20
  40932f:	pop    rbp
  409330:	ret    
  409331:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40933b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000409340 <flatcc_builder_create_string@@Base>:
  409340:	push   rbp
  409341:	mov    rbp,rsp
  409344:	sub    rsp,0xc0
  40934b:	mov    QWORD PTR [rbp-0x10],rdi
  40934f:	mov    QWORD PTR [rbp-0x18],rsi
  409353:	mov    QWORD PTR [rbp-0x20],rdx
  409357:	mov    eax,0xffffffff
  40935c:	cmp    QWORD PTR [rbp-0x20],rax
  409360:	jbe    409372 <flatcc_builder_create_string@@Base+0x32>
  409366:	mov    DWORD PTR [rbp-0x4],0x0
  40936d:	jmp    40950e <flatcc_builder_create_string@@Base+0x1ce>
  409372:	mov    rax,QWORD PTR [rbp-0x20]
  409376:	mov    edi,eax
  409378:	call   4053a0 <flatcc_builder_embed_buffer@@Base+0x430>
  40937d:	mov    DWORD PTR [rbp-0x28],eax
  409380:	mov    rdi,QWORD PTR [rbp-0x10]
  409384:	mov    rcx,QWORD PTR [rbp-0x20]
  409388:	add    ecx,0x1
  40938b:	mov    esi,ecx
  40938d:	mov    edx,0x4
  409392:	call   405370 <flatcc_builder_embed_buffer@@Base+0x400>
  409397:	add    eax,0x1
  40939a:	mov    DWORD PTR [rbp-0x24],eax
  40939d:	mov    QWORD PTR [rbp-0xb8],0x0
  4093a8:	mov    DWORD PTR [rbp-0xb0],0x0
  4093b2:	mov    rdi,QWORD PTR [rbp-0xb8]
  4093b9:	add    rdi,0x4
  4093c0:	mov    QWORD PTR [rbp-0xb8],rdi
  4093c7:	lea    rdi,[rbp-0x28]
  4093cb:	lea    r8,[rbp-0xb8]
  4093d2:	mov    r9,r8
  4093d5:	add    r9,0x10
  4093dc:	movsxd r10,DWORD PTR [rbp-0xb0]
  4093e3:	shl    r10,0x4
  4093e7:	add    r9,r10
  4093ea:	mov    QWORD PTR [r9],rdi
  4093ed:	add    r8,0x10
  4093f4:	movsxd rdi,DWORD PTR [rbp-0xb0]
  4093fb:	shl    rdi,0x4
  4093ff:	add    r8,rdi
  409402:	mov    QWORD PTR [r8+0x8],0x4
  40940a:	mov    eax,DWORD PTR [rbp-0xb0]
  409410:	add    eax,0x1
  409413:	mov    DWORD PTR [rbp-0xb0],eax
  409419:	cmp    QWORD PTR [rbp-0x20],0x0
  40941e:	jbe    409488 <flatcc_builder_create_string@@Base+0x148>
  409424:	mov    rax,QWORD PTR [rbp-0x20]
  409428:	add    rax,QWORD PTR [rbp-0xb8]
  40942f:	mov    QWORD PTR [rbp-0xb8],rax
  409436:	mov    rax,QWORD PTR [rbp-0x18]
  40943a:	lea    rcx,[rbp-0xb8]
  409441:	mov    rdx,rcx
  409444:	add    rdx,0x10
  40944b:	movsxd rsi,DWORD PTR [rbp-0xb0]
  409452:	shl    rsi,0x4
  409456:	add    rdx,rsi
  409459:	mov    QWORD PTR [rdx],rax
  40945c:	mov    rax,QWORD PTR [rbp-0x20]
  409460:	add    rcx,0x10
  409467:	movsxd rdx,DWORD PTR [rbp-0xb0]
  40946e:	shl    rdx,0x4
  409472:	add    rcx,rdx
  409475:	mov    QWORD PTR [rcx+0x8],rax
  409479:	mov    edi,DWORD PTR [rbp-0xb0]
  40947f:	add    edi,0x1
  409482:	mov    DWORD PTR [rbp-0xb0],edi
  409488:	cmp    DWORD PTR [rbp-0x24],0x0
  40948c:	jbe    4094fb <flatcc_builder_create_string@@Base+0x1bb>
  409492:	lea    rax,[rip+0x4d37]        # 40e1d0 <flatcc_builder_padding_base@@Base>
  409499:	mov    ecx,DWORD PTR [rbp-0x24]
  40949c:	mov    edx,ecx
  40949e:	add    rdx,QWORD PTR [rbp-0xb8]
  4094a5:	mov    QWORD PTR [rbp-0xb8],rdx
  4094ac:	lea    rdx,[rbp-0xb8]
  4094b3:	mov    rsi,rdx
  4094b6:	add    rsi,0x10
  4094bd:	movsxd rdi,DWORD PTR [rbp-0xb0]
  4094c4:	shl    rdi,0x4
  4094c8:	add    rsi,rdi
  4094cb:	mov    QWORD PTR [rsi],rax
  4094ce:	mov    ecx,DWORD PTR [rbp-0x24]
  4094d1:	mov    eax,ecx
  4094d3:	add    rdx,0x10
  4094da:	movsxd rsi,DWORD PTR [rbp-0xb0]
  4094e1:	shl    rsi,0x4
  4094e5:	add    rdx,rsi
  4094e8:	mov    QWORD PTR [rdx+0x8],rax
  4094ec:	mov    ecx,DWORD PTR [rbp-0xb0]
  4094f2:	add    ecx,0x1
  4094f5:	mov    DWORD PTR [rbp-0xb0],ecx
  4094fb:	mov    rdi,QWORD PTR [rbp-0x10]
  4094ff:	lea    rsi,[rbp-0xb8]
  409506:	call   4053b0 <flatcc_builder_embed_buffer@@Base+0x440>
  40950b:	mov    DWORD PTR [rbp-0x4],eax
  40950e:	mov    eax,DWORD PTR [rbp-0x4]
  409511:	add    rsp,0xc0
  409518:	pop    rbp
  409519:	ret    
  40951a:	nop    WORD PTR [rax+rax*1+0x0]

0000000000409520 <flatcc_builder_create_string_str@@Base>:
  409520:	push   rbp
  409521:	mov    rbp,rsp
  409524:	sub    rsp,0x20
  409528:	mov    QWORD PTR [rbp-0x8],rdi
  40952c:	mov    QWORD PTR [rbp-0x10],rsi
  409530:	mov    rdi,QWORD PTR [rbp-0x8]
  409534:	mov    rsi,QWORD PTR [rbp-0x10]
  409538:	mov    rax,QWORD PTR [rbp-0x10]
  40953c:	mov    QWORD PTR [rbp-0x18],rdi
  409540:	mov    rdi,rax
  409543:	mov    QWORD PTR [rbp-0x20],rsi
  409547:	call   403050 <strlen@plt>
  40954c:	mov    rdi,QWORD PTR [rbp-0x18]
  409550:	mov    rsi,QWORD PTR [rbp-0x20]
  409554:	mov    rdx,rax
  409557:	call   409340 <flatcc_builder_create_string@@Base>
  40955c:	add    rsp,0x20
  409560:	pop    rbp
  409561:	ret    
  409562:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40956c:	nop    DWORD PTR [rax+0x0]

0000000000409570 <flatcc_builder_create_string_strn@@Base>:
  409570:	push   rbp
  409571:	mov    rbp,rsp
  409574:	sub    rsp,0x30
  409578:	mov    QWORD PTR [rbp-0x8],rdi
  40957c:	mov    QWORD PTR [rbp-0x10],rsi
  409580:	mov    QWORD PTR [rbp-0x18],rdx
  409584:	mov    rdi,QWORD PTR [rbp-0x8]
  409588:	mov    rsi,QWORD PTR [rbp-0x10]
  40958c:	mov    rax,QWORD PTR [rbp-0x10]
  409590:	mov    rcx,QWORD PTR [rbp-0x18]
  409594:	mov    QWORD PTR [rbp-0x20],rdi
  409598:	mov    rdi,rax
  40959b:	mov    QWORD PTR [rbp-0x28],rsi
  40959f:	mov    rsi,rcx
  4095a2:	call   406910 <flatcc_builder_append_string_strn@@Base+0x50>
  4095a7:	mov    rdi,QWORD PTR [rbp-0x20]
  4095ab:	mov    rsi,QWORD PTR [rbp-0x28]
  4095af:	mov    rdx,rax
  4095b2:	call   409340 <flatcc_builder_create_string@@Base>
  4095b7:	add    rsp,0x30
  4095bb:	pop    rbp
  4095bc:	ret    
  4095bd:	nop    DWORD PTR [rax]

00000000004095c0 <flatcc_builder_end_string@@Base>:
  4095c0:	push   rbp
  4095c1:	mov    rbp,rsp
  4095c4:	sub    rsp,0x20
  4095c8:	mov    QWORD PTR [rbp-0x10],rdi
  4095cc:	mov    rax,QWORD PTR [rbp-0x10]
  4095d0:	mov    rax,QWORD PTR [rax+0x30]
  4095d4:	movzx  ecx,WORD PTR [rax+0xe]
  4095d8:	cmp    ecx,0x6
  4095db:	jne    4095e6 <flatcc_builder_end_string@@Base+0x26>
  4095e1:	jmp    409605 <flatcc_builder_end_string@@Base+0x45>
  4095e6:	lea    rdi,[rip+0x5334]        # 40e921 <flatcc_builder_padding_base@@Base+0x751>
  4095ed:	lea    rsi,[rip+0x4dee]        # 40e3e2 <flatcc_builder_padding_base@@Base+0x212>
  4095f4:	mov    edx,0x6c4
  4095f9:	lea    rcx,[rip+0x5bd4]        # 40f1d4 <flatcc_builder_padding_base@@Base+0x1004>
  409600:	call   403060 <__assert_fail@plt>
  409605:	mov    rax,QWORD PTR [rbp-0x10]
  409609:	mov    rax,QWORD PTR [rax+0x30]
  40960d:	mov    ecx,DWORD PTR [rax+0x14]
  409610:	mov    rax,QWORD PTR [rbp-0x10]
  409614:	cmp    ecx,DWORD PTR [rax+0x20]
  409617:	jne    409622 <flatcc_builder_end_string@@Base+0x62>
  40961d:	jmp    409641 <flatcc_builder_end_string@@Base+0x81>
  409622:	lea    rdi,[rip+0x5bee]        # 40f217 <flatcc_builder_padding_base@@Base+0x1047>
  409629:	lea    rsi,[rip+0x4db2]        # 40e3e2 <flatcc_builder_padding_base@@Base+0x212>
  409630:	mov    edx,0x6c5
  409635:	lea    rcx,[rip+0x5b98]        # 40f1d4 <flatcc_builder_padding_base@@Base+0x1004>
  40963c:	call   403060 <__assert_fail@plt>
  409641:	mov    rdi,QWORD PTR [rbp-0x10]
  409645:	mov    rax,QWORD PTR [rbp-0x10]
  409649:	mov    rsi,QWORD PTR [rax+0x18]
  40964d:	mov    rax,QWORD PTR [rbp-0x10]
  409651:	mov    ecx,DWORD PTR [rax+0x20]
  409654:	mov    edx,ecx
  409656:	call   409340 <flatcc_builder_create_string@@Base>
  40965b:	xor    ecx,ecx
  40965d:	mov    DWORD PTR [rbp-0x14],eax
  409660:	cmp    ecx,eax
  409662:	jne    409674 <flatcc_builder_end_string@@Base+0xb4>
  409668:	mov    DWORD PTR [rbp-0x4],0x0
  40966f:	jmp    409683 <flatcc_builder_end_string@@Base+0xc3>
  409674:	mov    rdi,QWORD PTR [rbp-0x10]
  409678:	call   405f40 <flatcc_builder_end_buffer@@Base+0x160>
  40967d:	mov    eax,DWORD PTR [rbp-0x14]
  409680:	mov    DWORD PTR [rbp-0x4],eax
  409683:	mov    eax,DWORD PTR [rbp-0x4]
  409686:	add    rsp,0x20
  40968a:	pop    rbp
  40968b:	ret    
  40968c:	nop    DWORD PTR [rax+0x0]

0000000000409690 <flatcc_builder_string_edit@@Base>:
  409690:	push   rbp
  409691:	mov    rbp,rsp
  409694:	mov    QWORD PTR [rbp-0x8],rdi
  409698:	mov    rax,QWORD PTR [rbp-0x8]
  40969c:	mov    rax,QWORD PTR [rax+0x18]
  4096a0:	pop    rbp
  4096a1:	ret    
  4096a2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4096ac:	nop    DWORD PTR [rax+0x0]

00000000004096b0 <flatcc_builder_string_len@@Base>:
  4096b0:	push   rbp
  4096b1:	mov    rbp,rsp
  4096b4:	mov    QWORD PTR [rbp-0x8],rdi
  4096b8:	mov    rax,QWORD PTR [rbp-0x8]
  4096bc:	mov    rax,QWORD PTR [rax+0x30]
  4096c0:	mov    ecx,DWORD PTR [rax+0x14]
  4096c3:	mov    eax,ecx
  4096c5:	pop    rbp
  4096c6:	ret    
  4096c7:	nop    WORD PTR [rax+rax*1+0x0]
  4096d0:	push   rbp
  4096d1:	mov    rbp,rsp
  4096d4:	sub    rsp,0x20
  4096d8:	mov    QWORD PTR [rbp-0x10],rdi
  4096dc:	mov    DWORD PTR [rbp-0x14],esi
  4096df:	mov    WORD PTR [rbp-0x16],dx
  4096e3:	mov    WORD PTR [rbp-0x18],cx
  4096e7:	mov    rax,QWORD PTR [rbp-0x10]
  4096eb:	mov    esi,DWORD PTR [rax+0x20]
  4096ee:	movzx  r8d,WORD PTR [rbp-0x16]
  4096f3:	add    esi,r8d
  4096f6:	sub    esi,0x1
  4096f9:	movzx  r8d,WORD PTR [rbp-0x16]
  4096fe:	sub    r8d,0x1
  409702:	xor    r8d,0xffffffff
  409706:	and    esi,r8d
  409709:	mov    DWORD PTR [rbp-0x1c],esi
  40970c:	mov    esi,DWORD PTR [rbp-0x1c]
  40970f:	add    esi,DWORD PTR [rbp-0x14]
  409712:	mov    rax,QWORD PTR [rbp-0x10]
  409716:	mov    DWORD PTR [rax+0x20],esi
  409719:	mov    rax,QWORD PTR [rbp-0x10]
  40971d:	cmp    esi,DWORD PTR [rax+0x24]
  409720:	jb     40975d <flatcc_builder_string_len@@Base+0xad>
  409726:	mov    rdi,QWORD PTR [rbp-0x10]
  40972a:	mov    rax,QWORD PTR [rbp-0x10]
  40972e:	mov    ecx,DWORD PTR [rax+0x20]
  409731:	add    ecx,0x1
  409734:	mov    ecx,ecx
  409736:	mov    esi,ecx
  409738:	mov    edx,0xfffc
  40973d:	call   40a0d0 <flatcc_builder_get_emit_context@@Base+0x50>
  409742:	cmp    eax,0x0
  409745:	je     409758 <flatcc_builder_string_len@@Base+0xa8>
  40974b:	mov    QWORD PTR [rbp-0x8],0x0
  409753:	jmp    4097b2 <flatcc_builder_string_len@@Base+0x102>
  409758:	jmp    40975d <flatcc_builder_string_len@@Base+0xad>
  40975d:	mov    eax,DWORD PTR [rbp-0x1c]
  409760:	mov    ecx,eax
  409762:	add    rcx,0x4
  409769:	mov    rdx,QWORD PTR [rbp-0x10]
  40976d:	mov    rdx,QWORD PTR [rdx+0x8]
  409771:	movzx  eax,WORD PTR [rbp-0x18]
  409775:	mov    esi,eax
  409777:	mov    WORD PTR [rdx+rsi*2],cx
  40977b:	movzx  eax,WORD PTR [rbp-0x18]
  40977f:	mov    rdx,QWORD PTR [rbp-0x10]
  409783:	movzx  edi,WORD PTR [rdx+0x10]
  409787:	cmp    eax,edi
  409789:	jl     40979e <flatcc_builder_string_len@@Base+0xee>
  40978f:	movzx  eax,WORD PTR [rbp-0x18]
  409793:	add    eax,0x1
  409796:	mov    rcx,QWORD PTR [rbp-0x10]
  40979a:	mov    WORD PTR [rcx+0x10],ax
  40979e:	mov    rax,QWORD PTR [rbp-0x10]
  4097a2:	mov    rax,QWORD PTR [rax+0x18]
  4097a6:	mov    ecx,DWORD PTR [rbp-0x1c]
  4097a9:	mov    edx,ecx
  4097ab:	add    rax,rdx
  4097ae:	mov    QWORD PTR [rbp-0x8],rax
  4097b2:	mov    rax,QWORD PTR [rbp-0x8]
  4097b6:	add    rsp,0x20
  4097ba:	pop    rbp
  4097bb:	ret    
  4097bc:	nop    DWORD PTR [rax+0x0]

00000000004097c0 <flatcc_builder_table_edit@@Base>:
  4097c0:	push   rbp
  4097c1:	mov    rbp,rsp
  4097c4:	sub    rsp,0x10
  4097c8:	mov    QWORD PTR [rbp-0x8],rdi
  4097cc:	mov    QWORD PTR [rbp-0x10],rsi
  4097d0:	mov    rax,QWORD PTR [rbp-0x8]
  4097d4:	mov    rax,QWORD PTR [rax+0x30]
  4097d8:	movzx  ecx,WORD PTR [rax+0xe]
  4097dc:	cmp    ecx,0x3
  4097df:	jne    4097ea <flatcc_builder_table_edit@@Base+0x2a>
  4097e5:	jmp    409809 <flatcc_builder_table_edit@@Base+0x49>
  4097ea:	lea    rdi,[rip+0x5420]        # 40ec11 <flatcc_builder_padding_base@@Base+0xa41>
  4097f1:	lea    rsi,[rip+0x4bea]        # 40e3e2 <flatcc_builder_padding_base@@Base+0x212>
  4097f8:	mov    edx,0x702
  4097fd:	lea    rcx,[rip+0x5ac5]        # 40f2c9 <flatcc_builder_padding_base@@Base+0x10f9>
  409804:	call   403060 <__assert_fail@plt>
  409809:	xor    eax,eax
  40980b:	mov    ecx,eax
  40980d:	mov    rdx,QWORD PTR [rbp-0x8]
  409811:	mov    rdx,QWORD PTR [rdx+0x18]
  409815:	mov    rsi,QWORD PTR [rbp-0x8]
  409819:	mov    eax,DWORD PTR [rsi+0x20]
  40981c:	mov    esi,eax
  40981e:	add    rdx,rsi
  409821:	sub    rcx,QWORD PTR [rbp-0x10]
  409825:	add    rdx,rcx
  409828:	mov    rax,rdx
  40982b:	add    rsp,0x10
  40982f:	pop    rbp
  409830:	ret    
  409831:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40983b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000409840 <flatcc_builder_table_add_copy@@Base>:
  409840:	push   rbp
  409841:	mov    rbp,rsp
  409844:	sub    rsp,0x30
  409848:	mov    QWORD PTR [rbp-0x8],rdi
  40984c:	mov    DWORD PTR [rbp-0xc],esi
  40984f:	mov    QWORD PTR [rbp-0x18],rdx
  409853:	mov    QWORD PTR [rbp-0x20],rcx
  409857:	mov    WORD PTR [rbp-0x22],r8w
  40985c:	mov    rdi,QWORD PTR [rbp-0x8]
  409860:	mov    esi,DWORD PTR [rbp-0xc]
  409863:	mov    rdx,QWORD PTR [rbp-0x20]
  409867:	movzx  ecx,WORD PTR [rbp-0x22]
  40986b:	call   4089c0 <flatcc_builder_table_add@@Base>
  409870:	mov    QWORD PTR [rbp-0x30],rax
  409874:	cmp    rax,0x0
  409878:	je     40988f <flatcc_builder_table_add_copy@@Base+0x4f>
  40987e:	mov    rdi,QWORD PTR [rbp-0x30]
  409882:	mov    rsi,QWORD PTR [rbp-0x18]
  409886:	mov    rdx,QWORD PTR [rbp-0x20]
  40988a:	call   4030a0 <memcpy@plt>
  40988f:	mov    rax,QWORD PTR [rbp-0x30]
  409893:	add    rsp,0x30
  409897:	pop    rbp
  409898:	ret    
  409899:	nop    DWORD PTR [rax+0x0]
  4098a0:	push   rbp
  4098a1:	mov    rbp,rsp
  4098a4:	sub    rsp,0x20
  4098a8:	mov    QWORD PTR [rbp-0x10],rdi
  4098ac:	mov    WORD PTR [rbp-0x12],si
  4098b0:	mov    rax,QWORD PTR [rbp-0x10]
  4098b4:	mov    ecx,DWORD PTR [rax+0x20]
  4098b7:	mov    eax,ecx
  4098b9:	add    rax,0x4
  4098bf:	sub    rax,0x1
  4098c5:	and    rax,0xfffffffffffffffc
  4098cb:	mov    DWORD PTR [rbp-0x18],eax
  4098ce:	mov    eax,DWORD PTR [rbp-0x18]
  4098d1:	mov    edx,eax
  4098d3:	add    rdx,0x4
  4098da:	mov    rdi,QWORD PTR [rbp-0x10]
  4098de:	mov    DWORD PTR [rdi+0x20],edx
  4098e1:	mov    rdi,QWORD PTR [rbp-0x10]
  4098e5:	cmp    edx,DWORD PTR [rdi+0x24]
  4098e8:	jbe    409920 <flatcc_builder_table_add_copy@@Base+0xe0>
  4098ee:	mov    rdi,QWORD PTR [rbp-0x10]
  4098f2:	mov    rax,QWORD PTR [rbp-0x10]
  4098f6:	mov    ecx,DWORD PTR [rax+0x20]
  4098f9:	mov    esi,ecx
  4098fb:	mov    edx,0xfffc
  409900:	call   40a0d0 <flatcc_builder_get_emit_context@@Base+0x50>
  409905:	cmp    eax,0x0
  409908:	je     40991b <flatcc_builder_table_add_copy@@Base+0xdb>
  40990e:	mov    QWORD PTR [rbp-0x8],0x0
  409916:	jmp    40998f <flatcc_builder_table_add_copy@@Base+0x14f>
  40991b:	jmp    409920 <flatcc_builder_table_add_copy@@Base+0xe0>
  409920:	mov    eax,DWORD PTR [rbp-0x18]
  409923:	mov    ecx,eax
  409925:	add    rcx,0x4
  40992c:	mov    rdx,QWORD PTR [rbp-0x10]
  409930:	mov    rdx,QWORD PTR [rdx+0x8]
  409934:	movzx  eax,WORD PTR [rbp-0x12]
  409938:	mov    esi,eax
  40993a:	mov    WORD PTR [rdx+rsi*2],cx
  40993e:	movzx  eax,WORD PTR [rbp-0x12]
  409942:	mov    rdx,QWORD PTR [rbp-0x10]
  409946:	movzx  edi,WORD PTR [rdx+0x10]
  40994a:	cmp    eax,edi
  40994c:	jl     409961 <flatcc_builder_table_add_copy@@Base+0x121>
  409952:	movzx  eax,WORD PTR [rbp-0x12]
  409956:	add    eax,0x1
  409959:	mov    rcx,QWORD PTR [rbp-0x10]
  40995d:	mov    WORD PTR [rcx+0x10],ax
  409961:	mov    eax,DWORD PTR [rbp-0x18]
  409964:	mov    rcx,QWORD PTR [rbp-0x10]
  409968:	mov    rdx,QWORD PTR [rcx]
  40996b:	mov    rsi,rdx
  40996e:	add    rsi,0x2
  409975:	mov    QWORD PTR [rcx],rsi
  409978:	mov    WORD PTR [rdx],ax
  40997b:	mov    rcx,QWORD PTR [rbp-0x10]
  40997f:	mov    rcx,QWORD PTR [rcx+0x18]
  409983:	mov    edi,DWORD PTR [rbp-0x18]
  409986:	mov    edx,edi
  409988:	add    rcx,rdx
  40998b:	mov    QWORD PTR [rbp-0x8],rcx
  40998f:	mov    rax,QWORD PTR [rbp-0x8]
  409993:	add    rsp,0x20
  409997:	pop    rbp
  409998:	ret    
  409999:	nop    DWORD PTR [rax+0x0]

00000000004099a0 <flatcc_builder_push_buffer_alignment@@Base>:
  4099a0:	push   rbp
  4099a1:	mov    rbp,rsp
  4099a4:	mov    QWORD PTR [rbp-0x8],rdi
  4099a8:	mov    rax,QWORD PTR [rbp-0x8]
  4099ac:	mov    cx,WORD PTR [rax+0xe8]
  4099b3:	mov    WORD PTR [rbp-0xa],cx
  4099b7:	mov    rax,QWORD PTR [rbp-0x8]
  4099bb:	mov    WORD PTR [rax+0xe8],0x4
  4099c4:	movzx  eax,WORD PTR [rbp-0xa]
  4099c8:	pop    rbp
  4099c9:	ret    
  4099ca:	nop    WORD PTR [rax+rax*1+0x0]

00000000004099d0 <flatcc_builder_pop_buffer_alignment@@Base>:
  4099d0:	push   rbp
  4099d1:	mov    rbp,rsp
  4099d4:	sub    rsp,0x10
  4099d8:	mov    QWORD PTR [rbp-0x8],rdi
  4099dc:	mov    WORD PTR [rbp-0xa],si
  4099e0:	mov    rdi,QWORD PTR [rbp-0x8]
  4099e4:	movzx  esi,WORD PTR [rbp-0xa]
  4099e8:	call   4058d0 <flatcc_builder_create_buffer@@Base+0x420>
  4099ed:	add    rsp,0x10
  4099f1:	pop    rbp
  4099f2:	ret    
  4099f3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4099fd:	nop    DWORD PTR [rax]

0000000000409a00 <flatcc_builder_get_buffer_alignment@@Base>:
  409a00:	push   rbp
  409a01:	mov    rbp,rsp
  409a04:	mov    QWORD PTR [rbp-0x8],rdi
  409a08:	mov    rax,QWORD PTR [rbp-0x8]
  409a0c:	movzx  eax,WORD PTR [rax+0xe8]
  409a13:	pop    rbp
  409a14:	ret    
  409a15:	nop    WORD PTR cs:[rax+rax*1+0x0]
  409a1f:	nop

0000000000409a20 <flatcc_builder_set_vtable_clustering@@Base>:
  409a20:	push   rbp
  409a21:	mov    rbp,rsp
  409a24:	mov    QWORD PTR [rbp-0x8],rdi
  409a28:	mov    DWORD PTR [rbp-0xc],esi
  409a2b:	cmp    DWORD PTR [rbp-0xc],0x0
  409a2f:	setne  al
  409a32:	xor    al,0xff
  409a34:	and    al,0x1
  409a36:	movzx  ecx,al
  409a39:	mov    rdx,QWORD PTR [rbp-0x8]
  409a3d:	mov    DWORD PTR [rdx+0x124],ecx
  409a43:	pop    rbp
  409a44:	ret    
  409a45:	nop    WORD PTR cs:[rax+rax*1+0x0]
  409a4f:	nop

0000000000409a50 <flatcc_builder_set_block_align@@Base>:
  409a50:	push   rbp
  409a51:	mov    rbp,rsp
  409a54:	mov    QWORD PTR [rbp-0x8],rdi
  409a58:	mov    WORD PTR [rbp-0xa],si
  409a5c:	mov    ax,WORD PTR [rbp-0xa]
  409a60:	mov    rcx,QWORD PTR [rbp-0x8]
  409a64:	mov    WORD PTR [rcx+0xec],ax
  409a6b:	pop    rbp
  409a6c:	ret    
  409a6d:	nop    DWORD PTR [rax]

0000000000409a70 <flatcc_builder_get_level@@Base>:
  409a70:	push   rbp
  409a71:	mov    rbp,rsp
  409a74:	mov    QWORD PTR [rbp-0x8],rdi
  409a78:	mov    rax,QWORD PTR [rbp-0x8]
  409a7c:	mov    eax,DWORD PTR [rax+0x104]
  409a82:	pop    rbp
  409a83:	ret    
  409a84:	nop    WORD PTR cs:[rax+rax*1+0x0]
  409a8e:	xchg   ax,ax

0000000000409a90 <flatcc_builder_set_max_level@@Base>:
  409a90:	push   rbp
  409a91:	mov    rbp,rsp
  409a94:	mov    QWORD PTR [rbp-0x8],rdi
  409a98:	mov    DWORD PTR [rbp-0xc],esi
  409a9b:	mov    eax,DWORD PTR [rbp-0xc]
  409a9e:	mov    rcx,QWORD PTR [rbp-0x8]
  409aa2:	mov    DWORD PTR [rcx+0x120],eax
  409aa8:	mov    rcx,QWORD PTR [rbp-0x8]
  409aac:	mov    eax,DWORD PTR [rcx+0x108]
  409ab2:	mov    rcx,QWORD PTR [rbp-0x8]
  409ab6:	cmp    eax,DWORD PTR [rcx+0x120]
  409abc:	jge    409ad6 <flatcc_builder_set_max_level@@Base+0x46>
  409ac2:	mov    rax,QWORD PTR [rbp-0x8]
  409ac6:	mov    ecx,DWORD PTR [rax+0x120]
  409acc:	mov    rax,QWORD PTR [rbp-0x8]
  409ad0:	mov    DWORD PTR [rax+0x108],ecx
  409ad6:	pop    rbp
  409ad7:	ret    
  409ad8:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000409ae0 <flatcc_builder_get_buffer_size@@Base>:
  409ae0:	push   rbp
  409ae1:	mov    rbp,rsp
  409ae4:	mov    QWORD PTR [rbp-0x8],rdi
  409ae8:	mov    rax,QWORD PTR [rbp-0x8]
  409aec:	mov    ecx,DWORD PTR [rax+0xf4]
  409af2:	mov    rax,QWORD PTR [rbp-0x8]
  409af6:	sub    ecx,DWORD PTR [rax+0xf0]
  409afc:	movsxd rax,ecx
  409aff:	pop    rbp
  409b00:	ret    
  409b01:	nop    WORD PTR cs:[rax+rax*1+0x0]
  409b0b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000409b10 <flatcc_builder_get_buffer_start@@Base>:
  409b10:	push   rbp
  409b11:	mov    rbp,rsp
  409b14:	mov    QWORD PTR [rbp-0x8],rdi
  409b18:	mov    rax,QWORD PTR [rbp-0x8]
  409b1c:	mov    eax,DWORD PTR [rax+0xf0]
  409b22:	pop    rbp
  409b23:	ret    
  409b24:	nop    WORD PTR cs:[rax+rax*1+0x0]
  409b2e:	xchg   ax,ax

0000000000409b30 <flatcc_builder_get_buffer_end@@Base>:
  409b30:	push   rbp
  409b31:	mov    rbp,rsp
  409b34:	mov    QWORD PTR [rbp-0x8],rdi
  409b38:	mov    rax,QWORD PTR [rbp-0x8]
  409b3c:	mov    eax,DWORD PTR [rax+0xf4]
  409b42:	pop    rbp
  409b43:	ret    
  409b44:	nop    WORD PTR cs:[rax+rax*1+0x0]
  409b4e:	xchg   ax,ax

0000000000409b50 <flatcc_builder_set_vtable_cache_limit@@Base>:
  409b50:	push   rbp
  409b51:	mov    rbp,rsp
  409b54:	mov    QWORD PTR [rbp-0x8],rdi
  409b58:	mov    QWORD PTR [rbp-0x10],rsi
  409b5c:	mov    rax,QWORD PTR [rbp-0x10]
  409b60:	mov    rcx,QWORD PTR [rbp-0x8]
  409b64:	mov    QWORD PTR [rcx+0x118],rax
  409b6b:	pop    rbp
  409b6c:	ret    
  409b6d:	nop    DWORD PTR [rax]

0000000000409b70 <flatcc_builder_set_identifier@@Base>:
  409b70:	push   rbp
  409b71:	mov    rbp,rsp
  409b74:	mov    QWORD PTR [rbp-0x8],rdi
  409b78:	mov    QWORD PTR [rbp-0x10],rsi
  409b7c:	mov    rax,QWORD PTR [rbp-0x8]
  409b80:	add    rax,0x110
  409b86:	cmp    QWORD PTR [rbp-0x10],0x0
  409b8b:	mov    QWORD PTR [rbp-0x18],rax
  409b8f:	je     409ba2 <flatcc_builder_set_identifier@@Base+0x32>
  409b95:	mov    rax,QWORD PTR [rbp-0x10]
  409b99:	mov    QWORD PTR [rbp-0x20],rax
  409b9d:	jmp    409bb2 <flatcc_builder_set_identifier@@Base+0x42>
  409ba2:	lea    rax,[rip+0x4627]        # 40e1d0 <flatcc_builder_padding_base@@Base>
  409ba9:	mov    QWORD PTR [rbp-0x20],rax
  409bad:	jmp    409bb2 <flatcc_builder_set_identifier@@Base+0x42>
  409bb2:	mov    rax,QWORD PTR [rbp-0x20]
  409bb6:	mov    ecx,DWORD PTR [rax]
  409bb8:	mov    rax,QWORD PTR [rbp-0x18]
  409bbc:	mov    DWORD PTR [rax],ecx
  409bbe:	pop    rbp
  409bbf:	ret    

0000000000409bc0 <flatcc_builder_get_type@@Base>:
  409bc0:	push   rbp
  409bc1:	mov    rbp,rsp
  409bc4:	mov    QWORD PTR [rbp-0x8],rdi
  409bc8:	mov    rax,QWORD PTR [rbp-0x8]
  409bcc:	cmp    QWORD PTR [rax+0x30],0x0
  409bd1:	je     409beb <flatcc_builder_get_type@@Base+0x2b>
  409bd7:	mov    rax,QWORD PTR [rbp-0x8]
  409bdb:	mov    rax,QWORD PTR [rax+0x30]
  409bdf:	movzx  ecx,WORD PTR [rax+0xe]
  409be3:	mov    DWORD PTR [rbp-0xc],ecx
  409be6:	jmp    409bf5 <flatcc_builder_get_type@@Base+0x35>
  409beb:	xor    eax,eax
  409bed:	mov    DWORD PTR [rbp-0xc],eax
  409bf0:	jmp    409bf5 <flatcc_builder_get_type@@Base+0x35>
  409bf5:	mov    eax,DWORD PTR [rbp-0xc]
  409bf8:	pop    rbp
  409bf9:	ret    
  409bfa:	nop    WORD PTR [rax+rax*1+0x0]

0000000000409c00 <flatcc_builder_get_type_at@@Base>:
  409c00:	push   rbp
  409c01:	mov    rbp,rsp
  409c04:	mov    QWORD PTR [rbp-0x10],rdi
  409c08:	mov    DWORD PTR [rbp-0x14],esi
  409c0b:	cmp    DWORD PTR [rbp-0x14],0x1
  409c0f:	jl     409c28 <flatcc_builder_get_type_at@@Base+0x28>
  409c15:	mov    eax,DWORD PTR [rbp-0x14]
  409c18:	mov    rcx,QWORD PTR [rbp-0x10]
  409c1c:	cmp    eax,DWORD PTR [rcx+0x104]
  409c22:	jle    409c34 <flatcc_builder_get_type_at@@Base+0x34>
  409c28:	mov    DWORD PTR [rbp-0x4],0x0
  409c2f:	jmp    409c5d <flatcc_builder_get_type_at@@Base+0x5d>
  409c34:	mov    rax,QWORD PTR [rbp-0x10]
  409c38:	mov    rax,QWORD PTR [rax+0x30]
  409c3c:	mov    ecx,DWORD PTR [rbp-0x14]
  409c3f:	mov    rdx,QWORD PTR [rbp-0x10]
  409c43:	sub    ecx,DWORD PTR [rdx+0x104]
  409c49:	movsxd rdx,ecx
  409c4c:	imul   rdx,rdx,0x24
  409c53:	add    rax,rdx
  409c56:	movzx  ecx,WORD PTR [rax+0xe]
  409c5a:	mov    DWORD PTR [rbp-0x4],ecx
  409c5d:	mov    eax,DWORD PTR [rbp-0x4]
  409c60:	pop    rbp
  409c61:	ret    
  409c62:	nop    WORD PTR cs:[rax+rax*1+0x0]
  409c6c:	nop    DWORD PTR [rax+0x0]

0000000000409c70 <flatcc_builder_get_direct_buffer@@Base>:
  409c70:	push   rbp
  409c71:	mov    rbp,rsp
  409c74:	sub    rsp,0x20
  409c78:	mov    QWORD PTR [rbp-0x10],rdi
  409c7c:	mov    QWORD PTR [rbp-0x18],rsi
  409c80:	mov    rax,QWORD PTR [rbp-0x10]
  409c84:	cmp    DWORD PTR [rax+0x128],0x0
  409c8b:	je     409cb0 <flatcc_builder_get_direct_buffer@@Base+0x40>
  409c91:	mov    rax,QWORD PTR [rbp-0x10]
  409c95:	add    rax,0x130
  409c9b:	mov    rsi,QWORD PTR [rbp-0x18]
  409c9f:	mov    rdi,rax
  409ca2:	call   409ce0 <flatcc_builder_get_direct_buffer@@Base+0x70>
  409ca7:	mov    QWORD PTR [rbp-0x8],rax
  409cab:	jmp    409cd3 <flatcc_builder_get_direct_buffer@@Base+0x63>
  409cb0:	cmp    QWORD PTR [rbp-0x18],0x0
  409cb5:	je     409cc6 <flatcc_builder_get_direct_buffer@@Base+0x56>
  409cbb:	mov    rax,QWORD PTR [rbp-0x18]
  409cbf:	mov    QWORD PTR [rax],0x0
  409cc6:	jmp    409ccb <flatcc_builder_get_direct_buffer@@Base+0x5b>
  409ccb:	mov    QWORD PTR [rbp-0x8],0x0
  409cd3:	mov    rax,QWORD PTR [rbp-0x8]
  409cd7:	add    rsp,0x20
  409cdb:	pop    rbp
  409cdc:	ret    
  409cdd:	nop    DWORD PTR [rax]
  409ce0:	push   rbp
  409ce1:	mov    rbp,rsp
  409ce4:	mov    QWORD PTR [rbp-0x10],rdi
  409ce8:	mov    QWORD PTR [rbp-0x18],rsi
  409cec:	mov    rax,QWORD PTR [rbp-0x10]
  409cf0:	mov    rax,QWORD PTR [rax]
  409cf3:	mov    rcx,QWORD PTR [rbp-0x10]
  409cf7:	cmp    rax,QWORD PTR [rcx+0x8]
  409cfb:	jne    409d2c <flatcc_builder_get_direct_buffer@@Base+0xbc>
  409d01:	cmp    QWORD PTR [rbp-0x18],0x0
  409d06:	je     409d1b <flatcc_builder_get_direct_buffer@@Base+0xab>
  409d0c:	mov    rax,QWORD PTR [rbp-0x10]
  409d10:	mov    rax,QWORD PTR [rax+0x30]
  409d14:	mov    rcx,QWORD PTR [rbp-0x18]
  409d18:	mov    QWORD PTR [rcx],rax
  409d1b:	mov    rax,QWORD PTR [rbp-0x10]
  409d1f:	mov    rax,QWORD PTR [rax+0x10]
  409d23:	mov    QWORD PTR [rbp-0x8],rax
  409d27:	jmp    409d4a <flatcc_builder_get_direct_buffer@@Base+0xda>
  409d2c:	cmp    QWORD PTR [rbp-0x18],0x0
  409d31:	je     409d42 <flatcc_builder_get_direct_buffer@@Base+0xd2>
  409d37:	mov    rax,QWORD PTR [rbp-0x18]
  409d3b:	mov    QWORD PTR [rax],0x0
  409d42:	mov    QWORD PTR [rbp-0x8],0x0
  409d4a:	mov    rax,QWORD PTR [rbp-0x8]
  409d4e:	pop    rbp
  409d4f:	ret    

0000000000409d50 <flatcc_builder_copy_buffer@@Base>:
  409d50:	push   rbp
  409d51:	mov    rbp,rsp
  409d54:	sub    rsp,0x20
  409d58:	mov    QWORD PTR [rbp-0x10],rdi
  409d5c:	mov    QWORD PTR [rbp-0x18],rsi
  409d60:	mov    QWORD PTR [rbp-0x20],rdx
  409d64:	mov    rax,QWORD PTR [rbp-0x10]
  409d68:	cmp    DWORD PTR [rax+0x128],0x0
  409d6f:	jne    409d82 <flatcc_builder_copy_buffer@@Base+0x32>
  409d75:	mov    QWORD PTR [rbp-0x8],0x0
  409d7d:	jmp    409dd7 <flatcc_builder_copy_buffer@@Base+0x87>
  409d82:	mov    rax,QWORD PTR [rbp-0x10]
  409d86:	add    rax,0x130
  409d8c:	mov    rsi,QWORD PTR [rbp-0x18]
  409d90:	mov    rdx,QWORD PTR [rbp-0x20]
  409d94:	mov    rdi,rax
  409d97:	call   40a9e0 <flatcc_emitter_copy_buffer@@Base>
  409d9c:	mov    QWORD PTR [rbp-0x18],rax
  409da0:	cmp    QWORD PTR [rbp-0x18],0x0
  409da5:	je     409db0 <flatcc_builder_copy_buffer@@Base+0x60>
  409dab:	jmp    409dcf <flatcc_builder_copy_buffer@@Base+0x7f>
  409db0:	lea    rdi,[rip+0x4899]        # 40e650 <flatcc_builder_padding_base@@Base+0x480>
  409db7:	lea    rsi,[rip+0x4624]        # 40e3e2 <flatcc_builder_padding_base@@Base+0x212>
  409dbe:	mov    edx,0x786
  409dc3:	lea    rcx,[rip+0x558a]        # 40f354 <flatcc_builder_padding_base@@Base+0x1184>
  409dca:	call   403060 <__assert_fail@plt>
  409dcf:	mov    rax,QWORD PTR [rbp-0x18]
  409dd3:	mov    QWORD PTR [rbp-0x8],rax
  409dd7:	mov    rax,QWORD PTR [rbp-0x8]
  409ddb:	add    rsp,0x20
  409ddf:	pop    rbp
  409de0:	ret    
  409de1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  409deb:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000409df0 <flatcc_builder_finalize_buffer@@Base>:
  409df0:	push   rbp
  409df1:	mov    rbp,rsp
  409df4:	sub    rsp,0x20
  409df8:	mov    QWORD PTR [rbp-0x8],rdi
  409dfc:	mov    QWORD PTR [rbp-0x10],rsi
  409e00:	mov    rdi,QWORD PTR [rbp-0x8]
  409e04:	call   409ae0 <flatcc_builder_get_buffer_size@@Base>
  409e09:	mov    QWORD PTR [rbp-0x20],rax
  409e0d:	cmp    QWORD PTR [rbp-0x10],0x0
  409e12:	je     409e23 <flatcc_builder_finalize_buffer@@Base+0x33>
  409e18:	mov    rax,QWORD PTR [rbp-0x20]
  409e1c:	mov    rcx,QWORD PTR [rbp-0x10]
  409e20:	mov    QWORD PTR [rcx],rax
  409e23:	mov    rdi,QWORD PTR [rbp-0x20]
  409e27:	call   4030b0 <malloc@plt>
  409e2c:	mov    QWORD PTR [rbp-0x18],rax
  409e30:	cmp    QWORD PTR [rbp-0x18],0x0
  409e35:	jne    409e5a <flatcc_builder_finalize_buffer@@Base+0x6a>
  409e3b:	lea    rdi,[rip+0x5760]        # 40f5a2 <flatcc_builder_padding_base@@Base+0x13d2>
  409e42:	lea    rsi,[rip+0x4599]        # 40e3e2 <flatcc_builder_padding_base@@Base+0x212>
  409e49:	mov    edx,0x798
  409e4e:	lea    rcx,[rip+0x5544]        # 40f399 <flatcc_builder_padding_base@@Base+0x11c9>
  409e55:	call   403060 <__assert_fail@plt>
  409e5a:	mov    rdi,QWORD PTR [rbp-0x8]
  409e5e:	mov    rsi,QWORD PTR [rbp-0x18]
  409e62:	mov    rdx,QWORD PTR [rbp-0x20]
  409e66:	call   409d50 <flatcc_builder_copy_buffer@@Base>
  409e6b:	cmp    rax,0x0
  409e6f:	jne    409e94 <flatcc_builder_finalize_buffer@@Base+0xa4>
  409e75:	lea    rdi,[rip+0x5726]        # 40f5a2 <flatcc_builder_padding_base@@Base+0x13d2>
  409e7c:	lea    rsi,[rip+0x455f]        # 40e3e2 <flatcc_builder_padding_base@@Base+0x212>
  409e83:	mov    edx,0x79c
  409e88:	lea    rcx,[rip+0x550a]        # 40f399 <flatcc_builder_padding_base@@Base+0x11c9>
  409e8f:	call   403060 <__assert_fail@plt>
  409e94:	jmp    409e99 <flatcc_builder_finalize_buffer@@Base+0xa9>
  409e99:	cmp    QWORD PTR [rbp-0x18],0x0
  409e9e:	jne    409eba <flatcc_builder_finalize_buffer@@Base+0xca>
  409ea4:	cmp    QWORD PTR [rbp-0x10],0x0
  409ea9:	je     409eba <flatcc_builder_finalize_buffer@@Base+0xca>
  409eaf:	mov    rax,QWORD PTR [rbp-0x10]
  409eb3:	mov    QWORD PTR [rax],0x0
  409eba:	mov    rax,QWORD PTR [rbp-0x18]
  409ebe:	add    rsp,0x20
  409ec2:	pop    rbp
  409ec3:	ret    
  409ec4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  409ece:	xchg   ax,ax

0000000000409ed0 <flatcc_builder_finalize_aligned_buffer@@Base>:
  409ed0:	push   rbp
  409ed1:	mov    rbp,rsp
  409ed4:	sub    rsp,0x30
  409ed8:	mov    QWORD PTR [rbp-0x8],rdi
  409edc:	mov    QWORD PTR [rbp-0x10],rsi
  409ee0:	mov    rdi,QWORD PTR [rbp-0x8]
  409ee4:	call   409ae0 <flatcc_builder_get_buffer_size@@Base>
  409ee9:	mov    QWORD PTR [rbp-0x28],rax
  409eed:	cmp    QWORD PTR [rbp-0x10],0x0
  409ef2:	je     409f03 <flatcc_builder_finalize_aligned_buffer@@Base+0x33>
  409ef8:	mov    rax,QWORD PTR [rbp-0x28]
  409efc:	mov    rcx,QWORD PTR [rbp-0x10]
  409f00:	mov    QWORD PTR [rcx],rax
  409f03:	mov    rdi,QWORD PTR [rbp-0x8]
  409f07:	call   409a00 <flatcc_builder_get_buffer_alignment@@Base>
  409f0c:	movzx  ecx,ax
  409f0f:	mov    edx,ecx
  409f11:	mov    QWORD PTR [rbp-0x20],rdx
  409f15:	mov    rdx,QWORD PTR [rbp-0x28]
  409f19:	add    rdx,QWORD PTR [rbp-0x20]
  409f1d:	sub    rdx,0x1
  409f24:	mov    rsi,QWORD PTR [rbp-0x20]
  409f28:	sub    rsi,0x1
  409f2f:	xor    rsi,0xffffffffffffffff
  409f36:	and    rdx,rsi
  409f39:	mov    QWORD PTR [rbp-0x28],rdx
  409f3d:	mov    rdi,QWORD PTR [rbp-0x20]
  409f41:	mov    rsi,QWORD PTR [rbp-0x28]
  409f45:	call   409fc0 <flatcc_builder_finalize_aligned_buffer@@Base+0xf0>
  409f4a:	mov    QWORD PTR [rbp-0x18],rax
  409f4e:	cmp    QWORD PTR [rbp-0x18],0x0
  409f53:	jne    409f5e <flatcc_builder_finalize_aligned_buffer@@Base+0x8e>
  409f59:	jmp    409f94 <flatcc_builder_finalize_aligned_buffer@@Base+0xc4>
  409f5e:	mov    rdi,QWORD PTR [rbp-0x8]
  409f62:	mov    rsi,QWORD PTR [rbp-0x18]
  409f66:	mov    rdx,QWORD PTR [rbp-0x28]
  409f6a:	call   409d50 <flatcc_builder_copy_buffer@@Base>
  409f6f:	cmp    rax,0x0
  409f73:	jne    409f8f <flatcc_builder_finalize_aligned_buffer@@Base+0xbf>
  409f79:	mov    rdi,QWORD PTR [rbp-0x18]
  409f7d:	call   403030 <free@plt>
  409f82:	mov    QWORD PTR [rbp-0x18],0x0
  409f8a:	jmp    409f94 <flatcc_builder_finalize_aligned_buffer@@Base+0xc4>
  409f8f:	jmp    409f94 <flatcc_builder_finalize_aligned_buffer@@Base+0xc4>
  409f94:	cmp    QWORD PTR [rbp-0x18],0x0
  409f99:	jne    409fb5 <flatcc_builder_finalize_aligned_buffer@@Base+0xe5>
  409f9f:	cmp    QWORD PTR [rbp-0x10],0x0
  409fa4:	je     409fb5 <flatcc_builder_finalize_aligned_buffer@@Base+0xe5>
  409faa:	mov    rax,QWORD PTR [rbp-0x10]
  409fae:	mov    QWORD PTR [rax],0x0
  409fb5:	mov    rax,QWORD PTR [rbp-0x18]
  409fb9:	add    rsp,0x30
  409fbd:	pop    rbp
  409fbe:	ret    
  409fbf:	nop
  409fc0:	push   rbp
  409fc1:	mov    rbp,rsp
  409fc4:	sub    rsp,0x20
  409fc8:	mov    QWORD PTR [rbp-0x8],rdi
  409fcc:	mov    QWORD PTR [rbp-0x10],rsi
  409fd0:	mov    QWORD PTR [rbp-0x20],0x0
  409fd8:	cmp    QWORD PTR [rbp-0x8],0x8
  409fdd:	jae    409feb <flatcc_builder_finalize_aligned_buffer@@Base+0x11b>
  409fe3:	mov    QWORD PTR [rbp-0x8],0x8
  409feb:	mov    rsi,QWORD PTR [rbp-0x8]
  409fef:	mov    rdx,QWORD PTR [rbp-0x10]
  409ff3:	lea    rdi,[rbp-0x20]
  409ff7:	call   4030d0 <posix_memalign@plt>
  409ffc:	mov    DWORD PTR [rbp-0x14],eax
  409fff:	cmp    DWORD PTR [rbp-0x14],0x0
  40a003:	je     40a025 <flatcc_builder_finalize_aligned_buffer@@Base+0x155>
  40a009:	cmp    QWORD PTR [rbp-0x20],0x0
  40a00e:	je     40a025 <flatcc_builder_finalize_aligned_buffer@@Base+0x155>
  40a014:	mov    rdi,QWORD PTR [rbp-0x20]
  40a018:	call   403030 <free@plt>
  40a01d:	mov    QWORD PTR [rbp-0x20],0x0
  40a025:	mov    rax,QWORD PTR [rbp-0x20]
  40a029:	add    rsp,0x20
  40a02d:	pop    rbp
  40a02e:	ret    
  40a02f:	nop

000000000040a030 <flatcc_builder_aligned_alloc@@Base>:
  40a030:	push   rbp
  40a031:	mov    rbp,rsp
  40a034:	sub    rsp,0x10
  40a038:	mov    QWORD PTR [rbp-0x8],rdi
  40a03c:	mov    QWORD PTR [rbp-0x10],rsi
  40a040:	mov    rdi,QWORD PTR [rbp-0x8]
  40a044:	mov    rsi,QWORD PTR [rbp-0x10]
  40a048:	call   409fc0 <flatcc_builder_finalize_aligned_buffer@@Base+0xf0>
  40a04d:	add    rsp,0x10
  40a051:	pop    rbp
  40a052:	ret    
  40a053:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40a05d:	nop    DWORD PTR [rax]

000000000040a060 <flatcc_builder_aligned_free@@Base>:
  40a060:	push   rbp
  40a061:	mov    rbp,rsp
  40a064:	sub    rsp,0x10
  40a068:	mov    QWORD PTR [rbp-0x8],rdi
  40a06c:	mov    rdi,QWORD PTR [rbp-0x8]
  40a070:	call   403030 <free@plt>
  40a075:	add    rsp,0x10
  40a079:	pop    rbp
  40a07a:	ret    
  40a07b:	nop    DWORD PTR [rax+rax*1+0x0]

000000000040a080 <flatcc_builder_get_emit_context@@Base>:
  40a080:	push   rbp
  40a081:	mov    rbp,rsp
  40a084:	mov    QWORD PTR [rbp-0x8],rdi
  40a088:	mov    rax,QWORD PTR [rbp-0x8]
  40a08c:	mov    rax,QWORD PTR [rax+0x38]
  40a090:	pop    rbp
  40a091:	ret    
  40a092:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40a09c:	nop    DWORD PTR [rax+0x0]
  40a0a0:	push   rbp
  40a0a1:	mov    rbp,rsp
  40a0a4:	mov    QWORD PTR [rbp-0x8],rdi
  40a0a8:	mov    WORD PTR [rbp-0xa],si
  40a0ac:	mov    rax,QWORD PTR [rbp-0x8]
  40a0b0:	mov    ecx,DWORD PTR [rax+0xf4]
  40a0b6:	movzx  edx,WORD PTR [rbp-0xa]
  40a0ba:	sub    edx,0x1
  40a0bd:	and    ecx,edx
  40a0bf:	mov    eax,ecx
  40a0c1:	pop    rbp
  40a0c2:	ret    
  40a0c3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40a0cd:	nop    DWORD PTR [rax]
  40a0d0:	push   rbp
  40a0d1:	mov    rbp,rsp
  40a0d4:	sub    rsp,0x30
  40a0d8:	mov    QWORD PTR [rbp-0x10],rdi
  40a0dc:	mov    QWORD PTR [rbp-0x18],rsi
  40a0e0:	mov    DWORD PTR [rbp-0x1c],edx
  40a0e3:	mov    rax,QWORD PTR [rbp-0x10]
  40a0e7:	add    rax,0x58
  40a0ed:	add    rax,0x10
  40a0f3:	mov    QWORD PTR [rbp-0x28],rax
  40a0f7:	mov    rax,QWORD PTR [rbp-0x10]
  40a0fb:	mov    rax,QWORD PTR [rax+0x50]
  40a0ff:	mov    rcx,QWORD PTR [rbp-0x10]
  40a103:	mov    rdi,QWORD PTR [rcx+0x40]
  40a107:	mov    rsi,QWORD PTR [rbp-0x28]
  40a10b:	mov    rcx,QWORD PTR [rbp-0x10]
  40a10f:	mov    edx,DWORD PTR [rcx+0x28]
  40a112:	mov    ecx,edx
  40a114:	add    rcx,QWORD PTR [rbp-0x18]
  40a118:	mov    rdx,rcx
  40a11b:	mov    r8d,0x1
  40a121:	mov    ecx,r8d
  40a124:	call   rax
  40a126:	cmp    eax,0x0
  40a129:	je     40a13b <flatcc_builder_get_emit_context@@Base+0xbb>
  40a12f:	mov    DWORD PTR [rbp-0x4],0xffffffff
  40a136:	jmp    40a14e <flatcc_builder_get_emit_context@@Base+0xce>
  40a13b:	mov    rdi,QWORD PTR [rbp-0x10]
  40a13f:	mov    esi,DWORD PTR [rbp-0x1c]
  40a142:	call   406070 <flatcc_builder_start_struct@@Base+0x70>
  40a147:	mov    DWORD PTR [rbp-0x4],0x0
  40a14e:	mov    eax,DWORD PTR [rbp-0x4]
  40a151:	add    rsp,0x30
  40a155:	pop    rbp
  40a156:	ret    
  40a157:	nop    WORD PTR [rax+rax*1+0x0]
  40a160:	push   rbp
  40a161:	mov    rbp,rsp
  40a164:	sub    rsp,0x30
  40a168:	mov    QWORD PTR [rbp-0x10],rdi
  40a16c:	mov    rax,QWORD PTR [rbp-0x10]
  40a170:	add    rax,0x58
  40a176:	add    rax,0x50
  40a17c:	mov    QWORD PTR [rbp-0x18],rax
  40a180:	mov    rax,QWORD PTR [rbp-0x10]
  40a184:	cmp    DWORD PTR [rax+0xe4],0x0
  40a18b:	jne    40a196 <flatcc_builder_get_emit_context@@Base+0x116>
  40a191:	jmp    40a1b5 <flatcc_builder_get_emit_context@@Base+0x135>
  40a196:	lea    rdi,[rip+0x53c9]        # 40f566 <flatcc_builder_padding_base@@Base+0x1396>
  40a19d:	lea    rsi,[rip+0x423e]        # 40e3e2 <flatcc_builder_padding_base@@Base+0x212>
  40a1a4:	mov    edx,0x156
  40a1a9:	lea    rcx,[rip+0x53c5]        # 40f575 <flatcc_builder_padding_base@@Base+0x13a5>
  40a1b0:	call   403060 <__assert_fail@plt>
  40a1b5:	xor    r8d,r8d
  40a1b8:	mov    rdi,QWORD PTR [rbp-0x10]
  40a1bc:	mov    rax,QWORD PTR [rbp-0x10]
  40a1c0:	mov    ecx,DWORD PTR [rax+0xe4]
  40a1c6:	mov    edx,ecx
  40a1c8:	mov    esi,0x6
  40a1cd:	mov    ecx,0x10
  40a1d2:	call   404c60 <flatcc_builder_enter_user_frame_ptr@@Base+0xf0>
  40a1d7:	cmp    rax,0x0
  40a1db:	jne    40a1ed <flatcc_builder_get_emit_context@@Base+0x16d>
  40a1e1:	mov    DWORD PTR [rbp-0x4],0xffffffff
  40a1e8:	jmp    40a2c1 <flatcc_builder_get_emit_context@@Base+0x241>
  40a1ed:	mov    rax,QWORD PTR [rbp-0x10]
  40a1f1:	mov    DWORD PTR [rax+0xe4],0x10
  40a1fb:	mov    QWORD PTR [rbp-0x20],0x100
  40a203:	mov    rax,QWORD PTR [rbp-0x10]
  40a207:	mov    rax,QWORD PTR [rax+0x50]
  40a20b:	mov    rcx,QWORD PTR [rbp-0x10]
  40a20f:	mov    rdi,QWORD PTR [rcx+0x40]
  40a213:	mov    rsi,QWORD PTR [rbp-0x18]
  40a217:	mov    rdx,QWORD PTR [rbp-0x20]
  40a21b:	mov    ecx,0x1
  40a220:	mov    r8d,0x5
  40a226:	call   rax
  40a228:	cmp    eax,0x0
  40a22b:	je     40a23d <flatcc_builder_get_emit_context@@Base+0x1bd>
  40a231:	mov    DWORD PTR [rbp-0x4],0xffffffff
  40a238:	jmp    40a2c1 <flatcc_builder_get_emit_context@@Base+0x241>
  40a23d:	jmp    40a242 <flatcc_builder_get_emit_context@@Base+0x1c2>
  40a242:	mov    rax,QWORD PTR [rbp-0x20]
  40a246:	shl    rax,0x1
  40a24a:	mov    rcx,QWORD PTR [rbp-0x18]
  40a24e:	cmp    rax,QWORD PTR [rcx+0x8]
  40a252:	ja     40a269 <flatcc_builder_get_emit_context@@Base+0x1e9>
  40a258:	mov    rax,QWORD PTR [rbp-0x20]
  40a25c:	shl    rax,0x1
  40a260:	mov    QWORD PTR [rbp-0x20],rax
  40a264:	jmp    40a242 <flatcc_builder_get_emit_context@@Base+0x1c2>
  40a269:	mov    rax,QWORD PTR [rbp-0x20]
  40a26d:	shr    rax,0x2
  40a271:	mov    QWORD PTR [rbp-0x20],rax
  40a275:	mov    QWORD PTR [rbp-0x28],0x0
  40a27d:	mov    rcx,QWORD PTR [rbp-0x28]
  40a281:	mov    eax,0x1
  40a286:	shl    rax,cl
  40a289:	cmp    rax,QWORD PTR [rbp-0x20]
  40a28d:	jae    40a2ab <flatcc_builder_get_emit_context@@Base+0x22b>
  40a293:	jmp    40a298 <flatcc_builder_get_emit_context@@Base+0x218>
  40a298:	mov    rax,QWORD PTR [rbp-0x28]
  40a29c:	add    rax,0x1
  40a2a2:	mov    QWORD PTR [rbp-0x28],rax
  40a2a6:	jmp    40a27d <flatcc_builder_get_emit_context@@Base+0x1fd>
  40a2ab:	mov    rax,QWORD PTR [rbp-0x28]
  40a2af:	mov    rcx,QWORD PTR [rbp-0x10]
  40a2b3:	mov    QWORD PTR [rcx+0xd8],rax
  40a2ba:	mov    DWORD PTR [rbp-0x4],0x0
  40a2c1:	mov    eax,DWORD PTR [rbp-0x4]
  40a2c4:	add    rsp,0x30
  40a2c8:	pop    rbp
  40a2c9:	ret    
  40a2ca:	nop    WORD PTR [rax+rax*1+0x0]

000000000040a2d0 <flatcc_emitter_recycle_page@@Base>:
  40a2d0:	push   rbp
  40a2d1:	mov    rbp,rsp
  40a2d4:	mov    QWORD PTR [rbp-0x10],rdi
  40a2d8:	mov    QWORD PTR [rbp-0x18],rsi
  40a2dc:	mov    rax,QWORD PTR [rbp-0x18]
  40a2e0:	mov    rcx,QWORD PTR [rbp-0x10]
  40a2e4:	cmp    rax,QWORD PTR [rcx]
  40a2e7:	je     40a2ff <flatcc_emitter_recycle_page@@Base+0x2f>
  40a2ed:	mov    rax,QWORD PTR [rbp-0x18]
  40a2f1:	mov    rcx,QWORD PTR [rbp-0x10]
  40a2f5:	cmp    rax,QWORD PTR [rcx+0x8]
  40a2f9:	jne    40a30b <flatcc_emitter_recycle_page@@Base+0x3b>
  40a2ff:	mov    DWORD PTR [rbp-0x4],0xffffffff
  40a306:	jmp    40a3a3 <flatcc_emitter_recycle_page@@Base+0xd3>
  40a30b:	mov    rax,QWORD PTR [rbp-0x18]
  40a30f:	mov    rax,QWORD PTR [rax+0xb88]
  40a316:	mov    rcx,QWORD PTR [rbp-0x18]
  40a31a:	mov    rcx,QWORD PTR [rcx+0xb80]
  40a321:	mov    QWORD PTR [rcx+0xb88],rax
  40a328:	mov    rax,QWORD PTR [rbp-0x18]
  40a32c:	mov    rax,QWORD PTR [rax+0xb80]
  40a333:	mov    rcx,QWORD PTR [rbp-0x18]
  40a337:	mov    rcx,QWORD PTR [rcx+0xb88]
  40a33e:	mov    QWORD PTR [rcx+0xb80],rax
  40a345:	mov    rax,QWORD PTR [rbp-0x10]
  40a349:	mov    rax,QWORD PTR [rax]
  40a34c:	mov    rax,QWORD PTR [rax+0xb88]
  40a353:	mov    rcx,QWORD PTR [rbp-0x18]
  40a357:	mov    QWORD PTR [rcx+0xb88],rax
  40a35e:	mov    rax,QWORD PTR [rbp-0x10]
  40a362:	mov    rax,QWORD PTR [rax]
  40a365:	mov    rcx,QWORD PTR [rbp-0x18]
  40a369:	mov    QWORD PTR [rcx+0xb80],rax
  40a370:	mov    rax,QWORD PTR [rbp-0x18]
  40a374:	mov    rcx,QWORD PTR [rbp-0x18]
  40a378:	mov    rcx,QWORD PTR [rcx+0xb88]
  40a37f:	mov    QWORD PTR [rcx+0xb80],rax
  40a386:	mov    rax,QWORD PTR [rbp-0x18]
  40a38a:	mov    rcx,QWORD PTR [rbp-0x18]
  40a38e:	mov    rcx,QWORD PTR [rcx+0xb80]
  40a395:	mov    QWORD PTR [rcx+0xb88],rax
  40a39c:	mov    DWORD PTR [rbp-0x4],0x0
  40a3a3:	mov    eax,DWORD PTR [rbp-0x4]
  40a3a6:	pop    rbp
  40a3a7:	ret    
  40a3a8:	nop    DWORD PTR [rax+rax*1+0x0]

000000000040a3b0 <flatcc_emitter_reset@@Base>:
  40a3b0:	push   rbp
  40a3b1:	mov    rbp,rsp
  40a3b4:	sub    rsp,0x20
  40a3b8:	mov    QWORD PTR [rbp-0x8],rdi
  40a3bc:	mov    rax,QWORD PTR [rbp-0x8]
  40a3c0:	mov    rax,QWORD PTR [rax]
  40a3c3:	mov    QWORD PTR [rbp-0x10],rax
  40a3c7:	mov    rax,QWORD PTR [rbp-0x8]
  40a3cb:	cmp    QWORD PTR [rax],0x0
  40a3cf:	jne    40a3da <flatcc_emitter_reset@@Base+0x2a>
  40a3d5:	jmp    40a548 <flatcc_emitter_reset@@Base+0x198>
  40a3da:	xor    eax,eax
  40a3dc:	mov    rcx,QWORD PTR [rbp-0x8]
  40a3e0:	mov    rcx,QWORD PTR [rcx]
  40a3e3:	mov    rdx,QWORD PTR [rbp-0x8]
  40a3e7:	mov    QWORD PTR [rdx+0x8],rcx
  40a3eb:	mov    rcx,QWORD PTR [rbp-0x8]
  40a3ef:	mov    rcx,QWORD PTR [rcx]
  40a3f2:	add    rcx,0x5c0
  40a3f9:	mov    rdx,QWORD PTR [rbp-0x8]
  40a3fd:	mov    QWORD PTR [rdx+0x10],rcx
  40a401:	mov    rcx,QWORD PTR [rbp-0x8]
  40a405:	mov    rcx,QWORD PTR [rcx+0x10]
  40a409:	mov    rdx,QWORD PTR [rbp-0x8]
  40a40d:	mov    QWORD PTR [rdx+0x20],rcx
  40a411:	mov    rcx,QWORD PTR [rbp-0x8]
  40a415:	mov    QWORD PTR [rcx+0x18],0x5c0
  40a41d:	mov    rcx,QWORD PTR [rbp-0x8]
  40a421:	mov    QWORD PTR [rcx+0x28],0x5c0
  40a429:	mov    rcx,QWORD PTR [rbp-0x8]
  40a42d:	mov    rcx,QWORD PTR [rcx+0x18]
  40a431:	sub    eax,ecx
  40a433:	mov    rdx,QWORD PTR [rbp-0x8]
  40a437:	mov    rdx,QWORD PTR [rdx]
  40a43a:	mov    DWORD PTR [rdx+0xb90],eax
  40a440:	mov    rdx,QWORD PTR [rbp-0x8]
  40a444:	cmp    QWORD PTR [rdx+0x40],0x0
  40a449:	jne    40a45f <flatcc_emitter_reset@@Base+0xaf>
  40a44f:	mov    rax,QWORD PTR [rbp-0x8]
  40a453:	mov    rax,QWORD PTR [rax+0x30]
  40a457:	mov    rcx,QWORD PTR [rbp-0x8]
  40a45b:	mov    QWORD PTR [rcx+0x40],rax
  40a45f:	mov    rax,QWORD PTR [rbp-0x8]
  40a463:	imul   rax,QWORD PTR [rax+0x40],0x3
  40a46b:	shr    rax,0x2
  40a46f:	mov    rcx,QWORD PTR [rbp-0x8]
  40a473:	mov    rcx,QWORD PTR [rcx+0x30]
  40a477:	shr    rcx,0x2
  40a47b:	add    rax,rcx
  40a47e:	mov    rcx,QWORD PTR [rbp-0x8]
  40a482:	mov    QWORD PTR [rcx+0x40],rax
  40a486:	mov    rax,QWORD PTR [rbp-0x8]
  40a48a:	mov    QWORD PTR [rax+0x30],0x0
  40a492:	xor    eax,eax
  40a494:	mov    rcx,QWORD PTR [rbp-0x8]
  40a498:	mov    rcx,QWORD PTR [rcx+0x40]
  40a49c:	shl    rcx,0x1
  40a4a0:	mov    rdx,QWORD PTR [rbp-0x8]
  40a4a4:	cmp    rcx,QWORD PTR [rdx+0x38]
  40a4a8:	mov    BYTE PTR [rbp-0x11],al
  40a4ab:	jae    40a4cd <flatcc_emitter_reset@@Base+0x11d>
  40a4b1:	mov    rax,QWORD PTR [rbp-0x8]
  40a4b5:	mov    rax,QWORD PTR [rax+0x8]
  40a4b9:	mov    rax,QWORD PTR [rax+0xb80]
  40a4c0:	mov    rcx,QWORD PTR [rbp-0x8]
  40a4c4:	cmp    rax,QWORD PTR [rcx]
  40a4c7:	setne  dl
  40a4ca:	mov    BYTE PTR [rbp-0x11],dl
  40a4cd:	mov    al,BYTE PTR [rbp-0x11]
  40a4d0:	test   al,0x1
  40a4d2:	jne    40a4dd <flatcc_emitter_reset@@Base+0x12d>
  40a4d8:	jmp    40a548 <flatcc_emitter_reset@@Base+0x198>
  40a4dd:	mov    rax,QWORD PTR [rbp-0x8]
  40a4e1:	mov    rax,QWORD PTR [rax+0x8]
  40a4e5:	mov    rax,QWORD PTR [rax+0xb80]
  40a4ec:	mov    QWORD PTR [rbp-0x10],rax
  40a4f0:	mov    rax,QWORD PTR [rbp-0x10]
  40a4f4:	mov    rax,QWORD PTR [rax+0xb80]
  40a4fb:	mov    rcx,QWORD PTR [rbp-0x8]
  40a4ff:	mov    rcx,QWORD PTR [rcx+0x8]
  40a503:	mov    QWORD PTR [rcx+0xb80],rax
  40a50a:	mov    rax,QWORD PTR [rbp-0x8]
  40a50e:	mov    rax,QWORD PTR [rax+0x8]
  40a512:	mov    rcx,QWORD PTR [rbp-0x10]
  40a516:	mov    rcx,QWORD PTR [rcx+0xb80]
  40a51d:	mov    QWORD PTR [rcx+0xb88],rax
  40a524:	mov    rax,QWORD PTR [rbp-0x10]
  40a528:	mov    rdi,rax
  40a52b:	call   403030 <free@plt>
  40a530:	mov    rax,QWORD PTR [rbp-0x8]
  40a534:	mov    rcx,QWORD PTR [rax+0x38]
  40a538:	sub    rcx,0xb80
  40a53f:	mov    QWORD PTR [rax+0x38],rcx
  40a543:	jmp    40a492 <flatcc_emitter_reset@@Base+0xe2>
  40a548:	add    rsp,0x20
  40a54c:	pop    rbp
  40a54d:	ret    
  40a54e:	xchg   ax,ax

000000000040a550 <flatcc_emitter_clear@@Base>:
  40a550:	push   rbp
  40a551:	mov    rbp,rsp
  40a554:	sub    rsp,0x10
  40a558:	mov    QWORD PTR [rbp-0x8],rdi
  40a55c:	mov    rax,QWORD PTR [rbp-0x8]
  40a560:	mov    rax,QWORD PTR [rax]
  40a563:	mov    QWORD PTR [rbp-0x10],rax
  40a567:	cmp    QWORD PTR [rbp-0x10],0x0
  40a56c:	jne    40a577 <flatcc_emitter_clear@@Base+0x27>
  40a572:	jmp    40a5e5 <flatcc_emitter_clear@@Base+0x95>
  40a577:	mov    rax,QWORD PTR [rbp-0x10]
  40a57b:	mov    rax,QWORD PTR [rax+0xb88]
  40a582:	mov    QWORD PTR [rax+0xb80],0x0
  40a58d:	mov    rax,QWORD PTR [rbp-0x10]
  40a591:	cmp    QWORD PTR [rax+0xb80],0x0
  40a599:	je     40a5c6 <flatcc_emitter_clear@@Base+0x76>
  40a59f:	mov    rax,QWORD PTR [rbp-0x10]
  40a5a3:	mov    rax,QWORD PTR [rax+0xb80]
  40a5aa:	mov    QWORD PTR [rbp-0x10],rax
  40a5ae:	mov    rax,QWORD PTR [rbp-0x10]
  40a5b2:	mov    rax,QWORD PTR [rax+0xb88]
  40a5b9:	mov    rdi,rax
  40a5bc:	call   403030 <free@plt>
  40a5c1:	jmp    40a58d <flatcc_emitter_clear@@Base+0x3d>
  40a5c6:	mov    rax,QWORD PTR [rbp-0x10]
  40a5ca:	mov    rdi,rax
  40a5cd:	call   403030 <free@plt>
  40a5d2:	xor    esi,esi
  40a5d4:	mov    rax,QWORD PTR [rbp-0x8]
  40a5d8:	mov    rdi,rax
  40a5db:	mov    edx,0x48
  40a5e0:	call   403070 <memset@plt>
  40a5e5:	add    rsp,0x10
  40a5e9:	pop    rbp
  40a5ea:	ret    
  40a5eb:	nop    DWORD PTR [rax+rax*1+0x0]

000000000040a5f0 <flatcc_emitter@@Base>:
  40a5f0:	push   rbp
  40a5f1:	mov    rbp,rsp
  40a5f4:	sub    rsp,0x40
  40a5f8:	mov    QWORD PTR [rbp-0x10],rdi
  40a5fc:	mov    QWORD PTR [rbp-0x18],rsi
  40a600:	mov    DWORD PTR [rbp-0x1c],edx
  40a603:	mov    DWORD PTR [rbp-0x20],ecx
  40a606:	mov    QWORD PTR [rbp-0x28],r8
  40a60a:	mov    rax,QWORD PTR [rbp-0x10]
  40a60e:	mov    QWORD PTR [rbp-0x30],rax
  40a612:	mov    rax,QWORD PTR [rbp-0x28]
  40a616:	mov    rsi,QWORD PTR [rbp-0x30]
  40a61a:	add    rax,QWORD PTR [rsi+0x30]
  40a61e:	mov    QWORD PTR [rsi+0x30],rax
  40a622:	cmp    DWORD PTR [rbp-0x20],0x0
  40a626:	jge    40a6ea <flatcc_emitter@@Base+0xfa>
  40a62c:	mov    rax,QWORD PTR [rbp-0x28]
  40a630:	mov    rcx,QWORD PTR [rbp-0x30]
  40a634:	cmp    rax,QWORD PTR [rcx+0x18]
  40a638:	ja     40a67c <flatcc_emitter@@Base+0x8c>
  40a63e:	xor    eax,eax
  40a640:	mov    ecx,eax
  40a642:	mov    rdx,QWORD PTR [rbp-0x28]
  40a646:	mov    rsi,QWORD PTR [rbp-0x30]
  40a64a:	mov    rdi,QWORD PTR [rsi+0x10]
  40a64e:	sub    rcx,rdx
  40a651:	add    rdi,rcx
  40a654:	mov    QWORD PTR [rsi+0x10],rdi
  40a658:	mov    rcx,QWORD PTR [rbp-0x28]
  40a65c:	mov    rdx,QWORD PTR [rbp-0x30]
  40a660:	mov    rsi,QWORD PTR [rdx+0x18]
  40a664:	sub    rsi,rcx
  40a667:	mov    QWORD PTR [rdx+0x18],rsi
  40a66b:	mov    rcx,QWORD PTR [rbp-0x30]
  40a66f:	mov    rcx,QWORD PTR [rcx+0x10]
  40a673:	mov    QWORD PTR [rbp-0x38],rcx
  40a677:	jmp    40a79a <flatcc_emitter@@Base+0x1aa>
  40a67c:	mov    eax,DWORD PTR [rbp-0x1c]
  40a67f:	mov    rcx,QWORD PTR [rbp-0x18]
  40a683:	movsxd rdx,eax
  40a686:	shl    rdx,0x4
  40a68a:	add    rcx,rdx
  40a68d:	mov    QWORD PTR [rbp-0x18],rcx
  40a691:	mov    eax,DWORD PTR [rbp-0x1c]
  40a694:	mov    ecx,eax
  40a696:	add    ecx,0xffffffff
  40a699:	mov    DWORD PTR [rbp-0x1c],ecx
  40a69c:	cmp    eax,0x0
  40a69f:	je     40a6e5 <flatcc_emitter@@Base+0xf5>
  40a6a5:	mov    rax,QWORD PTR [rbp-0x18]
  40a6a9:	add    rax,0xfffffffffffffff0
  40a6af:	mov    QWORD PTR [rbp-0x18],rax
  40a6b3:	mov    rdi,QWORD PTR [rbp-0x30]
  40a6b7:	mov    rax,QWORD PTR [rbp-0x18]
  40a6bb:	mov    rsi,QWORD PTR [rax]
  40a6be:	mov    rax,QWORD PTR [rbp-0x18]
  40a6c2:	mov    rdx,QWORD PTR [rax+0x8]
  40a6c6:	call   40a800 <flatcc_emitter@@Base+0x210>
  40a6cb:	cmp    eax,0x0
  40a6ce:	je     40a6e0 <flatcc_emitter@@Base+0xf0>
  40a6d4:	mov    DWORD PTR [rbp-0x4],0xffffffff
  40a6db:	jmp    40a7f5 <flatcc_emitter@@Base+0x205>
  40a6e0:	jmp    40a691 <flatcc_emitter@@Base+0xa1>
  40a6e5:	jmp    40a78e <flatcc_emitter@@Base+0x19e>
  40a6ea:	mov    rax,QWORD PTR [rbp-0x28]
  40a6ee:	mov    rcx,QWORD PTR [rbp-0x30]
  40a6f2:	cmp    rax,QWORD PTR [rcx+0x28]
  40a6f6:	ja     40a730 <flatcc_emitter@@Base+0x140>
  40a6fc:	mov    rax,QWORD PTR [rbp-0x30]
  40a700:	mov    rax,QWORD PTR [rax+0x20]
  40a704:	mov    QWORD PTR [rbp-0x38],rax
  40a708:	mov    rax,QWORD PTR [rbp-0x28]
  40a70c:	mov    rcx,QWORD PTR [rbp-0x30]
  40a710:	add    rax,QWORD PTR [rcx+0x20]
  40a714:	mov    QWORD PTR [rcx+0x20],rax
  40a718:	mov    rax,QWORD PTR [rbp-0x28]
  40a71c:	mov    rcx,QWORD PTR [rbp-0x30]
  40a720:	mov    rdx,QWORD PTR [rcx+0x28]
  40a724:	sub    rdx,rax
  40a727:	mov    QWORD PTR [rcx+0x28],rdx
  40a72b:	jmp    40a79a <flatcc_emitter@@Base+0x1aa>
  40a730:	jmp    40a735 <flatcc_emitter@@Base+0x145>
  40a735:	mov    eax,DWORD PTR [rbp-0x1c]
  40a738:	mov    ecx,eax
  40a73a:	add    ecx,0xffffffff
  40a73d:	mov    DWORD PTR [rbp-0x1c],ecx
  40a740:	cmp    eax,0x0
  40a743:	je     40a789 <flatcc_emitter@@Base+0x199>
  40a749:	mov    rdi,QWORD PTR [rbp-0x30]
  40a74d:	mov    rax,QWORD PTR [rbp-0x18]
  40a751:	mov    rsi,QWORD PTR [rax]
  40a754:	mov    rax,QWORD PTR [rbp-0x18]
  40a758:	mov    rdx,QWORD PTR [rax+0x8]
  40a75c:	call   40a900 <flatcc_emitter@@Base+0x310>
  40a761:	cmp    eax,0x0
  40a764:	je     40a776 <flatcc_emitter@@Base+0x186>
  40a76a:	mov    DWORD PTR [rbp-0x4],0xffffffff
  40a771:	jmp    40a7f5 <flatcc_emitter@@Base+0x205>
  40a776:	mov    rax,QWORD PTR [rbp-0x18]
  40a77a:	add    rax,0x10
  40a780:	mov    QWORD PTR [rbp-0x18],rax
  40a784:	jmp    40a735 <flatcc_emitter@@Base+0x145>
  40a789:	jmp    40a78e <flatcc_emitter@@Base+0x19e>
  40a78e:	mov    DWORD PTR [rbp-0x4],0x0
  40a795:	jmp    40a7f5 <flatcc_emitter@@Base+0x205>
  40a79a:	jmp    40a79f <flatcc_emitter@@Base+0x1af>
  40a79f:	mov    eax,DWORD PTR [rbp-0x1c]
  40a7a2:	mov    ecx,eax
  40a7a4:	add    ecx,0xffffffff
  40a7a7:	mov    DWORD PTR [rbp-0x1c],ecx
  40a7aa:	cmp    eax,0x0
  40a7ad:	je     40a7ee <flatcc_emitter@@Base+0x1fe>
  40a7b3:	mov    rdi,QWORD PTR [rbp-0x38]
  40a7b7:	mov    rax,QWORD PTR [rbp-0x18]
  40a7bb:	mov    rsi,QWORD PTR [rax]
  40a7be:	mov    rax,QWORD PTR [rbp-0x18]
  40a7c2:	mov    rdx,QWORD PTR [rax+0x8]
  40a7c6:	call   4030a0 <memcpy@plt>
  40a7cb:	mov    rax,QWORD PTR [rbp-0x18]
  40a7cf:	mov    rax,QWORD PTR [rax+0x8]
  40a7d3:	add    rax,QWORD PTR [rbp-0x38]
  40a7d7:	mov    QWORD PTR [rbp-0x38],rax
  40a7db:	mov    rax,QWORD PTR [rbp-0x18]
  40a7df:	add    rax,0x10
  40a7e5:	mov    QWORD PTR [rbp-0x18],rax
  40a7e9:	jmp    40a79f <flatcc_emitter@@Base+0x1af>
  40a7ee:	mov    DWORD PTR [rbp-0x4],0x0
  40a7f5:	mov    eax,DWORD PTR [rbp-0x4]
  40a7f8:	add    rsp,0x40
  40a7fc:	pop    rbp
  40a7fd:	ret    
  40a7fe:	xchg   ax,ax
  40a800:	push   rbp
  40a801:	mov    rbp,rsp
  40a804:	sub    rsp,0x30
  40a808:	mov    QWORD PTR [rbp-0x10],rdi
  40a80c:	mov    QWORD PTR [rbp-0x18],rsi
  40a810:	mov    QWORD PTR [rbp-0x20],rdx
  40a814:	mov    rax,QWORD PTR [rbp-0x20]
  40a818:	add    rax,QWORD PTR [rbp-0x18]
  40a81c:	mov    QWORD PTR [rbp-0x18],rax
  40a820:	cmp    QWORD PTR [rbp-0x20],0x0
  40a825:	je     40a8ef <flatcc_emitter@@Base+0x2ff>
  40a82b:	mov    rax,QWORD PTR [rbp-0x20]
  40a82f:	mov    QWORD PTR [rbp-0x28],rax
  40a833:	mov    rax,QWORD PTR [rbp-0x28]
  40a837:	mov    rcx,QWORD PTR [rbp-0x10]
  40a83b:	cmp    rax,QWORD PTR [rcx+0x18]
  40a83f:	jbe    40a884 <flatcc_emitter@@Base+0x294>
  40a845:	mov    rax,QWORD PTR [rbp-0x10]
  40a849:	mov    rax,QWORD PTR [rax+0x18]
  40a84d:	mov    QWORD PTR [rbp-0x28],rax
  40a851:	cmp    QWORD PTR [rbp-0x28],0x0
  40a856:	jne    40a87f <flatcc_emitter@@Base+0x28f>
  40a85c:	mov    rdi,QWORD PTR [rbp-0x10]
  40a860:	call   40ab30 <flatcc_emitter_copy_buffer@@Base+0x150>
  40a865:	cmp    eax,0x0
  40a868:	je     40a87a <flatcc_emitter@@Base+0x28a>
  40a86e:	mov    DWORD PTR [rbp-0x4],0xffffffff
  40a875:	jmp    40a8f6 <flatcc_emitter@@Base+0x306>
  40a87a:	jmp    40a820 <flatcc_emitter@@Base+0x230>
  40a87f:	jmp    40a884 <flatcc_emitter@@Base+0x294>
  40a884:	xor    eax,eax
  40a886:	mov    ecx,eax
  40a888:	mov    rdx,QWORD PTR [rbp-0x28]
  40a88c:	mov    rsi,QWORD PTR [rbp-0x10]
  40a890:	mov    rdi,QWORD PTR [rsi+0x10]
  40a894:	mov    r8,rcx
  40a897:	sub    r8,rdx
  40a89a:	add    rdi,r8
  40a89d:	mov    QWORD PTR [rsi+0x10],rdi
  40a8a1:	mov    rdx,QWORD PTR [rbp-0x28]
  40a8a5:	mov    rsi,QWORD PTR [rbp-0x10]
  40a8a9:	mov    rdi,QWORD PTR [rsi+0x18]
  40a8ad:	sub    rdi,rdx
  40a8b0:	mov    QWORD PTR [rsi+0x18],rdi
  40a8b4:	mov    rdx,QWORD PTR [rbp-0x28]
  40a8b8:	mov    rsi,QWORD PTR [rbp-0x18]
  40a8bc:	sub    rcx,rdx
  40a8bf:	add    rsi,rcx
  40a8c2:	mov    QWORD PTR [rbp-0x18],rsi
  40a8c6:	mov    rcx,QWORD PTR [rbp-0x28]
  40a8ca:	mov    rdx,QWORD PTR [rbp-0x20]
  40a8ce:	sub    rdx,rcx
  40a8d1:	mov    QWORD PTR [rbp-0x20],rdx
  40a8d5:	mov    rcx,QWORD PTR [rbp-0x10]
  40a8d9:	mov    rdi,QWORD PTR [rcx+0x10]
  40a8dd:	mov    rsi,QWORD PTR [rbp-0x18]
  40a8e1:	mov    rdx,QWORD PTR [rbp-0x28]
  40a8e5:	call   4030a0 <memcpy@plt>
  40a8ea:	jmp    40a820 <flatcc_emitter@@Base+0x230>
  40a8ef:	mov    DWORD PTR [rbp-0x4],0x0
  40a8f6:	mov    eax,DWORD PTR [rbp-0x4]
  40a8f9:	add    rsp,0x30
  40a8fd:	pop    rbp
  40a8fe:	ret    
  40a8ff:	nop
  40a900:	push   rbp
  40a901:	mov    rbp,rsp
  40a904:	sub    rsp,0x30
  40a908:	mov    QWORD PTR [rbp-0x10],rdi
  40a90c:	mov    QWORD PTR [rbp-0x18],rsi
  40a910:	mov    QWORD PTR [rbp-0x20],rdx
  40a914:	cmp    QWORD PTR [rbp-0x20],0x0
  40a919:	je     40a9d0 <flatcc_emitter@@Base+0x3e0>
  40a91f:	mov    rax,QWORD PTR [rbp-0x20]
  40a923:	mov    QWORD PTR [rbp-0x28],rax
  40a927:	mov    rax,QWORD PTR [rbp-0x28]
  40a92b:	mov    rcx,QWORD PTR [rbp-0x10]
  40a92f:	cmp    rax,QWORD PTR [rcx+0x28]
  40a933:	jbe    40a978 <flatcc_emitter@@Base+0x388>
  40a939:	mov    rax,QWORD PTR [rbp-0x10]
  40a93d:	mov    rax,QWORD PTR [rax+0x28]
  40a941:	mov    QWORD PTR [rbp-0x28],rax
  40a945:	cmp    QWORD PTR [rbp-0x28],0x0
  40a94a:	jne    40a973 <flatcc_emitter@@Base+0x383>
  40a950:	mov    rdi,QWORD PTR [rbp-0x10]
  40a954:	call   40ad50 <flatcc_emitter_copy_buffer@@Base+0x370>
  40a959:	cmp    eax,0x0
  40a95c:	je     40a96e <flatcc_emitter@@Base+0x37e>
  40a962:	mov    DWORD PTR [rbp-0x4],0xffffffff
  40a969:	jmp    40a9d7 <flatcc_emitter@@Base+0x3e7>
  40a96e:	jmp    40a914 <flatcc_emitter@@Base+0x324>
  40a973:	jmp    40a978 <flatcc_emitter@@Base+0x388>
  40a978:	mov    rax,QWORD PTR [rbp-0x10]
  40a97c:	mov    rdi,QWORD PTR [rax+0x20]
  40a980:	mov    rsi,QWORD PTR [rbp-0x18]
  40a984:	mov    rdx,QWORD PTR [rbp-0x28]
  40a988:	call   4030a0 <memcpy@plt>
  40a98d:	mov    rax,QWORD PTR [rbp-0x28]
  40a991:	mov    rcx,QWORD PTR [rbp-0x20]
  40a995:	sub    rcx,rax
  40a998:	mov    QWORD PTR [rbp-0x20],rcx
  40a99c:	mov    rax,QWORD PTR [rbp-0x28]
  40a9a0:	add    rax,QWORD PTR [rbp-0x18]
  40a9a4:	mov    QWORD PTR [rbp-0x18],rax
  40a9a8:	mov    rax,QWORD PTR [rbp-0x28]
  40a9ac:	mov    rcx,QWORD PTR [rbp-0x10]
  40a9b0:	add    rax,QWORD PTR [rcx+0x20]
  40a9b4:	mov    QWORD PTR [rcx+0x20],rax
  40a9b8:	mov    rax,QWORD PTR [rbp-0x28]
  40a9bc:	mov    rcx,QWORD PTR [rbp-0x10]
  40a9c0:	mov    rdx,QWORD PTR [rcx+0x28]
  40a9c4:	sub    rdx,rax
  40a9c7:	mov    QWORD PTR [rcx+0x28],rdx
  40a9cb:	jmp    40a914 <flatcc_emitter@@Base+0x324>
  40a9d0:	mov    DWORD PTR [rbp-0x4],0x0
  40a9d7:	mov    eax,DWORD PTR [rbp-0x4]
  40a9da:	add    rsp,0x30
  40a9de:	pop    rbp
  40a9df:	ret    

000000000040a9e0 <flatcc_emitter_copy_buffer@@Base>:
  40a9e0:	push   rbp
  40a9e1:	mov    rbp,rsp
  40a9e4:	sub    rsp,0x30
  40a9e8:	mov    QWORD PTR [rbp-0x10],rdi
  40a9ec:	mov    QWORD PTR [rbp-0x18],rsi
  40a9f0:	mov    QWORD PTR [rbp-0x20],rdx
  40a9f4:	mov    rax,QWORD PTR [rbp-0x20]
  40a9f8:	mov    rcx,QWORD PTR [rbp-0x10]
  40a9fc:	cmp    rax,QWORD PTR [rcx+0x30]
  40aa00:	jae    40aa13 <flatcc_emitter_copy_buffer@@Base+0x33>
  40aa06:	mov    QWORD PTR [rbp-0x8],0x0
  40aa0e:	jmp    40ab18 <flatcc_emitter_copy_buffer@@Base+0x138>
  40aa13:	mov    rax,QWORD PTR [rbp-0x10]
  40aa17:	cmp    QWORD PTR [rax],0x0
  40aa1b:	jne    40aa2e <flatcc_emitter_copy_buffer@@Base+0x4e>
  40aa21:	mov    QWORD PTR [rbp-0x8],0x0
  40aa29:	jmp    40ab18 <flatcc_emitter_copy_buffer@@Base+0x138>
  40aa2e:	mov    rax,QWORD PTR [rbp-0x10]
  40aa32:	mov    rax,QWORD PTR [rax]
  40aa35:	mov    rcx,QWORD PTR [rbp-0x10]
  40aa39:	cmp    rax,QWORD PTR [rcx+0x8]
  40aa3d:	jne    40aa69 <flatcc_emitter_copy_buffer@@Base+0x89>
  40aa43:	mov    rdi,QWORD PTR [rbp-0x18]
  40aa47:	mov    rax,QWORD PTR [rbp-0x10]
  40aa4b:	mov    rsi,QWORD PTR [rax+0x10]
  40aa4f:	mov    rax,QWORD PTR [rbp-0x10]
  40aa53:	mov    rdx,QWORD PTR [rax+0x30]
  40aa57:	call   4030a0 <memcpy@plt>
  40aa5c:	mov    rax,QWORD PTR [rbp-0x18]
  40aa60:	mov    QWORD PTR [rbp-0x8],rax
  40aa64:	jmp    40ab18 <flatcc_emitter_copy_buffer@@Base+0x138>
  40aa69:	mov    rax,QWORD PTR [rbp-0x10]
  40aa6d:	mov    ecx,0xb80
  40aa72:	sub    rcx,QWORD PTR [rax+0x18]
  40aa76:	mov    QWORD PTR [rbp-0x30],rcx
  40aa7a:	mov    rdi,QWORD PTR [rbp-0x18]
  40aa7e:	mov    rax,QWORD PTR [rbp-0x10]
  40aa82:	mov    rsi,QWORD PTR [rax+0x10]
  40aa86:	mov    rdx,QWORD PTR [rbp-0x30]
  40aa8a:	call   4030a0 <memcpy@plt>
  40aa8f:	mov    rax,QWORD PTR [rbp-0x18]
  40aa93:	add    rax,QWORD PTR [rbp-0x30]
  40aa97:	mov    QWORD PTR [rbp-0x18],rax
  40aa9b:	mov    rax,QWORD PTR [rbp-0x10]
  40aa9f:	mov    rax,QWORD PTR [rax]
  40aaa2:	mov    rax,QWORD PTR [rax+0xb80]
  40aaa9:	mov    QWORD PTR [rbp-0x28],rax
  40aaad:	mov    rax,QWORD PTR [rbp-0x28]
  40aab1:	mov    rcx,QWORD PTR [rbp-0x10]
  40aab5:	cmp    rax,QWORD PTR [rcx+0x8]
  40aab9:	je     40aaf3 <flatcc_emitter_copy_buffer@@Base+0x113>
  40aabf:	mov    rdi,QWORD PTR [rbp-0x18]
  40aac3:	mov    rsi,QWORD PTR [rbp-0x28]
  40aac7:	mov    edx,0xb80
  40aacc:	call   4030a0 <memcpy@plt>
  40aad1:	mov    rax,QWORD PTR [rbp-0x18]
  40aad5:	add    rax,0xb80
  40aadb:	mov    QWORD PTR [rbp-0x18],rax
  40aadf:	mov    rax,QWORD PTR [rbp-0x28]
  40aae3:	mov    rax,QWORD PTR [rax+0xb80]
  40aaea:	mov    QWORD PTR [rbp-0x28],rax
  40aaee:	jmp    40aaad <flatcc_emitter_copy_buffer@@Base+0xcd>
  40aaf3:	mov    rdi,QWORD PTR [rbp-0x18]
  40aaf7:	mov    rsi,QWORD PTR [rbp-0x28]
  40aafb:	mov    rax,QWORD PTR [rbp-0x10]
  40aaff:	mov    ecx,0xb80
  40ab04:	sub    rcx,QWORD PTR [rax+0x28]
  40ab08:	mov    rdx,rcx
  40ab0b:	call   4030a0 <memcpy@plt>
  40ab10:	mov    rax,QWORD PTR [rbp-0x18]
  40ab14:	mov    QWORD PTR [rbp-0x8],rax
  40ab18:	mov    rax,QWORD PTR [rbp-0x8]
  40ab1c:	add    rsp,0x30
  40ab20:	pop    rbp
  40ab21:	ret    
  40ab22:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40ab2c:	nop    DWORD PTR [rax+0x0]
  40ab30:	push   rbp
  40ab31:	mov    rbp,rsp
  40ab34:	sub    rsp,0x20
  40ab38:	mov    QWORD PTR [rbp-0x10],rdi
  40ab3c:	mov    QWORD PTR [rbp-0x18],0x0
  40ab44:	mov    rax,QWORD PTR [rbp-0x10]
  40ab48:	cmp    QWORD PTR [rax],0x0
  40ab4c:	je     40abaf <flatcc_emitter_copy_buffer@@Base+0x1cf>
  40ab52:	mov    rax,QWORD PTR [rbp-0x10]
  40ab56:	mov    rax,QWORD PTR [rax]
  40ab59:	mov    rax,QWORD PTR [rax+0xb88]
  40ab60:	mov    rcx,QWORD PTR [rbp-0x10]
  40ab64:	cmp    rax,QWORD PTR [rcx+0x8]
  40ab68:	je     40abaf <flatcc_emitter_copy_buffer@@Base+0x1cf>
  40ab6e:	mov    rax,QWORD PTR [rbp-0x10]
  40ab72:	mov    rax,QWORD PTR [rax]
  40ab75:	mov    ecx,DWORD PTR [rax+0xb90]
  40ab7b:	sub    ecx,0xb80
  40ab81:	mov    rax,QWORD PTR [rbp-0x10]
  40ab85:	mov    rax,QWORD PTR [rax]
  40ab88:	mov    rax,QWORD PTR [rax+0xb88]
  40ab8f:	mov    DWORD PTR [rax+0xb90],ecx
  40ab95:	mov    rax,QWORD PTR [rbp-0x10]
  40ab99:	mov    rax,QWORD PTR [rax]
  40ab9c:	mov    rax,QWORD PTR [rax+0xb88]
  40aba3:	mov    rdx,QWORD PTR [rbp-0x10]
  40aba7:	mov    QWORD PTR [rdx],rax
  40abaa:	jmp    40acec <flatcc_emitter_copy_buffer@@Base+0x30c>
  40abaf:	mov    edi,0xb98
  40abb4:	call   4030b0 <malloc@plt>
  40abb9:	mov    QWORD PTR [rbp-0x18],rax
  40abbd:	cmp    rax,0x0
  40abc1:	jne    40abd3 <flatcc_emitter_copy_buffer@@Base+0x1f3>
  40abc7:	mov    DWORD PTR [rbp-0x4],0xffffffff
  40abce:	jmp    40ad3b <flatcc_emitter_copy_buffer@@Base+0x35b>
  40abd3:	mov    rax,QWORD PTR [rbp-0x10]
  40abd7:	mov    rcx,QWORD PTR [rax+0x38]
  40abdb:	add    rcx,0xb80
  40abe2:	mov    QWORD PTR [rax+0x38],rcx
  40abe6:	mov    rax,QWORD PTR [rbp-0x10]
  40abea:	cmp    QWORD PTR [rax],0x0
  40abee:	je     40ac4e <flatcc_emitter_copy_buffer@@Base+0x26e>
  40abf4:	mov    rax,QWORD PTR [rbp-0x10]
  40abf8:	mov    rax,QWORD PTR [rax+0x8]
  40abfc:	mov    rcx,QWORD PTR [rbp-0x18]
  40ac00:	mov    QWORD PTR [rcx+0xb88],rax
  40ac07:	mov    rax,QWORD PTR [rbp-0x10]
  40ac0b:	mov    rax,QWORD PTR [rax]
  40ac0e:	mov    rcx,QWORD PTR [rbp-0x18]
  40ac12:	mov    QWORD PTR [rcx+0xb80],rax
  40ac19:	mov    rax,QWORD PTR [rbp-0x18]
  40ac1d:	mov    rcx,QWORD PTR [rbp-0x10]
  40ac21:	mov    rcx,QWORD PTR [rcx]
  40ac24:	mov    QWORD PTR [rcx+0xb88],rax
  40ac2b:	mov    rax,QWORD PTR [rbp-0x18]
  40ac2f:	mov    rcx,QWORD PTR [rbp-0x10]
  40ac33:	mov    rcx,QWORD PTR [rcx+0x8]
  40ac37:	mov    QWORD PTR [rcx+0xb80],rax
  40ac3e:	mov    rax,QWORD PTR [rbp-0x18]
  40ac42:	mov    rcx,QWORD PTR [rbp-0x10]
  40ac46:	mov    QWORD PTR [rcx],rax
  40ac49:	jmp    40acec <flatcc_emitter_copy_buffer@@Base+0x30c>
  40ac4e:	xor    eax,eax
  40ac50:	mov    rcx,QWORD PTR [rbp-0x18]
  40ac54:	mov    rdx,QWORD PTR [rbp-0x10]
  40ac58:	mov    QWORD PTR [rdx],rcx
  40ac5b:	mov    rcx,QWORD PTR [rbp-0x18]
  40ac5f:	mov    rdx,QWORD PTR [rbp-0x10]
  40ac63:	mov    QWORD PTR [rdx+0x8],rcx
  40ac67:	mov    rcx,QWORD PTR [rbp-0x18]
  40ac6b:	mov    rdx,QWORD PTR [rbp-0x18]
  40ac6f:	mov    QWORD PTR [rdx+0xb80],rcx
  40ac76:	mov    rcx,QWORD PTR [rbp-0x18]
  40ac7a:	mov    rdx,QWORD PTR [rbp-0x18]
  40ac7e:	mov    QWORD PTR [rdx+0xb88],rcx
  40ac85:	mov    rcx,QWORD PTR [rbp-0x10]
  40ac89:	mov    rcx,QWORD PTR [rcx]
  40ac8c:	add    rcx,0x5c0
  40ac93:	mov    rdx,QWORD PTR [rbp-0x10]
  40ac97:	mov    QWORD PTR [rdx+0x10],rcx
  40ac9b:	mov    rcx,QWORD PTR [rbp-0x10]
  40ac9f:	mov    rcx,QWORD PTR [rcx+0x10]
  40aca3:	mov    rdx,QWORD PTR [rbp-0x10]
  40aca7:	mov    QWORD PTR [rdx+0x20],rcx
  40acab:	mov    rcx,QWORD PTR [rbp-0x10]
  40acaf:	mov    QWORD PTR [rcx+0x18],0x5c0
  40acb7:	mov    rcx,QWORD PTR [rbp-0x10]
  40acbb:	mov    edx,0xb80
  40acc0:	sub    rdx,QWORD PTR [rcx+0x18]
  40acc4:	mov    rcx,QWORD PTR [rbp-0x10]
  40acc8:	mov    QWORD PTR [rcx+0x28],rdx
  40accc:	mov    rcx,QWORD PTR [rbp-0x10]
  40acd0:	mov    rcx,QWORD PTR [rcx+0x18]
  40acd4:	sub    eax,ecx
  40acd6:	mov    rdx,QWORD PTR [rbp-0x18]
  40acda:	mov    DWORD PTR [rdx+0xb90],eax
  40ace0:	mov    DWORD PTR [rbp-0x4],0x0
  40ace7:	jmp    40ad3b <flatcc_emitter_copy_buffer@@Base+0x35b>
  40acec:	mov    rax,QWORD PTR [rbp-0x10]
  40acf0:	mov    rax,QWORD PTR [rax]
  40acf3:	add    rax,0xb80
  40acf9:	mov    rcx,QWORD PTR [rbp-0x10]
  40acfd:	mov    QWORD PTR [rcx+0x10],rax
  40ad01:	mov    rax,QWORD PTR [rbp-0x10]
  40ad05:	mov    QWORD PTR [rax+0x18],0xb80
  40ad0d:	mov    rax,QWORD PTR [rbp-0x10]
  40ad11:	mov    rax,QWORD PTR [rax]
  40ad14:	mov    rax,QWORD PTR [rax+0xb80]
  40ad1b:	mov    edx,DWORD PTR [rax+0xb90]
  40ad21:	sub    edx,0xb80
  40ad27:	mov    rax,QWORD PTR [rbp-0x10]
  40ad2b:	mov    rax,QWORD PTR [rax]
  40ad2e:	mov    DWORD PTR [rax+0xb90],edx
  40ad34:	mov    DWORD PTR [rbp-0x4],0x0
  40ad3b:	mov    eax,DWORD PTR [rbp-0x4]
  40ad3e:	add    rsp,0x20
  40ad42:	pop    rbp
  40ad43:	ret    
  40ad44:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40ad4e:	xchg   ax,ax
  40ad50:	push   rbp
  40ad51:	mov    rbp,rsp
  40ad54:	sub    rsp,0x20
  40ad58:	mov    QWORD PTR [rbp-0x10],rdi
  40ad5c:	mov    QWORD PTR [rbp-0x18],0x0
  40ad64:	mov    rax,QWORD PTR [rbp-0x10]
  40ad68:	cmp    QWORD PTR [rax+0x8],0x0
  40ad6d:	je     40adab <flatcc_emitter_copy_buffer@@Base+0x3cb>
  40ad73:	mov    rax,QWORD PTR [rbp-0x10]
  40ad77:	mov    rax,QWORD PTR [rax+0x8]
  40ad7b:	mov    rax,QWORD PTR [rax+0xb80]
  40ad82:	mov    rcx,QWORD PTR [rbp-0x10]
  40ad86:	cmp    rax,QWORD PTR [rcx]
  40ad89:	je     40adab <flatcc_emitter_copy_buffer@@Base+0x3cb>
  40ad8f:	mov    rax,QWORD PTR [rbp-0x10]
  40ad93:	mov    rax,QWORD PTR [rax+0x8]
  40ad97:	mov    rax,QWORD PTR [rax+0xb80]
  40ad9e:	mov    rcx,QWORD PTR [rbp-0x10]
  40ada2:	mov    QWORD PTR [rcx+0x8],rax
  40ada6:	jmp    40aeea <flatcc_emitter_copy_buffer@@Base+0x50a>
  40adab:	mov    edi,0xb98
  40adb0:	call   4030b0 <malloc@plt>
  40adb5:	mov    QWORD PTR [rbp-0x18],rax
  40adb9:	cmp    rax,0x0
  40adbd:	jne    40adcf <flatcc_emitter_copy_buffer@@Base+0x3ef>
  40adc3:	mov    DWORD PTR [rbp-0x4],0xffffffff
  40adca:	jmp    40af36 <flatcc_emitter_copy_buffer@@Base+0x556>
  40adcf:	mov    rax,QWORD PTR [rbp-0x10]
  40add3:	mov    rcx,QWORD PTR [rax+0x38]
  40add7:	add    rcx,0xb80
  40adde:	mov    QWORD PTR [rax+0x38],rcx
  40ade2:	mov    rax,QWORD PTR [rbp-0x10]
  40ade6:	cmp    QWORD PTR [rax+0x8],0x0
  40adeb:	je     40ae4c <flatcc_emitter_copy_buffer@@Base+0x46c>
  40adf1:	mov    rax,QWORD PTR [rbp-0x10]
  40adf5:	mov    rax,QWORD PTR [rax+0x8]
  40adf9:	mov    rcx,QWORD PTR [rbp-0x18]
  40adfd:	mov    QWORD PTR [rcx+0xb88],rax
  40ae04:	mov    rax,QWORD PTR [rbp-0x10]
  40ae08:	mov    rax,QWORD PTR [rax]
  40ae0b:	mov    rcx,QWORD PTR [rbp-0x18]
  40ae0f:	mov    QWORD PTR [rcx+0xb80],rax
  40ae16:	mov    rax,QWORD PTR [rbp-0x18]
  40ae1a:	mov    rcx,QWORD PTR [rbp-0x10]
  40ae1e:	mov    rcx,QWORD PTR [rcx]
  40ae21:	mov    QWORD PTR [rcx+0xb88],rax
  40ae28:	mov    rax,QWORD PTR [rbp-0x18]
  40ae2c:	mov    rcx,QWORD PTR [rbp-0x10]
  40ae30:	mov    rcx,QWORD PTR [rcx+0x8]
  40ae34:	mov    QWORD PTR [rcx+0xb80],rax
  40ae3b:	mov    rax,QWORD PTR [rbp-0x18]
  40ae3f:	mov    rcx,QWORD PTR [rbp-0x10]
  40ae43:	mov    QWORD PTR [rcx+0x8],rax
  40ae47:	jmp    40aeea <flatcc_emitter_copy_buffer@@Base+0x50a>
  40ae4c:	xor    eax,eax
  40ae4e:	mov    rcx,QWORD PTR [rbp-0x18]
  40ae52:	mov    rdx,QWORD PTR [rbp-0x10]
  40ae56:	mov    QWORD PTR [rdx],rcx
  40ae59:	mov    rcx,QWORD PTR [rbp-0x18]
  40ae5d:	mov    rdx,QWORD PTR [rbp-0x10]
  40ae61:	mov    QWORD PTR [rdx+0x8],rcx
  40ae65:	mov    rcx,QWORD PTR [rbp-0x18]
  40ae69:	mov    rdx,QWORD PTR [rbp-0x18]
  40ae6d:	mov    QWORD PTR [rdx+0xb80],rcx
  40ae74:	mov    rcx,QWORD PTR [rbp-0x18]
  40ae78:	mov    rdx,QWORD PTR [rbp-0x18]
  40ae7c:	mov    QWORD PTR [rdx+0xb88],rcx
  40ae83:	mov    rcx,QWORD PTR [rbp-0x10]
  40ae87:	mov    rcx,QWORD PTR [rcx]
  40ae8a:	add    rcx,0x5c0
  40ae91:	mov    rdx,QWORD PTR [rbp-0x10]
  40ae95:	mov    QWORD PTR [rdx+0x10],rcx
  40ae99:	mov    rcx,QWORD PTR [rbp-0x10]
  40ae9d:	mov    rcx,QWORD PTR [rcx+0x10]
  40aea1:	mov    rdx,QWORD PTR [rbp-0x10]
  40aea5:	mov    QWORD PTR [rdx+0x20],rcx
  40aea9:	mov    rcx,QWORD PTR [rbp-0x10]
  40aead:	mov    QWORD PTR [rcx+0x18],0x5c0
  40aeb5:	mov    rcx,QWORD PTR [rbp-0x10]
  40aeb9:	mov    edx,0xb80
  40aebe:	sub    rdx,QWORD PTR [rcx+0x18]
  40aec2:	mov    rcx,QWORD PTR [rbp-0x10]
  40aec6:	mov    QWORD PTR [rcx+0x28],rdx
  40aeca:	mov    rcx,QWORD PTR [rbp-0x10]
  40aece:	mov    rcx,QWORD PTR [rcx+0x18]
  40aed2:	sub    eax,ecx
  40aed4:	mov    rdx,QWORD PTR [rbp-0x18]
  40aed8:	mov    DWORD PTR [rdx+0xb90],eax
  40aede:	mov    DWORD PTR [rbp-0x4],0x0
  40aee5:	jmp    40af36 <flatcc_emitter_copy_buffer@@Base+0x556>
  40aeea:	mov    rax,QWORD PTR [rbp-0x10]
  40aeee:	mov    rax,QWORD PTR [rax+0x8]
  40aef2:	mov    rcx,QWORD PTR [rbp-0x10]
  40aef6:	mov    QWORD PTR [rcx+0x20],rax
  40aefa:	mov    rax,QWORD PTR [rbp-0x10]
  40aefe:	mov    QWORD PTR [rax+0x28],0xb80
  40af06:	mov    rax,QWORD PTR [rbp-0x10]
  40af0a:	mov    rax,QWORD PTR [rax+0x8]
  40af0e:	mov    rax,QWORD PTR [rax+0xb88]
  40af15:	mov    edx,DWORD PTR [rax+0xb90]
  40af1b:	add    edx,0xb80
  40af21:	mov    rax,QWORD PTR [rbp-0x10]
  40af25:	mov    rax,QWORD PTR [rax+0x8]
  40af29:	mov    DWORD PTR [rax+0xb90],edx
  40af2f:	mov    DWORD PTR [rbp-0x4],0x0
  40af36:	mov    eax,DWORD PTR [rbp-0x4]
  40af39:	add    rsp,0x20
  40af3d:	pop    rbp
  40af3e:	ret    
  40af3f:	nop

000000000040af40 <flatcc_verify_error_string@@Base>:
  40af40:	push   rbp
  40af41:	mov    rbp,rsp
  40af44:	mov    DWORD PTR [rbp-0xc],edi
  40af47:	mov    eax,DWORD PTR [rbp-0xc]
  40af4a:	mov    ecx,eax
  40af4c:	mov    rdx,rcx
  40af4f:	sub    rdx,0x24
  40af53:	mov    QWORD PTR [rbp-0x18],rcx
  40af57:	ja     40b1c1 <flatcc_verify_error_string@@Base+0x281>
  40af5d:	lea    rax,[rip+0x46d4]        # 40f638 <flatcc_builder_padding_base@@Base+0x1468>
  40af64:	mov    rcx,QWORD PTR [rbp-0x18]
  40af68:	movsxd rdx,DWORD PTR [rax+rcx*4]
  40af6c:	add    rdx,rax
  40af6f:	jmp    rdx
  40af71:	lea    rax,[rip+0x4754]        # 40f6cc <flatcc_builder_padding_base@@Base+0x14fc>
  40af78:	mov    QWORD PTR [rbp-0x8],rax
  40af7c:	jmp    40b1cc <flatcc_verify_error_string@@Base+0x28c>
  40af81:	lea    rax,[rip+0x4747]        # 40f6cf <flatcc_builder_padding_base@@Base+0x14ff>
  40af88:	mov    QWORD PTR [rbp-0x8],rax
  40af8c:	jmp    40b1cc <flatcc_verify_error_string@@Base+0x28c>
  40af91:	lea    rax,[rip+0x474f]        # 40f6e7 <flatcc_builder_padding_base@@Base+0x1517>
  40af98:	mov    QWORD PTR [rbp-0x8],rax
  40af9c:	jmp    40b1cc <flatcc_verify_error_string@@Base+0x28c>
  40afa1:	lea    rax,[rip+0x4753]        # 40f6fb <flatcc_builder_padding_base@@Base+0x152b>
  40afa8:	mov    QWORD PTR [rbp-0x8],rax
  40afac:	jmp    40b1cc <flatcc_verify_error_string@@Base+0x28c>
  40afb1:	lea    rax,[rip+0x475d]        # 40f715 <flatcc_builder_padding_base@@Base+0x1545>
  40afb8:	mov    QWORD PTR [rbp-0x8],rax
  40afbc:	jmp    40b1cc <flatcc_verify_error_string@@Base+0x28c>
  40afc1:	lea    rax,[rip+0x4764]        # 40f72c <flatcc_builder_padding_base@@Base+0x155c>
  40afc8:	mov    QWORD PTR [rbp-0x8],rax
  40afcc:	jmp    40b1cc <flatcc_verify_error_string@@Base+0x28c>
  40afd1:	lea    rax,[rip+0x4777]        # 40f74f <flatcc_builder_padding_base@@Base+0x157f>
  40afd8:	mov    QWORD PTR [rbp-0x8],rax
  40afdc:	jmp    40b1cc <flatcc_verify_error_string@@Base+0x28c>
  40afe1:	lea    rax,[rip+0x4786]        # 40f76e <flatcc_builder_padding_base@@Base+0x159e>
  40afe8:	mov    QWORD PTR [rbp-0x8],rax
  40afec:	jmp    40b1cc <flatcc_verify_error_string@@Base+0x28c>
  40aff1:	lea    rax,[rip+0x4791]        # 40f789 <flatcc_builder_padding_base@@Base+0x15b9>
  40aff8:	mov    QWORD PTR [rbp-0x8],rax
  40affc:	jmp    40b1cc <flatcc_verify_error_string@@Base+0x28c>
  40b001:	lea    rax,[rip+0x4795]        # 40f79d <flatcc_builder_padding_base@@Base+0x15cd>
  40b008:	mov    QWORD PTR [rbp-0x8],rax
  40b00c:	jmp    40b1cc <flatcc_verify_error_string@@Base+0x28c>
  40b011:	lea    rax,[rip+0x4799]        # 40f7b1 <flatcc_builder_padding_base@@Base+0x15e1>
  40b018:	mov    QWORD PTR [rbp-0x8],rax
  40b01c:	jmp    40b1cc <flatcc_verify_error_string@@Base+0x28c>
  40b021:	lea    rax,[rip+0x479e]        # 40f7c6 <flatcc_builder_padding_base@@Base+0x15f6>
  40b028:	mov    QWORD PTR [rbp-0x8],rax
  40b02c:	jmp    40b1cc <flatcc_verify_error_string@@Base+0x28c>
  40b031:	lea    rax,[rip+0x479f]        # 40f7d7 <flatcc_builder_padding_base@@Base+0x1607>
  40b038:	mov    QWORD PTR [rbp-0x8],rax
  40b03c:	jmp    40b1cc <flatcc_verify_error_string@@Base+0x28c>
  40b041:	lea    rax,[rip+0x47a7]        # 40f7ef <flatcc_builder_padding_base@@Base+0x161f>
  40b048:	mov    QWORD PTR [rbp-0x8],rax
  40b04c:	jmp    40b1cc <flatcc_verify_error_string@@Base+0x28c>
  40b051:	lea    rax,[rip+0x47b0]        # 40f808 <flatcc_builder_padding_base@@Base+0x1638>
  40b058:	mov    QWORD PTR [rbp-0x8],rax
  40b05c:	jmp    40b1cc <flatcc_verify_error_string@@Base+0x28c>
  40b061:	lea    rax,[rip+0x47ba]        # 40f822 <flatcc_builder_padding_base@@Base+0x1652>
  40b068:	mov    QWORD PTR [rbp-0x8],rax
  40b06c:	jmp    40b1cc <flatcc_verify_error_string@@Base+0x28c>
  40b071:	lea    rax,[rip+0x47d1]        # 40f849 <flatcc_builder_padding_base@@Base+0x1679>
  40b078:	mov    QWORD PTR [rbp-0x8],rax
  40b07c:	jmp    40b1cc <flatcc_verify_error_string@@Base+0x28c>
  40b081:	lea    rax,[rip+0x47e9]        # 40f871 <flatcc_builder_padding_base@@Base+0x16a1>
  40b088:	mov    QWORD PTR [rbp-0x8],rax
  40b08c:	jmp    40b1cc <flatcc_verify_error_string@@Base+0x28c>
  40b091:	lea    rax,[rip+0x4801]        # 40f899 <flatcc_builder_padding_base@@Base+0x16c9>
  40b098:	mov    QWORD PTR [rbp-0x8],rax
  40b09c:	jmp    40b1cc <flatcc_verify_error_string@@Base+0x28c>
  40b0a1:	lea    rax,[rip+0x4945]        # 40f9ed <flatcc_builder_padding_base@@Base+0x181d>
  40b0a8:	mov    QWORD PTR [rbp-0x8],rax
  40b0ac:	jmp    40b1cc <flatcc_verify_error_string@@Base+0x28c>
  40b0b1:	lea    rax,[rip+0x47f5]        # 40f8ad <flatcc_builder_padding_base@@Base+0x16dd>
  40b0b8:	mov    QWORD PTR [rbp-0x8],rax
  40b0bc:	jmp    40b1cc <flatcc_verify_error_string@@Base+0x28c>
  40b0c1:	lea    rax,[rip+0x47fd]        # 40f8c5 <flatcc_builder_padding_base@@Base+0x16f5>
  40b0c8:	mov    QWORD PTR [rbp-0x8],rax
  40b0cc:	jmp    40b1cc <flatcc_verify_error_string@@Base+0x28c>
  40b0d1:	lea    rax,[rip+0x4819]        # 40f8f1 <flatcc_builder_padding_base@@Base+0x1721>
  40b0d8:	mov    QWORD PTR [rbp-0x8],rax
  40b0dc:	jmp    40b1cc <flatcc_verify_error_string@@Base+0x28c>
  40b0e1:	lea    rax,[rip+0x483c]        # 40f924 <flatcc_builder_padding_base@@Base+0x1754>
  40b0e8:	mov    QWORD PTR [rbp-0x8],rax
  40b0ec:	jmp    40b1cc <flatcc_verify_error_string@@Base+0x28c>
  40b0f1:	lea    rax,[rip+0x4855]        # 40f94d <flatcc_builder_padding_base@@Base+0x177d>
  40b0f8:	mov    QWORD PTR [rbp-0x8],rax
  40b0fc:	jmp    40b1cc <flatcc_verify_error_string@@Base+0x28c>
  40b101:	lea    rax,[rip+0x486e]        # 40f976 <flatcc_builder_padding_base@@Base+0x17a6>
  40b108:	mov    QWORD PTR [rbp-0x8],rax
  40b10c:	jmp    40b1cc <flatcc_verify_error_string@@Base+0x28c>
  40b111:	lea    rax,[rip+0x488d]        # 40f9a5 <flatcc_builder_padding_base@@Base+0x17d5>
  40b118:	mov    QWORD PTR [rbp-0x8],rax
  40b11c:	jmp    40b1cc <flatcc_verify_error_string@@Base+0x28c>
  40b121:	lea    rax,[rip+0x4891]        # 40f9b9 <flatcc_builder_padding_base@@Base+0x17e9>
  40b128:	mov    QWORD PTR [rbp-0x8],rax
  40b12c:	jmp    40b1cc <flatcc_verify_error_string@@Base+0x28c>
  40b131:	lea    rax,[rip+0x489c]        # 40f9d4 <flatcc_builder_padding_base@@Base+0x1804>
  40b138:	mov    QWORD PTR [rbp-0x8],rax
  40b13c:	jmp    40b1cc <flatcc_verify_error_string@@Base+0x28c>
  40b141:	lea    rax,[rip+0x48a4]        # 40f9ec <flatcc_builder_padding_base@@Base+0x181c>
  40b148:	mov    QWORD PTR [rbp-0x8],rax
  40b14c:	jmp    40b1cc <flatcc_verify_error_string@@Base+0x28c>
  40b151:	lea    rax,[rip+0x48bc]        # 40fa14 <flatcc_builder_padding_base@@Base+0x1844>
  40b158:	mov    QWORD PTR [rbp-0x8],rax
  40b15c:	jmp    40b1cc <flatcc_verify_error_string@@Base+0x28c>
  40b161:	lea    rax,[rip+0x48d2]        # 40fa3a <flatcc_builder_padding_base@@Base+0x186a>
  40b168:	mov    QWORD PTR [rbp-0x8],rax
  40b16c:	jmp    40b1cc <flatcc_verify_error_string@@Base+0x28c>
  40b171:	lea    rax,[rip+0x48d7]        # 40fa4f <flatcc_builder_padding_base@@Base+0x187f>
  40b178:	mov    QWORD PTR [rbp-0x8],rax
  40b17c:	jmp    40b1cc <flatcc_verify_error_string@@Base+0x28c>
  40b181:	lea    rax,[rip+0x48ee]        # 40fa76 <flatcc_builder_padding_base@@Base+0x18a6>
  40b188:	mov    QWORD PTR [rbp-0x8],rax
  40b18c:	jmp    40b1cc <flatcc_verify_error_string@@Base+0x28c>
  40b191:	lea    rax,[rip+0x4903]        # 40fa9b <flatcc_builder_padding_base@@Base+0x18cb>
  40b198:	mov    QWORD PTR [rbp-0x8],rax
  40b19c:	jmp    40b1cc <flatcc_verify_error_string@@Base+0x28c>
  40b1a1:	lea    rax,[rip+0x4927]        # 40facf <flatcc_builder_padding_base@@Base+0x18ff>
  40b1a8:	mov    QWORD PTR [rbp-0x8],rax
  40b1ac:	jmp    40b1cc <flatcc_verify_error_string@@Base+0x28c>
  40b1b1:	lea    rax,[rip+0x4931]        # 40fae9 <flatcc_builder_padding_base@@Base+0x1919>
  40b1b8:	mov    QWORD PTR [rbp-0x8],rax
  40b1bc:	jmp    40b1cc <flatcc_verify_error_string@@Base+0x28c>
  40b1c1:	lea    rax,[rip+0x492f]        # 40faf7 <flatcc_builder_padding_base@@Base+0x1927>
  40b1c8:	mov    QWORD PTR [rbp-0x8],rax
  40b1cc:	mov    rax,QWORD PTR [rbp-0x8]
  40b1d0:	pop    rbp
  40b1d1:	ret    
  40b1d2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40b1dc:	nop    DWORD PTR [rax+0x0]

000000000040b1e0 <flatcc_verify_field@@Base>:
  40b1e0:	push   rbp
  40b1e1:	mov    rbp,rsp
  40b1e4:	sub    rsp,0x30
  40b1e8:	xor    eax,eax
  40b1ea:	mov    QWORD PTR [rbp-0x10],rdi
  40b1ee:	mov    WORD PTR [rbp-0x12],si
  40b1f2:	mov    QWORD PTR [rbp-0x20],rdx
  40b1f6:	mov    WORD PTR [rbp-0x22],cx
  40b1fa:	mov    rdi,QWORD PTR [rbp-0x10]
  40b1fe:	mov    cx,WORD PTR [rbp-0x12]
  40b202:	mov    rdx,QWORD PTR [rbp-0x20]
  40b206:	movzx  esi,cx
  40b209:	mov    DWORD PTR [rbp-0x28],edx
  40b20c:	mov    edx,eax
  40b20e:	mov    ecx,DWORD PTR [rbp-0x28]
  40b211:	movzx  r8d,WORD PTR [rbp-0x22]
  40b216:	call   40b260 <flatcc_verify_field@@Base+0x80>
  40b21b:	cmp    eax,0x0
  40b21e:	je     40b247 <flatcc_verify_field@@Base+0x67>
  40b224:	xor    edx,edx
  40b226:	mov    rdi,QWORD PTR [rbp-0x10]
  40b22a:	mov    ax,WORD PTR [rbp-0x12]
  40b22e:	mov    rcx,QWORD PTR [rbp-0x20]
  40b232:	movzx  esi,ax
  40b235:	movzx  r8d,WORD PTR [rbp-0x22]
  40b23a:	call   40b260 <flatcc_verify_field@@Base+0x80>
  40b23f:	mov    DWORD PTR [rbp-0x4],eax
  40b242:	jmp    40b24e <flatcc_verify_field@@Base+0x6e>
  40b247:	mov    DWORD PTR [rbp-0x4],0x0
  40b24e:	mov    eax,DWORD PTR [rbp-0x4]
  40b251:	add    rsp,0x30
  40b255:	pop    rbp
  40b256:	ret    
  40b257:	nop    WORD PTR [rax+rax*1+0x0]
  40b260:	push   rbp
  40b261:	mov    rbp,rsp
  40b264:	sub    rsp,0x40
  40b268:	mov    QWORD PTR [rbp-0x10],rdi
  40b26c:	mov    WORD PTR [rbp-0x12],si
  40b270:	mov    DWORD PTR [rbp-0x18],edx
  40b273:	mov    DWORD PTR [rbp-0x1c],ecx
  40b276:	mov    WORD PTR [rbp-0x1e],r8w
  40b27b:	mov    rax,QWORD PTR [rbp-0x10]
  40b27f:	mov    rax,QWORD PTR [rax]
  40b282:	mov    DWORD PTR [rbp-0x30],eax
  40b285:	mov    rdi,QWORD PTR [rbp-0x10]
  40b289:	movzx  esi,WORD PTR [rbp-0x12]
  40b28d:	call   40cc50 <flatcc_verify_union_field@@Base+0x240>
  40b292:	mov    WORD PTR [rbp-0x2a],ax
  40b296:	cmp    WORD PTR [rbp-0x2a],0x0
  40b29b:	jne    40b2de <flatcc_verify_field@@Base+0xfe>
  40b2a1:	jmp    40b2a6 <flatcc_verify_field@@Base+0xc6>
  40b2a6:	cmp    DWORD PTR [rbp-0x18],0x0
  40b2aa:	setne  al
  40b2ad:	xor    al,0xff
  40b2af:	and    al,0x1
  40b2b1:	movzx  ecx,al
  40b2b4:	mov    DWORD PTR [rbp-0x34],ecx
  40b2b7:	cmp    DWORD PTR [rbp-0x34],0x0
  40b2bb:	jne    40b2cd <flatcc_verify_field@@Base+0xed>
  40b2c1:	mov    DWORD PTR [rbp-0x4],0x4
  40b2c8:	jmp    40b39c <flatcc_verify_field@@Base+0x1bc>
  40b2cd:	jmp    40b2d2 <flatcc_verify_field@@Base+0xf2>
  40b2d2:	mov    DWORD PTR [rbp-0x4],0x0
  40b2d9:	jmp    40b39c <flatcc_verify_field@@Base+0x1bc>
  40b2de:	movzx  eax,WORD PTR [rbp-0x2a]
  40b2e2:	mov    DWORD PTR [rbp-0x24],eax
  40b2e5:	mov    eax,DWORD PTR [rbp-0x24]
  40b2e8:	add    eax,DWORD PTR [rbp-0x1c]
  40b2eb:	mov    DWORD PTR [rbp-0x28],eax
  40b2ee:	mov    eax,DWORD PTR [rbp-0x28]
  40b2f1:	mov    rcx,QWORD PTR [rbp-0x10]
  40b2f5:	movzx  edx,WORD PTR [rcx+0x1c]
  40b2f9:	cmp    eax,edx
  40b2fb:	setbe  sil
  40b2ff:	and    sil,0x1
  40b303:	movzx  eax,sil
  40b307:	mov    DWORD PTR [rbp-0x38],eax
  40b30a:	cmp    DWORD PTR [rbp-0x38],0x0
  40b30e:	jne    40b320 <flatcc_verify_field@@Base+0x140>
  40b314:	mov    DWORD PTR [rbp-0x4],0xd
  40b31b:	jmp    40b39c <flatcc_verify_field@@Base+0x1bc>
  40b320:	jmp    40b325 <flatcc_verify_field@@Base+0x145>
  40b325:	jmp    40b32a <flatcc_verify_field@@Base+0x14a>
  40b32a:	mov    DWORD PTR [rbp-0x3c],0x1
  40b331:	cmp    DWORD PTR [rbp-0x3c],0x0
  40b335:	jne    40b347 <flatcc_verify_field@@Base+0x167>
  40b33b:	mov    DWORD PTR [rbp-0x4],0xe
  40b342:	jmp    40b39c <flatcc_verify_field@@Base+0x1bc>
  40b347:	jmp    40b34c <flatcc_verify_field@@Base+0x16c>
  40b34c:	mov    rax,QWORD PTR [rbp-0x10]
  40b350:	mov    ecx,DWORD PTR [rax+0x18]
  40b353:	add    ecx,DWORD PTR [rbp-0x30]
  40b356:	add    ecx,DWORD PTR [rbp-0x24]
  40b359:	mov    DWORD PTR [rbp-0x24],ecx
  40b35c:	mov    eax,DWORD PTR [rbp-0x24]
  40b35f:	movzx  ecx,WORD PTR [rbp-0x1e]
  40b363:	sub    ecx,0x1
  40b366:	and    eax,ecx
  40b368:	cmp    eax,0x0
  40b36b:	setne  dl
  40b36e:	xor    dl,0xff
  40b371:	and    dl,0x1
  40b374:	movzx  eax,dl
  40b377:	mov    DWORD PTR [rbp-0x40],eax
  40b37a:	cmp    DWORD PTR [rbp-0x40],0x0
  40b37e:	jne    40b390 <flatcc_verify_field@@Base+0x1b0>
  40b384:	mov    DWORD PTR [rbp-0x4],0xc
  40b38b:	jmp    40b39c <flatcc_verify_field@@Base+0x1bc>
  40b390:	jmp    40b395 <flatcc_verify_field@@Base+0x1b5>
  40b395:	mov    DWORD PTR [rbp-0x4],0x0
  40b39c:	mov    eax,DWORD PTR [rbp-0x4]
  40b39f:	add    rsp,0x40
  40b3a3:	pop    rbp
  40b3a4:	ret    
  40b3a5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40b3af:	nop

000000000040b3b0 <flatcc_verify_string_field@@Base>:
  40b3b0:	push   rbp
  40b3b1:	mov    rbp,rsp
  40b3b4:	sub    rsp,0x30
  40b3b8:	mov    QWORD PTR [rbp-0x10],rdi
  40b3bc:	mov    WORD PTR [rbp-0x12],si
  40b3c0:	mov    DWORD PTR [rbp-0x18],edx
  40b3c3:	mov    rdi,QWORD PTR [rbp-0x10]
  40b3c7:	mov    ax,WORD PTR [rbp-0x12]
  40b3cb:	mov    edx,DWORD PTR [rbp-0x18]
  40b3ce:	movzx  esi,ax
  40b3d1:	lea    rcx,[rbp-0x1c]
  40b3d5:	call   40b450 <flatcc_verify_string_field@@Base+0xa0>
  40b3da:	mov    DWORD PTR [rbp-0x20],eax
  40b3dd:	cmp    DWORD PTR [rbp-0x20],0x0
  40b3e1:	jne    40b3f1 <flatcc_verify_string_field@@Base+0x41>
  40b3e7:	cmp    DWORD PTR [rbp-0x1c],0x0
  40b3eb:	jne    40b3fc <flatcc_verify_string_field@@Base+0x4c>
  40b3f1:	mov    eax,DWORD PTR [rbp-0x20]
  40b3f4:	mov    DWORD PTR [rbp-0x4],eax
  40b3f7:	jmp    40b444 <flatcc_verify_string_field@@Base+0x94>
  40b3fc:	jmp    40b401 <flatcc_verify_string_field@@Base+0x51>
  40b401:	mov    rax,QWORD PTR [rbp-0x10]
  40b405:	mov    rdi,QWORD PTR [rax]
  40b408:	mov    rax,QWORD PTR [rbp-0x10]
  40b40c:	mov    esi,DWORD PTR [rax+0x8]
  40b40f:	mov    edx,DWORD PTR [rbp-0x1c]
  40b412:	mov    rax,QWORD PTR [rbp-0x10]
  40b416:	mov    rax,QWORD PTR [rax]
  40b419:	mov    ecx,DWORD PTR [rbp-0x1c]
  40b41c:	mov    QWORD PTR [rbp-0x28],rdi
  40b420:	mov    rdi,rax
  40b423:	mov    DWORD PTR [rbp-0x2c],esi
  40b426:	mov    esi,ecx
  40b428:	mov    DWORD PTR [rbp-0x30],edx
  40b42b:	call   40b690 <flatcc_verify_string_field@@Base+0x2e0>
  40b430:	mov    rdi,QWORD PTR [rbp-0x28]
  40b434:	mov    esi,DWORD PTR [rbp-0x2c]
  40b437:	mov    edx,DWORD PTR [rbp-0x30]
  40b43a:	mov    ecx,eax
  40b43c:	call   40b590 <flatcc_verify_string_field@@Base+0x1e0>
  40b441:	mov    DWORD PTR [rbp-0x4],eax
  40b444:	mov    eax,DWORD PTR [rbp-0x4]
  40b447:	add    rsp,0x30
  40b44b:	pop    rbp
  40b44c:	ret    
  40b44d:	nop    DWORD PTR [rax]
  40b450:	push   rbp
  40b451:	mov    rbp,rsp
  40b454:	sub    rsp,0x40
  40b458:	mov    QWORD PTR [rbp-0x10],rdi
  40b45c:	mov    WORD PTR [rbp-0x12],si
  40b460:	mov    DWORD PTR [rbp-0x18],edx
  40b463:	mov    QWORD PTR [rbp-0x20],rcx
  40b467:	mov    rdi,QWORD PTR [rbp-0x10]
  40b46b:	movzx  esi,WORD PTR [rbp-0x12]
  40b46f:	call   40cc50 <flatcc_verify_union_field@@Base+0x240>
  40b474:	mov    WORD PTR [rbp-0x2a],ax
  40b478:	cmp    WORD PTR [rbp-0x2a],0x0
  40b47d:	jne    40b4af <flatcc_verify_string_field@@Base+0xff>
  40b483:	mov    rax,QWORD PTR [rbp-0x20]
  40b487:	mov    DWORD PTR [rax],0x0
  40b48d:	cmp    DWORD PTR [rbp-0x18],0x0
  40b491:	je     40b4a3 <flatcc_verify_string_field@@Base+0xf3>
  40b497:	mov    DWORD PTR [rbp-0x4],0x4
  40b49e:	jmp    40b57a <flatcc_verify_string_field@@Base+0x1ca>
  40b4a3:	mov    DWORD PTR [rbp-0x4],0x0
  40b4aa:	jmp    40b57a <flatcc_verify_string_field@@Base+0x1ca>
  40b4af:	movzx  eax,WORD PTR [rbp-0x2a]
  40b4b3:	mov    DWORD PTR [rbp-0x24],eax
  40b4b6:	mov    eax,DWORD PTR [rbp-0x24]
  40b4b9:	mov    ecx,eax
  40b4bb:	add    rcx,0x4
  40b4c2:	mov    DWORD PTR [rbp-0x28],ecx
  40b4c5:	mov    eax,DWORD PTR [rbp-0x28]
  40b4c8:	mov    rcx,QWORD PTR [rbp-0x10]
  40b4cc:	movzx  edx,WORD PTR [rcx+0x1c]
  40b4d0:	cmp    eax,edx
  40b4d2:	setbe  sil
  40b4d6:	and    sil,0x1
  40b4da:	movzx  eax,sil
  40b4de:	mov    DWORD PTR [rbp-0x30],eax
  40b4e1:	cmp    DWORD PTR [rbp-0x30],0x0
  40b4e5:	jne    40b4f7 <flatcc_verify_string_field@@Base+0x147>
  40b4eb:	mov    DWORD PTR [rbp-0x4],0xd
  40b4f2:	jmp    40b57a <flatcc_verify_string_field@@Base+0x1ca>
  40b4f7:	jmp    40b4fc <flatcc_verify_string_field@@Base+0x14c>
  40b4fc:	jmp    40b501 <flatcc_verify_string_field@@Base+0x151>
  40b501:	mov    DWORD PTR [rbp-0x34],0x1
  40b508:	cmp    DWORD PTR [rbp-0x34],0x0
  40b50c:	jne    40b51e <flatcc_verify_string_field@@Base+0x16e>
  40b512:	mov    DWORD PTR [rbp-0x4],0xe
  40b519:	jmp    40b57a <flatcc_verify_string_field@@Base+0x1ca>
  40b51e:	jmp    40b523 <flatcc_verify_string_field@@Base+0x173>
  40b523:	mov    rax,QWORD PTR [rbp-0x10]
  40b527:	mov    ecx,DWORD PTR [rax+0x18]
  40b52a:	add    ecx,DWORD PTR [rbp-0x24]
  40b52d:	mov    DWORD PTR [rbp-0x24],ecx
  40b530:	mov    eax,DWORD PTR [rbp-0x24]
  40b533:	mov    ecx,eax
  40b535:	and    rcx,0x3
  40b53c:	cmp    rcx,0x0
  40b540:	setne  dl
  40b543:	xor    dl,0xff
  40b546:	and    dl,0x1
  40b549:	movzx  eax,dl
  40b54c:	mov    DWORD PTR [rbp-0x38],eax
  40b54f:	cmp    DWORD PTR [rbp-0x38],0x0
  40b553:	jne    40b565 <flatcc_verify_string_field@@Base+0x1b5>
  40b559:	mov    DWORD PTR [rbp-0x4],0xc
  40b560:	jmp    40b57a <flatcc_verify_string_field@@Base+0x1ca>
  40b565:	jmp    40b56a <flatcc_verify_string_field@@Base+0x1ba>
  40b56a:	mov    eax,DWORD PTR [rbp-0x24]
  40b56d:	mov    rcx,QWORD PTR [rbp-0x20]
  40b571:	mov    DWORD PTR [rcx],eax
  40b573:	mov    DWORD PTR [rbp-0x4],0x0
  40b57a:	mov    eax,DWORD PTR [rbp-0x4]
  40b57d:	add    rsp,0x40
  40b581:	pop    rbp
  40b582:	ret    
  40b583:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40b58d:	nop    DWORD PTR [rax]
  40b590:	push   rbp
  40b591:	mov    rbp,rsp
  40b594:	sub    rsp,0x30
  40b598:	mov    QWORD PTR [rbp-0x10],rdi
  40b59c:	mov    DWORD PTR [rbp-0x14],esi
  40b59f:	mov    DWORD PTR [rbp-0x18],edx
  40b5a2:	mov    DWORD PTR [rbp-0x1c],ecx
  40b5a5:	mov    edi,DWORD PTR [rbp-0x14]
  40b5a8:	mov    esi,DWORD PTR [rbp-0x18]
  40b5ab:	mov    edx,DWORD PTR [rbp-0x1c]
  40b5ae:	call   40d130 <flatcc_verify_union_vector_field@@Base+0x470>
  40b5b3:	mov    DWORD PTR [rbp-0x24],eax
  40b5b6:	cmp    DWORD PTR [rbp-0x24],0x0
  40b5ba:	jne    40b5cc <flatcc_verify_string_field@@Base+0x21c>
  40b5c0:	mov    DWORD PTR [rbp-0x4],0x11
  40b5c7:	jmp    40b67b <flatcc_verify_string_field@@Base+0x2cb>
  40b5cc:	jmp    40b5d1 <flatcc_verify_string_field@@Base+0x221>
  40b5d1:	mov    eax,DWORD PTR [rbp-0x1c]
  40b5d4:	add    eax,DWORD PTR [rbp-0x18]
  40b5d7:	mov    DWORD PTR [rbp-0x18],eax
  40b5da:	mov    rdi,QWORD PTR [rbp-0x10]
  40b5de:	mov    esi,DWORD PTR [rbp-0x18]
  40b5e1:	call   40b690 <flatcc_verify_string_field@@Base+0x2e0>
  40b5e6:	mov    DWORD PTR [rbp-0x20],eax
  40b5e9:	mov    eax,DWORD PTR [rbp-0x18]
  40b5ec:	mov    ecx,eax
  40b5ee:	add    rcx,0x4
  40b5f5:	mov    DWORD PTR [rbp-0x18],ecx
  40b5f8:	mov    eax,DWORD PTR [rbp-0x14]
  40b5fb:	sub    eax,DWORD PTR [rbp-0x18]
  40b5fe:	mov    ecx,DWORD PTR [rbp-0x20]
  40b601:	add    ecx,0x1
  40b604:	cmp    eax,ecx
  40b606:	setae  dl
  40b609:	and    dl,0x1
  40b60c:	movzx  eax,dl
  40b60f:	mov    DWORD PTR [rbp-0x28],eax
  40b612:	cmp    DWORD PTR [rbp-0x28],0x0
  40b616:	jne    40b628 <flatcc_verify_string_field@@Base+0x278>
  40b61c:	mov    DWORD PTR [rbp-0x4],0x8
  40b623:	jmp    40b67b <flatcc_verify_string_field@@Base+0x2cb>
  40b628:	jmp    40b62d <flatcc_verify_string_field@@Base+0x27d>
  40b62d:	jmp    40b632 <flatcc_verify_string_field@@Base+0x282>
  40b632:	mov    rax,QWORD PTR [rbp-0x10]
  40b636:	mov    ecx,DWORD PTR [rbp-0x18]
  40b639:	mov    edx,ecx
  40b63b:	add    rax,rdx
  40b63e:	mov    ecx,DWORD PTR [rbp-0x20]
  40b641:	mov    edx,ecx
  40b643:	movzx  ecx,BYTE PTR [rax+rdx*1]
  40b647:	cmp    ecx,0x0
  40b64a:	sete   sil
  40b64e:	and    sil,0x1
  40b652:	movzx  ecx,sil
  40b656:	mov    DWORD PTR [rbp-0x2c],ecx
  40b659:	cmp    DWORD PTR [rbp-0x2c],0x0
  40b65d:	jne    40b66f <flatcc_verify_string_field@@Base+0x2bf>
  40b663:	mov    DWORD PTR [rbp-0x4],0x7
  40b66a:	jmp    40b67b <flatcc_verify_string_field@@Base+0x2cb>
  40b66f:	jmp    40b674 <flatcc_verify_string_field@@Base+0x2c4>
  40b674:	mov    DWORD PTR [rbp-0x4],0x0
  40b67b:	mov    eax,DWORD PTR [rbp-0x4]
  40b67e:	add    rsp,0x30
  40b682:	pop    rbp
  40b683:	ret    
  40b684:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40b68e:	xchg   ax,ax
  40b690:	push   rbp
  40b691:	mov    rbp,rsp
  40b694:	sub    rsp,0x10
  40b698:	mov    QWORD PTR [rbp-0x8],rdi
  40b69c:	mov    DWORD PTR [rbp-0xc],esi
  40b69f:	mov    rax,QWORD PTR [rbp-0x8]
  40b6a3:	mov    ecx,DWORD PTR [rbp-0xc]
  40b6a6:	mov    edx,ecx
  40b6a8:	add    rax,rdx
  40b6ab:	mov    rdi,rax
  40b6ae:	call   40d1a0 <flatcc_verify_union_vector_field@@Base+0x4e0>
  40b6b3:	add    rsp,0x10
  40b6b7:	pop    rbp
  40b6b8:	ret    
  40b6b9:	nop    DWORD PTR [rax+0x0]

000000000040b6c0 <flatcc_verify_vector_field@@Base>:
  40b6c0:	push   rbp
  40b6c1:	mov    rbp,rsp
  40b6c4:	push   rbx
  40b6c5:	sub    rsp,0x68
  40b6c9:	mov    QWORD PTR [rbp-0x18],rdi
  40b6cd:	mov    WORD PTR [rbp-0x1a],si
  40b6d1:	mov    DWORD PTR [rbp-0x20],edx
  40b6d4:	mov    QWORD PTR [rbp-0x28],rcx
  40b6d8:	mov    WORD PTR [rbp-0x2a],r8w
  40b6dd:	mov    QWORD PTR [rbp-0x38],r9
  40b6e1:	mov    rdi,QWORD PTR [rbp-0x18]
  40b6e5:	mov    ax,WORD PTR [rbp-0x1a]
  40b6e9:	mov    edx,DWORD PTR [rbp-0x20]
  40b6ec:	movzx  esi,ax
  40b6ef:	lea    rcx,[rbp-0x3c]
  40b6f3:	call   40b450 <flatcc_verify_string_field@@Base+0xa0>
  40b6f8:	mov    DWORD PTR [rbp-0x40],eax
  40b6fb:	cmp    DWORD PTR [rbp-0x40],0x0
  40b6ff:	jne    40b70f <flatcc_verify_vector_field@@Base+0x4f>
  40b705:	cmp    DWORD PTR [rbp-0x3c],0x0
  40b709:	jne    40b71a <flatcc_verify_vector_field@@Base+0x5a>
  40b70f:	mov    eax,DWORD PTR [rbp-0x40]
  40b712:	mov    DWORD PTR [rbp-0xc],eax
  40b715:	jmp    40b796 <flatcc_verify_vector_field@@Base+0xd6>
  40b71a:	jmp    40b71f <flatcc_verify_vector_field@@Base+0x5f>
  40b71f:	mov    rax,QWORD PTR [rbp-0x18]
  40b723:	mov    rdi,QWORD PTR [rax]
  40b726:	mov    rax,QWORD PTR [rbp-0x18]
  40b72a:	mov    esi,DWORD PTR [rax+0x8]
  40b72d:	mov    edx,DWORD PTR [rbp-0x3c]
  40b730:	mov    rax,QWORD PTR [rbp-0x18]
  40b734:	mov    rax,QWORD PTR [rax]
  40b737:	mov    ecx,DWORD PTR [rbp-0x3c]
  40b73a:	mov    QWORD PTR [rbp-0x48],rdi
  40b73e:	mov    rdi,rax
  40b741:	mov    DWORD PTR [rbp-0x4c],esi
  40b744:	mov    esi,ecx
  40b746:	mov    DWORD PTR [rbp-0x50],edx
  40b749:	call   40b690 <flatcc_verify_string_field@@Base+0x2e0>
  40b74e:	mov    rdi,QWORD PTR [rbp-0x28]
  40b752:	mov    r8w,WORD PTR [rbp-0x2a]
  40b757:	mov    r9,QWORD PTR [rbp-0x38]
  40b75b:	mov    r10,QWORD PTR [rbp-0x48]
  40b75f:	mov    DWORD PTR [rbp-0x54],edi
  40b762:	mov    rdi,r10
  40b765:	mov    esi,DWORD PTR [rbp-0x4c]
  40b768:	mov    edx,DWORD PTR [rbp-0x50]
  40b76b:	mov    ecx,eax
  40b76d:	mov    eax,DWORD PTR [rbp-0x54]
  40b770:	mov    WORD PTR [rbp-0x56],r8w
  40b775:	mov    r8d,eax
  40b778:	mov    r11w,WORD PTR [rbp-0x56]
  40b77d:	movzx  ebx,r11w
  40b781:	mov    DWORD PTR [rbp-0x5c],r9d
  40b785:	mov    r9d,ebx
  40b788:	mov    ebx,DWORD PTR [rbp-0x5c]
  40b78b:	mov    DWORD PTR [rsp],ebx
  40b78e:	call   40b7a0 <flatcc_verify_vector_field@@Base+0xe0>
  40b793:	mov    DWORD PTR [rbp-0xc],eax
  40b796:	mov    eax,DWORD PTR [rbp-0xc]
  40b799:	add    rsp,0x68
  40b79d:	pop    rbx
  40b79e:	pop    rbp
  40b79f:	ret    
  40b7a0:	push   rbp
  40b7a1:	mov    rbp,rsp
  40b7a4:	sub    rsp,0x40
  40b7a8:	mov    eax,DWORD PTR [rbp+0x10]
  40b7ab:	mov    QWORD PTR [rbp-0x10],rdi
  40b7af:	mov    DWORD PTR [rbp-0x14],esi
  40b7b2:	mov    DWORD PTR [rbp-0x18],edx
  40b7b5:	mov    DWORD PTR [rbp-0x1c],ecx
  40b7b8:	mov    DWORD PTR [rbp-0x20],r8d
  40b7bc:	mov    WORD PTR [rbp-0x22],r9w
  40b7c1:	mov    edi,DWORD PTR [rbp-0x14]
  40b7c4:	mov    esi,DWORD PTR [rbp-0x18]
  40b7c7:	mov    edx,DWORD PTR [rbp-0x1c]
  40b7ca:	movzx  ecx,WORD PTR [rbp-0x22]
  40b7ce:	call   40d1d0 <flatcc_verify_union_vector_field@@Base+0x510>
  40b7d3:	mov    DWORD PTR [rbp-0x2c],eax
  40b7d6:	cmp    DWORD PTR [rbp-0x2c],0x0
  40b7da:	jne    40b7ec <flatcc_verify_vector_field@@Base+0x12c>
  40b7e0:	mov    DWORD PTR [rbp-0x4],0x10
  40b7e7:	jmp    40b887 <flatcc_verify_vector_field@@Base+0x1c7>
  40b7ec:	jmp    40b7f1 <flatcc_verify_vector_field@@Base+0x131>
  40b7f1:	mov    eax,DWORD PTR [rbp-0x1c]
  40b7f4:	add    eax,DWORD PTR [rbp-0x18]
  40b7f7:	mov    DWORD PTR [rbp-0x18],eax
  40b7fa:	mov    rdi,QWORD PTR [rbp-0x10]
  40b7fe:	mov    esi,DWORD PTR [rbp-0x18]
  40b801:	call   40b690 <flatcc_verify_string_field@@Base+0x2e0>
  40b806:	mov    DWORD PTR [rbp-0x28],eax
  40b809:	mov    eax,DWORD PTR [rbp-0x18]
  40b80c:	mov    ecx,eax
  40b80e:	add    rcx,0x4
  40b815:	mov    DWORD PTR [rbp-0x18],ecx
  40b818:	mov    eax,DWORD PTR [rbp-0x28]
  40b81b:	cmp    eax,DWORD PTR [rbp+0x10]
  40b81e:	setbe  cl
  40b821:	and    cl,0x1
  40b824:	movzx  eax,cl
  40b827:	mov    DWORD PTR [rbp-0x30],eax
  40b82a:	cmp    DWORD PTR [rbp-0x30],0x0
  40b82e:	jne    40b840 <flatcc_verify_vector_field@@Base+0x180>
  40b834:	mov    DWORD PTR [rbp-0x4],0x19
  40b83b:	jmp    40b887 <flatcc_verify_vector_field@@Base+0x1c7>
  40b840:	jmp    40b845 <flatcc_verify_vector_field@@Base+0x185>
  40b845:	jmp    40b84a <flatcc_verify_vector_field@@Base+0x18a>
  40b84a:	mov    eax,DWORD PTR [rbp-0x14]
  40b84d:	sub    eax,DWORD PTR [rbp-0x18]
  40b850:	mov    ecx,DWORD PTR [rbp-0x28]
  40b853:	imul   ecx,DWORD PTR [rbp-0x20]
  40b857:	cmp    eax,ecx
  40b859:	setae  dl
  40b85c:	and    dl,0x1
  40b85f:	movzx  eax,dl
  40b862:	mov    DWORD PTR [rbp-0x34],eax
  40b865:	cmp    DWORD PTR [rbp-0x34],0x0
  40b869:	jne    40b87b <flatcc_verify_vector_field@@Base+0x1bb>
  40b86f:	mov    DWORD PTR [rbp-0x4],0x1a
  40b876:	jmp    40b887 <flatcc_verify_vector_field@@Base+0x1c7>
  40b87b:	jmp    40b880 <flatcc_verify_vector_field@@Base+0x1c0>
  40b880:	mov    DWORD PTR [rbp-0x4],0x0
  40b887:	mov    eax,DWORD PTR [rbp-0x4]
  40b88a:	add    rsp,0x40
  40b88e:	pop    rbp
  40b88f:	ret    

000000000040b890 <flatcc_verify_string_vector_field@@Base>:
  40b890:	push   rbp
  40b891:	mov    rbp,rsp
  40b894:	sub    rsp,0x30
  40b898:	mov    QWORD PTR [rbp-0x10],rdi
  40b89c:	mov    WORD PTR [rbp-0x12],si
  40b8a0:	mov    DWORD PTR [rbp-0x18],edx
  40b8a3:	mov    rdi,QWORD PTR [rbp-0x10]
  40b8a7:	mov    ax,WORD PTR [rbp-0x12]
  40b8ab:	mov    edx,DWORD PTR [rbp-0x18]
  40b8ae:	movzx  esi,ax
  40b8b1:	lea    rcx,[rbp-0x1c]
  40b8b5:	call   40b450 <flatcc_verify_string_field@@Base+0xa0>
  40b8ba:	mov    DWORD PTR [rbp-0x20],eax
  40b8bd:	cmp    DWORD PTR [rbp-0x20],0x0
  40b8c1:	jne    40b8d1 <flatcc_verify_string_vector_field@@Base+0x41>
  40b8c7:	cmp    DWORD PTR [rbp-0x1c],0x0
  40b8cb:	jne    40b8dc <flatcc_verify_string_vector_field@@Base+0x4c>
  40b8d1:	mov    eax,DWORD PTR [rbp-0x20]
  40b8d4:	mov    DWORD PTR [rbp-0x4],eax
  40b8d7:	jmp    40b924 <flatcc_verify_string_vector_field@@Base+0x94>
  40b8dc:	jmp    40b8e1 <flatcc_verify_string_vector_field@@Base+0x51>
  40b8e1:	mov    rax,QWORD PTR [rbp-0x10]
  40b8e5:	mov    rdi,QWORD PTR [rax]
  40b8e8:	mov    rax,QWORD PTR [rbp-0x10]
  40b8ec:	mov    esi,DWORD PTR [rax+0x8]
  40b8ef:	mov    edx,DWORD PTR [rbp-0x1c]
  40b8f2:	mov    rax,QWORD PTR [rbp-0x10]
  40b8f6:	mov    rax,QWORD PTR [rax]
  40b8f9:	mov    ecx,DWORD PTR [rbp-0x1c]
  40b8fc:	mov    QWORD PTR [rbp-0x28],rdi
  40b900:	mov    rdi,rax
  40b903:	mov    DWORD PTR [rbp-0x2c],esi
  40b906:	mov    esi,ecx
  40b908:	mov    DWORD PTR [rbp-0x30],edx
  40b90b:	call   40b690 <flatcc_verify_string_field@@Base+0x2e0>
  40b910:	mov    rdi,QWORD PTR [rbp-0x28]
  40b914:	mov    esi,DWORD PTR [rbp-0x2c]
  40b917:	mov    edx,DWORD PTR [rbp-0x30]
  40b91a:	mov    ecx,eax
  40b91c:	call   40b930 <flatcc_verify_string_vector_field@@Base+0xa0>
  40b921:	mov    DWORD PTR [rbp-0x4],eax
  40b924:	mov    eax,DWORD PTR [rbp-0x4]
  40b927:	add    rsp,0x30
  40b92b:	pop    rbp
  40b92c:	ret    
  40b92d:	nop    DWORD PTR [rax]
  40b930:	push   rbp
  40b931:	mov    rbp,rsp
  40b934:	sub    rsp,0x50
  40b938:	mov    QWORD PTR [rbp-0x10],rdi
  40b93c:	mov    DWORD PTR [rbp-0x14],esi
  40b93f:	mov    DWORD PTR [rbp-0x18],edx
  40b942:	mov    DWORD PTR [rbp-0x1c],ecx
  40b945:	mov    rdi,QWORD PTR [rbp-0x10]
  40b949:	mov    esi,DWORD PTR [rbp-0x14]
  40b94c:	mov    edx,DWORD PTR [rbp-0x18]
  40b94f:	mov    ecx,DWORD PTR [rbp-0x1c]
  40b952:	mov    eax,0x4
  40b957:	mov    r8d,eax
  40b95a:	mov    r9d,eax
  40b95d:	mov    DWORD PTR [rsp],0x3fffffff
  40b964:	call   40b7a0 <flatcc_verify_vector_field@@Base+0xe0>
  40b969:	cmp    eax,0x0
  40b96c:	je     40b99e <flatcc_verify_string_vector_field@@Base+0x10e>
  40b972:	mov    rdi,QWORD PTR [rbp-0x10]
  40b976:	mov    esi,DWORD PTR [rbp-0x14]
  40b979:	mov    edx,DWORD PTR [rbp-0x18]
  40b97c:	mov    ecx,DWORD PTR [rbp-0x1c]
  40b97f:	mov    eax,0x4
  40b984:	mov    r8d,eax
  40b987:	mov    r9d,eax
  40b98a:	mov    DWORD PTR [rsp],0x3fffffff
  40b991:	call   40b7a0 <flatcc_verify_vector_field@@Base+0xe0>
  40b996:	mov    DWORD PTR [rbp-0x4],eax
  40b999:	jmp    40ba7e <flatcc_verify_string_vector_field@@Base+0x1ee>
  40b99e:	mov    eax,DWORD PTR [rbp-0x1c]
  40b9a1:	add    eax,DWORD PTR [rbp-0x18]
  40b9a4:	mov    DWORD PTR [rbp-0x18],eax
  40b9a7:	mov    rdi,QWORD PTR [rbp-0x10]
  40b9ab:	mov    esi,DWORD PTR [rbp-0x18]
  40b9ae:	call   40b690 <flatcc_verify_string_field@@Base+0x2e0>
  40b9b3:	mov    DWORD PTR [rbp-0x24],eax
  40b9b6:	mov    eax,DWORD PTR [rbp-0x18]
  40b9b9:	mov    ecx,eax
  40b9bb:	add    rcx,0x4
  40b9c2:	mov    DWORD PTR [rbp-0x18],ecx
  40b9c5:	mov    DWORD PTR [rbp-0x20],0x0
  40b9cc:	mov    eax,DWORD PTR [rbp-0x20]
  40b9cf:	cmp    eax,DWORD PTR [rbp-0x24]
  40b9d2:	jae    40ba77 <flatcc_verify_string_vector_field@@Base+0x1e7>
  40b9d8:	mov    rdi,QWORD PTR [rbp-0x10]
  40b9dc:	mov    esi,DWORD PTR [rbp-0x14]
  40b9df:	mov    edx,DWORD PTR [rbp-0x18]
  40b9e2:	mov    rax,QWORD PTR [rbp-0x10]
  40b9e6:	mov    ecx,DWORD PTR [rbp-0x18]
  40b9e9:	mov    QWORD PTR [rbp-0x30],rdi
  40b9ed:	mov    rdi,rax
  40b9f0:	mov    DWORD PTR [rbp-0x34],esi
  40b9f3:	mov    esi,ecx
  40b9f5:	mov    DWORD PTR [rbp-0x38],edx
  40b9f8:	call   40b690 <flatcc_verify_string_field@@Base+0x2e0>
  40b9fd:	mov    rdi,QWORD PTR [rbp-0x30]
  40ba01:	mov    esi,DWORD PTR [rbp-0x34]
  40ba04:	mov    edx,DWORD PTR [rbp-0x38]
  40ba07:	mov    ecx,eax
  40ba09:	call   40b590 <flatcc_verify_string_field@@Base+0x1e0>
  40ba0e:	cmp    eax,0x0
  40ba11:	je     40ba55 <flatcc_verify_string_vector_field@@Base+0x1c5>
  40ba17:	mov    rdi,QWORD PTR [rbp-0x10]
  40ba1b:	mov    esi,DWORD PTR [rbp-0x14]
  40ba1e:	mov    edx,DWORD PTR [rbp-0x18]
  40ba21:	mov    rax,QWORD PTR [rbp-0x10]
  40ba25:	mov    ecx,DWORD PTR [rbp-0x18]
  40ba28:	mov    QWORD PTR [rbp-0x40],rdi
  40ba2c:	mov    rdi,rax
  40ba2f:	mov    DWORD PTR [rbp-0x44],esi
  40ba32:	mov    esi,ecx
  40ba34:	mov    DWORD PTR [rbp-0x48],edx
  40ba37:	call   40b690 <flatcc_verify_string_field@@Base+0x2e0>
  40ba3c:	mov    rdi,QWORD PTR [rbp-0x40]
  40ba40:	mov    esi,DWORD PTR [rbp-0x44]
  40ba43:	mov    edx,DWORD PTR [rbp-0x48]
  40ba46:	mov    ecx,eax
  40ba48:	call   40b590 <flatcc_verify_string_field@@Base+0x1e0>
  40ba4d:	mov    DWORD PTR [rbp-0x4],eax
  40ba50:	jmp    40ba7e <flatcc_verify_string_vector_field@@Base+0x1ee>
  40ba55:	jmp    40ba5a <flatcc_verify_string_vector_field@@Base+0x1ca>
  40ba5a:	mov    eax,DWORD PTR [rbp-0x20]
  40ba5d:	add    eax,0x1
  40ba60:	mov    DWORD PTR [rbp-0x20],eax
  40ba63:	mov    eax,DWORD PTR [rbp-0x18]
  40ba66:	mov    ecx,eax
  40ba68:	add    rcx,0x4
  40ba6f:	mov    DWORD PTR [rbp-0x18],ecx
  40ba72:	jmp    40b9cc <flatcc_verify_string_vector_field@@Base+0x13c>
  40ba77:	mov    DWORD PTR [rbp-0x4],0x0
  40ba7e:	mov    eax,DWORD PTR [rbp-0x4]
  40ba81:	add    rsp,0x50
  40ba85:	pop    rbp
  40ba86:	ret    
  40ba87:	nop    WORD PTR [rax+rax*1+0x0]

000000000040ba90 <flatcc_verify_table_field@@Base>:
  40ba90:	push   rbp
  40ba91:	mov    rbp,rsp
  40ba94:	sub    rsp,0x40
  40ba98:	mov    QWORD PTR [rbp-0x10],rdi
  40ba9c:	mov    WORD PTR [rbp-0x12],si
  40baa0:	mov    DWORD PTR [rbp-0x18],edx
  40baa3:	mov    QWORD PTR [rbp-0x20],rcx
  40baa7:	mov    rdi,QWORD PTR [rbp-0x10]
  40baab:	mov    ax,WORD PTR [rbp-0x12]
  40baaf:	mov    edx,DWORD PTR [rbp-0x18]
  40bab2:	movzx  esi,ax
  40bab5:	lea    rcx,[rbp-0x24]
  40bab9:	call   40b450 <flatcc_verify_string_field@@Base+0xa0>
  40babe:	mov    DWORD PTR [rbp-0x28],eax
  40bac1:	cmp    DWORD PTR [rbp-0x28],0x0
  40bac5:	jne    40bad5 <flatcc_verify_table_field@@Base+0x45>
  40bacb:	cmp    DWORD PTR [rbp-0x24],0x0
  40bacf:	jne    40bae0 <flatcc_verify_table_field@@Base+0x50>
  40bad5:	mov    eax,DWORD PTR [rbp-0x28]
  40bad8:	mov    DWORD PTR [rbp-0x4],eax
  40badb:	jmp    40bb34 <flatcc_verify_table_field@@Base+0xa4>
  40bae0:	jmp    40bae5 <flatcc_verify_table_field@@Base+0x55>
  40bae5:	mov    rax,QWORD PTR [rbp-0x10]
  40bae9:	mov    rdi,QWORD PTR [rax]
  40baec:	mov    rax,QWORD PTR [rbp-0x10]
  40baf0:	mov    esi,DWORD PTR [rax+0x8]
  40baf3:	mov    edx,DWORD PTR [rbp-0x24]
  40baf6:	mov    rax,QWORD PTR [rbp-0x10]
  40bafa:	mov    rax,QWORD PTR [rax]
  40bafd:	mov    ecx,DWORD PTR [rbp-0x24]
  40bb00:	mov    QWORD PTR [rbp-0x30],rdi
  40bb04:	mov    rdi,rax
  40bb07:	mov    DWORD PTR [rbp-0x34],esi
  40bb0a:	mov    esi,ecx
  40bb0c:	mov    DWORD PTR [rbp-0x38],edx
  40bb0f:	call   40b690 <flatcc_verify_string_field@@Base+0x2e0>
  40bb14:	mov    rdi,QWORD PTR [rbp-0x10]
  40bb18:	mov    r8d,DWORD PTR [rdi+0xc]
  40bb1c:	mov    r9,QWORD PTR [rbp-0x20]
  40bb20:	mov    rdi,QWORD PTR [rbp-0x30]
  40bb24:	mov    esi,DWORD PTR [rbp-0x34]
  40bb27:	mov    edx,DWORD PTR [rbp-0x38]
  40bb2a:	mov    ecx,eax
  40bb2c:	call   40bb40 <flatcc_verify_table_field@@Base+0xb0>
  40bb31:	mov    DWORD PTR [rbp-0x4],eax
  40bb34:	mov    eax,DWORD PTR [rbp-0x4]
  40bb37:	add    rsp,0x40
  40bb3b:	pop    rbp
  40bb3c:	ret    
  40bb3d:	nop    DWORD PTR [rax]
  40bb40:	push   rbp
  40bb41:	mov    rbp,rsp
  40bb44:	sub    rsp,0x80
  40bb4b:	mov    QWORD PTR [rbp-0x10],rdi
  40bb4f:	mov    DWORD PTR [rbp-0x14],esi
  40bb52:	mov    DWORD PTR [rbp-0x18],edx
  40bb55:	mov    DWORD PTR [rbp-0x1c],ecx
  40bb58:	mov    DWORD PTR [rbp-0x20],r8d
  40bb5c:	mov    QWORD PTR [rbp-0x28],r9
  40bb60:	mov    eax,DWORD PTR [rbp-0x20]
  40bb63:	sub    eax,0x1
  40bb66:	mov    DWORD PTR [rbp-0x44],eax
  40bb69:	mov    DWORD PTR [rbp-0x54],eax
  40bb6c:	cmp    DWORD PTR [rbp-0x54],0x0
  40bb70:	jne    40bb82 <flatcc_verify_table_field@@Base+0xf2>
  40bb76:	mov    DWORD PTR [rbp-0x4],0x3
  40bb7d:	jmp    40bdac <flatcc_verify_table_field@@Base+0x31c>
  40bb82:	jmp    40bb87 <flatcc_verify_table_field@@Base+0xf7>
  40bb87:	jmp    40bb8c <flatcc_verify_table_field@@Base+0xfc>
  40bb8c:	mov    edi,DWORD PTR [rbp-0x14]
  40bb8f:	mov    esi,DWORD PTR [rbp-0x18]
  40bb92:	mov    edx,DWORD PTR [rbp-0x1c]
  40bb95:	call   40d130 <flatcc_verify_union_vector_field@@Base+0x470>
  40bb9a:	mov    DWORD PTR [rbp-0x58],eax
  40bb9d:	cmp    DWORD PTR [rbp-0x58],0x0
  40bba1:	jne    40bbb3 <flatcc_verify_table_field@@Base+0x123>
  40bba7:	mov    DWORD PTR [rbp-0x4],0xf
  40bbae:	jmp    40bdac <flatcc_verify_table_field@@Base+0x31c>
  40bbb3:	jmp    40bbb8 <flatcc_verify_table_field@@Base+0x128>
  40bbb8:	mov    eax,DWORD PTR [rbp-0x18]
  40bbbb:	add    eax,DWORD PTR [rbp-0x1c]
  40bbbe:	mov    DWORD PTR [rbp-0x38],eax
  40bbc1:	mov    eax,DWORD PTR [rbp-0x38]
  40bbc4:	mov    rdi,QWORD PTR [rbp-0x10]
  40bbc8:	mov    esi,DWORD PTR [rbp-0x38]
  40bbcb:	mov    DWORD PTR [rbp-0x74],eax
  40bbce:	call   40b690 <flatcc_verify_string_field@@Base+0x2e0>
  40bbd3:	mov    ecx,DWORD PTR [rbp-0x74]
  40bbd6:	sub    ecx,eax
  40bbd8:	mov    DWORD PTR [rbp-0x2c],ecx
  40bbdb:	xor    eax,eax
  40bbdd:	cmp    DWORD PTR [rbp-0x2c],0x0
  40bbe1:	mov    BYTE PTR [rbp-0x75],al
  40bbe4:	jl     40bc03 <flatcc_verify_table_field@@Base+0x173>
  40bbea:	mov    eax,DWORD PTR [rbp-0x2c]
  40bbed:	mov    ecx,eax
  40bbef:	and    rcx,0x1
  40bbf6:	cmp    rcx,0x0
  40bbfa:	setne  dl
  40bbfd:	xor    dl,0xff
  40bc00:	mov    BYTE PTR [rbp-0x75],dl
  40bc03:	mov    al,BYTE PTR [rbp-0x75]
  40bc06:	and    al,0x1
  40bc08:	movzx  ecx,al
  40bc0b:	mov    DWORD PTR [rbp-0x5c],ecx
  40bc0e:	cmp    DWORD PTR [rbp-0x5c],0x0
  40bc12:	jne    40bc24 <flatcc_verify_table_field@@Base+0x194>
  40bc18:	mov    DWORD PTR [rbp-0x4],0x1d
  40bc1f:	jmp    40bdac <flatcc_verify_table_field@@Base+0x31c>
  40bc24:	jmp    40bc29 <flatcc_verify_table_field@@Base+0x199>
  40bc29:	jmp    40bc2e <flatcc_verify_table_field@@Base+0x19e>
  40bc2e:	mov    eax,DWORD PTR [rbp-0x2c]
  40bc31:	mov    ecx,eax
  40bc33:	add    rcx,0x2
  40bc3a:	mov    eax,DWORD PTR [rbp-0x14]
  40bc3d:	mov    edx,eax
  40bc3f:	cmp    rcx,rdx
  40bc42:	setbe  sil
  40bc46:	and    sil,0x1
  40bc4a:	movzx  eax,sil
  40bc4e:	mov    DWORD PTR [rbp-0x60],eax
  40bc51:	cmp    DWORD PTR [rbp-0x60],0x0
  40bc55:	jne    40bc67 <flatcc_verify_table_field@@Base+0x1d7>
  40bc5b:	mov    DWORD PTR [rbp-0x4],0x1b
  40bc62:	jmp    40bdac <flatcc_verify_table_field@@Base+0x31c>
  40bc67:	jmp    40bc6c <flatcc_verify_table_field@@Base+0x1dc>
  40bc6c:	mov    rdi,QWORD PTR [rbp-0x10]
  40bc70:	mov    esi,DWORD PTR [rbp-0x2c]
  40bc73:	call   40d290 <flatcc_verify_union_vector_field@@Base+0x5d0>
  40bc78:	mov    WORD PTR [rbp-0x32],ax
  40bc7c:	mov    ecx,DWORD PTR [rbp-0x2c]
  40bc7f:	movzx  edx,WORD PTR [rbp-0x32]
  40bc83:	add    ecx,edx
  40bc85:	mov    DWORD PTR [rbp-0x30],ecx
  40bc88:	xor    eax,eax
  40bc8a:	mov    ecx,DWORD PTR [rbp-0x30]
  40bc8d:	cmp    ecx,DWORD PTR [rbp-0x14]
  40bc90:	mov    BYTE PTR [rbp-0x76],al
  40bc93:	ja     40bcb3 <flatcc_verify_table_field@@Base+0x223>
  40bc99:	movzx  eax,WORD PTR [rbp-0x32]
  40bc9d:	mov    ecx,eax
  40bc9f:	and    rcx,0x1
  40bca6:	cmp    rcx,0x0
  40bcaa:	setne  dl
  40bcad:	xor    dl,0xff
  40bcb0:	mov    BYTE PTR [rbp-0x76],dl
  40bcb3:	mov    al,BYTE PTR [rbp-0x76]
  40bcb6:	and    al,0x1
  40bcb8:	movzx  ecx,al
  40bcbb:	mov    DWORD PTR [rbp-0x64],ecx
  40bcbe:	cmp    DWORD PTR [rbp-0x64],0x0
  40bcc2:	jne    40bcd4 <flatcc_verify_table_field@@Base+0x244>
  40bcc8:	mov    DWORD PTR [rbp-0x4],0x1e
  40bccf:	jmp    40bdac <flatcc_verify_table_field@@Base+0x31c>
  40bcd4:	jmp    40bcd9 <flatcc_verify_table_field@@Base+0x249>
  40bcd9:	jmp    40bcde <flatcc_verify_table_field@@Base+0x24e>
  40bcde:	mov    DWORD PTR [rbp-0x68],0x1
  40bce5:	cmp    DWORD PTR [rbp-0x68],0x0
  40bce9:	jne    40bcfb <flatcc_verify_table_field@@Base+0x26b>
  40bcef:	mov    DWORD PTR [rbp-0x4],0x1f
  40bcf6:	jmp    40bdac <flatcc_verify_table_field@@Base+0x31c>
  40bcfb:	jmp    40bd00 <flatcc_verify_table_field@@Base+0x270>
  40bd00:	jmp    40bd05 <flatcc_verify_table_field@@Base+0x275>
  40bd05:	movzx  eax,WORD PTR [rbp-0x32]
  40bd09:	mov    ecx,eax
  40bd0b:	cmp    rcx,0x4
  40bd0f:	setae  dl
  40bd12:	and    dl,0x1
  40bd15:	movzx  eax,dl
  40bd18:	mov    DWORD PTR [rbp-0x6c],eax
  40bd1b:	cmp    DWORD PTR [rbp-0x6c],0x0
  40bd1f:	jne    40bd31 <flatcc_verify_table_field@@Base+0x2a1>
  40bd25:	mov    DWORD PTR [rbp-0x4],0x1c
  40bd2c:	jmp    40bdac <flatcc_verify_table_field@@Base+0x31c>
  40bd31:	jmp    40bd36 <flatcc_verify_table_field@@Base+0x2a6>
  40bd36:	mov    rdi,QWORD PTR [rbp-0x10]
  40bd3a:	mov    eax,DWORD PTR [rbp-0x2c]
  40bd3d:	mov    ecx,eax
  40bd3f:	add    rcx,0x2
  40bd46:	mov    esi,ecx
  40bd48:	call   40d290 <flatcc_verify_union_vector_field@@Base+0x5d0>
  40bd4d:	mov    WORD PTR [rbp-0x34],ax
  40bd51:	mov    eax,DWORD PTR [rbp-0x14]
  40bd54:	sub    eax,DWORD PTR [rbp-0x38]
  40bd57:	movzx  ecx,WORD PTR [rbp-0x34]
  40bd5b:	cmp    eax,ecx
  40bd5d:	setae  dl
  40bd60:	and    dl,0x1
  40bd63:	movzx  eax,dl
  40bd66:	mov    DWORD PTR [rbp-0x70],eax
  40bd69:	cmp    DWORD PTR [rbp-0x70],0x0
  40bd6d:	jne    40bd7f <flatcc_verify_table_field@@Base+0x2ef>
  40bd73:	mov    DWORD PTR [rbp-0x4],0x14
  40bd7a:	jmp    40bdac <flatcc_verify_table_field@@Base+0x31c>
  40bd7f:	jmp    40bd84 <flatcc_verify_table_field@@Base+0x2f4>
  40bd84:	mov    rax,QWORD PTR [rbp-0x10]
  40bd88:	mov    ecx,DWORD PTR [rbp-0x2c]
  40bd8b:	mov    edx,ecx
  40bd8d:	add    rax,rdx
  40bd90:	mov    QWORD PTR [rbp-0x40],rax
  40bd94:	mov    rax,QWORD PTR [rbp-0x10]
  40bd98:	mov    QWORD PTR [rbp-0x50],rax
  40bd9c:	mov    ecx,DWORD PTR [rbp-0x14]
  40bd9f:	mov    DWORD PTR [rbp-0x48],ecx
  40bda2:	lea    rdi,[rbp-0x50]
  40bda6:	call   QWORD PTR [rbp-0x28]
  40bda9:	mov    DWORD PTR [rbp-0x4],eax
  40bdac:	mov    eax,DWORD PTR [rbp-0x4]
  40bdaf:	add    rsp,0x80
  40bdb6:	pop    rbp
  40bdb7:	ret    
  40bdb8:	nop    DWORD PTR [rax+rax*1+0x0]

000000000040bdc0 <flatcc_verify_table_vector_field@@Base>:
  40bdc0:	push   rbp
  40bdc1:	mov    rbp,rsp
  40bdc4:	sub    rsp,0x40
  40bdc8:	mov    QWORD PTR [rbp-0x10],rdi
  40bdcc:	mov    WORD PTR [rbp-0x12],si
  40bdd0:	mov    DWORD PTR [rbp-0x18],edx
  40bdd3:	mov    QWORD PTR [rbp-0x20],rcx
  40bdd7:	mov    rdi,QWORD PTR [rbp-0x10]
  40bddb:	mov    ax,WORD PTR [rbp-0x12]
  40bddf:	mov    edx,DWORD PTR [rbp-0x18]
  40bde2:	movzx  esi,ax
  40bde5:	lea    rcx,[rbp-0x24]
  40bde9:	call   40b450 <flatcc_verify_string_field@@Base+0xa0>
  40bdee:	mov    DWORD PTR [rbp-0x28],eax
  40bdf1:	cmp    DWORD PTR [rbp-0x28],0x0
  40bdf5:	jne    40be05 <flatcc_verify_table_vector_field@@Base+0x45>
  40bdfb:	cmp    DWORD PTR [rbp-0x24],0x0
  40bdff:	jne    40be10 <flatcc_verify_table_vector_field@@Base+0x50>
  40be05:	mov    eax,DWORD PTR [rbp-0x28]
  40be08:	mov    DWORD PTR [rbp-0x4],eax
  40be0b:	jmp    40be64 <flatcc_verify_table_vector_field@@Base+0xa4>
  40be10:	jmp    40be15 <flatcc_verify_table_vector_field@@Base+0x55>
  40be15:	mov    rax,QWORD PTR [rbp-0x10]
  40be19:	mov    rdi,QWORD PTR [rax]
  40be1c:	mov    rax,QWORD PTR [rbp-0x10]
  40be20:	mov    esi,DWORD PTR [rax+0x8]
  40be23:	mov    edx,DWORD PTR [rbp-0x24]
  40be26:	mov    rax,QWORD PTR [rbp-0x10]
  40be2a:	mov    rax,QWORD PTR [rax]
  40be2d:	mov    ecx,DWORD PTR [rbp-0x24]
  40be30:	mov    QWORD PTR [rbp-0x30],rdi
  40be34:	mov    rdi,rax
  40be37:	mov    DWORD PTR [rbp-0x34],esi
  40be3a:	mov    esi,ecx
  40be3c:	mov    DWORD PTR [rbp-0x38],edx
  40be3f:	call   40b690 <flatcc_verify_string_field@@Base+0x2e0>
  40be44:	mov    rdi,QWORD PTR [rbp-0x10]
  40be48:	mov    r8d,DWORD PTR [rdi+0xc]
  40be4c:	mov    r9,QWORD PTR [rbp-0x20]
  40be50:	mov    rdi,QWORD PTR [rbp-0x30]
  40be54:	mov    esi,DWORD PTR [rbp-0x34]
  40be57:	mov    edx,DWORD PTR [rbp-0x38]
  40be5a:	mov    ecx,eax
  40be5c:	call   40be70 <flatcc_verify_table_vector_field@@Base+0xb0>
  40be61:	mov    DWORD PTR [rbp-0x4],eax
  40be64:	mov    eax,DWORD PTR [rbp-0x4]
  40be67:	add    rsp,0x40
  40be6b:	pop    rbp
  40be6c:	ret    
  40be6d:	nop    DWORD PTR [rax]
  40be70:	push   rbp
  40be71:	mov    rbp,rsp
  40be74:	sub    rsp,0x60
  40be78:	mov    QWORD PTR [rbp-0x10],rdi
  40be7c:	mov    DWORD PTR [rbp-0x14],esi
  40be7f:	mov    DWORD PTR [rbp-0x18],edx
  40be82:	mov    DWORD PTR [rbp-0x1c],ecx
  40be85:	mov    DWORD PTR [rbp-0x20],r8d
  40be89:	mov    QWORD PTR [rbp-0x28],r9
  40be8d:	mov    eax,DWORD PTR [rbp-0x20]
  40be90:	mov    ecx,eax
  40be92:	add    ecx,0xffffffff
  40be95:	mov    DWORD PTR [rbp-0x20],ecx
  40be98:	cmp    eax,0x0
  40be9b:	setg   dl
  40be9e:	and    dl,0x1
  40bea1:	movzx  eax,dl
  40bea4:	mov    DWORD PTR [rbp-0x34],eax
  40bea7:	cmp    DWORD PTR [rbp-0x34],0x0
  40beab:	jne    40bebd <flatcc_verify_table_vector_field@@Base+0xfd>
  40beb1:	mov    DWORD PTR [rbp-0x4],0x3
  40beb8:	jmp    40c00b <flatcc_verify_table_vector_field@@Base+0x24b>
  40bebd:	jmp    40bec2 <flatcc_verify_table_vector_field@@Base+0x102>
  40bec2:	mov    rdi,QWORD PTR [rbp-0x10]
  40bec6:	mov    esi,DWORD PTR [rbp-0x14]
  40bec9:	mov    edx,DWORD PTR [rbp-0x18]
  40becc:	mov    ecx,DWORD PTR [rbp-0x1c]
  40becf:	mov    eax,0x4
  40bed4:	mov    r8d,eax
  40bed7:	mov    r9d,eax
  40beda:	mov    DWORD PTR [rsp],0x3fffffff
  40bee1:	call   40b7a0 <flatcc_verify_vector_field@@Base+0xe0>
  40bee6:	cmp    eax,0x0
  40bee9:	je     40bf1b <flatcc_verify_table_vector_field@@Base+0x15b>
  40beef:	mov    rdi,QWORD PTR [rbp-0x10]
  40bef3:	mov    esi,DWORD PTR [rbp-0x14]
  40bef6:	mov    edx,DWORD PTR [rbp-0x18]
  40bef9:	mov    ecx,DWORD PTR [rbp-0x1c]
  40befc:	mov    eax,0x4
  40bf01:	mov    r8d,eax
  40bf04:	mov    r9d,eax
  40bf07:	mov    DWORD PTR [rsp],0x3fffffff
  40bf0e:	call   40b7a0 <flatcc_verify_vector_field@@Base+0xe0>
  40bf13:	mov    DWORD PTR [rbp-0x4],eax
  40bf16:	jmp    40c00b <flatcc_verify_table_vector_field@@Base+0x24b>
  40bf1b:	mov    eax,DWORD PTR [rbp-0x1c]
  40bf1e:	add    eax,DWORD PTR [rbp-0x18]
  40bf21:	mov    DWORD PTR [rbp-0x18],eax
  40bf24:	mov    rdi,QWORD PTR [rbp-0x10]
  40bf28:	mov    esi,DWORD PTR [rbp-0x18]
  40bf2b:	call   40b690 <flatcc_verify_string_field@@Base+0x2e0>
  40bf30:	mov    DWORD PTR [rbp-0x30],eax
  40bf33:	mov    eax,DWORD PTR [rbp-0x18]
  40bf36:	mov    ecx,eax
  40bf38:	add    rcx,0x4
  40bf3f:	mov    DWORD PTR [rbp-0x18],ecx
  40bf42:	mov    DWORD PTR [rbp-0x2c],0x0
  40bf49:	mov    eax,DWORD PTR [rbp-0x2c]
  40bf4c:	cmp    eax,DWORD PTR [rbp-0x30]
  40bf4f:	jae    40c004 <flatcc_verify_table_vector_field@@Base+0x244>
  40bf55:	mov    rdi,QWORD PTR [rbp-0x10]
  40bf59:	mov    esi,DWORD PTR [rbp-0x14]
  40bf5c:	mov    edx,DWORD PTR [rbp-0x18]
  40bf5f:	mov    rax,QWORD PTR [rbp-0x10]
  40bf63:	mov    ecx,DWORD PTR [rbp-0x18]
  40bf66:	mov    QWORD PTR [rbp-0x40],rdi
  40bf6a:	mov    rdi,rax
  40bf6d:	mov    DWORD PTR [rbp-0x44],esi
  40bf70:	mov    esi,ecx
  40bf72:	mov    DWORD PTR [rbp-0x48],edx
  40bf75:	call   40b690 <flatcc_verify_string_field@@Base+0x2e0>
  40bf7a:	mov    r8d,DWORD PTR [rbp-0x20]
  40bf7e:	mov    r9,QWORD PTR [rbp-0x28]
  40bf82:	mov    rdi,QWORD PTR [rbp-0x40]
  40bf86:	mov    esi,DWORD PTR [rbp-0x44]
  40bf89:	mov    edx,DWORD PTR [rbp-0x48]
  40bf8c:	mov    ecx,eax
  40bf8e:	call   40bb40 <flatcc_verify_table_field@@Base+0xb0>
  40bf93:	cmp    eax,0x0
  40bf96:	je     40bfe2 <flatcc_verify_table_vector_field@@Base+0x222>
  40bf9c:	mov    rdi,QWORD PTR [rbp-0x10]
  40bfa0:	mov    esi,DWORD PTR [rbp-0x14]
  40bfa3:	mov    edx,DWORD PTR [rbp-0x18]
  40bfa6:	mov    rax,QWORD PTR [rbp-0x10]
  40bfaa:	mov    ecx,DWORD PTR [rbp-0x18]
  40bfad:	mov    QWORD PTR [rbp-0x50],rdi
  40bfb1:	mov    rdi,rax
  40bfb4:	mov    DWORD PTR [rbp-0x54],esi
  40bfb7:	mov    esi,ecx
  40bfb9:	mov    DWORD PTR [rbp-0x58],edx
  40bfbc:	call   40b690 <flatcc_verify_string_field@@Base+0x2e0>
  40bfc1:	mov    r8d,DWORD PTR [rbp-0x20]
  40bfc5:	mov    r9,QWORD PTR [rbp-0x28]
  40bfc9:	mov    rdi,QWORD PTR [rbp-0x50]
  40bfcd:	mov    esi,DWORD PTR [rbp-0x54]
  40bfd0:	mov    edx,DWORD PTR [rbp-0x58]
  40bfd3:	mov    ecx,eax
  40bfd5:	call   40bb40 <flatcc_verify_table_field@@Base+0xb0>
  40bfda:	mov    DWORD PTR [rbp-0x4],eax
  40bfdd:	jmp    40c00b <flatcc_verify_table_vector_field@@Base+0x24b>
  40bfe2:	jmp    40bfe7 <flatcc_verify_table_vector_field@@Base+0x227>
  40bfe7:	mov    eax,DWORD PTR [rbp-0x2c]
  40bfea:	add    eax,0x1
  40bfed:	mov    DWORD PTR [rbp-0x2c],eax
  40bff0:	mov    eax,DWORD PTR [rbp-0x18]
  40bff3:	mov    ecx,eax
  40bff5:	add    rcx,0x4
  40bffc:	mov    DWORD PTR [rbp-0x18],ecx
  40bfff:	jmp    40bf49 <flatcc_verify_table_vector_field@@Base+0x189>
  40c004:	mov    DWORD PTR [rbp-0x4],0x0
  40c00b:	mov    eax,DWORD PTR [rbp-0x4]
  40c00e:	add    rsp,0x60
  40c012:	pop    rbp
  40c013:	ret    
  40c014:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40c01e:	xchg   ax,ax

000000000040c020 <flatcc_verify_union_table@@Base>:
  40c020:	push   rbp
  40c021:	mov    rbp,rsp
  40c024:	sub    rsp,0x10
  40c028:	mov    QWORD PTR [rbp-0x8],rdi
  40c02c:	mov    QWORD PTR [rbp-0x10],rsi
  40c030:	mov    rax,QWORD PTR [rbp-0x8]
  40c034:	mov    rdi,QWORD PTR [rax]
  40c037:	mov    rax,QWORD PTR [rbp-0x8]
  40c03b:	mov    esi,DWORD PTR [rax+0x8]
  40c03e:	mov    rax,QWORD PTR [rbp-0x8]
  40c042:	mov    edx,DWORD PTR [rax+0x14]
  40c045:	mov    rax,QWORD PTR [rbp-0x8]
  40c049:	mov    ecx,DWORD PTR [rax+0x18]
  40c04c:	mov    rax,QWORD PTR [rbp-0x8]
  40c050:	mov    r8d,DWORD PTR [rax+0xc]
  40c054:	mov    r9,QWORD PTR [rbp-0x10]
  40c058:	call   40bb40 <flatcc_verify_table_field@@Base+0xb0>
  40c05d:	add    rsp,0x10
  40c061:	pop    rbp
  40c062:	ret    
  40c063:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40c06d:	nop    DWORD PTR [rax]

000000000040c070 <flatcc_verify_union_struct@@Base>:
  40c070:	push   rbp
  40c071:	mov    rbp,rsp
  40c074:	sub    rsp,0x20
  40c078:	mov    QWORD PTR [rbp-0x8],rdi
  40c07c:	mov    QWORD PTR [rbp-0x10],rsi
  40c080:	mov    WORD PTR [rbp-0x12],dx
  40c084:	mov    rax,QWORD PTR [rbp-0x8]
  40c088:	mov    edi,DWORD PTR [rax+0x8]
  40c08b:	mov    rax,QWORD PTR [rbp-0x8]
  40c08f:	mov    esi,DWORD PTR [rax+0x14]
  40c092:	mov    rax,QWORD PTR [rbp-0x8]
  40c096:	mov    edx,DWORD PTR [rax+0x18]
  40c099:	mov    rax,QWORD PTR [rbp-0x10]
  40c09d:	mov    ecx,eax
  40c09f:	movzx  r8d,WORD PTR [rbp-0x12]
  40c0a4:	call   40c0b0 <flatcc_verify_union_struct@@Base+0x40>
  40c0a9:	add    rsp,0x20
  40c0ad:	pop    rbp
  40c0ae:	ret    
  40c0af:	nop
  40c0b0:	push   rbp
  40c0b1:	mov    rbp,rsp
  40c0b4:	mov    DWORD PTR [rbp-0x8],edi
  40c0b7:	mov    DWORD PTR [rbp-0xc],esi
  40c0ba:	mov    DWORD PTR [rbp-0x10],edx
  40c0bd:	mov    DWORD PTR [rbp-0x14],ecx
  40c0c0:	mov    WORD PTR [rbp-0x16],r8w
  40c0c5:	cmp    DWORD PTR [rbp-0x10],0x0
  40c0c9:	je     40c0de <flatcc_verify_union_struct@@Base+0x6e>
  40c0cf:	mov    eax,DWORD PTR [rbp-0xc]
  40c0d2:	add    eax,DWORD PTR [rbp-0x10]
  40c0d5:	cmp    eax,DWORD PTR [rbp-0x8]
  40c0d8:	jbe    40c0ea <flatcc_verify_union_struct@@Base+0x7a>
  40c0de:	mov    DWORD PTR [rbp-0x4],0x12
  40c0e5:	jmp    40c19d <flatcc_verify_union_struct@@Base+0x12d>
  40c0ea:	mov    eax,DWORD PTR [rbp-0x10]
  40c0ed:	add    eax,DWORD PTR [rbp-0xc]
  40c0f0:	mov    DWORD PTR [rbp-0xc],eax
  40c0f3:	mov    eax,DWORD PTR [rbp-0xc]
  40c0f6:	add    eax,DWORD PTR [rbp-0x14]
  40c0f9:	cmp    eax,DWORD PTR [rbp-0xc]
  40c0fc:	setae  cl
  40c0ff:	and    cl,0x1
  40c102:	movzx  eax,cl
  40c105:	mov    DWORD PTR [rbp-0x1c],eax
  40c108:	cmp    DWORD PTR [rbp-0x1c],0x0
  40c10c:	jne    40c11e <flatcc_verify_union_struct@@Base+0xae>
  40c112:	mov    DWORD PTR [rbp-0x4],0xa
  40c119:	jmp    40c19d <flatcc_verify_union_struct@@Base+0x12d>
  40c11e:	jmp    40c123 <flatcc_verify_union_struct@@Base+0xb3>
  40c123:	jmp    40c128 <flatcc_verify_union_struct@@Base+0xb8>
  40c128:	mov    eax,DWORD PTR [rbp-0xc]
  40c12b:	add    eax,DWORD PTR [rbp-0x14]
  40c12e:	cmp    eax,DWORD PTR [rbp-0x8]
  40c131:	setbe  cl
  40c134:	and    cl,0x1
  40c137:	movzx  eax,cl
  40c13a:	mov    DWORD PTR [rbp-0x20],eax
  40c13d:	cmp    DWORD PTR [rbp-0x20],0x0
  40c141:	jne    40c153 <flatcc_verify_union_struct@@Base+0xe3>
  40c147:	mov    DWORD PTR [rbp-0x4],0x9
  40c14e:	jmp    40c19d <flatcc_verify_union_struct@@Base+0x12d>
  40c153:	jmp    40c158 <flatcc_verify_union_struct@@Base+0xe8>
  40c158:	jmp    40c15d <flatcc_verify_union_struct@@Base+0xed>
  40c15d:	mov    eax,DWORD PTR [rbp-0xc]
  40c160:	movzx  ecx,WORD PTR [rbp-0x16]
  40c164:	sub    ecx,0x1
  40c167:	and    eax,ecx
  40c169:	cmp    eax,0x0
  40c16c:	setne  dl
  40c16f:	xor    dl,0xff
  40c172:	and    dl,0x1
  40c175:	movzx  eax,dl
  40c178:	mov    DWORD PTR [rbp-0x24],eax
  40c17b:	cmp    DWORD PTR [rbp-0x24],0x0
  40c17f:	jne    40c191 <flatcc_verify_union_struct@@Base+0x121>
  40c185:	mov    DWORD PTR [rbp-0x4],0xb
  40c18c:	jmp    40c19d <flatcc_verify_union_struct@@Base+0x12d>
  40c191:	jmp    40c196 <flatcc_verify_union_struct@@Base+0x126>
  40c196:	mov    DWORD PTR [rbp-0x4],0x0
  40c19d:	mov    eax,DWORD PTR [rbp-0x4]
  40c1a0:	pop    rbp
  40c1a1:	ret    
  40c1a2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40c1ac:	nop    DWORD PTR [rax+0x0]

000000000040c1b0 <flatcc_verify_union_string@@Base>:
  40c1b0:	push   rbp
  40c1b1:	mov    rbp,rsp
  40c1b4:	sub    rsp,0x10
  40c1b8:	mov    QWORD PTR [rbp-0x8],rdi
  40c1bc:	mov    rax,QWORD PTR [rbp-0x8]
  40c1c0:	mov    rdi,QWORD PTR [rax]
  40c1c3:	mov    rax,QWORD PTR [rbp-0x8]
  40c1c7:	mov    esi,DWORD PTR [rax+0x8]
  40c1ca:	mov    rax,QWORD PTR [rbp-0x8]
  40c1ce:	mov    edx,DWORD PTR [rax+0x14]
  40c1d1:	mov    rax,QWORD PTR [rbp-0x8]
  40c1d5:	mov    ecx,DWORD PTR [rax+0x18]
  40c1d8:	call   40b590 <flatcc_verify_string_field@@Base+0x1e0>
  40c1dd:	add    rsp,0x10
  40c1e1:	pop    rbp
  40c1e2:	ret    
  40c1e3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40c1ed:	nop    DWORD PTR [rax]

000000000040c1f0 <flatcc_verify_buffer_header@@Base>:
  40c1f0:	push   rbp
  40c1f1:	mov    rbp,rsp
  40c1f4:	sub    rsp,0x40
  40c1f8:	mov    QWORD PTR [rbp-0x10],rdi
  40c1fc:	mov    QWORD PTR [rbp-0x18],rsi
  40c200:	mov    QWORD PTR [rbp-0x20],rdx
  40c204:	mov    rax,QWORD PTR [rbp-0x10]
  40c208:	and    rax,0x3
  40c20e:	cmp    rax,0x0
  40c212:	setne  cl
  40c215:	xor    cl,0xff
  40c218:	and    cl,0x1
  40c21b:	movzx  edx,cl
  40c21e:	mov    DWORD PTR [rbp-0x2c],edx
  40c221:	cmp    DWORD PTR [rbp-0x2c],0x0
  40c225:	jne    40c237 <flatcc_verify_buffer_header@@Base+0x47>
  40c22b:	mov    DWORD PTR [rbp-0x4],0x5
  40c232:	jmp    40c316 <flatcc_verify_buffer_header@@Base+0x126>
  40c237:	jmp    40c23c <flatcc_verify_buffer_header@@Base+0x4c>
  40c23c:	jmp    40c241 <flatcc_verify_buffer_header@@Base+0x51>
  40c241:	mov    eax,0xfffffff7
  40c246:	cmp    QWORD PTR [rbp-0x18],rax
  40c24a:	setbe  cl
  40c24d:	and    cl,0x1
  40c250:	movzx  edx,cl
  40c253:	mov    DWORD PTR [rbp-0x30],edx
  40c256:	cmp    DWORD PTR [rbp-0x30],0x0
  40c25a:	jne    40c26c <flatcc_verify_buffer_header@@Base+0x7c>
  40c260:	mov    DWORD PTR [rbp-0x4],0x6
  40c267:	jmp    40c316 <flatcc_verify_buffer_header@@Base+0x126>
  40c26c:	jmp    40c271 <flatcc_verify_buffer_header@@Base+0x81>
  40c271:	jmp    40c276 <flatcc_verify_buffer_header@@Base+0x86>
  40c276:	cmp    QWORD PTR [rbp-0x18],0x8
  40c27b:	setae  al
  40c27e:	and    al,0x1
  40c280:	movzx  ecx,al
  40c283:	mov    DWORD PTR [rbp-0x34],ecx
  40c286:	cmp    DWORD PTR [rbp-0x34],0x0
  40c28a:	jne    40c29c <flatcc_verify_buffer_header@@Base+0xac>
  40c290:	mov    DWORD PTR [rbp-0x4],0x1
  40c297:	jmp    40c316 <flatcc_verify_buffer_header@@Base+0x126>
  40c29c:	jmp    40c2a1 <flatcc_verify_buffer_header@@Base+0xb1>
  40c2a1:	cmp    QWORD PTR [rbp-0x20],0x0
  40c2a6:	je     40c30f <flatcc_verify_buffer_header@@Base+0x11f>
  40c2ac:	mov    rdi,QWORD PTR [rbp-0x20]
  40c2b0:	call   40c320 <flatcc_verify_buffer_header@@Base+0x130>
  40c2b5:	mov    DWORD PTR [rbp-0x28],eax
  40c2b8:	mov    rdi,QWORD PTR [rbp-0x10]
  40c2bc:	mov    esi,0x4
  40c2c1:	call   40c360 <flatcc_verify_buffer_header@@Base+0x170>
  40c2c6:	mov    DWORD PTR [rbp-0x24],eax
  40c2c9:	cmp    DWORD PTR [rbp-0x28],0x0
  40c2cd:	mov    al,0x1
  40c2cf:	mov    BYTE PTR [rbp-0x39],al
  40c2d2:	je     40c2e4 <flatcc_verify_buffer_header@@Base+0xf4>
  40c2d8:	mov    eax,DWORD PTR [rbp-0x24]
  40c2db:	cmp    eax,DWORD PTR [rbp-0x28]
  40c2de:	sete   cl
  40c2e1:	mov    BYTE PTR [rbp-0x39],cl
  40c2e4:	mov    al,BYTE PTR [rbp-0x39]
  40c2e7:	and    al,0x1
  40c2e9:	movzx  ecx,al
  40c2ec:	mov    DWORD PTR [rbp-0x38],ecx
  40c2ef:	cmp    DWORD PTR [rbp-0x38],0x0
  40c2f3:	jne    40c305 <flatcc_verify_buffer_header@@Base+0x115>
  40c2f9:	mov    DWORD PTR [rbp-0x4],0x2
  40c300:	jmp    40c316 <flatcc_verify_buffer_header@@Base+0x126>
  40c305:	jmp    40c30a <flatcc_verify_buffer_header@@Base+0x11a>
  40c30a:	jmp    40c30f <flatcc_verify_buffer_header@@Base+0x11f>
  40c30f:	mov    DWORD PTR [rbp-0x4],0x0
  40c316:	mov    eax,DWORD PTR [rbp-0x4]
  40c319:	add    rsp,0x40
  40c31d:	pop    rbp
  40c31e:	ret    
  40c31f:	nop
  40c320:	push   rbp
  40c321:	mov    rbp,rsp
  40c324:	sub    rsp,0x20
  40c328:	mov    QWORD PTR [rbp-0x8],rdi
  40c32c:	mov    DWORD PTR [rbp-0xc],0x0
  40c333:	lea    rax,[rbp-0xc]
  40c337:	mov    rsi,QWORD PTR [rbp-0x8]
  40c33b:	mov    rdi,rax
  40c33e:	mov    edx,0x4
  40c343:	call   403040 <strncpy@plt>
  40c348:	mov    edi,DWORD PTR [rbp-0xc]
  40c34b:	mov    QWORD PTR [rbp-0x18],rax
  40c34f:	call   40d300 <flatcc_verify_union_vector_field@@Base+0x640>
  40c354:	add    rsp,0x20
  40c358:	pop    rbp
  40c359:	ret    
  40c35a:	nop    WORD PTR [rax+rax*1+0x0]
  40c360:	push   rbp
  40c361:	mov    rbp,rsp
  40c364:	sub    rsp,0x10
  40c368:	mov    QWORD PTR [rbp-0x8],rdi
  40c36c:	mov    DWORD PTR [rbp-0xc],esi
  40c36f:	mov    rax,QWORD PTR [rbp-0x8]
  40c373:	mov    ecx,DWORD PTR [rbp-0xc]
  40c376:	mov    edx,ecx
  40c378:	add    rax,rdx
  40c37b:	mov    rdi,rax
  40c37e:	call   40d310 <flatcc_verify_union_vector_field@@Base+0x650>
  40c383:	add    rsp,0x10
  40c387:	pop    rbp
  40c388:	ret    
  40c389:	nop    DWORD PTR [rax+0x0]

000000000040c390 <flatcc_verify_typed_buffer_header@@Base>:
  40c390:	push   rbp
  40c391:	mov    rbp,rsp
  40c394:	sub    rsp,0x40
  40c398:	mov    QWORD PTR [rbp-0x10],rdi
  40c39c:	mov    QWORD PTR [rbp-0x18],rsi
  40c3a0:	mov    DWORD PTR [rbp-0x1c],edx
  40c3a3:	mov    rax,QWORD PTR [rbp-0x10]
  40c3a7:	and    rax,0x3
  40c3ad:	cmp    rax,0x0
  40c3b1:	setne  cl
  40c3b4:	xor    cl,0xff
  40c3b7:	and    cl,0x1
  40c3ba:	movzx  edx,cl
  40c3bd:	mov    DWORD PTR [rbp-0x28],edx
  40c3c0:	cmp    DWORD PTR [rbp-0x28],0x0
  40c3c4:	jne    40c3d6 <flatcc_verify_typed_buffer_header@@Base+0x46>
  40c3ca:	mov    DWORD PTR [rbp-0x4],0x5
  40c3d1:	jmp    40c4ae <flatcc_verify_typed_buffer_header@@Base+0x11e>
  40c3d6:	jmp    40c3db <flatcc_verify_typed_buffer_header@@Base+0x4b>
  40c3db:	jmp    40c3e0 <flatcc_verify_typed_buffer_header@@Base+0x50>
  40c3e0:	mov    eax,0xfffffff7
  40c3e5:	cmp    QWORD PTR [rbp-0x18],rax
  40c3e9:	setbe  cl
  40c3ec:	and    cl,0x1
  40c3ef:	movzx  edx,cl
  40c3f2:	mov    DWORD PTR [rbp-0x2c],edx
  40c3f5:	cmp    DWORD PTR [rbp-0x2c],0x0
  40c3f9:	jne    40c40b <flatcc_verify_typed_buffer_header@@Base+0x7b>
  40c3ff:	mov    DWORD PTR [rbp-0x4],0x6
  40c406:	jmp    40c4ae <flatcc_verify_typed_buffer_header@@Base+0x11e>
  40c40b:	jmp    40c410 <flatcc_verify_typed_buffer_header@@Base+0x80>
  40c410:	jmp    40c415 <flatcc_verify_typed_buffer_header@@Base+0x85>
  40c415:	cmp    QWORD PTR [rbp-0x18],0x8
  40c41a:	setae  al
  40c41d:	and    al,0x1
  40c41f:	movzx  ecx,al
  40c422:	mov    DWORD PTR [rbp-0x30],ecx
  40c425:	cmp    DWORD PTR [rbp-0x30],0x0
  40c429:	jne    40c43b <flatcc_verify_typed_buffer_header@@Base+0xab>
  40c42f:	mov    DWORD PTR [rbp-0x4],0x1
  40c436:	jmp    40c4ae <flatcc_verify_typed_buffer_header@@Base+0x11e>
  40c43b:	jmp    40c440 <flatcc_verify_typed_buffer_header@@Base+0xb0>
  40c440:	cmp    DWORD PTR [rbp-0x1c],0x0
  40c444:	je     40c4a7 <flatcc_verify_typed_buffer_header@@Base+0x117>
  40c44a:	mov    eax,DWORD PTR [rbp-0x1c]
  40c44d:	mov    DWORD PTR [rbp-0x24],eax
  40c450:	mov    rdi,QWORD PTR [rbp-0x10]
  40c454:	mov    esi,0x4
  40c459:	call   40c360 <flatcc_verify_buffer_header@@Base+0x170>
  40c45e:	mov    DWORD PTR [rbp-0x20],eax
  40c461:	cmp    DWORD PTR [rbp-0x24],0x0
  40c465:	mov    al,0x1
  40c467:	mov    BYTE PTR [rbp-0x35],al
  40c46a:	je     40c47c <flatcc_verify_typed_buffer_header@@Base+0xec>
  40c470:	mov    eax,DWORD PTR [rbp-0x20]
  40c473:	cmp    eax,DWORD PTR [rbp-0x24]
  40c476:	sete   cl
  40c479:	mov    BYTE PTR [rbp-0x35],cl
  40c47c:	mov    al,BYTE PTR [rbp-0x35]
  40c47f:	and    al,0x1
  40c481:	movzx  ecx,al
  40c484:	mov    DWORD PTR [rbp-0x34],ecx
  40c487:	cmp    DWORD PTR [rbp-0x34],0x0
  40c48b:	jne    40c49d <flatcc_verify_typed_buffer_header@@Base+0x10d>
  40c491:	mov    DWORD PTR [rbp-0x4],0x2
  40c498:	jmp    40c4ae <flatcc_verify_typed_buffer_header@@Base+0x11e>
  40c49d:	jmp    40c4a2 <flatcc_verify_typed_buffer_header@@Base+0x112>
  40c4a2:	jmp    40c4a7 <flatcc_verify_typed_buffer_header@@Base+0x117>
  40c4a7:	mov    DWORD PTR [rbp-0x4],0x0
  40c4ae:	mov    eax,DWORD PTR [rbp-0x4]
  40c4b1:	add    rsp,0x40
  40c4b5:	pop    rbp
  40c4b6:	ret    
  40c4b7:	nop    WORD PTR [rax+rax*1+0x0]

000000000040c4c0 <flatcc_verify_struct_as_root@@Base>:
  40c4c0:	push   rbp
  40c4c1:	mov    rbp,rsp
  40c4c4:	sub    rsp,0x30
  40c4c8:	mov    QWORD PTR [rbp-0x10],rdi
  40c4cc:	mov    QWORD PTR [rbp-0x18],rsi
  40c4d0:	mov    QWORD PTR [rbp-0x20],rdx
  40c4d4:	mov    QWORD PTR [rbp-0x28],rcx
  40c4d8:	mov    WORD PTR [rbp-0x2a],r8w
  40c4dd:	mov    rdi,QWORD PTR [rbp-0x10]
  40c4e1:	mov    rsi,QWORD PTR [rbp-0x18]
  40c4e5:	mov    rdx,QWORD PTR [rbp-0x20]
  40c4e9:	call   40c1f0 <flatcc_verify_buffer_header@@Base>
  40c4ee:	cmp    eax,0x0
  40c4f1:	je     40c510 <flatcc_verify_struct_as_root@@Base+0x50>
  40c4f7:	mov    rdi,QWORD PTR [rbp-0x10]
  40c4fb:	mov    rsi,QWORD PTR [rbp-0x18]
  40c4ff:	mov    rdx,QWORD PTR [rbp-0x20]
  40c503:	call   40c1f0 <flatcc_verify_buffer_header@@Base>
  40c508:	mov    DWORD PTR [rbp-0x4],eax
  40c50b:	jmp    40c53a <flatcc_verify_struct_as_root@@Base+0x7a>
  40c510:	xor    esi,esi
  40c512:	mov    rax,QWORD PTR [rbp-0x18]
  40c516:	mov    rdi,QWORD PTR [rbp-0x10]
  40c51a:	mov    DWORD PTR [rbp-0x30],eax
  40c51d:	call   40b690 <flatcc_verify_string_field@@Base+0x2e0>
  40c522:	xor    esi,esi
  40c524:	mov    rcx,QWORD PTR [rbp-0x28]
  40c528:	mov    edi,DWORD PTR [rbp-0x30]
  40c52b:	mov    edx,eax
  40c52d:	movzx  r8d,WORD PTR [rbp-0x2a]
  40c532:	call   40c0b0 <flatcc_verify_union_struct@@Base+0x40>
  40c537:	mov    DWORD PTR [rbp-0x4],eax
  40c53a:	mov    eax,DWORD PTR [rbp-0x4]
  40c53d:	add    rsp,0x30
  40c541:	pop    rbp
  40c542:	ret    
  40c543:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40c54d:	nop    DWORD PTR [rax]

000000000040c550 <flatcc_verify_struct_as_typed_root@@Base>:
  40c550:	push   rbp
  40c551:	mov    rbp,rsp
  40c554:	sub    rsp,0x30
  40c558:	mov    QWORD PTR [rbp-0x10],rdi
  40c55c:	mov    QWORD PTR [rbp-0x18],rsi
  40c560:	mov    DWORD PTR [rbp-0x1c],edx
  40c563:	mov    QWORD PTR [rbp-0x28],rcx
  40c567:	mov    WORD PTR [rbp-0x2a],r8w
  40c56c:	mov    rdi,QWORD PTR [rbp-0x10]
  40c570:	mov    rsi,QWORD PTR [rbp-0x18]
  40c574:	mov    edx,DWORD PTR [rbp-0x1c]
  40c577:	call   40c390 <flatcc_verify_typed_buffer_header@@Base>
  40c57c:	cmp    eax,0x0
  40c57f:	je     40c59d <flatcc_verify_struct_as_typed_root@@Base+0x4d>
  40c585:	mov    rdi,QWORD PTR [rbp-0x10]
  40c589:	mov    rsi,QWORD PTR [rbp-0x18]
  40c58d:	mov    edx,DWORD PTR [rbp-0x1c]
  40c590:	call   40c390 <flatcc_verify_typed_buffer_header@@Base>
  40c595:	mov    DWORD PTR [rbp-0x4],eax
  40c598:	jmp    40c5c7 <flatcc_verify_struct_as_typed_root@@Base+0x77>
  40c59d:	xor    esi,esi
  40c59f:	mov    rax,QWORD PTR [rbp-0x18]
  40c5a3:	mov    rdi,QWORD PTR [rbp-0x10]
  40c5a7:	mov    DWORD PTR [rbp-0x30],eax
  40c5aa:	call   40b690 <flatcc_verify_string_field@@Base+0x2e0>
  40c5af:	xor    esi,esi
  40c5b1:	mov    rcx,QWORD PTR [rbp-0x28]
  40c5b5:	mov    edi,DWORD PTR [rbp-0x30]
  40c5b8:	mov    edx,eax
  40c5ba:	movzx  r8d,WORD PTR [rbp-0x2a]
  40c5bf:	call   40c0b0 <flatcc_verify_union_struct@@Base+0x40>
  40c5c4:	mov    DWORD PTR [rbp-0x4],eax
  40c5c7:	mov    eax,DWORD PTR [rbp-0x4]
  40c5ca:	add    rsp,0x30
  40c5ce:	pop    rbp
  40c5cf:	ret    

000000000040c5d0 <flatcc_verify_table_as_root@@Base>:
  40c5d0:	push   rbp
  40c5d1:	mov    rbp,rsp
  40c5d4:	sub    rsp,0x40
  40c5d8:	mov    QWORD PTR [rbp-0x10],rdi
  40c5dc:	mov    QWORD PTR [rbp-0x18],rsi
  40c5e0:	mov    QWORD PTR [rbp-0x20],rdx
  40c5e4:	mov    QWORD PTR [rbp-0x28],rcx
  40c5e8:	mov    rdi,QWORD PTR [rbp-0x10]
  40c5ec:	mov    rax,QWORD PTR [rbp-0x18]
  40c5f0:	mov    eax,eax
  40c5f2:	mov    esi,eax
  40c5f4:	mov    rdx,QWORD PTR [rbp-0x20]
  40c5f8:	call   40c1f0 <flatcc_verify_buffer_header@@Base>
  40c5fd:	cmp    eax,0x0
  40c600:	je     40c623 <flatcc_verify_table_as_root@@Base+0x53>
  40c606:	mov    rdi,QWORD PTR [rbp-0x10]
  40c60a:	mov    rax,QWORD PTR [rbp-0x18]
  40c60e:	mov    eax,eax
  40c610:	mov    esi,eax
  40c612:	mov    rdx,QWORD PTR [rbp-0x20]
  40c616:	call   40c1f0 <flatcc_verify_buffer_header@@Base>
  40c61b:	mov    DWORD PTR [rbp-0x4],eax
  40c61e:	jmp    40c65d <flatcc_verify_table_as_root@@Base+0x8d>
  40c623:	xor    esi,esi
  40c625:	mov    rdi,QWORD PTR [rbp-0x10]
  40c629:	mov    rax,QWORD PTR [rbp-0x18]
  40c62d:	mov    rcx,QWORD PTR [rbp-0x10]
  40c631:	mov    QWORD PTR [rbp-0x30],rdi
  40c635:	mov    rdi,rcx
  40c638:	mov    DWORD PTR [rbp-0x34],eax
  40c63b:	call   40b690 <flatcc_verify_string_field@@Base+0x2e0>
  40c640:	xor    edx,edx
  40c642:	mov    r9,QWORD PTR [rbp-0x28]
  40c646:	mov    rdi,QWORD PTR [rbp-0x30]
  40c64a:	mov    esi,DWORD PTR [rbp-0x34]
  40c64d:	mov    ecx,eax
  40c64f:	mov    r8d,0x64
  40c655:	call   40bb40 <flatcc_verify_table_field@@Base+0xb0>
  40c65a:	mov    DWORD PTR [rbp-0x4],eax
  40c65d:	mov    eax,DWORD PTR [rbp-0x4]
  40c660:	add    rsp,0x40
  40c664:	pop    rbp
  40c665:	ret    
  40c666:	nop    WORD PTR cs:[rax+rax*1+0x0]

000000000040c670 <flatcc_verify_table_as_typed_root@@Base>:
  40c670:	push   rbp
  40c671:	mov    rbp,rsp
  40c674:	sub    rsp,0x40
  40c678:	mov    QWORD PTR [rbp-0x10],rdi
  40c67c:	mov    QWORD PTR [rbp-0x18],rsi
  40c680:	mov    DWORD PTR [rbp-0x1c],edx
  40c683:	mov    QWORD PTR [rbp-0x28],rcx
  40c687:	mov    rdi,QWORD PTR [rbp-0x10]
  40c68b:	mov    rax,QWORD PTR [rbp-0x18]
  40c68f:	mov    eax,eax
  40c691:	mov    esi,eax
  40c693:	mov    edx,DWORD PTR [rbp-0x1c]
  40c696:	call   40c390 <flatcc_verify_typed_buffer_header@@Base>
  40c69b:	cmp    eax,0x0
  40c69e:	je     40c6c0 <flatcc_verify_table_as_typed_root@@Base+0x50>
  40c6a4:	mov    rdi,QWORD PTR [rbp-0x10]
  40c6a8:	mov    rax,QWORD PTR [rbp-0x18]
  40c6ac:	mov    eax,eax
  40c6ae:	mov    esi,eax
  40c6b0:	mov    edx,DWORD PTR [rbp-0x1c]
  40c6b3:	call   40c390 <flatcc_verify_typed_buffer_header@@Base>
  40c6b8:	mov    DWORD PTR [rbp-0x4],eax
  40c6bb:	jmp    40c6fa <flatcc_verify_table_as_typed_root@@Base+0x8a>
  40c6c0:	xor    esi,esi
  40c6c2:	mov    rdi,QWORD PTR [rbp-0x10]
  40c6c6:	mov    rax,QWORD PTR [rbp-0x18]
  40c6ca:	mov    rcx,QWORD PTR [rbp-0x10]
  40c6ce:	mov    QWORD PTR [rbp-0x30],rdi
  40c6d2:	mov    rdi,rcx
  40c6d5:	mov    DWORD PTR [rbp-0x34],eax
  40c6d8:	call   40b690 <flatcc_verify_string_field@@Base+0x2e0>
  40c6dd:	xor    edx,edx
  40c6df:	mov    r9,QWORD PTR [rbp-0x28]
  40c6e3:	mov    rdi,QWORD PTR [rbp-0x30]
  40c6e7:	mov    esi,DWORD PTR [rbp-0x34]
  40c6ea:	mov    ecx,eax
  40c6ec:	mov    r8d,0x64
  40c6f2:	call   40bb40 <flatcc_verify_table_field@@Base+0xb0>
  40c6f7:	mov    DWORD PTR [rbp-0x4],eax
  40c6fa:	mov    eax,DWORD PTR [rbp-0x4]
  40c6fd:	add    rsp,0x40
  40c701:	pop    rbp
  40c702:	ret    
  40c703:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40c70d:	nop    DWORD PTR [rax]

000000000040c710 <flatcc_verify_struct_as_nested_root@@Base>:
  40c710:	push   rbp
  40c711:	mov    rbp,rsp
  40c714:	sub    rsp,0x50
  40c718:	mov    QWORD PTR [rbp-0x10],rdi
  40c71c:	mov    WORD PTR [rbp-0x12],si
  40c720:	mov    DWORD PTR [rbp-0x18],edx
  40c723:	mov    QWORD PTR [rbp-0x20],rcx
  40c727:	mov    QWORD PTR [rbp-0x28],r8
  40c72b:	mov    WORD PTR [rbp-0x2a],r9w
  40c730:	mov    rdi,QWORD PTR [rbp-0x10]
  40c734:	mov    ax,WORD PTR [rbp-0x12]
  40c738:	mov    edx,DWORD PTR [rbp-0x18]
  40c73b:	movzx  r10d,WORD PTR [rbp-0x2a]
  40c740:	mov    ecx,r10d
  40c743:	movzx  esi,ax
  40c746:	mov    r8d,0x1
  40c74c:	mov    r9d,0xffffffff
  40c752:	call   40b6c0 <flatcc_verify_vector_field@@Base>
  40c757:	cmp    eax,0x0
  40c75a:	je     40c78b <flatcc_verify_struct_as_nested_root@@Base+0x7b>
  40c760:	mov    rdi,QWORD PTR [rbp-0x10]
  40c764:	mov    ax,WORD PTR [rbp-0x12]
  40c768:	mov    edx,DWORD PTR [rbp-0x18]
  40c76b:	movzx  ecx,WORD PTR [rbp-0x2a]
  40c76f:	movzx  esi,ax
  40c772:	mov    r8d,0x1
  40c778:	mov    r9d,0xffffffff
  40c77e:	call   40b6c0 <flatcc_verify_vector_field@@Base>
  40c783:	mov    DWORD PTR [rbp-0x4],eax
  40c786:	jmp    40c823 <flatcc_verify_struct_as_nested_root@@Base+0x113>
  40c78b:	mov    rdi,QWORD PTR [rbp-0x10]
  40c78f:	movzx  esi,WORD PTR [rbp-0x12]
  40c793:	call   40c830 <flatcc_verify_struct_as_nested_root@@Base+0x120>
  40c798:	xor    ecx,ecx
  40c79a:	mov    edx,ecx
  40c79c:	mov    QWORD PTR [rbp-0x38],rax
  40c7a0:	cmp    rdx,rax
  40c7a3:	jne    40c7b5 <flatcc_verify_struct_as_nested_root@@Base+0xa5>
  40c7a9:	mov    DWORD PTR [rbp-0x4],0x0
  40c7b0:	jmp    40c823 <flatcc_verify_struct_as_nested_root@@Base+0x113>
  40c7b5:	xor    esi,esi
  40c7b7:	mov    rax,QWORD PTR [rbp-0x38]
  40c7bb:	mov    rcx,QWORD PTR [rbp-0x38]
  40c7bf:	mov    rdi,rcx
  40c7c2:	mov    QWORD PTR [rbp-0x48],rax
  40c7c6:	call   40b690 <flatcc_verify_string_field@@Base+0x2e0>
  40c7cb:	xor    esi,esi
  40c7cd:	mov    eax,eax
  40c7cf:	mov    ecx,eax
  40c7d1:	mov    rdx,QWORD PTR [rbp-0x48]
  40c7d5:	add    rdx,rcx
  40c7d8:	mov    QWORD PTR [rbp-0x38],rdx
  40c7dc:	mov    rcx,QWORD PTR [rbp-0x38]
  40c7e0:	mov    rdi,rcx
  40c7e3:	call   40b690 <flatcc_verify_string_field@@Base+0x2e0>
  40c7e8:	mov    DWORD PTR [rbp-0x3c],eax
  40c7eb:	mov    rcx,QWORD PTR [rbp-0x38]
  40c7ef:	add    rcx,0x4
  40c7f6:	mov    QWORD PTR [rbp-0x38],rcx
  40c7fa:	mov    rcx,QWORD PTR [rbp-0x38]
  40c7fe:	mov    eax,DWORD PTR [rbp-0x3c]
  40c801:	mov    esi,eax
  40c803:	mov    rdx,QWORD PTR [rbp-0x20]
  40c807:	mov    rdi,QWORD PTR [rbp-0x28]
  40c80b:	mov    QWORD PTR [rbp-0x50],rdi
  40c80f:	mov    rdi,rcx
  40c812:	mov    rcx,QWORD PTR [rbp-0x50]
  40c816:	movzx  r8d,WORD PTR [rbp-0x2a]
  40c81b:	call   40c4c0 <flatcc_verify_struct_as_root@@Base>
  40c820:	mov    DWORD PTR [rbp-0x4],eax
  40c823:	mov    eax,DWORD PTR [rbp-0x4]
  40c826:	add    rsp,0x50
  40c82a:	pop    rbp
  40c82b:	ret    
  40c82c:	nop    DWORD PTR [rax+0x0]
  40c830:	push   rbp
  40c831:	mov    rbp,rsp
  40c834:	sub    rsp,0x20
  40c838:	mov    QWORD PTR [rbp-0x8],rdi
  40c83c:	mov    WORD PTR [rbp-0xa],si
  40c840:	mov    rdi,QWORD PTR [rbp-0x8]
  40c844:	movzx  esi,WORD PTR [rbp-0xa]
  40c848:	call   40cc50 <flatcc_verify_union_field@@Base+0x240>
  40c84d:	mov    WORD PTR [rbp-0xc],ax
  40c851:	movzx  ecx,WORD PTR [rbp-0xc]
  40c855:	cmp    ecx,0x0
  40c858:	je     40c884 <flatcc_verify_struct_as_nested_root@@Base+0x174>
  40c85e:	mov    rax,QWORD PTR [rbp-0x8]
  40c862:	mov    rax,QWORD PTR [rax]
  40c865:	mov    rcx,QWORD PTR [rbp-0x8]
  40c869:	mov    edx,DWORD PTR [rcx+0x18]
  40c86c:	mov    ecx,edx
  40c86e:	add    rax,rcx
  40c871:	movzx  edx,WORD PTR [rbp-0xc]
  40c875:	movsxd rcx,edx
  40c878:	add    rax,rcx
  40c87b:	mov    QWORD PTR [rbp-0x18],rax
  40c87f:	jmp    40c891 <flatcc_verify_struct_as_nested_root@@Base+0x181>
  40c884:	xor    eax,eax
  40c886:	mov    ecx,eax
  40c888:	mov    QWORD PTR [rbp-0x18],rcx
  40c88c:	jmp    40c891 <flatcc_verify_struct_as_nested_root@@Base+0x181>
  40c891:	mov    rax,QWORD PTR [rbp-0x18]
  40c895:	add    rsp,0x20
  40c899:	pop    rbp
  40c89a:	ret    
  40c89b:	nop    DWORD PTR [rax+rax*1+0x0]

000000000040c8a0 <flatcc_verify_table_as_nested_root@@Base>:
  40c8a0:	push   rbp
  40c8a1:	mov    rbp,rsp
  40c8a4:	sub    rsp,0x60
  40c8a8:	mov    QWORD PTR [rbp-0x10],rdi
  40c8ac:	mov    WORD PTR [rbp-0x12],si
  40c8b0:	mov    DWORD PTR [rbp-0x18],edx
  40c8b3:	mov    QWORD PTR [rbp-0x20],rcx
  40c8b7:	mov    WORD PTR [rbp-0x22],r8w
  40c8bc:	mov    QWORD PTR [rbp-0x30],r9
  40c8c0:	mov    rdi,QWORD PTR [rbp-0x10]
  40c8c4:	mov    ax,WORD PTR [rbp-0x12]
  40c8c8:	mov    edx,DWORD PTR [rbp-0x18]
  40c8cb:	movzx  r10d,WORD PTR [rbp-0x22]
  40c8d0:	mov    ecx,r10d
  40c8d3:	movzx  esi,ax
  40c8d6:	mov    r8d,0x1
  40c8dc:	mov    r9d,0xffffffff
  40c8e2:	call   40b6c0 <flatcc_verify_vector_field@@Base>
  40c8e7:	cmp    eax,0x0
  40c8ea:	je     40c91b <flatcc_verify_table_as_nested_root@@Base+0x7b>
  40c8f0:	mov    rdi,QWORD PTR [rbp-0x10]
  40c8f4:	mov    ax,WORD PTR [rbp-0x12]
  40c8f8:	mov    edx,DWORD PTR [rbp-0x18]
  40c8fb:	movzx  ecx,WORD PTR [rbp-0x22]
  40c8ff:	movzx  esi,ax
  40c902:	mov    r8d,0x1
  40c908:	mov    r9d,0xffffffff
  40c90e:	call   40b6c0 <flatcc_verify_vector_field@@Base>
  40c913:	mov    DWORD PTR [rbp-0x4],eax
  40c916:	jmp    40ca00 <flatcc_verify_table_as_nested_root@@Base+0x160>
  40c91b:	mov    rdi,QWORD PTR [rbp-0x10]
  40c91f:	movzx  esi,WORD PTR [rbp-0x12]
  40c923:	call   40c830 <flatcc_verify_struct_as_nested_root@@Base+0x120>
  40c928:	xor    ecx,ecx
  40c92a:	mov    edx,ecx
  40c92c:	mov    QWORD PTR [rbp-0x38],rax
  40c930:	cmp    rdx,rax
  40c933:	jne    40c945 <flatcc_verify_table_as_nested_root@@Base+0xa5>
  40c939:	mov    DWORD PTR [rbp-0x4],0x0
  40c940:	jmp    40ca00 <flatcc_verify_table_as_nested_root@@Base+0x160>
  40c945:	xor    esi,esi
  40c947:	mov    rax,QWORD PTR [rbp-0x38]
  40c94b:	mov    rcx,QWORD PTR [rbp-0x38]
  40c94f:	mov    rdi,rcx
  40c952:	mov    QWORD PTR [rbp-0x48],rax
  40c956:	call   40b690 <flatcc_verify_string_field@@Base+0x2e0>
  40c95b:	xor    esi,esi
  40c95d:	mov    eax,eax
  40c95f:	mov    ecx,eax
  40c961:	mov    rdx,QWORD PTR [rbp-0x48]
  40c965:	add    rdx,rcx
  40c968:	mov    QWORD PTR [rbp-0x38],rdx
  40c96c:	mov    rcx,QWORD PTR [rbp-0x38]
  40c970:	mov    rdi,rcx
  40c973:	call   40b690 <flatcc_verify_string_field@@Base+0x2e0>
  40c978:	mov    DWORD PTR [rbp-0x3c],eax
  40c97b:	mov    rcx,QWORD PTR [rbp-0x38]
  40c97f:	add    rcx,0x4
  40c986:	mov    QWORD PTR [rbp-0x38],rcx
  40c98a:	mov    rcx,QWORD PTR [rbp-0x38]
  40c98e:	mov    eax,DWORD PTR [rbp-0x3c]
  40c991:	mov    esi,eax
  40c993:	mov    rdx,QWORD PTR [rbp-0x20]
  40c997:	mov    rdi,rcx
  40c99a:	call   40c1f0 <flatcc_verify_buffer_header@@Base>
  40c99f:	cmp    eax,0x0
  40c9a2:	je     40c9c5 <flatcc_verify_table_as_nested_root@@Base+0x125>
  40c9a8:	mov    rax,QWORD PTR [rbp-0x38]
  40c9ac:	mov    ecx,DWORD PTR [rbp-0x3c]
  40c9af:	mov    esi,ecx
  40c9b1:	mov    rdx,QWORD PTR [rbp-0x20]
  40c9b5:	mov    rdi,rax
  40c9b8:	call   40c1f0 <flatcc_verify_buffer_header@@Base>
  40c9bd:	mov    DWORD PTR [rbp-0x4],eax
  40c9c0:	jmp    40ca00 <flatcc_verify_table_as_nested_root@@Base+0x160>
  40c9c5:	xor    esi,esi
  40c9c7:	mov    rax,QWORD PTR [rbp-0x38]
  40c9cb:	mov    ecx,DWORD PTR [rbp-0x3c]
  40c9ce:	mov    rdx,QWORD PTR [rbp-0x38]
  40c9d2:	mov    rdi,rdx
  40c9d5:	mov    QWORD PTR [rbp-0x50],rax
  40c9d9:	mov    DWORD PTR [rbp-0x54],ecx
  40c9dc:	call   40b690 <flatcc_verify_string_field@@Base+0x2e0>
  40c9e1:	xor    edx,edx
  40c9e3:	mov    rdi,QWORD PTR [rbp-0x10]
  40c9e7:	mov    r8d,DWORD PTR [rdi+0xc]
  40c9eb:	mov    r9,QWORD PTR [rbp-0x30]
  40c9ef:	mov    rdi,QWORD PTR [rbp-0x50]
  40c9f3:	mov    esi,DWORD PTR [rbp-0x54]
  40c9f6:	mov    ecx,eax
  40c9f8:	call   40bb40 <flatcc_verify_table_field@@Base+0xb0>
  40c9fd:	mov    DWORD PTR [rbp-0x4],eax
  40ca00:	mov    eax,DWORD PTR [rbp-0x4]
  40ca03:	add    rsp,0x60
  40ca07:	pop    rbp
  40ca08:	ret    
  40ca09:	nop    DWORD PTR [rax+0x0]

000000000040ca10 <flatcc_verify_union_field@@Base>:
  40ca10:	push   rbp
  40ca11:	mov    rbp,rsp
  40ca14:	sub    rsp,0x80
  40ca1b:	mov    QWORD PTR [rbp-0x10],rdi
  40ca1f:	mov    WORD PTR [rbp-0x12],si
  40ca23:	mov    DWORD PTR [rbp-0x18],edx
  40ca26:	mov    QWORD PTR [rbp-0x20],rcx
  40ca2a:	mov    rdi,QWORD PTR [rbp-0x10]
  40ca2e:	movzx  eax,WORD PTR [rbp-0x12]
  40ca32:	sub    eax,0x1
  40ca35:	movzx  esi,ax
  40ca38:	call   40cc50 <flatcc_verify_union_field@@Base+0x240>
  40ca3d:	xor    edx,edx
  40ca3f:	mov    WORD PTR [rbp-0x22],ax
  40ca43:	movzx  esi,ax
  40ca46:	cmp    edx,esi
  40ca48:	jne    40caca <flatcc_verify_union_field@@Base+0xba>
  40ca4e:	mov    rdi,QWORD PTR [rbp-0x10]
  40ca52:	movzx  esi,WORD PTR [rbp-0x12]
  40ca56:	call   40cc50 <flatcc_verify_union_field@@Base+0x240>
  40ca5b:	mov    WORD PTR [rbp-0x24],ax
  40ca5f:	movzx  eax,WORD PTR [rbp-0x24]
  40ca63:	cmp    eax,0x0
  40ca66:	sete   cl
  40ca69:	and    cl,0x1
  40ca6c:	movzx  eax,cl
  40ca6f:	mov    DWORD PTR [rbp-0x5c],eax
  40ca72:	cmp    DWORD PTR [rbp-0x5c],0x0
  40ca76:	jne    40ca88 <flatcc_verify_union_field@@Base+0x78>
  40ca7c:	mov    DWORD PTR [rbp-0x4],0x17
  40ca83:	jmp    40cc42 <flatcc_verify_union_field@@Base+0x232>
  40ca88:	jmp    40ca8d <flatcc_verify_union_field@@Base+0x7d>
  40ca8d:	jmp    40ca92 <flatcc_verify_union_field@@Base+0x82>
  40ca92:	cmp    DWORD PTR [rbp-0x18],0x0
  40ca96:	setne  al
  40ca99:	xor    al,0xff
  40ca9b:	and    al,0x1
  40ca9d:	movzx  ecx,al
  40caa0:	mov    DWORD PTR [rbp-0x60],ecx
  40caa3:	cmp    DWORD PTR [rbp-0x60],0x0
  40caa7:	jne    40cab9 <flatcc_verify_union_field@@Base+0xa9>
  40caad:	mov    DWORD PTR [rbp-0x4],0x15
  40cab4:	jmp    40cc42 <flatcc_verify_union_field@@Base+0x232>
  40cab9:	jmp    40cabe <flatcc_verify_union_field@@Base+0xae>
  40cabe:	mov    DWORD PTR [rbp-0x4],0x0
  40cac5:	jmp    40cc42 <flatcc_verify_union_field@@Base+0x232>
  40caca:	xor    edx,edx
  40cacc:	mov    rdi,QWORD PTR [rbp-0x10]
  40cad0:	movzx  eax,WORD PTR [rbp-0x12]
  40cad4:	sub    eax,0x1
  40cad7:	movzx  esi,ax
  40cada:	mov    ecx,0x1
  40cadf:	mov    DWORD PTR [rbp-0x6c],ecx
  40cae2:	mov    r8d,DWORD PTR [rbp-0x6c]
  40cae6:	call   40b260 <flatcc_verify_field@@Base+0x80>
  40caeb:	cmp    eax,0x0
  40caee:	je     40cb1d <flatcc_verify_union_field@@Base+0x10d>
  40caf4:	xor    edx,edx
  40caf6:	mov    rdi,QWORD PTR [rbp-0x10]
  40cafa:	movzx  eax,WORD PTR [rbp-0x12]
  40cafe:	sub    eax,0x1
  40cb01:	movzx  esi,ax
  40cb04:	mov    ecx,0x1
  40cb09:	mov    DWORD PTR [rbp-0x70],ecx
  40cb0c:	mov    r8d,DWORD PTR [rbp-0x70]
  40cb10:	call   40b260 <flatcc_verify_field@@Base+0x80>
  40cb15:	mov    DWORD PTR [rbp-0x4],eax
  40cb18:	jmp    40cc42 <flatcc_verify_union_field@@Base+0x232>
  40cb1d:	mov    rdi,QWORD PTR [rbp-0x10]
  40cb21:	movzx  esi,WORD PTR [rbp-0x12]
  40cb25:	call   40cc50 <flatcc_verify_union_field@@Base+0x240>
  40cb2a:	mov    WORD PTR [rbp-0x24],ax
  40cb2e:	mov    rcx,QWORD PTR [rbp-0x10]
  40cb32:	mov    rcx,QWORD PTR [rcx]
  40cb35:	mov    rdx,QWORD PTR [rbp-0x10]
  40cb39:	mov    esi,DWORD PTR [rdx+0x18]
  40cb3c:	mov    edx,esi
  40cb3e:	add    rcx,rdx
  40cb41:	movzx  esi,WORD PTR [rbp-0x22]
  40cb45:	movsxd rdx,esi
  40cb48:	add    rcx,rdx
  40cb4b:	mov    QWORD PTR [rbp-0x30],rcx
  40cb4f:	mov    rax,QWORD PTR [rbp-0x30]
  40cb53:	movzx  ecx,BYTE PTR [rax]
  40cb56:	cmp    ecx,0x0
  40cb59:	mov    dl,0x1
  40cb5b:	mov    BYTE PTR [rbp-0x71],dl
  40cb5e:	jne    40cb71 <flatcc_verify_union_field@@Base+0x161>
  40cb64:	movzx  eax,WORD PTR [rbp-0x24]
  40cb68:	cmp    eax,0x0
  40cb6b:	sete   cl
  40cb6e:	mov    BYTE PTR [rbp-0x71],cl
  40cb71:	mov    al,BYTE PTR [rbp-0x71]
  40cb74:	and    al,0x1
  40cb76:	movzx  ecx,al
  40cb79:	mov    DWORD PTR [rbp-0x64],ecx
  40cb7c:	cmp    DWORD PTR [rbp-0x64],0x0
  40cb80:	jne    40cb92 <flatcc_verify_union_field@@Base+0x182>
  40cb86:	mov    DWORD PTR [rbp-0x4],0x18
  40cb8d:	jmp    40cc42 <flatcc_verify_union_field@@Base+0x232>
  40cb92:	jmp    40cb97 <flatcc_verify_union_field@@Base+0x187>
  40cb97:	mov    rax,QWORD PTR [rbp-0x30]
  40cb9b:	movzx  ecx,BYTE PTR [rax]
  40cb9e:	cmp    ecx,0x0
  40cba1:	jne    40cbb3 <flatcc_verify_union_field@@Base+0x1a3>
  40cba7:	mov    DWORD PTR [rbp-0x4],0x0
  40cbae:	jmp    40cc42 <flatcc_verify_union_field@@Base+0x232>
  40cbb3:	jmp    40cbb8 <flatcc_verify_union_field@@Base+0x1a8>
  40cbb8:	mov    rdi,QWORD PTR [rbp-0x10]
  40cbbc:	mov    ax,WORD PTR [rbp-0x12]
  40cbc0:	mov    edx,DWORD PTR [rbp-0x18]
  40cbc3:	movzx  esi,ax
  40cbc6:	lea    rcx,[rbp-0x34]
  40cbca:	call   40b450 <flatcc_verify_string_field@@Base+0xa0>
  40cbcf:	mov    DWORD PTR [rbp-0x68],eax
  40cbd2:	cmp    DWORD PTR [rbp-0x68],0x0
  40cbd6:	jne    40cbe6 <flatcc_verify_union_field@@Base+0x1d6>
  40cbdc:	cmp    DWORD PTR [rbp-0x34],0x0
  40cbe0:	jne    40cbf1 <flatcc_verify_union_field@@Base+0x1e1>
  40cbe6:	mov    eax,DWORD PTR [rbp-0x68]
  40cbe9:	mov    DWORD PTR [rbp-0x4],eax
  40cbec:	jmp    40cc42 <flatcc_verify_union_field@@Base+0x232>
  40cbf1:	jmp    40cbf6 <flatcc_verify_union_field@@Base+0x1e6>
  40cbf6:	mov    rax,QWORD PTR [rbp-0x10]
  40cbfa:	mov    rax,QWORD PTR [rax]
  40cbfd:	mov    QWORD PTR [rbp-0x58],rax
  40cc01:	mov    rax,QWORD PTR [rbp-0x10]
  40cc05:	mov    ecx,DWORD PTR [rax+0x8]
  40cc08:	mov    DWORD PTR [rbp-0x50],ecx
  40cc0b:	mov    rax,QWORD PTR [rbp-0x10]
  40cc0f:	mov    ecx,DWORD PTR [rax+0xc]
  40cc12:	mov    DWORD PTR [rbp-0x4c],ecx
  40cc15:	mov    ecx,DWORD PTR [rbp-0x34]
  40cc18:	mov    DWORD PTR [rbp-0x44],ecx
  40cc1b:	mov    rax,QWORD PTR [rbp-0x10]
  40cc1f:	mov    rdi,QWORD PTR [rax]
  40cc22:	mov    esi,DWORD PTR [rbp-0x34]
  40cc25:	call   40b690 <flatcc_verify_string_field@@Base+0x2e0>
  40cc2a:	mov    DWORD PTR [rbp-0x40],eax
  40cc2d:	mov    rdx,QWORD PTR [rbp-0x30]
  40cc31:	mov    r8b,BYTE PTR [rdx]
  40cc34:	mov    BYTE PTR [rbp-0x48],r8b
  40cc38:	lea    rdi,[rbp-0x58]
  40cc3c:	call   QWORD PTR [rbp-0x20]
  40cc3f:	mov    DWORD PTR [rbp-0x4],eax
  40cc42:	mov    eax,DWORD PTR [rbp-0x4]
  40cc45:	add    rsp,0x80
  40cc4c:	pop    rbp
  40cc4d:	ret    
  40cc4e:	xchg   ax,ax
  40cc50:	push   rbp
  40cc51:	mov    rbp,rsp
  40cc54:	sub    rsp,0x20
  40cc58:	mov    QWORD PTR [rbp-0x10],rdi
  40cc5c:	mov    WORD PTR [rbp-0x12],si
  40cc60:	movzx  eax,WORD PTR [rbp-0x12]
  40cc64:	add    eax,0x2
  40cc67:	movsxd rcx,eax
  40cc6a:	shl    rcx,0x1
  40cc6e:	mov    WORD PTR [rbp-0x14],cx
  40cc72:	movzx  eax,WORD PTR [rbp-0x14]
  40cc76:	mov    rdx,QWORD PTR [rbp-0x10]
  40cc7a:	movzx  r8d,WORD PTR [rdx+0x1e]
  40cc7f:	cmp    eax,r8d
  40cc82:	jl     40cc94 <flatcc_verify_union_field@@Base+0x284>
  40cc88:	mov    DWORD PTR [rbp-0x4],0x0
  40cc8f:	jmp    40ccab <flatcc_verify_union_field@@Base+0x29b>
  40cc94:	mov    rax,QWORD PTR [rbp-0x10]
  40cc98:	mov    rdi,QWORD PTR [rax+0x10]
  40cc9c:	movzx  esi,WORD PTR [rbp-0x14]
  40cca0:	call   40d290 <flatcc_verify_union_vector_field@@Base+0x5d0>
  40cca5:	movzx  ecx,ax
  40cca8:	mov    DWORD PTR [rbp-0x4],ecx
  40ccab:	mov    eax,DWORD PTR [rbp-0x4]
  40ccae:	add    rsp,0x20
  40ccb2:	pop    rbp
  40ccb3:	ret    
  40ccb4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40ccbe:	xchg   ax,ax

000000000040ccc0 <flatcc_verify_union_vector_field@@Base>:
  40ccc0:	push   rbp
  40ccc1:	mov    rbp,rsp
  40ccc4:	sub    rsp,0x80
  40cccb:	mov    QWORD PTR [rbp-0x10],rdi
  40cccf:	mov    WORD PTR [rbp-0x12],si
  40ccd3:	mov    DWORD PTR [rbp-0x18],edx
  40ccd6:	mov    QWORD PTR [rbp-0x20],rcx
  40ccda:	mov    rdi,QWORD PTR [rbp-0x10]
  40ccde:	movzx  eax,WORD PTR [rbp-0x12]
  40cce2:	sub    eax,0x1
  40cce5:	movzx  esi,ax
  40cce8:	call   40cc50 <flatcc_verify_union_field@@Base+0x240>
  40cced:	xor    edx,edx
  40ccef:	mov    WORD PTR [rbp-0x22],ax
  40ccf3:	movzx  esi,ax
  40ccf6:	cmp    edx,esi
  40ccf8:	jne    40cd57 <flatcc_verify_union_vector_field@@Base+0x97>
  40ccfe:	mov    rdi,QWORD PTR [rbp-0x10]
  40cd02:	movzx  esi,WORD PTR [rbp-0x12]
  40cd06:	call   40cc50 <flatcc_verify_union_field@@Base+0x240>
  40cd0b:	xor    ecx,ecx
  40cd0d:	mov    WORD PTR [rbp-0x24],ax
  40cd11:	movzx  edx,ax
  40cd14:	cmp    ecx,edx
  40cd16:	jne    40cd52 <flatcc_verify_union_vector_field@@Base+0x92>
  40cd1c:	jmp    40cd21 <flatcc_verify_union_vector_field@@Base+0x61>
  40cd21:	cmp    DWORD PTR [rbp-0x18],0x0
  40cd25:	setne  al
  40cd28:	xor    al,0xff
  40cd2a:	and    al,0x1
  40cd2c:	movzx  ecx,al
  40cd2f:	mov    DWORD PTR [rbp-0x44],ecx
  40cd32:	cmp    DWORD PTR [rbp-0x44],0x0
  40cd36:	jne    40cd48 <flatcc_verify_union_vector_field@@Base+0x88>
  40cd3c:	mov    DWORD PTR [rbp-0x4],0x16
  40cd43:	jmp    40cee0 <flatcc_verify_union_vector_field@@Base+0x220>
  40cd48:	jmp    40cd4d <flatcc_verify_union_vector_field@@Base+0x8d>
  40cd4d:	jmp    40cd52 <flatcc_verify_union_vector_field@@Base+0x92>
  40cd52:	jmp    40cd57 <flatcc_verify_union_vector_field@@Base+0x97>
  40cd57:	mov    rdi,QWORD PTR [rbp-0x10]
  40cd5b:	movzx  eax,WORD PTR [rbp-0x12]
  40cd5f:	sub    eax,0x1
  40cd62:	mov    edx,DWORD PTR [rbp-0x18]
  40cd65:	movzx  esi,ax
  40cd68:	mov    ecx,0x1
  40cd6d:	mov    r8d,0x1
  40cd73:	mov    r9d,0xffffffff
  40cd79:	call   40b6c0 <flatcc_verify_vector_field@@Base>
  40cd7e:	cmp    eax,0x0
  40cd81:	je     40cdb6 <flatcc_verify_union_vector_field@@Base+0xf6>
  40cd87:	mov    rdi,QWORD PTR [rbp-0x10]
  40cd8b:	movzx  eax,WORD PTR [rbp-0x12]
  40cd8f:	sub    eax,0x1
  40cd92:	mov    edx,DWORD PTR [rbp-0x18]
  40cd95:	movzx  esi,ax
  40cd98:	mov    ecx,0x1
  40cd9d:	mov    r8d,0x1
  40cda3:	mov    r9d,0xffffffff
  40cda9:	call   40b6c0 <flatcc_verify_vector_field@@Base>
  40cdae:	mov    DWORD PTR [rbp-0x4],eax
  40cdb1:	jmp    40cee0 <flatcc_verify_union_vector_field@@Base+0x220>
  40cdb6:	mov    rdi,QWORD PTR [rbp-0x10]
  40cdba:	movzx  eax,WORD PTR [rbp-0x12]
  40cdbe:	sub    eax,0x1
  40cdc1:	movzx  esi,ax
  40cdc4:	call   40c830 <flatcc_verify_struct_as_nested_root@@Base+0x120>
  40cdc9:	xor    ecx,ecx
  40cdcb:	mov    edx,ecx
  40cdcd:	mov    QWORD PTR [rbp-0x30],rax
  40cdd1:	cmp    rdx,rax
  40cdd4:	jne    40cde6 <flatcc_verify_union_vector_field@@Base+0x126>
  40cdda:	mov    DWORD PTR [rbp-0x4],0x0
  40cde1:	jmp    40cee0 <flatcc_verify_union_vector_field@@Base+0x220>
  40cde6:	xor    esi,esi
  40cde8:	mov    rax,QWORD PTR [rbp-0x30]
  40cdec:	mov    rcx,QWORD PTR [rbp-0x30]
  40cdf0:	mov    rdi,rcx
  40cdf3:	mov    QWORD PTR [rbp-0x50],rax
  40cdf7:	call   40b690 <flatcc_verify_string_field@@Base+0x2e0>
  40cdfc:	xor    esi,esi
  40cdfe:	mov    eax,eax
  40ce00:	mov    ecx,eax
  40ce02:	mov    rdx,QWORD PTR [rbp-0x50]
  40ce06:	add    rdx,rcx
  40ce09:	mov    QWORD PTR [rbp-0x30],rdx
  40ce0d:	mov    rcx,QWORD PTR [rbp-0x30]
  40ce11:	mov    rdi,rcx
  40ce14:	call   40b690 <flatcc_verify_string_field@@Base+0x2e0>
  40ce19:	mov    DWORD PTR [rbp-0x3c],eax
  40ce1c:	mov    rcx,QWORD PTR [rbp-0x30]
  40ce20:	add    rcx,0x4
  40ce27:	mov    QWORD PTR [rbp-0x30],rcx
  40ce2b:	mov    rcx,QWORD PTR [rbp-0x30]
  40ce2f:	mov    QWORD PTR [rbp-0x38],rcx
  40ce33:	mov    rdi,QWORD PTR [rbp-0x10]
  40ce37:	mov    ax,WORD PTR [rbp-0x12]
  40ce3b:	mov    edx,DWORD PTR [rbp-0x18]
  40ce3e:	movzx  esi,ax
  40ce41:	lea    rcx,[rbp-0x40]
  40ce45:	call   40b450 <flatcc_verify_string_field@@Base+0xa0>
  40ce4a:	mov    DWORD PTR [rbp-0x48],eax
  40ce4d:	cmp    DWORD PTR [rbp-0x48],0x0
  40ce51:	jne    40ce61 <flatcc_verify_union_vector_field@@Base+0x1a1>
  40ce57:	cmp    DWORD PTR [rbp-0x40],0x0
  40ce5b:	jne    40ce6c <flatcc_verify_union_vector_field@@Base+0x1ac>
  40ce61:	mov    eax,DWORD PTR [rbp-0x48]
  40ce64:	mov    DWORD PTR [rbp-0x4],eax
  40ce67:	jmp    40cee0 <flatcc_verify_union_vector_field@@Base+0x220>
  40ce6c:	jmp    40ce71 <flatcc_verify_union_vector_field@@Base+0x1b1>
  40ce71:	mov    rax,QWORD PTR [rbp-0x10]
  40ce75:	mov    rdi,QWORD PTR [rax]
  40ce78:	mov    rax,QWORD PTR [rbp-0x10]
  40ce7c:	mov    esi,DWORD PTR [rax+0x8]
  40ce7f:	mov    edx,DWORD PTR [rbp-0x40]
  40ce82:	mov    rax,QWORD PTR [rbp-0x10]
  40ce86:	mov    rax,QWORD PTR [rax]
  40ce89:	mov    ecx,DWORD PTR [rbp-0x40]
  40ce8c:	mov    QWORD PTR [rbp-0x58],rdi
  40ce90:	mov    rdi,rax
  40ce93:	mov    DWORD PTR [rbp-0x5c],esi
  40ce96:	mov    esi,ecx
  40ce98:	mov    DWORD PTR [rbp-0x60],edx
  40ce9b:	call   40b690 <flatcc_verify_string_field@@Base+0x2e0>
  40cea0:	mov    r8d,DWORD PTR [rbp-0x3c]
  40cea4:	mov    r9,QWORD PTR [rbp-0x38]
  40cea8:	mov    rdi,QWORD PTR [rbp-0x10]
  40ceac:	mov    ecx,DWORD PTR [rdi+0xc]
  40ceaf:	mov    rdi,QWORD PTR [rbp-0x20]
  40ceb3:	mov    r10,QWORD PTR [rbp-0x58]
  40ceb7:	mov    QWORD PTR [rbp-0x68],rdi
  40cebb:	mov    rdi,r10
  40cebe:	mov    esi,DWORD PTR [rbp-0x5c]
  40cec1:	mov    edx,DWORD PTR [rbp-0x60]
  40cec4:	mov    DWORD PTR [rbp-0x6c],ecx
  40cec7:	mov    ecx,eax
  40cec9:	mov    eax,DWORD PTR [rbp-0x6c]
  40cecc:	mov    DWORD PTR [rsp],eax
  40cecf:	mov    r11,QWORD PTR [rbp-0x68]
  40ced3:	mov    QWORD PTR [rsp+0x8],r11
  40ced8:	call   40cef0 <flatcc_verify_union_vector_field@@Base+0x230>
  40cedd:	mov    DWORD PTR [rbp-0x4],eax
  40cee0:	mov    eax,DWORD PTR [rbp-0x4]
  40cee3:	add    rsp,0x80
  40ceea:	pop    rbp
  40ceeb:	ret    
  40ceec:	nop    DWORD PTR [rax+0x0]
  40cef0:	push   rbp
  40cef1:	mov    rbp,rsp
  40cef4:	sub    rsp,0x70
  40cef8:	mov    rax,QWORD PTR [rbp+0x18]
  40cefc:	mov    r10d,DWORD PTR [rbp+0x10]
  40cf00:	mov    QWORD PTR [rbp-0x10],rdi
  40cf04:	mov    DWORD PTR [rbp-0x14],esi
  40cf07:	mov    DWORD PTR [rbp-0x18],edx
  40cf0a:	mov    DWORD PTR [rbp-0x1c],ecx
  40cf0d:	mov    DWORD PTR [rbp-0x20],r8d
  40cf11:	mov    QWORD PTR [rbp-0x28],r9
  40cf15:	mov    eax,DWORD PTR [rbp+0x10]
  40cf18:	mov    ecx,eax
  40cf1a:	add    ecx,0xffffffff
  40cf1d:	mov    DWORD PTR [rbp+0x10],ecx
  40cf20:	cmp    eax,0x0
  40cf23:	setg   dl
  40cf26:	and    dl,0x1
  40cf29:	movzx  eax,dl
  40cf2c:	mov    DWORD PTR [rbp-0x5c],eax
  40cf2f:	cmp    DWORD PTR [rbp-0x5c],0x0
  40cf33:	jne    40cf45 <flatcc_verify_union_vector_field@@Base+0x285>
  40cf39:	mov    DWORD PTR [rbp-0x4],0x3
  40cf40:	jmp    40d124 <flatcc_verify_union_vector_field@@Base+0x464>
  40cf45:	jmp    40cf4a <flatcc_verify_union_vector_field@@Base+0x28a>
  40cf4a:	mov    rdi,QWORD PTR [rbp-0x10]
  40cf4e:	mov    esi,DWORD PTR [rbp-0x14]
  40cf51:	mov    edx,DWORD PTR [rbp-0x18]
  40cf54:	mov    ecx,DWORD PTR [rbp-0x1c]
  40cf57:	mov    eax,0x4
  40cf5c:	mov    r8d,eax
  40cf5f:	mov    r9d,eax
  40cf62:	mov    DWORD PTR [rsp],0x3fffffff
  40cf69:	call   40b7a0 <flatcc_verify_vector_field@@Base+0xe0>
  40cf6e:	cmp    eax,0x0
  40cf71:	je     40cfa3 <flatcc_verify_union_vector_field@@Base+0x2e3>
  40cf77:	mov    rdi,QWORD PTR [rbp-0x10]
  40cf7b:	mov    esi,DWORD PTR [rbp-0x14]
  40cf7e:	mov    edx,DWORD PTR [rbp-0x18]
  40cf81:	mov    ecx,DWORD PTR [rbp-0x1c]
  40cf84:	mov    eax,0x4
  40cf89:	mov    r8d,eax
  40cf8c:	mov    r9d,eax
  40cf8f:	mov    DWORD PTR [rsp],0x3fffffff
  40cf96:	call   40b7a0 <flatcc_verify_vector_field@@Base+0xe0>
  40cf9b:	mov    DWORD PTR [rbp-0x4],eax
  40cf9e:	jmp    40d124 <flatcc_verify_union_vector_field@@Base+0x464>
  40cfa3:	mov    eax,DWORD PTR [rbp-0x1c]
  40cfa6:	add    eax,DWORD PTR [rbp-0x18]
  40cfa9:	mov    DWORD PTR [rbp-0x18],eax
  40cfac:	mov    rdi,QWORD PTR [rbp-0x10]
  40cfb0:	mov    esi,DWORD PTR [rbp-0x18]
  40cfb3:	call   40b690 <flatcc_verify_string_field@@Base+0x2e0>
  40cfb8:	mov    DWORD PTR [rbp-0x30],eax
  40cfbb:	mov    eax,DWORD PTR [rbp-0x30]
  40cfbe:	cmp    eax,DWORD PTR [rbp-0x20]
  40cfc1:	sete   cl
  40cfc4:	and    cl,0x1
  40cfc7:	movzx  eax,cl
  40cfca:	mov    DWORD PTR [rbp-0x60],eax
  40cfcd:	cmp    DWORD PTR [rbp-0x60],0x0
  40cfd1:	jne    40cfe3 <flatcc_verify_union_vector_field@@Base+0x323>
  40cfd7:	mov    DWORD PTR [rbp-0x4],0x22
  40cfde:	jmp    40d124 <flatcc_verify_union_vector_field@@Base+0x464>
  40cfe3:	jmp    40cfe8 <flatcc_verify_union_vector_field@@Base+0x328>
  40cfe8:	mov    eax,DWORD PTR [rbp-0x18]
  40cfeb:	mov    ecx,eax
  40cfed:	add    rcx,0x4
  40cff4:	mov    DWORD PTR [rbp-0x18],ecx
  40cff7:	mov    rdx,QWORD PTR [rbp-0x10]
  40cffb:	mov    QWORD PTR [rbp-0x58],rdx
  40cfff:	mov    eax,DWORD PTR [rbp-0x14]
  40d002:	mov    DWORD PTR [rbp-0x50],eax
  40d005:	mov    eax,DWORD PTR [rbp+0x10]
  40d008:	mov    DWORD PTR [rbp-0x4c],eax
  40d00b:	mov    DWORD PTR [rbp-0x2c],0x0
  40d012:	mov    eax,DWORD PTR [rbp-0x2c]
  40d015:	cmp    eax,DWORD PTR [rbp-0x30]
  40d018:	jae    40d11d <flatcc_verify_union_vector_field@@Base+0x45d>
  40d01e:	mov    rdi,QWORD PTR [rbp-0x10]
  40d022:	mov    esi,DWORD PTR [rbp-0x18]
  40d025:	call   40b690 <flatcc_verify_string_field@@Base+0x2e0>
  40d02a:	mov    DWORD PTR [rbp-0x34],eax
  40d02d:	cmp    DWORD PTR [rbp-0x34],0x0
  40d031:	jne    40d07b <flatcc_verify_union_vector_field@@Base+0x3bb>
  40d037:	jmp    40d03c <flatcc_verify_union_vector_field@@Base+0x37c>
  40d03c:	mov    rax,QWORD PTR [rbp-0x28]
  40d040:	mov    ecx,DWORD PTR [rbp-0x2c]
  40d043:	mov    edx,ecx
  40d045:	movzx  ecx,BYTE PTR [rax+rdx*1]
  40d049:	cmp    ecx,0x0
  40d04c:	sete   sil
  40d050:	and    sil,0x1
  40d054:	movzx  ecx,sil
  40d058:	mov    DWORD PTR [rbp-0x64],ecx
  40d05b:	cmp    DWORD PTR [rbp-0x64],0x0
  40d05f:	jne    40d071 <flatcc_verify_union_vector_field@@Base+0x3b1>
  40d065:	mov    DWORD PTR [rbp-0x4],0x20
  40d06c:	jmp    40d124 <flatcc_verify_union_vector_field@@Base+0x464>
  40d071:	jmp    40d076 <flatcc_verify_union_vector_field@@Base+0x3b6>
  40d076:	jmp    40d0fb <flatcc_verify_union_vector_field@@Base+0x43b>
  40d07b:	jmp    40d080 <flatcc_verify_union_vector_field@@Base+0x3c0>
  40d080:	mov    rax,QWORD PTR [rbp-0x28]
  40d084:	mov    ecx,DWORD PTR [rbp-0x2c]
  40d087:	mov    edx,ecx
  40d089:	movzx  ecx,BYTE PTR [rax+rdx*1]
  40d08d:	cmp    ecx,0x0
  40d090:	setne  sil
  40d094:	and    sil,0x1
  40d098:	movzx  ecx,sil
  40d09c:	mov    DWORD PTR [rbp-0x68],ecx
  40d09f:	cmp    DWORD PTR [rbp-0x68],0x0
  40d0a3:	jne    40d0b5 <flatcc_verify_union_vector_field@@Base+0x3f5>
  40d0a9:	mov    DWORD PTR [rbp-0x4],0x21
  40d0b0:	jmp    40d124 <flatcc_verify_union_vector_field@@Base+0x464>
  40d0b5:	jmp    40d0ba <flatcc_verify_union_vector_field@@Base+0x3fa>
  40d0ba:	mov    rax,QWORD PTR [rbp-0x28]
  40d0be:	mov    ecx,DWORD PTR [rbp-0x2c]
  40d0c1:	mov    edx,ecx
  40d0c3:	mov    sil,BYTE PTR [rax+rdx*1]
  40d0c7:	mov    BYTE PTR [rbp-0x48],sil
  40d0cb:	mov    ecx,DWORD PTR [rbp-0x18]
  40d0ce:	mov    DWORD PTR [rbp-0x44],ecx
  40d0d1:	mov    ecx,DWORD PTR [rbp-0x34]
  40d0d4:	mov    DWORD PTR [rbp-0x40],ecx
  40d0d7:	lea    rdi,[rbp-0x58]
  40d0db:	call   QWORD PTR [rbp+0x18]
  40d0de:	cmp    eax,0x0
  40d0e1:	je     40d0f6 <flatcc_verify_union_vector_field@@Base+0x436>
  40d0e7:	lea    rdi,[rbp-0x58]
  40d0eb:	call   QWORD PTR [rbp+0x18]
  40d0ee:	mov    DWORD PTR [rbp-0x4],eax
  40d0f1:	jmp    40d124 <flatcc_verify_union_vector_field@@Base+0x464>
  40d0f6:	jmp    40d0fb <flatcc_verify_union_vector_field@@Base+0x43b>
  40d0fb:	jmp    40d100 <flatcc_verify_union_vector_field@@Base+0x440>
  40d100:	mov    eax,DWORD PTR [rbp-0x2c]
  40d103:	add    eax,0x1
  40d106:	mov    DWORD PTR [rbp-0x2c],eax
  40d109:	mov    eax,DWORD PTR [rbp-0x18]
  40d10c:	mov    ecx,eax
  40d10e:	add    rcx,0x4
  40d115:	mov    DWORD PTR [rbp-0x18],ecx
  40d118:	jmp    40d012 <flatcc_verify_union_vector_field@@Base+0x352>
  40d11d:	mov    DWORD PTR [rbp-0x4],0x0
  40d124:	mov    eax,DWORD PTR [rbp-0x4]
  40d127:	add    rsp,0x70
  40d12b:	pop    rbp
  40d12c:	ret    
  40d12d:	nop    DWORD PTR [rax]
  40d130:	push   rbp
  40d131:	mov    rbp,rsp
  40d134:	xor    eax,eax
  40d136:	mov    DWORD PTR [rbp-0x4],edi
  40d139:	mov    DWORD PTR [rbp-0x8],esi
  40d13c:	mov    DWORD PTR [rbp-0xc],edx
  40d13f:	mov    ecx,DWORD PTR [rbp-0x8]
  40d142:	add    ecx,DWORD PTR [rbp-0xc]
  40d145:	mov    DWORD PTR [rbp-0x10],ecx
  40d148:	mov    ecx,DWORD PTR [rbp-0x10]
  40d14b:	cmp    ecx,DWORD PTR [rbp-0x8]
  40d14e:	mov    BYTE PTR [rbp-0x11],al
  40d151:	jbe    40d18f <flatcc_verify_union_vector_field@@Base+0x4cf>
  40d157:	xor    eax,eax
  40d159:	mov    ecx,DWORD PTR [rbp-0x10]
  40d15c:	mov    edx,ecx
  40d15e:	add    rdx,0x4
  40d165:	mov    ecx,DWORD PTR [rbp-0x4]
  40d168:	mov    esi,ecx
  40d16a:	cmp    rdx,rsi
  40d16d:	mov    BYTE PTR [rbp-0x11],al
  40d170:	ja     40d18f <flatcc_verify_union_vector_field@@Base+0x4cf>
  40d176:	mov    eax,DWORD PTR [rbp-0x10]
  40d179:	mov    ecx,eax
  40d17b:	and    rcx,0x3
  40d182:	cmp    rcx,0x0
  40d186:	setne  dl
  40d189:	xor    dl,0xff
  40d18c:	mov    BYTE PTR [rbp-0x11],dl
  40d18f:	mov    al,BYTE PTR [rbp-0x11]
  40d192:	and    al,0x1
  40d194:	movzx  eax,al
  40d197:	pop    rbp
  40d198:	ret    
  40d199:	nop    DWORD PTR [rax+0x0]
  40d1a0:	push   rbp
  40d1a1:	mov    rbp,rsp
  40d1a4:	sub    rsp,0x10
  40d1a8:	mov    QWORD PTR [rbp-0x8],rdi
  40d1ac:	mov    rax,QWORD PTR [rbp-0x8]
  40d1b0:	mov    edi,DWORD PTR [rax]
  40d1b2:	call   40d1c0 <flatcc_verify_union_vector_field@@Base+0x500>
  40d1b7:	add    rsp,0x10
  40d1bb:	pop    rbp
  40d1bc:	ret    
  40d1bd:	nop    DWORD PTR [rax]
  40d1c0:	push   rbp
  40d1c1:	mov    rbp,rsp
  40d1c4:	mov    DWORD PTR [rbp-0x4],edi
  40d1c7:	mov    eax,DWORD PTR [rbp-0x4]
  40d1ca:	pop    rbp
  40d1cb:	ret    
  40d1cc:	nop    DWORD PTR [rax+0x0]
  40d1d0:	push   rbp
  40d1d1:	mov    rbp,rsp
  40d1d4:	mov    DWORD PTR [rbp-0x4],edi
  40d1d7:	mov    DWORD PTR [rbp-0x8],esi
  40d1da:	mov    DWORD PTR [rbp-0xc],edx
  40d1dd:	mov    WORD PTR [rbp-0xe],cx
  40d1e1:	mov    eax,DWORD PTR [rbp-0x8]
  40d1e4:	add    eax,DWORD PTR [rbp-0xc]
  40d1e7:	mov    DWORD PTR [rbp-0x14],eax
  40d1ea:	movzx  eax,WORD PTR [rbp-0xe]
  40d1ee:	mov    r8d,eax
  40d1f1:	cmp    r8,0x4
  40d1f5:	jae    40d209 <flatcc_verify_union_vector_field@@Base+0x549>
  40d1fb:	mov    eax,0x4
  40d200:	mov    QWORD PTR [rbp-0x20],rax
  40d204:	jmp    40d213 <flatcc_verify_union_vector_field@@Base+0x553>
  40d209:	movzx  eax,WORD PTR [rbp-0xe]
  40d20d:	mov    ecx,eax
  40d20f:	mov    QWORD PTR [rbp-0x20],rcx
  40d213:	mov    rax,QWORD PTR [rbp-0x20]
  40d217:	xor    ecx,ecx
  40d219:	mov    WORD PTR [rbp-0xe],ax
  40d21d:	mov    edx,DWORD PTR [rbp-0x14]
  40d220:	cmp    edx,DWORD PTR [rbp-0x8]
  40d223:	mov    BYTE PTR [rbp-0x21],cl
  40d226:	jbe    40d27b <flatcc_verify_union_vector_field@@Base+0x5bb>
  40d22c:	xor    eax,eax
  40d22e:	mov    ecx,DWORD PTR [rbp-0x14]
  40d231:	mov    edx,ecx
  40d233:	add    rdx,0x4
  40d23a:	mov    ecx,DWORD PTR [rbp-0x4]
  40d23d:	mov    esi,ecx
  40d23f:	cmp    rdx,rsi
  40d242:	mov    BYTE PTR [rbp-0x21],al
  40d245:	ja     40d27b <flatcc_verify_union_vector_field@@Base+0x5bb>
  40d24b:	mov    eax,DWORD PTR [rbp-0x14]
  40d24e:	mov    ecx,eax
  40d250:	add    rcx,0x4
  40d257:	movzx  eax,WORD PTR [rbp-0xe]
  40d25b:	sub    eax,0x1
  40d25e:	movsxd rdx,eax
  40d261:	or     rdx,0x3
  40d268:	and    rcx,rdx
  40d26b:	cmp    rcx,0x0
  40d26f:	setne  sil
  40d273:	xor    sil,0xff
  40d277:	mov    BYTE PTR [rbp-0x21],sil
  40d27b:	mov    al,BYTE PTR [rbp-0x21]
  40d27e:	and    al,0x1
  40d280:	movzx  eax,al
  40d283:	pop    rbp
  40d284:	ret    
  40d285:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40d28f:	nop
  40d290:	push   rbp
  40d291:	mov    rbp,rsp
  40d294:	sub    rsp,0x10
  40d298:	mov    QWORD PTR [rbp-0x8],rdi
  40d29c:	mov    DWORD PTR [rbp-0xc],esi
  40d29f:	mov    rax,QWORD PTR [rbp-0x8]
  40d2a3:	mov    ecx,DWORD PTR [rbp-0xc]
  40d2a6:	mov    edx,ecx
  40d2a8:	add    rax,rdx
  40d2ab:	mov    rdi,rax
  40d2ae:	call   40d2c0 <flatcc_verify_union_vector_field@@Base+0x600>
  40d2b3:	movzx  eax,ax
  40d2b6:	add    rsp,0x10
  40d2ba:	pop    rbp
  40d2bb:	ret    
  40d2bc:	nop    DWORD PTR [rax+0x0]
  40d2c0:	push   rbp
  40d2c1:	mov    rbp,rsp
  40d2c4:	sub    rsp,0x10
  40d2c8:	mov    QWORD PTR [rbp-0x8],rdi
  40d2cc:	mov    rax,QWORD PTR [rbp-0x8]
  40d2d0:	movzx  edi,WORD PTR [rax]
  40d2d3:	call   40d2f0 <flatcc_verify_union_vector_field@@Base+0x630>
  40d2d8:	movzx  eax,ax
  40d2db:	add    rsp,0x10
  40d2df:	pop    rbp
  40d2e0:	ret    
  40d2e1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40d2eb:	nop    DWORD PTR [rax+rax*1+0x0]
  40d2f0:	push   rbp
  40d2f1:	mov    rbp,rsp
  40d2f4:	mov    WORD PTR [rbp-0x2],di
  40d2f8:	movzx  eax,WORD PTR [rbp-0x2]
  40d2fc:	pop    rbp
  40d2fd:	ret    
  40d2fe:	xchg   ax,ax
  40d300:	push   rbp
  40d301:	mov    rbp,rsp
  40d304:	mov    DWORD PTR [rbp-0x4],edi
  40d307:	mov    eax,DWORD PTR [rbp-0x4]
  40d30a:	pop    rbp
  40d30b:	ret    
  40d30c:	nop    DWORD PTR [rax+0x0]
  40d310:	push   rbp
  40d311:	mov    rbp,rsp
  40d314:	sub    rsp,0x10
  40d318:	mov    QWORD PTR [rbp-0x8],rdi
  40d31c:	mov    rax,QWORD PTR [rbp-0x8]
  40d320:	mov    edi,DWORD PTR [rax]
  40d322:	call   40d330 <flatcc_verify_union_vector_field@@Base+0x670>
  40d327:	add    rsp,0x10
  40d32b:	pop    rbp
  40d32c:	ret    
  40d32d:	nop    DWORD PTR [rax]
  40d330:	push   rbp
  40d331:	mov    rbp,rsp
  40d334:	mov    DWORD PTR [rbp-0x4],edi
  40d337:	mov    eax,DWORD PTR [rbp-0x4]
  40d33a:	pop    rbp
  40d33b:	ret    
  40d33c:	nop    DWORD PTR [rax+0x0]

000000000040d340 <__libc_csu_init@@Base>:
  40d340:	endbr64 
  40d344:	push   r15
  40d346:	lea    r15,[rip+0x5ab3]        # 412e00 <flatcc_builder_padding_base@@Base+0x4c30>
  40d34d:	push   r14
  40d34f:	mov    r14,rdx
  40d352:	push   r13
  40d354:	mov    r13,rsi
  40d357:	push   r12
  40d359:	mov    r12d,edi
  40d35c:	push   rbp
  40d35d:	lea    rbp,[rip+0x5aa4]        # 412e08 <flatcc_builder_padding_base@@Base+0x4c38>
  40d364:	push   rbx
  40d365:	sub    rbp,r15
  40d368:	sub    rsp,0x8
  40d36c:	call   403000 <free@plt-0x30>
  40d371:	sar    rbp,0x3
  40d375:	je     40d396 <__libc_csu_init@@Base+0x56>
  40d377:	xor    ebx,ebx
  40d379:	nop    DWORD PTR [rax+0x0]
  40d380:	mov    rdx,r14
  40d383:	mov    rsi,r13
  40d386:	mov    edi,r12d
  40d389:	call   QWORD PTR [r15+rbx*8]
  40d38d:	add    rbx,0x1
  40d391:	cmp    rbp,rbx
  40d394:	jne    40d380 <__libc_csu_init@@Base+0x40>
  40d396:	add    rsp,0x8
  40d39a:	pop    rbx
  40d39b:	pop    rbp
  40d39c:	pop    r12
  40d39e:	pop    r13
  40d3a0:	pop    r14
  40d3a2:	pop    r15
  40d3a4:	ret    
  40d3a5:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

000000000040d3b0 <__libc_csu_fini@@Base>:
  40d3b0:	endbr64 
  40d3b4:	ret    

Disassembly of section .fini:

000000000040d3b8 <.fini>:
  40d3b8:	endbr64 
  40d3bc:	sub    rsp,0x8
  40d3c0:	add    rsp,0x8
  40d3c4:	ret    
