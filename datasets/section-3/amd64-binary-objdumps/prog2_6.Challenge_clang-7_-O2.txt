
../repos/prog2/6.Challenge:     file format elf64-x86-64


Disassembly of section .init:

0000000000401000 <.init>:
  401000:	endbr64 
  401004:	sub    rsp,0x8
  401008:	mov    rax,QWORD PTR [rip+0x2fe9]        # 403ff8 <__gmon_start__>
  40100f:	test   rax,rax
  401012:	je     401016 <printf@plt-0x1a>
  401014:	call   rax
  401016:	add    rsp,0x8
  40101a:	ret    

Disassembly of section .plt:

0000000000401020 <printf@plt-0x10>:
  401020:	push   QWORD PTR [rip+0x2fe2]        # 404008 <_IO_stdin_used@@Base+0x2008>
  401026:	jmp    QWORD PTR [rip+0x2fe4]        # 404010 <_IO_stdin_used@@Base+0x2010>
  40102c:	nop    DWORD PTR [rax+0x0]

0000000000401030 <printf@plt>:
  401030:	jmp    QWORD PTR [rip+0x2fe2]        # 404018 <printf@GLIBC_2.2.5>
  401036:	push   0x0
  40103b:	jmp    401020 <printf@plt-0x10>

0000000000401040 <malloc@plt>:
  401040:	jmp    QWORD PTR [rip+0x2fda]        # 404020 <malloc@GLIBC_2.2.5>
  401046:	push   0x1
  40104b:	jmp    401020 <printf@plt-0x10>

0000000000401050 <__isoc99_scanf@plt>:
  401050:	jmp    QWORD PTR [rip+0x2fd2]        # 404028 <__isoc99_scanf@GLIBC_2.7>
  401056:	push   0x2
  40105b:	jmp    401020 <printf@plt-0x10>

0000000000401060 <exit@plt>:
  401060:	jmp    QWORD PTR [rip+0x2fca]        # 404030 <exit@GLIBC_2.2.5>
  401066:	push   0x3
  40106b:	jmp    401020 <printf@plt-0x10>

Disassembly of section .text:

0000000000401070 <_start@@Base>:
  401070:	endbr64 
  401074:	xor    ebp,ebp
  401076:	mov    r9,rdx
  401079:	pop    rsi
  40107a:	mov    rdx,rsp
  40107d:	and    rsp,0xfffffffffffffff0
  401081:	push   rax
  401082:	push   rsp
  401083:	mov    r8,0x4015a0
  40108a:	mov    rcx,0x401530
  401091:	mov    rdi,0x401160
  401098:	call   QWORD PTR [rip+0x2f52]        # 403ff0 <__libc_start_main@GLIBC_2.2.5>
  40109e:	hlt    
  40109f:	nop
  4010a0:	endbr64 
  4010a4:	ret    
  4010a5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4010af:	nop
  4010b0:	mov    eax,0x404048
  4010b5:	cmp    rax,0x404048
  4010bb:	je     4010d0 <_start@@Base+0x60>
  4010bd:	mov    eax,0x0
  4010c2:	test   rax,rax
  4010c5:	je     4010d0 <_start@@Base+0x60>
  4010c7:	mov    edi,0x404048
  4010cc:	jmp    rax
  4010ce:	xchg   ax,ax
  4010d0:	ret    
  4010d1:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4010dc:	nop    DWORD PTR [rax+0x0]
  4010e0:	mov    esi,0x404048
  4010e5:	sub    rsi,0x404048
  4010ec:	mov    rax,rsi
  4010ef:	shr    rsi,0x3f
  4010f3:	sar    rax,0x3
  4010f7:	add    rsi,rax
  4010fa:	sar    rsi,1
  4010fd:	je     401110 <_start@@Base+0xa0>
  4010ff:	mov    eax,0x0
  401104:	test   rax,rax
  401107:	je     401110 <_start@@Base+0xa0>
  401109:	mov    edi,0x404048
  40110e:	jmp    rax
  401110:	ret    
  401111:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40111c:	nop    DWORD PTR [rax+0x0]
  401120:	endbr64 
  401124:	cmp    BYTE PTR [rip+0x2f1d],0x0        # 404048 <__bss_start@@Base>
  40112b:	jne    401140 <_start@@Base+0xd0>
  40112d:	push   rbp
  40112e:	mov    rbp,rsp
  401131:	call   4010b0 <_start@@Base+0x40>
  401136:	mov    BYTE PTR [rip+0x2f0b],0x1        # 404048 <__bss_start@@Base>
  40113d:	pop    rbp
  40113e:	ret    
  40113f:	nop
  401140:	ret    
  401141:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40114c:	nop    DWORD PTR [rax+0x0]
  401150:	endbr64 
  401154:	jmp    4010e0 <_start@@Base+0x70>
  401156:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000401160 <main@@Base>:
  401160:	push   rbp
  401161:	push   r15
  401163:	push   r14
  401165:	push   r13
  401167:	push   r12
  401169:	push   rbx
  40116a:	sub    rsp,0x148
  401171:	lea    rdi,[rip+0xf38]        # 4020b0 <_IO_stdin_used@@Base+0xb0>
  401178:	lea    rsi,[rsp+0x1c]
  40117d:	xor    eax,eax
  40117f:	call   401050 <__isoc99_scanf@plt>
  401184:	mov    r12d,DWORD PTR [rsp+0x1c]
  401189:	test   r12d,r12d
  40118c:	je     401526 <main@@Base+0x3c6>
  401192:	lea    r14,[rip+0xf1a]        # 4020b3 <_IO_stdin_used@@Base+0xb3>
  401199:	lea    rbx,[rip+0xf25]        # 4020c5 <_IO_stdin_used@@Base+0xc5>
  4011a0:	vbroadcastss ymm0,DWORD PTR [rip+0xed7]        # 402080 <_IO_stdin_used@@Base+0x80>
  4011a9:	vmovups YMMWORD PTR [rsp+0x20],ymm0
  4011af:	vbroadcastsd ymm0,QWORD PTR [rip+0xef0]        # 4020a8 <_IO_stdin_used@@Base+0xa8>
  4011b8:	vmovups YMMWORD PTR [rsp+0x120],ymm0
  4011c1:	vbroadcastss ymm0,DWORD PTR [rip+0xeba]        # 402084 <_IO_stdin_used@@Base+0x84>
  4011ca:	vmovups YMMWORD PTR [rsp+0x100],ymm0
  4011d3:	vbroadcastss ymm0,DWORD PTR [rip+0xeac]        # 402088 <_IO_stdin_used@@Base+0x88>
  4011dc:	vmovups YMMWORD PTR [rsp+0xe0],ymm0
  4011e5:	vbroadcastss ymm0,DWORD PTR [rip+0xe9e]        # 40208c <_IO_stdin_used@@Base+0x8c>
  4011ee:	vmovups YMMWORD PTR [rsp+0xc0],ymm0
  4011f7:	vbroadcastss ymm0,DWORD PTR [rip+0xe90]        # 402090 <_IO_stdin_used@@Base+0x90>
  401200:	vmovups YMMWORD PTR [rsp+0xa0],ymm0
  401209:	vbroadcastss ymm0,DWORD PTR [rip+0xe82]        # 402094 <_IO_stdin_used@@Base+0x94>
  401212:	vmovups YMMWORD PTR [rsp+0x80],ymm0
  40121b:	vbroadcastss ymm0,DWORD PTR [rip+0xe74]        # 402098 <_IO_stdin_used@@Base+0x98>
  401224:	vmovups YMMWORD PTR [rsp+0x60],ymm0
  40122a:	vpbroadcastq ymm0,QWORD PTR [rip+0xe6d]        # 4020a0 <_IO_stdin_used@@Base+0xa0>
  401233:	vmovdqu YMMWORD PTR [rsp+0x40],ymm0
  401239:	lea    rbp,[rip+0xe70]        # 4020b0 <_IO_stdin_used@@Base+0xb0>
  401240:	lea    eax,[r12+r12*1]
  401244:	movsxd rdi,eax
  401247:	shl    rdi,0x2
  40124b:	vzeroupper 
  40124e:	call   401040 <malloc@plt>
  401253:	mov    r15,rax
  401256:	test   r12d,r12d
  401259:	jle    401270 <main@@Base+0x110>
  40125b:	mov    eax,r12d
  40125e:	cmp    r12d,0x10
  401262:	jae    401290 <main@@Base+0x130>
  401264:	xor    ecx,ecx
  401266:	jmp    401450 <main@@Base+0x2f0>
  40126b:	nop    DWORD PTR [rax+rax*1+0x0]
  401270:	xor    r13d,r13d
  401273:	xor    eax,eax
  401275:	mov    rdi,r14
  401278:	call   401030 <printf@plt>
  40127d:	jmp    4014d4 <main@@Base+0x374>
  401282:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40128c:	nop    DWORD PTR [rax+0x0]
  401290:	mov    ecx,eax
  401292:	and    ecx,0xfffffff0
  401295:	lea    rdi,[rcx-0x10]
  401299:	mov    rsi,rdi
  40129c:	shr    rsi,0x4
  4012a0:	add    rsi,0x1
  4012a4:	mov    edx,esi
  4012a6:	and    edx,0x3
  4012a9:	cmp    rdi,0x30
  4012ad:	vmovdqu ymm8,YMMWORD PTR [rsp+0x100]
  4012b6:	vmovdqu ymm9,YMMWORD PTR [rsp+0xe0]
  4012bf:	vmovdqu ymm10,YMMWORD PTR [rsp+0xc0]
  4012c8:	vmovdqu ymm11,YMMWORD PTR [rsp+0xa0]
  4012d1:	vmovdqu ymm12,YMMWORD PTR [rsp+0x80]
  4012da:	vmovdqu ymm13,YMMWORD PTR [rsp+0x60]
  4012e0:	vmovdqu ymm14,YMMWORD PTR [rsp+0x40]
  4012e6:	jae    401311 <main@@Base+0x1b1>
  4012e8:	xor    esi,esi
  4012ea:	vmovdqa ymm0,YMMWORD PTR [rip+0xd4e]        # 402040 <_IO_stdin_used@@Base+0x40>
  4012f2:	vmovdqa ymm1,YMMWORD PTR [rip+0xd26]        # 402020 <_IO_stdin_used@@Base+0x20>
  4012fa:	vmovdqa ymm5,YMMWORD PTR [rip+0xd5e]        # 402060 <_IO_stdin_used@@Base+0x60>
  401302:	vpcmpeqd ymm6,ymm6,ymm6
  401306:	vmovdqu ymm7,YMMWORD PTR [rsp+0x20]
  40130c:	jmp    4013ed <main@@Base+0x28d>
  401311:	mov    edi,0x1
  401316:	sub    rdi,rsi
  401319:	add    rdi,rdx
  40131c:	add    rdi,0xffffffffffffffff
  401320:	xor    esi,esi
  401322:	vmovdqa ymm0,YMMWORD PTR [rip+0xd16]        # 402040 <_IO_stdin_used@@Base+0x40>
  40132a:	vmovdqa ymm1,YMMWORD PTR [rip+0xcee]        # 402020 <_IO_stdin_used@@Base+0x20>
  401332:	vmovdqa ymm5,YMMWORD PTR [rip+0xd26]        # 402060 <_IO_stdin_used@@Base+0x60>
  40133a:	vpcmpeqd ymm6,ymm6,ymm6
  40133e:	vmovdqu ymm7,YMMWORD PTR [rsp+0x20]
  401344:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40134e:	xchg   ax,ax
  401350:	vpermd ymm2,ymm5,ymm0
  401355:	vpermd ymm3,ymm5,ymm1
  40135a:	vinserti128 ymm2,ymm2,xmm3,0x1
  401360:	vpsubd ymm3,ymm2,ymm6
  401364:	vpaddd ymm4,ymm2,ymm7
  401368:	vmovdqu YMMWORD PTR [r15+rsi*4],ymm3
  40136e:	vmovdqu YMMWORD PTR [r15+rsi*4+0x20],ymm4
  401375:	vpaddd ymm3,ymm2,ymm8
  40137a:	vpsubd ymm3,ymm3,ymm6
  40137e:	vpaddd ymm4,ymm2,ymm9
  401383:	vmovdqu YMMWORD PTR [r15+rsi*4+0x40],ymm3
  40138a:	vmovdqu YMMWORD PTR [r15+rsi*4+0x60],ymm4
  401391:	vpaddd ymm3,ymm2,ymm10
  401396:	vpsubd ymm3,ymm3,ymm6
  40139a:	vpaddd ymm4,ymm2,ymm11
  40139f:	vmovdqu YMMWORD PTR [r15+rsi*4+0x80],ymm3
  4013a9:	vmovdqu YMMWORD PTR [r15+rsi*4+0xa0],ymm4
  4013b3:	vpaddd ymm3,ymm2,ymm12
  4013b8:	vpsubd ymm3,ymm3,ymm6
  4013bc:	vpaddd ymm2,ymm2,ymm13
  4013c1:	vmovdqu YMMWORD PTR [r15+rsi*4+0xc0],ymm3
  4013cb:	vmovdqu YMMWORD PTR [r15+rsi*4+0xe0],ymm2
  4013d5:	add    rsi,0x40
  4013d9:	vpaddq ymm0,ymm0,ymm14
  4013de:	vpaddq ymm1,ymm1,ymm14
  4013e3:	add    rdi,0x4
  4013e7:	jne    401350 <main@@Base+0x1f0>
  4013ed:	test   rdx,rdx
  4013f0:	vmovdqu ymm4,YMMWORD PTR [rsp+0x120]
  4013f9:	je     401444 <main@@Base+0x2e4>
  4013fb:	lea    rsi,[r15+rsi*4]
  4013ff:	add    rsi,0x20
  401403:	shl    rdx,0x6
  401407:	xor    edi,edi
  401409:	nop    DWORD PTR [rax+0x0]
  401410:	vpermd ymm2,ymm5,ymm0
  401415:	vpermd ymm3,ymm5,ymm1
  40141a:	vinserti128 ymm2,ymm2,xmm3,0x1
  401420:	vpsubd ymm3,ymm2,ymm6
  401424:	vpaddd ymm2,ymm2,ymm7
  401428:	vmovdqu YMMWORD PTR [rsi+rdi*1-0x20],ymm3
  40142e:	vmovdqu YMMWORD PTR [rsi+rdi*1],ymm2
  401433:	vpaddq ymm0,ymm0,ymm4
  401437:	vpaddq ymm1,ymm1,ymm4
  40143b:	add    rdi,0x40
  40143f:	cmp    rdx,rdi
  401442:	jne    401410 <main@@Base+0x2b0>
  401444:	cmp    rcx,rax
  401447:	je     401460 <main@@Base+0x300>
  401449:	nop    DWORD PTR [rax+0x0]
  401450:	lea    rdx,[rcx+0x1]
  401454:	mov    DWORD PTR [r15+rcx*4],edx
  401458:	mov    rcx,rdx
  40145b:	cmp    rax,rdx
  40145e:	jne    401450 <main@@Base+0x2f0>
  401460:	xor    r13d,r13d
  401463:	xor    eax,eax
  401465:	mov    rdi,r14
  401468:	vzeroupper 
  40146b:	call   401030 <printf@plt>
  401470:	cmp    r12d,0x3
  401474:	jl     4014d4 <main@@Base+0x374>
  401476:	lea    eax,[r12-0x1]
  40147b:	cdqe   
  40147d:	lea    rbp,[r15+rax*4]
  401481:	add    rbp,0x4
  401485:	mov    r14,r15
  401488:	add    r14,0x4
  40148c:	add    r12d,0x1
  401490:	xor    r13d,r13d
  401493:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40149d:	nop    DWORD PTR [rax]
  4014a0:	mov    esi,DWORD PTR [r14+r13*4-0x4]
  4014a5:	xor    eax,eax
  4014a7:	mov    rdi,rbx
  4014aa:	call   401030 <printf@plt>
  4014af:	mov    eax,DWORD PTR [r14+r13*4]
  4014b3:	mov    DWORD PTR [rbp+r13*2+0x0],eax
  4014b8:	add    r13,0x2
  4014bc:	add    r12d,0xffffffff
  4014c0:	cmp    r12d,0x3
  4014c4:	jg     4014a0 <main@@Base+0x340>
  4014c6:	lea    r14,[rip+0xbe6]        # 4020b3 <_IO_stdin_used@@Base+0xb3>
  4014cd:	lea    rbp,[rip+0xbdc]        # 4020b0 <_IO_stdin_used@@Base+0xb0>
  4014d4:	mov    eax,r13d
  4014d7:	or     r13d,0x1
  4014db:	mov    esi,DWORD PTR [r15+rax*4]
  4014df:	xor    eax,eax
  4014e1:	mov    rdi,rbp
  4014e4:	call   401030 <printf@plt>
  4014e9:	xor    eax,eax
  4014eb:	lea    rdi,[rip+0xbd8]        # 4020ca <_IO_stdin_used@@Base+0xca>
  4014f2:	call   401030 <printf@plt>
  4014f7:	mov    esi,DWORD PTR [r15+r13*4]
  4014fb:	xor    eax,eax
  4014fd:	lea    rdi,[rip+0xbd8]        # 4020dc <_IO_stdin_used@@Base+0xdc>
  401504:	call   401030 <printf@plt>
  401509:	xor    eax,eax
  40150b:	mov    rdi,rbp
  40150e:	lea    rsi,[rsp+0x1c]
  401513:	call   401050 <__isoc99_scanf@plt>
  401518:	mov    r12d,DWORD PTR [rsp+0x1c]
  40151d:	test   r12d,r12d
  401520:	jne    401240 <main@@Base+0xe0>
  401526:	xor    edi,edi
  401528:	call   401060 <exit@plt>
  40152d:	nop    DWORD PTR [rax]

0000000000401530 <__libc_csu_init@@Base>:
  401530:	endbr64 
  401534:	push   r15
  401536:	lea    r15,[rip+0x28c3]        # 403e00 <_IO_stdin_used@@Base+0x1e00>
  40153d:	push   r14
  40153f:	mov    r14,rdx
  401542:	push   r13
  401544:	mov    r13,rsi
  401547:	push   r12
  401549:	mov    r12d,edi
  40154c:	push   rbp
  40154d:	lea    rbp,[rip+0x28b4]        # 403e08 <_IO_stdin_used@@Base+0x1e08>
  401554:	push   rbx
  401555:	sub    rbp,r15
  401558:	sub    rsp,0x8
  40155c:	call   401000 <printf@plt-0x30>
  401561:	sar    rbp,0x3
  401565:	je     401586 <__libc_csu_init@@Base+0x56>
  401567:	xor    ebx,ebx
  401569:	nop    DWORD PTR [rax+0x0]
  401570:	mov    rdx,r14
  401573:	mov    rsi,r13
  401576:	mov    edi,r12d
  401579:	call   QWORD PTR [r15+rbx*8]
  40157d:	add    rbx,0x1
  401581:	cmp    rbp,rbx
  401584:	jne    401570 <__libc_csu_init@@Base+0x40>
  401586:	add    rsp,0x8
  40158a:	pop    rbx
  40158b:	pop    rbp
  40158c:	pop    r12
  40158e:	pop    r13
  401590:	pop    r14
  401592:	pop    r15
  401594:	ret    
  401595:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

00000000004015a0 <__libc_csu_fini@@Base>:
  4015a0:	endbr64 
  4015a4:	ret    

Disassembly of section .fini:

00000000004015a8 <.fini>:
  4015a8:	endbr64 
  4015ac:	sub    rsp,0x8
  4015b0:	add    rsp,0x8
  4015b4:	ret    
