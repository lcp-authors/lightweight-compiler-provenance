
../repos/stcorp-coda-3a25f25/codadump:     file format elf64-x86-64


Disassembly of section .init:

0000000000403000 <.init>:
  403000:	endbr64 
  403004:	sub    rsp,0x8
  403008:	mov    rax,QWORD PTR [rip+0xffe1]        # 412ff0 <__gmon_start__>
  40300f:	test   rax,rax
  403012:	je     403016 <coda_cursor_get_byte_size@plt-0x62a>
  403014:	call   rax
  403016:	add    rsp,0x8
  40301a:	ret    

Disassembly of section .plt:

0000000000403020 <.plt>:
  403020:	push   QWORD PTR [rip+0xffe2]        # 413008 <_IO_stdin_used@@Base+0x4008>
  403026:	bnd jmp QWORD PTR [rip+0xffe3]        # 413010 <_IO_stdin_used@@Base+0x4010>
  40302d:	nop    DWORD PTR [rax]
  403030:	endbr64 
  403034:	push   0x0
  403039:	bnd jmp 403020 <coda_cursor_get_byte_size@plt-0x620>
  40303f:	nop
  403040:	endbr64 
  403044:	push   0x1
  403049:	bnd jmp 403020 <coda_cursor_get_byte_size@plt-0x620>
  40304f:	nop
  403050:	endbr64 
  403054:	push   0x2
  403059:	bnd jmp 403020 <coda_cursor_get_byte_size@plt-0x620>
  40305f:	nop
  403060:	endbr64 
  403064:	push   0x3
  403069:	bnd jmp 403020 <coda_cursor_get_byte_size@plt-0x620>
  40306f:	nop
  403070:	endbr64 
  403074:	push   0x4
  403079:	bnd jmp 403020 <coda_cursor_get_byte_size@plt-0x620>
  40307f:	nop
  403080:	endbr64 
  403084:	push   0x5
  403089:	bnd jmp 403020 <coda_cursor_get_byte_size@plt-0x620>
  40308f:	nop
  403090:	endbr64 
  403094:	push   0x6
  403099:	bnd jmp 403020 <coda_cursor_get_byte_size@plt-0x620>
  40309f:	nop
  4030a0:	endbr64 
  4030a4:	push   0x7
  4030a9:	bnd jmp 403020 <coda_cursor_get_byte_size@plt-0x620>
  4030af:	nop
  4030b0:	endbr64 
  4030b4:	push   0x8
  4030b9:	bnd jmp 403020 <coda_cursor_get_byte_size@plt-0x620>
  4030bf:	nop
  4030c0:	endbr64 
  4030c4:	push   0x9
  4030c9:	bnd jmp 403020 <coda_cursor_get_byte_size@plt-0x620>
  4030cf:	nop
  4030d0:	endbr64 
  4030d4:	push   0xa
  4030d9:	bnd jmp 403020 <coda_cursor_get_byte_size@plt-0x620>
  4030df:	nop
  4030e0:	endbr64 
  4030e4:	push   0xb
  4030e9:	bnd jmp 403020 <coda_cursor_get_byte_size@plt-0x620>
  4030ef:	nop
  4030f0:	endbr64 
  4030f4:	push   0xc
  4030f9:	bnd jmp 403020 <coda_cursor_get_byte_size@plt-0x620>
  4030ff:	nop
  403100:	endbr64 
  403104:	push   0xd
  403109:	bnd jmp 403020 <coda_cursor_get_byte_size@plt-0x620>
  40310f:	nop
  403110:	endbr64 
  403114:	push   0xe
  403119:	bnd jmp 403020 <coda_cursor_get_byte_size@plt-0x620>
  40311f:	nop
  403120:	endbr64 
  403124:	push   0xf
  403129:	bnd jmp 403020 <coda_cursor_get_byte_size@plt-0x620>
  40312f:	nop
  403130:	endbr64 
  403134:	push   0x10
  403139:	bnd jmp 403020 <coda_cursor_get_byte_size@plt-0x620>
  40313f:	nop
  403140:	endbr64 
  403144:	push   0x11
  403149:	bnd jmp 403020 <coda_cursor_get_byte_size@plt-0x620>
  40314f:	nop
  403150:	endbr64 
  403154:	push   0x12
  403159:	bnd jmp 403020 <coda_cursor_get_byte_size@plt-0x620>
  40315f:	nop
  403160:	endbr64 
  403164:	push   0x13
  403169:	bnd jmp 403020 <coda_cursor_get_byte_size@plt-0x620>
  40316f:	nop
  403170:	endbr64 
  403174:	push   0x14
  403179:	bnd jmp 403020 <coda_cursor_get_byte_size@plt-0x620>
  40317f:	nop
  403180:	endbr64 
  403184:	push   0x15
  403189:	bnd jmp 403020 <coda_cursor_get_byte_size@plt-0x620>
  40318f:	nop
  403190:	endbr64 
  403194:	push   0x16
  403199:	bnd jmp 403020 <coda_cursor_get_byte_size@plt-0x620>
  40319f:	nop
  4031a0:	endbr64 
  4031a4:	push   0x17
  4031a9:	bnd jmp 403020 <coda_cursor_get_byte_size@plt-0x620>
  4031af:	nop
  4031b0:	endbr64 
  4031b4:	push   0x18
  4031b9:	bnd jmp 403020 <coda_cursor_get_byte_size@plt-0x620>
  4031bf:	nop
  4031c0:	endbr64 
  4031c4:	push   0x19
  4031c9:	bnd jmp 403020 <coda_cursor_get_byte_size@plt-0x620>
  4031cf:	nop
  4031d0:	endbr64 
  4031d4:	push   0x1a
  4031d9:	bnd jmp 403020 <coda_cursor_get_byte_size@plt-0x620>
  4031df:	nop
  4031e0:	endbr64 
  4031e4:	push   0x1b
  4031e9:	bnd jmp 403020 <coda_cursor_get_byte_size@plt-0x620>
  4031ef:	nop
  4031f0:	endbr64 
  4031f4:	push   0x1c
  4031f9:	bnd jmp 403020 <coda_cursor_get_byte_size@plt-0x620>
  4031ff:	nop
  403200:	endbr64 
  403204:	push   0x1d
  403209:	bnd jmp 403020 <coda_cursor_get_byte_size@plt-0x620>
  40320f:	nop
  403210:	endbr64 
  403214:	push   0x1e
  403219:	bnd jmp 403020 <coda_cursor_get_byte_size@plt-0x620>
  40321f:	nop
  403220:	endbr64 
  403224:	push   0x1f
  403229:	bnd jmp 403020 <coda_cursor_get_byte_size@plt-0x620>
  40322f:	nop
  403230:	endbr64 
  403234:	push   0x20
  403239:	bnd jmp 403020 <coda_cursor_get_byte_size@plt-0x620>
  40323f:	nop
  403240:	endbr64 
  403244:	push   0x21
  403249:	bnd jmp 403020 <coda_cursor_get_byte_size@plt-0x620>
  40324f:	nop
  403250:	endbr64 
  403254:	push   0x22
  403259:	bnd jmp 403020 <coda_cursor_get_byte_size@plt-0x620>
  40325f:	nop
  403260:	endbr64 
  403264:	push   0x23
  403269:	bnd jmp 403020 <coda_cursor_get_byte_size@plt-0x620>
  40326f:	nop
  403270:	endbr64 
  403274:	push   0x24
  403279:	bnd jmp 403020 <coda_cursor_get_byte_size@plt-0x620>
  40327f:	nop
  403280:	endbr64 
  403284:	push   0x25
  403289:	bnd jmp 403020 <coda_cursor_get_byte_size@plt-0x620>
  40328f:	nop
  403290:	endbr64 
  403294:	push   0x26
  403299:	bnd jmp 403020 <coda_cursor_get_byte_size@plt-0x620>
  40329f:	nop
  4032a0:	endbr64 
  4032a4:	push   0x27
  4032a9:	bnd jmp 403020 <coda_cursor_get_byte_size@plt-0x620>
  4032af:	nop
  4032b0:	endbr64 
  4032b4:	push   0x28
  4032b9:	bnd jmp 403020 <coda_cursor_get_byte_size@plt-0x620>
  4032bf:	nop
  4032c0:	endbr64 
  4032c4:	push   0x29
  4032c9:	bnd jmp 403020 <coda_cursor_get_byte_size@plt-0x620>
  4032cf:	nop
  4032d0:	endbr64 
  4032d4:	push   0x2a
  4032d9:	bnd jmp 403020 <coda_cursor_get_byte_size@plt-0x620>
  4032df:	nop
  4032e0:	endbr64 
  4032e4:	push   0x2b
  4032e9:	bnd jmp 403020 <coda_cursor_get_byte_size@plt-0x620>
  4032ef:	nop
  4032f0:	endbr64 
  4032f4:	push   0x2c
  4032f9:	bnd jmp 403020 <coda_cursor_get_byte_size@plt-0x620>
  4032ff:	nop
  403300:	endbr64 
  403304:	push   0x2d
  403309:	bnd jmp 403020 <coda_cursor_get_byte_size@plt-0x620>
  40330f:	nop
  403310:	endbr64 
  403314:	push   0x2e
  403319:	bnd jmp 403020 <coda_cursor_get_byte_size@plt-0x620>
  40331f:	nop
  403320:	endbr64 
  403324:	push   0x2f
  403329:	bnd jmp 403020 <coda_cursor_get_byte_size@plt-0x620>
  40332f:	nop
  403330:	endbr64 
  403334:	push   0x30
  403339:	bnd jmp 403020 <coda_cursor_get_byte_size@plt-0x620>
  40333f:	nop
  403340:	endbr64 
  403344:	push   0x31
  403349:	bnd jmp 403020 <coda_cursor_get_byte_size@plt-0x620>
  40334f:	nop
  403350:	endbr64 
  403354:	push   0x32
  403359:	bnd jmp 403020 <coda_cursor_get_byte_size@plt-0x620>
  40335f:	nop
  403360:	endbr64 
  403364:	push   0x33
  403369:	bnd jmp 403020 <coda_cursor_get_byte_size@plt-0x620>
  40336f:	nop
  403370:	endbr64 
  403374:	push   0x34
  403379:	bnd jmp 403020 <coda_cursor_get_byte_size@plt-0x620>
  40337f:	nop
  403380:	endbr64 
  403384:	push   0x35
  403389:	bnd jmp 403020 <coda_cursor_get_byte_size@plt-0x620>
  40338f:	nop
  403390:	endbr64 
  403394:	push   0x36
  403399:	bnd jmp 403020 <coda_cursor_get_byte_size@plt-0x620>
  40339f:	nop
  4033a0:	endbr64 
  4033a4:	push   0x37
  4033a9:	bnd jmp 403020 <coda_cursor_get_byte_size@plt-0x620>
  4033af:	nop
  4033b0:	endbr64 
  4033b4:	push   0x38
  4033b9:	bnd jmp 403020 <coda_cursor_get_byte_size@plt-0x620>
  4033bf:	nop
  4033c0:	endbr64 
  4033c4:	push   0x39
  4033c9:	bnd jmp 403020 <coda_cursor_get_byte_size@plt-0x620>
  4033cf:	nop
  4033d0:	endbr64 
  4033d4:	push   0x3a
  4033d9:	bnd jmp 403020 <coda_cursor_get_byte_size@plt-0x620>
  4033df:	nop
  4033e0:	endbr64 
  4033e4:	push   0x3b
  4033e9:	bnd jmp 403020 <coda_cursor_get_byte_size@plt-0x620>
  4033ef:	nop
  4033f0:	endbr64 
  4033f4:	push   0x3c
  4033f9:	bnd jmp 403020 <coda_cursor_get_byte_size@plt-0x620>
  4033ff:	nop
  403400:	endbr64 
  403404:	push   0x3d
  403409:	bnd jmp 403020 <coda_cursor_get_byte_size@plt-0x620>
  40340f:	nop
  403410:	endbr64 
  403414:	push   0x3e
  403419:	bnd jmp 403020 <coda_cursor_get_byte_size@plt-0x620>
  40341f:	nop
  403420:	endbr64 
  403424:	push   0x3f
  403429:	bnd jmp 403020 <coda_cursor_get_byte_size@plt-0x620>
  40342f:	nop
  403430:	endbr64 
  403434:	push   0x40
  403439:	bnd jmp 403020 <coda_cursor_get_byte_size@plt-0x620>
  40343f:	nop
  403440:	endbr64 
  403444:	push   0x41
  403449:	bnd jmp 403020 <coda_cursor_get_byte_size@plt-0x620>
  40344f:	nop
  403450:	endbr64 
  403454:	push   0x42
  403459:	bnd jmp 403020 <coda_cursor_get_byte_size@plt-0x620>
  40345f:	nop
  403460:	endbr64 
  403464:	push   0x43
  403469:	bnd jmp 403020 <coda_cursor_get_byte_size@plt-0x620>
  40346f:	nop
  403470:	endbr64 
  403474:	push   0x44
  403479:	bnd jmp 403020 <coda_cursor_get_byte_size@plt-0x620>
  40347f:	nop
  403480:	endbr64 
  403484:	push   0x45
  403489:	bnd jmp 403020 <coda_cursor_get_byte_size@plt-0x620>
  40348f:	nop
  403490:	endbr64 
  403494:	push   0x46
  403499:	bnd jmp 403020 <coda_cursor_get_byte_size@plt-0x620>
  40349f:	nop
  4034a0:	endbr64 
  4034a4:	push   0x47
  4034a9:	bnd jmp 403020 <coda_cursor_get_byte_size@plt-0x620>
  4034af:	nop
  4034b0:	endbr64 
  4034b4:	push   0x48
  4034b9:	bnd jmp 403020 <coda_cursor_get_byte_size@plt-0x620>
  4034bf:	nop
  4034c0:	endbr64 
  4034c4:	push   0x49
  4034c9:	bnd jmp 403020 <coda_cursor_get_byte_size@plt-0x620>
  4034cf:	nop
  4034d0:	endbr64 
  4034d4:	push   0x4a
  4034d9:	bnd jmp 403020 <coda_cursor_get_byte_size@plt-0x620>
  4034df:	nop
  4034e0:	endbr64 
  4034e4:	push   0x4b
  4034e9:	bnd jmp 403020 <coda_cursor_get_byte_size@plt-0x620>
  4034ef:	nop
  4034f0:	endbr64 
  4034f4:	push   0x4c
  4034f9:	bnd jmp 403020 <coda_cursor_get_byte_size@plt-0x620>
  4034ff:	nop
  403500:	endbr64 
  403504:	push   0x4d
  403509:	bnd jmp 403020 <coda_cursor_get_byte_size@plt-0x620>
  40350f:	nop
  403510:	endbr64 
  403514:	push   0x4e
  403519:	bnd jmp 403020 <coda_cursor_get_byte_size@plt-0x620>
  40351f:	nop
  403520:	endbr64 
  403524:	push   0x4f
  403529:	bnd jmp 403020 <coda_cursor_get_byte_size@plt-0x620>
  40352f:	nop
  403530:	endbr64 
  403534:	push   0x50
  403539:	bnd jmp 403020 <coda_cursor_get_byte_size@plt-0x620>
  40353f:	nop
  403540:	endbr64 
  403544:	push   0x51
  403549:	bnd jmp 403020 <coda_cursor_get_byte_size@plt-0x620>
  40354f:	nop
  403550:	endbr64 
  403554:	push   0x52
  403559:	bnd jmp 403020 <coda_cursor_get_byte_size@plt-0x620>
  40355f:	nop
  403560:	endbr64 
  403564:	push   0x53
  403569:	bnd jmp 403020 <coda_cursor_get_byte_size@plt-0x620>
  40356f:	nop
  403570:	endbr64 
  403574:	push   0x54
  403579:	bnd jmp 403020 <coda_cursor_get_byte_size@plt-0x620>
  40357f:	nop
  403580:	endbr64 
  403584:	push   0x55
  403589:	bnd jmp 403020 <coda_cursor_get_byte_size@plt-0x620>
  40358f:	nop
  403590:	endbr64 
  403594:	push   0x56
  403599:	bnd jmp 403020 <coda_cursor_get_byte_size@plt-0x620>
  40359f:	nop
  4035a0:	endbr64 
  4035a4:	push   0x57
  4035a9:	bnd jmp 403020 <coda_cursor_get_byte_size@plt-0x620>
  4035af:	nop
  4035b0:	endbr64 
  4035b4:	push   0x58
  4035b9:	bnd jmp 403020 <coda_cursor_get_byte_size@plt-0x620>
  4035bf:	nop
  4035c0:	endbr64 
  4035c4:	push   0x59
  4035c9:	bnd jmp 403020 <coda_cursor_get_byte_size@plt-0x620>
  4035cf:	nop
  4035d0:	endbr64 
  4035d4:	push   0x5a
  4035d9:	bnd jmp 403020 <coda_cursor_get_byte_size@plt-0x620>
  4035df:	nop
  4035e0:	endbr64 
  4035e4:	push   0x5b
  4035e9:	bnd jmp 403020 <coda_cursor_get_byte_size@plt-0x620>
  4035ef:	nop
  4035f0:	endbr64 
  4035f4:	push   0x5c
  4035f9:	bnd jmp 403020 <coda_cursor_get_byte_size@plt-0x620>
  4035ff:	nop
  403600:	endbr64 
  403604:	push   0x5d
  403609:	bnd jmp 403020 <coda_cursor_get_byte_size@plt-0x620>
  40360f:	nop
  403610:	endbr64 
  403614:	push   0x5e
  403619:	bnd jmp 403020 <coda_cursor_get_byte_size@plt-0x620>
  40361f:	nop
  403620:	endbr64 
  403624:	push   0x5f
  403629:	bnd jmp 403020 <coda_cursor_get_byte_size@plt-0x620>
  40362f:	nop
  403630:	endbr64 
  403634:	push   0x60
  403639:	bnd jmp 403020 <coda_cursor_get_byte_size@plt-0x620>
  40363f:	nop

Disassembly of section .plt.sec:

0000000000403640 <coda_cursor_get_byte_size@plt>:
  403640:	endbr64 
  403644:	bnd jmp QWORD PTR [rip+0xf9cd]        # 413018 <coda_cursor_get_byte_size>
  40364b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403650 <coda_type_get_special_type_name@plt>:
  403650:	endbr64 
  403654:	bnd jmp QWORD PTR [rip+0xf9c5]        # 413020 <coda_type_get_special_type_name>
  40365b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403660 <coda_set_option_use_fast_size_expressions@plt>:
  403660:	endbr64 
  403664:	bnd jmp QWORD PTR [rip+0xf9bd]        # 413028 <coda_set_option_use_fast_size_expressions>
  40366b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403670 <coda_get_option_bypass_special_types@plt>:
  403670:	endbr64 
  403674:	bnd jmp QWORD PTR [rip+0xf9b5]        # 413030 <coda_get_option_bypass_special_types>
  40367b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403680 <free@plt>:
  403680:	endbr64 
  403684:	bnd jmp QWORD PTR [rip+0xf9ad]        # 413038 <free@GLIBC_2.2.5>
  40368b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403690 <putchar@plt>:
  403690:	endbr64 
  403694:	bnd jmp QWORD PTR [rip+0xf9a5]        # 413040 <putchar@GLIBC_2.2.5>
  40369b:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004036a0 <coda_set_option_perform_boundary_checks@plt>:
  4036a0:	endbr64 
  4036a4:	bnd jmp QWORD PTR [rip+0xf99d]        # 413048 <coda_set_option_perform_boundary_checks>
  4036ab:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004036b0 <strncpy@plt>:
  4036b0:	endbr64 
  4036b4:	bnd jmp QWORD PTR [rip+0xf995]        # 413050 <strncpy@GLIBC_2.2.5>
  4036bb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004036c0 <coda_type_get_record_field_hidden_status@plt>:
  4036c0:	endbr64 
  4036c4:	bnd jmp QWORD PTR [rip+0xf98d]        # 413058 <coda_type_get_record_field_hidden_status>
  4036cb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004036d0 <coda_cursor_get_record_field_available_status@plt>:
  4036d0:	endbr64 
  4036d4:	bnd jmp QWORD PTR [rip+0xf985]        # 413060 <coda_cursor_get_record_field_available_status>
  4036db:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004036e0 <coda_set_error@plt>:
  4036e0:	endbr64 
  4036e4:	bnd jmp QWORD PTR [rip+0xf97d]        # 413068 <coda_set_error>
  4036eb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004036f0 <coda_open@plt>:
  4036f0:	endbr64 
  4036f4:	bnd jmp QWORD PTR [rip+0xf975]        # 413070 <coda_open>
  4036fb:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403700 <coda_time_double_to_string@plt>:
  403700:	endbr64 
  403704:	bnd jmp QWORD PTR [rip+0xf96d]        # 413078 <coda_time_double_to_string>
  40370b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403710 <puts@plt>:
  403710:	endbr64 
  403714:	bnd jmp QWORD PTR [rip+0xf965]        # 413080 <puts@GLIBC_2.2.5>
  40371b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403720 <coda_cursor_get_num_elements@plt>:
  403720:	endbr64 
  403724:	bnd jmp QWORD PTR [rip+0xf95d]        # 413088 <coda_cursor_get_num_elements>
  40372b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403730 <coda_str64u@plt>:
  403730:	endbr64 
  403734:	bnd jmp QWORD PTR [rip+0xf955]        # 413090 <coda_str64u>
  40373b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403740 <coda_set_option_use_mmap@plt>:
  403740:	endbr64 
  403744:	bnd jmp QWORD PTR [rip+0xf94d]        # 413098 <coda_set_option_use_mmap>
  40374b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403750 <coda_set_definition_path_conditional@plt>:
  403750:	endbr64 
  403754:	bnd jmp QWORD PTR [rip+0xf945]        # 4130a0 <coda_set_definition_path_conditional>
  40375b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403760 <coda_cursor_read_uint32@plt>:
  403760:	endbr64 
  403764:	bnd jmp QWORD PTR [rip+0xf93d]        # 4130a8 <coda_cursor_read_uint32>
  40376b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403770 <coda_set_option_bypass_special_types@plt>:
  403770:	endbr64 
  403774:	bnd jmp QWORD PTR [rip+0xf935]        # 4130b0 <coda_set_option_bypass_special_types>
  40377b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403780 <coda_type_get_record_field_type@plt>:
  403780:	endbr64 
  403784:	bnd jmp QWORD PTR [rip+0xf92d]        # 4130b8 <coda_type_get_record_field_type>
  40378b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403790 <coda_cursor_get_type@plt>:
  403790:	endbr64 
  403794:	bnd jmp QWORD PTR [rip+0xf925]        # 4130c0 <coda_cursor_get_type>
  40379b:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004037a0 <coda_isInf@plt>:
  4037a0:	endbr64 
  4037a4:	bnd jmp QWORD PTR [rip+0xf91d]        # 4130c8 <coda_isInf>
  4037ab:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004037b0 <coda_type_get_bit_size@plt>:
  4037b0:	endbr64 
  4037b4:	bnd jmp QWORD PTR [rip+0xf915]        # 4130d0 <coda_type_get_bit_size>
  4037bb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004037c0 <coda_type_get_record_field_available_status@plt>:
  4037c0:	endbr64 
  4037c4:	bnd jmp QWORD PTR [rip+0xf90d]        # 4130d8 <coda_type_get_record_field_available_status>
  4037cb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004037d0 <fclose@plt>:
  4037d0:	endbr64 
  4037d4:	bnd jmp QWORD PTR [rip+0xf905]        # 4130e0 <fclose@GLIBC_2.2.5>
  4037db:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004037e0 <coda_cursor_has_attributes@plt>:
  4037e0:	endbr64 
  4037e4:	bnd jmp QWORD PTR [rip+0xf8fd]        # 4130e8 <coda_cursor_has_attributes>
  4037eb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004037f0 <coda_cursor_get_type_class@plt>:
  4037f0:	endbr64 
  4037f4:	bnd jmp QWORD PTR [rip+0xf8f5]        # 4130f0 <coda_cursor_get_type_class>
  4037fb:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403800 <coda_set_definition_path@plt>:
  403800:	endbr64 
  403804:	bnd jmp QWORD PTR [rip+0xf8ed]        # 4130f8 <coda_set_definition_path>
  40380b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403810 <coda_get_product_format@plt>:
  403810:	endbr64 
  403814:	bnd jmp QWORD PTR [rip+0xf8e5]        # 413100 <coda_get_product_format>
  40381b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403820 <coda_type_get_unit@plt>:
  403820:	endbr64 
  403824:	bnd jmp QWORD PTR [rip+0xf8dd]        # 413108 <coda_type_get_unit>
  40382b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403830 <coda_type_get_description@plt>:
  403830:	endbr64 
  403834:	bnd jmp QWORD PTR [rip+0xf8d5]        # 413110 <coda_type_get_description>
  40383b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403840 <__stack_chk_fail@plt>:
  403840:	endbr64 
  403844:	bnd jmp QWORD PTR [rip+0xf8cd]        # 413118 <__stack_chk_fail@GLIBC_2.4>
  40384b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403850 <printf@plt>:
  403850:	endbr64 
  403854:	bnd jmp QWORD PTR [rip+0xf8c5]        # 413120 <printf@GLIBC_2.2.5>
  40385b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403860 <__assert_fail@plt>:
  403860:	endbr64 
  403864:	bnd jmp QWORD PTR [rip+0xf8bd]        # 413128 <__assert_fail@GLIBC_2.2.5>
  40386b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403870 <fputs@plt>:
  403870:	endbr64 
  403874:	bnd jmp QWORD PTR [rip+0xf8b5]        # 413130 <fputs@GLIBC_2.2.5>
  40387b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403880 <coda_cursor_get_special_type@plt>:
  403880:	endbr64 
  403884:	bnd jmp QWORD PTR [rip+0xf8ad]        # 413138 <coda_cursor_get_special_type>
  40388b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403890 <coda_cursor_goto_first_array_element@plt>:
  403890:	endbr64 
  403894:	bnd jmp QWORD PTR [rip+0xf8a5]        # 413140 <coda_cursor_goto_first_array_element>
  40389b:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004038a0 <memset@plt>:
  4038a0:	endbr64 
  4038a4:	bnd jmp QWORD PTR [rip+0xf89d]        # 413148 <memset@GLIBC_2.2.5>
  4038ab:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004038b0 <coda_cursor_set_product@plt>:
  4038b0:	endbr64 
  4038b4:	bnd jmp QWORD PTR [rip+0xf895]        # 413150 <coda_cursor_set_product>
  4038bb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004038c0 <coda_cursor_goto_first_record_field@plt>:
  4038c0:	endbr64 
  4038c4:	bnd jmp QWORD PTR [rip+0xf88d]        # 413158 <coda_cursor_goto_first_record_field>
  4038cb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004038d0 <fputc@plt>:
  4038d0:	endbr64 
  4038d4:	bnd jmp QWORD PTR [rip+0xf885]        # 413160 <fputc@GLIBC_2.2.5>
  4038db:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004038e0 <coda_cursor_goto_record_field_by_index@plt>:
  4038e0:	endbr64 
  4038e4:	bnd jmp QWORD PTR [rip+0xf87d]        # 413168 <coda_cursor_goto_record_field_by_index>
  4038eb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004038f0 <coda_done@plt>:
  4038f0:	endbr64 
  4038f4:	bnd jmp QWORD PTR [rip+0xf875]        # 413170 <coda_done>
  4038fb:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403900 <coda_cursor_get_read_type@plt>:
  403900:	endbr64 
  403904:	bnd jmp QWORD PTR [rip+0xf86d]        # 413178 <coda_cursor_get_read_type>
  40390b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403910 <strcmp@plt>:
  403910:	endbr64 
  403914:	bnd jmp QWORD PTR [rip+0xf865]        # 413180 <strcmp@GLIBC_2.2.5>
  40391b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403920 <fprintf@plt>:
  403920:	endbr64 
  403924:	bnd jmp QWORD PTR [rip+0xf85d]        # 413188 <fprintf@GLIBC_2.2.5>
  40392b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403930 <coda_cursor_read_string@plt>:
  403930:	endbr64 
  403934:	bnd jmp QWORD PTR [rip+0xf855]        # 413190 <coda_cursor_read_string>
  40393b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403940 <coda_cursor_goto_parent@plt>:
  403940:	endbr64 
  403944:	bnd jmp QWORD PTR [rip+0xf84d]        # 413198 <coda_cursor_goto_parent>
  40394b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403950 <coda_type_get_num_record_fields@plt>:
  403950:	endbr64 
  403954:	bnd jmp QWORD PTR [rip+0xf845]        # 4131a0 <coda_type_get_num_record_fields>
  40395b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403960 <memcpy@plt>:
  403960:	endbr64 
  403964:	bnd jmp QWORD PTR [rip+0xf83d]        # 4131a8 <memcpy@GLIBC_2.14>
  40396b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403970 <coda_type_get_read_type@plt>:
  403970:	endbr64 
  403974:	bnd jmp QWORD PTR [rip+0xf835]        # 4131b0 <coda_type_get_read_type>
  40397b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403980 <coda_cursor_get_string_length@plt>:
  403980:	endbr64 
  403984:	bnd jmp QWORD PTR [rip+0xf82d]        # 4131b8 <coda_cursor_get_string_length>
  40398b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403990 <coda_cursor_read_uint64@plt>:
  403990:	endbr64 
  403994:	bnd jmp QWORD PTR [rip+0xf825]        # 4131c0 <coda_cursor_read_uint64>
  40399b:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004039a0 <coda_cursor_read_double@plt>:
  4039a0:	endbr64 
  4039a4:	bnd jmp QWORD PTR [rip+0xf81d]        # 4131c8 <coda_cursor_read_double>
  4039ab:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004039b0 <coda_isNaN@plt>:
  4039b0:	endbr64 
  4039b4:	bnd jmp QWORD PTR [rip+0xf815]        # 4131d0 <coda_isNaN>
  4039bb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004039c0 <coda_cursor_goto_next_array_element@plt>:
  4039c0:	endbr64 
  4039c4:	bnd jmp QWORD PTR [rip+0xf80d]        # 4131d8 <coda_cursor_goto_next_array_element>
  4039cb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004039d0 <coda_open_as@plt>:
  4039d0:	endbr64 
  4039d4:	bnd jmp QWORD PTR [rip+0xf805]        # 4131e0 <coda_open_as>
  4039db:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004039e0 <coda_init@plt>:
  4039e0:	endbr64 
  4039e4:	bnd jmp QWORD PTR [rip+0xf7fd]        # 4131e8 <coda_init>
  4039eb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004039f0 <coda_set_option_perform_conversions@plt>:
  4039f0:	endbr64 
  4039f4:	bnd jmp QWORD PTR [rip+0xf7f5]        # 4131f0 <coda_set_option_perform_conversions>
  4039fb:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403a00 <malloc@plt>:
  403a00:	endbr64 
  403a04:	bnd jmp QWORD PTR [rip+0xf7ed]        # 4131f8 <malloc@GLIBC_2.2.5>
  403a0b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403a10 <fflush@plt>:
  403a10:	endbr64 
  403a14:	bnd jmp QWORD PTR [rip+0xf7e5]        # 413200 <fflush@GLIBC_2.2.5>
  403a1b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403a20 <coda_cursor_goto_attributes@plt>:
  403a20:	endbr64 
  403a24:	bnd jmp QWORD PTR [rip+0xf7dd]        # 413208 <coda_cursor_goto_attributes>
  403a2b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403a30 <coda_cursor_read_char@plt>:
  403a30:	endbr64 
  403a34:	bnd jmp QWORD PTR [rip+0xf7d5]        # 413210 <coda_cursor_read_char>
  403a3b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403a40 <coda_type_get_special_type@plt>:
  403a40:	endbr64 
  403a44:	bnd jmp QWORD PTR [rip+0xf7cd]        # 413218 <coda_type_get_special_type>
  403a4b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403a50 <coda_type_get_record_union_status@plt>:
  403a50:	endbr64 
  403a54:	bnd jmp QWORD PTR [rip+0xf7c5]        # 413220 <coda_type_get_record_union_status>
  403a5b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403a60 <coda_cursor_read_complex_double_split@plt>:
  403a60:	endbr64 
  403a64:	bnd jmp QWORD PTR [rip+0xf7bd]        # 413228 <coda_cursor_read_complex_double_split>
  403a6b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403a70 <coda_type_get_array_base_type@plt>:
  403a70:	endbr64 
  403a74:	bnd jmp QWORD PTR [rip+0xf7b5]        # 413230 <coda_type_get_array_base_type>
  403a7b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403a80 <coda_type_get_string_length@plt>:
  403a80:	endbr64 
  403a84:	bnd jmp QWORD PTR [rip+0xf7ad]        # 413238 <coda_type_get_string_length>
  403a8b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403a90 <coda_type_get_native_type_name@plt>:
  403a90:	endbr64 
  403a94:	bnd jmp QWORD PTR [rip+0xf7a5]        # 413240 <coda_type_get_native_type_name>
  403a9b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403aa0 <coda_cursor_get_array_dim@plt>:
  403aa0:	endbr64 
  403aa4:	bnd jmp QWORD PTR [rip+0xf79d]        # 413248 <coda_cursor_get_array_dim>
  403aab:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403ab0 <coda_cursor_has_ascii_content@plt>:
  403ab0:	endbr64 
  403ab4:	bnd jmp QWORD PTR [rip+0xf795]        # 413250 <coda_cursor_has_ascii_content>
  403abb:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403ac0 <coda_close@plt>:
  403ac0:	endbr64 
  403ac4:	bnd jmp QWORD PTR [rip+0xf78d]        # 413258 <coda_close>
  403acb:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403ad0 <coda_cursor_read_int64@plt>:
  403ad0:	endbr64 
  403ad4:	bnd jmp QWORD PTR [rip+0xf785]        # 413260 <coda_cursor_read_int64>
  403adb:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403ae0 <coda_cursor_goto@plt>:
  403ae0:	endbr64 
  403ae4:	bnd jmp QWORD PTR [rip+0xf77d]        # 413268 <coda_cursor_goto>
  403aeb:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403af0 <coda_type_get_record_field_index_from_name@plt>:
  403af0:	endbr64 
  403af4:	bnd jmp QWORD PTR [rip+0xf775]        # 413270 <coda_type_get_record_field_index_from_name>
  403afb:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403b00 <coda_cursor_read_complex_double_pair@plt>:
  403b00:	endbr64 
  403b04:	bnd jmp QWORD PTR [rip+0xf76d]        # 413278 <coda_cursor_read_complex_double_pair>
  403b0b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403b10 <coda_cursor_goto_next_record_field@plt>:
  403b10:	endbr64 
  403b14:	bnd jmp QWORD PTR [rip+0xf765]        # 413280 <coda_cursor_goto_next_record_field>
  403b1b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403b20 <fopen@plt>:
  403b20:	endbr64 
  403b24:	bnd jmp QWORD PTR [rip+0xf75d]        # 413288 <fopen@GLIBC_2.2.5>
  403b2b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403b30 <coda_type_get_array_dim@plt>:
  403b30:	endbr64 
  403b34:	bnd jmp QWORD PTR [rip+0xf755]        # 413290 <coda_type_get_array_dim>
  403b3b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403b40 <vfprintf@plt>:
  403b40:	endbr64 
  403b44:	bnd jmp QWORD PTR [rip+0xf74d]        # 413298 <vfprintf@GLIBC_2.2.5>
  403b4b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403b50 <coda_cursor_get_bit_size@plt>:
  403b50:	endbr64 
  403b54:	bnd jmp QWORD PTR [rip+0xf745]        # 4132a0 <coda_cursor_get_bit_size>
  403b5b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403b60 <atoi@plt>:
  403b60:	endbr64 
  403b64:	bnd jmp QWORD PTR [rip+0xf73d]        # 4132a8 <atoi@GLIBC_2.2.5>
  403b6b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403b70 <coda_errno_to_string@plt>:
  403b70:	endbr64 
  403b74:	bnd jmp QWORD PTR [rip+0xf735]        # 4132b0 <coda_errno_to_string>
  403b7b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403b80 <coda_cursor_use_base_type_of_special_type@plt>:
  403b80:	endbr64 
  403b84:	bnd jmp QWORD PTR [rip+0xf72d]        # 4132b8 <coda_cursor_use_base_type_of_special_type>
  403b8b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403b90 <coda_cursor_get_available_union_field_index@plt>:
  403b90:	endbr64 
  403b94:	bnd jmp QWORD PTR [rip+0xf725]        # 4132c0 <coda_cursor_get_available_union_field_index>
  403b9b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403ba0 <exit@plt>:
  403ba0:	endbr64 
  403ba4:	bnd jmp QWORD PTR [rip+0xf71d]        # 4132c8 <exit@GLIBC_2.2.5>
  403bab:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403bb0 <coda_cursor_read_int32@plt>:
  403bb0:	endbr64 
  403bb4:	bnd jmp QWORD PTR [rip+0xf715]        # 4132d0 <coda_cursor_read_int32>
  403bbb:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403bc0 <fwrite@plt>:
  403bc0:	endbr64 
  403bc4:	bnd jmp QWORD PTR [rip+0xf70d]        # 4132d8 <fwrite@GLIBC_2.2.5>
  403bcb:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403bd0 <coda_cursor_get_file_bit_offset@plt>:
  403bd0:	endbr64 
  403bd4:	bnd jmp QWORD PTR [rip+0xf705]        # 4132e0 <coda_cursor_get_file_bit_offset>
  403bdb:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403be0 <coda_get_libcoda_version@plt>:
  403be0:	endbr64 
  403be4:	bnd jmp QWORD PTR [rip+0xf6fd]        # 4132e8 <coda_get_libcoda_version>
  403beb:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403bf0 <coda_get_errno@plt>:
  403bf0:	endbr64 
  403bf4:	bnd jmp QWORD PTR [rip+0xf6f5]        # 4132f0 <coda_get_errno>
  403bfb:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403c00 <coda_type_get_special_base_type@plt>:
  403c00:	endbr64 
  403c04:	bnd jmp QWORD PTR [rip+0xf6ed]        # 4132f8 <coda_type_get_special_base_type>
  403c0b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403c10 <coda_type_get_record_field_name@plt>:
  403c10:	endbr64 
  403c14:	bnd jmp QWORD PTR [rip+0xf6e5]        # 413300 <coda_type_get_record_field_name>
  403c1b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403c20 <coda_cursor_read_bits@plt>:
  403c20:	endbr64 
  403c24:	bnd jmp QWORD PTR [rip+0xf6dd]        # 413308 <coda_cursor_read_bits>
  403c2b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403c30 <coda_str64@plt>:
  403c30:	endbr64 
  403c34:	bnd jmp QWORD PTR [rip+0xf6d5]        # 413310 <coda_str64>
  403c3b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403c40 <coda_type_get_class@plt>:
  403c40:	endbr64 
  403c44:	bnd jmp QWORD PTR [rip+0xf6cd]        # 413318 <coda_type_get_class>
  403c4b:	nop    DWORD PTR [rax+rax*1+0x0]

Disassembly of section .text:

0000000000403c50 <_start@@Base>:
  403c50:	endbr64 
  403c54:	xor    ebp,ebp
  403c56:	mov    r9,rdx
  403c59:	pop    rsi
  403c5a:	mov    rdx,rsp
  403c5d:	and    rsp,0xfffffffffffffff0
  403c61:	push   rax
  403c62:	push   rsp
  403c63:	mov    r8,0x40e480
  403c6a:	mov    rcx,0x40e410
  403c71:	mov    rdi,0x40e065
  403c78:	call   QWORD PTR [rip+0xf36a]        # 412fe8 <__libc_start_main@GLIBC_2.2.5>
  403c7e:	hlt    
  403c7f:	nop
  403c80:	endbr64 
  403c84:	ret    
  403c85:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403c8f:	nop
  403c90:	mov    eax,0x413340
  403c95:	cmp    rax,0x413340
  403c9b:	je     403cb0 <_start@@Base+0x60>
  403c9d:	mov    eax,0x0
  403ca2:	test   rax,rax
  403ca5:	je     403cb0 <_start@@Base+0x60>
  403ca7:	mov    edi,0x413340
  403cac:	jmp    rax
  403cae:	xchg   ax,ax
  403cb0:	ret    
  403cb1:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  403cbc:	nop    DWORD PTR [rax+0x0]
  403cc0:	mov    esi,0x413340
  403cc5:	sub    rsi,0x413340
  403ccc:	sar    rsi,0x3
  403cd0:	mov    rax,rsi
  403cd3:	shr    rax,0x3f
  403cd7:	add    rsi,rax
  403cda:	sar    rsi,1
  403cdd:	je     403cf0 <_start@@Base+0xa0>
  403cdf:	mov    eax,0x0
  403ce4:	test   rax,rax
  403ce7:	je     403cf0 <_start@@Base+0xa0>
  403ce9:	mov    edi,0x413340
  403cee:	jmp    rax
  403cf0:	ret    
  403cf1:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  403cfc:	nop    DWORD PTR [rax+0x0]
  403d00:	endbr64 
  403d04:	cmp    BYTE PTR [rip+0xf635],0x0        # 413340 <__bss_start@@Base+0x4>
  403d0b:	jne    403d20 <_start@@Base+0xd0>
  403d0d:	push   rbp
  403d0e:	mov    rbp,rsp
  403d11:	call   403c90 <_start@@Base+0x40>
  403d16:	mov    BYTE PTR [rip+0xf623],0x1        # 413340 <__bss_start@@Base+0x4>
  403d1d:	pop    rbp
  403d1e:	ret    
  403d1f:	nop
  403d20:	ret    
  403d21:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  403d2c:	nop    DWORD PTR [rax+0x0]
  403d30:	endbr64 
  403d34:	jmp    403cc0 <_start@@Base+0x70>
  403d36:	endbr64 
  403d3a:	push   rbp
  403d3b:	mov    rbp,rsp
  403d3e:	sub    rsp,0x30
  403d42:	mov    QWORD PTR [rbp-0x28],rdi
  403d46:	mov    rax,QWORD PTR fs:0x28
  403d4f:	mov    QWORD PTR [rbp-0x8],rax
  403d53:	xor    eax,eax
  403d55:	mov    DWORD PTR [rbp-0x14],0x0
  403d5c:	mov    DWORD PTR [rbp-0x10],0x0
  403d63:	jmp    403e37 <_start@@Base+0x1e7>
  403d68:	mov    rax,0x413380
  403d6f:	mov    edx,DWORD PTR [rbp-0x10]
  403d72:	movsxd rdx,edx
  403d75:	mov    rax,QWORD PTR [rax+rdx*8+0x10]
  403d7a:	lea    rdx,[rbp-0x18]
  403d7e:	mov    rsi,rdx
  403d81:	mov    rdi,rax
  403d84:	call   403c40 <coda_type_get_class@plt>
  403d89:	test   eax,eax
  403d8b:	je     403d97 <_start@@Base+0x147>
  403d8d:	mov    eax,0x0
  403d92:	call   40c3f3 <handle_coda_error@@Base>
  403d97:	mov    eax,DWORD PTR [rbp-0x18]
  403d9a:	cmp    eax,0x1
  403d9d:	jne    403e34 <_start@@Base+0x1e4>
  403da3:	mov    DWORD PTR [rbp-0xc],0x0
  403daa:	jmp    403e02 <_start@@Base+0x1b2>
  403dac:	mov    rax,0x4144c8
  403db3:	mov    rcx,QWORD PTR [rax]
  403db6:	mov    rsi,0x413380
  403dbd:	mov    eax,DWORD PTR [rbp-0xc]
  403dc0:	movsxd rdi,eax
  403dc3:	mov    eax,DWORD PTR [rbp-0x14]
  403dc6:	movsxd rdx,eax
  403dc9:	mov    rax,rdx
  403dcc:	shl    rax,0x2
  403dd0:	add    rax,rdx
  403dd3:	shl    rax,0x2
  403dd7:	add    rax,rdi
  403dda:	add    rax,0x150
  403de0:	mov    eax,DWORD PTR [rsi+rax*4+0x24]
  403de4:	movsxd rdx,eax
  403de7:	mov    rax,QWORD PTR [rbp-0x28]
  403deb:	lea    rsi,[rip+0xb21e]        # 40f010 <_IO_stdin_used@@Base+0x10>
  403df2:	mov    rdi,rax
  403df5:	mov    eax,0x0
  403dfa:	call   403920 <fprintf@plt>
  403dff:	inc    DWORD PTR [rbp-0xc]
  403e02:	mov    rcx,0x413380
  403e09:	mov    eax,DWORD PTR [rbp-0x14]
  403e0c:	movsxd rdx,eax
  403e0f:	mov    rax,rdx
  403e12:	shl    rax,0x2
  403e16:	add    rax,rdx
  403e19:	shl    rax,0x4
  403e1d:	add    rax,rcx
  403e20:	add    rax,0x538
  403e26:	mov    eax,DWORD PTR [rax]
  403e28:	cmp    DWORD PTR [rbp-0xc],eax
  403e2b:	jl     403dac <_start@@Base+0x15c>
  403e31:	inc    DWORD PTR [rbp-0x14]
  403e34:	inc    DWORD PTR [rbp-0x10]
  403e37:	mov    rax,0x413380
  403e3e:	mov    eax,DWORD PTR [rax+0x110]
  403e44:	cmp    DWORD PTR [rbp-0x10],eax
  403e47:	jl     403d68 <_start@@Base+0x118>
  403e4d:	nop
  403e4e:	mov    rax,QWORD PTR [rbp-0x8]
  403e52:	xor    rax,QWORD PTR fs:0x28
  403e5b:	je     403e62 <_start@@Base+0x212>
  403e5d:	call   403840 <__stack_chk_fail@plt>
  403e62:	leave  
  403e63:	ret    
  403e64:	endbr64 
  403e68:	push   rbp
  403e69:	mov    rbp,rsp
  403e6c:	add    rsp,0xffffffffffffff80
  403e70:	mov    QWORD PTR [rbp-0x78],rdi
  403e74:	mov    DWORD PTR [rbp-0x7c],esi
  403e77:	mov    rax,QWORD PTR fs:0x28
  403e80:	mov    QWORD PTR [rbp-0x8],rax
  403e84:	xor    eax,eax
  403e86:	mov    rax,0x4144d8
  403e8d:	mov    eax,DWORD PTR [rax]
  403e8f:	test   eax,eax
  403e91:	je     403e9f <_start@@Base+0x24f>
  403e93:	mov    rax,QWORD PTR [rbp-0x78]
  403e97:	mov    rdi,rax
  403e9a:	call   403d36 <_start@@Base+0xe6>
  403e9f:	mov    rax,0x413380
  403ea6:	mov    edx,DWORD PTR [rbp-0x7c]
  403ea9:	movsxd rdx,edx
  403eac:	mov    rax,QWORD PTR [rax+rdx*8+0x10]
  403eb1:	lea    rdx,[rbp-0x6c]
  403eb5:	mov    rsi,rdx
  403eb8:	mov    rdi,rax
  403ebb:	call   403c40 <coda_type_get_class@plt>
  403ec0:	test   eax,eax
  403ec2:	je     403ece <_start@@Base+0x27e>
  403ec4:	mov    eax,0x0
  403ec9:	call   40c3f3 <handle_coda_error@@Base>
  403ece:	mov    eax,DWORD PTR [rbp-0x6c]
  403ed1:	cmp    eax,0x6
  403ed4:	ja     404742 <_start@@Base+0xaf2>
  403eda:	mov    eax,eax
  403edc:	lea    rdx,[rax*4+0x0]
  403ee4:	lea    rax,[rip+0xb22d]        # 40f118 <_IO_stdin_used@@Base+0x118>
  403eeb:	mov    eax,DWORD PTR [rdx+rax*1]
  403eee:	movsxd rdx,eax
  403ef1:	lea    rax,[rip+0xb220]        # 40f118 <_IO_stdin_used@@Base+0x118>
  403ef8:	add    rax,rdx
  403efb:	notrack jmp rax
  403efe:	mov    rax,0x413380
  403f05:	mov    edx,DWORD PTR [rbp-0x7c]
  403f08:	movsxd rdx,edx
  403f0b:	mov    rax,QWORD PTR [rax+rdx*8+0x10]
  403f10:	lea    rdx,[rbp-0x68]
  403f14:	mov    rsi,rdx
  403f17:	mov    rdi,rax
  403f1a:	call   403970 <coda_type_get_read_type@plt>
  403f1f:	test   eax,eax
  403f21:	je     403f2d <_start@@Base+0x2dd>
  403f23:	mov    eax,0x0
  403f28:	call   40c3f3 <handle_coda_error@@Base>
  403f2d:	mov    eax,DWORD PTR [rbp-0x68]
  403f30:	inc    eax
  403f32:	cmp    eax,0xd
  403f35:	ja     404741 <_start@@Base+0xaf1>
  403f3b:	mov    eax,eax
  403f3d:	lea    rdx,[rax*4+0x0]
  403f45:	lea    rax,[rip+0xb1e8]        # 40f134 <_IO_stdin_used@@Base+0x134>
  403f4c:	mov    eax,DWORD PTR [rdx+rax*1]
  403f4f:	movsxd rdx,eax
  403f52:	lea    rax,[rip+0xb1db]        # 40f134 <_IO_stdin_used@@Base+0x134>
  403f59:	add    rax,rdx
  403f5c:	notrack jmp rax
  403f5f:	lea    rax,[rbp-0x60]
  403f63:	mov    rsi,rax
  403f66:	mov    rax,0x413380
  403f6d:	lea    rdi,[rax+0x118]
  403f74:	call   403a30 <coda_cursor_read_char@plt>
  403f79:	test   eax,eax
  403f7b:	je     403f87 <_start@@Base+0x337>
  403f7d:	mov    eax,0x0
  403f82:	call   40c3f3 <handle_coda_error@@Base>
  403f87:	mov    rax,0x414694
  403f8e:	mov    eax,DWORD PTR [rax]
  403f90:	test   eax,eax
  403f92:	je     403fb8 <_start@@Base+0x368>
  403f94:	movzx  eax,BYTE PTR [rbp-0x60]
  403f98:	movsx  edx,al
  403f9b:	mov    rax,QWORD PTR [rbp-0x78]
  403f9f:	lea    rsi,[rip+0xb070]        # 40f016 <_IO_stdin_used@@Base+0x16>
  403fa6:	mov    rdi,rax
  403fa9:	mov    eax,0x0
  403fae:	call   403920 <fprintf@plt>
  403fb3:	jmp    404542 <_start@@Base+0x8f2>
  403fb8:	movzx  eax,BYTE PTR [rbp-0x60]
  403fbc:	movsx  eax,al
  403fbf:	mov    rdx,QWORD PTR [rbp-0x78]
  403fc3:	mov    rsi,rdx
  403fc6:	mov    edi,eax
  403fc8:	call   4038d0 <fputc@plt>
  403fcd:	jmp    404542 <_start@@Base+0x8f2>
  403fd2:	lea    rax,[rbp-0x60]
  403fd6:	mov    rsi,rax
  403fd9:	mov    rax,0x413380
  403fe0:	lea    rdi,[rax+0x118]
  403fe7:	call   403980 <coda_cursor_get_string_length@plt>
  403fec:	test   eax,eax
  403fee:	je     403ffa <_start@@Base+0x3aa>
  403ff0:	mov    eax,0x0
  403ff5:	call   40c3f3 <handle_coda_error@@Base>
  403ffa:	mov    rax,QWORD PTR [rbp-0x60]
  403ffe:	inc    rax
  404001:	mov    rdi,rax
  404004:	call   403a00 <malloc@plt>
  404009:	mov    QWORD PTR [rbp-0x58],rax
  40400d:	cmp    QWORD PTR [rbp-0x58],0x0
  404012:	jne    40404b <_start@@Base+0x3fb>
  404014:	mov    rax,QWORD PTR [rbp-0x60]
  404018:	inc    rax
  40401b:	mov    r8d,0x7e
  404021:	lea    rcx,[rip+0xaff8]        # 40f020 <_IO_stdin_used@@Base+0x20>
  404028:	mov    rdx,rax
  40402b:	lea    rsi,[rip+0xb056]        # 40f088 <_IO_stdin_used@@Base+0x88>
  404032:	mov    edi,0xffffffff
  404037:	mov    eax,0x0
  40403c:	call   4036e0 <coda_set_error@plt>
  404041:	mov    eax,0x0
  404046:	call   40c3f3 <handle_coda_error@@Base>
  40404b:	mov    rax,QWORD PTR [rbp-0x60]
  40404f:	lea    rdx,[rax+0x1]
  404053:	mov    rax,QWORD PTR [rbp-0x58]
  404057:	mov    rsi,rax
  40405a:	mov    rax,0x413380
  404061:	lea    rdi,[rax+0x118]
  404068:	call   403930 <coda_cursor_read_string@plt>
  40406d:	test   eax,eax
  40406f:	je     40407b <_start@@Base+0x42b>
  404071:	mov    eax,0x0
  404076:	call   40c3f3 <handle_coda_error@@Base>
  40407b:	mov    rax,0x414694
  404082:	mov    eax,DWORD PTR [rax]
  404084:	test   eax,eax
  404086:	je     4040a6 <_start@@Base+0x456>
  404088:	mov    rdx,QWORD PTR [rbp-0x58]
  40408c:	mov    rax,QWORD PTR [rbp-0x78]
  404090:	lea    rsi,[rip+0xb026]        # 40f0bd <_IO_stdin_used@@Base+0xbd>
  404097:	mov    rdi,rax
  40409a:	mov    eax,0x0
  40409f:	call   403920 <fprintf@plt>
  4040a4:	jmp    4040b9 <_start@@Base+0x469>
  4040a6:	mov    rdx,QWORD PTR [rbp-0x78]
  4040aa:	mov    rax,QWORD PTR [rbp-0x58]
  4040ae:	mov    rsi,rdx
  4040b1:	mov    rdi,rax
  4040b4:	call   403870 <fputs@plt>
  4040b9:	mov    rax,QWORD PTR [rbp-0x58]
  4040bd:	mov    rdi,rax
  4040c0:	call   403680 <free@plt>
  4040c5:	jmp    404542 <_start@@Base+0x8f2>
  4040ca:	lea    rax,[rbp-0x60]
  4040ce:	mov    rsi,rax
  4040d1:	mov    rax,0x413380
  4040d8:	lea    rdi,[rax+0x118]
  4040df:	call   403b50 <coda_cursor_get_bit_size@plt>
  4040e4:	test   eax,eax
  4040e6:	je     4040f2 <_start@@Base+0x4a2>
  4040e8:	mov    eax,0x0
  4040ed:	call   40c3f3 <handle_coda_error@@Base>
  4040f2:	mov    rax,QWORD PTR [rbp-0x60]
  4040f6:	sar    rax,0x3
  4040fa:	mov    rdx,rax
  4040fd:	mov    rax,QWORD PTR [rbp-0x60]
  404101:	and    eax,0x7
  404104:	test   rax,rax
  404107:	je     404110 <_start@@Base+0x4c0>
  404109:	mov    eax,0x1
  40410e:	jmp    404115 <_start@@Base+0x4c5>
  404110:	mov    eax,0x0
  404115:	add    rax,rdx
  404118:	mov    QWORD PTR [rbp-0x50],rax
  40411c:	mov    rax,QWORD PTR [rbp-0x50]
  404120:	mov    rdi,rax
  404123:	call   403a00 <malloc@plt>
  404128:	mov    QWORD PTR [rbp-0x48],rax
  40412c:	cmp    QWORD PTR [rbp-0x48],0x0
  404131:	jne    404167 <_start@@Base+0x517>
  404133:	mov    rax,QWORD PTR [rbp-0x50]
  404137:	mov    r8d,0xa3
  40413d:	lea    rcx,[rip+0xaedc]        # 40f020 <_IO_stdin_used@@Base+0x20>
  404144:	mov    rdx,rax
  404147:	lea    rsi,[rip+0xaf3a]        # 40f088 <_IO_stdin_used@@Base+0x88>
  40414e:	mov    edi,0xffffffff
  404153:	mov    eax,0x0
  404158:	call   4036e0 <coda_set_error@plt>
  40415d:	mov    eax,0x0
  404162:	call   40c3f3 <handle_coda_error@@Base>
  404167:	mov    rdx,QWORD PTR [rbp-0x60]
  40416b:	mov    rax,QWORD PTR [rbp-0x48]
  40416f:	mov    rcx,rdx
  404172:	mov    edx,0x0
  404177:	mov    rsi,rax
  40417a:	mov    rax,0x413380
  404181:	lea    rdi,[rax+0x118]
  404188:	call   403c20 <coda_cursor_read_bits@plt>
  40418d:	test   eax,eax
  40418f:	je     40419b <_start@@Base+0x54b>
  404191:	mov    eax,0x0
  404196:	call   40c3f3 <handle_coda_error@@Base>
  40419b:	mov    DWORD PTR [rbp-0x64],0x0
  4041a2:	jmp    404352 <_start@@Base+0x702>
  4041a7:	mov    eax,DWORD PTR [rbp-0x64]
  4041aa:	movsxd rdx,eax
  4041ad:	mov    rax,QWORD PTR [rbp-0x48]
  4041b1:	add    rax,rdx
  4041b4:	movzx  eax,BYTE PTR [rax]
  4041b7:	mov    BYTE PTR [rbp-0x6d],al
  4041ba:	movsx  eax,BYTE PTR [rbp-0x6d]
  4041be:	cmp    eax,0xa
  4041c1:	je     40426f <_start@@Base+0x61f>
  4041c7:	cmp    eax,0xa
  4041ca:	jg     4041e0 <_start@@Base+0x590>
  4041cc:	cmp    eax,0x8
  4041cf:	je     40422b <_start@@Base+0x5db>
  4041d1:	cmp    eax,0x8
  4041d4:	jg     40424d <_start@@Base+0x5fd>
  4041d6:	cmp    eax,0x7
  4041d9:	je     404209 <_start@@Base+0x5b9>
  4041db:	jmp    404310 <_start@@Base+0x6c0>
  4041e0:	cmp    eax,0xc
  4041e3:	je     4042b3 <_start@@Base+0x663>
  4041e9:	cmp    eax,0xc
  4041ec:	jl     404291 <_start@@Base+0x641>
  4041f2:	cmp    eax,0xd
  4041f5:	je     4042d2 <_start@@Base+0x682>
  4041fb:	cmp    eax,0x5c
  4041fe:	je     4042f1 <_start@@Base+0x6a1>
  404204:	jmp    404310 <_start@@Base+0x6c0>
  404209:	mov    rax,QWORD PTR [rbp-0x78]
  40420d:	mov    rcx,rax
  404210:	mov    edx,0x2
  404215:	mov    esi,0x1
  40421a:	lea    rdi,[rip+0xaea1]        # 40f0c2 <_IO_stdin_used@@Base+0xc2>
  404221:	call   403bc0 <fwrite@plt>
  404226:	jmp    40434f <_start@@Base+0x6ff>
  40422b:	mov    rax,QWORD PTR [rbp-0x78]
  40422f:	mov    rcx,rax
  404232:	mov    edx,0x2
  404237:	mov    esi,0x1
  40423c:	lea    rdi,[rip+0xae82]        # 40f0c5 <_IO_stdin_used@@Base+0xc5>
  404243:	call   403bc0 <fwrite@plt>
  404248:	jmp    40434f <_start@@Base+0x6ff>
  40424d:	mov    rax,QWORD PTR [rbp-0x78]
  404251:	mov    rcx,rax
  404254:	mov    edx,0x2
  404259:	mov    esi,0x1
  40425e:	lea    rdi,[rip+0xae63]        # 40f0c8 <_IO_stdin_used@@Base+0xc8>
  404265:	call   403bc0 <fwrite@plt>
  40426a:	jmp    40434f <_start@@Base+0x6ff>
  40426f:	mov    rax,QWORD PTR [rbp-0x78]
  404273:	mov    rcx,rax
  404276:	mov    edx,0x2
  40427b:	mov    esi,0x1
  404280:	lea    rdi,[rip+0xae44]        # 40f0cb <_IO_stdin_used@@Base+0xcb>
  404287:	call   403bc0 <fwrite@plt>
  40428c:	jmp    40434f <_start@@Base+0x6ff>
  404291:	mov    rax,QWORD PTR [rbp-0x78]
  404295:	mov    rcx,rax
  404298:	mov    edx,0x2
  40429d:	mov    esi,0x1
  4042a2:	lea    rdi,[rip+0xae25]        # 40f0ce <_IO_stdin_used@@Base+0xce>
  4042a9:	call   403bc0 <fwrite@plt>
  4042ae:	jmp    40434f <_start@@Base+0x6ff>
  4042b3:	mov    rax,QWORD PTR [rbp-0x78]
  4042b7:	mov    rcx,rax
  4042ba:	mov    edx,0x2
  4042bf:	mov    esi,0x1
  4042c4:	lea    rdi,[rip+0xae06]        # 40f0d1 <_IO_stdin_used@@Base+0xd1>
  4042cb:	call   403bc0 <fwrite@plt>
  4042d0:	jmp    40434f <_start@@Base+0x6ff>
  4042d2:	mov    rax,QWORD PTR [rbp-0x78]
  4042d6:	mov    rcx,rax
  4042d9:	mov    edx,0x2
  4042de:	mov    esi,0x1
  4042e3:	lea    rdi,[rip+0xadea]        # 40f0d4 <_IO_stdin_used@@Base+0xd4>
  4042ea:	call   403bc0 <fwrite@plt>
  4042ef:	jmp    40434f <_start@@Base+0x6ff>
  4042f1:	mov    rax,QWORD PTR [rbp-0x78]
  4042f5:	mov    rcx,rax
  4042f8:	mov    edx,0x2
  4042fd:	mov    esi,0x1
  404302:	lea    rdi,[rip+0xadce]        # 40f0d7 <_IO_stdin_used@@Base+0xd7>
  404309:	call   403bc0 <fwrite@plt>
  40430e:	jmp    40434f <_start@@Base+0x6ff>
  404310:	cmp    BYTE PTR [rbp-0x6d],0x1f
  404314:	jle    404330 <_start@@Base+0x6e0>
  404316:	cmp    BYTE PTR [rbp-0x6d],0x7f
  40431a:	je     404330 <_start@@Base+0x6e0>
  40431c:	movsx  eax,BYTE PTR [rbp-0x6d]
  404320:	mov    rdx,QWORD PTR [rbp-0x78]
  404324:	mov    rsi,rdx
  404327:	mov    edi,eax
  404329:	call   4038d0 <fputc@plt>
  40432e:	jmp    40434f <_start@@Base+0x6ff>
  404330:	movzx  eax,BYTE PTR [rbp-0x6d]
  404334:	movzx  edx,al
  404337:	mov    rax,QWORD PTR [rbp-0x78]
  40433b:	lea    rsi,[rip+0xad98]        # 40f0da <_IO_stdin_used@@Base+0xda>
  404342:	mov    rdi,rax
  404345:	mov    eax,0x0
  40434a:	call   403920 <fprintf@plt>
  40434f:	inc    DWORD PTR [rbp-0x64]
  404352:	mov    eax,DWORD PTR [rbp-0x64]
  404355:	cdqe   
  404357:	cmp    QWORD PTR [rbp-0x50],rax
  40435b:	jg     4041a7 <_start@@Base+0x557>
  404361:	mov    rax,QWORD PTR [rbp-0x48]
  404365:	mov    rdi,rax
  404368:	call   403680 <free@plt>
  40436d:	jmp    404542 <_start@@Base+0x8f2>
  404372:	lea    rax,[rbp-0x60]
  404376:	mov    rsi,rax
  404379:	mov    rax,0x413380
  404380:	lea    rdi,[rax+0x118]
  404387:	call   403bb0 <coda_cursor_read_int32@plt>
  40438c:	test   eax,eax
  40438e:	je     40439a <_start@@Base+0x74a>
  404390:	mov    eax,0x0
  404395:	call   40c3f3 <handle_coda_error@@Base>
  40439a:	mov    eax,DWORD PTR [rbp-0x60]
  40439d:	movsxd rdx,eax
  4043a0:	mov    rax,QWORD PTR [rbp-0x78]
  4043a4:	lea    rsi,[rip+0xad35]        # 40f0e0 <_IO_stdin_used@@Base+0xe0>
  4043ab:	mov    rdi,rax
  4043ae:	mov    eax,0x0
  4043b3:	call   403920 <fprintf@plt>
  4043b8:	jmp    404542 <_start@@Base+0x8f2>
  4043bd:	lea    rax,[rbp-0x60]
  4043c1:	mov    rsi,rax
  4043c4:	mov    rax,0x413380
  4043cb:	lea    rdi,[rax+0x118]
  4043d2:	call   403760 <coda_cursor_read_uint32@plt>
  4043d7:	test   eax,eax
  4043d9:	je     4043e5 <_start@@Base+0x795>
  4043db:	mov    eax,0x0
  4043e0:	call   40c3f3 <handle_coda_error@@Base>
  4043e5:	mov    eax,DWORD PTR [rbp-0x60]
  4043e8:	mov    edx,eax
  4043ea:	mov    rax,QWORD PTR [rbp-0x78]
  4043ee:	lea    rsi,[rip+0xacef]        # 40f0e4 <_IO_stdin_used@@Base+0xe4>
  4043f5:	mov    rdi,rax
  4043f8:	mov    eax,0x0
  4043fd:	call   403920 <fprintf@plt>
  404402:	jmp    404542 <_start@@Base+0x8f2>
  404407:	lea    rax,[rbp-0x60]
  40440b:	mov    rsi,rax
  40440e:	mov    rax,0x413380
  404415:	lea    rdi,[rax+0x118]
  40441c:	call   403ad0 <coda_cursor_read_int64@plt>
  404421:	test   eax,eax
  404423:	je     40442f <_start@@Base+0x7df>
  404425:	mov    eax,0x0
  40442a:	call   40c3f3 <handle_coda_error@@Base>
  40442f:	mov    rax,QWORD PTR [rbp-0x60]
  404433:	lea    rdx,[rbp-0x30]
  404437:	mov    rsi,rdx
  40443a:	mov    rdi,rax
  40443d:	call   403c30 <coda_str64@plt>
  404442:	mov    rdx,QWORD PTR [rbp-0x78]
  404446:	lea    rax,[rbp-0x30]
  40444a:	mov    rsi,rdx
  40444d:	mov    rdi,rax
  404450:	call   403870 <fputs@plt>
  404455:	jmp    404542 <_start@@Base+0x8f2>
  40445a:	lea    rax,[rbp-0x60]
  40445e:	mov    rsi,rax
  404461:	mov    rax,0x413380
  404468:	lea    rdi,[rax+0x118]
  40446f:	call   403990 <coda_cursor_read_uint64@plt>
  404474:	test   eax,eax
  404476:	je     404482 <_start@@Base+0x832>
  404478:	mov    eax,0x0
  40447d:	call   40c3f3 <handle_coda_error@@Base>
  404482:	mov    rax,QWORD PTR [rbp-0x60]
  404486:	lea    rdx,[rbp-0x30]
  40448a:	mov    rsi,rdx
  40448d:	mov    rdi,rax
  404490:	call   403730 <coda_str64u@plt>
  404495:	mov    rdx,QWORD PTR [rbp-0x78]
  404499:	lea    rax,[rbp-0x30]
  40449d:	mov    rsi,rdx
  4044a0:	mov    rdi,rax
  4044a3:	call   403870 <fputs@plt>
  4044a8:	jmp    404542 <_start@@Base+0x8f2>
  4044ad:	lea    rax,[rbp-0x60]
  4044b1:	mov    rsi,rax
  4044b4:	mov    rax,0x413380
  4044bb:	lea    rdi,[rax+0x118]
  4044c2:	call   4039a0 <coda_cursor_read_double@plt>
  4044c7:	test   eax,eax
  4044c9:	je     4044d5 <_start@@Base+0x885>
  4044cb:	mov    eax,0x0
  4044d0:	call   40c3f3 <handle_coda_error@@Base>
  4044d5:	mov    eax,DWORD PTR [rbp-0x68]
  4044d8:	cmp    eax,0x8
  4044db:	jne    404500 <_start@@Base+0x8b0>
  4044dd:	mov    rdx,QWORD PTR [rbp-0x60]
  4044e1:	mov    rax,QWORD PTR [rbp-0x78]
  4044e5:	vmovq  xmm0,rdx
  4044ea:	lea    rsi,[rip+0xabf7]        # 40f0e8 <_IO_stdin_used@@Base+0xe8>
  4044f1:	mov    rdi,rax
  4044f4:	mov    eax,0x1
  4044f9:	call   403920 <fprintf@plt>
  4044fe:	jmp    404542 <_start@@Base+0x8f2>
  404500:	mov    rdx,QWORD PTR [rbp-0x60]
  404504:	mov    rax,QWORD PTR [rbp-0x78]
  404508:	vmovq  xmm0,rdx
  40450d:	lea    rsi,[rip+0xabd9]        # 40f0ed <_IO_stdin_used@@Base+0xed>
  404514:	mov    rdi,rax
  404517:	mov    eax,0x1
  40451c:	call   403920 <fprintf@plt>
  404521:	jmp    404542 <_start@@Base+0x8f2>
  404523:	lea    rcx,[rip+0xac46]        # 40f170 <_IO_stdin_used@@Base+0x170>
  40452a:	mov    edx,0x126
  40452f:	lea    rsi,[rip+0xaaea]        # 40f020 <_IO_stdin_used@@Base+0x20>
  404536:	lea    rdi,[rip+0xabb6]        # 40f0f3 <_IO_stdin_used@@Base+0xf3>
  40453d:	call   403860 <__assert_fail@plt>
  404542:	jmp    404741 <_start@@Base+0xaf1>
  404547:	mov    rax,0x413380
  40454e:	mov    edx,DWORD PTR [rbp-0x7c]
  404551:	movsxd rdx,edx
  404554:	mov    rax,QWORD PTR [rax+rdx*8+0x10]
  404559:	lea    rdx,[rbp-0x68]
  40455d:	mov    rsi,rdx
  404560:	mov    rdi,rax
  404563:	call   403a40 <coda_type_get_special_type@plt>
  404568:	test   eax,eax
  40456a:	je     404576 <_start@@Base+0x926>
  40456c:	mov    eax,0x0
  404571:	call   40c3f3 <handle_coda_error@@Base>
  404576:	mov    eax,DWORD PTR [rbp-0x68]
  404579:	cmp    eax,0x2
  40457c:	ja     404587 <_start@@Base+0x937>
  40457e:	test   eax,eax
  404580:	jne    404595 <_start@@Base+0x945>
  404582:	jmp    404720 <_start@@Base+0xad0>
  404587:	cmp    eax,0x3
  40458a:	je     4046c3 <_start@@Base+0xa73>
  404590:	jmp    404742 <_start@@Base+0xaf2>
  404595:	lea    rax,[rbp-0x60]
  404599:	mov    rsi,rax
  40459c:	mov    rax,0x413380
  4045a3:	lea    rdi,[rax+0x118]
  4045aa:	call   4039a0 <coda_cursor_read_double@plt>
  4045af:	test   eax,eax
  4045b1:	je     4045bd <_start@@Base+0x96d>
  4045b3:	mov    eax,0x0
  4045b8:	call   40c3f3 <handle_coda_error@@Base>
  4045bd:	mov    eax,DWORD PTR [rbp-0x68]
  4045c0:	cmp    eax,0x2
  4045c3:	jne    40469e <_start@@Base+0xa4e>
  4045c9:	mov    rax,0x413370
  4045d0:	mov    eax,DWORD PTR [rax]
  4045d2:	test   eax,eax
  4045d4:	je     40469e <_start@@Base+0xa4e>
  4045da:	mov    rax,QWORD PTR [rbp-0x60]
  4045de:	vmovq  xmm0,rax
  4045e3:	call   4039b0 <coda_isNaN@plt>
  4045e8:	test   eax,eax
  4045ea:	jne    4045fe <_start@@Base+0x9ae>
  4045ec:	mov    rax,QWORD PTR [rbp-0x60]
  4045f0:	vmovq  xmm0,rax
  4045f5:	call   4037a0 <coda_isInf@plt>
  4045fa:	test   eax,eax
  4045fc:	je     404634 <_start@@Base+0x9e4>
  4045fe:	movabs rax,0x2020202020202020
  404608:	movabs rdx,0x2020202020202020
  404612:	mov    QWORD PTR [rbp-0x30],rax
  404616:	mov    QWORD PTR [rbp-0x28],rdx
  40461a:	movabs rax,0x2020202020202020
  404624:	mov    QWORD PTR [rbp-0x20],rax
  404628:	mov    WORD PTR [rbp-0x18],0x2020
  40462e:	mov    BYTE PTR [rbp-0x16],0x0
  404632:	jmp    40465e <_start@@Base+0xa0e>
  404634:	mov    rax,QWORD PTR [rbp-0x60]
  404638:	lea    rdx,[rbp-0x30]
  40463c:	mov    rsi,rdx
  40463f:	lea    rdi,[rip+0xaaaf]        # 40f0f5 <_IO_stdin_used@@Base+0xf5>
  404646:	vmovq  xmm0,rax
  40464b:	call   403700 <coda_time_double_to_string@plt>
  404650:	test   eax,eax
  404652:	je     40465e <_start@@Base+0xa0e>
  404654:	mov    eax,0x0
  404659:	call   40c3f3 <handle_coda_error@@Base>
  40465e:	mov    rax,0x414694
  404665:	mov    eax,DWORD PTR [rax]
  404667:	test   eax,eax
  404669:	je     404689 <_start@@Base+0xa39>
  40466b:	lea    rdx,[rbp-0x30]
  40466f:	mov    rax,QWORD PTR [rbp-0x78]
  404673:	lea    rsi,[rip+0xaa43]        # 40f0bd <_IO_stdin_used@@Base+0xbd>
  40467a:	mov    rdi,rax
  40467d:	mov    eax,0x0
  404682:	call   403920 <fprintf@plt>
  404687:	jmp    4046c1 <_start@@Base+0xa71>
  404689:	mov    rdx,QWORD PTR [rbp-0x78]
  40468d:	lea    rax,[rbp-0x30]
  404691:	mov    rsi,rdx
  404694:	mov    rdi,rax
  404697:	call   403870 <fputs@plt>
  40469c:	jmp    4046c1 <_start@@Base+0xa71>
  40469e:	mov    rdx,QWORD PTR [rbp-0x60]
  4046a2:	mov    rax,QWORD PTR [rbp-0x78]
  4046a6:	vmovq  xmm0,rdx
  4046ab:	lea    rsi,[rip+0xaa3b]        # 40f0ed <_IO_stdin_used@@Base+0xed>
  4046b2:	mov    rdi,rax
  4046b5:	mov    eax,0x1
  4046ba:	call   403920 <fprintf@plt>
  4046bf:	jmp    404720 <_start@@Base+0xad0>
  4046c1:	jmp    404720 <_start@@Base+0xad0>
  4046c3:	lea    rax,[rbp-0x40]
  4046c7:	mov    rsi,rax
  4046ca:	mov    rax,0x413380
  4046d1:	lea    rdi,[rax+0x118]
  4046d8:	call   403b00 <coda_cursor_read_complex_double_pair@plt>
  4046dd:	test   eax,eax
  4046df:	je     4046eb <_start@@Base+0xa9b>
  4046e1:	mov    eax,0x0
  4046e6:	call   40c3f3 <handle_coda_error@@Base>
  4046eb:	vmovsd xmm0,QWORD PTR [rbp-0x38]
  4046f0:	mov    rax,0x4144c8
  4046f7:	mov    rdx,QWORD PTR [rax]
  4046fa:	mov    rcx,QWORD PTR [rbp-0x40]
  4046fe:	mov    rax,QWORD PTR [rbp-0x78]
  404702:	vmovapd xmm1,xmm0
  404706:	vmovq  xmm0,rcx
  40470b:	lea    rsi,[rip+0xa9fe]        # 40f110 <_IO_stdin_used@@Base+0x110>
  404712:	mov    rdi,rax
  404715:	mov    eax,0x2
  40471a:	call   403920 <fprintf@plt>
  40471f:	nop
  404720:	jmp    404742 <_start@@Base+0xaf2>
  404722:	lea    rcx,[rip+0xaa47]        # 40f170 <_IO_stdin_used@@Base+0x170>
  404729:	mov    edx,0x170
  40472e:	lea    rsi,[rip+0xa8eb]        # 40f020 <_IO_stdin_used@@Base+0x20>
  404735:	lea    rdi,[rip+0xa9b7]        # 40f0f3 <_IO_stdin_used@@Base+0xf3>
  40473c:	call   403860 <__assert_fail@plt>
  404741:	nop
  404742:	mov    rax,QWORD PTR [rbp-0x78]
  404746:	mov    rsi,rax
  404749:	mov    edi,0xa
  40474e:	call   4038d0 <fputc@plt>
  404753:	nop
  404754:	mov    rax,QWORD PTR [rbp-0x8]
  404758:	xor    rax,QWORD PTR fs:0x28
  404761:	je     404768 <_start@@Base+0xb18>
  404763:	call   403840 <__stack_chk_fail@plt>
  404768:	leave  
  404769:	ret    
  40476a:	endbr64 
  40476e:	push   rbp
  40476f:	mov    rbp,rsp
  404772:	add    rsp,0xffffffffffffff80
  404776:	mov    QWORD PTR [rbp-0x68],rdi
  40477a:	mov    DWORD PTR [rbp-0x6c],esi
  40477d:	mov    DWORD PTR [rbp-0x70],edx
  404780:	mov    DWORD PTR [rbp-0x74],ecx
  404783:	mov    rax,QWORD PTR fs:0x28
  40478c:	mov    QWORD PTR [rbp-0x8],rax
  404790:	xor    eax,eax
  404792:	mov    rax,0x413380
  404799:	mov    edx,DWORD PTR [rbp-0x6c]
  40479c:	movsxd rdx,edx
  40479f:	mov    rax,QWORD PTR [rax+rdx*8+0x10]
  4047a4:	lea    rdx,[rbp-0x54]
  4047a8:	mov    rsi,rdx
  4047ab:	mov    rdi,rax
  4047ae:	call   403c40 <coda_type_get_class@plt>
  4047b3:	test   eax,eax
  4047b5:	je     4047c1 <_start@@Base+0xb71>
  4047b7:	mov    eax,0x0
  4047bc:	call   40c3f3 <handle_coda_error@@Base>
  4047c1:	mov    eax,DWORD PTR [rbp-0x54]
  4047c4:	test   eax,eax
  4047c6:	je     404af0 <_start@@Base+0xea0>
  4047cc:	cmp    eax,0x1
  4047cf:	jne    404bab <_start@@Base+0xf5b>
  4047d5:	mov    eax,DWORD PTR [rbp-0x70]
  4047d8:	movsxd rdx,eax
  4047db:	mov    rax,rdx
  4047de:	shl    rax,0x2
  4047e2:	add    rax,rdx
  4047e5:	shl    rax,0x4
  4047e9:	lea    rdx,[rax+0x520]
  4047f0:	mov    rax,0x413380
  4047f7:	add    rax,rdx
  4047fa:	add    rax,0x14
  4047fe:	mov    QWORD PTR [rbp-0x38],rax
  404802:	mov    rax,QWORD PTR [rbp-0x38]
  404806:	mov    eax,DWORD PTR [rax]
  404808:	mov    DWORD PTR [rbp-0x40],eax
  40480b:	cmp    DWORD PTR [rbp-0x70],0x0
  40480f:	jne    40481c <_start@@Base+0xbcc>
  404811:	mov    rax,QWORD PTR [rbp-0x38]
  404815:	mov    DWORD PTR [rax+0x2c],0x0
  40481c:	mov    rax,0x414500
  404823:	mov    edx,DWORD PTR [rax+0x68]
  404826:	mov    rax,QWORD PTR [rbp-0x38]
  40482a:	mov    ecx,DWORD PTR [rax+0x4]
  40482d:	mov    eax,DWORD PTR [rbp-0x40]
  404830:	add    eax,ecx
  404832:	cmp    edx,eax
  404834:	setge  al
  404837:	movzx  eax,al
  40483a:	mov    DWORD PTR [rbp-0x3c],eax
  40483d:	cmp    DWORD PTR [rbp-0x3c],0x0
  404841:	je     404893 <_start@@Base+0xc43>
  404843:	mov    rax,0x413380
  40484a:	mov    eax,DWORD PTR [rax+0xf34]
  404850:	dec    eax
  404852:	cmp    DWORD PTR [rbp-0x70],eax
  404855:	jge    404893 <_start@@Base+0xc43>
  404857:	mov    rax,QWORD PTR [rbp-0x38]
  40485b:	mov    edx,DWORD PTR [rax+0x2c]
  40485e:	mov    rax,QWORD PTR [rbp-0x38]
  404862:	mov    eax,DWORD PTR [rax+0x28]
  404865:	mov    ecx,DWORD PTR [rbp-0x70]
  404868:	lea    edi,[rcx+0x1]
  40486b:	mov    ecx,edx
  40486d:	imul   ecx,eax
  404870:	mov    rsi,0x413380
  404877:	movsxd rdx,edi
  40487a:	mov    rax,rdx
  40487d:	shl    rax,0x2
  404881:	add    rax,rdx
  404884:	shl    rax,0x4
  404888:	add    rax,rsi
  40488b:	add    rax,0x560
  404891:	mov    DWORD PTR [rax],ecx
  404893:	mov    DWORD PTR [rbp-0x4c],0x1
  40489a:	mov    DWORD PTR [rbp-0x48],0x0
  4048a1:	jmp    404946 <_start@@Base+0xcf6>
  4048a6:	mov    edx,DWORD PTR [rbp-0x40]
  4048a9:	mov    eax,DWORD PTR [rbp-0x48]
  4048ac:	add    edx,eax
  4048ae:	mov    rax,0x414500
  4048b5:	movsxd rdx,edx
  4048b8:	add    rdx,0x10
  4048bc:	mov    eax,DWORD PTR [rax+rdx*4+0x8]
  4048c0:	test   eax,eax
  4048c2:	je     4048fc <_start@@Base+0xcac>
  4048c4:	mov    edx,DWORD PTR [rbp-0x40]
  4048c7:	mov    eax,DWORD PTR [rbp-0x48]
  4048ca:	add    edx,eax
  4048cc:	mov    rax,0x414500
  4048d3:	movsxd rdx,edx
  4048d6:	add    rdx,0xc
  4048da:	mov    rdx,QWORD PTR [rax+rdx*8+0x10]
  4048df:	mov    rax,QWORD PTR [rbp-0x38]
  4048e3:	mov    eax,DWORD PTR [rax+0x2c]
  4048e6:	cdqe   
  4048e8:	shl    rax,0x2
  4048ec:	add    rax,rdx
  4048ef:	mov    edx,DWORD PTR [rax]
  4048f1:	mov    eax,DWORD PTR [rbp-0x48]
  4048f4:	cdqe   
  4048f6:	mov    DWORD PTR [rbp+rax*4-0x30],edx
  4048fa:	jmp    40491b <_start@@Base+0xccb>
  4048fc:	mov    edx,DWORD PTR [rbp-0x40]
  4048ff:	mov    eax,DWORD PTR [rbp-0x48]
  404902:	add    edx,eax
  404904:	mov    rax,0x414500
  40490b:	movsxd rdx,edx
  40490e:	mov    edx,DWORD PTR [rax+rdx*4+0x4]
  404912:	mov    eax,DWORD PTR [rbp-0x48]
  404915:	cdqe   
  404917:	mov    DWORD PTR [rbp+rax*4-0x30],edx
  40491b:	mov    eax,DWORD PTR [rbp-0x48]
  40491e:	cdqe   
  404920:	mov    eax,DWORD PTR [rbp+rax*4-0x30]
  404924:	mov    edx,DWORD PTR [rbp-0x4c]
  404927:	imul   eax,edx
  40492a:	mov    DWORD PTR [rbp-0x4c],eax
  40492d:	mov    rax,QWORD PTR [rbp-0x38]
  404931:	mov    edx,DWORD PTR [rbp-0x48]
  404934:	movsxd rdx,edx
  404937:	add    rdx,0x8
  40493b:	mov    DWORD PTR [rax+rdx*4+0x10],0x0
  404943:	inc    DWORD PTR [rbp-0x48]
  404946:	mov    rax,QWORD PTR [rbp-0x38]
  40494a:	mov    eax,DWORD PTR [rax+0x4]
  40494d:	cmp    DWORD PTR [rbp-0x48],eax
  404950:	jl     4048a6 <_start@@Base+0xc56>
  404956:	cmp    DWORD PTR [rbp-0x4c],0x0
  40495a:	je     404bc0 <_start@@Base+0xf70>
  404960:	mov    rax,0x413380
  404967:	lea    rdi,[rax+0x118]
  40496e:	call   403890 <coda_cursor_goto_first_array_element@plt>
  404973:	test   eax,eax
  404975:	je     404981 <_start@@Base+0xd31>
  404977:	mov    eax,0x0
  40497c:	call   40c3f3 <handle_coda_error@@Base>
  404981:	mov    DWORD PTR [rbp-0x48],0x0
  404988:	jmp    404acc <_start@@Base+0xe7c>
  40498d:	mov    eax,DWORD PTR [rbp-0x70]
  404990:	lea    edi,[rax+0x1]
  404993:	mov    eax,DWORD PTR [rbp-0x6c]
  404996:	lea    esi,[rax+0x1]
  404999:	mov    edx,DWORD PTR [rbp-0x74]
  40499c:	mov    rax,QWORD PTR [rbp-0x68]
  4049a0:	mov    ecx,edx
  4049a2:	mov    edx,edi
  4049a4:	mov    rdi,rax
  4049a7:	call   40476a <_start@@Base+0xb1a>
  4049ac:	mov    eax,DWORD PTR [rbp-0x4c]
  4049af:	dec    eax
  4049b1:	cmp    DWORD PTR [rbp-0x48],eax
  4049b4:	jge    404ac9 <_start@@Base+0xe79>
  4049ba:	mov    rax,0x413380
  4049c1:	lea    rdi,[rax+0x118]
  4049c8:	call   4039c0 <coda_cursor_goto_next_array_element@plt>
  4049cd:	test   eax,eax
  4049cf:	je     4049db <_start@@Base+0xd8b>
  4049d1:	mov    eax,0x0
  4049d6:	call   40c3f3 <handle_coda_error@@Base>
  4049db:	cmp    DWORD PTR [rbp-0x3c],0x0
  4049df:	je     404a44 <_start@@Base+0xdf4>
  4049e1:	mov    rax,0x413380
  4049e8:	mov    eax,DWORD PTR [rax+0xf34]
  4049ee:	dec    eax
  4049f0:	cmp    DWORD PTR [rbp-0x70],eax
  4049f3:	jge    404a44 <_start@@Base+0xdf4>
  4049f5:	mov    eax,DWORD PTR [rbp-0x70]
  4049f8:	lea    ecx,[rax+0x1]
  4049fb:	mov    rsi,0x413380
  404a02:	movsxd rdx,ecx
  404a05:	mov    rax,rdx
  404a08:	shl    rax,0x2
  404a0c:	add    rax,rdx
  404a0f:	shl    rax,0x4
  404a13:	add    rax,rsi
  404a16:	add    rax,0x560
  404a1c:	mov    eax,DWORD PTR [rax]
  404a1e:	lea    esi,[rax+0x1]
  404a21:	mov    rdi,0x413380
  404a28:	movsxd rdx,ecx
  404a2b:	mov    rax,rdx
  404a2e:	shl    rax,0x2
  404a32:	add    rax,rdx
  404a35:	shl    rax,0x4
  404a39:	add    rax,rdi
  404a3c:	add    rax,0x560
  404a42:	mov    DWORD PTR [rax],esi
  404a44:	mov    rax,0x4144d8
  404a4b:	mov    eax,DWORD PTR [rax]
  404a4d:	test   eax,eax
  404a4f:	je     404ac9 <_start@@Base+0xe79>
  404a51:	mov    rax,QWORD PTR [rbp-0x38]
  404a55:	mov    eax,DWORD PTR [rax+0x4]
  404a58:	dec    eax
  404a5a:	mov    DWORD PTR [rbp-0x44],eax
  404a5d:	jmp    404ac0 <_start@@Base+0xe70>
  404a5f:	mov    rax,QWORD PTR [rbp-0x38]
  404a63:	mov    edx,DWORD PTR [rbp-0x44]
  404a66:	movsxd rdx,edx
  404a69:	add    rdx,0x8
  404a6d:	mov    eax,DWORD PTR [rax+rdx*4+0x10]
  404a71:	lea    ecx,[rax+0x1]
  404a74:	mov    rax,QWORD PTR [rbp-0x38]
  404a78:	mov    edx,DWORD PTR [rbp-0x44]
  404a7b:	movsxd rdx,edx
  404a7e:	add    rdx,0x8
  404a82:	mov    DWORD PTR [rax+rdx*4+0x10],ecx
  404a86:	mov    rax,QWORD PTR [rbp-0x38]
  404a8a:	mov    edx,DWORD PTR [rbp-0x44]
  404a8d:	movsxd rdx,edx
  404a90:	add    rdx,0x8
  404a94:	mov    edx,DWORD PTR [rax+rdx*4+0x10]
  404a98:	mov    eax,DWORD PTR [rbp-0x44]
  404a9b:	cdqe   
  404a9d:	mov    eax,DWORD PTR [rbp+rax*4-0x30]
  404aa1:	cmp    edx,eax
  404aa3:	jne    404ac8 <_start@@Base+0xe78>
  404aa5:	mov    eax,DWORD PTR [rbp-0x44]
  404aa8:	lea    edx,[rax-0x1]
  404aab:	mov    DWORD PTR [rbp-0x44],edx
  404aae:	mov    rdx,QWORD PTR [rbp-0x38]
  404ab2:	cdqe   
  404ab4:	add    rax,0x8
  404ab8:	mov    DWORD PTR [rdx+rax*4+0x10],0x0
  404ac0:	cmp    DWORD PTR [rbp-0x44],0x0
  404ac4:	jns    404a5f <_start@@Base+0xe0f>
  404ac6:	jmp    404ac9 <_start@@Base+0xe79>
  404ac8:	nop
  404ac9:	inc    DWORD PTR [rbp-0x48]
  404acc:	mov    eax,DWORD PTR [rbp-0x48]
  404acf:	cmp    eax,DWORD PTR [rbp-0x4c]
  404ad2:	jl     40498d <_start@@Base+0xd3d>
  404ad8:	mov    rax,0x413380
  404adf:	lea    rdi,[rax+0x118]
  404ae6:	call   403940 <coda_cursor_goto_parent@plt>
  404aeb:	jmp    404bc0 <_start@@Base+0xf70>
  404af0:	mov    rax,0x413380
  404af7:	mov    edx,DWORD PTR [rbp-0x74]
  404afa:	movsxd rdx,edx
  404afd:	add    rdx,0x3e8
  404b04:	mov    eax,DWORD PTR [rax+rdx*4+0x18]
  404b08:	cdqe   
  404b0a:	lea    rdx,[rbp-0x50]
  404b0e:	mov    rsi,rax
  404b11:	mov    rax,0x413380
  404b18:	lea    rdi,[rax+0x118]
  404b1f:	call   4036d0 <coda_cursor_get_record_field_available_status@plt>
  404b24:	test   eax,eax
  404b26:	je     404b32 <_start@@Base+0xee2>
  404b28:	mov    eax,0x0
  404b2d:	call   40c3f3 <handle_coda_error@@Base>
  404b32:	mov    eax,DWORD PTR [rbp-0x50]
  404b35:	test   eax,eax
  404b37:	je     404bbf <_start@@Base+0xf6f>
  404b3d:	mov    rax,0x413380
  404b44:	mov    edx,DWORD PTR [rbp-0x74]
  404b47:	movsxd rdx,edx
  404b4a:	add    rdx,0x3e8
  404b51:	mov    eax,DWORD PTR [rax+rdx*4+0x18]
  404b55:	cdqe   
  404b57:	mov    rsi,rax
  404b5a:	mov    rax,0x413380
  404b61:	lea    rdi,[rax+0x118]
  404b68:	call   4038e0 <coda_cursor_goto_record_field_by_index@plt>
  404b6d:	test   eax,eax
  404b6f:	je     404b7b <_start@@Base+0xf2b>
  404b71:	mov    eax,0x0
  404b76:	call   40c3f3 <handle_coda_error@@Base>
  404b7b:	mov    eax,DWORD PTR [rbp-0x74]
  404b7e:	lea    ecx,[rax+0x1]
  404b81:	mov    eax,DWORD PTR [rbp-0x6c]
  404b84:	lea    esi,[rax+0x1]
  404b87:	mov    edx,DWORD PTR [rbp-0x70]
  404b8a:	mov    rax,QWORD PTR [rbp-0x68]
  404b8e:	mov    rdi,rax
  404b91:	call   40476a <_start@@Base+0xb1a>
  404b96:	mov    rax,0x413380
  404b9d:	lea    rdi,[rax+0x118]
  404ba4:	call   403940 <coda_cursor_goto_parent@plt>
  404ba9:	jmp    404bbf <_start@@Base+0xf6f>
  404bab:	mov    edx,DWORD PTR [rbp-0x6c]
  404bae:	mov    rax,QWORD PTR [rbp-0x68]
  404bb2:	mov    esi,edx
  404bb4:	mov    rdi,rax
  404bb7:	call   403e64 <_start@@Base+0x214>
  404bbc:	nop
  404bbd:	jmp    404bc0 <_start@@Base+0xf70>
  404bbf:	nop
  404bc0:	mov    rax,QWORD PTR [rbp-0x8]
  404bc4:	xor    rax,QWORD PTR fs:0x28
  404bcd:	je     404bd4 <_start@@Base+0xf84>
  404bcf:	call   403840 <__stack_chk_fail@plt>
  404bd4:	leave  
  404bd5:	ret    

0000000000404bd6 <export_data_element_to_ascii@@Base>:
  404bd6:	endbr64 
  404bda:	push   rbp
  404bdb:	mov    rbp,rsp
  404bde:	mov    eax,DWORD PTR [rip+0xe74c]        # 413330 <__data_start@@Base+0x10>
  404be4:	test   eax,eax
  404be6:	je     404bf4 <export_data_element_to_ascii@@Base+0x1e>
  404be8:	mov    DWORD PTR [rip+0xe73e],0x0        # 413330 <__data_start@@Base+0x10>
  404bf2:	jmp    404c0b <export_data_element_to_ascii@@Base+0x35>
  404bf4:	mov    rax,0x4144c0
  404bfb:	mov    rax,QWORD PTR [rax]
  404bfe:	mov    rsi,rax
  404c01:	mov    edi,0xa
  404c06:	call   4038d0 <fputc@plt>
  404c0b:	mov    rax,0x414690
  404c12:	mov    eax,DWORD PTR [rax]
  404c14:	test   eax,eax
  404c16:	je     404c4b <export_data_element_to_ascii@@Base+0x75>
  404c18:	mov    rax,0x4144c0
  404c1f:	mov    rax,QWORD PTR [rax]
  404c22:	mov    edx,0x0
  404c27:	mov    esi,0x2
  404c2c:	mov    rdi,rax
  404c2f:	call   409a97 <print_full_field_name@@Base>
  404c34:	mov    rax,0x4144c0
  404c3b:	mov    rax,QWORD PTR [rax]
  404c3e:	mov    rsi,rax
  404c41:	mov    edi,0xa
  404c46:	call   4038d0 <fputc@plt>
  404c4b:	mov    rax,0x414500
  404c52:	mov    eax,DWORD PTR [rax]
  404c54:	test   eax,eax
  404c56:	jle    404c7c <export_data_element_to_ascii@@Base+0xa6>
  404c58:	mov    rax,0x414500
  404c5f:	mov    eax,DWORD PTR [rax]
  404c61:	lea    edx,[rax-0x1]
  404c64:	mov    rax,0x414500
  404c6b:	movsxd rdx,edx
  404c6e:	add    rdx,0x28
  404c72:	mov    rax,QWORD PTR [rax+rdx*8+0x10]
  404c77:	test   rax,rax
  404c7a:	je     404c9f <export_data_element_to_ascii@@Base+0xc9>
  404c7c:	mov    rax,0x4144c0
  404c83:	mov    rax,QWORD PTR [rax]
  404c86:	mov    ecx,0x0
  404c8b:	mov    edx,0x0
  404c90:	mov    esi,0x0
  404c95:	mov    rdi,rax
  404c98:	call   40476a <_start@@Base+0xb1a>
  404c9d:	jmp    404ca0 <export_data_element_to_ascii@@Base+0xca>
  404c9f:	nop
  404ca0:	pop    rbp
  404ca1:	ret    
  404ca2:	endbr64 
  404ca6:	push   rbp
  404ca7:	mov    rbp,rsp
  404caa:	sub    rsp,0x10
  404cae:	mov    eax,DWORD PTR [rip+0xe690]        # 413344 <__bss_start@@Base+0x8>
  404cb4:	test   eax,eax
  404cb6:	jns    404cd7 <export_data_element_to_ascii@@Base+0x101>
  404cb8:	lea    rcx,[rip+0xa6b5]        # 40f374 <_IO_stdin_used@@Base+0x374>
  404cbf:	mov    edx,0x2c
  404cc4:	lea    rsi,[rip+0xa4bd]        # 40f188 <_IO_stdin_used@@Base+0x188>
  404ccb:	lea    rdi,[rip+0xa51b]        # 40f1ed <_IO_stdin_used@@Base+0x1ed>
  404cd2:	call   403860 <__assert_fail@plt>
  404cd7:	mov    eax,DWORD PTR [rip+0xe667]        # 413344 <__bss_start@@Base+0x8>
  404cdd:	mov    DWORD PTR [rbp-0x4],eax
  404ce0:	jmp    404d08 <export_data_element_to_ascii@@Base+0x132>
  404ce2:	mov    rax,0x4144c0
  404ce9:	mov    rax,QWORD PTR [rax]
  404cec:	mov    rcx,rax
  404cef:	mov    edx,0x2
  404cf4:	mov    esi,0x1
  404cf9:	lea    rdi,[rip+0xa4f9]        # 40f1f9 <_IO_stdin_used@@Base+0x1f9>
  404d00:	call   403bc0 <fwrite@plt>
  404d05:	dec    DWORD PTR [rbp-0x4]
  404d08:	cmp    DWORD PTR [rbp-0x4],0x0
  404d0c:	jg     404ce2 <export_data_element_to_ascii@@Base+0x10c>
  404d0e:	nop
  404d0f:	leave  
  404d10:	ret    
  404d11:	endbr64 
  404d15:	push   rbp
  404d16:	mov    rbp,rsp
  404d19:	sub    rsp,0xf0
  404d20:	mov    QWORD PTR [rbp-0xe8],rdi
  404d27:	mov    QWORD PTR [rbp-0xa8],rsi
  404d2e:	mov    QWORD PTR [rbp-0xa0],rdx
  404d35:	mov    QWORD PTR [rbp-0x98],rcx
  404d3c:	mov    QWORD PTR [rbp-0x90],r8
  404d43:	mov    QWORD PTR [rbp-0x88],r9
  404d4a:	test   al,al
  404d4c:	je     404d76 <export_data_element_to_ascii@@Base+0x1a0>
  404d4e:	vmovaps XMMWORD PTR [rbp-0x80],xmm0
  404d53:	vmovaps XMMWORD PTR [rbp-0x70],xmm1
  404d58:	vmovaps XMMWORD PTR [rbp-0x60],xmm2
  404d5d:	vmovaps XMMWORD PTR [rbp-0x50],xmm3
  404d62:	vmovaps XMMWORD PTR [rbp-0x40],xmm4
  404d67:	vmovaps XMMWORD PTR [rbp-0x30],xmm5
  404d6c:	vmovaps XMMWORD PTR [rbp-0x20],xmm6
  404d71:	vmovaps XMMWORD PTR [rbp-0x10],xmm7
  404d76:	mov    rax,QWORD PTR fs:0x28
  404d7f:	mov    QWORD PTR [rbp-0xb8],rax
  404d86:	xor    eax,eax
  404d88:	mov    DWORD PTR [rbp-0xd0],0x8
  404d92:	mov    DWORD PTR [rbp-0xcc],0x30
  404d9c:	lea    rax,[rbp+0x10]
  404da0:	mov    QWORD PTR [rbp-0xc8],rax
  404da7:	lea    rax,[rbp-0xb0]
  404dae:	mov    QWORD PTR [rbp-0xc0],rax
  404db5:	mov    rax,0x4144c0
  404dbc:	mov    rax,QWORD PTR [rax]
  404dbf:	lea    rdx,[rbp-0xd0]
  404dc6:	mov    rcx,QWORD PTR [rbp-0xe8]
  404dcd:	mov    rsi,rcx
  404dd0:	mov    rdi,rax
  404dd3:	call   403b40 <vfprintf@plt>
  404dd8:	mov    DWORD PTR [rbp-0xd4],eax
  404dde:	mov    eax,DWORD PTR [rbp-0xd4]
  404de4:	mov    rsi,QWORD PTR [rbp-0xb8]
  404deb:	xor    rsi,QWORD PTR fs:0x28
  404df4:	je     404dfb <export_data_element_to_ascii@@Base+0x225>
  404df6:	call   403840 <__stack_chk_fail@plt>
  404dfb:	leave  
  404dfc:	ret    
  404dfd:	endbr64 
  404e01:	push   rbp
  404e02:	mov    rbp,rsp
  404e05:	sub    rsp,0xf0
  404e0c:	mov    QWORD PTR [rbp-0xe8],rdi
  404e13:	mov    QWORD PTR [rbp-0xa8],rsi
  404e1a:	mov    QWORD PTR [rbp-0xa0],rdx
  404e21:	mov    QWORD PTR [rbp-0x98],rcx
  404e28:	mov    QWORD PTR [rbp-0x90],r8
  404e2f:	mov    QWORD PTR [rbp-0x88],r9
  404e36:	test   al,al
  404e38:	je     404e62 <export_data_element_to_ascii@@Base+0x28c>
  404e3a:	vmovaps XMMWORD PTR [rbp-0x80],xmm0
  404e3f:	vmovaps XMMWORD PTR [rbp-0x70],xmm1
  404e44:	vmovaps XMMWORD PTR [rbp-0x60],xmm2
  404e49:	vmovaps XMMWORD PTR [rbp-0x50],xmm3
  404e4e:	vmovaps XMMWORD PTR [rbp-0x40],xmm4
  404e53:	vmovaps XMMWORD PTR [rbp-0x30],xmm5
  404e58:	vmovaps XMMWORD PTR [rbp-0x20],xmm6
  404e5d:	vmovaps XMMWORD PTR [rbp-0x10],xmm7
  404e62:	mov    rax,QWORD PTR fs:0x28
  404e6b:	mov    QWORD PTR [rbp-0xb8],rax
  404e72:	xor    eax,eax
  404e74:	call   404ca2 <export_data_element_to_ascii@@Base+0xcc>
  404e79:	mov    DWORD PTR [rbp-0xd0],0x8
  404e83:	mov    DWORD PTR [rbp-0xcc],0x30
  404e8d:	lea    rax,[rbp+0x10]
  404e91:	mov    QWORD PTR [rbp-0xc8],rax
  404e98:	lea    rax,[rbp-0xb0]
  404e9f:	mov    QWORD PTR [rbp-0xc0],rax
  404ea6:	mov    rax,0x4144c0
  404ead:	mov    rax,QWORD PTR [rax]
  404eb0:	lea    rdx,[rbp-0xd0]
  404eb7:	mov    rcx,QWORD PTR [rbp-0xe8]
  404ebe:	mov    rsi,rcx
  404ec1:	mov    rdi,rax
  404ec4:	call   403b40 <vfprintf@plt>
  404ec9:	mov    DWORD PTR [rbp-0xd4],eax
  404ecf:	mov    eax,DWORD PTR [rbp-0xd4]
  404ed5:	mov    rsi,QWORD PTR [rbp-0xb8]
  404edc:	xor    rsi,QWORD PTR fs:0x28
  404ee5:	je     404eec <export_data_element_to_ascii@@Base+0x316>
  404ee7:	call   403840 <__stack_chk_fail@plt>
  404eec:	leave  
  404eed:	ret    
  404eee:	endbr64 
  404ef2:	push   rbp
  404ef3:	mov    rbp,rsp
  404ef6:	sub    rsp,0x20
  404efa:	mov    QWORD PTR [rbp-0x18],rdi
  404efe:	mov    QWORD PTR [rbp-0x20],rsi
  404f02:	mov    QWORD PTR [rbp-0x8],0x0
  404f0a:	jmp    405052 <export_data_element_to_ascii@@Base+0x47c>
  404f0f:	mov    rdx,QWORD PTR [rbp-0x8]
  404f13:	mov    rax,QWORD PTR [rbp-0x18]
  404f17:	add    rax,rdx
  404f1a:	movzx  eax,BYTE PTR [rax]
  404f1d:	mov    BYTE PTR [rbp-0x9],al
  404f20:	movsx  eax,BYTE PTR [rbp-0x9]
  404f24:	cmp    eax,0xa
  404f27:	je     404fad <export_data_element_to_ascii@@Base+0x3d7>
  404f2d:	cmp    eax,0xa
  404f30:	jg     404f46 <export_data_element_to_ascii@@Base+0x370>
  404f32:	cmp    eax,0x8
  404f35:	je     404f81 <export_data_element_to_ascii@@Base+0x3ab>
  404f37:	cmp    eax,0x8
  404f3a:	jg     404f97 <export_data_element_to_ascii@@Base+0x3c1>
  404f3c:	cmp    eax,0x7
  404f3f:	je     404f6b <export_data_element_to_ascii@@Base+0x395>
  404f41:	jmp    40500f <export_data_element_to_ascii@@Base+0x439>
  404f46:	cmp    eax,0xc
  404f49:	je     404fd6 <export_data_element_to_ascii@@Base+0x400>
  404f4f:	cmp    eax,0xc
  404f52:	jl     404fc3 <export_data_element_to_ascii@@Base+0x3ed>
  404f54:	cmp    eax,0xd
  404f57:	je     404fe9 <export_data_element_to_ascii@@Base+0x413>
  404f5d:	cmp    eax,0x5c
  404f60:	je     404ffc <export_data_element_to_ascii@@Base+0x426>
  404f66:	jmp    40500f <export_data_element_to_ascii@@Base+0x439>
  404f6b:	lea    rdi,[rip+0xa28a]        # 40f1fc <_IO_stdin_used@@Base+0x1fc>
  404f72:	mov    eax,0x0
  404f77:	call   404d11 <export_data_element_to_ascii@@Base+0x13b>
  404f7c:	jmp    40504e <export_data_element_to_ascii@@Base+0x478>
  404f81:	lea    rdi,[rip+0xa277]        # 40f1ff <_IO_stdin_used@@Base+0x1ff>
  404f88:	mov    eax,0x0
  404f8d:	call   404d11 <export_data_element_to_ascii@@Base+0x13b>
  404f92:	jmp    40504e <export_data_element_to_ascii@@Base+0x478>
  404f97:	lea    rdi,[rip+0xa264]        # 40f202 <_IO_stdin_used@@Base+0x202>
  404f9e:	mov    eax,0x0
  404fa3:	call   404d11 <export_data_element_to_ascii@@Base+0x13b>
  404fa8:	jmp    40504e <export_data_element_to_ascii@@Base+0x478>
  404fad:	lea    rdi,[rip+0xa251]        # 40f205 <_IO_stdin_used@@Base+0x205>
  404fb4:	mov    eax,0x0
  404fb9:	call   404d11 <export_data_element_to_ascii@@Base+0x13b>
  404fbe:	jmp    40504e <export_data_element_to_ascii@@Base+0x478>
  404fc3:	lea    rdi,[rip+0xa23e]        # 40f208 <_IO_stdin_used@@Base+0x208>
  404fca:	mov    eax,0x0
  404fcf:	call   404d11 <export_data_element_to_ascii@@Base+0x13b>
  404fd4:	jmp    40504e <export_data_element_to_ascii@@Base+0x478>
  404fd6:	lea    rdi,[rip+0xa22e]        # 40f20b <_IO_stdin_used@@Base+0x20b>
  404fdd:	mov    eax,0x0
  404fe2:	call   404d11 <export_data_element_to_ascii@@Base+0x13b>
  404fe7:	jmp    40504e <export_data_element_to_ascii@@Base+0x478>
  404fe9:	lea    rdi,[rip+0xa21e]        # 40f20e <_IO_stdin_used@@Base+0x20e>
  404ff0:	mov    eax,0x0
  404ff5:	call   404d11 <export_data_element_to_ascii@@Base+0x13b>
  404ffa:	jmp    40504e <export_data_element_to_ascii@@Base+0x478>
  404ffc:	lea    rdi,[rip+0xa20e]        # 40f211 <_IO_stdin_used@@Base+0x211>
  405003:	mov    eax,0x0
  405008:	call   404d11 <export_data_element_to_ascii@@Base+0x13b>
  40500d:	jmp    40504e <export_data_element_to_ascii@@Base+0x478>
  40500f:	cmp    BYTE PTR [rbp-0x9],0x1f
  405013:	jle    405034 <export_data_element_to_ascii@@Base+0x45e>
  405015:	cmp    BYTE PTR [rbp-0x9],0x7f
  405019:	je     405034 <export_data_element_to_ascii@@Base+0x45e>
  40501b:	movsx  eax,BYTE PTR [rbp-0x9]
  40501f:	mov    esi,eax
  405021:	lea    rdi,[rip+0xa1ec]        # 40f214 <_IO_stdin_used@@Base+0x214>
  405028:	mov    eax,0x0
  40502d:	call   404d11 <export_data_element_to_ascii@@Base+0x13b>
  405032:	jmp    40504e <export_data_element_to_ascii@@Base+0x478>
  405034:	movzx  eax,BYTE PTR [rbp-0x9]
  405038:	movzx  eax,al
  40503b:	mov    esi,eax
  40503d:	lea    rdi,[rip+0xa1d3]        # 40f217 <_IO_stdin_used@@Base+0x217>
  405044:	mov    eax,0x0
  405049:	call   404d11 <export_data_element_to_ascii@@Base+0x13b>
  40504e:	inc    QWORD PTR [rbp-0x8]
  405052:	mov    rax,QWORD PTR [rbp-0x8]
  405056:	cmp    rax,QWORD PTR [rbp-0x20]
  40505a:	jl     404f0f <export_data_element_to_ascii@@Base+0x339>
  405060:	nop
  405061:	leave  
  405062:	ret    
  405063:	endbr64 
  405067:	push   rbp
  405068:	mov    rbp,rsp
  40506b:	sub    rsp,0x3d0
  405072:	mov    QWORD PTR [rbp-0x3c8],rdi
  405079:	mov    DWORD PTR [rbp-0x3cc],esi
  40507f:	mov    rax,QWORD PTR fs:0x28
  405088:	mov    QWORD PTR [rbp-0x8],rax
  40508c:	xor    eax,eax
  40508e:	lea    rdx,[rbp-0x3b8]
  405095:	mov    rax,QWORD PTR [rbp-0x3c8]
  40509c:	mov    rsi,rdx
  40509f:	mov    rdi,rax
  4050a2:	call   4037e0 <coda_cursor_has_attributes@plt>
  4050a7:	test   eax,eax
  4050a9:	je     4050b5 <export_data_element_to_ascii@@Base+0x4df>
  4050ab:	mov    eax,0x0
  4050b0:	call   40c3f3 <handle_coda_error@@Base>
  4050b5:	mov    eax,DWORD PTR [rbp-0x3b8]
  4050bb:	test   eax,eax
  4050bd:	je     40512f <export_data_element_to_ascii@@Base+0x559>
  4050bf:	mov    rax,QWORD PTR [rbp-0x3c8]
  4050c6:	mov    rdi,rax
  4050c9:	call   403a20 <coda_cursor_goto_attributes@plt>
  4050ce:	test   eax,eax
  4050d0:	je     4050dc <export_data_element_to_ascii@@Base+0x506>
  4050d2:	mov    eax,0x0
  4050d7:	call   40c3f3 <handle_coda_error@@Base>
  4050dc:	lea    rdi,[rip+0xa13a]        # 40f21d <_IO_stdin_used@@Base+0x21d>
  4050e3:	mov    eax,0x0
  4050e8:	call   404dfd <export_data_element_to_ascii@@Base+0x227>
  4050ed:	mov    eax,DWORD PTR [rip+0xe251]        # 413344 <__bss_start@@Base+0x8>
  4050f3:	inc    eax
  4050f5:	mov    DWORD PTR [rip+0xe249],eax        # 413344 <__bss_start@@Base+0x8>
  4050fb:	mov    edx,DWORD PTR [rbp-0x3cc]
  405101:	mov    rax,QWORD PTR [rbp-0x3c8]
  405108:	mov    esi,edx
  40510a:	mov    rdi,rax
  40510d:	call   405063 <export_data_element_to_ascii@@Base+0x48d>
  405112:	mov    eax,DWORD PTR [rip+0xe22c]        # 413344 <__bss_start@@Base+0x8>
  405118:	dec    eax
  40511a:	mov    DWORD PTR [rip+0xe224],eax        # 413344 <__bss_start@@Base+0x8>
  405120:	mov    rax,QWORD PTR [rbp-0x3c8]
  405127:	mov    rdi,rax
  40512a:	call   403940 <coda_cursor_goto_parent@plt>
  40512f:	lea    rdx,[rbp-0x3bc]
  405136:	mov    rax,QWORD PTR [rbp-0x3c8]
  40513d:	mov    rsi,rdx
  405140:	mov    rdi,rax
  405143:	call   4037f0 <coda_cursor_get_type_class@plt>
  405148:	test   eax,eax
  40514a:	je     405156 <export_data_element_to_ascii@@Base+0x580>
  40514c:	mov    eax,0x0
  405151:	call   40c3f3 <handle_coda_error@@Base>
  405156:	mov    eax,DWORD PTR [rbp-0x3bc]
  40515c:	cmp    eax,0x6
  40515f:	ja     4060a8 <export_data_element_to_ascii@@Base+0x14d2>
  405165:	mov    eax,eax
  405167:	lea    rdx,[rax*4+0x0]
  40516f:	lea    rax,[rip+0xa1aa]        # 40f320 <_IO_stdin_used@@Base+0x320>
  405176:	mov    eax,DWORD PTR [rdx+rax*1]
  405179:	movsxd rdx,eax
  40517c:	lea    rax,[rip+0xa19d]        # 40f320 <_IO_stdin_used@@Base+0x320>
  405183:	add    rax,rdx
  405186:	notrack jmp rax
  405189:	lea    rdx,[rbp-0x3a8]
  405190:	mov    rax,QWORD PTR [rbp-0x3c8]
  405197:	mov    rsi,rdx
  40519a:	mov    rdi,rax
  40519d:	call   403720 <coda_cursor_get_num_elements@plt>
  4051a2:	test   eax,eax
  4051a4:	je     4051b0 <export_data_element_to_ascii@@Base+0x5da>
  4051a6:	mov    eax,0x0
  4051ab:	call   40c3f3 <handle_coda_error@@Base>
  4051b0:	mov    rax,QWORD PTR [rbp-0x3a8]
  4051b7:	test   rax,rax
  4051ba:	jle    4060a1 <export_data_element_to_ascii@@Base+0x14cb>
  4051c0:	lea    rdx,[rbp-0x3a0]
  4051c7:	mov    rax,QWORD PTR [rbp-0x3c8]
  4051ce:	mov    rsi,rdx
  4051d1:	mov    rdi,rax
  4051d4:	call   403790 <coda_cursor_get_type@plt>
  4051d9:	test   eax,eax
  4051db:	je     4051e7 <export_data_element_to_ascii@@Base+0x611>
  4051dd:	mov    eax,0x0
  4051e2:	call   40c3f3 <handle_coda_error@@Base>
  4051e7:	mov    rax,QWORD PTR [rbp-0x3a0]
  4051ee:	lea    rdx,[rbp-0x3b4]
  4051f5:	mov    rsi,rdx
  4051f8:	mov    rdi,rax
  4051fb:	call   403a50 <coda_type_get_record_union_status@plt>
  405200:	test   eax,eax
  405202:	je     40520e <export_data_element_to_ascii@@Base+0x638>
  405204:	mov    eax,0x0
  405209:	call   40c3f3 <handle_coda_error@@Base>
  40520e:	mov    eax,DWORD PTR [rbp-0x3b4]
  405214:	test   eax,eax
  405216:	je     4053e1 <export_data_element_to_ascii@@Base+0x80b>
  40521c:	lea    rdx,[rbp-0x398]
  405223:	mov    rax,QWORD PTR [rbp-0x3c8]
  40522a:	mov    rsi,rdx
  40522d:	mov    rdi,rax
  405230:	call   403b90 <coda_cursor_get_available_union_field_index@plt>
  405235:	test   eax,eax
  405237:	je     405243 <export_data_element_to_ascii@@Base+0x66d>
  405239:	mov    eax,0x0
  40523e:	call   40c3f3 <handle_coda_error@@Base>
  405243:	mov    rcx,QWORD PTR [rbp-0x398]
  40524a:	mov    rax,QWORD PTR [rbp-0x3a0]
  405251:	lea    rdx,[rbp-0x390]
  405258:	mov    rsi,rcx
  40525b:	mov    rdi,rax
  40525e:	call   403c10 <coda_type_get_record_field_name@plt>
  405263:	test   eax,eax
  405265:	je     405271 <export_data_element_to_ascii@@Base+0x69b>
  405267:	mov    eax,0x0
  40526c:	call   40c3f3 <handle_coda_error@@Base>
  405271:	mov    rdx,QWORD PTR [rbp-0x398]
  405278:	mov    rax,QWORD PTR [rbp-0x3c8]
  40527f:	mov    rsi,rdx
  405282:	mov    rdi,rax
  405285:	call   4038e0 <coda_cursor_goto_record_field_by_index@plt>
  40528a:	test   eax,eax
  40528c:	je     405298 <export_data_element_to_ascii@@Base+0x6c2>
  40528e:	mov    eax,0x0
  405293:	call   40c3f3 <handle_coda_error@@Base>
  405298:	mov    rax,QWORD PTR [rbp-0x390]
  40529f:	mov    rsi,rax
  4052a2:	lea    rdi,[rip+0x9f82]        # 40f22b <_IO_stdin_used@@Base+0x22b>
  4052a9:	mov    eax,0x0
  4052ae:	call   404dfd <export_data_element_to_ascii@@Base+0x227>
  4052b3:	mov    eax,DWORD PTR [rip+0xe07b]        # 413334 <__data_start@@Base+0x14>
  4052b9:	test   eax,eax
  4052bb:	je     405355 <export_data_element_to_ascii@@Base+0x77f>
  4052c1:	lea    rdx,[rbp-0x388]
  4052c8:	mov    rax,QWORD PTR [rbp-0x3c8]
  4052cf:	mov    rsi,rdx
  4052d2:	mov    rdi,rax
  4052d5:	call   403bd0 <coda_cursor_get_file_bit_offset@plt>
  4052da:	test   eax,eax
  4052dc:	je     4052e8 <export_data_element_to_ascii@@Base+0x712>
  4052de:	mov    eax,0x0
  4052e3:	call   40c3f3 <handle_coda_error@@Base>
  4052e8:	mov    rax,QWORD PTR [rbp-0x388]
  4052ef:	test   rax,rax
  4052f2:	js     405355 <export_data_element_to_ascii@@Base+0x77f>
  4052f4:	mov    rax,QWORD PTR [rbp-0x388]
  4052fb:	sar    rax,0x3
  4052ff:	mov    rdx,rax
  405302:	lea    rax,[rbp-0x30]
  405306:	mov    rsi,rax
  405309:	mov    rdi,rdx
  40530c:	call   403c30 <coda_str64@plt>
  405311:	lea    rax,[rbp-0x30]
  405315:	mov    rsi,rax
  405318:	lea    rdi,[rip+0x9f11]        # 40f230 <_IO_stdin_used@@Base+0x230>
  40531f:	mov    eax,0x0
  405324:	call   404d11 <export_data_element_to_ascii@@Base+0x13b>
  405329:	mov    rax,QWORD PTR [rbp-0x388]
  405330:	and    eax,0x7
  405333:	test   rax,rax
  405336:	je     405355 <export_data_element_to_ascii@@Base+0x77f>
  405338:	mov    rax,QWORD PTR [rbp-0x388]
  40533f:	and    eax,0x7
  405342:	mov    esi,eax
  405344:	lea    rdi,[rip+0x9ee9]        # 40f234 <_IO_stdin_used@@Base+0x234>
  40534b:	mov    eax,0x0
  405350:	call   404d11 <export_data_element_to_ascii@@Base+0x13b>
  405355:	lea    rdi,[rip+0x9edc]        # 40f238 <_IO_stdin_used@@Base+0x238>
  40535c:	mov    eax,0x0
  405361:	call   404d11 <export_data_element_to_ascii@@Base+0x13b>
  405366:	mov    eax,DWORD PTR [rip+0xdfd8]        # 413344 <__bss_start@@Base+0x8>
  40536c:	inc    eax
  40536e:	mov    DWORD PTR [rip+0xdfd0],eax        # 413344 <__bss_start@@Base+0x8>
  405374:	mov    rax,0x413338
  40537b:	mov    eax,DWORD PTR [rax]
  40537d:	test   eax,eax
  40537f:	js     405392 <export_data_element_to_ascii@@Base+0x7bc>
  405381:	mov    rax,0x413338
  405388:	mov    eax,DWORD PTR [rax]
  40538a:	cmp    DWORD PTR [rbp-0x3cc],eax
  405390:	jge    4053ae <export_data_element_to_ascii@@Base+0x7d8>
  405392:	mov    eax,DWORD PTR [rbp-0x3cc]
  405398:	lea    edx,[rax+0x1]
  40539b:	mov    rax,QWORD PTR [rbp-0x3c8]
  4053a2:	mov    esi,edx
  4053a4:	mov    rdi,rax
  4053a7:	call   405063 <export_data_element_to_ascii@@Base+0x48d>
  4053ac:	jmp    4053bf <export_data_element_to_ascii@@Base+0x7e9>
  4053ae:	lea    rdi,[rip+0x9e85]        # 40f23a <_IO_stdin_used@@Base+0x23a>
  4053b5:	mov    eax,0x0
  4053ba:	call   404dfd <export_data_element_to_ascii@@Base+0x227>
  4053bf:	mov    eax,DWORD PTR [rip+0xdf7f]        # 413344 <__bss_start@@Base+0x8>
  4053c5:	dec    eax
  4053c7:	mov    DWORD PTR [rip+0xdf77],eax        # 413344 <__bss_start@@Base+0x8>
  4053cd:	mov    rax,QWORD PTR [rbp-0x3c8]
  4053d4:	mov    rdi,rax
  4053d7:	call   403940 <coda_cursor_goto_parent@plt>
  4053dc:	jmp    4060a1 <export_data_element_to_ascii@@Base+0x14cb>
  4053e1:	mov    rax,QWORD PTR [rbp-0x3c8]
  4053e8:	mov    rdi,rax
  4053eb:	call   4038c0 <coda_cursor_goto_first_record_field@plt>
  4053f0:	test   eax,eax
  4053f2:	je     4053fe <export_data_element_to_ascii@@Base+0x828>
  4053f4:	mov    eax,0x0
  4053f9:	call   40c3f3 <handle_coda_error@@Base>
  4053fe:	mov    QWORD PTR [rbp-0x398],0x0
  405409:	jmp    4055b6 <export_data_element_to_ascii@@Base+0x9e0>
  40540e:	mov    rcx,QWORD PTR [rbp-0x398]
  405415:	mov    rax,QWORD PTR [rbp-0x3a0]
  40541c:	lea    rdx,[rbp-0x390]
  405423:	mov    rsi,rcx
  405426:	mov    rdi,rax
  405429:	call   403c10 <coda_type_get_record_field_name@plt>
  40542e:	test   eax,eax
  405430:	je     40543c <export_data_element_to_ascii@@Base+0x866>
  405432:	mov    eax,0x0
  405437:	call   40c3f3 <handle_coda_error@@Base>
  40543c:	mov    rax,QWORD PTR [rbp-0x390]
  405443:	mov    rsi,rax
  405446:	lea    rdi,[rip+0x9dde]        # 40f22b <_IO_stdin_used@@Base+0x22b>
  40544d:	mov    eax,0x0
  405452:	call   404dfd <export_data_element_to_ascii@@Base+0x227>
  405457:	mov    eax,DWORD PTR [rip+0xded7]        # 413334 <__data_start@@Base+0x14>
  40545d:	test   eax,eax
  40545f:	je     4054f9 <export_data_element_to_ascii@@Base+0x923>
  405465:	lea    rdx,[rbp-0x388]
  40546c:	mov    rax,QWORD PTR [rbp-0x3c8]
  405473:	mov    rsi,rdx
  405476:	mov    rdi,rax
  405479:	call   403bd0 <coda_cursor_get_file_bit_offset@plt>
  40547e:	test   eax,eax
  405480:	je     40548c <export_data_element_to_ascii@@Base+0x8b6>
  405482:	mov    eax,0x0
  405487:	call   40c3f3 <handle_coda_error@@Base>
  40548c:	mov    rax,QWORD PTR [rbp-0x388]
  405493:	test   rax,rax
  405496:	js     4054f9 <export_data_element_to_ascii@@Base+0x923>
  405498:	mov    rax,QWORD PTR [rbp-0x388]
  40549f:	sar    rax,0x3
  4054a3:	mov    rdx,rax
  4054a6:	lea    rax,[rbp-0x30]
  4054aa:	mov    rsi,rax
  4054ad:	mov    rdi,rdx
  4054b0:	call   403c30 <coda_str64@plt>
  4054b5:	lea    rax,[rbp-0x30]
  4054b9:	mov    rsi,rax
  4054bc:	lea    rdi,[rip+0x9d6d]        # 40f230 <_IO_stdin_used@@Base+0x230>
  4054c3:	mov    eax,0x0
  4054c8:	call   404d11 <export_data_element_to_ascii@@Base+0x13b>
  4054cd:	mov    rax,QWORD PTR [rbp-0x388]
  4054d4:	and    eax,0x7
  4054d7:	test   rax,rax
  4054da:	je     4054f9 <export_data_element_to_ascii@@Base+0x923>
  4054dc:	mov    rax,QWORD PTR [rbp-0x388]
  4054e3:	and    eax,0x7
  4054e6:	mov    esi,eax
  4054e8:	lea    rdi,[rip+0x9d45]        # 40f234 <_IO_stdin_used@@Base+0x234>
  4054ef:	mov    eax,0x0
  4054f4:	call   404d11 <export_data_element_to_ascii@@Base+0x13b>
  4054f9:	lea    rdi,[rip+0x9d38]        # 40f238 <_IO_stdin_used@@Base+0x238>
  405500:	mov    eax,0x0
  405505:	call   404d11 <export_data_element_to_ascii@@Base+0x13b>
  40550a:	mov    eax,DWORD PTR [rip+0xde34]        # 413344 <__bss_start@@Base+0x8>
  405510:	inc    eax
  405512:	mov    DWORD PTR [rip+0xde2c],eax        # 413344 <__bss_start@@Base+0x8>
  405518:	mov    rax,0x413338
  40551f:	mov    eax,DWORD PTR [rax]
  405521:	test   eax,eax
  405523:	js     405536 <export_data_element_to_ascii@@Base+0x960>
  405525:	mov    rax,0x413338
  40552c:	mov    eax,DWORD PTR [rax]
  40552e:	cmp    DWORD PTR [rbp-0x3cc],eax
  405534:	jge    405552 <export_data_element_to_ascii@@Base+0x97c>
  405536:	mov    eax,DWORD PTR [rbp-0x3cc]
  40553c:	lea    edx,[rax+0x1]
  40553f:	mov    rax,QWORD PTR [rbp-0x3c8]
  405546:	mov    esi,edx
  405548:	mov    rdi,rax
  40554b:	call   405063 <export_data_element_to_ascii@@Base+0x48d>
  405550:	jmp    405563 <export_data_element_to_ascii@@Base+0x98d>
  405552:	lea    rdi,[rip+0x9ce1]        # 40f23a <_IO_stdin_used@@Base+0x23a>
  405559:	mov    eax,0x0
  40555e:	call   404dfd <export_data_element_to_ascii@@Base+0x227>
  405563:	mov    eax,DWORD PTR [rip+0xdddb]        # 413344 <__bss_start@@Base+0x8>
  405569:	dec    eax
  40556b:	mov    DWORD PTR [rip+0xddd3],eax        # 413344 <__bss_start@@Base+0x8>
  405571:	mov    rax,QWORD PTR [rbp-0x3a8]
  405578:	lea    rdx,[rax-0x1]
  40557c:	mov    rax,QWORD PTR [rbp-0x398]
  405583:	cmp    rdx,rax
  405586:	jle    4055a5 <export_data_element_to_ascii@@Base+0x9cf>
  405588:	mov    rax,QWORD PTR [rbp-0x3c8]
  40558f:	mov    rdi,rax
  405592:	call   403b10 <coda_cursor_goto_next_record_field@plt>
  405597:	test   eax,eax
  405599:	je     4055a5 <export_data_element_to_ascii@@Base+0x9cf>
  40559b:	mov    eax,0x0
  4055a0:	call   40c3f3 <handle_coda_error@@Base>
  4055a5:	mov    rax,QWORD PTR [rbp-0x398]
  4055ac:	inc    rax
  4055af:	mov    QWORD PTR [rbp-0x398],rax
  4055b6:	mov    rdx,QWORD PTR [rbp-0x398]
  4055bd:	mov    rax,QWORD PTR [rbp-0x3a8]
  4055c4:	cmp    rdx,rax
  4055c7:	jl     40540e <export_data_element_to_ascii@@Base+0x838>
  4055cd:	mov    rax,QWORD PTR [rbp-0x3c8]
  4055d4:	mov    rdi,rax
  4055d7:	call   403940 <coda_cursor_goto_parent@plt>
  4055dc:	jmp    4060a1 <export_data_element_to_ascii@@Base+0x14cb>
  4055e1:	lea    rdx,[rbp-0x340]
  4055e8:	lea    rcx,[rbp-0x390]
  4055ef:	mov    rax,QWORD PTR [rbp-0x3c8]
  4055f6:	mov    rsi,rcx
  4055f9:	mov    rdi,rax
  4055fc:	call   403aa0 <coda_cursor_get_array_dim@plt>
  405601:	test   eax,eax
  405603:	je     40560f <export_data_element_to_ascii@@Base+0xa39>
  405605:	mov    eax,0x0
  40560a:	call   40c3f3 <handle_coda_error@@Base>
  40560f:	mov    eax,DWORD PTR [rbp-0x390]
  405615:	test   eax,eax
  405617:	js     4060a4 <export_data_element_to_ascii@@Base+0x14ce>
  40561d:	mov    QWORD PTR [rbp-0x380],0x1
  405628:	mov    DWORD PTR [rbp-0x3b0],0x0
  405632:	jmp    40566f <export_data_element_to_ascii@@Base+0xa99>
  405634:	mov    eax,DWORD PTR [rbp-0x3b0]
  40563a:	cdqe   
  40563c:	mov    rax,QWORD PTR [rbp+rax*8-0x340]
  405644:	mov    rdx,QWORD PTR [rbp-0x380]
  40564b:	imul   rax,rdx
  40564f:	mov    QWORD PTR [rbp-0x380],rax
  405656:	mov    eax,DWORD PTR [rbp-0x3b0]
  40565c:	cdqe   
  40565e:	mov    DWORD PTR [rbp+rax*4-0x360],0x0
  405669:	inc    DWORD PTR [rbp-0x3b0]
  40566f:	mov    eax,DWORD PTR [rbp-0x390]
  405675:	cmp    DWORD PTR [rbp-0x3b0],eax
  40567b:	jl     405634 <export_data_element_to_ascii@@Base+0xa5e>
  40567d:	cmp    QWORD PTR [rbp-0x380],0x0
  405685:	jle    4060a4 <export_data_element_to_ascii@@Base+0x14ce>
  40568b:	mov    rax,QWORD PTR [rbp-0x3c8]
  405692:	mov    rdi,rax
  405695:	call   403890 <coda_cursor_goto_first_array_element@plt>
  40569a:	test   eax,eax
  40569c:	je     4056a8 <export_data_element_to_ascii@@Base+0xad2>
  40569e:	mov    eax,0x0
  4056a3:	call   40c3f3 <handle_coda_error@@Base>
  4056a8:	mov    DWORD PTR [rbp-0x3b0],0x0
  4056b2:	jmp    405910 <export_data_element_to_ascii@@Base+0xd3a>
  4056b7:	lea    rdi,[rip+0x9b81]        # 40f23f <_IO_stdin_used@@Base+0x23f>
  4056be:	mov    eax,0x0
  4056c3:	call   404dfd <export_data_element_to_ascii@@Base+0x227>
  4056c8:	mov    DWORD PTR [rbp-0x3ac],0x0
  4056d2:	jmp    40571d <export_data_element_to_ascii@@Base+0xb47>
  4056d4:	mov    eax,DWORD PTR [rbp-0x3ac]
  4056da:	cdqe   
  4056dc:	mov    eax,DWORD PTR [rbp+rax*4-0x360]
  4056e3:	mov    esi,eax
  4056e5:	lea    rdi,[rip+0x9b55]        # 40f241 <_IO_stdin_used@@Base+0x241>
  4056ec:	mov    eax,0x0
  4056f1:	call   404d11 <export_data_element_to_ascii@@Base+0x13b>
  4056f6:	mov    eax,DWORD PTR [rbp-0x390]
  4056fc:	dec    eax
  4056fe:	cmp    DWORD PTR [rbp-0x3ac],eax
  405704:	jge    405717 <export_data_element_to_ascii@@Base+0xb41>
  405706:	lea    rdi,[rip+0x9b37]        # 40f244 <_IO_stdin_used@@Base+0x244>
  40570d:	mov    eax,0x0
  405712:	call   404d11 <export_data_element_to_ascii@@Base+0x13b>
  405717:	inc    DWORD PTR [rbp-0x3ac]
  40571d:	mov    eax,DWORD PTR [rbp-0x390]
  405723:	cmp    DWORD PTR [rbp-0x3ac],eax
  405729:	jl     4056d4 <export_data_element_to_ascii@@Base+0xafe>
  40572b:	lea    rdi,[rip+0x9b14]        # 40f246 <_IO_stdin_used@@Base+0x246>
  405732:	mov    eax,0x0
  405737:	call   404d11 <export_data_element_to_ascii@@Base+0x13b>
  40573c:	mov    eax,DWORD PTR [rip+0xdbf2]        # 413334 <__data_start@@Base+0x14>
  405742:	test   eax,eax
  405744:	je     4057de <export_data_element_to_ascii@@Base+0xc08>
  40574a:	lea    rdx,[rbp-0x388]
  405751:	mov    rax,QWORD PTR [rbp-0x3c8]
  405758:	mov    rsi,rdx
  40575b:	mov    rdi,rax
  40575e:	call   403bd0 <coda_cursor_get_file_bit_offset@plt>
  405763:	test   eax,eax
  405765:	je     405771 <export_data_element_to_ascii@@Base+0xb9b>
  405767:	mov    eax,0x0
  40576c:	call   40c3f3 <handle_coda_error@@Base>
  405771:	mov    rax,QWORD PTR [rbp-0x388]
  405778:	test   rax,rax
  40577b:	js     4057de <export_data_element_to_ascii@@Base+0xc08>
  40577d:	mov    rax,QWORD PTR [rbp-0x388]
  405784:	sar    rax,0x3
  405788:	mov    rdx,rax
  40578b:	lea    rax,[rbp-0x30]
  40578f:	mov    rsi,rax
  405792:	mov    rdi,rdx
  405795:	call   403c30 <coda_str64@plt>
  40579a:	lea    rax,[rbp-0x30]
  40579e:	mov    rsi,rax
  4057a1:	lea    rdi,[rip+0x9a88]        # 40f230 <_IO_stdin_used@@Base+0x230>
  4057a8:	mov    eax,0x0
  4057ad:	call   404d11 <export_data_element_to_ascii@@Base+0x13b>
  4057b2:	mov    rax,QWORD PTR [rbp-0x388]
  4057b9:	and    eax,0x7
  4057bc:	test   rax,rax
  4057bf:	je     4057de <export_data_element_to_ascii@@Base+0xc08>
  4057c1:	mov    rax,QWORD PTR [rbp-0x388]
  4057c8:	and    eax,0x7
  4057cb:	mov    esi,eax
  4057cd:	lea    rdi,[rip+0x9a60]        # 40f234 <_IO_stdin_used@@Base+0x234>
  4057d4:	mov    eax,0x0
  4057d9:	call   404d11 <export_data_element_to_ascii@@Base+0x13b>
  4057de:	lea    rdi,[rip+0x9a53]        # 40f238 <_IO_stdin_used@@Base+0x238>
  4057e5:	mov    eax,0x0
  4057ea:	call   404d11 <export_data_element_to_ascii@@Base+0x13b>
  4057ef:	mov    eax,DWORD PTR [rip+0xdb4f]        # 413344 <__bss_start@@Base+0x8>
  4057f5:	inc    eax
  4057f7:	mov    DWORD PTR [rip+0xdb47],eax        # 413344 <__bss_start@@Base+0x8>
  4057fd:	mov    rax,0x413338
  405804:	mov    eax,DWORD PTR [rax]
  405806:	test   eax,eax
  405808:	js     40581b <export_data_element_to_ascii@@Base+0xc45>
  40580a:	mov    rax,0x413338
  405811:	mov    eax,DWORD PTR [rax]
  405813:	cmp    DWORD PTR [rbp-0x3cc],eax
  405819:	jge    405837 <export_data_element_to_ascii@@Base+0xc61>
  40581b:	mov    eax,DWORD PTR [rbp-0x3cc]
  405821:	lea    edx,[rax+0x1]
  405824:	mov    rax,QWORD PTR [rbp-0x3c8]
  40582b:	mov    esi,edx
  40582d:	mov    rdi,rax
  405830:	call   405063 <export_data_element_to_ascii@@Base+0x48d>
  405835:	jmp    405848 <export_data_element_to_ascii@@Base+0xc72>
  405837:	lea    rdi,[rip+0x99fc]        # 40f23a <_IO_stdin_used@@Base+0x23a>
  40583e:	mov    eax,0x0
  405843:	call   404dfd <export_data_element_to_ascii@@Base+0x227>
  405848:	mov    eax,DWORD PTR [rip+0xdaf6]        # 413344 <__bss_start@@Base+0x8>
  40584e:	dec    eax
  405850:	mov    DWORD PTR [rip+0xdaee],eax        # 413344 <__bss_start@@Base+0x8>
  405856:	mov    eax,DWORD PTR [rbp-0x390]
  40585c:	dec    eax
  40585e:	mov    DWORD PTR [rbp-0x3ac],eax
  405864:	jmp    4058ca <export_data_element_to_ascii@@Base+0xcf4>
  405866:	mov    eax,DWORD PTR [rbp-0x3ac]
  40586c:	cdqe   
  40586e:	mov    eax,DWORD PTR [rbp+rax*4-0x360]
  405875:	lea    edx,[rax+0x1]
  405878:	mov    eax,DWORD PTR [rbp-0x3ac]
  40587e:	cdqe   
  405880:	mov    DWORD PTR [rbp+rax*4-0x360],edx
  405887:	mov    eax,DWORD PTR [rbp-0x3ac]
  40588d:	cdqe   
  40588f:	mov    eax,DWORD PTR [rbp+rax*4-0x360]
  405896:	movsxd rdx,eax
  405899:	mov    eax,DWORD PTR [rbp-0x3ac]
  40589f:	cdqe   
  4058a1:	mov    rax,QWORD PTR [rbp+rax*8-0x340]
  4058a9:	cmp    rdx,rax
  4058ac:	jne    4058d5 <export_data_element_to_ascii@@Base+0xcff>
  4058ae:	mov    eax,DWORD PTR [rbp-0x3ac]
  4058b4:	lea    edx,[rax-0x1]
  4058b7:	mov    DWORD PTR [rbp-0x3ac],edx
  4058bd:	cdqe   
  4058bf:	mov    DWORD PTR [rbp+rax*4-0x360],0x0
  4058ca:	cmp    DWORD PTR [rbp-0x3ac],0x0
  4058d1:	jns    405866 <export_data_element_to_ascii@@Base+0xc90>
  4058d3:	jmp    4058d6 <export_data_element_to_ascii@@Base+0xd00>
  4058d5:	nop
  4058d6:	mov    eax,DWORD PTR [rbp-0x3b0]
  4058dc:	cdqe   
  4058de:	mov    rdx,QWORD PTR [rbp-0x380]
  4058e5:	dec    rdx
  4058e8:	cmp    rax,rdx
  4058eb:	jge    40590a <export_data_element_to_ascii@@Base+0xd34>
  4058ed:	mov    rax,QWORD PTR [rbp-0x3c8]
  4058f4:	mov    rdi,rax
  4058f7:	call   4039c0 <coda_cursor_goto_next_array_element@plt>
  4058fc:	test   eax,eax
  4058fe:	je     40590a <export_data_element_to_ascii@@Base+0xd34>
  405900:	mov    eax,0x0
  405905:	call   40c3f3 <handle_coda_error@@Base>
  40590a:	inc    DWORD PTR [rbp-0x3b0]
  405910:	mov    eax,DWORD PTR [rbp-0x3b0]
  405916:	cdqe   
  405918:	cmp    QWORD PTR [rbp-0x380],rax
  40591f:	jg     4056b7 <export_data_element_to_ascii@@Base+0xae1>
  405925:	mov    rax,QWORD PTR [rbp-0x3c8]
  40592c:	mov    rdi,rax
  40592f:	call   403940 <coda_cursor_goto_parent@plt>
  405934:	jmp    4060a4 <export_data_element_to_ascii@@Base+0x14ce>
  405939:	lea    rdx,[rbp-0x390]
  405940:	mov    rax,QWORD PTR [rbp-0x3c8]
  405947:	mov    rsi,rdx
  40594a:	mov    rdi,rax
  40594d:	call   403ab0 <coda_cursor_has_ascii_content@plt>
  405952:	test   eax,eax
  405954:	je     405960 <export_data_element_to_ascii@@Base+0xd8a>
  405956:	mov    eax,0x0
  40595b:	call   40c3f3 <handle_coda_error@@Base>
  405960:	mov    eax,DWORD PTR [rbp-0x390]
  405966:	test   eax,eax
  405968:	je     405a78 <export_data_element_to_ascii@@Base+0xea2>
  40596e:	lea    rdx,[rbp-0x388]
  405975:	mov    rax,QWORD PTR [rbp-0x3c8]
  40597c:	mov    rsi,rdx
  40597f:	mov    rdi,rax
  405982:	call   403980 <coda_cursor_get_string_length@plt>
  405987:	test   eax,eax
  405989:	je     405995 <export_data_element_to_ascii@@Base+0xdbf>
  40598b:	mov    eax,0x0
  405990:	call   40c3f3 <handle_coda_error@@Base>
  405995:	mov    rax,QWORD PTR [rbp-0x388]
  40599c:	inc    rax
  40599f:	mov    rdi,rax
  4059a2:	call   403a00 <malloc@plt>
  4059a7:	mov    QWORD PTR [rbp-0x378],rax
  4059ae:	cmp    QWORD PTR [rbp-0x378],0x0
  4059b6:	jne    4059f2 <export_data_element_to_ascii@@Base+0xe1c>
  4059b8:	mov    rax,QWORD PTR [rbp-0x388]
  4059bf:	inc    rax
  4059c2:	mov    r8d,0x19a
  4059c8:	lea    rcx,[rip+0x97b9]        # 40f188 <_IO_stdin_used@@Base+0x188>
  4059cf:	mov    rdx,rax
  4059d2:	lea    rsi,[rip+0x986f]        # 40f248 <_IO_stdin_used@@Base+0x248>
  4059d9:	mov    edi,0xffffffff
  4059de:	mov    eax,0x0
  4059e3:	call   4036e0 <coda_set_error@plt>
  4059e8:	mov    eax,0x0
  4059ed:	call   40c3f3 <handle_coda_error@@Base>
  4059f2:	mov    rax,QWORD PTR [rbp-0x388]
  4059f9:	lea    rdx,[rax+0x1]
  4059fd:	mov    rcx,QWORD PTR [rbp-0x378]
  405a04:	mov    rax,QWORD PTR [rbp-0x3c8]
  405a0b:	mov    rsi,rcx
  405a0e:	mov    rdi,rax
  405a11:	call   403930 <coda_cursor_read_string@plt>
  405a16:	test   eax,eax
  405a18:	je     405a24 <export_data_element_to_ascii@@Base+0xe4e>
  405a1a:	mov    eax,0x0
  405a1f:	call   40c3f3 <handle_coda_error@@Base>
  405a24:	lea    rdi,[rip+0x9852]        # 40f27d <_IO_stdin_used@@Base+0x27d>
  405a2b:	mov    eax,0x0
  405a30:	call   404dfd <export_data_element_to_ascii@@Base+0x227>
  405a35:	mov    rdx,QWORD PTR [rbp-0x388]
  405a3c:	mov    rax,QWORD PTR [rbp-0x378]
  405a43:	mov    rsi,rdx
  405a46:	mov    rdi,rax
  405a49:	call   404eee <export_data_element_to_ascii@@Base+0x318>
  405a4e:	mov    rax,QWORD PTR [rbp-0x388]
  405a55:	mov    rsi,rax
  405a58:	lea    rdi,[rip+0x9820]        # 40f27f <_IO_stdin_used@@Base+0x27f>
  405a5f:	mov    eax,0x0
  405a64:	call   404d11 <export_data_element_to_ascii@@Base+0x13b>
  405a69:	mov    rax,QWORD PTR [rbp-0x378]
  405a70:	mov    rdi,rax
  405a73:	call   403680 <free@plt>
  405a78:	lea    rdx,[rbp-0x398]
  405a7f:	mov    rax,QWORD PTR [rbp-0x3c8]
  405a86:	mov    rsi,rdx
  405a89:	mov    rdi,rax
  405a8c:	call   403900 <coda_cursor_get_read_type@plt>
  405a91:	test   eax,eax
  405a93:	je     405a9f <export_data_element_to_ascii@@Base+0xec9>
  405a95:	mov    eax,0x0
  405a9a:	call   40c3f3 <handle_coda_error@@Base>
  405a9f:	mov    eax,DWORD PTR [rbp-0x398]
  405aa5:	inc    eax
  405aa7:	cmp    eax,0xd
  405aaa:	ja     4060a7 <export_data_element_to_ascii@@Base+0x14d1>
  405ab0:	mov    eax,eax
  405ab2:	lea    rdx,[rax*4+0x0]
  405aba:	lea    rax,[rip+0x987b]        # 40f33c <_IO_stdin_used@@Base+0x33c>
  405ac1:	mov    eax,DWORD PTR [rdx+rax*1]
  405ac4:	movsxd rdx,eax
  405ac7:	lea    rax,[rip+0x986e]        # 40f33c <_IO_stdin_used@@Base+0x33c>
  405ace:	add    rax,rdx
  405ad1:	notrack jmp rax
  405ad4:	lea    rdx,[rbp-0x388]
  405adb:	mov    rax,QWORD PTR [rbp-0x3c8]
  405ae2:	mov    rsi,rdx
  405ae5:	mov    rdi,rax
  405ae8:	call   403b50 <coda_cursor_get_bit_size@plt>
  405aed:	test   eax,eax
  405aef:	je     405afb <export_data_element_to_ascii@@Base+0xf25>
  405af1:	mov    eax,0x0
  405af6:	call   40c3f3 <handle_coda_error@@Base>
  405afb:	mov    rax,QWORD PTR [rbp-0x388]
  405b02:	sar    rax,0x3
  405b06:	mov    rdx,rax
  405b09:	mov    rax,QWORD PTR [rbp-0x388]
  405b10:	and    eax,0x7
  405b13:	test   rax,rax
  405b16:	je     405b1f <export_data_element_to_ascii@@Base+0xf49>
  405b18:	mov    eax,0x1
  405b1d:	jmp    405b24 <export_data_element_to_ascii@@Base+0xf4e>
  405b1f:	mov    eax,0x0
  405b24:	add    rax,rdx
  405b27:	mov    QWORD PTR [rbp-0x370],rax
  405b2e:	mov    rax,QWORD PTR [rbp-0x370]
  405b35:	mov    rdi,rax
  405b38:	call   403a00 <malloc@plt>
  405b3d:	mov    QWORD PTR [rbp-0x368],rax
  405b44:	cmp    QWORD PTR [rbp-0x368],0x0
  405b4c:	jne    405b85 <export_data_element_to_ascii@@Base+0xfaf>
  405b4e:	mov    rax,QWORD PTR [rbp-0x370]
  405b55:	mov    r8d,0x1bf
  405b5b:	lea    rcx,[rip+0x9626]        # 40f188 <_IO_stdin_used@@Base+0x188>
  405b62:	mov    rdx,rax
  405b65:	lea    rsi,[rip+0x96dc]        # 40f248 <_IO_stdin_used@@Base+0x248>
  405b6c:	mov    edi,0xffffffff
  405b71:	mov    eax,0x0
  405b76:	call   4036e0 <coda_set_error@plt>
  405b7b:	mov    eax,0x0
  405b80:	call   40c3f3 <handle_coda_error@@Base>
  405b85:	mov    rdx,QWORD PTR [rbp-0x388]
  405b8c:	mov    rsi,QWORD PTR [rbp-0x368]
  405b93:	mov    rax,QWORD PTR [rbp-0x3c8]
  405b9a:	mov    rcx,rdx
  405b9d:	mov    edx,0x0
  405ba2:	mov    rdi,rax
  405ba5:	call   403c20 <coda_cursor_read_bits@plt>
  405baa:	test   eax,eax
  405bac:	je     405bb8 <export_data_element_to_ascii@@Base+0xfe2>
  405bae:	mov    eax,0x0
  405bb3:	call   40c3f3 <handle_coda_error@@Base>
  405bb8:	lea    rdi,[rip+0x96be]        # 40f27d <_IO_stdin_used@@Base+0x27d>
  405bbf:	mov    eax,0x0
  405bc4:	call   404dfd <export_data_element_to_ascii@@Base+0x227>
  405bc9:	mov    rdx,QWORD PTR [rbp-0x370]
  405bd0:	mov    rax,QWORD PTR [rbp-0x368]
  405bd7:	mov    rsi,rdx
  405bda:	mov    rdi,rax
  405bdd:	call   404eee <export_data_element_to_ascii@@Base+0x318>
  405be2:	lea    rdi,[rip+0x96a6]        # 40f28f <_IO_stdin_used@@Base+0x28f>
  405be9:	mov    eax,0x0
  405bee:	call   404d11 <export_data_element_to_ascii@@Base+0x13b>
  405bf3:	mov    rax,QWORD PTR [rbp-0x388]
  405bfa:	sar    rax,0x3
  405bfe:	mov    rdx,rax
  405c01:	lea    rax,[rbp-0x30]
  405c05:	mov    rsi,rax
  405c08:	mov    rdi,rdx
  405c0b:	call   403c30 <coda_str64@plt>
  405c10:	lea    rax,[rbp-0x30]
  405c14:	mov    rsi,rax
  405c17:	lea    rdi,[rip+0x967a]        # 40f298 <_IO_stdin_used@@Base+0x298>
  405c1e:	mov    eax,0x0
  405c23:	call   404d11 <export_data_element_to_ascii@@Base+0x13b>
  405c28:	mov    rax,QWORD PTR [rbp-0x388]
  405c2f:	and    eax,0x7
  405c32:	test   rax,rax
  405c35:	je     405c54 <export_data_element_to_ascii@@Base+0x107e>
  405c37:	mov    rax,QWORD PTR [rbp-0x388]
  405c3e:	and    eax,0x7
  405c41:	mov    esi,eax
  405c43:	lea    rdi,[rip+0x95ea]        # 40f234 <_IO_stdin_used@@Base+0x234>
  405c4a:	mov    eax,0x0
  405c4f:	call   404d11 <export_data_element_to_ascii@@Base+0x13b>
  405c54:	lea    rdi,[rip+0x9640]        # 40f29b <_IO_stdin_used@@Base+0x29b>
  405c5b:	mov    eax,0x0
  405c60:	call   404d11 <export_data_element_to_ascii@@Base+0x13b>
  405c65:	mov    rax,QWORD PTR [rbp-0x368]
  405c6c:	mov    rdi,rax
  405c6f:	call   403680 <free@plt>
  405c74:	jmp    405e57 <export_data_element_to_ascii@@Base+0x1281>
  405c79:	lea    rdx,[rbp-0x388]
  405c80:	mov    rax,QWORD PTR [rbp-0x3c8]
  405c87:	mov    rsi,rdx
  405c8a:	mov    rdi,rax
  405c8d:	call   403bb0 <coda_cursor_read_int32@plt>
  405c92:	test   eax,eax
  405c94:	je     405ca0 <export_data_element_to_ascii@@Base+0x10ca>
  405c96:	mov    eax,0x0
  405c9b:	call   40c3f3 <handle_coda_error@@Base>
  405ca0:	mov    eax,DWORD PTR [rbp-0x388]
  405ca6:	cdqe   
  405ca8:	mov    rsi,rax
  405cab:	lea    rdi,[rip+0x95ec]        # 40f29e <_IO_stdin_used@@Base+0x29e>
  405cb2:	mov    eax,0x0
  405cb7:	call   404dfd <export_data_element_to_ascii@@Base+0x227>
  405cbc:	jmp    405e57 <export_data_element_to_ascii@@Base+0x1281>
  405cc1:	lea    rdx,[rbp-0x388]
  405cc8:	mov    rax,QWORD PTR [rbp-0x3c8]
  405ccf:	mov    rsi,rdx
  405cd2:	mov    rdi,rax
  405cd5:	call   403760 <coda_cursor_read_uint32@plt>
  405cda:	test   eax,eax
  405cdc:	je     405ce8 <export_data_element_to_ascii@@Base+0x1112>
  405cde:	mov    eax,0x0
  405ce3:	call   40c3f3 <handle_coda_error@@Base>
  405ce8:	mov    eax,DWORD PTR [rbp-0x388]
  405cee:	mov    eax,eax
  405cf0:	mov    rsi,rax
  405cf3:	lea    rdi,[rip+0x95a9]        # 40f2a3 <_IO_stdin_used@@Base+0x2a3>
  405cfa:	mov    eax,0x0
  405cff:	call   404dfd <export_data_element_to_ascii@@Base+0x227>
  405d04:	jmp    405e57 <export_data_element_to_ascii@@Base+0x1281>
  405d09:	lea    rdx,[rbp-0x388]
  405d10:	mov    rax,QWORD PTR [rbp-0x3c8]
  405d17:	mov    rsi,rdx
  405d1a:	mov    rdi,rax
  405d1d:	call   403ad0 <coda_cursor_read_int64@plt>
  405d22:	test   eax,eax
  405d24:	je     405d30 <export_data_element_to_ascii@@Base+0x115a>
  405d26:	mov    eax,0x0
  405d2b:	call   40c3f3 <handle_coda_error@@Base>
  405d30:	mov    rax,QWORD PTR [rbp-0x388]
  405d37:	lea    rdx,[rbp-0x30]
  405d3b:	mov    rsi,rdx
  405d3e:	mov    rdi,rax
  405d41:	call   403c30 <coda_str64@plt>
  405d46:	lea    rax,[rbp-0x30]
  405d4a:	mov    rsi,rax
  405d4d:	lea    rdi,[rip+0x9554]        # 40f2a8 <_IO_stdin_used@@Base+0x2a8>
  405d54:	mov    eax,0x0
  405d59:	call   404dfd <export_data_element_to_ascii@@Base+0x227>
  405d5e:	jmp    405e57 <export_data_element_to_ascii@@Base+0x1281>
  405d63:	lea    rdx,[rbp-0x388]
  405d6a:	mov    rax,QWORD PTR [rbp-0x3c8]
  405d71:	mov    rsi,rdx
  405d74:	mov    rdi,rax
  405d77:	call   403990 <coda_cursor_read_uint64@plt>
  405d7c:	test   eax,eax
  405d7e:	je     405d8a <export_data_element_to_ascii@@Base+0x11b4>
  405d80:	mov    eax,0x0
  405d85:	call   40c3f3 <handle_coda_error@@Base>
  405d8a:	mov    rax,QWORD PTR [rbp-0x388]
  405d91:	lea    rdx,[rbp-0x30]
  405d95:	mov    rsi,rdx
  405d98:	mov    rdi,rax
  405d9b:	call   403730 <coda_str64u@plt>
  405da0:	lea    rax,[rbp-0x30]
  405da4:	mov    rsi,rax
  405da7:	lea    rdi,[rip+0x94fa]        # 40f2a8 <_IO_stdin_used@@Base+0x2a8>
  405dae:	mov    eax,0x0
  405db3:	call   404dfd <export_data_element_to_ascii@@Base+0x227>
  405db8:	jmp    405e57 <export_data_element_to_ascii@@Base+0x1281>
  405dbd:	lea    rdx,[rbp-0x388]
  405dc4:	mov    rax,QWORD PTR [rbp-0x3c8]
  405dcb:	mov    rsi,rdx
  405dce:	mov    rdi,rax
  405dd1:	call   4039a0 <coda_cursor_read_double@plt>
  405dd6:	test   eax,eax
  405dd8:	je     405de4 <export_data_element_to_ascii@@Base+0x120e>
  405dda:	mov    eax,0x0
  405ddf:	call   40c3f3 <handle_coda_error@@Base>
  405de4:	mov    eax,DWORD PTR [rbp-0x398]
  405dea:	cmp    eax,0x8
  405ded:	jne    405e0e <export_data_element_to_ascii@@Base+0x1238>
  405def:	mov    rax,QWORD PTR [rbp-0x388]
  405df6:	vmovq  xmm0,rax
  405dfb:	lea    rdi,[rip+0x94aa]        # 40f2ac <_IO_stdin_used@@Base+0x2ac>
  405e02:	mov    eax,0x1
  405e07:	call   404dfd <export_data_element_to_ascii@@Base+0x227>
  405e0c:	jmp    405e57 <export_data_element_to_ascii@@Base+0x1281>
  405e0e:	mov    rax,QWORD PTR [rbp-0x388]
  405e15:	vmovq  xmm0,rax
  405e1a:	lea    rdi,[rip+0x9491]        # 40f2b2 <_IO_stdin_used@@Base+0x2b2>
  405e21:	mov    eax,0x1
  405e26:	call   404dfd <export_data_element_to_ascii@@Base+0x227>
  405e2b:	jmp    405e57 <export_data_element_to_ascii@@Base+0x1281>
  405e2d:	mov    eax,DWORD PTR [rbp-0x390]
  405e33:	test   eax,eax
  405e35:	jne    405e56 <export_data_element_to_ascii@@Base+0x1280>
  405e37:	lea    rcx,[rip+0x9542]        # 40f380 <_IO_stdin_used@@Base+0x380>
  405e3e:	mov    edx,0x224
  405e43:	lea    rsi,[rip+0x933e]        # 40f188 <_IO_stdin_used@@Base+0x188>
  405e4a:	lea    rdi,[rip+0x9468]        # 40f2b9 <_IO_stdin_used@@Base+0x2b9>
  405e51:	call   403860 <__assert_fail@plt>
  405e56:	nop
  405e57:	jmp    4060a7 <export_data_element_to_ascii@@Base+0x14d1>
  405e5c:	lea    rdx,[rbp-0x398]
  405e63:	mov    rax,QWORD PTR [rbp-0x3c8]
  405e6a:	mov    rsi,rdx
  405e6d:	mov    rdi,rax
  405e70:	call   403880 <coda_cursor_get_special_type@plt>
  405e75:	test   eax,eax
  405e77:	je     405e83 <export_data_element_to_ascii@@Base+0x12ad>
  405e79:	mov    eax,0x0
  405e7e:	call   40c3f3 <handle_coda_error@@Base>
  405e83:	mov    eax,DWORD PTR [rbp-0x398]
  405e89:	test   eax,eax
  405e8b:	je     405ee2 <export_data_element_to_ascii@@Base+0x130c>
  405e8d:	mov    rdx,QWORD PTR [rbp-0x3c8]
  405e94:	lea    rax,[rbp-0x340]
  405e9b:	mov    rcx,rdx
  405e9e:	mov    edx,0x310
  405ea3:	mov    rsi,rcx
  405ea6:	mov    rdi,rax
  405ea9:	call   403960 <memcpy@plt>
  405eae:	lea    rax,[rbp-0x340]
  405eb5:	mov    rdi,rax
  405eb8:	call   403b80 <coda_cursor_use_base_type_of_special_type@plt>
  405ebd:	test   eax,eax
  405ebf:	je     405ecb <export_data_element_to_ascii@@Base+0x12f5>
  405ec1:	mov    eax,0x0
  405ec6:	call   40c3f3 <handle_coda_error@@Base>
  405ecb:	mov    edx,DWORD PTR [rbp-0x3cc]
  405ed1:	lea    rax,[rbp-0x340]
  405ed8:	mov    esi,edx
  405eda:	mov    rdi,rax
  405edd:	call   405063 <export_data_element_to_ascii@@Base+0x48d>
  405ee2:	mov    eax,DWORD PTR [rbp-0x398]
  405ee8:	mov    edi,eax
  405eea:	call   403650 <coda_type_get_special_type_name@plt>
  405eef:	mov    rsi,rax
  405ef2:	lea    rdi,[rip+0x93d2]        # 40f2cb <_IO_stdin_used@@Base+0x2cb>
  405ef9:	mov    eax,0x0
  405efe:	call   404dfd <export_data_element_to_ascii@@Base+0x227>
  405f03:	mov    eax,DWORD PTR [rbp-0x398]
  405f09:	cmp    eax,0x1
  405f0c:	je     405f3b <export_data_element_to_ascii@@Base+0x1365>
  405f0e:	test   eax,eax
  405f10:	je     405f25 <export_data_element_to_ascii@@Base+0x134f>
  405f12:	cmp    eax,0x2
  405f15:	je     405f84 <export_data_element_to_ascii@@Base+0x13ae>
  405f17:	cmp    eax,0x3
  405f1a:	je     406047 <export_data_element_to_ascii@@Base+0x1471>
  405f20:	jmp    4060a8 <export_data_element_to_ascii@@Base+0x14d2>
  405f25:	lea    rdi,[rip+0x930c]        # 40f238 <_IO_stdin_used@@Base+0x238>
  405f2c:	mov    eax,0x0
  405f31:	call   404d11 <export_data_element_to_ascii@@Base+0x13b>
  405f36:	jmp    40609f <export_data_element_to_ascii@@Base+0x14c9>
  405f3b:	lea    rdx,[rbp-0x388]
  405f42:	mov    rax,QWORD PTR [rbp-0x3c8]
  405f49:	mov    rsi,rdx
  405f4c:	mov    rdi,rax
  405f4f:	call   4039a0 <coda_cursor_read_double@plt>
  405f54:	test   eax,eax
  405f56:	je     405f62 <export_data_element_to_ascii@@Base+0x138c>
  405f58:	mov    eax,0x0
  405f5d:	call   40c3f3 <handle_coda_error@@Base>
  405f62:	mov    rax,QWORD PTR [rbp-0x388]
  405f69:	vmovq  xmm0,rax
  405f6e:	lea    rdi,[rip+0x933d]        # 40f2b2 <_IO_stdin_used@@Base+0x2b2>
  405f75:	mov    eax,0x1
  405f7a:	call   404d11 <export_data_element_to_ascii@@Base+0x13b>
  405f7f:	jmp    40609f <export_data_element_to_ascii@@Base+0x14c9>
  405f84:	lea    rdx,[rbp-0x388]
  405f8b:	mov    rax,QWORD PTR [rbp-0x3c8]
  405f92:	mov    rsi,rdx
  405f95:	mov    rdi,rax
  405f98:	call   4039a0 <coda_cursor_read_double@plt>
  405f9d:	test   eax,eax
  405f9f:	je     405fab <export_data_element_to_ascii@@Base+0x13d5>
  405fa1:	mov    eax,0x0
  405fa6:	call   40c3f3 <handle_coda_error@@Base>
  405fab:	mov    rax,QWORD PTR [rbp-0x388]
  405fb2:	vmovq  xmm0,rax
  405fb7:	call   4039b0 <coda_isNaN@plt>
  405fbc:	test   eax,eax
  405fbe:	jne    405fd5 <export_data_element_to_ascii@@Base+0x13ff>
  405fc0:	mov    rax,QWORD PTR [rbp-0x388]
  405fc7:	vmovq  xmm0,rax
  405fcc:	call   4037a0 <coda_isInf@plt>
  405fd1:	test   eax,eax
  405fd3:	je     405ff7 <export_data_element_to_ascii@@Base+0x1421>
  405fd5:	mov    rax,QWORD PTR [rbp-0x388]
  405fdc:	vmovq  xmm0,rax
  405fe1:	lea    rdi,[rip+0x92e8]        # 40f2d0 <_IO_stdin_used@@Base+0x2d0>
  405fe8:	mov    eax,0x1
  405fed:	call   404d11 <export_data_element_to_ascii@@Base+0x13b>
  405ff2:	jmp    40609f <export_data_element_to_ascii@@Base+0x14c9>
  405ff7:	mov    rax,QWORD PTR [rbp-0x388]
  405ffe:	lea    rdx,[rbp-0x30]
  406002:	mov    rsi,rdx
  406005:	lea    rdi,[rip+0x92cc]        # 40f2d8 <_IO_stdin_used@@Base+0x2d8>
  40600c:	vmovq  xmm0,rax
  406011:	call   403700 <coda_time_double_to_string@plt>
  406016:	test   eax,eax
  406018:	je     40602d <export_data_element_to_ascii@@Base+0x1457>
  40601a:	lea    rdi,[rip+0x92d2]        # 40f2f3 <_IO_stdin_used@@Base+0x2f3>
  406021:	mov    eax,0x0
  406026:	call   404d11 <export_data_element_to_ascii@@Base+0x13b>
  40602b:	jmp    40609f <export_data_element_to_ascii@@Base+0x14c9>
  40602d:	lea    rax,[rbp-0x30]
  406031:	mov    rsi,rax
  406034:	lea    rdi,[rip+0x92d3]        # 40f30e <_IO_stdin_used@@Base+0x30e>
  40603b:	mov    eax,0x0
  406040:	call   404d11 <export_data_element_to_ascii@@Base+0x13b>
  406045:	jmp    40609f <export_data_element_to_ascii@@Base+0x14c9>
  406047:	lea    rdx,[rbp-0x388]
  40604e:	lea    rcx,[rbp-0x390]
  406055:	mov    rax,QWORD PTR [rbp-0x3c8]
  40605c:	mov    rsi,rcx
  40605f:	mov    rdi,rax
  406062:	call   403a60 <coda_cursor_read_complex_double_split@plt>
  406067:	test   eax,eax
  406069:	je     406075 <export_data_element_to_ascii@@Base+0x149f>
  40606b:	mov    eax,0x0
  406070:	call   40c3f3 <handle_coda_error@@Base>
  406075:	vmovsd xmm0,QWORD PTR [rbp-0x388]
  40607d:	mov    rax,QWORD PTR [rbp-0x390]
  406084:	vmovapd xmm1,xmm0
  406088:	vmovq  xmm0,rax
  40608d:	lea    rdi,[rip+0x927f]        # 40f313 <_IO_stdin_used@@Base+0x313>
  406094:	mov    eax,0x2
  406099:	call   404d11 <export_data_element_to_ascii@@Base+0x13b>
  40609e:	nop
  40609f:	jmp    4060a8 <export_data_element_to_ascii@@Base+0x14d2>
  4060a1:	nop
  4060a2:	jmp    4060a8 <export_data_element_to_ascii@@Base+0x14d2>
  4060a4:	nop
  4060a5:	jmp    4060a8 <export_data_element_to_ascii@@Base+0x14d2>
  4060a7:	nop
  4060a8:	nop
  4060a9:	mov    rax,QWORD PTR [rbp-0x8]
  4060ad:	xor    rax,QWORD PTR fs:0x28
  4060b6:	je     4060bd <export_data_element_to_ascii@@Base+0x14e7>
  4060b8:	call   403840 <__stack_chk_fail@plt>
  4060bd:	leave  
  4060be:	ret    

00000000004060bf <print_debug_data@@Base>:
  4060bf:	endbr64 
  4060c3:	push   rbp
  4060c4:	mov    rbp,rsp
  4060c7:	sub    rsp,0x350
  4060ce:	mov    QWORD PTR [rbp-0x338],rdi
  4060d5:	mov    QWORD PTR [rbp-0x340],rsi
  4060dc:	mov    DWORD PTR [rbp-0x344],edx
  4060e2:	mov    rax,QWORD PTR fs:0x28
  4060eb:	mov    QWORD PTR [rbp-0x8],rax
  4060ef:	xor    eax,eax
  4060f1:	cmp    QWORD PTR [rbp-0x338],0x0
  4060f9:	jne    40611f <print_debug_data@@Base+0x60>
  4060fb:	mov    rax,0x413380
  406102:	mov    rax,QWORD PTR [rax]
  406105:	lea    rdx,[rbp-0x328]
  40610c:	mov    rsi,rdx
  40610f:	mov    rdi,rax
  406112:	call   4036f0 <coda_open@plt>
  406117:	mov    DWORD PTR [rbp-0x32c],eax
  40611d:	jmp    406155 <print_debug_data@@Base+0x96>
  40611f:	mov    rax,0x413380
  406126:	mov    rax,QWORD PTR [rax]
  406129:	lea    rdi,[rbp-0x328]
  406130:	mov    ecx,DWORD PTR [rbp-0x344]
  406136:	mov    rdx,QWORD PTR [rbp-0x340]
  40613d:	mov    rsi,QWORD PTR [rbp-0x338]
  406144:	mov    r8,rdi
  406147:	mov    rdi,rax
  40614a:	call   4039d0 <coda_open_as@plt>
  40614f:	mov    DWORD PTR [rbp-0x32c],eax
  406155:	cmp    DWORD PTR [rbp-0x32c],0x0
  40615c:	je     4061e6 <print_debug_data@@Base+0x127>
  406162:	call   403bf0 <coda_get_errno@plt>
  406167:	mov    eax,DWORD PTR [rax]
  406169:	cmp    eax,0xffffffeb
  40616c:	jne    4061e6 <print_debug_data@@Base+0x127>
  40616e:	mov    edi,0x0
  406173:	call   403740 <coda_set_option_use_mmap@plt>
  406178:	cmp    QWORD PTR [rbp-0x338],0x0
  406180:	jne    4061a6 <print_debug_data@@Base+0xe7>
  406182:	mov    rax,0x413380
  406189:	mov    rax,QWORD PTR [rax]
  40618c:	lea    rdx,[rbp-0x328]
  406193:	mov    rsi,rdx
  406196:	mov    rdi,rax
  406199:	call   4036f0 <coda_open@plt>
  40619e:	mov    DWORD PTR [rbp-0x32c],eax
  4061a4:	jmp    4061dc <print_debug_data@@Base+0x11d>
  4061a6:	mov    rax,0x413380
  4061ad:	mov    rax,QWORD PTR [rax]
  4061b0:	lea    rdi,[rbp-0x328]
  4061b7:	mov    ecx,DWORD PTR [rbp-0x344]
  4061bd:	mov    rdx,QWORD PTR [rbp-0x340]
  4061c4:	mov    rsi,QWORD PTR [rbp-0x338]
  4061cb:	mov    r8,rdi
  4061ce:	mov    rdi,rax
  4061d1:	call   4039d0 <coda_open_as@plt>
  4061d6:	mov    DWORD PTR [rbp-0x32c],eax
  4061dc:	mov    edi,0x1
  4061e1:	call   403740 <coda_set_option_use_mmap@plt>
  4061e6:	cmp    DWORD PTR [rbp-0x32c],0x0
  4061ed:	je     4061f9 <print_debug_data@@Base+0x13a>
  4061ef:	mov    eax,0x0
  4061f4:	call   40c3f3 <handle_coda_error@@Base>
  4061f9:	mov    rax,QWORD PTR [rbp-0x328]
  406200:	lea    rdx,[rbp-0x330]
  406207:	mov    rsi,rdx
  40620a:	mov    rdi,rax
  40620d:	call   403810 <coda_get_product_format@plt>
  406212:	test   eax,eax
  406214:	je     406220 <print_debug_data@@Base+0x161>
  406216:	mov    eax,0x0
  40621b:	call   40c3f3 <handle_coda_error@@Base>
  406220:	mov    eax,DWORD PTR [rbp-0x330]
  406226:	test   eax,eax
  406228:	je     406240 <print_debug_data@@Base+0x181>
  40622a:	mov    eax,DWORD PTR [rbp-0x330]
  406230:	cmp    eax,0x1
  406233:	je     406240 <print_debug_data@@Base+0x181>
  406235:	mov    eax,DWORD PTR [rbp-0x330]
  40623b:	cmp    eax,0x2
  40623e:	jne    406247 <print_debug_data@@Base+0x188>
  406240:	mov    eax,0x1
  406245:	jmp    40624c <print_debug_data@@Base+0x18d>
  406247:	mov    eax,0x0
  40624c:	mov    DWORD PTR [rip+0xd0e2],eax        # 413334 <__data_start@@Base+0x14>
  406252:	mov    rdx,QWORD PTR [rbp-0x328]
  406259:	lea    rax,[rbp-0x320]
  406260:	mov    rsi,rdx
  406263:	mov    rdi,rax
  406266:	call   4038b0 <coda_cursor_set_product@plt>
  40626b:	test   eax,eax
  40626d:	je     406279 <print_debug_data@@Base+0x1ba>
  40626f:	mov    eax,0x0
  406274:	call   40c3f3 <handle_coda_error@@Base>
  406279:	mov    rax,0x4144e0
  406280:	mov    rax,QWORD PTR [rax]
  406283:	test   rax,rax
  406286:	je     4062bd <print_debug_data@@Base+0x1fe>
  406288:	mov    rax,0x4144e0
  40628f:	mov    rdx,QWORD PTR [rax]
  406292:	lea    rax,[rbp-0x320]
  406299:	mov    rsi,rdx
  40629c:	mov    rdi,rax
  40629f:	call   403ae0 <coda_cursor_goto@plt>
  4062a4:	mov    DWORD PTR [rbp-0x32c],eax
  4062aa:	cmp    DWORD PTR [rbp-0x32c],0x0
  4062b1:	je     4062bd <print_debug_data@@Base+0x1fe>
  4062b3:	mov    eax,0x0
  4062b8:	call   40c3f3 <handle_coda_error@@Base>
  4062bd:	mov    edi,0x0
  4062c2:	call   4036a0 <coda_set_option_perform_boundary_checks@plt>
  4062c7:	lea    rax,[rbp-0x320]
  4062ce:	mov    esi,0x0
  4062d3:	mov    rdi,rax
  4062d6:	call   405063 <export_data_element_to_ascii@@Base+0x48d>
  4062db:	mov    rax,QWORD PTR [rbp-0x328]
  4062e2:	mov    rdi,rax
  4062e5:	call   403ac0 <coda_close@plt>
  4062ea:	nop
  4062eb:	mov    rax,QWORD PTR [rbp-0x8]
  4062ef:	xor    rax,QWORD PTR fs:0x28
  4062f8:	je     4062ff <print_debug_data@@Base+0x240>
  4062fa:	call   403840 <__stack_chk_fail@plt>
  4062ff:	leave  
  406300:	ret    

0000000000406301 <dim_info_init@@Base>:
  406301:	endbr64 
  406305:	push   rbp
  406306:	mov    rbp,rsp
  406309:	mov    rax,0x414500
  406310:	mov    DWORD PTR [rax],0x0
  406316:	mov    rax,0x414500
  40631d:	mov    DWORD PTR [rax+0x44],0x0
  406324:	mov    rax,0x414500
  40632b:	mov    DWORD PTR [rax+0x68],0xffffffff
  406332:	nop
  406333:	pop    rbp
  406334:	ret    

0000000000406335 <dim_info_done@@Base>:
  406335:	endbr64 
  406339:	push   rbp
  40633a:	mov    rbp,rsp
  40633d:	nop
  40633e:	pop    rbp
  40633f:	ret    

0000000000406340 <print_all_distinct_dims@@Base>:
  406340:	endbr64 
  406344:	push   rbp
  406345:	mov    rbp,rsp
  406348:	sub    rsp,0x20
  40634c:	mov    DWORD PTR [rbp-0x14],edi
  40634f:	mov    rax,0x414500
  406356:	mov    eax,DWORD PTR [rax]
  406358:	cmp    DWORD PTR [rbp-0x14],eax
  40635b:	jl     40637c <print_all_distinct_dims@@Base+0x3c>
  40635d:	lea    rcx,[rip+0x91ec]        # 40f550 <_IO_stdin_used@@Base+0x550>
  406364:	mov    edx,0x32
  406369:	lea    rsi,[rip+0x9030]        # 40f3a0 <_IO_stdin_used@@Base+0x3a0>
  406370:	lea    rdi,[rip+0x908c]        # 40f403 <_IO_stdin_used@@Base+0x403>
  406377:	call   403860 <__assert_fail@plt>
  40637c:	mov    rax,0x414500
  406383:	mov    edx,DWORD PTR [rbp-0x14]
  406386:	movsxd rdx,edx
  406389:	add    rdx,0x10
  40638d:	mov    eax,DWORD PTR [rax+rdx*4+0x8]
  406391:	test   eax,eax
  406393:	je     40665c <print_all_distinct_dims@@Base+0x31c>
  406399:	mov    rax,0x414500
  4063a0:	mov    edx,DWORD PTR [rbp-0x14]
  4063a3:	movsxd rdx,edx
  4063a6:	mov    eax,DWORD PTR [rax+rdx*4+0x4]
  4063aa:	inc    eax
  4063ac:	cdqe   
  4063ae:	shl    rax,0x2
  4063b2:	mov    rdi,rax
  4063b5:	call   403a00 <malloc@plt>
  4063ba:	mov    QWORD PTR [rbp-0x8],rax
  4063be:	cmp    QWORD PTR [rbp-0x8],0x0
  4063c3:	jne    40640e <print_all_distinct_dims@@Base+0xce>
  4063c5:	mov    rax,0x414500
  4063cc:	mov    edx,DWORD PTR [rbp-0x14]
  4063cf:	movsxd rdx,edx
  4063d2:	mov    eax,DWORD PTR [rax+rdx*4+0x4]
  4063d6:	inc    eax
  4063d8:	cdqe   
  4063da:	shl    rax,0x2
  4063de:	mov    r8d,0x3d
  4063e4:	lea    rcx,[rip+0x8fb5]        # 40f3a0 <_IO_stdin_used@@Base+0x3a0>
  4063eb:	mov    rdx,rax
  4063ee:	lea    rsi,[rip+0x902b]        # 40f420 <_IO_stdin_used@@Base+0x420>
  4063f5:	mov    edi,0xffffffff
  4063fa:	mov    eax,0x0
  4063ff:	call   4036e0 <coda_set_error@plt>
  406404:	mov    eax,0x0
  406409:	call   40c3f3 <handle_coda_error@@Base>
  40640e:	mov    rax,0x414500
  406415:	mov    edx,DWORD PTR [rbp-0x14]
  406418:	movsxd rdx,edx
  40641b:	mov    eax,DWORD PTR [rax+rdx*4+0x4]
  40641f:	inc    eax
  406421:	cdqe   
  406423:	lea    rdx,[rax*4+0x0]
  40642b:	mov    rax,QWORD PTR [rbp-0x8]
  40642f:	mov    esi,0x0
  406434:	mov    rdi,rax
  406437:	call   4038a0 <memset@plt>
  40643c:	mov    DWORD PTR [rbp-0xc],0x0
  406443:	jmp    4064ad <print_all_distinct_dims@@Base+0x16d>
  406445:	mov    rax,0x414500
  40644c:	mov    edx,DWORD PTR [rbp-0x14]
  40644f:	movsxd rdx,edx
  406452:	add    rdx,0xc
  406456:	mov    rax,QWORD PTR [rax+rdx*8+0x10]
  40645b:	mov    edx,DWORD PTR [rbp-0xc]
  40645e:	movsxd rdx,edx
  406461:	shl    rdx,0x2
  406465:	add    rax,rdx
  406468:	mov    eax,DWORD PTR [rax]
  40646a:	test   eax,eax
  40646c:	js     4064aa <print_all_distinct_dims@@Base+0x16a>
  40646e:	mov    rax,0x414500
  406475:	mov    edx,DWORD PTR [rbp-0x14]
  406478:	movsxd rdx,edx
  40647b:	add    rdx,0xc
  40647f:	mov    rax,QWORD PTR [rax+rdx*8+0x10]
  406484:	mov    edx,DWORD PTR [rbp-0xc]
  406487:	movsxd rdx,edx
  40648a:	shl    rdx,0x2
  40648e:	add    rax,rdx
  406491:	mov    eax,DWORD PTR [rax]
  406493:	cdqe   
  406495:	lea    rdx,[rax*4+0x0]
  40649d:	mov    rax,QWORD PTR [rbp-0x8]
  4064a1:	add    rax,rdx
  4064a4:	mov    edx,DWORD PTR [rax]
  4064a6:	inc    edx
  4064a8:	mov    DWORD PTR [rax],edx
  4064aa:	inc    DWORD PTR [rbp-0xc]
  4064ad:	mov    eax,DWORD PTR [rbp-0xc]
  4064b0:	movsxd rdx,eax
  4064b3:	mov    rax,0x414500
  4064ba:	mov    ecx,DWORD PTR [rbp-0x14]
  4064bd:	movsxd rcx,ecx
  4064c0:	add    rcx,0x28
  4064c4:	mov    eax,DWORD PTR [rax+rcx*4+0x10]
  4064c8:	lea    ecx,[rax-0x1]
  4064cb:	mov    rax,0x414500
  4064d2:	movsxd rcx,ecx
  4064d5:	add    rcx,0x20
  4064d9:	mov    rax,QWORD PTR [rax+rcx*8+0x10]
  4064de:	cmp    rdx,rax
  4064e1:	jl     406445 <print_all_distinct_dims@@Base+0x105>
  4064e7:	mov    eax,DWORD PTR [rbp-0x14]
  4064ea:	inc    eax
  4064ec:	mov    esi,eax
  4064ee:	lea    rdi,[rip+0x8f60]        # 40f455 <_IO_stdin_used@@Base+0x455>
  4064f5:	mov    eax,0x0
  4064fa:	call   403850 <printf@plt>
  4064ff:	mov    rax,0x414500
  406506:	mov    edx,DWORD PTR [rbp-0x14]
  406509:	movsxd rdx,edx
  40650c:	add    rdx,0x8
  406510:	mov    eax,DWORD PTR [rax+rdx*4+0x4]
  406514:	mov    DWORD PTR [rbp-0xc],eax
  406517:	jmp    40654c <print_all_distinct_dims@@Base+0x20c>
  406519:	mov    eax,DWORD PTR [rbp-0xc]
  40651c:	cdqe   
  40651e:	lea    rdx,[rax*4+0x0]
  406526:	mov    rax,QWORD PTR [rbp-0x8]
  40652a:	add    rax,rdx
  40652d:	mov    eax,DWORD PTR [rax]
  40652f:	test   eax,eax
  406531:	jle    406549 <print_all_distinct_dims@@Base+0x209>
  406533:	mov    eax,DWORD PTR [rbp-0xc]
  406536:	mov    esi,eax
  406538:	lea    rdi,[rip+0x8f22]        # 40f461 <_IO_stdin_used@@Base+0x461>
  40653f:	mov    eax,0x0
  406544:	call   403850 <printf@plt>
  406549:	inc    DWORD PTR [rbp-0xc]
  40654c:	mov    rax,0x414500
  406553:	mov    edx,DWORD PTR [rbp-0x14]
  406556:	movsxd rdx,edx
  406559:	mov    eax,DWORD PTR [rax+rdx*4+0x4]
  40655d:	cmp    DWORD PTR [rbp-0xc],eax
  406560:	jl     406519 <print_all_distinct_dims@@Base+0x1d9>
  406562:	mov    rax,0x414500
  406569:	mov    edx,DWORD PTR [rbp-0x14]
  40656c:	movsxd rdx,edx
  40656f:	mov    eax,DWORD PTR [rax+rdx*4+0x4]
  406573:	mov    esi,eax
  406575:	lea    rdi,[rip+0x8ee9]        # 40f465 <_IO_stdin_used@@Base+0x465>
  40657c:	mov    eax,0x0
  406581:	call   403850 <printf@plt>
  406586:	lea    rdi,[rip+0x8edc]        # 40f469 <_IO_stdin_used@@Base+0x469>
  40658d:	mov    eax,0x0
  406592:	call   403850 <printf@plt>
  406597:	mov    rax,0x414500
  40659e:	mov    edx,DWORD PTR [rbp-0x14]
  4065a1:	movsxd rdx,edx
  4065a4:	add    rdx,0x8
  4065a8:	mov    eax,DWORD PTR [rax+rdx*4+0x4]
  4065ac:	mov    DWORD PTR [rbp-0xc],eax
  4065af:	jmp    4065f7 <print_all_distinct_dims@@Base+0x2b7>
  4065b1:	mov    eax,DWORD PTR [rbp-0xc]
  4065b4:	cdqe   
  4065b6:	lea    rdx,[rax*4+0x0]
  4065be:	mov    rax,QWORD PTR [rbp-0x8]
  4065c2:	add    rax,rdx
  4065c5:	mov    eax,DWORD PTR [rax]
  4065c7:	test   eax,eax
  4065c9:	jle    4065f4 <print_all_distinct_dims@@Base+0x2b4>
  4065cb:	mov    eax,DWORD PTR [rbp-0xc]
  4065ce:	cdqe   
  4065d0:	lea    rdx,[rax*4+0x0]
  4065d8:	mov    rax,QWORD PTR [rbp-0x8]
  4065dc:	add    rax,rdx
  4065df:	mov    eax,DWORD PTR [rax]
  4065e1:	mov    esi,eax
  4065e3:	lea    rdi,[rip+0x8e77]        # 40f461 <_IO_stdin_used@@Base+0x461>
  4065ea:	mov    eax,0x0
  4065ef:	call   403850 <printf@plt>
  4065f4:	inc    DWORD PTR [rbp-0xc]
  4065f7:	mov    rax,0x414500
  4065fe:	mov    edx,DWORD PTR [rbp-0x14]
  406601:	movsxd rdx,edx
  406604:	mov    eax,DWORD PTR [rax+rdx*4+0x4]
  406608:	cmp    DWORD PTR [rbp-0xc],eax
  40660b:	jl     4065b1 <print_all_distinct_dims@@Base+0x271>
  40660d:	mov    rax,0x414500
  406614:	mov    edx,DWORD PTR [rbp-0x14]
  406617:	movsxd rdx,edx
  40661a:	mov    eax,DWORD PTR [rax+rdx*4+0x4]
  40661e:	cdqe   
  406620:	lea    rdx,[rax*4+0x0]
  406628:	mov    rax,QWORD PTR [rbp-0x8]
  40662c:	add    rax,rdx
  40662f:	mov    eax,DWORD PTR [rax]
  406631:	mov    esi,eax
  406633:	lea    rdi,[rip+0x8e2b]        # 40f465 <_IO_stdin_used@@Base+0x465>
  40663a:	mov    eax,0x0
  40663f:	call   403850 <printf@plt>
  406644:	mov    edi,0xa
  406649:	call   403690 <putchar@plt>
  40664e:	mov    rax,QWORD PTR [rbp-0x8]
  406652:	mov    rdi,rax
  406655:	call   403680 <free@plt>
  40665a:	jmp    40665d <print_all_distinct_dims@@Base+0x31d>
  40665c:	nop
  40665d:	leave  
  40665e:	ret    
  40665f:	endbr64 
  406663:	push   rbp
  406664:	mov    rbp,rsp
  406667:	sub    rsp,0xb0
  40666e:	mov    DWORD PTR [rbp-0xa4],edi
  406674:	mov    DWORD PTR [rbp-0xa8],esi
  40667a:	mov    DWORD PTR [rbp-0xac],edx
  406680:	mov    rax,QWORD PTR fs:0x28
  406689:	mov    QWORD PTR [rbp-0x8],rax
  40668d:	xor    eax,eax
  40668f:	lea    rax,[rbp-0x9c]
  406696:	mov    rsi,rax
  406699:	mov    rax,0x413380
  4066a0:	lea    rdi,[rax+0x118]
  4066a7:	call   4037f0 <coda_cursor_get_type_class@plt>
  4066ac:	test   eax,eax
  4066ae:	je     4066ba <print_all_distinct_dims@@Base+0x37a>
  4066b0:	mov    eax,0x0
  4066b5:	call   40c3f3 <handle_coda_error@@Base>
  4066ba:	mov    eax,DWORD PTR [rbp-0x9c]
  4066c0:	cmp    eax,0x1
  4066c3:	je     4066de <print_all_distinct_dims@@Base+0x39e>
  4066c5:	test   eax,eax
  4066c7:	je     406b6e <print_all_distinct_dims@@Base+0x82e>
  4066cd:	sub    eax,0x4
  4066d0:	cmp    eax,0x1
  4066d3:	ja     406f08 <print_all_distinct_dims@@Base+0xbc8>
  4066d9:	jmp    406d4b <print_all_distinct_dims@@Base+0xa0b>
  4066de:	mov    eax,DWORD PTR [rbp-0xa8]
  4066e4:	movsxd rdx,eax
  4066e7:	mov    rax,rdx
  4066ea:	shl    rax,0x2
  4066ee:	add    rax,rdx
  4066f1:	shl    rax,0x4
  4066f5:	lea    rdx,[rax+0x520]
  4066fc:	mov    rax,0x413380
  406703:	add    rax,rdx
  406706:	add    rax,0x14
  40670a:	mov    QWORD PTR [rbp-0x68],rax
  40670e:	mov    rax,QWORD PTR [rbp-0x68]
  406712:	mov    eax,DWORD PTR [rax]
  406714:	mov    DWORD PTR [rbp-0x84],eax
  40671a:	mov    rax,0x413380
  406721:	mov    eax,DWORD PTR [rax+0xf34]
  406727:	cmp    DWORD PTR [rbp-0xa8],eax
  40672d:	jne    406953 <print_all_distinct_dims@@Base+0x613>
  406733:	lea    rdx,[rbp-0x50]
  406737:	lea    rax,[rbp-0x70]
  40673b:	mov    rsi,rax
  40673e:	mov    rax,0x413380
  406745:	lea    rdi,[rax+0x118]
  40674c:	call   403aa0 <coda_cursor_get_array_dim@plt>
  406751:	test   eax,eax
  406753:	je     40675f <print_all_distinct_dims@@Base+0x41f>
  406755:	mov    eax,0x0
  40675a:	call   40c3f3 <handle_coda_error@@Base>
  40675f:	mov    rax,QWORD PTR [rbp-0x68]
  406763:	mov    edx,DWORD PTR [rax+0x4]
  406766:	mov    eax,DWORD PTR [rbp-0x70]
  406769:	cmp    edx,eax
  40676b:	je     40678c <print_all_distinct_dims@@Base+0x44c>
  40676d:	lea    rcx,[rip+0x8dfc]        # 40f570 <_IO_stdin_used@@Base+0x570>
  406774:	mov    edx,0x7d
  406779:	lea    rsi,[rip+0x8c20]        # 40f3a0 <_IO_stdin_used@@Base+0x3a0>
  406780:	lea    rdi,[rip+0x8cf1]        # 40f478 <_IO_stdin_used@@Base+0x478>
  406787:	call   403860 <__assert_fail@plt>
  40678c:	mov    DWORD PTR [rbp-0x98],0x0
  406796:	jmp    40693b <print_all_distinct_dims@@Base+0x5fb>
  40679b:	mov    rax,QWORD PTR [rbp-0x68]
  40679f:	mov    edx,DWORD PTR [rbp-0x98]
  4067a5:	movsxd rdx,edx
  4067a8:	mov    eax,DWORD PTR [rax+rdx*4+0x8]
  4067ac:	cmp    eax,0xffffffff
  4067af:	jne    406935 <print_all_distinct_dims@@Base+0x5f5>
  4067b5:	mov    eax,DWORD PTR [rbp-0x98]
  4067bb:	cdqe   
  4067bd:	mov    rdx,QWORD PTR [rbp+rax*8-0x50]
  4067c2:	mov    ecx,DWORD PTR [rbp-0x84]
  4067c8:	mov    eax,DWORD PTR [rbp-0x98]
  4067ce:	add    ecx,eax
  4067d0:	mov    rax,0x414500
  4067d7:	movsxd rcx,ecx
  4067da:	add    rcx,0xc
  4067de:	mov    rcx,QWORD PTR [rax+rcx*8+0x10]
  4067e3:	mov    rax,QWORD PTR [rbp-0x68]
  4067e7:	mov    eax,DWORD PTR [rax+0x2c]
  4067ea:	cdqe   
  4067ec:	shl    rax,0x2
  4067f0:	add    rax,rcx
  4067f3:	mov    DWORD PTR [rax],edx
  4067f5:	mov    edx,DWORD PTR [rbp-0x84]
  4067fb:	mov    eax,DWORD PTR [rbp-0x98]
  406801:	add    edx,eax
  406803:	mov    rax,0x414500
  40680a:	movsxd rdx,edx
  40680d:	mov    eax,DWORD PTR [rax+rdx*4+0x4]
  406811:	cmp    eax,0xffffffff
  406814:	jne    406875 <print_all_distinct_dims@@Base+0x535>
  406816:	mov    eax,DWORD PTR [rbp-0x98]
  40681c:	cdqe   
  40681e:	mov    rax,QWORD PTR [rbp+rax*8-0x50]
  406823:	mov    ecx,DWORD PTR [rbp-0x84]
  406829:	mov    edx,DWORD PTR [rbp-0x98]
  40682f:	add    edx,ecx
  406831:	mov    ecx,eax
  406833:	mov    rax,0x414500
  40683a:	movsxd rdx,edx
  40683d:	mov    DWORD PTR [rax+rdx*4+0x4],ecx
  406841:	mov    eax,DWORD PTR [rbp-0x98]
  406847:	cdqe   
  406849:	mov    rax,QWORD PTR [rbp+rax*8-0x50]
  40684e:	mov    ecx,DWORD PTR [rbp-0x84]
  406854:	mov    edx,DWORD PTR [rbp-0x98]
  40685a:	add    edx,ecx
  40685c:	mov    ecx,eax
  40685e:	mov    rax,0x414500
  406865:	movsxd rdx,edx
  406868:	add    rdx,0x8
  40686c:	mov    DWORD PTR [rax+rdx*4+0x4],ecx
  406870:	jmp    406935 <print_all_distinct_dims@@Base+0x5f5>
  406875:	mov    edx,DWORD PTR [rbp-0x84]
  40687b:	mov    eax,DWORD PTR [rbp-0x98]
  406881:	add    edx,eax
  406883:	mov    rax,0x414500
  40688a:	movsxd rdx,edx
  40688d:	mov    eax,DWORD PTR [rax+rdx*4+0x4]
  406891:	movsxd rdx,eax
  406894:	mov    eax,DWORD PTR [rbp-0x98]
  40689a:	cdqe   
  40689c:	mov    rax,QWORD PTR [rbp+rax*8-0x50]
  4068a1:	cmp    rdx,rax
  4068a4:	jge    4068d1 <print_all_distinct_dims@@Base+0x591>
  4068a6:	mov    eax,DWORD PTR [rbp-0x98]
  4068ac:	cdqe   
  4068ae:	mov    rax,QWORD PTR [rbp+rax*8-0x50]
  4068b3:	mov    ecx,DWORD PTR [rbp-0x84]
  4068b9:	mov    edx,DWORD PTR [rbp-0x98]
  4068bf:	add    edx,ecx
  4068c1:	mov    ecx,eax
  4068c3:	mov    rax,0x414500
  4068ca:	movsxd rdx,edx
  4068cd:	mov    DWORD PTR [rax+rdx*4+0x4],ecx
  4068d1:	mov    edx,DWORD PTR [rbp-0x84]
  4068d7:	mov    eax,DWORD PTR [rbp-0x98]
  4068dd:	add    edx,eax
  4068df:	mov    rax,0x414500
  4068e6:	movsxd rdx,edx
  4068e9:	add    rdx,0x8
  4068ed:	mov    eax,DWORD PTR [rax+rdx*4+0x4]
  4068f1:	movsxd rdx,eax
  4068f4:	mov    eax,DWORD PTR [rbp-0x98]
  4068fa:	cdqe   
  4068fc:	mov    rax,QWORD PTR [rbp+rax*8-0x50]
  406901:	cmp    rdx,rax
  406904:	jle    406935 <print_all_distinct_dims@@Base+0x5f5>
  406906:	mov    eax,DWORD PTR [rbp-0x98]
  40690c:	cdqe   
  40690e:	mov    rax,QWORD PTR [rbp+rax*8-0x50]
  406913:	mov    ecx,DWORD PTR [rbp-0x84]
  406919:	mov    edx,DWORD PTR [rbp-0x98]
  40691f:	add    edx,ecx
  406921:	mov    ecx,eax
  406923:	mov    rax,0x414500
  40692a:	movsxd rdx,edx
  40692d:	add    rdx,0x8
  406931:	mov    DWORD PTR [rax+rdx*4+0x4],ecx
  406935:	inc    DWORD PTR [rbp-0x98]
  40693b:	mov    rax,QWORD PTR [rbp-0x68]
  40693f:	mov    eax,DWORD PTR [rax+0x4]
  406942:	cmp    DWORD PTR [rbp-0x98],eax
  406948:	jl     40679b <print_all_distinct_dims@@Base+0x45b>
  40694e:	jmp    406f27 <print_all_distinct_dims@@Base+0xbe7>
  406953:	cmp    DWORD PTR [rbp-0xa8],0x0
  40695a:	jne    406967 <print_all_distinct_dims@@Base+0x627>
  40695c:	mov    rax,QWORD PTR [rbp-0x68]
  406960:	mov    DWORD PTR [rax+0x2c],0x0
  406967:	mov    rax,QWORD PTR [rbp-0x68]
  40696b:	mov    edx,DWORD PTR [rax+0x2c]
  40696e:	mov    rax,QWORD PTR [rbp-0x68]
  406972:	mov    eax,DWORD PTR [rax+0x28]
  406975:	mov    ecx,DWORD PTR [rbp-0xa8]
  40697b:	lea    edi,[rcx+0x1]
  40697e:	mov    ecx,edx
  406980:	imul   ecx,eax
  406983:	mov    rsi,0x413380
  40698a:	movsxd rdx,edi
  40698d:	mov    rax,rdx
  406990:	shl    rax,0x2
  406994:	add    rax,rdx
  406997:	shl    rax,0x4
  40699b:	add    rax,rsi
  40699e:	add    rax,0x560
  4069a4:	mov    DWORD PTR [rax],ecx
  4069a6:	mov    DWORD PTR [rbp-0x94],0x1
  4069b0:	mov    eax,DWORD PTR [rbp-0x84]
  4069b6:	mov    DWORD PTR [rbp-0x90],eax
  4069bc:	jmp    406a42 <print_all_distinct_dims@@Base+0x702>
  4069c1:	mov    rax,0x414500
  4069c8:	mov    edx,DWORD PTR [rbp-0x90]
  4069ce:	movsxd rdx,edx
  4069d1:	add    rdx,0x10
  4069d5:	mov    eax,DWORD PTR [rax+rdx*4+0x8]
  4069d9:	test   eax,eax
  4069db:	je     406a19 <print_all_distinct_dims@@Base+0x6d9>
  4069dd:	mov    rax,0x414500
  4069e4:	mov    edx,DWORD PTR [rbp-0x90]
  4069ea:	movsxd rdx,edx
  4069ed:	add    rdx,0xc
  4069f1:	mov    rdx,QWORD PTR [rax+rdx*8+0x10]
  4069f6:	mov    rax,QWORD PTR [rbp-0x68]
  4069fa:	mov    eax,DWORD PTR [rax+0x2c]
  4069fd:	cdqe   
  4069ff:	shl    rax,0x2
  406a03:	add    rax,rdx
  406a06:	mov    eax,DWORD PTR [rax]
  406a08:	mov    edx,DWORD PTR [rbp-0x94]
  406a0e:	imul   eax,edx
  406a11:	mov    DWORD PTR [rbp-0x94],eax
  406a17:	jmp    406a3c <print_all_distinct_dims@@Base+0x6fc>
  406a19:	mov    rax,0x414500
  406a20:	mov    edx,DWORD PTR [rbp-0x90]
  406a26:	movsxd rdx,edx
  406a29:	mov    eax,DWORD PTR [rax+rdx*4+0x4]
  406a2d:	mov    edx,DWORD PTR [rbp-0x94]
  406a33:	imul   eax,edx
  406a36:	mov    DWORD PTR [rbp-0x94],eax
  406a3c:	inc    DWORD PTR [rbp-0x90]
  406a42:	mov    rax,QWORD PTR [rbp-0x68]
  406a46:	mov    edx,DWORD PTR [rax+0x4]
  406a49:	mov    eax,DWORD PTR [rbp-0x84]
  406a4f:	add    eax,edx
  406a51:	cmp    DWORD PTR [rbp-0x90],eax
  406a57:	jl     4069c1 <print_all_distinct_dims@@Base+0x681>
  406a5d:	cmp    DWORD PTR [rbp-0x94],0x0
  406a64:	jle    406f27 <print_all_distinct_dims@@Base+0xbe7>
  406a6a:	mov    rax,0x413380
  406a71:	lea    rdi,[rax+0x118]
  406a78:	call   403890 <coda_cursor_goto_first_array_element@plt>
  406a7d:	test   eax,eax
  406a7f:	je     406a8b <print_all_distinct_dims@@Base+0x74b>
  406a81:	mov    eax,0x0
  406a86:	call   40c3f3 <handle_coda_error@@Base>
  406a8b:	mov    DWORD PTR [rbp-0x8c],0x0
  406a95:	jmp    406b44 <print_all_distinct_dims@@Base+0x804>
  406a9a:	mov    eax,DWORD PTR [rbp-0xa8]
  406aa0:	lea    esi,[rax+0x1]
  406aa3:	mov    eax,DWORD PTR [rbp-0xa4]
  406aa9:	lea    ecx,[rax+0x1]
  406aac:	mov    eax,DWORD PTR [rbp-0xac]
  406ab2:	mov    edx,eax
  406ab4:	mov    edi,ecx
  406ab6:	call   40665f <print_all_distinct_dims@@Base+0x31f>
  406abb:	mov    eax,DWORD PTR [rbp-0x94]
  406ac1:	dec    eax
  406ac3:	cmp    DWORD PTR [rbp-0x8c],eax
  406ac9:	jge    406b3e <print_all_distinct_dims@@Base+0x7fe>
  406acb:	mov    rax,0x413380
  406ad2:	lea    rdi,[rax+0x118]
  406ad9:	call   4039c0 <coda_cursor_goto_next_array_element@plt>
  406ade:	test   eax,eax
  406ae0:	je     406aec <print_all_distinct_dims@@Base+0x7ac>
  406ae2:	mov    eax,0x0
  406ae7:	call   40c3f3 <handle_coda_error@@Base>
  406aec:	mov    eax,DWORD PTR [rbp-0xa8]
  406af2:	lea    ecx,[rax+0x1]
  406af5:	mov    rsi,0x413380
  406afc:	movsxd rdx,ecx
  406aff:	mov    rax,rdx
  406b02:	shl    rax,0x2
  406b06:	add    rax,rdx
  406b09:	shl    rax,0x4
  406b0d:	add    rax,rsi
  406b10:	add    rax,0x560
  406b16:	mov    eax,DWORD PTR [rax]
  406b18:	lea    esi,[rax+0x1]
  406b1b:	mov    rdi,0x413380
  406b22:	movsxd rdx,ecx
  406b25:	mov    rax,rdx
  406b28:	shl    rax,0x2
  406b2c:	add    rax,rdx
  406b2f:	shl    rax,0x4
  406b33:	add    rax,rdi
  406b36:	add    rax,0x560
  406b3c:	mov    DWORD PTR [rax],esi
  406b3e:	inc    DWORD PTR [rbp-0x8c]
  406b44:	mov    eax,DWORD PTR [rbp-0x8c]
  406b4a:	cmp    eax,DWORD PTR [rbp-0x94]
  406b50:	jl     406a9a <print_all_distinct_dims@@Base+0x75a>
  406b56:	mov    rax,0x413380
  406b5d:	lea    rdi,[rax+0x118]
  406b64:	call   403940 <coda_cursor_goto_parent@plt>
  406b69:	jmp    406f27 <print_all_distinct_dims@@Base+0xbe7>
  406b6e:	mov    rax,0x413380
  406b75:	mov    edx,DWORD PTR [rbp-0xac]
  406b7b:	movsxd rdx,edx
  406b7e:	add    rdx,0x3e8
  406b85:	mov    eax,DWORD PTR [rax+rdx*4+0x18]
  406b89:	cdqe   
  406b8b:	lea    rdx,[rbp-0x70]
  406b8f:	mov    rsi,rax
  406b92:	mov    rax,0x413380
  406b99:	lea    rdi,[rax+0x118]
  406ba0:	call   4036d0 <coda_cursor_get_record_field_available_status@plt>
  406ba5:	test   eax,eax
  406ba7:	je     406bb3 <print_all_distinct_dims@@Base+0x873>
  406ba9:	mov    eax,0x0
  406bae:	call   40c3f3 <handle_coda_error@@Base>
  406bb3:	mov    eax,DWORD PTR [rbp-0x70]
  406bb6:	test   eax,eax
  406bb8:	je     406c34 <print_all_distinct_dims@@Base+0x8f4>
  406bba:	mov    rax,0x413380
  406bc1:	mov    edx,DWORD PTR [rbp-0xac]
  406bc7:	movsxd rdx,edx
  406bca:	add    rdx,0x3e8
  406bd1:	mov    eax,DWORD PTR [rax+rdx*4+0x18]
  406bd5:	cdqe   
  406bd7:	mov    rsi,rax
  406bda:	mov    rax,0x413380
  406be1:	lea    rdi,[rax+0x118]
  406be8:	call   4038e0 <coda_cursor_goto_record_field_by_index@plt>
  406bed:	test   eax,eax
  406bef:	je     406bfb <print_all_distinct_dims@@Base+0x8bb>
  406bf1:	mov    eax,0x0
  406bf6:	call   40c3f3 <handle_coda_error@@Base>
  406bfb:	mov    eax,DWORD PTR [rbp-0xac]
  406c01:	lea    edx,[rax+0x1]
  406c04:	mov    eax,DWORD PTR [rbp-0xa4]
  406c0a:	lea    ecx,[rax+0x1]
  406c0d:	mov    eax,DWORD PTR [rbp-0xa8]
  406c13:	mov    esi,eax
  406c15:	mov    edi,ecx
  406c17:	call   40665f <print_all_distinct_dims@@Base+0x31f>
  406c1c:	mov    rax,0x413380
  406c23:	lea    rdi,[rax+0x118]
  406c2a:	call   403940 <coda_cursor_goto_parent@plt>
  406c2f:	jmp    406f2b <print_all_distinct_dims@@Base+0xbeb>
  406c34:	mov    rax,0x413380
  406c3b:	mov    eax,DWORD PTR [rax+0xf34]
  406c41:	movsxd rdx,eax
  406c44:	mov    rax,rdx
  406c47:	shl    rax,0x2
  406c4b:	add    rax,rdx
  406c4e:	shl    rax,0x4
  406c52:	lea    rdx,[rax+0x520]
  406c59:	mov    rax,0x413380
  406c60:	add    rax,rdx
  406c63:	add    rax,0x14
  406c67:	mov    QWORD PTR [rbp-0x60],rax
  406c6b:	mov    rax,QWORD PTR [rbp-0x60]
  406c6f:	mov    eax,DWORD PTR [rax]
  406c71:	mov    DWORD PTR [rbp-0x80],eax
  406c74:	mov    DWORD PTR [rbp-0x88],0x0
  406c7e:	jmp    406d33 <print_all_distinct_dims@@Base+0x9f3>
  406c83:	mov    rax,QWORD PTR [rbp-0x60]
  406c87:	mov    edx,DWORD PTR [rbp-0x88]
  406c8d:	movsxd rdx,edx
  406c90:	mov    eax,DWORD PTR [rax+rdx*4+0x8]
  406c94:	cmp    eax,0xffffffff
  406c97:	jne    406d2d <print_all_distinct_dims@@Base+0x9ed>
  406c9d:	mov    edx,DWORD PTR [rbp-0x80]
  406ca0:	mov    eax,DWORD PTR [rbp-0x88]
  406ca6:	add    edx,eax
  406ca8:	mov    rax,0x414500
  406caf:	movsxd rdx,edx
  406cb2:	add    rdx,0xc
  406cb6:	mov    rdx,QWORD PTR [rax+rdx*8+0x10]
  406cbb:	mov    rax,QWORD PTR [rbp-0x60]
  406cbf:	mov    eax,DWORD PTR [rax+0x2c]
  406cc2:	cdqe   
  406cc4:	shl    rax,0x2
  406cc8:	add    rax,rdx
  406ccb:	mov    DWORD PTR [rax],0x0
  406cd1:	mov    edx,DWORD PTR [rbp-0x80]
  406cd4:	mov    eax,DWORD PTR [rbp-0x88]
  406cda:	add    edx,eax
  406cdc:	mov    rax,0x414500
  406ce3:	movsxd rdx,edx
  406ce6:	mov    eax,DWORD PTR [rax+rdx*4+0x4]
  406cea:	cmp    eax,0xffffffff
  406ced:	jne    406d0c <print_all_distinct_dims@@Base+0x9cc>
  406cef:	mov    edx,DWORD PTR [rbp-0x80]
  406cf2:	mov    eax,DWORD PTR [rbp-0x88]
  406cf8:	add    edx,eax
  406cfa:	mov    rax,0x414500
  406d01:	movsxd rdx,edx
  406d04:	mov    DWORD PTR [rax+rdx*4+0x4],0x0
  406d0c:	mov    edx,DWORD PTR [rbp-0x80]
  406d0f:	mov    eax,DWORD PTR [rbp-0x88]
  406d15:	add    edx,eax
  406d17:	mov    rax,0x414500
  406d1e:	movsxd rdx,edx
  406d21:	add    rdx,0x8
  406d25:	mov    DWORD PTR [rax+rdx*4+0x4],0x0
  406d2d:	inc    DWORD PTR [rbp-0x88]
  406d33:	mov    rax,QWORD PTR [rbp-0x60]
  406d37:	mov    eax,DWORD PTR [rax+0x4]
  406d3a:	cmp    DWORD PTR [rbp-0x88],eax
  406d40:	jl     406c83 <print_all_distinct_dims@@Base+0x943>
  406d46:	jmp    406f2b <print_all_distinct_dims@@Base+0xbeb>
  406d4b:	mov    rax,0x413380
  406d52:	mov    eax,DWORD PTR [rax+0xf34]
  406d58:	cmp    DWORD PTR [rbp-0xa8],eax
  406d5e:	je     406d7f <print_all_distinct_dims@@Base+0xa3f>
  406d60:	lea    rcx,[rip+0x8809]        # 40f570 <_IO_stdin_used@@Base+0x570>
  406d67:	mov    edx,0xfc
  406d6c:	lea    rsi,[rip+0x862d]        # 40f3a0 <_IO_stdin_used@@Base+0x3a0>
  406d73:	lea    rdi,[rip+0x8726]        # 40f4a0 <_IO_stdin_used@@Base+0x4a0>
  406d7a:	call   403860 <__assert_fail@plt>
  406d7f:	mov    eax,DWORD PTR [rbp-0x9c]
  406d85:	cmp    eax,0x4
  406d88:	jne    406dbc <print_all_distinct_dims@@Base+0xa7c>
  406d8a:	lea    rax,[rbp-0x70]
  406d8e:	mov    rsi,rax
  406d91:	mov    rax,0x413380
  406d98:	lea    rdi,[rax+0x118]
  406d9f:	call   403980 <coda_cursor_get_string_length@plt>
  406da4:	test   eax,eax
  406da6:	je     406db2 <print_all_distinct_dims@@Base+0xa72>
  406da8:	mov    eax,0x0
  406dad:	call   40c3f3 <handle_coda_error@@Base>
  406db2:	mov    rax,QWORD PTR [rbp-0x70]
  406db6:	mov    QWORD PTR [rbp-0x78],rax
  406dba:	jmp    406de4 <print_all_distinct_dims@@Base+0xaa4>
  406dbc:	lea    rax,[rbp-0x78]
  406dc0:	mov    rsi,rax
  406dc3:	mov    rax,0x413380
  406dca:	lea    rdi,[rax+0x118]
  406dd1:	call   403640 <coda_cursor_get_byte_size@plt>
  406dd6:	test   eax,eax
  406dd8:	je     406de4 <print_all_distinct_dims@@Base+0xaa4>
  406dda:	mov    eax,0x0
  406ddf:	call   40c3f3 <handle_coda_error@@Base>
  406de4:	mov    eax,DWORD PTR [rbp-0xa8]
  406dea:	movsxd rdx,eax
  406ded:	mov    rax,rdx
  406df0:	shl    rax,0x2
  406df4:	add    rax,rdx
  406df7:	shl    rax,0x4
  406dfb:	lea    rdx,[rax+0x520]
  406e02:	mov    rax,0x413380
  406e09:	add    rax,rdx
  406e0c:	add    rax,0x14
  406e10:	mov    QWORD PTR [rbp-0x58],rax
  406e14:	mov    rax,QWORD PTR [rbp-0x58]
  406e18:	mov    eax,DWORD PTR [rax]
  406e1a:	mov    DWORD PTR [rbp-0x7c],eax
  406e1d:	mov    rdx,QWORD PTR [rbp-0x78]
  406e21:	mov    rax,0x414500
  406e28:	mov    ecx,DWORD PTR [rbp-0x7c]
  406e2b:	movsxd rcx,ecx
  406e2e:	add    rcx,0xc
  406e32:	mov    rcx,QWORD PTR [rax+rcx*8+0x10]
  406e37:	mov    rax,QWORD PTR [rbp-0x58]
  406e3b:	mov    eax,DWORD PTR [rax+0x2c]
  406e3e:	cdqe   
  406e40:	shl    rax,0x2
  406e44:	add    rax,rcx
  406e47:	mov    DWORD PTR [rax],edx
  406e49:	mov    rax,0x414500
  406e50:	mov    edx,DWORD PTR [rbp-0x7c]
  406e53:	movsxd rdx,edx
  406e56:	mov    eax,DWORD PTR [rax+rdx*4+0x4]
  406e5a:	cmp    eax,0xffffffff
  406e5d:	jne    406e96 <print_all_distinct_dims@@Base+0xb56>
  406e5f:	mov    rax,QWORD PTR [rbp-0x78]
  406e63:	mov    ecx,eax
  406e65:	mov    rax,0x414500
  406e6c:	mov    edx,DWORD PTR [rbp-0x7c]
  406e6f:	movsxd rdx,edx
  406e72:	mov    DWORD PTR [rax+rdx*4+0x4],ecx
  406e76:	mov    rax,QWORD PTR [rbp-0x78]
  406e7a:	mov    ecx,eax
  406e7c:	mov    rax,0x414500
  406e83:	mov    edx,DWORD PTR [rbp-0x7c]
  406e86:	movsxd rdx,edx
  406e89:	add    rdx,0x8
  406e8d:	mov    DWORD PTR [rax+rdx*4+0x4],ecx
  406e91:	jmp    406f2a <print_all_distinct_dims@@Base+0xbea>
  406e96:	mov    rax,0x414500
  406e9d:	mov    edx,DWORD PTR [rbp-0x7c]
  406ea0:	movsxd rdx,edx
  406ea3:	mov    eax,DWORD PTR [rax+rdx*4+0x4]
  406ea7:	movsxd rdx,eax
  406eaa:	mov    rax,QWORD PTR [rbp-0x78]
  406eae:	cmp    rdx,rax
  406eb1:	jge    406eca <print_all_distinct_dims@@Base+0xb8a>
  406eb3:	mov    rax,QWORD PTR [rbp-0x78]
  406eb7:	mov    ecx,eax
  406eb9:	mov    rax,0x414500
  406ec0:	mov    edx,DWORD PTR [rbp-0x7c]
  406ec3:	movsxd rdx,edx
  406ec6:	mov    DWORD PTR [rax+rdx*4+0x4],ecx
  406eca:	mov    rax,0x414500
  406ed1:	mov    edx,DWORD PTR [rbp-0x7c]
  406ed4:	movsxd rdx,edx
  406ed7:	add    rdx,0x8
  406edb:	mov    eax,DWORD PTR [rax+rdx*4+0x4]
  406edf:	movsxd rdx,eax
  406ee2:	mov    rax,QWORD PTR [rbp-0x78]
  406ee6:	cmp    rdx,rax
  406ee9:	jle    406f2a <print_all_distinct_dims@@Base+0xbea>
  406eeb:	mov    rax,QWORD PTR [rbp-0x78]
  406eef:	mov    ecx,eax
  406ef1:	mov    rax,0x414500
  406ef8:	mov    edx,DWORD PTR [rbp-0x7c]
  406efb:	movsxd rdx,edx
  406efe:	add    rdx,0x8
  406f02:	mov    DWORD PTR [rax+rdx*4+0x4],ecx
  406f06:	jmp    406f2a <print_all_distinct_dims@@Base+0xbea>
  406f08:	lea    rcx,[rip+0x8661]        # 40f570 <_IO_stdin_used@@Base+0x570>
  406f0f:	mov    edx,0x126
  406f14:	lea    rsi,[rip+0x8485]        # 40f3a0 <_IO_stdin_used@@Base+0x3a0>
  406f1b:	lea    rdi,[rip+0x85a6]        # 40f4c8 <_IO_stdin_used@@Base+0x4c8>
  406f22:	call   403860 <__assert_fail@plt>
  406f27:	nop
  406f28:	jmp    406f2b <print_all_distinct_dims@@Base+0xbeb>
  406f2a:	nop
  406f2b:	nop
  406f2c:	mov    rax,QWORD PTR [rbp-0x8]
  406f30:	xor    rax,QWORD PTR fs:0x28
  406f39:	je     406f40 <print_all_distinct_dims@@Base+0xc00>
  406f3b:	call   403840 <__stack_chk_fail@plt>
  406f40:	leave  
  406f41:	ret    

0000000000406f42 <dim_enter_array@@Base>:
  406f42:	endbr64 
  406f46:	push   rbp
  406f47:	mov    rbp,rsp
  406f4a:	push   rbx
  406f4b:	sub    rsp,0x98
  406f52:	mov    rax,QWORD PTR fs:0x28
  406f5b:	mov    QWORD PTR [rbp-0x18],rax
  406f5f:	xor    eax,eax
  406f61:	mov    rax,0x413380
  406f68:	mov    eax,DWORD PTR [rax+0xf34]
  406f6e:	movsxd rdx,eax
  406f71:	mov    rax,rdx
  406f74:	shl    rax,0x2
  406f78:	add    rax,rdx
  406f7b:	shl    rax,0x4
  406f7f:	lea    rdx,[rax+0x520]
  406f86:	mov    rax,0x413380
  406f8d:	add    rax,rdx
  406f90:	add    rax,0x14
  406f94:	mov    QWORD PTR [rbp-0x68],rax
  406f98:	mov    rax,0x413380
  406f9f:	mov    edx,DWORD PTR [rax+0x110]
  406fa5:	mov    rax,0x413380
  406fac:	movsxd rdx,edx
  406faf:	mov    rax,QWORD PTR [rax+rdx*8+0x10]
  406fb4:	lea    rdx,[rbp-0xa0]
  406fbb:	mov    rsi,rdx
  406fbe:	mov    rdi,rax
  406fc1:	call   403c40 <coda_type_get_class@plt>
  406fc6:	test   eax,eax
  406fc8:	je     406fd4 <dim_enter_array@@Base+0x92>
  406fca:	mov    eax,0x0
  406fcf:	call   40c3f3 <handle_coda_error@@Base>
  406fd4:	mov    eax,DWORD PTR [rbp-0xa0]
  406fda:	cmp    eax,0x4
  406fdd:	je     40710e <dim_enter_array@@Base+0x1cc>
  406fe3:	cmp    eax,0x4
  406fe6:	ja     406ff2 <dim_enter_array@@Base+0xb0>
  406fe8:	cmp    eax,0x1
  406feb:	je     407009 <dim_enter_array@@Base+0xc7>
  406fed:	jmp    4071ed <dim_enter_array@@Base+0x2ab>
  406ff2:	cmp    eax,0x5
  406ff5:	je     407164 <dim_enter_array@@Base+0x222>
  406ffb:	cmp    eax,0x6
  406ffe:	je     407092 <dim_enter_array@@Base+0x150>
  407004:	jmp    4071ed <dim_enter_array@@Base+0x2ab>
  407009:	mov    rax,0x413380
  407010:	mov    edx,DWORD PTR [rax+0x110]
  407016:	mov    rax,0x413380
  40701d:	movsxd rdx,edx
  407020:	mov    rax,QWORD PTR [rax+rdx*8+0x10]
  407025:	lea    rdx,[rbp-0x60]
  407029:	lea    rcx,[rbp-0x80]
  40702d:	mov    rsi,rcx
  407030:	mov    rdi,rax
  407033:	call   403b30 <coda_type_get_array_dim@plt>
  407038:	test   eax,eax
  40703a:	je     407046 <dim_enter_array@@Base+0x104>
  40703c:	mov    eax,0x0
  407041:	call   40c3f3 <handle_coda_error@@Base>
  407046:	mov    edx,DWORD PTR [rbp-0x80]
  407049:	mov    rax,QWORD PTR [rbp-0x68]
  40704d:	mov    DWORD PTR [rax+0x4],edx
  407050:	mov    DWORD PTR [rbp-0x94],0x0
  40705a:	jmp    407082 <dim_enter_array@@Base+0x140>
  40705c:	mov    eax,DWORD PTR [rbp-0x94]
  407062:	cdqe   
  407064:	mov    rax,QWORD PTR [rbp+rax*8-0x60]
  407069:	mov    ecx,eax
  40706b:	mov    rax,QWORD PTR [rbp-0x68]
  40706f:	mov    edx,DWORD PTR [rbp-0x94]
  407075:	movsxd rdx,edx
  407078:	mov    DWORD PTR [rax+rdx*4+0x8],ecx
  40707c:	inc    DWORD PTR [rbp-0x94]
  407082:	mov    eax,DWORD PTR [rbp-0x80]
  407085:	cmp    DWORD PTR [rbp-0x94],eax
  40708b:	jl     40705c <dim_enter_array@@Base+0x11a>
  40708d:	jmp    40720c <dim_enter_array@@Base+0x2ca>
  407092:	mov    rax,0x413380
  407099:	mov    edx,DWORD PTR [rax+0x110]
  40709f:	mov    rax,0x413380
  4070a6:	movsxd rdx,edx
  4070a9:	mov    rax,QWORD PTR [rax+rdx*8+0x10]
  4070ae:	lea    rdx,[rbp-0x80]
  4070b2:	mov    rsi,rdx
  4070b5:	mov    rdi,rax
  4070b8:	call   403a40 <coda_type_get_special_type@plt>
  4070bd:	test   eax,eax
  4070bf:	je     4070cb <dim_enter_array@@Base+0x189>
  4070c1:	mov    eax,0x0
  4070c6:	call   40c3f3 <handle_coda_error@@Base>
  4070cb:	mov    eax,DWORD PTR [rbp-0x80]
  4070ce:	cmp    eax,0x3
  4070d1:	jne    4070ef <dim_enter_array@@Base+0x1ad>
  4070d3:	mov    rax,QWORD PTR [rbp-0x68]
  4070d7:	mov    DWORD PTR [rax+0x4],0x1
  4070de:	mov    rax,QWORD PTR [rbp-0x68]
  4070e2:	mov    DWORD PTR [rax+0x8],0x2
  4070e9:	nop
  4070ea:	jmp    40720c <dim_enter_array@@Base+0x2ca>
  4070ef:	lea    rcx,[rip+0x849a]        # 40f590 <_IO_stdin_used@@Base+0x590>
  4070f6:	mov    edx,0x15d
  4070fb:	lea    rsi,[rip+0x829e]        # 40f3a0 <_IO_stdin_used@@Base+0x3a0>
  407102:	lea    rdi,[rip+0x83bf]        # 40f4c8 <_IO_stdin_used@@Base+0x4c8>
  407109:	call   403860 <__assert_fail@plt>
  40710e:	mov    rax,0x413380
  407115:	mov    edx,DWORD PTR [rax+0x110]
  40711b:	mov    rax,0x413380
  407122:	movsxd rdx,edx
  407125:	mov    rax,QWORD PTR [rax+rdx*8+0x10]
  40712a:	lea    rdx,[rbp-0x80]
  40712e:	mov    rsi,rdx
  407131:	mov    rdi,rax
  407134:	call   403a80 <coda_type_get_string_length@plt>
  407139:	test   eax,eax
  40713b:	je     407147 <dim_enter_array@@Base+0x205>
  40713d:	mov    eax,0x0
  407142:	call   40c3f3 <handle_coda_error@@Base>
  407147:	mov    rax,QWORD PTR [rbp-0x68]
  40714b:	mov    DWORD PTR [rax+0x4],0x1
  407152:	mov    rax,QWORD PTR [rbp-0x80]
  407156:	mov    edx,eax
  407158:	mov    rax,QWORD PTR [rbp-0x68]
  40715c:	mov    DWORD PTR [rax+0x8],edx
  40715f:	jmp    40720c <dim_enter_array@@Base+0x2ca>
  407164:	mov    rax,0x413380
  40716b:	mov    edx,DWORD PTR [rax+0x110]
  407171:	mov    rax,0x413380
  407178:	movsxd rdx,edx
  40717b:	mov    rax,QWORD PTR [rax+rdx*8+0x10]
  407180:	lea    rdx,[rbp-0x80]
  407184:	mov    rsi,rdx
  407187:	mov    rdi,rax
  40718a:	call   4037b0 <coda_type_get_bit_size@plt>
  40718f:	test   eax,eax
  407191:	je     40719d <dim_enter_array@@Base+0x25b>
  407193:	mov    eax,0x0
  407198:	call   40c3f3 <handle_coda_error@@Base>
  40719d:	mov    rax,QWORD PTR [rbp-0x68]
  4071a1:	mov    DWORD PTR [rax+0x4],0x1
  4071a8:	mov    rax,QWORD PTR [rbp-0x80]
  4071ac:	test   rax,rax
  4071af:	js     4071e0 <dim_enter_array@@Base+0x29e>
  4071b1:	mov    rax,QWORD PTR [rbp-0x80]
  4071b5:	sar    rax,0x3
  4071b9:	mov    edx,eax
  4071bb:	mov    rax,QWORD PTR [rbp-0x80]
  4071bf:	and    eax,0x7
  4071c2:	test   rax,rax
  4071c5:	je     4071ce <dim_enter_array@@Base+0x28c>
  4071c7:	mov    eax,0x1
  4071cc:	jmp    4071d3 <dim_enter_array@@Base+0x291>
  4071ce:	mov    eax,0x0
  4071d3:	add    eax,edx
  4071d5:	mov    edx,eax
  4071d7:	mov    rax,QWORD PTR [rbp-0x68]
  4071db:	mov    DWORD PTR [rax+0x8],edx
  4071de:	jmp    40720c <dim_enter_array@@Base+0x2ca>
  4071e0:	mov    rax,QWORD PTR [rbp-0x68]
  4071e4:	mov    DWORD PTR [rax+0x8],0xffffffff
  4071eb:	jmp    40720c <dim_enter_array@@Base+0x2ca>
  4071ed:	lea    rcx,[rip+0x839c]        # 40f590 <_IO_stdin_used@@Base+0x590>
  4071f4:	mov    edx,0x182
  4071f9:	lea    rsi,[rip+0x81a0]        # 40f3a0 <_IO_stdin_used@@Base+0x3a0>
  407200:	lea    rdi,[rip+0x82c1]        # 40f4c8 <_IO_stdin_used@@Base+0x4c8>
  407207:	call   403860 <__assert_fail@plt>
  40720c:	mov    rax,0x413378
  407213:	mov    eax,DWORD PTR [rax]
  407215:	test   eax,eax
  407217:	jne    40723e <dim_enter_array@@Base+0x2fc>
  407219:	mov    rax,QWORD PTR [rbp-0x68]
  40721d:	mov    DWORD PTR [rax],0xffffffff
  407223:	mov    rax,QWORD PTR [rbp-0x68]
  407227:	mov    DWORD PTR [rax+0x28],0x0
  40722e:	mov    rax,QWORD PTR [rbp-0x68]
  407232:	mov    DWORD PTR [rax+0x2c],0x0
  407239:	jmp    407c72 <dim_enter_array@@Base+0xd30>
  40723e:	mov    rax,0x414500
  407245:	mov    eax,DWORD PTR [rax]
  407247:	mov    DWORD PTR [rbp-0x84],eax
  40724d:	mov    rax,QWORD PTR [rbp-0x68]
  407251:	mov    edx,DWORD PTR [rbp-0x84]
  407257:	mov    DWORD PTR [rax],edx
  407259:	mov    rax,0x414500
  407260:	mov    edx,DWORD PTR [rax]
  407262:	mov    rax,QWORD PTR [rbp-0x68]
  407266:	mov    eax,DWORD PTR [rax+0x4]
  407269:	add    eax,edx
  40726b:	cmp    eax,0x8
  40726e:	jle    40728f <dim_enter_array@@Base+0x34d>
  407270:	lea    rcx,[rip+0x8319]        # 40f590 <_IO_stdin_used@@Base+0x590>
  407277:	mov    edx,0x192
  40727c:	lea    rsi,[rip+0x811d]        # 40f3a0 <_IO_stdin_used@@Base+0x3a0>
  407283:	lea    rdi,[rip+0x8246]        # 40f4d0 <_IO_stdin_used@@Base+0x4d0>
  40728a:	call   403860 <__assert_fail@plt>
  40728f:	mov    rax,0x414500
  407296:	mov    edx,DWORD PTR [rax]
  407298:	mov    rax,QWORD PTR [rbp-0x68]
  40729c:	mov    eax,DWORD PTR [rax+0x4]
  40729f:	add    edx,eax
  4072a1:	mov    rax,0x414500
  4072a8:	mov    DWORD PTR [rax],edx
  4072aa:	cmp    DWORD PTR [rbp-0x84],0x0
  4072b1:	jle    4072f5 <dim_enter_array@@Base+0x3b3>
  4072b3:	mov    eax,DWORD PTR [rbp-0x84]
  4072b9:	lea    edx,[rax-0x1]
  4072bc:	mov    rax,0x414500
  4072c3:	movsxd rdx,edx
  4072c6:	add    rdx,0x20
  4072ca:	mov    rax,QWORD PTR [rax+rdx*8+0x10]
  4072cf:	mov    QWORD PTR [rbp-0x78],rax
  4072d3:	mov    eax,DWORD PTR [rbp-0x84]
  4072d9:	lea    edx,[rax-0x1]
  4072dc:	mov    rax,0x414500
  4072e3:	movsxd rdx,edx
  4072e6:	add    rdx,0x28
  4072ea:	mov    rax,QWORD PTR [rax+rdx*8+0x10]
  4072ef:	mov    QWORD PTR [rbp-0x70],rax
  4072f3:	jmp    407305 <dim_enter_array@@Base+0x3c3>
  4072f5:	mov    QWORD PTR [rbp-0x78],0x1
  4072fd:	mov    QWORD PTR [rbp-0x70],0x1
  407305:	mov    DWORD PTR [rbp-0x9c],0x0
  40730f:	mov    DWORD PTR [rbp-0x98],0x0
  407319:	cmp    QWORD PTR [rbp-0x70],0x0
  40731e:	jle    4073bd <dim_enter_array@@Base+0x47b>
  407324:	mov    DWORD PTR [rbp-0x94],0x0
  40732e:	jmp    4073a8 <dim_enter_array@@Base+0x466>
  407330:	mov    edx,DWORD PTR [rbp-0x84]
  407336:	mov    eax,DWORD PTR [rbp-0x94]
  40733c:	lea    esi,[rdx+rax*1]
  40733f:	mov    rax,QWORD PTR [rbp-0x68]
  407343:	mov    edx,DWORD PTR [rbp-0x94]
  407349:	movsxd rdx,edx
  40734c:	mov    ecx,DWORD PTR [rax+rdx*4+0x8]
  407350:	mov    rax,0x414500
  407357:	movsxd rdx,esi
  40735a:	mov    DWORD PTR [rax+rdx*4+0x4],ecx
  40735e:	mov    edx,DWORD PTR [rbp-0x84]
  407364:	mov    eax,DWORD PTR [rbp-0x94]
  40736a:	add    edx,eax
  40736c:	mov    rax,0x414500
  407373:	movsxd rdx,edx
  407376:	add    rdx,0x10
  40737a:	mov    DWORD PTR [rax+rdx*4+0x8],0x0
  407382:	mov    rax,QWORD PTR [rbp-0x68]
  407386:	mov    edx,DWORD PTR [rbp-0x94]
  40738c:	movsxd rdx,edx
  40738f:	mov    eax,DWORD PTR [rax+rdx*4+0x8]
  407393:	cmp    eax,0xffffffff
  407396:	jne    4073a2 <dim_enter_array@@Base+0x460>
  407398:	mov    DWORD PTR [rbp-0x9c],0x1
  4073a2:	inc    DWORD PTR [rbp-0x94]
  4073a8:	mov    rax,QWORD PTR [rbp-0x68]
  4073ac:	mov    eax,DWORD PTR [rax+0x4]
  4073af:	cmp    DWORD PTR [rbp-0x94],eax
  4073b5:	jl     407330 <dim_enter_array@@Base+0x3ee>
  4073bb:	jmp    407422 <dim_enter_array@@Base+0x4e0>
  4073bd:	mov    DWORD PTR [rbp-0x94],0x0
  4073c7:	jmp    407413 <dim_enter_array@@Base+0x4d1>
  4073c9:	mov    edx,DWORD PTR [rbp-0x84]
  4073cf:	mov    eax,DWORD PTR [rbp-0x94]
  4073d5:	add    edx,eax
  4073d7:	mov    rax,0x414500
  4073de:	movsxd rdx,edx
  4073e1:	mov    DWORD PTR [rax+rdx*4+0x4],0x0
  4073e9:	mov    edx,DWORD PTR [rbp-0x84]
  4073ef:	mov    eax,DWORD PTR [rbp-0x94]
  4073f5:	add    edx,eax
  4073f7:	mov    rax,0x414500
  4073fe:	movsxd rdx,edx
  407401:	add    rdx,0x10
  407405:	mov    DWORD PTR [rax+rdx*4+0x8],0x0
  40740d:	inc    DWORD PTR [rbp-0x94]
  407413:	mov    rax,QWORD PTR [rbp-0x68]
  407417:	mov    eax,DWORD PTR [rax+0x4]
  40741a:	cmp    DWORD PTR [rbp-0x94],eax
  407420:	jl     4073c9 <dim_enter_array@@Base+0x487>
  407422:	cmp    DWORD PTR [rbp-0x9c],0x0
  407429:	je     407736 <dim_enter_array@@Base+0x7f4>
  40742f:	mov    DWORD PTR [rbp-0x94],0x0
  407439:	jmp    4075b9 <dim_enter_array@@Base+0x677>
  40743e:	mov    rax,QWORD PTR [rbp-0x68]
  407442:	mov    edx,DWORD PTR [rbp-0x94]
  407448:	movsxd rdx,edx
  40744b:	mov    eax,DWORD PTR [rax+rdx*4+0x8]
  40744f:	cmp    eax,0xffffffff
  407452:	jne    40756a <dim_enter_array@@Base+0x628>
  407458:	mov    edx,DWORD PTR [rbp-0x84]
  40745e:	mov    eax,DWORD PTR [rbp-0x94]
  407464:	add    edx,eax
  407466:	mov    rax,0x414500
  40746d:	movsxd rdx,edx
  407470:	lea    rcx,[rdx+0x28]
  407474:	mov    edx,DWORD PTR [rbp-0x84]
  40747a:	mov    DWORD PTR [rax+rcx*4+0x10],edx
  40747e:	mov    rax,QWORD PTR [rbp-0x78]
  407482:	shl    rax,0x2
  407486:	mov    ecx,DWORD PTR [rbp-0x84]
  40748c:	mov    edx,DWORD PTR [rbp-0x94]
  407492:	lea    ebx,[rcx+rdx*1]
  407495:	mov    rdi,rax
  407498:	call   403a00 <malloc@plt>
  40749d:	mov    rcx,rax
  4074a0:	mov    rax,0x414500
  4074a7:	movsxd rdx,ebx
  4074aa:	add    rdx,0xc
  4074ae:	mov    QWORD PTR [rax+rdx*8+0x10],rcx
  4074b3:	mov    edx,DWORD PTR [rbp-0x84]
  4074b9:	mov    eax,DWORD PTR [rbp-0x94]
  4074bf:	add    edx,eax
  4074c1:	mov    rax,0x414500
  4074c8:	movsxd rdx,edx
  4074cb:	add    rdx,0xc
  4074cf:	mov    rax,QWORD PTR [rax+rdx*8+0x10]
  4074d4:	test   rax,rax
  4074d7:	jne    407511 <dim_enter_array@@Base+0x5cf>
  4074d9:	mov    rax,QWORD PTR [rbp-0x78]
  4074dd:	shl    rax,0x2
  4074e1:	mov    r8d,0x1c8
  4074e7:	lea    rcx,[rip+0x7eb2]        # 40f3a0 <_IO_stdin_used@@Base+0x3a0>
  4074ee:	mov    rdx,rax
  4074f1:	lea    rsi,[rip+0x7f28]        # 40f420 <_IO_stdin_used@@Base+0x420>
  4074f8:	mov    edi,0xffffffff
  4074fd:	mov    eax,0x0
  407502:	call   4036e0 <coda_set_error@plt>
  407507:	mov    eax,0x0
  40750c:	call   40c3f3 <handle_coda_error@@Base>
  407511:	mov    DWORD PTR [rbp-0x90],0x0
  40751b:	jmp    40755a <dim_enter_array@@Base+0x618>
  40751d:	mov    edx,DWORD PTR [rbp-0x84]
  407523:	mov    eax,DWORD PTR [rbp-0x94]
  407529:	add    edx,eax
  40752b:	mov    rax,0x414500
  407532:	movsxd rdx,edx
  407535:	add    rdx,0xc
  407539:	mov    rax,QWORD PTR [rax+rdx*8+0x10]
  40753e:	mov    edx,DWORD PTR [rbp-0x90]
  407544:	movsxd rdx,edx
  407547:	shl    rdx,0x2
  40754b:	add    rax,rdx
  40754e:	mov    DWORD PTR [rax],0xffffffff
  407554:	inc    DWORD PTR [rbp-0x90]
  40755a:	mov    eax,DWORD PTR [rbp-0x90]
  407560:	cdqe   
  407562:	cmp    QWORD PTR [rbp-0x78],rax
  407566:	jg     40751d <dim_enter_array@@Base+0x5db>
  407568:	jmp    4075b3 <dim_enter_array@@Base+0x671>
  40756a:	mov    edx,DWORD PTR [rbp-0x84]
  407570:	mov    eax,DWORD PTR [rbp-0x94]
  407576:	add    edx,eax
  407578:	mov    rax,0x414500
  40757f:	movsxd rdx,edx
  407582:	add    rdx,0x28
  407586:	mov    DWORD PTR [rax+rdx*4+0x10],0x0
  40758e:	mov    edx,DWORD PTR [rbp-0x84]
  407594:	mov    eax,DWORD PTR [rbp-0x94]
  40759a:	add    edx,eax
  40759c:	mov    rax,0x414500
  4075a3:	movsxd rdx,edx
  4075a6:	add    rdx,0xc
  4075aa:	mov    QWORD PTR [rax+rdx*8+0x10],0x0
  4075b3:	inc    DWORD PTR [rbp-0x94]
  4075b9:	mov    rax,QWORD PTR [rbp-0x68]
  4075bd:	mov    eax,DWORD PTR [rax+0x4]
  4075c0:	cmp    DWORD PTR [rbp-0x94],eax
  4075c6:	jl     40743e <dim_enter_array@@Base+0x4fc>
  4075cc:	mov    rax,QWORD PTR [rbp-0x68]
  4075d0:	mov    DWORD PTR [rax+0x2c],0x0
  4075d7:	mov    edx,0x0
  4075dc:	mov    esi,0x0
  4075e1:	mov    edi,0x0
  4075e6:	call   40665f <print_all_distinct_dims@@Base+0x31f>
  4075eb:	mov    DWORD PTR [rbp-0x94],0x0
  4075f5:	jmp    407723 <dim_enter_array@@Base+0x7e1>
  4075fa:	mov    rax,QWORD PTR [rbp-0x68]
  4075fe:	mov    edx,DWORD PTR [rbp-0x94]
  407604:	movsxd rdx,edx
  407607:	mov    eax,DWORD PTR [rax+rdx*4+0x8]
  40760b:	cmp    eax,0xffffffff
  40760e:	jne    40771d <dim_enter_array@@Base+0x7db>
  407614:	mov    edx,DWORD PTR [rbp-0x84]
  40761a:	mov    eax,DWORD PTR [rbp-0x94]
  407620:	add    edx,eax
  407622:	mov    rax,0x414500
  407629:	movsxd rdx,edx
  40762c:	mov    edx,DWORD PTR [rax+rdx*4+0x4]
  407630:	mov    ecx,DWORD PTR [rbp-0x84]
  407636:	mov    eax,DWORD PTR [rbp-0x94]
  40763c:	add    ecx,eax
  40763e:	mov    rax,0x414500
  407645:	movsxd rcx,ecx
  407648:	add    rcx,0x8
  40764c:	mov    eax,DWORD PTR [rax+rcx*4+0x4]
  407650:	cmp    edx,eax
  407652:	je     407687 <dim_enter_array@@Base+0x745>
  407654:	mov    edx,DWORD PTR [rbp-0x84]
  40765a:	mov    eax,DWORD PTR [rbp-0x94]
  407660:	add    edx,eax
  407662:	mov    rax,0x414500
  407669:	movsxd rdx,edx
  40766c:	add    rdx,0x10
  407670:	mov    DWORD PTR [rax+rdx*4+0x8],0x1
  407678:	mov    DWORD PTR [rbp-0x98],0x1
  407682:	jmp    40771d <dim_enter_array@@Base+0x7db>
  407687:	mov    edx,DWORD PTR [rbp-0x84]
  40768d:	mov    eax,DWORD PTR [rbp-0x94]
  407693:	add    edx,eax
  407695:	mov    rax,0x414500
  40769c:	movsxd rdx,edx
  40769f:	add    rdx,0x10
  4076a3:	mov    DWORD PTR [rax+rdx*4+0x8],0x0
  4076ab:	mov    edx,DWORD PTR [rbp-0x84]
  4076b1:	mov    eax,DWORD PTR [rbp-0x94]
  4076b7:	add    edx,eax
  4076b9:	mov    rax,0x414500
  4076c0:	movsxd rdx,edx
  4076c3:	add    rdx,0xc
  4076c7:	mov    rax,QWORD PTR [rax+rdx*8+0x10]
  4076cc:	mov    rdi,rax
  4076cf:	call   403680 <free@plt>
  4076d4:	mov    edx,DWORD PTR [rbp-0x84]
  4076da:	mov    eax,DWORD PTR [rbp-0x94]
  4076e0:	add    edx,eax
  4076e2:	mov    rax,0x414500
  4076e9:	movsxd rdx,edx
  4076ec:	add    rdx,0xc
  4076f0:	mov    QWORD PTR [rax+rdx*8+0x10],0x0
  4076f9:	mov    edx,DWORD PTR [rbp-0x84]
  4076ff:	mov    eax,DWORD PTR [rbp-0x94]
  407705:	add    edx,eax
  407707:	mov    rax,0x414500
  40770e:	movsxd rdx,edx
  407711:	add    rdx,0x28
  407715:	mov    DWORD PTR [rax+rdx*4+0x10],0x0
  40771d:	inc    DWORD PTR [rbp-0x94]
  407723:	mov    rax,QWORD PTR [rbp-0x68]
  407727:	mov    eax,DWORD PTR [rax+0x4]
  40772a:	cmp    DWORD PTR [rbp-0x94],eax
  407730:	jl     4075fa <dim_enter_array@@Base+0x6b8>
  407736:	mov    rax,0x414500
  40773d:	mov    DWORD PTR [rax+0x44],0x0
  407744:	mov    rax,0x414500
  40774b:	mov    DWORD PTR [rax+0x68],0xffffffff
  407752:	mov    DWORD PTR [rbp-0x94],0x0
  40775c:	jmp    40779e <dim_enter_array@@Base+0x85c>
  40775e:	mov    rax,0x414500
  407765:	mov    edx,DWORD PTR [rbp-0x94]
  40776b:	movsxd rdx,edx
  40776e:	add    rdx,0x10
  407772:	mov    eax,DWORD PTR [rax+rdx*4+0x8]
  407776:	test   eax,eax
  407778:	je     407798 <dim_enter_array@@Base+0x856>
  40777a:	mov    rax,0x414500
  407781:	mov    DWORD PTR [rax+0x44],0x1
  407788:	mov    rax,0x414500
  40778f:	mov    edx,DWORD PTR [rbp-0x94]
  407795:	mov    DWORD PTR [rax+0x68],edx
  407798:	inc    DWORD PTR [rbp-0x94]
  40779e:	mov    rax,0x414500
  4077a5:	mov    eax,DWORD PTR [rax]
  4077a7:	cmp    DWORD PTR [rbp-0x94],eax
  4077ad:	jl     40775e <dim_enter_array@@Base+0x81c>
  4077af:	mov    rax,QWORD PTR [rbp-0x68]
  4077b3:	mov    DWORD PTR [rax+0x28],0x1
  4077ba:	mov    DWORD PTR [rbp-0x94],0x0
  4077c4:	jmp    4078aa <dim_enter_array@@Base+0x968>
  4077c9:	mov    rax,QWORD PTR [rbp-0x68]
  4077cd:	mov    ecx,DWORD PTR [rax+0x28]
  4077d0:	mov    edx,DWORD PTR [rbp-0x84]
  4077d6:	mov    eax,DWORD PTR [rbp-0x94]
  4077dc:	add    edx,eax
  4077de:	mov    rax,0x414500
  4077e5:	movsxd rdx,edx
  4077e8:	mov    eax,DWORD PTR [rax+rdx*4+0x4]
  4077ec:	imul   ecx,eax
  4077ef:	mov    edx,ecx
  4077f1:	mov    rax,QWORD PTR [rbp-0x68]
  4077f5:	mov    DWORD PTR [rax+0x28],edx
  4077f8:	cmp    DWORD PTR [rbp-0x94],0x0
  4077ff:	jne    40783a <dim_enter_array@@Base+0x8f8>
  407801:	mov    rax,0x414500
  407808:	mov    edx,DWORD PTR [rbp-0x84]
  40780e:	movsxd rdx,edx
  407811:	mov    eax,DWORD PTR [rax+rdx*4+0x4]
  407815:	cdqe   
  407817:	imul   rax,QWORD PTR [rbp-0x78]
  40781c:	mov    rdx,rax
  40781f:	mov    rax,0x414500
  407826:	mov    ecx,DWORD PTR [rbp-0x84]
  40782c:	movsxd rcx,ecx
  40782f:	add    rcx,0x20
  407833:	mov    QWORD PTR [rax+rcx*8+0x10],rdx
  407838:	jmp    4078a4 <dim_enter_array@@Base+0x962>
  40783a:	mov    edx,DWORD PTR [rbp-0x84]
  407840:	mov    eax,DWORD PTR [rbp-0x94]
  407846:	add    eax,edx
  407848:	lea    edx,[rax-0x1]
  40784b:	mov    rax,0x414500
  407852:	movsxd rdx,edx
  407855:	add    rdx,0x20
  407859:	mov    rcx,QWORD PTR [rax+rdx*8+0x10]
  40785e:	mov    edx,DWORD PTR [rbp-0x84]
  407864:	mov    eax,DWORD PTR [rbp-0x94]
  40786a:	add    edx,eax
  40786c:	mov    rax,0x414500
  407873:	movsxd rdx,edx
  407876:	mov    eax,DWORD PTR [rax+rdx*4+0x4]
  40787a:	cdqe   
  40787c:	mov    esi,DWORD PTR [rbp-0x84]
  407882:	mov    edx,DWORD PTR [rbp-0x94]
  407888:	add    esi,edx
  40788a:	imul   rcx,rax
  40788e:	mov    rdx,rcx
  407891:	mov    rax,0x414500
  407898:	movsxd rcx,esi
  40789b:	add    rcx,0x20
  40789f:	mov    QWORD PTR [rax+rcx*8+0x10],rdx
  4078a4:	inc    DWORD PTR [rbp-0x94]
  4078aa:	mov    rax,QWORD PTR [rbp-0x68]
  4078ae:	mov    eax,DWORD PTR [rax+0x4]
  4078b1:	cmp    DWORD PTR [rbp-0x94],eax
  4078b7:	jl     4077c9 <dim_enter_array@@Base+0x887>
  4078bd:	cmp    DWORD PTR [rbp-0x98],0x0
  4078c4:	je     407a4f <dim_enter_array@@Base+0xb0d>
  4078ca:	mov    DWORD PTR [rbp-0x94],0x0
  4078d4:	jmp    407901 <dim_enter_array@@Base+0x9bf>
  4078d6:	mov    edx,DWORD PTR [rbp-0x84]
  4078dc:	mov    eax,DWORD PTR [rbp-0x94]
  4078e2:	add    edx,eax
  4078e4:	mov    rax,0x414500
  4078eb:	movsxd rdx,edx
  4078ee:	add    rdx,0x28
  4078f2:	mov    QWORD PTR [rax+rdx*8+0x10],0x0
  4078fb:	inc    DWORD PTR [rbp-0x94]
  407901:	mov    rax,QWORD PTR [rbp-0x68]
  407905:	mov    eax,DWORD PTR [rax+0x4]
  407908:	cmp    DWORD PTR [rbp-0x94],eax
  40790e:	jl     4078d6 <dim_enter_array@@Base+0x994>
  407910:	mov    DWORD PTR [rbp-0x8c],0x0
  40791a:	jmp    407a38 <dim_enter_array@@Base+0xaf6>
  40791f:	mov    DWORD PTR [rbp-0x88],0x1
  407929:	mov    DWORD PTR [rbp-0x94],0x0
  407933:	jmp    407a1f <dim_enter_array@@Base+0xadd>
  407938:	mov    edx,DWORD PTR [rbp-0x84]
  40793e:	mov    eax,DWORD PTR [rbp-0x94]
  407944:	add    edx,eax
  407946:	mov    rax,0x414500
  40794d:	movsxd rdx,edx
  407950:	add    rdx,0x10
  407954:	mov    eax,DWORD PTR [rax+rdx*4+0x8]
  407958:	test   eax,eax
  40795a:	je     4079a0 <dim_enter_array@@Base+0xa5e>
  40795c:	mov    edx,DWORD PTR [rbp-0x84]
  407962:	mov    eax,DWORD PTR [rbp-0x94]
  407968:	add    edx,eax
  40796a:	mov    rax,0x414500
  407971:	movsxd rdx,edx
  407974:	add    rdx,0xc
  407978:	mov    rax,QWORD PTR [rax+rdx*8+0x10]
  40797d:	mov    edx,DWORD PTR [rbp-0x8c]
  407983:	movsxd rdx,edx
  407986:	shl    rdx,0x2
  40798a:	add    rax,rdx
  40798d:	mov    eax,DWORD PTR [rax]
  40798f:	mov    edx,DWORD PTR [rbp-0x88]
  407995:	imul   eax,edx
  407998:	mov    DWORD PTR [rbp-0x88],eax
  40799e:	jmp    4079cb <dim_enter_array@@Base+0xa89>
  4079a0:	mov    edx,DWORD PTR [rbp-0x84]
  4079a6:	mov    eax,DWORD PTR [rbp-0x94]
  4079ac:	add    edx,eax
  4079ae:	mov    rax,0x414500
  4079b5:	movsxd rdx,edx
  4079b8:	mov    eax,DWORD PTR [rax+rdx*4+0x4]
  4079bc:	mov    edx,DWORD PTR [rbp-0x88]
  4079c2:	imul   eax,edx
  4079c5:	mov    DWORD PTR [rbp-0x88],eax
  4079cb:	mov    edx,DWORD PTR [rbp-0x84]
  4079d1:	mov    eax,DWORD PTR [rbp-0x94]
  4079d7:	add    edx,eax
  4079d9:	mov    rax,0x414500
  4079e0:	movsxd rdx,edx
  4079e3:	add    rdx,0x28
  4079e7:	mov    rdx,QWORD PTR [rax+rdx*8+0x10]
  4079ec:	mov    eax,DWORD PTR [rbp-0x88]
  4079f2:	cdqe   
  4079f4:	mov    esi,DWORD PTR [rbp-0x84]
  4079fa:	mov    ecx,DWORD PTR [rbp-0x94]
  407a00:	add    esi,ecx
  407a02:	lea    rcx,[rdx+rax*1]
  407a06:	mov    rax,0x414500
  407a0d:	movsxd rdx,esi
  407a10:	add    rdx,0x28
  407a14:	mov    QWORD PTR [rax+rdx*8+0x10],rcx
  407a19:	inc    DWORD PTR [rbp-0x94]
  407a1f:	mov    rax,QWORD PTR [rbp-0x68]
  407a23:	mov    eax,DWORD PTR [rax+0x4]
  407a26:	cmp    DWORD PTR [rbp-0x94],eax
  407a2c:	jl     407938 <dim_enter_array@@Base+0x9f6>
  407a32:	inc    DWORD PTR [rbp-0x8c]
  407a38:	mov    eax,DWORD PTR [rbp-0x8c]
  407a3e:	cdqe   
  407a40:	cmp    QWORD PTR [rbp-0x78],rax
  407a44:	jg     40791f <dim_enter_array@@Base+0x9dd>
  407a4a:	jmp    407b11 <dim_enter_array@@Base+0xbcf>
  407a4f:	mov    rax,0x414500
  407a56:	mov    edx,DWORD PTR [rbp-0x84]
  407a5c:	movsxd rdx,edx
  407a5f:	mov    eax,DWORD PTR [rax+rdx*4+0x4]
  407a63:	cdqe   
  407a65:	imul   rax,QWORD PTR [rbp-0x70]
  407a6a:	mov    rdx,rax
  407a6d:	mov    rax,0x414500
  407a74:	mov    ecx,DWORD PTR [rbp-0x84]
  407a7a:	movsxd rcx,ecx
  407a7d:	add    rcx,0x28
  407a81:	mov    QWORD PTR [rax+rcx*8+0x10],rdx
  407a86:	mov    DWORD PTR [rbp-0x94],0x1
  407a90:	jmp    407b02 <dim_enter_array@@Base+0xbc0>
  407a92:	mov    edx,DWORD PTR [rbp-0x84]
  407a98:	mov    eax,DWORD PTR [rbp-0x94]
  407a9e:	add    eax,edx
  407aa0:	lea    edx,[rax-0x1]
  407aa3:	mov    rax,0x414500
  407aaa:	movsxd rdx,edx
  407aad:	add    rdx,0x28
  407ab1:	mov    rcx,QWORD PTR [rax+rdx*8+0x10]
  407ab6:	mov    edx,DWORD PTR [rbp-0x84]
  407abc:	mov    eax,DWORD PTR [rbp-0x94]
  407ac2:	add    edx,eax
  407ac4:	mov    rax,0x414500
  407acb:	movsxd rdx,edx
  407ace:	mov    eax,DWORD PTR [rax+rdx*4+0x4]
  407ad2:	cdqe   
  407ad4:	mov    esi,DWORD PTR [rbp-0x84]
  407ada:	mov    edx,DWORD PTR [rbp-0x94]
  407ae0:	add    esi,edx
  407ae2:	imul   rcx,rax
  407ae6:	mov    rdx,rcx
  407ae9:	mov    rax,0x414500
  407af0:	movsxd rcx,esi
  407af3:	add    rcx,0x28
  407af7:	mov    QWORD PTR [rax+rcx*8+0x10],rdx
  407afc:	inc    DWORD PTR [rbp-0x94]
  407b02:	mov    rax,QWORD PTR [rbp-0x68]
  407b06:	mov    eax,DWORD PTR [rax+0x4]
  407b09:	cmp    DWORD PTR [rbp-0x94],eax
  407b0f:	jl     407a92 <dim_enter_array@@Base+0xb50>
  407b11:	mov    rax,QWORD PTR [rbp-0x68]
  407b15:	mov    edx,DWORD PTR [rax+0x4]
  407b18:	mov    eax,DWORD PTR [rbp-0x84]
  407b1e:	add    eax,edx
  407b20:	lea    edx,[rax-0x1]
  407b23:	mov    rax,0x414500
  407b2a:	movsxd rdx,edx
  407b2d:	add    rdx,0x28
  407b31:	mov    rax,QWORD PTR [rax+rdx*8+0x10]
  407b36:	test   rax,rax
  407b39:	jle    407c72 <dim_enter_array@@Base+0xd30>
  407b3f:	mov    rax,0x414500
  407b46:	mov    eax,DWORD PTR [rax]
  407b48:	lea    edx,[rax-0x1]
  407b4b:	mov    rax,0x414500
  407b52:	movsxd rdx,edx
  407b55:	mov    edx,DWORD PTR [rax+rdx*4+0x4]
  407b59:	mov    rax,0x414500
  407b60:	mov    eax,DWORD PTR [rax]
  407b62:	lea    ecx,[rax-0x1]
  407b65:	movsxd rdx,edx
  407b68:	mov    rax,0x414500
  407b6f:	movsxd rcx,ecx
  407b72:	add    rcx,0x18
  407b76:	mov    QWORD PTR [rax+rcx*8+0x10],rdx
  407b7b:	mov    rax,QWORD PTR [rbp-0x68]
  407b7f:	mov    eax,DWORD PTR [rax+0x4]
  407b82:	sub    eax,0x2
  407b85:	mov    DWORD PTR [rbp-0x94],eax
  407b8b:	jmp    407bfb <dim_enter_array@@Base+0xcb9>
  407b8d:	mov    edx,DWORD PTR [rbp-0x84]
  407b93:	mov    eax,DWORD PTR [rbp-0x94]
  407b99:	add    edx,eax
  407b9b:	mov    rax,0x414500
  407ba2:	movsxd rdx,edx
  407ba5:	mov    eax,DWORD PTR [rax+rdx*4+0x4]
  407ba9:	movsxd rdx,eax
  407bac:	mov    ecx,DWORD PTR [rbp-0x84]
  407bb2:	mov    eax,DWORD PTR [rbp-0x94]
  407bb8:	add    eax,ecx
  407bba:	lea    ecx,[rax+0x1]
  407bbd:	mov    rax,0x414500
  407bc4:	movsxd rcx,ecx
  407bc7:	add    rcx,0x18
  407bcb:	mov    rax,QWORD PTR [rax+rcx*8+0x10]
  407bd0:	mov    esi,DWORD PTR [rbp-0x84]
  407bd6:	mov    ecx,DWORD PTR [rbp-0x94]
  407bdc:	add    ecx,esi
  407bde:	imul   rdx,rax
  407be2:	mov    rax,0x414500
  407be9:	movsxd rcx,ecx
  407bec:	add    rcx,0x18
  407bf0:	mov    QWORD PTR [rax+rcx*8+0x10],rdx
  407bf5:	dec    DWORD PTR [rbp-0x94]
  407bfb:	cmp    DWORD PTR [rbp-0x94],0x0
  407c02:	jns    407b8d <dim_enter_array@@Base+0xc4b>
  407c04:	mov    eax,DWORD PTR [rbp-0x84]
  407c0a:	dec    eax
  407c0c:	mov    DWORD PTR [rbp-0x94],eax
  407c12:	jmp    407c69 <dim_enter_array@@Base+0xd27>
  407c14:	mov    rax,0x414500
  407c1b:	mov    edx,DWORD PTR [rbp-0x94]
  407c21:	movsxd rdx,edx
  407c24:	add    rdx,0x18
  407c28:	mov    rdx,QWORD PTR [rax+rdx*8+0x10]
  407c2d:	mov    rax,0x414500
  407c34:	mov    ecx,DWORD PTR [rbp-0x84]
  407c3a:	movsxd rcx,ecx
  407c3d:	add    rcx,0x18
  407c41:	mov    rax,QWORD PTR [rax+rcx*8+0x10]
  407c46:	imul   rdx,rax
  407c4a:	mov    rax,0x414500
  407c51:	mov    ecx,DWORD PTR [rbp-0x94]
  407c57:	movsxd rcx,ecx
  407c5a:	add    rcx,0x18
  407c5e:	mov    QWORD PTR [rax+rcx*8+0x10],rdx
  407c63:	dec    DWORD PTR [rbp-0x94]
  407c69:	cmp    DWORD PTR [rbp-0x94],0x0
  407c70:	jns    407c14 <dim_enter_array@@Base+0xcd2>
  407c72:	mov    rax,QWORD PTR [rbp-0x18]
  407c76:	xor    rax,QWORD PTR fs:0x28
  407c7f:	je     407c86 <dim_enter_array@@Base+0xd44>
  407c81:	call   403840 <__stack_chk_fail@plt>
  407c86:	add    rsp,0x98
  407c8d:	pop    rbx
  407c8e:	pop    rbp
  407c8f:	ret    

0000000000407c90 <dim_leave_array@@Base>:
  407c90:	endbr64 
  407c94:	push   rbp
  407c95:	mov    rbp,rsp
  407c98:	sub    rsp,0x10
  407c9c:	mov    rax,0x413380
  407ca3:	mov    eax,DWORD PTR [rax+0xf34]
  407ca9:	test   eax,eax
  407cab:	jns    407ccc <dim_leave_array@@Base+0x3c>
  407cad:	lea    rcx,[rip+0x78ec]        # 40f5a0 <_IO_stdin_used@@Base+0x5a0>
  407cb4:	mov    edx,0x243
  407cb9:	lea    rsi,[rip+0x76e0]        # 40f3a0 <_IO_stdin_used@@Base+0x3a0>
  407cc0:	lea    rdi,[rip+0x7842]        # 40f509 <_IO_stdin_used@@Base+0x509>
  407cc7:	call   403860 <__assert_fail@plt>
  407ccc:	mov    rax,0x413380
  407cd3:	mov    eax,DWORD PTR [rax+0xf34]
  407cd9:	movsxd rdx,eax
  407cdc:	mov    rax,rdx
  407cdf:	shl    rax,0x2
  407ce3:	add    rax,rdx
  407ce6:	shl    rax,0x4
  407cea:	lea    rdx,[rax+0x520]
  407cf1:	mov    rax,0x413380
  407cf8:	add    rax,rdx
  407cfb:	add    rax,0x14
  407cff:	mov    QWORD PTR [rbp-0x8],rax
  407d03:	mov    rax,QWORD PTR [rbp-0x8]
  407d07:	mov    eax,DWORD PTR [rax]
  407d09:	mov    DWORD PTR [rbp-0xc],eax
  407d0c:	mov    rax,0x414500
  407d13:	mov    edx,DWORD PTR [rax]
  407d15:	mov    rax,QWORD PTR [rbp-0x8]
  407d19:	mov    eax,DWORD PTR [rax+0x4]
  407d1c:	sub    edx,eax
  407d1e:	mov    rax,0x414500
  407d25:	mov    DWORD PTR [rax],edx
  407d27:	mov    DWORD PTR [rbp-0x10],0x0
  407d2e:	jmp    407d74 <dim_leave_array@@Base+0xe4>
  407d30:	mov    edx,DWORD PTR [rbp-0xc]
  407d33:	mov    eax,DWORD PTR [rbp-0x10]
  407d36:	add    edx,eax
  407d38:	mov    rax,0x414500
  407d3f:	movsxd rdx,edx
  407d42:	add    rdx,0x10
  407d46:	mov    eax,DWORD PTR [rax+rdx*4+0x8]
  407d4a:	test   eax,eax
  407d4c:	je     407d71 <dim_leave_array@@Base+0xe1>
  407d4e:	mov    edx,DWORD PTR [rbp-0xc]
  407d51:	mov    eax,DWORD PTR [rbp-0x10]
  407d54:	add    edx,eax
  407d56:	mov    rax,0x414500
  407d5d:	movsxd rdx,edx
  407d60:	add    rdx,0xc
  407d64:	mov    rax,QWORD PTR [rax+rdx*8+0x10]
  407d69:	mov    rdi,rax
  407d6c:	call   403680 <free@plt>
  407d71:	inc    DWORD PTR [rbp-0x10]
  407d74:	mov    rax,QWORD PTR [rbp-0x8]
  407d78:	mov    eax,DWORD PTR [rax+0x4]
  407d7b:	cmp    DWORD PTR [rbp-0x10],eax
  407d7e:	jl     407d30 <dim_leave_array@@Base+0xa0>
  407d80:	mov    rax,0x414500
  407d87:	mov    DWORD PTR [rax+0x44],0x0
  407d8e:	mov    rax,0x414500
  407d95:	mov    DWORD PTR [rax+0x68],0xffffffff
  407d9c:	mov    DWORD PTR [rbp-0x10],0x0
  407da3:	jmp    407ddc <dim_leave_array@@Base+0x14c>
  407da5:	mov    rax,0x414500
  407dac:	mov    edx,DWORD PTR [rbp-0x10]
  407daf:	movsxd rdx,edx
  407db2:	add    rdx,0x10
  407db6:	mov    eax,DWORD PTR [rax+rdx*4+0x8]
  407dba:	test   eax,eax
  407dbc:	je     407dd9 <dim_leave_array@@Base+0x149>
  407dbe:	mov    rax,0x414500
  407dc5:	mov    DWORD PTR [rax+0x44],0x1
  407dcc:	mov    rax,0x414500
  407dd3:	mov    edx,DWORD PTR [rbp-0x10]
  407dd6:	mov    DWORD PTR [rax+0x68],edx
  407dd9:	inc    DWORD PTR [rbp-0x10]
  407ddc:	mov    rax,0x414500
  407de3:	mov    eax,DWORD PTR [rax]
  407de5:	cmp    DWORD PTR [rbp-0x10],eax
  407de8:	jl     407da5 <dim_leave_array@@Base+0x115>
  407dea:	mov    rax,QWORD PTR [rbp-0x8]
  407dee:	mov    edx,DWORD PTR [rax+0x4]
  407df1:	mov    eax,DWORD PTR [rbp-0xc]
  407df4:	add    eax,edx
  407df6:	lea    edx,[rax-0x1]
  407df9:	mov    rax,0x414500
  407e00:	movsxd rdx,edx
  407e03:	add    rdx,0x28
  407e07:	mov    rax,QWORD PTR [rax+rdx*8+0x10]
  407e0c:	test   rax,rax
  407e0f:	jle    407e6e <dim_leave_array@@Base+0x1de>
  407e11:	mov    eax,DWORD PTR [rbp-0xc]
  407e14:	dec    eax
  407e16:	mov    DWORD PTR [rbp-0x10],eax
  407e19:	jmp    407e68 <dim_leave_array@@Base+0x1d8>
  407e1b:	mov    rax,0x414500
  407e22:	mov    edx,DWORD PTR [rbp-0x10]
  407e25:	movsxd rdx,edx
  407e28:	add    rdx,0x18
  407e2c:	mov    rax,QWORD PTR [rax+rdx*8+0x10]
  407e31:	mov    rdx,0x414500
  407e38:	mov    ecx,DWORD PTR [rbp-0xc]
  407e3b:	movsxd rcx,ecx
  407e3e:	add    rcx,0x18
  407e42:	mov    rsi,QWORD PTR [rdx+rcx*8+0x10]
  407e47:	cqo    
  407e49:	idiv   rsi
  407e4c:	mov    rcx,rax
  407e4f:	mov    rax,0x414500
  407e56:	mov    edx,DWORD PTR [rbp-0x10]
  407e59:	movsxd rdx,edx
  407e5c:	add    rdx,0x18
  407e60:	mov    QWORD PTR [rax+rdx*8+0x10],rcx
  407e65:	dec    DWORD PTR [rbp-0x10]
  407e68:	cmp    DWORD PTR [rbp-0x10],0x0
  407e6c:	jns    407e1b <dim_leave_array@@Base+0x18b>
  407e6e:	nop
  407e6f:	leave  
  407e70:	ret    
  407e71:	endbr64 
  407e75:	push   rbp
  407e76:	mov    rbp,rsp
  407e79:	sub    rsp,0x40
  407e7d:	mov    DWORD PTR [rbp-0x34],edi
  407e80:	mov    DWORD PTR [rbp-0x38],esi
  407e83:	mov    DWORD PTR [rbp-0x3c],edx
  407e86:	mov    rax,QWORD PTR fs:0x28
  407e8f:	mov    QWORD PTR [rbp-0x8],rax
  407e93:	xor    eax,eax
  407e95:	lea    rax,[rbp-0x28]
  407e99:	mov    rsi,rax
  407e9c:	mov    rax,0x413380
  407ea3:	lea    rdi,[rax+0x118]
  407eaa:	call   4037f0 <coda_cursor_get_type_class@plt>
  407eaf:	test   eax,eax
  407eb1:	je     407ebd <dim_leave_array@@Base+0x22d>
  407eb3:	mov    eax,0x0
  407eb8:	call   40c3f3 <handle_coda_error@@Base>
  407ebd:	mov    eax,DWORD PTR [rbp-0x28]
  407ec0:	test   eax,eax
  407ec2:	je     408137 <dim_leave_array@@Base+0x4a7>
  407ec8:	cmp    eax,0x1
  407ecb:	jne    40821c <dim_leave_array@@Base+0x58c>
  407ed1:	mov    eax,DWORD PTR [rbp-0x38]
  407ed4:	movsxd rdx,eax
  407ed7:	mov    rax,rdx
  407eda:	shl    rax,0x2
  407ede:	add    rax,rdx
  407ee1:	shl    rax,0x4
  407ee5:	lea    rdx,[rax+0x520]
  407eec:	mov    rax,0x413380
  407ef3:	add    rax,rdx
  407ef6:	add    rax,0x14
  407efa:	mov    QWORD PTR [rbp-0x10],rax
  407efe:	mov    rax,QWORD PTR [rbp-0x10]
  407f02:	mov    eax,DWORD PTR [rax]
  407f04:	mov    DWORD PTR [rbp-0x14],eax
  407f07:	mov    rax,0x413380
  407f0e:	mov    eax,DWORD PTR [rax+0xf34]
  407f14:	cmp    DWORD PTR [rbp-0x38],eax
  407f17:	jl     407f38 <dim_leave_array@@Base+0x2a8>
  407f19:	lea    rcx,[rip+0x76a0]        # 40f5c0 <_IO_stdin_used@@Base+0x5c0>
  407f20:	mov    edx,0x27e
  407f25:	lea    rsi,[rip+0x7474]        # 40f3a0 <_IO_stdin_used@@Base+0x3a0>
  407f2c:	lea    rdi,[rip+0x75f5]        # 40f528 <_IO_stdin_used@@Base+0x528>
  407f33:	call   403860 <__assert_fail@plt>
  407f38:	cmp    DWORD PTR [rbp-0x38],0x0
  407f3c:	jne    407f49 <dim_leave_array@@Base+0x2b9>
  407f3e:	mov    rax,QWORD PTR [rbp-0x10]
  407f42:	mov    DWORD PTR [rax+0x2c],0x0
  407f49:	mov    rax,0x413380
  407f50:	mov    eax,DWORD PTR [rax+0xf34]
  407f56:	cmp    DWORD PTR [rbp-0x38],eax
  407f59:	jge    407f97 <dim_leave_array@@Base+0x307>
  407f5b:	mov    rax,QWORD PTR [rbp-0x10]
  407f5f:	mov    edx,DWORD PTR [rax+0x2c]
  407f62:	mov    rax,QWORD PTR [rbp-0x10]
  407f66:	mov    eax,DWORD PTR [rax+0x28]
  407f69:	mov    ecx,DWORD PTR [rbp-0x38]
  407f6c:	lea    edi,[rcx+0x1]
  407f6f:	mov    ecx,edx
  407f71:	imul   ecx,eax
  407f74:	mov    rsi,0x413380
  407f7b:	movsxd rdx,edi
  407f7e:	mov    rax,rdx
  407f81:	shl    rax,0x2
  407f85:	add    rax,rdx
  407f88:	shl    rax,0x4
  407f8c:	add    rax,rsi
  407f8f:	add    rax,0x560
  407f95:	mov    DWORD PTR [rax],ecx
  407f97:	mov    DWORD PTR [rbp-0x20],0x1
  407f9e:	mov    eax,DWORD PTR [rbp-0x14]
  407fa1:	mov    DWORD PTR [rbp-0x1c],eax
  407fa4:	jmp    40800f <dim_leave_array@@Base+0x37f>
  407fa6:	mov    rax,0x414500
  407fad:	mov    edx,DWORD PTR [rbp-0x1c]
  407fb0:	movsxd rdx,edx
  407fb3:	add    rdx,0x10
  407fb7:	mov    eax,DWORD PTR [rax+rdx*4+0x8]
  407fbb:	test   eax,eax
  407fbd:	je     407ff2 <dim_leave_array@@Base+0x362>
  407fbf:	mov    rax,0x414500
  407fc6:	mov    edx,DWORD PTR [rbp-0x1c]
  407fc9:	movsxd rdx,edx
  407fcc:	add    rdx,0xc
  407fd0:	mov    rdx,QWORD PTR [rax+rdx*8+0x10]
  407fd5:	mov    rax,QWORD PTR [rbp-0x10]
  407fd9:	mov    eax,DWORD PTR [rax+0x2c]
  407fdc:	cdqe   
  407fde:	shl    rax,0x2
  407fe2:	add    rax,rdx
  407fe5:	mov    eax,DWORD PTR [rax]
  407fe7:	mov    edx,DWORD PTR [rbp-0x20]
  407fea:	imul   eax,edx
  407fed:	mov    DWORD PTR [rbp-0x20],eax
  407ff0:	jmp    40800c <dim_leave_array@@Base+0x37c>
  407ff2:	mov    rax,0x414500
  407ff9:	mov    edx,DWORD PTR [rbp-0x1c]
  407ffc:	movsxd rdx,edx
  407fff:	mov    eax,DWORD PTR [rax+rdx*4+0x4]
  408003:	mov    edx,DWORD PTR [rbp-0x20]
  408006:	imul   eax,edx
  408009:	mov    DWORD PTR [rbp-0x20],eax
  40800c:	inc    DWORD PTR [rbp-0x1c]
  40800f:	mov    rax,QWORD PTR [rbp-0x10]
  408013:	mov    edx,DWORD PTR [rax+0x4]
  408016:	mov    eax,DWORD PTR [rbp-0x14]
  408019:	add    eax,edx
  40801b:	cmp    DWORD PTR [rbp-0x1c],eax
  40801e:	jl     407fa6 <dim_leave_array@@Base+0x316>
  408020:	cmp    DWORD PTR [rbp-0x20],0x0
  408024:	jle    408131 <dim_leave_array@@Base+0x4a1>
  40802a:	mov    rax,0x413380
  408031:	lea    rdi,[rax+0x118]
  408038:	call   403890 <coda_cursor_goto_first_array_element@plt>
  40803d:	test   eax,eax
  40803f:	je     40804b <dim_leave_array@@Base+0x3bb>
  408041:	mov    eax,0x0
  408046:	call   40c3f3 <handle_coda_error@@Base>
  40804b:	mov    DWORD PTR [rbp-0x18],0x0
  408052:	jmp    40810d <dim_leave_array@@Base+0x47d>
  408057:	mov    eax,DWORD PTR [rbp-0x38]
  40805a:	lea    esi,[rax+0x1]
  40805d:	mov    eax,DWORD PTR [rbp-0x34]
  408060:	lea    ecx,[rax+0x1]
  408063:	mov    eax,DWORD PTR [rbp-0x3c]
  408066:	mov    edx,eax
  408068:	mov    edi,ecx
  40806a:	call   407e71 <dim_leave_array@@Base+0x1e1>
  40806f:	test   eax,eax
  408071:	je     408090 <dim_leave_array@@Base+0x400>
  408073:	mov    rax,0x413380
  40807a:	lea    rdi,[rax+0x118]
  408081:	call   403940 <coda_cursor_goto_parent@plt>
  408086:	mov    eax,0x1
  40808b:	jmp    408241 <dim_leave_array@@Base+0x5b1>
  408090:	mov    eax,DWORD PTR [rbp-0x20]
  408093:	dec    eax
  408095:	cmp    DWORD PTR [rbp-0x18],eax
  408098:	jge    40810a <dim_leave_array@@Base+0x47a>
  40809a:	mov    rax,0x413380
  4080a1:	lea    rdi,[rax+0x118]
  4080a8:	call   4039c0 <coda_cursor_goto_next_array_element@plt>
  4080ad:	test   eax,eax
  4080af:	je     4080bb <dim_leave_array@@Base+0x42b>
  4080b1:	mov    eax,0x0
  4080b6:	call   40c3f3 <handle_coda_error@@Base>
  4080bb:	mov    eax,DWORD PTR [rbp-0x38]
  4080be:	lea    ecx,[rax+0x1]
  4080c1:	mov    rsi,0x413380
  4080c8:	movsxd rdx,ecx
  4080cb:	mov    rax,rdx
  4080ce:	shl    rax,0x2
  4080d2:	add    rax,rdx
  4080d5:	shl    rax,0x4
  4080d9:	add    rax,rsi
  4080dc:	add    rax,0x560
  4080e2:	mov    eax,DWORD PTR [rax]
  4080e4:	lea    esi,[rax+0x1]
  4080e7:	mov    rdi,0x413380
  4080ee:	movsxd rdx,ecx
  4080f1:	mov    rax,rdx
  4080f4:	shl    rax,0x2
  4080f8:	add    rax,rdx
  4080fb:	shl    rax,0x4
  4080ff:	add    rax,rdi
  408102:	add    rax,0x560
  408108:	mov    DWORD PTR [rax],esi
  40810a:	inc    DWORD PTR [rbp-0x18]
  40810d:	mov    eax,DWORD PTR [rbp-0x18]
  408110:	cmp    eax,DWORD PTR [rbp-0x20]
  408113:	jl     408057 <dim_leave_array@@Base+0x3c7>
  408119:	mov    rax,0x413380
  408120:	lea    rdi,[rax+0x118]
  408127:	call   403940 <coda_cursor_goto_parent@plt>
  40812c:	jmp    40823c <dim_leave_array@@Base+0x5ac>
  408131:	nop
  408132:	jmp    40823c <dim_leave_array@@Base+0x5ac>
  408137:	mov    rax,0x413380
  40813e:	mov    edx,DWORD PTR [rbp-0x3c]
  408141:	movsxd rdx,edx
  408144:	add    rdx,0x3e8
  40814b:	mov    eax,DWORD PTR [rax+rdx*4+0x18]
  40814f:	cdqe   
  408151:	lea    rdx,[rbp-0x24]
  408155:	mov    rsi,rax
  408158:	mov    rax,0x413380
  40815f:	lea    rdi,[rax+0x118]
  408166:	call   4036d0 <coda_cursor_get_record_field_available_status@plt>
  40816b:	test   eax,eax
  40816d:	je     408179 <dim_leave_array@@Base+0x4e9>
  40816f:	mov    eax,0x0
  408174:	call   40c3f3 <handle_coda_error@@Base>
  408179:	mov    eax,DWORD PTR [rbp-0x24]
  40817c:	test   eax,eax
  40817e:	je     40823b <dim_leave_array@@Base+0x5ab>
  408184:	mov    rax,0x413380
  40818b:	mov    eax,DWORD PTR [rax+0x1138]
  408191:	dec    eax
  408193:	cmp    DWORD PTR [rbp-0x3c],eax
  408196:	jne    4081a2 <dim_leave_array@@Base+0x512>
  408198:	mov    eax,0x1
  40819d:	jmp    408241 <dim_leave_array@@Base+0x5b1>
  4081a2:	mov    rax,0x413380
  4081a9:	mov    edx,DWORD PTR [rbp-0x3c]
  4081ac:	movsxd rdx,edx
  4081af:	add    rdx,0x3e8
  4081b6:	mov    eax,DWORD PTR [rax+rdx*4+0x18]
  4081ba:	cdqe   
  4081bc:	mov    rsi,rax
  4081bf:	mov    rax,0x413380
  4081c6:	lea    rdi,[rax+0x118]
  4081cd:	call   4038e0 <coda_cursor_goto_record_field_by_index@plt>
  4081d2:	test   eax,eax
  4081d4:	je     4081e0 <dim_leave_array@@Base+0x550>
  4081d6:	mov    eax,0x0
  4081db:	call   40c3f3 <handle_coda_error@@Base>
  4081e0:	mov    eax,DWORD PTR [rbp-0x3c]
  4081e3:	lea    edx,[rax+0x1]
  4081e6:	mov    eax,DWORD PTR [rbp-0x34]
  4081e9:	lea    ecx,[rax+0x1]
  4081ec:	mov    eax,DWORD PTR [rbp-0x38]
  4081ef:	mov    esi,eax
  4081f1:	mov    edi,ecx
  4081f3:	call   407e71 <dim_leave_array@@Base+0x1e1>
  4081f8:	mov    DWORD PTR [rbp-0x24],eax
  4081fb:	mov    rax,0x413380
  408202:	lea    rdi,[rax+0x118]
  408209:	call   403940 <coda_cursor_goto_parent@plt>
  40820e:	mov    eax,DWORD PTR [rbp-0x24]
  408211:	test   eax,eax
  408213:	je     40823b <dim_leave_array@@Base+0x5ab>
  408215:	mov    eax,0x1
  40821a:	jmp    408241 <dim_leave_array@@Base+0x5b1>
  40821c:	lea    rcx,[rip+0x739d]        # 40f5c0 <_IO_stdin_used@@Base+0x5c0>
  408223:	mov    edx,0x2d9
  408228:	lea    rsi,[rip+0x7171]        # 40f3a0 <_IO_stdin_used@@Base+0x3a0>
  40822f:	lea    rdi,[rip+0x7292]        # 40f4c8 <_IO_stdin_used@@Base+0x4c8>
  408236:	call   403860 <__assert_fail@plt>
  40823b:	nop
  40823c:	mov    eax,0x0
  408241:	mov    rcx,QWORD PTR [rbp-0x8]
  408245:	xor    rcx,QWORD PTR fs:0x28
  40824e:	je     408255 <dim_leave_array@@Base+0x5c5>
  408250:	call   403840 <__stack_chk_fail@plt>
  408255:	leave  
  408256:	ret    

0000000000408257 <dim_record_field_available@@Base>:
  408257:	endbr64 
  40825b:	push   rbp
  40825c:	mov    rbp,rsp
  40825f:	mov    edx,0x0
  408264:	mov    esi,0x0
  408269:	mov    edi,0x0
  40826e:	call   407e71 <dim_leave_array@@Base+0x1e1>
  408273:	pop    rbp
  408274:	ret    
  408275:	endbr64 
  408279:	push   rbp
  40827a:	mov    rbp,rsp
  40827d:	push   rbx
  40827e:	sub    rsp,0x38
  408282:	mov    QWORD PTR [rbp-0x28],rdi
  408286:	mov    QWORD PTR [rbp-0x30],rsi
  40828a:	mov    QWORD PTR [rbp-0x38],rdx
  40828e:	mov    DWORD PTR [rbp-0x18],0x0
  408295:	cmp    QWORD PTR [rbp-0x28],0x0
  40829a:	jne    4082bb <dim_record_field_available@@Base+0x64>
  40829c:	lea    rcx,[rip+0x746d]        # 40f710 <_IO_stdin_used@@Base+0x710>
  4082a3:	mov    edx,0x2c
  4082a8:	lea    rsi,[rip+0x7351]        # 40f600 <_IO_stdin_used@@Base+0x600>
  4082af:	lea    rdi,[rip+0x73b0]        # 40f666 <_IO_stdin_used@@Base+0x666>
  4082b6:	call   403860 <__assert_fail@plt>
  4082bb:	cmp    QWORD PTR [rbp-0x30],0x0
  4082c0:	jne    4082e1 <dim_record_field_available@@Base+0x8a>
  4082c2:	lea    rcx,[rip+0x7447]        # 40f710 <_IO_stdin_used@@Base+0x710>
  4082c9:	mov    edx,0x2d
  4082ce:	lea    rsi,[rip+0x732b]        # 40f600 <_IO_stdin_used@@Base+0x600>
  4082d5:	lea    rdi,[rip+0x739e]        # 40f67a <_IO_stdin_used@@Base+0x67a>
  4082dc:	call   403860 <__assert_fail@plt>
  4082e1:	cmp    QWORD PTR [rbp-0x38],0x0
  4082e6:	jne    40830b <dim_record_field_available@@Base+0xb4>
  4082e8:	lea    rcx,[rip+0x7421]        # 40f710 <_IO_stdin_used@@Base+0x710>
  4082ef:	mov    edx,0x2e
  4082f4:	lea    rsi,[rip+0x7305]        # 40f600 <_IO_stdin_used@@Base+0x600>
  4082fb:	lea    rdi,[rip+0x7387]        # 40f689 <_IO_stdin_used@@Base+0x689>
  408302:	call   403860 <__assert_fail@plt>
  408307:	inc    QWORD PTR [rbp-0x28]
  40830b:	mov    rax,QWORD PTR [rbp-0x28]
  40830f:	movzx  eax,BYTE PTR [rax]
  408312:	cmp    al,0x20
  408314:	je     408307 <dim_record_field_available@@Base+0xb0>
  408316:	mov    rax,QWORD PTR [rbp-0x28]
  40831a:	movzx  eax,BYTE PTR [rax]
  40831d:	cmp    al,0x9
  40831f:	je     408307 <dim_record_field_available@@Base+0xb0>
  408321:	mov    rax,QWORD PTR [rbp-0x28]
  408325:	movzx  eax,BYTE PTR [rax]
  408328:	cmp    al,0xa
  40832a:	je     408307 <dim_record_field_available@@Base+0xb0>
  40832c:	jmp    408331 <dim_record_field_available@@Base+0xda>
  40832e:	inc    DWORD PTR [rbp-0x18]
  408331:	mov    eax,DWORD PTR [rbp-0x18]
  408334:	movsxd rdx,eax
  408337:	mov    rax,QWORD PTR [rbp-0x28]
  40833b:	add    rax,rdx
  40833e:	movzx  eax,BYTE PTR [rax]
  408341:	test   al,al
  408343:	je     408381 <dim_record_field_available@@Base+0x12a>
  408345:	mov    eax,DWORD PTR [rbp-0x18]
  408348:	movsxd rdx,eax
  40834b:	mov    rax,QWORD PTR [rbp-0x28]
  40834f:	add    rax,rdx
  408352:	movzx  eax,BYTE PTR [rax]
  408355:	cmp    al,0x2e
  408357:	je     408381 <dim_record_field_available@@Base+0x12a>
  408359:	mov    eax,DWORD PTR [rbp-0x18]
  40835c:	movsxd rdx,eax
  40835f:	mov    rax,QWORD PTR [rbp-0x28]
  408363:	add    rax,rdx
  408366:	movzx  eax,BYTE PTR [rax]
  408369:	cmp    al,0x3b
  40836b:	je     408381 <dim_record_field_available@@Base+0x12a>
  40836d:	mov    eax,DWORD PTR [rbp-0x18]
  408370:	movsxd rdx,eax
  408373:	mov    rax,QWORD PTR [rbp-0x28]
  408377:	add    rax,rdx
  40837a:	movzx  eax,BYTE PTR [rax]
  40837d:	cmp    al,0x2c
  40837f:	jne    40832e <dim_record_field_available@@Base+0xd7>
  408381:	cmp    DWORD PTR [rbp-0x18],0x0
  408385:	jle    4085a1 <dim_record_field_available@@Base+0x34a>
  40838b:	mov    eax,DWORD PTR [rbp-0x18]
  40838e:	mov    DWORD PTR [rbp-0x14],eax
  408391:	mov    edi,0x18
  408396:	call   403a00 <malloc@plt>
  40839b:	mov    rdx,rax
  40839e:	mov    rax,QWORD PTR [rbp-0x30]
  4083a2:	mov    QWORD PTR [rax],rdx
  4083a5:	mov    rax,QWORD PTR [rbp-0x30]
  4083a9:	mov    rax,QWORD PTR [rax]
  4083ac:	test   rax,rax
  4083af:	jne    4083e3 <dim_record_field_available@@Base+0x18c>
  4083b1:	mov    r8d,0x45
  4083b7:	lea    rcx,[rip+0x7242]        # 40f600 <_IO_stdin_used@@Base+0x600>
  4083be:	mov    edx,0x18
  4083c3:	lea    rsi,[rip+0x72ce]        # 40f698 <_IO_stdin_used@@Base+0x698>
  4083ca:	mov    edi,0xffffffff
  4083cf:	mov    eax,0x0
  4083d4:	call   4036e0 <coda_set_error@plt>
  4083d9:	mov    eax,0x0
  4083de:	call   40c3f3 <handle_coda_error@@Base>
  4083e3:	mov    eax,DWORD PTR [rbp-0x18]
  4083e6:	inc    eax
  4083e8:	cdqe   
  4083ea:	mov    rdx,QWORD PTR [rbp-0x30]
  4083ee:	mov    rbx,QWORD PTR [rdx]
  4083f1:	mov    rdi,rax
  4083f4:	call   403a00 <malloc@plt>
  4083f9:	mov    QWORD PTR [rbx],rax
  4083fc:	mov    rax,QWORD PTR [rbp-0x30]
  408400:	mov    rax,QWORD PTR [rax]
  408403:	mov    rax,QWORD PTR [rax]
  408406:	test   rax,rax
  408409:	jne    40843f <dim_record_field_available@@Base+0x1e8>
  40840b:	mov    eax,DWORD PTR [rbp-0x18]
  40840e:	inc    eax
  408410:	mov    r8d,0x4c
  408416:	lea    rcx,[rip+0x71e3]        # 40f600 <_IO_stdin_used@@Base+0x600>
  40841d:	mov    edx,eax
  40841f:	lea    rsi,[rip+0x72aa]        # 40f6d0 <_IO_stdin_used@@Base+0x6d0>
  408426:	mov    edi,0xffffffff
  40842b:	mov    eax,0x0
  408430:	call   4036e0 <coda_set_error@plt>
  408435:	mov    eax,0x0
  40843a:	call   40c3f3 <handle_coda_error@@Base>
  40843f:	mov    eax,DWORD PTR [rbp-0x18]
  408442:	movsxd rdx,eax
  408445:	mov    rax,QWORD PTR [rbp-0x30]
  408449:	mov    rax,QWORD PTR [rax]
  40844c:	mov    rax,QWORD PTR [rax]
  40844f:	mov    rcx,QWORD PTR [rbp-0x28]
  408453:	mov    rsi,rcx
  408456:	mov    rdi,rax
  408459:	call   4036b0 <strncpy@plt>
  40845e:	mov    rax,QWORD PTR [rbp-0x30]
  408462:	mov    rax,QWORD PTR [rax]
  408465:	mov    QWORD PTR [rax+0x8],0x0
  40846d:	mov    rax,QWORD PTR [rbp-0x30]
  408471:	mov    rax,QWORD PTR [rax]
  408474:	mov    QWORD PTR [rax+0x10],0x0
  40847c:	jmp    408481 <dim_record_field_available@@Base+0x22a>
  40847e:	dec    DWORD PTR [rbp-0x18]
  408481:	mov    rax,QWORD PTR [rbp-0x30]
  408485:	mov    rax,QWORD PTR [rax]
  408488:	mov    rax,QWORD PTR [rax]
  40848b:	mov    edx,DWORD PTR [rbp-0x18]
  40848e:	movsxd rdx,edx
  408491:	dec    rdx
  408494:	add    rax,rdx
  408497:	movzx  eax,BYTE PTR [rax]
  40849a:	cmp    al,0x20
  40849c:	je     40847e <dim_record_field_available@@Base+0x227>
  40849e:	mov    rax,QWORD PTR [rbp-0x30]
  4084a2:	mov    rax,QWORD PTR [rax]
  4084a5:	mov    rax,QWORD PTR [rax]
  4084a8:	mov    edx,DWORD PTR [rbp-0x18]
  4084ab:	movsxd rdx,edx
  4084ae:	dec    rdx
  4084b1:	add    rax,rdx
  4084b4:	movzx  eax,BYTE PTR [rax]
  4084b7:	cmp    al,0x9
  4084b9:	je     40847e <dim_record_field_available@@Base+0x227>
  4084bb:	mov    rax,QWORD PTR [rbp-0x30]
  4084bf:	mov    rax,QWORD PTR [rax]
  4084c2:	mov    rax,QWORD PTR [rax]
  4084c5:	mov    edx,DWORD PTR [rbp-0x18]
  4084c8:	movsxd rdx,edx
  4084cb:	dec    rdx
  4084ce:	add    rax,rdx
  4084d1:	movzx  eax,BYTE PTR [rax]
  4084d4:	cmp    al,0xa
  4084d6:	je     40847e <dim_record_field_available@@Base+0x227>
  4084d8:	mov    rax,QWORD PTR [rbp-0x30]
  4084dc:	mov    rax,QWORD PTR [rax]
  4084df:	mov    rdx,QWORD PTR [rax]
  4084e2:	mov    eax,DWORD PTR [rbp-0x18]
  4084e5:	cdqe   
  4084e7:	add    rax,rdx
  4084ea:	mov    BYTE PTR [rax],0x0
  4084ed:	mov    eax,DWORD PTR [rbp-0x14]
  4084f0:	movsxd rdx,eax
  4084f3:	mov    rax,QWORD PTR [rbp-0x28]
  4084f7:	add    rax,rdx
  4084fa:	movzx  eax,BYTE PTR [rax]
  4084fd:	cmp    al,0x2e
  4084ff:	jne    40854a <dim_record_field_available@@Base+0x2f3>
  408501:	mov    rax,QWORD PTR [rbp-0x30]
  408505:	mov    rax,QWORD PTR [rax]
  408508:	lea    rsi,[rax+0x8]
  40850c:	mov    eax,DWORD PTR [rbp-0x14]
  40850f:	cdqe   
  408511:	lea    rdx,[rax+0x1]
  408515:	mov    rax,QWORD PTR [rbp-0x28]
  408519:	lea    rcx,[rdx+rax*1]
  40851d:	mov    rax,QWORD PTR [rbp-0x38]
  408521:	mov    rdx,rax
  408524:	mov    rdi,rcx
  408527:	call   408275 <dim_record_field_available@@Base+0x1e>
  40852c:	mov    rax,QWORD PTR [rbp-0x30]
  408530:	mov    rax,QWORD PTR [rax]
  408533:	mov    rax,QWORD PTR [rax+0x8]
  408537:	test   rax,rax
  40853a:	jne    4085ac <dim_record_field_available@@Base+0x355>
  40853c:	mov    rax,QWORD PTR [rbp-0x30]
  408540:	mov    rdi,rax
  408543:	call   4087de <codadump_filter_remove@@Base>
  408548:	jmp    4085ac <dim_record_field_available@@Base+0x355>
  40854a:	mov    eax,DWORD PTR [rbp-0x14]
  40854d:	movsxd rdx,eax
  408550:	mov    rax,QWORD PTR [rbp-0x28]
  408554:	add    rax,rdx
  408557:	movzx  eax,BYTE PTR [rax]
  40855a:	cmp    al,0x3b
  40855c:	je     408572 <dim_record_field_available@@Base+0x31b>
  40855e:	mov    eax,DWORD PTR [rbp-0x14]
  408561:	movsxd rdx,eax
  408564:	mov    rax,QWORD PTR [rbp-0x28]
  408568:	add    rax,rdx
  40856b:	movzx  eax,BYTE PTR [rax]
  40856e:	cmp    al,0x2c
  408570:	jne    40858b <dim_record_field_available@@Base+0x334>
  408572:	mov    eax,DWORD PTR [rbp-0x14]
  408575:	cdqe   
  408577:	lea    rdx,[rax+0x1]
  40857b:	mov    rax,QWORD PTR [rbp-0x28]
  40857f:	add    rdx,rax
  408582:	mov    rax,QWORD PTR [rbp-0x38]
  408586:	mov    QWORD PTR [rax],rdx
  408589:	jmp    4085ac <dim_record_field_available@@Base+0x355>
  40858b:	mov    eax,DWORD PTR [rbp-0x14]
  40858e:	movsxd rdx,eax
  408591:	mov    rax,QWORD PTR [rbp-0x28]
  408595:	add    rdx,rax
  408598:	mov    rax,QWORD PTR [rbp-0x38]
  40859c:	mov    QWORD PTR [rax],rdx
  40859f:	jmp    4085ac <dim_record_field_available@@Base+0x355>
  4085a1:	mov    rax,QWORD PTR [rbp-0x30]
  4085a5:	mov    QWORD PTR [rax],0x0
  4085ac:	nop
  4085ad:	add    rsp,0x38
  4085b1:	pop    rbx
  4085b2:	pop    rbp
  4085b3:	ret    
  4085b4:	endbr64 
  4085b8:	push   rbp
  4085b9:	mov    rbp,rsp
  4085bc:	sub    rsp,0x10
  4085c0:	mov    QWORD PTR [rbp-0x8],rdi
  4085c4:	mov    QWORD PTR [rbp-0x10],rsi
  4085c8:	cmp    QWORD PTR [rbp-0x8],0x0
  4085cd:	jne    4085ee <dim_record_field_available@@Base+0x397>
  4085cf:	lea    rcx,[rip+0x714a]        # 40f720 <_IO_stdin_used@@Base+0x720>
  4085d6:	mov    edx,0x75
  4085db:	lea    rsi,[rip+0x701e]        # 40f600 <_IO_stdin_used@@Base+0x600>
  4085e2:	lea    rdi,[rip+0x7091]        # 40f67a <_IO_stdin_used@@Base+0x67a>
  4085e9:	call   403860 <__assert_fail@plt>
  4085ee:	mov    rax,QWORD PTR [rbp-0x10]
  4085f2:	test   rax,rax
  4085f5:	je     4086de <dim_record_field_available@@Base+0x487>
  4085fb:	mov    rax,QWORD PTR [rbp-0x8]
  4085ff:	mov    rax,QWORD PTR [rax]
  408602:	test   rax,rax
  408605:	jne    408617 <dim_record_field_available@@Base+0x3c0>
  408607:	mov    rdx,QWORD PTR [rbp-0x10]
  40860b:	mov    rax,QWORD PTR [rbp-0x8]
  40860f:	mov    QWORD PTR [rax],rdx
  408612:	jmp    4086df <dim_record_field_available@@Base+0x488>
  408617:	mov    rax,QWORD PTR [rbp-0x10]
  40861b:	mov    rdx,QWORD PTR [rax]
  40861e:	mov    rax,QWORD PTR [rbp-0x8]
  408622:	mov    rax,QWORD PTR [rax]
  408625:	mov    rax,QWORD PTR [rax]
  408628:	mov    rsi,rdx
  40862b:	mov    rdi,rax
  40862e:	call   403910 <strcmp@plt>
  408633:	test   eax,eax
  408635:	jne    4086a1 <dim_record_field_available@@Base+0x44a>
  408637:	mov    rax,QWORD PTR [rbp-0x8]
  40863b:	mov    rax,QWORD PTR [rax]
  40863e:	mov    rax,QWORD PTR [rax+0x8]
  408642:	test   rax,rax
  408645:	je     408693 <dim_record_field_available@@Base+0x43c>
  408647:	mov    rax,QWORD PTR [rbp-0x10]
  40864b:	mov    rax,QWORD PTR [rax+0x8]
  40864f:	test   rax,rax
  408652:	je     408680 <dim_record_field_available@@Base+0x429>
  408654:	mov    rax,QWORD PTR [rbp-0x10]
  408658:	mov    rax,QWORD PTR [rax+0x8]
  40865c:	mov    rdx,QWORD PTR [rbp-0x8]
  408660:	mov    rdx,QWORD PTR [rdx]
  408663:	add    rdx,0x8
  408667:	mov    rsi,rax
  40866a:	mov    rdi,rdx
  40866d:	call   4085b4 <dim_record_field_available@@Base+0x35d>
  408672:	mov    rax,QWORD PTR [rbp-0x10]
  408676:	mov    QWORD PTR [rax+0x8],0x0
  40867e:	jmp    408693 <dim_record_field_available@@Base+0x43c>
  408680:	mov    rax,QWORD PTR [rbp-0x8]
  408684:	mov    rax,QWORD PTR [rax]
  408687:	add    rax,0x8
  40868b:	mov    rdi,rax
  40868e:	call   4087de <codadump_filter_remove@@Base>
  408693:	lea    rax,[rbp-0x10]
  408697:	mov    rdi,rax
  40869a:	call   4087de <codadump_filter_remove@@Base>
  40869f:	jmp    4086df <dim_record_field_available@@Base+0x488>
  4086a1:	mov    rax,QWORD PTR [rbp-0x8]
  4086a5:	mov    rax,QWORD PTR [rax]
  4086a8:	mov    rax,QWORD PTR [rax+0x10]
  4086ac:	test   rax,rax
  4086af:	je     4086cd <dim_record_field_available@@Base+0x476>
  4086b1:	mov    rax,QWORD PTR [rbp-0x10]
  4086b5:	mov    rdx,QWORD PTR [rbp-0x8]
  4086b9:	mov    rdx,QWORD PTR [rdx]
  4086bc:	add    rdx,0x10
  4086c0:	mov    rsi,rax
  4086c3:	mov    rdi,rdx
  4086c6:	call   4085b4 <dim_record_field_available@@Base+0x35d>
  4086cb:	jmp    4086df <dim_record_field_available@@Base+0x488>
  4086cd:	mov    rax,QWORD PTR [rbp-0x8]
  4086d1:	mov    rax,QWORD PTR [rax]
  4086d4:	mov    rdx,QWORD PTR [rbp-0x10]
  4086d8:	mov    QWORD PTR [rax+0x10],rdx
  4086dc:	jmp    4086df <dim_record_field_available@@Base+0x488>
  4086de:	nop
  4086df:	leave  
  4086e0:	ret    
  4086e1:	endbr64 
  4086e5:	push   rbp
  4086e6:	mov    rbp,rsp
  4086e9:	sub    rsp,0x30
  4086ed:	mov    QWORD PTR [rbp-0x28],rdi
  4086f1:	mov    QWORD PTR [rbp-0x30],rsi
  4086f5:	mov    rax,QWORD PTR fs:0x28
  4086fe:	mov    QWORD PTR [rbp-0x8],rax
  408702:	xor    eax,eax
  408704:	mov    QWORD PTR [rbp-0x18],0x0
  40870c:	mov    rax,QWORD PTR [rbp-0x28]
  408710:	mov    QWORD PTR [rbp-0x10],rax
  408714:	cmp    QWORD PTR [rbp-0x28],0x0
  408719:	je     408773 <dim_record_field_available@@Base+0x51c>
  40871b:	jmp    408766 <dim_record_field_available@@Base+0x50f>
  40871d:	mov    rax,QWORD PTR [rbp-0x10]
  408721:	lea    rdx,[rbp-0x10]
  408725:	lea    rcx,[rbp-0x18]
  408729:	mov    rsi,rcx
  40872c:	mov    rdi,rax
  40872f:	call   408275 <dim_record_field_available@@Base+0x1e>
  408734:	mov    rax,QWORD PTR [rbp-0x18]
  408738:	test   rax,rax
  40873b:	jne    40874b <dim_record_field_available@@Base+0x4f4>
  40873d:	mov    rax,QWORD PTR [rbp-0x30]
  408741:	mov    rdi,rax
  408744:	call   4087de <codadump_filter_remove@@Base>
  408749:	jmp    408774 <dim_record_field_available@@Base+0x51d>
  40874b:	mov    rdx,QWORD PTR [rbp-0x18]
  40874f:	mov    rax,QWORD PTR [rbp-0x30]
  408753:	mov    rsi,rdx
  408756:	mov    rdi,rax
  408759:	call   4085b4 <dim_record_field_available@@Base+0x35d>
  40875e:	mov    QWORD PTR [rbp-0x18],0x0
  408766:	mov    rax,QWORD PTR [rbp-0x10]
  40876a:	movzx  eax,BYTE PTR [rax]
  40876d:	test   al,al
  40876f:	jne    40871d <dim_record_field_available@@Base+0x4c6>
  408771:	jmp    408774 <dim_record_field_available@@Base+0x51d>
  408773:	nop
  408774:	mov    rax,QWORD PTR [rbp-0x8]
  408778:	xor    rax,QWORD PTR fs:0x28
  408781:	je     408788 <dim_record_field_available@@Base+0x531>
  408783:	call   403840 <__stack_chk_fail@plt>
  408788:	leave  
  408789:	ret    

000000000040878a <codadump_filter_create@@Base>:
  40878a:	endbr64 
  40878e:	push   rbp
  40878f:	mov    rbp,rsp
  408792:	sub    rsp,0x20
  408796:	mov    QWORD PTR [rbp-0x18],rdi
  40879a:	mov    rax,QWORD PTR fs:0x28
  4087a3:	mov    QWORD PTR [rbp-0x8],rax
  4087a7:	xor    eax,eax
  4087a9:	mov    QWORD PTR [rbp-0x10],0x0
  4087b1:	lea    rdx,[rbp-0x10]
  4087b5:	mov    rax,QWORD PTR [rbp-0x18]
  4087b9:	mov    rsi,rdx
  4087bc:	mov    rdi,rax
  4087bf:	call   4086e1 <dim_record_field_available@@Base+0x48a>
  4087c4:	mov    rax,QWORD PTR [rbp-0x10]
  4087c8:	mov    rcx,QWORD PTR [rbp-0x8]
  4087cc:	xor    rcx,QWORD PTR fs:0x28
  4087d5:	je     4087dc <codadump_filter_create@@Base+0x52>
  4087d7:	call   403840 <__stack_chk_fail@plt>
  4087dc:	leave  
  4087dd:	ret    

00000000004087de <codadump_filter_remove@@Base>:
  4087de:	endbr64 
  4087e2:	push   rbp
  4087e3:	mov    rbp,rsp
  4087e6:	sub    rsp,0x10
  4087ea:	mov    QWORD PTR [rbp-0x8],rdi
  4087ee:	cmp    QWORD PTR [rbp-0x8],0x0
  4087f3:	jne    408814 <codadump_filter_remove@@Base+0x36>
  4087f5:	lea    rcx,[rip+0x6f34]        # 40f730 <_IO_stdin_used@@Base+0x730>
  4087fc:	mov    edx,0xc0
  408801:	lea    rsi,[rip+0x6df8]        # 40f600 <_IO_stdin_used@@Base+0x600>
  408808:	lea    rdi,[rip+0x6e6b]        # 40f67a <_IO_stdin_used@@Base+0x67a>
  40880f:	call   403860 <__assert_fail@plt>
  408814:	mov    rax,QWORD PTR [rbp-0x8]
  408818:	mov    rax,QWORD PTR [rax]
  40881b:	test   rax,rax
  40881e:	je     4088b3 <codadump_filter_remove@@Base+0xd5>
  408824:	mov    rax,QWORD PTR [rbp-0x8]
  408828:	mov    rax,QWORD PTR [rax]
  40882b:	mov    rax,QWORD PTR [rax+0x10]
  40882f:	test   rax,rax
  408832:	je     408847 <codadump_filter_remove@@Base+0x69>
  408834:	mov    rax,QWORD PTR [rbp-0x8]
  408838:	mov    rax,QWORD PTR [rax]
  40883b:	add    rax,0x10
  40883f:	mov    rdi,rax
  408842:	call   4087de <codadump_filter_remove@@Base>
  408847:	mov    rax,QWORD PTR [rbp-0x8]
  40884b:	mov    rax,QWORD PTR [rax]
  40884e:	mov    rax,QWORD PTR [rax+0x8]
  408852:	test   rax,rax
  408855:	je     40886a <codadump_filter_remove@@Base+0x8c>
  408857:	mov    rax,QWORD PTR [rbp-0x8]
  40885b:	mov    rax,QWORD PTR [rax]
  40885e:	add    rax,0x8
  408862:	mov    rdi,rax
  408865:	call   4087de <codadump_filter_remove@@Base>
  40886a:	mov    rax,QWORD PTR [rbp-0x8]
  40886e:	mov    rax,QWORD PTR [rax]
  408871:	mov    rax,QWORD PTR [rax]
  408874:	test   rax,rax
  408877:	je     408899 <codadump_filter_remove@@Base+0xbb>
  408879:	mov    rax,QWORD PTR [rbp-0x8]
  40887d:	mov    rax,QWORD PTR [rax]
  408880:	mov    rax,QWORD PTR [rax]
  408883:	mov    rdi,rax
  408886:	call   403680 <free@plt>
  40888b:	mov    rax,QWORD PTR [rbp-0x8]
  40888f:	mov    rax,QWORD PTR [rax]
  408892:	mov    QWORD PTR [rax],0x0
  408899:	mov    rax,QWORD PTR [rbp-0x8]
  40889d:	mov    rax,QWORD PTR [rax]
  4088a0:	mov    rdi,rax
  4088a3:	call   403680 <free@plt>
  4088a8:	mov    rax,QWORD PTR [rbp-0x8]
  4088ac:	mov    QWORD PTR [rax],0x0
  4088b3:	nop
  4088b4:	leave  
  4088b5:	ret    

00000000004088b6 <codadump_filter_get_fieldname@@Base>:
  4088b6:	endbr64 
  4088ba:	push   rbp
  4088bb:	mov    rbp,rsp
  4088be:	sub    rsp,0x10
  4088c2:	mov    QWORD PTR [rbp-0x8],rdi
  4088c6:	cmp    QWORD PTR [rbp-0x8],0x0
  4088cb:	jne    4088ec <codadump_filter_get_fieldname@@Base+0x36>
  4088cd:	lea    rcx,[rip+0x6e7c]        # 40f750 <_IO_stdin_used@@Base+0x750>
  4088d4:	mov    edx,0xd8
  4088d9:	lea    rsi,[rip+0x6d20]        # 40f600 <_IO_stdin_used@@Base+0x600>
  4088e0:	lea    rdi,[rip+0x6d93]        # 40f67a <_IO_stdin_used@@Base+0x67a>
  4088e7:	call   403860 <__assert_fail@plt>
  4088ec:	mov    rax,QWORD PTR [rbp-0x8]
  4088f0:	mov    rax,QWORD PTR [rax]
  4088f3:	leave  
  4088f4:	ret    

00000000004088f5 <codadump_filter_get_subfilter@@Base>:
  4088f5:	endbr64 
  4088f9:	push   rbp
  4088fa:	mov    rbp,rsp
  4088fd:	sub    rsp,0x10
  408901:	mov    QWORD PTR [rbp-0x8],rdi
  408905:	cmp    QWORD PTR [rbp-0x8],0x0
  40890a:	jne    40892b <codadump_filter_get_subfilter@@Base+0x36>
  40890c:	lea    rcx,[rip+0x6e5d]        # 40f770 <_IO_stdin_used@@Base+0x770>
  408913:	mov    edx,0xdf
  408918:	lea    rsi,[rip+0x6ce1]        # 40f600 <_IO_stdin_used@@Base+0x600>
  40891f:	lea    rdi,[rip+0x6d54]        # 40f67a <_IO_stdin_used@@Base+0x67a>
  408926:	call   403860 <__assert_fail@plt>
  40892b:	mov    rax,QWORD PTR [rbp-0x8]
  40892f:	mov    rax,QWORD PTR [rax+0x8]
  408933:	leave  
  408934:	ret    

0000000000408935 <codadump_filter_get_next_filter@@Base>:
  408935:	endbr64 
  408939:	push   rbp
  40893a:	mov    rbp,rsp
  40893d:	sub    rsp,0x10
  408941:	mov    QWORD PTR [rbp-0x8],rdi
  408945:	cmp    QWORD PTR [rbp-0x8],0x0
  40894a:	jne    40896b <codadump_filter_get_next_filter@@Base+0x36>
  40894c:	lea    rcx,[rip+0x6e4d]        # 40f7a0 <_IO_stdin_used@@Base+0x7a0>
  408953:	mov    edx,0xe6
  408958:	lea    rsi,[rip+0x6ca1]        # 40f600 <_IO_stdin_used@@Base+0x600>
  40895f:	lea    rdi,[rip+0x6d14]        # 40f67a <_IO_stdin_used@@Base+0x67a>
  408966:	call   403860 <__assert_fail@plt>
  40896b:	mov    rax,QWORD PTR [rbp-0x8]
  40896f:	mov    rax,QWORD PTR [rax+0x10]
  408973:	leave  
  408974:	ret    
  408975:	endbr64 
  408979:	push   rbp
  40897a:	mov    rbp,rsp
  40897d:	sub    rsp,0xf0
  408984:	mov    QWORD PTR [rbp-0xe8],rdi
  40898b:	mov    QWORD PTR [rbp-0xa8],rsi
  408992:	mov    QWORD PTR [rbp-0xa0],rdx
  408999:	mov    QWORD PTR [rbp-0x98],rcx
  4089a0:	mov    QWORD PTR [rbp-0x90],r8
  4089a7:	mov    QWORD PTR [rbp-0x88],r9
  4089ae:	test   al,al
  4089b0:	je     4089da <codadump_filter_get_next_filter@@Base+0xa5>
  4089b2:	vmovaps XMMWORD PTR [rbp-0x80],xmm0
  4089b7:	vmovaps XMMWORD PTR [rbp-0x70],xmm1
  4089bc:	vmovaps XMMWORD PTR [rbp-0x60],xmm2
  4089c1:	vmovaps XMMWORD PTR [rbp-0x50],xmm3
  4089c6:	vmovaps XMMWORD PTR [rbp-0x40],xmm4
  4089cb:	vmovaps XMMWORD PTR [rbp-0x30],xmm5
  4089d0:	vmovaps XMMWORD PTR [rbp-0x20],xmm6
  4089d5:	vmovaps XMMWORD PTR [rbp-0x10],xmm7
  4089da:	mov    rax,QWORD PTR fs:0x28
  4089e3:	mov    QWORD PTR [rbp-0xb8],rax
  4089ea:	xor    eax,eax
  4089ec:	mov    DWORD PTR [rbp-0xd0],0x8
  4089f6:	mov    DWORD PTR [rbp-0xcc],0x30
  408a00:	lea    rax,[rbp+0x10]
  408a04:	mov    QWORD PTR [rbp-0xc8],rax
  408a0b:	lea    rax,[rbp-0xb0]
  408a12:	mov    QWORD PTR [rbp-0xc0],rax
  408a19:	mov    rax,0x4144c0
  408a20:	mov    rax,QWORD PTR [rax]
  408a23:	lea    rdx,[rbp-0xd0]
  408a2a:	mov    rcx,QWORD PTR [rbp-0xe8]
  408a31:	mov    rsi,rcx
  408a34:	mov    rdi,rax
  408a37:	call   403b40 <vfprintf@plt>
  408a3c:	mov    DWORD PTR [rbp-0xd4],eax
  408a42:	mov    eax,DWORD PTR [rbp-0xd4]
  408a48:	mov    rsi,QWORD PTR [rbp-0xb8]
  408a4f:	xor    rsi,QWORD PTR fs:0x28
  408a58:	je     408a5f <codadump_filter_get_next_filter@@Base+0x12a>
  408a5a:	call   403840 <__stack_chk_fail@plt>
  408a5f:	leave  
  408a60:	ret    
  408a61:	endbr64 
  408a65:	push   rbp
  408a66:	mov    rbp,rsp
  408a69:	sub    rsp,0x20
  408a6d:	mov    QWORD PTR [rbp-0x18],rdi
  408a71:	mov    QWORD PTR [rbp-0x20],rsi
  408a75:	mov    QWORD PTR [rbp-0x8],0x0
  408a7d:	jmp    408b9e <codadump_filter_get_next_filter@@Base+0x269>
  408a82:	mov    rdx,QWORD PTR [rbp-0x8]
  408a86:	mov    rax,QWORD PTR [rbp-0x18]
  408a8a:	add    rax,rdx
  408a8d:	movzx  eax,BYTE PTR [rax]
  408a90:	mov    BYTE PTR [rbp-0x9],al
  408a93:	movsx  eax,BYTE PTR [rbp-0x9]
  408a97:	cmp    eax,0xc
  408a9a:	je     408ae3 <codadump_filter_get_next_filter@@Base+0x1ae>
  408a9c:	cmp    eax,0xc
  408a9f:	jg     408ab5 <codadump_filter_get_next_filter@@Base+0x180>
  408aa1:	cmp    eax,0x9
  408aa4:	je     408b22 <codadump_filter_get_next_filter@@Base+0x1ed>
  408aa6:	cmp    eax,0xa
  408aa9:	je     408af9 <codadump_filter_get_next_filter@@Base+0x1c4>
  408aab:	cmp    eax,0x8
  408aae:	je     408acd <codadump_filter_get_next_filter@@Base+0x198>
  408ab0:	jmp    408b5b <codadump_filter_get_next_filter@@Base+0x226>
  408ab5:	cmp    eax,0x22
  408ab8:	je     408b35 <codadump_filter_get_next_filter@@Base+0x200>
  408aba:	cmp    eax,0x5c
  408abd:	je     408b48 <codadump_filter_get_next_filter@@Base+0x213>
  408ac3:	cmp    eax,0xd
  408ac6:	je     408b0f <codadump_filter_get_next_filter@@Base+0x1da>
  408ac8:	jmp    408b5b <codadump_filter_get_next_filter@@Base+0x226>
  408acd:	lea    rdi,[rip+0x6cec]        # 40f7c0 <_IO_stdin_used@@Base+0x7c0>
  408ad4:	mov    eax,0x0
  408ad9:	call   408975 <codadump_filter_get_next_filter@@Base+0x40>
  408ade:	jmp    408b9a <codadump_filter_get_next_filter@@Base+0x265>
  408ae3:	lea    rdi,[rip+0x6cd9]        # 40f7c3 <_IO_stdin_used@@Base+0x7c3>
  408aea:	mov    eax,0x0
  408aef:	call   408975 <codadump_filter_get_next_filter@@Base+0x40>
  408af4:	jmp    408b9a <codadump_filter_get_next_filter@@Base+0x265>
  408af9:	lea    rdi,[rip+0x6cc6]        # 40f7c6 <_IO_stdin_used@@Base+0x7c6>
  408b00:	mov    eax,0x0
  408b05:	call   408975 <codadump_filter_get_next_filter@@Base+0x40>
  408b0a:	jmp    408b9a <codadump_filter_get_next_filter@@Base+0x265>
  408b0f:	lea    rdi,[rip+0x6cb3]        # 40f7c9 <_IO_stdin_used@@Base+0x7c9>
  408b16:	mov    eax,0x0
  408b1b:	call   408975 <codadump_filter_get_next_filter@@Base+0x40>
  408b20:	jmp    408b9a <codadump_filter_get_next_filter@@Base+0x265>
  408b22:	lea    rdi,[rip+0x6ca3]        # 40f7cc <_IO_stdin_used@@Base+0x7cc>
  408b29:	mov    eax,0x0
  408b2e:	call   408975 <codadump_filter_get_next_filter@@Base+0x40>
  408b33:	jmp    408b9a <codadump_filter_get_next_filter@@Base+0x265>
  408b35:	lea    rdi,[rip+0x6c93]        # 40f7cf <_IO_stdin_used@@Base+0x7cf>
  408b3c:	mov    eax,0x0
  408b41:	call   408975 <codadump_filter_get_next_filter@@Base+0x40>
  408b46:	jmp    408b9a <codadump_filter_get_next_filter@@Base+0x265>
  408b48:	lea    rdi,[rip+0x6c83]        # 40f7d2 <_IO_stdin_used@@Base+0x7d2>
  408b4f:	mov    eax,0x0
  408b54:	call   408975 <codadump_filter_get_next_filter@@Base+0x40>
  408b59:	jmp    408b9a <codadump_filter_get_next_filter@@Base+0x265>
  408b5b:	cmp    BYTE PTR [rbp-0x9],0x1f
  408b5f:	jle    408b80 <codadump_filter_get_next_filter@@Base+0x24b>
  408b61:	cmp    BYTE PTR [rbp-0x9],0x7f
  408b65:	je     408b80 <codadump_filter_get_next_filter@@Base+0x24b>
  408b67:	movsx  eax,BYTE PTR [rbp-0x9]
  408b6b:	mov    esi,eax
  408b6d:	lea    rdi,[rip+0x6c61]        # 40f7d5 <_IO_stdin_used@@Base+0x7d5>
  408b74:	mov    eax,0x0
  408b79:	call   408975 <codadump_filter_get_next_filter@@Base+0x40>
  408b7e:	jmp    408b9a <codadump_filter_get_next_filter@@Base+0x265>
  408b80:	movzx  eax,BYTE PTR [rbp-0x9]
  408b84:	movzx  eax,al
  408b87:	mov    esi,eax
  408b89:	lea    rdi,[rip+0x6c48]        # 40f7d8 <_IO_stdin_used@@Base+0x7d8>
  408b90:	mov    eax,0x0
  408b95:	call   408975 <codadump_filter_get_next_filter@@Base+0x40>
  408b9a:	inc    QWORD PTR [rbp-0x8]
  408b9e:	mov    rax,QWORD PTR [rbp-0x8]
  408ba2:	cmp    rax,QWORD PTR [rbp-0x20]
  408ba6:	jl     408a82 <codadump_filter_get_next_filter@@Base+0x14d>
  408bac:	nop
  408bad:	leave  
  408bae:	ret    
  408baf:	endbr64 
  408bb3:	push   rbp
  408bb4:	mov    rbp,rsp
  408bb7:	sub    rsp,0xe0
  408bbe:	mov    QWORD PTR [rbp-0xd8],rdi
  408bc5:	mov    rax,QWORD PTR fs:0x28
  408bce:	mov    QWORD PTR [rbp-0x8],rax
  408bd2:	xor    eax,eax
  408bd4:	mov    DWORD PTR [rbp-0xc4],0x0
  408bde:	mov    eax,DWORD PTR [rip+0xa764]        # 413348 <__bss_start@@Base+0xc>
  408be4:	test   eax,eax
  408be6:	je     408c7a <codadump_filter_get_next_filter@@Base+0x345>
  408bec:	lea    rdx,[rbp-0xc4]
  408bf3:	mov    rax,QWORD PTR [rbp-0xd8]
  408bfa:	mov    rsi,rdx
  408bfd:	mov    rdi,rax
  408c00:	call   4037e0 <coda_cursor_has_attributes@plt>
  408c05:	test   eax,eax
  408c07:	je     408c13 <codadump_filter_get_next_filter@@Base+0x2de>
  408c09:	mov    eax,0x0
  408c0e:	call   40c3f3 <handle_coda_error@@Base>
  408c13:	mov    eax,DWORD PTR [rbp-0xc4]
  408c19:	test   eax,eax
  408c1b:	je     408c7a <codadump_filter_get_next_filter@@Base+0x345>
  408c1d:	lea    rdi,[rip+0x6bbb]        # 40f7df <_IO_stdin_used@@Base+0x7df>
  408c24:	mov    eax,0x0
  408c29:	call   408975 <codadump_filter_get_next_filter@@Base+0x40>
  408c2e:	mov    rax,QWORD PTR [rbp-0xd8]
  408c35:	mov    rdi,rax
  408c38:	call   403a20 <coda_cursor_goto_attributes@plt>
  408c3d:	test   eax,eax
  408c3f:	je     408c4b <codadump_filter_get_next_filter@@Base+0x316>
  408c41:	mov    eax,0x0
  408c46:	call   40c3f3 <handle_coda_error@@Base>
  408c4b:	mov    rax,QWORD PTR [rbp-0xd8]
  408c52:	mov    rdi,rax
  408c55:	call   408baf <codadump_filter_get_next_filter@@Base+0x27a>
  408c5a:	mov    rax,QWORD PTR [rbp-0xd8]
  408c61:	mov    rdi,rax
  408c64:	call   403940 <coda_cursor_goto_parent@plt>
  408c69:	lea    rdi,[rip+0x6b78]        # 40f7e8 <_IO_stdin_used@@Base+0x7e8>
  408c70:	mov    eax,0x0
  408c75:	call   408975 <codadump_filter_get_next_filter@@Base+0x40>
  408c7a:	lea    rdx,[rbp-0xc8]
  408c81:	mov    rax,QWORD PTR [rbp-0xd8]
  408c88:	mov    rsi,rdx
  408c8b:	mov    rdi,rax
  408c8e:	call   4037f0 <coda_cursor_get_type_class@plt>
  408c93:	test   eax,eax
  408c95:	je     408ca1 <codadump_filter_get_next_filter@@Base+0x36c>
  408c97:	mov    eax,0x0
  408c9c:	call   40c3f3 <handle_coda_error@@Base>
  408ca1:	mov    eax,DWORD PTR [rbp-0xc8]
  408ca7:	cmp    eax,0x6
  408caa:	ja     409771 <codadump_filter_get_next_filter@@Base+0xe3c>
  408cb0:	mov    eax,eax
  408cb2:	lea    rdx,[rax*4+0x0]
  408cba:	lea    rax,[rip+0x6c47]        # 40f908 <_IO_stdin_used@@Base+0x908>
  408cc1:	mov    eax,DWORD PTR [rdx+rax*1]
  408cc4:	movsxd rdx,eax
  408cc7:	lea    rax,[rip+0x6c3a]        # 40f908 <_IO_stdin_used@@Base+0x908>
  408cce:	add    rax,rdx
  408cd1:	notrack jmp rax
  408cd4:	lea    rdi,[rip+0x6b16]        # 40f7f1 <_IO_stdin_used@@Base+0x7f1>
  408cdb:	mov    eax,0x0
  408ce0:	call   408975 <codadump_filter_get_next_filter@@Base+0x40>
  408ce5:	lea    rdx,[rbp-0xb0]
  408cec:	mov    rax,QWORD PTR [rbp-0xd8]
  408cf3:	mov    rsi,rdx
  408cf6:	mov    rdi,rax
  408cf9:	call   403720 <coda_cursor_get_num_elements@plt>
  408cfe:	test   eax,eax
  408d00:	je     408d0c <codadump_filter_get_next_filter@@Base+0x3d7>
  408d02:	mov    eax,0x0
  408d07:	call   40c3f3 <handle_coda_error@@Base>
  408d0c:	mov    rax,QWORD PTR [rbp-0xb0]
  408d13:	test   rax,rax
  408d16:	jle    408f8a <codadump_filter_get_next_filter@@Base+0x655>
  408d1c:	lea    rdx,[rbp-0xa8]
  408d23:	mov    rax,QWORD PTR [rbp-0xd8]
  408d2a:	mov    rsi,rdx
  408d2d:	mov    rdi,rax
  408d30:	call   403790 <coda_cursor_get_type@plt>
  408d35:	test   eax,eax
  408d37:	je     408d43 <codadump_filter_get_next_filter@@Base+0x40e>
  408d39:	mov    eax,0x0
  408d3e:	call   40c3f3 <handle_coda_error@@Base>
  408d43:	mov    rax,QWORD PTR [rbp-0xa8]
  408d4a:	lea    rdx,[rbp-0xc0]
  408d51:	mov    rsi,rdx
  408d54:	mov    rdi,rax
  408d57:	call   403a50 <coda_type_get_record_union_status@plt>
  408d5c:	test   eax,eax
  408d5e:	je     408d6a <codadump_filter_get_next_filter@@Base+0x435>
  408d60:	mov    eax,0x0
  408d65:	call   40c3f3 <handle_coda_error@@Base>
  408d6a:	mov    eax,DWORD PTR [rbp-0xc0]
  408d70:	test   eax,eax
  408d72:	je     408e32 <codadump_filter_get_next_filter@@Base+0x4fd>
  408d78:	lea    rdx,[rbp-0xa0]
  408d7f:	mov    rax,QWORD PTR [rbp-0xd8]
  408d86:	mov    rsi,rdx
  408d89:	mov    rdi,rax
  408d8c:	call   403b90 <coda_cursor_get_available_union_field_index@plt>
  408d91:	test   eax,eax
  408d93:	je     408d9f <codadump_filter_get_next_filter@@Base+0x46a>
  408d95:	mov    eax,0x0
  408d9a:	call   40c3f3 <handle_coda_error@@Base>
  408d9f:	mov    rcx,QWORD PTR [rbp-0xa0]
  408da6:	mov    rax,QWORD PTR [rbp-0xa8]
  408dad:	lea    rdx,[rbp-0x98]
  408db4:	mov    rsi,rcx
  408db7:	mov    rdi,rax
  408dba:	call   403c10 <coda_type_get_record_field_name@plt>
  408dbf:	test   eax,eax
  408dc1:	je     408dcd <codadump_filter_get_next_filter@@Base+0x498>
  408dc3:	mov    eax,0x0
  408dc8:	call   40c3f3 <handle_coda_error@@Base>
  408dcd:	mov    rdx,QWORD PTR [rbp-0xa0]
  408dd4:	mov    rax,QWORD PTR [rbp-0xd8]
  408ddb:	mov    rsi,rdx
  408dde:	mov    rdi,rax
  408de1:	call   4038e0 <coda_cursor_goto_record_field_by_index@plt>
  408de6:	test   eax,eax
  408de8:	je     408df4 <codadump_filter_get_next_filter@@Base+0x4bf>
  408dea:	mov    eax,0x0
  408def:	call   40c3f3 <handle_coda_error@@Base>
  408df4:	mov    rax,QWORD PTR [rbp-0x98]
  408dfb:	mov    rsi,rax
  408dfe:	lea    rdi,[rip+0x69ee]        # 40f7f3 <_IO_stdin_used@@Base+0x7f3>
  408e05:	mov    eax,0x0
  408e0a:	call   408975 <codadump_filter_get_next_filter@@Base+0x40>
  408e0f:	mov    rax,QWORD PTR [rbp-0xd8]
  408e16:	mov    rdi,rax
  408e19:	call   408baf <codadump_filter_get_next_filter@@Base+0x27a>
  408e1e:	mov    rax,QWORD PTR [rbp-0xd8]
  408e25:	mov    rdi,rax
  408e28:	call   403940 <coda_cursor_goto_parent@plt>
  408e2d:	jmp    408f8a <codadump_filter_get_next_filter@@Base+0x655>
  408e32:	mov    DWORD PTR [rbp-0xb8],0x1
  408e3c:	mov    rax,QWORD PTR [rbp-0xd8]
  408e43:	mov    rdi,rax
  408e46:	call   4038c0 <coda_cursor_goto_first_record_field@plt>
  408e4b:	test   eax,eax
  408e4d:	je     408e59 <codadump_filter_get_next_filter@@Base+0x524>
  408e4f:	mov    eax,0x0
  408e54:	call   40c3f3 <handle_coda_error@@Base>
  408e59:	mov    QWORD PTR [rbp-0xa0],0x0
  408e64:	jmp    408f64 <codadump_filter_get_next_filter@@Base+0x62f>
  408e69:	mov    rcx,QWORD PTR [rbp-0xa0]
  408e70:	mov    rax,QWORD PTR [rbp-0xa8]
  408e77:	lea    rdx,[rbp-0xbc]
  408e7e:	mov    rsi,rcx
  408e81:	mov    rdi,rax
  408e84:	call   4036c0 <coda_type_get_record_field_hidden_status@plt>
  408e89:	test   eax,eax
  408e8b:	je     408e97 <codadump_filter_get_next_filter@@Base+0x562>
  408e8d:	mov    eax,0x0
  408e92:	call   40c3f3 <handle_coda_error@@Base>
  408e97:	mov    eax,DWORD PTR [rbp-0xbc]
  408e9d:	test   eax,eax
  408e9f:	jne    408f1f <codadump_filter_get_next_filter@@Base+0x5ea>
  408ea1:	cmp    DWORD PTR [rbp-0xb8],0x0
  408ea8:	jne    408ebd <codadump_filter_get_next_filter@@Base+0x588>
  408eaa:	lea    rdi,[rip+0x6948]        # 40f7f9 <_IO_stdin_used@@Base+0x7f9>
  408eb1:	mov    eax,0x0
  408eb6:	call   408975 <codadump_filter_get_next_filter@@Base+0x40>
  408ebb:	jmp    408ec7 <codadump_filter_get_next_filter@@Base+0x592>
  408ebd:	mov    DWORD PTR [rbp-0xb8],0x0
  408ec7:	mov    rcx,QWORD PTR [rbp-0xa0]
  408ece:	mov    rax,QWORD PTR [rbp-0xa8]
  408ed5:	lea    rdx,[rbp-0x98]
  408edc:	mov    rsi,rcx
  408edf:	mov    rdi,rax
  408ee2:	call   403c10 <coda_type_get_record_field_name@plt>
  408ee7:	test   eax,eax
  408ee9:	je     408ef5 <codadump_filter_get_next_filter@@Base+0x5c0>
  408eeb:	mov    eax,0x0
  408ef0:	call   40c3f3 <handle_coda_error@@Base>
  408ef5:	mov    rax,QWORD PTR [rbp-0x98]
  408efc:	mov    rsi,rax
  408eff:	lea    rdi,[rip+0x68ed]        # 40f7f3 <_IO_stdin_used@@Base+0x7f3>
  408f06:	mov    eax,0x0
  408f0b:	call   408975 <codadump_filter_get_next_filter@@Base+0x40>
  408f10:	mov    rax,QWORD PTR [rbp-0xd8]
  408f17:	mov    rdi,rax
  408f1a:	call   408baf <codadump_filter_get_next_filter@@Base+0x27a>
  408f1f:	mov    rax,QWORD PTR [rbp-0xb0]
  408f26:	lea    rdx,[rax-0x1]
  408f2a:	mov    rax,QWORD PTR [rbp-0xa0]
  408f31:	cmp    rdx,rax
  408f34:	jle    408f53 <codadump_filter_get_next_filter@@Base+0x61e>
  408f36:	mov    rax,QWORD PTR [rbp-0xd8]
  408f3d:	mov    rdi,rax
  408f40:	call   403b10 <coda_cursor_goto_next_record_field@plt>
  408f45:	test   eax,eax
  408f47:	je     408f53 <codadump_filter_get_next_filter@@Base+0x61e>
  408f49:	mov    eax,0x0
  408f4e:	call   40c3f3 <handle_coda_error@@Base>
  408f53:	mov    rax,QWORD PTR [rbp-0xa0]
  408f5a:	inc    rax
  408f5d:	mov    QWORD PTR [rbp-0xa0],rax
  408f64:	mov    rdx,QWORD PTR [rbp-0xa0]
  408f6b:	mov    rax,QWORD PTR [rbp-0xb0]
  408f72:	cmp    rdx,rax
  408f75:	jl     408e69 <codadump_filter_get_next_filter@@Base+0x534>
  408f7b:	mov    rax,QWORD PTR [rbp-0xd8]
  408f82:	mov    rdi,rax
  408f85:	call   403940 <coda_cursor_goto_parent@plt>
  408f8a:	lea    rdi,[rip+0x686a]        # 40f7fb <_IO_stdin_used@@Base+0x7fb>
  408f91:	mov    eax,0x0
  408f96:	call   408975 <codadump_filter_get_next_filter@@Base+0x40>
  408f9b:	jmp    409771 <codadump_filter_get_next_filter@@Base+0xe3c>
  408fa0:	lea    rdi,[rip+0x6856]        # 40f7fd <_IO_stdin_used@@Base+0x7fd>
  408fa7:	mov    eax,0x0
  408fac:	call   408975 <codadump_filter_get_next_filter@@Base+0x40>
  408fb1:	lea    rdx,[rbp-0x70]
  408fb5:	lea    rcx,[rbp-0x98]
  408fbc:	mov    rax,QWORD PTR [rbp-0xd8]
  408fc3:	mov    rsi,rcx
  408fc6:	mov    rdi,rax
  408fc9:	call   403aa0 <coda_cursor_get_array_dim@plt>
  408fce:	test   eax,eax
  408fd0:	je     408fdc <codadump_filter_get_next_filter@@Base+0x6a7>
  408fd2:	mov    eax,0x0
  408fd7:	call   40c3f3 <handle_coda_error@@Base>
  408fdc:	mov    eax,DWORD PTR [rbp-0x98]
  408fe2:	test   eax,eax
  408fe4:	js     4090e5 <codadump_filter_get_next_filter@@Base+0x7b0>
  408fea:	mov    QWORD PTR [rbp-0x90],0x1
  408ff5:	mov    DWORD PTR [rbp-0xb4],0x0
  408fff:	jmp    409026 <codadump_filter_get_next_filter@@Base+0x6f1>
  409001:	mov    eax,DWORD PTR [rbp-0xb4]
  409007:	cdqe   
  409009:	mov    rax,QWORD PTR [rbp+rax*8-0x70]
  40900e:	mov    rdx,QWORD PTR [rbp-0x90]
  409015:	imul   rax,rdx
  409019:	mov    QWORD PTR [rbp-0x90],rax
  409020:	inc    DWORD PTR [rbp-0xb4]
  409026:	mov    eax,DWORD PTR [rbp-0x98]
  40902c:	cmp    DWORD PTR [rbp-0xb4],eax
  409032:	jl     409001 <codadump_filter_get_next_filter@@Base+0x6cc>
  409034:	cmp    QWORD PTR [rbp-0x90],0x0
  40903c:	jle    4090e5 <codadump_filter_get_next_filter@@Base+0x7b0>
  409042:	mov    rax,QWORD PTR [rbp-0xd8]
  409049:	mov    rdi,rax
  40904c:	call   403890 <coda_cursor_goto_first_array_element@plt>
  409051:	test   eax,eax
  409053:	je     40905f <codadump_filter_get_next_filter@@Base+0x72a>
  409055:	mov    eax,0x0
  40905a:	call   40c3f3 <handle_coda_error@@Base>
  40905f:	mov    DWORD PTR [rbp-0xb4],0x0
  409069:	jmp    4090c5 <codadump_filter_get_next_filter@@Base+0x790>
  40906b:	mov    rax,QWORD PTR [rbp-0xd8]
  409072:	mov    rdi,rax
  409075:	call   408baf <codadump_filter_get_next_filter@@Base+0x27a>
  40907a:	mov    eax,DWORD PTR [rbp-0xb4]
  409080:	cdqe   
  409082:	mov    rdx,QWORD PTR [rbp-0x90]
  409089:	dec    rdx
  40908c:	cmp    rax,rdx
  40908f:	jge    4090bf <codadump_filter_get_next_filter@@Base+0x78a>
  409091:	lea    rdi,[rip+0x6761]        # 40f7f9 <_IO_stdin_used@@Base+0x7f9>
  409098:	mov    eax,0x0
  40909d:	call   408975 <codadump_filter_get_next_filter@@Base+0x40>
  4090a2:	mov    rax,QWORD PTR [rbp-0xd8]
  4090a9:	mov    rdi,rax
  4090ac:	call   4039c0 <coda_cursor_goto_next_array_element@plt>
  4090b1:	test   eax,eax
  4090b3:	je     4090bf <codadump_filter_get_next_filter@@Base+0x78a>
  4090b5:	mov    eax,0x0
  4090ba:	call   40c3f3 <handle_coda_error@@Base>
  4090bf:	inc    DWORD PTR [rbp-0xb4]
  4090c5:	mov    eax,DWORD PTR [rbp-0xb4]
  4090cb:	cdqe   
  4090cd:	cmp    QWORD PTR [rbp-0x90],rax
  4090d4:	jg     40906b <codadump_filter_get_next_filter@@Base+0x736>
  4090d6:	mov    rax,QWORD PTR [rbp-0xd8]
  4090dd:	mov    rdi,rax
  4090e0:	call   403940 <coda_cursor_goto_parent@plt>
  4090e5:	lea    rdi,[rip+0x6713]        # 40f7ff <_IO_stdin_used@@Base+0x7ff>
  4090ec:	mov    eax,0x0
  4090f1:	call   408975 <codadump_filter_get_next_filter@@Base+0x40>
  4090f6:	jmp    409771 <codadump_filter_get_next_filter@@Base+0xe3c>
  4090fb:	lea    rdx,[rbp-0xa0]
  409102:	mov    rax,QWORD PTR [rbp-0xd8]
  409109:	mov    rsi,rdx
  40910c:	mov    rdi,rax
  40910f:	call   403900 <coda_cursor_get_read_type@plt>
  409114:	test   eax,eax
  409116:	je     409122 <codadump_filter_get_next_filter@@Base+0x7ed>
  409118:	mov    eax,0x0
  40911d:	call   40c3f3 <handle_coda_error@@Base>
  409122:	mov    eax,DWORD PTR [rbp-0xa0]
  409128:	inc    eax
  40912a:	cmp    eax,0xd
  40912d:	ja     409770 <codadump_filter_get_next_filter@@Base+0xe3b>
  409133:	mov    eax,eax
  409135:	lea    rdx,[rax*4+0x0]
  40913d:	lea    rax,[rip+0x67e0]        # 40f924 <_IO_stdin_used@@Base+0x924>
  409144:	mov    eax,DWORD PTR [rdx+rax*1]
  409147:	movsxd rdx,eax
  40914a:	lea    rax,[rip+0x67d3]        # 40f924 <_IO_stdin_used@@Base+0x924>
  409151:	add    rax,rdx
  409154:	notrack jmp rax
  409157:	lea    rdx,[rbp-0x98]
  40915e:	mov    rax,QWORD PTR [rbp-0xd8]
  409165:	mov    rsi,rdx
  409168:	mov    rdi,rax
  40916b:	call   403a30 <coda_cursor_read_char@plt>
  409170:	test   eax,eax
  409172:	je     40917e <codadump_filter_get_next_filter@@Base+0x849>
  409174:	mov    eax,0x0
  409179:	call   40c3f3 <handle_coda_error@@Base>
  40917e:	lea    rdi,[rip+0x667c]        # 40f801 <_IO_stdin_used@@Base+0x801>
  409185:	mov    eax,0x0
  40918a:	call   408975 <codadump_filter_get_next_filter@@Base+0x40>
  40918f:	lea    rax,[rbp-0x98]
  409196:	mov    esi,0x1
  40919b:	mov    rdi,rax
  40919e:	call   408a61 <codadump_filter_get_next_filter@@Base+0x12c>
  4091a3:	lea    rdi,[rip+0x6657]        # 40f801 <_IO_stdin_used@@Base+0x801>
  4091aa:	mov    eax,0x0
  4091af:	call   408975 <codadump_filter_get_next_filter@@Base+0x40>
  4091b4:	jmp    4095a6 <codadump_filter_get_next_filter@@Base+0xc71>
  4091b9:	lea    rdx,[rbp-0x98]
  4091c0:	mov    rax,QWORD PTR [rbp-0xd8]
  4091c7:	mov    rsi,rdx
  4091ca:	mov    rdi,rax
  4091cd:	call   403980 <coda_cursor_get_string_length@plt>
  4091d2:	test   eax,eax
  4091d4:	je     4091e0 <codadump_filter_get_next_filter@@Base+0x8ab>
  4091d6:	mov    eax,0x0
  4091db:	call   40c3f3 <handle_coda_error@@Base>
  4091e0:	mov    rax,QWORD PTR [rbp-0x98]
  4091e7:	inc    rax
  4091ea:	mov    rdi,rax
  4091ed:	call   403a00 <malloc@plt>
  4091f2:	mov    QWORD PTR [rbp-0x88],rax
  4091f9:	cmp    QWORD PTR [rbp-0x88],0x0
  409201:	jne    40923d <codadump_filter_get_next_filter@@Base+0x908>
  409203:	mov    rax,QWORD PTR [rbp-0x98]
  40920a:	inc    rax
  40920d:	mov    r8d,0x12f
  409213:	lea    rcx,[rip+0x65ee]        # 40f808 <_IO_stdin_used@@Base+0x808>
  40921a:	mov    rdx,rax
  40921d:	lea    rsi,[rip+0x664c]        # 40f870 <_IO_stdin_used@@Base+0x870>
  409224:	mov    edi,0xffffffff
  409229:	mov    eax,0x0
  40922e:	call   4036e0 <coda_set_error@plt>
  409233:	mov    eax,0x0
  409238:	call   40c3f3 <handle_coda_error@@Base>
  40923d:	mov    rax,QWORD PTR [rbp-0x98]
  409244:	lea    rdx,[rax+0x1]
  409248:	mov    rcx,QWORD PTR [rbp-0x88]
  40924f:	mov    rax,QWORD PTR [rbp-0xd8]
  409256:	mov    rsi,rcx
  409259:	mov    rdi,rax
  40925c:	call   403930 <coda_cursor_read_string@plt>
  409261:	test   eax,eax
  409263:	je     40926f <codadump_filter_get_next_filter@@Base+0x93a>
  409265:	mov    eax,0x0
  40926a:	call   40c3f3 <handle_coda_error@@Base>
  40926f:	lea    rdi,[rip+0x658b]        # 40f801 <_IO_stdin_used@@Base+0x801>
  409276:	mov    eax,0x0
  40927b:	call   408975 <codadump_filter_get_next_filter@@Base+0x40>
  409280:	mov    rdx,QWORD PTR [rbp-0x98]
  409287:	mov    rax,QWORD PTR [rbp-0x88]
  40928e:	mov    rsi,rdx
  409291:	mov    rdi,rax
  409294:	call   408a61 <codadump_filter_get_next_filter@@Base+0x12c>
  409299:	mov    rax,QWORD PTR [rbp-0x98]
  4092a0:	mov    rsi,rax
  4092a3:	lea    rdi,[rip+0x6557]        # 40f801 <_IO_stdin_used@@Base+0x801>
  4092aa:	mov    eax,0x0
  4092af:	call   408975 <codadump_filter_get_next_filter@@Base+0x40>
  4092b4:	mov    rax,QWORD PTR [rbp-0x88]
  4092bb:	mov    rdi,rax
  4092be:	call   403680 <free@plt>
  4092c3:	jmp    4095a6 <codadump_filter_get_next_filter@@Base+0xc71>
  4092c8:	lea    rdx,[rbp-0x98]
  4092cf:	mov    rax,QWORD PTR [rbp-0xd8]
  4092d6:	mov    rsi,rdx
  4092d9:	mov    rdi,rax
  4092dc:	call   403b50 <coda_cursor_get_bit_size@plt>
  4092e1:	test   eax,eax
  4092e3:	je     4092ef <codadump_filter_get_next_filter@@Base+0x9ba>
  4092e5:	mov    eax,0x0
  4092ea:	call   40c3f3 <handle_coda_error@@Base>
  4092ef:	mov    rax,QWORD PTR [rbp-0x98]
  4092f6:	sar    rax,0x3
  4092fa:	mov    rdx,rax
  4092fd:	mov    rax,QWORD PTR [rbp-0x98]
  409304:	and    eax,0x7
  409307:	test   rax,rax
  40930a:	je     409313 <codadump_filter_get_next_filter@@Base+0x9de>
  40930c:	mov    eax,0x1
  409311:	jmp    409318 <codadump_filter_get_next_filter@@Base+0x9e3>
  409313:	mov    eax,0x0
  409318:	add    rax,rdx
  40931b:	mov    QWORD PTR [rbp-0x80],rax
  40931f:	mov    rax,QWORD PTR [rbp-0x80]
  409323:	mov    rdi,rax
  409326:	call   403a00 <malloc@plt>
  40932b:	mov    QWORD PTR [rbp-0x78],rax
  40932f:	cmp    QWORD PTR [rbp-0x78],0x0
  409334:	jne    40936a <codadump_filter_get_next_filter@@Base+0xa35>
  409336:	mov    rax,QWORD PTR [rbp-0x80]
  40933a:	mov    r8d,0x14e
  409340:	lea    rcx,[rip+0x64c1]        # 40f808 <_IO_stdin_used@@Base+0x808>
  409347:	mov    rdx,rax
  40934a:	lea    rsi,[rip+0x651f]        # 40f870 <_IO_stdin_used@@Base+0x870>
  409351:	mov    edi,0xffffffff
  409356:	mov    eax,0x0
  40935b:	call   4036e0 <coda_set_error@plt>
  409360:	mov    eax,0x0
  409365:	call   40c3f3 <handle_coda_error@@Base>
  40936a:	mov    rdx,QWORD PTR [rbp-0x98]
  409371:	mov    rsi,QWORD PTR [rbp-0x78]
  409375:	mov    rax,QWORD PTR [rbp-0xd8]
  40937c:	mov    rcx,rdx
  40937f:	mov    edx,0x0
  409384:	mov    rdi,rax
  409387:	call   403c20 <coda_cursor_read_bits@plt>
  40938c:	test   eax,eax
  40938e:	je     40939a <codadump_filter_get_next_filter@@Base+0xa65>
  409390:	mov    eax,0x0
  409395:	call   40c3f3 <handle_coda_error@@Base>
  40939a:	lea    rdi,[rip+0x6460]        # 40f801 <_IO_stdin_used@@Base+0x801>
  4093a1:	mov    eax,0x0
  4093a6:	call   408975 <codadump_filter_get_next_filter@@Base+0x40>
  4093ab:	mov    rdx,QWORD PTR [rbp-0x80]
  4093af:	mov    rax,QWORD PTR [rbp-0x78]
  4093b3:	mov    rsi,rdx
  4093b6:	mov    rdi,rax
  4093b9:	call   408a61 <codadump_filter_get_next_filter@@Base+0x12c>
  4093be:	lea    rdi,[rip+0x643c]        # 40f801 <_IO_stdin_used@@Base+0x801>
  4093c5:	mov    eax,0x0
  4093ca:	call   408975 <codadump_filter_get_next_filter@@Base+0x40>
  4093cf:	mov    rax,QWORD PTR [rbp-0x78]
  4093d3:	mov    rdi,rax
  4093d6:	call   403680 <free@plt>
  4093db:	jmp    4095a6 <codadump_filter_get_next_filter@@Base+0xc71>
  4093e0:	lea    rdx,[rbp-0x98]
  4093e7:	mov    rax,QWORD PTR [rbp-0xd8]
  4093ee:	mov    rsi,rdx
  4093f1:	mov    rdi,rax
  4093f4:	call   403bb0 <coda_cursor_read_int32@plt>
  4093f9:	test   eax,eax
  4093fb:	je     409407 <codadump_filter_get_next_filter@@Base+0xad2>
  4093fd:	mov    eax,0x0
  409402:	call   40c3f3 <handle_coda_error@@Base>
  409407:	mov    eax,DWORD PTR [rbp-0x98]
  40940d:	cdqe   
  40940f:	mov    rsi,rax
  409412:	lea    rdi,[rip+0x648c]        # 40f8a5 <_IO_stdin_used@@Base+0x8a5>
  409419:	mov    eax,0x0
  40941e:	call   408975 <codadump_filter_get_next_filter@@Base+0x40>
  409423:	jmp    4095a6 <codadump_filter_get_next_filter@@Base+0xc71>
  409428:	lea    rdx,[rbp-0x98]
  40942f:	mov    rax,QWORD PTR [rbp-0xd8]
  409436:	mov    rsi,rdx
  409439:	mov    rdi,rax
  40943c:	call   403760 <coda_cursor_read_uint32@plt>
  409441:	test   eax,eax
  409443:	je     40944f <codadump_filter_get_next_filter@@Base+0xb1a>
  409445:	mov    eax,0x0
  40944a:	call   40c3f3 <handle_coda_error@@Base>
  40944f:	mov    eax,DWORD PTR [rbp-0x98]
  409455:	mov    eax,eax
  409457:	mov    rsi,rax
  40945a:	lea    rdi,[rip+0x6448]        # 40f8a9 <_IO_stdin_used@@Base+0x8a9>
  409461:	mov    eax,0x0
  409466:	call   408975 <codadump_filter_get_next_filter@@Base+0x40>
  40946b:	jmp    4095a6 <codadump_filter_get_next_filter@@Base+0xc71>
  409470:	lea    rdx,[rbp-0x98]
  409477:	mov    rax,QWORD PTR [rbp-0xd8]
  40947e:	mov    rsi,rdx
  409481:	mov    rdi,rax
  409484:	call   403ad0 <coda_cursor_read_int64@plt>
  409489:	test   eax,eax
  40948b:	je     409497 <codadump_filter_get_next_filter@@Base+0xb62>
  40948d:	mov    eax,0x0
  409492:	call   40c3f3 <handle_coda_error@@Base>
  409497:	mov    rax,QWORD PTR [rbp-0x98]
  40949e:	lea    rdx,[rbp-0x30]
  4094a2:	mov    rsi,rdx
  4094a5:	mov    rdi,rax
  4094a8:	call   403c30 <coda_str64@plt>
  4094ad:	lea    rax,[rbp-0x30]
  4094b1:	mov    rsi,rax
  4094b4:	lea    rdi,[rip+0x63f2]        # 40f8ad <_IO_stdin_used@@Base+0x8ad>
  4094bb:	mov    eax,0x0
  4094c0:	call   408975 <codadump_filter_get_next_filter@@Base+0x40>
  4094c5:	jmp    4095a6 <codadump_filter_get_next_filter@@Base+0xc71>
  4094ca:	lea    rdx,[rbp-0x98]
  4094d1:	mov    rax,QWORD PTR [rbp-0xd8]
  4094d8:	mov    rsi,rdx
  4094db:	mov    rdi,rax
  4094de:	call   403990 <coda_cursor_read_uint64@plt>
  4094e3:	test   eax,eax
  4094e5:	je     4094f1 <codadump_filter_get_next_filter@@Base+0xbbc>
  4094e7:	mov    eax,0x0
  4094ec:	call   40c3f3 <handle_coda_error@@Base>
  4094f1:	mov    rax,QWORD PTR [rbp-0x98]
  4094f8:	lea    rdx,[rbp-0x30]
  4094fc:	mov    rsi,rdx
  4094ff:	mov    rdi,rax
  409502:	call   403730 <coda_str64u@plt>
  409507:	lea    rax,[rbp-0x30]
  40950b:	mov    rsi,rax
  40950e:	lea    rdi,[rip+0x6398]        # 40f8ad <_IO_stdin_used@@Base+0x8ad>
  409515:	mov    eax,0x0
  40951a:	call   408975 <codadump_filter_get_next_filter@@Base+0x40>
  40951f:	jmp    4095a6 <codadump_filter_get_next_filter@@Base+0xc71>
  409524:	lea    rdx,[rbp-0x98]
  40952b:	mov    rax,QWORD PTR [rbp-0xd8]
  409532:	mov    rsi,rdx
  409535:	mov    rdi,rax
  409538:	call   4039a0 <coda_cursor_read_double@plt>
  40953d:	test   eax,eax
  40953f:	je     40954b <codadump_filter_get_next_filter@@Base+0xc16>
  409541:	mov    eax,0x0
  409546:	call   40c3f3 <handle_coda_error@@Base>
  40954b:	mov    eax,DWORD PTR [rbp-0xa0]
  409551:	cmp    eax,0x8
  409554:	jne    409575 <codadump_filter_get_next_filter@@Base+0xc40>
  409556:	mov    rax,QWORD PTR [rbp-0x98]
  40955d:	vmovq  xmm0,rax
  409562:	lea    rdi,[rip+0x6347]        # 40f8b0 <_IO_stdin_used@@Base+0x8b0>
  409569:	mov    eax,0x1
  40956e:	call   408975 <codadump_filter_get_next_filter@@Base+0x40>
  409573:	jmp    4095a6 <codadump_filter_get_next_filter@@Base+0xc71>
  409575:	mov    rax,QWORD PTR [rbp-0x98]
  40957c:	vmovq  xmm0,rax
  409581:	lea    rdi,[rip+0x632d]        # 40f8b5 <_IO_stdin_used@@Base+0x8b5>
  409588:	mov    eax,0x1
  40958d:	call   408975 <codadump_filter_get_next_filter@@Base+0x40>
  409592:	jmp    4095a6 <codadump_filter_get_next_filter@@Base+0xc71>
  409594:	lea    rdi,[rip+0x6320]        # 40f8bb <_IO_stdin_used@@Base+0x8bb>
  40959b:	mov    eax,0x0
  4095a0:	call   408975 <codadump_filter_get_next_filter@@Base+0x40>
  4095a5:	nop
  4095a6:	jmp    409770 <codadump_filter_get_next_filter@@Base+0xe3b>
  4095ab:	lea    rdx,[rbp-0xa8]
  4095b2:	mov    rax,QWORD PTR [rbp-0xd8]
  4095b9:	mov    rsi,rdx
  4095bc:	mov    rdi,rax
  4095bf:	call   403880 <coda_cursor_get_special_type@plt>
  4095c4:	test   eax,eax
  4095c6:	je     4095d2 <codadump_filter_get_next_filter@@Base+0xc9d>
  4095c8:	mov    eax,0x0
  4095cd:	call   40c3f3 <handle_coda_error@@Base>
  4095d2:	mov    eax,DWORD PTR [rbp-0xa8]
  4095d8:	cmp    eax,0x1
  4095db:	je     40960a <codadump_filter_get_next_filter@@Base+0xcd5>
  4095dd:	test   eax,eax
  4095df:	je     4095f4 <codadump_filter_get_next_filter@@Base+0xcbf>
  4095e1:	cmp    eax,0x2
  4095e4:	je     409653 <codadump_filter_get_next_filter@@Base+0xd1e>
  4095e6:	cmp    eax,0x3
  4095e9:	je     409716 <codadump_filter_get_next_filter@@Base+0xde1>
  4095ef:	jmp    409771 <codadump_filter_get_next_filter@@Base+0xe3c>
  4095f4:	lea    rdi,[rip+0x62c0]        # 40f8bb <_IO_stdin_used@@Base+0x8bb>
  4095fb:	mov    eax,0x0
  409600:	call   408975 <codadump_filter_get_next_filter@@Base+0x40>
  409605:	jmp    40976e <codadump_filter_get_next_filter@@Base+0xe39>
  40960a:	lea    rdx,[rbp-0x98]
  409611:	mov    rax,QWORD PTR [rbp-0xd8]
  409618:	mov    rsi,rdx
  40961b:	mov    rdi,rax
  40961e:	call   4039a0 <coda_cursor_read_double@plt>
  409623:	test   eax,eax
  409625:	je     409631 <codadump_filter_get_next_filter@@Base+0xcfc>
  409627:	mov    eax,0x0
  40962c:	call   40c3f3 <handle_coda_error@@Base>
  409631:	mov    rax,QWORD PTR [rbp-0x98]
  409638:	vmovq  xmm0,rax
  40963d:	lea    rdi,[rip+0x6271]        # 40f8b5 <_IO_stdin_used@@Base+0x8b5>
  409644:	mov    eax,0x1
  409649:	call   408975 <codadump_filter_get_next_filter@@Base+0x40>
  40964e:	jmp    40976e <codadump_filter_get_next_filter@@Base+0xe39>
  409653:	lea    rdx,[rbp-0x98]
  40965a:	mov    rax,QWORD PTR [rbp-0xd8]
  409661:	mov    rsi,rdx
  409664:	mov    rdi,rax
  409667:	call   4039a0 <coda_cursor_read_double@plt>
  40966c:	test   eax,eax
  40966e:	je     40967a <codadump_filter_get_next_filter@@Base+0xd45>
  409670:	mov    eax,0x0
  409675:	call   40c3f3 <handle_coda_error@@Base>
  40967a:	mov    rax,QWORD PTR [rbp-0x98]
  409681:	vmovq  xmm0,rax
  409686:	call   4039b0 <coda_isNaN@plt>
  40968b:	test   eax,eax
  40968d:	jne    4096a4 <codadump_filter_get_next_filter@@Base+0xd6f>
  40968f:	mov    rax,QWORD PTR [rbp-0x98]
  409696:	vmovq  xmm0,rax
  40969b:	call   4037a0 <coda_isInf@plt>
  4096a0:	test   eax,eax
  4096a2:	je     4096c6 <codadump_filter_get_next_filter@@Base+0xd91>
  4096a4:	mov    rax,QWORD PTR [rbp-0x98]
  4096ab:	vmovq  xmm0,rax
  4096b0:	lea    rdi,[rip+0x61fe]        # 40f8b5 <_IO_stdin_used@@Base+0x8b5>
  4096b7:	mov    eax,0x1
  4096bc:	call   408975 <codadump_filter_get_next_filter@@Base+0x40>
  4096c1:	jmp    40976e <codadump_filter_get_next_filter@@Base+0xe39>
  4096c6:	mov    rax,QWORD PTR [rbp-0x98]
  4096cd:	lea    rdx,[rbp-0x30]
  4096d1:	mov    rsi,rdx
  4096d4:	lea    rdi,[rip+0x61e5]        # 40f8c0 <_IO_stdin_used@@Base+0x8c0>
  4096db:	vmovq  xmm0,rax
  4096e0:	call   403700 <coda_time_double_to_string@plt>
  4096e5:	test   eax,eax
  4096e7:	je     4096fc <codadump_filter_get_next_filter@@Base+0xdc7>
  4096e9:	lea    rdi,[rip+0x61ed]        # 40f8dd <_IO_stdin_used@@Base+0x8dd>
  4096f0:	mov    eax,0x0
  4096f5:	call   408975 <codadump_filter_get_next_filter@@Base+0x40>
  4096fa:	jmp    40976e <codadump_filter_get_next_filter@@Base+0xe39>
  4096fc:	lea    rax,[rbp-0x30]
  409700:	mov    rsi,rax
  409703:	lea    rdi,[rip+0x61ee]        # 40f8f8 <_IO_stdin_used@@Base+0x8f8>
  40970a:	mov    eax,0x0
  40970f:	call   408975 <codadump_filter_get_next_filter@@Base+0x40>
  409714:	jmp    40976e <codadump_filter_get_next_filter@@Base+0xe39>
  409716:	lea    rdx,[rbp-0x98]
  40971d:	lea    rcx,[rbp-0xa0]
  409724:	mov    rax,QWORD PTR [rbp-0xd8]
  40972b:	mov    rsi,rcx
  40972e:	mov    rdi,rax
  409731:	call   403a60 <coda_cursor_read_complex_double_split@plt>
  409736:	test   eax,eax
  409738:	je     409744 <codadump_filter_get_next_filter@@Base+0xe0f>
  40973a:	mov    eax,0x0
  40973f:	call   40c3f3 <handle_coda_error@@Base>
  409744:	vmovsd xmm0,QWORD PTR [rbp-0x98]
  40974c:	mov    rax,QWORD PTR [rbp-0xa0]
  409753:	vmovapd xmm1,xmm0
  409757:	vmovq  xmm0,rax
  40975c:	lea    rdi,[rip+0x619a]        # 40f8fd <_IO_stdin_used@@Base+0x8fd>
  409763:	mov    eax,0x2
  409768:	call   408975 <codadump_filter_get_next_filter@@Base+0x40>
  40976d:	nop
  40976e:	jmp    409771 <codadump_filter_get_next_filter@@Base+0xe3c>
  409770:	nop
  409771:	mov    eax,DWORD PTR [rbp-0xc4]
  409777:	test   eax,eax
  409779:	je     40978c <codadump_filter_get_next_filter@@Base+0xe57>
  40977b:	lea    rdi,[rip+0x6079]        # 40f7fb <_IO_stdin_used@@Base+0x7fb>
  409782:	mov    eax,0x0
  409787:	call   408975 <codadump_filter_get_next_filter@@Base+0x40>
  40978c:	nop
  40978d:	mov    rax,QWORD PTR [rbp-0x8]
  409791:	xor    rax,QWORD PTR fs:0x28
  40979a:	je     4097a1 <codadump_filter_get_next_filter@@Base+0xe6c>
  40979c:	call   403840 <__stack_chk_fail@plt>
  4097a1:	leave  
  4097a2:	ret    

00000000004097a3 <print_json_data@@Base>:
  4097a3:	endbr64 
  4097a7:	push   rbp
  4097a8:	mov    rbp,rsp
  4097ab:	sub    rsp,0x340
  4097b2:	mov    DWORD PTR [rbp-0x334],edi
  4097b8:	mov    rax,QWORD PTR fs:0x28
  4097c1:	mov    QWORD PTR [rbp-0x8],rax
  4097c5:	xor    eax,eax
  4097c7:	mov    eax,DWORD PTR [rbp-0x334]
  4097cd:	mov    DWORD PTR [rip+0x9b75],eax        # 413348 <__bss_start@@Base+0xc>
  4097d3:	mov    rax,0x413380
  4097da:	mov    rax,QWORD PTR [rax]
  4097dd:	lea    rdx,[rbp-0x328]
  4097e4:	mov    rsi,rdx
  4097e7:	mov    rdi,rax
  4097ea:	call   4036f0 <coda_open@plt>
  4097ef:	mov    DWORD PTR [rbp-0x32c],eax
  4097f5:	cmp    DWORD PTR [rbp-0x32c],0x0
  4097fc:	je     409840 <print_json_data@@Base+0x9d>
  4097fe:	call   403bf0 <coda_get_errno@plt>
  409803:	mov    eax,DWORD PTR [rax]
  409805:	cmp    eax,0xffffffeb
  409808:	jne    409840 <print_json_data@@Base+0x9d>
  40980a:	mov    edi,0x0
  40980f:	call   403740 <coda_set_option_use_mmap@plt>
  409814:	mov    rax,0x413380
  40981b:	mov    rax,QWORD PTR [rax]
  40981e:	lea    rdx,[rbp-0x328]
  409825:	mov    rsi,rdx
  409828:	mov    rdi,rax
  40982b:	call   4036f0 <coda_open@plt>
  409830:	mov    DWORD PTR [rbp-0x32c],eax
  409836:	mov    edi,0x1
  40983b:	call   403740 <coda_set_option_use_mmap@plt>
  409840:	cmp    DWORD PTR [rbp-0x32c],0x0
  409847:	je     409853 <print_json_data@@Base+0xb0>
  409849:	mov    eax,0x0
  40984e:	call   40c3f3 <handle_coda_error@@Base>
  409853:	mov    rdx,QWORD PTR [rbp-0x328]
  40985a:	lea    rax,[rbp-0x320]
  409861:	mov    rsi,rdx
  409864:	mov    rdi,rax
  409867:	call   4038b0 <coda_cursor_set_product@plt>
  40986c:	test   eax,eax
  40986e:	je     40987a <print_json_data@@Base+0xd7>
  409870:	mov    eax,0x0
  409875:	call   40c3f3 <handle_coda_error@@Base>
  40987a:	mov    rax,0x4144e0
  409881:	mov    rax,QWORD PTR [rax]
  409884:	test   rax,rax
  409887:	je     4098be <print_json_data@@Base+0x11b>
  409889:	mov    rax,0x4144e0
  409890:	mov    rdx,QWORD PTR [rax]
  409893:	lea    rax,[rbp-0x320]
  40989a:	mov    rsi,rdx
  40989d:	mov    rdi,rax
  4098a0:	call   403ae0 <coda_cursor_goto@plt>
  4098a5:	mov    DWORD PTR [rbp-0x32c],eax
  4098ab:	cmp    DWORD PTR [rbp-0x32c],0x0
  4098b2:	je     4098be <print_json_data@@Base+0x11b>
  4098b4:	mov    eax,0x0
  4098b9:	call   40c3f3 <handle_coda_error@@Base>
  4098be:	mov    edi,0x0
  4098c3:	call   4036a0 <coda_set_option_perform_boundary_checks@plt>
  4098c8:	lea    rax,[rbp-0x320]
  4098cf:	mov    rdi,rax
  4098d2:	call   408baf <codadump_filter_get_next_filter@@Base+0x27a>
  4098d7:	lea    rdi,[rip+0x607e]        # 40f95c <_IO_stdin_used@@Base+0x95c>
  4098de:	mov    eax,0x0
  4098e3:	call   408975 <codadump_filter_get_next_filter@@Base+0x40>
  4098e8:	mov    rax,QWORD PTR [rbp-0x328]
  4098ef:	mov    rdi,rax
  4098f2:	call   403ac0 <coda_close@plt>
  4098f7:	nop
  4098f8:	mov    rax,QWORD PTR [rbp-0x8]
  4098fc:	xor    rax,QWORD PTR fs:0x28
  409905:	je     40990c <print_json_data@@Base+0x169>
  409907:	call   403840 <__stack_chk_fail@plt>
  40990c:	leave  
  40990d:	ret    
  40990e:	endbr64 
  409912:	push   rbp
  409913:	mov    rbp,rsp
  409916:	sub    rsp,0x20
  40991a:	mov    QWORD PTR [rbp-0x18],rdi
  40991e:	mov    DWORD PTR [rbp-0x1c],esi
  409921:	mov    eax,DWORD PTR [rbp-0x1c]
  409924:	movsxd rdx,eax
  409927:	mov    rax,rdx
  40992a:	shl    rax,0x2
  40992e:	add    rax,rdx
  409931:	shl    rax,0x4
  409935:	lea    rdx,[rax+0x520]
  40993c:	mov    rax,0x413380
  409943:	add    rax,rdx
  409946:	add    rax,0x14
  40994a:	mov    QWORD PTR [rbp-0x8],rax
  40994e:	mov    DWORD PTR [rbp-0xc],0x0
  409955:	jmp    409a84 <print_json_data@@Base+0x2e1>
  40995a:	cmp    DWORD PTR [rbp-0xc],0x0
  40995e:	jle    409971 <print_json_data@@Base+0x1ce>
  409960:	mov    rax,QWORD PTR [rbp-0x18]
  409964:	mov    rsi,rax
  409967:	mov    edi,0x2c
  40996c:	call   4038d0 <fputc@plt>
  409971:	mov    rax,0x413378
  409978:	mov    eax,DWORD PTR [rax]
  40997a:	test   eax,eax
  40997c:	je     409a32 <print_json_data@@Base+0x28f>
  409982:	mov    rax,QWORD PTR [rbp-0x8]
  409986:	mov    edx,DWORD PTR [rax]
  409988:	mov    eax,DWORD PTR [rbp-0xc]
  40998b:	add    edx,eax
  40998d:	mov    rax,0x414500
  409994:	movsxd rdx,edx
  409997:	add    rdx,0x10
  40999b:	mov    eax,DWORD PTR [rax+rdx*4+0x8]
  40999f:	test   eax,eax
  4099a1:	je     4099fc <print_json_data@@Base+0x259>
  4099a3:	mov    rax,QWORD PTR [rbp-0x8]
  4099a7:	mov    edx,DWORD PTR [rax]
  4099a9:	mov    eax,DWORD PTR [rbp-0xc]
  4099ac:	add    edx,eax
  4099ae:	mov    rax,0x414500
  4099b5:	movsxd rdx,edx
  4099b8:	mov    eax,DWORD PTR [rax+rdx*4+0x4]
  4099bc:	movsxd rcx,eax
  4099bf:	mov    rax,QWORD PTR [rbp-0x8]
  4099c3:	mov    edx,DWORD PTR [rax]
  4099c5:	mov    eax,DWORD PTR [rbp-0xc]
  4099c8:	add    edx,eax
  4099ca:	mov    rax,0x414500
  4099d1:	movsxd rdx,edx
  4099d4:	add    rdx,0x8
  4099d8:	mov    eax,DWORD PTR [rax+rdx*4+0x4]
  4099dc:	movsxd rdx,eax
  4099df:	mov    rax,QWORD PTR [rbp-0x18]
  4099e3:	lea    rsi,[rip+0x5f76]        # 40f960 <_IO_stdin_used@@Base+0x960>
  4099ea:	mov    rdi,rax
  4099ed:	mov    eax,0x0
  4099f2:	call   403920 <fprintf@plt>
  4099f7:	jmp    409a81 <print_json_data@@Base+0x2de>
  4099fc:	mov    rax,QWORD PTR [rbp-0x8]
  409a00:	mov    edx,DWORD PTR [rax]
  409a02:	mov    eax,DWORD PTR [rbp-0xc]
  409a05:	add    edx,eax
  409a07:	mov    rax,0x414500
  409a0e:	movsxd rdx,edx
  409a11:	mov    eax,DWORD PTR [rax+rdx*4+0x4]
  409a15:	movsxd rdx,eax
  409a18:	mov    rax,QWORD PTR [rbp-0x18]
  409a1c:	lea    rsi,[rip+0x5f45]        # 40f968 <_IO_stdin_used@@Base+0x968>
  409a23:	mov    rdi,rax
  409a26:	mov    eax,0x0
  409a2b:	call   403920 <fprintf@plt>
  409a30:	jmp    409a81 <print_json_data@@Base+0x2de>
  409a32:	mov    rax,QWORD PTR [rbp-0x8]
  409a36:	mov    edx,DWORD PTR [rbp-0xc]
  409a39:	movsxd rdx,edx
  409a3c:	mov    eax,DWORD PTR [rax+rdx*4+0x8]
  409a40:	cmp    eax,0xffffffff
  409a43:	jne    409a58 <print_json_data@@Base+0x2b5>
  409a45:	mov    rax,QWORD PTR [rbp-0x18]
  409a49:	mov    rsi,rax
  409a4c:	mov    edi,0x3f
  409a51:	call   4038d0 <fputc@plt>
  409a56:	jmp    409a81 <print_json_data@@Base+0x2de>
  409a58:	mov    rax,QWORD PTR [rbp-0x8]
  409a5c:	mov    edx,DWORD PTR [rbp-0xc]
  409a5f:	movsxd rdx,edx
  409a62:	mov    eax,DWORD PTR [rax+rdx*4+0x8]
  409a66:	movsxd rdx,eax
  409a69:	mov    rax,QWORD PTR [rbp-0x18]
  409a6d:	lea    rsi,[rip+0x5ef4]        # 40f968 <_IO_stdin_used@@Base+0x968>
  409a74:	mov    rdi,rax
  409a77:	mov    eax,0x0
  409a7c:	call   403920 <fprintf@plt>
  409a81:	inc    DWORD PTR [rbp-0xc]
  409a84:	mov    rax,QWORD PTR [rbp-0x8]
  409a88:	mov    eax,DWORD PTR [rax+0x4]
  409a8b:	cmp    DWORD PTR [rbp-0xc],eax
  409a8e:	jl     40995a <print_json_data@@Base+0x1b7>
  409a94:	nop
  409a95:	leave  
  409a96:	ret    

0000000000409a97 <print_full_field_name@@Base>:
  409a97:	endbr64 
  409a9b:	push   rbp
  409a9c:	mov    rbp,rsp
  409a9f:	sub    rsp,0x30
  409aa3:	mov    QWORD PTR [rbp-0x28],rdi
  409aa7:	mov    DWORD PTR [rbp-0x2c],esi
  409aaa:	mov    DWORD PTR [rbp-0x30],edx
  409aad:	mov    rax,QWORD PTR fs:0x28
  409ab6:	mov    QWORD PTR [rbp-0x8],rax
  409aba:	xor    eax,eax
  409abc:	cmp    DWORD PTR [rbp-0x2c],0x1
  409ac0:	jne    409c3f <print_full_field_name@@Base+0x1a8>
  409ac6:	mov    DWORD PTR [rbp-0x14],0x0
  409acd:	mov    DWORD PTR [rbp-0x10],0x0
  409ad4:	mov    DWORD PTR [rbp-0x18],0x0
  409adb:	jmp    409bd1 <print_full_field_name@@Base+0x13a>
  409ae0:	mov    rax,0x413380
  409ae7:	mov    edx,DWORD PTR [rbp-0x18]
  409aea:	movsxd rdx,edx
  409aed:	mov    rax,QWORD PTR [rax+rdx*8+0x10]
  409af2:	lea    rdx,[rbp-0x1c]
  409af6:	mov    rsi,rdx
  409af9:	mov    rdi,rax
  409afc:	call   403c40 <coda_type_get_class@plt>
  409b01:	test   eax,eax
  409b03:	je     409b0f <print_full_field_name@@Base+0x78>
  409b05:	mov    eax,0x0
  409b0a:	call   40c3f3 <handle_coda_error@@Base>
  409b0f:	mov    eax,DWORD PTR [rbp-0x1c]
  409b12:	test   eax,eax
  409b14:	je     409b20 <print_full_field_name@@Base+0x89>
  409b16:	cmp    eax,0x1
  409b19:	je     409b56 <print_full_field_name@@Base+0xbf>
  409b1b:	jmp    409bce <print_full_field_name@@Base+0x137>
  409b20:	mov    rax,0x413380
  409b27:	mov    edx,DWORD PTR [rbp-0x14]
  409b2a:	movsxd rdx,edx
  409b2d:	add    rdx,0x204
  409b34:	mov    rdx,QWORD PTR [rax+rdx*8+0x18]
  409b39:	mov    rax,QWORD PTR [rbp-0x28]
  409b3d:	lea    rsi,[rip+0x5e28]        # 40f96c <_IO_stdin_used@@Base+0x96c>
  409b44:	mov    rdi,rax
  409b47:	mov    eax,0x0
  409b4c:	call   403920 <fprintf@plt>
  409b51:	inc    DWORD PTR [rbp-0x14]
  409b54:	jmp    409bce <print_full_field_name@@Base+0x137>
  409b56:	cmp    DWORD PTR [rbp-0x18],0x0
  409b5a:	jne    409b6d <print_full_field_name@@Base+0xd6>
  409b5c:	mov    rax,QWORD PTR [rbp-0x28]
  409b60:	mov    rsi,rax
  409b63:	mov    edi,0x2f
  409b68:	call   4038d0 <fputc@plt>
  409b6d:	mov    rcx,0x413380
  409b74:	mov    eax,DWORD PTR [rbp-0x10]
  409b77:	movsxd rdx,eax
  409b7a:	mov    rax,rdx
  409b7d:	shl    rax,0x2
  409b81:	add    rax,rdx
  409b84:	shl    rax,0x4
  409b88:	add    rax,rcx
  409b8b:	add    rax,0x538
  409b91:	mov    eax,DWORD PTR [rax]
  409b93:	test   eax,eax
  409b95:	jle    409bca <print_full_field_name@@Base+0x133>
  409b97:	mov    rax,QWORD PTR [rbp-0x28]
  409b9b:	mov    rsi,rax
  409b9e:	mov    edi,0x5b
  409ba3:	call   4038d0 <fputc@plt>
  409ba8:	mov    edx,DWORD PTR [rbp-0x10]
  409bab:	mov    rax,QWORD PTR [rbp-0x28]
  409baf:	mov    esi,edx
  409bb1:	mov    rdi,rax
  409bb4:	call   40990e <print_json_data@@Base+0x16b>
  409bb9:	mov    rax,QWORD PTR [rbp-0x28]
  409bbd:	mov    rsi,rax
  409bc0:	mov    edi,0x5d
  409bc5:	call   4038d0 <fputc@plt>
  409bca:	inc    DWORD PTR [rbp-0x10]
  409bcd:	nop
  409bce:	inc    DWORD PTR [rbp-0x18]
  409bd1:	mov    rax,0x413380
  409bd8:	mov    eax,DWORD PTR [rax+0x110]
  409bde:	cmp    DWORD PTR [rbp-0x18],eax
  409be1:	jl     409ae0 <print_full_field_name@@Base+0x49>
  409be7:	cmp    DWORD PTR [rbp-0x30],0x0
  409beb:	je     409e46 <print_full_field_name@@Base+0x3af>
  409bf1:	mov    rax,0x413380
  409bf8:	mov    eax,DWORD PTR [rax+0xf34]
  409bfe:	cmp    DWORD PTR [rbp-0x10],eax
  409c01:	jge    409e46 <print_full_field_name@@Base+0x3af>
  409c07:	mov    rax,QWORD PTR [rbp-0x28]
  409c0b:	mov    rsi,rax
  409c0e:	mov    edi,0x5b
  409c13:	call   4038d0 <fputc@plt>
  409c18:	mov    edx,DWORD PTR [rbp-0x10]
  409c1b:	mov    rax,QWORD PTR [rbp-0x28]
  409c1f:	mov    esi,edx
  409c21:	mov    rdi,rax
  409c24:	call   40990e <print_json_data@@Base+0x16b>
  409c29:	mov    rax,QWORD PTR [rbp-0x28]
  409c2d:	mov    rsi,rax
  409c30:	mov    edi,0x5d
  409c35:	call   4038d0 <fputc@plt>
  409c3a:	jmp    409e46 <print_full_field_name@@Base+0x3af>
  409c3f:	mov    DWORD PTR [rbp-0x18],0x0
  409c46:	jmp    409c8a <print_full_field_name@@Base+0x1f3>
  409c48:	cmp    DWORD PTR [rbp-0x18],0x0
  409c4c:	jle    409c5f <print_full_field_name@@Base+0x1c8>
  409c4e:	mov    rax,QWORD PTR [rbp-0x28]
  409c52:	mov    rsi,rax
  409c55:	mov    edi,0x2e
  409c5a:	call   4038d0 <fputc@plt>
  409c5f:	mov    rax,0x413380
  409c66:	mov    edx,DWORD PTR [rbp-0x18]
  409c69:	movsxd rdx,edx
  409c6c:	add    rdx,0x204
  409c73:	mov    rax,QWORD PTR [rax+rdx*8+0x18]
  409c78:	mov    rdx,QWORD PTR [rbp-0x28]
  409c7c:	mov    rsi,rdx
  409c7f:	mov    rdi,rax
  409c82:	call   403870 <fputs@plt>
  409c87:	inc    DWORD PTR [rbp-0x18]
  409c8a:	mov    rax,0x413380
  409c91:	mov    eax,DWORD PTR [rax+0x1138]
  409c97:	cmp    DWORD PTR [rbp-0x18],eax
  409c9a:	jl     409c48 <print_full_field_name@@Base+0x1b1>
  409c9c:	cmp    DWORD PTR [rbp-0x2c],0x2
  409ca0:	jne    409e46 <print_full_field_name@@Base+0x3af>
  409ca6:	mov    DWORD PTR [rbp-0xc],0x0
  409cad:	mov    DWORD PTR [rbp-0x18],0x0
  409cb4:	jmp    409d8f <print_full_field_name@@Base+0x2f8>
  409cb9:	mov    rax,0x413380
  409cc0:	mov    edx,DWORD PTR [rbp-0x18]
  409cc3:	movsxd rdx,edx
  409cc6:	mov    rax,QWORD PTR [rax+rdx*8+0x10]
  409ccb:	lea    rdx,[rbp-0x1c]
  409ccf:	mov    rsi,rdx
  409cd2:	mov    rdi,rax
  409cd5:	call   403c40 <coda_type_get_class@plt>
  409cda:	test   eax,eax
  409cdc:	je     409ce8 <print_full_field_name@@Base+0x251>
  409cde:	mov    eax,0x0
  409ce3:	call   40c3f3 <handle_coda_error@@Base>
  409ce8:	mov    eax,DWORD PTR [rbp-0x1c]
  409ceb:	cmp    eax,0x1
  409cee:	jne    409d8c <print_full_field_name@@Base+0x2f5>
  409cf4:	mov    rcx,0x413380
  409cfb:	mov    eax,DWORD PTR [rbp-0xc]
  409cfe:	movsxd rdx,eax
  409d01:	mov    rax,rdx
  409d04:	shl    rax,0x2
  409d08:	add    rax,rdx
  409d0b:	shl    rax,0x4
  409d0f:	add    rax,rcx
  409d12:	add    rax,0x538
  409d18:	mov    eax,DWORD PTR [rax]
  409d1a:	test   eax,eax
  409d1c:	jle    409d8c <print_full_field_name@@Base+0x2f5>
  409d1e:	mov    rcx,0x413380
  409d25:	mov    eax,DWORD PTR [rbp-0xc]
  409d28:	movsxd rdx,eax
  409d2b:	mov    rax,rdx
  409d2e:	shl    rax,0x2
  409d32:	add    rax,rdx
  409d35:	shl    rax,0x4
  409d39:	add    rax,rcx
  409d3c:	add    rax,0x534
  409d42:	mov    eax,DWORD PTR [rax]
  409d44:	test   eax,eax
  409d46:	jne    409d67 <print_full_field_name@@Base+0x2d0>
  409d48:	mov    rax,QWORD PTR [rbp-0x28]
  409d4c:	mov    rcx,rax
  409d4f:	mov    edx,0x2
  409d54:	mov    esi,0x1
  409d59:	lea    rdi,[rip+0x5c10]        # 40f970 <_IO_stdin_used@@Base+0x970>
  409d60:	call   403bc0 <fwrite@plt>
  409d65:	jmp    409d78 <print_full_field_name@@Base+0x2e1>
  409d67:	mov    rax,QWORD PTR [rbp-0x28]
  409d6b:	mov    rsi,rax
  409d6e:	mov    edi,0x2c
  409d73:	call   4038d0 <fputc@plt>
  409d78:	mov    edx,DWORD PTR [rbp-0xc]
  409d7b:	mov    rax,QWORD PTR [rbp-0x28]
  409d7f:	mov    esi,edx
  409d81:	mov    rdi,rax
  409d84:	call   40990e <print_json_data@@Base+0x16b>
  409d89:	inc    DWORD PTR [rbp-0xc]
  409d8c:	inc    DWORD PTR [rbp-0x18]
  409d8f:	mov    rax,0x413380
  409d96:	mov    eax,DWORD PTR [rax+0x110]
  409d9c:	cmp    DWORD PTR [rbp-0x18],eax
  409d9f:	jl     409cb9 <print_full_field_name@@Base+0x222>
  409da5:	cmp    DWORD PTR [rbp-0x30],0x0
  409da9:	je     409e2f <print_full_field_name@@Base+0x398>
  409daf:	mov    rax,0x413380
  409db6:	mov    eax,DWORD PTR [rax+0xf34]
  409dbc:	cmp    DWORD PTR [rbp-0xc],eax
  409dbf:	jge    409e2f <print_full_field_name@@Base+0x398>
  409dc1:	mov    rcx,0x413380
  409dc8:	mov    eax,DWORD PTR [rbp-0xc]
  409dcb:	movsxd rdx,eax
  409dce:	mov    rax,rdx
  409dd1:	shl    rax,0x2
  409dd5:	add    rax,rdx
  409dd8:	shl    rax,0x4
  409ddc:	add    rax,rcx
  409ddf:	add    rax,0x534
  409de5:	mov    eax,DWORD PTR [rax]
  409de7:	test   eax,eax
  409de9:	jne    409e0a <print_full_field_name@@Base+0x373>
  409deb:	mov    rax,QWORD PTR [rbp-0x28]
  409def:	mov    rcx,rax
  409df2:	mov    edx,0x2
  409df7:	mov    esi,0x1
  409dfc:	lea    rdi,[rip+0x5b6d]        # 40f970 <_IO_stdin_used@@Base+0x970>
  409e03:	call   403bc0 <fwrite@plt>
  409e08:	jmp    409e1b <print_full_field_name@@Base+0x384>
  409e0a:	mov    rax,QWORD PTR [rbp-0x28]
  409e0e:	mov    rsi,rax
  409e11:	mov    edi,0x2c
  409e16:	call   4038d0 <fputc@plt>
  409e1b:	mov    edx,DWORD PTR [rbp-0xc]
  409e1e:	mov    rax,QWORD PTR [rbp-0x28]
  409e22:	mov    esi,edx
  409e24:	mov    rdi,rax
  409e27:	call   40990e <print_json_data@@Base+0x16b>
  409e2c:	inc    DWORD PTR [rbp-0xc]
  409e2f:	cmp    DWORD PTR [rbp-0xc],0x0
  409e33:	jle    409e46 <print_full_field_name@@Base+0x3af>
  409e35:	mov    rax,QWORD PTR [rbp-0x28]
  409e39:	mov    rsi,rax
  409e3c:	mov    edi,0x5d
  409e41:	call   4038d0 <fputc@plt>
  409e46:	nop
  409e47:	mov    rax,QWORD PTR [rbp-0x8]
  409e4b:	xor    rax,QWORD PTR fs:0x28
  409e54:	je     409e5b <print_full_field_name@@Base+0x3c4>
  409e56:	call   403840 <__stack_chk_fail@plt>
  409e5b:	leave  
  409e5c:	ret    

0000000000409e5d <traverse_info_init@@Base>:
  409e5d:	endbr64 
  409e61:	push   rbp
  409e62:	mov    rbp,rsp
  409e65:	mov    rax,0x413380
  409e6c:	mov    QWORD PTR [rax+0x8],0x0
  409e74:	mov    rax,0x413380
  409e7b:	mov    DWORD PTR [rax+0x110],0x0
  409e85:	mov    rax,0x413380
  409e8c:	mov    DWORD PTR [rax+0xf34],0x0
  409e96:	mov    rax,0x413380
  409e9d:	mov    DWORD PTR [rax+0x1138],0x0
  409ea7:	nop
  409ea8:	pop    rbp
  409ea9:	ret    

0000000000409eaa <traverse_info_done@@Base>:
  409eaa:	endbr64 
  409eae:	push   rbp
  409eaf:	mov    rbp,rsp
  409eb2:	mov    rax,0x413380
  409eb9:	mov    rax,QWORD PTR [rax+0x8]
  409ebd:	test   rax,rax
  409ec0:	je     409ed5 <traverse_info_done@@Base+0x2b>
  409ec2:	mov    rax,0x413380
  409ec9:	mov    rax,QWORD PTR [rax+0x8]
  409ecd:	mov    rdi,rax
  409ed0:	call   403ac0 <coda_close@plt>
  409ed5:	mov    rax,0x413380
  409edc:	mov    rax,QWORD PTR [rax+0x428]
  409ee3:	test   rax,rax
  409ee6:	je     409efb <traverse_info_done@@Base+0x51>
  409ee8:	mov    rax,0x413380
  409eef:	lea    rdi,[rax+0x428]
  409ef6:	call   4087de <codadump_filter_remove@@Base>
  409efb:	nop
  409efc:	pop    rbp
  409efd:	ret    
  409efe:	endbr64 
  409f02:	push   rbp
  409f03:	mov    rbp,rsp
  409f06:	sub    rsp,0x20
  409f0a:	mov    rax,QWORD PTR fs:0x28
  409f13:	mov    QWORD PTR [rbp-0x8],rax
  409f17:	xor    eax,eax
  409f19:	mov    rax,0x4144dc
  409f20:	mov    eax,DWORD PTR [rax]
  409f22:	test   eax,eax
  409f24:	jne    40a1e4 <traverse_info_done@@Base+0x33a>
  409f2a:	mov    rax,QWORD PTR [rip+0x90af]        # 412fe0 <stdout@GLIBC_2.2.5>
  409f31:	mov    rax,QWORD PTR [rax]
  409f34:	mov    edx,0x0
  409f39:	mov    esi,0x1
  409f3e:	mov    rdi,rax
  409f41:	call   409a97 <print_full_field_name@@Base>
  409f46:	mov    rax,0x4144d0
  409f4d:	mov    eax,DWORD PTR [rax]
  409f4f:	test   eax,eax
  409f51:	je     40a0c3 <traverse_info_done@@Base+0x219>
  409f57:	mov    rax,0x413380
  409f5e:	mov    edx,DWORD PTR [rax+0x110]
  409f64:	mov    rax,0x413380
  409f6b:	movsxd rdx,edx
  409f6e:	mov    rax,QWORD PTR [rax+rdx*8+0x10]
  409f73:	lea    rdx,[rbp-0x18]
  409f77:	mov    rsi,rdx
  409f7a:	mov    rdi,rax
  409f7d:	call   403c40 <coda_type_get_class@plt>
  409f82:	test   eax,eax
  409f84:	je     409f90 <traverse_info_done@@Base+0xe6>
  409f86:	mov    eax,0x0
  409f8b:	call   40c3f3 <handle_coda_error@@Base>
  409f90:	mov    eax,DWORD PTR [rbp-0x18]
  409f93:	cmp    eax,0x6
  409f96:	jne    409ff4 <traverse_info_done@@Base+0x14a>
  409f98:	mov    rax,0x413380
  409f9f:	mov    edx,DWORD PTR [rax+0x110]
  409fa5:	mov    rax,0x413380
  409fac:	movsxd rdx,edx
  409faf:	mov    rax,QWORD PTR [rax+rdx*8+0x10]
  409fb4:	lea    rdx,[rbp-0x10]
  409fb8:	mov    rsi,rdx
  409fbb:	mov    rdi,rax
  409fbe:	call   403a40 <coda_type_get_special_type@plt>
  409fc3:	test   eax,eax
  409fc5:	je     409fd1 <traverse_info_done@@Base+0x127>
  409fc7:	mov    eax,0x0
  409fcc:	call   40c3f3 <handle_coda_error@@Base>
  409fd1:	mov    eax,DWORD PTR [rbp-0x10]
  409fd4:	mov    edi,eax
  409fd6:	call   403650 <coda_type_get_special_type_name@plt>
  409fdb:	mov    rsi,rax
  409fde:	lea    rdi,[rip+0x598e]        # 40f973 <_IO_stdin_used@@Base+0x973>
  409fe5:	mov    eax,0x0
  409fea:	call   403850 <printf@plt>
  409fef:	jmp    40a0c3 <traverse_info_done@@Base+0x219>
  409ff4:	mov    rax,0x413380
  409ffb:	mov    edx,DWORD PTR [rax+0x110]
  40a001:	mov    rax,0x413380
  40a008:	movsxd rdx,edx
  40a00b:	mov    rax,QWORD PTR [rax+rdx*8+0x10]
  40a010:	lea    rdx,[rbp-0x10]
  40a014:	mov    rsi,rdx
  40a017:	mov    rdi,rax
  40a01a:	call   403970 <coda_type_get_read_type@plt>
  40a01f:	test   eax,eax
  40a021:	je     40a02d <traverse_info_done@@Base+0x183>
  40a023:	mov    eax,0x0
  40a028:	call   40c3f3 <handle_coda_error@@Base>
  40a02d:	mov    eax,DWORD PTR [rbp-0x10]
  40a030:	mov    edi,eax
  40a032:	call   403a90 <coda_type_get_native_type_name@plt>
  40a037:	mov    rsi,rax
  40a03a:	lea    rdi,[rip+0x5932]        # 40f973 <_IO_stdin_used@@Base+0x973>
  40a041:	mov    eax,0x0
  40a046:	call   403850 <printf@plt>
  40a04b:	mov    eax,DWORD PTR [rbp-0x10]
  40a04e:	cmp    eax,0xb
  40a051:	je     40a05b <traverse_info_done@@Base+0x1b1>
  40a053:	mov    eax,DWORD PTR [rbp-0x10]
  40a056:	cmp    eax,0xc
  40a059:	jne    40a0c3 <traverse_info_done@@Base+0x219>
  40a05b:	mov    edi,0x28
  40a060:	call   403690 <putchar@plt>
  40a065:	mov    rax,0x413380
  40a06c:	mov    eax,DWORD PTR [rax+0xf34]
  40a072:	test   eax,eax
  40a074:	jg     40a095 <traverse_info_done@@Base+0x1eb>
  40a076:	lea    rcx,[rip+0x59f3]        # 40fa70 <_IO_stdin_used@@Base+0xa70>
  40a07d:	mov    edx,0xee
  40a082:	lea    rsi,[rip+0x58ef]        # 40f978 <_IO_stdin_used@@Base+0x978>
  40a089:	lea    rdi,[rip+0x5950]        # 40f9e0 <_IO_stdin_used@@Base+0x9e0>
  40a090:	call   403860 <__assert_fail@plt>
  40a095:	mov    rax,0x413380
  40a09c:	mov    eax,DWORD PTR [rax+0xf34]
  40a0a2:	lea    edx,[rax-0x1]
  40a0a5:	mov    rax,QWORD PTR [rip+0x8f34]        # 412fe0 <stdout@GLIBC_2.2.5>
  40a0ac:	mov    rax,QWORD PTR [rax]
  40a0af:	mov    esi,edx
  40a0b1:	mov    rdi,rax
  40a0b4:	call   40990e <print_json_data@@Base+0x16b>
  40a0b9:	mov    edi,0x29
  40a0be:	call   403690 <putchar@plt>
  40a0c3:	mov    rax,0x413374
  40a0ca:	mov    eax,DWORD PTR [rax]
  40a0cc:	test   eax,eax
  40a0ce:	je     40a135 <traverse_info_done@@Base+0x28b>
  40a0d0:	mov    rax,0x413380
  40a0d7:	mov    edx,DWORD PTR [rax+0x110]
  40a0dd:	mov    rax,0x413380
  40a0e4:	movsxd rdx,edx
  40a0e7:	mov    rax,QWORD PTR [rax+rdx*8+0x10]
  40a0ec:	lea    rdx,[rbp-0x10]
  40a0f0:	mov    rsi,rdx
  40a0f3:	mov    rdi,rax
  40a0f6:	call   403820 <coda_type_get_unit@plt>
  40a0fb:	test   eax,eax
  40a0fd:	je     40a109 <traverse_info_done@@Base+0x25f>
  40a0ff:	mov    eax,0x0
  40a104:	call   40c3f3 <handle_coda_error@@Base>
  40a109:	mov    rax,QWORD PTR [rbp-0x10]
  40a10d:	test   rax,rax
  40a110:	je     40a135 <traverse_info_done@@Base+0x28b>
  40a112:	mov    rax,QWORD PTR [rbp-0x10]
  40a116:	movzx  eax,BYTE PTR [rax]
  40a119:	test   al,al
  40a11b:	je     40a135 <traverse_info_done@@Base+0x28b>
  40a11d:	mov    rax,QWORD PTR [rbp-0x10]
  40a121:	mov    rsi,rax
  40a124:	lea    rdi,[rip+0x58d2]        # 40f9fd <_IO_stdin_used@@Base+0x9fd>
  40a12b:	mov    eax,0x0
  40a130:	call   403850 <printf@plt>
  40a135:	mov    rax,0x4144d4
  40a13c:	mov    eax,DWORD PTR [rax]
  40a13e:	test   eax,eax
  40a140:	je     40a1a7 <traverse_info_done@@Base+0x2fd>
  40a142:	mov    rax,0x413380
  40a149:	mov    edx,DWORD PTR [rax+0x110]
  40a14f:	mov    rax,0x413380
  40a156:	movsxd rdx,edx
  40a159:	mov    rax,QWORD PTR [rax+rdx*8+0x10]
  40a15e:	lea    rdx,[rbp-0x10]
  40a162:	mov    rsi,rdx
  40a165:	mov    rdi,rax
  40a168:	call   403830 <coda_type_get_description@plt>
  40a16d:	test   eax,eax
  40a16f:	je     40a17b <traverse_info_done@@Base+0x2d1>
  40a171:	mov    eax,0x0
  40a176:	call   40c3f3 <handle_coda_error@@Base>
  40a17b:	mov    rax,QWORD PTR [rbp-0x10]
  40a17f:	test   rax,rax
  40a182:	je     40a1a7 <traverse_info_done@@Base+0x2fd>
  40a184:	mov    rax,QWORD PTR [rbp-0x10]
  40a188:	movzx  eax,BYTE PTR [rax]
  40a18b:	test   al,al
  40a18d:	je     40a1a7 <traverse_info_done@@Base+0x2fd>
  40a18f:	mov    rax,QWORD PTR [rbp-0x10]
  40a193:	mov    rsi,rax
  40a196:	lea    rdi,[rip+0x5866]        # 40fa03 <_IO_stdin_used@@Base+0xa03>
  40a19d:	mov    eax,0x0
  40a1a2:	call   403850 <printf@plt>
  40a1a7:	mov    edi,0xa
  40a1ac:	call   403690 <putchar@plt>
  40a1b1:	mov    rax,0x413364
  40a1b8:	mov    eax,DWORD PTR [rax]
  40a1ba:	test   eax,eax
  40a1bc:	je     40a1fc <traverse_info_done@@Base+0x352>
  40a1be:	mov    DWORD PTR [rbp-0x14],0x0
  40a1c5:	jmp    40a1d4 <traverse_info_done@@Base+0x32a>
  40a1c7:	mov    eax,DWORD PTR [rbp-0x14]
  40a1ca:	mov    edi,eax
  40a1cc:	call   406340 <print_all_distinct_dims@@Base>
  40a1d1:	inc    DWORD PTR [rbp-0x14]
  40a1d4:	mov    rax,0x414500
  40a1db:	mov    eax,DWORD PTR [rax]
  40a1dd:	cmp    DWORD PTR [rbp-0x14],eax
  40a1e0:	jl     40a1c7 <traverse_info_done@@Base+0x31d>
  40a1e2:	jmp    40a1fc <traverse_info_done@@Base+0x352>
  40a1e4:	mov    rax,0x4144dc
  40a1eb:	mov    eax,DWORD PTR [rax]
  40a1ed:	cmp    eax,0x1
  40a1f0:	jne    40a1fc <traverse_info_done@@Base+0x352>
  40a1f2:	mov    eax,0x0
  40a1f7:	call   404bd6 <export_data_element_to_ascii@@Base>
  40a1fc:	nop
  40a1fd:	mov    rax,QWORD PTR [rbp-0x8]
  40a201:	xor    rax,QWORD PTR fs:0x28
  40a20a:	je     40a211 <traverse_info_done@@Base+0x367>
  40a20c:	call   403840 <__stack_chk_fail@plt>
  40a211:	leave  
  40a212:	ret    
  40a213:	endbr64 
  40a217:	push   rbp
  40a218:	mov    rbp,rsp
  40a21b:	sub    rsp,0x20
  40a21f:	mov    DWORD PTR [rbp-0x14],edi
  40a222:	mov    DWORD PTR [rbp-0x18],esi
  40a225:	mov    rax,QWORD PTR fs:0x28
  40a22e:	mov    QWORD PTR [rbp-0x8],rax
  40a232:	xor    eax,eax
  40a234:	mov    rax,0x413380
  40a23b:	mov    eax,DWORD PTR [rax+0x1138]
  40a241:	lea    edx,[rax-0x1]
  40a244:	mov    rax,0x413380
  40a24b:	movsxd rdx,edx
  40a24e:	lea    rcx,[rdx+0x3e8]
  40a255:	mov    edx,DWORD PTR [rbp-0x14]
  40a258:	mov    DWORD PTR [rax+rcx*4+0x18],edx
  40a25c:	mov    eax,DWORD PTR [rbp-0x14]
  40a25f:	movsxd rcx,eax
  40a262:	mov    rax,0x413380
  40a269:	mov    eax,DWORD PTR [rax+0x110]
  40a26f:	lea    edx,[rax-0x1]
  40a272:	mov    rax,0x413380
  40a279:	movsxd rdx,edx
  40a27c:	mov    rax,QWORD PTR [rax+rdx*8+0x10]
  40a281:	lea    rdx,[rbp-0x10]
  40a285:	mov    rsi,rcx
  40a288:	mov    rdi,rax
  40a28b:	call   4036c0 <coda_type_get_record_field_hidden_status@plt>
  40a290:	test   eax,eax
  40a292:	je     40a29e <traverse_info_done@@Base+0x3f4>
  40a294:	mov    eax,0x0
  40a299:	call   40c3f3 <handle_coda_error@@Base>
  40a29e:	mov    eax,DWORD PTR [rbp-0x10]
  40a2a1:	test   eax,eax
  40a2a3:	je     40a2af <traverse_info_done@@Base+0x405>
  40a2a5:	cmp    DWORD PTR [rbp-0x18],0x0
  40a2a9:	je     40a424 <traverse_info_done@@Base+0x57a>
  40a2af:	mov    rax,0x413378
  40a2b6:	mov    eax,DWORD PTR [rax]
  40a2b8:	test   eax,eax
  40a2ba:	je     40a344 <traverse_info_done@@Base+0x49a>
  40a2c0:	mov    eax,DWORD PTR [rbp-0x14]
  40a2c3:	movsxd rcx,eax
  40a2c6:	mov    rax,0x413380
  40a2cd:	mov    eax,DWORD PTR [rax+0x110]
  40a2d3:	lea    edx,[rax-0x1]
  40a2d6:	mov    rax,0x413380
  40a2dd:	movsxd rdx,edx
  40a2e0:	mov    rax,QWORD PTR [rax+rdx*8+0x10]
  40a2e5:	lea    rdx,[rbp-0xc]
  40a2e9:	mov    rsi,rcx
  40a2ec:	mov    rdi,rax
  40a2ef:	call   4037c0 <coda_type_get_record_field_available_status@plt>
  40a2f4:	test   eax,eax
  40a2f6:	je     40a302 <traverse_info_done@@Base+0x458>
  40a2f8:	mov    eax,0x0
  40a2fd:	call   40c3f3 <handle_coda_error@@Base>
  40a302:	mov    eax,DWORD PTR [rbp-0xc]
  40a305:	cmp    eax,0xffffffff
  40a308:	jne    40a31c <traverse_info_done@@Base+0x472>
  40a30a:	mov    eax,0x0
  40a30f:	call   408257 <dim_record_field_available@@Base>
  40a314:	test   eax,eax
  40a316:	je     40a427 <traverse_info_done@@Base+0x57d>
  40a31c:	mov    rax,0x413380
  40a323:	mov    eax,DWORD PTR [rax+0x110]
  40a329:	lea    ecx,[rax-0x1]
  40a32c:	mov    edx,DWORD PTR [rbp-0xc]
  40a32f:	mov    rax,0x413380
  40a336:	movsxd rcx,ecx
  40a339:	add    rcx,0x3c8
  40a340:	mov    DWORD PTR [rax+rcx*4+0x18],edx
  40a344:	mov    rax,0x413380
  40a34b:	mov    eax,DWORD PTR [rax+0x1138]
  40a351:	dec    eax
  40a353:	cdqe   
  40a355:	add    rax,0x204
  40a35b:	lea    rdx,[rax*8+0x0]
  40a363:	mov    rax,0x413380
  40a36a:	add    rax,rdx
  40a36d:	lea    rsi,[rax+0x18]
  40a371:	mov    eax,DWORD PTR [rbp-0x14]
  40a374:	movsxd rcx,eax
  40a377:	mov    rax,0x413380
  40a37e:	mov    eax,DWORD PTR [rax+0x110]
  40a384:	lea    edx,[rax-0x1]
  40a387:	mov    rax,0x413380
  40a38e:	movsxd rdx,edx
  40a391:	mov    rax,QWORD PTR [rax+rdx*8+0x10]
  40a396:	mov    rdx,rsi
  40a399:	mov    rsi,rcx
  40a39c:	mov    rdi,rax
  40a39f:	call   403c10 <coda_type_get_record_field_name@plt>
  40a3a4:	test   eax,eax
  40a3a6:	je     40a3b2 <traverse_info_done@@Base+0x508>
  40a3a8:	mov    eax,0x0
  40a3ad:	call   40c3f3 <handle_coda_error@@Base>
  40a3b2:	mov    rax,0x413380
  40a3b9:	mov    eax,DWORD PTR [rax+0x110]
  40a3bf:	cdqe   
  40a3c1:	lea    rdx,[rax*8+0x0]
  40a3c9:	mov    rax,0x413380
  40a3d0:	add    rax,rdx
  40a3d3:	lea    rsi,[rax+0x10]
  40a3d7:	mov    eax,DWORD PTR [rbp-0x14]
  40a3da:	movsxd rcx,eax
  40a3dd:	mov    rax,0x413380
  40a3e4:	mov    eax,DWORD PTR [rax+0x110]
  40a3ea:	lea    edx,[rax-0x1]
  40a3ed:	mov    rax,0x413380
  40a3f4:	movsxd rdx,edx
  40a3f7:	mov    rax,QWORD PTR [rax+rdx*8+0x10]
  40a3fc:	mov    rdx,rsi
  40a3ff:	mov    rsi,rcx
  40a402:	mov    rdi,rax
  40a405:	call   403780 <coda_type_get_record_field_type@plt>
  40a40a:	test   eax,eax
  40a40c:	je     40a418 <traverse_info_done@@Base+0x56e>
  40a40e:	mov    eax,0x0
  40a413:	call   40c3f3 <handle_coda_error@@Base>
  40a418:	mov    eax,0x0
  40a41d:	call   40a43e <traverse_info_done@@Base+0x594>
  40a422:	jmp    40a428 <traverse_info_done@@Base+0x57e>
  40a424:	nop
  40a425:	jmp    40a428 <traverse_info_done@@Base+0x57e>
  40a427:	nop
  40a428:	mov    rax,QWORD PTR [rbp-0x8]
  40a42c:	xor    rax,QWORD PTR fs:0x28
  40a435:	je     40a43c <traverse_info_done@@Base+0x592>
  40a437:	call   403840 <__stack_chk_fail@plt>
  40a43c:	leave  
  40a43d:	ret    
  40a43e:	endbr64 
  40a442:	push   rbp
  40a443:	mov    rbp,rsp
  40a446:	push   rbx
  40a447:	sub    rsp,0x38
  40a44b:	mov    rax,QWORD PTR fs:0x28
  40a454:	mov    QWORD PTR [rbp-0x18],rax
  40a458:	xor    eax,eax
  40a45a:	mov    rax,0x413380
  40a461:	mov    edx,DWORD PTR [rax+0x110]
  40a467:	mov    rax,0x413380
  40a46e:	movsxd rdx,edx
  40a471:	mov    rax,QWORD PTR [rax+rdx*8+0x10]
  40a476:	lea    rdx,[rbp-0x3c]
  40a47a:	mov    rsi,rdx
  40a47d:	mov    rdi,rax
  40a480:	call   403c40 <coda_type_get_class@plt>
  40a485:	test   eax,eax
  40a487:	je     40a493 <traverse_info_done@@Base+0x5e9>
  40a489:	mov    eax,0x0
  40a48e:	call   40c3f3 <handle_coda_error@@Base>
  40a493:	mov    eax,DWORD PTR [rbp-0x3c]
  40a496:	cmp    eax,0x6
  40a499:	ja     40ab0a <traverse_info_done@@Base+0xc60>
  40a49f:	mov    eax,eax
  40a4a1:	lea    rdx,[rax*4+0x0]
  40a4a9:	lea    rax,[rip+0x559c]        # 40fa4c <_IO_stdin_used@@Base+0xa4c>
  40a4b0:	mov    eax,DWORD PTR [rdx+rax*1]
  40a4b3:	movsxd rdx,eax
  40a4b6:	lea    rax,[rip+0x558f]        # 40fa4c <_IO_stdin_used@@Base+0xa4c>
  40a4bd:	add    rax,rdx
  40a4c0:	notrack jmp rax
  40a4c3:	mov    rax,0x413380
  40a4ca:	mov    eax,DWORD PTR [rax+0x110]
  40a4d0:	cmp    eax,0x1e
  40a4d3:	jg     40ab06 <traverse_info_done@@Base+0xc5c>
  40a4d9:	mov    rax,0x413380
  40a4e0:	mov    eax,DWORD PTR [rax+0x1138]
  40a4e6:	lea    edx,[rax+0x1]
  40a4e9:	mov    rax,0x413380
  40a4f0:	mov    DWORD PTR [rax+0x1138],edx
  40a4f6:	mov    rax,0x413380
  40a4fd:	mov    edx,DWORD PTR [rax+0x110]
  40a503:	mov    rax,0x413380
  40a50a:	movsxd rdx,edx
  40a50d:	mov    rax,QWORD PTR [rax+rdx*8+0x10]
  40a512:	lea    rdx,[rbp-0x38]
  40a516:	mov    rsi,rdx
  40a519:	mov    rdi,rax
  40a51c:	call   403950 <coda_type_get_num_record_fields@plt>
  40a521:	test   eax,eax
  40a523:	je     40a52f <traverse_info_done@@Base+0x685>
  40a525:	mov    eax,0x0
  40a52a:	call   40c3f3 <handle_coda_error@@Base>
  40a52f:	mov    rax,0x413380
  40a536:	mov    eax,DWORD PTR [rax+0x110]
  40a53c:	lea    edx,[rax+0x1]
  40a53f:	mov    rax,0x413380
  40a546:	mov    DWORD PTR [rax+0x110],edx
  40a54c:	mov    rax,0x413380
  40a553:	mov    edx,DWORD PTR [rax+0x530]
  40a559:	mov    rax,0x413380
  40a560:	movsxd rdx,edx
  40a563:	add    rdx,0x84
  40a56a:	mov    rax,QWORD PTR [rax+rdx*8+0x8]
  40a56f:	test   rax,rax
  40a572:	je     40a7b5 <traverse_info_done@@Base+0x90b>
  40a578:	mov    rax,0x413380
  40a57f:	mov    edx,DWORD PTR [rax+0x530]
  40a585:	mov    rax,0x413380
  40a58c:	movsxd rdx,edx
  40a58f:	add    rdx,0x84
  40a596:	mov    rax,QWORD PTR [rax+rdx*8+0x8]
  40a59b:	mov    QWORD PTR [rbp-0x28],rax
  40a59f:	jmp    40a760 <traverse_info_done@@Base+0x8b6>
  40a5a4:	mov    rax,0x413380
  40a5ab:	mov    edx,DWORD PTR [rax+0x530]
  40a5b1:	mov    rax,0x413380
  40a5b8:	movsxd rdx,edx
  40a5bb:	add    rdx,0x84
  40a5c2:	mov    rax,QWORD PTR [rax+rdx*8+0x8]
  40a5c7:	mov    rdi,rax
  40a5ca:	call   4088b6 <codadump_filter_get_fieldname@@Base>
  40a5cf:	mov    QWORD PTR [rbp-0x20],rax
  40a5d3:	cmp    QWORD PTR [rbp-0x20],0x0
  40a5d8:	jne    40a5f9 <traverse_info_done@@Base+0x74f>
  40a5da:	lea    rcx,[rip+0x54a7]        # 40fa88 <_IO_stdin_used@@Base+0xa88>
  40a5e1:	mov    edx,0x189
  40a5e6:	lea    rsi,[rip+0x538b]        # 40f978 <_IO_stdin_used@@Base+0x978>
  40a5ed:	lea    rdi,[rip+0x5415]        # 40fa09 <_IO_stdin_used@@Base+0xa09>
  40a5f4:	call   403860 <__assert_fail@plt>
  40a5f9:	mov    rax,0x413380
  40a600:	mov    eax,DWORD PTR [rax+0x110]
  40a606:	lea    edx,[rax-0x1]
  40a609:	mov    rax,0x413380
  40a610:	movsxd rdx,edx
  40a613:	mov    rax,QWORD PTR [rax+rdx*8+0x10]
  40a618:	lea    rdx,[rbp-0x30]
  40a61c:	mov    rcx,QWORD PTR [rbp-0x20]
  40a620:	mov    rsi,rcx
  40a623:	mov    rdi,rax
  40a626:	call   403af0 <coda_type_get_record_field_index_from_name@plt>
  40a62b:	test   eax,eax
  40a62d:	je     40a671 <traverse_info_done@@Base+0x7c7>
  40a62f:	call   403bf0 <coda_get_errno@plt>
  40a634:	mov    eax,DWORD PTR [rax]
  40a636:	cmp    eax,0xffffff9a
  40a639:	jne    40a667 <traverse_info_done@@Base+0x7bd>
  40a63b:	mov    rax,QWORD PTR [rip+0x89b6]        # 412ff8 <stderr@GLIBC_2.2.5>
  40a642:	mov    rax,QWORD PTR [rax]
  40a645:	mov    rdx,QWORD PTR [rbp-0x20]
  40a649:	lea    rsi,[rip+0x53c8]        # 40fa18 <_IO_stdin_used@@Base+0xa18>
  40a650:	mov    rdi,rax
  40a653:	mov    eax,0x0
  40a658:	call   403920 <fprintf@plt>
  40a65d:	mov    edi,0x1
  40a662:	call   403ba0 <exit@plt>
  40a667:	mov    eax,0x0
  40a66c:	call   40c3f3 <handle_coda_error@@Base>
  40a671:	mov    rax,0x413380
  40a678:	mov    edx,DWORD PTR [rax+0x530]
  40a67e:	mov    rax,0x413380
  40a685:	movsxd rdx,edx
  40a688:	add    rdx,0x84
  40a68f:	mov    rax,QWORD PTR [rax+rdx*8+0x8]
  40a694:	mov    rdx,0x413380
  40a69b:	mov    edx,DWORD PTR [rdx+0x530]
  40a6a1:	lea    ebx,[rdx+0x1]
  40a6a4:	mov    rdi,rax
  40a6a7:	call   4088f5 <codadump_filter_get_subfilter@@Base>
  40a6ac:	mov    rcx,rax
  40a6af:	mov    rax,0x413380
  40a6b6:	movsxd rdx,ebx
  40a6b9:	add    rdx,0x84
  40a6c0:	mov    QWORD PTR [rax+rdx*8+0x8],rcx
  40a6c5:	mov    rax,0x413380
  40a6cc:	mov    eax,DWORD PTR [rax+0x530]
  40a6d2:	lea    edx,[rax+0x1]
  40a6d5:	mov    rax,0x413380
  40a6dc:	mov    DWORD PTR [rax+0x530],edx
  40a6e2:	mov    rax,QWORD PTR [rbp-0x30]
  40a6e6:	mov    esi,0x1
  40a6eb:	mov    edi,eax
  40a6ed:	call   40a213 <traverse_info_done@@Base+0x369>
  40a6f2:	mov    rax,0x413380
  40a6f9:	mov    eax,DWORD PTR [rax+0x530]
  40a6ff:	lea    edx,[rax-0x1]
  40a702:	mov    rax,0x413380
  40a709:	mov    DWORD PTR [rax+0x530],edx
  40a70f:	mov    rax,0x413380
  40a716:	mov    edx,DWORD PTR [rax+0x530]
  40a71c:	mov    rax,0x413380
  40a723:	movsxd rdx,edx
  40a726:	add    rdx,0x84
  40a72d:	mov    rax,QWORD PTR [rax+rdx*8+0x8]
  40a732:	mov    rdx,0x413380
  40a739:	mov    ebx,DWORD PTR [rdx+0x530]
  40a73f:	mov    rdi,rax
  40a742:	call   408935 <codadump_filter_get_next_filter@@Base>
  40a747:	mov    rcx,rax
  40a74a:	mov    rax,0x413380
  40a751:	movsxd rdx,ebx
  40a754:	add    rdx,0x84
  40a75b:	mov    QWORD PTR [rax+rdx*8+0x8],rcx
  40a760:	mov    rax,0x413380
  40a767:	mov    edx,DWORD PTR [rax+0x530]
  40a76d:	mov    rax,0x413380
  40a774:	movsxd rdx,edx
  40a777:	add    rdx,0x84
  40a77e:	mov    rax,QWORD PTR [rax+rdx*8+0x8]
  40a783:	test   rax,rax
  40a786:	jne    40a5a4 <traverse_info_done@@Base+0x6fa>
  40a78c:	mov    rax,0x413380
  40a793:	mov    edx,DWORD PTR [rax+0x530]
  40a799:	mov    rax,0x413380
  40a7a0:	movsxd rdx,edx
  40a7a3:	lea    rcx,[rdx+0x84]
  40a7aa:	mov    rdx,QWORD PTR [rbp-0x28]
  40a7ae:	mov    QWORD PTR [rax+rcx*8+0x8],rdx
  40a7b3:	jmp    40a7e7 <traverse_info_done@@Base+0x93d>
  40a7b5:	mov    QWORD PTR [rbp-0x30],0x0
  40a7bd:	jmp    40a7da <traverse_info_done@@Base+0x930>
  40a7bf:	mov    rax,QWORD PTR [rbp-0x30]
  40a7c3:	mov    esi,0x0
  40a7c8:	mov    edi,eax
  40a7ca:	call   40a213 <traverse_info_done@@Base+0x369>
  40a7cf:	mov    rax,QWORD PTR [rbp-0x30]
  40a7d3:	inc    rax
  40a7d6:	mov    QWORD PTR [rbp-0x30],rax
  40a7da:	mov    rdx,QWORD PTR [rbp-0x30]
  40a7de:	mov    rax,QWORD PTR [rbp-0x38]
  40a7e2:	cmp    rdx,rax
  40a7e5:	jl     40a7bf <traverse_info_done@@Base+0x915>
  40a7e7:	mov    rax,0x413380
  40a7ee:	mov    eax,DWORD PTR [rax+0x110]
  40a7f4:	lea    edx,[rax-0x1]
  40a7f7:	mov    rax,0x413380
  40a7fe:	mov    DWORD PTR [rax+0x110],edx
  40a804:	mov    rax,0x413380
  40a80b:	mov    eax,DWORD PTR [rax+0x1138]
  40a811:	lea    edx,[rax-0x1]
  40a814:	mov    rax,0x413380
  40a81b:	mov    DWORD PTR [rax+0x1138],edx
  40a821:	jmp    40ab0a <traverse_info_done@@Base+0xc60>
  40a826:	mov    rax,0x413380
  40a82d:	mov    eax,DWORD PTR [rax+0x110]
  40a833:	cmp    eax,0x1e
  40a836:	jg     40ab09 <traverse_info_done@@Base+0xc5f>
  40a83c:	mov    eax,0x0
  40a841:	call   406f42 <dim_enter_array@@Base>
  40a846:	mov    rax,0x413380
  40a84d:	mov    eax,DWORD PTR [rax+0xf34]
  40a853:	lea    edx,[rax+0x1]
  40a856:	mov    rax,0x413380
  40a85d:	mov    DWORD PTR [rax+0xf34],edx
  40a863:	mov    rax,0x413380
  40a86a:	mov    eax,DWORD PTR [rax+0x110]
  40a870:	lea    edx,[rax+0x1]
  40a873:	mov    rax,0x413380
  40a87a:	mov    DWORD PTR [rax+0x110],edx
  40a880:	mov    rax,0x413380
  40a887:	mov    eax,DWORD PTR [rax+0x110]
  40a88d:	cdqe   
  40a88f:	lea    rdx,[rax*8+0x0]
  40a897:	mov    rax,0x413380
  40a89e:	add    rax,rdx
  40a8a1:	lea    rcx,[rax+0x10]
  40a8a5:	mov    rax,0x413380
  40a8ac:	mov    eax,DWORD PTR [rax+0x110]
  40a8b2:	lea    edx,[rax-0x1]
  40a8b5:	mov    rax,0x413380
  40a8bc:	movsxd rdx,edx
  40a8bf:	mov    rax,QWORD PTR [rax+rdx*8+0x10]
  40a8c4:	mov    rsi,rcx
  40a8c7:	mov    rdi,rax
  40a8ca:	call   403a70 <coda_type_get_array_base_type@plt>
  40a8cf:	test   eax,eax
  40a8d1:	je     40a8dd <traverse_info_done@@Base+0xa33>
  40a8d3:	mov    eax,0x0
  40a8d8:	call   40c3f3 <handle_coda_error@@Base>
  40a8dd:	mov    eax,0x0
  40a8e2:	call   40a43e <traverse_info_done@@Base+0x594>
  40a8e7:	mov    rax,0x413380
  40a8ee:	mov    eax,DWORD PTR [rax+0x110]
  40a8f4:	lea    edx,[rax-0x1]
  40a8f7:	mov    rax,0x413380
  40a8fe:	mov    DWORD PTR [rax+0x110],edx
  40a904:	mov    rax,0x413380
  40a90b:	mov    eax,DWORD PTR [rax+0xf34]
  40a911:	lea    edx,[rax-0x1]
  40a914:	mov    rax,0x413380
  40a91b:	mov    DWORD PTR [rax+0xf34],edx
  40a921:	mov    eax,0x0
  40a926:	call   407c90 <dim_leave_array@@Base>
  40a92b:	jmp    40ab0a <traverse_info_done@@Base+0xc60>
  40a930:	mov    rax,0x413380
  40a937:	mov    edx,DWORD PTR [rax+0x110]
  40a93d:	mov    rax,0x413380
  40a944:	movsxd rdx,edx
  40a947:	mov    rax,QWORD PTR [rax+rdx*8+0x10]
  40a94c:	lea    rdx,[rbp-0x30]
  40a950:	mov    rsi,rdx
  40a953:	mov    rdi,rax
  40a956:	call   403970 <coda_type_get_read_type@plt>
  40a95b:	test   eax,eax
  40a95d:	je     40a969 <traverse_info_done@@Base+0xabf>
  40a95f:	mov    eax,0x0
  40a964:	call   40c3f3 <handle_coda_error@@Base>
  40a969:	mov    eax,DWORD PTR [rbp-0x30]
  40a96c:	sub    eax,0xb
  40a96f:	cmp    eax,0x1
  40a972:	ja     40a9ce <traverse_info_done@@Base+0xb24>
  40a974:	mov    eax,0x0
  40a979:	call   406f42 <dim_enter_array@@Base>
  40a97e:	mov    rax,0x413380
  40a985:	mov    eax,DWORD PTR [rax+0xf34]
  40a98b:	lea    edx,[rax+0x1]
  40a98e:	mov    rax,0x413380
  40a995:	mov    DWORD PTR [rax+0xf34],edx
  40a99b:	mov    eax,0x0
  40a9a0:	call   409efe <traverse_info_done@@Base+0x54>
  40a9a5:	mov    rax,0x413380
  40a9ac:	mov    eax,DWORD PTR [rax+0xf34]
  40a9b2:	lea    edx,[rax-0x1]
  40a9b5:	mov    rax,0x413380
  40a9bc:	mov    DWORD PTR [rax+0xf34],edx
  40a9c2:	mov    eax,0x0
  40a9c7:	call   407c90 <dim_leave_array@@Base>
  40a9cc:	jmp    40a9d9 <traverse_info_done@@Base+0xb2f>
  40a9ce:	mov    eax,0x0
  40a9d3:	call   409efe <traverse_info_done@@Base+0x54>
  40a9d8:	nop
  40a9d9:	jmp    40ab0a <traverse_info_done@@Base+0xc60>
  40a9de:	call   403670 <coda_get_option_bypass_special_types@plt>
  40a9e3:	test   eax,eax
  40a9e5:	je     40aa50 <traverse_info_done@@Base+0xba6>
  40a9e7:	mov    rax,0x413380
  40a9ee:	mov    eax,DWORD PTR [rax+0x110]
  40a9f4:	cdqe   
  40a9f6:	lea    rdx,[rax*8+0x0]
  40a9fe:	mov    rax,0x413380
  40aa05:	add    rax,rdx
  40aa08:	lea    rcx,[rax+0x10]
  40aa0c:	mov    rax,0x413380
  40aa13:	mov    edx,DWORD PTR [rax+0x110]
  40aa19:	mov    rax,0x413380
  40aa20:	movsxd rdx,edx
  40aa23:	mov    rax,QWORD PTR [rax+rdx*8+0x10]
  40aa28:	mov    rsi,rcx
  40aa2b:	mov    rdi,rax
  40aa2e:	call   403c00 <coda_type_get_special_base_type@plt>
  40aa33:	test   eax,eax
  40aa35:	je     40aa41 <traverse_info_done@@Base+0xb97>
  40aa37:	mov    eax,0x0
  40aa3c:	call   40c3f3 <handle_coda_error@@Base>
  40aa41:	mov    eax,0x0
  40aa46:	call   40a43e <traverse_info_done@@Base+0x594>
  40aa4b:	jmp    40ab0a <traverse_info_done@@Base+0xc60>
  40aa50:	mov    rax,0x413380
  40aa57:	mov    edx,DWORD PTR [rax+0x110]
  40aa5d:	mov    rax,0x413380
  40aa64:	movsxd rdx,edx
  40aa67:	mov    rax,QWORD PTR [rax+rdx*8+0x10]
  40aa6c:	lea    rdx,[rbp-0x30]
  40aa70:	mov    rsi,rdx
  40aa73:	mov    rdi,rax
  40aa76:	call   403a40 <coda_type_get_special_type@plt>
  40aa7b:	test   eax,eax
  40aa7d:	je     40aa89 <traverse_info_done@@Base+0xbdf>
  40aa7f:	mov    eax,0x0
  40aa84:	call   40c3f3 <handle_coda_error@@Base>
  40aa89:	mov    eax,DWORD PTR [rbp-0x30]
  40aa8c:	cmp    eax,0x2
  40aa8f:	ja     40aa97 <traverse_info_done@@Base+0xbed>
  40aa91:	test   eax,eax
  40aa93:	jne    40aa9e <traverse_info_done@@Base+0xbf4>
  40aa95:	jmp    40ab0a <traverse_info_done@@Base+0xc60>
  40aa97:	cmp    eax,0x3
  40aa9a:	je     40aaaa <traverse_info_done@@Base+0xc00>
  40aa9c:	jmp    40ab0a <traverse_info_done@@Base+0xc60>
  40aa9e:	mov    eax,0x0
  40aaa3:	call   409efe <traverse_info_done@@Base+0x54>
  40aaa8:	jmp    40ab03 <traverse_info_done@@Base+0xc59>
  40aaaa:	mov    eax,0x0
  40aaaf:	call   406f42 <dim_enter_array@@Base>
  40aab4:	mov    rax,0x413380
  40aabb:	mov    eax,DWORD PTR [rax+0xf34]
  40aac1:	lea    edx,[rax+0x1]
  40aac4:	mov    rax,0x413380
  40aacb:	mov    DWORD PTR [rax+0xf34],edx
  40aad1:	mov    eax,0x0
  40aad6:	call   409efe <traverse_info_done@@Base+0x54>
  40aadb:	mov    rax,0x413380
  40aae2:	mov    eax,DWORD PTR [rax+0xf34]
  40aae8:	lea    edx,[rax-0x1]
  40aaeb:	mov    rax,0x413380
  40aaf2:	mov    DWORD PTR [rax+0xf34],edx
  40aaf8:	mov    eax,0x0
  40aafd:	call   407c90 <dim_leave_array@@Base>
  40ab02:	nop
  40ab03:	nop
  40ab04:	jmp    40ab0a <traverse_info_done@@Base+0xc60>
  40ab06:	nop
  40ab07:	jmp    40ab0a <traverse_info_done@@Base+0xc60>
  40ab09:	nop
  40ab0a:	mov    rax,QWORD PTR [rbp-0x18]
  40ab0e:	xor    rax,QWORD PTR fs:0x28
  40ab17:	je     40ab1e <traverse_info_done@@Base+0xc74>
  40ab19:	call   403840 <__stack_chk_fail@plt>
  40ab1e:	add    rsp,0x38
  40ab22:	pop    rbx
  40ab23:	pop    rbp
  40ab24:	ret    

000000000040ab25 <traverse_product@@Base>:
  40ab25:	endbr64 
  40ab29:	push   rbp
  40ab2a:	mov    rbp,rsp
  40ab2d:	sub    rsp,0x10
  40ab31:	mov    rax,0x413380
  40ab38:	mov    rax,QWORD PTR [rax]
  40ab3b:	mov    rdx,0x413380
  40ab42:	lea    rsi,[rdx+0x8]
  40ab46:	mov    rdi,rax
  40ab49:	call   4036f0 <coda_open@plt>
  40ab4e:	mov    DWORD PTR [rbp-0x4],eax
  40ab51:	cmp    DWORD PTR [rbp-0x4],0x0
  40ab55:	je     40ab97 <traverse_product@@Base+0x72>
  40ab57:	call   403bf0 <coda_get_errno@plt>
  40ab5c:	mov    eax,DWORD PTR [rax]
  40ab5e:	cmp    eax,0xffffffeb
  40ab61:	jne    40ab97 <traverse_product@@Base+0x72>
  40ab63:	mov    edi,0x0
  40ab68:	call   403740 <coda_set_option_use_mmap@plt>
  40ab6d:	mov    rax,0x413380
  40ab74:	mov    rax,QWORD PTR [rax]
  40ab77:	mov    rdx,0x413380
  40ab7e:	lea    rsi,[rdx+0x8]
  40ab82:	mov    rdi,rax
  40ab85:	call   4036f0 <coda_open@plt>
  40ab8a:	mov    DWORD PTR [rbp-0x4],eax
  40ab8d:	mov    edi,0x1
  40ab92:	call   403740 <coda_set_option_use_mmap@plt>
  40ab97:	cmp    DWORD PTR [rbp-0x4],0x0
  40ab9b:	je     40aba7 <traverse_product@@Base+0x82>
  40ab9d:	mov    eax,0x0
  40aba2:	call   40c3f3 <handle_coda_error@@Base>
  40aba7:	mov    rax,0x413380
  40abae:	mov    rax,QWORD PTR [rax+0x8]
  40abb2:	mov    rsi,rax
  40abb5:	mov    rax,0x413380
  40abbc:	lea    rdi,[rax+0x118]
  40abc3:	call   4038b0 <coda_cursor_set_product@plt>
  40abc8:	test   eax,eax
  40abca:	je     40abd6 <traverse_product@@Base+0xb1>
  40abcc:	mov    eax,0x0
  40abd1:	call   40c3f3 <handle_coda_error@@Base>
  40abd6:	mov    rax,0x413380
  40abdd:	mov    eax,DWORD PTR [rax+0x110]
  40abe3:	cdqe   
  40abe5:	lea    rdx,[rax*8+0x0]
  40abed:	mov    rax,0x413380
  40abf4:	add    rax,rdx
  40abf7:	add    rax,0x10
  40abfb:	mov    rsi,rax
  40abfe:	mov    rax,0x413380
  40ac05:	lea    rdi,[rax+0x118]
  40ac0c:	call   403790 <coda_cursor_get_type@plt>
  40ac11:	test   eax,eax
  40ac13:	je     40ac1f <traverse_product@@Base+0xfa>
  40ac15:	mov    eax,0x0
  40ac1a:	call   40c3f3 <handle_coda_error@@Base>
  40ac1f:	mov    eax,0x0
  40ac24:	call   40a43e <traverse_info_done@@Base+0x594>
  40ac29:	mov    rax,0x413380
  40ac30:	mov    rax,QWORD PTR [rax+0x8]
  40ac34:	mov    rdi,rax
  40ac37:	call   403ac0 <coda_close@plt>
  40ac3c:	mov    rax,0x413380
  40ac43:	mov    QWORD PTR [rax+0x8],0x0
  40ac4b:	nop
  40ac4c:	leave  
  40ac4d:	ret    
  40ac4e:	endbr64 
  40ac52:	push   rbp
  40ac53:	mov    rbp,rsp
  40ac56:	sub    rsp,0x10
  40ac5a:	mov    eax,DWORD PTR [rip+0x86ec]        # 41334c <__bss_start@@Base+0x10>
  40ac60:	test   eax,eax
  40ac62:	jns    40ac83 <traverse_product@@Base+0x15e>
  40ac64:	lea    rcx,[rip+0x4fd1]        # 40fc3c <_IO_stdin_used@@Base+0xc3c>
  40ac6b:	mov    edx,0x2c
  40ac70:	lea    rsi,[rip+0x4e21]        # 40fa98 <_IO_stdin_used@@Base+0xa98>
  40ac77:	lea    rdi,[rip+0x4e7e]        # 40fafc <_IO_stdin_used@@Base+0xafc>
  40ac7e:	call   403860 <__assert_fail@plt>
  40ac83:	mov    eax,DWORD PTR [rip+0x86c3]        # 41334c <__bss_start@@Base+0x10>
  40ac89:	mov    DWORD PTR [rbp-0x4],eax
  40ac8c:	jmp    40acb4 <traverse_product@@Base+0x18f>
  40ac8e:	mov    rax,0x4144c0
  40ac95:	mov    rax,QWORD PTR [rax]
  40ac98:	mov    rcx,rax
  40ac9b:	mov    edx,0x2
  40aca0:	mov    esi,0x1
  40aca5:	lea    rdi,[rip+0x4e5c]        # 40fb08 <_IO_stdin_used@@Base+0xb08>
  40acac:	call   403bc0 <fwrite@plt>
  40acb1:	dec    DWORD PTR [rbp-0x4]
  40acb4:	cmp    DWORD PTR [rbp-0x4],0x0
  40acb8:	jg     40ac8e <traverse_product@@Base+0x169>
  40acba:	nop
  40acbb:	leave  
  40acbc:	ret    
  40acbd:	endbr64 
  40acc1:	push   rbp
  40acc2:	mov    rbp,rsp
  40acc5:	sub    rsp,0xf0
  40accc:	mov    QWORD PTR [rbp-0xe8],rdi
  40acd3:	mov    QWORD PTR [rbp-0xa8],rsi
  40acda:	mov    QWORD PTR [rbp-0xa0],rdx
  40ace1:	mov    QWORD PTR [rbp-0x98],rcx
  40ace8:	mov    QWORD PTR [rbp-0x90],r8
  40acef:	mov    QWORD PTR [rbp-0x88],r9
  40acf6:	test   al,al
  40acf8:	je     40ad22 <traverse_product@@Base+0x1fd>
  40acfa:	vmovaps XMMWORD PTR [rbp-0x80],xmm0
  40acff:	vmovaps XMMWORD PTR [rbp-0x70],xmm1
  40ad04:	vmovaps XMMWORD PTR [rbp-0x60],xmm2
  40ad09:	vmovaps XMMWORD PTR [rbp-0x50],xmm3
  40ad0e:	vmovaps XMMWORD PTR [rbp-0x40],xmm4
  40ad13:	vmovaps XMMWORD PTR [rbp-0x30],xmm5
  40ad18:	vmovaps XMMWORD PTR [rbp-0x20],xmm6
  40ad1d:	vmovaps XMMWORD PTR [rbp-0x10],xmm7
  40ad22:	mov    rax,QWORD PTR fs:0x28
  40ad2b:	mov    QWORD PTR [rbp-0xb8],rax
  40ad32:	xor    eax,eax
  40ad34:	mov    DWORD PTR [rbp-0xd0],0x8
  40ad3e:	mov    DWORD PTR [rbp-0xcc],0x30
  40ad48:	lea    rax,[rbp+0x10]
  40ad4c:	mov    QWORD PTR [rbp-0xc8],rax
  40ad53:	lea    rax,[rbp-0xb0]
  40ad5a:	mov    QWORD PTR [rbp-0xc0],rax
  40ad61:	mov    rax,0x4144c0
  40ad68:	mov    rax,QWORD PTR [rax]
  40ad6b:	lea    rdx,[rbp-0xd0]
  40ad72:	mov    rcx,QWORD PTR [rbp-0xe8]
  40ad79:	mov    rsi,rcx
  40ad7c:	mov    rdi,rax
  40ad7f:	call   403b40 <vfprintf@plt>
  40ad84:	mov    DWORD PTR [rbp-0xd4],eax
  40ad8a:	mov    eax,DWORD PTR [rbp-0xd4]
  40ad90:	mov    rsi,QWORD PTR [rbp-0xb8]
  40ad97:	xor    rsi,QWORD PTR fs:0x28
  40ada0:	je     40ada7 <traverse_product@@Base+0x282>
  40ada2:	call   403840 <__stack_chk_fail@plt>
  40ada7:	leave  
  40ada8:	ret    
  40ada9:	endbr64 
  40adad:	push   rbp
  40adae:	mov    rbp,rsp
  40adb1:	sub    rsp,0xf0
  40adb8:	mov    QWORD PTR [rbp-0xe8],rdi
  40adbf:	mov    QWORD PTR [rbp-0xa8],rsi
  40adc6:	mov    QWORD PTR [rbp-0xa0],rdx
  40adcd:	mov    QWORD PTR [rbp-0x98],rcx
  40add4:	mov    QWORD PTR [rbp-0x90],r8
  40addb:	mov    QWORD PTR [rbp-0x88],r9
  40ade2:	test   al,al
  40ade4:	je     40ae0e <traverse_product@@Base+0x2e9>
  40ade6:	vmovaps XMMWORD PTR [rbp-0x80],xmm0
  40adeb:	vmovaps XMMWORD PTR [rbp-0x70],xmm1
  40adf0:	vmovaps XMMWORD PTR [rbp-0x60],xmm2
  40adf5:	vmovaps XMMWORD PTR [rbp-0x50],xmm3
  40adfa:	vmovaps XMMWORD PTR [rbp-0x40],xmm4
  40adff:	vmovaps XMMWORD PTR [rbp-0x30],xmm5
  40ae04:	vmovaps XMMWORD PTR [rbp-0x20],xmm6
  40ae09:	vmovaps XMMWORD PTR [rbp-0x10],xmm7
  40ae0e:	mov    rax,QWORD PTR fs:0x28
  40ae17:	mov    QWORD PTR [rbp-0xb8],rax
  40ae1e:	xor    eax,eax
  40ae20:	call   40ac4e <traverse_product@@Base+0x129>
  40ae25:	mov    DWORD PTR [rbp-0xd0],0x8
  40ae2f:	mov    DWORD PTR [rbp-0xcc],0x30
  40ae39:	lea    rax,[rbp+0x10]
  40ae3d:	mov    QWORD PTR [rbp-0xc8],rax
  40ae44:	lea    rax,[rbp-0xb0]
  40ae4b:	mov    QWORD PTR [rbp-0xc0],rax
  40ae52:	mov    rax,0x4144c0
  40ae59:	mov    rax,QWORD PTR [rax]
  40ae5c:	lea    rdx,[rbp-0xd0]
  40ae63:	mov    rcx,QWORD PTR [rbp-0xe8]
  40ae6a:	mov    rsi,rcx
  40ae6d:	mov    rdi,rax
  40ae70:	call   403b40 <vfprintf@plt>
  40ae75:	mov    DWORD PTR [rbp-0xd4],eax
  40ae7b:	mov    eax,DWORD PTR [rbp-0xd4]
  40ae81:	mov    rsi,QWORD PTR [rbp-0xb8]
  40ae88:	xor    rsi,QWORD PTR fs:0x28
  40ae91:	je     40ae98 <traverse_product@@Base+0x373>
  40ae93:	call   403840 <__stack_chk_fail@plt>
  40ae98:	leave  
  40ae99:	ret    
  40ae9a:	endbr64 
  40ae9e:	push   rbp
  40ae9f:	mov    rbp,rsp
  40aea2:	sub    rsp,0x20
  40aea6:	mov    QWORD PTR [rbp-0x18],rdi
  40aeaa:	mov    QWORD PTR [rbp-0x20],rsi
  40aeae:	mov    QWORD PTR [rbp-0x8],0x0
  40aeb6:	jmp    40afd7 <traverse_product@@Base+0x4b2>
  40aebb:	mov    rdx,QWORD PTR [rbp-0x8]
  40aebf:	mov    rax,QWORD PTR [rbp-0x18]
  40aec3:	add    rax,rdx
  40aec6:	movzx  eax,BYTE PTR [rax]
  40aec9:	mov    BYTE PTR [rbp-0x9],al
  40aecc:	movsx  eax,BYTE PTR [rbp-0x9]
  40aed0:	cmp    eax,0xc
  40aed3:	je     40af1c <traverse_product@@Base+0x3f7>
  40aed5:	cmp    eax,0xc
  40aed8:	jg     40aeee <traverse_product@@Base+0x3c9>
  40aeda:	cmp    eax,0x9
  40aedd:	je     40af5b <traverse_product@@Base+0x436>
  40aedf:	cmp    eax,0xa
  40aee2:	je     40af32 <traverse_product@@Base+0x40d>
  40aee4:	cmp    eax,0x8
  40aee7:	je     40af06 <traverse_product@@Base+0x3e1>
  40aee9:	jmp    40af94 <traverse_product@@Base+0x46f>
  40aeee:	cmp    eax,0x22
  40aef1:	je     40af6e <traverse_product@@Base+0x449>
  40aef3:	cmp    eax,0x5c
  40aef6:	je     40af81 <traverse_product@@Base+0x45c>
  40aefc:	cmp    eax,0xd
  40aeff:	je     40af48 <traverse_product@@Base+0x423>
  40af01:	jmp    40af94 <traverse_product@@Base+0x46f>
  40af06:	lea    rdi,[rip+0x4bfe]        # 40fb0b <_IO_stdin_used@@Base+0xb0b>
  40af0d:	mov    eax,0x0
  40af12:	call   40acbd <traverse_product@@Base+0x198>
  40af17:	jmp    40afd3 <traverse_product@@Base+0x4ae>
  40af1c:	lea    rdi,[rip+0x4beb]        # 40fb0e <_IO_stdin_used@@Base+0xb0e>
  40af23:	mov    eax,0x0
  40af28:	call   40acbd <traverse_product@@Base+0x198>
  40af2d:	jmp    40afd3 <traverse_product@@Base+0x4ae>
  40af32:	lea    rdi,[rip+0x4bd8]        # 40fb11 <_IO_stdin_used@@Base+0xb11>
  40af39:	mov    eax,0x0
  40af3e:	call   40acbd <traverse_product@@Base+0x198>
  40af43:	jmp    40afd3 <traverse_product@@Base+0x4ae>
  40af48:	lea    rdi,[rip+0x4bc5]        # 40fb14 <_IO_stdin_used@@Base+0xb14>
  40af4f:	mov    eax,0x0
  40af54:	call   40acbd <traverse_product@@Base+0x198>
  40af59:	jmp    40afd3 <traverse_product@@Base+0x4ae>
  40af5b:	lea    rdi,[rip+0x4bb5]        # 40fb17 <_IO_stdin_used@@Base+0xb17>
  40af62:	mov    eax,0x0
  40af67:	call   40acbd <traverse_product@@Base+0x198>
  40af6c:	jmp    40afd3 <traverse_product@@Base+0x4ae>
  40af6e:	lea    rdi,[rip+0x4ba5]        # 40fb1a <_IO_stdin_used@@Base+0xb1a>
  40af75:	mov    eax,0x0
  40af7a:	call   40acbd <traverse_product@@Base+0x198>
  40af7f:	jmp    40afd3 <traverse_product@@Base+0x4ae>
  40af81:	lea    rdi,[rip+0x4b95]        # 40fb1d <_IO_stdin_used@@Base+0xb1d>
  40af88:	mov    eax,0x0
  40af8d:	call   40acbd <traverse_product@@Base+0x198>
  40af92:	jmp    40afd3 <traverse_product@@Base+0x4ae>
  40af94:	cmp    BYTE PTR [rbp-0x9],0x1f
  40af98:	jle    40afb9 <traverse_product@@Base+0x494>
  40af9a:	cmp    BYTE PTR [rbp-0x9],0x7f
  40af9e:	je     40afb9 <traverse_product@@Base+0x494>
  40afa0:	movsx  eax,BYTE PTR [rbp-0x9]
  40afa4:	mov    esi,eax
  40afa6:	lea    rdi,[rip+0x4b73]        # 40fb20 <_IO_stdin_used@@Base+0xb20>
  40afad:	mov    eax,0x0
  40afb2:	call   40acbd <traverse_product@@Base+0x198>
  40afb7:	jmp    40afd3 <traverse_product@@Base+0x4ae>
  40afb9:	movzx  eax,BYTE PTR [rbp-0x9]
  40afbd:	movzx  eax,al
  40afc0:	mov    esi,eax
  40afc2:	lea    rdi,[rip+0x4b5a]        # 40fb23 <_IO_stdin_used@@Base+0xb23>
  40afc9:	mov    eax,0x0
  40afce:	call   40acbd <traverse_product@@Base+0x198>
  40afd3:	inc    QWORD PTR [rbp-0x8]
  40afd7:	mov    rax,QWORD PTR [rbp-0x8]
  40afdb:	cmp    rax,QWORD PTR [rbp-0x20]
  40afdf:	jl     40aebb <traverse_product@@Base+0x396>
  40afe5:	nop
  40afe6:	leave  
  40afe7:	ret    
  40afe8:	endbr64 
  40afec:	push   rbp
  40afed:	mov    rbp,rsp
  40aff0:	sub    rsp,0xe0
  40aff7:	mov    QWORD PTR [rbp-0xd8],rdi
  40affe:	mov    DWORD PTR [rbp-0xdc],esi
  40b004:	mov    rax,QWORD PTR fs:0x28
  40b00d:	mov    QWORD PTR [rbp-0x8],rax
  40b011:	xor    eax,eax
  40b013:	mov    DWORD PTR [rbp-0xc4],0x0
  40b01d:	mov    eax,DWORD PTR [rip+0x832d]        # 413350 <__bss_start@@Base+0x14>
  40b023:	test   eax,eax
  40b025:	je     40b10b <traverse_product@@Base+0x5e6>
  40b02b:	lea    rdx,[rbp-0xc4]
  40b032:	mov    rax,QWORD PTR [rbp-0xd8]
  40b039:	mov    rsi,rdx
  40b03c:	mov    rdi,rax
  40b03f:	call   4037e0 <coda_cursor_has_attributes@plt>
  40b044:	test   eax,eax
  40b046:	je     40b052 <traverse_product@@Base+0x52d>
  40b048:	mov    eax,0x0
  40b04d:	call   40c3f3 <handle_coda_error@@Base>
  40b052:	mov    eax,DWORD PTR [rbp-0xc4]
  40b058:	test   eax,eax
  40b05a:	je     40b10b <traverse_product@@Base+0x5e6>
  40b060:	cmp    DWORD PTR [rbp-0xdc],0x0
  40b067:	je     40b07f <traverse_product@@Base+0x55a>
  40b069:	lea    rdi,[rip+0x4aba]        # 40fb2a <_IO_stdin_used@@Base+0xb2a>
  40b070:	mov    eax,0x0
  40b075:	call   40acbd <traverse_product@@Base+0x198>
  40b07a:	call   40ac4e <traverse_product@@Base+0x129>
  40b07f:	lea    rdi,[rip+0x4aa6]        # 40fb2c <_IO_stdin_used@@Base+0xb2c>
  40b086:	mov    eax,0x0
  40b08b:	call   40acbd <traverse_product@@Base+0x198>
  40b090:	mov    rax,QWORD PTR [rbp-0xd8]
  40b097:	mov    rdi,rax
  40b09a:	call   403a20 <coda_cursor_goto_attributes@plt>
  40b09f:	test   eax,eax
  40b0a1:	je     40b0ad <traverse_product@@Base+0x588>
  40b0a3:	mov    eax,0x0
  40b0a8:	call   40c3f3 <handle_coda_error@@Base>
  40b0ad:	mov    eax,DWORD PTR [rip+0x8299]        # 41334c <__bss_start@@Base+0x10>
  40b0b3:	inc    eax
  40b0b5:	mov    DWORD PTR [rip+0x8291],eax        # 41334c <__bss_start@@Base+0x10>
  40b0bb:	mov    rax,QWORD PTR [rbp-0xd8]
  40b0c2:	mov    esi,0x1
  40b0c7:	mov    rdi,rax
  40b0ca:	call   40afe8 <traverse_product@@Base+0x4c3>
  40b0cf:	mov    eax,DWORD PTR [rip+0x8277]        # 41334c <__bss_start@@Base+0x10>
  40b0d5:	dec    eax
  40b0d7:	mov    DWORD PTR [rip+0x826f],eax        # 41334c <__bss_start@@Base+0x10>
  40b0dd:	mov    rax,QWORD PTR [rbp-0xd8]
  40b0e4:	mov    rdi,rax
  40b0e7:	call   403940 <coda_cursor_goto_parent@plt>
  40b0ec:	lea    rdi,[rip+0x4a40]        # 40fb33 <_IO_stdin_used@@Base+0xb33>
  40b0f3:	mov    eax,0x0
  40b0f8:	call   40ada9 <traverse_product@@Base+0x284>
  40b0fd:	mov    eax,DWORD PTR [rip+0x8249]        # 41334c <__bss_start@@Base+0x10>
  40b103:	inc    eax
  40b105:	mov    DWORD PTR [rip+0x8241],eax        # 41334c <__bss_start@@Base+0x10>
  40b10b:	lea    rdx,[rbp-0xc8]
  40b112:	mov    rax,QWORD PTR [rbp-0xd8]
  40b119:	mov    rsi,rdx
  40b11c:	mov    rdi,rax
  40b11f:	call   4037f0 <coda_cursor_get_type_class@plt>
  40b124:	test   eax,eax
  40b126:	je     40b132 <traverse_product@@Base+0x60d>
  40b128:	mov    eax,0x0
  40b12d:	call   40c3f3 <handle_coda_error@@Base>
  40b132:	mov    eax,DWORD PTR [rbp-0xc8]
  40b138:	cmp    eax,0x6
  40b13b:	ja     40bca8 <traverse_product@@Base+0x1183>
  40b141:	mov    eax,eax
  40b143:	lea    rdx,[rax*4+0x0]
  40b14b:	lea    rax,[rip+0x4a96]        # 40fbe8 <_IO_stdin_used@@Base+0xbe8>
  40b152:	mov    eax,DWORD PTR [rdx+rax*1]
  40b155:	movsxd rdx,eax
  40b158:	lea    rax,[rip+0x4a89]        # 40fbe8 <_IO_stdin_used@@Base+0xbe8>
  40b15f:	add    rax,rdx
  40b162:	notrack jmp rax
  40b165:	lea    rdx,[rbp-0xb0]
  40b16c:	mov    rax,QWORD PTR [rbp-0xd8]
  40b173:	mov    rsi,rdx
  40b176:	mov    rdi,rax
  40b179:	call   403720 <coda_cursor_get_num_elements@plt>
  40b17e:	test   eax,eax
  40b180:	je     40b18c <traverse_product@@Base+0x667>
  40b182:	mov    eax,0x0
  40b187:	call   40c3f3 <handle_coda_error@@Base>
  40b18c:	mov    rax,QWORD PTR [rbp-0xb0]
  40b193:	test   rax,rax
  40b196:	jle    40b481 <traverse_product@@Base+0x95c>
  40b19c:	cmp    DWORD PTR [rbp-0xdc],0x0
  40b1a3:	je     40b1b6 <traverse_product@@Base+0x691>
  40b1a5:	lea    rdi,[rip+0x497e]        # 40fb2a <_IO_stdin_used@@Base+0xb2a>
  40b1ac:	mov    eax,0x0
  40b1b1:	call   40acbd <traverse_product@@Base+0x198>
  40b1b6:	lea    rdx,[rbp-0xa8]
  40b1bd:	mov    rax,QWORD PTR [rbp-0xd8]
  40b1c4:	mov    rsi,rdx
  40b1c7:	mov    rdi,rax
  40b1ca:	call   403790 <coda_cursor_get_type@plt>
  40b1cf:	test   eax,eax
  40b1d1:	je     40b1dd <traverse_product@@Base+0x6b8>
  40b1d3:	mov    eax,0x0
  40b1d8:	call   40c3f3 <handle_coda_error@@Base>
  40b1dd:	mov    rax,QWORD PTR [rbp-0xa8]
  40b1e4:	lea    rdx,[rbp-0xc0]
  40b1eb:	mov    rsi,rdx
  40b1ee:	mov    rdi,rax
  40b1f1:	call   403a50 <coda_type_get_record_union_status@plt>
  40b1f6:	test   eax,eax
  40b1f8:	je     40b204 <traverse_product@@Base+0x6df>
  40b1fa:	mov    eax,0x0
  40b1ff:	call   40c3f3 <handle_coda_error@@Base>
  40b204:	mov    eax,DWORD PTR [rbp-0xc0]
  40b20a:	test   eax,eax
  40b20c:	je     40b2fb <traverse_product@@Base+0x7d6>
  40b212:	lea    rdx,[rbp-0xa0]
  40b219:	mov    rax,QWORD PTR [rbp-0xd8]
  40b220:	mov    rsi,rdx
  40b223:	mov    rdi,rax
  40b226:	call   403b90 <coda_cursor_get_available_union_field_index@plt>
  40b22b:	test   eax,eax
  40b22d:	je     40b239 <traverse_product@@Base+0x714>
  40b22f:	mov    eax,0x0
  40b234:	call   40c3f3 <handle_coda_error@@Base>
  40b239:	mov    rcx,QWORD PTR [rbp-0xa0]
  40b240:	mov    rax,QWORD PTR [rbp-0xa8]
  40b247:	lea    rdx,[rbp-0x98]
  40b24e:	mov    rsi,rcx
  40b251:	mov    rdi,rax
  40b254:	call   403c10 <coda_type_get_record_field_name@plt>
  40b259:	test   eax,eax
  40b25b:	je     40b267 <traverse_product@@Base+0x742>
  40b25d:	mov    eax,0x0
  40b262:	call   40c3f3 <handle_coda_error@@Base>
  40b267:	mov    rdx,QWORD PTR [rbp-0xa0]
  40b26e:	mov    rax,QWORD PTR [rbp-0xd8]
  40b275:	mov    rsi,rdx
  40b278:	mov    rdi,rax
  40b27b:	call   4038e0 <coda_cursor_goto_record_field_by_index@plt>
  40b280:	test   eax,eax
  40b282:	je     40b28e <traverse_product@@Base+0x769>
  40b284:	mov    eax,0x0
  40b289:	call   40c3f3 <handle_coda_error@@Base>
  40b28e:	cmp    DWORD PTR [rbp-0xdc],0x0
  40b295:	je     40b29c <traverse_product@@Base+0x777>
  40b297:	call   40ac4e <traverse_product@@Base+0x129>
  40b29c:	mov    rax,QWORD PTR [rbp-0x98]
  40b2a3:	mov    rsi,rax
  40b2a6:	lea    rdi,[rip+0x488d]        # 40fb3a <_IO_stdin_used@@Base+0xb3a>
  40b2ad:	mov    eax,0x0
  40b2b2:	call   40acbd <traverse_product@@Base+0x198>
  40b2b7:	mov    eax,DWORD PTR [rip+0x808f]        # 41334c <__bss_start@@Base+0x10>
  40b2bd:	inc    eax
  40b2bf:	mov    DWORD PTR [rip+0x8087],eax        # 41334c <__bss_start@@Base+0x10>
  40b2c5:	mov    rax,QWORD PTR [rbp-0xd8]
  40b2cc:	mov    esi,0x1
  40b2d1:	mov    rdi,rax
  40b2d4:	call   40afe8 <traverse_product@@Base+0x4c3>
  40b2d9:	mov    eax,DWORD PTR [rip+0x806d]        # 41334c <__bss_start@@Base+0x10>
  40b2df:	dec    eax
  40b2e1:	mov    DWORD PTR [rip+0x8065],eax        # 41334c <__bss_start@@Base+0x10>
  40b2e7:	mov    rax,QWORD PTR [rbp-0xd8]
  40b2ee:	mov    rdi,rax
  40b2f1:	call   403940 <coda_cursor_goto_parent@plt>
  40b2f6:	jmp    40bca8 <traverse_product@@Base+0x1183>
  40b2fb:	mov    DWORD PTR [rbp-0xb8],0x1
  40b305:	mov    rax,QWORD PTR [rbp-0xd8]
  40b30c:	mov    rdi,rax
  40b30f:	call   4038c0 <coda_cursor_goto_first_record_field@plt>
  40b314:	test   eax,eax
  40b316:	je     40b322 <traverse_product@@Base+0x7fd>
  40b318:	mov    eax,0x0
  40b31d:	call   40c3f3 <handle_coda_error@@Base>
  40b322:	mov    QWORD PTR [rbp-0xa0],0x0
  40b32d:	jmp    40b456 <traverse_product@@Base+0x931>
  40b332:	mov    rcx,QWORD PTR [rbp-0xa0]
  40b339:	mov    rax,QWORD PTR [rbp-0xa8]
  40b340:	lea    rdx,[rbp-0xbc]
  40b347:	mov    rsi,rcx
  40b34a:	mov    rdi,rax
  40b34d:	call   4036c0 <coda_type_get_record_field_hidden_status@plt>
  40b352:	test   eax,eax
  40b354:	je     40b360 <traverse_product@@Base+0x83b>
  40b356:	mov    eax,0x0
  40b35b:	call   40c3f3 <handle_coda_error@@Base>
  40b360:	mov    eax,DWORD PTR [rbp-0xbc]
  40b366:	test   eax,eax
  40b368:	jne    40b411 <traverse_product@@Base+0x8ec>
  40b36e:	mov    rcx,QWORD PTR [rbp-0xa0]
  40b375:	mov    rax,QWORD PTR [rbp-0xa8]
  40b37c:	lea    rdx,[rbp-0x98]
  40b383:	mov    rsi,rcx
  40b386:	mov    rdi,rax
  40b389:	call   403c10 <coda_type_get_record_field_name@plt>
  40b38e:	test   eax,eax
  40b390:	je     40b39c <traverse_product@@Base+0x877>
  40b392:	mov    eax,0x0
  40b397:	call   40c3f3 <handle_coda_error@@Base>
  40b39c:	cmp    DWORD PTR [rbp-0xdc],0x0
  40b3a3:	jne    40b3ae <traverse_product@@Base+0x889>
  40b3a5:	cmp    DWORD PTR [rbp-0xb8],0x0
  40b3ac:	jne    40b3b3 <traverse_product@@Base+0x88e>
  40b3ae:	call   40ac4e <traverse_product@@Base+0x129>
  40b3b3:	cmp    DWORD PTR [rbp-0xb8],0x0
  40b3ba:	je     40b3c6 <traverse_product@@Base+0x8a1>
  40b3bc:	mov    DWORD PTR [rbp-0xb8],0x0
  40b3c6:	mov    rax,QWORD PTR [rbp-0x98]
  40b3cd:	mov    rsi,rax
  40b3d0:	lea    rdi,[rip+0x4763]        # 40fb3a <_IO_stdin_used@@Base+0xb3a>
  40b3d7:	mov    eax,0x0
  40b3dc:	call   40acbd <traverse_product@@Base+0x198>
  40b3e1:	mov    eax,DWORD PTR [rip+0x7f65]        # 41334c <__bss_start@@Base+0x10>
  40b3e7:	inc    eax
  40b3e9:	mov    DWORD PTR [rip+0x7f5d],eax        # 41334c <__bss_start@@Base+0x10>
  40b3ef:	mov    rax,QWORD PTR [rbp-0xd8]
  40b3f6:	mov    esi,0x1
  40b3fb:	mov    rdi,rax
  40b3fe:	call   40afe8 <traverse_product@@Base+0x4c3>
  40b403:	mov    eax,DWORD PTR [rip+0x7f43]        # 41334c <__bss_start@@Base+0x10>
  40b409:	dec    eax
  40b40b:	mov    DWORD PTR [rip+0x7f3b],eax        # 41334c <__bss_start@@Base+0x10>
  40b411:	mov    rax,QWORD PTR [rbp-0xb0]
  40b418:	lea    rdx,[rax-0x1]
  40b41c:	mov    rax,QWORD PTR [rbp-0xa0]
  40b423:	cmp    rdx,rax
  40b426:	jle    40b445 <traverse_product@@Base+0x920>
  40b428:	mov    rax,QWORD PTR [rbp-0xd8]
  40b42f:	mov    rdi,rax
  40b432:	call   403b10 <coda_cursor_goto_next_record_field@plt>
  40b437:	test   eax,eax
  40b439:	je     40b445 <traverse_product@@Base+0x920>
  40b43b:	mov    eax,0x0
  40b440:	call   40c3f3 <handle_coda_error@@Base>
  40b445:	mov    rax,QWORD PTR [rbp-0xa0]
  40b44c:	inc    rax
  40b44f:	mov    QWORD PTR [rbp-0xa0],rax
  40b456:	mov    rdx,QWORD PTR [rbp-0xa0]
  40b45d:	mov    rax,QWORD PTR [rbp-0xb0]
  40b464:	cmp    rdx,rax
  40b467:	jl     40b332 <traverse_product@@Base+0x80d>
  40b46d:	mov    rax,QWORD PTR [rbp-0xd8]
  40b474:	mov    rdi,rax
  40b477:	call   403940 <coda_cursor_goto_parent@plt>
  40b47c:	jmp    40bca8 <traverse_product@@Base+0x1183>
  40b481:	lea    rdi,[rip+0x46b7]        # 40fb3f <_IO_stdin_used@@Base+0xb3f>
  40b488:	mov    eax,0x0
  40b48d:	call   40acbd <traverse_product@@Base+0x198>
  40b492:	jmp    40bca8 <traverse_product@@Base+0x1183>
  40b497:	lea    rdx,[rbp-0x70]
  40b49b:	lea    rcx,[rbp-0x98]
  40b4a2:	mov    rax,QWORD PTR [rbp-0xd8]
  40b4a9:	mov    rsi,rcx
  40b4ac:	mov    rdi,rax
  40b4af:	call   403aa0 <coda_cursor_get_array_dim@plt>
  40b4b4:	test   eax,eax
  40b4b6:	je     40b4c2 <traverse_product@@Base+0x99d>
  40b4b8:	mov    eax,0x0
  40b4bd:	call   40c3f3 <handle_coda_error@@Base>
  40b4c2:	mov    eax,DWORD PTR [rbp-0x98]
  40b4c8:	test   eax,eax
  40b4ca:	js     40b61c <traverse_product@@Base+0xaf7>
  40b4d0:	mov    QWORD PTR [rbp-0x90],0x1
  40b4db:	mov    DWORD PTR [rbp-0xb4],0x0
  40b4e5:	jmp    40b50c <traverse_product@@Base+0x9e7>
  40b4e7:	mov    eax,DWORD PTR [rbp-0xb4]
  40b4ed:	cdqe   
  40b4ef:	mov    rax,QWORD PTR [rbp+rax*8-0x70]
  40b4f4:	mov    rdx,QWORD PTR [rbp-0x90]
  40b4fb:	imul   rax,rdx
  40b4ff:	mov    QWORD PTR [rbp-0x90],rax
  40b506:	inc    DWORD PTR [rbp-0xb4]
  40b50c:	mov    eax,DWORD PTR [rbp-0x98]
  40b512:	cmp    DWORD PTR [rbp-0xb4],eax
  40b518:	jl     40b4e7 <traverse_product@@Base+0x9c2>
  40b51a:	cmp    QWORD PTR [rbp-0x90],0x0
  40b522:	jle    40b606 <traverse_product@@Base+0xae1>
  40b528:	lea    rdi,[rip+0x45fb]        # 40fb2a <_IO_stdin_used@@Base+0xb2a>
  40b52f:	mov    eax,0x0
  40b534:	call   40acbd <traverse_product@@Base+0x198>
  40b539:	mov    rax,QWORD PTR [rbp-0xd8]
  40b540:	mov    rdi,rax
  40b543:	call   403890 <coda_cursor_goto_first_array_element@plt>
  40b548:	test   eax,eax
  40b54a:	je     40b556 <traverse_product@@Base+0xa31>
  40b54c:	mov    eax,0x0
  40b551:	call   40c3f3 <handle_coda_error@@Base>
  40b556:	mov    DWORD PTR [rbp-0xb4],0x0
  40b560:	jmp    40b5dd <traverse_product@@Base+0xab8>
  40b562:	lea    rdi,[rip+0x45da]        # 40fb43 <_IO_stdin_used@@Base+0xb43>
  40b569:	mov    eax,0x0
  40b56e:	call   40ada9 <traverse_product@@Base+0x284>
  40b573:	mov    eax,DWORD PTR [rip+0x7dd3]        # 41334c <__bss_start@@Base+0x10>
  40b579:	inc    eax
  40b57b:	mov    DWORD PTR [rip+0x7dcb],eax        # 41334c <__bss_start@@Base+0x10>
  40b581:	mov    rax,QWORD PTR [rbp-0xd8]
  40b588:	mov    esi,0x0
  40b58d:	mov    rdi,rax
  40b590:	call   40afe8 <traverse_product@@Base+0x4c3>
  40b595:	mov    eax,DWORD PTR [rip+0x7db1]        # 41334c <__bss_start@@Base+0x10>
  40b59b:	dec    eax
  40b59d:	mov    DWORD PTR [rip+0x7da9],eax        # 41334c <__bss_start@@Base+0x10>
  40b5a3:	mov    eax,DWORD PTR [rbp-0xb4]
  40b5a9:	cdqe   
  40b5ab:	mov    rdx,QWORD PTR [rbp-0x90]
  40b5b2:	dec    rdx
  40b5b5:	cmp    rax,rdx
  40b5b8:	jge    40b5d7 <traverse_product@@Base+0xab2>
  40b5ba:	mov    rax,QWORD PTR [rbp-0xd8]
  40b5c1:	mov    rdi,rax
  40b5c4:	call   4039c0 <coda_cursor_goto_next_array_element@plt>
  40b5c9:	test   eax,eax
  40b5cb:	je     40b5d7 <traverse_product@@Base+0xab2>
  40b5cd:	mov    eax,0x0
  40b5d2:	call   40c3f3 <handle_coda_error@@Base>
  40b5d7:	inc    DWORD PTR [rbp-0xb4]
  40b5dd:	mov    eax,DWORD PTR [rbp-0xb4]
  40b5e3:	cdqe   
  40b5e5:	cmp    QWORD PTR [rbp-0x90],rax
  40b5ec:	jg     40b562 <traverse_product@@Base+0xa3d>
  40b5f2:	mov    rax,QWORD PTR [rbp-0xd8]
  40b5f9:	mov    rdi,rax
  40b5fc:	call   403940 <coda_cursor_goto_parent@plt>
  40b601:	jmp    40bca8 <traverse_product@@Base+0x1183>
  40b606:	lea    rdi,[rip+0x4539]        # 40fb46 <_IO_stdin_used@@Base+0xb46>
  40b60d:	mov    eax,0x0
  40b612:	call   40acbd <traverse_product@@Base+0x198>
  40b617:	jmp    40bca8 <traverse_product@@Base+0x1183>
  40b61c:	lea    rdi,[rip+0x4523]        # 40fb46 <_IO_stdin_used@@Base+0xb46>
  40b623:	mov    eax,0x0
  40b628:	call   40acbd <traverse_product@@Base+0x198>
  40b62d:	jmp    40bca8 <traverse_product@@Base+0x1183>
  40b632:	lea    rdx,[rbp-0xa0]
  40b639:	mov    rax,QWORD PTR [rbp-0xd8]
  40b640:	mov    rsi,rdx
  40b643:	mov    rdi,rax
  40b646:	call   403900 <coda_cursor_get_read_type@plt>
  40b64b:	test   eax,eax
  40b64d:	je     40b659 <traverse_product@@Base+0xb34>
  40b64f:	mov    eax,0x0
  40b654:	call   40c3f3 <handle_coda_error@@Base>
  40b659:	mov    eax,DWORD PTR [rbp-0xa0]
  40b65f:	inc    eax
  40b661:	cmp    eax,0xd
  40b664:	ja     40bca7 <traverse_product@@Base+0x1182>
  40b66a:	mov    eax,eax
  40b66c:	lea    rdx,[rax*4+0x0]
  40b674:	lea    rax,[rip+0x4589]        # 40fc04 <_IO_stdin_used@@Base+0xc04>
  40b67b:	mov    eax,DWORD PTR [rdx+rax*1]
  40b67e:	movsxd rdx,eax
  40b681:	lea    rax,[rip+0x457c]        # 40fc04 <_IO_stdin_used@@Base+0xc04>
  40b688:	add    rax,rdx
  40b68b:	notrack jmp rax
  40b68e:	lea    rdx,[rbp-0x98]
  40b695:	mov    rax,QWORD PTR [rbp-0xd8]
  40b69c:	mov    rsi,rdx
  40b69f:	mov    rdi,rax
  40b6a2:	call   403a30 <coda_cursor_read_char@plt>
  40b6a7:	test   eax,eax
  40b6a9:	je     40b6b5 <traverse_product@@Base+0xb90>
  40b6ab:	mov    eax,0x0
  40b6b0:	call   40c3f3 <handle_coda_error@@Base>
  40b6b5:	lea    rdi,[rip+0x448e]        # 40fb4a <_IO_stdin_used@@Base+0xb4a>
  40b6bc:	mov    eax,0x0
  40b6c1:	call   40acbd <traverse_product@@Base+0x198>
  40b6c6:	lea    rax,[rbp-0x98]
  40b6cd:	mov    esi,0x1
  40b6d2:	mov    rdi,rax
  40b6d5:	call   40ae9a <traverse_product@@Base+0x375>
  40b6da:	lea    rdi,[rip+0x446b]        # 40fb4c <_IO_stdin_used@@Base+0xb4c>
  40b6e1:	mov    eax,0x0
  40b6e6:	call   40acbd <traverse_product@@Base+0x198>
  40b6eb:	jmp    40badd <traverse_product@@Base+0xfb8>
  40b6f0:	lea    rdx,[rbp-0x98]
  40b6f7:	mov    rax,QWORD PTR [rbp-0xd8]
  40b6fe:	mov    rsi,rdx
  40b701:	mov    rdi,rax
  40b704:	call   403980 <coda_cursor_get_string_length@plt>
  40b709:	test   eax,eax
  40b70b:	je     40b717 <traverse_product@@Base+0xbf2>
  40b70d:	mov    eax,0x0
  40b712:	call   40c3f3 <handle_coda_error@@Base>
  40b717:	mov    rax,QWORD PTR [rbp-0x98]
  40b71e:	inc    rax
  40b721:	mov    rdi,rax
  40b724:	call   403a00 <malloc@plt>
  40b729:	mov    QWORD PTR [rbp-0x88],rax
  40b730:	cmp    QWORD PTR [rbp-0x88],0x0
  40b738:	jne    40b774 <traverse_product@@Base+0xc4f>
  40b73a:	mov    rax,QWORD PTR [rbp-0x98]
  40b741:	inc    rax
  40b744:	mov    r8d,0x169
  40b74a:	lea    rcx,[rip+0x4347]        # 40fa98 <_IO_stdin_used@@Base+0xa98>
  40b751:	mov    rdx,rax
  40b754:	lea    rsi,[rip+0x43f5]        # 40fb50 <_IO_stdin_used@@Base+0xb50>
  40b75b:	mov    edi,0xffffffff
  40b760:	mov    eax,0x0
  40b765:	call   4036e0 <coda_set_error@plt>
  40b76a:	mov    eax,0x0
  40b76f:	call   40c3f3 <handle_coda_error@@Base>
  40b774:	mov    rax,QWORD PTR [rbp-0x98]
  40b77b:	lea    rdx,[rax+0x1]
  40b77f:	mov    rcx,QWORD PTR [rbp-0x88]
  40b786:	mov    rax,QWORD PTR [rbp-0xd8]
  40b78d:	mov    rsi,rcx
  40b790:	mov    rdi,rax
  40b793:	call   403930 <coda_cursor_read_string@plt>
  40b798:	test   eax,eax
  40b79a:	je     40b7a6 <traverse_product@@Base+0xc81>
  40b79c:	mov    eax,0x0
  40b7a1:	call   40c3f3 <handle_coda_error@@Base>
  40b7a6:	lea    rdi,[rip+0x439d]        # 40fb4a <_IO_stdin_used@@Base+0xb4a>
  40b7ad:	mov    eax,0x0
  40b7b2:	call   40acbd <traverse_product@@Base+0x198>
  40b7b7:	mov    rdx,QWORD PTR [rbp-0x98]
  40b7be:	mov    rax,QWORD PTR [rbp-0x88]
  40b7c5:	mov    rsi,rdx
  40b7c8:	mov    rdi,rax
  40b7cb:	call   40ae9a <traverse_product@@Base+0x375>
  40b7d0:	mov    rax,QWORD PTR [rbp-0x98]
  40b7d7:	mov    rsi,rax
  40b7da:	lea    rdi,[rip+0x436b]        # 40fb4c <_IO_stdin_used@@Base+0xb4c>
  40b7e1:	mov    eax,0x0
  40b7e6:	call   40acbd <traverse_product@@Base+0x198>
  40b7eb:	mov    rax,QWORD PTR [rbp-0x88]
  40b7f2:	mov    rdi,rax
  40b7f5:	call   403680 <free@plt>
  40b7fa:	jmp    40badd <traverse_product@@Base+0xfb8>
  40b7ff:	lea    rdx,[rbp-0x98]
  40b806:	mov    rax,QWORD PTR [rbp-0xd8]
  40b80d:	mov    rsi,rdx
  40b810:	mov    rdi,rax
  40b813:	call   403b50 <coda_cursor_get_bit_size@plt>
  40b818:	test   eax,eax
  40b81a:	je     40b826 <traverse_product@@Base+0xd01>
  40b81c:	mov    eax,0x0
  40b821:	call   40c3f3 <handle_coda_error@@Base>
  40b826:	mov    rax,QWORD PTR [rbp-0x98]
  40b82d:	sar    rax,0x3
  40b831:	mov    rdx,rax
  40b834:	mov    rax,QWORD PTR [rbp-0x98]
  40b83b:	and    eax,0x7
  40b83e:	test   rax,rax
  40b841:	je     40b84a <traverse_product@@Base+0xd25>
  40b843:	mov    eax,0x1
  40b848:	jmp    40b84f <traverse_product@@Base+0xd2a>
  40b84a:	mov    eax,0x0
  40b84f:	add    rax,rdx
  40b852:	mov    QWORD PTR [rbp-0x80],rax
  40b856:	mov    rax,QWORD PTR [rbp-0x80]
  40b85a:	mov    rdi,rax
  40b85d:	call   403a00 <malloc@plt>
  40b862:	mov    QWORD PTR [rbp-0x78],rax
  40b866:	cmp    QWORD PTR [rbp-0x78],0x0
  40b86b:	jne    40b8a1 <traverse_product@@Base+0xd7c>
  40b86d:	mov    rax,QWORD PTR [rbp-0x80]
  40b871:	mov    r8d,0x188
  40b877:	lea    rcx,[rip+0x421a]        # 40fa98 <_IO_stdin_used@@Base+0xa98>
  40b87e:	mov    rdx,rax
  40b881:	lea    rsi,[rip+0x42c8]        # 40fb50 <_IO_stdin_used@@Base+0xb50>
  40b888:	mov    edi,0xffffffff
  40b88d:	mov    eax,0x0
  40b892:	call   4036e0 <coda_set_error@plt>
  40b897:	mov    eax,0x0
  40b89c:	call   40c3f3 <handle_coda_error@@Base>
  40b8a1:	mov    rdx,QWORD PTR [rbp-0x98]
  40b8a8:	mov    rsi,QWORD PTR [rbp-0x78]
  40b8ac:	mov    rax,QWORD PTR [rbp-0xd8]
  40b8b3:	mov    rcx,rdx
  40b8b6:	mov    edx,0x0
  40b8bb:	mov    rdi,rax
  40b8be:	call   403c20 <coda_cursor_read_bits@plt>
  40b8c3:	test   eax,eax
  40b8c5:	je     40b8d1 <traverse_product@@Base+0xdac>
  40b8c7:	mov    eax,0x0
  40b8cc:	call   40c3f3 <handle_coda_error@@Base>
  40b8d1:	lea    rdi,[rip+0x4272]        # 40fb4a <_IO_stdin_used@@Base+0xb4a>
  40b8d8:	mov    eax,0x0
  40b8dd:	call   40acbd <traverse_product@@Base+0x198>
  40b8e2:	mov    rdx,QWORD PTR [rbp-0x80]
  40b8e6:	mov    rax,QWORD PTR [rbp-0x78]
  40b8ea:	mov    rsi,rdx
  40b8ed:	mov    rdi,rax
  40b8f0:	call   40ae9a <traverse_product@@Base+0x375>
  40b8f5:	lea    rdi,[rip+0x4250]        # 40fb4c <_IO_stdin_used@@Base+0xb4c>
  40b8fc:	mov    eax,0x0
  40b901:	call   40acbd <traverse_product@@Base+0x198>
  40b906:	mov    rax,QWORD PTR [rbp-0x78]
  40b90a:	mov    rdi,rax
  40b90d:	call   403680 <free@plt>
  40b912:	jmp    40badd <traverse_product@@Base+0xfb8>
  40b917:	lea    rdx,[rbp-0x98]
  40b91e:	mov    rax,QWORD PTR [rbp-0xd8]
  40b925:	mov    rsi,rdx
  40b928:	mov    rdi,rax
  40b92b:	call   403bb0 <coda_cursor_read_int32@plt>
  40b930:	test   eax,eax
  40b932:	je     40b93e <traverse_product@@Base+0xe19>
  40b934:	mov    eax,0x0
  40b939:	call   40c3f3 <handle_coda_error@@Base>
  40b93e:	mov    eax,DWORD PTR [rbp-0x98]
  40b944:	cdqe   
  40b946:	mov    rsi,rax
  40b949:	lea    rdi,[rip+0x4235]        # 40fb85 <_IO_stdin_used@@Base+0xb85>
  40b950:	mov    eax,0x0
  40b955:	call   40acbd <traverse_product@@Base+0x198>
  40b95a:	jmp    40badd <traverse_product@@Base+0xfb8>
  40b95f:	lea    rdx,[rbp-0x98]
  40b966:	mov    rax,QWORD PTR [rbp-0xd8]
  40b96d:	mov    rsi,rdx
  40b970:	mov    rdi,rax
  40b973:	call   403760 <coda_cursor_read_uint32@plt>
  40b978:	test   eax,eax
  40b97a:	je     40b986 <traverse_product@@Base+0xe61>
  40b97c:	mov    eax,0x0
  40b981:	call   40c3f3 <handle_coda_error@@Base>
  40b986:	mov    eax,DWORD PTR [rbp-0x98]
  40b98c:	mov    eax,eax
  40b98e:	mov    rsi,rax
  40b991:	lea    rdi,[rip+0x41f2]        # 40fb8a <_IO_stdin_used@@Base+0xb8a>
  40b998:	mov    eax,0x0
  40b99d:	call   40acbd <traverse_product@@Base+0x198>
  40b9a2:	jmp    40badd <traverse_product@@Base+0xfb8>
  40b9a7:	lea    rdx,[rbp-0x98]
  40b9ae:	mov    rax,QWORD PTR [rbp-0xd8]
  40b9b5:	mov    rsi,rdx
  40b9b8:	mov    rdi,rax
  40b9bb:	call   403ad0 <coda_cursor_read_int64@plt>
  40b9c0:	test   eax,eax
  40b9c2:	je     40b9ce <traverse_product@@Base+0xea9>
  40b9c4:	mov    eax,0x0
  40b9c9:	call   40c3f3 <handle_coda_error@@Base>
  40b9ce:	mov    rax,QWORD PTR [rbp-0x98]
  40b9d5:	lea    rdx,[rbp-0x30]
  40b9d9:	mov    rsi,rdx
  40b9dc:	mov    rdi,rax
  40b9df:	call   403c30 <coda_str64@plt>
  40b9e4:	lea    rax,[rbp-0x30]
  40b9e8:	mov    rsi,rax
  40b9eb:	lea    rdi,[rip+0x419d]        # 40fb8f <_IO_stdin_used@@Base+0xb8f>
  40b9f2:	mov    eax,0x0
  40b9f7:	call   40acbd <traverse_product@@Base+0x198>
  40b9fc:	jmp    40badd <traverse_product@@Base+0xfb8>
  40ba01:	lea    rdx,[rbp-0x98]
  40ba08:	mov    rax,QWORD PTR [rbp-0xd8]
  40ba0f:	mov    rsi,rdx
  40ba12:	mov    rdi,rax
  40ba15:	call   403990 <coda_cursor_read_uint64@plt>
  40ba1a:	test   eax,eax
  40ba1c:	je     40ba28 <traverse_product@@Base+0xf03>
  40ba1e:	mov    eax,0x0
  40ba23:	call   40c3f3 <handle_coda_error@@Base>
  40ba28:	mov    rax,QWORD PTR [rbp-0x98]
  40ba2f:	lea    rdx,[rbp-0x30]
  40ba33:	mov    rsi,rdx
  40ba36:	mov    rdi,rax
  40ba39:	call   403730 <coda_str64u@plt>
  40ba3e:	lea    rax,[rbp-0x30]
  40ba42:	mov    rsi,rax
  40ba45:	lea    rdi,[rip+0x4143]        # 40fb8f <_IO_stdin_used@@Base+0xb8f>
  40ba4c:	mov    eax,0x0
  40ba51:	call   40acbd <traverse_product@@Base+0x198>
  40ba56:	jmp    40badd <traverse_product@@Base+0xfb8>
  40ba5b:	lea    rdx,[rbp-0x98]
  40ba62:	mov    rax,QWORD PTR [rbp-0xd8]
  40ba69:	mov    rsi,rdx
  40ba6c:	mov    rdi,rax
  40ba6f:	call   4039a0 <coda_cursor_read_double@plt>
  40ba74:	test   eax,eax
  40ba76:	je     40ba82 <traverse_product@@Base+0xf5d>
  40ba78:	mov    eax,0x0
  40ba7d:	call   40c3f3 <handle_coda_error@@Base>
  40ba82:	mov    eax,DWORD PTR [rbp-0xa0]
  40ba88:	cmp    eax,0x8
  40ba8b:	jne    40baac <traverse_product@@Base+0xf87>
  40ba8d:	mov    rax,QWORD PTR [rbp-0x98]
  40ba94:	vmovq  xmm0,rax
  40ba99:	lea    rdi,[rip+0x40f3]        # 40fb93 <_IO_stdin_used@@Base+0xb93>
  40baa0:	mov    eax,0x1
  40baa5:	call   40acbd <traverse_product@@Base+0x198>
  40baaa:	jmp    40badd <traverse_product@@Base+0xfb8>
  40baac:	mov    rax,QWORD PTR [rbp-0x98]
  40bab3:	vmovq  xmm0,rax
  40bab8:	lea    rdi,[rip+0x40da]        # 40fb99 <_IO_stdin_used@@Base+0xb99>
  40babf:	mov    eax,0x1
  40bac4:	call   40acbd <traverse_product@@Base+0x198>
  40bac9:	jmp    40badd <traverse_product@@Base+0xfb8>
  40bacb:	lea    rdi,[rip+0x40ce]        # 40fba0 <_IO_stdin_used@@Base+0xba0>
  40bad2:	mov    eax,0x0
  40bad7:	call   40acbd <traverse_product@@Base+0x198>
  40badc:	nop
  40badd:	jmp    40bca7 <traverse_product@@Base+0x1182>
  40bae2:	lea    rdx,[rbp-0xa8]
  40bae9:	mov    rax,QWORD PTR [rbp-0xd8]
  40baf0:	mov    rsi,rdx
  40baf3:	mov    rdi,rax
  40baf6:	call   403880 <coda_cursor_get_special_type@plt>
  40bafb:	test   eax,eax
  40bafd:	je     40bb09 <traverse_product@@Base+0xfe4>
  40baff:	mov    eax,0x0
  40bb04:	call   40c3f3 <handle_coda_error@@Base>
  40bb09:	mov    eax,DWORD PTR [rbp-0xa8]
  40bb0f:	cmp    eax,0x1
  40bb12:	je     40bb41 <traverse_product@@Base+0x101c>
  40bb14:	test   eax,eax
  40bb16:	je     40bb2b <traverse_product@@Base+0x1006>
  40bb18:	cmp    eax,0x2
  40bb1b:	je     40bb8a <traverse_product@@Base+0x1065>
  40bb1d:	cmp    eax,0x3
  40bb20:	je     40bc4d <traverse_product@@Base+0x1128>
  40bb26:	jmp    40bca8 <traverse_product@@Base+0x1183>
  40bb2b:	lea    rdi,[rip+0x406e]        # 40fba0 <_IO_stdin_used@@Base+0xba0>
  40bb32:	mov    eax,0x0
  40bb37:	call   40acbd <traverse_product@@Base+0x198>
  40bb3c:	jmp    40bca5 <traverse_product@@Base+0x1180>
  40bb41:	lea    rdx,[rbp-0x98]
  40bb48:	mov    rax,QWORD PTR [rbp-0xd8]
  40bb4f:	mov    rsi,rdx
  40bb52:	mov    rdi,rax
  40bb55:	call   4039a0 <coda_cursor_read_double@plt>
  40bb5a:	test   eax,eax
  40bb5c:	je     40bb68 <traverse_product@@Base+0x1043>
  40bb5e:	mov    eax,0x0
  40bb63:	call   40c3f3 <handle_coda_error@@Base>
  40bb68:	mov    rax,QWORD PTR [rbp-0x98]
  40bb6f:	vmovq  xmm0,rax
  40bb74:	lea    rdi,[rip+0x401e]        # 40fb99 <_IO_stdin_used@@Base+0xb99>
  40bb7b:	mov    eax,0x1
  40bb80:	call   40acbd <traverse_product@@Base+0x198>
  40bb85:	jmp    40bca5 <traverse_product@@Base+0x1180>
  40bb8a:	lea    rdx,[rbp-0x98]
  40bb91:	mov    rax,QWORD PTR [rbp-0xd8]
  40bb98:	mov    rsi,rdx
  40bb9b:	mov    rdi,rax
  40bb9e:	call   4039a0 <coda_cursor_read_double@plt>
  40bba3:	test   eax,eax
  40bba5:	je     40bbb1 <traverse_product@@Base+0x108c>
  40bba7:	mov    eax,0x0
  40bbac:	call   40c3f3 <handle_coda_error@@Base>
  40bbb1:	mov    rax,QWORD PTR [rbp-0x98]
  40bbb8:	vmovq  xmm0,rax
  40bbbd:	call   4039b0 <coda_isNaN@plt>
  40bbc2:	test   eax,eax
  40bbc4:	jne    40bbdb <traverse_product@@Base+0x10b6>
  40bbc6:	mov    rax,QWORD PTR [rbp-0x98]
  40bbcd:	vmovq  xmm0,rax
  40bbd2:	call   4037a0 <coda_isInf@plt>
  40bbd7:	test   eax,eax
  40bbd9:	je     40bbfd <traverse_product@@Base+0x10d8>
  40bbdb:	mov    rax,QWORD PTR [rbp-0x98]
  40bbe2:	vmovq  xmm0,rax
  40bbe7:	lea    rdi,[rip+0x3fab]        # 40fb99 <_IO_stdin_used@@Base+0xb99>
  40bbee:	mov    eax,0x1
  40bbf3:	call   40acbd <traverse_product@@Base+0x198>
  40bbf8:	jmp    40bca5 <traverse_product@@Base+0x1180>
  40bbfd:	mov    rax,QWORD PTR [rbp-0x98]
  40bc04:	lea    rdx,[rbp-0x30]
  40bc08:	mov    rsi,rdx
  40bc0b:	lea    rdi,[rip+0x3f94]        # 40fba6 <_IO_stdin_used@@Base+0xba6>
  40bc12:	vmovq  xmm0,rax
  40bc17:	call   403700 <coda_time_double_to_string@plt>
  40bc1c:	test   eax,eax
  40bc1e:	je     40bc33 <traverse_product@@Base+0x110e>
  40bc20:	lea    rdi,[rip+0x3f9c]        # 40fbc3 <_IO_stdin_used@@Base+0xbc3>
  40bc27:	mov    eax,0x0
  40bc2c:	call   40acbd <traverse_product@@Base+0x198>
  40bc31:	jmp    40bca5 <traverse_product@@Base+0x1180>
  40bc33:	lea    rax,[rbp-0x30]
  40bc37:	mov    rsi,rax
  40bc3a:	lea    rdi,[rip+0x3f4e]        # 40fb8f <_IO_stdin_used@@Base+0xb8f>
  40bc41:	mov    eax,0x0
  40bc46:	call   40acbd <traverse_product@@Base+0x198>
  40bc4b:	jmp    40bca5 <traverse_product@@Base+0x1180>
  40bc4d:	lea    rdx,[rbp-0x98]
  40bc54:	lea    rcx,[rbp-0xa0]
  40bc5b:	mov    rax,QWORD PTR [rbp-0xd8]
  40bc62:	mov    rsi,rcx
  40bc65:	mov    rdi,rax
  40bc68:	call   403a60 <coda_cursor_read_complex_double_split@plt>
  40bc6d:	test   eax,eax
  40bc6f:	je     40bc7b <traverse_product@@Base+0x1156>
  40bc71:	mov    eax,0x0
  40bc76:	call   40c3f3 <handle_coda_error@@Base>
  40bc7b:	vmovsd xmm0,QWORD PTR [rbp-0x98]
  40bc83:	mov    rax,QWORD PTR [rbp-0xa0]
  40bc8a:	vmovapd xmm1,xmm0
  40bc8e:	vmovq  xmm0,rax
  40bc93:	lea    rdi,[rip+0x3f44]        # 40fbde <_IO_stdin_used@@Base+0xbde>
  40bc9a:	mov    eax,0x2
  40bc9f:	call   40acbd <traverse_product@@Base+0x198>
  40bca4:	nop
  40bca5:	jmp    40bca8 <traverse_product@@Base+0x1183>
  40bca7:	nop
  40bca8:	mov    eax,DWORD PTR [rbp-0xc4]
  40bcae:	test   eax,eax
  40bcb0:	je     40bcc0 <traverse_product@@Base+0x119b>
  40bcb2:	mov    eax,DWORD PTR [rip+0x7694]        # 41334c <__bss_start@@Base+0x10>
  40bcb8:	dec    eax
  40bcba:	mov    DWORD PTR [rip+0x768c],eax        # 41334c <__bss_start@@Base+0x10>
  40bcc0:	nop
  40bcc1:	mov    rax,QWORD PTR [rbp-0x8]
  40bcc5:	xor    rax,QWORD PTR fs:0x28
  40bcce:	je     40bcd5 <traverse_product@@Base+0x11b0>
  40bcd0:	call   403840 <__stack_chk_fail@plt>
  40bcd5:	leave  
  40bcd6:	ret    

000000000040bcd7 <print_yaml_data@@Base>:
  40bcd7:	endbr64 
  40bcdb:	push   rbp
  40bcdc:	mov    rbp,rsp
  40bcdf:	sub    rsp,0x340
  40bce6:	mov    DWORD PTR [rbp-0x334],edi
  40bcec:	mov    rax,QWORD PTR fs:0x28
  40bcf5:	mov    QWORD PTR [rbp-0x8],rax
  40bcf9:	xor    eax,eax
  40bcfb:	mov    eax,DWORD PTR [rbp-0x334]
  40bd01:	mov    DWORD PTR [rip+0x7649],eax        # 413350 <__bss_start@@Base+0x14>
  40bd07:	mov    rax,0x413380
  40bd0e:	mov    rax,QWORD PTR [rax]
  40bd11:	lea    rdx,[rbp-0x328]
  40bd18:	mov    rsi,rdx
  40bd1b:	mov    rdi,rax
  40bd1e:	call   4036f0 <coda_open@plt>
  40bd23:	mov    DWORD PTR [rbp-0x32c],eax
  40bd29:	cmp    DWORD PTR [rbp-0x32c],0x0
  40bd30:	je     40bd74 <print_yaml_data@@Base+0x9d>
  40bd32:	call   403bf0 <coda_get_errno@plt>
  40bd37:	mov    eax,DWORD PTR [rax]
  40bd39:	cmp    eax,0xffffffeb
  40bd3c:	jne    40bd74 <print_yaml_data@@Base+0x9d>
  40bd3e:	mov    edi,0x0
  40bd43:	call   403740 <coda_set_option_use_mmap@plt>
  40bd48:	mov    rax,0x413380
  40bd4f:	mov    rax,QWORD PTR [rax]
  40bd52:	lea    rdx,[rbp-0x328]
  40bd59:	mov    rsi,rdx
  40bd5c:	mov    rdi,rax
  40bd5f:	call   4036f0 <coda_open@plt>
  40bd64:	mov    DWORD PTR [rbp-0x32c],eax
  40bd6a:	mov    edi,0x1
  40bd6f:	call   403740 <coda_set_option_use_mmap@plt>
  40bd74:	cmp    DWORD PTR [rbp-0x32c],0x0
  40bd7b:	je     40bd87 <print_yaml_data@@Base+0xb0>
  40bd7d:	mov    eax,0x0
  40bd82:	call   40c3f3 <handle_coda_error@@Base>
  40bd87:	mov    rdx,QWORD PTR [rbp-0x328]
  40bd8e:	lea    rax,[rbp-0x320]
  40bd95:	mov    rsi,rdx
  40bd98:	mov    rdi,rax
  40bd9b:	call   4038b0 <coda_cursor_set_product@plt>
  40bda0:	test   eax,eax
  40bda2:	je     40bdae <print_yaml_data@@Base+0xd7>
  40bda4:	mov    eax,0x0
  40bda9:	call   40c3f3 <handle_coda_error@@Base>
  40bdae:	mov    rax,0x4144e0
  40bdb5:	mov    rax,QWORD PTR [rax]
  40bdb8:	test   rax,rax
  40bdbb:	je     40bdf2 <print_yaml_data@@Base+0x11b>
  40bdbd:	mov    rax,0x4144e0
  40bdc4:	mov    rdx,QWORD PTR [rax]
  40bdc7:	lea    rax,[rbp-0x320]
  40bdce:	mov    rsi,rdx
  40bdd1:	mov    rdi,rax
  40bdd4:	call   403ae0 <coda_cursor_goto@plt>
  40bdd9:	mov    DWORD PTR [rbp-0x32c],eax
  40bddf:	cmp    DWORD PTR [rbp-0x32c],0x0
  40bde6:	je     40bdf2 <print_yaml_data@@Base+0x11b>
  40bde8:	mov    eax,0x0
  40bded:	call   40c3f3 <handle_coda_error@@Base>
  40bdf2:	mov    edi,0x0
  40bdf7:	call   4036a0 <coda_set_option_perform_boundary_checks@plt>
  40bdfc:	lea    rax,[rbp-0x320]
  40be03:	mov    esi,0x0
  40be08:	mov    rdi,rax
  40be0b:	call   40afe8 <traverse_product@@Base+0x4c3>
  40be10:	mov    rax,QWORD PTR [rbp-0x328]
  40be17:	mov    rdi,rax
  40be1a:	call   403ac0 <coda_close@plt>
  40be1f:	nop
  40be20:	mov    rax,QWORD PTR [rbp-0x8]
  40be24:	xor    rax,QWORD PTR fs:0x28
  40be2d:	je     40be34 <print_yaml_data@@Base+0x15d>
  40be2f:	call   403840 <__stack_chk_fail@plt>
  40be34:	leave  
  40be35:	ret    
  40be36:	endbr64 
  40be3a:	push   rbp
  40be3b:	mov    rbp,rsp
  40be3e:	call   403be0 <coda_get_libcoda_version@plt>
  40be43:	mov    rsi,rax
  40be46:	lea    rdi,[rip+0x3dfb]        # 40fc48 <_IO_stdin_used@@Base+0xc48>
  40be4d:	mov    eax,0x0
  40be52:	call   403850 <printf@plt>
  40be57:	lea    rdi,[rip+0x3e02]        # 40fc60 <_IO_stdin_used@@Base+0xc60>
  40be5e:	call   403710 <puts@plt>
  40be63:	mov    edi,0xa
  40be68:	call   403690 <putchar@plt>
  40be6d:	nop
  40be6e:	pop    rbp
  40be6f:	ret    
  40be70:	endbr64 
  40be74:	push   rbp
  40be75:	mov    rbp,rsp
  40be78:	lea    rdi,[rip+0x3e11]        # 40fc90 <_IO_stdin_used@@Base+0xc90>
  40be7f:	call   403710 <puts@plt>
  40be84:	lea    rdi,[rip+0x3e0d]        # 40fc98 <_IO_stdin_used@@Base+0xc98>
  40be8b:	call   403710 <puts@plt>
  40be90:	lea    rdi,[rip+0x3e49]        # 40fce0 <_IO_stdin_used@@Base+0xce0>
  40be97:	call   403710 <puts@plt>
  40be9c:	lea    rdi,[rip+0x3e69]        # 40fd0c <_IO_stdin_used@@Base+0xd0c>
  40bea3:	call   403710 <puts@plt>
  40bea8:	lea    rdi,[rip+0x3e73]        # 40fd22 <_IO_stdin_used@@Base+0xd22>
  40beaf:	call   403710 <puts@plt>
  40beb4:	lea    rdi,[rip+0x3e85]        # 40fd40 <_IO_stdin_used@@Base+0xd40>
  40bebb:	call   403710 <puts@plt>
  40bec0:	lea    rdi,[rip+0x3eb1]        # 40fd78 <_IO_stdin_used@@Base+0xd78>
  40bec7:	call   403710 <puts@plt>
  40becc:	lea    rdi,[rip+0x3ecd]        # 40fda0 <_IO_stdin_used@@Base+0xda0>
  40bed3:	call   403710 <puts@plt>
  40bed8:	lea    rdi,[rip+0x3f01]        # 40fde0 <_IO_stdin_used@@Base+0xde0>
  40bedf:	call   403710 <puts@plt>
  40bee4:	lea    rdi,[rip+0x3f25]        # 40fe10 <_IO_stdin_used@@Base+0xe10>
  40beeb:	call   403710 <puts@plt>
  40bef0:	lea    rdi,[rip+0x3f61]        # 40fe58 <_IO_stdin_used@@Base+0xe58>
  40bef7:	call   403710 <puts@plt>
  40befc:	lea    rdi,[rip+0x3f6d]        # 40fe70 <_IO_stdin_used@@Base+0xe70>
  40bf03:	call   403710 <puts@plt>
  40bf08:	lea    rdi,[rip+0x3f8a]        # 40fe99 <_IO_stdin_used@@Base+0xe99>
  40bf0f:	call   403710 <puts@plt>
  40bf14:	lea    rdi,[rip+0x3f95]        # 40feb0 <_IO_stdin_used@@Base+0xeb0>
  40bf1b:	call   403710 <puts@plt>
  40bf20:	lea    rdi,[rip+0x3fb3]        # 40feda <_IO_stdin_used@@Base+0xeda>
  40bf27:	call   403710 <puts@plt>
  40bf2c:	lea    rdi,[rip+0x3fc5]        # 40fef8 <_IO_stdin_used@@Base+0xef8>
  40bf33:	call   403710 <puts@plt>
  40bf38:	lea    rdi,[rip+0x3fea]        # 40ff29 <_IO_stdin_used@@Base+0xf29>
  40bf3f:	call   403710 <puts@plt>
  40bf44:	lea    rdi,[rip+0x3ffd]        # 40ff48 <_IO_stdin_used@@Base+0xf48>
  40bf4b:	call   403710 <puts@plt>
  40bf50:	lea    rdi,[rip+0x4039]        # 40ff90 <_IO_stdin_used@@Base+0xf90>
  40bf57:	call   403710 <puts@plt>
  40bf5c:	lea    rdi,[rip+0x405d]        # 40ffc0 <_IO_stdin_used@@Base+0xfc0>
  40bf63:	call   403710 <puts@plt>
  40bf68:	lea    rdi,[rip+0x4071]        # 40ffe0 <_IO_stdin_used@@Base+0xfe0>
  40bf6f:	call   403710 <puts@plt>
  40bf74:	lea    rdi,[rip+0x40b5]        # 410030 <_IO_stdin_used@@Base+0x1030>
  40bf7b:	call   403710 <puts@plt>
  40bf80:	lea    rdi,[rip+0x40f7]        # 41007e <_IO_stdin_used@@Base+0x107e>
  40bf87:	call   403710 <puts@plt>
  40bf8c:	mov    edi,0xa
  40bf91:	call   403690 <putchar@plt>
  40bf96:	lea    rdi,[rip+0x4103]        # 4100a0 <_IO_stdin_used@@Base+0x10a0>
  40bf9d:	call   403710 <puts@plt>
  40bfa2:	lea    rdi,[rip+0x413f]        # 4100e8 <_IO_stdin_used@@Base+0x10e8>
  40bfa9:	call   403710 <puts@plt>
  40bfae:	lea    rdi,[rip+0x3d57]        # 40fd0c <_IO_stdin_used@@Base+0xd0c>
  40bfb5:	call   403710 <puts@plt>
  40bfba:	lea    rdi,[rip+0x3db7]        # 40fd78 <_IO_stdin_used@@Base+0xd78>
  40bfc1:	call   403710 <puts@plt>
  40bfc6:	lea    rdi,[rip+0x3dd3]        # 40fda0 <_IO_stdin_used@@Base+0xda0>
  40bfcd:	call   403710 <puts@plt>
  40bfd2:	lea    rdi,[rip+0x3e07]        # 40fde0 <_IO_stdin_used@@Base+0xde0>
  40bfd9:	call   403710 <puts@plt>
  40bfde:	lea    rdi,[rip+0x3e2b]        # 40fe10 <_IO_stdin_used@@Base+0xe10>
  40bfe5:	call   403710 <puts@plt>
  40bfea:	lea    rdi,[rip+0x4133]        # 410124 <_IO_stdin_used@@Base+0x1124>
  40bff1:	call   403710 <puts@plt>
  40bff6:	lea    rdi,[rip+0x4143]        # 410140 <_IO_stdin_used@@Base+0x1140>
  40bffd:	call   403710 <puts@plt>
  40c002:	lea    rdi,[rip+0x4178]        # 410181 <_IO_stdin_used@@Base+0x1181>
  40c009:	call   403710 <puts@plt>
  40c00e:	lea    rdi,[rip+0x418b]        # 4101a0 <_IO_stdin_used@@Base+0x11a0>
  40c015:	call   403710 <puts@plt>
  40c01a:	lea    rdi,[rip+0x41cf]        # 4101f0 <_IO_stdin_used@@Base+0x11f0>
  40c021:	call   403710 <puts@plt>
  40c026:	lea    rdi,[rip+0x41eb]        # 410218 <_IO_stdin_used@@Base+0x1218>
  40c02d:	call   403710 <puts@plt>
  40c032:	lea    rdi,[rip+0x4217]        # 410250 <_IO_stdin_used@@Base+0x1250>
  40c039:	call   403710 <puts@plt>
  40c03e:	lea    rdi,[rip+0x422b]        # 410270 <_IO_stdin_used@@Base+0x1270>
  40c045:	call   403710 <puts@plt>
  40c04a:	lea    rdi,[rip+0x426f]        # 4102c0 <_IO_stdin_used@@Base+0x12c0>
  40c051:	call   403710 <puts@plt>
  40c056:	lea    rdi,[rip+0x429b]        # 4102f8 <_IO_stdin_used@@Base+0x12f8>
  40c05d:	call   403710 <puts@plt>
  40c062:	lea    rdi,[rip+0x42df]        # 410348 <_IO_stdin_used@@Base+0x1348>
  40c069:	call   403710 <puts@plt>
  40c06e:	lea    rdi,[rip+0x42fb]        # 410370 <_IO_stdin_used@@Base+0x1370>
  40c075:	call   403710 <puts@plt>
  40c07a:	lea    rdi,[rip+0x3f3f]        # 40ffc0 <_IO_stdin_used@@Base+0xfc0>
  40c081:	call   403710 <puts@plt>
  40c086:	lea    rdi,[rip+0x3f53]        # 40ffe0 <_IO_stdin_used@@Base+0xfe0>
  40c08d:	call   403710 <puts@plt>
  40c092:	lea    rdi,[rip+0x3f97]        # 410030 <_IO_stdin_used@@Base+0x1030>
  40c099:	call   403710 <puts@plt>
  40c09e:	lea    rdi,[rip+0x3fd9]        # 41007e <_IO_stdin_used@@Base+0x107e>
  40c0a5:	call   403710 <puts@plt>
  40c0aa:	mov    edi,0xa
  40c0af:	call   403690 <putchar@plt>
  40c0b4:	lea    rdi,[rip+0x4305]        # 4103c0 <_IO_stdin_used@@Base+0x13c0>
  40c0bb:	call   403710 <puts@plt>
  40c0c0:	lea    rdi,[rip+0x4341]        # 410408 <_IO_stdin_used@@Base+0x1408>
  40c0c7:	call   403710 <puts@plt>
  40c0cc:	lea    rdi,[rip+0x4371]        # 410444 <_IO_stdin_used@@Base+0x1444>
  40c0d3:	call   403710 <puts@plt>
  40c0d8:	lea    rdi,[rip+0x437b]        # 41045a <_IO_stdin_used@@Base+0x145a>
  40c0df:	call   403710 <puts@plt>
  40c0e4:	lea    rdi,[rip+0x438d]        # 410478 <_IO_stdin_used@@Base+0x1478>
  40c0eb:	call   403710 <puts@plt>
  40c0f0:	lea    rdi,[rip+0x43c9]        # 4104c0 <_IO_stdin_used@@Base+0x14c0>
  40c0f7:	call   403710 <puts@plt>
  40c0fc:	lea    rdi,[rip+0x3c75]        # 40fd78 <_IO_stdin_used@@Base+0xd78>
  40c103:	call   403710 <puts@plt>
  40c108:	lea    rdi,[rip+0x3c91]        # 40fda0 <_IO_stdin_used@@Base+0xda0>
  40c10f:	call   403710 <puts@plt>
  40c114:	lea    rdi,[rip+0x40d5]        # 4101f0 <_IO_stdin_used@@Base+0x11f0>
  40c11b:	call   403710 <puts@plt>
  40c120:	lea    rdi,[rip+0x40f1]        # 410218 <_IO_stdin_used@@Base+0x1218>
  40c127:	call   403710 <puts@plt>
  40c12c:	lea    rdi,[rip+0x43d8]        # 41050b <_IO_stdin_used@@Base+0x150b>
  40c133:	call   403710 <puts@plt>
  40c138:	lea    rdi,[rip+0x43f1]        # 410530 <_IO_stdin_used@@Base+0x1530>
  40c13f:	call   403710 <puts@plt>
  40c144:	lea    rdi,[rip+0x442d]        # 410578 <_IO_stdin_used@@Base+0x1578>
  40c14b:	call   403710 <puts@plt>
  40c150:	lea    rdi,[rip+0x3e69]        # 40ffc0 <_IO_stdin_used@@Base+0xfc0>
  40c157:	call   403710 <puts@plt>
  40c15c:	lea    rdi,[rip+0x3e7d]        # 40ffe0 <_IO_stdin_used@@Base+0xfe0>
  40c163:	call   403710 <puts@plt>
  40c168:	lea    rdi,[rip+0x3ec1]        # 410030 <_IO_stdin_used@@Base+0x1030>
  40c16f:	call   403710 <puts@plt>
  40c174:	lea    rdi,[rip+0x3f03]        # 41007e <_IO_stdin_used@@Base+0x107e>
  40c17b:	call   403710 <puts@plt>
  40c180:	mov    edi,0xa
  40c185:	call   403690 <putchar@plt>
  40c18a:	lea    rdi,[rip+0x4437]        # 4105c8 <_IO_stdin_used@@Base+0x15c8>
  40c191:	call   403710 <puts@plt>
  40c196:	lea    rdi,[rip+0x4473]        # 410610 <_IO_stdin_used@@Base+0x1610>
  40c19d:	call   403710 <puts@plt>
  40c1a2:	lea    rdi,[rip+0x44a3]        # 41064c <_IO_stdin_used@@Base+0x164c>
  40c1a9:	call   403710 <puts@plt>
  40c1ae:	lea    rdi,[rip+0x42a5]        # 41045a <_IO_stdin_used@@Base+0x145a>
  40c1b5:	call   403710 <puts@plt>
  40c1ba:	lea    rdi,[rip+0x42b7]        # 410478 <_IO_stdin_used@@Base+0x1478>
  40c1c1:	call   403710 <puts@plt>
  40c1c6:	lea    rdi,[rip+0x449b]        # 410668 <_IO_stdin_used@@Base+0x1668>
  40c1cd:	call   403710 <puts@plt>
  40c1d2:	lea    rdi,[rip+0x44df]        # 4106b8 <_IO_stdin_used@@Base+0x16b8>
  40c1d9:	call   403710 <puts@plt>
  40c1de:	lea    rdi,[rip+0x3b93]        # 40fd78 <_IO_stdin_used@@Base+0xd78>
  40c1e5:	call   403710 <puts@plt>
  40c1ea:	lea    rdi,[rip+0x3baf]        # 40fda0 <_IO_stdin_used@@Base+0xda0>
  40c1f1:	call   403710 <puts@plt>
  40c1f6:	lea    rdi,[rip+0x3ff3]        # 4101f0 <_IO_stdin_used@@Base+0x11f0>
  40c1fd:	call   403710 <puts@plt>
  40c202:	lea    rdi,[rip+0x400f]        # 410218 <_IO_stdin_used@@Base+0x1218>
  40c209:	call   403710 <puts@plt>
  40c20e:	lea    rdi,[rip+0x42f6]        # 41050b <_IO_stdin_used@@Base+0x150b>
  40c215:	call   403710 <puts@plt>
  40c21a:	lea    rdi,[rip+0x430f]        # 410530 <_IO_stdin_used@@Base+0x1530>
  40c221:	call   403710 <puts@plt>
  40c226:	lea    rdi,[rip+0x434b]        # 410578 <_IO_stdin_used@@Base+0x1578>
  40c22d:	call   403710 <puts@plt>
  40c232:	lea    rdi,[rip+0x3d87]        # 40ffc0 <_IO_stdin_used@@Base+0xfc0>
  40c239:	call   403710 <puts@plt>
  40c23e:	lea    rdi,[rip+0x3d9b]        # 40ffe0 <_IO_stdin_used@@Base+0xfe0>
  40c245:	call   403710 <puts@plt>
  40c24a:	lea    rdi,[rip+0x3ddf]        # 410030 <_IO_stdin_used@@Base+0x1030>
  40c251:	call   403710 <puts@plt>
  40c256:	lea    rdi,[rip+0x3e21]        # 41007e <_IO_stdin_used@@Base+0x107e>
  40c25d:	call   403710 <puts@plt>
  40c262:	mov    edi,0xa
  40c267:	call   403690 <putchar@plt>
  40c26c:	lea    rdi,[rip+0x4465]        # 4106d8 <_IO_stdin_used@@Base+0x16d8>
  40c273:	call   403710 <puts@plt>
  40c278:	lea    rdi,[rip+0x44a1]        # 410720 <_IO_stdin_used@@Base+0x1720>
  40c27f:	call   403710 <puts@plt>
  40c284:	lea    rdi,[rip+0x44e5]        # 410770 <_IO_stdin_used@@Base+0x1770>
  40c28b:	call   403710 <puts@plt>
  40c290:	lea    rdi,[rip+0x4529]        # 4107c0 <_IO_stdin_used@@Base+0x17c0>
  40c297:	call   403710 <puts@plt>
  40c29c:	lea    rdi,[rip+0x454b]        # 4107ee <_IO_stdin_used@@Base+0x17ee>
  40c2a3:	call   403710 <puts@plt>
  40c2a8:	lea    rdi,[rip+0x4559]        # 410808 <_IO_stdin_used@@Base+0x1808>
  40c2af:	call   403710 <puts@plt>
  40c2b4:	lea    rdi,[rip+0x457d]        # 410838 <_IO_stdin_used@@Base+0x1838>
  40c2bb:	call   403710 <puts@plt>
  40c2c0:	lea    rdi,[rip+0x3f29]        # 4101f0 <_IO_stdin_used@@Base+0x11f0>
  40c2c7:	call   403710 <puts@plt>
  40c2cc:	lea    rdi,[rip+0x3f45]        # 410218 <_IO_stdin_used@@Base+0x1218>
  40c2d3:	call   403710 <puts@plt>
  40c2d8:	lea    rdi,[rip+0x422c]        # 41050b <_IO_stdin_used@@Base+0x150b>
  40c2df:	call   403710 <puts@plt>
  40c2e4:	lea    rdi,[rip+0x4245]        # 410530 <_IO_stdin_used@@Base+0x1530>
  40c2eb:	call   403710 <puts@plt>
  40c2f0:	lea    rdi,[rip+0x4281]        # 410578 <_IO_stdin_used@@Base+0x1578>
  40c2f7:	call   403710 <puts@plt>
  40c2fc:	lea    rdi,[rip+0x456d]        # 410870 <_IO_stdin_used@@Base+0x1870>
  40c303:	call   403710 <puts@plt>
  40c308:	lea    rdi,[rip+0x4581]        # 410890 <_IO_stdin_used@@Base+0x1890>
  40c30f:	call   403710 <puts@plt>
  40c314:	lea    rdi,[rip+0x45c5]        # 4108e0 <_IO_stdin_used@@Base+0x18e0>
  40c31b:	call   403710 <puts@plt>
  40c320:	lea    rdi,[rip+0x4609]        # 410930 <_IO_stdin_used@@Base+0x1930>
  40c327:	call   403710 <puts@plt>
  40c32c:	lea    rdi,[rip+0x463d]        # 410970 <_IO_stdin_used@@Base+0x1970>
  40c333:	call   403710 <puts@plt>
  40c338:	lea    rdi,[rip+0x4681]        # 4109c0 <_IO_stdin_used@@Base+0x19c0>
  40c33f:	call   403710 <puts@plt>
  40c344:	mov    edi,0xa
  40c349:	call   403690 <putchar@plt>
  40c34e:	lea    rdi,[rip+0x46a0]        # 4109f5 <_IO_stdin_used@@Base+0x19f5>
  40c355:	call   403710 <puts@plt>
  40c35a:	lea    rdi,[rip+0x46ac]        # 410a0d <_IO_stdin_used@@Base+0x1a0d>
  40c361:	call   403710 <puts@plt>
  40c366:	mov    edi,0xa
  40c36b:	call   403690 <putchar@plt>
  40c370:	lea    rdi,[rip+0x46b4]        # 410a2b <_IO_stdin_used@@Base+0x1a2b>
  40c377:	call   403710 <puts@plt>
  40c37c:	lea    rdi,[rip+0x46c5]        # 410a48 <_IO_stdin_used@@Base+0x1a48>
  40c383:	call   403710 <puts@plt>
  40c388:	mov    edi,0xa
  40c38d:	call   403690 <putchar@plt>
  40c392:	lea    rdi,[rip+0x46e7]        # 410a80 <_IO_stdin_used@@Base+0x1a80>
  40c399:	call   403710 <puts@plt>
  40c39e:	lea    rdi,[rip+0x472b]        # 410ad0 <_IO_stdin_used@@Base+0x1ad0>
  40c3a5:	call   403710 <puts@plt>
  40c3aa:	lea    rdi,[rip+0x476f]        # 410b20 <_IO_stdin_used@@Base+0x1b20>
  40c3b1:	call   403710 <puts@plt>
  40c3b6:	lea    rdi,[rip+0x4793]        # 410b50 <_IO_stdin_used@@Base+0x1b50>
  40c3bd:	call   403710 <puts@plt>
  40c3c2:	lea    rdi,[rip+0x47d7]        # 410ba0 <_IO_stdin_used@@Base+0x1ba0>
  40c3c9:	call   403710 <puts@plt>
  40c3ce:	lea    rdi,[rip+0x4813]        # 410be8 <_IO_stdin_used@@Base+0x1be8>
  40c3d5:	call   403710 <puts@plt>
  40c3da:	lea    rdi,[rip+0x4847]        # 410c28 <_IO_stdin_used@@Base+0x1c28>
  40c3e1:	call   403710 <puts@plt>
  40c3e6:	mov    edi,0xa
  40c3eb:	call   403690 <putchar@plt>
  40c3f0:	nop
  40c3f1:	pop    rbp
  40c3f2:	ret    

000000000040c3f3 <handle_coda_error@@Base>:
  40c3f3:	endbr64 
  40c3f7:	push   rbp
  40c3f8:	mov    rbp,rsp
  40c3fb:	call   403bf0 <coda_get_errno@plt>
  40c400:	mov    eax,DWORD PTR [rax]
  40c402:	mov    edi,eax
  40c404:	call   403b70 <coda_errno_to_string@plt>
  40c409:	mov    rdx,rax
  40c40c:	mov    rax,QWORD PTR [rip+0x6be5]        # 412ff8 <stderr@GLIBC_2.2.5>
  40c413:	mov    rax,QWORD PTR [rax]
  40c416:	lea    rsi,[rip+0x484b]        # 410c68 <_IO_stdin_used@@Base+0x1c68>
  40c41d:	mov    rdi,rax
  40c420:	mov    eax,0x0
  40c425:	call   403920 <fprintf@plt>
  40c42a:	mov    rax,QWORD PTR [rip+0x6bc7]        # 412ff8 <stderr@GLIBC_2.2.5>
  40c431:	mov    rax,QWORD PTR [rax]
  40c434:	mov    rdi,rax
  40c437:	call   403a10 <fflush@plt>
  40c43c:	mov    edi,0x1
  40c441:	call   403ba0 <exit@plt>
  40c446:	endbr64 
  40c44a:	push   rbp
  40c44b:	mov    rbp,rsp
  40c44e:	sub    rsp,0x20
  40c452:	mov    DWORD PTR [rbp-0x14],edi
  40c455:	mov    QWORD PTR [rbp-0x20],rsi
  40c459:	mov    rax,0x413380
  40c460:	mov    QWORD PTR [rax],0x0
  40c467:	mov    rax,0x413380
  40c46e:	mov    QWORD PTR [rax+0x428],0x0
  40c479:	mov    rax,0x413360
  40c480:	mov    DWORD PTR [rax],0x1
  40c486:	mov    rax,0x413378
  40c48d:	mov    DWORD PTR [rax],0x0
  40c493:	mov    DWORD PTR [rbp-0xc],0x1
  40c49a:	mov    DWORD PTR [rbp-0x8],0x1
  40c4a1:	mov    rax,0x413364
  40c4a8:	mov    DWORD PTR [rax],0x0
  40c4ae:	mov    rax,0x4144d0
  40c4b5:	mov    DWORD PTR [rax],0x0
  40c4bb:	mov    rax,0x413374
  40c4c2:	mov    DWORD PTR [rax],0x0
  40c4c8:	mov    rax,0x4144d4
  40c4cf:	mov    DWORD PTR [rax],0x0
  40c4d5:	mov    DWORD PTR [rbp-0x4],0x0
  40c4dc:	jmp    40c8c3 <handle_coda_error@@Base+0x4d0>
  40c4e1:	mov    eax,DWORD PTR [rbp-0x4]
  40c4e4:	cdqe   
  40c4e6:	lea    rdx,[rax*8+0x0]
  40c4ee:	mov    rax,QWORD PTR [rbp-0x20]
  40c4f2:	add    rax,rdx
  40c4f5:	mov    rax,QWORD PTR [rax]
  40c4f8:	lea    rsi,[rip+0x4774]        # 410c73 <_IO_stdin_used@@Base+0x1c73>
  40c4ff:	mov    rdi,rax
  40c502:	call   403910 <strcmp@plt>
  40c507:	test   eax,eax
  40c509:	je     40c535 <handle_coda_error@@Base+0x142>
  40c50b:	mov    eax,DWORD PTR [rbp-0x4]
  40c50e:	cdqe   
  40c510:	lea    rdx,[rax*8+0x0]
  40c518:	mov    rax,QWORD PTR [rbp-0x20]
  40c51c:	add    rax,rdx
  40c51f:	mov    rax,QWORD PTR [rax]
  40c522:	lea    rsi,[rip+0x474d]        # 410c76 <_IO_stdin_used@@Base+0x1c76>
  40c529:	mov    rdi,rax
  40c52c:	call   403910 <strcmp@plt>
  40c531:	test   eax,eax
  40c533:	jne    40c547 <handle_coda_error@@Base+0x154>
  40c535:	mov    rax,0x413378
  40c53c:	mov    DWORD PTR [rax],0x1
  40c542:	jmp    40c8c0 <handle_coda_error@@Base+0x4cd>
  40c547:	mov    eax,DWORD PTR [rbp-0x4]
  40c54a:	cdqe   
  40c54c:	lea    rdx,[rax*8+0x0]
  40c554:	mov    rax,QWORD PTR [rbp-0x20]
  40c558:	add    rax,rdx
  40c55b:	mov    rax,QWORD PTR [rax]
  40c55e:	lea    rsi,[rip+0x471c]        # 410c81 <_IO_stdin_used@@Base+0x1c81>
  40c565:	mov    rdi,rax
  40c568:	call   403910 <strcmp@plt>
  40c56d:	test   eax,eax
  40c56f:	je     40c59b <handle_coda_error@@Base+0x1a8>
  40c571:	mov    eax,DWORD PTR [rbp-0x4]
  40c574:	cdqe   
  40c576:	lea    rdx,[rax*8+0x0]
  40c57e:	mov    rax,QWORD PTR [rbp-0x20]
  40c582:	add    rax,rdx
  40c585:	mov    rax,QWORD PTR [rax]
  40c588:	lea    rsi,[rip+0x46f5]        # 410c84 <_IO_stdin_used@@Base+0x1c84>
  40c58f:	mov    rdi,rax
  40c592:	call   403910 <strcmp@plt>
  40c597:	test   eax,eax
  40c599:	jne    40c5a7 <handle_coda_error@@Base+0x1b4>
  40c59b:	mov    DWORD PTR [rbp-0x8],0x0
  40c5a2:	jmp    40c8c0 <handle_coda_error@@Base+0x4cd>
  40c5a7:	mov    eax,DWORD PTR [rbp-0x4]
  40c5aa:	cdqe   
  40c5ac:	lea    rdx,[rax*8+0x0]
  40c5b4:	mov    rax,QWORD PTR [rbp-0x20]
  40c5b8:	add    rax,rdx
  40c5bb:	mov    rax,QWORD PTR [rax]
  40c5be:	lea    rsi,[rip+0x46d5]        # 410c9a <_IO_stdin_used@@Base+0x1c9a>
  40c5c5:	mov    rdi,rax
  40c5c8:	call   403910 <strcmp@plt>
  40c5cd:	test   eax,eax
  40c5cf:	je     40c5ff <handle_coda_error@@Base+0x20c>
  40c5d1:	mov    eax,DWORD PTR [rbp-0x4]
  40c5d4:	cdqe   
  40c5d6:	lea    rdx,[rax*8+0x0]
  40c5de:	mov    rax,QWORD PTR [rbp-0x20]
  40c5e2:	add    rax,rdx
  40c5e5:	mov    rax,QWORD PTR [rax]
  40c5e8:	lea    rsi,[rip+0x46ae]        # 410c9d <_IO_stdin_used@@Base+0x1c9d>
  40c5ef:	mov    rdi,rax
  40c5f2:	call   403910 <strcmp@plt>
  40c5f7:	test   eax,eax
  40c5f9:	jne    40c6b7 <handle_coda_error@@Base+0x2c4>
  40c5ff:	mov    eax,DWORD PTR [rbp-0x4]
  40c602:	inc    eax
  40c604:	cmp    DWORD PTR [rbp-0x14],eax
  40c607:	jle    40c6b7 <handle_coda_error@@Base+0x2c4>
  40c60d:	mov    eax,DWORD PTR [rbp-0x4]
  40c610:	cdqe   
  40c612:	inc    rax
  40c615:	lea    rdx,[rax*8+0x0]
  40c61d:	mov    rax,QWORD PTR [rbp-0x20]
  40c621:	add    rax,rdx
  40c624:	mov    rax,QWORD PTR [rax]
  40c627:	movzx  eax,BYTE PTR [rax]
  40c62a:	cmp    al,0x2d
  40c62c:	je     40c6b7 <handle_coda_error@@Base+0x2c4>
  40c632:	mov    eax,DWORD PTR [rbp-0x4]
  40c635:	cdqe   
  40c637:	inc    rax
  40c63a:	lea    rdx,[rax*8+0x0]
  40c642:	mov    rax,QWORD PTR [rbp-0x20]
  40c646:	add    rax,rdx
  40c649:	mov    rax,QWORD PTR [rax]
  40c64c:	mov    rdi,rax
  40c64f:	call   40878a <codadump_filter_create@@Base>
  40c654:	mov    rdx,rax
  40c657:	mov    rax,0x413380
  40c65e:	mov    QWORD PTR [rax+0x428],rdx
  40c665:	mov    rax,0x413380
  40c66c:	mov    rax,QWORD PTR [rax+0x428]
  40c673:	test   rax,rax
  40c676:	jne    40c6af <handle_coda_error@@Base+0x2bc>
  40c678:	mov    rax,QWORD PTR [rip+0x6979]        # 412ff8 <stderr@GLIBC_2.2.5>
  40c67f:	mov    rax,QWORD PTR [rax]
  40c682:	mov    rcx,rax
  40c685:	mov    edx,0x28
  40c68a:	mov    esi,0x1
  40c68f:	lea    rdi,[rip+0x4612]        # 410ca8 <_IO_stdin_used@@Base+0x1ca8>
  40c696:	call   403bc0 <fwrite@plt>
  40c69b:	mov    eax,0x0
  40c6a0:	call   40be70 <print_yaml_data@@Base+0x199>
  40c6a5:	mov    edi,0x1
  40c6aa:	call   403ba0 <exit@plt>
  40c6af:	inc    DWORD PTR [rbp-0x4]
  40c6b2:	jmp    40c8c0 <handle_coda_error@@Base+0x4cd>
  40c6b7:	mov    eax,DWORD PTR [rbp-0x4]
  40c6ba:	cdqe   
  40c6bc:	lea    rdx,[rax*8+0x0]
  40c6c4:	mov    rax,QWORD PTR [rbp-0x20]
  40c6c8:	add    rax,rdx
  40c6cb:	mov    rax,QWORD PTR [rax]
  40c6ce:	lea    rsi,[rip+0x45fc]        # 410cd1 <_IO_stdin_used@@Base+0x1cd1>
  40c6d5:	mov    rdi,rax
  40c6d8:	call   403910 <strcmp@plt>
  40c6dd:	test   eax,eax
  40c6df:	je     40c70b <handle_coda_error@@Base+0x318>
  40c6e1:	mov    eax,DWORD PTR [rbp-0x4]
  40c6e4:	cdqe   
  40c6e6:	lea    rdx,[rax*8+0x0]
  40c6ee:	mov    rax,QWORD PTR [rbp-0x20]
  40c6f2:	add    rax,rdx
  40c6f5:	mov    rax,QWORD PTR [rax]
  40c6f8:	lea    rsi,[rip+0x45d5]        # 410cd4 <_IO_stdin_used@@Base+0x1cd4>
  40c6ff:	mov    rdi,rax
  40c702:	call   403910 <strcmp@plt>
  40c707:	test   eax,eax
  40c709:	jne    40c71d <handle_coda_error@@Base+0x32a>
  40c70b:	mov    rax,0x4144d0
  40c712:	mov    DWORD PTR [rax],0x1
  40c718:	jmp    40c8c0 <handle_coda_error@@Base+0x4cd>
  40c71d:	mov    eax,DWORD PTR [rbp-0x4]
  40c720:	cdqe   
  40c722:	lea    rdx,[rax*8+0x0]
  40c72a:	mov    rax,QWORD PTR [rbp-0x20]
  40c72e:	add    rax,rdx
  40c731:	mov    rax,QWORD PTR [rax]
  40c734:	lea    rsi,[rip+0x45a0]        # 410cdb <_IO_stdin_used@@Base+0x1cdb>
  40c73b:	mov    rdi,rax
  40c73e:	call   403910 <strcmp@plt>
  40c743:	test   eax,eax
  40c745:	je     40c771 <handle_coda_error@@Base+0x37e>
  40c747:	mov    eax,DWORD PTR [rbp-0x4]
  40c74a:	cdqe   
  40c74c:	lea    rdx,[rax*8+0x0]
  40c754:	mov    rax,QWORD PTR [rbp-0x20]
  40c758:	add    rax,rdx
  40c75b:	mov    rax,QWORD PTR [rax]
  40c75e:	lea    rsi,[rip+0x4579]        # 410cde <_IO_stdin_used@@Base+0x1cde>
  40c765:	mov    rdi,rax
  40c768:	call   403910 <strcmp@plt>
  40c76d:	test   eax,eax
  40c76f:	jne    40c783 <handle_coda_error@@Base+0x390>
  40c771:	mov    rax,0x413374
  40c778:	mov    DWORD PTR [rax],0x1
  40c77e:	jmp    40c8c0 <handle_coda_error@@Base+0x4cd>
  40c783:	mov    eax,DWORD PTR [rbp-0x4]
  40c786:	cdqe   
  40c788:	lea    rdx,[rax*8+0x0]
  40c790:	mov    rax,QWORD PTR [rbp-0x20]
  40c794:	add    rax,rdx
  40c797:	mov    rax,QWORD PTR [rax]
  40c79a:	lea    rsi,[rip+0x4544]        # 410ce5 <_IO_stdin_used@@Base+0x1ce5>
  40c7a1:	mov    rdi,rax
  40c7a4:	call   403910 <strcmp@plt>
  40c7a9:	test   eax,eax
  40c7ab:	jne    40c7bf <handle_coda_error@@Base+0x3cc>
  40c7ad:	mov    rax,0x4144d4
  40c7b4:	mov    DWORD PTR [rax],0x1
  40c7ba:	jmp    40c8c0 <handle_coda_error@@Base+0x4cd>
  40c7bf:	mov    eax,DWORD PTR [rbp-0x4]
  40c7c2:	cdqe   
  40c7c4:	lea    rdx,[rax*8+0x0]
  40c7cc:	mov    rax,QWORD PTR [rbp-0x20]
  40c7d0:	add    rax,rdx
  40c7d3:	mov    rax,QWORD PTR [rax]
  40c7d6:	lea    rsi,[rip+0x4516]        # 410cf3 <_IO_stdin_used@@Base+0x1cf3>
  40c7dd:	mov    rdi,rax
  40c7e0:	call   403910 <strcmp@plt>
  40c7e5:	test   eax,eax
  40c7e7:	jne    40c808 <handle_coda_error@@Base+0x415>
  40c7e9:	mov    rax,0x413378
  40c7f0:	mov    DWORD PTR [rax],0x1
  40c7f6:	mov    rax,0x413364
  40c7fd:	mov    DWORD PTR [rax],0x1
  40c803:	jmp    40c8c0 <handle_coda_error@@Base+0x4cd>
  40c808:	mov    eax,DWORD PTR [rbp-0x4]
  40c80b:	cdqe   
  40c80d:	lea    rdx,[rax*8+0x0]
  40c815:	mov    rax,QWORD PTR [rbp-0x20]
  40c819:	add    rax,rdx
  40c81c:	mov    rax,QWORD PTR [rax]
  40c81f:	lea    rsi,[rip+0x44da]        # 410d00 <_IO_stdin_used@@Base+0x1d00>
  40c826:	mov    rdi,rax
  40c829:	call   403910 <strcmp@plt>
  40c82e:	test   eax,eax
  40c830:	jne    40c83e <handle_coda_error@@Base+0x44b>
  40c832:	mov    DWORD PTR [rbp-0xc],0x0
  40c839:	jmp    40c8c0 <handle_coda_error@@Base+0x4cd>
  40c83e:	mov    eax,DWORD PTR [rbp-0x14]
  40c841:	dec    eax
  40c843:	cmp    DWORD PTR [rbp-0x4],eax
  40c846:	jne    40c889 <handle_coda_error@@Base+0x496>
  40c848:	mov    eax,DWORD PTR [rbp-0x4]
  40c84b:	cdqe   
  40c84d:	lea    rdx,[rax*8+0x0]
  40c855:	mov    rax,QWORD PTR [rbp-0x20]
  40c859:	add    rax,rdx
  40c85c:	mov    rax,QWORD PTR [rax]
  40c85f:	movzx  eax,BYTE PTR [rax]
  40c862:	cmp    al,0x2d
  40c864:	je     40c889 <handle_coda_error@@Base+0x496>
  40c866:	mov    eax,DWORD PTR [rbp-0x4]
  40c869:	cdqe   
  40c86b:	lea    rdx,[rax*8+0x0]
  40c873:	mov    rax,QWORD PTR [rbp-0x20]
  40c877:	add    rax,rdx
  40c87a:	mov    rdx,QWORD PTR [rax]
  40c87d:	mov    rax,0x413380
  40c884:	mov    QWORD PTR [rax],rdx
  40c887:	jmp    40c8c0 <handle_coda_error@@Base+0x4cd>
  40c889:	mov    rax,QWORD PTR [rip+0x6768]        # 412ff8 <stderr@GLIBC_2.2.5>
  40c890:	mov    rax,QWORD PTR [rax]
  40c893:	mov    rcx,rax
  40c896:	mov    edx,0x19
  40c89b:	mov    esi,0x1
  40c8a0:	lea    rdi,[rip+0x446c]        # 410d13 <_IO_stdin_used@@Base+0x1d13>
  40c8a7:	call   403bc0 <fwrite@plt>
  40c8ac:	mov    eax,0x0
  40c8b1:	call   40be70 <print_yaml_data@@Base+0x199>
  40c8b6:	mov    edi,0x1
  40c8bb:	call   403ba0 <exit@plt>
  40c8c0:	inc    DWORD PTR [rbp-0x4]
  40c8c3:	mov    eax,DWORD PTR [rbp-0x4]
  40c8c6:	cmp    eax,DWORD PTR [rbp-0x14]
  40c8c9:	jl     40c4e1 <handle_coda_error@@Base+0xee>
  40c8cf:	mov    rax,0x413380
  40c8d6:	mov    rax,QWORD PTR [rax]
  40c8d9:	test   rax,rax
  40c8dc:	je     40c8ef <handle_coda_error@@Base+0x4fc>
  40c8de:	mov    rax,0x413380
  40c8e5:	mov    rax,QWORD PTR [rax]
  40c8e8:	movzx  eax,BYTE PTR [rax]
  40c8eb:	test   al,al
  40c8ed:	jne    40c926 <handle_coda_error@@Base+0x533>
  40c8ef:	mov    rax,QWORD PTR [rip+0x6702]        # 412ff8 <stderr@GLIBC_2.2.5>
  40c8f6:	mov    rax,QWORD PTR [rax]
  40c8f9:	mov    rcx,rax
  40c8fc:	mov    edx,0x19
  40c901:	mov    esi,0x1
  40c906:	lea    rdi,[rip+0x4406]        # 410d13 <_IO_stdin_used@@Base+0x1d13>
  40c90d:	call   403bc0 <fwrite@plt>
  40c912:	mov    eax,0x0
  40c917:	call   40be70 <print_yaml_data@@Base+0x199>
  40c91c:	mov    edi,0x1
  40c921:	call   403ba0 <exit@plt>
  40c926:	call   4039e0 <coda_init@plt>
  40c92b:	test   eax,eax
  40c92d:	je     40c968 <handle_coda_error@@Base+0x575>
  40c92f:	call   403bf0 <coda_get_errno@plt>
  40c934:	mov    eax,DWORD PTR [rax]
  40c936:	mov    edi,eax
  40c938:	call   403b70 <coda_errno_to_string@plt>
  40c93d:	mov    rdx,rax
  40c940:	mov    rax,QWORD PTR [rip+0x66b1]        # 412ff8 <stderr@GLIBC_2.2.5>
  40c947:	mov    rax,QWORD PTR [rax]
  40c94a:	lea    rsi,[rip+0x4317]        # 410c68 <_IO_stdin_used@@Base+0x1c68>
  40c951:	mov    rdi,rax
  40c954:	mov    eax,0x0
  40c959:	call   403920 <fprintf@plt>
  40c95e:	mov    edi,0x1
  40c963:	call   403ba0 <exit@plt>
  40c968:	cmp    DWORD PTR [rbp-0xc],0x0
  40c96c:	sete   al
  40c96f:	movzx  eax,al
  40c972:	mov    edi,eax
  40c974:	call   403770 <coda_set_option_bypass_special_types@plt>
  40c979:	mov    edi,0x0
  40c97e:	call   4036a0 <coda_set_option_perform_boundary_checks@plt>
  40c983:	mov    eax,DWORD PTR [rbp-0x8]
  40c986:	mov    edi,eax
  40c988:	call   4039f0 <coda_set_option_perform_conversions@plt>
  40c98d:	mov    eax,0x0
  40c992:	call   409e5d <traverse_info_init@@Base>
  40c997:	mov    eax,0x0
  40c99c:	call   406301 <dim_info_init@@Base>
  40c9a1:	mov    eax,0x0
  40c9a6:	call   40ab25 <traverse_product@@Base>
  40c9ab:	mov    eax,0x0
  40c9b0:	call   406335 <dim_info_done@@Base>
  40c9b5:	mov    eax,0x0
  40c9ba:	call   409eaa <traverse_info_done@@Base>
  40c9bf:	call   4038f0 <coda_done@plt>
  40c9c4:	nop
  40c9c5:	leave  
  40c9c6:	ret    
  40c9c7:	endbr64 
  40c9cb:	push   rbp
  40c9cc:	mov    rbp,rsp
  40c9cf:	sub    rsp,0x20
  40c9d3:	mov    DWORD PTR [rbp-0x14],edi
  40c9d6:	mov    QWORD PTR [rbp-0x20],rsi
  40c9da:	mov    rax,0x413380
  40c9e1:	mov    QWORD PTR [rax],0x0
  40c9e8:	mov    rax,0x413380
  40c9ef:	mov    QWORD PTR [rax+0x428],0x0
  40c9fa:	mov    rax,0x413368
  40ca01:	mov    QWORD PTR [rax],0x0
  40ca08:	mov    rax,0x4144c8
  40ca0f:	lea    rdx,[rip+0x4317]        # 410d2d <_IO_stdin_used@@Base+0x1d2d>
  40ca16:	mov    QWORD PTR [rax],rdx
  40ca19:	mov    rax,QWORD PTR [rip+0x65c0]        # 412fe0 <stdout@GLIBC_2.2.5>
  40ca20:	mov    rdx,QWORD PTR [rax]
  40ca23:	mov    rax,0x4144c0
  40ca2a:	mov    QWORD PTR [rax],rdx
  40ca2d:	mov    rax,0x413360
  40ca34:	mov    DWORD PTR [rax],0x1
  40ca3a:	mov    rax,0x413378
  40ca41:	mov    DWORD PTR [rax],0x1
  40ca47:	mov    DWORD PTR [rbp-0xc],0x1
  40ca4e:	mov    DWORD PTR [rbp-0x8],0x1
  40ca55:	mov    rax,0x4144d8
  40ca5c:	mov    DWORD PTR [rax],0x0
  40ca62:	mov    rax,0x414690
  40ca69:	mov    DWORD PTR [rax],0x0
  40ca6f:	mov    rax,0x414694
  40ca76:	mov    DWORD PTR [rax],0x0
  40ca7c:	mov    rax,0x413370
  40ca83:	mov    DWORD PTR [rax],0x0
  40ca89:	mov    DWORD PTR [rbp-0x4],0x0
  40ca90:	jmp    40cfae <handle_coda_error@@Base+0xbbb>
  40ca95:	mov    eax,DWORD PTR [rbp-0x4]
  40ca98:	cdqe   
  40ca9a:	lea    rdx,[rax*8+0x0]
  40caa2:	mov    rax,QWORD PTR [rbp-0x20]
  40caa6:	add    rax,rdx
  40caa9:	mov    rax,QWORD PTR [rax]
  40caac:	lea    rsi,[rip+0x41ce]        # 410c81 <_IO_stdin_used@@Base+0x1c81>
  40cab3:	mov    rdi,rax
  40cab6:	call   403910 <strcmp@plt>
  40cabb:	test   eax,eax
  40cabd:	je     40cae9 <handle_coda_error@@Base+0x6f6>
  40cabf:	mov    eax,DWORD PTR [rbp-0x4]
  40cac2:	cdqe   
  40cac4:	lea    rdx,[rax*8+0x0]
  40cacc:	mov    rax,QWORD PTR [rbp-0x20]
  40cad0:	add    rax,rdx
  40cad3:	mov    rax,QWORD PTR [rax]
  40cad6:	lea    rsi,[rip+0x41a7]        # 410c84 <_IO_stdin_used@@Base+0x1c84>
  40cadd:	mov    rdi,rax
  40cae0:	call   403910 <strcmp@plt>
  40cae5:	test   eax,eax
  40cae7:	jne    40caf5 <handle_coda_error@@Base+0x702>
  40cae9:	mov    DWORD PTR [rbp-0x8],0x0
  40caf0:	jmp    40cfab <handle_coda_error@@Base+0xbb8>
  40caf5:	mov    eax,DWORD PTR [rbp-0x4]
  40caf8:	cdqe   
  40cafa:	lea    rdx,[rax*8+0x0]
  40cb02:	mov    rax,QWORD PTR [rbp-0x20]
  40cb06:	add    rax,rdx
  40cb09:	mov    rax,QWORD PTR [rax]
  40cb0c:	lea    rsi,[rip+0x4187]        # 410c9a <_IO_stdin_used@@Base+0x1c9a>
  40cb13:	mov    rdi,rax
  40cb16:	call   403910 <strcmp@plt>
  40cb1b:	test   eax,eax
  40cb1d:	je     40cb4d <handle_coda_error@@Base+0x75a>
  40cb1f:	mov    eax,DWORD PTR [rbp-0x4]
  40cb22:	cdqe   
  40cb24:	lea    rdx,[rax*8+0x0]
  40cb2c:	mov    rax,QWORD PTR [rbp-0x20]
  40cb30:	add    rax,rdx
  40cb33:	mov    rax,QWORD PTR [rax]
  40cb36:	lea    rsi,[rip+0x4160]        # 410c9d <_IO_stdin_used@@Base+0x1c9d>
  40cb3d:	mov    rdi,rax
  40cb40:	call   403910 <strcmp@plt>
  40cb45:	test   eax,eax
  40cb47:	jne    40cc05 <handle_coda_error@@Base+0x812>
  40cb4d:	mov    eax,DWORD PTR [rbp-0x4]
  40cb50:	inc    eax
  40cb52:	cmp    DWORD PTR [rbp-0x14],eax
  40cb55:	jle    40cc05 <handle_coda_error@@Base+0x812>
  40cb5b:	mov    eax,DWORD PTR [rbp-0x4]
  40cb5e:	cdqe   
  40cb60:	inc    rax
  40cb63:	lea    rdx,[rax*8+0x0]
  40cb6b:	mov    rax,QWORD PTR [rbp-0x20]
  40cb6f:	add    rax,rdx
  40cb72:	mov    rax,QWORD PTR [rax]
  40cb75:	movzx  eax,BYTE PTR [rax]
  40cb78:	cmp    al,0x2d
  40cb7a:	je     40cc05 <handle_coda_error@@Base+0x812>
  40cb80:	mov    eax,DWORD PTR [rbp-0x4]
  40cb83:	cdqe   
  40cb85:	inc    rax
  40cb88:	lea    rdx,[rax*8+0x0]
  40cb90:	mov    rax,QWORD PTR [rbp-0x20]
  40cb94:	add    rax,rdx
  40cb97:	mov    rax,QWORD PTR [rax]
  40cb9a:	mov    rdi,rax
  40cb9d:	call   40878a <codadump_filter_create@@Base>
  40cba2:	mov    rdx,rax
  40cba5:	mov    rax,0x413380
  40cbac:	mov    QWORD PTR [rax+0x428],rdx
  40cbb3:	mov    rax,0x413380
  40cbba:	mov    rax,QWORD PTR [rax+0x428]
  40cbc1:	test   rax,rax
  40cbc4:	jne    40cbfd <handle_coda_error@@Base+0x80a>
  40cbc6:	mov    rax,QWORD PTR [rip+0x642b]        # 412ff8 <stderr@GLIBC_2.2.5>
  40cbcd:	mov    rax,QWORD PTR [rax]
  40cbd0:	mov    rcx,rax
  40cbd3:	mov    edx,0x28
  40cbd8:	mov    esi,0x1
  40cbdd:	lea    rdi,[rip+0x40c4]        # 410ca8 <_IO_stdin_used@@Base+0x1ca8>
  40cbe4:	call   403bc0 <fwrite@plt>
  40cbe9:	mov    eax,0x0
  40cbee:	call   40be70 <print_yaml_data@@Base+0x199>
  40cbf3:	mov    edi,0x1
  40cbf8:	call   403ba0 <exit@plt>
  40cbfd:	inc    DWORD PTR [rbp-0x4]
  40cc00:	jmp    40cfab <handle_coda_error@@Base+0xbb8>
  40cc05:	mov    eax,DWORD PTR [rbp-0x4]
  40cc08:	cdqe   
  40cc0a:	lea    rdx,[rax*8+0x0]
  40cc12:	mov    rax,QWORD PTR [rbp-0x20]
  40cc16:	add    rax,rdx
  40cc19:	mov    rax,QWORD PTR [rax]
  40cc1c:	lea    rsi,[rip+0x410c]        # 410d2f <_IO_stdin_used@@Base+0x1d2f>
  40cc23:	mov    rdi,rax
  40cc26:	call   403910 <strcmp@plt>
  40cc2b:	test   eax,eax
  40cc2d:	je     40cc59 <handle_coda_error@@Base+0x866>
  40cc2f:	mov    eax,DWORD PTR [rbp-0x4]
  40cc32:	cdqe   
  40cc34:	lea    rdx,[rax*8+0x0]
  40cc3c:	mov    rax,QWORD PTR [rbp-0x20]
  40cc40:	add    rax,rdx
  40cc43:	mov    rax,QWORD PTR [rax]
  40cc46:	lea    rsi,[rip+0x40e5]        # 410d32 <_IO_stdin_used@@Base+0x1d32>
  40cc4d:	mov    rdi,rax
  40cc50:	call   403910 <strcmp@plt>
  40cc55:	test   eax,eax
  40cc57:	jne    40cc6b <handle_coda_error@@Base+0x878>
  40cc59:	mov    rax,0x4144d8
  40cc60:	mov    DWORD PTR [rax],0x1
  40cc66:	jmp    40cfab <handle_coda_error@@Base+0xbb8>
  40cc6b:	mov    eax,DWORD PTR [rbp-0x4]
  40cc6e:	cdqe   
  40cc70:	lea    rdx,[rax*8+0x0]
  40cc78:	mov    rax,QWORD PTR [rbp-0x20]
  40cc7c:	add    rax,rdx
  40cc7f:	mov    rax,QWORD PTR [rax]
  40cc82:	lea    rsi,[rip+0x40b1]        # 410d3a <_IO_stdin_used@@Base+0x1d3a>
  40cc89:	mov    rdi,rax
  40cc8c:	call   403910 <strcmp@plt>
  40cc91:	test   eax,eax
  40cc93:	je     40ccbf <handle_coda_error@@Base+0x8cc>
  40cc95:	mov    eax,DWORD PTR [rbp-0x4]
  40cc98:	cdqe   
  40cc9a:	lea    rdx,[rax*8+0x0]
  40cca2:	mov    rax,QWORD PTR [rbp-0x20]
  40cca6:	add    rax,rdx
  40cca9:	mov    rax,QWORD PTR [rax]
  40ccac:	lea    rsi,[rip+0x408a]        # 410d3d <_IO_stdin_used@@Base+0x1d3d>
  40ccb3:	mov    rdi,rax
  40ccb6:	call   403910 <strcmp@plt>
  40ccbb:	test   eax,eax
  40ccbd:	jne    40ccd1 <handle_coda_error@@Base+0x8de>
  40ccbf:	mov    rax,0x414690
  40ccc6:	mov    DWORD PTR [rax],0x1
  40cccc:	jmp    40cfab <handle_coda_error@@Base+0xbb8>
  40ccd1:	mov    eax,DWORD PTR [rbp-0x4]
  40ccd4:	cdqe   
  40ccd6:	lea    rdx,[rax*8+0x0]
  40ccde:	mov    rax,QWORD PTR [rbp-0x20]
  40cce2:	add    rax,rdx
  40cce5:	mov    rax,QWORD PTR [rax]
  40cce8:	lea    rsi,[rip+0x4056]        # 410d45 <_IO_stdin_used@@Base+0x1d45>
  40ccef:	mov    rdi,rax
  40ccf2:	call   403910 <strcmp@plt>
  40ccf7:	test   eax,eax
  40ccf9:	je     40cd25 <handle_coda_error@@Base+0x932>
  40ccfb:	mov    eax,DWORD PTR [rbp-0x4]
  40ccfe:	cdqe   
  40cd00:	lea    rdx,[rax*8+0x0]
  40cd08:	mov    rax,QWORD PTR [rbp-0x20]
  40cd0c:	add    rax,rdx
  40cd0f:	mov    rax,QWORD PTR [rax]
  40cd12:	lea    rsi,[rip+0x402f]        # 410d48 <_IO_stdin_used@@Base+0x1d48>
  40cd19:	mov    rdi,rax
  40cd1c:	call   403910 <strcmp@plt>
  40cd21:	test   eax,eax
  40cd23:	jne    40cd7c <handle_coda_error@@Base+0x989>
  40cd25:	mov    eax,DWORD PTR [rbp-0x4]
  40cd28:	inc    eax
  40cd2a:	cmp    DWORD PTR [rbp-0x14],eax
  40cd2d:	jle    40cd7c <handle_coda_error@@Base+0x989>
  40cd2f:	mov    eax,DWORD PTR [rbp-0x4]
  40cd32:	cdqe   
  40cd34:	inc    rax
  40cd37:	lea    rdx,[rax*8+0x0]
  40cd3f:	mov    rax,QWORD PTR [rbp-0x20]
  40cd43:	add    rax,rdx
  40cd46:	mov    rax,QWORD PTR [rax]
  40cd49:	movzx  eax,BYTE PTR [rax]
  40cd4c:	cmp    al,0x2d
  40cd4e:	je     40cd7c <handle_coda_error@@Base+0x989>
  40cd50:	mov    eax,DWORD PTR [rbp-0x4]
  40cd53:	cdqe   
  40cd55:	inc    rax
  40cd58:	lea    rdx,[rax*8+0x0]
  40cd60:	mov    rax,QWORD PTR [rbp-0x20]
  40cd64:	add    rax,rdx
  40cd67:	mov    rdx,QWORD PTR [rax]
  40cd6a:	mov    rax,0x413368
  40cd71:	mov    QWORD PTR [rax],rdx
  40cd74:	inc    DWORD PTR [rbp-0x4]
  40cd77:	jmp    40cfab <handle_coda_error@@Base+0xbb8>
  40cd7c:	mov    eax,DWORD PTR [rbp-0x4]
  40cd7f:	cdqe   
  40cd81:	lea    rdx,[rax*8+0x0]
  40cd89:	mov    rax,QWORD PTR [rbp-0x20]
  40cd8d:	add    rax,rdx
  40cd90:	mov    rax,QWORD PTR [rax]
  40cd93:	lea    rsi,[rip+0x3fb7]        # 410d51 <_IO_stdin_used@@Base+0x1d51>
  40cd9a:	mov    rdi,rax
  40cd9d:	call   403910 <strcmp@plt>
  40cda2:	test   eax,eax
  40cda4:	je     40cdd0 <handle_coda_error@@Base+0x9dd>
  40cda6:	mov    eax,DWORD PTR [rbp-0x4]
  40cda9:	cdqe   
  40cdab:	lea    rdx,[rax*8+0x0]
  40cdb3:	mov    rax,QWORD PTR [rbp-0x20]
  40cdb7:	add    rax,rdx
  40cdba:	mov    rax,QWORD PTR [rax]
  40cdbd:	lea    rsi,[rip+0x3f90]        # 410d54 <_IO_stdin_used@@Base+0x1d54>
  40cdc4:	mov    rdi,rax
  40cdc7:	call   403910 <strcmp@plt>
  40cdcc:	test   eax,eax
  40cdce:	jne    40cde2 <handle_coda_error@@Base+0x9ef>
  40cdd0:	mov    rax,0x414694
  40cdd7:	mov    DWORD PTR [rax],0x1
  40cddd:	jmp    40cfab <handle_coda_error@@Base+0xbb8>
  40cde2:	mov    eax,DWORD PTR [rbp-0x4]
  40cde5:	cdqe   
  40cde7:	lea    rdx,[rax*8+0x0]
  40cdef:	mov    rax,QWORD PTR [rbp-0x20]
  40cdf3:	add    rax,rdx
  40cdf6:	mov    rax,QWORD PTR [rax]
  40cdf9:	lea    rsi,[rip+0x3f64]        # 410d64 <_IO_stdin_used@@Base+0x1d64>
  40ce00:	mov    rdi,rax
  40ce03:	call   403910 <strcmp@plt>
  40ce08:	test   eax,eax
  40ce0a:	je     40ce36 <handle_coda_error@@Base+0xa43>
  40ce0c:	mov    eax,DWORD PTR [rbp-0x4]
  40ce0f:	cdqe   
  40ce11:	lea    rdx,[rax*8+0x0]
  40ce19:	mov    rax,QWORD PTR [rbp-0x20]
  40ce1d:	add    rax,rdx
  40ce20:	mov    rax,QWORD PTR [rax]
  40ce23:	lea    rsi,[rip+0x3f3d]        # 410d67 <_IO_stdin_used@@Base+0x1d67>
  40ce2a:	mov    rdi,rax
  40ce2d:	call   403910 <strcmp@plt>
  40ce32:	test   eax,eax
  40ce34:	jne    40ce8d <handle_coda_error@@Base+0xa9a>
  40ce36:	mov    eax,DWORD PTR [rbp-0x4]
  40ce39:	inc    eax
  40ce3b:	cmp    DWORD PTR [rbp-0x14],eax
  40ce3e:	jle    40ce8d <handle_coda_error@@Base+0xa9a>
  40ce40:	mov    eax,DWORD PTR [rbp-0x4]
  40ce43:	cdqe   
  40ce45:	inc    rax
  40ce48:	lea    rdx,[rax*8+0x0]
  40ce50:	mov    rax,QWORD PTR [rbp-0x20]
  40ce54:	add    rax,rdx
  40ce57:	mov    rax,QWORD PTR [rax]
  40ce5a:	movzx  eax,BYTE PTR [rax]
  40ce5d:	cmp    al,0x2d
  40ce5f:	je     40ce8d <handle_coda_error@@Base+0xa9a>
  40ce61:	mov    eax,DWORD PTR [rbp-0x4]
  40ce64:	cdqe   
  40ce66:	inc    rax
  40ce69:	lea    rdx,[rax*8+0x0]
  40ce71:	mov    rax,QWORD PTR [rbp-0x20]
  40ce75:	add    rax,rdx
  40ce78:	mov    rdx,QWORD PTR [rax]
  40ce7b:	mov    rax,0x4144c8
  40ce82:	mov    QWORD PTR [rax],rdx
  40ce85:	inc    DWORD PTR [rbp-0x4]
  40ce88:	jmp    40cfab <handle_coda_error@@Base+0xbb8>
  40ce8d:	mov    eax,DWORD PTR [rbp-0x4]
  40ce90:	cdqe   
  40ce92:	lea    rdx,[rax*8+0x0]
  40ce9a:	mov    rax,QWORD PTR [rbp-0x20]
  40ce9e:	add    rax,rdx
  40cea1:	mov    rax,QWORD PTR [rax]
  40cea4:	lea    rsi,[rip+0x3e26]        # 410cd1 <_IO_stdin_used@@Base+0x1cd1>
  40ceab:	mov    rdi,rax
  40ceae:	call   403910 <strcmp@plt>
  40ceb3:	test   eax,eax
  40ceb5:	je     40cee1 <handle_coda_error@@Base+0xaee>
  40ceb7:	mov    eax,DWORD PTR [rbp-0x4]
  40ceba:	cdqe   
  40cebc:	lea    rdx,[rax*8+0x0]
  40cec4:	mov    rax,QWORD PTR [rbp-0x20]
  40cec8:	add    rax,rdx
  40cecb:	mov    rax,QWORD PTR [rax]
  40cece:	lea    rsi,[rip+0x3ea5]        # 410d7a <_IO_stdin_used@@Base+0x1d7a>
  40ced5:	mov    rdi,rax
  40ced8:	call   403910 <strcmp@plt>
  40cedd:	test   eax,eax
  40cedf:	jne    40cef3 <handle_coda_error@@Base+0xb00>
  40cee1:	mov    rax,0x413370
  40cee8:	mov    DWORD PTR [rax],0x1
  40ceee:	jmp    40cfab <handle_coda_error@@Base+0xbb8>
  40cef3:	mov    eax,DWORD PTR [rbp-0x4]
  40cef6:	cdqe   
  40cef8:	lea    rdx,[rax*8+0x0]
  40cf00:	mov    rax,QWORD PTR [rbp-0x20]
  40cf04:	add    rax,rdx
  40cf07:	mov    rax,QWORD PTR [rax]
  40cf0a:	lea    rsi,[rip+0x3def]        # 410d00 <_IO_stdin_used@@Base+0x1d00>
  40cf11:	mov    rdi,rax
  40cf14:	call   403910 <strcmp@plt>
  40cf19:	test   eax,eax
  40cf1b:	jne    40cf29 <handle_coda_error@@Base+0xb36>
  40cf1d:	mov    DWORD PTR [rbp-0xc],0x0
  40cf24:	jmp    40cfab <handle_coda_error@@Base+0xbb8>
  40cf29:	mov    eax,DWORD PTR [rbp-0x14]
  40cf2c:	dec    eax
  40cf2e:	cmp    DWORD PTR [rbp-0x4],eax
  40cf31:	jne    40cf74 <handle_coda_error@@Base+0xb81>
  40cf33:	mov    eax,DWORD PTR [rbp-0x4]
  40cf36:	cdqe   
  40cf38:	lea    rdx,[rax*8+0x0]
  40cf40:	mov    rax,QWORD PTR [rbp-0x20]
  40cf44:	add    rax,rdx
  40cf47:	mov    rax,QWORD PTR [rax]
  40cf4a:	movzx  eax,BYTE PTR [rax]
  40cf4d:	cmp    al,0x2d
  40cf4f:	je     40cf74 <handle_coda_error@@Base+0xb81>
  40cf51:	mov    eax,DWORD PTR [rbp-0x4]
  40cf54:	cdqe   
  40cf56:	lea    rdx,[rax*8+0x0]
  40cf5e:	mov    rax,QWORD PTR [rbp-0x20]
  40cf62:	add    rax,rdx
  40cf65:	mov    rdx,QWORD PTR [rax]
  40cf68:	mov    rax,0x413380
  40cf6f:	mov    QWORD PTR [rax],rdx
  40cf72:	jmp    40cfab <handle_coda_error@@Base+0xbb8>
  40cf74:	mov    rax,QWORD PTR [rip+0x607d]        # 412ff8 <stderr@GLIBC_2.2.5>
  40cf7b:	mov    rax,QWORD PTR [rax]
  40cf7e:	mov    rcx,rax
  40cf81:	mov    edx,0x19
  40cf86:	mov    esi,0x1
  40cf8b:	lea    rdi,[rip+0x3d81]        # 410d13 <_IO_stdin_used@@Base+0x1d13>
  40cf92:	call   403bc0 <fwrite@plt>
  40cf97:	mov    eax,0x0
  40cf9c:	call   40be70 <print_yaml_data@@Base+0x199>
  40cfa1:	mov    edi,0x1
  40cfa6:	call   403ba0 <exit@plt>
  40cfab:	inc    DWORD PTR [rbp-0x4]
  40cfae:	mov    eax,DWORD PTR [rbp-0x4]
  40cfb1:	cmp    eax,DWORD PTR [rbp-0x14]
  40cfb4:	jl     40ca95 <handle_coda_error@@Base+0x6a2>
  40cfba:	mov    rax,0x413380
  40cfc1:	mov    rax,QWORD PTR [rax]
  40cfc4:	test   rax,rax
  40cfc7:	je     40cfda <handle_coda_error@@Base+0xbe7>
  40cfc9:	mov    rax,0x413380
  40cfd0:	mov    rax,QWORD PTR [rax]
  40cfd3:	movzx  eax,BYTE PTR [rax]
  40cfd6:	test   al,al
  40cfd8:	jne    40d011 <handle_coda_error@@Base+0xc1e>
  40cfda:	mov    rax,QWORD PTR [rip+0x6017]        # 412ff8 <stderr@GLIBC_2.2.5>
  40cfe1:	mov    rax,QWORD PTR [rax]
  40cfe4:	mov    rcx,rax
  40cfe7:	mov    edx,0x19
  40cfec:	mov    esi,0x1
  40cff1:	lea    rdi,[rip+0x3d1b]        # 410d13 <_IO_stdin_used@@Base+0x1d13>
  40cff8:	call   403bc0 <fwrite@plt>
  40cffd:	mov    eax,0x0
  40d002:	call   40be70 <print_yaml_data@@Base+0x199>
  40d007:	mov    edi,0x1
  40d00c:	call   403ba0 <exit@plt>
  40d011:	call   4039e0 <coda_init@plt>
  40d016:	test   eax,eax
  40d018:	je     40d053 <handle_coda_error@@Base+0xc60>
  40d01a:	call   403bf0 <coda_get_errno@plt>
  40d01f:	mov    eax,DWORD PTR [rax]
  40d021:	mov    edi,eax
  40d023:	call   403b70 <coda_errno_to_string@plt>
  40d028:	mov    rdx,rax
  40d02b:	mov    rax,QWORD PTR [rip+0x5fc6]        # 412ff8 <stderr@GLIBC_2.2.5>
  40d032:	mov    rax,QWORD PTR [rax]
  40d035:	lea    rsi,[rip+0x3c2c]        # 410c68 <_IO_stdin_used@@Base+0x1c68>
  40d03c:	mov    rdi,rax
  40d03f:	mov    eax,0x0
  40d044:	call   403920 <fprintf@plt>
  40d049:	mov    edi,0x1
  40d04e:	call   403ba0 <exit@plt>
  40d053:	cmp    DWORD PTR [rbp-0xc],0x0
  40d057:	sete   al
  40d05a:	movzx  eax,al
  40d05d:	mov    edi,eax
  40d05f:	call   403770 <coda_set_option_bypass_special_types@plt>
  40d064:	mov    edi,0x0
  40d069:	call   4036a0 <coda_set_option_perform_boundary_checks@plt>
  40d06e:	mov    eax,DWORD PTR [rbp-0x8]
  40d071:	mov    edi,eax
  40d073:	call   4039f0 <coda_set_option_perform_conversions@plt>
  40d078:	mov    eax,0x0
  40d07d:	call   409e5d <traverse_info_init@@Base>
  40d082:	mov    eax,0x0
  40d087:	call   406301 <dim_info_init@@Base>
  40d08c:	mov    rax,0x413368
  40d093:	mov    rax,QWORD PTR [rax]
  40d096:	test   rax,rax
  40d099:	je     40d102 <handle_coda_error@@Base+0xd0f>
  40d09b:	mov    rax,0x413368
  40d0a2:	mov    rax,QWORD PTR [rax]
  40d0a5:	lea    rsi,[rip+0x3cdf]        # 410d8b <_IO_stdin_used@@Base+0x1d8b>
  40d0ac:	mov    rdi,rax
  40d0af:	call   403b20 <fopen@plt>
  40d0b4:	mov    rdx,rax
  40d0b7:	mov    rax,0x4144c0
  40d0be:	mov    QWORD PTR [rax],rdx
  40d0c1:	mov    rax,0x4144c0
  40d0c8:	mov    rax,QWORD PTR [rax]
  40d0cb:	test   rax,rax
  40d0ce:	jne    40d102 <handle_coda_error@@Base+0xd0f>
  40d0d0:	mov    rax,0x413368
  40d0d7:	mov    rdx,QWORD PTR [rax]
  40d0da:	mov    rax,QWORD PTR [rip+0x5f17]        # 412ff8 <stderr@GLIBC_2.2.5>
  40d0e1:	mov    rax,QWORD PTR [rax]
  40d0e4:	lea    rsi,[rip+0x3ca5]        # 410d90 <_IO_stdin_used@@Base+0x1d90>
  40d0eb:	mov    rdi,rax
  40d0ee:	mov    eax,0x0
  40d0f3:	call   403920 <fprintf@plt>
  40d0f8:	mov    edi,0x1
  40d0fd:	call   403ba0 <exit@plt>
  40d102:	mov    eax,0x0
  40d107:	call   40ab25 <traverse_product@@Base>
  40d10c:	mov    rax,0x413368
  40d113:	mov    rax,QWORD PTR [rax]
  40d116:	test   rax,rax
  40d119:	je     40d12d <handle_coda_error@@Base+0xd3a>
  40d11b:	mov    rax,0x4144c0
  40d122:	mov    rax,QWORD PTR [rax]
  40d125:	mov    rdi,rax
  40d128:	call   4037d0 <fclose@plt>
  40d12d:	mov    eax,0x0
  40d132:	call   406335 <dim_info_done@@Base>
  40d137:	mov    eax,0x0
  40d13c:	call   409eaa <traverse_info_done@@Base>
  40d141:	call   4038f0 <coda_done@plt>
  40d146:	nop
  40d147:	leave  
  40d148:	ret    
  40d149:	endbr64 
  40d14d:	push   rbp
  40d14e:	mov    rbp,rsp
  40d151:	sub    rsp,0x20
  40d155:	mov    DWORD PTR [rbp-0x14],edi
  40d158:	mov    QWORD PTR [rbp-0x20],rsi
  40d15c:	mov    rax,0x413380
  40d163:	mov    QWORD PTR [rax],0x0
  40d16a:	mov    rax,0x413368
  40d171:	mov    QWORD PTR [rax],0x0
  40d178:	mov    rax,0x4144e0
  40d17f:	mov    QWORD PTR [rax],0x0
  40d186:	mov    rax,QWORD PTR [rip+0x5e53]        # 412fe0 <stdout@GLIBC_2.2.5>
  40d18d:	mov    rdx,QWORD PTR [rax]
  40d190:	mov    rax,0x4144c0
  40d197:	mov    QWORD PTR [rax],rdx
  40d19a:	mov    DWORD PTR [rbp-0x10],0x1
  40d1a1:	mov    DWORD PTR [rbp-0xc],0x1
  40d1a8:	mov    DWORD PTR [rbp-0x8],0x0
  40d1af:	mov    DWORD PTR [rbp-0x4],0x0
  40d1b6:	jmp    40d48c <handle_coda_error@@Base+0x1099>
  40d1bb:	mov    eax,DWORD PTR [rbp-0x4]
  40d1be:	cdqe   
  40d1c0:	lea    rdx,[rax*8+0x0]
  40d1c8:	mov    rax,QWORD PTR [rbp-0x20]
  40d1cc:	add    rax,rdx
  40d1cf:	mov    rax,QWORD PTR [rax]
  40d1d2:	lea    rsi,[rip+0x3be1]        # 410dba <_IO_stdin_used@@Base+0x1dba>
  40d1d9:	mov    rdi,rax
  40d1dc:	call   403910 <strcmp@plt>
  40d1e1:	test   eax,eax
  40d1e3:	je     40d20f <handle_coda_error@@Base+0xe1c>
  40d1e5:	mov    eax,DWORD PTR [rbp-0x4]
  40d1e8:	cdqe   
  40d1ea:	lea    rdx,[rax*8+0x0]
  40d1f2:	mov    rax,QWORD PTR [rbp-0x20]
  40d1f6:	add    rax,rdx
  40d1f9:	mov    rax,QWORD PTR [rax]
  40d1fc:	lea    rsi,[rip+0x3bba]        # 410dbd <_IO_stdin_used@@Base+0x1dbd>
  40d203:	mov    rdi,rax
  40d206:	call   403910 <strcmp@plt>
  40d20b:	test   eax,eax
  40d20d:	jne    40d21b <handle_coda_error@@Base+0xe28>
  40d20f:	mov    DWORD PTR [rbp-0x8],0x1
  40d216:	jmp    40d489 <handle_coda_error@@Base+0x1096>
  40d21b:	mov    eax,DWORD PTR [rbp-0x4]
  40d21e:	cdqe   
  40d220:	lea    rdx,[rax*8+0x0]
  40d228:	mov    rax,QWORD PTR [rbp-0x20]
  40d22c:	add    rax,rdx
  40d22f:	mov    rax,QWORD PTR [rax]
  40d232:	lea    rsi,[rip+0x3a48]        # 410c81 <_IO_stdin_used@@Base+0x1c81>
  40d239:	mov    rdi,rax
  40d23c:	call   403910 <strcmp@plt>
  40d241:	test   eax,eax
  40d243:	je     40d26f <handle_coda_error@@Base+0xe7c>
  40d245:	mov    eax,DWORD PTR [rbp-0x4]
  40d248:	cdqe   
  40d24a:	lea    rdx,[rax*8+0x0]
  40d252:	mov    rax,QWORD PTR [rbp-0x20]
  40d256:	add    rax,rdx
  40d259:	mov    rax,QWORD PTR [rax]
  40d25c:	lea    rsi,[rip+0x3a21]        # 410c84 <_IO_stdin_used@@Base+0x1c84>
  40d263:	mov    rdi,rax
  40d266:	call   403910 <strcmp@plt>
  40d26b:	test   eax,eax
  40d26d:	jne    40d27b <handle_coda_error@@Base+0xe88>
  40d26f:	mov    DWORD PTR [rbp-0xc],0x0
  40d276:	jmp    40d489 <handle_coda_error@@Base+0x1096>
  40d27b:	mov    eax,DWORD PTR [rbp-0x4]
  40d27e:	cdqe   
  40d280:	lea    rdx,[rax*8+0x0]
  40d288:	mov    rax,QWORD PTR [rbp-0x20]
  40d28c:	add    rax,rdx
  40d28f:	mov    rax,QWORD PTR [rax]
  40d292:	lea    rsi,[rip+0x3aac]        # 410d45 <_IO_stdin_used@@Base+0x1d45>
  40d299:	mov    rdi,rax
  40d29c:	call   403910 <strcmp@plt>
  40d2a1:	test   eax,eax
  40d2a3:	je     40d2cf <handle_coda_error@@Base+0xedc>
  40d2a5:	mov    eax,DWORD PTR [rbp-0x4]
  40d2a8:	cdqe   
  40d2aa:	lea    rdx,[rax*8+0x0]
  40d2b2:	mov    rax,QWORD PTR [rbp-0x20]
  40d2b6:	add    rax,rdx
  40d2b9:	mov    rax,QWORD PTR [rax]
  40d2bc:	lea    rsi,[rip+0x3a85]        # 410d48 <_IO_stdin_used@@Base+0x1d48>
  40d2c3:	mov    rdi,rax
  40d2c6:	call   403910 <strcmp@plt>
  40d2cb:	test   eax,eax
  40d2cd:	jne    40d326 <handle_coda_error@@Base+0xf33>
  40d2cf:	mov    eax,DWORD PTR [rbp-0x4]
  40d2d2:	inc    eax
  40d2d4:	cmp    DWORD PTR [rbp-0x14],eax
  40d2d7:	jle    40d326 <handle_coda_error@@Base+0xf33>
  40d2d9:	mov    eax,DWORD PTR [rbp-0x4]
  40d2dc:	cdqe   
  40d2de:	inc    rax
  40d2e1:	lea    rdx,[rax*8+0x0]
  40d2e9:	mov    rax,QWORD PTR [rbp-0x20]
  40d2ed:	add    rax,rdx
  40d2f0:	mov    rax,QWORD PTR [rax]
  40d2f3:	movzx  eax,BYTE PTR [rax]
  40d2f6:	cmp    al,0x2d
  40d2f8:	je     40d326 <handle_coda_error@@Base+0xf33>
  40d2fa:	mov    eax,DWORD PTR [rbp-0x4]
  40d2fd:	cdqe   
  40d2ff:	inc    rax
  40d302:	lea    rdx,[rax*8+0x0]
  40d30a:	mov    rax,QWORD PTR [rbp-0x20]
  40d30e:	add    rax,rdx
  40d311:	mov    rdx,QWORD PTR [rax]
  40d314:	mov    rax,0x413368
  40d31b:	mov    QWORD PTR [rax],rdx
  40d31e:	inc    DWORD PTR [rbp-0x4]
  40d321:	jmp    40d489 <handle_coda_error@@Base+0x1096>
  40d326:	mov    eax,DWORD PTR [rbp-0x4]
  40d329:	cdqe   
  40d32b:	lea    rdx,[rax*8+0x0]
  40d333:	mov    rax,QWORD PTR [rbp-0x20]
  40d337:	add    rax,rdx
  40d33a:	mov    rax,QWORD PTR [rax]
  40d33d:	lea    rsi,[rip+0x3a86]        # 410dca <_IO_stdin_used@@Base+0x1dca>
  40d344:	mov    rdi,rax
  40d347:	call   403910 <strcmp@plt>
  40d34c:	test   eax,eax
  40d34e:	je     40d37a <handle_coda_error@@Base+0xf87>
  40d350:	mov    eax,DWORD PTR [rbp-0x4]
  40d353:	cdqe   
  40d355:	lea    rdx,[rax*8+0x0]
  40d35d:	mov    rax,QWORD PTR [rbp-0x20]
  40d361:	add    rax,rdx
  40d364:	mov    rax,QWORD PTR [rax]
  40d367:	lea    rsi,[rip+0x3a5f]        # 410dcd <_IO_stdin_used@@Base+0x1dcd>
  40d36e:	mov    rdi,rax
  40d371:	call   403910 <strcmp@plt>
  40d376:	test   eax,eax
  40d378:	jne    40d3d1 <handle_coda_error@@Base+0xfde>
  40d37a:	mov    eax,DWORD PTR [rbp-0x4]
  40d37d:	inc    eax
  40d37f:	cmp    DWORD PTR [rbp-0x14],eax
  40d382:	jle    40d3d1 <handle_coda_error@@Base+0xfde>
  40d384:	mov    eax,DWORD PTR [rbp-0x4]
  40d387:	cdqe   
  40d389:	inc    rax
  40d38c:	lea    rdx,[rax*8+0x0]
  40d394:	mov    rax,QWORD PTR [rbp-0x20]
  40d398:	add    rax,rdx
  40d39b:	mov    rax,QWORD PTR [rax]
  40d39e:	movzx  eax,BYTE PTR [rax]
  40d3a1:	cmp    al,0x2d
  40d3a3:	je     40d3d1 <handle_coda_error@@Base+0xfde>
  40d3a5:	mov    eax,DWORD PTR [rbp-0x4]
  40d3a8:	cdqe   
  40d3aa:	inc    rax
  40d3ad:	lea    rdx,[rax*8+0x0]
  40d3b5:	mov    rax,QWORD PTR [rbp-0x20]
  40d3b9:	add    rax,rdx
  40d3bc:	mov    rdx,QWORD PTR [rax]
  40d3bf:	mov    rax,0x4144e0
  40d3c6:	mov    QWORD PTR [rax],rdx
  40d3c9:	inc    DWORD PTR [rbp-0x4]
  40d3cc:	jmp    40d489 <handle_coda_error@@Base+0x1096>
  40d3d1:	mov    eax,DWORD PTR [rbp-0x4]
  40d3d4:	cdqe   
  40d3d6:	lea    rdx,[rax*8+0x0]
  40d3de:	mov    rax,QWORD PTR [rbp-0x20]
  40d3e2:	add    rax,rdx
  40d3e5:	mov    rax,QWORD PTR [rax]
  40d3e8:	lea    rsi,[rip+0x3911]        # 410d00 <_IO_stdin_used@@Base+0x1d00>
  40d3ef:	mov    rdi,rax
  40d3f2:	call   403910 <strcmp@plt>
  40d3f7:	test   eax,eax
  40d3f9:	jne    40d407 <handle_coda_error@@Base+0x1014>
  40d3fb:	mov    DWORD PTR [rbp-0x10],0x0
  40d402:	jmp    40d489 <handle_coda_error@@Base+0x1096>
  40d407:	mov    eax,DWORD PTR [rbp-0x14]
  40d40a:	dec    eax
  40d40c:	cmp    DWORD PTR [rbp-0x4],eax
  40d40f:	jne    40d452 <handle_coda_error@@Base+0x105f>
  40d411:	mov    eax,DWORD PTR [rbp-0x4]
  40d414:	cdqe   
  40d416:	lea    rdx,[rax*8+0x0]
  40d41e:	mov    rax,QWORD PTR [rbp-0x20]
  40d422:	add    rax,rdx
  40d425:	mov    rax,QWORD PTR [rax]
  40d428:	movzx  eax,BYTE PTR [rax]
  40d42b:	cmp    al,0x2d
  40d42d:	je     40d452 <handle_coda_error@@Base+0x105f>
  40d42f:	mov    eax,DWORD PTR [rbp-0x4]
  40d432:	cdqe   
  40d434:	lea    rdx,[rax*8+0x0]
  40d43c:	mov    rax,QWORD PTR [rbp-0x20]
  40d440:	add    rax,rdx
  40d443:	mov    rdx,QWORD PTR [rax]
  40d446:	mov    rax,0x413380
  40d44d:	mov    QWORD PTR [rax],rdx
  40d450:	jmp    40d489 <handle_coda_error@@Base+0x1096>
  40d452:	mov    rax,QWORD PTR [rip+0x5b9f]        # 412ff8 <stderr@GLIBC_2.2.5>
  40d459:	mov    rax,QWORD PTR [rax]
  40d45c:	mov    rcx,rax
  40d45f:	mov    edx,0x19
  40d464:	mov    esi,0x1
  40d469:	lea    rdi,[rip+0x38a3]        # 410d13 <_IO_stdin_used@@Base+0x1d13>
  40d470:	call   403bc0 <fwrite@plt>
  40d475:	mov    eax,0x0
  40d47a:	call   40be70 <print_yaml_data@@Base+0x199>
  40d47f:	mov    edi,0x1
  40d484:	call   403ba0 <exit@plt>
  40d489:	inc    DWORD PTR [rbp-0x4]
  40d48c:	mov    eax,DWORD PTR [rbp-0x4]
  40d48f:	cmp    eax,DWORD PTR [rbp-0x14]
  40d492:	jl     40d1bb <handle_coda_error@@Base+0xdc8>
  40d498:	mov    rax,0x413380
  40d49f:	mov    rax,QWORD PTR [rax]
  40d4a2:	test   rax,rax
  40d4a5:	je     40d4b8 <handle_coda_error@@Base+0x10c5>
  40d4a7:	mov    rax,0x413380
  40d4ae:	mov    rax,QWORD PTR [rax]
  40d4b1:	movzx  eax,BYTE PTR [rax]
  40d4b4:	test   al,al
  40d4b6:	jne    40d4ef <handle_coda_error@@Base+0x10fc>
  40d4b8:	mov    rax,QWORD PTR [rip+0x5b39]        # 412ff8 <stderr@GLIBC_2.2.5>
  40d4bf:	mov    rax,QWORD PTR [rax]
  40d4c2:	mov    rcx,rax
  40d4c5:	mov    edx,0x19
  40d4ca:	mov    esi,0x1
  40d4cf:	lea    rdi,[rip+0x383d]        # 410d13 <_IO_stdin_used@@Base+0x1d13>
  40d4d6:	call   403bc0 <fwrite@plt>
  40d4db:	mov    eax,0x0
  40d4e0:	call   40be70 <print_yaml_data@@Base+0x199>
  40d4e5:	mov    edi,0x1
  40d4ea:	call   403ba0 <exit@plt>
  40d4ef:	call   4039e0 <coda_init@plt>
  40d4f4:	test   eax,eax
  40d4f6:	je     40d531 <handle_coda_error@@Base+0x113e>
  40d4f8:	call   403bf0 <coda_get_errno@plt>
  40d4fd:	mov    eax,DWORD PTR [rax]
  40d4ff:	mov    edi,eax
  40d501:	call   403b70 <coda_errno_to_string@plt>
  40d506:	mov    rdx,rax
  40d509:	mov    rax,QWORD PTR [rip+0x5ae8]        # 412ff8 <stderr@GLIBC_2.2.5>
  40d510:	mov    rax,QWORD PTR [rax]
  40d513:	lea    rsi,[rip+0x374e]        # 410c68 <_IO_stdin_used@@Base+0x1c68>
  40d51a:	mov    rdi,rax
  40d51d:	mov    eax,0x0
  40d522:	call   403920 <fprintf@plt>
  40d527:	mov    edi,0x1
  40d52c:	call   403ba0 <exit@plt>
  40d531:	cmp    DWORD PTR [rbp-0x10],0x0
  40d535:	sete   al
  40d538:	movzx  eax,al
  40d53b:	mov    edi,eax
  40d53d:	call   403770 <coda_set_option_bypass_special_types@plt>
  40d542:	mov    eax,DWORD PTR [rbp-0xc]
  40d545:	mov    edi,eax
  40d547:	call   4039f0 <coda_set_option_perform_conversions@plt>
  40d54c:	mov    rax,0x413368
  40d553:	mov    rax,QWORD PTR [rax]
  40d556:	test   rax,rax
  40d559:	je     40d5c2 <handle_coda_error@@Base+0x11cf>
  40d55b:	mov    rax,0x413368
  40d562:	mov    rax,QWORD PTR [rax]
  40d565:	lea    rsi,[rip+0x381f]        # 410d8b <_IO_stdin_used@@Base+0x1d8b>
  40d56c:	mov    rdi,rax
  40d56f:	call   403b20 <fopen@plt>
  40d574:	mov    rdx,rax
  40d577:	mov    rax,0x4144c0
  40d57e:	mov    QWORD PTR [rax],rdx
  40d581:	mov    rax,0x4144c0
  40d588:	mov    rax,QWORD PTR [rax]
  40d58b:	test   rax,rax
  40d58e:	jne    40d5c2 <handle_coda_error@@Base+0x11cf>
  40d590:	mov    rax,0x413368
  40d597:	mov    rdx,QWORD PTR [rax]
  40d59a:	mov    rax,QWORD PTR [rip+0x5a57]        # 412ff8 <stderr@GLIBC_2.2.5>
  40d5a1:	mov    rax,QWORD PTR [rax]
  40d5a4:	lea    rsi,[rip+0x37e5]        # 410d90 <_IO_stdin_used@@Base+0x1d90>
  40d5ab:	mov    rdi,rax
  40d5ae:	mov    eax,0x0
  40d5b3:	call   403920 <fprintf@plt>
  40d5b8:	mov    edi,0x1
  40d5bd:	call   403ba0 <exit@plt>
  40d5c2:	mov    eax,DWORD PTR [rbp-0x8]
  40d5c5:	mov    edi,eax
  40d5c7:	call   4097a3 <print_json_data@@Base>
  40d5cc:	mov    rax,0x413368
  40d5d3:	mov    rax,QWORD PTR [rax]
  40d5d6:	test   rax,rax
  40d5d9:	je     40d5ed <handle_coda_error@@Base+0x11fa>
  40d5db:	mov    rax,0x4144c0
  40d5e2:	mov    rax,QWORD PTR [rax]
  40d5e5:	mov    rdi,rax
  40d5e8:	call   4037d0 <fclose@plt>
  40d5ed:	call   4038f0 <coda_done@plt>
  40d5f2:	nop
  40d5f3:	leave  
  40d5f4:	ret    
  40d5f5:	endbr64 
  40d5f9:	push   rbp
  40d5fa:	mov    rbp,rsp
  40d5fd:	sub    rsp,0x20
  40d601:	mov    DWORD PTR [rbp-0x14],edi
  40d604:	mov    QWORD PTR [rbp-0x20],rsi
  40d608:	mov    rax,0x413380
  40d60f:	mov    QWORD PTR [rax],0x0
  40d616:	mov    rax,0x413368
  40d61d:	mov    QWORD PTR [rax],0x0
  40d624:	mov    rax,0x4144e0
  40d62b:	mov    QWORD PTR [rax],0x0
  40d632:	mov    rax,QWORD PTR [rip+0x59a7]        # 412fe0 <stdout@GLIBC_2.2.5>
  40d639:	mov    rdx,QWORD PTR [rax]
  40d63c:	mov    rax,0x4144c0
  40d643:	mov    QWORD PTR [rax],rdx
  40d646:	mov    DWORD PTR [rbp-0x10],0x1
  40d64d:	mov    DWORD PTR [rbp-0xc],0x1
  40d654:	mov    DWORD PTR [rbp-0x8],0x0
  40d65b:	mov    DWORD PTR [rbp-0x4],0x0
  40d662:	jmp    40d938 <handle_coda_error@@Base+0x1545>
  40d667:	mov    eax,DWORD PTR [rbp-0x4]
  40d66a:	cdqe   
  40d66c:	lea    rdx,[rax*8+0x0]
  40d674:	mov    rax,QWORD PTR [rbp-0x20]
  40d678:	add    rax,rdx
  40d67b:	mov    rax,QWORD PTR [rax]
  40d67e:	lea    rsi,[rip+0x3735]        # 410dba <_IO_stdin_used@@Base+0x1dba>
  40d685:	mov    rdi,rax
  40d688:	call   403910 <strcmp@plt>
  40d68d:	test   eax,eax
  40d68f:	je     40d6bb <handle_coda_error@@Base+0x12c8>
  40d691:	mov    eax,DWORD PTR [rbp-0x4]
  40d694:	cdqe   
  40d696:	lea    rdx,[rax*8+0x0]
  40d69e:	mov    rax,QWORD PTR [rbp-0x20]
  40d6a2:	add    rax,rdx
  40d6a5:	mov    rax,QWORD PTR [rax]
  40d6a8:	lea    rsi,[rip+0x370e]        # 410dbd <_IO_stdin_used@@Base+0x1dbd>
  40d6af:	mov    rdi,rax
  40d6b2:	call   403910 <strcmp@plt>
  40d6b7:	test   eax,eax
  40d6b9:	jne    40d6c7 <handle_coda_error@@Base+0x12d4>
  40d6bb:	mov    DWORD PTR [rbp-0x8],0x1
  40d6c2:	jmp    40d935 <handle_coda_error@@Base+0x1542>
  40d6c7:	mov    eax,DWORD PTR [rbp-0x4]
  40d6ca:	cdqe   
  40d6cc:	lea    rdx,[rax*8+0x0]
  40d6d4:	mov    rax,QWORD PTR [rbp-0x20]
  40d6d8:	add    rax,rdx
  40d6db:	mov    rax,QWORD PTR [rax]
  40d6de:	lea    rsi,[rip+0x359c]        # 410c81 <_IO_stdin_used@@Base+0x1c81>
  40d6e5:	mov    rdi,rax
  40d6e8:	call   403910 <strcmp@plt>
  40d6ed:	test   eax,eax
  40d6ef:	je     40d71b <handle_coda_error@@Base+0x1328>
  40d6f1:	mov    eax,DWORD PTR [rbp-0x4]
  40d6f4:	cdqe   
  40d6f6:	lea    rdx,[rax*8+0x0]
  40d6fe:	mov    rax,QWORD PTR [rbp-0x20]
  40d702:	add    rax,rdx
  40d705:	mov    rax,QWORD PTR [rax]
  40d708:	lea    rsi,[rip+0x3575]        # 410c84 <_IO_stdin_used@@Base+0x1c84>
  40d70f:	mov    rdi,rax
  40d712:	call   403910 <strcmp@plt>
  40d717:	test   eax,eax
  40d719:	jne    40d727 <handle_coda_error@@Base+0x1334>
  40d71b:	mov    DWORD PTR [rbp-0xc],0x0
  40d722:	jmp    40d935 <handle_coda_error@@Base+0x1542>
  40d727:	mov    eax,DWORD PTR [rbp-0x4]
  40d72a:	cdqe   
  40d72c:	lea    rdx,[rax*8+0x0]
  40d734:	mov    rax,QWORD PTR [rbp-0x20]
  40d738:	add    rax,rdx
  40d73b:	mov    rax,QWORD PTR [rax]
  40d73e:	lea    rsi,[rip+0x3600]        # 410d45 <_IO_stdin_used@@Base+0x1d45>
  40d745:	mov    rdi,rax
  40d748:	call   403910 <strcmp@plt>
  40d74d:	test   eax,eax
  40d74f:	je     40d77b <handle_coda_error@@Base+0x1388>
  40d751:	mov    eax,DWORD PTR [rbp-0x4]
  40d754:	cdqe   
  40d756:	lea    rdx,[rax*8+0x0]
  40d75e:	mov    rax,QWORD PTR [rbp-0x20]
  40d762:	add    rax,rdx
  40d765:	mov    rax,QWORD PTR [rax]
  40d768:	lea    rsi,[rip+0x35d9]        # 410d48 <_IO_stdin_used@@Base+0x1d48>
  40d76f:	mov    rdi,rax
  40d772:	call   403910 <strcmp@plt>
  40d777:	test   eax,eax
  40d779:	jne    40d7d2 <handle_coda_error@@Base+0x13df>
  40d77b:	mov    eax,DWORD PTR [rbp-0x4]
  40d77e:	inc    eax
  40d780:	cmp    DWORD PTR [rbp-0x14],eax
  40d783:	jle    40d7d2 <handle_coda_error@@Base+0x13df>
  40d785:	mov    eax,DWORD PTR [rbp-0x4]
  40d788:	cdqe   
  40d78a:	inc    rax
  40d78d:	lea    rdx,[rax*8+0x0]
  40d795:	mov    rax,QWORD PTR [rbp-0x20]
  40d799:	add    rax,rdx
  40d79c:	mov    rax,QWORD PTR [rax]
  40d79f:	movzx  eax,BYTE PTR [rax]
  40d7a2:	cmp    al,0x2d
  40d7a4:	je     40d7d2 <handle_coda_error@@Base+0x13df>
  40d7a6:	mov    eax,DWORD PTR [rbp-0x4]
  40d7a9:	cdqe   
  40d7ab:	inc    rax
  40d7ae:	lea    rdx,[rax*8+0x0]
  40d7b6:	mov    rax,QWORD PTR [rbp-0x20]
  40d7ba:	add    rax,rdx
  40d7bd:	mov    rdx,QWORD PTR [rax]
  40d7c0:	mov    rax,0x413368
  40d7c7:	mov    QWORD PTR [rax],rdx
  40d7ca:	inc    DWORD PTR [rbp-0x4]
  40d7cd:	jmp    40d935 <handle_coda_error@@Base+0x1542>
  40d7d2:	mov    eax,DWORD PTR [rbp-0x4]
  40d7d5:	cdqe   
  40d7d7:	lea    rdx,[rax*8+0x0]
  40d7df:	mov    rax,QWORD PTR [rbp-0x20]
  40d7e3:	add    rax,rdx
  40d7e6:	mov    rax,QWORD PTR [rax]
  40d7e9:	lea    rsi,[rip+0x35da]        # 410dca <_IO_stdin_used@@Base+0x1dca>
  40d7f0:	mov    rdi,rax
  40d7f3:	call   403910 <strcmp@plt>
  40d7f8:	test   eax,eax
  40d7fa:	je     40d826 <handle_coda_error@@Base+0x1433>
  40d7fc:	mov    eax,DWORD PTR [rbp-0x4]
  40d7ff:	cdqe   
  40d801:	lea    rdx,[rax*8+0x0]
  40d809:	mov    rax,QWORD PTR [rbp-0x20]
  40d80d:	add    rax,rdx
  40d810:	mov    rax,QWORD PTR [rax]
  40d813:	lea    rsi,[rip+0x35b3]        # 410dcd <_IO_stdin_used@@Base+0x1dcd>
  40d81a:	mov    rdi,rax
  40d81d:	call   403910 <strcmp@plt>
  40d822:	test   eax,eax
  40d824:	jne    40d87d <handle_coda_error@@Base+0x148a>
  40d826:	mov    eax,DWORD PTR [rbp-0x4]
  40d829:	inc    eax
  40d82b:	cmp    DWORD PTR [rbp-0x14],eax
  40d82e:	jle    40d87d <handle_coda_error@@Base+0x148a>
  40d830:	mov    eax,DWORD PTR [rbp-0x4]
  40d833:	cdqe   
  40d835:	inc    rax
  40d838:	lea    rdx,[rax*8+0x0]
  40d840:	mov    rax,QWORD PTR [rbp-0x20]
  40d844:	add    rax,rdx
  40d847:	mov    rax,QWORD PTR [rax]
  40d84a:	movzx  eax,BYTE PTR [rax]
  40d84d:	cmp    al,0x2d
  40d84f:	je     40d87d <handle_coda_error@@Base+0x148a>
  40d851:	mov    eax,DWORD PTR [rbp-0x4]
  40d854:	cdqe   
  40d856:	inc    rax
  40d859:	lea    rdx,[rax*8+0x0]
  40d861:	mov    rax,QWORD PTR [rbp-0x20]
  40d865:	add    rax,rdx
  40d868:	mov    rdx,QWORD PTR [rax]
  40d86b:	mov    rax,0x4144e0
  40d872:	mov    QWORD PTR [rax],rdx
  40d875:	inc    DWORD PTR [rbp-0x4]
  40d878:	jmp    40d935 <handle_coda_error@@Base+0x1542>
  40d87d:	mov    eax,DWORD PTR [rbp-0x4]
  40d880:	cdqe   
  40d882:	lea    rdx,[rax*8+0x0]
  40d88a:	mov    rax,QWORD PTR [rbp-0x20]
  40d88e:	add    rax,rdx
  40d891:	mov    rax,QWORD PTR [rax]
  40d894:	lea    rsi,[rip+0x3465]        # 410d00 <_IO_stdin_used@@Base+0x1d00>
  40d89b:	mov    rdi,rax
  40d89e:	call   403910 <strcmp@plt>
  40d8a3:	test   eax,eax
  40d8a5:	jne    40d8b3 <handle_coda_error@@Base+0x14c0>
  40d8a7:	mov    DWORD PTR [rbp-0x10],0x0
  40d8ae:	jmp    40d935 <handle_coda_error@@Base+0x1542>
  40d8b3:	mov    eax,DWORD PTR [rbp-0x14]
  40d8b6:	dec    eax
  40d8b8:	cmp    DWORD PTR [rbp-0x4],eax
  40d8bb:	jne    40d8fe <handle_coda_error@@Base+0x150b>
  40d8bd:	mov    eax,DWORD PTR [rbp-0x4]
  40d8c0:	cdqe   
  40d8c2:	lea    rdx,[rax*8+0x0]
  40d8ca:	mov    rax,QWORD PTR [rbp-0x20]
  40d8ce:	add    rax,rdx
  40d8d1:	mov    rax,QWORD PTR [rax]
  40d8d4:	movzx  eax,BYTE PTR [rax]
  40d8d7:	cmp    al,0x2d
  40d8d9:	je     40d8fe <handle_coda_error@@Base+0x150b>
  40d8db:	mov    eax,DWORD PTR [rbp-0x4]
  40d8de:	cdqe   
  40d8e0:	lea    rdx,[rax*8+0x0]
  40d8e8:	mov    rax,QWORD PTR [rbp-0x20]
  40d8ec:	add    rax,rdx
  40d8ef:	mov    rdx,QWORD PTR [rax]
  40d8f2:	mov    rax,0x413380
  40d8f9:	mov    QWORD PTR [rax],rdx
  40d8fc:	jmp    40d935 <handle_coda_error@@Base+0x1542>
  40d8fe:	mov    rax,QWORD PTR [rip+0x56f3]        # 412ff8 <stderr@GLIBC_2.2.5>
  40d905:	mov    rax,QWORD PTR [rax]
  40d908:	mov    rcx,rax
  40d90b:	mov    edx,0x19
  40d910:	mov    esi,0x1
  40d915:	lea    rdi,[rip+0x33f7]        # 410d13 <_IO_stdin_used@@Base+0x1d13>
  40d91c:	call   403bc0 <fwrite@plt>
  40d921:	mov    eax,0x0
  40d926:	call   40be70 <print_yaml_data@@Base+0x199>
  40d92b:	mov    edi,0x1
  40d930:	call   403ba0 <exit@plt>
  40d935:	inc    DWORD PTR [rbp-0x4]
  40d938:	mov    eax,DWORD PTR [rbp-0x4]
  40d93b:	cmp    eax,DWORD PTR [rbp-0x14]
  40d93e:	jl     40d667 <handle_coda_error@@Base+0x1274>
  40d944:	mov    rax,0x413380
  40d94b:	mov    rax,QWORD PTR [rax]
  40d94e:	test   rax,rax
  40d951:	je     40d964 <handle_coda_error@@Base+0x1571>
  40d953:	mov    rax,0x413380
  40d95a:	mov    rax,QWORD PTR [rax]
  40d95d:	movzx  eax,BYTE PTR [rax]
  40d960:	test   al,al
  40d962:	jne    40d99b <handle_coda_error@@Base+0x15a8>
  40d964:	mov    rax,QWORD PTR [rip+0x568d]        # 412ff8 <stderr@GLIBC_2.2.5>
  40d96b:	mov    rax,QWORD PTR [rax]
  40d96e:	mov    rcx,rax
  40d971:	mov    edx,0x19
  40d976:	mov    esi,0x1
  40d97b:	lea    rdi,[rip+0x3391]        # 410d13 <_IO_stdin_used@@Base+0x1d13>
  40d982:	call   403bc0 <fwrite@plt>
  40d987:	mov    eax,0x0
  40d98c:	call   40be70 <print_yaml_data@@Base+0x199>
  40d991:	mov    edi,0x1
  40d996:	call   403ba0 <exit@plt>
  40d99b:	call   4039e0 <coda_init@plt>
  40d9a0:	test   eax,eax
  40d9a2:	je     40d9dd <handle_coda_error@@Base+0x15ea>
  40d9a4:	call   403bf0 <coda_get_errno@plt>
  40d9a9:	mov    eax,DWORD PTR [rax]
  40d9ab:	mov    edi,eax
  40d9ad:	call   403b70 <coda_errno_to_string@plt>
  40d9b2:	mov    rdx,rax
  40d9b5:	mov    rax,QWORD PTR [rip+0x563c]        # 412ff8 <stderr@GLIBC_2.2.5>
  40d9bc:	mov    rax,QWORD PTR [rax]
  40d9bf:	lea    rsi,[rip+0x32a2]        # 410c68 <_IO_stdin_used@@Base+0x1c68>
  40d9c6:	mov    rdi,rax
  40d9c9:	mov    eax,0x0
  40d9ce:	call   403920 <fprintf@plt>
  40d9d3:	mov    edi,0x1
  40d9d8:	call   403ba0 <exit@plt>
  40d9dd:	cmp    DWORD PTR [rbp-0x10],0x0
  40d9e1:	sete   al
  40d9e4:	movzx  eax,al
  40d9e7:	mov    edi,eax
  40d9e9:	call   403770 <coda_set_option_bypass_special_types@plt>
  40d9ee:	mov    eax,DWORD PTR [rbp-0xc]
  40d9f1:	mov    edi,eax
  40d9f3:	call   4039f0 <coda_set_option_perform_conversions@plt>
  40d9f8:	mov    rax,0x413368
  40d9ff:	mov    rax,QWORD PTR [rax]
  40da02:	test   rax,rax
  40da05:	je     40da6e <handle_coda_error@@Base+0x167b>
  40da07:	mov    rax,0x413368
  40da0e:	mov    rax,QWORD PTR [rax]
  40da11:	lea    rsi,[rip+0x3373]        # 410d8b <_IO_stdin_used@@Base+0x1d8b>
  40da18:	mov    rdi,rax
  40da1b:	call   403b20 <fopen@plt>
  40da20:	mov    rdx,rax
  40da23:	mov    rax,0x4144c0
  40da2a:	mov    QWORD PTR [rax],rdx
  40da2d:	mov    rax,0x4144c0
  40da34:	mov    rax,QWORD PTR [rax]
  40da37:	test   rax,rax
  40da3a:	jne    40da6e <handle_coda_error@@Base+0x167b>
  40da3c:	mov    rax,0x413368
  40da43:	mov    rdx,QWORD PTR [rax]
  40da46:	mov    rax,QWORD PTR [rip+0x55ab]        # 412ff8 <stderr@GLIBC_2.2.5>
  40da4d:	mov    rax,QWORD PTR [rax]
  40da50:	lea    rsi,[rip+0x3339]        # 410d90 <_IO_stdin_used@@Base+0x1d90>
  40da57:	mov    rdi,rax
  40da5a:	mov    eax,0x0
  40da5f:	call   403920 <fprintf@plt>
  40da64:	mov    edi,0x1
  40da69:	call   403ba0 <exit@plt>
  40da6e:	mov    eax,DWORD PTR [rbp-0x8]
  40da71:	mov    edi,eax
  40da73:	call   40bcd7 <print_yaml_data@@Base>
  40da78:	mov    rax,0x413368
  40da7f:	mov    rax,QWORD PTR [rax]
  40da82:	test   rax,rax
  40da85:	je     40da99 <handle_coda_error@@Base+0x16a6>
  40da87:	mov    rax,0x4144c0
  40da8e:	mov    rax,QWORD PTR [rax]
  40da91:	mov    rdi,rax
  40da94:	call   4037d0 <fclose@plt>
  40da99:	call   4038f0 <coda_done@plt>
  40da9e:	nop
  40da9f:	leave  
  40daa0:	ret    
  40daa1:	endbr64 
  40daa5:	push   rbp
  40daa6:	mov    rbp,rsp
  40daa9:	sub    rsp,0x30
  40daad:	mov    DWORD PTR [rbp-0x24],edi
  40dab0:	mov    QWORD PTR [rbp-0x30],rsi
  40dab4:	mov    QWORD PTR [rbp-0x10],0x0
  40dabc:	mov    QWORD PTR [rbp-0x8],0x0
  40dac4:	mov    DWORD PTR [rbp-0x1c],0x0
  40dacb:	mov    rax,0x413380
  40dad2:	mov    QWORD PTR [rax],0x0
  40dad9:	mov    rax,0x413368
  40dae0:	mov    QWORD PTR [rax],0x0
  40dae7:	mov    rax,0x4144e0
  40daee:	mov    QWORD PTR [rax],0x0
  40daf5:	mov    rax,QWORD PTR [rip+0x54e4]        # 412fe0 <stdout@GLIBC_2.2.5>
  40dafc:	mov    rdx,QWORD PTR [rax]
  40daff:	mov    rax,0x4144c0
  40db06:	mov    QWORD PTR [rax],rdx
  40db09:	mov    DWORD PTR [rbp-0x18],0x1
  40db10:	mov    DWORD PTR [rbp-0x14],0x0
  40db17:	jmp    40def7 <handle_coda_error@@Base+0x1b04>
  40db1c:	mov    eax,DWORD PTR [rbp-0x14]
  40db1f:	cdqe   
  40db21:	lea    rdx,[rax*8+0x0]
  40db29:	mov    rax,QWORD PTR [rbp-0x30]
  40db2d:	add    rax,rdx
  40db30:	mov    rax,QWORD PTR [rax]
  40db33:	lea    rsi,[rip+0x3147]        # 410c81 <_IO_stdin_used@@Base+0x1c81>
  40db3a:	mov    rdi,rax
  40db3d:	call   403910 <strcmp@plt>
  40db42:	test   eax,eax
  40db44:	je     40db70 <handle_coda_error@@Base+0x177d>
  40db46:	mov    eax,DWORD PTR [rbp-0x14]
  40db49:	cdqe   
  40db4b:	lea    rdx,[rax*8+0x0]
  40db53:	mov    rax,QWORD PTR [rbp-0x30]
  40db57:	add    rax,rdx
  40db5a:	mov    rax,QWORD PTR [rax]
  40db5d:	lea    rsi,[rip+0x3274]        # 410dd8 <_IO_stdin_used@@Base+0x1dd8>
  40db64:	mov    rdi,rax
  40db67:	call   403910 <strcmp@plt>
  40db6c:	test   eax,eax
  40db6e:	jne    40db7c <handle_coda_error@@Base+0x1789>
  40db70:	mov    DWORD PTR [rbp-0x18],0x0
  40db77:	jmp    40def4 <handle_coda_error@@Base+0x1b01>
  40db7c:	mov    eax,DWORD PTR [rbp-0x14]
  40db7f:	cdqe   
  40db81:	lea    rdx,[rax*8+0x0]
  40db89:	mov    rax,QWORD PTR [rbp-0x30]
  40db8d:	add    rax,rdx
  40db90:	mov    rax,QWORD PTR [rax]
  40db93:	lea    rsi,[rip+0x31ab]        # 410d45 <_IO_stdin_used@@Base+0x1d45>
  40db9a:	mov    rdi,rax
  40db9d:	call   403910 <strcmp@plt>
  40dba2:	test   eax,eax
  40dba4:	je     40dbd0 <handle_coda_error@@Base+0x17dd>
  40dba6:	mov    eax,DWORD PTR [rbp-0x14]
  40dba9:	cdqe   
  40dbab:	lea    rdx,[rax*8+0x0]
  40dbb3:	mov    rax,QWORD PTR [rbp-0x30]
  40dbb7:	add    rax,rdx
  40dbba:	mov    rax,QWORD PTR [rax]
  40dbbd:	lea    rsi,[rip+0x3184]        # 410d48 <_IO_stdin_used@@Base+0x1d48>
  40dbc4:	mov    rdi,rax
  40dbc7:	call   403910 <strcmp@plt>
  40dbcc:	test   eax,eax
  40dbce:	jne    40dc27 <handle_coda_error@@Base+0x1834>
  40dbd0:	mov    eax,DWORD PTR [rbp-0x14]
  40dbd3:	inc    eax
  40dbd5:	cmp    DWORD PTR [rbp-0x24],eax
  40dbd8:	jle    40dc27 <handle_coda_error@@Base+0x1834>
  40dbda:	mov    eax,DWORD PTR [rbp-0x14]
  40dbdd:	cdqe   
  40dbdf:	inc    rax
  40dbe2:	lea    rdx,[rax*8+0x0]
  40dbea:	mov    rax,QWORD PTR [rbp-0x30]
  40dbee:	add    rax,rdx
  40dbf1:	mov    rax,QWORD PTR [rax]
  40dbf4:	movzx  eax,BYTE PTR [rax]
  40dbf7:	cmp    al,0x2d
  40dbf9:	je     40dc27 <handle_coda_error@@Base+0x1834>
  40dbfb:	mov    eax,DWORD PTR [rbp-0x14]
  40dbfe:	cdqe   
  40dc00:	inc    rax
  40dc03:	lea    rdx,[rax*8+0x0]
  40dc0b:	mov    rax,QWORD PTR [rbp-0x30]
  40dc0f:	add    rax,rdx
  40dc12:	mov    rdx,QWORD PTR [rax]
  40dc15:	mov    rax,0x413368
  40dc1c:	mov    QWORD PTR [rax],rdx
  40dc1f:	inc    DWORD PTR [rbp-0x14]
  40dc22:	jmp    40def4 <handle_coda_error@@Base+0x1b01>
  40dc27:	mov    eax,DWORD PTR [rbp-0x14]
  40dc2a:	cdqe   
  40dc2c:	lea    rdx,[rax*8+0x0]
  40dc34:	mov    rax,QWORD PTR [rbp-0x30]
  40dc38:	add    rax,rdx
  40dc3b:	mov    rax,QWORD PTR [rax]
  40dc3e:	lea    rsi,[rip+0x3185]        # 410dca <_IO_stdin_used@@Base+0x1dca>
  40dc45:	mov    rdi,rax
  40dc48:	call   403910 <strcmp@plt>
  40dc4d:	test   eax,eax
  40dc4f:	je     40dc7b <handle_coda_error@@Base+0x1888>
  40dc51:	mov    eax,DWORD PTR [rbp-0x14]
  40dc54:	cdqe   
  40dc56:	lea    rdx,[rax*8+0x0]
  40dc5e:	mov    rax,QWORD PTR [rbp-0x30]
  40dc62:	add    rax,rdx
  40dc65:	mov    rax,QWORD PTR [rax]
  40dc68:	lea    rsi,[rip+0x315e]        # 410dcd <_IO_stdin_used@@Base+0x1dcd>
  40dc6f:	mov    rdi,rax
  40dc72:	call   403910 <strcmp@plt>
  40dc77:	test   eax,eax
  40dc79:	jne    40dcd2 <handle_coda_error@@Base+0x18df>
  40dc7b:	mov    eax,DWORD PTR [rbp-0x14]
  40dc7e:	inc    eax
  40dc80:	cmp    DWORD PTR [rbp-0x24],eax
  40dc83:	jle    40dcd2 <handle_coda_error@@Base+0x18df>
  40dc85:	mov    eax,DWORD PTR [rbp-0x14]
  40dc88:	cdqe   
  40dc8a:	inc    rax
  40dc8d:	lea    rdx,[rax*8+0x0]
  40dc95:	mov    rax,QWORD PTR [rbp-0x30]
  40dc99:	add    rax,rdx
  40dc9c:	mov    rax,QWORD PTR [rax]
  40dc9f:	movzx  eax,BYTE PTR [rax]
  40dca2:	cmp    al,0x2d
  40dca4:	je     40dcd2 <handle_coda_error@@Base+0x18df>
  40dca6:	mov    eax,DWORD PTR [rbp-0x14]
  40dca9:	cdqe   
  40dcab:	inc    rax
  40dcae:	lea    rdx,[rax*8+0x0]
  40dcb6:	mov    rax,QWORD PTR [rbp-0x30]
  40dcba:	add    rax,rdx
  40dcbd:	mov    rdx,QWORD PTR [rax]
  40dcc0:	mov    rax,0x4144e0
  40dcc7:	mov    QWORD PTR [rax],rdx
  40dcca:	inc    DWORD PTR [rbp-0x14]
  40dccd:	jmp    40def4 <handle_coda_error@@Base+0x1b01>
  40dcd2:	mov    eax,DWORD PTR [rbp-0x14]
  40dcd5:	cdqe   
  40dcd7:	lea    rdx,[rax*8+0x0]
  40dcdf:	mov    rax,QWORD PTR [rbp-0x30]
  40dce3:	add    rax,rdx
  40dce6:	mov    rax,QWORD PTR [rax]
  40dce9:	lea    rsi,[rip+0x3108]        # 410df8 <_IO_stdin_used@@Base+0x1df8>
  40dcf0:	mov    rdi,rax
  40dcf3:	call   403910 <strcmp@plt>
  40dcf8:	test   eax,eax
  40dcfa:	jne    40dd5c <handle_coda_error@@Base+0x1969>
  40dcfc:	mov    eax,DWORD PTR [rbp-0x14]
  40dcff:	inc    eax
  40dd01:	cmp    DWORD PTR [rbp-0x24],eax
  40dd04:	jle    40dd5c <handle_coda_error@@Base+0x1969>
  40dd06:	mov    eax,DWORD PTR [rbp-0x14]
  40dd09:	cdqe   
  40dd0b:	inc    rax
  40dd0e:	lea    rdx,[rax*8+0x0]
  40dd16:	mov    rax,QWORD PTR [rbp-0x30]
  40dd1a:	add    rax,rdx
  40dd1d:	mov    rax,QWORD PTR [rax]
  40dd20:	movzx  eax,BYTE PTR [rax]
  40dd23:	cmp    al,0x2d
  40dd25:	je     40dd5c <handle_coda_error@@Base+0x1969>
  40dd27:	mov    eax,DWORD PTR [rbp-0x14]
  40dd2a:	cdqe   
  40dd2c:	inc    rax
  40dd2f:	lea    rdx,[rax*8+0x0]
  40dd37:	mov    rax,QWORD PTR [rbp-0x30]
  40dd3b:	add    rax,rdx
  40dd3e:	mov    rax,QWORD PTR [rax]
  40dd41:	mov    rdi,rax
  40dd44:	call   403b60 <atoi@plt>
  40dd49:	mov    edx,eax
  40dd4b:	mov    rax,0x413338
  40dd52:	mov    DWORD PTR [rax],edx
  40dd54:	inc    DWORD PTR [rbp-0x14]
  40dd57:	jmp    40def4 <handle_coda_error@@Base+0x1b01>
  40dd5c:	mov    eax,DWORD PTR [rbp-0x14]
  40dd5f:	cdqe   
  40dd61:	lea    rdx,[rax*8+0x0]
  40dd69:	mov    rax,QWORD PTR [rbp-0x30]
  40dd6d:	add    rax,rdx
  40dd70:	mov    rax,QWORD PTR [rax]
  40dd73:	lea    rsi,[rip+0x308a]        # 410e04 <_IO_stdin_used@@Base+0x1e04>
  40dd7a:	mov    rdi,rax
  40dd7d:	call   403910 <strcmp@plt>
  40dd82:	test   eax,eax
  40dd84:	jne    40de72 <handle_coda_error@@Base+0x1a7f>
  40dd8a:	mov    eax,DWORD PTR [rbp-0x14]
  40dd8d:	add    eax,0x3
  40dd90:	cmp    DWORD PTR [rbp-0x24],eax
  40dd93:	jle    40de72 <handle_coda_error@@Base+0x1a7f>
  40dd99:	mov    eax,DWORD PTR [rbp-0x14]
  40dd9c:	cdqe   
  40dd9e:	inc    rax
  40dda1:	lea    rdx,[rax*8+0x0]
  40dda9:	mov    rax,QWORD PTR [rbp-0x30]
  40ddad:	add    rax,rdx
  40ddb0:	mov    rax,QWORD PTR [rax]
  40ddb3:	movzx  eax,BYTE PTR [rax]
  40ddb6:	cmp    al,0x2d
  40ddb8:	je     40de72 <handle_coda_error@@Base+0x1a7f>
  40ddbe:	mov    eax,DWORD PTR [rbp-0x14]
  40ddc1:	cdqe   
  40ddc3:	add    rax,0x2
  40ddc7:	lea    rdx,[rax*8+0x0]
  40ddcf:	mov    rax,QWORD PTR [rbp-0x30]
  40ddd3:	add    rax,rdx
  40ddd6:	mov    rax,QWORD PTR [rax]
  40ddd9:	movzx  eax,BYTE PTR [rax]
  40dddc:	cmp    al,0x2d
  40ddde:	je     40de72 <handle_coda_error@@Base+0x1a7f>
  40dde4:	mov    eax,DWORD PTR [rbp-0x14]
  40dde7:	cdqe   
  40dde9:	add    rax,0x3
  40dded:	lea    rdx,[rax*8+0x0]
  40ddf5:	mov    rax,QWORD PTR [rbp-0x30]
  40ddf9:	add    rax,rdx
  40ddfc:	mov    rax,QWORD PTR [rax]
  40ddff:	movzx  eax,BYTE PTR [rax]
  40de02:	cmp    al,0x2d
  40de04:	je     40de72 <handle_coda_error@@Base+0x1a7f>
  40de06:	mov    eax,DWORD PTR [rbp-0x14]
  40de09:	cdqe   
  40de0b:	inc    rax
  40de0e:	lea    rdx,[rax*8+0x0]
  40de16:	mov    rax,QWORD PTR [rbp-0x30]
  40de1a:	add    rax,rdx
  40de1d:	mov    rax,QWORD PTR [rax]
  40de20:	mov    QWORD PTR [rbp-0x10],rax
  40de24:	mov    eax,DWORD PTR [rbp-0x14]
  40de27:	cdqe   
  40de29:	add    rax,0x2
  40de2d:	lea    rdx,[rax*8+0x0]
  40de35:	mov    rax,QWORD PTR [rbp-0x30]
  40de39:	add    rax,rdx
  40de3c:	mov    rax,QWORD PTR [rax]
  40de3f:	mov    QWORD PTR [rbp-0x8],rax
  40de43:	mov    eax,DWORD PTR [rbp-0x14]
  40de46:	cdqe   
  40de48:	add    rax,0x3
  40de4c:	lea    rdx,[rax*8+0x0]
  40de54:	mov    rax,QWORD PTR [rbp-0x30]
  40de58:	add    rax,rdx
  40de5b:	mov    rax,QWORD PTR [rax]
  40de5e:	mov    rdi,rax
  40de61:	call   403b60 <atoi@plt>
  40de66:	mov    DWORD PTR [rbp-0x1c],eax
  40de69:	add    DWORD PTR [rbp-0x14],0x3
  40de6d:	jmp    40def4 <handle_coda_error@@Base+0x1b01>
  40de72:	mov    eax,DWORD PTR [rbp-0x24]
  40de75:	dec    eax
  40de77:	cmp    DWORD PTR [rbp-0x14],eax
  40de7a:	jne    40debd <handle_coda_error@@Base+0x1aca>
  40de7c:	mov    eax,DWORD PTR [rbp-0x14]
  40de7f:	cdqe   
  40de81:	lea    rdx,[rax*8+0x0]
  40de89:	mov    rax,QWORD PTR [rbp-0x30]
  40de8d:	add    rax,rdx
  40de90:	mov    rax,QWORD PTR [rax]
  40de93:	movzx  eax,BYTE PTR [rax]
  40de96:	cmp    al,0x2d
  40de98:	je     40debd <handle_coda_error@@Base+0x1aca>
  40de9a:	mov    eax,DWORD PTR [rbp-0x14]
  40de9d:	cdqe   
  40de9f:	lea    rdx,[rax*8+0x0]
  40dea7:	mov    rax,QWORD PTR [rbp-0x30]
  40deab:	add    rax,rdx
  40deae:	mov    rdx,QWORD PTR [rax]
  40deb1:	mov    rax,0x413380
  40deb8:	mov    QWORD PTR [rax],rdx
  40debb:	jmp    40def4 <handle_coda_error@@Base+0x1b01>
  40debd:	mov    rax,QWORD PTR [rip+0x5134]        # 412ff8 <stderr@GLIBC_2.2.5>
  40dec4:	mov    rax,QWORD PTR [rax]
  40dec7:	mov    rcx,rax
  40deca:	mov    edx,0x19
  40decf:	mov    esi,0x1
  40ded4:	lea    rdi,[rip+0x2e38]        # 410d13 <_IO_stdin_used@@Base+0x1d13>
  40dedb:	call   403bc0 <fwrite@plt>
  40dee0:	mov    eax,0x0
  40dee5:	call   40be70 <print_yaml_data@@Base+0x199>
  40deea:	mov    edi,0x1
  40deef:	call   403ba0 <exit@plt>
  40def4:	inc    DWORD PTR [rbp-0x14]
  40def7:	mov    eax,DWORD PTR [rbp-0x14]
  40defa:	cmp    eax,DWORD PTR [rbp-0x24]
  40defd:	jl     40db1c <handle_coda_error@@Base+0x1729>
  40df03:	mov    rax,0x413380
  40df0a:	mov    rax,QWORD PTR [rax]
  40df0d:	test   rax,rax
  40df10:	je     40df23 <handle_coda_error@@Base+0x1b30>
  40df12:	mov    rax,0x413380
  40df19:	mov    rax,QWORD PTR [rax]
  40df1c:	movzx  eax,BYTE PTR [rax]
  40df1f:	test   al,al
  40df21:	jne    40df5a <handle_coda_error@@Base+0x1b67>
  40df23:	mov    rax,QWORD PTR [rip+0x50ce]        # 412ff8 <stderr@GLIBC_2.2.5>
  40df2a:	mov    rax,QWORD PTR [rax]
  40df2d:	mov    rcx,rax
  40df30:	mov    edx,0x19
  40df35:	mov    esi,0x1
  40df3a:	lea    rdi,[rip+0x2dd2]        # 410d13 <_IO_stdin_used@@Base+0x1d13>
  40df41:	call   403bc0 <fwrite@plt>
  40df46:	mov    eax,0x0
  40df4b:	call   40be70 <print_yaml_data@@Base+0x199>
  40df50:	mov    edi,0x1
  40df55:	call   403ba0 <exit@plt>
  40df5a:	call   4039e0 <coda_init@plt>
  40df5f:	test   eax,eax
  40df61:	je     40df9c <handle_coda_error@@Base+0x1ba9>
  40df63:	call   403bf0 <coda_get_errno@plt>
  40df68:	mov    eax,DWORD PTR [rax]
  40df6a:	mov    edi,eax
  40df6c:	call   403b70 <coda_errno_to_string@plt>
  40df71:	mov    rdx,rax
  40df74:	mov    rax,QWORD PTR [rip+0x507d]        # 412ff8 <stderr@GLIBC_2.2.5>
  40df7b:	mov    rax,QWORD PTR [rax]
  40df7e:	lea    rsi,[rip+0x2ce3]        # 410c68 <_IO_stdin_used@@Base+0x1c68>
  40df85:	mov    rdi,rax
  40df88:	mov    eax,0x0
  40df8d:	call   403920 <fprintf@plt>
  40df92:	mov    edi,0x1
  40df97:	call   403ba0 <exit@plt>
  40df9c:	mov    edi,0x0
  40dfa1:	call   4039f0 <coda_set_option_perform_conversions@plt>
  40dfa6:	mov    eax,DWORD PTR [rbp-0x18]
  40dfa9:	mov    edi,eax
  40dfab:	call   403660 <coda_set_option_use_fast_size_expressions@plt>
  40dfb0:	mov    rax,0x413368
  40dfb7:	mov    rax,QWORD PTR [rax]
  40dfba:	test   rax,rax
  40dfbd:	je     40e026 <handle_coda_error@@Base+0x1c33>
  40dfbf:	mov    rax,0x413368
  40dfc6:	mov    rax,QWORD PTR [rax]
  40dfc9:	lea    rsi,[rip+0x2dbb]        # 410d8b <_IO_stdin_used@@Base+0x1d8b>
  40dfd0:	mov    rdi,rax
  40dfd3:	call   403b20 <fopen@plt>
  40dfd8:	mov    rdx,rax
  40dfdb:	mov    rax,0x4144c0
  40dfe2:	mov    QWORD PTR [rax],rdx
  40dfe5:	mov    rax,0x4144c0
  40dfec:	mov    rax,QWORD PTR [rax]
  40dfef:	test   rax,rax
  40dff2:	jne    40e026 <handle_coda_error@@Base+0x1c33>
  40dff4:	mov    rax,0x413368
  40dffb:	mov    rdx,QWORD PTR [rax]
  40dffe:	mov    rax,QWORD PTR [rip+0x4ff3]        # 412ff8 <stderr@GLIBC_2.2.5>
  40e005:	mov    rax,QWORD PTR [rax]
  40e008:	lea    rsi,[rip+0x2d81]        # 410d90 <_IO_stdin_used@@Base+0x1d90>
  40e00f:	mov    rdi,rax
  40e012:	mov    eax,0x0
  40e017:	call   403920 <fprintf@plt>
  40e01c:	mov    edi,0x1
  40e021:	call   403ba0 <exit@plt>
  40e026:	mov    edx,DWORD PTR [rbp-0x1c]
  40e029:	mov    rcx,QWORD PTR [rbp-0x8]
  40e02d:	mov    rax,QWORD PTR [rbp-0x10]
  40e031:	mov    rsi,rcx
  40e034:	mov    rdi,rax
  40e037:	call   4060bf <print_debug_data@@Base>
  40e03c:	mov    rax,0x413368
  40e043:	mov    rax,QWORD PTR [rax]
  40e046:	test   rax,rax
  40e049:	je     40e05d <handle_coda_error@@Base+0x1c6a>
  40e04b:	mov    rax,0x4144c0
  40e052:	mov    rax,QWORD PTR [rax]
  40e055:	mov    rdi,rax
  40e058:	call   4037d0 <fclose@plt>
  40e05d:	call   4038f0 <coda_done@plt>
  40e062:	nop
  40e063:	leave  
  40e064:	ret    

000000000040e065 <main@@Base>:
  40e065:	endbr64 
  40e069:	push   rbp
  40e06a:	mov    rbp,rsp
  40e06d:	sub    rsp,0x20
  40e071:	mov    DWORD PTR [rbp-0x14],edi
  40e074:	mov    QWORD PTR [rbp-0x20],rsi
  40e078:	cmp    DWORD PTR [rbp-0x14],0x1
  40e07c:	je     40e0ba <main@@Base+0x55>
  40e07e:	mov    rax,QWORD PTR [rbp-0x20]
  40e082:	add    rax,0x8
  40e086:	mov    rax,QWORD PTR [rax]
  40e089:	lea    rsi,[rip+0x2d7e]        # 410e0e <_IO_stdin_used@@Base+0x1e0e>
  40e090:	mov    rdi,rax
  40e093:	call   403910 <strcmp@plt>
  40e098:	test   eax,eax
  40e09a:	je     40e0ba <main@@Base+0x55>
  40e09c:	mov    rax,QWORD PTR [rbp-0x20]
  40e0a0:	add    rax,0x8
  40e0a4:	mov    rax,QWORD PTR [rax]
  40e0a7:	lea    rsi,[rip+0x2d63]        # 410e11 <_IO_stdin_used@@Base+0x1e11>
  40e0ae:	mov    rdi,rax
  40e0b1:	call   403910 <strcmp@plt>
  40e0b6:	test   eax,eax
  40e0b8:	jne    40e0ce <main@@Base+0x69>
  40e0ba:	mov    eax,0x0
  40e0bf:	call   40be70 <print_yaml_data@@Base+0x199>
  40e0c4:	mov    edi,0x0
  40e0c9:	call   403ba0 <exit@plt>
  40e0ce:	mov    rax,QWORD PTR [rbp-0x20]
  40e0d2:	add    rax,0x8
  40e0d6:	mov    rax,QWORD PTR [rax]
  40e0d9:	lea    rsi,[rip+0x2d38]        # 410e18 <_IO_stdin_used@@Base+0x1e18>
  40e0e0:	mov    rdi,rax
  40e0e3:	call   403910 <strcmp@plt>
  40e0e8:	test   eax,eax
  40e0ea:	je     40e10a <main@@Base+0xa5>
  40e0ec:	mov    rax,QWORD PTR [rbp-0x20]
  40e0f0:	add    rax,0x8
  40e0f4:	mov    rax,QWORD PTR [rax]
  40e0f7:	lea    rsi,[rip+0x2d1d]        # 410e1b <_IO_stdin_used@@Base+0x1e1b>
  40e0fe:	mov    rdi,rax
  40e101:	call   403910 <strcmp@plt>
  40e106:	test   eax,eax
  40e108:	jne    40e11e <main@@Base+0xb9>
  40e10a:	mov    eax,0x0
  40e10f:	call   40be36 <print_yaml_data@@Base+0x15f>
  40e114:	mov    edi,0x0
  40e119:	call   403ba0 <exit@plt>
  40e11e:	mov    DWORD PTR [rbp-0xc],0x1
  40e125:	mov    eax,DWORD PTR [rbp-0xc]
  40e128:	inc    eax
  40e12a:	cmp    DWORD PTR [rbp-0x14],eax
  40e12d:	jle    40e181 <main@@Base+0x11c>
  40e12f:	mov    eax,DWORD PTR [rbp-0xc]
  40e132:	cdqe   
  40e134:	lea    rdx,[rax*8+0x0]
  40e13c:	mov    rax,QWORD PTR [rbp-0x20]
  40e140:	add    rax,rdx
  40e143:	mov    rax,QWORD PTR [rax]
  40e146:	lea    rsi,[rip+0x2cd8]        # 410e25 <_IO_stdin_used@@Base+0x1e25>
  40e14d:	mov    rdi,rax
  40e150:	call   403910 <strcmp@plt>
  40e155:	test   eax,eax
  40e157:	jne    40e181 <main@@Base+0x11c>
  40e159:	mov    eax,DWORD PTR [rbp-0xc]
  40e15c:	cdqe   
  40e15e:	inc    rax
  40e161:	lea    rdx,[rax*8+0x0]
  40e169:	mov    rax,QWORD PTR [rbp-0x20]
  40e16d:	add    rax,rdx
  40e170:	mov    rax,QWORD PTR [rax]
  40e173:	mov    rdi,rax
  40e176:	call   403800 <coda_set_definition_path@plt>
  40e17b:	add    DWORD PTR [rbp-0xc],0x2
  40e17f:	jmp    40e1e1 <main@@Base+0x17c>
  40e181:	lea    rax,[rip+0x2ca0]        # 410e28 <_IO_stdin_used@@Base+0x1e28>
  40e188:	mov    QWORD PTR [rbp-0x8],rax
  40e18c:	mov    rax,QWORD PTR [rbp-0x20]
  40e190:	mov    rax,QWORD PTR [rax]
  40e193:	mov    rdx,QWORD PTR [rbp-0x8]
  40e197:	mov    esi,0x0
  40e19c:	mov    rdi,rax
  40e19f:	call   403750 <coda_set_definition_path_conditional@plt>
  40e1a4:	test   eax,eax
  40e1a6:	je     40e1e1 <main@@Base+0x17c>
  40e1a8:	call   403bf0 <coda_get_errno@plt>
  40e1ad:	mov    eax,DWORD PTR [rax]
  40e1af:	mov    edi,eax
  40e1b1:	call   403b70 <coda_errno_to_string@plt>
  40e1b6:	mov    rdx,rax
  40e1b9:	mov    rax,QWORD PTR [rip+0x4e38]        # 412ff8 <stderr@GLIBC_2.2.5>
  40e1c0:	mov    rax,QWORD PTR [rax]
  40e1c3:	lea    rsi,[rip+0x2a9e]        # 410c68 <_IO_stdin_used@@Base+0x1c68>
  40e1ca:	mov    rdi,rax
  40e1cd:	mov    eax,0x0
  40e1d2:	call   403920 <fprintf@plt>
  40e1d7:	mov    edi,0x1
  40e1dc:	call   403ba0 <exit@plt>
  40e1e1:	mov    eax,DWORD PTR [rbp-0xc]
  40e1e4:	cdqe   
  40e1e6:	lea    rdx,[rax*8+0x0]
  40e1ee:	mov    rax,QWORD PTR [rbp-0x20]
  40e1f2:	add    rax,rdx
  40e1f5:	mov    rax,QWORD PTR [rax]
  40e1f8:	lea    rsi,[rip+0x2c43]        # 410e42 <_IO_stdin_used@@Base+0x1e42>
  40e1ff:	mov    rdi,rax
  40e202:	call   403910 <strcmp@plt>
  40e207:	test   eax,eax
  40e209:	jne    40e244 <main@@Base+0x1df>
  40e20b:	mov    rax,0x4144dc
  40e212:	mov    DWORD PTR [rax],0x0
  40e218:	inc    DWORD PTR [rbp-0xc]
  40e21b:	mov    eax,DWORD PTR [rbp-0xc]
  40e21e:	cdqe   
  40e220:	lea    rdx,[rax*8+0x0]
  40e228:	mov    rax,QWORD PTR [rbp-0x20]
  40e22c:	add    rdx,rax
  40e22f:	mov    eax,DWORD PTR [rbp-0x14]
  40e232:	sub    eax,DWORD PTR [rbp-0xc]
  40e235:	mov    rsi,rdx
  40e238:	mov    edi,eax
  40e23a:	call   40c446 <handle_coda_error@@Base+0x53>
  40e23f:	jmp    40e404 <main@@Base+0x39f>
  40e244:	mov    eax,DWORD PTR [rbp-0xc]
  40e247:	cdqe   
  40e249:	lea    rdx,[rax*8+0x0]
  40e251:	mov    rax,QWORD PTR [rbp-0x20]
  40e255:	add    rax,rdx
  40e258:	mov    rax,QWORD PTR [rax]
  40e25b:	lea    rsi,[rip+0x2be5]        # 410e47 <_IO_stdin_used@@Base+0x1e47>
  40e262:	mov    rdi,rax
  40e265:	call   403910 <strcmp@plt>
  40e26a:	test   eax,eax
  40e26c:	jne    40e2a7 <main@@Base+0x242>
  40e26e:	mov    rax,0x4144dc
  40e275:	mov    DWORD PTR [rax],0x1
  40e27b:	inc    DWORD PTR [rbp-0xc]
  40e27e:	mov    eax,DWORD PTR [rbp-0xc]
  40e281:	cdqe   
  40e283:	lea    rdx,[rax*8+0x0]
  40e28b:	mov    rax,QWORD PTR [rbp-0x20]
  40e28f:	add    rdx,rax
  40e292:	mov    eax,DWORD PTR [rbp-0x14]
  40e295:	sub    eax,DWORD PTR [rbp-0xc]
  40e298:	mov    rsi,rdx
  40e29b:	mov    edi,eax
  40e29d:	call   40c9c7 <handle_coda_error@@Base+0x5d4>
  40e2a2:	jmp    40e404 <main@@Base+0x39f>
  40e2a7:	mov    eax,DWORD PTR [rbp-0xc]
  40e2aa:	cdqe   
  40e2ac:	lea    rdx,[rax*8+0x0]
  40e2b4:	mov    rax,QWORD PTR [rbp-0x20]
  40e2b8:	add    rax,rdx
  40e2bb:	mov    rax,QWORD PTR [rax]
  40e2be:	lea    rsi,[rip+0x2b88]        # 410e4d <_IO_stdin_used@@Base+0x1e4d>
  40e2c5:	mov    rdi,rax
  40e2c8:	call   403910 <strcmp@plt>
  40e2cd:	test   eax,eax
  40e2cf:	jne    40e30a <main@@Base+0x2a5>
  40e2d1:	mov    rax,0x4144dc
  40e2d8:	mov    DWORD PTR [rax],0x3
  40e2de:	inc    DWORD PTR [rbp-0xc]
  40e2e1:	mov    eax,DWORD PTR [rbp-0xc]
  40e2e4:	cdqe   
  40e2e6:	lea    rdx,[rax*8+0x0]
  40e2ee:	mov    rax,QWORD PTR [rbp-0x20]
  40e2f2:	add    rdx,rax
  40e2f5:	mov    eax,DWORD PTR [rbp-0x14]
  40e2f8:	sub    eax,DWORD PTR [rbp-0xc]
  40e2fb:	mov    rsi,rdx
  40e2fe:	mov    edi,eax
  40e300:	call   40d149 <handle_coda_error@@Base+0xd56>
  40e305:	jmp    40e404 <main@@Base+0x39f>
  40e30a:	mov    eax,DWORD PTR [rbp-0xc]
  40e30d:	cdqe   
  40e30f:	lea    rdx,[rax*8+0x0]
  40e317:	mov    rax,QWORD PTR [rbp-0x20]
  40e31b:	add    rax,rdx
  40e31e:	mov    rax,QWORD PTR [rax]
  40e321:	lea    rsi,[rip+0x2b2a]        # 410e52 <_IO_stdin_used@@Base+0x1e52>
  40e328:	mov    rdi,rax
  40e32b:	call   403910 <strcmp@plt>
  40e330:	test   eax,eax
  40e332:	jne    40e36d <main@@Base+0x308>
  40e334:	mov    rax,0x4144dc
  40e33b:	mov    DWORD PTR [rax],0x4
  40e341:	inc    DWORD PTR [rbp-0xc]
  40e344:	mov    eax,DWORD PTR [rbp-0xc]
  40e347:	cdqe   
  40e349:	lea    rdx,[rax*8+0x0]
  40e351:	mov    rax,QWORD PTR [rbp-0x20]
  40e355:	add    rdx,rax
  40e358:	mov    eax,DWORD PTR [rbp-0x14]
  40e35b:	sub    eax,DWORD PTR [rbp-0xc]
  40e35e:	mov    rsi,rdx
  40e361:	mov    edi,eax
  40e363:	call   40d5f5 <handle_coda_error@@Base+0x1202>
  40e368:	jmp    40e404 <main@@Base+0x39f>
  40e36d:	mov    eax,DWORD PTR [rbp-0xc]
  40e370:	cdqe   
  40e372:	lea    rdx,[rax*8+0x0]
  40e37a:	mov    rax,QWORD PTR [rbp-0x20]
  40e37e:	add    rax,rdx
  40e381:	mov    rax,QWORD PTR [rax]
  40e384:	lea    rsi,[rip+0x2acc]        # 410e57 <_IO_stdin_used@@Base+0x1e57>
  40e38b:	mov    rdi,rax
  40e38e:	call   403910 <strcmp@plt>
  40e393:	test   eax,eax
  40e395:	jne    40e3cd <main@@Base+0x368>
  40e397:	mov    rax,0x4144dc
  40e39e:	mov    DWORD PTR [rax],0x5
  40e3a4:	inc    DWORD PTR [rbp-0xc]
  40e3a7:	mov    eax,DWORD PTR [rbp-0xc]
  40e3aa:	cdqe   
  40e3ac:	lea    rdx,[rax*8+0x0]
  40e3b4:	mov    rax,QWORD PTR [rbp-0x20]
  40e3b8:	add    rdx,rax
  40e3bb:	mov    eax,DWORD PTR [rbp-0x14]
  40e3be:	sub    eax,DWORD PTR [rbp-0xc]
  40e3c1:	mov    rsi,rdx
  40e3c4:	mov    edi,eax
  40e3c6:	call   40daa1 <handle_coda_error@@Base+0x16ae>
  40e3cb:	jmp    40e404 <main@@Base+0x39f>
  40e3cd:	mov    rax,QWORD PTR [rip+0x4c24]        # 412ff8 <stderr@GLIBC_2.2.5>
  40e3d4:	mov    rax,QWORD PTR [rax]
  40e3d7:	mov    rcx,rax
  40e3da:	mov    edx,0x19
  40e3df:	mov    esi,0x1
  40e3e4:	lea    rdi,[rip+0x2928]        # 410d13 <_IO_stdin_used@@Base+0x1d13>
  40e3eb:	call   403bc0 <fwrite@plt>
  40e3f0:	mov    eax,0x0
  40e3f5:	call   40be70 <print_yaml_data@@Base+0x199>
  40e3fa:	mov    edi,0x1
  40e3ff:	call   403ba0 <exit@plt>
  40e404:	mov    eax,0x0
  40e409:	leave  
  40e40a:	ret    
  40e40b:	nop    DWORD PTR [rax+rax*1+0x0]

000000000040e410 <__libc_csu_init@@Base>:
  40e410:	endbr64 
  40e414:	push   r15
  40e416:	lea    r15,[rip+0x49b3]        # 412dd0 <_IO_stdin_used@@Base+0x3dd0>
  40e41d:	push   r14
  40e41f:	mov    r14,rdx
  40e422:	push   r13
  40e424:	mov    r13,rsi
  40e427:	push   r12
  40e429:	mov    r12d,edi
  40e42c:	push   rbp
  40e42d:	lea    rbp,[rip+0x49a4]        # 412dd8 <_IO_stdin_used@@Base+0x3dd8>
  40e434:	push   rbx
  40e435:	sub    rbp,r15
  40e438:	sub    rsp,0x8
  40e43c:	call   403000 <coda_cursor_get_byte_size@plt-0x640>
  40e441:	sar    rbp,0x3
  40e445:	je     40e466 <__libc_csu_init@@Base+0x56>
  40e447:	xor    ebx,ebx
  40e449:	nop    DWORD PTR [rax+0x0]
  40e450:	mov    rdx,r14
  40e453:	mov    rsi,r13
  40e456:	mov    edi,r12d
  40e459:	call   QWORD PTR [r15+rbx*8]
  40e45d:	add    rbx,0x1
  40e461:	cmp    rbp,rbx
  40e464:	jne    40e450 <__libc_csu_init@@Base+0x40>
  40e466:	add    rsp,0x8
  40e46a:	pop    rbx
  40e46b:	pop    rbp
  40e46c:	pop    r12
  40e46e:	pop    r13
  40e470:	pop    r14
  40e472:	pop    r15
  40e474:	ret    
  40e475:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

000000000040e480 <__libc_csu_fini@@Base>:
  40e480:	endbr64 
  40e484:	ret    

Disassembly of section .fini:

000000000040e488 <.fini>:
  40e488:	endbr64 
  40e48c:	sub    rsp,0x8
  40e490:	add    rsp,0x8
  40e494:	ret    
