
../repos/tbeu-matio-3dd266d/test/.libs/test_mat:     file format elf64-x86-64


Disassembly of section .init:

0000000000402000 <.init>:
  402000:	endbr64 
  402004:	sub    rsp,0x8
  402008:	mov    rax,QWORD PTR [rip+0x12fd9]        # 414fe8 <__gmon_start__>
  40200f:	test   rax,rax
  402012:	je     402016 <Mat_VarGetNumberOfFields@plt-0x1a>
  402014:	call   rax
  402016:	add    rsp,0x8
  40201a:	ret    

Disassembly of section .plt:

0000000000402020 <Mat_VarGetNumberOfFields@plt-0x10>:
  402020:	push   QWORD PTR [rip+0x12fe2]        # 415008 <getopt_long_only@@Base+0x7ea8>
  402026:	jmp    QWORD PTR [rip+0x12fe4]        # 415010 <getopt_long_only@@Base+0x7eb0>
  40202c:	nop    DWORD PTR [rax+0x0]

0000000000402030 <Mat_VarGetNumberOfFields@plt>:
  402030:	jmp    QWORD PTR [rip+0x12fe2]        # 415018 <Mat_VarGetNumberOfFields>
  402036:	push   0x0
  40203b:	jmp    402020 <Mat_VarGetNumberOfFields@plt-0x10>

0000000000402040 <getenv@plt>:
  402040:	jmp    QWORD PTR [rip+0x12fda]        # 415020 <getenv@GLIBC_2.2.5>
  402046:	push   0x1
  40204b:	jmp    402020 <Mat_VarGetNumberOfFields@plt-0x10>

0000000000402050 <free@plt>:
  402050:	jmp    QWORD PTR [rip+0x12fd2]        # 415028 <free@GLIBC_2.2.5>
  402056:	push   0x2
  40205b:	jmp    402020 <Mat_VarGetNumberOfFields@plt-0x10>

0000000000402060 <putchar@plt>:
  402060:	jmp    QWORD PTR [rip+0x12fca]        # 415030 <putchar@GLIBC_2.2.5>
  402066:	push   0x3
  40206b:	jmp    402020 <Mat_VarGetNumberOfFields@plt-0x10>

0000000000402070 <Mat_VarReadNext@plt>:
  402070:	jmp    QWORD PTR [rip+0x12fc2]        # 415038 <Mat_VarReadNext>
  402076:	push   0x4
  40207b:	jmp    402020 <Mat_VarGetNumberOfFields@plt-0x10>

0000000000402080 <Mat_Open@plt>:
  402080:	jmp    QWORD PTR [rip+0x12fba]        # 415040 <Mat_Open>
  402086:	push   0x5
  40208b:	jmp    402020 <Mat_VarGetNumberOfFields@plt-0x10>

0000000000402090 <strncmp@plt>:
  402090:	jmp    QWORD PTR [rip+0x12fb2]        # 415048 <strncmp@GLIBC_2.2.5>
  402096:	push   0x6
  40209b:	jmp    402020 <Mat_VarGetNumberOfFields@plt-0x10>

00000000004020a0 <Mat_VarGetCells@plt>:
  4020a0:	jmp    QWORD PTR [rip+0x12faa]        # 415050 <Mat_VarGetCells>
  4020a6:	push   0x7
  4020ab:	jmp    402020 <Mat_VarGetNumberOfFields@plt-0x10>

00000000004020b0 <Mat_VarAddStructField@plt>:
  4020b0:	jmp    QWORD PTR [rip+0x12fa2]        # 415058 <Mat_VarAddStructField>
  4020b6:	push   0x8
  4020bb:	jmp    402020 <Mat_VarGetNumberOfFields@plt-0x10>

00000000004020c0 <puts@plt>:
  4020c0:	jmp    QWORD PTR [rip+0x12f9a]        # 415060 <puts@GLIBC_2.2.5>
  4020c6:	push   0x9
  4020cb:	jmp    402020 <Mat_VarGetNumberOfFields@plt-0x10>

00000000004020d0 <Mat_VarCreate@plt>:
  4020d0:	jmp    QWORD PTR [rip+0x12f92]        # 415068 <Mat_VarCreate>
  4020d6:	push   0xa
  4020db:	jmp    402020 <Mat_VarGetNumberOfFields@plt-0x10>

00000000004020e0 <Mat_GetFilename@plt>:
  4020e0:	jmp    QWORD PTR [rip+0x12f8a]        # 415070 <Mat_GetFilename>
  4020e6:	push   0xb
  4020eb:	jmp    402020 <Mat_VarGetNumberOfFields@plt-0x10>

00000000004020f0 <Mat_VarWrite@plt>:
  4020f0:	jmp    QWORD PTR [rip+0x12f82]        # 415078 <Mat_VarWrite>
  4020f6:	push   0xc
  4020fb:	jmp    402020 <Mat_VarGetNumberOfFields@plt-0x10>

0000000000402100 <Mat_GetVersion@plt>:
  402100:	jmp    QWORD PTR [rip+0x12f7a]        # 415080 <Mat_GetVersion>
  402106:	push   0xd
  40210b:	jmp    402020 <Mat_VarGetNumberOfFields@plt-0x10>

0000000000402110 <Mat_Message@plt>:
  402110:	jmp    QWORD PTR [rip+0x12f72]        # 415088 <Mat_Message>
  402116:	push   0xe
  40211b:	jmp    402020 <Mat_VarGetNumberOfFields@plt-0x10>

0000000000402120 <strlen@plt>:
  402120:	jmp    QWORD PTR [rip+0x12f6a]        # 415090 <strlen@GLIBC_2.2.5>
  402126:	push   0xf
  40212b:	jmp    402020 <Mat_VarGetNumberOfFields@plt-0x10>

0000000000402130 <Mat_VarReadData@plt>:
  402130:	jmp    QWORD PTR [rip+0x12f62]        # 415098 <Mat_VarReadData>
  402136:	push   0x10
  40213b:	jmp    402020 <Mat_VarGetNumberOfFields@plt-0x10>

0000000000402140 <Mat_VarWriteAppend@plt>:
  402140:	jmp    QWORD PTR [rip+0x12f5a]        # 4150a0 <Mat_VarWriteAppend>
  402146:	push   0x11
  40214b:	jmp    402020 <Mat_VarGetNumberOfFields@plt-0x10>

0000000000402150 <strchr@plt>:
  402150:	jmp    QWORD PTR [rip+0x12f52]        # 4150a8 <strchr@GLIBC_2.2.5>
  402156:	push   0x12
  40215b:	jmp    402020 <Mat_VarGetNumberOfFields@plt-0x10>

0000000000402160 <printf@plt>:
  402160:	jmp    QWORD PTR [rip+0x12f4a]        # 4150b0 <printf@GLIBC_2.2.5>
  402166:	push   0x13
  40216b:	jmp    402020 <Mat_VarGetNumberOfFields@plt-0x10>

0000000000402170 <warnx@plt>:
  402170:	jmp    QWORD PTR [rip+0x12f42]        # 4150b8 <warnx@GLIBC_2.2.5>
  402176:	push   0x14
  40217b:	jmp    402020 <Mat_VarGetNumberOfFields@plt-0x10>

0000000000402180 <Mat_VarReadInfo@plt>:
  402180:	jmp    QWORD PTR [rip+0x12f3a]        # 4150c0 <Mat_VarReadInfo>
  402186:	push   0x15
  40218b:	jmp    402020 <Mat_VarGetNumberOfFields@plt-0x10>

0000000000402190 <Mat_LogInit@plt>:
  402190:	jmp    QWORD PTR [rip+0x12f32]        # 4150c8 <Mat_LogInit>
  402196:	push   0x16
  40219b:	jmp    402020 <Mat_VarGetNumberOfFields@plt-0x10>

00000000004021a0 <Mat_VarSetCell@plt>:
  4021a0:	jmp    QWORD PTR [rip+0x12f2a]        # 4150d0 <Mat_VarSetCell>
  4021a6:	push   0x17
  4021ab:	jmp    402020 <Mat_VarGetNumberOfFields@plt-0x10>

00000000004021b0 <memset@plt>:
  4021b0:	jmp    QWORD PTR [rip+0x12f22]        # 4150d8 <memset@GLIBC_2.2.5>
  4021b6:	push   0x18
  4021bb:	jmp    402020 <Mat_VarGetNumberOfFields@plt-0x10>

00000000004021c0 <freopen@plt>:
  4021c0:	jmp    QWORD PTR [rip+0x12f1a]        # 4150e0 <freopen@GLIBC_2.2.5>
  4021c6:	push   0x19
  4021cb:	jmp    402020 <Mat_VarGetNumberOfFields@plt-0x10>

00000000004021d0 <Mat_CalcSubscripts2@plt>:
  4021d0:	jmp    QWORD PTR [rip+0x12f12]        # 4150e8 <Mat_CalcSubscripts2>
  4021d6:	push   0x1a
  4021db:	jmp    402020 <Mat_VarGetNumberOfFields@plt-0x10>

00000000004021e0 <Mat_VarGetStructFieldnames@plt>:
  4021e0:	jmp    QWORD PTR [rip+0x12f0a]        # 4150f0 <Mat_VarGetStructFieldnames>
  4021e6:	push   0x1b
  4021eb:	jmp    402020 <Mat_VarGetNumberOfFields@plt-0x10>

00000000004021f0 <Mat_CalcSingleSubscript2@plt>:
  4021f0:	jmp    QWORD PTR [rip+0x12f02]        # 4150f8 <Mat_CalcSingleSubscript2>
  4021f6:	push   0x1c
  4021fb:	jmp    402020 <Mat_VarGetNumberOfFields@plt-0x10>

0000000000402200 <Mat_VarGetStructField@plt>:
  402200:	jmp    QWORD PTR [rip+0x12efa]        # 415100 <Mat_VarGetStructField>
  402206:	push   0x1d
  40220b:	jmp    402020 <Mat_VarGetNumberOfFields@plt-0x10>

0000000000402210 <strcmp@plt>:
  402210:	jmp    QWORD PTR [rip+0x12ef2]        # 415108 <strcmp@GLIBC_2.2.5>
  402216:	push   0x1e
  40221b:	jmp    402020 <Mat_VarGetNumberOfFields@plt-0x10>

0000000000402220 <fprintf@plt>:
  402220:	jmp    QWORD PTR [rip+0x12eea]        # 415110 <fprintf@GLIBC_2.2.5>
  402226:	push   0x1f
  40222b:	jmp    402020 <Mat_VarGetNumberOfFields@plt-0x10>

0000000000402230 <strtol@plt>:
  402230:	jmp    QWORD PTR [rip+0x12ee2]        # 415118 <strtol@GLIBC_2.2.5>
  402236:	push   0x20
  40223b:	jmp    402020 <Mat_VarGetNumberOfFields@plt-0x10>

0000000000402240 <Mat_VarFree@plt>:
  402240:	jmp    QWORD PTR [rip+0x12eda]        # 415120 <Mat_VarFree>
  402246:	push   0x21
  40224b:	jmp    402020 <Mat_VarGetNumberOfFields@plt-0x10>

0000000000402250 <Mat_GetDir@plt>:
  402250:	jmp    QWORD PTR [rip+0x12ed2]        # 415128 <Mat_GetDir>
  402256:	push   0x22
  40225b:	jmp    402020 <Mat_VarGetNumberOfFields@plt-0x10>

0000000000402260 <Mat_GetLibraryVersion@plt>:
  402260:	jmp    QWORD PTR [rip+0x12eca]        # 415130 <Mat_GetLibraryVersion>
  402266:	push   0x23
  40226b:	jmp    402020 <Mat_VarGetNumberOfFields@plt-0x10>

0000000000402270 <Mat_VarPrint@plt>:
  402270:	jmp    QWORD PTR [rip+0x12ec2]        # 415138 <Mat_VarPrint>
  402276:	push   0x24
  40227b:	jmp    402020 <Mat_VarGetNumberOfFields@plt-0x10>

0000000000402280 <__isoc99_sscanf@plt>:
  402280:	jmp    QWORD PTR [rip+0x12eba]        # 415140 <__isoc99_sscanf@GLIBC_2.7>
  402286:	push   0x25
  40228b:	jmp    402020 <Mat_VarGetNumberOfFields@plt-0x10>

0000000000402290 <Mat_VarGetStructs@plt>:
  402290:	jmp    QWORD PTR [rip+0x12eb2]        # 415148 <Mat_VarGetStructs>
  402296:	push   0x26
  40229b:	jmp    402020 <Mat_VarGetNumberOfFields@plt-0x10>

00000000004022a0 <Mat_Close@plt>:
  4022a0:	jmp    QWORD PTR [rip+0x12eaa]        # 415150 <Mat_Close>
  4022a6:	push   0x27
  4022ab:	jmp    402020 <Mat_VarGetNumberOfFields@plt-0x10>

00000000004022b0 <Mat_Critical@plt>:
  4022b0:	jmp    QWORD PTR [rip+0x12ea2]        # 415158 <Mat_Critical>
  4022b6:	push   0x28
  4022bb:	jmp    402020 <Mat_VarGetNumberOfFields@plt-0x10>

00000000004022c0 <Mat_VarDelete@plt>:
  4022c0:	jmp    QWORD PTR [rip+0x12e9a]        # 415160 <Mat_VarDelete>
  4022c6:	push   0x29
  4022cb:	jmp    402020 <Mat_VarGetNumberOfFields@plt-0x10>

00000000004022d0 <realloc@plt>:
  4022d0:	jmp    QWORD PTR [rip+0x12e92]        # 415168 <realloc@GLIBC_2.2.5>
  4022d6:	push   0x2a
  4022db:	jmp    402020 <Mat_VarGetNumberOfFields@plt-0x10>

00000000004022e0 <Mat_VarGetStructsLinear@plt>:
  4022e0:	jmp    QWORD PTR [rip+0x12e8a]        # 415170 <Mat_VarGetStructsLinear>
  4022e6:	push   0x2b
  4022eb:	jmp    402020 <Mat_VarGetNumberOfFields@plt-0x10>

00000000004022f0 <Mat_GetHeader@plt>:
  4022f0:	jmp    QWORD PTR [rip+0x12e82]        # 415178 <Mat_GetHeader>
  4022f6:	push   0x2c
  4022fb:	jmp    402020 <Mat_VarGetNumberOfFields@plt-0x10>

0000000000402300 <Mat_VarCreateStruct@plt>:
  402300:	jmp    QWORD PTR [rip+0x12e7a]        # 415180 <Mat_VarCreateStruct>
  402306:	push   0x2d
  40230b:	jmp    402020 <Mat_VarGetNumberOfFields@plt-0x10>

0000000000402310 <Mat_CreateVer@plt>:
  402310:	jmp    QWORD PTR [rip+0x12e72]        # 415188 <Mat_CreateVer>
  402316:	push   0x2e
  40231b:	jmp    402020 <Mat_VarGetNumberOfFields@plt-0x10>

0000000000402320 <Mat_VarGetCellsLinear@plt>:
  402320:	jmp    QWORD PTR [rip+0x12e6a]        # 415190 <Mat_VarGetCellsLinear>
  402326:	push   0x2f
  40232b:	jmp    402020 <Mat_VarGetNumberOfFields@plt-0x10>

0000000000402330 <Mat_Help@plt>:
  402330:	jmp    QWORD PTR [rip+0x12e62]        # 415198 <Mat_Help>
  402336:	push   0x30
  40233b:	jmp    402020 <Mat_VarGetNumberOfFields@plt-0x10>

0000000000402340 <exit@plt>:
  402340:	jmp    QWORD PTR [rip+0x12e5a]        # 4151a0 <exit@GLIBC_2.2.5>
  402346:	push   0x31
  40234b:	jmp    402020 <Mat_VarGetNumberOfFields@plt-0x10>

0000000000402350 <fwrite@plt>:
  402350:	jmp    QWORD PTR [rip+0x12e52]        # 4151a8 <fwrite@GLIBC_2.2.5>
  402356:	push   0x32
  40235b:	jmp    402020 <Mat_VarGetNumberOfFields@plt-0x10>

0000000000402360 <Mat_VarDuplicate@plt>:
  402360:	jmp    QWORD PTR [rip+0x12e4a]        # 4151b0 <Mat_VarDuplicate>
  402366:	push   0x33
  40236b:	jmp    402020 <Mat_VarGetNumberOfFields@plt-0x10>

0000000000402370 <Mat_VarSetStructFieldByName@plt>:
  402370:	jmp    QWORD PTR [rip+0x12e42]        # 4151b8 <Mat_VarSetStructFieldByName>
  402376:	push   0x34
  40237b:	jmp    402020 <Mat_VarGetNumberOfFields@plt-0x10>

0000000000402380 <Mat_VarSetStructFieldByIndex@plt>:
  402380:	jmp    QWORD PTR [rip+0x12e3a]        # 4151c0 <Mat_VarSetStructFieldByIndex>
  402386:	push   0x35
  40238b:	jmp    402020 <Mat_VarGetNumberOfFields@plt-0x10>

0000000000402390 <Mat_VarRead@plt>:
  402390:	jmp    QWORD PTR [rip+0x12e32]        # 4151c8 <Mat_VarRead>
  402396:	push   0x36
  40239b:	jmp    402020 <Mat_VarGetNumberOfFields@plt-0x10>

Disassembly of section .text:

00000000004023a0 <getopt@@Base-0xa380>:
  4023a0:	endbr64 
  4023a4:	xor    ebp,ebp
  4023a6:	mov    r9,rdx
  4023a9:	pop    rsi
  4023aa:	mov    rdx,rsp
  4023ad:	and    rsp,0xfffffffffffffff0
  4023b1:	push   rax
  4023b2:	push   rsp
  4023b3:	mov    r8,0x40d5a0
  4023ba:	mov    rcx,0x40d530
  4023c1:	mov    rdi,0x402490
  4023c8:	call   QWORD PTR [rip+0x12c12]        # 414fe0 <getopt_long_only@@Base+0x7e80>
  4023ce:	hlt    
  4023cf:	nop
  4023d0:	endbr64 
  4023d4:	ret    
  4023d5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4023df:	nop
  4023e0:	mov    eax,0x416458
  4023e5:	cmp    rax,0x416458
  4023eb:	je     402400 <Mat_VarRead@plt+0x70>
  4023ed:	mov    eax,0x0
  4023f2:	test   rax,rax
  4023f5:	je     402400 <Mat_VarRead@plt+0x70>
  4023f7:	mov    edi,0x416458
  4023fc:	jmp    rax
  4023fe:	xchg   ax,ax
  402400:	ret    
  402401:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40240c:	nop    DWORD PTR [rax+0x0]
  402410:	mov    esi,0x416458
  402415:	sub    rsi,0x416458
  40241c:	mov    rax,rsi
  40241f:	shr    rsi,0x3f
  402423:	sar    rax,0x3
  402427:	add    rsi,rax
  40242a:	sar    rsi,1
  40242d:	je     402440 <Mat_VarRead@plt+0xb0>
  40242f:	mov    eax,0x0
  402434:	test   rax,rax
  402437:	je     402440 <Mat_VarRead@plt+0xb0>
  402439:	mov    edi,0x416458
  40243e:	jmp    rax
  402440:	ret    
  402441:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40244c:	nop    DWORD PTR [rax+0x0]
  402450:	endbr64 
  402454:	cmp    BYTE PTR [rip+0x13ffd],0x0        # 416458 <optopt@@Base+0x20>
  40245b:	jne    402470 <Mat_VarRead@plt+0xe0>
  40245d:	push   rbp
  40245e:	mov    rbp,rsp
  402461:	call   4023e0 <Mat_VarRead@plt+0x50>
  402466:	mov    BYTE PTR [rip+0x13feb],0x1        # 416458 <optopt@@Base+0x20>
  40246d:	pop    rbp
  40246e:	ret    
  40246f:	nop
  402470:	ret    
  402471:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40247c:	nop    DWORD PTR [rax+0x0]
  402480:	endbr64 
  402484:	jmp    402410 <Mat_VarRead@plt+0x80>
  402486:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402490:	push   rbp
  402491:	mov    rbp,rsp
  402494:	push   r15
  402496:	push   r14
  402498:	push   r13
  40249a:	push   r12
  40249c:	push   rbx
  40249d:	and    rsp,0xffffffffffffffe0
  4024a1:	sub    rsp,0x2820
  4024a8:	mov    rbx,rsi
  4024ab:	mov    DWORD PTR [rsp+0x128],edi
  4024b2:	mov    DWORD PTR [rsp+0x12c],0x0
  4024bd:	lea    rsi,[rsp+0x338]
  4024c5:	lea    rdx,[rsp+0x33c]
  4024cd:	lea    rdi,[rsp+0x334]
  4024d5:	call   402260 <Mat_GetLibraryVersion@plt>
  4024da:	cmp    DWORD PTR [rsp+0x334],0x1
  4024e2:	jne    40c201 <Mat_VarRead@plt+0x9e71>
  4024e8:	cmp    DWORD PTR [rsp+0x338],0x5
  4024f0:	jne    40c201 <Mat_VarRead@plt+0x9e71>
  4024f6:	cmp    DWORD PTR [rsp+0x33c],0xf
  4024fe:	jne    40c201 <Mat_VarRead@plt+0x9e71>
  402504:	mov    QWORD PTR [rsp+0x30],rbx
  402509:	lea    rdi,[rip+0xc998]        # 40eea8 <getopt_long_only@@Base+0x1d48>
  402510:	call   402190 <Mat_LogInit@plt>
  402515:	mov    eax,0x6
  40251a:	mov    QWORD PTR [rsp+0xa8],rax
  402522:	lea    r14,[rip+0xce1e]        # 40f347 <getopt_long_only@@Base+0x21e7>
  402529:	lea    r15,[rip+0x12cb0]        # 4151e0 <getopt_long_only@@Base+0x8080>
  402530:	lea    r12,[rip+0xbe69]        # 40e3a0 <getopt_long_only@@Base+0x1240>
  402537:	xor    eax,eax
  402539:	jmp    40254a <Mat_VarRead@plt+0x1ba>
  40253b:	nop    DWORD PTR [rax+rax*1+0x0]
  402540:	lea    rax,[rip+0x13f21]        # 416468 <optarg@@Base>
  402547:	mov    rax,QWORD PTR [rax]
  40254a:	mov    QWORD PTR [rsp+0x28],rax
  40254f:	jmp    402570 <Mat_VarRead@plt+0x1e0>
  402551:	xor    eax,eax
  402553:	lea    rdi,[rip+0xca62]        # 40efbc <getopt_long_only@@Base+0x1e5c>
  40255a:	mov    esi,ecx
  40255c:	call   402160 <printf@plt>
  402561:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40256b:	nop    DWORD PTR [rax+rax*1+0x0]
  402570:	xor    r8d,r8d
  402573:	mov    edi,DWORD PTR [rsp+0x128]
  40257a:	mov    rbx,QWORD PTR [rsp+0x30]
  40257f:	mov    rsi,rbx
  402582:	mov    rdx,r14
  402585:	mov    rcx,r15
  402588:	call   40d150 <getopt_long@@Base>
  40258d:	mov    ecx,eax
  40258f:	lea    eax,[rcx-0x3f]
  402592:	cmp    eax,0x3b
  402595:	ja     4025d0 <Mat_VarRead@plt+0x240>
  402597:	movsxd rax,DWORD PTR [r12+rax*4]
  40259b:	add    rax,r12
  40259e:	jmp    rax
  4025a0:	lea    rax,[rip+0x13ec1]        # 416468 <optarg@@Base>
  4025a7:	mov    rdi,QWORD PTR [rax]
  4025aa:	xor    eax,eax
  4025ac:	lea    rsi,[rip+0xc936]        # 40eee9 <getopt_long_only@@Base+0x1d89>
  4025b3:	lea    rdx,[rsp+0x12c]
  4025bb:	call   402280 <__isoc99_sscanf@plt>
  4025c0:	cmp    eax,0x1
  4025c3:	je     402570 <Mat_VarRead@plt+0x1e0>
  4025c5:	jmp    40c2a7 <Mat_VarRead@plt+0x9f17>
  4025ca:	nop    WORD PTR [rax+rax*1+0x0]
  4025d0:	cmp    ecx,0xffffffff
  4025d3:	jne    402551 <Mat_VarRead@plt+0x1c1>
  4025d9:	jmp    4027d5 <Mat_VarRead@plt+0x445>
  4025de:	lea    rax,[rip+0x13e83]        # 416468 <optarg@@Base>
  4025e5:	mov    r13,QWORD PTR [rax]
  4025e8:	mov    rdi,r13
  4025eb:	lea    rsi,[rip+0xc8fa]        # 40eeec <getopt_long_only@@Base+0x1d8c>
  4025f2:	call   402210 <strcmp@plt>
  4025f7:	mov    ecx,0x6
  4025fc:	mov    QWORD PTR [rsp+0xa8],rcx
  402604:	test   eax,eax
  402606:	je     402570 <Mat_VarRead@plt+0x1e0>
  40260c:	mov    rdi,r13
  40260f:	lea    rsi,[rip+0xc8dd]        # 40eef3 <getopt_long_only@@Base+0x1d93>
  402616:	call   402210 <strcmp@plt>
  40261b:	mov    ecx,0x7
  402620:	mov    QWORD PTR [rsp+0xa8],rcx
  402628:	test   eax,eax
  40262a:	je     402570 <Mat_VarRead@plt+0x1e0>
  402630:	mov    rdi,r13
  402633:	lea    rsi,[rip+0xc8c1]        # 40eefb <getopt_long_only@@Base+0x1d9b>
  40263a:	call   402210 <strcmp@plt>
  40263f:	mov    ecx,0xe
  402644:	mov    QWORD PTR [rsp+0xa8],rcx
  40264c:	test   eax,eax
  40264e:	je     402570 <Mat_VarRead@plt+0x1e0>
  402654:	mov    rdi,r13
  402657:	lea    rsi,[rip+0xc89c]        # 40eefa <getopt_long_only@@Base+0x1d9a>
  40265e:	call   402210 <strcmp@plt>
  402663:	mov    ecx,0xf
  402668:	mov    QWORD PTR [rsp+0xa8],rcx
  402670:	test   eax,eax
  402672:	je     402570 <Mat_VarRead@plt+0x1e0>
  402678:	mov    rdi,r13
  40267b:	lea    rsi,[rip+0xc880]        # 40ef02 <getopt_long_only@@Base+0x1da2>
  402682:	call   402210 <strcmp@plt>
  402687:	mov    ecx,0xc
  40268c:	mov    QWORD PTR [rsp+0xa8],rcx
  402694:	test   eax,eax
  402696:	je     402570 <Mat_VarRead@plt+0x1e0>
  40269c:	mov    rdi,r13
  40269f:	lea    rsi,[rip+0xc85b]        # 40ef01 <getopt_long_only@@Base+0x1da1>
  4026a6:	call   402210 <strcmp@plt>
  4026ab:	mov    ecx,0xd
  4026b0:	mov    QWORD PTR [rsp+0xa8],rcx
  4026b8:	test   eax,eax
  4026ba:	je     402570 <Mat_VarRead@plt+0x1e0>
  4026c0:	mov    rdi,r13
  4026c3:	lea    rsi,[rip+0xc83f]        # 40ef09 <getopt_long_only@@Base+0x1da9>
  4026ca:	call   402210 <strcmp@plt>
  4026cf:	mov    ecx,0xa
  4026d4:	mov    QWORD PTR [rsp+0xa8],rcx
  4026dc:	test   eax,eax
  4026de:	je     402570 <Mat_VarRead@plt+0x1e0>
  4026e4:	mov    rdi,r13
  4026e7:	lea    rsi,[rip+0xc81a]        # 40ef08 <getopt_long_only@@Base+0x1da8>
  4026ee:	call   402210 <strcmp@plt>
  4026f3:	mov    ecx,0xb
  4026f8:	mov    QWORD PTR [rsp+0xa8],rcx
  402700:	test   eax,eax
  402702:	je     402570 <Mat_VarRead@plt+0x1e0>
  402708:	mov    rdi,r13
  40270b:	lea    rsi,[rip+0xc7fe]        # 40ef10 <getopt_long_only@@Base+0x1db0>
  402712:	call   402210 <strcmp@plt>
  402717:	mov    ecx,0x8
  40271c:	mov    QWORD PTR [rsp+0xa8],rcx
  402724:	test   eax,eax
  402726:	je     402570 <Mat_VarRead@plt+0x1e0>
  40272c:	mov    rdi,r13
  40272f:	lea    rsi,[rip+0xc7d9]        # 40ef0f <getopt_long_only@@Base+0x1daf>
  402736:	call   402210 <strcmp@plt>
  40273b:	mov    ecx,0x9
  402740:	mov    QWORD PTR [rsp+0xa8],rcx
  402748:	test   eax,eax
  40274a:	je     402570 <Mat_VarRead@plt+0x1e0>
  402750:	jmp    40c2b1 <Mat_VarRead@plt+0x9f21>
  402755:	lea    rax,[rip+0x13d0c]        # 416468 <optarg@@Base>
  40275c:	mov    rbx,QWORD PTR [rax]
  40275f:	mov    rdi,rbx
  402762:	lea    rsi,[rip+0xc851]        # 40efba <getopt_long_only@@Base+0x1e5a>
  402769:	call   402210 <strcmp@plt>
  40276e:	test   eax,eax
  402770:	je     4027b7 <Mat_VarRead@plt+0x427>
  402772:	mov    rdi,rbx
  402775:	lea    rsi,[rip+0xc7be]        # 40ef3a <getopt_long_only@@Base+0x1dda>
  40277c:	call   402210 <strcmp@plt>
  402781:	test   eax,eax
  402783:	je     4027c6 <Mat_VarRead@plt+0x436>
  402785:	mov    rdi,rbx
  402788:	lea    rsi,[rip+0xc770]        # 40eeff <getopt_long_only@@Base+0x1d9f>
  40278f:	call   402210 <strcmp@plt>
  402794:	test   eax,eax
  402796:	jne    40c2c9 <Mat_VarRead@plt+0x9f39>
  40279c:	mov    DWORD PTR [rip+0x12b7a],0x10        # 415320 <getopt_long_only@@Base+0x81c0>
  4027a6:	jmp    402570 <Mat_VarRead@plt+0x1e0>
  4027ab:	mov    BYTE PTR [rip+0x13caa],0x1        # 41645c <optopt@@Base+0x24>
  4027b2:	jmp    402570 <Mat_VarRead@plt+0x1e0>
  4027b7:	mov    DWORD PTR [rip+0x12b5f],0x100        # 415320 <getopt_long_only@@Base+0x81c0>
  4027c1:	jmp    402570 <Mat_VarRead@plt+0x1e0>
  4027c6:	mov    DWORD PTR [rip+0x12b50],0x200        # 415320 <getopt_long_only@@Base+0x81c0>
  4027d0:	jmp    402570 <Mat_VarRead@plt+0x1e0>
  4027d5:	lea    rax,[rip+0x13c58]        # 416434 <optind@@Base>
  4027dc:	mov    r15d,DWORD PTR [rax]
  4027df:	mov    DWORD PTR [rsp+0x3c],0x0
  4027e7:	cmp    r15d,DWORD PTR [rsp+0x128]
  4027ef:	jge    40c229 <Mat_VarRead@plt+0x9e99>
  4027f5:	mov    rax,QWORD PTR [rsp+0xa8]
  4027fd:	mov    ecx,eax
  4027ff:	and    cl,0xf
  402802:	add    cl,0xfa
  402805:	mov    BYTE PTR [rsp+0x27],cl
  402809:	lea    eax,[rax-0x6]
  40280c:	mov    DWORD PTR [rsp+0x330],eax
  402813:	cdqe   
  402815:	mov    QWORD PTR [rsp+0xce0],rax
  40281d:	lea    r13,[rsp+0x440]
  402825:	vpbroadcastq ymm0,QWORD PTR [rip+0xbb42]        # 40e370 <getopt_long_only@@Base+0x1210>
  40282e:	vpbroadcastq ymm1,QWORD PTR [rip+0xbb41]        # 40e378 <getopt_long_only@@Base+0x1218>
  402837:	mov    DWORD PTR [rsp+0x3c],0x0
  40283f:	vmovdqa xmm2,XMMWORD PTR [rip+0xb929]        # 40e170 <getopt_long_only@@Base+0x1010>
  402847:	vbroadcasti128 ymm3,XMMWORD PTR [rip+0xb930]        # 40e180 <getopt_long_only@@Base+0x1020>
  402850:	vmovdqa YMMWORD PTR [rsp+0x1ca0],ymm3
  402859:	vpackusdw xmm2,xmm2,xmm0
  40285e:	vmovdqa XMMWORD PTR [rsp+0x1150],xmm2
  402867:	vpbroadcastq xmm2,xmm2
  40286c:	vmovdqa XMMWORD PTR [rsp+0x1140],xmm2
  402875:	vpbroadcastd xmm2,DWORD PTR [rip+0xb8e2]        # 40e160 <getopt_long_only@@Base+0x1000>
  40287e:	vmovdqa XMMWORD PTR [rsp+0x1130],xmm2
  402887:	vmovdqa YMMWORD PTR [rsp+0x1100],ymm0
  402890:	vmovdqa YMMWORD PTR [rsp+0x10e0],ymm1
  402899:	nop    DWORD PTR [rax+0x0]
  4028a0:	movsxd r12,r15d
  4028a3:	mov    r14,QWORD PTR [rbx+r12*8]
  4028a7:	mov    rdi,r14
  4028aa:	lea    rsi,[rip+0xda1c]        # 4102cd <getopt_long_only@@Base+0x316d>
  4028b1:	vzeroupper 
  4028b4:	call   402210 <strcmp@plt>
  4028b9:	test   eax,eax
  4028bb:	je     402d30 <Mat_VarRead@plt+0x9a0>
  4028c1:	mov    rdi,r14
  4028c4:	lea    rsi,[rip+0xda48]        # 410313 <getopt_long_only@@Base+0x31b3>
  4028cb:	call   402210 <strcmp@plt>
  4028d0:	test   eax,eax
  4028d2:	je     402e00 <Mat_VarRead@plt+0xa70>
  4028d8:	mov    rdi,r14
  4028db:	lea    rsi,[rip+0xda88]        # 41036a <getopt_long_only@@Base+0x320a>
  4028e2:	call   402210 <strcmp@plt>
  4028e7:	test   eax,eax
  4028e9:	je     402e46 <Mat_VarRead@plt+0xab6>
  4028ef:	mov    rdi,r14
  4028f2:	lea    rsi,[rip+0xe197]        # 410a90 <getopt_long_only@@Base+0x3930>
  4028f9:	call   402210 <strcmp@plt>
  4028fe:	test   eax,eax
  402900:	je     402f02 <Mat_VarRead@plt+0xb72>
  402906:	mov    rdi,r14
  402909:	lea    rsi,[rip+0xdc93]        # 4105a3 <getopt_long_only@@Base+0x3443>
  402910:	call   402210 <strcmp@plt>
  402915:	test   eax,eax
  402917:	je     4032d5 <Mat_VarRead@plt+0xf45>
  40291d:	mov    rdi,r14
  402920:	lea    rsi,[rip+0xdebd]        # 4107e4 <getopt_long_only@@Base+0x3684>
  402927:	call   402210 <strcmp@plt>
  40292c:	test   eax,eax
  40292e:	je     403656 <Mat_VarRead@plt+0x12c6>
  402934:	mov    rdi,r14
  402937:	lea    rsi,[rip+0xe6c9]        # 411007 <getopt_long_only@@Base+0x3ea7>
  40293e:	call   402210 <strcmp@plt>
  402943:	test   eax,eax
  402945:	je     403a9d <Mat_VarRead@plt+0x170d>
  40294b:	mov    rdi,r14
  40294e:	lea    rsi,[rip+0xe820]        # 411175 <getopt_long_only@@Base+0x4015>
  402955:	call   402210 <strcmp@plt>
  40295a:	test   eax,eax
  40295c:	je     403b68 <Mat_VarRead@plt+0x17d8>
  402962:	mov    rdi,r14
  402965:	lea    rsi,[rip+0xe932]        # 41129e <getopt_long_only@@Base+0x413e>
  40296c:	call   402210 <strcmp@plt>
  402971:	test   eax,eax
  402973:	je     403c31 <Mat_VarRead@plt+0x18a1>
  402979:	mov    rdi,r14
  40297c:	lea    rsi,[rip+0xc6f6]        # 40f079 <getopt_long_only@@Base+0x1f19>
  402983:	call   402210 <strcmp@plt>
  402988:	test   eax,eax
  40298a:	je     404075 <Mat_VarRead@plt+0x1ce5>
  402990:	mov    rdi,r14
  402993:	lea    rsi,[rip+0xf891]        # 41222b <getopt_long_only@@Base+0x50cb>
  40299a:	call   402210 <strcmp@plt>
  40299f:	test   eax,eax
  4029a1:	je     404391 <Mat_VarRead@plt+0x2001>
  4029a7:	mov    rdi,r14
  4029aa:	lea    rsi,[rip+0xf7f1]        # 4121a2 <getopt_long_only@@Base+0x5042>
  4029b1:	call   402210 <strcmp@plt>
  4029b6:	test   eax,eax
  4029b8:	je     404474 <Mat_VarRead@plt+0x20e4>
  4029be:	mov    rdi,r14
  4029c1:	lea    rsi,[rip+0xd9f5]        # 4103bd <getopt_long_only@@Base+0x325d>
  4029c8:	call   402210 <strcmp@plt>
  4029cd:	test   eax,eax
  4029cf:	je     404f13 <Mat_VarRead@plt+0x2b83>
  4029d5:	mov    rdi,r14
  4029d8:	lea    rsi,[rip+0xed7b]        # 41175a <getopt_long_only@@Base+0x45fa>
  4029df:	call   402210 <strcmp@plt>
  4029e4:	test   eax,eax
  4029e6:	je     405130 <Mat_VarRead@plt+0x2da0>
  4029ec:	mov    rdi,r14
  4029ef:	lea    rsi,[rip+0xeece]        # 4118c4 <getopt_long_only@@Base+0x4764>
  4029f6:	call   402210 <strcmp@plt>
  4029fb:	test   eax,eax
  4029fd:	je     405467 <Mat_VarRead@plt+0x30d7>
  402a03:	mov    rdi,r14
  402a06:	lea    rsi,[rip+0xe94a]        # 411357 <getopt_long_only@@Base+0x41f7>
  402a0d:	call   402210 <strcmp@plt>
  402a12:	test   eax,eax
  402a14:	je     40555d <Mat_VarRead@plt+0x31cd>
  402a1a:	mov    rdi,r14
  402a1d:	lea    rsi,[rip+0xeb90]        # 4115b4 <getopt_long_only@@Base+0x4454>
  402a24:	call   402210 <strcmp@plt>
  402a29:	test   eax,eax
  402a2b:	je     4057eb <Mat_VarRead@plt+0x345b>
  402a31:	mov    rdi,r14
  402a34:	lea    rsi,[rip+0xf00c]        # 411a47 <getopt_long_only@@Base+0x48e7>
  402a3b:	call   402210 <strcmp@plt>
  402a40:	test   eax,eax
  402a42:	je     405c1c <Mat_VarRead@plt+0x388c>
  402a48:	mov    rdi,r14
  402a4b:	lea    rsi,[rip+0xf4b0]        # 411f02 <getopt_long_only@@Base+0x4da2>
  402a52:	call   402210 <strcmp@plt>
  402a57:	test   eax,eax
  402a59:	je     405fa2 <Mat_VarRead@plt+0x3c12>
  402a5f:	mov    rdi,r14
  402a62:	lea    rsi,[rip+0xf227]        # 411c90 <getopt_long_only@@Base+0x4b30>
  402a69:	call   402210 <strcmp@plt>
  402a6e:	test   eax,eax
  402a70:	je     406231 <Mat_VarRead@plt+0x3ea1>
  402a76:	mov    rdi,r14
  402a79:	lea    rsi,[rip+0xf34c]        # 411dcc <getopt_long_only@@Base+0x4c6c>
  402a80:	call   402210 <strcmp@plt>
  402a85:	test   eax,eax
  402a87:	je     4064d7 <Mat_VarRead@plt+0x4147>
  402a8d:	mov    rdi,r14
  402a90:	lea    rsi,[rip+0xf518]        # 411faf <getopt_long_only@@Base+0x4e4f>
  402a97:	call   402210 <strcmp@plt>
  402a9c:	test   eax,eax
  402a9e:	je     406db1 <Mat_VarRead@plt+0x4a21>
  402aa4:	mov    rdi,r14
  402aa7:	lea    rsi,[rip+0xf5b4]        # 412062 <getopt_long_only@@Base+0x4f02>
  402aae:	call   402210 <strcmp@plt>
  402ab3:	test   eax,eax
  402ab5:	je     407689 <Mat_VarRead@plt+0x52f9>
  402abb:	mov    rdi,r14
  402abe:	lea    rsi,[rip+0xc705]        # 40f1ca <getopt_long_only@@Base+0x206a>
  402ac5:	call   402210 <strcmp@plt>
  402aca:	test   eax,eax
  402acc:	je     407912 <Mat_VarRead@plt+0x5582>
  402ad2:	mov    rdi,r14
  402ad5:	lea    rsi,[rip+0xc700]        # 40f1dc <getopt_long_only@@Base+0x207c>
  402adc:	call   402210 <strcmp@plt>
  402ae1:	test   eax,eax
  402ae3:	je     407a22 <Mat_VarRead@plt+0x5692>
  402ae9:	mov    QWORD PTR [rsp+0x58],r15
  402aee:	mov    rdi,r14
  402af1:	lea    rsi,[rip+0xc6f8]        # 40f1f0 <getopt_long_only@@Base+0x2090>
  402af8:	call   402210 <strcmp@plt>
  402afd:	test   eax,eax
  402aff:	je     40801b <Mat_VarRead@plt+0x5c8b>
  402b05:	mov    rdi,r14
  402b08:	lea    rsi,[rip+0xc6fa]        # 40f209 <getopt_long_only@@Base+0x20a9>
  402b0f:	call   402210 <strcmp@plt>
  402b14:	test   eax,eax
  402b16:	je     4086b6 <Mat_VarRead@plt+0x6326>
  402b1c:	mov    rdi,r14
  402b1f:	lea    rsi,[rip+0xc6f7]        # 40f21d <getopt_long_only@@Base+0x20bd>
  402b26:	call   402210 <strcmp@plt>
  402b2b:	test   eax,eax
  402b2d:	je     408906 <Mat_VarRead@plt+0x6576>
  402b33:	mov    rdi,r14
  402b36:	lea    rsi,[rip+0xc6f5]        # 40f232 <getopt_long_only@@Base+0x20d2>
  402b3d:	call   402210 <strcmp@plt>
  402b42:	test   eax,eax
  402b44:	je     408c83 <Mat_VarRead@plt+0x68f3>
  402b4a:	mov    rdi,r14
  402b4d:	lea    rsi,[rip+0xc6ed]        # 40f241 <getopt_long_only@@Base+0x20e1>
  402b54:	call   402210 <strcmp@plt>
  402b59:	test   eax,eax
  402b5b:	je     408ed4 <Mat_VarRead@plt+0x6b44>
  402b61:	mov    rdi,r14
  402b64:	lea    rsi,[rip+0xc6e3]        # 40f24e <getopt_long_only@@Base+0x20ee>
  402b6b:	call   402210 <strcmp@plt>
  402b70:	test   eax,eax
  402b72:	je     409273 <Mat_VarRead@plt+0x6ee3>
  402b78:	mov    rdi,r14
  402b7b:	lea    rsi,[rip+0xc6df]        # 40f261 <getopt_long_only@@Base+0x2101>
  402b82:	call   402210 <strcmp@plt>
  402b87:	test   eax,eax
  402b89:	je     4095e1 <Mat_VarRead@plt+0x7251>
  402b8f:	mov    rdi,r14
  402b92:	lea    rsi,[rip+0xf71b]        # 4122b4 <getopt_long_only@@Base+0x5154>
  402b99:	call   402210 <strcmp@plt>
  402b9e:	test   eax,eax
  402ba0:	je     409812 <Mat_VarRead@plt+0x7482>
  402ba6:	mov    rdi,r14
  402ba9:	lea    rsi,[rip+0xd8a7]        # 410457 <getopt_long_only@@Base+0x32f7>
  402bb0:	call   402210 <strcmp@plt>
  402bb5:	test   eax,eax
  402bb7:	je     40989f <Mat_VarRead@plt+0x750f>
  402bbd:	mov    rdi,r14
  402bc0:	lea    rsi,[rip+0xd911]        # 4104d8 <getopt_long_only@@Base+0x3378>
  402bc7:	call   402210 <strcmp@plt>
  402bcc:	test   eax,eax
  402bce:	je     4099d9 <Mat_VarRead@plt+0x7649>
  402bd4:	mov    rdi,r14
  402bd7:	lea    rsi,[rip+0xe11d]        # 410cfb <getopt_long_only@@Base+0x3b9b>
  402bde:	call   402210 <strcmp@plt>
  402be3:	test   eax,eax
  402be5:	je     409c73 <Mat_VarRead@plt+0x78e3>
  402beb:	mov    rdi,r14
  402bee:	lea    rsi,[rip+0xe346]        # 410f3b <getopt_long_only@@Base+0x3ddb>
  402bf5:	call   402210 <strcmp@plt>
  402bfa:	test   eax,eax
  402bfc:	je     40a02b <Mat_VarRead@plt+0x7c9b>
  402c02:	mov    rdi,r14
  402c05:	lea    rsi,[rip+0xf8a0]        # 4124ac <getopt_long_only@@Base+0x534c>
  402c0c:	call   402210 <strcmp@plt>
  402c11:	test   eax,eax
  402c13:	je     40a672 <Mat_VarRead@plt+0x82e2>
  402c19:	mov    rdi,r14
  402c1c:	lea    rsi,[rip+0xf988]        # 4125ab <getopt_long_only@@Base+0x544b>
  402c23:	call   402210 <strcmp@plt>
  402c28:	test   eax,eax
  402c2a:	je     40a720 <Mat_VarRead@plt+0x8390>
  402c30:	mov    rdi,r14
  402c33:	lea    rsi,[rip+0xc6c9]        # 40f303 <getopt_long_only@@Base+0x21a3>
  402c3a:	call   402210 <strcmp@plt>
  402c3f:	test   eax,eax
  402c41:	jne    40c23f <Mat_VarRead@plt+0x9eaf>
  402c47:	lea    ebx,[r12+0x2]
  402c4c:	mov    rax,QWORD PTR [rsp+0x30]
  402c51:	mov    rdi,QWORD PTR [rax+r12*8+0x8]
  402c56:	xor    esi,esi
  402c58:	call   402080 <Mat_Open@plt>
  402c5d:	test   rax,rax
  402c60:	je     40983f <Mat_VarRead@plt+0x74af>
  402c66:	mov    r12,rax
  402c69:	movsxd rax,ebx
  402c6c:	mov    rcx,QWORD PTR [rsp+0x30]
  402c71:	mov    rsi,QWORD PTR [rcx+rax*8]
  402c75:	mov    rdi,r12
  402c78:	call   402390 <Mat_VarRead@plt>
  402c7d:	test   rax,rax
  402c80:	je     402d12 <Mat_VarRead@plt+0x982>
  402c86:	mov    r14,rax
  402c89:	cmp    DWORD PTR [rax+0x8],0x3
  402c8d:	jne    402d0a <Mat_VarRead@plt+0x97a>
  402c8f:	mov    rax,QWORD PTR [r14+0x28]
  402c93:	cmp    QWORD PTR [rax],0x20
  402c97:	jne    402d0a <Mat_VarRead@plt+0x97a>
  402c99:	cmp    QWORD PTR [rax+0x8],0x20
  402c9e:	jne    402d0a <Mat_VarRead@plt+0x97a>
  402ca0:	cmp    QWORD PTR [rax+0x10],0x20
  402ca5:	jne    402d0a <Mat_VarRead@plt+0x97a>
  402ca7:	mov    DWORD PTR [r14+0x8],0x2
  402caf:	vmovdqa xmm0,XMMWORD PTR [rip+0xb359]        # 40e010 <getopt_long_only@@Base+0xeb0>
  402cb7:	vmovdqu XMMWORD PTR [rax],xmm0
  402cbb:	mov    QWORD PTR [rax+0x10],0x1
  402cc3:	mov    rdi,QWORD PTR [rsp+0x28]
  402cc8:	test   rdi,rdi
  402ccb:	lea    rax,[rip+0xc641]        # 40f313 <getopt_long_only@@Base+0x21b3>
  402cd2:	cmove  rdi,rax
  402cd6:	mov    edx,DWORD PTR [rip+0x12644]        # 415320 <getopt_long_only@@Base+0x81c0>
  402cdc:	xor    esi,esi
  402cde:	mov    QWORD PTR [rsp+0x28],rdi
  402ce3:	call   402310 <Mat_CreateVer@plt>
  402ce8:	test   rax,rax
  402ceb:	je     402d0a <Mat_VarRead@plt+0x97a>
  402ced:	mov    r15,rax
  402cf0:	movzx  edx,BYTE PTR [rip+0x13765]        # 41645c <optopt@@Base+0x24>
  402cf7:	mov    rdi,rax
  402cfa:	mov    rsi,r14
  402cfd:	call   4020f0 <Mat_VarWrite@plt>
  402d02:	mov    rdi,r15
  402d05:	call   4022a0 <Mat_Close@plt>
  402d0a:	mov    rdi,r14
  402d0d:	call   402240 <Mat_VarFree@plt>
  402d12:	mov    r15,QWORD PTR [rsp+0x58]
  402d17:	add    r15d,0x3
  402d1b:	mov    rdi,r12
  402d1e:	call   4022a0 <Mat_Close@plt>
  402d23:	jmp    406d71 <Mat_VarRead@plt+0x49e1>
  402d28:	nop    DWORD PTR [rax+rax*1+0x0]
  402d30:	mov    rdi,QWORD PTR [rsp+0x28]
  402d35:	test   rdi,rdi
  402d38:	lea    rax,[rip+0xd5bc]        # 4102fb <getopt_long_only@@Base+0x319b>
  402d3f:	cmove  rdi,rax
  402d43:	mov    edx,DWORD PTR [rip+0x125d7]        # 415320 <getopt_long_only@@Base+0x81c0>
  402d49:	xor    esi,esi
  402d4b:	mov    QWORD PTR [rsp+0x28],rdi
  402d50:	call   402310 <Mat_CreateVer@plt>
  402d55:	mov    r14,rax
  402d58:	add    r15d,0x2
  402d5c:	mov    r13,r15
  402d5f:	mov    rdi,QWORD PTR [rbx+r12*8+0x8]
  402d64:	xor    esi,esi
  402d66:	call   402080 <Mat_Open@plt>
  402d6b:	test   r14,r14
  402d6e:	je     403638 <Mat_VarRead@plt+0x12a8>
  402d74:	mov    r15,rax
  402d77:	test   rax,rax
  402d7a:	je     403638 <Mat_VarRead@plt+0x12a8>
  402d80:	mov    rdi,r15
  402d83:	call   402070 <Mat_VarReadNext@plt>
  402d88:	test   rax,rax
  402d8b:	je     402de5 <Mat_VarRead@plt+0xa55>
  402d8d:	mov    rbx,rax
  402d90:	mov    esi,0x1
  402d95:	mov    rdi,rbx
  402d98:	call   402360 <Mat_VarDuplicate@plt>
  402d9d:	mov    r12,rax
  402da0:	mov    rdi,rbx
  402da3:	call   402240 <Mat_VarFree@plt>
  402da8:	test   r12,r12
  402dab:	je     402dd0 <Mat_VarRead@plt+0xa40>
  402dad:	movzx  edx,BYTE PTR [rip+0x136a8]        # 41645c <optopt@@Base+0x24>
  402db4:	mov    rdi,r14
  402db7:	mov    rsi,r12
  402dba:	call   4020f0 <Mat_VarWrite@plt>
  402dbf:	mov    rdi,r12
  402dc2:	call   402240 <Mat_VarFree@plt>
  402dc7:	jmp    402dd5 <Mat_VarRead@plt+0xa45>
  402dc9:	nop    DWORD PTR [rax+0x0]
  402dd0:	add    DWORD PTR [rsp+0x3c],0x1
  402dd5:	mov    rdi,r15
  402dd8:	call   402070 <Mat_VarReadNext@plt>
  402ddd:	mov    rbx,rax
  402de0:	test   rax,rax
  402de3:	jne    402d90 <Mat_VarRead@plt+0xa00>
  402de5:	mov    rdi,r14
  402de8:	call   4022a0 <Mat_Close@plt>
  402ded:	mov    rdi,r15
  402df0:	call   4022a0 <Mat_Close@plt>
  402df5:	jmp    403a7a <Mat_VarRead@plt+0x16ea>
  402dfa:	nop    WORD PTR [rax+rax*1+0x0]
  402e00:	mov    r13,r15
  402e03:	mov    rax,QWORD PTR [rsp+0x30]
  402e08:	mov    r15,QWORD PTR [rax+r12*8+0x8]
  402e0d:	mov    r14,QWORD PTR [rax+r12*8+0x10]
  402e12:	mov    esi,0x1
  402e17:	mov    rdi,r15
  402e1a:	call   402080 <Mat_Open@plt>
  402e1f:	test   rax,rax
  402e22:	je     4032ad <Mat_VarRead@plt+0xf1d>
  402e28:	mov    rbx,rax
  402e2b:	mov    rdi,rax
  402e2e:	mov    rsi,r14
  402e31:	call   4022c0 <Mat_VarDelete@plt>
  402e36:	mov    r14d,eax
  402e39:	mov    rdi,rbx
  402e3c:	call   4022a0 <Mat_Close@plt>
  402e41:	jmp    4032c4 <Mat_VarRead@plt+0xf34>
  402e46:	add    r15d,0x2
  402e4a:	mov    r13,r15
  402e4d:	mov    rbx,QWORD PTR [rsp+0x30]
  402e52:	mov    r14,QWORD PTR [rbx+r12*8+0x8]
  402e57:	mov    esi,0x1
  402e5c:	mov    rdi,r14
  402e5f:	call   402080 <Mat_Open@plt>
  402e64:	test   rax,rax
  402e67:	je     40361e <Mat_VarRead@plt+0x128e>
  402e6d:	mov    r15,rax
  402e70:	mov    rdi,rax
  402e73:	lea    rsi,[rsp+0x1160]
  402e7b:	call   402250 <Mat_GetDir@plt>
  402e80:	test   rax,rax
  402e83:	je     403a19 <Mat_VarRead@plt+0x1689>
  402e89:	mov    r12,rax
  402e8c:	mov    rax,QWORD PTR [rsp+0x1160]
  402e94:	lea    rcx,[rax+0x1]
  402e98:	mov    QWORD PTR [rsp+0x1cc0],rcx
  402ea0:	test   rax,rax
  402ea3:	je     402ed8 <Mat_VarRead@plt+0xb48>
  402ea5:	xor    ebx,ebx
  402ea7:	nop    WORD PTR [rax+rax*1+0x0]
  402eb0:	mov    rdi,QWORD PTR [r12+rbx*8]
  402eb4:	test   rdi,rdi
  402eb7:	je     402ec0 <Mat_VarRead@plt+0xb30>
  402eb9:	call   4020c0 <puts@plt>
  402ebe:	jmp    402eca <Mat_VarRead@plt+0xb3a>
  402ec0:	mov    edi,0xa
  402ec5:	call   402060 <putchar@plt>
  402eca:	add    rbx,0x1
  402ece:	cmp    rbx,QWORD PTR [rsp+0x1160]
  402ed6:	jb     402eb0 <Mat_VarRead@plt+0xb20>
  402ed8:	mov    rdi,r15
  402edb:	lea    rsi,[rsp+0x1cc0]
  402ee3:	call   402250 <Mat_GetDir@plt>
  402ee8:	mov    rax,QWORD PTR [rsp+0x1160]
  402ef0:	xor    ebx,ebx
  402ef2:	cmp    rax,QWORD PTR [rsp+0x1cc0]
  402efa:	setne  bl
  402efd:	jmp    403a1e <Mat_VarRead@plt+0x168e>
  402f02:	mov    r12,r15
  402f05:	mov    rdi,QWORD PTR [rsp+0x28]
  402f0a:	test   rdi,rdi
  402f0d:	vmovaps xmm0,XMMWORD PTR [rip+0xb2cb]        # 40e1e0 <getopt_long_only@@Base+0x1080>
  402f15:	vmovaps XMMWORD PTR [rsp+0x40],xmm0
  402f1b:	vmovdqa xmm0,XMMWORD PTR [rip+0xb23d]        # 40e160 <getopt_long_only@@Base+0x1000>
  402f23:	vmovd  DWORD PTR [rsp+0x150],xmm0
  402f2c:	vmovaps xmm3,XMMWORD PTR [rsp+0x1140]
  402f35:	vmovaps XMMWORD PTR [rsp+0x260],xmm3
  402f3e:	vmovdqa xmm1,XMMWORD PTR [rip+0xb22a]        # 40e170 <getopt_long_only@@Base+0x1010>
  402f46:	vmovdqa XMMWORD PTR [rsp+0x620],xmm1
  402f4f:	vmovdqa ymm2,YMMWORD PTR [rsp+0x1ca0]
  402f58:	vmovdqu YMMWORD PTR [rsp+0xa60],ymm2
  402f61:	vmovdqa xmm4,XMMWORD PTR [rsp+0x1130]
  402f6a:	vmovdqu XMMWORD PTR [rsp+0x154],xmm4
  402f73:	vmovdqa XMMWORD PTR [rsp+0x630],xmm1
  402f7c:	vmovdqu YMMWORD PTR [rsp+0xa80],ymm2
  402f85:	vmovaps XMMWORD PTR [rsp+0x270],xmm3
  402f8e:	vmovdqa XMMWORD PTR [rsp+0x640],xmm1
  402f97:	vmovdqu YMMWORD PTR [rsp+0xaa0],ymm2
  402fa0:	vmovdqa XMMWORD PTR [rsp+0x650],xmm1
  402fa9:	vmovdqu YMMWORD PTR [rsp+0xac0],ymm2
  402fb2:	vmovaps XMMWORD PTR [rsp+0x280],xmm3
  402fbb:	vmovdqa XMMWORD PTR [rsp+0x660],xmm1
  402fc4:	vmovdqu YMMWORD PTR [rsp+0xae0],ymm2
  402fcd:	vmovd  DWORD PTR [rsp+0x164],xmm0
  402fd6:	vmovdqa XMMWORD PTR [rsp+0x670],xmm1
  402fdf:	vmovdqu YMMWORD PTR [rsp+0xb00],ymm2
  402fe8:	vmovdqu XMMWORD PTR [rsp+0x168],xmm4
  402ff1:	vmovaps XMMWORD PTR [rsp+0x290],xmm3
  402ffa:	vmovdqa XMMWORD PTR [rsp+0x680],xmm1
  403003:	vmovdqu YMMWORD PTR [rsp+0xb20],ymm2
  40300c:	vmovdqa XMMWORD PTR [rsp+0x690],xmm1
  403015:	vmovdqu YMMWORD PTR [rsp+0xb40],ymm2
  40301e:	vmovaps XMMWORD PTR [rsp+0x2a0],xmm3
  403027:	vmovdqa XMMWORD PTR [rsp+0x6a0],xmm1
  403030:	vmovdqu YMMWORD PTR [rsp+0xb60],ymm2
  403039:	vmovdqa XMMWORD PTR [rsp+0x6b0],xmm1
  403042:	vmovdqu YMMWORD PTR [rsp+0xb80],ymm2
  40304b:	vmovd  DWORD PTR [rsp+0x178],xmm0
  403054:	vmovdqa xmm3,XMMWORD PTR [rsp+0x1150]
  40305d:	vmovq  QWORD PTR [rsp+0x2b0],xmm3
  403066:	vmovdqa XMMWORD PTR [rsp+0x6c0],xmm1
  40306f:	vmovdqu YMMWORD PTR [rsp+0xba0],ymm2
  403078:	vmovd  DWORD PTR [rsp+0x17c],xmm0
  403081:	vmovq  QWORD PTR [rsp+0x2b8],xmm3
  40308a:	vmovdqa XMMWORD PTR [rsp+0x6d0],xmm1
  403093:	vmovdqu YMMWORD PTR [rsp+0xbc0],ymm2
  40309c:	mov    BYTE PTR [rsp+0x180],0x0
  4030a4:	mov    WORD PTR [rsp+0x2c0],0x0
  4030ae:	mov    DWORD PTR [rsp+0x6e0],0x0
  4030b9:	mov    QWORD PTR [rsp+0xbe0],0x0
  4030c5:	mov    BYTE PTR [rsp+0x181],0x1
  4030cd:	mov    WORD PTR [rsp+0x2c2],0x1
  4030d7:	mov    DWORD PTR [rsp+0x6e4],0x1
  4030e2:	mov    QWORD PTR [rsp+0xbe8],0x1
  4030ee:	lea    rax,[rip+0xbede]        # 40efd3 <getopt_long_only@@Base+0x1e73>
  4030f5:	cmove  rdi,rax
  4030f9:	mov    edx,DWORD PTR [rip+0x12221]        # 415320 <getopt_long_only@@Base+0x81c0>
  4030ff:	xor    esi,esi
  403101:	mov    QWORD PTR [rsp+0x28],rdi
  403106:	vzeroupper 
  403109:	call   402310 <Mat_CreateVer@plt>
  40310e:	test   rax,rax
  403111:	je     406207 <Mat_VarRead@plt+0x3e77>
  403117:	mov    r14,rax
  40311a:	mov    DWORD PTR [rsp],0x200
  403121:	mov    esi,0xf
  403126:	mov    edx,0xd
  40312b:	mov    ecx,0x2
  403130:	lea    rdi,[rip+0xf58b]        # 4126c2 <getopt_long_only@@Base+0x5562>
  403137:	lea    r13,[rsp+0x40]
  40313c:	mov    r8,r13
  40313f:	lea    r9,[rsp+0xa60]
  403147:	call   4020d0 <Mat_VarCreate@plt>
  40314c:	mov    rbx,rax
  40314f:	movzx  edx,BYTE PTR [rip+0x13306]        # 41645c <optopt@@Base+0x24>
  403156:	mov    rdi,r14
  403159:	mov    rsi,rax
  40315c:	call   4020f0 <Mat_VarWrite@plt>
  403161:	mov    rdi,rbx
  403164:	call   402240 <Mat_VarFree@plt>
  403169:	mov    DWORD PTR [rsp],0x200
  403170:	mov    esi,0xd
  403175:	mov    edx,0x6
  40317a:	mov    ecx,0x2
  40317f:	lea    rdi,[rip+0xf53f]        # 4126c5 <getopt_long_only@@Base+0x5565>
  403186:	mov    r8,r13
  403189:	lea    r9,[rsp+0x620]
  403191:	call   4020d0 <Mat_VarCreate@plt>
  403196:	mov    rbx,rax
  403199:	movzx  edx,BYTE PTR [rip+0x132bc]        # 41645c <optopt@@Base+0x24>
  4031a0:	mov    rdi,r14
  4031a3:	mov    rsi,rax
  4031a6:	call   4020f0 <Mat_VarWrite@plt>
  4031ab:	mov    rdi,rbx
  4031ae:	call   402240 <Mat_VarFree@plt>
  4031b3:	mov    DWORD PTR [rsp],0x200
  4031ba:	mov    esi,0xb
  4031bf:	mov    edx,0x4
  4031c4:	mov    ecx,0x2
  4031c9:	lea    rdi,[rip+0xf4f8]        # 4126c8 <getopt_long_only@@Base+0x5568>
  4031d0:	mov    r8,r13
  4031d3:	lea    r9,[rsp+0x260]
  4031db:	call   4020d0 <Mat_VarCreate@plt>
  4031e0:	mov    rbx,rax
  4031e3:	movzx  edx,BYTE PTR [rip+0x13272]        # 41645c <optopt@@Base+0x24>
  4031ea:	mov    rdi,r14
  4031ed:	mov    rsi,rax
  4031f0:	call   4020f0 <Mat_VarWrite@plt>
  4031f5:	mov    rdi,rbx
  4031f8:	call   402240 <Mat_VarFree@plt>
  4031fd:	mov    DWORD PTR [rsp],0x200
  403204:	mov    esi,0x9
  403209:	mov    edx,0x2
  40320e:	mov    ecx,0x2
  403213:	lea    rdi,[rip+0xf4b1]        # 4126cb <getopt_long_only@@Base+0x556b>
  40321a:	mov    r8,r13
  40321d:	lea    r9,[rsp+0x150]
  403225:	call   4020d0 <Mat_VarCreate@plt>
  40322a:	mov    rbx,rax
  40322d:	movzx  edx,BYTE PTR [rip+0x13228]        # 41645c <optopt@@Base+0x24>
  403234:	mov    rdi,r14
  403237:	mov    rsi,rax
  40323a:	call   4020f0 <Mat_VarWrite@plt>
  40323f:	mov    rdi,rbx
  403242:	call   402240 <Mat_VarFree@plt>
  403247:	mov    QWORD PTR [rsp+0x40],0x0
  403250:	mov    DWORD PTR [rsp],0x200
  403257:	xor    r15d,r15d
  40325a:	mov    esi,0x9
  40325f:	mov    edx,0x2
  403264:	mov    ecx,0x2
  403269:	xor    r9d,r9d
  40326c:	lea    rdi,[rip+0xf45b]        # 4126ce <getopt_long_only@@Base+0x556e>
  403273:	mov    r8,r13
  403276:	lea    r13,[rsp+0x440]
  40327e:	call   4020d0 <Mat_VarCreate@plt>
  403283:	mov    rbx,rax
  403286:	movzx  edx,BYTE PTR [rip+0x131cf]        # 41645c <optopt@@Base+0x24>
  40328d:	mov    rdi,r14
  403290:	mov    rsi,rax
  403293:	call   4020f0 <Mat_VarWrite@plt>
  403298:	mov    rdi,rbx
  40329b:	call   402240 <Mat_VarFree@plt>
  4032a0:	mov    rdi,r14
  4032a3:	call   4022a0 <Mat_Close@plt>
  4032a8:	jmp    40620d <Mat_VarRead@plt+0x3e7d>
  4032ad:	xor    eax,eax
  4032af:	lea    rdi,[rip+0xf3f2]        # 4126a8 <getopt_long_only@@Base+0x5548>
  4032b6:	mov    rsi,r15
  4032b9:	call   4022b0 <Mat_Critical@plt>
  4032be:	mov    r14d,0x1
  4032c4:	add    DWORD PTR [rsp+0x3c],r14d
  4032c9:	mov    r15,r13
  4032cc:	add    r15d,0x3
  4032d0:	jmp    403a7d <Mat_VarRead@plt+0x16ed>
  4032d5:	mov    rdi,QWORD PTR [rsp+0x28]
  4032da:	test   rdi,rdi
  4032dd:	lea    rax,[rip+0xbd09]        # 40efed <getopt_long_only@@Base+0x1e8d>
  4032e4:	cmove  rdi,rax
  4032e8:	mov    eax,DWORD PTR [rsp+0x12c]
  4032ef:	mov    DWORD PTR [rsp+0x118],eax
  4032f6:	mov    edx,DWORD PTR [rip+0x12024]        # 415320 <getopt_long_only@@Base+0x81c0>
  4032fc:	xor    esi,esi
  4032fe:	mov    QWORD PTR [rsp+0x28],rdi
  403303:	call   402310 <Mat_CreateVer@plt>
  403308:	mov    r12d,0x1
  40330e:	test   rax,rax
  403311:	je     403b5e <Mat_VarRead@plt+0x17ce>
  403317:	mov    r14,rax
  40331a:	xor    eax,eax
  40331c:	vmovdqa ymm0,YMMWORD PTR [rip+0xaefc]        # 40e220 <getopt_long_only@@Base+0x10c0>
  403324:	vmovdqa ymm7,YMMWORD PTR [rip+0xaf14]        # 40e240 <getopt_long_only@@Base+0x10e0>
  40332c:	vmovdqa ymm9,ymm7
  403330:	vmovdqa ymm8,YMMWORD PTR [rsp+0x1100]
  403339:	vmovdqa xmm7,XMMWORD PTR [rip+0xad9f]        # 40e0e0 <getopt_long_only@@Base+0xf80>
  403341:	vmovdqa xmm10,xmm7
  403345:	vmovdqa xmm7,XMMWORD PTR [rip+0xada3]        # 40e0f0 <getopt_long_only@@Base+0xf90>
  40334d:	vmovdqa ymm11,YMMWORD PTR [rsp+0x10e0]
  403356:	vpcmpeqd ymm12,ymm12,ymm12
  40335b:	mov    rbx,QWORD PTR [rsp+0x30]
  403360:	vpsubq ymm1,ymm0,ymm12
  403365:	vpermd ymm2,ymm9,ymm1
  40336a:	vcvtdq2pd ymm3,xmm2
  40336e:	vmovups YMMWORD PTR [rsp+rax*8+0x8c0],ymm3
  403377:	vcvtdq2ps xmm3,xmm2
  40337b:	vmovaps XMMWORD PTR [rsp+rax*4+0xc00],xmm3
  403384:	vpaddq ymm3,ymm0,ymm8
  403389:	vpermd ymm4,ymm9,ymm3
  40338e:	vinserti128 ymm5,ymm2,xmm4,0x1
  403394:	vmovdqu YMMWORD PTR [rsp+rax*4+0x620],ymm5
  40339d:	vmovdqu YMMWORD PTR [rsp+rax*4+0xd00],ymm5
  4033a6:	vpshufb xmm5,xmm2,xmm10
  4033ab:	vpshufb xmm6,xmm4,xmm10
  4033b0:	vpunpcklqdq xmm5,xmm5,xmm6
  4033b4:	vmovdqa XMMWORD PTR [rsp+rax*2+0x260],xmm5
  4033bd:	vmovdqa XMMWORD PTR [rsp+rax*2+0x3c0],xmm5
  4033c6:	vpshufb xmm2,xmm2,xmm7
  4033cb:	vmovd  DWORD PTR [rsp+rax*1+0x150],xmm2
  4033d4:	vmovd  DWORD PTR [rsp+rax*1+0x1c0],xmm2
  4033dd:	vmovdqu YMMWORD PTR [rsp+rax*8+0xa60],ymm1
  4033e6:	vmovdqu YMMWORD PTR [rsp+rax*8+0xe60],ymm1
  4033ef:	vcvtdq2pd ymm1,xmm4
  4033f3:	vmovups YMMWORD PTR [rsp+rax*8+0x8e0],ymm1
  4033fc:	vcvtdq2ps xmm1,xmm4
  403400:	vmovaps XMMWORD PTR [rsp+rax*4+0xc10],xmm1
  403409:	vpshufb xmm1,xmm4,xmm7
  40340e:	vmovd  DWORD PTR [rsp+rax*1+0x154],xmm1
  403417:	vmovd  DWORD PTR [rsp+rax*1+0x1c4],xmm1
  403420:	vmovdqu YMMWORD PTR [rsp+rax*8+0xa80],ymm3
  403429:	vmovdqu YMMWORD PTR [rsp+rax*8+0xe80],ymm3
  403432:	add    rax,0x8
  403436:	vpaddq ymm0,ymm0,ymm11
  40343b:	cmp    rax,0x30
  40343f:	jne    403360 <Mat_VarRead@plt+0xfd0>
  403445:	movabs rax,0x4048800000000000
  40344f:	mov    QWORD PTR [rsp+0xa40],rax
  403457:	movabs rax,0x4248000042440000
  403461:	mov    QWORD PTR [rsp+0xcc0],rax
  403469:	movabs rax,0x3200000031
  403473:	mov    QWORD PTR [rsp+0x6e0],rax
  40347b:	mov    QWORD PTR [rsp+0xdc0],rax
  403483:	mov    DWORD PTR [rsp+0x2c0],0x320031
  40348e:	mov    DWORD PTR [rsp+0x420],0x320031
  403499:	mov    WORD PTR [rsp+0x180],0x3231
  4034a3:	mov    WORD PTR [rsp+0x1f0],0x3231
  4034ad:	mov    QWORD PTR [rsp+0xbe0],0x31
  4034b9:	mov    QWORD PTR [rsp+0xfe0],0x31
  4034c5:	movabs rax,0x4049000000000000
  4034cf:	mov    QWORD PTR [rsp+0xa48],rax
  4034d7:	mov    QWORD PTR [rsp+0xbe8],0x32
  4034e3:	mov    QWORD PTR [rsp+0xfe8],0x32
  4034ef:	mov    eax,DWORD PTR [rsp+0x118]
  4034f6:	test   eax,eax
  4034f8:	je     403bd5 <Mat_VarRead@plt+0x1845>
  4034fe:	cmp    eax,0x2
  403501:	je     403ce5 <Mat_VarRead@plt+0x1955>
  403507:	cmp    eax,0x1
  40350a:	jne    405109 <Mat_VarRead@plt+0x2d79>
  403510:	mov    QWORD PTR [rsp+0x140],r14
  403518:	mov    QWORD PTR [rsp+0x58],r15
  40351d:	vmovaps xmm0,XMMWORD PTR [rip+0xac2b]        # 40e150 <getopt_long_only@@Base+0xff0>
  403525:	vmovaps XMMWORD PTR [rsp+0xc0],xmm0
  40352e:	lea    r8,[rsp+0x8c0]
  403536:	lea    r9,[rsp+0xc00]
  40353e:	lea    r10,[rsp+0x620]
  403546:	lea    r11,[rsp+0xd00]
  40354e:	lea    r12,[rsp+0x260]
  403556:	lea    r13,[rsp+0x3c0]
  40355e:	lea    rax,[rsp+0x150]
  403566:	lea    rcx,[rsp+0x1c0]
  40356e:	lea    rdx,[rsp+0xa60]
  403576:	lea    rsi,[rsp+0xe60]
  40357e:	xor    r14d,r14d
  403581:	mov    r15d,0x1
  403587:	nop    WORD PTR [rax+rax*1+0x0]
  403590:	add    r14,0x1
  403594:	xor    edi,edi
  403596:	mov    rbx,r15
  403599:	nop    DWORD PTR [rax+0x0]
  4035a0:	vcvtsi2sd xmm0,xmm13,ebx
  4035a4:	vmovsd QWORD PTR [r8+rdi*8],xmm0
  4035aa:	vcvtsi2ss xmm0,xmm13,ebx
  4035ae:	vmovd  DWORD PTR [r9+rdi*4],xmm0
  4035b4:	mov    DWORD PTR [r10+rdi*4],ebx
  4035b8:	mov    DWORD PTR [r11+rdi*4],ebx
  4035bc:	mov    WORD PTR [r12+rdi*2],bx
  4035c1:	mov    WORD PTR [r13+rdi*2+0x0],bx
  4035c7:	mov    BYTE PTR [rax+rdi*1],bl
  4035ca:	mov    BYTE PTR [rcx+rdi*1],bl
  4035cd:	mov    QWORD PTR [rdx+rdi*8],rbx
  4035d1:	mov    QWORD PTR [rsi+rdi*8],rbx
  4035d5:	add    rbx,0x5
  4035d9:	add    rdi,0x1
  4035dd:	cmp    rdi,0xa
  4035e1:	jne    4035a0 <Mat_VarRead@plt+0x1210>
  4035e3:	add    r15,0x1
  4035e7:	add    rsi,0x50
  4035eb:	add    rdx,0x50
  4035ef:	add    rcx,0xa
  4035f3:	add    rax,0xa
  4035f7:	add    r13,0x14
  4035fb:	add    r12,0x14
  4035ff:	add    r11,0x28
  403603:	add    r10,0x28
  403607:	add    r9,0x28
  40360b:	add    r8,0x50
  40360f:	cmp    r14,0x5
  403613:	jne    403590 <Mat_VarRead@plt+0x1200>
  403619:	jmp    403d03 <Mat_VarRead@plt+0x1973>
  40361e:	xor    eax,eax
  403620:	lea    rdi,[rip+0xf081]        # 4126a8 <getopt_long_only@@Base+0x5548>
  403627:	mov    rsi,r14
  40362a:	call   4022b0 <Mat_Critical@plt>
  40362f:	mov    eax,0x1
  403634:	add    DWORD PTR [rsp+0x3c],eax
  403638:	mov    r15,r13
  40363b:	lea    r13,[rsp+0x440]
  403643:	cmp    r15d,DWORD PTR [rsp+0x128]
  40364b:	jl     4028a0 <Mat_VarRead@plt+0x510>
  403651:	jmp    40c229 <Mat_VarRead@plt+0x9e99>
  403656:	mov    rdi,QWORD PTR [rsp+0x28]
  40365b:	test   rdi,rdi
  40365e:	lea    rax,[rip+0xb9a2]        # 40f007 <getopt_long_only@@Base+0x1ea7>
  403665:	cmove  rdi,rax
  403669:	mov    ebx,DWORD PTR [rsp+0x12c]
  403670:	vpxor  xmm0,xmm0,xmm0
  403674:	vmovdqa XMMWORD PTR [rsp+0x60],xmm0
  40367a:	mov    edx,DWORD PTR [rip+0x11ca0]        # 415320 <getopt_long_only@@Base+0x81c0>
  403680:	xor    esi,esi
  403682:	mov    QWORD PTR [rsp+0x28],rdi
  403687:	call   402310 <Mat_CreateVer@plt>
  40368c:	mov    r14d,0x1
  403692:	test   rax,rax
  403695:	je     404ef2 <Mat_VarRead@plt+0x2b62>
  40369b:	mov    r12,rax
  40369e:	mov    DWORD PTR [rsp+0xb4],ebx
  4036a5:	xor    eax,eax
  4036a7:	vmovdqa ymm0,YMMWORD PTR [rip+0xab71]        # 40e220 <getopt_long_only@@Base+0x10c0>
  4036af:	vmovdqa xmm1,XMMWORD PTR [rip+0xaa19]        # 40e0d0 <getopt_long_only@@Base+0xf70>
  4036b7:	vmovdqa ymm8,YMMWORD PTR [rip+0xab81]        # 40e240 <getopt_long_only@@Base+0x10e0>
  4036bf:	vmovdqa xmm9,XMMWORD PTR [rip+0xaa19]        # 40e0e0 <getopt_long_only@@Base+0xf80>
  4036c7:	vmovdqa xmm10,XMMWORD PTR [rip+0xaa21]        # 40e0f0 <getopt_long_only@@Base+0xf90>
  4036cf:	vpcmpeqd ymm11,ymm11,ymm11
  4036d4:	mov    rbx,QWORD PTR [rsp+0x30]
  4036d9:	nop    DWORD PTR [rax+0x0]
  4036e0:	vpsubq ymm2,ymm0,ymm11
  4036e5:	vpermd ymm3,ymm8,ymm2
  4036ea:	vcvtdq2pd ymm4,xmm3
  4036ee:	vmovups YMMWORD PTR [rsp+rax*8+0x8c0],ymm4
  4036f7:	vpbroadcastq ymm4,QWORD PTR [rip+0xac60]        # 40e360 <getopt_long_only@@Base+0x1200>
  403700:	vpaddq ymm4,ymm0,ymm4
  403704:	vpbroadcastd xmm5,DWORD PTR [rip+0xac7b]        # 40e388 <getopt_long_only@@Base+0x1228>
  40370d:	vpaddd xmm5,xmm1,xmm5
  403711:	vpermd ymm6,ymm8,ymm4
  403716:	vcvtdq2pd ymm7,xmm6
  40371a:	vmovups YMMWORD PTR [rsp+rax*8+0x1160],ymm7
  403723:	vcvtdq2ps xmm7,xmm3
  403727:	vmovaps XMMWORD PTR [rsp+rax*4+0xc00],xmm7
  403730:	vcvtdq2ps xmm7,xmm6
  403734:	vmovaps XMMWORD PTR [rsp+rax*4+0x1000],xmm7
  40373d:	vmovdqa XMMWORD PTR [rsp+rax*4+0x620],xmm3
  403746:	vmovdqa XMMWORD PTR [rsp+rax*4+0xd00],xmm6
  40374f:	vmovdqa XMMWORD PTR [rsp+rax*4+0x700],xmm3
  403758:	vmovdqa XMMWORD PTR [rsp+rax*4+0x7e0],xmm6
  403761:	vpshufb xmm6,xmm3,xmm9
  403766:	vmovq  QWORD PTR [rsp+rax*2+0x260],xmm6
  40376f:	vpshufb xmm7,xmm5,xmm9
  403774:	vmovq  QWORD PTR [rsp+rax*2+0x3c0],xmm7
  40377d:	vmovq  QWORD PTR [rsp+rax*2+0x340],xmm6
  403786:	vmovq  QWORD PTR [rsp+rax*2+0xde0],xmm7
  40378f:	vpshufb xmm3,xmm3,xmm10
  403794:	vmovd  DWORD PTR [rsp+rax*1+0x150],xmm3
  40379d:	vpshufb xmm5,xmm5,xmm10
  4037a2:	vmovd  DWORD PTR [rsp+rax*1+0x1c0],xmm5
  4037ab:	vmovd  DWORD PTR [rsp+rax*1+0x220],xmm3
  4037b4:	vmovd  DWORD PTR [rsp+rax*1+0x2e0],xmm5
  4037bd:	vmovdqu YMMWORD PTR [rsp+rax*8+0xa60],ymm2
  4037c6:	vmovdqu YMMWORD PTR [rsp+rax*8+0xe60],ymm4
  4037cf:	vmovdqu YMMWORD PTR [rsp+rax*8+0x1cc0],ymm2
  4037d8:	vmovdqu YMMWORD PTR [rsp+rax*8+0x440],ymm4
  4037e1:	add    rax,0x4
  4037e5:	vpbroadcastq ymm2,QWORD PTR [rip+0xab7a]        # 40e368 <getopt_long_only@@Base+0x1208>
  4037ee:	vpaddq ymm0,ymm0,ymm2
  4037f2:	vpbroadcastd xmm2,DWORD PTR [rip+0xab91]        # 40e38c <getopt_long_only@@Base+0x122c>
  4037fb:	vpaddd xmm1,xmm1,xmm2
  4037ff:	cmp    rax,0x30
  403803:	jne    4036e0 <Mat_VarRead@plt+0x1350>
  403809:	movabs rax,0x4048800000000000
  403813:	mov    QWORD PTR [rsp+0xa40],rax
  40381b:	movabs rax,0x4058c00000000000
  403825:	mov    QWORD PTR [rsp+0x12e0],rax
  40382d:	mov    DWORD PTR [rsp+0xcc0],0x42440000
  403838:	mov    DWORD PTR [rsp+0x10c0],0x42c60000
  403843:	mov    DWORD PTR [rsp+0x6e0],0x31
  40384e:	mov    DWORD PTR [rsp+0xdc0],0x63
  403859:	mov    DWORD PTR [rsp+0x7c0],0x31
  403864:	mov    DWORD PTR [rsp+0x8a0],0x63
  40386f:	mov    WORD PTR [rsp+0x2c0],0x31
  403879:	mov    WORD PTR [rsp+0x420],0x63
  403883:	mov    WORD PTR [rsp+0x3a0],0x31
  40388d:	mov    WORD PTR [rsp+0xe40],0x63
  403897:	mov    BYTE PTR [rsp+0x180],0x31
  40389f:	mov    BYTE PTR [rsp+0x1f0],0x63
  4038a7:	mov    BYTE PTR [rsp+0x250],0x31
  4038af:	mov    BYTE PTR [rsp+0x310],0x63
  4038b7:	mov    QWORD PTR [rsp+0xbe0],0x31
  4038c3:	mov    QWORD PTR [rsp+0xfe0],0x63
  4038cf:	mov    QWORD PTR [rsp+0x1e40],0x31
  4038db:	mov    QWORD PTR [rsp+0x5c0],0x63
  4038e7:	movabs rax,0x4049000000000000
  4038f1:	mov    QWORD PTR [rsp+0xa48],rax
  4038f9:	movabs rax,0x4059000000000000
  403903:	mov    QWORD PTR [rsp+0x12e8],rax
  40390b:	mov    DWORD PTR [rsp+0xcc4],0x42480000
  403916:	mov    DWORD PTR [rsp+0x10c4],0x42c80000
  403921:	mov    DWORD PTR [rsp+0x6e4],0x32
  40392c:	mov    DWORD PTR [rsp+0xdc4],0x64
  403937:	mov    DWORD PTR [rsp+0x7c4],0x32
  403942:	mov    DWORD PTR [rsp+0x8a4],0x64
  40394d:	mov    WORD PTR [rsp+0x2c2],0x32
  403957:	mov    WORD PTR [rsp+0x422],0x64
  403961:	mov    WORD PTR [rsp+0x3a2],0x32
  40396b:	mov    WORD PTR [rsp+0xe42],0x64
  403975:	mov    BYTE PTR [rsp+0x181],0x32
  40397d:	mov    BYTE PTR [rsp+0x1f1],0x64
  403985:	mov    BYTE PTR [rsp+0x251],0x32
  40398d:	mov    BYTE PTR [rsp+0x311],0x64
  403995:	mov    QWORD PTR [rsp+0xbe8],0x32
  4039a1:	mov    QWORD PTR [rsp+0xfe8],0x64
  4039ad:	mov    QWORD PTR [rsp+0x1e48],0x32
  4039b9:	mov    QWORD PTR [rsp+0x5c8],0x64
  4039c5:	mov    al,BYTE PTR [rsp+0x27]
  4039c9:	cmp    al,0x9
  4039cb:	ja     404eb0 <Mat_VarRead@plt+0x2b20>
  4039d1:	movzx  edx,al
  4039d4:	lea    rax,[rip+0xabcd]        # 40e5a8 <getopt_long_only@@Base+0x1448>
  4039db:	mov    rcx,rax
  4039de:	mov    QWORD PTR [rsp+0xce8],rdx
  4039e6:	movsxd rax,DWORD PTR [rax+rdx*4]
  4039ea:	add    rax,rcx
  4039ed:	jmp    rax
  4039ef:	lea    rax,[rsp+0x8c0]
  4039f7:	mov    QWORD PTR [rsp+0x60],rax
  4039fc:	lea    rax,[rsp+0x1160]
  403a04:	mov    QWORD PTR [rsp+0x68],rax
  403a09:	mov    DWORD PTR [rsp+0xb0],0x9
  403a14:	jmp    404755 <Mat_VarRead@plt+0x23c5>
  403a19:	mov    ebx,0x1
  403a1e:	mov    rdi,r15
  403a21:	call   4020e0 <Mat_GetFilename@plt>
  403a26:	mov    rdi,r14
  403a29:	mov    rsi,rax
  403a2c:	call   402210 <strcmp@plt>
  403a31:	cmp    eax,0x1
  403a34:	sbb    ebx,0xffffffff
  403a37:	mov    rdi,r15
  403a3a:	call   402100 <Mat_GetVersion@plt>
  403a3f:	cmp    eax,0x1
  403a42:	mov    eax,0x0
  403a47:	adcx   ebx,eax
  403a4c:	mov    rdi,r15
  403a4f:	call   4022f0 <Mat_GetHeader@plt>
  403a54:	test   rax,rax
  403a57:	je     403a6e <Mat_VarRead@plt+0x16de>
  403a59:	mov    rdi,rax
  403a5c:	call   402120 <strlen@plt>
  403a61:	xor    ecx,ecx
  403a63:	cmp    rax,0x80
  403a69:	seta   cl
  403a6c:	add    ebx,ecx
  403a6e:	mov    rdi,r15
  403a71:	call   4022a0 <Mat_Close@plt>
  403a76:	add    DWORD PTR [rsp+0x3c],ebx
  403a7a:	mov    r15,r13
  403a7d:	lea    r13,[rsp+0x440]
  403a85:	mov    rbx,QWORD PTR [rsp+0x30]
  403a8a:	cmp    r15d,DWORD PTR [rsp+0x128]
  403a92:	jl     4028a0 <Mat_VarRead@plt+0x510>
  403a98:	jmp    40c229 <Mat_VarRead@plt+0x9e99>
  403a9d:	mov    rax,QWORD PTR [rsp+0x28]
  403aa2:	test   rax,rax
  403aa5:	lea    rcx,[rip+0xb57d]        # 40f029 <getopt_long_only@@Base+0x1ec9>
  403aac:	cmove  rax,rcx
  403ab0:	vmovdqa xmm0,XMMWORD PTR [rip+0xa6e8]        # 40e1a0 <getopt_long_only@@Base+0x1040>
  403ab8:	vmovdqa XMMWORD PTR [rsp+0x40],xmm0
  403abe:	mov    ebx,0x1
  403ac3:	cmp    DWORD PTR [rsp+0x330],0x9
  403acb:	mov    QWORD PTR [rsp+0x28],rax
  403ad0:	ja     403b51 <Mat_VarRead@plt+0x17c1>
  403ad2:	mov    edx,DWORD PTR [rip+0x11848]        # 415320 <getopt_long_only@@Base+0x81c0>
  403ad8:	xor    esi,esi
  403ada:	mov    rdi,rax
  403add:	call   402310 <Mat_CreateVer@plt>
  403ae2:	test   rax,rax
  403ae5:	je     403b51 <Mat_VarRead@plt+0x17c1>
  403ae7:	mov    r14,rax
  403aea:	mov    rax,QWORD PTR [rsp+0xce0]
  403af2:	lea    rcx,[rip+0xb387]        # 40ee80 <getopt_long_only@@Base+0x1d20>
  403af9:	mov    edx,DWORD PTR [rcx+rax*4]
  403afc:	mov    DWORD PTR [rsp],0x0
  403b03:	mov    ecx,0x2
  403b08:	xor    r9d,r9d
  403b0b:	lea    rdi,[rip+0xebbf]        # 4126d1 <getopt_long_only@@Base+0x5571>
  403b12:	mov    rsi,QWORD PTR [rsp+0xa8]
  403b1a:	lea    r8,[rsp+0x40]
  403b1f:	call   4020d0 <Mat_VarCreate@plt>
  403b24:	mov    r12,r15
  403b27:	mov    r15,rax
  403b2a:	movzx  edx,BYTE PTR [rip+0x1292b]        # 41645c <optopt@@Base+0x24>
  403b31:	mov    rdi,r14
  403b34:	mov    rsi,rax
  403b37:	call   4020f0 <Mat_VarWrite@plt>
  403b3c:	mov    ebx,eax
  403b3e:	mov    rdi,r15
  403b41:	mov    r15,r12
  403b44:	call   402240 <Mat_VarFree@plt>
  403b49:	mov    rdi,r14
  403b4c:	call   4022a0 <Mat_Close@plt>
  403b51:	add    r15d,0x1
  403b55:	add    DWORD PTR [rsp+0x3c],ebx
  403b59:	jmp    403a85 <Mat_VarRead@plt+0x16f5>
  403b5e:	mov    rbx,QWORD PTR [rsp+0x30]
  403b63:	jmp    405114 <Mat_VarRead@plt+0x2d84>
  403b68:	mov    rdi,QWORD PTR [rsp+0x28]
  403b6d:	test   rdi,rdi
  403b70:	lea    rax,[rip+0xb4d2]        # 40f049 <getopt_long_only@@Base+0x1ee9>
  403b77:	cmove  rdi,rax
  403b7b:	mov    edx,DWORD PTR [rip+0x1179f]        # 415320 <getopt_long_only@@Base+0x81c0>
  403b81:	xor    esi,esi
  403b83:	mov    QWORD PTR [rsp+0x28],rdi
  403b88:	call   402310 <Mat_CreateVer@plt>
  403b8d:	test   rax,rax
  403b90:	je     403cda <Mat_VarRead@plt+0x194a>
  403b96:	mov    rbx,rax
  403b99:	vmovdqa xmm0,XMMWORD PTR [rip+0xa56f]        # 40e110 <getopt_long_only@@Base+0xfb0>
  403ba1:	vmovdqa XMMWORD PTR [rsp+0x40],xmm0
  403ba7:	mov    DWORD PTR [rsp],0x1
  403bae:	mov    esi,0x4
  403bb3:	mov    edx,0x2
  403bb8:	mov    ecx,0x2
  403bbd:	lea    rdi,[rip+0xc519]        # 4100dd <getopt_long_only@@Base+0x2f7d>
  403bc4:	lea    r8,[rsp+0x40]
  403bc9:	lea    r9,[rip+0xeb07]        # 4126d7 <getopt_long_only@@Base+0x5577>
  403bd0:	jmp    403ca7 <Mat_VarRead@plt+0x1917>
  403bd5:	vmovdqa xmm0,XMMWORD PTR [rip+0xa603]        # 40e1e0 <getopt_long_only@@Base+0x1080>
  403bdd:	vmovdqa XMMWORD PTR [rsp+0x40],xmm0
  403be3:	mov    al,BYTE PTR [rsp+0x27]
  403be7:	cmp    al,0x9
  403be9:	ja     405109 <Mat_VarRead@plt+0x2d79>
  403bef:	movzx  eax,al
  403bf2:	lea    rcx,[rip+0xaa27]        # 40e620 <getopt_long_only@@Base+0x14c0>
  403bf9:	movsxd rax,DWORD PTR [rcx+rax*4]
  403bfd:	add    rax,rcx
  403c00:	jmp    rax
  403c02:	mov    DWORD PTR [rsp],0x0
  403c09:	mov    esi,0x6
  403c0e:	mov    edx,0x9
  403c13:	mov    ecx,0x2
  403c18:	lea    rdi,[rip+0xc4be]        # 4100dd <getopt_long_only@@Base+0x2f7d>
  403c1f:	lea    r8,[rsp+0x40]
  403c24:	lea    r9,[rsp+0x8c0]
  403c2c:	jmp    4050dc <Mat_VarRead@plt+0x2d4c>
  403c31:	mov    rdi,QWORD PTR [rsp+0x28]
  403c36:	test   rdi,rdi
  403c39:	lea    rax,[rip+0xb41d]        # 40f05d <getopt_long_only@@Base+0x1efd>
  403c40:	cmove  rdi,rax
  403c44:	vmovdqa xmm0,XMMWORD PTR [rip+0xa564]        # 40e1b0 <getopt_long_only@@Base+0x1050>
  403c4c:	vmovdqa XMMWORD PTR [rsp+0x1160],xmm0
  403c55:	mov    edx,DWORD PTR [rip+0x116c5]        # 415320 <getopt_long_only@@Base+0x81c0>
  403c5b:	xor    esi,esi
  403c5d:	mov    QWORD PTR [rsp+0x28],rdi
  403c62:	call   402310 <Mat_CreateVer@plt>
  403c67:	test   rax,rax
  403c6a:	je     403cda <Mat_VarRead@plt+0x194a>
  403c6c:	mov    rbx,rax
  403c6f:	vmovdqa xmm0,XMMWORD PTR [rip+0xa4b9]        # 40e130 <getopt_long_only@@Base+0xfd0>
  403c77:	vmovdqa XMMWORD PTR [rsp+0x40],xmm0
  403c7d:	mov    DWORD PTR [rsp],0x1
  403c84:	mov    esi,0x4
  403c89:	mov    edx,0x11
  403c8e:	mov    ecx,0x2
  403c93:	lea    rdi,[rip+0xc443]        # 4100dd <getopt_long_only@@Base+0x2f7d>
  403c9a:	lea    r8,[rsp+0x40]
  403c9f:	lea    r9,[rsp+0x1160]
  403ca7:	call   4020d0 <Mat_VarCreate@plt>
  403cac:	mov    r12,r15
  403caf:	mov    r15,rax
  403cb2:	movzx  edx,BYTE PTR [rip+0x127a3]        # 41645c <optopt@@Base+0x24>
  403cb9:	mov    rdi,rbx
  403cbc:	mov    rsi,rax
  403cbf:	call   4020f0 <Mat_VarWrite@plt>
  403cc4:	mov    r14d,eax
  403cc7:	mov    rdi,r15
  403cca:	mov    r15,r12
  403ccd:	call   402240 <Mat_VarFree@plt>
  403cd2:	mov    rdi,rbx
  403cd5:	jmp    404eea <Mat_VarRead@plt+0x2b5a>
  403cda:	mov    r14d,0x1
  403ce0:	jmp    404ef2 <Mat_VarRead@plt+0x2b62>
  403ce5:	mov    QWORD PTR [rsp+0x140],r14
  403ced:	mov    QWORD PTR [rsp+0x58],r15
  403cf2:	vmovdqa xmm0,XMMWORD PTR [rip+0xa446]        # 40e140 <getopt_long_only@@Base+0xfe0>
  403cfa:	vmovdqa XMMWORD PTR [rsp+0xc0],xmm0
  403d03:	lea    rax,[rsp+0x1c0]
  403d0b:	mov    r10,rax
  403d0e:	lea    rax,[rsp+0x150]
  403d16:	mov    rbx,rax
  403d19:	lea    rax,[rsp+0x3c0]
  403d21:	mov    r9,rax
  403d24:	lea    r11,[rsp+0x260]
  403d2c:	lea    rax,[rsp+0xd00]
  403d34:	mov    QWORD PTR [rsp+0x148],rax
  403d3c:	lea    rax,[rsp+0x620]
  403d44:	mov    QWORD PTR [rsp+0x198],rax
  403d4c:	lea    rax,[rsp+0xe60]
  403d54:	mov    QWORD PTR [rsp+0x190],rax
  403d5c:	lea    r12,[rsp+0xa60]
  403d64:	lea    r13,[rsp+0xc00]
  403d6c:	lea    r15,[rsp+0x8c0]
  403d74:	xor    r14d,r14d
  403d77:	nop    WORD PTR [rax+rax*1+0x0]
  403d80:	movzx  eax,BYTE PTR [rsp+0x27]
  403d85:	cmp    al,0x9
  403d87:	ja     404048 <Mat_VarRead@plt+0x1cb8>
  403d8d:	movzx  eax,al
  403d90:	lea    rcx,[rip+0xa861]        # 40e5f8 <getopt_long_only@@Base+0x1498>
  403d97:	movsxd rax,DWORD PTR [rcx+rax*4]
  403d9b:	add    rax,rcx
  403d9e:	mov    QWORD PTR [rsp+0x100],r10
  403da6:	mov    QWORD PTR [rsp+0xb8],rbx
  403dae:	mov    QWORD PTR [rsp+0x110],r9
  403db6:	mov    QWORD PTR [rsp+0x120],r11
  403dbe:	jmp    rax
  403dc0:	mov    DWORD PTR [rsp],0x0
  403dc7:	mov    esi,0x6
  403dcc:	mov    edx,0x9
  403dd1:	mov    ecx,0x2
  403dd6:	lea    rdi,[rip+0xc300]        # 4100dd <getopt_long_only@@Base+0x2f7d>
  403ddd:	lea    r8,[rsp+0xc0]
  403de5:	mov    r9,r15
  403de8:	jmp    403f90 <Mat_VarRead@plt+0x1c00>
  403ded:	mov    DWORD PTR [rsp],0x0
  403df4:	mov    esi,0xa
  403df9:	mov    edx,0x3
  403dfe:	mov    ecx,0x2
  403e03:	lea    rdi,[rip+0xc2d3]        # 4100dd <getopt_long_only@@Base+0x2f7d>
  403e0a:	lea    r8,[rsp+0xc0]
  403e12:	mov    r9,r11
  403e15:	jmp    403f90 <Mat_VarRead@plt+0x1c00>
  403e1a:	mov    DWORD PTR [rsp],0x0
  403e21:	mov    esi,0x8
  403e26:	mov    edx,0x1
  403e2b:	mov    ecx,0x2
  403e30:	lea    rdi,[rip+0xc2a6]        # 4100dd <getopt_long_only@@Base+0x2f7d>
  403e37:	lea    r8,[rsp+0xc0]
  403e3f:	mov    r9,rbx
  403e42:	jmp    403f90 <Mat_VarRead@plt+0x1c00>
  403e47:	mov    DWORD PTR [rsp],0x0
  403e4e:	mov    esi,0xf
  403e53:	mov    edx,0xd
  403e58:	mov    ecx,0x2
  403e5d:	lea    rdi,[rip+0xc279]        # 4100dd <getopt_long_only@@Base+0x2f7d>
  403e64:	lea    r8,[rsp+0xc0]
  403e6c:	mov    r9,QWORD PTR [rsp+0x190]
  403e74:	jmp    403f90 <Mat_VarRead@plt+0x1c00>
  403e79:	mov    DWORD PTR [rsp],0x0
  403e80:	mov    esi,0x7
  403e85:	mov    edx,0x7
  403e8a:	mov    ecx,0x2
  403e8f:	lea    rdi,[rip+0xc247]        # 4100dd <getopt_long_only@@Base+0x2f7d>
  403e96:	lea    r8,[rsp+0xc0]
  403e9e:	mov    r9,r13
  403ea1:	jmp    403f90 <Mat_VarRead@plt+0x1c00>
  403ea6:	mov    DWORD PTR [rsp],0x0
  403ead:	mov    esi,0x9
  403eb2:	mov    edx,0x2
  403eb7:	mov    ecx,0x2
  403ebc:	lea    rdi,[rip+0xc21a]        # 4100dd <getopt_long_only@@Base+0x2f7d>
  403ec3:	lea    r8,[rsp+0xc0]
  403ecb:	mov    r9,r10
  403ece:	jmp    403f90 <Mat_VarRead@plt+0x1c00>
  403ed3:	mov    DWORD PTR [rsp],0x0
  403eda:	mov    esi,0xd
  403edf:	mov    edx,0x6
  403ee4:	mov    ecx,0x2
  403ee9:	lea    rdi,[rip+0xc1ed]        # 4100dd <getopt_long_only@@Base+0x2f7d>
  403ef0:	lea    r8,[rsp+0xc0]
  403ef8:	mov    r9,QWORD PTR [rsp+0x148]
  403f00:	jmp    403f90 <Mat_VarRead@plt+0x1c00>
  403f05:	mov    DWORD PTR [rsp],0x0
  403f0c:	mov    esi,0xb
  403f11:	mov    edx,0x4
  403f16:	mov    ecx,0x2
  403f1b:	lea    rdi,[rip+0xc1bb]        # 4100dd <getopt_long_only@@Base+0x2f7d>
  403f22:	lea    r8,[rsp+0xc0]
  403f2a:	jmp    403f90 <Mat_VarRead@plt+0x1c00>
  403f2c:	mov    DWORD PTR [rsp],0x0
  403f33:	mov    esi,0xc
  403f38:	mov    edx,0x5
  403f3d:	mov    ecx,0x2
  403f42:	lea    rdi,[rip+0xc194]        # 4100dd <getopt_long_only@@Base+0x2f7d>
  403f49:	lea    r8,[rsp+0xc0]
  403f51:	mov    r9,QWORD PTR [rsp+0x198]
  403f59:	jmp    403f90 <Mat_VarRead@plt+0x1c00>
  403f5b:	mov    DWORD PTR [rsp],0x0
  403f62:	mov    esi,0xe
  403f67:	mov    edx,0xc
  403f6c:	mov    ecx,0x2
  403f71:	lea    rdi,[rip+0xc165]        # 4100dd <getopt_long_only@@Base+0x2f7d>
  403f78:	lea    r8,[rsp+0xc0]
  403f80:	mov    r9,r12
  403f83:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403f8d:	nop    DWORD PTR [rax]
  403f90:	vzeroupper 
  403f93:	call   4020d0 <Mat_VarCreate@plt>
  403f98:	mov    rbx,rax
  403f9b:	movzx  edx,BYTE PTR [rip+0x124ba]        # 41645c <optopt@@Base+0x24>
  403fa2:	mov    rdi,QWORD PTR [rsp+0x140]
  403faa:	mov    rsi,rax
  403fad:	mov    ecx,DWORD PTR [rsp+0x118]
  403fb4:	call   402140 <Mat_VarWriteAppend@plt>
  403fb9:	mov    rdi,rbx
  403fbc:	call   402240 <Mat_VarFree@plt>
  403fc1:	add    r14,0x1
  403fc5:	add    r15,0x50
  403fc9:	add    r13,0x28
  403fcd:	add    r12,0x50
  403fd1:	add    QWORD PTR [rsp+0x190],0x50
  403fda:	add    QWORD PTR [rsp+0x198],0x28
  403fe3:	add    QWORD PTR [rsp+0x148],0x28
  403fec:	mov    r11,QWORD PTR [rsp+0x120]
  403ff4:	add    r11,0x14
  403ff8:	mov    r9,QWORD PTR [rsp+0x110]
  404000:	add    r9,0x14
  404004:	mov    rbx,QWORD PTR [rsp+0xb8]
  40400c:	add    rbx,0xa
  404010:	mov    r10,QWORD PTR [rsp+0x100]
  404018:	add    r10,0xa
  40401c:	cmp    r14,0x5
  404020:	jb     403d80 <Mat_VarRead@plt+0x19f0>
  404026:	xor    r12d,r12d
  404029:	mov    rbx,QWORD PTR [rsp+0x30]
  40402e:	mov    r15,QWORD PTR [rsp+0x58]
  404033:	lea    r13,[rsp+0x440]
  40403b:	mov    r14,QWORD PTR [rsp+0x140]
  404043:	jmp    405109 <Mat_VarRead@plt+0x2d79>
  404048:	mov    rdi,QWORD PTR [rsp+0x140]
  404050:	vzeroupper 
  404053:	call   4022a0 <Mat_Close@plt>
  404058:	mov    rbx,QWORD PTR [rsp+0x30]
  40405d:	mov    r15,QWORD PTR [rsp+0x58]
  404062:	lea    r13,[rsp+0x440]
  40406a:	mov    r12d,0x1
  404070:	jmp    405114 <Mat_VarRead@plt+0x2d84>
  404075:	mov    QWORD PTR [rsp+0x58],r15
  40407a:	mov    rdi,QWORD PTR [rsp+0x28]
  40407f:	test   rdi,rdi
  404082:	lea    rax,[rip+0xaffa]        # 40f083 <getopt_long_only@@Base+0x1f23>
  404089:	cmove  rdi,rax
  40408d:	vpxor  xmm0,xmm0,xmm0
  404091:	vmovdqa YMMWORD PTR [rsp+0xc0],ymm0
  40409a:	mov    QWORD PTR [rsp+0xe0],0x0
  4040a6:	mov    rax,QWORD PTR [rip+0xa5f3]        # 40e6a0 <getopt_long_only@@Base+0x1540>
  4040ad:	mov    QWORD PTR [rsp+0x1170],rax
  4040b5:	vmovdqa xmm0,XMMWORD PTR [rip+0xa5d3]        # 40e690 <getopt_long_only@@Base+0x1530>
  4040bd:	vmovdqa XMMWORD PTR [rsp+0x1160],xmm0
  4040c6:	mov    edx,DWORD PTR [rip+0x11254]        # 415320 <getopt_long_only@@Base+0x81c0>
  4040cc:	xor    esi,esi
  4040ce:	mov    QWORD PTR [rsp+0x28],rdi
  4040d3:	vzeroupper 
  4040d6:	call   402310 <Mat_CreateVer@plt>
  4040db:	test   rax,rax
  4040de:	je     4053c9 <Mat_VarRead@plt+0x3039>
  4040e4:	mov    r14,rax
  4040e7:	mov    DWORD PTR [rsp],0x0
  4040ee:	xor    r15d,r15d
  4040f1:	mov    esi,0x6
  4040f6:	mov    edx,0x9
  4040fb:	mov    ecx,0x3
  404100:	xor    r9d,r9d
  404103:	lea    rdi,[rip+0xe637]        # 412741 <getopt_long_only@@Base+0x55e1>
  40410a:	lea    r13,[rsp+0x1160]
  404112:	mov    r8,r13
  404115:	call   4020d0 <Mat_VarCreate@plt>
  40411a:	mov    QWORD PTR [rsp+0xc0],rax
  404122:	movzx  edx,BYTE PTR [rip+0x12333]        # 41645c <optopt@@Base+0x24>
  404129:	mov    rdi,r14
  40412c:	mov    rsi,rax
  40412f:	call   4020f0 <Mat_VarWrite@plt>
  404134:	mov    DWORD PTR [rsp],0x800
  40413b:	mov    esi,0x6
  404140:	mov    edx,0x9
  404145:	mov    ecx,0x3
  40414a:	xor    r9d,r9d
  40414d:	lea    rdi,[rip+0xe5ec]        # 412740 <getopt_long_only@@Base+0x55e0>
  404154:	mov    r8,r13
  404157:	call   4020d0 <Mat_VarCreate@plt>
  40415c:	mov    QWORD PTR [rsp+0xc8],rax
  404164:	movzx  edx,BYTE PTR [rip+0x122f1]        # 41645c <optopt@@Base+0x24>
  40416b:	mov    rdi,r14
  40416e:	mov    rsi,rax
  404171:	call   4020f0 <Mat_VarWrite@plt>
  404176:	mov    DWORD PTR [rsp],0x0
  40417d:	mov    esi,0x4
  404182:	mov    edx,0x2
  404187:	mov    ecx,0x2
  40418c:	xor    r9d,r9d
  40418f:	lea    rdi,[rip+0xe5b2]        # 412748 <getopt_long_only@@Base+0x55e8>
  404196:	mov    r8,r13
  404199:	call   4020d0 <Mat_VarCreate@plt>
  40419e:	mov    QWORD PTR [rsp+0xd0],rax
  4041a6:	movzx  edx,BYTE PTR [rip+0x122af]        # 41645c <optopt@@Base+0x24>
  4041ad:	mov    rdi,r14
  4041b0:	mov    rsi,rax
  4041b3:	call   4020f0 <Mat_VarWrite@plt>
  4041b8:	mov    DWORD PTR [rsp],0x0
  4041bf:	mov    esi,0x2
  4041c4:	mov    edx,0x16
  4041c9:	mov    ecx,0x2
  4041ce:	xor    r9d,r9d
  4041d1:	lea    rdi,[rip+0xe57a]        # 412752 <getopt_long_only@@Base+0x55f2>
  4041d8:	mov    r8,r13
  4041db:	call   4020d0 <Mat_VarCreate@plt>
  4041e0:	mov    rbx,rax
  4041e3:	movzx  edx,BYTE PTR [rip+0x12272]        # 41645c <optopt@@Base+0x24>
  4041ea:	mov    rdi,r14
  4041ed:	mov    rsi,rax
  4041f0:	call   4020f0 <Mat_VarWrite@plt>
  4041f5:	mov    rdi,rbx
  4041f8:	call   402240 <Mat_VarFree@plt>
  4041fd:	mov    DWORD PTR [rsp],0x1
  404204:	mov    esi,0x2
  404209:	mov    edx,0x16
  40420e:	mov    ecx,0x3
  404213:	lea    rdi,[rip+0xe544]        # 41275e <getopt_long_only@@Base+0x55fe>
  40421a:	mov    r8,r13
  40421d:	lea    r12,[rsp+0xc0]
  404225:	mov    r9,r12
  404228:	call   4020d0 <Mat_VarCreate@plt>
  40422d:	mov    rbx,rax
  404230:	movzx  edx,BYTE PTR [rip+0x12225]        # 41645c <optopt@@Base+0x24>
  404237:	mov    rdi,r14
  40423a:	mov    rsi,rax
  40423d:	call   4020f0 <Mat_VarWrite@plt>
  404242:	mov    QWORD PTR [rbx+0x38],0x0
  40424a:	mov    rdi,rbx
  40424d:	call   402240 <Mat_VarFree@plt>
  404252:	mov    QWORD PTR [rsp+0x1160],0x1
  40425e:	mov    DWORD PTR [rsp],0x1
  404265:	mov    esi,0x2
  40426a:	mov    edx,0x16
  40426f:	mov    ecx,0x2
  404274:	lea    rdi,[rip+0xe4fc]        # 412777 <getopt_long_only@@Base+0x5617>
  40427b:	mov    r8,r13
  40427e:	mov    r9,r12
  404281:	call   4020d0 <Mat_VarCreate@plt>
  404286:	mov    rbx,rax
  404289:	movzx  edx,BYTE PTR [rip+0x121cc]        # 41645c <optopt@@Base+0x24>
  404290:	mov    rdi,r14
  404293:	mov    rsi,rax
  404296:	call   4020f0 <Mat_VarWrite@plt>
  40429b:	mov    QWORD PTR [rbx+0x38],0x0
  4042a3:	mov    rdi,rbx
  4042a6:	call   402240 <Mat_VarFree@plt>
  4042ab:	mov    QWORD PTR [rsp+0x1160],0x0
  4042b7:	mov    DWORD PTR [rsp],0x1
  4042be:	mov    esi,0x1
  4042c3:	mov    edx,0x15
  4042c8:	mov    ecx,0x2
  4042cd:	xor    r9d,r9d
  4042d0:	lea    rdi,[rip+0xe4b3]        # 41278a <getopt_long_only@@Base+0x562a>
  4042d7:	mov    r8,r13
  4042da:	call   4020d0 <Mat_VarCreate@plt>
  4042df:	mov    rbx,rax
  4042e2:	movzx  edx,BYTE PTR [rip+0x12173]        # 41645c <optopt@@Base+0x24>
  4042e9:	mov    rdi,r14
  4042ec:	mov    rsi,rax
  4042ef:	call   4020f0 <Mat_VarWrite@plt>
  4042f4:	mov    rdi,rbx
  4042f7:	call   402240 <Mat_VarFree@plt>
  4042fc:	mov    QWORD PTR [rsp+0x1160],0x3
  404308:	mov    DWORD PTR [rsp],0x1
  40430f:	mov    esi,0x1
  404314:	mov    edx,0x15
  404319:	mov    ecx,0x2
  40431e:	lea    rdi,[rip+0xe46f]        # 412794 <getopt_long_only@@Base+0x5634>
  404325:	mov    r8,r13
  404328:	lea    r13,[rsp+0x440]
  404330:	mov    r9,r12
  404333:	call   4020d0 <Mat_VarCreate@plt>
  404338:	mov    rbx,rax
  40433b:	movzx  edx,BYTE PTR [rip+0x1211a]        # 41645c <optopt@@Base+0x24>
  404342:	mov    rdi,r14
  404345:	mov    rsi,rax
  404348:	call   4020f0 <Mat_VarWrite@plt>
  40434d:	mov    QWORD PTR [rbx+0x38],0x0
  404355:	mov    rdi,rbx
  404358:	call   402240 <Mat_VarFree@plt>
  40435d:	mov    rdi,QWORD PTR [rsp+0xc0]
  404365:	call   402240 <Mat_VarFree@plt>
  40436a:	mov    rdi,QWORD PTR [rsp+0xc8]
  404372:	call   402240 <Mat_VarFree@plt>
  404377:	mov    rdi,QWORD PTR [rsp+0xd0]
  40437f:	call   402240 <Mat_VarFree@plt>
  404384:	mov    rdi,r14
  404387:	call   4022a0 <Mat_Close@plt>
  40438c:	jmp    4053cf <Mat_VarRead@plt+0x303f>
  404391:	mov    r12,r15
  404394:	vmovaps xmm0,XMMWORD PTR [rip+0x9d84]        # 40e120 <getopt_long_only@@Base+0xfc0>
  40439c:	vmovaps XMMWORD PTR [rsp+0x40],xmm0
  4043a2:	vmovaps ymm0,YMMWORD PTR [rip+0x9eb6]        # 40e260 <getopt_long_only@@Base+0x1100>
  4043aa:	vmovups YMMWORD PTR [rsp+0xa68],ymm0
  4043b3:	movabs rax,0x4018000000000000
  4043bd:	mov    QWORD PTR [rsp+0xa88],rax
  4043c5:	vmovaps ymm0,YMMWORD PTR [rip+0x9eb3]        # 40e280 <getopt_long_only@@Base+0x1120>
  4043cd:	vmovups YMMWORD PTR [rsp+0xa98],ymm0
  4043d6:	movabs rax,0x4028000000000000
  4043e0:	mov    QWORD PTR [rsp+0xab8],rax
  4043e8:	vmovaps ymm0,YMMWORD PTR [rip+0x9eb0]        # 40e2a0 <getopt_long_only@@Base+0x1140>
  4043f0:	vmovups YMMWORD PTR [rsp+0xac8],ymm0
  4043f9:	movabs rax,0x4032000000000000
  404403:	mov    QWORD PTR [rsp+0xae8],rax
  40440b:	movabs rax,0x4034000000000000
  404415:	mov    QWORD PTR [rsp+0xaf8],rax
  40441d:	vmovdqa ymm0,YMMWORD PTR [rip+0x9e9b]        # 40e2c0 <getopt_long_only@@Base+0x1160>
  404425:	vmovdqa YMMWORD PTR [rsp+0xb00],ymm0
  40442e:	movabs rax,0x7ff8000000000000
  404438:	mov    QWORD PTR [rsp+0xa60],rax
  404440:	mov    QWORD PTR [rsp+0xa90],rax
  404448:	mov    QWORD PTR [rsp+0xac0],rax
  404450:	mov    QWORD PTR [rsp+0xaf0],rax
  404458:	mov    QWORD PTR [rsp+0xb20],rax
  404460:	mov    edx,DWORD PTR [rip+0x10eba]        # 415320 <getopt_long_only@@Base+0x81c0>
  404466:	xor    esi,esi
  404468:	lea    rdi,[rip+0xe335]        # 4127a4 <getopt_long_only@@Base+0x5644>
  40446f:	jmp    404563 <Mat_VarRead@plt+0x21d3>
  404474:	mov    r12,r15
  404477:	mov    rdi,QWORD PTR [rsp+0x28]
  40447c:	test   rdi,rdi
  40447f:	lea    rax,[rip+0xac11]        # 40f097 <getopt_long_only@@Base+0x1f37>
  404486:	cmove  rdi,rax
  40448a:	vmovaps xmm0,XMMWORD PTR [rip+0x9c8e]        # 40e120 <getopt_long_only@@Base+0xfc0>
  404492:	vmovaps XMMWORD PTR [rsp+0x40],xmm0
  404498:	vmovaps ymm0,YMMWORD PTR [rip+0x9dc0]        # 40e260 <getopt_long_only@@Base+0x1100>
  4044a0:	vmovups YMMWORD PTR [rsp+0xa68],ymm0
  4044a9:	movabs rax,0x4018000000000000
  4044b3:	mov    QWORD PTR [rsp+0xa88],rax
  4044bb:	vmovaps ymm0,YMMWORD PTR [rip+0x9dbd]        # 40e280 <getopt_long_only@@Base+0x1120>
  4044c3:	vmovups YMMWORD PTR [rsp+0xa98],ymm0
  4044cc:	movabs rax,0x4028000000000000
  4044d6:	mov    QWORD PTR [rsp+0xab8],rax
  4044de:	vmovaps ymm0,YMMWORD PTR [rip+0x9dba]        # 40e2a0 <getopt_long_only@@Base+0x1140>
  4044e6:	vmovups YMMWORD PTR [rsp+0xac8],ymm0
  4044ef:	movabs rax,0x4032000000000000
  4044f9:	mov    QWORD PTR [rsp+0xae8],rax
  404501:	movabs rax,0x4034000000000000
  40450b:	mov    QWORD PTR [rsp+0xaf8],rax
  404513:	vmovdqa ymm0,YMMWORD PTR [rip+0x9da5]        # 40e2c0 <getopt_long_only@@Base+0x1160>
  40451b:	vmovdqa YMMWORD PTR [rsp+0xb00],ymm0
  404524:	movabs rax,0x7ff0000000000000
  40452e:	mov    QWORD PTR [rsp+0xa60],rax
  404536:	mov    QWORD PTR [rsp+0xa90],rax
  40453e:	mov    QWORD PTR [rsp+0xac0],rax
  404546:	mov    QWORD PTR [rsp+0xaf0],rax
  40454e:	mov    QWORD PTR [rsp+0xb20],rax
  404556:	mov    edx,DWORD PTR [rip+0x10dc4]        # 415320 <getopt_long_only@@Base+0x81c0>
  40455c:	xor    esi,esi
  40455e:	mov    QWORD PTR [rsp+0x28],rdi
  404563:	vzeroupper 
  404566:	call   402310 <Mat_CreateVer@plt>
  40456b:	test   rax,rax
  40456e:	je     4045c7 <Mat_VarRead@plt+0x2237>
  404570:	mov    rbx,rax
  404573:	mov    DWORD PTR [rsp],0x1
  40457a:	mov    esi,0x6
  40457f:	mov    edx,0x9
  404584:	mov    ecx,0x2
  404589:	lea    rdi,[rip+0xae96]        # 40f426 <getopt_long_only@@Base+0x22c6>
  404590:	lea    r8,[rsp+0x40]
  404595:	lea    r9,[rsp+0xa60]
  40459d:	call   4020d0 <Mat_VarCreate@plt>
  4045a2:	mov    r14,rax
  4045a5:	xor    r15d,r15d
  4045a8:	xor    edx,edx
  4045aa:	mov    rdi,rbx
  4045ad:	mov    rsi,rax
  4045b0:	call   4020f0 <Mat_VarWrite@plt>
  4045b5:	mov    rdi,r14
  4045b8:	call   402240 <Mat_VarFree@plt>
  4045bd:	mov    rdi,rbx
  4045c0:	call   4022a0 <Mat_Close@plt>
  4045c5:	jmp    4045cd <Mat_VarRead@plt+0x223d>
  4045c7:	mov    r15d,0x1
  4045cd:	mov    rbx,QWORD PTR [rsp+0x30]
  4045d2:	add    r12d,0x1
  4045d6:	add    DWORD PTR [rsp+0x3c],r15d
  4045db:	mov    r15,r12
  4045de:	cmp    r15d,DWORD PTR [rsp+0x128]
  4045e6:	jl     4028a0 <Mat_VarRead@plt+0x510>
  4045ec:	jmp    40c229 <Mat_VarRead@plt+0x9e99>
  4045f1:	lea    rax,[rsp+0xc00]
  4045f9:	mov    QWORD PTR [rsp+0x60],rax
  4045fe:	lea    rax,[rsp+0x1000]
  404606:	mov    QWORD PTR [rsp+0x68],rax
  40460b:	mov    DWORD PTR [rsp+0xb0],0x7
  404616:	jmp    404755 <Mat_VarRead@plt+0x23c5>
  40461b:	lea    rax,[rsp+0x150]
  404623:	mov    QWORD PTR [rsp+0x60],rax
  404628:	lea    rax,[rsp+0x1c0]
  404630:	mov    QWORD PTR [rsp+0x68],rax
  404635:	mov    DWORD PTR [rsp+0xb0],0x1
  404640:	jmp    404755 <Mat_VarRead@plt+0x23c5>
  404645:	lea    rax,[rsp+0x220]
  40464d:	mov    QWORD PTR [rsp+0x60],rax
  404652:	lea    rax,[rsp+0x2e0]
  40465a:	mov    QWORD PTR [rsp+0x68],rax
  40465f:	mov    DWORD PTR [rsp+0xb0],0x2
  40466a:	jmp    404755 <Mat_VarRead@plt+0x23c5>
  40466f:	lea    rax,[rsp+0x260]
  404677:	mov    QWORD PTR [rsp+0x60],rax
  40467c:	lea    rax,[rsp+0x3c0]
  404684:	mov    QWORD PTR [rsp+0x68],rax
  404689:	mov    DWORD PTR [rsp+0xb0],0x3
  404694:	jmp    404755 <Mat_VarRead@plt+0x23c5>
  404699:	lea    rax,[rsp+0x340]
  4046a1:	mov    QWORD PTR [rsp+0x60],rax
  4046a6:	lea    rax,[rsp+0xde0]
  4046ae:	mov    QWORD PTR [rsp+0x68],rax
  4046b3:	mov    DWORD PTR [rsp+0xb0],0x4
  4046be:	jmp    404755 <Mat_VarRead@plt+0x23c5>
  4046c3:	lea    rax,[rsp+0x620]
  4046cb:	mov    QWORD PTR [rsp+0x60],rax
  4046d0:	lea    rax,[rsp+0xd00]
  4046d8:	mov    QWORD PTR [rsp+0x68],rax
  4046dd:	mov    DWORD PTR [rsp+0xb0],0x5
  4046e8:	jmp    404755 <Mat_VarRead@plt+0x23c5>
  4046ea:	lea    rax,[rsp+0x700]
  4046f2:	mov    QWORD PTR [rsp+0x60],rax
  4046f7:	lea    rax,[rsp+0x7e0]
  4046ff:	mov    QWORD PTR [rsp+0x68],rax
  404704:	mov    DWORD PTR [rsp+0xb0],0x6
  40470f:	jmp    404755 <Mat_VarRead@plt+0x23c5>
  404711:	lea    rax,[rsp+0xa60]
  404719:	mov    QWORD PTR [rsp+0x60],rax
  40471e:	lea    rax,[rsp+0xe60]
  404726:	mov    QWORD PTR [rsp+0x68],rax
  40472b:	mov    DWORD PTR [rsp+0xb0],0xc
  404736:	jmp    404755 <Mat_VarRead@plt+0x23c5>
  404738:	lea    rax,[rsp+0x1cc0]
  404740:	mov    QWORD PTR [rsp+0x60],rax
  404745:	mov    QWORD PTR [rsp+0x68],r13
  40474a:	mov    DWORD PTR [rsp+0xb0],0xd
  404755:	mov    eax,DWORD PTR [rsp+0xb4]
  40475c:	test   eax,eax
  40475e:	je     404b22 <Mat_VarRead@plt+0x2792>
  404764:	cmp    eax,0x2
  404767:	je     404b8e <Mat_VarRead@plt+0x27fe>
  40476d:	cmp    eax,0x1
  404770:	jne    404ee7 <Mat_VarRead@plt+0x2b57>
  404776:	mov    QWORD PTR [rsp+0x218],r12
  40477e:	mov    QWORD PTR [rsp+0x58],r15
  404783:	vmovaps xmm0,XMMWORD PTR [rip+0x99c5]        # 40e150 <getopt_long_only@@Base+0xff0>
  40478b:	vmovaps XMMWORD PTR [rsp+0xc0],xmm0
  404794:	lea    rax,[rsp+0x8c0]
  40479c:	mov    r12,rax
  40479f:	lea    rax,[rsp+0x1160]
  4047a7:	mov    r15,rax
  4047aa:	lea    rax,[rsp+0xc00]
  4047b2:	mov    rdx,rax
  4047b5:	lea    rax,[rsp+0x1000]
  4047bd:	mov    QWORD PTR [rsp+0x120],rax
  4047c5:	lea    rax,[rsp+0x620]
  4047cd:	mov    QWORD PTR [rsp+0x118],rax
  4047d5:	lea    rax,[rsp+0xd00]
  4047dd:	mov    QWORD PTR [rsp+0x148],rax
  4047e5:	lea    rax,[rsp+0x700]
  4047ed:	mov    QWORD PTR [rsp+0x198],rax
  4047f5:	lea    rax,[rsp+0x7e0]
  4047fd:	mov    QWORD PTR [rsp+0x190],rax
  404805:	lea    rax,[rsp+0x260]
  40480d:	mov    QWORD PTR [rsp+0x140],rax
  404815:	lea    rax,[rsp+0x3c0]
  40481d:	mov    QWORD PTR [rsp+0x210],rax
  404825:	lea    rdi,[rsp+0x340]
  40482d:	mov    QWORD PTR [rsp+0x208],rdi
  404835:	lea    rbx,[rsp+0xde0]
  40483d:	mov    QWORD PTR [rsp+0x200],rbx
  404845:	lea    rax,[rsp+0x150]
  40484d:	mov    QWORD PTR [rsp+0x618],rax
  404855:	lea    rcx,[rsp+0x1c0]
  40485d:	mov    QWORD PTR [rsp+0x610],rcx
  404865:	lea    r8,[rsp+0x220]
  40486d:	mov    QWORD PTR [rsp+0x608],r8
  404875:	lea    r9,[rsp+0x2e0]
  40487d:	mov    QWORD PTR [rsp+0x600],r9
  404885:	lea    r10,[rsp+0xa60]
  40488d:	mov    QWORD PTR [rsp+0x5f8],r10
  404895:	lea    r11,[rsp+0xe60]
  40489d:	mov    QWORD PTR [rsp+0x5f0],r11
  4048a5:	lea    r14,[rsp+0x1cc0]
  4048ad:	mov    QWORD PTR [rsp+0x5e8],r14
  4048b5:	mov    rcx,r13
  4048b8:	xor    eax,eax
  4048ba:	mov    esi,0x1
  4048bf:	nop
  4048c0:	mov    QWORD PTR [rsp+0x110],rdx
  4048c8:	mov    QWORD PTR [rsp+0xb8],r15
  4048d0:	mov    QWORD PTR [rsp+0x100],r12
  4048d8:	add    rax,0x1
  4048dc:	mov    QWORD PTR [rsp+0xcf8],rax
  4048e4:	xor    r12d,r12d
  4048e7:	mov    QWORD PTR [rsp+0xcf0],rsi
  4048ef:	mov    r13,rsi
  4048f2:	mov    r8,QWORD PTR [rsp+0x200]
  4048fa:	mov    rbx,QWORD PTR [rsp+0x618]
  404902:	mov    r15,QWORD PTR [rsp+0x610]
  40490a:	mov    rax,QWORD PTR [rsp+0x608]
  404912:	mov    r9,QWORD PTR [rsp+0x600]
  40491a:	mov    r10,QWORD PTR [rsp+0x5f8]
  404922:	mov    r11,QWORD PTR [rsp+0x5f0]
  40492a:	mov    r14,QWORD PTR [rsp+0x5e8]
  404932:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40493c:	nop    DWORD PTR [rax+0x0]
  404940:	vcvtsi2sd xmm0,xmm1,r13d
  404945:	mov    rdx,QWORD PTR [rsp+0x100]
  40494d:	vmovsd QWORD PTR [rdx+r12*8],xmm0
  404953:	lea    rdx,[r13+0x32]
  404957:	vcvtsi2sd xmm0,xmm1,edx
  40495b:	mov    rsi,QWORD PTR [rsp+0xb8]
  404963:	vmovsd QWORD PTR [rsi+r12*8],xmm0
  404969:	vcvtsi2ss xmm0,xmm1,r13d
  40496e:	mov    rsi,QWORD PTR [rsp+0x110]
  404976:	vmovss DWORD PTR [rsi+r12*4],xmm0
  40497c:	vcvtsi2ss xmm0,xmm1,edx
  404980:	lea    esi,[r13+0x32]
  404984:	mov    rdi,QWORD PTR [rsp+0x210]
  40498c:	mov    WORD PTR [rdi+r12*2],si
  404991:	mov    WORD PTR [r8+r12*2],si
  404996:	mov    BYTE PTR [r15+r12*1],sil
  40499a:	mov    BYTE PTR [r9+r12*1],sil
  40499e:	mov    rsi,QWORD PTR [rsp+0x120]
  4049a6:	vmovd  DWORD PTR [rsi+r12*4],xmm0
  4049ac:	mov    rsi,QWORD PTR [rsp+0x148]
  4049b4:	mov    DWORD PTR [rsi+r12*4],edx
  4049b8:	mov    rsi,QWORD PTR [rsp+0x190]
  4049c0:	mov    DWORD PTR [rsi+r12*4],edx
  4049c4:	mov    QWORD PTR [r11+r12*8],rdx
  4049c8:	mov    QWORD PTR [rcx+r12*8],rdx
  4049cc:	mov    rdx,QWORD PTR [rsp+0x118]
  4049d4:	mov    DWORD PTR [rdx+r12*4],r13d
  4049d8:	mov    rdx,QWORD PTR [rsp+0x198]
  4049e0:	mov    DWORD PTR [rdx+r12*4],r13d
  4049e4:	mov    rdx,QWORD PTR [rsp+0x140]
  4049ec:	mov    WORD PTR [rdx+r12*2],r13w
  4049f1:	mov    rdx,QWORD PTR [rsp+0x208]
  4049f9:	mov    WORD PTR [rdx+r12*2],r13w
  4049fe:	mov    BYTE PTR [rbx+r12*1],r13b
  404a02:	mov    BYTE PTR [rax+r12*1],r13b
  404a06:	mov    QWORD PTR [r10+r12*8],r13
  404a0a:	mov    QWORD PTR [r14+r12*8],r13
  404a0e:	add    r13,0x5
  404a12:	add    r12,0x1
  404a16:	cmp    r12,0xa
  404a1a:	jne    404940 <Mat_VarRead@plt+0x25b0>
  404a20:	mov    rsi,QWORD PTR [rsp+0xcf0]
  404a28:	add    rsi,0x1
  404a2c:	mov    r13,rcx
  404a2f:	add    r13,0x50
  404a33:	add    r14,0x50
  404a37:	mov    QWORD PTR [rsp+0x5e8],r14
  404a3f:	add    r11,0x50
  404a43:	mov    QWORD PTR [rsp+0x5f0],r11
  404a4b:	add    r10,0x50
  404a4f:	mov    QWORD PTR [rsp+0x5f8],r10
  404a57:	add    r9,0xa
  404a5b:	mov    QWORD PTR [rsp+0x600],r9
  404a63:	add    rax,0xa
  404a67:	mov    QWORD PTR [rsp+0x608],rax
  404a6f:	add    r15,0xa
  404a73:	mov    QWORD PTR [rsp+0x610],r15
  404a7b:	add    rbx,0xa
  404a7f:	mov    QWORD PTR [rsp+0x618],rbx
  404a87:	add    r8,0x14
  404a8b:	mov    QWORD PTR [rsp+0x200],r8
  404a93:	add    QWORD PTR [rsp+0x208],0x14
  404a9c:	add    QWORD PTR [rsp+0x210],0x14
  404aa5:	add    QWORD PTR [rsp+0x140],0x14
  404aae:	add    QWORD PTR [rsp+0x190],0x28
  404ab7:	add    QWORD PTR [rsp+0x198],0x28
  404ac0:	add    QWORD PTR [rsp+0x148],0x28
  404ac9:	add    QWORD PTR [rsp+0x118],0x28
  404ad2:	add    QWORD PTR [rsp+0x120],0x28
  404adb:	mov    rdi,QWORD PTR [rsp+0x110]
  404ae3:	add    rdi,0x28
  404ae7:	mov    rdx,QWORD PTR [rsp+0xb8]
  404aef:	add    rdx,0x50
  404af3:	mov    rcx,QWORD PTR [rsp+0x100]
  404afb:	add    rcx,0x50
  404aff:	mov    rax,QWORD PTR [rsp+0xcf8]
  404b07:	cmp    rax,0x5
  404b0b:	mov    r12,rcx
  404b0e:	mov    r15,rdx
  404b11:	mov    rdx,rdi
  404b14:	mov    rcx,r13
  404b17:	jne    4048c0 <Mat_VarRead@plt+0x2530>
  404b1d:	jmp    404bac <Mat_VarRead@plt+0x281c>
  404b22:	vmovdqa xmm0,XMMWORD PTR [rip+0x96b6]        # 40e1e0 <getopt_long_only@@Base+0x1080>
  404b2a:	vmovdqa XMMWORD PTR [rsp+0x40],xmm0
  404b30:	mov    DWORD PTR [rsp],0x800
  404b37:	mov    ecx,0x2
  404b3c:	lea    rdi,[rip+0xb59a]        # 4100dd <getopt_long_only@@Base+0x2f7d>
  404b43:	mov    rsi,QWORD PTR [rsp+0xa8]
  404b4b:	mov    edx,DWORD PTR [rsp+0xb0]
  404b52:	lea    r8,[rsp+0x40]
  404b57:	lea    r9,[rsp+0x60]
  404b5c:	vzeroupper 
  404b5f:	call   4020d0 <Mat_VarCreate@plt>
  404b64:	mov    rbx,rax
  404b67:	movzx  edx,BYTE PTR [rip+0x118ee]        # 41645c <optopt@@Base+0x24>
  404b6e:	mov    rdi,r12
  404b71:	mov    rsi,rax
  404b74:	call   4020f0 <Mat_VarWrite@plt>
  404b79:	mov    r14d,eax
  404b7c:	mov    rdi,rbx
  404b7f:	call   402240 <Mat_VarFree@plt>
  404b84:	mov    rbx,QWORD PTR [rsp+0x30]
  404b89:	jmp    404eb0 <Mat_VarRead@plt+0x2b20>
  404b8e:	mov    QWORD PTR [rsp+0x218],r12
  404b96:	mov    QWORD PTR [rsp+0x58],r15
  404b9b:	vmovdqa xmm0,XMMWORD PTR [rip+0x959d]        # 40e140 <getopt_long_only@@Base+0xfe0>
  404ba3:	vmovdqa XMMWORD PTR [rsp+0xc0],xmm0
  404bac:	lea    rax,[rsp+0x220]
  404bb4:	mov    rdx,rax
  404bb7:	lea    rax,[rsp+0x2e0]
  404bbf:	mov    r11,rax
  404bc2:	lea    rax,[rsp+0x150]
  404bca:	mov    r10,rax
  404bcd:	lea    rax,[rsp+0x1c0]
  404bd5:	mov    r9,rax
  404bd8:	lea    rax,[rsp+0x340]
  404be0:	mov    rcx,rax
  404be3:	lea    rax,[rsp+0xde0]
  404beb:	mov    rbx,rax
  404bee:	lea    rax,[rsp+0x260]
  404bf6:	mov    rdi,rax
  404bf9:	lea    rax,[rsp+0x3c0]
  404c01:	mov    rsi,rax
  404c04:	lea    rax,[rsp+0x700]
  404c0c:	mov    QWORD PTR [rsp+0x140],rax
  404c14:	lea    rax,[rsp+0x7e0]
  404c1c:	mov    QWORD PTR [rsp+0x210],rax
  404c24:	lea    rax,[rsp+0x620]
  404c2c:	mov    QWORD PTR [rsp+0x208],rax
  404c34:	lea    rax,[rsp+0xd00]
  404c3c:	mov    QWORD PTR [rsp+0x200],rax
  404c44:	lea    r14,[rsp+0xc00]
  404c4c:	lea    r15,[rsp+0x1000]
  404c54:	xor    r12d,r12d
  404c57:	xor    r13d,r13d
  404c5a:	nop    WORD PTR [rax+rax*1+0x0]
  404c60:	cmp    BYTE PTR [rsp+0x27],0x9
  404c65:	ja     404ebd <Mat_VarRead@plt+0x2b2d>
  404c6b:	lea    rax,[rip+0x995e]        # 40e5d0 <getopt_long_only@@Base+0x1470>
  404c72:	mov    r8,rax
  404c75:	mov    rax,QWORD PTR [rsp+0xce8]
  404c7d:	movsxd rax,DWORD PTR [r8+rax*4]
  404c81:	add    rax,r8
  404c84:	mov    QWORD PTR [rsp+0x100],rdx
  404c8c:	mov    QWORD PTR [rsp+0xb8],r11
  404c94:	mov    QWORD PTR [rsp+0x110],r10
  404c9c:	mov    QWORD PTR [rsp+0x120],r9
  404ca4:	mov    QWORD PTR [rsp+0x118],rcx
  404cac:	mov    QWORD PTR [rsp+0x148],rbx
  404cb4:	mov    QWORD PTR [rsp+0x198],rdi
  404cbc:	mov    QWORD PTR [rsp+0x190],rsi
  404cc4:	jmp    rax
  404cc6:	lea    rax,[rsp+r12*1]
  404cca:	add    rax,0x8c0
  404cd0:	mov    QWORD PTR [rsp+0x60],rax
  404cd5:	lea    rax,[rsp+r12*1]
  404cd9:	add    rax,0x1160
  404cdf:	jmp    404d90 <Mat_VarRead@plt+0x2a00>
  404ce4:	mov    QWORD PTR [rsp+0x60],rdi
  404ce9:	mov    QWORD PTR [rsp+0x68],rsi
  404cee:	jmp    404d95 <Mat_VarRead@plt+0x2a05>
  404cf3:	lea    rax,[rsp+r12*1]
  404cf7:	add    rax,0x1cc0
  404cfd:	mov    QWORD PTR [rsp+0x60],rax
  404d02:	lea    rax,[rsp+r12*1]
  404d06:	add    rax,0x440
  404d0c:	jmp    404d90 <Mat_VarRead@plt+0x2a00>
  404d11:	mov    QWORD PTR [rsp+0x60],r14
  404d16:	mov    QWORD PTR [rsp+0x68],r15
  404d1b:	jmp    404d95 <Mat_VarRead@plt+0x2a05>
  404d1d:	mov    QWORD PTR [rsp+0x60],r10
  404d22:	mov    QWORD PTR [rsp+0x68],r9
  404d27:	jmp    404d95 <Mat_VarRead@plt+0x2a05>
  404d29:	mov    QWORD PTR [rsp+0x60],rdx
  404d2e:	mov    QWORD PTR [rsp+0x68],r11
  404d33:	jmp    404d95 <Mat_VarRead@plt+0x2a05>
  404d35:	mov    rax,QWORD PTR [rsp+0x140]
  404d3d:	mov    QWORD PTR [rsp+0x60],rax
  404d42:	mov    rax,QWORD PTR [rsp+0x210]
  404d4a:	jmp    404d90 <Mat_VarRead@plt+0x2a00>
  404d4c:	mov    QWORD PTR [rsp+0x60],rcx
  404d51:	mov    QWORD PTR [rsp+0x68],rbx
  404d56:	jmp    404d95 <Mat_VarRead@plt+0x2a05>
  404d58:	mov    rax,QWORD PTR [rsp+0x208]
  404d60:	mov    QWORD PTR [rsp+0x60],rax
  404d65:	mov    rax,QWORD PTR [rsp+0x200]
  404d6d:	jmp    404d90 <Mat_VarRead@plt+0x2a00>
  404d6f:	lea    rax,[rsp+r12*1]
  404d73:	add    rax,0xa60
  404d79:	mov    QWORD PTR [rsp+0x60],rax
  404d7e:	lea    rax,[rsp+r12*1]
  404d82:	add    rax,0xe60
  404d88:	nop    DWORD PTR [rax+rax*1+0x0]
  404d90:	mov    QWORD PTR [rsp+0x68],rax
  404d95:	mov    DWORD PTR [rsp],0x800
  404d9c:	mov    ecx,0x2
  404da1:	lea    rdi,[rip+0xb335]        # 4100dd <getopt_long_only@@Base+0x2f7d>
  404da8:	mov    rsi,QWORD PTR [rsp+0xa8]
  404db0:	mov    edx,DWORD PTR [rsp+0xb0]
  404db7:	lea    r8,[rsp+0xc0]
  404dbf:	lea    r9,[rsp+0x60]
  404dc4:	vzeroupper 
  404dc7:	call   4020d0 <Mat_VarCreate@plt>
  404dcc:	mov    rbx,rax
  404dcf:	movzx  edx,BYTE PTR [rip+0x11686]        # 41645c <optopt@@Base+0x24>
  404dd6:	mov    rdi,QWORD PTR [rsp+0x218]
  404dde:	mov    rsi,rax
  404de1:	mov    ecx,DWORD PTR [rsp+0xb4]
  404de8:	call   402140 <Mat_VarWriteAppend@plt>
  404ded:	mov    rdi,rbx
  404df0:	call   402240 <Mat_VarFree@plt>
  404df5:	add    r13,0x1
  404df9:	add    r12,0x50
  404dfd:	add    r15,0x28
  404e01:	add    r14,0x28
  404e05:	add    QWORD PTR [rsp+0x200],0x28
  404e0e:	add    QWORD PTR [rsp+0x208],0x28
  404e17:	add    QWORD PTR [rsp+0x210],0x28
  404e20:	add    QWORD PTR [rsp+0x140],0x28
  404e29:	mov    rsi,QWORD PTR [rsp+0x190]
  404e31:	add    rsi,0x14
  404e35:	mov    rdi,QWORD PTR [rsp+0x198]
  404e3d:	add    rdi,0x14
  404e41:	mov    rbx,QWORD PTR [rsp+0x148]
  404e49:	add    rbx,0x14
  404e4d:	mov    rcx,QWORD PTR [rsp+0x118]
  404e55:	add    rcx,0x14
  404e59:	mov    r9,QWORD PTR [rsp+0x120]
  404e61:	add    r9,0xa
  404e65:	mov    r10,QWORD PTR [rsp+0x110]
  404e6d:	add    r10,0xa
  404e71:	mov    r11,QWORD PTR [rsp+0xb8]
  404e79:	add    r11,0xa
  404e7d:	mov    rdx,QWORD PTR [rsp+0x100]
  404e85:	add    rdx,0xa
  404e89:	cmp    r13,0x5
  404e8d:	jb     404c60 <Mat_VarRead@plt+0x28d0>
  404e93:	xor    r14d,r14d
  404e96:	mov    rbx,QWORD PTR [rsp+0x30]
  404e9b:	mov    r15,QWORD PTR [rsp+0x58]
  404ea0:	lea    r13,[rsp+0x440]
  404ea8:	mov    r12,QWORD PTR [rsp+0x218]
  404eb0:	mov    rdi,r12
  404eb3:	vzeroupper 
  404eb6:	call   4022a0 <Mat_Close@plt>
  404ebb:	jmp    404ef7 <Mat_VarRead@plt+0x2b67>
  404ebd:	mov    rdi,QWORD PTR [rsp+0x218]
  404ec5:	vzeroupper 
  404ec8:	call   4022a0 <Mat_Close@plt>
  404ecd:	mov    rbx,QWORD PTR [rsp+0x30]
  404ed2:	mov    r15,QWORD PTR [rsp+0x58]
  404ed7:	lea    r13,[rsp+0x440]
  404edf:	mov    r14d,0x1
  404ee5:	jmp    404ef7 <Mat_VarRead@plt+0x2b67>
  404ee7:	mov    rdi,r12
  404eea:	vzeroupper 
  404eed:	call   4022a0 <Mat_Close@plt>
  404ef2:	mov    rbx,QWORD PTR [rsp+0x30]
  404ef7:	add    r15d,0x1
  404efb:	add    DWORD PTR [rsp+0x3c],r14d
  404f00:	cmp    r15d,DWORD PTR [rsp+0x128]
  404f08:	jl     4028a0 <Mat_VarRead@plt+0x510>
  404f0e:	jmp    40c229 <Mat_VarRead@plt+0x9e99>
  404f13:	lea    ebx,[r15+0x1]
  404f17:	cmp    DWORD PTR [rsp+0x128],0x3
  404f1f:	jg     4053de <Mat_VarRead@plt+0x304e>
  404f25:	xor    eax,eax
  404f27:	lea    rdi,[rip+0xa17b]        # 40f0a9 <getopt_long_only@@Base+0x1f49>
  404f2e:	call   4022b0 <Mat_Critical@plt>
  404f33:	add    DWORD PTR [rsp+0x3c],0x1
  404f38:	mov    r15d,ebx
  404f3b:	jmp    403a85 <Mat_VarRead@plt+0x16f5>
  404f40:	mov    DWORD PTR [rsp],0x0
  404f47:	mov    esi,0x7
  404f4c:	mov    edx,0x7
  404f51:	mov    ecx,0x2
  404f56:	lea    rdi,[rip+0xb180]        # 4100dd <getopt_long_only@@Base+0x2f7d>
  404f5d:	lea    r8,[rsp+0x40]
  404f62:	lea    r9,[rsp+0xc00]
  404f6a:	jmp    4050dc <Mat_VarRead@plt+0x2d4c>
  404f6f:	mov    DWORD PTR [rsp],0x0
  404f76:	mov    esi,0x8
  404f7b:	mov    edx,0x1
  404f80:	mov    ecx,0x2
  404f85:	lea    rdi,[rip+0xb151]        # 4100dd <getopt_long_only@@Base+0x2f7d>
  404f8c:	lea    r8,[rsp+0x40]
  404f91:	lea    r9,[rsp+0x150]
  404f99:	jmp    4050dc <Mat_VarRead@plt+0x2d4c>
  404f9e:	mov    DWORD PTR [rsp],0x0
  404fa5:	mov    esi,0x9
  404faa:	mov    edx,0x2
  404faf:	mov    ecx,0x2
  404fb4:	lea    rdi,[rip+0xb122]        # 4100dd <getopt_long_only@@Base+0x2f7d>
  404fbb:	lea    r8,[rsp+0x40]
  404fc0:	lea    r9,[rsp+0x1c0]
  404fc8:	jmp    4050dc <Mat_VarRead@plt+0x2d4c>
  404fcd:	mov    DWORD PTR [rsp],0x0
  404fd4:	mov    esi,0xa
  404fd9:	mov    edx,0x3
  404fde:	mov    ecx,0x2
  404fe3:	lea    rdi,[rip+0xb0f3]        # 4100dd <getopt_long_only@@Base+0x2f7d>
  404fea:	lea    r8,[rsp+0x40]
  404fef:	lea    r9,[rsp+0x260]
  404ff7:	jmp    4050dc <Mat_VarRead@plt+0x2d4c>
  404ffc:	mov    DWORD PTR [rsp],0x0
  405003:	mov    esi,0xb
  405008:	mov    edx,0x4
  40500d:	mov    ecx,0x2
  405012:	lea    rdi,[rip+0xb0c4]        # 4100dd <getopt_long_only@@Base+0x2f7d>
  405019:	lea    r8,[rsp+0x40]
  40501e:	lea    r9,[rsp+0x3c0]
  405026:	jmp    4050dc <Mat_VarRead@plt+0x2d4c>
  40502b:	mov    DWORD PTR [rsp],0x0
  405032:	mov    esi,0xc
  405037:	mov    edx,0x5
  40503c:	mov    ecx,0x2
  405041:	lea    rdi,[rip+0xb095]        # 4100dd <getopt_long_only@@Base+0x2f7d>
  405048:	lea    r8,[rsp+0x40]
  40504d:	lea    r9,[rsp+0x620]
  405055:	jmp    4050dc <Mat_VarRead@plt+0x2d4c>
  40505a:	mov    DWORD PTR [rsp],0x0
  405061:	mov    esi,0xd
  405066:	mov    edx,0x6
  40506b:	mov    ecx,0x2
  405070:	lea    rdi,[rip+0xb066]        # 4100dd <getopt_long_only@@Base+0x2f7d>
  405077:	lea    r8,[rsp+0x40]
  40507c:	lea    r9,[rsp+0xd00]
  405084:	jmp    4050dc <Mat_VarRead@plt+0x2d4c>
  405086:	mov    DWORD PTR [rsp],0x0
  40508d:	mov    esi,0xe
  405092:	mov    edx,0xc
  405097:	mov    ecx,0x2
  40509c:	lea    rdi,[rip+0xb03a]        # 4100dd <getopt_long_only@@Base+0x2f7d>
  4050a3:	lea    r8,[rsp+0x40]
  4050a8:	lea    r9,[rsp+0xa60]
  4050b0:	jmp    4050dc <Mat_VarRead@plt+0x2d4c>
  4050b2:	mov    DWORD PTR [rsp],0x0
  4050b9:	mov    esi,0xf
  4050be:	mov    edx,0xd
  4050c3:	mov    ecx,0x2
  4050c8:	lea    rdi,[rip+0xb00e]        # 4100dd <getopt_long_only@@Base+0x2f7d>
  4050cf:	lea    r8,[rsp+0x40]
  4050d4:	lea    r9,[rsp+0xe60]
  4050dc:	vzeroupper 
  4050df:	call   4020d0 <Mat_VarCreate@plt>
  4050e4:	mov    rbx,rax
  4050e7:	movzx  edx,BYTE PTR [rip+0x1136e]        # 41645c <optopt@@Base+0x24>
  4050ee:	mov    rdi,r14
  4050f1:	mov    rsi,rax
  4050f4:	call   4020f0 <Mat_VarWrite@plt>
  4050f9:	mov    r12d,eax
  4050fc:	mov    rdi,rbx
  4050ff:	call   402240 <Mat_VarFree@plt>
  405104:	mov    rbx,QWORD PTR [rsp+0x30]
  405109:	mov    rdi,r14
  40510c:	vzeroupper 
  40510f:	call   4022a0 <Mat_Close@plt>
  405114:	add    r15d,0x1
  405118:	add    DWORD PTR [rsp+0x3c],r12d
  40511d:	cmp    r15d,DWORD PTR [rsp+0x128]
  405125:	jl     4028a0 <Mat_VarRead@plt+0x510>
  40512b:	jmp    40c229 <Mat_VarRead@plt+0x9e99>
  405130:	mov    QWORD PTR [rsp+0x58],r15
  405135:	vmovaps xmm0,XMMWORD PTR [rip+0x90a3]        # 40e1e0 <getopt_long_only@@Base+0x1080>
  40513d:	vmovaps XMMWORD PTR [rsp+0x40],xmm0
  405143:	vxorps xmm0,xmm0,xmm0
  405147:	vmovups XMMWORD PTR [rsp+0x1a9],xmm0
  405150:	vmovaps XMMWORD PTR [rsp+0x1a0],xmm0
  405159:	vpbroadcastq ymm0,QWORD PTR [rip+0x921e]        # 40e380 <getopt_long_only@@Base+0x1220>
  405162:	vmovdqu YMMWORD PTR [rsp+0x620],ymm0
  40516b:	vpbroadcastd xmm1,DWORD PTR [rip+0x921c]        # 40e390 <getopt_long_only@@Base+0x1230>
  405174:	vmovdqa XMMWORD PTR [rsp+0x260],xmm1
  40517d:	vmovdqu YMMWORD PTR [rsp+0x640],ymm0
  405186:	vmovdqa XMMWORD PTR [rsp+0x270],xmm1
  40518f:	vmovdqu YMMWORD PTR [rsp+0x660],ymm0
  405198:	vmovdqa XMMWORD PTR [rsp+0x280],xmm1
  4051a1:	vmovdqu YMMWORD PTR [rsp+0x680],ymm0
  4051aa:	vmovdqa XMMWORD PTR [rsp+0x290],xmm1
  4051b3:	vmovdqu YMMWORD PTR [rsp+0x6a0],ymm0
  4051bc:	vmovdqa XMMWORD PTR [rsp+0x2a0],xmm1
  4051c5:	vmovdqu YMMWORD PTR [rsp+0x6c0],ymm0
  4051ce:	vmovdqa XMMWORD PTR [rsp+0x2b0],xmm1
  4051d7:	mov    rdi,QWORD PTR [rsp+0x28]
  4051dc:	test   rdi,rdi
  4051df:	movabs rax,0x100000000
  4051e9:	mov    QWORD PTR [rsp+0x6e0],rax
  4051f1:	mov    DWORD PTR [rsp+0x2c0],0x1
  4051fc:	lea    rax,[rip+0x9edc]        # 40f0df <getopt_long_only@@Base+0x1f7f>
  405203:	cmove  rdi,rax
  405207:	mov    BYTE PTR [rsp+0x1a4],0x1
  40520f:	mov    DWORD PTR [rsp+0x1a0],0x1010101
  40521a:	mov    DWORD PTR [rsp+0x1a6],0x1010101
  405225:	lea    rax,[rsp+0x1ac]
  40522d:	mov    BYTE PTR [rax+0x2],0x1
  405231:	mov    WORD PTR [rax],0x101
  405236:	mov    WORD PTR [rsp+0x1b2],0x101
  405240:	mov    BYTE PTR [rsp+0x1b8],0x1
  405248:	mov    edx,DWORD PTR [rip+0x100d2]        # 415320 <getopt_long_only@@Base+0x81c0>
  40524e:	xor    esi,esi
  405250:	mov    QWORD PTR [rsp+0x28],rdi
  405255:	vzeroupper 
  405258:	call   402310 <Mat_CreateVer@plt>
  40525d:	test   rax,rax
  405260:	je     4053c9 <Mat_VarRead@plt+0x3039>
  405266:	mov    r14,rax
  405269:	mov    DWORD PTR [rsp],0x201
  405270:	mov    esi,0xd
  405275:	mov    edx,0x6
  40527a:	mov    ecx,0x2
  40527f:	lea    r12,[rip+0xd530]        # 4127b6 <getopt_long_only@@Base+0x5656>
  405286:	mov    rdi,r12
  405289:	lea    rbx,[rsp+0x40]
  40528e:	mov    r8,rbx
  405291:	lea    r9,[rsp+0x620]
  405299:	call   4020d0 <Mat_VarCreate@plt>
  40529e:	mov    QWORD PTR [rsp+0xc0],rax
  4052a6:	mov    DWORD PTR [rsp],0x201
  4052ad:	mov    esi,0xb
  4052b2:	mov    edx,0x4
  4052b7:	mov    ecx,0x2
  4052bc:	lea    r12,[rip+0xd4fa]        # 4127bd <getopt_long_only@@Base+0x565d>
  4052c3:	mov    rdi,r12
  4052c6:	mov    r8,rbx
  4052c9:	lea    r9,[rsp+0x260]
  4052d1:	call   4020d0 <Mat_VarCreate@plt>
  4052d6:	mov    QWORD PTR [rsp+0xc8],rax
  4052de:	mov    eax,0x5
  4052e3:	vmovq  xmm0,rax
  4052e8:	vpslldq xmm0,xmm0,0x8
  4052ed:	vmovdqa XMMWORD PTR [rsp+0x40],xmm0
  4052f3:	mov    DWORD PTR [rsp],0x201
  4052fa:	xor    r15d,r15d
  4052fd:	mov    esi,0x9
  405302:	mov    edx,0x2
  405307:	mov    ecx,0x2
  40530c:	xor    r9d,r9d
  40530f:	lea    rdi,[rip+0xd4a0]        # 4127b6 <getopt_long_only@@Base+0x5656>
  405316:	mov    r8,rbx
  405319:	call   4020d0 <Mat_VarCreate@plt>
  40531e:	mov    QWORD PTR [rsp+0xd0],rax
  405326:	vmovaps xmm0,XMMWORD PTR [rip+0x8df2]        # 40e120 <getopt_long_only@@Base+0xfc0>
  40532e:	vmovaps XMMWORD PTR [rsp+0x40],xmm0
  405334:	mov    DWORD PTR [rsp],0x201
  40533b:	mov    esi,0x9
  405340:	mov    edx,0x2
  405345:	mov    ecx,0x2
  40534a:	mov    rdi,r12
  40534d:	mov    r8,rbx
  405350:	lea    r9,[rsp+0x1a0]
  405358:	call   4020d0 <Mat_VarCreate@plt>
  40535d:	mov    QWORD PTR [rsp+0xd8],rax
  405365:	mov    QWORD PTR [rsp+0xe0],0x0
  405371:	vmovdqa xmm0,XMMWORD PTR [rip+0x8d07]        # 40e080 <getopt_long_only@@Base+0xf20>
  405379:	vmovdqa XMMWORD PTR [rsp+0x40],xmm0
  40537f:	mov    DWORD PTR [rsp],0x0
  405386:	mov    esi,0x2
  40538b:	mov    edx,0x16
  405390:	mov    ecx,0x2
  405395:	lea    rdi,[rip+0xad41]        # 4100dd <getopt_long_only@@Base+0x2f7d>
  40539c:	mov    r8,rbx
  40539f:	lea    r9,[rsp+0xc0]
  4053a7:	call   4020d0 <Mat_VarCreate@plt>
  4053ac:	mov    rbx,rax
  4053af:	movzx  edx,BYTE PTR [rip+0x110a6]        # 41645c <optopt@@Base+0x24>
  4053b6:	mov    rdi,r14
  4053b9:	mov    rsi,rax
  4053bc:	call   4020f0 <Mat_VarWrite@plt>
  4053c1:	mov    rdi,rbx
  4053c4:	jmp    40437f <Mat_VarRead@plt+0x1fef>
  4053c9:	mov    r15d,0x1
  4053cf:	mov    rbx,QWORD PTR [rsp+0x30]
  4053d4:	mov    r12,QWORD PTR [rsp+0x58]
  4053d9:	jmp    406212 <Mat_VarRead@plt+0x3e82>
  4053de:	mov    r13,r15
  4053e1:	movsxd rax,ebx
  4053e4:	mov    rcx,QWORD PTR [rsp+0x30]
  4053e9:	mov    r15,QWORD PTR [rcx+rax*8]
  4053ed:	mov    r14,QWORD PTR [rcx+r12*8+0x10]
  4053f2:	mov    rbx,QWORD PTR [rsp+0x28]
  4053f7:	test   rbx,rbx
  4053fa:	je     40541e <Mat_VarRead@plt+0x308e>
  4053fc:	mov    rax,QWORD PTR [rip+0xfbd5]        # 414fd8 <getopt_long_only@@Base+0x7e78>
  405403:	mov    rdx,QWORD PTR [rax]
  405406:	mov    rdi,rbx
  405409:	lea    rsi,[rip+0xd3cf]        # 4127df <getopt_long_only@@Base+0x567f>
  405410:	call   4021c0 <freopen@plt>
  405415:	test   rax,rax
  405418:	je     406d91 <Mat_VarRead@plt+0x4a01>
  40541e:	xor    esi,esi
  405420:	mov    rdi,r15
  405423:	call   402080 <Mat_Open@plt>
  405428:	test   rax,rax
  40542b:	je     4057dd <Mat_VarRead@plt+0x344d>
  405431:	mov    r15,rax
  405434:	mov    rdi,rax
  405437:	mov    rsi,r14
  40543a:	call   402390 <Mat_VarRead@plt>
  40543f:	test   rax,rax
  405442:	je     405c06 <Mat_VarRead@plt+0x3876>
  405448:	mov    rbx,rax
  40544b:	mov    esi,0x1
  405450:	mov    rdi,rax
  405453:	call   402270 <Mat_VarPrint@plt>
  405458:	mov    rdi,rbx
  40545b:	call   402240 <Mat_VarFree@plt>
  405460:	xor    ebx,ebx
  405462:	jmp    405c0b <Mat_VarRead@plt+0x387b>
  405467:	mov    rdi,QWORD PTR [rsp+0x28]
  40546c:	test   rdi,rdi
  40546f:	lea    rax,[rip+0x9c8a]        # 40f100 <getopt_long_only@@Base+0x1fa0>
  405476:	cmove  rdi,rax
  40547a:	mov    edx,DWORD PTR [rip+0xfea0]        # 415320 <getopt_long_only@@Base+0x81c0>
  405480:	xor    esi,esi
  405482:	mov    QWORD PTR [rsp+0x28],rdi
  405487:	call   402310 <Mat_CreateVer@plt>
  40548c:	test   rax,rax
  40548f:	je     405be1 <Mat_VarRead@plt+0x3851>
  405495:	mov    r14,rax
  405498:	vmovaps xmm0,XMMWORD PTR [rip+0xf8a0]        # 414d40 <getopt_long_only@@Base+0x7be0>
  4054a0:	vmovaps XMMWORD PTR [rsp+0xe60],xmm0
  4054a9:	vmovaps xmm0,XMMWORD PTR [rip+0x8bcf]        # 40e080 <getopt_long_only@@Base+0xf20>
  4054b1:	vmovaps XMMWORD PTR [rsp+0x40],xmm0
  4054b7:	mov    esi,0x2
  4054bc:	mov    r8d,0x2
  4054c2:	lea    rdi,[rip+0xac14]        # 4100dd <getopt_long_only@@Base+0x2f7d>
  4054c9:	lea    r12,[rsp+0x40]
  4054ce:	mov    rdx,r12
  4054d1:	lea    rcx,[rsp+0xe60]
  4054d9:	call   402300 <Mat_VarCreateStruct@plt>
  4054de:	mov    rbx,rax
  4054e1:	vmovdqa xmm0,XMMWORD PTR [rip+0x8c27]        # 40e110 <getopt_long_only@@Base+0xfb0>
  4054e9:	vmovdqa XMMWORD PTR [rsp+0x40],xmm0
  4054ef:	mov    rdi,QWORD PTR [rsp+0xe68]
  4054f7:	mov    DWORD PTR [rsp],0x0
  4054fe:	mov    esi,0x4
  405503:	mov    edx,0x10
  405508:	mov    ecx,0x2
  40550d:	mov    r8,r12
  405510:	lea    r9,[rip+0xd1c0]        # 4126d7 <getopt_long_only@@Base+0x5577>
  405517:	call   4020d0 <Mat_VarCreate@plt>
  40551c:	mov    rsi,QWORD PTR [rsp+0xe68]
  405524:	mov    edx,0x1
  405529:	mov    rdi,rbx
  40552c:	mov    rcx,rax
  40552f:	call   402370 <Mat_VarSetStructFieldByName@plt>
  405534:	movzx  edx,BYTE PTR [rip+0x10f21]        # 41645c <optopt@@Base+0x24>
  40553b:	mov    rdi,r14
  40553e:	mov    rsi,rbx
  405541:	call   4020f0 <Mat_VarWrite@plt>
  405546:	mov    rdi,rbx
  405549:	call   402240 <Mat_VarFree@plt>
  40554e:	mov    rdi,r14
  405551:	call   4022a0 <Mat_Close@plt>
  405556:	xor    eax,eax
  405558:	jmp    405be6 <Mat_VarRead@plt+0x3856>
  40555d:	mov    QWORD PTR [rsp+0x58],r15
  405562:	mov    r14d,DWORD PTR [rsp+0x12c]
  40556a:	vmovaps xmm0,XMMWORD PTR [rip+0x8aee]        # 40e060 <getopt_long_only@@Base+0xf00>
  405572:	vmovaps XMMWORD PTR [rsp+0x40],xmm0
  405578:	xor    eax,eax
  40557a:	vmovdqa ymm0,YMMWORD PTR [rip+0x8c9e]        # 40e220 <getopt_long_only@@Base+0x10c0>
  405582:	vmovdqa ymm7,YMMWORD PTR [rip+0x8cb6]        # 40e240 <getopt_long_only@@Base+0x10e0>
  40558a:	vmovdqa ymm9,ymm7
  40558e:	vmovdqa ymm8,YMMWORD PTR [rsp+0x1100]
  405597:	vmovdqa xmm7,XMMWORD PTR [rip+0x8b41]        # 40e0e0 <getopt_long_only@@Base+0xf80>
  40559f:	vmovdqa xmm10,xmm7
  4055a3:	vmovdqa xmm7,XMMWORD PTR [rip+0x8b45]        # 40e0f0 <getopt_long_only@@Base+0xf90>
  4055ab:	vmovdqa ymm11,YMMWORD PTR [rsp+0x10e0]
  4055b4:	vpcmpeqd ymm12,ymm12,ymm12
  4055b9:	vpsubq ymm1,ymm0,ymm12
  4055be:	vpermd ymm2,ymm9,ymm1
  4055c3:	vcvtdq2pd ymm3,xmm2
  4055c7:	vmovups YMMWORD PTR [rsp+rax*8+0x8c0],ymm3
  4055d0:	vcvtdq2ps xmm3,xmm2
  4055d4:	vmovaps XMMWORD PTR [rsp+rax*4+0xc00],xmm3
  4055dd:	vpaddq ymm3,ymm0,ymm8
  4055e2:	vpermd ymm4,ymm9,ymm3
  4055e7:	vinserti128 ymm5,ymm2,xmm4,0x1
  4055ed:	vmovdqu YMMWORD PTR [rsp+rax*4+0x620],ymm5
  4055f6:	vmovdqu YMMWORD PTR [rsp+rax*4+0xd00],ymm5
  4055ff:	vpshufb xmm5,xmm2,xmm10
  405604:	vpshufb xmm6,xmm4,xmm10
  405609:	vpunpcklqdq xmm5,xmm5,xmm6
  40560d:	vmovdqa XMMWORD PTR [rsp+rax*2+0x260],xmm5
  405616:	vmovdqa XMMWORD PTR [rsp+rax*2+0x3c0],xmm5
  40561f:	vpshufb xmm2,xmm2,xmm7
  405624:	vmovd  DWORD PTR [rsp+rax*1+0x150],xmm2
  40562d:	vmovd  DWORD PTR [rsp+rax*1+0x1c0],xmm2
  405636:	vmovdqu YMMWORD PTR [rsp+rax*8+0xa60],ymm1
  40563f:	vmovdqu YMMWORD PTR [rsp+rax*8+0xe60],ymm1
  405648:	vcvtdq2pd ymm1,xmm4
  40564c:	vmovups YMMWORD PTR [rsp+rax*8+0x8e0],ymm1
  405655:	vcvtdq2ps xmm1,xmm4
  405659:	vmovaps XMMWORD PTR [rsp+rax*4+0xc10],xmm1
  405662:	vpshufb xmm1,xmm4,xmm7
  405667:	vmovd  DWORD PTR [rsp+rax*1+0x154],xmm1
  405670:	vmovd  DWORD PTR [rsp+rax*1+0x1c4],xmm1
  405679:	vmovdqu YMMWORD PTR [rsp+rax*8+0xa80],ymm3
  405682:	vmovdqu YMMWORD PTR [rsp+rax*8+0xe80],ymm3
  40568b:	add    rax,0x8
  40568f:	vpaddq ymm0,ymm0,ymm11
  405694:	cmp    rax,0x30
  405698:	jne    4055b9 <Mat_VarRead@plt+0x3229>
  40569e:	mov    rcx,QWORD PTR [rsp+0x28]
  4056a3:	test   rcx,rcx
  4056a6:	movabs rax,0x4048800000000000
  4056b0:	mov    QWORD PTR [rsp+0xa40],rax
  4056b8:	movabs rax,0x4248000042440000
  4056c2:	mov    QWORD PTR [rsp+0xcc0],rax
  4056ca:	movabs rax,0x3200000031
  4056d4:	mov    QWORD PTR [rsp+0x6e0],rax
  4056dc:	mov    QWORD PTR [rsp+0xdc0],rax
  4056e4:	mov    DWORD PTR [rsp+0x2c0],0x320031
  4056ef:	mov    DWORD PTR [rsp+0x420],0x320031
  4056fa:	mov    WORD PTR [rsp+0x180],0x3231
  405704:	mov    WORD PTR [rsp+0x1f0],0x3231
  40570e:	mov    QWORD PTR [rsp+0xbe0],0x31
  40571a:	mov    QWORD PTR [rsp+0xfe0],0x31
  405726:	movabs rax,0x4049000000000000
  405730:	mov    QWORD PTR [rsp+0xa48],rax
  405738:	mov    QWORD PTR [rsp+0xbe8],0x32
  405744:	mov    QWORD PTR [rsp+0xfe8],0x32
  405750:	lea    rax,[rip+0x99c4]        # 40f11b <getopt_long_only@@Base+0x1fbb>
  405757:	cmove  rcx,rax
  40575b:	mov    r12d,0x1
  405761:	mov    al,BYTE PTR [rsp+0x27]
  405765:	cmp    al,0x9
  405767:	mov    QWORD PTR [rsp+0x28],rcx
  40576c:	ja     406d63 <Mat_VarRead@plt+0x49d3>
  405772:	mov    ebx,0x9
  405777:	movzx  eax,al
  40577a:	lea    rdx,[rip+0x8dff]        # 40e580 <getopt_long_only@@Base+0x1420>
  405781:	movsxd rax,DWORD PTR [rdx+rax*4]
  405785:	add    rax,rdx
  405788:	lea    rdx,[rsp+0x9e0]
  405790:	mov    rsi,rdx
  405793:	lea    rdx,[rsp+0x980]
  40579b:	lea    r15,[rsp+0x920]
  4057a3:	lea    r13,[rsp+0x8c0]
  4057ab:	jmp    rax
  4057ad:	mov    ebx,0x7
  4057b2:	lea    rax,[rsp+0xc90]
  4057ba:	mov    rsi,rax
  4057bd:	lea    rax,[rsp+0xc60]
  4057c5:	mov    rdx,rax
  4057c8:	lea    r15,[rsp+0xc30]
  4057d0:	lea    r13,[rsp+0xc00]
  4057d8:	jmp    406a42 <Mat_VarRead@plt+0x46b2>
  4057dd:	mov    ebx,0x1
  4057e2:	add    DWORD PTR [rsp+0x3c],ebx
  4057e6:	jmp    4032c9 <Mat_VarRead@plt+0xf39>
  4057eb:	mov    QWORD PTR [rsp+0x58],r15
  4057f0:	mov    esi,DWORD PTR [rsp+0x12c]
  4057f7:	vmovaps xmm0,XMMWORD PTR [rip+0x8861]        # 40e060 <getopt_long_only@@Base+0xf00>
  4057ff:	vmovaps XMMWORD PTR [rsp+0x40],xmm0
  405805:	xor    eax,eax
  405807:	vmovdqa ymm0,YMMWORD PTR [rip+0x8a11]        # 40e220 <getopt_long_only@@Base+0x10c0>
  40580f:	vmovdqa xmm1,XMMWORD PTR [rip+0x88b9]        # 40e0d0 <getopt_long_only@@Base+0xf70>
  405817:	vmovdqa ymm8,YMMWORD PTR [rip+0x8a21]        # 40e240 <getopt_long_only@@Base+0x10e0>
  40581f:	vmovdqa xmm9,XMMWORD PTR [rip+0x88b9]        # 40e0e0 <getopt_long_only@@Base+0xf80>
  405827:	vmovdqa xmm10,XMMWORD PTR [rip+0x88c1]        # 40e0f0 <getopt_long_only@@Base+0xf90>
  40582f:	vpcmpeqd ymm11,ymm11,ymm11
  405834:	vpsubq ymm2,ymm0,ymm11
  405839:	vpermd ymm3,ymm8,ymm2
  40583e:	vcvtdq2pd ymm4,xmm3
  405842:	vmovups YMMWORD PTR [rsp+rax*8+0x8c0],ymm4
  40584b:	vpbroadcastq ymm4,QWORD PTR [rip+0x8b0c]        # 40e360 <getopt_long_only@@Base+0x1200>
  405854:	vpaddq ymm4,ymm0,ymm4
  405858:	vpbroadcastd xmm5,DWORD PTR [rip+0x8b27]        # 40e388 <getopt_long_only@@Base+0x1228>
  405861:	vpaddd xmm5,xmm1,xmm5
  405865:	vpermd ymm6,ymm8,ymm4
  40586a:	vcvtdq2pd ymm7,xmm6
  40586e:	vmovups YMMWORD PTR [rsp+rax*8+0x1160],ymm7
  405877:	vcvtdq2ps xmm7,xmm3
  40587b:	vmovaps XMMWORD PTR [rsp+rax*4+0xc00],xmm7
  405884:	vcvtdq2ps xmm7,xmm6
  405888:	vmovaps XMMWORD PTR [rsp+rax*4+0x1000],xmm7
  405891:	vmovdqa XMMWORD PTR [rsp+rax*4+0x620],xmm3
  40589a:	vmovdqa XMMWORD PTR [rsp+rax*4+0xd00],xmm6
  4058a3:	vmovdqa XMMWORD PTR [rsp+rax*4+0x700],xmm3
  4058ac:	vmovdqa XMMWORD PTR [rsp+rax*4+0x7e0],xmm6
  4058b5:	vpshufb xmm6,xmm3,xmm9
  4058ba:	vmovq  QWORD PTR [rsp+rax*2+0x260],xmm6
  4058c3:	vpshufb xmm7,xmm5,xmm9
  4058c8:	vmovq  QWORD PTR [rsp+rax*2+0x3c0],xmm7
  4058d1:	vmovq  QWORD PTR [rsp+rax*2+0x340],xmm6
  4058da:	vmovq  QWORD PTR [rsp+rax*2+0xde0],xmm7
  4058e3:	vpshufb xmm3,xmm3,xmm10
  4058e8:	vmovd  DWORD PTR [rsp+rax*1+0x150],xmm3
  4058f1:	vpshufb xmm5,xmm5,xmm10
  4058f6:	vmovd  DWORD PTR [rsp+rax*1+0x1c0],xmm5
  4058ff:	vmovd  DWORD PTR [rsp+rax*1+0x220],xmm3
  405908:	vmovd  DWORD PTR [rsp+rax*1+0x2e0],xmm5
  405911:	vmovdqu YMMWORD PTR [rsp+rax*8+0xa60],ymm2
  40591a:	vmovdqu YMMWORD PTR [rsp+rax*8+0xe60],ymm4
  405923:	vmovdqu YMMWORD PTR [rsp+rax*8+0x1cc0],ymm2
  40592c:	vmovdqu YMMWORD PTR [rsp+rax*8+0x440],ymm4
  405935:	add    rax,0x4
  405939:	vpbroadcastq ymm2,QWORD PTR [rip+0x8a26]        # 40e368 <getopt_long_only@@Base+0x1208>
  405942:	vpaddq ymm0,ymm0,ymm2
  405946:	vpbroadcastd xmm2,DWORD PTR [rip+0x8a3d]        # 40e38c <getopt_long_only@@Base+0x122c>
  40594f:	vpaddd xmm1,xmm1,xmm2
  405953:	cmp    rax,0x30
  405957:	jne    405834 <Mat_VarRead@plt+0x34a4>
  40595d:	mov    rcx,QWORD PTR [rsp+0x28]
  405962:	test   rcx,rcx
  405965:	movabs rax,0x4048800000000000
  40596f:	mov    QWORD PTR [rsp+0xa40],rax
  405977:	movabs rax,0x4058c00000000000
  405981:	mov    QWORD PTR [rsp+0x12e0],rax
  405989:	mov    DWORD PTR [rsp+0xcc0],0x42440000
  405994:	mov    DWORD PTR [rsp+0x10c0],0x42c60000
  40599f:	mov    DWORD PTR [rsp+0x6e0],0x31
  4059aa:	mov    DWORD PTR [rsp+0xdc0],0x63
  4059b5:	mov    DWORD PTR [rsp+0x7c0],0x31
  4059c0:	mov    DWORD PTR [rsp+0x8a0],0x63
  4059cb:	mov    WORD PTR [rsp+0x2c0],0x31
  4059d5:	mov    WORD PTR [rsp+0x420],0x63
  4059df:	mov    WORD PTR [rsp+0x3a0],0x31
  4059e9:	mov    WORD PTR [rsp+0xe40],0x63
  4059f3:	mov    BYTE PTR [rsp+0x180],0x31
  4059fb:	mov    BYTE PTR [rsp+0x1f0],0x63
  405a03:	mov    BYTE PTR [rsp+0x250],0x31
  405a0b:	mov    BYTE PTR [rsp+0x310],0x63
  405a13:	mov    QWORD PTR [rsp+0xbe0],0x31
  405a1f:	mov    QWORD PTR [rsp+0xfe0],0x63
  405a2b:	mov    QWORD PTR [rsp+0x1e40],0x31
  405a37:	mov    QWORD PTR [rsp+0x5c0],0x63
  405a43:	movabs rax,0x4049000000000000
  405a4d:	mov    QWORD PTR [rsp+0xa48],rax
  405a55:	movabs rax,0x4059000000000000
  405a5f:	mov    QWORD PTR [rsp+0x12e8],rax
  405a67:	mov    DWORD PTR [rsp+0xcc4],0x42480000
  405a72:	mov    DWORD PTR [rsp+0x10c4],0x42c80000
  405a7d:	mov    DWORD PTR [rsp+0x6e4],0x32
  405a88:	mov    DWORD PTR [rsp+0xdc4],0x64
  405a93:	mov    DWORD PTR [rsp+0x7c4],0x32
  405a9e:	mov    DWORD PTR [rsp+0x8a4],0x64
  405aa9:	mov    WORD PTR [rsp+0x2c2],0x32
  405ab3:	mov    WORD PTR [rsp+0x422],0x64
  405abd:	mov    WORD PTR [rsp+0x3a2],0x32
  405ac7:	mov    WORD PTR [rsp+0xe42],0x64
  405ad1:	mov    BYTE PTR [rsp+0x181],0x32
  405ad9:	mov    BYTE PTR [rsp+0x1f1],0x64
  405ae1:	mov    BYTE PTR [rsp+0x251],0x32
  405ae9:	mov    BYTE PTR [rsp+0x311],0x64
  405af1:	mov    QWORD PTR [rsp+0xbe8],0x32
  405afd:	mov    QWORD PTR [rsp+0xfe8],0x64
  405b09:	mov    QWORD PTR [rsp+0x1e48],0x32
  405b15:	mov    QWORD PTR [rsp+0x5c8],0x64
  405b21:	lea    rax,[rip+0x9614]        # 40f13c <getopt_long_only@@Base+0x1fdc>
  405b28:	cmove  rcx,rax
  405b2c:	mov    r15d,0x1
  405b32:	mov    al,BYTE PTR [rsp+0x27]
  405b36:	cmp    al,0x9
  405b38:	mov    rbx,QWORD PTR [rsp+0x30]
  405b3d:	mov    QWORD PTR [rsp+0x28],rcx
  405b42:	ja     407666 <Mat_VarRead@plt+0x52d6>
  405b48:	movzx  eax,al
  405b4b:	lea    rdx,[rip+0x8a06]        # 40e558 <getopt_long_only@@Base+0x13f8>
  405b52:	movsxd rax,DWORD PTR [rdx+rax*4]
  405b56:	add    rax,rdx
  405b59:	mov    DWORD PTR [rsp+0x100],esi
  405b60:	jmp    rax
  405b62:	lea    rax,[rsp+0x8c0]
  405b6a:	mov    QWORD PTR [rsp+0x60],rax
  405b6f:	lea    rax,[rsp+0x1160]
  405b77:	mov    QWORD PTR [rsp+0x68],rax
  405b7c:	lea    rax,[rsp+0x920]
  405b84:	mov    QWORD PTR [rsp+0x70],rax
  405b89:	lea    rax,[rsp+0x11c0]
  405b91:	mov    QWORD PTR [rsp+0x78],rax
  405b96:	lea    rax,[rsp+0x980]
  405b9e:	mov    QWORD PTR [rsp+0x80],rax
  405ba6:	lea    rax,[rsp+0x1220]
  405bae:	mov    QWORD PTR [rsp+0x88],rax
  405bb6:	lea    rax,[rsp+0x9e0]
  405bbe:	mov    QWORD PTR [rsp+0x90],rax
  405bc6:	lea    rax,[rsp+0x1280]
  405bce:	mov    QWORD PTR [rsp+0x98],rax
  405bd6:	mov    r12d,0x9
  405bdc:	jmp    407389 <Mat_VarRead@plt+0x4ff9>
  405be1:	mov    eax,0x1
  405be6:	mov    rbx,QWORD PTR [rsp+0x30]
  405beb:	add    r15d,0x1
  405bef:	add    DWORD PTR [rsp+0x3c],eax
  405bf3:	cmp    r15d,DWORD PTR [rsp+0x128]
  405bfb:	jl     4028a0 <Mat_VarRead@plt+0x510>
  405c01:	jmp    40c229 <Mat_VarRead@plt+0x9e99>
  405c06:	mov    ebx,0x1
  405c0b:	mov    rdi,r15
  405c0e:	call   4022a0 <Mat_Close@plt>
  405c13:	add    DWORD PTR [rsp+0x3c],ebx
  405c17:	jmp    4032c9 <Mat_VarRead@plt+0xf39>
  405c1c:	mov    QWORD PTR [rsp+0x58],r15
  405c21:	mov    rdi,QWORD PTR [rsp+0x28]
  405c26:	test   rdi,rdi
  405c29:	lea    rax,[rip+0xbe73]        # 411aa3 <getopt_long_only@@Base+0x4943>
  405c30:	cmove  rdi,rax
  405c34:	vpxor  xmm0,xmm0,xmm0
  405c38:	vmovdqa XMMWORD PTR [rsp+0x40],xmm0
  405c3e:	mov    edx,DWORD PTR [rip+0xf6dc]        # 415320 <getopt_long_only@@Base+0x81c0>
  405c44:	xor    esi,esi
  405c46:	mov    QWORD PTR [rsp+0x28],rdi
  405c4b:	call   402310 <Mat_CreateVer@plt>
  405c50:	test   rax,rax
  405c53:	je     4064aa <Mat_VarRead@plt+0x411a>
  405c59:	mov    r14,rax
  405c5c:	mov    QWORD PTR [rsp+0xc0],0x0
  405c68:	mov    eax,0x1
  405c6d:	vmovq  xmm0,rax
  405c72:	vpslldq xmm0,xmm0,0x8
  405c77:	vmovdqa XMMWORD PTR [rsp+0x100],xmm0
  405c80:	vmovdqa XMMWORD PTR [rsp+0x40],xmm0
  405c86:	mov    DWORD PTR [rsp],0x0
  405c8d:	mov    esi,0x2
  405c92:	mov    edx,0x16
  405c97:	mov    ecx,0x2
  405c9c:	lea    rdi,[rip+0xcb21]        # 4127c4 <getopt_long_only@@Base+0x5664>
  405ca3:	lea    r13,[rsp+0x40]
  405ca8:	mov    r8,r13
  405cab:	lea    rax,[rsp+0xc0]
  405cb3:	mov    r9,rax
  405cb6:	call   4020d0 <Mat_VarCreate@plt>
  405cbb:	mov    rbx,rax
  405cbe:	movzx  edx,BYTE PTR [rip+0x10797]        # 41645c <optopt@@Base+0x24>
  405cc5:	mov    rdi,r14
  405cc8:	mov    rsi,rax
  405ccb:	call   4020f0 <Mat_VarWrite@plt>
  405cd0:	mov    rdi,rbx
  405cd3:	call   402240 <Mat_VarFree@plt>
  405cd8:	mov    DWORD PTR [rsp],0x0
  405cdf:	mov    esi,0x6
  405ce4:	mov    edx,0x9
  405ce9:	mov    ecx,0x2
  405cee:	xor    r9d,r9d
  405cf1:	lea    r12,[rip+0xcabe]        # 4127b6 <getopt_long_only@@Base+0x5656>
  405cf8:	mov    rdi,r12
  405cfb:	mov    r8,r13
  405cfe:	call   4020d0 <Mat_VarCreate@plt>
  405d03:	mov    QWORD PTR [rsp+0xc0],rax
  405d0b:	mov    DWORD PTR [rsp],0x0
  405d12:	mov    esi,0x6
  405d17:	mov    edx,0x9
  405d1c:	mov    ecx,0x2
  405d21:	xor    r9d,r9d
  405d24:	lea    r12,[rip+0xca92]        # 4127bd <getopt_long_only@@Base+0x565d>
  405d2b:	mov    rdi,r12
  405d2e:	mov    r8,r13
  405d31:	call   4020d0 <Mat_VarCreate@plt>
  405d36:	mov    QWORD PTR [rsp+0xc8],rax
  405d3e:	mov    QWORD PTR [rsp+0xd0],0x0
  405d4a:	vmovaps xmm0,XMMWORD PTR [rsp+0x100]
  405d53:	vmovaps XMMWORD PTR [rsp+0x40],xmm0
  405d59:	mov    DWORD PTR [rsp],0x0
  405d60:	mov    esi,0x2
  405d65:	mov    edx,0x16
  405d6a:	mov    ecx,0x2
  405d6f:	lea    rdi,[rip+0xca53]        # 4127c9 <getopt_long_only@@Base+0x5669>
  405d76:	mov    r8,r13
  405d79:	lea    r15,[rsp+0xc0]
  405d81:	mov    r9,r15
  405d84:	call   4020d0 <Mat_VarCreate@plt>
  405d89:	mov    rbx,rax
  405d8c:	movzx  edx,BYTE PTR [rip+0x106c9]        # 41645c <optopt@@Base+0x24>
  405d93:	mov    rdi,r14
  405d96:	mov    rsi,rax
  405d99:	call   4020f0 <Mat_VarWrite@plt>
  405d9e:	mov    rdi,rbx
  405da1:	call   402240 <Mat_VarFree@plt>
  405da6:	mov    DWORD PTR [rsp],0x0
  405dad:	mov    esi,0x6
  405db2:	mov    edx,0x9
  405db7:	mov    ecx,0x2
  405dbc:	xor    r9d,r9d
  405dbf:	lea    rdi,[rip+0xc9f0]        # 4127b6 <getopt_long_only@@Base+0x5656>
  405dc6:	mov    r8,r13
  405dc9:	call   4020d0 <Mat_VarCreate@plt>
  405dce:	mov    QWORD PTR [rsp+0xc0],rax
  405dd6:	mov    DWORD PTR [rsp],0x0
  405ddd:	mov    esi,0x6
  405de2:	mov    edx,0x9
  405de7:	mov    ecx,0x2
  405dec:	xor    r9d,r9d
  405def:	mov    rdi,r12
  405df2:	mov    r8,r13
  405df5:	call   4020d0 <Mat_VarCreate@plt>
  405dfa:	mov    QWORD PTR [rsp+0xc8],rax
  405e02:	mov    QWORD PTR [rsp+0xd0],0x0
  405e0e:	vmovaps xmm0,XMMWORD PTR [rip+0x820a]        # 40e020 <getopt_long_only@@Base+0xec0>
  405e16:	vmovaps XMMWORD PTR [rsp+0x40],xmm0
  405e1c:	mov    DWORD PTR [rsp],0x0
  405e23:	mov    esi,0x2
  405e28:	mov    edx,0x16
  405e2d:	mov    ecx,0x2
  405e32:	lea    rdi,[rip+0xc995]        # 4127ce <getopt_long_only@@Base+0x566e>
  405e39:	mov    r8,r13
  405e3c:	mov    r9,r15
  405e3f:	call   4020d0 <Mat_VarCreate@plt>
  405e44:	mov    rbx,rax
  405e47:	movzx  edx,BYTE PTR [rip+0x1060e]        # 41645c <optopt@@Base+0x24>
  405e4e:	mov    rdi,r14
  405e51:	mov    rsi,rax
  405e54:	call   4020f0 <Mat_VarWrite@plt>
  405e59:	mov    rdi,rbx
  405e5c:	call   402240 <Mat_VarFree@plt>
  405e61:	vmovaps xmm0,XMMWORD PTR [rsp+0x100]
  405e6a:	vmovaps XMMWORD PTR [rsp+0x40],xmm0
  405e70:	mov    DWORD PTR [rsp],0x0
  405e77:	mov    esi,0x6
  405e7c:	mov    edx,0x9
  405e81:	mov    ecx,0x2
  405e86:	xor    r9d,r9d
  405e89:	lea    r15,[rip+0xc926]        # 4127b6 <getopt_long_only@@Base+0x5656>
  405e90:	mov    rdi,r15
  405e93:	mov    r8,r13
  405e96:	call   4020d0 <Mat_VarCreate@plt>
  405e9b:	mov    QWORD PTR [rsp+0xc0],rax
  405ea3:	mov    DWORD PTR [rsp],0x0
  405eaa:	mov    esi,0x4
  405eaf:	mov    edx,0x2
  405eb4:	mov    ecx,0x2
  405eb9:	xor    r9d,r9d
  405ebc:	mov    rdi,r12
  405ebf:	mov    r8,r13
  405ec2:	call   4020d0 <Mat_VarCreate@plt>
  405ec7:	mov    QWORD PTR [rsp+0xc8],rax
  405ecf:	mov    DWORD PTR [rsp],0x0
  405ed6:	mov    esi,0x2
  405edb:	mov    edx,0x16
  405ee0:	mov    ecx,0x2
  405ee5:	xor    r9d,r9d
  405ee8:	mov    rdi,r15
  405eeb:	mov    r8,r13
  405eee:	call   4020d0 <Mat_VarCreate@plt>
  405ef3:	mov    QWORD PTR [rsp+0xd0],rax
  405efb:	mov    DWORD PTR [rsp],0x0
  405f02:	mov    esi,0x1
  405f07:	mov    edx,0x15
  405f0c:	mov    ecx,0x2
  405f11:	xor    r9d,r9d
  405f14:	mov    rdi,r12
  405f17:	mov    r8,r13
  405f1a:	call   4020d0 <Mat_VarCreate@plt>
  405f1f:	mov    QWORD PTR [rsp+0xd8],rax
  405f27:	mov    QWORD PTR [rsp+0xe0],0x0
  405f33:	vmovdqa xmm0,XMMWORD PTR [rip+0x8145]        # 40e080 <getopt_long_only@@Base+0xf20>
  405f3b:	vmovdqa XMMWORD PTR [rsp+0x40],xmm0
  405f41:	mov    DWORD PTR [rsp],0x0
  405f48:	mov    esi,0x2
  405f4d:	mov    edx,0x16
  405f52:	mov    ecx,0x2
  405f57:	lea    rdi,[rip+0xc875]        # 4127d3 <getopt_long_only@@Base+0x5673>
  405f5e:	mov    r8,r13
  405f61:	lea    r13,[rsp+0x440]
  405f69:	lea    r9,[rsp+0xc0]
  405f71:	call   4020d0 <Mat_VarCreate@plt>
  405f76:	mov    rbx,rax
  405f79:	movzx  edx,BYTE PTR [rip+0x104dc]        # 41645c <optopt@@Base+0x24>
  405f80:	mov    rdi,r14
  405f83:	mov    rsi,rax
  405f86:	call   4020f0 <Mat_VarWrite@plt>
  405f8b:	mov    rdi,rbx
  405f8e:	call   402240 <Mat_VarFree@plt>
  405f93:	mov    rdi,r14
  405f96:	call   4022a0 <Mat_Close@plt>
  405f9b:	xor    eax,eax
  405f9d:	jmp    4064af <Mat_VarRead@plt+0x411f>
  405fa2:	mov    r12,r15
  405fa5:	mov    rdi,QWORD PTR [rsp+0x28]
  405faa:	test   rdi,rdi
  405fad:	vmovaps xmm0,XMMWORD PTR [rip+0x816b]        # 40e120 <getopt_long_only@@Base+0xfc0>
  405fb5:	vmovaps XMMWORD PTR [rsp+0x40],xmm0
  405fbb:	vpxor  xmm1,xmm1,xmm1
  405fbf:	vmovdqu YMMWORD PTR [rsp+0x370],ymm1
  405fc8:	vmovdqa YMMWORD PTR [rsp+0x360],ymm1
  405fd1:	vmovdqa YMMWORD PTR [rsp+0x340],ymm1
  405fda:	vmovdqu YMMWORD PTR [rsp+0x70],ymm1
  405fe0:	vmovdqa YMMWORD PTR [rsp+0x60],ymm1
  405fe6:	vxorps xmm0,xmm0,xmm0
  405fea:	vmovups XMMWORD PTR [rsp+0x1a9],xmm0
  405ff3:	vmovaps XMMWORD PTR [rsp+0x1a0],xmm0
  405ffc:	vmovdqa YMMWORD PTR [rsp+0xc0],ymm1
  406005:	mov    QWORD PTR [rsp+0xe0],0x0
  406011:	mov    BYTE PTR [rsp+0x1a0],0x1
  406019:	mov    DWORD PTR [rsp+0x340],0x1
  406024:	movabs rax,0x1000100010001
  40602e:	mov    QWORD PTR [rsp+0x60],rax
  406033:	mov    WORD PTR [rsp+0x68],0x1
  40603a:	mov    BYTE PTR [rsp+0x1a6],0x1
  406042:	movabs rcx,0x100000001
  40604c:	mov    QWORD PTR [rsp+0x354],rcx
  406054:	mov    QWORD PTR [rsp+0x6c],rax
  406059:	mov    BYTE PTR [rsp+0x1ac],0x1
  406061:	mov    QWORD PTR [rsp+0x368],rcx
  406069:	mov    DWORD PTR [rsp+0x370],0x1
  406074:	mov    DWORD PTR [rsp+0x78],0x10001
  40607c:	mov    WORD PTR [rsp+0x7c],0x1
  406083:	mov    BYTE PTR [rsp+0x1b2],0x1
  40608b:	vpbroadcastd xmm0,DWORD PTR [rip+0x82fc]        # 40e390 <getopt_long_only@@Base+0x1230>
  406094:	vmovdqu XMMWORD PTR [rsp+0x37c],xmm0
  40609d:	mov    WORD PTR [rsp+0x84],0x1
  4060a7:	mov    WORD PTR [rsp+0x86],0x1
  4060b1:	mov    BYTE PTR [rsp+0x1b8],0x1
  4060b9:	vmovdqa XMMWORD PTR [rsp+0x390],xmm0
  4060c2:	mov    DWORD PTR [rsp+0x3a0],0x1
  4060cd:	lea    rax,[rip+0x9091]        # 40f165 <getopt_long_only@@Base+0x2005>
  4060d4:	cmove  rdi,rax
  4060d8:	mov    WORD PTR [rsp+0x90],0x1
  4060e2:	mov    edx,DWORD PTR [rip+0xf238]        # 415320 <getopt_long_only@@Base+0x81c0>
  4060e8:	xor    esi,esi
  4060ea:	mov    QWORD PTR [rsp+0x28],rdi
  4060ef:	vzeroupper 
  4060f2:	call   402310 <Mat_CreateVer@plt>
  4060f7:	test   rax,rax
  4060fa:	je     406207 <Mat_VarRead@plt+0x3e77>
  406100:	mov    r14,rax
  406103:	mov    DWORD PTR [rsp],0x200
  40610a:	xor    r15d,r15d
  40610d:	xor    edi,edi
  40610f:	mov    esi,0xd
  406114:	mov    edx,0x6
  406119:	mov    ecx,0x2
  40611e:	lea    rbx,[rsp+0x40]
  406123:	mov    r8,rbx
  406126:	lea    r9,[rsp+0x340]
  40612e:	call   4020d0 <Mat_VarCreate@plt>
  406133:	mov    QWORD PTR [rsp+0xc0],rax
  40613b:	mov    DWORD PTR [rsp],0x200
  406142:	xor    edi,edi
  406144:	mov    esi,0xb
  406149:	mov    edx,0x4
  40614e:	mov    ecx,0x2
  406153:	mov    r8,rbx
  406156:	lea    r9,[rsp+0x60]
  40615b:	call   4020d0 <Mat_VarCreate@plt>
  406160:	mov    QWORD PTR [rsp+0xc8],rax
  406168:	mov    DWORD PTR [rsp],0x200
  40616f:	xor    edi,edi
  406171:	mov    esi,0x9
  406176:	mov    edx,0x2
  40617b:	mov    ecx,0x2
  406180:	mov    r8,rbx
  406183:	lea    r9,[rsp+0x1a0]
  40618b:	call   4020d0 <Mat_VarCreate@plt>
  406190:	mov    QWORD PTR [rsp+0xd0],rax
  406198:	mov    QWORD PTR [rsp+0x40],0x0
  4061a1:	mov    DWORD PTR [rsp],0x200
  4061a8:	xor    edi,edi
  4061aa:	mov    esi,0x9
  4061af:	mov    edx,0x2
  4061b4:	mov    ecx,0x2
  4061b9:	xor    r9d,r9d
  4061bc:	mov    r8,rbx
  4061bf:	call   4020d0 <Mat_VarCreate@plt>
  4061c4:	mov    QWORD PTR [rsp+0xd8],rax
  4061cc:	vmovdqa xmm0,XMMWORD PTR [rip+0x7f2c]        # 40e100 <getopt_long_only@@Base+0xfa0>
  4061d4:	vmovdqa XMMWORD PTR [rsp+0x40],xmm0
  4061da:	mov    DWORD PTR [rsp],0x0
  4061e1:	mov    esi,0x1
  4061e6:	mov    edx,0x15
  4061eb:	mov    ecx,0x2
  4061f0:	lea    rdi,[rip+0x9ee6]        # 4100dd <getopt_long_only@@Base+0x2f7d>
  4061f7:	mov    r8,rbx
  4061fa:	lea    r9,[rsp+0xc0]
  406202:	jmp    40327e <Mat_VarRead@plt+0xeee>
  406207:	mov    r15d,0x1
  40620d:	mov    rbx,QWORD PTR [rsp+0x30]
  406212:	add    r12d,0x1
  406216:	add    DWORD PTR [rsp+0x3c],r15d
  40621b:	mov    r15,r12
  40621e:	cmp    r15d,DWORD PTR [rsp+0x128]
  406226:	jl     4028a0 <Mat_VarRead@plt+0x510>
  40622c:	jmp    40c229 <Mat_VarRead@plt+0x9e99>
  406231:	vmovaps xmm0,XMMWORD PTR [rip+0x7fa7]        # 40e1e0 <getopt_long_only@@Base+0x1080>
  406239:	vmovaps XMMWORD PTR [rsp+0x40],xmm0
  40623f:	xor    eax,eax
  406241:	vmovdqa ymm0,YMMWORD PTR [rip+0x7fd7]        # 40e220 <getopt_long_only@@Base+0x10c0>
  406249:	vmovdqa ymm7,YMMWORD PTR [rip+0x7fef]        # 40e240 <getopt_long_only@@Base+0x10e0>
  406251:	vmovdqa ymm9,ymm7
  406255:	vmovdqa ymm8,YMMWORD PTR [rsp+0x1100]
  40625e:	vmovdqa xmm7,XMMWORD PTR [rip+0x7e7a]        # 40e0e0 <getopt_long_only@@Base+0xf80>
  406266:	vmovdqa xmm10,xmm7
  40626a:	vmovdqa xmm7,XMMWORD PTR [rip+0x7e7e]        # 40e0f0 <getopt_long_only@@Base+0xf90>
  406272:	vmovdqa ymm11,YMMWORD PTR [rsp+0x10e0]
  40627b:	vpcmpeqd ymm12,ymm12,ymm12
  406280:	vpsubq ymm1,ymm0,ymm12
  406285:	vpermd ymm2,ymm9,ymm1
  40628a:	vcvtdq2pd ymm3,xmm2
  40628e:	vmovups YMMWORD PTR [rsp+rax*8+0x8c0],ymm3
  406297:	vcvtdq2ps xmm3,xmm2
  40629b:	vmovaps XMMWORD PTR [rsp+rax*4+0xc00],xmm3
  4062a4:	vpaddq ymm3,ymm0,ymm8
  4062a9:	vpermd ymm4,ymm9,ymm3
  4062ae:	vinserti128 ymm5,ymm2,xmm4,0x1
  4062b4:	vmovdqu YMMWORD PTR [rsp+rax*4+0x620],ymm5
  4062bd:	vmovdqu YMMWORD PTR [rsp+rax*4+0xd00],ymm5
  4062c6:	vpshufb xmm5,xmm2,xmm10
  4062cb:	vpshufb xmm6,xmm4,xmm10
  4062d0:	vpunpcklqdq xmm5,xmm5,xmm6
  4062d4:	vmovdqa XMMWORD PTR [rsp+rax*2+0x260],xmm5
  4062dd:	vmovdqa XMMWORD PTR [rsp+rax*2+0x3c0],xmm5
  4062e6:	vpshufb xmm2,xmm2,xmm7
  4062eb:	vmovd  DWORD PTR [rsp+rax*1+0x150],xmm2
  4062f4:	vmovd  DWORD PTR [rsp+rax*1+0x1c0],xmm2
  4062fd:	vmovdqu YMMWORD PTR [rsp+rax*8+0xa60],ymm1
  406306:	vmovdqu YMMWORD PTR [rsp+rax*8+0xe60],ymm1
  40630f:	vcvtdq2pd ymm1,xmm4
  406313:	vmovups YMMWORD PTR [rsp+rax*8+0x8e0],ymm1
  40631c:	vcvtdq2ps xmm1,xmm4
  406320:	vmovaps XMMWORD PTR [rsp+rax*4+0xc10],xmm1
  406329:	vpshufb xmm1,xmm4,xmm7
  40632e:	vmovd  DWORD PTR [rsp+rax*1+0x154],xmm1
  406337:	vmovd  DWORD PTR [rsp+rax*1+0x1c4],xmm1
  406340:	vmovdqu YMMWORD PTR [rsp+rax*8+0xa80],ymm3
  406349:	vmovdqu YMMWORD PTR [rsp+rax*8+0xe80],ymm3
  406352:	add    rax,0x8
  406356:	vpaddq ymm0,ymm0,ymm11
  40635b:	cmp    rax,0x30
  40635f:	jne    406280 <Mat_VarRead@plt+0x3ef0>
  406365:	mov    rcx,QWORD PTR [rsp+0x28]
  40636a:	test   rcx,rcx
  40636d:	movabs rax,0x4048800000000000
  406377:	mov    QWORD PTR [rsp+0xa40],rax
  40637f:	movabs rax,0x4248000042440000
  406389:	mov    QWORD PTR [rsp+0xcc0],rax
  406391:	movabs rax,0x3200000031
  40639b:	mov    QWORD PTR [rsp+0x6e0],rax
  4063a3:	mov    QWORD PTR [rsp+0xdc0],rax
  4063ab:	mov    DWORD PTR [rsp+0x2c0],0x320031
  4063b6:	mov    DWORD PTR [rsp+0x420],0x320031
  4063c1:	mov    WORD PTR [rsp+0x180],0x3231
  4063cb:	mov    WORD PTR [rsp+0x1f0],0x3231
  4063d5:	mov    QWORD PTR [rsp+0xbe0],0x31
  4063e1:	mov    QWORD PTR [rsp+0xfe0],0x31
  4063ed:	movabs rax,0x4049000000000000
  4063f7:	mov    QWORD PTR [rsp+0xa48],rax
  4063ff:	mov    QWORD PTR [rsp+0xbe8],0x32
  40640b:	mov    QWORD PTR [rsp+0xfe8],0x32
  406417:	lea    rax,[rip+0x8d66]        # 40f184 <getopt_long_only@@Base+0x2024>
  40641e:	cmove  rcx,rax
  406422:	mov    ebx,0x1
  406427:	mov    al,BYTE PTR [rsp+0x27]
  40642b:	cmp    al,0x9
  40642d:	mov    QWORD PTR [rsp+0x28],rcx
  406432:	mov    QWORD PTR [rsp+0x58],r15
  406437:	ja     408009 <Mat_VarRead@plt+0x5c79>
  40643d:	mov    r15d,0x9
  406443:	movzx  eax,al
  406446:	lea    rdx,[rip+0x80e3]        # 40e530 <getopt_long_only@@Base+0x13d0>
  40644d:	movsxd rax,DWORD PTR [rdx+rax*4]
  406451:	add    rax,rdx
  406454:	lea    rdx,[rsp+0x9e0]
  40645c:	mov    rsi,rdx
  40645f:	lea    rdx,[rsp+0x980]
  406467:	lea    r13,[rsp+0x920]
  40646f:	lea    r14,[rsp+0x8c0]
  406477:	jmp    rax
  406479:	mov    r15d,0x7
  40647f:	lea    rax,[rsp+0xc90]
  406487:	mov    rsi,rax
  40648a:	lea    rax,[rsp+0xc60]
  406492:	mov    rdx,rax
  406495:	lea    r13,[rsp+0xc30]
  40649d:	lea    r14,[rsp+0xc00]
  4064a5:	jmp    407e9f <Mat_VarRead@plt+0x5b0f>
  4064aa:	mov    eax,0x1
  4064af:	mov    rbx,QWORD PTR [rsp+0x30]
  4064b4:	mov    r12,QWORD PTR [rsp+0x58]
  4064b9:	add    r12d,0x1
  4064bd:	add    DWORD PTR [rsp+0x3c],eax
  4064c1:	mov    r15,r12
  4064c4:	cmp    r15d,DWORD PTR [rsp+0x128]
  4064cc:	jl     4028a0 <Mat_VarRead@plt+0x510>
  4064d2:	jmp    40c229 <Mat_VarRead@plt+0x9e99>
  4064d7:	mov    QWORD PTR [rsp+0x58],r15
  4064dc:	vmovaps xmm0,XMMWORD PTR [rip+0x7cfc]        # 40e1e0 <getopt_long_only@@Base+0x1080>
  4064e4:	vmovaps XMMWORD PTR [rsp+0x40],xmm0
  4064ea:	vxorps xmm0,xmm0,xmm0
  4064ee:	vmovaps YMMWORD PTR [rsp+0x80],ymm0
  4064f7:	vmovaps YMMWORD PTR [rsp+0x60],ymm0
  4064fd:	xor    eax,eax
  4064ff:	vmovdqa ymm0,YMMWORD PTR [rip+0x7d19]        # 40e220 <getopt_long_only@@Base+0x10c0>
  406507:	vmovdqa xmm1,XMMWORD PTR [rip+0x7bc1]        # 40e0d0 <getopt_long_only@@Base+0xf70>
  40650f:	vmovdqa ymm8,YMMWORD PTR [rip+0x7d29]        # 40e240 <getopt_long_only@@Base+0x10e0>
  406517:	vmovdqa xmm9,XMMWORD PTR [rip+0x7bc1]        # 40e0e0 <getopt_long_only@@Base+0xf80>
  40651f:	vmovdqa xmm10,XMMWORD PTR [rip+0x7bc9]        # 40e0f0 <getopt_long_only@@Base+0xf90>
  406527:	vpcmpeqd ymm11,ymm11,ymm11
  40652c:	vpsubq ymm2,ymm0,ymm11
  406531:	vpermd ymm3,ymm8,ymm2
  406536:	vcvtdq2pd ymm4,xmm3
  40653a:	vmovups YMMWORD PTR [rsp+rax*8+0x8c0],ymm4
  406543:	vpbroadcastq ymm4,QWORD PTR [rip+0x7e14]        # 40e360 <getopt_long_only@@Base+0x1200>
  40654c:	vpaddq ymm4,ymm0,ymm4
  406550:	vpbroadcastd xmm5,DWORD PTR [rip+0x7e2f]        # 40e388 <getopt_long_only@@Base+0x1228>
  406559:	vpaddd xmm5,xmm1,xmm5
  40655d:	vpermd ymm6,ymm8,ymm4
  406562:	vcvtdq2pd ymm7,xmm6
  406566:	vmovups YMMWORD PTR [rsp+rax*8+0x1160],ymm7
  40656f:	vcvtdq2ps xmm7,xmm3
  406573:	vmovaps XMMWORD PTR [rsp+rax*4+0xc00],xmm7
  40657c:	vcvtdq2ps xmm7,xmm6
  406580:	vmovaps XMMWORD PTR [rsp+rax*4+0x1000],xmm7
  406589:	vmovdqa XMMWORD PTR [rsp+rax*4+0x620],xmm3
  406592:	vmovdqa XMMWORD PTR [rsp+rax*4+0xd00],xmm6
  40659b:	vmovdqa XMMWORD PTR [rsp+rax*4+0x700],xmm3
  4065a4:	vmovdqa XMMWORD PTR [rsp+rax*4+0x7e0],xmm6
  4065ad:	vpshufb xmm6,xmm3,xmm9
  4065b2:	vmovq  QWORD PTR [rsp+rax*2+0x260],xmm6
  4065bb:	vpshufb xmm7,xmm5,xmm9
  4065c0:	vmovq  QWORD PTR [rsp+rax*2+0x3c0],xmm7
  4065c9:	vmovq  QWORD PTR [rsp+rax*2+0x340],xmm6
  4065d2:	vmovq  QWORD PTR [rsp+rax*2+0xde0],xmm7
  4065db:	vpshufb xmm3,xmm3,xmm10
  4065e0:	vmovd  DWORD PTR [rsp+rax*1+0x150],xmm3
  4065e9:	vpshufb xmm5,xmm5,xmm10
  4065ee:	vmovd  DWORD PTR [rsp+rax*1+0x1c0],xmm5
  4065f7:	vmovd  DWORD PTR [rsp+rax*1+0x220],xmm3
  406600:	vmovd  DWORD PTR [rsp+rax*1+0x2e0],xmm5
  406609:	vmovdqu YMMWORD PTR [rsp+rax*8+0xa60],ymm2
  406612:	vmovdqu YMMWORD PTR [rsp+rax*8+0xe60],ymm4
  40661b:	vmovdqu YMMWORD PTR [rsp+rax*8+0x1cc0],ymm2
  406624:	vmovdqu YMMWORD PTR [rsp+rax*8+0x440],ymm4
  40662d:	add    rax,0x4
  406631:	vpbroadcastq ymm2,QWORD PTR [rip+0x7d2e]        # 40e368 <getopt_long_only@@Base+0x1208>
  40663a:	vpaddq ymm0,ymm0,ymm2
  40663e:	vpbroadcastd xmm2,DWORD PTR [rip+0x7d45]        # 40e38c <getopt_long_only@@Base+0x122c>
  406647:	vpaddd xmm1,xmm1,xmm2
  40664b:	cmp    rax,0x30
  40664f:	jne    40652c <Mat_VarRead@plt+0x419c>
  406655:	mov    rcx,QWORD PTR [rsp+0x28]
  40665a:	test   rcx,rcx
  40665d:	movabs rax,0x4048800000000000
  406667:	mov    QWORD PTR [rsp+0xa40],rax
  40666f:	movabs rax,0x4058c00000000000
  406679:	mov    QWORD PTR [rsp+0x12e0],rax
  406681:	mov    DWORD PTR [rsp+0xcc0],0x42440000
  40668c:	mov    DWORD PTR [rsp+0x10c0],0x42c60000
  406697:	mov    DWORD PTR [rsp+0x6e0],0x31
  4066a2:	mov    DWORD PTR [rsp+0xdc0],0x63
  4066ad:	mov    DWORD PTR [rsp+0x7c0],0x31
  4066b8:	mov    DWORD PTR [rsp+0x8a0],0x63
  4066c3:	mov    WORD PTR [rsp+0x2c0],0x31
  4066cd:	mov    WORD PTR [rsp+0x420],0x63
  4066d7:	mov    WORD PTR [rsp+0x3a0],0x31
  4066e1:	mov    WORD PTR [rsp+0xe40],0x63
  4066eb:	mov    BYTE PTR [rsp+0x180],0x31
  4066f3:	mov    BYTE PTR [rsp+0x1f0],0x63
  4066fb:	mov    BYTE PTR [rsp+0x250],0x31
  406703:	mov    BYTE PTR [rsp+0x310],0x63
  40670b:	mov    QWORD PTR [rsp+0xbe0],0x31
  406717:	mov    QWORD PTR [rsp+0xfe0],0x63
  406723:	mov    QWORD PTR [rsp+0x1e40],0x31
  40672f:	mov    QWORD PTR [rsp+0x5c0],0x63
  40673b:	movabs rax,0x4049000000000000
  406745:	mov    QWORD PTR [rsp+0xa48],rax
  40674d:	movabs rax,0x4059000000000000
  406757:	mov    QWORD PTR [rsp+0x12e8],rax
  40675f:	mov    DWORD PTR [rsp+0xcc4],0x42480000
  40676a:	mov    DWORD PTR [rsp+0x10c4],0x42c80000
  406775:	mov    DWORD PTR [rsp+0x6e4],0x32
  406780:	mov    DWORD PTR [rsp+0xdc4],0x64
  40678b:	mov    DWORD PTR [rsp+0x7c4],0x32
  406796:	mov    DWORD PTR [rsp+0x8a4],0x64
  4067a1:	mov    WORD PTR [rsp+0x2c2],0x32
  4067ab:	mov    WORD PTR [rsp+0x422],0x64
  4067b5:	mov    WORD PTR [rsp+0x3a2],0x32
  4067bf:	mov    WORD PTR [rsp+0xe42],0x64
  4067c9:	mov    BYTE PTR [rsp+0x181],0x32
  4067d1:	mov    BYTE PTR [rsp+0x1f1],0x64
  4067d9:	mov    BYTE PTR [rsp+0x251],0x32
  4067e1:	mov    BYTE PTR [rsp+0x311],0x64
  4067e9:	mov    QWORD PTR [rsp+0xbe8],0x32
  4067f5:	mov    QWORD PTR [rsp+0xfe8],0x64
  406801:	mov    QWORD PTR [rsp+0x1e48],0x32
  40680d:	mov    QWORD PTR [rsp+0x5c8],0x64
  406819:	lea    rax,[rip+0x8983]        # 40f1a3 <getopt_long_only@@Base+0x2043>
  406820:	cmove  rcx,rax
  406824:	mov    r15d,0x1
  40682a:	mov    al,BYTE PTR [rsp+0x27]
  40682e:	cmp    al,0x9
  406830:	mov    QWORD PTR [rsp+0x28],rcx
  406835:	ja     4086a1 <Mat_VarRead@plt+0x6311>
  40683b:	movzx  eax,al
  40683e:	lea    rdx,[rip+0x7cc3]        # 40e508 <getopt_long_only@@Base+0x13a8>
  406845:	movsxd rax,DWORD PTR [rdx+rax*4]
  406849:	add    rax,rdx
  40684c:	jmp    rax
  40684e:	lea    rax,[rsp+0x8c0]
  406856:	mov    QWORD PTR [rsp+0x60],rax
  40685b:	lea    rax,[rsp+0x1160]
  406863:	mov    QWORD PTR [rsp+0x68],rax
  406868:	lea    rax,[rsp+0x920]
  406870:	mov    QWORD PTR [rsp+0x70],rax
  406875:	lea    rax,[rsp+0x11c0]
  40687d:	mov    QWORD PTR [rsp+0x78],rax
  406882:	lea    rax,[rsp+0x980]
  40688a:	mov    QWORD PTR [rsp+0x80],rax
  406892:	lea    rax,[rsp+0x1220]
  40689a:	mov    QWORD PTR [rsp+0x88],rax
  4068a2:	lea    rax,[rsp+0x9e0]
  4068aa:	mov    QWORD PTR [rsp+0x90],rax
  4068b2:	lea    rax,[rsp+0x1280]
  4068ba:	mov    QWORD PTR [rsp+0x98],rax
  4068c2:	mov    r12d,0x9
  4068c8:	jmp    40854a <Mat_VarRead@plt+0x61ba>
  4068cd:	mov    ebx,0x1
  4068d2:	lea    rax,[rsp+0x174]
  4068da:	mov    rsi,rax
  4068dd:	lea    rax,[rsp+0x168]
  4068e5:	mov    rdx,rax
  4068e8:	lea    r15,[rsp+0x15c]
  4068f0:	lea    r13,[rsp+0x150]
  4068f8:	jmp    406a42 <Mat_VarRead@plt+0x46b2>
  4068fd:	mov    ebx,0x2
  406902:	lea    rax,[rsp+0x1e4]
  40690a:	mov    rsi,rax
  40690d:	lea    rax,[rsp+0x1d8]
  406915:	mov    rdx,rax
  406918:	lea    r15,[rsp+0x1cc]
  406920:	lea    r13,[rsp+0x1c0]
  406928:	jmp    406a42 <Mat_VarRead@plt+0x46b2>
  40692d:	mov    ebx,0x3
  406932:	lea    rax,[rsp+0x2a8]
  40693a:	mov    rsi,rax
  40693d:	lea    rax,[rsp+0x290]
  406945:	mov    rdx,rax
  406948:	lea    r15,[rsp+0x278]
  406950:	lea    r13,[rsp+0x260]
  406958:	jmp    406a42 <Mat_VarRead@plt+0x46b2>
  40695d:	mov    ebx,0x4
  406962:	lea    rax,[rsp+0x408]
  40696a:	mov    rsi,rax
  40696d:	lea    rax,[rsp+0x3f0]
  406975:	mov    rdx,rax
  406978:	lea    r15,[rsp+0x3d8]
  406980:	lea    r13,[rsp+0x3c0]
  406988:	jmp    406a42 <Mat_VarRead@plt+0x46b2>
  40698d:	mov    ebx,0x5
  406992:	lea    rax,[rsp+0x6b0]
  40699a:	mov    rsi,rax
  40699d:	lea    rax,[rsp+0x680]
  4069a5:	mov    rdx,rax
  4069a8:	lea    r15,[rsp+0x650]
  4069b0:	lea    r13,[rsp+0x620]
  4069b8:	jmp    406a42 <Mat_VarRead@plt+0x46b2>
  4069bd:	mov    ebx,0x6
  4069c2:	lea    rax,[rsp+0xd90]
  4069ca:	mov    rsi,rax
  4069cd:	lea    rax,[rsp+0xd60]
  4069d5:	mov    rdx,rax
  4069d8:	lea    r15,[rsp+0xd30]
  4069e0:	lea    r13,[rsp+0xd00]
  4069e8:	jmp    406a42 <Mat_VarRead@plt+0x46b2>
  4069ea:	mov    ebx,0xc
  4069ef:	lea    rax,[rsp+0xb80]
  4069f7:	mov    rsi,rax
  4069fa:	lea    rax,[rsp+0xb20]
  406a02:	mov    rdx,rax
  406a05:	lea    r15,[rsp+0xac0]
  406a0d:	lea    r13,[rsp+0xa60]
  406a15:	jmp    406a42 <Mat_VarRead@plt+0x46b2>
  406a17:	mov    ebx,0xd
  406a1c:	lea    rax,[rsp+0xf80]
  406a24:	mov    rsi,rax
  406a27:	lea    rax,[rsp+0xf20]
  406a2f:	mov    rdx,rax
  406a32:	lea    r15,[rsp+0xec0]
  406a3a:	lea    r13,[rsp+0xe60]
  406a42:	mov    QWORD PTR [rsp+0x110],rdx
  406a4a:	mov    QWORD PTR [rsp+0xb8],rsi
  406a52:	mov    edx,DWORD PTR [rip+0xe8c8]        # 415320 <getopt_long_only@@Base+0x81c0>
  406a58:	xor    esi,esi
  406a5a:	mov    rdi,rcx
  406a5d:	vzeroupper 
  406a60:	call   402310 <Mat_CreateVer@plt>
  406a65:	mov    QWORD PTR [rsp+0x100],rax
  406a6d:	test   rax,rax
  406a70:	je     406d63 <Mat_VarRead@plt+0x49d3>
  406a76:	mov    DWORD PTR [rsp],0x1
  406a7d:	mov    ecx,0x2
  406a82:	lea    rdi,[rip+0xbd2d]        # 4127b6 <getopt_long_only@@Base+0x5656>
  406a89:	mov    QWORD PTR [rsp+0x120],r15
  406a91:	mov    r15d,ebx
  406a94:	mov    rbx,QWORD PTR [rsp+0xa8]
  406a9c:	mov    esi,ebx
  406a9e:	mov    edx,r15d
  406aa1:	lea    r12,[rsp+0x40]
  406aa6:	mov    r8,r12
  406aa9:	mov    r9,r13
  406aac:	call   4020d0 <Mat_VarCreate@plt>
  406ab1:	mov    QWORD PTR [rsp+0xc0],rax
  406ab9:	mov    DWORD PTR [rsp],0x1
  406ac0:	mov    ecx,0x2
  406ac5:	lea    rdi,[rip+0xbcf1]        # 4127bd <getopt_long_only@@Base+0x565d>
  406acc:	mov    esi,ebx
  406ace:	mov    DWORD PTR [rsp+0x118],r15d
  406ad6:	mov    edx,r15d
  406ad9:	mov    r8,r12
  406adc:	mov    r9,QWORD PTR [rsp+0x120]
  406ae4:	call   4020d0 <Mat_VarCreate@plt>
  406ae9:	mov    QWORD PTR [rsp+0xc8],rax
  406af1:	cmp    r14d,0x1
  406af5:	je     406be4 <Mat_VarRead@plt+0x4854>
  406afb:	test   r14d,r14d
  406afe:	jne    406d46 <Mat_VarRead@plt+0x49b6>
  406b04:	mov    DWORD PTR [rsp],0x1
  406b0b:	mov    ecx,0x2
  406b10:	lea    rdi,[rip+0xbc9f]        # 4127b6 <getopt_long_only@@Base+0x5656>
  406b17:	mov    r14,QWORD PTR [rsp+0xa8]
  406b1f:	mov    esi,r14d
  406b22:	mov    ebx,DWORD PTR [rsp+0x118]
  406b29:	mov    edx,ebx
  406b2b:	lea    r15,[rsp+0x40]
  406b30:	mov    r8,r15
  406b33:	mov    r9,QWORD PTR [rsp+0x110]
  406b3b:	call   4020d0 <Mat_VarCreate@plt>
  406b40:	mov    QWORD PTR [rsp+0xd0],rax
  406b48:	mov    DWORD PTR [rsp],0x1
  406b4f:	mov    ecx,0x2
  406b54:	lea    rdi,[rip+0xbc62]        # 4127bd <getopt_long_only@@Base+0x565d>
  406b5b:	mov    esi,r14d
  406b5e:	mov    edx,ebx
  406b60:	mov    r8,r15
  406b63:	mov    r9,QWORD PTR [rsp+0xb8]
  406b6b:	call   4020d0 <Mat_VarCreate@plt>
  406b70:	mov    QWORD PTR [rsp+0xd8],rax
  406b78:	mov    QWORD PTR [rsp+0xe0],0x0
  406b84:	vmovdqa xmm0,XMMWORD PTR [rip+0x74f4]        # 40e080 <getopt_long_only@@Base+0xf20>
  406b8c:	vmovdqa XMMWORD PTR [rsp+0x40],xmm0
  406b92:	mov    DWORD PTR [rsp],0x0
  406b99:	mov    esi,0x2
  406b9e:	mov    edx,0x16
  406ba3:	mov    ecx,0x2
  406ba8:	lea    rdi,[rip+0x952e]        # 4100dd <getopt_long_only@@Base+0x2f7d>
  406baf:	mov    r8,r15
  406bb2:	lea    r9,[rsp+0xc0]
  406bba:	call   4020d0 <Mat_VarCreate@plt>
  406bbf:	mov    rbx,rax
  406bc2:	movzx  edx,BYTE PTR [rip+0xf893]        # 41645c <optopt@@Base+0x24>
  406bc9:	mov    r15,QWORD PTR [rsp+0x100]
  406bd1:	mov    rdi,r15
  406bd4:	mov    rsi,rax
  406bd7:	call   4020f0 <Mat_VarWrite@plt>
  406bdc:	mov    r12d,eax
  406bdf:	jmp    406d53 <Mat_VarRead@plt+0x49c3>
  406be4:	mov    QWORD PTR [rsp+0xd0],0x0
  406bf0:	vmovaps xmm0,XMMWORD PTR [rip+0x7428]        # 40e020 <getopt_long_only@@Base+0xec0>
  406bf8:	vmovaps XMMWORD PTR [rsp+0x40],xmm0
  406bfe:	mov    DWORD PTR [rsp],0x0
  406c05:	mov    esi,0x2
  406c0a:	mov    edx,0x16
  406c0f:	mov    ecx,0x2
  406c14:	lea    rax,[rip+0x94c2]        # 4100dd <getopt_long_only@@Base+0x2f7d>
  406c1b:	mov    rdi,rax
  406c1e:	lea    r13,[rsp+0x40]
  406c23:	mov    r8,r13
  406c26:	lea    rax,[rsp+0xc0]
  406c2e:	mov    r9,rax
  406c31:	call   4020d0 <Mat_VarCreate@plt>
  406c36:	mov    r12,rax
  406c39:	movzx  edx,BYTE PTR [rip+0xf81c]        # 41645c <optopt@@Base+0x24>
  406c40:	mov    ecx,0x1
  406c45:	mov    r15,QWORD PTR [rsp+0x100]
  406c4d:	mov    rdi,r15
  406c50:	mov    rsi,rax
  406c53:	call   402140 <Mat_VarWriteAppend@plt>
  406c58:	mov    DWORD PTR [rsp+0x120],eax
  406c5f:	mov    rdi,r12
  406c62:	call   402240 <Mat_VarFree@plt>
  406c67:	vmovaps xmm0,XMMWORD PTR [rip+0x73f1]        # 40e060 <getopt_long_only@@Base+0xf00>
  406c6f:	vmovaps XMMWORD PTR [rsp+0x40],xmm0
  406c75:	mov    DWORD PTR [rsp],0x1
  406c7c:	mov    ecx,0x2
  406c81:	lea    rdi,[rip+0xbb2e]        # 4127b6 <getopt_long_only@@Base+0x5656>
  406c88:	mov    r14,QWORD PTR [rsp+0xa8]
  406c90:	mov    esi,r14d
  406c93:	mov    ebx,DWORD PTR [rsp+0x118]
  406c9a:	mov    edx,ebx
  406c9c:	mov    r8,r13
  406c9f:	mov    r9,QWORD PTR [rsp+0x110]
  406ca7:	call   4020d0 <Mat_VarCreate@plt>
  406cac:	mov    QWORD PTR [rsp+0xc0],rax
  406cb4:	mov    DWORD PTR [rsp],0x1
  406cbb:	mov    ecx,0x2
  406cc0:	lea    rdi,[rip+0xbaf6]        # 4127bd <getopt_long_only@@Base+0x565d>
  406cc7:	mov    esi,r14d
  406cca:	mov    edx,ebx
  406ccc:	mov    r8,r13
  406ccf:	mov    r9,QWORD PTR [rsp+0xb8]
  406cd7:	call   4020d0 <Mat_VarCreate@plt>
  406cdc:	mov    QWORD PTR [rsp+0xc8],rax
  406ce4:	vmovdqa xmm0,XMMWORD PTR [rip+0x7334]        # 40e020 <getopt_long_only@@Base+0xec0>
  406cec:	vmovdqa XMMWORD PTR [rsp+0x40],xmm0
  406cf2:	mov    DWORD PTR [rsp],0x0
  406cf9:	mov    esi,0x2
  406cfe:	mov    edx,0x16
  406d03:	mov    ecx,0x2
  406d08:	lea    rdi,[rip+0x93ce]        # 4100dd <getopt_long_only@@Base+0x2f7d>
  406d0f:	mov    r8,r13
  406d12:	lea    r9,[rsp+0xc0]
  406d1a:	call   4020d0 <Mat_VarCreate@plt>
  406d1f:	mov    rbx,rax
  406d22:	movzx  edx,BYTE PTR [rip+0xf733]        # 41645c <optopt@@Base+0x24>
  406d29:	mov    ecx,0x1
  406d2e:	mov    rdi,r15
  406d31:	mov    rsi,rax
  406d34:	call   402140 <Mat_VarWriteAppend@plt>
  406d39:	mov    r12d,eax
  406d3c:	add    r12d,DWORD PTR [rsp+0x120]
  406d44:	jmp    406d53 <Mat_VarRead@plt+0x49c3>
  406d46:	xor    r12d,r12d
  406d49:	xor    ebx,ebx
  406d4b:	mov    r15,QWORD PTR [rsp+0x100]
  406d53:	mov    rdi,rbx
  406d56:	call   402240 <Mat_VarFree@plt>
  406d5b:	mov    rdi,r15
  406d5e:	call   4022a0 <Mat_Close@plt>
  406d63:	mov    r15,QWORD PTR [rsp+0x58]
  406d68:	add    r15d,0x1
  406d6c:	add    DWORD PTR [rsp+0x3c],r12d
  406d71:	mov    rbx,QWORD PTR [rsp+0x30]
  406d76:	lea    r13,[rsp+0x440]
  406d7e:	cmp    r15d,DWORD PTR [rsp+0x128]
  406d86:	jl     4028a0 <Mat_VarRead@plt+0x510>
  406d8c:	jmp    40c229 <Mat_VarRead@plt+0x9e99>
  406d91:	mov    rax,QWORD PTR [rip+0xe258]        # 414ff0 <getopt_long_only@@Base+0x7e90>
  406d98:	mov    rdi,QWORD PTR [rax]
  406d9b:	xor    eax,eax
  406d9d:	lea    rsi,[rip+0xba3d]        # 4127e1 <getopt_long_only@@Base+0x5681>
  406da4:	mov    rdx,rbx
  406da7:	call   402220 <fprintf@plt>
  406dac:	jmp    40541e <Mat_VarRead@plt+0x308e>
  406db1:	mov    r12,r15
  406db4:	mov    rdi,QWORD PTR [rsp+0x28]
  406db9:	test   rdi,rdi
  406dbc:	lea    rax,[rip+0xb245]        # 412008 <getopt_long_only@@Base+0x4ea8>
  406dc3:	cmove  rdi,rax
  406dc7:	vpxor  xmm0,xmm0,xmm0
  406dcb:	vmovdqa XMMWORD PTR [rsp+0x40],xmm0
  406dd1:	mov    edx,DWORD PTR [rip+0xe549]        # 415320 <getopt_long_only@@Base+0x81c0>
  406dd7:	xor    esi,esi
  406dd9:	mov    QWORD PTR [rsp+0x28],rdi
  406dde:	call   402310 <Mat_CreateVer@plt>
  406de3:	test   rax,rax
  406de6:	je     407a0b <Mat_VarRead@plt+0x567b>
  406dec:	mov    r14,rax
  406def:	mov    eax,0x1
  406df4:	vmovq  xmm0,rax
  406df9:	vpslldq xmm0,xmm0,0x8
  406dfe:	vmovdqa XMMWORD PTR [rsp+0x40],xmm0
  406e04:	mov    DWORD PTR [rsp],0x0
  406e0b:	xor    r15d,r15d
  406e0e:	mov    esi,0x1
  406e13:	mov    edx,0x15
  406e18:	mov    ecx,0x2
  406e1d:	xor    r9d,r9d
  406e20:	lea    rdi,[rip+0xb99d]        # 4127c4 <getopt_long_only@@Base+0x5664>
  406e27:	lea    r13,[rsp+0x40]
  406e2c:	mov    r8,r13
  406e2f:	call   4020d0 <Mat_VarCreate@plt>
  406e34:	mov    rbx,rax
  406e37:	movzx  edx,BYTE PTR [rip+0xf61e]        # 41645c <optopt@@Base+0x24>
  406e3e:	mov    rdi,r14
  406e41:	mov    rsi,rax
  406e44:	call   4020f0 <Mat_VarWrite@plt>
  406e49:	mov    rdi,rbx
  406e4c:	call   402240 <Mat_VarFree@plt>
  406e51:	mov    DWORD PTR [rsp],0x0
  406e58:	mov    esi,0x6
  406e5d:	mov    edx,0x9
  406e62:	mov    ecx,0x2
  406e67:	xor    r9d,r9d
  406e6a:	lea    rdi,[rip+0xb945]        # 4127b6 <getopt_long_only@@Base+0x5656>
  406e71:	mov    r8,r13
  406e74:	call   4020d0 <Mat_VarCreate@plt>
  406e79:	mov    QWORD PTR [rsp+0xc0],rax
  406e81:	mov    DWORD PTR [rsp],0x0
  406e88:	mov    esi,0x6
  406e8d:	mov    edx,0x9
  406e92:	mov    ecx,0x2
  406e97:	xor    r9d,r9d
  406e9a:	lea    rdi,[rip+0xb91c]        # 4127bd <getopt_long_only@@Base+0x565d>
  406ea1:	mov    r8,r13
  406ea4:	call   4020d0 <Mat_VarCreate@plt>
  406ea9:	mov    QWORD PTR [rsp+0xc8],rax
  406eb1:	mov    QWORD PTR [rsp+0xd0],0x0
  406ebd:	vmovdqa xmm0,XMMWORD PTR [rip+0x71bb]        # 40e080 <getopt_long_only@@Base+0xf20>
  406ec5:	vmovdqa XMMWORD PTR [rsp+0x40],xmm0
  406ecb:	mov    DWORD PTR [rsp],0x0
  406ed2:	mov    esi,0x1
  406ed7:	mov    edx,0x15
  406edc:	mov    ecx,0x2
  406ee1:	lea    rdi,[rip+0xb8e1]        # 4127c9 <getopt_long_only@@Base+0x5669>
  406ee8:	mov    r8,r13
  406eeb:	lea    r9,[rsp+0xc0]
  406ef3:	call   4020d0 <Mat_VarCreate@plt>
  406ef8:	mov    rbx,rax
  406efb:	movzx  edx,BYTE PTR [rip+0xf55a]        # 41645c <optopt@@Base+0x24>
  406f02:	mov    rdi,r14
  406f05:	mov    rsi,rax
  406f08:	call   4020f0 <Mat_VarWrite@plt>
  406f0d:	mov    rdi,rbx
  406f10:	call   402240 <Mat_VarFree@plt>
  406f15:	mov    rdi,r14
  406f18:	call   4022a0 <Mat_Close@plt>
  406f1d:	jmp    407a11 <Mat_VarRead@plt+0x5681>
  406f22:	lea    rax,[rsp+0xc00]
  406f2a:	mov    QWORD PTR [rsp+0x60],rax
  406f2f:	lea    rax,[rsp+0x1000]
  406f37:	mov    QWORD PTR [rsp+0x68],rax
  406f3c:	lea    rax,[rsp+0xc30]
  406f44:	mov    QWORD PTR [rsp+0x70],rax
  406f49:	lea    rax,[rsp+0x1030]
  406f51:	mov    QWORD PTR [rsp+0x78],rax
  406f56:	lea    rax,[rsp+0xc60]
  406f5e:	mov    QWORD PTR [rsp+0x80],rax
  406f66:	lea    rax,[rsp+0x1060]
  406f6e:	mov    QWORD PTR [rsp+0x88],rax
  406f76:	lea    rax,[rsp+0xc90]
  406f7e:	mov    QWORD PTR [rsp+0x90],rax
  406f86:	lea    rax,[rsp+0x1090]
  406f8e:	mov    QWORD PTR [rsp+0x98],rax
  406f96:	mov    r12d,0x7
  406f9c:	jmp    407389 <Mat_VarRead@plt+0x4ff9>
  406fa1:	lea    rax,[rsp+0x150]
  406fa9:	mov    QWORD PTR [rsp+0x60],rax
  406fae:	lea    rax,[rsp+0x1c0]
  406fb6:	mov    QWORD PTR [rsp+0x68],rax
  406fbb:	lea    rax,[rsp+0x15c]
  406fc3:	mov    QWORD PTR [rsp+0x70],rax
  406fc8:	lea    rax,[rsp+0x1cc]
  406fd0:	mov    QWORD PTR [rsp+0x78],rax
  406fd5:	lea    rax,[rsp+0x168]
  406fdd:	mov    QWORD PTR [rsp+0x80],rax
  406fe5:	lea    rax,[rsp+0x1d8]
  406fed:	mov    QWORD PTR [rsp+0x88],rax
  406ff5:	lea    rax,[rsp+0x174]
  406ffd:	mov    QWORD PTR [rsp+0x90],rax
  407005:	lea    rax,[rsp+0x1e4]
  40700d:	mov    QWORD PTR [rsp+0x98],rax
  407015:	mov    r12d,0x1
  40701b:	jmp    407389 <Mat_VarRead@plt+0x4ff9>
  407020:	lea    rax,[rsp+0x220]
  407028:	mov    QWORD PTR [rsp+0x60],rax
  40702d:	lea    rax,[rsp+0x2e0]
  407035:	mov    QWORD PTR [rsp+0x68],rax
  40703a:	lea    rax,[rsp+0x22c]
  407042:	mov    QWORD PTR [rsp+0x70],rax
  407047:	lea    rax,[rsp+0x2ec]
  40704f:	mov    QWORD PTR [rsp+0x78],rax
  407054:	lea    rax,[rsp+0x238]
  40705c:	mov    QWORD PTR [rsp+0x80],rax
  407064:	lea    rax,[rsp+0x2f8]
  40706c:	mov    QWORD PTR [rsp+0x88],rax
  407074:	lea    rax,[rsp+0x244]
  40707c:	mov    QWORD PTR [rsp+0x90],rax
  407084:	lea    rax,[rsp+0x304]
  40708c:	mov    QWORD PTR [rsp+0x98],rax
  407094:	mov    r12d,0x2
  40709a:	jmp    407389 <Mat_VarRead@plt+0x4ff9>
  40709f:	lea    rax,[rsp+0x260]
  4070a7:	mov    QWORD PTR [rsp+0x60],rax
  4070ac:	lea    rax,[rsp+0x3c0]
  4070b4:	mov    QWORD PTR [rsp+0x68],rax
  4070b9:	lea    rax,[rsp+0x278]
  4070c1:	mov    QWORD PTR [rsp+0x70],rax
  4070c6:	lea    rax,[rsp+0x3d8]
  4070ce:	mov    QWORD PTR [rsp+0x78],rax
  4070d3:	lea    rax,[rsp+0x290]
  4070db:	mov    QWORD PTR [rsp+0x80],rax
  4070e3:	lea    rax,[rsp+0x3f0]
  4070eb:	mov    QWORD PTR [rsp+0x88],rax
  4070f3:	lea    rax,[rsp+0x2a8]
  4070fb:	mov    QWORD PTR [rsp+0x90],rax
  407103:	lea    rax,[rsp+0x408]
  40710b:	mov    QWORD PTR [rsp+0x98],rax
  407113:	mov    r12d,0x3
  407119:	jmp    407389 <Mat_VarRead@plt+0x4ff9>
  40711e:	lea    rax,[rsp+0x340]
  407126:	mov    QWORD PTR [rsp+0x60],rax
  40712b:	lea    rax,[rsp+0xde0]
  407133:	mov    QWORD PTR [rsp+0x68],rax
  407138:	lea    rax,[rsp+0x358]
  407140:	mov    QWORD PTR [rsp+0x70],rax
  407145:	lea    rax,[rsp+0xdf8]
  40714d:	mov    QWORD PTR [rsp+0x78],rax
  407152:	lea    rax,[rsp+0x370]
  40715a:	mov    QWORD PTR [rsp+0x80],rax
  407162:	lea    rax,[rsp+0xe10]
  40716a:	mov    QWORD PTR [rsp+0x88],rax
  407172:	lea    rax,[rsp+0x388]
  40717a:	mov    QWORD PTR [rsp+0x90],rax
  407182:	lea    rax,[rsp+0xe28]
  40718a:	mov    QWORD PTR [rsp+0x98],rax
  407192:	mov    r12d,0x4
  407198:	jmp    407389 <Mat_VarRead@plt+0x4ff9>
  40719d:	lea    rax,[rsp+0x620]
  4071a5:	mov    QWORD PTR [rsp+0x60],rax
  4071aa:	lea    rax,[rsp+0xd00]
  4071b2:	mov    QWORD PTR [rsp+0x68],rax
  4071b7:	lea    rax,[rsp+0x650]
  4071bf:	mov    QWORD PTR [rsp+0x70],rax
  4071c4:	lea    rax,[rsp+0xd30]
  4071cc:	mov    QWORD PTR [rsp+0x78],rax
  4071d1:	lea    rax,[rsp+0x680]
  4071d9:	mov    QWORD PTR [rsp+0x80],rax
  4071e1:	lea    rax,[rsp+0xd60]
  4071e9:	mov    QWORD PTR [rsp+0x88],rax
  4071f1:	lea    rax,[rsp+0x6b0]
  4071f9:	mov    QWORD PTR [rsp+0x90],rax
  407201:	lea    rax,[rsp+0xd90]
  407209:	mov    QWORD PTR [rsp+0x98],rax
  407211:	mov    r12d,0x5
  407217:	jmp    407389 <Mat_VarRead@plt+0x4ff9>
  40721c:	lea    rax,[rsp+0x700]
  407224:	mov    QWORD PTR [rsp+0x60],rax
  407229:	lea    rax,[rsp+0x7e0]
  407231:	mov    QWORD PTR [rsp+0x68],rax
  407236:	lea    rax,[rsp+0x730]
  40723e:	mov    QWORD PTR [rsp+0x70],rax
  407243:	lea    rax,[rsp+0x810]
  40724b:	mov    QWORD PTR [rsp+0x78],rax
  407250:	lea    rax,[rsp+0x760]
  407258:	mov    QWORD PTR [rsp+0x80],rax
  407260:	lea    rax,[rsp+0x840]
  407268:	mov    QWORD PTR [rsp+0x88],rax
  407270:	lea    rax,[rsp+0x790]
  407278:	mov    QWORD PTR [rsp+0x90],rax
  407280:	lea    rax,[rsp+0x870]
  407288:	mov    QWORD PTR [rsp+0x98],rax
  407290:	mov    r12d,0x6
  407296:	jmp    407389 <Mat_VarRead@plt+0x4ff9>
  40729b:	lea    rax,[rsp+0xa60]
  4072a3:	mov    QWORD PTR [rsp+0x60],rax
  4072a8:	lea    rax,[rsp+0xe60]
  4072b0:	mov    QWORD PTR [rsp+0x68],rax
  4072b5:	lea    rax,[rsp+0xac0]
  4072bd:	mov    QWORD PTR [rsp+0x70],rax
  4072c2:	lea    rax,[rsp+0xec0]
  4072ca:	mov    QWORD PTR [rsp+0x78],rax
  4072cf:	lea    rax,[rsp+0xb20]
  4072d7:	mov    QWORD PTR [rsp+0x80],rax
  4072df:	lea    rax,[rsp+0xf20]
  4072e7:	mov    QWORD PTR [rsp+0x88],rax
  4072ef:	lea    rax,[rsp+0xb80]
  4072f7:	mov    QWORD PTR [rsp+0x90],rax
  4072ff:	lea    rax,[rsp+0xf80]
  407307:	mov    QWORD PTR [rsp+0x98],rax
  40730f:	mov    r12d,0xc
  407315:	jmp    407389 <Mat_VarRead@plt+0x4ff9>
  407317:	lea    rax,[rsp+0x1cc0]
  40731f:	mov    QWORD PTR [rsp+0x60],rax
  407324:	mov    QWORD PTR [rsp+0x68],r13
  407329:	lea    rax,[rsp+0x1d20]
  407331:	mov    QWORD PTR [rsp+0x70],rax
  407336:	lea    rax,[rsp+0x4a0]
  40733e:	mov    QWORD PTR [rsp+0x78],rax
  407343:	lea    rax,[rsp+0x1d80]
  40734b:	mov    QWORD PTR [rsp+0x80],rax
  407353:	lea    rax,[rsp+0x500]
  40735b:	mov    QWORD PTR [rsp+0x88],rax
  407363:	lea    rax,[rsp+0x1de0]
  40736b:	mov    QWORD PTR [rsp+0x90],rax
  407373:	lea    rax,[rsp+0x560]
  40737b:	mov    QWORD PTR [rsp+0x98],rax
  407383:	mov    r12d,0xd
  407389:	mov    edx,DWORD PTR [rip+0xdf91]        # 415320 <getopt_long_only@@Base+0x81c0>
  40738f:	xor    esi,esi
  407391:	mov    rdi,rcx
  407394:	vzeroupper 
  407397:	call   402310 <Mat_CreateVer@plt>
  40739c:	test   rax,rax
  40739f:	je     407666 <Mat_VarRead@plt+0x52d6>
  4073a5:	mov    r14,rax
  4073a8:	mov    DWORD PTR [rsp],0x801
  4073af:	mov    ecx,0x2
  4073b4:	lea    rdi,[rip+0xb3fb]        # 4127b6 <getopt_long_only@@Base+0x5656>
  4073bb:	mov    rbx,QWORD PTR [rsp+0xa8]
  4073c3:	mov    esi,ebx
  4073c5:	mov    edx,r12d
  4073c8:	lea    r15,[rsp+0x40]
  4073cd:	mov    r8,r15
  4073d0:	lea    r9,[rsp+0x60]
  4073d5:	call   4020d0 <Mat_VarCreate@plt>
  4073da:	mov    QWORD PTR [rsp+0xc0],rax
  4073e2:	mov    DWORD PTR [rsp],0x801
  4073e9:	mov    ecx,0x2
  4073ee:	lea    rdi,[rip+0xb3c8]        # 4127bd <getopt_long_only@@Base+0x565d>
  4073f5:	mov    esi,ebx
  4073f7:	mov    edx,r12d
  4073fa:	mov    r8,r15
  4073fd:	lea    r9,[rsp+0x70]
  407402:	call   4020d0 <Mat_VarCreate@plt>
  407407:	mov    QWORD PTR [rsp+0xc8],rax
  40740f:	mov    eax,DWORD PTR [rsp+0x100]
  407416:	cmp    eax,0x1
  407419:	je     4074f3 <Mat_VarRead@plt+0x5163>
  40741f:	test   eax,eax
  407421:	jne    40764c <Mat_VarRead@plt+0x52bc>
  407427:	mov    DWORD PTR [rsp],0x801
  40742e:	mov    ecx,0x2
  407433:	lea    rdi,[rip+0xb37c]        # 4127b6 <getopt_long_only@@Base+0x5656>
  40743a:	mov    rbx,QWORD PTR [rsp+0xa8]
  407442:	mov    esi,ebx
  407444:	mov    edx,r12d
  407447:	mov    r8,r15
  40744a:	lea    r9,[rsp+0x80]
  407452:	call   4020d0 <Mat_VarCreate@plt>
  407457:	mov    QWORD PTR [rsp+0xd0],rax
  40745f:	mov    DWORD PTR [rsp],0x801
  407466:	mov    ecx,0x2
  40746b:	lea    rdi,[rip+0xb34b]        # 4127bd <getopt_long_only@@Base+0x565d>
  407472:	mov    esi,ebx
  407474:	mov    edx,r12d
  407477:	mov    r8,r15
  40747a:	lea    r9,[rsp+0x90]
  407482:	call   4020d0 <Mat_VarCreate@plt>
  407487:	mov    QWORD PTR [rsp+0xd8],rax
  40748f:	mov    QWORD PTR [rsp+0xe0],0x0
  40749b:	vmovdqa xmm0,XMMWORD PTR [rip+0x6bdd]        # 40e080 <getopt_long_only@@Base+0xf20>
  4074a3:	vmovdqa XMMWORD PTR [rsp+0x40],xmm0
  4074a9:	mov    DWORD PTR [rsp],0x0
  4074b0:	mov    esi,0x2
  4074b5:	mov    edx,0x16
  4074ba:	mov    ecx,0x2
  4074bf:	lea    rdi,[rip+0x8c17]        # 4100dd <getopt_long_only@@Base+0x2f7d>
  4074c6:	mov    r8,r15
  4074c9:	lea    r9,[rsp+0xc0]
  4074d1:	call   4020d0 <Mat_VarCreate@plt>
  4074d6:	mov    rbx,rax
  4074d9:	movzx  edx,BYTE PTR [rip+0xef7c]        # 41645c <optopt@@Base+0x24>
  4074e0:	mov    rdi,r14
  4074e3:	mov    rsi,rax
  4074e6:	call   4020f0 <Mat_VarWrite@plt>
  4074eb:	mov    r15d,eax
  4074ee:	jmp    407651 <Mat_VarRead@plt+0x52c1>
  4074f3:	mov    QWORD PTR [rsp+0xd0],0x0
  4074ff:	vmovaps xmm0,XMMWORD PTR [rip+0x6b19]        # 40e020 <getopt_long_only@@Base+0xec0>
  407507:	vmovaps XMMWORD PTR [rsp+0x40],xmm0
  40750d:	mov    DWORD PTR [rsp],0x0
  407514:	mov    esi,0x2
  407519:	mov    edx,0x16
  40751e:	mov    ecx,0x2
  407523:	lea    rax,[rip+0x8bb3]        # 4100dd <getopt_long_only@@Base+0x2f7d>
  40752a:	mov    rdi,rax
  40752d:	mov    r8,r15
  407530:	lea    rax,[rsp+0xc0]
  407538:	mov    r9,rax
  40753b:	call   4020d0 <Mat_VarCreate@plt>
  407540:	mov    r13,r15
  407543:	mov    r15,rax
  407546:	movzx  edx,BYTE PTR [rip+0xef0f]        # 41645c <optopt@@Base+0x24>
  40754d:	mov    ecx,0x1
  407552:	mov    rdi,r14
  407555:	mov    rsi,rax
  407558:	call   402140 <Mat_VarWriteAppend@plt>
  40755d:	mov    DWORD PTR [rsp+0x100],eax
  407564:	mov    rdi,r15
  407567:	call   402240 <Mat_VarFree@plt>
  40756c:	vmovaps xmm0,XMMWORD PTR [rip+0x6aec]        # 40e060 <getopt_long_only@@Base+0xf00>
  407574:	vmovaps XMMWORD PTR [rsp+0x40],xmm0
  40757a:	mov    DWORD PTR [rsp],0x801
  407581:	mov    ecx,0x2
  407586:	lea    rdi,[rip+0xb229]        # 4127b6 <getopt_long_only@@Base+0x5656>
  40758d:	mov    rbx,QWORD PTR [rsp+0xa8]
  407595:	mov    esi,ebx
  407597:	mov    edx,r12d
  40759a:	mov    r8,r13
  40759d:	lea    r9,[rsp+0x80]
  4075a5:	call   4020d0 <Mat_VarCreate@plt>
  4075aa:	mov    QWORD PTR [rsp+0xc0],rax
  4075b2:	mov    DWORD PTR [rsp],0x801
  4075b9:	mov    ecx,0x2
  4075be:	lea    rdi,[rip+0xb1f8]        # 4127bd <getopt_long_only@@Base+0x565d>
  4075c5:	mov    esi,ebx
  4075c7:	mov    edx,r12d
  4075ca:	mov    r8,r13
  4075cd:	lea    r9,[rsp+0x90]
  4075d5:	call   4020d0 <Mat_VarCreate@plt>
  4075da:	mov    QWORD PTR [rsp+0xc8],rax
  4075e2:	vmovdqa xmm0,XMMWORD PTR [rip+0x6a36]        # 40e020 <getopt_long_only@@Base+0xec0>
  4075ea:	vmovdqa XMMWORD PTR [rsp+0x40],xmm0
  4075f0:	mov    DWORD PTR [rsp],0x0
  4075f7:	mov    esi,0x2
  4075fc:	mov    edx,0x16
  407601:	mov    ecx,0x2
  407606:	lea    rdi,[rip+0x8ad0]        # 4100dd <getopt_long_only@@Base+0x2f7d>
  40760d:	mov    r8,r13
  407610:	lea    r13,[rsp+0x440]
  407618:	lea    r9,[rsp+0xc0]
  407620:	call   4020d0 <Mat_VarCreate@plt>
  407625:	mov    rbx,rax
  407628:	movzx  edx,BYTE PTR [rip+0xee2d]        # 41645c <optopt@@Base+0x24>
  40762f:	mov    ecx,0x1
  407634:	mov    rdi,r14
  407637:	mov    rsi,rax
  40763a:	call   402140 <Mat_VarWriteAppend@plt>
  40763f:	mov    r15d,eax
  407642:	add    r15d,DWORD PTR [rsp+0x100]
  40764a:	jmp    407651 <Mat_VarRead@plt+0x52c1>
  40764c:	xor    r15d,r15d
  40764f:	xor    ebx,ebx
  407651:	mov    rdi,rbx
  407654:	call   402240 <Mat_VarFree@plt>
  407659:	mov    rdi,r14
  40765c:	call   4022a0 <Mat_Close@plt>
  407661:	mov    rbx,QWORD PTR [rsp+0x30]
  407666:	mov    rax,QWORD PTR [rsp+0x58]
  40766b:	add    eax,0x1
  40766e:	add    DWORD PTR [rsp+0x3c],r15d
  407673:	mov    r15,rax
  407676:	cmp    r15d,DWORD PTR [rsp+0x128]
  40767e:	jl     4028a0 <Mat_VarRead@plt+0x510>
  407684:	jmp    40c229 <Mat_VarRead@plt+0x9e99>
  407689:	mov    QWORD PTR [rsp+0x58],r15
  40768e:	mov    rdi,QWORD PTR [rsp+0x28]
  407693:	test   rdi,rdi
  407696:	lea    rax,[rip+0xaa41]        # 4120de <getopt_long_only@@Base+0x4f7e>
  40769d:	cmove  rdi,rax
  4076a1:	vmovdqa xmm0,XMMWORD PTR [rip+0x69f7]        # 40e0a0 <getopt_long_only@@Base+0xf40>
  4076a9:	vmovdqa XMMWORD PTR [rsp+0x40],xmm0
  4076af:	mov    edx,DWORD PTR [rip+0xdc6b]        # 415320 <getopt_long_only@@Base+0x81c0>
  4076b5:	xor    esi,esi
  4076b7:	mov    QWORD PTR [rsp+0x28],rdi
  4076bc:	call   402310 <Mat_CreateVer@plt>
  4076c1:	test   rax,rax
  4076c4:	je     407d0b <Mat_VarRead@plt+0x597b>
  4076ca:	mov    r14,rax
  4076cd:	vmovups ymm0,YMMWORD PTR [rip+0x6c2b]        # 40e300 <getopt_long_only@@Base+0x11a0>
  4076d5:	vmovaps YMMWORD PTR [rsp+0x1cc0],ymm0
  4076de:	mov    rax,QWORD PTR [rip+0xd64b]        # 414d30 <getopt_long_only@@Base+0x7bd0>
  4076e5:	mov    QWORD PTR [rsp+0x8d0],rax
  4076ed:	vmovaps xmm0,XMMWORD PTR [rip+0xd62b]        # 414d20 <getopt_long_only@@Base+0x7bc0>
  4076f5:	vmovaps XMMWORD PTR [rsp+0x8c0],xmm0
  4076fe:	mov    DWORD PTR [rsp],0x0
  407705:	mov    esi,0x1
  40770a:	mov    edx,0x15
  40770f:	mov    ecx,0x2
  407714:	xor    r9d,r9d
  407717:	lea    rdi,[rip+0xb0a6]        # 4127c4 <getopt_long_only@@Base+0x5664>
  40771e:	lea    r12,[rsp+0x40]
  407723:	mov    r8,r12
  407726:	vzeroupper 
  407729:	call   4020d0 <Mat_VarCreate@plt>
  40772e:	mov    r15,rax
  407731:	vmovaps xmm0,XMMWORD PTR [rip+0x68e7]        # 40e020 <getopt_long_only@@Base+0xec0>
  407739:	vmovaps XMMWORD PTR [rsp+0x40],xmm0
  40773f:	mov    esi,0x2
  407744:	mov    r8d,0x3
  40774a:	lea    rax,[rip+0x780c]        # 40ef5d <getopt_long_only@@Base+0x1dfd>
  407751:	mov    rdi,rax
  407754:	mov    rdx,r12
  407757:	lea    rax,[rsp+0x8c0]
  40775f:	mov    rcx,rax
  407762:	call   402300 <Mat_VarCreateStruct@plt>
  407767:	mov    rbx,rax
  40776a:	vmovaps xmm0,XMMWORD PTR [rip+0x694e]        # 40e0c0 <getopt_long_only@@Base+0xf60>
  407772:	vmovaps XMMWORD PTR [rsp+0x40],xmm0
  407778:	mov    DWORD PTR [rsp],0x0
  40777f:	mov    esi,0x6
  407784:	mov    edx,0x9
  407789:	mov    ecx,0x2
  40778e:	lea    rax,[rip+0x8948]        # 4100dd <getopt_long_only@@Base+0x2f7d>
  407795:	mov    rdi,rax
  407798:	mov    r8,r12
  40779b:	lea    r13,[rsp+0x1cc0]
  4077a3:	mov    r9,r13
  4077a6:	call   4020d0 <Mat_VarCreate@plt>
  4077ab:	xor    edx,edx
  4077ad:	mov    rdi,rbx
  4077b0:	lea    rcx,[rip+0xafff]        # 4127b6 <getopt_long_only@@Base+0x5656>
  4077b7:	mov    rsi,rcx
  4077ba:	mov    rcx,rax
  4077bd:	call   402370 <Mat_VarSetStructFieldByName@plt>
  4077c2:	xor    esi,esi
  4077c4:	mov    rdi,r15
  4077c7:	mov    rdx,rbx
  4077ca:	call   4021a0 <Mat_VarSetCell@plt>
  4077cf:	vmovaps xmm0,XMMWORD PTR [rip+0x6849]        # 40e020 <getopt_long_only@@Base+0xec0>
  4077d7:	vmovaps XMMWORD PTR [rsp+0x40],xmm0
  4077dd:	mov    esi,0x2
  4077e2:	mov    r8d,0x3
  4077e8:	lea    rdi,[rip+0x776e]        # 40ef5d <getopt_long_only@@Base+0x1dfd>
  4077ef:	mov    rdx,r12
  4077f2:	lea    rcx,[rsp+0x8c0]
  4077fa:	call   402300 <Mat_VarCreateStruct@plt>
  4077ff:	mov    rbx,rax
  407802:	vmovaps xmm0,XMMWORD PTR [rip+0x68b6]        # 40e0c0 <getopt_long_only@@Base+0xf60>
  40780a:	vmovaps XMMWORD PTR [rsp+0x40],xmm0
  407810:	mov    DWORD PTR [rsp],0x0
  407817:	mov    esi,0x6
  40781c:	mov    edx,0x9
  407821:	mov    ecx,0x2
  407826:	lea    rdi,[rip+0x88b0]        # 4100dd <getopt_long_only@@Base+0x2f7d>
  40782d:	mov    r8,r12
  407830:	mov    r9,r13
  407833:	call   4020d0 <Mat_VarCreate@plt>
  407838:	xor    edx,edx
  40783a:	mov    rdi,rbx
  40783d:	lea    rsi,[rip+0xaf72]        # 4127b6 <getopt_long_only@@Base+0x5656>
  407844:	mov    rcx,rax
  407847:	call   402370 <Mat_VarSetStructFieldByName@plt>
  40784c:	mov    esi,0x1
  407851:	mov    rdi,r15
  407854:	mov    rdx,rbx
  407857:	call   4021a0 <Mat_VarSetCell@plt>
  40785c:	vmovaps xmm0,XMMWORD PTR [rip+0x67bc]        # 40e020 <getopt_long_only@@Base+0xec0>
  407864:	vmovaps XMMWORD PTR [rsp+0x40],xmm0
  40786a:	mov    esi,0x2
  40786f:	mov    r8d,0x3
  407875:	lea    rdi,[rip+0x76e1]        # 40ef5d <getopt_long_only@@Base+0x1dfd>
  40787c:	mov    rdx,r12
  40787f:	lea    rcx,[rsp+0x8c0]
  407887:	call   402300 <Mat_VarCreateStruct@plt>
  40788c:	mov    rbx,rax
  40788f:	vmovdqa xmm0,XMMWORD PTR [rip+0x6829]        # 40e0c0 <getopt_long_only@@Base+0xf60>
  407897:	vmovdqa XMMWORD PTR [rsp+0x40],xmm0
  40789d:	mov    DWORD PTR [rsp],0x0
  4078a4:	mov    esi,0x6
  4078a9:	mov    edx,0x9
  4078ae:	mov    ecx,0x2
  4078b3:	lea    rdi,[rip+0x8823]        # 4100dd <getopt_long_only@@Base+0x2f7d>
  4078ba:	mov    r8,r12
  4078bd:	mov    r9,r13
  4078c0:	call   4020d0 <Mat_VarCreate@plt>
  4078c5:	xor    edx,edx
  4078c7:	mov    rdi,rbx
  4078ca:	lea    rsi,[rip+0xaee5]        # 4127b6 <getopt_long_only@@Base+0x5656>
  4078d1:	mov    rcx,rax
  4078d4:	call   402370 <Mat_VarSetStructFieldByName@plt>
  4078d9:	mov    esi,0x2
  4078de:	mov    rdi,r15
  4078e1:	mov    rdx,rbx
  4078e4:	call   4021a0 <Mat_VarSetCell@plt>
  4078e9:	movzx  edx,BYTE PTR [rip+0xeb6c]        # 41645c <optopt@@Base+0x24>
  4078f0:	mov    rdi,r14
  4078f3:	mov    rsi,r15
  4078f6:	call   4020f0 <Mat_VarWrite@plt>
  4078fb:	mov    rdi,r15
  4078fe:	call   402240 <Mat_VarFree@plt>
  407903:	mov    rdi,r14
  407906:	call   4022a0 <Mat_Close@plt>
  40790b:	xor    eax,eax
  40790d:	jmp    407d10 <Mat_VarRead@plt+0x5980>
  407912:	cmp    QWORD PTR [rsp+0x28],0x0
  407918:	je     40793e <Mat_VarRead@plt+0x55ae>
  40791a:	mov    rax,QWORD PTR [rip+0xd6b7]        # 414fd8 <getopt_long_only@@Base+0x7e78>
  407921:	mov    rdx,QWORD PTR [rax]
  407924:	mov    rdi,QWORD PTR [rsp+0x28]
  407929:	lea    rsi,[rip+0xaeaf]        # 4127df <getopt_long_only@@Base+0x567f>
  407930:	call   4021c0 <freopen@plt>
  407935:	test   rax,rax
  407938:	je     4095bf <Mat_VarRead@plt+0x722f>
  40793e:	add    r15d,0x1
  407942:	vmovaps xmm0,XMMWORD PTR [rip+0xd3f6]        # 414d40 <getopt_long_only@@Base+0x7be0>
  40794a:	vmovaps XMMWORD PTR [rsp+0xe60],xmm0
  407953:	vmovdqa xmm0,XMMWORD PTR [rip+0x6725]        # 40e080 <getopt_long_only@@Base+0xf20>
  40795b:	vmovdqa XMMWORD PTR [rsp+0x40],xmm0
  407961:	mov    esi,0x2
  407966:	mov    r8d,0x2
  40796c:	lea    rdi,[rip+0x876a]        # 4100dd <getopt_long_only@@Base+0x2f7d>
  407973:	lea    r14,[rsp+0x40]
  407978:	mov    rdx,r14
  40797b:	lea    r12,[rsp+0xe60]
  407983:	mov    rcx,r12
  407986:	call   402300 <Mat_VarCreateStruct@plt>
  40798b:	mov    rbx,rax
  40798e:	mov    esi,0x1
  407993:	mov    rdi,rax
  407996:	call   402270 <Mat_VarPrint@plt>
  40799b:	mov    rdi,rbx
  40799e:	call   402240 <Mat_VarFree@plt>
  4079a3:	mov    esi,0x2
  4079a8:	xor    ecx,ecx
  4079aa:	xor    r8d,r8d
  4079ad:	lea    rdi,[rip+0x8b2b]        # 4104df <getopt_long_only@@Base+0x337f>
  4079b4:	mov    rdx,r14
  4079b7:	call   402300 <Mat_VarCreateStruct@plt>
  4079bc:	mov    rbx,rax
  4079bf:	mov    esi,0x1
  4079c4:	mov    rdi,rax
  4079c7:	call   402270 <Mat_VarPrint@plt>
  4079cc:	mov    rdi,rbx
  4079cf:	call   402240 <Mat_VarFree@plt>
  4079d4:	vpxor  xmm0,xmm0,xmm0
  4079d8:	vmovdqa XMMWORD PTR [rsp+0x40],xmm0
  4079de:	mov    esi,0x2
  4079e3:	mov    r8d,0x2
  4079e9:	lea    rdi,[rip+0x7e5a]        # 40f84a <getopt_long_only@@Base+0x26ea>
  4079f0:	mov    rdx,r14
  4079f3:	mov    rcx,r12
  4079f6:	call   402300 <Mat_VarCreateStruct@plt>
  4079fb:	mov    rbx,rax
  4079fe:	mov    esi,0x1
  407a03:	mov    rdi,rax
  407a06:	jmp    4088f4 <Mat_VarRead@plt+0x6564>
  407a0b:	mov    r15d,0x1
  407a11:	add    r12d,0x1
  407a15:	add    DWORD PTR [rsp+0x3c],r15d
  407a1a:	mov    r15,r12
  407a1d:	jmp    403a7d <Mat_VarRead@plt+0x16ed>
  407a22:	cmp    QWORD PTR [rsp+0x28],0x0
  407a28:	je     407a4e <Mat_VarRead@plt+0x56be>
  407a2a:	mov    rax,QWORD PTR [rip+0xd5a7]        # 414fd8 <getopt_long_only@@Base+0x7e78>
  407a31:	mov    rdx,QWORD PTR [rax]
  407a34:	mov    rdi,QWORD PTR [rsp+0x28]
  407a39:	lea    rsi,[rip+0xad9f]        # 4127df <getopt_long_only@@Base+0x567f>
  407a40:	call   4021c0 <freopen@plt>
  407a45:	test   rax,rax
  407a48:	je     4097f0 <Mat_VarRead@plt+0x7460>
  407a4e:	add    r15d,0x1
  407a52:	mov    QWORD PTR [rsp+0x58],r15
  407a57:	vmovaps xmm0,XMMWORD PTR [rip+0x6761]        # 40e1c0 <getopt_long_only@@Base+0x1060>
  407a5f:	vmovaps XMMWORD PTR [rsp+0x440],xmm0
  407a68:	mov    rax,QWORD PTR [rip+0x6c51]        # 40e6c0 <getopt_long_only@@Base+0x1560>
  407a6f:	mov    QWORD PTR [rsp+0x1170],rax
  407a77:	vmovaps xmm0,XMMWORD PTR [rip+0x6c31]        # 40e6b0 <getopt_long_only@@Base+0x1550>
  407a7f:	vmovaps XMMWORD PTR [rsp+0x1160],xmm0
  407a88:	mov    rax,QWORD PTR [rip+0x6c51]        # 40e6e0 <getopt_long_only@@Base+0x1580>
  407a8f:	vmovaps xmm0,XMMWORD PTR [rip+0x6c39]        # 40e6d0 <getopt_long_only@@Base+0x1570>
  407a97:	vmovaps XMMWORD PTR [rsp+0x1cc0],xmm0
  407aa0:	vmovaps xmm0,XMMWORD PTR [rip+0x6728]        # 40e1d0 <getopt_long_only@@Base+0x1070>
  407aa8:	vmovaps XMMWORD PTR [rsp+0x8c0],xmm0
  407ab1:	mov    QWORD PTR [rsp+0x1cd0],rax
  407ab9:	vmovaps xmm0,XMMWORD PTR [rip+0xd27f]        # 414d40 <getopt_long_only@@Base+0x7be0>
  407ac1:	vmovaps XMMWORD PTR [rsp+0xe60],xmm0
  407aca:	vmovaps xmm0,XMMWORD PTR [rip+0x65ae]        # 40e080 <getopt_long_only@@Base+0xf20>
  407ad2:	vmovaps XMMWORD PTR [rsp+0x40],xmm0
  407ad8:	mov    DWORD PTR [rsp],0x1
  407adf:	xor    edi,edi
  407ae1:	mov    esi,0x6
  407ae6:	mov    edx,0x9
  407aeb:	mov    ecx,0x2
  407af0:	lea    rbx,[rsp+0x40]
  407af5:	mov    r8,rbx
  407af8:	mov    r9,r13
  407afb:	call   4020d0 <Mat_VarCreate@plt>
  407b00:	mov    r12,rax
  407b03:	mov    QWORD PTR [rsp+0x100],rax
  407b0b:	vmovaps xmm0,XMMWORD PTR [rip+0x657d]        # 40e090 <getopt_long_only@@Base+0xf30>
  407b13:	vmovaps XMMWORD PTR [rsp+0x40],xmm0
  407b19:	mov    DWORD PTR [rsp],0x1
  407b20:	xor    edi,edi
  407b22:	mov    esi,0x6
  407b27:	mov    edx,0x9
  407b2c:	mov    ecx,0x2
  407b31:	mov    r8,rbx
  407b34:	lea    r9,[rsp+0x1160]
  407b3c:	call   4020d0 <Mat_VarCreate@plt>
  407b41:	mov    r14,rax
  407b44:	mov    QWORD PTR [rsp+0xb8],rax
  407b4c:	vmovaps xmm0,XMMWORD PTR [rip+0x654c]        # 40e0a0 <getopt_long_only@@Base+0xf40>
  407b54:	vmovaps XMMWORD PTR [rsp+0x40],xmm0
  407b5a:	mov    DWORD PTR [rsp],0x1
  407b61:	xor    edi,edi
  407b63:	mov    esi,0x6
  407b68:	mov    edx,0x9
  407b6d:	mov    ecx,0x2
  407b72:	mov    r8,rbx
  407b75:	lea    r9,[rsp+0x1cc0]
  407b7d:	call   4020d0 <Mat_VarCreate@plt>
  407b82:	mov    QWORD PTR [rsp+0x110],rax
  407b8a:	vmovaps xmm0,XMMWORD PTR [rip+0x651e]        # 40e0b0 <getopt_long_only@@Base+0xf50>
  407b92:	vmovaps XMMWORD PTR [rsp+0x40],xmm0
  407b98:	mov    DWORD PTR [rsp],0x1
  407b9f:	xor    edi,edi
  407ba1:	mov    esi,0x6
  407ba6:	mov    edx,0x9
  407bab:	mov    ecx,0x2
  407bb0:	mov    r8,rbx
  407bb3:	lea    r9,[rsp+0x8c0]
  407bbb:	call   4020d0 <Mat_VarCreate@plt>
  407bc0:	mov    r13,rax
  407bc3:	vmovaps xmm0,XMMWORD PTR [rip+0x64b5]        # 40e080 <getopt_long_only@@Base+0xf20>
  407bcb:	vmovaps XMMWORD PTR [rsp+0x40],xmm0
  407bd1:	mov    esi,0x2
  407bd6:	mov    r8d,0x2
  407bdc:	lea    rdi,[rip+0x84fa]        # 4100dd <getopt_long_only@@Base+0x2f7d>
  407be3:	mov    rdx,rbx
  407be6:	lea    rax,[rsp+0xe60]
  407bee:	mov    rcx,rax
  407bf1:	call   402300 <Mat_VarCreateStruct@plt>
  407bf6:	mov    rbx,rax
  407bf9:	xor    edx,edx
  407bfb:	mov    rdi,rax
  407bfe:	lea    r15,[rip+0xabb1]        # 4127b6 <getopt_long_only@@Base+0x5656>
  407c05:	mov    rsi,r15
  407c08:	mov    rcx,r12
  407c0b:	call   402370 <Mat_VarSetStructFieldByName@plt>
  407c10:	xor    edx,edx
  407c12:	mov    rdi,rbx
  407c15:	lea    r12,[rip+0xaba1]        # 4127bd <getopt_long_only@@Base+0x565d>
  407c1c:	mov    rsi,r12
  407c1f:	mov    rcx,r14
  407c22:	call   402370 <Mat_VarSetStructFieldByName@plt>
  407c27:	mov    edx,0x1
  407c2c:	mov    rdi,rbx
  407c2f:	mov    rsi,r15
  407c32:	mov    r14,QWORD PTR [rsp+0x110]
  407c3a:	mov    rcx,r14
  407c3d:	call   402370 <Mat_VarSetStructFieldByName@plt>
  407c42:	mov    edx,0x1
  407c47:	mov    rdi,rbx
  407c4a:	mov    rsi,r12
  407c4d:	mov    rcx,r13
  407c50:	call   402370 <Mat_VarSetStructFieldByName@plt>
  407c55:	mov    esi,0x1
  407c5a:	mov    rdi,rbx
  407c5d:	call   402270 <Mat_VarPrint@plt>
  407c62:	mov    QWORD PTR [rbx+0x38],0x0
  407c6a:	mov    rdi,rbx
  407c6d:	call   402240 <Mat_VarFree@plt>
  407c72:	vmovdqa xmm0,XMMWORD PTR [rip+0x6406]        # 40e080 <getopt_long_only@@Base+0xf20>
  407c7a:	vmovdqa XMMWORD PTR [rsp+0x40],xmm0
  407c80:	mov    esi,0x2
  407c85:	mov    r8d,0x2
  407c8b:	lea    rdi,[rip+0x884d]        # 4104df <getopt_long_only@@Base+0x337f>
  407c92:	lea    rdx,[rsp+0x40]
  407c97:	lea    rcx,[rsp+0xe60]
  407c9f:	call   402300 <Mat_VarCreateStruct@plt>
  407ca4:	mov    rbx,rax
  407ca7:	xor    esi,esi
  407ca9:	xor    edx,edx
  407cab:	mov    rdi,rax
  407cae:	mov    rcx,r13
  407cb1:	lea    r13,[rsp+0x440]
  407cb9:	call   402380 <Mat_VarSetStructFieldByIndex@plt>
  407cbe:	mov    esi,0x1
  407cc3:	xor    edx,edx
  407cc5:	mov    rdi,rbx
  407cc8:	mov    rcx,r14
  407ccb:	call   402380 <Mat_VarSetStructFieldByIndex@plt>
  407cd0:	xor    esi,esi
  407cd2:	mov    edx,0x1
  407cd7:	mov    rdi,rbx
  407cda:	mov    rcx,QWORD PTR [rsp+0xb8]
  407ce2:	mov    r15,QWORD PTR [rsp+0x58]
  407ce7:	call   402380 <Mat_VarSetStructFieldByIndex@plt>
  407cec:	mov    esi,0x1
  407cf1:	mov    edx,0x1
  407cf6:	mov    rdi,rbx
  407cf9:	mov    rcx,QWORD PTR [rsp+0x100]
  407d01:	call   402380 <Mat_VarSetStructFieldByIndex@plt>
  407d06:	jmp    4088ec <Mat_VarRead@plt+0x655c>
  407d0b:	mov    eax,0x1
  407d10:	mov    r15,QWORD PTR [rsp+0x58]
  407d15:	add    r15d,0x1
  407d19:	add    DWORD PTR [rsp+0x3c],eax
  407d1d:	jmp    403a7d <Mat_VarRead@plt+0x16ed>
  407d22:	mov    r15d,0x1
  407d28:	lea    rax,[rsp+0x174]
  407d30:	mov    rsi,rax
  407d33:	lea    rax,[rsp+0x168]
  407d3b:	mov    rdx,rax
  407d3e:	lea    r13,[rsp+0x15c]
  407d46:	lea    r14,[rsp+0x150]
  407d4e:	jmp    407e9f <Mat_VarRead@plt+0x5b0f>
  407d53:	mov    r15d,0x2
  407d59:	lea    rax,[rsp+0x1e4]
  407d61:	mov    rsi,rax
  407d64:	lea    rax,[rsp+0x1d8]
  407d6c:	mov    rdx,rax
  407d6f:	lea    r13,[rsp+0x1cc]
  407d77:	lea    r14,[rsp+0x1c0]
  407d7f:	jmp    407e9f <Mat_VarRead@plt+0x5b0f>
  407d84:	mov    r15d,0x3
  407d8a:	lea    rax,[rsp+0x2a8]
  407d92:	mov    rsi,rax
  407d95:	lea    rax,[rsp+0x290]
  407d9d:	mov    rdx,rax
  407da0:	lea    r13,[rsp+0x278]
  407da8:	lea    r14,[rsp+0x260]
  407db0:	jmp    407e9f <Mat_VarRead@plt+0x5b0f>
  407db5:	mov    r15d,0x4
  407dbb:	lea    rax,[rsp+0x408]
  407dc3:	mov    rsi,rax
  407dc6:	lea    rax,[rsp+0x3f0]
  407dce:	mov    rdx,rax
  407dd1:	lea    r13,[rsp+0x3d8]
  407dd9:	lea    r14,[rsp+0x3c0]
  407de1:	jmp    407e9f <Mat_VarRead@plt+0x5b0f>
  407de6:	mov    r15d,0x5
  407dec:	lea    rax,[rsp+0x6b0]
  407df4:	mov    rsi,rax
  407df7:	lea    rax,[rsp+0x680]
  407dff:	mov    rdx,rax
  407e02:	lea    r13,[rsp+0x650]
  407e0a:	lea    r14,[rsp+0x620]
  407e12:	jmp    407e9f <Mat_VarRead@plt+0x5b0f>
  407e17:	mov    r15d,0x6
  407e1d:	lea    rax,[rsp+0xd90]
  407e25:	mov    rsi,rax
  407e28:	lea    rax,[rsp+0xd60]
  407e30:	mov    rdx,rax
  407e33:	lea    r13,[rsp+0xd30]
  407e3b:	lea    r14,[rsp+0xd00]
  407e43:	jmp    407e9f <Mat_VarRead@plt+0x5b0f>
  407e45:	mov    r15d,0xc
  407e4b:	lea    rax,[rsp+0xb80]
  407e53:	mov    rsi,rax
  407e56:	lea    rax,[rsp+0xb20]
  407e5e:	mov    rdx,rax
  407e61:	lea    r13,[rsp+0xac0]
  407e69:	lea    r14,[rsp+0xa60]
  407e71:	jmp    407e9f <Mat_VarRead@plt+0x5b0f>
  407e73:	mov    r15d,0xd
  407e79:	lea    rax,[rsp+0xf80]
  407e81:	mov    rsi,rax
  407e84:	lea    rax,[rsp+0xf20]
  407e8c:	mov    rdx,rax
  407e8f:	lea    r13,[rsp+0xec0]
  407e97:	lea    r14,[rsp+0xe60]
  407e9f:	mov    QWORD PTR [rsp+0xb8],rdx
  407ea7:	mov    QWORD PTR [rsp+0x100],rsi
  407eaf:	mov    edx,DWORD PTR [rip+0xd46b]        # 415320 <getopt_long_only@@Base+0x81c0>
  407eb5:	xor    esi,esi
  407eb7:	mov    rdi,rcx
  407eba:	vzeroupper 
  407ebd:	call   402310 <Mat_CreateVer@plt>
  407ec2:	test   rax,rax
  407ec5:	je     408009 <Mat_VarRead@plt+0x5c79>
  407ecb:	vmovaps xmm0,XMMWORD PTR [rip+0x618d]        # 40e060 <getopt_long_only@@Base+0xf00>
  407ed3:	vmovaps XMMWORD PTR [rsp+0x40],xmm0
  407ed9:	mov    DWORD PTR [rsp],0x1
  407ee0:	mov    QWORD PTR [rsp+0x110],rax
  407ee8:	xor    edi,edi
  407eea:	mov    ecx,0x2
  407eef:	mov    rbx,QWORD PTR [rsp+0xa8]
  407ef7:	mov    esi,ebx
  407ef9:	mov    edx,r15d
  407efc:	mov    r12,r13
  407eff:	lea    r13,[rsp+0x40]
  407f04:	mov    r8,r13
  407f07:	mov    r9,r14
  407f0a:	call   4020d0 <Mat_VarCreate@plt>
  407f0f:	mov    QWORD PTR [rsp+0xc0],rax
  407f17:	mov    DWORD PTR [rsp],0x1
  407f1e:	xor    edi,edi
  407f20:	mov    ecx,0x2
  407f25:	mov    esi,ebx
  407f27:	mov    edx,r15d
  407f2a:	mov    r8,r13
  407f2d:	mov    r9,r12
  407f30:	call   4020d0 <Mat_VarCreate@plt>
  407f35:	mov    QWORD PTR [rsp+0xc8],rax
  407f3d:	mov    DWORD PTR [rsp],0x1
  407f44:	xor    edi,edi
  407f46:	mov    ecx,0x2
  407f4b:	mov    esi,ebx
  407f4d:	mov    edx,r15d
  407f50:	mov    r8,r13
  407f53:	mov    r9,QWORD PTR [rsp+0xb8]
  407f5b:	call   4020d0 <Mat_VarCreate@plt>
  407f60:	mov    QWORD PTR [rsp+0xd0],rax
  407f68:	mov    DWORD PTR [rsp],0x1
  407f6f:	xor    edi,edi
  407f71:	mov    ecx,0x2
  407f76:	mov    esi,ebx
  407f78:	mov    edx,r15d
  407f7b:	mov    r8,r13
  407f7e:	mov    r9,QWORD PTR [rsp+0x100]
  407f86:	call   4020d0 <Mat_VarCreate@plt>
  407f8b:	mov    QWORD PTR [rsp+0xd8],rax
  407f93:	mov    QWORD PTR [rsp+0xe0],0x0
  407f9f:	vmovdqa xmm0,XMMWORD PTR [rip+0x6159]        # 40e100 <getopt_long_only@@Base+0xfa0>
  407fa7:	vmovdqa XMMWORD PTR [rsp+0x40],xmm0
  407fad:	mov    DWORD PTR [rsp],0x0
  407fb4:	mov    esi,0x1
  407fb9:	mov    edx,0x15
  407fbe:	mov    ecx,0x2
  407fc3:	lea    rdi,[rip+0x8113]        # 4100dd <getopt_long_only@@Base+0x2f7d>
  407fca:	mov    r8,r13
  407fcd:	lea    r9,[rsp+0xc0]
  407fd5:	call   4020d0 <Mat_VarCreate@plt>
  407fda:	mov    rbx,rax
  407fdd:	movzx  edx,BYTE PTR [rip+0xe478]        # 41645c <optopt@@Base+0x24>
  407fe4:	mov    r14,QWORD PTR [rsp+0x110]
  407fec:	mov    rdi,r14
  407fef:	mov    rsi,rax
  407ff2:	call   4020f0 <Mat_VarWrite@plt>
  407ff7:	mov    rdi,rbx
  407ffa:	xor    ebx,ebx
  407ffc:	call   402240 <Mat_VarFree@plt>
  408001:	mov    rdi,r14
  408004:	call   4022a0 <Mat_Close@plt>
  408009:	mov    r15,QWORD PTR [rsp+0x58]
  40800e:	add    r15d,0x1
  408012:	add    DWORD PTR [rsp+0x3c],ebx
  408016:	jmp    406d71 <Mat_VarRead@plt+0x49e1>
  40801b:	cmp    QWORD PTR [rsp+0x28],0x0
  408021:	je     408047 <Mat_VarRead@plt+0x5cb7>
  408023:	mov    rax,QWORD PTR [rip+0xcfae]        # 414fd8 <getopt_long_only@@Base+0x7e78>
  40802a:	mov    rdx,QWORD PTR [rax]
  40802d:	mov    rdi,QWORD PTR [rsp+0x28]
  408032:	lea    rsi,[rip+0xa7a6]        # 4127df <getopt_long_only@@Base+0x567f>
  408039:	call   4021c0 <freopen@plt>
  40803e:	test   rax,rax
  408041:	je     409847 <Mat_VarRead@plt+0x74b7>
  408047:	vmovups ymm0,YMMWORD PTR [rip+0xcd01]        # 414d50 <getopt_long_only@@Base+0x7bf0>
  40804f:	vmovaps YMMWORD PTR [rsp+0x1160],ymm0
  408058:	vmovdqa xmm0,XMMWORD PTR [rip+0x6020]        # 40e080 <getopt_long_only@@Base+0xf20>
  408060:	vmovdqa XMMWORD PTR [rsp+0x40],xmm0
  408066:	mov    esi,0x2
  40806b:	mov    r8d,0x4
  408071:	lea    rdi,[rip+0x8065]        # 4100dd <getopt_long_only@@Base+0x2f7d>
  408078:	lea    rdx,[rsp+0x40]
  40807d:	lea    rcx,[rsp+0x1160]
  408085:	vzeroupper 
  408088:	call   402300 <Mat_VarCreateStruct@plt>
  40808d:	mov    r14,rax
  408090:	mov    rdi,rax
  408093:	call   402030 <Mat_VarGetNumberOfFields@plt>
  408098:	mov    ebx,eax
  40809a:	mov    rdi,r14
  40809d:	call   4021e0 <Mat_VarGetStructFieldnames@plt>
  4080a2:	mov    r15,rax
  4080a5:	lea    rdi,[rip+0xaac4]        # 412b70 <getopt_long_only@@Base+0x5a10>
  4080ac:	call   4020c0 <puts@plt>
  4080b1:	test   ebx,ebx
  4080b3:	je     408b8d <Mat_VarRead@plt+0x67fd>
  4080b9:	mov    r12d,ebx
  4080bc:	xor    ebx,ebx
  4080be:	lea    r13,[rip+0xa758]        # 41281d <getopt_long_only@@Base+0x56bd>
  4080c5:	mov    rdx,QWORD PTR [r15+rbx*8]
  4080c9:	xor    eax,eax
  4080cb:	mov    rdi,r13
  4080ce:	mov    esi,ebx
  4080d0:	call   402160 <printf@plt>
  4080d5:	add    rbx,0x1
  4080d9:	cmp    r12,rbx
  4080dc:	jne    4080c5 <Mat_VarRead@plt+0x5d35>
  4080de:	jmp    408b99 <Mat_VarRead@plt+0x6809>
  4080e3:	lea    rax,[rsp+0xc00]
  4080eb:	mov    QWORD PTR [rsp+0x60],rax
  4080f0:	lea    rax,[rsp+0x1000]
  4080f8:	mov    QWORD PTR [rsp+0x68],rax
  4080fd:	lea    rax,[rsp+0xc30]
  408105:	mov    QWORD PTR [rsp+0x70],rax
  40810a:	lea    rax,[rsp+0x1030]
  408112:	mov    QWORD PTR [rsp+0x78],rax
  408117:	lea    rax,[rsp+0xc60]
  40811f:	mov    QWORD PTR [rsp+0x80],rax
  408127:	lea    rax,[rsp+0x1060]
  40812f:	mov    QWORD PTR [rsp+0x88],rax
  408137:	lea    rax,[rsp+0xc90]
  40813f:	mov    QWORD PTR [rsp+0x90],rax
  408147:	lea    rax,[rsp+0x1090]
  40814f:	mov    QWORD PTR [rsp+0x98],rax
  408157:	mov    r12d,0x7
  40815d:	jmp    40854a <Mat_VarRead@plt+0x61ba>
  408162:	lea    rax,[rsp+0x150]
  40816a:	mov    QWORD PTR [rsp+0x60],rax
  40816f:	lea    rax,[rsp+0x1c0]
  408177:	mov    QWORD PTR [rsp+0x68],rax
  40817c:	lea    rax,[rsp+0x15c]
  408184:	mov    QWORD PTR [rsp+0x70],rax
  408189:	lea    rax,[rsp+0x1cc]
  408191:	mov    QWORD PTR [rsp+0x78],rax
  408196:	lea    rax,[rsp+0x168]
  40819e:	mov    QWORD PTR [rsp+0x80],rax
  4081a6:	lea    rax,[rsp+0x1d8]
  4081ae:	mov    QWORD PTR [rsp+0x88],rax
  4081b6:	lea    rax,[rsp+0x174]
  4081be:	mov    QWORD PTR [rsp+0x90],rax
  4081c6:	lea    rax,[rsp+0x1e4]
  4081ce:	mov    QWORD PTR [rsp+0x98],rax
  4081d6:	mov    r12d,0x1
  4081dc:	jmp    40854a <Mat_VarRead@plt+0x61ba>
  4081e1:	lea    rax,[rsp+0x220]
  4081e9:	mov    QWORD PTR [rsp+0x60],rax
  4081ee:	lea    rax,[rsp+0x2e0]
  4081f6:	mov    QWORD PTR [rsp+0x68],rax
  4081fb:	lea    rax,[rsp+0x22c]
  408203:	mov    QWORD PTR [rsp+0x70],rax
  408208:	lea    rax,[rsp+0x2ec]
  408210:	mov    QWORD PTR [rsp+0x78],rax
  408215:	lea    rax,[rsp+0x238]
  40821d:	mov    QWORD PTR [rsp+0x80],rax
  408225:	lea    rax,[rsp+0x2f8]
  40822d:	mov    QWORD PTR [rsp+0x88],rax
  408235:	lea    rax,[rsp+0x244]
  40823d:	mov    QWORD PTR [rsp+0x90],rax
  408245:	lea    rax,[rsp+0x304]
  40824d:	mov    QWORD PTR [rsp+0x98],rax
  408255:	mov    r12d,0x2
  40825b:	jmp    40854a <Mat_VarRead@plt+0x61ba>
  408260:	lea    rax,[rsp+0x260]
  408268:	mov    QWORD PTR [rsp+0x60],rax
  40826d:	lea    rax,[rsp+0x3c0]
  408275:	mov    QWORD PTR [rsp+0x68],rax
  40827a:	lea    rax,[rsp+0x278]
  408282:	mov    QWORD PTR [rsp+0x70],rax
  408287:	lea    rax,[rsp+0x3d8]
  40828f:	mov    QWORD PTR [rsp+0x78],rax
  408294:	lea    rax,[rsp+0x290]
  40829c:	mov    QWORD PTR [rsp+0x80],rax
  4082a4:	lea    rax,[rsp+0x3f0]
  4082ac:	mov    QWORD PTR [rsp+0x88],rax
  4082b4:	lea    rax,[rsp+0x2a8]
  4082bc:	mov    QWORD PTR [rsp+0x90],rax
  4082c4:	lea    rax,[rsp+0x408]
  4082cc:	mov    QWORD PTR [rsp+0x98],rax
  4082d4:	mov    r12d,0x3
  4082da:	jmp    40854a <Mat_VarRead@plt+0x61ba>
  4082df:	lea    rax,[rsp+0x340]
  4082e7:	mov    QWORD PTR [rsp+0x60],rax
  4082ec:	lea    rax,[rsp+0xde0]
  4082f4:	mov    QWORD PTR [rsp+0x68],rax
  4082f9:	lea    rax,[rsp+0x358]
  408301:	mov    QWORD PTR [rsp+0x70],rax
  408306:	lea    rax,[rsp+0xdf8]
  40830e:	mov    QWORD PTR [rsp+0x78],rax
  408313:	lea    rax,[rsp+0x370]
  40831b:	mov    QWORD PTR [rsp+0x80],rax
  408323:	lea    rax,[rsp+0xe10]
  40832b:	mov    QWORD PTR [rsp+0x88],rax
  408333:	lea    rax,[rsp+0x388]
  40833b:	mov    QWORD PTR [rsp+0x90],rax
  408343:	lea    rax,[rsp+0xe28]
  40834b:	mov    QWORD PTR [rsp+0x98],rax
  408353:	mov    r12d,0x4
  408359:	jmp    40854a <Mat_VarRead@plt+0x61ba>
  40835e:	lea    rax,[rsp+0x620]
  408366:	mov    QWORD PTR [rsp+0x60],rax
  40836b:	lea    rax,[rsp+0xd00]
  408373:	mov    QWORD PTR [rsp+0x68],rax
  408378:	lea    rax,[rsp+0x650]
  408380:	mov    QWORD PTR [rsp+0x70],rax
  408385:	lea    rax,[rsp+0xd30]
  40838d:	mov    QWORD PTR [rsp+0x78],rax
  408392:	lea    rax,[rsp+0x680]
  40839a:	mov    QWORD PTR [rsp+0x80],rax
  4083a2:	lea    rax,[rsp+0xd60]
  4083aa:	mov    QWORD PTR [rsp+0x88],rax
  4083b2:	lea    rax,[rsp+0x6b0]
  4083ba:	mov    QWORD PTR [rsp+0x90],rax
  4083c2:	lea    rax,[rsp+0xd90]
  4083ca:	mov    QWORD PTR [rsp+0x98],rax
  4083d2:	mov    r12d,0x5
  4083d8:	jmp    40854a <Mat_VarRead@plt+0x61ba>
  4083dd:	lea    rax,[rsp+0x700]
  4083e5:	mov    QWORD PTR [rsp+0x60],rax
  4083ea:	lea    rax,[rsp+0x7e0]
  4083f2:	mov    QWORD PTR [rsp+0x68],rax
  4083f7:	lea    rax,[rsp+0x730]
  4083ff:	mov    QWORD PTR [rsp+0x70],rax
  408404:	lea    rax,[rsp+0x810]
  40840c:	mov    QWORD PTR [rsp+0x78],rax
  408411:	lea    rax,[rsp+0x760]
  408419:	mov    QWORD PTR [rsp+0x80],rax
  408421:	lea    rax,[rsp+0x840]
  408429:	mov    QWORD PTR [rsp+0x88],rax
  408431:	lea    rax,[rsp+0x790]
  408439:	mov    QWORD PTR [rsp+0x90],rax
  408441:	lea    rax,[rsp+0x870]
  408449:	mov    QWORD PTR [rsp+0x98],rax
  408451:	mov    r12d,0x6
  408457:	jmp    40854a <Mat_VarRead@plt+0x61ba>
  40845c:	lea    rax,[rsp+0xa60]
  408464:	mov    QWORD PTR [rsp+0x60],rax
  408469:	lea    rax,[rsp+0xe60]
  408471:	mov    QWORD PTR [rsp+0x68],rax
  408476:	lea    rax,[rsp+0xac0]
  40847e:	mov    QWORD PTR [rsp+0x70],rax
  408483:	lea    rax,[rsp+0xec0]
  40848b:	mov    QWORD PTR [rsp+0x78],rax
  408490:	lea    rax,[rsp+0xb20]
  408498:	mov    QWORD PTR [rsp+0x80],rax
  4084a0:	lea    rax,[rsp+0xf20]
  4084a8:	mov    QWORD PTR [rsp+0x88],rax
  4084b0:	lea    rax,[rsp+0xb80]
  4084b8:	mov    QWORD PTR [rsp+0x90],rax
  4084c0:	lea    rax,[rsp+0xf80]
  4084c8:	mov    QWORD PTR [rsp+0x98],rax
  4084d0:	mov    r12d,0xc
  4084d6:	jmp    40854a <Mat_VarRead@plt+0x61ba>
  4084d8:	lea    rax,[rsp+0x1cc0]
  4084e0:	mov    QWORD PTR [rsp+0x60],rax
  4084e5:	mov    QWORD PTR [rsp+0x68],r13
  4084ea:	lea    rax,[rsp+0x1d20]
  4084f2:	mov    QWORD PTR [rsp+0x70],rax
  4084f7:	lea    rax,[rsp+0x4a0]
  4084ff:	mov    QWORD PTR [rsp+0x78],rax
  408504:	lea    rax,[rsp+0x1d80]
  40850c:	mov    QWORD PTR [rsp+0x80],rax
  408514:	lea    rax,[rsp+0x500]
  40851c:	mov    QWORD PTR [rsp+0x88],rax
  408524:	lea    rax,[rsp+0x1de0]
  40852c:	mov    QWORD PTR [rsp+0x90],rax
  408534:	lea    rax,[rsp+0x560]
  40853c:	mov    QWORD PTR [rsp+0x98],rax
  408544:	mov    r12d,0xd
  40854a:	mov    edx,DWORD PTR [rip+0xcdd0]        # 415320 <getopt_long_only@@Base+0x81c0>
  408550:	xor    esi,esi
  408552:	mov    rdi,rcx
  408555:	vzeroupper 
  408558:	call   402310 <Mat_CreateVer@plt>
  40855d:	test   rax,rax
  408560:	je     4086a1 <Mat_VarRead@plt+0x6311>
  408566:	mov    r14,rax
  408569:	vmovaps xmm0,XMMWORD PTR [rip+0x5aef]        # 40e060 <getopt_long_only@@Base+0xf00>
  408571:	vmovaps XMMWORD PTR [rsp+0x40],xmm0
  408577:	mov    DWORD PTR [rsp],0x801
  40857e:	xor    r15d,r15d
  408581:	xor    edi,edi
  408583:	mov    ecx,0x2
  408588:	mov    rbx,QWORD PTR [rsp+0xa8]
  408590:	mov    esi,ebx
  408592:	mov    edx,r12d
  408595:	lea    r13,[rsp+0x40]
  40859a:	mov    r8,r13
  40859d:	lea    r9,[rsp+0x60]
  4085a2:	call   4020d0 <Mat_VarCreate@plt>
  4085a7:	mov    QWORD PTR [rsp+0xc0],rax
  4085af:	mov    DWORD PTR [rsp],0x801
  4085b6:	xor    edi,edi
  4085b8:	mov    ecx,0x2
  4085bd:	mov    esi,ebx
  4085bf:	mov    edx,r12d
  4085c2:	mov    r8,r13
  4085c5:	lea    r9,[rsp+0x70]
  4085ca:	call   4020d0 <Mat_VarCreate@plt>
  4085cf:	mov    QWORD PTR [rsp+0xc8],rax
  4085d7:	mov    DWORD PTR [rsp],0x801
  4085de:	xor    edi,edi
  4085e0:	mov    ecx,0x2
  4085e5:	mov    esi,ebx
  4085e7:	mov    edx,r12d
  4085ea:	mov    r8,r13
  4085ed:	lea    r9,[rsp+0x80]
  4085f5:	call   4020d0 <Mat_VarCreate@plt>
  4085fa:	mov    QWORD PTR [rsp+0xd0],rax
  408602:	mov    DWORD PTR [rsp],0x801
  408609:	xor    edi,edi
  40860b:	mov    ecx,0x2
  408610:	mov    esi,ebx
  408612:	mov    edx,r12d
  408615:	mov    r8,r13
  408618:	lea    r9,[rsp+0x90]
  408620:	call   4020d0 <Mat_VarCreate@plt>
  408625:	mov    QWORD PTR [rsp+0xd8],rax
  40862d:	mov    QWORD PTR [rsp+0xe0],0x0
  408639:	vmovdqa xmm0,XMMWORD PTR [rip+0x5abf]        # 40e100 <getopt_long_only@@Base+0xfa0>
  408641:	vmovdqa XMMWORD PTR [rsp+0x40],xmm0
  408647:	mov    DWORD PTR [rsp],0x0
  40864e:	mov    esi,0x1
  408653:	mov    edx,0x15
  408658:	mov    ecx,0x2
  40865d:	lea    rdi,[rip+0x7a79]        # 4100dd <getopt_long_only@@Base+0x2f7d>
  408664:	mov    r8,r13
  408667:	lea    r13,[rsp+0x440]
  40866f:	lea    r9,[rsp+0xc0]
  408677:	call   4020d0 <Mat_VarCreate@plt>
  40867c:	mov    rbx,rax
  40867f:	movzx  edx,BYTE PTR [rip+0xddd6]        # 41645c <optopt@@Base+0x24>
  408686:	mov    rdi,r14
  408689:	mov    rsi,rax
  40868c:	call   4020f0 <Mat_VarWrite@plt>
  408691:	mov    rdi,rbx
  408694:	call   402240 <Mat_VarFree@plt>
  408699:	mov    rdi,r14
  40869c:	call   4022a0 <Mat_Close@plt>
  4086a1:	mov    rax,QWORD PTR [rsp+0x58]
  4086a6:	add    eax,0x1
  4086a9:	add    DWORD PTR [rsp+0x3c],r15d
  4086ae:	mov    r15,rax
  4086b1:	jmp    403a85 <Mat_VarRead@plt+0x16f5>
  4086b6:	cmp    QWORD PTR [rsp+0x28],0x0
  4086bc:	je     4086e2 <Mat_VarRead@plt+0x6352>
  4086be:	mov    rax,QWORD PTR [rip+0xc913]        # 414fd8 <getopt_long_only@@Base+0x7e78>
  4086c5:	mov    rdx,QWORD PTR [rax]
  4086c8:	mov    rdi,QWORD PTR [rsp+0x28]
  4086cd:	lea    rsi,[rip+0xa10b]        # 4127df <getopt_long_only@@Base+0x567f>
  4086d4:	call   4021c0 <freopen@plt>
  4086d9:	test   rax,rax
  4086dc:	je     4098f0 <Mat_VarRead@plt+0x7560>
  4086e2:	mov    r14,QWORD PTR [rsp+0x58]
  4086e7:	add    r14d,0x1
  4086eb:	vmovaps xmm0,XMMWORD PTR [rip+0x5acd]        # 40e1c0 <getopt_long_only@@Base+0x1060>
  4086f3:	vmovaps XMMWORD PTR [rsp+0x440],xmm0
  4086fc:	mov    rax,QWORD PTR [rip+0x5fbd]        # 40e6c0 <getopt_long_only@@Base+0x1560>
  408703:	mov    QWORD PTR [rsp+0x1170],rax
  40870b:	vmovaps xmm0,XMMWORD PTR [rip+0x5f9d]        # 40e6b0 <getopt_long_only@@Base+0x1550>
  408713:	vmovaps XMMWORD PTR [rsp+0x1160],xmm0
  40871c:	mov    rax,QWORD PTR [rip+0x5fbd]        # 40e6e0 <getopt_long_only@@Base+0x1580>
  408723:	vmovaps xmm0,XMMWORD PTR [rip+0x5fa5]        # 40e6d0 <getopt_long_only@@Base+0x1570>
  40872b:	vmovaps XMMWORD PTR [rsp+0x1cc0],xmm0
  408734:	mov    QWORD PTR [rsp+0x1cd0],rax
  40873c:	vmovaps xmm0,XMMWORD PTR [rip+0x5a8c]        # 40e1d0 <getopt_long_only@@Base+0x1070>
  408744:	vmovaps XMMWORD PTR [rsp+0x8c0],xmm0
  40874d:	vmovaps xmm0,XMMWORD PTR [rip+0x592b]        # 40e080 <getopt_long_only@@Base+0xf20>
  408755:	vmovaps XMMWORD PTR [rsp+0x40],xmm0
  40875b:	mov    esi,0x2
  408760:	xor    ecx,ecx
  408762:	xor    r8d,r8d
  408765:	lea    rdi,[rip+0x7971]        # 4100dd <getopt_long_only@@Base+0x2f7d>
  40876c:	lea    r12,[rsp+0x40]
  408771:	mov    rdx,r12
  408774:	call   402300 <Mat_VarCreateStruct@plt>
  408779:	mov    rbx,rax
  40877c:	vmovaps xmm0,XMMWORD PTR [rip+0x58fc]        # 40e080 <getopt_long_only@@Base+0xf20>
  408784:	vmovaps XMMWORD PTR [rsp+0x40],xmm0
  40878a:	mov    DWORD PTR [rsp],0x1
  408791:	xor    edi,edi
  408793:	mov    esi,0x6
  408798:	mov    edx,0x9
  40879d:	mov    ecx,0x2
  4087a2:	mov    r8,r12
  4087a5:	lea    rax,[rsp+0x440]
  4087ad:	mov    r9,rax
  4087b0:	call   4020d0 <Mat_VarCreate@plt>
  4087b5:	mov    r15,rax
  4087b8:	vmovaps xmm0,XMMWORD PTR [rip+0x58d0]        # 40e090 <getopt_long_only@@Base+0xf30>
  4087c0:	vmovaps XMMWORD PTR [rsp+0x40],xmm0
  4087c6:	mov    DWORD PTR [rsp],0x1
  4087cd:	xor    edi,edi
  4087cf:	mov    esi,0x6
  4087d4:	mov    edx,0x9
  4087d9:	mov    ecx,0x2
  4087de:	mov    r8,r12
  4087e1:	lea    r9,[rsp+0x1160]
  4087e9:	call   4020d0 <Mat_VarCreate@plt>
  4087ee:	mov    QWORD PTR [rsp+0x100],rax
  4087f6:	vmovaps xmm0,XMMWORD PTR [rip+0x58a2]        # 40e0a0 <getopt_long_only@@Base+0xf40>
  4087fe:	vmovaps XMMWORD PTR [rsp+0x40],xmm0
  408804:	mov    DWORD PTR [rsp],0x1
  40880b:	xor    edi,edi
  40880d:	mov    esi,0x6
  408812:	mov    edx,0x9
  408817:	mov    ecx,0x2
  40881c:	mov    r8,r12
  40881f:	lea    r9,[rsp+0x1cc0]
  408827:	call   4020d0 <Mat_VarCreate@plt>
  40882c:	mov    r13,rax
  40882f:	vmovdqa xmm0,XMMWORD PTR [rip+0x5879]        # 40e0b0 <getopt_long_only@@Base+0xf50>
  408837:	vmovdqa XMMWORD PTR [rsp+0x40],xmm0
  40883d:	mov    DWORD PTR [rsp],0x1
  408844:	xor    edi,edi
  408846:	mov    esi,0x6
  40884b:	mov    edx,0x9
  408850:	mov    ecx,0x2
  408855:	mov    r8,r12
  408858:	lea    r9,[rsp+0x8c0]
  408860:	call   4020d0 <Mat_VarCreate@plt>
  408865:	mov    QWORD PTR [rsp+0xb8],rax
  40886d:	mov    rdi,rbx
  408870:	lea    r12,[rip+0x9f3f]        # 4127b6 <getopt_long_only@@Base+0x5656>
  408877:	mov    rsi,r12
  40887a:	call   4020b0 <Mat_VarAddStructField@plt>
  40887f:	xor    edx,edx
  408881:	mov    rdi,rbx
  408884:	mov    rsi,r12
  408887:	mov    rcx,r15
  40888a:	mov    r15,r14
  40888d:	call   402370 <Mat_VarSetStructFieldByName@plt>
  408892:	mov    edx,0x1
  408897:	mov    rdi,rbx
  40889a:	mov    rsi,r12
  40889d:	mov    rcx,r13
  4088a0:	lea    r13,[rsp+0x440]
  4088a8:	call   402370 <Mat_VarSetStructFieldByName@plt>
  4088ad:	mov    rdi,rbx
  4088b0:	lea    r14,[rip+0x9f06]        # 4127bd <getopt_long_only@@Base+0x565d>
  4088b7:	mov    rsi,r14
  4088ba:	call   4020b0 <Mat_VarAddStructField@plt>
  4088bf:	xor    edx,edx
  4088c1:	mov    rdi,rbx
  4088c4:	mov    rsi,r14
  4088c7:	mov    rcx,QWORD PTR [rsp+0x100]
  4088cf:	call   402370 <Mat_VarSetStructFieldByName@plt>
  4088d4:	mov    edx,0x1
  4088d9:	mov    rdi,rbx
  4088dc:	mov    rsi,r14
  4088df:	mov    rcx,QWORD PTR [rsp+0xb8]
  4088e7:	call   402370 <Mat_VarSetStructFieldByName@plt>
  4088ec:	mov    esi,0x1
  4088f1:	mov    rdi,rbx
  4088f4:	call   402270 <Mat_VarPrint@plt>
  4088f9:	mov    rdi,rbx
  4088fc:	call   402240 <Mat_VarFree@plt>
  408901:	jmp    403a85 <Mat_VarRead@plt+0x16f5>
  408906:	cmp    QWORD PTR [rsp+0x28],0x0
  40890c:	je     408932 <Mat_VarRead@plt+0x65a2>
  40890e:	mov    rax,QWORD PTR [rip+0xc6c3]        # 414fd8 <getopt_long_only@@Base+0x7e78>
  408915:	mov    rdx,QWORD PTR [rax]
  408918:	mov    rdi,QWORD PTR [rsp+0x28]
  40891d:	lea    rsi,[rip+0x9ebb]        # 4127df <getopt_long_only@@Base+0x567f>
  408924:	call   4021c0 <freopen@plt>
  408929:	test   rax,rax
  40892c:	je     409c51 <Mat_VarRead@plt+0x78c1>
  408932:	mov    rax,QWORD PTR [rsp+0x58]
  408937:	add    eax,0x1
  40893a:	mov    QWORD PTR [rsp+0x58],rax
  40893f:	vmovups ymm0,YMMWORD PTR [rip+0x5de9]        # 40e730 <getopt_long_only@@Base+0x15d0>
  408947:	vmovaps YMMWORD PTR [rsp+0x1d00],ymm0
  408950:	vmovups ymm0,YMMWORD PTR [rip+0x5db8]        # 40e710 <getopt_long_only@@Base+0x15b0>
  408958:	vmovaps YMMWORD PTR [rsp+0x1ce0],ymm0
  408961:	vmovups ymm0,YMMWORD PTR [rip+0x5d87]        # 40e6f0 <getopt_long_only@@Base+0x1590>
  408969:	vmovaps YMMWORD PTR [rsp+0x1cc0],ymm0
  408972:	vmovups ymm0,YMMWORD PTR [rip+0x5e16]        # 40e790 <getopt_long_only@@Base+0x1630>
  40897a:	vmovaps YMMWORD PTR [rsp+0x480],ymm0
  408983:	vmovups ymm0,YMMWORD PTR [rip+0x5de5]        # 40e770 <getopt_long_only@@Base+0x1610>
  40898b:	vmovaps YMMWORD PTR [rsp+0x460],ymm0
  408994:	vmovups ymm0,YMMWORD PTR [rip+0x5db4]        # 40e750 <getopt_long_only@@Base+0x15f0>
  40899c:	vmovaps YMMWORD PTR [rsp+0x440],ymm0
  4089a5:	mov    rax,QWORD PTR [rip+0xc3d4]        # 414d80 <getopt_long_only@@Base+0x7c20>
  4089ac:	mov    QWORD PTR [rsp+0x8d0],rax
  4089b4:	vmovaps xmm0,XMMWORD PTR [rip+0xc3b4]        # 414d70 <getopt_long_only@@Base+0x7c10>
  4089bc:	vmovaps XMMWORD PTR [rsp+0x8c0],xmm0
  4089c5:	vmovaps xmm0,XMMWORD PTR [rip+0x5693]        # 40e060 <getopt_long_only@@Base+0xf00>
  4089cd:	vmovaps XMMWORD PTR [rsp+0x40],xmm0
  4089d3:	mov    esi,0x2
  4089d8:	mov    r8d,0x3
  4089de:	lea    rdi,[rip+0x76f8]        # 4100dd <getopt_long_only@@Base+0x2f7d>
  4089e5:	lea    rax,[rsp+0x40]
  4089ea:	mov    rdx,rax
  4089ed:	lea    rcx,[rsp+0x8c0]
  4089f5:	vzeroupper 
  4089f8:	call   402300 <Mat_VarCreateStruct@plt>
  4089fd:	mov    QWORD PTR [rsp+0x100],rax
  408a05:	vmovdqa xmm0,XMMWORD PTR [rip+0x5613]        # 40e020 <getopt_long_only@@Base+0xec0>
  408a0d:	vmovdqa XMMWORD PTR [rsp+0x40],xmm0
  408a13:	lea    r15,[rsp+0x1cc0]
  408a1b:	lea    r12,[rsp+0x440]
  408a23:	lea    r13,[rsp+0x1160]
  408a2b:	xor    ebx,ebx
  408a2d:	mov    DWORD PTR [rsp],0x1
  408a34:	xor    edi,edi
  408a36:	mov    esi,0x6
  408a3b:	mov    edx,0x9
  408a40:	mov    ecx,0x2
  408a45:	lea    r14,[rsp+0x40]
  408a4a:	mov    r8,r14
  408a4d:	mov    r9,r15
  408a50:	call   4020d0 <Mat_VarCreate@plt>
  408a55:	mov    r14,QWORD PTR [rsp+0x100]
  408a5d:	mov    rdi,r14
  408a60:	lea    rsi,[rip+0x9aeb]        # 412552 <getopt_long_only@@Base+0x53f2>
  408a67:	mov    rdx,rbx
  408a6a:	mov    rcx,rax
  408a6d:	call   402370 <Mat_VarSetStructFieldByName@plt>
  408a72:	mov    DWORD PTR [rsp],0x1
  408a79:	xor    edi,edi
  408a7b:	mov    esi,0x6
  408a80:	mov    edx,0x9
  408a85:	mov    ecx,0x2
  408a8a:	lea    r8,[rsp+0x40]
  408a8f:	mov    r9,r12
  408a92:	call   4020d0 <Mat_VarCreate@plt>
  408a97:	mov    rdi,r14
  408a9a:	lea    rsi,[rip+0x6da9]        # 40f84a <getopt_long_only@@Base+0x26ea>
  408aa1:	mov    rdx,rbx
  408aa4:	mov    rcx,rax
  408aa7:	call   402370 <Mat_VarSetStructFieldByName@plt>
  408aac:	mov    QWORD PTR [r13+0x0],r15
  408ab0:	mov    QWORD PTR [r13+0x8],r12
  408ab4:	mov    DWORD PTR [rsp],0x801
  408abb:	xor    edi,edi
  408abd:	mov    esi,0x6
  408ac2:	mov    edx,0x9
  408ac7:	mov    ecx,0x2
  408acc:	lea    r8,[rsp+0x40]
  408ad1:	mov    r9,r13
  408ad4:	call   4020d0 <Mat_VarCreate@plt>
  408ad9:	mov    rdi,r14
  408adc:	lea    rsi,[rip+0x9063]        # 411b46 <getopt_long_only@@Base+0x49e6>
  408ae3:	mov    rdx,rbx
  408ae6:	mov    rcx,rax
  408ae9:	call   402370 <Mat_VarSetStructFieldByName@plt>
  408aee:	add    rbx,0x1
  408af2:	add    r13,0x10
  408af6:	add    r12,0x8
  408afa:	add    r15,0x8
  408afe:	cmp    rbx,0xc
  408b02:	jne    408a2d <Mat_VarRead@plt+0x669d>
  408b08:	mov    esi,0x1
  408b0d:	mov    edx,0x3
  408b12:	mov    ecx,0x4
  408b17:	xor    r8d,r8d
  408b1a:	mov    r14,QWORD PTR [rsp+0x100]
  408b22:	mov    rdi,r14
  408b25:	call   4022e0 <Mat_VarGetStructsLinear@plt>
  408b2a:	mov    rbx,rax
  408b2d:	mov    esi,0x1
  408b32:	mov    rdi,rax
  408b35:	call   402270 <Mat_VarPrint@plt>
  408b3a:	mov    rdi,rbx
  408b3d:	call   402240 <Mat_VarFree@plt>
  408b42:	xor    esi,esi
  408b44:	mov    edx,0x1
  408b49:	mov    ecx,0x3
  408b4e:	xor    r8d,r8d
  408b51:	mov    rdi,r14
  408b54:	call   4022e0 <Mat_VarGetStructsLinear@plt>
  408b59:	mov    rbx,rax
  408b5c:	mov    esi,0x1
  408b61:	mov    rdi,rax
  408b64:	call   402270 <Mat_VarPrint@plt>
  408b69:	mov    rdi,rbx
  408b6c:	call   402240 <Mat_VarFree@plt>
  408b71:	xor    esi,esi
  408b73:	mov    edx,0x4
  408b78:	mov    ecx,0x3
  408b7d:	xor    r8d,r8d
  408b80:	mov    rdi,r14
  408b83:	call   4022e0 <Mat_VarGetStructsLinear@plt>
  408b88:	jmp    408e8f <Mat_VarRead@plt+0x6aff>
  408b8d:	lea    rdi,[rip+0x9fcc]        # 412b60 <getopt_long_only@@Base+0x5a00>
  408b94:	call   4020c0 <puts@plt>
  408b99:	mov    rdi,r14
  408b9c:	call   402240 <Mat_VarFree@plt>
  408ba1:	mov    esi,0x2
  408ba6:	xor    ecx,ecx
  408ba8:	xor    r8d,r8d
  408bab:	lea    rdi,[rip+0x792d]        # 4104df <getopt_long_only@@Base+0x337f>
  408bb2:	lea    rdx,[rsp+0x40]
  408bb7:	call   402300 <Mat_VarCreateStruct@plt>
  408bbc:	mov    r14,rax
  408bbf:	mov    rdi,rax
  408bc2:	call   402030 <Mat_VarGetNumberOfFields@plt>
  408bc7:	mov    ebx,eax
  408bc9:	mov    rdi,r14
  408bcc:	call   4021e0 <Mat_VarGetStructFieldnames@plt>
  408bd1:	mov    r15,rax
  408bd4:	lea    rdi,[rip+0x9fb5]        # 412b90 <getopt_long_only@@Base+0x5a30>
  408bdb:	call   4020c0 <puts@plt>
  408be0:	test   ebx,ebx
  408be2:	je     408c0b <Mat_VarRead@plt+0x687b>
  408be4:	mov    r12d,ebx
  408be7:	xor    ebx,ebx
  408be9:	lea    r13,[rip+0x9c2d]        # 41281d <getopt_long_only@@Base+0x56bd>
  408bf0:	mov    rdx,QWORD PTR [r15+rbx*8]
  408bf4:	xor    eax,eax
  408bf6:	mov    rdi,r13
  408bf9:	mov    esi,ebx
  408bfb:	call   402160 <printf@plt>
  408c00:	add    rbx,0x1
  408c04:	cmp    r12,rbx
  408c07:	jne    408bf0 <Mat_VarRead@plt+0x6860>
  408c09:	jmp    408c17 <Mat_VarRead@plt+0x6887>
  408c0b:	lea    rdi,[rip+0x9f4e]        # 412b60 <getopt_long_only@@Base+0x5a00>
  408c12:	call   4020c0 <puts@plt>
  408c17:	mov    rdi,r14
  408c1a:	call   402240 <Mat_VarFree@plt>
  408c1f:	xor    edi,edi
  408c21:	call   402030 <Mat_VarGetNumberOfFields@plt>
  408c26:	mov    ebx,eax
  408c28:	xor    edi,edi
  408c2a:	call   4021e0 <Mat_VarGetStructFieldnames@plt>
  408c2f:	mov    r14,rax
  408c32:	lea    rdi,[rip+0x9f77]        # 412bb0 <getopt_long_only@@Base+0x5a50>
  408c39:	call   4020c0 <puts@plt>
  408c3e:	test   ebx,ebx
  408c40:	je     408c69 <Mat_VarRead@plt+0x68d9>
  408c42:	mov    r15d,ebx
  408c45:	xor    ebx,ebx
  408c47:	lea    r12,[rip+0x9bcf]        # 41281d <getopt_long_only@@Base+0x56bd>
  408c4e:	mov    rdx,QWORD PTR [r14+rbx*8]
  408c52:	xor    eax,eax
  408c54:	mov    rdi,r12
  408c57:	mov    esi,ebx
  408c59:	call   402160 <printf@plt>
  408c5e:	add    rbx,0x1
  408c62:	cmp    r15,rbx
  408c65:	jne    408c4e <Mat_VarRead@plt+0x68be>
  408c67:	jmp    408c75 <Mat_VarRead@plt+0x68e5>
  408c69:	lea    rdi,[rip+0x9ef0]        # 412b60 <getopt_long_only@@Base+0x5a00>
  408c70:	call   4020c0 <puts@plt>
  408c75:	mov    r15,QWORD PTR [rsp+0x58]
  408c7a:	add    r15d,0x1
  408c7e:	jmp    406d71 <Mat_VarRead@plt+0x49e1>
  408c83:	cmp    QWORD PTR [rsp+0x28],0x0
  408c89:	je     408caf <Mat_VarRead@plt+0x691f>
  408c8b:	mov    rax,QWORD PTR [rip+0xc346]        # 414fd8 <getopt_long_only@@Base+0x7e78>
  408c92:	mov    rdx,QWORD PTR [rax]
  408c95:	mov    rdi,QWORD PTR [rsp+0x28]
  408c9a:	lea    rsi,[rip+0x9b3e]        # 4127df <getopt_long_only@@Base+0x567f>
  408ca1:	call   4021c0 <freopen@plt>
  408ca6:	test   rax,rax
  408ca9:	je     409ff5 <Mat_VarRead@plt+0x7c65>
  408caf:	mov    rax,QWORD PTR [rsp+0x58]
  408cb4:	add    eax,0x1
  408cb7:	mov    QWORD PTR [rsp+0x58],rax
  408cbc:	xor    esi,esi
  408cbe:	mov    edx,0xb40
  408cc3:	lea    r15,[rsp+0x1160]
  408ccb:	mov    rdi,r15
  408cce:	call   4021b0 <memset@plt>
  408cd3:	xor    esi,esi
  408cd5:	mov    edx,0xb40
  408cda:	lea    rbx,[rsp+0x1cc0]
  408ce2:	mov    rdi,rbx
  408ce5:	call   4021b0 <memset@plt>
  408cea:	mov    rax,QWORD PTR [rip+0xc0af]        # 414da0 <getopt_long_only@@Base+0x7c40>
  408cf1:	mov    QWORD PTR [rsp+0x8d0],rax
  408cf9:	vmovaps xmm0,XMMWORD PTR [rip+0xc08f]        # 414d90 <getopt_long_only@@Base+0x7c30>
  408d01:	vmovaps XMMWORD PTR [rsp+0x8c0],xmm0
  408d0a:	vmovaps ymm0,YMMWORD PTR [rip+0x54ee]        # 40e200 <getopt_long_only@@Base+0x10a0>
  408d12:	vmovaps YMMWORD PTR [rsp+0x440],ymm0
  408d1b:	mov    esi,0x4
  408d20:	mov    r8d,0x2
  408d26:	lea    rdi,[rip+0x73b0]        # 4100dd <getopt_long_only@@Base+0x2f7d>
  408d2d:	lea    rax,[rsp+0x440]
  408d35:	mov    rdx,rax
  408d38:	lea    rcx,[rsp+0x8c0]
  408d40:	vzeroupper 
  408d43:	call   402300 <Mat_VarCreateStruct@plt>
  408d48:	mov    QWORD PTR [rsp+0xb8],rax
  408d50:	vmovaps xmm0,XMMWORD PTR [rip+0x52c8]        # 40e020 <getopt_long_only@@Base+0xec0>
  408d58:	vmovaps XMMWORD PTR [rsp+0x440],xmm0
  408d61:	mov    r13d,0xffffffff
  408d67:	xor    r12d,r12d
  408d6a:	lea    rax,[r12+0x1]
  408d6f:	mov    QWORD PTR [rsp+0x100],rax
  408d77:	vcvtsi2sd xmm0,xmm1,eax
  408d7b:	vmovsd QWORD PTR [r15],xmm0
  408d80:	vcvtsi2sd xmm0,xmm1,r13d
  408d85:	vmovq  QWORD PTR [rbx],xmm0
  408d89:	mov    DWORD PTR [rsp],0x1
  408d90:	xor    edi,edi
  408d92:	mov    esi,0x6
  408d97:	mov    edx,0x9
  408d9c:	mov    ecx,0x2
  408da1:	lea    rax,[rsp+0x440]
  408da9:	mov    r8,rax
  408dac:	mov    r9,r15
  408daf:	call   4020d0 <Mat_VarCreate@plt>
  408db4:	mov    r14,QWORD PTR [rsp+0xb8]
  408dbc:	mov    rdi,r14
  408dbf:	lea    rsi,[rip+0x978c]        # 412552 <getopt_long_only@@Base+0x53f2>
  408dc6:	mov    rdx,r12
  408dc9:	mov    rcx,rax
  408dcc:	call   402370 <Mat_VarSetStructFieldByName@plt>
  408dd1:	mov    DWORD PTR [rsp],0x1
  408dd8:	xor    edi,edi
  408dda:	mov    esi,0x6
  408ddf:	mov    edx,0x9
  408de4:	mov    ecx,0x2
  408de9:	lea    r8,[rsp+0x440]
  408df1:	mov    r9,rbx
  408df4:	call   4020d0 <Mat_VarCreate@plt>
  408df9:	mov    rdi,r14
  408dfc:	lea    rsi,[rip+0x6a47]        # 40f84a <getopt_long_only@@Base+0x26ea>
  408e03:	mov    rdx,r12
  408e06:	mov    rcx,rax
  408e09:	call   402370 <Mat_VarSetStructFieldByName@plt>
  408e0e:	add    rbx,0x8
  408e12:	add    r15,0x8
  408e16:	add    r13d,0xffffffff
  408e1a:	mov    rax,QWORD PTR [rsp+0x100]
  408e22:	mov    r12,rax
  408e25:	cmp    rax,0x168
  408e2b:	jne    408d6a <Mat_VarRead@plt+0x69da>
  408e31:	vmovaps xmm0,XMMWORD PTR [rip+0x51f7]        # 40e030 <getopt_long_only@@Base+0xed0>
  408e39:	vmovaps XMMWORD PTR [rsp+0xe60],xmm0
  408e42:	vmovaps xmm0,XMMWORD PTR [rip+0x51f6]        # 40e040 <getopt_long_only@@Base+0xee0>
  408e4a:	vmovaps XMMWORD PTR [rsp+0xa60],xmm0
  408e53:	vmovdqa xmm0,XMMWORD PTR [rip+0x51f5]        # 40e050 <getopt_long_only@@Base+0xef0>
  408e5b:	vmovdqa XMMWORD PTR [rsp+0x1000],xmm0
  408e64:	xor    r8d,r8d
  408e67:	mov    r14,QWORD PTR [rsp+0xb8]
  408e6f:	mov    rdi,r14
  408e72:	lea    rsi,[rsp+0xe60]
  408e7a:	lea    rdx,[rsp+0xa60]
  408e82:	lea    rcx,[rsp+0x1000]
  408e8a:	call   402290 <Mat_VarGetStructs@plt>
  408e8f:	mov    rbx,rax
  408e92:	mov    esi,0x1
  408e97:	mov    rdi,rax
  408e9a:	call   402270 <Mat_VarPrint@plt>
  408e9f:	mov    rdi,rbx
  408ea2:	call   402240 <Mat_VarFree@plt>
  408ea7:	mov    rdi,r14
  408eaa:	call   402240 <Mat_VarFree@plt>
  408eaf:	mov    rbx,QWORD PTR [rsp+0x30]
  408eb4:	mov    r15,QWORD PTR [rsp+0x58]
  408eb9:	lea    r13,[rsp+0x440]
  408ec1:	cmp    r15d,DWORD PTR [rsp+0x128]
  408ec9:	jl     4028a0 <Mat_VarRead@plt+0x510>
  408ecf:	jmp    40c229 <Mat_VarRead@plt+0x9e99>
  408ed4:	cmp    QWORD PTR [rsp+0x28],0x0
  408eda:	je     408f00 <Mat_VarRead@plt+0x6b70>
  408edc:	mov    rax,QWORD PTR [rip+0xc0f5]        # 414fd8 <getopt_long_only@@Base+0x7e78>
  408ee3:	mov    rdx,QWORD PTR [rax]
  408ee6:	mov    rdi,QWORD PTR [rsp+0x28]
  408eeb:	lea    rsi,[rip+0x98ed]        # 4127df <getopt_long_only@@Base+0x567f>
  408ef2:	call   4021c0 <freopen@plt>
  408ef7:	test   rax,rax
  408efa:	je     40a5f4 <Mat_VarRead@plt+0x8264>
  408f00:	vmovups ymm0,YMMWORD PTR [rip+0x58d8]        # 40e7e0 <getopt_long_only@@Base+0x1680>
  408f08:	vmovups YMMWORD PTR [rsp+0x1190],ymm0
  408f11:	vmovups ymm0,YMMWORD PTR [rip+0x58b7]        # 40e7d0 <getopt_long_only@@Base+0x1670>
  408f19:	vmovaps YMMWORD PTR [rsp+0x1180],ymm0
  408f22:	mov    rax,QWORD PTR [rsp+0x58]
  408f27:	add    eax,0x1
  408f2a:	mov    QWORD PTR [rsp+0x58],rax
  408f2f:	vmovups ymm0,YMMWORD PTR [rip+0x5879]        # 40e7b0 <getopt_long_only@@Base+0x1650>
  408f37:	vmovaps YMMWORD PTR [rsp+0x1160],ymm0
  408f40:	vmovaps xmm0,XMMWORD PTR [rip+0x5128]        # 40e070 <getopt_long_only@@Base+0xf10>
  408f48:	vmovaps XMMWORD PTR [rsp+0x40],xmm0
  408f4e:	mov    DWORD PTR [rsp],0x0
  408f55:	mov    esi,0x1
  408f5a:	mov    edx,0x15
  408f5f:	mov    ecx,0x2
  408f64:	xor    r9d,r9d
  408f67:	lea    rdi,[rip+0x716f]        # 4100dd <getopt_long_only@@Base+0x2f7d>
  408f6e:	lea    r13,[rsp+0x40]
  408f73:	mov    r8,r13
  408f76:	vzeroupper 
  408f79:	call   4020d0 <Mat_VarCreate@plt>
  408f7e:	mov    rbx,rax
  408f81:	vmovdqa xmm0,XMMWORD PTR [rip+0x5097]        # 40e020 <getopt_long_only@@Base+0xec0>
  408f89:	vmovdqa XMMWORD PTR [rsp+0x40],xmm0
  408f8f:	mov    DWORD PTR [rsp],0x1
  408f96:	xor    edi,edi
  408f98:	mov    esi,0x6
  408f9d:	mov    edx,0x9
  408fa2:	mov    ecx,0x2
  408fa7:	mov    r8,r13
  408faa:	lea    r9,[rsp+0x1160]
  408fb2:	call   4020d0 <Mat_VarCreate@plt>
  408fb7:	mov    r14,rax
  408fba:	mov    DWORD PTR [rsp],0x1
  408fc1:	xor    edi,edi
  408fc3:	mov    esi,0x6
  408fc8:	mov    edx,0x9
  408fcd:	mov    ecx,0x2
  408fd2:	mov    r8,r13
  408fd5:	lea    r9,[rsp+0x1168]
  408fdd:	call   4020d0 <Mat_VarCreate@plt>
  408fe2:	mov    QWORD PTR [rsp+0x100],rax
  408fea:	mov    DWORD PTR [rsp],0x1
  408ff1:	xor    edi,edi
  408ff3:	mov    esi,0x6
  408ff8:	mov    edx,0x9
  408ffd:	mov    ecx,0x2
  409002:	mov    r8,r13
  409005:	lea    r9,[rsp+0x1170]
  40900d:	call   4020d0 <Mat_VarCreate@plt>
  409012:	mov    r15,rax
  409015:	mov    DWORD PTR [rsp],0x1
  40901c:	xor    edi,edi
  40901e:	mov    esi,0x6
  409023:	mov    edx,0x9
  409028:	mov    ecx,0x2
  40902d:	mov    r8,r13
  409030:	lea    r9,[rsp+0x1178]
  409038:	call   4020d0 <Mat_VarCreate@plt>
  40903d:	mov    QWORD PTR [rsp+0xb8],rax
  409045:	mov    DWORD PTR [rsp],0x1
  40904c:	xor    edi,edi
  40904e:	mov    esi,0x6
  409053:	mov    edx,0x9
  409058:	mov    ecx,0x2
  40905d:	mov    r8,r13
  409060:	lea    r9,[rsp+0x1180]
  409068:	call   4020d0 <Mat_VarCreate@plt>
  40906d:	mov    r12,rax
  409070:	mov    DWORD PTR [rsp],0x1
  409077:	xor    edi,edi
  409079:	mov    esi,0x6
  40907e:	mov    edx,0x9
  409083:	mov    ecx,0x2
  409088:	mov    r8,r13
  40908b:	lea    r9,[rsp+0x1188]
  409093:	call   4020d0 <Mat_VarCreate@plt>
  409098:	mov    QWORD PTR [rsp+0x110],rax
  4090a0:	mov    DWORD PTR [rsp],0x1
  4090a7:	xor    edi,edi
  4090a9:	mov    esi,0x6
  4090ae:	mov    edx,0x9
  4090b3:	mov    ecx,0x2
  4090b8:	mov    r8,r13
  4090bb:	lea    r9,[rsp+0x1190]
  4090c3:	call   4020d0 <Mat_VarCreate@plt>
  4090c8:	mov    QWORD PTR [rsp+0x120],rax
  4090d0:	mov    DWORD PTR [rsp],0x1
  4090d7:	xor    edi,edi
  4090d9:	mov    esi,0x6
  4090de:	mov    edx,0x9
  4090e3:	mov    ecx,0x2
  4090e8:	mov    r8,r13
  4090eb:	lea    r9,[rsp+0x1198]
  4090f3:	call   4020d0 <Mat_VarCreate@plt>
  4090f8:	mov    QWORD PTR [rsp+0x118],rax
  409100:	mov    DWORD PTR [rsp],0x1
  409107:	xor    edi,edi
  409109:	mov    esi,0x6
  40910e:	mov    edx,0x9
  409113:	mov    ecx,0x2
  409118:	mov    r8,r13
  40911b:	lea    r9,[rsp+0x11a0]
  409123:	call   4020d0 <Mat_VarCreate@plt>
  409128:	mov    QWORD PTR [rsp+0x148],rax
  409130:	mov    DWORD PTR [rsp],0x1
  409137:	xor    edi,edi
  409139:	mov    esi,0x6
  40913e:	mov    edx,0x9
  409143:	mov    ecx,0x2
  409148:	mov    r8,r13
  40914b:	lea    r9,[rsp+0x11a8]
  409153:	call   4020d0 <Mat_VarCreate@plt>
  409158:	mov    r13,rax
  40915b:	xor    esi,esi
  40915d:	mov    rdi,rbx
  409160:	mov    rdx,r14
  409163:	call   4021a0 <Mat_VarSetCell@plt>
  409168:	mov    esi,0x1
  40916d:	mov    rdi,rbx
  409170:	mov    rdx,QWORD PTR [rsp+0x100]
  409178:	call   4021a0 <Mat_VarSetCell@plt>
  40917d:	mov    esi,0x2
  409182:	mov    rdi,rbx
  409185:	mov    rdx,r15
  409188:	call   4021a0 <Mat_VarSetCell@plt>
  40918d:	mov    esi,0x3
  409192:	mov    rdi,rbx
  409195:	mov    rdx,QWORD PTR [rsp+0xb8]
  40919d:	call   4021a0 <Mat_VarSetCell@plt>
  4091a2:	mov    esi,0x4
  4091a7:	mov    rdi,rbx
  4091aa:	mov    rdx,r12
  4091ad:	call   4021a0 <Mat_VarSetCell@plt>
  4091b2:	mov    esi,0x5
  4091b7:	mov    rdi,rbx
  4091ba:	mov    rdx,QWORD PTR [rsp+0x110]
  4091c2:	call   4021a0 <Mat_VarSetCell@plt>
  4091c7:	mov    esi,0x6
  4091cc:	mov    rdi,rbx
  4091cf:	mov    rdx,QWORD PTR [rsp+0x120]
  4091d7:	call   4021a0 <Mat_VarSetCell@plt>
  4091dc:	mov    esi,0x1
  4091e1:	mov    rdi,rbx
  4091e4:	call   402270 <Mat_VarPrint@plt>
  4091e9:	xor    esi,esi
  4091eb:	mov    rdi,rbx
  4091ee:	mov    rdx,QWORD PTR [rsp+0x118]
  4091f6:	call   4021a0 <Mat_VarSetCell@plt>
  4091fb:	cmp    rax,r14
  4091fe:	jne    409869 <Mat_VarRead@plt+0x74d9>
  409204:	mov    rdi,r14
  409207:	call   402240 <Mat_VarFree@plt>
  40920c:	mov    esi,0x2
  409211:	mov    rdi,rbx
  409214:	mov    rdx,QWORD PTR [rsp+0x148]
  40921c:	call   4021a0 <Mat_VarSetCell@plt>
  409221:	cmp    rax,r15
  409224:	jne    409869 <Mat_VarRead@plt+0x74d9>
  40922a:	mov    rdi,r15
  40922d:	call   402240 <Mat_VarFree@plt>
  409232:	mov    esi,0x4
  409237:	mov    rdi,rbx
  40923a:	mov    rdx,r13
  40923d:	call   4021a0 <Mat_VarSetCell@plt>
  409242:	cmp    rax,r12
  409245:	jne    409869 <Mat_VarRead@plt+0x74d9>
  40924b:	mov    rdi,r12
  40924e:	call   402240 <Mat_VarFree@plt>
  409253:	mov    esi,0x1
  409258:	mov    rdi,rbx
  40925b:	call   402270 <Mat_VarPrint@plt>
  409260:	mov    rdi,rbx
  409263:	call   402240 <Mat_VarFree@plt>
  409268:	xor    eax,eax
  40926a:	add    DWORD PTR [rsp+0x3c],eax
  40926e:	jmp    408eaf <Mat_VarRead@plt+0x6b1f>
  409273:	cmp    QWORD PTR [rsp+0x28],0x0
  409279:	je     40929f <Mat_VarRead@plt+0x6f0f>
  40927b:	mov    rax,QWORD PTR [rip+0xbd56]        # 414fd8 <getopt_long_only@@Base+0x7e78>
  409282:	mov    rdx,QWORD PTR [rax]
  409285:	mov    rdi,QWORD PTR [rsp+0x28]
  40928a:	lea    rsi,[rip+0x954e]        # 4127df <getopt_long_only@@Base+0x567f>
  409291:	call   4021c0 <freopen@plt>
  409296:	test   rax,rax
  409299:	je     40a6fe <Mat_VarRead@plt+0x836e>
  40929f:	vmovups ymm0,YMMWORD PTR [rip+0x5079]        # 40e320 <getopt_long_only@@Base+0x11c0>
  4092a7:	vmovaps YMMWORD PTR [rsp+0x1cc0],ymm0
  4092b0:	mov    rax,QWORD PTR [rsp+0x58]
  4092b5:	add    eax,0x1
  4092b8:	mov    QWORD PTR [rsp+0x58],rax
  4092bd:	vmovups ymm0,YMMWORD PTR [rip+0x507b]        # 40e340 <getopt_long_only@@Base+0x11e0>
  4092c5:	vmovaps YMMWORD PTR [rsp+0x1160],ymm0
  4092ce:	vmovaps xmm0,XMMWORD PTR [rip+0x4d8a]        # 40e060 <getopt_long_only@@Base+0xf00>
  4092d6:	vmovaps XMMWORD PTR [rsp+0x40],xmm0
  4092dc:	mov    DWORD PTR [rsp],0x0
  4092e3:	mov    ebx,0x2
  4092e8:	mov    esi,0x1
  4092ed:	mov    edx,0x15
  4092f2:	mov    ecx,0x2
  4092f7:	xor    r9d,r9d
  4092fa:	lea    rdi,[rip+0x6ddc]        # 4100dd <getopt_long_only@@Base+0x2f7d>
  409301:	lea    rax,[rsp+0x40]
  409306:	mov    r8,rax
  409309:	vzeroupper 
  40930c:	call   4020d0 <Mat_VarCreate@plt>
  409311:	mov    r12,rax
  409314:	vmovdqa xmm0,XMMWORD PTR [rip+0x4d04]        # 40e020 <getopt_long_only@@Base+0xec0>
  40931c:	vmovdqa XMMWORD PTR [rsp+0x40],xmm0
  409322:	xor    r13d,r13d
  409325:	xor    r14d,r14d
  409328:	mov    QWORD PTR [rsp+0x100],rax
  409330:	lea    r15,[rsp+r14*1]
  409334:	add    r15,0x1cc0
  40933b:	mov    DWORD PTR [rsp],0x1
  409342:	xor    edi,edi
  409344:	mov    esi,0x6
  409349:	mov    edx,0x9
  40934e:	mov    ecx,0x2
  409353:	lea    rax,[rsp+0x40]
  409358:	mov    r8,rax
  40935b:	mov    r9,r15
  40935e:	call   4020d0 <Mat_VarCreate@plt>
  409363:	lea    esi,[rbx-0x2]
  409366:	mov    rdi,r12
  409369:	mov    rdx,rax
  40936c:	call   4021a0 <Mat_VarSetCell@plt>
  409371:	lea    r12,[rsp+r14*1]
  409375:	add    r12,0x1160
  40937c:	mov    DWORD PTR [rsp],0x1
  409383:	xor    edi,edi
  409385:	mov    esi,0x6
  40938a:	mov    edx,0x9
  40938f:	mov    ecx,0x2
  409394:	lea    r8,[rsp+0x40]
  409399:	mov    r9,r12
  40939c:	call   4020d0 <Mat_VarCreate@plt>
  4093a1:	lea    esi,[rbx-0x1]
  4093a4:	mov    rdi,QWORD PTR [rsp+0x100]
  4093ac:	mov    rdx,rax
  4093af:	call   4021a0 <Mat_VarSetCell@plt>
  4093b4:	mov    QWORD PTR [rsp+r14*2+0x60],r15
  4093b9:	mov    QWORD PTR [rsp+r14*2+0x68],r12
  4093be:	mov    r12,QWORD PTR [rsp+0x100]
  4093c6:	lea    r9,[rsp+r13*1]
  4093ca:	add    r9,0x60
  4093ce:	mov    DWORD PTR [rsp],0x801
  4093d5:	xor    edi,edi
  4093d7:	mov    esi,0x6
  4093dc:	mov    edx,0x9
  4093e1:	mov    ecx,0x2
  4093e6:	lea    r8,[rsp+0x40]
  4093eb:	call   4020d0 <Mat_VarCreate@plt>
  4093f0:	mov    rdi,r12
  4093f3:	mov    esi,ebx
  4093f5:	mov    rdx,rax
  4093f8:	call   4021a0 <Mat_VarSetCell@plt>
  4093fd:	add    r14,0x8
  409401:	add    r13,0x10
  409405:	add    ebx,0x3
  409408:	cmp    r14,0x20
  40940c:	jne    409330 <Mat_VarRead@plt+0x6fa0>
  409412:	xor    esi,esi
  409414:	mov    edx,0x3
  409419:	mov    ecx,0x4
  40941e:	mov    rdi,r12
  409421:	call   402320 <Mat_VarGetCellsLinear@plt>
  409426:	test   rax,rax
  409429:	je     40946d <Mat_VarRead@plt+0x70dd>
  40942b:	mov    rbx,rax
  40942e:	mov    rdi,QWORD PTR [rax]
  409431:	mov    esi,0x1
  409436:	call   402270 <Mat_VarPrint@plt>
  40943b:	mov    rdi,QWORD PTR [rbx+0x8]
  40943f:	mov    esi,0x1
  409444:	call   402270 <Mat_VarPrint@plt>
  409449:	mov    rdi,QWORD PTR [rbx+0x10]
  40944d:	mov    esi,0x1
  409452:	call   402270 <Mat_VarPrint@plt>
  409457:	mov    rdi,QWORD PTR [rbx+0x18]
  40945b:	mov    esi,0x1
  409460:	call   402270 <Mat_VarPrint@plt>
  409465:	mov    rdi,rbx
  409468:	call   402050 <free@plt>
  40946d:	mov    esi,0x1
  409472:	mov    edx,0x3
  409477:	mov    ecx,0x4
  40947c:	mov    rdi,QWORD PTR [rsp+0x100]
  409484:	call   402320 <Mat_VarGetCellsLinear@plt>
  409489:	test   rax,rax
  40948c:	je     4094d0 <Mat_VarRead@plt+0x7140>
  40948e:	mov    rbx,rax
  409491:	mov    rdi,QWORD PTR [rax]
  409494:	mov    esi,0x1
  409499:	call   402270 <Mat_VarPrint@plt>
  40949e:	mov    rdi,QWORD PTR [rbx+0x8]
  4094a2:	mov    esi,0x1
  4094a7:	call   402270 <Mat_VarPrint@plt>
  4094ac:	mov    rdi,QWORD PTR [rbx+0x10]
  4094b0:	mov    esi,0x1
  4094b5:	call   402270 <Mat_VarPrint@plt>
  4094ba:	mov    rdi,QWORD PTR [rbx+0x18]
  4094be:	mov    esi,0x1
  4094c3:	call   402270 <Mat_VarPrint@plt>
  4094c8:	mov    rdi,rbx
  4094cb:	call   402050 <free@plt>
  4094d0:	mov    esi,0x2
  4094d5:	mov    edx,0x3
  4094da:	mov    ecx,0x4
  4094df:	mov    rdi,QWORD PTR [rsp+0x100]
  4094e7:	call   402320 <Mat_VarGetCellsLinear@plt>
  4094ec:	test   rax,rax
  4094ef:	je     409533 <Mat_VarRead@plt+0x71a3>
  4094f1:	mov    rbx,rax
  4094f4:	mov    rdi,QWORD PTR [rax]
  4094f7:	mov    esi,0x1
  4094fc:	call   402270 <Mat_VarPrint@plt>
  409501:	mov    rdi,QWORD PTR [rbx+0x8]
  409505:	mov    esi,0x1
  40950a:	call   402270 <Mat_VarPrint@plt>
  40950f:	mov    rdi,QWORD PTR [rbx+0x10]
  409513:	mov    esi,0x1
  409518:	call   402270 <Mat_VarPrint@plt>
  40951d:	mov    rdi,QWORD PTR [rbx+0x18]
  409521:	mov    esi,0x1
  409526:	call   402270 <Mat_VarPrint@plt>
  40952b:	mov    rdi,rbx
  40952e:	call   402050 <free@plt>
  409533:	mov    esi,0x3
  409538:	mov    edx,0x1
  40953d:	mov    ecx,0x6
  409542:	mov    rdi,QWORD PTR [rsp+0x100]
  40954a:	call   402320 <Mat_VarGetCellsLinear@plt>
  40954f:	test   rax,rax
  409552:	je     4095b2 <Mat_VarRead@plt+0x7222>
  409554:	mov    rbx,rax
  409557:	mov    rdi,QWORD PTR [rax]
  40955a:	mov    esi,0x1
  40955f:	call   402270 <Mat_VarPrint@plt>
  409564:	mov    rdi,QWORD PTR [rbx+0x8]
  409568:	mov    esi,0x1
  40956d:	call   402270 <Mat_VarPrint@plt>
  409572:	mov    rdi,QWORD PTR [rbx+0x10]
  409576:	mov    esi,0x1
  40957b:	call   402270 <Mat_VarPrint@plt>
  409580:	mov    rdi,QWORD PTR [rbx+0x18]
  409584:	mov    esi,0x1
  409589:	call   402270 <Mat_VarPrint@plt>
  40958e:	mov    rdi,QWORD PTR [rbx+0x20]
  409592:	mov    esi,0x1
  409597:	call   402270 <Mat_VarPrint@plt>
  40959c:	mov    rdi,QWORD PTR [rbx+0x28]
  4095a0:	mov    esi,0x1
  4095a5:	call   402270 <Mat_VarPrint@plt>
  4095aa:	mov    rdi,rbx
  4095ad:	call   402050 <free@plt>
  4095b2:	mov    rdi,QWORD PTR [rsp+0x100]
  4095ba:	jmp    408eaa <Mat_VarRead@plt+0x6b1a>
  4095bf:	mov    rax,QWORD PTR [rip+0xba2a]        # 414ff0 <getopt_long_only@@Base+0x7e90>
  4095c6:	mov    rdi,QWORD PTR [rax]
  4095c9:	xor    eax,eax
  4095cb:	lea    rsi,[rip+0x920f]        # 4127e1 <getopt_long_only@@Base+0x5681>
  4095d2:	mov    rdx,QWORD PTR [rsp+0x28]
  4095d7:	call   402220 <fprintf@plt>
  4095dc:	jmp    40793e <Mat_VarRead@plt+0x55ae>
  4095e1:	cmp    QWORD PTR [rsp+0x28],0x0
  4095e7:	je     40960d <Mat_VarRead@plt+0x727d>
  4095e9:	mov    rax,QWORD PTR [rip+0xb9e8]        # 414fd8 <getopt_long_only@@Base+0x7e78>
  4095f0:	mov    rdx,QWORD PTR [rax]
  4095f3:	mov    rdi,QWORD PTR [rsp+0x28]
  4095f8:	lea    rsi,[rip+0x91e0]        # 4127df <getopt_long_only@@Base+0x567f>
  4095ff:	call   4021c0 <freopen@plt>
  409604:	test   rax,rax
  409607:	je     40a7e5 <Mat_VarRead@plt+0x8455>
  40960d:	mov    rax,QWORD PTR [rsp+0x58]
  409612:	add    eax,0x1
  409615:	mov    QWORD PTR [rsp+0x58],rax
  40961a:	xor    esi,esi
  40961c:	mov    edx,0xb40
  409621:	lea    rbx,[rsp+0x1160]
  409629:	mov    rdi,rbx
  40962c:	call   4021b0 <memset@plt>
  409631:	vmovaps ymm0,YMMWORD PTR [rip+0x4bc7]        # 40e200 <getopt_long_only@@Base+0x10a0>
  409639:	vmovaps YMMWORD PTR [rsp+0x440],ymm0
  409642:	mov    DWORD PTR [rsp],0x0
  409649:	mov    esi,0x1
  40964e:	mov    edx,0x15
  409653:	mov    ecx,0x4
  409658:	xor    r9d,r9d
  40965b:	lea    rdi,[rip+0x6a7b]        # 4100dd <getopt_long_only@@Base+0x2f7d>
  409662:	lea    r13,[rsp+0x440]
  40966a:	mov    r8,r13
  40966d:	vzeroupper 
  409670:	call   4020d0 <Mat_VarCreate@plt>
  409675:	mov    r15,rax
  409678:	vmovaps xmm0,XMMWORD PTR [rip+0x49a0]        # 40e020 <getopt_long_only@@Base+0xec0>
  409680:	vmovaps XMMWORD PTR [rsp+0x440],xmm0
  409689:	xor    r14d,r14d
  40968c:	lea    r12,[r14+0x1]
  409690:	vcvtsi2sd xmm0,xmm1,r12d
  409695:	vmovq  QWORD PTR [rbx],xmm0
  409699:	mov    DWORD PTR [rsp],0x1
  4096a0:	xor    edi,edi
  4096a2:	mov    esi,0x6
  4096a7:	mov    edx,0x9
  4096ac:	mov    ecx,0x2
  4096b1:	mov    r8,r13
  4096b4:	mov    r9,rbx
  4096b7:	call   4020d0 <Mat_VarCreate@plt>
  4096bc:	mov    rdi,r15
  4096bf:	mov    esi,r14d
  4096c2:	mov    rdx,rax
  4096c5:	call   4021a0 <Mat_VarSetCell@plt>
  4096ca:	add    rbx,0x8
  4096ce:	mov    r14,r12
  4096d1:	cmp    r12,0x168
  4096d8:	jne    40968c <Mat_VarRead@plt+0x72fc>
  4096da:	vmovaps xmm0,XMMWORD PTR [rip+0x494e]        # 40e030 <getopt_long_only@@Base+0xed0>
  4096e2:	vmovaps XMMWORD PTR [rsp+0xe60],xmm0
  4096eb:	vmovaps xmm0,XMMWORD PTR [rip+0x494d]        # 40e040 <getopt_long_only@@Base+0xee0>
  4096f3:	vmovaps XMMWORD PTR [rsp+0xa60],xmm0
  4096fc:	vmovdqa xmm0,XMMWORD PTR [rip+0x494c]        # 40e050 <getopt_long_only@@Base+0xef0>
  409704:	vmovdqa XMMWORD PTR [rsp+0x1000],xmm0
  40970d:	mov    rdi,r15
  409710:	lea    rsi,[rsp+0xe60]
  409718:	lea    rdx,[rsp+0xa60]
  409720:	lea    rcx,[rsp+0x1000]
  409728:	call   4020a0 <Mat_VarGetCells@plt>
  40972d:	test   rax,rax
  409730:	je     4097e8 <Mat_VarRead@plt+0x7458>
  409736:	mov    r14,rax
  409739:	mov    rdi,QWORD PTR [rax]
  40973c:	mov    esi,0x1
  409741:	call   402270 <Mat_VarPrint@plt>
  409746:	mov    rdi,QWORD PTR [r14+0x8]
  40974a:	mov    esi,0x1
  40974f:	call   402270 <Mat_VarPrint@plt>
  409754:	mov    rdi,QWORD PTR [r14+0x10]
  409758:	mov    esi,0x1
  40975d:	call   402270 <Mat_VarPrint@plt>
  409762:	mov    rdi,QWORD PTR [r14+0x18]
  409766:	mov    esi,0x1
  40976b:	call   402270 <Mat_VarPrint@plt>
  409770:	mov    rdi,QWORD PTR [r14+0x20]
  409774:	mov    esi,0x1
  409779:	call   402270 <Mat_VarPrint@plt>
  40977e:	mov    rdi,QWORD PTR [r14+0x28]
  409782:	mov    esi,0x1
  409787:	call   402270 <Mat_VarPrint@plt>
  40978c:	mov    rdi,QWORD PTR [r14+0x30]
  409790:	mov    esi,0x1
  409795:	call   402270 <Mat_VarPrint@plt>
  40979a:	mov    rdi,QWORD PTR [r14+0x38]
  40979e:	mov    esi,0x1
  4097a3:	call   402270 <Mat_VarPrint@plt>
  4097a8:	mov    rdi,QWORD PTR [r14+0x40]
  4097ac:	mov    esi,0x1
  4097b1:	call   402270 <Mat_VarPrint@plt>
  4097b6:	mov    rdi,QWORD PTR [r14+0x48]
  4097ba:	mov    esi,0x1
  4097bf:	call   402270 <Mat_VarPrint@plt>
  4097c4:	mov    rdi,QWORD PTR [r14+0x50]
  4097c8:	mov    esi,0x1
  4097cd:	call   402270 <Mat_VarPrint@plt>
  4097d2:	mov    rdi,QWORD PTR [r14+0x58]
  4097d6:	mov    esi,0x1
  4097db:	call   402270 <Mat_VarPrint@plt>
  4097e0:	mov    rdi,r14
  4097e3:	call   402050 <free@plt>
  4097e8:	mov    rdi,r15
  4097eb:	jmp    408eaa <Mat_VarRead@plt+0x6b1a>
  4097f0:	mov    rax,QWORD PTR [rip+0xb7f9]        # 414ff0 <getopt_long_only@@Base+0x7e90>
  4097f7:	mov    rdi,QWORD PTR [rax]
  4097fa:	xor    eax,eax
  4097fc:	lea    rsi,[rip+0x8fde]        # 4127e1 <getopt_long_only@@Base+0x5681>
  409803:	mov    rdx,QWORD PTR [rsp+0x28]
  409808:	call   402220 <fprintf@plt>
  40980d:	jmp    407a4e <Mat_VarRead@plt+0x56be>
  409812:	mov    rax,QWORD PTR [rsp+0x58]
  409817:	lea    ebx,[rax+0x1]
  40981a:	mov    eax,DWORD PTR [rsp+0x128]
  409821:	sub    eax,ebx
  409823:	cmp    eax,0x2
  409826:	jg     409912 <Mat_VarRead@plt+0x7582>
  40982c:	xor    eax,eax
  40982e:	lea    rdi,[rip+0x5a3e]        # 40f273 <getopt_long_only@@Base+0x2113>
  409835:	call   4022b0 <Mat_Critical@plt>
  40983a:	add    DWORD PTR [rsp+0x3c],0x1
  40983f:	mov    r15d,ebx
  409842:	jmp    406d71 <Mat_VarRead@plt+0x49e1>
  409847:	mov    rax,QWORD PTR [rip+0xb7a2]        # 414ff0 <getopt_long_only@@Base+0x7e90>
  40984e:	mov    rdi,QWORD PTR [rax]
  409851:	xor    eax,eax
  409853:	lea    rsi,[rip+0x8f87]        # 4127e1 <getopt_long_only@@Base+0x5681>
  40985a:	mov    rdx,QWORD PTR [rsp+0x28]
  40985f:	call   402220 <fprintf@plt>
  409864:	jmp    408047 <Mat_VarRead@plt+0x5cb7>
  409869:	mov    rax,QWORD PTR [rip+0xb780]        # 414ff0 <getopt_long_only@@Base+0x7e90>
  409870:	mov    rcx,QWORD PTR [rax]
  409873:	mov    esi,0x2e
  409878:	mov    edx,0x1
  40987d:	lea    rdi,[rip+0x8fa4]        # 412828 <getopt_long_only@@Base+0x56c8>
  409884:	call   402350 <fwrite@plt>
  409889:	mov    rdi,rbx
  40988c:	call   402240 <Mat_VarFree@plt>
  409891:	mov    eax,0x1
  409896:	add    DWORD PTR [rsp+0x3c],eax
  40989a:	jmp    408eaf <Mat_VarRead@plt+0x6b1f>
  40989f:	mov    rax,QWORD PTR [rsp+0x30]
  4098a4:	mov    rdi,QWORD PTR [rax+r12*8+0x8]
  4098a9:	xor    esi,esi
  4098ab:	call   402080 <Mat_Open@plt>
  4098b0:	test   rax,rax
  4098b3:	je     40a017 <Mat_VarRead@plt+0x7c87>
  4098b9:	mov    rbx,rax
  4098bc:	mov    rax,QWORD PTR [rsp+0x30]
  4098c1:	mov    rsi,QWORD PTR [rax+r12*8+0x10]
  4098c6:	mov    rdi,rbx
  4098c9:	call   402180 <Mat_VarReadInfo@plt>
  4098ce:	test   rax,rax
  4098d1:	je     4098e8 <Mat_VarRead@plt+0x7558>
  4098d3:	mov    r14,rax
  4098d6:	xor    esi,esi
  4098d8:	mov    rdi,rax
  4098db:	call   402270 <Mat_VarPrint@plt>
  4098e0:	mov    rdi,r14
  4098e3:	call   402240 <Mat_VarFree@plt>
  4098e8:	mov    rdi,rbx
  4098eb:	jmp    40bfde <Mat_VarRead@plt+0x9c4e>
  4098f0:	mov    rax,QWORD PTR [rip+0xb6f9]        # 414ff0 <getopt_long_only@@Base+0x7e90>
  4098f7:	mov    rdi,QWORD PTR [rax]
  4098fa:	xor    eax,eax
  4098fc:	lea    rsi,[rip+0x8ede]        # 4127e1 <getopt_long_only@@Base+0x5681>
  409903:	mov    rdx,QWORD PTR [rsp+0x28]
  409908:	call   402220 <fprintf@plt>
  40990d:	jmp    4086e2 <Mat_VarRead@plt+0x6352>
  409912:	cmp    QWORD PTR [rsp+0x28],0x0
  409918:	je     40993e <Mat_VarRead@plt+0x75ae>
  40991a:	mov    rax,QWORD PTR [rip+0xb6b7]        # 414fd8 <getopt_long_only@@Base+0x7e78>
  409921:	mov    rdx,QWORD PTR [rax]
  409924:	mov    rdi,QWORD PTR [rsp+0x28]
  409929:	lea    rsi,[rip+0x8eaf]        # 4127df <getopt_long_only@@Base+0x567f>
  409930:	call   4021c0 <freopen@plt>
  409935:	test   rax,rax
  409938:	je     40a807 <Mat_VarRead@plt+0x8477>
  40993e:	movsxd rax,ebx
  409941:	mov    rcx,QWORD PTR [rsp+0x30]
  409946:	mov    rdi,QWORD PTR [rcx+rax*8]
  40994a:	mov    rbx,QWORD PTR [rcx+r12*8+0x10]
  40994f:	mov    r15,QWORD PTR [rcx+r12*8+0x18]
  409954:	mov    DWORD PTR [rsp+0x1160],0x1
  40995f:	xor    esi,esi
  409961:	call   402080 <Mat_Open@plt>
  409966:	test   rax,rax
  409969:	je     40a021 <Mat_VarRead@plt+0x7c91>
  40996f:	mov    r12,rax
  409972:	mov    rdi,rax
  409975:	mov    rsi,rbx
  409978:	call   402390 <Mat_VarRead@plt>
  40997d:	test   rax,rax
  409980:	je     40a621 <Mat_VarRead@plt+0x8291>
  409986:	mov    r14,rax
  409989:	movsx  eax,BYTE PTR [r15]
  40998d:	add    eax,0xffffffd0
  409990:	cmp    eax,0x9
  409993:	ja     40a628 <Mat_VarRead@plt+0x8298>
  409999:	xor    esi,esi
  40999b:	mov    edx,0xa
  4099a0:	mov    rdi,r15
  4099a3:	call   402230 <strtol@plt>
  4099a8:	mov    DWORD PTR [rsp+0x1160],eax
  4099af:	mov    edx,0x2
  4099b4:	xor    ecx,ecx
  4099b6:	mov    rdi,r14
  4099b9:	lea    rsi,[rsp+0x1160]
  4099c1:	call   402200 <Mat_VarGetStructField@plt>
  4099c6:	test   rax,rax
  4099c9:	jne    40a644 <Mat_VarRead@plt+0x82b4>
  4099cf:	mov    ebx,0x1
  4099d4:	jmp    40a650 <Mat_VarRead@plt+0x82c0>
  4099d9:	mov    rax,QWORD PTR [rsp+0x28]
  4099de:	test   rax,rax
  4099e1:	lea    rcx,[rip+0x58cd]        # 40f2b5 <getopt_long_only@@Base+0x2155>
  4099e8:	cmove  rax,rcx
  4099ec:	mov    QWORD PTR [rsp+0x28],rax
  4099f1:	mov    rax,QWORD PTR [rsp+0x30]
  4099f6:	mov    rdi,QWORD PTR [rax+r12*8+0x8]
  4099fb:	mov    rbx,QWORD PTR [rax+r12*8+0x10]
  409a00:	mov    DWORD PTR [rsp+0x8c8],0x0
  409a0b:	mov    QWORD PTR [rsp+0x8c0],0x0
  409a17:	mov    eax,DWORD PTR [rip+0x4deb]        # 40e808 <getopt_long_only@@Base+0x16a8>
  409a1d:	mov    DWORD PTR [rsp+0x708],eax
  409a24:	mov    rax,QWORD PTR [rip+0x4dd5]        # 40e800 <getopt_long_only@@Base+0x16a0>
  409a2b:	mov    QWORD PTR [rsp+0x700],rax
  409a33:	mov    eax,DWORD PTR [rip+0x4ddb]        # 40e814 <getopt_long_only@@Base+0x16b4>
  409a39:	mov    DWORD PTR [rsp+0x7e8],eax
  409a40:	mov    rax,QWORD PTR [rip+0x4dc5]        # 40e80c <getopt_long_only@@Base+0x16ac>
  409a47:	mov    QWORD PTR [rsp+0x7e0],rax
  409a4f:	xor    esi,esi
  409a51:	call   402080 <Mat_Open@plt>
  409a56:	test   rax,rax
  409a59:	je     40bfe3 <Mat_VarRead@plt+0x9c53>
  409a5f:	mov    r15,rax
  409a62:	mov    rdi,rax
  409a65:	mov    rsi,rbx
  409a68:	call   402180 <Mat_VarReadInfo@plt>
  409a6d:	test   rax,rax
  409a70:	je     40bfdb <Mat_VarRead@plt+0x9c4b>
  409a76:	mov    r12,rax
  409a79:	cmp    DWORD PTR [rax+0x14],0x2
  409a7d:	jne    409aad <Mat_VarRead@plt+0x771d>
  409a7f:	mov    DWORD PTR [rsp+0x1160],0x2
  409a8a:	mov    edx,0x2
  409a8f:	xor    ecx,ecx
  409a91:	mov    rdi,r12
  409a94:	lea    rsi,[rsp+0x1160]
  409a9c:	call   402200 <Mat_VarGetStructField@plt>
  409aa1:	test   rax,rax
  409aa4:	je     40bfdb <Mat_VarRead@plt+0x9c4b>
  409aaa:	mov    r12,rax
  409aad:	mov    rax,QWORD PTR [rsp+0xa8]
  409ab5:	mov    DWORD PTR [r12+0x14],eax
  409aba:	mov    rax,QWORD PTR [r12+0x28]
  409abf:	mov    ecx,DWORD PTR [rax]
  409ac1:	add    ecx,0xffffffff
  409ac4:	mov    DWORD PTR [rsp+0x700],ecx
  409acb:	mov    eax,DWORD PTR [rax+0x8]
  409ace:	add    eax,0xffffffff
  409ad1:	mov    DWORD PTR [rsp+0x704],eax
  409ad8:	cmp    BYTE PTR [rsp+0x27],0x9
  409add:	ja     40bfd3 <Mat_VarRead@plt+0x9c43>
  409ae3:	lea    r14,[r12+0x28]
  409ae8:	movzx  eax,BYTE PTR [rsp+0x27]
  409aed:	lea    rcx,[rip+0x49ec]        # 40e4e0 <getopt_long_only@@Base+0x1380>
  409af4:	movsxd rax,DWORD PTR [rcx+rax*4]
  409af8:	add    rax,rcx
  409afb:	jmp    rax
  409afd:	cmp    DWORD PTR [r12+0x18],0x0
  409b03:	je     40b8a3 <Mat_VarRead@plt+0x9513>
  409b09:	lea    rax,[rsp+0x1cc0]
  409b11:	mov    QWORD PTR [rsp+0x440],rax
  409b19:	lea    rax,[rsp+0x1160]
  409b21:	mov    QWORD PTR [rsp+0x448],rax
  409b29:	mov    rdi,r15
  409b2c:	mov    rsi,r12
  409b2f:	lea    rdx,[rsp+0x440]
  409b37:	lea    rcx,[rsp+0x8c0]
  409b3f:	lea    r8,[rsp+0x700]
  409b47:	lea    r9,[rsp+0x7e0]
  409b4f:	call   402130 <Mat_VarReadData@plt>
  409b54:	vmovsd xmm2,QWORD PTR [rsp+0x1cd0]
  409b5d:	vmovsd xmm3,QWORD PTR [rsp+0x1170]
  409b66:	vmovsd xmm0,QWORD PTR [rsp+0x1cc0]
  409b6f:	vmovsd xmm4,QWORD PTR [rsp+0x1cc8]
  409b78:	vmovsd xmm1,QWORD PTR [rsp+0x1160]
  409b81:	vmovsd xmm5,QWORD PTR [rsp+0x1168]
  409b8a:	vmovsd xmm6,QWORD PTR [rsp+0x1cd8]
  409b93:	vmovsd xmm7,QWORD PTR [rsp+0x1178]
  409b9c:	mov    al,0x8
  409b9e:	lea    rdi,[rip+0x8cb2]        # 412857 <getopt_long_only@@Base+0x56f7>
  409ba5:	call   402160 <printf@plt>
  409baa:	cmp    DWORD PTR [r15+0x20],0x200
  409bb2:	je     409c04 <Mat_VarRead@plt+0x7874>
  409bb4:	mov    rdi,QWORD PTR [r14]
  409bb7:	mov    esi,0x18
  409bbc:	call   4022d0 <realloc@plt>
  409bc1:	test   rax,rax
  409bc4:	je     409c04 <Mat_VarRead@plt+0x7874>
  409bc6:	add    DWORD PTR [r12+0x8],0x1
  409bcc:	mov    QWORD PTR [r12+0x28],rax
  409bd1:	mov    QWORD PTR [rax+0x10],0x1
  409bd9:	mov    rdi,r15
  409bdc:	mov    rsi,r12
  409bdf:	lea    rdx,[rsp+0x440]
  409be7:	lea    rcx,[rsp+0x8c0]
  409bef:	lea    r8,[rsp+0x700]
  409bf7:	lea    r9,[rsp+0x7e0]
  409bff:	call   402130 <Mat_VarReadData@plt>
  409c04:	vmovq  xmm2,QWORD PTR [rsp+0x1cd0]
  409c0d:	vmovq  xmm3,QWORD PTR [rsp+0x1170]
  409c16:	vmovq  xmm0,QWORD PTR [rsp+0x1cc0]
  409c1f:	vmovsd xmm4,QWORD PTR [rsp+0x1cc8]
  409c28:	vmovq  xmm1,QWORD PTR [rsp+0x1160]
  409c31:	vmovq  xmm5,QWORD PTR [rsp+0x1168]
  409c3a:	vmovq  xmm6,QWORD PTR [rsp+0x1cd8]
  409c43:	vmovq  xmm7,QWORD PTR [rsp+0x1178]
  409c4c:	jmp    40ab14 <Mat_VarRead@plt+0x8784>
  409c51:	mov    rax,QWORD PTR [rip+0xb398]        # 414ff0 <getopt_long_only@@Base+0x7e90>
  409c58:	mov    rdi,QWORD PTR [rax]
  409c5b:	xor    eax,eax
  409c5d:	lea    rsi,[rip+0x8b7d]        # 4127e1 <getopt_long_only@@Base+0x5681>
  409c64:	mov    rdx,QWORD PTR [rsp+0x28]
  409c69:	call   402220 <fprintf@plt>
  409c6e:	jmp    408932 <Mat_VarRead@plt+0x65a2>
  409c73:	mov    rdi,QWORD PTR [rsp+0x28]
  409c78:	test   rdi,rdi
  409c7b:	lea    rax,[rip+0x563b]        # 40f2bd <getopt_long_only@@Base+0x215d>
  409c82:	cmove  rdi,rax
  409c86:	vmovaps xmm0,XMMWORD PTR [rip+0x4552]        # 40e1e0 <getopt_long_only@@Base+0x1080>
  409c8e:	vmovaps XMMWORD PTR [rsp+0x40],xmm0
  409c94:	mov    eax,DWORD PTR [rip+0x4be6]        # 40e880 <getopt_long_only@@Base+0x1720>
  409c9a:	vmovups ymm0,YMMWORD PTR [rip+0x4bbe]        # 40e860 <getopt_long_only@@Base+0x1700>
  409ca2:	vmovaps YMMWORD PTR [rsp+0x380],ymm0
  409cab:	vmovups ymm0,YMMWORD PTR [rip+0x4b8d]        # 40e840 <getopt_long_only@@Base+0x16e0>
  409cb3:	vmovaps YMMWORD PTR [rsp+0x360],ymm0
  409cbc:	vmovups ymm0,YMMWORD PTR [rip+0x4b5c]        # 40e820 <getopt_long_only@@Base+0x16c0>
  409cc4:	vmovaps YMMWORD PTR [rsp+0x340],ymm0
  409ccd:	vmovups ymm0,YMMWORD PTR [rip+0x4bc7]        # 40e89c <getopt_long_only@@Base+0x173c>
  409cd5:	vmovups YMMWORD PTR [rsp+0x2ec],ymm0
  409cde:	vmovups ymm0,YMMWORD PTR [rip+0x4baa]        # 40e890 <getopt_long_only@@Base+0x1730>
  409ce6:	vmovaps YMMWORD PTR [rsp+0x2e0],ymm0
  409cef:	mov    DWORD PTR [rsp+0x3a0],eax
  409cf6:	vxorps xmm0,xmm0,xmm0
  409cfa:	vmovaps XMMWORD PTR [rsp+0x1160],xmm0
  409d03:	mov    QWORD PTR [rsp+0x1170],0x0
  409d0f:	mov    rax,QWORD PTR [rip+0x4c6a]        # 40e980 <getopt_long_only@@Base+0x1820>
  409d16:	mov    QWORD PTR [rsp+0xb20],rax
  409d1e:	vmovups ymm0,YMMWORD PTR [rip+0x4c3a]        # 40e960 <getopt_long_only@@Base+0x1800>
  409d26:	vmovaps YMMWORD PTR [rsp+0xb00],ymm0
  409d2f:	vmovups ymm0,YMMWORD PTR [rip+0x4c09]        # 40e940 <getopt_long_only@@Base+0x17e0>
  409d37:	vmovaps YMMWORD PTR [rsp+0xae0],ymm0
  409d40:	vmovups ymm0,YMMWORD PTR [rip+0x4bd8]        # 40e920 <getopt_long_only@@Base+0x17c0>
  409d48:	vmovaps YMMWORD PTR [rsp+0xac0],ymm0
  409d51:	vmovups ymm0,YMMWORD PTR [rip+0x4ba7]        # 40e900 <getopt_long_only@@Base+0x17a0>
  409d59:	vmovaps YMMWORD PTR [rsp+0xaa0],ymm0
  409d62:	vmovups ymm0,YMMWORD PTR [rip+0x4b76]        # 40e8e0 <getopt_long_only@@Base+0x1780>
  409d6a:	vmovaps YMMWORD PTR [rsp+0xa80],ymm0
  409d73:	vmovups ymm0,YMMWORD PTR [rip+0x4b45]        # 40e8c0 <getopt_long_only@@Base+0x1760>
  409d7b:	vmovaps YMMWORD PTR [rsp+0xa60],ymm0
  409d84:	mov    eax,DWORD PTR [rip+0x4d36]        # 40eac0 <getopt_long_only@@Base+0x1960>
  409d8a:	mov    DWORD PTR [rsp+0xc60],eax
  409d91:	vmovups ymm0,YMMWORD PTR [rip+0x4d07]        # 40eaa0 <getopt_long_only@@Base+0x1940>
  409d99:	vmovaps YMMWORD PTR [rsp+0xc40],ymm0
  409da2:	vmovups ymm0,YMMWORD PTR [rip+0x4cd6]        # 40ea80 <getopt_long_only@@Base+0x1920>
  409daa:	vmovaps YMMWORD PTR [rsp+0xc20],ymm0
  409db3:	vmovups ymm0,YMMWORD PTR [rip+0x4ca5]        # 40ea60 <getopt_long_only@@Base+0x1900>
  409dbb:	vmovaps YMMWORD PTR [rsp+0xc00],ymm0
  409dc4:	vmovups ymm0,YMMWORD PTR [rip+0x4db4]        # 40eb80 <getopt_long_only@@Base+0x1a20>
  409dcc:	vmovaps YMMWORD PTR [rsp+0xd40],ymm0
  409dd5:	vmovups ymm1,YMMWORD PTR [rip+0x4d83]        # 40eb60 <getopt_long_only@@Base+0x1a00>
  409ddd:	vmovaps YMMWORD PTR [rsp+0xd20],ymm1
  409de6:	vmovups ymm2,YMMWORD PTR [rip+0x4d52]        # 40eb40 <getopt_long_only@@Base+0x19e0>
  409dee:	vmovaps YMMWORD PTR [rsp+0xd00],ymm2
  409df7:	vmovaps YMMWORD PTR [rsp+0x660],ymm0
  409e00:	vmovaps YMMWORD PTR [rsp+0x640],ymm1
  409e09:	mov    eax,DWORD PTR [rip+0x4d91]        # 40eba0 <getopt_long_only@@Base+0x1a40>
  409e0f:	vmovaps YMMWORD PTR [rsp+0x620],ymm2
  409e18:	vmovups ymm0,YMMWORD PTR [rip+0x4e12]        # 40ec32 <getopt_long_only@@Base+0x1ad2>
  409e20:	vmovups YMMWORD PTR [rsp+0x72],ymm0
  409e26:	mov    DWORD PTR [rsp+0xd60],eax
  409e2d:	vmovups ymm1,YMMWORD PTR [rip+0x4deb]        # 40ec20 <getopt_long_only@@Base+0x1ac0>
  409e35:	vmovaps YMMWORD PTR [rsp+0x60],ymm1
  409e3b:	vmovups YMMWORD PTR [rsp+0x272],ymm0
  409e44:	vmovaps YMMWORD PTR [rsp+0x260],ymm1
  409e4d:	vmovups xmm0,XMMWORD PTR [rip+0x4e54]        # 40eca9 <getopt_long_only@@Base+0x1b49>
  409e55:	vmovups XMMWORD PTR [rsp+0x1a9],xmm0
  409e5e:	vmovaps xmm1,XMMWORD PTR [rip+0x4e3a]        # 40eca0 <getopt_long_only@@Base+0x1b40>
  409e66:	vmovaps XMMWORD PTR [rsp+0x1a0],xmm1
  409e6f:	vmovups XMMWORD PTR [rsp+0xc9],xmm0
  409e78:	vmovaps XMMWORD PTR [rsp+0xc0],xmm1
  409e81:	mov    DWORD PTR [rsp+0x680],eax
  409e88:	mov    rax,QWORD PTR [rip+0x4f11]        # 40eda0 <getopt_long_only@@Base+0x1c40>
  409e8f:	mov    QWORD PTR [rsp+0x980],rax
  409e97:	vmovdqu ymm0,YMMWORD PTR [rip+0x4ee1]        # 40ed80 <getopt_long_only@@Base+0x1c20>
  409e9f:	vmovdqa YMMWORD PTR [rsp+0x960],ymm0
  409ea8:	vmovdqu ymm1,YMMWORD PTR [rip+0x4eb0]        # 40ed60 <getopt_long_only@@Base+0x1c00>
  409eb0:	vmovdqa YMMWORD PTR [rsp+0x940],ymm1
  409eb9:	vmovdqu ymm2,YMMWORD PTR [rip+0x4e7f]        # 40ed40 <getopt_long_only@@Base+0x1be0>
  409ec1:	vmovdqa YMMWORD PTR [rsp+0x920],ymm2
  409eca:	vmovdqu ymm3,YMMWORD PTR [rip+0x4e4e]        # 40ed20 <getopt_long_only@@Base+0x1bc0>
  409ed2:	vmovdqa YMMWORD PTR [rsp+0x900],ymm3
  409edb:	vmovups ymm4,YMMWORD PTR [rip+0x4e1d]        # 40ed00 <getopt_long_only@@Base+0x1ba0>
  409ee3:	vmovaps YMMWORD PTR [rsp+0x8e0],ymm4
  409eec:	vmovdqu ymm5,YMMWORD PTR [rip+0x4dec]        # 40ece0 <getopt_long_only@@Base+0x1b80>
  409ef4:	vmovdqa YMMWORD PTR [rsp+0x8c0],ymm5
  409efd:	mov    QWORD PTR [rsp+0xf20],rax
  409f05:	vmovdqa YMMWORD PTR [rsp+0xf00],ymm0
  409f0e:	vmovdqa YMMWORD PTR [rsp+0xee0],ymm1
  409f17:	vmovdqa YMMWORD PTR [rsp+0xec0],ymm2
  409f20:	vmovdqa YMMWORD PTR [rsp+0xea0],ymm3
  409f29:	vmovaps YMMWORD PTR [rsp+0xe80],ymm4
  409f32:	vmovdqa YMMWORD PTR [rsp+0xe60],ymm5
  409f3b:	mov    DWORD PTR [rsp+0x1160],0x19
  409f46:	mov    DWORD PTR [rsp+0x1170],0x19
  409f51:	lea    rax,[rsp+0x340]
  409f59:	mov    QWORD PTR [rsp+0x1168],rax
  409f61:	mov    DWORD PTR [rsp+0x1180],0xb
  409f6c:	lea    rax,[rsp+0x2e0]
  409f74:	mov    QWORD PTR [rsp+0x1178],rax
  409f7c:	mov    DWORD PTR [rsp+0x1184],0x19
  409f87:	mov    QWORD PTR [rsp+0x1188],0x0
  409f93:	mov    edx,DWORD PTR [rip+0xb387]        # 415320 <getopt_long_only@@Base+0x81c0>
  409f99:	xor    esi,esi
  409f9b:	mov    QWORD PTR [rsp+0x28],rdi
  409fa0:	vzeroupper 
  409fa3:	call   402310 <Mat_CreateVer@plt>
  409fa8:	test   rax,rax
  409fab:	je     40a616 <Mat_VarRead@plt+0x8286>
  409fb1:	mov    r14,rax
  409fb4:	mov    r12d,0x1
  409fba:	cmp    BYTE PTR [rsp+0x27],0x9
  409fbf:	ja     40b888 <Mat_VarRead@plt+0x94f8>
  409fc5:	movzx  eax,BYTE PTR [rsp+0x27]
  409fca:	lea    rcx,[rip+0x44e7]        # 40e4b8 <getopt_long_only@@Base+0x1358>
  409fd1:	movsxd rax,DWORD PTR [rcx+rax*4]
  409fd5:	add    rax,rcx
  409fd8:	jmp    rax
  409fda:	lea    rax,[rsp+0xa60]
  409fe2:	mov    QWORD PTR [rsp+0x1188],rax
  409fea:	mov    r15d,0x9
  409ff0:	jmp    40a905 <Mat_VarRead@plt+0x8575>
  409ff5:	mov    rax,QWORD PTR [rip+0xaff4]        # 414ff0 <getopt_long_only@@Base+0x7e90>
  409ffc:	mov    rdi,QWORD PTR [rax]
  409fff:	xor    eax,eax
  40a001:	lea    rsi,[rip+0x87d9]        # 4127e1 <getopt_long_only@@Base+0x5681>
  40a008:	mov    rdx,QWORD PTR [rsp+0x28]
  40a00d:	call   402220 <fprintf@plt>
  40a012:	jmp    408caf <Mat_VarRead@plt+0x691f>
  40a017:	add    DWORD PTR [rsp+0x3c],0x1
  40a01c:	jmp    40bfe3 <Mat_VarRead@plt+0x9c53>
  40a021:	mov    ebx,0x1
  40a026:	jmp    40a660 <Mat_VarRead@plt+0x82d0>
  40a02b:	mov    rdi,QWORD PTR [rsp+0x28]
  40a030:	test   rdi,rdi
  40a033:	lea    rax,[rip+0x5299]        # 40f2d3 <getopt_long_only@@Base+0x2173>
  40a03a:	cmove  rdi,rax
  40a03e:	vmovaps xmm0,XMMWORD PTR [rip+0x419a]        # 40e1e0 <getopt_long_only@@Base+0x1080>
  40a046:	vmovaps XMMWORD PTR [rsp+0x40],xmm0
  40a04c:	vmovups ymm0,YMMWORD PTR [rip+0x480c]        # 40e860 <getopt_long_only@@Base+0x1700>
  40a054:	vmovaps YMMWORD PTR [rsp+0x380],ymm0
  40a05d:	vmovups ymm0,YMMWORD PTR [rip+0x47db]        # 40e840 <getopt_long_only@@Base+0x16e0>
  40a065:	vmovaps YMMWORD PTR [rsp+0x360],ymm0
  40a06e:	vmovups ymm0,YMMWORD PTR [rip+0x47aa]        # 40e820 <getopt_long_only@@Base+0x16c0>
  40a076:	vmovaps YMMWORD PTR [rsp+0x340],ymm0
  40a07f:	vmovups ymm0,YMMWORD PTR [rip+0x4815]        # 40e89c <getopt_long_only@@Base+0x173c>
  40a087:	vmovups YMMWORD PTR [rsp+0x2ec],ymm0
  40a090:	mov    eax,DWORD PTR [rip+0x47ea]        # 40e880 <getopt_long_only@@Base+0x1720>
  40a096:	vmovups ymm0,YMMWORD PTR [rip+0x47f2]        # 40e890 <getopt_long_only@@Base+0x1730>
  40a09e:	vmovaps YMMWORD PTR [rsp+0x2e0],ymm0
  40a0a7:	vxorps xmm0,xmm0,xmm0
  40a0ab:	vmovaps XMMWORD PTR [rsp+0x220],xmm0
  40a0b4:	mov    DWORD PTR [rsp+0x3a0],eax
  40a0bb:	mov    QWORD PTR [rsp+0x230],0x0
  40a0c7:	vmovaps XMMWORD PTR [rsp+0x130],xmm0
  40a0d0:	mov    rax,QWORD PTR [rip+0x48a9]        # 40e980 <getopt_long_only@@Base+0x1820>
  40a0d7:	mov    QWORD PTR [rsp+0xb20],rax
  40a0df:	vmovups ymm0,YMMWORD PTR [rip+0x4879]        # 40e960 <getopt_long_only@@Base+0x1800>
  40a0e7:	vmovaps YMMWORD PTR [rsp+0xb00],ymm0
  40a0f0:	vmovups ymm0,YMMWORD PTR [rip+0x4848]        # 40e940 <getopt_long_only@@Base+0x17e0>
  40a0f8:	vmovaps YMMWORD PTR [rsp+0xae0],ymm0
  40a101:	vmovups ymm0,YMMWORD PTR [rip+0x4817]        # 40e920 <getopt_long_only@@Base+0x17c0>
  40a109:	vmovaps YMMWORD PTR [rsp+0xac0],ymm0
  40a112:	vmovups ymm0,YMMWORD PTR [rip+0x47e6]        # 40e900 <getopt_long_only@@Base+0x17a0>
  40a11a:	vmovaps YMMWORD PTR [rsp+0xaa0],ymm0
  40a123:	vmovups ymm0,YMMWORD PTR [rip+0x47b5]        # 40e8e0 <getopt_long_only@@Base+0x1780>
  40a12b:	vmovaps YMMWORD PTR [rsp+0xa80],ymm0
  40a134:	vmovups ymm0,YMMWORD PTR [rip+0x4784]        # 40e8c0 <getopt_long_only@@Base+0x1760>
  40a13c:	vmovaps YMMWORD PTR [rsp+0xa60],ymm0
  40a145:	mov    rax,QWORD PTR [rip+0x4904]        # 40ea50 <getopt_long_only@@Base+0x18f0>
  40a14c:	mov    QWORD PTR [rsp+0x1220],rax
  40a154:	vmovups ymm0,YMMWORD PTR [rip+0x48d4]        # 40ea30 <getopt_long_only@@Base+0x18d0>
  40a15c:	vmovaps YMMWORD PTR [rsp+0x1200],ymm0
  40a165:	vmovups ymm0,YMMWORD PTR [rip+0x48a3]        # 40ea10 <getopt_long_only@@Base+0x18b0>
  40a16d:	vmovaps YMMWORD PTR [rsp+0x11e0],ymm0
  40a176:	vmovups ymm0,YMMWORD PTR [rip+0x4872]        # 40e9f0 <getopt_long_only@@Base+0x1890>
  40a17e:	vmovaps YMMWORD PTR [rsp+0x11c0],ymm0
  40a187:	vmovups ymm0,YMMWORD PTR [rip+0x4841]        # 40e9d0 <getopt_long_only@@Base+0x1870>
  40a18f:	vmovaps YMMWORD PTR [rsp+0x11a0],ymm0
  40a198:	vmovups ymm0,YMMWORD PTR [rip+0x4810]        # 40e9b0 <getopt_long_only@@Base+0x1850>
  40a1a0:	vmovaps YMMWORD PTR [rsp+0x1180],ymm0
  40a1a9:	vmovups ymm0,YMMWORD PTR [rip+0x47df]        # 40e990 <getopt_long_only@@Base+0x1830>
  40a1b1:	vmovaps YMMWORD PTR [rsp+0x1160],ymm0
  40a1ba:	mov    eax,DWORD PTR [rip+0x4900]        # 40eac0 <getopt_long_only@@Base+0x1960>
  40a1c0:	vmovups ymm0,YMMWORD PTR [rip+0x48d8]        # 40eaa0 <getopt_long_only@@Base+0x1940>
  40a1c8:	vmovaps YMMWORD PTR [rsp+0xc40],ymm0
  40a1d1:	vmovups ymm0,YMMWORD PTR [rip+0x48a7]        # 40ea80 <getopt_long_only@@Base+0x1920>
  40a1d9:	vmovaps YMMWORD PTR [rsp+0xc20],ymm0
  40a1e2:	vmovups ymm0,YMMWORD PTR [rip+0x4876]        # 40ea60 <getopt_long_only@@Base+0x1900>
  40a1ea:	vmovaps YMMWORD PTR [rsp+0xc00],ymm0
  40a1f3:	mov    DWORD PTR [rsp+0xc60],eax
  40a1fa:	mov    eax,DWORD PTR [rip+0x4930]        # 40eb30 <getopt_long_only@@Base+0x19d0>
  40a200:	mov    DWORD PTR [rsp+0x1060],eax
  40a207:	vmovups ymm0,YMMWORD PTR [rip+0x4901]        # 40eb10 <getopt_long_only@@Base+0x19b0>
  40a20f:	vmovaps YMMWORD PTR [rsp+0x1040],ymm0
  40a218:	vmovups ymm0,YMMWORD PTR [rip+0x48d0]        # 40eaf0 <getopt_long_only@@Base+0x1990>
  40a220:	vmovaps YMMWORD PTR [rsp+0x1020],ymm0
  40a229:	vmovups ymm0,YMMWORD PTR [rip+0x489f]        # 40ead0 <getopt_long_only@@Base+0x1970>
  40a231:	vmovaps YMMWORD PTR [rsp+0x1000],ymm0
  40a23a:	mov    eax,DWORD PTR [rip+0x4960]        # 40eba0 <getopt_long_only@@Base+0x1a40>
  40a240:	mov    DWORD PTR [rsp+0xd60],eax
  40a247:	vmovups ymm0,YMMWORD PTR [rip+0x4931]        # 40eb80 <getopt_long_only@@Base+0x1a20>
  40a24f:	vmovaps YMMWORD PTR [rsp+0xd40],ymm0
  40a258:	vmovups ymm1,YMMWORD PTR [rip+0x4900]        # 40eb60 <getopt_long_only@@Base+0x1a00>
  40a260:	vmovaps YMMWORD PTR [rsp+0xd20],ymm1
  40a269:	vmovups ymm2,YMMWORD PTR [rip+0x48cf]        # 40eb40 <getopt_long_only@@Base+0x19e0>
  40a271:	vmovaps YMMWORD PTR [rsp+0xd00],ymm2
  40a27a:	mov    ecx,DWORD PTR [rip+0x4990]        # 40ec10 <getopt_long_only@@Base+0x1ab0>
  40a280:	vmovups ymm3,YMMWORD PTR [rip+0x4968]        # 40ebf0 <getopt_long_only@@Base+0x1a90>
  40a288:	vmovaps YMMWORD PTR [rsp+0x660],ymm3
  40a291:	vmovups ymm4,YMMWORD PTR [rip+0x4937]        # 40ebd0 <getopt_long_only@@Base+0x1a70>
  40a299:	vmovaps YMMWORD PTR [rsp+0x640],ymm4
  40a2a2:	mov    DWORD PTR [rsp+0x680],ecx
  40a2a9:	vmovups ymm5,YMMWORD PTR [rip+0x48ff]        # 40ebb0 <getopt_long_only@@Base+0x1a50>
  40a2b1:	vmovaps YMMWORD PTR [rsp+0x620],ymm5
  40a2ba:	vmovaps YMMWORD PTR [rsp+0x740],ymm0
  40a2c3:	mov    DWORD PTR [rsp+0x760],eax
  40a2ca:	vmovaps YMMWORD PTR [rsp+0x720],ymm1
  40a2d3:	vmovaps YMMWORD PTR [rsp+0x700],ymm2
  40a2dc:	mov    DWORD PTR [rsp+0x840],ecx
  40a2e3:	vmovaps YMMWORD PTR [rsp+0x820],ymm3
  40a2ec:	vmovaps YMMWORD PTR [rsp+0x800],ymm4
  40a2f5:	vmovaps YMMWORD PTR [rsp+0x7e0],ymm5
  40a2fe:	vmovups ymm0,YMMWORD PTR [rip+0x492c]        # 40ec32 <getopt_long_only@@Base+0x1ad2>
  40a306:	vmovups YMMWORD PTR [rsp+0x72],ymm0
  40a30c:	vmovups ymm1,YMMWORD PTR [rip+0x490c]        # 40ec20 <getopt_long_only@@Base+0x1ac0>
  40a314:	vmovaps YMMWORD PTR [rsp+0x60],ymm1
  40a31a:	vmovups ymm2,YMMWORD PTR [rip+0x4950]        # 40ec72 <getopt_long_only@@Base+0x1b12>
  40a322:	vmovups YMMWORD PTR [rsp+0x272],ymm2
  40a32b:	vmovups ymm3,YMMWORD PTR [rip+0x492d]        # 40ec60 <getopt_long_only@@Base+0x1b00>
  40a333:	vmovaps YMMWORD PTR [rsp+0x260],ymm3
  40a33c:	vmovups YMMWORD PTR [rsp+0xdf2],ymm0
  40a345:	vmovaps YMMWORD PTR [rsp+0xde0],ymm1
  40a34e:	vmovups YMMWORD PTR [rsp+0x3d2],ymm2
  40a357:	vmovaps YMMWORD PTR [rsp+0x3c0],ymm3
  40a360:	vmovups xmm0,XMMWORD PTR [rip+0x4941]        # 40eca9 <getopt_long_only@@Base+0x1b49>
  40a368:	vmovups XMMWORD PTR [rsp+0x1a9],xmm0
  40a371:	vmovaps xmm1,XMMWORD PTR [rip+0x4927]        # 40eca0 <getopt_long_only@@Base+0x1b40>
  40a379:	vmovaps XMMWORD PTR [rsp+0x1a0],xmm1
  40a382:	vmovups xmm2,XMMWORD PTR [rip+0x493f]        # 40ecc9 <getopt_long_only@@Base+0x1b69>
  40a38a:	vmovups XMMWORD PTR [rsp+0xc9],xmm2
  40a393:	vmovaps xmm3,XMMWORD PTR [rip+0x4925]        # 40ecc0 <getopt_long_only@@Base+0x1b60>
  40a39b:	vmovaps XMMWORD PTR [rsp+0xc0],xmm3
  40a3a4:	vmovups XMMWORD PTR [rsp+0x1c9],xmm0
  40a3ad:	vmovaps XMMWORD PTR [rsp+0x1c0],xmm1
  40a3b6:	vmovups XMMWORD PTR [rsp+0x159],xmm2
  40a3bf:	vmovaps XMMWORD PTR [rsp+0x150],xmm3
  40a3c8:	mov    rax,QWORD PTR [rip+0x49d1]        # 40eda0 <getopt_long_only@@Base+0x1c40>
  40a3cf:	mov    QWORD PTR [rsp+0x980],rax
  40a3d7:	vmovdqu ymm0,YMMWORD PTR [rip+0x49a1]        # 40ed80 <getopt_long_only@@Base+0x1c20>
  40a3df:	vmovdqa YMMWORD PTR [rsp+0x960],ymm0
  40a3e8:	vmovdqu ymm1,YMMWORD PTR [rip+0x4970]        # 40ed60 <getopt_long_only@@Base+0x1c00>
  40a3f0:	vmovdqa YMMWORD PTR [rsp+0x940],ymm1
  40a3f9:	vmovdqu ymm2,YMMWORD PTR [rip+0x493f]        # 40ed40 <getopt_long_only@@Base+0x1be0>
  40a401:	vmovdqa YMMWORD PTR [rsp+0x920],ymm2
  40a40a:	vmovdqu ymm3,YMMWORD PTR [rip+0x490e]        # 40ed20 <getopt_long_only@@Base+0x1bc0>
  40a412:	vmovdqa YMMWORD PTR [rsp+0x900],ymm3
  40a41b:	vmovups ymm4,YMMWORD PTR [rip+0x48dd]        # 40ed00 <getopt_long_only@@Base+0x1ba0>
  40a423:	vmovaps YMMWORD PTR [rsp+0x8e0],ymm4
  40a42c:	vmovdqu ymm5,YMMWORD PTR [rip+0x48ac]        # 40ece0 <getopt_long_only@@Base+0x1b80>
  40a434:	vmovdqa YMMWORD PTR [rsp+0x8c0],ymm5
  40a43d:	mov    rcx,QWORD PTR [rip+0x4a2c]        # 40ee70 <getopt_long_only@@Base+0x1d10>
  40a444:	mov    QWORD PTR [rsp+0xf20],rcx
  40a44c:	vmovdqu ymm6,YMMWORD PTR [rip+0x49fc]        # 40ee50 <getopt_long_only@@Base+0x1cf0>
  40a454:	vmovdqa YMMWORD PTR [rsp+0xf00],ymm6
  40a45d:	vmovdqu ymm7,YMMWORD PTR [rip+0x49cb]        # 40ee30 <getopt_long_only@@Base+0x1cd0>
  40a465:	vmovdqa YMMWORD PTR [rsp+0xee0],ymm7
  40a46e:	vmovdqu ymm8,YMMWORD PTR [rip+0x499a]        # 40ee10 <getopt_long_only@@Base+0x1cb0>
  40a476:	vmovdqa YMMWORD PTR [rsp+0xec0],ymm8
  40a47f:	vmovdqu ymm9,YMMWORD PTR [rip+0x4969]        # 40edf0 <getopt_long_only@@Base+0x1c90>
  40a487:	vmovdqa YMMWORD PTR [rsp+0xea0],ymm9
  40a490:	vmovdqu ymm10,YMMWORD PTR [rip+0x4938]        # 40edd0 <getopt_long_only@@Base+0x1c70>
  40a498:	vmovdqa YMMWORD PTR [rsp+0xe80],ymm10
  40a4a1:	vmovdqu ymm11,YMMWORD PTR [rip+0x4907]        # 40edb0 <getopt_long_only@@Base+0x1c50>
  40a4a9:	vmovdqa YMMWORD PTR [rsp+0xe60],ymm11
  40a4b2:	vmovdqa YMMWORD PTR [rsp+0x1d60],ymm0
  40a4bb:	vmovdqa YMMWORD PTR [rsp+0x1d40],ymm1
  40a4c4:	vmovdqa YMMWORD PTR [rsp+0x1d20],ymm2
  40a4cd:	vmovdqa YMMWORD PTR [rsp+0x1d00],ymm3
  40a4d6:	vmovaps YMMWORD PTR [rsp+0x1ce0],ymm4
  40a4df:	mov    QWORD PTR [rsp+0x1d80],rax
  40a4e7:	vmovdqa YMMWORD PTR [rsp+0x1cc0],ymm5
  40a4f0:	mov    QWORD PTR [rsp+0x500],rcx
  40a4f8:	vmovdqa YMMWORD PTR [rsp+0x4e0],ymm6
  40a501:	vmovdqa YMMWORD PTR [rsp+0x4c0],ymm7
  40a50a:	vmovdqa YMMWORD PTR [rsp+0x4a0],ymm8
  40a513:	vmovdqa YMMWORD PTR [rsp+0x480],ymm9
  40a51c:	vmovdqa YMMWORD PTR [rsp+0x460],ymm10
  40a525:	vmovdqa YMMWORD PTR [rsp+0x440],ymm11
  40a52e:	mov    DWORD PTR [rsp+0x220],0x19
  40a539:	mov    DWORD PTR [rsp+0x230],0x19
  40a544:	lea    rax,[rsp+0x340]
  40a54c:	mov    QWORD PTR [rsp+0x228],rax
  40a554:	mov    DWORD PTR [rsp+0x240],0xb
  40a55f:	lea    rax,[rsp+0x2e0]
  40a567:	mov    QWORD PTR [rsp+0x238],rax
  40a56f:	mov    DWORD PTR [rsp+0x244],0x19
  40a57a:	mov    QWORD PTR [rsp+0x248],0x0
  40a586:	mov    edx,DWORD PTR [rip+0xad94]        # 415320 <getopt_long_only@@Base+0x81c0>
  40a58c:	xor    esi,esi
  40a58e:	mov    QWORD PTR [rsp+0x28],rdi
  40a593:	vzeroupper 
  40a596:	call   402310 <Mat_CreateVer@plt>
  40a59b:	test   rax,rax
  40a59e:	je     40a616 <Mat_VarRead@plt+0x8286>
  40a5a0:	mov    r14,rax
  40a5a3:	mov    r12d,0x1
  40a5a9:	cmp    BYTE PTR [rsp+0x27],0x9
  40a5ae:	ja     40b888 <Mat_VarRead@plt+0x94f8>
  40a5b4:	movzx  eax,BYTE PTR [rsp+0x27]
  40a5b9:	lea    rcx,[rip+0x3ed0]        # 40e490 <getopt_long_only@@Base+0x1330>
  40a5c0:	movsxd rax,DWORD PTR [rcx+rax*4]
  40a5c4:	add    rax,rcx
  40a5c7:	jmp    rax
  40a5c9:	lea    rax,[rsp+0xa60]
  40a5d1:	mov    QWORD PTR [rsp+0x130],rax
  40a5d9:	lea    rax,[rsp+0x1160]
  40a5e1:	mov    QWORD PTR [rsp+0x138],rax
  40a5e9:	mov    r15d,0x9
  40a5ef:	jmp    40b7dd <Mat_VarRead@plt+0x944d>
  40a5f4:	mov    rax,QWORD PTR [rip+0xa9f5]        # 414ff0 <getopt_long_only@@Base+0x7e90>
  40a5fb:	mov    rdi,QWORD PTR [rax]
  40a5fe:	xor    eax,eax
  40a600:	lea    rsi,[rip+0x81da]        # 4127e1 <getopt_long_only@@Base+0x5681>
  40a607:	mov    rdx,QWORD PTR [rsp+0x28]
  40a60c:	call   402220 <fprintf@plt>
  40a611:	jmp    408f00 <Mat_VarRead@plt+0x6b70>
  40a616:	mov    r12d,0x1
  40a61c:	jmp    40b890 <Mat_VarRead@plt+0x9500>
  40a621:	mov    ebx,0x1
  40a626:	jmp    40a658 <Mat_VarRead@plt+0x82c8>
  40a628:	mov    ebx,0x1
  40a62d:	mov    edx,0x1
  40a632:	xor    ecx,ecx
  40a634:	mov    rdi,r14
  40a637:	mov    rsi,r15
  40a63a:	call   402200 <Mat_VarGetStructField@plt>
  40a63f:	test   rax,rax
  40a642:	je     40a650 <Mat_VarRead@plt+0x82c0>
  40a644:	xor    ebx,ebx
  40a646:	xor    esi,esi
  40a648:	mov    rdi,rax
  40a64b:	call   402270 <Mat_VarPrint@plt>
  40a650:	mov    rdi,r14
  40a653:	call   402240 <Mat_VarFree@plt>
  40a658:	mov    rdi,r12
  40a65b:	call   4022a0 <Mat_Close@plt>
  40a660:	add    DWORD PTR [rsp+0x3c],ebx
  40a664:	mov    r15,QWORD PTR [rsp+0x58]
  40a669:	add    r15d,0x4
  40a66d:	jmp    406d71 <Mat_VarRead@plt+0x49e1>
  40a672:	mov    rax,QWORD PTR [rip+0x3fe7]        # 40e660 <getopt_long_only@@Base+0x1500>
  40a679:	mov    QWORD PTR [rsp+0x1170],rax
  40a681:	vmovdqa xmm0,XMMWORD PTR [rip+0x3fc7]        # 40e650 <getopt_long_only@@Base+0x14f0>
  40a689:	vmovdqa XMMWORD PTR [rsp+0x1160],xmm0
  40a692:	cmp    QWORD PTR [rsp+0x28],0x0
  40a698:	je     40a6be <Mat_VarRead@plt+0x832e>
  40a69a:	mov    rax,QWORD PTR [rip+0xa937]        # 414fd8 <getopt_long_only@@Base+0x7e78>
  40a6a1:	mov    rdx,QWORD PTR [rax]
  40a6a4:	mov    rdi,QWORD PTR [rsp+0x28]
  40a6a9:	lea    rsi,[rip+0x812f]        # 4127df <getopt_long_only@@Base+0x567f>
  40a6b0:	call   4021c0 <freopen@plt>
  40a6b5:	test   rax,rax
  40a6b8:	je     40c1bd <Mat_VarRead@plt+0x9e2d>
  40a6be:	mov    edi,0x3
  40a6c3:	mov    edx,0x49e8
  40a6c8:	lea    rsi,[rsp+0x1160]
  40a6d0:	call   4021d0 <Mat_CalcSubscripts2@plt>
  40a6d5:	mov    rbx,rax
  40a6d8:	mov    rsi,QWORD PTR [rax]
  40a6db:	mov    rdx,QWORD PTR [rax+0x8]
  40a6df:	mov    rcx,QWORD PTR [rax+0x10]
  40a6e3:	xor    eax,eax
  40a6e5:	lea    rdi,[rip+0x4c05]        # 40f2f1 <getopt_long_only@@Base+0x2191>
  40a6ec:	call   402110 <Mat_Message@plt>
  40a6f1:	mov    rdi,rbx
  40a6f4:	call   402050 <free@plt>
  40a6f9:	jmp    408c75 <Mat_VarRead@plt+0x68e5>
  40a6fe:	mov    rax,QWORD PTR [rip+0xa8eb]        # 414ff0 <getopt_long_only@@Base+0x7e90>
  40a705:	mov    rdi,QWORD PTR [rax]
  40a708:	xor    eax,eax
  40a70a:	lea    rsi,[rip+0x80d0]        # 4127e1 <getopt_long_only@@Base+0x5681>
  40a711:	mov    rdx,QWORD PTR [rsp+0x28]
  40a716:	call   402220 <fprintf@plt>
  40a71b:	jmp    40929f <Mat_VarRead@plt+0x6f0f>
  40a720:	mov    rax,QWORD PTR [rip+0x3f39]        # 40e660 <getopt_long_only@@Base+0x1500>
  40a727:	mov    QWORD PTR [rsp+0x1170],rax
  40a72f:	vmovaps xmm0,XMMWORD PTR [rip+0x3f19]        # 40e650 <getopt_long_only@@Base+0x14f0>
  40a737:	vmovaps XMMWORD PTR [rsp+0x1160],xmm0
  40a740:	mov    rax,QWORD PTR [rip+0x3f39]        # 40e680 <getopt_long_only@@Base+0x1520>
  40a747:	mov    QWORD PTR [rsp+0x1cd0],rax
  40a74f:	vmovdqa xmm0,XMMWORD PTR [rip+0x3f19]        # 40e670 <getopt_long_only@@Base+0x1510>
  40a757:	vmovdqa XMMWORD PTR [rsp+0x1cc0],xmm0
  40a760:	mov    QWORD PTR [rsp+0x440],0x0
  40a76c:	cmp    QWORD PTR [rsp+0x28],0x0
  40a772:	je     40a798 <Mat_VarRead@plt+0x8408>
  40a774:	mov    rax,QWORD PTR [rip+0xa85d]        # 414fd8 <getopt_long_only@@Base+0x7e78>
  40a77b:	mov    rdx,QWORD PTR [rax]
  40a77e:	mov    rdi,QWORD PTR [rsp+0x28]
  40a783:	lea    rsi,[rip+0x8055]        # 4127df <getopt_long_only@@Base+0x567f>
  40a78a:	call   4021c0 <freopen@plt>
  40a78f:	test   rax,rax
  40a792:	je     40c1df <Mat_VarRead@plt+0x9e4f>
  40a798:	mov    edi,0x3
  40a79d:	lea    rsi,[rsp+0x1160]
  40a7a5:	lea    rdx,[rsp+0x1cc0]
  40a7ad:	lea    r13,[rsp+0x440]
  40a7b5:	mov    rcx,r13
  40a7b8:	call   4021f0 <Mat_CalcSingleSubscript2@plt>
  40a7bd:	add    DWORD PTR [rsp+0x3c],eax
  40a7c1:	mov    rsi,QWORD PTR [rsp+0x440]
  40a7c9:	xor    eax,eax
  40a7cb:	lea    rdi,[rip+0x4b2d]        # 40f2ff <getopt_long_only@@Base+0x219f>
  40a7d2:	call   402110 <Mat_Message@plt>
  40a7d7:	mov    r15,QWORD PTR [rsp+0x58]
  40a7dc:	add    r15d,0x1
  40a7e0:	jmp    403a85 <Mat_VarRead@plt+0x16f5>
  40a7e5:	mov    rax,QWORD PTR [rip+0xa804]        # 414ff0 <getopt_long_only@@Base+0x7e90>
  40a7ec:	mov    rdi,QWORD PTR [rax]
  40a7ef:	xor    eax,eax
  40a7f1:	lea    rsi,[rip+0x7fe9]        # 4127e1 <getopt_long_only@@Base+0x5681>
  40a7f8:	mov    rdx,QWORD PTR [rsp+0x28]
  40a7fd:	call   402220 <fprintf@plt>
  40a802:	jmp    40960d <Mat_VarRead@plt+0x727d>
  40a807:	mov    rax,QWORD PTR [rip+0xa7e2]        # 414ff0 <getopt_long_only@@Base+0x7e90>
  40a80e:	mov    rdi,QWORD PTR [rax]
  40a811:	xor    eax,eax
  40a813:	lea    rsi,[rip+0x7fc7]        # 4127e1 <getopt_long_only@@Base+0x5681>
  40a81a:	mov    rdx,QWORD PTR [rsp+0x28]
  40a81f:	call   402220 <fprintf@plt>
  40a824:	jmp    40993e <Mat_VarRead@plt+0x75ae>
  40a829:	lea    rax,[rsp+0xc00]
  40a831:	mov    QWORD PTR [rsp+0x1188],rax
  40a839:	mov    r15d,0x7
  40a83f:	jmp    40a905 <Mat_VarRead@plt+0x8575>
  40a844:	lea    rax,[rsp+0x1a0]
  40a84c:	mov    QWORD PTR [rsp+0x1188],rax
  40a854:	mov    r15d,0x1
  40a85a:	jmp    40a905 <Mat_VarRead@plt+0x8575>
  40a85f:	lea    rax,[rsp+0xc0]
  40a867:	mov    QWORD PTR [rsp+0x1188],rax
  40a86f:	mov    r15d,0x2
  40a875:	jmp    40a905 <Mat_VarRead@plt+0x8575>
  40a87a:	lea    rax,[rsp+0x60]
  40a87f:	mov    QWORD PTR [rsp+0x1188],rax
  40a887:	mov    r15d,0x3
  40a88d:	jmp    40a905 <Mat_VarRead@plt+0x8575>
  40a88f:	lea    rax,[rsp+0x260]
  40a897:	mov    QWORD PTR [rsp+0x1188],rax
  40a89f:	mov    r15d,0x4
  40a8a5:	jmp    40a905 <Mat_VarRead@plt+0x8575>
  40a8a7:	lea    rax,[rsp+0xd00]
  40a8af:	mov    QWORD PTR [rsp+0x1188],rax
  40a8b7:	mov    r15d,0x5
  40a8bd:	jmp    40a905 <Mat_VarRead@plt+0x8575>
  40a8bf:	lea    rax,[rsp+0x620]
  40a8c7:	mov    QWORD PTR [rsp+0x1188],rax
  40a8cf:	mov    r15d,0x6
  40a8d5:	jmp    40a905 <Mat_VarRead@plt+0x8575>
  40a8d7:	lea    rax,[rsp+0x8c0]
  40a8df:	mov    QWORD PTR [rsp+0x1188],rax
  40a8e7:	mov    r15d,0xc
  40a8ed:	jmp    40a905 <Mat_VarRead@plt+0x8575>
  40a8ef:	lea    rax,[rsp+0xe60]
  40a8f7:	mov    QWORD PTR [rsp+0x1188],rax
  40a8ff:	mov    r15d,0xd
  40a905:	mov    DWORD PTR [rsp],0x1
  40a90c:	mov    esi,0x5
  40a911:	mov    ecx,0x2
  40a916:	lea    rdi,[rip+0x81c8]        # 412ae5 <getopt_long_only@@Base+0x5985>
  40a91d:	mov    edx,r15d
  40a920:	lea    r8,[rsp+0x40]
  40a925:	lea    r9,[rsp+0x1160]
  40a92d:	call   4020d0 <Mat_VarCreate@plt>
  40a932:	test   rax,rax
  40a935:	je     40a977 <Mat_VarRead@plt+0x85e7>
  40a937:	mov    rbx,rax
  40a93a:	mov    r9,QWORD PTR [rax+0x38]
  40a93e:	mov    DWORD PTR [rsp],0x0
  40a945:	mov    esi,0x5
  40a94a:	mov    ecx,0x2
  40a94f:	lea    rdi,[rip+0x818f]        # 412ae5 <getopt_long_only@@Base+0x5985>
  40a956:	mov    edx,r15d
  40a959:	lea    r8,[rsp+0x40]
  40a95e:	call   4020d0 <Mat_VarCreate@plt>
  40a963:	mov    r15,rax
  40a966:	mov    rdi,rbx
  40a969:	call   402240 <Mat_VarFree@plt>
  40a96e:	test   r15,r15
  40a971:	jne    40b85b <Mat_VarRead@plt+0x94cb>
  40a977:	xor    eax,eax
  40a979:	lea    rdi,[rip+0x8173]        # 412af3 <getopt_long_only@@Base+0x5993>
  40a980:	jmp    40b883 <Mat_VarRead@plt+0x94f3>
  40a985:	cmp    DWORD PTR [r12+0x18],0x0
  40a98b:	je     40b983 <Mat_VarRead@plt+0x95f3>
  40a991:	lea    rax,[rsp+0x1cc0]
  40a999:	mov    QWORD PTR [rsp+0x1160],rax
  40a9a1:	lea    rax,[rsp+0x440]
  40a9a9:	mov    QWORD PTR [rsp+0x1168],rax
  40a9b1:	mov    rdi,r15
  40a9b4:	mov    rsi,r12
  40a9b7:	lea    rdx,[rsp+0x1160]
  40a9bf:	lea    rcx,[rsp+0x8c0]
  40a9c7:	lea    r8,[rsp+0x700]
  40a9cf:	lea    r9,[rsp+0x7e0]
  40a9d7:	call   402130 <Mat_VarReadData@plt>
  40a9dc:	vmovss xmm0,DWORD PTR [rsp+0x1cc0]
  40a9e5:	vmovss xmm4,DWORD PTR [rsp+0x1cc4]
  40a9ee:	vcvtss2sd xmm0,xmm0,xmm0
  40a9f2:	vmovss xmm1,DWORD PTR [rsp+0x440]
  40a9fb:	vmovss xmm5,DWORD PTR [rsp+0x444]
  40aa04:	vcvtss2sd xmm1,xmm1,xmm1
  40aa08:	vmovss xmm2,DWORD PTR [rsp+0x1cc8]
  40aa11:	vcvtss2sd xmm2,xmm2,xmm2
  40aa15:	vmovss xmm3,DWORD PTR [rsp+0x448]
  40aa1e:	vcvtss2sd xmm3,xmm3,xmm3
  40aa22:	vcvtss2sd xmm4,xmm4,xmm4
  40aa26:	vcvtss2sd xmm5,xmm5,xmm5
  40aa2a:	vmovss xmm6,DWORD PTR [rsp+0x1ccc]
  40aa33:	vcvtss2sd xmm6,xmm6,xmm6
  40aa37:	vmovss xmm7,DWORD PTR [rsp+0x44c]
  40aa40:	vcvtss2sd xmm7,xmm7,xmm7
  40aa44:	mov    al,0x8
  40aa46:	lea    rdi,[rip+0x7e0a]        # 412857 <getopt_long_only@@Base+0x56f7>
  40aa4d:	call   402160 <printf@plt>
  40aa52:	cmp    DWORD PTR [r15+0x20],0x200
  40aa5a:	je     40aaac <Mat_VarRead@plt+0x871c>
  40aa5c:	mov    rdi,QWORD PTR [r14]
  40aa5f:	mov    esi,0x18
  40aa64:	call   4022d0 <realloc@plt>
  40aa69:	test   rax,rax
  40aa6c:	je     40aaac <Mat_VarRead@plt+0x871c>
  40aa6e:	add    DWORD PTR [r12+0x8],0x1
  40aa74:	mov    QWORD PTR [r12+0x28],rax
  40aa79:	mov    QWORD PTR [rax+0x10],0x1
  40aa81:	mov    rdi,r15
  40aa84:	mov    rsi,r12
  40aa87:	lea    rdx,[rsp+0x1160]
  40aa8f:	lea    rcx,[rsp+0x8c0]
  40aa97:	lea    r8,[rsp+0x700]
  40aa9f:	lea    r9,[rsp+0x7e0]
  40aaa7:	call   402130 <Mat_VarReadData@plt>
  40aaac:	vmovss xmm0,DWORD PTR [rsp+0x1cc0]
  40aab5:	vmovss xmm4,DWORD PTR [rsp+0x1cc4]
  40aabe:	vcvtss2sd xmm0,xmm0,xmm0
  40aac2:	vmovss xmm1,DWORD PTR [rsp+0x440]
  40aacb:	vmovss xmm5,DWORD PTR [rsp+0x444]
  40aad4:	vcvtss2sd xmm1,xmm1,xmm1
  40aad8:	vmovss xmm2,DWORD PTR [rsp+0x1cc8]
  40aae1:	vcvtss2sd xmm2,xmm2,xmm2
  40aae5:	vmovss xmm3,DWORD PTR [rsp+0x448]
  40aaee:	vcvtss2sd xmm3,xmm3,xmm3
  40aaf2:	vcvtss2sd xmm4,xmm4,xmm4
  40aaf6:	vcvtss2sd xmm5,xmm5,xmm5
  40aafa:	vmovss xmm6,DWORD PTR [rsp+0x1ccc]
  40ab03:	vcvtss2sd xmm6,xmm6,xmm6
  40ab07:	vmovss xmm7,DWORD PTR [rsp+0x44c]
  40ab10:	vcvtss2sd xmm7,xmm7,xmm7
  40ab14:	mov    al,0x8
  40ab16:	lea    rdi,[rip+0x7d3a]        # 412857 <getopt_long_only@@Base+0x56f7>
  40ab1d:	call   402160 <printf@plt>
  40ab22:	jmp    40bfd3 <Mat_VarRead@plt+0x9c43>
  40ab27:	cmp    DWORD PTR [r12+0x18],0x0
  40ab2d:	je     40ba91 <Mat_VarRead@plt+0x9701>
  40ab33:	lea    rax,[rsp+0x1cc0]
  40ab3b:	mov    QWORD PTR [rsp+0x1160],rax
  40ab43:	lea    rax,[rsp+0x440]
  40ab4b:	mov    QWORD PTR [rsp+0x1168],rax
  40ab53:	mov    rdi,r15
  40ab56:	mov    rsi,r12
  40ab59:	lea    rdx,[rsp+0x1160]
  40ab61:	lea    rcx,[rsp+0x8c0]
  40ab69:	lea    r8,[rsp+0x700]
  40ab71:	lea    r9,[rsp+0x7e0]
  40ab79:	call   402130 <Mat_VarReadData@plt>
  40ab7e:	movsx  esi,BYTE PTR [rsp+0x1cc0]
  40ab86:	movsx  edx,BYTE PTR [rsp+0x440]
  40ab8e:	movsx  ecx,BYTE PTR [rsp+0x1cc2]
  40ab96:	movsx  r8d,BYTE PTR [rsp+0x442]
  40ab9f:	movsx  r9d,BYTE PTR [rsp+0x1cc1]
  40aba8:	movsx  eax,BYTE PTR [rsp+0x441]
  40abb0:	movsx  edi,BYTE PTR [rsp+0x1cc3]
  40abb8:	movsx  ebx,BYTE PTR [rsp+0x443]
  40abc0:	mov    DWORD PTR [rsp+0x10],ebx
  40abc4:	mov    DWORD PTR [rsp+0x8],edi
  40abc8:	mov    DWORD PTR [rsp],eax
  40abcb:	xor    eax,eax
  40abcd:	lea    rdi,[rip+0x7e65]        # 412a39 <getopt_long_only@@Base+0x58d9>
  40abd4:	call   402160 <printf@plt>
  40abd9:	cmp    DWORD PTR [r15+0x20],0x200
  40abe1:	je     40ac33 <Mat_VarRead@plt+0x88a3>
  40abe3:	mov    rdi,QWORD PTR [r14]
  40abe6:	mov    esi,0x18
  40abeb:	call   4022d0 <realloc@plt>
  40abf0:	test   rax,rax
  40abf3:	je     40ac33 <Mat_VarRead@plt+0x88a3>
  40abf5:	add    DWORD PTR [r12+0x8],0x1
  40abfb:	mov    QWORD PTR [r12+0x28],rax
  40ac00:	mov    QWORD PTR [rax+0x10],0x1
  40ac08:	mov    rdi,r15
  40ac0b:	mov    rsi,r12
  40ac0e:	lea    rdx,[rsp+0x1160]
  40ac16:	lea    rcx,[rsp+0x8c0]
  40ac1e:	lea    r8,[rsp+0x700]
  40ac26:	lea    r9,[rsp+0x7e0]
  40ac2e:	call   402130 <Mat_VarReadData@plt>
  40ac33:	movsx  esi,BYTE PTR [rsp+0x1cc0]
  40ac3b:	movsx  edx,BYTE PTR [rsp+0x440]
  40ac43:	movsx  ecx,BYTE PTR [rsp+0x1cc2]
  40ac4b:	movsx  r8d,BYTE PTR [rsp+0x442]
  40ac54:	movsx  r9d,BYTE PTR [rsp+0x1cc1]
  40ac5d:	movsx  eax,BYTE PTR [rsp+0x441]
  40ac65:	movsx  edi,BYTE PTR [rsp+0x1cc3]
  40ac6d:	movsx  ebx,BYTE PTR [rsp+0x443]
  40ac75:	mov    DWORD PTR [rsp+0x10],ebx
  40ac79:	mov    DWORD PTR [rsp+0x8],edi
  40ac7d:	mov    DWORD PTR [rsp],eax
  40ac80:	xor    eax,eax
  40ac82:	lea    rdi,[rip+0x7db0]        # 412a39 <getopt_long_only@@Base+0x58d9>
  40ac89:	call   402160 <printf@plt>
  40ac8e:	jmp    40bfd3 <Mat_VarRead@plt+0x9c43>
  40ac93:	cmp    DWORD PTR [r12+0x18],0x0
  40ac99:	je     40bb74 <Mat_VarRead@plt+0x97e4>
  40ac9f:	lea    rax,[rsp+0x1cc0]
  40aca7:	mov    QWORD PTR [rsp+0x1160],rax
  40acaf:	lea    rax,[rsp+0x440]
  40acb7:	mov    QWORD PTR [rsp+0x1168],rax
  40acbf:	mov    rdi,r15
  40acc2:	mov    rsi,r12
  40acc5:	lea    rdx,[rsp+0x1160]
  40accd:	lea    rcx,[rsp+0x8c0]
  40acd5:	lea    r8,[rsp+0x700]
  40acdd:	lea    r9,[rsp+0x7e0]
  40ace5:	call   402130 <Mat_VarReadData@plt>
  40acea:	movzx  esi,BYTE PTR [rsp+0x1cc0]
  40acf2:	movzx  edx,BYTE PTR [rsp+0x440]
  40acfa:	movzx  ecx,BYTE PTR [rsp+0x1cc2]
  40ad02:	movzx  r8d,BYTE PTR [rsp+0x442]
  40ad0b:	movzx  r9d,BYTE PTR [rsp+0x1cc1]
  40ad14:	movzx  eax,BYTE PTR [rsp+0x441]
  40ad1c:	movzx  edi,BYTE PTR [rsp+0x1cc3]
  40ad24:	movzx  ebx,BYTE PTR [rsp+0x443]
  40ad2c:	mov    DWORD PTR [rsp+0x10],ebx
  40ad30:	mov    DWORD PTR [rsp+0x8],edi
  40ad34:	mov    DWORD PTR [rsp],eax
  40ad37:	xor    eax,eax
  40ad39:	lea    rdi,[rip+0x7d4f]        # 412a8f <getopt_long_only@@Base+0x592f>
  40ad40:	call   402160 <printf@plt>
  40ad45:	cmp    DWORD PTR [r15+0x20],0x200
  40ad4d:	je     40ad9f <Mat_VarRead@plt+0x8a0f>
  40ad4f:	mov    rdi,QWORD PTR [r14]
  40ad52:	mov    esi,0x18
  40ad57:	call   4022d0 <realloc@plt>
  40ad5c:	test   rax,rax
  40ad5f:	je     40ad9f <Mat_VarRead@plt+0x8a0f>
  40ad61:	add    DWORD PTR [r12+0x8],0x1
  40ad67:	mov    QWORD PTR [r12+0x28],rax
  40ad6c:	mov    QWORD PTR [rax+0x10],0x1
  40ad74:	mov    rdi,r15
  40ad77:	mov    rsi,r12
  40ad7a:	lea    rdx,[rsp+0x1160]
  40ad82:	lea    rcx,[rsp+0x8c0]
  40ad8a:	lea    r8,[rsp+0x700]
  40ad92:	lea    r9,[rsp+0x7e0]
  40ad9a:	call   402130 <Mat_VarReadData@plt>
  40ad9f:	movzx  esi,BYTE PTR [rsp+0x1cc0]
  40ada7:	movzx  edx,BYTE PTR [rsp+0x440]
  40adaf:	movzx  ecx,BYTE PTR [rsp+0x1cc2]
  40adb7:	movzx  r8d,BYTE PTR [rsp+0x442]
  40adc0:	movzx  r9d,BYTE PTR [rsp+0x1cc1]
  40adc9:	movzx  eax,BYTE PTR [rsp+0x441]
  40add1:	movzx  edi,BYTE PTR [rsp+0x1cc3]
  40add9:	movzx  ebx,BYTE PTR [rsp+0x443]
  40ade1:	mov    DWORD PTR [rsp+0x10],ebx
  40ade5:	mov    DWORD PTR [rsp+0x8],edi
  40ade9:	mov    DWORD PTR [rsp],eax
  40adec:	xor    eax,eax
  40adee:	lea    rdi,[rip+0x7c9a]        # 412a8f <getopt_long_only@@Base+0x592f>
  40adf5:	call   402160 <printf@plt>
  40adfa:	jmp    40bfd3 <Mat_VarRead@plt+0x9c43>
  40adff:	cmp    DWORD PTR [r12+0x18],0x0
  40ae05:	je     40bc57 <Mat_VarRead@plt+0x98c7>
  40ae0b:	lea    rax,[rsp+0x1cc0]
  40ae13:	mov    QWORD PTR [rsp+0x1160],rax
  40ae1b:	lea    rax,[rsp+0x440]
  40ae23:	mov    QWORD PTR [rsp+0x1168],rax
  40ae2b:	mov    rdi,r15
  40ae2e:	mov    rsi,r12
  40ae31:	lea    rdx,[rsp+0x1160]
  40ae39:	lea    rcx,[rsp+0x8c0]
  40ae41:	lea    r8,[rsp+0x700]
  40ae49:	lea    r9,[rsp+0x7e0]
  40ae51:	call   402130 <Mat_VarReadData@plt>
  40ae56:	movsx  esi,WORD PTR [rsp+0x1cc0]
  40ae5e:	movsx  edx,WORD PTR [rsp+0x440]
  40ae66:	movsx  ecx,WORD PTR [rsp+0x1cc4]
  40ae6e:	movsx  r8d,WORD PTR [rsp+0x444]
  40ae77:	movsx  r9d,WORD PTR [rsp+0x1cc2]
  40ae80:	movsx  eax,WORD PTR [rsp+0x442]
  40ae88:	movsx  edi,WORD PTR [rsp+0x1cc6]
  40ae90:	movsx  ebx,WORD PTR [rsp+0x446]
  40ae98:	mov    DWORD PTR [rsp+0x10],ebx
  40ae9c:	mov    DWORD PTR [rsp+0x8],edi
  40aea0:	mov    DWORD PTR [rsp],eax
  40aea3:	xor    eax,eax
  40aea5:	lea    rdi,[rip+0x7af9]        # 4129a5 <getopt_long_only@@Base+0x5845>
  40aeac:	call   402160 <printf@plt>
  40aeb1:	cmp    DWORD PTR [r15+0x20],0x200
  40aeb9:	je     40af0b <Mat_VarRead@plt+0x8b7b>
  40aebb:	mov    rdi,QWORD PTR [r14]
  40aebe:	mov    esi,0x18
  40aec3:	call   4022d0 <realloc@plt>
  40aec8:	test   rax,rax
  40aecb:	je     40af0b <Mat_VarRead@plt+0x8b7b>
  40aecd:	add    DWORD PTR [r12+0x8],0x1
  40aed3:	mov    QWORD PTR [r12+0x28],rax
  40aed8:	mov    QWORD PTR [rax+0x10],0x1
  40aee0:	mov    rdi,r15
  40aee3:	mov    rsi,r12
  40aee6:	lea    rdx,[rsp+0x1160]
  40aeee:	lea    rcx,[rsp+0x8c0]
  40aef6:	lea    r8,[rsp+0x700]
  40aefe:	lea    r9,[rsp+0x7e0]
  40af06:	call   402130 <Mat_VarReadData@plt>
  40af0b:	movsx  esi,WORD PTR [rsp+0x1cc0]
  40af13:	movsx  edx,WORD PTR [rsp+0x440]
  40af1b:	movsx  ecx,WORD PTR [rsp+0x1cc4]
  40af23:	movsx  r8d,WORD PTR [rsp+0x444]
  40af2c:	movsx  r9d,WORD PTR [rsp+0x1cc2]
  40af35:	movsx  eax,WORD PTR [rsp+0x442]
  40af3d:	movsx  edi,WORD PTR [rsp+0x1cc6]
  40af45:	movsx  ebx,WORD PTR [rsp+0x446]
  40af4d:	mov    DWORD PTR [rsp+0x10],ebx
  40af51:	mov    DWORD PTR [rsp+0x8],edi
  40af55:	mov    DWORD PTR [rsp],eax
  40af58:	xor    eax,eax
  40af5a:	lea    rdi,[rip+0x7a44]        # 4129a5 <getopt_long_only@@Base+0x5845>
  40af61:	call   402160 <printf@plt>
  40af66:	jmp    40bfd3 <Mat_VarRead@plt+0x9c43>
  40af6b:	cmp    DWORD PTR [r12+0x18],0x0
  40af71:	je     40bd3a <Mat_VarRead@plt+0x99aa>
  40af77:	lea    rax,[rsp+0x1cc0]
  40af7f:	mov    QWORD PTR [rsp+0x1160],rax
  40af87:	lea    rax,[rsp+0x440]
  40af8f:	mov    QWORD PTR [rsp+0x1168],rax
  40af97:	mov    rdi,r15
  40af9a:	mov    rsi,r12
  40af9d:	lea    rdx,[rsp+0x1160]
  40afa5:	lea    rcx,[rsp+0x8c0]
  40afad:	lea    r8,[rsp+0x700]
  40afb5:	lea    r9,[rsp+0x7e0]
  40afbd:	call   402130 <Mat_VarReadData@plt>
  40afc2:	movzx  esi,WORD PTR [rsp+0x1cc0]
  40afca:	movzx  edx,WORD PTR [rsp+0x440]
  40afd2:	movzx  ecx,WORD PTR [rsp+0x1cc4]
  40afda:	movzx  r8d,WORD PTR [rsp+0x444]
  40afe3:	movzx  r9d,WORD PTR [rsp+0x1cc2]
  40afec:	movzx  eax,WORD PTR [rsp+0x442]
  40aff4:	movzx  edi,WORD PTR [rsp+0x1cc6]
  40affc:	movzx  ebx,WORD PTR [rsp+0x446]
  40b004:	mov    DWORD PTR [rsp+0x10],ebx
  40b008:	mov    DWORD PTR [rsp+0x8],edi
  40b00c:	mov    DWORD PTR [rsp],eax
  40b00f:	xor    eax,eax
  40b011:	lea    rdi,[rip+0x79d7]        # 4129ef <getopt_long_only@@Base+0x588f>
  40b018:	call   402160 <printf@plt>
  40b01d:	cmp    DWORD PTR [r15+0x20],0x200
  40b025:	je     40b077 <Mat_VarRead@plt+0x8ce7>
  40b027:	mov    rdi,QWORD PTR [r14]
  40b02a:	mov    esi,0x18
  40b02f:	call   4022d0 <realloc@plt>
  40b034:	test   rax,rax
  40b037:	je     40b077 <Mat_VarRead@plt+0x8ce7>
  40b039:	add    DWORD PTR [r12+0x8],0x1
  40b03f:	mov    QWORD PTR [r12+0x28],rax
  40b044:	mov    QWORD PTR [rax+0x10],0x1
  40b04c:	mov    rdi,r15
  40b04f:	mov    rsi,r12
  40b052:	lea    rdx,[rsp+0x1160]
  40b05a:	lea    rcx,[rsp+0x8c0]
  40b062:	lea    r8,[rsp+0x700]
  40b06a:	lea    r9,[rsp+0x7e0]
  40b072:	call   402130 <Mat_VarReadData@plt>
  40b077:	movzx  esi,WORD PTR [rsp+0x1cc0]
  40b07f:	movzx  edx,WORD PTR [rsp+0x440]
  40b087:	movzx  ecx,WORD PTR [rsp+0x1cc4]
  40b08f:	movzx  r8d,WORD PTR [rsp+0x444]
  40b098:	movzx  r9d,WORD PTR [rsp+0x1cc2]
  40b0a1:	movzx  eax,WORD PTR [rsp+0x442]
  40b0a9:	movzx  edi,WORD PTR [rsp+0x1cc6]
  40b0b1:	movzx  ebx,WORD PTR [rsp+0x446]
  40b0b9:	mov    DWORD PTR [rsp+0x10],ebx
  40b0bd:	mov    DWORD PTR [rsp+0x8],edi
  40b0c1:	mov    DWORD PTR [rsp],eax
  40b0c4:	xor    eax,eax
  40b0c6:	lea    rdi,[rip+0x7922]        # 4129ef <getopt_long_only@@Base+0x588f>
  40b0cd:	call   402160 <printf@plt>
  40b0d2:	jmp    40bfd3 <Mat_VarRead@plt+0x9c43>
  40b0d7:	cmp    DWORD PTR [r12+0x18],0x0
  40b0dd:	je     40be1d <Mat_VarRead@plt+0x9a8d>
  40b0e3:	lea    rax,[rsp+0xe60]
  40b0eb:	mov    QWORD PTR [rsp+0x1160],rax
  40b0f3:	lea    rax,[rsp+0xa60]
  40b0fb:	mov    QWORD PTR [rsp+0x1168],rax
  40b103:	mov    rdi,r15
  40b106:	mov    rsi,r12
  40b109:	lea    rdx,[rsp+0x1160]
  40b111:	lea    rcx,[rsp+0x8c0]
  40b119:	lea    r8,[rsp+0x700]
  40b121:	lea    r9,[rsp+0x7e0]
  40b129:	call   402130 <Mat_VarReadData@plt>
  40b12e:	mov    ecx,DWORD PTR [rsp+0xe68]
  40b135:	mov    r8d,DWORD PTR [rsp+0xa68]
  40b13d:	mov    esi,DWORD PTR [rsp+0xe60]
  40b144:	mov    r9d,DWORD PTR [rsp+0xe64]
  40b14c:	mov    edx,DWORD PTR [rsp+0xa60]
  40b153:	mov    eax,DWORD PTR [rsp+0xa64]
  40b15a:	mov    edi,DWORD PTR [rsp+0xe6c]
  40b161:	mov    ebx,DWORD PTR [rsp+0xa6c]
  40b168:	mov    DWORD PTR [rsp+0x10],ebx
  40b16c:	mov    DWORD PTR [rsp+0x8],edi
  40b170:	mov    DWORD PTR [rsp],eax
  40b173:	xor    eax,eax
  40b175:	lea    rdi,[rip+0x77ad]        # 412929 <getopt_long_only@@Base+0x57c9>
  40b17c:	call   402160 <printf@plt>
  40b181:	cmp    DWORD PTR [r15+0x20],0x200
  40b189:	je     40b1db <Mat_VarRead@plt+0x8e4b>
  40b18b:	mov    rdi,QWORD PTR [r14]
  40b18e:	mov    esi,0x18
  40b193:	call   4022d0 <realloc@plt>
  40b198:	test   rax,rax
  40b19b:	je     40b1db <Mat_VarRead@plt+0x8e4b>
  40b19d:	add    DWORD PTR [r12+0x8],0x1
  40b1a3:	mov    QWORD PTR [r12+0x28],rax
  40b1a8:	mov    QWORD PTR [rax+0x10],0x1
  40b1b0:	mov    rdi,r15
  40b1b3:	mov    rsi,r12
  40b1b6:	lea    rdx,[rsp+0x1160]
  40b1be:	lea    rcx,[rsp+0x8c0]
  40b1c6:	lea    r8,[rsp+0x700]
  40b1ce:	lea    r9,[rsp+0x7e0]
  40b1d6:	call   402130 <Mat_VarReadData@plt>
  40b1db:	mov    ecx,DWORD PTR [rsp+0xe68]
  40b1e2:	mov    r8d,DWORD PTR [rsp+0xa68]
  40b1ea:	mov    esi,DWORD PTR [rsp+0xe60]
  40b1f1:	mov    r9d,DWORD PTR [rsp+0xe64]
  40b1f9:	mov    edx,DWORD PTR [rsp+0xa60]
  40b200:	mov    eax,DWORD PTR [rsp+0xa64]
  40b207:	mov    edi,DWORD PTR [rsp+0xe6c]
  40b20e:	mov    ebx,DWORD PTR [rsp+0xa6c]
  40b215:	mov    DWORD PTR [rsp+0x10],ebx
  40b219:	mov    DWORD PTR [rsp+0x8],edi
  40b21d:	mov    DWORD PTR [rsp],eax
  40b220:	xor    eax,eax
  40b222:	lea    rdi,[rip+0x7700]        # 412929 <getopt_long_only@@Base+0x57c9>
  40b229:	call   402160 <printf@plt>
  40b22e:	jmp    40bfd3 <Mat_VarRead@plt+0x9c43>
  40b233:	cmp    DWORD PTR [r12+0x18],0x0
  40b239:	je     40bef8 <Mat_VarRead@plt+0x9b68>
  40b23f:	lea    rax,[rsp+0x1cc0]
  40b247:	mov    QWORD PTR [rsp+0x1160],rax
  40b24f:	lea    rax,[rsp+0x440]
  40b257:	mov    QWORD PTR [rsp+0x1168],rax
  40b25f:	mov    rdi,r15
  40b262:	mov    rsi,r12
  40b265:	lea    rdx,[rsp+0x1160]
  40b26d:	lea    rcx,[rsp+0x8c0]
  40b275:	lea    r8,[rsp+0x700]
  40b27d:	lea    r9,[rsp+0x7e0]
  40b285:	call   402130 <Mat_VarReadData@plt>
  40b28a:	mov    ecx,DWORD PTR [rsp+0x1cc8]
  40b291:	mov    r8d,DWORD PTR [rsp+0x448]
  40b299:	mov    esi,DWORD PTR [rsp+0x1cc0]
  40b2a0:	mov    r9d,DWORD PTR [rsp+0x1cc4]
  40b2a8:	mov    edx,DWORD PTR [rsp+0x440]
  40b2af:	mov    eax,DWORD PTR [rsp+0x444]
  40b2b6:	mov    edi,DWORD PTR [rsp+0x1ccc]
  40b2bd:	mov    ebx,DWORD PTR [rsp+0x44c]
  40b2c4:	mov    DWORD PTR [rsp+0x10],ebx
  40b2c8:	mov    DWORD PTR [rsp+0x8],edi
  40b2cc:	mov    DWORD PTR [rsp],eax
  40b2cf:	xor    eax,eax
  40b2d1:	lea    rdi,[rip+0x768f]        # 412967 <getopt_long_only@@Base+0x5807>
  40b2d8:	call   402160 <printf@plt>
  40b2dd:	cmp    DWORD PTR [r15+0x20],0x200
  40b2e5:	je     40b337 <Mat_VarRead@plt+0x8fa7>
  40b2e7:	mov    rdi,QWORD PTR [r14]
  40b2ea:	mov    esi,0x18
  40b2ef:	call   4022d0 <realloc@plt>
  40b2f4:	test   rax,rax
  40b2f7:	je     40b337 <Mat_VarRead@plt+0x8fa7>
  40b2f9:	add    DWORD PTR [r12+0x8],0x1
  40b2ff:	mov    QWORD PTR [r12+0x28],rax
  40b304:	mov    QWORD PTR [rax+0x10],0x1
  40b30c:	mov    rdi,r15
  40b30f:	mov    rsi,r12
  40b312:	lea    rdx,[rsp+0x1160]
  40b31a:	lea    rcx,[rsp+0x8c0]
  40b322:	lea    r8,[rsp+0x700]
  40b32a:	lea    r9,[rsp+0x7e0]
  40b332:	call   402130 <Mat_VarReadData@plt>
  40b337:	mov    ecx,DWORD PTR [rsp+0x1cc8]
  40b33e:	mov    r8d,DWORD PTR [rsp+0x448]
  40b346:	mov    esi,DWORD PTR [rsp+0x1cc0]
  40b34d:	mov    r9d,DWORD PTR [rsp+0x1cc4]
  40b355:	mov    edx,DWORD PTR [rsp+0x440]
  40b35c:	mov    eax,DWORD PTR [rsp+0x444]
  40b363:	mov    edi,DWORD PTR [rsp+0x1ccc]
  40b36a:	mov    ebx,DWORD PTR [rsp+0x44c]
  40b371:	mov    DWORD PTR [rsp+0x10],ebx
  40b375:	mov    DWORD PTR [rsp+0x8],edi
  40b379:	mov    DWORD PTR [rsp],eax
  40b37c:	xor    eax,eax
  40b37e:	lea    rdi,[rip+0x75e2]        # 412967 <getopt_long_only@@Base+0x5807>
  40b385:	call   402160 <printf@plt>
  40b38a:	jmp    40bfd3 <Mat_VarRead@plt+0x9c43>
  40b38f:	cmp    DWORD PTR [r12+0x18],0x0
  40b395:	je     40bff1 <Mat_VarRead@plt+0x9c61>
  40b39b:	lea    rax,[rsp+0x440]
  40b3a3:	mov    QWORD PTR [rsp+0x1cc0],rax
  40b3ab:	lea    rax,[rsp+0x1160]
  40b3b3:	mov    QWORD PTR [rsp+0x1cc8],rax
  40b3bb:	mov    rdi,r15
  40b3be:	mov    rsi,r12
  40b3c1:	lea    rdx,[rsp+0x1cc0]
  40b3c9:	lea    rcx,[rsp+0x8c0]
  40b3d1:	lea    r8,[rsp+0x700]
  40b3d9:	lea    r9,[rsp+0x7e0]
  40b3e1:	call   402130 <Mat_VarReadData@plt>
  40b3e6:	mov    rcx,QWORD PTR [rsp+0x450]
  40b3ee:	mov    r8,QWORD PTR [rsp+0x1170]
  40b3f6:	mov    rsi,QWORD PTR [rsp+0x440]
  40b3fe:	mov    r9,QWORD PTR [rsp+0x448]
  40b406:	mov    rdx,QWORD PTR [rsp+0x1160]
  40b40e:	mov    rax,QWORD PTR [rsp+0x1168]
  40b416:	mov    rdi,QWORD PTR [rsp+0x458]
  40b41e:	mov    rbx,QWORD PTR [rsp+0x1178]
  40b426:	mov    QWORD PTR [rsp+0x10],rbx
  40b42b:	mov    QWORD PTR [rsp+0x8],rdi
  40b430:	mov    QWORD PTR [rsp],rax
  40b434:	xor    eax,eax
  40b436:	lea    rdi,[rip+0x7458]        # 412895 <getopt_long_only@@Base+0x5735>
  40b43d:	call   402160 <printf@plt>
  40b442:	cmp    DWORD PTR [r15+0x20],0x200
  40b44a:	je     40b49c <Mat_VarRead@plt+0x910c>
  40b44c:	mov    rdi,QWORD PTR [r14]
  40b44f:	mov    esi,0x18
  40b454:	call   4022d0 <realloc@plt>
  40b459:	test   rax,rax
  40b45c:	je     40b49c <Mat_VarRead@plt+0x910c>
  40b45e:	add    DWORD PTR [r12+0x8],0x1
  40b464:	mov    QWORD PTR [r12+0x28],rax
  40b469:	mov    QWORD PTR [rax+0x10],0x1
  40b471:	mov    rdi,r15
  40b474:	mov    rsi,r12
  40b477:	lea    rdx,[rsp+0x1cc0]
  40b47f:	lea    rcx,[rsp+0x8c0]
  40b487:	lea    r8,[rsp+0x700]
  40b48f:	lea    r9,[rsp+0x7e0]
  40b497:	call   402130 <Mat_VarReadData@plt>
  40b49c:	mov    rcx,QWORD PTR [rsp+0x450]
  40b4a4:	mov    r8,QWORD PTR [rsp+0x1170]
  40b4ac:	mov    rsi,QWORD PTR [rsp+0x440]
  40b4b4:	mov    r9,QWORD PTR [rsp+0x448]
  40b4bc:	mov    rdx,QWORD PTR [rsp+0x1160]
  40b4c4:	mov    rax,QWORD PTR [rsp+0x1168]
  40b4cc:	mov    rdi,QWORD PTR [rsp+0x458]
  40b4d4:	mov    rbx,QWORD PTR [rsp+0x1178]
  40b4dc:	mov    QWORD PTR [rsp+0x10],rbx
  40b4e1:	mov    QWORD PTR [rsp+0x8],rdi
  40b4e6:	mov    QWORD PTR [rsp],rax
  40b4ea:	xor    eax,eax
  40b4ec:	lea    rdi,[rip+0x73a2]        # 412895 <getopt_long_only@@Base+0x5735>
  40b4f3:	call   402160 <printf@plt>
  40b4f8:	jmp    40bfd3 <Mat_VarRead@plt+0x9c43>
  40b4fd:	cmp    DWORD PTR [r12+0x18],0x0
  40b503:	je     40c0d7 <Mat_VarRead@plt+0x9d47>
  40b509:	lea    rax,[rsp+0x1160]
  40b511:	mov    QWORD PTR [rsp+0x440],rax
  40b519:	lea    rax,[rsp+0x1cc0]
  40b521:	mov    QWORD PTR [rsp+0x448],rax
  40b529:	mov    rdi,r15
  40b52c:	mov    rsi,r12
  40b52f:	lea    rdx,[rsp+0x440]
  40b537:	lea    rcx,[rsp+0x8c0]
  40b53f:	lea    r8,[rsp+0x700]
  40b547:	lea    r9,[rsp+0x7e0]
  40b54f:	call   402130 <Mat_VarReadData@plt>
  40b554:	mov    rcx,QWORD PTR [rsp+0x1170]
  40b55c:	mov    r8,QWORD PTR [rsp+0x1cd0]
  40b564:	mov    rsi,QWORD PTR [rsp+0x1160]
  40b56c:	mov    r9,QWORD PTR [rsp+0x1168]
  40b574:	mov    rdx,QWORD PTR [rsp+0x1cc0]
  40b57c:	mov    rax,QWORD PTR [rsp+0x1cc8]
  40b584:	mov    rdi,QWORD PTR [rsp+0x1178]
  40b58c:	mov    rbx,QWORD PTR [rsp+0x1cd8]
  40b594:	mov    QWORD PTR [rsp+0x10],rbx
  40b599:	mov    QWORD PTR [rsp+0x8],rdi
  40b59e:	mov    QWORD PTR [rsp],rax
  40b5a2:	xor    eax,eax
  40b5a4:	lea    rdi,[rip+0x7334]        # 4128df <getopt_long_only@@Base+0x577f>
  40b5ab:	call   402160 <printf@plt>
  40b5b0:	cmp    DWORD PTR [r15+0x20],0x200
  40b5b8:	je     40b60a <Mat_VarRead@plt+0x927a>
  40b5ba:	mov    rdi,QWORD PTR [r14]
  40b5bd:	mov    esi,0x18
  40b5c2:	call   4022d0 <realloc@plt>
  40b5c7:	test   rax,rax
  40b5ca:	je     40b60a <Mat_VarRead@plt+0x927a>
  40b5cc:	add    DWORD PTR [r12+0x8],0x1
  40b5d2:	mov    QWORD PTR [r12+0x28],rax
  40b5d7:	mov    QWORD PTR [rax+0x10],0x1
  40b5df:	mov    rdi,r15
  40b5e2:	mov    rsi,r12
  40b5e5:	lea    rdx,[rsp+0x440]
  40b5ed:	lea    rcx,[rsp+0x8c0]
  40b5f5:	lea    r8,[rsp+0x700]
  40b5fd:	lea    r9,[rsp+0x7e0]
  40b605:	call   402130 <Mat_VarReadData@plt>
  40b60a:	mov    rcx,QWORD PTR [rsp+0x1170]
  40b612:	mov    r8,QWORD PTR [rsp+0x1cd0]
  40b61a:	mov    rsi,QWORD PTR [rsp+0x1160]
  40b622:	mov    r9,QWORD PTR [rsp+0x1168]
  40b62a:	mov    rdx,QWORD PTR [rsp+0x1cc0]
  40b632:	mov    rax,QWORD PTR [rsp+0x1cc8]
  40b63a:	mov    rdi,QWORD PTR [rsp+0x1178]
  40b642:	mov    rbx,QWORD PTR [rsp+0x1cd8]
  40b64a:	mov    QWORD PTR [rsp+0x10],rbx
  40b64f:	mov    QWORD PTR [rsp+0x8],rdi
  40b654:	mov    QWORD PTR [rsp],rax
  40b658:	xor    eax,eax
  40b65a:	lea    rdi,[rip+0x727e]        # 4128df <getopt_long_only@@Base+0x577f>
  40b661:	call   402160 <printf@plt>
  40b666:	jmp    40bfd3 <Mat_VarRead@plt+0x9c43>
  40b66b:	lea    rax,[rsp+0xc00]
  40b673:	mov    QWORD PTR [rsp+0x130],rax
  40b67b:	lea    rax,[rsp+0x1000]
  40b683:	mov    QWORD PTR [rsp+0x138],rax
  40b68b:	mov    r15d,0x7
  40b691:	jmp    40b7dd <Mat_VarRead@plt+0x944d>
  40b696:	lea    rax,[rsp+0x1a0]
  40b69e:	mov    QWORD PTR [rsp+0x130],rax
  40b6a6:	lea    rax,[rsp+0xc0]
  40b6ae:	mov    QWORD PTR [rsp+0x138],rax
  40b6b6:	mov    r15d,0x1
  40b6bc:	jmp    40b7dd <Mat_VarRead@plt+0x944d>
  40b6c1:	lea    rax,[rsp+0x1c0]
  40b6c9:	mov    QWORD PTR [rsp+0x130],rax
  40b6d1:	lea    rax,[rsp+0x150]
  40b6d9:	mov    QWORD PTR [rsp+0x138],rax
  40b6e1:	mov    r15d,0x2
  40b6e7:	jmp    40b7dd <Mat_VarRead@plt+0x944d>
  40b6ec:	lea    rax,[rsp+0x60]
  40b6f1:	mov    QWORD PTR [rsp+0x130],rax
  40b6f9:	lea    rax,[rsp+0x260]
  40b701:	mov    QWORD PTR [rsp+0x138],rax
  40b709:	mov    r15d,0x3
  40b70f:	jmp    40b7dd <Mat_VarRead@plt+0x944d>
  40b714:	lea    rax,[rsp+0xde0]
  40b71c:	mov    QWORD PTR [rsp+0x130],rax
  40b724:	lea    rax,[rsp+0x3c0]
  40b72c:	mov    QWORD PTR [rsp+0x138],rax
  40b734:	mov    r15d,0x4
  40b73a:	jmp    40b7dd <Mat_VarRead@plt+0x944d>
  40b73f:	lea    rax,[rsp+0xd00]
  40b747:	mov    QWORD PTR [rsp+0x130],rax
  40b74f:	lea    rax,[rsp+0x620]
  40b757:	mov    QWORD PTR [rsp+0x138],rax
  40b75f:	mov    r15d,0x5
  40b765:	jmp    40b7dd <Mat_VarRead@plt+0x944d>
  40b767:	lea    rax,[rsp+0x700]
  40b76f:	mov    QWORD PTR [rsp+0x130],rax
  40b777:	lea    rax,[rsp+0x7e0]
  40b77f:	mov    QWORD PTR [rsp+0x138],rax
  40b787:	mov    r15d,0x6
  40b78d:	jmp    40b7dd <Mat_VarRead@plt+0x944d>
  40b78f:	lea    rax,[rsp+0x8c0]
  40b797:	mov    QWORD PTR [rsp+0x130],rax
  40b79f:	lea    rax,[rsp+0xe60]
  40b7a7:	mov    QWORD PTR [rsp+0x138],rax
  40b7af:	mov    r15d,0xc
  40b7b5:	jmp    40b7dd <Mat_VarRead@plt+0x944d>
  40b7b7:	lea    rax,[rsp+0x1cc0]
  40b7bf:	mov    QWORD PTR [rsp+0x130],rax
  40b7c7:	lea    rax,[rsp+0x440]
  40b7cf:	mov    QWORD PTR [rsp+0x138],rax
  40b7d7:	mov    r15d,0xd
  40b7dd:	lea    rax,[rsp+0x130]
  40b7e5:	mov    QWORD PTR [rsp+0x248],rax
  40b7ed:	mov    DWORD PTR [rsp],0x801
  40b7f4:	mov    esi,0x5
  40b7f9:	mov    ecx,0x2
  40b7fe:	lea    rdi,[rip+0x72e0]        # 412ae5 <getopt_long_only@@Base+0x5985>
  40b805:	mov    edx,r15d
  40b808:	lea    r8,[rsp+0x40]
  40b80d:	lea    r9,[rsp+0x220]
  40b815:	call   4020d0 <Mat_VarCreate@plt>
  40b81a:	test   rax,rax
  40b81d:	je     40b87a <Mat_VarRead@plt+0x94ea>
  40b81f:	mov    rbx,rax
  40b822:	mov    r9,QWORD PTR [rax+0x38]
  40b826:	mov    DWORD PTR [rsp],0x800
  40b82d:	mov    esi,0x5
  40b832:	mov    ecx,0x2
  40b837:	lea    rdi,[rip+0x72a7]        # 412ae5 <getopt_long_only@@Base+0x5985>
  40b83e:	mov    edx,r15d
  40b841:	lea    r8,[rsp+0x40]
  40b846:	call   4020d0 <Mat_VarCreate@plt>
  40b84b:	mov    r15,rax
  40b84e:	mov    rdi,rbx
  40b851:	call   402240 <Mat_VarFree@plt>
  40b856:	test   r15,r15
  40b859:	je     40b87a <Mat_VarRead@plt+0x94ea>
  40b85b:	movzx  edx,BYTE PTR [rip+0xabfa]        # 41645c <optopt@@Base+0x24>
  40b862:	mov    rdi,r14
  40b865:	mov    rsi,r15
  40b868:	call   4020f0 <Mat_VarWrite@plt>
  40b86d:	mov    rdi,r15
  40b870:	call   402240 <Mat_VarFree@plt>
  40b875:	xor    r12d,r12d
  40b878:	jmp    40b888 <Mat_VarRead@plt+0x94f8>
  40b87a:	xor    eax,eax
  40b87c:	lea    rdi,[rip+0x72a2]        # 412b25 <getopt_long_only@@Base+0x59c5>
  40b883:	call   4022b0 <Mat_Critical@plt>
  40b888:	mov    rdi,r14
  40b88b:	call   4022a0 <Mat_Close@plt>
  40b890:	mov    r15,QWORD PTR [rsp+0x58]
  40b895:	add    r15d,0x1
  40b899:	add    DWORD PTR [rsp+0x3c],r12d
  40b89e:	jmp    406d71 <Mat_VarRead@plt+0x49e1>
  40b8a3:	mov    rdi,r15
  40b8a6:	mov    rsi,r12
  40b8a9:	lea    rdx,[rsp+0x1160]
  40b8b1:	lea    rcx,[rsp+0x8c0]
  40b8b9:	lea    r8,[rsp+0x700]
  40b8c1:	lea    r9,[rsp+0x7e0]
  40b8c9:	call   402130 <Mat_VarReadData@plt>
  40b8ce:	vmovsd xmm1,QWORD PTR [rsp+0x1170]
  40b8d7:	vmovsd xmm0,QWORD PTR [rsp+0x1160]
  40b8e0:	vmovsd xmm2,QWORD PTR [rsp+0x1168]
  40b8e9:	vmovsd xmm3,QWORD PTR [rsp+0x1178]
  40b8f2:	mov    al,0x4
  40b8f4:	lea    rdi,[rip+0x6f87]        # 412882 <getopt_long_only@@Base+0x5722>
  40b8fb:	call   402160 <printf@plt>
  40b900:	cmp    DWORD PTR [r15+0x20],0x200
  40b908:	je     40b95a <Mat_VarRead@plt+0x95ca>
  40b90a:	mov    rdi,QWORD PTR [r14]
  40b90d:	mov    esi,0x18
  40b912:	call   4022d0 <realloc@plt>
  40b917:	test   rax,rax
  40b91a:	je     40b95a <Mat_VarRead@plt+0x95ca>
  40b91c:	add    DWORD PTR [r12+0x8],0x1
  40b922:	mov    QWORD PTR [r12+0x28],rax
  40b927:	mov    QWORD PTR [rax+0x10],0x1
  40b92f:	mov    rdi,r15
  40b932:	mov    rsi,r12
  40b935:	lea    rdx,[rsp+0x1160]
  40b93d:	lea    rcx,[rsp+0x8c0]
  40b945:	lea    r8,[rsp+0x700]
  40b94d:	lea    r9,[rsp+0x7e0]
  40b955:	call   402130 <Mat_VarReadData@plt>
  40b95a:	vmovq  xmm1,QWORD PTR [rsp+0x1170]
  40b963:	vmovq  xmm0,QWORD PTR [rsp+0x1160]
  40b96c:	vmovq  xmm2,QWORD PTR [rsp+0x1168]
  40b975:	vmovq  xmm3,QWORD PTR [rsp+0x1178]
  40b97e:	jmp    40ba7e <Mat_VarRead@plt+0x96ee>
  40b983:	mov    rdi,r15
  40b986:	mov    rsi,r12
  40b989:	lea    rdx,[rsp+0x1160]
  40b991:	lea    rcx,[rsp+0x8c0]
  40b999:	lea    r8,[rsp+0x700]
  40b9a1:	lea    r9,[rsp+0x7e0]
  40b9a9:	call   402130 <Mat_VarReadData@plt>
  40b9ae:	vmovss xmm0,DWORD PTR [rsp+0x1160]
  40b9b7:	vcvtss2sd xmm0,xmm0,xmm0
  40b9bb:	vmovss xmm1,DWORD PTR [rsp+0x1168]
  40b9c4:	vcvtss2sd xmm1,xmm1,xmm1
  40b9c8:	vmovss xmm2,DWORD PTR [rsp+0x1164]
  40b9d1:	vcvtss2sd xmm2,xmm2,xmm2
  40b9d5:	vmovss xmm3,DWORD PTR [rsp+0x116c]
  40b9de:	vcvtss2sd xmm3,xmm3,xmm3
  40b9e2:	mov    al,0x4
  40b9e4:	lea    rdi,[rip+0x6e97]        # 412882 <getopt_long_only@@Base+0x5722>
  40b9eb:	call   402160 <printf@plt>
  40b9f0:	cmp    DWORD PTR [r15+0x20],0x200
  40b9f8:	je     40ba4a <Mat_VarRead@plt+0x96ba>
  40b9fa:	mov    rdi,QWORD PTR [r14]
  40b9fd:	mov    esi,0x18
  40ba02:	call   4022d0 <realloc@plt>
  40ba07:	test   rax,rax
  40ba0a:	je     40ba4a <Mat_VarRead@plt+0x96ba>
  40ba0c:	add    DWORD PTR [r12+0x8],0x1
  40ba12:	mov    QWORD PTR [r12+0x28],rax
  40ba17:	mov    QWORD PTR [rax+0x10],0x1
  40ba1f:	mov    rdi,r15
  40ba22:	mov    rsi,r12
  40ba25:	lea    rdx,[rsp+0x1160]
  40ba2d:	lea    rcx,[rsp+0x8c0]
  40ba35:	lea    r8,[rsp+0x700]
  40ba3d:	lea    r9,[rsp+0x7e0]
  40ba45:	call   402130 <Mat_VarReadData@plt>
  40ba4a:	vmovss xmm0,DWORD PTR [rsp+0x1160]
  40ba53:	vcvtss2sd xmm0,xmm0,xmm0
  40ba57:	vmovss xmm1,DWORD PTR [rsp+0x1168]
  40ba60:	vcvtss2sd xmm1,xmm1,xmm1
  40ba64:	vmovss xmm2,DWORD PTR [rsp+0x1164]
  40ba6d:	vcvtss2sd xmm2,xmm2,xmm2
  40ba71:	vmovss xmm3,DWORD PTR [rsp+0x116c]
  40ba7a:	vcvtss2sd xmm3,xmm3,xmm3
  40ba7e:	mov    al,0x4
  40ba80:	lea    rdi,[rip+0x6dfb]        # 412882 <getopt_long_only@@Base+0x5722>
  40ba87:	call   402160 <printf@plt>
  40ba8c:	jmp    40bfd3 <Mat_VarRead@plt+0x9c43>
  40ba91:	mov    rdi,r15
  40ba94:	mov    rsi,r12
  40ba97:	lea    rdx,[rsp+0x1160]
  40ba9f:	lea    rcx,[rsp+0x8c0]
  40baa7:	lea    r8,[rsp+0x700]
  40baaf:	lea    r9,[rsp+0x7e0]
  40bab7:	call   402130 <Mat_VarReadData@plt>
  40babc:	movsx  esi,BYTE PTR [rsp+0x1160]
  40bac4:	movsx  edx,BYTE PTR [rsp+0x1162]
  40bacc:	movsx  ecx,BYTE PTR [rsp+0x1161]
  40bad4:	movsx  r8d,BYTE PTR [rsp+0x1163]
  40badd:	xor    eax,eax
  40badf:	lea    rdi,[rip+0x6f8e]        # 412a74 <getopt_long_only@@Base+0x5914>
  40bae6:	call   402160 <printf@plt>
  40baeb:	cmp    DWORD PTR [r15+0x20],0x200
  40baf3:	je     40bb45 <Mat_VarRead@plt+0x97b5>
  40baf5:	mov    rdi,QWORD PTR [r14]
  40baf8:	mov    esi,0x18
  40bafd:	call   4022d0 <realloc@plt>
  40bb02:	test   rax,rax
  40bb05:	je     40bb45 <Mat_VarRead@plt+0x97b5>
  40bb07:	add    DWORD PTR [r12+0x8],0x1
  40bb0d:	mov    QWORD PTR [r12+0x28],rax
  40bb12:	mov    QWORD PTR [rax+0x10],0x1
  40bb1a:	mov    rdi,r15
  40bb1d:	mov    rsi,r12
  40bb20:	lea    rdx,[rsp+0x1160]
  40bb28:	lea    rcx,[rsp+0x8c0]
  40bb30:	lea    r8,[rsp+0x700]
  40bb38:	lea    r9,[rsp+0x7e0]
  40bb40:	call   402130 <Mat_VarReadData@plt>
  40bb45:	movsx  esi,BYTE PTR [rsp+0x1160]
  40bb4d:	movsx  edx,BYTE PTR [rsp+0x1162]
  40bb55:	movsx  ecx,BYTE PTR [rsp+0x1161]
  40bb5d:	movsx  r8d,BYTE PTR [rsp+0x1163]
  40bb66:	xor    eax,eax
  40bb68:	lea    rdi,[rip+0x6f05]        # 412a74 <getopt_long_only@@Base+0x5914>
  40bb6f:	jmp    40bfce <Mat_VarRead@plt+0x9c3e>
  40bb74:	mov    rdi,r15
  40bb77:	mov    rsi,r12
  40bb7a:	lea    rdx,[rsp+0x1160]
  40bb82:	lea    rcx,[rsp+0x8c0]
  40bb8a:	lea    r8,[rsp+0x700]
  40bb92:	lea    r9,[rsp+0x7e0]
  40bb9a:	call   402130 <Mat_VarReadData@plt>
  40bb9f:	movzx  esi,BYTE PTR [rsp+0x1160]
  40bba7:	movzx  edx,BYTE PTR [rsp+0x1162]
  40bbaf:	movzx  ecx,BYTE PTR [rsp+0x1161]
  40bbb7:	movzx  r8d,BYTE PTR [rsp+0x1163]
  40bbc0:	xor    eax,eax
  40bbc2:	lea    rdi,[rip+0x6f01]        # 412aca <getopt_long_only@@Base+0x596a>
  40bbc9:	call   402160 <printf@plt>
  40bbce:	cmp    DWORD PTR [r15+0x20],0x200
  40bbd6:	je     40bc28 <Mat_VarRead@plt+0x9898>
  40bbd8:	mov    rdi,QWORD PTR [r14]
  40bbdb:	mov    esi,0x18
  40bbe0:	call   4022d0 <realloc@plt>
  40bbe5:	test   rax,rax
  40bbe8:	je     40bc28 <Mat_VarRead@plt+0x9898>
  40bbea:	add    DWORD PTR [r12+0x8],0x1
  40bbf0:	mov    QWORD PTR [r12+0x28],rax
  40bbf5:	mov    QWORD PTR [rax+0x10],0x1
  40bbfd:	mov    rdi,r15
  40bc00:	mov    rsi,r12
  40bc03:	lea    rdx,[rsp+0x1160]
  40bc0b:	lea    rcx,[rsp+0x8c0]
  40bc13:	lea    r8,[rsp+0x700]
  40bc1b:	lea    r9,[rsp+0x7e0]
  40bc23:	call   402130 <Mat_VarReadData@plt>
  40bc28:	movzx  esi,BYTE PTR [rsp+0x1160]
  40bc30:	movzx  edx,BYTE PTR [rsp+0x1162]
  40bc38:	movzx  ecx,BYTE PTR [rsp+0x1161]
  40bc40:	movzx  r8d,BYTE PTR [rsp+0x1163]
  40bc49:	xor    eax,eax
  40bc4b:	lea    rdi,[rip+0x6e78]        # 412aca <getopt_long_only@@Base+0x596a>
  40bc52:	jmp    40bfce <Mat_VarRead@plt+0x9c3e>
  40bc57:	mov    rdi,r15
  40bc5a:	mov    rsi,r12
  40bc5d:	lea    rdx,[rsp+0x1160]
  40bc65:	lea    rcx,[rsp+0x8c0]
  40bc6d:	lea    r8,[rsp+0x700]
  40bc75:	lea    r9,[rsp+0x7e0]
  40bc7d:	call   402130 <Mat_VarReadData@plt>
  40bc82:	movsx  esi,WORD PTR [rsp+0x1160]
  40bc8a:	movsx  edx,WORD PTR [rsp+0x1164]
  40bc92:	movsx  ecx,WORD PTR [rsp+0x1162]
  40bc9a:	movsx  r8d,WORD PTR [rsp+0x1166]
  40bca3:	xor    eax,eax
  40bca5:	lea    rdi,[rip+0x6d2c]        # 4129d8 <getopt_long_only@@Base+0x5878>
  40bcac:	call   402160 <printf@plt>
  40bcb1:	cmp    DWORD PTR [r15+0x20],0x200
  40bcb9:	je     40bd0b <Mat_VarRead@plt+0x997b>
  40bcbb:	mov    rdi,QWORD PTR [r14]
  40bcbe:	mov    esi,0x18
  40bcc3:	call   4022d0 <realloc@plt>
  40bcc8:	test   rax,rax
  40bccb:	je     40bd0b <Mat_VarRead@plt+0x997b>
  40bccd:	add    DWORD PTR [r12+0x8],0x1
  40bcd3:	mov    QWORD PTR [r12+0x28],rax
  40bcd8:	mov    QWORD PTR [rax+0x10],0x1
  40bce0:	mov    rdi,r15
  40bce3:	mov    rsi,r12
  40bce6:	lea    rdx,[rsp+0x1160]
  40bcee:	lea    rcx,[rsp+0x8c0]
  40bcf6:	lea    r8,[rsp+0x700]
  40bcfe:	lea    r9,[rsp+0x7e0]
  40bd06:	call   402130 <Mat_VarReadData@plt>
  40bd0b:	movsx  esi,WORD PTR [rsp+0x1160]
  40bd13:	movsx  edx,WORD PTR [rsp+0x1164]
  40bd1b:	movsx  ecx,WORD PTR [rsp+0x1162]
  40bd23:	movsx  r8d,WORD PTR [rsp+0x1166]
  40bd2c:	xor    eax,eax
  40bd2e:	lea    rdi,[rip+0x6ca3]        # 4129d8 <getopt_long_only@@Base+0x5878>
  40bd35:	jmp    40bfce <Mat_VarRead@plt+0x9c3e>
  40bd3a:	mov    rdi,r15
  40bd3d:	mov    rsi,r12
  40bd40:	lea    rdx,[rsp+0x1160]
  40bd48:	lea    rcx,[rsp+0x8c0]
  40bd50:	lea    r8,[rsp+0x700]
  40bd58:	lea    r9,[rsp+0x7e0]
  40bd60:	call   402130 <Mat_VarReadData@plt>
  40bd65:	movzx  esi,WORD PTR [rsp+0x1160]
  40bd6d:	movzx  edx,WORD PTR [rsp+0x1164]
  40bd75:	movzx  ecx,WORD PTR [rsp+0x1162]
  40bd7d:	movzx  r8d,WORD PTR [rsp+0x1166]
  40bd86:	xor    eax,eax
  40bd88:	lea    rdi,[rip+0x6c93]        # 412a22 <getopt_long_only@@Base+0x58c2>
  40bd8f:	call   402160 <printf@plt>
  40bd94:	cmp    DWORD PTR [r15+0x20],0x200
  40bd9c:	je     40bdee <Mat_VarRead@plt+0x9a5e>
  40bd9e:	mov    rdi,QWORD PTR [r14]
  40bda1:	mov    esi,0x18
  40bda6:	call   4022d0 <realloc@plt>
  40bdab:	test   rax,rax
  40bdae:	je     40bdee <Mat_VarRead@plt+0x9a5e>
  40bdb0:	add    DWORD PTR [r12+0x8],0x1
  40bdb6:	mov    QWORD PTR [r12+0x28],rax
  40bdbb:	mov    QWORD PTR [rax+0x10],0x1
  40bdc3:	mov    rdi,r15
  40bdc6:	mov    rsi,r12
  40bdc9:	lea    rdx,[rsp+0x1160]
  40bdd1:	lea    rcx,[rsp+0x8c0]
  40bdd9:	lea    r8,[rsp+0x700]
  40bde1:	lea    r9,[rsp+0x7e0]
  40bde9:	call   402130 <Mat_VarReadData@plt>
  40bdee:	movzx  esi,WORD PTR [rsp+0x1160]
  40bdf6:	movzx  edx,WORD PTR [rsp+0x1164]
  40bdfe:	movzx  ecx,WORD PTR [rsp+0x1162]
  40be06:	movzx  r8d,WORD PTR [rsp+0x1166]
  40be0f:	xor    eax,eax
  40be11:	lea    rdi,[rip+0x6c0a]        # 412a22 <getopt_long_only@@Base+0x58c2>
  40be18:	jmp    40bfce <Mat_VarRead@plt+0x9c3e>
  40be1d:	mov    rdi,r15
  40be20:	mov    rsi,r12
  40be23:	lea    rdx,[rsp+0x1000]
  40be2b:	lea    rcx,[rsp+0x8c0]
  40be33:	lea    r8,[rsp+0x700]
  40be3b:	lea    r9,[rsp+0x7e0]
  40be43:	call   402130 <Mat_VarReadData@plt>
  40be48:	mov    edx,DWORD PTR [rsp+0x1008]
  40be4f:	mov    esi,DWORD PTR [rsp+0x1000]
  40be56:	mov    ecx,DWORD PTR [rsp+0x1004]
  40be5d:	mov    r8d,DWORD PTR [rsp+0x100c]
  40be65:	xor    eax,eax
  40be67:	lea    rdi,[rip+0x6ae6]        # 412954 <getopt_long_only@@Base+0x57f4>
  40be6e:	call   402160 <printf@plt>
  40be73:	cmp    DWORD PTR [r15+0x20],0x200
  40be7b:	je     40becd <Mat_VarRead@plt+0x9b3d>
  40be7d:	mov    rdi,QWORD PTR [r14]
  40be80:	mov    esi,0x18
  40be85:	call   4022d0 <realloc@plt>
  40be8a:	test   rax,rax
  40be8d:	je     40becd <Mat_VarRead@plt+0x9b3d>
  40be8f:	add    DWORD PTR [r12+0x8],0x1
  40be95:	mov    QWORD PTR [r12+0x28],rax
  40be9a:	mov    QWORD PTR [rax+0x10],0x1
  40bea2:	mov    rdi,r15
  40bea5:	mov    rsi,r12
  40bea8:	lea    rdx,[rsp+0x1000]
  40beb0:	lea    rcx,[rsp+0x8c0]
  40beb8:	lea    r8,[rsp+0x700]
  40bec0:	lea    r9,[rsp+0x7e0]
  40bec8:	call   402130 <Mat_VarReadData@plt>
  40becd:	mov    edx,DWORD PTR [rsp+0x1008]
  40bed4:	mov    esi,DWORD PTR [rsp+0x1000]
  40bedb:	mov    ecx,DWORD PTR [rsp+0x1004]
  40bee2:	mov    r8d,DWORD PTR [rsp+0x100c]
  40beea:	xor    eax,eax
  40beec:	lea    rdi,[rip+0x6a61]        # 412954 <getopt_long_only@@Base+0x57f4>
  40bef3:	jmp    40bfce <Mat_VarRead@plt+0x9c3e>
  40bef8:	mov    rdi,r15
  40befb:	mov    rsi,r12
  40befe:	lea    rdx,[rsp+0x1160]
  40bf06:	lea    rcx,[rsp+0x8c0]
  40bf0e:	lea    r8,[rsp+0x700]
  40bf16:	lea    r9,[rsp+0x7e0]
  40bf1e:	call   402130 <Mat_VarReadData@plt>
  40bf23:	mov    edx,DWORD PTR [rsp+0x1168]
  40bf2a:	mov    esi,DWORD PTR [rsp+0x1160]
  40bf31:	mov    ecx,DWORD PTR [rsp+0x1164]
  40bf38:	mov    r8d,DWORD PTR [rsp+0x116c]
  40bf40:	xor    eax,eax
  40bf42:	lea    rdi,[rip+0x6a49]        # 412992 <getopt_long_only@@Base+0x5832>
  40bf49:	call   402160 <printf@plt>
  40bf4e:	cmp    DWORD PTR [r15+0x20],0x200
  40bf56:	je     40bfa8 <Mat_VarRead@plt+0x9c18>
  40bf58:	mov    rdi,QWORD PTR [r14]
  40bf5b:	mov    esi,0x18
  40bf60:	call   4022d0 <realloc@plt>
  40bf65:	test   rax,rax
  40bf68:	je     40bfa8 <Mat_VarRead@plt+0x9c18>
  40bf6a:	add    DWORD PTR [r12+0x8],0x1
  40bf70:	mov    QWORD PTR [r12+0x28],rax
  40bf75:	mov    QWORD PTR [rax+0x10],0x1
  40bf7d:	mov    rdi,r15
  40bf80:	mov    rsi,r12
  40bf83:	lea    rdx,[rsp+0x1160]
  40bf8b:	lea    rcx,[rsp+0x8c0]
  40bf93:	lea    r8,[rsp+0x700]
  40bf9b:	lea    r9,[rsp+0x7e0]
  40bfa3:	call   402130 <Mat_VarReadData@plt>
  40bfa8:	mov    edx,DWORD PTR [rsp+0x1168]
  40bfaf:	mov    esi,DWORD PTR [rsp+0x1160]
  40bfb6:	mov    ecx,DWORD PTR [rsp+0x1164]
  40bfbd:	mov    r8d,DWORD PTR [rsp+0x116c]
  40bfc5:	xor    eax,eax
  40bfc7:	lea    rdi,[rip+0x69c4]        # 412992 <getopt_long_only@@Base+0x5832>
  40bfce:	call   402160 <printf@plt>
  40bfd3:	mov    rdi,r12
  40bfd6:	call   402240 <Mat_VarFree@plt>
  40bfdb:	mov    rdi,r15
  40bfde:	call   4022a0 <Mat_Close@plt>
  40bfe3:	mov    r15,QWORD PTR [rsp+0x58]
  40bfe8:	add    r15d,0x3
  40bfec:	jmp    406d71 <Mat_VarRead@plt+0x49e1>
  40bff1:	mov    rdi,r15
  40bff4:	mov    rsi,r12
  40bff7:	lea    rdx,[rsp+0x1160]
  40bfff:	lea    rcx,[rsp+0x8c0]
  40c007:	lea    r8,[rsp+0x700]
  40c00f:	lea    r9,[rsp+0x7e0]
  40c017:	call   402130 <Mat_VarReadData@plt>
  40c01c:	mov    rdx,QWORD PTR [rsp+0x1170]
  40c024:	mov    rsi,QWORD PTR [rsp+0x1160]
  40c02c:	mov    rcx,QWORD PTR [rsp+0x1168]
  40c034:	mov    r8,QWORD PTR [rsp+0x1178]
  40c03c:	xor    eax,eax
  40c03e:	lea    rdi,[rip+0x6883]        # 4128c8 <getopt_long_only@@Base+0x5768>
  40c045:	call   402160 <printf@plt>
  40c04a:	cmp    DWORD PTR [r15+0x20],0x200
  40c052:	je     40c0a4 <Mat_VarRead@plt+0x9d14>
  40c054:	mov    rdi,QWORD PTR [r14]
  40c057:	mov    esi,0x18
  40c05c:	call   4022d0 <realloc@plt>
  40c061:	test   rax,rax
  40c064:	je     40c0a4 <Mat_VarRead@plt+0x9d14>
  40c066:	add    DWORD PTR [r12+0x8],0x1
  40c06c:	mov    QWORD PTR [r12+0x28],rax
  40c071:	mov    QWORD PTR [rax+0x10],0x1
  40c079:	mov    rdi,r15
  40c07c:	mov    rsi,r12
  40c07f:	lea    rdx,[rsp+0x1160]
  40c087:	lea    rcx,[rsp+0x8c0]
  40c08f:	lea    r8,[rsp+0x700]
  40c097:	lea    r9,[rsp+0x7e0]
  40c09f:	call   402130 <Mat_VarReadData@plt>
  40c0a4:	mov    rdx,QWORD PTR [rsp+0x1170]
  40c0ac:	mov    rsi,QWORD PTR [rsp+0x1160]
  40c0b4:	mov    rcx,QWORD PTR [rsp+0x1168]
  40c0bc:	mov    r8,QWORD PTR [rsp+0x1178]
  40c0c4:	xor    eax,eax
  40c0c6:	lea    rdi,[rip+0x67fb]        # 4128c8 <getopt_long_only@@Base+0x5768>
  40c0cd:	call   402160 <printf@plt>
  40c0d2:	jmp    40bfd3 <Mat_VarRead@plt+0x9c43>
  40c0d7:	mov    rdi,r15
  40c0da:	mov    rsi,r12
  40c0dd:	lea    rdx,[rsp+0x1160]
  40c0e5:	lea    rcx,[rsp+0x8c0]
  40c0ed:	lea    r8,[rsp+0x700]
  40c0f5:	lea    r9,[rsp+0x7e0]
  40c0fd:	call   402130 <Mat_VarReadData@plt>
  40c102:	mov    rdx,QWORD PTR [rsp+0x1170]
  40c10a:	mov    rsi,QWORD PTR [rsp+0x1160]
  40c112:	mov    rcx,QWORD PTR [rsp+0x1168]
  40c11a:	mov    r8,QWORD PTR [rsp+0x1178]
  40c122:	xor    eax,eax
  40c124:	lea    rdi,[rip+0x67e7]        # 412912 <getopt_long_only@@Base+0x57b2>
  40c12b:	call   402160 <printf@plt>
  40c130:	cmp    DWORD PTR [r15+0x20],0x200
  40c138:	je     40c18a <Mat_VarRead@plt+0x9dfa>
  40c13a:	mov    rdi,QWORD PTR [r14]
  40c13d:	mov    esi,0x18
  40c142:	call   4022d0 <realloc@plt>
  40c147:	test   rax,rax
  40c14a:	je     40c18a <Mat_VarRead@plt+0x9dfa>
  40c14c:	add    DWORD PTR [r12+0x8],0x1
  40c152:	mov    QWORD PTR [r12+0x28],rax
  40c157:	mov    QWORD PTR [rax+0x10],0x1
  40c15f:	mov    rdi,r15
  40c162:	mov    rsi,r12
  40c165:	lea    rdx,[rsp+0x1160]
  40c16d:	lea    rcx,[rsp+0x8c0]
  40c175:	lea    r8,[rsp+0x700]
  40c17d:	lea    r9,[rsp+0x7e0]
  40c185:	call   402130 <Mat_VarReadData@plt>
  40c18a:	mov    rdx,QWORD PTR [rsp+0x1170]
  40c192:	mov    rsi,QWORD PTR [rsp+0x1160]
  40c19a:	mov    rcx,QWORD PTR [rsp+0x1168]
  40c1a2:	mov    r8,QWORD PTR [rsp+0x1178]
  40c1aa:	xor    eax,eax
  40c1ac:	lea    rdi,[rip+0x675f]        # 412912 <getopt_long_only@@Base+0x57b2>
  40c1b3:	call   402160 <printf@plt>
  40c1b8:	jmp    40bfd3 <Mat_VarRead@plt+0x9c43>
  40c1bd:	mov    rax,QWORD PTR [rip+0x8e2c]        # 414ff0 <getopt_long_only@@Base+0x7e90>
  40c1c4:	mov    rdi,QWORD PTR [rax]
  40c1c7:	xor    eax,eax
  40c1c9:	lea    rsi,[rip+0x6611]        # 4127e1 <getopt_long_only@@Base+0x5681>
  40c1d0:	mov    rdx,QWORD PTR [rsp+0x28]
  40c1d5:	call   402220 <fprintf@plt>
  40c1da:	jmp    40a6be <Mat_VarRead@plt+0x832e>
  40c1df:	mov    rax,QWORD PTR [rip+0x8e0a]        # 414ff0 <getopt_long_only@@Base+0x7e90>
  40c1e6:	mov    rdi,QWORD PTR [rax]
  40c1e9:	xor    eax,eax
  40c1eb:	lea    rsi,[rip+0x65ef]        # 4127e1 <getopt_long_only@@Base+0x5681>
  40c1f2:	mov    rdx,QWORD PTR [rsp+0x28]
  40c1f7:	call   402220 <fprintf@plt>
  40c1fc:	jmp    40a798 <Mat_VarRead@plt+0x8408>
  40c201:	mov    rax,QWORD PTR [rip+0x8de8]        # 414ff0 <getopt_long_only@@Base+0x7e90>
  40c208:	mov    rcx,QWORD PTR [rax]
  40c20b:	lea    rdi,[rip+0x2c9f]        # 40eeb1 <getopt_long_only@@Base+0x1d51>
  40c212:	mov    esi,0x37
  40c217:	mov    edx,0x1
  40c21c:	call   402350 <fwrite@plt>
  40c221:	mov    DWORD PTR [rsp+0x3c],0x1
  40c229:	mov    eax,DWORD PTR [rsp+0x3c]
  40c22d:	lea    rsp,[rbp-0x28]
  40c231:	pop    rbx
  40c232:	pop    r12
  40c234:	pop    r13
  40c236:	pop    r14
  40c238:	pop    r15
  40c23a:	pop    rbp
  40c23b:	vzeroupper 
  40c23e:	ret    
  40c23f:	lea    rdi,[rip+0x30ec]        # 40f332 <getopt_long_only@@Base+0x21d2>
  40c246:	xor    eax,eax
  40c248:	mov    rsi,r14
  40c24b:	call   4022b0 <Mat_Critical@plt>
  40c250:	jmp    40c229 <Mat_VarRead@plt+0x9e99>
  40c252:	lea    rdi,[rip+0x90d7]        # 415330 <getopt_long_only@@Base+0x81d0>
  40c259:	jmp    40c262 <Mat_VarRead@plt+0x9ed2>
  40c25b:	lea    rdi,[rip+0x91ce]        # 415430 <getopt_long_only@@Base+0x82d0>
  40c262:	call   402330 <Mat_Help@plt>
  40c267:	xor    edi,edi
  40c269:	call   402340 <exit@plt>
  40c26e:	lea    rax,[rip+0xa1f3]        # 416468 <optarg@@Base>
  40c275:	mov    rdi,QWORD PTR [rax]
  40c278:	call   40c300 <Mat_VarRead@plt+0x9f70>
  40c27d:	xor    edi,edi
  40c27f:	call   402340 <exit@plt>
  40c284:	lea    rdi,[rip+0x2cd4]        # 40ef5f <getopt_long_only@@Base+0x1dff>
  40c28b:	lea    rsi,[rip+0x2c16]        # 40eea8 <getopt_long_only@@Base+0x1d48>
  40c292:	lea    rdx,[rip+0x2d1c]        # 40efb5 <getopt_long_only@@Base+0x1e55>
  40c299:	xor    eax,eax
  40c29b:	call   402160 <printf@plt>
  40c2a0:	xor    edi,edi
  40c2a2:	call   402340 <exit@plt>
  40c2a7:	mov    edi,0x1
  40c2ac:	call   402340 <exit@plt>
  40c2b1:	mov    rax,QWORD PTR [rip+0x8d38]        # 414ff0 <getopt_long_only@@Base+0x7e90>
  40c2b8:	mov    rdi,QWORD PTR [rax]
  40c2bb:	lea    rsi,[rip+0x2c53]        # 40ef15 <getopt_long_only@@Base+0x1db5>
  40c2c2:	xor    eax,eax
  40c2c4:	mov    rdx,r13
  40c2c7:	jmp    40c2e5 <Mat_VarRead@plt+0x9f55>
  40c2c9:	mov    rax,QWORD PTR [rip+0x8d20]        # 414ff0 <getopt_long_only@@Base+0x7e90>
  40c2d0:	mov    rdi,QWORD PTR [rax]
  40c2d3:	mov    rax,QWORD PTR [rsp+0x30]
  40c2d8:	mov    rdx,QWORD PTR [rax+0x10]
  40c2dc:	lea    rsi,[rip+0x2c5b]        # 40ef3e <getopt_long_only@@Base+0x1dde>
  40c2e3:	xor    eax,eax
  40c2e5:	call   402220 <fprintf@plt>
  40c2ea:	mov    edi,0x1
  40c2ef:	call   402340 <exit@plt>
  40c2f4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40c2fe:	xchg   ax,ax
  40c300:	push   rbx
  40c301:	mov    rbx,rdi
  40c304:	lea    rsi,[rip+0x3fc2]        # 4102cd <getopt_long_only@@Base+0x316d>
  40c30b:	call   402210 <strcmp@plt>
  40c310:	test   eax,eax
  40c312:	jne    40c320 <Mat_VarRead@plt+0x9f90>
  40c314:	lea    rdi,[rip+0x9385]        # 4156a0 <getopt_long_only@@Base+0x8540>
  40c31b:	call   402330 <Mat_Help@plt>
  40c320:	lea    rsi,[rip+0x3fec]        # 410313 <getopt_long_only@@Base+0x31b3>
  40c327:	mov    rdi,rbx
  40c32a:	call   402210 <strcmp@plt>
  40c32f:	test   eax,eax
  40c331:	jne    40c33f <Mat_VarRead@plt+0x9faf>
  40c333:	lea    rdi,[rip+0x93a6]        # 4156e0 <getopt_long_only@@Base+0x8580>
  40c33a:	call   402330 <Mat_Help@plt>
  40c33f:	lea    rsi,[rip+0x4024]        # 41036a <getopt_long_only@@Base+0x320a>
  40c346:	mov    rdi,rbx
  40c349:	call   402210 <strcmp@plt>
  40c34e:	test   eax,eax
  40c350:	je     40c5b9 <Mat_VarRead@plt+0xa229>
  40c356:	lea    rsi,[rip+0x4060]        # 4103bd <getopt_long_only@@Base+0x325d>
  40c35d:	mov    rdi,rbx
  40c360:	call   402210 <strcmp@plt>
  40c365:	test   eax,eax
  40c367:	je     40c5c6 <Mat_VarRead@plt+0xa236>
  40c36d:	lea    rsi,[rip+0x40e3]        # 410457 <getopt_long_only@@Base+0x32f7>
  40c374:	mov    rdi,rbx
  40c377:	call   402210 <strcmp@plt>
  40c37c:	test   eax,eax
  40c37e:	je     40c5d3 <Mat_VarRead@plt+0xa243>
  40c384:	lea    rsi,[rip+0x414d]        # 4104d8 <getopt_long_only@@Base+0x3378>
  40c38b:	mov    rdi,rbx
  40c38e:	call   402210 <strcmp@plt>
  40c393:	test   eax,eax
  40c395:	je     40c5e0 <Mat_VarRead@plt+0xa250>
  40c39b:	lea    rsi,[rip+0x4201]        # 4105a3 <getopt_long_only@@Base+0x3443>
  40c3a2:	mov    rdi,rbx
  40c3a5:	call   402210 <strcmp@plt>
  40c3aa:	test   eax,eax
  40c3ac:	je     40c5ed <Mat_VarRead@plt+0xa25d>
  40c3b2:	lea    rsi,[rip+0x442b]        # 4107e4 <getopt_long_only@@Base+0x3684>
  40c3b9:	mov    rdi,rbx
  40c3bc:	call   402210 <strcmp@plt>
  40c3c1:	test   eax,eax
  40c3c3:	je     40c5fa <Mat_VarRead@plt+0xa26a>
  40c3c9:	lea    rsi,[rip+0x46c0]        # 410a90 <getopt_long_only@@Base+0x3930>
  40c3d0:	mov    rdi,rbx
  40c3d3:	call   402210 <strcmp@plt>
  40c3d8:	test   eax,eax
  40c3da:	je     40c607 <Mat_VarRead@plt+0xa277>
  40c3e0:	lea    rsi,[rip+0x4914]        # 410cfb <getopt_long_only@@Base+0x3b9b>
  40c3e7:	mov    rdi,rbx
  40c3ea:	call   402210 <strcmp@plt>
  40c3ef:	test   eax,eax
  40c3f1:	je     40c614 <Mat_VarRead@plt+0xa284>
  40c3f7:	lea    rsi,[rip+0x4b3d]        # 410f3b <getopt_long_only@@Base+0x3ddb>
  40c3fe:	mov    rdi,rbx
  40c401:	call   402210 <strcmp@plt>
  40c406:	test   eax,eax
  40c408:	je     40c621 <Mat_VarRead@plt+0xa291>
  40c40e:	lea    rsi,[rip+0x4bf2]        # 411007 <getopt_long_only@@Base+0x3ea7>
  40c415:	mov    rdi,rbx
  40c418:	call   402210 <strcmp@plt>
  40c41d:	test   eax,eax
  40c41f:	je     40c62e <Mat_VarRead@plt+0xa29e>
  40c425:	lea    rsi,[rip+0x4d49]        # 411175 <getopt_long_only@@Base+0x4015>
  40c42c:	mov    rdi,rbx
  40c42f:	call   402210 <strcmp@plt>
  40c434:	test   eax,eax
  40c436:	je     40c63b <Mat_VarRead@plt+0xa2ab>
  40c43c:	lea    rsi,[rip+0x4e5b]        # 41129e <getopt_long_only@@Base+0x413e>
  40c443:	mov    rdi,rbx
  40c446:	call   402210 <strcmp@plt>
  40c44b:	test   eax,eax
  40c44d:	je     40c648 <Mat_VarRead@plt+0xa2b8>
  40c453:	lea    rsi,[rip+0x4efd]        # 411357 <getopt_long_only@@Base+0x41f7>
  40c45a:	mov    rdi,rbx
  40c45d:	call   402210 <strcmp@plt>
  40c462:	test   eax,eax
  40c464:	je     40c655 <Mat_VarRead@plt+0xa2c5>
  40c46a:	lea    rsi,[rip+0x5143]        # 4115b4 <getopt_long_only@@Base+0x4454>
  40c471:	mov    rdi,rbx
  40c474:	call   402210 <strcmp@plt>
  40c479:	test   eax,eax
  40c47b:	je     40c662 <Mat_VarRead@plt+0xa2d2>
  40c481:	lea    rsi,[rip+0x52d2]        # 41175a <getopt_long_only@@Base+0x45fa>
  40c488:	mov    rdi,rbx
  40c48b:	call   402210 <strcmp@plt>
  40c490:	test   eax,eax
  40c492:	je     40c66f <Mat_VarRead@plt+0xa2df>
  40c498:	lea    rsi,[rip+0x5425]        # 4118c4 <getopt_long_only@@Base+0x4764>
  40c49f:	mov    rdi,rbx
  40c4a2:	call   402210 <strcmp@plt>
  40c4a7:	test   eax,eax
  40c4a9:	je     40c67c <Mat_VarRead@plt+0xa2ec>
  40c4af:	lea    rsi,[rip+0x5591]        # 411a47 <getopt_long_only@@Base+0x48e7>
  40c4b6:	mov    rdi,rbx
  40c4b9:	call   402210 <strcmp@plt>
  40c4be:	test   eax,eax
  40c4c0:	je     40c689 <Mat_VarRead@plt+0xa2f9>
  40c4c6:	lea    rsi,[rip+0x57c3]        # 411c90 <getopt_long_only@@Base+0x4b30>
  40c4cd:	mov    rdi,rbx
  40c4d0:	call   402210 <strcmp@plt>
  40c4d5:	test   eax,eax
  40c4d7:	je     40c696 <Mat_VarRead@plt+0xa306>
  40c4dd:	lea    rsi,[rip+0x58e8]        # 411dcc <getopt_long_only@@Base+0x4c6c>
  40c4e4:	mov    rdi,rbx
  40c4e7:	call   402210 <strcmp@plt>
  40c4ec:	test   eax,eax
  40c4ee:	je     40c6a3 <Mat_VarRead@plt+0xa313>
  40c4f4:	lea    rsi,[rip+0x5a07]        # 411f02 <getopt_long_only@@Base+0x4da2>
  40c4fb:	mov    rdi,rbx
  40c4fe:	call   402210 <strcmp@plt>
  40c503:	test   eax,eax
  40c505:	je     40c6b0 <Mat_VarRead@plt+0xa320>
  40c50b:	lea    rsi,[rip+0x5a9d]        # 411faf <getopt_long_only@@Base+0x4e4f>
  40c512:	mov    rdi,rbx
  40c515:	call   402210 <strcmp@plt>
  40c51a:	test   eax,eax
  40c51c:	je     40c6bd <Mat_VarRead@plt+0xa32d>
  40c522:	lea    rsi,[rip+0x5b39]        # 412062 <getopt_long_only@@Base+0x4f02>
  40c529:	mov    rdi,rbx
  40c52c:	call   402210 <strcmp@plt>
  40c531:	test   eax,eax
  40c533:	je     40c6ca <Mat_VarRead@plt+0xa33a>
  40c539:	lea    rsi,[rip+0x5c62]        # 4121a2 <getopt_long_only@@Base+0x5042>
  40c540:	mov    rdi,rbx
  40c543:	call   402210 <strcmp@plt>
  40c548:	test   eax,eax
  40c54a:	je     40c6d7 <Mat_VarRead@plt+0xa347>
  40c550:	lea    rsi,[rip+0x5cd4]        # 41222b <getopt_long_only@@Base+0x50cb>
  40c557:	mov    rdi,rbx
  40c55a:	call   402210 <strcmp@plt>
  40c55f:	test   eax,eax
  40c561:	je     40c6e4 <Mat_VarRead@plt+0xa354>
  40c567:	lea    rsi,[rip+0x5d46]        # 4122b4 <getopt_long_only@@Base+0x5154>
  40c56e:	mov    rdi,rbx
  40c571:	call   402210 <strcmp@plt>
  40c576:	test   eax,eax
  40c578:	je     40c6f1 <Mat_VarRead@plt+0xa361>
  40c57e:	lea    rsi,[rip+0x5f27]        # 4124ac <getopt_long_only@@Base+0x534c>
  40c585:	mov    rdi,rbx
  40c588:	call   402210 <strcmp@plt>
  40c58d:	test   eax,eax
  40c58f:	je     40c6fe <Mat_VarRead@plt+0xa36e>
  40c595:	lea    rsi,[rip+0x600f]        # 4125ab <getopt_long_only@@Base+0x544b>
  40c59c:	mov    rdi,rbx
  40c59f:	call   402210 <strcmp@plt>
  40c5a4:	test   eax,eax
  40c5a6:	jne    40c70b <Mat_VarRead@plt+0xa37b>
  40c5ac:	lea    rdi,[rip+0x9e2d]        # 4163e0 <getopt_long_only@@Base+0x9280>
  40c5b3:	pop    rbx
  40c5b4:	jmp    402330 <Mat_Help@plt>
  40c5b9:	lea    rdi,[rip+0x9160]        # 415720 <getopt_long_only@@Base+0x85c0>
  40c5c0:	pop    rbx
  40c5c1:	jmp    402330 <Mat_Help@plt>
  40c5c6:	lea    rdi,[rip+0x9193]        # 415760 <getopt_long_only@@Base+0x8600>
  40c5cd:	pop    rbx
  40c5ce:	jmp    402330 <Mat_Help@plt>
  40c5d3:	lea    rdi,[rip+0x91c6]        # 4157a0 <getopt_long_only@@Base+0x8640>
  40c5da:	pop    rbx
  40c5db:	jmp    402330 <Mat_Help@plt>
  40c5e0:	lea    rdi,[rip+0x91f9]        # 4157e0 <getopt_long_only@@Base+0x8680>
  40c5e7:	pop    rbx
  40c5e8:	jmp    402330 <Mat_Help@plt>
  40c5ed:	lea    rdi,[rip+0x922c]        # 415820 <getopt_long_only@@Base+0x86c0>
  40c5f4:	pop    rbx
  40c5f5:	jmp    402330 <Mat_Help@plt>
  40c5fa:	lea    rdi,[rip+0x92af]        # 4158b0 <getopt_long_only@@Base+0x8750>
  40c601:	pop    rbx
  40c602:	jmp    402330 <Mat_Help@plt>
  40c607:	lea    rdi,[rip+0x9332]        # 415940 <getopt_long_only@@Base+0x87e0>
  40c60e:	pop    rbx
  40c60f:	jmp    402330 <Mat_Help@plt>
  40c614:	lea    rdi,[rip+0x93c5]        # 4159e0 <getopt_long_only@@Base+0x8880>
  40c61b:	pop    rbx
  40c61c:	jmp    402330 <Mat_Help@plt>
  40c621:	lea    rdi,[rip+0x9458]        # 415a80 <getopt_long_only@@Base+0x8920>
  40c628:	pop    rbx
  40c629:	jmp    402330 <Mat_Help@plt>
  40c62e:	lea    rdi,[rip+0x94eb]        # 415b20 <getopt_long_only@@Base+0x89c0>
  40c635:	pop    rbx
  40c636:	jmp    402330 <Mat_Help@plt>
  40c63b:	lea    rdi,[rip+0x955e]        # 415ba0 <getopt_long_only@@Base+0x8a40>
  40c642:	pop    rbx
  40c643:	jmp    402330 <Mat_Help@plt>
  40c648:	lea    rdi,[rip+0x95e1]        # 415c30 <getopt_long_only@@Base+0x8ad0>
  40c64f:	pop    rbx
  40c650:	jmp    402330 <Mat_Help@plt>
  40c655:	lea    rdi,[rip+0x9644]        # 415ca0 <getopt_long_only@@Base+0x8b40>
  40c65c:	pop    rbx
  40c65d:	jmp    402330 <Mat_Help@plt>
  40c662:	lea    rdi,[rip+0x96e7]        # 415d50 <getopt_long_only@@Base+0x8bf0>
  40c669:	pop    rbx
  40c66a:	jmp    402330 <Mat_Help@plt>
  40c66f:	lea    rdi,[rip+0x978a]        # 415e00 <getopt_long_only@@Base+0x8ca0>
  40c676:	pop    rbx
  40c677:	jmp    402330 <Mat_Help@plt>
  40c67c:	lea    rdi,[rip+0x980d]        # 415e90 <getopt_long_only@@Base+0x8d30>
  40c683:	pop    rbx
  40c684:	jmp    402330 <Mat_Help@plt>
  40c689:	lea    rdi,[rip+0x98a0]        # 415f30 <getopt_long_only@@Base+0x8dd0>
  40c690:	pop    rbx
  40c691:	jmp    402330 <Mat_Help@plt>
  40c696:	lea    rdi,[rip+0x9933]        # 415fd0 <getopt_long_only@@Base+0x8e70>
  40c69d:	pop    rbx
  40c69e:	jmp    402330 <Mat_Help@plt>
  40c6a3:	lea    rdi,[rip+0x99c6]        # 416070 <getopt_long_only@@Base+0x8f10>
  40c6aa:	pop    rbx
  40c6ab:	jmp    402330 <Mat_Help@plt>
  40c6b0:	lea    rdi,[rip+0x9a59]        # 416110 <getopt_long_only@@Base+0x8fb0>
  40c6b7:	pop    rbx
  40c6b8:	jmp    402330 <Mat_Help@plt>
  40c6bd:	lea    rdi,[rip+0x9acc]        # 416190 <getopt_long_only@@Base+0x9030>
  40c6c4:	pop    rbx
  40c6c5:	jmp    402330 <Mat_Help@plt>
  40c6ca:	lea    rdi,[rip+0x9b3f]        # 416210 <getopt_long_only@@Base+0x90b0>
  40c6d1:	pop    rbx
  40c6d2:	jmp    402330 <Mat_Help@plt>
  40c6d7:	lea    rdi,[rip+0x9bc2]        # 4162a0 <getopt_long_only@@Base+0x9140>
  40c6de:	pop    rbx
  40c6df:	jmp    402330 <Mat_Help@plt>
  40c6e4:	lea    rdi,[rip+0x9bf5]        # 4162e0 <getopt_long_only@@Base+0x9180>
  40c6eb:	pop    rbx
  40c6ec:	jmp    402330 <Mat_Help@plt>
  40c6f1:	lea    rdi,[rip+0x9c28]        # 416320 <getopt_long_only@@Base+0x91c0>
  40c6f8:	pop    rbx
  40c6f9:	jmp    402330 <Mat_Help@plt>
  40c6fe:	lea    rdi,[rip+0x9c8b]        # 416390 <getopt_long_only@@Base+0x9230>
  40c705:	pop    rbx
  40c706:	jmp    402330 <Mat_Help@plt>
  40c70b:	mov    edi,0x1
  40c710:	call   402340 <exit@plt>
  40c715:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40c71f:	nop

000000000040c720 <getopt@@Base>:
  40c720:	xor    ecx,ecx
  40c722:	xor    r8d,r8d
  40c725:	xor    r9d,r9d
  40c728:	jmp    40c730 <getopt@@Base+0x10>
  40c72a:	nop    WORD PTR [rax+rax*1+0x0]
  40c730:	push   rbp
  40c731:	push   r15
  40c733:	push   r14
  40c735:	push   r13
  40c737:	push   r12
  40c739:	push   rbx
  40c73a:	sub    rsp,0x58
  40c73e:	mov    eax,0xffffffff
  40c743:	test   rdx,rdx
  40c746:	je     40d03a <getopt@@Base+0x91a>
  40c74c:	mov    r13d,r9d
  40c74f:	mov    rbp,rdx
  40c752:	mov    rbx,rsi
  40c755:	mov    r12d,edi
  40c758:	mov    QWORD PTR [rsp+0x38],rcx
  40c75d:	mov    QWORD PTR [rsp+0x48],r8
  40c762:	lea    rdi,[rip+0x645d]        # 412bc6 <getopt_long_only@@Base+0x5a66>
  40c769:	call   402040 <getenv@plt>
  40c76e:	mov    cl,BYTE PTR [rbp+0x0]
  40c771:	cmp    cl,0x2d
  40c774:	mov    QWORD PTR [rsp+0x50],rax
  40c779:	jne    40c784 <getopt@@Base+0x64>
  40c77b:	or     r13d,0x2
  40c77f:	mov    edx,r13d
  40c782:	jmp    40c79d <getopt@@Base+0x7d>
  40c784:	mov    edx,r13d
  40c787:	and    edx,0xfffffffe
  40c78a:	cmp    cl,0x2b
  40c78d:	cmove  r13d,edx
  40c791:	test   rax,rax
  40c794:	cmovne r13d,edx
  40c798:	cmp    cl,0x2b
  40c79b:	jne    40c7a4 <getopt@@Base+0x84>
  40c79d:	add    rbp,0x1
  40c7a1:	mov    r13d,edx
  40c7a4:	lea    r15,[rip+0x9c89]        # 416434 <optind@@Base>
  40c7ab:	mov    esi,DWORD PTR [r15]
  40c7ae:	lea    rax,[rip+0x9cab]        # 416460 <optopt@@Base+0x28>
  40c7b5:	test   esi,esi
  40c7b7:	je     40c7d1 <getopt@@Base+0xb1>
  40c7b9:	mov    eax,DWORD PTR [rax]
  40c7bb:	lea    rcx,[rip+0x9ca6]        # 416468 <optarg@@Base>
  40c7c2:	mov    QWORD PTR [rcx],0x0
  40c7c9:	test   eax,eax
  40c7cb:	jne    40c7f6 <getopt@@Base+0xd6>
  40c7cd:	xor    eax,eax
  40c7cf:	jmp    40c80a <getopt@@Base+0xea>
  40c7d1:	mov    DWORD PTR [rax],0x1
  40c7d7:	mov    DWORD PTR [r15],0x1
  40c7de:	lea    rax,[rip+0x9c83]        # 416468 <optarg@@Base>
  40c7e5:	mov    QWORD PTR [rax],0x0
  40c7ec:	mov    esi,0x1
  40c7f1:	mov    eax,0x1
  40c7f6:	mov    DWORD PTR [rip+0x9c3c],0xffffffff        # 41643c <optopt@@Base+0x4>
  40c800:	mov    DWORD PTR [rip+0x9c36],0xffffffff        # 416440 <optopt@@Base+0x8>
  40c80a:	mov    QWORD PTR [rsp+0x20],rbp
  40c80f:	lea    rdx,[rip+0x9c4a]        # 416460 <optopt@@Base+0x28>
  40c816:	lea    rcx,[rip+0x6149]        # 412966 <getopt_long_only@@Base+0x5806>
  40c81d:	mov    r11,rbx
  40c820:	mov    DWORD PTR [rsp+0x28],r12d
  40c825:	mov    DWORD PTR [rsp+0x44],r13d
  40c82a:	test   eax,eax
  40c82c:	jne    40c850 <getopt@@Base+0x130>
  40c82e:	jmp    40c83c <getopt@@Base+0x11c>
  40c830:	add    esi,0x1
  40c833:	mov    DWORD PTR [r15],esi
  40c836:	xor    eax,eax
  40c838:	test   eax,eax
  40c83a:	jne    40c850 <getopt@@Base+0x130>
  40c83c:	mov    rbp,QWORD PTR [rip+0x9c05]        # 416448 <optopt@@Base+0x10>
  40c843:	mov    r14b,BYTE PTR [rbp+0x0]
  40c847:	test   r14b,r14b
  40c84a:	jne    40cc98 <getopt@@Base+0x578>
  40c850:	mov    DWORD PTR [rdx],0x0
  40c856:	cmp    esi,r12d
  40c859:	jge    40ca8b <getopt@@Base+0x36b>
  40c85f:	movsxd rax,esi
  40c862:	mov    rax,QWORD PTR [rbx+rax*8]
  40c866:	mov    QWORD PTR [rip+0x9bdb],rax        # 416448 <optopt@@Base+0x10>
  40c86d:	cmp    BYTE PTR [rax],0x2d
  40c870:	jne    40c87f <getopt@@Base+0x15f>
  40c872:	mov    r14b,BYTE PTR [rax+0x1]
  40c876:	test   r14b,r14b
  40c879:	jne    40cc59 <getopt@@Base+0x539>
  40c87f:	mov    QWORD PTR [rip+0x9bc2],rcx        # 416448 <optopt@@Base+0x10>
  40c886:	test   r13b,0x2
  40c88a:	jne    40cc35 <getopt@@Base+0x515>
  40c890:	test   r13b,0x1
  40c894:	je     40cc4f <getopt@@Base+0x52f>
  40c89a:	mov    edi,DWORD PTR [rip+0x9ba0]        # 416440 <optopt@@Base+0x8>
  40c8a0:	cmp    edi,0xffffffff
  40c8a3:	je     40ca80 <getopt@@Base+0x360>
  40c8a9:	movsxd rbp,DWORD PTR [rip+0x9b8c]        # 41643c <optopt@@Base+0x4>
  40c8b0:	cmp    rbp,0xffffffffffffffff
  40c8b4:	je     40c830 <getopt@@Base+0x110>
  40c8ba:	mov    r9d,esi
  40c8bd:	sub    r9d,ebp
  40c8c0:	mov    r10d,ebp
  40c8c3:	sub    r10d,edi
  40c8c6:	mov    eax,r10d
  40c8c9:	cdq    
  40c8ca:	idiv   r9d
  40c8cd:	mov    ecx,r9d
  40c8d0:	test   edx,edx
  40c8d2:	je     40c8eb <getopt@@Base+0x1cb>
  40c8d4:	mov    eax,r9d
  40c8d7:	nop    WORD PTR [rax+rax*1+0x0]
  40c8e0:	mov    ecx,edx
  40c8e2:	cdq    
  40c8e3:	idiv   ecx
  40c8e5:	mov    eax,ecx
  40c8e7:	test   edx,edx
  40c8e9:	jne    40c8e0 <getopt@@Base+0x1c0>
  40c8eb:	mov    DWORD PTR [rsp+0x10],esi
  40c8ef:	mov    DWORD PTR [rsp+0x2c],edi
  40c8f3:	sub    esi,edi
  40c8f5:	mov    eax,esi
  40c8f7:	cdq    
  40c8f8:	idiv   ecx
  40c8fa:	test   ecx,ecx
  40c8fc:	jle    40ca31 <getopt@@Base+0x311>
  40c902:	neg    r10d
  40c905:	mov    ecx,ecx
  40c907:	mov    QWORD PTR [rsp+0x8],rcx
  40c90c:	lea    ecx,[rax-0x1]
  40c90f:	mov    DWORD PTR [rsp+0x30],ecx
  40c913:	mov    ecx,eax
  40c915:	and    ecx,0x3
  40c918:	mov    edx,ecx
  40c91a:	sub    edx,eax
  40c91c:	mov    DWORD PTR [rsp+0x14],edx
  40c920:	mov    DWORD PTR [rsp+0x1c],ecx
  40c924:	neg    ecx
  40c926:	mov    DWORD PTR [rsp+0x18],ecx
  40c92a:	xor    r8d,r8d
  40c92d:	nop    DWORD PTR [rax]
  40c930:	test   eax,eax
  40c932:	jle    40ca22 <getopt@@Base+0x302>
  40c938:	lea    r13,[r8+rbp*1]
  40c93c:	mov    r12,QWORD PTR [rbx+r13*8]
  40c940:	cmp    DWORD PTR [rsp+0x30],0x3
  40c945:	jae    40c960 <getopt@@Base+0x240>
  40c947:	mov    ecx,r13d
  40c94a:	cmp    DWORD PTR [rsp+0x1c],0x0
  40c94f:	jne    40c9ef <getopt@@Base+0x2cf>
  40c955:	jmp    40ca22 <getopt@@Base+0x302>
  40c95a:	nop    WORD PTR [rax+rax*1+0x0]
  40c960:	mov    r15d,DWORD PTR [rsp+0x14]
  40c965:	mov    ecx,r13d
  40c968:	nop    DWORD PTR [rax+rax*1+0x0]
  40c970:	mov    edi,r9d
  40c973:	cmp    ecx,ebp
  40c975:	jl     40c97a <getopt@@Base+0x25a>
  40c977:	mov    edi,r10d
  40c97a:	add    edi,ecx
  40c97c:	movsxd rdx,edi
  40c97f:	mov    r14,QWORD PTR [rbx+rdx*8]
  40c983:	mov    QWORD PTR [rbx+rdx*8],r12
  40c987:	mov    QWORD PTR [rbx+r13*8],r14
  40c98b:	mov    ecx,r9d
  40c98e:	cmp    edx,ebp
  40c990:	jl     40c995 <getopt@@Base+0x275>
  40c992:	mov    ecx,r10d
  40c995:	add    ecx,edi
  40c997:	movsxd rsi,ecx
  40c99a:	mov    rdx,QWORD PTR [rbx+rsi*8]
  40c99e:	mov    QWORD PTR [rbx+rsi*8],r14
  40c9a2:	mov    QWORD PTR [rbx+r13*8],rdx
  40c9a6:	mov    edi,r9d
  40c9a9:	cmp    esi,ebp
  40c9ab:	jl     40c9b0 <getopt@@Base+0x290>
  40c9ad:	mov    edi,r10d
  40c9b0:	add    edi,ecx
  40c9b2:	movsxd rbx,edi
  40c9b5:	mov    rcx,r11
  40c9b8:	mov    rsi,QWORD PTR [r11+rbx*8]
  40c9bc:	mov    QWORD PTR [r11+rbx*8],rdx
  40c9c0:	mov    QWORD PTR [r11+r13*8],rsi
  40c9c4:	mov    ecx,r9d
  40c9c7:	cmp    ebx,ebp
  40c9c9:	jl     40c9ce <getopt@@Base+0x2ae>
  40c9cb:	mov    ecx,r10d
  40c9ce:	add    ecx,edi
  40c9d0:	movsxd rdx,ecx
  40c9d3:	mov    rbx,r11
  40c9d6:	mov    r12,QWORD PTR [r11+rdx*8]
  40c9da:	mov    QWORD PTR [r11+rdx*8],rsi
  40c9de:	mov    QWORD PTR [r11+r13*8],r12
  40c9e2:	add    r15d,0x4
  40c9e6:	jne    40c970 <getopt@@Base+0x250>
  40c9e8:	cmp    DWORD PTR [rsp+0x1c],0x0
  40c9ed:	je     40ca22 <getopt@@Base+0x302>
  40c9ef:	mov    edi,DWORD PTR [rsp+0x18]
  40c9f3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40c9fd:	nop    DWORD PTR [rax]
  40ca00:	cmp    ecx,ebp
  40ca02:	mov    edx,r10d
  40ca05:	cmovl  edx,r9d
  40ca09:	add    ecx,edx
  40ca0b:	movsxd rdx,ecx
  40ca0e:	mov    rsi,QWORD PTR [rbx+rdx*8]
  40ca12:	mov    QWORD PTR [rbx+rdx*8],r12
  40ca16:	mov    QWORD PTR [rbx+r13*8],rsi
  40ca1a:	mov    r12,rsi
  40ca1d:	add    edi,0x1
  40ca20:	jne    40ca00 <getopt@@Base+0x2e0>
  40ca22:	add    r8,0x1
  40ca26:	cmp    r8,QWORD PTR [rsp+0x8]
  40ca2b:	jne    40c930 <getopt@@Base+0x210>
  40ca31:	mov    esi,DWORD PTR [rsp+0x10]
  40ca35:	mov    eax,DWORD PTR [rsp+0x2c]
  40ca39:	add    eax,esi
  40ca3b:	sub    eax,ebp
  40ca3d:	mov    DWORD PTR [rip+0x99fd],eax        # 416440 <optopt@@Base+0x8>
  40ca43:	mov    DWORD PTR [rip+0x99ef],0xffffffff        # 41643c <optopt@@Base+0x4>
  40ca4d:	lea    r15,[rip+0x99e0]        # 416434 <optind@@Base>
  40ca54:	mov    r12d,DWORD PTR [rsp+0x28]
  40ca59:	mov    r13d,DWORD PTR [rsp+0x44]
  40ca5e:	lea    rcx,[rip+0x5f01]        # 412966 <getopt_long_only@@Base+0x5806>
  40ca65:	lea    rdx,[rip+0x99f4]        # 416460 <optopt@@Base+0x28>
  40ca6c:	jmp    40c830 <getopt@@Base+0x110>
  40ca71:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40ca7b:	nop    DWORD PTR [rax+rax*1+0x0]
  40ca80:	mov    DWORD PTR [rip+0x99ba],esi        # 416440 <optopt@@Base+0x8>
  40ca86:	jmp    40c830 <getopt@@Base+0x110>
  40ca8b:	mov    QWORD PTR [rip+0x99b6],rcx        # 416448 <optopt@@Base+0x10>
  40ca92:	movsxd r9,DWORD PTR [rip+0x99a3]        # 41643c <optopt@@Base+0x4>
  40ca99:	mov    edi,DWORD PTR [rip+0x99a1]        # 416440 <optopt@@Base+0x8>
  40ca9f:	cmp    r9,0xffffffffffffffff
  40caa3:	je     40cd03 <getopt@@Base+0x5e3>
  40caa9:	mov    r10d,esi
  40caac:	sub    r10d,r9d
  40caaf:	mov    r13d,r9d
  40cab2:	sub    r13d,edi
  40cab5:	mov    eax,r13d
  40cab8:	cdq    
  40cab9:	idiv   r10d
  40cabc:	mov    ecx,r10d
  40cabf:	test   edx,edx
  40cac1:	je     40cadb <getopt@@Base+0x3bb>
  40cac3:	mov    eax,r10d
  40cac6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40cad0:	mov    ecx,edx
  40cad2:	cdq    
  40cad3:	idiv   ecx
  40cad5:	mov    eax,ecx
  40cad7:	test   edx,edx
  40cad9:	jne    40cad0 <getopt@@Base+0x3b0>
  40cadb:	mov    DWORD PTR [rsp+0x10],edi
  40cadf:	sub    esi,edi
  40cae1:	mov    eax,esi
  40cae3:	cdq    
  40cae4:	idiv   ecx
  40cae6:	test   ecx,ecx
  40cae8:	jle    40cc22 <getopt@@Base+0x502>
  40caee:	neg    r13d
  40caf1:	mov    ecx,ecx
  40caf3:	mov    QWORD PTR [rsp+0x8],rcx
  40caf8:	lea    ecx,[rax-0x1]
  40cafb:	mov    DWORD PTR [rsp+0x30],ecx
  40caff:	mov    ecx,eax
  40cb01:	and    ecx,0x3
  40cb04:	mov    edx,ecx
  40cb06:	sub    edx,eax
  40cb08:	mov    DWORD PTR [rsp+0x14],edx
  40cb0c:	mov    DWORD PTR [rsp+0x1c],ecx
  40cb10:	neg    ecx
  40cb12:	mov    DWORD PTR [rsp+0x18],ecx
  40cb16:	xor    r12d,r12d
  40cb19:	nop    DWORD PTR [rax+0x0]
  40cb20:	test   eax,eax
  40cb22:	jle    40cc13 <getopt@@Base+0x4f3>
  40cb28:	lea    r14,[r12+r9*1]
  40cb2c:	mov    r8,QWORD PTR [rbx+r14*8]
  40cb30:	cmp    DWORD PTR [rsp+0x30],0x3
  40cb35:	jae    40cb50 <getopt@@Base+0x430>
  40cb37:	mov    edi,r14d
  40cb3a:	cmp    DWORD PTR [rsp+0x1c],0x0
  40cb3f:	jne    40cbdd <getopt@@Base+0x4bd>
  40cb45:	jmp    40cc13 <getopt@@Base+0x4f3>
  40cb4a:	nop    WORD PTR [rax+rax*1+0x0]
  40cb50:	mov    r15d,DWORD PTR [rsp+0x14]
  40cb55:	mov    edi,r14d
  40cb58:	nop    DWORD PTR [rax+rax*1+0x0]
  40cb60:	mov    esi,r10d
  40cb63:	cmp    edi,r9d
  40cb66:	jl     40cb6b <getopt@@Base+0x44b>
  40cb68:	mov    esi,r13d
  40cb6b:	add    esi,edi
  40cb6d:	movsxd rcx,esi
  40cb70:	mov    r11,QWORD PTR [rbx+rcx*8]
  40cb74:	mov    QWORD PTR [rbx+rcx*8],r8
  40cb78:	mov    QWORD PTR [rbx+r14*8],r11
  40cb7c:	mov    edi,r10d
  40cb7f:	cmp    ecx,r9d
  40cb82:	jl     40cb87 <getopt@@Base+0x467>
  40cb84:	mov    edi,r13d
  40cb87:	add    edi,esi
  40cb89:	movsxd rcx,edi
  40cb8c:	mov    rbp,QWORD PTR [rbx+rcx*8]
  40cb90:	mov    QWORD PTR [rbx+rcx*8],r11
  40cb94:	mov    QWORD PTR [rbx+r14*8],rbp
  40cb98:	mov    esi,r10d
  40cb9b:	cmp    ecx,r9d
  40cb9e:	jl     40cba3 <getopt@@Base+0x483>
  40cba0:	mov    esi,r13d
  40cba3:	add    esi,edi
  40cba5:	movsxd rdx,esi
  40cba8:	mov    rcx,QWORD PTR [rbx+rdx*8]
  40cbac:	mov    QWORD PTR [rbx+rdx*8],rbp
  40cbb0:	mov    QWORD PTR [rbx+r14*8],rcx
  40cbb4:	mov    edi,r10d
  40cbb7:	cmp    edx,r9d
  40cbba:	jl     40cbbf <getopt@@Base+0x49f>
  40cbbc:	mov    edi,r13d
  40cbbf:	add    edi,esi
  40cbc1:	movsxd rdx,edi
  40cbc4:	mov    r8,QWORD PTR [rbx+rdx*8]
  40cbc8:	mov    QWORD PTR [rbx+rdx*8],rcx
  40cbcc:	mov    QWORD PTR [rbx+r14*8],r8
  40cbd0:	add    r15d,0x4
  40cbd4:	jne    40cb60 <getopt@@Base+0x440>
  40cbd6:	cmp    DWORD PTR [rsp+0x1c],0x0
  40cbdb:	je     40cc13 <getopt@@Base+0x4f3>
  40cbdd:	mov    edx,DWORD PTR [rsp+0x18]
  40cbe1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40cbeb:	nop    DWORD PTR [rax+rax*1+0x0]
  40cbf0:	cmp    edi,r9d
  40cbf3:	mov    ecx,r13d
  40cbf6:	cmovl  ecx,r10d
  40cbfa:	add    edi,ecx
  40cbfc:	movsxd rcx,edi
  40cbff:	mov    rsi,QWORD PTR [rbx+rcx*8]
  40cc03:	mov    QWORD PTR [rbx+rcx*8],r8
  40cc07:	mov    QWORD PTR [rbx+r14*8],rsi
  40cc0b:	mov    r8,rsi
  40cc0e:	add    edx,0x1
  40cc11:	jne    40cbf0 <getopt@@Base+0x4d0>
  40cc13:	add    r12,0x1
  40cc17:	cmp    r12,QWORD PTR [rsp+0x8]
  40cc1c:	jne    40cb20 <getopt@@Base+0x400>
  40cc22:	mov    edi,DWORD PTR [rsp+0x10]
  40cc26:	add    edi,r10d
  40cc29:	lea    r15,[rip+0x9804]        # 416434 <optind@@Base>
  40cc30:	jmp    40cd08 <getopt@@Base+0x5e8>
  40cc35:	add    esi,0x1
  40cc38:	mov    DWORD PTR [r15],esi
  40cc3b:	lea    rcx,[rip+0x9826]        # 416468 <optarg@@Base>
  40cc42:	mov    QWORD PTR [rcx],rax
  40cc45:	mov    eax,0x1
  40cc4a:	jmp    40d03a <getopt@@Base+0x91a>
  40cc4f:	mov    eax,0xffffffff
  40cc54:	jmp    40d03a <getopt@@Base+0x91a>
  40cc59:	lea    rbp,[rax+0x1]
  40cc5d:	mov    edi,DWORD PTR [rip+0x97dd]        # 416440 <optopt@@Base+0x8>
  40cc63:	mov    r8d,DWORD PTR [rip+0x97d2]        # 41643c <optopt@@Base+0x4>
  40cc6a:	cmp    edi,0xffffffff
  40cc6d:	je     40cc7e <getopt@@Base+0x55e>
  40cc6f:	cmp    r8d,0xffffffff
  40cc73:	jne    40cc7e <getopt@@Base+0x55e>
  40cc75:	mov    DWORD PTR [rip+0x97c1],esi        # 41643c <optopt@@Base+0x4>
  40cc7b:	mov    r8d,esi
  40cc7e:	mov    QWORD PTR [rip+0x97c3],rbp        # 416448 <optopt@@Base+0x10>
  40cc85:	cmp    r14b,0x2d
  40cc89:	jne    40cc98 <getopt@@Base+0x578>
  40cc8b:	mov    r14b,0x2d
  40cc8e:	cmp    BYTE PTR [rax+0x2],0x0
  40cc92:	je     40cd29 <getopt@@Base+0x609>
  40cc98:	mov    rdx,QWORD PTR [rsp+0x38]
  40cc9d:	test   rdx,rdx
  40cca0:	je     40cf19 <getopt@@Base+0x7f9>
  40cca6:	movsxd rax,esi
  40cca9:	cmp    rbp,QWORD PTR [rbx+rax*8]
  40ccad:	je     40cf19 <getopt@@Base+0x7f9>
  40ccb3:	test   r13b,0x4
  40ccb7:	jne    40ccc3 <getopt@@Base+0x5a3>
  40ccb9:	cmp    r14b,0x2d
  40ccbd:	jne    40cf19 <getopt@@Base+0x7f9>
  40ccc3:	mov    DWORD PTR [rip+0x9783],0x0        # 416450 <optopt@@Base+0x18>
  40cccd:	xor    r8d,r8d
  40ccd0:	cmp    r14b,0x3a
  40ccd4:	je     40cecb <getopt@@Base+0x7ab>
  40ccda:	cmp    r14b,0x2d
  40ccde:	jne    40ced2 <getopt@@Base+0x7b2>
  40cce4:	add    rbp,0x1
  40cce8:	mov    QWORD PTR [rip+0x9759],rbp        # 416448 <optopt@@Base+0x10>
  40ccef:	mov    DWORD PTR [rip+0x9757],0x1        # 416450 <optopt@@Base+0x18>
  40ccf9:	mov    rbp,QWORD PTR [rsp+0x20]
  40ccfe:	jmp    40cef2 <getopt@@Base+0x7d2>
  40cd03:	cmp    edi,0xffffffff
  40cd06:	je     40cd0b <getopt@@Base+0x5eb>
  40cd08:	mov    DWORD PTR [r15],edi
  40cd0b:	mov    DWORD PTR [rip+0x9727],0xffffffff        # 41643c <optopt@@Base+0x4>
  40cd15:	mov    DWORD PTR [rip+0x9721],0xffffffff        # 416440 <optopt@@Base+0x8>
  40cd1f:	mov    eax,0xffffffff
  40cd24:	jmp    40d03a <getopt@@Base+0x91a>
  40cd29:	add    esi,0x1
  40cd2c:	mov    DWORD PTR [r15],esi
  40cd2f:	mov    QWORD PTR [rip+0x9712],rcx        # 416448 <optopt@@Base+0x10>
  40cd36:	cmp    r8d,0xffffffff
  40cd3a:	je     40cd0b <getopt@@Base+0x5eb>
  40cd3c:	mov    r9d,r8d
  40cd3f:	sub    r9d,edi
  40cd42:	mov    r12d,esi
  40cd45:	sub    r12d,r8d
  40cd48:	mov    eax,r9d
  40cd4b:	cdq    
  40cd4c:	idiv   r12d
  40cd4f:	mov    ecx,r12d
  40cd52:	test   edx,edx
  40cd54:	je     40cd64 <getopt@@Base+0x644>
  40cd56:	mov    eax,r12d
  40cd59:	mov    ecx,edx
  40cd5b:	cdq    
  40cd5c:	idiv   ecx
  40cd5e:	mov    eax,ecx
  40cd60:	test   edx,edx
  40cd62:	jne    40cd59 <getopt@@Base+0x639>
  40cd64:	mov    DWORD PTR [rsp+0x10],esi
  40cd68:	mov    DWORD PTR [rsp+0x28],edi
  40cd6c:	sub    esi,edi
  40cd6e:	mov    eax,esi
  40cd70:	cdq    
  40cd71:	idiv   ecx
  40cd73:	test   ecx,ecx
  40cd75:	jle    40ceb2 <getopt@@Base+0x792>
  40cd7b:	neg    r9d
  40cd7e:	movsxd rdx,r8d
  40cd81:	mov    QWORD PTR [rsp+0x30],rdx
  40cd86:	mov    ecx,ecx
  40cd88:	mov    QWORD PTR [rsp+0x8],rcx
  40cd8d:	lea    ecx,[rax-0x1]
  40cd90:	mov    DWORD PTR [rsp+0x1c],ecx
  40cd94:	mov    ecx,eax
  40cd96:	and    ecx,0x3
  40cd99:	mov    edx,ecx
  40cd9b:	sub    edx,eax
  40cd9d:	mov    DWORD PTR [rsp+0x2c],edx
  40cda1:	mov    DWORD PTR [rsp+0x18],ecx
  40cda5:	neg    ecx
  40cda7:	mov    DWORD PTR [rsp+0x14],ecx
  40cdab:	xor    r10d,r10d
  40cdae:	test   eax,eax
  40cdb0:	jle    40cea3 <getopt@@Base+0x783>
  40cdb6:	mov    rcx,QWORD PTR [rsp+0x30]
  40cdbb:	lea    rbp,[r10+rcx*1]
  40cdbf:	mov    r15,QWORD PTR [rbx+rbp*8]
  40cdc3:	cmp    DWORD PTR [rsp+0x1c],0x3
  40cdc8:	jae    40cddc <getopt@@Base+0x6bc>
  40cdca:	mov    ecx,ebp
  40cdcc:	cmp    DWORD PTR [rsp+0x18],0x0
  40cdd1:	jne    40ce73 <getopt@@Base+0x753>
  40cdd7:	jmp    40cea3 <getopt@@Base+0x783>
  40cddc:	mov    r14d,DWORD PTR [rsp+0x2c]
  40cde1:	mov    ecx,ebp
  40cde3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40cded:	nop    DWORD PTR [rax]
  40cdf0:	mov    edx,r12d
  40cdf3:	cmp    ecx,r8d
  40cdf6:	jl     40cdfb <getopt@@Base+0x6db>
  40cdf8:	mov    edx,r9d
  40cdfb:	add    edx,ecx
  40cdfd:	movsxd rsi,edx
  40ce00:	mov    r13,QWORD PTR [rbx+rsi*8]
  40ce04:	mov    QWORD PTR [rbx+rsi*8],r15
  40ce08:	mov    QWORD PTR [rbx+rbp*8],r13
  40ce0c:	mov    ecx,r12d
  40ce0f:	cmp    esi,r8d
  40ce12:	jl     40ce17 <getopt@@Base+0x6f7>
  40ce14:	mov    ecx,r9d
  40ce17:	add    ecx,edx
  40ce19:	movsxd rsi,ecx
  40ce1c:	mov    rdi,QWORD PTR [rbx+rsi*8]
  40ce20:	mov    QWORD PTR [rbx+rsi*8],r13
  40ce24:	mov    QWORD PTR [rbx+rbp*8],rdi
  40ce28:	mov    edx,r12d
  40ce2b:	cmp    esi,r8d
  40ce2e:	jl     40ce33 <getopt@@Base+0x713>
  40ce30:	mov    edx,r9d
  40ce33:	add    edx,ecx
  40ce35:	movsxd rbx,edx
  40ce38:	mov    rcx,r11
  40ce3b:	mov    rsi,QWORD PTR [r11+rbx*8]
  40ce3f:	mov    QWORD PTR [r11+rbx*8],rdi
  40ce43:	mov    QWORD PTR [r11+rbp*8],rsi
  40ce47:	mov    ecx,r12d
  40ce4a:	cmp    ebx,r8d
  40ce4d:	jl     40ce52 <getopt@@Base+0x732>
  40ce4f:	mov    ecx,r9d
  40ce52:	add    ecx,edx
  40ce54:	movsxd rdx,ecx
  40ce57:	mov    rbx,r11
  40ce5a:	mov    r15,QWORD PTR [r11+rdx*8]
  40ce5e:	mov    QWORD PTR [r11+rdx*8],rsi
  40ce62:	mov    QWORD PTR [r11+rbp*8],r15
  40ce66:	add    r14d,0x4
  40ce6a:	jne    40cdf0 <getopt@@Base+0x6d0>
  40ce6c:	cmp    DWORD PTR [rsp+0x18],0x0
  40ce71:	je     40cea3 <getopt@@Base+0x783>
  40ce73:	mov    edx,DWORD PTR [rsp+0x14]
  40ce77:	nop    WORD PTR [rax+rax*1+0x0]
  40ce80:	cmp    ecx,r8d
  40ce83:	mov    esi,r9d
  40ce86:	cmovl  esi,r12d
  40ce8a:	add    ecx,esi
  40ce8c:	movsxd rsi,ecx
  40ce8f:	mov    rdi,QWORD PTR [rbx+rsi*8]
  40ce93:	mov    QWORD PTR [rbx+rsi*8],r15
  40ce97:	mov    QWORD PTR [rbx+rbp*8],rdi
  40ce9b:	mov    r15,rdi
  40ce9e:	add    edx,0x1
  40cea1:	jne    40ce80 <getopt@@Base+0x760>
  40cea3:	add    r10,0x1
  40cea7:	cmp    r10,QWORD PTR [rsp+0x8]
  40ceac:	jne    40cdae <getopt@@Base+0x68e>
  40ceb2:	mov    ecx,DWORD PTR [rsp+0x28]
  40ceb6:	add    ecx,DWORD PTR [rsp+0x10]
  40ceba:	sub    ecx,r8d
  40cebd:	lea    rax,[rip+0x9570]        # 416434 <optind@@Base>
  40cec4:	mov    DWORD PTR [rax],ecx
  40cec6:	jmp    40cd0b <getopt@@Base+0x5eb>
  40cecb:	mov    rbp,QWORD PTR [rsp+0x20]
  40ced0:	jmp    40cef2 <getopt@@Base+0x7d2>
  40ced2:	movsx  esi,r14b
  40ced6:	mov    rbp,QWORD PTR [rsp+0x20]
  40cedb:	mov    rdi,rbp
  40cede:	call   402150 <strchr@plt>
  40cee3:	mov    rdx,QWORD PTR [rsp+0x38]
  40cee8:	xor    r8d,r8d
  40ceeb:	test   rax,rax
  40ceee:	setne  r8b
  40cef2:	mov    rdi,rbx
  40cef5:	mov    rsi,rbp
  40cef8:	mov    rcx,QWORD PTR [rsp+0x48]
  40cefd:	mov    r9d,r13d
  40cf00:	call   40d170 <getopt_long_only@@Base+0x10>
  40cf05:	cmp    eax,0xffffffff
  40cf08:	jne    40cfc2 <getopt@@Base+0x8a2>
  40cf0e:	mov    rbp,QWORD PTR [rip+0x9533]        # 416448 <optopt@@Base+0x10>
  40cf15:	mov    r14b,BYTE PTR [rbp+0x0]
  40cf19:	add    rbp,0x1
  40cf1d:	mov    QWORD PTR [rip+0x9524],rbp        # 416448 <optopt@@Base+0x10>
  40cf24:	movsx  esi,r14b
  40cf28:	cmp    sil,0x3a
  40cf2c:	je     40cfe9 <getopt@@Base+0x8c9>
  40cf32:	cmp    r14b,0x2d
  40cf36:	jne    40cf42 <getopt@@Base+0x822>
  40cf38:	cmp    BYTE PTR [rbp+0x0],0x0
  40cf3c:	jne    40cff3 <getopt@@Base+0x8d3>
  40cf42:	mov    rdi,QWORD PTR [rsp+0x20]
  40cf47:	mov    DWORD PTR [rsp+0x8],esi
  40cf4b:	call   402150 <strchr@plt>
  40cf50:	test   rax,rax
  40cf53:	je     40cfd2 <getopt@@Base+0x8b2>
  40cf55:	mov    cl,BYTE PTR [rax+0x1]
  40cf58:	mov    rdx,QWORD PTR [rsp+0x38]
  40cf5d:	test   rdx,rdx
  40cf60:	je     40d049 <getopt@@Base+0x929>
  40cf66:	cmp    r14b,0x57
  40cf6a:	jne    40d049 <getopt@@Base+0x929>
  40cf70:	cmp    cl,0x3b
  40cf73:	jne    40d049 <getopt@@Base+0x929>
  40cf79:	cmp    BYTE PTR [rbp+0x0],0x0
  40cf7d:	mov    rbp,QWORD PTR [rsp+0x20]
  40cf82:	jne    40cfa2 <getopt@@Base+0x882>
  40cf84:	movsxd rax,DWORD PTR [r15]
  40cf87:	lea    ecx,[rax+0x1]
  40cf8a:	mov    DWORD PTR [r15],ecx
  40cf8d:	cmp    ecx,r12d
  40cf90:	jge    40d073 <getopt@@Base+0x953>
  40cf96:	mov    rax,QWORD PTR [rbx+rax*8+0x8]
  40cf9b:	mov    QWORD PTR [rip+0x94a6],rax        # 416448 <optopt@@Base+0x10>
  40cfa2:	mov    DWORD PTR [rip+0x94a4],0x2        # 416450 <optopt@@Base+0x18>
  40cfac:	xor    r8d,r8d
  40cfaf:	mov    rdi,rbx
  40cfb2:	mov    rsi,rbp
  40cfb5:	mov    rcx,QWORD PTR [rsp+0x48]
  40cfba:	mov    r9d,r13d
  40cfbd:	call   40d170 <getopt_long_only@@Base+0x10>
  40cfc2:	lea    rcx,[rip+0x599d]        # 412966 <getopt_long_only@@Base+0x5806>
  40cfc9:	mov    QWORD PTR [rip+0x9478],rcx        # 416448 <optopt@@Base+0x10>
  40cfd0:	jmp    40d03a <getopt@@Base+0x91a>
  40cfd2:	cmp    r14b,0x2d
  40cfd6:	mov    eax,0xffffffff
  40cfdb:	mov    esi,DWORD PTR [rsp+0x8]
  40cfdf:	jne    40cfe9 <getopt@@Base+0x8c9>
  40cfe1:	cmp    BYTE PTR [rbp+0x0],0x0
  40cfe5:	jne    40cff3 <getopt@@Base+0x8d3>
  40cfe7:	jmp    40d03a <getopt@@Base+0x91a>
  40cfe9:	cmp    BYTE PTR [rbp+0x0],0x0
  40cfed:	jne    40cff3 <getopt@@Base+0x8d3>
  40cfef:	add    DWORD PTR [r15],0x1
  40cff3:	lea    rax,[rip+0x9436]        # 416430 <opterr@@Base>
  40cffa:	cmp    DWORD PTR [rax],0x0
  40cffd:	je     40d02c <getopt@@Base+0x90c>
  40cfff:	mov    rax,QWORD PTR [rsp+0x20]
  40d004:	cmp    BYTE PTR [rax],0x3a
  40d007:	je     40d02c <getopt@@Base+0x90c>
  40d009:	cmp    QWORD PTR [rsp+0x50],0x0
  40d00f:	lea    rax,[rip+0x5bca]        # 412be0 <getopt_long_only@@Base+0x5a80>
  40d016:	lea    rdi,[rip+0x5be3]        # 412c00 <getopt_long_only@@Base+0x5aa0>
  40d01d:	cmovne rdi,rax
  40d021:	xor    eax,eax
  40d023:	mov    ebx,esi
  40d025:	call   402170 <warnx@plt>
  40d02a:	mov    esi,ebx
  40d02c:	lea    rax,[rip+0x9405]        # 416438 <optopt@@Base>
  40d033:	mov    DWORD PTR [rax],esi
  40d035:	mov    eax,0x3f
  40d03a:	add    rsp,0x58
  40d03e:	pop    rbx
  40d03f:	pop    r12
  40d041:	pop    r13
  40d043:	pop    r14
  40d045:	pop    r15
  40d047:	pop    rbp
  40d048:	ret    
  40d049:	cmp    cl,0x3a
  40d04c:	jne    40d067 <getopt@@Base+0x947>
  40d04e:	lea    rcx,[rip+0x9413]        # 416468 <optarg@@Base>
  40d055:	mov    QWORD PTR [rcx],0x0
  40d05c:	cmp    BYTE PTR [rbp+0x0],0x0
  40d060:	je     40d0c6 <getopt@@Base+0x9a6>
  40d062:	mov    QWORD PTR [rcx],rbp
  40d065:	jmp    40d0e2 <getopt@@Base+0x9c2>
  40d067:	cmp    BYTE PTR [rbp+0x0],0x0
  40d06b:	jne    40d0f4 <getopt@@Base+0x9d4>
  40d071:	jmp    40d0f0 <getopt@@Base+0x9d0>
  40d073:	lea    rax,[rip+0x58ec]        # 412966 <getopt_long_only@@Base+0x5806>
  40d07a:	mov    QWORD PTR [rip+0x93c7],rax        # 416448 <optopt@@Base+0x10>
  40d081:	lea    rax,[rip+0x93a8]        # 416430 <opterr@@Base>
  40d088:	cmp    DWORD PTR [rax],0x0
  40d08b:	je     40d0a5 <getopt@@Base+0x985>
  40d08d:	cmp    BYTE PTR [rbp+0x0],0x3a
  40d091:	je     40d0a5 <getopt@@Base+0x985>
  40d093:	lea    rdi,[rip+0x5b86]        # 412c20 <getopt_long_only@@Base+0x5ac0>
  40d09a:	xor    eax,eax
  40d09c:	mov    esi,DWORD PTR [rsp+0x8]
  40d0a0:	call   402170 <warnx@plt>
  40d0a5:	lea    rax,[rip+0x938c]        # 416438 <optopt@@Base>
  40d0ac:	mov    ecx,DWORD PTR [rsp+0x8]
  40d0b0:	mov    DWORD PTR [rax],ecx
  40d0b2:	xor    eax,eax
  40d0b4:	cmp    BYTE PTR [rbp+0x0],0x3a
  40d0b8:	setne  al
  40d0bb:	lea    eax,[rax+rax*4]
  40d0be:	add    eax,0x3a
  40d0c1:	jmp    40d03a <getopt@@Base+0x91a>
  40d0c6:	cmp    BYTE PTR [rax+0x2],0x3a
  40d0ca:	je     40d0e2 <getopt@@Base+0x9c2>
  40d0cc:	movsxd rax,DWORD PTR [r15]
  40d0cf:	lea    edx,[rax+0x1]
  40d0d2:	mov    DWORD PTR [r15],edx
  40d0d5:	cmp    edx,r12d
  40d0d8:	jge    40d0fd <getopt@@Base+0x9dd>
  40d0da:	mov    rax,QWORD PTR [rbx+rax*8+0x8]
  40d0df:	mov    QWORD PTR [rcx],rax
  40d0e2:	lea    rax,[rip+0x587d]        # 412966 <getopt_long_only@@Base+0x5806>
  40d0e9:	mov    QWORD PTR [rip+0x9358],rax        # 416448 <optopt@@Base+0x10>
  40d0f0:	add    DWORD PTR [r15],0x1
  40d0f4:	mov    eax,DWORD PTR [rsp+0x8]
  40d0f8:	jmp    40d03a <getopt@@Base+0x91a>
  40d0fd:	lea    rax,[rip+0x5862]        # 412966 <getopt_long_only@@Base+0x5806>
  40d104:	mov    QWORD PTR [rip+0x933d],rax        # 416448 <optopt@@Base+0x10>
  40d10b:	lea    rax,[rip+0x931e]        # 416430 <opterr@@Base>
  40d112:	cmp    DWORD PTR [rax],0x0
  40d115:	mov    rbx,QWORD PTR [rsp+0x20]
  40d11a:	je     40d133 <getopt@@Base+0xa13>
  40d11c:	cmp    BYTE PTR [rbx],0x3a
  40d11f:	je     40d133 <getopt@@Base+0xa13>
  40d121:	lea    rdi,[rip+0x5af8]        # 412c20 <getopt_long_only@@Base+0x5ac0>
  40d128:	xor    eax,eax
  40d12a:	mov    esi,DWORD PTR [rsp+0x8]
  40d12e:	call   402170 <warnx@plt>
  40d133:	lea    rax,[rip+0x92fe]        # 416438 <optopt@@Base>
  40d13a:	mov    ecx,DWORD PTR [rsp+0x8]
  40d13e:	mov    DWORD PTR [rax],ecx
  40d140:	xor    eax,eax
  40d142:	cmp    BYTE PTR [rbx],0x3a
  40d145:	jmp    40d0b8 <getopt@@Base+0x998>
  40d14a:	nop    WORD PTR [rax+rax*1+0x0]

000000000040d150 <getopt_long@@Base>:
  40d150:	mov    r9d,0x1
  40d156:	jmp    40c730 <getopt@@Base+0x10>
  40d15b:	nop    DWORD PTR [rax+rax*1+0x0]

000000000040d160 <getopt_long_only@@Base>:
  40d160:	mov    r9d,0x5
  40d166:	jmp    40c730 <getopt@@Base+0x10>
  40d16b:	nop    DWORD PTR [rax+rax*1+0x0]
  40d170:	push   rbp
  40d171:	push   r15
  40d173:	push   r14
  40d175:	push   r13
  40d177:	push   r12
  40d179:	push   rbx
  40d17a:	sub    rsp,0x58
  40d17e:	mov    DWORD PTR [rsp+0x3c],r9d
  40d183:	mov    DWORD PTR [rsp+0x10],r8d
  40d188:	mov    QWORD PTR [rsp+0x50],rcx
  40d18d:	mov    r12,rdx
  40d190:	mov    r13,rsi
  40d193:	mov    rbp,rdi
  40d196:	mov    rbx,QWORD PTR [rip+0x92ab]        # 416448 <optopt@@Base+0x10>
  40d19d:	movsxd rax,DWORD PTR [rip+0x92ac]        # 416450 <optopt@@Base+0x18>
  40d1a4:	cmp    rax,0x2
  40d1a8:	ja     40d1b7 <getopt_long_only@@Base+0x57>
  40d1aa:	lea    rcx,[rip+0x7bff]        # 414db0 <getopt_long_only@@Base+0x7c50>
  40d1b1:	mov    r15,QWORD PTR [rcx+rax*8]
  40d1b5:	jmp    40d1be <getopt_long_only@@Base+0x5e>
  40d1b7:	lea    r15,[rip+0x57a8]        # 412966 <getopt_long_only@@Base+0x5806>
  40d1be:	lea    rcx,[rip+0x926f]        # 416434 <optind@@Base>
  40d1c5:	mov    eax,DWORD PTR [rcx]
  40d1c7:	mov    QWORD PTR [rsp+0x30],rax
  40d1cc:	lea    eax,[rax+0x1]
  40d1cf:	mov    DWORD PTR [rcx],eax
  40d1d1:	mov    esi,0x3d
  40d1d6:	mov    rdi,rbx
  40d1d9:	call   402150 <strchr@plt>
  40d1de:	test   rax,rax
  40d1e1:	mov    QWORD PTR [rsp+0x48],rbp
  40d1e6:	je     40d1f4 <getopt_long_only@@Base+0x94>
  40d1e8:	mov    r14,rax
  40d1eb:	sub    r14,rbx
  40d1ee:	add    rax,0x1
  40d1f2:	jmp    40d201 <getopt_long_only@@Base+0xa1>
  40d1f4:	mov    rdi,rbx
  40d1f7:	call   402120 <strlen@plt>
  40d1fc:	mov    r14,rax
  40d1ff:	xor    eax,eax
  40d201:	mov    QWORD PTR [rsp+0x28],rax
  40d206:	mov    rbp,QWORD PTR [r12]
  40d20a:	test   rbp,rbp
  40d20d:	je     40d3ca <getopt_long_only@@Base+0x26a>
  40d213:	mov    QWORD PTR [rsp+0x20],r13
  40d218:	mov    QWORD PTR [rsp+0x18],r15
  40d21d:	movsxd rax,DWORD PTR [rsp+0x30]
  40d222:	mov    QWORD PTR [rsp+0x40],rax
  40d227:	cmp    DWORD PTR [rsp+0x10],0x0
  40d22c:	setne  al
  40d22f:	cmp    r14,0x1
  40d233:	sete   r15b
  40d237:	and    r15b,al
  40d23a:	mov    QWORD PTR [rsp+0x8],r12
  40d23f:	lea    r12,[r12+0x20]
  40d244:	mov    DWORD PTR [rsp+0x4],0xffffffff
  40d24c:	xor    r13d,r13d
  40d24f:	mov    DWORD PTR [rsp+0x14],0x0
  40d257:	nop    WORD PTR [rax+rax*1+0x0]
  40d260:	mov    rdi,rbx
  40d263:	mov    rsi,rbp
  40d266:	mov    rdx,r14
  40d269:	call   402090 <strncmp@plt>
  40d26e:	test   eax,eax
  40d270:	jne    40d2e0 <getopt_long_only@@Base+0x180>
  40d272:	mov    rdi,rbp
  40d275:	call   402120 <strlen@plt>
  40d27a:	cmp    rax,r14
  40d27d:	je     40d338 <getopt_long_only@@Base+0x1d8>
  40d283:	test   r15b,r15b
  40d286:	jne    40d2e0 <getopt_long_only@@Base+0x180>
  40d288:	mov    eax,DWORD PTR [rsp+0x4]
  40d28c:	cmp    eax,0xffffffff
  40d28f:	je     40d2d9 <getopt_long_only@@Base+0x179>
  40d291:	test   BYTE PTR [rsp+0x3c],0x4
  40d296:	jne    40d2cf <getopt_long_only@@Base+0x16f>
  40d298:	mov    ecx,DWORD PTR [r12-0x18]
  40d29d:	cdqe   
  40d29f:	shl    rax,0x5
  40d2a3:	mov    rdx,QWORD PTR [rsp+0x8]
  40d2a8:	cmp    ecx,DWORD PTR [rdx+rax*1+0x8]
  40d2ac:	jne    40d2cf <getopt_long_only@@Base+0x16f>
  40d2ae:	mov    rcx,QWORD PTR [r12-0x10]
  40d2b3:	mov    rdx,QWORD PTR [rsp+0x8]
  40d2b8:	cmp    rcx,QWORD PTR [rdx+rax*1+0x10]
  40d2bd:	jne    40d2cf <getopt_long_only@@Base+0x16f>
  40d2bf:	mov    ecx,DWORD PTR [r12-0x8]
  40d2c4:	mov    rdx,QWORD PTR [rsp+0x8]
  40d2c9:	cmp    ecx,DWORD PTR [rdx+rax*1+0x18]
  40d2cd:	je     40d2e0 <getopt_long_only@@Base+0x180>
  40d2cf:	mov    DWORD PTR [rsp+0x14],0x1
  40d2d7:	jmp    40d2e0 <getopt_long_only@@Base+0x180>
  40d2d9:	mov    DWORD PTR [rsp+0x4],r13d
  40d2de:	xchg   ax,ax
  40d2e0:	mov    rbp,QWORD PTR [r12]
  40d2e4:	add    r13d,0x1
  40d2e8:	add    r12,0x20
  40d2ec:	test   rbp,rbp
  40d2ef:	jne    40d260 <getopt_long_only@@Base+0x100>
  40d2f5:	cmp    DWORD PTR [rsp+0x14],0x0
  40d2fa:	je     40d34c <getopt_long_only@@Base+0x1ec>
  40d2fc:	lea    rax,[rip+0x912d]        # 416430 <opterr@@Base>
  40d303:	cmp    DWORD PTR [rax],0x0
  40d306:	je     40d40d <getopt_long_only@@Base+0x2ad>
  40d30c:	mov    rax,QWORD PTR [rsp+0x20]
  40d311:	cmp    BYTE PTR [rax],0x3a
  40d314:	je     40d40d <getopt_long_only@@Base+0x2ad>
  40d31a:	lea    rdi,[rip+0x592f]        # 412c50 <getopt_long_only@@Base+0x5af0>
  40d321:	xor    eax,eax
  40d323:	mov    rsi,QWORD PTR [rsp+0x18]
  40d328:	mov    edx,r14d
  40d32b:	mov    rcx,rbx
  40d32e:	call   402170 <warnx@plt>
  40d333:	jmp    40d40d <getopt_long_only@@Base+0x2ad>
  40d338:	mov    eax,r13d
  40d33b:	mov    r15,QWORD PTR [rsp+0x18]
  40d340:	mov    r12,QWORD PTR [rsp+0x8]
  40d345:	mov    r13,QWORD PTR [rsp+0x20]
  40d34a:	jmp    40d364 <getopt_long_only@@Base+0x204>
  40d34c:	mov    eax,DWORD PTR [rsp+0x4]
  40d350:	cmp    eax,0xffffffff
  40d353:	mov    r15,QWORD PTR [rsp+0x18]
  40d358:	mov    r12,QWORD PTR [rsp+0x8]
  40d35d:	mov    r13,QWORD PTR [rsp+0x20]
  40d362:	je     40d3ca <getopt_long_only@@Base+0x26a>
  40d364:	mov    esi,eax
  40d366:	movsxd rbp,eax
  40d369:	shl    rbp,0x5
  40d36d:	mov    eax,DWORD PTR [r12+rbp*1+0x8]
  40d372:	cmp    QWORD PTR [rsp+0x28],0x0
  40d378:	je     40d42e <getopt_long_only@@Base+0x2ce>
  40d37e:	test   eax,eax
  40d380:	jne    40d42e <getopt_long_only@@Base+0x2ce>
  40d386:	lea    rax,[rip+0x90a3]        # 416430 <opterr@@Base>
  40d38d:	cmp    DWORD PTR [rax],0x0
  40d390:	je     40d3b0 <getopt_long_only@@Base+0x250>
  40d392:	cmp    BYTE PTR [r13+0x0],0x3a
  40d397:	je     40d3b0 <getopt_long_only@@Base+0x250>
  40d399:	lea    rdi,[rip+0x58d0]        # 412c70 <getopt_long_only@@Base+0x5b10>
  40d3a0:	xor    eax,eax
  40d3a2:	mov    rsi,r15
  40d3a5:	mov    edx,r14d
  40d3a8:	mov    rcx,rbx
  40d3ab:	call   402170 <warnx@plt>
  40d3b0:	xor    eax,eax
  40d3b2:	cmp    QWORD PTR [r12+rbp*1+0x10],0x0
  40d3b8:	jne    40d3bf <getopt_long_only@@Base+0x25f>
  40d3ba:	mov    eax,DWORD PTR [r12+rbp*1+0x18]
  40d3bf:	lea    rcx,[rip+0x9072]        # 416438 <optopt@@Base>
  40d3c6:	mov    DWORD PTR [rcx],eax
  40d3c8:	jmp    40d41a <getopt_long_only@@Base+0x2ba>
  40d3ca:	cmp    DWORD PTR [rsp+0x10],0x0
  40d3cf:	je     40d3e6 <getopt_long_only@@Base+0x286>
  40d3d1:	lea    rax,[rip+0x905c]        # 416434 <optind@@Base>
  40d3d8:	mov    rcx,QWORD PTR [rsp+0x30]
  40d3dd:	mov    DWORD PTR [rax],ecx
  40d3df:	mov    eax,0xffffffff
  40d3e4:	jmp    40d41f <getopt_long_only@@Base+0x2bf>
  40d3e6:	lea    rax,[rip+0x9043]        # 416430 <opterr@@Base>
  40d3ed:	cmp    DWORD PTR [rax],0x0
  40d3f0:	je     40d40d <getopt_long_only@@Base+0x2ad>
  40d3f2:	cmp    BYTE PTR [r13+0x0],0x3a
  40d3f7:	je     40d40d <getopt_long_only@@Base+0x2ad>
  40d3f9:	lea    rdi,[rip+0x58d0]        # 412cd0 <getopt_long_only@@Base+0x5b70>
  40d400:	xor    eax,eax
  40d402:	mov    rsi,r15
  40d405:	mov    rdx,rbx
  40d408:	call   402170 <warnx@plt>
  40d40d:	lea    rax,[rip+0x9024]        # 416438 <optopt@@Base>
  40d414:	mov    DWORD PTR [rax],0x0
  40d41a:	mov    eax,0x3f
  40d41f:	add    rsp,0x58
  40d423:	pop    rbx
  40d424:	pop    r12
  40d426:	pop    r13
  40d428:	pop    r14
  40d42a:	pop    r15
  40d42c:	pop    rbp
  40d42d:	ret    
  40d42e:	lea    ecx,[rax-0x1]
  40d431:	cmp    ecx,0x1
  40d434:	ja     40d507 <getopt_long_only@@Base+0x3a7>
  40d43a:	mov    rdx,QWORD PTR [rsp+0x28]
  40d43f:	test   rdx,rdx
  40d442:	je     40d458 <getopt_long_only@@Base+0x2f8>
  40d444:	lea    rcx,[rip+0x901d]        # 416468 <optarg@@Base>
  40d44b:	mov    QWORD PTR [rcx],rdx
  40d44e:	cmp    eax,0x1
  40d451:	je     40d49a <getopt_long_only@@Base+0x33a>
  40d453:	jmp    40d507 <getopt_long_only@@Base+0x3a7>
  40d458:	cmp    eax,0x1
  40d45b:	jne    40d507 <getopt_long_only@@Base+0x3a7>
  40d461:	lea    rax,[r12+rbp*1]
  40d465:	add    rax,0x8
  40d469:	mov    rdx,QWORD PTR [rsp+0x30]
  40d46e:	add    edx,0x2
  40d471:	lea    rcx,[rip+0x8fbc]        # 416434 <optind@@Base>
  40d478:	mov    DWORD PTR [rcx],edx
  40d47a:	mov    rcx,QWORD PTR [rsp+0x48]
  40d47f:	mov    rdx,QWORD PTR [rsp+0x40]
  40d484:	mov    rcx,QWORD PTR [rcx+rdx*8+0x8]
  40d489:	lea    rdx,[rip+0x8fd8]        # 416468 <optarg@@Base>
  40d490:	mov    QWORD PTR [rdx],rcx
  40d493:	mov    eax,DWORD PTR [rax]
  40d495:	cmp    eax,0x1
  40d498:	jne    40d507 <getopt_long_only@@Base+0x3a7>
  40d49a:	lea    rax,[rip+0x8fc7]        # 416468 <optarg@@Base>
  40d4a1:	mov    rax,QWORD PTR [rax]
  40d4a4:	test   rax,rax
  40d4a7:	jne    40d507 <getopt_long_only@@Base+0x3a7>
  40d4a9:	lea    rax,[rip+0x8f80]        # 416430 <opterr@@Base>
  40d4b0:	cmp    DWORD PTR [rax],0x0
  40d4b3:	je     40d4d0 <getopt_long_only@@Base+0x370>
  40d4b5:	cmp    BYTE PTR [r13+0x0],0x3a
  40d4ba:	je     40d4d0 <getopt_long_only@@Base+0x370>
  40d4bc:	lea    rdi,[rip+0x57dd]        # 412ca0 <getopt_long_only@@Base+0x5b40>
  40d4c3:	xor    eax,eax
  40d4c5:	mov    rsi,r15
  40d4c8:	mov    rdx,rbx
  40d4cb:	call   402170 <warnx@plt>
  40d4d0:	xor    eax,eax
  40d4d2:	cmp    QWORD PTR [r12+rbp*1+0x10],0x0
  40d4d8:	jne    40d4df <getopt_long_only@@Base+0x37f>
  40d4da:	mov    eax,DWORD PTR [r12+rbp*1+0x18]
  40d4df:	lea    rcx,[rip+0x8f52]        # 416438 <optopt@@Base>
  40d4e6:	lea    rdx,[rip+0x8f47]        # 416434 <optind@@Base>
  40d4ed:	add    DWORD PTR [rdx],0xffffffff
  40d4f0:	mov    DWORD PTR [rcx],eax
  40d4f2:	xor    eax,eax
  40d4f4:	cmp    BYTE PTR [r13+0x0],0x3a
  40d4f9:	setne  al
  40d4fc:	lea    eax,[rax+rax*4]
  40d4ff:	add    eax,0x3a
  40d502:	jmp    40d41f <getopt_long_only@@Base+0x2bf>
  40d507:	mov    rax,QWORD PTR [rsp+0x50]
  40d50c:	test   rax,rax
  40d50f:	je     40d513 <getopt_long_only@@Base+0x3b3>
  40d511:	mov    DWORD PTR [rax],esi
  40d513:	mov    rcx,QWORD PTR [r12+rbp*1+0x10]
  40d518:	mov    eax,DWORD PTR [r12+rbp*1+0x18]
  40d51d:	test   rcx,rcx
  40d520:	je     40d41f <getopt_long_only@@Base+0x2bf>
  40d526:	mov    DWORD PTR [rcx],eax
  40d528:	xor    eax,eax
  40d52a:	jmp    40d41f <getopt_long_only@@Base+0x2bf>
  40d52f:	nop
  40d530:	endbr64 
  40d534:	push   r15
  40d536:	lea    r15,[rip+0x77d3]        # 414d10 <getopt_long_only@@Base+0x7bb0>
  40d53d:	push   r14
  40d53f:	mov    r14,rdx
  40d542:	push   r13
  40d544:	mov    r13,rsi
  40d547:	push   r12
  40d549:	mov    r12d,edi
  40d54c:	push   rbp
  40d54d:	lea    rbp,[rip+0x77c4]        # 414d18 <getopt_long_only@@Base+0x7bb8>
  40d554:	push   rbx
  40d555:	sub    rbp,r15
  40d558:	sub    rsp,0x8
  40d55c:	call   402000 <Mat_VarGetNumberOfFields@plt-0x30>
  40d561:	sar    rbp,0x3
  40d565:	je     40d586 <getopt_long_only@@Base+0x426>
  40d567:	xor    ebx,ebx
  40d569:	nop    DWORD PTR [rax+0x0]
  40d570:	mov    rdx,r14
  40d573:	mov    rsi,r13
  40d576:	mov    edi,r12d
  40d579:	call   QWORD PTR [r15+rbx*8]
  40d57d:	add    rbx,0x1
  40d581:	cmp    rbp,rbx
  40d584:	jne    40d570 <getopt_long_only@@Base+0x410>
  40d586:	add    rsp,0x8
  40d58a:	pop    rbx
  40d58b:	pop    rbp
  40d58c:	pop    r12
  40d58e:	pop    r13
  40d590:	pop    r14
  40d592:	pop    r15
  40d594:	ret    
  40d595:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40d5a0:	endbr64 
  40d5a4:	ret    

Disassembly of section .fini:

000000000040d5a8 <.fini>:
  40d5a8:	endbr64 
  40d5ac:	sub    rsp,0x8
  40d5b0:	add    rsp,0x8
  40d5b4:	ret    
