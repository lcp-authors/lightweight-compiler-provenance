
../repos/dvidelabs-flatcc-3b39ef7/test/monster_test_concat/monster_test_concat:     file format elf64-x86-64


Disassembly of section .init:

0000000000403000 <.init>:
  403000:	endbr64 
  403004:	sub    rsp,0x8
  403008:	mov    rax,QWORD PTR [rip+0xefe9]        # 411ff8 <__gmon_start__>
  40300f:	test   rax,rax
  403012:	je     403016 <free@plt-0xda>
  403014:	call   rax
  403016:	add    rsp,0x8
  40301a:	ret    

Disassembly of section .plt:

0000000000403020 <.plt>:
  403020:	push   QWORD PTR [rip+0xefe2]        # 412008 <flatcc_builder_padding_base@@Base+0x4e48>
  403026:	bnd jmp QWORD PTR [rip+0xefe3]        # 412010 <flatcc_builder_padding_base@@Base+0x4e50>
  40302d:	nop    DWORD PTR [rax]
  403030:	endbr64 
  403034:	push   0x0
  403039:	bnd jmp 403020 <free@plt-0xd0>
  40303f:	nop
  403040:	endbr64 
  403044:	push   0x1
  403049:	bnd jmp 403020 <free@plt-0xd0>
  40304f:	nop
  403050:	endbr64 
  403054:	push   0x2
  403059:	bnd jmp 403020 <free@plt-0xd0>
  40305f:	nop
  403060:	endbr64 
  403064:	push   0x3
  403069:	bnd jmp 403020 <free@plt-0xd0>
  40306f:	nop
  403070:	endbr64 
  403074:	push   0x4
  403079:	bnd jmp 403020 <free@plt-0xd0>
  40307f:	nop
  403080:	endbr64 
  403084:	push   0x5
  403089:	bnd jmp 403020 <free@plt-0xd0>
  40308f:	nop
  403090:	endbr64 
  403094:	push   0x6
  403099:	bnd jmp 403020 <free@plt-0xd0>
  40309f:	nop
  4030a0:	endbr64 
  4030a4:	push   0x7
  4030a9:	bnd jmp 403020 <free@plt-0xd0>
  4030af:	nop
  4030b0:	endbr64 
  4030b4:	push   0x8
  4030b9:	bnd jmp 403020 <free@plt-0xd0>
  4030bf:	nop
  4030c0:	endbr64 
  4030c4:	push   0x9
  4030c9:	bnd jmp 403020 <free@plt-0xd0>
  4030cf:	nop
  4030d0:	endbr64 
  4030d4:	push   0xa
  4030d9:	bnd jmp 403020 <free@plt-0xd0>
  4030df:	nop
  4030e0:	endbr64 
  4030e4:	push   0xb
  4030e9:	bnd jmp 403020 <free@plt-0xd0>
  4030ef:	nop

Disassembly of section .plt.sec:

00000000004030f0 <free@plt>:
  4030f0:	endbr64 
  4030f4:	bnd jmp QWORD PTR [rip+0xef1d]        # 412018 <free@GLIBC_2.2.5>
  4030fb:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403100 <strncpy@plt>:
  403100:	endbr64 
  403104:	bnd jmp QWORD PTR [rip+0xef15]        # 412020 <strncpy@GLIBC_2.2.5>
  40310b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403110 <strlen@plt>:
  403110:	endbr64 
  403114:	bnd jmp QWORD PTR [rip+0xef0d]        # 412028 <strlen@GLIBC_2.2.5>
  40311b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403120 <__stack_chk_fail@plt>:
  403120:	endbr64 
  403124:	bnd jmp QWORD PTR [rip+0xef05]        # 412030 <__stack_chk_fail@GLIBC_2.4>
  40312b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403130 <__assert_fail@plt>:
  403130:	endbr64 
  403134:	bnd jmp QWORD PTR [rip+0xeefd]        # 412038 <__assert_fail@GLIBC_2.2.5>
  40313b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403140 <memset@plt>:
  403140:	endbr64 
  403144:	bnd jmp QWORD PTR [rip+0xeef5]        # 412040 <memset@GLIBC_2.2.5>
  40314b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403150 <memchr@plt>:
  403150:	endbr64 
  403154:	bnd jmp QWORD PTR [rip+0xeeed]        # 412048 <memchr@GLIBC_2.2.5>
  40315b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403160 <memcmp@plt>:
  403160:	endbr64 
  403164:	bnd jmp QWORD PTR [rip+0xeee5]        # 412050 <memcmp@GLIBC_2.2.5>
  40316b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403170 <memcpy@plt>:
  403170:	endbr64 
  403174:	bnd jmp QWORD PTR [rip+0xeedd]        # 412058 <memcpy@GLIBC_2.14>
  40317b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403180 <malloc@plt>:
  403180:	endbr64 
  403184:	bnd jmp QWORD PTR [rip+0xeed5]        # 412060 <malloc@GLIBC_2.2.5>
  40318b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403190 <realloc@plt>:
  403190:	endbr64 
  403194:	bnd jmp QWORD PTR [rip+0xeecd]        # 412068 <realloc@GLIBC_2.2.5>
  40319b:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004031a0 <posix_memalign@plt>:
  4031a0:	endbr64 
  4031a4:	bnd jmp QWORD PTR [rip+0xeec5]        # 412070 <posix_memalign@GLIBC_2.2.5>
  4031ab:	nop    DWORD PTR [rax+rax*1+0x0]

Disassembly of section .text:

00000000004031b0 <_start@@Base>:
  4031b0:	endbr64 
  4031b4:	xor    ebp,ebp
  4031b6:	mov    r9,rdx
  4031b9:	pop    rsi
  4031ba:	mov    rdx,rsp
  4031bd:	and    rsp,0xfffffffffffffff0
  4031c1:	push   rax
  4031c2:	push   rsp
  4031c3:	mov    r8,0x40c7f0
  4031ca:	mov    rcx,0x40c780
  4031d1:	mov    rdi,0x4046d5
  4031d8:	call   QWORD PTR [rip+0xee12]        # 411ff0 <__libc_start_main@GLIBC_2.2.5>
  4031de:	hlt    
  4031df:	nop
  4031e0:	endbr64 
  4031e4:	ret    
  4031e5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4031ef:	nop
  4031f0:	mov    eax,0x412098
  4031f5:	cmp    rax,0x412098
  4031fb:	je     403210 <_start@@Base+0x60>
  4031fd:	mov    eax,0x0
  403202:	test   rax,rax
  403205:	je     403210 <_start@@Base+0x60>
  403207:	mov    edi,0x412098
  40320c:	jmp    rax
  40320e:	xchg   ax,ax
  403210:	ret    
  403211:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40321c:	nop    DWORD PTR [rax+0x0]
  403220:	mov    esi,0x412098
  403225:	sub    rsi,0x412098
  40322c:	sar    rsi,0x3
  403230:	mov    rax,rsi
  403233:	shr    rax,0x3f
  403237:	add    rsi,rax
  40323a:	sar    rsi,1
  40323d:	je     403250 <_start@@Base+0xa0>
  40323f:	mov    eax,0x0
  403244:	test   rax,rax
  403247:	je     403250 <_start@@Base+0xa0>
  403249:	mov    edi,0x412098
  40324e:	jmp    rax
  403250:	ret    
  403251:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40325c:	nop    DWORD PTR [rax+0x0]
  403260:	endbr64 
  403264:	cmp    BYTE PTR [rip+0xee2d],0x0        # 412098 <__bss_start@@Base>
  40326b:	jne    403280 <_start@@Base+0xd0>
  40326d:	push   rbp
  40326e:	mov    rbp,rsp
  403271:	call   4031f0 <_start@@Base+0x40>
  403276:	mov    BYTE PTR [rip+0xee1b],0x1        # 412098 <__bss_start@@Base>
  40327d:	pop    rbp
  40327e:	ret    
  40327f:	nop
  403280:	ret    
  403281:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40328c:	nop    DWORD PTR [rax+0x0]
  403290:	endbr64 
  403294:	jmp    403220 <_start@@Base+0x70>
  403296:	push   rbp
  403297:	mov    rbp,rsp
  40329a:	sub    rsp,0x10
  40329e:	mov    QWORD PTR [rbp-0x8],rdi
  4032a2:	mov    QWORD PTR [rbp-0x10],rsi
  4032a6:	mov    rsi,QWORD PTR [rbp-0x10]
  4032aa:	mov    rax,QWORD PTR [rbp-0x8]
  4032ae:	mov    ecx,0x0
  4032b3:	mov    edx,0x0
  4032b8:	mov    rdi,rax
  4032bb:	call   406776 <flatcc_builder_start_buffer@@Base>
  4032c0:	leave  
  4032c1:	ret    
  4032c2:	push   rbp
  4032c3:	mov    rbp,rsp
  4032c6:	sub    rsp,0x10
  4032ca:	mov    QWORD PTR [rbp-0x8],rdi
  4032ce:	mov    DWORD PTR [rbp-0xc],esi
  4032d1:	mov    edx,DWORD PTR [rbp-0xc]
  4032d4:	mov    rax,QWORD PTR [rbp-0x8]
  4032d8:	mov    esi,edx
  4032da:	mov    rdi,rax
  4032dd:	call   4068c3 <flatcc_builder_end_buffer@@Base>
  4032e2:	leave  
  4032e3:	ret    
  4032e4:	push   rbp
  4032e5:	mov    rbp,rsp
  4032e8:	sub    rsp,0x10
  4032ec:	mov    QWORD PTR [rbp-0x8],rdi
  4032f0:	mov    rax,QWORD PTR [rbp-0x8]
  4032f4:	mov    esi,0x24
  4032f9:	mov    rdi,rax
  4032fc:	call   40753b <flatcc_builder_start_table@@Base>
  403301:	leave  
  403302:	ret    
  403303:	push   rbp
  403304:	mov    rbp,rsp
  403307:	sub    rsp,0x10
  40330b:	mov    QWORD PTR [rbp-0x8],rdi
  40330f:	mov    rax,QWORD PTR [rbp-0x8]
  403313:	mov    edx,0x1
  403318:	lea    rsi,[rip+0x9d0d]        # 40d02c <_IO_stdin_used@@Base+0x2c>
  40331f:	mov    rdi,rax
  403322:	call   407f9d <flatcc_builder_check_required@@Base>
  403327:	test   eax,eax
  403329:	jne    40334a <_start@@Base+0x19a>
  40332b:	lea    rcx,[rip+0x9e3e]        # 40d170 <_IO_stdin_used@@Base+0x170>
  403332:	mov    edx,0x95e
  403337:	lea    rsi,[rip+0x9cf2]        # 40d030 <_IO_stdin_used@@Base+0x30>
  40333e:	lea    rdi,[rip+0x9d6b]        # 40d0b0 <_IO_stdin_used@@Base+0xb0>
  403345:	call   403130 <__assert_fail@plt>
  40334a:	mov    rax,QWORD PTR [rbp-0x8]
  40334e:	mov    rdi,rax
  403351:	call   40804a <flatcc_builder_end_table@@Base>
  403356:	leave  
  403357:	ret    
  403358:	push   rbp
  403359:	mov    rbp,rsp
  40335c:	sub    rsp,0x20
  403360:	mov    QWORD PTR [rbp-0x18],rdi
  403364:	mov    DWORD PTR [rbp-0x1c],esi
  403367:	cmp    DWORD PTR [rbp-0x1c],0x0
  40336b:	je     403399 <_start@@Base+0x1e9>
  40336d:	mov    rax,QWORD PTR [rbp-0x18]
  403371:	mov    esi,0x3
  403376:	mov    rdi,rax
  403379:	call   4098c5 <flatcc_builder_table_add_offset@@Base>
  40337e:	mov    QWORD PTR [rbp-0x8],rax
  403382:	cmp    QWORD PTR [rbp-0x8],0x0
  403387:	je     403399 <_start@@Base+0x1e9>
  403389:	mov    rax,QWORD PTR [rbp-0x8]
  40338d:	mov    edx,DWORD PTR [rbp-0x1c]
  403390:	mov    DWORD PTR [rax],edx
  403392:	mov    eax,0x0
  403397:	jmp    40339e <_start@@Base+0x1ee>
  403399:	mov    eax,0xffffffff
  40339e:	leave  
  40339f:	ret    
  4033a0:	push   rbp
  4033a1:	mov    rbp,rsp
  4033a4:	sub    rsp,0x10
  4033a8:	mov    QWORD PTR [rbp-0x8],rdi
  4033ac:	mov    QWORD PTR [rbp-0x10],rsi
  4033b0:	mov    rdx,QWORD PTR [rbp-0x10]
  4033b4:	mov    rax,QWORD PTR [rbp-0x8]
  4033b8:	mov    rsi,rdx
  4033bb:	mov    rdi,rax
  4033be:	call   409588 <flatcc_builder_create_string_str@@Base>
  4033c3:	mov    edx,eax
  4033c5:	mov    rax,QWORD PTR [rbp-0x8]
  4033c9:	mov    esi,edx
  4033cb:	mov    rdi,rax
  4033ce:	call   403358 <_start@@Base+0x1a8>
  4033d3:	leave  
  4033d4:	ret    
  4033d5:	push   rbp
  4033d6:	mov    rbp,rsp
  4033d9:	sub    rsp,0x10
  4033dd:	mov    QWORD PTR [rbp-0x8],rdi
  4033e1:	mov    rax,QWORD PTR [rbp-0x8]
  4033e5:	lea    rsi,[rip+0x9d6c]        # 40d158 <_IO_stdin_used@@Base+0x158>
  4033ec:	mov    rdi,rax
  4033ef:	call   403296 <_start@@Base+0xe6>
  4033f4:	test   eax,eax
  4033f6:	jne    403406 <_start@@Base+0x256>
  4033f8:	mov    rax,QWORD PTR [rbp-0x8]
  4033fc:	mov    rdi,rax
  4033ff:	call   4032e4 <_start@@Base+0x134>
  403404:	jmp    40340b <_start@@Base+0x25b>
  403406:	mov    eax,0xffffffff
  40340b:	leave  
  40340c:	ret    
  40340d:	push   rbp
  40340e:	mov    rbp,rsp
  403411:	sub    rsp,0x10
  403415:	mov    QWORD PTR [rbp-0x8],rdi
  403419:	mov    rax,QWORD PTR [rbp-0x8]
  40341d:	mov    rdi,rax
  403420:	call   403303 <_start@@Base+0x153>
  403425:	mov    edx,eax
  403427:	mov    rax,QWORD PTR [rbp-0x8]
  40342b:	mov    esi,edx
  40342d:	mov    rdi,rax
  403430:	call   4032c2 <_start@@Base+0x112>
  403435:	leave  
  403436:	ret    
  403437:	endbr64 
  40343b:	push   rbp
  40343c:	mov    rbp,rsp
  40343f:	sub    rsp,0x10
  403443:	mov    QWORD PTR [rbp-0x8],rdi
  403447:	mov    rax,QWORD PTR [rbp-0x8]
  40344b:	movzx  eax,BYTE PTR [rax+0x10]
  40344f:	movzx  eax,al
  403452:	cmp    eax,0x1
  403455:	jne    40346c <_start@@Base+0x2bc>
  403457:	mov    rax,QWORD PTR [rbp-0x8]
  40345b:	lea    rsi,[rip+0x16b]        # 4035cd <_start@@Base+0x41d>
  403462:	mov    rdi,rax
  403465:	call   40bcbb <flatcc_verify_union_table@@Base>
  40346a:	jmp    403471 <_start@@Base+0x2c1>
  40346c:	mov    eax,0x0
  403471:	leave  
  403472:	ret    
  403473:	endbr64 
  403477:	push   rbp
  403478:	mov    rbp,rsp
  40347b:	sub    rsp,0x10
  40347f:	mov    QWORD PTR [rbp-0x8],rdi
  403483:	mov    rax,QWORD PTR [rbp-0x8]
  403487:	movzx  eax,BYTE PTR [rax+0x10]
  40348b:	movzx  eax,al
  40348e:	cmp    eax,0x2
  403491:	je     4034c0 <_start@@Base+0x310>
  403493:	cmp    eax,0x2
  403496:	jg     40349f <_start@@Base+0x2ef>
  403498:	cmp    eax,0x1
  40349b:	je     4034ab <_start@@Base+0x2fb>
  40349d:	jmp    4034ff <_start@@Base+0x34f>
  40349f:	cmp    eax,0x3
  4034a2:	je     4034d5 <_start@@Base+0x325>
  4034a4:	cmp    eax,0x4
  4034a7:	je     4034ea <_start@@Base+0x33a>
  4034a9:	jmp    4034ff <_start@@Base+0x34f>
  4034ab:	mov    rax,QWORD PTR [rbp-0x8]
  4034af:	lea    rsi,[rip+0x835]        # 403ceb <_start@@Base+0xb3b>
  4034b6:	mov    rdi,rax
  4034b9:	call   40bcbb <flatcc_verify_union_table@@Base>
  4034be:	jmp    403504 <_start@@Base+0x354>
  4034c0:	mov    rax,QWORD PTR [rbp-0x8]
  4034c4:	lea    rsi,[rip+0x17b]        # 403646 <_start@@Base+0x496>
  4034cb:	mov    rdi,rax
  4034ce:	call   40bcbb <flatcc_verify_union_table@@Base>
  4034d3:	jmp    403504 <_start@@Base+0x354>
  4034d5:	mov    rax,QWORD PTR [rbp-0x8]
  4034d9:	lea    rsi,[rip+0x100]        # 4035e0 <_start@@Base+0x430>
  4034e0:	mov    rdi,rax
  4034e3:	call   40bcbb <flatcc_verify_union_table@@Base>
  4034e8:	jmp    403504 <_start@@Base+0x354>
  4034ea:	mov    rax,QWORD PTR [rbp-0x8]
  4034ee:	lea    rsi,[rip+0x3b2]        # 4038a7 <_start@@Base+0x6f7>
  4034f5:	mov    rdi,rax
  4034f8:	call   40bcbb <flatcc_verify_union_table@@Base>
  4034fd:	jmp    403504 <_start@@Base+0x354>
  4034ff:	mov    eax,0x0
  403504:	leave  
  403505:	ret    
  403506:	endbr64 
  40350a:	push   rbp
  40350b:	mov    rbp,rsp
  40350e:	sub    rsp,0x10
  403512:	mov    QWORD PTR [rbp-0x8],rdi
  403516:	mov    rax,QWORD PTR [rbp-0x8]
  40351a:	movzx  eax,BYTE PTR [rax+0x10]
  40351e:	movzx  eax,al
  403521:	cmp    eax,0x9
  403524:	je     40357a <_start@@Base+0x3ca>
  403526:	cmp    eax,0x9
  403529:	jg     40353a <_start@@Base+0x38a>
  40352b:	cmp    eax,0x2
  40352e:	je     40354d <_start@@Base+0x39d>
  403530:	cmp    eax,0x8
  403533:	je     403562 <_start@@Base+0x3b2>
  403535:	jmp    4035c6 <_start@@Base+0x416>
  40353a:	cmp    eax,0xb
  40353d:	je     4035aa <_start@@Base+0x3fa>
  40353f:	cmp    eax,0xb
  403542:	jl     403592 <_start@@Base+0x3e2>
  403544:	cmp    eax,0xff
  403549:	je     4035b8 <_start@@Base+0x408>
  40354b:	jmp    4035c6 <_start@@Base+0x416>
  40354d:	mov    rax,QWORD PTR [rbp-0x8]
  403551:	lea    rsi,[rip+0x1049]        # 4045a1 <_start@@Base+0x13f1>
  403558:	mov    rdi,rax
  40355b:	call   40bcbb <flatcc_verify_union_table@@Base>
  403560:	jmp    4035cb <_start@@Base+0x41b>
  403562:	mov    rax,QWORD PTR [rbp-0x8]
  403566:	mov    edx,0x2
  40356b:	mov    esi,0x2
  403570:	mov    rdi,rax
  403573:	call   40bd06 <flatcc_verify_union_struct@@Base>
  403578:	jmp    4035cb <_start@@Base+0x41b>
  40357a:	mov    rax,QWORD PTR [rbp-0x8]
  40357e:	mov    edx,0x4
  403583:	mov    esi,0x4
  403588:	mov    rdi,rax
  40358b:	call   40bd06 <flatcc_verify_union_struct@@Base>
  403590:	jmp    4035cb <_start@@Base+0x41b>
  403592:	mov    rax,QWORD PTR [rbp-0x8]
  403596:	mov    edx,0x4
  40359b:	mov    esi,0x4
  4035a0:	mov    rdi,rax
  4035a3:	call   40bd06 <flatcc_verify_union_struct@@Base>
  4035a8:	jmp    4035cb <_start@@Base+0x41b>
  4035aa:	mov    rax,QWORD PTR [rbp-0x8]
  4035ae:	mov    rdi,rax
  4035b1:	call   40bd4d <flatcc_verify_union_string@@Base>
  4035b6:	jmp    4035cb <_start@@Base+0x41b>
  4035b8:	mov    rax,QWORD PTR [rbp-0x8]
  4035bc:	mov    rdi,rax
  4035bf:	call   40bd4d <flatcc_verify_union_string@@Base>
  4035c4:	jmp    4035cb <_start@@Base+0x41b>
  4035c6:	mov    eax,0x0
  4035cb:	leave  
  4035cc:	ret    
  4035cd:	endbr64 
  4035d1:	push   rbp
  4035d2:	mov    rbp,rsp
  4035d5:	mov    QWORD PTR [rbp-0x8],rdi
  4035d9:	mov    eax,0x0
  4035de:	pop    rbp
  4035df:	ret    
  4035e0:	endbr64 
  4035e4:	push   rbp
  4035e5:	mov    rbp,rsp
  4035e8:	mov    QWORD PTR [rbp-0x8],rdi
  4035ec:	mov    eax,0x0
  4035f1:	pop    rbp
  4035f2:	ret    
  4035f3:	endbr64 
  4035f7:	push   rbp
  4035f8:	mov    rbp,rsp
  4035fb:	mov    QWORD PTR [rbp-0x8],rdi
  4035ff:	mov    eax,0x0
  403604:	pop    rbp
  403605:	ret    
  403606:	endbr64 
  40360a:	push   rbp
  40360b:	mov    rbp,rsp
  40360e:	sub    rsp,0x20
  403612:	mov    QWORD PTR [rbp-0x18],rdi
  403616:	mov    rax,QWORD PTR [rbp-0x18]
  40361a:	mov    ecx,0x1
  40361f:	mov    edx,0x0
  403624:	mov    esi,0x0
  403629:	mov    rdi,rax
  40362c:	call   40b8d6 <flatcc_verify_field@@Base>
  403631:	mov    DWORD PTR [rbp-0x4],eax
  403634:	cmp    DWORD PTR [rbp-0x4],0x0
  403638:	je     40363f <_start@@Base+0x48f>
  40363a:	mov    eax,DWORD PTR [rbp-0x4]
  40363d:	jmp    403644 <_start@@Base+0x494>
  40363f:	mov    eax,0x0
  403644:	leave  
  403645:	ret    
  403646:	endbr64 
  40364a:	push   rbp
  40364b:	mov    rbp,rsp
  40364e:	sub    rsp,0x20
  403652:	mov    QWORD PTR [rbp-0x18],rdi
  403656:	mov    rax,QWORD PTR [rbp-0x18]
  40365a:	mov    ecx,0x1
  40365f:	mov    edx,0x1
  403664:	mov    esi,0x0
  403669:	mov    rdi,rax
  40366c:	call   40b8d6 <flatcc_verify_field@@Base>
  403671:	mov    DWORD PTR [rbp-0x4],eax
  403674:	cmp    DWORD PTR [rbp-0x4],0x0
  403678:	je     403682 <_start@@Base+0x4d2>
  40367a:	mov    eax,DWORD PTR [rbp-0x4]
  40367d:	jmp    403702 <_start@@Base+0x552>
  403682:	mov    rax,QWORD PTR [rbp-0x18]
  403686:	mov    ecx,0x1
  40368b:	mov    edx,0x1
  403690:	mov    esi,0x1
  403695:	mov    rdi,rax
  403698:	call   40b8d6 <flatcc_verify_field@@Base>
  40369d:	mov    DWORD PTR [rbp-0x4],eax
  4036a0:	cmp    DWORD PTR [rbp-0x4],0x0
  4036a4:	je     4036ab <_start@@Base+0x4fb>
  4036a6:	mov    eax,DWORD PTR [rbp-0x4]
  4036a9:	jmp    403702 <_start@@Base+0x552>
  4036ab:	mov    rax,QWORD PTR [rbp-0x18]
  4036af:	mov    ecx,0x1
  4036b4:	mov    edx,0x1
  4036b9:	mov    esi,0x2
  4036be:	mov    rdi,rax
  4036c1:	call   40b8d6 <flatcc_verify_field@@Base>
  4036c6:	mov    DWORD PTR [rbp-0x4],eax
  4036c9:	cmp    DWORD PTR [rbp-0x4],0x0
  4036cd:	je     4036d4 <_start@@Base+0x524>
  4036cf:	mov    eax,DWORD PTR [rbp-0x4]
  4036d2:	jmp    403702 <_start@@Base+0x552>
  4036d4:	mov    rax,QWORD PTR [rbp-0x18]
  4036d8:	mov    ecx,0x1
  4036dd:	mov    edx,0x1
  4036e2:	mov    esi,0x3
  4036e7:	mov    rdi,rax
  4036ea:	call   40b8d6 <flatcc_verify_field@@Base>
  4036ef:	mov    DWORD PTR [rbp-0x4],eax
  4036f2:	cmp    DWORD PTR [rbp-0x4],0x0
  4036f6:	je     4036fd <_start@@Base+0x54d>
  4036f8:	mov    eax,DWORD PTR [rbp-0x4]
  4036fb:	jmp    403702 <_start@@Base+0x552>
  4036fd:	mov    eax,0x0
  403702:	leave  
  403703:	ret    
  403704:	endbr64 
  403708:	push   rbp
  403709:	mov    rbp,rsp
  40370c:	sub    rsp,0x20
  403710:	mov    QWORD PTR [rbp-0x18],rdi
  403714:	mov    rax,QWORD PTR [rbp-0x18]
  403718:	mov    ecx,0x1
  40371d:	mov    edx,0x0
  403722:	mov    esi,0x0
  403727:	mov    rdi,rax
  40372a:	call   40b8d6 <flatcc_verify_field@@Base>
  40372f:	mov    DWORD PTR [rbp-0x4],eax
  403732:	cmp    DWORD PTR [rbp-0x4],0x0
  403736:	je     403740 <_start@@Base+0x590>
  403738:	mov    eax,DWORD PTR [rbp-0x4]
  40373b:	jmp    403818 <_start@@Base+0x668>
  403740:	mov    rax,QWORD PTR [rbp-0x18]
  403744:	mov    ecx,0x8
  403749:	mov    edx,0x8
  40374e:	mov    esi,0x1
  403753:	mov    rdi,rax
  403756:	call   40b8d6 <flatcc_verify_field@@Base>
  40375b:	mov    DWORD PTR [rbp-0x4],eax
  40375e:	cmp    DWORD PTR [rbp-0x4],0x0
  403762:	je     40376c <_start@@Base+0x5bc>
  403764:	mov    eax,DWORD PTR [rbp-0x4]
  403767:	jmp    403818 <_start@@Base+0x668>
  40376c:	mov    rax,QWORD PTR [rbp-0x18]
  403770:	mov    ecx,0x8
  403775:	mov    edx,0x8
  40377a:	mov    esi,0x2
  40377f:	mov    rdi,rax
  403782:	call   40b8d6 <flatcc_verify_field@@Base>
  403787:	mov    DWORD PTR [rbp-0x4],eax
  40378a:	cmp    DWORD PTR [rbp-0x4],0x0
  40378e:	je     403798 <_start@@Base+0x5e8>
  403790:	mov    eax,DWORD PTR [rbp-0x4]
  403793:	jmp    403818 <_start@@Base+0x668>
  403798:	mov    rax,QWORD PTR [rbp-0x18]
  40379c:	mov    ecx,0x4
  4037a1:	mov    edx,0x4
  4037a6:	mov    esi,0x3
  4037ab:	mov    rdi,rax
  4037ae:	call   40b8d6 <flatcc_verify_field@@Base>
  4037b3:	mov    DWORD PTR [rbp-0x4],eax
  4037b6:	cmp    DWORD PTR [rbp-0x4],0x0
  4037ba:	je     4037c1 <_start@@Base+0x611>
  4037bc:	mov    eax,DWORD PTR [rbp-0x4]
  4037bf:	jmp    403818 <_start@@Base+0x668>
  4037c1:	mov    rax,QWORD PTR [rbp-0x18]
  4037c5:	mov    ecx,0x8
  4037ca:	mov    edx,0x8
  4037cf:	mov    esi,0x4
  4037d4:	mov    rdi,rax
  4037d7:	call   40b8d6 <flatcc_verify_field@@Base>
  4037dc:	mov    DWORD PTR [rbp-0x4],eax
  4037df:	cmp    DWORD PTR [rbp-0x4],0x0
  4037e3:	je     4037ea <_start@@Base+0x63a>
  4037e5:	mov    eax,DWORD PTR [rbp-0x4]
  4037e8:	jmp    403818 <_start@@Base+0x668>
  4037ea:	mov    rax,QWORD PTR [rbp-0x18]
  4037ee:	mov    ecx,0x8
  4037f3:	mov    edx,0x8
  4037f8:	mov    esi,0x5
  4037fd:	mov    rdi,rax
  403800:	call   40b8d6 <flatcc_verify_field@@Base>
  403805:	mov    DWORD PTR [rbp-0x4],eax
  403808:	cmp    DWORD PTR [rbp-0x4],0x0
  40380c:	je     403813 <_start@@Base+0x663>
  40380e:	mov    eax,DWORD PTR [rbp-0x4]
  403811:	jmp    403818 <_start@@Base+0x668>
  403813:	mov    eax,0x0
  403818:	leave  
  403819:	ret    
  40381a:	endbr64 
  40381e:	push   rbp
  40381f:	mov    rbp,rsp
  403822:	sub    rsp,0x20
  403826:	mov    QWORD PTR [rbp-0x18],rdi
  40382a:	mov    rax,QWORD PTR [rbp-0x18]
  40382e:	mov    edx,0x0
  403833:	mov    esi,0x0
  403838:	mov    rdi,rax
  40383b:	call   40b947 <flatcc_verify_string_field@@Base>
  403840:	mov    DWORD PTR [rbp-0x4],eax
  403843:	cmp    DWORD PTR [rbp-0x4],0x0
  403847:	je     40384e <_start@@Base+0x69e>
  403849:	mov    eax,DWORD PTR [rbp-0x4]
  40384c:	jmp    4038a5 <_start@@Base+0x6f5>
  40384e:	mov    rax,QWORD PTR [rbp-0x18]
  403852:	mov    ecx,0x8
  403857:	mov    edx,0x8
  40385c:	mov    esi,0x1
  403861:	mov    rdi,rax
  403864:	call   40b8d6 <flatcc_verify_field@@Base>
  403869:	mov    DWORD PTR [rbp-0x4],eax
  40386c:	cmp    DWORD PTR [rbp-0x4],0x0
  403870:	je     403877 <_start@@Base+0x6c7>
  403872:	mov    eax,DWORD PTR [rbp-0x4]
  403875:	jmp    4038a5 <_start@@Base+0x6f5>
  403877:	mov    rax,QWORD PTR [rbp-0x18]
  40387b:	mov    ecx,0x2
  403880:	mov    edx,0x2
  403885:	mov    esi,0x2
  40388a:	mov    rdi,rax
  40388d:	call   40b8d6 <flatcc_verify_field@@Base>
  403892:	mov    DWORD PTR [rbp-0x4],eax
  403895:	cmp    DWORD PTR [rbp-0x4],0x0
  403899:	je     4038a0 <_start@@Base+0x6f0>
  40389b:	mov    eax,DWORD PTR [rbp-0x4]
  40389e:	jmp    4038a5 <_start@@Base+0x6f5>
  4038a0:	mov    eax,0x0
  4038a5:	leave  
  4038a6:	ret    
  4038a7:	endbr64 
  4038ab:	push   rbp
  4038ac:	mov    rbp,rsp
  4038af:	sub    rsp,0x20
  4038b3:	mov    QWORD PTR [rbp-0x18],rdi
  4038b7:	mov    rax,QWORD PTR [rbp-0x18]
  4038bb:	lea    rcx,[rip+0x7d]        # 40393f <_start@@Base+0x78f>
  4038c2:	mov    edx,0x0
  4038c7:	mov    esi,0x0
  4038cc:	mov    rdi,rax
  4038cf:	call   40bb4f <flatcc_verify_table_field@@Base>
  4038d4:	mov    DWORD PTR [rbp-0x4],eax
  4038d7:	cmp    DWORD PTR [rbp-0x4],0x0
  4038db:	je     4038e2 <_start@@Base+0x732>
  4038dd:	mov    eax,DWORD PTR [rbp-0x4]
  4038e0:	jmp    40393d <_start@@Base+0x78d>
  4038e2:	mov    rax,QWORD PTR [rbp-0x18]
  4038e6:	lea    rcx,[rip+0xcf4]        # 4045e1 <_start@@Base+0x1431>
  4038ed:	mov    edx,0x0
  4038f2:	mov    esi,0x1
  4038f7:	mov    rdi,rax
  4038fa:	call   40bb4f <flatcc_verify_table_field@@Base>
  4038ff:	mov    DWORD PTR [rbp-0x4],eax
  403902:	cmp    DWORD PTR [rbp-0x4],0x0
  403906:	je     40390d <_start@@Base+0x75d>
  403908:	mov    eax,DWORD PTR [rbp-0x4]
  40390b:	jmp    40393d <_start@@Base+0x78d>
  40390d:	mov    rax,QWORD PTR [rbp-0x18]
  403911:	lea    rcx,[rip+0xfffffffffffffb5b]        # 403473 <_start@@Base+0x2c3>
  403918:	mov    edx,0x0
  40391d:	mov    esi,0x3
  403922:	mov    rdi,rax
  403925:	call   40c59c <flatcc_verify_union_vector_field@@Base>
  40392a:	mov    DWORD PTR [rbp-0x4],eax
  40392d:	cmp    DWORD PTR [rbp-0x4],0x0
  403931:	je     403938 <_start@@Base+0x788>
  403933:	mov    eax,DWORD PTR [rbp-0x4]
  403936:	jmp    40393d <_start@@Base+0x78d>
  403938:	mov    eax,0x0
  40393d:	leave  
  40393e:	ret    
  40393f:	endbr64 
  403943:	push   rbp
  403944:	mov    rbp,rsp
  403947:	sub    rsp,0x20
  40394b:	mov    QWORD PTR [rbp-0x18],rdi
  40394f:	mov    rax,QWORD PTR [rbp-0x18]
  403953:	lea    rcx,[rip+0x7d]        # 4039d7 <_start@@Base+0x827>
  40395a:	mov    edx,0x0
  40395f:	mov    esi,0x0
  403964:	mov    rdi,rax
  403967:	call   40bb4f <flatcc_verify_table_field@@Base>
  40396c:	mov    DWORD PTR [rbp-0x4],eax
  40396f:	cmp    DWORD PTR [rbp-0x4],0x0
  403973:	je     40397a <_start@@Base+0x7ca>
  403975:	mov    eax,DWORD PTR [rbp-0x4]
  403978:	jmp    4039d5 <_start@@Base+0x825>
  40397a:	mov    rax,QWORD PTR [rbp-0x18]
  40397e:	lea    rcx,[rip+0x1dd]        # 403b62 <_start@@Base+0x9b2>
  403985:	mov    edx,0x0
  40398a:	mov    esi,0x1
  40398f:	mov    rdi,rax
  403992:	call   40bb4f <flatcc_verify_table_field@@Base>
  403997:	mov    DWORD PTR [rbp-0x4],eax
  40399a:	cmp    DWORD PTR [rbp-0x4],0x0
  40399e:	je     4039a5 <_start@@Base+0x7f5>
  4039a0:	mov    eax,DWORD PTR [rbp-0x4]
  4039a3:	jmp    4039d5 <_start@@Base+0x825>
  4039a5:	mov    rax,QWORD PTR [rbp-0x18]
  4039a9:	lea    rcx,[rip+0x21b]        # 403bcb <_start@@Base+0xa1b>
  4039b0:	mov    edx,0x0
  4039b5:	mov    esi,0x2
  4039ba:	mov    rdi,rax
  4039bd:	call   40bb4f <flatcc_verify_table_field@@Base>
  4039c2:	mov    DWORD PTR [rbp-0x4],eax
  4039c5:	cmp    DWORD PTR [rbp-0x4],0x0
  4039c9:	je     4039d0 <_start@@Base+0x820>
  4039cb:	mov    eax,DWORD PTR [rbp-0x4]
  4039ce:	jmp    4039d5 <_start@@Base+0x825>
  4039d0:	mov    eax,0x0
  4039d5:	leave  
  4039d6:	ret    
  4039d7:	endbr64 
  4039db:	push   rbp
  4039dc:	mov    rbp,rsp
  4039df:	sub    rsp,0x20
  4039e3:	mov    QWORD PTR [rbp-0x18],rdi
  4039e7:	mov    rax,QWORD PTR [rbp-0x18]
  4039eb:	mov    edx,0x0
  4039f0:	mov    esi,0x0
  4039f5:	mov    rdi,rax
  4039f8:	call   40b947 <flatcc_verify_string_field@@Base>
  4039fd:	mov    DWORD PTR [rbp-0x4],eax
  403a00:	cmp    DWORD PTR [rbp-0x4],0x0
  403a04:	je     403a0e <_start@@Base+0x85e>
  403a06:	mov    eax,DWORD PTR [rbp-0x4]
  403a09:	jmp    403b60 <_start@@Base+0x9b0>
  403a0e:	mov    rax,QWORD PTR [rbp-0x18]
  403a12:	mov    ecx,0x4
  403a17:	mov    edx,0x4
  403a1c:	mov    esi,0x1
  403a21:	mov    rdi,rax
  403a24:	call   40b8d6 <flatcc_verify_field@@Base>
  403a29:	mov    DWORD PTR [rbp-0x4],eax
  403a2c:	cmp    DWORD PTR [rbp-0x4],0x0
  403a30:	je     403a3a <_start@@Base+0x88a>
  403a32:	mov    eax,DWORD PTR [rbp-0x4]
  403a35:	jmp    403b60 <_start@@Base+0x9b0>
  403a3a:	mov    rax,QWORD PTR [rbp-0x18]
  403a3e:	mov    edx,0x0
  403a43:	mov    esi,0x2
  403a48:	mov    rdi,rax
  403a4b:	call   40b947 <flatcc_verify_string_field@@Base>
  403a50:	mov    DWORD PTR [rbp-0x4],eax
  403a53:	cmp    DWORD PTR [rbp-0x4],0x0
  403a57:	je     403a61 <_start@@Base+0x8b1>
  403a59:	mov    eax,DWORD PTR [rbp-0x4]
  403a5c:	jmp    403b60 <_start@@Base+0x9b0>
  403a61:	mov    rax,QWORD PTR [rbp-0x18]
  403a65:	mov    ecx,0x8
  403a6a:	mov    edx,0x8
  403a6f:	mov    esi,0x3
  403a74:	mov    rdi,rax
  403a77:	call   40b8d6 <flatcc_verify_field@@Base>
  403a7c:	mov    DWORD PTR [rbp-0x4],eax
  403a7f:	cmp    DWORD PTR [rbp-0x4],0x0
  403a83:	je     403a8d <_start@@Base+0x8dd>
  403a85:	mov    eax,DWORD PTR [rbp-0x4]
  403a88:	jmp    403b60 <_start@@Base+0x9b0>
  403a8d:	mov    rax,QWORD PTR [rbp-0x18]
  403a91:	mov    edx,0x0
  403a96:	mov    esi,0x4
  403a9b:	mov    rdi,rax
  403a9e:	call   40b947 <flatcc_verify_string_field@@Base>
  403aa3:	mov    DWORD PTR [rbp-0x4],eax
  403aa6:	cmp    DWORD PTR [rbp-0x4],0x0
  403aaa:	je     403ab4 <_start@@Base+0x904>
  403aac:	mov    eax,DWORD PTR [rbp-0x4]
  403aaf:	jmp    403b60 <_start@@Base+0x9b0>
  403ab4:	mov    rax,QWORD PTR [rbp-0x18]
  403ab8:	mov    ecx,0x8
  403abd:	mov    edx,0x8
  403ac2:	mov    esi,0x5
  403ac7:	mov    rdi,rax
  403aca:	call   40b8d6 <flatcc_verify_field@@Base>
  403acf:	mov    DWORD PTR [rbp-0x4],eax
  403ad2:	cmp    DWORD PTR [rbp-0x4],0x0
  403ad6:	je     403ae0 <_start@@Base+0x930>
  403ad8:	mov    eax,DWORD PTR [rbp-0x4]
  403adb:	jmp    403b60 <_start@@Base+0x9b0>
  403ae0:	mov    rax,QWORD PTR [rbp-0x18]
  403ae4:	mov    ecx,0x4
  403ae9:	mov    edx,0x4
  403aee:	mov    esi,0x6
  403af3:	mov    rdi,rax
  403af6:	call   40b8d6 <flatcc_verify_field@@Base>
  403afb:	mov    DWORD PTR [rbp-0x4],eax
  403afe:	cmp    DWORD PTR [rbp-0x4],0x0
  403b02:	je     403b09 <_start@@Base+0x959>
  403b04:	mov    eax,DWORD PTR [rbp-0x4]
  403b07:	jmp    403b60 <_start@@Base+0x9b0>
  403b09:	mov    rax,QWORD PTR [rbp-0x18]
  403b0d:	mov    ecx,0x8
  403b12:	mov    edx,0x8
  403b17:	mov    esi,0x7
  403b1c:	mov    rdi,rax
  403b1f:	call   40b8d6 <flatcc_verify_field@@Base>
  403b24:	mov    DWORD PTR [rbp-0x4],eax
  403b27:	cmp    DWORD PTR [rbp-0x4],0x0
  403b2b:	je     403b32 <_start@@Base+0x982>
  403b2d:	mov    eax,DWORD PTR [rbp-0x4]
  403b30:	jmp    403b60 <_start@@Base+0x9b0>
  403b32:	mov    rax,QWORD PTR [rbp-0x18]
  403b36:	mov    ecx,0x4
  403b3b:	mov    edx,0x4
  403b40:	mov    esi,0x8
  403b45:	mov    rdi,rax
  403b48:	call   40b8d6 <flatcc_verify_field@@Base>
  403b4d:	mov    DWORD PTR [rbp-0x4],eax
  403b50:	cmp    DWORD PTR [rbp-0x4],0x0
  403b54:	je     403b5b <_start@@Base+0x9ab>
  403b56:	mov    eax,DWORD PTR [rbp-0x4]
  403b59:	jmp    403b60 <_start@@Base+0x9b0>
  403b5b:	mov    eax,0x0
  403b60:	leave  
  403b61:	ret    
  403b62:	endbr64 
  403b66:	push   rbp
  403b67:	mov    rbp,rsp
  403b6a:	sub    rsp,0x20
  403b6e:	mov    QWORD PTR [rbp-0x18],rdi
  403b72:	mov    rax,QWORD PTR [rbp-0x18]
  403b76:	mov    ecx,0x8
  403b7b:	mov    edx,0x8
  403b80:	mov    esi,0x0
  403b85:	mov    rdi,rax
  403b88:	call   40b8d6 <flatcc_verify_field@@Base>
  403b8d:	mov    DWORD PTR [rbp-0x4],eax
  403b90:	cmp    DWORD PTR [rbp-0x4],0x0
  403b94:	je     403b9b <_start@@Base+0x9eb>
  403b96:	mov    eax,DWORD PTR [rbp-0x4]
  403b99:	jmp    403bc9 <_start@@Base+0xa19>
  403b9b:	mov    rax,QWORD PTR [rbp-0x18]
  403b9f:	mov    ecx,0x4
  403ba4:	mov    edx,0x4
  403ba9:	mov    esi,0x1
  403bae:	mov    rdi,rax
  403bb1:	call   40b8d6 <flatcc_verify_field@@Base>
  403bb6:	mov    DWORD PTR [rbp-0x4],eax
  403bb9:	cmp    DWORD PTR [rbp-0x4],0x0
  403bbd:	je     403bc4 <_start@@Base+0xa14>
  403bbf:	mov    eax,DWORD PTR [rbp-0x4]
  403bc2:	jmp    403bc9 <_start@@Base+0xa19>
  403bc4:	mov    eax,0x0
  403bc9:	leave  
  403bca:	ret    
  403bcb:	endbr64 
  403bcf:	push   rbp
  403bd0:	mov    rbp,rsp
  403bd3:	sub    rsp,0x20
  403bd7:	mov    QWORD PTR [rbp-0x18],rdi
  403bdb:	mov    rax,QWORD PTR [rbp-0x18]
  403bdf:	mov    ecx,0x8
  403be4:	mov    edx,0x8
  403be9:	mov    esi,0x0
  403bee:	mov    rdi,rax
  403bf1:	call   40b8d6 <flatcc_verify_field@@Base>
  403bf6:	mov    DWORD PTR [rbp-0x4],eax
  403bf9:	cmp    DWORD PTR [rbp-0x4],0x0
  403bfd:	je     403c04 <_start@@Base+0xa54>
  403bff:	mov    eax,DWORD PTR [rbp-0x4]
  403c02:	jmp    403c32 <_start@@Base+0xa82>
  403c04:	mov    rax,QWORD PTR [rbp-0x18]
  403c08:	mov    ecx,0x4
  403c0d:	mov    edx,0x4
  403c12:	mov    esi,0x1
  403c17:	mov    rdi,rax
  403c1a:	call   40b8d6 <flatcc_verify_field@@Base>
  403c1f:	mov    DWORD PTR [rbp-0x4],eax
  403c22:	cmp    DWORD PTR [rbp-0x4],0x0
  403c26:	je     403c2d <_start@@Base+0xa7d>
  403c28:	mov    eax,DWORD PTR [rbp-0x4]
  403c2b:	jmp    403c32 <_start@@Base+0xa82>
  403c2d:	mov    eax,0x0
  403c32:	leave  
  403c33:	ret    
  403c34:	endbr64 
  403c38:	push   rbp
  403c39:	mov    rbp,rsp
  403c3c:	sub    rsp,0x20
  403c40:	mov    QWORD PTR [rbp-0x18],rdi
  403c44:	mov    rax,QWORD PTR [rbp-0x18]
  403c48:	mov    r9d,0xffffffff
  403c4e:	mov    r8d,0x1
  403c54:	mov    ecx,0x1
  403c59:	mov    edx,0x0
  403c5e:	mov    esi,0x0
  403c63:	mov    rdi,rax
  403c66:	call   40b9e0 <flatcc_verify_vector_field@@Base>
  403c6b:	mov    DWORD PTR [rbp-0x4],eax
  403c6e:	cmp    DWORD PTR [rbp-0x4],0x0
  403c72:	je     403c79 <_start@@Base+0xac9>
  403c74:	mov    eax,DWORD PTR [rbp-0x4]
  403c77:	jmp    403ce9 <_start@@Base+0xb39>
  403c79:	mov    rax,QWORD PTR [rbp-0x18]
  403c7d:	mov    r9d,0xffffffff
  403c83:	mov    r8d,0x1
  403c89:	mov    ecx,0x1
  403c8e:	mov    edx,0x0
  403c93:	mov    esi,0x1
  403c98:	mov    rdi,rax
  403c9b:	call   40b9e0 <flatcc_verify_vector_field@@Base>
  403ca0:	mov    DWORD PTR [rbp-0x4],eax
  403ca3:	cmp    DWORD PTR [rbp-0x4],0x0
  403ca7:	je     403cae <_start@@Base+0xafe>
  403ca9:	mov    eax,DWORD PTR [rbp-0x4]
  403cac:	jmp    403ce9 <_start@@Base+0xb39>
  403cae:	mov    rax,QWORD PTR [rbp-0x18]
  403cb2:	lea    r9,[rip+0x32]        # 403ceb <_start@@Base+0xb3b>
  403cb9:	mov    r8d,0x1
  403cbf:	mov    ecx,0x0
  403cc4:	mov    edx,0x0
  403cc9:	mov    esi,0x2
  403cce:	mov    rdi,rax
  403cd1:	call   40c24b <flatcc_verify_table_as_nested_root@@Base>
  403cd6:	mov    DWORD PTR [rbp-0x4],eax
  403cd9:	cmp    DWORD PTR [rbp-0x4],0x0
  403cdd:	je     403ce4 <_start@@Base+0xb34>
  403cdf:	mov    eax,DWORD PTR [rbp-0x4]
  403ce2:	jmp    403ce9 <_start@@Base+0xb39>
  403ce4:	mov    eax,0x0
  403ce9:	leave  
  403cea:	ret    
  403ceb:	endbr64 
  403cef:	push   rbp
  403cf0:	mov    rbp,rsp
  403cf3:	sub    rsp,0x20
  403cf7:	mov    QWORD PTR [rbp-0x18],rdi
  403cfb:	mov    rax,QWORD PTR [rbp-0x18]
  403cff:	mov    ecx,0x10
  403d04:	mov    edx,0x20
  403d09:	mov    esi,0x0
  403d0e:	mov    rdi,rax
  403d11:	call   40b8d6 <flatcc_verify_field@@Base>
  403d16:	mov    DWORD PTR [rbp-0x4],eax
  403d19:	cmp    DWORD PTR [rbp-0x4],0x0
  403d1d:	je     403d27 <_start@@Base+0xb77>
  403d1f:	mov    eax,DWORD PTR [rbp-0x4]
  403d22:	jmp    404339 <_start@@Base+0x1189>
  403d27:	mov    rax,QWORD PTR [rbp-0x18]
  403d2b:	mov    ecx,0x2
  403d30:	mov    edx,0x2
  403d35:	mov    esi,0x2
  403d3a:	mov    rdi,rax
  403d3d:	call   40b8d6 <flatcc_verify_field@@Base>
  403d42:	mov    DWORD PTR [rbp-0x4],eax
  403d45:	cmp    DWORD PTR [rbp-0x4],0x0
  403d49:	je     403d53 <_start@@Base+0xba3>
  403d4b:	mov    eax,DWORD PTR [rbp-0x4]
  403d4e:	jmp    404339 <_start@@Base+0x1189>
  403d53:	mov    rax,QWORD PTR [rbp-0x18]
  403d57:	mov    ecx,0x2
  403d5c:	mov    edx,0x2
  403d61:	mov    esi,0x1
  403d66:	mov    rdi,rax
  403d69:	call   40b8d6 <flatcc_verify_field@@Base>
  403d6e:	mov    DWORD PTR [rbp-0x4],eax
  403d71:	cmp    DWORD PTR [rbp-0x4],0x0
  403d75:	je     403d7f <_start@@Base+0xbcf>
  403d77:	mov    eax,DWORD PTR [rbp-0x4]
  403d7a:	jmp    404339 <_start@@Base+0x1189>
  403d7f:	mov    rax,QWORD PTR [rbp-0x18]
  403d83:	mov    edx,0x1
  403d88:	mov    esi,0x3
  403d8d:	mov    rdi,rax
  403d90:	call   40b947 <flatcc_verify_string_field@@Base>
  403d95:	mov    DWORD PTR [rbp-0x4],eax
  403d98:	cmp    DWORD PTR [rbp-0x4],0x0
  403d9c:	je     403da6 <_start@@Base+0xbf6>
  403d9e:	mov    eax,DWORD PTR [rbp-0x4]
  403da1:	jmp    404339 <_start@@Base+0x1189>
  403da6:	mov    rax,QWORD PTR [rbp-0x18]
  403daa:	mov    ecx,0x1
  403daf:	mov    edx,0x1
  403db4:	mov    esi,0x6
  403db9:	mov    rdi,rax
  403dbc:	call   40b8d6 <flatcc_verify_field@@Base>
  403dc1:	mov    DWORD PTR [rbp-0x4],eax
  403dc4:	cmp    DWORD PTR [rbp-0x4],0x0
  403dc8:	je     403dd2 <_start@@Base+0xc22>
  403dca:	mov    eax,DWORD PTR [rbp-0x4]
  403dcd:	jmp    404339 <_start@@Base+0x1189>
  403dd2:	mov    rax,QWORD PTR [rbp-0x18]
  403dd6:	mov    r9d,0xffffffff
  403ddc:	mov    r8d,0x1
  403de2:	mov    ecx,0x1
  403de7:	mov    edx,0x0
  403dec:	mov    esi,0x5
  403df1:	mov    rdi,rax
  403df4:	call   40b9e0 <flatcc_verify_vector_field@@Base>
  403df9:	mov    DWORD PTR [rbp-0x4],eax
  403dfc:	cmp    DWORD PTR [rbp-0x4],0x0
  403e00:	je     403e0a <_start@@Base+0xc5a>
  403e02:	mov    eax,DWORD PTR [rbp-0x4]
  403e05:	jmp    404339 <_start@@Base+0x1189>
  403e0a:	mov    rax,QWORD PTR [rbp-0x18]
  403e0e:	lea    rcx,[rip+0xfffffffffffffed6]        # 403ceb <_start@@Base+0xb3b>
  403e15:	mov    edx,0x0
  403e1a:	mov    esi,0xb
  403e1f:	mov    rdi,rax
  403e22:	call   40bc05 <flatcc_verify_table_vector_field@@Base>
  403e27:	mov    DWORD PTR [rbp-0x4],eax
  403e2a:	cmp    DWORD PTR [rbp-0x4],0x0
  403e2e:	je     403e38 <_start@@Base+0xc88>
  403e30:	mov    eax,DWORD PTR [rbp-0x4]
  403e33:	jmp    404339 <_start@@Base+0x1189>
  403e38:	mov    rax,QWORD PTR [rbp-0x18]
  403e3c:	mov    edx,0x0
  403e41:	mov    esi,0xa
  403e46:	mov    rdi,rax
  403e49:	call   40bab6 <flatcc_verify_string_vector_field@@Base>
  403e4e:	mov    DWORD PTR [rbp-0x4],eax
  403e51:	cmp    DWORD PTR [rbp-0x4],0x0
  403e55:	je     403e5f <_start@@Base+0xcaf>
  403e57:	mov    eax,DWORD PTR [rbp-0x4]
  403e5a:	jmp    404339 <_start@@Base+0x1189>
  403e5f:	mov    rax,QWORD PTR [rbp-0x18]
  403e63:	mov    edx,0x0
  403e68:	mov    esi,0x1c
  403e6d:	mov    rdi,rax
  403e70:	call   40bab6 <flatcc_verify_string_vector_field@@Base>
  403e75:	mov    DWORD PTR [rbp-0x4],eax
  403e78:	cmp    DWORD PTR [rbp-0x4],0x0
  403e7c:	je     403e86 <_start@@Base+0xcd6>
  403e7e:	mov    eax,DWORD PTR [rbp-0x4]
  403e81:	jmp    404339 <_start@@Base+0x1189>
  403e86:	mov    rax,QWORD PTR [rbp-0x18]
  403e8a:	mov    r9d,0xffffffff
  403e90:	mov    r8d,0x1
  403e96:	mov    ecx,0x1
  403e9b:	mov    edx,0x0
  403ea0:	mov    esi,0x18
  403ea5:	mov    rdi,rax
  403ea8:	call   40b9e0 <flatcc_verify_vector_field@@Base>
  403ead:	mov    DWORD PTR [rbp-0x4],eax
  403eb0:	cmp    DWORD PTR [rbp-0x4],0x0
  403eb4:	je     403ebe <_start@@Base+0xd0e>
  403eb6:	mov    eax,DWORD PTR [rbp-0x4]
  403eb9:	jmp    404339 <_start@@Base+0x1189>
  403ebe:	mov    rax,QWORD PTR [rbp-0x18]
  403ec2:	mov    r9d,0x1fffffff
  403ec8:	mov    r8d,0x4
  403ece:	mov    ecx,0x8
  403ed3:	mov    edx,0x0
  403ed8:	mov    esi,0x1d
  403edd:	mov    rdi,rax
  403ee0:	call   40b9e0 <flatcc_verify_vector_field@@Base>
  403ee5:	mov    DWORD PTR [rbp-0x4],eax
  403ee8:	cmp    DWORD PTR [rbp-0x4],0x0
  403eec:	je     403ef6 <_start@@Base+0xd46>
  403eee:	mov    eax,DWORD PTR [rbp-0x4]
  403ef1:	jmp    404339 <_start@@Base+0x1189>
  403ef6:	mov    rax,QWORD PTR [rbp-0x18]
  403efa:	lea    rcx,[rip+0xfffffffffffffdea]        # 403ceb <_start@@Base+0xb3b>
  403f01:	mov    edx,0x0
  403f06:	mov    esi,0xc
  403f0b:	mov    rdi,rax
  403f0e:	call   40bb4f <flatcc_verify_table_field@@Base>
  403f13:	mov    DWORD PTR [rbp-0x4],eax
  403f16:	cmp    DWORD PTR [rbp-0x4],0x0
  403f1a:	je     403f24 <_start@@Base+0xd74>
  403f1c:	mov    eax,DWORD PTR [rbp-0x4]
  403f1f:	jmp    404339 <_start@@Base+0x1189>
  403f24:	mov    rax,QWORD PTR [rbp-0x18]
  403f28:	lea    rcx,[rip+0xfffffffffffff544]        # 403473 <_start@@Base+0x2c3>
  403f2f:	mov    edx,0x0
  403f34:	mov    esi,0x8
  403f39:	mov    rdi,rax
  403f3c:	call   40c394 <flatcc_verify_union_field@@Base>
  403f41:	mov    DWORD PTR [rbp-0x4],eax
  403f44:	cmp    DWORD PTR [rbp-0x4],0x0
  403f48:	je     403f52 <_start@@Base+0xda2>
  403f4a:	mov    eax,DWORD PTR [rbp-0x4]
  403f4d:	jmp    404339 <_start@@Base+0x1189>
  403f52:	mov    rax,QWORD PTR [rbp-0x18]
  403f56:	mov    r9d,0x3fffffff
  403f5c:	mov    r8d,0x2
  403f62:	mov    ecx,0x4
  403f67:	mov    edx,0x0
  403f6c:	mov    esi,0x9
  403f71:	mov    rdi,rax
  403f74:	call   40b9e0 <flatcc_verify_vector_field@@Base>
  403f79:	mov    DWORD PTR [rbp-0x4],eax
  403f7c:	cmp    DWORD PTR [rbp-0x4],0x0
  403f80:	je     403f8a <_start@@Base+0xdda>
  403f82:	mov    eax,DWORD PTR [rbp-0x4]
  403f85:	jmp    404339 <_start@@Base+0x1189>
  403f8a:	mov    rax,QWORD PTR [rbp-0x18]
  403f8e:	mov    r9d,0x3fffffff
  403f94:	mov    r8d,0x2
  403f9a:	mov    ecx,0x4
  403f9f:	mov    edx,0x0
  403fa4:	mov    esi,0x1f
  403fa9:	mov    rdi,rax
  403fac:	call   40b9e0 <flatcc_verify_vector_field@@Base>
  403fb1:	mov    DWORD PTR [rbp-0x4],eax
  403fb4:	cmp    DWORD PTR [rbp-0x4],0x0
  403fb8:	je     403fc2 <_start@@Base+0xe12>
  403fba:	mov    eax,DWORD PTR [rbp-0x4]
  403fbd:	jmp    404339 <_start@@Base+0x1189>
  403fc2:	mov    rax,QWORD PTR [rbp-0x18]
  403fc6:	lea    r9,[rip+0xfffffffffffffd1e]        # 403ceb <_start@@Base+0xb3b>
  403fcd:	mov    r8d,0x1
  403fd3:	mov    ecx,0x0
  403fd8:	mov    edx,0x0
  403fdd:	mov    esi,0xd
  403fe2:	mov    rdi,rax
  403fe5:	call   40c24b <flatcc_verify_table_as_nested_root@@Base>
  403fea:	mov    DWORD PTR [rbp-0x4],eax
  403fed:	cmp    DWORD PTR [rbp-0x4],0x0
  403ff1:	je     403ffb <_start@@Base+0xe4b>
  403ff3:	mov    eax,DWORD PTR [rbp-0x4]
  403ff6:	jmp    404339 <_start@@Base+0x1189>
  403ffb:	mov    rax,QWORD PTR [rbp-0x18]
  403fff:	lea    rcx,[rip+0xfffffffffffff814]        # 40381a <_start@@Base+0x66a>
  404006:	mov    edx,0x0
  40400b:	mov    esi,0xe
  404010:	mov    rdi,rax
  404013:	call   40bb4f <flatcc_verify_table_field@@Base>
  404018:	mov    DWORD PTR [rbp-0x4],eax
  40401b:	cmp    DWORD PTR [rbp-0x4],0x0
  40401f:	je     404029 <_start@@Base+0xe79>
  404021:	mov    eax,DWORD PTR [rbp-0x4]
  404024:	jmp    404339 <_start@@Base+0x1189>
  404029:	mov    rax,QWORD PTR [rbp-0x18]
  40402d:	mov    ecx,0x1
  404032:	mov    edx,0x1
  404037:	mov    esi,0xf
  40403c:	mov    rdi,rax
  40403f:	call   40b8d6 <flatcc_verify_field@@Base>
  404044:	mov    DWORD PTR [rbp-0x4],eax
  404047:	cmp    DWORD PTR [rbp-0x4],0x0
  40404b:	je     404055 <_start@@Base+0xea5>
  40404d:	mov    eax,DWORD PTR [rbp-0x4]
  404050:	jmp    404339 <_start@@Base+0x1189>
  404055:	mov    rax,QWORD PTR [rbp-0x18]
  404059:	mov    ecx,0x4
  40405e:	mov    edx,0x4
  404063:	mov    esi,0x10
  404068:	mov    rdi,rax
  40406b:	call   40b8d6 <flatcc_verify_field@@Base>
  404070:	mov    DWORD PTR [rbp-0x4],eax
  404073:	cmp    DWORD PTR [rbp-0x4],0x0
  404077:	je     404081 <_start@@Base+0xed1>
  404079:	mov    eax,DWORD PTR [rbp-0x4]
  40407c:	jmp    404339 <_start@@Base+0x1189>
  404081:	mov    rax,QWORD PTR [rbp-0x18]
  404085:	mov    ecx,0x4
  40408a:	mov    edx,0x4
  40408f:	mov    esi,0x11
  404094:	mov    rdi,rax
  404097:	call   40b8d6 <flatcc_verify_field@@Base>
  40409c:	mov    DWORD PTR [rbp-0x4],eax
  40409f:	cmp    DWORD PTR [rbp-0x4],0x0
  4040a3:	je     4040ad <_start@@Base+0xefd>
  4040a5:	mov    eax,DWORD PTR [rbp-0x4]
  4040a8:	jmp    404339 <_start@@Base+0x1189>
  4040ad:	mov    rax,QWORD PTR [rbp-0x18]
  4040b1:	mov    ecx,0x8
  4040b6:	mov    edx,0x8
  4040bb:	mov    esi,0x12
  4040c0:	mov    rdi,rax
  4040c3:	call   40b8d6 <flatcc_verify_field@@Base>
  4040c8:	mov    DWORD PTR [rbp-0x4],eax
  4040cb:	cmp    DWORD PTR [rbp-0x4],0x0
  4040cf:	je     4040d9 <_start@@Base+0xf29>
  4040d1:	mov    eax,DWORD PTR [rbp-0x4]
  4040d4:	jmp    404339 <_start@@Base+0x1189>
  4040d9:	mov    rax,QWORD PTR [rbp-0x18]
  4040dd:	mov    ecx,0x8
  4040e2:	mov    edx,0x8
  4040e7:	mov    esi,0x13
  4040ec:	mov    rdi,rax
  4040ef:	call   40b8d6 <flatcc_verify_field@@Base>
  4040f4:	mov    DWORD PTR [rbp-0x4],eax
  4040f7:	cmp    DWORD PTR [rbp-0x4],0x0
  4040fb:	je     404105 <_start@@Base+0xf55>
  4040fd:	mov    eax,DWORD PTR [rbp-0x4]
  404100:	jmp    404339 <_start@@Base+0x1189>
  404105:	mov    rax,QWORD PTR [rbp-0x18]
  404109:	mov    ecx,0x4
  40410e:	mov    edx,0x4
  404113:	mov    esi,0x14
  404118:	mov    rdi,rax
  40411b:	call   40b8d6 <flatcc_verify_field@@Base>
  404120:	mov    DWORD PTR [rbp-0x4],eax
  404123:	cmp    DWORD PTR [rbp-0x4],0x0
  404127:	je     404131 <_start@@Base+0xf81>
  404129:	mov    eax,DWORD PTR [rbp-0x4]
  40412c:	jmp    404339 <_start@@Base+0x1189>
  404131:	mov    rax,QWORD PTR [rbp-0x18]
  404135:	mov    ecx,0x4
  40413a:	mov    edx,0x4
  40413f:	mov    esi,0x15
  404144:	mov    rdi,rax
  404147:	call   40b8d6 <flatcc_verify_field@@Base>
  40414c:	mov    DWORD PTR [rbp-0x4],eax
  40414f:	cmp    DWORD PTR [rbp-0x4],0x0
  404153:	je     40415d <_start@@Base+0xfad>
  404155:	mov    eax,DWORD PTR [rbp-0x4]
  404158:	jmp    404339 <_start@@Base+0x1189>
  40415d:	mov    rax,QWORD PTR [rbp-0x18]
  404161:	mov    ecx,0x8
  404166:	mov    edx,0x8
  40416b:	mov    esi,0x16
  404170:	mov    rdi,rax
  404173:	call   40b8d6 <flatcc_verify_field@@Base>
  404178:	mov    DWORD PTR [rbp-0x4],eax
  40417b:	cmp    DWORD PTR [rbp-0x4],0x0
  40417f:	je     404189 <_start@@Base+0xfd9>
  404181:	mov    eax,DWORD PTR [rbp-0x4]
  404184:	jmp    404339 <_start@@Base+0x1189>
  404189:	mov    rax,QWORD PTR [rbp-0x18]
  40418d:	mov    ecx,0x8
  404192:	mov    edx,0x8
  404197:	mov    esi,0x17
  40419c:	mov    rdi,rax
  40419f:	call   40b8d6 <flatcc_verify_field@@Base>
  4041a4:	mov    DWORD PTR [rbp-0x4],eax
  4041a7:	cmp    DWORD PTR [rbp-0x4],0x0
  4041ab:	je     4041b5 <_start@@Base+0x1005>
  4041ad:	mov    eax,DWORD PTR [rbp-0x4]
  4041b0:	jmp    404339 <_start@@Base+0x1189>
  4041b5:	mov    rax,QWORD PTR [rbp-0x18]
  4041b9:	mov    ecx,0x4
  4041be:	mov    edx,0x4
  4041c3:	mov    esi,0x19
  4041c8:	mov    rdi,rax
  4041cb:	call   40b8d6 <flatcc_verify_field@@Base>
  4041d0:	mov    DWORD PTR [rbp-0x4],eax
  4041d3:	cmp    DWORD PTR [rbp-0x4],0x0
  4041d7:	je     4041e1 <_start@@Base+0x1031>
  4041d9:	mov    eax,DWORD PTR [rbp-0x4]
  4041dc:	jmp    404339 <_start@@Base+0x1189>
  4041e1:	mov    rax,QWORD PTR [rbp-0x18]
  4041e5:	mov    ecx,0x4
  4041ea:	mov    edx,0x4
  4041ef:	mov    esi,0x1a
  4041f4:	mov    rdi,rax
  4041f7:	call   40b8d6 <flatcc_verify_field@@Base>
  4041fc:	mov    DWORD PTR [rbp-0x4],eax
  4041ff:	cmp    DWORD PTR [rbp-0x4],0x0
  404203:	je     40420d <_start@@Base+0x105d>
  404205:	mov    eax,DWORD PTR [rbp-0x4]
  404208:	jmp    404339 <_start@@Base+0x1189>
  40420d:	mov    rax,QWORD PTR [rbp-0x18]
  404211:	mov    ecx,0x4
  404216:	mov    edx,0x4
  40421b:	mov    esi,0x1b
  404220:	mov    rdi,rax
  404223:	call   40b8d6 <flatcc_verify_field@@Base>
  404228:	mov    DWORD PTR [rbp-0x4],eax
  40422b:	cmp    DWORD PTR [rbp-0x4],0x0
  40422f:	je     404239 <_start@@Base+0x1089>
  404231:	mov    eax,DWORD PTR [rbp-0x4]
  404234:	jmp    404339 <_start@@Base+0x1189>
  404239:	mov    rax,QWORD PTR [rbp-0x18]
  40423d:	mov    r9d,0xffffffff
  404243:	mov    r8d,0x1
  404249:	mov    ecx,0x1
  40424e:	mov    edx,0x0
  404253:	mov    esi,0x1e
  404258:	mov    rdi,rax
  40425b:	call   40b9e0 <flatcc_verify_vector_field@@Base>
  404260:	mov    DWORD PTR [rbp-0x4],eax
  404263:	cmp    DWORD PTR [rbp-0x4],0x0
  404267:	je     404271 <_start@@Base+0x10c1>
  404269:	mov    eax,DWORD PTR [rbp-0x4]
  40426c:	jmp    404339 <_start@@Base+0x1189>
  404271:	mov    rax,QWORD PTR [rbp-0x18]
  404275:	mov    r9d,0x1fffffff
  40427b:	mov    r8d,0x8
  404281:	mov    ecx,0x8
  404286:	mov    edx,0x0
  40428b:	mov    esi,0x20
  404290:	mov    rdi,rax
  404293:	call   40b9e0 <flatcc_verify_vector_field@@Base>
  404298:	mov    DWORD PTR [rbp-0x4],eax
  40429b:	cmp    DWORD PTR [rbp-0x4],0x0
  40429f:	je     4042a9 <_start@@Base+0x10f9>
  4042a1:	mov    eax,DWORD PTR [rbp-0x4]
  4042a4:	jmp    404339 <_start@@Base+0x1189>
  4042a9:	mov    rax,QWORD PTR [rbp-0x18]
  4042ad:	mov    r9d,0x1fffffff
  4042b3:	mov    r8d,0x8
  4042b9:	mov    ecx,0x8
  4042be:	mov    edx,0x0
  4042c3:	mov    esi,0x21
  4042c8:	mov    rdi,rax
  4042cb:	call   40b9e0 <flatcc_verify_vector_field@@Base>
  4042d0:	mov    DWORD PTR [rbp-0x4],eax
  4042d3:	cmp    DWORD PTR [rbp-0x4],0x0
  4042d7:	je     4042de <_start@@Base+0x112e>
  4042d9:	mov    eax,DWORD PTR [rbp-0x4]
  4042dc:	jmp    404339 <_start@@Base+0x1189>
  4042de:	mov    rax,QWORD PTR [rbp-0x18]
  4042e2:	lea    rcx,[rip+0xfffffffffffff2e4]        # 4035cd <_start@@Base+0x41d>
  4042e9:	mov    edx,0x0
  4042ee:	mov    esi,0x22
  4042f3:	mov    rdi,rax
  4042f6:	call   40bb4f <flatcc_verify_table_field@@Base>
  4042fb:	mov    DWORD PTR [rbp-0x4],eax
  4042fe:	cmp    DWORD PTR [rbp-0x4],0x0
  404302:	je     404309 <_start@@Base+0x1159>
  404304:	mov    eax,DWORD PTR [rbp-0x4]
  404307:	jmp    404339 <_start@@Base+0x1189>
  404309:	mov    rax,QWORD PTR [rbp-0x18]
  40430d:	lea    rcx,[rip+0xfffffffffffff920]        # 403c34 <_start@@Base+0xa84>
  404314:	mov    edx,0x0
  404319:	mov    esi,0x23
  40431e:	mov    rdi,rax
  404321:	call   40bb4f <flatcc_verify_table_field@@Base>
  404326:	mov    DWORD PTR [rbp-0x4],eax
  404329:	cmp    DWORD PTR [rbp-0x4],0x0
  40432d:	je     404334 <_start@@Base+0x1184>
  40432f:	mov    eax,DWORD PTR [rbp-0x4]
  404332:	jmp    404339 <_start@@Base+0x1189>
  404334:	mov    eax,0x0
  404339:	leave  
  40433a:	ret    
  40433b:	push   rbp
  40433c:	mov    rbp,rsp
  40433f:	sub    rsp,0x10
  404343:	mov    QWORD PTR [rbp-0x8],rdi
  404347:	mov    QWORD PTR [rbp-0x10],rsi
  40434b:	mov    rsi,QWORD PTR [rbp-0x10]
  40434f:	mov    rax,QWORD PTR [rbp-0x8]
  404353:	lea    rcx,[rip+0xfffffffffffff991]        # 403ceb <_start@@Base+0xb3b>
  40435a:	lea    rdx,[rip+0x8df7]        # 40d158 <_IO_stdin_used@@Base+0x158>
  404361:	mov    rdi,rax
  404364:	call   40c043 <flatcc_verify_table_as_root@@Base>
  404369:	leave  
  40436a:	ret    
  40436b:	endbr64 
  40436f:	push   rbp
  404370:	mov    rbp,rsp
  404373:	sub    rsp,0x20
  404377:	mov    QWORD PTR [rbp-0x18],rdi
  40437b:	mov    rax,QWORD PTR [rbp-0x18]
  40437f:	mov    ecx,0x1
  404384:	mov    edx,0x1
  404389:	mov    esi,0x0
  40438e:	mov    rdi,rax
  404391:	call   40b8d6 <flatcc_verify_field@@Base>
  404396:	mov    DWORD PTR [rbp-0x4],eax
  404399:	cmp    DWORD PTR [rbp-0x4],0x0
  40439d:	je     4043a7 <_start@@Base+0x11f7>
  40439f:	mov    eax,DWORD PTR [rbp-0x4]
  4043a2:	jmp    40459f <_start@@Base+0x13ef>
  4043a7:	mov    rax,QWORD PTR [rbp-0x18]
  4043ab:	mov    ecx,0x1
  4043b0:	mov    edx,0x1
  4043b5:	mov    esi,0x1
  4043ba:	mov    rdi,rax
  4043bd:	call   40b8d6 <flatcc_verify_field@@Base>
  4043c2:	mov    DWORD PTR [rbp-0x4],eax
  4043c5:	cmp    DWORD PTR [rbp-0x4],0x0
  4043c9:	je     4043d3 <_start@@Base+0x1223>
  4043cb:	mov    eax,DWORD PTR [rbp-0x4]
  4043ce:	jmp    40459f <_start@@Base+0x13ef>
  4043d3:	mov    rax,QWORD PTR [rbp-0x18]
  4043d7:	mov    ecx,0x2
  4043dc:	mov    edx,0x2
  4043e1:	mov    esi,0x2
  4043e6:	mov    rdi,rax
  4043e9:	call   40b8d6 <flatcc_verify_field@@Base>
  4043ee:	mov    DWORD PTR [rbp-0x4],eax
  4043f1:	cmp    DWORD PTR [rbp-0x4],0x0
  4043f5:	je     4043ff <_start@@Base+0x124f>
  4043f7:	mov    eax,DWORD PTR [rbp-0x4]
  4043fa:	jmp    40459f <_start@@Base+0x13ef>
  4043ff:	mov    rax,QWORD PTR [rbp-0x18]
  404403:	mov    ecx,0x2
  404408:	mov    edx,0x2
  40440d:	mov    esi,0x3
  404412:	mov    rdi,rax
  404415:	call   40b8d6 <flatcc_verify_field@@Base>
  40441a:	mov    DWORD PTR [rbp-0x4],eax
  40441d:	cmp    DWORD PTR [rbp-0x4],0x0
  404421:	je     40442b <_start@@Base+0x127b>
  404423:	mov    eax,DWORD PTR [rbp-0x4]
  404426:	jmp    40459f <_start@@Base+0x13ef>
  40442b:	mov    rax,QWORD PTR [rbp-0x18]
  40442f:	mov    ecx,0x4
  404434:	mov    edx,0x4
  404439:	mov    esi,0x4
  40443e:	mov    rdi,rax
  404441:	call   40b8d6 <flatcc_verify_field@@Base>
  404446:	mov    DWORD PTR [rbp-0x4],eax
  404449:	cmp    DWORD PTR [rbp-0x4],0x0
  40444d:	je     404457 <_start@@Base+0x12a7>
  40444f:	mov    eax,DWORD PTR [rbp-0x4]
  404452:	jmp    40459f <_start@@Base+0x13ef>
  404457:	mov    rax,QWORD PTR [rbp-0x18]
  40445b:	mov    ecx,0x4
  404460:	mov    edx,0x4
  404465:	mov    esi,0x5
  40446a:	mov    rdi,rax
  40446d:	call   40b8d6 <flatcc_verify_field@@Base>
  404472:	mov    DWORD PTR [rbp-0x4],eax
  404475:	cmp    DWORD PTR [rbp-0x4],0x0
  404479:	je     404483 <_start@@Base+0x12d3>
  40447b:	mov    eax,DWORD PTR [rbp-0x4]
  40447e:	jmp    40459f <_start@@Base+0x13ef>
  404483:	mov    rax,QWORD PTR [rbp-0x18]
  404487:	mov    ecx,0x8
  40448c:	mov    edx,0x8
  404491:	mov    esi,0x6
  404496:	mov    rdi,rax
  404499:	call   40b8d6 <flatcc_verify_field@@Base>
  40449e:	mov    DWORD PTR [rbp-0x4],eax
  4044a1:	cmp    DWORD PTR [rbp-0x4],0x0
  4044a5:	je     4044af <_start@@Base+0x12ff>
  4044a7:	mov    eax,DWORD PTR [rbp-0x4]
  4044aa:	jmp    40459f <_start@@Base+0x13ef>
  4044af:	mov    rax,QWORD PTR [rbp-0x18]
  4044b3:	mov    ecx,0x8
  4044b8:	mov    edx,0x8
  4044bd:	mov    esi,0x7
  4044c2:	mov    rdi,rax
  4044c5:	call   40b8d6 <flatcc_verify_field@@Base>
  4044ca:	mov    DWORD PTR [rbp-0x4],eax
  4044cd:	cmp    DWORD PTR [rbp-0x4],0x0
  4044d1:	je     4044db <_start@@Base+0x132b>
  4044d3:	mov    eax,DWORD PTR [rbp-0x4]
  4044d6:	jmp    40459f <_start@@Base+0x13ef>
  4044db:	mov    rax,QWORD PTR [rbp-0x18]
  4044df:	mov    ecx,0x4
  4044e4:	mov    edx,0x4
  4044e9:	mov    esi,0x8
  4044ee:	mov    rdi,rax
  4044f1:	call   40b8d6 <flatcc_verify_field@@Base>
  4044f6:	mov    DWORD PTR [rbp-0x4],eax
  4044f9:	cmp    DWORD PTR [rbp-0x4],0x0
  4044fd:	je     404507 <_start@@Base+0x1357>
  4044ff:	mov    eax,DWORD PTR [rbp-0x4]
  404502:	jmp    40459f <_start@@Base+0x13ef>
  404507:	mov    rax,QWORD PTR [rbp-0x18]
  40450b:	mov    ecx,0x8
  404510:	mov    edx,0x8
  404515:	mov    esi,0x9
  40451a:	mov    rdi,rax
  40451d:	call   40b8d6 <flatcc_verify_field@@Base>
  404522:	mov    DWORD PTR [rbp-0x4],eax
  404525:	cmp    DWORD PTR [rbp-0x4],0x0
  404529:	je     404530 <_start@@Base+0x1380>
  40452b:	mov    eax,DWORD PTR [rbp-0x4]
  40452e:	jmp    40459f <_start@@Base+0x13ef>
  404530:	mov    rax,QWORD PTR [rbp-0x18]
  404534:	mov    r9d,0xffffffff
  40453a:	mov    r8d,0x1
  404540:	mov    ecx,0x1
  404545:	mov    edx,0x0
  40454a:	mov    esi,0xa
  40454f:	mov    rdi,rax
  404552:	call   40b9e0 <flatcc_verify_vector_field@@Base>
  404557:	mov    DWORD PTR [rbp-0x4],eax
  40455a:	cmp    DWORD PTR [rbp-0x4],0x0
  40455e:	je     404565 <_start@@Base+0x13b5>
  404560:	mov    eax,DWORD PTR [rbp-0x4]
  404563:	jmp    40459f <_start@@Base+0x13ef>
  404565:	mov    rax,QWORD PTR [rbp-0x18]
  404569:	mov    r9d,0x1fffffff
  40456f:	mov    r8d,0x8
  404575:	mov    ecx,0x8
  40457a:	mov    edx,0x0
  40457f:	mov    esi,0xb
  404584:	mov    rdi,rax
  404587:	call   40b9e0 <flatcc_verify_vector_field@@Base>
  40458c:	mov    DWORD PTR [rbp-0x4],eax
  40458f:	cmp    DWORD PTR [rbp-0x4],0x0
  404593:	je     40459a <_start@@Base+0x13ea>
  404595:	mov    eax,DWORD PTR [rbp-0x4]
  404598:	jmp    40459f <_start@@Base+0x13ef>
  40459a:	mov    eax,0x0
  40459f:	leave  
  4045a0:	ret    
  4045a1:	endbr64 
  4045a5:	push   rbp
  4045a6:	mov    rbp,rsp
  4045a9:	sub    rsp,0x20
  4045ad:	mov    QWORD PTR [rbp-0x18],rdi
  4045b1:	mov    rax,QWORD PTR [rbp-0x18]
  4045b5:	mov    ecx,0x4
  4045ba:	mov    edx,0x4
  4045bf:	mov    esi,0x0
  4045c4:	mov    rdi,rax
  4045c7:	call   40b8d6 <flatcc_verify_field@@Base>
  4045cc:	mov    DWORD PTR [rbp-0x4],eax
  4045cf:	cmp    DWORD PTR [rbp-0x4],0x0
  4045d3:	je     4045da <_start@@Base+0x142a>
  4045d5:	mov    eax,DWORD PTR [rbp-0x4]
  4045d8:	jmp    4045df <_start@@Base+0x142f>
  4045da:	mov    eax,0x0
  4045df:	leave  
  4045e0:	ret    
  4045e1:	endbr64 
  4045e5:	push   rbp
  4045e6:	mov    rbp,rsp
  4045e9:	sub    rsp,0x20
  4045ed:	mov    QWORD PTR [rbp-0x18],rdi
  4045f1:	mov    rax,QWORD PTR [rbp-0x18]
  4045f5:	lea    rcx,[rip+0xffffffffffffef0a]        # 403506 <_start@@Base+0x356>
  4045fc:	mov    edx,0x0
  404601:	mov    esi,0x1
  404606:	mov    rdi,rax
  404609:	call   40c394 <flatcc_verify_union_field@@Base>
  40460e:	mov    DWORD PTR [rbp-0x4],eax
  404611:	cmp    DWORD PTR [rbp-0x4],0x0
  404615:	je     40461f <_start@@Base+0x146f>
  404617:	mov    eax,DWORD PTR [rbp-0x4]
  40461a:	jmp    4046d3 <_start@@Base+0x1523>
  40461f:	mov    rax,QWORD PTR [rbp-0x18]
  404623:	lea    rcx,[rip+0xffffffffffffeedc]        # 403506 <_start@@Base+0x356>
  40462a:	mov    edx,0x0
  40462f:	mov    esi,0x3
  404634:	mov    rdi,rax
  404637:	call   40c394 <flatcc_verify_union_field@@Base>
  40463c:	mov    DWORD PTR [rbp-0x4],eax
  40463f:	cmp    DWORD PTR [rbp-0x4],0x0
  404643:	je     40464d <_start@@Base+0x149d>
  404645:	mov    eax,DWORD PTR [rbp-0x4]
  404648:	jmp    4046d3 <_start@@Base+0x1523>
  40464d:	mov    rax,QWORD PTR [rbp-0x18]
  404651:	lea    rcx,[rip+0xffffffffffffeeae]        # 403506 <_start@@Base+0x356>
  404658:	mov    edx,0x0
  40465d:	mov    esi,0x5
  404662:	mov    rdi,rax
  404665:	call   40c394 <flatcc_verify_union_field@@Base>
  40466a:	mov    DWORD PTR [rbp-0x4],eax
  40466d:	cmp    DWORD PTR [rbp-0x4],0x0
  404671:	je     404678 <_start@@Base+0x14c8>
  404673:	mov    eax,DWORD PTR [rbp-0x4]
  404676:	jmp    4046d3 <_start@@Base+0x1523>
  404678:	mov    rax,QWORD PTR [rbp-0x18]
  40467c:	lea    rcx,[rip+0xffffffffffffee83]        # 403506 <_start@@Base+0x356>
  404683:	mov    edx,0x0
  404688:	mov    esi,0x7
  40468d:	mov    rdi,rax
  404690:	call   40c394 <flatcc_verify_union_field@@Base>
  404695:	mov    DWORD PTR [rbp-0x4],eax
  404698:	cmp    DWORD PTR [rbp-0x4],0x0
  40469c:	je     4046a3 <_start@@Base+0x14f3>
  40469e:	mov    eax,DWORD PTR [rbp-0x4]
  4046a1:	jmp    4046d3 <_start@@Base+0x1523>
  4046a3:	mov    rax,QWORD PTR [rbp-0x18]
  4046a7:	lea    rcx,[rip+0xffffffffffffee58]        # 403506 <_start@@Base+0x356>
  4046ae:	mov    edx,0x0
  4046b3:	mov    esi,0x9
  4046b8:	mov    rdi,rax
  4046bb:	call   40c59c <flatcc_verify_union_vector_field@@Base>
  4046c0:	mov    DWORD PTR [rbp-0x4],eax
  4046c3:	cmp    DWORD PTR [rbp-0x4],0x0
  4046c7:	je     4046ce <_start@@Base+0x151e>
  4046c9:	mov    eax,DWORD PTR [rbp-0x4]
  4046cc:	jmp    4046d3 <_start@@Base+0x1523>
  4046ce:	mov    eax,0x0
  4046d3:	leave  
  4046d4:	ret    

00000000004046d5 <main@@Base>:
  4046d5:	endbr64 
  4046d9:	push   rbp
  4046da:	mov    rbp,rsp
  4046dd:	sub    rsp,0x1c0
  4046e4:	mov    DWORD PTR [rbp-0x1b4],edi
  4046ea:	mov    QWORD PTR [rbp-0x1c0],rsi
  4046f1:	mov    rax,QWORD PTR fs:0x28
  4046fa:	mov    QWORD PTR [rbp-0x8],rax
  4046fe:	xor    eax,eax
  404700:	lea    rax,[rbp-0x190]
  404707:	mov    QWORD PTR [rbp-0x1a0],rax
  40470e:	mov    rax,QWORD PTR [rbp-0x1a0]
  404715:	mov    rdi,rax
  404718:	call   40526c <flatcc_builder_init@@Base>
  40471d:	mov    rax,QWORD PTR [rbp-0x1a0]
  404724:	mov    rdi,rax
  404727:	call   4033d5 <_start@@Base+0x225>
  40472c:	mov    rax,QWORD PTR [rbp-0x1a0]
  404733:	lea    rsi,[rip+0x8a23]        # 40d15d <_IO_stdin_used@@Base+0x15d>
  40473a:	mov    rdi,rax
  40473d:	call   4033a0 <_start@@Base+0x1f0>
  404742:	mov    rax,QWORD PTR [rbp-0x1a0]
  404749:	mov    rdi,rax
  40474c:	call   40340d <_start@@Base+0x25d>
  404751:	lea    rdx,[rbp-0x1a8]
  404758:	mov    rax,QWORD PTR [rbp-0x1a0]
  40475f:	mov    rsi,rdx
  404762:	mov    rdi,rax
  404765:	call   409c0b <flatcc_builder_get_direct_buffer@@Base>
  40476a:	mov    QWORD PTR [rbp-0x198],rax
  404771:	mov    rdx,QWORD PTR [rbp-0x1a8]
  404778:	mov    rax,QWORD PTR [rbp-0x198]
  40477f:	mov    rsi,rdx
  404782:	mov    rdi,rax
  404785:	call   40433b <_start@@Base+0x118b>
  40478a:	mov    DWORD PTR [rbp-0x1ac],eax
  404790:	mov    rax,QWORD PTR [rbp-0x1a0]
  404797:	mov    rdi,rax
  40479a:	call   4054db <flatcc_builder_clear@@Base>
  40479f:	mov    eax,DWORD PTR [rbp-0x1ac]
  4047a5:	mov    rcx,QWORD PTR [rbp-0x8]
  4047a9:	xor    rcx,QWORD PTR fs:0x28
  4047b2:	je     4047b9 <main@@Base+0xe4>
  4047b4:	call   403120 <__stack_chk_fail@plt>
  4047b9:	leave  
  4047ba:	ret    
  4047bb:	push   rbp
  4047bc:	mov    rbp,rsp
  4047bf:	sub    rsp,0x30
  4047c3:	mov    QWORD PTR [rbp-0x28],rdi
  4047c7:	mov    QWORD PTR [rbp-0x30],rsi
  4047cb:	mov    rax,QWORD PTR fs:0x28
  4047d4:	mov    QWORD PTR [rbp-0x8],rax
  4047d8:	xor    eax,eax
  4047da:	mov    QWORD PTR [rbp-0x10],0x0
  4047e2:	cmp    QWORD PTR [rbp-0x28],0x7
  4047e7:	ja     4047f1 <main@@Base+0x11c>
  4047e9:	mov    QWORD PTR [rbp-0x28],0x8
  4047f1:	mov    rdx,QWORD PTR [rbp-0x30]
  4047f5:	mov    rcx,QWORD PTR [rbp-0x28]
  4047f9:	lea    rax,[rbp-0x10]
  4047fd:	mov    rsi,rcx
  404800:	mov    rdi,rax
  404803:	call   4031a0 <posix_memalign@plt>
  404808:	mov    DWORD PTR [rbp-0x14],eax
  40480b:	cmp    DWORD PTR [rbp-0x14],0x0
  40480f:	je     40482e <main@@Base+0x159>
  404811:	mov    rax,QWORD PTR [rbp-0x10]
  404815:	test   rax,rax
  404818:	je     40482e <main@@Base+0x159>
  40481a:	mov    rax,QWORD PTR [rbp-0x10]
  40481e:	mov    rdi,rax
  404821:	call   4030f0 <free@plt>
  404826:	mov    QWORD PTR [rbp-0x10],0x0
  40482e:	mov    rax,QWORD PTR [rbp-0x10]
  404832:	mov    rcx,QWORD PTR [rbp-0x8]
  404836:	xor    rcx,QWORD PTR fs:0x28
  40483f:	je     404846 <main@@Base+0x171>
  404841:	call   403120 <__stack_chk_fail@plt>
  404846:	leave  
  404847:	ret    
  404848:	push   rbp
  404849:	mov    rbp,rsp
  40484c:	mov    DWORD PTR [rbp-0x4],edi
  40484f:	mov    eax,DWORD PTR [rbp-0x4]
  404852:	pop    rbp
  404853:	ret    
  404854:	push   rbp
  404855:	mov    rbp,rsp
  404858:	mov    eax,edi
  40485a:	mov    BYTE PTR [rbp-0x4],al
  40485d:	movzx  eax,BYTE PTR [rbp-0x4]
  404861:	pop    rbp
  404862:	ret    
  404863:	push   rbp
  404864:	mov    rbp,rsp
  404867:	mov    DWORD PTR [rbp-0x4],edi
  40486a:	mov    eax,DWORD PTR [rbp-0x4]
  40486d:	pop    rbp
  40486e:	ret    
  40486f:	push   rbp
  404870:	mov    rbp,rsp
  404873:	mov    QWORD PTR [rbp-0x8],rdi
  404877:	mov    QWORD PTR [rbp-0x10],rsi
  40487b:	mov    rax,QWORD PTR [rbp-0x8]
  40487f:	mov    rdx,QWORD PTR [rax]
  404882:	mov    rax,QWORD PTR [rbp-0x8]
  404886:	mov    rax,QWORD PTR [rax+0x8]
  40488a:	cmp    rdx,rax
  40488d:	jne    4048af <main@@Base+0x1da>
  40488f:	cmp    QWORD PTR [rbp-0x10],0x0
  404894:	je     4048a5 <main@@Base+0x1d0>
  404896:	mov    rax,QWORD PTR [rbp-0x8]
  40489a:	mov    rdx,QWORD PTR [rax+0x30]
  40489e:	mov    rax,QWORD PTR [rbp-0x10]
  4048a2:	mov    QWORD PTR [rax],rdx
  4048a5:	mov    rax,QWORD PTR [rbp-0x8]
  4048a9:	mov    rax,QWORD PTR [rax+0x10]
  4048ad:	jmp    4048c6 <main@@Base+0x1f1>
  4048af:	cmp    QWORD PTR [rbp-0x10],0x0
  4048b4:	je     4048c1 <main@@Base+0x1ec>
  4048b6:	mov    rax,QWORD PTR [rbp-0x10]
  4048ba:	mov    QWORD PTR [rax],0x0
  4048c1:	mov    eax,0x0
  4048c6:	pop    rbp
  4048c7:	ret    
  4048c8:	push   rbp
  4048c9:	mov    rbp,rsp
  4048cc:	sub    rsp,0x20
  4048d0:	mov    QWORD PTR [rbp-0x18],rdi
  4048d4:	mov    QWORD PTR [rbp-0x20],rsi
  4048d8:	mov    rdx,QWORD PTR [rbp-0x20]
  4048dc:	mov    rax,QWORD PTR [rbp-0x18]
  4048e0:	mov    esi,0x0
  4048e5:	mov    rdi,rax
  4048e8:	call   403150 <memchr@plt>
  4048ed:	mov    QWORD PTR [rbp-0x8],rax
  4048f1:	cmp    QWORD PTR [rbp-0x8],0x0
  4048f6:	je     404902 <main@@Base+0x22d>
  4048f8:	mov    rax,QWORD PTR [rbp-0x8]
  4048fc:	sub    rax,QWORD PTR [rbp-0x18]
  404900:	jmp    404906 <main@@Base+0x231>
  404902:	mov    rax,QWORD PTR [rbp-0x20]
  404906:	leave  
  404907:	ret    

0000000000404908 <flatcc_builder_default_alloc@@Base>:
  404908:	endbr64 
  40490c:	push   rbp
  40490d:	mov    rbp,rsp
  404910:	sub    rsp,0x30
  404914:	mov    QWORD PTR [rbp-0x18],rdi
  404918:	mov    QWORD PTR [rbp-0x20],rsi
  40491c:	mov    QWORD PTR [rbp-0x28],rdx
  404920:	mov    DWORD PTR [rbp-0x2c],ecx
  404923:	mov    DWORD PTR [rbp-0x30],r8d
  404927:	cmp    QWORD PTR [rbp-0x28],0x0
  40492c:	jne    40496a <flatcc_builder_default_alloc@@Base+0x62>
  40492e:	mov    rax,QWORD PTR [rbp-0x20]
  404932:	mov    rax,QWORD PTR [rax]
  404935:	test   rax,rax
  404938:	je     404960 <flatcc_builder_default_alloc@@Base+0x58>
  40493a:	mov    rax,QWORD PTR [rbp-0x20]
  40493e:	mov    rax,QWORD PTR [rax]
  404941:	mov    rdi,rax
  404944:	call   4030f0 <free@plt>
  404949:	mov    rax,QWORD PTR [rbp-0x20]
  40494d:	mov    QWORD PTR [rax],0x0
  404954:	mov    rax,QWORD PTR [rbp-0x20]
  404958:	mov    QWORD PTR [rax+0x8],0x0
  404960:	mov    eax,0x0
  404965:	jmp    404a79 <flatcc_builder_default_alloc@@Base+0x171>
  40496a:	cmp    DWORD PTR [rbp-0x30],0x4
  40496e:	je     4049a0 <flatcc_builder_default_alloc@@Base+0x98>
  404970:	cmp    DWORD PTR [rbp-0x30],0x4
  404974:	jg     40497e <flatcc_builder_default_alloc@@Base+0x76>
  404976:	cmp    DWORD PTR [rbp-0x30],0x1
  40497a:	je     40498c <flatcc_builder_default_alloc@@Base+0x84>
  40497c:	jmp    4049b4 <flatcc_builder_default_alloc@@Base+0xac>
  40497e:	cmp    DWORD PTR [rbp-0x30],0x5
  404982:	je     404996 <flatcc_builder_default_alloc@@Base+0x8e>
  404984:	cmp    DWORD PTR [rbp-0x30],0x7
  404988:	je     4049aa <flatcc_builder_default_alloc@@Base+0xa2>
  40498a:	jmp    4049b4 <flatcc_builder_default_alloc@@Base+0xac>
  40498c:	mov    QWORD PTR [rbp-0x10],0x100
  404994:	jmp    4049bd <flatcc_builder_default_alloc@@Base+0xb5>
  404996:	mov    rax,QWORD PTR [rbp-0x28]
  40499a:	mov    QWORD PTR [rbp-0x10],rax
  40499e:	jmp    4049bd <flatcc_builder_default_alloc@@Base+0xb5>
  4049a0:	mov    QWORD PTR [rbp-0x10],0x120
  4049a8:	jmp    4049bd <flatcc_builder_default_alloc@@Base+0xb5>
  4049aa:	mov    QWORD PTR [rbp-0x10],0x40
  4049b2:	jmp    4049bd <flatcc_builder_default_alloc@@Base+0xb5>
  4049b4:	mov    QWORD PTR [rbp-0x10],0x20
  4049bc:	nop
  4049bd:	jmp    4049c3 <flatcc_builder_default_alloc@@Base+0xbb>
  4049bf:	shl    QWORD PTR [rbp-0x10],1
  4049c3:	mov    rax,QWORD PTR [rbp-0x10]
  4049c7:	cmp    rax,QWORD PTR [rbp-0x28]
  4049cb:	jb     4049bf <flatcc_builder_default_alloc@@Base+0xb7>
  4049cd:	mov    rax,QWORD PTR [rbp-0x20]
  4049d1:	mov    rax,QWORD PTR [rax+0x8]
  4049d5:	cmp    QWORD PTR [rbp-0x28],rax
  4049d9:	ja     4049f6 <flatcc_builder_default_alloc@@Base+0xee>
  4049db:	mov    rax,QWORD PTR [rbp-0x20]
  4049df:	mov    rax,QWORD PTR [rax+0x8]
  4049e3:	shr    rax,1
  4049e6:	cmp    QWORD PTR [rbp-0x10],rax
  4049ea:	ja     4049f6 <flatcc_builder_default_alloc@@Base+0xee>
  4049ec:	mov    eax,0x0
  4049f1:	jmp    404a79 <flatcc_builder_default_alloc@@Base+0x171>
  4049f6:	mov    rax,QWORD PTR [rbp-0x20]
  4049fa:	mov    rax,QWORD PTR [rax]
  4049fd:	mov    rdx,QWORD PTR [rbp-0x10]
  404a01:	mov    rsi,rdx
  404a04:	mov    rdi,rax
  404a07:	call   403190 <realloc@plt>
  404a0c:	mov    QWORD PTR [rbp-0x8],rax
  404a10:	cmp    QWORD PTR [rbp-0x8],0x0
  404a15:	jne    404a1e <flatcc_builder_default_alloc@@Base+0x116>
  404a17:	mov    eax,0xffffffff
  404a1c:	jmp    404a79 <flatcc_builder_default_alloc@@Base+0x171>
  404a1e:	cmp    DWORD PTR [rbp-0x2c],0x0
  404a22:	je     404a5d <flatcc_builder_default_alloc@@Base+0x155>
  404a24:	mov    rax,QWORD PTR [rbp-0x20]
  404a28:	mov    rax,QWORD PTR [rax+0x8]
  404a2c:	cmp    QWORD PTR [rbp-0x10],rax
  404a30:	jbe    404a5d <flatcc_builder_default_alloc@@Base+0x155>
  404a32:	mov    rax,QWORD PTR [rbp-0x20]
  404a36:	mov    rax,QWORD PTR [rax+0x8]
  404a3a:	mov    rdx,QWORD PTR [rbp-0x10]
  404a3e:	sub    rdx,rax
  404a41:	mov    rax,QWORD PTR [rbp-0x20]
  404a45:	mov    rcx,QWORD PTR [rax+0x8]
  404a49:	mov    rax,QWORD PTR [rbp-0x8]
  404a4d:	add    rax,rcx
  404a50:	mov    esi,0x0
  404a55:	mov    rdi,rax
  404a58:	call   403140 <memset@plt>
  404a5d:	mov    rax,QWORD PTR [rbp-0x20]
  404a61:	mov    rdx,QWORD PTR [rbp-0x8]
  404a65:	mov    QWORD PTR [rax],rdx
  404a68:	mov    rax,QWORD PTR [rbp-0x20]
  404a6c:	mov    rdx,QWORD PTR [rbp-0x10]
  404a70:	mov    QWORD PTR [rax+0x8],rdx
  404a74:	mov    eax,0x0
  404a79:	leave  
  404a7a:	ret    
  404a7b:	push   rbp
  404a7c:	mov    rbp,rsp
  404a7f:	mov    QWORD PTR [rbp-0x18],rdi
  404a83:	mov    DWORD PTR [rbp-0x1c],esi
  404a86:	mov    rax,QWORD PTR [rbp-0x18]
  404a8a:	add    rax,0x58
  404a8e:	add    rax,0x10
  404a92:	mov    QWORD PTR [rbp-0x8],rax
  404a96:	mov    rax,QWORD PTR [rbp-0x18]
  404a9a:	mov    rdx,QWORD PTR [rax+0x68]
  404a9e:	mov    rax,QWORD PTR [rbp-0x18]
  404aa2:	mov    eax,DWORD PTR [rax+0x28]
  404aa5:	mov    eax,eax
  404aa7:	add    rdx,rax
  404aaa:	mov    rax,QWORD PTR [rbp-0x18]
  404aae:	mov    QWORD PTR [rax+0x18],rdx
  404ab2:	mov    rax,QWORD PTR [rbp-0x8]
  404ab6:	mov    rax,QWORD PTR [rax+0x8]
  404aba:	mov    edx,eax
  404abc:	mov    rax,QWORD PTR [rbp-0x18]
  404ac0:	mov    eax,DWORD PTR [rax+0x28]
  404ac3:	sub    edx,eax
  404ac5:	mov    rax,QWORD PTR [rbp-0x18]
  404ac9:	mov    DWORD PTR [rax+0x24],edx
  404acc:	mov    rax,QWORD PTR [rbp-0x18]
  404ad0:	mov    eax,DWORD PTR [rax+0x24]
  404ad3:	cmp    DWORD PTR [rbp-0x1c],eax
  404ad6:	jae    404ae2 <flatcc_builder_default_alloc@@Base+0x1da>
  404ad8:	mov    rax,QWORD PTR [rbp-0x18]
  404adc:	mov    edx,DWORD PTR [rbp-0x1c]
  404adf:	mov    DWORD PTR [rax+0x24],edx
  404ae2:	mov    rax,QWORD PTR [rbp-0x18]
  404ae6:	mov    rax,QWORD PTR [rax+0x30]
  404aea:	mov    edx,DWORD PTR [rbp-0x1c]
  404aed:	mov    DWORD PTR [rax+0x4],edx
  404af0:	nop
  404af1:	pop    rbp
  404af2:	ret    
  404af3:	endbr64 
  404af7:	push   rbp
  404af8:	mov    rbp,rsp
  404afb:	sub    rsp,0x30
  404aff:	mov    QWORD PTR [rbp-0x18],rdi
  404b03:	mov    QWORD PTR [rbp-0x20],rsi
  404b07:	mov    DWORD PTR [rbp-0x24],edx
  404b0a:	mov    rax,QWORD PTR [rbp-0x18]
  404b0e:	add    rax,0x58
  404b12:	add    rax,0x10
  404b16:	mov    QWORD PTR [rbp-0x8],rax
  404b1a:	mov    rax,QWORD PTR [rbp-0x18]
  404b1e:	mov    rax,QWORD PTR [rax+0x50]
  404b22:	mov    rdx,QWORD PTR [rbp-0x18]
  404b26:	mov    edx,DWORD PTR [rdx+0x28]
  404b29:	mov    ecx,edx
  404b2b:	mov    rdx,QWORD PTR [rbp-0x20]
  404b2f:	lea    r9,[rcx+rdx*1]
  404b33:	mov    rdx,QWORD PTR [rbp-0x18]
  404b37:	mov    rdi,QWORD PTR [rdx+0x40]
  404b3b:	mov    rsi,QWORD PTR [rbp-0x8]
  404b3f:	mov    r8d,0x1
  404b45:	mov    ecx,0x1
  404b4a:	mov    rdx,r9
  404b4d:	call   rax
  404b4f:	test   eax,eax
  404b51:	je     404b5a <flatcc_builder_default_alloc@@Base+0x252>
  404b53:	mov    eax,0xffffffff
  404b58:	jmp    404b70 <flatcc_builder_default_alloc@@Base+0x268>
  404b5a:	mov    edx,DWORD PTR [rbp-0x24]
  404b5d:	mov    rax,QWORD PTR [rbp-0x18]
  404b61:	mov    esi,edx
  404b63:	mov    rdi,rax
  404b66:	call   404a7b <flatcc_builder_default_alloc@@Base+0x173>
  404b6b:	mov    eax,0x0
  404b70:	leave  
  404b71:	ret    
  404b72:	push   rbp
  404b73:	mov    rbp,rsp
  404b76:	sub    rsp,0x20
  404b7a:	mov    QWORD PTR [rbp-0x18],rdi
  404b7e:	mov    DWORD PTR [rbp-0x1c],esi
  404b81:	mov    rax,QWORD PTR [rbp-0x18]
  404b85:	mov    eax,DWORD PTR [rax+0x20]
  404b88:	mov    eax,eax
  404b8a:	mov    QWORD PTR [rbp-0x8],rax
  404b8e:	mov    rax,QWORD PTR [rbp-0x18]
  404b92:	mov    edx,DWORD PTR [rax+0x20]
  404b95:	mov    eax,DWORD PTR [rbp-0x1c]
  404b98:	add    edx,eax
  404b9a:	mov    rax,QWORD PTR [rbp-0x18]
  404b9e:	mov    DWORD PTR [rax+0x20],edx
  404ba1:	mov    rax,QWORD PTR [rbp-0x18]
  404ba5:	mov    edx,DWORD PTR [rax+0x20]
  404ba8:	mov    rax,QWORD PTR [rbp-0x18]
  404bac:	mov    eax,DWORD PTR [rax+0x24]
  404baf:	cmp    edx,eax
  404bb1:	jb     404bdd <flatcc_builder_default_alloc@@Base+0x2d5>
  404bb3:	mov    rax,QWORD PTR [rbp-0x18]
  404bb7:	mov    eax,DWORD PTR [rax+0x20]
  404bba:	inc    eax
  404bbc:	mov    ecx,eax
  404bbe:	mov    rax,QWORD PTR [rbp-0x18]
  404bc2:	mov    edx,0xfffffffc
  404bc7:	mov    rsi,rcx
  404bca:	mov    rdi,rax
  404bcd:	call   404af3 <flatcc_builder_default_alloc@@Base+0x1eb>
  404bd2:	test   eax,eax
  404bd4:	je     404bdd <flatcc_builder_default_alloc@@Base+0x2d5>
  404bd6:	mov    eax,0x0
  404bdb:	jmp    404bec <flatcc_builder_default_alloc@@Base+0x2e4>
  404bdd:	mov    rax,QWORD PTR [rbp-0x18]
  404be1:	mov    rdx,QWORD PTR [rax+0x18]
  404be5:	mov    rax,QWORD PTR [rbp-0x8]
  404be9:	add    rax,rdx
  404bec:	leave  
  404bed:	ret    
  404bee:	push   rbp
  404bef:	mov    rbp,rsp
  404bf2:	sub    rsp,0x10
  404bf6:	mov    QWORD PTR [rbp-0x8],rdi
  404bfa:	mov    DWORD PTR [rbp-0xc],esi
  404bfd:	mov    rax,QWORD PTR [rbp-0x8]
  404c01:	mov    eax,DWORD PTR [rax+0x20]
  404c04:	sub    eax,DWORD PTR [rbp-0xc]
  404c07:	mov    edx,eax
  404c09:	mov    rax,QWORD PTR [rbp-0x8]
  404c0d:	mov    DWORD PTR [rax+0x20],edx
  404c10:	mov    eax,DWORD PTR [rbp-0xc]
  404c13:	mov    rdx,QWORD PTR [rbp-0x8]
  404c17:	mov    rcx,QWORD PTR [rdx+0x18]
  404c1b:	mov    rdx,QWORD PTR [rbp-0x8]
  404c1f:	mov    edx,DWORD PTR [rdx+0x20]
  404c22:	mov    edx,edx
  404c24:	add    rcx,rdx
  404c27:	mov    rdx,rax
  404c2a:	mov    esi,0x0
  404c2f:	mov    rdi,rcx
  404c32:	call   403140 <memset@plt>
  404c37:	nop
  404c38:	leave  
  404c39:	ret    
  404c3a:	push   rbp
  404c3b:	mov    rbp,rsp
  404c3e:	sub    rsp,0x30
  404c42:	mov    QWORD PTR [rbp-0x18],rdi
  404c46:	mov    QWORD PTR [rbp-0x20],rsi
  404c4a:	mov    DWORD PTR [rbp-0x24],edx
  404c4d:	mov    edx,DWORD PTR [rbp-0x24]
  404c50:	mov    rax,QWORD PTR [rbp-0x18]
  404c54:	mov    esi,edx
  404c56:	mov    rdi,rax
  404c59:	call   404b72 <flatcc_builder_default_alloc@@Base+0x26a>
  404c5e:	mov    QWORD PTR [rbp-0x8],rax
  404c62:	cmp    QWORD PTR [rbp-0x8],0x0
  404c67:	jne    404c70 <flatcc_builder_default_alloc@@Base+0x368>
  404c69:	mov    eax,0x0
  404c6e:	jmp    404c8a <flatcc_builder_default_alloc@@Base+0x382>
  404c70:	mov    edx,DWORD PTR [rbp-0x24]
  404c73:	mov    rcx,QWORD PTR [rbp-0x20]
  404c77:	mov    rax,QWORD PTR [rbp-0x8]
  404c7b:	mov    rsi,rcx
  404c7e:	mov    rdi,rax
  404c81:	call   403170 <memcpy@plt>
  404c86:	mov    rax,QWORD PTR [rbp-0x8]
  404c8a:	leave  
  404c8b:	ret    
  404c8c:	push   rbp
  404c8d:	mov    rbp,rsp
  404c90:	sub    rsp,0x30
  404c94:	mov    QWORD PTR [rbp-0x18],rdi
  404c98:	mov    DWORD PTR [rbp-0x1c],esi
  404c9b:	mov    eax,ecx
  404c9d:	mov    WORD PTR [rbp-0x20],dx
  404ca1:	mov    WORD PTR [rbp-0x24],ax
  404ca5:	mov    rax,QWORD PTR [rbp-0x18]
  404ca9:	mov    edx,DWORD PTR [rax+0x20]
  404cac:	movzx  eax,WORD PTR [rbp-0x20]
  404cb0:	add    eax,edx
  404cb2:	lea    edx,[rax-0x1]
  404cb5:	movzx  eax,WORD PTR [rbp-0x20]
  404cb9:	neg    eax
  404cbb:	and    eax,edx
  404cbd:	mov    DWORD PTR [rbp-0x4],eax
  404cc0:	mov    edx,DWORD PTR [rbp-0x4]
  404cc3:	mov    eax,DWORD PTR [rbp-0x1c]
  404cc6:	add    edx,eax
  404cc8:	mov    rax,QWORD PTR [rbp-0x18]
  404ccc:	mov    DWORD PTR [rax+0x20],edx
  404ccf:	mov    rax,QWORD PTR [rbp-0x18]
  404cd3:	mov    edx,DWORD PTR [rax+0x20]
  404cd6:	mov    rax,QWORD PTR [rbp-0x18]
  404cda:	mov    eax,DWORD PTR [rax+0x24]
  404cdd:	cmp    edx,eax
  404cdf:	jb     404d0b <flatcc_builder_default_alloc@@Base+0x403>
  404ce1:	mov    rax,QWORD PTR [rbp-0x18]
  404ce5:	mov    eax,DWORD PTR [rax+0x20]
  404ce8:	inc    eax
  404cea:	mov    ecx,eax
  404cec:	mov    rax,QWORD PTR [rbp-0x18]
  404cf0:	mov    edx,0xfffc
  404cf5:	mov    rsi,rcx
  404cf8:	mov    rdi,rax
  404cfb:	call   404af3 <flatcc_builder_default_alloc@@Base+0x1eb>
  404d00:	test   eax,eax
  404d02:	je     404d0b <flatcc_builder_default_alloc@@Base+0x403>
  404d04:	mov    eax,0x0
  404d09:	jmp    404d52 <flatcc_builder_default_alloc@@Base+0x44a>
  404d0b:	mov    eax,DWORD PTR [rbp-0x4]
  404d0e:	mov    ecx,eax
  404d10:	mov    rax,QWORD PTR [rbp-0x18]
  404d14:	mov    rax,QWORD PTR [rax+0x8]
  404d18:	movzx  edx,WORD PTR [rbp-0x24]
  404d1c:	add    rdx,rdx
  404d1f:	add    rdx,rax
  404d22:	lea    eax,[rcx+0x4]
  404d25:	mov    WORD PTR [rdx],ax
  404d28:	mov    rax,QWORD PTR [rbp-0x18]
  404d2c:	movzx  eax,WORD PTR [rax+0x10]
  404d30:	cmp    WORD PTR [rbp-0x24],ax
  404d34:	jb     404d44 <flatcc_builder_default_alloc@@Base+0x43c>
  404d36:	movzx  eax,WORD PTR [rbp-0x24]
  404d3a:	inc    eax
  404d3c:	mov    rdx,QWORD PTR [rbp-0x18]
  404d40:	mov    WORD PTR [rdx+0x10],ax
  404d44:	mov    rax,QWORD PTR [rbp-0x18]
  404d48:	mov    rdx,QWORD PTR [rax+0x18]
  404d4c:	mov    eax,DWORD PTR [rbp-0x4]
  404d4f:	add    rax,rdx
  404d52:	leave  
  404d53:	ret    
  404d54:	push   rbp
  404d55:	mov    rbp,rsp
  404d58:	sub    rsp,0x20
  404d5c:	mov    QWORD PTR [rbp-0x18],rdi
  404d60:	mov    eax,esi
  404d62:	mov    WORD PTR [rbp-0x1c],ax
  404d66:	mov    rax,QWORD PTR [rbp-0x18]
  404d6a:	mov    eax,DWORD PTR [rax+0x20]
  404d6d:	add    eax,0x3
  404d70:	and    eax,0xfffffffc
  404d73:	mov    DWORD PTR [rbp-0x4],eax
  404d76:	mov    eax,DWORD PTR [rbp-0x4]
  404d79:	lea    edx,[rax+0x4]
  404d7c:	mov    rax,QWORD PTR [rbp-0x18]
  404d80:	mov    DWORD PTR [rax+0x20],edx
  404d83:	mov    rax,QWORD PTR [rbp-0x18]
  404d87:	mov    edx,DWORD PTR [rax+0x20]
  404d8a:	mov    rax,QWORD PTR [rbp-0x18]
  404d8e:	mov    eax,DWORD PTR [rax+0x24]
  404d91:	cmp    edx,eax
  404d93:	jbe    404dbd <flatcc_builder_default_alloc@@Base+0x4b5>
  404d95:	mov    rax,QWORD PTR [rbp-0x18]
  404d99:	mov    eax,DWORD PTR [rax+0x20]
  404d9c:	mov    ecx,eax
  404d9e:	mov    rax,QWORD PTR [rbp-0x18]
  404da2:	mov    edx,0xfffc
  404da7:	mov    rsi,rcx
  404daa:	mov    rdi,rax
  404dad:	call   404af3 <flatcc_builder_default_alloc@@Base+0x1eb>
  404db2:	test   eax,eax
  404db4:	je     404dbd <flatcc_builder_default_alloc@@Base+0x4b5>
  404db6:	mov    eax,0x0
  404dbb:	jmp    404e1c <flatcc_builder_default_alloc@@Base+0x514>
  404dbd:	mov    eax,DWORD PTR [rbp-0x4]
  404dc0:	mov    ecx,eax
  404dc2:	mov    rax,QWORD PTR [rbp-0x18]
  404dc6:	mov    rax,QWORD PTR [rax+0x8]
  404dca:	movzx  edx,WORD PTR [rbp-0x1c]
  404dce:	add    rdx,rdx
  404dd1:	add    rdx,rax
  404dd4:	lea    eax,[rcx+0x4]
  404dd7:	mov    WORD PTR [rdx],ax
  404dda:	mov    rax,QWORD PTR [rbp-0x18]
  404dde:	movzx  eax,WORD PTR [rax+0x10]
  404de2:	cmp    WORD PTR [rbp-0x1c],ax
  404de6:	jb     404df6 <flatcc_builder_default_alloc@@Base+0x4ee>
  404de8:	movzx  eax,WORD PTR [rbp-0x1c]
  404dec:	inc    eax
  404dee:	mov    rdx,QWORD PTR [rbp-0x18]
  404df2:	mov    WORD PTR [rdx+0x10],ax
  404df6:	mov    rax,QWORD PTR [rbp-0x18]
  404dfa:	mov    rax,QWORD PTR [rax]
  404dfd:	lea    rcx,[rax+0x2]
  404e01:	mov    rdx,QWORD PTR [rbp-0x18]
  404e05:	mov    QWORD PTR [rdx],rcx
  404e08:	mov    edx,DWORD PTR [rbp-0x4]
  404e0b:	mov    WORD PTR [rax],dx
  404e0e:	mov    rax,QWORD PTR [rbp-0x18]
  404e12:	mov    rdx,QWORD PTR [rax+0x18]
  404e16:	mov    eax,DWORD PTR [rbp-0x4]
  404e19:	add    rax,rdx
  404e1c:	leave  
  404e1d:	ret    
  404e1e:	push   rbp
  404e1f:	mov    rbp,rsp
  404e22:	sub    rsp,0x30
  404e26:	mov    QWORD PTR [rbp-0x18],rdi
  404e2a:	mov    DWORD PTR [rbp-0x1c],esi
  404e2d:	mov    QWORD PTR [rbp-0x28],rdx
  404e31:	mov    QWORD PTR [rbp-0x30],rcx
  404e35:	mov    DWORD PTR [rbp-0x20],r8d
  404e39:	mov    rax,QWORD PTR [rbp-0x18]
  404e3d:	lea    rdx,[rax+0x58]
  404e41:	mov    eax,DWORD PTR [rbp-0x1c]
  404e44:	cdqe   
  404e46:	shl    rax,0x4
  404e4a:	add    rax,rdx
  404e4d:	mov    QWORD PTR [rbp-0x8],rax
  404e51:	mov    rdx,QWORD PTR [rbp-0x28]
  404e55:	mov    rax,QWORD PTR [rbp-0x30]
  404e59:	add    rdx,rax
  404e5c:	mov    rax,QWORD PTR [rbp-0x8]
  404e60:	mov    rax,QWORD PTR [rax+0x8]
  404e64:	cmp    rdx,rax
  404e67:	jbe    404ebc <flatcc_builder_default_alloc@@Base+0x5b4>
  404e69:	mov    rax,QWORD PTR [rbp-0x18]
  404e6d:	mov    rax,QWORD PTR [rax+0x50]
  404e71:	mov    rcx,QWORD PTR [rbp-0x28]
  404e75:	mov    rdx,QWORD PTR [rbp-0x30]
  404e79:	lea    r9,[rcx+rdx*1]
  404e7d:	mov    rdx,QWORD PTR [rbp-0x18]
  404e81:	mov    rdi,QWORD PTR [rdx+0x40]
  404e85:	mov    ecx,DWORD PTR [rbp-0x1c]
  404e88:	mov    edx,DWORD PTR [rbp-0x20]
  404e8b:	mov    rsi,QWORD PTR [rbp-0x8]
  404e8f:	mov    r8d,ecx
  404e92:	mov    ecx,edx
  404e94:	mov    rdx,r9
  404e97:	call   rax
  404e99:	test   eax,eax
  404e9b:	je     404ebc <flatcc_builder_default_alloc@@Base+0x5b4>
  404e9d:	lea    rcx,[rip+0x8974]        # 40d818 <flatcc_builder_padding_base@@Base+0x658>
  404ea4:	mov    edx,0x134
  404ea9:	lea    rsi,[rip+0x8510]        # 40d3c0 <flatcc_builder_padding_base@@Base+0x200>
  404eb0:	lea    rdi,[rip+0x8569]        # 40d420 <flatcc_builder_padding_base@@Base+0x260>
  404eb7:	call   403130 <__assert_fail@plt>
  404ebc:	mov    rax,QWORD PTR [rbp-0x8]
  404ec0:	mov    rax,QWORD PTR [rax]
  404ec3:	mov    rdx,rax
  404ec6:	mov    rax,QWORD PTR [rbp-0x28]
  404eca:	add    rax,rdx
  404ecd:	leave  
  404ece:	ret    
  404ecf:	push   rbp
  404ed0:	mov    rbp,rsp
  404ed3:	sub    rsp,0x20
  404ed7:	mov    QWORD PTR [rbp-0x18],rdi
  404edb:	mov    DWORD PTR [rbp-0x1c],esi
  404ede:	mov    rax,QWORD PTR [rbp-0x18]
  404ee2:	mov    rax,QWORD PTR [rax+0x30]
  404ee6:	mov    edx,DWORD PTR [rax+0x10]
  404ee9:	mov    rax,QWORD PTR [rbp-0x18]
  404eed:	mov    rax,QWORD PTR [rax+0x30]
  404ef1:	movzx  eax,WORD PTR [rax+0x1c]
  404ef5:	movzx  eax,ax
  404ef8:	add    eax,eax
  404efa:	add    eax,edx
  404efc:	mov    DWORD PTR [rbp-0x8],eax
  404eff:	mov    eax,DWORD PTR [rbp-0x1c]
  404f02:	add    eax,0x2
  404f05:	cdqe   
  404f07:	add    eax,eax
  404f09:	mov    DWORD PTR [rbp-0x4],eax
  404f0c:	mov    ecx,DWORD PTR [rbp-0x4]
  404f0f:	mov    edx,DWORD PTR [rbp-0x8]
  404f12:	mov    rax,QWORD PTR [rbp-0x18]
  404f16:	mov    r8d,0x1
  404f1c:	mov    esi,0x0
  404f21:	mov    rdi,rax
  404f24:	call   404e1e <flatcc_builder_default_alloc@@Base+0x516>
  404f29:	mov    rdx,rax
  404f2c:	mov    rax,QWORD PTR [rbp-0x18]
  404f30:	mov    QWORD PTR [rax+0x8],rdx
  404f34:	mov    rax,QWORD PTR [rbp-0x18]
  404f38:	mov    rax,QWORD PTR [rax+0x8]
  404f3c:	test   rax,rax
  404f3f:	jne    404f48 <flatcc_builder_default_alloc@@Base+0x640>
  404f41:	mov    eax,0xffffffff
  404f46:	jmp    404fb5 <flatcc_builder_default_alloc@@Base+0x6ad>
  404f48:	mov    rax,QWORD PTR [rbp-0x18]
  404f4c:	mov    rax,QWORD PTR [rax+0x8]
  404f50:	lea    rdx,[rax+0x4]
  404f54:	mov    rax,QWORD PTR [rbp-0x18]
  404f58:	mov    QWORD PTR [rax+0x8],rdx
  404f5c:	mov    rax,QWORD PTR [rbp-0x18]
  404f60:	mov    rax,QWORD PTR [rax+0x30]
  404f64:	mov    eax,DWORD PTR [rax+0x14]
  404f67:	mov    DWORD PTR [rbp-0x8],eax
  404f6a:	mov    eax,DWORD PTR [rbp-0x1c]
  404f6d:	cdqe   
  404f6f:	add    eax,eax
  404f71:	inc    eax
  404f73:	mov    DWORD PTR [rbp-0x4],eax
  404f76:	mov    ecx,DWORD PTR [rbp-0x4]
  404f79:	mov    edx,DWORD PTR [rbp-0x8]
  404f7c:	mov    rax,QWORD PTR [rbp-0x18]
  404f80:	mov    r8d,0x0
  404f86:	mov    esi,0x3
  404f8b:	mov    rdi,rax
  404f8e:	call   404e1e <flatcc_builder_default_alloc@@Base+0x516>
  404f93:	mov    rdx,rax
  404f96:	mov    rax,QWORD PTR [rbp-0x18]
  404f9a:	mov    QWORD PTR [rax],rdx
  404f9d:	mov    rax,QWORD PTR [rbp-0x18]
  404fa1:	mov    rax,QWORD PTR [rax]
  404fa4:	test   rax,rax
  404fa7:	jne    404fb0 <flatcc_builder_default_alloc@@Base+0x6a8>
  404fa9:	mov    eax,0xffffffff
  404fae:	jmp    404fb5 <flatcc_builder_default_alloc@@Base+0x6ad>
  404fb0:	mov    eax,0x0
  404fb5:	leave  
  404fb6:	ret    
  404fb7:	endbr64 
  404fbb:	push   rbp
  404fbc:	mov    rbp,rsp
  404fbf:	sub    rsp,0x30
  404fc3:	mov    QWORD PTR [rbp-0x28],rdi
  404fc7:	mov    rax,QWORD PTR [rbp-0x28]
  404fcb:	add    rax,0x58
  404fcf:	add    rax,0x50
  404fd3:	mov    QWORD PTR [rbp-0x8],rax
  404fd7:	mov    rax,QWORD PTR [rbp-0x28]
  404fdb:	mov    eax,DWORD PTR [rax+0xe4]
  404fe1:	test   eax,eax
  404fe3:	je     405004 <flatcc_builder_default_alloc@@Base+0x6fc>
  404fe5:	lea    rcx,[rip+0x881c]        # 40d808 <flatcc_builder_padding_base@@Base+0x648>
  404fec:	mov    edx,0x156
  404ff1:	lea    rsi,[rip+0x83c8]        # 40d3c0 <flatcc_builder_padding_base@@Base+0x200>
  404ff8:	lea    rdi,[rip+0x8423]        # 40d422 <flatcc_builder_padding_base@@Base+0x262>
  404fff:	call   403130 <__assert_fail@plt>
  405004:	mov    rax,QWORD PTR [rbp-0x28]
  405008:	mov    eax,DWORD PTR [rax+0xe4]
  40500e:	mov    edx,eax
  405010:	mov    rax,QWORD PTR [rbp-0x28]
  405014:	mov    r8d,0x0
  40501a:	mov    ecx,0x10
  40501f:	mov    esi,0x6
  405024:	mov    rdi,rax
  405027:	call   404e1e <flatcc_builder_default_alloc@@Base+0x516>
  40502c:	test   rax,rax
  40502f:	jne    40503b <flatcc_builder_default_alloc@@Base+0x733>
  405031:	mov    eax,0xffffffff
  405036:	jmp    4050dc <flatcc_builder_default_alloc@@Base+0x7d4>
  40503b:	mov    rax,QWORD PTR [rbp-0x28]
  40503f:	mov    DWORD PTR [rax+0xe4],0x10
  405049:	mov    QWORD PTR [rbp-0x18],0x100
  405051:	mov    rax,QWORD PTR [rbp-0x28]
  405055:	mov    rax,QWORD PTR [rax+0x50]
  405059:	mov    rdx,QWORD PTR [rbp-0x28]
  40505d:	mov    rdi,QWORD PTR [rdx+0x40]
  405061:	mov    rdx,QWORD PTR [rbp-0x18]
  405065:	mov    rsi,QWORD PTR [rbp-0x8]
  405069:	mov    r8d,0x5
  40506f:	mov    ecx,0x1
  405074:	call   rax
  405076:	test   eax,eax
  405078:	je     405085 <flatcc_builder_default_alloc@@Base+0x77d>
  40507a:	mov    eax,0xffffffff
  40507f:	jmp    4050dc <flatcc_builder_default_alloc@@Base+0x7d4>
  405081:	shl    QWORD PTR [rbp-0x18],1
  405085:	mov    rax,QWORD PTR [rbp-0x18]
  405089:	lea    rdx,[rax+rax*1]
  40508d:	mov    rax,QWORD PTR [rbp-0x8]
  405091:	mov    rax,QWORD PTR [rax+0x8]
  405095:	cmp    rdx,rax
  405098:	jbe    405081 <flatcc_builder_default_alloc@@Base+0x779>
  40509a:	mov    rax,QWORD PTR [rbp-0x18]
  40509e:	shr    rax,0x2
  4050a2:	mov    QWORD PTR [rbp-0x18],rax
  4050a6:	mov    QWORD PTR [rbp-0x10],0x0
  4050ae:	jmp    4050b4 <flatcc_builder_default_alloc@@Base+0x7ac>
  4050b0:	inc    QWORD PTR [rbp-0x10]
  4050b4:	mov    rax,QWORD PTR [rbp-0x10]
  4050b8:	mov    edx,0x1
  4050bd:	shlx   rax,rdx,rax
  4050c2:	cmp    QWORD PTR [rbp-0x18],rax
  4050c6:	ja     4050b0 <flatcc_builder_default_alloc@@Base+0x7a8>
  4050c8:	mov    rax,QWORD PTR [rbp-0x28]
  4050cc:	mov    rdx,QWORD PTR [rbp-0x10]
  4050d0:	mov    QWORD PTR [rax+0xd8],rdx
  4050d7:	mov    eax,0x0
  4050dc:	leave  
  4050dd:	ret    
  4050de:	push   rbp
  4050df:	mov    rbp,rsp
  4050e2:	sub    rsp,0x20
  4050e6:	mov    QWORD PTR [rbp-0x18],rdi
  4050ea:	mov    DWORD PTR [rbp-0x1c],esi
  4050ed:	mov    rax,QWORD PTR [rbp-0x18]
  4050f1:	mov    rax,QWORD PTR [rax+0xd8]
  4050f8:	test   rax,rax
  4050fb:	jne    405114 <flatcc_builder_default_alloc@@Base+0x80c>
  4050fd:	mov    rax,QWORD PTR [rbp-0x18]
  405101:	mov    rdi,rax
  405104:	call   404fb7 <flatcc_builder_default_alloc@@Base+0x6af>
  405109:	test   eax,eax
  40510b:	je     405114 <flatcc_builder_default_alloc@@Base+0x80c>
  40510d:	mov    eax,0x0
  405112:	jmp    405150 <flatcc_builder_default_alloc@@Base+0x848>
  405114:	mov    rax,QWORD PTR [rbp-0x18]
  405118:	mov    rax,QWORD PTR [rax+0xa8]
  40511f:	mov    QWORD PTR [rbp-0x8],rax
  405123:	mov    rax,QWORD PTR [rbp-0x18]
  405127:	mov    rax,QWORD PTR [rax+0xd8]
  40512e:	mov    edx,0x20
  405133:	sub    edx,eax
  405135:	mov    eax,edx
  405137:	mov    edx,DWORD PTR [rbp-0x1c]
  40513a:	shrx   eax,edx,eax
  40513f:	mov    eax,eax
  405141:	lea    rdx,[rax*4+0x0]
  405149:	mov    rax,QWORD PTR [rbp-0x8]
  40514d:	add    rax,rdx
  405150:	leave  
  405151:	ret    

0000000000405152 <flatcc_builder_flush_vtable_cache@@Base>:
  405152:	endbr64 
  405156:	push   rbp
  405157:	mov    rbp,rsp
  40515a:	sub    rsp,0x20
  40515e:	mov    QWORD PTR [rbp-0x18],rdi
  405162:	mov    rax,QWORD PTR [rbp-0x18]
  405166:	add    rax,0x58
  40516a:	add    rax,0x50
  40516e:	mov    QWORD PTR [rbp-0x8],rax
  405172:	mov    rax,QWORD PTR [rbp-0x18]
  405176:	mov    rax,QWORD PTR [rax+0xd8]
  40517d:	test   rax,rax
  405180:	je     4051bc <flatcc_builder_flush_vtable_cache@@Base+0x6a>
  405182:	mov    rax,QWORD PTR [rbp-0x8]
  405186:	mov    rdx,QWORD PTR [rax+0x8]
  40518a:	mov    rax,QWORD PTR [rbp-0x8]
  40518e:	mov    rax,QWORD PTR [rax]
  405191:	mov    esi,0x0
  405196:	mov    rdi,rax
  405199:	call   403140 <memset@plt>
  40519e:	mov    rax,QWORD PTR [rbp-0x18]
  4051a2:	mov    DWORD PTR [rax+0xe4],0x10
  4051ac:	mov    rax,QWORD PTR [rbp-0x18]
  4051b0:	mov    DWORD PTR [rax+0xe0],0x0
  4051ba:	jmp    4051bd <flatcc_builder_flush_vtable_cache@@Base+0x6b>
  4051bc:	nop
  4051bd:	leave  
  4051be:	ret    

00000000004051bf <flatcc_builder_custom_init@@Base>:
  4051bf:	endbr64 
  4051c3:	push   rbp
  4051c4:	mov    rbp,rsp
  4051c7:	sub    rsp,0x30
  4051cb:	mov    QWORD PTR [rbp-0x8],rdi
  4051cf:	mov    QWORD PTR [rbp-0x10],rsi
  4051d3:	mov    QWORD PTR [rbp-0x18],rdx
  4051d7:	mov    QWORD PTR [rbp-0x20],rcx
  4051db:	mov    QWORD PTR [rbp-0x28],r8
  4051df:	mov    rax,QWORD PTR [rbp-0x8]
  4051e3:	mov    edx,0x188
  4051e8:	mov    esi,0x0
  4051ed:	mov    rdi,rax
  4051f0:	call   403140 <memset@plt>
  4051f5:	cmp    QWORD PTR [rbp-0x10],0x0
  4051fa:	jne    405223 <flatcc_builder_custom_init@@Base+0x64>
  4051fc:	mov    rax,QWORD PTR [rbp-0x8]
  405200:	mov    DWORD PTR [rax+0x128],0x1
  40520a:	mov    rax,0x40a75c
  405211:	mov    QWORD PTR [rbp-0x10],rax
  405215:	mov    rax,QWORD PTR [rbp-0x8]
  405219:	add    rax,0x130
  40521f:	mov    QWORD PTR [rbp-0x18],rax
  405223:	cmp    QWORD PTR [rbp-0x20],0x0
  405228:	jne    405235 <flatcc_builder_custom_init@@Base+0x76>
  40522a:	mov    rax,0x404908
  405231:	mov    QWORD PTR [rbp-0x20],rax
  405235:	mov    rax,QWORD PTR [rbp-0x8]
  405239:	mov    rdx,QWORD PTR [rbp-0x28]
  40523d:	mov    QWORD PTR [rax+0x40],rdx
  405241:	mov    rax,QWORD PTR [rbp-0x8]
  405245:	mov    rdx,QWORD PTR [rbp-0x20]
  405249:	mov    QWORD PTR [rax+0x50],rdx
  40524d:	mov    rax,QWORD PTR [rbp-0x8]
  405251:	mov    rdx,QWORD PTR [rbp-0x18]
  405255:	mov    QWORD PTR [rax+0x38],rdx
  405259:	mov    rax,QWORD PTR [rbp-0x8]
  40525d:	mov    rdx,QWORD PTR [rbp-0x10]
  405261:	mov    QWORD PTR [rax+0x48],rdx
  405265:	mov    eax,0x0
  40526a:	leave  
  40526b:	ret    

000000000040526c <flatcc_builder_init@@Base>:
  40526c:	endbr64 
  405270:	push   rbp
  405271:	mov    rbp,rsp
  405274:	sub    rsp,0x10
  405278:	mov    QWORD PTR [rbp-0x8],rdi
  40527c:	mov    rax,QWORD PTR [rbp-0x8]
  405280:	mov    r8d,0x0
  405286:	mov    ecx,0x0
  40528b:	mov    edx,0x0
  405290:	mov    esi,0x0
  405295:	mov    rdi,rax
  405298:	call   4051bf <flatcc_builder_custom_init@@Base>
  40529d:	leave  
  40529e:	ret    

000000000040529f <flatcc_builder_custom_reset@@Base>:
  40529f:	endbr64 
  4052a3:	push   rbp
  4052a4:	mov    rbp,rsp
  4052a7:	sub    rsp,0x20
  4052ab:	mov    QWORD PTR [rbp-0x18],rdi
  4052af:	mov    DWORD PTR [rbp-0x1c],esi
  4052b2:	mov    DWORD PTR [rbp-0x20],edx
  4052b5:	mov    DWORD PTR [rbp-0xc],0x0
  4052bc:	jmp    405372 <flatcc_builder_custom_reset@@Base+0xd3>
  4052c1:	mov    rax,QWORD PTR [rbp-0x18]
  4052c5:	lea    rdx,[rax+0x58]
  4052c9:	mov    eax,DWORD PTR [rbp-0xc]
  4052cc:	cdqe   
  4052ce:	shl    rax,0x4
  4052d2:	add    rax,rdx
  4052d5:	mov    QWORD PTR [rbp-0x8],rax
  4052d9:	mov    rax,QWORD PTR [rbp-0x8]
  4052dd:	mov    rax,QWORD PTR [rax]
  4052e0:	test   rax,rax
  4052e3:	je     405343 <flatcc_builder_custom_reset@@Base+0xa4>
  4052e5:	cmp    DWORD PTR [rbp-0xc],0x5
  4052e9:	je     405325 <flatcc_builder_custom_reset@@Base+0x86>
  4052eb:	cmp    DWORD PTR [rbp-0x20],0x0
  4052ef:	je     405325 <flatcc_builder_custom_reset@@Base+0x86>
  4052f1:	mov    rax,QWORD PTR [rbp-0x18]
  4052f5:	mov    rax,QWORD PTR [rax+0x50]
  4052f9:	mov    rdx,QWORD PTR [rbp-0x18]
  4052fd:	mov    rdi,QWORD PTR [rdx+0x40]
  405301:	mov    edx,DWORD PTR [rbp-0xc]
  405304:	mov    rsi,QWORD PTR [rbp-0x8]
  405308:	mov    r8d,edx
  40530b:	mov    ecx,0x1
  405310:	mov    edx,0x1
  405315:	call   rax
  405317:	test   eax,eax
  405319:	je     405325 <flatcc_builder_custom_reset@@Base+0x86>
  40531b:	mov    eax,0xffffffff
  405320:	jmp    4054b1 <flatcc_builder_custom_reset@@Base+0x212>
  405325:	mov    rax,QWORD PTR [rbp-0x8]
  405329:	mov    rdx,QWORD PTR [rax+0x8]
  40532d:	mov    rax,QWORD PTR [rbp-0x8]
  405331:	mov    rax,QWORD PTR [rax]
  405334:	mov    esi,0x0
  405339:	mov    rdi,rax
  40533c:	call   403140 <memset@plt>
  405341:	jmp    40536f <flatcc_builder_custom_reset@@Base+0xd0>
  405343:	mov    rax,QWORD PTR [rbp-0x8]
  405347:	mov    rax,QWORD PTR [rax+0x8]
  40534b:	test   rax,rax
  40534e:	je     40536f <flatcc_builder_custom_reset@@Base+0xd0>
  405350:	lea    rcx,[rip+0x84d9]        # 40d830 <flatcc_builder_padding_base@@Base+0x670>
  405357:	mov    edx,0x1b2
  40535c:	lea    rsi,[rip+0x805d]        # 40d3c0 <flatcc_builder_padding_base@@Base+0x200>
  405363:	lea    rdi,[rip+0x80c7]        # 40d431 <flatcc_builder_padding_base@@Base+0x271>
  40536a:	call   403130 <__assert_fail@plt>
  40536f:	inc    DWORD PTR [rbp-0xc]
  405372:	cmp    DWORD PTR [rbp-0xc],0x7
  405376:	jle    4052c1 <flatcc_builder_custom_reset@@Base+0x22>
  40537c:	mov    rax,QWORD PTR [rbp-0x18]
  405380:	mov    DWORD PTR [rax+0xe0],0x0
  40538a:	mov    rax,QWORD PTR [rbp-0x18]
  40538e:	mov    eax,DWORD PTR [rax+0xe4]
  405394:	test   eax,eax
  405396:	je     4053a6 <flatcc_builder_custom_reset@@Base+0x107>
  405398:	mov    rax,QWORD PTR [rbp-0x18]
  40539c:	mov    DWORD PTR [rax+0xe4],0x10
  4053a6:	mov    rax,QWORD PTR [rbp-0x18]
  4053aa:	mov    WORD PTR [rax+0xe8],0x0
  4053b3:	mov    rax,QWORD PTR [rbp-0x18]
  4053b7:	mov    DWORD PTR [rax+0xf0],0x0
  4053c1:	mov    rax,QWORD PTR [rbp-0x18]
  4053c5:	mov    DWORD PTR [rax+0xf4],0x0
  4053cf:	mov    rax,QWORD PTR [rbp-0x18]
  4053d3:	mov    DWORD PTR [rax+0x104],0x0
  4053dd:	mov    rax,QWORD PTR [rbp-0x18]
  4053e1:	mov    DWORD PTR [rax+0x108],0x0
  4053eb:	mov    rax,QWORD PTR [rbp-0x18]
  4053ef:	mov    DWORD PTR [rax+0x20],0x0
  4053f6:	mov    rax,QWORD PTR [rbp-0x18]
  4053fa:	mov    DWORD PTR [rax+0x24],0x0
  405401:	mov    rax,QWORD PTR [rbp-0x18]
  405405:	mov    DWORD PTR [rax+0xfc],0x0
  40540f:	mov    rax,QWORD PTR [rbp-0x18]
  405413:	mov    DWORD PTR [rax+0x100],0x0
  40541d:	mov    rax,QWORD PTR [rbp-0x18]
  405421:	mov    rdx,QWORD PTR [rax+0x68]
  405425:	mov    rax,QWORD PTR [rbp-0x18]
  405429:	mov    QWORD PTR [rax+0x18],rdx
  40542d:	mov    rax,QWORD PTR [rbp-0x18]
  405431:	mov    rdx,QWORD PTR [rax+0x88]
  405438:	mov    rax,QWORD PTR [rbp-0x18]
  40543c:	mov    QWORD PTR [rax],rdx
  40543f:	mov    rax,QWORD PTR [rbp-0x18]
  405443:	mov    rdx,QWORD PTR [rax+0x58]
  405447:	mov    rax,QWORD PTR [rbp-0x18]
  40544b:	mov    QWORD PTR [rax+0x8],rdx
  40544f:	mov    rax,QWORD PTR [rbp-0x18]
  405453:	mov    QWORD PTR [rax+0x30],0x0
  40545b:	cmp    DWORD PTR [rbp-0x1c],0x0
  40545f:	je     40548c <flatcc_builder_custom_reset@@Base+0x1ed>
  405461:	mov    rax,QWORD PTR [rbp-0x18]
  405465:	mov    QWORD PTR [rax+0x118],0x0
  405470:	mov    rax,QWORD PTR [rbp-0x18]
  405474:	mov    DWORD PTR [rax+0x120],0x0
  40547e:	mov    rax,QWORD PTR [rbp-0x18]
  405482:	mov    DWORD PTR [rax+0x124],0x0
  40548c:	mov    rax,QWORD PTR [rbp-0x18]
  405490:	mov    eax,DWORD PTR [rax+0x128]
  405496:	test   eax,eax
  405498:	je     4054ac <flatcc_builder_custom_reset@@Base+0x20d>
  40549a:	mov    rax,QWORD PTR [rbp-0x18]
  40549e:	add    rax,0x130
  4054a4:	mov    rdi,rax
  4054a7:	call   40a537 <flatcc_emitter_reset@@Base>
  4054ac:	mov    eax,0x0
  4054b1:	leave  
  4054b2:	ret    

00000000004054b3 <flatcc_builder_reset@@Base>:
  4054b3:	endbr64 
  4054b7:	push   rbp
  4054b8:	mov    rbp,rsp
  4054bb:	sub    rsp,0x10
  4054bf:	mov    QWORD PTR [rbp-0x8],rdi
  4054c3:	mov    rax,QWORD PTR [rbp-0x8]
  4054c7:	mov    edx,0x0
  4054cc:	mov    esi,0x0
  4054d1:	mov    rdi,rax
  4054d4:	call   40529f <flatcc_builder_custom_reset@@Base>
  4054d9:	leave  
  4054da:	ret    

00000000004054db <flatcc_builder_clear@@Base>:
  4054db:	endbr64 
  4054df:	push   rbp
  4054e0:	mov    rbp,rsp
  4054e3:	sub    rsp,0x20
  4054e7:	mov    QWORD PTR [rbp-0x18],rdi
  4054eb:	mov    DWORD PTR [rbp-0xc],0x0
  4054f2:	jmp    405535 <flatcc_builder_clear@@Base+0x5a>
  4054f4:	mov    rax,QWORD PTR [rbp-0x18]
  4054f8:	lea    rdx,[rax+0x58]
  4054fc:	mov    eax,DWORD PTR [rbp-0xc]
  4054ff:	cdqe   
  405501:	shl    rax,0x4
  405505:	add    rax,rdx
  405508:	mov    QWORD PTR [rbp-0x8],rax
  40550c:	mov    rax,QWORD PTR [rbp-0x18]
  405510:	mov    rax,QWORD PTR [rax+0x50]
  405514:	mov    rdx,QWORD PTR [rbp-0x18]
  405518:	mov    rdi,QWORD PTR [rdx+0x40]
  40551c:	mov    edx,DWORD PTR [rbp-0xc]
  40551f:	mov    rsi,QWORD PTR [rbp-0x8]
  405523:	mov    r8d,edx
  405526:	mov    ecx,0x0
  40552b:	mov    edx,0x0
  405530:	call   rax
  405532:	inc    DWORD PTR [rbp-0xc]
  405535:	cmp    DWORD PTR [rbp-0xc],0x7
  405539:	jle    4054f4 <flatcc_builder_clear@@Base+0x19>
  40553b:	mov    rax,QWORD PTR [rbp-0x18]
  40553f:	mov    eax,DWORD PTR [rax+0x128]
  405545:	test   eax,eax
  405547:	je     40555b <flatcc_builder_clear@@Base+0x80>
  405549:	mov    rax,QWORD PTR [rbp-0x18]
  40554d:	add    rax,0x130
  405553:	mov    rdi,rax
  405556:	call   40a6c9 <flatcc_emitter_clear@@Base>
  40555b:	mov    rax,QWORD PTR [rbp-0x18]
  40555f:	mov    edx,0x188
  405564:	mov    esi,0x0
  405569:	mov    rdi,rax
  40556c:	call   403140 <memset@plt>
  405571:	nop
  405572:	leave  
  405573:	ret    
  405574:	push   rbp
  405575:	mov    rbp,rsp
  405578:	mov    QWORD PTR [rbp-0x8],rdi
  40557c:	mov    eax,esi
  40557e:	mov    WORD PTR [rbp-0xc],ax
  405582:	mov    rax,QWORD PTR [rbp-0x8]
  405586:	movzx  eax,WORD PTR [rax+0xe8]
  40558d:	cmp    WORD PTR [rbp-0xc],ax
  405591:	jbe    4055a2 <flatcc_builder_clear@@Base+0xc7>
  405593:	mov    rdx,QWORD PTR [rbp-0x8]
  405597:	movzx  eax,WORD PTR [rbp-0xc]
  40559b:	mov    WORD PTR [rdx+0xe8],ax
  4055a2:	nop
  4055a3:	pop    rbp
  4055a4:	ret    
  4055a5:	push   rbp
  4055a6:	mov    rbp,rsp
  4055a9:	mov    QWORD PTR [rbp-0x8],rdi
  4055ad:	mov    eax,esi
  4055af:	mov    WORD PTR [rbp-0xc],ax
  4055b3:	mov    rax,QWORD PTR [rbp-0x8]
  4055b7:	movzx  eax,WORD PTR [rax]
  4055ba:	cmp    WORD PTR [rbp-0xc],ax
  4055be:	jbe    4055cb <flatcc_builder_clear@@Base+0xf0>
  4055c0:	mov    rdx,QWORD PTR [rbp-0x8]
  4055c4:	movzx  eax,WORD PTR [rbp-0xc]
  4055c8:	mov    WORD PTR [rdx],ax
  4055cb:	nop
  4055cc:	pop    rbp
  4055cd:	ret    

00000000004055ce <flatcc_builder_enter_user_frame_ptr@@Base>:
  4055ce:	endbr64 
  4055d2:	push   rbp
  4055d3:	mov    rbp,rsp
  4055d6:	sub    rsp,0x20
  4055da:	mov    QWORD PTR [rbp-0x18],rdi
  4055de:	mov    QWORD PTR [rbp-0x20],rsi
  4055e2:	mov    rax,QWORD PTR [rbp-0x20]
  4055e6:	add    rax,0x7
  4055ea:	and    rax,0xfffffffffffffff8
  4055ee:	add    rax,0x8
  4055f2:	mov    QWORD PTR [rbp-0x20],rax
  4055f6:	mov    rax,QWORD PTR [rbp-0x18]
  4055fa:	mov    rdx,QWORD PTR [rax+0x180]
  405601:	mov    rcx,QWORD PTR [rbp-0x20]
  405605:	mov    rax,QWORD PTR [rbp-0x18]
  405609:	mov    r8d,0x0
  40560f:	mov    esi,0x7
  405614:	mov    rdi,rax
  405617:	call   404e1e <flatcc_builder_default_alloc@@Base+0x516>
  40561c:	mov    QWORD PTR [rbp-0x8],rax
  405620:	cmp    QWORD PTR [rbp-0x8],0x0
  405625:	jne    40562e <flatcc_builder_enter_user_frame_ptr@@Base+0x60>
  405627:	mov    eax,0x0
  40562c:	jmp    405698 <flatcc_builder_enter_user_frame_ptr@@Base+0xca>
  40562e:	mov    rdx,QWORD PTR [rbp-0x20]
  405632:	mov    rax,QWORD PTR [rbp-0x8]
  405636:	mov    esi,0x0
  40563b:	mov    rdi,rax
  40563e:	call   403140 <memset@plt>
  405643:	mov    rax,QWORD PTR [rbp-0x8]
  405647:	lea    rdx,[rax+0x8]
  40564b:	mov    QWORD PTR [rbp-0x8],rdx
  40564f:	mov    rdx,QWORD PTR [rbp-0x18]
  405653:	mov    rdx,QWORD PTR [rdx+0x178]
  40565a:	mov    QWORD PTR [rax],rdx
  40565d:	mov    rax,QWORD PTR [rbp-0x18]
  405661:	mov    rax,QWORD PTR [rax+0x180]
  405668:	lea    rdx,[rax+0x8]
  40566c:	mov    rax,QWORD PTR [rbp-0x18]
  405670:	mov    QWORD PTR [rax+0x178],rdx
  405677:	mov    rax,QWORD PTR [rbp-0x18]
  40567b:	mov    rdx,QWORD PTR [rax+0x180]
  405682:	mov    rax,QWORD PTR [rbp-0x20]
  405686:	add    rdx,rax
  405689:	mov    rax,QWORD PTR [rbp-0x18]
  40568d:	mov    QWORD PTR [rax+0x180],rdx
  405694:	mov    rax,QWORD PTR [rbp-0x8]
  405698:	leave  
  405699:	ret    

000000000040569a <flatcc_builder_enter_user_frame@@Base>:
  40569a:	endbr64 
  40569e:	push   rbp
  40569f:	mov    rbp,rsp
  4056a2:	sub    rsp,0x20
  4056a6:	mov    QWORD PTR [rbp-0x18],rdi
  4056aa:	mov    QWORD PTR [rbp-0x20],rsi
  4056ae:	mov    rax,QWORD PTR [rbp-0x20]
  4056b2:	add    rax,0x7
  4056b6:	and    rax,0xfffffffffffffff8
  4056ba:	add    rax,0x8
  4056be:	mov    QWORD PTR [rbp-0x20],rax
  4056c2:	mov    rax,QWORD PTR [rbp-0x18]
  4056c6:	mov    rdx,QWORD PTR [rax+0x180]
  4056cd:	mov    rcx,QWORD PTR [rbp-0x20]
  4056d1:	mov    rax,QWORD PTR [rbp-0x18]
  4056d5:	mov    r8d,0x0
  4056db:	mov    esi,0x7
  4056e0:	mov    rdi,rax
  4056e3:	call   404e1e <flatcc_builder_default_alloc@@Base+0x516>
  4056e8:	mov    QWORD PTR [rbp-0x8],rax
  4056ec:	cmp    QWORD PTR [rbp-0x8],0x0
  4056f1:	jne    4056fa <flatcc_builder_enter_user_frame@@Base+0x60>
  4056f3:	mov    eax,0x0
  4056f8:	jmp    40576b <flatcc_builder_enter_user_frame@@Base+0xd1>
  4056fa:	mov    rdx,QWORD PTR [rbp-0x20]
  4056fe:	mov    rax,QWORD PTR [rbp-0x8]
  405702:	mov    esi,0x0
  405707:	mov    rdi,rax
  40570a:	call   403140 <memset@plt>
  40570f:	mov    rax,QWORD PTR [rbp-0x8]
  405713:	lea    rdx,[rax+0x8]
  405717:	mov    QWORD PTR [rbp-0x8],rdx
  40571b:	mov    rdx,QWORD PTR [rbp-0x18]
  40571f:	mov    rdx,QWORD PTR [rdx+0x178]
  405726:	mov    QWORD PTR [rax],rdx
  405729:	mov    rax,QWORD PTR [rbp-0x18]
  40572d:	mov    rax,QWORD PTR [rax+0x180]
  405734:	lea    rdx,[rax+0x8]
  405738:	mov    rax,QWORD PTR [rbp-0x18]
  40573c:	mov    QWORD PTR [rax+0x178],rdx
  405743:	mov    rax,QWORD PTR [rbp-0x18]
  405747:	mov    rdx,QWORD PTR [rax+0x180]
  40574e:	mov    rax,QWORD PTR [rbp-0x20]
  405752:	add    rdx,rax
  405755:	mov    rax,QWORD PTR [rbp-0x18]
  405759:	mov    QWORD PTR [rax+0x180],rdx
  405760:	mov    rax,QWORD PTR [rbp-0x18]
  405764:	mov    rax,QWORD PTR [rax+0x178]
  40576b:	leave  
  40576c:	ret    

000000000040576d <flatcc_builder_exit_user_frame@@Base>:
  40576d:	endbr64 
  405771:	push   rbp
  405772:	mov    rbp,rsp
  405775:	sub    rsp,0x20
  405779:	mov    QWORD PTR [rbp-0x18],rdi
  40577d:	mov    rax,QWORD PTR [rbp-0x18]
  405781:	mov    rax,QWORD PTR [rax+0x178]
  405788:	test   rax,rax
  40578b:	jne    4057ac <flatcc_builder_exit_user_frame@@Base+0x3f>
  40578d:	lea    rcx,[rip+0x80bc]        # 40d850 <flatcc_builder_padding_base@@Base+0x690>
  405794:	mov    edx,0x21e
  405799:	lea    rsi,[rip+0x7c20]        # 40d3c0 <flatcc_builder_padding_base@@Base+0x200>
  4057a0:	lea    rdi,[rip+0x7c9c]        # 40d443 <flatcc_builder_padding_base@@Base+0x283>
  4057a7:	call   403130 <__assert_fail@plt>
  4057ac:	mov    rax,QWORD PTR [rbp-0x18]
  4057b0:	mov    rdx,QWORD PTR [rax+0xc8]
  4057b7:	mov    rax,QWORD PTR [rbp-0x18]
  4057bb:	mov    rax,QWORD PTR [rax+0x178]
  4057c2:	mov    eax,eax
  4057c4:	add    rax,rdx
  4057c7:	mov    QWORD PTR [rbp-0x8],rax
  4057cb:	mov    rax,QWORD PTR [rbp-0x18]
  4057cf:	mov    rax,QWORD PTR [rax+0x178]
  4057d6:	lea    rdx,[rax-0x8]
  4057da:	mov    rax,QWORD PTR [rbp-0x18]
  4057de:	mov    QWORD PTR [rax+0x180],rdx
  4057e5:	mov    rax,QWORD PTR [rbp-0x8]
  4057e9:	mov    rdx,QWORD PTR [rax-0x8]
  4057ed:	mov    rax,QWORD PTR [rbp-0x18]
  4057f1:	mov    QWORD PTR [rax+0x178],rdx
  4057f8:	mov    rax,QWORD PTR [rbp-0x18]
  4057fc:	mov    rax,QWORD PTR [rax+0x178]
  405803:	leave  
  405804:	ret    

0000000000405805 <flatcc_builder_exit_user_frame_at@@Base>:
  405805:	endbr64 
  405809:	push   rbp
  40580a:	mov    rbp,rsp
  40580d:	sub    rsp,0x10
  405811:	mov    QWORD PTR [rbp-0x8],rdi
  405815:	mov    QWORD PTR [rbp-0x10],rsi
  405819:	mov    rax,QWORD PTR [rbp-0x8]
  40581d:	mov    rax,QWORD PTR [rax+0x178]
  405824:	cmp    QWORD PTR [rbp-0x10],rax
  405828:	jbe    405849 <flatcc_builder_exit_user_frame_at@@Base+0x44>
  40582a:	lea    rcx,[rip+0x804f]        # 40d880 <flatcc_builder_padding_base@@Base+0x6c0>
  405831:	mov    edx,0x227
  405836:	lea    rsi,[rip+0x7b83]        # 40d3c0 <flatcc_builder_padding_base@@Base+0x200>
  40583d:	lea    rdi,[rip+0x7c1c]        # 40d460 <flatcc_builder_padding_base@@Base+0x2a0>
  405844:	call   403130 <__assert_fail@plt>
  405849:	mov    rax,QWORD PTR [rbp-0x8]
  40584d:	mov    rdx,QWORD PTR [rbp-0x10]
  405851:	mov    QWORD PTR [rax+0x178],rdx
  405858:	mov    rax,QWORD PTR [rbp-0x8]
  40585c:	mov    rdi,rax
  40585f:	call   40576d <flatcc_builder_exit_user_frame@@Base>
  405864:	leave  
  405865:	ret    

0000000000405866 <flatcc_builder_get_current_user_frame@@Base>:
  405866:	endbr64 
  40586a:	push   rbp
  40586b:	mov    rbp,rsp
  40586e:	mov    QWORD PTR [rbp-0x8],rdi
  405872:	mov    rax,QWORD PTR [rbp-0x8]
  405876:	mov    rax,QWORD PTR [rax+0x178]
  40587d:	pop    rbp
  40587e:	ret    

000000000040587f <flatcc_builder_get_user_frame_ptr@@Base>:
  40587f:	endbr64 
  405883:	push   rbp
  405884:	mov    rbp,rsp
  405887:	mov    QWORD PTR [rbp-0x8],rdi
  40588b:	mov    QWORD PTR [rbp-0x10],rsi
  40588f:	mov    rax,QWORD PTR [rbp-0x8]
  405893:	mov    rax,QWORD PTR [rax+0xc8]
  40589a:	mov    rdx,QWORD PTR [rbp-0x10]
  40589e:	mov    edx,edx
  4058a0:	add    rax,rdx
  4058a3:	pop    rbp
  4058a4:	ret    
  4058a5:	endbr64 
  4058a9:	push   rbp
  4058aa:	mov    rbp,rsp
  4058ad:	sub    rsp,0x10
  4058b1:	mov    QWORD PTR [rbp-0x8],rdi
  4058b5:	mov    eax,esi
  4058b7:	mov    WORD PTR [rbp-0xc],ax
  4058bb:	mov    rax,QWORD PTR [rbp-0x8]
  4058bf:	mov    eax,DWORD PTR [rax+0x104]
  4058c5:	lea    edx,[rax+0x1]
  4058c8:	mov    rax,QWORD PTR [rbp-0x8]
  4058cc:	mov    DWORD PTR [rax+0x104],edx
  4058d2:	mov    rax,QWORD PTR [rbp-0x8]
  4058d6:	mov    edx,DWORD PTR [rax+0x104]
  4058dc:	mov    rax,QWORD PTR [rbp-0x8]
  4058e0:	mov    eax,DWORD PTR [rax+0x108]
  4058e6:	cmp    edx,eax
  4058e8:	jle    4059e3 <flatcc_builder_get_user_frame_ptr@@Base+0x164>
  4058ee:	mov    rax,QWORD PTR [rbp-0x8]
  4058f2:	mov    eax,DWORD PTR [rax+0x120]
  4058f8:	test   eax,eax
  4058fa:	jle    40591e <flatcc_builder_get_user_frame_ptr@@Base+0x9f>
  4058fc:	mov    rax,QWORD PTR [rbp-0x8]
  405900:	mov    edx,DWORD PTR [rax+0x104]
  405906:	mov    rax,QWORD PTR [rbp-0x8]
  40590a:	mov    eax,DWORD PTR [rax+0x120]
  405910:	cmp    edx,eax
  405912:	jle    40591e <flatcc_builder_get_user_frame_ptr@@Base+0x9f>
  405914:	mov    eax,0xffffffff
  405919:	jmp    405a7e <flatcc_builder_get_user_frame_ptr@@Base+0x1ff>
  40591e:	mov    rax,QWORD PTR [rbp-0x8]
  405922:	mov    eax,DWORD PTR [rax+0x104]
  405928:	dec    eax
  40592a:	movsxd rdx,eax
  40592d:	mov    rax,rdx
  405930:	shl    rax,0x3
  405934:	add    rax,rdx
  405937:	shl    rax,0x2
  40593b:	mov    rdx,rax
  40593e:	mov    rax,QWORD PTR [rbp-0x8]
  405942:	mov    r8d,0x0
  405948:	mov    ecx,0x24
  40594d:	mov    esi,0x4
  405952:	mov    rdi,rax
  405955:	call   404e1e <flatcc_builder_default_alloc@@Base+0x516>
  40595a:	mov    rdx,rax
  40595d:	mov    rax,QWORD PTR [rbp-0x8]
  405961:	mov    QWORD PTR [rax+0x30],rdx
  405965:	mov    rax,QWORD PTR [rbp-0x8]
  405969:	mov    rax,QWORD PTR [rax+0x30]
  40596d:	test   rax,rax
  405970:	jne    40597c <flatcc_builder_get_user_frame_ptr@@Base+0xfd>
  405972:	mov    eax,0xffffffff
  405977:	jmp    405a7e <flatcc_builder_get_user_frame_ptr@@Base+0x1ff>
  40597c:	mov    rax,QWORD PTR [rbp-0x8]
  405980:	mov    rax,QWORD PTR [rax+0xa0]
  405987:	movabs rdx,0xe38e38e38e38e38f
  405991:	mul    rdx
  405994:	mov    rax,rdx
  405997:	shr    rax,0x5
  40599b:	mov    edx,eax
  40599d:	mov    rax,QWORD PTR [rbp-0x8]
  4059a1:	mov    DWORD PTR [rax+0x108],edx
  4059a7:	mov    rax,QWORD PTR [rbp-0x8]
  4059ab:	mov    eax,DWORD PTR [rax+0x120]
  4059b1:	test   eax,eax
  4059b3:	jle    4059f7 <flatcc_builder_get_user_frame_ptr@@Base+0x178>
  4059b5:	mov    rax,QWORD PTR [rbp-0x8]
  4059b9:	mov    edx,DWORD PTR [rax+0x120]
  4059bf:	mov    rax,QWORD PTR [rbp-0x8]
  4059c3:	mov    eax,DWORD PTR [rax+0x108]
  4059c9:	cmp    edx,eax
  4059cb:	jge    4059f7 <flatcc_builder_get_user_frame_ptr@@Base+0x178>
  4059cd:	mov    rax,QWORD PTR [rbp-0x8]
  4059d1:	mov    edx,DWORD PTR [rax+0x120]
  4059d7:	mov    rax,QWORD PTR [rbp-0x8]
  4059db:	mov    DWORD PTR [rax+0x108],edx
  4059e1:	jmp    4059f7 <flatcc_builder_get_user_frame_ptr@@Base+0x178>
  4059e3:	mov    rax,QWORD PTR [rbp-0x8]
  4059e7:	mov    rax,QWORD PTR [rax+0x30]
  4059eb:	lea    rdx,[rax+0x24]
  4059ef:	mov    rax,QWORD PTR [rbp-0x8]
  4059f3:	mov    QWORD PTR [rax+0x30],rdx
  4059f7:	mov    rax,QWORD PTR [rbp-0x8]
  4059fb:	mov    rax,QWORD PTR [rax+0x30]
  4059ff:	mov    rdx,QWORD PTR [rbp-0x8]
  405a03:	mov    edx,DWORD PTR [rdx+0x20]
  405a06:	mov    DWORD PTR [rax+0x8],edx
  405a09:	mov    rax,QWORD PTR [rbp-0x8]
  405a0d:	mov    rdx,QWORD PTR [rax+0x30]
  405a11:	mov    rax,QWORD PTR [rbp-0x8]
  405a15:	movzx  eax,WORD PTR [rax+0xea]
  405a1c:	mov    WORD PTR [rdx+0xc],ax
  405a20:	mov    rdx,QWORD PTR [rbp-0x8]
  405a24:	movzx  eax,WORD PTR [rbp-0xc]
  405a28:	mov    WORD PTR [rdx+0xea],ax
  405a2f:	mov    rax,QWORD PTR [rbp-0x8]
  405a33:	mov    rax,QWORD PTR [rax+0x30]
  405a37:	mov    rdx,QWORD PTR [rbp-0x8]
  405a3b:	mov    edx,DWORD PTR [rdx+0x28]
  405a3e:	mov    DWORD PTR [rax],edx
  405a40:	mov    rax,QWORD PTR [rbp-0x8]
  405a44:	mov    rax,QWORD PTR [rax+0x30]
  405a48:	mov    DWORD PTR [rax+0x4],0xfffffffc
  405a4f:	mov    rax,QWORD PTR [rbp-0x8]
  405a53:	mov    edx,DWORD PTR [rax+0x28]
  405a56:	mov    rax,QWORD PTR [rbp-0x8]
  405a5a:	mov    eax,DWORD PTR [rax+0x20]
  405a5d:	add    eax,edx
  405a5f:	add    eax,0x7
  405a62:	and    eax,0xfffffff8
  405a65:	mov    edx,eax
  405a67:	mov    rax,QWORD PTR [rbp-0x8]
  405a6b:	mov    DWORD PTR [rax+0x28],edx
  405a6e:	mov    rax,QWORD PTR [rbp-0x8]
  405a72:	mov    DWORD PTR [rax+0x20],0x0
  405a79:	mov    eax,0x0
  405a7e:	leave  
  405a7f:	ret    
  405a80:	push   rbp
  405a81:	mov    rbp,rsp
  405a84:	sub    rsp,0x10
  405a88:	mov    QWORD PTR [rbp-0x8],rdi
  405a8c:	mov    rax,QWORD PTR [rbp-0x8]
  405a90:	mov    eax,DWORD PTR [rax+0x20]
  405a93:	mov    edx,eax
  405a95:	mov    rax,QWORD PTR [rbp-0x8]
  405a99:	mov    rax,QWORD PTR [rax+0x18]
  405a9d:	mov    esi,0x0
  405aa2:	mov    rdi,rax
  405aa5:	call   403140 <memset@plt>
  405aaa:	mov    rax,QWORD PTR [rbp-0x8]
  405aae:	mov    rax,QWORD PTR [rax+0x30]
  405ab2:	mov    edx,DWORD PTR [rax+0x8]
  405ab5:	mov    rax,QWORD PTR [rbp-0x8]
  405ab9:	mov    DWORD PTR [rax+0x20],edx
  405abc:	mov    rax,QWORD PTR [rbp-0x8]
  405ac0:	mov    rax,QWORD PTR [rax+0x30]
  405ac4:	mov    edx,DWORD PTR [rax]
  405ac6:	mov    rax,QWORD PTR [rbp-0x8]
  405aca:	mov    DWORD PTR [rax+0x28],edx
  405acd:	mov    rax,QWORD PTR [rbp-0x8]
  405ad1:	mov    rax,QWORD PTR [rax+0x30]
  405ad5:	mov    edx,DWORD PTR [rax+0x4]
  405ad8:	mov    rax,QWORD PTR [rbp-0x8]
  405adc:	mov    esi,edx
  405ade:	mov    rdi,rax
  405ae1:	call   404a7b <flatcc_builder_default_alloc@@Base+0x173>
  405ae6:	mov    rax,QWORD PTR [rbp-0x8]
  405aea:	movzx  eax,WORD PTR [rax+0xea]
  405af1:	movzx  edx,ax
  405af4:	mov    rax,QWORD PTR [rbp-0x8]
  405af8:	mov    esi,edx
  405afa:	mov    rdi,rax
  405afd:	call   405574 <flatcc_builder_clear@@Base+0x99>
  405b02:	mov    rax,QWORD PTR [rbp-0x8]
  405b06:	mov    rax,QWORD PTR [rax+0x30]
  405b0a:	movzx  eax,WORD PTR [rax+0xc]
  405b0e:	mov    rdx,QWORD PTR [rbp-0x8]
  405b12:	mov    WORD PTR [rdx+0xea],ax
  405b19:	mov    rax,QWORD PTR [rbp-0x8]
  405b1d:	mov    rax,QWORD PTR [rax+0x30]
  405b21:	lea    rdx,[rax-0x24]
  405b25:	mov    rax,QWORD PTR [rbp-0x8]
  405b29:	mov    QWORD PTR [rax+0x30],rdx
  405b2d:	mov    rax,QWORD PTR [rbp-0x8]
  405b31:	mov    eax,DWORD PTR [rax+0x104]
  405b37:	lea    edx,[rax-0x1]
  405b3a:	mov    rax,QWORD PTR [rbp-0x8]
  405b3e:	mov    DWORD PTR [rax+0x104],edx
  405b44:	nop
  405b45:	leave  
  405b46:	ret    
  405b47:	push   rbp
  405b48:	mov    rbp,rsp
  405b4b:	mov    QWORD PTR [rbp-0x8],rdi
  405b4f:	mov    DWORD PTR [rbp-0xc],esi
  405b52:	mov    eax,edx
  405b54:	mov    WORD PTR [rbp-0x10],ax
  405b58:	mov    rax,QWORD PTR [rbp-0x8]
  405b5c:	mov    eax,DWORD PTR [rax+0xf0]
  405b62:	sub    eax,DWORD PTR [rbp-0xc]
  405b65:	movzx  edx,WORD PTR [rbp-0x10]
  405b69:	dec    edx
  405b6b:	and    eax,edx
  405b6d:	pop    rbp
  405b6e:	ret    
  405b6f:	push   rbp
  405b70:	mov    rbp,rsp
  405b73:	mov    QWORD PTR [rbp-0x8],rdi
  405b77:	mov    eax,esi
  405b79:	mov    WORD PTR [rbp-0xc],ax
  405b7d:	mov    rax,QWORD PTR [rbp-0x8]
  405b81:	mov    eax,DWORD PTR [rax+0xf4]
  405b87:	movzx  edx,WORD PTR [rbp-0xc]
  405b8b:	dec    edx
  405b8d:	and    eax,edx
  405b8f:	pop    rbp
  405b90:	ret    
  405b91:	push   rbp
  405b92:	mov    rbp,rsp
  405b95:	sub    rsp,0x20
  405b99:	mov    QWORD PTR [rbp-0x18],rdi
  405b9d:	mov    QWORD PTR [rbp-0x20],rsi
  405ba1:	mov    rax,QWORD PTR [rbp-0x18]
  405ba5:	mov    edx,DWORD PTR [rax+0xf0]
  405bab:	mov    rax,QWORD PTR [rbp-0x20]
  405baf:	mov    rax,QWORD PTR [rax]
  405bb2:	sub    edx,eax
  405bb4:	mov    eax,edx
  405bb6:	mov    DWORD PTR [rbp-0x4],eax
  405bb9:	mov    rax,QWORD PTR [rbp-0x20]
  405bbd:	mov    rax,QWORD PTR [rax]
  405bc0:	cmp    rax,0x10
  405bc4:	jbe    405bdb <flatcc_builder_get_user_frame_ptr@@Base+0x35c>
  405bc6:	mov    rax,QWORD PTR [rbp-0x20]
  405bca:	mov    rax,QWORD PTR [rax]
  405bcd:	lea    rdx,[rax-0x10]
  405bd1:	mov    eax,0xffffffff
  405bd6:	cmp    rdx,rax
  405bd9:	ja     405bea <flatcc_builder_get_user_frame_ptr@@Base+0x36b>
  405bdb:	mov    rax,QWORD PTR [rbp-0x18]
  405bdf:	mov    eax,DWORD PTR [rax+0xf0]
  405be5:	cmp    DWORD PTR [rbp-0x4],eax
  405be8:	jl     405c09 <flatcc_builder_get_user_frame_ptr@@Base+0x38a>
  405bea:	lea    rcx,[rip+0x7cd7]        # 40d8c8 <flatcc_builder_padding_base@@Base+0x708>
  405bf1:	mov    edx,0x287
  405bf6:	lea    rsi,[rip+0x77c3]        # 40d3c0 <flatcc_builder_padding_base@@Base+0x200>
  405bfd:	lea    rdi,[rip+0x781c]        # 40d420 <flatcc_builder_padding_base@@Base+0x260>
  405c04:	call   403130 <__assert_fail@plt>
  405c09:	mov    rax,QWORD PTR [rbp-0x18]
  405c0d:	mov    rax,QWORD PTR [rax+0x48]
  405c11:	mov    rdx,QWORD PTR [rbp-0x20]
  405c15:	mov    r8,QWORD PTR [rdx]
  405c18:	mov    rdx,QWORD PTR [rbp-0x20]
  405c1c:	mov    edx,DWORD PTR [rdx+0x8]
  405c1f:	mov    rcx,QWORD PTR [rbp-0x20]
  405c23:	lea    rsi,[rcx+0x10]
  405c27:	mov    rcx,QWORD PTR [rbp-0x18]
  405c2b:	mov    rdi,QWORD PTR [rcx+0x38]
  405c2f:	mov    ecx,DWORD PTR [rbp-0x4]
  405c32:	call   rax
  405c34:	test   eax,eax
  405c36:	je     405c57 <flatcc_builder_get_user_frame_ptr@@Base+0x3d8>
  405c38:	lea    rcx,[rip+0x7c89]        # 40d8c8 <flatcc_builder_padding_base@@Base+0x708>
  405c3f:	mov    edx,0x28b
  405c44:	lea    rsi,[rip+0x7775]        # 40d3c0 <flatcc_builder_padding_base@@Base+0x200>
  405c4b:	lea    rdi,[rip+0x77ce]        # 40d420 <flatcc_builder_padding_base@@Base+0x260>
  405c52:	call   403130 <__assert_fail@plt>
  405c57:	mov    rax,QWORD PTR [rbp-0x18]
  405c5b:	mov    edx,DWORD PTR [rbp-0x4]
  405c5e:	mov    DWORD PTR [rax+0xf0],edx
  405c64:	mov    rax,QWORD PTR [rbp-0x18]
  405c68:	mov    eax,DWORD PTR [rax+0xf0]
  405c6e:	leave  
  405c6f:	ret    
  405c70:	push   rbp
  405c71:	mov    rbp,rsp
  405c74:	sub    rsp,0x20
  405c78:	mov    QWORD PTR [rbp-0x18],rdi
  405c7c:	mov    QWORD PTR [rbp-0x20],rsi
  405c80:	mov    rax,QWORD PTR [rbp-0x18]
  405c84:	mov    eax,DWORD PTR [rax+0xf4]
  405c8a:	mov    DWORD PTR [rbp-0x4],eax
  405c8d:	mov    rax,QWORD PTR [rbp-0x20]
  405c91:	mov    rax,QWORD PTR [rax]
  405c94:	mov    edx,eax
  405c96:	mov    eax,DWORD PTR [rbp-0x4]
  405c99:	add    edx,eax
  405c9b:	mov    rax,QWORD PTR [rbp-0x18]
  405c9f:	mov    DWORD PTR [rax+0xf4],edx
  405ca5:	mov    rax,QWORD PTR [rbp-0x18]
  405ca9:	mov    eax,DWORD PTR [rax+0xf4]
  405caf:	cmp    DWORD PTR [rbp-0x4],eax
  405cb2:	jle    405cd3 <flatcc_builder_get_user_frame_ptr@@Base+0x454>
  405cb4:	lea    rcx,[rip+0x7bfd]        # 40d8b8 <flatcc_builder_padding_base@@Base+0x6f8>
  405cbb:	mov    edx,0x2a1
  405cc0:	lea    rsi,[rip+0x76f9]        # 40d3c0 <flatcc_builder_padding_base@@Base+0x200>
  405cc7:	lea    rdi,[rip+0x7752]        # 40d420 <flatcc_builder_padding_base@@Base+0x260>
  405cce:	call   403130 <__assert_fail@plt>
  405cd3:	mov    rax,QWORD PTR [rbp-0x18]
  405cd7:	mov    rax,QWORD PTR [rax+0x48]
  405cdb:	mov    rdx,QWORD PTR [rbp-0x20]
  405cdf:	mov    r8,QWORD PTR [rdx]
  405ce2:	mov    rdx,QWORD PTR [rbp-0x20]
  405ce6:	mov    edx,DWORD PTR [rdx+0x8]
  405ce9:	mov    rcx,QWORD PTR [rbp-0x20]
  405ced:	lea    rsi,[rcx+0x10]
  405cf1:	mov    rcx,QWORD PTR [rbp-0x18]
  405cf5:	mov    rdi,QWORD PTR [rcx+0x38]
  405cf9:	mov    ecx,DWORD PTR [rbp-0x4]
  405cfc:	call   rax
  405cfe:	test   eax,eax
  405d00:	je     405d21 <flatcc_builder_get_user_frame_ptr@@Base+0x4a2>
  405d02:	lea    rcx,[rip+0x7baf]        # 40d8b8 <flatcc_builder_padding_base@@Base+0x6f8>
  405d09:	mov    edx,0x2a5
  405d0e:	lea    rsi,[rip+0x76ab]        # 40d3c0 <flatcc_builder_padding_base@@Base+0x200>
  405d15:	lea    rdi,[rip+0x7704]        # 40d420 <flatcc_builder_padding_base@@Base+0x260>
  405d1c:	call   403130 <__assert_fail@plt>
  405d21:	mov    eax,DWORD PTR [rbp-0x4]
  405d24:	inc    eax
  405d26:	leave  
  405d27:	ret    
  405d28:	endbr64 
  405d2c:	push   rbp
  405d2d:	mov    rbp,rsp
  405d30:	sub    rsp,0xd0
  405d37:	mov    QWORD PTR [rbp-0xb8],rdi
  405d3e:	mov    QWORD PTR [rbp-0xc0],rsi
  405d45:	mov    eax,edx
  405d47:	mov    DWORD PTR [rbp-0xc8],ecx
  405d4d:	mov    WORD PTR [rbp-0xc4],ax
  405d54:	mov    rax,QWORD PTR fs:0x28
  405d5d:	mov    QWORD PTR [rbp-0x8],rax
  405d61:	xor    eax,eax
  405d63:	cmp    WORD PTR [rbp-0xc4],0x0
  405d6b:	jne    405d97 <flatcc_builder_get_user_frame_ptr@@Base+0x518>
  405d6d:	mov    rax,QWORD PTR [rbp-0xb8]
  405d74:	movzx  eax,WORD PTR [rax+0xec]
  405d7b:	test   ax,ax
  405d7e:	je     405d90 <flatcc_builder_get_user_frame_ptr@@Base+0x511>
  405d80:	mov    rax,QWORD PTR [rbp-0xb8]
  405d87:	movzx  eax,WORD PTR [rax+0xec]
  405d8e:	jmp    405d9e <flatcc_builder_get_user_frame_ptr@@Base+0x51f>
  405d90:	mov    eax,0x1
  405d95:	jmp    405d9e <flatcc_builder_get_user_frame_ptr@@Base+0x51f>
  405d97:	movzx  eax,WORD PTR [rbp-0xc4]
  405d9e:	mov    WORD PTR [rbp-0xc4],ax
  405da5:	mov    rax,QWORD PTR [rbp-0xc0]
  405dac:	mov    esi,0x4
  405db1:	mov    rdi,rax
  405db4:	call   4055a5 <flatcc_builder_clear@@Base+0xca>
  405db9:	movzx  edx,WORD PTR [rbp-0xc4]
  405dc0:	mov    rax,QWORD PTR [rbp-0xc0]
  405dc7:	mov    esi,edx
  405dc9:	mov    rdi,rax
  405dcc:	call   4055a5 <flatcc_builder_clear@@Base+0xca>
  405dd1:	cmp    DWORD PTR [rbp-0xc8],0x0
  405dd8:	jne    405ecd <flatcc_builder_get_user_frame_ptr@@Base+0x64e>
  405dde:	movzx  edx,WORD PTR [rbp-0xc4]
  405de5:	mov    rax,QWORD PTR [rbp-0xb8]
  405dec:	mov    esi,edx
  405dee:	mov    rdi,rax
  405df1:	call   405b6f <flatcc_builder_get_user_frame_ptr@@Base+0x2f0>
  405df6:	mov    eax,eax
  405df8:	mov    QWORD PTR [rbp-0xa8],rax
  405dff:	cmp    QWORD PTR [rbp-0xa8],0x0
  405e07:	je     405ecd <flatcc_builder_get_user_frame_ptr@@Base+0x64e>
  405e0d:	mov    QWORD PTR [rbp-0xa0],0x0
  405e18:	mov    DWORD PTR [rbp-0x98],0x0
  405e22:	cmp    QWORD PTR [rbp-0xa8],0x0
  405e2a:	je     405e91 <flatcc_builder_get_user_frame_ptr@@Base+0x612>
  405e2c:	mov    rdx,QWORD PTR [rbp-0xa0]
  405e33:	mov    rax,QWORD PTR [rbp-0xa8]
  405e3a:	add    rax,rdx
  405e3d:	mov    QWORD PTR [rbp-0xa0],rax
  405e44:	mov    eax,DWORD PTR [rbp-0x98]
  405e4a:	cdqe   
  405e4c:	shl    rax,0x4
  405e50:	add    rax,rbp
  405e53:	sub    rax,0x90
  405e59:	mov    rdx,0x40d1c0
  405e60:	mov    QWORD PTR [rax],rdx
  405e63:	mov    eax,DWORD PTR [rbp-0x98]
  405e69:	cdqe   
  405e6b:	shl    rax,0x4
  405e6f:	add    rax,rbp
  405e72:	lea    rdx,[rax-0x88]
  405e79:	mov    rax,QWORD PTR [rbp-0xa8]
  405e80:	mov    QWORD PTR [rdx],rax
  405e83:	mov    eax,DWORD PTR [rbp-0x98]
  405e89:	inc    eax
  405e8b:	mov    DWORD PTR [rbp-0x98],eax
  405e91:	lea    rdx,[rbp-0xa0]
  405e98:	mov    rax,QWORD PTR [rbp-0xb8]
  405e9f:	mov    rsi,rdx
  405ea2:	mov    rdi,rax
  405ea5:	call   405c70 <flatcc_builder_get_user_frame_ptr@@Base+0x3f1>
  405eaa:	test   eax,eax
  405eac:	jne    405ecd <flatcc_builder_get_user_frame_ptr@@Base+0x64e>
  405eae:	lea    rcx,[rip+0x79f3]        # 40d8a8 <flatcc_builder_padding_base@@Base+0x6e8>
  405eb5:	mov    edx,0x2be
  405eba:	lea    rsi,[rip+0x74ff]        # 40d3c0 <flatcc_builder_padding_base@@Base+0x200>
  405ec1:	lea    rdi,[rip+0x7558]        # 40d420 <flatcc_builder_padding_base@@Base+0x260>
  405ec8:	call   403130 <__assert_fail@plt>
  405ecd:	mov    eax,0x0
  405ed2:	mov    rcx,QWORD PTR [rbp-0x8]
  405ed6:	xor    rcx,QWORD PTR fs:0x28
  405edf:	je     405ee6 <flatcc_builder_get_user_frame_ptr@@Base+0x667>
  405ee1:	call   403120 <__stack_chk_fail@plt>
  405ee6:	leave  
  405ee7:	ret    

0000000000405ee8 <flatcc_builder_embed_buffer@@Base>:
  405ee8:	endbr64 
  405eec:	push   rbp
  405eed:	mov    rbp,rsp
  405ef0:	sub    rsp,0xe0
  405ef7:	mov    QWORD PTR [rbp-0xb8],rdi
  405efe:	mov    eax,esi
  405f00:	mov    QWORD PTR [rbp-0xc8],rdx
  405f07:	mov    QWORD PTR [rbp-0xd0],rcx
  405f0e:	mov    edx,r8d
  405f11:	mov    DWORD PTR [rbp-0xd4],r9d
  405f18:	mov    WORD PTR [rbp-0xbc],ax
  405f1f:	mov    eax,edx
  405f21:	mov    WORD PTR [rbp-0xc0],ax
  405f28:	mov    rax,QWORD PTR fs:0x28
  405f31:	mov    QWORD PTR [rbp-0x8],rax
  405f35:	xor    eax,eax
  405f37:	mov    eax,DWORD PTR [rbp-0xd4]
  405f3d:	and    eax,0x2
  405f40:	mov    DWORD PTR [rbp-0xa8],eax
  405f46:	mov    rax,QWORD PTR [rbp-0xb8]
  405f4d:	mov    eax,DWORD PTR [rax+0x100]
  405f53:	test   eax,eax
  405f55:	setne  al
  405f58:	movzx  ecx,al
  405f5b:	movzx  edx,WORD PTR [rbp-0xbc]
  405f62:	lea    rsi,[rbp-0xc0]
  405f69:	mov    rax,QWORD PTR [rbp-0xb8]
  405f70:	mov    rdi,rax
  405f73:	call   405d28 <flatcc_builder_get_user_frame_ptr@@Base+0x4a9>
  405f78:	test   eax,eax
  405f7a:	je     405f86 <flatcc_builder_embed_buffer@@Base+0x9e>
  405f7c:	mov    eax,0x0
  405f81:	jmp    40615d <flatcc_builder_embed_buffer@@Base+0x275>
  405f86:	movzx  eax,WORD PTR [rbp-0xc0]
  405f8d:	movzx  edx,ax
  405f90:	mov    rax,QWORD PTR [rbp-0xd0]
  405f97:	mov    ecx,eax
  405f99:	cmp    DWORD PTR [rbp-0xa8],0x0
  405fa0:	je     405fa9 <flatcc_builder_embed_buffer@@Base+0xc1>
  405fa2:	mov    eax,0x4
  405fa7:	jmp    405fae <flatcc_builder_embed_buffer@@Base+0xc6>
  405fa9:	mov    eax,0x0
  405fae:	add    ecx,eax
  405fb0:	mov    rax,QWORD PTR [rbp-0xb8]
  405fb7:	mov    esi,ecx
  405fb9:	mov    rdi,rax
  405fbc:	call   405b47 <flatcc_builder_get_user_frame_ptr@@Base+0x2c8>
  405fc1:	mov    DWORD PTR [rbp-0xa4],eax
  405fc7:	mov    rax,QWORD PTR [rbp-0xd0]
  405fce:	mov    edx,eax
  405fd0:	mov    eax,DWORD PTR [rbp-0xa4]
  405fd6:	add    eax,edx
  405fd8:	mov    edi,eax
  405fda:	call   404848 <main@@Base+0x173>
  405fdf:	mov    DWORD PTR [rbp-0xac],eax
  405fe5:	mov    QWORD PTR [rbp-0xa0],0x0
  405ff0:	mov    DWORD PTR [rbp-0x98],0x0
  405ffa:	mov    rax,QWORD PTR [rbp-0xb8]
  406001:	mov    eax,DWORD PTR [rax+0x100]
  406007:	test   eax,eax
  406009:	je     406067 <flatcc_builder_embed_buffer@@Base+0x17f>
  40600b:	mov    rax,QWORD PTR [rbp-0xa0]
  406012:	add    rax,0x4
  406016:	mov    QWORD PTR [rbp-0xa0],rax
  40601d:	mov    eax,DWORD PTR [rbp-0x98]
  406023:	cdqe   
  406025:	shl    rax,0x4
  406029:	add    rax,rbp
  40602c:	lea    rdx,[rax-0x90]
  406033:	lea    rax,[rbp-0xac]
  40603a:	mov    QWORD PTR [rdx],rax
  40603d:	mov    eax,DWORD PTR [rbp-0x98]
  406043:	cdqe   
  406045:	shl    rax,0x4
  406049:	add    rax,rbp
  40604c:	sub    rax,0x88
  406052:	mov    QWORD PTR [rax],0x4
  406059:	mov    eax,DWORD PTR [rbp-0x98]
  40605f:	inc    eax
  406061:	mov    DWORD PTR [rbp-0x98],eax
  406067:	cmp    QWORD PTR [rbp-0xd0],0x0
  40606f:	je     4060d7 <flatcc_builder_embed_buffer@@Base+0x1ef>
  406071:	mov    rdx,QWORD PTR [rbp-0xa0]
  406078:	mov    rax,QWORD PTR [rbp-0xd0]
  40607f:	add    rax,rdx
  406082:	mov    QWORD PTR [rbp-0xa0],rax
  406089:	mov    eax,DWORD PTR [rbp-0x98]
  40608f:	cdqe   
  406091:	shl    rax,0x4
  406095:	add    rax,rbp
  406098:	lea    rdx,[rax-0x90]
  40609f:	mov    rax,QWORD PTR [rbp-0xc8]
  4060a6:	mov    QWORD PTR [rdx],rax
  4060a9:	mov    eax,DWORD PTR [rbp-0x98]
  4060af:	cdqe   
  4060b1:	shl    rax,0x4
  4060b5:	add    rax,rbp
  4060b8:	lea    rdx,[rax-0x88]
  4060bf:	mov    rax,QWORD PTR [rbp-0xd0]
  4060c6:	mov    QWORD PTR [rdx],rax
  4060c9:	mov    eax,DWORD PTR [rbp-0x98]
  4060cf:	inc    eax
  4060d1:	mov    DWORD PTR [rbp-0x98],eax
  4060d7:	cmp    DWORD PTR [rbp-0xa4],0x0
  4060de:	je     406144 <flatcc_builder_embed_buffer@@Base+0x25c>
  4060e0:	mov    rdx,QWORD PTR [rbp-0xa0]
  4060e7:	mov    eax,DWORD PTR [rbp-0xa4]
  4060ed:	add    rax,rdx
  4060f0:	mov    QWORD PTR [rbp-0xa0],rax
  4060f7:	mov    eax,DWORD PTR [rbp-0x98]
  4060fd:	cdqe   
  4060ff:	shl    rax,0x4
  406103:	add    rax,rbp
  406106:	sub    rax,0x90
  40610c:	mov    rdx,0x40d1c0
  406113:	mov    QWORD PTR [rax],rdx
  406116:	mov    edx,DWORD PTR [rbp-0x98]
  40611c:	mov    eax,DWORD PTR [rbp-0xa4]
  406122:	movsxd rdx,edx
  406125:	shl    rdx,0x4
  406129:	add    rdx,rbp
  40612c:	sub    rdx,0x88
  406133:	mov    QWORD PTR [rdx],rax
  406136:	mov    eax,DWORD PTR [rbp-0x98]
  40613c:	inc    eax
  40613e:	mov    DWORD PTR [rbp-0x98],eax
  406144:	lea    rdx,[rbp-0xa0]
  40614b:	mov    rax,QWORD PTR [rbp-0xb8]
  406152:	mov    rsi,rdx
  406155:	mov    rdi,rax
  406158:	call   405b91 <flatcc_builder_get_user_frame_ptr@@Base+0x312>
  40615d:	mov    rdi,QWORD PTR [rbp-0x8]
  406161:	xor    rdi,QWORD PTR fs:0x28
  40616a:	je     406171 <flatcc_builder_embed_buffer@@Base+0x289>
  40616c:	call   403120 <__stack_chk_fail@plt>
  406171:	leave  
  406172:	ret    

0000000000406173 <flatcc_builder_create_buffer@@Base>:
  406173:	endbr64 
  406177:	push   rbp
  406178:	mov    rbp,rsp
  40617b:	sub    rsp,0xf0
  406182:	mov    QWORD PTR [rbp-0xd8],rdi
  406189:	mov    QWORD PTR [rbp-0xe0],rsi
  406190:	mov    eax,edx
  406192:	mov    DWORD PTR [rbp-0xe8],ecx
  406198:	mov    edx,r8d
  40619b:	mov    DWORD PTR [rbp-0xf0],r9d
  4061a2:	mov    WORD PTR [rbp-0xe4],ax
  4061a9:	mov    eax,edx
  4061ab:	mov    WORD PTR [rbp-0xec],ax
  4061b2:	mov    rax,QWORD PTR fs:0x28
  4061bb:	mov    QWORD PTR [rbp-0x8],rax
  4061bf:	xor    eax,eax
  4061c1:	mov    DWORD PTR [rbp-0xb8],0x0
  4061cb:	mov    DWORD PTR [rbp-0xbc],0x0
  4061d5:	mov    eax,DWORD PTR [rbp-0xf0]
  4061db:	and    eax,0x1
  4061de:	test   eax,eax
  4061e0:	setne  al
  4061e3:	movzx  eax,al
  4061e6:	mov    DWORD PTR [rbp-0xb4],eax
  4061ec:	mov    eax,DWORD PTR [rbp-0xf0]
  4061f2:	and    eax,0x2
  4061f5:	test   eax,eax
  4061f7:	setne  al
  4061fa:	movzx  eax,al
  4061fd:	mov    DWORD PTR [rbp-0xb0],eax
  406203:	movzx  edx,WORD PTR [rbp-0xe4]
  40620a:	mov    ecx,DWORD PTR [rbp-0xb4]
  406210:	lea    rsi,[rbp-0xec]
  406217:	mov    rax,QWORD PTR [rbp-0xd8]
  40621e:	mov    rdi,rax
  406221:	call   405d28 <flatcc_builder_get_user_frame_ptr@@Base+0x4a9>
  406226:	test   eax,eax
  406228:	je     406234 <flatcc_builder_create_buffer@@Base+0xc1>
  40622a:	mov    eax,0x0
  40622f:	jmp    406596 <flatcc_builder_create_buffer@@Base+0x423>
  406234:	movzx  eax,WORD PTR [rbp-0xec]
  40623b:	movzx  edx,ax
  40623e:	mov    rax,QWORD PTR [rbp-0xd8]
  406245:	mov    esi,edx
  406247:	mov    rdi,rax
  40624a:	call   405574 <flatcc_builder_clear@@Base+0x99>
  40624f:	cmp    QWORD PTR [rbp-0xe0],0x0
  406257:	je     40628e <flatcc_builder_create_buffer@@Base+0x11b>
  406259:	mov    rax,QWORD PTR [rbp-0xe0]
  406260:	mov    eax,DWORD PTR [rax]
  406262:	mov    DWORD PTR [rbp-0xbc],eax
  406268:	mov    eax,DWORD PTR [rbp-0xbc]
  40626e:	mov    edi,eax
  406270:	call   404863 <main@@Base+0x18e>
  406275:	mov    DWORD PTR [rbp-0xbc],eax
  40627b:	mov    eax,DWORD PTR [rbp-0xbc]
  406281:	mov    edi,eax
  406283:	call   404848 <main@@Base+0x173>
  406288:	mov    DWORD PTR [rbp-0xbc],eax
  40628e:	mov    eax,DWORD PTR [rbp-0xbc]
  406294:	test   eax,eax
  406296:	je     40629f <flatcc_builder_create_buffer@@Base+0x12c>
  406298:	mov    eax,0x4
  40629d:	jmp    4062a4 <flatcc_builder_create_buffer@@Base+0x131>
  40629f:	mov    eax,0x0
  4062a4:	mov    DWORD PTR [rbp-0xb8],eax
  4062aa:	movzx  eax,WORD PTR [rbp-0xec]
  4062b1:	movzx  edx,ax
  4062b4:	cmp    DWORD PTR [rbp-0xb0],0x0
  4062bb:	je     4062c4 <flatcc_builder_create_buffer@@Base+0x151>
  4062bd:	mov    ecx,0x4
  4062c2:	jmp    4062c9 <flatcc_builder_create_buffer@@Base+0x156>
  4062c4:	mov    ecx,0x0
  4062c9:	mov    eax,DWORD PTR [rbp-0xb8]
  4062cf:	add    eax,ecx
  4062d1:	lea    ecx,[rax+0x4]
  4062d4:	mov    rax,QWORD PTR [rbp-0xd8]
  4062db:	mov    esi,ecx
  4062dd:	mov    rdi,rax
  4062e0:	call   405b47 <flatcc_builder_get_user_frame_ptr@@Base+0x2c8>
  4062e5:	mov    DWORD PTR [rbp-0xac],eax
  4062eb:	mov    QWORD PTR [rbp-0xa0],0x0
  4062f6:	mov    DWORD PTR [rbp-0x98],0x0
  406300:	cmp    DWORD PTR [rbp-0xb4],0x0
  406307:	jne    406312 <flatcc_builder_create_buffer@@Base+0x19f>
  406309:	cmp    DWORD PTR [rbp-0xb0],0x0
  406310:	je     40636e <flatcc_builder_create_buffer@@Base+0x1fb>
  406312:	mov    rax,QWORD PTR [rbp-0xa0]
  406319:	add    rax,0x4
  40631d:	mov    QWORD PTR [rbp-0xa0],rax
  406324:	mov    eax,DWORD PTR [rbp-0x98]
  40632a:	cdqe   
  40632c:	shl    rax,0x4
  406330:	add    rax,rbp
  406333:	lea    rdx,[rax-0x90]
  40633a:	lea    rax,[rbp-0xc0]
  406341:	mov    QWORD PTR [rdx],rax
  406344:	mov    eax,DWORD PTR [rbp-0x98]
  40634a:	cdqe   
  40634c:	shl    rax,0x4
  406350:	add    rax,rbp
  406353:	sub    rax,0x88
  406359:	mov    QWORD PTR [rax],0x4
  406360:	mov    eax,DWORD PTR [rbp-0x98]
  406366:	inc    eax
  406368:	mov    DWORD PTR [rbp-0x98],eax
  40636e:	mov    rax,QWORD PTR [rbp-0xa0]
  406375:	add    rax,0x4
  406379:	mov    QWORD PTR [rbp-0xa0],rax
  406380:	mov    eax,DWORD PTR [rbp-0x98]
  406386:	cdqe   
  406388:	shl    rax,0x4
  40638c:	add    rax,rbp
  40638f:	lea    rdx,[rax-0x90]
  406396:	lea    rax,[rbp-0xc4]
  40639d:	mov    QWORD PTR [rdx],rax
  4063a0:	mov    eax,DWORD PTR [rbp-0x98]
  4063a6:	cdqe   
  4063a8:	shl    rax,0x4
  4063ac:	add    rax,rbp
  4063af:	sub    rax,0x88
  4063b5:	mov    QWORD PTR [rax],0x4
  4063bc:	mov    eax,DWORD PTR [rbp-0x98]
  4063c2:	inc    eax
  4063c4:	mov    DWORD PTR [rbp-0x98],eax
  4063ca:	cmp    DWORD PTR [rbp-0xb8],0x0
  4063d1:	je     406438 <flatcc_builder_create_buffer@@Base+0x2c5>
  4063d3:	mov    rdx,QWORD PTR [rbp-0xa0]
  4063da:	mov    eax,DWORD PTR [rbp-0xb8]
  4063e0:	add    rax,rdx
  4063e3:	mov    QWORD PTR [rbp-0xa0],rax
  4063ea:	mov    eax,DWORD PTR [rbp-0x98]
  4063f0:	cdqe   
  4063f2:	shl    rax,0x4
  4063f6:	add    rax,rbp
  4063f9:	lea    rdx,[rax-0x90]
  406400:	lea    rax,[rbp-0xbc]
  406407:	mov    QWORD PTR [rdx],rax
  40640a:	mov    edx,DWORD PTR [rbp-0x98]
  406410:	mov    eax,DWORD PTR [rbp-0xb8]
  406416:	movsxd rdx,edx
  406419:	shl    rdx,0x4
  40641d:	add    rdx,rbp
  406420:	sub    rdx,0x88
  406427:	mov    QWORD PTR [rdx],rax
  40642a:	mov    eax,DWORD PTR [rbp-0x98]
  406430:	inc    eax
  406432:	mov    DWORD PTR [rbp-0x98],eax
  406438:	cmp    DWORD PTR [rbp-0xac],0x0
  40643f:	je     4064a5 <flatcc_builder_create_buffer@@Base+0x332>
  406441:	mov    rdx,QWORD PTR [rbp-0xa0]
  406448:	mov    eax,DWORD PTR [rbp-0xac]
  40644e:	add    rax,rdx
  406451:	mov    QWORD PTR [rbp-0xa0],rax
  406458:	mov    eax,DWORD PTR [rbp-0x98]
  40645e:	cdqe   
  406460:	shl    rax,0x4
  406464:	add    rax,rbp
  406467:	sub    rax,0x90
  40646d:	mov    rdx,0x40d1c0
  406474:	mov    QWORD PTR [rax],rdx
  406477:	mov    edx,DWORD PTR [rbp-0x98]
  40647d:	mov    eax,DWORD PTR [rbp-0xac]
  406483:	movsxd rdx,edx
  406486:	shl    rdx,0x4
  40648a:	add    rdx,rbp
  40648d:	sub    rdx,0x88
  406494:	mov    QWORD PTR [rdx],rax
  406497:	mov    eax,DWORD PTR [rbp-0x98]
  40649d:	inc    eax
  40649f:	mov    DWORD PTR [rbp-0x98],eax
  4064a5:	mov    rax,QWORD PTR [rbp-0xd8]
  4064ac:	mov    eax,DWORD PTR [rax+0xf0]
  4064b2:	mov    edx,eax
  4064b4:	mov    rax,QWORD PTR [rbp-0xa0]
  4064bb:	sub    edx,eax
  4064bd:	mov    eax,edx
  4064bf:	cmp    DWORD PTR [rbp-0xb4],0x0
  4064c6:	jne    4064d1 <flatcc_builder_create_buffer@@Base+0x35e>
  4064c8:	cmp    DWORD PTR [rbp-0xb0],0x0
  4064cf:	je     4064d8 <flatcc_builder_create_buffer@@Base+0x365>
  4064d1:	mov    edx,0x4
  4064d6:	jmp    4064dd <flatcc_builder_create_buffer@@Base+0x36a>
  4064d8:	mov    edx,0x0
  4064dd:	add    eax,edx
  4064df:	mov    DWORD PTR [rbp-0xa8],eax
  4064e5:	cmp    DWORD PTR [rbp-0xb4],0x0
  4064ec:	je     406510 <flatcc_builder_create_buffer@@Base+0x39d>
  4064ee:	mov    rax,QWORD PTR [rbp-0xd8]
  4064f5:	mov    eax,DWORD PTR [rax+0xf8]
  4064fb:	sub    eax,DWORD PTR [rbp-0xa8]
  406501:	mov    edi,eax
  406503:	call   404848 <main@@Base+0x173>
  406508:	mov    DWORD PTR [rbp-0xc0],eax
  40650e:	jmp    406530 <flatcc_builder_create_buffer@@Base+0x3bd>
  406510:	mov    rax,QWORD PTR [rbp-0xd8]
  406517:	mov    eax,DWORD PTR [rax+0xf4]
  40651d:	sub    eax,DWORD PTR [rbp-0xa8]
  406523:	mov    edi,eax
  406525:	call   404848 <main@@Base+0x173>
  40652a:	mov    DWORD PTR [rbp-0xc0],eax
  406530:	mov    eax,DWORD PTR [rbp-0xe8]
  406536:	sub    eax,DWORD PTR [rbp-0xa8]
  40653c:	mov    edi,eax
  40653e:	call   404848 <main@@Base+0x173>
  406543:	mov    DWORD PTR [rbp-0xc4],eax
  406549:	lea    rdx,[rbp-0xa0]
  406550:	mov    rax,QWORD PTR [rbp-0xd8]
  406557:	mov    rsi,rdx
  40655a:	mov    rdi,rax
  40655d:	call   405b91 <flatcc_builder_get_user_frame_ptr@@Base+0x312>
  406562:	mov    DWORD PTR [rbp-0xa4],eax
  406568:	cmp    DWORD PTR [rbp-0xa4],0x0
  40656f:	jne    406590 <flatcc_builder_create_buffer@@Base+0x41d>
  406571:	lea    rcx,[rip+0x7368]        # 40d8e0 <flatcc_builder_padding_base@@Base+0x720>
  406578:	mov    edx,0x304
  40657d:	lea    rsi,[rip+0x6e3c]        # 40d3c0 <flatcc_builder_padding_base@@Base+0x200>
  406584:	lea    rdi,[rip+0x6e95]        # 40d420 <flatcc_builder_padding_base@@Base+0x260>
  40658b:	call   403130 <__assert_fail@plt>
  406590:	mov    eax,DWORD PTR [rbp-0xa4]
  406596:	mov    rsi,QWORD PTR [rbp-0x8]
  40659a:	xor    rsi,QWORD PTR fs:0x28
  4065a3:	je     4065aa <flatcc_builder_create_buffer@@Base+0x437>
  4065a5:	call   403120 <__stack_chk_fail@plt>
  4065aa:	leave  
  4065ab:	ret    

00000000004065ac <flatcc_builder_create_struct@@Base>:
  4065ac:	endbr64 
  4065b0:	push   rbp
  4065b1:	mov    rbp,rsp
  4065b4:	sub    rsp,0xd0
  4065bb:	mov    QWORD PTR [rbp-0xb8],rdi
  4065c2:	mov    QWORD PTR [rbp-0xc0],rsi
  4065c9:	mov    QWORD PTR [rbp-0xc8],rdx
  4065d0:	mov    eax,ecx
  4065d2:	mov    WORD PTR [rbp-0xcc],ax
  4065d9:	mov    rax,QWORD PTR fs:0x28
  4065e2:	mov    QWORD PTR [rbp-0x8],rax
  4065e6:	xor    eax,eax
  4065e8:	cmp    WORD PTR [rbp-0xcc],0x0
  4065f0:	jne    406611 <flatcc_builder_create_struct@@Base+0x65>
  4065f2:	lea    rcx,[rip+0x7307]        # 40d900 <flatcc_builder_padding_base@@Base+0x740>
  4065f9:	mov    edx,0x30f
  4065fe:	lea    rsi,[rip+0x6dbb]        # 40d3c0 <flatcc_builder_padding_base@@Base+0x200>
  406605:	lea    rdi,[rip+0x6e73]        # 40d47f <flatcc_builder_padding_base@@Base+0x2bf>
  40660c:	call   403130 <__assert_fail@plt>
  406611:	movzx  edx,WORD PTR [rbp-0xcc]
  406618:	mov    rax,QWORD PTR [rbp-0xb8]
  40661f:	mov    esi,edx
  406621:	mov    rdi,rax
  406624:	call   405574 <flatcc_builder_clear@@Base+0x99>
  406629:	movzx  edx,WORD PTR [rbp-0xcc]
  406630:	mov    rax,QWORD PTR [rbp-0xc8]
  406637:	mov    ecx,eax
  406639:	mov    rax,QWORD PTR [rbp-0xb8]
  406640:	mov    esi,ecx
  406642:	mov    rdi,rax
  406645:	call   405b47 <flatcc_builder_get_user_frame_ptr@@Base+0x2c8>
  40664a:	mov    eax,eax
  40664c:	mov    QWORD PTR [rbp-0xa8],rax
  406653:	mov    QWORD PTR [rbp-0xa0],0x0
  40665e:	mov    DWORD PTR [rbp-0x98],0x0
  406668:	cmp    QWORD PTR [rbp-0xc8],0x0
  406670:	je     4066d8 <flatcc_builder_create_struct@@Base+0x12c>
  406672:	mov    rdx,QWORD PTR [rbp-0xa0]
  406679:	mov    rax,QWORD PTR [rbp-0xc8]
  406680:	add    rax,rdx
  406683:	mov    QWORD PTR [rbp-0xa0],rax
  40668a:	mov    eax,DWORD PTR [rbp-0x98]
  406690:	cdqe   
  406692:	shl    rax,0x4
  406696:	add    rax,rbp
  406699:	lea    rdx,[rax-0x90]
  4066a0:	mov    rax,QWORD PTR [rbp-0xc0]
  4066a7:	mov    QWORD PTR [rdx],rax
  4066aa:	mov    eax,DWORD PTR [rbp-0x98]
  4066b0:	cdqe   
  4066b2:	shl    rax,0x4
  4066b6:	add    rax,rbp
  4066b9:	lea    rdx,[rax-0x88]
  4066c0:	mov    rax,QWORD PTR [rbp-0xc8]
  4066c7:	mov    QWORD PTR [rdx],rax
  4066ca:	mov    eax,DWORD PTR [rbp-0x98]
  4066d0:	inc    eax
  4066d2:	mov    DWORD PTR [rbp-0x98],eax
  4066d8:	cmp    QWORD PTR [rbp-0xa8],0x0
  4066e0:	je     406747 <flatcc_builder_create_struct@@Base+0x19b>
  4066e2:	mov    rdx,QWORD PTR [rbp-0xa0]
  4066e9:	mov    rax,QWORD PTR [rbp-0xa8]
  4066f0:	add    rax,rdx
  4066f3:	mov    QWORD PTR [rbp-0xa0],rax
  4066fa:	mov    eax,DWORD PTR [rbp-0x98]
  406700:	cdqe   
  406702:	shl    rax,0x4
  406706:	add    rax,rbp
  406709:	sub    rax,0x90
  40670f:	mov    rdx,0x40d1c0
  406716:	mov    QWORD PTR [rax],rdx
  406719:	mov    eax,DWORD PTR [rbp-0x98]
  40671f:	cdqe   
  406721:	shl    rax,0x4
  406725:	add    rax,rbp
  406728:	lea    rdx,[rax-0x88]
  40672f:	mov    rax,QWORD PTR [rbp-0xa8]
  406736:	mov    QWORD PTR [rdx],rax
  406739:	mov    eax,DWORD PTR [rbp-0x98]
  40673f:	inc    eax
  406741:	mov    DWORD PTR [rbp-0x98],eax
  406747:	lea    rdx,[rbp-0xa0]
  40674e:	mov    rax,QWORD PTR [rbp-0xb8]
  406755:	mov    rsi,rdx
  406758:	mov    rdi,rax
  40675b:	call   405b91 <flatcc_builder_get_user_frame_ptr@@Base+0x312>
  406760:	mov    rcx,QWORD PTR [rbp-0x8]
  406764:	xor    rcx,QWORD PTR fs:0x28
  40676d:	je     406774 <flatcc_builder_create_struct@@Base+0x1c8>
  40676f:	call   403120 <__stack_chk_fail@plt>
  406774:	leave  
  406775:	ret    

0000000000406776 <flatcc_builder_start_buffer@@Base>:
  406776:	endbr64 
  40677a:	push   rbp
  40677b:	mov    rbp,rsp
  40677e:	sub    rsp,0x20
  406782:	mov    QWORD PTR [rbp-0x8],rdi
  406786:	mov    QWORD PTR [rbp-0x10],rsi
  40678a:	mov    eax,edx
  40678c:	mov    DWORD PTR [rbp-0x18],ecx
  40678f:	mov    WORD PTR [rbp-0x14],ax
  406793:	mov    rax,QWORD PTR [rbp-0x8]
  406797:	movzx  eax,WORD PTR [rax+0xe8]
  40679e:	movzx  edx,ax
  4067a1:	mov    rax,QWORD PTR [rbp-0x8]
  4067a5:	mov    esi,edx
  4067a7:	mov    rdi,rax
  4067aa:	call   4058a5 <flatcc_builder_get_user_frame_ptr@@Base+0x26>
  4067af:	test   eax,eax
  4067b1:	je     4067bd <flatcc_builder_start_buffer@@Base+0x47>
  4067b3:	mov    eax,0xffffffff
  4067b8:	jmp    4068c1 <flatcc_builder_start_buffer@@Base+0x14b>
  4067bd:	mov    rax,QWORD PTR [rbp-0x8]
  4067c1:	mov    WORD PTR [rax+0xe8],0x1
  4067ca:	mov    rax,QWORD PTR [rbp-0x8]
  4067ce:	mov    rdx,QWORD PTR [rax+0x30]
  4067d2:	mov    rax,QWORD PTR [rbp-0x8]
  4067d6:	movzx  eax,WORD PTR [rax+0xec]
  4067dd:	mov    WORD PTR [rdx+0x22],ax
  4067e1:	mov    rdx,QWORD PTR [rbp-0x8]
  4067e5:	movzx  eax,WORD PTR [rbp-0x14]
  4067e9:	mov    WORD PTR [rdx+0xec],ax
  4067f0:	mov    rax,QWORD PTR [rbp-0x8]
  4067f4:	mov    rdx,QWORD PTR [rax+0x30]
  4067f8:	mov    rax,QWORD PTR [rbp-0x8]
  4067fc:	movzx  eax,WORD PTR [rax+0x10c]
  406803:	mov    WORD PTR [rdx+0x20],ax
  406807:	mov    eax,DWORD PTR [rbp-0x18]
  40680a:	mov    edx,eax
  40680c:	mov    rax,QWORD PTR [rbp-0x8]
  406810:	mov    WORD PTR [rax+0x10c],dx
  406817:	mov    rax,QWORD PTR [rbp-0x8]
  40681b:	mov    rax,QWORD PTR [rax+0x30]
  40681f:	mov    rdx,QWORD PTR [rbp-0x8]
  406823:	mov    edx,DWORD PTR [rdx+0xf8]
  406829:	mov    DWORD PTR [rax+0x14],edx
  40682c:	mov    rax,QWORD PTR [rbp-0x8]
  406830:	mov    rax,QWORD PTR [rax+0x30]
  406834:	mov    rdx,QWORD PTR [rbp-0x8]
  406838:	mov    edx,DWORD PTR [rdx+0x100]
  40683e:	mov    DWORD PTR [rax+0x1c],edx
  406841:	mov    rax,QWORD PTR [rbp-0x8]
  406845:	mov    edx,DWORD PTR [rax+0xf0]
  40684b:	mov    rax,QWORD PTR [rbp-0x8]
  40684f:	mov    DWORD PTR [rax+0xf8],edx
  406855:	mov    rax,QWORD PTR [rbp-0x8]
  406859:	mov    eax,DWORD PTR [rax+0xfc]
  40685f:	lea    ecx,[rax+0x1]
  406862:	mov    rdx,QWORD PTR [rbp-0x8]
  406866:	mov    DWORD PTR [rdx+0xfc],ecx
  40686c:	mov    rdx,QWORD PTR [rbp-0x8]
  406870:	mov    DWORD PTR [rdx+0x100],eax
  406876:	mov    rax,QWORD PTR [rbp-0x8]
  40687a:	mov    rax,QWORD PTR [rax+0x30]
  40687e:	mov    rdx,QWORD PTR [rbp-0x8]
  406882:	mov    edx,DWORD PTR [rdx+0x110]
  406888:	mov    DWORD PTR [rax+0x10],edx
  40688b:	cmp    QWORD PTR [rbp-0x10],0x0
  406890:	je     406898 <flatcc_builder_start_buffer@@Base+0x122>
  406892:	mov    rax,QWORD PTR [rbp-0x10]
  406896:	jmp    40689f <flatcc_builder_start_buffer@@Base+0x129>
  406898:	mov    rax,0x40d1c0
  40689f:	mov    rdx,QWORD PTR [rbp-0x8]
  4068a3:	add    rdx,0x110
  4068aa:	mov    eax,DWORD PTR [rax]
  4068ac:	mov    DWORD PTR [rdx],eax
  4068ae:	mov    rax,QWORD PTR [rbp-0x8]
  4068b2:	mov    rax,QWORD PTR [rax+0x30]
  4068b6:	mov    WORD PTR [rax+0xe],0x1
  4068bc:	mov    eax,0x0
  4068c1:	leave  
  4068c2:	ret    

00000000004068c3 <flatcc_builder_end_buffer@@Base>:
  4068c3:	endbr64 
  4068c7:	push   rbp
  4068c8:	mov    rbp,rsp
  4068cb:	sub    rsp,0x20
  4068cf:	mov    QWORD PTR [rbp-0x18],rdi
  4068d3:	mov    DWORD PTR [rbp-0x1c],esi
  4068d6:	mov    rax,QWORD PTR [rbp-0x18]
  4068da:	movzx  eax,WORD PTR [rax+0x10c]
  4068e1:	movzx  eax,ax
  4068e4:	and    eax,0x2
  4068e7:	mov    DWORD PTR [rbp-0x8],eax
  4068ea:	mov    rax,QWORD PTR [rbp-0x18]
  4068ee:	mov    eax,DWORD PTR [rax+0x100]
  4068f4:	test   eax,eax
  4068f6:	setne  al
  4068f9:	movzx  eax,al
  4068fc:	or     DWORD PTR [rbp-0x8],eax
  4068ff:	mov    rax,QWORD PTR [rbp-0x18]
  406903:	mov    rax,QWORD PTR [rax+0x30]
  406907:	movzx  eax,WORD PTR [rax+0xe]
  40690b:	cmp    ax,0x1
  40690f:	je     406930 <flatcc_builder_end_buffer@@Base+0x6d>
  406911:	lea    rcx,[rip+0x7008]        # 40d920 <flatcc_builder_padding_base@@Base+0x760>
  406918:	mov    edx,0x346
  40691d:	lea    rsi,[rip+0x6a9c]        # 40d3c0 <flatcc_builder_padding_base@@Base+0x200>
  406924:	lea    rdi,[rip+0x6b65]        # 40d490 <flatcc_builder_padding_base@@Base+0x2d0>
  40692b:	call   403130 <__assert_fail@plt>
  406930:	mov    rax,QWORD PTR [rbp-0x18]
  406934:	movzx  eax,WORD PTR [rax+0xec]
  40693b:	movzx  edx,ax
  40693e:	mov    rax,QWORD PTR [rbp-0x18]
  406942:	mov    esi,edx
  406944:	mov    rdi,rax
  406947:	call   405574 <flatcc_builder_clear@@Base+0x99>
  40694c:	mov    rax,QWORD PTR [rbp-0x18]
  406950:	movzx  eax,WORD PTR [rax+0xe8]
  406957:	movzx  edi,ax
  40695a:	mov    rax,QWORD PTR [rbp-0x18]
  40695e:	movzx  eax,WORD PTR [rax+0xec]
  406965:	movzx  edx,ax
  406968:	mov    rax,QWORD PTR [rbp-0x18]
  40696c:	lea    rsi,[rax+0x110]
  406973:	mov    r8d,DWORD PTR [rbp-0x8]
  406977:	mov    ecx,DWORD PTR [rbp-0x1c]
  40697a:	mov    rax,QWORD PTR [rbp-0x18]
  40697e:	mov    r9d,r8d
  406981:	mov    r8d,edi
  406984:	mov    rdi,rax
  406987:	call   406173 <flatcc_builder_create_buffer@@Base>
  40698c:	mov    DWORD PTR [rbp-0x4],eax
  40698f:	cmp    DWORD PTR [rbp-0x4],0x0
  406993:	jne    40699c <flatcc_builder_end_buffer@@Base+0xd9>
  406995:	mov    eax,0x0
  40699a:	jmp    406a01 <flatcc_builder_end_buffer@@Base+0x13e>
  40699c:	mov    rax,QWORD PTR [rbp-0x18]
  4069a0:	mov    rax,QWORD PTR [rax+0x30]
  4069a4:	mov    edx,DWORD PTR [rax+0x14]
  4069a7:	mov    rax,QWORD PTR [rbp-0x18]
  4069ab:	mov    DWORD PTR [rax+0xf8],edx
  4069b1:	mov    rax,QWORD PTR [rbp-0x18]
  4069b5:	mov    rax,QWORD PTR [rax+0x30]
  4069b9:	mov    edx,DWORD PTR [rax+0x1c]
  4069bc:	mov    rax,QWORD PTR [rbp-0x18]
  4069c0:	mov    DWORD PTR [rax+0x100],edx
  4069c6:	mov    rax,QWORD PTR [rbp-0x18]
  4069ca:	mov    rax,QWORD PTR [rax+0x30]
  4069ce:	mov    edx,DWORD PTR [rax+0x10]
  4069d1:	mov    rax,QWORD PTR [rbp-0x18]
  4069d5:	mov    DWORD PTR [rax+0x110],edx
  4069db:	mov    rax,QWORD PTR [rbp-0x18]
  4069df:	mov    rax,QWORD PTR [rax+0x30]
  4069e3:	movzx  eax,WORD PTR [rax+0x20]
  4069e7:	mov    rdx,QWORD PTR [rbp-0x18]
  4069eb:	mov    WORD PTR [rdx+0x10c],ax
  4069f2:	mov    rax,QWORD PTR [rbp-0x18]
  4069f6:	mov    rdi,rax
  4069f9:	call   405a80 <flatcc_builder_get_user_frame_ptr@@Base+0x201>
  4069fe:	mov    eax,DWORD PTR [rbp-0x4]
  406a01:	leave  
  406a02:	ret    

0000000000406a03 <flatcc_builder_start_struct@@Base>:
  406a03:	endbr64 
  406a07:	push   rbp
  406a08:	mov    rbp,rsp
  406a0b:	sub    rsp,0x20
  406a0f:	mov    QWORD PTR [rbp-0x8],rdi
  406a13:	mov    QWORD PTR [rbp-0x10],rsi
  406a17:	mov    eax,edx
  406a19:	mov    WORD PTR [rbp-0x14],ax
  406a1d:	movzx  edx,WORD PTR [rbp-0x14]
  406a21:	mov    rax,QWORD PTR [rbp-0x8]
  406a25:	mov    esi,edx
  406a27:	mov    rdi,rax
  406a2a:	call   4058a5 <flatcc_builder_get_user_frame_ptr@@Base+0x26>
  406a2f:	test   eax,eax
  406a31:	je     406a3a <flatcc_builder_start_struct@@Base+0x37>
  406a33:	mov    eax,0x0
  406a38:	jmp    406a6d <flatcc_builder_start_struct@@Base+0x6a>
  406a3a:	mov    rax,QWORD PTR [rbp-0x8]
  406a3e:	mov    rax,QWORD PTR [rax+0x30]
  406a42:	mov    WORD PTR [rax+0xe],0x2
  406a48:	mov    rax,QWORD PTR [rbp-0x8]
  406a4c:	mov    esi,0xfffffffc
  406a51:	mov    rdi,rax
  406a54:	call   404a7b <flatcc_builder_default_alloc@@Base+0x173>
  406a59:	mov    rax,QWORD PTR [rbp-0x10]
  406a5d:	mov    edx,eax
  406a5f:	mov    rax,QWORD PTR [rbp-0x8]
  406a63:	mov    esi,edx
  406a65:	mov    rdi,rax
  406a68:	call   404b72 <flatcc_builder_default_alloc@@Base+0x26a>
  406a6d:	leave  
  406a6e:	ret    

0000000000406a6f <flatcc_builder_struct_edit@@Base>:
  406a6f:	endbr64 
  406a73:	push   rbp
  406a74:	mov    rbp,rsp
  406a77:	mov    QWORD PTR [rbp-0x8],rdi
  406a7b:	mov    rax,QWORD PTR [rbp-0x8]
  406a7f:	mov    rax,QWORD PTR [rax+0x18]
  406a83:	pop    rbp
  406a84:	ret    

0000000000406a85 <flatcc_builder_end_struct@@Base>:
  406a85:	endbr64 
  406a89:	push   rbp
  406a8a:	mov    rbp,rsp
  406a8d:	sub    rsp,0x20
  406a91:	mov    QWORD PTR [rbp-0x18],rdi
  406a95:	mov    rax,QWORD PTR [rbp-0x18]
  406a99:	mov    rax,QWORD PTR [rax+0x30]
  406a9d:	movzx  eax,WORD PTR [rax+0xe]
  406aa1:	cmp    ax,0x2
  406aa5:	je     406ac6 <flatcc_builder_end_struct@@Base+0x41>
  406aa7:	lea    rcx,[rip+0x6e92]        # 40d940 <flatcc_builder_padding_base@@Base+0x780>
  406aae:	mov    edx,0x368
  406ab3:	lea    rsi,[rip+0x6906]        # 40d3c0 <flatcc_builder_padding_base@@Base+0x200>
  406aba:	lea    rdi,[rip+0x69ff]        # 40d4c0 <flatcc_builder_padding_base@@Base+0x300>
  406ac1:	call   403130 <__assert_fail@plt>
  406ac6:	mov    rax,QWORD PTR [rbp-0x18]
  406aca:	movzx  eax,WORD PTR [rax+0xea]
  406ad1:	movzx  edx,ax
  406ad4:	mov    rax,QWORD PTR [rbp-0x18]
  406ad8:	mov    eax,DWORD PTR [rax+0x20]
  406adb:	mov    edi,eax
  406add:	mov    rax,QWORD PTR [rbp-0x18]
  406ae1:	mov    rsi,QWORD PTR [rax+0x18]
  406ae5:	mov    rax,QWORD PTR [rbp-0x18]
  406ae9:	mov    ecx,edx
  406aeb:	mov    rdx,rdi
  406aee:	mov    rdi,rax
  406af1:	call   4065ac <flatcc_builder_create_struct@@Base>
  406af6:	mov    DWORD PTR [rbp-0x4],eax
  406af9:	cmp    DWORD PTR [rbp-0x4],0x0
  406afd:	jne    406b06 <flatcc_builder_end_struct@@Base+0x81>
  406aff:	mov    eax,0x0
  406b04:	jmp    406b15 <flatcc_builder_end_struct@@Base+0x90>
  406b06:	mov    rax,QWORD PTR [rbp-0x18]
  406b0a:	mov    rdi,rax
  406b0d:	call   405a80 <flatcc_builder_get_user_frame_ptr@@Base+0x201>
  406b12:	mov    eax,DWORD PTR [rbp-0x4]
  406b15:	leave  
  406b16:	ret    
  406b17:	push   rbp
  406b18:	mov    rbp,rsp
  406b1b:	sub    rsp,0x20
  406b1f:	mov    QWORD PTR [rbp-0x18],rdi
  406b23:	mov    DWORD PTR [rbp-0x1c],esi
  406b26:	mov    DWORD PTR [rbp-0x20],edx
  406b29:	mov    rax,QWORD PTR [rbp-0x18]
  406b2d:	mov    rax,QWORD PTR [rax+0x30]
  406b31:	mov    eax,DWORD PTR [rax+0x14]
  406b34:	mov    DWORD PTR [rbp-0x8],eax
  406b37:	mov    edx,DWORD PTR [rbp-0x8]
  406b3a:	mov    eax,DWORD PTR [rbp-0x1c]
  406b3d:	add    eax,edx
  406b3f:	mov    DWORD PTR [rbp-0x4],eax
  406b42:	mov    eax,DWORD PTR [rbp-0x8]
  406b45:	cmp    eax,DWORD PTR [rbp-0x4]
  406b48:	ja     406b52 <flatcc_builder_end_struct@@Base+0xcd>
  406b4a:	mov    eax,DWORD PTR [rbp-0x4]
  406b4d:	cmp    eax,DWORD PTR [rbp-0x20]
  406b50:	jbe    406b88 <flatcc_builder_end_struct@@Base+0x103>
  406b52:	mov    eax,DWORD PTR [rbp-0x8]
  406b55:	cmp    eax,DWORD PTR [rbp-0x4]
  406b58:	ja     406b62 <flatcc_builder_end_struct@@Base+0xdd>
  406b5a:	mov    eax,DWORD PTR [rbp-0x4]
  406b5d:	cmp    eax,DWORD PTR [rbp-0x20]
  406b60:	jbe    406b81 <flatcc_builder_end_struct@@Base+0xfc>
  406b62:	lea    rcx,[rip+0x6df7]        # 40d960 <flatcc_builder_padding_base@@Base+0x7a0>
  406b69:	mov    edx,0x37c
  406b6e:	lea    rsi,[rip+0x684b]        # 40d3c0 <flatcc_builder_padding_base@@Base+0x200>
  406b75:	lea    rdi,[rip+0x6970]        # 40d4ec <flatcc_builder_padding_base@@Base+0x32c>
  406b7c:	call   403130 <__assert_fail@plt>
  406b81:	mov    eax,0xffffffff
  406b86:	jmp    406b9b <flatcc_builder_end_struct@@Base+0x116>
  406b88:	mov    rax,QWORD PTR [rbp-0x18]
  406b8c:	mov    rax,QWORD PTR [rax+0x30]
  406b90:	mov    edx,DWORD PTR [rbp-0x4]
  406b93:	mov    DWORD PTR [rax+0x14],edx
  406b96:	mov    eax,0x0
  406b9b:	leave  
  406b9c:	ret    

0000000000406b9d <flatcc_builder_extend_vector@@Base>:
  406b9d:	endbr64 
  406ba1:	push   rbp
  406ba2:	mov    rbp,rsp
  406ba5:	sub    rsp,0x10
  406ba9:	mov    QWORD PTR [rbp-0x8],rdi
  406bad:	mov    QWORD PTR [rbp-0x10],rsi
  406bb1:	mov    rax,QWORD PTR [rbp-0x8]
  406bb5:	mov    rax,QWORD PTR [rax+0x30]
  406bb9:	mov    edx,DWORD PTR [rax+0x18]
  406bbc:	mov    rax,QWORD PTR [rbp-0x10]
  406bc0:	mov    ecx,eax
  406bc2:	mov    rax,QWORD PTR [rbp-0x8]
  406bc6:	mov    esi,ecx
  406bc8:	mov    rdi,rax
  406bcb:	call   406b17 <flatcc_builder_end_struct@@Base+0x92>
  406bd0:	test   eax,eax
  406bd2:	je     406bdb <flatcc_builder_extend_vector@@Base+0x3e>
  406bd4:	mov    eax,0x0
  406bd9:	jmp    406bfb <flatcc_builder_extend_vector@@Base+0x5e>
  406bdb:	mov    rax,QWORD PTR [rbp-0x8]
  406bdf:	mov    rax,QWORD PTR [rax+0x30]
  406be3:	mov    eax,DWORD PTR [rax+0x10]
  406be6:	mov    rdx,QWORD PTR [rbp-0x10]
  406bea:	imul   edx,eax
  406bed:	mov    rax,QWORD PTR [rbp-0x8]
  406bf1:	mov    esi,edx
  406bf3:	mov    rdi,rax
  406bf6:	call   404b72 <flatcc_builder_default_alloc@@Base+0x26a>
  406bfb:	leave  
  406bfc:	ret    

0000000000406bfd <flatcc_builder_vector_push@@Base>:
  406bfd:	endbr64 
  406c01:	push   rbp
  406c02:	mov    rbp,rsp
  406c05:	sub    rsp,0x10
  406c09:	mov    QWORD PTR [rbp-0x8],rdi
  406c0d:	mov    QWORD PTR [rbp-0x10],rsi
  406c11:	mov    rax,QWORD PTR [rbp-0x8]
  406c15:	mov    rax,QWORD PTR [rax+0x30]
  406c19:	movzx  eax,WORD PTR [rax+0xe]
  406c1d:	cmp    ax,0x4
  406c21:	je     406c42 <flatcc_builder_vector_push@@Base+0x45>
  406c23:	lea    rcx,[rip+0x6d56]        # 40d980 <flatcc_builder_padding_base@@Base+0x7c0>
  406c2a:	mov    edx,0x38b
  406c2f:	lea    rsi,[rip+0x678a]        # 40d3c0 <flatcc_builder_padding_base@@Base+0x200>
  406c36:	lea    rdi,[rip+0x68cb]        # 40d508 <flatcc_builder_padding_base@@Base+0x348>
  406c3d:	call   403130 <__assert_fail@plt>
  406c42:	mov    rax,QWORD PTR [rbp-0x8]
  406c46:	mov    rax,QWORD PTR [rax+0x30]
  406c4a:	mov    edx,DWORD PTR [rax+0x14]
  406c4d:	mov    rax,QWORD PTR [rbp-0x8]
  406c51:	mov    rax,QWORD PTR [rax+0x30]
  406c55:	mov    eax,DWORD PTR [rax+0x18]
  406c58:	cmp    edx,eax
  406c5a:	jbe    406c9c <flatcc_builder_vector_push@@Base+0x9f>
  406c5c:	mov    rax,QWORD PTR [rbp-0x8]
  406c60:	mov    rax,QWORD PTR [rax+0x30]
  406c64:	mov    edx,DWORD PTR [rax+0x14]
  406c67:	mov    rax,QWORD PTR [rbp-0x8]
  406c6b:	mov    rax,QWORD PTR [rax+0x30]
  406c6f:	mov    eax,DWORD PTR [rax+0x18]
  406c72:	cmp    edx,eax
  406c74:	jbe    406c95 <flatcc_builder_vector_push@@Base+0x98>
  406c76:	lea    rcx,[rip+0x6d03]        # 40d980 <flatcc_builder_padding_base@@Base+0x7c0>
  406c7d:	mov    edx,0x38c
  406c82:	lea    rsi,[rip+0x6737]        # 40d3c0 <flatcc_builder_padding_base@@Base+0x200>
  406c89:	lea    rdi,[rip+0x68a8]        # 40d538 <flatcc_builder_padding_base@@Base+0x378>
  406c90:	call   403130 <__assert_fail@plt>
  406c95:	mov    eax,0x0
  406c9a:	jmp    406cd2 <flatcc_builder_vector_push@@Base+0xd5>
  406c9c:	mov    rax,QWORD PTR [rbp-0x8]
  406ca0:	mov    rax,QWORD PTR [rax+0x30]
  406ca4:	mov    edx,DWORD PTR [rax+0x14]
  406ca7:	mov    rax,QWORD PTR [rbp-0x8]
  406cab:	mov    rax,QWORD PTR [rax+0x30]
  406caf:	inc    edx
  406cb1:	mov    DWORD PTR [rax+0x14],edx
  406cb4:	mov    rax,QWORD PTR [rbp-0x8]
  406cb8:	mov    rax,QWORD PTR [rax+0x30]
  406cbc:	mov    edx,DWORD PTR [rax+0x10]
  406cbf:	mov    rcx,QWORD PTR [rbp-0x10]
  406cc3:	mov    rax,QWORD PTR [rbp-0x8]
  406cc7:	mov    rsi,rcx
  406cca:	mov    rdi,rax
  406ccd:	call   404c3a <flatcc_builder_default_alloc@@Base+0x332>
  406cd2:	leave  
  406cd3:	ret    

0000000000406cd4 <flatcc_builder_append_vector@@Base>:
  406cd4:	endbr64 
  406cd8:	push   rbp
  406cd9:	mov    rbp,rsp
  406cdc:	sub    rsp,0x20
  406ce0:	mov    QWORD PTR [rbp-0x8],rdi
  406ce4:	mov    QWORD PTR [rbp-0x10],rsi
  406ce8:	mov    QWORD PTR [rbp-0x18],rdx
  406cec:	mov    rax,QWORD PTR [rbp-0x8]
  406cf0:	mov    rax,QWORD PTR [rax+0x30]
  406cf4:	movzx  eax,WORD PTR [rax+0xe]
  406cf8:	cmp    ax,0x4
  406cfc:	je     406d1d <flatcc_builder_append_vector@@Base+0x49>
  406cfe:	lea    rcx,[rip+0x6c9b]        # 40d9a0 <flatcc_builder_padding_base@@Base+0x7e0>
  406d05:	mov    edx,0x393
  406d0a:	lea    rsi,[rip+0x66af]        # 40d3c0 <flatcc_builder_padding_base@@Base+0x200>
  406d11:	lea    rdi,[rip+0x67f0]        # 40d508 <flatcc_builder_padding_base@@Base+0x348>
  406d18:	call   403130 <__assert_fail@plt>
  406d1d:	mov    rax,QWORD PTR [rbp-0x8]
  406d21:	mov    rax,QWORD PTR [rax+0x30]
  406d25:	mov    edx,DWORD PTR [rax+0x18]
  406d28:	mov    rax,QWORD PTR [rbp-0x18]
  406d2c:	mov    ecx,eax
  406d2e:	mov    rax,QWORD PTR [rbp-0x8]
  406d32:	mov    esi,ecx
  406d34:	mov    rdi,rax
  406d37:	call   406b17 <flatcc_builder_end_struct@@Base+0x92>
  406d3c:	test   eax,eax
  406d3e:	je     406d47 <flatcc_builder_append_vector@@Base+0x73>
  406d40:	mov    eax,0x0
  406d45:	jmp    406d6c <flatcc_builder_append_vector@@Base+0x98>
  406d47:	mov    rax,QWORD PTR [rbp-0x8]
  406d4b:	mov    rax,QWORD PTR [rax+0x30]
  406d4f:	mov    eax,DWORD PTR [rax+0x10]
  406d52:	mov    rdx,QWORD PTR [rbp-0x18]
  406d56:	imul   edx,eax
  406d59:	mov    rcx,QWORD PTR [rbp-0x10]
  406d5d:	mov    rax,QWORD PTR [rbp-0x8]
  406d61:	mov    rsi,rcx
  406d64:	mov    rdi,rax
  406d67:	call   404c3a <flatcc_builder_default_alloc@@Base+0x332>
  406d6c:	leave  
  406d6d:	ret    

0000000000406d6e <flatcc_builder_extend_offset_vector@@Base>:
  406d6e:	endbr64 
  406d72:	push   rbp
  406d73:	mov    rbp,rsp
  406d76:	sub    rsp,0x10
  406d7a:	mov    QWORD PTR [rbp-0x8],rdi
  406d7e:	mov    QWORD PTR [rbp-0x10],rsi
  406d82:	mov    rax,QWORD PTR [rbp-0x10]
  406d86:	mov    ecx,eax
  406d88:	mov    rax,QWORD PTR [rbp-0x8]
  406d8c:	mov    edx,0x3fffffff
  406d91:	mov    esi,ecx
  406d93:	mov    rdi,rax
  406d96:	call   406b17 <flatcc_builder_end_struct@@Base+0x92>
  406d9b:	test   eax,eax
  406d9d:	je     406da6 <flatcc_builder_extend_offset_vector@@Base+0x38>
  406d9f:	mov    eax,0x0
  406da4:	jmp    406dbf <flatcc_builder_extend_offset_vector@@Base+0x51>
  406da6:	mov    rax,QWORD PTR [rbp-0x10]
  406daa:	lea    edx,[rax*4+0x0]
  406db1:	mov    rax,QWORD PTR [rbp-0x8]
  406db5:	mov    esi,edx
  406db7:	mov    rdi,rax
  406dba:	call   404b72 <flatcc_builder_default_alloc@@Base+0x26a>
  406dbf:	leave  
  406dc0:	ret    

0000000000406dc1 <flatcc_builder_offset_vector_push@@Base>:
  406dc1:	endbr64 
  406dc5:	push   rbp
  406dc6:	mov    rbp,rsp
  406dc9:	sub    rsp,0x20
  406dcd:	mov    QWORD PTR [rbp-0x18],rdi
  406dd1:	mov    DWORD PTR [rbp-0x1c],esi
  406dd4:	mov    rax,QWORD PTR [rbp-0x18]
  406dd8:	mov    rax,QWORD PTR [rax+0x30]
  406ddc:	movzx  eax,WORD PTR [rax+0xe]
  406de0:	cmp    ax,0x5
  406de4:	je     406e05 <flatcc_builder_offset_vector_push@@Base+0x44>
  406de6:	lea    rcx,[rip+0x6bd3]        # 40d9c0 <flatcc_builder_padding_base@@Base+0x800>
  406ded:	mov    edx,0x3a6
  406df2:	lea    rsi,[rip+0x65c7]        # 40d3c0 <flatcc_builder_padding_base@@Base+0x200>
  406df9:	lea    rdi,[rip+0x6778]        # 40d578 <flatcc_builder_padding_base@@Base+0x3b8>
  406e00:	call   403130 <__assert_fail@plt>
  406e05:	mov    rax,QWORD PTR [rbp-0x18]
  406e09:	mov    rax,QWORD PTR [rax+0x30]
  406e0d:	mov    eax,DWORD PTR [rax+0x14]
  406e10:	cmp    eax,0x3fffffff
  406e15:	jne    406e1e <flatcc_builder_offset_vector_push@@Base+0x5d>
  406e17:	mov    eax,0x0
  406e1c:	jmp    406e66 <flatcc_builder_offset_vector_push@@Base+0xa5>
  406e1e:	mov    rax,QWORD PTR [rbp-0x18]
  406e22:	mov    rax,QWORD PTR [rax+0x30]
  406e26:	mov    edx,DWORD PTR [rax+0x14]
  406e29:	mov    rax,QWORD PTR [rbp-0x18]
  406e2d:	mov    rax,QWORD PTR [rax+0x30]
  406e31:	inc    edx
  406e33:	mov    DWORD PTR [rax+0x14],edx
  406e36:	mov    rax,QWORD PTR [rbp-0x18]
  406e3a:	mov    esi,0x4
  406e3f:	mov    rdi,rax
  406e42:	call   404b72 <flatcc_builder_default_alloc@@Base+0x26a>
  406e47:	mov    QWORD PTR [rbp-0x8],rax
  406e4b:	cmp    QWORD PTR [rbp-0x8],0x0
  406e50:	jne    406e59 <flatcc_builder_offset_vector_push@@Base+0x98>
  406e52:	mov    eax,0x0
  406e57:	jmp    406e66 <flatcc_builder_offset_vector_push@@Base+0xa5>
  406e59:	mov    rax,QWORD PTR [rbp-0x8]
  406e5d:	mov    edx,DWORD PTR [rbp-0x1c]
  406e60:	mov    DWORD PTR [rax],edx
  406e62:	mov    rax,QWORD PTR [rbp-0x8]
  406e66:	leave  
  406e67:	ret    

0000000000406e68 <flatcc_builder_append_offset_vector@@Base>:
  406e68:	endbr64 
  406e6c:	push   rbp
  406e6d:	mov    rbp,rsp
  406e70:	sub    rsp,0x20
  406e74:	mov    QWORD PTR [rbp-0x8],rdi
  406e78:	mov    QWORD PTR [rbp-0x10],rsi
  406e7c:	mov    QWORD PTR [rbp-0x18],rdx
  406e80:	mov    rax,QWORD PTR [rbp-0x8]
  406e84:	mov    rax,QWORD PTR [rax+0x30]
  406e88:	movzx  eax,WORD PTR [rax+0xe]
  406e8c:	cmp    ax,0x5
  406e90:	je     406eb1 <flatcc_builder_append_offset_vector@@Base+0x49>
  406e92:	lea    rcx,[rip+0x6b67]        # 40da00 <flatcc_builder_padding_base@@Base+0x840>
  406e99:	mov    edx,0x3b4
  406e9e:	lea    rsi,[rip+0x651b]        # 40d3c0 <flatcc_builder_padding_base@@Base+0x200>
  406ea5:	lea    rdi,[rip+0x66cc]        # 40d578 <flatcc_builder_padding_base@@Base+0x3b8>
  406eac:	call   403130 <__assert_fail@plt>
  406eb1:	mov    rax,QWORD PTR [rbp-0x18]
  406eb5:	mov    ecx,eax
  406eb7:	mov    rax,QWORD PTR [rbp-0x8]
  406ebb:	mov    edx,0x3fffffff
  406ec0:	mov    esi,ecx
  406ec2:	mov    rdi,rax
  406ec5:	call   406b17 <flatcc_builder_end_struct@@Base+0x92>
  406eca:	test   eax,eax
  406ecc:	je     406ed5 <flatcc_builder_append_offset_vector@@Base+0x6d>
  406ece:	mov    eax,0x0
  406ed3:	jmp    406ef3 <flatcc_builder_append_offset_vector@@Base+0x8b>
  406ed5:	mov    rax,QWORD PTR [rbp-0x18]
  406ed9:	lea    edx,[rax*4+0x0]
  406ee0:	mov    rcx,QWORD PTR [rbp-0x10]
  406ee4:	mov    rax,QWORD PTR [rbp-0x8]
  406ee8:	mov    rsi,rcx
  406eeb:	mov    rdi,rax
  406eee:	call   404c3a <flatcc_builder_default_alloc@@Base+0x332>
  406ef3:	leave  
  406ef4:	ret    

0000000000406ef5 <flatcc_builder_extend_string@@Base>:
  406ef5:	endbr64 
  406ef9:	push   rbp
  406efa:	mov    rbp,rsp
  406efd:	sub    rsp,0x10
  406f01:	mov    QWORD PTR [rbp-0x8],rdi
  406f05:	mov    QWORD PTR [rbp-0x10],rsi
  406f09:	mov    rax,QWORD PTR [rbp-0x8]
  406f0d:	mov    rax,QWORD PTR [rax+0x30]
  406f11:	movzx  eax,WORD PTR [rax+0xe]
  406f15:	cmp    ax,0x6
  406f19:	je     406f3a <flatcc_builder_extend_string@@Base+0x45>
  406f1b:	lea    rcx,[rip+0x6b0e]        # 40da30 <flatcc_builder_padding_base@@Base+0x870>
  406f22:	mov    edx,0x3bd
  406f27:	lea    rsi,[rip+0x6492]        # 40d3c0 <flatcc_builder_padding_base@@Base+0x200>
  406f2e:	lea    rdi,[rip+0x667b]        # 40d5b0 <flatcc_builder_padding_base@@Base+0x3f0>
  406f35:	call   403130 <__assert_fail@plt>
  406f3a:	mov    rax,QWORD PTR [rbp-0x10]
  406f3e:	mov    ecx,eax
  406f40:	mov    rax,QWORD PTR [rbp-0x8]
  406f44:	mov    edx,0xffffffff
  406f49:	mov    esi,ecx
  406f4b:	mov    rdi,rax
  406f4e:	call   406b17 <flatcc_builder_end_struct@@Base+0x92>
  406f53:	test   eax,eax
  406f55:	je     406f5e <flatcc_builder_extend_string@@Base+0x69>
  406f57:	mov    eax,0x0
  406f5c:	jmp    406f72 <flatcc_builder_extend_string@@Base+0x7d>
  406f5e:	mov    rax,QWORD PTR [rbp-0x10]
  406f62:	mov    edx,eax
  406f64:	mov    rax,QWORD PTR [rbp-0x8]
  406f68:	mov    esi,edx
  406f6a:	mov    rdi,rax
  406f6d:	call   404b72 <flatcc_builder_default_alloc@@Base+0x26a>
  406f72:	leave  
  406f73:	ret    

0000000000406f74 <flatcc_builder_append_string@@Base>:
  406f74:	endbr64 
  406f78:	push   rbp
  406f79:	mov    rbp,rsp
  406f7c:	sub    rsp,0x20
  406f80:	mov    QWORD PTR [rbp-0x8],rdi
  406f84:	mov    QWORD PTR [rbp-0x10],rsi
  406f88:	mov    QWORD PTR [rbp-0x18],rdx
  406f8c:	mov    rax,QWORD PTR [rbp-0x8]
  406f90:	mov    rax,QWORD PTR [rax+0x30]
  406f94:	movzx  eax,WORD PTR [rax+0xe]
  406f98:	cmp    ax,0x6
  406f9c:	je     406fbd <flatcc_builder_append_string@@Base+0x49>
  406f9e:	lea    rcx,[rip+0x6aab]        # 40da50 <flatcc_builder_padding_base@@Base+0x890>
  406fa5:	mov    edx,0x3c6
  406faa:	lea    rsi,[rip+0x640f]        # 40d3c0 <flatcc_builder_padding_base@@Base+0x200>
  406fb1:	lea    rdi,[rip+0x65f8]        # 40d5b0 <flatcc_builder_padding_base@@Base+0x3f0>
  406fb8:	call   403130 <__assert_fail@plt>
  406fbd:	mov    rax,QWORD PTR [rbp-0x18]
  406fc1:	mov    ecx,eax
  406fc3:	mov    rax,QWORD PTR [rbp-0x8]
  406fc7:	mov    edx,0xffffffff
  406fcc:	mov    esi,ecx
  406fce:	mov    rdi,rax
  406fd1:	call   406b17 <flatcc_builder_end_struct@@Base+0x92>
  406fd6:	test   eax,eax
  406fd8:	je     406fe1 <flatcc_builder_append_string@@Base+0x6d>
  406fda:	mov    eax,0x0
  406fdf:	jmp    406ffa <flatcc_builder_append_string@@Base+0x86>
  406fe1:	mov    rax,QWORD PTR [rbp-0x18]
  406fe5:	mov    edx,eax
  406fe7:	mov    rcx,QWORD PTR [rbp-0x10]
  406feb:	mov    rax,QWORD PTR [rbp-0x8]
  406fef:	mov    rsi,rcx
  406ff2:	mov    rdi,rax
  406ff5:	call   404c3a <flatcc_builder_default_alloc@@Base+0x332>
  406ffa:	leave  
  406ffb:	ret    

0000000000406ffc <flatcc_builder_append_string_str@@Base>:
  406ffc:	endbr64 
  407000:	push   rbp
  407001:	mov    rbp,rsp
  407004:	sub    rsp,0x10
  407008:	mov    QWORD PTR [rbp-0x8],rdi
  40700c:	mov    QWORD PTR [rbp-0x10],rsi
  407010:	mov    rax,QWORD PTR [rbp-0x10]
  407014:	mov    rdi,rax
  407017:	call   403110 <strlen@plt>
  40701c:	mov    rdx,rax
  40701f:	mov    rcx,QWORD PTR [rbp-0x10]
  407023:	mov    rax,QWORD PTR [rbp-0x8]
  407027:	mov    rsi,rcx
  40702a:	mov    rdi,rax
  40702d:	call   406f74 <flatcc_builder_append_string@@Base>
  407032:	leave  
  407033:	ret    

0000000000407034 <flatcc_builder_append_string_strn@@Base>:
  407034:	endbr64 
  407038:	push   rbp
  407039:	mov    rbp,rsp
  40703c:	sub    rsp,0x20
  407040:	mov    QWORD PTR [rbp-0x8],rdi
  407044:	mov    QWORD PTR [rbp-0x10],rsi
  407048:	mov    QWORD PTR [rbp-0x18],rdx
  40704c:	mov    rdx,QWORD PTR [rbp-0x18]
  407050:	mov    rax,QWORD PTR [rbp-0x10]
  407054:	mov    rsi,rdx
  407057:	mov    rdi,rax
  40705a:	call   4048c8 <main@@Base+0x1f3>
  40705f:	mov    rdx,rax
  407062:	mov    rcx,QWORD PTR [rbp-0x10]
  407066:	mov    rax,QWORD PTR [rbp-0x8]
  40706a:	mov    rsi,rcx
  40706d:	mov    rdi,rax
  407070:	call   406f74 <flatcc_builder_append_string@@Base>
  407075:	leave  
  407076:	ret    

0000000000407077 <flatcc_builder_truncate_vector@@Base>:
  407077:	endbr64 
  40707b:	push   rbp
  40707c:	mov    rbp,rsp
  40707f:	sub    rsp,0x10
  407083:	mov    QWORD PTR [rbp-0x8],rdi
  407087:	mov    QWORD PTR [rbp-0x10],rsi
  40708b:	mov    rax,QWORD PTR [rbp-0x8]
  40708f:	mov    rax,QWORD PTR [rax+0x30]
  407093:	movzx  eax,WORD PTR [rax+0xe]
  407097:	cmp    ax,0x4
  40709b:	je     4070bc <flatcc_builder_truncate_vector@@Base+0x45>
  40709d:	lea    rcx,[rip+0x69cc]        # 40da70 <flatcc_builder_padding_base@@Base+0x8b0>
  4070a4:	mov    edx,0x3d9
  4070a9:	lea    rsi,[rip+0x6310]        # 40d3c0 <flatcc_builder_padding_base@@Base+0x200>
  4070b0:	lea    rdi,[rip+0x6451]        # 40d508 <flatcc_builder_padding_base@@Base+0x348>
  4070b7:	call   403130 <__assert_fail@plt>
  4070bc:	mov    rax,QWORD PTR [rbp-0x8]
  4070c0:	mov    rax,QWORD PTR [rax+0x30]
  4070c4:	mov    eax,DWORD PTR [rax+0x14]
  4070c7:	mov    eax,eax
  4070c9:	cmp    QWORD PTR [rbp-0x10],rax
  4070cd:	jbe    407108 <flatcc_builder_truncate_vector@@Base+0x91>
  4070cf:	mov    rax,QWORD PTR [rbp-0x8]
  4070d3:	mov    rax,QWORD PTR [rax+0x30]
  4070d7:	mov    eax,DWORD PTR [rax+0x14]
  4070da:	mov    eax,eax
  4070dc:	cmp    QWORD PTR [rbp-0x10],rax
  4070e0:	jbe    407101 <flatcc_builder_truncate_vector@@Base+0x8a>
  4070e2:	lea    rcx,[rip+0x6987]        # 40da70 <flatcc_builder_padding_base@@Base+0x8b0>
  4070e9:	mov    edx,0x3da
  4070ee:	lea    rsi,[rip+0x62cb]        # 40d3c0 <flatcc_builder_padding_base@@Base+0x200>
  4070f5:	lea    rdi,[rip+0x64e4]        # 40d5e0 <flatcc_builder_padding_base@@Base+0x420>
  4070fc:	call   403130 <__assert_fail@plt>
  407101:	mov    eax,0xffffffff
  407106:	jmp    40714b <flatcc_builder_truncate_vector@@Base+0xd4>
  407108:	mov    rax,QWORD PTR [rbp-0x8]
  40710c:	mov    rax,QWORD PTR [rax+0x30]
  407110:	mov    edx,DWORD PTR [rax+0x14]
  407113:	mov    rax,QWORD PTR [rbp-0x10]
  407117:	mov    ecx,eax
  407119:	mov    rax,QWORD PTR [rbp-0x8]
  40711d:	mov    rax,QWORD PTR [rax+0x30]
  407121:	sub    edx,ecx
  407123:	mov    DWORD PTR [rax+0x14],edx
  407126:	mov    rax,QWORD PTR [rbp-0x8]
  40712a:	mov    rax,QWORD PTR [rax+0x30]
  40712e:	mov    eax,DWORD PTR [rax+0x10]
  407131:	mov    rdx,QWORD PTR [rbp-0x10]
  407135:	imul   edx,eax
  407138:	mov    rax,QWORD PTR [rbp-0x8]
  40713c:	mov    esi,edx
  40713e:	mov    rdi,rax
  407141:	call   404bee <flatcc_builder_default_alloc@@Base+0x2e6>
  407146:	mov    eax,0x0
  40714b:	leave  
  40714c:	ret    

000000000040714d <flatcc_builder_truncate_offset_vector@@Base>:
  40714d:	endbr64 
  407151:	push   rbp
  407152:	mov    rbp,rsp
  407155:	sub    rsp,0x10
  407159:	mov    QWORD PTR [rbp-0x8],rdi
  40715d:	mov    QWORD PTR [rbp-0x10],rsi
  407161:	mov    rax,QWORD PTR [rbp-0x8]
  407165:	mov    rax,QWORD PTR [rax+0x30]
  407169:	movzx  eax,WORD PTR [rax+0xe]
  40716d:	cmp    ax,0x5
  407171:	je     407192 <flatcc_builder_truncate_offset_vector@@Base+0x45>
  407173:	lea    rcx,[rip+0x6926]        # 40daa0 <flatcc_builder_padding_base@@Base+0x8e0>
  40717a:	mov    edx,0x3e2
  40717f:	lea    rsi,[rip+0x623a]        # 40d3c0 <flatcc_builder_padding_base@@Base+0x200>
  407186:	lea    rdi,[rip+0x63eb]        # 40d578 <flatcc_builder_padding_base@@Base+0x3b8>
  40718d:	call   403130 <__assert_fail@plt>
  407192:	mov    rax,QWORD PTR [rbp-0x8]
  407196:	mov    rax,QWORD PTR [rax+0x30]
  40719a:	mov    eax,DWORD PTR [rax+0x14]
  40719d:	mov    rdx,QWORD PTR [rbp-0x10]
  4071a1:	cmp    eax,edx
  4071a3:	jae    4071de <flatcc_builder_truncate_offset_vector@@Base+0x91>
  4071a5:	mov    rax,QWORD PTR [rbp-0x8]
  4071a9:	mov    rax,QWORD PTR [rax+0x30]
  4071ad:	mov    eax,DWORD PTR [rax+0x14]
  4071b0:	mov    rdx,QWORD PTR [rbp-0x10]
  4071b4:	cmp    eax,edx
  4071b6:	jae    4071d7 <flatcc_builder_truncate_offset_vector@@Base+0x8a>
  4071b8:	lea    rcx,[rip+0x68e1]        # 40daa0 <flatcc_builder_padding_base@@Base+0x8e0>
  4071bf:	mov    edx,0x3e3
  4071c4:	lea    rsi,[rip+0x61f5]        # 40d3c0 <flatcc_builder_padding_base@@Base+0x200>
  4071cb:	lea    rdi,[rip+0x6436]        # 40d608 <flatcc_builder_padding_base@@Base+0x448>
  4071d2:	call   403130 <__assert_fail@plt>
  4071d7:	mov    eax,0xffffffff
  4071dc:	jmp    407221 <flatcc_builder_truncate_offset_vector@@Base+0xd4>
  4071de:	mov    rax,QWORD PTR [rbp-0x8]
  4071e2:	mov    rax,QWORD PTR [rax+0x30]
  4071e6:	mov    edx,DWORD PTR [rax+0x14]
  4071e9:	mov    rax,QWORD PTR [rbp-0x10]
  4071ed:	mov    ecx,eax
  4071ef:	mov    rax,QWORD PTR [rbp-0x8]
  4071f3:	mov    rax,QWORD PTR [rax+0x30]
  4071f7:	sub    edx,ecx
  4071f9:	mov    DWORD PTR [rax+0x14],edx
  4071fc:	mov    rax,QWORD PTR [rbp-0x8]
  407200:	mov    rax,QWORD PTR [rax+0x30]
  407204:	mov    eax,DWORD PTR [rax+0x10]
  407207:	mov    rdx,QWORD PTR [rbp-0x10]
  40720b:	imul   edx,eax
  40720e:	mov    rax,QWORD PTR [rbp-0x8]
  407212:	mov    esi,edx
  407214:	mov    rdi,rax
  407217:	call   404bee <flatcc_builder_default_alloc@@Base+0x2e6>
  40721c:	mov    eax,0x0
  407221:	leave  
  407222:	ret    

0000000000407223 <flatcc_builder_truncate_string@@Base>:
  407223:	endbr64 
  407227:	push   rbp
  407228:	mov    rbp,rsp
  40722b:	sub    rsp,0x10
  40722f:	mov    QWORD PTR [rbp-0x8],rdi
  407233:	mov    QWORD PTR [rbp-0x10],rsi
  407237:	mov    rax,QWORD PTR [rbp-0x8]
  40723b:	mov    rax,QWORD PTR [rax+0x30]
  40723f:	movzx  eax,WORD PTR [rax+0xe]
  407243:	cmp    ax,0x6
  407247:	je     407268 <flatcc_builder_truncate_string@@Base+0x45>
  407249:	lea    rcx,[rip+0x6880]        # 40dad0 <flatcc_builder_padding_base@@Base+0x910>
  407250:	mov    edx,0x3eb
  407255:	lea    rsi,[rip+0x6164]        # 40d3c0 <flatcc_builder_padding_base@@Base+0x200>
  40725c:	lea    rdi,[rip+0x634d]        # 40d5b0 <flatcc_builder_padding_base@@Base+0x3f0>
  407263:	call   403130 <__assert_fail@plt>
  407268:	mov    rax,QWORD PTR [rbp-0x8]
  40726c:	mov    rax,QWORD PTR [rax+0x30]
  407270:	mov    eax,DWORD PTR [rax+0x14]
  407273:	mov    eax,eax
  407275:	cmp    QWORD PTR [rbp-0x10],rax
  407279:	jbe    4072b4 <flatcc_builder_truncate_string@@Base+0x91>
  40727b:	mov    rax,QWORD PTR [rbp-0x8]
  40727f:	mov    rax,QWORD PTR [rax+0x30]
  407283:	mov    eax,DWORD PTR [rax+0x14]
  407286:	mov    eax,eax
  407288:	cmp    QWORD PTR [rbp-0x10],rax
  40728c:	jbe    4072ad <flatcc_builder_truncate_string@@Base+0x8a>
  40728e:	lea    rcx,[rip+0x683b]        # 40dad0 <flatcc_builder_padding_base@@Base+0x910>
  407295:	mov    edx,0x3ec
  40729a:	lea    rsi,[rip+0x611f]        # 40d3c0 <flatcc_builder_padding_base@@Base+0x200>
  4072a1:	lea    rdi,[rip+0x63a0]        # 40d648 <flatcc_builder_padding_base@@Base+0x488>
  4072a8:	call   403130 <__assert_fail@plt>
  4072ad:	mov    eax,0xffffffff
  4072b2:	jmp    4072eb <flatcc_builder_truncate_string@@Base+0xc8>
  4072b4:	mov    rax,QWORD PTR [rbp-0x8]
  4072b8:	mov    rax,QWORD PTR [rax+0x30]
  4072bc:	mov    edx,DWORD PTR [rax+0x14]
  4072bf:	mov    rax,QWORD PTR [rbp-0x10]
  4072c3:	mov    ecx,eax
  4072c5:	mov    rax,QWORD PTR [rbp-0x8]
  4072c9:	mov    rax,QWORD PTR [rax+0x30]
  4072cd:	sub    edx,ecx
  4072cf:	mov    DWORD PTR [rax+0x14],edx
  4072d2:	mov    rax,QWORD PTR [rbp-0x10]
  4072d6:	mov    edx,eax
  4072d8:	mov    rax,QWORD PTR [rbp-0x8]
  4072dc:	mov    esi,edx
  4072de:	mov    rdi,rax
  4072e1:	call   404bee <flatcc_builder_default_alloc@@Base+0x2e6>
  4072e6:	mov    eax,0x0
  4072eb:	leave  
  4072ec:	ret    

00000000004072ed <flatcc_builder_start_vector@@Base>:
  4072ed:	endbr64 
  4072f1:	push   rbp
  4072f2:	mov    rbp,rsp
  4072f5:	sub    rsp,0x20
  4072f9:	mov    QWORD PTR [rbp-0x8],rdi
  4072fd:	mov    QWORD PTR [rbp-0x10],rsi
  407301:	mov    eax,edx
  407303:	mov    QWORD PTR [rbp-0x20],rcx
  407307:	mov    WORD PTR [rbp-0x14],ax
  40730b:	lea    rax,[rbp-0x14]
  40730f:	mov    esi,0x4
  407314:	mov    rdi,rax
  407317:	call   4055a5 <flatcc_builder_clear@@Base+0xca>
  40731c:	movzx  eax,WORD PTR [rbp-0x14]
  407320:	movzx  edx,ax
  407323:	mov    rax,QWORD PTR [rbp-0x8]
  407327:	mov    esi,edx
  407329:	mov    rdi,rax
  40732c:	call   4058a5 <flatcc_builder_get_user_frame_ptr@@Base+0x26>
  407331:	test   eax,eax
  407333:	je     40733c <flatcc_builder_start_vector@@Base+0x4f>
  407335:	mov    eax,0xffffffff
  40733a:	jmp    40738d <flatcc_builder_start_vector@@Base+0xa0>
  40733c:	mov    rax,QWORD PTR [rbp-0x8]
  407340:	mov    rax,QWORD PTR [rax+0x30]
  407344:	mov    rdx,QWORD PTR [rbp-0x10]
  407348:	mov    DWORD PTR [rax+0x10],edx
  40734b:	mov    rax,QWORD PTR [rbp-0x8]
  40734f:	mov    rax,QWORD PTR [rax+0x30]
  407353:	mov    DWORD PTR [rax+0x14],0x0
  40735a:	mov    rax,QWORD PTR [rbp-0x8]
  40735e:	mov    rax,QWORD PTR [rax+0x30]
  407362:	mov    rdx,QWORD PTR [rbp-0x20]
  407366:	mov    DWORD PTR [rax+0x18],edx
  407369:	mov    rax,QWORD PTR [rbp-0x8]
  40736d:	mov    rax,QWORD PTR [rax+0x30]
  407371:	mov    WORD PTR [rax+0xe],0x4
  407377:	mov    rax,QWORD PTR [rbp-0x8]
  40737b:	mov    esi,0xfffffffc
  407380:	mov    rdi,rax
  407383:	call   404a7b <flatcc_builder_default_alloc@@Base+0x173>
  407388:	mov    eax,0x0
  40738d:	leave  
  40738e:	ret    

000000000040738f <flatcc_builder_start_offset_vector@@Base>:
  40738f:	endbr64 
  407393:	push   rbp
  407394:	mov    rbp,rsp
  407397:	sub    rsp,0x10
  40739b:	mov    QWORD PTR [rbp-0x8],rdi
  40739f:	mov    rax,QWORD PTR [rbp-0x8]
  4073a3:	mov    esi,0x4
  4073a8:	mov    rdi,rax
  4073ab:	call   4058a5 <flatcc_builder_get_user_frame_ptr@@Base+0x26>
  4073b0:	test   eax,eax
  4073b2:	je     4073bb <flatcc_builder_start_offset_vector@@Base+0x2c>
  4073b4:	mov    eax,0xffffffff
  4073b9:	jmp    4073fd <flatcc_builder_start_offset_vector@@Base+0x6e>
  4073bb:	mov    rax,QWORD PTR [rbp-0x8]
  4073bf:	mov    rax,QWORD PTR [rax+0x30]
  4073c3:	mov    DWORD PTR [rax+0x10],0x4
  4073ca:	mov    rax,QWORD PTR [rbp-0x8]
  4073ce:	mov    rax,QWORD PTR [rax+0x30]
  4073d2:	mov    DWORD PTR [rax+0x14],0x0
  4073d9:	mov    rax,QWORD PTR [rbp-0x8]
  4073dd:	mov    rax,QWORD PTR [rax+0x30]
  4073e1:	mov    WORD PTR [rax+0xe],0x5
  4073e7:	mov    rax,QWORD PTR [rbp-0x8]
  4073eb:	mov    esi,0xfffffffc
  4073f0:	mov    rdi,rax
  4073f3:	call   404a7b <flatcc_builder_default_alloc@@Base+0x173>
  4073f8:	mov    eax,0x0
  4073fd:	leave  
  4073fe:	ret    

00000000004073ff <flatcc_builder_create_offset_vector@@Base>:
  4073ff:	endbr64 
  407403:	push   rbp
  407404:	mov    rbp,rsp
  407407:	sub    rsp,0x30
  40740b:	mov    QWORD PTR [rbp-0x18],rdi
  40740f:	mov    QWORD PTR [rbp-0x20],rsi
  407413:	mov    QWORD PTR [rbp-0x28],rdx
  407417:	mov    rax,QWORD PTR [rbp-0x18]
  40741b:	mov    rdi,rax
  40741e:	call   40738f <flatcc_builder_start_offset_vector@@Base>
  407423:	test   eax,eax
  407425:	je     40742e <flatcc_builder_create_offset_vector@@Base+0x2f>
  407427:	mov    eax,0x0
  40742c:	jmp    40747e <flatcc_builder_create_offset_vector@@Base+0x7f>
  40742e:	mov    rdx,QWORD PTR [rbp-0x28]
  407432:	mov    rax,QWORD PTR [rbp-0x18]
  407436:	mov    rsi,rdx
  407439:	mov    rdi,rax
  40743c:	call   406d6e <flatcc_builder_extend_offset_vector@@Base>
  407441:	mov    QWORD PTR [rbp-0x8],rax
  407445:	cmp    QWORD PTR [rbp-0x8],0x0
  40744a:	jne    407453 <flatcc_builder_create_offset_vector@@Base+0x54>
  40744c:	mov    eax,0x0
  407451:	jmp    40747e <flatcc_builder_create_offset_vector@@Base+0x7f>
  407453:	mov    rax,QWORD PTR [rbp-0x28]
  407457:	lea    rdx,[rax*4+0x0]
  40745f:	mov    rcx,QWORD PTR [rbp-0x20]
  407463:	mov    rax,QWORD PTR [rbp-0x8]
  407467:	mov    rsi,rcx
  40746a:	mov    rdi,rax
  40746d:	call   403170 <memcpy@plt>
  407472:	mov    rax,QWORD PTR [rbp-0x18]
  407476:	mov    rdi,rax
  407479:	call   40898c <flatcc_builder_end_offset_vector@@Base>
  40747e:	leave  
  40747f:	ret    

0000000000407480 <flatcc_builder_start_string@@Base>:
  407480:	endbr64 
  407484:	push   rbp
  407485:	mov    rbp,rsp
  407488:	sub    rsp,0x10
  40748c:	mov    QWORD PTR [rbp-0x8],rdi
  407490:	mov    rax,QWORD PTR [rbp-0x8]
  407494:	mov    esi,0x1
  407499:	mov    rdi,rax
  40749c:	call   4058a5 <flatcc_builder_get_user_frame_ptr@@Base+0x26>
  4074a1:	test   eax,eax
  4074a3:	je     4074ac <flatcc_builder_start_string@@Base+0x2c>
  4074a5:	mov    eax,0xffffffff
  4074aa:	jmp    4074ee <flatcc_builder_start_string@@Base+0x6e>
  4074ac:	mov    rax,QWORD PTR [rbp-0x8]
  4074b0:	mov    rax,QWORD PTR [rax+0x30]
  4074b4:	mov    DWORD PTR [rax+0x10],0x1
  4074bb:	mov    rax,QWORD PTR [rbp-0x8]
  4074bf:	mov    rax,QWORD PTR [rax+0x30]
  4074c3:	mov    DWORD PTR [rax+0x14],0x0
  4074ca:	mov    rax,QWORD PTR [rbp-0x8]
  4074ce:	mov    rax,QWORD PTR [rax+0x30]
  4074d2:	mov    WORD PTR [rax+0xe],0x6
  4074d8:	mov    rax,QWORD PTR [rbp-0x8]
  4074dc:	mov    esi,0xfffffffc
  4074e1:	mov    rdi,rax
  4074e4:	call   404a7b <flatcc_builder_default_alloc@@Base+0x173>
  4074e9:	mov    eax,0x0
  4074ee:	leave  
  4074ef:	ret    

00000000004074f0 <flatcc_builder_reserve_table@@Base>:
  4074f0:	endbr64 
  4074f4:	push   rbp
  4074f5:	mov    rbp,rsp
  4074f8:	sub    rsp,0x10
  4074fc:	mov    QWORD PTR [rbp-0x8],rdi
  407500:	mov    DWORD PTR [rbp-0xc],esi
  407503:	cmp    DWORD PTR [rbp-0xc],0x0
  407507:	jns    407528 <flatcc_builder_reserve_table@@Base+0x38>
  407509:	lea    rcx,[rip+0x65e0]        # 40daf0 <flatcc_builder_padding_base@@Base+0x930>
  407510:	mov    edx,0x429
  407515:	lea    rsi,[rip+0x5ea4]        # 40d3c0 <flatcc_builder_padding_base@@Base+0x200>
  40751c:	lea    rdi,[rip+0x6147]        # 40d66a <flatcc_builder_padding_base@@Base+0x4aa>
  407523:	call   403130 <__assert_fail@plt>
  407528:	mov    edx,DWORD PTR [rbp-0xc]
  40752b:	mov    rax,QWORD PTR [rbp-0x8]
  40752f:	mov    esi,edx
  407531:	mov    rdi,rax
  407534:	call   404ecf <flatcc_builder_default_alloc@@Base+0x5c7>
  407539:	leave  
  40753a:	ret    

000000000040753b <flatcc_builder_start_table@@Base>:
  40753b:	endbr64 
  40753f:	push   rbp
  407540:	mov    rbp,rsp
  407543:	sub    rsp,0x10
  407547:	mov    QWORD PTR [rbp-0x8],rdi
  40754b:	mov    DWORD PTR [rbp-0xc],esi
  40754e:	mov    rax,QWORD PTR [rbp-0x8]
  407552:	mov    esi,0x4
  407557:	mov    rdi,rax
  40755a:	call   4058a5 <flatcc_builder_get_user_frame_ptr@@Base+0x26>
  40755f:	test   eax,eax
  407561:	je     40756d <flatcc_builder_start_table@@Base+0x32>
  407563:	mov    eax,0xffffffff
  407568:	jmp    407637 <flatcc_builder_start_table@@Base+0xfc>
  40756d:	mov    rax,QWORD PTR [rbp-0x8]
  407571:	mov    rax,QWORD PTR [rax+0x8]
  407575:	mov    rdx,rax
  407578:	mov    rax,QWORD PTR [rbp-0x8]
  40757c:	mov    rax,QWORD PTR [rax+0x58]
  407580:	sub    rdx,rax
  407583:	mov    rax,QWORD PTR [rbp-0x8]
  407587:	mov    rax,QWORD PTR [rax+0x30]
  40758b:	mov    DWORD PTR [rax+0x10],edx
  40758e:	mov    rax,QWORD PTR [rbp-0x8]
  407592:	mov    rax,QWORD PTR [rax]
  407595:	mov    rdx,rax
  407598:	mov    rax,QWORD PTR [rbp-0x8]
  40759c:	mov    rax,QWORD PTR [rax+0x88]
  4075a3:	sub    rdx,rax
  4075a6:	mov    rax,QWORD PTR [rbp-0x8]
  4075aa:	mov    rax,QWORD PTR [rax+0x30]
  4075ae:	mov    DWORD PTR [rax+0x14],edx
  4075b1:	mov    rax,QWORD PTR [rbp-0x8]
  4075b5:	mov    rax,QWORD PTR [rax+0x30]
  4075b9:	mov    rdx,QWORD PTR [rbp-0x8]
  4075bd:	mov    edx,DWORD PTR [rdx+0x14]
  4075c0:	mov    DWORD PTR [rax+0x18],edx
  4075c3:	mov    rax,QWORD PTR [rbp-0x8]
  4075c7:	mov    rdx,QWORD PTR [rax+0x30]
  4075cb:	mov    rax,QWORD PTR [rbp-0x8]
  4075cf:	movzx  eax,WORD PTR [rax+0x10]
  4075d3:	mov    WORD PTR [rdx+0x1c],ax
  4075d7:	mov    rax,QWORD PTR [rbp-0x8]
  4075db:	mov    DWORD PTR [rax+0x14],0x0
  4075e2:	mov    rax,QWORD PTR [rbp-0x8]
  4075e6:	mov    DWORD PTR [rax+0x14],0x2f693b52
  4075ed:	mov    rax,QWORD PTR [rbp-0x8]
  4075f1:	mov    WORD PTR [rax+0x10],0x0
  4075f7:	mov    rax,QWORD PTR [rbp-0x8]
  4075fb:	mov    rax,QWORD PTR [rax+0x30]
  4075ff:	mov    WORD PTR [rax+0xe],0x3
  407605:	mov    edx,DWORD PTR [rbp-0xc]
  407608:	mov    rax,QWORD PTR [rbp-0x8]
  40760c:	mov    esi,edx
  40760e:	mov    rdi,rax
  407611:	call   404ecf <flatcc_builder_default_alloc@@Base+0x5c7>
  407616:	test   eax,eax
  407618:	je     407621 <flatcc_builder_start_table@@Base+0xe6>
  40761a:	mov    eax,0xffffffff
  40761f:	jmp    407637 <flatcc_builder_start_table@@Base+0xfc>
  407621:	mov    rax,QWORD PTR [rbp-0x8]
  407625:	mov    esi,0xfffc
  40762a:	mov    rdi,rax
  40762d:	call   404a7b <flatcc_builder_default_alloc@@Base+0x173>
  407632:	mov    eax,0x0
  407637:	leave  
  407638:	ret    

0000000000407639 <flatcc_builder_create_vtable@@Base>:
  407639:	endbr64 
  40763d:	push   rbp
  40763e:	mov    rbp,rsp
  407641:	sub    rsp,0xd0
  407648:	mov    QWORD PTR [rbp-0xb8],rdi
  40764f:	mov    QWORD PTR [rbp-0xc0],rsi
  407656:	mov    eax,edx
  407658:	mov    WORD PTR [rbp-0xc4],ax
  40765f:	mov    rax,QWORD PTR fs:0x28
  407668:	mov    QWORD PTR [rbp-0x8],rax
  40766c:	xor    eax,eax
  40766e:	mov    QWORD PTR [rbp-0xa0],0x0
  407679:	mov    DWORD PTR [rbp-0x98],0x0
  407683:	cmp    WORD PTR [rbp-0xc4],0x0
  40768b:	je     4076f4 <flatcc_builder_create_vtable@@Base+0xbb>
  40768d:	mov    rdx,QWORD PTR [rbp-0xa0]
  407694:	movzx  eax,WORD PTR [rbp-0xc4]
  40769b:	add    rax,rdx
  40769e:	mov    QWORD PTR [rbp-0xa0],rax
  4076a5:	mov    eax,DWORD PTR [rbp-0x98]
  4076ab:	cdqe   
  4076ad:	shl    rax,0x4
  4076b1:	add    rax,rbp
  4076b4:	lea    rdx,[rax-0x90]
  4076bb:	mov    rax,QWORD PTR [rbp-0xc0]
  4076c2:	mov    QWORD PTR [rdx],rax
  4076c5:	mov    edx,DWORD PTR [rbp-0x98]
  4076cb:	movzx  eax,WORD PTR [rbp-0xc4]
  4076d2:	movsxd rdx,edx
  4076d5:	shl    rdx,0x4
  4076d9:	add    rdx,rbp
  4076dc:	sub    rdx,0x88
  4076e3:	mov    QWORD PTR [rdx],rax
  4076e6:	mov    eax,DWORD PTR [rbp-0x98]
  4076ec:	inc    eax
  4076ee:	mov    DWORD PTR [rbp-0x98],eax
  4076f4:	mov    rax,QWORD PTR [rbp-0xb8]
  4076fb:	mov    eax,DWORD PTR [rax+0x100]
  407701:	test   eax,eax
  407703:	jne    407745 <flatcc_builder_create_vtable@@Base+0x10c>
  407705:	mov    rax,QWORD PTR [rbp-0xb8]
  40770c:	mov    eax,DWORD PTR [rax+0x124]
  407712:	test   eax,eax
  407714:	jne    407745 <flatcc_builder_create_vtable@@Base+0x10c>
  407716:	lea    rdx,[rbp-0xa0]
  40771d:	mov    rax,QWORD PTR [rbp-0xb8]
  407724:	mov    rsi,rdx
  407727:	mov    rdi,rax
  40772a:	call   405c70 <flatcc_builder_get_user_frame_ptr@@Base+0x3f1>
  40772f:	mov    DWORD PTR [rbp-0xa4],eax
  407735:	cmp    DWORD PTR [rbp-0xa4],0x0
  40773c:	jne    40777a <flatcc_builder_create_vtable@@Base+0x141>
  40773e:	mov    eax,0x0
  407743:	jmp    407780 <flatcc_builder_create_vtable@@Base+0x147>
  407745:	lea    rdx,[rbp-0xa0]
  40774c:	mov    rax,QWORD PTR [rbp-0xb8]
  407753:	mov    rsi,rdx
  407756:	mov    rdi,rax
  407759:	call   405b91 <flatcc_builder_get_user_frame_ptr@@Base+0x312>
  40775e:	mov    DWORD PTR [rbp-0xa4],eax
  407764:	cmp    DWORD PTR [rbp-0xa4],0x0
  40776b:	jne    407774 <flatcc_builder_create_vtable@@Base+0x13b>
  40776d:	mov    eax,0x0
  407772:	jmp    407780 <flatcc_builder_create_vtable@@Base+0x147>
  407774:	inc    DWORD PTR [rbp-0xa4]
  40777a:	mov    eax,DWORD PTR [rbp-0xa4]
  407780:	mov    rcx,QWORD PTR [rbp-0x8]
  407784:	xor    rcx,QWORD PTR fs:0x28
  40778d:	je     407794 <flatcc_builder_create_vtable@@Base+0x15b>
  40778f:	call   403120 <__stack_chk_fail@plt>
  407794:	leave  
  407795:	ret    

0000000000407796 <flatcc_builder_create_cached_vtable@@Base>:
  407796:	endbr64 
  40779a:	push   rbp
  40779b:	mov    rbp,rsp
  40779e:	sub    rsp,0x50
  4077a2:	mov    QWORD PTR [rbp-0x38],rdi
  4077a6:	mov    QWORD PTR [rbp-0x40],rsi
  4077aa:	mov    eax,edx
  4077ac:	mov    DWORD PTR [rbp-0x48],ecx
  4077af:	mov    WORD PTR [rbp-0x44],ax
  4077b3:	mov    edx,DWORD PTR [rbp-0x48]
  4077b6:	mov    rax,QWORD PTR [rbp-0x38]
  4077ba:	mov    esi,edx
  4077bc:	mov    rdi,rax
  4077bf:	call   4050de <flatcc_builder_default_alloc@@Base+0x7d6>
  4077c4:	mov    QWORD PTR [rbp-0x18],rax
  4077c8:	cmp    QWORD PTR [rbp-0x18],0x0
  4077cd:	jne    4077d9 <flatcc_builder_create_cached_vtable@@Base+0x43>
  4077cf:	mov    eax,0x0
  4077d4:	jmp    407a7a <flatcc_builder_create_cached_vtable@@Base+0x2e4>
  4077d9:	mov    rax,QWORD PTR [rbp-0x18]
  4077dd:	mov    QWORD PTR [rbp-0x20],rax
  4077e1:	mov    rax,QWORD PTR [rbp-0x20]
  4077e5:	mov    eax,DWORD PTR [rax]
  4077e7:	mov    DWORD PTR [rbp-0x2c],eax
  4077ea:	mov    QWORD PTR [rbp-0x28],0x0
  4077f2:	jmp    4078d1 <flatcc_builder_create_cached_vtable@@Base+0x13b>
  4077f7:	mov    rax,QWORD PTR [rbp-0x38]
  4077fb:	mov    rdx,QWORD PTR [rax+0xb8]
  407802:	mov    eax,DWORD PTR [rbp-0x2c]
  407805:	add    rax,rdx
  407808:	mov    QWORD PTR [rbp-0x10],rax
  40780c:	mov    rax,QWORD PTR [rbp-0x38]
  407810:	mov    rdx,QWORD PTR [rax+0x78]
  407814:	mov    rax,QWORD PTR [rbp-0x10]
  407818:	mov    eax,DWORD PTR [rax+0x8]
  40781b:	mov    eax,eax
  40781d:	add    rax,rdx
  407820:	mov    QWORD PTR [rbp-0x8],rax
  407824:	mov    rax,QWORD PTR [rbp-0x8]
  407828:	movzx  eax,WORD PTR [rax]
  40782b:	cmp    WORD PTR [rbp-0x44],ax
  40782f:	jne    40784c <flatcc_builder_create_cached_vtable@@Base+0xb6>
  407831:	movzx  edx,WORD PTR [rbp-0x44]
  407835:	mov    rcx,QWORD PTR [rbp-0x8]
  407839:	mov    rax,QWORD PTR [rbp-0x40]
  40783d:	mov    rsi,rcx
  407840:	mov    rdi,rax
  407843:	call   403160 <memcmp@plt>
  407848:	test   eax,eax
  40784a:	je     407864 <flatcc_builder_create_cached_vtable@@Base+0xce>
  40784c:	mov    rax,QWORD PTR [rbp-0x10]
  407850:	add    rax,0xc
  407854:	mov    QWORD PTR [rbp-0x20],rax
  407858:	mov    rax,QWORD PTR [rbp-0x10]
  40785c:	mov    eax,DWORD PTR [rax+0xc]
  40785f:	mov    DWORD PTR [rbp-0x2c],eax
  407862:	jmp    4078d1 <flatcc_builder_create_cached_vtable@@Base+0x13b>
  407864:	mov    rax,QWORD PTR [rbp-0x10]
  407868:	mov    edx,DWORD PTR [rax+0x4]
  40786b:	mov    rax,QWORD PTR [rbp-0x38]
  40786f:	mov    eax,DWORD PTR [rax+0x100]
  407875:	cmp    edx,eax
  407877:	je     407899 <flatcc_builder_create_cached_vtable@@Base+0x103>
  407879:	mov    rax,QWORD PTR [rbp-0x10]
  40787d:	mov    QWORD PTR [rbp-0x28],rax
  407881:	mov    rax,QWORD PTR [rbp-0x10]
  407885:	add    rax,0xc
  407889:	mov    QWORD PTR [rbp-0x20],rax
  40788d:	mov    rax,QWORD PTR [rbp-0x10]
  407891:	mov    eax,DWORD PTR [rax+0xc]
  407894:	mov    DWORD PTR [rbp-0x2c],eax
  407897:	jmp    4078d1 <flatcc_builder_create_cached_vtable@@Base+0x13b>
  407899:	mov    rax,QWORD PTR [rbp-0x20]
  40789d:	cmp    rax,QWORD PTR [rbp-0x18]
  4078a1:	je     4078c6 <flatcc_builder_create_cached_vtable@@Base+0x130>
  4078a3:	mov    rax,QWORD PTR [rbp-0x10]
  4078a7:	mov    edx,DWORD PTR [rax+0xc]
  4078aa:	mov    rax,QWORD PTR [rbp-0x20]
  4078ae:	mov    DWORD PTR [rax],edx
  4078b0:	mov    rax,QWORD PTR [rbp-0x18]
  4078b4:	mov    edx,DWORD PTR [rax]
  4078b6:	mov    rax,QWORD PTR [rbp-0x10]
  4078ba:	mov    DWORD PTR [rax+0xc],edx
  4078bd:	mov    rax,QWORD PTR [rbp-0x18]
  4078c1:	mov    edx,DWORD PTR [rbp-0x2c]
  4078c4:	mov    DWORD PTR [rax],edx
  4078c6:	mov    rax,QWORD PTR [rbp-0x10]
  4078ca:	mov    eax,DWORD PTR [rax]
  4078cc:	jmp    407a7a <flatcc_builder_create_cached_vtable@@Base+0x2e4>
  4078d1:	cmp    DWORD PTR [rbp-0x2c],0x0
  4078d5:	jne    4077f7 <flatcc_builder_create_cached_vtable@@Base+0x61>
  4078db:	mov    rax,QWORD PTR [rbp-0x38]
  4078df:	mov    eax,DWORD PTR [rax+0xe4]
  4078e5:	mov    edx,eax
  4078e7:	mov    rax,QWORD PTR [rbp-0x38]
  4078eb:	mov    r8d,0x0
  4078f1:	mov    ecx,0x10
  4078f6:	mov    esi,0x6
  4078fb:	mov    rdi,rax
  4078fe:	call   404e1e <flatcc_builder_default_alloc@@Base+0x516>
  407903:	mov    QWORD PTR [rbp-0x10],rax
  407907:	cmp    QWORD PTR [rbp-0x10],0x0
  40790c:	jne    407918 <flatcc_builder_create_cached_vtable@@Base+0x182>
  40790e:	mov    eax,0x0
  407913:	jmp    407a7a <flatcc_builder_create_cached_vtable@@Base+0x2e4>
  407918:	mov    rax,QWORD PTR [rbp-0x38]
  40791c:	mov    eax,DWORD PTR [rax+0xe4]
  407922:	mov    DWORD PTR [rbp-0x2c],eax
  407925:	mov    rax,QWORD PTR [rbp-0x38]
  407929:	mov    eax,DWORD PTR [rax+0xe4]
  40792f:	lea    edx,[rax+0x10]
  407932:	mov    rax,QWORD PTR [rbp-0x38]
  407936:	mov    DWORD PTR [rax+0xe4],edx
  40793c:	mov    rax,QWORD PTR [rbp-0x38]
  407940:	mov    edx,DWORD PTR [rax+0x100]
  407946:	mov    rax,QWORD PTR [rbp-0x10]
  40794a:	mov    DWORD PTR [rax+0x4],edx
  40794d:	mov    rax,QWORD PTR [rbp-0x18]
  407951:	mov    edx,DWORD PTR [rax]
  407953:	mov    rax,QWORD PTR [rbp-0x10]
  407957:	mov    DWORD PTR [rax+0xc],edx
  40795a:	mov    rax,QWORD PTR [rbp-0x18]
  40795e:	mov    edx,DWORD PTR [rbp-0x2c]
  407961:	mov    DWORD PTR [rax],edx
  407963:	movzx  edx,WORD PTR [rbp-0x44]
  407967:	mov    rcx,QWORD PTR [rbp-0x40]
  40796b:	mov    rax,QWORD PTR [rbp-0x38]
  40796f:	mov    rsi,rcx
  407972:	mov    rdi,rax
  407975:	call   407639 <flatcc_builder_create_vtable@@Base>
  40797a:	mov    edx,eax
  40797c:	mov    rax,QWORD PTR [rbp-0x10]
  407980:	mov    DWORD PTR [rax],edx
  407982:	mov    rax,QWORD PTR [rbp-0x10]
  407986:	mov    eax,DWORD PTR [rax]
  407988:	test   eax,eax
  40798a:	jne    407996 <flatcc_builder_create_cached_vtable@@Base+0x200>
  40798c:	mov    eax,0x0
  407991:	jmp    407a7a <flatcc_builder_create_cached_vtable@@Base+0x2e4>
  407996:	cmp    QWORD PTR [rbp-0x28],0x0
  40799b:	je     4079b0 <flatcc_builder_create_cached_vtable@@Base+0x21a>
  40799d:	mov    rax,QWORD PTR [rbp-0x28]
  4079a1:	mov    edx,DWORD PTR [rax+0x8]
  4079a4:	mov    rax,QWORD PTR [rbp-0x10]
  4079a8:	mov    DWORD PTR [rax+0x8],edx
  4079ab:	jmp    407a74 <flatcc_builder_create_cached_vtable@@Base+0x2de>
  4079b0:	mov    rax,QWORD PTR [rbp-0x38]
  4079b4:	mov    rax,QWORD PTR [rax+0x118]
  4079bb:	test   rax,rax
  4079be:	je     4079f3 <flatcc_builder_create_cached_vtable@@Base+0x25d>
  4079c0:	mov    rax,QWORD PTR [rbp-0x38]
  4079c4:	mov    rdx,QWORD PTR [rax+0x118]
  4079cb:	mov    rax,QWORD PTR [rbp-0x38]
  4079cf:	mov    ecx,DWORD PTR [rax+0xe0]
  4079d5:	movzx  eax,WORD PTR [rbp-0x44]
  4079d9:	add    eax,ecx
  4079db:	mov    eax,eax
  4079dd:	cmp    rdx,rax
  4079e0:	jae    4079f3 <flatcc_builder_create_cached_vtable@@Base+0x25d>
  4079e2:	mov    rax,QWORD PTR [rbp-0x38]
  4079e6:	mov    rdi,rax
  4079e9:	call   405152 <flatcc_builder_flush_vtable_cache@@Base>
  4079ee:	jmp    407a74 <flatcc_builder_create_cached_vtable@@Base+0x2de>
  4079f3:	movzx  edx,WORD PTR [rbp-0x44]
  4079f7:	mov    rax,QWORD PTR [rbp-0x38]
  4079fb:	mov    eax,DWORD PTR [rax+0xe0]
  407a01:	mov    esi,eax
  407a03:	mov    rax,QWORD PTR [rbp-0x38]
  407a07:	mov    r8d,0x0
  407a0d:	mov    rcx,rdx
  407a10:	mov    rdx,rsi
  407a13:	mov    esi,0x2
  407a18:	mov    rdi,rax
  407a1b:	call   404e1e <flatcc_builder_default_alloc@@Base+0x516>
  407a20:	mov    QWORD PTR [rbp-0x8],rax
  407a24:	cmp    QWORD PTR [rbp-0x8],0x0
  407a29:	jne    407a32 <flatcc_builder_create_cached_vtable@@Base+0x29c>
  407a2b:	mov    eax,0xffffffff
  407a30:	jmp    407a7a <flatcc_builder_create_cached_vtable@@Base+0x2e4>
  407a32:	mov    rax,QWORD PTR [rbp-0x38]
  407a36:	mov    edx,DWORD PTR [rax+0xe0]
  407a3c:	mov    rax,QWORD PTR [rbp-0x10]
  407a40:	mov    DWORD PTR [rax+0x8],edx
  407a43:	mov    rax,QWORD PTR [rbp-0x38]
  407a47:	mov    edx,DWORD PTR [rax+0xe0]
  407a4d:	movzx  eax,WORD PTR [rbp-0x44]
  407a51:	add    edx,eax
  407a53:	mov    rax,QWORD PTR [rbp-0x38]
  407a57:	mov    DWORD PTR [rax+0xe0],edx
  407a5d:	movzx  edx,WORD PTR [rbp-0x44]
  407a61:	mov    rcx,QWORD PTR [rbp-0x40]
  407a65:	mov    rax,QWORD PTR [rbp-0x8]
  407a69:	mov    rsi,rcx
  407a6c:	mov    rdi,rax
  407a6f:	call   403170 <memcpy@plt>
  407a74:	mov    rax,QWORD PTR [rbp-0x10]
  407a78:	mov    eax,DWORD PTR [rax]
  407a7a:	leave  
  407a7b:	ret    

0000000000407a7c <flatcc_builder_create_table@@Base>:
  407a7c:	endbr64 
  407a80:	push   rbp
  407a81:	mov    rbp,rsp
  407a84:	sub    rsp,0x100
  407a8b:	mov    QWORD PTR [rbp-0xd8],rdi
  407a92:	mov    QWORD PTR [rbp-0xe0],rsi
  407a99:	mov    QWORD PTR [rbp-0xe8],rdx
  407aa0:	mov    eax,ecx
  407aa2:	mov    QWORD PTR [rbp-0xf8],r8
  407aa9:	mov    DWORD PTR [rbp-0xf0],r9d
  407ab0:	mov    WORD PTR [rbp-0xec],ax
  407ab7:	mov    rax,QWORD PTR fs:0x28
  407ac0:	mov    QWORD PTR [rbp-0x8],rax
  407ac4:	xor    eax,eax
  407ac6:	cmp    DWORD PTR [rbp-0xf0],0x0
  407acd:	jns    407aee <flatcc_builder_create_table@@Base+0x72>
  407acf:	lea    rcx,[rip+0x603a]        # 40db10 <flatcc_builder_padding_base@@Base+0x950>
  407ad6:	mov    edx,0x4d5
  407adb:	lea    rsi,[rip+0x58de]        # 40d3c0 <flatcc_builder_padding_base@@Base+0x200>
  407ae2:	lea    rdi,[rip+0x5b8c]        # 40d675 <flatcc_builder_padding_base@@Base+0x4b5>
  407ae9:	call   403130 <__assert_fail@plt>
  407aee:	mov    eax,DWORD PTR [rbp+0x10]
  407af1:	and    eax,0x1
  407af4:	test   eax,eax
  407af6:	jne    407b17 <flatcc_builder_create_table@@Base+0x9b>
  407af8:	lea    rcx,[rip+0x6011]        # 40db10 <flatcc_builder_padding_base@@Base+0x950>
  407aff:	mov    edx,0x4db
  407b04:	lea    rsi,[rip+0x58b5]        # 40d3c0 <flatcc_builder_padding_base@@Base+0x200>
  407b0b:	lea    rdi,[rip+0x5b75]        # 40d687 <flatcc_builder_padding_base@@Base+0x4c7>
  407b12:	call   403130 <__assert_fail@plt>
  407b17:	lea    rax,[rbp-0xec]
  407b1e:	mov    esi,0x4
  407b23:	mov    rdi,rax
  407b26:	call   4055a5 <flatcc_builder_clear@@Base+0xca>
  407b2b:	movzx  eax,WORD PTR [rbp-0xec]
  407b32:	movzx  edx,ax
  407b35:	mov    rax,QWORD PTR [rbp-0xd8]
  407b3c:	mov    esi,edx
  407b3e:	mov    rdi,rax
  407b41:	call   405574 <flatcc_builder_clear@@Base+0x99>
  407b46:	movzx  eax,WORD PTR [rbp-0xec]
  407b4d:	movzx  edx,ax
  407b50:	mov    rax,QWORD PTR [rbp-0xe8]
  407b57:	mov    ecx,eax
  407b59:	mov    rax,QWORD PTR [rbp-0xd8]
  407b60:	mov    esi,ecx
  407b62:	mov    rdi,rax
  407b65:	call   405b47 <flatcc_builder_get_user_frame_ptr@@Base+0x2c8>
  407b6a:	mov    DWORD PTR [rbp-0xbc],eax
  407b70:	mov    rax,QWORD PTR [rbp-0xd8]
  407b77:	mov    eax,DWORD PTR [rax+0xf0]
  407b7d:	mov    edx,eax
  407b7f:	mov    rax,QWORD PTR [rbp-0xe8]
  407b86:	mov    ecx,eax
  407b88:	mov    eax,DWORD PTR [rbp-0xbc]
  407b8e:	add    eax,ecx
  407b90:	sub    edx,eax
  407b92:	mov    eax,edx
  407b94:	sub    eax,0x4
  407b97:	mov    DWORD PTR [rbp-0xb8],eax
  407b9d:	mov    eax,DWORD PTR [rbp+0x10]
  407ba0:	dec    eax
  407ba2:	mov    DWORD PTR [rbp-0xb4],eax
  407ba8:	mov    eax,DWORD PTR [rbp-0xb8]
  407bae:	sub    eax,DWORD PTR [rbp-0xb4]
  407bb4:	mov    DWORD PTR [rbp-0xb0],eax
  407bba:	mov    eax,DWORD PTR [rbp-0xb8]
  407bc0:	sub    eax,DWORD PTR [rbp-0xb0]
  407bc6:	cmp    DWORD PTR [rbp-0xb4],eax
  407bcc:	je     407bd8 <flatcc_builder_create_table@@Base+0x15c>
  407bce:	mov    eax,0xffffffff
  407bd3:	jmp    407df8 <flatcc_builder_create_table@@Base+0x37c>
  407bd8:	mov    eax,DWORD PTR [rbp-0xb0]
  407bde:	mov    edi,eax
  407be0:	call   404848 <main@@Base+0x173>
  407be5:	mov    DWORD PTR [rbp-0xc4],eax
  407beb:	mov    DWORD PTR [rbp-0xc0],0x0
  407bf5:	jmp    407c7f <flatcc_builder_create_table@@Base+0x203>
  407bfa:	mov    eax,DWORD PTR [rbp-0xc0]
  407c00:	cdqe   
  407c02:	lea    rdx,[rax+rax*1]
  407c06:	mov    rax,QWORD PTR [rbp-0xf8]
  407c0d:	add    rax,rdx
  407c10:	movzx  eax,WORD PTR [rax]
  407c13:	movzx  edx,ax
  407c16:	mov    rax,QWORD PTR [rbp-0xe0]
  407c1d:	add    rax,rdx
  407c20:	mov    QWORD PTR [rbp-0xa8],rax
  407c27:	mov    rax,QWORD PTR [rbp-0xa8]
  407c2e:	mov    eax,DWORD PTR [rax]
  407c30:	sub    eax,DWORD PTR [rbp-0xb8]
  407c36:	mov    edx,eax
  407c38:	mov    eax,DWORD PTR [rbp-0xc0]
  407c3e:	cdqe   
  407c40:	lea    rcx,[rax+rax*1]
  407c44:	mov    rax,QWORD PTR [rbp-0xf8]
  407c4b:	add    rax,rcx
  407c4e:	movzx  eax,WORD PTR [rax]
  407c51:	movzx  eax,ax
  407c54:	sub    edx,eax
  407c56:	mov    eax,edx
  407c58:	sub    eax,0x4
  407c5b:	mov    DWORD PTR [rbp-0xac],eax
  407c61:	mov    eax,DWORD PTR [rbp-0xac]
  407c67:	mov    edi,eax
  407c69:	call   404848 <main@@Base+0x173>
  407c6e:	mov    edx,eax
  407c70:	mov    rax,QWORD PTR [rbp-0xa8]
  407c77:	mov    DWORD PTR [rax],edx
  407c79:	inc    DWORD PTR [rbp-0xc0]
  407c7f:	mov    eax,DWORD PTR [rbp-0xc0]
  407c85:	cmp    eax,DWORD PTR [rbp-0xf0]
  407c8b:	jl     407bfa <flatcc_builder_create_table@@Base+0x17e>
  407c91:	mov    QWORD PTR [rbp-0xa0],0x0
  407c9c:	mov    DWORD PTR [rbp-0x98],0x0
  407ca6:	mov    rax,QWORD PTR [rbp-0xa0]
  407cad:	add    rax,0x4
  407cb1:	mov    QWORD PTR [rbp-0xa0],rax
  407cb8:	mov    eax,DWORD PTR [rbp-0x98]
  407cbe:	cdqe   
  407cc0:	shl    rax,0x4
  407cc4:	add    rax,rbp
  407cc7:	lea    rdx,[rax-0x90]
  407cce:	lea    rax,[rbp-0xc4]
  407cd5:	mov    QWORD PTR [rdx],rax
  407cd8:	mov    eax,DWORD PTR [rbp-0x98]
  407cde:	cdqe   
  407ce0:	shl    rax,0x4
  407ce4:	add    rax,rbp
  407ce7:	sub    rax,0x88
  407ced:	mov    QWORD PTR [rax],0x4
  407cf4:	mov    eax,DWORD PTR [rbp-0x98]
  407cfa:	inc    eax
  407cfc:	mov    DWORD PTR [rbp-0x98],eax
  407d02:	cmp    QWORD PTR [rbp-0xe8],0x0
  407d0a:	je     407d72 <flatcc_builder_create_table@@Base+0x2f6>
  407d0c:	mov    rdx,QWORD PTR [rbp-0xa0]
  407d13:	mov    rax,QWORD PTR [rbp-0xe8]
  407d1a:	add    rax,rdx
  407d1d:	mov    QWORD PTR [rbp-0xa0],rax
  407d24:	mov    eax,DWORD PTR [rbp-0x98]
  407d2a:	cdqe   
  407d2c:	shl    rax,0x4
  407d30:	add    rax,rbp
  407d33:	lea    rdx,[rax-0x90]
  407d3a:	mov    rax,QWORD PTR [rbp-0xe0]
  407d41:	mov    QWORD PTR [rdx],rax
  407d44:	mov    eax,DWORD PTR [rbp-0x98]
  407d4a:	cdqe   
  407d4c:	shl    rax,0x4
  407d50:	add    rax,rbp
  407d53:	lea    rdx,[rax-0x88]
  407d5a:	mov    rax,QWORD PTR [rbp-0xe8]
  407d61:	mov    QWORD PTR [rdx],rax
  407d64:	mov    eax,DWORD PTR [rbp-0x98]
  407d6a:	inc    eax
  407d6c:	mov    DWORD PTR [rbp-0x98],eax
  407d72:	cmp    DWORD PTR [rbp-0xbc],0x0
  407d79:	je     407ddf <flatcc_builder_create_table@@Base+0x363>
  407d7b:	mov    rdx,QWORD PTR [rbp-0xa0]
  407d82:	mov    eax,DWORD PTR [rbp-0xbc]
  407d88:	add    rax,rdx
  407d8b:	mov    QWORD PTR [rbp-0xa0],rax
  407d92:	mov    eax,DWORD PTR [rbp-0x98]
  407d98:	cdqe   
  407d9a:	shl    rax,0x4
  407d9e:	add    rax,rbp
  407da1:	sub    rax,0x90
  407da7:	mov    rdx,0x40d1c0
  407dae:	mov    QWORD PTR [rax],rdx
  407db1:	mov    edx,DWORD PTR [rbp-0x98]
  407db7:	mov    eax,DWORD PTR [rbp-0xbc]
  407dbd:	movsxd rdx,edx
  407dc0:	shl    rdx,0x4
  407dc4:	add    rdx,rbp
  407dc7:	sub    rdx,0x88
  407dce:	mov    QWORD PTR [rdx],rax
  407dd1:	mov    eax,DWORD PTR [rbp-0x98]
  407dd7:	inc    eax
  407dd9:	mov    DWORD PTR [rbp-0x98],eax
  407ddf:	lea    rdx,[rbp-0xa0]
  407de6:	mov    rax,QWORD PTR [rbp-0xd8]
  407ded:	mov    rsi,rdx
  407df0:	mov    rdi,rax
  407df3:	call   405b91 <flatcc_builder_get_user_frame_ptr@@Base+0x312>
  407df8:	mov    rsi,QWORD PTR [rbp-0x8]
  407dfc:	xor    rsi,QWORD PTR fs:0x28
  407e05:	je     407e0c <flatcc_builder_create_table@@Base+0x390>
  407e07:	call   403120 <__stack_chk_fail@plt>
  407e0c:	leave  
  407e0d:	ret    

0000000000407e0e <flatcc_builder_check_required_field@@Base>:
  407e0e:	endbr64 
  407e12:	push   rbp
  407e13:	mov    rbp,rsp
  407e16:	sub    rsp,0x10
  407e1a:	mov    QWORD PTR [rbp-0x8],rdi
  407e1e:	mov    eax,esi
  407e20:	mov    WORD PTR [rbp-0xc],ax
  407e24:	mov    rax,QWORD PTR [rbp-0x8]
  407e28:	mov    rax,QWORD PTR [rax+0x30]
  407e2c:	movzx  eax,WORD PTR [rax+0xe]
  407e30:	cmp    ax,0x3
  407e34:	je     407e55 <flatcc_builder_check_required_field@@Base+0x47>
  407e36:	lea    rcx,[rip+0x5d03]        # 40db40 <flatcc_builder_padding_base@@Base+0x980>
  407e3d:	mov    edx,0x4f8
  407e42:	lea    rsi,[rip+0x5577]        # 40d3c0 <flatcc_builder_padding_base@@Base+0x200>
  407e49:	lea    rdi,[rip+0x5848]        # 40d698 <flatcc_builder_padding_base@@Base+0x4d8>
  407e50:	call   403130 <__assert_fail@plt>
  407e55:	mov    rax,QWORD PTR [rbp-0x8]
  407e59:	movzx  eax,WORD PTR [rax+0x10]
  407e5d:	cmp    WORD PTR [rbp-0xc],ax
  407e61:	jae    407e84 <flatcc_builder_check_required_field@@Base+0x76>
  407e63:	mov    rax,QWORD PTR [rbp-0x8]
  407e67:	mov    rax,QWORD PTR [rax+0x8]
  407e6b:	movzx  edx,WORD PTR [rbp-0xc]
  407e6f:	add    rdx,rdx
  407e72:	add    rax,rdx
  407e75:	movzx  eax,WORD PTR [rax]
  407e78:	test   ax,ax
  407e7b:	je     407e84 <flatcc_builder_check_required_field@@Base+0x76>
  407e7d:	mov    eax,0x1
  407e82:	jmp    407e89 <flatcc_builder_check_required_field@@Base+0x7b>
  407e84:	mov    eax,0x0
  407e89:	leave  
  407e8a:	ret    

0000000000407e8b <flatcc_builder_check_union_field@@Base>:
  407e8b:	endbr64 
  407e8f:	push   rbp
  407e90:	mov    rbp,rsp
  407e93:	sub    rsp,0x10
  407e97:	mov    QWORD PTR [rbp-0x8],rdi
  407e9b:	mov    eax,esi
  407e9d:	mov    WORD PTR [rbp-0xc],ax
  407ea1:	mov    rax,QWORD PTR [rbp-0x8]
  407ea5:	mov    rax,QWORD PTR [rax+0x30]
  407ea9:	movzx  eax,WORD PTR [rax+0xe]
  407ead:	cmp    ax,0x3
  407eb1:	je     407ed2 <flatcc_builder_check_union_field@@Base+0x47>
  407eb3:	lea    rcx,[rip+0x5cc6]        # 40db80 <flatcc_builder_padding_base@@Base+0x9c0>
  407eba:	mov    edx,0x4ff
  407ebf:	lea    rsi,[rip+0x54fa]        # 40d3c0 <flatcc_builder_padding_base@@Base+0x200>
  407ec6:	lea    rdi,[rip+0x57cb]        # 40d698 <flatcc_builder_padding_base@@Base+0x4d8>
  407ecd:	call   403130 <__assert_fail@plt>
  407ed2:	cmp    WORD PTR [rbp-0xc],0x0
  407ed7:	je     407ee7 <flatcc_builder_check_union_field@@Base+0x5c>
  407ed9:	mov    rax,QWORD PTR [rbp-0x8]
  407edd:	movzx  eax,WORD PTR [rax+0x10]
  407ee1:	cmp    WORD PTR [rbp-0xc],ax
  407ee5:	jb     407ef1 <flatcc_builder_check_union_field@@Base+0x66>
  407ee7:	mov    eax,0x0
  407eec:	jmp    407f9b <flatcc_builder_check_union_field@@Base+0x110>
  407ef1:	mov    rax,QWORD PTR [rbp-0x8]
  407ef5:	mov    rax,QWORD PTR [rax+0x8]
  407ef9:	movzx  edx,WORD PTR [rbp-0xc]
  407efd:	add    rdx,rdx
  407f00:	sub    rdx,0x2
  407f04:	add    rax,rdx
  407f07:	movzx  eax,WORD PTR [rax]
  407f0a:	test   ax,ax
  407f0d:	jne    407f2f <flatcc_builder_check_union_field@@Base+0xa4>
  407f0f:	mov    rax,QWORD PTR [rbp-0x8]
  407f13:	mov    rax,QWORD PTR [rax+0x8]
  407f17:	movzx  edx,WORD PTR [rbp-0xc]
  407f1b:	add    rdx,rdx
  407f1e:	add    rax,rdx
  407f21:	movzx  eax,WORD PTR [rax]
  407f24:	test   ax,ax
  407f27:	sete   al
  407f2a:	movzx  eax,al
  407f2d:	jmp    407f9b <flatcc_builder_check_union_field@@Base+0x110>
  407f2f:	mov    rax,QWORD PTR [rbp-0x8]
  407f33:	mov    rdx,QWORD PTR [rax+0x18]
  407f37:	mov    rax,QWORD PTR [rbp-0x8]
  407f3b:	mov    rax,QWORD PTR [rax+0x8]
  407f3f:	movzx  ecx,WORD PTR [rbp-0xc]
  407f43:	add    rcx,rcx
  407f46:	sub    rcx,0x2
  407f4a:	add    rax,rcx
  407f4d:	movzx  eax,WORD PTR [rax]
  407f50:	movzx  eax,ax
  407f53:	add    rax,rdx
  407f56:	movzx  eax,BYTE PTR [rax]
  407f59:	test   al,al
  407f5b:	je     407f7d <flatcc_builder_check_union_field@@Base+0xf2>
  407f5d:	mov    rax,QWORD PTR [rbp-0x8]
  407f61:	mov    rax,QWORD PTR [rax+0x8]
  407f65:	movzx  edx,WORD PTR [rbp-0xc]
  407f69:	add    rdx,rdx
  407f6c:	add    rax,rdx
  407f6f:	movzx  eax,WORD PTR [rax]
  407f72:	test   ax,ax
  407f75:	setne  al
  407f78:	movzx  eax,al
  407f7b:	jmp    407f9b <flatcc_builder_check_union_field@@Base+0x110>
  407f7d:	mov    rax,QWORD PTR [rbp-0x8]
  407f81:	mov    rax,QWORD PTR [rax+0x8]
  407f85:	movzx  edx,WORD PTR [rbp-0xc]
  407f89:	add    rdx,rdx
  407f8c:	add    rax,rdx
  407f8f:	movzx  eax,WORD PTR [rax]
  407f92:	test   ax,ax
  407f95:	sete   al
  407f98:	movzx  eax,al
  407f9b:	leave  
  407f9c:	ret    

0000000000407f9d <flatcc_builder_check_required@@Base>:
  407f9d:	endbr64 
  407fa1:	push   rbp
  407fa2:	mov    rbp,rsp
  407fa5:	sub    rsp,0x30
  407fa9:	mov    QWORD PTR [rbp-0x18],rdi
  407fad:	mov    QWORD PTR [rbp-0x20],rsi
  407fb1:	mov    DWORD PTR [rbp-0x24],edx
  407fb4:	mov    rax,QWORD PTR [rbp-0x18]
  407fb8:	mov    rax,QWORD PTR [rax+0x30]
  407fbc:	movzx  eax,WORD PTR [rax+0xe]
  407fc0:	cmp    ax,0x3
  407fc4:	je     407fe5 <flatcc_builder_check_required@@Base+0x48>
  407fc6:	lea    rcx,[rip+0x5be3]        # 40dbb0 <flatcc_builder_padding_base@@Base+0x9f0>
  407fcd:	mov    edx,0x511
  407fd2:	lea    rsi,[rip+0x53e7]        # 40d3c0 <flatcc_builder_padding_base@@Base+0x200>
  407fd9:	lea    rdi,[rip+0x56b8]        # 40d698 <flatcc_builder_padding_base@@Base+0x4d8>
  407fe0:	call   403130 <__assert_fail@plt>
  407fe5:	mov    rax,QWORD PTR [rbp-0x18]
  407fe9:	movzx  eax,WORD PTR [rax+0x10]
  407fed:	movzx  eax,ax
  407ff0:	cmp    DWORD PTR [rbp-0x24],eax
  407ff3:	jle    407ffc <flatcc_builder_check_required@@Base+0x5f>
  407ff5:	mov    eax,0x0
  407ffa:	jmp    408048 <flatcc_builder_check_required@@Base+0xab>
  407ffc:	mov    DWORD PTR [rbp-0x4],0x0
  408003:	jmp    40803b <flatcc_builder_check_required@@Base+0x9e>
  408005:	mov    rax,QWORD PTR [rbp-0x18]
  408009:	mov    rdx,QWORD PTR [rax+0x8]
  40800d:	mov    eax,DWORD PTR [rbp-0x4]
  408010:	cdqe   
  408012:	lea    rcx,[rax+rax*1]
  408016:	mov    rax,QWORD PTR [rbp-0x20]
  40801a:	add    rax,rcx
  40801d:	movzx  eax,WORD PTR [rax]
  408020:	movzx  eax,ax
  408023:	add    rax,rax
  408026:	add    rax,rdx
  408029:	movzx  eax,WORD PTR [rax]
  40802c:	test   ax,ax
  40802f:	jne    408038 <flatcc_builder_check_required@@Base+0x9b>
  408031:	mov    eax,0x0
  408036:	jmp    408048 <flatcc_builder_check_required@@Base+0xab>
  408038:	inc    DWORD PTR [rbp-0x4]
  40803b:	mov    eax,DWORD PTR [rbp-0x4]
  40803e:	cmp    eax,DWORD PTR [rbp-0x24]
  408041:	jl     408005 <flatcc_builder_check_required@@Base+0x68>
  408043:	mov    eax,0x1
  408048:	leave  
  408049:	ret    

000000000040804a <flatcc_builder_end_table@@Base>:
  40804a:	endbr64 
  40804e:	push   rbp
  40804f:	mov    rbp,rsp
  408052:	sub    rsp,0x30
  408056:	mov    QWORD PTR [rbp-0x28],rdi
  40805a:	mov    rax,QWORD PTR [rbp-0x28]
  40805e:	mov    rax,QWORD PTR [rax+0x30]
  408062:	movzx  eax,WORD PTR [rax+0xe]
  408066:	cmp    ax,0x3
  40806a:	je     40808b <flatcc_builder_end_table@@Base+0x41>
  40806c:	lea    rcx,[rip+0x5b5d]        # 40dbd0 <flatcc_builder_padding_base@@Base+0xa10>
  408073:	mov    edx,0x525
  408078:	lea    rsi,[rip+0x5341]        # 40d3c0 <flatcc_builder_padding_base@@Base+0x200>
  40807f:	lea    rdi,[rip+0x5612]        # 40d698 <flatcc_builder_padding_base@@Base+0x4d8>
  408086:	call   403130 <__assert_fail@plt>
  40808b:	mov    rax,QWORD PTR [rbp-0x28]
  40808f:	mov    rax,QWORD PTR [rax+0x8]
  408093:	sub    rax,0x4
  408097:	mov    QWORD PTR [rbp-0x10],rax
  40809b:	mov    rax,QWORD PTR [rbp-0x28]
  40809f:	movzx  eax,WORD PTR [rax+0x10]
  4080a3:	movzx  eax,ax
  4080a6:	add    eax,0x2
  4080a9:	cdqe   
  4080ab:	add    eax,eax
  4080ad:	mov    WORD PTR [rbp-0x1e],ax
  4080b1:	mov    rdx,QWORD PTR [rbp-0x10]
  4080b5:	movzx  eax,WORD PTR [rbp-0x1e]
  4080b9:	mov    WORD PTR [rdx],ax
  4080bc:	mov    rax,QWORD PTR [rbp-0x28]
  4080c0:	mov    eax,DWORD PTR [rax+0x20]
  4080c3:	mov    ecx,eax
  4080c5:	mov    rax,QWORD PTR [rbp-0x10]
  4080c9:	lea    rdx,[rax+0x2]
  4080cd:	lea    eax,[rcx+0x4]
  4080d0:	mov    WORD PTR [rdx],ax
  4080d3:	mov    rax,QWORD PTR [rbp-0x10]
  4080d7:	movzx  eax,WORD PTR [rax]
  4080da:	movzx  edx,ax
  4080dd:	mov    rax,QWORD PTR [rbp-0x28]
  4080e1:	mov    eax,DWORD PTR [rax+0x14]
  4080e4:	xor    eax,edx
  4080e6:	imul   edx,eax,0x9e3779b1
  4080ec:	mov    rax,QWORD PTR [rbp-0x10]
  4080f0:	add    rax,0x2
  4080f4:	movzx  eax,WORD PTR [rax]
  4080f7:	movzx  eax,ax
  4080fa:	xor    eax,edx
  4080fc:	imul   edx,eax,0x9e3779b1
  408102:	mov    rax,QWORD PTR [rbp-0x28]
  408106:	mov    DWORD PTR [rax+0x14],edx
  408109:	mov    rax,QWORD PTR [rbp-0x28]
  40810d:	mov    ecx,DWORD PTR [rax+0x14]
  408110:	movzx  edx,WORD PTR [rbp-0x1e]
  408114:	mov    rsi,QWORD PTR [rbp-0x10]
  408118:	mov    rax,QWORD PTR [rbp-0x28]
  40811c:	mov    rdi,rax
  40811f:	call   407796 <flatcc_builder_create_cached_vtable@@Base>
  408124:	mov    DWORD PTR [rbp-0x1c],eax
  408127:	cmp    DWORD PTR [rbp-0x1c],0x0
  40812b:	jne    408137 <flatcc_builder_end_table@@Base+0xed>
  40812d:	mov    eax,0x0
  408132:	jmp    40824e <flatcc_builder_end_table@@Base+0x204>
  408137:	movzx  edx,WORD PTR [rbp-0x1e]
  40813b:	mov    rax,QWORD PTR [rbp-0x10]
  40813f:	mov    esi,0x0
  408144:	mov    rdi,rax
  408147:	call   403140 <memset@plt>
  40814c:	mov    rax,QWORD PTR [rbp-0x28]
  408150:	mov    rdx,QWORD PTR [rax+0x88]
  408157:	mov    rax,QWORD PTR [rbp-0x28]
  40815b:	mov    rax,QWORD PTR [rax+0x30]
  40815f:	mov    eax,DWORD PTR [rax+0x14]
  408162:	mov    eax,eax
  408164:	add    rax,rdx
  408167:	mov    QWORD PTR [rbp-0x8],rax
  40816b:	mov    rax,QWORD PTR [rbp-0x28]
  40816f:	mov    rax,QWORD PTR [rax]
  408172:	sub    rax,QWORD PTR [rbp-0x8]
  408176:	sar    rax,1
  408179:	mov    DWORD PTR [rbp-0x18],eax
  40817c:	mov    rax,QWORD PTR [rbp-0x28]
  408180:	movzx  eax,WORD PTR [rax+0xea]
  408187:	movzx  edx,ax
  40818a:	mov    rax,QWORD PTR [rbp-0x28]
  40818e:	mov    eax,DWORD PTR [rax+0x20]
  408191:	mov    r10d,eax
  408194:	mov    rax,QWORD PTR [rbp-0x28]
  408198:	mov    rsi,QWORD PTR [rax+0x18]
  40819c:	mov    r8d,DWORD PTR [rbp-0x18]
  4081a0:	mov    rdi,QWORD PTR [rbp-0x8]
  4081a4:	mov    rax,QWORD PTR [rbp-0x28]
  4081a8:	sub    rsp,0x8
  4081ac:	mov    ecx,DWORD PTR [rbp-0x1c]
  4081af:	push   rcx
  4081b0:	mov    r9d,r8d
  4081b3:	mov    r8,rdi
  4081b6:	mov    ecx,edx
  4081b8:	mov    rdx,r10
  4081bb:	mov    rdi,rax
  4081be:	call   407a7c <flatcc_builder_create_table@@Base>
  4081c3:	add    rsp,0x10
  4081c7:	mov    DWORD PTR [rbp-0x14],eax
  4081ca:	cmp    DWORD PTR [rbp-0x14],0x0
  4081ce:	jne    4081d7 <flatcc_builder_end_table@@Base+0x18d>
  4081d0:	mov    eax,0x0
  4081d5:	jmp    40824e <flatcc_builder_end_table@@Base+0x204>
  4081d7:	mov    rax,QWORD PTR [rbp-0x28]
  4081db:	mov    rax,QWORD PTR [rax+0x30]
  4081df:	mov    edx,DWORD PTR [rax+0x18]
  4081e2:	mov    rax,QWORD PTR [rbp-0x28]
  4081e6:	mov    DWORD PTR [rax+0x14],edx
  4081e9:	mov    rax,QWORD PTR [rbp-0x28]
  4081ed:	mov    rax,QWORD PTR [rax+0x30]
  4081f1:	movzx  eax,WORD PTR [rax+0x1c]
  4081f5:	mov    rdx,QWORD PTR [rbp-0x28]
  4081f9:	mov    WORD PTR [rdx+0x10],ax
  4081fd:	mov    rax,QWORD PTR [rbp-0x28]
  408201:	mov    rdx,QWORD PTR [rax+0x58]
  408205:	mov    rax,QWORD PTR [rbp-0x28]
  408209:	mov    rax,QWORD PTR [rax+0x30]
  40820d:	mov    eax,DWORD PTR [rax+0x10]
  408210:	mov    eax,eax
  408212:	add    rdx,rax
  408215:	mov    rax,QWORD PTR [rbp-0x28]
  408219:	mov    QWORD PTR [rax+0x8],rdx
  40821d:	mov    rax,QWORD PTR [rbp-0x28]
  408221:	mov    rdx,QWORD PTR [rax+0x88]
  408228:	mov    rax,QWORD PTR [rbp-0x28]
  40822c:	mov    rax,QWORD PTR [rax+0x30]
  408230:	mov    eax,DWORD PTR [rax+0x14]
  408233:	mov    eax,eax
  408235:	add    rdx,rax
  408238:	mov    rax,QWORD PTR [rbp-0x28]
  40823c:	mov    QWORD PTR [rax],rdx
  40823f:	mov    rax,QWORD PTR [rbp-0x28]
  408243:	mov    rdi,rax
  408246:	call   405a80 <flatcc_builder_get_user_frame_ptr@@Base+0x201>
  40824b:	mov    eax,DWORD PTR [rbp-0x14]
  40824e:	leave  
  40824f:	ret    

0000000000408250 <flatcc_builder_create_vector@@Base>:
  408250:	endbr64 
  408254:	push   rbp
  408255:	mov    rbp,rsp
  408258:	sub    rsp,0xe0
  40825f:	mov    QWORD PTR [rbp-0xb8],rdi
  408266:	mov    QWORD PTR [rbp-0xc0],rsi
  40826d:	mov    QWORD PTR [rbp-0xc8],rdx
  408274:	mov    QWORD PTR [rbp-0xd0],rcx
  40827b:	mov    eax,r8d
  40827e:	mov    QWORD PTR [rbp-0xe0],r9
  408285:	mov    WORD PTR [rbp-0xd4],ax
  40828c:	mov    rax,QWORD PTR fs:0x28
  408295:	mov    QWORD PTR [rbp-0x8],rax
  408299:	xor    eax,eax
  40829b:	mov    rax,QWORD PTR [rbp-0xc8]
  4082a2:	cmp    rax,QWORD PTR [rbp-0xe0]
  4082a9:	jbe    4082e4 <flatcc_builder_create_vector@@Base+0x94>
  4082ab:	mov    rax,QWORD PTR [rbp-0xc8]
  4082b2:	cmp    rax,QWORD PTR [rbp-0xe0]
  4082b9:	jbe    4082da <flatcc_builder_create_vector@@Base+0x8a>
  4082bb:	lea    rcx,[rip+0x592e]        # 40dbf0 <flatcc_builder_padding_base@@Base+0xa30>
  4082c2:	mov    edx,0x555
  4082c7:	lea    rsi,[rip+0x50f2]        # 40d3c0 <flatcc_builder_padding_base@@Base+0x200>
  4082ce:	lea    rdi,[rip+0x53ee]        # 40d6c3 <flatcc_builder_padding_base@@Base+0x503>
  4082d5:	call   403130 <__assert_fail@plt>
  4082da:	mov    eax,0x0
  4082df:	jmp    4084cc <flatcc_builder_create_vector@@Base+0x27c>
  4082e4:	lea    rax,[rbp-0xd4]
  4082eb:	mov    esi,0x4
  4082f0:	mov    rdi,rax
  4082f3:	call   4055a5 <flatcc_builder_clear@@Base+0xca>
  4082f8:	movzx  eax,WORD PTR [rbp-0xd4]
  4082ff:	movzx  edx,ax
  408302:	mov    rax,QWORD PTR [rbp-0xb8]
  408309:	mov    esi,edx
  40830b:	mov    rdi,rax
  40830e:	call   405574 <flatcc_builder_clear@@Base+0x99>
  408313:	mov    rax,QWORD PTR [rbp-0xc8]
  40831a:	mov    edx,eax
  40831c:	mov    rax,QWORD PTR [rbp-0xd0]
  408323:	imul   eax,edx
  408326:	mov    DWORD PTR [rbp-0xa8],eax
  40832c:	mov    rax,QWORD PTR [rbp-0xc8]
  408333:	mov    edi,eax
  408335:	call   404848 <main@@Base+0x173>
  40833a:	mov    DWORD PTR [rbp-0xac],eax
  408340:	movzx  eax,WORD PTR [rbp-0xd4]
  408347:	movzx  edx,ax
  40834a:	mov    ecx,DWORD PTR [rbp-0xa8]
  408350:	mov    rax,QWORD PTR [rbp-0xb8]
  408357:	mov    esi,ecx
  408359:	mov    rdi,rax
  40835c:	call   405b47 <flatcc_builder_get_user_frame_ptr@@Base+0x2c8>
  408361:	mov    DWORD PTR [rbp-0xa4],eax
  408367:	mov    QWORD PTR [rbp-0xa0],0x0
  408372:	mov    DWORD PTR [rbp-0x98],0x0
  40837c:	mov    rax,QWORD PTR [rbp-0xa0]
  408383:	add    rax,0x4
  408387:	mov    QWORD PTR [rbp-0xa0],rax
  40838e:	mov    eax,DWORD PTR [rbp-0x98]
  408394:	cdqe   
  408396:	shl    rax,0x4
  40839a:	add    rax,rbp
  40839d:	lea    rdx,[rax-0x90]
  4083a4:	lea    rax,[rbp-0xac]
  4083ab:	mov    QWORD PTR [rdx],rax
  4083ae:	mov    eax,DWORD PTR [rbp-0x98]
  4083b4:	cdqe   
  4083b6:	shl    rax,0x4
  4083ba:	add    rax,rbp
  4083bd:	sub    rax,0x88
  4083c3:	mov    QWORD PTR [rax],0x4
  4083ca:	mov    eax,DWORD PTR [rbp-0x98]
  4083d0:	inc    eax
  4083d2:	mov    DWORD PTR [rbp-0x98],eax
  4083d8:	cmp    DWORD PTR [rbp-0xa8],0x0
  4083df:	je     408446 <flatcc_builder_create_vector@@Base+0x1f6>
  4083e1:	mov    rdx,QWORD PTR [rbp-0xa0]
  4083e8:	mov    eax,DWORD PTR [rbp-0xa8]
  4083ee:	add    rax,rdx
  4083f1:	mov    QWORD PTR [rbp-0xa0],rax
  4083f8:	mov    eax,DWORD PTR [rbp-0x98]
  4083fe:	cdqe   
  408400:	shl    rax,0x4
  408404:	add    rax,rbp
  408407:	lea    rdx,[rax-0x90]
  40840e:	mov    rax,QWORD PTR [rbp-0xc0]
  408415:	mov    QWORD PTR [rdx],rax
  408418:	mov    edx,DWORD PTR [rbp-0x98]
  40841e:	mov    eax,DWORD PTR [rbp-0xa8]
  408424:	movsxd rdx,edx
  408427:	shl    rdx,0x4
  40842b:	add    rdx,rbp
  40842e:	sub    rdx,0x88
  408435:	mov    QWORD PTR [rdx],rax
  408438:	mov    eax,DWORD PTR [rbp-0x98]
  40843e:	inc    eax
  408440:	mov    DWORD PTR [rbp-0x98],eax
  408446:	cmp    DWORD PTR [rbp-0xa4],0x0
  40844d:	je     4084b3 <flatcc_builder_create_vector@@Base+0x263>
  40844f:	mov    rdx,QWORD PTR [rbp-0xa0]
  408456:	mov    eax,DWORD PTR [rbp-0xa4]
  40845c:	add    rax,rdx
  40845f:	mov    QWORD PTR [rbp-0xa0],rax
  408466:	mov    eax,DWORD PTR [rbp-0x98]
  40846c:	cdqe   
  40846e:	shl    rax,0x4
  408472:	add    rax,rbp
  408475:	sub    rax,0x90
  40847b:	mov    rdx,0x40d1c0
  408482:	mov    QWORD PTR [rax],rdx
  408485:	mov    edx,DWORD PTR [rbp-0x98]
  40848b:	mov    eax,DWORD PTR [rbp-0xa4]
  408491:	movsxd rdx,edx
  408494:	shl    rdx,0x4
  408498:	add    rdx,rbp
  40849b:	sub    rdx,0x88
  4084a2:	mov    QWORD PTR [rdx],rax
  4084a5:	mov    eax,DWORD PTR [rbp-0x98]
  4084ab:	inc    eax
  4084ad:	mov    DWORD PTR [rbp-0x98],eax
  4084b3:	lea    rdx,[rbp-0xa0]
  4084ba:	mov    rax,QWORD PTR [rbp-0xb8]
  4084c1:	mov    rsi,rdx
  4084c4:	mov    rdi,rax
  4084c7:	call   405b91 <flatcc_builder_get_user_frame_ptr@@Base+0x312>
  4084cc:	mov    rcx,QWORD PTR [rbp-0x8]
  4084d0:	xor    rcx,QWORD PTR fs:0x28
  4084d9:	je     4084e0 <flatcc_builder_create_vector@@Base+0x290>
  4084db:	call   403120 <__stack_chk_fail@plt>
  4084e0:	leave  
  4084e1:	ret    

00000000004084e2 <flatcc_builder_end_vector@@Base>:
  4084e2:	endbr64 
  4084e6:	push   rbp
  4084e7:	mov    rbp,rsp
  4084ea:	sub    rsp,0x20
  4084ee:	mov    QWORD PTR [rbp-0x18],rdi
  4084f2:	mov    rax,QWORD PTR [rbp-0x18]
  4084f6:	mov    rax,QWORD PTR [rax+0x30]
  4084fa:	movzx  eax,WORD PTR [rax+0xe]
  4084fe:	cmp    ax,0x4
  408502:	je     408523 <flatcc_builder_end_vector@@Base+0x41>
  408504:	lea    rcx,[rip+0x5705]        # 40dc10 <flatcc_builder_padding_base@@Base+0xa50>
  40850b:	mov    edx,0x578
  408510:	lea    rsi,[rip+0x4ea9]        # 40d3c0 <flatcc_builder_padding_base@@Base+0x200>
  408517:	lea    rdi,[rip+0x4fea]        # 40d508 <flatcc_builder_padding_base@@Base+0x348>
  40851e:	call   403130 <__assert_fail@plt>
  408523:	mov    rax,QWORD PTR [rbp-0x18]
  408527:	mov    rax,QWORD PTR [rax+0x30]
  40852b:	mov    eax,DWORD PTR [rax+0x18]
  40852e:	mov    r8d,eax
  408531:	mov    rax,QWORD PTR [rbp-0x18]
  408535:	movzx  eax,WORD PTR [rax+0xea]
  40853c:	movzx  edx,ax
  40853f:	mov    rax,QWORD PTR [rbp-0x18]
  408543:	mov    rax,QWORD PTR [rax+0x30]
  408547:	mov    eax,DWORD PTR [rax+0x10]
  40854a:	mov    ecx,eax
  40854c:	mov    rax,QWORD PTR [rbp-0x18]
  408550:	mov    rax,QWORD PTR [rax+0x30]
  408554:	mov    eax,DWORD PTR [rax+0x14]
  408557:	mov    edi,eax
  408559:	mov    rax,QWORD PTR [rbp-0x18]
  40855d:	mov    rsi,QWORD PTR [rax+0x18]
  408561:	mov    rax,QWORD PTR [rbp-0x18]
  408565:	mov    r9,r8
  408568:	mov    r8d,edx
  40856b:	mov    rdx,rdi
  40856e:	mov    rdi,rax
  408571:	call   408250 <flatcc_builder_create_vector@@Base>
  408576:	mov    DWORD PTR [rbp-0x4],eax
  408579:	cmp    DWORD PTR [rbp-0x4],0x0
  40857d:	jne    408586 <flatcc_builder_end_vector@@Base+0xa4>
  40857f:	mov    eax,0x0
  408584:	jmp    408595 <flatcc_builder_end_vector@@Base+0xb3>
  408586:	mov    rax,QWORD PTR [rbp-0x18]
  40858a:	mov    rdi,rax
  40858d:	call   405a80 <flatcc_builder_get_user_frame_ptr@@Base+0x201>
  408592:	mov    eax,DWORD PTR [rbp-0x4]
  408595:	leave  
  408596:	ret    

0000000000408597 <flatcc_builder_vector_count@@Base>:
  408597:	endbr64 
  40859b:	push   rbp
  40859c:	mov    rbp,rsp
  40859f:	mov    QWORD PTR [rbp-0x8],rdi
  4085a3:	mov    rax,QWORD PTR [rbp-0x8]
  4085a7:	mov    rax,QWORD PTR [rax+0x30]
  4085ab:	mov    eax,DWORD PTR [rax+0x14]
  4085ae:	mov    eax,eax
  4085b0:	pop    rbp
  4085b1:	ret    

00000000004085b2 <flatcc_builder_vector_edit@@Base>:
  4085b2:	endbr64 
  4085b6:	push   rbp
  4085b7:	mov    rbp,rsp
  4085ba:	mov    QWORD PTR [rbp-0x8],rdi
  4085be:	mov    rax,QWORD PTR [rbp-0x8]
  4085c2:	mov    rax,QWORD PTR [rax+0x18]
  4085c6:	pop    rbp
  4085c7:	ret    
  4085c8:	endbr64 
  4085cc:	push   rbp
  4085cd:	mov    rbp,rsp
  4085d0:	sub    rsp,0xe0
  4085d7:	mov    QWORD PTR [rbp-0xc8],rdi
  4085de:	mov    QWORD PTR [rbp-0xd0],rsi
  4085e5:	mov    QWORD PTR [rbp-0xd8],rdx
  4085ec:	mov    QWORD PTR [rbp-0xe0],rcx
  4085f3:	mov    rax,QWORD PTR fs:0x28
  4085fc:	mov    QWORD PTR [rbp-0x8],rax
  408600:	xor    eax,eax
  408602:	mov    rax,QWORD PTR [rbp-0xd8]
  408609:	cmp    eax,0x3fffffff
  40860e:	jbe    40861a <flatcc_builder_vector_edit@@Base+0x68>
  408610:	mov    eax,0x0
  408615:	jmp    408943 <flatcc_builder_vector_edit@@Base+0x391>
  40861a:	mov    rax,QWORD PTR [rbp-0xc8]
  408621:	mov    esi,0x4
  408626:	mov    rdi,rax
  408629:	call   405574 <flatcc_builder_clear@@Base+0x99>
  40862e:	mov    rax,QWORD PTR [rbp-0xd8]
  408635:	shl    eax,0x2
  408638:	mov    DWORD PTR [rbp-0xb0],eax
  40863e:	mov    rax,QWORD PTR [rbp-0xd8]
  408645:	mov    edi,eax
  408647:	call   404848 <main@@Base+0x173>
  40864c:	mov    DWORD PTR [rbp-0xb8],eax
  408652:	mov    ecx,DWORD PTR [rbp-0xb0]
  408658:	mov    rax,QWORD PTR [rbp-0xc8]
  40865f:	mov    edx,0x4
  408664:	mov    esi,ecx
  408666:	mov    rdi,rax
  408669:	call   405b47 <flatcc_builder_get_user_frame_ptr@@Base+0x2c8>
  40866e:	mov    DWORD PTR [rbp-0xac],eax
  408674:	mov    QWORD PTR [rbp-0xa0],0x0
  40867f:	mov    DWORD PTR [rbp-0x98],0x0
  408689:	mov    rax,QWORD PTR [rbp-0xa0]
  408690:	add    rax,0x4
  408694:	mov    QWORD PTR [rbp-0xa0],rax
  40869b:	mov    eax,DWORD PTR [rbp-0x98]
  4086a1:	cdqe   
  4086a3:	shl    rax,0x4
  4086a7:	add    rax,rbp
  4086aa:	lea    rdx,[rax-0x90]
  4086b1:	lea    rax,[rbp-0xb8]
  4086b8:	mov    QWORD PTR [rdx],rax
  4086bb:	mov    eax,DWORD PTR [rbp-0x98]
  4086c1:	cdqe   
  4086c3:	shl    rax,0x4
  4086c7:	add    rax,rbp
  4086ca:	sub    rax,0x88
  4086d0:	mov    QWORD PTR [rax],0x4
  4086d7:	mov    eax,DWORD PTR [rbp-0x98]
  4086dd:	inc    eax
  4086df:	mov    DWORD PTR [rbp-0x98],eax
  4086e5:	cmp    DWORD PTR [rbp-0xb0],0x0
  4086ec:	je     408753 <flatcc_builder_vector_edit@@Base+0x1a1>
  4086ee:	mov    rdx,QWORD PTR [rbp-0xa0]
  4086f5:	mov    eax,DWORD PTR [rbp-0xb0]
  4086fb:	add    rax,rdx
  4086fe:	mov    QWORD PTR [rbp-0xa0],rax
  408705:	mov    eax,DWORD PTR [rbp-0x98]
  40870b:	cdqe   
  40870d:	shl    rax,0x4
  408711:	add    rax,rbp
  408714:	lea    rdx,[rax-0x90]
  40871b:	mov    rax,QWORD PTR [rbp-0xd0]
  408722:	mov    QWORD PTR [rdx],rax
  408725:	mov    edx,DWORD PTR [rbp-0x98]
  40872b:	mov    eax,DWORD PTR [rbp-0xb0]
  408731:	movsxd rdx,edx
  408734:	shl    rdx,0x4
  408738:	add    rdx,rbp
  40873b:	sub    rdx,0x88
  408742:	mov    QWORD PTR [rdx],rax
  408745:	mov    eax,DWORD PTR [rbp-0x98]
  40874b:	inc    eax
  40874d:	mov    DWORD PTR [rbp-0x98],eax
  408753:	cmp    DWORD PTR [rbp-0xac],0x0
  40875a:	je     4087c0 <flatcc_builder_vector_edit@@Base+0x20e>
  40875c:	mov    rdx,QWORD PTR [rbp-0xa0]
  408763:	mov    eax,DWORD PTR [rbp-0xac]
  408769:	add    rax,rdx
  40876c:	mov    QWORD PTR [rbp-0xa0],rax
  408773:	mov    eax,DWORD PTR [rbp-0x98]
  408779:	cdqe   
  40877b:	shl    rax,0x4
  40877f:	add    rax,rbp
  408782:	sub    rax,0x90
  408788:	mov    rdx,0x40d1c0
  40878f:	mov    QWORD PTR [rax],rdx
  408792:	mov    edx,DWORD PTR [rbp-0x98]
  408798:	mov    eax,DWORD PTR [rbp-0xac]
  40879e:	movsxd rdx,edx
  4087a1:	shl    rdx,0x4
  4087a5:	add    rdx,rbp
  4087a8:	sub    rdx,0x88
  4087af:	mov    QWORD PTR [rdx],rax
  4087b2:	mov    eax,DWORD PTR [rbp-0x98]
  4087b8:	inc    eax
  4087ba:	mov    DWORD PTR [rbp-0x98],eax
  4087c0:	mov    rax,QWORD PTR [rbp-0xc8]
  4087c7:	mov    eax,DWORD PTR [rax+0xf0]
  4087cd:	mov    edx,eax
  4087cf:	mov    rax,QWORD PTR [rbp-0xa0]
  4087d6:	sub    edx,eax
  4087d8:	mov    eax,edx
  4087da:	mov    DWORD PTR [rbp-0xa8],eax
  4087e0:	mov    DWORD PTR [rbp-0xb4],0x0
  4087ea:	jmp    408917 <flatcc_builder_vector_edit@@Base+0x365>
  4087ef:	mov    eax,DWORD PTR [rbp-0xb4]
  4087f5:	lea    rdx,[rax*4+0x0]
  4087fd:	mov    rax,QWORD PTR [rbp-0xd0]
  408804:	add    rax,rdx
  408807:	mov    eax,DWORD PTR [rax]
  408809:	test   eax,eax
  40880b:	je     4088b2 <flatcc_builder_vector_edit@@Base+0x300>
  408811:	mov    eax,DWORD PTR [rbp-0xb4]
  408817:	lea    rdx,[rax*4+0x0]
  40881f:	mov    rax,QWORD PTR [rbp-0xd0]
  408826:	add    rax,rdx
  408829:	mov    eax,DWORD PTR [rax]
  40882b:	sub    eax,DWORD PTR [rbp-0xa8]
  408831:	mov    edx,DWORD PTR [rbp-0xb4]
  408837:	shl    edx,0x2
  40883a:	sub    eax,edx
  40883c:	sub    eax,0x4
  40883f:	mov    DWORD PTR [rbp-0xa4],eax
  408845:	mov    eax,DWORD PTR [rbp-0xa4]
  40884b:	mov    edi,eax
  40884d:	call   404848 <main@@Base+0x173>
  408852:	mov    edx,eax
  408854:	mov    eax,DWORD PTR [rbp-0xb4]
  40885a:	lea    rcx,[rax*4+0x0]
  408862:	mov    rax,QWORD PTR [rbp-0xd0]
  408869:	add    rax,rcx
  40886c:	mov    DWORD PTR [rax],edx
  40886e:	cmp    QWORD PTR [rbp-0xe0],0x0
  408876:	je     408911 <flatcc_builder_vector_edit@@Base+0x35f>
  40887c:	mov    edx,DWORD PTR [rbp-0xb4]
  408882:	mov    rax,QWORD PTR [rbp-0xe0]
  408889:	add    rax,rdx
  40888c:	movzx  eax,BYTE PTR [rax]
  40888f:	test   al,al
  408891:	jne    408911 <flatcc_builder_vector_edit@@Base+0x35f>
  408893:	lea    rcx,[rip+0x5396]        # 40dc30 <flatcc_builder_padding_base@@Base+0xa70>
  40889a:	mov    edx,0x5b1
  40889f:	lea    rsi,[rip+0x4b1a]        # 40d3c0 <flatcc_builder_padding_base@@Base+0x200>
  4088a6:	lea    rdi,[rip+0x4e29]        # 40d6d6 <flatcc_builder_padding_base@@Base+0x516>
  4088ad:	call   403130 <__assert_fail@plt>
  4088b2:	cmp    QWORD PTR [rbp-0xe0],0x0
  4088ba:	je     4088f2 <flatcc_builder_vector_edit@@Base+0x340>
  4088bc:	mov    edx,DWORD PTR [rbp-0xb4]
  4088c2:	mov    rax,QWORD PTR [rbp-0xe0]
  4088c9:	add    rax,rdx
  4088cc:	movzx  eax,BYTE PTR [rax]
  4088cf:	test   al,al
  4088d1:	je     408911 <flatcc_builder_vector_edit@@Base+0x35f>
  4088d3:	lea    rcx,[rip+0x5356]        # 40dc30 <flatcc_builder_padding_base@@Base+0xa70>
  4088da:	mov    edx,0x5b5
  4088df:	lea    rsi,[rip+0x4ada]        # 40d3c0 <flatcc_builder_padding_base@@Base+0x200>
  4088e6:	lea    rdi,[rip+0x4df7]        # 40d6e4 <flatcc_builder_padding_base@@Base+0x524>
  4088ed:	call   403130 <__assert_fail@plt>
  4088f2:	lea    rcx,[rip+0x5337]        # 40dc30 <flatcc_builder_padding_base@@Base+0xa70>
  4088f9:	mov    edx,0x5b7
  4088fe:	lea    rsi,[rip+0x4abb]        # 40d3c0 <flatcc_builder_padding_base@@Base+0x200>
  408905:	lea    rdi,[rip+0x4b14]        # 40d420 <flatcc_builder_padding_base@@Base+0x260>
  40890c:	call   403130 <__assert_fail@plt>
  408911:	inc    DWORD PTR [rbp-0xb4]
  408917:	mov    rax,QWORD PTR [rbp-0xd8]
  40891e:	cmp    DWORD PTR [rbp-0xb4],eax
  408924:	jb     4087ef <flatcc_builder_vector_edit@@Base+0x23d>
  40892a:	lea    rdx,[rbp-0xa0]
  408931:	mov    rax,QWORD PTR [rbp-0xc8]
  408938:	mov    rsi,rdx
  40893b:	mov    rdi,rax
  40893e:	call   405b91 <flatcc_builder_get_user_frame_ptr@@Base+0x312>
  408943:	mov    rsi,QWORD PTR [rbp-0x8]
  408947:	xor    rsi,QWORD PTR fs:0x28
  408950:	je     408957 <flatcc_builder_vector_edit@@Base+0x3a5>
  408952:	call   403120 <__stack_chk_fail@plt>
  408957:	leave  
  408958:	ret    

0000000000408959 <flatcc_builder_create_offset_vector_direct@@Base>:
  408959:	endbr64 
  40895d:	push   rbp
  40895e:	mov    rbp,rsp
  408961:	sub    rsp,0x20
  408965:	mov    QWORD PTR [rbp-0x8],rdi
  408969:	mov    QWORD PTR [rbp-0x10],rsi
  40896d:	mov    QWORD PTR [rbp-0x18],rdx
  408971:	mov    rdx,QWORD PTR [rbp-0x18]
  408975:	mov    rsi,QWORD PTR [rbp-0x10]
  408979:	mov    rax,QWORD PTR [rbp-0x8]
  40897d:	mov    ecx,0x0
  408982:	mov    rdi,rax
  408985:	call   4085c8 <flatcc_builder_vector_edit@@Base+0x16>
  40898a:	leave  
  40898b:	ret    

000000000040898c <flatcc_builder_end_offset_vector@@Base>:
  40898c:	endbr64 
  408990:	push   rbp
  408991:	mov    rbp,rsp
  408994:	sub    rsp,0x20
  408998:	mov    QWORD PTR [rbp-0x18],rdi
  40899c:	mov    rax,QWORD PTR [rbp-0x18]
  4089a0:	mov    rax,QWORD PTR [rax+0x30]
  4089a4:	movzx  eax,WORD PTR [rax+0xe]
  4089a8:	cmp    ax,0x5
  4089ac:	je     4089cd <flatcc_builder_end_offset_vector@@Base+0x41>
  4089ae:	lea    rcx,[rip+0x52ab]        # 40dc60 <flatcc_builder_padding_base@@Base+0xaa0>
  4089b5:	mov    edx,0x5c8
  4089ba:	lea    rsi,[rip+0x49ff]        # 40d3c0 <flatcc_builder_padding_base@@Base+0x200>
  4089c1:	lea    rdi,[rip+0x4bb0]        # 40d578 <flatcc_builder_padding_base@@Base+0x3b8>
  4089c8:	call   403130 <__assert_fail@plt>
  4089cd:	mov    rax,QWORD PTR [rbp-0x18]
  4089d1:	mov    rax,QWORD PTR [rax+0x30]
  4089d5:	mov    eax,DWORD PTR [rax+0x14]
  4089d8:	mov    edx,eax
  4089da:	mov    rax,QWORD PTR [rbp-0x18]
  4089de:	mov    rcx,QWORD PTR [rax+0x18]
  4089e2:	mov    rax,QWORD PTR [rbp-0x18]
  4089e6:	mov    rsi,rcx
  4089e9:	mov    rdi,rax
  4089ec:	call   408959 <flatcc_builder_create_offset_vector_direct@@Base>
  4089f1:	mov    DWORD PTR [rbp-0x4],eax
  4089f4:	cmp    DWORD PTR [rbp-0x4],0x0
  4089f8:	jne    408a01 <flatcc_builder_end_offset_vector@@Base+0x75>
  4089fa:	mov    eax,0x0
  4089ff:	jmp    408a10 <flatcc_builder_end_offset_vector@@Base+0x84>
  408a01:	mov    rax,QWORD PTR [rbp-0x18]
  408a05:	mov    rdi,rax
  408a08:	call   405a80 <flatcc_builder_get_user_frame_ptr@@Base+0x201>
  408a0d:	mov    eax,DWORD PTR [rbp-0x4]
  408a10:	leave  
  408a11:	ret    

0000000000408a12 <flatcc_builder_end_offset_vector_for_unions@@Base>:
  408a12:	endbr64 
  408a16:	push   rbp
  408a17:	mov    rbp,rsp
  408a1a:	sub    rsp,0x20
  408a1e:	mov    QWORD PTR [rbp-0x18],rdi
  408a22:	mov    QWORD PTR [rbp-0x20],rsi
  408a26:	mov    rax,QWORD PTR [rbp-0x18]
  408a2a:	mov    rax,QWORD PTR [rax+0x30]
  408a2e:	movzx  eax,WORD PTR [rax+0xe]
  408a32:	cmp    ax,0x5
  408a36:	je     408a57 <flatcc_builder_end_offset_vector_for_unions@@Base+0x45>
  408a38:	lea    rcx,[rip+0x5261]        # 40dca0 <flatcc_builder_padding_base@@Base+0xae0>
  408a3f:	mov    edx,0x5d5
  408a44:	lea    rsi,[rip+0x4975]        # 40d3c0 <flatcc_builder_padding_base@@Base+0x200>
  408a4b:	lea    rdi,[rip+0x4b26]        # 40d578 <flatcc_builder_padding_base@@Base+0x3b8>
  408a52:	call   403130 <__assert_fail@plt>
  408a57:	mov    rax,QWORD PTR [rbp-0x18]
  408a5b:	mov    rax,QWORD PTR [rax+0x30]
  408a5f:	mov    eax,DWORD PTR [rax+0x14]
  408a62:	mov    edi,eax
  408a64:	mov    rax,QWORD PTR [rbp-0x18]
  408a68:	mov    rsi,QWORD PTR [rax+0x18]
  408a6c:	mov    rdx,QWORD PTR [rbp-0x20]
  408a70:	mov    rax,QWORD PTR [rbp-0x18]
  408a74:	mov    rcx,rdx
  408a77:	mov    rdx,rdi
  408a7a:	mov    rdi,rax
  408a7d:	call   4085c8 <flatcc_builder_vector_edit@@Base+0x16>
  408a82:	mov    DWORD PTR [rbp-0x4],eax
  408a85:	cmp    DWORD PTR [rbp-0x4],0x0
  408a89:	jne    408a92 <flatcc_builder_end_offset_vector_for_unions@@Base+0x80>
  408a8b:	mov    eax,0x0
  408a90:	jmp    408aa1 <flatcc_builder_end_offset_vector_for_unions@@Base+0x8f>
  408a92:	mov    rax,QWORD PTR [rbp-0x18]
  408a96:	mov    rdi,rax
  408a99:	call   405a80 <flatcc_builder_get_user_frame_ptr@@Base+0x201>
  408a9e:	mov    eax,DWORD PTR [rbp-0x4]
  408aa1:	leave  
  408aa2:	ret    

0000000000408aa3 <flatcc_builder_offset_vector_edit@@Base>:
  408aa3:	endbr64 
  408aa7:	push   rbp
  408aa8:	mov    rbp,rsp
  408aab:	mov    QWORD PTR [rbp-0x8],rdi
  408aaf:	mov    rax,QWORD PTR [rbp-0x8]
  408ab3:	mov    rax,QWORD PTR [rax+0x18]
  408ab7:	pop    rbp
  408ab8:	ret    

0000000000408ab9 <flatcc_builder_offset_vector_count@@Base>:
  408ab9:	endbr64 
  408abd:	push   rbp
  408abe:	mov    rbp,rsp
  408ac1:	mov    QWORD PTR [rbp-0x8],rdi
  408ac5:	mov    rax,QWORD PTR [rbp-0x8]
  408ac9:	mov    rax,QWORD PTR [rax+0x30]
  408acd:	mov    eax,DWORD PTR [rax+0x14]
  408ad0:	mov    eax,eax
  408ad2:	pop    rbp
  408ad3:	ret    

0000000000408ad4 <flatcc_builder_table_add_union@@Base>:
  408ad4:	endbr64 
  408ad8:	push   rbp
  408ad9:	mov    rbp,rsp
  408adc:	sub    rsp,0x30
  408ae0:	mov    QWORD PTR [rbp-0x18],rdi
  408ae4:	mov    DWORD PTR [rbp-0x1c],esi
  408ae7:	mov    QWORD PTR [rbp-0x24],rdx
  408aeb:	mov    rax,QWORD PTR [rbp-0x18]
  408aef:	mov    rax,QWORD PTR [rax+0x30]
  408af3:	movzx  eax,WORD PTR [rax+0xe]
  408af7:	cmp    ax,0x3
  408afb:	je     408b1c <flatcc_builder_table_add_union@@Base+0x48>
  408afd:	lea    rcx,[rip+0x51cc]        # 40dcd0 <flatcc_builder_padding_base@@Base+0xb10>
  408b04:	mov    edx,0x5ee
  408b09:	lea    rsi,[rip+0x48b0]        # 40d3c0 <flatcc_builder_padding_base@@Base+0x200>
  408b10:	lea    rdi,[rip+0x4b81]        # 40d698 <flatcc_builder_padding_base@@Base+0x4d8>
  408b17:	call   403130 <__assert_fail@plt>
  408b1c:	movzx  eax,BYTE PTR [rbp-0x24]
  408b20:	test   al,al
  408b22:	jne    408b63 <flatcc_builder_table_add_union@@Base+0x8f>
  408b24:	mov    eax,DWORD PTR [rbp-0x20]
  408b27:	test   eax,eax
  408b29:	je     408b63 <flatcc_builder_table_add_union@@Base+0x8f>
  408b2b:	movzx  eax,BYTE PTR [rbp-0x24]
  408b2f:	test   al,al
  408b31:	jne    408b59 <flatcc_builder_table_add_union@@Base+0x85>
  408b33:	mov    eax,DWORD PTR [rbp-0x20]
  408b36:	test   eax,eax
  408b38:	je     408b59 <flatcc_builder_table_add_union@@Base+0x85>
  408b3a:	lea    rcx,[rip+0x518f]        # 40dcd0 <flatcc_builder_padding_base@@Base+0xb10>
  408b41:	mov    edx,0x5ef
  408b46:	lea    rsi,[rip+0x4873]        # 40d3c0 <flatcc_builder_padding_base@@Base+0x200>
  408b4d:	lea    rdi,[rip+0x4ba4]        # 40d6f8 <flatcc_builder_padding_base@@Base+0x538>
  408b54:	call   403130 <__assert_fail@plt>
  408b59:	mov    eax,0xffffffff
  408b5e:	jmp    408c29 <flatcc_builder_table_add_union@@Base+0x155>
  408b63:	mov    eax,DWORD PTR [rbp-0x20]
  408b66:	test   eax,eax
  408b68:	je     408bbc <flatcc_builder_table_add_union@@Base+0xe8>
  408b6a:	mov    edx,DWORD PTR [rbp-0x1c]
  408b6d:	mov    rax,QWORD PTR [rbp-0x18]
  408b71:	mov    esi,edx
  408b73:	mov    rdi,rax
  408b76:	call   4098c5 <flatcc_builder_table_add_offset@@Base>
  408b7b:	mov    QWORD PTR [rbp-0x10],rax
  408b7f:	cmp    QWORD PTR [rbp-0x10],0x0
  408b84:	jne    408bb3 <flatcc_builder_table_add_union@@Base+0xdf>
  408b86:	cmp    QWORD PTR [rbp-0x10],0x0
  408b8b:	jne    408bac <flatcc_builder_table_add_union@@Base+0xd8>
  408b8d:	lea    rcx,[rip+0x513c]        # 40dcd0 <flatcc_builder_padding_base@@Base+0xb10>
  408b94:	mov    edx,0x5f2
  408b99:	lea    rsi,[rip+0x4820]        # 40d3c0 <flatcc_builder_padding_base@@Base+0x200>
  408ba0:	lea    rdi,[rip+0x4b73]        # 40d71a <flatcc_builder_padding_base@@Base+0x55a>
  408ba7:	call   403130 <__assert_fail@plt>
  408bac:	mov    eax,0xffffffff
  408bb1:	jmp    408c29 <flatcc_builder_table_add_union@@Base+0x155>
  408bb3:	mov    edx,DWORD PTR [rbp-0x20]
  408bb6:	mov    rax,QWORD PTR [rbp-0x10]
  408bba:	mov    DWORD PTR [rax],edx
  408bbc:	mov    eax,DWORD PTR [rbp-0x1c]
  408bbf:	lea    esi,[rax-0x1]
  408bc2:	mov    rax,QWORD PTR [rbp-0x18]
  408bc6:	mov    ecx,0x1
  408bcb:	mov    edx,0x1
  408bd0:	mov    rdi,rax
  408bd3:	call   4096eb <flatcc_builder_table_add@@Base>
  408bd8:	mov    QWORD PTR [rbp-0x8],rax
  408bdc:	cmp    QWORD PTR [rbp-0x8],0x0
  408be1:	jne    408c10 <flatcc_builder_table_add_union@@Base+0x13c>
  408be3:	cmp    QWORD PTR [rbp-0x8],0x0
  408be8:	jne    408c09 <flatcc_builder_table_add_union@@Base+0x135>
  408bea:	lea    rcx,[rip+0x50df]        # 40dcd0 <flatcc_builder_padding_base@@Base+0xb10>
  408bf1:	mov    edx,0x5f6
  408bf6:	lea    rsi,[rip+0x47c3]        # 40d3c0 <flatcc_builder_padding_base@@Base+0x200>
  408bfd:	lea    rdi,[rip+0x4b20]        # 40d724 <flatcc_builder_padding_base@@Base+0x564>
  408c04:	call   403130 <__assert_fail@plt>
  408c09:	mov    eax,0xffffffff
  408c0e:	jmp    408c29 <flatcc_builder_table_add_union@@Base+0x155>
  408c10:	movzx  eax,BYTE PTR [rbp-0x24]
  408c14:	movzx  eax,al
  408c17:	mov    edi,eax
  408c19:	call   404854 <main@@Base+0x17f>
  408c1e:	mov    rdx,QWORD PTR [rbp-0x8]
  408c22:	mov    BYTE PTR [rdx],al
  408c24:	mov    eax,0x0
  408c29:	leave  
  408c2a:	ret    

0000000000408c2b <flatcc_builder_table_add_union_vector@@Base>:
  408c2b:	endbr64 
  408c2f:	push   rbp
  408c30:	mov    rbp,rsp
  408c33:	sub    rsp,0x30
  408c37:	mov    QWORD PTR [rbp-0x18],rdi
  408c3b:	mov    DWORD PTR [rbp-0x1c],esi
  408c3e:	mov    QWORD PTR [rbp-0x24],rdx
  408c42:	mov    rax,QWORD PTR [rbp-0x18]
  408c46:	mov    rax,QWORD PTR [rax+0x30]
  408c4a:	movzx  eax,WORD PTR [rax+0xe]
  408c4e:	cmp    ax,0x3
  408c52:	je     408c73 <flatcc_builder_table_add_union_vector@@Base+0x48>
  408c54:	lea    rcx,[rip+0x50a5]        # 40dd00 <flatcc_builder_padding_base@@Base+0xb40>
  408c5b:	mov    edx,0x600
  408c60:	lea    rsi,[rip+0x4759]        # 40d3c0 <flatcc_builder_padding_base@@Base+0x200>
  408c67:	lea    rdi,[rip+0x4a2a]        # 40d698 <flatcc_builder_padding_base@@Base+0x4d8>
  408c6e:	call   403130 <__assert_fail@plt>
  408c73:	mov    eax,DWORD PTR [rbp-0x24]
  408c76:	test   eax,eax
  408c78:	sete   dl
  408c7b:	mov    eax,DWORD PTR [rbp-0x20]
  408c7e:	test   eax,eax
  408c80:	sete   al
  408c83:	xor    eax,edx
  408c85:	test   al,al
  408c87:	je     408cc8 <flatcc_builder_table_add_union_vector@@Base+0x9d>
  408c89:	mov    eax,DWORD PTR [rbp-0x24]
  408c8c:	test   eax,eax
  408c8e:	setne  dl
  408c91:	mov    eax,DWORD PTR [rbp-0x20]
  408c94:	test   eax,eax
  408c96:	sete   al
  408c99:	xor    eax,edx
  408c9b:	test   al,al
  408c9d:	jne    408cbe <flatcc_builder_table_add_union_vector@@Base+0x93>
  408c9f:	lea    rcx,[rip+0x505a]        # 40dd00 <flatcc_builder_padding_base@@Base+0xb40>
  408ca6:	mov    edx,0x601
  408cab:	lea    rsi,[rip+0x470e]        # 40d3c0 <flatcc_builder_padding_base@@Base+0x200>
  408cb2:	lea    rdi,[rip+0x4a77]        # 40d730 <flatcc_builder_padding_base@@Base+0x570>
  408cb9:	call   403130 <__assert_fail@plt>
  408cbe:	mov    eax,0xffffffff
  408cc3:	jmp    408d7f <flatcc_builder_table_add_union_vector@@Base+0x154>
  408cc8:	mov    eax,DWORD PTR [rbp-0x24]
  408ccb:	test   eax,eax
  408ccd:	je     408d7a <flatcc_builder_table_add_union_vector@@Base+0x14f>
  408cd3:	mov    eax,DWORD PTR [rbp-0x1c]
  408cd6:	lea    edx,[rax-0x1]
  408cd9:	mov    rax,QWORD PTR [rbp-0x18]
  408cdd:	mov    esi,edx
  408cdf:	mov    rdi,rax
  408ce2:	call   4098c5 <flatcc_builder_table_add_offset@@Base>
  408ce7:	mov    QWORD PTR [rbp-0x8],rax
  408ceb:	cmp    QWORD PTR [rbp-0x8],0x0
  408cf0:	jne    408d1f <flatcc_builder_table_add_union_vector@@Base+0xf4>
  408cf2:	cmp    QWORD PTR [rbp-0x8],0x0
  408cf7:	jne    408d18 <flatcc_builder_table_add_union_vector@@Base+0xed>
  408cf9:	lea    rcx,[rip+0x5000]        # 40dd00 <flatcc_builder_padding_base@@Base+0xb40>
  408d00:	mov    edx,0x604
  408d05:	lea    rsi,[rip+0x46b4]        # 40d3c0 <flatcc_builder_padding_base@@Base+0x200>
  408d0c:	lea    rdi,[rip+0x4a07]        # 40d71a <flatcc_builder_padding_base@@Base+0x55a>
  408d13:	call   403130 <__assert_fail@plt>
  408d18:	mov    eax,0xffffffff
  408d1d:	jmp    408d7f <flatcc_builder_table_add_union_vector@@Base+0x154>
  408d1f:	mov    edx,DWORD PTR [rbp-0x24]
  408d22:	mov    rax,QWORD PTR [rbp-0x8]
  408d26:	mov    DWORD PTR [rax],edx
  408d28:	mov    edx,DWORD PTR [rbp-0x1c]
  408d2b:	mov    rax,QWORD PTR [rbp-0x18]
  408d2f:	mov    esi,edx
  408d31:	mov    rdi,rax
  408d34:	call   4098c5 <flatcc_builder_table_add_offset@@Base>
  408d39:	mov    QWORD PTR [rbp-0x8],rax
  408d3d:	cmp    QWORD PTR [rbp-0x8],0x0
  408d42:	jne    408d71 <flatcc_builder_table_add_union_vector@@Base+0x146>
  408d44:	cmp    QWORD PTR [rbp-0x8],0x0
  408d49:	jne    408d6a <flatcc_builder_table_add_union_vector@@Base+0x13f>
  408d4b:	lea    rcx,[rip+0x4fae]        # 40dd00 <flatcc_builder_padding_base@@Base+0xb40>
  408d52:	mov    edx,0x608
  408d57:	lea    rsi,[rip+0x4662]        # 40d3c0 <flatcc_builder_padding_base@@Base+0x200>
  408d5e:	lea    rdi,[rip+0x49b5]        # 40d71a <flatcc_builder_padding_base@@Base+0x55a>
  408d65:	call   403130 <__assert_fail@plt>
  408d6a:	mov    eax,0xffffffff
  408d6f:	jmp    408d7f <flatcc_builder_table_add_union_vector@@Base+0x154>
  408d71:	mov    edx,DWORD PTR [rbp-0x20]
  408d74:	mov    rax,QWORD PTR [rbp-0x8]
  408d78:	mov    DWORD PTR [rax],edx
  408d7a:	mov    eax,0x0
  408d7f:	leave  
  408d80:	ret    

0000000000408d81 <flatcc_builder_create_union_vector@@Base>:
  408d81:	endbr64 
  408d85:	push   rbp
  408d86:	mov    rbp,rsp
  408d89:	sub    rsp,0x40
  408d8d:	mov    QWORD PTR [rbp-0x28],rdi
  408d91:	mov    QWORD PTR [rbp-0x30],rsi
  408d95:	mov    QWORD PTR [rbp-0x38],rdx
  408d99:	mov    DWORD PTR [rbp-0x8],0x0
  408da0:	mov    DWORD PTR [rbp-0x4],0x0
  408da7:	mov    rax,QWORD PTR [rbp-0x28]
  408dab:	mov    rdi,rax
  408dae:	call   40738f <flatcc_builder_start_offset_vector@@Base>
  408db3:	test   eax,eax
  408db5:	je     408dc0 <flatcc_builder_create_union_vector@@Base+0x3f>
  408db7:	mov    rax,QWORD PTR [rbp-0x8]
  408dbb:	jmp    408eab <flatcc_builder_create_union_vector@@Base+0x12a>
  408dc0:	mov    rdx,QWORD PTR [rbp-0x38]
  408dc4:	mov    rax,QWORD PTR [rbp-0x28]
  408dc8:	mov    rsi,rdx
  408dcb:	mov    rdi,rax
  408dce:	call   406d6e <flatcc_builder_extend_offset_vector@@Base>
  408dd3:	test   rax,rax
  408dd6:	jne    408de1 <flatcc_builder_create_union_vector@@Base+0x60>
  408dd8:	mov    rax,QWORD PTR [rbp-0x8]
  408ddc:	jmp    408eab <flatcc_builder_create_union_vector@@Base+0x12a>
  408de1:	mov    rax,QWORD PTR [rbp-0x38]
  408de5:	mov    edx,eax
  408de7:	mov    rax,QWORD PTR [rbp-0x28]
  408deb:	mov    esi,edx
  408ded:	mov    rdi,rax
  408df0:	call   404b72 <flatcc_builder_default_alloc@@Base+0x26a>
  408df5:	mov    QWORD PTR [rbp-0x18],rax
  408df9:	cmp    QWORD PTR [rbp-0x18],0x0
  408dfe:	jne    408e09 <flatcc_builder_create_union_vector@@Base+0x88>
  408e00:	mov    rax,QWORD PTR [rbp-0x8]
  408e04:	jmp    408eab <flatcc_builder_create_union_vector@@Base+0x12a>
  408e09:	mov    rax,QWORD PTR [rbp-0x28]
  408e0d:	mov    rdi,rax
  408e10:	call   408aa3 <flatcc_builder_offset_vector_edit@@Base>
  408e15:	mov    QWORD PTR [rbp-0x10],rax
  408e19:	mov    QWORD PTR [rbp-0x20],0x0
  408e21:	jmp    408e75 <flatcc_builder_create_union_vector@@Base+0xf4>
  408e23:	mov    rax,QWORD PTR [rbp-0x20]
  408e27:	lea    rdx,[rax*8+0x0]
  408e2f:	mov    rax,QWORD PTR [rbp-0x30]
  408e33:	add    rax,rdx
  408e36:	mov    rcx,QWORD PTR [rbp-0x18]
  408e3a:	mov    rdx,QWORD PTR [rbp-0x20]
  408e3e:	add    rdx,rcx
  408e41:	movzx  eax,BYTE PTR [rax]
  408e44:	mov    BYTE PTR [rdx],al
  408e46:	mov    rax,QWORD PTR [rbp-0x20]
  408e4a:	lea    rdx,[rax*8+0x0]
  408e52:	mov    rax,QWORD PTR [rbp-0x30]
  408e56:	add    rax,rdx
  408e59:	mov    rdx,QWORD PTR [rbp-0x20]
  408e5d:	lea    rcx,[rdx*4+0x0]
  408e65:	mov    rdx,QWORD PTR [rbp-0x10]
  408e69:	add    rdx,rcx
  408e6c:	mov    eax,DWORD PTR [rax+0x4]
  408e6f:	mov    DWORD PTR [rdx],eax
  408e71:	inc    QWORD PTR [rbp-0x20]
  408e75:	mov    rax,QWORD PTR [rbp-0x20]
  408e79:	cmp    rax,QWORD PTR [rbp-0x38]
  408e7d:	jb     408e23 <flatcc_builder_create_union_vector@@Base+0xa2>
  408e7f:	mov    rcx,QWORD PTR [rbp-0x38]
  408e83:	mov    rdx,QWORD PTR [rbp-0x10]
  408e87:	mov    rsi,QWORD PTR [rbp-0x18]
  408e8b:	mov    rax,QWORD PTR [rbp-0x28]
  408e8f:	mov    rdi,rax
  408e92:	call   408ead <flatcc_builder_create_union_vector_direct@@Base>
  408e97:	mov    QWORD PTR [rbp-0x8],rax
  408e9b:	mov    rax,QWORD PTR [rbp-0x28]
  408e9f:	mov    rdi,rax
  408ea2:	call   405a80 <flatcc_builder_get_user_frame_ptr@@Base+0x201>
  408ea7:	mov    rax,QWORD PTR [rbp-0x8]
  408eab:	leave  
  408eac:	ret    

0000000000408ead <flatcc_builder_create_union_vector_direct@@Base>:
  408ead:	endbr64 
  408eb1:	push   rbp
  408eb2:	mov    rbp,rsp
  408eb5:	sub    rsp,0x30
  408eb9:	mov    QWORD PTR [rbp-0x18],rdi
  408ebd:	mov    QWORD PTR [rbp-0x20],rsi
  408ec1:	mov    QWORD PTR [rbp-0x28],rdx
  408ec5:	mov    QWORD PTR [rbp-0x30],rcx
  408ec9:	mov    DWORD PTR [rbp-0x8],0x0
  408ed0:	mov    DWORD PTR [rbp-0x4],0x0
  408ed7:	mov    rcx,QWORD PTR [rbp-0x20]
  408edb:	mov    rdx,QWORD PTR [rbp-0x30]
  408edf:	mov    rsi,QWORD PTR [rbp-0x28]
  408ee3:	mov    rax,QWORD PTR [rbp-0x18]
  408ee7:	mov    rdi,rax
  408eea:	call   4085c8 <flatcc_builder_vector_edit@@Base+0x16>
  408eef:	mov    DWORD PTR [rbp-0x4],eax
  408ef2:	mov    eax,DWORD PTR [rbp-0x4]
  408ef5:	test   eax,eax
  408ef7:	jne    408eff <flatcc_builder_create_union_vector_direct@@Base+0x52>
  408ef9:	mov    rax,QWORD PTR [rbp-0x8]
  408efd:	jmp    408f38 <flatcc_builder_create_union_vector_direct@@Base+0x8b>
  408eff:	mov    rdx,QWORD PTR [rbp-0x30]
  408f03:	mov    rsi,QWORD PTR [rbp-0x20]
  408f07:	mov    rax,QWORD PTR [rbp-0x18]
  408f0b:	mov    r9d,0xffffffff
  408f11:	mov    r8d,0x1
  408f17:	mov    ecx,0x1
  408f1c:	mov    rdi,rax
  408f1f:	call   408250 <flatcc_builder_create_vector@@Base>
  408f24:	mov    DWORD PTR [rbp-0x8],eax
  408f27:	mov    eax,DWORD PTR [rbp-0x8]
  408f2a:	test   eax,eax
  408f2c:	jne    408f34 <flatcc_builder_create_union_vector_direct@@Base+0x87>
  408f2e:	mov    rax,QWORD PTR [rbp-0x8]
  408f32:	jmp    408f38 <flatcc_builder_create_union_vector_direct@@Base+0x8b>
  408f34:	mov    rax,QWORD PTR [rbp-0x8]
  408f38:	leave  
  408f39:	ret    

0000000000408f3a <flatcc_builder_start_union_vector@@Base>:
  408f3a:	endbr64 
  408f3e:	push   rbp
  408f3f:	mov    rbp,rsp
  408f42:	sub    rsp,0x10
  408f46:	mov    QWORD PTR [rbp-0x8],rdi
  408f4a:	mov    rax,QWORD PTR [rbp-0x8]
  408f4e:	mov    esi,0x4
  408f53:	mov    rdi,rax
  408f56:	call   4058a5 <flatcc_builder_get_user_frame_ptr@@Base+0x26>
  408f5b:	test   eax,eax
  408f5d:	je     408f66 <flatcc_builder_start_union_vector@@Base+0x2c>
  408f5f:	mov    eax,0xffffffff
  408f64:	jmp    408fa8 <flatcc_builder_start_union_vector@@Base+0x6e>
  408f66:	mov    rax,QWORD PTR [rbp-0x8]
  408f6a:	mov    rax,QWORD PTR [rax+0x30]
  408f6e:	mov    DWORD PTR [rax+0x10],0x8
  408f75:	mov    rax,QWORD PTR [rbp-0x8]
  408f79:	mov    rax,QWORD PTR [rax+0x30]
  408f7d:	mov    DWORD PTR [rax+0x14],0x0
  408f84:	mov    rax,QWORD PTR [rbp-0x8]
  408f88:	mov    rax,QWORD PTR [rax+0x30]
  408f8c:	mov    WORD PTR [rax+0xe],0x7
  408f92:	mov    rax,QWORD PTR [rbp-0x8]
  408f96:	mov    esi,0xfffffffc
  408f9b:	mov    rdi,rax
  408f9e:	call   404a7b <flatcc_builder_default_alloc@@Base+0x173>
  408fa3:	mov    eax,0x0
  408fa8:	leave  
  408fa9:	ret    

0000000000408faa <flatcc_builder_end_union_vector@@Base>:
  408faa:	endbr64 
  408fae:	push   rbp
  408faf:	mov    rbp,rsp
  408fb2:	sub    rsp,0x40
  408fb6:	mov    QWORD PTR [rbp-0x38],rdi
  408fba:	mov    DWORD PTR [rbp-0x8],0x0
  408fc1:	mov    DWORD PTR [rbp-0x4],0x0
  408fc8:	mov    rax,QWORD PTR [rbp-0x38]
  408fcc:	mov    rax,QWORD PTR [rax+0x30]
  408fd0:	movzx  eax,WORD PTR [rax+0xe]
  408fd4:	cmp    ax,0x7
  408fd8:	je     408ff9 <flatcc_builder_end_union_vector@@Base+0x4f>
  408fda:	lea    rcx,[rip+0x4d5f]        # 40dd40 <flatcc_builder_padding_base@@Base+0xb80>
  408fe1:	mov    edx,0x651
  408fe6:	lea    rsi,[rip+0x43d3]        # 40d3c0 <flatcc_builder_padding_base@@Base+0x200>
  408fed:	lea    rdi,[rip+0x4764]        # 40d758 <flatcc_builder_padding_base@@Base+0x598>
  408ff4:	call   403130 <__assert_fail@plt>
  408ff9:	mov    rax,QWORD PTR [rbp-0x38]
  408ffd:	mov    rdi,rax
  409000:	call   409109 <flatcc_builder_union_vector_count@@Base>
  409005:	mov    QWORD PTR [rbp-0x28],rax
  409009:	mov    rax,QWORD PTR [rbp-0x28]
  40900d:	mov    edx,eax
  40900f:	mov    eax,edx
  409011:	shl    eax,0x2
  409014:	add    edx,eax
  409016:	mov    rax,QWORD PTR [rbp-0x38]
  40901a:	mov    esi,edx
  40901c:	mov    rdi,rax
  40901f:	call   404b72 <flatcc_builder_default_alloc@@Base+0x26a>
  409024:	mov    QWORD PTR [rbp-0x20],rax
  409028:	cmp    QWORD PTR [rbp-0x20],0x0
  40902d:	jne    409038 <flatcc_builder_end_union_vector@@Base+0x8e>
  40902f:	mov    rax,QWORD PTR [rbp-0x8]
  409033:	jmp    4090f1 <flatcc_builder_end_union_vector@@Base+0x147>
  409038:	mov    rax,QWORD PTR [rbp-0x28]
  40903c:	lea    rdx,[rax*4+0x0]
  409044:	mov    rax,QWORD PTR [rbp-0x20]
  409048:	add    rax,rdx
  40904b:	mov    QWORD PTR [rbp-0x18],rax
  40904f:	mov    rax,QWORD PTR [rbp-0x38]
  409053:	mov    rdi,rax
  409056:	call   4090f3 <flatcc_builder_union_vector_edit@@Base>
  40905b:	mov    QWORD PTR [rbp-0x10],rax
  40905f:	mov    QWORD PTR [rbp-0x30],0x0
  409067:	jmp    4090bb <flatcc_builder_end_union_vector@@Base+0x111>
  409069:	mov    rax,QWORD PTR [rbp-0x30]
  40906d:	lea    rdx,[rax*8+0x0]
  409075:	mov    rax,QWORD PTR [rbp-0x10]
  409079:	add    rax,rdx
  40907c:	mov    rcx,QWORD PTR [rbp-0x18]
  409080:	mov    rdx,QWORD PTR [rbp-0x30]
  409084:	add    rdx,rcx
  409087:	movzx  eax,BYTE PTR [rax]
  40908a:	mov    BYTE PTR [rdx],al
  40908c:	mov    rax,QWORD PTR [rbp-0x30]
  409090:	lea    rdx,[rax*8+0x0]
  409098:	mov    rax,QWORD PTR [rbp-0x10]
  40909c:	add    rax,rdx
  40909f:	mov    rdx,QWORD PTR [rbp-0x30]
  4090a3:	lea    rcx,[rdx*4+0x0]
  4090ab:	mov    rdx,QWORD PTR [rbp-0x20]
  4090af:	add    rdx,rcx
  4090b2:	mov    eax,DWORD PTR [rax+0x4]
  4090b5:	mov    DWORD PTR [rdx],eax
  4090b7:	inc    QWORD PTR [rbp-0x30]
  4090bb:	mov    rax,QWORD PTR [rbp-0x30]
  4090bf:	cmp    rax,QWORD PTR [rbp-0x28]
  4090c3:	jb     409069 <flatcc_builder_end_union_vector@@Base+0xbf>
  4090c5:	mov    rcx,QWORD PTR [rbp-0x28]
  4090c9:	mov    rdx,QWORD PTR [rbp-0x20]
  4090cd:	mov    rsi,QWORD PTR [rbp-0x18]
  4090d1:	mov    rax,QWORD PTR [rbp-0x38]
  4090d5:	mov    rdi,rax
  4090d8:	call   408ead <flatcc_builder_create_union_vector_direct@@Base>
  4090dd:	mov    QWORD PTR [rbp-0x8],rax
  4090e1:	mov    rax,QWORD PTR [rbp-0x38]
  4090e5:	mov    rdi,rax
  4090e8:	call   405a80 <flatcc_builder_get_user_frame_ptr@@Base+0x201>
  4090ed:	mov    rax,QWORD PTR [rbp-0x8]
  4090f1:	leave  
  4090f2:	ret    

00000000004090f3 <flatcc_builder_union_vector_edit@@Base>:
  4090f3:	endbr64 
  4090f7:	push   rbp
  4090f8:	mov    rbp,rsp
  4090fb:	mov    QWORD PTR [rbp-0x8],rdi
  4090ff:	mov    rax,QWORD PTR [rbp-0x8]
  409103:	mov    rax,QWORD PTR [rax+0x18]
  409107:	pop    rbp
  409108:	ret    

0000000000409109 <flatcc_builder_union_vector_count@@Base>:
  409109:	endbr64 
  40910d:	push   rbp
  40910e:	mov    rbp,rsp
  409111:	mov    QWORD PTR [rbp-0x8],rdi
  409115:	mov    rax,QWORD PTR [rbp-0x8]
  409119:	mov    rax,QWORD PTR [rax+0x30]
  40911d:	mov    eax,DWORD PTR [rax+0x14]
  409120:	mov    eax,eax
  409122:	pop    rbp
  409123:	ret    

0000000000409124 <flatcc_builder_extend_union_vector@@Base>:
  409124:	endbr64 
  409128:	push   rbp
  409129:	mov    rbp,rsp
  40912c:	sub    rsp,0x10
  409130:	mov    QWORD PTR [rbp-0x8],rdi
  409134:	mov    QWORD PTR [rbp-0x10],rsi
  409138:	mov    rax,QWORD PTR [rbp-0x10]
  40913c:	mov    ecx,eax
  40913e:	mov    rax,QWORD PTR [rbp-0x8]
  409142:	mov    edx,0x1fffffff
  409147:	mov    esi,ecx
  409149:	mov    rdi,rax
  40914c:	call   406b17 <flatcc_builder_end_struct@@Base+0x92>
  409151:	test   eax,eax
  409153:	je     40915c <flatcc_builder_extend_union_vector@@Base+0x38>
  409155:	mov    eax,0x0
  40915a:	jmp    409175 <flatcc_builder_extend_union_vector@@Base+0x51>
  40915c:	mov    rax,QWORD PTR [rbp-0x10]
  409160:	lea    edx,[rax*8+0x0]
  409167:	mov    rax,QWORD PTR [rbp-0x8]
  40916b:	mov    esi,edx
  40916d:	mov    rdi,rax
  409170:	call   404b72 <flatcc_builder_default_alloc@@Base+0x26a>
  409175:	leave  
  409176:	ret    

0000000000409177 <flatcc_builder_truncate_union_vector@@Base>:
  409177:	endbr64 
  40917b:	push   rbp
  40917c:	mov    rbp,rsp
  40917f:	sub    rsp,0x10
  409183:	mov    QWORD PTR [rbp-0x8],rdi
  409187:	mov    QWORD PTR [rbp-0x10],rsi
  40918b:	mov    rax,QWORD PTR [rbp-0x8]
  40918f:	mov    rax,QWORD PTR [rax+0x30]
  409193:	movzx  eax,WORD PTR [rax+0xe]
  409197:	cmp    ax,0x7
  40919b:	je     4091bc <flatcc_builder_truncate_union_vector@@Base+0x45>
  40919d:	lea    rcx,[rip+0x4bbc]        # 40dd60 <flatcc_builder_padding_base@@Base+0xba0>
  4091a4:	mov    edx,0x681
  4091a9:	lea    rsi,[rip+0x4210]        # 40d3c0 <flatcc_builder_padding_base@@Base+0x200>
  4091b0:	lea    rdi,[rip+0x45a1]        # 40d758 <flatcc_builder_padding_base@@Base+0x598>
  4091b7:	call   403130 <__assert_fail@plt>
  4091bc:	mov    rax,QWORD PTR [rbp-0x8]
  4091c0:	mov    rax,QWORD PTR [rax+0x30]
  4091c4:	mov    eax,DWORD PTR [rax+0x14]
  4091c7:	mov    rdx,QWORD PTR [rbp-0x10]
  4091cb:	cmp    eax,edx
  4091cd:	jae    409208 <flatcc_builder_truncate_union_vector@@Base+0x91>
  4091cf:	mov    rax,QWORD PTR [rbp-0x8]
  4091d3:	mov    rax,QWORD PTR [rax+0x30]
  4091d7:	mov    eax,DWORD PTR [rax+0x14]
  4091da:	mov    rdx,QWORD PTR [rbp-0x10]
  4091de:	cmp    eax,edx
  4091e0:	jae    409201 <flatcc_builder_truncate_union_vector@@Base+0x8a>
  4091e2:	lea    rcx,[rip+0x4b77]        # 40dd60 <flatcc_builder_padding_base@@Base+0xba0>
  4091e9:	mov    edx,0x682
  4091ee:	lea    rsi,[rip+0x41cb]        # 40d3c0 <flatcc_builder_padding_base@@Base+0x200>
  4091f5:	lea    rdi,[rip+0x440c]        # 40d608 <flatcc_builder_padding_base@@Base+0x448>
  4091fc:	call   403130 <__assert_fail@plt>
  409201:	mov    eax,0xffffffff
  409206:	jmp    40924b <flatcc_builder_truncate_union_vector@@Base+0xd4>
  409208:	mov    rax,QWORD PTR [rbp-0x8]
  40920c:	mov    rax,QWORD PTR [rax+0x30]
  409210:	mov    edx,DWORD PTR [rax+0x14]
  409213:	mov    rax,QWORD PTR [rbp-0x10]
  409217:	mov    ecx,eax
  409219:	mov    rax,QWORD PTR [rbp-0x8]
  40921d:	mov    rax,QWORD PTR [rax+0x30]
  409221:	sub    edx,ecx
  409223:	mov    DWORD PTR [rax+0x14],edx
  409226:	mov    rax,QWORD PTR [rbp-0x8]
  40922a:	mov    rax,QWORD PTR [rax+0x30]
  40922e:	mov    eax,DWORD PTR [rax+0x10]
  409231:	mov    rdx,QWORD PTR [rbp-0x10]
  409235:	imul   edx,eax
  409238:	mov    rax,QWORD PTR [rbp-0x8]
  40923c:	mov    esi,edx
  40923e:	mov    rdi,rax
  409241:	call   404bee <flatcc_builder_default_alloc@@Base+0x2e6>
  409246:	mov    eax,0x0
  40924b:	leave  
  40924c:	ret    

000000000040924d <flatcc_builder_union_vector_push@@Base>:
  40924d:	endbr64 
  409251:	push   rbp
  409252:	mov    rbp,rsp
  409255:	sub    rsp,0x20
  409259:	mov    QWORD PTR [rbp-0x18],rdi
  40925d:	mov    QWORD PTR [rbp-0x20],rsi
  409261:	mov    rax,QWORD PTR [rbp-0x18]
  409265:	mov    rax,QWORD PTR [rax+0x30]
  409269:	movzx  eax,WORD PTR [rax+0xe]
  40926d:	cmp    ax,0x7
  409271:	je     409292 <flatcc_builder_union_vector_push@@Base+0x45>
  409273:	lea    rcx,[rip+0x4b26]        # 40dda0 <flatcc_builder_padding_base@@Base+0xbe0>
  40927a:	mov    edx,0x68d
  40927f:	lea    rsi,[rip+0x413a]        # 40d3c0 <flatcc_builder_padding_base@@Base+0x200>
  409286:	lea    rdi,[rip+0x44cb]        # 40d758 <flatcc_builder_padding_base@@Base+0x598>
  40928d:	call   403130 <__assert_fail@plt>
  409292:	mov    rax,QWORD PTR [rbp-0x18]
  409296:	mov    rax,QWORD PTR [rax+0x30]
  40929a:	mov    eax,DWORD PTR [rax+0x14]
  40929d:	cmp    eax,0x1fffffff
  4092a2:	jne    4092ab <flatcc_builder_union_vector_push@@Base+0x5e>
  4092a4:	mov    eax,0x0
  4092a9:	jmp    4092f5 <flatcc_builder_union_vector_push@@Base+0xa8>
  4092ab:	mov    rax,QWORD PTR [rbp-0x18]
  4092af:	mov    rax,QWORD PTR [rax+0x30]
  4092b3:	mov    edx,DWORD PTR [rax+0x14]
  4092b6:	mov    rax,QWORD PTR [rbp-0x18]
  4092ba:	mov    rax,QWORD PTR [rax+0x30]
  4092be:	inc    edx
  4092c0:	mov    DWORD PTR [rax+0x14],edx
  4092c3:	mov    rax,QWORD PTR [rbp-0x18]
  4092c7:	mov    esi,0x8
  4092cc:	mov    rdi,rax
  4092cf:	call   404b72 <flatcc_builder_default_alloc@@Base+0x26a>
  4092d4:	mov    QWORD PTR [rbp-0x8],rax
  4092d8:	cmp    QWORD PTR [rbp-0x8],0x0
  4092dd:	jne    4092e6 <flatcc_builder_union_vector_push@@Base+0x99>
  4092df:	mov    eax,0x0
  4092e4:	jmp    4092f5 <flatcc_builder_union_vector_push@@Base+0xa8>
  4092e6:	mov    rax,QWORD PTR [rbp-0x8]
  4092ea:	mov    rdx,QWORD PTR [rbp-0x20]
  4092ee:	mov    QWORD PTR [rax],rdx
  4092f1:	mov    rax,QWORD PTR [rbp-0x8]
  4092f5:	leave  
  4092f6:	ret    

00000000004092f7 <flatcc_builder_append_union_vector@@Base>:
  4092f7:	endbr64 
  4092fb:	push   rbp
  4092fc:	mov    rbp,rsp
  4092ff:	sub    rsp,0x20
  409303:	mov    QWORD PTR [rbp-0x8],rdi
  409307:	mov    QWORD PTR [rbp-0x10],rsi
  40930b:	mov    QWORD PTR [rbp-0x18],rdx
  40930f:	mov    rax,QWORD PTR [rbp-0x8]
  409313:	mov    rax,QWORD PTR [rax+0x30]
  409317:	movzx  eax,WORD PTR [rax+0xe]
  40931b:	cmp    ax,0x7
  40931f:	je     409340 <flatcc_builder_append_union_vector@@Base+0x49>
  409321:	lea    rcx,[rip+0x4ab8]        # 40dde0 <flatcc_builder_padding_base@@Base+0xc20>
  409328:	mov    edx,0x69c
  40932d:	lea    rsi,[rip+0x408c]        # 40d3c0 <flatcc_builder_padding_base@@Base+0x200>
  409334:	lea    rdi,[rip+0x441d]        # 40d758 <flatcc_builder_padding_base@@Base+0x598>
  40933b:	call   403130 <__assert_fail@plt>
  409340:	mov    rax,QWORD PTR [rbp-0x18]
  409344:	mov    ecx,eax
  409346:	mov    rax,QWORD PTR [rbp-0x8]
  40934a:	mov    edx,0x1fffffff
  40934f:	mov    esi,ecx
  409351:	mov    rdi,rax
  409354:	call   406b17 <flatcc_builder_end_struct@@Base+0x92>
  409359:	test   eax,eax
  40935b:	je     409364 <flatcc_builder_append_union_vector@@Base+0x6d>
  40935d:	mov    eax,0x0
  409362:	jmp    409382 <flatcc_builder_append_union_vector@@Base+0x8b>
  409364:	mov    rax,QWORD PTR [rbp-0x18]
  409368:	lea    edx,[rax*8+0x0]
  40936f:	mov    rcx,QWORD PTR [rbp-0x10]
  409373:	mov    rax,QWORD PTR [rbp-0x8]
  409377:	mov    rsi,rcx
  40937a:	mov    rdi,rax
  40937d:	call   404c3a <flatcc_builder_default_alloc@@Base+0x332>
  409382:	leave  
  409383:	ret    

0000000000409384 <flatcc_builder_create_string@@Base>:
  409384:	endbr64 
  409388:	push   rbp
  409389:	mov    rbp,rsp
  40938c:	sub    rsp,0xd0
  409393:	mov    QWORD PTR [rbp-0xb8],rdi
  40939a:	mov    QWORD PTR [rbp-0xc0],rsi
  4093a1:	mov    QWORD PTR [rbp-0xc8],rdx
  4093a8:	mov    rax,QWORD PTR fs:0x28
  4093b1:	mov    QWORD PTR [rbp-0x8],rax
  4093b5:	xor    eax,eax
  4093b7:	mov    eax,0xffffffff
  4093bc:	cmp    QWORD PTR [rbp-0xc8],rax
  4093c3:	jbe    4093cf <flatcc_builder_create_string@@Base+0x4b>
  4093c5:	mov    eax,0x0
  4093ca:	jmp    409572 <flatcc_builder_create_string@@Base+0x1ee>
  4093cf:	mov    rax,QWORD PTR [rbp-0xc8]
  4093d6:	mov    edi,eax
  4093d8:	call   404848 <main@@Base+0x173>
  4093dd:	mov    DWORD PTR [rbp-0xa8],eax
  4093e3:	mov    rax,QWORD PTR [rbp-0xc8]
  4093ea:	lea    ecx,[rax+0x1]
  4093ed:	mov    rax,QWORD PTR [rbp-0xb8]
  4093f4:	mov    edx,0x4
  4093f9:	mov    esi,ecx
  4093fb:	mov    rdi,rax
  4093fe:	call   405b47 <flatcc_builder_get_user_frame_ptr@@Base+0x2c8>
  409403:	inc    eax
  409405:	mov    DWORD PTR [rbp-0xa4],eax
  40940b:	mov    QWORD PTR [rbp-0xa0],0x0
  409416:	mov    DWORD PTR [rbp-0x98],0x0
  409420:	mov    rax,QWORD PTR [rbp-0xa0]
  409427:	add    rax,0x4
  40942b:	mov    QWORD PTR [rbp-0xa0],rax
  409432:	mov    eax,DWORD PTR [rbp-0x98]
  409438:	cdqe   
  40943a:	shl    rax,0x4
  40943e:	add    rax,rbp
  409441:	lea    rdx,[rax-0x90]
  409448:	lea    rax,[rbp-0xa8]
  40944f:	mov    QWORD PTR [rdx],rax
  409452:	mov    eax,DWORD PTR [rbp-0x98]
  409458:	cdqe   
  40945a:	shl    rax,0x4
  40945e:	add    rax,rbp
  409461:	sub    rax,0x88
  409467:	mov    QWORD PTR [rax],0x4
  40946e:	mov    eax,DWORD PTR [rbp-0x98]
  409474:	inc    eax
  409476:	mov    DWORD PTR [rbp-0x98],eax
  40947c:	cmp    QWORD PTR [rbp-0xc8],0x0
  409484:	je     4094ec <flatcc_builder_create_string@@Base+0x168>
  409486:	mov    rdx,QWORD PTR [rbp-0xa0]
  40948d:	mov    rax,QWORD PTR [rbp-0xc8]
  409494:	add    rax,rdx
  409497:	mov    QWORD PTR [rbp-0xa0],rax
  40949e:	mov    eax,DWORD PTR [rbp-0x98]
  4094a4:	cdqe   
  4094a6:	shl    rax,0x4
  4094aa:	add    rax,rbp
  4094ad:	lea    rdx,[rax-0x90]
  4094b4:	mov    rax,QWORD PTR [rbp-0xc0]
  4094bb:	mov    QWORD PTR [rdx],rax
  4094be:	mov    eax,DWORD PTR [rbp-0x98]
  4094c4:	cdqe   
  4094c6:	shl    rax,0x4
  4094ca:	add    rax,rbp
  4094cd:	lea    rdx,[rax-0x88]
  4094d4:	mov    rax,QWORD PTR [rbp-0xc8]
  4094db:	mov    QWORD PTR [rdx],rax
  4094de:	mov    eax,DWORD PTR [rbp-0x98]
  4094e4:	inc    eax
  4094e6:	mov    DWORD PTR [rbp-0x98],eax
  4094ec:	cmp    DWORD PTR [rbp-0xa4],0x0
  4094f3:	je     409559 <flatcc_builder_create_string@@Base+0x1d5>
  4094f5:	mov    rdx,QWORD PTR [rbp-0xa0]
  4094fc:	mov    eax,DWORD PTR [rbp-0xa4]
  409502:	add    rax,rdx
  409505:	mov    QWORD PTR [rbp-0xa0],rax
  40950c:	mov    eax,DWORD PTR [rbp-0x98]
  409512:	cdqe   
  409514:	shl    rax,0x4
  409518:	add    rax,rbp
  40951b:	sub    rax,0x90
  409521:	mov    rdx,0x40d1c0
  409528:	mov    QWORD PTR [rax],rdx
  40952b:	mov    edx,DWORD PTR [rbp-0x98]
  409531:	mov    eax,DWORD PTR [rbp-0xa4]
  409537:	movsxd rdx,edx
  40953a:	shl    rdx,0x4
  40953e:	add    rdx,rbp
  409541:	sub    rdx,0x88
  409548:	mov    QWORD PTR [rdx],rax
  40954b:	mov    eax,DWORD PTR [rbp-0x98]
  409551:	inc    eax
  409553:	mov    DWORD PTR [rbp-0x98],eax
  409559:	lea    rdx,[rbp-0xa0]
  409560:	mov    rax,QWORD PTR [rbp-0xb8]
  409567:	mov    rsi,rdx
  40956a:	mov    rdi,rax
  40956d:	call   405b91 <flatcc_builder_get_user_frame_ptr@@Base+0x312>
  409572:	mov    rcx,QWORD PTR [rbp-0x8]
  409576:	xor    rcx,QWORD PTR fs:0x28
  40957f:	je     409586 <flatcc_builder_create_string@@Base+0x202>
  409581:	call   403120 <__stack_chk_fail@plt>
  409586:	leave  
  409587:	ret    

0000000000409588 <flatcc_builder_create_string_str@@Base>:
  409588:	endbr64 
  40958c:	push   rbp
  40958d:	mov    rbp,rsp
  409590:	sub    rsp,0x10
  409594:	mov    QWORD PTR [rbp-0x8],rdi
  409598:	mov    QWORD PTR [rbp-0x10],rsi
  40959c:	mov    rax,QWORD PTR [rbp-0x10]
  4095a0:	mov    rdi,rax
  4095a3:	call   403110 <strlen@plt>
  4095a8:	mov    rdx,rax
  4095ab:	mov    rcx,QWORD PTR [rbp-0x10]
  4095af:	mov    rax,QWORD PTR [rbp-0x8]
  4095b3:	mov    rsi,rcx
  4095b6:	mov    rdi,rax
  4095b9:	call   409384 <flatcc_builder_create_string@@Base>
  4095be:	leave  
  4095bf:	ret    

00000000004095c0 <flatcc_builder_create_string_strn@@Base>:
  4095c0:	endbr64 
  4095c4:	push   rbp
  4095c5:	mov    rbp,rsp
  4095c8:	sub    rsp,0x20
  4095cc:	mov    QWORD PTR [rbp-0x8],rdi
  4095d0:	mov    QWORD PTR [rbp-0x10],rsi
  4095d4:	mov    QWORD PTR [rbp-0x18],rdx
  4095d8:	mov    rdx,QWORD PTR [rbp-0x18]
  4095dc:	mov    rax,QWORD PTR [rbp-0x10]
  4095e0:	mov    rsi,rdx
  4095e3:	mov    rdi,rax
  4095e6:	call   4048c8 <main@@Base+0x1f3>
  4095eb:	mov    rdx,rax
  4095ee:	mov    rcx,QWORD PTR [rbp-0x10]
  4095f2:	mov    rax,QWORD PTR [rbp-0x8]
  4095f6:	mov    rsi,rcx
  4095f9:	mov    rdi,rax
  4095fc:	call   409384 <flatcc_builder_create_string@@Base>
  409601:	leave  
  409602:	ret    

0000000000409603 <flatcc_builder_end_string@@Base>:
  409603:	endbr64 
  409607:	push   rbp
  409608:	mov    rbp,rsp
  40960b:	sub    rsp,0x20
  40960f:	mov    QWORD PTR [rbp-0x18],rdi
  409613:	mov    rax,QWORD PTR [rbp-0x18]
  409617:	mov    rax,QWORD PTR [rax+0x30]
  40961b:	movzx  eax,WORD PTR [rax+0xe]
  40961f:	cmp    ax,0x6
  409623:	je     409644 <flatcc_builder_end_string@@Base+0x41>
  409625:	lea    rcx,[rip+0x47e4]        # 40de10 <flatcc_builder_padding_base@@Base+0xc50>
  40962c:	mov    edx,0x6c4
  409631:	lea    rsi,[rip+0x3d88]        # 40d3c0 <flatcc_builder_padding_base@@Base+0x200>
  409638:	lea    rdi,[rip+0x3f71]        # 40d5b0 <flatcc_builder_padding_base@@Base+0x3f0>
  40963f:	call   403130 <__assert_fail@plt>
  409644:	mov    rax,QWORD PTR [rbp-0x18]
  409648:	mov    rax,QWORD PTR [rax+0x30]
  40964c:	mov    edx,DWORD PTR [rax+0x14]
  40964f:	mov    rax,QWORD PTR [rbp-0x18]
  409653:	mov    eax,DWORD PTR [rax+0x20]
  409656:	cmp    edx,eax
  409658:	je     409679 <flatcc_builder_end_string@@Base+0x76>
  40965a:	lea    rcx,[rip+0x47af]        # 40de10 <flatcc_builder_padding_base@@Base+0xc50>
  409661:	mov    edx,0x6c5
  409666:	lea    rsi,[rip+0x3d53]        # 40d3c0 <flatcc_builder_padding_base@@Base+0x200>
  40966d:	lea    rdi,[rip+0x411c]        # 40d790 <flatcc_builder_padding_base@@Base+0x5d0>
  409674:	call   403130 <__assert_fail@plt>
  409679:	mov    rax,QWORD PTR [rbp-0x18]
  40967d:	mov    eax,DWORD PTR [rax+0x20]
  409680:	mov    edx,eax
  409682:	mov    rax,QWORD PTR [rbp-0x18]
  409686:	mov    rcx,QWORD PTR [rax+0x18]
  40968a:	mov    rax,QWORD PTR [rbp-0x18]
  40968e:	mov    rsi,rcx
  409691:	mov    rdi,rax
  409694:	call   409384 <flatcc_builder_create_string@@Base>
  409699:	mov    DWORD PTR [rbp-0x4],eax
  40969c:	cmp    DWORD PTR [rbp-0x4],0x0
  4096a0:	jne    4096a9 <flatcc_builder_end_string@@Base+0xa6>
  4096a2:	mov    eax,0x0
  4096a7:	jmp    4096b8 <flatcc_builder_end_string@@Base+0xb5>
  4096a9:	mov    rax,QWORD PTR [rbp-0x18]
  4096ad:	mov    rdi,rax
  4096b0:	call   405a80 <flatcc_builder_get_user_frame_ptr@@Base+0x201>
  4096b5:	mov    eax,DWORD PTR [rbp-0x4]
  4096b8:	leave  
  4096b9:	ret    

00000000004096ba <flatcc_builder_string_edit@@Base>:
  4096ba:	endbr64 
  4096be:	push   rbp
  4096bf:	mov    rbp,rsp
  4096c2:	mov    QWORD PTR [rbp-0x8],rdi
  4096c6:	mov    rax,QWORD PTR [rbp-0x8]
  4096ca:	mov    rax,QWORD PTR [rax+0x18]
  4096ce:	pop    rbp
  4096cf:	ret    

00000000004096d0 <flatcc_builder_string_len@@Base>:
  4096d0:	endbr64 
  4096d4:	push   rbp
  4096d5:	mov    rbp,rsp
  4096d8:	mov    QWORD PTR [rbp-0x8],rdi
  4096dc:	mov    rax,QWORD PTR [rbp-0x8]
  4096e0:	mov    rax,QWORD PTR [rax+0x30]
  4096e4:	mov    eax,DWORD PTR [rax+0x14]
  4096e7:	mov    eax,eax
  4096e9:	pop    rbp
  4096ea:	ret    

00000000004096eb <flatcc_builder_table_add@@Base>:
  4096eb:	endbr64 
  4096ef:	push   rbp
  4096f0:	mov    rbp,rsp
  4096f3:	sub    rsp,0x20
  4096f7:	mov    QWORD PTR [rbp-0x8],rdi
  4096fb:	mov    DWORD PTR [rbp-0xc],esi
  4096fe:	mov    QWORD PTR [rbp-0x18],rdx
  409702:	mov    eax,ecx
  409704:	mov    WORD PTR [rbp-0x10],ax
  409708:	mov    rax,QWORD PTR [rbp-0x8]
  40970c:	mov    rax,QWORD PTR [rax+0x30]
  409710:	movzx  eax,WORD PTR [rax+0xe]
  409714:	cmp    ax,0x3
  409718:	je     409739 <flatcc_builder_table_add@@Base+0x4e>
  40971a:	lea    rcx,[rip+0x470f]        # 40de30 <flatcc_builder_padding_base@@Base+0xc70>
  409721:	mov    edx,0x6ed
  409726:	lea    rsi,[rip+0x3c93]        # 40d3c0 <flatcc_builder_padding_base@@Base+0x200>
  40972d:	lea    rdi,[rip+0x3f64]        # 40d698 <flatcc_builder_padding_base@@Base+0x4d8>
  409734:	call   403130 <__assert_fail@plt>
  409739:	cmp    DWORD PTR [rbp-0xc],0x0
  40973d:	js     409748 <flatcc_builder_table_add@@Base+0x5d>
  40973f:	cmp    DWORD PTR [rbp-0xc],0x7ffc
  409746:	jle    409767 <flatcc_builder_table_add@@Base+0x7c>
  409748:	lea    rcx,[rip+0x46e1]        # 40de30 <flatcc_builder_padding_base@@Base+0xc70>
  40974f:	mov    edx,0x6ee
  409754:	lea    rsi,[rip+0x3c65]        # 40d3c0 <flatcc_builder_padding_base@@Base+0x200>
  40975b:	lea    rdi,[rip+0x4056]        # 40d7b8 <flatcc_builder_padding_base@@Base+0x5f8>
  409762:	call   403130 <__assert_fail@plt>
  409767:	mov    rax,QWORD PTR [rbp-0x8]
  40976b:	movzx  eax,WORD PTR [rax+0xea]
  409772:	cmp    WORD PTR [rbp-0x10],ax
  409776:	jbe    409787 <flatcc_builder_table_add@@Base+0x9c>
  409778:	mov    rdx,QWORD PTR [rbp-0x8]
  40977c:	movzx  eax,WORD PTR [rbp-0x10]
  409780:	mov    WORD PTR [rdx+0xea],ax
  409787:	mov    rax,QWORD PTR [rbp-0x8]
  40978b:	mov    rax,QWORD PTR [rax+0x8]
  40978f:	mov    edx,DWORD PTR [rbp-0xc]
  409792:	movsxd rdx,edx
  409795:	add    rdx,rdx
  409798:	add    rax,rdx
  40979b:	movzx  eax,WORD PTR [rax]
  40979e:	test   ax,ax
  4097a1:	je     4097c2 <flatcc_builder_table_add@@Base+0xd7>
  4097a3:	lea    rcx,[rip+0x4686]        # 40de30 <flatcc_builder_padding_base@@Base+0xc70>
  4097aa:	mov    edx,0x6f8
  4097af:	lea    rsi,[rip+0x3c0a]        # 40d3c0 <flatcc_builder_padding_base@@Base+0x200>
  4097b6:	lea    rdi,[rip+0x3c63]        # 40d420 <flatcc_builder_padding_base@@Base+0x260>
  4097bd:	call   403130 <__assert_fail@plt>
  4097c2:	mov    rax,QWORD PTR [rbp-0x8]
  4097c6:	mov    edx,DWORD PTR [rax+0x14]
  4097c9:	mov    eax,DWORD PTR [rbp-0xc]
  4097cc:	xor    eax,edx
  4097ce:	imul   eax,eax,0x9e3779b1
  4097d4:	mov    rdx,QWORD PTR [rbp-0x18]
  4097d8:	xor    eax,edx
  4097da:	imul   edx,eax,0x9e3779b1
  4097e0:	mov    rax,QWORD PTR [rbp-0x8]
  4097e4:	mov    DWORD PTR [rax+0x14],edx
  4097e7:	mov    eax,DWORD PTR [rbp-0xc]
  4097ea:	movzx  ecx,ax
  4097ed:	movzx  edx,WORD PTR [rbp-0x10]
  4097f1:	mov    rax,QWORD PTR [rbp-0x18]
  4097f5:	mov    esi,eax
  4097f7:	mov    rax,QWORD PTR [rbp-0x8]
  4097fb:	mov    rdi,rax
  4097fe:	call   404c8c <flatcc_builder_default_alloc@@Base+0x384>
  409803:	leave  
  409804:	ret    

0000000000409805 <flatcc_builder_table_edit@@Base>:
  409805:	endbr64 
  409809:	push   rbp
  40980a:	mov    rbp,rsp
  40980d:	sub    rsp,0x10
  409811:	mov    QWORD PTR [rbp-0x8],rdi
  409815:	mov    QWORD PTR [rbp-0x10],rsi
  409819:	mov    rax,QWORD PTR [rbp-0x8]
  40981d:	mov    rax,QWORD PTR [rax+0x30]
  409821:	movzx  eax,WORD PTR [rax+0xe]
  409825:	cmp    ax,0x3
  409829:	je     40984a <flatcc_builder_table_edit@@Base+0x45>
  40982b:	lea    rcx,[rip+0x461e]        # 40de50 <flatcc_builder_padding_base@@Base+0xc90>
  409832:	mov    edx,0x702
  409837:	lea    rsi,[rip+0x3b82]        # 40d3c0 <flatcc_builder_padding_base@@Base+0x200>
  40983e:	lea    rdi,[rip+0x3e53]        # 40d698 <flatcc_builder_padding_base@@Base+0x4d8>
  409845:	call   403130 <__assert_fail@plt>
  40984a:	mov    rax,QWORD PTR [rbp-0x8]
  40984e:	mov    rdx,QWORD PTR [rax+0x18]
  409852:	mov    rax,QWORD PTR [rbp-0x8]
  409856:	mov    eax,DWORD PTR [rax+0x20]
  409859:	mov    eax,eax
  40985b:	sub    rax,QWORD PTR [rbp-0x10]
  40985f:	add    rax,rdx
  409862:	leave  
  409863:	ret    

0000000000409864 <flatcc_builder_table_add_copy@@Base>:
  409864:	endbr64 
  409868:	push   rbp
  409869:	mov    rbp,rsp
  40986c:	sub    rsp,0x30
  409870:	mov    QWORD PTR [rbp-0x18],rdi
  409874:	mov    DWORD PTR [rbp-0x1c],esi
  409877:	mov    QWORD PTR [rbp-0x28],rdx
  40987b:	mov    QWORD PTR [rbp-0x30],rcx
  40987f:	mov    eax,r8d
  409882:	mov    WORD PTR [rbp-0x20],ax
  409886:	movzx  ecx,WORD PTR [rbp-0x20]
  40988a:	mov    rdx,QWORD PTR [rbp-0x30]
  40988e:	mov    esi,DWORD PTR [rbp-0x1c]
  409891:	mov    rax,QWORD PTR [rbp-0x18]
  409895:	mov    rdi,rax
  409898:	call   4096eb <flatcc_builder_table_add@@Base>
  40989d:	mov    QWORD PTR [rbp-0x8],rax
  4098a1:	cmp    QWORD PTR [rbp-0x8],0x0
  4098a6:	je     4098bf <flatcc_builder_table_add_copy@@Base+0x5b>
  4098a8:	mov    rdx,QWORD PTR [rbp-0x30]
  4098ac:	mov    rcx,QWORD PTR [rbp-0x28]
  4098b0:	mov    rax,QWORD PTR [rbp-0x8]
  4098b4:	mov    rsi,rcx
  4098b7:	mov    rdi,rax
  4098ba:	call   403170 <memcpy@plt>
  4098bf:	mov    rax,QWORD PTR [rbp-0x8]
  4098c3:	leave  
  4098c4:	ret    

00000000004098c5 <flatcc_builder_table_add_offset@@Base>:
  4098c5:	endbr64 
  4098c9:	push   rbp
  4098ca:	mov    rbp,rsp
  4098cd:	sub    rsp,0x10
  4098d1:	mov    QWORD PTR [rbp-0x8],rdi
  4098d5:	mov    DWORD PTR [rbp-0xc],esi
  4098d8:	mov    rax,QWORD PTR [rbp-0x8]
  4098dc:	mov    rax,QWORD PTR [rax+0x30]
  4098e0:	movzx  eax,WORD PTR [rax+0xe]
  4098e4:	cmp    ax,0x3
  4098e8:	je     409909 <flatcc_builder_table_add_offset@@Base+0x44>
  4098ea:	lea    rcx,[rip+0x458f]        # 40de80 <flatcc_builder_padding_base@@Base+0xcc0>
  4098f1:	mov    edx,0x713
  4098f6:	lea    rsi,[rip+0x3ac3]        # 40d3c0 <flatcc_builder_padding_base@@Base+0x200>
  4098fd:	lea    rdi,[rip+0x3d94]        # 40d698 <flatcc_builder_padding_base@@Base+0x4d8>
  409904:	call   403130 <__assert_fail@plt>
  409909:	cmp    DWORD PTR [rbp-0xc],0x0
  40990d:	js     409918 <flatcc_builder_table_add_offset@@Base+0x53>
  40990f:	cmp    DWORD PTR [rbp-0xc],0x7ffc
  409916:	jle    409937 <flatcc_builder_table_add_offset@@Base+0x72>
  409918:	lea    rcx,[rip+0x4561]        # 40de80 <flatcc_builder_padding_base@@Base+0xcc0>
  40991f:	mov    edx,0x714
  409924:	lea    rsi,[rip+0x3a95]        # 40d3c0 <flatcc_builder_padding_base@@Base+0x200>
  40992b:	lea    rdi,[rip+0x3e86]        # 40d7b8 <flatcc_builder_padding_base@@Base+0x5f8>
  409932:	call   403130 <__assert_fail@plt>
  409937:	mov    rax,QWORD PTR [rbp-0x8]
  40993b:	mov    rax,QWORD PTR [rax+0x8]
  40993f:	mov    edx,DWORD PTR [rbp-0xc]
  409942:	movsxd rdx,edx
  409945:	add    rdx,rdx
  409948:	add    rax,rdx
  40994b:	movzx  eax,WORD PTR [rax]
  40994e:	test   ax,ax
  409951:	je     409972 <flatcc_builder_table_add_offset@@Base+0xad>
  409953:	lea    rcx,[rip+0x4526]        # 40de80 <flatcc_builder_padding_base@@Base+0xcc0>
  40995a:	mov    edx,0x71b
  40995f:	lea    rsi,[rip+0x3a5a]        # 40d3c0 <flatcc_builder_padding_base@@Base+0x200>
  409966:	lea    rdi,[rip+0x3ab3]        # 40d420 <flatcc_builder_padding_base@@Base+0x260>
  40996d:	call   403130 <__assert_fail@plt>
  409972:	mov    rax,QWORD PTR [rbp-0x8]
  409976:	mov    edx,DWORD PTR [rax+0x14]
  409979:	mov    eax,DWORD PTR [rbp-0xc]
  40997c:	xor    eax,edx
  40997e:	imul   eax,eax,0x9e3779b1
  409984:	xor    eax,0x4
  409987:	imul   edx,eax,0x9e3779b1
  40998d:	mov    rax,QWORD PTR [rbp-0x8]
  409991:	mov    DWORD PTR [rax+0x14],edx
  409994:	mov    eax,DWORD PTR [rbp-0xc]
  409997:	movzx  edx,ax
  40999a:	mov    rax,QWORD PTR [rbp-0x8]
  40999e:	mov    esi,edx
  4099a0:	mov    rdi,rax
  4099a3:	call   404d54 <flatcc_builder_default_alloc@@Base+0x44c>
  4099a8:	leave  
  4099a9:	ret    

00000000004099aa <flatcc_builder_push_buffer_alignment@@Base>:
  4099aa:	endbr64 
  4099ae:	push   rbp
  4099af:	mov    rbp,rsp
  4099b2:	mov    QWORD PTR [rbp-0x18],rdi
  4099b6:	mov    rax,QWORD PTR [rbp-0x18]
  4099ba:	movzx  eax,WORD PTR [rax+0xe8]
  4099c1:	mov    WORD PTR [rbp-0x2],ax
  4099c5:	mov    rax,QWORD PTR [rbp-0x18]
  4099c9:	mov    WORD PTR [rax+0xe8],0x4
  4099d2:	movzx  eax,WORD PTR [rbp-0x2]
  4099d6:	pop    rbp
  4099d7:	ret    

00000000004099d8 <flatcc_builder_pop_buffer_alignment@@Base>:
  4099d8:	endbr64 
  4099dc:	push   rbp
  4099dd:	mov    rbp,rsp
  4099e0:	sub    rsp,0x10
  4099e4:	mov    QWORD PTR [rbp-0x8],rdi
  4099e8:	mov    eax,esi
  4099ea:	mov    WORD PTR [rbp-0xc],ax
  4099ee:	movzx  edx,WORD PTR [rbp-0xc]
  4099f2:	mov    rax,QWORD PTR [rbp-0x8]
  4099f6:	mov    esi,edx
  4099f8:	mov    rdi,rax
  4099fb:	call   405574 <flatcc_builder_clear@@Base+0x99>
  409a00:	nop
  409a01:	leave  
  409a02:	ret    

0000000000409a03 <flatcc_builder_get_buffer_alignment@@Base>:
  409a03:	endbr64 
  409a07:	push   rbp
  409a08:	mov    rbp,rsp
  409a0b:	mov    QWORD PTR [rbp-0x8],rdi
  409a0f:	mov    rax,QWORD PTR [rbp-0x8]
  409a13:	movzx  eax,WORD PTR [rax+0xe8]
  409a1a:	pop    rbp
  409a1b:	ret    

0000000000409a1c <flatcc_builder_set_vtable_clustering@@Base>:
  409a1c:	endbr64 
  409a20:	push   rbp
  409a21:	mov    rbp,rsp
  409a24:	mov    QWORD PTR [rbp-0x8],rdi
  409a28:	mov    DWORD PTR [rbp-0xc],esi
  409a2b:	cmp    DWORD PTR [rbp-0xc],0x0
  409a2f:	sete   al
  409a32:	movzx  edx,al
  409a35:	mov    rax,QWORD PTR [rbp-0x8]
  409a39:	mov    DWORD PTR [rax+0x124],edx
  409a3f:	nop
  409a40:	pop    rbp
  409a41:	ret    

0000000000409a42 <flatcc_builder_set_block_align@@Base>:
  409a42:	endbr64 
  409a46:	push   rbp
  409a47:	mov    rbp,rsp
  409a4a:	mov    QWORD PTR [rbp-0x8],rdi
  409a4e:	mov    eax,esi
  409a50:	mov    WORD PTR [rbp-0xc],ax
  409a54:	mov    rdx,QWORD PTR [rbp-0x8]
  409a58:	movzx  eax,WORD PTR [rbp-0xc]
  409a5c:	mov    WORD PTR [rdx+0xec],ax
  409a63:	nop
  409a64:	pop    rbp
  409a65:	ret    

0000000000409a66 <flatcc_builder_get_level@@Base>:
  409a66:	endbr64 
  409a6a:	push   rbp
  409a6b:	mov    rbp,rsp
  409a6e:	mov    QWORD PTR [rbp-0x8],rdi
  409a72:	mov    rax,QWORD PTR [rbp-0x8]
  409a76:	mov    eax,DWORD PTR [rax+0x104]
  409a7c:	pop    rbp
  409a7d:	ret    

0000000000409a7e <flatcc_builder_set_max_level@@Base>:
  409a7e:	endbr64 
  409a82:	push   rbp
  409a83:	mov    rbp,rsp
  409a86:	mov    QWORD PTR [rbp-0x8],rdi
  409a8a:	mov    DWORD PTR [rbp-0xc],esi
  409a8d:	mov    rax,QWORD PTR [rbp-0x8]
  409a91:	mov    edx,DWORD PTR [rbp-0xc]
  409a94:	mov    DWORD PTR [rax+0x120],edx
  409a9a:	mov    rax,QWORD PTR [rbp-0x8]
  409a9e:	mov    edx,DWORD PTR [rax+0x108]
  409aa4:	mov    rax,QWORD PTR [rbp-0x8]
  409aa8:	mov    eax,DWORD PTR [rax+0x120]
  409aae:	cmp    edx,eax
  409ab0:	jge    409ac6 <flatcc_builder_set_max_level@@Base+0x48>
  409ab2:	mov    rax,QWORD PTR [rbp-0x8]
  409ab6:	mov    edx,DWORD PTR [rax+0x120]
  409abc:	mov    rax,QWORD PTR [rbp-0x8]
  409ac0:	mov    DWORD PTR [rax+0x108],edx
  409ac6:	nop
  409ac7:	pop    rbp
  409ac8:	ret    

0000000000409ac9 <flatcc_builder_get_buffer_size@@Base>:
  409ac9:	endbr64 
  409acd:	push   rbp
  409ace:	mov    rbp,rsp
  409ad1:	mov    QWORD PTR [rbp-0x8],rdi
  409ad5:	mov    rax,QWORD PTR [rbp-0x8]
  409ad9:	mov    edx,DWORD PTR [rax+0xf4]
  409adf:	mov    rax,QWORD PTR [rbp-0x8]
  409ae3:	mov    eax,DWORD PTR [rax+0xf0]
  409ae9:	sub    edx,eax
  409aeb:	mov    eax,edx
  409aed:	cdqe   
  409aef:	pop    rbp
  409af0:	ret    

0000000000409af1 <flatcc_builder_get_buffer_start@@Base>:
  409af1:	endbr64 
  409af5:	push   rbp
  409af6:	mov    rbp,rsp
  409af9:	mov    QWORD PTR [rbp-0x8],rdi
  409afd:	mov    rax,QWORD PTR [rbp-0x8]
  409b01:	mov    eax,DWORD PTR [rax+0xf0]
  409b07:	pop    rbp
  409b08:	ret    

0000000000409b09 <flatcc_builder_get_buffer_end@@Base>:
  409b09:	endbr64 
  409b0d:	push   rbp
  409b0e:	mov    rbp,rsp
  409b11:	mov    QWORD PTR [rbp-0x8],rdi
  409b15:	mov    rax,QWORD PTR [rbp-0x8]
  409b19:	mov    eax,DWORD PTR [rax+0xf4]
  409b1f:	pop    rbp
  409b20:	ret    

0000000000409b21 <flatcc_builder_set_vtable_cache_limit@@Base>:
  409b21:	endbr64 
  409b25:	push   rbp
  409b26:	mov    rbp,rsp
  409b29:	mov    QWORD PTR [rbp-0x8],rdi
  409b2d:	mov    QWORD PTR [rbp-0x10],rsi
  409b31:	mov    rax,QWORD PTR [rbp-0x8]
  409b35:	mov    rdx,QWORD PTR [rbp-0x10]
  409b39:	mov    QWORD PTR [rax+0x118],rdx
  409b40:	nop
  409b41:	pop    rbp
  409b42:	ret    

0000000000409b43 <flatcc_builder_set_identifier@@Base>:
  409b43:	endbr64 
  409b47:	push   rbp
  409b48:	mov    rbp,rsp
  409b4b:	mov    QWORD PTR [rbp-0x8],rdi
  409b4f:	mov    QWORD PTR [rbp-0x10],rsi
  409b53:	cmp    QWORD PTR [rbp-0x10],0x0
  409b58:	je     409b60 <flatcc_builder_set_identifier@@Base+0x1d>
  409b5a:	mov    rax,QWORD PTR [rbp-0x10]
  409b5e:	jmp    409b67 <flatcc_builder_set_identifier@@Base+0x24>
  409b60:	mov    rax,0x40d1c0
  409b67:	mov    rdx,QWORD PTR [rbp-0x8]
  409b6b:	add    rdx,0x110
  409b72:	mov    eax,DWORD PTR [rax]
  409b74:	mov    DWORD PTR [rdx],eax
  409b76:	nop
  409b77:	pop    rbp
  409b78:	ret    

0000000000409b79 <flatcc_builder_get_type@@Base>:
  409b79:	endbr64 
  409b7d:	push   rbp
  409b7e:	mov    rbp,rsp
  409b81:	mov    QWORD PTR [rbp-0x8],rdi
  409b85:	mov    rax,QWORD PTR [rbp-0x8]
  409b89:	mov    rax,QWORD PTR [rax+0x30]
  409b8d:	test   rax,rax
  409b90:	je     409ba3 <flatcc_builder_get_type@@Base+0x2a>
  409b92:	mov    rax,QWORD PTR [rbp-0x8]
  409b96:	mov    rax,QWORD PTR [rax+0x30]
  409b9a:	movzx  eax,WORD PTR [rax+0xe]
  409b9e:	movzx  eax,ax
  409ba1:	jmp    409ba8 <flatcc_builder_get_type@@Base+0x2f>
  409ba3:	mov    eax,0x0
  409ba8:	pop    rbp
  409ba9:	ret    

0000000000409baa <flatcc_builder_get_type_at@@Base>:
  409baa:	endbr64 
  409bae:	push   rbp
  409baf:	mov    rbp,rsp
  409bb2:	mov    QWORD PTR [rbp-0x8],rdi
  409bb6:	mov    DWORD PTR [rbp-0xc],esi
  409bb9:	cmp    DWORD PTR [rbp-0xc],0x0
  409bbd:	jle    409bce <flatcc_builder_get_type_at@@Base+0x24>
  409bbf:	mov    rax,QWORD PTR [rbp-0x8]
  409bc3:	mov    eax,DWORD PTR [rax+0x104]
  409bc9:	cmp    DWORD PTR [rbp-0xc],eax
  409bcc:	jle    409bd5 <flatcc_builder_get_type_at@@Base+0x2b>
  409bce:	mov    eax,0x0
  409bd3:	jmp    409c09 <flatcc_builder_get_type_at@@Base+0x5f>
  409bd5:	mov    rax,QWORD PTR [rbp-0x8]
  409bd9:	mov    rcx,QWORD PTR [rax+0x30]
  409bdd:	mov    rax,QWORD PTR [rbp-0x8]
  409be1:	mov    eax,DWORD PTR [rax+0x104]
  409be7:	mov    edx,DWORD PTR [rbp-0xc]
  409bea:	sub    edx,eax
  409bec:	mov    eax,edx
  409bee:	movsxd rdx,eax
  409bf1:	mov    rax,rdx
  409bf4:	shl    rax,0x3
  409bf8:	add    rax,rdx
  409bfb:	shl    rax,0x2
  409bff:	add    rax,rcx
  409c02:	movzx  eax,WORD PTR [rax+0xe]
  409c06:	movzx  eax,ax
  409c09:	pop    rbp
  409c0a:	ret    

0000000000409c0b <flatcc_builder_get_direct_buffer@@Base>:
  409c0b:	endbr64 
  409c0f:	push   rbp
  409c10:	mov    rbp,rsp
  409c13:	sub    rsp,0x10
  409c17:	mov    QWORD PTR [rbp-0x8],rdi
  409c1b:	mov    QWORD PTR [rbp-0x10],rsi
  409c1f:	mov    rax,QWORD PTR [rbp-0x8]
  409c23:	mov    eax,DWORD PTR [rax+0x128]
  409c29:	test   eax,eax
  409c2b:	je     409c49 <flatcc_builder_get_direct_buffer@@Base+0x3e>
  409c2d:	mov    rax,QWORD PTR [rbp-0x8]
  409c31:	lea    rdx,[rax+0x130]
  409c38:	mov    rax,QWORD PTR [rbp-0x10]
  409c3c:	mov    rsi,rax
  409c3f:	mov    rdi,rdx
  409c42:	call   40486f <main@@Base+0x19a>
  409c47:	jmp    409c60 <flatcc_builder_get_direct_buffer@@Base+0x55>
  409c49:	cmp    QWORD PTR [rbp-0x10],0x0
  409c4e:	je     409c5b <flatcc_builder_get_direct_buffer@@Base+0x50>
  409c50:	mov    rax,QWORD PTR [rbp-0x10]
  409c54:	mov    QWORD PTR [rax],0x0
  409c5b:	mov    eax,0x0
  409c60:	leave  
  409c61:	ret    

0000000000409c62 <flatcc_builder_copy_buffer@@Base>:
  409c62:	endbr64 
  409c66:	push   rbp
  409c67:	mov    rbp,rsp
  409c6a:	sub    rsp,0x20
  409c6e:	mov    QWORD PTR [rbp-0x8],rdi
  409c72:	mov    QWORD PTR [rbp-0x10],rsi
  409c76:	mov    QWORD PTR [rbp-0x18],rdx
  409c7a:	mov    rax,QWORD PTR [rbp-0x8]
  409c7e:	mov    eax,DWORD PTR [rax+0x128]
  409c84:	test   eax,eax
  409c86:	jne    409c8f <flatcc_builder_copy_buffer@@Base+0x2d>
  409c88:	mov    eax,0x0
  409c8d:	jmp    409cdb <flatcc_builder_copy_buffer@@Base+0x79>
  409c8f:	mov    rax,QWORD PTR [rbp-0x8]
  409c93:	lea    rcx,[rax+0x130]
  409c9a:	mov    rdx,QWORD PTR [rbp-0x18]
  409c9e:	mov    rax,QWORD PTR [rbp-0x10]
  409ca2:	mov    rsi,rax
  409ca5:	mov    rdi,rcx
  409ca8:	call   40a916 <flatcc_emitter_copy_buffer@@Base>
  409cad:	mov    QWORD PTR [rbp-0x10],rax
  409cb1:	cmp    QWORD PTR [rbp-0x10],0x0
  409cb6:	jne    409cd7 <flatcc_builder_copy_buffer@@Base+0x75>
  409cb8:	lea    rcx,[rip+0x41e1]        # 40dea0 <flatcc_builder_padding_base@@Base+0xce0>
  409cbf:	mov    edx,0x786
  409cc4:	lea    rsi,[rip+0x36f5]        # 40d3c0 <flatcc_builder_padding_base@@Base+0x200>
  409ccb:	lea    rdi,[rip+0x3b2a]        # 40d7fc <flatcc_builder_padding_base@@Base+0x63c>
  409cd2:	call   403130 <__assert_fail@plt>
  409cd7:	mov    rax,QWORD PTR [rbp-0x10]
  409cdb:	leave  
  409cdc:	ret    

0000000000409cdd <flatcc_builder_finalize_buffer@@Base>:
  409cdd:	endbr64 
  409ce1:	push   rbp
  409ce2:	mov    rbp,rsp
  409ce5:	sub    rsp,0x20
  409ce9:	mov    QWORD PTR [rbp-0x18],rdi
  409ced:	mov    QWORD PTR [rbp-0x20],rsi
  409cf1:	mov    rax,QWORD PTR [rbp-0x18]
  409cf5:	mov    rdi,rax
  409cf8:	call   409ac9 <flatcc_builder_get_buffer_size@@Base>
  409cfd:	mov    QWORD PTR [rbp-0x10],rax
  409d01:	cmp    QWORD PTR [rbp-0x20],0x0
  409d06:	je     409d13 <flatcc_builder_finalize_buffer@@Base+0x36>
  409d08:	mov    rax,QWORD PTR [rbp-0x20]
  409d0c:	mov    rdx,QWORD PTR [rbp-0x10]
  409d10:	mov    QWORD PTR [rax],rdx
  409d13:	mov    rax,QWORD PTR [rbp-0x10]
  409d17:	mov    rdi,rax
  409d1a:	call   403180 <malloc@plt>
  409d1f:	mov    QWORD PTR [rbp-0x8],rax
  409d23:	cmp    QWORD PTR [rbp-0x8],0x0
  409d28:	jne    409d49 <flatcc_builder_finalize_buffer@@Base+0x6c>
  409d2a:	lea    rcx,[rip+0x418f]        # 40dec0 <flatcc_builder_padding_base@@Base+0xd00>
  409d31:	mov    edx,0x798
  409d36:	lea    rsi,[rip+0x3683]        # 40d3c0 <flatcc_builder_padding_base@@Base+0x200>
  409d3d:	lea    rdi,[rip+0x36dc]        # 40d420 <flatcc_builder_padding_base@@Base+0x260>
  409d44:	call   403130 <__assert_fail@plt>
  409d49:	mov    rdx,QWORD PTR [rbp-0x10]
  409d4d:	mov    rcx,QWORD PTR [rbp-0x8]
  409d51:	mov    rax,QWORD PTR [rbp-0x18]
  409d55:	mov    rsi,rcx
  409d58:	mov    rdi,rax
  409d5b:	call   409c62 <flatcc_builder_copy_buffer@@Base>
  409d60:	test   rax,rax
  409d63:	jne    409d84 <flatcc_builder_finalize_buffer@@Base+0xa7>
  409d65:	lea    rcx,[rip+0x4154]        # 40dec0 <flatcc_builder_padding_base@@Base+0xd00>
  409d6c:	mov    edx,0x79c
  409d71:	lea    rsi,[rip+0x3648]        # 40d3c0 <flatcc_builder_padding_base@@Base+0x200>
  409d78:	lea    rdi,[rip+0x36a1]        # 40d420 <flatcc_builder_padding_base@@Base+0x260>
  409d7f:	call   403130 <__assert_fail@plt>
  409d84:	nop
  409d85:	endbr64 
  409d89:	cmp    QWORD PTR [rbp-0x8],0x0
  409d8e:	jne    409da2 <flatcc_builder_finalize_buffer@@Base+0xc5>
  409d90:	cmp    QWORD PTR [rbp-0x20],0x0
  409d95:	je     409da2 <flatcc_builder_finalize_buffer@@Base+0xc5>
  409d97:	mov    rax,QWORD PTR [rbp-0x20]
  409d9b:	mov    QWORD PTR [rax],0x0
  409da2:	mov    rax,QWORD PTR [rbp-0x8]
  409da6:	leave  
  409da7:	ret    

0000000000409da8 <flatcc_builder_finalize_aligned_buffer@@Base>:
  409da8:	endbr64 
  409dac:	push   rbp
  409dad:	mov    rbp,rsp
  409db0:	sub    rsp,0x30
  409db4:	mov    QWORD PTR [rbp-0x28],rdi
  409db8:	mov    QWORD PTR [rbp-0x30],rsi
  409dbc:	mov    rax,QWORD PTR [rbp-0x28]
  409dc0:	mov    rdi,rax
  409dc3:	call   409ac9 <flatcc_builder_get_buffer_size@@Base>
  409dc8:	mov    QWORD PTR [rbp-0x10],rax
  409dcc:	cmp    QWORD PTR [rbp-0x30],0x0
  409dd1:	je     409dde <flatcc_builder_finalize_aligned_buffer@@Base+0x36>
  409dd3:	mov    rax,QWORD PTR [rbp-0x30]
  409dd7:	mov    rdx,QWORD PTR [rbp-0x10]
  409ddb:	mov    QWORD PTR [rax],rdx
  409dde:	mov    rax,QWORD PTR [rbp-0x28]
  409de2:	mov    rdi,rax
  409de5:	call   409a03 <flatcc_builder_get_buffer_alignment@@Base>
  409dea:	movzx  eax,ax
  409ded:	mov    QWORD PTR [rbp-0x8],rax
  409df1:	mov    rdx,QWORD PTR [rbp-0x10]
  409df5:	mov    rax,QWORD PTR [rbp-0x8]
  409df9:	add    rax,rdx
  409dfc:	lea    rdx,[rax-0x1]
  409e00:	mov    rax,QWORD PTR [rbp-0x8]
  409e04:	neg    rax
  409e07:	and    rax,rdx
  409e0a:	mov    QWORD PTR [rbp-0x10],rax
  409e0e:	mov    rdx,QWORD PTR [rbp-0x10]
  409e12:	mov    rax,QWORD PTR [rbp-0x8]
  409e16:	mov    rsi,rdx
  409e19:	mov    rdi,rax
  409e1c:	call   4047bb <main@@Base+0xe6>
  409e21:	mov    QWORD PTR [rbp-0x18],rax
  409e25:	cmp    QWORD PTR [rbp-0x18],0x0
  409e2a:	je     409e5e <flatcc_builder_finalize_aligned_buffer@@Base+0xb6>
  409e2c:	mov    rdx,QWORD PTR [rbp-0x10]
  409e30:	mov    rcx,QWORD PTR [rbp-0x18]
  409e34:	mov    rax,QWORD PTR [rbp-0x28]
  409e38:	mov    rsi,rcx
  409e3b:	mov    rdi,rax
  409e3e:	call   409c62 <flatcc_builder_copy_buffer@@Base>
  409e43:	test   rax,rax
  409e46:	jne    409e61 <flatcc_builder_finalize_aligned_buffer@@Base+0xb9>
  409e48:	mov    rax,QWORD PTR [rbp-0x18]
  409e4c:	mov    rdi,rax
  409e4f:	call   4030f0 <free@plt>
  409e54:	mov    QWORD PTR [rbp-0x18],0x0
  409e5c:	jmp    409e62 <flatcc_builder_finalize_aligned_buffer@@Base+0xba>
  409e5e:	nop
  409e5f:	jmp    409e62 <flatcc_builder_finalize_aligned_buffer@@Base+0xba>
  409e61:	nop
  409e62:	cmp    QWORD PTR [rbp-0x18],0x0
  409e67:	jne    409e7b <flatcc_builder_finalize_aligned_buffer@@Base+0xd3>
  409e69:	cmp    QWORD PTR [rbp-0x30],0x0
  409e6e:	je     409e7b <flatcc_builder_finalize_aligned_buffer@@Base+0xd3>
  409e70:	mov    rax,QWORD PTR [rbp-0x30]
  409e74:	mov    QWORD PTR [rax],0x0
  409e7b:	mov    rax,QWORD PTR [rbp-0x18]
  409e7f:	leave  
  409e80:	ret    

0000000000409e81 <flatcc_builder_aligned_alloc@@Base>:
  409e81:	endbr64 
  409e85:	push   rbp
  409e86:	mov    rbp,rsp
  409e89:	sub    rsp,0x10
  409e8d:	mov    QWORD PTR [rbp-0x8],rdi
  409e91:	mov    QWORD PTR [rbp-0x10],rsi
  409e95:	mov    rdx,QWORD PTR [rbp-0x10]
  409e99:	mov    rax,QWORD PTR [rbp-0x8]
  409e9d:	mov    rsi,rdx
  409ea0:	mov    rdi,rax
  409ea3:	call   4047bb <main@@Base+0xe6>
  409ea8:	leave  
  409ea9:	ret    

0000000000409eaa <flatcc_builder_aligned_free@@Base>:
  409eaa:	endbr64 
  409eae:	push   rbp
  409eaf:	mov    rbp,rsp
  409eb2:	sub    rsp,0x10
  409eb6:	mov    QWORD PTR [rbp-0x8],rdi
  409eba:	mov    rax,QWORD PTR [rbp-0x8]
  409ebe:	mov    rdi,rax
  409ec1:	call   4030f0 <free@plt>
  409ec6:	nop
  409ec7:	leave  
  409ec8:	ret    

0000000000409ec9 <flatcc_builder_get_emit_context@@Base>:
  409ec9:	endbr64 
  409ecd:	push   rbp
  409ece:	mov    rbp,rsp
  409ed1:	mov    QWORD PTR [rbp-0x8],rdi
  409ed5:	mov    rax,QWORD PTR [rbp-0x8]
  409ed9:	mov    rax,QWORD PTR [rax+0x38]
  409edd:	pop    rbp
  409ede:	ret    
  409edf:	endbr64 
  409ee3:	push   rbp
  409ee4:	mov    rbp,rsp
  409ee7:	sub    rsp,0x20
  409eeb:	mov    QWORD PTR [rbp-0x18],rdi
  409eef:	mov    QWORD PTR [rbp-0x8],0x0
  409ef7:	mov    rax,QWORD PTR [rbp-0x18]
  409efb:	mov    rax,QWORD PTR [rax]
  409efe:	test   rax,rax
  409f01:	je     409f5f <flatcc_builder_get_emit_context@@Base+0x96>
  409f03:	mov    rax,QWORD PTR [rbp-0x18]
  409f07:	mov    rax,QWORD PTR [rax]
  409f0a:	mov    rdx,QWORD PTR [rax+0xb88]
  409f11:	mov    rax,QWORD PTR [rbp-0x18]
  409f15:	mov    rax,QWORD PTR [rax+0x8]
  409f19:	cmp    rdx,rax
  409f1c:	je     409f5f <flatcc_builder_get_emit_context@@Base+0x96>
  409f1e:	mov    rax,QWORD PTR [rbp-0x18]
  409f22:	mov    rax,QWORD PTR [rax]
  409f25:	mov    edx,DWORD PTR [rax+0xb90]
  409f2b:	mov    rax,QWORD PTR [rbp-0x18]
  409f2f:	mov    rax,QWORD PTR [rax]
  409f32:	mov    rax,QWORD PTR [rax+0xb88]
  409f39:	sub    edx,0xb80
  409f3f:	mov    DWORD PTR [rax+0xb90],edx
  409f45:	mov    rax,QWORD PTR [rbp-0x18]
  409f49:	mov    rax,QWORD PTR [rax]
  409f4c:	mov    rdx,QWORD PTR [rax+0xb88]
  409f53:	mov    rax,QWORD PTR [rbp-0x18]
  409f57:	mov    QWORD PTR [rax],rdx
  409f5a:	jmp    40a097 <flatcc_builder_get_emit_context@@Base+0x1ce>
  409f5f:	mov    edi,0xb98
  409f64:	call   403180 <malloc@plt>
  409f69:	mov    QWORD PTR [rbp-0x8],rax
  409f6d:	cmp    QWORD PTR [rbp-0x8],0x0
  409f72:	jne    409f7e <flatcc_builder_get_emit_context@@Base+0xb5>
  409f74:	mov    eax,0xffffffff
  409f79:	jmp    40a0e5 <flatcc_builder_get_emit_context@@Base+0x21c>
  409f7e:	mov    rax,QWORD PTR [rbp-0x18]
  409f82:	mov    rax,QWORD PTR [rax+0x38]
  409f86:	lea    rdx,[rax+0xb80]
  409f8d:	mov    rax,QWORD PTR [rbp-0x18]
  409f91:	mov    QWORD PTR [rax+0x38],rdx
  409f95:	mov    rax,QWORD PTR [rbp-0x18]
  409f99:	mov    rax,QWORD PTR [rax]
  409f9c:	test   rax,rax
  409f9f:	je     409ffb <flatcc_builder_get_emit_context@@Base+0x132>
  409fa1:	mov    rax,QWORD PTR [rbp-0x18]
  409fa5:	mov    rdx,QWORD PTR [rax+0x8]
  409fa9:	mov    rax,QWORD PTR [rbp-0x8]
  409fad:	mov    QWORD PTR [rax+0xb88],rdx
  409fb4:	mov    rax,QWORD PTR [rbp-0x18]
  409fb8:	mov    rdx,QWORD PTR [rax]
  409fbb:	mov    rax,QWORD PTR [rbp-0x8]
  409fbf:	mov    QWORD PTR [rax+0xb80],rdx
  409fc6:	mov    rax,QWORD PTR [rbp-0x18]
  409fca:	mov    rax,QWORD PTR [rax]
  409fcd:	mov    rdx,QWORD PTR [rbp-0x8]
  409fd1:	mov    QWORD PTR [rax+0xb88],rdx
  409fd8:	mov    rax,QWORD PTR [rbp-0x18]
  409fdc:	mov    rax,QWORD PTR [rax+0x8]
  409fe0:	mov    rdx,QWORD PTR [rbp-0x8]
  409fe4:	mov    QWORD PTR [rax+0xb80],rdx
  409feb:	mov    rax,QWORD PTR [rbp-0x18]
  409fef:	mov    rdx,QWORD PTR [rbp-0x8]
  409ff3:	mov    QWORD PTR [rax],rdx
  409ff6:	jmp    40a097 <flatcc_builder_get_emit_context@@Base+0x1ce>
  409ffb:	mov    rax,QWORD PTR [rbp-0x18]
  409fff:	mov    rdx,QWORD PTR [rbp-0x8]
  40a003:	mov    QWORD PTR [rax],rdx
  40a006:	mov    rax,QWORD PTR [rbp-0x18]
  40a00a:	mov    rdx,QWORD PTR [rbp-0x8]
  40a00e:	mov    QWORD PTR [rax+0x8],rdx
  40a012:	mov    rax,QWORD PTR [rbp-0x8]
  40a016:	mov    rdx,QWORD PTR [rbp-0x8]
  40a01a:	mov    QWORD PTR [rax+0xb80],rdx
  40a021:	mov    rax,QWORD PTR [rbp-0x8]
  40a025:	mov    rdx,QWORD PTR [rbp-0x8]
  40a029:	mov    QWORD PTR [rax+0xb88],rdx
  40a030:	mov    rax,QWORD PTR [rbp-0x18]
  40a034:	mov    rax,QWORD PTR [rax]
  40a037:	lea    rdx,[rax+0x5c0]
  40a03e:	mov    rax,QWORD PTR [rbp-0x18]
  40a042:	mov    QWORD PTR [rax+0x10],rdx
  40a046:	mov    rax,QWORD PTR [rbp-0x18]
  40a04a:	mov    rdx,QWORD PTR [rax+0x10]
  40a04e:	mov    rax,QWORD PTR [rbp-0x18]
  40a052:	mov    QWORD PTR [rax+0x20],rdx
  40a056:	mov    rax,QWORD PTR [rbp-0x18]
  40a05a:	mov    QWORD PTR [rax+0x18],0x5c0
  40a062:	mov    rax,QWORD PTR [rbp-0x18]
  40a066:	mov    rax,QWORD PTR [rax+0x18]
  40a06a:	mov    edx,0xb80
  40a06f:	sub    rdx,rax
  40a072:	mov    rax,QWORD PTR [rbp-0x18]
  40a076:	mov    QWORD PTR [rax+0x28],rdx
  40a07a:	mov    rax,QWORD PTR [rbp-0x18]
  40a07e:	mov    rax,QWORD PTR [rax+0x18]
  40a082:	neg    eax
  40a084:	mov    edx,eax
  40a086:	mov    rax,QWORD PTR [rbp-0x8]
  40a08a:	mov    DWORD PTR [rax+0xb90],edx
  40a090:	mov    eax,0x0
  40a095:	jmp    40a0e5 <flatcc_builder_get_emit_context@@Base+0x21c>
  40a097:	mov    rax,QWORD PTR [rbp-0x18]
  40a09b:	mov    rax,QWORD PTR [rax]
  40a09e:	lea    rdx,[rax+0xb80]
  40a0a5:	mov    rax,QWORD PTR [rbp-0x18]
  40a0a9:	mov    QWORD PTR [rax+0x10],rdx
  40a0ad:	mov    rax,QWORD PTR [rbp-0x18]
  40a0b1:	mov    QWORD PTR [rax+0x18],0xb80
  40a0b9:	mov    rax,QWORD PTR [rbp-0x18]
  40a0bd:	mov    rax,QWORD PTR [rax]
  40a0c0:	mov    rax,QWORD PTR [rax+0xb80]
  40a0c7:	mov    edx,DWORD PTR [rax+0xb90]
  40a0cd:	mov    rax,QWORD PTR [rbp-0x18]
  40a0d1:	mov    rax,QWORD PTR [rax]
  40a0d4:	sub    edx,0xb80
  40a0da:	mov    DWORD PTR [rax+0xb90],edx
  40a0e0:	mov    eax,0x0
  40a0e5:	leave  
  40a0e6:	ret    
  40a0e7:	endbr64 
  40a0eb:	push   rbp
  40a0ec:	mov    rbp,rsp
  40a0ef:	sub    rsp,0x20
  40a0f3:	mov    QWORD PTR [rbp-0x18],rdi
  40a0f7:	mov    QWORD PTR [rbp-0x8],0x0
  40a0ff:	mov    rax,QWORD PTR [rbp-0x18]
  40a103:	mov    rax,QWORD PTR [rax+0x8]
  40a107:	test   rax,rax
  40a10a:	je     40a143 <flatcc_builder_get_emit_context@@Base+0x27a>
  40a10c:	mov    rax,QWORD PTR [rbp-0x18]
  40a110:	mov    rax,QWORD PTR [rax+0x8]
  40a114:	mov    rdx,QWORD PTR [rax+0xb80]
  40a11b:	mov    rax,QWORD PTR [rbp-0x18]
  40a11f:	mov    rax,QWORD PTR [rax]
  40a122:	cmp    rdx,rax
  40a125:	je     40a143 <flatcc_builder_get_emit_context@@Base+0x27a>
  40a127:	mov    rax,QWORD PTR [rbp-0x18]
  40a12b:	mov    rax,QWORD PTR [rax+0x8]
  40a12f:	mov    rdx,QWORD PTR [rax+0xb80]
  40a136:	mov    rax,QWORD PTR [rbp-0x18]
  40a13a:	mov    QWORD PTR [rax+0x8],rdx
  40a13e:	jmp    40a27d <flatcc_builder_get_emit_context@@Base+0x3b4>
  40a143:	mov    edi,0xb98
  40a148:	call   403180 <malloc@plt>
  40a14d:	mov    QWORD PTR [rbp-0x8],rax
  40a151:	cmp    QWORD PTR [rbp-0x8],0x0
  40a156:	jne    40a162 <flatcc_builder_get_emit_context@@Base+0x299>
  40a158:	mov    eax,0xffffffff
  40a15d:	jmp    40a2ca <flatcc_builder_get_emit_context@@Base+0x401>
  40a162:	mov    rax,QWORD PTR [rbp-0x18]
  40a166:	mov    rax,QWORD PTR [rax+0x38]
  40a16a:	lea    rdx,[rax+0xb80]
  40a171:	mov    rax,QWORD PTR [rbp-0x18]
  40a175:	mov    QWORD PTR [rax+0x38],rdx
  40a179:	mov    rax,QWORD PTR [rbp-0x18]
  40a17d:	mov    rax,QWORD PTR [rax+0x8]
  40a181:	test   rax,rax
  40a184:	je     40a1e1 <flatcc_builder_get_emit_context@@Base+0x318>
  40a186:	mov    rax,QWORD PTR [rbp-0x18]
  40a18a:	mov    rdx,QWORD PTR [rax+0x8]
  40a18e:	mov    rax,QWORD PTR [rbp-0x8]
  40a192:	mov    QWORD PTR [rax+0xb88],rdx
  40a199:	mov    rax,QWORD PTR [rbp-0x18]
  40a19d:	mov    rdx,QWORD PTR [rax]
  40a1a0:	mov    rax,QWORD PTR [rbp-0x8]
  40a1a4:	mov    QWORD PTR [rax+0xb80],rdx
  40a1ab:	mov    rax,QWORD PTR [rbp-0x18]
  40a1af:	mov    rax,QWORD PTR [rax]
  40a1b2:	mov    rdx,QWORD PTR [rbp-0x8]
  40a1b6:	mov    QWORD PTR [rax+0xb88],rdx
  40a1bd:	mov    rax,QWORD PTR [rbp-0x18]
  40a1c1:	mov    rax,QWORD PTR [rax+0x8]
  40a1c5:	mov    rdx,QWORD PTR [rbp-0x8]
  40a1c9:	mov    QWORD PTR [rax+0xb80],rdx
  40a1d0:	mov    rax,QWORD PTR [rbp-0x18]
  40a1d4:	mov    rdx,QWORD PTR [rbp-0x8]
  40a1d8:	mov    QWORD PTR [rax+0x8],rdx
  40a1dc:	jmp    40a27d <flatcc_builder_get_emit_context@@Base+0x3b4>
  40a1e1:	mov    rax,QWORD PTR [rbp-0x18]
  40a1e5:	mov    rdx,QWORD PTR [rbp-0x8]
  40a1e9:	mov    QWORD PTR [rax],rdx
  40a1ec:	mov    rax,QWORD PTR [rbp-0x18]
  40a1f0:	mov    rdx,QWORD PTR [rbp-0x8]
  40a1f4:	mov    QWORD PTR [rax+0x8],rdx
  40a1f8:	mov    rax,QWORD PTR [rbp-0x8]
  40a1fc:	mov    rdx,QWORD PTR [rbp-0x8]
  40a200:	mov    QWORD PTR [rax+0xb80],rdx
  40a207:	mov    rax,QWORD PTR [rbp-0x8]
  40a20b:	mov    rdx,QWORD PTR [rbp-0x8]
  40a20f:	mov    QWORD PTR [rax+0xb88],rdx
  40a216:	mov    rax,QWORD PTR [rbp-0x18]
  40a21a:	mov    rax,QWORD PTR [rax]
  40a21d:	lea    rdx,[rax+0x5c0]
  40a224:	mov    rax,QWORD PTR [rbp-0x18]
  40a228:	mov    QWORD PTR [rax+0x10],rdx
  40a22c:	mov    rax,QWORD PTR [rbp-0x18]
  40a230:	mov    rdx,QWORD PTR [rax+0x10]
  40a234:	mov    rax,QWORD PTR [rbp-0x18]
  40a238:	mov    QWORD PTR [rax+0x20],rdx
  40a23c:	mov    rax,QWORD PTR [rbp-0x18]
  40a240:	mov    QWORD PTR [rax+0x18],0x5c0
  40a248:	mov    rax,QWORD PTR [rbp-0x18]
  40a24c:	mov    rax,QWORD PTR [rax+0x18]
  40a250:	mov    edx,0xb80
  40a255:	sub    rdx,rax
  40a258:	mov    rax,QWORD PTR [rbp-0x18]
  40a25c:	mov    QWORD PTR [rax+0x28],rdx
  40a260:	mov    rax,QWORD PTR [rbp-0x18]
  40a264:	mov    rax,QWORD PTR [rax+0x18]
  40a268:	neg    eax
  40a26a:	mov    edx,eax
  40a26c:	mov    rax,QWORD PTR [rbp-0x8]
  40a270:	mov    DWORD PTR [rax+0xb90],edx
  40a276:	mov    eax,0x0
  40a27b:	jmp    40a2ca <flatcc_builder_get_emit_context@@Base+0x401>
  40a27d:	mov    rax,QWORD PTR [rbp-0x18]
  40a281:	mov    rax,QWORD PTR [rax+0x8]
  40a285:	mov    rdx,rax
  40a288:	mov    rax,QWORD PTR [rbp-0x18]
  40a28c:	mov    QWORD PTR [rax+0x20],rdx
  40a290:	mov    rax,QWORD PTR [rbp-0x18]
  40a294:	mov    QWORD PTR [rax+0x28],0xb80
  40a29c:	mov    rax,QWORD PTR [rbp-0x18]
  40a2a0:	mov    rax,QWORD PTR [rax+0x8]
  40a2a4:	mov    rax,QWORD PTR [rax+0xb88]
  40a2ab:	mov    edx,DWORD PTR [rax+0xb90]
  40a2b1:	mov    rax,QWORD PTR [rbp-0x18]
  40a2b5:	mov    rax,QWORD PTR [rax+0x8]
  40a2b9:	add    edx,0xb80
  40a2bf:	mov    DWORD PTR [rax+0xb90],edx
  40a2c5:	mov    eax,0x0
  40a2ca:	leave  
  40a2cb:	ret    
  40a2cc:	endbr64 
  40a2d0:	push   rbp
  40a2d1:	mov    rbp,rsp
  40a2d4:	sub    rsp,0x30
  40a2d8:	mov    QWORD PTR [rbp-0x18],rdi
  40a2dc:	mov    QWORD PTR [rbp-0x20],rsi
  40a2e0:	mov    QWORD PTR [rbp-0x28],rdx
  40a2e4:	mov    rax,QWORD PTR [rbp-0x28]
  40a2e8:	add    QWORD PTR [rbp-0x20],rax
  40a2ec:	jmp    40a390 <flatcc_builder_get_emit_context@@Base+0x4c7>
  40a2f1:	mov    rax,QWORD PTR [rbp-0x28]
  40a2f5:	mov    QWORD PTR [rbp-0x8],rax
  40a2f9:	mov    rax,QWORD PTR [rbp-0x18]
  40a2fd:	mov    rax,QWORD PTR [rax+0x18]
  40a301:	cmp    QWORD PTR [rbp-0x8],rax
  40a305:	jbe    40a331 <flatcc_builder_get_emit_context@@Base+0x468>
  40a307:	mov    rax,QWORD PTR [rbp-0x18]
  40a30b:	mov    rax,QWORD PTR [rax+0x18]
  40a30f:	mov    QWORD PTR [rbp-0x8],rax
  40a313:	cmp    QWORD PTR [rbp-0x8],0x0
  40a318:	jne    40a331 <flatcc_builder_get_emit_context@@Base+0x468>
  40a31a:	mov    rax,QWORD PTR [rbp-0x18]
  40a31e:	mov    rdi,rax
  40a321:	call   409edf <flatcc_builder_get_emit_context@@Base+0x16>
  40a326:	test   eax,eax
  40a328:	je     40a390 <flatcc_builder_get_emit_context@@Base+0x4c7>
  40a32a:	mov    eax,0xffffffff
  40a32f:	jmp    40a3a0 <flatcc_builder_get_emit_context@@Base+0x4d7>
  40a331:	mov    rax,QWORD PTR [rbp-0x18]
  40a335:	mov    rax,QWORD PTR [rax+0x10]
  40a339:	mov    rdx,QWORD PTR [rbp-0x8]
  40a33d:	neg    rdx
  40a340:	add    rdx,rax
  40a343:	mov    rax,QWORD PTR [rbp-0x18]
  40a347:	mov    QWORD PTR [rax+0x10],rdx
  40a34b:	mov    rax,QWORD PTR [rbp-0x18]
  40a34f:	mov    rax,QWORD PTR [rax+0x18]
  40a353:	sub    rax,QWORD PTR [rbp-0x8]
  40a357:	mov    rdx,rax
  40a35a:	mov    rax,QWORD PTR [rbp-0x18]
  40a35e:	mov    QWORD PTR [rax+0x18],rdx
  40a362:	mov    rax,QWORD PTR [rbp-0x8]
  40a366:	neg    rax
  40a369:	add    QWORD PTR [rbp-0x20],rax
  40a36d:	mov    rax,QWORD PTR [rbp-0x8]
  40a371:	sub    QWORD PTR [rbp-0x28],rax
  40a375:	mov    rax,QWORD PTR [rbp-0x18]
  40a379:	mov    rax,QWORD PTR [rax+0x10]
  40a37d:	mov    rdx,QWORD PTR [rbp-0x8]
  40a381:	mov    rcx,QWORD PTR [rbp-0x20]
  40a385:	mov    rsi,rcx
  40a388:	mov    rdi,rax
  40a38b:	call   403170 <memcpy@plt>
  40a390:	cmp    QWORD PTR [rbp-0x28],0x0
  40a395:	jne    40a2f1 <flatcc_builder_get_emit_context@@Base+0x428>
  40a39b:	mov    eax,0x0
  40a3a0:	leave  
  40a3a1:	ret    
  40a3a2:	endbr64 
  40a3a6:	push   rbp
  40a3a7:	mov    rbp,rsp
  40a3aa:	sub    rsp,0x30
  40a3ae:	mov    QWORD PTR [rbp-0x18],rdi
  40a3b2:	mov    QWORD PTR [rbp-0x20],rsi
  40a3b6:	mov    QWORD PTR [rbp-0x28],rdx
  40a3ba:	jmp    40a458 <flatcc_builder_get_emit_context@@Base+0x58f>
  40a3bf:	mov    rax,QWORD PTR [rbp-0x28]
  40a3c3:	mov    QWORD PTR [rbp-0x8],rax
  40a3c7:	mov    rax,QWORD PTR [rbp-0x18]
  40a3cb:	mov    rax,QWORD PTR [rax+0x28]
  40a3cf:	cmp    QWORD PTR [rbp-0x8],rax
  40a3d3:	jbe    40a3ff <flatcc_builder_get_emit_context@@Base+0x536>
  40a3d5:	mov    rax,QWORD PTR [rbp-0x18]
  40a3d9:	mov    rax,QWORD PTR [rax+0x28]
  40a3dd:	mov    QWORD PTR [rbp-0x8],rax
  40a3e1:	cmp    QWORD PTR [rbp-0x8],0x0
  40a3e6:	jne    40a3ff <flatcc_builder_get_emit_context@@Base+0x536>
  40a3e8:	mov    rax,QWORD PTR [rbp-0x18]
  40a3ec:	mov    rdi,rax
  40a3ef:	call   40a0e7 <flatcc_builder_get_emit_context@@Base+0x21e>
  40a3f4:	test   eax,eax
  40a3f6:	je     40a458 <flatcc_builder_get_emit_context@@Base+0x58f>
  40a3f8:	mov    eax,0xffffffff
  40a3fd:	jmp    40a468 <flatcc_builder_get_emit_context@@Base+0x59f>
  40a3ff:	mov    rax,QWORD PTR [rbp-0x18]
  40a403:	mov    rax,QWORD PTR [rax+0x20]
  40a407:	mov    rdx,QWORD PTR [rbp-0x8]
  40a40b:	mov    rcx,QWORD PTR [rbp-0x20]
  40a40f:	mov    rsi,rcx
  40a412:	mov    rdi,rax
  40a415:	call   403170 <memcpy@plt>
  40a41a:	mov    rax,QWORD PTR [rbp-0x8]
  40a41e:	sub    QWORD PTR [rbp-0x28],rax
  40a422:	mov    rax,QWORD PTR [rbp-0x8]
  40a426:	add    QWORD PTR [rbp-0x20],rax
  40a42a:	mov    rax,QWORD PTR [rbp-0x18]
  40a42e:	mov    rdx,QWORD PTR [rax+0x20]
  40a432:	mov    rax,QWORD PTR [rbp-0x8]
  40a436:	add    rdx,rax
  40a439:	mov    rax,QWORD PTR [rbp-0x18]
  40a43d:	mov    QWORD PTR [rax+0x20],rdx
  40a441:	mov    rax,QWORD PTR [rbp-0x18]
  40a445:	mov    rax,QWORD PTR [rax+0x28]
  40a449:	sub    rax,QWORD PTR [rbp-0x8]
  40a44d:	mov    rdx,rax
  40a450:	mov    rax,QWORD PTR [rbp-0x18]
  40a454:	mov    QWORD PTR [rax+0x28],rdx
  40a458:	cmp    QWORD PTR [rbp-0x28],0x0
  40a45d:	jne    40a3bf <flatcc_builder_get_emit_context@@Base+0x4f6>
  40a463:	mov    eax,0x0
  40a468:	leave  
  40a469:	ret    

000000000040a46a <flatcc_emitter_recycle_page@@Base>:
  40a46a:	endbr64 
  40a46e:	push   rbp
  40a46f:	mov    rbp,rsp
  40a472:	mov    QWORD PTR [rbp-0x8],rdi
  40a476:	mov    QWORD PTR [rbp-0x10],rsi
  40a47a:	mov    rax,QWORD PTR [rbp-0x8]
  40a47e:	mov    rax,QWORD PTR [rax]
  40a481:	cmp    QWORD PTR [rbp-0x10],rax
  40a485:	je     40a495 <flatcc_emitter_recycle_page@@Base+0x2b>
  40a487:	mov    rax,QWORD PTR [rbp-0x8]
  40a48b:	mov    rax,QWORD PTR [rax+0x8]
  40a48f:	cmp    QWORD PTR [rbp-0x10],rax
  40a493:	jne    40a49f <flatcc_emitter_recycle_page@@Base+0x35>
  40a495:	mov    eax,0xffffffff
  40a49a:	jmp    40a535 <flatcc_emitter_recycle_page@@Base+0xcb>
  40a49f:	mov    rax,QWORD PTR [rbp-0x10]
  40a4a3:	mov    rax,QWORD PTR [rax+0xb80]
  40a4aa:	mov    rdx,QWORD PTR [rbp-0x10]
  40a4ae:	mov    rdx,QWORD PTR [rdx+0xb88]
  40a4b5:	mov    QWORD PTR [rax+0xb88],rdx
  40a4bc:	mov    rax,QWORD PTR [rbp-0x10]
  40a4c0:	mov    rax,QWORD PTR [rax+0xb88]
  40a4c7:	mov    rdx,QWORD PTR [rbp-0x10]
  40a4cb:	mov    rdx,QWORD PTR [rdx+0xb80]
  40a4d2:	mov    QWORD PTR [rax+0xb80],rdx
  40a4d9:	mov    rax,QWORD PTR [rbp-0x8]
  40a4dd:	mov    rax,QWORD PTR [rax]
  40a4e0:	mov    rdx,QWORD PTR [rax+0xb88]
  40a4e7:	mov    rax,QWORD PTR [rbp-0x10]
  40a4eb:	mov    QWORD PTR [rax+0xb88],rdx
  40a4f2:	mov    rax,QWORD PTR [rbp-0x8]
  40a4f6:	mov    rdx,QWORD PTR [rax]
  40a4f9:	mov    rax,QWORD PTR [rbp-0x10]
  40a4fd:	mov    QWORD PTR [rax+0xb80],rdx
  40a504:	mov    rax,QWORD PTR [rbp-0x10]
  40a508:	mov    rax,QWORD PTR [rax+0xb88]
  40a50f:	mov    rdx,QWORD PTR [rbp-0x10]
  40a513:	mov    QWORD PTR [rax+0xb80],rdx
  40a51a:	mov    rax,QWORD PTR [rbp-0x10]
  40a51e:	mov    rax,QWORD PTR [rax+0xb80]
  40a525:	mov    rdx,QWORD PTR [rbp-0x10]
  40a529:	mov    QWORD PTR [rax+0xb88],rdx
  40a530:	mov    eax,0x0
  40a535:	pop    rbp
  40a536:	ret    

000000000040a537 <flatcc_emitter_reset@@Base>:
  40a537:	endbr64 
  40a53b:	push   rbp
  40a53c:	mov    rbp,rsp
  40a53f:	sub    rsp,0x20
  40a543:	mov    QWORD PTR [rbp-0x18],rdi
  40a547:	mov    rax,QWORD PTR [rbp-0x18]
  40a54b:	mov    rax,QWORD PTR [rax]
  40a54e:	mov    QWORD PTR [rbp-0x8],rax
  40a552:	mov    rax,QWORD PTR [rbp-0x18]
  40a556:	mov    rax,QWORD PTR [rax]
  40a559:	test   rax,rax
  40a55c:	je     40a6c6 <flatcc_emitter_reset@@Base+0x18f>
  40a562:	mov    rax,QWORD PTR [rbp-0x18]
  40a566:	mov    rdx,QWORD PTR [rax]
  40a569:	mov    rax,QWORD PTR [rbp-0x18]
  40a56d:	mov    QWORD PTR [rax+0x8],rdx
  40a571:	mov    rax,QWORD PTR [rbp-0x18]
  40a575:	mov    rax,QWORD PTR [rax]
  40a578:	lea    rdx,[rax+0x5c0]
  40a57f:	mov    rax,QWORD PTR [rbp-0x18]
  40a583:	mov    QWORD PTR [rax+0x10],rdx
  40a587:	mov    rax,QWORD PTR [rbp-0x18]
  40a58b:	mov    rdx,QWORD PTR [rax+0x10]
  40a58f:	mov    rax,QWORD PTR [rbp-0x18]
  40a593:	mov    QWORD PTR [rax+0x20],rdx
  40a597:	mov    rax,QWORD PTR [rbp-0x18]
  40a59b:	mov    QWORD PTR [rax+0x18],0x5c0
  40a5a3:	mov    rax,QWORD PTR [rbp-0x18]
  40a5a7:	mov    QWORD PTR [rax+0x28],0x5c0
  40a5af:	mov    rax,QWORD PTR [rbp-0x18]
  40a5b3:	mov    rax,QWORD PTR [rax+0x18]
  40a5b7:	mov    edx,eax
  40a5b9:	mov    rax,QWORD PTR [rbp-0x18]
  40a5bd:	mov    rax,QWORD PTR [rax]
  40a5c0:	neg    edx
  40a5c2:	mov    DWORD PTR [rax+0xb90],edx
  40a5c8:	mov    rax,QWORD PTR [rbp-0x18]
  40a5cc:	mov    rax,QWORD PTR [rax+0x40]
  40a5d0:	test   rax,rax
  40a5d3:	jne    40a5e5 <flatcc_emitter_reset@@Base+0xae>
  40a5d5:	mov    rax,QWORD PTR [rbp-0x18]
  40a5d9:	mov    rdx,QWORD PTR [rax+0x30]
  40a5dd:	mov    rax,QWORD PTR [rbp-0x18]
  40a5e1:	mov    QWORD PTR [rax+0x40],rdx
  40a5e5:	mov    rax,QWORD PTR [rbp-0x18]
  40a5e9:	mov    rdx,QWORD PTR [rax+0x40]
  40a5ed:	mov    rax,rdx
  40a5f0:	add    rax,rax
  40a5f3:	add    rax,rdx
  40a5f6:	shr    rax,0x2
  40a5fa:	mov    rdx,rax
  40a5fd:	mov    rax,QWORD PTR [rbp-0x18]
  40a601:	mov    rax,QWORD PTR [rax+0x30]
  40a605:	shr    rax,0x2
  40a609:	add    rdx,rax
  40a60c:	mov    rax,QWORD PTR [rbp-0x18]
  40a610:	mov    QWORD PTR [rax+0x40],rdx
  40a614:	mov    rax,QWORD PTR [rbp-0x18]
  40a618:	mov    QWORD PTR [rax+0x30],0x0
  40a620:	jmp    40a68c <flatcc_emitter_reset@@Base+0x155>
  40a622:	mov    rax,QWORD PTR [rbp-0x18]
  40a626:	mov    rax,QWORD PTR [rax+0x8]
  40a62a:	mov    rax,QWORD PTR [rax+0xb80]
  40a631:	mov    QWORD PTR [rbp-0x8],rax
  40a635:	mov    rax,QWORD PTR [rbp-0x18]
  40a639:	mov    rax,QWORD PTR [rax+0x8]
  40a63d:	mov    rdx,QWORD PTR [rbp-0x8]
  40a641:	mov    rdx,QWORD PTR [rdx+0xb80]
  40a648:	mov    QWORD PTR [rax+0xb80],rdx
  40a64f:	mov    rax,QWORD PTR [rbp-0x8]
  40a653:	mov    rax,QWORD PTR [rax+0xb80]
  40a65a:	mov    rdx,QWORD PTR [rbp-0x18]
  40a65e:	mov    rdx,QWORD PTR [rdx+0x8]
  40a662:	mov    QWORD PTR [rax+0xb88],rdx
  40a669:	mov    rax,QWORD PTR [rbp-0x8]
  40a66d:	mov    rdi,rax
  40a670:	call   4030f0 <free@plt>
  40a675:	mov    rax,QWORD PTR [rbp-0x18]
  40a679:	mov    rax,QWORD PTR [rax+0x38]
  40a67d:	lea    rdx,[rax-0xb80]
  40a684:	mov    rax,QWORD PTR [rbp-0x18]
  40a688:	mov    QWORD PTR [rax+0x38],rdx
  40a68c:	mov    rax,QWORD PTR [rbp-0x18]
  40a690:	mov    rax,QWORD PTR [rax+0x40]
  40a694:	lea    rdx,[rax+rax*1]
  40a698:	mov    rax,QWORD PTR [rbp-0x18]
  40a69c:	mov    rax,QWORD PTR [rax+0x38]
  40a6a0:	cmp    rdx,rax
  40a6a3:	jae    40a6c7 <flatcc_emitter_reset@@Base+0x190>
  40a6a5:	mov    rax,QWORD PTR [rbp-0x18]
  40a6a9:	mov    rax,QWORD PTR [rax+0x8]
  40a6ad:	mov    rdx,QWORD PTR [rax+0xb80]
  40a6b4:	mov    rax,QWORD PTR [rbp-0x18]
  40a6b8:	mov    rax,QWORD PTR [rax]
  40a6bb:	cmp    rdx,rax
  40a6be:	jne    40a622 <flatcc_emitter_reset@@Base+0xeb>
  40a6c4:	jmp    40a6c7 <flatcc_emitter_reset@@Base+0x190>
  40a6c6:	nop
  40a6c7:	leave  
  40a6c8:	ret    

000000000040a6c9 <flatcc_emitter_clear@@Base>:
  40a6c9:	endbr64 
  40a6cd:	push   rbp
  40a6ce:	mov    rbp,rsp
  40a6d1:	sub    rsp,0x20
  40a6d5:	mov    QWORD PTR [rbp-0x18],rdi
  40a6d9:	mov    rax,QWORD PTR [rbp-0x18]
  40a6dd:	mov    rax,QWORD PTR [rax]
  40a6e0:	mov    QWORD PTR [rbp-0x8],rax
  40a6e4:	cmp    QWORD PTR [rbp-0x8],0x0
  40a6e9:	je     40a759 <flatcc_emitter_clear@@Base+0x90>
  40a6eb:	mov    rax,QWORD PTR [rbp-0x8]
  40a6ef:	mov    rax,QWORD PTR [rax+0xb88]
  40a6f6:	mov    QWORD PTR [rax+0xb80],0x0
  40a701:	jmp    40a725 <flatcc_emitter_clear@@Base+0x5c>
  40a703:	mov    rax,QWORD PTR [rbp-0x8]
  40a707:	mov    rax,QWORD PTR [rax+0xb80]
  40a70e:	mov    QWORD PTR [rbp-0x8],rax
  40a712:	mov    rax,QWORD PTR [rbp-0x8]
  40a716:	mov    rax,QWORD PTR [rax+0xb88]
  40a71d:	mov    rdi,rax
  40a720:	call   4030f0 <free@plt>
  40a725:	mov    rax,QWORD PTR [rbp-0x8]
  40a729:	mov    rax,QWORD PTR [rax+0xb80]
  40a730:	test   rax,rax
  40a733:	jne    40a703 <flatcc_emitter_clear@@Base+0x3a>
  40a735:	mov    rax,QWORD PTR [rbp-0x8]
  40a739:	mov    rdi,rax
  40a73c:	call   4030f0 <free@plt>
  40a741:	mov    rax,QWORD PTR [rbp-0x18]
  40a745:	mov    edx,0x48
  40a74a:	mov    esi,0x0
  40a74f:	mov    rdi,rax
  40a752:	call   403140 <memset@plt>
  40a757:	jmp    40a75a <flatcc_emitter_clear@@Base+0x91>
  40a759:	nop
  40a75a:	leave  
  40a75b:	ret    

000000000040a75c <flatcc_emitter@@Base>:
  40a75c:	endbr64 
  40a760:	push   rbp
  40a761:	mov    rbp,rsp
  40a764:	sub    rsp,0x30
  40a768:	mov    QWORD PTR [rbp-0x18],rdi
  40a76c:	mov    QWORD PTR [rbp-0x20],rsi
  40a770:	mov    DWORD PTR [rbp-0x24],edx
  40a773:	mov    DWORD PTR [rbp-0x28],ecx
  40a776:	mov    QWORD PTR [rbp-0x30],r8
  40a77a:	mov    rax,QWORD PTR [rbp-0x18]
  40a77e:	mov    QWORD PTR [rbp-0x8],rax
  40a782:	mov    rax,QWORD PTR [rbp-0x8]
  40a786:	mov    rdx,QWORD PTR [rax+0x30]
  40a78a:	mov    rax,QWORD PTR [rbp-0x30]
  40a78e:	add    rdx,rax
  40a791:	mov    rax,QWORD PTR [rbp-0x8]
  40a795:	mov    QWORD PTR [rax+0x30],rdx
  40a799:	cmp    DWORD PTR [rbp-0x28],0x0
  40a79d:	jns    40a845 <flatcc_emitter@@Base+0xe9>
  40a7a3:	mov    rax,QWORD PTR [rbp-0x8]
  40a7a7:	mov    rax,QWORD PTR [rax+0x18]
  40a7ab:	cmp    QWORD PTR [rbp-0x30],rax
  40a7af:	ja     40a7f3 <flatcc_emitter@@Base+0x97>
  40a7b1:	mov    rax,QWORD PTR [rbp-0x8]
  40a7b5:	mov    rax,QWORD PTR [rax+0x10]
  40a7b9:	mov    rdx,QWORD PTR [rbp-0x30]
  40a7bd:	neg    rdx
  40a7c0:	add    rdx,rax
  40a7c3:	mov    rax,QWORD PTR [rbp-0x8]
  40a7c7:	mov    QWORD PTR [rax+0x10],rdx
  40a7cb:	mov    rax,QWORD PTR [rbp-0x8]
  40a7cf:	mov    rax,QWORD PTR [rax+0x18]
  40a7d3:	sub    rax,QWORD PTR [rbp-0x30]
  40a7d7:	mov    rdx,rax
  40a7da:	mov    rax,QWORD PTR [rbp-0x8]
  40a7de:	mov    QWORD PTR [rax+0x18],rdx
  40a7e2:	mov    rax,QWORD PTR [rbp-0x8]
  40a7e6:	mov    rax,QWORD PTR [rax+0x10]
  40a7ea:	mov    QWORD PTR [rbp-0x10],rax
  40a7ee:	jmp    40a8d1 <flatcc_emitter@@Base+0x175>
  40a7f3:	mov    eax,DWORD PTR [rbp-0x24]
  40a7f6:	cdqe   
  40a7f8:	shl    rax,0x4
  40a7fc:	add    QWORD PTR [rbp-0x20],rax
  40a800:	jmp    40a833 <flatcc_emitter@@Base+0xd7>
  40a802:	sub    QWORD PTR [rbp-0x20],0x10
  40a807:	mov    rax,QWORD PTR [rbp-0x20]
  40a80b:	mov    rdx,QWORD PTR [rax+0x8]
  40a80f:	mov    rax,QWORD PTR [rbp-0x20]
  40a813:	mov    rcx,QWORD PTR [rax]
  40a816:	mov    rax,QWORD PTR [rbp-0x8]
  40a81a:	mov    rsi,rcx
  40a81d:	mov    rdi,rax
  40a820:	call   40a2cc <flatcc_builder_get_emit_context@@Base+0x403>
  40a825:	test   eax,eax
  40a827:	je     40a833 <flatcc_emitter@@Base+0xd7>
  40a829:	mov    eax,0xffffffff
  40a82e:	jmp    40a914 <flatcc_emitter@@Base+0x1b8>
  40a833:	mov    eax,DWORD PTR [rbp-0x24]
  40a836:	lea    edx,[rax-0x1]
  40a839:	mov    DWORD PTR [rbp-0x24],edx
  40a83c:	test   eax,eax
  40a83e:	jne    40a802 <flatcc_emitter@@Base+0xa6>
  40a840:	jmp    40a8ca <flatcc_emitter@@Base+0x16e>
  40a845:	mov    rax,QWORD PTR [rbp-0x8]
  40a849:	mov    rax,QWORD PTR [rax+0x28]
  40a84d:	cmp    QWORD PTR [rbp-0x30],rax
  40a851:	ja     40a8bd <flatcc_emitter@@Base+0x161>
  40a853:	mov    rax,QWORD PTR [rbp-0x8]
  40a857:	mov    rax,QWORD PTR [rax+0x20]
  40a85b:	mov    QWORD PTR [rbp-0x10],rax
  40a85f:	mov    rax,QWORD PTR [rbp-0x8]
  40a863:	mov    rdx,QWORD PTR [rax+0x20]
  40a867:	mov    rax,QWORD PTR [rbp-0x30]
  40a86b:	add    rdx,rax
  40a86e:	mov    rax,QWORD PTR [rbp-0x8]
  40a872:	mov    QWORD PTR [rax+0x20],rdx
  40a876:	mov    rax,QWORD PTR [rbp-0x8]
  40a87a:	mov    rax,QWORD PTR [rax+0x28]
  40a87e:	sub    rax,QWORD PTR [rbp-0x30]
  40a882:	mov    rdx,rax
  40a885:	mov    rax,QWORD PTR [rbp-0x8]
  40a889:	mov    QWORD PTR [rax+0x28],rdx
  40a88d:	jmp    40a8d1 <flatcc_emitter@@Base+0x175>
  40a88f:	mov    rax,QWORD PTR [rbp-0x20]
  40a893:	mov    rdx,QWORD PTR [rax+0x8]
  40a897:	mov    rax,QWORD PTR [rbp-0x20]
  40a89b:	mov    rcx,QWORD PTR [rax]
  40a89e:	mov    rax,QWORD PTR [rbp-0x8]
  40a8a2:	mov    rsi,rcx
  40a8a5:	mov    rdi,rax
  40a8a8:	call   40a3a2 <flatcc_builder_get_emit_context@@Base+0x4d9>
  40a8ad:	test   eax,eax
  40a8af:	je     40a8b8 <flatcc_emitter@@Base+0x15c>
  40a8b1:	mov    eax,0xffffffff
  40a8b6:	jmp    40a914 <flatcc_emitter@@Base+0x1b8>
  40a8b8:	add    QWORD PTR [rbp-0x20],0x10
  40a8bd:	mov    eax,DWORD PTR [rbp-0x24]
  40a8c0:	lea    edx,[rax-0x1]
  40a8c3:	mov    DWORD PTR [rbp-0x24],edx
  40a8c6:	test   eax,eax
  40a8c8:	jne    40a88f <flatcc_emitter@@Base+0x133>
  40a8ca:	mov    eax,0x0
  40a8cf:	jmp    40a914 <flatcc_emitter@@Base+0x1b8>
  40a8d1:	jmp    40a902 <flatcc_emitter@@Base+0x1a6>
  40a8d3:	mov    rax,QWORD PTR [rbp-0x20]
  40a8d7:	mov    rdx,QWORD PTR [rax+0x8]
  40a8db:	mov    rax,QWORD PTR [rbp-0x20]
  40a8df:	mov    rcx,QWORD PTR [rax]
  40a8e2:	mov    rax,QWORD PTR [rbp-0x10]
  40a8e6:	mov    rsi,rcx
  40a8e9:	mov    rdi,rax
  40a8ec:	call   403170 <memcpy@plt>
  40a8f1:	mov    rax,QWORD PTR [rbp-0x20]
  40a8f5:	mov    rax,QWORD PTR [rax+0x8]
  40a8f9:	add    QWORD PTR [rbp-0x10],rax
  40a8fd:	add    QWORD PTR [rbp-0x20],0x10
  40a902:	mov    eax,DWORD PTR [rbp-0x24]
  40a905:	lea    edx,[rax-0x1]
  40a908:	mov    DWORD PTR [rbp-0x24],edx
  40a90b:	test   eax,eax
  40a90d:	jne    40a8d3 <flatcc_emitter@@Base+0x177>
  40a90f:	mov    eax,0x0
  40a914:	leave  
  40a915:	ret    

000000000040a916 <flatcc_emitter_copy_buffer@@Base>:
  40a916:	endbr64 
  40a91a:	push   rbp
  40a91b:	mov    rbp,rsp
  40a91e:	sub    rsp,0x30
  40a922:	mov    QWORD PTR [rbp-0x18],rdi
  40a926:	mov    QWORD PTR [rbp-0x20],rsi
  40a92a:	mov    QWORD PTR [rbp-0x28],rdx
  40a92e:	mov    rax,QWORD PTR [rbp-0x18]
  40a932:	mov    rax,QWORD PTR [rax+0x30]
  40a936:	cmp    QWORD PTR [rbp-0x28],rax
  40a93a:	jae    40a946 <flatcc_emitter_copy_buffer@@Base+0x30>
  40a93c:	mov    eax,0x0
  40a941:	jmp    40aa4a <flatcc_emitter_copy_buffer@@Base+0x134>
  40a946:	mov    rax,QWORD PTR [rbp-0x18]
  40a94a:	mov    rax,QWORD PTR [rax]
  40a94d:	test   rax,rax
  40a950:	jne    40a95c <flatcc_emitter_copy_buffer@@Base+0x46>
  40a952:	mov    eax,0x0
  40a957:	jmp    40aa4a <flatcc_emitter_copy_buffer@@Base+0x134>
  40a95c:	mov    rax,QWORD PTR [rbp-0x18]
  40a960:	mov    rdx,QWORD PTR [rax]
  40a963:	mov    rax,QWORD PTR [rbp-0x18]
  40a967:	mov    rax,QWORD PTR [rax+0x8]
  40a96b:	cmp    rdx,rax
  40a96e:	jne    40a998 <flatcc_emitter_copy_buffer@@Base+0x82>
  40a970:	mov    rax,QWORD PTR [rbp-0x18]
  40a974:	mov    rdx,QWORD PTR [rax+0x30]
  40a978:	mov    rax,QWORD PTR [rbp-0x18]
  40a97c:	mov    rcx,QWORD PTR [rax+0x10]
  40a980:	mov    rax,QWORD PTR [rbp-0x20]
  40a984:	mov    rsi,rcx
  40a987:	mov    rdi,rax
  40a98a:	call   403170 <memcpy@plt>
  40a98f:	mov    rax,QWORD PTR [rbp-0x20]
  40a993:	jmp    40aa4a <flatcc_emitter_copy_buffer@@Base+0x134>
  40a998:	mov    rax,QWORD PTR [rbp-0x18]
  40a99c:	mov    rax,QWORD PTR [rax+0x18]
  40a9a0:	mov    edx,0xb80
  40a9a5:	sub    rdx,rax
  40a9a8:	mov    rax,rdx
  40a9ab:	mov    QWORD PTR [rbp-0x8],rax
  40a9af:	mov    rax,QWORD PTR [rbp-0x18]
  40a9b3:	mov    rcx,QWORD PTR [rax+0x10]
  40a9b7:	mov    rdx,QWORD PTR [rbp-0x8]
  40a9bb:	mov    rax,QWORD PTR [rbp-0x20]
  40a9bf:	mov    rsi,rcx
  40a9c2:	mov    rdi,rax
  40a9c5:	call   403170 <memcpy@plt>
  40a9ca:	mov    rax,QWORD PTR [rbp-0x8]
  40a9ce:	add    QWORD PTR [rbp-0x20],rax
  40a9d2:	mov    rax,QWORD PTR [rbp-0x18]
  40a9d6:	mov    rax,QWORD PTR [rax]
  40a9d9:	mov    rax,QWORD PTR [rax+0xb80]
  40a9e0:	mov    QWORD PTR [rbp-0x10],rax
  40a9e4:	jmp    40aa15 <flatcc_emitter_copy_buffer@@Base+0xff>
  40a9e6:	mov    rcx,QWORD PTR [rbp-0x10]
  40a9ea:	mov    rax,QWORD PTR [rbp-0x20]
  40a9ee:	mov    edx,0xb80
  40a9f3:	mov    rsi,rcx
  40a9f6:	mov    rdi,rax
  40a9f9:	call   403170 <memcpy@plt>
  40a9fe:	add    QWORD PTR [rbp-0x20],0xb80
  40aa06:	mov    rax,QWORD PTR [rbp-0x10]
  40aa0a:	mov    rax,QWORD PTR [rax+0xb80]
  40aa11:	mov    QWORD PTR [rbp-0x10],rax
  40aa15:	mov    rax,QWORD PTR [rbp-0x18]
  40aa19:	mov    rax,QWORD PTR [rax+0x8]
  40aa1d:	cmp    QWORD PTR [rbp-0x10],rax
  40aa21:	jne    40a9e6 <flatcc_emitter_copy_buffer@@Base+0xd0>
  40aa23:	mov    rax,QWORD PTR [rbp-0x18]
  40aa27:	mov    rax,QWORD PTR [rax+0x28]
  40aa2b:	mov    edx,0xb80
  40aa30:	sub    rdx,rax
  40aa33:	mov    rcx,QWORD PTR [rbp-0x10]
  40aa37:	mov    rax,QWORD PTR [rbp-0x20]
  40aa3b:	mov    rsi,rcx
  40aa3e:	mov    rdi,rax
  40aa41:	call   403170 <memcpy@plt>
  40aa46:	mov    rax,QWORD PTR [rbp-0x20]
  40aa4a:	leave  
  40aa4b:	ret    
  40aa4c:	push   rbp
  40aa4d:	mov    rbp,rsp
  40aa50:	mov    DWORD PTR [rbp-0x4],edi
  40aa53:	mov    eax,DWORD PTR [rbp-0x4]
  40aa56:	pop    rbp
  40aa57:	ret    
  40aa58:	push   rbp
  40aa59:	mov    rbp,rsp
  40aa5c:	sub    rsp,0x8
  40aa60:	mov    QWORD PTR [rbp-0x8],rdi
  40aa64:	mov    rax,QWORD PTR [rbp-0x8]
  40aa68:	mov    eax,DWORD PTR [rax]
  40aa6a:	mov    edi,eax
  40aa6c:	call   40aa4c <flatcc_emitter_copy_buffer@@Base+0x136>
  40aa71:	leave  
  40aa72:	ret    
  40aa73:	push   rbp
  40aa74:	mov    rbp,rsp
  40aa77:	mov    eax,edi
  40aa79:	mov    WORD PTR [rbp-0x4],ax
  40aa7d:	movzx  eax,WORD PTR [rbp-0x4]
  40aa81:	pop    rbp
  40aa82:	ret    
  40aa83:	push   rbp
  40aa84:	mov    rbp,rsp
  40aa87:	sub    rsp,0x8
  40aa8b:	mov    QWORD PTR [rbp-0x8],rdi
  40aa8f:	mov    rax,QWORD PTR [rbp-0x8]
  40aa93:	movzx  eax,WORD PTR [rax]
  40aa96:	movzx  eax,ax
  40aa99:	mov    edi,eax
  40aa9b:	call   40aa73 <flatcc_emitter_copy_buffer@@Base+0x15d>
  40aaa0:	leave  
  40aaa1:	ret    
  40aaa2:	push   rbp
  40aaa3:	mov    rbp,rsp
  40aaa6:	mov    DWORD PTR [rbp-0x4],edi
  40aaa9:	mov    eax,DWORD PTR [rbp-0x4]
  40aaac:	pop    rbp
  40aaad:	ret    
  40aaae:	push   rbp
  40aaaf:	mov    rbp,rsp
  40aab2:	mov    DWORD PTR [rbp-0x4],edi
  40aab5:	mov    eax,DWORD PTR [rbp-0x4]
  40aab8:	pop    rbp
  40aab9:	ret    
  40aaba:	push   rbp
  40aabb:	mov    rbp,rsp
  40aabe:	sub    rsp,0x8
  40aac2:	mov    QWORD PTR [rbp-0x8],rdi
  40aac6:	mov    rax,QWORD PTR [rbp-0x8]
  40aaca:	mov    eax,DWORD PTR [rax]
  40aacc:	mov    edi,eax
  40aace:	call   40aaa2 <flatcc_emitter_copy_buffer@@Base+0x18c>
  40aad3:	leave  
  40aad4:	ret    

000000000040aad5 <flatcc_verify_error_string@@Base>:
  40aad5:	endbr64 
  40aad9:	push   rbp
  40aada:	mov    rbp,rsp
  40aadd:	mov    DWORD PTR [rbp-0x4],edi
  40aae0:	cmp    DWORD PTR [rbp-0x4],0x24
  40aae4:	ja     40aca1 <flatcc_verify_error_string@@Base+0x1cc>
  40aaea:	mov    eax,DWORD PTR [rbp-0x4]
  40aaed:	lea    rdx,[rax*4+0x0]
  40aaf5:	lea    rax,[rip+0x3894]        # 40e390 <flatcc_builder_padding_base@@Base+0x11d0>
  40aafc:	mov    eax,DWORD PTR [rdx+rax*1]
  40aaff:	movsxd rdx,eax
  40ab02:	lea    rax,[rip+0x3887]        # 40e390 <flatcc_builder_padding_base@@Base+0x11d0>
  40ab09:	add    rax,rdx
  40ab0c:	notrack jmp rax
  40ab0f:	lea    rax,[rip+0x33d4]        # 40deea <flatcc_builder_padding_base@@Base+0xd2a>
  40ab16:	jmp    40aca8 <flatcc_verify_error_string@@Base+0x1d3>
  40ab1b:	lea    rax,[rip+0x33cb]        # 40deed <flatcc_builder_padding_base@@Base+0xd2d>
  40ab22:	jmp    40aca8 <flatcc_verify_error_string@@Base+0x1d3>
  40ab27:	lea    rax,[rip+0x33d7]        # 40df05 <flatcc_builder_padding_base@@Base+0xd45>
  40ab2e:	jmp    40aca8 <flatcc_verify_error_string@@Base+0x1d3>
  40ab33:	lea    rax,[rip+0x33df]        # 40df19 <flatcc_builder_padding_base@@Base+0xd59>
  40ab3a:	jmp    40aca8 <flatcc_verify_error_string@@Base+0x1d3>
  40ab3f:	lea    rax,[rip+0x33ed]        # 40df33 <flatcc_builder_padding_base@@Base+0xd73>
  40ab46:	jmp    40aca8 <flatcc_verify_error_string@@Base+0x1d3>
  40ab4b:	lea    rax,[rip+0x33fe]        # 40df50 <flatcc_builder_padding_base@@Base+0xd90>
  40ab52:	jmp    40aca8 <flatcc_verify_error_string@@Base+0x1d3>
  40ab57:	lea    rax,[rip+0x341a]        # 40df78 <flatcc_builder_padding_base@@Base+0xdb8>
  40ab5e:	jmp    40aca8 <flatcc_verify_error_string@@Base+0x1d3>
  40ab63:	lea    rax,[rip+0x342d]        # 40df97 <flatcc_builder_padding_base@@Base+0xdd7>
  40ab6a:	jmp    40aca8 <flatcc_verify_error_string@@Base+0x1d3>
  40ab6f:	lea    rax,[rip+0x343c]        # 40dfb2 <flatcc_builder_padding_base@@Base+0xdf2>
  40ab76:	jmp    40aca8 <flatcc_verify_error_string@@Base+0x1d3>
  40ab7b:	lea    rax,[rip+0x3444]        # 40dfc6 <flatcc_builder_padding_base@@Base+0xe06>
  40ab82:	jmp    40aca8 <flatcc_verify_error_string@@Base+0x1d3>
  40ab87:	lea    rax,[rip+0x344c]        # 40dfda <flatcc_builder_padding_base@@Base+0xe1a>
  40ab8e:	jmp    40aca8 <flatcc_verify_error_string@@Base+0x1d3>
  40ab93:	lea    rax,[rip+0x3455]        # 40dfef <flatcc_builder_padding_base@@Base+0xe2f>
  40ab9a:	jmp    40aca8 <flatcc_verify_error_string@@Base+0x1d3>
  40ab9f:	lea    rax,[rip+0x345a]        # 40e000 <flatcc_builder_padding_base@@Base+0xe40>
  40aba6:	jmp    40aca8 <flatcc_verify_error_string@@Base+0x1d3>
  40abab:	lea    rax,[rip+0x3466]        # 40e018 <flatcc_builder_padding_base@@Base+0xe58>
  40abb2:	jmp    40aca8 <flatcc_verify_error_string@@Base+0x1d3>
  40abb7:	lea    rax,[rip+0x3473]        # 40e031 <flatcc_builder_padding_base@@Base+0xe71>
  40abbe:	jmp    40aca8 <flatcc_verify_error_string@@Base+0x1d3>
  40abc3:	lea    rax,[rip+0x3486]        # 40e050 <flatcc_builder_padding_base@@Base+0xe90>
  40abca:	jmp    40aca8 <flatcc_verify_error_string@@Base+0x1d3>
  40abcf:	lea    rax,[rip+0x34a2]        # 40e078 <flatcc_builder_padding_base@@Base+0xeb8>
  40abd6:	jmp    40aca8 <flatcc_verify_error_string@@Base+0x1d3>
  40abdb:	lea    rax,[rip+0x34be]        # 40e0a0 <flatcc_builder_padding_base@@Base+0xee0>
  40abe2:	jmp    40aca8 <flatcc_verify_error_string@@Base+0x1d3>
  40abe7:	lea    rax,[rip+0x34da]        # 40e0c8 <flatcc_builder_padding_base@@Base+0xf08>
  40abee:	jmp    40aca8 <flatcc_verify_error_string@@Base+0x1d3>
  40abf3:	lea    rax,[rip+0x34e6]        # 40e0e0 <flatcc_builder_padding_base@@Base+0xf20>
  40abfa:	jmp    40aca8 <flatcc_verify_error_string@@Base+0x1d3>
  40abff:	lea    rax,[rip+0x3501]        # 40e107 <flatcc_builder_padding_base@@Base+0xf47>
  40ac06:	jmp    40aca8 <flatcc_verify_error_string@@Base+0x1d3>
  40ac0b:	lea    rax,[rip+0x350e]        # 40e120 <flatcc_builder_padding_base@@Base+0xf60>
  40ac12:	jmp    40aca8 <flatcc_verify_error_string@@Base+0x1d3>
  40ac17:	lea    rax,[rip+0x3532]        # 40e150 <flatcc_builder_padding_base@@Base+0xf90>
  40ac1e:	jmp    40aca8 <flatcc_verify_error_string@@Base+0x1d3>
  40ac23:	lea    rax,[rip+0x355e]        # 40e188 <flatcc_builder_padding_base@@Base+0xfc8>
  40ac2a:	jmp    40aca8 <flatcc_verify_error_string@@Base+0x1d3>
  40ac2c:	lea    rax,[rip+0x3585]        # 40e1b8 <flatcc_builder_padding_base@@Base+0xff8>
  40ac33:	jmp    40aca8 <flatcc_verify_error_string@@Base+0x1d3>
  40ac35:	lea    rax,[rip+0x35ac]        # 40e1e8 <flatcc_builder_padding_base@@Base+0x1028>
  40ac3c:	jmp    40aca8 <flatcc_verify_error_string@@Base+0x1d3>
  40ac3e:	lea    rax,[rip+0x35d2]        # 40e217 <flatcc_builder_padding_base@@Base+0x1057>
  40ac45:	jmp    40aca8 <flatcc_verify_error_string@@Base+0x1d3>
  40ac47:	lea    rax,[rip+0x35dd]        # 40e22b <flatcc_builder_padding_base@@Base+0x106b>
  40ac4e:	jmp    40aca8 <flatcc_verify_error_string@@Base+0x1d3>
  40ac50:	lea    rax,[rip+0x35ef]        # 40e246 <flatcc_builder_padding_base@@Base+0x1086>
  40ac57:	jmp    40aca8 <flatcc_verify_error_string@@Base+0x1d3>
  40ac59:	lea    rax,[rip+0x3600]        # 40e260 <flatcc_builder_padding_base@@Base+0x10a0>
  40ac60:	jmp    40aca8 <flatcc_verify_error_string@@Base+0x1d3>
  40ac62:	lea    rax,[rip+0x361f]        # 40e288 <flatcc_builder_padding_base@@Base+0x10c8>
  40ac69:	jmp    40aca8 <flatcc_verify_error_string@@Base+0x1d3>
  40ac6b:	lea    rax,[rip+0x363c]        # 40e2ae <flatcc_builder_padding_base@@Base+0x10ee>
  40ac72:	jmp    40aca8 <flatcc_verify_error_string@@Base+0x1d3>
  40ac74:	lea    rax,[rip+0x364d]        # 40e2c8 <flatcc_builder_padding_base@@Base+0x1108>
  40ac7b:	jmp    40aca8 <flatcc_verify_error_string@@Base+0x1d3>
  40ac7d:	lea    rax,[rip+0x366c]        # 40e2f0 <flatcc_builder_padding_base@@Base+0x1130>
  40ac84:	jmp    40aca8 <flatcc_verify_error_string@@Base+0x1d3>
  40ac86:	lea    rax,[rip+0x368b]        # 40e318 <flatcc_builder_padding_base@@Base+0x1158>
  40ac8d:	jmp    40aca8 <flatcc_verify_error_string@@Base+0x1d3>
  40ac8f:	lea    rax,[rip+0x36ba]        # 40e350 <flatcc_builder_padding_base@@Base+0x1190>
  40ac96:	jmp    40aca8 <flatcc_verify_error_string@@Base+0x1d3>
  40ac98:	lea    rax,[rip+0x36d9]        # 40e378 <flatcc_builder_padding_base@@Base+0x11b8>
  40ac9f:	jmp    40aca8 <flatcc_verify_error_string@@Base+0x1d3>
  40aca1:	lea    rax,[rip+0x36de]        # 40e386 <flatcc_builder_padding_base@@Base+0x11c6>
  40aca8:	pop    rbp
  40aca9:	ret    
  40acaa:	push   rbp
  40acab:	mov    rbp,rsp
  40acae:	sub    rsp,0x10
  40acb2:	mov    QWORD PTR [rbp-0x8],rdi
  40acb6:	mov    DWORD PTR [rbp-0xc],esi
  40acb9:	mov    edx,DWORD PTR [rbp-0xc]
  40acbc:	mov    rax,QWORD PTR [rbp-0x8]
  40acc0:	add    rax,rdx
  40acc3:	mov    rdi,rax
  40acc6:	call   40aa58 <flatcc_emitter_copy_buffer@@Base+0x142>
  40accb:	leave  
  40accc:	ret    
  40accd:	push   rbp
  40acce:	mov    rbp,rsp
  40acd1:	sub    rsp,0x20
  40acd5:	mov    QWORD PTR [rbp-0x18],rdi
  40acd9:	mov    rax,QWORD PTR fs:0x28
  40ace2:	mov    QWORD PTR [rbp-0x8],rax
  40ace6:	xor    eax,eax
  40ace8:	mov    DWORD PTR [rbp-0xc],0x0
  40acef:	mov    rcx,QWORD PTR [rbp-0x18]
  40acf3:	lea    rax,[rbp-0xc]
  40acf7:	mov    edx,0x4
  40acfc:	mov    rsi,rcx
  40acff:	mov    rdi,rax
  40ad02:	call   403100 <strncpy@plt>
  40ad07:	mov    eax,DWORD PTR [rbp-0xc]
  40ad0a:	mov    edi,eax
  40ad0c:	call   40aaae <flatcc_emitter_copy_buffer@@Base+0x198>
  40ad11:	mov    rdx,QWORD PTR [rbp-0x8]
  40ad15:	xor    rdx,QWORD PTR fs:0x28
  40ad1e:	je     40ad25 <flatcc_verify_error_string@@Base+0x250>
  40ad20:	call   403120 <__stack_chk_fail@plt>
  40ad25:	leave  
  40ad26:	ret    
  40ad27:	push   rbp
  40ad28:	mov    rbp,rsp
  40ad2b:	sub    rsp,0x10
  40ad2f:	mov    QWORD PTR [rbp-0x8],rdi
  40ad33:	mov    DWORD PTR [rbp-0xc],esi
  40ad36:	mov    edx,DWORD PTR [rbp-0xc]
  40ad39:	mov    rax,QWORD PTR [rbp-0x8]
  40ad3d:	add    rax,rdx
  40ad40:	mov    rdi,rax
  40ad43:	call   40aaba <flatcc_emitter_copy_buffer@@Base+0x1a4>
  40ad48:	leave  
  40ad49:	ret    
  40ad4a:	push   rbp
  40ad4b:	mov    rbp,rsp
  40ad4e:	sub    rsp,0x10
  40ad52:	mov    QWORD PTR [rbp-0x8],rdi
  40ad56:	mov    DWORD PTR [rbp-0xc],esi
  40ad59:	mov    edx,DWORD PTR [rbp-0xc]
  40ad5c:	mov    rax,QWORD PTR [rbp-0x8]
  40ad60:	add    rax,rdx
  40ad63:	mov    rdi,rax
  40ad66:	call   40aa83 <flatcc_emitter_copy_buffer@@Base+0x16d>
  40ad6b:	leave  
  40ad6c:	ret    
  40ad6d:	push   rbp
  40ad6e:	mov    rbp,rsp
  40ad71:	mov    DWORD PTR [rbp-0x14],edi
  40ad74:	mov    DWORD PTR [rbp-0x18],esi
  40ad77:	mov    DWORD PTR [rbp-0x1c],edx
  40ad7a:	mov    edx,DWORD PTR [rbp-0x18]
  40ad7d:	mov    eax,DWORD PTR [rbp-0x1c]
  40ad80:	add    eax,edx
  40ad82:	mov    DWORD PTR [rbp-0x4],eax
  40ad85:	mov    eax,DWORD PTR [rbp-0x4]
  40ad88:	cmp    eax,DWORD PTR [rbp-0x18]
  40ad8b:	jbe    40adae <flatcc_verify_error_string@@Base+0x2d9>
  40ad8d:	mov    eax,DWORD PTR [rbp-0x4]
  40ad90:	lea    rdx,[rax+0x4]
  40ad94:	mov    eax,DWORD PTR [rbp-0x14]
  40ad97:	cmp    rdx,rax
  40ad9a:	ja     40adae <flatcc_verify_error_string@@Base+0x2d9>
  40ad9c:	mov    eax,DWORD PTR [rbp-0x4]
  40ad9f:	and    eax,0x3
  40ada2:	test   rax,rax
  40ada5:	jne    40adae <flatcc_verify_error_string@@Base+0x2d9>
  40ada7:	mov    eax,0x1
  40adac:	jmp    40adb3 <flatcc_verify_error_string@@Base+0x2de>
  40adae:	mov    eax,0x0
  40adb3:	pop    rbp
  40adb4:	ret    
  40adb5:	push   rbp
  40adb6:	mov    rbp,rsp
  40adb9:	mov    DWORD PTR [rbp-0x14],edi
  40adbc:	mov    DWORD PTR [rbp-0x18],esi
  40adbf:	mov    DWORD PTR [rbp-0x1c],edx
  40adc2:	mov    eax,ecx
  40adc4:	mov    WORD PTR [rbp-0x20],ax
  40adc8:	mov    edx,DWORD PTR [rbp-0x18]
  40adcb:	mov    eax,DWORD PTR [rbp-0x1c]
  40adce:	add    eax,edx
  40add0:	mov    DWORD PTR [rbp-0x4],eax
  40add3:	mov    eax,0x4
  40add8:	cmp    WORD PTR [rbp-0x20],0x4
  40addd:	cmovae ax,WORD PTR [rbp-0x20]
  40ade2:	mov    WORD PTR [rbp-0x20],ax
  40ade6:	mov    eax,DWORD PTR [rbp-0x4]
  40ade9:	cmp    eax,DWORD PTR [rbp-0x18]
  40adec:	jbe    40ae1e <flatcc_verify_error_string@@Base+0x349>
  40adee:	mov    eax,DWORD PTR [rbp-0x4]
  40adf1:	lea    rdx,[rax+0x4]
  40adf5:	mov    eax,DWORD PTR [rbp-0x14]
  40adf8:	cmp    rdx,rax
  40adfb:	ja     40ae1e <flatcc_verify_error_string@@Base+0x349>
  40adfd:	mov    eax,DWORD PTR [rbp-0x4]
  40ae00:	lea    rdx,[rax+0x4]
  40ae04:	movzx  eax,WORD PTR [rbp-0x20]
  40ae08:	dec    eax
  40ae0a:	or     eax,0x3
  40ae0d:	cdqe   
  40ae0f:	and    rax,rdx
  40ae12:	test   rax,rax
  40ae15:	jne    40ae1e <flatcc_verify_error_string@@Base+0x349>
  40ae17:	mov    eax,0x1
  40ae1c:	jmp    40ae23 <flatcc_verify_error_string@@Base+0x34e>
  40ae1e:	mov    eax,0x0
  40ae23:	pop    rbp
  40ae24:	ret    
  40ae25:	push   rbp
  40ae26:	mov    rbp,rsp
  40ae29:	mov    DWORD PTR [rbp-0x14],edi
  40ae2c:	mov    DWORD PTR [rbp-0x18],esi
  40ae2f:	mov    DWORD PTR [rbp-0x1c],edx
  40ae32:	mov    DWORD PTR [rbp-0x20],ecx
  40ae35:	mov    eax,r8d
  40ae38:	mov    WORD PTR [rbp-0x24],ax
  40ae3c:	cmp    DWORD PTR [rbp-0x1c],0x0
  40ae40:	je     40ae4f <flatcc_verify_error_string@@Base+0x37a>
  40ae42:	mov    edx,DWORD PTR [rbp-0x18]
  40ae45:	mov    eax,DWORD PTR [rbp-0x1c]
  40ae48:	add    eax,edx
  40ae4a:	cmp    DWORD PTR [rbp-0x14],eax
  40ae4d:	jae    40ae56 <flatcc_verify_error_string@@Base+0x381>
  40ae4f:	mov    eax,0x12
  40ae54:	jmp    40aec4 <flatcc_verify_error_string@@Base+0x3ef>
  40ae56:	mov    eax,DWORD PTR [rbp-0x1c]
  40ae59:	add    DWORD PTR [rbp-0x18],eax
  40ae5c:	mov    edx,DWORD PTR [rbp-0x18]
  40ae5f:	mov    eax,DWORD PTR [rbp-0x20]
  40ae62:	add    eax,edx
  40ae64:	cmp    DWORD PTR [rbp-0x18],eax
  40ae67:	setbe  al
  40ae6a:	movzx  eax,al
  40ae6d:	mov    DWORD PTR [rbp-0xc],eax
  40ae70:	cmp    DWORD PTR [rbp-0xc],0x0
  40ae74:	jne    40ae7d <flatcc_verify_error_string@@Base+0x3a8>
  40ae76:	mov    eax,0xa
  40ae7b:	jmp    40aec4 <flatcc_verify_error_string@@Base+0x3ef>
  40ae7d:	mov    edx,DWORD PTR [rbp-0x18]
  40ae80:	mov    eax,DWORD PTR [rbp-0x20]
  40ae83:	add    eax,edx
  40ae85:	cmp    DWORD PTR [rbp-0x14],eax
  40ae88:	setae  al
  40ae8b:	movzx  eax,al
  40ae8e:	mov    DWORD PTR [rbp-0x8],eax
  40ae91:	cmp    DWORD PTR [rbp-0x8],0x0
  40ae95:	jne    40ae9e <flatcc_verify_error_string@@Base+0x3c9>
  40ae97:	mov    eax,0x9
  40ae9c:	jmp    40aec4 <flatcc_verify_error_string@@Base+0x3ef>
  40ae9e:	movzx  eax,WORD PTR [rbp-0x24]
  40aea2:	dec    eax
  40aea4:	and    eax,DWORD PTR [rbp-0x18]
  40aea7:	test   eax,eax
  40aea9:	sete   al
  40aeac:	movzx  eax,al
  40aeaf:	mov    DWORD PTR [rbp-0x4],eax
  40aeb2:	cmp    DWORD PTR [rbp-0x4],0x0
  40aeb6:	jne    40aebf <flatcc_verify_error_string@@Base+0x3ea>
  40aeb8:	mov    eax,0xb
  40aebd:	jmp    40aec4 <flatcc_verify_error_string@@Base+0x3ef>
  40aebf:	mov    eax,0x0
  40aec4:	pop    rbp
  40aec5:	ret    
  40aec6:	push   rbp
  40aec7:	mov    rbp,rsp
  40aeca:	sub    rsp,0x20
  40aece:	mov    QWORD PTR [rbp-0x18],rdi
  40aed2:	mov    eax,esi
  40aed4:	mov    WORD PTR [rbp-0x1c],ax
  40aed8:	movzx  eax,WORD PTR [rbp-0x1c]
  40aedc:	add    eax,0x2
  40aedf:	cdqe   
  40aee1:	add    eax,eax
  40aee3:	mov    WORD PTR [rbp-0x2],ax
  40aee7:	mov    rax,QWORD PTR [rbp-0x18]
  40aeeb:	movzx  eax,WORD PTR [rax+0x1e]
  40aeef:	cmp    WORD PTR [rbp-0x2],ax
  40aef3:	jb     40aefc <flatcc_verify_error_string@@Base+0x427>
  40aef5:	mov    eax,0x0
  40aefa:	jmp    40af15 <flatcc_verify_error_string@@Base+0x440>
  40aefc:	movzx  edx,WORD PTR [rbp-0x2]
  40af00:	mov    rax,QWORD PTR [rbp-0x18]
  40af04:	mov    rax,QWORD PTR [rax+0x10]
  40af08:	mov    esi,edx
  40af0a:	mov    rdi,rax
  40af0d:	call   40ad4a <flatcc_verify_error_string@@Base+0x275>
  40af12:	movzx  eax,ax
  40af15:	leave  
  40af16:	ret    
  40af17:	push   rbp
  40af18:	mov    rbp,rsp
  40af1b:	sub    rsp,0x20
  40af1f:	mov    QWORD PTR [rbp-0x18],rdi
  40af23:	mov    eax,esi
  40af25:	mov    WORD PTR [rbp-0x1c],ax
  40af29:	movzx  edx,WORD PTR [rbp-0x1c]
  40af2d:	mov    rax,QWORD PTR [rbp-0x18]
  40af31:	mov    esi,edx
  40af33:	mov    rdi,rax
  40af36:	call   40aec6 <flatcc_verify_error_string@@Base+0x3f1>
  40af3b:	mov    WORD PTR [rbp-0x2],ax
  40af3f:	cmp    WORD PTR [rbp-0x2],0x0
  40af44:	je     40af62 <flatcc_verify_error_string@@Base+0x48d>
  40af46:	mov    rax,QWORD PTR [rbp-0x18]
  40af4a:	mov    rdx,QWORD PTR [rax]
  40af4d:	mov    rax,QWORD PTR [rbp-0x18]
  40af51:	mov    eax,DWORD PTR [rax+0x18]
  40af54:	mov    ecx,eax
  40af56:	movzx  eax,WORD PTR [rbp-0x2]
  40af5a:	add    rax,rcx
  40af5d:	add    rax,rdx
  40af60:	jmp    40af67 <flatcc_verify_error_string@@Base+0x492>
  40af62:	mov    eax,0x0
  40af67:	leave  
  40af68:	ret    
  40af69:	endbr64 
  40af6d:	push   rbp
  40af6e:	mov    rbp,rsp
  40af71:	sub    rsp,0x38
  40af75:	mov    QWORD PTR [rbp-0x28],rdi
  40af79:	mov    eax,esi
  40af7b:	mov    DWORD PTR [rbp-0x30],edx
  40af7e:	mov    DWORD PTR [rbp-0x34],ecx
  40af81:	mov    edx,r8d
  40af84:	mov    WORD PTR [rbp-0x2c],ax
  40af88:	mov    eax,edx
  40af8a:	mov    WORD PTR [rbp-0x38],ax
  40af8e:	mov    rax,QWORD PTR [rbp-0x28]
  40af92:	mov    rax,QWORD PTR [rax]
  40af95:	mov    DWORD PTR [rbp-0x1c],eax
  40af98:	movzx  edx,WORD PTR [rbp-0x2c]
  40af9c:	mov    rax,QWORD PTR [rbp-0x28]
  40afa0:	mov    esi,edx
  40afa2:	mov    rdi,rax
  40afa5:	call   40aec6 <flatcc_verify_error_string@@Base+0x3f1>
  40afaa:	mov    WORD PTR [rbp-0x1e],ax
  40afae:	cmp    WORD PTR [rbp-0x1e],0x0
  40afb3:	jne    40afd9 <flatcc_verify_error_string@@Base+0x504>
  40afb5:	cmp    DWORD PTR [rbp-0x30],0x0
  40afb9:	sete   al
  40afbc:	movzx  eax,al
  40afbf:	mov    DWORD PTR [rbp-0x18],eax
  40afc2:	cmp    DWORD PTR [rbp-0x18],0x0
  40afc6:	jne    40afd2 <flatcc_verify_error_string@@Base+0x4fd>
  40afc8:	mov    eax,0x4
  40afcd:	jmp    40b058 <flatcc_verify_error_string@@Base+0x583>
  40afd2:	mov    eax,0x0
  40afd7:	jmp    40b058 <flatcc_verify_error_string@@Base+0x583>
  40afd9:	movzx  eax,WORD PTR [rbp-0x1e]
  40afdd:	mov    DWORD PTR [rbp-0x14],eax
  40afe0:	mov    edx,DWORD PTR [rbp-0x14]
  40afe3:	mov    eax,DWORD PTR [rbp-0x34]
  40afe6:	add    eax,edx
  40afe8:	mov    DWORD PTR [rbp-0x10],eax
  40afeb:	mov    rax,QWORD PTR [rbp-0x28]
  40afef:	movzx  eax,WORD PTR [rax+0x1c]
  40aff3:	movzx  eax,ax
  40aff6:	cmp    DWORD PTR [rbp-0x10],eax
  40aff9:	setbe  al
  40affc:	movzx  eax,al
  40afff:	mov    DWORD PTR [rbp-0xc],eax
  40b002:	cmp    DWORD PTR [rbp-0xc],0x0
  40b006:	jne    40b00f <flatcc_verify_error_string@@Base+0x53a>
  40b008:	mov    eax,0xd
  40b00d:	jmp    40b058 <flatcc_verify_error_string@@Base+0x583>
  40b00f:	mov    DWORD PTR [rbp-0x8],0x1
  40b016:	cmp    DWORD PTR [rbp-0x8],0x0
  40b01a:	jne    40b023 <flatcc_verify_error_string@@Base+0x54e>
  40b01c:	mov    eax,0xe
  40b021:	jmp    40b058 <flatcc_verify_error_string@@Base+0x583>
  40b023:	mov    rax,QWORD PTR [rbp-0x28]
  40b027:	mov    edx,DWORD PTR [rax+0x18]
  40b02a:	mov    eax,DWORD PTR [rbp-0x1c]
  40b02d:	add    eax,edx
  40b02f:	add    DWORD PTR [rbp-0x14],eax
  40b032:	movzx  eax,WORD PTR [rbp-0x38]
  40b036:	dec    eax
  40b038:	and    eax,DWORD PTR [rbp-0x14]
  40b03b:	test   eax,eax
  40b03d:	sete   al
  40b040:	movzx  eax,al
  40b043:	mov    DWORD PTR [rbp-0x4],eax
  40b046:	cmp    DWORD PTR [rbp-0x4],0x0
  40b04a:	jne    40b053 <flatcc_verify_error_string@@Base+0x57e>
  40b04c:	mov    eax,0xc
  40b051:	jmp    40b058 <flatcc_verify_error_string@@Base+0x583>
  40b053:	mov    eax,0x0
  40b058:	leave  
  40b059:	ret    
  40b05a:	endbr64 
  40b05e:	push   rbp
  40b05f:	mov    rbp,rsp
  40b062:	sub    rsp,0x38
  40b066:	mov    QWORD PTR [rbp-0x28],rdi
  40b06a:	mov    eax,esi
  40b06c:	mov    DWORD PTR [rbp-0x30],edx
  40b06f:	mov    QWORD PTR [rbp-0x38],rcx
  40b073:	mov    WORD PTR [rbp-0x2c],ax
  40b077:	movzx  edx,WORD PTR [rbp-0x2c]
  40b07b:	mov    rax,QWORD PTR [rbp-0x28]
  40b07f:	mov    esi,edx
  40b081:	mov    rdi,rax
  40b084:	call   40aec6 <flatcc_verify_error_string@@Base+0x3f1>
  40b089:	mov    WORD PTR [rbp-0x16],ax
  40b08d:	cmp    WORD PTR [rbp-0x16],0x0
  40b092:	jne    40b0b5 <flatcc_verify_error_string@@Base+0x5e0>
  40b094:	mov    rax,QWORD PTR [rbp-0x38]
  40b098:	mov    DWORD PTR [rax],0x0
  40b09e:	cmp    DWORD PTR [rbp-0x30],0x0
  40b0a2:	je     40b0ae <flatcc_verify_error_string@@Base+0x5d9>
  40b0a4:	mov    eax,0x4
  40b0a9:	jmp    40b134 <flatcc_verify_error_string@@Base+0x65f>
  40b0ae:	mov    eax,0x0
  40b0b3:	jmp    40b134 <flatcc_verify_error_string@@Base+0x65f>
  40b0b5:	movzx  eax,WORD PTR [rbp-0x16]
  40b0b9:	mov    DWORD PTR [rbp-0x14],eax
  40b0bc:	mov    eax,DWORD PTR [rbp-0x14]
  40b0bf:	add    eax,0x4
  40b0c2:	mov    DWORD PTR [rbp-0x10],eax
  40b0c5:	mov    rax,QWORD PTR [rbp-0x28]
  40b0c9:	movzx  eax,WORD PTR [rax+0x1c]
  40b0cd:	movzx  eax,ax
  40b0d0:	cmp    DWORD PTR [rbp-0x10],eax
  40b0d3:	setbe  al
  40b0d6:	movzx  eax,al
  40b0d9:	mov    DWORD PTR [rbp-0xc],eax
  40b0dc:	cmp    DWORD PTR [rbp-0xc],0x0
  40b0e0:	jne    40b0e9 <flatcc_verify_error_string@@Base+0x614>
  40b0e2:	mov    eax,0xd
  40b0e7:	jmp    40b134 <flatcc_verify_error_string@@Base+0x65f>
  40b0e9:	mov    DWORD PTR [rbp-0x8],0x1
  40b0f0:	cmp    DWORD PTR [rbp-0x8],0x0
  40b0f4:	jne    40b0fd <flatcc_verify_error_string@@Base+0x628>
  40b0f6:	mov    eax,0xe
  40b0fb:	jmp    40b134 <flatcc_verify_error_string@@Base+0x65f>
  40b0fd:	mov    rax,QWORD PTR [rbp-0x28]
  40b101:	mov    eax,DWORD PTR [rax+0x18]
  40b104:	add    DWORD PTR [rbp-0x14],eax
  40b107:	mov    eax,DWORD PTR [rbp-0x14]
  40b10a:	and    eax,0x3
  40b10d:	test   rax,rax
  40b110:	sete   al
  40b113:	movzx  eax,al
  40b116:	mov    DWORD PTR [rbp-0x4],eax
  40b119:	cmp    DWORD PTR [rbp-0x4],0x0
  40b11d:	jne    40b126 <flatcc_verify_error_string@@Base+0x651>
  40b11f:	mov    eax,0xc
  40b124:	jmp    40b134 <flatcc_verify_error_string@@Base+0x65f>
  40b126:	mov    rax,QWORD PTR [rbp-0x38]
  40b12a:	mov    edx,DWORD PTR [rbp-0x14]
  40b12d:	mov    DWORD PTR [rax],edx
  40b12f:	mov    eax,0x0
  40b134:	leave  
  40b135:	ret    
  40b136:	push   rbp
  40b137:	mov    rbp,rsp
  40b13a:	sub    rsp,0x28
  40b13e:	mov    QWORD PTR [rbp-0x18],rdi
  40b142:	mov    DWORD PTR [rbp-0x1c],esi
  40b145:	mov    DWORD PTR [rbp-0x20],edx
  40b148:	mov    DWORD PTR [rbp-0x24],ecx
  40b14b:	mov    edx,DWORD PTR [rbp-0x24]
  40b14e:	mov    ecx,DWORD PTR [rbp-0x20]
  40b151:	mov    eax,DWORD PTR [rbp-0x1c]
  40b154:	mov    esi,ecx
  40b156:	mov    edi,eax
  40b158:	call   40ad6d <flatcc_verify_error_string@@Base+0x298>
  40b15d:	mov    DWORD PTR [rbp-0x10],eax
  40b160:	cmp    DWORD PTR [rbp-0x10],0x0
  40b164:	jne    40b16d <flatcc_verify_error_string@@Base+0x698>
  40b166:	mov    eax,0x11
  40b16b:	jmp    40b1de <flatcc_verify_error_string@@Base+0x709>
  40b16d:	mov    eax,DWORD PTR [rbp-0x24]
  40b170:	add    DWORD PTR [rbp-0x20],eax
  40b173:	mov    edx,DWORD PTR [rbp-0x20]
  40b176:	mov    rax,QWORD PTR [rbp-0x18]
  40b17a:	mov    esi,edx
  40b17c:	mov    rdi,rax
  40b17f:	call   40acaa <flatcc_verify_error_string@@Base+0x1d5>
  40b184:	mov    DWORD PTR [rbp-0xc],eax
  40b187:	add    DWORD PTR [rbp-0x20],0x4
  40b18b:	mov    eax,DWORD PTR [rbp-0x1c]
  40b18e:	sub    eax,DWORD PTR [rbp-0x20]
  40b191:	mov    edx,DWORD PTR [rbp-0xc]
  40b194:	inc    edx
  40b196:	cmp    eax,edx
  40b198:	setae  al
  40b19b:	movzx  eax,al
  40b19e:	mov    DWORD PTR [rbp-0x8],eax
  40b1a1:	cmp    DWORD PTR [rbp-0x8],0x0
  40b1a5:	jne    40b1ae <flatcc_verify_error_string@@Base+0x6d9>
  40b1a7:	mov    eax,0x8
  40b1ac:	jmp    40b1de <flatcc_verify_error_string@@Base+0x709>
  40b1ae:	mov    edx,DWORD PTR [rbp-0x20]
  40b1b1:	mov    eax,DWORD PTR [rbp-0xc]
  40b1b4:	add    rdx,rax
  40b1b7:	mov    rax,QWORD PTR [rbp-0x18]
  40b1bb:	add    rax,rdx
  40b1be:	movzx  eax,BYTE PTR [rax]
  40b1c1:	test   al,al
  40b1c3:	sete   al
  40b1c6:	movzx  eax,al
  40b1c9:	mov    DWORD PTR [rbp-0x4],eax
  40b1cc:	cmp    DWORD PTR [rbp-0x4],0x0
  40b1d0:	jne    40b1d9 <flatcc_verify_error_string@@Base+0x704>
  40b1d2:	mov    eax,0x7
  40b1d7:	jmp    40b1de <flatcc_verify_error_string@@Base+0x709>
  40b1d9:	mov    eax,0x0
  40b1de:	leave  
  40b1df:	ret    
  40b1e0:	push   rbp
  40b1e1:	mov    rbp,rsp
  40b1e4:	sub    rsp,0x30
  40b1e8:	mov    QWORD PTR [rbp-0x18],rdi
  40b1ec:	mov    DWORD PTR [rbp-0x1c],esi
  40b1ef:	mov    DWORD PTR [rbp-0x20],edx
  40b1f2:	mov    DWORD PTR [rbp-0x24],ecx
  40b1f5:	mov    DWORD PTR [rbp-0x28],r8d
  40b1f9:	mov    eax,r9d
  40b1fc:	mov    WORD PTR [rbp-0x2c],ax
  40b200:	movzx  ecx,WORD PTR [rbp-0x2c]
  40b204:	mov    edx,DWORD PTR [rbp-0x24]
  40b207:	mov    esi,DWORD PTR [rbp-0x20]
  40b20a:	mov    eax,DWORD PTR [rbp-0x1c]
  40b20d:	mov    edi,eax
  40b20f:	call   40adb5 <flatcc_verify_error_string@@Base+0x2e0>
  40b214:	mov    DWORD PTR [rbp-0x10],eax
  40b217:	cmp    DWORD PTR [rbp-0x10],0x0
  40b21b:	jne    40b224 <flatcc_verify_error_string@@Base+0x74f>
  40b21d:	mov    eax,0x10
  40b222:	jmp    40b28a <flatcc_verify_error_string@@Base+0x7b5>
  40b224:	mov    eax,DWORD PTR [rbp-0x24]
  40b227:	add    DWORD PTR [rbp-0x20],eax
  40b22a:	mov    edx,DWORD PTR [rbp-0x20]
  40b22d:	mov    rax,QWORD PTR [rbp-0x18]
  40b231:	mov    esi,edx
  40b233:	mov    rdi,rax
  40b236:	call   40acaa <flatcc_verify_error_string@@Base+0x1d5>
  40b23b:	mov    DWORD PTR [rbp-0xc],eax
  40b23e:	add    DWORD PTR [rbp-0x20],0x4
  40b242:	mov    eax,DWORD PTR [rbp-0xc]
  40b245:	cmp    eax,DWORD PTR [rbp+0x10]
  40b248:	setbe  al
  40b24b:	movzx  eax,al
  40b24e:	mov    DWORD PTR [rbp-0x8],eax
  40b251:	cmp    DWORD PTR [rbp-0x8],0x0
  40b255:	jne    40b25e <flatcc_verify_error_string@@Base+0x789>
  40b257:	mov    eax,0x19
  40b25c:	jmp    40b28a <flatcc_verify_error_string@@Base+0x7b5>
  40b25e:	mov    eax,DWORD PTR [rbp-0x1c]
  40b261:	sub    eax,DWORD PTR [rbp-0x20]
  40b264:	mov    edx,eax
  40b266:	mov    eax,DWORD PTR [rbp-0xc]
  40b269:	imul   eax,DWORD PTR [rbp-0x28]
  40b26d:	cmp    edx,eax
  40b26f:	setae  al
  40b272:	movzx  eax,al
  40b275:	mov    DWORD PTR [rbp-0x4],eax
  40b278:	cmp    DWORD PTR [rbp-0x4],0x0
  40b27c:	jne    40b285 <flatcc_verify_error_string@@Base+0x7b0>
  40b27e:	mov    eax,0x1a
  40b283:	jmp    40b28a <flatcc_verify_error_string@@Base+0x7b5>
  40b285:	mov    eax,0x0
  40b28a:	leave  
  40b28b:	ret    
  40b28c:	push   rbp
  40b28d:	mov    rbp,rsp
  40b290:	sub    rsp,0x28
  40b294:	mov    QWORD PTR [rbp-0x18],rdi
  40b298:	mov    DWORD PTR [rbp-0x1c],esi
  40b29b:	mov    DWORD PTR [rbp-0x20],edx
  40b29e:	mov    DWORD PTR [rbp-0x24],ecx
  40b2a1:	mov    ecx,DWORD PTR [rbp-0x24]
  40b2a4:	mov    edx,DWORD PTR [rbp-0x20]
  40b2a7:	mov    esi,DWORD PTR [rbp-0x1c]
  40b2aa:	mov    rax,QWORD PTR [rbp-0x18]
  40b2ae:	push   0x3fffffff
  40b2b3:	mov    r9d,0x4
  40b2b9:	mov    r8d,0x4
  40b2bf:	mov    rdi,rax
  40b2c2:	call   40b1e0 <flatcc_verify_error_string@@Base+0x70b>
  40b2c7:	add    rsp,0x8
  40b2cb:	test   eax,eax
  40b2cd:	je     40b2fe <flatcc_verify_error_string@@Base+0x829>
  40b2cf:	mov    ecx,DWORD PTR [rbp-0x24]
  40b2d2:	mov    edx,DWORD PTR [rbp-0x20]
  40b2d5:	mov    esi,DWORD PTR [rbp-0x1c]
  40b2d8:	mov    rax,QWORD PTR [rbp-0x18]
  40b2dc:	push   0x3fffffff
  40b2e1:	mov    r9d,0x4
  40b2e7:	mov    r8d,0x4
  40b2ed:	mov    rdi,rax
  40b2f0:	call   40b1e0 <flatcc_verify_error_string@@Base+0x70b>
  40b2f5:	add    rsp,0x8
  40b2f9:	jmp    40b389 <flatcc_verify_error_string@@Base+0x8b4>
  40b2fe:	mov    eax,DWORD PTR [rbp-0x24]
  40b301:	add    DWORD PTR [rbp-0x20],eax
  40b304:	mov    edx,DWORD PTR [rbp-0x20]
  40b307:	mov    rax,QWORD PTR [rbp-0x18]
  40b30b:	mov    esi,edx
  40b30d:	mov    rdi,rax
  40b310:	call   40acaa <flatcc_verify_error_string@@Base+0x1d5>
  40b315:	mov    DWORD PTR [rbp-0x4],eax
  40b318:	add    DWORD PTR [rbp-0x20],0x4
  40b31c:	mov    DWORD PTR [rbp-0x8],0x0
  40b323:	jmp    40b37c <flatcc_verify_error_string@@Base+0x8a7>
  40b325:	mov    edx,DWORD PTR [rbp-0x20]
  40b328:	mov    rax,QWORD PTR [rbp-0x18]
  40b32c:	mov    esi,edx
  40b32e:	mov    rdi,rax
  40b331:	call   40acaa <flatcc_verify_error_string@@Base+0x1d5>
  40b336:	mov    ecx,eax
  40b338:	mov    edx,DWORD PTR [rbp-0x20]
  40b33b:	mov    esi,DWORD PTR [rbp-0x1c]
  40b33e:	mov    rax,QWORD PTR [rbp-0x18]
  40b342:	mov    rdi,rax
  40b345:	call   40b136 <flatcc_verify_error_string@@Base+0x661>
  40b34a:	test   eax,eax
  40b34c:	je     40b375 <flatcc_verify_error_string@@Base+0x8a0>
  40b34e:	mov    edx,DWORD PTR [rbp-0x20]
  40b351:	mov    rax,QWORD PTR [rbp-0x18]
  40b355:	mov    esi,edx
  40b357:	mov    rdi,rax
  40b35a:	call   40acaa <flatcc_verify_error_string@@Base+0x1d5>
  40b35f:	mov    ecx,eax
  40b361:	mov    edx,DWORD PTR [rbp-0x20]
  40b364:	mov    esi,DWORD PTR [rbp-0x1c]
  40b367:	mov    rax,QWORD PTR [rbp-0x18]
  40b36b:	mov    rdi,rax
  40b36e:	call   40b136 <flatcc_verify_error_string@@Base+0x661>
  40b373:	jmp    40b389 <flatcc_verify_error_string@@Base+0x8b4>
  40b375:	inc    DWORD PTR [rbp-0x8]
  40b378:	add    DWORD PTR [rbp-0x20],0x4
  40b37c:	mov    eax,DWORD PTR [rbp-0x8]
  40b37f:	cmp    eax,DWORD PTR [rbp-0x4]
  40b382:	jb     40b325 <flatcc_verify_error_string@@Base+0x850>
  40b384:	mov    eax,0x0
  40b389:	leave  
  40b38a:	ret    
  40b38b:	push   rbp
  40b38c:	mov    rbp,rsp
  40b38f:	push   rbx
  40b390:	sub    rsp,0x88
  40b397:	mov    QWORD PTR [rbp-0x78],rdi
  40b39b:	mov    DWORD PTR [rbp-0x7c],esi
  40b39e:	mov    DWORD PTR [rbp-0x80],edx
  40b3a1:	mov    DWORD PTR [rbp-0x84],ecx
  40b3a7:	mov    DWORD PTR [rbp-0x88],r8d
  40b3ae:	mov    QWORD PTR [rbp-0x90],r9
  40b3b5:	mov    rax,QWORD PTR fs:0x28
  40b3be:	mov    QWORD PTR [rbp-0x18],rax
  40b3c2:	xor    eax,eax
  40b3c4:	mov    eax,DWORD PTR [rbp-0x88]
  40b3ca:	dec    eax
  40b3cc:	mov    DWORD PTR [rbp-0x34],eax
  40b3cf:	mov    eax,DWORD PTR [rbp-0x34]
  40b3d2:	mov    DWORD PTR [rbp-0x68],eax
  40b3d5:	cmp    DWORD PTR [rbp-0x68],0x0
  40b3d9:	jne    40b3e5 <flatcc_verify_error_string@@Base+0x910>
  40b3db:	mov    eax,0x3
  40b3e0:	jmp    40b587 <flatcc_verify_error_string@@Base+0xab2>
  40b3e5:	mov    edx,DWORD PTR [rbp-0x84]
  40b3eb:	mov    ecx,DWORD PTR [rbp-0x80]
  40b3ee:	mov    eax,DWORD PTR [rbp-0x7c]
  40b3f1:	mov    esi,ecx
  40b3f3:	mov    edi,eax
  40b3f5:	call   40ad6d <flatcc_verify_error_string@@Base+0x298>
  40b3fa:	mov    DWORD PTR [rbp-0x64],eax
  40b3fd:	cmp    DWORD PTR [rbp-0x64],0x0
  40b401:	jne    40b40d <flatcc_verify_error_string@@Base+0x938>
  40b403:	mov    eax,0xf
  40b408:	jmp    40b587 <flatcc_verify_error_string@@Base+0xab2>
  40b40d:	mov    edx,DWORD PTR [rbp-0x80]
  40b410:	mov    eax,DWORD PTR [rbp-0x84]
  40b416:	add    eax,edx
  40b418:	mov    DWORD PTR [rbp-0x28],eax
  40b41b:	mov    ebx,DWORD PTR [rbp-0x28]
  40b41e:	mov    edx,DWORD PTR [rbp-0x28]
  40b421:	mov    rax,QWORD PTR [rbp-0x78]
  40b425:	mov    esi,edx
  40b427:	mov    rdi,rax
  40b42a:	call   40acaa <flatcc_verify_error_string@@Base+0x1d5>
  40b42f:	sub    ebx,eax
  40b431:	mov    eax,ebx
  40b433:	mov    DWORD PTR [rbp-0x60],eax
  40b436:	mov    eax,DWORD PTR [rbp-0x60]
  40b439:	test   eax,eax
  40b43b:	js     40b44f <flatcc_verify_error_string@@Base+0x97a>
  40b43d:	mov    eax,DWORD PTR [rbp-0x60]
  40b440:	and    eax,0x1
  40b443:	test   rax,rax
  40b446:	jne    40b44f <flatcc_verify_error_string@@Base+0x97a>
  40b448:	mov    eax,0x1
  40b44d:	jmp    40b454 <flatcc_verify_error_string@@Base+0x97f>
  40b44f:	mov    eax,0x0
  40b454:	mov    DWORD PTR [rbp-0x5c],eax
  40b457:	cmp    DWORD PTR [rbp-0x5c],0x0
  40b45b:	jne    40b467 <flatcc_verify_error_string@@Base+0x992>
  40b45d:	mov    eax,0x1d
  40b462:	jmp    40b587 <flatcc_verify_error_string@@Base+0xab2>
  40b467:	mov    eax,DWORD PTR [rbp-0x60]
  40b46a:	lea    rdx,[rax+0x2]
  40b46e:	mov    eax,DWORD PTR [rbp-0x7c]
  40b471:	cmp    rdx,rax
  40b474:	setbe  al
  40b477:	movzx  eax,al
  40b47a:	mov    DWORD PTR [rbp-0x58],eax
  40b47d:	cmp    DWORD PTR [rbp-0x58],0x0
  40b481:	jne    40b48d <flatcc_verify_error_string@@Base+0x9b8>
  40b483:	mov    eax,0x1b
  40b488:	jmp    40b587 <flatcc_verify_error_string@@Base+0xab2>
  40b48d:	mov    edx,DWORD PTR [rbp-0x60]
  40b490:	mov    rax,QWORD PTR [rbp-0x78]
  40b494:	mov    esi,edx
  40b496:	mov    rdi,rax
  40b499:	call   40ad4a <flatcc_verify_error_string@@Base+0x275>
  40b49e:	mov    WORD PTR [rbp-0x22],ax
  40b4a2:	movzx  eax,WORD PTR [rbp-0x22]
  40b4a6:	movzx  edx,ax
  40b4a9:	mov    eax,DWORD PTR [rbp-0x60]
  40b4ac:	add    eax,edx
  40b4ae:	mov    DWORD PTR [rbp-0x54],eax
  40b4b1:	mov    eax,DWORD PTR [rbp-0x54]
  40b4b4:	cmp    eax,DWORD PTR [rbp-0x7c]
  40b4b7:	ja     40b4cf <flatcc_verify_error_string@@Base+0x9fa>
  40b4b9:	movzx  eax,WORD PTR [rbp-0x22]
  40b4bd:	movzx  eax,ax
  40b4c0:	and    eax,0x1
  40b4c3:	test   rax,rax
  40b4c6:	jne    40b4cf <flatcc_verify_error_string@@Base+0x9fa>
  40b4c8:	mov    eax,0x1
  40b4cd:	jmp    40b4d4 <flatcc_verify_error_string@@Base+0x9ff>
  40b4cf:	mov    eax,0x0
  40b4d4:	mov    DWORD PTR [rbp-0x50],eax
  40b4d7:	cmp    DWORD PTR [rbp-0x50],0x0
  40b4db:	jne    40b4e7 <flatcc_verify_error_string@@Base+0xa12>
  40b4dd:	mov    eax,0x1e
  40b4e2:	jmp    40b587 <flatcc_verify_error_string@@Base+0xab2>
  40b4e7:	mov    DWORD PTR [rbp-0x4c],0x1
  40b4ee:	cmp    DWORD PTR [rbp-0x4c],0x0
  40b4f2:	jne    40b4fe <flatcc_verify_error_string@@Base+0xa29>
  40b4f4:	mov    eax,0x1f
  40b4f9:	jmp    40b587 <flatcc_verify_error_string@@Base+0xab2>
  40b4fe:	movzx  eax,WORD PTR [rbp-0x22]
  40b502:	cmp    ax,0x3
  40b506:	seta   al
  40b509:	movzx  eax,al
  40b50c:	mov    DWORD PTR [rbp-0x48],eax
  40b50f:	cmp    DWORD PTR [rbp-0x48],0x0
  40b513:	jne    40b51c <flatcc_verify_error_string@@Base+0xa47>
  40b515:	mov    eax,0x1c
  40b51a:	jmp    40b587 <flatcc_verify_error_string@@Base+0xab2>
  40b51c:	mov    eax,DWORD PTR [rbp-0x60]
  40b51f:	lea    edx,[rax+0x2]
  40b522:	mov    rax,QWORD PTR [rbp-0x78]
  40b526:	mov    esi,edx
  40b528:	mov    rdi,rax
  40b52b:	call   40ad4a <flatcc_verify_error_string@@Base+0x275>
  40b530:	mov    WORD PTR [rbp-0x24],ax
  40b534:	mov    eax,DWORD PTR [rbp-0x28]
  40b537:	mov    edx,DWORD PTR [rbp-0x7c]
  40b53a:	sub    edx,eax
  40b53c:	movzx  eax,WORD PTR [rbp-0x24]
  40b540:	movzx  eax,ax
  40b543:	cmp    edx,eax
  40b545:	setae  al
  40b548:	movzx  eax,al
  40b54b:	mov    DWORD PTR [rbp-0x44],eax
  40b54e:	cmp    DWORD PTR [rbp-0x44],0x0
  40b552:	jne    40b55b <flatcc_verify_error_string@@Base+0xa86>
  40b554:	mov    eax,0x14
  40b559:	jmp    40b587 <flatcc_verify_error_string@@Base+0xab2>
  40b55b:	mov    edx,DWORD PTR [rbp-0x60]
  40b55e:	mov    rax,QWORD PTR [rbp-0x78]
  40b562:	add    rax,rdx
  40b565:	mov    QWORD PTR [rbp-0x30],rax
  40b569:	mov    rax,QWORD PTR [rbp-0x78]
  40b56d:	mov    QWORD PTR [rbp-0x40],rax
  40b571:	mov    eax,DWORD PTR [rbp-0x7c]
  40b574:	mov    DWORD PTR [rbp-0x38],eax
  40b577:	lea    rdx,[rbp-0x40]
  40b57b:	mov    rax,QWORD PTR [rbp-0x90]
  40b582:	mov    rdi,rdx
  40b585:	call   rax
  40b587:	mov    rcx,QWORD PTR [rbp-0x18]
  40b58b:	xor    rcx,QWORD PTR fs:0x28
  40b594:	je     40b59b <flatcc_verify_error_string@@Base+0xac6>
  40b596:	call   403120 <__stack_chk_fail@plt>
  40b59b:	add    rsp,0x88
  40b5a2:	pop    rbx
  40b5a3:	pop    rbp
  40b5a4:	ret    
  40b5a5:	push   rbp
  40b5a6:	mov    rbp,rsp
  40b5a9:	sub    rsp,0x30
  40b5ad:	mov    QWORD PTR [rbp-0x18],rdi
  40b5b1:	mov    DWORD PTR [rbp-0x1c],esi
  40b5b4:	mov    DWORD PTR [rbp-0x20],edx
  40b5b7:	mov    DWORD PTR [rbp-0x24],ecx
  40b5ba:	mov    DWORD PTR [rbp-0x28],r8d
  40b5be:	mov    QWORD PTR [rbp-0x30],r9
  40b5c2:	mov    eax,DWORD PTR [rbp-0x28]
  40b5c5:	lea    edx,[rax-0x1]
  40b5c8:	mov    DWORD PTR [rbp-0x28],edx
  40b5cb:	test   eax,eax
  40b5cd:	setg   al
  40b5d0:	movzx  eax,al
  40b5d3:	mov    DWORD PTR [rbp-0x8],eax
  40b5d6:	cmp    DWORD PTR [rbp-0x8],0x0
  40b5da:	jne    40b5e6 <flatcc_verify_error_string@@Base+0xb11>
  40b5dc:	mov    eax,0x3
  40b5e1:	jmp    40b6f4 <flatcc_verify_error_string@@Base+0xc1f>
  40b5e6:	mov    ecx,DWORD PTR [rbp-0x24]
  40b5e9:	mov    edx,DWORD PTR [rbp-0x20]
  40b5ec:	mov    esi,DWORD PTR [rbp-0x1c]
  40b5ef:	mov    rax,QWORD PTR [rbp-0x18]
  40b5f3:	push   0x3fffffff
  40b5f8:	mov    r9d,0x4
  40b5fe:	mov    r8d,0x4
  40b604:	mov    rdi,rax
  40b607:	call   40b1e0 <flatcc_verify_error_string@@Base+0x70b>
  40b60c:	add    rsp,0x8
  40b610:	test   eax,eax
  40b612:	je     40b643 <flatcc_verify_error_string@@Base+0xb6e>
  40b614:	mov    ecx,DWORD PTR [rbp-0x24]
  40b617:	mov    edx,DWORD PTR [rbp-0x20]
  40b61a:	mov    esi,DWORD PTR [rbp-0x1c]
  40b61d:	mov    rax,QWORD PTR [rbp-0x18]
  40b621:	push   0x3fffffff
  40b626:	mov    r9d,0x4
  40b62c:	mov    r8d,0x4
  40b632:	mov    rdi,rax
  40b635:	call   40b1e0 <flatcc_verify_error_string@@Base+0x70b>
  40b63a:	add    rsp,0x8
  40b63e:	jmp    40b6f4 <flatcc_verify_error_string@@Base+0xc1f>
  40b643:	mov    eax,DWORD PTR [rbp-0x24]
  40b646:	add    DWORD PTR [rbp-0x20],eax
  40b649:	mov    edx,DWORD PTR [rbp-0x20]
  40b64c:	mov    rax,QWORD PTR [rbp-0x18]
  40b650:	mov    esi,edx
  40b652:	mov    rdi,rax
  40b655:	call   40acaa <flatcc_verify_error_string@@Base+0x1d5>
  40b65a:	mov    DWORD PTR [rbp-0x4],eax
  40b65d:	add    DWORD PTR [rbp-0x20],0x4
  40b661:	mov    DWORD PTR [rbp-0xc],0x0
  40b668:	jmp    40b6e3 <flatcc_verify_error_string@@Base+0xc0e>
  40b66a:	mov    edx,DWORD PTR [rbp-0x20]
  40b66d:	mov    rax,QWORD PTR [rbp-0x18]
  40b671:	mov    esi,edx
  40b673:	mov    rdi,rax
  40b676:	call   40acaa <flatcc_verify_error_string@@Base+0x1d5>
  40b67b:	mov    r10d,eax
  40b67e:	mov    rdi,QWORD PTR [rbp-0x30]
  40b682:	mov    ecx,DWORD PTR [rbp-0x28]
  40b685:	mov    edx,DWORD PTR [rbp-0x20]
  40b688:	mov    esi,DWORD PTR [rbp-0x1c]
  40b68b:	mov    rax,QWORD PTR [rbp-0x18]
  40b68f:	mov    r9,rdi
  40b692:	mov    r8d,ecx
  40b695:	mov    ecx,r10d
  40b698:	mov    rdi,rax
  40b69b:	call   40b38b <flatcc_verify_error_string@@Base+0x8b6>
  40b6a0:	test   eax,eax
  40b6a2:	je     40b6dc <flatcc_verify_error_string@@Base+0xc07>
  40b6a4:	mov    edx,DWORD PTR [rbp-0x20]
  40b6a7:	mov    rax,QWORD PTR [rbp-0x18]
  40b6ab:	mov    esi,edx
  40b6ad:	mov    rdi,rax
  40b6b0:	call   40acaa <flatcc_verify_error_string@@Base+0x1d5>
  40b6b5:	mov    r10d,eax
  40b6b8:	mov    rdi,QWORD PTR [rbp-0x30]
  40b6bc:	mov    ecx,DWORD PTR [rbp-0x28]
  40b6bf:	mov    edx,DWORD PTR [rbp-0x20]
  40b6c2:	mov    esi,DWORD PTR [rbp-0x1c]
  40b6c5:	mov    rax,QWORD PTR [rbp-0x18]
  40b6c9:	mov    r9,rdi
  40b6cc:	mov    r8d,ecx
  40b6cf:	mov    ecx,r10d
  40b6d2:	mov    rdi,rax
  40b6d5:	call   40b38b <flatcc_verify_error_string@@Base+0x8b6>
  40b6da:	jmp    40b6f4 <flatcc_verify_error_string@@Base+0xc1f>
  40b6dc:	inc    DWORD PTR [rbp-0xc]
  40b6df:	add    DWORD PTR [rbp-0x20],0x4
  40b6e3:	mov    eax,DWORD PTR [rbp-0xc]
  40b6e6:	cmp    eax,DWORD PTR [rbp-0x4]
  40b6e9:	jb     40b66a <flatcc_verify_error_string@@Base+0xb95>
  40b6ef:	mov    eax,0x0
  40b6f4:	leave  
  40b6f5:	ret    
  40b6f6:	push   rbp
  40b6f7:	mov    rbp,rsp
  40b6fa:	add    rsp,0xffffffffffffff80
  40b6fe:	mov    QWORD PTR [rbp-0x58],rdi
  40b702:	mov    DWORD PTR [rbp-0x5c],esi
  40b705:	mov    DWORD PTR [rbp-0x60],edx
  40b708:	mov    DWORD PTR [rbp-0x64],ecx
  40b70b:	mov    DWORD PTR [rbp-0x68],r8d
  40b70f:	mov    QWORD PTR [rbp-0x70],r9
  40b713:	mov    rax,QWORD PTR [rbp+0x18]
  40b717:	mov    QWORD PTR [rbp-0x78],rax
  40b71b:	mov    rax,QWORD PTR fs:0x28
  40b724:	mov    QWORD PTR [rbp-0x8],rax
  40b728:	xor    eax,eax
  40b72a:	mov    eax,DWORD PTR [rbp+0x10]
  40b72d:	lea    edx,[rax-0x1]
  40b730:	mov    DWORD PTR [rbp+0x10],edx
  40b733:	test   eax,eax
  40b735:	setg   al
  40b738:	movzx  eax,al
  40b73b:	mov    DWORD PTR [rbp-0x48],eax
  40b73e:	cmp    DWORD PTR [rbp-0x48],0x0
  40b742:	jne    40b74e <flatcc_verify_error_string@@Base+0xc79>
  40b744:	mov    eax,0x3
  40b749:	jmp    40b8c0 <flatcc_verify_error_string@@Base+0xdeb>
  40b74e:	mov    ecx,DWORD PTR [rbp-0x64]
  40b751:	mov    edx,DWORD PTR [rbp-0x60]
  40b754:	mov    esi,DWORD PTR [rbp-0x5c]
  40b757:	mov    rax,QWORD PTR [rbp-0x58]
  40b75b:	push   0x3fffffff
  40b760:	mov    r9d,0x4
  40b766:	mov    r8d,0x4
  40b76c:	mov    rdi,rax
  40b76f:	call   40b1e0 <flatcc_verify_error_string@@Base+0x70b>
  40b774:	add    rsp,0x8
  40b778:	test   eax,eax
  40b77a:	je     40b7ab <flatcc_verify_error_string@@Base+0xcd6>
  40b77c:	mov    ecx,DWORD PTR [rbp-0x64]
  40b77f:	mov    edx,DWORD PTR [rbp-0x60]
  40b782:	mov    esi,DWORD PTR [rbp-0x5c]
  40b785:	mov    rax,QWORD PTR [rbp-0x58]
  40b789:	push   0x3fffffff
  40b78e:	mov    r9d,0x4
  40b794:	mov    r8d,0x4
  40b79a:	mov    rdi,rax
  40b79d:	call   40b1e0 <flatcc_verify_error_string@@Base+0x70b>
  40b7a2:	add    rsp,0x8
  40b7a6:	jmp    40b8c0 <flatcc_verify_error_string@@Base+0xdeb>
  40b7ab:	mov    eax,DWORD PTR [rbp-0x64]
  40b7ae:	add    DWORD PTR [rbp-0x60],eax
  40b7b1:	mov    edx,DWORD PTR [rbp-0x60]
  40b7b4:	mov    rax,QWORD PTR [rbp-0x58]
  40b7b8:	mov    esi,edx
  40b7ba:	mov    rdi,rax
  40b7bd:	call   40acaa <flatcc_verify_error_string@@Base+0x1d5>
  40b7c2:	mov    DWORD PTR [rbp-0x44],eax
  40b7c5:	mov    eax,DWORD PTR [rbp-0x44]
  40b7c8:	cmp    eax,DWORD PTR [rbp-0x68]
  40b7cb:	sete   al
  40b7ce:	movzx  eax,al
  40b7d1:	mov    DWORD PTR [rbp-0x40],eax
  40b7d4:	cmp    DWORD PTR [rbp-0x40],0x0
  40b7d8:	jne    40b7e4 <flatcc_verify_error_string@@Base+0xd0f>
  40b7da:	mov    eax,0x22
  40b7df:	jmp    40b8c0 <flatcc_verify_error_string@@Base+0xdeb>
  40b7e4:	add    DWORD PTR [rbp-0x60],0x4
  40b7e8:	mov    rax,QWORD PTR [rbp-0x58]
  40b7ec:	mov    QWORD PTR [rbp-0x30],rax
  40b7f0:	mov    eax,DWORD PTR [rbp-0x5c]
  40b7f3:	mov    DWORD PTR [rbp-0x28],eax
  40b7f6:	mov    eax,DWORD PTR [rbp+0x10]
  40b7f9:	mov    DWORD PTR [rbp-0x24],eax
  40b7fc:	mov    DWORD PTR [rbp-0x4c],0x0
  40b803:	jmp    40b8af <flatcc_verify_error_string@@Base+0xdda>
  40b808:	mov    edx,DWORD PTR [rbp-0x60]
  40b80b:	mov    rax,QWORD PTR [rbp-0x58]
  40b80f:	mov    esi,edx
  40b811:	mov    rdi,rax
  40b814:	call   40acaa <flatcc_verify_error_string@@Base+0x1d5>
  40b819:	mov    DWORD PTR [rbp-0x3c],eax
  40b81c:	cmp    DWORD PTR [rbp-0x3c],0x0
  40b820:	jne    40b847 <flatcc_verify_error_string@@Base+0xd72>
  40b822:	mov    edx,DWORD PTR [rbp-0x4c]
  40b825:	mov    rax,QWORD PTR [rbp-0x70]
  40b829:	add    rax,rdx
  40b82c:	movzx  eax,BYTE PTR [rax]
  40b82f:	test   al,al
  40b831:	sete   al
  40b834:	movzx  eax,al
  40b837:	mov    DWORD PTR [rbp-0x38],eax
  40b83a:	cmp    DWORD PTR [rbp-0x38],0x0
  40b83e:	jne    40b8a8 <flatcc_verify_error_string@@Base+0xdd3>
  40b840:	mov    eax,0x20
  40b845:	jmp    40b8c0 <flatcc_verify_error_string@@Base+0xdeb>
  40b847:	mov    edx,DWORD PTR [rbp-0x4c]
  40b84a:	mov    rax,QWORD PTR [rbp-0x70]
  40b84e:	add    rax,rdx
  40b851:	movzx  eax,BYTE PTR [rax]
  40b854:	test   al,al
  40b856:	setne  al
  40b859:	movzx  eax,al
  40b85c:	mov    DWORD PTR [rbp-0x34],eax
  40b85f:	cmp    DWORD PTR [rbp-0x34],0x0
  40b863:	jne    40b86c <flatcc_verify_error_string@@Base+0xd97>
  40b865:	mov    eax,0x21
  40b86a:	jmp    40b8c0 <flatcc_verify_error_string@@Base+0xdeb>
  40b86c:	mov    edx,DWORD PTR [rbp-0x4c]
  40b86f:	mov    rax,QWORD PTR [rbp-0x70]
  40b873:	add    rax,rdx
  40b876:	movzx  eax,BYTE PTR [rax]
  40b879:	mov    BYTE PTR [rbp-0x20],al
  40b87c:	mov    eax,DWORD PTR [rbp-0x60]
  40b87f:	mov    DWORD PTR [rbp-0x1c],eax
  40b882:	mov    eax,DWORD PTR [rbp-0x3c]
  40b885:	mov    DWORD PTR [rbp-0x18],eax
  40b888:	lea    rdx,[rbp-0x30]
  40b88c:	mov    rax,QWORD PTR [rbp-0x78]
  40b890:	mov    rdi,rdx
  40b893:	call   rax
  40b895:	test   eax,eax
  40b897:	je     40b8a8 <flatcc_verify_error_string@@Base+0xdd3>
  40b899:	lea    rdx,[rbp-0x30]
  40b89d:	mov    rax,QWORD PTR [rbp-0x78]
  40b8a1:	mov    rdi,rdx
  40b8a4:	call   rax
  40b8a6:	jmp    40b8c0 <flatcc_verify_error_string@@Base+0xdeb>
  40b8a8:	inc    DWORD PTR [rbp-0x4c]
  40b8ab:	add    DWORD PTR [rbp-0x60],0x4
  40b8af:	mov    eax,DWORD PTR [rbp-0x4c]
  40b8b2:	cmp    eax,DWORD PTR [rbp-0x44]
  40b8b5:	jb     40b808 <flatcc_verify_error_string@@Base+0xd33>
  40b8bb:	mov    eax,0x0
  40b8c0:	mov    rcx,QWORD PTR [rbp-0x8]
  40b8c4:	xor    rcx,QWORD PTR fs:0x28
  40b8cd:	je     40b8d4 <flatcc_verify_error_string@@Base+0xdff>
  40b8cf:	call   403120 <__stack_chk_fail@plt>
  40b8d4:	leave  
  40b8d5:	ret    

000000000040b8d6 <flatcc_verify_field@@Base>:
  40b8d6:	endbr64 
  40b8da:	push   rbp
  40b8db:	mov    rbp,rsp
  40b8de:	sub    rsp,0x18
  40b8e2:	mov    QWORD PTR [rbp-0x8],rdi
  40b8e6:	mov    QWORD PTR [rbp-0x18],rdx
  40b8ea:	mov    eax,ecx
  40b8ec:	mov    edx,esi
  40b8ee:	mov    WORD PTR [rbp-0xc],dx
  40b8f2:	mov    WORD PTR [rbp-0x10],ax
  40b8f6:	movzx  edx,WORD PTR [rbp-0x10]
  40b8fa:	mov    rax,QWORD PTR [rbp-0x18]
  40b8fe:	mov    ecx,eax
  40b900:	movzx  esi,WORD PTR [rbp-0xc]
  40b904:	mov    rax,QWORD PTR [rbp-0x8]
  40b908:	mov    r8d,edx
  40b90b:	mov    edx,0x0
  40b910:	mov    rdi,rax
  40b913:	call   40af69 <flatcc_verify_error_string@@Base+0x494>
  40b918:	test   eax,eax
  40b91a:	je     40b940 <flatcc_verify_field@@Base+0x6a>
  40b91c:	movzx  edx,WORD PTR [rbp-0x10]
  40b920:	mov    rax,QWORD PTR [rbp-0x18]
  40b924:	mov    ecx,eax
  40b926:	movzx  esi,WORD PTR [rbp-0xc]
  40b92a:	mov    rax,QWORD PTR [rbp-0x8]
  40b92e:	mov    r8d,edx
  40b931:	mov    edx,0x0
  40b936:	mov    rdi,rax
  40b939:	call   40af69 <flatcc_verify_error_string@@Base+0x494>
  40b93e:	jmp    40b945 <flatcc_verify_field@@Base+0x6f>
  40b940:	mov    eax,0x0
  40b945:	leave  
  40b946:	ret    

000000000040b947 <flatcc_verify_string_field@@Base>:
  40b947:	endbr64 
  40b94b:	push   rbp
  40b94c:	mov    rbp,rsp
  40b94f:	sub    rsp,0x20
  40b953:	mov    QWORD PTR [rbp-0x18],rdi
  40b957:	mov    eax,esi
  40b959:	mov    DWORD PTR [rbp-0x20],edx
  40b95c:	mov    WORD PTR [rbp-0x1c],ax
  40b960:	mov    rax,QWORD PTR fs:0x28
  40b969:	mov    QWORD PTR [rbp-0x8],rax
  40b96d:	xor    eax,eax
  40b96f:	movzx  esi,WORD PTR [rbp-0x1c]
  40b973:	lea    rcx,[rbp-0x10]
  40b977:	mov    edx,DWORD PTR [rbp-0x20]
  40b97a:	mov    rax,QWORD PTR [rbp-0x18]
  40b97e:	mov    rdi,rax
  40b981:	call   40b05a <flatcc_verify_error_string@@Base+0x585>
  40b986:	mov    DWORD PTR [rbp-0xc],eax
  40b989:	cmp    DWORD PTR [rbp-0xc],0x0
  40b98d:	jne    40b996 <flatcc_verify_string_field@@Base+0x4f>
  40b98f:	mov    eax,DWORD PTR [rbp-0x10]
  40b992:	test   eax,eax
  40b994:	jne    40b99b <flatcc_verify_string_field@@Base+0x54>
  40b996:	mov    eax,DWORD PTR [rbp-0xc]
  40b999:	jmp    40b9ca <flatcc_verify_string_field@@Base+0x83>
  40b99b:	mov    edx,DWORD PTR [rbp-0x10]
  40b99e:	mov    rax,QWORD PTR [rbp-0x18]
  40b9a2:	mov    rax,QWORD PTR [rax]
  40b9a5:	mov    esi,edx
  40b9a7:	mov    rdi,rax
  40b9aa:	call   40acaa <flatcc_verify_error_string@@Base+0x1d5>
  40b9af:	mov    ecx,eax
  40b9b1:	mov    edx,DWORD PTR [rbp-0x10]
  40b9b4:	mov    rax,QWORD PTR [rbp-0x18]
  40b9b8:	mov    esi,DWORD PTR [rax+0x8]
  40b9bb:	mov    rax,QWORD PTR [rbp-0x18]
  40b9bf:	mov    rax,QWORD PTR [rax]
  40b9c2:	mov    rdi,rax
  40b9c5:	call   40b136 <flatcc_verify_error_string@@Base+0x661>
  40b9ca:	mov    rdi,QWORD PTR [rbp-0x8]
  40b9ce:	xor    rdi,QWORD PTR fs:0x28
  40b9d7:	je     40b9de <flatcc_verify_string_field@@Base+0x97>
  40b9d9:	call   403120 <__stack_chk_fail@plt>
  40b9de:	leave  
  40b9df:	ret    

000000000040b9e0 <flatcc_verify_vector_field@@Base>:
  40b9e0:	endbr64 
  40b9e4:	push   rbp
  40b9e5:	mov    rbp,rsp
  40b9e8:	push   r13
  40b9ea:	push   r12
  40b9ec:	push   rbx
  40b9ed:	sub    rsp,0x48
  40b9f1:	mov    QWORD PTR [rbp-0x38],rdi
  40b9f5:	mov    eax,esi
  40b9f7:	mov    DWORD PTR [rbp-0x40],edx
  40b9fa:	mov    QWORD PTR [rbp-0x48],rcx
  40b9fe:	mov    edx,r8d
  40ba01:	mov    QWORD PTR [rbp-0x58],r9
  40ba05:	mov    WORD PTR [rbp-0x3c],ax
  40ba09:	mov    eax,edx
  40ba0b:	mov    WORD PTR [rbp-0x4c],ax
  40ba0f:	mov    rax,QWORD PTR fs:0x28
  40ba18:	mov    QWORD PTR [rbp-0x28],rax
  40ba1c:	xor    eax,eax
  40ba1e:	movzx  esi,WORD PTR [rbp-0x3c]
  40ba22:	lea    rcx,[rbp-0x30]
  40ba26:	mov    edx,DWORD PTR [rbp-0x40]
  40ba29:	mov    rax,QWORD PTR [rbp-0x38]
  40ba2d:	mov    rdi,rax
  40ba30:	call   40b05a <flatcc_verify_error_string@@Base+0x585>
  40ba35:	mov    DWORD PTR [rbp-0x2c],eax
  40ba38:	cmp    DWORD PTR [rbp-0x2c],0x0
  40ba3c:	jne    40ba45 <flatcc_verify_vector_field@@Base+0x65>
  40ba3e:	mov    eax,DWORD PTR [rbp-0x30]
  40ba41:	test   eax,eax
  40ba43:	jne    40ba4a <flatcc_verify_vector_field@@Base+0x6a>
  40ba45:	mov    eax,DWORD PTR [rbp-0x2c]
  40ba48:	jmp    40ba97 <flatcc_verify_vector_field@@Base+0xb7>
  40ba4a:	mov    rax,QWORD PTR [rbp-0x58]
  40ba4e:	mov    r12d,eax
  40ba51:	movzx  ebx,WORD PTR [rbp-0x4c]
  40ba55:	mov    rax,QWORD PTR [rbp-0x48]
  40ba59:	mov    r13d,eax
  40ba5c:	mov    edx,DWORD PTR [rbp-0x30]
  40ba5f:	mov    rax,QWORD PTR [rbp-0x38]
  40ba63:	mov    rax,QWORD PTR [rax]
  40ba66:	mov    esi,edx
  40ba68:	mov    rdi,rax
  40ba6b:	call   40acaa <flatcc_verify_error_string@@Base+0x1d5>
  40ba70:	mov    ecx,eax
  40ba72:	mov    edx,DWORD PTR [rbp-0x30]
  40ba75:	mov    rax,QWORD PTR [rbp-0x38]
  40ba79:	mov    esi,DWORD PTR [rax+0x8]
  40ba7c:	mov    rax,QWORD PTR [rbp-0x38]
  40ba80:	mov    rax,QWORD PTR [rax]
  40ba83:	push   r12
  40ba85:	mov    r9d,ebx
  40ba88:	mov    r8d,r13d
  40ba8b:	mov    rdi,rax
  40ba8e:	call   40b1e0 <flatcc_verify_error_string@@Base+0x70b>
  40ba93:	add    rsp,0x8
  40ba97:	mov    rbx,QWORD PTR [rbp-0x28]
  40ba9b:	xor    rbx,QWORD PTR fs:0x28
  40baa4:	je     40baab <flatcc_verify_vector_field@@Base+0xcb>
  40baa6:	call   403120 <__stack_chk_fail@plt>
  40baab:	lea    rsp,[rbp-0x18]
  40baaf:	pop    rbx
  40bab0:	pop    r12
  40bab2:	pop    r13
  40bab4:	pop    rbp
  40bab5:	ret    

000000000040bab6 <flatcc_verify_string_vector_field@@Base>:
  40bab6:	endbr64 
  40baba:	push   rbp
  40babb:	mov    rbp,rsp
  40babe:	sub    rsp,0x20
  40bac2:	mov    QWORD PTR [rbp-0x18],rdi
  40bac6:	mov    eax,esi
  40bac8:	mov    DWORD PTR [rbp-0x20],edx
  40bacb:	mov    WORD PTR [rbp-0x1c],ax
  40bacf:	mov    rax,QWORD PTR fs:0x28
  40bad8:	mov    QWORD PTR [rbp-0x8],rax
  40badc:	xor    eax,eax
  40bade:	movzx  esi,WORD PTR [rbp-0x1c]
  40bae2:	lea    rcx,[rbp-0x10]
  40bae6:	mov    edx,DWORD PTR [rbp-0x20]
  40bae9:	mov    rax,QWORD PTR [rbp-0x18]
  40baed:	mov    rdi,rax
  40baf0:	call   40b05a <flatcc_verify_error_string@@Base+0x585>
  40baf5:	mov    DWORD PTR [rbp-0xc],eax
  40baf8:	cmp    DWORD PTR [rbp-0xc],0x0
  40bafc:	jne    40bb05 <flatcc_verify_string_vector_field@@Base+0x4f>
  40bafe:	mov    eax,DWORD PTR [rbp-0x10]
  40bb01:	test   eax,eax
  40bb03:	jne    40bb0a <flatcc_verify_string_vector_field@@Base+0x54>
  40bb05:	mov    eax,DWORD PTR [rbp-0xc]
  40bb08:	jmp    40bb39 <flatcc_verify_string_vector_field@@Base+0x83>
  40bb0a:	mov    edx,DWORD PTR [rbp-0x10]
  40bb0d:	mov    rax,QWORD PTR [rbp-0x18]
  40bb11:	mov    rax,QWORD PTR [rax]
  40bb14:	mov    esi,edx
  40bb16:	mov    rdi,rax
  40bb19:	call   40acaa <flatcc_verify_error_string@@Base+0x1d5>
  40bb1e:	mov    ecx,eax
  40bb20:	mov    edx,DWORD PTR [rbp-0x10]
  40bb23:	mov    rax,QWORD PTR [rbp-0x18]
  40bb27:	mov    esi,DWORD PTR [rax+0x8]
  40bb2a:	mov    rax,QWORD PTR [rbp-0x18]
  40bb2e:	mov    rax,QWORD PTR [rax]
  40bb31:	mov    rdi,rax
  40bb34:	call   40b28c <flatcc_verify_error_string@@Base+0x7b7>
  40bb39:	mov    rdi,QWORD PTR [rbp-0x8]
  40bb3d:	xor    rdi,QWORD PTR fs:0x28
  40bb46:	je     40bb4d <flatcc_verify_string_vector_field@@Base+0x97>
  40bb48:	call   403120 <__stack_chk_fail@plt>
  40bb4d:	leave  
  40bb4e:	ret    

000000000040bb4f <flatcc_verify_table_field@@Base>:
  40bb4f:	endbr64 
  40bb53:	push   rbp
  40bb54:	mov    rbp,rsp
  40bb57:	push   rbx
  40bb58:	sub    rsp,0x38
  40bb5c:	mov    QWORD PTR [rbp-0x28],rdi
  40bb60:	mov    eax,esi
  40bb62:	mov    DWORD PTR [rbp-0x30],edx
  40bb65:	mov    QWORD PTR [rbp-0x38],rcx
  40bb69:	mov    WORD PTR [rbp-0x2c],ax
  40bb6d:	mov    rax,QWORD PTR fs:0x28
  40bb76:	mov    QWORD PTR [rbp-0x18],rax
  40bb7a:	xor    eax,eax
  40bb7c:	movzx  esi,WORD PTR [rbp-0x2c]
  40bb80:	lea    rcx,[rbp-0x20]
  40bb84:	mov    edx,DWORD PTR [rbp-0x30]
  40bb87:	mov    rax,QWORD PTR [rbp-0x28]
  40bb8b:	mov    rdi,rax
  40bb8e:	call   40b05a <flatcc_verify_error_string@@Base+0x585>
  40bb93:	mov    DWORD PTR [rbp-0x1c],eax
  40bb96:	cmp    DWORD PTR [rbp-0x1c],0x0
  40bb9a:	jne    40bba3 <flatcc_verify_table_field@@Base+0x54>
  40bb9c:	mov    eax,DWORD PTR [rbp-0x20]
  40bb9f:	test   eax,eax
  40bba1:	jne    40bba8 <flatcc_verify_table_field@@Base+0x59>
  40bba3:	mov    eax,DWORD PTR [rbp-0x1c]
  40bba6:	jmp    40bbea <flatcc_verify_table_field@@Base+0x9b>
  40bba8:	mov    rax,QWORD PTR [rbp-0x28]
  40bbac:	mov    ebx,DWORD PTR [rax+0xc]
  40bbaf:	mov    edx,DWORD PTR [rbp-0x20]
  40bbb2:	mov    rax,QWORD PTR [rbp-0x28]
  40bbb6:	mov    rax,QWORD PTR [rax]
  40bbb9:	mov    esi,edx
  40bbbb:	mov    rdi,rax
  40bbbe:	call   40acaa <flatcc_verify_error_string@@Base+0x1d5>
  40bbc3:	mov    edi,eax
  40bbc5:	mov    edx,DWORD PTR [rbp-0x20]
  40bbc8:	mov    rax,QWORD PTR [rbp-0x28]
  40bbcc:	mov    esi,DWORD PTR [rax+0x8]
  40bbcf:	mov    rax,QWORD PTR [rbp-0x28]
  40bbd3:	mov    rax,QWORD PTR [rax]
  40bbd6:	mov    rcx,QWORD PTR [rbp-0x38]
  40bbda:	mov    r9,rcx
  40bbdd:	mov    r8d,ebx
  40bbe0:	mov    ecx,edi
  40bbe2:	mov    rdi,rax
  40bbe5:	call   40b38b <flatcc_verify_error_string@@Base+0x8b6>
  40bbea:	mov    rbx,QWORD PTR [rbp-0x18]
  40bbee:	xor    rbx,QWORD PTR fs:0x28
  40bbf7:	je     40bbfe <flatcc_verify_table_field@@Base+0xaf>
  40bbf9:	call   403120 <__stack_chk_fail@plt>
  40bbfe:	add    rsp,0x38
  40bc02:	pop    rbx
  40bc03:	pop    rbp
  40bc04:	ret    

000000000040bc05 <flatcc_verify_table_vector_field@@Base>:
  40bc05:	endbr64 
  40bc09:	push   rbp
  40bc0a:	mov    rbp,rsp
  40bc0d:	push   rbx
  40bc0e:	sub    rsp,0x38
  40bc12:	mov    QWORD PTR [rbp-0x28],rdi
  40bc16:	mov    eax,esi
  40bc18:	mov    DWORD PTR [rbp-0x30],edx
  40bc1b:	mov    QWORD PTR [rbp-0x38],rcx
  40bc1f:	mov    WORD PTR [rbp-0x2c],ax
  40bc23:	mov    rax,QWORD PTR fs:0x28
  40bc2c:	mov    QWORD PTR [rbp-0x18],rax
  40bc30:	xor    eax,eax
  40bc32:	movzx  esi,WORD PTR [rbp-0x2c]
  40bc36:	lea    rcx,[rbp-0x20]
  40bc3a:	mov    edx,DWORD PTR [rbp-0x30]
  40bc3d:	mov    rax,QWORD PTR [rbp-0x28]
  40bc41:	mov    rdi,rax
  40bc44:	call   40b05a <flatcc_verify_error_string@@Base+0x585>
  40bc49:	mov    DWORD PTR [rbp-0x1c],eax
  40bc4c:	cmp    DWORD PTR [rbp-0x1c],0x0
  40bc50:	jne    40bc59 <flatcc_verify_table_vector_field@@Base+0x54>
  40bc52:	mov    eax,DWORD PTR [rbp-0x20]
  40bc55:	test   eax,eax
  40bc57:	jne    40bc5e <flatcc_verify_table_vector_field@@Base+0x59>
  40bc59:	mov    eax,DWORD PTR [rbp-0x1c]
  40bc5c:	jmp    40bca0 <flatcc_verify_table_vector_field@@Base+0x9b>
  40bc5e:	mov    rax,QWORD PTR [rbp-0x28]
  40bc62:	mov    ebx,DWORD PTR [rax+0xc]
  40bc65:	mov    edx,DWORD PTR [rbp-0x20]
  40bc68:	mov    rax,QWORD PTR [rbp-0x28]
  40bc6c:	mov    rax,QWORD PTR [rax]
  40bc6f:	mov    esi,edx
  40bc71:	mov    rdi,rax
  40bc74:	call   40acaa <flatcc_verify_error_string@@Base+0x1d5>
  40bc79:	mov    edi,eax
  40bc7b:	mov    edx,DWORD PTR [rbp-0x20]
  40bc7e:	mov    rax,QWORD PTR [rbp-0x28]
  40bc82:	mov    esi,DWORD PTR [rax+0x8]
  40bc85:	mov    rax,QWORD PTR [rbp-0x28]
  40bc89:	mov    rax,QWORD PTR [rax]
  40bc8c:	mov    rcx,QWORD PTR [rbp-0x38]
  40bc90:	mov    r9,rcx
  40bc93:	mov    r8d,ebx
  40bc96:	mov    ecx,edi
  40bc98:	mov    rdi,rax
  40bc9b:	call   40b5a5 <flatcc_verify_error_string@@Base+0xad0>
  40bca0:	mov    rbx,QWORD PTR [rbp-0x18]
  40bca4:	xor    rbx,QWORD PTR fs:0x28
  40bcad:	je     40bcb4 <flatcc_verify_table_vector_field@@Base+0xaf>
  40bcaf:	call   403120 <__stack_chk_fail@plt>
  40bcb4:	add    rsp,0x38
  40bcb8:	pop    rbx
  40bcb9:	pop    rbp
  40bcba:	ret    

000000000040bcbb <flatcc_verify_union_table@@Base>:
  40bcbb:	endbr64 
  40bcbf:	push   rbp
  40bcc0:	mov    rbp,rsp
  40bcc3:	sub    rsp,0x10
  40bcc7:	mov    QWORD PTR [rbp-0x8],rdi
  40bccb:	mov    QWORD PTR [rbp-0x10],rsi
  40bccf:	mov    rax,QWORD PTR [rbp-0x8]
  40bcd3:	mov    edi,DWORD PTR [rax+0xc]
  40bcd6:	mov    rax,QWORD PTR [rbp-0x8]
  40bcda:	mov    ecx,DWORD PTR [rax+0x18]
  40bcdd:	mov    rax,QWORD PTR [rbp-0x8]
  40bce1:	mov    edx,DWORD PTR [rax+0x14]
  40bce4:	mov    rax,QWORD PTR [rbp-0x8]
  40bce8:	mov    esi,DWORD PTR [rax+0x8]
  40bceb:	mov    rax,QWORD PTR [rbp-0x8]
  40bcef:	mov    rax,QWORD PTR [rax]
  40bcf2:	mov    r8,QWORD PTR [rbp-0x10]
  40bcf6:	mov    r9,r8
  40bcf9:	mov    r8d,edi
  40bcfc:	mov    rdi,rax
  40bcff:	call   40b38b <flatcc_verify_error_string@@Base+0x8b6>
  40bd04:	leave  
  40bd05:	ret    

000000000040bd06 <flatcc_verify_union_struct@@Base>:
  40bd06:	endbr64 
  40bd0a:	push   rbp
  40bd0b:	mov    rbp,rsp
  40bd0e:	sub    rsp,0x18
  40bd12:	mov    QWORD PTR [rbp-0x8],rdi
  40bd16:	mov    QWORD PTR [rbp-0x10],rsi
  40bd1a:	mov    eax,edx
  40bd1c:	mov    WORD PTR [rbp-0x14],ax
  40bd20:	movzx  ecx,WORD PTR [rbp-0x14]
  40bd24:	mov    rax,QWORD PTR [rbp-0x10]
  40bd28:	mov    edi,eax
  40bd2a:	mov    rax,QWORD PTR [rbp-0x8]
  40bd2e:	mov    edx,DWORD PTR [rax+0x18]
  40bd31:	mov    rax,QWORD PTR [rbp-0x8]
  40bd35:	mov    esi,DWORD PTR [rax+0x14]
  40bd38:	mov    rax,QWORD PTR [rbp-0x8]
  40bd3c:	mov    eax,DWORD PTR [rax+0x8]
  40bd3f:	mov    r8d,ecx
  40bd42:	mov    ecx,edi
  40bd44:	mov    edi,eax
  40bd46:	call   40ae25 <flatcc_verify_error_string@@Base+0x350>
  40bd4b:	leave  
  40bd4c:	ret    

000000000040bd4d <flatcc_verify_union_string@@Base>:
  40bd4d:	endbr64 
  40bd51:	push   rbp
  40bd52:	mov    rbp,rsp
  40bd55:	sub    rsp,0x8
  40bd59:	mov    QWORD PTR [rbp-0x8],rdi
  40bd5d:	mov    rax,QWORD PTR [rbp-0x8]
  40bd61:	mov    ecx,DWORD PTR [rax+0x18]
  40bd64:	mov    rax,QWORD PTR [rbp-0x8]
  40bd68:	mov    edx,DWORD PTR [rax+0x14]
  40bd6b:	mov    rax,QWORD PTR [rbp-0x8]
  40bd6f:	mov    esi,DWORD PTR [rax+0x8]
  40bd72:	mov    rax,QWORD PTR [rbp-0x8]
  40bd76:	mov    rax,QWORD PTR [rax]
  40bd79:	mov    rdi,rax
  40bd7c:	call   40b136 <flatcc_verify_error_string@@Base+0x661>
  40bd81:	leave  
  40bd82:	ret    

000000000040bd83 <flatcc_verify_buffer_header@@Base>:
  40bd83:	endbr64 
  40bd87:	push   rbp
  40bd88:	mov    rbp,rsp
  40bd8b:	sub    rsp,0x40
  40bd8f:	mov    QWORD PTR [rbp-0x28],rdi
  40bd93:	mov    QWORD PTR [rbp-0x30],rsi
  40bd97:	mov    QWORD PTR [rbp-0x38],rdx
  40bd9b:	mov    rax,QWORD PTR [rbp-0x28]
  40bd9f:	and    eax,0x3
  40bda2:	test   rax,rax
  40bda5:	sete   al
  40bda8:	movzx  eax,al
  40bdab:	mov    DWORD PTR [rbp-0x18],eax
  40bdae:	cmp    DWORD PTR [rbp-0x18],0x0
  40bdb2:	jne    40bdbe <flatcc_verify_buffer_header@@Base+0x3b>
  40bdb4:	mov    eax,0x5
  40bdb9:	jmp    40be51 <flatcc_verify_buffer_header@@Base+0xce>
  40bdbe:	mov    eax,0xfffffff7
  40bdc3:	cmp    QWORD PTR [rbp-0x30],rax
  40bdc7:	setbe  al
  40bdca:	movzx  eax,al
  40bdcd:	mov    DWORD PTR [rbp-0x14],eax
  40bdd0:	cmp    DWORD PTR [rbp-0x14],0x0
  40bdd4:	jne    40bddd <flatcc_verify_buffer_header@@Base+0x5a>
  40bdd6:	mov    eax,0x6
  40bddb:	jmp    40be51 <flatcc_verify_buffer_header@@Base+0xce>
  40bddd:	cmp    QWORD PTR [rbp-0x30],0x7
  40bde2:	seta   al
  40bde5:	movzx  eax,al
  40bde8:	mov    DWORD PTR [rbp-0x10],eax
  40bdeb:	cmp    DWORD PTR [rbp-0x10],0x0
  40bdef:	jne    40bdf8 <flatcc_verify_buffer_header@@Base+0x75>
  40bdf1:	mov    eax,0x1
  40bdf6:	jmp    40be51 <flatcc_verify_buffer_header@@Base+0xce>
  40bdf8:	cmp    QWORD PTR [rbp-0x38],0x0
  40bdfd:	je     40be4c <flatcc_verify_buffer_header@@Base+0xc9>
  40bdff:	mov    rax,QWORD PTR [rbp-0x38]
  40be03:	mov    rdi,rax
  40be06:	call   40accd <flatcc_verify_error_string@@Base+0x1f8>
  40be0b:	mov    DWORD PTR [rbp-0xc],eax
  40be0e:	mov    rax,QWORD PTR [rbp-0x28]
  40be12:	mov    esi,0x4
  40be17:	mov    rdi,rax
  40be1a:	call   40ad27 <flatcc_verify_error_string@@Base+0x252>
  40be1f:	mov    DWORD PTR [rbp-0x8],eax
  40be22:	cmp    DWORD PTR [rbp-0xc],0x0
  40be26:	je     40be30 <flatcc_verify_buffer_header@@Base+0xad>
  40be28:	mov    eax,DWORD PTR [rbp-0x8]
  40be2b:	cmp    eax,DWORD PTR [rbp-0xc]
  40be2e:	jne    40be37 <flatcc_verify_buffer_header@@Base+0xb4>
  40be30:	mov    eax,0x1
  40be35:	jmp    40be3c <flatcc_verify_buffer_header@@Base+0xb9>
  40be37:	mov    eax,0x0
  40be3c:	mov    DWORD PTR [rbp-0x4],eax
  40be3f:	cmp    DWORD PTR [rbp-0x4],0x0
  40be43:	jne    40be4c <flatcc_verify_buffer_header@@Base+0xc9>
  40be45:	mov    eax,0x2
  40be4a:	jmp    40be51 <flatcc_verify_buffer_header@@Base+0xce>
  40be4c:	mov    eax,0x0
  40be51:	leave  
  40be52:	ret    

000000000040be53 <flatcc_verify_typed_buffer_header@@Base>:
  40be53:	endbr64 
  40be57:	push   rbp
  40be58:	mov    rbp,rsp
  40be5b:	sub    rsp,0x38
  40be5f:	mov    QWORD PTR [rbp-0x28],rdi
  40be63:	mov    QWORD PTR [rbp-0x30],rsi
  40be67:	mov    DWORD PTR [rbp-0x34],edx
  40be6a:	mov    rax,QWORD PTR [rbp-0x28]
  40be6e:	and    eax,0x3
  40be71:	test   rax,rax
  40be74:	sete   al
  40be77:	movzx  eax,al
  40be7a:	mov    DWORD PTR [rbp-0x18],eax
  40be7d:	cmp    DWORD PTR [rbp-0x18],0x0
  40be81:	jne    40be8d <flatcc_verify_typed_buffer_header@@Base+0x3a>
  40be83:	mov    eax,0x5
  40be88:	jmp    40bf16 <flatcc_verify_typed_buffer_header@@Base+0xc3>
  40be8d:	mov    eax,0xfffffff7
  40be92:	cmp    QWORD PTR [rbp-0x30],rax
  40be96:	setbe  al
  40be99:	movzx  eax,al
  40be9c:	mov    DWORD PTR [rbp-0x14],eax
  40be9f:	cmp    DWORD PTR [rbp-0x14],0x0
  40bea3:	jne    40beac <flatcc_verify_typed_buffer_header@@Base+0x59>
  40bea5:	mov    eax,0x6
  40beaa:	jmp    40bf16 <flatcc_verify_typed_buffer_header@@Base+0xc3>
  40beac:	cmp    QWORD PTR [rbp-0x30],0x7
  40beb1:	seta   al
  40beb4:	movzx  eax,al
  40beb7:	mov    DWORD PTR [rbp-0x10],eax
  40beba:	cmp    DWORD PTR [rbp-0x10],0x0
  40bebe:	jne    40bec7 <flatcc_verify_typed_buffer_header@@Base+0x74>
  40bec0:	mov    eax,0x1
  40bec5:	jmp    40bf16 <flatcc_verify_typed_buffer_header@@Base+0xc3>
  40bec7:	cmp    DWORD PTR [rbp-0x34],0x0
  40becb:	je     40bf11 <flatcc_verify_typed_buffer_header@@Base+0xbe>
  40becd:	mov    eax,DWORD PTR [rbp-0x34]
  40bed0:	mov    DWORD PTR [rbp-0xc],eax
  40bed3:	mov    rax,QWORD PTR [rbp-0x28]
  40bed7:	mov    esi,0x4
  40bedc:	mov    rdi,rax
  40bedf:	call   40ad27 <flatcc_verify_error_string@@Base+0x252>
  40bee4:	mov    DWORD PTR [rbp-0x8],eax
  40bee7:	cmp    DWORD PTR [rbp-0xc],0x0
  40beeb:	je     40bef5 <flatcc_verify_typed_buffer_header@@Base+0xa2>
  40beed:	mov    eax,DWORD PTR [rbp-0x8]
  40bef0:	cmp    eax,DWORD PTR [rbp-0xc]
  40bef3:	jne    40befc <flatcc_verify_typed_buffer_header@@Base+0xa9>
  40bef5:	mov    eax,0x1
  40befa:	jmp    40bf01 <flatcc_verify_typed_buffer_header@@Base+0xae>
  40befc:	mov    eax,0x0
  40bf01:	mov    DWORD PTR [rbp-0x4],eax
  40bf04:	cmp    DWORD PTR [rbp-0x4],0x0
  40bf08:	jne    40bf11 <flatcc_verify_typed_buffer_header@@Base+0xbe>
  40bf0a:	mov    eax,0x2
  40bf0f:	jmp    40bf16 <flatcc_verify_typed_buffer_header@@Base+0xc3>
  40bf11:	mov    eax,0x0
  40bf16:	leave  
  40bf17:	ret    

000000000040bf18 <flatcc_verify_struct_as_root@@Base>:
  40bf18:	endbr64 
  40bf1c:	push   rbp
  40bf1d:	mov    rbp,rsp
  40bf20:	push   r12
  40bf22:	push   rbx
  40bf23:	sub    rsp,0x30
  40bf27:	mov    QWORD PTR [rbp-0x18],rdi
  40bf2b:	mov    QWORD PTR [rbp-0x20],rsi
  40bf2f:	mov    QWORD PTR [rbp-0x28],rdx
  40bf33:	mov    QWORD PTR [rbp-0x30],rcx
  40bf37:	mov    eax,r8d
  40bf3a:	mov    WORD PTR [rbp-0x34],ax
  40bf3e:	mov    rdx,QWORD PTR [rbp-0x28]
  40bf42:	mov    rcx,QWORD PTR [rbp-0x20]
  40bf46:	mov    rax,QWORD PTR [rbp-0x18]
  40bf4a:	mov    rsi,rcx
  40bf4d:	mov    rdi,rax
  40bf50:	call   40bd83 <flatcc_verify_buffer_header@@Base>
  40bf55:	test   eax,eax
  40bf57:	je     40bf72 <flatcc_verify_struct_as_root@@Base+0x5a>
  40bf59:	mov    rdx,QWORD PTR [rbp-0x28]
  40bf5d:	mov    rcx,QWORD PTR [rbp-0x20]
  40bf61:	mov    rax,QWORD PTR [rbp-0x18]
  40bf65:	mov    rsi,rcx
  40bf68:	mov    rdi,rax
  40bf6b:	call   40bd83 <flatcc_verify_buffer_header@@Base>
  40bf70:	jmp    40bfa6 <flatcc_verify_struct_as_root@@Base+0x8e>
  40bf72:	movzx  ebx,WORD PTR [rbp-0x34]
  40bf76:	mov    rax,QWORD PTR [rbp-0x30]
  40bf7a:	mov    r12d,eax
  40bf7d:	mov    rax,QWORD PTR [rbp-0x18]
  40bf81:	mov    esi,0x0
  40bf86:	mov    rdi,rax
  40bf89:	call   40acaa <flatcc_verify_error_string@@Base+0x1d5>
  40bf8e:	mov    edx,eax
  40bf90:	mov    rax,QWORD PTR [rbp-0x20]
  40bf94:	mov    r8d,ebx
  40bf97:	mov    ecx,r12d
  40bf9a:	mov    esi,0x0
  40bf9f:	mov    edi,eax
  40bfa1:	call   40ae25 <flatcc_verify_error_string@@Base+0x350>
  40bfa6:	add    rsp,0x30
  40bfaa:	pop    rbx
  40bfab:	pop    r12
  40bfad:	pop    rbp
  40bfae:	ret    

000000000040bfaf <flatcc_verify_struct_as_typed_root@@Base>:
  40bfaf:	endbr64 
  40bfb3:	push   rbp
  40bfb4:	mov    rbp,rsp
  40bfb7:	push   r12
  40bfb9:	push   rbx
  40bfba:	sub    rsp,0x20
  40bfbe:	mov    QWORD PTR [rbp-0x18],rdi
  40bfc2:	mov    QWORD PTR [rbp-0x20],rsi
  40bfc6:	mov    DWORD PTR [rbp-0x24],edx
  40bfc9:	mov    QWORD PTR [rbp-0x30],rcx
  40bfcd:	mov    eax,r8d
  40bfd0:	mov    WORD PTR [rbp-0x28],ax
  40bfd4:	mov    edx,DWORD PTR [rbp-0x24]
  40bfd7:	mov    rcx,QWORD PTR [rbp-0x20]
  40bfdb:	mov    rax,QWORD PTR [rbp-0x18]
  40bfdf:	mov    rsi,rcx
  40bfe2:	mov    rdi,rax
  40bfe5:	call   40be53 <flatcc_verify_typed_buffer_header@@Base>
  40bfea:	test   eax,eax
  40bfec:	je     40c006 <flatcc_verify_struct_as_typed_root@@Base+0x57>
  40bfee:	mov    edx,DWORD PTR [rbp-0x24]
  40bff1:	mov    rcx,QWORD PTR [rbp-0x20]
  40bff5:	mov    rax,QWORD PTR [rbp-0x18]
  40bff9:	mov    rsi,rcx
  40bffc:	mov    rdi,rax
  40bfff:	call   40be53 <flatcc_verify_typed_buffer_header@@Base>
  40c004:	jmp    40c03a <flatcc_verify_struct_as_typed_root@@Base+0x8b>
  40c006:	movzx  ebx,WORD PTR [rbp-0x28]
  40c00a:	mov    rax,QWORD PTR [rbp-0x30]
  40c00e:	mov    r12d,eax
  40c011:	mov    rax,QWORD PTR [rbp-0x18]
  40c015:	mov    esi,0x0
  40c01a:	mov    rdi,rax
  40c01d:	call   40acaa <flatcc_verify_error_string@@Base+0x1d5>
  40c022:	mov    edx,eax
  40c024:	mov    rax,QWORD PTR [rbp-0x20]
  40c028:	mov    r8d,ebx
  40c02b:	mov    ecx,r12d
  40c02e:	mov    esi,0x0
  40c033:	mov    edi,eax
  40c035:	call   40ae25 <flatcc_verify_error_string@@Base+0x350>
  40c03a:	add    rsp,0x20
  40c03e:	pop    rbx
  40c03f:	pop    r12
  40c041:	pop    rbp
  40c042:	ret    

000000000040c043 <flatcc_verify_table_as_root@@Base>:
  40c043:	endbr64 
  40c047:	push   rbp
  40c048:	mov    rbp,rsp
  40c04b:	sub    rsp,0x20
  40c04f:	mov    QWORD PTR [rbp-0x8],rdi
  40c053:	mov    QWORD PTR [rbp-0x10],rsi
  40c057:	mov    QWORD PTR [rbp-0x18],rdx
  40c05b:	mov    QWORD PTR [rbp-0x20],rcx
  40c05f:	mov    rax,QWORD PTR [rbp-0x10]
  40c063:	mov    ecx,eax
  40c065:	mov    rdx,QWORD PTR [rbp-0x18]
  40c069:	mov    rax,QWORD PTR [rbp-0x8]
  40c06d:	mov    rsi,rcx
  40c070:	mov    rdi,rax
  40c073:	call   40bd83 <flatcc_verify_buffer_header@@Base>
  40c078:	test   eax,eax
  40c07a:	je     40c097 <flatcc_verify_table_as_root@@Base+0x54>
  40c07c:	mov    rax,QWORD PTR [rbp-0x10]
  40c080:	mov    ecx,eax
  40c082:	mov    rdx,QWORD PTR [rbp-0x18]
  40c086:	mov    rax,QWORD PTR [rbp-0x8]
  40c08a:	mov    rsi,rcx
  40c08d:	mov    rdi,rax
  40c090:	call   40bd83 <flatcc_verify_buffer_header@@Base>
  40c095:	jmp    40c0ce <flatcc_verify_table_as_root@@Base+0x8b>
  40c097:	mov    rax,QWORD PTR [rbp-0x8]
  40c09b:	mov    esi,0x0
  40c0a0:	mov    rdi,rax
  40c0a3:	call   40acaa <flatcc_verify_error_string@@Base+0x1d5>
  40c0a8:	mov    ecx,eax
  40c0aa:	mov    rax,QWORD PTR [rbp-0x10]
  40c0ae:	mov    esi,eax
  40c0b0:	mov    rdx,QWORD PTR [rbp-0x20]
  40c0b4:	mov    rax,QWORD PTR [rbp-0x8]
  40c0b8:	mov    r9,rdx
  40c0bb:	mov    r8d,0x64
  40c0c1:	mov    edx,0x0
  40c0c6:	mov    rdi,rax
  40c0c9:	call   40b38b <flatcc_verify_error_string@@Base+0x8b6>
  40c0ce:	leave  
  40c0cf:	ret    

000000000040c0d0 <flatcc_verify_table_as_typed_root@@Base>:
  40c0d0:	endbr64 
  40c0d4:	push   rbp
  40c0d5:	mov    rbp,rsp
  40c0d8:	sub    rsp,0x20
  40c0dc:	mov    QWORD PTR [rbp-0x8],rdi
  40c0e0:	mov    QWORD PTR [rbp-0x10],rsi
  40c0e4:	mov    DWORD PTR [rbp-0x14],edx
  40c0e7:	mov    QWORD PTR [rbp-0x20],rcx
  40c0eb:	mov    rax,QWORD PTR [rbp-0x10]
  40c0ef:	mov    ecx,eax
  40c0f1:	mov    edx,DWORD PTR [rbp-0x14]
  40c0f4:	mov    rax,QWORD PTR [rbp-0x8]
  40c0f8:	mov    rsi,rcx
  40c0fb:	mov    rdi,rax
  40c0fe:	call   40be53 <flatcc_verify_typed_buffer_header@@Base>
  40c103:	test   eax,eax
  40c105:	je     40c121 <flatcc_verify_table_as_typed_root@@Base+0x51>
  40c107:	mov    rax,QWORD PTR [rbp-0x10]
  40c10b:	mov    ecx,eax
  40c10d:	mov    edx,DWORD PTR [rbp-0x14]
  40c110:	mov    rax,QWORD PTR [rbp-0x8]
  40c114:	mov    rsi,rcx
  40c117:	mov    rdi,rax
  40c11a:	call   40be53 <flatcc_verify_typed_buffer_header@@Base>
  40c11f:	jmp    40c158 <flatcc_verify_table_as_typed_root@@Base+0x88>
  40c121:	mov    rax,QWORD PTR [rbp-0x8]
  40c125:	mov    esi,0x0
  40c12a:	mov    rdi,rax
  40c12d:	call   40acaa <flatcc_verify_error_string@@Base+0x1d5>
  40c132:	mov    ecx,eax
  40c134:	mov    rax,QWORD PTR [rbp-0x10]
  40c138:	mov    esi,eax
  40c13a:	mov    rdx,QWORD PTR [rbp-0x20]
  40c13e:	mov    rax,QWORD PTR [rbp-0x8]
  40c142:	mov    r9,rdx
  40c145:	mov    r8d,0x64
  40c14b:	mov    edx,0x0
  40c150:	mov    rdi,rax
  40c153:	call   40b38b <flatcc_verify_error_string@@Base+0x8b6>
  40c158:	leave  
  40c159:	ret    

000000000040c15a <flatcc_verify_struct_as_nested_root@@Base>:
  40c15a:	endbr64 
  40c15e:	push   rbp
  40c15f:	mov    rbp,rsp
  40c162:	sub    rsp,0x40
  40c166:	mov    QWORD PTR [rbp-0x18],rdi
  40c16a:	mov    eax,esi
  40c16c:	mov    DWORD PTR [rbp-0x20],edx
  40c16f:	mov    QWORD PTR [rbp-0x28],rcx
  40c173:	mov    QWORD PTR [rbp-0x30],r8
  40c177:	mov    edx,r9d
  40c17a:	mov    WORD PTR [rbp-0x1c],ax
  40c17e:	mov    eax,edx
  40c180:	mov    WORD PTR [rbp-0x34],ax
  40c184:	movzx  ecx,WORD PTR [rbp-0x34]
  40c188:	movzx  esi,WORD PTR [rbp-0x1c]
  40c18c:	mov    edx,DWORD PTR [rbp-0x20]
  40c18f:	mov    rax,QWORD PTR [rbp-0x18]
  40c193:	mov    r9d,0xffffffff
  40c199:	mov    r8d,0x1
  40c19f:	mov    rdi,rax
  40c1a2:	call   40b9e0 <flatcc_verify_vector_field@@Base>
  40c1a7:	test   eax,eax
  40c1a9:	je     40c1d0 <flatcc_verify_struct_as_nested_root@@Base+0x76>
  40c1ab:	movzx  ecx,WORD PTR [rbp-0x34]
  40c1af:	movzx  esi,WORD PTR [rbp-0x1c]
  40c1b3:	mov    edx,DWORD PTR [rbp-0x20]
  40c1b6:	mov    rax,QWORD PTR [rbp-0x18]
  40c1ba:	mov    r9d,0xffffffff
  40c1c0:	mov    r8d,0x1
  40c1c6:	mov    rdi,rax
  40c1c9:	call   40b9e0 <flatcc_verify_vector_field@@Base>
  40c1ce:	jmp    40c249 <flatcc_verify_struct_as_nested_root@@Base+0xef>
  40c1d0:	movzx  edx,WORD PTR [rbp-0x1c]
  40c1d4:	mov    rax,QWORD PTR [rbp-0x18]
  40c1d8:	mov    esi,edx
  40c1da:	mov    rdi,rax
  40c1dd:	call   40af17 <flatcc_verify_error_string@@Base+0x442>
  40c1e2:	mov    QWORD PTR [rbp-0x8],rax
  40c1e6:	cmp    QWORD PTR [rbp-0x8],0x0
  40c1eb:	jne    40c1f4 <flatcc_verify_struct_as_nested_root@@Base+0x9a>
  40c1ed:	mov    eax,0x0
  40c1f2:	jmp    40c249 <flatcc_verify_struct_as_nested_root@@Base+0xef>
  40c1f4:	mov    rax,QWORD PTR [rbp-0x8]
  40c1f8:	mov    esi,0x0
  40c1fd:	mov    rdi,rax
  40c200:	call   40acaa <flatcc_verify_error_string@@Base+0x1d5>
  40c205:	mov    edx,eax
  40c207:	mov    rax,QWORD PTR [rbp-0x8]
  40c20b:	add    rax,rdx
  40c20e:	mov    QWORD PTR [rbp-0x8],rax
  40c212:	mov    rax,QWORD PTR [rbp-0x8]
  40c216:	mov    esi,0x0
  40c21b:	mov    rdi,rax
  40c21e:	call   40acaa <flatcc_verify_error_string@@Base+0x1d5>
  40c223:	mov    DWORD PTR [rbp-0xc],eax
  40c226:	add    QWORD PTR [rbp-0x8],0x4
  40c22b:	movzx  edi,WORD PTR [rbp-0x34]
  40c22f:	mov    esi,DWORD PTR [rbp-0xc]
  40c232:	mov    rcx,QWORD PTR [rbp-0x30]
  40c236:	mov    rdx,QWORD PTR [rbp-0x28]
  40c23a:	mov    rax,QWORD PTR [rbp-0x8]
  40c23e:	mov    r8d,edi
  40c241:	mov    rdi,rax
  40c244:	call   40bf18 <flatcc_verify_struct_as_root@@Base>
  40c249:	leave  
  40c24a:	ret    

000000000040c24b <flatcc_verify_table_as_nested_root@@Base>:
  40c24b:	endbr64 
  40c24f:	push   rbp
  40c250:	mov    rbp,rsp
  40c253:	push   rbx
  40c254:	sub    rsp,0x48
  40c258:	mov    QWORD PTR [rbp-0x28],rdi
  40c25c:	mov    eax,esi
  40c25e:	mov    DWORD PTR [rbp-0x30],edx
  40c261:	mov    QWORD PTR [rbp-0x38],rcx
  40c265:	mov    edx,r8d
  40c268:	mov    QWORD PTR [rbp-0x48],r9
  40c26c:	mov    WORD PTR [rbp-0x2c],ax
  40c270:	mov    eax,edx
  40c272:	mov    WORD PTR [rbp-0x3c],ax
  40c276:	movzx  ecx,WORD PTR [rbp-0x3c]
  40c27a:	movzx  esi,WORD PTR [rbp-0x2c]
  40c27e:	mov    edx,DWORD PTR [rbp-0x30]
  40c281:	mov    rax,QWORD PTR [rbp-0x28]
  40c285:	mov    r9d,0xffffffff
  40c28b:	mov    r8d,0x1
  40c291:	mov    rdi,rax
  40c294:	call   40b9e0 <flatcc_verify_vector_field@@Base>
  40c299:	test   eax,eax
  40c29b:	je     40c2c5 <flatcc_verify_table_as_nested_root@@Base+0x7a>
  40c29d:	movzx  ecx,WORD PTR [rbp-0x3c]
  40c2a1:	movzx  esi,WORD PTR [rbp-0x2c]
  40c2a5:	mov    edx,DWORD PTR [rbp-0x30]
  40c2a8:	mov    rax,QWORD PTR [rbp-0x28]
  40c2ac:	mov    r9d,0xffffffff
  40c2b2:	mov    r8d,0x1
  40c2b8:	mov    rdi,rax
  40c2bb:	call   40b9e0 <flatcc_verify_vector_field@@Base>
  40c2c0:	jmp    40c38d <flatcc_verify_table_as_nested_root@@Base+0x142>
  40c2c5:	movzx  edx,WORD PTR [rbp-0x2c]
  40c2c9:	mov    rax,QWORD PTR [rbp-0x28]
  40c2cd:	mov    esi,edx
  40c2cf:	mov    rdi,rax
  40c2d2:	call   40af17 <flatcc_verify_error_string@@Base+0x442>
  40c2d7:	mov    QWORD PTR [rbp-0x18],rax
  40c2db:	cmp    QWORD PTR [rbp-0x18],0x0
  40c2e0:	jne    40c2ec <flatcc_verify_table_as_nested_root@@Base+0xa1>
  40c2e2:	mov    eax,0x0
  40c2e7:	jmp    40c38d <flatcc_verify_table_as_nested_root@@Base+0x142>
  40c2ec:	mov    rax,QWORD PTR [rbp-0x18]
  40c2f0:	mov    esi,0x0
  40c2f5:	mov    rdi,rax
  40c2f8:	call   40acaa <flatcc_verify_error_string@@Base+0x1d5>
  40c2fd:	mov    edx,eax
  40c2ff:	mov    rax,QWORD PTR [rbp-0x18]
  40c303:	add    rax,rdx
  40c306:	mov    QWORD PTR [rbp-0x18],rax
  40c30a:	mov    rax,QWORD PTR [rbp-0x18]
  40c30e:	mov    esi,0x0
  40c313:	mov    rdi,rax
  40c316:	call   40acaa <flatcc_verify_error_string@@Base+0x1d5>
  40c31b:	mov    DWORD PTR [rbp-0x1c],eax
  40c31e:	add    QWORD PTR [rbp-0x18],0x4
  40c323:	mov    ecx,DWORD PTR [rbp-0x1c]
  40c326:	mov    rdx,QWORD PTR [rbp-0x38]
  40c32a:	mov    rax,QWORD PTR [rbp-0x18]
  40c32e:	mov    rsi,rcx
  40c331:	mov    rdi,rax
  40c334:	call   40bd83 <flatcc_verify_buffer_header@@Base>
  40c339:	test   eax,eax
  40c33b:	je     40c355 <flatcc_verify_table_as_nested_root@@Base+0x10a>
  40c33d:	mov    ecx,DWORD PTR [rbp-0x1c]
  40c340:	mov    rdx,QWORD PTR [rbp-0x38]
  40c344:	mov    rax,QWORD PTR [rbp-0x18]
  40c348:	mov    rsi,rcx
  40c34b:	mov    rdi,rax
  40c34e:	call   40bd83 <flatcc_verify_buffer_header@@Base>
  40c353:	jmp    40c38d <flatcc_verify_table_as_nested_root@@Base+0x142>
  40c355:	mov    rax,QWORD PTR [rbp-0x28]
  40c359:	mov    ebx,DWORD PTR [rax+0xc]
  40c35c:	mov    rax,QWORD PTR [rbp-0x18]
  40c360:	mov    esi,0x0
  40c365:	mov    rdi,rax
  40c368:	call   40acaa <flatcc_verify_error_string@@Base+0x1d5>
  40c36d:	mov    ecx,eax
  40c36f:	mov    rdx,QWORD PTR [rbp-0x48]
  40c373:	mov    esi,DWORD PTR [rbp-0x1c]
  40c376:	mov    rax,QWORD PTR [rbp-0x18]
  40c37a:	mov    r9,rdx
  40c37d:	mov    r8d,ebx
  40c380:	mov    edx,0x0
  40c385:	mov    rdi,rax
  40c388:	call   40b38b <flatcc_verify_error_string@@Base+0x8b6>
  40c38d:	add    rsp,0x48
  40c391:	pop    rbx
  40c392:	pop    rbp
  40c393:	ret    

000000000040c394 <flatcc_verify_union_field@@Base>:
  40c394:	endbr64 
  40c398:	push   rbp
  40c399:	mov    rbp,rsp
  40c39c:	sub    rsp,0x70
  40c3a0:	mov    QWORD PTR [rbp-0x58],rdi
  40c3a4:	mov    eax,esi
  40c3a6:	mov    DWORD PTR [rbp-0x60],edx
  40c3a9:	mov    QWORD PTR [rbp-0x68],rcx
  40c3ad:	mov    WORD PTR [rbp-0x5c],ax
  40c3b1:	mov    rax,QWORD PTR fs:0x28
  40c3ba:	mov    QWORD PTR [rbp-0x8],rax
  40c3be:	xor    eax,eax
  40c3c0:	movzx  eax,WORD PTR [rbp-0x5c]
  40c3c4:	dec    eax
  40c3c6:	movzx  edx,ax
  40c3c9:	mov    rax,QWORD PTR [rbp-0x58]
  40c3cd:	mov    esi,edx
  40c3cf:	mov    rdi,rax
  40c3d2:	call   40aec6 <flatcc_verify_error_string@@Base+0x3f1>
  40c3d7:	mov    WORD PTR [rbp-0x50],ax
  40c3db:	cmp    WORD PTR [rbp-0x50],0x0
  40c3e0:	jne    40c43d <flatcc_verify_union_field@@Base+0xa9>
  40c3e2:	movzx  edx,WORD PTR [rbp-0x5c]
  40c3e6:	mov    rax,QWORD PTR [rbp-0x58]
  40c3ea:	mov    esi,edx
  40c3ec:	mov    rdi,rax
  40c3ef:	call   40aec6 <flatcc_verify_error_string@@Base+0x3f1>
  40c3f4:	mov    WORD PTR [rbp-0x4e],ax
  40c3f8:	cmp    WORD PTR [rbp-0x4e],0x0
  40c3fd:	sete   al
  40c400:	movzx  eax,al
  40c403:	mov    DWORD PTR [rbp-0x48],eax
  40c406:	cmp    DWORD PTR [rbp-0x48],0x0
  40c40a:	jne    40c416 <flatcc_verify_union_field@@Base+0x82>
  40c40c:	mov    eax,0x17
  40c411:	jmp    40c586 <flatcc_verify_union_field@@Base+0x1f2>
  40c416:	cmp    DWORD PTR [rbp-0x60],0x0
  40c41a:	sete   al
  40c41d:	movzx  eax,al
  40c420:	mov    DWORD PTR [rbp-0x44],eax
  40c423:	cmp    DWORD PTR [rbp-0x44],0x0
  40c427:	jne    40c433 <flatcc_verify_union_field@@Base+0x9f>
  40c429:	mov    eax,0x15
  40c42e:	jmp    40c586 <flatcc_verify_union_field@@Base+0x1f2>
  40c433:	mov    eax,0x0
  40c438:	jmp    40c586 <flatcc_verify_union_field@@Base+0x1f2>
  40c43d:	movzx  eax,WORD PTR [rbp-0x5c]
  40c441:	dec    eax
  40c443:	movzx  esi,ax
  40c446:	mov    rax,QWORD PTR [rbp-0x58]
  40c44a:	mov    r8d,0x1
  40c450:	mov    ecx,0x1
  40c455:	mov    edx,0x0
  40c45a:	mov    rdi,rax
  40c45d:	call   40af69 <flatcc_verify_error_string@@Base+0x494>
  40c462:	test   eax,eax
  40c464:	je     40c490 <flatcc_verify_union_field@@Base+0xfc>
  40c466:	movzx  eax,WORD PTR [rbp-0x5c]
  40c46a:	dec    eax
  40c46c:	movzx  esi,ax
  40c46f:	mov    rax,QWORD PTR [rbp-0x58]
  40c473:	mov    r8d,0x1
  40c479:	mov    ecx,0x1
  40c47e:	mov    edx,0x0
  40c483:	mov    rdi,rax
  40c486:	call   40af69 <flatcc_verify_error_string@@Base+0x494>
  40c48b:	jmp    40c586 <flatcc_verify_union_field@@Base+0x1f2>
  40c490:	movzx  edx,WORD PTR [rbp-0x5c]
  40c494:	mov    rax,QWORD PTR [rbp-0x58]
  40c498:	mov    esi,edx
  40c49a:	mov    rdi,rax
  40c49d:	call   40aec6 <flatcc_verify_error_string@@Base+0x3f1>
  40c4a2:	mov    WORD PTR [rbp-0x4e],ax
  40c4a6:	mov    rax,QWORD PTR [rbp-0x58]
  40c4aa:	mov    rdx,QWORD PTR [rax]
  40c4ad:	mov    rax,QWORD PTR [rbp-0x58]
  40c4b1:	mov    eax,DWORD PTR [rax+0x18]
  40c4b4:	mov    ecx,eax
  40c4b6:	movzx  eax,WORD PTR [rbp-0x50]
  40c4ba:	add    rax,rcx
  40c4bd:	add    rax,rdx
  40c4c0:	mov    QWORD PTR [rbp-0x38],rax
  40c4c4:	mov    rax,QWORD PTR [rbp-0x38]
  40c4c8:	movzx  eax,BYTE PTR [rax]
  40c4cb:	test   al,al
  40c4cd:	jne    40c4d6 <flatcc_verify_union_field@@Base+0x142>
  40c4cf:	cmp    WORD PTR [rbp-0x4e],0x0
  40c4d4:	jne    40c4dd <flatcc_verify_union_field@@Base+0x149>
  40c4d6:	mov    eax,0x1
  40c4db:	jmp    40c4e2 <flatcc_verify_union_field@@Base+0x14e>
  40c4dd:	mov    eax,0x0
  40c4e2:	mov    DWORD PTR [rbp-0x40],eax
  40c4e5:	cmp    DWORD PTR [rbp-0x40],0x0
  40c4e9:	jne    40c4f5 <flatcc_verify_union_field@@Base+0x161>
  40c4eb:	mov    eax,0x18
  40c4f0:	jmp    40c586 <flatcc_verify_union_field@@Base+0x1f2>
  40c4f5:	mov    rax,QWORD PTR [rbp-0x38]
  40c4f9:	movzx  eax,BYTE PTR [rax]
  40c4fc:	test   al,al
  40c4fe:	jne    40c507 <flatcc_verify_union_field@@Base+0x173>
  40c500:	mov    eax,0x0
  40c505:	jmp    40c586 <flatcc_verify_union_field@@Base+0x1f2>
  40c507:	movzx  esi,WORD PTR [rbp-0x5c]
  40c50b:	lea    rcx,[rbp-0x4c]
  40c50f:	mov    edx,DWORD PTR [rbp-0x60]
  40c512:	mov    rax,QWORD PTR [rbp-0x58]
  40c516:	mov    rdi,rax
  40c519:	call   40b05a <flatcc_verify_error_string@@Base+0x585>
  40c51e:	mov    DWORD PTR [rbp-0x3c],eax
  40c521:	cmp    DWORD PTR [rbp-0x3c],0x0
  40c525:	jne    40c52e <flatcc_verify_union_field@@Base+0x19a>
  40c527:	mov    eax,DWORD PTR [rbp-0x4c]
  40c52a:	test   eax,eax
  40c52c:	jne    40c533 <flatcc_verify_union_field@@Base+0x19f>
  40c52e:	mov    eax,DWORD PTR [rbp-0x3c]
  40c531:	jmp    40c586 <flatcc_verify_union_field@@Base+0x1f2>
  40c533:	mov    rax,QWORD PTR [rbp-0x58]
  40c537:	mov    rax,QWORD PTR [rax]
  40c53a:	mov    QWORD PTR [rbp-0x30],rax
  40c53e:	mov    rax,QWORD PTR [rbp-0x58]
  40c542:	mov    eax,DWORD PTR [rax+0x8]
  40c545:	mov    DWORD PTR [rbp-0x28],eax
  40c548:	mov    rax,QWORD PTR [rbp-0x58]
  40c54c:	mov    eax,DWORD PTR [rax+0xc]
  40c54f:	mov    DWORD PTR [rbp-0x24],eax
  40c552:	mov    eax,DWORD PTR [rbp-0x4c]
  40c555:	mov    DWORD PTR [rbp-0x1c],eax
  40c558:	mov    edx,DWORD PTR [rbp-0x4c]
  40c55b:	mov    rax,QWORD PTR [rbp-0x58]
  40c55f:	mov    rax,QWORD PTR [rax]
  40c562:	mov    esi,edx
  40c564:	mov    rdi,rax
  40c567:	call   40acaa <flatcc_verify_error_string@@Base+0x1d5>
  40c56c:	mov    DWORD PTR [rbp-0x18],eax
  40c56f:	mov    rax,QWORD PTR [rbp-0x38]
  40c573:	movzx  eax,BYTE PTR [rax]
  40c576:	mov    BYTE PTR [rbp-0x20],al
  40c579:	lea    rdx,[rbp-0x30]
  40c57d:	mov    rax,QWORD PTR [rbp-0x68]
  40c581:	mov    rdi,rdx
  40c584:	call   rax
  40c586:	mov    rcx,QWORD PTR [rbp-0x8]
  40c58a:	xor    rcx,QWORD PTR fs:0x28
  40c593:	je     40c59a <flatcc_verify_union_field@@Base+0x206>
  40c595:	call   403120 <__stack_chk_fail@plt>
  40c59a:	leave  
  40c59b:	ret    

000000000040c59c <flatcc_verify_union_vector_field@@Base>:
  40c59c:	endbr64 
  40c5a0:	push   rbp
  40c5a1:	mov    rbp,rsp
  40c5a4:	push   rbx
  40c5a5:	sub    rsp,0x58
  40c5a9:	mov    QWORD PTR [rbp-0x48],rdi
  40c5ad:	mov    eax,esi
  40c5af:	mov    DWORD PTR [rbp-0x50],edx
  40c5b2:	mov    QWORD PTR [rbp-0x58],rcx
  40c5b6:	mov    WORD PTR [rbp-0x4c],ax
  40c5ba:	mov    rax,QWORD PTR fs:0x28
  40c5c3:	mov    QWORD PTR [rbp-0x18],rax
  40c5c7:	xor    eax,eax
  40c5c9:	movzx  eax,WORD PTR [rbp-0x4c]
  40c5cd:	dec    eax
  40c5cf:	movzx  edx,ax
  40c5d2:	mov    rax,QWORD PTR [rbp-0x48]
  40c5d6:	mov    esi,edx
  40c5d8:	mov    rdi,rax
  40c5db:	call   40aec6 <flatcc_verify_error_string@@Base+0x3f1>
  40c5e0:	mov    WORD PTR [rbp-0x3c],ax
  40c5e4:	cmp    WORD PTR [rbp-0x3c],0x0
  40c5e9:	jne    40c625 <flatcc_verify_union_vector_field@@Base+0x89>
  40c5eb:	movzx  edx,WORD PTR [rbp-0x4c]
  40c5ef:	mov    rax,QWORD PTR [rbp-0x48]
  40c5f3:	mov    esi,edx
  40c5f5:	mov    rdi,rax
  40c5f8:	call   40aec6 <flatcc_verify_error_string@@Base+0x3f1>
  40c5fd:	mov    WORD PTR [rbp-0x3a],ax
  40c601:	cmp    WORD PTR [rbp-0x3a],0x0
  40c606:	jne    40c625 <flatcc_verify_union_vector_field@@Base+0x89>
  40c608:	cmp    DWORD PTR [rbp-0x50],0x0
  40c60c:	sete   al
  40c60f:	movzx  eax,al
  40c612:	mov    DWORD PTR [rbp-0x34],eax
  40c615:	cmp    DWORD PTR [rbp-0x34],0x0
  40c619:	jne    40c625 <flatcc_verify_union_vector_field@@Base+0x89>
  40c61b:	mov    eax,0x16
  40c620:	jmp    40c766 <flatcc_verify_union_vector_field@@Base+0x1ca>
  40c625:	movzx  eax,WORD PTR [rbp-0x4c]
  40c629:	dec    eax
  40c62b:	movzx  esi,ax
  40c62e:	mov    edx,DWORD PTR [rbp-0x50]
  40c631:	mov    rax,QWORD PTR [rbp-0x48]
  40c635:	mov    r9d,0xffffffff
  40c63b:	mov    r8d,0x1
  40c641:	mov    ecx,0x1
  40c646:	mov    rdi,rax
  40c649:	call   40b9e0 <flatcc_verify_vector_field@@Base>
  40c64e:	test   eax,eax
  40c650:	je     40c680 <flatcc_verify_union_vector_field@@Base+0xe4>
  40c652:	movzx  eax,WORD PTR [rbp-0x4c]
  40c656:	dec    eax
  40c658:	movzx  esi,ax
  40c65b:	mov    edx,DWORD PTR [rbp-0x50]
  40c65e:	mov    rax,QWORD PTR [rbp-0x48]
  40c662:	mov    r9d,0xffffffff
  40c668:	mov    r8d,0x1
  40c66e:	mov    ecx,0x1
  40c673:	mov    rdi,rax
  40c676:	call   40b9e0 <flatcc_verify_vector_field@@Base>
  40c67b:	jmp    40c766 <flatcc_verify_union_vector_field@@Base+0x1ca>
  40c680:	movzx  eax,WORD PTR [rbp-0x4c]
  40c684:	dec    eax
  40c686:	movzx  edx,ax
  40c689:	mov    rax,QWORD PTR [rbp-0x48]
  40c68d:	mov    esi,edx
  40c68f:	mov    rdi,rax
  40c692:	call   40af17 <flatcc_verify_error_string@@Base+0x442>
  40c697:	mov    QWORD PTR [rbp-0x28],rax
  40c69b:	cmp    QWORD PTR [rbp-0x28],0x0
  40c6a0:	jne    40c6ac <flatcc_verify_union_vector_field@@Base+0x110>
  40c6a2:	mov    eax,0x0
  40c6a7:	jmp    40c766 <flatcc_verify_union_vector_field@@Base+0x1ca>
  40c6ac:	mov    rax,QWORD PTR [rbp-0x28]
  40c6b0:	mov    esi,0x0
  40c6b5:	mov    rdi,rax
  40c6b8:	call   40acaa <flatcc_verify_error_string@@Base+0x1d5>
  40c6bd:	mov    edx,eax
  40c6bf:	mov    rax,QWORD PTR [rbp-0x28]
  40c6c3:	add    rax,rdx
  40c6c6:	mov    QWORD PTR [rbp-0x28],rax
  40c6ca:	mov    rax,QWORD PTR [rbp-0x28]
  40c6ce:	mov    esi,0x0
  40c6d3:	mov    rdi,rax
  40c6d6:	call   40acaa <flatcc_verify_error_string@@Base+0x1d5>
  40c6db:	mov    DWORD PTR [rbp-0x30],eax
  40c6de:	add    QWORD PTR [rbp-0x28],0x4
  40c6e3:	mov    rax,QWORD PTR [rbp-0x28]
  40c6e7:	mov    QWORD PTR [rbp-0x20],rax
  40c6eb:	movzx  esi,WORD PTR [rbp-0x4c]
  40c6ef:	lea    rcx,[rbp-0x38]
  40c6f3:	mov    edx,DWORD PTR [rbp-0x50]
  40c6f6:	mov    rax,QWORD PTR [rbp-0x48]
  40c6fa:	mov    rdi,rax
  40c6fd:	call   40b05a <flatcc_verify_error_string@@Base+0x585>
  40c702:	mov    DWORD PTR [rbp-0x2c],eax
  40c705:	cmp    DWORD PTR [rbp-0x2c],0x0
  40c709:	jne    40c712 <flatcc_verify_union_vector_field@@Base+0x176>
  40c70b:	mov    eax,DWORD PTR [rbp-0x38]
  40c70e:	test   eax,eax
  40c710:	jne    40c717 <flatcc_verify_union_vector_field@@Base+0x17b>
  40c712:	mov    eax,DWORD PTR [rbp-0x2c]
  40c715:	jmp    40c766 <flatcc_verify_union_vector_field@@Base+0x1ca>
  40c717:	mov    rax,QWORD PTR [rbp-0x48]
  40c71b:	mov    ebx,DWORD PTR [rax+0xc]
  40c71e:	mov    edx,DWORD PTR [rbp-0x38]
  40c721:	mov    rax,QWORD PTR [rbp-0x48]
  40c725:	mov    rax,QWORD PTR [rax]
  40c728:	mov    esi,edx
  40c72a:	mov    rdi,rax
  40c72d:	call   40acaa <flatcc_verify_error_string@@Base+0x1d5>
  40c732:	mov    r10d,eax
  40c735:	mov    edx,DWORD PTR [rbp-0x38]
  40c738:	mov    rax,QWORD PTR [rbp-0x48]
  40c73c:	mov    esi,DWORD PTR [rax+0x8]
  40c73f:	mov    rax,QWORD PTR [rbp-0x48]
  40c743:	mov    rax,QWORD PTR [rax]
  40c746:	mov    rdi,QWORD PTR [rbp-0x20]
  40c74a:	mov    ecx,DWORD PTR [rbp-0x30]
  40c74d:	push   QWORD PTR [rbp-0x58]
  40c750:	push   rbx
  40c751:	mov    r9,rdi
  40c754:	mov    r8d,ecx
  40c757:	mov    ecx,r10d
  40c75a:	mov    rdi,rax
  40c75d:	call   40b6f6 <flatcc_verify_error_string@@Base+0xc21>
  40c762:	add    rsp,0x10
  40c766:	mov    rbx,QWORD PTR [rbp-0x18]
  40c76a:	xor    rbx,QWORD PTR fs:0x28
  40c773:	je     40c77a <flatcc_verify_union_vector_field@@Base+0x1de>
  40c775:	call   403120 <__stack_chk_fail@plt>
  40c77a:	mov    rbx,QWORD PTR [rbp-0x8]
  40c77e:	leave  
  40c77f:	ret    

000000000040c780 <__libc_csu_init@@Base>:
  40c780:	endbr64 
  40c784:	push   r15
  40c786:	lea    r15,[rip+0x5683]        # 411e10 <flatcc_builder_padding_base@@Base+0x4c50>
  40c78d:	push   r14
  40c78f:	mov    r14,rdx
  40c792:	push   r13
  40c794:	mov    r13,rsi
  40c797:	push   r12
  40c799:	mov    r12d,edi
  40c79c:	push   rbp
  40c79d:	lea    rbp,[rip+0x5674]        # 411e18 <flatcc_builder_padding_base@@Base+0x4c58>
  40c7a4:	push   rbx
  40c7a5:	sub    rbp,r15
  40c7a8:	sub    rsp,0x8
  40c7ac:	call   403000 <free@plt-0xf0>
  40c7b1:	sar    rbp,0x3
  40c7b5:	je     40c7d6 <__libc_csu_init@@Base+0x56>
  40c7b7:	xor    ebx,ebx
  40c7b9:	nop    DWORD PTR [rax+0x0]
  40c7c0:	mov    rdx,r14
  40c7c3:	mov    rsi,r13
  40c7c6:	mov    edi,r12d
  40c7c9:	call   QWORD PTR [r15+rbx*8]
  40c7cd:	add    rbx,0x1
  40c7d1:	cmp    rbp,rbx
  40c7d4:	jne    40c7c0 <__libc_csu_init@@Base+0x40>
  40c7d6:	add    rsp,0x8
  40c7da:	pop    rbx
  40c7db:	pop    rbp
  40c7dc:	pop    r12
  40c7de:	pop    r13
  40c7e0:	pop    r14
  40c7e2:	pop    r15
  40c7e4:	ret    
  40c7e5:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

000000000040c7f0 <__libc_csu_fini@@Base>:
  40c7f0:	endbr64 
  40c7f4:	ret    

Disassembly of section .fini:

000000000040c7f8 <.fini>:
  40c7f8:	endbr64 
  40c7fc:	sub    rsp,0x8
  40c800:	add    rsp,0x8
  40c804:	ret    
