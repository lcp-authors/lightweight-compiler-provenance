
../repos/tbeu-matio-3dd266d/test/.libs/test_mat:     file format elf64-x86-64


Disassembly of section .init:

0000000000402000 <.init>:
  402000:	endbr64 
  402004:	sub    rsp,0x8
  402008:	mov    rax,QWORD PTR [rip+0x12fe1]        # 414ff0 <__gmon_start__>
  40200f:	test   rax,rax
  402012:	je     402016 <Mat_VarGetNumberOfFields@plt-0x1a>
  402014:	call   rax
  402016:	add    rsp,0x8
  40201a:	ret    

Disassembly of section .plt:

0000000000402020 <Mat_VarGetNumberOfFields@plt-0x10>:
  402020:	push   QWORD PTR [rip+0x12fe2]        # 415008 <getopt_long_only@@Base+0x8128>
  402026:	jmp    QWORD PTR [rip+0x12fe4]        # 415010 <getopt_long_only@@Base+0x8130>
  40202c:	nop    DWORD PTR [rax+0x0]

0000000000402030 <Mat_VarGetNumberOfFields@plt>:
  402030:	jmp    QWORD PTR [rip+0x12fe2]        # 415018 <Mat_VarGetNumberOfFields>
  402036:	push   0x0
  40203b:	jmp    402020 <Mat_VarGetNumberOfFields@plt-0x10>

0000000000402040 <getenv@plt>:
  402040:	jmp    QWORD PTR [rip+0x12fda]        # 415020 <getenv@GLIBC_2.2.5>
  402046:	push   0x1
  40204b:	jmp    402020 <Mat_VarGetNumberOfFields@plt-0x10>

0000000000402050 <free@plt>:
  402050:	jmp    QWORD PTR [rip+0x12fd2]        # 415028 <free@GLIBC_2.2.5>
  402056:	push   0x2
  40205b:	jmp    402020 <Mat_VarGetNumberOfFields@plt-0x10>

0000000000402060 <putchar@plt>:
  402060:	jmp    QWORD PTR [rip+0x12fca]        # 415030 <putchar@GLIBC_2.2.5>
  402066:	push   0x3
  40206b:	jmp    402020 <Mat_VarGetNumberOfFields@plt-0x10>

0000000000402070 <Mat_VarReadNext@plt>:
  402070:	jmp    QWORD PTR [rip+0x12fc2]        # 415038 <Mat_VarReadNext>
  402076:	push   0x4
  40207b:	jmp    402020 <Mat_VarGetNumberOfFields@plt-0x10>

0000000000402080 <Mat_Open@plt>:
  402080:	jmp    QWORD PTR [rip+0x12fba]        # 415040 <Mat_Open>
  402086:	push   0x5
  40208b:	jmp    402020 <Mat_VarGetNumberOfFields@plt-0x10>

0000000000402090 <strncmp@plt>:
  402090:	jmp    QWORD PTR [rip+0x12fb2]        # 415048 <strncmp@GLIBC_2.2.5>
  402096:	push   0x6
  40209b:	jmp    402020 <Mat_VarGetNumberOfFields@plt-0x10>

00000000004020a0 <Mat_VarGetCells@plt>:
  4020a0:	jmp    QWORD PTR [rip+0x12faa]        # 415050 <Mat_VarGetCells>
  4020a6:	push   0x7
  4020ab:	jmp    402020 <Mat_VarGetNumberOfFields@plt-0x10>

00000000004020b0 <Mat_VarAddStructField@plt>:
  4020b0:	jmp    QWORD PTR [rip+0x12fa2]        # 415058 <Mat_VarAddStructField>
  4020b6:	push   0x8
  4020bb:	jmp    402020 <Mat_VarGetNumberOfFields@plt-0x10>

00000000004020c0 <puts@plt>:
  4020c0:	jmp    QWORD PTR [rip+0x12f9a]        # 415060 <puts@GLIBC_2.2.5>
  4020c6:	push   0x9
  4020cb:	jmp    402020 <Mat_VarGetNumberOfFields@plt-0x10>

00000000004020d0 <Mat_VarCreate@plt>:
  4020d0:	jmp    QWORD PTR [rip+0x12f92]        # 415068 <Mat_VarCreate>
  4020d6:	push   0xa
  4020db:	jmp    402020 <Mat_VarGetNumberOfFields@plt-0x10>

00000000004020e0 <Mat_GetFilename@plt>:
  4020e0:	jmp    QWORD PTR [rip+0x12f8a]        # 415070 <Mat_GetFilename>
  4020e6:	push   0xb
  4020eb:	jmp    402020 <Mat_VarGetNumberOfFields@plt-0x10>

00000000004020f0 <Mat_VarWrite@plt>:
  4020f0:	jmp    QWORD PTR [rip+0x12f82]        # 415078 <Mat_VarWrite>
  4020f6:	push   0xc
  4020fb:	jmp    402020 <Mat_VarGetNumberOfFields@plt-0x10>

0000000000402100 <Mat_GetVersion@plt>:
  402100:	jmp    QWORD PTR [rip+0x12f7a]        # 415080 <Mat_GetVersion>
  402106:	push   0xd
  40210b:	jmp    402020 <Mat_VarGetNumberOfFields@plt-0x10>

0000000000402110 <Mat_Message@plt>:
  402110:	jmp    QWORD PTR [rip+0x12f72]        # 415088 <Mat_Message>
  402116:	push   0xe
  40211b:	jmp    402020 <Mat_VarGetNumberOfFields@plt-0x10>

0000000000402120 <strlen@plt>:
  402120:	jmp    QWORD PTR [rip+0x12f6a]        # 415090 <strlen@GLIBC_2.2.5>
  402126:	push   0xf
  40212b:	jmp    402020 <Mat_VarGetNumberOfFields@plt-0x10>

0000000000402130 <Mat_VarReadData@plt>:
  402130:	jmp    QWORD PTR [rip+0x12f62]        # 415098 <Mat_VarReadData>
  402136:	push   0x10
  40213b:	jmp    402020 <Mat_VarGetNumberOfFields@plt-0x10>

0000000000402140 <Mat_VarWriteAppend@plt>:
  402140:	jmp    QWORD PTR [rip+0x12f5a]        # 4150a0 <Mat_VarWriteAppend>
  402146:	push   0x11
  40214b:	jmp    402020 <Mat_VarGetNumberOfFields@plt-0x10>

0000000000402150 <strchr@plt>:
  402150:	jmp    QWORD PTR [rip+0x12f52]        # 4150a8 <strchr@GLIBC_2.2.5>
  402156:	push   0x12
  40215b:	jmp    402020 <Mat_VarGetNumberOfFields@plt-0x10>

0000000000402160 <printf@plt>:
  402160:	jmp    QWORD PTR [rip+0x12f4a]        # 4150b0 <printf@GLIBC_2.2.5>
  402166:	push   0x13
  40216b:	jmp    402020 <Mat_VarGetNumberOfFields@plt-0x10>

0000000000402170 <warnx@plt>:
  402170:	jmp    QWORD PTR [rip+0x12f42]        # 4150b8 <warnx@GLIBC_2.2.5>
  402176:	push   0x14
  40217b:	jmp    402020 <Mat_VarGetNumberOfFields@plt-0x10>

0000000000402180 <Mat_VarReadInfo@plt>:
  402180:	jmp    QWORD PTR [rip+0x12f3a]        # 4150c0 <Mat_VarReadInfo>
  402186:	push   0x15
  40218b:	jmp    402020 <Mat_VarGetNumberOfFields@plt-0x10>

0000000000402190 <Mat_LogInit@plt>:
  402190:	jmp    QWORD PTR [rip+0x12f32]        # 4150c8 <Mat_LogInit>
  402196:	push   0x16
  40219b:	jmp    402020 <Mat_VarGetNumberOfFields@plt-0x10>

00000000004021a0 <Mat_VarSetCell@plt>:
  4021a0:	jmp    QWORD PTR [rip+0x12f2a]        # 4150d0 <Mat_VarSetCell>
  4021a6:	push   0x17
  4021ab:	jmp    402020 <Mat_VarGetNumberOfFields@plt-0x10>

00000000004021b0 <memset@plt>:
  4021b0:	jmp    QWORD PTR [rip+0x12f22]        # 4150d8 <memset@GLIBC_2.2.5>
  4021b6:	push   0x18
  4021bb:	jmp    402020 <Mat_VarGetNumberOfFields@plt-0x10>

00000000004021c0 <freopen@plt>:
  4021c0:	jmp    QWORD PTR [rip+0x12f1a]        # 4150e0 <freopen@GLIBC_2.2.5>
  4021c6:	push   0x19
  4021cb:	jmp    402020 <Mat_VarGetNumberOfFields@plt-0x10>

00000000004021d0 <Mat_CalcSubscripts2@plt>:
  4021d0:	jmp    QWORD PTR [rip+0x12f12]        # 4150e8 <Mat_CalcSubscripts2>
  4021d6:	push   0x1a
  4021db:	jmp    402020 <Mat_VarGetNumberOfFields@plt-0x10>

00000000004021e0 <Mat_VarGetStructFieldnames@plt>:
  4021e0:	jmp    QWORD PTR [rip+0x12f0a]        # 4150f0 <Mat_VarGetStructFieldnames>
  4021e6:	push   0x1b
  4021eb:	jmp    402020 <Mat_VarGetNumberOfFields@plt-0x10>

00000000004021f0 <Mat_CalcSingleSubscript2@plt>:
  4021f0:	jmp    QWORD PTR [rip+0x12f02]        # 4150f8 <Mat_CalcSingleSubscript2>
  4021f6:	push   0x1c
  4021fb:	jmp    402020 <Mat_VarGetNumberOfFields@plt-0x10>

0000000000402200 <Mat_VarGetStructField@plt>:
  402200:	jmp    QWORD PTR [rip+0x12efa]        # 415100 <Mat_VarGetStructField>
  402206:	push   0x1d
  40220b:	jmp    402020 <Mat_VarGetNumberOfFields@plt-0x10>

0000000000402210 <strcmp@plt>:
  402210:	jmp    QWORD PTR [rip+0x12ef2]        # 415108 <strcmp@GLIBC_2.2.5>
  402216:	push   0x1e
  40221b:	jmp    402020 <Mat_VarGetNumberOfFields@plt-0x10>

0000000000402220 <fprintf@plt>:
  402220:	jmp    QWORD PTR [rip+0x12eea]        # 415110 <fprintf@GLIBC_2.2.5>
  402226:	push   0x1f
  40222b:	jmp    402020 <Mat_VarGetNumberOfFields@plt-0x10>

0000000000402230 <strtol@plt>:
  402230:	jmp    QWORD PTR [rip+0x12ee2]        # 415118 <strtol@GLIBC_2.2.5>
  402236:	push   0x20
  40223b:	jmp    402020 <Mat_VarGetNumberOfFields@plt-0x10>

0000000000402240 <Mat_VarFree@plt>:
  402240:	jmp    QWORD PTR [rip+0x12eda]        # 415120 <Mat_VarFree>
  402246:	push   0x21
  40224b:	jmp    402020 <Mat_VarGetNumberOfFields@plt-0x10>

0000000000402250 <Mat_GetDir@plt>:
  402250:	jmp    QWORD PTR [rip+0x12ed2]        # 415128 <Mat_GetDir>
  402256:	push   0x22
  40225b:	jmp    402020 <Mat_VarGetNumberOfFields@plt-0x10>

0000000000402260 <Mat_GetLibraryVersion@plt>:
  402260:	jmp    QWORD PTR [rip+0x12eca]        # 415130 <Mat_GetLibraryVersion>
  402266:	push   0x23
  40226b:	jmp    402020 <Mat_VarGetNumberOfFields@plt-0x10>

0000000000402270 <Mat_VarPrint@plt>:
  402270:	jmp    QWORD PTR [rip+0x12ec2]        # 415138 <Mat_VarPrint>
  402276:	push   0x24
  40227b:	jmp    402020 <Mat_VarGetNumberOfFields@plt-0x10>

0000000000402280 <__isoc99_sscanf@plt>:
  402280:	jmp    QWORD PTR [rip+0x12eba]        # 415140 <__isoc99_sscanf@GLIBC_2.7>
  402286:	push   0x25
  40228b:	jmp    402020 <Mat_VarGetNumberOfFields@plt-0x10>

0000000000402290 <Mat_VarGetStructs@plt>:
  402290:	jmp    QWORD PTR [rip+0x12eb2]        # 415148 <Mat_VarGetStructs>
  402296:	push   0x26
  40229b:	jmp    402020 <Mat_VarGetNumberOfFields@plt-0x10>

00000000004022a0 <Mat_Close@plt>:
  4022a0:	jmp    QWORD PTR [rip+0x12eaa]        # 415150 <Mat_Close>
  4022a6:	push   0x27
  4022ab:	jmp    402020 <Mat_VarGetNumberOfFields@plt-0x10>

00000000004022b0 <Mat_Critical@plt>:
  4022b0:	jmp    QWORD PTR [rip+0x12ea2]        # 415158 <Mat_Critical>
  4022b6:	push   0x28
  4022bb:	jmp    402020 <Mat_VarGetNumberOfFields@plt-0x10>

00000000004022c0 <Mat_VarDelete@plt>:
  4022c0:	jmp    QWORD PTR [rip+0x12e9a]        # 415160 <Mat_VarDelete>
  4022c6:	push   0x29
  4022cb:	jmp    402020 <Mat_VarGetNumberOfFields@plt-0x10>

00000000004022d0 <realloc@plt>:
  4022d0:	jmp    QWORD PTR [rip+0x12e92]        # 415168 <realloc@GLIBC_2.2.5>
  4022d6:	push   0x2a
  4022db:	jmp    402020 <Mat_VarGetNumberOfFields@plt-0x10>

00000000004022e0 <Mat_VarGetStructsLinear@plt>:
  4022e0:	jmp    QWORD PTR [rip+0x12e8a]        # 415170 <Mat_VarGetStructsLinear>
  4022e6:	push   0x2b
  4022eb:	jmp    402020 <Mat_VarGetNumberOfFields@plt-0x10>

00000000004022f0 <Mat_GetHeader@plt>:
  4022f0:	jmp    QWORD PTR [rip+0x12e82]        # 415178 <Mat_GetHeader>
  4022f6:	push   0x2c
  4022fb:	jmp    402020 <Mat_VarGetNumberOfFields@plt-0x10>

0000000000402300 <Mat_VarCreateStruct@plt>:
  402300:	jmp    QWORD PTR [rip+0x12e7a]        # 415180 <Mat_VarCreateStruct>
  402306:	push   0x2d
  40230b:	jmp    402020 <Mat_VarGetNumberOfFields@plt-0x10>

0000000000402310 <Mat_CreateVer@plt>:
  402310:	jmp    QWORD PTR [rip+0x12e72]        # 415188 <Mat_CreateVer>
  402316:	push   0x2e
  40231b:	jmp    402020 <Mat_VarGetNumberOfFields@plt-0x10>

0000000000402320 <Mat_VarGetCellsLinear@plt>:
  402320:	jmp    QWORD PTR [rip+0x12e6a]        # 415190 <Mat_VarGetCellsLinear>
  402326:	push   0x2f
  40232b:	jmp    402020 <Mat_VarGetNumberOfFields@plt-0x10>

0000000000402330 <Mat_Help@plt>:
  402330:	jmp    QWORD PTR [rip+0x12e62]        # 415198 <Mat_Help>
  402336:	push   0x30
  40233b:	jmp    402020 <Mat_VarGetNumberOfFields@plt-0x10>

0000000000402340 <exit@plt>:
  402340:	jmp    QWORD PTR [rip+0x12e5a]        # 4151a0 <exit@GLIBC_2.2.5>
  402346:	push   0x31
  40234b:	jmp    402020 <Mat_VarGetNumberOfFields@plt-0x10>

0000000000402350 <fwrite@plt>:
  402350:	jmp    QWORD PTR [rip+0x12e52]        # 4151a8 <fwrite@GLIBC_2.2.5>
  402356:	push   0x32
  40235b:	jmp    402020 <Mat_VarGetNumberOfFields@plt-0x10>

0000000000402360 <Mat_VarDuplicate@plt>:
  402360:	jmp    QWORD PTR [rip+0x12e4a]        # 4151b0 <Mat_VarDuplicate>
  402366:	push   0x33
  40236b:	jmp    402020 <Mat_VarGetNumberOfFields@plt-0x10>

0000000000402370 <Mat_VarSetStructFieldByName@plt>:
  402370:	jmp    QWORD PTR [rip+0x12e42]        # 4151b8 <Mat_VarSetStructFieldByName>
  402376:	push   0x34
  40237b:	jmp    402020 <Mat_VarGetNumberOfFields@plt-0x10>

0000000000402380 <Mat_VarSetStructFieldByIndex@plt>:
  402380:	jmp    QWORD PTR [rip+0x12e3a]        # 4151c0 <Mat_VarSetStructFieldByIndex>
  402386:	push   0x35
  40238b:	jmp    402020 <Mat_VarGetNumberOfFields@plt-0x10>

0000000000402390 <Mat_VarRead@plt>:
  402390:	jmp    QWORD PTR [rip+0x12e32]        # 4151c8 <Mat_VarRead>
  402396:	push   0x36
  40239b:	jmp    402020 <Mat_VarGetNumberOfFields@plt-0x10>

Disassembly of section .text:

00000000004023a0 <getopt@@Base-0xa100>:
  4023a0:	endbr64 
  4023a4:	xor    ebp,ebp
  4023a6:	mov    r9,rdx
  4023a9:	pop    rsi
  4023aa:	mov    rdx,rsp
  4023ad:	and    rsp,0xfffffffffffffff0
  4023b1:	push   rax
  4023b2:	push   rsp
  4023b3:	mov    r8,0x40d320
  4023ba:	mov    rcx,0x40d2b0
  4023c1:	mov    rdi,0x402490
  4023c8:	call   QWORD PTR [rip+0x12c1a]        # 414fe8 <getopt_long_only@@Base+0x8108>
  4023ce:	hlt    
  4023cf:	nop
  4023d0:	endbr64 
  4023d4:	ret    
  4023d5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4023df:	nop
  4023e0:	mov    eax,0x416458
  4023e5:	cmp    rax,0x416458
  4023eb:	je     402400 <Mat_VarRead@plt+0x70>
  4023ed:	mov    eax,0x0
  4023f2:	test   rax,rax
  4023f5:	je     402400 <Mat_VarRead@plt+0x70>
  4023f7:	mov    edi,0x416458
  4023fc:	jmp    rax
  4023fe:	xchg   ax,ax
  402400:	ret    
  402401:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40240c:	nop    DWORD PTR [rax+0x0]
  402410:	mov    esi,0x416458
  402415:	sub    rsi,0x416458
  40241c:	mov    rax,rsi
  40241f:	shr    rsi,0x3f
  402423:	sar    rax,0x3
  402427:	add    rsi,rax
  40242a:	sar    rsi,1
  40242d:	je     402440 <Mat_VarRead@plt+0xb0>
  40242f:	mov    eax,0x0
  402434:	test   rax,rax
  402437:	je     402440 <Mat_VarRead@plt+0xb0>
  402439:	mov    edi,0x416458
  40243e:	jmp    rax
  402440:	ret    
  402441:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40244c:	nop    DWORD PTR [rax+0x0]
  402450:	endbr64 
  402454:	cmp    BYTE PTR [rip+0x13ffd],0x0        # 416458 <optopt@@Base+0x20>
  40245b:	jne    402470 <Mat_VarRead@plt+0xe0>
  40245d:	push   rbp
  40245e:	mov    rbp,rsp
  402461:	call   4023e0 <Mat_VarRead@plt+0x50>
  402466:	mov    BYTE PTR [rip+0x13feb],0x1        # 416458 <optopt@@Base+0x20>
  40246d:	pop    rbp
  40246e:	ret    
  40246f:	nop
  402470:	ret    
  402471:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40247c:	nop    DWORD PTR [rax+0x0]
  402480:	endbr64 
  402484:	jmp    402410 <Mat_VarRead@plt+0x80>
  402486:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402490:	push   rbp
  402491:	mov    rbp,rsp
  402494:	push   r15
  402496:	push   r14
  402498:	push   r13
  40249a:	push   r12
  40249c:	push   rbx
  40249d:	and    rsp,0xffffffffffffffe0
  4024a1:	sub    rsp,0x27a0
  4024a8:	mov    rbx,rsi
  4024ab:	mov    DWORD PTR [rsp+0x118],edi
  4024b2:	mov    DWORD PTR [rsp+0x11c],0x0
  4024bd:	lea    rsi,[rsp+0x2f8]
  4024c5:	lea    rdx,[rsp+0x2fc]
  4024cd:	lea    rdi,[rsp+0x2f4]
  4024d5:	call   402260 <Mat_GetLibraryVersion@plt>
  4024da:	cmp    DWORD PTR [rsp+0x2f4],0x1
  4024e2:	jne    40bf81 <Mat_VarRead@plt+0x9bf1>
  4024e8:	cmp    DWORD PTR [rsp+0x2f8],0x5
  4024f0:	jne    40bf81 <Mat_VarRead@plt+0x9bf1>
  4024f6:	cmp    DWORD PTR [rsp+0x2fc],0xf
  4024fe:	jne    40bf81 <Mat_VarRead@plt+0x9bf1>
  402504:	mov    QWORD PTR [rsp+0x30],rbx
  402509:	lea    rdi,[rip+0xc990]        # 40eea0 <getopt_long_only@@Base+0x1fc0>
  402510:	call   402190 <Mat_LogInit@plt>
  402515:	mov    eax,0x6
  40251a:	mov    QWORD PTR [rsp+0xb0],rax
  402522:	lea    r15,[rip+0xce16]        # 40f33f <getopt_long_only@@Base+0x245f>
  402529:	lea    r14,[rip+0x12cb0]        # 4151e0 <getopt_long_only@@Base+0x8300>
  402530:	lea    r12,[rip+0xbe69]        # 40e3a0 <getopt_long_only@@Base+0x14c0>
  402537:	xor    eax,eax
  402539:	jmp    40254a <Mat_VarRead@plt+0x1ba>
  40253b:	nop    DWORD PTR [rax+rax*1+0x0]
  402540:	lea    rax,[rip+0x13f21]        # 416468 <optarg@@Base>
  402547:	mov    rax,QWORD PTR [rax]
  40254a:	mov    QWORD PTR [rsp+0x28],rax
  40254f:	mov    edi,DWORD PTR [rsp+0x118]
  402556:	mov    rbx,QWORD PTR [rsp+0x30]
  40255b:	mov    rsi,rbx
  40255e:	mov    rdx,r15
  402561:	mov    rcx,r14
  402564:	xor    r8d,r8d
  402567:	call   40ced0 <getopt_long@@Base>
  40256c:	lea    ecx,[rax-0x3f]
  40256f:	cmp    ecx,0x3b
  402572:	ja     4025b0 <Mat_VarRead@plt+0x220>
  402574:	movsxd rcx,DWORD PTR [r12+rcx*4]
  402578:	add    rcx,r12
  40257b:	jmp    rcx
  40257d:	lea    rax,[rip+0x13ee4]        # 416468 <optarg@@Base>
  402584:	mov    rdi,QWORD PTR [rax]
  402587:	lea    rsi,[rip+0xc953]        # 40eee1 <getopt_long_only@@Base+0x2001>
  40258e:	lea    rdx,[rsp+0x11c]
  402596:	xor    eax,eax
  402598:	call   402280 <__isoc99_sscanf@plt>
  40259d:	cmp    eax,0x1
  4025a0:	je     40254f <Mat_VarRead@plt+0x1bf>
  4025a2:	jmp    40c027 <Mat_VarRead@plt+0x9c97>
  4025a7:	nop    WORD PTR [rax+rax*1+0x0]
  4025b0:	cmp    eax,0xffffffff
  4025b3:	je     4027c2 <Mat_VarRead@plt+0x432>
  4025b9:	lea    rdi,[rip+0xc9f4]        # 40efb4 <getopt_long_only@@Base+0x20d4>
  4025c0:	mov    esi,eax
  4025c2:	xor    eax,eax
  4025c4:	call   402160 <printf@plt>
  4025c9:	jmp    40254f <Mat_VarRead@plt+0x1bf>
  4025cb:	lea    rax,[rip+0x13e96]        # 416468 <optarg@@Base>
  4025d2:	mov    r13,QWORD PTR [rax]
  4025d5:	mov    rdi,r13
  4025d8:	lea    rsi,[rip+0xc905]        # 40eee4 <getopt_long_only@@Base+0x2004>
  4025df:	call   402210 <strcmp@plt>
  4025e4:	mov    ecx,0x6
  4025e9:	mov    QWORD PTR [rsp+0xb0],rcx
  4025f1:	test   eax,eax
  4025f3:	je     40254f <Mat_VarRead@plt+0x1bf>
  4025f9:	mov    rdi,r13
  4025fc:	lea    rsi,[rip+0xc8e8]        # 40eeeb <getopt_long_only@@Base+0x200b>
  402603:	call   402210 <strcmp@plt>
  402608:	mov    ecx,0x7
  40260d:	mov    QWORD PTR [rsp+0xb0],rcx
  402615:	test   eax,eax
  402617:	je     40254f <Mat_VarRead@plt+0x1bf>
  40261d:	mov    rdi,r13
  402620:	lea    rsi,[rip+0xc8cc]        # 40eef3 <getopt_long_only@@Base+0x2013>
  402627:	call   402210 <strcmp@plt>
  40262c:	mov    ecx,0xe
  402631:	mov    QWORD PTR [rsp+0xb0],rcx
  402639:	test   eax,eax
  40263b:	je     40254f <Mat_VarRead@plt+0x1bf>
  402641:	mov    rdi,r13
  402644:	lea    rsi,[rip+0xc8a7]        # 40eef2 <getopt_long_only@@Base+0x2012>
  40264b:	call   402210 <strcmp@plt>
  402650:	mov    ecx,0xf
  402655:	mov    QWORD PTR [rsp+0xb0],rcx
  40265d:	test   eax,eax
  40265f:	je     40254f <Mat_VarRead@plt+0x1bf>
  402665:	mov    rdi,r13
  402668:	lea    rsi,[rip+0xc88b]        # 40eefa <getopt_long_only@@Base+0x201a>
  40266f:	call   402210 <strcmp@plt>
  402674:	mov    ecx,0xc
  402679:	mov    QWORD PTR [rsp+0xb0],rcx
  402681:	test   eax,eax
  402683:	je     40254f <Mat_VarRead@plt+0x1bf>
  402689:	mov    rdi,r13
  40268c:	lea    rsi,[rip+0xc866]        # 40eef9 <getopt_long_only@@Base+0x2019>
  402693:	call   402210 <strcmp@plt>
  402698:	mov    ecx,0xd
  40269d:	mov    QWORD PTR [rsp+0xb0],rcx
  4026a5:	test   eax,eax
  4026a7:	je     40254f <Mat_VarRead@plt+0x1bf>
  4026ad:	mov    rdi,r13
  4026b0:	lea    rsi,[rip+0xc84a]        # 40ef01 <getopt_long_only@@Base+0x2021>
  4026b7:	call   402210 <strcmp@plt>
  4026bc:	mov    ecx,0xa
  4026c1:	mov    QWORD PTR [rsp+0xb0],rcx
  4026c9:	test   eax,eax
  4026cb:	je     40254f <Mat_VarRead@plt+0x1bf>
  4026d1:	mov    rdi,r13
  4026d4:	lea    rsi,[rip+0xc825]        # 40ef00 <getopt_long_only@@Base+0x2020>
  4026db:	call   402210 <strcmp@plt>
  4026e0:	mov    ecx,0xb
  4026e5:	mov    QWORD PTR [rsp+0xb0],rcx
  4026ed:	test   eax,eax
  4026ef:	je     40254f <Mat_VarRead@plt+0x1bf>
  4026f5:	mov    rdi,r13
  4026f8:	lea    rsi,[rip+0xc809]        # 40ef08 <getopt_long_only@@Base+0x2028>
  4026ff:	call   402210 <strcmp@plt>
  402704:	mov    ecx,0x8
  402709:	mov    QWORD PTR [rsp+0xb0],rcx
  402711:	test   eax,eax
  402713:	je     40254f <Mat_VarRead@plt+0x1bf>
  402719:	mov    rdi,r13
  40271c:	lea    rsi,[rip+0xc7e4]        # 40ef07 <getopt_long_only@@Base+0x2027>
  402723:	call   402210 <strcmp@plt>
  402728:	mov    ecx,0x9
  40272d:	mov    QWORD PTR [rsp+0xb0],rcx
  402735:	test   eax,eax
  402737:	je     40254f <Mat_VarRead@plt+0x1bf>
  40273d:	jmp    40c031 <Mat_VarRead@plt+0x9ca1>
  402742:	lea    rax,[rip+0x13d1f]        # 416468 <optarg@@Base>
  402749:	mov    rbx,QWORD PTR [rax]
  40274c:	mov    rdi,rbx
  40274f:	lea    rsi,[rip+0xc85c]        # 40efb2 <getopt_long_only@@Base+0x20d2>
  402756:	call   402210 <strcmp@plt>
  40275b:	test   eax,eax
  40275d:	je     4027a4 <Mat_VarRead@plt+0x414>
  40275f:	mov    rdi,rbx
  402762:	lea    rsi,[rip+0xc7c9]        # 40ef32 <getopt_long_only@@Base+0x2052>
  402769:	call   402210 <strcmp@plt>
  40276e:	test   eax,eax
  402770:	je     4027b3 <Mat_VarRead@plt+0x423>
  402772:	mov    rdi,rbx
  402775:	lea    rsi,[rip+0xc77b]        # 40eef7 <getopt_long_only@@Base+0x2017>
  40277c:	call   402210 <strcmp@plt>
  402781:	test   eax,eax
  402783:	jne    40c047 <Mat_VarRead@plt+0x9cb7>
  402789:	mov    DWORD PTR [rip+0x12b8d],0x10        # 415320 <getopt_long_only@@Base+0x8440>
  402793:	jmp    40254f <Mat_VarRead@plt+0x1bf>
  402798:	mov    BYTE PTR [rip+0x13cbd],0x1        # 41645c <optopt@@Base+0x24>
  40279f:	jmp    40254f <Mat_VarRead@plt+0x1bf>
  4027a4:	mov    DWORD PTR [rip+0x12b72],0x100        # 415320 <getopt_long_only@@Base+0x8440>
  4027ae:	jmp    40254f <Mat_VarRead@plt+0x1bf>
  4027b3:	mov    DWORD PTR [rip+0x12b63],0x200        # 415320 <getopt_long_only@@Base+0x8440>
  4027bd:	jmp    40254f <Mat_VarRead@plt+0x1bf>
  4027c2:	lea    rax,[rip+0x13c6b]        # 416434 <optind@@Base>
  4027c9:	mov    r15d,DWORD PTR [rax]
  4027cc:	mov    DWORD PTR [rsp+0x3c],0x0
  4027d4:	cmp    r15d,DWORD PTR [rsp+0x118]
  4027dc:	jge    40bfa9 <Mat_VarRead@plt+0x9c19>
  4027e2:	mov    rax,QWORD PTR [rsp+0xb0]
  4027ea:	lea    ecx,[rax-0x6]
  4027ed:	mov    rax,rcx
  4027f0:	mov    QWORD PTR [rsp+0x100],rcx
  4027f8:	movsxd rax,ecx
  4027fb:	mov    QWORD PTR [rsp+0xd48],rax
  402803:	lea    r13,[rsp+0x400]
  40280b:	vpbroadcastq ymm0,QWORD PTR [rip+0xbb5c]        # 40e370 <getopt_long_only@@Base+0x1490>
  402814:	vpbroadcastq ymm1,QWORD PTR [rip+0xbb5b]        # 40e378 <getopt_long_only@@Base+0x1498>
  40281d:	mov    DWORD PTR [rsp+0x3c],0x0
  402825:	vbroadcastf128 ymm2,XMMWORD PTR [rip+0xb8a2]        # 40e0d0 <getopt_long_only@@Base+0x11f0>
  40282e:	vmovaps YMMWORD PTR [rsp+0x1c20],ymm2
  402837:	vbroadcastss xmm2,DWORD PTR [rip+0xbb54]        # 40e394 <getopt_long_only@@Base+0x14b4>
  402840:	vmovaps XMMWORD PTR [rsp+0x10d0],xmm2
  402849:	vmovdqa xmm2,XMMWORD PTR [rip+0xb92f]        # 40e180 <getopt_long_only@@Base+0x12a0>
  402851:	vpackusdw xmm3,xmm2,xmm2
  402856:	vmovdqa XMMWORD PTR [rsp+0x10c0],xmm3
  40285f:	vpackusdw xmm2,xmm2,xmm0
  402864:	vmovdqa XMMWORD PTR [rsp+0x10b0],xmm2
  40286d:	vmovdqa YMMWORD PTR [rsp+0x1080],ymm0
  402876:	vmovdqa YMMWORD PTR [rsp+0x1060],ymm1
  40287f:	jmp    4028e3 <Mat_VarRead@plt+0x553>
  402881:	lea    rdi,[rip+0xfe18]        # 4126a0 <getopt_long_only@@Base+0x57c0>
  402888:	mov    rsi,r14
  40288b:	xor    eax,eax
  40288d:	call   4022b0 <Mat_Critical@plt>
  402892:	mov    eax,0x1
  402897:	add    DWORD PTR [rsp+0x3c],eax
  40289b:	mov    r15,r13
  40289e:	lea    r13,[rsp+0x400]
  4028a6:	cmp    r15d,DWORD PTR [rsp+0x118]
  4028ae:	jl     4028e3 <Mat_VarRead@plt+0x553>
  4028b0:	jmp    40bfa9 <Mat_VarRead@plt+0x9c19>
  4028b5:	mov    rdi,r14
  4028b8:	call   4022a0 <Mat_Close@plt>
  4028bd:	mov    rdi,r15
  4028c0:	call   4022a0 <Mat_Close@plt>
  4028c5:	mov    r15,r13
  4028c8:	lea    r13,[rsp+0x400]
  4028d0:	mov    rbx,QWORD PTR [rsp+0x30]
  4028d5:	cmp    r15d,DWORD PTR [rsp+0x118]
  4028dd:	jge    40bfa9 <Mat_VarRead@plt+0x9c19>
  4028e3:	movsxd r12,r15d
  4028e6:	mov    r14,QWORD PTR [rbx+r12*8]
  4028ea:	mov    rdi,r14
  4028ed:	lea    rsi,[rip+0xd9d1]        # 4102c5 <getopt_long_only@@Base+0x33e5>
  4028f4:	vzeroupper 
  4028f7:	call   402210 <strcmp@plt>
  4028fc:	test   eax,eax
  4028fe:	je     402d70 <Mat_VarRead@plt+0x9e0>
  402904:	mov    rdi,r14
  402907:	lea    rsi,[rip+0xd9fd]        # 41030b <getopt_long_only@@Base+0x342b>
  40290e:	call   402210 <strcmp@plt>
  402913:	test   eax,eax
  402915:	je     402e40 <Mat_VarRead@plt+0xab0>
  40291b:	mov    rdi,r14
  40291e:	lea    rsi,[rip+0xda3d]        # 410362 <getopt_long_only@@Base+0x3482>
  402925:	call   402210 <strcmp@plt>
  40292a:	test   eax,eax
  40292c:	je     402e86 <Mat_VarRead@plt+0xaf6>
  402932:	mov    rdi,r14
  402935:	lea    rsi,[rip+0xe14c]        # 410a88 <getopt_long_only@@Base+0x3ba8>
  40293c:	call   402210 <strcmp@plt>
  402941:	test   eax,eax
  402943:	je     402f1b <Mat_VarRead@plt+0xb8b>
  402949:	mov    rdi,r14
  40294c:	lea    rsi,[rip+0xdc48]        # 41059b <getopt_long_only@@Base+0x36bb>
  402953:	call   402210 <strcmp@plt>
  402958:	test   eax,eax
  40295a:	je     4032fb <Mat_VarRead@plt+0xf6b>
  402960:	mov    rdi,r14
  402963:	lea    rsi,[rip+0xde72]        # 4107dc <getopt_long_only@@Base+0x38fc>
  40296a:	call   402210 <strcmp@plt>
  40296f:	test   eax,eax
  402971:	je     403686 <Mat_VarRead@plt+0x12f6>
  402977:	mov    rdi,r14
  40297a:	lea    rsi,[rip+0xe67e]        # 410fff <getopt_long_only@@Base+0x411f>
  402981:	call   402210 <strcmp@plt>
  402986:	test   eax,eax
  402988:	je     403aa9 <Mat_VarRead@plt+0x1719>
  40298e:	mov    rdi,r14
  402991:	lea    rsi,[rip+0xe7d5]        # 41116d <getopt_long_only@@Base+0x428d>
  402998:	call   402210 <strcmp@plt>
  40299d:	test   eax,eax
  40299f:	je     403b66 <Mat_VarRead@plt+0x17d6>
  4029a5:	mov    rdi,r14
  4029a8:	lea    rsi,[rip+0xe8e7]        # 411296 <getopt_long_only@@Base+0x43b6>
  4029af:	call   402210 <strcmp@plt>
  4029b4:	test   eax,eax
  4029b6:	je     403c31 <Mat_VarRead@plt+0x18a1>
  4029bc:	mov    rdi,r14
  4029bf:	lea    rsi,[rip+0xc6ab]        # 40f071 <getopt_long_only@@Base+0x2191>
  4029c6:	call   402210 <strcmp@plt>
  4029cb:	test   eax,eax
  4029cd:	je     403fec <Mat_VarRead@plt+0x1c5c>
  4029d3:	mov    rdi,r14
  4029d6:	lea    rsi,[rip+0xf846]        # 412223 <getopt_long_only@@Base+0x5343>
  4029dd:	call   402210 <strcmp@plt>
  4029e2:	test   eax,eax
  4029e4:	je     404308 <Mat_VarRead@plt+0x1f78>
  4029ea:	mov    rdi,r14
  4029ed:	lea    rsi,[rip+0xf7a6]        # 41219a <getopt_long_only@@Base+0x52ba>
  4029f4:	call   402210 <strcmp@plt>
  4029f9:	test   eax,eax
  4029fb:	je     4043e9 <Mat_VarRead@plt+0x2059>
  402a01:	mov    rdi,r14
  402a04:	lea    rsi,[rip+0xd9aa]        # 4103b5 <getopt_long_only@@Base+0x34d5>
  402a0b:	call   402210 <strcmp@plt>
  402a10:	test   eax,eax
  402a12:	je     404d3e <Mat_VarRead@plt+0x29ae>
  402a18:	mov    rdi,r14
  402a1b:	lea    rsi,[rip+0xed30]        # 411752 <getopt_long_only@@Base+0x4872>
  402a22:	call   402210 <strcmp@plt>
  402a27:	test   eax,eax
  402a29:	je     404f59 <Mat_VarRead@plt+0x2bc9>
  402a2f:	mov    rdi,r14
  402a32:	lea    rsi,[rip+0xee83]        # 4118bc <getopt_long_only@@Base+0x49dc>
  402a39:	call   402210 <strcmp@plt>
  402a3e:	test   eax,eax
  402a40:	je     405296 <Mat_VarRead@plt+0x2f06>
  402a46:	mov    rdi,r14
  402a49:	lea    rsi,[rip+0xe8ff]        # 41134f <getopt_long_only@@Base+0x446f>
  402a50:	call   402210 <strcmp@plt>
  402a55:	test   eax,eax
  402a57:	je     40538c <Mat_VarRead@plt+0x2ffc>
  402a5d:	mov    rdi,r14
  402a60:	lea    rsi,[rip+0xeb45]        # 4115ac <getopt_long_only@@Base+0x46cc>
  402a67:	call   402210 <strcmp@plt>
  402a6c:	test   eax,eax
  402a6e:	je     405624 <Mat_VarRead@plt+0x3294>
  402a74:	mov    rdi,r14
  402a77:	lea    rsi,[rip+0xefc1]        # 411a3f <getopt_long_only@@Base+0x4b5f>
  402a7e:	call   402210 <strcmp@plt>
  402a83:	test   eax,eax
  402a85:	je     405a4d <Mat_VarRead@plt+0x36bd>
  402a8b:	mov    rdi,r14
  402a8e:	lea    rsi,[rip+0xf465]        # 411efa <getopt_long_only@@Base+0x501a>
  402a95:	call   402210 <strcmp@plt>
  402a9a:	test   eax,eax
  402a9c:	je     405dc6 <Mat_VarRead@plt+0x3a36>
  402aa2:	mov    rdi,r14
  402aa5:	lea    rsi,[rip+0xf1dc]        # 411c88 <getopt_long_only@@Base+0x4da8>
  402aac:	call   402210 <strcmp@plt>
  402ab1:	test   eax,eax
  402ab3:	je     406056 <Mat_VarRead@plt+0x3cc6>
  402ab9:	mov    rdi,r14
  402abc:	lea    rsi,[rip+0xf301]        # 411dc4 <getopt_long_only@@Base+0x4ee4>
  402ac3:	call   402210 <strcmp@plt>
  402ac8:	test   eax,eax
  402aca:	je     406306 <Mat_VarRead@plt+0x3f76>
  402ad0:	mov    rdi,r14
  402ad3:	lea    rsi,[rip+0xf4cd]        # 411fa7 <getopt_long_only@@Base+0x50c7>
  402ada:	call   402210 <strcmp@plt>
  402adf:	test   eax,eax
  402ae1:	je     406bd4 <Mat_VarRead@plt+0x4844>
  402ae7:	mov    rdi,r14
  402aea:	lea    rsi,[rip+0xf569]        # 41205a <getopt_long_only@@Base+0x517a>
  402af1:	call   402210 <strcmp@plt>
  402af6:	test   eax,eax
  402af8:	je     40749a <Mat_VarRead@plt+0x510a>
  402afe:	mov    rdi,r14
  402b01:	lea    rsi,[rip+0xc6ba]        # 40f1c2 <getopt_long_only@@Base+0x22e2>
  402b08:	call   402210 <strcmp@plt>
  402b0d:	test   eax,eax
  402b0f:	je     407725 <Mat_VarRead@plt+0x5395>
  402b15:	mov    rdi,r14
  402b18:	lea    rsi,[rip+0xc6b5]        # 40f1d4 <getopt_long_only@@Base+0x22f4>
  402b1f:	call   402210 <strcmp@plt>
  402b24:	test   eax,eax
  402b26:	je     40782e <Mat_VarRead@plt+0x549e>
  402b2c:	mov    QWORD PTR [rsp+0x50],r15
  402b31:	mov    rdi,r14
  402b34:	lea    rsi,[rip+0xc6ad]        # 40f1e8 <getopt_long_only@@Base+0x2308>
  402b3b:	call   402210 <strcmp@plt>
  402b40:	test   eax,eax
  402b42:	je     407e2f <Mat_VarRead@plt+0x5a9f>
  402b48:	mov    rdi,r14
  402b4b:	lea    rsi,[rip+0xc6af]        # 40f201 <getopt_long_only@@Base+0x2321>
  402b52:	call   402210 <strcmp@plt>
  402b57:	test   eax,eax
  402b59:	je     4084c5 <Mat_VarRead@plt+0x6135>
  402b5f:	mov    rdi,r14
  402b62:	lea    rsi,[rip+0xc6ac]        # 40f215 <getopt_long_only@@Base+0x2335>
  402b69:	call   402210 <strcmp@plt>
  402b6e:	test   eax,eax
  402b70:	je     40870b <Mat_VarRead@plt+0x637b>
  402b76:	mov    rdi,r14
  402b79:	lea    rsi,[rip+0xc6aa]        # 40f22a <getopt_long_only@@Base+0x234a>
  402b80:	call   402210 <strcmp@plt>
  402b85:	test   eax,eax
  402b87:	je     408a7a <Mat_VarRead@plt+0x66ea>
  402b8d:	mov    rdi,r14
  402b90:	lea    rsi,[rip+0xc6a2]        # 40f239 <getopt_long_only@@Base+0x2359>
  402b97:	call   402210 <strcmp@plt>
  402b9c:	test   eax,eax
  402b9e:	je     408cc3 <Mat_VarRead@plt+0x6933>
  402ba4:	mov    rdi,r14
  402ba7:	lea    rsi,[rip+0xc698]        # 40f246 <getopt_long_only@@Base+0x2366>
  402bae:	call   402210 <strcmp@plt>
  402bb3:	test   eax,eax
  402bb5:	je     409059 <Mat_VarRead@plt+0x6cc9>
  402bbb:	mov    rdi,r14
  402bbe:	lea    rsi,[rip+0xc694]        # 40f259 <getopt_long_only@@Base+0x2379>
  402bc5:	call   402210 <strcmp@plt>
  402bca:	test   eax,eax
  402bcc:	je     4093b1 <Mat_VarRead@plt+0x7021>
  402bd2:	mov    rdi,r14
  402bd5:	lea    rsi,[rip+0xf6d0]        # 4122ac <getopt_long_only@@Base+0x53cc>
  402bdc:	call   402210 <strcmp@plt>
  402be1:	test   eax,eax
  402be3:	je     4095e1 <Mat_VarRead@plt+0x7251>
  402be9:	mov    rdi,r14
  402bec:	lea    rsi,[rip+0xd85c]        # 41044f <getopt_long_only@@Base+0x356f>
  402bf3:	call   402210 <strcmp@plt>
  402bf8:	test   eax,eax
  402bfa:	je     409662 <Mat_VarRead@plt+0x72d2>
  402c00:	mov    rdi,r14
  402c03:	lea    rsi,[rip+0xd8c6]        # 4104d0 <getopt_long_only@@Base+0x35f0>
  402c0a:	call   402210 <strcmp@plt>
  402c0f:	test   eax,eax
  402c11:	je     40979d <Mat_VarRead@plt+0x740d>
  402c17:	mov    rdi,r14
  402c1a:	lea    rsi,[rip+0xe0d2]        # 410cf3 <getopt_long_only@@Base+0x3e13>
  402c21:	call   402210 <strcmp@plt>
  402c26:	test   eax,eax
  402c28:	je     409a3a <Mat_VarRead@plt+0x76aa>
  402c2e:	mov    rdi,r14
  402c31:	lea    rsi,[rip+0xe2fb]        # 410f33 <getopt_long_only@@Base+0x4053>
  402c38:	call   402210 <strcmp@plt>
  402c3d:	test   eax,eax
  402c3f:	je     409df7 <Mat_VarRead@plt+0x7a67>
  402c45:	mov    rdi,r14
  402c48:	lea    rsi,[rip+0xf855]        # 4124a4 <getopt_long_only@@Base+0x55c4>
  402c4f:	call   402210 <strcmp@plt>
  402c54:	test   eax,eax
  402c56:	je     40a444 <Mat_VarRead@plt+0x80b4>
  402c5c:	mov    rdi,r14
  402c5f:	lea    rsi,[rip+0xf93d]        # 4125a3 <getopt_long_only@@Base+0x56c3>
  402c66:	call   402210 <strcmp@plt>
  402c6b:	test   eax,eax
  402c6d:	je     40a4f2 <Mat_VarRead@plt+0x8162>
  402c73:	mov    rdi,r14
  402c76:	lea    rsi,[rip+0xc67e]        # 40f2fb <getopt_long_only@@Base+0x241b>
  402c7d:	call   402210 <strcmp@plt>
  402c82:	test   eax,eax
  402c84:	jne    40bfbf <Mat_VarRead@plt+0x9c2f>
  402c8a:	lea    ebx,[r12+0x2]
  402c8f:	mov    rax,QWORD PTR [rsp+0x30]
  402c94:	mov    rdi,QWORD PTR [rax+r12*8+0x8]
  402c99:	xor    esi,esi
  402c9b:	call   402080 <Mat_Open@plt>
  402ca0:	test   rax,rax
  402ca3:	je     40960d <Mat_VarRead@plt+0x727d>
  402ca9:	mov    r12,rax
  402cac:	movsxd rax,ebx
  402caf:	mov    rcx,QWORD PTR [rsp+0x30]
  402cb4:	mov    rsi,QWORD PTR [rcx+rax*8]
  402cb8:	mov    rdi,r12
  402cbb:	call   402390 <Mat_VarRead@plt>
  402cc0:	test   rax,rax
  402cc3:	je     402d55 <Mat_VarRead@plt+0x9c5>
  402cc9:	mov    r14,rax
  402ccc:	cmp    DWORD PTR [rax+0x8],0x3
  402cd0:	jne    402d4d <Mat_VarRead@plt+0x9bd>
  402cd2:	mov    rax,QWORD PTR [r14+0x28]
  402cd6:	cmp    QWORD PTR [rax],0x20
  402cda:	jne    402d4d <Mat_VarRead@plt+0x9bd>
  402cdc:	cmp    QWORD PTR [rax+0x8],0x20
  402ce1:	jne    402d4d <Mat_VarRead@plt+0x9bd>
  402ce3:	cmp    QWORD PTR [rax+0x10],0x20
  402ce8:	jne    402d4d <Mat_VarRead@plt+0x9bd>
  402cea:	mov    DWORD PTR [r14+0x8],0x2
  402cf2:	vmovdqa xmm0,XMMWORD PTR [rip+0xb316]        # 40e010 <getopt_long_only@@Base+0x1130>
  402cfa:	vmovdqu XMMWORD PTR [rax],xmm0
  402cfe:	mov    QWORD PTR [rax+0x10],0x1
  402d06:	mov    rdi,QWORD PTR [rsp+0x28]
  402d0b:	test   rdi,rdi
  402d0e:	lea    rax,[rip+0xc5f6]        # 40f30b <getopt_long_only@@Base+0x242b>
  402d15:	cmove  rdi,rax
  402d19:	mov    edx,DWORD PTR [rip+0x12601]        # 415320 <getopt_long_only@@Base+0x8440>
  402d1f:	mov    QWORD PTR [rsp+0x28],rdi
  402d24:	xor    esi,esi
  402d26:	call   402310 <Mat_CreateVer@plt>
  402d2b:	test   rax,rax
  402d2e:	je     402d4d <Mat_VarRead@plt+0x9bd>
  402d30:	mov    r15,rax
  402d33:	movzx  edx,BYTE PTR [rip+0x13722]        # 41645c <optopt@@Base+0x24>
  402d3a:	mov    rdi,rax
  402d3d:	mov    rsi,r14
  402d40:	call   4020f0 <Mat_VarWrite@plt>
  402d45:	mov    rdi,r15
  402d48:	call   4022a0 <Mat_Close@plt>
  402d4d:	mov    rdi,r14
  402d50:	call   402240 <Mat_VarFree@plt>
  402d55:	mov    r15,QWORD PTR [rsp+0x50]
  402d5a:	add    r15d,0x3
  402d5e:	mov    rdi,r12
  402d61:	call   4022a0 <Mat_Close@plt>
  402d66:	jmp    406b94 <Mat_VarRead@plt+0x4804>
  402d6b:	nop    DWORD PTR [rax+rax*1+0x0]
  402d70:	mov    rdi,QWORD PTR [rsp+0x28]
  402d75:	test   rdi,rdi
  402d78:	lea    rax,[rip+0xd574]        # 4102f3 <getopt_long_only@@Base+0x3413>
  402d7f:	cmove  rdi,rax
  402d83:	mov    edx,DWORD PTR [rip+0x12597]        # 415320 <getopt_long_only@@Base+0x8440>
  402d89:	mov    QWORD PTR [rsp+0x28],rdi
  402d8e:	xor    esi,esi
  402d90:	call   402310 <Mat_CreateVer@plt>
  402d95:	mov    r14,rax
  402d98:	add    r15d,0x2
  402d9c:	mov    r13,r15
  402d9f:	mov    rdi,QWORD PTR [rbx+r12*8+0x8]
  402da4:	xor    esi,esi
  402da6:	call   402080 <Mat_Open@plt>
  402dab:	test   r14,r14
  402dae:	je     40289b <Mat_VarRead@plt+0x50b>
  402db4:	mov    r15,rax
  402db7:	test   rax,rax
  402dba:	je     40289b <Mat_VarRead@plt+0x50b>
  402dc0:	mov    rdi,r15
  402dc3:	call   402070 <Mat_VarReadNext@plt>
  402dc8:	test   rax,rax
  402dcb:	je     4028b5 <Mat_VarRead@plt+0x525>
  402dd1:	mov    rbx,rax
  402dd4:	jmp    402df8 <Mat_VarRead@plt+0xa68>
  402dd6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402de0:	inc    DWORD PTR [rsp+0x3c]
  402de4:	mov    rdi,r15
  402de7:	call   402070 <Mat_VarReadNext@plt>
  402dec:	mov    rbx,rax
  402def:	test   rax,rax
  402df2:	je     4028b5 <Mat_VarRead@plt+0x525>
  402df8:	mov    rdi,rbx
  402dfb:	mov    esi,0x1
  402e00:	call   402360 <Mat_VarDuplicate@plt>
  402e05:	mov    r12,rax
  402e08:	mov    rdi,rbx
  402e0b:	call   402240 <Mat_VarFree@plt>
  402e10:	test   r12,r12
  402e13:	je     402de0 <Mat_VarRead@plt+0xa50>
  402e15:	movzx  edx,BYTE PTR [rip+0x13640]        # 41645c <optopt@@Base+0x24>
  402e1c:	mov    rdi,r14
  402e1f:	mov    rsi,r12
  402e22:	call   4020f0 <Mat_VarWrite@plt>
  402e27:	mov    rdi,r12
  402e2a:	call   402240 <Mat_VarFree@plt>
  402e2f:	jmp    402de4 <Mat_VarRead@plt+0xa54>
  402e31:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402e3b:	nop    DWORD PTR [rax+rax*1+0x0]
  402e40:	mov    r13,r15
  402e43:	mov    rax,QWORD PTR [rsp+0x30]
  402e48:	mov    r15,QWORD PTR [rax+r12*8+0x8]
  402e4d:	mov    r14,QWORD PTR [rax+r12*8+0x10]
  402e52:	mov    rdi,r15
  402e55:	mov    esi,0x1
  402e5a:	call   402080 <Mat_Open@plt>
  402e5f:	test   rax,rax
  402e62:	je     4032d3 <Mat_VarRead@plt+0xf43>
  402e68:	mov    rbx,rax
  402e6b:	mov    rdi,rax
  402e6e:	mov    rsi,r14
  402e71:	call   4022c0 <Mat_VarDelete@plt>
  402e76:	mov    r14d,eax
  402e79:	mov    rdi,rbx
  402e7c:	call   4022a0 <Mat_Close@plt>
  402e81:	jmp    4032ea <Mat_VarRead@plt+0xf5a>
  402e86:	add    r15d,0x2
  402e8a:	mov    r13,r15
  402e8d:	mov    rbx,QWORD PTR [rsp+0x30]
  402e92:	mov    r14,QWORD PTR [rbx+r12*8+0x8]
  402e97:	mov    rdi,r14
  402e9a:	mov    esi,0x1
  402e9f:	call   402080 <Mat_Open@plt>
  402ea4:	test   rax,rax
  402ea7:	je     402881 <Mat_VarRead@plt+0x4f1>
  402ead:	mov    r15,rax
  402eb0:	mov    rdi,rax
  402eb3:	lea    rsi,[rsp+0x10e0]
  402ebb:	call   402250 <Mat_GetDir@plt>
  402ec0:	test   rax,rax
  402ec3:	je     403a4a <Mat_VarRead@plt+0x16ba>
  402ec9:	mov    r12,rax
  402ecc:	mov    rax,QWORD PTR [rsp+0x10e0]
  402ed4:	lea    rcx,[rax+0x1]
  402ed8:	mov    QWORD PTR [rsp+0x1c40],rcx
  402ee0:	test   rax,rax
  402ee3:	je     40365c <Mat_VarRead@plt+0x12cc>
  402ee9:	xor    ebx,ebx
  402eeb:	jmp    402f0b <Mat_VarRead@plt+0xb7b>
  402eed:	nop    DWORD PTR [rax]
  402ef0:	mov    edi,0xa
  402ef5:	call   402060 <putchar@plt>
  402efa:	inc    rbx
  402efd:	cmp    rbx,QWORD PTR [rsp+0x10e0]
  402f05:	jae    40365c <Mat_VarRead@plt+0x12cc>
  402f0b:	mov    rdi,QWORD PTR [r12+rbx*8]
  402f0f:	test   rdi,rdi
  402f12:	je     402ef0 <Mat_VarRead@plt+0xb60>
  402f14:	call   4020c0 <puts@plt>
  402f19:	jmp    402efa <Mat_VarRead@plt+0xb6a>
  402f1b:	mov    r12,r15
  402f1e:	vmovaps xmm0,XMMWORD PTR [rip+0xb2ba]        # 40e1e0 <getopt_long_only@@Base+0x1300>
  402f26:	vmovaps XMMWORD PTR [rsp+0x40],xmm0
  402f2c:	mov    DWORD PTR [rsp+0x140],0x1000100
  402f37:	vmovdqa xmm3,XMMWORD PTR [rsp+0x10c0]
  402f40:	vmovdqa XMMWORD PTR [rsp+0x1e0],xmm3
  402f49:	vmovdqa xmm0,XMMWORD PTR [rip+0xb22f]        # 40e180 <getopt_long_only@@Base+0x12a0>
  402f51:	vmovdqa xmm2,xmm0
  402f55:	vmovdqa XMMWORD PTR [rsp+0x5c0],xmm0
  402f5e:	vmovdqa ymm0,YMMWORD PTR [rsp+0x1c20]
  402f67:	vmovdqu YMMWORD PTR [rsp+0xa00],ymm0
  402f70:	vmovdqa xmm1,XMMWORD PTR [rsp+0x10d0]
  402f79:	vmovdqu XMMWORD PTR [rsp+0x144],xmm1
  402f82:	vmovdqa XMMWORD PTR [rsp+0x5d0],xmm2
  402f8b:	vmovdqu YMMWORD PTR [rsp+0xa20],ymm0
  402f94:	vmovdqa XMMWORD PTR [rsp+0x1f0],xmm3
  402f9d:	vmovdqa XMMWORD PTR [rsp+0x5e0],xmm2
  402fa6:	vmovdqu YMMWORD PTR [rsp+0xa40],ymm0
  402faf:	vmovdqa XMMWORD PTR [rsp+0x5f0],xmm2
  402fb8:	vmovdqu YMMWORD PTR [rsp+0xa60],ymm0
  402fc1:	vmovdqa xmm4,XMMWORD PTR [rsp+0x10b0]
  402fca:	vmovq  QWORD PTR [rsp+0x200],xmm4
  402fd3:	vmovdqa XMMWORD PTR [rsp+0x600],xmm2
  402fdc:	vmovdqu YMMWORD PTR [rsp+0xa80],ymm0
  402fe5:	mov    rdi,QWORD PTR [rsp+0x28]
  402fea:	test   rdi,rdi
  402fed:	mov    DWORD PTR [rsp+0x154],0x1000100
  402ff8:	vmovdqu XMMWORD PTR [rsp+0x208],xmm3
  403001:	vmovdqa XMMWORD PTR [rsp+0x610],xmm2
  40300a:	vmovdqu YMMWORD PTR [rsp+0xaa0],ymm0
  403013:	vmovdqu XMMWORD PTR [rsp+0x158],xmm1
  40301c:	vmovdqa XMMWORD PTR [rsp+0x620],xmm2
  403025:	vmovdqu YMMWORD PTR [rsp+0xac0],ymm0
  40302e:	vmovdqu XMMWORD PTR [rsp+0x218],xmm3
  403037:	vmovdqa XMMWORD PTR [rsp+0x630],xmm2
  403040:	vmovdqu YMMWORD PTR [rsp+0xae0],ymm0
  403049:	vmovdqa XMMWORD PTR [rsp+0x640],xmm2
  403052:	vmovdqu YMMWORD PTR [rsp+0xb00],ymm0
  40305b:	vmovq  QWORD PTR [rsp+0x228],xmm4
  403064:	vmovdqa XMMWORD PTR [rsp+0x650],xmm2
  40306d:	vmovdqu YMMWORD PTR [rsp+0xb20],ymm0
  403076:	vmovq  QWORD PTR [rsp+0x230],xmm4
  40307f:	vmovdqa XMMWORD PTR [rsp+0x660],xmm2
  403088:	vmovdqu YMMWORD PTR [rsp+0xb40],ymm0
  403091:	mov    DWORD PTR [rsp+0x168],0x1000100
  40309c:	mov    DWORD PTR [rsp+0x16c],0x1000100
  4030a7:	vmovq  QWORD PTR [rsp+0x238],xmm4
  4030b0:	vmovdqa XMMWORD PTR [rsp+0x670],xmm2
  4030b9:	vmovdqu YMMWORD PTR [rsp+0xb60],ymm0
  4030c2:	mov    BYTE PTR [rsp+0x170],0x0
  4030ca:	mov    WORD PTR [rsp+0x240],0x0
  4030d4:	mov    DWORD PTR [rsp+0x680],0x0
  4030df:	mov    QWORD PTR [rsp+0xb80],0x0
  4030eb:	mov    BYTE PTR [rsp+0x171],0x1
  4030f3:	mov    WORD PTR [rsp+0x242],0x1
  4030fd:	mov    DWORD PTR [rsp+0x684],0x1
  403108:	mov    QWORD PTR [rsp+0xb88],0x1
  403114:	lea    rax,[rip+0xbeb0]        # 40efcb <getopt_long_only@@Base+0x20eb>
  40311b:	cmove  rdi,rax
  40311f:	mov    edx,DWORD PTR [rip+0x121fb]        # 415320 <getopt_long_only@@Base+0x8440>
  403125:	mov    QWORD PTR [rsp+0x28],rdi
  40312a:	xor    esi,esi
  40312c:	vzeroupper 
  40312f:	call   402310 <Mat_CreateVer@plt>
  403134:	test   rax,rax
  403137:	je     40602d <Mat_VarRead@plt+0x3c9d>
  40313d:	mov    r14,rax
  403140:	mov    DWORD PTR [rsp],0x200
  403147:	lea    rdi,[rip+0xf56c]        # 4126ba <getopt_long_only@@Base+0x57da>
  40314e:	mov    esi,0xf
  403153:	mov    edx,0xd
  403158:	mov    ecx,0x2
  40315d:	lea    r13,[rsp+0x40]
  403162:	mov    r8,r13
  403165:	lea    r9,[rsp+0xa00]
  40316d:	call   4020d0 <Mat_VarCreate@plt>
  403172:	mov    rbx,rax
  403175:	movzx  edx,BYTE PTR [rip+0x132e0]        # 41645c <optopt@@Base+0x24>
  40317c:	mov    rdi,r14
  40317f:	mov    rsi,rax
  403182:	call   4020f0 <Mat_VarWrite@plt>
  403187:	mov    rdi,rbx
  40318a:	call   402240 <Mat_VarFree@plt>
  40318f:	mov    DWORD PTR [rsp],0x200
  403196:	lea    rdi,[rip+0xf520]        # 4126bd <getopt_long_only@@Base+0x57dd>
  40319d:	mov    esi,0xd
  4031a2:	mov    edx,0x6
  4031a7:	mov    ecx,0x2
  4031ac:	mov    r8,r13
  4031af:	lea    r9,[rsp+0x5c0]
  4031b7:	call   4020d0 <Mat_VarCreate@plt>
  4031bc:	mov    rbx,rax
  4031bf:	movzx  edx,BYTE PTR [rip+0x13296]        # 41645c <optopt@@Base+0x24>
  4031c6:	mov    rdi,r14
  4031c9:	mov    rsi,rax
  4031cc:	call   4020f0 <Mat_VarWrite@plt>
  4031d1:	mov    rdi,rbx
  4031d4:	call   402240 <Mat_VarFree@plt>
  4031d9:	mov    DWORD PTR [rsp],0x200
  4031e0:	lea    rdi,[rip+0xf4d9]        # 4126c0 <getopt_long_only@@Base+0x57e0>
  4031e7:	mov    esi,0xb
  4031ec:	mov    edx,0x4
  4031f1:	mov    ecx,0x2
  4031f6:	mov    r8,r13
  4031f9:	lea    r9,[rsp+0x1e0]
  403201:	call   4020d0 <Mat_VarCreate@plt>
  403206:	mov    rbx,rax
  403209:	movzx  edx,BYTE PTR [rip+0x1324c]        # 41645c <optopt@@Base+0x24>
  403210:	mov    rdi,r14
  403213:	mov    rsi,rax
  403216:	call   4020f0 <Mat_VarWrite@plt>
  40321b:	mov    rdi,rbx
  40321e:	call   402240 <Mat_VarFree@plt>
  403223:	mov    DWORD PTR [rsp],0x200
  40322a:	lea    rdi,[rip+0xf492]        # 4126c3 <getopt_long_only@@Base+0x57e3>
  403231:	mov    esi,0x9
  403236:	mov    edx,0x2
  40323b:	mov    ecx,0x2
  403240:	mov    r8,r13
  403243:	lea    r9,[rsp+0x140]
  40324b:	call   4020d0 <Mat_VarCreate@plt>
  403250:	mov    rbx,rax
  403253:	movzx  edx,BYTE PTR [rip+0x13202]        # 41645c <optopt@@Base+0x24>
  40325a:	mov    rdi,r14
  40325d:	mov    rsi,rax
  403260:	call   4020f0 <Mat_VarWrite@plt>
  403265:	mov    rdi,rbx
  403268:	call   402240 <Mat_VarFree@plt>
  40326d:	mov    QWORD PTR [rsp+0x40],0x0
  403276:	mov    DWORD PTR [rsp],0x200
  40327d:	xor    r15d,r15d
  403280:	lea    rdi,[rip+0xf43f]        # 4126c6 <getopt_long_only@@Base+0x57e6>
  403287:	mov    esi,0x9
  40328c:	mov    edx,0x2
  403291:	mov    ecx,0x2
  403296:	mov    r8,r13
  403299:	lea    r13,[rsp+0x400]
  4032a1:	xor    r9d,r9d
  4032a4:	call   4020d0 <Mat_VarCreate@plt>
  4032a9:	mov    rbx,rax
  4032ac:	movzx  edx,BYTE PTR [rip+0x131a9]        # 41645c <optopt@@Base+0x24>
  4032b3:	mov    rdi,r14
  4032b6:	mov    rsi,rax
  4032b9:	call   4020f0 <Mat_VarWrite@plt>
  4032be:	mov    rdi,rbx
  4032c1:	call   402240 <Mat_VarFree@plt>
  4032c6:	mov    rdi,r14
  4032c9:	call   4022a0 <Mat_Close@plt>
  4032ce:	jmp    406033 <Mat_VarRead@plt+0x3ca3>
  4032d3:	lea    rdi,[rip+0xf3c6]        # 4126a0 <getopt_long_only@@Base+0x57c0>
  4032da:	mov    rsi,r15
  4032dd:	xor    eax,eax
  4032df:	call   4022b0 <Mat_Critical@plt>
  4032e4:	mov    r14d,0x1
  4032ea:	add    DWORD PTR [rsp+0x3c],r14d
  4032ef:	mov    r15,r13
  4032f2:	add    r15d,0x3
  4032f6:	jmp    4028c8 <Mat_VarRead@plt+0x538>
  4032fb:	mov    rdi,QWORD PTR [rsp+0x28]
  403300:	test   rdi,rdi
  403303:	lea    rax,[rip+0xbcdb]        # 40efe5 <getopt_long_only@@Base+0x2105>
  40330a:	cmove  rdi,rax
  40330e:	mov    eax,DWORD PTR [rsp+0x11c]
  403315:	mov    DWORD PTR [rsp+0x110],eax
  40331c:	mov    edx,DWORD PTR [rip+0x11ffe]        # 415320 <getopt_long_only@@Base+0x8440>
  403322:	mov    QWORD PTR [rsp+0x28],rdi
  403327:	xor    esi,esi
  403329:	call   402310 <Mat_CreateVer@plt>
  40332e:	mov    r12d,0x1
  403334:	test   rax,rax
  403337:	je     403a40 <Mat_VarRead@plt+0x16b0>
  40333d:	mov    r14,rax
  403340:	xor    eax,eax
  403342:	vmovdqa ymm0,YMMWORD PTR [rip+0xaed6]        # 40e220 <getopt_long_only@@Base+0x1340>
  40334a:	vmovdqa xmm7,XMMWORD PTR [rip+0xad9e]        # 40e0f0 <getopt_long_only@@Base+0x1210>
  403352:	vmovdqa xmm9,xmm7
  403356:	vmovdqa ymm8,YMMWORD PTR [rsp+0x1080]
  40335f:	vmovdqa xmm7,XMMWORD PTR [rip+0xad99]        # 40e100 <getopt_long_only@@Base+0x1220>
  403367:	vmovdqa ymm10,YMMWORD PTR [rsp+0x1060]
  403370:	vmovdqa ymm11,YMMWORD PTR [rip+0xaec8]        # 40e240 <getopt_long_only@@Base+0x1360>
  403378:	vpcmpeqd ymm12,ymm12,ymm12
  40337d:	mov    rbx,QWORD PTR [rsp+0x30]
  403382:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40338c:	nop    DWORD PTR [rax+0x0]
  403390:	vpsubq ymm1,ymm0,ymm12
  403395:	vpermd ymm2,ymm11,ymm1
  40339a:	vcvtdq2pd ymm3,xmm2
  40339e:	vmovups YMMWORD PTR [rsp+rax*8+0x860],ymm3
  4033a7:	vcvtdq2ps xmm3,xmm2
  4033ab:	vmovaps XMMWORD PTR [rsp+rax*4+0xc80],xmm3
  4033b4:	vmovdqa XMMWORD PTR [rsp+rax*4+0x5c0],xmm2
  4033bd:	vmovdqa XMMWORD PTR [rsp+rax*4+0xba0],xmm2
  4033c6:	vpshufb xmm3,xmm2,xmm9
  4033cb:	vpaddq ymm4,ymm0,ymm8
  4033d0:	vpermd ymm5,ymm11,ymm4
  4033d5:	vpshufb xmm6,xmm5,xmm9
  4033da:	vpunpcklqdq xmm3,xmm3,xmm6
  4033de:	vmovdqa XMMWORD PTR [rsp+rax*2+0x1e0],xmm3
  4033e7:	vmovdqa XMMWORD PTR [rsp+rax*2+0x380],xmm3
  4033f0:	vpshufb xmm2,xmm2,xmm7
  4033f5:	vmovd  DWORD PTR [rsp+rax*1+0x140],xmm2
  4033fe:	vmovd  DWORD PTR [rsp+rax*1+0x1a0],xmm2
  403407:	vmovdqu YMMWORD PTR [rsp+rax*8+0xa00],ymm1
  403410:	vmovdqu YMMWORD PTR [rsp+rax*8+0xde0],ymm1
  403419:	vcvtdq2pd ymm1,xmm5
  40341d:	vmovups YMMWORD PTR [rsp+rax*8+0x880],ymm1
  403426:	vcvtdq2ps xmm1,xmm5
  40342a:	vmovaps XMMWORD PTR [rsp+rax*4+0xc90],xmm1
  403433:	vmovdqa XMMWORD PTR [rsp+rax*4+0x5d0],xmm5
  40343c:	vmovdqa XMMWORD PTR [rsp+rax*4+0xbb0],xmm5
  403445:	vpshufb xmm1,xmm5,xmm7
  40344a:	vmovd  DWORD PTR [rsp+rax*1+0x144],xmm1
  403453:	vmovd  DWORD PTR [rsp+rax*1+0x1a4],xmm1
  40345c:	vmovdqu YMMWORD PTR [rsp+rax*8+0xa20],ymm4
  403465:	vmovdqu YMMWORD PTR [rsp+rax*8+0xe00],ymm4
  40346e:	add    rax,0x8
  403472:	vpaddq ymm0,ymm0,ymm10
  403477:	cmp    rax,0x30
  40347b:	jne    403390 <Mat_VarRead@plt+0x1000>
  403481:	movabs rax,0x4048800000000000
  40348b:	mov    QWORD PTR [rsp+0x9e0],rax
  403493:	movabs rax,0x4248000042440000
  40349d:	mov    QWORD PTR [rsp+0xd40],rax
  4034a5:	movabs rax,0x3200000031
  4034af:	mov    QWORD PTR [rsp+0x680],rax
  4034b7:	mov    QWORD PTR [rsp+0xc60],rax
  4034bf:	mov    DWORD PTR [rsp+0x240],0x320031
  4034ca:	mov    DWORD PTR [rsp+0x3e0],0x320031
  4034d5:	mov    WORD PTR [rsp+0x170],0x3231
  4034df:	mov    WORD PTR [rsp+0x1d0],0x3231
  4034e9:	mov    QWORD PTR [rsp+0xb80],0x31
  4034f5:	mov    QWORD PTR [rsp+0xf60],0x31
  403501:	movabs rax,0x4049000000000000
  40350b:	mov    QWORD PTR [rsp+0x9e8],rax
  403513:	mov    QWORD PTR [rsp+0xb88],0x32
  40351f:	mov    QWORD PTR [rsp+0xf68],0x32
  40352b:	mov    eax,DWORD PTR [rsp+0x110]
  403532:	test   eax,eax
  403534:	je     403bd3 <Mat_VarRead@plt+0x1843>
  40353a:	mov    QWORD PTR [rsp+0x138],r14
  403542:	mov    QWORD PTR [rsp+0x50],r15
  403547:	cmp    eax,0x2
  40354a:	je     403d02 <Mat_VarRead@plt+0x1972>
  403550:	cmp    eax,0x1
  403553:	jne    403fbd <Mat_VarRead@plt+0x1c2d>
  403559:	vmovaps xmm0,XMMWORD PTR [rip+0xac0f]        # 40e170 <getopt_long_only@@Base+0x1290>
  403561:	vmovaps XMMWORD PTR [rsp+0xc0],xmm0
  40356a:	mov    r8d,0x1
  403570:	lea    r9,[rsp+0x860]
  403578:	lea    r10,[rsp+0xc80]
  403580:	lea    r11,[rsp+0x5c0]
  403588:	lea    r14,[rsp+0xba0]
  403590:	lea    r12,[rsp+0x1e0]
  403598:	lea    r13,[rsp+0x380]
  4035a0:	lea    rcx,[rsp+0x140]
  4035a8:	lea    rdx,[rsp+0x1a0]
  4035b0:	lea    rsi,[rsp+0xa00]
  4035b8:	lea    rdi,[rsp+0xde0]
  4035c0:	xor    r15d,r15d
  4035c3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4035cd:	nop    DWORD PTR [rax]
  4035d0:	inc    r15
  4035d3:	xor    ebx,ebx
  4035d5:	mov    rax,r8
  4035d8:	nop    DWORD PTR [rax+rax*1+0x0]
  4035e0:	vcvtsi2sd xmm0,xmm13,eax
  4035e4:	vmovsd QWORD PTR [r9+rbx*8],xmm0
  4035ea:	vcvtsi2ss xmm0,xmm13,eax
  4035ee:	vmovd  DWORD PTR [r10+rbx*4],xmm0
  4035f4:	mov    DWORD PTR [r11+rbx*4],eax
  4035f8:	mov    DWORD PTR [r14+rbx*4],eax
  4035fc:	mov    WORD PTR [r12+rbx*2],ax
  403601:	mov    WORD PTR [r13+rbx*2+0x0],ax
  403607:	mov    BYTE PTR [rcx+rbx*1],al
  40360a:	mov    BYTE PTR [rdx+rbx*1],al
  40360d:	mov    QWORD PTR [rsi+rbx*8],rax
  403611:	mov    QWORD PTR [rdi+rbx*8],rax
  403615:	add    rax,0x5
  403619:	inc    rbx
  40361c:	cmp    rbx,0xa
  403620:	jne    4035e0 <Mat_VarRead@plt+0x1250>
  403622:	inc    r8
  403625:	add    rdi,0x50
  403629:	add    rsi,0x50
  40362d:	add    rdx,0xa
  403631:	add    rcx,0xa
  403635:	add    r13,0x14
  403639:	add    r12,0x14
  40363d:	add    r14,0x28
  403641:	add    r11,0x28
  403645:	add    r10,0x28
  403649:	add    r9,0x50
  40364d:	cmp    r15,0x5
  403651:	jne    4035d0 <Mat_VarRead@plt+0x1240>
  403657:	jmp    403d13 <Mat_VarRead@plt+0x1983>
  40365c:	mov    rdi,r15
  40365f:	lea    rsi,[rsp+0x1c40]
  403667:	call   402250 <Mat_GetDir@plt>
  40366c:	mov    rax,QWORD PTR [rsp+0x10e0]
  403674:	xor    ebx,ebx
  403676:	cmp    rax,QWORD PTR [rsp+0x1c40]
  40367e:	setne  bl
  403681:	jmp    403a4f <Mat_VarRead@plt+0x16bf>
  403686:	mov    rdi,QWORD PTR [rsp+0x28]
  40368b:	test   rdi,rdi
  40368e:	lea    rax,[rip+0xb96a]        # 40efff <getopt_long_only@@Base+0x211f>
  403695:	cmove  rdi,rax
  403699:	mov    ebx,DWORD PTR [rsp+0x11c]
  4036a0:	vpxor  xmm0,xmm0,xmm0
  4036a4:	vmovdqa XMMWORD PTR [rsp+0x60],xmm0
  4036aa:	mov    edx,DWORD PTR [rip+0x11c70]        # 415320 <getopt_long_only@@Base+0x8440>
  4036b0:	mov    QWORD PTR [rsp+0x28],rdi
  4036b5:	xor    esi,esi
  4036b7:	call   402310 <Mat_CreateVer@plt>
  4036bc:	mov    r12d,0x1
  4036c2:	test   rax,rax
  4036c5:	je     403a40 <Mat_VarRead@plt+0x16b0>
  4036cb:	mov    r14,rax
  4036ce:	mov    DWORD PTR [rsp+0xbc],ebx
  4036d5:	xor    eax,eax
  4036d7:	vmovdqa ymm0,YMMWORD PTR [rip+0xab41]        # 40e220 <getopt_long_only@@Base+0x1340>
  4036df:	vmovdqa xmm1,XMMWORD PTR [rip+0xa9f9]        # 40e0e0 <getopt_long_only@@Base+0x1200>
  4036e7:	vmovdqa xmm8,XMMWORD PTR [rip+0xaa01]        # 40e0f0 <getopt_long_only@@Base+0x1210>
  4036ef:	vmovdqa xmm9,XMMWORD PTR [rip+0xaa09]        # 40e100 <getopt_long_only@@Base+0x1220>
  4036f7:	vmovdqa ymm10,YMMWORD PTR [rip+0xab41]        # 40e240 <getopt_long_only@@Base+0x1360>
  4036ff:	vpcmpeqd ymm11,ymm11,ymm11
  403704:	mov    rbx,QWORD PTR [rsp+0x30]
  403709:	nop    DWORD PTR [rax+0x0]
  403710:	vpsubq ymm2,ymm0,ymm11
  403715:	vpermd ymm3,ymm10,ymm2
  40371a:	vcvtdq2pd ymm4,xmm3
  40371e:	vmovups YMMWORD PTR [rsp+rax*8+0x860],ymm4
  403727:	vpbroadcastq ymm4,QWORD PTR [rip+0xac30]        # 40e360 <getopt_long_only@@Base+0x1480>
  403730:	vpaddq ymm4,ymm0,ymm4
  403734:	vpbroadcastd xmm5,DWORD PTR [rip+0xac4b]        # 40e388 <getopt_long_only@@Base+0x14a8>
  40373d:	vpaddd xmm5,xmm1,xmm5
  403741:	vpermd ymm6,ymm10,ymm4
  403746:	vcvtdq2pd ymm7,xmm6
  40374a:	vmovups YMMWORD PTR [rsp+rax*8+0x10e0],ymm7
  403753:	vcvtdq2ps xmm7,xmm3
  403757:	vmovaps XMMWORD PTR [rsp+rax*4+0xc80],xmm7
  403760:	vcvtdq2ps xmm7,xmm6
  403764:	vmovaps XMMWORD PTR [rsp+rax*4+0xf80],xmm7
  40376d:	vmovdqa XMMWORD PTR [rsp+rax*4+0x5c0],xmm3
  403776:	vmovdqa XMMWORD PTR [rsp+rax*4+0xba0],xmm6
  40377f:	vmovdqa XMMWORD PTR [rsp+rax*4+0x6a0],xmm3
  403788:	vmovdqa XMMWORD PTR [rsp+rax*4+0x780],xmm6
  403791:	vpshufb xmm6,xmm3,xmm8
  403796:	vmovq  QWORD PTR [rsp+rax*2+0x1e0],xmm6
  40379f:	vpshufb xmm7,xmm5,xmm8
  4037a4:	vmovq  QWORD PTR [rsp+rax*2+0x380],xmm7
  4037ad:	vmovq  QWORD PTR [rsp+rax*2+0x300],xmm6
  4037b6:	vmovq  QWORD PTR [rsp+rax*2+0xd60],xmm7
  4037bf:	vpshufb xmm3,xmm3,xmm9
  4037c4:	vmovd  DWORD PTR [rsp+rax*1+0x140],xmm3
  4037cd:	vpshufb xmm5,xmm5,xmm9
  4037d2:	vmovd  DWORD PTR [rsp+rax*1+0x1a0],xmm5
  4037db:	vmovd  DWORD PTR [rsp+rax*1+0x260],xmm3
  4037e4:	vmovd  DWORD PTR [rsp+rax*1+0x2a0],xmm5
  4037ed:	vmovdqu YMMWORD PTR [rsp+rax*8+0xa00],ymm2
  4037f6:	vmovdqu YMMWORD PTR [rsp+rax*8+0xde0],ymm4
  4037ff:	vmovdqu YMMWORD PTR [rsp+rax*8+0x1c40],ymm2
  403808:	vmovdqu YMMWORD PTR [rsp+rax*8+0x400],ymm4
  403811:	add    rax,0x4
  403815:	vpbroadcastq ymm2,QWORD PTR [rip+0xab4a]        # 40e368 <getopt_long_only@@Base+0x1488>
  40381e:	vpaddq ymm0,ymm0,ymm2
  403822:	vpbroadcastd xmm2,DWORD PTR [rip+0xab61]        # 40e38c <getopt_long_only@@Base+0x14ac>
  40382b:	vpaddd xmm1,xmm1,xmm2
  40382f:	cmp    rax,0x30
  403833:	jne    403710 <Mat_VarRead@plt+0x1380>
  403839:	movabs rax,0x4048800000000000
  403843:	mov    QWORD PTR [rsp+0x9e0],rax
  40384b:	movabs rax,0x4058c00000000000
  403855:	mov    QWORD PTR [rsp+0x1260],rax
  40385d:	mov    DWORD PTR [rsp+0xd40],0x42440000
  403868:	mov    DWORD PTR [rsp+0x1040],0x42c60000
  403873:	mov    DWORD PTR [rsp+0x680],0x31
  40387e:	mov    DWORD PTR [rsp+0xc60],0x63
  403889:	mov    DWORD PTR [rsp+0x760],0x31
  403894:	mov    DWORD PTR [rsp+0x840],0x63
  40389f:	mov    WORD PTR [rsp+0x240],0x31
  4038a9:	mov    WORD PTR [rsp+0x3e0],0x63
  4038b3:	mov    WORD PTR [rsp+0x360],0x31
  4038bd:	mov    WORD PTR [rsp+0xdc0],0x63
  4038c7:	mov    BYTE PTR [rsp+0x170],0x31
  4038cf:	mov    BYTE PTR [rsp+0x1d0],0x63
  4038d7:	mov    BYTE PTR [rsp+0x290],0x31
  4038df:	mov    BYTE PTR [rsp+0x2d0],0x63
  4038e7:	mov    QWORD PTR [rsp+0xb80],0x31
  4038f3:	mov    QWORD PTR [rsp+0xf60],0x63
  4038ff:	mov    QWORD PTR [rsp+0x1dc0],0x31
  40390b:	mov    QWORD PTR [rsp+0x580],0x63
  403917:	movabs rax,0x4049000000000000
  403921:	mov    QWORD PTR [rsp+0x9e8],rax
  403929:	movabs rax,0x4059000000000000
  403933:	mov    QWORD PTR [rsp+0x1268],rax
  40393b:	mov    DWORD PTR [rsp+0xd44],0x42480000
  403946:	mov    DWORD PTR [rsp+0x1044],0x42c80000
  403951:	mov    DWORD PTR [rsp+0x684],0x32
  40395c:	mov    DWORD PTR [rsp+0xc64],0x64
  403967:	mov    DWORD PTR [rsp+0x764],0x32
  403972:	mov    DWORD PTR [rsp+0x844],0x64
  40397d:	mov    WORD PTR [rsp+0x242],0x32
  403987:	mov    WORD PTR [rsp+0x3e2],0x64
  403991:	mov    WORD PTR [rsp+0x362],0x32
  40399b:	mov    WORD PTR [rsp+0xdc2],0x64
  4039a5:	mov    BYTE PTR [rsp+0x171],0x32
  4039ad:	mov    BYTE PTR [rsp+0x1d1],0x64
  4039b5:	mov    BYTE PTR [rsp+0x291],0x32
  4039bd:	mov    BYTE PTR [rsp+0x2d1],0x64
  4039c5:	mov    QWORD PTR [rsp+0xb88],0x32
  4039d1:	mov    QWORD PTR [rsp+0xf68],0x64
  4039dd:	mov    QWORD PTR [rsp+0x1dc8],0x32
  4039e9:	mov    QWORD PTR [rsp+0x588],0x64
  4039f5:	mov    rax,QWORD PTR [rsp+0x100]
  4039fd:	cmp    eax,0x9
  403a00:	ja     404f33 <Mat_VarRead@plt+0x2ba3>
  403a06:	lea    rcx,[rip+0xab9b]        # 40e5a8 <getopt_long_only@@Base+0x16c8>
  403a0d:	movsxd rax,DWORD PTR [rcx+rax*4]
  403a11:	add    rax,rcx
  403a14:	jmp    rax
  403a16:	lea    rax,[rsp+0x860]
  403a1e:	mov    QWORD PTR [rsp+0x60],rax
  403a23:	lea    rax,[rsp+0x10e0]
  403a2b:	mov    QWORD PTR [rsp+0x68],rax
  403a30:	mov    DWORD PTR [rsp+0xb8],0x9
  403a3b:	jmp    4046c9 <Mat_VarRead@plt+0x2339>
  403a40:	mov    rbx,QWORD PTR [rsp+0x30]
  403a45:	jmp    404f3e <Mat_VarRead@plt+0x2bae>
  403a4a:	mov    ebx,0x1
  403a4f:	mov    rdi,r15
  403a52:	call   4020e0 <Mat_GetFilename@plt>
  403a57:	mov    rdi,r14
  403a5a:	mov    rsi,rax
  403a5d:	call   402210 <strcmp@plt>
  403a62:	cmp    eax,0x1
  403a65:	sbb    ebx,0xffffffff
  403a68:	mov    rdi,r15
  403a6b:	call   402100 <Mat_GetVersion@plt>
  403a70:	cmp    eax,0x1
  403a73:	adc    ebx,0x0
  403a76:	mov    rdi,r15
  403a79:	call   4022f0 <Mat_GetHeader@plt>
  403a7e:	test   rax,rax
  403a81:	je     403a98 <Mat_VarRead@plt+0x1708>
  403a83:	mov    rdi,rax
  403a86:	call   402120 <strlen@plt>
  403a8b:	xor    ecx,ecx
  403a8d:	cmp    rax,0x80
  403a93:	seta   cl
  403a96:	add    ebx,ecx
  403a98:	mov    rdi,r15
  403a9b:	call   4022a0 <Mat_Close@plt>
  403aa0:	add    DWORD PTR [rsp+0x3c],ebx
  403aa4:	jmp    4028c5 <Mat_VarRead@plt+0x535>
  403aa9:	mov    rdi,QWORD PTR [rsp+0x28]
  403aae:	test   rdi,rdi
  403ab1:	lea    rax,[rip+0xb569]        # 40f021 <getopt_long_only@@Base+0x2141>
  403ab8:	cmove  rdi,rax
  403abc:	vmovdqa xmm0,XMMWORD PTR [rip+0xa6dc]        # 40e1a0 <getopt_long_only@@Base+0x12c0>
  403ac4:	vmovdqa XMMWORD PTR [rsp+0x40],xmm0
  403aca:	mov    ebx,0x1
  403acf:	cmp    DWORD PTR [rsp+0x100],0x9
  403ad7:	mov    QWORD PTR [rsp+0x28],rdi
  403adc:	ja     403b5a <Mat_VarRead@plt+0x17ca>
  403ade:	mov    edx,DWORD PTR [rip+0x1183c]        # 415320 <getopt_long_only@@Base+0x8440>
  403ae4:	xor    esi,esi
  403ae6:	call   402310 <Mat_CreateVer@plt>
  403aeb:	test   rax,rax
  403aee:	je     403b5a <Mat_VarRead@plt+0x17ca>
  403af0:	mov    r14,rax
  403af3:	mov    rax,QWORD PTR [rsp+0xd48]
  403afb:	lea    rcx,[rip+0xb376]        # 40ee78 <getopt_long_only@@Base+0x1f98>
  403b02:	mov    edx,DWORD PTR [rcx+rax*4]
  403b05:	mov    DWORD PTR [rsp],0x0
  403b0c:	lea    rdi,[rip+0xebb6]        # 4126c9 <getopt_long_only@@Base+0x57e9>
  403b13:	mov    rsi,QWORD PTR [rsp+0xb0]
  403b1b:	mov    ecx,0x2
  403b20:	lea    r8,[rsp+0x40]
  403b25:	xor    r9d,r9d
  403b28:	call   4020d0 <Mat_VarCreate@plt>
  403b2d:	mov    r12,r15
  403b30:	mov    r15,rax
  403b33:	movzx  edx,BYTE PTR [rip+0x12922]        # 41645c <optopt@@Base+0x24>
  403b3a:	mov    rdi,r14
  403b3d:	mov    rsi,rax
  403b40:	call   4020f0 <Mat_VarWrite@plt>
  403b45:	mov    ebx,eax
  403b47:	mov    rdi,r15
  403b4a:	mov    r15,r12
  403b4d:	call   402240 <Mat_VarFree@plt>
  403b52:	mov    rdi,r14
  403b55:	call   4022a0 <Mat_Close@plt>
  403b5a:	inc    r15d
  403b5d:	add    DWORD PTR [rsp+0x3c],ebx
  403b61:	jmp    4028d0 <Mat_VarRead@plt+0x540>
  403b66:	mov    rdi,QWORD PTR [rsp+0x28]
  403b6b:	test   rdi,rdi
  403b6e:	lea    rax,[rip+0xb4cc]        # 40f041 <getopt_long_only@@Base+0x2161>
  403b75:	cmove  rdi,rax
  403b79:	mov    edx,DWORD PTR [rip+0x117a1]        # 415320 <getopt_long_only@@Base+0x8440>
  403b7f:	mov    QWORD PTR [rsp+0x28],rdi
  403b84:	xor    esi,esi
  403b86:	call   402310 <Mat_CreateVer@plt>
  403b8b:	test   rax,rax
  403b8e:	je     403cdc <Mat_VarRead@plt+0x194c>
  403b94:	mov    rbx,rax
  403b97:	vmovdqa xmm0,XMMWORD PTR [rip+0xa581]        # 40e120 <getopt_long_only@@Base+0x1240>
  403b9f:	vmovdqa XMMWORD PTR [rsp+0x40],xmm0
  403ba5:	mov    DWORD PTR [rsp],0x1
  403bac:	lea    rdi,[rip+0xc522]        # 4100d5 <getopt_long_only@@Base+0x31f5>
  403bb3:	mov    esi,0x4
  403bb8:	mov    edx,0x2
  403bbd:	mov    ecx,0x2
  403bc2:	lea    r8,[rsp+0x40]
  403bc7:	lea    r9,[rip+0xeb01]        # 4126cf <getopt_long_only@@Base+0x57ef>
  403bce:	jmp    403ca7 <Mat_VarRead@plt+0x1917>
  403bd3:	vmovdqa xmm0,XMMWORD PTR [rip+0xa605]        # 40e1e0 <getopt_long_only@@Base+0x1300>
  403bdb:	vmovdqa XMMWORD PTR [rsp+0x40],xmm0
  403be1:	mov    rax,QWORD PTR [rsp+0x100]
  403be9:	cmp    eax,0x9
  403bec:	ja     404f33 <Mat_VarRead@plt+0x2ba3>
  403bf2:	lea    rcx,[rip+0xaa27]        # 40e620 <getopt_long_only@@Base+0x1740>
  403bf9:	movsxd rax,DWORD PTR [rcx+rax*4]
  403bfd:	add    rax,rcx
  403c00:	jmp    rax
  403c02:	mov    DWORD PTR [rsp],0x0
  403c09:	lea    rdi,[rip+0xc4c5]        # 4100d5 <getopt_long_only@@Base+0x31f5>
  403c10:	mov    esi,0x6
  403c15:	mov    edx,0x9
  403c1a:	mov    ecx,0x2
  403c1f:	lea    r8,[rsp+0x40]
  403c24:	lea    r9,[rsp+0x860]
  403c2c:	jmp    404f06 <Mat_VarRead@plt+0x2b76>
  403c31:	mov    rdi,QWORD PTR [rsp+0x28]
  403c36:	test   rdi,rdi
  403c39:	lea    rax,[rip+0xb415]        # 40f055 <getopt_long_only@@Base+0x2175>
  403c40:	cmove  rdi,rax
  403c44:	vmovdqa xmm0,XMMWORD PTR [rip+0xa564]        # 40e1b0 <getopt_long_only@@Base+0x12d0>
  403c4c:	vmovdqa XMMWORD PTR [rsp+0x10e0],xmm0
  403c55:	mov    edx,DWORD PTR [rip+0x116c5]        # 415320 <getopt_long_only@@Base+0x8440>
  403c5b:	mov    QWORD PTR [rsp+0x28],rdi
  403c60:	xor    esi,esi
  403c62:	call   402310 <Mat_CreateVer@plt>
  403c67:	test   rax,rax
  403c6a:	je     403cdc <Mat_VarRead@plt+0x194c>
  403c6c:	mov    rbx,rax
  403c6f:	vmovdqa xmm0,XMMWORD PTR [rip+0xa4d9]        # 40e150 <getopt_long_only@@Base+0x1270>
  403c77:	vmovdqa XMMWORD PTR [rsp+0x40],xmm0
  403c7d:	mov    DWORD PTR [rsp],0x1
  403c84:	lea    rdi,[rip+0xc44a]        # 4100d5 <getopt_long_only@@Base+0x31f5>
  403c8b:	mov    esi,0x4
  403c90:	mov    edx,0x11
  403c95:	mov    ecx,0x2
  403c9a:	lea    r8,[rsp+0x40]
  403c9f:	lea    r9,[rsp+0x10e0]
  403ca7:	call   4020d0 <Mat_VarCreate@plt>
  403cac:	mov    r12,r15
  403caf:	mov    r15,rax
  403cb2:	movzx  edx,BYTE PTR [rip+0x127a3]        # 41645c <optopt@@Base+0x24>
  403cb9:	mov    rdi,rbx
  403cbc:	mov    rsi,rax
  403cbf:	call   4020f0 <Mat_VarWrite@plt>
  403cc4:	mov    r14d,eax
  403cc7:	mov    rdi,r15
  403cca:	mov    r15,r12
  403ccd:	call   402240 <Mat_VarFree@plt>
  403cd2:	mov    rdi,rbx
  403cd5:	call   4022a0 <Mat_Close@plt>
  403cda:	jmp    403ce2 <Mat_VarRead@plt+0x1952>
  403cdc:	mov    r14d,0x1
  403ce2:	mov    rbx,QWORD PTR [rsp+0x30]
  403ce7:	inc    r15d
  403cea:	add    DWORD PTR [rsp+0x3c],r14d
  403cef:	cmp    r15d,DWORD PTR [rsp+0x118]
  403cf7:	jl     4028e3 <Mat_VarRead@plt+0x553>
  403cfd:	jmp    40bfa9 <Mat_VarRead@plt+0x9c19>
  403d02:	vmovdqa xmm0,XMMWORD PTR [rip+0xa456]        # 40e160 <getopt_long_only@@Base+0x1280>
  403d0a:	vmovdqa XMMWORD PTR [rsp+0xc0],xmm0
  403d13:	lea    rax,[rsp+0x1a0]
  403d1b:	mov    r10,rax
  403d1e:	lea    rax,[rsp+0x140]
  403d26:	mov    r9,rax
  403d29:	lea    r11,[rsp+0x380]
  403d31:	lea    r12,[rsp+0x1e0]
  403d39:	lea    r15,[rsp+0xba0]
  403d41:	lea    rbx,[rsp+0x5c0]
  403d49:	lea    r14,[rsp+0xc80]
  403d51:	xor    r13d,r13d
  403d54:	jmp    403df9 <Mat_VarRead@plt+0x1a69>
  403d59:	mov    DWORD PTR [rsp],0x0
  403d60:	lea    rdi,[rip+0xc36e]        # 4100d5 <getopt_long_only@@Base+0x31f5>
  403d67:	mov    esi,0x8
  403d6c:	mov    edx,0x1
  403d71:	mov    ecx,0x2
  403d76:	lea    r8,[rsp+0xc0]
  403d7e:	vzeroupper 
  403d81:	call   4020d0 <Mat_VarCreate@plt>
  403d86:	mov    r12,rax
  403d89:	movzx  edx,BYTE PTR [rip+0x126cc]        # 41645c <optopt@@Base+0x24>
  403d90:	mov    rdi,QWORD PTR [rsp+0x138]
  403d98:	mov    rsi,rax
  403d9b:	mov    ecx,DWORD PTR [rsp+0x110]
  403da2:	call   402140 <Mat_VarWriteAppend@plt>
  403da7:	mov    rdi,r12
  403daa:	call   402240 <Mat_VarFree@plt>
  403daf:	add    r13,0x50
  403db3:	add    r14,0x28
  403db7:	add    rbx,0x28
  403dbb:	add    r15,0x28
  403dbf:	mov    r12,QWORD PTR [rsp+0x108]
  403dc7:	add    r12,0x14
  403dcb:	mov    r11,QWORD PTR [rsp+0xf8]
  403dd3:	add    r11,0x14
  403dd7:	mov    r9,QWORD PTR [rsp+0xa8]
  403ddf:	add    r9,0xa
  403de3:	mov    r10,QWORD PTR [rsp+0x58]
  403de8:	add    r10,0xa
  403dec:	cmp    r13,0x190
  403df3:	je     403fca <Mat_VarRead@plt+0x1c3a>
  403df9:	mov    rax,QWORD PTR [rsp+0x100]
  403e01:	cmp    eax,0x9
  403e04:	ja     403fbd <Mat_VarRead@plt+0x1c2d>
  403e0a:	lea    rcx,[rip+0xa7e7]        # 40e5f8 <getopt_long_only@@Base+0x1718>
  403e11:	movsxd rax,DWORD PTR [rcx+rax*4]
  403e15:	add    rax,rcx
  403e18:	mov    QWORD PTR [rsp+0x58],r10
  403e1d:	mov    QWORD PTR [rsp+0xa8],r9
  403e25:	mov    QWORD PTR [rsp+0xf8],r11
  403e2d:	mov    QWORD PTR [rsp+0x108],r12
  403e35:	jmp    rax
  403e37:	lea    r9,[rsp+r13*1]
  403e3b:	add    r9,0x860
  403e42:	mov    DWORD PTR [rsp],0x0
  403e49:	lea    rdi,[rip+0xc285]        # 4100d5 <getopt_long_only@@Base+0x31f5>
  403e50:	mov    esi,0x6
  403e55:	mov    edx,0x9
  403e5a:	jmp    403d71 <Mat_VarRead@plt+0x19e1>
  403e5f:	mov    DWORD PTR [rsp],0x0
  403e66:	lea    rdi,[rip+0xc268]        # 4100d5 <getopt_long_only@@Base+0x31f5>
  403e6d:	mov    esi,0xa
  403e72:	mov    edx,0x3
  403e77:	mov    ecx,0x2
  403e7c:	lea    r8,[rsp+0xc0]
  403e84:	mov    r9,r12
  403e87:	jmp    403d7e <Mat_VarRead@plt+0x19ee>
  403e8c:	lea    r9,[rsp+r13*1]
  403e90:	add    r9,0xde0
  403e97:	mov    DWORD PTR [rsp],0x0
  403e9e:	lea    rdi,[rip+0xc230]        # 4100d5 <getopt_long_only@@Base+0x31f5>
  403ea5:	mov    esi,0xf
  403eaa:	mov    edx,0xd
  403eaf:	jmp    403d71 <Mat_VarRead@plt+0x19e1>
  403eb4:	mov    DWORD PTR [rsp],0x0
  403ebb:	lea    rdi,[rip+0xc213]        # 4100d5 <getopt_long_only@@Base+0x31f5>
  403ec2:	mov    esi,0x7
  403ec7:	mov    edx,0x7
  403ecc:	mov    ecx,0x2
  403ed1:	lea    r8,[rsp+0xc0]
  403ed9:	mov    r9,r14
  403edc:	jmp    403d7e <Mat_VarRead@plt+0x19ee>
  403ee1:	mov    DWORD PTR [rsp],0x0
  403ee8:	lea    rdi,[rip+0xc1e6]        # 4100d5 <getopt_long_only@@Base+0x31f5>
  403eef:	mov    esi,0x9
  403ef4:	mov    edx,0x2
  403ef9:	mov    ecx,0x2
  403efe:	lea    r8,[rsp+0xc0]
  403f06:	mov    r9,r10
  403f09:	jmp    403d7e <Mat_VarRead@plt+0x19ee>
  403f0e:	mov    DWORD PTR [rsp],0x0
  403f15:	lea    rdi,[rip+0xc1b9]        # 4100d5 <getopt_long_only@@Base+0x31f5>
  403f1c:	mov    esi,0xd
  403f21:	mov    edx,0x6
  403f26:	mov    ecx,0x2
  403f2b:	lea    r8,[rsp+0xc0]
  403f33:	mov    r9,r15
  403f36:	jmp    403d7e <Mat_VarRead@plt+0x19ee>
  403f3b:	mov    DWORD PTR [rsp],0x0
  403f42:	lea    rdi,[rip+0xc18c]        # 4100d5 <getopt_long_only@@Base+0x31f5>
  403f49:	mov    esi,0xb
  403f4e:	mov    edx,0x4
  403f53:	mov    ecx,0x2
  403f58:	lea    r8,[rsp+0xc0]
  403f60:	mov    r9,r11
  403f63:	jmp    403d7e <Mat_VarRead@plt+0x19ee>
  403f68:	mov    DWORD PTR [rsp],0x0
  403f6f:	lea    rdi,[rip+0xc15f]        # 4100d5 <getopt_long_only@@Base+0x31f5>
  403f76:	mov    esi,0xc
  403f7b:	mov    edx,0x5
  403f80:	mov    ecx,0x2
  403f85:	lea    r8,[rsp+0xc0]
  403f8d:	mov    r9,rbx
  403f90:	jmp    403d7e <Mat_VarRead@plt+0x19ee>
  403f95:	lea    r9,[rsp+r13*1]
  403f99:	add    r9,0xa00
  403fa0:	mov    DWORD PTR [rsp],0x0
  403fa7:	lea    rdi,[rip+0xc127]        # 4100d5 <getopt_long_only@@Base+0x31f5>
  403fae:	mov    esi,0xe
  403fb3:	mov    edx,0xc
  403fb8:	jmp    403d71 <Mat_VarRead@plt+0x19e1>
  403fbd:	mov    rdi,QWORD PTR [rsp+0x138]
  403fc5:	jmp    404cf7 <Mat_VarRead@plt+0x2967>
  403fca:	xor    r12d,r12d
  403fcd:	mov    rbx,QWORD PTR [rsp+0x30]
  403fd2:	mov    r15,QWORD PTR [rsp+0x50]
  403fd7:	lea    r13,[rsp+0x400]
  403fdf:	mov    r14,QWORD PTR [rsp+0x138]
  403fe7:	jmp    404f33 <Mat_VarRead@plt+0x2ba3>
  403fec:	mov    QWORD PTR [rsp+0x50],r15
  403ff1:	mov    rdi,QWORD PTR [rsp+0x28]
  403ff6:	test   rdi,rdi
  403ff9:	lea    rax,[rip+0xb07b]        # 40f07b <getopt_long_only@@Base+0x219b>
  404000:	cmove  rdi,rax
  404004:	vpxor  xmm0,xmm0,xmm0
  404008:	vmovdqa YMMWORD PTR [rsp+0xc0],ymm0
  404011:	mov    QWORD PTR [rsp+0xe0],0x0
  40401d:	mov    rax,QWORD PTR [rip+0xa67c]        # 40e6a0 <getopt_long_only@@Base+0x17c0>
  404024:	mov    QWORD PTR [rsp+0x10f0],rax
  40402c:	vmovdqa xmm0,XMMWORD PTR [rip+0xa65c]        # 40e690 <getopt_long_only@@Base+0x17b0>
  404034:	vmovdqa XMMWORD PTR [rsp+0x10e0],xmm0
  40403d:	mov    edx,DWORD PTR [rip+0x112dd]        # 415320 <getopt_long_only@@Base+0x8440>
  404043:	mov    QWORD PTR [rsp+0x28],rdi
  404048:	xor    esi,esi
  40404a:	vzeroupper 
  40404d:	call   402310 <Mat_CreateVer@plt>
  404052:	test   rax,rax
  404055:	je     4051f8 <Mat_VarRead@plt+0x2e68>
  40405b:	mov    r14,rax
  40405e:	mov    DWORD PTR [rsp],0x0
  404065:	xor    r15d,r15d
  404068:	lea    rdi,[rip+0xe6ca]        # 412739 <getopt_long_only@@Base+0x5859>
  40406f:	mov    esi,0x6
  404074:	mov    edx,0x9
  404079:	mov    ecx,0x3
  40407e:	lea    r13,[rsp+0x10e0]
  404086:	mov    r8,r13
  404089:	xor    r9d,r9d
  40408c:	call   4020d0 <Mat_VarCreate@plt>
  404091:	mov    QWORD PTR [rsp+0xc0],rax
  404099:	movzx  edx,BYTE PTR [rip+0x123bc]        # 41645c <optopt@@Base+0x24>
  4040a0:	mov    rdi,r14
  4040a3:	mov    rsi,rax
  4040a6:	call   4020f0 <Mat_VarWrite@plt>
  4040ab:	mov    DWORD PTR [rsp],0x800
  4040b2:	lea    rdi,[rip+0xe67f]        # 412738 <getopt_long_only@@Base+0x5858>
  4040b9:	mov    esi,0x6
  4040be:	mov    edx,0x9
  4040c3:	mov    ecx,0x3
  4040c8:	mov    r8,r13
  4040cb:	xor    r9d,r9d
  4040ce:	call   4020d0 <Mat_VarCreate@plt>
  4040d3:	mov    QWORD PTR [rsp+0xc8],rax
  4040db:	movzx  edx,BYTE PTR [rip+0x1237a]        # 41645c <optopt@@Base+0x24>
  4040e2:	mov    rdi,r14
  4040e5:	mov    rsi,rax
  4040e8:	call   4020f0 <Mat_VarWrite@plt>
  4040ed:	mov    DWORD PTR [rsp],0x0
  4040f4:	lea    rdi,[rip+0xe645]        # 412740 <getopt_long_only@@Base+0x5860>
  4040fb:	mov    esi,0x4
  404100:	mov    edx,0x2
  404105:	mov    ecx,0x2
  40410a:	mov    r8,r13
  40410d:	xor    r9d,r9d
  404110:	call   4020d0 <Mat_VarCreate@plt>
  404115:	mov    QWORD PTR [rsp+0xd0],rax
  40411d:	movzx  edx,BYTE PTR [rip+0x12338]        # 41645c <optopt@@Base+0x24>
  404124:	mov    rdi,r14
  404127:	mov    rsi,rax
  40412a:	call   4020f0 <Mat_VarWrite@plt>
  40412f:	mov    DWORD PTR [rsp],0x0
  404136:	lea    rdi,[rip+0xe60d]        # 41274a <getopt_long_only@@Base+0x586a>
  40413d:	mov    esi,0x2
  404142:	mov    edx,0x16
  404147:	mov    ecx,0x2
  40414c:	mov    r8,r13
  40414f:	xor    r9d,r9d
  404152:	call   4020d0 <Mat_VarCreate@plt>
  404157:	mov    rbx,rax
  40415a:	movzx  edx,BYTE PTR [rip+0x122fb]        # 41645c <optopt@@Base+0x24>
  404161:	mov    rdi,r14
  404164:	mov    rsi,rax
  404167:	call   4020f0 <Mat_VarWrite@plt>
  40416c:	mov    rdi,rbx
  40416f:	call   402240 <Mat_VarFree@plt>
  404174:	mov    DWORD PTR [rsp],0x1
  40417b:	lea    rdi,[rip+0xe5d4]        # 412756 <getopt_long_only@@Base+0x5876>
  404182:	mov    esi,0x2
  404187:	mov    edx,0x16
  40418c:	mov    ecx,0x3
  404191:	mov    r8,r13
  404194:	lea    r12,[rsp+0xc0]
  40419c:	mov    r9,r12
  40419f:	call   4020d0 <Mat_VarCreate@plt>
  4041a4:	mov    rbx,rax
  4041a7:	movzx  edx,BYTE PTR [rip+0x122ae]        # 41645c <optopt@@Base+0x24>
  4041ae:	mov    rdi,r14
  4041b1:	mov    rsi,rax
  4041b4:	call   4020f0 <Mat_VarWrite@plt>
  4041b9:	mov    QWORD PTR [rbx+0x38],0x0
  4041c1:	mov    rdi,rbx
  4041c4:	call   402240 <Mat_VarFree@plt>
  4041c9:	mov    QWORD PTR [rsp+0x10e0],0x1
  4041d5:	mov    DWORD PTR [rsp],0x1
  4041dc:	lea    rdi,[rip+0xe58c]        # 41276f <getopt_long_only@@Base+0x588f>
  4041e3:	mov    esi,0x2
  4041e8:	mov    edx,0x16
  4041ed:	mov    ecx,0x2
  4041f2:	mov    r8,r13
  4041f5:	mov    r9,r12
  4041f8:	call   4020d0 <Mat_VarCreate@plt>
  4041fd:	mov    rbx,rax
  404200:	movzx  edx,BYTE PTR [rip+0x12255]        # 41645c <optopt@@Base+0x24>
  404207:	mov    rdi,r14
  40420a:	mov    rsi,rax
  40420d:	call   4020f0 <Mat_VarWrite@plt>
  404212:	mov    QWORD PTR [rbx+0x38],0x0
  40421a:	mov    rdi,rbx
  40421d:	call   402240 <Mat_VarFree@plt>
  404222:	mov    QWORD PTR [rsp+0x10e0],0x0
  40422e:	mov    DWORD PTR [rsp],0x1
  404235:	lea    rdi,[rip+0xe546]        # 412782 <getopt_long_only@@Base+0x58a2>
  40423c:	mov    esi,0x1
  404241:	mov    edx,0x15
  404246:	mov    ecx,0x2
  40424b:	mov    r8,r13
  40424e:	xor    r9d,r9d
  404251:	call   4020d0 <Mat_VarCreate@plt>
  404256:	mov    rbx,rax
  404259:	movzx  edx,BYTE PTR [rip+0x121fc]        # 41645c <optopt@@Base+0x24>
  404260:	mov    rdi,r14
  404263:	mov    rsi,rax
  404266:	call   4020f0 <Mat_VarWrite@plt>
  40426b:	mov    rdi,rbx
  40426e:	call   402240 <Mat_VarFree@plt>
  404273:	mov    QWORD PTR [rsp+0x10e0],0x3
  40427f:	mov    DWORD PTR [rsp],0x1
  404286:	lea    rdi,[rip+0xe4ff]        # 41278c <getopt_long_only@@Base+0x58ac>
  40428d:	mov    esi,0x1
  404292:	mov    edx,0x15
  404297:	mov    ecx,0x2
  40429c:	mov    r8,r13
  40429f:	lea    r13,[rsp+0x400]
  4042a7:	mov    r9,r12
  4042aa:	call   4020d0 <Mat_VarCreate@plt>
  4042af:	mov    rbx,rax
  4042b2:	movzx  edx,BYTE PTR [rip+0x121a3]        # 41645c <optopt@@Base+0x24>
  4042b9:	mov    rdi,r14
  4042bc:	mov    rsi,rax
  4042bf:	call   4020f0 <Mat_VarWrite@plt>
  4042c4:	mov    QWORD PTR [rbx+0x38],0x0
  4042cc:	mov    rdi,rbx
  4042cf:	call   402240 <Mat_VarFree@plt>
  4042d4:	mov    rdi,QWORD PTR [rsp+0xc0]
  4042dc:	call   402240 <Mat_VarFree@plt>
  4042e1:	mov    rdi,QWORD PTR [rsp+0xc8]
  4042e9:	call   402240 <Mat_VarFree@plt>
  4042ee:	mov    rdi,QWORD PTR [rsp+0xd0]
  4042f6:	call   402240 <Mat_VarFree@plt>
  4042fb:	mov    rdi,r14
  4042fe:	call   4022a0 <Mat_Close@plt>
  404303:	jmp    4051fe <Mat_VarRead@plt+0x2e6e>
  404308:	mov    r12,r15
  40430b:	vmovaps xmm0,XMMWORD PTR [rip+0x9e2d]        # 40e140 <getopt_long_only@@Base+0x1260>
  404313:	vmovaps XMMWORD PTR [rsp+0x40],xmm0
  404319:	vmovaps ymm0,YMMWORD PTR [rip+0x9f3f]        # 40e260 <getopt_long_only@@Base+0x1380>
  404321:	vmovups YMMWORD PTR [rsp+0xa08],ymm0
  40432a:	movabs rax,0x4018000000000000
  404334:	mov    QWORD PTR [rsp+0xa28],rax
  40433c:	vmovaps ymm0,YMMWORD PTR [rip+0x9f3c]        # 40e280 <getopt_long_only@@Base+0x13a0>
  404344:	vmovups YMMWORD PTR [rsp+0xa38],ymm0
  40434d:	movabs rax,0x4028000000000000
  404357:	mov    QWORD PTR [rsp+0xa58],rax
  40435f:	vmovaps ymm0,YMMWORD PTR [rip+0x9f39]        # 40e2a0 <getopt_long_only@@Base+0x13c0>
  404367:	vmovups YMMWORD PTR [rsp+0xa68],ymm0
  404370:	movabs rax,0x4032000000000000
  40437a:	mov    QWORD PTR [rsp+0xa88],rax
  404382:	movabs rax,0x4034000000000000
  40438c:	mov    QWORD PTR [rsp+0xa98],rax
  404394:	vmovdqa ymm0,YMMWORD PTR [rip+0x9f24]        # 40e2c0 <getopt_long_only@@Base+0x13e0>
  40439c:	vmovdqa YMMWORD PTR [rsp+0xaa0],ymm0
  4043a5:	movabs rax,0x7ff8000000000000
  4043af:	mov    QWORD PTR [rsp+0xa00],rax
  4043b7:	mov    QWORD PTR [rsp+0xa30],rax
  4043bf:	mov    QWORD PTR [rsp+0xa60],rax
  4043c7:	mov    QWORD PTR [rsp+0xa90],rax
  4043cf:	mov    QWORD PTR [rsp+0xac0],rax
  4043d7:	mov    edx,DWORD PTR [rip+0x10f43]        # 415320 <getopt_long_only@@Base+0x8440>
  4043dd:	lea    rdi,[rip+0xe3b8]        # 41279c <getopt_long_only@@Base+0x58bc>
  4043e4:	jmp    4044d6 <Mat_VarRead@plt+0x2146>
  4043e9:	mov    r12,r15
  4043ec:	mov    rdi,QWORD PTR [rsp+0x28]
  4043f1:	test   rdi,rdi
  4043f4:	lea    rax,[rip+0xac94]        # 40f08f <getopt_long_only@@Base+0x21af>
  4043fb:	cmove  rdi,rax
  4043ff:	vmovaps xmm0,XMMWORD PTR [rip+0x9d39]        # 40e140 <getopt_long_only@@Base+0x1260>
  404407:	vmovaps XMMWORD PTR [rsp+0x40],xmm0
  40440d:	vmovaps ymm0,YMMWORD PTR [rip+0x9e4b]        # 40e260 <getopt_long_only@@Base+0x1380>
  404415:	vmovups YMMWORD PTR [rsp+0xa08],ymm0
  40441e:	movabs rax,0x4018000000000000
  404428:	mov    QWORD PTR [rsp+0xa28],rax
  404430:	vmovaps ymm0,YMMWORD PTR [rip+0x9e48]        # 40e280 <getopt_long_only@@Base+0x13a0>
  404438:	vmovups YMMWORD PTR [rsp+0xa38],ymm0
  404441:	movabs rax,0x4028000000000000
  40444b:	mov    QWORD PTR [rsp+0xa58],rax
  404453:	vmovaps ymm0,YMMWORD PTR [rip+0x9e45]        # 40e2a0 <getopt_long_only@@Base+0x13c0>
  40445b:	vmovups YMMWORD PTR [rsp+0xa68],ymm0
  404464:	movabs rax,0x4032000000000000
  40446e:	mov    QWORD PTR [rsp+0xa88],rax
  404476:	movabs rax,0x4034000000000000
  404480:	mov    QWORD PTR [rsp+0xa98],rax
  404488:	vmovdqa ymm0,YMMWORD PTR [rip+0x9e30]        # 40e2c0 <getopt_long_only@@Base+0x13e0>
  404490:	vmovdqa YMMWORD PTR [rsp+0xaa0],ymm0
  404499:	movabs rax,0x7ff0000000000000
  4044a3:	mov    QWORD PTR [rsp+0xa00],rax
  4044ab:	mov    QWORD PTR [rsp+0xa30],rax
  4044b3:	mov    QWORD PTR [rsp+0xa60],rax
  4044bb:	mov    QWORD PTR [rsp+0xa90],rax
  4044c3:	mov    QWORD PTR [rsp+0xac0],rax
  4044cb:	mov    edx,DWORD PTR [rip+0x10e4f]        # 415320 <getopt_long_only@@Base+0x8440>
  4044d1:	mov    QWORD PTR [rsp+0x28],rdi
  4044d6:	xor    esi,esi
  4044d8:	vzeroupper 
  4044db:	call   402310 <Mat_CreateVer@plt>
  4044e0:	test   rax,rax
  4044e3:	je     40453c <Mat_VarRead@plt+0x21ac>
  4044e5:	mov    rbx,rax
  4044e8:	mov    DWORD PTR [rsp],0x1
  4044ef:	lea    rdi,[rip+0xaf28]        # 40f41e <getopt_long_only@@Base+0x253e>
  4044f6:	mov    esi,0x6
  4044fb:	mov    edx,0x9
  404500:	mov    ecx,0x2
  404505:	lea    r8,[rsp+0x40]
  40450a:	lea    r9,[rsp+0xa00]
  404512:	call   4020d0 <Mat_VarCreate@plt>
  404517:	mov    r14,rax
  40451a:	xor    r15d,r15d
  40451d:	mov    rdi,rbx
  404520:	mov    rsi,rax
  404523:	xor    edx,edx
  404525:	call   4020f0 <Mat_VarWrite@plt>
  40452a:	mov    rdi,r14
  40452d:	call   402240 <Mat_VarFree@plt>
  404532:	mov    rdi,rbx
  404535:	call   4022a0 <Mat_Close@plt>
  40453a:	jmp    404542 <Mat_VarRead@plt+0x21b2>
  40453c:	mov    r15d,0x1
  404542:	mov    rbx,QWORD PTR [rsp+0x30]
  404547:	inc    r12d
  40454a:	add    DWORD PTR [rsp+0x3c],r15d
  40454f:	mov    r15,r12
  404552:	cmp    r15d,DWORD PTR [rsp+0x118]
  40455a:	jl     4028e3 <Mat_VarRead@plt+0x553>
  404560:	jmp    40bfa9 <Mat_VarRead@plt+0x9c19>
  404565:	lea    rax,[rsp+0xc80]
  40456d:	mov    QWORD PTR [rsp+0x60],rax
  404572:	lea    rax,[rsp+0xf80]
  40457a:	mov    QWORD PTR [rsp+0x68],rax
  40457f:	mov    DWORD PTR [rsp+0xb8],0x7
  40458a:	jmp    4046c9 <Mat_VarRead@plt+0x2339>
  40458f:	lea    rax,[rsp+0x140]
  404597:	mov    QWORD PTR [rsp+0x60],rax
  40459c:	lea    rax,[rsp+0x1a0]
  4045a4:	mov    QWORD PTR [rsp+0x68],rax
  4045a9:	mov    DWORD PTR [rsp+0xb8],0x1
  4045b4:	jmp    4046c9 <Mat_VarRead@plt+0x2339>
  4045b9:	lea    rax,[rsp+0x260]
  4045c1:	mov    QWORD PTR [rsp+0x60],rax
  4045c6:	lea    rax,[rsp+0x2a0]
  4045ce:	mov    QWORD PTR [rsp+0x68],rax
  4045d3:	mov    DWORD PTR [rsp+0xb8],0x2
  4045de:	jmp    4046c9 <Mat_VarRead@plt+0x2339>
  4045e3:	lea    rax,[rsp+0x1e0]
  4045eb:	mov    QWORD PTR [rsp+0x60],rax
  4045f0:	lea    rax,[rsp+0x380]
  4045f8:	mov    QWORD PTR [rsp+0x68],rax
  4045fd:	mov    DWORD PTR [rsp+0xb8],0x3
  404608:	jmp    4046c9 <Mat_VarRead@plt+0x2339>
  40460d:	lea    rax,[rsp+0x300]
  404615:	mov    QWORD PTR [rsp+0x60],rax
  40461a:	lea    rax,[rsp+0xd60]
  404622:	mov    QWORD PTR [rsp+0x68],rax
  404627:	mov    DWORD PTR [rsp+0xb8],0x4
  404632:	jmp    4046c9 <Mat_VarRead@plt+0x2339>
  404637:	lea    rax,[rsp+0x5c0]
  40463f:	mov    QWORD PTR [rsp+0x60],rax
  404644:	lea    rax,[rsp+0xba0]
  40464c:	mov    QWORD PTR [rsp+0x68],rax
  404651:	mov    DWORD PTR [rsp+0xb8],0x5
  40465c:	jmp    4046c9 <Mat_VarRead@plt+0x2339>
  40465e:	lea    rax,[rsp+0x6a0]
  404666:	mov    QWORD PTR [rsp+0x60],rax
  40466b:	lea    rax,[rsp+0x780]
  404673:	mov    QWORD PTR [rsp+0x68],rax
  404678:	mov    DWORD PTR [rsp+0xb8],0x6
  404683:	jmp    4046c9 <Mat_VarRead@plt+0x2339>
  404685:	lea    rax,[rsp+0xa00]
  40468d:	mov    QWORD PTR [rsp+0x60],rax
  404692:	lea    rax,[rsp+0xde0]
  40469a:	mov    QWORD PTR [rsp+0x68],rax
  40469f:	mov    DWORD PTR [rsp+0xb8],0xc
  4046aa:	jmp    4046c9 <Mat_VarRead@plt+0x2339>
  4046ac:	lea    rax,[rsp+0x1c40]
  4046b4:	mov    QWORD PTR [rsp+0x60],rax
  4046b9:	mov    QWORD PTR [rsp+0x68],r13
  4046be:	mov    DWORD PTR [rsp+0xb8],0xd
  4046c9:	mov    eax,DWORD PTR [rsp+0xbc]
  4046d0:	test   eax,eax
  4046d2:	je     4049f3 <Mat_VarRead@plt+0x2663>
  4046d8:	mov    QWORD PTR [rsp+0x2e8],r14
  4046e0:	mov    QWORD PTR [rsp+0x50],r15
  4046e5:	cmp    eax,0x2
  4046e8:	je     404a5f <Mat_VarRead@plt+0x26cf>
  4046ee:	cmp    eax,0x1
  4046f1:	jne    404cef <Mat_VarRead@plt+0x295f>
  4046f7:	vmovaps xmm0,XMMWORD PTR [rip+0x9a71]        # 40e170 <getopt_long_only@@Base+0x1290>
  4046ff:	vmovaps XMMWORD PTR [rsp+0xc0],xmm0
  404708:	mov    edx,0x1
  40470d:	lea    rax,[rsp+0x860]
  404715:	mov    rcx,rax
  404718:	lea    rax,[rsp+0x10e0]
  404720:	mov    rsi,rax
  404723:	lea    rax,[rsp+0xc80]
  40472b:	mov    QWORD PTR [rsp+0x58],rax
  404730:	lea    rax,[rsp+0xf80]
  404738:	mov    QWORD PTR [rsp+0x598],rax
  404740:	lea    rax,[rsp+0x5c0]
  404748:	mov    QWORD PTR [rsp+0x110],rax
  404750:	lea    rax,[rsp+0xba0]
  404758:	mov    QWORD PTR [rsp+0xa8],rax
  404760:	lea    rax,[rsp+0x6a0]
  404768:	mov    rbx,rax
  40476b:	lea    rax,[rsp+0x780]
  404773:	mov    rdi,rax
  404776:	lea    rax,[rsp+0x1e0]
  40477e:	mov    r11,rax
  404781:	lea    rax,[rsp+0x380]
  404789:	mov    QWORD PTR [rsp+0x138],rax
  404791:	lea    r13,[rsp+0x300]
  404799:	mov    rax,r13
  40479c:	lea    r15,[rsp+0xd60]
  4047a4:	mov    QWORD PTR [rsp+0x5b8],r15
  4047ac:	lea    r14,[rsp+0x140]
  4047b4:	mov    QWORD PTR [rsp+0xf8],r14
  4047bc:	lea    r8,[rsp+0x1a0]
  4047c4:	mov    QWORD PTR [rsp+0x5b0],r8
  4047cc:	mov    r8,rdi
  4047cf:	mov    rdi,rsi
  4047d2:	mov    r13,rbx
  4047d5:	lea    r9,[rsp+0x260]
  4047dd:	mov    QWORD PTR [rsp+0x5a8],r9
  4047e5:	lea    r10,[rsp+0x2a0]
  4047ed:	mov    r9,r11
  4047f0:	lea    r15,[rsp+0xa00]
  4047f8:	mov    r11,rax
  4047fb:	lea    r12,[rsp+0xde0]
  404803:	mov    QWORD PTR [rsp+0x5a0],r12
  40480b:	lea    r12,[rsp+0x1c40]
  404813:	mov    rbx,QWORD PTR [rsp+0xa8]
  40481b:	lea    r14,[rsp+0x400]
  404823:	mov    rax,QWORD PTR [rsp+0xf8]
  40482b:	xor    esi,esi
  40482d:	nop    DWORD PTR [rax]
  404830:	mov    QWORD PTR [rsp+0x108],r10
  404838:	mov    QWORD PTR [rsp+0xf8],rdi
  404840:	mov    QWORD PTR [rsp+0xa8],rcx
  404848:	inc    rsi
  40484b:	mov    QWORD PTR [rsp+0xd50],rsi
  404853:	xor    ecx,ecx
  404855:	mov    QWORD PTR [rsp+0xd58],rdx
  40485d:	nop    DWORD PTR [rax]
  404860:	vcvtsi2sd xmm0,xmm3,edx
  404864:	mov    rsi,QWORD PTR [rsp+0xa8]
  40486c:	vmovsd QWORD PTR [rsi+rcx*8],xmm0
  404871:	lea    rsi,[rdx+0x32]
  404875:	vcvtsi2sd xmm0,xmm3,esi
  404879:	mov    rdi,QWORD PTR [rsp+0xf8]
  404881:	vmovsd QWORD PTR [rdi+rcx*8],xmm0
  404886:	vcvtsi2ss xmm0,xmm2,edx
  40488a:	mov    r10,r13
  40488d:	mov    r13,rax
  404890:	mov    rax,r11
  404893:	mov    r11,rbx
  404896:	mov    rbx,QWORD PTR [rsp+0x58]
  40489b:	vmovss DWORD PTR [rbx+rcx*4],xmm0
  4048a0:	vcvtsi2ss xmm0,xmm1,esi
  4048a4:	lea    edi,[rdx+0x32]
  4048a7:	mov    rbx,QWORD PTR [rsp+0x138]
  4048af:	mov    WORD PTR [rbx+rcx*2],di
  4048b3:	mov    rbx,QWORD PTR [rsp+0x5b8]
  4048bb:	mov    WORD PTR [rbx+rcx*2],di
  4048bf:	mov    rbx,QWORD PTR [rsp+0x5b0]
  4048c7:	mov    BYTE PTR [rbx+rcx*1],dil
  4048cb:	mov    rbx,QWORD PTR [rsp+0x108]
  4048d3:	mov    BYTE PTR [rbx+rcx*1],dil
  4048d7:	mov    rdi,QWORD PTR [rsp+0x598]
  4048df:	mov    rbx,r11
  4048e2:	mov    r11,rax
  4048e5:	mov    rax,r13
  4048e8:	mov    r13,r10
  4048eb:	vmovd  DWORD PTR [rdi+rcx*4],xmm0
  4048f0:	mov    DWORD PTR [rbx+rcx*4],esi
  4048f3:	mov    DWORD PTR [r8+rcx*4],esi
  4048f7:	mov    rdi,QWORD PTR [rsp+0x5a0]
  4048ff:	mov    QWORD PTR [rdi+rcx*8],rsi
  404903:	mov    QWORD PTR [r14+rcx*8],rsi
  404907:	mov    rsi,QWORD PTR [rsp+0x110]
  40490f:	mov    DWORD PTR [rsi+rcx*4],edx
  404912:	mov    DWORD PTR [r10+rcx*4],edx
  404916:	mov    WORD PTR [r9+rcx*2],dx
  40491b:	mov    WORD PTR [r11+rcx*2],dx
  404920:	mov    BYTE PTR [rax+rcx*1],dl
  404923:	mov    rsi,QWORD PTR [rsp+0x5a8]
  40492b:	mov    BYTE PTR [rsi+rcx*1],dl
  40492e:	mov    QWORD PTR [r15+rcx*8],rdx
  404932:	mov    QWORD PTR [r12+rcx*8],rdx
  404936:	add    rdx,0x5
  40493a:	inc    rcx
  40493d:	cmp    rcx,0xa
  404941:	jne    404860 <Mat_VarRead@plt+0x24d0>
  404947:	mov    rdx,QWORD PTR [rsp+0xd58]
  40494f:	inc    rdx
  404952:	add    r14,0x50
  404956:	add    r12,0x50
  40495a:	add    QWORD PTR [rsp+0x5a0],0x50
  404963:	add    r15,0x50
  404967:	mov    r10,QWORD PTR [rsp+0x108]
  40496f:	add    r10,0xa
  404973:	add    QWORD PTR [rsp+0x5a8],0xa
  40497c:	add    QWORD PTR [rsp+0x5b0],0xa
  404985:	add    rax,0xa
  404989:	add    QWORD PTR [rsp+0x5b8],0x14
  404992:	add    r11,0x14
  404996:	add    QWORD PTR [rsp+0x138],0x14
  40499f:	add    r9,0x14
  4049a3:	add    r8,0x28
  4049a7:	add    r13,0x28
  4049ab:	add    rbx,0x28
  4049af:	add    QWORD PTR [rsp+0x110],0x28
  4049b8:	add    QWORD PTR [rsp+0x598],0x28
  4049c1:	add    QWORD PTR [rsp+0x58],0x28
  4049c7:	mov    rdi,QWORD PTR [rsp+0xf8]
  4049cf:	add    rdi,0x50
  4049d3:	mov    rcx,QWORD PTR [rsp+0xa8]
  4049db:	add    rcx,0x50
  4049df:	mov    rsi,QWORD PTR [rsp+0xd50]
  4049e7:	cmp    rsi,0x5
  4049eb:	jne    404830 <Mat_VarRead@plt+0x24a0>
  4049f1:	jmp    404a70 <Mat_VarRead@plt+0x26e0>
  4049f3:	vmovdqa xmm0,XMMWORD PTR [rip+0x97e5]        # 40e1e0 <getopt_long_only@@Base+0x1300>
  4049fb:	vmovdqa XMMWORD PTR [rsp+0x40],xmm0
  404a01:	mov    DWORD PTR [rsp],0x800
  404a08:	lea    rdi,[rip+0xb6c6]        # 4100d5 <getopt_long_only@@Base+0x31f5>
  404a0f:	mov    rsi,QWORD PTR [rsp+0xb0]
  404a17:	mov    edx,DWORD PTR [rsp+0xb8]
  404a1e:	mov    ecx,0x2
  404a23:	lea    r8,[rsp+0x40]
  404a28:	lea    r9,[rsp+0x60]
  404a2d:	vzeroupper 
  404a30:	call   4020d0 <Mat_VarCreate@plt>
  404a35:	mov    rbx,rax
  404a38:	movzx  edx,BYTE PTR [rip+0x11a1d]        # 41645c <optopt@@Base+0x24>
  404a3f:	mov    rdi,r14
  404a42:	mov    rsi,rax
  404a45:	call   4020f0 <Mat_VarWrite@plt>
  404a4a:	mov    r12d,eax
  404a4d:	mov    rdi,rbx
  404a50:	mov    rbx,QWORD PTR [rsp+0x30]
  404a55:	call   402240 <Mat_VarFree@plt>
  404a5a:	jmp    404f33 <Mat_VarRead@plt+0x2ba3>
  404a5f:	vmovdqa xmm0,XMMWORD PTR [rip+0x96f9]        # 40e160 <getopt_long_only@@Base+0x1280>
  404a67:	vmovdqa XMMWORD PTR [rsp+0xc0],xmm0
  404a70:	lea    rax,[rsp+0x260]
  404a78:	mov    rdx,rax
  404a7b:	lea    rax,[rsp+0x2a0]
  404a83:	mov    rsi,rax
  404a86:	lea    rax,[rsp+0x140]
  404a8e:	mov    rdi,rax
  404a91:	lea    rax,[rsp+0x1a0]
  404a99:	mov    r9,rax
  404a9c:	lea    rax,[rsp+0x300]
  404aa4:	mov    r8,rax
  404aa7:	lea    rax,[rsp+0xd60]
  404aaf:	mov    rbx,rax
  404ab2:	lea    r12,[rsp+0x1e0]
  404aba:	lea    r13,[rsp+0x380]
  404ac2:	xor    r14d,r14d
  404ac5:	xor    r15d,r15d
  404ac8:	jmp    404ba2 <Mat_VarRead@plt+0x2812>
  404acd:	mov    QWORD PTR [rsp+0x60],r12
  404ad2:	mov    QWORD PTR [rsp+0x68],r13
  404ad7:	nop    WORD PTR [rax+rax*1+0x0]
  404ae0:	mov    DWORD PTR [rsp],0x800
  404ae7:	lea    rdi,[rip+0xb5e7]        # 4100d5 <getopt_long_only@@Base+0x31f5>
  404aee:	mov    rsi,QWORD PTR [rsp+0xb0]
  404af6:	mov    edx,DWORD PTR [rsp+0xb8]
  404afd:	mov    ecx,0x2
  404b02:	lea    r8,[rsp+0xc0]
  404b0a:	lea    r9,[rsp+0x60]
  404b0f:	vzeroupper 
  404b12:	call   4020d0 <Mat_VarCreate@plt>
  404b17:	mov    rbx,rax
  404b1a:	movzx  edx,BYTE PTR [rip+0x1193b]        # 41645c <optopt@@Base+0x24>
  404b21:	mov    rdi,QWORD PTR [rsp+0x2e8]
  404b29:	mov    rsi,rax
  404b2c:	mov    ecx,DWORD PTR [rsp+0xbc]
  404b33:	call   402140 <Mat_VarWriteAppend@plt>
  404b38:	mov    rdi,rbx
  404b3b:	call   402240 <Mat_VarFree@plt>
  404b40:	add    r15,0x50
  404b44:	add    r14,0x28
  404b48:	add    r13,0x14
  404b4c:	add    r12,0x14
  404b50:	mov    rbx,QWORD PTR [rsp+0x138]
  404b58:	add    rbx,0x14
  404b5c:	mov    r8,QWORD PTR [rsp+0x110]
  404b64:	add    r8,0x14
  404b68:	mov    r9,QWORD PTR [rsp+0x108]
  404b70:	add    r9,0xa
  404b74:	mov    rdi,QWORD PTR [rsp+0xf8]
  404b7c:	add    rdi,0xa
  404b80:	mov    rsi,QWORD PTR [rsp+0xa8]
  404b88:	add    rsi,0xa
  404b8c:	mov    rdx,QWORD PTR [rsp+0x58]
  404b91:	add    rdx,0xa
  404b95:	cmp    r15,0x190
  404b9c:	je     404d1c <Mat_VarRead@plt+0x298c>
  404ba2:	mov    rax,QWORD PTR [rsp+0x100]
  404baa:	cmp    eax,0x9
  404bad:	ja     404cef <Mat_VarRead@plt+0x295f>
  404bb3:	lea    rcx,[rip+0x9a16]        # 40e5d0 <getopt_long_only@@Base+0x16f0>
  404bba:	movsxd rax,DWORD PTR [rcx+rax*4]
  404bbe:	add    rax,rcx
  404bc1:	mov    QWORD PTR [rsp+0x58],rdx
  404bc6:	mov    QWORD PTR [rsp+0xa8],rsi
  404bce:	mov    QWORD PTR [rsp+0xf8],rdi
  404bd6:	mov    QWORD PTR [rsp+0x108],r9
  404bde:	mov    QWORD PTR [rsp+0x110],r8
  404be6:	mov    QWORD PTR [rsp+0x138],rbx
  404bee:	jmp    rax
  404bf0:	lea    rax,[rsp+r15*1]
  404bf4:	add    rax,0x860
  404bfa:	mov    QWORD PTR [rsp+0x60],rax
  404bff:	lea    rax,[rsp+r15*1]
  404c03:	add    rax,0x10e0
  404c09:	mov    QWORD PTR [rsp+0x68],rax
  404c0e:	jmp    404ae0 <Mat_VarRead@plt+0x2750>
  404c13:	lea    rax,[rsp+r15*1]
  404c17:	add    rax,0x1c40
  404c1d:	mov    QWORD PTR [rsp+0x60],rax
  404c22:	lea    rax,[rsp+r15*1]
  404c26:	add    rax,0x400
  404c2c:	mov    QWORD PTR [rsp+0x68],rax
  404c31:	jmp    404ae0 <Mat_VarRead@plt+0x2750>
  404c36:	lea    rax,[rsp+r14*1]
  404c3a:	add    rax,0xc80
  404c40:	mov    QWORD PTR [rsp+0x60],rax
  404c45:	lea    rax,[rsp+r14*1]
  404c49:	add    rax,0xf80
  404c4f:	mov    QWORD PTR [rsp+0x68],rax
  404c54:	jmp    404ae0 <Mat_VarRead@plt+0x2750>
  404c59:	mov    QWORD PTR [rsp+0x60],rdi
  404c5e:	mov    QWORD PTR [rsp+0x68],r9
  404c63:	jmp    404ae0 <Mat_VarRead@plt+0x2750>
  404c68:	mov    QWORD PTR [rsp+0x60],rdx
  404c6d:	mov    QWORD PTR [rsp+0x68],rsi
  404c72:	jmp    404ae0 <Mat_VarRead@plt+0x2750>
  404c77:	lea    rax,[rsp+r14*1]
  404c7b:	add    rax,0x6a0
  404c81:	mov    QWORD PTR [rsp+0x60],rax
  404c86:	lea    rax,[rsp+r14*1]
  404c8a:	add    rax,0x780
  404c90:	mov    QWORD PTR [rsp+0x68],rax
  404c95:	jmp    404ae0 <Mat_VarRead@plt+0x2750>
  404c9a:	mov    QWORD PTR [rsp+0x60],r8
  404c9f:	mov    QWORD PTR [rsp+0x68],rbx
  404ca4:	jmp    404ae0 <Mat_VarRead@plt+0x2750>
  404ca9:	lea    rax,[rsp+r14*1]
  404cad:	add    rax,0x5c0
  404cb3:	mov    QWORD PTR [rsp+0x60],rax
  404cb8:	lea    rax,[rsp+r14*1]
  404cbc:	add    rax,0xba0
  404cc2:	mov    QWORD PTR [rsp+0x68],rax
  404cc7:	jmp    404ae0 <Mat_VarRead@plt+0x2750>
  404ccc:	lea    rax,[rsp+r15*1]
  404cd0:	add    rax,0xa00
  404cd6:	mov    QWORD PTR [rsp+0x60],rax
  404cdb:	lea    rax,[rsp+r15*1]
  404cdf:	add    rax,0xde0
  404ce5:	mov    QWORD PTR [rsp+0x68],rax
  404cea:	jmp    404ae0 <Mat_VarRead@plt+0x2750>
  404cef:	mov    rdi,QWORD PTR [rsp+0x2e8]
  404cf7:	vzeroupper 
  404cfa:	call   4022a0 <Mat_Close@plt>
  404cff:	mov    rbx,QWORD PTR [rsp+0x30]
  404d04:	mov    r15,QWORD PTR [rsp+0x50]
  404d09:	lea    r13,[rsp+0x400]
  404d11:	mov    r12d,0x1
  404d17:	jmp    404f3e <Mat_VarRead@plt+0x2bae>
  404d1c:	xor    r12d,r12d
  404d1f:	mov    rbx,QWORD PTR [rsp+0x30]
  404d24:	mov    r15,QWORD PTR [rsp+0x50]
  404d29:	lea    r13,[rsp+0x400]
  404d31:	mov    r14,QWORD PTR [rsp+0x2e8]
  404d39:	jmp    404f33 <Mat_VarRead@plt+0x2ba3>
  404d3e:	lea    ebx,[r15+0x1]
  404d42:	cmp    DWORD PTR [rsp+0x118],0x3
  404d4a:	jg     40520d <Mat_VarRead@plt+0x2e7d>
  404d50:	lea    rdi,[rip+0xa34a]        # 40f0a1 <getopt_long_only@@Base+0x21c1>
  404d57:	xor    eax,eax
  404d59:	call   4022b0 <Mat_Critical@plt>
  404d5e:	inc    DWORD PTR [rsp+0x3c]
  404d62:	mov    r15d,ebx
  404d65:	jmp    4028d0 <Mat_VarRead@plt+0x540>
  404d6a:	mov    DWORD PTR [rsp],0x0
  404d71:	lea    rdi,[rip+0xb35d]        # 4100d5 <getopt_long_only@@Base+0x31f5>
  404d78:	mov    esi,0x7
  404d7d:	mov    edx,0x7
  404d82:	mov    ecx,0x2
  404d87:	lea    r8,[rsp+0x40]
  404d8c:	lea    r9,[rsp+0xc80]
  404d94:	jmp    404f06 <Mat_VarRead@plt+0x2b76>
  404d99:	mov    DWORD PTR [rsp],0x0
  404da0:	lea    rdi,[rip+0xb32e]        # 4100d5 <getopt_long_only@@Base+0x31f5>
  404da7:	mov    esi,0x8
  404dac:	mov    edx,0x1
  404db1:	mov    ecx,0x2
  404db6:	lea    r8,[rsp+0x40]
  404dbb:	lea    r9,[rsp+0x140]
  404dc3:	jmp    404f06 <Mat_VarRead@plt+0x2b76>
  404dc8:	mov    DWORD PTR [rsp],0x0
  404dcf:	lea    rdi,[rip+0xb2ff]        # 4100d5 <getopt_long_only@@Base+0x31f5>
  404dd6:	mov    esi,0x9
  404ddb:	mov    edx,0x2
  404de0:	mov    ecx,0x2
  404de5:	lea    r8,[rsp+0x40]
  404dea:	lea    r9,[rsp+0x1a0]
  404df2:	jmp    404f06 <Mat_VarRead@plt+0x2b76>
  404df7:	mov    DWORD PTR [rsp],0x0
  404dfe:	lea    rdi,[rip+0xb2d0]        # 4100d5 <getopt_long_only@@Base+0x31f5>
  404e05:	mov    esi,0xa
  404e0a:	mov    edx,0x3
  404e0f:	mov    ecx,0x2
  404e14:	lea    r8,[rsp+0x40]
  404e19:	lea    r9,[rsp+0x1e0]
  404e21:	jmp    404f06 <Mat_VarRead@plt+0x2b76>
  404e26:	mov    DWORD PTR [rsp],0x0
  404e2d:	lea    rdi,[rip+0xb2a1]        # 4100d5 <getopt_long_only@@Base+0x31f5>
  404e34:	mov    esi,0xb
  404e39:	mov    edx,0x4
  404e3e:	mov    ecx,0x2
  404e43:	lea    r8,[rsp+0x40]
  404e48:	lea    r9,[rsp+0x380]
  404e50:	jmp    404f06 <Mat_VarRead@plt+0x2b76>
  404e55:	mov    DWORD PTR [rsp],0x0
  404e5c:	lea    rdi,[rip+0xb272]        # 4100d5 <getopt_long_only@@Base+0x31f5>
  404e63:	mov    esi,0xc
  404e68:	mov    edx,0x5
  404e6d:	mov    ecx,0x2
  404e72:	lea    r8,[rsp+0x40]
  404e77:	lea    r9,[rsp+0x5c0]
  404e7f:	jmp    404f06 <Mat_VarRead@plt+0x2b76>
  404e84:	mov    DWORD PTR [rsp],0x0
  404e8b:	lea    rdi,[rip+0xb243]        # 4100d5 <getopt_long_only@@Base+0x31f5>
  404e92:	mov    esi,0xd
  404e97:	mov    edx,0x6
  404e9c:	mov    ecx,0x2
  404ea1:	lea    r8,[rsp+0x40]
  404ea6:	lea    r9,[rsp+0xba0]
  404eae:	jmp    404f06 <Mat_VarRead@plt+0x2b76>
  404eb0:	mov    DWORD PTR [rsp],0x0
  404eb7:	lea    rdi,[rip+0xb217]        # 4100d5 <getopt_long_only@@Base+0x31f5>
  404ebe:	mov    esi,0xe
  404ec3:	mov    edx,0xc
  404ec8:	mov    ecx,0x2
  404ecd:	lea    r8,[rsp+0x40]
  404ed2:	lea    r9,[rsp+0xa00]
  404eda:	jmp    404f06 <Mat_VarRead@plt+0x2b76>
  404edc:	mov    DWORD PTR [rsp],0x0
  404ee3:	lea    rdi,[rip+0xb1eb]        # 4100d5 <getopt_long_only@@Base+0x31f5>
  404eea:	mov    esi,0xf
  404eef:	mov    edx,0xd
  404ef4:	mov    ecx,0x2
  404ef9:	lea    r8,[rsp+0x40]
  404efe:	lea    r9,[rsp+0xde0]
  404f06:	vzeroupper 
  404f09:	call   4020d0 <Mat_VarCreate@plt>
  404f0e:	mov    rbx,rax
  404f11:	movzx  edx,BYTE PTR [rip+0x11544]        # 41645c <optopt@@Base+0x24>
  404f18:	mov    rdi,r14
  404f1b:	mov    rsi,rax
  404f1e:	call   4020f0 <Mat_VarWrite@plt>
  404f23:	mov    r12d,eax
  404f26:	mov    rdi,rbx
  404f29:	call   402240 <Mat_VarFree@plt>
  404f2e:	mov    rbx,QWORD PTR [rsp+0x30]
  404f33:	mov    rdi,r14
  404f36:	vzeroupper 
  404f39:	call   4022a0 <Mat_Close@plt>
  404f3e:	inc    r15d
  404f41:	add    DWORD PTR [rsp+0x3c],r12d
  404f46:	cmp    r15d,DWORD PTR [rsp+0x118]
  404f4e:	jl     4028e3 <Mat_VarRead@plt+0x553>
  404f54:	jmp    40bfa9 <Mat_VarRead@plt+0x9c19>
  404f59:	mov    QWORD PTR [rsp+0x50],r15
  404f5e:	vmovaps xmm0,XMMWORD PTR [rip+0x927a]        # 40e1e0 <getopt_long_only@@Base+0x1300>
  404f66:	vmovaps XMMWORD PTR [rsp+0x40],xmm0
  404f6c:	vxorps xmm0,xmm0,xmm0
  404f70:	vmovups XMMWORD PTR [rsp+0x189],xmm0
  404f79:	vmovaps XMMWORD PTR [rsp+0x180],xmm0
  404f82:	vpbroadcastq ymm0,QWORD PTR [rip+0x93f5]        # 40e380 <getopt_long_only@@Base+0x14a0>
  404f8b:	vmovdqu YMMWORD PTR [rsp+0x5c0],ymm0
  404f94:	vpbroadcastd xmm1,DWORD PTR [rip+0x93f3]        # 40e390 <getopt_long_only@@Base+0x14b0>
  404f9d:	vmovdqa XMMWORD PTR [rsp+0x1e0],xmm1
  404fa6:	vmovdqu YMMWORD PTR [rsp+0x5e0],ymm0
  404faf:	vmovdqa XMMWORD PTR [rsp+0x1f0],xmm1
  404fb8:	vmovdqu YMMWORD PTR [rsp+0x600],ymm0
  404fc1:	vmovdqa XMMWORD PTR [rsp+0x200],xmm1
  404fca:	vmovdqu YMMWORD PTR [rsp+0x620],ymm0
  404fd3:	vmovdqa XMMWORD PTR [rsp+0x210],xmm1
  404fdc:	vmovdqu YMMWORD PTR [rsp+0x640],ymm0
  404fe5:	vmovdqa XMMWORD PTR [rsp+0x220],xmm1
  404fee:	mov    rdi,QWORD PTR [rsp+0x28]
  404ff3:	test   rdi,rdi
  404ff6:	vmovdqu YMMWORD PTR [rsp+0x660],ymm0
  404fff:	vmovdqa XMMWORD PTR [rsp+0x230],xmm1
  405008:	mov    DWORD PTR [rsp+0x680],0x0
  405013:	mov    WORD PTR [rsp+0x240],0x1
  40501d:	mov    DWORD PTR [rsp+0x684],0x1
  405028:	mov    WORD PTR [rsp+0x242],0x0
  405032:	lea    rax,[rip+0xa09e]        # 40f0d7 <getopt_long_only@@Base+0x21f7>
  405039:	cmove  rdi,rax
  40503d:	mov    BYTE PTR [rsp+0x184],0x1
  405045:	mov    DWORD PTR [rsp+0x180],0x1010101
  405050:	mov    DWORD PTR [rsp+0x186],0x1010101
  40505b:	lea    rax,[rsp+0x18c]
  405063:	mov    BYTE PTR [rax+0x2],0x1
  405067:	mov    WORD PTR [rax],0x101
  40506c:	mov    WORD PTR [rsp+0x192],0x101
  405076:	mov    BYTE PTR [rsp+0x198],0x1
  40507e:	mov    edx,DWORD PTR [rip+0x1029c]        # 415320 <getopt_long_only@@Base+0x8440>
  405084:	mov    QWORD PTR [rsp+0x28],rdi
  405089:	xor    esi,esi
  40508b:	vzeroupper 
  40508e:	call   402310 <Mat_CreateVer@plt>
  405093:	test   rax,rax
  405096:	je     4051f8 <Mat_VarRead@plt+0x2e68>
  40509c:	mov    r14,rax
  40509f:	mov    DWORD PTR [rsp],0x201
  4050a6:	lea    r12,[rip+0xd701]        # 4127ae <getopt_long_only@@Base+0x58ce>
  4050ad:	mov    rdi,r12
  4050b0:	mov    esi,0xd
  4050b5:	mov    edx,0x6
  4050ba:	mov    ecx,0x2
  4050bf:	lea    rbx,[rsp+0x40]
  4050c4:	mov    r8,rbx
  4050c7:	lea    r9,[rsp+0x5c0]
  4050cf:	call   4020d0 <Mat_VarCreate@plt>
  4050d4:	mov    QWORD PTR [rsp+0xc0],rax
  4050dc:	mov    DWORD PTR [rsp],0x201
  4050e3:	lea    rax,[rip+0xd6cb]        # 4127b5 <getopt_long_only@@Base+0x58d5>
  4050ea:	mov    rdi,rax
  4050ed:	mov    esi,0xb
  4050f2:	mov    edx,0x4
  4050f7:	mov    ecx,0x2
  4050fc:	mov    r8,rbx
  4050ff:	lea    r9,[rsp+0x1e0]
  405107:	call   4020d0 <Mat_VarCreate@plt>
  40510c:	mov    QWORD PTR [rsp+0xc8],rax
  405114:	vmovaps xmm0,XMMWORD PTR [rip+0x9014]        # 40e130 <getopt_long_only@@Base+0x1250>
  40511c:	vmovaps XMMWORD PTR [rsp+0x40],xmm0
  405122:	mov    DWORD PTR [rsp],0x201
  405129:	xor    r15d,r15d
  40512c:	mov    rdi,r12
  40512f:	mov    esi,0x9
  405134:	mov    edx,0x2
  405139:	mov    ecx,0x2
  40513e:	mov    r8,rbx
  405141:	xor    r9d,r9d
  405144:	call   4020d0 <Mat_VarCreate@plt>
  405149:	mov    QWORD PTR [rsp+0xd0],rax
  405151:	vmovaps xmm0,XMMWORD PTR [rip+0x8fe7]        # 40e140 <getopt_long_only@@Base+0x1260>
  405159:	vmovaps XMMWORD PTR [rsp+0x40],xmm0
  40515f:	mov    DWORD PTR [rsp],0x201
  405166:	lea    rdi,[rip+0xd648]        # 4127b5 <getopt_long_only@@Base+0x58d5>
  40516d:	mov    esi,0x9
  405172:	mov    edx,0x2
  405177:	mov    ecx,0x2
  40517c:	mov    r8,rbx
  40517f:	lea    r9,[rsp+0x180]
  405187:	call   4020d0 <Mat_VarCreate@plt>
  40518c:	mov    QWORD PTR [rsp+0xd8],rax
  405194:	mov    QWORD PTR [rsp+0xe0],0x0
  4051a0:	vmovdqa xmm0,XMMWORD PTR [rip+0x8ed8]        # 40e080 <getopt_long_only@@Base+0x11a0>
  4051a8:	vmovdqa XMMWORD PTR [rsp+0x40],xmm0
  4051ae:	mov    DWORD PTR [rsp],0x0
  4051b5:	lea    rdi,[rip+0xaf19]        # 4100d5 <getopt_long_only@@Base+0x31f5>
  4051bc:	mov    esi,0x2
  4051c1:	mov    edx,0x16
  4051c6:	mov    ecx,0x2
  4051cb:	mov    r8,rbx
  4051ce:	lea    r9,[rsp+0xc0]
  4051d6:	call   4020d0 <Mat_VarCreate@plt>
  4051db:	mov    rbx,rax
  4051de:	movzx  edx,BYTE PTR [rip+0x11277]        # 41645c <optopt@@Base+0x24>
  4051e5:	mov    rdi,r14
  4051e8:	mov    rsi,rax
  4051eb:	call   4020f0 <Mat_VarWrite@plt>
  4051f0:	mov    rdi,rbx
  4051f3:	jmp    4042f6 <Mat_VarRead@plt+0x1f66>
  4051f8:	mov    r15d,0x1
  4051fe:	mov    rbx,QWORD PTR [rsp+0x30]
  405203:	mov    r12,QWORD PTR [rsp+0x50]
  405208:	jmp    406038 <Mat_VarRead@plt+0x3ca8>
  40520d:	mov    r13,r15
  405210:	movsxd rax,ebx
  405213:	mov    rcx,QWORD PTR [rsp+0x30]
  405218:	mov    r15,QWORD PTR [rcx+rax*8]
  40521c:	mov    r14,QWORD PTR [rcx+r12*8+0x10]
  405221:	mov    rbx,QWORD PTR [rsp+0x28]
  405226:	test   rbx,rbx
  405229:	je     40524d <Mat_VarRead@plt+0x2ebd>
  40522b:	mov    rax,QWORD PTR [rip+0xfdae]        # 414fe0 <getopt_long_only@@Base+0x8100>
  405232:	mov    rdx,QWORD PTR [rax]
  405235:	mov    rdi,rbx
  405238:	lea    rsi,[rip+0xd598]        # 4127d7 <getopt_long_only@@Base+0x58f7>
  40523f:	call   4021c0 <freopen@plt>
  405244:	test   rax,rax
  405247:	je     406bb4 <Mat_VarRead@plt+0x4824>
  40524d:	mov    rdi,r15
  405250:	xor    esi,esi
  405252:	call   402080 <Mat_Open@plt>
  405257:	test   rax,rax
  40525a:	je     405616 <Mat_VarRead@plt+0x3286>
  405260:	mov    r15,rax
  405263:	mov    rdi,rax
  405266:	mov    rsi,r14
  405269:	call   402390 <Mat_VarRead@plt>
  40526e:	test   rax,rax
  405271:	je     405a37 <Mat_VarRead@plt+0x36a7>
  405277:	mov    rbx,rax
  40527a:	mov    rdi,rax
  40527d:	mov    esi,0x1
  405282:	call   402270 <Mat_VarPrint@plt>
  405287:	mov    rdi,rbx
  40528a:	call   402240 <Mat_VarFree@plt>
  40528f:	xor    ebx,ebx
  405291:	jmp    405a3c <Mat_VarRead@plt+0x36ac>
  405296:	mov    rdi,QWORD PTR [rsp+0x28]
  40529b:	test   rdi,rdi
  40529e:	lea    rax,[rip+0x9e53]        # 40f0f8 <getopt_long_only@@Base+0x2218>
  4052a5:	cmove  rdi,rax
  4052a9:	mov    edx,DWORD PTR [rip+0x10071]        # 415320 <getopt_long_only@@Base+0x8440>
  4052af:	mov    QWORD PTR [rsp+0x28],rdi
  4052b4:	xor    esi,esi
  4052b6:	call   402310 <Mat_CreateVer@plt>
  4052bb:	test   rax,rax
  4052be:	je     405a13 <Mat_VarRead@plt+0x3683>
  4052c4:	mov    r14,rax
  4052c7:	vmovaps xmm0,XMMWORD PTR [rip+0xfa81]        # 414d50 <getopt_long_only@@Base+0x7e70>
  4052cf:	vmovaps XMMWORD PTR [rsp+0xde0],xmm0
  4052d8:	vmovaps xmm0,XMMWORD PTR [rip+0x8da0]        # 40e080 <getopt_long_only@@Base+0x11a0>
  4052e0:	vmovaps XMMWORD PTR [rsp+0x40],xmm0
  4052e6:	lea    rdi,[rip+0xade8]        # 4100d5 <getopt_long_only@@Base+0x31f5>
  4052ed:	mov    esi,0x2
  4052f2:	lea    r12,[rsp+0x40]
  4052f7:	mov    rdx,r12
  4052fa:	lea    rcx,[rsp+0xde0]
  405302:	mov    r8d,0x2
  405308:	call   402300 <Mat_VarCreateStruct@plt>
  40530d:	mov    rbx,rax
  405310:	vmovdqa xmm0,XMMWORD PTR [rip+0x8e08]        # 40e120 <getopt_long_only@@Base+0x1240>
  405318:	vmovdqa XMMWORD PTR [rsp+0x40],xmm0
  40531e:	mov    rdi,QWORD PTR [rsp+0xde8]
  405326:	mov    DWORD PTR [rsp],0x0
  40532d:	mov    esi,0x4
  405332:	mov    edx,0x10
  405337:	mov    ecx,0x2
  40533c:	mov    r8,r12
  40533f:	lea    r9,[rip+0xd389]        # 4126cf <getopt_long_only@@Base+0x57ef>
  405346:	call   4020d0 <Mat_VarCreate@plt>
  40534b:	mov    rsi,QWORD PTR [rsp+0xde8]
  405353:	mov    edx,0x1
  405358:	mov    rdi,rbx
  40535b:	mov    rcx,rax
  40535e:	call   402370 <Mat_VarSetStructFieldByName@plt>
  405363:	movzx  edx,BYTE PTR [rip+0x110f2]        # 41645c <optopt@@Base+0x24>
  40536a:	mov    rdi,r14
  40536d:	mov    rsi,rbx
  405370:	call   4020f0 <Mat_VarWrite@plt>
  405375:	mov    rdi,rbx
  405378:	call   402240 <Mat_VarFree@plt>
  40537d:	mov    rdi,r14
  405380:	call   4022a0 <Mat_Close@plt>
  405385:	xor    eax,eax
  405387:	jmp    405a18 <Mat_VarRead@plt+0x3688>
  40538c:	mov    QWORD PTR [rsp+0x50],r15
  405391:	mov    r14d,DWORD PTR [rsp+0x11c]
  405399:	vmovaps xmm0,XMMWORD PTR [rip+0x8cbf]        # 40e060 <getopt_long_only@@Base+0x1180>
  4053a1:	vmovaps XMMWORD PTR [rsp+0x40],xmm0
  4053a7:	xor    eax,eax
  4053a9:	vmovdqa ymm0,YMMWORD PTR [rip+0x8e6f]        # 40e220 <getopt_long_only@@Base+0x1340>
  4053b1:	vmovdqa xmm7,XMMWORD PTR [rip+0x8d37]        # 40e0f0 <getopt_long_only@@Base+0x1210>
  4053b9:	vmovdqa xmm9,xmm7
  4053bd:	vmovdqa ymm8,YMMWORD PTR [rsp+0x1080]
  4053c6:	vmovdqa xmm7,XMMWORD PTR [rip+0x8d32]        # 40e100 <getopt_long_only@@Base+0x1220>
  4053ce:	vmovdqa ymm10,YMMWORD PTR [rsp+0x1060]
  4053d7:	vmovdqa ymm11,YMMWORD PTR [rip+0x8e61]        # 40e240 <getopt_long_only@@Base+0x1360>
  4053df:	vpcmpeqd ymm12,ymm12,ymm12
  4053e4:	vpsubq ymm1,ymm0,ymm12
  4053e9:	vpermd ymm2,ymm11,ymm1
  4053ee:	vcvtdq2pd ymm3,xmm2
  4053f2:	vmovups YMMWORD PTR [rsp+rax*8+0x860],ymm3
  4053fb:	vcvtdq2ps xmm3,xmm2
  4053ff:	vmovaps XMMWORD PTR [rsp+rax*4+0xc80],xmm3
  405408:	vmovdqa XMMWORD PTR [rsp+rax*4+0x5c0],xmm2
  405411:	vmovdqa XMMWORD PTR [rsp+rax*4+0xba0],xmm2
  40541a:	vpshufb xmm3,xmm2,xmm9
  40541f:	vpaddq ymm4,ymm0,ymm8
  405424:	vpermd ymm5,ymm11,ymm4
  405429:	vpshufb xmm6,xmm5,xmm9
  40542e:	vpunpcklqdq xmm3,xmm3,xmm6
  405432:	vmovdqa XMMWORD PTR [rsp+rax*2+0x1e0],xmm3
  40543b:	vmovdqa XMMWORD PTR [rsp+rax*2+0x380],xmm3
  405444:	vpshufb xmm2,xmm2,xmm7
  405449:	vmovd  DWORD PTR [rsp+rax*1+0x140],xmm2
  405452:	vmovd  DWORD PTR [rsp+rax*1+0x1a0],xmm2
  40545b:	vmovdqu YMMWORD PTR [rsp+rax*8+0xa00],ymm1
  405464:	vmovdqu YMMWORD PTR [rsp+rax*8+0xde0],ymm1
  40546d:	vcvtdq2pd ymm1,xmm5
  405471:	vmovups YMMWORD PTR [rsp+rax*8+0x880],ymm1
  40547a:	vcvtdq2ps xmm1,xmm5
  40547e:	vmovaps XMMWORD PTR [rsp+rax*4+0xc90],xmm1
  405487:	vmovdqa XMMWORD PTR [rsp+rax*4+0x5d0],xmm5
  405490:	vmovdqa XMMWORD PTR [rsp+rax*4+0xbb0],xmm5
  405499:	vpshufb xmm1,xmm5,xmm7
  40549e:	vmovd  DWORD PTR [rsp+rax*1+0x144],xmm1
  4054a7:	vmovd  DWORD PTR [rsp+rax*1+0x1a4],xmm1
  4054b0:	vmovdqu YMMWORD PTR [rsp+rax*8+0xa20],ymm4
  4054b9:	vmovdqu YMMWORD PTR [rsp+rax*8+0xe00],ymm4
  4054c2:	add    rax,0x8
  4054c6:	vpaddq ymm0,ymm0,ymm10
  4054cb:	cmp    rax,0x30
  4054cf:	jne    4053e4 <Mat_VarRead@plt+0x3054>
  4054d5:	mov    rdi,QWORD PTR [rsp+0x28]
  4054da:	test   rdi,rdi
  4054dd:	movabs rax,0x4048800000000000
  4054e7:	mov    QWORD PTR [rsp+0x9e0],rax
  4054ef:	movabs rax,0x4248000042440000
  4054f9:	mov    QWORD PTR [rsp+0xd40],rax
  405501:	movabs rax,0x3200000031
  40550b:	mov    QWORD PTR [rsp+0x680],rax
  405513:	mov    QWORD PTR [rsp+0xc60],rax
  40551b:	mov    DWORD PTR [rsp+0x240],0x320031
  405526:	mov    DWORD PTR [rsp+0x3e0],0x320031
  405531:	mov    WORD PTR [rsp+0x170],0x3231
  40553b:	mov    WORD PTR [rsp+0x1d0],0x3231
  405545:	mov    QWORD PTR [rsp+0xb80],0x31
  405551:	mov    QWORD PTR [rsp+0xf60],0x31
  40555d:	movabs rax,0x4049000000000000
  405567:	mov    QWORD PTR [rsp+0x9e8],rax
  40556f:	mov    QWORD PTR [rsp+0xb88],0x32
  40557b:	mov    QWORD PTR [rsp+0xf68],0x32
  405587:	lea    rax,[rip+0x9b85]        # 40f113 <getopt_long_only@@Base+0x2233>
  40558e:	cmove  rdi,rax
  405592:	mov    r12d,0x1
  405598:	mov    rax,QWORD PTR [rsp+0x100]
  4055a0:	cmp    eax,0x9
  4055a3:	mov    QWORD PTR [rsp+0x28],rdi
  4055a8:	ja     406b87 <Mat_VarRead@plt+0x47f7>
  4055ae:	mov    ebx,0x9
  4055b3:	lea    rcx,[rip+0x8fc6]        # 40e580 <getopt_long_only@@Base+0x16a0>
  4055ba:	movsxd rax,DWORD PTR [rcx+rax*4]
  4055be:	add    rax,rcx
  4055c1:	lea    rcx,[rsp+0x980]
  4055c9:	mov    rdx,rcx
  4055cc:	lea    rcx,[rsp+0x920]
  4055d4:	lea    r15,[rsp+0x8c0]
  4055dc:	lea    r13,[rsp+0x860]
  4055e4:	jmp    rax
  4055e6:	mov    ebx,0x7
  4055eb:	lea    rax,[rsp+0xd10]
  4055f3:	mov    rdx,rax
  4055f6:	lea    rax,[rsp+0xce0]
  4055fe:	mov    rcx,rax
  405601:	lea    r15,[rsp+0xcb0]
  405609:	lea    r13,[rsp+0xc80]
  405611:	jmp    406873 <Mat_VarRead@plt+0x44e3>
  405616:	mov    ebx,0x1
  40561b:	add    DWORD PTR [rsp+0x3c],ebx
  40561f:	jmp    4032ef <Mat_VarRead@plt+0xf5f>
  405624:	mov    QWORD PTR [rsp+0x50],r15
  405629:	mov    r14d,DWORD PTR [rsp+0x11c]
  405631:	vmovaps xmm0,XMMWORD PTR [rip+0x8a27]        # 40e060 <getopt_long_only@@Base+0x1180>
  405639:	vmovaps XMMWORD PTR [rsp+0x40],xmm0
  40563f:	xor    eax,eax
  405641:	vmovdqa ymm0,YMMWORD PTR [rip+0x8bd7]        # 40e220 <getopt_long_only@@Base+0x1340>
  405649:	vmovdqa xmm1,XMMWORD PTR [rip+0x8a8f]        # 40e0e0 <getopt_long_only@@Base+0x1200>
  405651:	vmovdqa xmm8,XMMWORD PTR [rip+0x8a97]        # 40e0f0 <getopt_long_only@@Base+0x1210>
  405659:	vmovdqa xmm9,XMMWORD PTR [rip+0x8a9f]        # 40e100 <getopt_long_only@@Base+0x1220>
  405661:	vmovdqa ymm10,YMMWORD PTR [rip+0x8bd7]        # 40e240 <getopt_long_only@@Base+0x1360>
  405669:	vpcmpeqd ymm11,ymm11,ymm11
  40566e:	vpsubq ymm2,ymm0,ymm11
  405673:	vpermd ymm3,ymm10,ymm2
  405678:	vcvtdq2pd ymm4,xmm3
  40567c:	vmovups YMMWORD PTR [rsp+rax*8+0x860],ymm4
  405685:	vpbroadcastq ymm4,QWORD PTR [rip+0x8cd2]        # 40e360 <getopt_long_only@@Base+0x1480>
  40568e:	vpaddq ymm4,ymm0,ymm4
  405692:	vpbroadcastd xmm5,DWORD PTR [rip+0x8ced]        # 40e388 <getopt_long_only@@Base+0x14a8>
  40569b:	vpaddd xmm5,xmm1,xmm5
  40569f:	vpermd ymm6,ymm10,ymm4
  4056a4:	vcvtdq2pd ymm7,xmm6
  4056a8:	vmovups YMMWORD PTR [rsp+rax*8+0x10e0],ymm7
  4056b1:	vcvtdq2ps xmm7,xmm3
  4056b5:	vmovaps XMMWORD PTR [rsp+rax*4+0xc80],xmm7
  4056be:	vcvtdq2ps xmm7,xmm6
  4056c2:	vmovaps XMMWORD PTR [rsp+rax*4+0xf80],xmm7
  4056cb:	vmovdqa XMMWORD PTR [rsp+rax*4+0x5c0],xmm3
  4056d4:	vmovdqa XMMWORD PTR [rsp+rax*4+0xba0],xmm6
  4056dd:	vmovdqa XMMWORD PTR [rsp+rax*4+0x6a0],xmm3
  4056e6:	vmovdqa XMMWORD PTR [rsp+rax*4+0x780],xmm6
  4056ef:	vpshufb xmm6,xmm3,xmm8
  4056f4:	vmovq  QWORD PTR [rsp+rax*2+0x1e0],xmm6
  4056fd:	vpshufb xmm7,xmm5,xmm8
  405702:	vmovq  QWORD PTR [rsp+rax*2+0x380],xmm7
  40570b:	vmovq  QWORD PTR [rsp+rax*2+0x300],xmm6
  405714:	vmovq  QWORD PTR [rsp+rax*2+0xd60],xmm7
  40571d:	vpshufb xmm3,xmm3,xmm9
  405722:	vmovd  DWORD PTR [rsp+rax*1+0x140],xmm3
  40572b:	vpshufb xmm5,xmm5,xmm9
  405730:	vmovd  DWORD PTR [rsp+rax*1+0x1a0],xmm5
  405739:	vmovd  DWORD PTR [rsp+rax*1+0x260],xmm3
  405742:	vmovd  DWORD PTR [rsp+rax*1+0x2a0],xmm5
  40574b:	vmovdqu YMMWORD PTR [rsp+rax*8+0xa00],ymm2
  405754:	vmovdqu YMMWORD PTR [rsp+rax*8+0xde0],ymm4
  40575d:	vmovdqu YMMWORD PTR [rsp+rax*8+0x1c40],ymm2
  405766:	vmovdqu YMMWORD PTR [rsp+rax*8+0x400],ymm4
  40576f:	add    rax,0x4
  405773:	vpbroadcastq ymm2,QWORD PTR [rip+0x8bec]        # 40e368 <getopt_long_only@@Base+0x1488>
  40577c:	vpaddq ymm0,ymm0,ymm2
  405780:	vpbroadcastd xmm2,DWORD PTR [rip+0x8c03]        # 40e38c <getopt_long_only@@Base+0x14ac>
  405789:	vpaddd xmm1,xmm1,xmm2
  40578d:	cmp    rax,0x30
  405791:	jne    40566e <Mat_VarRead@plt+0x32de>
  405797:	mov    rdi,QWORD PTR [rsp+0x28]
  40579c:	test   rdi,rdi
  40579f:	movabs rax,0x4048800000000000
  4057a9:	mov    QWORD PTR [rsp+0x9e0],rax
  4057b1:	movabs rax,0x4058c00000000000
  4057bb:	mov    QWORD PTR [rsp+0x1260],rax
  4057c3:	mov    DWORD PTR [rsp+0xd40],0x42440000
  4057ce:	mov    DWORD PTR [rsp+0x1040],0x42c60000
  4057d9:	mov    DWORD PTR [rsp+0x680],0x31
  4057e4:	mov    DWORD PTR [rsp+0xc60],0x63
  4057ef:	mov    DWORD PTR [rsp+0x760],0x31
  4057fa:	mov    DWORD PTR [rsp+0x840],0x63
  405805:	mov    WORD PTR [rsp+0x240],0x31
  40580f:	mov    WORD PTR [rsp+0x3e0],0x63
  405819:	mov    WORD PTR [rsp+0x360],0x31
  405823:	mov    WORD PTR [rsp+0xdc0],0x63
  40582d:	mov    BYTE PTR [rsp+0x170],0x31
  405835:	mov    BYTE PTR [rsp+0x1d0],0x63
  40583d:	mov    BYTE PTR [rsp+0x290],0x31
  405845:	mov    BYTE PTR [rsp+0x2d0],0x63
  40584d:	mov    QWORD PTR [rsp+0xb80],0x31
  405859:	mov    QWORD PTR [rsp+0xf60],0x63
  405865:	mov    QWORD PTR [rsp+0x1dc0],0x31
  405871:	mov    QWORD PTR [rsp+0x580],0x63
  40587d:	movabs rax,0x4049000000000000
  405887:	mov    QWORD PTR [rsp+0x9e8],rax
  40588f:	movabs rax,0x4059000000000000
  405899:	mov    QWORD PTR [rsp+0x1268],rax
  4058a1:	mov    DWORD PTR [rsp+0xd44],0x42480000
  4058ac:	mov    DWORD PTR [rsp+0x1044],0x42c80000
  4058b7:	mov    DWORD PTR [rsp+0x684],0x32
  4058c2:	mov    DWORD PTR [rsp+0xc64],0x64
  4058cd:	mov    DWORD PTR [rsp+0x764],0x32
  4058d8:	mov    DWORD PTR [rsp+0x844],0x64
  4058e3:	mov    WORD PTR [rsp+0x242],0x32
  4058ed:	mov    WORD PTR [rsp+0x3e2],0x64
  4058f7:	mov    WORD PTR [rsp+0x362],0x32
  405901:	mov    WORD PTR [rsp+0xdc2],0x64
  40590b:	mov    BYTE PTR [rsp+0x171],0x32
  405913:	mov    BYTE PTR [rsp+0x1d1],0x64
  40591b:	mov    BYTE PTR [rsp+0x291],0x32
  405923:	mov    BYTE PTR [rsp+0x2d1],0x64
  40592b:	mov    QWORD PTR [rsp+0xb88],0x32
  405937:	mov    QWORD PTR [rsp+0xf68],0x64
  405943:	mov    QWORD PTR [rsp+0x1dc8],0x32
  40594f:	mov    QWORD PTR [rsp+0x588],0x64
  40595b:	lea    rax,[rip+0x97d2]        # 40f134 <getopt_long_only@@Base+0x2254>
  405962:	cmove  rdi,rax
  405966:	mov    r15d,0x1
  40596c:	mov    rax,QWORD PTR [rsp+0x100]
  405974:	cmp    eax,0x9
  405977:	mov    QWORD PTR [rsp+0x28],rdi
  40597c:	ja     4084b1 <Mat_VarRead@plt+0x6121>
  405982:	lea    rcx,[rip+0x8bcf]        # 40e558 <getopt_long_only@@Base+0x1678>
  405989:	movsxd rax,DWORD PTR [rcx+rax*4]
  40598d:	add    rax,rcx
  405990:	jmp    rax
  405992:	lea    rax,[rsp+0x860]
  40599a:	mov    QWORD PTR [rsp+0x60],rax
  40599f:	lea    rax,[rsp+0x10e0]
  4059a7:	mov    QWORD PTR [rsp+0x68],rax
  4059ac:	lea    rax,[rsp+0x8c0]
  4059b4:	mov    QWORD PTR [rsp+0x70],rax
  4059b9:	lea    rax,[rsp+0x1140]
  4059c1:	mov    QWORD PTR [rsp+0x78],rax
  4059c6:	lea    rax,[rsp+0x920]
  4059ce:	mov    QWORD PTR [rsp+0x80],rax
  4059d6:	lea    rax,[rsp+0x11a0]
  4059de:	mov    QWORD PTR [rsp+0x88],rax
  4059e6:	lea    rax,[rsp+0x980]
  4059ee:	mov    QWORD PTR [rsp+0x90],rax
  4059f6:	lea    rax,[rsp+0x1200]
  4059fe:	mov    QWORD PTR [rsp+0x98],rax
  405a06:	mov    DWORD PTR [rsp+0x58],0x9
  405a0e:	jmp    4071b7 <Mat_VarRead@plt+0x4e27>
  405a13:	mov    eax,0x1
  405a18:	mov    rbx,QWORD PTR [rsp+0x30]
  405a1d:	inc    r15d
  405a20:	add    DWORD PTR [rsp+0x3c],eax
  405a24:	cmp    r15d,DWORD PTR [rsp+0x118]
  405a2c:	jl     4028e3 <Mat_VarRead@plt+0x553>
  405a32:	jmp    40bfa9 <Mat_VarRead@plt+0x9c19>
  405a37:	mov    ebx,0x1
  405a3c:	mov    rdi,r15
  405a3f:	call   4022a0 <Mat_Close@plt>
  405a44:	add    DWORD PTR [rsp+0x3c],ebx
  405a48:	jmp    4032ef <Mat_VarRead@plt+0xf5f>
  405a4d:	mov    QWORD PTR [rsp+0x50],r15
  405a52:	mov    rdi,QWORD PTR [rsp+0x28]
  405a57:	test   rdi,rdi
  405a5a:	lea    rax,[rip+0xc03a]        # 411a9b <getopt_long_only@@Base+0x4bbb>
  405a61:	cmove  rdi,rax
  405a65:	vpxor  xmm0,xmm0,xmm0
  405a69:	vmovdqa XMMWORD PTR [rsp+0x40],xmm0
  405a6f:	mov    edx,DWORD PTR [rip+0xf8ab]        # 415320 <getopt_long_only@@Base+0x8440>
  405a75:	mov    QWORD PTR [rsp+0x28],rdi
  405a7a:	xor    esi,esi
  405a7c:	call   402310 <Mat_CreateVer@plt>
  405a81:	test   rax,rax
  405a84:	je     4062dd <Mat_VarRead@plt+0x3f4d>
  405a8a:	mov    r14,rax
  405a8d:	mov    QWORD PTR [rsp+0xc0],0x0
  405a99:	vmovaps xmm0,XMMWORD PTR [rip+0x862f]        # 40e0d0 <getopt_long_only@@Base+0x11f0>
  405aa1:	vmovaps XMMWORD PTR [rsp+0x40],xmm0
  405aa7:	mov    DWORD PTR [rsp],0x0
  405aae:	lea    rdi,[rip+0xcd07]        # 4127bc <getopt_long_only@@Base+0x58dc>
  405ab5:	mov    esi,0x2
  405aba:	mov    edx,0x16
  405abf:	mov    ecx,0x2
  405ac4:	lea    r13,[rsp+0x40]
  405ac9:	mov    r8,r13
  405acc:	lea    rax,[rsp+0xc0]
  405ad4:	mov    r9,rax
  405ad7:	call   4020d0 <Mat_VarCreate@plt>
  405adc:	mov    rbx,rax
  405adf:	movzx  edx,BYTE PTR [rip+0x10976]        # 41645c <optopt@@Base+0x24>
  405ae6:	mov    rdi,r14
  405ae9:	mov    rsi,rax
  405aec:	call   4020f0 <Mat_VarWrite@plt>
  405af1:	mov    rdi,rbx
  405af4:	call   402240 <Mat_VarFree@plt>
  405af9:	mov    DWORD PTR [rsp],0x0
  405b00:	lea    r12,[rip+0xcca7]        # 4127ae <getopt_long_only@@Base+0x58ce>
  405b07:	mov    rdi,r12
  405b0a:	mov    esi,0x6
  405b0f:	mov    edx,0x9
  405b14:	mov    ecx,0x2
  405b19:	mov    r8,r13
  405b1c:	xor    r9d,r9d
  405b1f:	call   4020d0 <Mat_VarCreate@plt>
  405b24:	mov    QWORD PTR [rsp+0xc0],rax
  405b2c:	mov    DWORD PTR [rsp],0x0
  405b33:	lea    r12,[rip+0xcc7b]        # 4127b5 <getopt_long_only@@Base+0x58d5>
  405b3a:	mov    rdi,r12
  405b3d:	mov    esi,0x6
  405b42:	mov    edx,0x9
  405b47:	mov    ecx,0x2
  405b4c:	mov    r8,r13
  405b4f:	xor    r9d,r9d
  405b52:	call   4020d0 <Mat_VarCreate@plt>
  405b57:	mov    QWORD PTR [rsp+0xc8],rax
  405b5f:	mov    QWORD PTR [rsp+0xd0],0x0
  405b6b:	vmovaps xmm0,XMMWORD PTR [rip+0x855d]        # 40e0d0 <getopt_long_only@@Base+0x11f0>
  405b73:	vmovaps XMMWORD PTR [rsp+0x40],xmm0
  405b79:	mov    DWORD PTR [rsp],0x0
  405b80:	lea    rdi,[rip+0xcc3a]        # 4127c1 <getopt_long_only@@Base+0x58e1>
  405b87:	mov    esi,0x2
  405b8c:	mov    edx,0x16
  405b91:	mov    ecx,0x2
  405b96:	mov    r8,r13
  405b99:	lea    r15,[rsp+0xc0]
  405ba1:	mov    r9,r15
  405ba4:	call   4020d0 <Mat_VarCreate@plt>
  405ba9:	mov    rbx,rax
  405bac:	movzx  edx,BYTE PTR [rip+0x108a9]        # 41645c <optopt@@Base+0x24>
  405bb3:	mov    rdi,r14
  405bb6:	mov    rsi,rax
  405bb9:	call   4020f0 <Mat_VarWrite@plt>
  405bbe:	mov    rdi,rbx
  405bc1:	call   402240 <Mat_VarFree@plt>
  405bc6:	mov    DWORD PTR [rsp],0x0
  405bcd:	lea    rdi,[rip+0xcbda]        # 4127ae <getopt_long_only@@Base+0x58ce>
  405bd4:	mov    esi,0x6
  405bd9:	mov    edx,0x9
  405bde:	mov    ecx,0x2
  405be3:	mov    r8,r13
  405be6:	xor    r9d,r9d
  405be9:	call   4020d0 <Mat_VarCreate@plt>
  405bee:	mov    QWORD PTR [rsp+0xc0],rax
  405bf6:	mov    DWORD PTR [rsp],0x0
  405bfd:	mov    rdi,r12
  405c00:	mov    esi,0x6
  405c05:	mov    edx,0x9
  405c0a:	mov    ecx,0x2
  405c0f:	mov    r8,r13
  405c12:	xor    r9d,r9d
  405c15:	call   4020d0 <Mat_VarCreate@plt>
  405c1a:	mov    QWORD PTR [rsp+0xc8],rax
  405c22:	mov    QWORD PTR [rsp+0xd0],0x0
  405c2e:	vmovaps xmm0,XMMWORD PTR [rip+0x83ea]        # 40e020 <getopt_long_only@@Base+0x1140>
  405c36:	vmovaps XMMWORD PTR [rsp+0x40],xmm0
  405c3c:	mov    DWORD PTR [rsp],0x0
  405c43:	lea    rdi,[rip+0xcb7c]        # 4127c6 <getopt_long_only@@Base+0x58e6>
  405c4a:	mov    esi,0x2
  405c4f:	mov    edx,0x16
  405c54:	mov    ecx,0x2
  405c59:	mov    r8,r13
  405c5c:	mov    r9,r15
  405c5f:	mov    r12,r15
  405c62:	call   4020d0 <Mat_VarCreate@plt>
  405c67:	mov    rbx,rax
  405c6a:	movzx  edx,BYTE PTR [rip+0x107eb]        # 41645c <optopt@@Base+0x24>
  405c71:	mov    rdi,r14
  405c74:	mov    rsi,rax
  405c77:	call   4020f0 <Mat_VarWrite@plt>
  405c7c:	mov    rdi,rbx
  405c7f:	call   402240 <Mat_VarFree@plt>
  405c84:	vmovaps xmm0,XMMWORD PTR [rip+0x8444]        # 40e0d0 <getopt_long_only@@Base+0x11f0>
  405c8c:	vmovaps XMMWORD PTR [rsp+0x40],xmm0
  405c92:	mov    DWORD PTR [rsp],0x0
  405c99:	lea    r15,[rip+0xcb0e]        # 4127ae <getopt_long_only@@Base+0x58ce>
  405ca0:	mov    rdi,r15
  405ca3:	mov    esi,0x6
  405ca8:	mov    edx,0x9
  405cad:	mov    ecx,0x2
  405cb2:	mov    r8,r13
  405cb5:	xor    r9d,r9d
  405cb8:	call   4020d0 <Mat_VarCreate@plt>
  405cbd:	mov    QWORD PTR [rsp+0xc0],rax
  405cc5:	mov    DWORD PTR [rsp],0x0
  405ccc:	lea    rbx,[rip+0xcae2]        # 4127b5 <getopt_long_only@@Base+0x58d5>
  405cd3:	mov    rdi,rbx
  405cd6:	mov    esi,0x4
  405cdb:	mov    edx,0x2
  405ce0:	mov    ecx,0x2
  405ce5:	mov    r8,r13
  405ce8:	xor    r9d,r9d
  405ceb:	call   4020d0 <Mat_VarCreate@plt>
  405cf0:	mov    QWORD PTR [rsp+0xc8],rax
  405cf8:	mov    DWORD PTR [rsp],0x0
  405cff:	mov    rdi,r15
  405d02:	mov    esi,0x2
  405d07:	mov    edx,0x16
  405d0c:	mov    ecx,0x2
  405d11:	mov    r8,r13
  405d14:	xor    r9d,r9d
  405d17:	call   4020d0 <Mat_VarCreate@plt>
  405d1c:	mov    QWORD PTR [rsp+0xd0],rax
  405d24:	mov    DWORD PTR [rsp],0x0
  405d2b:	mov    rdi,rbx
  405d2e:	mov    esi,0x1
  405d33:	mov    edx,0x15
  405d38:	mov    ecx,0x2
  405d3d:	mov    r8,r13
  405d40:	xor    r9d,r9d
  405d43:	call   4020d0 <Mat_VarCreate@plt>
  405d48:	mov    QWORD PTR [rsp+0xd8],rax
  405d50:	mov    QWORD PTR [rsp+0xe0],0x0
  405d5c:	vmovdqa xmm0,XMMWORD PTR [rip+0x831c]        # 40e080 <getopt_long_only@@Base+0x11a0>
  405d64:	vmovdqa XMMWORD PTR [rsp+0x40],xmm0
  405d6a:	mov    DWORD PTR [rsp],0x0
  405d71:	lea    rdi,[rip+0xca53]        # 4127cb <getopt_long_only@@Base+0x58eb>
  405d78:	mov    esi,0x2
  405d7d:	mov    edx,0x16
  405d82:	mov    ecx,0x2
  405d87:	mov    r8,r13
  405d8a:	lea    r13,[rsp+0x400]
  405d92:	mov    r9,r12
  405d95:	call   4020d0 <Mat_VarCreate@plt>
  405d9a:	mov    rbx,rax
  405d9d:	movzx  edx,BYTE PTR [rip+0x106b8]        # 41645c <optopt@@Base+0x24>
  405da4:	mov    rdi,r14
  405da7:	mov    rsi,rax
  405daa:	call   4020f0 <Mat_VarWrite@plt>
  405daf:	mov    rdi,rbx
  405db2:	call   402240 <Mat_VarFree@plt>
  405db7:	mov    rdi,r14
  405dba:	call   4022a0 <Mat_Close@plt>
  405dbf:	xor    eax,eax
  405dc1:	jmp    4062e2 <Mat_VarRead@plt+0x3f52>
  405dc6:	mov    r12,r15
  405dc9:	mov    rdi,QWORD PTR [rsp+0x28]
  405dce:	test   rdi,rdi
  405dd1:	vmovaps xmm0,XMMWORD PTR [rip+0x8367]        # 40e140 <getopt_long_only@@Base+0x1260>
  405dd9:	vmovaps XMMWORD PTR [rsp+0x40],xmm0
  405ddf:	vpxor  xmm1,xmm1,xmm1
  405de3:	vmovdqu YMMWORD PTR [rsp+0x330],ymm1
  405dec:	vmovdqa YMMWORD PTR [rsp+0x320],ymm1
  405df5:	vmovdqa YMMWORD PTR [rsp+0x300],ymm1
  405dfe:	vmovdqu YMMWORD PTR [rsp+0x70],ymm1
  405e04:	vmovdqa YMMWORD PTR [rsp+0x60],ymm1
  405e0a:	vxorps xmm0,xmm0,xmm0
  405e0e:	vmovups XMMWORD PTR [rsp+0x189],xmm0
  405e17:	vmovaps XMMWORD PTR [rsp+0x180],xmm0
  405e20:	vmovdqa YMMWORD PTR [rsp+0xc0],ymm1
  405e29:	mov    QWORD PTR [rsp+0xe0],0x0
  405e35:	mov    BYTE PTR [rsp+0x180],0x1
  405e3d:	mov    DWORD PTR [rsp+0x300],0x1
  405e48:	movabs rax,0x1000100010001
  405e52:	mov    QWORD PTR [rsp+0x60],rax
  405e57:	mov    WORD PTR [rsp+0x68],0x1
  405e5e:	mov    BYTE PTR [rsp+0x186],0x1
  405e66:	movabs rax,0x100000001
  405e70:	mov    QWORD PTR [rsp+0x314],rax
  405e78:	mov    DWORD PTR [rsp+0x6c],0x10001
  405e80:	mov    DWORD PTR [rsp+0x70],0x10001
  405e88:	mov    BYTE PTR [rsp+0x18c],0x1
  405e90:	mov    QWORD PTR [rsp+0x328],rax
  405e98:	mov    DWORD PTR [rsp+0x330],0x1
  405ea3:	mov    DWORD PTR [rsp+0x78],0x10001
  405eab:	mov    WORD PTR [rsp+0x7c],0x1
  405eb2:	mov    BYTE PTR [rsp+0x192],0x1
  405eba:	vpbroadcastd xmm0,DWORD PTR [rip+0x84cd]        # 40e390 <getopt_long_only@@Base+0x14b0>
  405ec3:	vmovdqu XMMWORD PTR [rsp+0x33c],xmm0
  405ecc:	mov    DWORD PTR [rsp+0x84],0x10001
  405ed7:	mov    BYTE PTR [rsp+0x198],0x1
  405edf:	vmovdqa XMMWORD PTR [rsp+0x350],xmm0
  405ee8:	mov    DWORD PTR [rsp+0x360],0x1
  405ef3:	lea    rax,[rip+0x9263]        # 40f15d <getopt_long_only@@Base+0x227d>
  405efa:	cmove  rdi,rax
  405efe:	mov    WORD PTR [rsp+0x90],0x1
  405f08:	mov    edx,DWORD PTR [rip+0xf412]        # 415320 <getopt_long_only@@Base+0x8440>
  405f0e:	mov    QWORD PTR [rsp+0x28],rdi
  405f13:	xor    esi,esi
  405f15:	vzeroupper 
  405f18:	call   402310 <Mat_CreateVer@plt>
  405f1d:	test   rax,rax
  405f20:	je     40602d <Mat_VarRead@plt+0x3c9d>
  405f26:	mov    r14,rax
  405f29:	mov    DWORD PTR [rsp],0x200
  405f30:	xor    r15d,r15d
  405f33:	xor    edi,edi
  405f35:	mov    esi,0xd
  405f3a:	mov    edx,0x6
  405f3f:	mov    ecx,0x2
  405f44:	lea    rbx,[rsp+0x40]
  405f49:	mov    r8,rbx
  405f4c:	lea    r9,[rsp+0x300]
  405f54:	call   4020d0 <Mat_VarCreate@plt>
  405f59:	mov    QWORD PTR [rsp+0xc0],rax
  405f61:	mov    DWORD PTR [rsp],0x200
  405f68:	xor    edi,edi
  405f6a:	mov    esi,0xb
  405f6f:	mov    edx,0x4
  405f74:	mov    ecx,0x2
  405f79:	mov    r8,rbx
  405f7c:	lea    r9,[rsp+0x60]
  405f81:	call   4020d0 <Mat_VarCreate@plt>
  405f86:	mov    QWORD PTR [rsp+0xc8],rax
  405f8e:	mov    DWORD PTR [rsp],0x200
  405f95:	xor    edi,edi
  405f97:	mov    esi,0x9
  405f9c:	mov    edx,0x2
  405fa1:	mov    ecx,0x2
  405fa6:	mov    r8,rbx
  405fa9:	lea    r9,[rsp+0x180]
  405fb1:	call   4020d0 <Mat_VarCreate@plt>
  405fb6:	mov    QWORD PTR [rsp+0xd0],rax
  405fbe:	mov    QWORD PTR [rsp+0x40],0x0
  405fc7:	mov    DWORD PTR [rsp],0x200
  405fce:	xor    edi,edi
  405fd0:	mov    esi,0x9
  405fd5:	mov    edx,0x2
  405fda:	mov    ecx,0x2
  405fdf:	mov    r8,rbx
  405fe2:	xor    r9d,r9d
  405fe5:	call   4020d0 <Mat_VarCreate@plt>
  405fea:	mov    QWORD PTR [rsp+0xd8],rax
  405ff2:	vmovdqa xmm0,XMMWORD PTR [rip+0x8116]        # 40e110 <getopt_long_only@@Base+0x1230>
  405ffa:	vmovdqa XMMWORD PTR [rsp+0x40],xmm0
  406000:	mov    DWORD PTR [rsp],0x0
  406007:	lea    rdi,[rip+0xa0c7]        # 4100d5 <getopt_long_only@@Base+0x31f5>
  40600e:	mov    esi,0x1
  406013:	mov    edx,0x15
  406018:	mov    ecx,0x2
  40601d:	mov    r8,rbx
  406020:	lea    r9,[rsp+0xc0]
  406028:	jmp    4032a4 <Mat_VarRead@plt+0xf14>
  40602d:	mov    r15d,0x1
  406033:	mov    rbx,QWORD PTR [rsp+0x30]
  406038:	inc    r12d
  40603b:	add    DWORD PTR [rsp+0x3c],r15d
  406040:	mov    r15,r12
  406043:	cmp    r15d,DWORD PTR [rsp+0x118]
  40604b:	jl     4028e3 <Mat_VarRead@plt+0x553>
  406051:	jmp    40bfa9 <Mat_VarRead@plt+0x9c19>
  406056:	vmovaps xmm0,XMMWORD PTR [rip+0x8182]        # 40e1e0 <getopt_long_only@@Base+0x1300>
  40605e:	vmovaps XMMWORD PTR [rsp+0x40],xmm0
  406064:	xor    eax,eax
  406066:	vmovdqa ymm0,YMMWORD PTR [rip+0x81b2]        # 40e220 <getopt_long_only@@Base+0x1340>
  40606e:	vmovdqa xmm7,XMMWORD PTR [rip+0x807a]        # 40e0f0 <getopt_long_only@@Base+0x1210>
  406076:	vmovdqa xmm9,xmm7
  40607a:	vmovdqa ymm8,YMMWORD PTR [rsp+0x1080]
  406083:	vmovdqa xmm7,XMMWORD PTR [rip+0x8075]        # 40e100 <getopt_long_only@@Base+0x1220>
  40608b:	vmovdqa ymm10,YMMWORD PTR [rsp+0x1060]
  406094:	vmovdqa ymm11,YMMWORD PTR [rip+0x81a4]        # 40e240 <getopt_long_only@@Base+0x1360>
  40609c:	vpcmpeqd ymm12,ymm12,ymm12
  4060a1:	vpsubq ymm1,ymm0,ymm12
  4060a6:	vpermd ymm2,ymm11,ymm1
  4060ab:	vcvtdq2pd ymm3,xmm2
  4060af:	vmovups YMMWORD PTR [rsp+rax*8+0x860],ymm3
  4060b8:	vcvtdq2ps xmm3,xmm2
  4060bc:	vmovaps XMMWORD PTR [rsp+rax*4+0xc80],xmm3
  4060c5:	vmovdqa XMMWORD PTR [rsp+rax*4+0x5c0],xmm2
  4060ce:	vmovdqa XMMWORD PTR [rsp+rax*4+0xba0],xmm2
  4060d7:	vpshufb xmm3,xmm2,xmm9
  4060dc:	vpaddq ymm4,ymm0,ymm8
  4060e1:	vpermd ymm5,ymm11,ymm4
  4060e6:	vpshufb xmm6,xmm5,xmm9
  4060eb:	vpunpcklqdq xmm3,xmm3,xmm6
  4060ef:	vmovdqa XMMWORD PTR [rsp+rax*2+0x1e0],xmm3
  4060f8:	vmovdqa XMMWORD PTR [rsp+rax*2+0x380],xmm3
  406101:	vpshufb xmm2,xmm2,xmm7
  406106:	vmovd  DWORD PTR [rsp+rax*1+0x140],xmm2
  40610f:	vmovd  DWORD PTR [rsp+rax*1+0x1a0],xmm2
  406118:	vmovdqu YMMWORD PTR [rsp+rax*8+0xa00],ymm1
  406121:	vmovdqu YMMWORD PTR [rsp+rax*8+0xde0],ymm1
  40612a:	vcvtdq2pd ymm1,xmm5
  40612e:	vmovups YMMWORD PTR [rsp+rax*8+0x880],ymm1
  406137:	vcvtdq2ps xmm1,xmm5
  40613b:	vmovaps XMMWORD PTR [rsp+rax*4+0xc90],xmm1
  406144:	vmovdqa XMMWORD PTR [rsp+rax*4+0x5d0],xmm5
  40614d:	vmovdqa XMMWORD PTR [rsp+rax*4+0xbb0],xmm5
  406156:	vpshufb xmm1,xmm5,xmm7
  40615b:	vmovd  DWORD PTR [rsp+rax*1+0x144],xmm1
  406164:	vmovd  DWORD PTR [rsp+rax*1+0x1a4],xmm1
  40616d:	vmovdqu YMMWORD PTR [rsp+rax*8+0xa20],ymm4
  406176:	vmovdqu YMMWORD PTR [rsp+rax*8+0xe00],ymm4
  40617f:	add    rax,0x8
  406183:	vpaddq ymm0,ymm0,ymm10
  406188:	cmp    rax,0x30
  40618c:	jne    4060a1 <Mat_VarRead@plt+0x3d11>
  406192:	mov    rdi,QWORD PTR [rsp+0x28]
  406197:	test   rdi,rdi
  40619a:	movabs rax,0x4048800000000000
  4061a4:	mov    QWORD PTR [rsp+0x9e0],rax
  4061ac:	movabs rax,0x4248000042440000
  4061b6:	mov    QWORD PTR [rsp+0xd40],rax
  4061be:	movabs rax,0x3200000031
  4061c8:	mov    QWORD PTR [rsp+0x680],rax
  4061d0:	mov    QWORD PTR [rsp+0xc60],rax
  4061d8:	mov    DWORD PTR [rsp+0x240],0x320031
  4061e3:	mov    DWORD PTR [rsp+0x3e0],0x320031
  4061ee:	mov    WORD PTR [rsp+0x170],0x3231
  4061f8:	mov    WORD PTR [rsp+0x1d0],0x3231
  406202:	mov    QWORD PTR [rsp+0xb80],0x31
  40620e:	mov    QWORD PTR [rsp+0xf60],0x31
  40621a:	movabs rax,0x4049000000000000
  406224:	mov    QWORD PTR [rsp+0x9e8],rax
  40622c:	mov    QWORD PTR [rsp+0xb88],0x32
  406238:	mov    QWORD PTR [rsp+0xf68],0x32
  406244:	lea    rax,[rip+0x8f31]        # 40f17c <getopt_long_only@@Base+0x229c>
  40624b:	cmove  rdi,rax
  40624f:	mov    eax,0x1
  406254:	mov    QWORD PTR [rsp+0x58],rax
  406259:	mov    rax,QWORD PTR [rsp+0x100]
  406261:	cmp    eax,0x9
  406264:	mov    QWORD PTR [rsp+0x28],rdi
  406269:	ja     407e1e <Mat_VarRead@plt+0x5a8e>
  40626f:	mov    edx,0x9
  406274:	lea    rcx,[rip+0x82b5]        # 40e530 <getopt_long_only@@Base+0x1650>
  40627b:	movsxd rax,DWORD PTR [rcx+rax*4]
  40627f:	add    rax,rcx
  406282:	lea    r13,[rsp+0x860]
  40628a:	lea    r12,[rsp+0x8c0]
  406292:	mov    rsi,r12
  406295:	lea    rcx,[rsp+0x920]
  40629d:	mov    r12,rcx
  4062a0:	lea    rcx,[rsp+0x980]
  4062a8:	mov    rbx,rcx
  4062ab:	jmp    rax
  4062ad:	mov    edx,0x7
  4062b2:	lea    r13,[rsp+0xc80]
  4062ba:	lea    r12,[rsp+0xcb0]
  4062c2:	mov    rsi,r12
  4062c5:	lea    rax,[rsp+0xce0]
  4062cd:	mov    r12,rax
  4062d0:	lea    rax,[rsp+0xd10]
  4062d8:	jmp    407c9e <Mat_VarRead@plt+0x590e>
  4062dd:	mov    eax,0x1
  4062e2:	mov    rbx,QWORD PTR [rsp+0x30]
  4062e7:	mov    r15,QWORD PTR [rsp+0x50]
  4062ec:	inc    r15d
  4062ef:	add    DWORD PTR [rsp+0x3c],eax
  4062f3:	cmp    r15d,DWORD PTR [rsp+0x118]
  4062fb:	jl     4028e3 <Mat_VarRead@plt+0x553>
  406301:	jmp    40bfa9 <Mat_VarRead@plt+0x9c19>
  406306:	mov    QWORD PTR [rsp+0x50],r15
  40630b:	vmovaps xmm0,XMMWORD PTR [rip+0x7ecd]        # 40e1e0 <getopt_long_only@@Base+0x1300>
  406313:	vmovaps XMMWORD PTR [rsp+0x40],xmm0
  406319:	vxorps xmm0,xmm0,xmm0
  40631d:	vmovaps YMMWORD PTR [rsp+0x80],ymm0
  406326:	vmovaps YMMWORD PTR [rsp+0x60],ymm0
  40632c:	xor    eax,eax
  40632e:	vmovdqa ymm0,YMMWORD PTR [rip+0x7eea]        # 40e220 <getopt_long_only@@Base+0x1340>
  406336:	vmovdqa xmm1,XMMWORD PTR [rip+0x7da2]        # 40e0e0 <getopt_long_only@@Base+0x1200>
  40633e:	vmovdqa xmm8,XMMWORD PTR [rip+0x7daa]        # 40e0f0 <getopt_long_only@@Base+0x1210>
  406346:	vmovdqa xmm9,XMMWORD PTR [rip+0x7db2]        # 40e100 <getopt_long_only@@Base+0x1220>
  40634e:	vmovdqa ymm10,YMMWORD PTR [rip+0x7eea]        # 40e240 <getopt_long_only@@Base+0x1360>
  406356:	vpcmpeqd ymm11,ymm11,ymm11
  40635b:	vpsubq ymm2,ymm0,ymm11
  406360:	vpermd ymm3,ymm10,ymm2
  406365:	vcvtdq2pd ymm4,xmm3
  406369:	vmovups YMMWORD PTR [rsp+rax*8+0x860],ymm4
  406372:	vpbroadcastq ymm4,QWORD PTR [rip+0x7fe5]        # 40e360 <getopt_long_only@@Base+0x1480>
  40637b:	vpaddq ymm4,ymm0,ymm4
  40637f:	vpbroadcastd xmm5,DWORD PTR [rip+0x8000]        # 40e388 <getopt_long_only@@Base+0x14a8>
  406388:	vpaddd xmm5,xmm1,xmm5
  40638c:	vpermd ymm6,ymm10,ymm4
  406391:	vcvtdq2pd ymm7,xmm6
  406395:	vmovups YMMWORD PTR [rsp+rax*8+0x10e0],ymm7
  40639e:	vcvtdq2ps xmm7,xmm3
  4063a2:	vmovaps XMMWORD PTR [rsp+rax*4+0xc80],xmm7
  4063ab:	vcvtdq2ps xmm7,xmm6
  4063af:	vmovaps XMMWORD PTR [rsp+rax*4+0xf80],xmm7
  4063b8:	vmovdqa XMMWORD PTR [rsp+rax*4+0x5c0],xmm3
  4063c1:	vmovdqa XMMWORD PTR [rsp+rax*4+0xba0],xmm6
  4063ca:	vmovdqa XMMWORD PTR [rsp+rax*4+0x6a0],xmm3
  4063d3:	vmovdqa XMMWORD PTR [rsp+rax*4+0x780],xmm6
  4063dc:	vpshufb xmm6,xmm3,xmm8
  4063e1:	vmovq  QWORD PTR [rsp+rax*2+0x1e0],xmm6
  4063ea:	vpshufb xmm7,xmm5,xmm8
  4063ef:	vmovq  QWORD PTR [rsp+rax*2+0x380],xmm7
  4063f8:	vmovq  QWORD PTR [rsp+rax*2+0x300],xmm6
  406401:	vmovq  QWORD PTR [rsp+rax*2+0xd60],xmm7
  40640a:	vpshufb xmm3,xmm3,xmm9
  40640f:	vmovd  DWORD PTR [rsp+rax*1+0x140],xmm3
  406418:	vpshufb xmm5,xmm5,xmm9
  40641d:	vmovd  DWORD PTR [rsp+rax*1+0x1a0],xmm5
  406426:	vmovd  DWORD PTR [rsp+rax*1+0x260],xmm3
  40642f:	vmovd  DWORD PTR [rsp+rax*1+0x2a0],xmm5
  406438:	vmovdqu YMMWORD PTR [rsp+rax*8+0xa00],ymm2
  406441:	vmovdqu YMMWORD PTR [rsp+rax*8+0xde0],ymm4
  40644a:	vmovdqu YMMWORD PTR [rsp+rax*8+0x1c40],ymm2
  406453:	vmovdqu YMMWORD PTR [rsp+rax*8+0x400],ymm4
  40645c:	add    rax,0x4
  406460:	vpbroadcastq ymm2,QWORD PTR [rip+0x7eff]        # 40e368 <getopt_long_only@@Base+0x1488>
  406469:	vpaddq ymm0,ymm0,ymm2
  40646d:	vpbroadcastd xmm2,DWORD PTR [rip+0x7f16]        # 40e38c <getopt_long_only@@Base+0x14ac>
  406476:	vpaddd xmm1,xmm1,xmm2
  40647a:	cmp    rax,0x30
  40647e:	jne    40635b <Mat_VarRead@plt+0x3fcb>
  406484:	mov    rdi,QWORD PTR [rsp+0x28]
  406489:	test   rdi,rdi
  40648c:	movabs rax,0x4048800000000000
  406496:	mov    QWORD PTR [rsp+0x9e0],rax
  40649e:	movabs rax,0x4058c00000000000
  4064a8:	mov    QWORD PTR [rsp+0x1260],rax
  4064b0:	mov    DWORD PTR [rsp+0xd40],0x42440000
  4064bb:	mov    DWORD PTR [rsp+0x1040],0x42c60000
  4064c6:	mov    DWORD PTR [rsp+0x680],0x31
  4064d1:	mov    DWORD PTR [rsp+0xc60],0x63
  4064dc:	mov    DWORD PTR [rsp+0x760],0x31
  4064e7:	mov    DWORD PTR [rsp+0x840],0x63
  4064f2:	mov    WORD PTR [rsp+0x240],0x31
  4064fc:	mov    WORD PTR [rsp+0x3e0],0x63
  406506:	mov    WORD PTR [rsp+0x360],0x31
  406510:	mov    WORD PTR [rsp+0xdc0],0x63
  40651a:	mov    BYTE PTR [rsp+0x170],0x31
  406522:	mov    BYTE PTR [rsp+0x1d0],0x63
  40652a:	mov    BYTE PTR [rsp+0x290],0x31
  406532:	mov    BYTE PTR [rsp+0x2d0],0x63
  40653a:	mov    QWORD PTR [rsp+0xb80],0x31
  406546:	mov    QWORD PTR [rsp+0xf60],0x63
  406552:	mov    QWORD PTR [rsp+0x1dc0],0x31
  40655e:	mov    QWORD PTR [rsp+0x580],0x63
  40656a:	movabs rax,0x4049000000000000
  406574:	mov    QWORD PTR [rsp+0x9e8],rax
  40657c:	movabs rax,0x4059000000000000
  406586:	mov    QWORD PTR [rsp+0x1268],rax
  40658e:	mov    DWORD PTR [rsp+0xd44],0x42480000
  406599:	mov    DWORD PTR [rsp+0x1044],0x42c80000
  4065a4:	mov    DWORD PTR [rsp+0x684],0x32
  4065af:	mov    DWORD PTR [rsp+0xc64],0x64
  4065ba:	mov    DWORD PTR [rsp+0x764],0x32
  4065c5:	mov    DWORD PTR [rsp+0x844],0x64
  4065d0:	mov    WORD PTR [rsp+0x242],0x32
  4065da:	mov    WORD PTR [rsp+0x3e2],0x64
  4065e4:	mov    WORD PTR [rsp+0x362],0x32
  4065ee:	mov    WORD PTR [rsp+0xdc2],0x64
  4065f8:	mov    BYTE PTR [rsp+0x171],0x32
  406600:	mov    BYTE PTR [rsp+0x1d1],0x64
  406608:	mov    BYTE PTR [rsp+0x291],0x32
  406610:	mov    BYTE PTR [rsp+0x2d1],0x64
  406618:	mov    QWORD PTR [rsp+0xb88],0x32
  406624:	mov    QWORD PTR [rsp+0xf68],0x64
  406630:	mov    QWORD PTR [rsp+0x1dc8],0x32
  40663c:	mov    QWORD PTR [rsp+0x588],0x64
  406648:	lea    rax,[rip+0x8b4c]        # 40f19b <getopt_long_only@@Base+0x22bb>
  40664f:	cmove  rdi,rax
  406653:	mov    r15d,0x1
  406659:	mov    rax,QWORD PTR [rsp+0x100]
  406661:	cmp    eax,0x9
  406664:	mov    QWORD PTR [rsp+0x28],rdi
  406669:	ja     4084b1 <Mat_VarRead@plt+0x6121>
  40666f:	lea    rcx,[rip+0x7e92]        # 40e508 <getopt_long_only@@Base+0x1628>
  406676:	movsxd rax,DWORD PTR [rcx+rax*4]
  40667a:	add    rax,rcx
  40667d:	jmp    rax
  40667f:	lea    rax,[rsp+0x860]
  406687:	mov    QWORD PTR [rsp+0x60],rax
  40668c:	lea    rax,[rsp+0x10e0]
  406694:	mov    QWORD PTR [rsp+0x68],rax
  406699:	lea    rax,[rsp+0x8c0]
  4066a1:	mov    QWORD PTR [rsp+0x70],rax
  4066a6:	lea    rax,[rsp+0x1140]
  4066ae:	mov    QWORD PTR [rsp+0x78],rax
  4066b3:	lea    rax,[rsp+0x920]
  4066bb:	mov    QWORD PTR [rsp+0x80],rax
  4066c3:	lea    rax,[rsp+0x11a0]
  4066cb:	mov    QWORD PTR [rsp+0x88],rax
  4066d3:	lea    rax,[rsp+0x980]
  4066db:	mov    QWORD PTR [rsp+0x90],rax
  4066e3:	lea    rax,[rsp+0x1200]
  4066eb:	mov    QWORD PTR [rsp+0x98],rax
  4066f3:	mov    r12d,0x9
  4066f9:	jmp    40835d <Mat_VarRead@plt+0x5fcd>
  4066fe:	mov    ebx,0x1
  406703:	lea    rax,[rsp+0x164]
  40670b:	mov    rdx,rax
  40670e:	lea    rax,[rsp+0x158]
  406716:	mov    rcx,rax
  406719:	lea    r15,[rsp+0x14c]
  406721:	lea    r13,[rsp+0x140]
  406729:	jmp    406873 <Mat_VarRead@plt+0x44e3>
  40672e:	mov    ebx,0x2
  406733:	lea    rax,[rsp+0x1c4]
  40673b:	mov    rdx,rax
  40673e:	lea    rax,[rsp+0x1b8]
  406746:	mov    rcx,rax
  406749:	lea    r15,[rsp+0x1ac]
  406751:	lea    r13,[rsp+0x1a0]
  406759:	jmp    406873 <Mat_VarRead@plt+0x44e3>
  40675e:	mov    ebx,0x3
  406763:	lea    rax,[rsp+0x228]
  40676b:	mov    rdx,rax
  40676e:	lea    rax,[rsp+0x210]
  406776:	mov    rcx,rax
  406779:	lea    r15,[rsp+0x1f8]
  406781:	lea    r13,[rsp+0x1e0]
  406789:	jmp    406873 <Mat_VarRead@plt+0x44e3>
  40678e:	mov    ebx,0x4
  406793:	lea    rax,[rsp+0x3c8]
  40679b:	mov    rdx,rax
  40679e:	lea    rax,[rsp+0x3b0]
  4067a6:	mov    rcx,rax
  4067a9:	lea    r15,[rsp+0x398]
  4067b1:	lea    r13,[rsp+0x380]
  4067b9:	jmp    406873 <Mat_VarRead@plt+0x44e3>
  4067be:	mov    ebx,0x5
  4067c3:	lea    rax,[rsp+0x650]
  4067cb:	mov    rdx,rax
  4067ce:	lea    rax,[rsp+0x620]
  4067d6:	mov    rcx,rax
  4067d9:	lea    r15,[rsp+0x5f0]
  4067e1:	lea    r13,[rsp+0x5c0]
  4067e9:	jmp    406873 <Mat_VarRead@plt+0x44e3>
  4067ee:	mov    ebx,0x6
  4067f3:	lea    rax,[rsp+0xc30]
  4067fb:	mov    rdx,rax
  4067fe:	lea    rax,[rsp+0xc00]
  406806:	mov    rcx,rax
  406809:	lea    r15,[rsp+0xbd0]
  406811:	lea    r13,[rsp+0xba0]
  406819:	jmp    406873 <Mat_VarRead@plt+0x44e3>
  40681b:	mov    ebx,0xc
  406820:	lea    rax,[rsp+0xb20]
  406828:	mov    rdx,rax
  40682b:	lea    rax,[rsp+0xac0]
  406833:	mov    rcx,rax
  406836:	lea    r15,[rsp+0xa60]
  40683e:	lea    r13,[rsp+0xa00]
  406846:	jmp    406873 <Mat_VarRead@plt+0x44e3>
  406848:	mov    ebx,0xd
  40684d:	lea    rax,[rsp+0xf00]
  406855:	mov    rdx,rax
  406858:	lea    rax,[rsp+0xea0]
  406860:	mov    rcx,rax
  406863:	lea    r15,[rsp+0xe40]
  40686b:	lea    r13,[rsp+0xde0]
  406873:	mov    QWORD PTR [rsp+0xf8],rcx
  40687b:	mov    QWORD PTR [rsp+0xa8],rdx
  406883:	mov    edx,DWORD PTR [rip+0xea97]        # 415320 <getopt_long_only@@Base+0x8440>
  406889:	xor    esi,esi
  40688b:	vzeroupper 
  40688e:	call   402310 <Mat_CreateVer@plt>
  406893:	mov    QWORD PTR [rsp+0x58],rax
  406898:	test   rax,rax
  40689b:	je     406b87 <Mat_VarRead@plt+0x47f7>
  4068a1:	mov    DWORD PTR [rsp],0x1
  4068a8:	lea    rdi,[rip+0xbeff]        # 4127ae <getopt_long_only@@Base+0x58ce>
  4068af:	mov    QWORD PTR [rsp+0x108],r15
  4068b7:	mov    r15d,ebx
  4068ba:	mov    rbx,QWORD PTR [rsp+0xb0]
  4068c2:	mov    esi,ebx
  4068c4:	mov    edx,r15d
  4068c7:	mov    ecx,0x2
  4068cc:	lea    r12,[rsp+0x40]
  4068d1:	mov    r8,r12
  4068d4:	mov    r9,r13
  4068d7:	call   4020d0 <Mat_VarCreate@plt>
  4068dc:	mov    QWORD PTR [rsp+0xc0],rax
  4068e4:	mov    DWORD PTR [rsp],0x1
  4068eb:	lea    rdi,[rip+0xbec3]        # 4127b5 <getopt_long_only@@Base+0x58d5>
  4068f2:	mov    esi,ebx
  4068f4:	mov    DWORD PTR [rsp+0x110],r15d
  4068fc:	mov    edx,r15d
  4068ff:	mov    ecx,0x2
  406904:	mov    r8,r12
  406907:	mov    r9,QWORD PTR [rsp+0x108]
  40690f:	call   4020d0 <Mat_VarCreate@plt>
  406914:	mov    QWORD PTR [rsp+0xc8],rax
  40691c:	cmp    r14d,0x1
  406920:	je     406a0d <Mat_VarRead@plt+0x467d>
  406926:	test   r14d,r14d
  406929:	jne    406b6d <Mat_VarRead@plt+0x47dd>
  40692f:	mov    DWORD PTR [rsp],0x1
  406936:	lea    rdi,[rip+0xbe71]        # 4127ae <getopt_long_only@@Base+0x58ce>
  40693d:	mov    rbx,QWORD PTR [rsp+0xb0]
  406945:	mov    esi,ebx
  406947:	mov    r14d,DWORD PTR [rsp+0x110]
  40694f:	mov    edx,r14d
  406952:	mov    ecx,0x2
  406957:	lea    r15,[rsp+0x40]
  40695c:	mov    r8,r15
  40695f:	mov    r9,QWORD PTR [rsp+0xf8]
  406967:	call   4020d0 <Mat_VarCreate@plt>
  40696c:	mov    QWORD PTR [rsp+0xd0],rax
  406974:	mov    DWORD PTR [rsp],0x1
  40697b:	lea    rdi,[rip+0xbe33]        # 4127b5 <getopt_long_only@@Base+0x58d5>
  406982:	mov    esi,ebx
  406984:	mov    edx,r14d
  406987:	mov    ecx,0x2
  40698c:	mov    r8,r15
  40698f:	mov    r9,QWORD PTR [rsp+0xa8]
  406997:	call   4020d0 <Mat_VarCreate@plt>
  40699c:	mov    QWORD PTR [rsp+0xd8],rax
  4069a4:	mov    QWORD PTR [rsp+0xe0],0x0
  4069b0:	vmovdqa xmm0,XMMWORD PTR [rip+0x76c8]        # 40e080 <getopt_long_only@@Base+0x11a0>
  4069b8:	vmovdqa XMMWORD PTR [rsp+0x40],xmm0
  4069be:	mov    DWORD PTR [rsp],0x0
  4069c5:	lea    rdi,[rip+0x9709]        # 4100d5 <getopt_long_only@@Base+0x31f5>
  4069cc:	mov    esi,0x2
  4069d1:	mov    edx,0x16
  4069d6:	mov    ecx,0x2
  4069db:	mov    r8,r15
  4069de:	lea    r9,[rsp+0xc0]
  4069e6:	call   4020d0 <Mat_VarCreate@plt>
  4069eb:	mov    rbx,rax
  4069ee:	movzx  edx,BYTE PTR [rip+0xfa67]        # 41645c <optopt@@Base+0x24>
  4069f5:	mov    r15,QWORD PTR [rsp+0x58]
  4069fa:	mov    rdi,r15
  4069fd:	mov    rsi,rax
  406a00:	call   4020f0 <Mat_VarWrite@plt>
  406a05:	mov    r12d,eax
  406a08:	jmp    406b77 <Mat_VarRead@plt+0x47e7>
  406a0d:	mov    QWORD PTR [rsp+0xd0],0x0
  406a19:	vmovaps xmm0,XMMWORD PTR [rip+0x75ff]        # 40e020 <getopt_long_only@@Base+0x1140>
  406a21:	vmovaps XMMWORD PTR [rsp+0x40],xmm0
  406a27:	mov    DWORD PTR [rsp],0x0
  406a2e:	lea    rax,[rip+0x96a0]        # 4100d5 <getopt_long_only@@Base+0x31f5>
  406a35:	mov    rdi,rax
  406a38:	mov    esi,0x2
  406a3d:	mov    edx,0x16
  406a42:	mov    ecx,0x2
  406a47:	lea    r13,[rsp+0x40]
  406a4c:	mov    r8,r13
  406a4f:	lea    rax,[rsp+0xc0]
  406a57:	mov    r9,rax
  406a5a:	call   4020d0 <Mat_VarCreate@plt>
  406a5f:	mov    r12,rax
  406a62:	movzx  edx,BYTE PTR [rip+0xf9f3]        # 41645c <optopt@@Base+0x24>
  406a69:	mov    r15,QWORD PTR [rsp+0x58]
  406a6e:	mov    rdi,r15
  406a71:	mov    rsi,rax
  406a74:	mov    ecx,0x1
  406a79:	call   402140 <Mat_VarWriteAppend@plt>
  406a7e:	mov    DWORD PTR [rsp+0x108],eax
  406a85:	mov    rdi,r12
  406a88:	call   402240 <Mat_VarFree@plt>
  406a8d:	vmovaps xmm0,XMMWORD PTR [rip+0x75cb]        # 40e060 <getopt_long_only@@Base+0x1180>
  406a95:	vmovaps XMMWORD PTR [rsp+0x40],xmm0
  406a9b:	mov    DWORD PTR [rsp],0x1
  406aa2:	lea    rdi,[rip+0xbd05]        # 4127ae <getopt_long_only@@Base+0x58ce>
  406aa9:	mov    rbx,QWORD PTR [rsp+0xb0]
  406ab1:	mov    esi,ebx
  406ab3:	mov    r14d,DWORD PTR [rsp+0x110]
  406abb:	mov    edx,r14d
  406abe:	mov    ecx,0x2
  406ac3:	mov    r8,r13
  406ac6:	mov    r9,QWORD PTR [rsp+0xf8]
  406ace:	call   4020d0 <Mat_VarCreate@plt>
  406ad3:	mov    QWORD PTR [rsp+0xc0],rax
  406adb:	mov    DWORD PTR [rsp],0x1
  406ae2:	lea    rdi,[rip+0xbccc]        # 4127b5 <getopt_long_only@@Base+0x58d5>
  406ae9:	mov    esi,ebx
  406aeb:	mov    edx,r14d
  406aee:	mov    ecx,0x2
  406af3:	mov    r8,r13
  406af6:	mov    r9,QWORD PTR [rsp+0xa8]
  406afe:	call   4020d0 <Mat_VarCreate@plt>
  406b03:	mov    QWORD PTR [rsp+0xc8],rax
  406b0b:	vmovdqa xmm0,XMMWORD PTR [rip+0x750d]        # 40e020 <getopt_long_only@@Base+0x1140>
  406b13:	vmovdqa XMMWORD PTR [rsp+0x40],xmm0
  406b19:	mov    DWORD PTR [rsp],0x0
  406b20:	lea    rdi,[rip+0x95ae]        # 4100d5 <getopt_long_only@@Base+0x31f5>
  406b27:	mov    esi,0x2
  406b2c:	mov    edx,0x16
  406b31:	mov    ecx,0x2
  406b36:	mov    r8,r13
  406b39:	lea    r9,[rsp+0xc0]
  406b41:	call   4020d0 <Mat_VarCreate@plt>
  406b46:	mov    rbx,rax
  406b49:	movzx  edx,BYTE PTR [rip+0xf90c]        # 41645c <optopt@@Base+0x24>
  406b50:	mov    rdi,r15
  406b53:	mov    rsi,rax
  406b56:	mov    ecx,0x1
  406b5b:	call   402140 <Mat_VarWriteAppend@plt>
  406b60:	mov    r12d,eax
  406b63:	add    r12d,DWORD PTR [rsp+0x108]
  406b6b:	jmp    406b77 <Mat_VarRead@plt+0x47e7>
  406b6d:	xor    r12d,r12d
  406b70:	xor    ebx,ebx
  406b72:	mov    r15,QWORD PTR [rsp+0x58]
  406b77:	mov    rdi,rbx
  406b7a:	call   402240 <Mat_VarFree@plt>
  406b7f:	mov    rdi,r15
  406b82:	call   4022a0 <Mat_Close@plt>
  406b87:	mov    r15,QWORD PTR [rsp+0x50]
  406b8c:	inc    r15d
  406b8f:	add    DWORD PTR [rsp+0x3c],r12d
  406b94:	mov    rbx,QWORD PTR [rsp+0x30]
  406b99:	lea    r13,[rsp+0x400]
  406ba1:	cmp    r15d,DWORD PTR [rsp+0x118]
  406ba9:	jl     4028e3 <Mat_VarRead@plt+0x553>
  406baf:	jmp    40bfa9 <Mat_VarRead@plt+0x9c19>
  406bb4:	mov    rax,QWORD PTR [rip+0xe43d]        # 414ff8 <getopt_long_only@@Base+0x8118>
  406bbb:	mov    rdi,QWORD PTR [rax]
  406bbe:	lea    rsi,[rip+0xbc14]        # 4127d9 <getopt_long_only@@Base+0x58f9>
  406bc5:	mov    rdx,rbx
  406bc8:	xor    eax,eax
  406bca:	call   402220 <fprintf@plt>
  406bcf:	jmp    40524d <Mat_VarRead@plt+0x2ebd>
  406bd4:	mov    r12,r15
  406bd7:	mov    rdi,QWORD PTR [rsp+0x28]
  406bdc:	test   rdi,rdi
  406bdf:	lea    rax,[rip+0xb41a]        # 412000 <getopt_long_only@@Base+0x5120>
  406be6:	cmove  rdi,rax
  406bea:	vpxor  xmm0,xmm0,xmm0
  406bee:	vmovdqa XMMWORD PTR [rsp+0x40],xmm0
  406bf4:	mov    edx,DWORD PTR [rip+0xe726]        # 415320 <getopt_long_only@@Base+0x8440>
  406bfa:	mov    QWORD PTR [rsp+0x28],rdi
  406bff:	xor    esi,esi
  406c01:	call   402310 <Mat_CreateVer@plt>
  406c06:	test   rax,rax
  406c09:	je     407818 <Mat_VarRead@plt+0x5488>
  406c0f:	mov    r14,rax
  406c12:	vmovaps xmm0,XMMWORD PTR [rip+0x74b6]        # 40e0d0 <getopt_long_only@@Base+0x11f0>
  406c1a:	vmovaps XMMWORD PTR [rsp+0x40],xmm0
  406c20:	mov    DWORD PTR [rsp],0x0
  406c27:	xor    r15d,r15d
  406c2a:	lea    rdi,[rip+0xbb8b]        # 4127bc <getopt_long_only@@Base+0x58dc>
  406c31:	mov    esi,0x1
  406c36:	mov    edx,0x15
  406c3b:	mov    ecx,0x2
  406c40:	lea    r13,[rsp+0x40]
  406c45:	mov    r8,r13
  406c48:	xor    r9d,r9d
  406c4b:	call   4020d0 <Mat_VarCreate@plt>
  406c50:	mov    rbx,rax
  406c53:	movzx  edx,BYTE PTR [rip+0xf802]        # 41645c <optopt@@Base+0x24>
  406c5a:	mov    rdi,r14
  406c5d:	mov    rsi,rax
  406c60:	call   4020f0 <Mat_VarWrite@plt>
  406c65:	mov    rdi,rbx
  406c68:	call   402240 <Mat_VarFree@plt>
  406c6d:	mov    DWORD PTR [rsp],0x0
  406c74:	lea    rdi,[rip+0xbb33]        # 4127ae <getopt_long_only@@Base+0x58ce>
  406c7b:	mov    esi,0x6
  406c80:	mov    edx,0x9
  406c85:	mov    ecx,0x2
  406c8a:	mov    r8,r13
  406c8d:	xor    r9d,r9d
  406c90:	call   4020d0 <Mat_VarCreate@plt>
  406c95:	mov    QWORD PTR [rsp+0xc0],rax
  406c9d:	mov    DWORD PTR [rsp],0x0
  406ca4:	lea    rdi,[rip+0xbb0a]        # 4127b5 <getopt_long_only@@Base+0x58d5>
  406cab:	mov    esi,0x6
  406cb0:	mov    edx,0x9
  406cb5:	mov    ecx,0x2
  406cba:	mov    r8,r13
  406cbd:	xor    r9d,r9d
  406cc0:	call   4020d0 <Mat_VarCreate@plt>
  406cc5:	mov    QWORD PTR [rsp+0xc8],rax
  406ccd:	mov    QWORD PTR [rsp+0xd0],0x0
  406cd9:	vmovdqa xmm0,XMMWORD PTR [rip+0x739f]        # 40e080 <getopt_long_only@@Base+0x11a0>
  406ce1:	vmovdqa XMMWORD PTR [rsp+0x40],xmm0
  406ce7:	mov    DWORD PTR [rsp],0x0
  406cee:	lea    rdi,[rip+0xbacc]        # 4127c1 <getopt_long_only@@Base+0x58e1>
  406cf5:	mov    esi,0x1
  406cfa:	mov    edx,0x15
  406cff:	mov    ecx,0x2
  406d04:	mov    r8,r13
  406d07:	lea    r9,[rsp+0xc0]
  406d0f:	call   4020d0 <Mat_VarCreate@plt>
  406d14:	mov    rbx,rax
  406d17:	movzx  edx,BYTE PTR [rip+0xf73e]        # 41645c <optopt@@Base+0x24>
  406d1e:	mov    rdi,r14
  406d21:	mov    rsi,rax
  406d24:	call   4020f0 <Mat_VarWrite@plt>
  406d29:	mov    rdi,rbx
  406d2c:	call   402240 <Mat_VarFree@plt>
  406d31:	mov    rdi,r14
  406d34:	call   4022a0 <Mat_Close@plt>
  406d39:	jmp    40781e <Mat_VarRead@plt+0x548e>
  406d3e:	lea    rax,[rsp+0xc80]
  406d46:	mov    QWORD PTR [rsp+0x60],rax
  406d4b:	lea    rax,[rsp+0xf80]
  406d53:	mov    QWORD PTR [rsp+0x68],rax
  406d58:	lea    rax,[rsp+0xcb0]
  406d60:	mov    QWORD PTR [rsp+0x70],rax
  406d65:	lea    rax,[rsp+0xfb0]
  406d6d:	mov    QWORD PTR [rsp+0x78],rax
  406d72:	lea    rax,[rsp+0xce0]
  406d7a:	mov    QWORD PTR [rsp+0x80],rax
  406d82:	lea    rax,[rsp+0xfe0]
  406d8a:	mov    QWORD PTR [rsp+0x88],rax
  406d92:	lea    rax,[rsp+0xd10]
  406d9a:	mov    QWORD PTR [rsp+0x90],rax
  406da2:	lea    rax,[rsp+0x1010]
  406daa:	mov    QWORD PTR [rsp+0x98],rax
  406db2:	mov    DWORD PTR [rsp+0x58],0x7
  406dba:	jmp    4071b7 <Mat_VarRead@plt+0x4e27>
  406dbf:	lea    rax,[rsp+0x140]
  406dc7:	mov    QWORD PTR [rsp+0x60],rax
  406dcc:	lea    rax,[rsp+0x1a0]
  406dd4:	mov    QWORD PTR [rsp+0x68],rax
  406dd9:	lea    rax,[rsp+0x14c]
  406de1:	mov    QWORD PTR [rsp+0x70],rax
  406de6:	lea    rax,[rsp+0x1ac]
  406dee:	mov    QWORD PTR [rsp+0x78],rax
  406df3:	lea    rax,[rsp+0x158]
  406dfb:	mov    QWORD PTR [rsp+0x80],rax
  406e03:	lea    rax,[rsp+0x1b8]
  406e0b:	mov    QWORD PTR [rsp+0x88],rax
  406e13:	lea    rax,[rsp+0x164]
  406e1b:	mov    QWORD PTR [rsp+0x90],rax
  406e23:	lea    rax,[rsp+0x1c4]
  406e2b:	mov    QWORD PTR [rsp+0x98],rax
  406e33:	mov    DWORD PTR [rsp+0x58],0x1
  406e3b:	jmp    4071b7 <Mat_VarRead@plt+0x4e27>
  406e40:	lea    rax,[rsp+0x260]
  406e48:	mov    QWORD PTR [rsp+0x60],rax
  406e4d:	lea    rax,[rsp+0x2a0]
  406e55:	mov    QWORD PTR [rsp+0x68],rax
  406e5a:	lea    rax,[rsp+0x26c]
  406e62:	mov    QWORD PTR [rsp+0x70],rax
  406e67:	lea    rax,[rsp+0x2ac]
  406e6f:	mov    QWORD PTR [rsp+0x78],rax
  406e74:	lea    rax,[rsp+0x278]
  406e7c:	mov    QWORD PTR [rsp+0x80],rax
  406e84:	lea    rax,[rsp+0x2b8]
  406e8c:	mov    QWORD PTR [rsp+0x88],rax
  406e94:	lea    rax,[rsp+0x284]
  406e9c:	mov    QWORD PTR [rsp+0x90],rax
  406ea4:	lea    rax,[rsp+0x2c4]
  406eac:	mov    QWORD PTR [rsp+0x98],rax
  406eb4:	mov    DWORD PTR [rsp+0x58],0x2
  406ebc:	jmp    4071b7 <Mat_VarRead@plt+0x4e27>
  406ec1:	lea    rax,[rsp+0x1e0]
  406ec9:	mov    QWORD PTR [rsp+0x60],rax
  406ece:	lea    rax,[rsp+0x380]
  406ed6:	mov    QWORD PTR [rsp+0x68],rax
  406edb:	lea    rax,[rsp+0x1f8]
  406ee3:	mov    QWORD PTR [rsp+0x70],rax
  406ee8:	lea    rax,[rsp+0x398]
  406ef0:	mov    QWORD PTR [rsp+0x78],rax
  406ef5:	lea    rax,[rsp+0x210]
  406efd:	mov    QWORD PTR [rsp+0x80],rax
  406f05:	lea    rax,[rsp+0x3b0]
  406f0d:	mov    QWORD PTR [rsp+0x88],rax
  406f15:	lea    rax,[rsp+0x228]
  406f1d:	mov    QWORD PTR [rsp+0x90],rax
  406f25:	lea    rax,[rsp+0x3c8]
  406f2d:	mov    QWORD PTR [rsp+0x98],rax
  406f35:	mov    DWORD PTR [rsp+0x58],0x3
  406f3d:	jmp    4071b7 <Mat_VarRead@plt+0x4e27>
  406f42:	lea    rax,[rsp+0x300]
  406f4a:	mov    QWORD PTR [rsp+0x60],rax
  406f4f:	lea    rax,[rsp+0xd60]
  406f57:	mov    QWORD PTR [rsp+0x68],rax
  406f5c:	lea    rax,[rsp+0x318]
  406f64:	mov    QWORD PTR [rsp+0x70],rax
  406f69:	lea    rax,[rsp+0xd78]
  406f71:	mov    QWORD PTR [rsp+0x78],rax
  406f76:	lea    rax,[rsp+0x330]
  406f7e:	mov    QWORD PTR [rsp+0x80],rax
  406f86:	lea    rax,[rsp+0xd90]
  406f8e:	mov    QWORD PTR [rsp+0x88],rax
  406f96:	lea    rax,[rsp+0x348]
  406f9e:	mov    QWORD PTR [rsp+0x90],rax
  406fa6:	lea    rax,[rsp+0xda8]
  406fae:	mov    QWORD PTR [rsp+0x98],rax
  406fb6:	mov    DWORD PTR [rsp+0x58],0x4
  406fbe:	jmp    4071b7 <Mat_VarRead@plt+0x4e27>
  406fc3:	lea    rax,[rsp+0x5c0]
  406fcb:	mov    QWORD PTR [rsp+0x60],rax
  406fd0:	lea    rax,[rsp+0xba0]
  406fd8:	mov    QWORD PTR [rsp+0x68],rax
  406fdd:	lea    rax,[rsp+0x5f0]
  406fe5:	mov    QWORD PTR [rsp+0x70],rax
  406fea:	lea    rax,[rsp+0xbd0]
  406ff2:	mov    QWORD PTR [rsp+0x78],rax
  406ff7:	lea    rax,[rsp+0x620]
  406fff:	mov    QWORD PTR [rsp+0x80],rax
  407007:	lea    rax,[rsp+0xc00]
  40700f:	mov    QWORD PTR [rsp+0x88],rax
  407017:	lea    rax,[rsp+0x650]
  40701f:	mov    QWORD PTR [rsp+0x90],rax
  407027:	lea    rax,[rsp+0xc30]
  40702f:	mov    QWORD PTR [rsp+0x98],rax
  407037:	mov    DWORD PTR [rsp+0x58],0x5
  40703f:	jmp    4071b7 <Mat_VarRead@plt+0x4e27>
  407044:	lea    rax,[rsp+0x6a0]
  40704c:	mov    QWORD PTR [rsp+0x60],rax
  407051:	lea    rax,[rsp+0x780]
  407059:	mov    QWORD PTR [rsp+0x68],rax
  40705e:	lea    rax,[rsp+0x6d0]
  407066:	mov    QWORD PTR [rsp+0x70],rax
  40706b:	lea    rax,[rsp+0x7b0]
  407073:	mov    QWORD PTR [rsp+0x78],rax
  407078:	lea    rax,[rsp+0x700]
  407080:	mov    QWORD PTR [rsp+0x80],rax
  407088:	lea    rax,[rsp+0x7e0]
  407090:	mov    QWORD PTR [rsp+0x88],rax
  407098:	lea    rax,[rsp+0x730]
  4070a0:	mov    QWORD PTR [rsp+0x90],rax
  4070a8:	lea    rax,[rsp+0x810]
  4070b0:	mov    QWORD PTR [rsp+0x98],rax
  4070b8:	mov    DWORD PTR [rsp+0x58],0x6
  4070c0:	jmp    4071b7 <Mat_VarRead@plt+0x4e27>
  4070c5:	lea    rax,[rsp+0xa00]
  4070cd:	mov    QWORD PTR [rsp+0x60],rax
  4070d2:	lea    rax,[rsp+0xde0]
  4070da:	mov    QWORD PTR [rsp+0x68],rax
  4070df:	lea    rax,[rsp+0xa60]
  4070e7:	mov    QWORD PTR [rsp+0x70],rax
  4070ec:	lea    rax,[rsp+0xe40]
  4070f4:	mov    QWORD PTR [rsp+0x78],rax
  4070f9:	lea    rax,[rsp+0xac0]
  407101:	mov    QWORD PTR [rsp+0x80],rax
  407109:	lea    rax,[rsp+0xea0]
  407111:	mov    QWORD PTR [rsp+0x88],rax
  407119:	lea    rax,[rsp+0xb20]
  407121:	mov    QWORD PTR [rsp+0x90],rax
  407129:	lea    rax,[rsp+0xf00]
  407131:	mov    QWORD PTR [rsp+0x98],rax
  407139:	mov    DWORD PTR [rsp+0x58],0xc
  407141:	jmp    4071b7 <Mat_VarRead@plt+0x4e27>
  407143:	lea    rax,[rsp+0x1c40]
  40714b:	mov    QWORD PTR [rsp+0x60],rax
  407150:	mov    QWORD PTR [rsp+0x68],r13
  407155:	lea    rax,[rsp+0x1ca0]
  40715d:	mov    QWORD PTR [rsp+0x70],rax
  407162:	lea    rax,[rsp+0x460]
  40716a:	mov    QWORD PTR [rsp+0x78],rax
  40716f:	lea    rax,[rsp+0x1d00]
  407177:	mov    QWORD PTR [rsp+0x80],rax
  40717f:	lea    rax,[rsp+0x4c0]
  407187:	mov    QWORD PTR [rsp+0x88],rax
  40718f:	lea    rax,[rsp+0x1d60]
  407197:	mov    QWORD PTR [rsp+0x90],rax
  40719f:	lea    rax,[rsp+0x520]
  4071a7:	mov    QWORD PTR [rsp+0x98],rax
  4071af:	mov    DWORD PTR [rsp+0x58],0xd
  4071b7:	mov    edx,DWORD PTR [rip+0xe163]        # 415320 <getopt_long_only@@Base+0x8440>
  4071bd:	xor    esi,esi
  4071bf:	vzeroupper 
  4071c2:	call   402310 <Mat_CreateVer@plt>
  4071c7:	test   rax,rax
  4071ca:	je     4084b1 <Mat_VarRead@plt+0x6121>
  4071d0:	mov    QWORD PTR [rsp+0xa8],rax
  4071d8:	mov    DWORD PTR [rsp],0x801
  4071df:	lea    rdi,[rip+0xb5c8]        # 4127ae <getopt_long_only@@Base+0x58ce>
  4071e6:	mov    rbx,QWORD PTR [rsp+0xb0]
  4071ee:	mov    esi,ebx
  4071f0:	mov    r12d,DWORD PTR [rsp+0x58]
  4071f5:	mov    edx,r12d
  4071f8:	mov    ecx,0x2
  4071fd:	lea    r15,[rsp+0x40]
  407202:	mov    r8,r15
  407205:	lea    r9,[rsp+0x60]
  40720a:	call   4020d0 <Mat_VarCreate@plt>
  40720f:	mov    QWORD PTR [rsp+0xc0],rax
  407217:	mov    DWORD PTR [rsp],0x801
  40721e:	lea    rdi,[rip+0xb590]        # 4127b5 <getopt_long_only@@Base+0x58d5>
  407225:	mov    esi,ebx
  407227:	mov    edx,r12d
  40722a:	mov    ecx,0x2
  40722f:	mov    r8,r15
  407232:	lea    r9,[rsp+0x70]
  407237:	call   4020d0 <Mat_VarCreate@plt>
  40723c:	mov    QWORD PTR [rsp+0xc8],rax
  407244:	cmp    r14d,0x1
  407248:	je     407330 <Mat_VarRead@plt+0x4fa0>
  40724e:	test   r14d,r14d
  407251:	mov    r14,QWORD PTR [rsp+0xa8]
  407259:	jne    407490 <Mat_VarRead@plt+0x5100>
  40725f:	mov    DWORD PTR [rsp],0x801
  407266:	lea    rdi,[rip+0xb541]        # 4127ae <getopt_long_only@@Base+0x58ce>
  40726d:	mov    rbx,QWORD PTR [rsp+0xb0]
  407275:	mov    esi,ebx
  407277:	mov    r12d,DWORD PTR [rsp+0x58]
  40727c:	mov    edx,r12d
  40727f:	mov    ecx,0x2
  407284:	mov    r8,r15
  407287:	lea    r9,[rsp+0x80]
  40728f:	call   4020d0 <Mat_VarCreate@plt>
  407294:	mov    QWORD PTR [rsp+0xd0],rax
  40729c:	mov    DWORD PTR [rsp],0x801
  4072a3:	lea    rdi,[rip+0xb50b]        # 4127b5 <getopt_long_only@@Base+0x58d5>
  4072aa:	mov    esi,ebx
  4072ac:	mov    edx,r12d
  4072af:	mov    ecx,0x2
  4072b4:	mov    r8,r15
  4072b7:	lea    r9,[rsp+0x90]
  4072bf:	call   4020d0 <Mat_VarCreate@plt>
  4072c4:	mov    QWORD PTR [rsp+0xd8],rax
  4072cc:	mov    QWORD PTR [rsp+0xe0],0x0
  4072d8:	vmovdqa xmm0,XMMWORD PTR [rip+0x6da0]        # 40e080 <getopt_long_only@@Base+0x11a0>
  4072e0:	vmovdqa XMMWORD PTR [rsp+0x40],xmm0
  4072e6:	mov    DWORD PTR [rsp],0x0
  4072ed:	lea    rdi,[rip+0x8de1]        # 4100d5 <getopt_long_only@@Base+0x31f5>
  4072f4:	mov    esi,0x2
  4072f9:	mov    edx,0x16
  4072fe:	mov    ecx,0x2
  407303:	mov    r8,r15
  407306:	lea    r9,[rsp+0xc0]
  40730e:	call   4020d0 <Mat_VarCreate@plt>
  407313:	mov    rbx,rax
  407316:	movzx  edx,BYTE PTR [rip+0xf13f]        # 41645c <optopt@@Base+0x24>
  40731d:	mov    rdi,r14
  407320:	mov    rsi,rax
  407323:	call   4020f0 <Mat_VarWrite@plt>
  407328:	mov    r15d,eax
  40732b:	jmp    4084a1 <Mat_VarRead@plt+0x6111>
  407330:	mov    QWORD PTR [rsp+0xd0],0x0
  40733c:	vmovaps xmm0,XMMWORD PTR [rip+0x6cdc]        # 40e020 <getopt_long_only@@Base+0x1140>
  407344:	vmovaps XMMWORD PTR [rsp+0x40],xmm0
  40734a:	mov    DWORD PTR [rsp],0x0
  407351:	lea    rax,[rip+0x8d7d]        # 4100d5 <getopt_long_only@@Base+0x31f5>
  407358:	mov    rdi,rax
  40735b:	mov    esi,0x2
  407360:	mov    edx,0x16
  407365:	mov    ecx,0x2
  40736a:	mov    r8,r15
  40736d:	lea    rax,[rsp+0xc0]
  407375:	mov    r9,rax
  407378:	call   4020d0 <Mat_VarCreate@plt>
  40737d:	mov    r13,r15
  407380:	mov    r15,rax
  407383:	movzx  edx,BYTE PTR [rip+0xf0d2]        # 41645c <optopt@@Base+0x24>
  40738a:	mov    r14,QWORD PTR [rsp+0xa8]
  407392:	mov    rdi,r14
  407395:	mov    rsi,rax
  407398:	mov    ecx,0x1
  40739d:	call   402140 <Mat_VarWriteAppend@plt>
  4073a2:	mov    r12d,eax
  4073a5:	mov    rdi,r15
  4073a8:	call   402240 <Mat_VarFree@plt>
  4073ad:	vmovaps xmm0,XMMWORD PTR [rip+0x6cab]        # 40e060 <getopt_long_only@@Base+0x1180>
  4073b5:	vmovaps XMMWORD PTR [rsp+0x40],xmm0
  4073bb:	mov    DWORD PTR [rsp],0x801
  4073c2:	lea    rdi,[rip+0xb3e5]        # 4127ae <getopt_long_only@@Base+0x58ce>
  4073c9:	mov    rbx,QWORD PTR [rsp+0xb0]
  4073d1:	mov    esi,ebx
  4073d3:	mov    r15d,DWORD PTR [rsp+0x58]
  4073d8:	mov    edx,r15d
  4073db:	mov    ecx,0x2
  4073e0:	mov    r8,r13
  4073e3:	lea    r9,[rsp+0x80]
  4073eb:	call   4020d0 <Mat_VarCreate@plt>
  4073f0:	mov    QWORD PTR [rsp+0xc0],rax
  4073f8:	mov    DWORD PTR [rsp],0x801
  4073ff:	lea    rdi,[rip+0xb3af]        # 4127b5 <getopt_long_only@@Base+0x58d5>
  407406:	mov    esi,ebx
  407408:	mov    edx,r15d
  40740b:	mov    ecx,0x2
  407410:	mov    r8,r13
  407413:	lea    r9,[rsp+0x90]
  40741b:	call   4020d0 <Mat_VarCreate@plt>
  407420:	mov    QWORD PTR [rsp+0xc8],rax
  407428:	vmovdqa xmm0,XMMWORD PTR [rip+0x6bf0]        # 40e020 <getopt_long_only@@Base+0x1140>
  407430:	vmovdqa XMMWORD PTR [rsp+0x40],xmm0
  407436:	mov    DWORD PTR [rsp],0x0
  40743d:	lea    rdi,[rip+0x8c91]        # 4100d5 <getopt_long_only@@Base+0x31f5>
  407444:	mov    esi,0x2
  407449:	mov    edx,0x16
  40744e:	mov    ecx,0x2
  407453:	mov    r8,r13
  407456:	lea    r13,[rsp+0x400]
  40745e:	lea    r9,[rsp+0xc0]
  407466:	call   4020d0 <Mat_VarCreate@plt>
  40746b:	mov    rbx,rax
  40746e:	movzx  edx,BYTE PTR [rip+0xefe7]        # 41645c <optopt@@Base+0x24>
  407475:	mov    rdi,r14
  407478:	mov    rsi,rax
  40747b:	mov    ecx,0x1
  407480:	call   402140 <Mat_VarWriteAppend@plt>
  407485:	mov    r15d,eax
  407488:	add    r15d,r12d
  40748b:	jmp    4084a1 <Mat_VarRead@plt+0x6111>
  407490:	xor    r15d,r15d
  407493:	xor    ebx,ebx
  407495:	jmp    4084a1 <Mat_VarRead@plt+0x6111>
  40749a:	mov    QWORD PTR [rsp+0x50],r15
  40749f:	mov    rdi,QWORD PTR [rsp+0x28]
  4074a4:	test   rdi,rdi
  4074a7:	lea    rax,[rip+0xac28]        # 4120d6 <getopt_long_only@@Base+0x51f6>
  4074ae:	cmove  rdi,rax
  4074b2:	vmovdqa xmm0,XMMWORD PTR [rip+0x6be6]        # 40e0a0 <getopt_long_only@@Base+0x11c0>
  4074ba:	vmovdqa XMMWORD PTR [rsp+0x40],xmm0
  4074c0:	mov    edx,DWORD PTR [rip+0xde5a]        # 415320 <getopt_long_only@@Base+0x8440>
  4074c6:	mov    QWORD PTR [rsp+0x28],rdi
  4074cb:	xor    esi,esi
  4074cd:	call   402310 <Mat_CreateVer@plt>
  4074d2:	test   rax,rax
  4074d5:	je     407b13 <Mat_VarRead@plt+0x5783>
  4074db:	mov    r14,rax
  4074de:	vmovups ymm0,YMMWORD PTR [rip+0x6e1a]        # 40e300 <getopt_long_only@@Base+0x1420>
  4074e6:	vmovaps YMMWORD PTR [rsp+0x1c40],ymm0
  4074ef:	mov    rax,QWORD PTR [rip+0xd84a]        # 414d40 <getopt_long_only@@Base+0x7e60>
  4074f6:	mov    QWORD PTR [rsp+0x870],rax
  4074fe:	vmovaps xmm0,XMMWORD PTR [rip+0xd82a]        # 414d30 <getopt_long_only@@Base+0x7e50>
  407506:	vmovaps XMMWORD PTR [rsp+0x860],xmm0
  40750f:	mov    DWORD PTR [rsp],0x0
  407516:	lea    rdi,[rip+0xb29f]        # 4127bc <getopt_long_only@@Base+0x58dc>
  40751d:	mov    esi,0x1
  407522:	mov    edx,0x15
  407527:	mov    ecx,0x2
  40752c:	lea    r12,[rsp+0x40]
  407531:	mov    r8,r12
  407534:	xor    r9d,r9d
  407537:	vzeroupper 
  40753a:	call   4020d0 <Mat_VarCreate@plt>
  40753f:	mov    r15,rax
  407542:	vmovaps xmm0,XMMWORD PTR [rip+0x6ad6]        # 40e020 <getopt_long_only@@Base+0x1140>
  40754a:	vmovaps XMMWORD PTR [rsp+0x40],xmm0
  407550:	lea    rax,[rip+0x79fe]        # 40ef55 <getopt_long_only@@Base+0x2075>
  407557:	mov    rdi,rax
  40755a:	mov    esi,0x2
  40755f:	mov    rdx,r12
  407562:	lea    rax,[rsp+0x860]
  40756a:	mov    rcx,rax
  40756d:	mov    r8d,0x3
  407573:	call   402300 <Mat_VarCreateStruct@plt>
  407578:	mov    rbx,rax
  40757b:	vmovaps xmm0,XMMWORD PTR [rip+0x6b3d]        # 40e0c0 <getopt_long_only@@Base+0x11e0>
  407583:	vmovaps XMMWORD PTR [rsp+0x40],xmm0
  407589:	mov    DWORD PTR [rsp],0x0
  407590:	lea    rax,[rip+0x8b3e]        # 4100d5 <getopt_long_only@@Base+0x31f5>
  407597:	mov    rdi,rax
  40759a:	mov    esi,0x6
  40759f:	mov    edx,0x9
  4075a4:	mov    ecx,0x2
  4075a9:	mov    r8,r12
  4075ac:	lea    r13,[rsp+0x1c40]
  4075b4:	mov    r9,r13
  4075b7:	call   4020d0 <Mat_VarCreate@plt>
  4075bc:	mov    rdi,rbx
  4075bf:	lea    r13,[rip+0xb1e8]        # 4127ae <getopt_long_only@@Base+0x58ce>
  4075c6:	mov    rsi,r13
  4075c9:	xor    edx,edx
  4075cb:	mov    rcx,rax
  4075ce:	call   402370 <Mat_VarSetStructFieldByName@plt>
  4075d3:	mov    rdi,r15
  4075d6:	xor    esi,esi
  4075d8:	mov    rdx,rbx
  4075db:	call   4021a0 <Mat_VarSetCell@plt>
  4075e0:	vmovaps xmm0,XMMWORD PTR [rip+0x6a38]        # 40e020 <getopt_long_only@@Base+0x1140>
  4075e8:	vmovaps XMMWORD PTR [rsp+0x40],xmm0
  4075ee:	lea    rdi,[rip+0x7960]        # 40ef55 <getopt_long_only@@Base+0x2075>
  4075f5:	mov    esi,0x2
  4075fa:	mov    rdx,r12
  4075fd:	lea    rcx,[rsp+0x860]
  407605:	mov    r8d,0x3
  40760b:	call   402300 <Mat_VarCreateStruct@plt>
  407610:	mov    rbx,rax
  407613:	vmovaps xmm0,XMMWORD PTR [rip+0x6aa5]        # 40e0c0 <getopt_long_only@@Base+0x11e0>
  40761b:	vmovaps XMMWORD PTR [rsp+0x40],xmm0
  407621:	mov    DWORD PTR [rsp],0x0
  407628:	lea    rdi,[rip+0x8aa6]        # 4100d5 <getopt_long_only@@Base+0x31f5>
  40762f:	mov    esi,0x6
  407634:	mov    edx,0x9
  407639:	mov    ecx,0x2
  40763e:	mov    r8,r12
  407641:	lea    r9,[rsp+0x1c40]
  407649:	call   4020d0 <Mat_VarCreate@plt>
  40764e:	mov    rdi,rbx
  407651:	mov    rsi,r13
  407654:	xor    edx,edx
  407656:	mov    rcx,rax
  407659:	call   402370 <Mat_VarSetStructFieldByName@plt>
  40765e:	mov    rdi,r15
  407661:	mov    esi,0x1
  407666:	mov    rdx,rbx
  407669:	call   4021a0 <Mat_VarSetCell@plt>
  40766e:	vmovaps xmm0,XMMWORD PTR [rip+0x69aa]        # 40e020 <getopt_long_only@@Base+0x1140>
  407676:	vmovaps XMMWORD PTR [rsp+0x40],xmm0
  40767c:	lea    rdi,[rip+0x78d2]        # 40ef55 <getopt_long_only@@Base+0x2075>
  407683:	mov    esi,0x2
  407688:	mov    rdx,r12
  40768b:	lea    rcx,[rsp+0x860]
  407693:	mov    r8d,0x3
  407699:	call   402300 <Mat_VarCreateStruct@plt>
  40769e:	mov    rbx,rax
  4076a1:	vmovdqa xmm0,XMMWORD PTR [rip+0x6a17]        # 40e0c0 <getopt_long_only@@Base+0x11e0>
  4076a9:	vmovdqa XMMWORD PTR [rsp+0x40],xmm0
  4076af:	mov    DWORD PTR [rsp],0x0
  4076b6:	lea    rdi,[rip+0x8a18]        # 4100d5 <getopt_long_only@@Base+0x31f5>
  4076bd:	mov    esi,0x6
  4076c2:	mov    edx,0x9
  4076c7:	mov    ecx,0x2
  4076cc:	mov    r8,r12
  4076cf:	lea    r9,[rsp+0x1c40]
  4076d7:	call   4020d0 <Mat_VarCreate@plt>
  4076dc:	mov    rdi,rbx
  4076df:	mov    rsi,r13
  4076e2:	xor    edx,edx
  4076e4:	mov    rcx,rax
  4076e7:	call   402370 <Mat_VarSetStructFieldByName@plt>
  4076ec:	mov    rdi,r15
  4076ef:	mov    esi,0x2
  4076f4:	mov    rdx,rbx
  4076f7:	call   4021a0 <Mat_VarSetCell@plt>
  4076fc:	movzx  edx,BYTE PTR [rip+0xed59]        # 41645c <optopt@@Base+0x24>
  407703:	mov    rdi,r14
  407706:	mov    rsi,r15
  407709:	call   4020f0 <Mat_VarWrite@plt>
  40770e:	mov    rdi,r15
  407711:	call   402240 <Mat_VarFree@plt>
  407716:	mov    rdi,r14
  407719:	call   4022a0 <Mat_Close@plt>
  40771e:	xor    eax,eax
  407720:	jmp    407b18 <Mat_VarRead@plt+0x5788>
  407725:	cmp    QWORD PTR [rsp+0x28],0x0
  40772b:	je     407751 <Mat_VarRead@plt+0x53c1>
  40772d:	mov    rax,QWORD PTR [rip+0xd8ac]        # 414fe0 <getopt_long_only@@Base+0x8100>
  407734:	mov    rdx,QWORD PTR [rax]
  407737:	mov    rdi,QWORD PTR [rsp+0x28]
  40773c:	lea    rsi,[rip+0xb094]        # 4127d7 <getopt_long_only@@Base+0x58f7>
  407743:	call   4021c0 <freopen@plt>
  407748:	test   rax,rax
  40774b:	je     40938f <Mat_VarRead@plt+0x6fff>
  407751:	inc    r15d
  407754:	vmovaps xmm0,XMMWORD PTR [rip+0xd5f4]        # 414d50 <getopt_long_only@@Base+0x7e70>
  40775c:	vmovaps XMMWORD PTR [rsp+0xde0],xmm0
  407765:	vmovdqa xmm0,XMMWORD PTR [rip+0x6913]        # 40e080 <getopt_long_only@@Base+0x11a0>
  40776d:	vmovdqa XMMWORD PTR [rsp+0x40],xmm0
  407773:	lea    rdi,[rip+0x895b]        # 4100d5 <getopt_long_only@@Base+0x31f5>
  40777a:	mov    esi,0x2
  40777f:	lea    r14,[rsp+0x40]
  407784:	mov    rdx,r14
  407787:	lea    r12,[rsp+0xde0]
  40778f:	mov    rcx,r12
  407792:	mov    r8d,0x2
  407798:	call   402300 <Mat_VarCreateStruct@plt>
  40779d:	mov    rbx,rax
  4077a0:	mov    rdi,rax
  4077a3:	mov    esi,0x1
  4077a8:	call   402270 <Mat_VarPrint@plt>
  4077ad:	mov    rdi,rbx
  4077b0:	call   402240 <Mat_VarFree@plt>
  4077b5:	lea    rdi,[rip+0x8d1b]        # 4104d7 <getopt_long_only@@Base+0x35f7>
  4077bc:	mov    esi,0x2
  4077c1:	mov    rdx,r14
  4077c4:	xor    ecx,ecx
  4077c6:	xor    r8d,r8d
  4077c9:	call   402300 <Mat_VarCreateStruct@plt>
  4077ce:	mov    rbx,rax
  4077d1:	mov    rdi,rax
  4077d4:	mov    esi,0x1
  4077d9:	call   402270 <Mat_VarPrint@plt>
  4077de:	mov    rdi,rbx
  4077e1:	call   402240 <Mat_VarFree@plt>
  4077e6:	vpxor  xmm0,xmm0,xmm0
  4077ea:	vmovdqa XMMWORD PTR [rsp+0x40],xmm0
  4077f0:	lea    rdi,[rip+0x804b]        # 40f842 <getopt_long_only@@Base+0x2962>
  4077f7:	mov    esi,0x2
  4077fc:	mov    rdx,r14
  4077ff:	mov    rcx,r12
  407802:	mov    r8d,0x2
  407808:	call   402300 <Mat_VarCreateStruct@plt>
  40780d:	mov    rbx,rax
  407810:	mov    rdi,rax
  407813:	jmp    4086f4 <Mat_VarRead@plt+0x6364>
  407818:	mov    r15d,0x1
  40781e:	inc    r12d
  407821:	add    DWORD PTR [rsp+0x3c],r15d
  407826:	mov    r15,r12
  407829:	jmp    4028c8 <Mat_VarRead@plt+0x538>
  40782e:	cmp    QWORD PTR [rsp+0x28],0x0
  407834:	je     40785a <Mat_VarRead@plt+0x54ca>
  407836:	mov    rax,QWORD PTR [rip+0xd7a3]        # 414fe0 <getopt_long_only@@Base+0x8100>
  40783d:	mov    rdx,QWORD PTR [rax]
  407840:	mov    rdi,QWORD PTR [rsp+0x28]
  407845:	lea    rsi,[rip+0xaf8b]        # 4127d7 <getopt_long_only@@Base+0x58f7>
  40784c:	call   4021c0 <freopen@plt>
  407851:	test   rax,rax
  407854:	je     4095bf <Mat_VarRead@plt+0x722f>
  40785a:	inc    r15d
  40785d:	mov    QWORD PTR [rsp+0x50],r15
  407862:	vmovaps xmm0,XMMWORD PTR [rip+0x6956]        # 40e1c0 <getopt_long_only@@Base+0x12e0>
  40786a:	vmovaps XMMWORD PTR [rsp+0x400],xmm0
  407873:	mov    rax,QWORD PTR [rip+0x6e46]        # 40e6c0 <getopt_long_only@@Base+0x17e0>
  40787a:	mov    QWORD PTR [rsp+0x10f0],rax
  407882:	vmovaps xmm0,XMMWORD PTR [rip+0x6e26]        # 40e6b0 <getopt_long_only@@Base+0x17d0>
  40788a:	vmovaps XMMWORD PTR [rsp+0x10e0],xmm0
  407893:	mov    rax,QWORD PTR [rip+0x6e46]        # 40e6e0 <getopt_long_only@@Base+0x1800>
  40789a:	vmovaps xmm0,XMMWORD PTR [rip+0x6e2e]        # 40e6d0 <getopt_long_only@@Base+0x17f0>
  4078a2:	vmovaps XMMWORD PTR [rsp+0x1c40],xmm0
  4078ab:	vmovaps xmm0,XMMWORD PTR [rip+0x691d]        # 40e1d0 <getopt_long_only@@Base+0x12f0>
  4078b3:	vmovaps XMMWORD PTR [rsp+0x860],xmm0
  4078bc:	mov    QWORD PTR [rsp+0x1c50],rax
  4078c4:	vmovaps xmm0,XMMWORD PTR [rip+0xd484]        # 414d50 <getopt_long_only@@Base+0x7e70>
  4078cc:	vmovaps XMMWORD PTR [rsp+0xde0],xmm0
  4078d5:	vmovaps xmm0,XMMWORD PTR [rip+0x67a3]        # 40e080 <getopt_long_only@@Base+0x11a0>
  4078dd:	vmovaps XMMWORD PTR [rsp+0x40],xmm0
  4078e3:	mov    DWORD PTR [rsp],0x1
  4078ea:	xor    edi,edi
  4078ec:	mov    esi,0x6
  4078f1:	mov    edx,0x9
  4078f6:	mov    ecx,0x2
  4078fb:	lea    r14,[rsp+0x40]
  407900:	mov    r8,r14
  407903:	mov    rbx,r14
  407906:	mov    r9,r13
  407909:	call   4020d0 <Mat_VarCreate@plt>
  40790e:	mov    r12,rax
  407911:	mov    QWORD PTR [rsp+0x58],rax
  407916:	vmovaps xmm0,XMMWORD PTR [rip+0x6772]        # 40e090 <getopt_long_only@@Base+0x11b0>
  40791e:	vmovaps XMMWORD PTR [rsp+0x40],xmm0
  407924:	mov    DWORD PTR [rsp],0x1
  40792b:	xor    edi,edi
  40792d:	mov    esi,0x6
  407932:	mov    edx,0x9
  407937:	mov    ecx,0x2
  40793c:	mov    r8,r14
  40793f:	lea    r9,[rsp+0x10e0]
  407947:	call   4020d0 <Mat_VarCreate@plt>
  40794c:	mov    r14,rax
  40794f:	mov    QWORD PTR [rsp+0xa8],rax
  407957:	vmovaps xmm0,XMMWORD PTR [rip+0x6741]        # 40e0a0 <getopt_long_only@@Base+0x11c0>
  40795f:	vmovaps XMMWORD PTR [rsp+0x40],xmm0
  407965:	mov    DWORD PTR [rsp],0x1
  40796c:	xor    edi,edi
  40796e:	mov    esi,0x6
  407973:	mov    edx,0x9
  407978:	mov    ecx,0x2
  40797d:	mov    r8,rbx
  407980:	lea    r9,[rsp+0x1c40]
  407988:	call   4020d0 <Mat_VarCreate@plt>
  40798d:	mov    QWORD PTR [rsp+0xf8],rax
  407995:	vmovaps xmm0,XMMWORD PTR [rip+0x6713]        # 40e0b0 <getopt_long_only@@Base+0x11d0>
  40799d:	vmovaps XMMWORD PTR [rsp+0x40],xmm0
  4079a3:	mov    DWORD PTR [rsp],0x1
  4079aa:	xor    edi,edi
  4079ac:	mov    esi,0x6
  4079b1:	mov    edx,0x9
  4079b6:	mov    ecx,0x2
  4079bb:	mov    r8,rbx
  4079be:	lea    r9,[rsp+0x860]
  4079c6:	call   4020d0 <Mat_VarCreate@plt>
  4079cb:	mov    r13,rax
  4079ce:	vmovaps xmm0,XMMWORD PTR [rip+0x66aa]        # 40e080 <getopt_long_only@@Base+0x11a0>
  4079d6:	vmovaps XMMWORD PTR [rsp+0x40],xmm0
  4079dc:	lea    rdi,[rip+0x86f2]        # 4100d5 <getopt_long_only@@Base+0x31f5>
  4079e3:	mov    esi,0x2
  4079e8:	mov    rdx,rbx
  4079eb:	lea    rax,[rsp+0xde0]
  4079f3:	mov    rcx,rax
  4079f6:	mov    r8d,0x2
  4079fc:	call   402300 <Mat_VarCreateStruct@plt>
  407a01:	mov    rbx,rax
  407a04:	mov    rdi,rax
  407a07:	lea    r15,[rip+0xada0]        # 4127ae <getopt_long_only@@Base+0x58ce>
  407a0e:	mov    rsi,r15
  407a11:	xor    edx,edx
  407a13:	mov    rcx,r12
  407a16:	call   402370 <Mat_VarSetStructFieldByName@plt>
  407a1b:	mov    rdi,rbx
  407a1e:	lea    r12,[rip+0xad90]        # 4127b5 <getopt_long_only@@Base+0x58d5>
  407a25:	mov    rsi,r12
  407a28:	xor    edx,edx
  407a2a:	mov    rcx,r14
  407a2d:	call   402370 <Mat_VarSetStructFieldByName@plt>
  407a32:	mov    edx,0x1
  407a37:	mov    rdi,rbx
  407a3a:	mov    rsi,r15
  407a3d:	mov    r14,QWORD PTR [rsp+0xf8]
  407a45:	mov    rcx,r14
  407a48:	call   402370 <Mat_VarSetStructFieldByName@plt>
  407a4d:	mov    edx,0x1
  407a52:	mov    rdi,rbx
  407a55:	mov    rsi,r12
  407a58:	mov    rcx,r13
  407a5b:	call   402370 <Mat_VarSetStructFieldByName@plt>
  407a60:	mov    rdi,rbx
  407a63:	mov    esi,0x1
  407a68:	call   402270 <Mat_VarPrint@plt>
  407a6d:	mov    QWORD PTR [rbx+0x38],0x0
  407a75:	mov    rdi,rbx
  407a78:	call   402240 <Mat_VarFree@plt>
  407a7d:	vmovdqa xmm0,XMMWORD PTR [rip+0x65fb]        # 40e080 <getopt_long_only@@Base+0x11a0>
  407a85:	vmovdqa XMMWORD PTR [rsp+0x40],xmm0
  407a8b:	lea    rdi,[rip+0x8a45]        # 4104d7 <getopt_long_only@@Base+0x35f7>
  407a92:	mov    esi,0x2
  407a97:	lea    rdx,[rsp+0x40]
  407a9c:	lea    rcx,[rsp+0xde0]
  407aa4:	mov    r8d,0x2
  407aaa:	call   402300 <Mat_VarCreateStruct@plt>
  407aaf:	mov    rbx,rax
  407ab2:	mov    rdi,rax
  407ab5:	xor    esi,esi
  407ab7:	xor    edx,edx
  407ab9:	mov    rcx,r13
  407abc:	lea    r13,[rsp+0x400]
  407ac4:	call   402380 <Mat_VarSetStructFieldByIndex@plt>
  407ac9:	mov    esi,0x1
  407ace:	mov    rdi,rbx
  407ad1:	xor    edx,edx
  407ad3:	mov    rcx,r14
  407ad6:	call   402380 <Mat_VarSetStructFieldByIndex@plt>
  407adb:	mov    edx,0x1
  407ae0:	mov    rdi,rbx
  407ae3:	xor    esi,esi
  407ae5:	mov    rcx,QWORD PTR [rsp+0xa8]
  407aed:	mov    r15,QWORD PTR [rsp+0x50]
  407af2:	call   402380 <Mat_VarSetStructFieldByIndex@plt>
  407af7:	mov    esi,0x1
  407afc:	mov    edx,0x1
  407b01:	mov    rdi,rbx
  407b04:	mov    rcx,QWORD PTR [rsp+0x58]
  407b09:	call   402380 <Mat_VarSetStructFieldByIndex@plt>
  407b0e:	jmp    4086f1 <Mat_VarRead@plt+0x6361>
  407b13:	mov    eax,0x1
  407b18:	mov    r15,QWORD PTR [rsp+0x50]
  407b1d:	inc    r15d
  407b20:	add    DWORD PTR [rsp+0x3c],eax
  407b24:	jmp    4028c8 <Mat_VarRead@plt+0x538>
  407b29:	mov    edx,0x1
  407b2e:	lea    r13,[rsp+0x140]
  407b36:	lea    r12,[rsp+0x14c]
  407b3e:	mov    rsi,r12
  407b41:	lea    rax,[rsp+0x158]
  407b49:	mov    r12,rax
  407b4c:	lea    rax,[rsp+0x164]
  407b54:	jmp    407c9e <Mat_VarRead@plt+0x590e>
  407b59:	mov    edx,0x2
  407b5e:	lea    r13,[rsp+0x1a0]
  407b66:	lea    r12,[rsp+0x1ac]
  407b6e:	mov    rsi,r12
  407b71:	lea    rax,[rsp+0x1b8]
  407b79:	mov    r12,rax
  407b7c:	lea    rax,[rsp+0x1c4]
  407b84:	jmp    407c9e <Mat_VarRead@plt+0x590e>
  407b89:	mov    edx,0x3
  407b8e:	lea    r13,[rsp+0x1e0]
  407b96:	lea    r12,[rsp+0x1f8]
  407b9e:	mov    rsi,r12
  407ba1:	lea    rax,[rsp+0x210]
  407ba9:	mov    r12,rax
  407bac:	lea    rax,[rsp+0x228]
  407bb4:	jmp    407c9e <Mat_VarRead@plt+0x590e>
  407bb9:	mov    edx,0x4
  407bbe:	lea    r13,[rsp+0x380]
  407bc6:	lea    r12,[rsp+0x398]
  407bce:	mov    rsi,r12
  407bd1:	lea    rax,[rsp+0x3b0]
  407bd9:	mov    r12,rax
  407bdc:	lea    rax,[rsp+0x3c8]
  407be4:	jmp    407c9e <Mat_VarRead@plt+0x590e>
  407be9:	mov    edx,0x5
  407bee:	lea    r13,[rsp+0x5c0]
  407bf6:	lea    r12,[rsp+0x5f0]
  407bfe:	mov    rsi,r12
  407c01:	lea    rax,[rsp+0x620]
  407c09:	mov    r12,rax
  407c0c:	lea    rax,[rsp+0x650]
  407c14:	jmp    407c9e <Mat_VarRead@plt+0x590e>
  407c19:	mov    edx,0x6
  407c1e:	lea    r13,[rsp+0xba0]
  407c26:	lea    r12,[rsp+0xbd0]
  407c2e:	mov    rsi,r12
  407c31:	lea    rax,[rsp+0xc00]
  407c39:	mov    r12,rax
  407c3c:	lea    rax,[rsp+0xc30]
  407c44:	jmp    407c9e <Mat_VarRead@plt+0x590e>
  407c46:	mov    edx,0xc
  407c4b:	lea    r13,[rsp+0xa00]
  407c53:	lea    r12,[rsp+0xa60]
  407c5b:	mov    rsi,r12
  407c5e:	lea    rax,[rsp+0xac0]
  407c66:	mov    r12,rax
  407c69:	lea    rax,[rsp+0xb20]
  407c71:	jmp    407c9e <Mat_VarRead@plt+0x590e>
  407c73:	mov    edx,0xd
  407c78:	lea    r13,[rsp+0xde0]
  407c80:	lea    r12,[rsp+0xe40]
  407c88:	mov    rsi,r12
  407c8b:	lea    rax,[rsp+0xea0]
  407c93:	mov    r12,rax
  407c96:	lea    rax,[rsp+0xf00]
  407c9e:	mov    rbx,rax
  407ca1:	mov    QWORD PTR [rsp+0xf8],r13
  407ca9:	mov    QWORD PTR [rsp+0xa8],rsi
  407cb1:	mov    r13d,edx
  407cb4:	mov    edx,DWORD PTR [rip+0xd666]        # 415320 <getopt_long_only@@Base+0x8440>
  407cba:	xor    esi,esi
  407cbc:	vzeroupper 
  407cbf:	call   402310 <Mat_CreateVer@plt>
  407cc4:	test   rax,rax
  407cc7:	je     407e1e <Mat_VarRead@plt+0x5a8e>
  407ccd:	mov    r14,rax
  407cd0:	vmovaps xmm0,XMMWORD PTR [rip+0x6388]        # 40e060 <getopt_long_only@@Base+0x1180>
  407cd8:	vmovaps XMMWORD PTR [rsp+0x40],xmm0
  407cde:	mov    DWORD PTR [rsp],0x1
  407ce5:	xor    eax,eax
  407ce7:	mov    QWORD PTR [rsp+0x58],rax
  407cec:	xor    edi,edi
  407cee:	mov    QWORD PTR [rsp+0x50],r15
  407cf3:	mov    r15,QWORD PTR [rsp+0xb0]
  407cfb:	mov    esi,r15d
  407cfe:	mov    edx,r13d
  407d01:	mov    ecx,0x2
  407d06:	mov    QWORD PTR [rsp+0x108],rbx
  407d0e:	mov    rbx,r12
  407d11:	lea    r12,[rsp+0x40]
  407d16:	mov    r8,r12
  407d19:	mov    r9,QWORD PTR [rsp+0xf8]
  407d21:	call   4020d0 <Mat_VarCreate@plt>
  407d26:	mov    QWORD PTR [rsp+0xc0],rax
  407d2e:	mov    DWORD PTR [rsp],0x1
  407d35:	xor    edi,edi
  407d37:	mov    esi,r15d
  407d3a:	mov    edx,r13d
  407d3d:	mov    ecx,0x2
  407d42:	mov    r8,r12
  407d45:	mov    r9,QWORD PTR [rsp+0xa8]
  407d4d:	call   4020d0 <Mat_VarCreate@plt>
  407d52:	mov    QWORD PTR [rsp+0xc8],rax
  407d5a:	mov    DWORD PTR [rsp],0x1
  407d61:	xor    edi,edi
  407d63:	mov    esi,r15d
  407d66:	mov    edx,r13d
  407d69:	mov    ecx,0x2
  407d6e:	mov    r8,r12
  407d71:	mov    r9,rbx
  407d74:	call   4020d0 <Mat_VarCreate@plt>
  407d79:	mov    QWORD PTR [rsp+0xd0],rax
  407d81:	mov    DWORD PTR [rsp],0x1
  407d88:	xor    edi,edi
  407d8a:	mov    esi,r15d
  407d8d:	mov    r15,QWORD PTR [rsp+0x50]
  407d92:	mov    edx,r13d
  407d95:	mov    ecx,0x2
  407d9a:	mov    r8,r12
  407d9d:	mov    r9,QWORD PTR [rsp+0x108]
  407da5:	call   4020d0 <Mat_VarCreate@plt>
  407daa:	mov    QWORD PTR [rsp+0xd8],rax
  407db2:	mov    QWORD PTR [rsp+0xe0],0x0
  407dbe:	vmovdqa xmm0,XMMWORD PTR [rip+0x634a]        # 40e110 <getopt_long_only@@Base+0x1230>
  407dc6:	vmovdqa XMMWORD PTR [rsp+0x40],xmm0
  407dcc:	mov    DWORD PTR [rsp],0x0
  407dd3:	lea    rdi,[rip+0x82fb]        # 4100d5 <getopt_long_only@@Base+0x31f5>
  407dda:	mov    esi,0x1
  407ddf:	mov    edx,0x15
  407de4:	mov    ecx,0x2
  407de9:	mov    r8,r12
  407dec:	lea    r9,[rsp+0xc0]
  407df4:	call   4020d0 <Mat_VarCreate@plt>
  407df9:	mov    rbx,rax
  407dfc:	movzx  edx,BYTE PTR [rip+0xe659]        # 41645c <optopt@@Base+0x24>
  407e03:	mov    rdi,r14
  407e06:	mov    rsi,rax
  407e09:	call   4020f0 <Mat_VarWrite@plt>
  407e0e:	mov    rdi,rbx
  407e11:	call   402240 <Mat_VarFree@plt>
  407e16:	mov    rdi,r14
  407e19:	call   4022a0 <Mat_Close@plt>
  407e1e:	inc    r15d
  407e21:	mov    rax,QWORD PTR [rsp+0x58]
  407e26:	add    DWORD PTR [rsp+0x3c],eax
  407e2a:	jmp    406b94 <Mat_VarRead@plt+0x4804>
  407e2f:	cmp    QWORD PTR [rsp+0x28],0x0
  407e35:	je     407e5b <Mat_VarRead@plt+0x5acb>
  407e37:	mov    rax,QWORD PTR [rip+0xd1a2]        # 414fe0 <getopt_long_only@@Base+0x8100>
  407e3e:	mov    rdx,QWORD PTR [rax]
  407e41:	mov    rdi,QWORD PTR [rsp+0x28]
  407e46:	lea    rsi,[rip+0xa98a]        # 4127d7 <getopt_long_only@@Base+0x58f7>
  407e4d:	call   4021c0 <freopen@plt>
  407e52:	test   rax,rax
  407e55:	je     409615 <Mat_VarRead@plt+0x7285>
  407e5b:	vmovups ymm0,YMMWORD PTR [rip+0xcefd]        # 414d60 <getopt_long_only@@Base+0x7e80>
  407e63:	vmovaps YMMWORD PTR [rsp+0x10e0],ymm0
  407e6c:	vmovdqa xmm0,XMMWORD PTR [rip+0x620c]        # 40e080 <getopt_long_only@@Base+0x11a0>
  407e74:	vmovdqa XMMWORD PTR [rsp+0x40],xmm0
  407e7a:	lea    rdi,[rip+0x8254]        # 4100d5 <getopt_long_only@@Base+0x31f5>
  407e81:	mov    esi,0x2
  407e86:	lea    rdx,[rsp+0x40]
  407e8b:	lea    rcx,[rsp+0x10e0]
  407e93:	mov    r8d,0x4
  407e99:	vzeroupper 
  407e9c:	call   402300 <Mat_VarCreateStruct@plt>
  407ea1:	mov    r14,rax
  407ea4:	mov    rdi,rax
  407ea7:	call   402030 <Mat_VarGetNumberOfFields@plt>
  407eac:	mov    ebx,eax
  407eae:	mov    rdi,r14
  407eb1:	call   4021e0 <Mat_VarGetStructFieldnames@plt>
  407eb6:	mov    r15,rax
  407eb9:	lea    rdi,[rip+0xac98]        # 412b58 <getopt_long_only@@Base+0x5c78>
  407ec0:	call   4020c0 <puts@plt>
  407ec5:	test   ebx,ebx
  407ec7:	je     408987 <Mat_VarRead@plt+0x65f7>
  407ecd:	mov    r12d,ebx
  407ed0:	xor    ebx,ebx
  407ed2:	lea    r13,[rip+0xa93c]        # 412815 <getopt_long_only@@Base+0x5935>
  407ed9:	mov    rdx,QWORD PTR [r15+rbx*8]
  407edd:	mov    rdi,r13
  407ee0:	mov    esi,ebx
  407ee2:	xor    eax,eax
  407ee4:	call   402160 <printf@plt>
  407ee9:	inc    rbx
  407eec:	cmp    r12,rbx
  407eef:	jne    407ed9 <Mat_VarRead@plt+0x5b49>
  407ef1:	jmp    408993 <Mat_VarRead@plt+0x6603>
  407ef6:	lea    rax,[rsp+0xc80]
  407efe:	mov    QWORD PTR [rsp+0x60],rax
  407f03:	lea    rax,[rsp+0xf80]
  407f0b:	mov    QWORD PTR [rsp+0x68],rax
  407f10:	lea    rax,[rsp+0xcb0]
  407f18:	mov    QWORD PTR [rsp+0x70],rax
  407f1d:	lea    rax,[rsp+0xfb0]
  407f25:	mov    QWORD PTR [rsp+0x78],rax
  407f2a:	lea    rax,[rsp+0xce0]
  407f32:	mov    QWORD PTR [rsp+0x80],rax
  407f3a:	lea    rax,[rsp+0xfe0]
  407f42:	mov    QWORD PTR [rsp+0x88],rax
  407f4a:	lea    rax,[rsp+0xd10]
  407f52:	mov    QWORD PTR [rsp+0x90],rax
  407f5a:	lea    rax,[rsp+0x1010]
  407f62:	mov    QWORD PTR [rsp+0x98],rax
  407f6a:	mov    r12d,0x7
  407f70:	jmp    40835d <Mat_VarRead@plt+0x5fcd>
  407f75:	lea    rax,[rsp+0x140]
  407f7d:	mov    QWORD PTR [rsp+0x60],rax
  407f82:	lea    rax,[rsp+0x1a0]
  407f8a:	mov    QWORD PTR [rsp+0x68],rax
  407f8f:	lea    rax,[rsp+0x14c]
  407f97:	mov    QWORD PTR [rsp+0x70],rax
  407f9c:	lea    rax,[rsp+0x1ac]
  407fa4:	mov    QWORD PTR [rsp+0x78],rax
  407fa9:	lea    rax,[rsp+0x158]
  407fb1:	mov    QWORD PTR [rsp+0x80],rax
  407fb9:	lea    rax,[rsp+0x1b8]
  407fc1:	mov    QWORD PTR [rsp+0x88],rax
  407fc9:	lea    rax,[rsp+0x164]
  407fd1:	mov    QWORD PTR [rsp+0x90],rax
  407fd9:	lea    rax,[rsp+0x1c4]
  407fe1:	mov    QWORD PTR [rsp+0x98],rax
  407fe9:	mov    r12d,0x1
  407fef:	jmp    40835d <Mat_VarRead@plt+0x5fcd>
  407ff4:	lea    rax,[rsp+0x260]
  407ffc:	mov    QWORD PTR [rsp+0x60],rax
  408001:	lea    rax,[rsp+0x2a0]
  408009:	mov    QWORD PTR [rsp+0x68],rax
  40800e:	lea    rax,[rsp+0x26c]
  408016:	mov    QWORD PTR [rsp+0x70],rax
  40801b:	lea    rax,[rsp+0x2ac]
  408023:	mov    QWORD PTR [rsp+0x78],rax
  408028:	lea    rax,[rsp+0x278]
  408030:	mov    QWORD PTR [rsp+0x80],rax
  408038:	lea    rax,[rsp+0x2b8]
  408040:	mov    QWORD PTR [rsp+0x88],rax
  408048:	lea    rax,[rsp+0x284]
  408050:	mov    QWORD PTR [rsp+0x90],rax
  408058:	lea    rax,[rsp+0x2c4]
  408060:	mov    QWORD PTR [rsp+0x98],rax
  408068:	mov    r12d,0x2
  40806e:	jmp    40835d <Mat_VarRead@plt+0x5fcd>
  408073:	lea    rax,[rsp+0x1e0]
  40807b:	mov    QWORD PTR [rsp+0x60],rax
  408080:	lea    rax,[rsp+0x380]
  408088:	mov    QWORD PTR [rsp+0x68],rax
  40808d:	lea    rax,[rsp+0x1f8]
  408095:	mov    QWORD PTR [rsp+0x70],rax
  40809a:	lea    rax,[rsp+0x398]
  4080a2:	mov    QWORD PTR [rsp+0x78],rax
  4080a7:	lea    rax,[rsp+0x210]
  4080af:	mov    QWORD PTR [rsp+0x80],rax
  4080b7:	lea    rax,[rsp+0x3b0]
  4080bf:	mov    QWORD PTR [rsp+0x88],rax
  4080c7:	lea    rax,[rsp+0x228]
  4080cf:	mov    QWORD PTR [rsp+0x90],rax
  4080d7:	lea    rax,[rsp+0x3c8]
  4080df:	mov    QWORD PTR [rsp+0x98],rax
  4080e7:	mov    r12d,0x3
  4080ed:	jmp    40835d <Mat_VarRead@plt+0x5fcd>
  4080f2:	lea    rax,[rsp+0x300]
  4080fa:	mov    QWORD PTR [rsp+0x60],rax
  4080ff:	lea    rax,[rsp+0xd60]
  408107:	mov    QWORD PTR [rsp+0x68],rax
  40810c:	lea    rax,[rsp+0x318]
  408114:	mov    QWORD PTR [rsp+0x70],rax
  408119:	lea    rax,[rsp+0xd78]
  408121:	mov    QWORD PTR [rsp+0x78],rax
  408126:	lea    rax,[rsp+0x330]
  40812e:	mov    QWORD PTR [rsp+0x80],rax
  408136:	lea    rax,[rsp+0xd90]
  40813e:	mov    QWORD PTR [rsp+0x88],rax
  408146:	lea    rax,[rsp+0x348]
  40814e:	mov    QWORD PTR [rsp+0x90],rax
  408156:	lea    rax,[rsp+0xda8]
  40815e:	mov    QWORD PTR [rsp+0x98],rax
  408166:	mov    r12d,0x4
  40816c:	jmp    40835d <Mat_VarRead@plt+0x5fcd>
  408171:	lea    rax,[rsp+0x5c0]
  408179:	mov    QWORD PTR [rsp+0x60],rax
  40817e:	lea    rax,[rsp+0xba0]
  408186:	mov    QWORD PTR [rsp+0x68],rax
  40818b:	lea    rax,[rsp+0x5f0]
  408193:	mov    QWORD PTR [rsp+0x70],rax
  408198:	lea    rax,[rsp+0xbd0]
  4081a0:	mov    QWORD PTR [rsp+0x78],rax
  4081a5:	lea    rax,[rsp+0x620]
  4081ad:	mov    QWORD PTR [rsp+0x80],rax
  4081b5:	lea    rax,[rsp+0xc00]
  4081bd:	mov    QWORD PTR [rsp+0x88],rax
  4081c5:	lea    rax,[rsp+0x650]
  4081cd:	mov    QWORD PTR [rsp+0x90],rax
  4081d5:	lea    rax,[rsp+0xc30]
  4081dd:	mov    QWORD PTR [rsp+0x98],rax
  4081e5:	mov    r12d,0x5
  4081eb:	jmp    40835d <Mat_VarRead@plt+0x5fcd>
  4081f0:	lea    rax,[rsp+0x6a0]
  4081f8:	mov    QWORD PTR [rsp+0x60],rax
  4081fd:	lea    rax,[rsp+0x780]
  408205:	mov    QWORD PTR [rsp+0x68],rax
  40820a:	lea    rax,[rsp+0x6d0]
  408212:	mov    QWORD PTR [rsp+0x70],rax
  408217:	lea    rax,[rsp+0x7b0]
  40821f:	mov    QWORD PTR [rsp+0x78],rax
  408224:	lea    rax,[rsp+0x700]
  40822c:	mov    QWORD PTR [rsp+0x80],rax
  408234:	lea    rax,[rsp+0x7e0]
  40823c:	mov    QWORD PTR [rsp+0x88],rax
  408244:	lea    rax,[rsp+0x730]
  40824c:	mov    QWORD PTR [rsp+0x90],rax
  408254:	lea    rax,[rsp+0x810]
  40825c:	mov    QWORD PTR [rsp+0x98],rax
  408264:	mov    r12d,0x6
  40826a:	jmp    40835d <Mat_VarRead@plt+0x5fcd>
  40826f:	lea    rax,[rsp+0xa00]
  408277:	mov    QWORD PTR [rsp+0x60],rax
  40827c:	lea    rax,[rsp+0xde0]
  408284:	mov    QWORD PTR [rsp+0x68],rax
  408289:	lea    rax,[rsp+0xa60]
  408291:	mov    QWORD PTR [rsp+0x70],rax
  408296:	lea    rax,[rsp+0xe40]
  40829e:	mov    QWORD PTR [rsp+0x78],rax
  4082a3:	lea    rax,[rsp+0xac0]
  4082ab:	mov    QWORD PTR [rsp+0x80],rax
  4082b3:	lea    rax,[rsp+0xea0]
  4082bb:	mov    QWORD PTR [rsp+0x88],rax
  4082c3:	lea    rax,[rsp+0xb20]
  4082cb:	mov    QWORD PTR [rsp+0x90],rax
  4082d3:	lea    rax,[rsp+0xf00]
  4082db:	mov    QWORD PTR [rsp+0x98],rax
  4082e3:	mov    r12d,0xc
  4082e9:	jmp    40835d <Mat_VarRead@plt+0x5fcd>
  4082eb:	lea    rax,[rsp+0x1c40]
  4082f3:	mov    QWORD PTR [rsp+0x60],rax
  4082f8:	mov    QWORD PTR [rsp+0x68],r13
  4082fd:	lea    rax,[rsp+0x1ca0]
  408305:	mov    QWORD PTR [rsp+0x70],rax
  40830a:	lea    rax,[rsp+0x460]
  408312:	mov    QWORD PTR [rsp+0x78],rax
  408317:	lea    rax,[rsp+0x1d00]
  40831f:	mov    QWORD PTR [rsp+0x80],rax
  408327:	lea    rax,[rsp+0x4c0]
  40832f:	mov    QWORD PTR [rsp+0x88],rax
  408337:	lea    rax,[rsp+0x1d60]
  40833f:	mov    QWORD PTR [rsp+0x90],rax
  408347:	lea    rax,[rsp+0x520]
  40834f:	mov    QWORD PTR [rsp+0x98],rax
  408357:	mov    r12d,0xd
  40835d:	mov    edx,DWORD PTR [rip+0xcfbd]        # 415320 <getopt_long_only@@Base+0x8440>
  408363:	xor    esi,esi
  408365:	vzeroupper 
  408368:	call   402310 <Mat_CreateVer@plt>
  40836d:	test   rax,rax
  408370:	je     4084b1 <Mat_VarRead@plt+0x6121>
  408376:	mov    r14,rax
  408379:	vmovaps xmm0,XMMWORD PTR [rip+0x5cdf]        # 40e060 <getopt_long_only@@Base+0x1180>
  408381:	vmovaps XMMWORD PTR [rsp+0x40],xmm0
  408387:	mov    DWORD PTR [rsp],0x801
  40838e:	xor    r15d,r15d
  408391:	xor    edi,edi
  408393:	mov    rbx,QWORD PTR [rsp+0xb0]
  40839b:	mov    esi,ebx
  40839d:	mov    edx,r12d
  4083a0:	mov    ecx,0x2
  4083a5:	lea    r13,[rsp+0x40]
  4083aa:	mov    r8,r13
  4083ad:	lea    r9,[rsp+0x60]
  4083b2:	call   4020d0 <Mat_VarCreate@plt>
  4083b7:	mov    QWORD PTR [rsp+0xc0],rax
  4083bf:	mov    DWORD PTR [rsp],0x801
  4083c6:	xor    edi,edi
  4083c8:	mov    esi,ebx
  4083ca:	mov    edx,r12d
  4083cd:	mov    ecx,0x2
  4083d2:	mov    r8,r13
  4083d5:	lea    r9,[rsp+0x70]
  4083da:	call   4020d0 <Mat_VarCreate@plt>
  4083df:	mov    QWORD PTR [rsp+0xc8],rax
  4083e7:	mov    DWORD PTR [rsp],0x801
  4083ee:	xor    edi,edi
  4083f0:	mov    esi,ebx
  4083f2:	mov    edx,r12d
  4083f5:	mov    ecx,0x2
  4083fa:	mov    r8,r13
  4083fd:	lea    r9,[rsp+0x80]
  408405:	call   4020d0 <Mat_VarCreate@plt>
  40840a:	mov    QWORD PTR [rsp+0xd0],rax
  408412:	mov    DWORD PTR [rsp],0x801
  408419:	xor    edi,edi
  40841b:	mov    esi,ebx
  40841d:	mov    edx,r12d
  408420:	mov    ecx,0x2
  408425:	mov    r8,r13
  408428:	lea    r9,[rsp+0x90]
  408430:	call   4020d0 <Mat_VarCreate@plt>
  408435:	mov    QWORD PTR [rsp+0xd8],rax
  40843d:	mov    QWORD PTR [rsp+0xe0],0x0
  408449:	vmovdqa xmm0,XMMWORD PTR [rip+0x5cbf]        # 40e110 <getopt_long_only@@Base+0x1230>
  408451:	vmovdqa XMMWORD PTR [rsp+0x40],xmm0
  408457:	mov    DWORD PTR [rsp],0x0
  40845e:	lea    rdi,[rip+0x7c70]        # 4100d5 <getopt_long_only@@Base+0x31f5>
  408465:	mov    esi,0x1
  40846a:	mov    edx,0x15
  40846f:	mov    ecx,0x2
  408474:	mov    r8,r13
  408477:	lea    r13,[rsp+0x400]
  40847f:	lea    r9,[rsp+0xc0]
  408487:	call   4020d0 <Mat_VarCreate@plt>
  40848c:	mov    rbx,rax
  40848f:	movzx  edx,BYTE PTR [rip+0xdfc6]        # 41645c <optopt@@Base+0x24>
  408496:	mov    rdi,r14
  408499:	mov    rsi,rax
  40849c:	call   4020f0 <Mat_VarWrite@plt>
  4084a1:	mov    rdi,rbx
  4084a4:	call   402240 <Mat_VarFree@plt>
  4084a9:	mov    rdi,r14
  4084ac:	call   4022a0 <Mat_Close@plt>
  4084b1:	mov    rax,QWORD PTR [rsp+0x50]
  4084b6:	inc    eax
  4084b8:	add    DWORD PTR [rsp+0x3c],r15d
  4084bd:	mov    r15,rax
  4084c0:	jmp    4028d0 <Mat_VarRead@plt+0x540>
  4084c5:	cmp    QWORD PTR [rsp+0x28],0x0
  4084cb:	je     4084f1 <Mat_VarRead@plt+0x6161>
  4084cd:	mov    rax,QWORD PTR [rip+0xcb0c]        # 414fe0 <getopt_long_only@@Base+0x8100>
  4084d4:	mov    rdx,QWORD PTR [rax]
  4084d7:	mov    rdi,QWORD PTR [rsp+0x28]
  4084dc:	lea    rsi,[rip+0xa2f4]        # 4127d7 <getopt_long_only@@Base+0x58f7>
  4084e3:	call   4021c0 <freopen@plt>
  4084e8:	test   rax,rax
  4084eb:	je     4096b3 <Mat_VarRead@plt+0x7323>
  4084f1:	mov    r15,QWORD PTR [rsp+0x50]
  4084f6:	inc    r15d
  4084f9:	vmovaps xmm0,XMMWORD PTR [rip+0x5cbf]        # 40e1c0 <getopt_long_only@@Base+0x12e0>
  408501:	vmovaps XMMWORD PTR [rsp+0x400],xmm0
  40850a:	mov    rax,QWORD PTR [rip+0x61af]        # 40e6c0 <getopt_long_only@@Base+0x17e0>
  408511:	mov    QWORD PTR [rsp+0x10f0],rax
  408519:	vmovaps xmm0,XMMWORD PTR [rip+0x618f]        # 40e6b0 <getopt_long_only@@Base+0x17d0>
  408521:	vmovaps XMMWORD PTR [rsp+0x10e0],xmm0
  40852a:	mov    rax,QWORD PTR [rip+0x61af]        # 40e6e0 <getopt_long_only@@Base+0x1800>
  408531:	vmovaps xmm0,XMMWORD PTR [rip+0x6197]        # 40e6d0 <getopt_long_only@@Base+0x17f0>
  408539:	vmovaps XMMWORD PTR [rsp+0x1c40],xmm0
  408542:	mov    QWORD PTR [rsp+0x1c50],rax
  40854a:	vmovaps xmm0,XMMWORD PTR [rip+0x5c7e]        # 40e1d0 <getopt_long_only@@Base+0x12f0>
  408552:	vmovaps XMMWORD PTR [rsp+0x860],xmm0
  40855b:	vmovaps xmm0,XMMWORD PTR [rip+0x5b1d]        # 40e080 <getopt_long_only@@Base+0x11a0>
  408563:	vmovaps XMMWORD PTR [rsp+0x40],xmm0
  408569:	lea    rdi,[rip+0x7b65]        # 4100d5 <getopt_long_only@@Base+0x31f5>
  408570:	mov    esi,0x2
  408575:	lea    r12,[rsp+0x40]
  40857a:	mov    rdx,r12
  40857d:	xor    ecx,ecx
  40857f:	xor    r8d,r8d
  408582:	call   402300 <Mat_VarCreateStruct@plt>
  408587:	mov    rbx,rax
  40858a:	vmovaps xmm0,XMMWORD PTR [rip+0x5aee]        # 40e080 <getopt_long_only@@Base+0x11a0>
  408592:	vmovaps XMMWORD PTR [rsp+0x40],xmm0
  408598:	mov    DWORD PTR [rsp],0x1
  40859f:	xor    edi,edi
  4085a1:	mov    esi,0x6
  4085a6:	mov    edx,0x9
  4085ab:	mov    ecx,0x2
  4085b0:	mov    r8,r12
  4085b3:	lea    rax,[rsp+0x400]
  4085bb:	mov    r9,rax
  4085be:	call   4020d0 <Mat_VarCreate@plt>
  4085c3:	mov    QWORD PTR [rsp+0xa8],rax
  4085cb:	vmovaps xmm0,XMMWORD PTR [rip+0x5abd]        # 40e090 <getopt_long_only@@Base+0x11b0>
  4085d3:	vmovaps XMMWORD PTR [rsp+0x40],xmm0
  4085d9:	mov    DWORD PTR [rsp],0x1
  4085e0:	xor    edi,edi
  4085e2:	mov    esi,0x6
  4085e7:	mov    edx,0x9
  4085ec:	mov    ecx,0x2
  4085f1:	mov    r8,r12
  4085f4:	lea    r9,[rsp+0x10e0]
  4085fc:	call   4020d0 <Mat_VarCreate@plt>
  408601:	mov    QWORD PTR [rsp+0x58],rax
  408606:	vmovaps xmm0,XMMWORD PTR [rip+0x5a92]        # 40e0a0 <getopt_long_only@@Base+0x11c0>
  40860e:	vmovaps XMMWORD PTR [rsp+0x40],xmm0
  408614:	mov    DWORD PTR [rsp],0x1
  40861b:	xor    edi,edi
  40861d:	mov    esi,0x6
  408622:	mov    edx,0x9
  408627:	mov    ecx,0x2
  40862c:	mov    r8,r12
  40862f:	lea    r9,[rsp+0x1c40]
  408637:	call   4020d0 <Mat_VarCreate@plt>
  40863c:	mov    r13,rax
  40863f:	vmovdqa xmm0,XMMWORD PTR [rip+0x5a69]        # 40e0b0 <getopt_long_only@@Base+0x11d0>
  408647:	vmovdqa XMMWORD PTR [rsp+0x40],xmm0
  40864d:	mov    DWORD PTR [rsp],0x1
  408654:	xor    edi,edi
  408656:	mov    esi,0x6
  40865b:	mov    edx,0x9
  408660:	mov    ecx,0x2
  408665:	mov    r8,r12
  408668:	lea    r9,[rsp+0x860]
  408670:	call   4020d0 <Mat_VarCreate@plt>
  408675:	mov    r12,rax
  408678:	mov    rdi,rbx
  40867b:	lea    r14,[rip+0xa12c]        # 4127ae <getopt_long_only@@Base+0x58ce>
  408682:	mov    rsi,r14
  408685:	call   4020b0 <Mat_VarAddStructField@plt>
  40868a:	mov    rdi,rbx
  40868d:	mov    rsi,r14
  408690:	xor    edx,edx
  408692:	mov    rcx,QWORD PTR [rsp+0xa8]
  40869a:	call   402370 <Mat_VarSetStructFieldByName@plt>
  40869f:	mov    edx,0x1
  4086a4:	mov    rdi,rbx
  4086a7:	mov    rsi,r14
  4086aa:	mov    rcx,r13
  4086ad:	lea    r13,[rsp+0x400]
  4086b5:	call   402370 <Mat_VarSetStructFieldByName@plt>
  4086ba:	mov    rdi,rbx
  4086bd:	lea    r14,[rip+0xa0f1]        # 4127b5 <getopt_long_only@@Base+0x58d5>
  4086c4:	mov    rsi,r14
  4086c7:	call   4020b0 <Mat_VarAddStructField@plt>
  4086cc:	mov    rdi,rbx
  4086cf:	mov    rsi,r14
  4086d2:	xor    edx,edx
  4086d4:	mov    rcx,QWORD PTR [rsp+0x58]
  4086d9:	call   402370 <Mat_VarSetStructFieldByName@plt>
  4086de:	mov    edx,0x1
  4086e3:	mov    rdi,rbx
  4086e6:	mov    rsi,r14
  4086e9:	mov    rcx,r12
  4086ec:	call   402370 <Mat_VarSetStructFieldByName@plt>
  4086f1:	mov    rdi,rbx
  4086f4:	mov    esi,0x1
  4086f9:	call   402270 <Mat_VarPrint@plt>
  4086fe:	mov    rdi,rbx
  408701:	call   402240 <Mat_VarFree@plt>
  408706:	jmp    4028d0 <Mat_VarRead@plt+0x540>
  40870b:	cmp    QWORD PTR [rsp+0x28],0x0
  408711:	je     408737 <Mat_VarRead@plt+0x63a7>
  408713:	mov    rax,QWORD PTR [rip+0xc8c6]        # 414fe0 <getopt_long_only@@Base+0x8100>
  40871a:	mov    rdx,QWORD PTR [rax]
  40871d:	mov    rdi,QWORD PTR [rsp+0x28]
  408722:	lea    rsi,[rip+0xa0ae]        # 4127d7 <getopt_long_only@@Base+0x58f7>
  408729:	call   4021c0 <freopen@plt>
  40872e:	test   rax,rax
  408731:	je     409a18 <Mat_VarRead@plt+0x7688>
  408737:	mov    rax,QWORD PTR [rsp+0x50]
  40873c:	inc    eax
  40873e:	mov    QWORD PTR [rsp+0x50],rax
  408743:	vmovups ymm0,YMMWORD PTR [rip+0x5fe5]        # 40e730 <getopt_long_only@@Base+0x1850>
  40874b:	vmovaps YMMWORD PTR [rsp+0x1c80],ymm0
  408754:	vmovups ymm0,YMMWORD PTR [rip+0x5fb4]        # 40e710 <getopt_long_only@@Base+0x1830>
  40875c:	vmovaps YMMWORD PTR [rsp+0x1c60],ymm0
  408765:	vmovups ymm0,YMMWORD PTR [rip+0x5f83]        # 40e6f0 <getopt_long_only@@Base+0x1810>
  40876d:	vmovaps YMMWORD PTR [rsp+0x1c40],ymm0
  408776:	vmovups ymm0,YMMWORD PTR [rip+0x6012]        # 40e790 <getopt_long_only@@Base+0x18b0>
  40877e:	vmovaps YMMWORD PTR [rsp+0x440],ymm0
  408787:	vmovups ymm0,YMMWORD PTR [rip+0x5fe1]        # 40e770 <getopt_long_only@@Base+0x1890>
  40878f:	vmovaps YMMWORD PTR [rsp+0x420],ymm0
  408798:	vmovups ymm0,YMMWORD PTR [rip+0x5fb0]        # 40e750 <getopt_long_only@@Base+0x1870>
  4087a0:	vmovaps YMMWORD PTR [rsp+0x400],ymm0
  4087a9:	mov    rax,QWORD PTR [rip+0xc5e0]        # 414d90 <getopt_long_only@@Base+0x7eb0>
  4087b0:	mov    QWORD PTR [rsp+0x870],rax
  4087b8:	vmovaps xmm0,XMMWORD PTR [rip+0xc5c0]        # 414d80 <getopt_long_only@@Base+0x7ea0>
  4087c0:	vmovaps XMMWORD PTR [rsp+0x860],xmm0
  4087c9:	vmovaps xmm0,XMMWORD PTR [rip+0x588f]        # 40e060 <getopt_long_only@@Base+0x1180>
  4087d1:	vmovaps XMMWORD PTR [rsp+0x40],xmm0
  4087d7:	lea    rdi,[rip+0x78f7]        # 4100d5 <getopt_long_only@@Base+0x31f5>
  4087de:	mov    esi,0x2
  4087e3:	lea    rax,[rsp+0x40]
  4087e8:	mov    rdx,rax
  4087eb:	lea    rcx,[rsp+0x860]
  4087f3:	mov    r8d,0x3
  4087f9:	vzeroupper 
  4087fc:	call   402300 <Mat_VarCreateStruct@plt>
  408801:	mov    QWORD PTR [rsp+0x58],rax
  408806:	vmovdqa xmm0,XMMWORD PTR [rip+0x5812]        # 40e020 <getopt_long_only@@Base+0x1140>
  40880e:	vmovdqa XMMWORD PTR [rsp+0x40],xmm0
  408814:	lea    r15,[rsp+0x1c40]
  40881c:	lea    r12,[rsp+0x400]
  408824:	lea    r13,[rsp+0x10e0]
  40882c:	xor    ebx,ebx
  40882e:	mov    DWORD PTR [rsp],0x1
  408835:	xor    edi,edi
  408837:	mov    esi,0x6
  40883c:	mov    edx,0x9
  408841:	mov    ecx,0x2
  408846:	lea    r14,[rsp+0x40]
  40884b:	mov    r8,r14
  40884e:	mov    r9,r15
  408851:	call   4020d0 <Mat_VarCreate@plt>
  408856:	mov    r14,QWORD PTR [rsp+0x58]
  40885b:	mov    rdi,r14
  40885e:	lea    rsi,[rip+0x9ce5]        # 41254a <getopt_long_only@@Base+0x566a>
  408865:	mov    rdx,rbx
  408868:	mov    rcx,rax
  40886b:	call   402370 <Mat_VarSetStructFieldByName@plt>
  408870:	mov    DWORD PTR [rsp],0x1
  408877:	xor    edi,edi
  408879:	mov    esi,0x6
  40887e:	mov    edx,0x9
  408883:	mov    ecx,0x2
  408888:	lea    r8,[rsp+0x40]
  40888d:	mov    r9,r12
  408890:	call   4020d0 <Mat_VarCreate@plt>
  408895:	mov    rdi,r14
  408898:	lea    rsi,[rip+0x6fa3]        # 40f842 <getopt_long_only@@Base+0x2962>
  40889f:	mov    rdx,rbx
  4088a2:	mov    rcx,rax
  4088a5:	call   402370 <Mat_VarSetStructFieldByName@plt>
  4088aa:	mov    QWORD PTR [r13+0x0],r15
  4088ae:	mov    QWORD PTR [r13+0x8],r12
  4088b2:	mov    DWORD PTR [rsp],0x801
  4088b9:	xor    edi,edi
  4088bb:	mov    esi,0x6
  4088c0:	mov    edx,0x9
  4088c5:	mov    ecx,0x2
  4088ca:	lea    r8,[rsp+0x40]
  4088cf:	mov    r9,r13
  4088d2:	call   4020d0 <Mat_VarCreate@plt>
  4088d7:	mov    rdi,r14
  4088da:	lea    rsi,[rip+0x925d]        # 411b3e <getopt_long_only@@Base+0x4c5e>
  4088e1:	mov    rdx,rbx
  4088e4:	mov    rcx,rax
  4088e7:	call   402370 <Mat_VarSetStructFieldByName@plt>
  4088ec:	inc    rbx
  4088ef:	add    r13,0x10
  4088f3:	add    r12,0x8
  4088f7:	add    r15,0x8
  4088fb:	cmp    rbx,0xc
  4088ff:	jne    40882e <Mat_VarRead@plt+0x649e>
  408905:	mov    r14,QWORD PTR [rsp+0x58]
  40890a:	mov    rdi,r14
  40890d:	mov    esi,0x1
  408912:	mov    edx,0x3
  408917:	mov    ecx,0x4
  40891c:	xor    r8d,r8d
  40891f:	call   4022e0 <Mat_VarGetStructsLinear@plt>
  408924:	mov    rbx,rax
  408927:	mov    rdi,rax
  40892a:	mov    esi,0x1
  40892f:	call   402270 <Mat_VarPrint@plt>
  408934:	mov    rdi,rbx
  408937:	call   402240 <Mat_VarFree@plt>
  40893c:	mov    rdi,r14
  40893f:	xor    esi,esi
  408941:	mov    edx,0x1
  408946:	mov    ecx,0x3
  40894b:	xor    r8d,r8d
  40894e:	call   4022e0 <Mat_VarGetStructsLinear@plt>
  408953:	mov    rbx,rax
  408956:	mov    rdi,rax
  408959:	mov    esi,0x1
  40895e:	call   402270 <Mat_VarPrint@plt>
  408963:	mov    rdi,rbx
  408966:	call   402240 <Mat_VarFree@plt>
  40896b:	mov    rdi,r14
  40896e:	xor    esi,esi
  408970:	mov    edx,0x4
  408975:	mov    ecx,0x3
  40897a:	xor    r8d,r8d
  40897d:	call   4022e0 <Mat_VarGetStructsLinear@plt>
  408982:	jmp    408c7e <Mat_VarRead@plt+0x68ee>
  408987:	lea    rdi,[rip+0xa206]        # 412b94 <getopt_long_only@@Base+0x5cb4>
  40898e:	call   4020c0 <puts@plt>
  408993:	mov    rdi,r14
  408996:	call   402240 <Mat_VarFree@plt>
  40899b:	lea    rdi,[rip+0x7b35]        # 4104d7 <getopt_long_only@@Base+0x35f7>
  4089a2:	mov    esi,0x2
  4089a7:	lea    rdx,[rsp+0x40]
  4089ac:	xor    ecx,ecx
  4089ae:	xor    r8d,r8d
  4089b1:	call   402300 <Mat_VarCreateStruct@plt>
  4089b6:	mov    r14,rax
  4089b9:	mov    rdi,rax
  4089bc:	call   402030 <Mat_VarGetNumberOfFields@plt>
  4089c1:	mov    ebx,eax
  4089c3:	mov    rdi,r14
  4089c6:	call   4021e0 <Mat_VarGetStructFieldnames@plt>
  4089cb:	mov    r15,rax
  4089ce:	lea    rdi,[rip+0xa196]        # 412b6b <getopt_long_only@@Base+0x5c8b>
  4089d5:	call   4020c0 <puts@plt>
  4089da:	test   ebx,ebx
  4089dc:	je     408a04 <Mat_VarRead@plt+0x6674>
  4089de:	mov    r12d,ebx
  4089e1:	xor    ebx,ebx
  4089e3:	lea    r13,[rip+0x9e2b]        # 412815 <getopt_long_only@@Base+0x5935>
  4089ea:	mov    rdx,QWORD PTR [r15+rbx*8]
  4089ee:	mov    rdi,r13
  4089f1:	mov    esi,ebx
  4089f3:	xor    eax,eax
  4089f5:	call   402160 <printf@plt>
  4089fa:	inc    rbx
  4089fd:	cmp    r12,rbx
  408a00:	jne    4089ea <Mat_VarRead@plt+0x665a>
  408a02:	jmp    408a10 <Mat_VarRead@plt+0x6680>
  408a04:	lea    rdi,[rip+0xa189]        # 412b94 <getopt_long_only@@Base+0x5cb4>
  408a0b:	call   4020c0 <puts@plt>
  408a10:	mov    rdi,r14
  408a13:	call   402240 <Mat_VarFree@plt>
  408a18:	xor    edi,edi
  408a1a:	call   402030 <Mat_VarGetNumberOfFields@plt>
  408a1f:	mov    ebx,eax
  408a21:	xor    edi,edi
  408a23:	call   4021e0 <Mat_VarGetStructFieldnames@plt>
  408a28:	mov    r14,rax
  408a2b:	lea    rdi,[rip+0xa14c]        # 412b7e <getopt_long_only@@Base+0x5c9e>
  408a32:	call   4020c0 <puts@plt>
  408a37:	test   ebx,ebx
  408a39:	je     408a61 <Mat_VarRead@plt+0x66d1>
  408a3b:	mov    r15d,ebx
  408a3e:	xor    ebx,ebx
  408a40:	lea    r12,[rip+0x9dce]        # 412815 <getopt_long_only@@Base+0x5935>
  408a47:	mov    rdx,QWORD PTR [r14+rbx*8]
  408a4b:	mov    rdi,r12
  408a4e:	mov    esi,ebx
  408a50:	xor    eax,eax
  408a52:	call   402160 <printf@plt>
  408a57:	inc    rbx
  408a5a:	cmp    r15,rbx
  408a5d:	jne    408a47 <Mat_VarRead@plt+0x66b7>
  408a5f:	jmp    408a6d <Mat_VarRead@plt+0x66dd>
  408a61:	lea    rdi,[rip+0xa12c]        # 412b94 <getopt_long_only@@Base+0x5cb4>
  408a68:	call   4020c0 <puts@plt>
  408a6d:	mov    r15,QWORD PTR [rsp+0x50]
  408a72:	inc    r15d
  408a75:	jmp    406b94 <Mat_VarRead@plt+0x4804>
  408a7a:	cmp    QWORD PTR [rsp+0x28],0x0
  408a80:	je     408aa6 <Mat_VarRead@plt+0x6716>
  408a82:	mov    rax,QWORD PTR [rip+0xc557]        # 414fe0 <getopt_long_only@@Base+0x8100>
  408a89:	mov    rdx,QWORD PTR [rax]
  408a8c:	mov    rdi,QWORD PTR [rsp+0x28]
  408a91:	lea    rsi,[rip+0x9d3f]        # 4127d7 <getopt_long_only@@Base+0x58f7>
  408a98:	call   4021c0 <freopen@plt>
  408a9d:	test   rax,rax
  408aa0:	je     409dc2 <Mat_VarRead@plt+0x7a32>
  408aa6:	mov    rax,QWORD PTR [rsp+0x50]
  408aab:	inc    eax
  408aad:	mov    QWORD PTR [rsp+0x50],rax
  408ab2:	mov    edx,0xb40
  408ab7:	lea    r15,[rsp+0x10e0]
  408abf:	mov    rdi,r15
  408ac2:	xor    esi,esi
  408ac4:	call   4021b0 <memset@plt>
  408ac9:	mov    edx,0xb40
  408ace:	lea    rbx,[rsp+0x1c40]
  408ad6:	mov    rdi,rbx
  408ad9:	xor    esi,esi
  408adb:	call   4021b0 <memset@plt>
  408ae0:	mov    rax,QWORD PTR [rip+0xc2c9]        # 414db0 <getopt_long_only@@Base+0x7ed0>
  408ae7:	mov    QWORD PTR [rsp+0x870],rax
  408aef:	vmovaps xmm0,XMMWORD PTR [rip+0xc2a9]        # 414da0 <getopt_long_only@@Base+0x7ec0>
  408af7:	vmovaps XMMWORD PTR [rsp+0x860],xmm0
  408b00:	vmovaps ymm0,YMMWORD PTR [rip+0x56f8]        # 40e200 <getopt_long_only@@Base+0x1320>
  408b08:	vmovaps YMMWORD PTR [rsp+0x400],ymm0
  408b11:	lea    rdi,[rip+0x75bd]        # 4100d5 <getopt_long_only@@Base+0x31f5>
  408b18:	mov    esi,0x4
  408b1d:	lea    rax,[rsp+0x400]
  408b25:	mov    rdx,rax
  408b28:	lea    rcx,[rsp+0x860]
  408b30:	mov    r8d,0x2
  408b36:	vzeroupper 
  408b39:	call   402300 <Mat_VarCreateStruct@plt>
  408b3e:	mov    QWORD PTR [rsp+0xa8],rax
  408b46:	vmovaps xmm0,XMMWORD PTR [rip+0x54d2]        # 40e020 <getopt_long_only@@Base+0x1140>
  408b4e:	vmovaps XMMWORD PTR [rsp+0x400],xmm0
  408b57:	mov    r13d,0xffffffff
  408b5d:	xor    r12d,r12d
  408b60:	lea    rax,[r12+0x1]
  408b65:	mov    QWORD PTR [rsp+0x58],rax
  408b6a:	vcvtsi2sd xmm0,xmm1,eax
  408b6e:	vmovsd QWORD PTR [r15],xmm0
  408b73:	vcvtsi2sd xmm0,xmm1,r13d
  408b78:	vmovq  QWORD PTR [rbx],xmm0
  408b7c:	mov    DWORD PTR [rsp],0x1
  408b83:	xor    edi,edi
  408b85:	mov    esi,0x6
  408b8a:	mov    edx,0x9
  408b8f:	mov    ecx,0x2
  408b94:	lea    rax,[rsp+0x400]
  408b9c:	mov    r8,rax
  408b9f:	mov    r9,r15
  408ba2:	call   4020d0 <Mat_VarCreate@plt>
  408ba7:	mov    r14,QWORD PTR [rsp+0xa8]
  408baf:	mov    rdi,r14
  408bb2:	lea    rsi,[rip+0x9991]        # 41254a <getopt_long_only@@Base+0x566a>
  408bb9:	mov    rdx,r12
  408bbc:	mov    rcx,rax
  408bbf:	call   402370 <Mat_VarSetStructFieldByName@plt>
  408bc4:	mov    DWORD PTR [rsp],0x1
  408bcb:	xor    edi,edi
  408bcd:	mov    esi,0x6
  408bd2:	mov    edx,0x9
  408bd7:	mov    ecx,0x2
  408bdc:	lea    r8,[rsp+0x400]
  408be4:	mov    r9,rbx
  408be7:	call   4020d0 <Mat_VarCreate@plt>
  408bec:	mov    rdi,r14
  408bef:	lea    rsi,[rip+0x6c4c]        # 40f842 <getopt_long_only@@Base+0x2962>
  408bf6:	mov    rdx,r12
  408bf9:	mov    rcx,rax
  408bfc:	call   402370 <Mat_VarSetStructFieldByName@plt>
  408c01:	add    rbx,0x8
  408c05:	add    r15,0x8
  408c09:	dec    r13d
  408c0c:	mov    rax,QWORD PTR [rsp+0x58]
  408c11:	mov    r12,rax
  408c14:	cmp    rax,0x168
  408c1a:	jne    408b60 <Mat_VarRead@plt+0x67d0>
  408c20:	vmovaps xmm0,XMMWORD PTR [rip+0x5408]        # 40e030 <getopt_long_only@@Base+0x1150>
  408c28:	vmovaps XMMWORD PTR [rsp+0xde0],xmm0
  408c31:	vmovaps xmm0,XMMWORD PTR [rip+0x5407]        # 40e040 <getopt_long_only@@Base+0x1160>
  408c39:	vmovaps XMMWORD PTR [rsp+0xa00],xmm0
  408c42:	vmovdqa xmm0,XMMWORD PTR [rip+0x5406]        # 40e050 <getopt_long_only@@Base+0x1170>
  408c4a:	vmovdqa XMMWORD PTR [rsp+0xf80],xmm0
  408c53:	mov    r14,QWORD PTR [rsp+0xa8]
  408c5b:	mov    rdi,r14
  408c5e:	lea    rsi,[rsp+0xde0]
  408c66:	lea    rdx,[rsp+0xa00]
  408c6e:	lea    rcx,[rsp+0xf80]
  408c76:	xor    r8d,r8d
  408c79:	call   402290 <Mat_VarGetStructs@plt>
  408c7e:	mov    rbx,rax
  408c81:	mov    rdi,rax
  408c84:	mov    esi,0x1
  408c89:	call   402270 <Mat_VarPrint@plt>
  408c8e:	mov    rdi,rbx
  408c91:	call   402240 <Mat_VarFree@plt>
  408c96:	mov    rdi,r14
  408c99:	call   402240 <Mat_VarFree@plt>
  408c9e:	mov    rbx,QWORD PTR [rsp+0x30]
  408ca3:	mov    r15,QWORD PTR [rsp+0x50]
  408ca8:	lea    r13,[rsp+0x400]
  408cb0:	cmp    r15d,DWORD PTR [rsp+0x118]
  408cb8:	jl     4028e3 <Mat_VarRead@plt+0x553>
  408cbe:	jmp    40bfa9 <Mat_VarRead@plt+0x9c19>
  408cc3:	cmp    QWORD PTR [rsp+0x28],0x0
  408cc9:	je     408cef <Mat_VarRead@plt+0x695f>
  408ccb:	mov    rax,QWORD PTR [rip+0xc30e]        # 414fe0 <getopt_long_only@@Base+0x8100>
  408cd2:	mov    rdx,QWORD PTR [rax]
  408cd5:	mov    rdi,QWORD PTR [rsp+0x28]
  408cda:	lea    rsi,[rip+0x9af6]        # 4127d7 <getopt_long_only@@Base+0x58f7>
  408ce1:	call   4021c0 <freopen@plt>
  408ce6:	test   rax,rax
  408ce9:	je     40a3c6 <Mat_VarRead@plt+0x8036>
  408cef:	vmovups ymm0,YMMWORD PTR [rip+0x5ae9]        # 40e7e0 <getopt_long_only@@Base+0x1900>
  408cf7:	vmovups YMMWORD PTR [rsp+0x1110],ymm0
  408d00:	vmovups ymm0,YMMWORD PTR [rip+0x5ac8]        # 40e7d0 <getopt_long_only@@Base+0x18f0>
  408d08:	vmovaps YMMWORD PTR [rsp+0x1100],ymm0
  408d11:	vmovups ymm0,YMMWORD PTR [rip+0x5a97]        # 40e7b0 <getopt_long_only@@Base+0x18d0>
  408d19:	vmovaps YMMWORD PTR [rsp+0x10e0],ymm0
  408d22:	vmovaps xmm0,XMMWORD PTR [rip+0x5346]        # 40e070 <getopt_long_only@@Base+0x1190>
  408d2a:	vmovaps XMMWORD PTR [rsp+0x40],xmm0
  408d30:	mov    DWORD PTR [rsp],0x0
  408d37:	lea    rdi,[rip+0x7397]        # 4100d5 <getopt_long_only@@Base+0x31f5>
  408d3e:	mov    esi,0x1
  408d43:	mov    edx,0x15
  408d48:	mov    ecx,0x2
  408d4d:	lea    r13,[rsp+0x40]
  408d52:	mov    r8,r13
  408d55:	xor    r9d,r9d
  408d58:	vzeroupper 
  408d5b:	call   4020d0 <Mat_VarCreate@plt>
  408d60:	mov    rbx,rax
  408d63:	vmovdqa xmm0,XMMWORD PTR [rip+0x52b5]        # 40e020 <getopt_long_only@@Base+0x1140>
  408d6b:	vmovdqa XMMWORD PTR [rsp+0x40],xmm0
  408d71:	mov    DWORD PTR [rsp],0x1
  408d78:	xor    edi,edi
  408d7a:	mov    esi,0x6
  408d7f:	mov    edx,0x9
  408d84:	mov    ecx,0x2
  408d89:	mov    r8,r13
  408d8c:	lea    r9,[rsp+0x10e0]
  408d94:	call   4020d0 <Mat_VarCreate@plt>
  408d99:	mov    r14,rax
  408d9c:	mov    DWORD PTR [rsp],0x1
  408da3:	xor    edi,edi
  408da5:	mov    esi,0x6
  408daa:	mov    edx,0x9
  408daf:	mov    ecx,0x2
  408db4:	mov    r8,r13
  408db7:	lea    r9,[rsp+0x10e8]
  408dbf:	call   4020d0 <Mat_VarCreate@plt>
  408dc4:	mov    QWORD PTR [rsp+0x58],rax
  408dc9:	mov    DWORD PTR [rsp],0x1
  408dd0:	xor    edi,edi
  408dd2:	mov    esi,0x6
  408dd7:	mov    edx,0x9
  408ddc:	mov    ecx,0x2
  408de1:	mov    r8,r13
  408de4:	lea    r9,[rsp+0x10f0]
  408dec:	call   4020d0 <Mat_VarCreate@plt>
  408df1:	mov    r15,rax
  408df4:	mov    DWORD PTR [rsp],0x1
  408dfb:	xor    edi,edi
  408dfd:	mov    esi,0x6
  408e02:	mov    edx,0x9
  408e07:	mov    ecx,0x2
  408e0c:	mov    r8,r13
  408e0f:	lea    r9,[rsp+0x10f8]
  408e17:	call   4020d0 <Mat_VarCreate@plt>
  408e1c:	mov    QWORD PTR [rsp+0xa8],rax
  408e24:	mov    DWORD PTR [rsp],0x1
  408e2b:	xor    edi,edi
  408e2d:	mov    esi,0x6
  408e32:	mov    edx,0x9
  408e37:	mov    ecx,0x2
  408e3c:	mov    r8,r13
  408e3f:	lea    r9,[rsp+0x1100]
  408e47:	call   4020d0 <Mat_VarCreate@plt>
  408e4c:	mov    r12,rax
  408e4f:	mov    DWORD PTR [rsp],0x1
  408e56:	xor    edi,edi
  408e58:	mov    esi,0x6
  408e5d:	mov    edx,0x9
  408e62:	mov    ecx,0x2
  408e67:	mov    r8,r13
  408e6a:	lea    r9,[rsp+0x1108]
  408e72:	call   4020d0 <Mat_VarCreate@plt>
  408e77:	mov    QWORD PTR [rsp+0xf8],rax
  408e7f:	mov    DWORD PTR [rsp],0x1
  408e86:	xor    edi,edi
  408e88:	mov    esi,0x6
  408e8d:	mov    edx,0x9
  408e92:	mov    ecx,0x2
  408e97:	mov    r8,r13
  408e9a:	lea    r9,[rsp+0x1110]
  408ea2:	call   4020d0 <Mat_VarCreate@plt>
  408ea7:	mov    QWORD PTR [rsp+0x108],rax
  408eaf:	mov    DWORD PTR [rsp],0x1
  408eb6:	xor    edi,edi
  408eb8:	mov    esi,0x6
  408ebd:	mov    edx,0x9
  408ec2:	mov    ecx,0x2
  408ec7:	mov    r8,r13
  408eca:	lea    r9,[rsp+0x1118]
  408ed2:	call   4020d0 <Mat_VarCreate@plt>
  408ed7:	mov    QWORD PTR [rsp+0x110],rax
  408edf:	mov    DWORD PTR [rsp],0x1
  408ee6:	xor    edi,edi
  408ee8:	mov    esi,0x6
  408eed:	mov    edx,0x9
  408ef2:	mov    ecx,0x2
  408ef7:	mov    r8,r13
  408efa:	lea    r9,[rsp+0x1120]
  408f02:	call   4020d0 <Mat_VarCreate@plt>
  408f07:	mov    QWORD PTR [rsp+0x138],rax
  408f0f:	mov    DWORD PTR [rsp],0x1
  408f16:	xor    edi,edi
  408f18:	mov    esi,0x6
  408f1d:	mov    edx,0x9
  408f22:	mov    ecx,0x2
  408f27:	mov    r8,r13
  408f2a:	lea    r9,[rsp+0x1128]
  408f32:	call   4020d0 <Mat_VarCreate@plt>
  408f37:	mov    r13,rax
  408f3a:	mov    rdi,rbx
  408f3d:	xor    esi,esi
  408f3f:	mov    rdx,r14
  408f42:	call   4021a0 <Mat_VarSetCell@plt>
  408f47:	mov    rdi,rbx
  408f4a:	mov    esi,0x1
  408f4f:	mov    rdx,QWORD PTR [rsp+0x58]
  408f54:	call   4021a0 <Mat_VarSetCell@plt>
  408f59:	mov    rdi,rbx
  408f5c:	mov    esi,0x2
  408f61:	mov    rdx,r15
  408f64:	call   4021a0 <Mat_VarSetCell@plt>
  408f69:	mov    rdi,rbx
  408f6c:	mov    esi,0x3
  408f71:	mov    rdx,QWORD PTR [rsp+0xa8]
  408f79:	call   4021a0 <Mat_VarSetCell@plt>
  408f7e:	mov    rdi,rbx
  408f81:	mov    esi,0x4
  408f86:	mov    rdx,r12
  408f89:	call   4021a0 <Mat_VarSetCell@plt>
  408f8e:	mov    rdi,rbx
  408f91:	mov    esi,0x5
  408f96:	mov    rdx,QWORD PTR [rsp+0xf8]
  408f9e:	call   4021a0 <Mat_VarSetCell@plt>
  408fa3:	mov    rdi,rbx
  408fa6:	mov    esi,0x6
  408fab:	mov    rdx,QWORD PTR [rsp+0x108]
  408fb3:	call   4021a0 <Mat_VarSetCell@plt>
  408fb8:	mov    rdi,rbx
  408fbb:	mov    esi,0x1
  408fc0:	call   402270 <Mat_VarPrint@plt>
  408fc5:	mov    rdi,rbx
  408fc8:	xor    esi,esi
  408fca:	mov    rdx,QWORD PTR [rsp+0x110]
  408fd2:	call   4021a0 <Mat_VarSetCell@plt>
  408fd7:	cmp    rax,r14
  408fda:	jne    409637 <Mat_VarRead@plt+0x72a7>
  408fe0:	mov    rdi,r14
  408fe3:	call   402240 <Mat_VarFree@plt>
  408fe8:	mov    rdi,rbx
  408feb:	mov    esi,0x2
  408ff0:	mov    rdx,QWORD PTR [rsp+0x138]
  408ff8:	call   4021a0 <Mat_VarSetCell@plt>
  408ffd:	cmp    rax,r15
  409000:	jne    409637 <Mat_VarRead@plt+0x72a7>
  409006:	mov    rdi,r15
  409009:	call   402240 <Mat_VarFree@plt>
  40900e:	mov    rdi,rbx
  409011:	mov    esi,0x4
  409016:	mov    rdx,r13
  409019:	call   4021a0 <Mat_VarSetCell@plt>
  40901e:	cmp    rax,r12
  409021:	jne    409637 <Mat_VarRead@plt+0x72a7>
  409027:	mov    rdi,r12
  40902a:	call   402240 <Mat_VarFree@plt>
  40902f:	mov    rdi,rbx
  409032:	mov    esi,0x1
  409037:	call   402270 <Mat_VarPrint@plt>
  40903c:	xor    r14d,r14d
  40903f:	mov    r15,QWORD PTR [rsp+0x50]
  409044:	inc    r15d
  409047:	mov    rdi,rbx
  40904a:	call   402240 <Mat_VarFree@plt>
  40904f:	add    DWORD PTR [rsp+0x3c],r14d
  409054:	jmp    406b94 <Mat_VarRead@plt+0x4804>
  409059:	cmp    QWORD PTR [rsp+0x28],0x0
  40905f:	je     409085 <Mat_VarRead@plt+0x6cf5>
  409061:	mov    rax,QWORD PTR [rip+0xbf78]        # 414fe0 <getopt_long_only@@Base+0x8100>
  409068:	mov    rdx,QWORD PTR [rax]
  40906b:	mov    rdi,QWORD PTR [rsp+0x28]
  409070:	lea    rsi,[rip+0x9760]        # 4127d7 <getopt_long_only@@Base+0x58f7>
  409077:	call   4021c0 <freopen@plt>
  40907c:	test   rax,rax
  40907f:	je     40a4d0 <Mat_VarRead@plt+0x8140>
  409085:	vmovups ymm0,YMMWORD PTR [rip+0x5293]        # 40e320 <getopt_long_only@@Base+0x1440>
  40908d:	vmovaps YMMWORD PTR [rsp+0x1c40],ymm0
  409096:	mov    rax,QWORD PTR [rsp+0x50]
  40909b:	inc    eax
  40909d:	mov    QWORD PTR [rsp+0x50],rax
  4090a2:	vmovups ymm0,YMMWORD PTR [rip+0x5296]        # 40e340 <getopt_long_only@@Base+0x1460>
  4090aa:	vmovaps YMMWORD PTR [rsp+0x10e0],ymm0
  4090b3:	vmovaps xmm0,XMMWORD PTR [rip+0x4fa5]        # 40e060 <getopt_long_only@@Base+0x1180>
  4090bb:	vmovaps XMMWORD PTR [rsp+0x40],xmm0
  4090c1:	mov    DWORD PTR [rsp],0x0
  4090c8:	mov    ebx,0x2
  4090cd:	lea    rdi,[rip+0x7001]        # 4100d5 <getopt_long_only@@Base+0x31f5>
  4090d4:	mov    esi,0x1
  4090d9:	mov    edx,0x15
  4090de:	mov    ecx,0x2
  4090e3:	lea    rax,[rsp+0x40]
  4090e8:	mov    r8,rax
  4090eb:	xor    r9d,r9d
  4090ee:	vzeroupper 
  4090f1:	call   4020d0 <Mat_VarCreate@plt>
  4090f6:	mov    r12,rax
  4090f9:	vmovdqa xmm0,XMMWORD PTR [rip+0x4f1f]        # 40e020 <getopt_long_only@@Base+0x1140>
  409101:	vmovdqa XMMWORD PTR [rsp+0x40],xmm0
  409107:	xor    r13d,r13d
  40910a:	xor    r14d,r14d
  40910d:	mov    QWORD PTR [rsp+0x58],rax
  409112:	lea    r15,[rsp+r14*1]
  409116:	add    r15,0x1c40
  40911d:	mov    DWORD PTR [rsp],0x1
  409124:	xor    edi,edi
  409126:	mov    esi,0x6
  40912b:	mov    edx,0x9
  409130:	mov    ecx,0x2
  409135:	lea    rax,[rsp+0x40]
  40913a:	mov    r8,rax
  40913d:	mov    r9,r15
  409140:	call   4020d0 <Mat_VarCreate@plt>
  409145:	lea    esi,[rbx-0x2]
  409148:	mov    rdi,r12
  40914b:	mov    rdx,rax
  40914e:	call   4021a0 <Mat_VarSetCell@plt>
  409153:	lea    r12,[rsp+r14*1]
  409157:	add    r12,0x10e0
  40915e:	mov    DWORD PTR [rsp],0x1
  409165:	xor    edi,edi
  409167:	mov    esi,0x6
  40916c:	mov    edx,0x9
  409171:	mov    ecx,0x2
  409176:	lea    r8,[rsp+0x40]
  40917b:	mov    r9,r12
  40917e:	call   4020d0 <Mat_VarCreate@plt>
  409183:	lea    esi,[rbx-0x1]
  409186:	mov    rdi,QWORD PTR [rsp+0x58]
  40918b:	mov    rdx,rax
  40918e:	call   4021a0 <Mat_VarSetCell@plt>
  409193:	mov    QWORD PTR [rsp+r14*2+0x60],r15
  409198:	mov    QWORD PTR [rsp+r14*2+0x68],r12
  40919d:	mov    r12,QWORD PTR [rsp+0x58]
  4091a2:	lea    r9,[rsp+r13*1]
  4091a6:	add    r9,0x60
  4091aa:	mov    DWORD PTR [rsp],0x801
  4091b1:	xor    edi,edi
  4091b3:	mov    esi,0x6
  4091b8:	mov    edx,0x9
  4091bd:	mov    ecx,0x2
  4091c2:	lea    r8,[rsp+0x40]
  4091c7:	call   4020d0 <Mat_VarCreate@plt>
  4091cc:	mov    rdi,r12
  4091cf:	mov    esi,ebx
  4091d1:	mov    rdx,rax
  4091d4:	call   4021a0 <Mat_VarSetCell@plt>
  4091d9:	add    r14,0x8
  4091dd:	add    r13,0x10
  4091e1:	add    ebx,0x3
  4091e4:	cmp    r14,0x20
  4091e8:	jne    409112 <Mat_VarRead@plt+0x6d82>
  4091ee:	mov    rdi,r12
  4091f1:	xor    esi,esi
  4091f3:	mov    edx,0x3
  4091f8:	mov    ecx,0x4
  4091fd:	call   402320 <Mat_VarGetCellsLinear@plt>
  409202:	test   rax,rax
  409205:	je     409249 <Mat_VarRead@plt+0x6eb9>
  409207:	mov    rbx,rax
  40920a:	mov    rdi,QWORD PTR [rax]
  40920d:	mov    esi,0x1
  409212:	call   402270 <Mat_VarPrint@plt>
  409217:	mov    rdi,QWORD PTR [rbx+0x8]
  40921b:	mov    esi,0x1
  409220:	call   402270 <Mat_VarPrint@plt>
  409225:	mov    rdi,QWORD PTR [rbx+0x10]
  409229:	mov    esi,0x1
  40922e:	call   402270 <Mat_VarPrint@plt>
  409233:	mov    rdi,QWORD PTR [rbx+0x18]
  409237:	mov    esi,0x1
  40923c:	call   402270 <Mat_VarPrint@plt>
  409241:	mov    rdi,rbx
  409244:	call   402050 <free@plt>
  409249:	mov    rdi,QWORD PTR [rsp+0x58]
  40924e:	mov    esi,0x1
  409253:	mov    edx,0x3
  409258:	mov    ecx,0x4
  40925d:	call   402320 <Mat_VarGetCellsLinear@plt>
  409262:	test   rax,rax
  409265:	je     4092a9 <Mat_VarRead@plt+0x6f19>
  409267:	mov    rbx,rax
  40926a:	mov    rdi,QWORD PTR [rax]
  40926d:	mov    esi,0x1
  409272:	call   402270 <Mat_VarPrint@plt>
  409277:	mov    rdi,QWORD PTR [rbx+0x8]
  40927b:	mov    esi,0x1
  409280:	call   402270 <Mat_VarPrint@plt>
  409285:	mov    rdi,QWORD PTR [rbx+0x10]
  409289:	mov    esi,0x1
  40928e:	call   402270 <Mat_VarPrint@plt>
  409293:	mov    rdi,QWORD PTR [rbx+0x18]
  409297:	mov    esi,0x1
  40929c:	call   402270 <Mat_VarPrint@plt>
  4092a1:	mov    rdi,rbx
  4092a4:	call   402050 <free@plt>
  4092a9:	mov    rdi,QWORD PTR [rsp+0x58]
  4092ae:	mov    esi,0x2
  4092b3:	mov    edx,0x3
  4092b8:	mov    ecx,0x4
  4092bd:	call   402320 <Mat_VarGetCellsLinear@plt>
  4092c2:	test   rax,rax
  4092c5:	je     409309 <Mat_VarRead@plt+0x6f79>
  4092c7:	mov    rbx,rax
  4092ca:	mov    rdi,QWORD PTR [rax]
  4092cd:	mov    esi,0x1
  4092d2:	call   402270 <Mat_VarPrint@plt>
  4092d7:	mov    rdi,QWORD PTR [rbx+0x8]
  4092db:	mov    esi,0x1
  4092e0:	call   402270 <Mat_VarPrint@plt>
  4092e5:	mov    rdi,QWORD PTR [rbx+0x10]
  4092e9:	mov    esi,0x1
  4092ee:	call   402270 <Mat_VarPrint@plt>
  4092f3:	mov    rdi,QWORD PTR [rbx+0x18]
  4092f7:	mov    esi,0x1
  4092fc:	call   402270 <Mat_VarPrint@plt>
  409301:	mov    rdi,rbx
  409304:	call   402050 <free@plt>
  409309:	mov    rdi,QWORD PTR [rsp+0x58]
  40930e:	mov    esi,0x3
  409313:	mov    edx,0x1
  409318:	mov    ecx,0x6
  40931d:	call   402320 <Mat_VarGetCellsLinear@plt>
  409322:	test   rax,rax
  409325:	je     409385 <Mat_VarRead@plt+0x6ff5>
  409327:	mov    rbx,rax
  40932a:	mov    rdi,QWORD PTR [rax]
  40932d:	mov    esi,0x1
  409332:	call   402270 <Mat_VarPrint@plt>
  409337:	mov    rdi,QWORD PTR [rbx+0x8]
  40933b:	mov    esi,0x1
  409340:	call   402270 <Mat_VarPrint@plt>
  409345:	mov    rdi,QWORD PTR [rbx+0x10]
  409349:	mov    esi,0x1
  40934e:	call   402270 <Mat_VarPrint@plt>
  409353:	mov    rdi,QWORD PTR [rbx+0x18]
  409357:	mov    esi,0x1
  40935c:	call   402270 <Mat_VarPrint@plt>
  409361:	mov    rdi,QWORD PTR [rbx+0x20]
  409365:	mov    esi,0x1
  40936a:	call   402270 <Mat_VarPrint@plt>
  40936f:	mov    rdi,QWORD PTR [rbx+0x28]
  409373:	mov    esi,0x1
  409378:	call   402270 <Mat_VarPrint@plt>
  40937d:	mov    rdi,rbx
  409380:	call   402050 <free@plt>
  409385:	mov    rdi,QWORD PTR [rsp+0x58]
  40938a:	jmp    408c99 <Mat_VarRead@plt+0x6909>
  40938f:	mov    rax,QWORD PTR [rip+0xbc62]        # 414ff8 <getopt_long_only@@Base+0x8118>
  409396:	mov    rdi,QWORD PTR [rax]
  409399:	lea    rsi,[rip+0x9439]        # 4127d9 <getopt_long_only@@Base+0x58f9>
  4093a0:	mov    rdx,QWORD PTR [rsp+0x28]
  4093a5:	xor    eax,eax
  4093a7:	call   402220 <fprintf@plt>
  4093ac:	jmp    407751 <Mat_VarRead@plt+0x53c1>
  4093b1:	cmp    QWORD PTR [rsp+0x28],0x0
  4093b7:	je     4093dd <Mat_VarRead@plt+0x704d>
  4093b9:	mov    rax,QWORD PTR [rip+0xbc20]        # 414fe0 <getopt_long_only@@Base+0x8100>
  4093c0:	mov    rdx,QWORD PTR [rax]
  4093c3:	mov    rdi,QWORD PTR [rsp+0x28]
  4093c8:	lea    rsi,[rip+0x9408]        # 4127d7 <getopt_long_only@@Base+0x58f7>
  4093cf:	call   4021c0 <freopen@plt>
  4093d4:	test   rax,rax
  4093d7:	je     40a5b6 <Mat_VarRead@plt+0x8226>
  4093dd:	mov    rax,QWORD PTR [rsp+0x50]
  4093e2:	inc    eax
  4093e4:	mov    QWORD PTR [rsp+0x50],rax
  4093e9:	mov    edx,0xb40
  4093ee:	lea    rbx,[rsp+0x10e0]
  4093f6:	mov    rdi,rbx
  4093f9:	xor    esi,esi
  4093fb:	call   4021b0 <memset@plt>
  409400:	vmovaps ymm0,YMMWORD PTR [rip+0x4df8]        # 40e200 <getopt_long_only@@Base+0x1320>
  409408:	vmovaps YMMWORD PTR [rsp+0x400],ymm0
  409411:	mov    DWORD PTR [rsp],0x0
  409418:	lea    rdi,[rip+0x6cb6]        # 4100d5 <getopt_long_only@@Base+0x31f5>
  40941f:	mov    esi,0x1
  409424:	mov    edx,0x15
  409429:	mov    ecx,0x4
  40942e:	lea    r13,[rsp+0x400]
  409436:	mov    r8,r13
  409439:	xor    r9d,r9d
  40943c:	vzeroupper 
  40943f:	call   4020d0 <Mat_VarCreate@plt>
  409444:	mov    r15,rax
  409447:	vmovaps xmm0,XMMWORD PTR [rip+0x4bd1]        # 40e020 <getopt_long_only@@Base+0x1140>
  40944f:	vmovaps XMMWORD PTR [rsp+0x400],xmm0
  409458:	xor    r14d,r14d
  40945b:	lea    r12,[r14+0x1]
  40945f:	vcvtsi2sd xmm0,xmm1,r12d
  409464:	vmovq  QWORD PTR [rbx],xmm0
  409468:	mov    DWORD PTR [rsp],0x1
  40946f:	xor    edi,edi
  409471:	mov    esi,0x6
  409476:	mov    edx,0x9
  40947b:	mov    ecx,0x2
  409480:	mov    r8,r13
  409483:	mov    r9,rbx
  409486:	call   4020d0 <Mat_VarCreate@plt>
  40948b:	mov    rdi,r15
  40948e:	mov    esi,r14d
  409491:	mov    rdx,rax
  409494:	call   4021a0 <Mat_VarSetCell@plt>
  409499:	add    rbx,0x8
  40949d:	mov    r14,r12
  4094a0:	cmp    r12,0x168
  4094a7:	jne    40945b <Mat_VarRead@plt+0x70cb>
  4094a9:	vmovaps xmm0,XMMWORD PTR [rip+0x4b7f]        # 40e030 <getopt_long_only@@Base+0x1150>
  4094b1:	vmovaps XMMWORD PTR [rsp+0xde0],xmm0
  4094ba:	vmovaps xmm0,XMMWORD PTR [rip+0x4b7e]        # 40e040 <getopt_long_only@@Base+0x1160>
  4094c2:	vmovaps XMMWORD PTR [rsp+0xa00],xmm0
  4094cb:	vmovdqa xmm0,XMMWORD PTR [rip+0x4b7d]        # 40e050 <getopt_long_only@@Base+0x1170>
  4094d3:	vmovdqa XMMWORD PTR [rsp+0xf80],xmm0
  4094dc:	mov    rdi,r15
  4094df:	lea    rsi,[rsp+0xde0]
  4094e7:	lea    rdx,[rsp+0xa00]
  4094ef:	lea    rcx,[rsp+0xf80]
  4094f7:	call   4020a0 <Mat_VarGetCells@plt>
  4094fc:	test   rax,rax
  4094ff:	je     4095b7 <Mat_VarRead@plt+0x7227>
  409505:	mov    r14,rax
  409508:	mov    rdi,QWORD PTR [rax]
  40950b:	mov    esi,0x1
  409510:	call   402270 <Mat_VarPrint@plt>
  409515:	mov    rdi,QWORD PTR [r14+0x8]
  409519:	mov    esi,0x1
  40951e:	call   402270 <Mat_VarPrint@plt>
  409523:	mov    rdi,QWORD PTR [r14+0x10]
  409527:	mov    esi,0x1
  40952c:	call   402270 <Mat_VarPrint@plt>
  409531:	mov    rdi,QWORD PTR [r14+0x18]
  409535:	mov    esi,0x1
  40953a:	call   402270 <Mat_VarPrint@plt>
  40953f:	mov    rdi,QWORD PTR [r14+0x20]
  409543:	mov    esi,0x1
  409548:	call   402270 <Mat_VarPrint@plt>
  40954d:	mov    rdi,QWORD PTR [r14+0x28]
  409551:	mov    esi,0x1
  409556:	call   402270 <Mat_VarPrint@plt>
  40955b:	mov    rdi,QWORD PTR [r14+0x30]
  40955f:	mov    esi,0x1
  409564:	call   402270 <Mat_VarPrint@plt>
  409569:	mov    rdi,QWORD PTR [r14+0x38]
  40956d:	mov    esi,0x1
  409572:	call   402270 <Mat_VarPrint@plt>
  409577:	mov    rdi,QWORD PTR [r14+0x40]
  40957b:	mov    esi,0x1
  409580:	call   402270 <Mat_VarPrint@plt>
  409585:	mov    rdi,QWORD PTR [r14+0x48]
  409589:	mov    esi,0x1
  40958e:	call   402270 <Mat_VarPrint@plt>
  409593:	mov    rdi,QWORD PTR [r14+0x50]
  409597:	mov    esi,0x1
  40959c:	call   402270 <Mat_VarPrint@plt>
  4095a1:	mov    rdi,QWORD PTR [r14+0x58]
  4095a5:	mov    esi,0x1
  4095aa:	call   402270 <Mat_VarPrint@plt>
  4095af:	mov    rdi,r14
  4095b2:	call   402050 <free@plt>
  4095b7:	mov    rdi,r15
  4095ba:	jmp    408c99 <Mat_VarRead@plt+0x6909>
  4095bf:	mov    rax,QWORD PTR [rip+0xba32]        # 414ff8 <getopt_long_only@@Base+0x8118>
  4095c6:	mov    rdi,QWORD PTR [rax]
  4095c9:	lea    rsi,[rip+0x9209]        # 4127d9 <getopt_long_only@@Base+0x58f9>
  4095d0:	mov    rdx,QWORD PTR [rsp+0x28]
  4095d5:	xor    eax,eax
  4095d7:	call   402220 <fprintf@plt>
  4095dc:	jmp    40785a <Mat_VarRead@plt+0x54ca>
  4095e1:	mov    rax,QWORD PTR [rsp+0x50]
  4095e6:	lea    ebx,[rax+0x1]
  4095e9:	mov    eax,DWORD PTR [rsp+0x118]
  4095f0:	sub    eax,ebx
  4095f2:	cmp    eax,0x2
  4095f5:	jg     4096d5 <Mat_VarRead@plt+0x7345>
  4095fb:	lea    rdi,[rip+0x5c69]        # 40f26b <getopt_long_only@@Base+0x238b>
  409602:	xor    eax,eax
  409604:	call   4022b0 <Mat_Critical@plt>
  409609:	inc    DWORD PTR [rsp+0x3c]
  40960d:	mov    r15d,ebx
  409610:	jmp    406b94 <Mat_VarRead@plt+0x4804>
  409615:	mov    rax,QWORD PTR [rip+0xb9dc]        # 414ff8 <getopt_long_only@@Base+0x8118>
  40961c:	mov    rdi,QWORD PTR [rax]
  40961f:	lea    rsi,[rip+0x91b3]        # 4127d9 <getopt_long_only@@Base+0x58f9>
  409626:	mov    rdx,QWORD PTR [rsp+0x28]
  40962b:	xor    eax,eax
  40962d:	call   402220 <fprintf@plt>
  409632:	jmp    407e5b <Mat_VarRead@plt+0x5acb>
  409637:	mov    rax,QWORD PTR [rip+0xb9ba]        # 414ff8 <getopt_long_only@@Base+0x8118>
  40963e:	mov    rcx,QWORD PTR [rax]
  409641:	mov    esi,0x2e
  409646:	mov    edx,0x1
  40964b:	lea    rdi,[rip+0x91ce]        # 412820 <getopt_long_only@@Base+0x5940>
  409652:	call   402350 <fwrite@plt>
  409657:	mov    r14d,0x1
  40965d:	jmp    40903f <Mat_VarRead@plt+0x6caf>
  409662:	mov    rax,QWORD PTR [rsp+0x30]
  409667:	mov    rdi,QWORD PTR [rax+r12*8+0x8]
  40966c:	xor    esi,esi
  40966e:	call   402080 <Mat_Open@plt>
  409673:	test   rax,rax
  409676:	je     409de4 <Mat_VarRead@plt+0x7a54>
  40967c:	mov    rbx,rax
  40967f:	mov    rax,QWORD PTR [rsp+0x30]
  409684:	mov    rsi,QWORD PTR [rax+r12*8+0x10]
  409689:	mov    rdi,rbx
  40968c:	call   402180 <Mat_VarReadInfo@plt>
  409691:	test   rax,rax
  409694:	je     4096ab <Mat_VarRead@plt+0x731b>
  409696:	mov    r14,rax
  409699:	mov    rdi,rax
  40969c:	xor    esi,esi
  40969e:	call   402270 <Mat_VarPrint@plt>
  4096a3:	mov    rdi,r14
  4096a6:	call   402240 <Mat_VarFree@plt>
  4096ab:	mov    rdi,rbx
  4096ae:	jmp    40bf2a <Mat_VarRead@plt+0x9b9a>
  4096b3:	mov    rax,QWORD PTR [rip+0xb93e]        # 414ff8 <getopt_long_only@@Base+0x8118>
  4096ba:	mov    rdi,QWORD PTR [rax]
  4096bd:	lea    rsi,[rip+0x9115]        # 4127d9 <getopt_long_only@@Base+0x58f9>
  4096c4:	mov    rdx,QWORD PTR [rsp+0x28]
  4096c9:	xor    eax,eax
  4096cb:	call   402220 <fprintf@plt>
  4096d0:	jmp    4084f1 <Mat_VarRead@plt+0x6161>
  4096d5:	cmp    QWORD PTR [rsp+0x28],0x0
  4096db:	je     409701 <Mat_VarRead@plt+0x7371>
  4096dd:	mov    rax,QWORD PTR [rip+0xb8fc]        # 414fe0 <getopt_long_only@@Base+0x8100>
  4096e4:	mov    rdx,QWORD PTR [rax]
  4096e7:	mov    rdi,QWORD PTR [rsp+0x28]
  4096ec:	lea    rsi,[rip+0x90e4]        # 4127d7 <getopt_long_only@@Base+0x58f7>
  4096f3:	call   4021c0 <freopen@plt>
  4096f8:	test   rax,rax
  4096fb:	je     40a5d8 <Mat_VarRead@plt+0x8248>
  409701:	movsxd rax,ebx
  409704:	mov    rcx,QWORD PTR [rsp+0x30]
  409709:	mov    rdi,QWORD PTR [rcx+rax*8]
  40970d:	mov    rbx,QWORD PTR [rcx+r12*8+0x10]
  409712:	mov    r12,QWORD PTR [rcx+r12*8+0x18]
  409717:	mov    DWORD PTR [rsp+0x10e0],0x1
  409722:	xor    esi,esi
  409724:	call   402080 <Mat_Open@plt>
  409729:	test   rax,rax
  40972c:	je     409ded <Mat_VarRead@plt+0x7a5d>
  409732:	mov    r15,rax
  409735:	mov    rdi,rax
  409738:	mov    rsi,rbx
  40973b:	call   402390 <Mat_VarRead@plt>
  409740:	test   rax,rax
  409743:	je     40a3f3 <Mat_VarRead@plt+0x8063>
  409749:	mov    r14,rax
  40974c:	movsx  eax,BYTE PTR [r12]
  409751:	add    eax,0xffffffd0
  409754:	cmp    eax,0x9
  409757:	ja     40a3fa <Mat_VarRead@plt+0x806a>
  40975d:	mov    rdi,r12
  409760:	xor    esi,esi
  409762:	mov    edx,0xa
  409767:	call   402230 <strtol@plt>
  40976c:	mov    DWORD PTR [rsp+0x10e0],eax
  409773:	mov    rdi,r14
  409776:	lea    rsi,[rsp+0x10e0]
  40977e:	mov    edx,0x2
  409783:	xor    ecx,ecx
  409785:	call   402200 <Mat_VarGetStructField@plt>
  40978a:	test   rax,rax
  40978d:	jne    40a416 <Mat_VarRead@plt+0x8086>
  409793:	mov    ebx,0x1
  409798:	jmp    40a422 <Mat_VarRead@plt+0x8092>
  40979d:	mov    rax,QWORD PTR [rsp+0x28]
  4097a2:	test   rax,rax
  4097a5:	lea    rcx,[rip+0x5b01]        # 40f2ad <getopt_long_only@@Base+0x23cd>
  4097ac:	cmove  rax,rcx
  4097b0:	mov    QWORD PTR [rsp+0x28],rax
  4097b5:	mov    rax,QWORD PTR [rsp+0x30]
  4097ba:	mov    rdi,QWORD PTR [rax+r12*8+0x8]
  4097bf:	mov    rbx,QWORD PTR [rax+r12*8+0x10]
  4097c4:	mov    DWORD PTR [rsp+0x868],0x0
  4097cf:	mov    QWORD PTR [rsp+0x860],0x0
  4097db:	mov    eax,DWORD PTR [rip+0x5027]        # 40e808 <getopt_long_only@@Base+0x1928>
  4097e1:	mov    DWORD PTR [rsp+0x6a8],eax
  4097e8:	mov    rax,QWORD PTR [rip+0x5011]        # 40e800 <getopt_long_only@@Base+0x1920>
  4097ef:	mov    QWORD PTR [rsp+0x6a0],rax
  4097f7:	mov    eax,DWORD PTR [rip+0x5017]        # 40e814 <getopt_long_only@@Base+0x1934>
  4097fd:	mov    DWORD PTR [rsp+0x788],eax
  409804:	mov    rax,QWORD PTR [rip+0x5001]        # 40e80c <getopt_long_only@@Base+0x192c>
  40980b:	mov    QWORD PTR [rsp+0x780],rax
  409813:	xor    esi,esi
  409815:	call   402080 <Mat_Open@plt>
  40981a:	test   rax,rax
  40981d:	je     40bf2f <Mat_VarRead@plt+0x9b9f>
  409823:	mov    r15,rax
  409826:	mov    rdi,rax
  409829:	mov    rsi,rbx
  40982c:	call   402180 <Mat_VarReadInfo@plt>
  409831:	test   rax,rax
  409834:	je     40bf27 <Mat_VarRead@plt+0x9b97>
  40983a:	mov    r12,rax
  40983d:	cmp    DWORD PTR [rax+0x14],0x2
  409841:	jne    409871 <Mat_VarRead@plt+0x74e1>
  409843:	mov    DWORD PTR [rsp+0x10e0],0x2
  40984e:	mov    rdi,r12
  409851:	lea    rsi,[rsp+0x10e0]
  409859:	mov    edx,0x2
  40985e:	xor    ecx,ecx
  409860:	call   402200 <Mat_VarGetStructField@plt>
  409865:	mov    r12,rax
  409868:	test   rax,rax
  40986b:	je     40bf27 <Mat_VarRead@plt+0x9b97>
  409871:	mov    rax,QWORD PTR [rsp+0xb0]
  409879:	mov    DWORD PTR [r12+0x14],eax
  40987e:	mov    rax,QWORD PTR [r12+0x28]
  409883:	mov    ecx,DWORD PTR [rax]
  409885:	dec    ecx
  409887:	mov    DWORD PTR [rsp+0x6a0],ecx
  40988e:	mov    eax,DWORD PTR [rax+0x8]
  409891:	dec    eax
  409893:	mov    DWORD PTR [rsp+0x6a4],eax
  40989a:	cmp    DWORD PTR [rsp+0x100],0x9
  4098a2:	ja     40bf1f <Mat_VarRead@plt+0x9b8f>
  4098a8:	lea    r14,[r12+0x28]
  4098ad:	mov    rax,QWORD PTR [rsp+0x100]
  4098b5:	lea    rcx,[rip+0x4c24]        # 40e4e0 <getopt_long_only@@Base+0x1600>
  4098bc:	movsxd rax,DWORD PTR [rcx+rax*4]
  4098c0:	add    rax,rcx
  4098c3:	jmp    rax
  4098c5:	cmp    DWORD PTR [r12+0x18],0x0
  4098cb:	je     40b63e <Mat_VarRead@plt+0x92ae>
  4098d1:	lea    rax,[rsp+0x1c40]
  4098d9:	mov    QWORD PTR [rsp+0x400],rax
  4098e1:	lea    rax,[rsp+0x10e0]
  4098e9:	mov    QWORD PTR [rsp+0x408],rax
  4098f1:	mov    rdi,r15
  4098f4:	mov    rsi,r12
  4098f7:	lea    rdx,[rsp+0x400]
  4098ff:	lea    rcx,[rsp+0x860]
  409907:	lea    r8,[rsp+0x6a0]
  40990f:	lea    r9,[rsp+0x780]
  409917:	call   402130 <Mat_VarReadData@plt>
  40991c:	vmovsd xmm2,QWORD PTR [rsp+0x1c50]
  409925:	vmovsd xmm3,QWORD PTR [rsp+0x10f0]
  40992e:	vmovsd xmm0,QWORD PTR [rsp+0x1c40]
  409937:	vmovsd xmm4,QWORD PTR [rsp+0x1c48]
  409940:	vmovsd xmm1,QWORD PTR [rsp+0x10e0]
  409949:	vmovsd xmm5,QWORD PTR [rsp+0x10e8]
  409952:	vmovsd xmm6,QWORD PTR [rsp+0x1c58]
  40995b:	vmovsd xmm7,QWORD PTR [rsp+0x10f8]
  409964:	lea    rdi,[rip+0x8ee4]        # 41284f <getopt_long_only@@Base+0x596f>
  40996b:	mov    al,0x8
  40996d:	call   402160 <printf@plt>
  409972:	cmp    DWORD PTR [r15+0x20],0x200
  40997a:	je     4099cb <Mat_VarRead@plt+0x763b>
  40997c:	mov    rdi,QWORD PTR [r14]
  40997f:	mov    esi,0x18
  409984:	call   4022d0 <realloc@plt>
  409989:	test   rax,rax
  40998c:	je     4099cb <Mat_VarRead@plt+0x763b>
  40998e:	inc    DWORD PTR [r12+0x8]
  409993:	mov    QWORD PTR [r12+0x28],rax
  409998:	mov    QWORD PTR [rax+0x10],0x1
  4099a0:	mov    rdi,r15
  4099a3:	mov    rsi,r12
  4099a6:	lea    rdx,[rsp+0x400]
  4099ae:	lea    rcx,[rsp+0x860]
  4099b6:	lea    r8,[rsp+0x6a0]
  4099be:	lea    r9,[rsp+0x780]
  4099c6:	call   402130 <Mat_VarReadData@plt>
  4099cb:	vmovq  xmm2,QWORD PTR [rsp+0x1c50]
  4099d4:	vmovq  xmm3,QWORD PTR [rsp+0x10f0]
  4099dd:	vmovq  xmm0,QWORD PTR [rsp+0x1c40]
  4099e6:	vmovq  xmm4,QWORD PTR [rsp+0x1c48]
  4099ef:	vmovq  xmm1,QWORD PTR [rsp+0x10e0]
  4099f8:	vmovsd xmm5,QWORD PTR [rsp+0x10e8]
  409a01:	vmovq  xmm6,QWORD PTR [rsp+0x1c58]
  409a0a:	vmovq  xmm7,QWORD PTR [rsp+0x10f8]
  409a13:	jmp    40a8e2 <Mat_VarRead@plt+0x8552>
  409a18:	mov    rax,QWORD PTR [rip+0xb5d9]        # 414ff8 <getopt_long_only@@Base+0x8118>
  409a1f:	mov    rdi,QWORD PTR [rax]
  409a22:	lea    rsi,[rip+0x8db0]        # 4127d9 <getopt_long_only@@Base+0x58f9>
  409a29:	mov    rdx,QWORD PTR [rsp+0x28]
  409a2e:	xor    eax,eax
  409a30:	call   402220 <fprintf@plt>
  409a35:	jmp    408737 <Mat_VarRead@plt+0x63a7>
  409a3a:	mov    rdi,QWORD PTR [rsp+0x28]
  409a3f:	test   rdi,rdi
  409a42:	lea    rax,[rip+0x586c]        # 40f2b5 <getopt_long_only@@Base+0x23d5>
  409a49:	cmove  rdi,rax
  409a4d:	vmovaps xmm0,XMMWORD PTR [rip+0x478b]        # 40e1e0 <getopt_long_only@@Base+0x1300>
  409a55:	vmovaps XMMWORD PTR [rsp+0x40],xmm0
  409a5b:	mov    eax,DWORD PTR [rip+0x4e1f]        # 40e880 <getopt_long_only@@Base+0x19a0>
  409a61:	vmovups ymm0,YMMWORD PTR [rip+0x4df7]        # 40e860 <getopt_long_only@@Base+0x1980>
  409a69:	vmovaps YMMWORD PTR [rsp+0x340],ymm0
  409a72:	vmovups ymm0,YMMWORD PTR [rip+0x4dc6]        # 40e840 <getopt_long_only@@Base+0x1960>
  409a7a:	vmovaps YMMWORD PTR [rsp+0x320],ymm0
  409a83:	vmovups ymm0,YMMWORD PTR [rip+0x4d95]        # 40e820 <getopt_long_only@@Base+0x1940>
  409a8b:	vmovaps YMMWORD PTR [rsp+0x300],ymm0
  409a94:	vmovups ymm0,YMMWORD PTR [rip+0x4e00]        # 40e89c <getopt_long_only@@Base+0x19bc>
  409a9c:	vmovups YMMWORD PTR [rsp+0x2ac],ymm0
  409aa5:	vmovups ymm0,YMMWORD PTR [rip+0x4de3]        # 40e890 <getopt_long_only@@Base+0x19b0>
  409aad:	vmovaps YMMWORD PTR [rsp+0x2a0],ymm0
  409ab6:	mov    DWORD PTR [rsp+0x360],eax
  409abd:	vxorps xmm0,xmm0,xmm0
  409ac1:	vmovaps XMMWORD PTR [rsp+0x10e0],xmm0
  409aca:	mov    QWORD PTR [rsp+0x10f0],0x0
  409ad6:	mov    rax,QWORD PTR [rip+0x4ea3]        # 40e980 <getopt_long_only@@Base+0x1aa0>
  409add:	mov    QWORD PTR [rsp+0xac0],rax
  409ae5:	vmovups ymm0,YMMWORD PTR [rip+0x4e73]        # 40e960 <getopt_long_only@@Base+0x1a80>
  409aed:	vmovaps YMMWORD PTR [rsp+0xaa0],ymm0
  409af6:	vmovups ymm0,YMMWORD PTR [rip+0x4e42]        # 40e940 <getopt_long_only@@Base+0x1a60>
  409afe:	vmovaps YMMWORD PTR [rsp+0xa80],ymm0
  409b07:	vmovups ymm0,YMMWORD PTR [rip+0x4e11]        # 40e920 <getopt_long_only@@Base+0x1a40>
  409b0f:	vmovaps YMMWORD PTR [rsp+0xa60],ymm0
  409b18:	vmovups ymm0,YMMWORD PTR [rip+0x4de0]        # 40e900 <getopt_long_only@@Base+0x1a20>
  409b20:	vmovaps YMMWORD PTR [rsp+0xa40],ymm0
  409b29:	vmovups ymm0,YMMWORD PTR [rip+0x4daf]        # 40e8e0 <getopt_long_only@@Base+0x1a00>
  409b31:	vmovaps YMMWORD PTR [rsp+0xa20],ymm0
  409b3a:	vmovups ymm0,YMMWORD PTR [rip+0x4d7e]        # 40e8c0 <getopt_long_only@@Base+0x19e0>
  409b42:	vmovaps YMMWORD PTR [rsp+0xa00],ymm0
  409b4b:	mov    eax,DWORD PTR [rip+0x4f6f]        # 40eac0 <getopt_long_only@@Base+0x1be0>
  409b51:	mov    DWORD PTR [rsp+0xce0],eax
  409b58:	vmovups ymm0,YMMWORD PTR [rip+0x4f40]        # 40eaa0 <getopt_long_only@@Base+0x1bc0>
  409b60:	vmovaps YMMWORD PTR [rsp+0xcc0],ymm0
  409b69:	vmovups ymm0,YMMWORD PTR [rip+0x4f0f]        # 40ea80 <getopt_long_only@@Base+0x1ba0>
  409b71:	vmovaps YMMWORD PTR [rsp+0xca0],ymm0
  409b7a:	vmovups ymm0,YMMWORD PTR [rip+0x4ede]        # 40ea60 <getopt_long_only@@Base+0x1b80>
  409b82:	vmovaps YMMWORD PTR [rsp+0xc80],ymm0
  409b8b:	vmovups ymm0,YMMWORD PTR [rip+0x4fed]        # 40eb80 <getopt_long_only@@Base+0x1ca0>
  409b93:	vmovaps YMMWORD PTR [rsp+0xbe0],ymm0
  409b9c:	vmovups ymm1,YMMWORD PTR [rip+0x4fbc]        # 40eb60 <getopt_long_only@@Base+0x1c80>
  409ba4:	vmovaps YMMWORD PTR [rsp+0xbc0],ymm1
  409bad:	vmovups ymm2,YMMWORD PTR [rip+0x4f8b]        # 40eb40 <getopt_long_only@@Base+0x1c60>
  409bb5:	vmovaps YMMWORD PTR [rsp+0xba0],ymm2
  409bbe:	vmovaps YMMWORD PTR [rsp+0x600],ymm0
  409bc7:	vmovaps YMMWORD PTR [rsp+0x5e0],ymm1
  409bd0:	mov    eax,DWORD PTR [rip+0x4fca]        # 40eba0 <getopt_long_only@@Base+0x1cc0>
  409bd6:	vmovaps YMMWORD PTR [rsp+0x5c0],ymm2
  409bdf:	vmovups ymm0,YMMWORD PTR [rip+0x504b]        # 40ec32 <getopt_long_only@@Base+0x1d52>
  409be7:	vmovups YMMWORD PTR [rsp+0x72],ymm0
  409bed:	mov    DWORD PTR [rsp+0xc00],eax
  409bf4:	vmovups ymm1,YMMWORD PTR [rip+0x5024]        # 40ec20 <getopt_long_only@@Base+0x1d40>
  409bfc:	vmovaps YMMWORD PTR [rsp+0x60],ymm1
  409c02:	vmovups YMMWORD PTR [rsp+0x1f2],ymm0
  409c0b:	vmovaps YMMWORD PTR [rsp+0x1e0],ymm1
  409c14:	vmovups xmm0,XMMWORD PTR [rip+0x508d]        # 40eca9 <getopt_long_only@@Base+0x1dc9>
  409c1c:	vmovups XMMWORD PTR [rsp+0x189],xmm0
  409c25:	vmovaps xmm1,XMMWORD PTR [rip+0x5073]        # 40eca0 <getopt_long_only@@Base+0x1dc0>
  409c2d:	vmovaps XMMWORD PTR [rsp+0x180],xmm1
  409c36:	vmovups XMMWORD PTR [rsp+0xc9],xmm0
  409c3f:	vmovaps XMMWORD PTR [rsp+0xc0],xmm1
  409c48:	mov    DWORD PTR [rsp+0x620],eax
  409c4f:	mov    rax,QWORD PTR [rip+0x514a]        # 40eda0 <getopt_long_only@@Base+0x1ec0>
  409c56:	mov    QWORD PTR [rsp+0x920],rax
  409c5e:	vmovdqu ymm0,YMMWORD PTR [rip+0x511a]        # 40ed80 <getopt_long_only@@Base+0x1ea0>
  409c66:	vmovdqa YMMWORD PTR [rsp+0x900],ymm0
  409c6f:	vmovdqu ymm1,YMMWORD PTR [rip+0x50e9]        # 40ed60 <getopt_long_only@@Base+0x1e80>
  409c77:	vmovdqa YMMWORD PTR [rsp+0x8e0],ymm1
  409c80:	vmovdqu ymm2,YMMWORD PTR [rip+0x50b8]        # 40ed40 <getopt_long_only@@Base+0x1e60>
  409c88:	vmovdqa YMMWORD PTR [rsp+0x8c0],ymm2
  409c91:	vmovdqu ymm3,YMMWORD PTR [rip+0x5087]        # 40ed20 <getopt_long_only@@Base+0x1e40>
  409c99:	vmovdqa YMMWORD PTR [rsp+0x8a0],ymm3
  409ca2:	vmovdqu ymm4,YMMWORD PTR [rip+0x5056]        # 40ed00 <getopt_long_only@@Base+0x1e20>
  409caa:	vmovdqa YMMWORD PTR [rsp+0x880],ymm4
  409cb3:	vmovups ymm5,YMMWORD PTR [rip+0x5025]        # 40ece0 <getopt_long_only@@Base+0x1e00>
  409cbb:	vmovaps YMMWORD PTR [rsp+0x860],ymm5
  409cc4:	mov    QWORD PTR [rsp+0xea0],rax
  409ccc:	vmovdqa YMMWORD PTR [rsp+0xe80],ymm0
  409cd5:	vmovdqa YMMWORD PTR [rsp+0xe60],ymm1
  409cde:	vmovdqa YMMWORD PTR [rsp+0xe40],ymm2
  409ce7:	vmovdqa YMMWORD PTR [rsp+0xe20],ymm3
  409cf0:	vmovdqa YMMWORD PTR [rsp+0xe00],ymm4
  409cf9:	vmovaps YMMWORD PTR [rsp+0xde0],ymm5
  409d02:	mov    DWORD PTR [rsp+0x10e0],0x19
  409d0d:	mov    DWORD PTR [rsp+0x10f0],0x19
  409d18:	lea    rax,[rsp+0x300]
  409d20:	mov    QWORD PTR [rsp+0x10e8],rax
  409d28:	mov    DWORD PTR [rsp+0x1100],0xb
  409d33:	lea    rax,[rsp+0x2a0]
  409d3b:	mov    QWORD PTR [rsp+0x10f8],rax
  409d43:	mov    DWORD PTR [rsp+0x1104],0x19
  409d4e:	mov    QWORD PTR [rsp+0x1108],0x0
  409d5a:	mov    edx,DWORD PTR [rip+0xb5c0]        # 415320 <getopt_long_only@@Base+0x8440>
  409d60:	mov    QWORD PTR [rsp+0x28],rdi
  409d65:	xor    esi,esi
  409d67:	vzeroupper 
  409d6a:	call   402310 <Mat_CreateVer@plt>
  409d6f:	test   rax,rax
  409d72:	je     40a3e8 <Mat_VarRead@plt+0x8058>
  409d78:	mov    r14,rax
  409d7b:	mov    r12d,0x1
  409d81:	cmp    DWORD PTR [rsp+0x100],0x9
  409d89:	ja     40b624 <Mat_VarRead@plt+0x9294>
  409d8f:	mov    rax,QWORD PTR [rsp+0x100]
  409d97:	lea    rcx,[rip+0x471a]        # 40e4b8 <getopt_long_only@@Base+0x15d8>
  409d9e:	movsxd rax,DWORD PTR [rcx+rax*4]
  409da2:	add    rax,rcx
  409da5:	jmp    rax
  409da7:	lea    rax,[rsp+0xa00]
  409daf:	mov    QWORD PTR [rsp+0x1108],rax
  409db7:	mov    r15d,0x9
  409dbd:	jmp    40a6d6 <Mat_VarRead@plt+0x8346>
  409dc2:	mov    rax,QWORD PTR [rip+0xb22f]        # 414ff8 <getopt_long_only@@Base+0x8118>
  409dc9:	mov    rdi,QWORD PTR [rax]
  409dcc:	lea    rsi,[rip+0x8a06]        # 4127d9 <getopt_long_only@@Base+0x58f9>
  409dd3:	mov    rdx,QWORD PTR [rsp+0x28]
  409dd8:	xor    eax,eax
  409dda:	call   402220 <fprintf@plt>
  409ddf:	jmp    408aa6 <Mat_VarRead@plt+0x6716>
  409de4:	inc    DWORD PTR [rsp+0x3c]
  409de8:	jmp    40bf2f <Mat_VarRead@plt+0x9b9f>
  409ded:	mov    ebx,0x1
  409df2:	jmp    40a432 <Mat_VarRead@plt+0x80a2>
  409df7:	mov    rdi,QWORD PTR [rsp+0x28]
  409dfc:	test   rdi,rdi
  409dff:	lea    rax,[rip+0x54c5]        # 40f2cb <getopt_long_only@@Base+0x23eb>
  409e06:	cmove  rdi,rax
  409e0a:	vmovaps xmm0,XMMWORD PTR [rip+0x43ce]        # 40e1e0 <getopt_long_only@@Base+0x1300>
  409e12:	vmovaps XMMWORD PTR [rsp+0x40],xmm0
  409e18:	vmovups ymm0,YMMWORD PTR [rip+0x4a40]        # 40e860 <getopt_long_only@@Base+0x1980>
  409e20:	vmovaps YMMWORD PTR [rsp+0x340],ymm0
  409e29:	vmovups ymm0,YMMWORD PTR [rip+0x4a0f]        # 40e840 <getopt_long_only@@Base+0x1960>
  409e31:	vmovaps YMMWORD PTR [rsp+0x320],ymm0
  409e3a:	vmovups ymm0,YMMWORD PTR [rip+0x49de]        # 40e820 <getopt_long_only@@Base+0x1940>
  409e42:	vmovaps YMMWORD PTR [rsp+0x300],ymm0
  409e4b:	vmovups ymm0,YMMWORD PTR [rip+0x4a49]        # 40e89c <getopt_long_only@@Base+0x19bc>
  409e53:	vmovups YMMWORD PTR [rsp+0x2ac],ymm0
  409e5c:	mov    eax,DWORD PTR [rip+0x4a1e]        # 40e880 <getopt_long_only@@Base+0x19a0>
  409e62:	vmovups ymm0,YMMWORD PTR [rip+0x4a26]        # 40e890 <getopt_long_only@@Base+0x19b0>
  409e6a:	vmovaps YMMWORD PTR [rsp+0x2a0],ymm0
  409e73:	vxorps xmm0,xmm0,xmm0
  409e77:	vmovaps XMMWORD PTR [rsp+0x260],xmm0
  409e80:	mov    DWORD PTR [rsp+0x360],eax
  409e87:	mov    QWORD PTR [rsp+0x270],0x0
  409e93:	vmovaps XMMWORD PTR [rsp+0x120],xmm0
  409e9c:	mov    rax,QWORD PTR [rip+0x4add]        # 40e980 <getopt_long_only@@Base+0x1aa0>
  409ea3:	mov    QWORD PTR [rsp+0xac0],rax
  409eab:	vmovups ymm0,YMMWORD PTR [rip+0x4aad]        # 40e960 <getopt_long_only@@Base+0x1a80>
  409eb3:	vmovaps YMMWORD PTR [rsp+0xaa0],ymm0
  409ebc:	vmovups ymm0,YMMWORD PTR [rip+0x4a7c]        # 40e940 <getopt_long_only@@Base+0x1a60>
  409ec4:	vmovaps YMMWORD PTR [rsp+0xa80],ymm0
  409ecd:	vmovups ymm0,YMMWORD PTR [rip+0x4a4b]        # 40e920 <getopt_long_only@@Base+0x1a40>
  409ed5:	vmovaps YMMWORD PTR [rsp+0xa60],ymm0
  409ede:	vmovups ymm0,YMMWORD PTR [rip+0x4a1a]        # 40e900 <getopt_long_only@@Base+0x1a20>
  409ee6:	vmovaps YMMWORD PTR [rsp+0xa40],ymm0
  409eef:	vmovups ymm0,YMMWORD PTR [rip+0x49e9]        # 40e8e0 <getopt_long_only@@Base+0x1a00>
  409ef7:	vmovaps YMMWORD PTR [rsp+0xa20],ymm0
  409f00:	vmovups ymm0,YMMWORD PTR [rip+0x49b8]        # 40e8c0 <getopt_long_only@@Base+0x19e0>
  409f08:	vmovaps YMMWORD PTR [rsp+0xa00],ymm0
  409f11:	mov    rax,QWORD PTR [rip+0x4b38]        # 40ea50 <getopt_long_only@@Base+0x1b70>
  409f18:	mov    QWORD PTR [rsp+0x11a0],rax
  409f20:	vmovups ymm0,YMMWORD PTR [rip+0x4b08]        # 40ea30 <getopt_long_only@@Base+0x1b50>
  409f28:	vmovaps YMMWORD PTR [rsp+0x1180],ymm0
  409f31:	vmovups ymm0,YMMWORD PTR [rip+0x4ad7]        # 40ea10 <getopt_long_only@@Base+0x1b30>
  409f39:	vmovaps YMMWORD PTR [rsp+0x1160],ymm0
  409f42:	vmovups ymm0,YMMWORD PTR [rip+0x4aa6]        # 40e9f0 <getopt_long_only@@Base+0x1b10>
  409f4a:	vmovaps YMMWORD PTR [rsp+0x1140],ymm0
  409f53:	vmovups ymm0,YMMWORD PTR [rip+0x4a75]        # 40e9d0 <getopt_long_only@@Base+0x1af0>
  409f5b:	vmovaps YMMWORD PTR [rsp+0x1120],ymm0
  409f64:	vmovups ymm0,YMMWORD PTR [rip+0x4a44]        # 40e9b0 <getopt_long_only@@Base+0x1ad0>
  409f6c:	vmovaps YMMWORD PTR [rsp+0x1100],ymm0
  409f75:	vmovups ymm0,YMMWORD PTR [rip+0x4a13]        # 40e990 <getopt_long_only@@Base+0x1ab0>
  409f7d:	vmovaps YMMWORD PTR [rsp+0x10e0],ymm0
  409f86:	mov    eax,DWORD PTR [rip+0x4b34]        # 40eac0 <getopt_long_only@@Base+0x1be0>
  409f8c:	vmovups ymm0,YMMWORD PTR [rip+0x4b0c]        # 40eaa0 <getopt_long_only@@Base+0x1bc0>
  409f94:	vmovaps YMMWORD PTR [rsp+0xcc0],ymm0
  409f9d:	vmovups ymm0,YMMWORD PTR [rip+0x4adb]        # 40ea80 <getopt_long_only@@Base+0x1ba0>
  409fa5:	vmovaps YMMWORD PTR [rsp+0xca0],ymm0
  409fae:	vmovups ymm0,YMMWORD PTR [rip+0x4aaa]        # 40ea60 <getopt_long_only@@Base+0x1b80>
  409fb6:	vmovaps YMMWORD PTR [rsp+0xc80],ymm0
  409fbf:	mov    DWORD PTR [rsp+0xce0],eax
  409fc6:	mov    eax,DWORD PTR [rip+0x4b64]        # 40eb30 <getopt_long_only@@Base+0x1c50>
  409fcc:	mov    DWORD PTR [rsp+0xfe0],eax
  409fd3:	vmovups ymm0,YMMWORD PTR [rip+0x4b35]        # 40eb10 <getopt_long_only@@Base+0x1c30>
  409fdb:	vmovaps YMMWORD PTR [rsp+0xfc0],ymm0
  409fe4:	vmovups ymm0,YMMWORD PTR [rip+0x4b04]        # 40eaf0 <getopt_long_only@@Base+0x1c10>
  409fec:	vmovaps YMMWORD PTR [rsp+0xfa0],ymm0
  409ff5:	vmovups ymm0,YMMWORD PTR [rip+0x4ad3]        # 40ead0 <getopt_long_only@@Base+0x1bf0>
  409ffd:	vmovaps YMMWORD PTR [rsp+0xf80],ymm0
  40a006:	mov    eax,DWORD PTR [rip+0x4b94]        # 40eba0 <getopt_long_only@@Base+0x1cc0>
  40a00c:	mov    DWORD PTR [rsp+0xc00],eax
  40a013:	vmovups ymm0,YMMWORD PTR [rip+0x4b65]        # 40eb80 <getopt_long_only@@Base+0x1ca0>
  40a01b:	vmovaps YMMWORD PTR [rsp+0xbe0],ymm0
  40a024:	vmovups ymm1,YMMWORD PTR [rip+0x4b34]        # 40eb60 <getopt_long_only@@Base+0x1c80>
  40a02c:	vmovaps YMMWORD PTR [rsp+0xbc0],ymm1
  40a035:	vmovups ymm2,YMMWORD PTR [rip+0x4b03]        # 40eb40 <getopt_long_only@@Base+0x1c60>
  40a03d:	vmovaps YMMWORD PTR [rsp+0xba0],ymm2
  40a046:	mov    ecx,DWORD PTR [rip+0x4bc4]        # 40ec10 <getopt_long_only@@Base+0x1d30>
  40a04c:	vmovups ymm3,YMMWORD PTR [rip+0x4b9c]        # 40ebf0 <getopt_long_only@@Base+0x1d10>
  40a054:	vmovaps YMMWORD PTR [rsp+0x600],ymm3
  40a05d:	vmovups ymm4,YMMWORD PTR [rip+0x4b6b]        # 40ebd0 <getopt_long_only@@Base+0x1cf0>
  40a065:	vmovaps YMMWORD PTR [rsp+0x5e0],ymm4
  40a06e:	mov    DWORD PTR [rsp+0x620],ecx
  40a075:	vmovups ymm5,YMMWORD PTR [rip+0x4b33]        # 40ebb0 <getopt_long_only@@Base+0x1cd0>
  40a07d:	vmovaps YMMWORD PTR [rsp+0x5c0],ymm5
  40a086:	vmovaps YMMWORD PTR [rsp+0x6e0],ymm0
  40a08f:	mov    DWORD PTR [rsp+0x700],eax
  40a096:	vmovaps YMMWORD PTR [rsp+0x6c0],ymm1
  40a09f:	vmovaps YMMWORD PTR [rsp+0x6a0],ymm2
  40a0a8:	mov    DWORD PTR [rsp+0x7e0],ecx
  40a0af:	vmovaps YMMWORD PTR [rsp+0x7c0],ymm3
  40a0b8:	vmovaps YMMWORD PTR [rsp+0x7a0],ymm4
  40a0c1:	vmovaps YMMWORD PTR [rsp+0x780],ymm5
  40a0ca:	vmovups ymm0,YMMWORD PTR [rip+0x4b60]        # 40ec32 <getopt_long_only@@Base+0x1d52>
  40a0d2:	vmovups YMMWORD PTR [rsp+0x72],ymm0
  40a0d8:	vmovups ymm1,YMMWORD PTR [rip+0x4b40]        # 40ec20 <getopt_long_only@@Base+0x1d40>
  40a0e0:	vmovaps YMMWORD PTR [rsp+0x60],ymm1
  40a0e6:	vmovups ymm2,YMMWORD PTR [rip+0x4b84]        # 40ec72 <getopt_long_only@@Base+0x1d92>
  40a0ee:	vmovups YMMWORD PTR [rsp+0x1f2],ymm2
  40a0f7:	vmovups ymm3,YMMWORD PTR [rip+0x4b61]        # 40ec60 <getopt_long_only@@Base+0x1d80>
  40a0ff:	vmovaps YMMWORD PTR [rsp+0x1e0],ymm3
  40a108:	vmovups YMMWORD PTR [rsp+0xd72],ymm0
  40a111:	vmovaps YMMWORD PTR [rsp+0xd60],ymm1
  40a11a:	vmovups YMMWORD PTR [rsp+0x392],ymm2
  40a123:	vmovaps YMMWORD PTR [rsp+0x380],ymm3
  40a12c:	vmovups xmm0,XMMWORD PTR [rip+0x4b75]        # 40eca9 <getopt_long_only@@Base+0x1dc9>
  40a134:	vmovups XMMWORD PTR [rsp+0x189],xmm0
  40a13d:	vmovaps xmm1,XMMWORD PTR [rip+0x4b5b]        # 40eca0 <getopt_long_only@@Base+0x1dc0>
  40a145:	vmovaps XMMWORD PTR [rsp+0x180],xmm1
  40a14e:	vmovups xmm2,XMMWORD PTR [rip+0x4b73]        # 40ecc9 <getopt_long_only@@Base+0x1de9>
  40a156:	vmovups XMMWORD PTR [rsp+0xc9],xmm2
  40a15f:	vmovaps xmm3,XMMWORD PTR [rip+0x4b59]        # 40ecc0 <getopt_long_only@@Base+0x1de0>
  40a167:	vmovaps XMMWORD PTR [rsp+0xc0],xmm3
  40a170:	vmovups XMMWORD PTR [rsp+0x1a9],xmm0
  40a179:	vmovaps XMMWORD PTR [rsp+0x1a0],xmm1
  40a182:	vmovups XMMWORD PTR [rsp+0x149],xmm2
  40a18b:	vmovaps XMMWORD PTR [rsp+0x140],xmm3
  40a194:	mov    rax,QWORD PTR [rip+0x4c05]        # 40eda0 <getopt_long_only@@Base+0x1ec0>
  40a19b:	mov    QWORD PTR [rsp+0x920],rax
  40a1a3:	vmovdqu ymm0,YMMWORD PTR [rip+0x4bd5]        # 40ed80 <getopt_long_only@@Base+0x1ea0>
  40a1ab:	vmovdqa YMMWORD PTR [rsp+0x900],ymm0
  40a1b4:	vmovdqu ymm1,YMMWORD PTR [rip+0x4ba4]        # 40ed60 <getopt_long_only@@Base+0x1e80>
  40a1bc:	vmovdqa YMMWORD PTR [rsp+0x8e0],ymm1
  40a1c5:	vmovdqu ymm2,YMMWORD PTR [rip+0x4b73]        # 40ed40 <getopt_long_only@@Base+0x1e60>
  40a1cd:	vmovdqa YMMWORD PTR [rsp+0x8c0],ymm2
  40a1d6:	vmovdqu ymm3,YMMWORD PTR [rip+0x4b42]        # 40ed20 <getopt_long_only@@Base+0x1e40>
  40a1de:	vmovdqa YMMWORD PTR [rsp+0x8a0],ymm3
  40a1e7:	vmovdqu ymm4,YMMWORD PTR [rip+0x4b11]        # 40ed00 <getopt_long_only@@Base+0x1e20>
  40a1ef:	vmovdqa YMMWORD PTR [rsp+0x880],ymm4
  40a1f8:	vmovups ymm5,YMMWORD PTR [rip+0x4ae0]        # 40ece0 <getopt_long_only@@Base+0x1e00>
  40a200:	vmovaps YMMWORD PTR [rsp+0x860],ymm5
  40a209:	mov    rcx,QWORD PTR [rip+0x4c60]        # 40ee70 <getopt_long_only@@Base+0x1f90>
  40a210:	mov    QWORD PTR [rsp+0xea0],rcx
  40a218:	vmovdqu ymm6,YMMWORD PTR [rip+0x4c30]        # 40ee50 <getopt_long_only@@Base+0x1f70>
  40a220:	vmovdqa YMMWORD PTR [rsp+0xe80],ymm6
  40a229:	vmovdqu ymm7,YMMWORD PTR [rip+0x4bff]        # 40ee30 <getopt_long_only@@Base+0x1f50>
  40a231:	vmovdqa YMMWORD PTR [rsp+0xe60],ymm7
  40a23a:	vmovdqu ymm8,YMMWORD PTR [rip+0x4bce]        # 40ee10 <getopt_long_only@@Base+0x1f30>
  40a242:	vmovdqa YMMWORD PTR [rsp+0xe40],ymm8
  40a24b:	vmovdqu ymm9,YMMWORD PTR [rip+0x4b9d]        # 40edf0 <getopt_long_only@@Base+0x1f10>
  40a253:	vmovdqa YMMWORD PTR [rsp+0xe20],ymm9
  40a25c:	vmovdqu ymm10,YMMWORD PTR [rip+0x4b6c]        # 40edd0 <getopt_long_only@@Base+0x1ef0>
  40a264:	vmovdqa YMMWORD PTR [rsp+0xe00],ymm10
  40a26d:	vmovdqu ymm11,YMMWORD PTR [rip+0x4b3b]        # 40edb0 <getopt_long_only@@Base+0x1ed0>
  40a275:	vmovdqa YMMWORD PTR [rsp+0xde0],ymm11
  40a27e:	vmovdqa YMMWORD PTR [rsp+0x1ce0],ymm0
  40a287:	vmovdqa YMMWORD PTR [rsp+0x1cc0],ymm1
  40a290:	vmovdqa YMMWORD PTR [rsp+0x1ca0],ymm2
  40a299:	vmovdqa YMMWORD PTR [rsp+0x1c80],ymm3
  40a2a2:	vmovdqa YMMWORD PTR [rsp+0x1c60],ymm4
  40a2ab:	mov    QWORD PTR [rsp+0x1d00],rax
  40a2b3:	vmovaps YMMWORD PTR [rsp+0x1c40],ymm5
  40a2bc:	mov    QWORD PTR [rsp+0x4c0],rcx
  40a2c4:	vmovdqa YMMWORD PTR [rsp+0x4a0],ymm6
  40a2cd:	vmovdqa YMMWORD PTR [rsp+0x480],ymm7
  40a2d6:	vmovdqa YMMWORD PTR [rsp+0x460],ymm8
  40a2df:	vmovdqa YMMWORD PTR [rsp+0x440],ymm9
  40a2e8:	vmovdqa YMMWORD PTR [rsp+0x420],ymm10
  40a2f1:	vmovdqa YMMWORD PTR [rsp+0x400],ymm11
  40a2fa:	mov    DWORD PTR [rsp+0x260],0x19
  40a305:	mov    DWORD PTR [rsp+0x270],0x19
  40a310:	lea    rax,[rsp+0x300]
  40a318:	mov    QWORD PTR [rsp+0x268],rax
  40a320:	mov    DWORD PTR [rsp+0x280],0xb
  40a32b:	lea    rax,[rsp+0x2a0]
  40a333:	mov    QWORD PTR [rsp+0x278],rax
  40a33b:	mov    DWORD PTR [rsp+0x284],0x19
  40a346:	mov    QWORD PTR [rsp+0x288],0x0
  40a352:	mov    edx,DWORD PTR [rip+0xafc8]        # 415320 <getopt_long_only@@Base+0x8440>
  40a358:	mov    QWORD PTR [rsp+0x28],rdi
  40a35d:	xor    esi,esi
  40a35f:	vzeroupper 
  40a362:	call   402310 <Mat_CreateVer@plt>
  40a367:	test   rax,rax
  40a36a:	je     40a3e8 <Mat_VarRead@plt+0x8058>
  40a36c:	mov    r14,rax
  40a36f:	mov    r12d,0x1
  40a375:	cmp    DWORD PTR [rsp+0x100],0x9
  40a37d:	ja     40b624 <Mat_VarRead@plt+0x9294>
  40a383:	mov    rax,QWORD PTR [rsp+0x100]
  40a38b:	lea    rcx,[rip+0x40fe]        # 40e490 <getopt_long_only@@Base+0x15b0>
  40a392:	movsxd rax,DWORD PTR [rcx+rax*4]
  40a396:	add    rax,rcx
  40a399:	jmp    rax
  40a39b:	lea    rax,[rsp+0xa00]
  40a3a3:	mov    QWORD PTR [rsp+0x120],rax
  40a3ab:	lea    rax,[rsp+0x10e0]
  40a3b3:	mov    QWORD PTR [rsp+0x128],rax
  40a3bb:	mov    r15d,0x9
  40a3c1:	jmp    40b579 <Mat_VarRead@plt+0x91e9>
  40a3c6:	mov    rax,QWORD PTR [rip+0xac2b]        # 414ff8 <getopt_long_only@@Base+0x8118>
  40a3cd:	mov    rdi,QWORD PTR [rax]
  40a3d0:	lea    rsi,[rip+0x8402]        # 4127d9 <getopt_long_only@@Base+0x58f9>
  40a3d7:	mov    rdx,QWORD PTR [rsp+0x28]
  40a3dc:	xor    eax,eax
  40a3de:	call   402220 <fprintf@plt>
  40a3e3:	jmp    408cef <Mat_VarRead@plt+0x695f>
  40a3e8:	mov    r12d,0x1
  40a3ee:	jmp    40b62c <Mat_VarRead@plt+0x929c>
  40a3f3:	mov    ebx,0x1
  40a3f8:	jmp    40a42a <Mat_VarRead@plt+0x809a>
  40a3fa:	mov    ebx,0x1
  40a3ff:	mov    rdi,r14
  40a402:	mov    rsi,r12
  40a405:	mov    edx,0x1
  40a40a:	xor    ecx,ecx
  40a40c:	call   402200 <Mat_VarGetStructField@plt>
  40a411:	test   rax,rax
  40a414:	je     40a422 <Mat_VarRead@plt+0x8092>
  40a416:	xor    ebx,ebx
  40a418:	mov    rdi,rax
  40a41b:	xor    esi,esi
  40a41d:	call   402270 <Mat_VarPrint@plt>
  40a422:	mov    rdi,r14
  40a425:	call   402240 <Mat_VarFree@plt>
  40a42a:	mov    rdi,r15
  40a42d:	call   4022a0 <Mat_Close@plt>
  40a432:	add    DWORD PTR [rsp+0x3c],ebx
  40a436:	mov    r15,QWORD PTR [rsp+0x50]
  40a43b:	add    r15d,0x4
  40a43f:	jmp    406b94 <Mat_VarRead@plt+0x4804>
  40a444:	mov    rax,QWORD PTR [rip+0x4215]        # 40e660 <getopt_long_only@@Base+0x1780>
  40a44b:	mov    QWORD PTR [rsp+0x10f0],rax
  40a453:	vmovdqa xmm0,XMMWORD PTR [rip+0x41f5]        # 40e650 <getopt_long_only@@Base+0x1770>
  40a45b:	vmovdqa XMMWORD PTR [rsp+0x10e0],xmm0
  40a464:	cmp    QWORD PTR [rsp+0x28],0x0
  40a46a:	je     40a490 <Mat_VarRead@plt+0x8100>
  40a46c:	mov    rax,QWORD PTR [rip+0xab6d]        # 414fe0 <getopt_long_only@@Base+0x8100>
  40a473:	mov    rdx,QWORD PTR [rax]
  40a476:	mov    rdi,QWORD PTR [rsp+0x28]
  40a47b:	lea    rsi,[rip+0x8355]        # 4127d7 <getopt_long_only@@Base+0x58f7>
  40a482:	call   4021c0 <freopen@plt>
  40a487:	test   rax,rax
  40a48a:	je     40bf3d <Mat_VarRead@plt+0x9bad>
  40a490:	mov    edx,0x49e8
  40a495:	mov    edi,0x3
  40a49a:	lea    rsi,[rsp+0x10e0]
  40a4a2:	call   4021d0 <Mat_CalcSubscripts2@plt>
  40a4a7:	mov    rbx,rax
  40a4aa:	mov    rsi,QWORD PTR [rax]
  40a4ad:	mov    rdx,QWORD PTR [rax+0x8]
  40a4b1:	mov    rcx,QWORD PTR [rax+0x10]
  40a4b5:	lea    rdi,[rip+0x4e2d]        # 40f2e9 <getopt_long_only@@Base+0x2409>
  40a4bc:	xor    eax,eax
  40a4be:	call   402110 <Mat_Message@plt>
  40a4c3:	mov    rdi,rbx
  40a4c6:	call   402050 <free@plt>
  40a4cb:	jmp    408a6d <Mat_VarRead@plt+0x66dd>
  40a4d0:	mov    rax,QWORD PTR [rip+0xab21]        # 414ff8 <getopt_long_only@@Base+0x8118>
  40a4d7:	mov    rdi,QWORD PTR [rax]
  40a4da:	lea    rsi,[rip+0x82f8]        # 4127d9 <getopt_long_only@@Base+0x58f9>
  40a4e1:	mov    rdx,QWORD PTR [rsp+0x28]
  40a4e6:	xor    eax,eax
  40a4e8:	call   402220 <fprintf@plt>
  40a4ed:	jmp    409085 <Mat_VarRead@plt+0x6cf5>
  40a4f2:	mov    rax,QWORD PTR [rip+0x4167]        # 40e660 <getopt_long_only@@Base+0x1780>
  40a4f9:	mov    QWORD PTR [rsp+0x10f0],rax
  40a501:	vmovaps xmm0,XMMWORD PTR [rip+0x4147]        # 40e650 <getopt_long_only@@Base+0x1770>
  40a509:	vmovaps XMMWORD PTR [rsp+0x10e0],xmm0
  40a512:	mov    rax,QWORD PTR [rip+0x4167]        # 40e680 <getopt_long_only@@Base+0x17a0>
  40a519:	mov    QWORD PTR [rsp+0x1c50],rax
  40a521:	vmovdqa xmm0,XMMWORD PTR [rip+0x4147]        # 40e670 <getopt_long_only@@Base+0x1790>
  40a529:	vmovdqa XMMWORD PTR [rsp+0x1c40],xmm0
  40a532:	mov    QWORD PTR [rsp+0x400],0x0
  40a53e:	cmp    QWORD PTR [rsp+0x28],0x0
  40a544:	je     40a56a <Mat_VarRead@plt+0x81da>
  40a546:	mov    rax,QWORD PTR [rip+0xaa93]        # 414fe0 <getopt_long_only@@Base+0x8100>
  40a54d:	mov    rdx,QWORD PTR [rax]
  40a550:	mov    rdi,QWORD PTR [rsp+0x28]
  40a555:	lea    rsi,[rip+0x827b]        # 4127d7 <getopt_long_only@@Base+0x58f7>
  40a55c:	call   4021c0 <freopen@plt>
  40a561:	test   rax,rax
  40a564:	je     40bf5f <Mat_VarRead@plt+0x9bcf>
  40a56a:	mov    edi,0x3
  40a56f:	lea    rsi,[rsp+0x10e0]
  40a577:	lea    rdx,[rsp+0x1c40]
  40a57f:	lea    r13,[rsp+0x400]
  40a587:	mov    rcx,r13
  40a58a:	call   4021f0 <Mat_CalcSingleSubscript2@plt>
  40a58f:	add    DWORD PTR [rsp+0x3c],eax
  40a593:	mov    rsi,QWORD PTR [rsp+0x400]
  40a59b:	lea    rdi,[rip+0x4d55]        # 40f2f7 <getopt_long_only@@Base+0x2417>
  40a5a2:	xor    eax,eax
  40a5a4:	call   402110 <Mat_Message@plt>
  40a5a9:	mov    r15,QWORD PTR [rsp+0x50]
  40a5ae:	inc    r15d
  40a5b1:	jmp    4028d0 <Mat_VarRead@plt+0x540>
  40a5b6:	mov    rax,QWORD PTR [rip+0xaa3b]        # 414ff8 <getopt_long_only@@Base+0x8118>
  40a5bd:	mov    rdi,QWORD PTR [rax]
  40a5c0:	lea    rsi,[rip+0x8212]        # 4127d9 <getopt_long_only@@Base+0x58f9>
  40a5c7:	mov    rdx,QWORD PTR [rsp+0x28]
  40a5cc:	xor    eax,eax
  40a5ce:	call   402220 <fprintf@plt>
  40a5d3:	jmp    4093dd <Mat_VarRead@plt+0x704d>
  40a5d8:	mov    rax,QWORD PTR [rip+0xaa19]        # 414ff8 <getopt_long_only@@Base+0x8118>
  40a5df:	mov    rdi,QWORD PTR [rax]
  40a5e2:	lea    rsi,[rip+0x81f0]        # 4127d9 <getopt_long_only@@Base+0x58f9>
  40a5e9:	mov    rdx,QWORD PTR [rsp+0x28]
  40a5ee:	xor    eax,eax
  40a5f0:	call   402220 <fprintf@plt>
  40a5f5:	jmp    409701 <Mat_VarRead@plt+0x7371>
  40a5fa:	lea    rax,[rsp+0xc80]
  40a602:	mov    QWORD PTR [rsp+0x1108],rax
  40a60a:	mov    r15d,0x7
  40a610:	jmp    40a6d6 <Mat_VarRead@plt+0x8346>
  40a615:	lea    rax,[rsp+0x180]
  40a61d:	mov    QWORD PTR [rsp+0x1108],rax
  40a625:	mov    r15d,0x1
  40a62b:	jmp    40a6d6 <Mat_VarRead@plt+0x8346>
  40a630:	lea    rax,[rsp+0xc0]
  40a638:	mov    QWORD PTR [rsp+0x1108],rax
  40a640:	mov    r15d,0x2
  40a646:	jmp    40a6d6 <Mat_VarRead@plt+0x8346>
  40a64b:	lea    rax,[rsp+0x60]
  40a650:	mov    QWORD PTR [rsp+0x1108],rax
  40a658:	mov    r15d,0x3
  40a65e:	jmp    40a6d6 <Mat_VarRead@plt+0x8346>
  40a660:	lea    rax,[rsp+0x1e0]
  40a668:	mov    QWORD PTR [rsp+0x1108],rax
  40a670:	mov    r15d,0x4
  40a676:	jmp    40a6d6 <Mat_VarRead@plt+0x8346>
  40a678:	lea    rax,[rsp+0xba0]
  40a680:	mov    QWORD PTR [rsp+0x1108],rax
  40a688:	mov    r15d,0x5
  40a68e:	jmp    40a6d6 <Mat_VarRead@plt+0x8346>
  40a690:	lea    rax,[rsp+0x5c0]
  40a698:	mov    QWORD PTR [rsp+0x1108],rax
  40a6a0:	mov    r15d,0x6
  40a6a6:	jmp    40a6d6 <Mat_VarRead@plt+0x8346>
  40a6a8:	lea    rax,[rsp+0x860]
  40a6b0:	mov    QWORD PTR [rsp+0x1108],rax
  40a6b8:	mov    r15d,0xc
  40a6be:	jmp    40a6d6 <Mat_VarRead@plt+0x8346>
  40a6c0:	lea    rax,[rsp+0xde0]
  40a6c8:	mov    QWORD PTR [rsp+0x1108],rax
  40a6d0:	mov    r15d,0xd
  40a6d6:	mov    DWORD PTR [rsp],0x1
  40a6dd:	lea    rdi,[rip+0x83f9]        # 412add <getopt_long_only@@Base+0x5bfd>
  40a6e4:	mov    esi,0x5
  40a6e9:	mov    edx,r15d
  40a6ec:	mov    ecx,0x2
  40a6f1:	lea    r8,[rsp+0x40]
  40a6f6:	lea    r9,[rsp+0x10e0]
  40a6fe:	call   4020d0 <Mat_VarCreate@plt>
  40a703:	test   rax,rax
  40a706:	je     40a748 <Mat_VarRead@plt+0x83b8>
  40a708:	mov    rbx,rax
  40a70b:	mov    r9,QWORD PTR [rax+0x38]
  40a70f:	mov    DWORD PTR [rsp],0x0
  40a716:	lea    rdi,[rip+0x83c0]        # 412add <getopt_long_only@@Base+0x5bfd>
  40a71d:	mov    esi,0x5
  40a722:	mov    edx,r15d
  40a725:	mov    ecx,0x2
  40a72a:	lea    r8,[rsp+0x40]
  40a72f:	call   4020d0 <Mat_VarCreate@plt>
  40a734:	mov    r15,rax
  40a737:	mov    rdi,rbx
  40a73a:	call   402240 <Mat_VarFree@plt>
  40a73f:	test   r15,r15
  40a742:	jne    40b5f7 <Mat_VarRead@plt+0x9267>
  40a748:	lea    rdi,[rip+0x839c]        # 412aeb <getopt_long_only@@Base+0x5c0b>
  40a74f:	jmp    40b61d <Mat_VarRead@plt+0x928d>
  40a754:	cmp    DWORD PTR [r12+0x18],0x0
  40a75a:	je     40b71d <Mat_VarRead@plt+0x938d>
  40a760:	lea    rax,[rsp+0x1c40]
  40a768:	mov    QWORD PTR [rsp+0x10e0],rax
  40a770:	lea    rax,[rsp+0x400]
  40a778:	mov    QWORD PTR [rsp+0x10e8],rax
  40a780:	mov    rdi,r15
  40a783:	mov    rsi,r12
  40a786:	lea    rdx,[rsp+0x10e0]
  40a78e:	lea    rcx,[rsp+0x860]
  40a796:	lea    r8,[rsp+0x6a0]
  40a79e:	lea    r9,[rsp+0x780]
  40a7a6:	call   402130 <Mat_VarReadData@plt>
  40a7ab:	vmovss xmm0,DWORD PTR [rsp+0x1c40]
  40a7b4:	vmovss xmm4,DWORD PTR [rsp+0x1c44]
  40a7bd:	vcvtss2sd xmm0,xmm0,xmm0
  40a7c1:	vmovss xmm1,DWORD PTR [rsp+0x400]
  40a7ca:	vmovss xmm5,DWORD PTR [rsp+0x404]
  40a7d3:	vcvtss2sd xmm1,xmm1,xmm1
  40a7d7:	vmovss xmm2,DWORD PTR [rsp+0x1c48]
  40a7e0:	vcvtss2sd xmm2,xmm2,xmm2
  40a7e4:	vmovss xmm3,DWORD PTR [rsp+0x408]
  40a7ed:	vcvtss2sd xmm3,xmm3,xmm3
  40a7f1:	vcvtss2sd xmm4,xmm4,xmm4
  40a7f5:	vcvtss2sd xmm5,xmm5,xmm5
  40a7f9:	vmovss xmm6,DWORD PTR [rsp+0x1c4c]
  40a802:	vcvtss2sd xmm6,xmm6,xmm6
  40a806:	vmovss xmm7,DWORD PTR [rsp+0x40c]
  40a80f:	vcvtss2sd xmm7,xmm7,xmm7
  40a813:	lea    rdi,[rip+0x8035]        # 41284f <getopt_long_only@@Base+0x596f>
  40a81a:	mov    al,0x8
  40a81c:	call   402160 <printf@plt>
  40a821:	cmp    DWORD PTR [r15+0x20],0x200
  40a829:	je     40a87a <Mat_VarRead@plt+0x84ea>
  40a82b:	mov    rdi,QWORD PTR [r14]
  40a82e:	mov    esi,0x18
  40a833:	call   4022d0 <realloc@plt>
  40a838:	test   rax,rax
  40a83b:	je     40a87a <Mat_VarRead@plt+0x84ea>
  40a83d:	inc    DWORD PTR [r12+0x8]
  40a842:	mov    QWORD PTR [r12+0x28],rax
  40a847:	mov    QWORD PTR [rax+0x10],0x1
  40a84f:	mov    rdi,r15
  40a852:	mov    rsi,r12
  40a855:	lea    rdx,[rsp+0x10e0]
  40a85d:	lea    rcx,[rsp+0x860]
  40a865:	lea    r8,[rsp+0x6a0]
  40a86d:	lea    r9,[rsp+0x780]
  40a875:	call   402130 <Mat_VarReadData@plt>
  40a87a:	vmovss xmm0,DWORD PTR [rsp+0x1c40]
  40a883:	vmovss xmm4,DWORD PTR [rsp+0x1c44]
  40a88c:	vcvtss2sd xmm0,xmm0,xmm0
  40a890:	vmovss xmm1,DWORD PTR [rsp+0x400]
  40a899:	vmovss xmm5,DWORD PTR [rsp+0x404]
  40a8a2:	vcvtss2sd xmm1,xmm1,xmm1
  40a8a6:	vmovss xmm2,DWORD PTR [rsp+0x1c48]
  40a8af:	vcvtss2sd xmm2,xmm2,xmm2
  40a8b3:	vmovss xmm3,DWORD PTR [rsp+0x408]
  40a8bc:	vcvtss2sd xmm3,xmm3,xmm3
  40a8c0:	vcvtss2sd xmm4,xmm4,xmm4
  40a8c4:	vcvtss2sd xmm5,xmm5,xmm5
  40a8c8:	vmovss xmm6,DWORD PTR [rsp+0x1c4c]
  40a8d1:	vcvtss2sd xmm6,xmm6,xmm6
  40a8d5:	vmovss xmm7,DWORD PTR [rsp+0x40c]
  40a8de:	vcvtss2sd xmm7,xmm7,xmm7
  40a8e2:	lea    rdi,[rip+0x7f66]        # 41284f <getopt_long_only@@Base+0x596f>
  40a8e9:	mov    al,0x8
  40a8eb:	call   402160 <printf@plt>
  40a8f0:	jmp    40bf1f <Mat_VarRead@plt+0x9b8f>
  40a8f5:	cmp    DWORD PTR [r12+0x18],0x0
  40a8fb:	je     40b82a <Mat_VarRead@plt+0x949a>
  40a901:	lea    rax,[rsp+0x1c40]
  40a909:	mov    QWORD PTR [rsp+0x10e0],rax
  40a911:	lea    rax,[rsp+0x400]
  40a919:	mov    QWORD PTR [rsp+0x10e8],rax
  40a921:	mov    rdi,r15
  40a924:	mov    rsi,r12
  40a927:	lea    rdx,[rsp+0x10e0]
  40a92f:	lea    rcx,[rsp+0x860]
  40a937:	lea    r8,[rsp+0x6a0]
  40a93f:	lea    r9,[rsp+0x780]
  40a947:	call   402130 <Mat_VarReadData@plt>
  40a94c:	movsx  esi,BYTE PTR [rsp+0x1c40]
  40a954:	movsx  edx,BYTE PTR [rsp+0x400]
  40a95c:	movsx  ecx,BYTE PTR [rsp+0x1c42]
  40a964:	movsx  r8d,BYTE PTR [rsp+0x402]
  40a96d:	movsx  r9d,BYTE PTR [rsp+0x1c41]
  40a976:	movsx  eax,BYTE PTR [rsp+0x401]
  40a97e:	movsx  edi,BYTE PTR [rsp+0x1c43]
  40a986:	movsx  ebx,BYTE PTR [rsp+0x403]
  40a98e:	mov    DWORD PTR [rsp+0x10],ebx
  40a992:	mov    DWORD PTR [rsp+0x8],edi
  40a996:	mov    DWORD PTR [rsp],eax
  40a999:	lea    rdi,[rip+0x8091]        # 412a31 <getopt_long_only@@Base+0x5b51>
  40a9a0:	xor    eax,eax
  40a9a2:	call   402160 <printf@plt>
  40a9a7:	cmp    DWORD PTR [r15+0x20],0x200
  40a9af:	je     40aa00 <Mat_VarRead@plt+0x8670>
  40a9b1:	mov    rdi,QWORD PTR [r14]
  40a9b4:	mov    esi,0x18
  40a9b9:	call   4022d0 <realloc@plt>
  40a9be:	test   rax,rax
  40a9c1:	je     40aa00 <Mat_VarRead@plt+0x8670>
  40a9c3:	inc    DWORD PTR [r12+0x8]
  40a9c8:	mov    QWORD PTR [r12+0x28],rax
  40a9cd:	mov    QWORD PTR [rax+0x10],0x1
  40a9d5:	mov    rdi,r15
  40a9d8:	mov    rsi,r12
  40a9db:	lea    rdx,[rsp+0x10e0]
  40a9e3:	lea    rcx,[rsp+0x860]
  40a9eb:	lea    r8,[rsp+0x6a0]
  40a9f3:	lea    r9,[rsp+0x780]
  40a9fb:	call   402130 <Mat_VarReadData@plt>
  40aa00:	movsx  esi,BYTE PTR [rsp+0x1c40]
  40aa08:	movsx  edx,BYTE PTR [rsp+0x400]
  40aa10:	movsx  ecx,BYTE PTR [rsp+0x1c42]
  40aa18:	movsx  r8d,BYTE PTR [rsp+0x402]
  40aa21:	movsx  r9d,BYTE PTR [rsp+0x1c41]
  40aa2a:	movsx  eax,BYTE PTR [rsp+0x401]
  40aa32:	movsx  edi,BYTE PTR [rsp+0x1c43]
  40aa3a:	movsx  ebx,BYTE PTR [rsp+0x403]
  40aa42:	mov    DWORD PTR [rsp+0x10],ebx
  40aa46:	mov    DWORD PTR [rsp+0x8],edi
  40aa4a:	mov    DWORD PTR [rsp],eax
  40aa4d:	lea    rdi,[rip+0x7fdd]        # 412a31 <getopt_long_only@@Base+0x5b51>
  40aa54:	jmp    40b128 <Mat_VarRead@plt+0x8d98>
  40aa59:	cmp    DWORD PTR [r12+0x18],0x0
  40aa5f:	je     40b90a <Mat_VarRead@plt+0x957a>
  40aa65:	lea    rax,[rsp+0x1c40]
  40aa6d:	mov    QWORD PTR [rsp+0x10e0],rax
  40aa75:	lea    rax,[rsp+0x400]
  40aa7d:	mov    QWORD PTR [rsp+0x10e8],rax
  40aa85:	mov    rdi,r15
  40aa88:	mov    rsi,r12
  40aa8b:	lea    rdx,[rsp+0x10e0]
  40aa93:	lea    rcx,[rsp+0x860]
  40aa9b:	lea    r8,[rsp+0x6a0]
  40aaa3:	lea    r9,[rsp+0x780]
  40aaab:	call   402130 <Mat_VarReadData@plt>
  40aab0:	movzx  esi,BYTE PTR [rsp+0x1c40]
  40aab8:	movzx  edx,BYTE PTR [rsp+0x400]
  40aac0:	movzx  ecx,BYTE PTR [rsp+0x1c42]
  40aac8:	movzx  r8d,BYTE PTR [rsp+0x402]
  40aad1:	movzx  r9d,BYTE PTR [rsp+0x1c41]
  40aada:	movzx  eax,BYTE PTR [rsp+0x401]
  40aae2:	movzx  edi,BYTE PTR [rsp+0x1c43]
  40aaea:	movzx  ebx,BYTE PTR [rsp+0x403]
  40aaf2:	mov    DWORD PTR [rsp+0x10],ebx
  40aaf6:	mov    DWORD PTR [rsp+0x8],edi
  40aafa:	mov    DWORD PTR [rsp],eax
  40aafd:	lea    rdi,[rip+0x7f83]        # 412a87 <getopt_long_only@@Base+0x5ba7>
  40ab04:	xor    eax,eax
  40ab06:	call   402160 <printf@plt>
  40ab0b:	cmp    DWORD PTR [r15+0x20],0x200
  40ab13:	je     40ab64 <Mat_VarRead@plt+0x87d4>
  40ab15:	mov    rdi,QWORD PTR [r14]
  40ab18:	mov    esi,0x18
  40ab1d:	call   4022d0 <realloc@plt>
  40ab22:	test   rax,rax
  40ab25:	je     40ab64 <Mat_VarRead@plt+0x87d4>
  40ab27:	inc    DWORD PTR [r12+0x8]
  40ab2c:	mov    QWORD PTR [r12+0x28],rax
  40ab31:	mov    QWORD PTR [rax+0x10],0x1
  40ab39:	mov    rdi,r15
  40ab3c:	mov    rsi,r12
  40ab3f:	lea    rdx,[rsp+0x10e0]
  40ab47:	lea    rcx,[rsp+0x860]
  40ab4f:	lea    r8,[rsp+0x6a0]
  40ab57:	lea    r9,[rsp+0x780]
  40ab5f:	call   402130 <Mat_VarReadData@plt>
  40ab64:	movzx  esi,BYTE PTR [rsp+0x1c40]
  40ab6c:	movzx  edx,BYTE PTR [rsp+0x400]
  40ab74:	movzx  ecx,BYTE PTR [rsp+0x1c42]
  40ab7c:	movzx  r8d,BYTE PTR [rsp+0x402]
  40ab85:	movzx  r9d,BYTE PTR [rsp+0x1c41]
  40ab8e:	movzx  eax,BYTE PTR [rsp+0x401]
  40ab96:	movzx  edi,BYTE PTR [rsp+0x1c43]
  40ab9e:	movzx  ebx,BYTE PTR [rsp+0x403]
  40aba6:	mov    DWORD PTR [rsp+0x10],ebx
  40abaa:	mov    DWORD PTR [rsp+0x8],edi
  40abae:	mov    DWORD PTR [rsp],eax
  40abb1:	lea    rdi,[rip+0x7ecf]        # 412a87 <getopt_long_only@@Base+0x5ba7>
  40abb8:	jmp    40b128 <Mat_VarRead@plt+0x8d98>
  40abbd:	cmp    DWORD PTR [r12+0x18],0x0
  40abc3:	je     40b9ea <Mat_VarRead@plt+0x965a>
  40abc9:	lea    rax,[rsp+0x1c40]
  40abd1:	mov    QWORD PTR [rsp+0x10e0],rax
  40abd9:	lea    rax,[rsp+0x400]
  40abe1:	mov    QWORD PTR [rsp+0x10e8],rax
  40abe9:	mov    rdi,r15
  40abec:	mov    rsi,r12
  40abef:	lea    rdx,[rsp+0x10e0]
  40abf7:	lea    rcx,[rsp+0x860]
  40abff:	lea    r8,[rsp+0x6a0]
  40ac07:	lea    r9,[rsp+0x780]
  40ac0f:	call   402130 <Mat_VarReadData@plt>
  40ac14:	movsx  esi,WORD PTR [rsp+0x1c40]
  40ac1c:	movsx  edx,WORD PTR [rsp+0x400]
  40ac24:	movsx  ecx,WORD PTR [rsp+0x1c44]
  40ac2c:	movsx  r8d,WORD PTR [rsp+0x404]
  40ac35:	movsx  r9d,WORD PTR [rsp+0x1c42]
  40ac3e:	movsx  eax,WORD PTR [rsp+0x402]
  40ac46:	movsx  edi,WORD PTR [rsp+0x1c46]
  40ac4e:	movsx  ebx,WORD PTR [rsp+0x406]
  40ac56:	mov    DWORD PTR [rsp+0x10],ebx
  40ac5a:	mov    DWORD PTR [rsp+0x8],edi
  40ac5e:	mov    DWORD PTR [rsp],eax
  40ac61:	lea    rdi,[rip+0x7d35]        # 41299d <getopt_long_only@@Base+0x5abd>
  40ac68:	xor    eax,eax
  40ac6a:	call   402160 <printf@plt>
  40ac6f:	cmp    DWORD PTR [r15+0x20],0x200
  40ac77:	je     40acc8 <Mat_VarRead@plt+0x8938>
  40ac79:	mov    rdi,QWORD PTR [r14]
  40ac7c:	mov    esi,0x18
  40ac81:	call   4022d0 <realloc@plt>
  40ac86:	test   rax,rax
  40ac89:	je     40acc8 <Mat_VarRead@plt+0x8938>
  40ac8b:	inc    DWORD PTR [r12+0x8]
  40ac90:	mov    QWORD PTR [r12+0x28],rax
  40ac95:	mov    QWORD PTR [rax+0x10],0x1
  40ac9d:	mov    rdi,r15
  40aca0:	mov    rsi,r12
  40aca3:	lea    rdx,[rsp+0x10e0]
  40acab:	lea    rcx,[rsp+0x860]
  40acb3:	lea    r8,[rsp+0x6a0]
  40acbb:	lea    r9,[rsp+0x780]
  40acc3:	call   402130 <Mat_VarReadData@plt>
  40acc8:	movsx  esi,WORD PTR [rsp+0x1c40]
  40acd0:	movsx  edx,WORD PTR [rsp+0x400]
  40acd8:	movsx  ecx,WORD PTR [rsp+0x1c44]
  40ace0:	movsx  r8d,WORD PTR [rsp+0x404]
  40ace9:	movsx  r9d,WORD PTR [rsp+0x1c42]
  40acf2:	movsx  eax,WORD PTR [rsp+0x402]
  40acfa:	movsx  edi,WORD PTR [rsp+0x1c46]
  40ad02:	movsx  ebx,WORD PTR [rsp+0x406]
  40ad0a:	mov    DWORD PTR [rsp+0x10],ebx
  40ad0e:	mov    DWORD PTR [rsp+0x8],edi
  40ad12:	mov    DWORD PTR [rsp],eax
  40ad15:	lea    rdi,[rip+0x7c81]        # 41299d <getopt_long_only@@Base+0x5abd>
  40ad1c:	jmp    40b128 <Mat_VarRead@plt+0x8d98>
  40ad21:	cmp    DWORD PTR [r12+0x18],0x0
  40ad27:	je     40baca <Mat_VarRead@plt+0x973a>
  40ad2d:	lea    rax,[rsp+0x1c40]
  40ad35:	mov    QWORD PTR [rsp+0x10e0],rax
  40ad3d:	lea    rax,[rsp+0x400]
  40ad45:	mov    QWORD PTR [rsp+0x10e8],rax
  40ad4d:	mov    rdi,r15
  40ad50:	mov    rsi,r12
  40ad53:	lea    rdx,[rsp+0x10e0]
  40ad5b:	lea    rcx,[rsp+0x860]
  40ad63:	lea    r8,[rsp+0x6a0]
  40ad6b:	lea    r9,[rsp+0x780]
  40ad73:	call   402130 <Mat_VarReadData@plt>
  40ad78:	movzx  esi,WORD PTR [rsp+0x1c40]
  40ad80:	movzx  edx,WORD PTR [rsp+0x400]
  40ad88:	movzx  ecx,WORD PTR [rsp+0x1c44]
  40ad90:	movzx  r8d,WORD PTR [rsp+0x404]
  40ad99:	movzx  r9d,WORD PTR [rsp+0x1c42]
  40ada2:	movzx  eax,WORD PTR [rsp+0x402]
  40adaa:	movzx  edi,WORD PTR [rsp+0x1c46]
  40adb2:	movzx  ebx,WORD PTR [rsp+0x406]
  40adba:	mov    DWORD PTR [rsp+0x10],ebx
  40adbe:	mov    DWORD PTR [rsp+0x8],edi
  40adc2:	mov    DWORD PTR [rsp],eax
  40adc5:	lea    rdi,[rip+0x7c1b]        # 4129e7 <getopt_long_only@@Base+0x5b07>
  40adcc:	xor    eax,eax
  40adce:	call   402160 <printf@plt>
  40add3:	cmp    DWORD PTR [r15+0x20],0x200
  40addb:	je     40ae2c <Mat_VarRead@plt+0x8a9c>
  40addd:	mov    rdi,QWORD PTR [r14]
  40ade0:	mov    esi,0x18
  40ade5:	call   4022d0 <realloc@plt>
  40adea:	test   rax,rax
  40aded:	je     40ae2c <Mat_VarRead@plt+0x8a9c>
  40adef:	inc    DWORD PTR [r12+0x8]
  40adf4:	mov    QWORD PTR [r12+0x28],rax
  40adf9:	mov    QWORD PTR [rax+0x10],0x1
  40ae01:	mov    rdi,r15
  40ae04:	mov    rsi,r12
  40ae07:	lea    rdx,[rsp+0x10e0]
  40ae0f:	lea    rcx,[rsp+0x860]
  40ae17:	lea    r8,[rsp+0x6a0]
  40ae1f:	lea    r9,[rsp+0x780]
  40ae27:	call   402130 <Mat_VarReadData@plt>
  40ae2c:	movzx  esi,WORD PTR [rsp+0x1c40]
  40ae34:	movzx  edx,WORD PTR [rsp+0x400]
  40ae3c:	movzx  ecx,WORD PTR [rsp+0x1c44]
  40ae44:	movzx  r8d,WORD PTR [rsp+0x404]
  40ae4d:	movzx  r9d,WORD PTR [rsp+0x1c42]
  40ae56:	movzx  eax,WORD PTR [rsp+0x402]
  40ae5e:	movzx  edi,WORD PTR [rsp+0x1c46]
  40ae66:	movzx  ebx,WORD PTR [rsp+0x406]
  40ae6e:	mov    DWORD PTR [rsp+0x10],ebx
  40ae72:	mov    DWORD PTR [rsp+0x8],edi
  40ae76:	mov    DWORD PTR [rsp],eax
  40ae79:	lea    rdi,[rip+0x7b67]        # 4129e7 <getopt_long_only@@Base+0x5b07>
  40ae80:	jmp    40b128 <Mat_VarRead@plt+0x8d98>
  40ae85:	cmp    DWORD PTR [r12+0x18],0x0
  40ae8b:	je     40bbaa <Mat_VarRead@plt+0x981a>
  40ae91:	lea    rax,[rsp+0xde0]
  40ae99:	mov    QWORD PTR [rsp+0x10e0],rax
  40aea1:	lea    rax,[rsp+0xa00]
  40aea9:	mov    QWORD PTR [rsp+0x10e8],rax
  40aeb1:	mov    rdi,r15
  40aeb4:	mov    rsi,r12
  40aeb7:	lea    rdx,[rsp+0x10e0]
  40aebf:	lea    rcx,[rsp+0x860]
  40aec7:	lea    r8,[rsp+0x6a0]
  40aecf:	lea    r9,[rsp+0x780]
  40aed7:	call   402130 <Mat_VarReadData@plt>
  40aedc:	mov    ecx,DWORD PTR [rsp+0xde8]
  40aee3:	mov    r8d,DWORD PTR [rsp+0xa08]
  40aeeb:	mov    esi,DWORD PTR [rsp+0xde0]
  40aef2:	mov    r9d,DWORD PTR [rsp+0xde4]
  40aefa:	mov    edx,DWORD PTR [rsp+0xa00]
  40af01:	mov    eax,DWORD PTR [rsp+0xa04]
  40af08:	mov    edi,DWORD PTR [rsp+0xdec]
  40af0f:	mov    ebx,DWORD PTR [rsp+0xa0c]
  40af16:	mov    DWORD PTR [rsp+0x10],ebx
  40af1a:	mov    DWORD PTR [rsp+0x8],edi
  40af1e:	mov    DWORD PTR [rsp],eax
  40af21:	lea    rdi,[rip+0x79f9]        # 412921 <getopt_long_only@@Base+0x5a41>
  40af28:	xor    eax,eax
  40af2a:	call   402160 <printf@plt>
  40af2f:	cmp    DWORD PTR [r15+0x20],0x200
  40af37:	je     40af88 <Mat_VarRead@plt+0x8bf8>
  40af39:	mov    rdi,QWORD PTR [r14]
  40af3c:	mov    esi,0x18
  40af41:	call   4022d0 <realloc@plt>
  40af46:	test   rax,rax
  40af49:	je     40af88 <Mat_VarRead@plt+0x8bf8>
  40af4b:	inc    DWORD PTR [r12+0x8]
  40af50:	mov    QWORD PTR [r12+0x28],rax
  40af55:	mov    QWORD PTR [rax+0x10],0x1
  40af5d:	mov    rdi,r15
  40af60:	mov    rsi,r12
  40af63:	lea    rdx,[rsp+0x10e0]
  40af6b:	lea    rcx,[rsp+0x860]
  40af73:	lea    r8,[rsp+0x6a0]
  40af7b:	lea    r9,[rsp+0x780]
  40af83:	call   402130 <Mat_VarReadData@plt>
  40af88:	mov    ecx,DWORD PTR [rsp+0xde8]
  40af8f:	mov    r8d,DWORD PTR [rsp+0xa08]
  40af97:	mov    esi,DWORD PTR [rsp+0xde0]
  40af9e:	mov    r9d,DWORD PTR [rsp+0xde4]
  40afa6:	mov    edx,DWORD PTR [rsp+0xa00]
  40afad:	mov    eax,DWORD PTR [rsp+0xa04]
  40afb4:	mov    edi,DWORD PTR [rsp+0xdec]
  40afbb:	mov    ebx,DWORD PTR [rsp+0xa0c]
  40afc2:	mov    DWORD PTR [rsp+0x10],ebx
  40afc6:	mov    DWORD PTR [rsp+0x8],edi
  40afca:	mov    DWORD PTR [rsp],eax
  40afcd:	lea    rdi,[rip+0x794d]        # 412921 <getopt_long_only@@Base+0x5a41>
  40afd4:	jmp    40b128 <Mat_VarRead@plt+0x8d98>
  40afd9:	cmp    DWORD PTR [r12+0x18],0x0
  40afdf:	je     40bc82 <Mat_VarRead@plt+0x98f2>
  40afe5:	lea    rax,[rsp+0x1c40]
  40afed:	mov    QWORD PTR [rsp+0x10e0],rax
  40aff5:	lea    rax,[rsp+0x400]
  40affd:	mov    QWORD PTR [rsp+0x10e8],rax
  40b005:	mov    rdi,r15
  40b008:	mov    rsi,r12
  40b00b:	lea    rdx,[rsp+0x10e0]
  40b013:	lea    rcx,[rsp+0x860]
  40b01b:	lea    r8,[rsp+0x6a0]
  40b023:	lea    r9,[rsp+0x780]
  40b02b:	call   402130 <Mat_VarReadData@plt>
  40b030:	mov    ecx,DWORD PTR [rsp+0x1c48]
  40b037:	mov    r8d,DWORD PTR [rsp+0x408]
  40b03f:	mov    esi,DWORD PTR [rsp+0x1c40]
  40b046:	mov    r9d,DWORD PTR [rsp+0x1c44]
  40b04e:	mov    edx,DWORD PTR [rsp+0x400]
  40b055:	mov    eax,DWORD PTR [rsp+0x404]
  40b05c:	mov    edi,DWORD PTR [rsp+0x1c4c]
  40b063:	mov    ebx,DWORD PTR [rsp+0x40c]
  40b06a:	mov    DWORD PTR [rsp+0x10],ebx
  40b06e:	mov    DWORD PTR [rsp+0x8],edi
  40b072:	mov    DWORD PTR [rsp],eax
  40b075:	lea    rdi,[rip+0x78e3]        # 41295f <getopt_long_only@@Base+0x5a7f>
  40b07c:	xor    eax,eax
  40b07e:	call   402160 <printf@plt>
  40b083:	cmp    DWORD PTR [r15+0x20],0x200
  40b08b:	je     40b0dc <Mat_VarRead@plt+0x8d4c>
  40b08d:	mov    rdi,QWORD PTR [r14]
  40b090:	mov    esi,0x18
  40b095:	call   4022d0 <realloc@plt>
  40b09a:	test   rax,rax
  40b09d:	je     40b0dc <Mat_VarRead@plt+0x8d4c>
  40b09f:	inc    DWORD PTR [r12+0x8]
  40b0a4:	mov    QWORD PTR [r12+0x28],rax
  40b0a9:	mov    QWORD PTR [rax+0x10],0x1
  40b0b1:	mov    rdi,r15
  40b0b4:	mov    rsi,r12
  40b0b7:	lea    rdx,[rsp+0x10e0]
  40b0bf:	lea    rcx,[rsp+0x860]
  40b0c7:	lea    r8,[rsp+0x6a0]
  40b0cf:	lea    r9,[rsp+0x780]
  40b0d7:	call   402130 <Mat_VarReadData@plt>
  40b0dc:	mov    ecx,DWORD PTR [rsp+0x1c48]
  40b0e3:	mov    r8d,DWORD PTR [rsp+0x408]
  40b0eb:	mov    esi,DWORD PTR [rsp+0x1c40]
  40b0f2:	mov    r9d,DWORD PTR [rsp+0x1c44]
  40b0fa:	mov    edx,DWORD PTR [rsp+0x400]
  40b101:	mov    eax,DWORD PTR [rsp+0x404]
  40b108:	mov    edi,DWORD PTR [rsp+0x1c4c]
  40b10f:	mov    ebx,DWORD PTR [rsp+0x40c]
  40b116:	mov    DWORD PTR [rsp+0x10],ebx
  40b11a:	mov    DWORD PTR [rsp+0x8],edi
  40b11e:	mov    DWORD PTR [rsp],eax
  40b121:	lea    rdi,[rip+0x7837]        # 41295f <getopt_long_only@@Base+0x5a7f>
  40b128:	xor    eax,eax
  40b12a:	call   402160 <printf@plt>
  40b12f:	jmp    40bf1f <Mat_VarRead@plt+0x9b8f>
  40b134:	cmp    DWORD PTR [r12+0x18],0x0
  40b13a:	je     40bd61 <Mat_VarRead@plt+0x99d1>
  40b140:	lea    rax,[rsp+0x400]
  40b148:	mov    QWORD PTR [rsp+0x1c40],rax
  40b150:	lea    rax,[rsp+0x10e0]
  40b158:	mov    QWORD PTR [rsp+0x1c48],rax
  40b160:	mov    rdi,r15
  40b163:	mov    rsi,r12
  40b166:	lea    rdx,[rsp+0x1c40]
  40b16e:	lea    rcx,[rsp+0x860]
  40b176:	lea    r8,[rsp+0x6a0]
  40b17e:	lea    r9,[rsp+0x780]
  40b186:	call   402130 <Mat_VarReadData@plt>
  40b18b:	mov    rcx,QWORD PTR [rsp+0x410]
  40b193:	mov    r8,QWORD PTR [rsp+0x10f0]
  40b19b:	mov    rsi,QWORD PTR [rsp+0x400]
  40b1a3:	mov    r9,QWORD PTR [rsp+0x408]
  40b1ab:	mov    rdx,QWORD PTR [rsp+0x10e0]
  40b1b3:	mov    rax,QWORD PTR [rsp+0x10e8]
  40b1bb:	mov    rdi,QWORD PTR [rsp+0x418]
  40b1c3:	mov    rbx,QWORD PTR [rsp+0x10f8]
  40b1cb:	mov    QWORD PTR [rsp+0x10],rbx
  40b1d0:	mov    QWORD PTR [rsp+0x8],rdi
  40b1d5:	mov    QWORD PTR [rsp],rax
  40b1d9:	lea    rdi,[rip+0x76ad]        # 41288d <getopt_long_only@@Base+0x59ad>
  40b1e0:	xor    eax,eax
  40b1e2:	call   402160 <printf@plt>
  40b1e7:	cmp    DWORD PTR [r15+0x20],0x200
  40b1ef:	je     40b240 <Mat_VarRead@plt+0x8eb0>
  40b1f1:	mov    rdi,QWORD PTR [r14]
  40b1f4:	mov    esi,0x18
  40b1f9:	call   4022d0 <realloc@plt>
  40b1fe:	test   rax,rax
  40b201:	je     40b240 <Mat_VarRead@plt+0x8eb0>
  40b203:	inc    DWORD PTR [r12+0x8]
  40b208:	mov    QWORD PTR [r12+0x28],rax
  40b20d:	mov    QWORD PTR [rax+0x10],0x1
  40b215:	mov    rdi,r15
  40b218:	mov    rsi,r12
  40b21b:	lea    rdx,[rsp+0x1c40]
  40b223:	lea    rcx,[rsp+0x860]
  40b22b:	lea    r8,[rsp+0x6a0]
  40b233:	lea    r9,[rsp+0x780]
  40b23b:	call   402130 <Mat_VarReadData@plt>
  40b240:	mov    rcx,QWORD PTR [rsp+0x410]
  40b248:	mov    r8,QWORD PTR [rsp+0x10f0]
  40b250:	mov    rsi,QWORD PTR [rsp+0x400]
  40b258:	mov    r9,QWORD PTR [rsp+0x408]
  40b260:	mov    rdx,QWORD PTR [rsp+0x10e0]
  40b268:	mov    rax,QWORD PTR [rsp+0x10e8]
  40b270:	mov    rdi,QWORD PTR [rsp+0x418]
  40b278:	mov    rbx,QWORD PTR [rsp+0x10f8]
  40b280:	mov    QWORD PTR [rsp+0x10],rbx
  40b285:	mov    QWORD PTR [rsp+0x8],rdi
  40b28a:	mov    QWORD PTR [rsp],rax
  40b28e:	lea    rdi,[rip+0x75f8]        # 41288d <getopt_long_only@@Base+0x59ad>
  40b295:	jmp    40b3fb <Mat_VarRead@plt+0x906b>
  40b29a:	cmp    DWORD PTR [r12+0x18],0x0
  40b2a0:	je     40be3f <Mat_VarRead@plt+0x9aaf>
  40b2a6:	lea    rax,[rsp+0x10e0]
  40b2ae:	mov    QWORD PTR [rsp+0x400],rax
  40b2b6:	lea    rax,[rsp+0x1c40]
  40b2be:	mov    QWORD PTR [rsp+0x408],rax
  40b2c6:	mov    rdi,r15
  40b2c9:	mov    rsi,r12
  40b2cc:	lea    rdx,[rsp+0x400]
  40b2d4:	lea    rcx,[rsp+0x860]
  40b2dc:	lea    r8,[rsp+0x6a0]
  40b2e4:	lea    r9,[rsp+0x780]
  40b2ec:	call   402130 <Mat_VarReadData@plt>
  40b2f1:	mov    rcx,QWORD PTR [rsp+0x10f0]
  40b2f9:	mov    r8,QWORD PTR [rsp+0x1c50]
  40b301:	mov    rsi,QWORD PTR [rsp+0x10e0]
  40b309:	mov    r9,QWORD PTR [rsp+0x10e8]
  40b311:	mov    rdx,QWORD PTR [rsp+0x1c40]
  40b319:	mov    rax,QWORD PTR [rsp+0x1c48]
  40b321:	mov    rdi,QWORD PTR [rsp+0x10f8]
  40b329:	mov    rbx,QWORD PTR [rsp+0x1c58]
  40b331:	mov    QWORD PTR [rsp+0x10],rbx
  40b336:	mov    QWORD PTR [rsp+0x8],rdi
  40b33b:	mov    QWORD PTR [rsp],rax
  40b33f:	lea    rdi,[rip+0x7591]        # 4128d7 <getopt_long_only@@Base+0x59f7>
  40b346:	xor    eax,eax
  40b348:	call   402160 <printf@plt>
  40b34d:	cmp    DWORD PTR [r15+0x20],0x200
  40b355:	je     40b3a6 <Mat_VarRead@plt+0x9016>
  40b357:	mov    rdi,QWORD PTR [r14]
  40b35a:	mov    esi,0x18
  40b35f:	call   4022d0 <realloc@plt>
  40b364:	test   rax,rax
  40b367:	je     40b3a6 <Mat_VarRead@plt+0x9016>
  40b369:	inc    DWORD PTR [r12+0x8]
  40b36e:	mov    QWORD PTR [r12+0x28],rax
  40b373:	mov    QWORD PTR [rax+0x10],0x1
  40b37b:	mov    rdi,r15
  40b37e:	mov    rsi,r12
  40b381:	lea    rdx,[rsp+0x400]
  40b389:	lea    rcx,[rsp+0x860]
  40b391:	lea    r8,[rsp+0x6a0]
  40b399:	lea    r9,[rsp+0x780]
  40b3a1:	call   402130 <Mat_VarReadData@plt>
  40b3a6:	mov    rcx,QWORD PTR [rsp+0x10f0]
  40b3ae:	mov    r8,QWORD PTR [rsp+0x1c50]
  40b3b6:	mov    rsi,QWORD PTR [rsp+0x10e0]
  40b3be:	mov    r9,QWORD PTR [rsp+0x10e8]
  40b3c6:	mov    rdx,QWORD PTR [rsp+0x1c40]
  40b3ce:	mov    rax,QWORD PTR [rsp+0x1c48]
  40b3d6:	mov    rdi,QWORD PTR [rsp+0x10f8]
  40b3de:	mov    rbx,QWORD PTR [rsp+0x1c58]
  40b3e6:	mov    QWORD PTR [rsp+0x10],rbx
  40b3eb:	mov    QWORD PTR [rsp+0x8],rdi
  40b3f0:	mov    QWORD PTR [rsp],rax
  40b3f4:	lea    rdi,[rip+0x74dc]        # 4128d7 <getopt_long_only@@Base+0x59f7>
  40b3fb:	xor    eax,eax
  40b3fd:	call   402160 <printf@plt>
  40b402:	jmp    40bf1f <Mat_VarRead@plt+0x9b8f>
  40b407:	lea    rax,[rsp+0xc80]
  40b40f:	mov    QWORD PTR [rsp+0x120],rax
  40b417:	lea    rax,[rsp+0xf80]
  40b41f:	mov    QWORD PTR [rsp+0x128],rax
  40b427:	mov    r15d,0x7
  40b42d:	jmp    40b579 <Mat_VarRead@plt+0x91e9>
  40b432:	lea    rax,[rsp+0x180]
  40b43a:	mov    QWORD PTR [rsp+0x120],rax
  40b442:	lea    rax,[rsp+0xc0]
  40b44a:	mov    QWORD PTR [rsp+0x128],rax
  40b452:	mov    r15d,0x1
  40b458:	jmp    40b579 <Mat_VarRead@plt+0x91e9>
  40b45d:	lea    rax,[rsp+0x1a0]
  40b465:	mov    QWORD PTR [rsp+0x120],rax
  40b46d:	lea    rax,[rsp+0x140]
  40b475:	mov    QWORD PTR [rsp+0x128],rax
  40b47d:	mov    r15d,0x2
  40b483:	jmp    40b579 <Mat_VarRead@plt+0x91e9>
  40b488:	lea    rax,[rsp+0x60]
  40b48d:	mov    QWORD PTR [rsp+0x120],rax
  40b495:	lea    rax,[rsp+0x1e0]
  40b49d:	mov    QWORD PTR [rsp+0x128],rax
  40b4a5:	mov    r15d,0x3
  40b4ab:	jmp    40b579 <Mat_VarRead@plt+0x91e9>
  40b4b0:	lea    rax,[rsp+0xd60]
  40b4b8:	mov    QWORD PTR [rsp+0x120],rax
  40b4c0:	lea    rax,[rsp+0x380]
  40b4c8:	mov    QWORD PTR [rsp+0x128],rax
  40b4d0:	mov    r15d,0x4
  40b4d6:	jmp    40b579 <Mat_VarRead@plt+0x91e9>
  40b4db:	lea    rax,[rsp+0xba0]
  40b4e3:	mov    QWORD PTR [rsp+0x120],rax
  40b4eb:	lea    rax,[rsp+0x5c0]
  40b4f3:	mov    QWORD PTR [rsp+0x128],rax
  40b4fb:	mov    r15d,0x5
  40b501:	jmp    40b579 <Mat_VarRead@plt+0x91e9>
  40b503:	lea    rax,[rsp+0x6a0]
  40b50b:	mov    QWORD PTR [rsp+0x120],rax
  40b513:	lea    rax,[rsp+0x780]
  40b51b:	mov    QWORD PTR [rsp+0x128],rax
  40b523:	mov    r15d,0x6
  40b529:	jmp    40b579 <Mat_VarRead@plt+0x91e9>
  40b52b:	lea    rax,[rsp+0x860]
  40b533:	mov    QWORD PTR [rsp+0x120],rax
  40b53b:	lea    rax,[rsp+0xde0]
  40b543:	mov    QWORD PTR [rsp+0x128],rax
  40b54b:	mov    r15d,0xc
  40b551:	jmp    40b579 <Mat_VarRead@plt+0x91e9>
  40b553:	lea    rax,[rsp+0x1c40]
  40b55b:	mov    QWORD PTR [rsp+0x120],rax
  40b563:	lea    rax,[rsp+0x400]
  40b56b:	mov    QWORD PTR [rsp+0x128],rax
  40b573:	mov    r15d,0xd
  40b579:	lea    rax,[rsp+0x120]
  40b581:	mov    QWORD PTR [rsp+0x288],rax
  40b589:	mov    DWORD PTR [rsp],0x801
  40b590:	lea    rdi,[rip+0x7546]        # 412add <getopt_long_only@@Base+0x5bfd>
  40b597:	mov    esi,0x5
  40b59c:	mov    edx,r15d
  40b59f:	mov    ecx,0x2
  40b5a4:	lea    r8,[rsp+0x40]
  40b5a9:	lea    r9,[rsp+0x260]
  40b5b1:	call   4020d0 <Mat_VarCreate@plt>
  40b5b6:	test   rax,rax
  40b5b9:	je     40b616 <Mat_VarRead@plt+0x9286>
  40b5bb:	mov    rbx,rax
  40b5be:	mov    r9,QWORD PTR [rax+0x38]
  40b5c2:	mov    DWORD PTR [rsp],0x800
  40b5c9:	lea    rdi,[rip+0x750d]        # 412add <getopt_long_only@@Base+0x5bfd>
  40b5d0:	mov    esi,0x5
  40b5d5:	mov    edx,r15d
  40b5d8:	mov    ecx,0x2
  40b5dd:	lea    r8,[rsp+0x40]
  40b5e2:	call   4020d0 <Mat_VarCreate@plt>
  40b5e7:	mov    r15,rax
  40b5ea:	mov    rdi,rbx
  40b5ed:	call   402240 <Mat_VarFree@plt>
  40b5f2:	test   r15,r15
  40b5f5:	je     40b616 <Mat_VarRead@plt+0x9286>
  40b5f7:	movzx  edx,BYTE PTR [rip+0xae5e]        # 41645c <optopt@@Base+0x24>
  40b5fe:	mov    rdi,r14
  40b601:	mov    rsi,r15
  40b604:	call   4020f0 <Mat_VarWrite@plt>
  40b609:	mov    rdi,r15
  40b60c:	call   402240 <Mat_VarFree@plt>
  40b611:	xor    r12d,r12d
  40b614:	jmp    40b624 <Mat_VarRead@plt+0x9294>
  40b616:	lea    rdi,[rip+0x7500]        # 412b1d <getopt_long_only@@Base+0x5c3d>
  40b61d:	xor    eax,eax
  40b61f:	call   4022b0 <Mat_Critical@plt>
  40b624:	mov    rdi,r14
  40b627:	call   4022a0 <Mat_Close@plt>
  40b62c:	mov    r15,QWORD PTR [rsp+0x50]
  40b631:	inc    r15d
  40b634:	add    DWORD PTR [rsp+0x3c],r12d
  40b639:	jmp    406b94 <Mat_VarRead@plt+0x4804>
  40b63e:	mov    rdi,r15
  40b641:	mov    rsi,r12
  40b644:	lea    rdx,[rsp+0x10e0]
  40b64c:	lea    rcx,[rsp+0x860]
  40b654:	lea    r8,[rsp+0x6a0]
  40b65c:	lea    r9,[rsp+0x780]
  40b664:	call   402130 <Mat_VarReadData@plt>
  40b669:	vmovsd xmm1,QWORD PTR [rsp+0x10f0]
  40b672:	vmovsd xmm0,QWORD PTR [rsp+0x10e0]
  40b67b:	vmovsd xmm2,QWORD PTR [rsp+0x10e8]
  40b684:	vmovsd xmm3,QWORD PTR [rsp+0x10f8]
  40b68d:	lea    rdi,[rip+0x71e6]        # 41287a <getopt_long_only@@Base+0x599a>
  40b694:	mov    al,0x4
  40b696:	call   402160 <printf@plt>
  40b69b:	cmp    DWORD PTR [r15+0x20],0x200
  40b6a3:	je     40b6f4 <Mat_VarRead@plt+0x9364>
  40b6a5:	mov    rdi,QWORD PTR [r14]
  40b6a8:	mov    esi,0x18
  40b6ad:	call   4022d0 <realloc@plt>
  40b6b2:	test   rax,rax
  40b6b5:	je     40b6f4 <Mat_VarRead@plt+0x9364>
  40b6b7:	inc    DWORD PTR [r12+0x8]
  40b6bc:	mov    QWORD PTR [r12+0x28],rax
  40b6c1:	mov    QWORD PTR [rax+0x10],0x1
  40b6c9:	mov    rdi,r15
  40b6cc:	mov    rsi,r12
  40b6cf:	lea    rdx,[rsp+0x10e0]
  40b6d7:	lea    rcx,[rsp+0x860]
  40b6df:	lea    r8,[rsp+0x6a0]
  40b6e7:	lea    r9,[rsp+0x780]
  40b6ef:	call   402130 <Mat_VarReadData@plt>
  40b6f4:	vmovq  xmm1,QWORD PTR [rsp+0x10f0]
  40b6fd:	vmovq  xmm0,QWORD PTR [rsp+0x10e0]
  40b706:	vmovq  xmm2,QWORD PTR [rsp+0x10e8]
  40b70f:	vmovq  xmm3,QWORD PTR [rsp+0x10f8]
  40b718:	jmp    40b817 <Mat_VarRead@plt+0x9487>
  40b71d:	mov    rdi,r15
  40b720:	mov    rsi,r12
  40b723:	lea    rdx,[rsp+0x10e0]
  40b72b:	lea    rcx,[rsp+0x860]
  40b733:	lea    r8,[rsp+0x6a0]
  40b73b:	lea    r9,[rsp+0x780]
  40b743:	call   402130 <Mat_VarReadData@plt>
  40b748:	vmovss xmm0,DWORD PTR [rsp+0x10e0]
  40b751:	vcvtss2sd xmm0,xmm0,xmm0
  40b755:	vmovss xmm1,DWORD PTR [rsp+0x10e8]
  40b75e:	vcvtss2sd xmm1,xmm1,xmm1
  40b762:	vmovss xmm2,DWORD PTR [rsp+0x10e4]
  40b76b:	vcvtss2sd xmm2,xmm2,xmm2
  40b76f:	vmovss xmm3,DWORD PTR [rsp+0x10ec]
  40b778:	vcvtss2sd xmm3,xmm3,xmm3
  40b77c:	lea    rdi,[rip+0x70f7]        # 41287a <getopt_long_only@@Base+0x599a>
  40b783:	mov    al,0x4
  40b785:	call   402160 <printf@plt>
  40b78a:	cmp    DWORD PTR [r15+0x20],0x200
  40b792:	je     40b7e3 <Mat_VarRead@plt+0x9453>
  40b794:	mov    rdi,QWORD PTR [r14]
  40b797:	mov    esi,0x18
  40b79c:	call   4022d0 <realloc@plt>
  40b7a1:	test   rax,rax
  40b7a4:	je     40b7e3 <Mat_VarRead@plt+0x9453>
  40b7a6:	inc    DWORD PTR [r12+0x8]
  40b7ab:	mov    QWORD PTR [r12+0x28],rax
  40b7b0:	mov    QWORD PTR [rax+0x10],0x1
  40b7b8:	mov    rdi,r15
  40b7bb:	mov    rsi,r12
  40b7be:	lea    rdx,[rsp+0x10e0]
  40b7c6:	lea    rcx,[rsp+0x860]
  40b7ce:	lea    r8,[rsp+0x6a0]
  40b7d6:	lea    r9,[rsp+0x780]
  40b7de:	call   402130 <Mat_VarReadData@plt>
  40b7e3:	vmovss xmm0,DWORD PTR [rsp+0x10e0]
  40b7ec:	vcvtss2sd xmm0,xmm0,xmm0
  40b7f0:	vmovss xmm1,DWORD PTR [rsp+0x10e8]
  40b7f9:	vcvtss2sd xmm1,xmm1,xmm1
  40b7fd:	vmovss xmm2,DWORD PTR [rsp+0x10e4]
  40b806:	vcvtss2sd xmm2,xmm2,xmm2
  40b80a:	vmovss xmm3,DWORD PTR [rsp+0x10ec]
  40b813:	vcvtss2sd xmm3,xmm3,xmm3
  40b817:	lea    rdi,[rip+0x705c]        # 41287a <getopt_long_only@@Base+0x599a>
  40b81e:	mov    al,0x4
  40b820:	call   402160 <printf@plt>
  40b825:	jmp    40bf1f <Mat_VarRead@plt+0x9b8f>
  40b82a:	mov    rdi,r15
  40b82d:	mov    rsi,r12
  40b830:	lea    rdx,[rsp+0x10e0]
  40b838:	lea    rcx,[rsp+0x860]
  40b840:	lea    r8,[rsp+0x6a0]
  40b848:	lea    r9,[rsp+0x780]
  40b850:	call   402130 <Mat_VarReadData@plt>
  40b855:	movsx  esi,BYTE PTR [rsp+0x10e0]
  40b85d:	movsx  edx,BYTE PTR [rsp+0x10e2]
  40b865:	movsx  ecx,BYTE PTR [rsp+0x10e1]
  40b86d:	movsx  r8d,BYTE PTR [rsp+0x10e3]
  40b876:	lea    rdi,[rip+0x71ef]        # 412a6c <getopt_long_only@@Base+0x5b8c>
  40b87d:	xor    eax,eax
  40b87f:	call   402160 <printf@plt>
  40b884:	cmp    DWORD PTR [r15+0x20],0x200
  40b88c:	je     40b8dd <Mat_VarRead@plt+0x954d>
  40b88e:	mov    rdi,QWORD PTR [r14]
  40b891:	mov    esi,0x18
  40b896:	call   4022d0 <realloc@plt>
  40b89b:	test   rax,rax
  40b89e:	je     40b8dd <Mat_VarRead@plt+0x954d>
  40b8a0:	inc    DWORD PTR [r12+0x8]
  40b8a5:	mov    QWORD PTR [r12+0x28],rax
  40b8aa:	mov    QWORD PTR [rax+0x10],0x1
  40b8b2:	mov    rdi,r15
  40b8b5:	mov    rsi,r12
  40b8b8:	lea    rdx,[rsp+0x10e0]
  40b8c0:	lea    rcx,[rsp+0x860]
  40b8c8:	lea    r8,[rsp+0x6a0]
  40b8d0:	lea    r9,[rsp+0x780]
  40b8d8:	call   402130 <Mat_VarReadData@plt>
  40b8dd:	movsx  esi,BYTE PTR [rsp+0x10e0]
  40b8e5:	movsx  edx,BYTE PTR [rsp+0x10e2]
  40b8ed:	movsx  ecx,BYTE PTR [rsp+0x10e1]
  40b8f5:	movsx  r8d,BYTE PTR [rsp+0x10e3]
  40b8fe:	lea    rdi,[rip+0x7167]        # 412a6c <getopt_long_only@@Base+0x5b8c>
  40b905:	jmp    40bd55 <Mat_VarRead@plt+0x99c5>
  40b90a:	mov    rdi,r15
  40b90d:	mov    rsi,r12
  40b910:	lea    rdx,[rsp+0x10e0]
  40b918:	lea    rcx,[rsp+0x860]
  40b920:	lea    r8,[rsp+0x6a0]
  40b928:	lea    r9,[rsp+0x780]
  40b930:	call   402130 <Mat_VarReadData@plt>
  40b935:	movzx  esi,BYTE PTR [rsp+0x10e0]
  40b93d:	movzx  edx,BYTE PTR [rsp+0x10e2]
  40b945:	movzx  ecx,BYTE PTR [rsp+0x10e1]
  40b94d:	movzx  r8d,BYTE PTR [rsp+0x10e3]
  40b956:	lea    rdi,[rip+0x7165]        # 412ac2 <getopt_long_only@@Base+0x5be2>
  40b95d:	xor    eax,eax
  40b95f:	call   402160 <printf@plt>
  40b964:	cmp    DWORD PTR [r15+0x20],0x200
  40b96c:	je     40b9bd <Mat_VarRead@plt+0x962d>
  40b96e:	mov    rdi,QWORD PTR [r14]
  40b971:	mov    esi,0x18
  40b976:	call   4022d0 <realloc@plt>
  40b97b:	test   rax,rax
  40b97e:	je     40b9bd <Mat_VarRead@plt+0x962d>
  40b980:	inc    DWORD PTR [r12+0x8]
  40b985:	mov    QWORD PTR [r12+0x28],rax
  40b98a:	mov    QWORD PTR [rax+0x10],0x1
  40b992:	mov    rdi,r15
  40b995:	mov    rsi,r12
  40b998:	lea    rdx,[rsp+0x10e0]
  40b9a0:	lea    rcx,[rsp+0x860]
  40b9a8:	lea    r8,[rsp+0x6a0]
  40b9b0:	lea    r9,[rsp+0x780]
  40b9b8:	call   402130 <Mat_VarReadData@plt>
  40b9bd:	movzx  esi,BYTE PTR [rsp+0x10e0]
  40b9c5:	movzx  edx,BYTE PTR [rsp+0x10e2]
  40b9cd:	movzx  ecx,BYTE PTR [rsp+0x10e1]
  40b9d5:	movzx  r8d,BYTE PTR [rsp+0x10e3]
  40b9de:	lea    rdi,[rip+0x70dd]        # 412ac2 <getopt_long_only@@Base+0x5be2>
  40b9e5:	jmp    40bd55 <Mat_VarRead@plt+0x99c5>
  40b9ea:	mov    rdi,r15
  40b9ed:	mov    rsi,r12
  40b9f0:	lea    rdx,[rsp+0x10e0]
  40b9f8:	lea    rcx,[rsp+0x860]
  40ba00:	lea    r8,[rsp+0x6a0]
  40ba08:	lea    r9,[rsp+0x780]
  40ba10:	call   402130 <Mat_VarReadData@plt>
  40ba15:	movsx  esi,WORD PTR [rsp+0x10e0]
  40ba1d:	movsx  edx,WORD PTR [rsp+0x10e4]
  40ba25:	movsx  ecx,WORD PTR [rsp+0x10e2]
  40ba2d:	movsx  r8d,WORD PTR [rsp+0x10e6]
  40ba36:	lea    rdi,[rip+0x6f93]        # 4129d0 <getopt_long_only@@Base+0x5af0>
  40ba3d:	xor    eax,eax
  40ba3f:	call   402160 <printf@plt>
  40ba44:	cmp    DWORD PTR [r15+0x20],0x200
  40ba4c:	je     40ba9d <Mat_VarRead@plt+0x970d>
  40ba4e:	mov    rdi,QWORD PTR [r14]
  40ba51:	mov    esi,0x18
  40ba56:	call   4022d0 <realloc@plt>
  40ba5b:	test   rax,rax
  40ba5e:	je     40ba9d <Mat_VarRead@plt+0x970d>
  40ba60:	inc    DWORD PTR [r12+0x8]
  40ba65:	mov    QWORD PTR [r12+0x28],rax
  40ba6a:	mov    QWORD PTR [rax+0x10],0x1
  40ba72:	mov    rdi,r15
  40ba75:	mov    rsi,r12
  40ba78:	lea    rdx,[rsp+0x10e0]
  40ba80:	lea    rcx,[rsp+0x860]
  40ba88:	lea    r8,[rsp+0x6a0]
  40ba90:	lea    r9,[rsp+0x780]
  40ba98:	call   402130 <Mat_VarReadData@plt>
  40ba9d:	movsx  esi,WORD PTR [rsp+0x10e0]
  40baa5:	movsx  edx,WORD PTR [rsp+0x10e4]
  40baad:	movsx  ecx,WORD PTR [rsp+0x10e2]
  40bab5:	movsx  r8d,WORD PTR [rsp+0x10e6]
  40babe:	lea    rdi,[rip+0x6f0b]        # 4129d0 <getopt_long_only@@Base+0x5af0>
  40bac5:	jmp    40bd55 <Mat_VarRead@plt+0x99c5>
  40baca:	mov    rdi,r15
  40bacd:	mov    rsi,r12
  40bad0:	lea    rdx,[rsp+0x10e0]
  40bad8:	lea    rcx,[rsp+0x860]
  40bae0:	lea    r8,[rsp+0x6a0]
  40bae8:	lea    r9,[rsp+0x780]
  40baf0:	call   402130 <Mat_VarReadData@plt>
  40baf5:	movzx  esi,WORD PTR [rsp+0x10e0]
  40bafd:	movzx  edx,WORD PTR [rsp+0x10e4]
  40bb05:	movzx  ecx,WORD PTR [rsp+0x10e2]
  40bb0d:	movzx  r8d,WORD PTR [rsp+0x10e6]
  40bb16:	lea    rdi,[rip+0x6efd]        # 412a1a <getopt_long_only@@Base+0x5b3a>
  40bb1d:	xor    eax,eax
  40bb1f:	call   402160 <printf@plt>
  40bb24:	cmp    DWORD PTR [r15+0x20],0x200
  40bb2c:	je     40bb7d <Mat_VarRead@plt+0x97ed>
  40bb2e:	mov    rdi,QWORD PTR [r14]
  40bb31:	mov    esi,0x18
  40bb36:	call   4022d0 <realloc@plt>
  40bb3b:	test   rax,rax
  40bb3e:	je     40bb7d <Mat_VarRead@plt+0x97ed>
  40bb40:	inc    DWORD PTR [r12+0x8]
  40bb45:	mov    QWORD PTR [r12+0x28],rax
  40bb4a:	mov    QWORD PTR [rax+0x10],0x1
  40bb52:	mov    rdi,r15
  40bb55:	mov    rsi,r12
  40bb58:	lea    rdx,[rsp+0x10e0]
  40bb60:	lea    rcx,[rsp+0x860]
  40bb68:	lea    r8,[rsp+0x6a0]
  40bb70:	lea    r9,[rsp+0x780]
  40bb78:	call   402130 <Mat_VarReadData@plt>
  40bb7d:	movzx  esi,WORD PTR [rsp+0x10e0]
  40bb85:	movzx  edx,WORD PTR [rsp+0x10e4]
  40bb8d:	movzx  ecx,WORD PTR [rsp+0x10e2]
  40bb95:	movzx  r8d,WORD PTR [rsp+0x10e6]
  40bb9e:	lea    rdi,[rip+0x6e75]        # 412a1a <getopt_long_only@@Base+0x5b3a>
  40bba5:	jmp    40bd55 <Mat_VarRead@plt+0x99c5>
  40bbaa:	mov    rdi,r15
  40bbad:	mov    rsi,r12
  40bbb0:	lea    rdx,[rsp+0xf80]
  40bbb8:	lea    rcx,[rsp+0x860]
  40bbc0:	lea    r8,[rsp+0x6a0]
  40bbc8:	lea    r9,[rsp+0x780]
  40bbd0:	call   402130 <Mat_VarReadData@plt>
  40bbd5:	mov    edx,DWORD PTR [rsp+0xf88]
  40bbdc:	mov    esi,DWORD PTR [rsp+0xf80]
  40bbe3:	mov    ecx,DWORD PTR [rsp+0xf84]
  40bbea:	mov    r8d,DWORD PTR [rsp+0xf8c]
  40bbf2:	lea    rdi,[rip+0x6d53]        # 41294c <getopt_long_only@@Base+0x5a6c>
  40bbf9:	xor    eax,eax
  40bbfb:	call   402160 <printf@plt>
  40bc00:	cmp    DWORD PTR [r15+0x20],0x200
  40bc08:	je     40bc59 <Mat_VarRead@plt+0x98c9>
  40bc0a:	mov    rdi,QWORD PTR [r14]
  40bc0d:	mov    esi,0x18
  40bc12:	call   4022d0 <realloc@plt>
  40bc17:	test   rax,rax
  40bc1a:	je     40bc59 <Mat_VarRead@plt+0x98c9>
  40bc1c:	inc    DWORD PTR [r12+0x8]
  40bc21:	mov    QWORD PTR [r12+0x28],rax
  40bc26:	mov    QWORD PTR [rax+0x10],0x1
  40bc2e:	mov    rdi,r15
  40bc31:	mov    rsi,r12
  40bc34:	lea    rdx,[rsp+0xf80]
  40bc3c:	lea    rcx,[rsp+0x860]
  40bc44:	lea    r8,[rsp+0x6a0]
  40bc4c:	lea    r9,[rsp+0x780]
  40bc54:	call   402130 <Mat_VarReadData@plt>
  40bc59:	mov    edx,DWORD PTR [rsp+0xf88]
  40bc60:	mov    esi,DWORD PTR [rsp+0xf80]
  40bc67:	mov    ecx,DWORD PTR [rsp+0xf84]
  40bc6e:	mov    r8d,DWORD PTR [rsp+0xf8c]
  40bc76:	lea    rdi,[rip+0x6ccf]        # 41294c <getopt_long_only@@Base+0x5a6c>
  40bc7d:	jmp    40bd55 <Mat_VarRead@plt+0x99c5>
  40bc82:	mov    rdi,r15
  40bc85:	mov    rsi,r12
  40bc88:	lea    rdx,[rsp+0x10e0]
  40bc90:	lea    rcx,[rsp+0x860]
  40bc98:	lea    r8,[rsp+0x6a0]
  40bca0:	lea    r9,[rsp+0x780]
  40bca8:	call   402130 <Mat_VarReadData@plt>
  40bcad:	mov    edx,DWORD PTR [rsp+0x10e8]
  40bcb4:	mov    esi,DWORD PTR [rsp+0x10e0]
  40bcbb:	mov    ecx,DWORD PTR [rsp+0x10e4]
  40bcc2:	mov    r8d,DWORD PTR [rsp+0x10ec]
  40bcca:	lea    rdi,[rip+0x6cb9]        # 41298a <getopt_long_only@@Base+0x5aaa>
  40bcd1:	xor    eax,eax
  40bcd3:	call   402160 <printf@plt>
  40bcd8:	cmp    DWORD PTR [r15+0x20],0x200
  40bce0:	je     40bd31 <Mat_VarRead@plt+0x99a1>
  40bce2:	mov    rdi,QWORD PTR [r14]
  40bce5:	mov    esi,0x18
  40bcea:	call   4022d0 <realloc@plt>
  40bcef:	test   rax,rax
  40bcf2:	je     40bd31 <Mat_VarRead@plt+0x99a1>
  40bcf4:	inc    DWORD PTR [r12+0x8]
  40bcf9:	mov    QWORD PTR [r12+0x28],rax
  40bcfe:	mov    QWORD PTR [rax+0x10],0x1
  40bd06:	mov    rdi,r15
  40bd09:	mov    rsi,r12
  40bd0c:	lea    rdx,[rsp+0x10e0]
  40bd14:	lea    rcx,[rsp+0x860]
  40bd1c:	lea    r8,[rsp+0x6a0]
  40bd24:	lea    r9,[rsp+0x780]
  40bd2c:	call   402130 <Mat_VarReadData@plt>
  40bd31:	mov    edx,DWORD PTR [rsp+0x10e8]
  40bd38:	mov    esi,DWORD PTR [rsp+0x10e0]
  40bd3f:	mov    ecx,DWORD PTR [rsp+0x10e4]
  40bd46:	mov    r8d,DWORD PTR [rsp+0x10ec]
  40bd4e:	lea    rdi,[rip+0x6c35]        # 41298a <getopt_long_only@@Base+0x5aaa>
  40bd55:	xor    eax,eax
  40bd57:	call   402160 <printf@plt>
  40bd5c:	jmp    40bf1f <Mat_VarRead@plt+0x9b8f>
  40bd61:	mov    rdi,r15
  40bd64:	mov    rsi,r12
  40bd67:	lea    rdx,[rsp+0x10e0]
  40bd6f:	lea    rcx,[rsp+0x860]
  40bd77:	lea    r8,[rsp+0x6a0]
  40bd7f:	lea    r9,[rsp+0x780]
  40bd87:	call   402130 <Mat_VarReadData@plt>
  40bd8c:	mov    rdx,QWORD PTR [rsp+0x10f0]
  40bd94:	mov    rsi,QWORD PTR [rsp+0x10e0]
  40bd9c:	mov    rcx,QWORD PTR [rsp+0x10e8]
  40bda4:	mov    r8,QWORD PTR [rsp+0x10f8]
  40bdac:	lea    rdi,[rip+0x6b0d]        # 4128c0 <getopt_long_only@@Base+0x59e0>
  40bdb3:	xor    eax,eax
  40bdb5:	call   402160 <printf@plt>
  40bdba:	cmp    DWORD PTR [r15+0x20],0x200
  40bdc2:	je     40be13 <Mat_VarRead@plt+0x9a83>
  40bdc4:	mov    rdi,QWORD PTR [r14]
  40bdc7:	mov    esi,0x18
  40bdcc:	call   4022d0 <realloc@plt>
  40bdd1:	test   rax,rax
  40bdd4:	je     40be13 <Mat_VarRead@plt+0x9a83>
  40bdd6:	inc    DWORD PTR [r12+0x8]
  40bddb:	mov    QWORD PTR [r12+0x28],rax
  40bde0:	mov    QWORD PTR [rax+0x10],0x1
  40bde8:	mov    rdi,r15
  40bdeb:	mov    rsi,r12
  40bdee:	lea    rdx,[rsp+0x10e0]
  40bdf6:	lea    rcx,[rsp+0x860]
  40bdfe:	lea    r8,[rsp+0x6a0]
  40be06:	lea    r9,[rsp+0x780]
  40be0e:	call   402130 <Mat_VarReadData@plt>
  40be13:	mov    rdx,QWORD PTR [rsp+0x10f0]
  40be1b:	mov    rsi,QWORD PTR [rsp+0x10e0]
  40be23:	mov    rcx,QWORD PTR [rsp+0x10e8]
  40be2b:	mov    r8,QWORD PTR [rsp+0x10f8]
  40be33:	lea    rdi,[rip+0x6a86]        # 4128c0 <getopt_long_only@@Base+0x59e0>
  40be3a:	jmp    40bf18 <Mat_VarRead@plt+0x9b88>
  40be3f:	mov    rdi,r15
  40be42:	mov    rsi,r12
  40be45:	lea    rdx,[rsp+0x10e0]
  40be4d:	lea    rcx,[rsp+0x860]
  40be55:	lea    r8,[rsp+0x6a0]
  40be5d:	lea    r9,[rsp+0x780]
  40be65:	call   402130 <Mat_VarReadData@plt>
  40be6a:	mov    rdx,QWORD PTR [rsp+0x10f0]
  40be72:	mov    rsi,QWORD PTR [rsp+0x10e0]
  40be7a:	mov    rcx,QWORD PTR [rsp+0x10e8]
  40be82:	mov    r8,QWORD PTR [rsp+0x10f8]
  40be8a:	lea    rdi,[rip+0x6a79]        # 41290a <getopt_long_only@@Base+0x5a2a>
  40be91:	xor    eax,eax
  40be93:	call   402160 <printf@plt>
  40be98:	cmp    DWORD PTR [r15+0x20],0x200
  40bea0:	je     40bef1 <Mat_VarRead@plt+0x9b61>
  40bea2:	mov    rdi,QWORD PTR [r14]
  40bea5:	mov    esi,0x18
  40beaa:	call   4022d0 <realloc@plt>
  40beaf:	test   rax,rax
  40beb2:	je     40bef1 <Mat_VarRead@plt+0x9b61>
  40beb4:	inc    DWORD PTR [r12+0x8]
  40beb9:	mov    QWORD PTR [r12+0x28],rax
  40bebe:	mov    QWORD PTR [rax+0x10],0x1
  40bec6:	mov    rdi,r15
  40bec9:	mov    rsi,r12
  40becc:	lea    rdx,[rsp+0x10e0]
  40bed4:	lea    rcx,[rsp+0x860]
  40bedc:	lea    r8,[rsp+0x6a0]
  40bee4:	lea    r9,[rsp+0x780]
  40beec:	call   402130 <Mat_VarReadData@plt>
  40bef1:	mov    rdx,QWORD PTR [rsp+0x10f0]
  40bef9:	mov    rsi,QWORD PTR [rsp+0x10e0]
  40bf01:	mov    rcx,QWORD PTR [rsp+0x10e8]
  40bf09:	mov    r8,QWORD PTR [rsp+0x10f8]
  40bf11:	lea    rdi,[rip+0x69f2]        # 41290a <getopt_long_only@@Base+0x5a2a>
  40bf18:	xor    eax,eax
  40bf1a:	call   402160 <printf@plt>
  40bf1f:	mov    rdi,r12
  40bf22:	call   402240 <Mat_VarFree@plt>
  40bf27:	mov    rdi,r15
  40bf2a:	call   4022a0 <Mat_Close@plt>
  40bf2f:	mov    r15,QWORD PTR [rsp+0x50]
  40bf34:	add    r15d,0x3
  40bf38:	jmp    406b94 <Mat_VarRead@plt+0x4804>
  40bf3d:	mov    rax,QWORD PTR [rip+0x90b4]        # 414ff8 <getopt_long_only@@Base+0x8118>
  40bf44:	mov    rdi,QWORD PTR [rax]
  40bf47:	lea    rsi,[rip+0x688b]        # 4127d9 <getopt_long_only@@Base+0x58f9>
  40bf4e:	mov    rdx,QWORD PTR [rsp+0x28]
  40bf53:	xor    eax,eax
  40bf55:	call   402220 <fprintf@plt>
  40bf5a:	jmp    40a490 <Mat_VarRead@plt+0x8100>
  40bf5f:	mov    rax,QWORD PTR [rip+0x9092]        # 414ff8 <getopt_long_only@@Base+0x8118>
  40bf66:	mov    rdi,QWORD PTR [rax]
  40bf69:	lea    rsi,[rip+0x6869]        # 4127d9 <getopt_long_only@@Base+0x58f9>
  40bf70:	mov    rdx,QWORD PTR [rsp+0x28]
  40bf75:	xor    eax,eax
  40bf77:	call   402220 <fprintf@plt>
  40bf7c:	jmp    40a56a <Mat_VarRead@plt+0x81da>
  40bf81:	mov    rax,QWORD PTR [rip+0x9070]        # 414ff8 <getopt_long_only@@Base+0x8118>
  40bf88:	mov    rcx,QWORD PTR [rax]
  40bf8b:	lea    rdi,[rip+0x2f17]        # 40eea9 <getopt_long_only@@Base+0x1fc9>
  40bf92:	mov    esi,0x37
  40bf97:	mov    edx,0x1
  40bf9c:	call   402350 <fwrite@plt>
  40bfa1:	mov    DWORD PTR [rsp+0x3c],0x1
  40bfa9:	mov    eax,DWORD PTR [rsp+0x3c]
  40bfad:	lea    rsp,[rbp-0x28]
  40bfb1:	pop    rbx
  40bfb2:	pop    r12
  40bfb4:	pop    r13
  40bfb6:	pop    r14
  40bfb8:	pop    r15
  40bfba:	pop    rbp
  40bfbb:	vzeroupper 
  40bfbe:	ret    
  40bfbf:	lea    rdi,[rip+0x3364]        # 40f32a <getopt_long_only@@Base+0x244a>
  40bfc6:	mov    rsi,r14
  40bfc9:	xor    eax,eax
  40bfcb:	call   4022b0 <Mat_Critical@plt>
  40bfd0:	jmp    40bfa9 <Mat_VarRead@plt+0x9c19>
  40bfd2:	lea    rdi,[rip+0x9357]        # 415330 <getopt_long_only@@Base+0x8450>
  40bfd9:	jmp    40bfe2 <Mat_VarRead@plt+0x9c52>
  40bfdb:	lea    rdi,[rip+0x944e]        # 415430 <getopt_long_only@@Base+0x8550>
  40bfe2:	call   402330 <Mat_Help@plt>
  40bfe7:	xor    edi,edi
  40bfe9:	call   402340 <exit@plt>
  40bfee:	lea    rax,[rip+0xa473]        # 416468 <optarg@@Base>
  40bff5:	mov    rdi,QWORD PTR [rax]
  40bff8:	call   40c080 <Mat_VarRead@plt+0x9cf0>
  40bffd:	xor    edi,edi
  40bfff:	call   402340 <exit@plt>
  40c004:	lea    rdi,[rip+0x2f4c]        # 40ef57 <getopt_long_only@@Base+0x2077>
  40c00b:	lea    rsi,[rip+0x2e8e]        # 40eea0 <getopt_long_only@@Base+0x1fc0>
  40c012:	lea    rdx,[rip+0x2f94]        # 40efad <getopt_long_only@@Base+0x20cd>
  40c019:	xor    eax,eax
  40c01b:	call   402160 <printf@plt>
  40c020:	xor    edi,edi
  40c022:	call   402340 <exit@plt>
  40c027:	mov    edi,0x1
  40c02c:	call   402340 <exit@plt>
  40c031:	mov    rax,QWORD PTR [rip+0x8fc0]        # 414ff8 <getopt_long_only@@Base+0x8118>
  40c038:	mov    rdi,QWORD PTR [rax]
  40c03b:	lea    rsi,[rip+0x2ecb]        # 40ef0d <getopt_long_only@@Base+0x202d>
  40c042:	mov    rdx,r13
  40c045:	jmp    40c061 <Mat_VarRead@plt+0x9cd1>
  40c047:	mov    rax,QWORD PTR [rip+0x8faa]        # 414ff8 <getopt_long_only@@Base+0x8118>
  40c04e:	mov    rdi,QWORD PTR [rax]
  40c051:	mov    rax,QWORD PTR [rsp+0x30]
  40c056:	mov    rdx,QWORD PTR [rax+0x10]
  40c05a:	lea    rsi,[rip+0x2ed5]        # 40ef36 <getopt_long_only@@Base+0x2056>
  40c061:	xor    eax,eax
  40c063:	call   402220 <fprintf@plt>
  40c068:	mov    edi,0x1
  40c06d:	call   402340 <exit@plt>
  40c072:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40c07c:	nop    DWORD PTR [rax+0x0]
  40c080:	push   rbx
  40c081:	mov    rbx,rdi
  40c084:	lea    rsi,[rip+0x423a]        # 4102c5 <getopt_long_only@@Base+0x33e5>
  40c08b:	call   402210 <strcmp@plt>
  40c090:	test   eax,eax
  40c092:	jne    40c0a0 <Mat_VarRead@plt+0x9d10>
  40c094:	lea    rdi,[rip+0x9605]        # 4156a0 <getopt_long_only@@Base+0x87c0>
  40c09b:	call   402330 <Mat_Help@plt>
  40c0a0:	lea    rsi,[rip+0x4264]        # 41030b <getopt_long_only@@Base+0x342b>
  40c0a7:	mov    rdi,rbx
  40c0aa:	call   402210 <strcmp@plt>
  40c0af:	test   eax,eax
  40c0b1:	jne    40c0bf <Mat_VarRead@plt+0x9d2f>
  40c0b3:	lea    rdi,[rip+0x9626]        # 4156e0 <getopt_long_only@@Base+0x8800>
  40c0ba:	call   402330 <Mat_Help@plt>
  40c0bf:	lea    rsi,[rip+0x429c]        # 410362 <getopt_long_only@@Base+0x3482>
  40c0c6:	mov    rdi,rbx
  40c0c9:	call   402210 <strcmp@plt>
  40c0ce:	test   eax,eax
  40c0d0:	je     40c339 <Mat_VarRead@plt+0x9fa9>
  40c0d6:	lea    rsi,[rip+0x42d8]        # 4103b5 <getopt_long_only@@Base+0x34d5>
  40c0dd:	mov    rdi,rbx
  40c0e0:	call   402210 <strcmp@plt>
  40c0e5:	test   eax,eax
  40c0e7:	je     40c346 <Mat_VarRead@plt+0x9fb6>
  40c0ed:	lea    rsi,[rip+0x435b]        # 41044f <getopt_long_only@@Base+0x356f>
  40c0f4:	mov    rdi,rbx
  40c0f7:	call   402210 <strcmp@plt>
  40c0fc:	test   eax,eax
  40c0fe:	je     40c353 <Mat_VarRead@plt+0x9fc3>
  40c104:	lea    rsi,[rip+0x43c5]        # 4104d0 <getopt_long_only@@Base+0x35f0>
  40c10b:	mov    rdi,rbx
  40c10e:	call   402210 <strcmp@plt>
  40c113:	test   eax,eax
  40c115:	je     40c360 <Mat_VarRead@plt+0x9fd0>
  40c11b:	lea    rsi,[rip+0x4479]        # 41059b <getopt_long_only@@Base+0x36bb>
  40c122:	mov    rdi,rbx
  40c125:	call   402210 <strcmp@plt>
  40c12a:	test   eax,eax
  40c12c:	je     40c36d <Mat_VarRead@plt+0x9fdd>
  40c132:	lea    rsi,[rip+0x46a3]        # 4107dc <getopt_long_only@@Base+0x38fc>
  40c139:	mov    rdi,rbx
  40c13c:	call   402210 <strcmp@plt>
  40c141:	test   eax,eax
  40c143:	je     40c37a <Mat_VarRead@plt+0x9fea>
  40c149:	lea    rsi,[rip+0x4938]        # 410a88 <getopt_long_only@@Base+0x3ba8>
  40c150:	mov    rdi,rbx
  40c153:	call   402210 <strcmp@plt>
  40c158:	test   eax,eax
  40c15a:	je     40c387 <Mat_VarRead@plt+0x9ff7>
  40c160:	lea    rsi,[rip+0x4b8c]        # 410cf3 <getopt_long_only@@Base+0x3e13>
  40c167:	mov    rdi,rbx
  40c16a:	call   402210 <strcmp@plt>
  40c16f:	test   eax,eax
  40c171:	je     40c394 <Mat_VarRead@plt+0xa004>
  40c177:	lea    rsi,[rip+0x4db5]        # 410f33 <getopt_long_only@@Base+0x4053>
  40c17e:	mov    rdi,rbx
  40c181:	call   402210 <strcmp@plt>
  40c186:	test   eax,eax
  40c188:	je     40c3a1 <Mat_VarRead@plt+0xa011>
  40c18e:	lea    rsi,[rip+0x4e6a]        # 410fff <getopt_long_only@@Base+0x411f>
  40c195:	mov    rdi,rbx
  40c198:	call   402210 <strcmp@plt>
  40c19d:	test   eax,eax
  40c19f:	je     40c3ae <Mat_VarRead@plt+0xa01e>
  40c1a5:	lea    rsi,[rip+0x4fc1]        # 41116d <getopt_long_only@@Base+0x428d>
  40c1ac:	mov    rdi,rbx
  40c1af:	call   402210 <strcmp@plt>
  40c1b4:	test   eax,eax
  40c1b6:	je     40c3bb <Mat_VarRead@plt+0xa02b>
  40c1bc:	lea    rsi,[rip+0x50d3]        # 411296 <getopt_long_only@@Base+0x43b6>
  40c1c3:	mov    rdi,rbx
  40c1c6:	call   402210 <strcmp@plt>
  40c1cb:	test   eax,eax
  40c1cd:	je     40c3c8 <Mat_VarRead@plt+0xa038>
  40c1d3:	lea    rsi,[rip+0x5175]        # 41134f <getopt_long_only@@Base+0x446f>
  40c1da:	mov    rdi,rbx
  40c1dd:	call   402210 <strcmp@plt>
  40c1e2:	test   eax,eax
  40c1e4:	je     40c3d5 <Mat_VarRead@plt+0xa045>
  40c1ea:	lea    rsi,[rip+0x53bb]        # 4115ac <getopt_long_only@@Base+0x46cc>
  40c1f1:	mov    rdi,rbx
  40c1f4:	call   402210 <strcmp@plt>
  40c1f9:	test   eax,eax
  40c1fb:	je     40c3e2 <Mat_VarRead@plt+0xa052>
  40c201:	lea    rsi,[rip+0x554a]        # 411752 <getopt_long_only@@Base+0x4872>
  40c208:	mov    rdi,rbx
  40c20b:	call   402210 <strcmp@plt>
  40c210:	test   eax,eax
  40c212:	je     40c3ef <Mat_VarRead@plt+0xa05f>
  40c218:	lea    rsi,[rip+0x569d]        # 4118bc <getopt_long_only@@Base+0x49dc>
  40c21f:	mov    rdi,rbx
  40c222:	call   402210 <strcmp@plt>
  40c227:	test   eax,eax
  40c229:	je     40c3fc <Mat_VarRead@plt+0xa06c>
  40c22f:	lea    rsi,[rip+0x5809]        # 411a3f <getopt_long_only@@Base+0x4b5f>
  40c236:	mov    rdi,rbx
  40c239:	call   402210 <strcmp@plt>
  40c23e:	test   eax,eax
  40c240:	je     40c409 <Mat_VarRead@plt+0xa079>
  40c246:	lea    rsi,[rip+0x5a3b]        # 411c88 <getopt_long_only@@Base+0x4da8>
  40c24d:	mov    rdi,rbx
  40c250:	call   402210 <strcmp@plt>
  40c255:	test   eax,eax
  40c257:	je     40c416 <Mat_VarRead@plt+0xa086>
  40c25d:	lea    rsi,[rip+0x5b60]        # 411dc4 <getopt_long_only@@Base+0x4ee4>
  40c264:	mov    rdi,rbx
  40c267:	call   402210 <strcmp@plt>
  40c26c:	test   eax,eax
  40c26e:	je     40c423 <Mat_VarRead@plt+0xa093>
  40c274:	lea    rsi,[rip+0x5c7f]        # 411efa <getopt_long_only@@Base+0x501a>
  40c27b:	mov    rdi,rbx
  40c27e:	call   402210 <strcmp@plt>
  40c283:	test   eax,eax
  40c285:	je     40c430 <Mat_VarRead@plt+0xa0a0>
  40c28b:	lea    rsi,[rip+0x5d15]        # 411fa7 <getopt_long_only@@Base+0x50c7>
  40c292:	mov    rdi,rbx
  40c295:	call   402210 <strcmp@plt>
  40c29a:	test   eax,eax
  40c29c:	je     40c43d <Mat_VarRead@plt+0xa0ad>
  40c2a2:	lea    rsi,[rip+0x5db1]        # 41205a <getopt_long_only@@Base+0x517a>
  40c2a9:	mov    rdi,rbx
  40c2ac:	call   402210 <strcmp@plt>
  40c2b1:	test   eax,eax
  40c2b3:	je     40c44a <Mat_VarRead@plt+0xa0ba>
  40c2b9:	lea    rsi,[rip+0x5eda]        # 41219a <getopt_long_only@@Base+0x52ba>
  40c2c0:	mov    rdi,rbx
  40c2c3:	call   402210 <strcmp@plt>
  40c2c8:	test   eax,eax
  40c2ca:	je     40c457 <Mat_VarRead@plt+0xa0c7>
  40c2d0:	lea    rsi,[rip+0x5f4c]        # 412223 <getopt_long_only@@Base+0x5343>
  40c2d7:	mov    rdi,rbx
  40c2da:	call   402210 <strcmp@plt>
  40c2df:	test   eax,eax
  40c2e1:	je     40c464 <Mat_VarRead@plt+0xa0d4>
  40c2e7:	lea    rsi,[rip+0x5fbe]        # 4122ac <getopt_long_only@@Base+0x53cc>
  40c2ee:	mov    rdi,rbx
  40c2f1:	call   402210 <strcmp@plt>
  40c2f6:	test   eax,eax
  40c2f8:	je     40c471 <Mat_VarRead@plt+0xa0e1>
  40c2fe:	lea    rsi,[rip+0x619f]        # 4124a4 <getopt_long_only@@Base+0x55c4>
  40c305:	mov    rdi,rbx
  40c308:	call   402210 <strcmp@plt>
  40c30d:	test   eax,eax
  40c30f:	je     40c47e <Mat_VarRead@plt+0xa0ee>
  40c315:	lea    rsi,[rip+0x6287]        # 4125a3 <getopt_long_only@@Base+0x56c3>
  40c31c:	mov    rdi,rbx
  40c31f:	call   402210 <strcmp@plt>
  40c324:	test   eax,eax
  40c326:	jne    40c48b <Mat_VarRead@plt+0xa0fb>
  40c32c:	lea    rdi,[rip+0xa0ad]        # 4163e0 <getopt_long_only@@Base+0x9500>
  40c333:	pop    rbx
  40c334:	jmp    402330 <Mat_Help@plt>
  40c339:	lea    rdi,[rip+0x93e0]        # 415720 <getopt_long_only@@Base+0x8840>
  40c340:	pop    rbx
  40c341:	jmp    402330 <Mat_Help@plt>
  40c346:	lea    rdi,[rip+0x9413]        # 415760 <getopt_long_only@@Base+0x8880>
  40c34d:	pop    rbx
  40c34e:	jmp    402330 <Mat_Help@plt>
  40c353:	lea    rdi,[rip+0x9446]        # 4157a0 <getopt_long_only@@Base+0x88c0>
  40c35a:	pop    rbx
  40c35b:	jmp    402330 <Mat_Help@plt>
  40c360:	lea    rdi,[rip+0x9479]        # 4157e0 <getopt_long_only@@Base+0x8900>
  40c367:	pop    rbx
  40c368:	jmp    402330 <Mat_Help@plt>
  40c36d:	lea    rdi,[rip+0x94ac]        # 415820 <getopt_long_only@@Base+0x8940>
  40c374:	pop    rbx
  40c375:	jmp    402330 <Mat_Help@plt>
  40c37a:	lea    rdi,[rip+0x952f]        # 4158b0 <getopt_long_only@@Base+0x89d0>
  40c381:	pop    rbx
  40c382:	jmp    402330 <Mat_Help@plt>
  40c387:	lea    rdi,[rip+0x95b2]        # 415940 <getopt_long_only@@Base+0x8a60>
  40c38e:	pop    rbx
  40c38f:	jmp    402330 <Mat_Help@plt>
  40c394:	lea    rdi,[rip+0x9645]        # 4159e0 <getopt_long_only@@Base+0x8b00>
  40c39b:	pop    rbx
  40c39c:	jmp    402330 <Mat_Help@plt>
  40c3a1:	lea    rdi,[rip+0x96d8]        # 415a80 <getopt_long_only@@Base+0x8ba0>
  40c3a8:	pop    rbx
  40c3a9:	jmp    402330 <Mat_Help@plt>
  40c3ae:	lea    rdi,[rip+0x976b]        # 415b20 <getopt_long_only@@Base+0x8c40>
  40c3b5:	pop    rbx
  40c3b6:	jmp    402330 <Mat_Help@plt>
  40c3bb:	lea    rdi,[rip+0x97de]        # 415ba0 <getopt_long_only@@Base+0x8cc0>
  40c3c2:	pop    rbx
  40c3c3:	jmp    402330 <Mat_Help@plt>
  40c3c8:	lea    rdi,[rip+0x9861]        # 415c30 <getopt_long_only@@Base+0x8d50>
  40c3cf:	pop    rbx
  40c3d0:	jmp    402330 <Mat_Help@plt>
  40c3d5:	lea    rdi,[rip+0x98c4]        # 415ca0 <getopt_long_only@@Base+0x8dc0>
  40c3dc:	pop    rbx
  40c3dd:	jmp    402330 <Mat_Help@plt>
  40c3e2:	lea    rdi,[rip+0x9967]        # 415d50 <getopt_long_only@@Base+0x8e70>
  40c3e9:	pop    rbx
  40c3ea:	jmp    402330 <Mat_Help@plt>
  40c3ef:	lea    rdi,[rip+0x9a0a]        # 415e00 <getopt_long_only@@Base+0x8f20>
  40c3f6:	pop    rbx
  40c3f7:	jmp    402330 <Mat_Help@plt>
  40c3fc:	lea    rdi,[rip+0x9a8d]        # 415e90 <getopt_long_only@@Base+0x8fb0>
  40c403:	pop    rbx
  40c404:	jmp    402330 <Mat_Help@plt>
  40c409:	lea    rdi,[rip+0x9b20]        # 415f30 <getopt_long_only@@Base+0x9050>
  40c410:	pop    rbx
  40c411:	jmp    402330 <Mat_Help@plt>
  40c416:	lea    rdi,[rip+0x9bb3]        # 415fd0 <getopt_long_only@@Base+0x90f0>
  40c41d:	pop    rbx
  40c41e:	jmp    402330 <Mat_Help@plt>
  40c423:	lea    rdi,[rip+0x9c46]        # 416070 <getopt_long_only@@Base+0x9190>
  40c42a:	pop    rbx
  40c42b:	jmp    402330 <Mat_Help@plt>
  40c430:	lea    rdi,[rip+0x9cd9]        # 416110 <getopt_long_only@@Base+0x9230>
  40c437:	pop    rbx
  40c438:	jmp    402330 <Mat_Help@plt>
  40c43d:	lea    rdi,[rip+0x9d4c]        # 416190 <getopt_long_only@@Base+0x92b0>
  40c444:	pop    rbx
  40c445:	jmp    402330 <Mat_Help@plt>
  40c44a:	lea    rdi,[rip+0x9dbf]        # 416210 <getopt_long_only@@Base+0x9330>
  40c451:	pop    rbx
  40c452:	jmp    402330 <Mat_Help@plt>
  40c457:	lea    rdi,[rip+0x9e42]        # 4162a0 <getopt_long_only@@Base+0x93c0>
  40c45e:	pop    rbx
  40c45f:	jmp    402330 <Mat_Help@plt>
  40c464:	lea    rdi,[rip+0x9e75]        # 4162e0 <getopt_long_only@@Base+0x9400>
  40c46b:	pop    rbx
  40c46c:	jmp    402330 <Mat_Help@plt>
  40c471:	lea    rdi,[rip+0x9ea8]        # 416320 <getopt_long_only@@Base+0x9440>
  40c478:	pop    rbx
  40c479:	jmp    402330 <Mat_Help@plt>
  40c47e:	lea    rdi,[rip+0x9f0b]        # 416390 <getopt_long_only@@Base+0x94b0>
  40c485:	pop    rbx
  40c486:	jmp    402330 <Mat_Help@plt>
  40c48b:	mov    edi,0x1
  40c490:	call   402340 <exit@plt>
  40c495:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40c49f:	nop

000000000040c4a0 <getopt@@Base>:
  40c4a0:	xor    ecx,ecx
  40c4a2:	xor    r8d,r8d
  40c4a5:	xor    r9d,r9d
  40c4a8:	jmp    40c4b0 <getopt@@Base+0x10>
  40c4aa:	nop    WORD PTR [rax+rax*1+0x0]
  40c4b0:	push   rbp
  40c4b1:	push   r15
  40c4b3:	push   r14
  40c4b5:	push   r13
  40c4b7:	push   r12
  40c4b9:	push   rbx
  40c4ba:	sub    rsp,0x58
  40c4be:	mov    eax,0xffffffff
  40c4c3:	test   rdx,rdx
  40c4c6:	je     40cdc0 <getopt@@Base+0x920>
  40c4cc:	mov    r14,r8
  40c4cf:	mov    rbx,rdx
  40c4d2:	mov    r13,rsi
  40c4d5:	mov    r12d,edi
  40c4d8:	mov    ebp,r9d
  40c4db:	mov    QWORD PTR [rsp+0x38],rcx
  40c4e0:	lea    rdi,[rip+0x66b4]        # 412b9b <getopt_long_only@@Base+0x5cbb>
  40c4e7:	call   402040 <getenv@plt>
  40c4ec:	mov    cl,BYTE PTR [rbx]
  40c4ee:	cmp    cl,0x2d
  40c4f1:	mov    QWORD PTR [rsp+0x50],rax
  40c4f6:	jne    40c4ff <getopt@@Base+0x5f>
  40c4f8:	mov    eax,ebp
  40c4fa:	or     eax,0x2
  40c4fd:	jmp    40c51d <getopt@@Base+0x7d>
  40c4ff:	mov    rdx,rax
  40c502:	mov    r9d,ebp
  40c505:	mov    eax,ebp
  40c507:	and    eax,0xfffffffe
  40c50a:	cmp    cl,0x2b
  40c50d:	cmove  r9d,eax
  40c511:	test   rdx,rdx
  40c514:	cmovne r9d,eax
  40c518:	cmp    cl,0x2b
  40c51b:	jne    40c523 <getopt@@Base+0x83>
  40c51d:	inc    rbx
  40c520:	mov    r9d,eax
  40c523:	lea    r15,[rip+0x9f0a]        # 416434 <optind@@Base>
  40c52a:	mov    esi,DWORD PTR [r15]
  40c52d:	lea    rax,[rip+0x9f2c]        # 416460 <optopt@@Base+0x28>
  40c534:	test   esi,esi
  40c536:	je     40c550 <getopt@@Base+0xb0>
  40c538:	mov    eax,DWORD PTR [rax]
  40c53a:	lea    rcx,[rip+0x9f27]        # 416468 <optarg@@Base>
  40c541:	mov    QWORD PTR [rcx],0x0
  40c548:	test   eax,eax
  40c54a:	jne    40c575 <getopt@@Base+0xd5>
  40c54c:	xor    eax,eax
  40c54e:	jmp    40c589 <getopt@@Base+0xe9>
  40c550:	mov    DWORD PTR [rax],0x1
  40c556:	mov    DWORD PTR [r15],0x1
  40c55d:	lea    rax,[rip+0x9f04]        # 416468 <optarg@@Base>
  40c564:	mov    QWORD PTR [rax],0x0
  40c56b:	mov    esi,0x1
  40c570:	mov    eax,0x1
  40c575:	mov    DWORD PTR [rip+0x9ebd],0xffffffff        # 41643c <optopt@@Base+0x4>
  40c57f:	mov    DWORD PTR [rip+0x9eb7],0xffffffff        # 416440 <optopt@@Base+0x8>
  40c589:	mov    QWORD PTR [rsp+0x48],r14
  40c58e:	mov    QWORD PTR [rsp+0x10],rbx
  40c593:	lea    rcx,[rip+0x9ec6]        # 416460 <optopt@@Base+0x28>
  40c59a:	lea    rdx,[rip+0x63bd]        # 41295e <getopt_long_only@@Base+0x5a7e>
  40c5a1:	mov    DWORD PTR [rsp+0x8],r9d
  40c5a6:	mov    DWORD PTR [rsp+0x44],r12d
  40c5ab:	test   eax,eax
  40c5ad:	jne    40c61d <getopt@@Base+0x17d>
  40c5af:	jmp    40c609 <getopt@@Base+0x169>
  40c5b1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40c5bb:	nop    DWORD PTR [rax+rax*1+0x0]
  40c5c0:	mov    esi,DWORD PTR [rsp+0x24]
  40c5c4:	mov    eax,DWORD PTR [rsp+0x20]
  40c5c8:	add    eax,esi
  40c5ca:	sub    eax,ebp
  40c5cc:	mov    DWORD PTR [rip+0x9e6e],eax        # 416440 <optopt@@Base+0x8>
  40c5d2:	mov    DWORD PTR [rip+0x9e60],0xffffffff        # 41643c <optopt@@Base+0x4>
  40c5dc:	lea    r15,[rip+0x9e51]        # 416434 <optind@@Base>
  40c5e3:	mov    r12d,DWORD PTR [rsp+0x44]
  40c5e8:	mov    r9d,DWORD PTR [rsp+0x8]
  40c5ed:	lea    rbx,[rip+0x636a]        # 41295e <getopt_long_only@@Base+0x5a7e>
  40c5f4:	mov    rdx,rbx
  40c5f7:	lea    rcx,[rip+0x9e62]        # 416460 <optopt@@Base+0x28>
  40c5fe:	inc    esi
  40c600:	mov    DWORD PTR [r15],esi
  40c603:	xor    eax,eax
  40c605:	test   eax,eax
  40c607:	jne    40c61d <getopt@@Base+0x17d>
  40c609:	mov    rbp,QWORD PTR [rip+0x9e38]        # 416448 <optopt@@Base+0x10>
  40c610:	mov    r14b,BYTE PTR [rbp+0x0]
  40c614:	test   r14b,r14b
  40c617:	jne    40ca1e <getopt@@Base+0x57e>
  40c61d:	mov    DWORD PTR [rcx],0x0
  40c623:	cmp    esi,r12d
  40c626:	jge    40c81b <getopt@@Base+0x37b>
  40c62c:	movsxd rax,esi
  40c62f:	mov    rax,QWORD PTR [r13+rax*8+0x0]
  40c634:	mov    QWORD PTR [rip+0x9e0d],rax        # 416448 <optopt@@Base+0x10>
  40c63b:	cmp    BYTE PTR [rax],0x2d
  40c63e:	jne    40c64d <getopt@@Base+0x1ad>
  40c640:	mov    r14b,BYTE PTR [rax+0x1]
  40c644:	test   r14b,r14b
  40c647:	jne    40c9df <getopt@@Base+0x53f>
  40c64d:	mov    QWORD PTR [rip+0x9df4],rdx        # 416448 <optopt@@Base+0x10>
  40c654:	test   r9b,0x2
  40c658:	jne    40c9a9 <getopt@@Base+0x509>
  40c65e:	test   r9b,0x1
  40c662:	je     40c9c2 <getopt@@Base+0x522>
  40c668:	mov    edi,DWORD PTR [rip+0x9dd2]        # 416440 <optopt@@Base+0x8>
  40c66e:	cmp    edi,0xffffffff
  40c671:	je     40c810 <getopt@@Base+0x370>
  40c677:	movsxd rbp,DWORD PTR [rip+0x9dbe]        # 41643c <optopt@@Base+0x4>
  40c67e:	cmp    rbp,0xffffffffffffffff
  40c682:	je     40c5fe <getopt@@Base+0x15e>
  40c688:	mov    r9d,esi
  40c68b:	sub    r9d,ebp
  40c68e:	mov    r11d,ebp
  40c691:	sub    r11d,edi
  40c694:	mov    eax,r11d
  40c697:	cdq    
  40c698:	idiv   r9d
  40c69b:	mov    ecx,r9d
  40c69e:	test   edx,edx
  40c6a0:	je     40c6bb <getopt@@Base+0x21b>
  40c6a2:	mov    eax,r9d
  40c6a5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40c6af:	nop
  40c6b0:	mov    ecx,edx
  40c6b2:	cdq    
  40c6b3:	idiv   ecx
  40c6b5:	mov    eax,ecx
  40c6b7:	test   edx,edx
  40c6b9:	jne    40c6b0 <getopt@@Base+0x210>
  40c6bb:	mov    DWORD PTR [rsp+0x24],esi
  40c6bf:	mov    DWORD PTR [rsp+0x20],edi
  40c6c3:	sub    esi,edi
  40c6c5:	mov    eax,esi
  40c6c7:	cdq    
  40c6c8:	idiv   ecx
  40c6ca:	mov    QWORD PTR [rsp+0x18],rax
  40c6cf:	test   ecx,ecx
  40c6d1:	jle    40c5c0 <getopt@@Base+0x120>
  40c6d7:	neg    r11d
  40c6da:	mov    eax,ecx
  40c6dc:	mov    QWORD PTR [rsp+0x30],rax
  40c6e1:	mov    rcx,QWORD PTR [rsp+0x18]
  40c6e6:	lea    eax,[rcx-0x1]
  40c6e9:	mov    DWORD PTR [rsp+0x28],eax
  40c6ed:	mov    eax,ecx
  40c6ef:	and    eax,0x3
  40c6f2:	mov    edx,eax
  40c6f4:	sub    edx,ecx
  40c6f6:	mov    DWORD PTR [rsp+0xc],edx
  40c6fa:	xor    r14d,r14d
  40c6fd:	cmp    DWORD PTR [rsp+0x18],0x0
  40c702:	jg     40c725 <getopt@@Base+0x285>
  40c704:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40c70e:	xchg   ax,ax
  40c710:	inc    r14
  40c713:	cmp    r14,QWORD PTR [rsp+0x30]
  40c718:	je     40c5c0 <getopt@@Base+0x120>
  40c71e:	cmp    DWORD PTR [rsp+0x18],0x0
  40c723:	jle    40c710 <getopt@@Base+0x270>
  40c725:	lea    r8,[r14+rbp*1]
  40c729:	mov    r12,QWORD PTR [r13+r8*8+0x0]
  40c72e:	cmp    DWORD PTR [rsp+0x28],0x3
  40c733:	jae    40c740 <getopt@@Base+0x2a0>
  40c735:	mov    ecx,r8d
  40c738:	jmp    40c7d0 <getopt@@Base+0x330>
  40c73d:	nop    DWORD PTR [rax]
  40c740:	mov    r15d,DWORD PTR [rsp+0xc]
  40c745:	mov    ecx,r8d
  40c748:	jmp    40c76a <getopt@@Base+0x2ca>
  40c74a:	nop    WORD PTR [rax+rax*1+0x0]
  40c750:	add    ecx,edi
  40c752:	movsxd rdx,ecx
  40c755:	mov    r12,QWORD PTR [r13+rdx*8+0x0]
  40c75a:	mov    QWORD PTR [r13+rdx*8+0x0],rsi
  40c75f:	mov    QWORD PTR [r13+r8*8+0x0],r12
  40c764:	add    r15d,0x4
  40c768:	je     40c7d0 <getopt@@Base+0x330>
  40c76a:	mov    edi,r9d
  40c76d:	cmp    ecx,ebp
  40c76f:	jl     40c774 <getopt@@Base+0x2d4>
  40c771:	mov    edi,r11d
  40c774:	add    edi,ecx
  40c776:	movsxd rdx,edi
  40c779:	mov    r10,QWORD PTR [r13+rdx*8+0x0]
  40c77e:	mov    QWORD PTR [r13+rdx*8+0x0],r12
  40c783:	mov    QWORD PTR [r13+r8*8+0x0],r10
  40c788:	mov    ecx,r9d
  40c78b:	cmp    edx,ebp
  40c78d:	jl     40c792 <getopt@@Base+0x2f2>
  40c78f:	mov    ecx,r11d
  40c792:	add    ecx,edi
  40c794:	movsxd rsi,ecx
  40c797:	mov    rdx,QWORD PTR [r13+rsi*8+0x0]
  40c79c:	mov    QWORD PTR [r13+rsi*8+0x0],r10
  40c7a1:	mov    QWORD PTR [r13+r8*8+0x0],rdx
  40c7a6:	mov    edi,r9d
  40c7a9:	cmp    esi,ebp
  40c7ab:	jl     40c7b0 <getopt@@Base+0x310>
  40c7ad:	mov    edi,r11d
  40c7b0:	add    edi,ecx
  40c7b2:	movsxd rbx,edi
  40c7b5:	mov    rsi,QWORD PTR [r13+rbx*8+0x0]
  40c7ba:	mov    QWORD PTR [r13+rbx*8+0x0],rdx
  40c7bf:	mov    QWORD PTR [r13+r8*8+0x0],rsi
  40c7c4:	mov    ecx,r9d
  40c7c7:	cmp    ebx,ebp
  40c7c9:	jl     40c750 <getopt@@Base+0x2b0>
  40c7cb:	mov    ecx,r11d
  40c7ce:	jmp    40c750 <getopt@@Base+0x2b0>
  40c7d0:	test   eax,eax
  40c7d2:	je     40c710 <getopt@@Base+0x270>
  40c7d8:	mov    edi,eax
  40c7da:	nop    WORD PTR [rax+rax*1+0x0]
  40c7e0:	cmp    ecx,ebp
  40c7e2:	mov    edx,r11d
  40c7e5:	cmovl  edx,r9d
  40c7e9:	add    ecx,edx
  40c7eb:	movsxd rdx,ecx
  40c7ee:	mov    rsi,QWORD PTR [r13+rdx*8+0x0]
  40c7f3:	mov    QWORD PTR [r13+rdx*8+0x0],r12
  40c7f8:	mov    QWORD PTR [r13+r8*8+0x0],rsi
  40c7fd:	mov    r12,rsi
  40c800:	dec    edi
  40c802:	jne    40c7e0 <getopt@@Base+0x340>
  40c804:	jmp    40c710 <getopt@@Base+0x270>
  40c809:	nop    DWORD PTR [rax+0x0]
  40c810:	mov    DWORD PTR [rip+0x9c2a],esi        # 416440 <optopt@@Base+0x8>
  40c816:	jmp    40c5fe <getopt@@Base+0x15e>
  40c81b:	mov    QWORD PTR [rip+0x9c26],rdx        # 416448 <optopt@@Base+0x10>
  40c822:	movsxd rbx,DWORD PTR [rip+0x9c13]        # 41643c <optopt@@Base+0x4>
  40c829:	mov    edi,DWORD PTR [rip+0x9c11]        # 416440 <optopt@@Base+0x8>
  40c82f:	cmp    rbx,0xffffffffffffffff
  40c833:	je     40ca89 <getopt@@Base+0x5e9>
  40c839:	mov    r8d,esi
  40c83c:	sub    r8d,ebx
  40c83f:	mov    r12d,ebx
  40c842:	sub    r12d,edi
  40c845:	mov    eax,r12d
  40c848:	cdq    
  40c849:	idiv   r8d
  40c84c:	mov    ecx,r8d
  40c84f:	test   edx,edx
  40c851:	je     40c86b <getopt@@Base+0x3cb>
  40c853:	mov    eax,r8d
  40c856:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40c860:	mov    ecx,edx
  40c862:	cdq    
  40c863:	idiv   ecx
  40c865:	mov    eax,ecx
  40c867:	test   edx,edx
  40c869:	jne    40c860 <getopt@@Base+0x3c0>
  40c86b:	mov    DWORD PTR [rsp+0xc],edi
  40c86f:	sub    esi,edi
  40c871:	mov    eax,esi
  40c873:	cdq    
  40c874:	idiv   ecx
  40c876:	test   ecx,ecx
  40c878:	jle    40c9cc <getopt@@Base+0x52c>
  40c87e:	neg    r12d
  40c881:	mov    ecx,ecx
  40c883:	mov    QWORD PTR [rsp+0x18],rcx
  40c888:	lea    ecx,[rax-0x1]
  40c88b:	mov    DWORD PTR [rsp+0x30],ecx
  40c88f:	mov    r14d,eax
  40c892:	and    r14d,0x3
  40c896:	mov    ecx,r14d
  40c899:	sub    ecx,eax
  40c89b:	mov    DWORD PTR [rsp+0x28],ecx
  40c89f:	xor    r15d,r15d
  40c8a2:	test   eax,eax
  40c8a4:	jg     40c8c2 <getopt@@Base+0x422>
  40c8a6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40c8b0:	inc    r15
  40c8b3:	cmp    r15,QWORD PTR [rsp+0x18]
  40c8b8:	je     40c9cc <getopt@@Base+0x52c>
  40c8be:	test   eax,eax
  40c8c0:	jle    40c8b0 <getopt@@Base+0x410>
  40c8c2:	lea    r9,[r15+rbx*1]
  40c8c6:	mov    rbp,QWORD PTR [r13+r9*8+0x0]
  40c8cb:	cmp    DWORD PTR [rsp+0x30],0x3
  40c8d0:	jae    40c8e0 <getopt@@Base+0x440>
  40c8d2:	mov    ecx,r9d
  40c8d5:	jmp    40c970 <getopt@@Base+0x4d0>
  40c8da:	nop    WORD PTR [rax+rax*1+0x0]
  40c8e0:	mov    r11d,DWORD PTR [rsp+0x28]
  40c8e5:	mov    ecx,r9d
  40c8e8:	jmp    40c90a <getopt@@Base+0x46a>
  40c8ea:	nop    WORD PTR [rax+rax*1+0x0]
  40c8f0:	add    ecx,esi
  40c8f2:	movsxd rdx,ecx
  40c8f5:	mov    rbp,QWORD PTR [r13+rdx*8+0x0]
  40c8fa:	mov    QWORD PTR [r13+rdx*8+0x0],rdi
  40c8ff:	mov    QWORD PTR [r13+r9*8+0x0],rbp
  40c904:	add    r11d,0x4
  40c908:	je     40c970 <getopt@@Base+0x4d0>
  40c90a:	mov    esi,r8d
  40c90d:	cmp    ecx,ebx
  40c90f:	jl     40c914 <getopt@@Base+0x474>
  40c911:	mov    esi,r12d
  40c914:	add    esi,ecx
  40c916:	movsxd rdi,esi
  40c919:	mov    r10,QWORD PTR [r13+rdi*8+0x0]
  40c91e:	mov    QWORD PTR [r13+rdi*8+0x0],rbp
  40c923:	mov    QWORD PTR [r13+r9*8+0x0],r10
  40c928:	mov    ecx,r8d
  40c92b:	cmp    edi,ebx
  40c92d:	jl     40c932 <getopt@@Base+0x492>
  40c92f:	mov    ecx,r12d
  40c932:	add    ecx,esi
  40c934:	movsxd rdi,ecx
  40c937:	mov    rbp,QWORD PTR [r13+rdi*8+0x0]
  40c93c:	mov    QWORD PTR [r13+rdi*8+0x0],r10
  40c941:	mov    QWORD PTR [r13+r9*8+0x0],rbp
  40c946:	mov    esi,r8d
  40c949:	cmp    edi,ebx
  40c94b:	jl     40c950 <getopt@@Base+0x4b0>
  40c94d:	mov    esi,r12d
  40c950:	add    esi,ecx
  40c952:	movsxd rdx,esi
  40c955:	mov    rdi,QWORD PTR [r13+rdx*8+0x0]
  40c95a:	mov    QWORD PTR [r13+rdx*8+0x0],rbp
  40c95f:	mov    QWORD PTR [r13+r9*8+0x0],rdi
  40c964:	mov    ecx,r8d
  40c967:	cmp    edx,ebx
  40c969:	jl     40c8f0 <getopt@@Base+0x450>
  40c96b:	mov    ecx,r12d
  40c96e:	jmp    40c8f0 <getopt@@Base+0x450>
  40c970:	test   r14d,r14d
  40c973:	je     40c8b0 <getopt@@Base+0x410>
  40c979:	mov    edx,r14d
  40c97c:	nop    DWORD PTR [rax+0x0]
  40c980:	cmp    ecx,ebx
  40c982:	mov    esi,r12d
  40c985:	cmovl  esi,r8d
  40c989:	add    ecx,esi
  40c98b:	movsxd rsi,ecx
  40c98e:	mov    rdi,QWORD PTR [r13+rsi*8+0x0]
  40c993:	mov    QWORD PTR [r13+rsi*8+0x0],rbp
  40c998:	mov    QWORD PTR [r13+r9*8+0x0],rdi
  40c99d:	mov    rbp,rdi
  40c9a0:	dec    edx
  40c9a2:	jne    40c980 <getopt@@Base+0x4e0>
  40c9a4:	jmp    40c8b0 <getopt@@Base+0x410>
  40c9a9:	inc    esi
  40c9ab:	mov    DWORD PTR [r15],esi
  40c9ae:	lea    rcx,[rip+0x9ab3]        # 416468 <optarg@@Base>
  40c9b5:	mov    QWORD PTR [rcx],rax
  40c9b8:	mov    eax,0x1
  40c9bd:	jmp    40cdc0 <getopt@@Base+0x920>
  40c9c2:	mov    eax,0xffffffff
  40c9c7:	jmp    40cdc0 <getopt@@Base+0x920>
  40c9cc:	mov    edi,DWORD PTR [rsp+0xc]
  40c9d0:	add    edi,r8d
  40c9d3:	lea    r15,[rip+0x9a5a]        # 416434 <optind@@Base>
  40c9da:	jmp    40ca8e <getopt@@Base+0x5ee>
  40c9df:	lea    rbp,[rax+0x1]
  40c9e3:	mov    edi,DWORD PTR [rip+0x9a57]        # 416440 <optopt@@Base+0x8>
  40c9e9:	mov    r11d,DWORD PTR [rip+0x9a4c]        # 41643c <optopt@@Base+0x4>
  40c9f0:	cmp    edi,0xffffffff
  40c9f3:	je     40ca04 <getopt@@Base+0x564>
  40c9f5:	cmp    r11d,0xffffffff
  40c9f9:	jne    40ca04 <getopt@@Base+0x564>
  40c9fb:	mov    DWORD PTR [rip+0x9a3b],esi        # 41643c <optopt@@Base+0x4>
  40ca01:	mov    r11d,esi
  40ca04:	mov    QWORD PTR [rip+0x9a3d],rbp        # 416448 <optopt@@Base+0x10>
  40ca0b:	cmp    r14b,0x2d
  40ca0f:	jne    40ca1e <getopt@@Base+0x57e>
  40ca11:	mov    r14b,0x2d
  40ca14:	cmp    BYTE PTR [rax+0x2],0x0
  40ca18:	je     40caaf <getopt@@Base+0x60f>
  40ca1e:	mov    rdx,QWORD PTR [rsp+0x38]
  40ca23:	test   rdx,rdx
  40ca26:	je     40cca3 <getopt@@Base+0x803>
  40ca2c:	movsxd rax,esi
  40ca2f:	cmp    rbp,QWORD PTR [r13+rax*8+0x0]
  40ca34:	je     40cca3 <getopt@@Base+0x803>
  40ca3a:	test   r9b,0x4
  40ca3e:	jne    40ca4a <getopt@@Base+0x5aa>
  40ca40:	cmp    r14b,0x2d
  40ca44:	jne    40cca3 <getopt@@Base+0x803>
  40ca4a:	mov    DWORD PTR [rip+0x99fc],0x0        # 416450 <optopt@@Base+0x18>
  40ca54:	xor    r8d,r8d
  40ca57:	cmp    r14b,0x3a
  40ca5b:	je     40cc53 <getopt@@Base+0x7b3>
  40ca61:	cmp    r14b,0x2d
  40ca65:	jne    40cc5a <getopt@@Base+0x7ba>
  40ca6b:	inc    rbp
  40ca6e:	mov    QWORD PTR [rip+0x99d3],rbp        # 416448 <optopt@@Base+0x10>
  40ca75:	mov    DWORD PTR [rip+0x99d1],0x1        # 416450 <optopt@@Base+0x18>
  40ca7f:	mov    rbx,QWORD PTR [rsp+0x10]
  40ca84:	jmp    40cc7f <getopt@@Base+0x7df>
  40ca89:	cmp    edi,0xffffffff
  40ca8c:	je     40ca91 <getopt@@Base+0x5f1>
  40ca8e:	mov    DWORD PTR [r15],edi
  40ca91:	mov    DWORD PTR [rip+0x99a1],0xffffffff        # 41643c <optopt@@Base+0x4>
  40ca9b:	mov    DWORD PTR [rip+0x999b],0xffffffff        # 416440 <optopt@@Base+0x8>
  40caa5:	mov    eax,0xffffffff
  40caaa:	jmp    40cdc0 <getopt@@Base+0x920>
  40caaf:	inc    esi
  40cab1:	mov    DWORD PTR [r15],esi
  40cab4:	mov    QWORD PTR [rip+0x998d],rdx        # 416448 <optopt@@Base+0x10>
  40cabb:	cmp    r11d,0xffffffff
  40cabf:	je     40ca91 <getopt@@Base+0x5f1>
  40cac1:	mov    r9d,r11d
  40cac4:	sub    r9d,edi
  40cac7:	mov    r8d,esi
  40caca:	sub    r8d,r11d
  40cacd:	mov    eax,r9d
  40cad0:	cdq    
  40cad1:	idiv   r8d
  40cad4:	mov    ecx,r8d
  40cad7:	test   edx,edx
  40cad9:	je     40cae9 <getopt@@Base+0x649>
  40cadb:	mov    eax,r8d
  40cade:	mov    ecx,edx
  40cae0:	cdq    
  40cae1:	idiv   ecx
  40cae3:	mov    eax,ecx
  40cae5:	test   edx,edx
  40cae7:	jne    40cade <getopt@@Base+0x63e>
  40cae9:	mov    DWORD PTR [rsp+0x24],esi
  40caed:	mov    DWORD PTR [rsp+0x8],edi
  40caf1:	sub    esi,edi
  40caf3:	mov    eax,esi
  40caf5:	cdq    
  40caf6:	idiv   ecx
  40caf8:	mov    QWORD PTR [rsp+0x18],rax
  40cafd:	test   ecx,ecx
  40caff:	jle    40cc3a <getopt@@Base+0x79a>
  40cb05:	neg    r9d
  40cb08:	movsxd rax,r11d
  40cb0b:	mov    QWORD PTR [rsp+0x28],rax
  40cb10:	mov    eax,ecx
  40cb12:	mov    QWORD PTR [rsp+0x30],rax
  40cb17:	mov    rcx,QWORD PTR [rsp+0x18]
  40cb1c:	lea    eax,[rcx-0x1]
  40cb1f:	mov    DWORD PTR [rsp+0xc],eax
  40cb23:	mov    eax,ecx
  40cb25:	and    eax,0x3
  40cb28:	mov    edx,eax
  40cb2a:	sub    edx,ecx
  40cb2c:	mov    DWORD PTR [rsp+0x20],edx
  40cb30:	xor    r12d,r12d
  40cb33:	cmp    DWORD PTR [rsp+0x18],0x0
  40cb38:	jg     40cb4f <getopt@@Base+0x6af>
  40cb3a:	inc    r12
  40cb3d:	cmp    r12,QWORD PTR [rsp+0x30]
  40cb42:	je     40cc3a <getopt@@Base+0x79a>
  40cb48:	cmp    DWORD PTR [rsp+0x18],0x0
  40cb4d:	jle    40cb3a <getopt@@Base+0x69a>
  40cb4f:	mov    rcx,QWORD PTR [rsp+0x28]
  40cb54:	lea    r15,[r12+rcx*1]
  40cb58:	mov    r14,QWORD PTR [r13+r15*8+0x0]
  40cb5d:	cmp    DWORD PTR [rsp+0xc],0x3
  40cb62:	jae    40cb6c <getopt@@Base+0x6cc>
  40cb64:	mov    ecx,r15d
  40cb67:	jmp    40cc06 <getopt@@Base+0x766>
  40cb6c:	mov    edx,DWORD PTR [rsp+0x20]
  40cb70:	mov    ecx,r15d
  40cb73:	jmp    40cb99 <getopt@@Base+0x6f9>
  40cb75:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40cb7f:	nop
  40cb80:	add    ecx,ebp
  40cb82:	movsxd rsi,ecx
  40cb85:	mov    r14,QWORD PTR [r13+rsi*8+0x0]
  40cb8a:	mov    QWORD PTR [r13+rsi*8+0x0],rdi
  40cb8f:	mov    QWORD PTR [r13+r15*8+0x0],r14
  40cb94:	add    edx,0x4
  40cb97:	je     40cc06 <getopt@@Base+0x766>
  40cb99:	mov    ebp,r8d
  40cb9c:	cmp    ecx,r11d
  40cb9f:	jl     40cba4 <getopt@@Base+0x704>
  40cba1:	mov    ebp,r9d
  40cba4:	add    ebp,ecx
  40cba6:	movsxd rsi,ebp
  40cba9:	mov    r10,QWORD PTR [r13+rsi*8+0x0]
  40cbae:	mov    QWORD PTR [r13+rsi*8+0x0],r14
  40cbb3:	mov    QWORD PTR [r13+r15*8+0x0],r10
  40cbb8:	mov    ecx,r8d
  40cbbb:	cmp    esi,r11d
  40cbbe:	jl     40cbc3 <getopt@@Base+0x723>
  40cbc0:	mov    ecx,r9d
  40cbc3:	add    ecx,ebp
  40cbc5:	movsxd rdi,ecx
  40cbc8:	mov    rsi,QWORD PTR [r13+rdi*8+0x0]
  40cbcd:	mov    QWORD PTR [r13+rdi*8+0x0],r10
  40cbd2:	mov    QWORD PTR [r13+r15*8+0x0],rsi
  40cbd7:	mov    ebp,r8d
  40cbda:	cmp    edi,r11d
  40cbdd:	jl     40cbe2 <getopt@@Base+0x742>
  40cbdf:	mov    ebp,r9d
  40cbe2:	add    ebp,ecx
  40cbe4:	movsxd rbx,ebp
  40cbe7:	mov    rdi,QWORD PTR [r13+rbx*8+0x0]
  40cbec:	mov    QWORD PTR [r13+rbx*8+0x0],rsi
  40cbf1:	mov    QWORD PTR [r13+r15*8+0x0],rdi
  40cbf6:	mov    ecx,r8d
  40cbf9:	cmp    ebx,r11d
  40cbfc:	jl     40cb80 <getopt@@Base+0x6e0>
  40cbfe:	mov    ecx,r9d
  40cc01:	jmp    40cb80 <getopt@@Base+0x6e0>
  40cc06:	test   eax,eax
  40cc08:	je     40cb3a <getopt@@Base+0x69a>
  40cc0e:	mov    edx,eax
  40cc10:	cmp    ecx,r11d
  40cc13:	mov    esi,r9d
  40cc16:	cmovl  esi,r8d
  40cc1a:	add    ecx,esi
  40cc1c:	movsxd rsi,ecx
  40cc1f:	mov    rdi,QWORD PTR [r13+rsi*8+0x0]
  40cc24:	mov    QWORD PTR [r13+rsi*8+0x0],r14
  40cc29:	mov    QWORD PTR [r13+r15*8+0x0],rdi
  40cc2e:	mov    r14,rdi
  40cc31:	dec    edx
  40cc33:	jne    40cc10 <getopt@@Base+0x770>
  40cc35:	jmp    40cb3a <getopt@@Base+0x69a>
  40cc3a:	mov    ecx,DWORD PTR [rsp+0x8]
  40cc3e:	add    ecx,DWORD PTR [rsp+0x24]
  40cc42:	sub    ecx,r11d
  40cc45:	lea    rax,[rip+0x97e8]        # 416434 <optind@@Base>
  40cc4c:	mov    DWORD PTR [rax],ecx
  40cc4e:	jmp    40ca91 <getopt@@Base+0x5f1>
  40cc53:	mov    rbx,QWORD PTR [rsp+0x10]
  40cc58:	jmp    40cc7f <getopt@@Base+0x7df>
  40cc5a:	movsx  esi,r14b
  40cc5e:	mov    rbx,QWORD PTR [rsp+0x10]
  40cc63:	mov    rdi,rbx
  40cc66:	call   402150 <strchr@plt>
  40cc6b:	mov    r9d,DWORD PTR [rsp+0x8]
  40cc70:	mov    rdx,QWORD PTR [rsp+0x38]
  40cc75:	xor    r8d,r8d
  40cc78:	test   rax,rax
  40cc7b:	setne  r8b
  40cc7f:	mov    rdi,r13
  40cc82:	mov    rsi,rbx
  40cc85:	mov    rcx,QWORD PTR [rsp+0x48]
  40cc8a:	call   40cef0 <getopt_long_only@@Base+0x10>
  40cc8f:	cmp    eax,0xffffffff
  40cc92:	jne    40cd4b <getopt@@Base+0x8ab>
  40cc98:	mov    rbp,QWORD PTR [rip+0x97a9]        # 416448 <optopt@@Base+0x10>
  40cc9f:	mov    r14b,BYTE PTR [rbp+0x0]
  40cca3:	inc    rbp
  40cca6:	mov    QWORD PTR [rip+0x979b],rbp        # 416448 <optopt@@Base+0x10>
  40ccad:	movsx  esi,r14b
  40ccb1:	cmp    sil,0x3a
  40ccb5:	je     40cd70 <getopt@@Base+0x8d0>
  40ccbb:	cmp    r14b,0x2d
  40ccbf:	jne    40cccb <getopt@@Base+0x82b>
  40ccc1:	cmp    BYTE PTR [rbp+0x0],0x0
  40ccc5:	jne    40cd79 <getopt@@Base+0x8d9>
  40cccb:	mov    rdi,QWORD PTR [rsp+0x10]
  40ccd0:	mov    ebx,esi
  40ccd2:	call   402150 <strchr@plt>
  40ccd7:	test   rax,rax
  40ccda:	je     40cd5b <getopt@@Base+0x8bb>
  40ccdc:	mov    cl,BYTE PTR [rax+0x1]
  40ccdf:	mov    rdx,QWORD PTR [rsp+0x38]
  40cce4:	test   rdx,rdx
  40cce7:	je     40cdcf <getopt@@Base+0x92f>
  40cced:	cmp    r14b,0x57
  40ccf1:	jne    40cdcf <getopt@@Base+0x92f>
  40ccf7:	cmp    cl,0x3b
  40ccfa:	jne    40cdcf <getopt@@Base+0x92f>
  40cd00:	cmp    BYTE PTR [rbp+0x0],0x0
  40cd04:	mov    rbp,QWORD PTR [rsp+0x10]
  40cd09:	mov    rcx,QWORD PTR [rsp+0x48]
  40cd0e:	mov    r9d,DWORD PTR [rsp+0x8]
  40cd13:	jne    40cd33 <getopt@@Base+0x893>
  40cd15:	movsxd rax,DWORD PTR [r15]
  40cd18:	lea    esi,[rax+0x1]
  40cd1b:	mov    DWORD PTR [r15],esi
  40cd1e:	cmp    esi,r12d
  40cd21:	jge    40cdf9 <getopt@@Base+0x959>
  40cd27:	mov    rax,QWORD PTR [r13+rax*8+0x8]
  40cd2c:	mov    QWORD PTR [rip+0x9715],rax        # 416448 <optopt@@Base+0x10>
  40cd33:	mov    DWORD PTR [rip+0x9713],0x2        # 416450 <optopt@@Base+0x18>
  40cd3d:	mov    rdi,r13
  40cd40:	mov    rsi,rbp
  40cd43:	xor    r8d,r8d
  40cd46:	call   40cef0 <getopt_long_only@@Base+0x10>
  40cd4b:	lea    rcx,[rip+0x5c0c]        # 41295e <getopt_long_only@@Base+0x5a7e>
  40cd52:	mov    QWORD PTR [rip+0x96ef],rcx        # 416448 <optopt@@Base+0x10>
  40cd59:	jmp    40cdc0 <getopt@@Base+0x920>
  40cd5b:	cmp    r14b,0x2d
  40cd5f:	mov    eax,0xffffffff
  40cd64:	mov    esi,ebx
  40cd66:	jne    40cd70 <getopt@@Base+0x8d0>
  40cd68:	cmp    BYTE PTR [rbp+0x0],0x0
  40cd6c:	jne    40cd79 <getopt@@Base+0x8d9>
  40cd6e:	jmp    40cdc0 <getopt@@Base+0x920>
  40cd70:	cmp    BYTE PTR [rbp+0x0],0x0
  40cd74:	jne    40cd79 <getopt@@Base+0x8d9>
  40cd76:	inc    DWORD PTR [r15]
  40cd79:	lea    rax,[rip+0x96b0]        # 416430 <opterr@@Base>
  40cd80:	cmp    DWORD PTR [rax],0x0
  40cd83:	je     40cdb2 <getopt@@Base+0x912>
  40cd85:	mov    rax,QWORD PTR [rsp+0x10]
  40cd8a:	cmp    BYTE PTR [rax],0x3a
  40cd8d:	je     40cdb2 <getopt@@Base+0x912>
  40cd8f:	cmp    QWORD PTR [rsp+0x50],0x0
  40cd95:	lea    rax,[rip+0x5e24]        # 412bc0 <getopt_long_only@@Base+0x5ce0>
  40cd9c:	lea    rdi,[rip+0x5e3d]        # 412be0 <getopt_long_only@@Base+0x5d00>
  40cda3:	cmovne rdi,rax
  40cda7:	xor    eax,eax
  40cda9:	mov    ebx,esi
  40cdab:	call   402170 <warnx@plt>
  40cdb0:	mov    esi,ebx
  40cdb2:	lea    rax,[rip+0x967f]        # 416438 <optopt@@Base>
  40cdb9:	mov    DWORD PTR [rax],esi
  40cdbb:	mov    eax,0x3f
  40cdc0:	add    rsp,0x58
  40cdc4:	pop    rbx
  40cdc5:	pop    r12
  40cdc7:	pop    r13
  40cdc9:	pop    r14
  40cdcb:	pop    r15
  40cdcd:	pop    rbp
  40cdce:	ret    
  40cdcf:	cmp    cl,0x3a
  40cdd2:	jne    40cded <getopt@@Base+0x94d>
  40cdd4:	lea    rcx,[rip+0x968d]        # 416468 <optarg@@Base>
  40cddb:	mov    QWORD PTR [rcx],0x0
  40cde2:	cmp    BYTE PTR [rbp+0x0],0x0
  40cde6:	je     40ce4d <getopt@@Base+0x9ad>
  40cde8:	mov    QWORD PTR [rcx],rbp
  40cdeb:	jmp    40ce69 <getopt@@Base+0x9c9>
  40cded:	cmp    BYTE PTR [rbp+0x0],0x0
  40cdf1:	jne    40ce7a <getopt@@Base+0x9da>
  40cdf7:	jmp    40ce77 <getopt@@Base+0x9d7>
  40cdf9:	lea    rax,[rip+0x5b5e]        # 41295e <getopt_long_only@@Base+0x5a7e>
  40ce00:	mov    QWORD PTR [rip+0x9641],rax        # 416448 <optopt@@Base+0x10>
  40ce07:	lea    rax,[rip+0x9622]        # 416430 <opterr@@Base>
  40ce0e:	cmp    DWORD PTR [rax],0x0
  40ce11:	je     40ce2c <getopt@@Base+0x98c>
  40ce13:	cmp    BYTE PTR [rbp+0x0],0x3a
  40ce17:	je     40ce2c <getopt@@Base+0x98c>
  40ce19:	lea    rdi,[rip+0x5de0]        # 412c00 <getopt_long_only@@Base+0x5d20>
  40ce20:	mov    esi,0x57
  40ce25:	xor    eax,eax
  40ce27:	call   402170 <warnx@plt>
  40ce2c:	lea    rax,[rip+0x9605]        # 416438 <optopt@@Base>
  40ce33:	mov    DWORD PTR [rax],0x57
  40ce39:	xor    eax,eax
  40ce3b:	cmp    BYTE PTR [rbp+0x0],0x3a
  40ce3f:	setne  al
  40ce42:	lea    eax,[rax+rax*4]
  40ce45:	add    eax,0x3a
  40ce48:	jmp    40cdc0 <getopt@@Base+0x920>
  40ce4d:	cmp    BYTE PTR [rax+0x2],0x3a
  40ce51:	je     40ce69 <getopt@@Base+0x9c9>
  40ce53:	movsxd rax,DWORD PTR [r15]
  40ce56:	lea    edx,[rax+0x1]
  40ce59:	mov    DWORD PTR [r15],edx
  40ce5c:	cmp    edx,r12d
  40ce5f:	jge    40ce81 <getopt@@Base+0x9e1>
  40ce61:	mov    rax,QWORD PTR [r13+rax*8+0x8]
  40ce66:	mov    QWORD PTR [rcx],rax
  40ce69:	lea    rax,[rip+0x5aee]        # 41295e <getopt_long_only@@Base+0x5a7e>
  40ce70:	mov    QWORD PTR [rip+0x95d1],rax        # 416448 <optopt@@Base+0x10>
  40ce77:	inc    DWORD PTR [r15]
  40ce7a:	mov    eax,ebx
  40ce7c:	jmp    40cdc0 <getopt@@Base+0x920>
  40ce81:	lea    rax,[rip+0x5ad6]        # 41295e <getopt_long_only@@Base+0x5a7e>
  40ce88:	mov    QWORD PTR [rip+0x95b9],rax        # 416448 <optopt@@Base+0x10>
  40ce8f:	lea    rax,[rip+0x959a]        # 416430 <opterr@@Base>
  40ce96:	cmp    DWORD PTR [rax],0x0
  40ce99:	mov    rbp,QWORD PTR [rsp+0x10]
  40ce9e:	je     40ceb6 <getopt@@Base+0xa16>
  40cea0:	cmp    BYTE PTR [rbp+0x0],0x3a
  40cea4:	je     40ceb6 <getopt@@Base+0xa16>
  40cea6:	lea    rdi,[rip+0x5d53]        # 412c00 <getopt_long_only@@Base+0x5d20>
  40cead:	mov    esi,ebx
  40ceaf:	xor    eax,eax
  40ceb1:	call   402170 <warnx@plt>
  40ceb6:	lea    rax,[rip+0x957b]        # 416438 <optopt@@Base>
  40cebd:	mov    DWORD PTR [rax],ebx
  40cebf:	jmp    40ce39 <getopt@@Base+0x999>
  40cec4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40cece:	xchg   ax,ax

000000000040ced0 <getopt_long@@Base>:
  40ced0:	mov    r9d,0x1
  40ced6:	jmp    40c4b0 <getopt@@Base+0x10>
  40cedb:	nop    DWORD PTR [rax+rax*1+0x0]

000000000040cee0 <getopt_long_only@@Base>:
  40cee0:	mov    r9d,0x5
  40cee6:	jmp    40c4b0 <getopt@@Base+0x10>
  40ceeb:	nop    DWORD PTR [rax+rax*1+0x0]
  40cef0:	push   rbp
  40cef1:	push   r15
  40cef3:	push   r14
  40cef5:	push   r13
  40cef7:	push   r12
  40cef9:	push   rbx
  40cefa:	sub    rsp,0x58
  40cefe:	mov    DWORD PTR [rsp+0x3c],r9d
  40cf03:	mov    DWORD PTR [rsp+0x10],r8d
  40cf08:	mov    QWORD PTR [rsp+0x50],rcx
  40cf0d:	mov    r15,rdx
  40cf10:	mov    r13,rsi
  40cf13:	mov    r14,rdi
  40cf16:	mov    rbx,QWORD PTR [rip+0x952b]        # 416448 <optopt@@Base+0x10>
  40cf1d:	movsxd rax,DWORD PTR [rip+0x952c]        # 416450 <optopt@@Base+0x18>
  40cf24:	cmp    rax,0x2
  40cf28:	ja     40cf37 <getopt_long_only@@Base+0x57>
  40cf2a:	lea    rcx,[rip+0x7e87]        # 414db8 <getopt_long_only@@Base+0x7ed8>
  40cf31:	mov    rbp,QWORD PTR [rcx+rax*8]
  40cf35:	jmp    40cf3e <getopt_long_only@@Base+0x5e>
  40cf37:	lea    rbp,[rip+0x5a20]        # 41295e <getopt_long_only@@Base+0x5a7e>
  40cf3e:	lea    rcx,[rip+0x94ef]        # 416434 <optind@@Base>
  40cf45:	mov    eax,DWORD PTR [rcx]
  40cf47:	mov    QWORD PTR [rsp+0x30],rax
  40cf4c:	inc    eax
  40cf4e:	mov    DWORD PTR [rcx],eax
  40cf50:	mov    rdi,rbx
  40cf53:	mov    esi,0x3d
  40cf58:	call   402150 <strchr@plt>
  40cf5d:	test   rax,rax
  40cf60:	mov    QWORD PTR [rsp+0x18],rbp
  40cf65:	mov    QWORD PTR [rsp+0x48],r14
  40cf6a:	je     40cf77 <getopt_long_only@@Base+0x97>
  40cf6c:	mov    r12,rax
  40cf6f:	sub    r12,rbx
  40cf72:	inc    rax
  40cf75:	jmp    40cf84 <getopt_long_only@@Base+0xa4>
  40cf77:	mov    rdi,rbx
  40cf7a:	call   402120 <strlen@plt>
  40cf7f:	mov    r12,rax
  40cf82:	xor    eax,eax
  40cf84:	mov    QWORD PTR [rsp+0x28],rax
  40cf89:	mov    rbp,QWORD PTR [r15]
  40cf8c:	test   rbp,rbp
  40cf8f:	je     40d13b <getopt_long_only@@Base+0x25b>
  40cf95:	mov    QWORD PTR [rsp+0x20],r13
  40cf9a:	movsxd rax,DWORD PTR [rsp+0x30]
  40cf9f:	mov    QWORD PTR [rsp+0x40],rax
  40cfa4:	cmp    DWORD PTR [rsp+0x10],0x0
  40cfa9:	setne  al
  40cfac:	cmp    r12,0x1
  40cfb0:	sete   r14b
  40cfb4:	and    r14b,al
  40cfb7:	mov    QWORD PTR [rsp+0x8],r15
  40cfbc:	add    r15,0x20
  40cfc0:	mov    DWORD PTR [rsp+0x4],0xffffffff
  40cfc8:	xor    r13d,r13d
  40cfcb:	mov    DWORD PTR [rsp+0x14],0x0
  40cfd3:	jmp    40cfef <getopt_long_only@@Base+0x10f>
  40cfd5:	mov    DWORD PTR [rsp+0x14],0x1
  40cfdd:	nop    DWORD PTR [rax]
  40cfe0:	mov    rbp,QWORD PTR [r15]
  40cfe3:	inc    r13d
  40cfe6:	add    r15,0x20
  40cfea:	test   rbp,rbp
  40cfed:	je     40d06e <getopt_long_only@@Base+0x18e>
  40cfef:	mov    rdi,rbx
  40cff2:	mov    rsi,rbp
  40cff5:	mov    rdx,r12
  40cff8:	call   402090 <strncmp@plt>
  40cffd:	test   eax,eax
  40cfff:	jne    40cfe0 <getopt_long_only@@Base+0x100>
  40d001:	mov    rdi,rbp
  40d004:	call   402120 <strlen@plt>
  40d009:	cmp    rax,r12
  40d00c:	je     40d0b1 <getopt_long_only@@Base+0x1d1>
  40d012:	test   r14b,r14b
  40d015:	jne    40cfe0 <getopt_long_only@@Base+0x100>
  40d017:	mov    eax,DWORD PTR [rsp+0x4]
  40d01b:	cmp    eax,0xffffffff
  40d01e:	je     40d064 <getopt_long_only@@Base+0x184>
  40d020:	test   BYTE PTR [rsp+0x3c],0x4
  40d025:	jne    40cfd5 <getopt_long_only@@Base+0xf5>
  40d027:	mov    ecx,DWORD PTR [r15-0x18]
  40d02b:	cdqe   
  40d02d:	shl    rax,0x5
  40d031:	mov    rdx,QWORD PTR [rsp+0x8]
  40d036:	cmp    ecx,DWORD PTR [rdx+rax*1+0x8]
  40d03a:	jne    40cfd5 <getopt_long_only@@Base+0xf5>
  40d03c:	mov    rcx,QWORD PTR [r15-0x10]
  40d040:	mov    rdx,QWORD PTR [rsp+0x8]
  40d045:	cmp    rcx,QWORD PTR [rdx+rax*1+0x10]
  40d04a:	jne    40cfd5 <getopt_long_only@@Base+0xf5>
  40d04c:	mov    ecx,DWORD PTR [r15-0x8]
  40d050:	mov    rdx,QWORD PTR [rsp+0x8]
  40d055:	cmp    ecx,DWORD PTR [rdx+rax*1+0x18]
  40d059:	jne    40cfd5 <getopt_long_only@@Base+0xf5>
  40d05f:	jmp    40cfe0 <getopt_long_only@@Base+0x100>
  40d064:	mov    DWORD PTR [rsp+0x4],r13d
  40d069:	jmp    40cfe0 <getopt_long_only@@Base+0x100>
  40d06e:	cmp    DWORD PTR [rsp+0x14],0x0
  40d073:	je     40d0c0 <getopt_long_only@@Base+0x1e0>
  40d075:	lea    rax,[rip+0x93b4]        # 416430 <opterr@@Base>
  40d07c:	cmp    DWORD PTR [rax],0x0
  40d07f:	je     40d180 <getopt_long_only@@Base+0x2a0>
  40d085:	mov    rax,QWORD PTR [rsp+0x20]
  40d08a:	cmp    BYTE PTR [rax],0x3a
  40d08d:	je     40d180 <getopt_long_only@@Base+0x2a0>
  40d093:	lea    rdi,[rip+0x5b96]        # 412c30 <getopt_long_only@@Base+0x5d50>
  40d09a:	mov    rsi,QWORD PTR [rsp+0x18]
  40d09f:	mov    edx,r12d
  40d0a2:	mov    rcx,rbx
  40d0a5:	xor    eax,eax
  40d0a7:	call   402170 <warnx@plt>
  40d0ac:	jmp    40d180 <getopt_long_only@@Base+0x2a0>
  40d0b1:	mov    eax,r13d
  40d0b4:	mov    r14,QWORD PTR [rsp+0x8]
  40d0b9:	mov    r13,QWORD PTR [rsp+0x20]
  40d0be:	jmp    40d0d3 <getopt_long_only@@Base+0x1f3>
  40d0c0:	mov    eax,DWORD PTR [rsp+0x4]
  40d0c4:	cmp    eax,0xffffffff
  40d0c7:	mov    r14,QWORD PTR [rsp+0x8]
  40d0cc:	mov    r13,QWORD PTR [rsp+0x20]
  40d0d1:	je     40d13b <getopt_long_only@@Base+0x25b>
  40d0d3:	mov    esi,eax
  40d0d5:	movsxd rbp,eax
  40d0d8:	shl    rbp,0x5
  40d0dc:	mov    eax,DWORD PTR [r14+rbp*1+0x8]
  40d0e1:	cmp    QWORD PTR [rsp+0x28],0x0
  40d0e7:	je     40d1a1 <getopt_long_only@@Base+0x2c1>
  40d0ed:	test   eax,eax
  40d0ef:	jne    40d1a1 <getopt_long_only@@Base+0x2c1>
  40d0f5:	lea    rax,[rip+0x9334]        # 416430 <opterr@@Base>
  40d0fc:	cmp    DWORD PTR [rax],0x0
  40d0ff:	je     40d121 <getopt_long_only@@Base+0x241>
  40d101:	cmp    BYTE PTR [r13+0x0],0x3a
  40d106:	je     40d121 <getopt_long_only@@Base+0x241>
  40d108:	lea    rdi,[rip+0x5b41]        # 412c50 <getopt_long_only@@Base+0x5d70>
  40d10f:	mov    rsi,QWORD PTR [rsp+0x18]
  40d114:	mov    edx,r12d
  40d117:	mov    rcx,rbx
  40d11a:	xor    eax,eax
  40d11c:	call   402170 <warnx@plt>
  40d121:	xor    eax,eax
  40d123:	cmp    QWORD PTR [r14+rbp*1+0x10],0x0
  40d129:	jne    40d130 <getopt_long_only@@Base+0x250>
  40d12b:	mov    eax,DWORD PTR [r14+rbp*1+0x18]
  40d130:	lea    rcx,[rip+0x9301]        # 416438 <optopt@@Base>
  40d137:	mov    DWORD PTR [rcx],eax
  40d139:	jmp    40d18d <getopt_long_only@@Base+0x2ad>
  40d13b:	cmp    DWORD PTR [rsp+0x10],0x0
  40d140:	je     40d157 <getopt_long_only@@Base+0x277>
  40d142:	lea    rax,[rip+0x92eb]        # 416434 <optind@@Base>
  40d149:	mov    rcx,QWORD PTR [rsp+0x30]
  40d14e:	mov    DWORD PTR [rax],ecx
  40d150:	mov    eax,0xffffffff
  40d155:	jmp    40d192 <getopt_long_only@@Base+0x2b2>
  40d157:	lea    rax,[rip+0x92d2]        # 416430 <opterr@@Base>
  40d15e:	cmp    DWORD PTR [rax],0x0
  40d161:	je     40d180 <getopt_long_only@@Base+0x2a0>
  40d163:	cmp    BYTE PTR [r13+0x0],0x3a
  40d168:	je     40d180 <getopt_long_only@@Base+0x2a0>
  40d16a:	lea    rdi,[rip+0x5b3f]        # 412cb0 <getopt_long_only@@Base+0x5dd0>
  40d171:	mov    rsi,QWORD PTR [rsp+0x18]
  40d176:	mov    rdx,rbx
  40d179:	xor    eax,eax
  40d17b:	call   402170 <warnx@plt>
  40d180:	lea    rax,[rip+0x92b1]        # 416438 <optopt@@Base>
  40d187:	mov    DWORD PTR [rax],0x0
  40d18d:	mov    eax,0x3f
  40d192:	add    rsp,0x58
  40d196:	pop    rbx
  40d197:	pop    r12
  40d199:	pop    r13
  40d19b:	pop    r14
  40d19d:	pop    r15
  40d19f:	pop    rbp
  40d1a0:	ret    
  40d1a1:	lea    ecx,[rax-0x1]
  40d1a4:	cmp    ecx,0x1
  40d1a7:	ja     40d279 <getopt_long_only@@Base+0x399>
  40d1ad:	mov    rdx,QWORD PTR [rsp+0x28]
  40d1b2:	test   rdx,rdx
  40d1b5:	je     40d1cb <getopt_long_only@@Base+0x2eb>
  40d1b7:	lea    rcx,[rip+0x92aa]        # 416468 <optarg@@Base>
  40d1be:	mov    QWORD PTR [rcx],rdx
  40d1c1:	cmp    eax,0x1
  40d1c4:	je     40d20d <getopt_long_only@@Base+0x32d>
  40d1c6:	jmp    40d279 <getopt_long_only@@Base+0x399>
  40d1cb:	cmp    eax,0x1
  40d1ce:	jne    40d279 <getopt_long_only@@Base+0x399>
  40d1d4:	lea    rax,[r14+rbp*1]
  40d1d8:	add    rax,0x8
  40d1dc:	mov    rdx,QWORD PTR [rsp+0x30]
  40d1e1:	add    edx,0x2
  40d1e4:	lea    rcx,[rip+0x9249]        # 416434 <optind@@Base>
  40d1eb:	mov    DWORD PTR [rcx],edx
  40d1ed:	mov    rcx,QWORD PTR [rsp+0x48]
  40d1f2:	mov    rdx,QWORD PTR [rsp+0x40]
  40d1f7:	mov    rcx,QWORD PTR [rcx+rdx*8+0x8]
  40d1fc:	lea    rdx,[rip+0x9265]        # 416468 <optarg@@Base>
  40d203:	mov    QWORD PTR [rdx],rcx
  40d206:	mov    eax,DWORD PTR [rax]
  40d208:	cmp    eax,0x1
  40d20b:	jne    40d279 <getopt_long_only@@Base+0x399>
  40d20d:	lea    rax,[rip+0x9254]        # 416468 <optarg@@Base>
  40d214:	cmp    QWORD PTR [rax],0x0
  40d218:	jne    40d279 <getopt_long_only@@Base+0x399>
  40d21a:	lea    rax,[rip+0x920f]        # 416430 <opterr@@Base>
  40d221:	cmp    DWORD PTR [rax],0x0
  40d224:	je     40d243 <getopt_long_only@@Base+0x363>
  40d226:	cmp    BYTE PTR [r13+0x0],0x3a
  40d22b:	je     40d243 <getopt_long_only@@Base+0x363>
  40d22d:	lea    rdi,[rip+0x5a4c]        # 412c80 <getopt_long_only@@Base+0x5da0>
  40d234:	mov    rsi,QWORD PTR [rsp+0x18]
  40d239:	mov    rdx,rbx
  40d23c:	xor    eax,eax
  40d23e:	call   402170 <warnx@plt>
  40d243:	xor    eax,eax
  40d245:	cmp    QWORD PTR [r14+rbp*1+0x10],0x0
  40d24b:	jne    40d252 <getopt_long_only@@Base+0x372>
  40d24d:	mov    eax,DWORD PTR [r14+rbp*1+0x18]
  40d252:	lea    rcx,[rip+0x91df]        # 416438 <optopt@@Base>
  40d259:	lea    rdx,[rip+0x91d4]        # 416434 <optind@@Base>
  40d260:	dec    DWORD PTR [rdx]
  40d262:	mov    DWORD PTR [rcx],eax
  40d264:	xor    eax,eax
  40d266:	cmp    BYTE PTR [r13+0x0],0x3a
  40d26b:	setne  al
  40d26e:	lea    eax,[rax+rax*4]
  40d271:	add    eax,0x3a
  40d274:	jmp    40d192 <getopt_long_only@@Base+0x2b2>
  40d279:	mov    rax,QWORD PTR [rsp+0x50]
  40d27e:	test   rax,rax
  40d281:	je     40d285 <getopt_long_only@@Base+0x3a5>
  40d283:	mov    DWORD PTR [rax],esi
  40d285:	mov    rcx,QWORD PTR [r14+rbp*1+0x10]
  40d28a:	mov    eax,DWORD PTR [r14+rbp*1+0x18]
  40d28f:	test   rcx,rcx
  40d292:	je     40d192 <getopt_long_only@@Base+0x2b2>
  40d298:	mov    DWORD PTR [rcx],eax
  40d29a:	xor    eax,eax
  40d29c:	jmp    40d192 <getopt_long_only@@Base+0x2b2>
  40d2a1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40d2ab:	nop    DWORD PTR [rax+rax*1+0x0]
  40d2b0:	endbr64 
  40d2b4:	push   r15
  40d2b6:	lea    r15,[rip+0x7a63]        # 414d20 <getopt_long_only@@Base+0x7e40>
  40d2bd:	push   r14
  40d2bf:	mov    r14,rdx
  40d2c2:	push   r13
  40d2c4:	mov    r13,rsi
  40d2c7:	push   r12
  40d2c9:	mov    r12d,edi
  40d2cc:	push   rbp
  40d2cd:	lea    rbp,[rip+0x7a54]        # 414d28 <getopt_long_only@@Base+0x7e48>
  40d2d4:	push   rbx
  40d2d5:	sub    rbp,r15
  40d2d8:	sub    rsp,0x8
  40d2dc:	call   402000 <Mat_VarGetNumberOfFields@plt-0x30>
  40d2e1:	sar    rbp,0x3
  40d2e5:	je     40d306 <getopt_long_only@@Base+0x426>
  40d2e7:	xor    ebx,ebx
  40d2e9:	nop    DWORD PTR [rax+0x0]
  40d2f0:	mov    rdx,r14
  40d2f3:	mov    rsi,r13
  40d2f6:	mov    edi,r12d
  40d2f9:	call   QWORD PTR [r15+rbx*8]
  40d2fd:	add    rbx,0x1
  40d301:	cmp    rbp,rbx
  40d304:	jne    40d2f0 <getopt_long_only@@Base+0x410>
  40d306:	add    rsp,0x8
  40d30a:	pop    rbx
  40d30b:	pop    rbp
  40d30c:	pop    r12
  40d30e:	pop    r13
  40d310:	pop    r14
  40d312:	pop    r15
  40d314:	ret    
  40d315:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40d320:	endbr64 
  40d324:	ret    

Disassembly of section .fini:

000000000040d328 <.fini>:
  40d328:	endbr64 
  40d32c:	sub    rsp,0x8
  40d330:	add    rsp,0x8
  40d334:	ret    
