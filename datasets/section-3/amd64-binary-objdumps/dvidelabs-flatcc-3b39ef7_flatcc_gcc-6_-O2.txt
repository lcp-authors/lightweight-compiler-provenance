
../repos/dvidelabs-flatcc-3b39ef7/bin/flatcc:     file format elf64-x86-64


Disassembly of section .init:

0000000000405000 <.init>:
  405000:	endbr64 
  405004:	sub    rsp,0x8
  405008:	mov    rax,QWORD PTR [rip+0x4bfd1]        # 450fe0 <__gmon_start__>
  40500f:	test   rax,rax
  405012:	je     405016 <__ctype_toupper_loc@plt-0x1a>
  405014:	call   rax
  405016:	add    rsp,0x8
  40501a:	ret    

Disassembly of section .plt:

0000000000405020 <__ctype_toupper_loc@plt-0x10>:
  405020:	push   QWORD PTR [rip+0x4bfe2]        # 451008 <fb_value_set_missing@@Base+0x71e0>
  405026:	jmp    QWORD PTR [rip+0x4bfe4]        # 451010 <fb_value_set_missing@@Base+0x71e8>
  40502c:	nop    DWORD PTR [rax+0x0]

0000000000405030 <__ctype_toupper_loc@plt>:
  405030:	jmp    QWORD PTR [rip+0x4bfe2]        # 451018 <__ctype_toupper_loc@GLIBC_2.3>
  405036:	push   0x0
  40503b:	jmp    405020 <__ctype_toupper_loc@plt-0x10>

0000000000405040 <free@plt>:
  405040:	jmp    QWORD PTR [rip+0x4bfda]        # 451020 <free@GLIBC_2.2.5>
  405046:	push   0x1
  40504b:	jmp    405020 <__ctype_toupper_loc@plt-0x10>

0000000000405050 <__vfprintf_chk@plt>:
  405050:	jmp    QWORD PTR [rip+0x4bfd2]        # 451028 <__vfprintf_chk@GLIBC_2.3.4>
  405056:	push   0x2
  40505b:	jmp    405020 <__ctype_toupper_loc@plt-0x10>

0000000000405060 <strncpy@plt>:
  405060:	jmp    QWORD PTR [rip+0x4bfca]        # 451030 <strncpy@GLIBC_2.2.5>
  405066:	push   0x3
  40506b:	jmp    405020 <__ctype_toupper_loc@plt-0x10>

0000000000405070 <strncmp@plt>:
  405070:	jmp    QWORD PTR [rip+0x4bfc2]        # 451038 <strncmp@GLIBC_2.2.5>
  405076:	push   0x4
  40507b:	jmp    405020 <__ctype_toupper_loc@plt-0x10>

0000000000405080 <qsort@plt>:
  405080:	jmp    QWORD PTR [rip+0x4bfba]        # 451040 <qsort@GLIBC_2.2.5>
  405086:	push   0x5
  40508b:	jmp    405020 <__ctype_toupper_loc@plt-0x10>

0000000000405090 <fread@plt>:
  405090:	jmp    QWORD PTR [rip+0x4bfb2]        # 451048 <fread@GLIBC_2.2.5>
  405096:	push   0x6
  40509b:	jmp    405020 <__ctype_toupper_loc@plt-0x10>

00000000004050a0 <strtod@plt>:
  4050a0:	jmp    QWORD PTR [rip+0x4bfaa]        # 451050 <strtod@GLIBC_2.2.5>
  4050a6:	push   0x7
  4050ab:	jmp    405020 <__ctype_toupper_loc@plt-0x10>

00000000004050b0 <fclose@plt>:
  4050b0:	jmp    QWORD PTR [rip+0x4bfa2]        # 451058 <fclose@GLIBC_2.2.5>
  4050b6:	push   0x8
  4050bb:	jmp    405020 <__ctype_toupper_loc@plt-0x10>

00000000004050c0 <strlen@plt>:
  4050c0:	jmp    QWORD PTR [rip+0x4bf9a]        # 451060 <strlen@GLIBC_2.2.5>
  4050c6:	push   0x9
  4050cb:	jmp    405020 <__ctype_toupper_loc@plt-0x10>

00000000004050d0 <__stack_chk_fail@plt>:
  4050d0:	jmp    QWORD PTR [rip+0x4bf92]        # 451068 <__stack_chk_fail@GLIBC_2.4>
  4050d6:	push   0xa
  4050db:	jmp    405020 <__ctype_toupper_loc@plt-0x10>

00000000004050e0 <strchr@plt>:
  4050e0:	jmp    QWORD PTR [rip+0x4bf8a]        # 451070 <strchr@GLIBC_2.2.5>
  4050e6:	push   0xb
  4050eb:	jmp    405020 <__ctype_toupper_loc@plt-0x10>

00000000004050f0 <rewind@plt>:
  4050f0:	jmp    QWORD PTR [rip+0x4bf82]        # 451078 <rewind@GLIBC_2.2.5>
  4050f6:	push   0xc
  4050fb:	jmp    405020 <__ctype_toupper_loc@plt-0x10>

0000000000405100 <__assert_fail@plt>:
  405100:	jmp    QWORD PTR [rip+0x4bf7a]        # 451080 <__assert_fail@GLIBC_2.2.5>
  405106:	push   0xd
  40510b:	jmp    405020 <__ctype_toupper_loc@plt-0x10>

0000000000405110 <memset@plt>:
  405110:	jmp    QWORD PTR [rip+0x4bf72]        # 451088 <memset@GLIBC_2.2.5>
  405116:	push   0xe
  40511b:	jmp    405020 <__ctype_toupper_loc@plt-0x10>

0000000000405120 <memchr@plt>:
  405120:	jmp    QWORD PTR [rip+0x4bf6a]        # 451090 <memchr@GLIBC_2.2.5>
  405126:	push   0xf
  40512b:	jmp    405020 <__ctype_toupper_loc@plt-0x10>

0000000000405130 <memcmp@plt>:
  405130:	jmp    QWORD PTR [rip+0x4bf62]        # 451098 <memcmp@GLIBC_2.2.5>
  405136:	push   0x10
  40513b:	jmp    405020 <__ctype_toupper_loc@plt-0x10>

0000000000405140 <calloc@plt>:
  405140:	jmp    QWORD PTR [rip+0x4bf5a]        # 4510a0 <calloc@GLIBC_2.2.5>
  405146:	push   0x11
  40514b:	jmp    405020 <__ctype_toupper_loc@plt-0x10>

0000000000405150 <strcmp@plt>:
  405150:	jmp    QWORD PTR [rip+0x4bf52]        # 4510a8 <strcmp@GLIBC_2.2.5>
  405156:	push   0x12
  40515b:	jmp    405020 <__ctype_toupper_loc@plt-0x10>

0000000000405160 <ftell@plt>:
  405160:	jmp    QWORD PTR [rip+0x4bf4a]        # 4510b0 <ftell@GLIBC_2.2.5>
  405166:	push   0x13
  40516b:	jmp    405020 <__ctype_toupper_loc@plt-0x10>

0000000000405170 <memcpy@plt>:
  405170:	jmp    QWORD PTR [rip+0x4bf42]        # 4510b8 <memcpy@GLIBC_2.14>
  405176:	push   0x14
  40517b:	jmp    405020 <__ctype_toupper_loc@plt-0x10>

0000000000405180 <malloc@plt>:
  405180:	jmp    QWORD PTR [rip+0x4bf3a]        # 4510c0 <malloc@GLIBC_2.2.5>
  405186:	push   0x15
  40518b:	jmp    405020 <__ctype_toupper_loc@plt-0x10>

0000000000405190 <fseek@plt>:
  405190:	jmp    QWORD PTR [rip+0x4bf32]        # 4510c8 <fseek@GLIBC_2.2.5>
  405196:	push   0x16
  40519b:	jmp    405020 <__ctype_toupper_loc@plt-0x10>

00000000004051a0 <__vsnprintf_chk@plt>:
  4051a0:	jmp    QWORD PTR [rip+0x4bf2a]        # 4510d0 <__vsnprintf_chk@GLIBC_2.3.4>
  4051a6:	push   0x17
  4051ab:	jmp    405020 <__ctype_toupper_loc@plt-0x10>

00000000004051b0 <realloc@plt>:
  4051b0:	jmp    QWORD PTR [rip+0x4bf22]        # 4510d8 <realloc@GLIBC_2.2.5>
  4051b6:	push   0x18
  4051bb:	jmp    405020 <__ctype_toupper_loc@plt-0x10>

00000000004051c0 <__printf_chk@plt>:
  4051c0:	jmp    QWORD PTR [rip+0x4bf1a]        # 4510e0 <__printf_chk@GLIBC_2.3.4>
  4051c6:	push   0x19
  4051cb:	jmp    405020 <__ctype_toupper_loc@plt-0x10>

00000000004051d0 <fopen@plt>:
  4051d0:	jmp    QWORD PTR [rip+0x4bf12]        # 4510e8 <fopen@GLIBC_2.2.5>
  4051d6:	push   0x1a
  4051db:	jmp    405020 <__ctype_toupper_loc@plt-0x10>

00000000004051e0 <exit@plt>:
  4051e0:	jmp    QWORD PTR [rip+0x4bf0a]        # 4510f0 <exit@GLIBC_2.2.5>
  4051e6:	push   0x1b
  4051eb:	jmp    405020 <__ctype_toupper_loc@plt-0x10>

00000000004051f0 <fwrite@plt>:
  4051f0:	jmp    QWORD PTR [rip+0x4bf02]        # 4510f8 <fwrite@GLIBC_2.2.5>
  4051f6:	push   0x1c
  4051fb:	jmp    405020 <__ctype_toupper_loc@plt-0x10>

0000000000405200 <__fprintf_chk@plt>:
  405200:	jmp    QWORD PTR [rip+0x4befa]        # 451100 <__fprintf_chk@GLIBC_2.3.4>
  405206:	push   0x1d
  40520b:	jmp    405020 <__ctype_toupper_loc@plt-0x10>

0000000000405210 <posix_memalign@plt>:
  405210:	jmp    QWORD PTR [rip+0x4bef2]        # 451108 <posix_memalign@GLIBC_2.2.5>
  405216:	push   0x1e
  40521b:	jmp    405020 <__ctype_toupper_loc@plt-0x10>

0000000000405220 <__sprintf_chk@plt>:
  405220:	jmp    QWORD PTR [rip+0x4beea]        # 451110 <__sprintf_chk@GLIBC_2.3.4>
  405226:	push   0x1f
  40522b:	jmp    405020 <__ctype_toupper_loc@plt-0x10>

Disassembly of section .text:

0000000000405230 <main@@Base-0x130>:
  405230:	sub    rsp,0x8
  405234:	mov    rax,QWORD PTR [rip+0x4bdad]        # 450fe8 <stderr@GLIBC_2.2.5>
  40523b:	lea    rdx,[rip+0x29476]        # 42e6b8 <_IO_stdin_used@@Base+0x16b8>
  405242:	mov    esi,0x1
  405247:	mov    rdi,QWORD PTR [rax]
  40524a:	xor    eax,eax
  40524c:	call   405200 <__fprintf_chk@plt>
  405251:	mov    edi,0x1
  405256:	call   4051e0 <exit@plt>
  40525b:	lea    rcx,[rip+0x40dee]        # 446050 <_IO_stdin_used@@Base+0x19050>
  405262:	lea    rsi,[rip+0x4080f]        # 445a78 <_IO_stdin_used@@Base+0x18a78>
  405269:	lea    rdi,[rip+0x40880]        # 445af0 <_IO_stdin_used@@Base+0x18af0>
  405270:	sub    rsp,0x8
  405274:	mov    edx,0xc3
  405279:	call   405100 <__assert_fail@plt>
  40527e:	sub    rsp,0x8
  405282:	mov    rax,QWORD PTR [rip+0x4bd5f]        # 450fe8 <stderr@GLIBC_2.2.5>
  405289:	lea    rdx,[rip+0x29428]        # 42e6b8 <_IO_stdin_used@@Base+0x16b8>
  405290:	mov    esi,0x1
  405295:	mov    rdi,QWORD PTR [rax]
  405298:	xor    eax,eax
  40529a:	call   405200 <__fprintf_chk@plt>
  40529f:	mov    edi,0x1
  4052a4:	call   4051e0 <exit@plt>
  4052a9:	lea    rcx,[rip+0x43848]        # 448af8 <fb_schema_table_missing@@Base+0x2788>
  4052b0:	lea    rsi,[rip+0x42099]        # 447350 <fb_schema_table_missing@@Base+0xfe0>
  4052b7:	lea    rdi,[rip+0x4348b]        # 448749 <fb_schema_table_missing@@Base+0x23d9>
  4052be:	sub    rsp,0x8
  4052c2:	mov    edx,0x6c
  4052c7:	call   405100 <__assert_fail@plt>
  4052cc:	lea    rcx,[rip+0x448dd]        # 449bb0 <fb_schema_table_missing@@Base+0x3840>
  4052d3:	lea    rsi,[rip+0x43e16]        # 4490f0 <fb_schema_table_missing@@Base+0x2d80>
  4052da:	lea    rdi,[rip+0x31f48]        # 437229 <_IO_stdin_used@@Base+0xa229>
  4052e1:	sub    rsp,0x8
  4052e5:	mov    edx,0x134
  4052ea:	call   405100 <__assert_fail@plt>
  4052ef:	lea    rcx,[rip+0x4484a]        # 449b40 <fb_schema_table_missing@@Base+0x37d0>
  4052f6:	lea    rsi,[rip+0x43df3]        # 4490f0 <fb_schema_table_missing@@Base+0x2d80>
  4052fd:	lea    rdi,[rip+0x31f25]        # 437229 <_IO_stdin_used@@Base+0xa229>
  405304:	sub    rsp,0x8
  405308:	mov    edx,0x2a1
  40530d:	call   405100 <__assert_fail@plt>
  405312:	lea    rcx,[rip+0x44817]        # 449b30 <fb_schema_table_missing@@Base+0x37c0>
  405319:	lea    rsi,[rip+0x43dd0]        # 4490f0 <fb_schema_table_missing@@Base+0x2d80>
  405320:	lea    rdi,[rip+0x31f02]        # 437229 <_IO_stdin_used@@Base+0xa229>
  405327:	sub    rsp,0x8
  40532b:	mov    edx,0x28b
  405330:	call   405100 <__assert_fail@plt>
  405335:	lea    rcx,[rip+0x44754]        # 449a90 <fb_schema_table_missing@@Base+0x3720>
  40533c:	lea    rsi,[rip+0x43dad]        # 4490f0 <fb_schema_table_missing@@Base+0x2d80>
  405343:	lea    rdi,[rip+0x44116]        # 449460 <fb_schema_table_missing@@Base+0x30f0>
  40534a:	sub    rsp,0x8
  40534e:	mov    edx,0x37c
  405353:	call   405100 <__assert_fail@plt>
  405358:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000405360 <main@@Base>:
  405360:	push   r13
  405362:	push   r12
  405364:	push   rbp
  405365:	push   rbx
  405366:	sub    rsp,0x128
  40536d:	mov    rax,QWORD PTR fs:0x28
  405376:	mov    QWORD PTR [rsp+0x118],rax
  40537e:	xor    eax,eax
  405380:	cmp    edi,0x1
  405383:	jle    405727 <main@@Base+0x3c7>
  405389:	mov    ebp,edi
  40538b:	mov    rdi,rsp
  40538e:	mov    r12,rsi
  405391:	movsxd rbx,ebp
  405394:	mov    r13,rsp
  405397:	shl    rbx,0x3
  40539b:	call   406140 <flatcc_init_options@@Base>
  4053a0:	mov    rdi,rbx
  4053a3:	call   405180 <malloc@plt>
  4053a8:	test   rax,rax
  4053ab:	mov    QWORD PTR [rsp+0xf0],rax
  4053b3:	je     405775 <main@@Base+0x415>
  4053b9:	mov    rdi,rbx
  4053bc:	call   405180 <malloc@plt>
  4053c1:	test   rax,rax
  4053c4:	mov    QWORD PTR [rsp+0xf8],rax
  4053cc:	je     40573e <main@@Base+0x3de>
  4053d2:	mov    rdx,rsp
  4053d5:	mov    rsi,r12
  4053d8:	mov    edi,ebp
  4053da:	call   406060 <parse_opts@@Base>
  4053df:	mov    edx,DWORD PTR [rsp+0xbc]
  4053e6:	test   edx,edx
  4053e8:	je     4055f4 <main@@Base+0x294>
  4053ee:	cmp    DWORD PTR [rsp+0xb0],0x0
  4053f6:	jne    40552f <main@@Base+0x1cf>
  4053fc:	mov    eax,DWORD PTR [rsp+0x104]
  405403:	mov    DWORD PTR [rsp+0xb4],0x0
  40540e:	test   eax,eax
  405410:	je     40561c <main@@Base+0x2bc>
  405416:	cmp    QWORD PTR [rsp+0xb8],0x0
  40541f:	jne    40542f <main@@Base+0xcf>
  405421:	cmp    DWORD PTR [rsp+0xc0],0x0
  405429:	je     40563b <main@@Base+0x2db>
  40542f:	cmp    DWORD PTR [rsp+0xd4],0x0
  405437:	je     40568f <main@@Base+0x32f>
  40543d:	cmp    DWORD PTR [rsp+0x80],0x0
  405445:	jne    4056e3 <main@@Base+0x383>
  40544b:	cmp    QWORD PTR [rsp+0x98],0x0
  405454:	jne    40569f <main@@Base+0x33f>
  40545a:	cmp    QWORD PTR [rsp+0x90],0x0
  405463:	je     40548d <main@@Base+0x12d>
  405465:	cmp    QWORD PTR [rsp+0x88],0x0
  40546e:	je     405705 <main@@Base+0x3a5>
  405474:	cmp    DWORD PTR [rsp+0x80],0x0
  40547c:	je     40548d <main@@Base+0x12d>
  40547e:	cmp    QWORD PTR [rsp+0x98],0x0
  405487:	jne    4056c1 <main@@Base+0x361>
  40548d:	test   eax,eax
  40548f:	mov    rbp,QWORD PTR [rsp+0xf8]
  405497:	jle    405581 <main@@Base+0x221>
  40549d:	xor    r12d,r12d
  4054a0:	jmp    4054f5 <main@@Base+0x195>
  4054a2:	nop    WORD PTR [rax+rax*1+0x0]
  4054a8:	mov    rsi,QWORD PTR [rbp+0x0]
  4054ac:	mov    rdi,rax
  4054af:	call   4065d0 <flatcc_parse_file@@Base>
  4054b4:	test   eax,eax
  4054b6:	jne    4055c8 <main@@Base+0x268>
  4054bc:	mov    rdi,rbx
  4054bf:	call   406400 <flatcc_generate_files@@Base>
  4054c4:	test   eax,eax
  4054c6:	jne    4055c8 <main@@Base+0x268>
  4054cc:	mov    rdi,rbx
  4054cf:	add    r12d,0x1
  4054d3:	add    rbp,0x8
  4054d7:	call   406590 <flatcc_destroy_context@@Base>
  4054dc:	cmp    DWORD PTR [rsp+0x104],r12d
  4054e4:	mov    DWORD PTR [rsp+0xa0],0x1
  4054ef:	jle    405581 <main@@Base+0x221>
  4054f5:	mov    rsi,QWORD PTR [rbp+0x0]
  4054f9:	xor    ecx,ecx
  4054fb:	xor    edx,edx
  4054fd:	mov    rdi,r13
  405500:	call   4062a0 <flatcc_create_context@@Base>
  405505:	test   rax,rax
  405508:	mov    rbx,rax
  40550b:	jne    4054a8 <main@@Base+0x148>
  40550d:	mov    rbx,QWORD PTR [rip+0x4bad4]        # 450fe8 <stderr@GLIBC_2.2.5>
  405514:	lea    rdx,[rip+0x28f0d]        # 42e428 <_IO_stdin_used@@Base+0x1428>
  40551b:	mov    esi,0x1
  405520:	xor    eax,eax
  405522:	mov    rdi,QWORD PTR [rbx]
  405525:	call   405200 <__fprintf_chk@plt>
  40552a:	jmp    4055d7 <main@@Base+0x277>
  40552f:	mov    eax,DWORD PTR [rsp+0x104]
  405536:	mov    DWORD PTR [rsp+0xb4],0x1
  405541:	test   eax,eax
  405543:	jne    405416 <main@@Base+0xb6>
  405549:	cmp    DWORD PTR [rsp+0xd4],0x0
  405551:	jne    40561c <main@@Base+0x2bc>
  405557:	xor    ecx,ecx
  405559:	xor    edx,edx
  40555b:	xor    esi,esi
  40555d:	mov    rdi,r13
  405560:	call   4062a0 <flatcc_create_context@@Base>
  405565:	test   rax,rax
  405568:	mov    rbx,rax
  40556b:	je     40550d <main@@Base+0x1ad>
  40556d:	mov    rdi,rax
  405570:	call   406400 <flatcc_generate_files@@Base>
  405575:	test   eax,eax
  405577:	jne    4055c8 <main@@Base+0x268>
  405579:	mov    rdi,rbx
  40557c:	call   406590 <flatcc_destroy_context@@Base>
  405581:	xor    ebx,ebx
  405583:	mov    rdi,QWORD PTR [rsp+0xf0]
  40558b:	call   405040 <free@plt>
  405590:	mov    rdi,QWORD PTR [rsp+0xf8]
  405598:	call   405040 <free@plt>
  40559d:	mov    rcx,QWORD PTR [rsp+0x118]
  4055a5:	xor    rcx,QWORD PTR fs:0x28
  4055ae:	mov    eax,ebx
  4055b0:	jne    405770 <main@@Base+0x410>
  4055b6:	add    rsp,0x128
  4055bd:	pop    rbx
  4055be:	pop    rbp
  4055bf:	pop    r12
  4055c1:	pop    r13
  4055c3:	ret    
  4055c4:	nop    DWORD PTR [rax+0x0]
  4055c8:	mov    rdi,rbx
  4055cb:	call   406590 <flatcc_destroy_context@@Base>
  4055d0:	mov    rbx,QWORD PTR [rip+0x4ba11]        # 450fe8 <stderr@GLIBC_2.2.5>
  4055d7:	mov    rdi,QWORD PTR [rbx]
  4055da:	lea    rdx,[rip+0x290c4]        # 42e6a5 <_IO_stdin_used@@Base+0x16a5>
  4055e1:	mov    esi,0x1
  4055e6:	xor    eax,eax
  4055e8:	mov    ebx,0xffffffff
  4055ed:	call   405200 <__fprintf_chk@plt>
  4055f2:	jmp    405583 <main@@Base+0x223>
  4055f4:	mov    eax,DWORD PTR [rsp+0x104]
  4055fb:	mov    DWORD PTR [rsp+0xb4],0x0
  405606:	test   eax,eax
  405608:	jne    405416 <main@@Base+0xb6>
  40560e:	cmp    DWORD PTR [rsp+0xb0],0x0
  405616:	jne    405549 <main@@Base+0x1e9>
  40561c:	mov    rbx,QWORD PTR [rip+0x4b9c5]        # 450fe8 <stderr@GLIBC_2.2.5>
  405623:	lea    rdx,[rip+0x29069]        # 42e693 <_IO_stdin_used@@Base+0x1693>
  40562a:	mov    esi,0x1
  40562f:	xor    eax,eax
  405631:	mov    rdi,QWORD PTR [rbx]
  405634:	call   405200 <__fprintf_chk@plt>
  405639:	jmp    4055d7 <main@@Base+0x277>
  40563b:	cmp    QWORD PTR [rsp+0xb0],0x0
  405644:	jne    40542f <main@@Base+0xcf>
  40564a:	cmp    DWORD PTR [rsp+0xc4],0x0
  405652:	jne    40542f <main@@Base+0xcf>
  405658:	cmp    DWORD PTR [rsp+0xc8],0x0
  405660:	jne    40542f <main@@Base+0xcf>
  405666:	cmp    DWORD PTR [rsp+0xd4],0x0
  40566e:	jne    40567b <main@@Base+0x31b>
  405670:	mov    DWORD PTR [rsp+0xb8],0x1
  40567b:	cmp    QWORD PTR [rsp+0x90],0x0
  405684:	jne    405465 <main@@Base+0x105>
  40568a:	jmp    405474 <main@@Base+0x114>
  40568f:	test   edx,edx
  405691:	jne    405670 <main@@Base+0x310>
  405693:	cmp    DWORD PTR [rsp+0xc0],0x0
  40569b:	je     40567b <main@@Base+0x31b>
  40569d:	jmp    405670 <main@@Base+0x310>
  40569f:	mov    rbx,QWORD PTR [rip+0x4b942]        # 450fe8 <stderr@GLIBC_2.2.5>
  4056a6:	lea    rdx,[rip+0x28df3]        # 42e4a0 <_IO_stdin_used@@Base+0x14a0>
  4056ad:	mov    esi,0x1
  4056b2:	xor    eax,eax
  4056b4:	mov    rdi,QWORD PTR [rbx]
  4056b7:	call   405200 <__fprintf_chk@plt>
  4056bc:	jmp    4055d7 <main@@Base+0x277>
  4056c1:	mov    rbx,QWORD PTR [rip+0x4b920]        # 450fe8 <stderr@GLIBC_2.2.5>
  4056c8:	lea    rdx,[rip+0x28e41]        # 42e510 <_IO_stdin_used@@Base+0x1510>
  4056cf:	mov    esi,0x1
  4056d4:	xor    eax,eax
  4056d6:	mov    rdi,QWORD PTR [rbx]
  4056d9:	call   405200 <__fprintf_chk@plt>
  4056de:	jmp    4055d7 <main@@Base+0x277>
  4056e3:	mov    rbx,QWORD PTR [rip+0x4b8fe]        # 450fe8 <stderr@GLIBC_2.2.5>
  4056ea:	lea    rdx,[rip+0x28d6f]        # 42e460 <_IO_stdin_used@@Base+0x1460>
  4056f1:	mov    esi,0x1
  4056f6:	xor    eax,eax
  4056f8:	mov    rdi,QWORD PTR [rbx]
  4056fb:	call   405200 <__fprintf_chk@plt>
  405700:	jmp    4055d7 <main@@Base+0x277>
  405705:	mov    rbx,QWORD PTR [rip+0x4b8dc]        # 450fe8 <stderr@GLIBC_2.2.5>
  40570c:	lea    rdx,[rip+0x28dcd]        # 42e4e0 <_IO_stdin_used@@Base+0x14e0>
  405713:	mov    esi,0x1
  405718:	xor    eax,eax
  40571a:	mov    rdi,QWORD PTR [rbx]
  40571d:	call   405200 <__fprintf_chk@plt>
  405722:	jmp    4055d7 <main@@Base+0x277>
  405727:	mov    rax,QWORD PTR [rip+0x4b8ba]        # 450fe8 <stderr@GLIBC_2.2.5>
  40572e:	mov    rdi,QWORD PTR [rax]
  405731:	call   4058b0 <usage@@Base>
  405736:	or     edi,0xffffffff
  405739:	call   4051e0 <exit@plt>
  40573e:	mov    rax,QWORD PTR [rip+0x4b8a3]        # 450fe8 <stderr@GLIBC_2.2.5>
  405745:	lea    rdx,[rip+0x28f2c]        # 42e678 <_IO_stdin_used@@Base+0x1678>
  40574c:	mov    esi,0x1
  405751:	mov    rdi,QWORD PTR [rax]
  405754:	xor    eax,eax
  405756:	call   405200 <__fprintf_chk@plt>
  40575b:	mov    rdi,QWORD PTR [rsp+0xf0]
  405763:	call   405040 <free@plt>
  405768:	or     edi,0xffffffff
  40576b:	call   4051e0 <exit@plt>
  405770:	call   4050d0 <__stack_chk_fail@plt>
  405775:	mov    rax,QWORD PTR [rip+0x4b86c]        # 450fe8 <stderr@GLIBC_2.2.5>
  40577c:	lea    rdx,[rip+0x28ef5]        # 42e678 <_IO_stdin_used@@Base+0x1678>
  405783:	mov    esi,0x1
  405788:	mov    rdi,QWORD PTR [rax]
  40578b:	xor    eax,eax
  40578d:	call   405200 <__fprintf_chk@plt>
  405792:	or     edi,0xffffffff
  405795:	call   4051e0 <exit@plt>
  40579a:	nop    WORD PTR [rax+rax*1+0x0]

00000000004057a0 <_start@@Base>:
  4057a0:	endbr64 
  4057a4:	xor    ebp,ebp
  4057a6:	mov    r9,rdx
  4057a9:	pop    rsi
  4057aa:	mov    rdx,rsp
  4057ad:	and    rsp,0xfffffffffffffff0
  4057b1:	push   rax
  4057b2:	push   rsp
  4057b3:	mov    r8,0x42c560
  4057ba:	mov    rcx,0x42c4f0
  4057c1:	mov    rdi,0x405360
  4057c8:	call   QWORD PTR [rip+0x4b80a]        # 450fd8 <__libc_start_main@GLIBC_2.2.5>
  4057ce:	hlt    
  4057cf:	nop
  4057d0:	endbr64 
  4057d4:	ret    
  4057d5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4057df:	nop
  4057e0:	mov    eax,0x45112f
  4057e5:	push   rbp
  4057e6:	sub    rax,0x451128
  4057ec:	cmp    rax,0xe
  4057f0:	mov    rbp,rsp
  4057f3:	jbe    405810 <_start@@Base+0x70>
  4057f5:	mov    eax,0x0
  4057fa:	test   rax,rax
  4057fd:	je     405810 <_start@@Base+0x70>
  4057ff:	pop    rbp
  405800:	mov    edi,0x451128
  405805:	jmp    rax
  405807:	nop    WORD PTR [rax+rax*1+0x0]
  405810:	pop    rbp
  405811:	ret    
  405812:	nop    DWORD PTR [rax+0x0]
  405816:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405820:	mov    esi,0x451128
  405825:	push   rbp
  405826:	sub    rsi,0x451128
  40582d:	sar    rsi,0x3
  405831:	mov    rbp,rsp
  405834:	mov    rax,rsi
  405837:	shr    rax,0x3f
  40583b:	add    rsi,rax
  40583e:	sar    rsi,1
  405841:	je     405858 <_start@@Base+0xb8>
  405843:	mov    eax,0x0
  405848:	test   rax,rax
  40584b:	je     405858 <_start@@Base+0xb8>
  40584d:	pop    rbp
  40584e:	mov    edi,0x451128
  405853:	jmp    rax
  405855:	nop    DWORD PTR [rax]
  405858:	pop    rbp
  405859:	ret    
  40585a:	nop    WORD PTR [rax+rax*1+0x0]
  405860:	cmp    BYTE PTR [rip+0x4b8d9],0x0        # 451140 <__bss_start@@Base+0x18>
  405867:	jne    40587a <_start@@Base+0xda>
  405869:	push   rbp
  40586a:	mov    rbp,rsp
  40586d:	call   4057e0 <_start@@Base+0x40>
  405872:	pop    rbp
  405873:	mov    BYTE PTR [rip+0x4b8c6],0x1        # 451140 <__bss_start@@Base+0x18>
  40587a:	repz ret 
  40587c:	nop    DWORD PTR [rax+0x0]
  405880:	mov    edi,0x450d98
  405885:	cmp    QWORD PTR [rdi],0x0
  405889:	jne    405890 <_start@@Base+0xf0>
  40588b:	jmp    405820 <_start@@Base+0x80>
  40588d:	nop    DWORD PTR [rax]
  405890:	mov    eax,0x0
  405895:	test   rax,rax
  405898:	je     40588b <_start@@Base+0xeb>
  40589a:	push   rbp
  40589b:	mov    rbp,rsp
  40589e:	call   rax
  4058a0:	pop    rbp
  4058a1:	jmp    405820 <_start@@Base+0x80>
  4058a6:	nop    WORD PTR cs:[rax+rax*1+0x0]

00000000004058b0 <usage@@Base>:
  4058b0:	push   rbx
  4058b1:	lea    rcx,[rip+0x27750]        # 42d008 <_IO_stdin_used@@Base+0x8>
  4058b8:	lea    rdx,[rip+0x409ea]        # 4462a9 <_IO_stdin_used@@Base+0x192a9>
  4058bf:	mov    esi,0x1
  4058c4:	xor    eax,eax
  4058c6:	mov    rbx,rdi
  4058c9:	call   405200 <__fprintf_chk@plt>
  4058ce:	lea    rcx,[rip+0x28c62]        # 42e537 <_IO_stdin_used@@Base+0x1537>
  4058d5:	lea    rdx,[rip+0x28c61]        # 42e53d <_IO_stdin_used@@Base+0x153d>
  4058dc:	mov    rdi,rbx
  4058df:	mov    esi,0x1
  4058e4:	xor    eax,eax
  4058e6:	call   405200 <__fprintf_chk@plt>
  4058eb:	lea    rdx,[rip+0x2774e]        # 42d040 <_IO_stdin_used@@Base+0x40>
  4058f2:	mov    rdi,rbx
  4058f5:	mov    esi,0x1
  4058fa:	xor    eax,eax
  4058fc:	call   405200 <__fprintf_chk@plt>
  405901:	mov    rdi,rbx
  405904:	lea    rdx,[rip+0x2775d]        # 42d068 <_IO_stdin_used@@Base+0x68>
  40590b:	mov    esi,0x1
  405910:	pop    rbx
  405911:	xor    eax,eax
  405913:	jmp    405200 <__fprintf_chk@plt>
  405918:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000405920 <help@@Base>:
  405920:	push   rbx
  405921:	mov    rbx,rdi
  405924:	call   4058b0 <usage@@Base>
  405929:	mov    rdi,rbx
  40592c:	lea    rdx,[rip+0x27cbd]        # 42d5f0 <_IO_stdin_used@@Base+0x5f0>
  405933:	mov    esi,0x1
  405938:	pop    rbx
  405939:	xor    eax,eax
  40593b:	jmp    405200 <__fprintf_chk@plt>

0000000000405940 <parse_bool_arg@@Base>:
  405940:	mov    rdx,rdi
  405943:	lea    rdi,[rip+0x318df]        # 437229 <_IO_stdin_used@@Base+0xa229>
  40594a:	mov    ecx,0x2
  40594f:	mov    rsi,rdx
  405952:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  405954:	seta   al
  405957:	setb   cl
  40595a:	sub    eax,ecx
  40595c:	movsx  eax,al
  40595f:	test   eax,eax
  405961:	je     4059b8 <parse_bool_arg@@Base+0x78>
  405963:	lea    rdi,[rip+0x28be0]        # 42e54a <_IO_stdin_used@@Base+0x154a>
  40596a:	mov    ecx,0x3
  40596f:	mov    rsi,rdx
  405972:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  405974:	seta   al
  405977:	setb   cl
  40597a:	sub    eax,ecx
  40597c:	movsx  eax,al
  40597f:	test   eax,eax
  405981:	je     4059b8 <parse_bool_arg@@Base+0x78>
  405983:	lea    rdi,[rip+0x43b6d]        # 4494f7 <fb_schema_table_missing@@Base+0x3187>
  40598a:	mov    ecx,0x2
  40598f:	mov    rsi,rdx
  405992:	mov    eax,0x1
  405997:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  405999:	seta   sil
  40599d:	setb   cl
  4059a0:	cmp    sil,cl
  4059a3:	je     4059b8 <parse_bool_arg@@Base+0x78>
  4059a5:	lea    rdi,[rip+0x28ba1]        # 42e54d <_IO_stdin_used@@Base+0x154d>
  4059ac:	mov    ecx,0x4
  4059b1:	mov    rsi,rdx
  4059b4:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  4059b6:	jne    4059ba <parse_bool_arg@@Base+0x7a>
  4059b8:	repz ret 
  4059ba:	sub    rsp,0x8
  4059be:	mov    rax,QWORD PTR [rip+0x4b623]        # 450fe8 <stderr@GLIBC_2.2.5>
  4059c5:	mov    rcx,rdx
  4059c8:	lea    rdx,[rip+0x28869]        # 42e238 <_IO_stdin_used@@Base+0x1238>
  4059cf:	mov    esi,0x1
  4059d4:	mov    rdi,QWORD PTR [rax]
  4059d7:	xor    eax,eax
  4059d9:	call   405200 <__fprintf_chk@plt>
  4059de:	mov    eax,0xffffffff
  4059e3:	add    rsp,0x8
  4059e7:	ret    
  4059e8:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004059f0 <match_long_arg@@Base>:
  4059f0:	push   rbp
  4059f1:	push   rbx
  4059f2:	mov    rbp,rdi
  4059f5:	mov    rbx,rdx
  4059f8:	sub    rsp,0x8
  4059fc:	call   405070 <strncmp@plt>
  405a01:	xor    edx,edx
  405a03:	test   eax,eax
  405a05:	jne    405a15 <match_long_arg@@Base+0x25>
  405a07:	mov    rdi,rbp
  405a0a:	call   4050c0 <strlen@plt>
  405a0f:	cmp    rbx,rax
  405a12:	sete   dl
  405a15:	add    rsp,0x8
  405a19:	movzx  eax,dl
  405a1c:	pop    rbx
  405a1d:	pop    rbp
  405a1e:	ret    
  405a1f:	nop

0000000000405a20 <set_opt@@Base>:
  405a20:	push   r14
  405a22:	push   r13
  405a24:	mov    r13,rsi
  405a27:	push   r12
  405a29:	push   rbp
  405a2a:	mov    rbp,rdx
  405a2d:	push   rbx
  405a2e:	mov    rbx,rdi
  405a31:	mov    rdi,rsi
  405a34:	call   4050c0 <strlen@plt>
  405a39:	mov    esi,0x3d
  405a3e:	mov    rdi,r13
  405a41:	mov    r12,rax
  405a44:	call   4050e0 <strchr@plt>
  405a49:	test   rax,rax
  405a4c:	mov    r14,rax
  405a4f:	je     405a5b <set_opt@@Base+0x3b>
  405a51:	mov    r12,rax
  405a54:	lea    rbp,[rax+0x1]
  405a58:	sub    r12,r13
  405a5b:	cmp    BYTE PTR [r13+0x0],0x68
  405a60:	je     405cc4 <set_opt@@Base+0x2a4>
  405a66:	lea    rsi,[rip+0x28ae4]        # 42e551 <_IO_stdin_used@@Base+0x1551>
  405a6d:	mov    ecx,0x6
  405a72:	mov    rdi,r13
  405a75:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  405a77:	je     405cc4 <set_opt@@Base+0x2a4>
  405a7d:	lea    rsi,[rip+0x28ad3]        # 42e557 <_IO_stdin_used@@Base+0x1557>
  405a84:	mov    ecx,0x9
  405a89:	mov    rdi,r13
  405a8c:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  405a8e:	je     405d17 <set_opt@@Base+0x2f7>
  405a94:	lea    rsi,[rip+0x28ac5]        # 42e560 <_IO_stdin_used@@Base+0x1560>
  405a9b:	mov    ecx,0x8
  405aa0:	mov    rdi,r13
  405aa3:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  405aa5:	seta   al
  405aa8:	setb   dl
  405aab:	sub    eax,edx
  405aad:	movsx  eax,al
  405ab0:	test   eax,eax
  405ab2:	je     405b78 <set_opt@@Base+0x158>
  405ab8:	lea    rsi,[rip+0x28aa9]        # 42e568 <_IO_stdin_used@@Base+0x1568>
  405abf:	mov    ecx,0x8
  405ac4:	mov    rdi,r13
  405ac7:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  405ac9:	seta   al
  405acc:	setb   dl
  405acf:	sub    eax,edx
  405ad1:	movsx  eax,al
  405ad4:	test   eax,eax
  405ad6:	je     405b60 <set_opt@@Base+0x140>
  405adc:	lea    rsi,[rip+0x28a8d]        # 42e570 <_IO_stdin_used@@Base+0x1570>
  405ae3:	mov    ecx,0xd
  405ae8:	mov    rdi,r13
  405aeb:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  405aed:	seta   al
  405af0:	setb   dl
  405af3:	sub    eax,edx
  405af5:	movsx  eax,al
  405af8:	test   eax,eax
  405afa:	je     405b90 <set_opt@@Base+0x170>
  405b00:	lea    rsi,[rip+0x28a76]        # 42e57d <_IO_stdin_used@@Base+0x157d>
  405b07:	mov    ecx,0xe
  405b0c:	mov    rdi,r13
  405b0f:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  405b11:	seta   al
  405b14:	setb   dl
  405b17:	sub    eax,edx
  405b19:	movsx  eax,al
  405b1c:	test   eax,eax
  405b1e:	je     405b4a <set_opt@@Base+0x12a>
  405b20:	lea    rsi,[rip+0x28a64]        # 42e58b <_IO_stdin_used@@Base+0x158b>
  405b27:	mov    ecx,0x6
  405b2c:	mov    rdi,r13
  405b2f:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  405b31:	seta   al
  405b34:	setb   dl
  405b37:	sub    eax,edx
  405b39:	movsx  eax,al
  405b3c:	test   eax,eax
  405b3e:	jne    405ba8 <set_opt@@Base+0x188>
  405b40:	mov    DWORD PTR [rbx+0xc4],0x1
  405b4a:	mov    DWORD PTR [rbx+0xc8],0x1
  405b54:	pop    rbx
  405b55:	pop    rbp
  405b56:	pop    r12
  405b58:	pop    r13
  405b5a:	pop    r14
  405b5c:	ret    
  405b5d:	nop    DWORD PTR [rax]
  405b60:	mov    DWORD PTR [rbx+0xd4],0x1
  405b6a:	pop    rbx
  405b6b:	pop    rbp
  405b6c:	pop    r12
  405b6e:	pop    r13
  405b70:	pop    r14
  405b72:	ret    
  405b73:	nop    DWORD PTR [rax+rax*1+0x0]
  405b78:	mov    DWORD PTR [rbx+0x80],0x1
  405b82:	pop    rbx
  405b83:	pop    rbp
  405b84:	pop    r12
  405b86:	pop    r13
  405b88:	pop    r14
  405b8a:	ret    
  405b8b:	nop    DWORD PTR [rax+rax*1+0x0]
  405b90:	mov    DWORD PTR [rbx+0xc4],0x1
  405b9a:	pop    rbx
  405b9b:	pop    rbp
  405b9c:	pop    r12
  405b9e:	pop    r13
  405ba0:	pop    r14
  405ba2:	ret    
  405ba3:	nop    DWORD PTR [rax+rax*1+0x0]
  405ba8:	lea    rdi,[rip+0x289e2]        # 42e591 <_IO_stdin_used@@Base+0x1591>
  405baf:	mov    rdx,r12
  405bb2:	mov    rsi,r13
  405bb5:	call   4059f0 <match_long_arg@@Base>
  405bba:	test   eax,eax
  405bbc:	jne    405c00 <set_opt@@Base+0x1e0>
  405bbe:	lea    rdi,[rip+0x289de]        # 42e5a3 <_IO_stdin_used@@Base+0x15a3>
  405bc5:	mov    rdx,r12
  405bc8:	mov    rsi,r13
  405bcb:	call   4059f0 <match_long_arg@@Base>
  405bd0:	test   eax,eax
  405bd2:	je     405c48 <set_opt@@Base+0x228>
  405bd4:	test   rbp,rbp
  405bd7:	je     405dc6 <set_opt@@Base+0x3a6>
  405bdd:	mov    rdi,rbp
  405be0:	call   405940 <parse_bool_arg@@Base>
  405be5:	test   eax,eax
  405be7:	mov    DWORD PTR [rbx+0xdc],eax
  405bed:	js     405c39 <set_opt@@Base+0x219>
  405bef:	test   r14,r14
  405bf2:	je     405c88 <set_opt@@Base+0x268>
  405bf8:	xor    eax,eax
  405bfa:	jmp    405b6a <set_opt@@Base+0x14a>
  405bff:	nop
  405c00:	mov    r12,QWORD PTR [rip+0x4b3e1]        # 450fe8 <stderr@GLIBC_2.2.5>
  405c07:	lea    rdx,[rip+0x28672]        # 42e280 <_IO_stdin_used@@Base+0x1280>
  405c0e:	xor    eax,eax
  405c10:	mov    esi,0x1
  405c15:	mov    rdi,QWORD PTR [r12]
  405c19:	call   405200 <__fprintf_chk@plt>
  405c1e:	test   rbp,rbp
  405c21:	je     405e36 <set_opt@@Base+0x416>
  405c27:	mov    rdi,rbp
  405c2a:	call   405940 <parse_bool_arg@@Base>
  405c2f:	test   eax,eax
  405c31:	mov    DWORD PTR [rbx+0xd8],eax
  405c37:	jns    405bef <set_opt@@Base+0x1cf>
  405c39:	or     edi,0xffffffff
  405c3c:	call   4051e0 <exit@plt>
  405c41:	nop    DWORD PTR [rax+0x0]
  405c48:	lea    rdi,[rip+0x28963]        # 42e5b2 <_IO_stdin_used@@Base+0x15b2>
  405c4f:	mov    rdx,r12
  405c52:	mov    rsi,r13
  405c55:	call   4059f0 <match_long_arg@@Base>
  405c5a:	test   eax,eax
  405c5c:	je     405c92 <set_opt@@Base+0x272>
  405c5e:	test   rbp,rbp
  405c61:	je     405e2d <set_opt@@Base+0x40d>
  405c67:	test   r14,r14
  405c6a:	mov    QWORD PTR [rbx+0x88],rbp
  405c71:	mov    DWORD PTR [rbx+0x84],0x1
  405c7b:	jne    405bf8 <set_opt@@Base+0x1d8>
  405c81:	nop    DWORD PTR [rax+0x0]
  405c88:	mov    eax,0x2
  405c8d:	jmp    405b6a <set_opt@@Base+0x14a>
  405c92:	lea    rdi,[rip+0x28922]        # 42e5bb <_IO_stdin_used@@Base+0x15bb>
  405c99:	mov    rdx,r12
  405c9c:	mov    rsi,r13
  405c9f:	call   4059f0 <match_long_arg@@Base>
  405ca4:	test   eax,eax
  405ca6:	je     405cda <set_opt@@Base+0x2ba>
  405ca8:	test   rbp,rbp
  405cab:	je     405e24 <set_opt@@Base+0x404>
  405cb1:	test   r14,r14
  405cb4:	mov    QWORD PTR [rbx+0x90],rbp
  405cbb:	je     405c88 <set_opt@@Base+0x268>
  405cbd:	xor    eax,eax
  405cbf:	jmp    405b6a <set_opt@@Base+0x14a>
  405cc4:	mov    rax,QWORD PTR [rip+0x4b305]        # 450fd0 <stdout@GLIBC_2.2.5>
  405ccb:	mov    rdi,QWORD PTR [rax]
  405cce:	call   405920 <help@@Base>
  405cd3:	xor    edi,edi
  405cd5:	call   4051e0 <exit@plt>
  405cda:	lea    rdi,[rip+0x288e5]        # 42e5c6 <_IO_stdin_used@@Base+0x15c6>
  405ce1:	mov    rdx,r12
  405ce4:	mov    rsi,r13
  405ce7:	call   4059f0 <match_long_arg@@Base>
  405cec:	test   eax,eax
  405cee:	je     405d5f <set_opt@@Base+0x33f>
  405cf0:	test   rbp,rbp
  405cf3:	lea    rdx,[rip+0x286ae]        # 42e3a8 <_IO_stdin_used@@Base+0x13a8>
  405cfa:	je     405dcd <set_opt@@Base+0x3ad>
  405d00:	test   r14,r14
  405d03:	mov    QWORD PTR [rbx+0x98],rbp
  405d0a:	je     405c88 <set_opt@@Base+0x268>
  405d10:	xor    eax,eax
  405d12:	jmp    405b6a <set_opt@@Base+0x14a>
  405d17:	mov    rbx,QWORD PTR [rip+0x4b2ca]        # 450fe8 <stderr@GLIBC_2.2.5>
  405d1e:	lea    rcx,[rip+0x272e3]        # 42d008 <_IO_stdin_used@@Base+0x8>
  405d25:	lea    rdx,[rip+0x4057d]        # 4462a9 <_IO_stdin_used@@Base+0x192a9>
  405d2c:	mov    esi,0x1
  405d31:	xor    eax,eax
  405d33:	mov    rdi,QWORD PTR [rbx]
  405d36:	call   405200 <__fprintf_chk@plt>
  405d3b:	mov    rdi,QWORD PTR [rbx]
  405d3e:	lea    rcx,[rip+0x287f2]        # 42e537 <_IO_stdin_used@@Base+0x1537>
  405d45:	lea    rdx,[rip+0x287f1]        # 42e53d <_IO_stdin_used@@Base+0x153d>
  405d4c:	mov    esi,0x1
  405d51:	xor    eax,eax
  405d53:	call   405200 <__fprintf_chk@plt>
  405d58:	xor    edi,edi
  405d5a:	call   4051e0 <exit@plt>
  405d5f:	lea    rdi,[rip+0x28869]        # 42e5cf <_IO_stdin_used@@Base+0x15cf>
  405d66:	mov    rdx,r12
  405d69:	mov    rsi,r13
  405d6c:	call   4059f0 <match_long_arg@@Base>
  405d71:	test   eax,eax
  405d73:	je     405d98 <set_opt@@Base+0x378>
  405d75:	test   rbp,rbp
  405d78:	lea    rdx,[rip+0x28651]        # 42e3d0 <_IO_stdin_used@@Base+0x13d0>
  405d7f:	je     405dcd <set_opt@@Base+0x3ad>
  405d81:	test   r14,r14
  405d84:	mov    QWORD PTR [rbx+0xe8],rbp
  405d8b:	je     405c88 <set_opt@@Base+0x268>
  405d91:	xor    eax,eax
  405d93:	jmp    405b6a <set_opt@@Base+0x14a>
  405d98:	lea    rdi,[rip+0x28837]        # 42e5d6 <_IO_stdin_used@@Base+0x15d6>
  405d9f:	mov    rdx,r12
  405da2:	mov    rsi,r13
  405da5:	call   4059f0 <match_long_arg@@Base>
  405daa:	test   eax,eax
  405dac:	je     405de8 <set_opt@@Base+0x3c8>
  405dae:	test   rbp,rbp
  405db1:	lea    rdx,[rip+0x28826]        # 42e5de <_IO_stdin_used@@Base+0x15de>
  405db8:	je     405dcd <set_opt@@Base+0x3ad>
  405dba:	mov    QWORD PTR [rbx+0xe0],rbp
  405dc1:	jmp    405bef <set_opt@@Base+0x1cf>
  405dc6:	lea    rdx,[rip+0x2855b]        # 42e328 <_IO_stdin_used@@Base+0x1328>
  405dcd:	mov    rax,QWORD PTR [rip+0x4b214]        # 450fe8 <stderr@GLIBC_2.2.5>
  405dd4:	mov    esi,0x1
  405dd9:	mov    rdi,QWORD PTR [rax]
  405ddc:	xor    eax,eax
  405dde:	call   405200 <__fprintf_chk@plt>
  405de3:	jmp    405c39 <set_opt@@Base+0x219>
  405de8:	movsx  ecx,BYTE PTR [r13+0x0]
  405ded:	cmp    cl,0x64
  405df0:	je     405f3c <set_opt@@Base+0x51c>
  405df6:	jg     405f18 <set_opt@@Base+0x4f8>
  405dfc:	cmp    cl,0x49
  405dff:	je     405ee8 <set_opt@@Base+0x4c8>
  405e05:	jle    405ebb <set_opt@@Base+0x49b>
  405e0b:	cmp    cl,0x61
  405e0e:	je     405e7a <set_opt@@Base+0x45a>
  405e10:	cmp    cl,0x63
  405e13:	jne    405e55 <set_opt@@Base+0x435>
  405e15:	mov    DWORD PTR [rbx+0xb0],0x1
  405e1f:	jmp    405b6a <set_opt@@Base+0x14a>
  405e24:	lea    rdx,[rip+0x28555]        # 42e380 <_IO_stdin_used@@Base+0x1380>
  405e2b:	jmp    405dcd <set_opt@@Base+0x3ad>
  405e2d:	lea    rdx,[rip+0x28524]        # 42e358 <_IO_stdin_used@@Base+0x1358>
  405e34:	jmp    405dcd <set_opt@@Base+0x3ad>
  405e36:	mov    rdi,QWORD PTR [r12]
  405e3a:	lea    rdx,[rip+0x284b7]        # 42e2f8 <_IO_stdin_used@@Base+0x12f8>
  405e41:	mov    esi,0x1
  405e46:	xor    eax,eax
  405e48:	call   405200 <__fprintf_chk@plt>
  405e4d:	or     edi,0xffffffff
  405e50:	call   4051e0 <exit@plt>
  405e55:	mov    rax,QWORD PTR [rip+0x4b18c]        # 450fe8 <stderr@GLIBC_2.2.5>
  405e5c:	lea    rdx,[rip+0x287e7]        # 42e64a <_IO_stdin_used@@Base+0x164a>
  405e63:	mov    esi,0x1
  405e68:	mov    rdi,QWORD PTR [rax]
  405e6b:	xor    eax,eax
  405e6d:	call   405200 <__fprintf_chk@plt>
  405e72:	or     edi,0xffffffff
  405e75:	call   4051e0 <exit@plt>
  405e7a:	mov    DWORD PTR [rbx+0xb8],0x1
  405e84:	mov    DWORD PTR [rbx+0xbc],0x1
  405e8e:	mov    DWORD PTR [rbx+0xc0],0x1
  405e98:	mov    DWORD PTR [rbx+0xb0],0x1
  405ea2:	mov    DWORD PTR [rbx+0xb4],0x1
  405eac:	mov    DWORD PTR [rbx+0xcc],0x1
  405eb6:	jmp    405b6a <set_opt@@Base+0x14a>
  405ebb:	cmp    cl,0x2d
  405ebe:	jne    405e55 <set_opt@@Base+0x435>
  405ec0:	mov    rax,QWORD PTR [rip+0x4b121]        # 450fe8 <stderr@GLIBC_2.2.5>
  405ec7:	lea    rdx,[rip+0x2872d]        # 42e5fb <_IO_stdin_used@@Base+0x15fb>
  405ece:	mov    rcx,r13
  405ed1:	mov    esi,0x1
  405ed6:	mov    rdi,QWORD PTR [rax]
  405ed9:	xor    eax,eax
  405edb:	call   405200 <__fprintf_chk@plt>
  405ee0:	or     edi,0xffffffff
  405ee3:	call   4051e0 <exit@plt>
  405ee8:	cmp    BYTE PTR [r13+0x1],0x0
  405eed:	je     405f4b <set_opt@@Base+0x52b>
  405eef:	lea    rbp,[r13+0x1]
  405ef3:	mov    eax,0x1
  405ef8:	movsxd rdx,DWORD PTR [rbx+0x100]
  405eff:	mov    rcx,QWORD PTR [rbx+0xf0]
  405f06:	lea    esi,[rdx+0x1]
  405f09:	mov    DWORD PTR [rbx+0x100],esi
  405f0f:	mov    QWORD PTR [rcx+rdx*8],rbp
  405f13:	jmp    405b6a <set_opt@@Base+0x14a>
  405f18:	cmp    cl,0x72
  405f1b:	je     405eac <set_opt@@Base+0x48c>
  405f1d:	jle    405f70 <set_opt@@Base+0x550>
  405f1f:	cmp    cl,0x76
  405f22:	je     405f61 <set_opt@@Base+0x541>
  405f24:	cmp    cl,0x77
  405f27:	jne    405e55 <set_opt@@Base+0x435>
  405f2d:	mov    DWORD PTR [rbx+0xbc],0x1
  405f37:	jmp    405b6a <set_opt@@Base+0x14a>
  405f3c:	mov    DWORD PTR [rbx+0x84],0x1
  405f46:	jmp    405b6a <set_opt@@Base+0x14a>
  405f4b:	test   rbp,rbp
  405f4e:	mov    eax,0x2
  405f53:	lea    rdx,[rip+0x286b6]        # 42e610 <_IO_stdin_used@@Base+0x1610>
  405f5a:	jne    405ef8 <set_opt@@Base+0x4d8>
  405f5c:	jmp    405dcd <set_opt@@Base+0x3ad>
  405f61:	mov    DWORD PTR [rbx+0xc0],0x1
  405f6b:	jmp    405b6a <set_opt@@Base+0x14a>
  405f70:	cmp    cl,0x6f
  405f73:	jne    405e55 <set_opt@@Base+0x435>
  405f79:	cmp    QWORD PTR [rbx+0x108],0x0
  405f81:	lea    rdx,[rip+0x28478]        # 42e400 <_IO_stdin_used@@Base+0x1400>
  405f88:	jne    405dcd <set_opt@@Base+0x3ad>
  405f8e:	cmp    BYTE PTR [r13+0x1],0x0
  405f93:	je     405faa <set_opt@@Base+0x58a>
  405f95:	lea    rbp,[r13+0x1]
  405f99:	mov    eax,0x1
  405f9e:	mov    QWORD PTR [rbx+0x108],rbp
  405fa5:	jmp    405b6a <set_opt@@Base+0x14a>
  405faa:	test   rbp,rbp
  405fad:	mov    eax,0x2
  405fb2:	lea    rdx,[rip+0x28674]        # 42e62d <_IO_stdin_used@@Base+0x162d>
  405fb9:	jne    405f9e <set_opt@@Base+0x57e>
  405fbb:	jmp    405dcd <set_opt@@Base+0x3ad>

0000000000405fc0 <get_opt@@Base>:
  405fc0:	push   r12
  405fc2:	push   rbp
  405fc3:	mov    r12,rdx
  405fc6:	push   rbx
  405fc7:	movzx  eax,BYTE PTR [rsi+0x1]
  405fcb:	mov    rbp,rdi
  405fce:	cmp    al,0x2d
  405fd0:	je     406020 <get_opt@@Base+0x60>
  405fd2:	test   al,al
  405fd4:	lea    rbx,[rsi+0x1]
  405fd8:	je     406034 <get_opt@@Base+0x74>
  405fda:	mov    rdx,r12
  405fdd:	mov    rsi,rbx
  405fe0:	mov    rdi,rbp
  405fe3:	call   405a20 <set_opt@@Base>
  405fe8:	cmp    eax,0x1
  405feb:	je     406000 <get_opt@@Base+0x40>
  405fed:	cmp    eax,0x2
  405ff0:	je     406010 <get_opt@@Base+0x50>
  405ff2:	cmp    eax,0x1
  405ff5:	adc    rbx,0x0
  405ff9:	cmp    BYTE PTR [rbx],0x0
  405ffc:	jne    405fda <get_opt@@Base+0x1a>
  405ffe:	xchg   ax,ax
  406000:	xor    eax,eax
  406002:	pop    rbx
  406003:	pop    rbp
  406004:	pop    r12
  406006:	ret    
  406007:	nop    WORD PTR [rax+rax*1+0x0]
  406010:	pop    rbx
  406011:	mov    eax,0x1
  406016:	pop    rbp
  406017:	pop    r12
  406019:	ret    
  40601a:	nop    WORD PTR [rax+rax*1+0x0]
  406020:	add    rsi,0x1
  406024:	call   405a20 <set_opt@@Base>
  406029:	cmp    eax,0x2
  40602c:	sete   al
  40602f:	movzx  eax,al
  406032:	jmp    406002 <get_opt@@Base+0x42>
  406034:	mov    rax,QWORD PTR [rip+0x4afad]        # 450fe8 <stderr@GLIBC_2.2.5>
  40603b:	lea    rdx,[rip+0x2861d]        # 42e65f <_IO_stdin_used@@Base+0x165f>
  406042:	mov    esi,0x1
  406047:	mov    rdi,QWORD PTR [rax]
  40604a:	xor    eax,eax
  40604c:	call   405200 <__fprintf_chk@plt>
  406051:	or     edi,0xffffffff
  406054:	call   4051e0 <exit@plt>
  406059:	nop    DWORD PTR [rax+0x0]

0000000000406060 <parse_opts@@Base>:
  406060:	cmp    edi,0x1
  406063:	jle    4060e3 <parse_opts@@Base+0x83>
  406065:	push   r13
  406067:	push   r12
  406069:	mov    r13,rsi
  40606c:	push   rbp
  40606d:	push   rbx
  40606e:	mov    r12d,edi
  406071:	mov    rbp,rdx
  406074:	mov    ebx,0x1
  406079:	sub    rsp,0x8
  40607d:	jmp    4060a3 <parse_opts@@Base+0x43>
  40607f:	nop
  406080:	movsxd rax,DWORD PTR [rbp+0x104]
  406087:	mov    rdx,QWORD PTR [rbp+0xf8]
  40608e:	add    ebx,0x1
  406091:	cmp    r12d,ebx
  406094:	lea    ecx,[rax+0x1]
  406097:	mov    DWORD PTR [rbp+0x104],ecx
  40609d:	mov    QWORD PTR [rdx+rax*8],rsi
  4060a1:	jle    4060d9 <parse_opts@@Base+0x79>
  4060a3:	movsxd rax,ebx
  4060a6:	mov    rsi,QWORD PTR [r13+rax*8+0x0]
  4060ab:	lea    rcx,[rax*8+0x0]
  4060b3:	cmp    BYTE PTR [rsi],0x2d
  4060b6:	jne    406080 <parse_opts@@Base+0x20>
  4060b8:	lea    eax,[rbx+0x1]
  4060bb:	xor    edx,edx
  4060bd:	cmp    r12d,eax
  4060c0:	jle    4060c7 <parse_opts@@Base+0x67>
  4060c2:	mov    rdx,QWORD PTR [r13+rcx*1+0x8]
  4060c7:	mov    rdi,rbp
  4060ca:	call   405fc0 <get_opt@@Base>
  4060cf:	add    ebx,eax
  4060d1:	add    ebx,0x1
  4060d4:	cmp    r12d,ebx
  4060d7:	jg     4060a3 <parse_opts@@Base+0x43>
  4060d9:	add    rsp,0x8
  4060dd:	pop    rbx
  4060de:	pop    rbp
  4060df:	pop    r12
  4060e1:	pop    r13
  4060e3:	repz ret 
  4060e5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4060ef:	nop
  4060f0:	add    rdi,0x128
  4060f7:	mov    edx,0x1
  4060fc:	jmp    41ab80 <ptr_set_insert_item@@Base>
  406101:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40610c:	nop    DWORD PTR [rax+0x0]
  406110:	sub    rsp,0x8
  406114:	mov    rax,QWORD PTR [rip+0x4aecd]        # 450fe8 <stderr@GLIBC_2.2.5>
  40611b:	lea    rdx,[rip+0x28596]        # 42e6b8 <_IO_stdin_used@@Base+0x16b8>
  406122:	mov    esi,0x1
  406127:	mov    rdi,QWORD PTR [rax]
  40612a:	xor    eax,eax
  40612c:	call   405200 <__fprintf_chk@plt>
  406131:	mov    edi,0x1
  406136:	call   4051e0 <exit@plt>
  40613b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000406140 <flatcc_init_options@@Base>:
  406140:	mov    rdx,rdi
  406143:	mov    QWORD PTR [rdi+0x108],0x0
  40614e:	lea    rdi,[rdi+0x8]
  406152:	mov    rcx,rdx
  406155:	xor    eax,eax
  406157:	and    rdi,0xfffffffffffffff8
  40615b:	sub    rcx,rdi
  40615e:	add    ecx,0x110
  406164:	shr    ecx,0x3
  406167:	rep stos QWORD PTR es:[rdi],rax
  40616a:	lea    rax,[rip+0x2866e]        # 42e7df <_IO_stdin_used@@Base+0x17df>
  406171:	mov    QWORD PTR [rdx],0x10000
  406178:	mov    DWORD PTR [rdx+0x8],0x64
  40617f:	mov    DWORD PTR [rdx+0xc],0x64
  406186:	mov    DWORD PTR [rdx+0x14],0x1
  40618d:	mov    QWORD PTR [rdx+0x68],rax
  406191:	lea    rax,[rip+0x2864c]        # 42e7e4 <_IO_stdin_used@@Base+0x17e4>
  406198:	mov    DWORD PTR [rdx+0x18],0x1
  40619f:	mov    DWORD PTR [rdx+0x1c],0x1
  4061a6:	mov    DWORD PTR [rdx+0x20],0x1
  4061ad:	mov    QWORD PTR [rdx+0x70],rax
  4061b1:	lea    rax,[rip+0x28632]        # 42e7ea <_IO_stdin_used@@Base+0x17ea>
  4061b8:	mov    DWORD PTR [rdx+0x24],0x1
  4061bf:	mov    DWORD PTR [rdx+0x28],0x1
  4061c6:	mov    DWORD PTR [rdx+0x2c],0x1
  4061cd:	mov    DWORD PTR [rdx+0x30],0x1
  4061d4:	mov    DWORD PTR [rdx+0x34],0x1
  4061db:	mov    DWORD PTR [rdx+0x38],0x1
  4061e2:	mov    DWORD PTR [rdx+0x3c],0x0
  4061e9:	mov    DWORD PTR [rdx+0x40],0x0
  4061f0:	mov    DWORD PTR [rdx+0x44],0x4
  4061f7:	mov    DWORD PTR [rdx+0x48],0x2
  4061fe:	mov    DWORD PTR [rdx+0x4c],0x1
  406205:	mov    DWORD PTR [rdx+0x50],0x1
  40620c:	mov    DWORD PTR [rdx+0x54],0x0
  406213:	mov    DWORD PTR [rdx+0x58],0x1
  40621a:	mov    QWORD PTR [rdx+0x60],0xfffe
  406222:	mov    QWORD PTR [rdx+0x78],rax
  406226:	mov    DWORD PTR [rdx+0xa4],0x0
  406230:	mov    DWORD PTR [rdx+0xa8],0x1
  40623a:	mov    DWORD PTR [rdx+0xac],0x1
  406244:	mov    DWORD PTR [rdx+0xb0],0x0
  40624e:	mov    DWORD PTR [rdx+0xb4],0x0
  406258:	mov    DWORD PTR [rdx+0xb8],0x0
  406262:	mov    DWORD PTR [rdx+0xbc],0x0
  40626c:	mov    DWORD PTR [rdx+0xc4],0x0
  406276:	mov    DWORD PTR [rdx+0xd0],0x4
  406280:	mov    DWORD PTR [rdx+0xd4],0x0
  40628a:	mov    DWORD PTR [rdx+0xd8],0x1
  406294:	mov    DWORD PTR [rdx+0xdc],0x0
  40629e:	ret    
  40629f:	nop

00000000004062a0 <flatcc_create_context@@Base>:
  4062a0:	push   r14
  4062a2:	push   r13
  4062a4:	mov    r14,rcx
  4062a7:	push   r12
  4062a9:	push   rbp
  4062aa:	mov    rbp,rdi
  4062ad:	push   rbx
  4062ae:	mov    edi,0x358
  4062b3:	mov    r12,rsi
  4062b6:	mov    r13,rdx
  4062b9:	call   405180 <malloc@plt>
  4062be:	test   rax,rax
  4062c1:	je     4062f0 <flatcc_create_context@@Base+0x50>
  4062c3:	xor    r9d,r9d
  4062c6:	mov    r8,r14
  4062c9:	mov    rcx,r13
  4062cc:	mov    rdx,r12
  4062cf:	mov    rsi,rbp
  4062d2:	mov    rdi,rax
  4062d5:	mov    rbx,rax
  4062d8:	call   41ea50 <__flatcc_fb_init_parser@@Base>
  4062dd:	test   eax,eax
  4062df:	jne    4062f8 <flatcc_create_context@@Base+0x58>
  4062e1:	mov    rax,rbx
  4062e4:	pop    rbx
  4062e5:	pop    rbp
  4062e6:	pop    r12
  4062e8:	pop    r13
  4062ea:	pop    r14
  4062ec:	ret    
  4062ed:	nop    DWORD PTR [rax]
  4062f0:	xor    ebx,ebx
  4062f2:	jmp    4062e1 <flatcc_create_context@@Base+0x41>
  4062f4:	nop    DWORD PTR [rax+0x0]
  4062f8:	mov    rdi,rbx
  4062fb:	xor    ebx,ebx
  4062fd:	call   405040 <free@plt>
  406302:	jmp    4062e1 <flatcc_create_context@@Base+0x41>
  406304:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40630f:	nop

0000000000406310 <flatcc_parse_buffer@@Base>:
  406310:	push   r12
  406312:	push   rbp
  406313:	mov    r12,rsi
  406316:	push   rbx
  406317:	mov    rax,QWORD PTR [rdi+0xe8]
  40631e:	mov    rbx,rdi
  406321:	mov    rbp,rdx
  406324:	mov    DWORD PTR [rdi+0xf8],0x1
  40632e:	cmp    rax,rdx
  406331:	jae    406338 <flatcc_parse_buffer@@Base+0x28>
  406333:	test   rax,rax
  406336:	jne    406388 <flatcc_parse_buffer@@Base+0x78>
  406338:	lea    rsi,[rbx+0x1f8]
  40633f:	lea    rdi,[rbx+0x320]
  406346:	mov    edx,0x1
  40634b:	call   41ab80 <ptr_set_insert_item@@Base>
  406350:	xor    ecx,ecx
  406352:	mov    rdx,rbp
  406355:	mov    rsi,r12
  406358:	mov    rdi,rbx
  40635b:	call   41edd0 <__flatcc_fb_parse@@Base>
  406360:	test   eax,eax
  406362:	mov    edx,0xffffffff
  406367:	jne    40637a <flatcc_parse_buffer@@Base+0x6a>
  406369:	mov    rdi,rbx
  40636c:	call   424800 <__flatcc_fb_build_schema@@Base>
  406371:	xor    edx,edx
  406373:	test   eax,eax
  406375:	setne  dl
  406378:	neg    edx
  40637a:	pop    rbx
  40637b:	mov    eax,edx
  40637d:	pop    rbp
  40637e:	pop    r12
  406380:	ret    
  406381:	nop    DWORD PTR [rax+0x0]
  406388:	lea    rsi,[rip+0x28351]        # 42e6e0 <_IO_stdin_used@@Base+0x16e0>
  40638f:	xor    eax,eax
  406391:	call   41d420 <__flatcc_fb_print_error@@Base>
  406396:	mov    edx,0xffffffff
  40639b:	jmp    40637a <flatcc_parse_buffer@@Base+0x6a>
  40639d:	nop    DWORD PTR [rax]

00000000004063a0 <flatcc_generate_binary_schema_to_buffer@@Base>:
  4063a0:	sub    rsp,0x18
  4063a4:	mov    rax,rsi
  4063a7:	lea    rsi,[rdi+0x1f8]
  4063ae:	lea    rcx,[rsp+0x8]
  4063b3:	mov    QWORD PTR [rsp+0x8],rdx
  4063b8:	add    rdi,0xe8
  4063bf:	mov    rdx,rax
  4063c2:	call   419aa0 <__flatcc_fb_codegen_bfbs_to_buffer@@Base>
  4063c7:	test   rax,rax
  4063ca:	je     4063d5 <flatcc_generate_binary_schema_to_buffer@@Base+0x35>
  4063cc:	mov    eax,DWORD PTR [rsp+0x8]
  4063d0:	add    rsp,0x18
  4063d4:	ret    
  4063d5:	mov    eax,0xffffffff
  4063da:	jmp    4063d0 <flatcc_generate_binary_schema_to_buffer@@Base+0x30>
  4063dc:	nop    DWORD PTR [rax+0x0]

00000000004063e0 <flatcc_generate_binary_schema@@Base>:
  4063e0:	mov    rdx,rsi
  4063e3:	lea    rsi,[rdi+0x1f8]
  4063ea:	add    rdi,0xe8
  4063f1:	jmp    419b50 <__flatcc_fb_codegen_bfbs_alloc_buffer@@Base>
  4063f6:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000406400 <flatcc_generate_files@@Base>:
  406400:	push   r13
  406402:	push   r12
  406404:	push   rbp
  406405:	push   rbx
  406406:	sub    rsp,0x118
  40640d:	mov    rax,QWORD PTR fs:0x28
  406416:	mov    QWORD PTR [rsp+0x108],rax
  40641e:	xor    eax,eax
  406420:	test   rdi,rdi
  406423:	je     406510 <flatcc_generate_files@@Base+0x110>
  406429:	mov    rbp,rdi
  40642c:	mov    edi,DWORD PTR [rdi+0xd0]
  406432:	test   edi,edi
  406434:	jne    406510 <flatcc_generate_files@@Base+0x110>
  40643a:	mov    rbx,rbp
  40643d:	xor    edx,edx
  40643f:	jmp    40644b <flatcc_generate_files@@Base+0x4b>
  406441:	nop    DWORD PTR [rax+0x0]
  406448:	mov    rbx,rax
  40644b:	mov    rax,QWORD PTR [rbx]
  40644e:	mov    QWORD PTR [rbx+0x8],rdx
  406452:	mov    rdx,rbx
  406455:	test   rax,rax
  406458:	jne    406448 <flatcc_generate_files@@Base+0x48>
  40645a:	mov    esi,DWORD PTR [rbp+0x1bc]
  406460:	test   esi,esi
  406462:	jne    4064f0 <flatcc_generate_files@@Base+0xf0>
  406468:	lea    r12,[rbp+0xe8]
  40646f:	mov    rsi,r12
  406472:	mov    rdi,rsp
  406475:	mov    r13,rsp
  406478:	call   406df0 <__flatcc_fb_init_output_c@@Base>
  40647d:	test   eax,eax
  40647f:	jne    406510 <flatcc_generate_files@@Base+0x110>
  406485:	mov    ecx,DWORD PTR [rbp+0x188]
  40648b:	test   ecx,ecx
  40648d:	je     406550 <flatcc_generate_files@@Base+0x150>
  406493:	mov    r12d,DWORD PTR [rbp+0xe4]
  40649a:	test   r12d,r12d
  40649d:	je     4064bd <flatcc_generate_files@@Base+0xbd>
  40649f:	mov    edx,DWORD PTR [rbp+0x1b4]
  4064a5:	test   edx,edx
  4064a7:	je     406570 <flatcc_generate_files@@Base+0x170>
  4064ad:	mov    eax,DWORD PTR [rbx+0xd0]
  4064b3:	test   eax,eax
  4064b5:	je     406520 <flatcc_generate_files@@Base+0x120>
  4064b7:	mov    r12d,0x1
  4064bd:	mov    rdi,r13
  4064c0:	call   406dc0 <__flatcc_fb_end_output_c@@Base>
  4064c5:	mov    rcx,QWORD PTR [rsp+0x108]
  4064cd:	xor    rcx,QWORD PTR fs:0x28
  4064d6:	mov    eax,r12d
  4064d9:	jne    406587 <flatcc_generate_files@@Base+0x187>
  4064df:	add    rsp,0x118
  4064e6:	pop    rbx
  4064e7:	pop    rbp
  4064e8:	pop    r12
  4064ea:	pop    r13
  4064ec:	ret    
  4064ed:	nop    DWORD PTR [rax]
  4064f0:	lea    r12,[rbp+0xe8]
  4064f7:	lea    rsi,[rbp+0x1f8]
  4064fe:	mov    rdi,r12
  406501:	call   419bf0 <__flatcc_fb_codegen_bfbs_to_file@@Base>
  406506:	test   eax,eax
  406508:	je     40646f <flatcc_generate_files@@Base+0x6f>
  40650e:	xchg   ax,ax
  406510:	mov    r12d,0xffffffff
  406516:	jmp    4064c5 <flatcc_generate_files@@Base+0xc5>
  406518:	nop    DWORD PTR [rax+rax*1+0x0]
  406520:	lea    rsi,[rbx+0x1f8]
  406527:	mov    rdi,r13
  40652a:	call   4074b0 <__flatcc_fb_codegen_c@@Base>
  40652f:	test   eax,eax
  406531:	mov    rbx,QWORD PTR [rbx+0x8]
  406535:	jne    406540 <flatcc_generate_files@@Base+0x140>
  406537:	test   rbx,rbx
  40653a:	jne    4064ad <flatcc_generate_files@@Base+0xad>
  406540:	xor    r12d,r12d
  406543:	test   eax,eax
  406545:	setne  r12b
  406549:	jmp    4064bd <flatcc_generate_files@@Base+0xbd>
  40654e:	xchg   ax,ax
  406550:	mov    rdi,rsp
  406553:	call   4073f0 <__flatcc_fb_codegen_common_c@@Base>
  406558:	test   eax,eax
  40655a:	mov    r12d,eax
  40655d:	jne    4064bd <flatcc_generate_files@@Base+0xbd>
  406563:	jmp    406493 <flatcc_generate_files@@Base+0x93>
  406568:	nop    DWORD PTR [rax+rax*1+0x0]
  406570:	lea    rsi,[rbp+0x1f8]
  406577:	mov    rdi,r13
  40657a:	call   4074b0 <__flatcc_fb_codegen_c@@Base>
  40657f:	mov    r12d,eax
  406582:	jmp    4064bd <flatcc_generate_files@@Base+0xbd>
  406587:	call   4050d0 <__stack_chk_fail@plt>
  40658c:	nop    DWORD PTR [rax+0x0]

0000000000406590 <flatcc_destroy_context@@Base>:
  406590:	test   rdi,rdi
  406593:	je     4065c1 <flatcc_destroy_context@@Base+0x31>
  406595:	push   rbp
  406596:	push   rbx
  406597:	mov    rbx,rdi
  40659a:	sub    rsp,0x8
  40659e:	xchg   ax,ax
  4065a0:	mov    rbp,QWORD PTR [rbx]
  4065a3:	mov    rdi,rbx
  4065a6:	call   421770 <__flatcc_fb_clear_parser@@Base>
  4065ab:	mov    rdi,rbx
  4065ae:	call   405040 <free@plt>
  4065b3:	test   rbp,rbp
  4065b6:	mov    rbx,rbp
  4065b9:	jne    4065a0 <flatcc_destroy_context@@Base+0x10>
  4065bb:	add    rsp,0x8
  4065bf:	pop    rbx
  4065c0:	pop    rbp
  4065c1:	repz ret 
  4065c3:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4065ce:	xchg   ax,ax

00000000004065d0 <flatcc_parse_file@@Base>:
  4065d0:	push   r15
  4065d2:	push   r14
  4065d4:	xor    r15d,r15d
  4065d7:	push   r13
  4065d9:	push   r12
  4065db:	mov    r13,rsi
  4065de:	push   rbp
  4065df:	push   rbx
  4065e0:	mov    rbx,rdi
  4065e3:	mov    rdi,rsi
  4065e6:	sub    rsp,0x38
  4065ea:	mov    rax,QWORD PTR fs:0x28
  4065f3:	mov    QWORD PTR [rsp+0x28],rax
  4065f8:	xor    eax,eax
  4065fa:	call   4050c0 <strlen@plt>
  4065ff:	mov    rcx,QWORD PTR [rbx+0x260]
  406606:	mov    r14,rax
  406609:	lea    rax,[rbx+0x1f8]
  406610:	mov    edx,0x1
  406615:	mov    rsi,rax
  406618:	mov    QWORD PTR [rsp+0x8],rax
  40661d:	lea    rdi,[rcx+0x40]
  406621:	call   41ca50 <fb_schema_table_insert_item@@Base>
  406626:	test   rax,rax
  406629:	je     406658 <flatcc_parse_file@@Base+0x88>
  40662b:	mov    rcx,QWORD PTR [rsp+0x28]
  406630:	xor    rcx,QWORD PTR fs:0x28
  406639:	mov    eax,r15d
  40663c:	jne    406be8 <flatcc_parse_file@@Base+0x618>
  406642:	add    rsp,0x38
  406646:	pop    rbx
  406647:	pop    rbp
  406648:	pop    r12
  40664a:	pop    r13
  40664c:	pop    r14
  40664e:	pop    r15
  406650:	ret    
  406651:	nop    DWORD PTR [rax+0x0]
  406658:	mov    rax,QWORD PTR [rbx+0x350]
  40665f:	test   rax,rax
  406662:	mov    QWORD PTR [rsp+0x18],rax
  406667:	mov    QWORD PTR [rsp+0x10],rax
  40666c:	je     406b76 <flatcc_parse_file@@Base+0x5a6>
  406672:	mov    edx,DWORD PTR [rbx+0x1e8]
  406678:	test   edx,edx
  40667a:	jle    4068b4 <flatcc_parse_file@@Base+0x2e4>
  406680:	lea    rax,[rsp+0x20]
  406685:	xor    ebp,ebp
  406687:	xor    r12d,r12d
  40668a:	mov    QWORD PTR [rsp],rax
  40668e:	xchg   ax,ax
  406690:	mov    rax,QWORD PTR [rbx+0x1d8]
  406697:	mov    r15,QWORD PTR [rax+rbp*1]
  40669b:	mov    rdi,r15
  40669e:	call   4050c0 <strlen@plt>
  4066a3:	lea    r8,[rip+0x3f164]        # 44580e <_IO_stdin_used@@Base+0x1880e>
  4066aa:	mov    rdi,r15
  4066ad:	mov    r9d,0x1
  4066b3:	mov    rcx,r14
  4066b6:	mov    rdx,r13
  4066b9:	mov    rsi,rax
  4066bc:	call   41cc30 <__flatcc_fb_create_join_path_n@@Base>
  4066c1:	test   rax,rax
  4066c4:	mov    r15,rax
  4066c7:	je     406bab <flatcc_parse_file@@Base+0x5db>
  4066cd:	mov    rsi,QWORD PTR [rbx+0xe8]
  4066d4:	mov    rdx,QWORD PTR [rsp]
  4066d8:	mov    rdi,rax
  4066db:	call   41d060 <__flatcc_fb_read_file@@Base>
  4066e0:	test   rax,rax
  4066e3:	mov    rsi,rax
  4066e6:	je     406868 <flatcc_parse_file@@Base+0x298>
  4066ec:	mov    rax,QWORD PTR [rbx+0x260]
  4066f3:	mov    rdx,QWORD PTR [rsp+0x20]
  4066f8:	mov    ecx,0x1
  4066fd:	mov    rdi,rbx
  406700:	add    QWORD PTR [rax+0x68],rdx
  406704:	mov    QWORD PTR [rbx+0x348],r15
  40670b:	call   41edd0 <__flatcc_fb_parse@@Base>
  406710:	test   eax,eax
  406712:	mov    r15d,eax
  406715:	jne    406960 <flatcc_parse_file@@Base+0x390>
  40671b:	mov    r13,QWORD PTR [rbx+0x1f8]
  406722:	test   r13,r13
  406725:	je     4069c0 <flatcc_parse_file@@Base+0x3f0>
  40672b:	lea    rax,[rbx+0xe8]
  406732:	mov    QWORD PTR [rsp],rax
  406736:	jmp    406775 <flatcc_parse_file@@Base+0x1a5>
  406738:	nop    DWORD PTR [rax+rax*1+0x0]
  406740:	mov    rdx,QWORD PTR [rsp+0x8]
  406745:	lea    rdi,[rax+0x128]
  40674c:	lea    rsi,[rip+0xfffffffffffff99d]        # 4060f0 <parse_opts@@Base+0x90>
  406753:	call   41abd0 <ptr_set_visit@@Base>
  406758:	mov    rdi,rbp
  40675b:	call   406590 <flatcc_destroy_context@@Base>
  406760:	mov    rdi,r14
  406763:	call   405040 <free@plt>
  406768:	mov    r13,QWORD PTR [r13+0x0]
  40676c:	test   r13,r13
  40676f:	je     4069c0 <flatcc_parse_file@@Base+0x3f0>
  406775:	movsxd rsi,DWORD PTR [r13+0x10]
  406779:	mov    rdi,QWORD PTR [r13+0x8]
  40677d:	call   41cb30 <__flatcc_fb_copy_path_n@@Base>
  406782:	test   rax,rax
  406785:	mov    r14,rax
  406788:	je     406bab <flatcc_parse_file@@Base+0x5db>
  40678e:	mov    r12,QWORD PTR [rbx+0x260]
  406795:	mov    eax,DWORD PTR [rbx+0xf0]
  40679b:	cmp    DWORD PTR [r12+0x64],eax
  4067a0:	jl     4067aa <flatcc_parse_file@@Base+0x1da>
  4067a2:	test   eax,eax
  4067a4:	jg     406970 <flatcc_parse_file@@Base+0x3a0>
  4067aa:	mov    eax,DWORD PTR [rbx+0xf4]
  4067b0:	cmp    DWORD PTR [r12+0x60],eax
  4067b5:	jl     4067bf <flatcc_parse_file@@Base+0x1ef>
  4067b7:	test   eax,eax
  4067b9:	jg     406b60 <flatcc_parse_file@@Base+0x590>
  4067bf:	mov    edi,0x358
  4067c4:	call   405180 <malloc@plt>
  4067c9:	test   rax,rax
  4067cc:	mov    rbp,rax
  4067cf:	je     406988 <flatcc_parse_file@@Base+0x3b8>
  4067d5:	mov    rcx,QWORD PTR [rbx+0x10]
  4067d9:	mov    r8,QWORD PTR [rbx+0x18]
  4067dd:	mov    r9,r12
  4067e0:	mov    rsi,QWORD PTR [rsp]
  4067e4:	mov    rdx,r14
  4067e7:	mov    rdi,rax
  4067ea:	call   41ea50 <__flatcc_fb_init_parser@@Base>
  4067ef:	test   eax,eax
  4067f1:	jne    406998 <flatcc_parse_file@@Base+0x3c8>
  4067f7:	lea    rsi,[rbp+0x1f8]
  4067fe:	lea    rdi,[r12+0x40]
  406803:	call   41ca90 <fb_schema_table_find_item@@Base>
  406808:	test   rax,rax
  40680b:	jne    406740 <flatcc_parse_file@@Base+0x170>
  406811:	mov    rax,QWORD PTR [rbx]
  406814:	mov    QWORD PTR [rbx],rbp
  406817:	mov    rsi,r14
  40681a:	mov    rdi,rbp
  40681d:	mov    QWORD PTR [rbp+0x0],rax
  406821:	mov    rax,QWORD PTR [rbx+0x348]
  406828:	mov    QWORD PTR [rbp+0x350],rax
  40682f:	add    DWORD PTR [r12+0x64],0x1
  406835:	add    DWORD PTR [r12+0x60],0x1
  40683b:	call   4065d0 <flatcc_parse_file@@Base>
  406840:	test   eax,eax
  406842:	jne    406988 <flatcc_parse_file@@Base+0x3b8>
  406848:	mov    rdx,QWORD PTR [rsp+0x8]
  40684d:	lea    rdi,[rbp+0x320]
  406854:	lea    rsi,[rip+0xfffffffffffff895]        # 4060f0 <parse_opts@@Base+0x90>
  40685b:	call   41abd0 <ptr_set_visit@@Base>
  406860:	jmp    406760 <flatcc_parse_file@@Base+0x190>
  406865:	nop    DWORD PTR [rax]
  406868:	mov    rdi,r15
  40686b:	call   405040 <free@plt>
  406870:	mov    rax,QWORD PTR [rbx+0xe8]
  406877:	cmp    rax,QWORD PTR [rsp+0x20]
  40687c:	jae    406887 <flatcc_parse_file@@Base+0x2b7>
  40687e:	test   rax,rax
  406881:	jne    4069a2 <flatcc_parse_file@@Base+0x3d2>
  406887:	add    r12d,0x1
  40688b:	add    rbp,0x8
  40688f:	cmp    DWORD PTR [rbx+0x1e8],r12d
  406896:	jg     406690 <flatcc_parse_file@@Base+0xc0>
  40689c:	cmp    QWORD PTR [rsp+0x10],0x0
  4068a2:	je     406938 <flatcc_parse_file@@Base+0x368>
  4068a8:	mov    rax,QWORD PTR [rbx+0x350]
  4068af:	mov    QWORD PTR [rsp+0x10],rax
  4068b4:	mov    r15,QWORD PTR [rsp+0x10]
  4068b9:	mov    rdi,r15
  4068bc:	call   4050c0 <strlen@plt>
  4068c1:	mov    rdi,r15
  4068c4:	mov    rsi,rax
  4068c7:	call   41cfb0 <__flatcc_fb_find_basename@@Base>
  4068cc:	lea    r8,[rip+0x3ef3b]        # 44580e <_IO_stdin_used@@Base+0x1880e>
  4068d3:	mov    rdi,r15
  4068d6:	mov    r9d,0x1
  4068dc:	mov    rcx,r14
  4068df:	mov    rdx,r13
  4068e2:	mov    rsi,rax
  4068e5:	call   41cc30 <__flatcc_fb_create_join_path_n@@Base>
  4068ea:	test   rax,rax
  4068ed:	mov    r15,rax
  4068f0:	je     406bab <flatcc_parse_file@@Base+0x5db>
  4068f6:	mov    rsi,QWORD PTR [rbx+0xe8]
  4068fd:	lea    rdx,[rsp+0x20]
  406902:	mov    rdi,rax
  406905:	call   41d060 <__flatcc_fb_read_file@@Base>
  40690a:	test   rax,rax
  40690d:	mov    rsi,rax
  406910:	jne    4066ec <flatcc_parse_file@@Base+0x11c>
  406916:	mov    rdi,r15
  406919:	call   405040 <free@plt>
  40691e:	mov    rax,QWORD PTR [rbx+0xe8]
  406925:	cmp    rax,QWORD PTR [rsp+0x20]
  40692a:	jae    406938 <flatcc_parse_file@@Base+0x368>
  40692c:	test   rax,rax
  40692f:	jne    4069a2 <flatcc_parse_file@@Base+0x3d2>
  406931:	nop    DWORD PTR [rax+0x0]
  406938:	lea    rsi,[rip+0x27dc9]        # 42e708 <_IO_stdin_used@@Base+0x1708>
  40693f:	mov    rdx,r13
  406942:	mov    rdi,rbx
  406945:	xor    eax,eax
  406947:	mov    r15d,0xffffffff
  40694d:	call   41d420 <__flatcc_fb_print_error@@Base>
  406952:	jmp    40662b <flatcc_parse_file@@Base+0x5b>
  406957:	nop    WORD PTR [rax+rax*1+0x0]
  406960:	xor    r15d,r15d
  406963:	jmp    40662b <flatcc_parse_file@@Base+0x5b>
  406968:	nop    DWORD PTR [rax+rax*1+0x0]
  406970:	lea    rsi,[rip+0x27db9]        # 42e730 <_IO_stdin_used@@Base+0x1730>
  406977:	mov    rdi,rbx
  40697a:	xor    eax,eax
  40697c:	call   41d420 <__flatcc_fb_print_error@@Base>
  406981:	nop    DWORD PTR [rax+0x0]
  406988:	mov    rdi,r14
  40698b:	call   405040 <free@plt>
  406990:	jmp    40662b <flatcc_parse_file@@Base+0x5b>
  406995:	nop    DWORD PTR [rax]
  406998:	mov    rdi,rbp
  40699b:	call   405040 <free@plt>
  4069a0:	jmp    406988 <flatcc_parse_file@@Base+0x3b8>
  4069a2:	lea    rsi,[rip+0x27d37]        # 42e6e0 <_IO_stdin_used@@Base+0x16e0>
  4069a9:	mov    rdi,rbx
  4069ac:	xor    eax,eax
  4069ae:	mov    r15d,0xffffffff
  4069b4:	call   41d420 <__flatcc_fb_print_error@@Base>
  4069b9:	jmp    40662b <flatcc_parse_file@@Base+0x5b>
  4069be:	xchg   ax,ax
  4069c0:	mov    rsi,QWORD PTR [rsp+0x8]
  4069c5:	lea    rdi,[rbx+0x320]
  4069cc:	mov    edx,0x1
  4069d1:	call   41ab80 <ptr_set_insert_item@@Base>
  4069d6:	mov    rdi,rbx
  4069d9:	call   424800 <__flatcc_fb_build_schema@@Base>
  4069de:	test   eax,eax
  4069e0:	mov    r15d,eax
  4069e3:	jne    406960 <flatcc_parse_file@@Base+0x390>
  4069e9:	mov    ecx,DWORD PTR [rbx+0x16c]
  4069ef:	test   ecx,ecx
  4069f1:	je     406960 <flatcc_parse_file@@Base+0x390>
  4069f7:	cmp    QWORD PTR [rsp+0x18],0x0
  4069fd:	jne    406960 <flatcc_parse_file@@Base+0x390>
  406a03:	cmp    QWORD PTR [rbx+0x350],0x0
  406a0b:	jne    406c20 <flatcc_parse_file@@Base+0x650>
  406a11:	mov    rbp,QWORD PTR [rbx+0x1f0]
  406a18:	mov    rsi,QWORD PTR [rbx+0x170]
  406a1f:	lea    rdx,[rip+0x3ede8]        # 44580e <_IO_stdin_used@@Base+0x1880e>
  406a26:	mov    rax,QWORD PTR [rbx+0x308]
  406a2d:	mov    r14,QWORD PTR [rbx+0x178]
  406a34:	mov    rdi,rdx
  406a37:	test   rbp,rbp
  406a3a:	cmove  rbp,rdx
  406a3e:	test   rsi,rsi
  406a41:	je     406c0e <flatcc_parse_file@@Base+0x63e>
  406a47:	test   r14,r14
  406a4a:	je     406bed <flatcc_parse_file@@Base+0x61d>
  406a50:	lea    rbp,[rip+0x3edb7]        # 44580e <_IO_stdin_used@@Base+0x1880e>
  406a57:	mov    r13,rbp
  406a5a:	mov    ecx,0x1
  406a5f:	call   41cd90 <__flatcc_fb_create_join_path@@Base>
  406a64:	test   rax,rax
  406a67:	mov    r12,rax
  406a6a:	je     406bab <flatcc_parse_file@@Base+0x5db>
  406a70:	mov    rdi,rbp
  406a73:	mov    ecx,0x1
  406a78:	mov    rdx,r13
  406a7b:	mov    rsi,r14
  406a7e:	call   41cd90 <__flatcc_fb_create_join_path@@Base>
  406a83:	test   rax,rax
  406a86:	mov    rbp,rax
  406a89:	je     406bab <flatcc_parse_file@@Base+0x5db>
  406a8f:	mov    rdi,rax
  406a92:	call   41cf90 <__flatcc_fb_create_make_path@@Base>
  406a97:	test   rax,rax
  406a9a:	mov    r13,rax
  406a9d:	je     406bab <flatcc_parse_file@@Base+0x5db>
  406aa3:	mov    rdi,rbp
  406aa6:	call   405040 <free@plt>
  406aab:	lea    rsi,[rip+0x27d77]        # 42e829 <_IO_stdin_used@@Base+0x1829>
  406ab2:	mov    rdi,r12
  406ab5:	call   4051d0 <fopen@plt>
  406aba:	test   rax,rax
  406abd:	mov    rbp,rax
  406ac0:	je     406c3f <flatcc_parse_file@@Base+0x66f>
  406ac6:	lea    rdx,[rip+0x27d5f]        # 42e82c <_IO_stdin_used@@Base+0x182c>
  406acd:	mov    rdi,rax
  406ad0:	mov    rcx,r13
  406ad3:	xor    eax,eax
  406ad5:	mov    esi,0x1
  406ada:	call   405200 <__fprintf_chk@plt>
  406adf:	mov    rbx,QWORD PTR [rbx]
  406ae2:	test   rbx,rbx
  406ae5:	je     406b28 <flatcc_parse_file@@Base+0x558>
  406ae7:	mov    rdi,QWORD PTR [rbx+0x348]
  406aee:	call   41cf90 <__flatcc_fb_create_make_path@@Base>
  406af3:	test   rax,rax
  406af6:	mov    r14,rax
  406af9:	je     406bab <flatcc_parse_file@@Base+0x5db>
  406aff:	lea    rdx,[rip+0x27d2a]        # 42e830 <_IO_stdin_used@@Base+0x1830>
  406b06:	mov    rcx,rax
  406b09:	mov    esi,0x1
  406b0e:	mov    rdi,rbp
  406b11:	xor    eax,eax
  406b13:	call   405200 <__fprintf_chk@plt>
  406b18:	mov    rbx,QWORD PTR [rbx]
  406b1b:	mov    rdi,r14
  406b1e:	call   405040 <free@plt>
  406b23:	test   rbx,rbx
  406b26:	jne    406ae7 <flatcc_parse_file@@Base+0x517>
  406b28:	lea    rdx,[rip+0x3ecde]        # 44580d <_IO_stdin_used@@Base+0x1880d>
  406b2f:	mov    esi,0x1
  406b34:	mov    rdi,rbp
  406b37:	xor    eax,eax
  406b39:	call   405200 <__fprintf_chk@plt>
  406b3e:	mov    rdi,r12
  406b41:	call   405040 <free@plt>
  406b46:	mov    rdi,r13
  406b49:	call   405040 <free@plt>
  406b4e:	mov    rdi,rbp
  406b51:	call   4050b0 <fclose@plt>
  406b56:	jmp    40662b <flatcc_parse_file@@Base+0x5b>
  406b5b:	nop    DWORD PTR [rax+rax*1+0x0]
  406b60:	lea    rsi,[rip+0x27c8f]        # 42e7f6 <_IO_stdin_used@@Base+0x17f6>
  406b67:	mov    rdi,rbx
  406b6a:	xor    eax,eax
  406b6c:	call   41d420 <__flatcc_fb_print_error@@Base>
  406b71:	jmp    406988 <flatcc_parse_file@@Base+0x3b8>
  406b76:	mov    rsi,QWORD PTR [rbx+0xe8]
  406b7d:	lea    rdx,[rsp+0x20]
  406b82:	mov    rdi,r13
  406b85:	call   41d060 <__flatcc_fb_read_file@@Base>
  406b8a:	test   rax,rax
  406b8d:	je     406bb0 <flatcc_parse_file@@Base+0x5e0>
  406b8f:	mov    rdi,r13
  406b92:	mov    QWORD PTR [rsp],rax
  406b96:	call   41cb90 <__flatcc_fb_copy_path@@Base>
  406b9b:	test   rax,rax
  406b9e:	mov    r15,rax
  406ba1:	mov    rsi,QWORD PTR [rsp]
  406ba5:	jne    4066ec <flatcc_parse_file@@Base+0x11c>
  406bab:	call   406110 <parse_opts@@Base+0xb0>
  406bb0:	mov    rcx,QWORD PTR [rbx+0x260]
  406bb7:	mov    rax,QWORD PTR [rsp+0x20]
  406bbc:	mov    rdx,QWORD PTR [rbx+0xe8]
  406bc3:	add    rax,QWORD PTR [rcx+0x68]
  406bc7:	cmp    rax,rdx
  406bca:	jbe    406bd5 <flatcc_parse_file@@Base+0x605>
  406bcc:	test   rdx,rdx
  406bcf:	jne    4069a2 <flatcc_parse_file@@Base+0x3d2>
  406bd5:	mov    eax,DWORD PTR [rbx+0x1e8]
  406bdb:	test   eax,eax
  406bdd:	jle    406938 <flatcc_parse_file@@Base+0x368>
  406be3:	jmp    406680 <flatcc_parse_file@@Base+0xb0>
  406be8:	call   4050d0 <__stack_chk_fail@plt>
  406bed:	cmp    DWORD PTR [rbx+0x1bc],0x0
  406bf4:	mov    r14,rax
  406bf7:	lea    r13,[rip+0x27d37]        # 42e935 <_IO_stdin_used@@Base+0x1935>
  406bfe:	lea    rax,[rip+0x27bdf]        # 42e7e4 <_IO_stdin_used@@Base+0x17e4>
  406c05:	cmovne r13,rax
  406c09:	jmp    406a5a <flatcc_parse_file@@Base+0x48a>
  406c0e:	mov    rdi,rbp
  406c11:	mov    rsi,rax
  406c14:	lea    rdx,[rip+0x27bd4]        # 42e7ef <_IO_stdin_used@@Base+0x17ef>
  406c1b:	jmp    406a47 <flatcc_parse_file@@Base+0x477>
  406c20:	lea    rcx,[rip+0x27c19]        # 42e840 <_IO_stdin_used@@Base+0x1840>
  406c27:	lea    rsi,[rip+0x27b22]        # 42e750 <_IO_stdin_used@@Base+0x1750>
  406c2e:	lea    rdi,[rip+0x27bdf]        # 42e814 <_IO_stdin_used@@Base+0x1814>
  406c35:	mov    edx,0xdc
  406c3a:	call   405100 <__assert_fail@plt>
  406c3f:	lea    rsi,[rip+0x27b6a]        # 42e7b0 <_IO_stdin_used@@Base+0x17b0>
  406c46:	mov    rdx,r12
  406c49:	mov    rdi,rbx
  406c4c:	xor    eax,eax
  406c4e:	call   41d420 <__flatcc_fb_print_error@@Base>
  406c53:	mov    rdi,r12
  406c56:	call   405040 <free@plt>
  406c5b:	mov    rdi,r13
  406c5e:	call   405040 <free@plt>
  406c63:	jmp    40662b <flatcc_parse_file@@Base+0x5b>
  406c68:	nop    DWORD PTR [rax+rax*1+0x0]
  406c70:	mov    rdi,rsi
  406c73:	jmp    405040 <free@plt>
  406c78:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000406c80 <__flatcc_fb_open_output_file@@Base>:
  406c80:	push   r15
  406c82:	push   r14
  406c84:	mov    r15,rcx
  406c87:	push   r13
  406c89:	push   r12
  406c8b:	mov    r13,rsi
  406c8e:	push   rbp
  406c8f:	push   rbx
  406c90:	mov    r14,rdx
  406c93:	mov    rbx,rdi
  406c96:	sub    rsp,0x8
  406c9a:	mov    rax,QWORD PTR [rdi+0xe0]
  406ca1:	mov    rbp,QWORD PTR [rax+0x108]
  406ca8:	test   rbp,rbp
  406cab:	je     406cd8 <__flatcc_fb_open_output_file@@Base+0x58>
  406cad:	mov    rdi,rbp
  406cb0:	xor    r12d,r12d
  406cb3:	call   4050c0 <strlen@plt>
  406cb8:	cmp    QWORD PTR [rbx+0xd0],0x0
  406cc0:	je     406cf0 <__flatcc_fb_open_output_file@@Base+0x70>
  406cc2:	add    rsp,0x8
  406cc6:	mov    eax,r12d
  406cc9:	pop    rbx
  406cca:	pop    rbp
  406ccb:	pop    r12
  406ccd:	pop    r13
  406ccf:	pop    r14
  406cd1:	pop    r15
  406cd3:	ret    
  406cd4:	nop    DWORD PTR [rax+0x0]
  406cd8:	xor    eax,eax
  406cda:	xor    r12d,r12d
  406cdd:	cmp    QWORD PTR [rbx+0xd0],0x0
  406ce5:	lea    rbp,[rip+0x3eb22]        # 44580e <_IO_stdin_used@@Base+0x1880e>
  406cec:	jne    406cc2 <__flatcc_fb_open_output_file@@Base+0x42>
  406cee:	xchg   ax,ax
  406cf0:	mov    rdi,rbp
  406cf3:	mov    r9d,0x1
  406cf9:	mov    r8,r15
  406cfc:	mov    rcx,r14
  406cff:	mov    rdx,r13
  406d02:	mov    rsi,rax
  406d05:	call   41cc30 <__flatcc_fb_create_join_path_n@@Base>
  406d0a:	test   rax,rax
  406d0d:	mov    rbp,rax
  406d10:	je     406d5f <__flatcc_fb_open_output_file@@Base+0xdf>
  406d12:	lea    rsi,[rip+0x27b10]        # 42e829 <_IO_stdin_used@@Base+0x1829>
  406d19:	mov    rdi,rax
  406d1c:	call   4051d0 <fopen@plt>
  406d21:	test   rax,rax
  406d24:	mov    QWORD PTR [rbx+0xd0],rax
  406d2b:	je     406d37 <__flatcc_fb_open_output_file@@Base+0xb7>
  406d2d:	mov    rdi,rbp
  406d30:	call   405040 <free@plt>
  406d35:	jmp    406cc2 <__flatcc_fb_open_output_file@@Base+0x42>
  406d37:	mov    rax,QWORD PTR [rip+0x4a2aa]        # 450fe8 <stderr@GLIBC_2.2.5>
  406d3e:	lea    rdx,[rip+0x27b1b]        # 42e860 <_IO_stdin_used@@Base+0x1860>
  406d45:	mov    rcx,rbp
  406d48:	mov    esi,0x1
  406d4d:	mov    r12d,0xffffffff
  406d53:	mov    rdi,QWORD PTR [rax]
  406d56:	xor    eax,eax
  406d58:	call   405200 <__fprintf_chk@plt>
  406d5d:	jmp    406d2d <__flatcc_fb_open_output_file@@Base+0xad>
  406d5f:	call   405230 <__sprintf_chk@plt+0x10>
  406d64:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  406d6f:	nop

0000000000406d70 <__flatcc_fb_close_output_file@@Base>:
  406d70:	mov    rax,QWORD PTR [rdi+0xe0]
  406d77:	cmp    QWORD PTR [rax+0x98],0x0
  406d7f:	je     406d88 <__flatcc_fb_close_output_file@@Base+0x18>
  406d81:	repz ret 
  406d83:	nop    DWORD PTR [rax+rax*1+0x0]
  406d88:	mov    eax,DWORD PTR [rax+0x80]
  406d8e:	test   eax,eax
  406d90:	jne    406d81 <__flatcc_fb_close_output_file@@Base+0x11>
  406d92:	mov    rax,QWORD PTR [rdi+0xd0]
  406d99:	test   rax,rax
  406d9c:	je     406d81 <__flatcc_fb_close_output_file@@Base+0x11>
  406d9e:	push   rbx
  406d9f:	mov    rbx,rdi
  406da2:	mov    rdi,rax
  406da5:	call   4050b0 <fclose@plt>
  406daa:	mov    QWORD PTR [rbx+0xd0],0x0
  406db5:	pop    rbx
  406db6:	ret    
  406db7:	nop    WORD PTR [rax+rax*1+0x0]

0000000000406dc0 <__flatcc_fb_end_output_c@@Base>:
  406dc0:	mov    rax,QWORD PTR [rip+0x4a209]        # 450fd0 <stdout@GLIBC_2.2.5>
  406dc7:	push   rbx
  406dc8:	mov    rbx,rdi
  406dcb:	mov    rdi,QWORD PTR [rdi+0xd0]
  406dd2:	cmp    QWORD PTR [rax],rdi
  406dd5:	je     406de1 <__flatcc_fb_end_output_c@@Base+0x21>
  406dd7:	test   rdi,rdi
  406dda:	je     406de1 <__flatcc_fb_end_output_c@@Base+0x21>
  406ddc:	call   4050b0 <fclose@plt>
  406de1:	mov    QWORD PTR [rbx+0xd0],0x0
  406dec:	pop    rbx
  406ded:	ret    
  406dee:	xchg   ax,ax

0000000000406df0 <__flatcc_fb_init_output_c@@Base>:
  406df0:	push   r15
  406df2:	push   r14
  406df4:	mov    r14,rdi
  406df7:	push   r13
  406df9:	push   r12
  406dfb:	lea    r13,[rip+0x27a27]        # 42e829 <_IO_stdin_used@@Base+0x1829>
  406e02:	push   rbp
  406e03:	push   rbx
  406e04:	mov    rcx,r14
  406e07:	mov    r15,rsi
  406e0a:	sub    rsp,0x18
  406e0e:	mov    eax,DWORD PTR [rsi+0xa0]
  406e14:	mov    r12,QWORD PTR [rsi+0x108]
  406e1b:	test   eax,eax
  406e1d:	lea    rax,[rip+0x27aea]        # 42e90e <_IO_stdin_used@@Base+0x190e>
  406e24:	cmove  rax,r13
  406e28:	test   r12,r12
  406e2b:	mov    QWORD PTR [rsp+0x8],rax
  406e30:	lea    rax,[rip+0x3e9d7]        # 44580e <_IO_stdin_used@@Base+0x1880e>
  406e37:	mov    QWORD PTR [rdi],0x0
  406e3e:	mov    QWORD PTR [rdi+0xf8],0x0
  406e49:	cmove  r12,rax
  406e4d:	add    rdi,0x8
  406e51:	xor    eax,eax
  406e53:	and    rdi,0xfffffffffffffff8
  406e57:	sub    rcx,rdi
  406e5a:	add    ecx,0x100
  406e60:	shr    ecx,0x3
  406e63:	rep stos QWORD PTR es:[rdi],rax
  406e66:	mov    QWORD PTR [r14+0xe0],rsi
  406e6d:	mov    rbx,QWORD PTR [rsi+0xe8]
  406e74:	test   rbx,rbx
  406e77:	je     406fb5 <__flatcc_fb_init_output_c@@Base+0x1c5>
  406e7d:	mov    rdi,rbx
  406e80:	call   4050c0 <strlen@plt>
  406e85:	cmp    rax,0x64
  406e89:	mov    r13,rax
  406e8c:	ja     407061 <__flatcc_fb_init_output_c@@Base+0x271>
  406e92:	mov    edx,0x64
  406e97:	mov    rsi,rbx
  406e9a:	mov    rdi,r14
  406e9d:	call   405060 <strncpy@plt>
  406ea2:	test   r13,r13
  406ea5:	mov    BYTE PTR [r14+0x64],0x0
  406eaa:	jne    406f80 <__flatcc_fb_init_output_c@@Base+0x190>
  406eb0:	movsx  rbx,BYTE PTR [r14]
  406eb4:	lea    rbp,[r14+0x66]
  406eb8:	test   bl,bl
  406eba:	je     406fad <__flatcc_fb_init_output_c@@Base+0x1bd>
  406ec0:	call   405030 <__ctype_toupper_loc@plt>
  406ec5:	mov    rcx,r14
  406ec8:	mov    rdx,rbp
  406ecb:	nop    DWORD PTR [rax+rax*1+0x0]
  406ed0:	mov    rsi,QWORD PTR [rax]
  406ed3:	add    rdx,0x1
  406ed7:	add    rcx,0x1
  406edb:	mov    esi,DWORD PTR [rsi+rbx*4]
  406ede:	mov    BYTE PTR [rdx-0x1],sil
  406ee2:	movsx  rbx,BYTE PTR [rcx]
  406ee6:	test   bl,bl
  406ee8:	jne    406ed0 <__flatcc_fb_init_output_c@@Base+0xe0>
  406eea:	mov    BYTE PTR [rdx],0x0
  406eed:	mov    BYTE PTR [r14+r13*1+0x66],0x0
  406ef3:	mov    ebx,DWORD PTR [r15+0x80]
  406efa:	mov    eax,DWORD PTR [r15+0xd0]
  406f01:	test   ebx,ebx
  406f03:	mov    DWORD PTR [r14+0xf4],eax
  406f0a:	jne    406f98 <__flatcc_fb_init_output_c@@Base+0x1a8>
  406f10:	mov    rax,QWORD PTR [r14+0xe0]
  406f17:	mov    rsi,QWORD PTR [rax+0x98]
  406f1e:	test   rsi,rsi
  406f21:	je     406f68 <__flatcc_fb_init_output_c@@Base+0x178>
  406f23:	lea    rdx,[rip+0x3e8e4]        # 44580e <_IO_stdin_used@@Base+0x1880e>
  406f2a:	mov    ecx,0x1
  406f2f:	mov    rdi,r12
  406f32:	call   41cd90 <__flatcc_fb_create_join_path@@Base>
  406f37:	test   rax,rax
  406f3a:	mov    rbp,rax
  406f3d:	je     40708d <__flatcc_fb_init_output_c@@Base+0x29d>
  406f43:	mov    rsi,QWORD PTR [rsp+0x8]
  406f48:	mov    rdi,rax
  406f4b:	call   4051d0 <fopen@plt>
  406f50:	test   rax,rax
  406f53:	mov    QWORD PTR [r14+0xd0],rax
  406f5a:	je     407037 <__flatcc_fb_init_output_c@@Base+0x247>
  406f60:	mov    rdi,rbp
  406f63:	call   405040 <free@plt>
  406f68:	add    rsp,0x18
  406f6c:	mov    eax,ebx
  406f6e:	pop    rbx
  406f6f:	pop    rbp
  406f70:	pop    r12
  406f72:	pop    r13
  406f74:	pop    r14
  406f76:	pop    r15
  406f78:	ret    
  406f79:	nop    DWORD PTR [rax+0x0]
  406f80:	lea    rax,[r13+0x1]
  406f84:	mov    BYTE PTR [r14+r13*1],0x5f
  406f89:	mov    BYTE PTR [r14+rax*1],0x0
  406f8e:	jmp    406eb0 <__flatcc_fb_init_output_c@@Base+0xc0>
  406f93:	nop    DWORD PTR [rax+rax*1+0x0]
  406f98:	mov    rax,QWORD PTR [rip+0x4a031]        # 450fd0 <stdout@GLIBC_2.2.5>
  406f9f:	xor    ebx,ebx
  406fa1:	mov    rax,QWORD PTR [rax]
  406fa4:	mov    QWORD PTR [r14+0xd0],rax
  406fab:	jmp    406f68 <__flatcc_fb_init_output_c@@Base+0x178>
  406fad:	mov    rdx,rbp
  406fb0:	jmp    406eea <__flatcc_fb_init_output_c@@Base+0xfa>
  406fb5:	movabs rax,0x6666756274616c66
  406fbf:	mov    QWORD PTR [r14+0x8],0x737265
  406fc7:	mov    QWORD PTR [r14+0x10],0x0
  406fcf:	mov    QWORD PTR [r14],rax
  406fd2:	mov    QWORD PTR [r14+0x18],0x0
  406fda:	mov    eax,0xc
  406fdf:	mov    QWORD PTR [r14+0x20],0x0
  406fe7:	mov    QWORD PTR [r14+0x28],0x0
  406fef:	mov    r13d,0xb
  406ff5:	mov    QWORD PTR [r14+0x30],0x0
  406ffd:	mov    QWORD PTR [r14+0x38],0x0
  407005:	mov    QWORD PTR [r14+0x40],0x0
  40700d:	mov    QWORD PTR [r14+0x48],0x0
  407015:	mov    QWORD PTR [r14+0x50],0x0
  40701d:	mov    QWORD PTR [r14+0x58],0x0
  407025:	mov    DWORD PTR [r14+0x60],0x0
  40702d:	mov    BYTE PTR [r14+0x64],0x0
  407032:	jmp    406f84 <__flatcc_fb_init_output_c@@Base+0x194>
  407037:	mov    rax,QWORD PTR [rip+0x49faa]        # 450fe8 <stderr@GLIBC_2.2.5>
  40703e:	lea    rdx,[rip+0x2781b]        # 42e860 <_IO_stdin_used@@Base+0x1860>
  407045:	mov    rcx,rbp
  407048:	mov    esi,0x1
  40704d:	mov    ebx,0xffffffff
  407052:	mov    rdi,QWORD PTR [rax]
  407055:	xor    eax,eax
  407057:	call   405200 <__fprintf_chk@plt>
  40705c:	jmp    406f60 <__flatcc_fb_init_output_c@@Base+0x170>
  407061:	mov    rax,QWORD PTR [rip+0x49f80]        # 450fe8 <stderr@GLIBC_2.2.5>
  407068:	lea    rdx,[rip+0x27819]        # 42e888 <_IO_stdin_used@@Base+0x1888>
  40706f:	mov    ecx,0x64
  407074:	mov    esi,0x1
  407079:	mov    ebx,0xffffffff
  40707e:	mov    rdi,QWORD PTR [rax]
  407081:	xor    eax,eax
  407083:	call   405200 <__fprintf_chk@plt>
  407088:	jmp    406f68 <__flatcc_fb_init_output_c@@Base+0x178>
  40708d:	call   405230 <__sprintf_chk@plt+0x10>
  407092:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40709d:	nop    DWORD PTR [rax]

00000000004070a0 <__flatcc_fb_gen_c_includes@@Base>:
  4070a0:	push   r15
  4070a2:	push   r14
  4070a4:	push   r13
  4070a6:	push   r12
  4070a8:	mov    r12,rdi
  4070ab:	push   rbp
  4070ac:	push   rbx
  4070ad:	sub    rsp,0x48
  4070b1:	mov    rax,QWORD PTR fs:0x28
  4070ba:	mov    QWORD PTR [rsp+0x38],rax
  4070bf:	xor    eax,eax
  4070c1:	mov    rax,QWORD PTR [rdi+0xd8]
  4070c8:	lea    r13,[rsp+0x10]
  4070cd:	mov    QWORD PTR [rsp],rsi
  4070d1:	mov    QWORD PTR [rsp+0x8],rdx
  4070d6:	mov    rdi,QWORD PTR [rax+0x118]
  4070dd:	mov    rbx,QWORD PTR [rax]
  4070e0:	mov    QWORD PTR [rsp+0x10],0x0
  4070e9:	mov    QWORD PTR [rsp+0x18],0x0
  4070f2:	mov    QWORD PTR [rsp+0x20],0x0
  4070fb:	mov    QWORD PTR [rsp+0x28],0x0
  407104:	call   41cb90 <__flatcc_fb_copy_path@@Base>
  407109:	mov    edx,0x1
  40710e:	mov    rsi,rax
  407111:	mov    rdi,r13
  407114:	call   41a490 <str_set_insert_item@@Base>
  407119:	nop    DWORD PTR [rax+0x0]
  407120:	test   rbx,rbx
  407123:	je     4071c8 <__flatcc_fb_gen_c_includes@@Base+0x128>
  407129:	nop    DWORD PTR [rax+0x0]
  407130:	mov    rax,QWORD PTR [r12+0xe0]
  407138:	movsxd rsi,DWORD PTR [rbx+0x10]
  40713c:	mov    rdi,QWORD PTR [rbx+0x8]
  407140:	mov    rdx,QWORD PTR [rax+0x68]
  407144:	call   41d000 <__flatcc_fb_create_basename@@Base>
  407149:	test   rax,rax
  40714c:	mov    rbp,rax
  40714f:	je     40723d <__flatcc_fb_gen_c_includes@@Base+0x19d>
  407155:	mov    rdi,rax
  407158:	mov    rbx,QWORD PTR [rbx]
  40715b:	call   41cb90 <__flatcc_fb_copy_path@@Base>
  407160:	test   rax,rax
  407163:	mov    r14,rax
  407166:	je     40723d <__flatcc_fb_gen_c_includes@@Base+0x19d>
  40716c:	movzx  r15d,BYTE PTR [rax]
  407170:	test   r15b,r15b
  407173:	je     40719a <__flatcc_fb_gen_c_includes@@Base+0xfa>
  407175:	call   405030 <__ctype_toupper_loc@plt>
  40717a:	mov    rsi,r14
  40717d:	nop    DWORD PTR [rax]
  407180:	mov    rdi,QWORD PTR [rax]
  407183:	movsx  rdx,r15b
  407187:	add    rsi,0x1
  40718b:	mov    edx,DWORD PTR [rdi+rdx*4]
  40718e:	mov    BYTE PTR [rsi-0x1],dl
  407191:	movzx  r15d,BYTE PTR [rsi]
  407195:	test   r15b,r15b
  407198:	jne    407180 <__flatcc_fb_gen_c_includes@@Base+0xe0>
  40719a:	mov    edx,0x1
  40719f:	mov    rsi,r14
  4071a2:	mov    rdi,r13
  4071a5:	call   41a490 <str_set_insert_item@@Base>
  4071aa:	test   rax,rax
  4071ad:	je     407200 <__flatcc_fb_gen_c_includes@@Base+0x160>
  4071af:	mov    rdi,r14
  4071b2:	call   405040 <free@plt>
  4071b7:	mov    rdi,rbp
  4071ba:	call   405040 <free@plt>
  4071bf:	test   rbx,rbx
  4071c2:	jne    407130 <__flatcc_fb_gen_c_includes@@Base+0x90>
  4071c8:	lea    rsi,[rip+0xfffffffffffffaa1]        # 406c70 <flatcc_parse_file@@Base+0x6a0>
  4071cf:	xor    edx,edx
  4071d1:	mov    rdi,r13
  4071d4:	call   41a3a0 <str_set_destroy@@Base>
  4071d9:	mov    rax,QWORD PTR [rsp+0x38]
  4071de:	xor    rax,QWORD PTR fs:0x28
  4071e7:	jne    407242 <__flatcc_fb_gen_c_includes@@Base+0x1a2>
  4071e9:	add    rsp,0x48
  4071ed:	pop    rbx
  4071ee:	pop    rbp
  4071ef:	pop    r12
  4071f1:	pop    r13
  4071f3:	pop    r14
  4071f5:	pop    r15
  4071f7:	ret    
  4071f8:	nop    DWORD PTR [rax+rax*1+0x0]
  407200:	sub    rsp,0x8
  407204:	mov    rdi,QWORD PTR [r12+0xd0]
  40720c:	lea    rdx,[rip+0x276ad]        # 42e8c0 <_IO_stdin_used@@Base+0x18c0>
  407213:	push   QWORD PTR [rsp+0x8]
  407217:	mov    r8,QWORD PTR [rsp+0x18]
  40721c:	mov    r9,rbp
  40721f:	mov    rcx,r14
  407222:	mov    esi,0x1
  407227:	xor    eax,eax
  407229:	call   405200 <__fprintf_chk@plt>
  40722e:	mov    rdi,rbp
  407231:	call   405040 <free@plt>
  407236:	pop    rax
  407237:	pop    rdx
  407238:	jmp    407120 <__flatcc_fb_gen_c_includes@@Base+0x80>
  40723d:	call   405230 <__sprintf_chk@plt+0x10>
  407242:	call   4050d0 <__stack_chk_fail@plt>
  407247:	nop    WORD PTR [rax+rax*1+0x0]

0000000000407250 <__flatcc_fb_copy_scope@@Base>:
  407250:	push   r13
  407252:	push   r12
  407254:	push   rbp
  407255:	push   rbx
  407256:	sub    rsp,0x8
  40725a:	movsxd r12,DWORD PTR [rdi+0x30]
  40725e:	mov    rdx,QWORD PTR [rdi]
  407261:	test   rdx,rdx
  407264:	mov    rax,r12
  407267:	je     407285 <__flatcc_fb_copy_scope@@Base+0x35>
  407269:	nop    DWORD PTR [rax+0x0]
  407270:	mov    rcx,QWORD PTR [rdx+0x8]
  407274:	mov    rdx,QWORD PTR [rdx]
  407277:	mov    rcx,QWORD PTR [rcx+0x8]
  40727b:	test   rdx,rdx
  40727e:	lea    rax,[rax+rcx*1+0x1]
  407283:	jne    407270 <__flatcc_fb_copy_scope@@Base+0x20>
  407285:	cmp    rax,0x65
  407289:	ja     4072f2 <__flatcc_fb_copy_scope@@Base+0xa2>
  40728b:	mov    r13,rsi
  40728e:	mov    rsi,QWORD PTR [rdi+0x28]
  407292:	mov    rbx,rdi
  407295:	mov    rdx,r12
  407298:	mov    rdi,r13
  40729b:	call   405170 <memcpy@plt>
  4072a0:	mov    rbp,QWORD PTR [rbx]
  4072a3:	test   rbp,rbp
  4072a6:	je     4072de <__flatcc_fb_copy_scope@@Base+0x8e>
  4072a8:	nop    DWORD PTR [rax+rax*1+0x0]
  4072b0:	mov    rax,QWORD PTR [rbp+0x8]
  4072b4:	lea    rdi,[r13+r12*1+0x0]
  4072b9:	mov    rbx,QWORD PTR [rax+0x8]
  4072bd:	mov    rsi,QWORD PTR [rax]
  4072c0:	mov    rdx,rbx
  4072c3:	add    rbx,r12
  4072c6:	call   405170 <memcpy@plt>
  4072cb:	mov    BYTE PTR [r13+rbx*1+0x0],0x5f
  4072d1:	mov    rbp,QWORD PTR [rbp+0x0]
  4072d5:	lea    r12,[rbx+0x1]
  4072d9:	test   rbp,rbp
  4072dc:	jne    4072b0 <__flatcc_fb_copy_scope@@Base+0x60>
  4072de:	mov    BYTE PTR [r13+r12*1+0x0],0x0
  4072e4:	mov    eax,r12d
  4072e7:	add    rsp,0x8
  4072eb:	pop    rbx
  4072ec:	pop    rbp
  4072ed:	pop    r12
  4072ef:	pop    r13
  4072f1:	ret    
  4072f2:	mov    BYTE PTR [rsi],0x0
  4072f5:	mov    eax,0xffffffff
  4072fa:	jmp    4072e7 <__flatcc_fb_copy_scope@@Base+0x97>
  4072fc:	nop    DWORD PTR [rax+0x0]

0000000000407300 <__flatcc_fb_scoped_symbol_name@@Base>:
  407300:	push   rbp
  407301:	push   rbx
  407302:	mov    rbx,rdx
  407305:	sub    rsp,0x8
  407309:	cmp    QWORD PTR [rdx+0xd0],rdi
  407310:	mov    rbp,QWORD PTR [rsi+0x8]
  407314:	je     4073d7 <__flatcc_fb_scoped_symbol_name@@Base+0xd7>
  40731a:	mov    rsi,rdx
  40731d:	call   407250 <__flatcc_fb_copy_scope@@Base>
  407322:	test   eax,eax
  407324:	mov    DWORD PTR [rbx+0xd8],eax
  40732a:	js     4073b0 <__flatcc_fb_scoped_symbol_name@@Base+0xb0>
  407330:	mov    rcx,QWORD PTR [rbp+0x8]
  407334:	lea    esi,[rax+rcx*1]
  407337:	mov    edx,ecx
  407339:	mov    DWORD PTR [rbx+0xdc],ecx
  40733f:	cmp    esi,0xcb
  407345:	mov    DWORD PTR [rbx+0xe0],esi
  40734b:	jle    40738b <__flatcc_fb_scoped_symbol_name@@Base+0x8b>
  40734d:	mov    rax,QWORD PTR [rip+0x49c94]        # 450fe8 <stderr@GLIBC_2.2.5>
  407354:	mov    r8,QWORD PTR [rbp+0x0]
  407358:	lea    rdx,[rip+0x27589]        # 42e8e8 <_IO_stdin_used@@Base+0x18e8>
  40735f:	mov    esi,0x1
  407364:	mov    rdi,QWORD PTR [rax]
  407367:	xor    eax,eax
  407369:	call   405200 <__fprintf_chk@plt>
  40736e:	mov    eax,DWORD PTR [rbx+0xd8]
  407374:	mov    edx,0xcb
  407379:	mov    DWORD PTR [rbx+0xe0],0xcb
  407383:	sub    edx,eax
  407385:	mov    DWORD PTR [rbx+0xdc],edx
  40738b:	cdqe   
  40738d:	mov    rsi,QWORD PTR [rbp+0x0]
  407391:	movsxd rdx,edx
  407394:	lea    rdi,[rbx+rax*1]
  407398:	call   405170 <memcpy@plt>
  40739d:	movsxd rax,DWORD PTR [rbx+0xe0]
  4073a4:	mov    BYTE PTR [rbx+rax*1],0x0
  4073a8:	add    rsp,0x8
  4073ac:	pop    rbx
  4073ad:	pop    rbp
  4073ae:	ret    
  4073af:	nop
  4073b0:	mov    rax,QWORD PTR [rip+0x49c31]        # 450fe8 <stderr@GLIBC_2.2.5>
  4073b7:	lea    rdx,[rip+0x27553]        # 42e911 <_IO_stdin_used@@Base+0x1911>
  4073be:	mov    DWORD PTR [rbx+0xd8],0x0
  4073c8:	mov    esi,0x1
  4073cd:	mov    rdi,QWORD PTR [rax]
  4073d0:	xor    eax,eax
  4073d2:	call   405200 <__fprintf_chk@plt>
  4073d7:	mov    eax,DWORD PTR [rbx+0xd8]
  4073dd:	jmp    407330 <__flatcc_fb_scoped_symbol_name@@Base+0x30>
  4073e2:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4073ed:	nop    DWORD PTR [rax]

00000000004073f0 <__flatcc_fb_codegen_common_c@@Base>:
  4073f0:	push   r12
  4073f2:	push   rbp
  4073f3:	push   rbx
  4073f4:	mov    rbx,rdi
  4073f7:	call   4050c0 <strlen@plt>
  4073fc:	lea    rbp,[rax-0x1]
  407400:	mov    rax,QWORD PTR [rbx+0xe0]
  407407:	mov    edx,DWORD PTR [rax+0xb0]
  40740d:	test   edx,edx
  40740f:	jne    407460 <__flatcc_fb_codegen_common_c@@Base+0x70>
  407411:	mov    r12d,DWORD PTR [rax+0xb4]
  407418:	test   r12d,r12d
  40741b:	jne    407428 <__flatcc_fb_codegen_common_c@@Base+0x38>
  40741d:	mov    eax,r12d
  407420:	pop    rbx
  407421:	pop    rbp
  407422:	pop    r12
  407424:	ret    
  407425:	nop    DWORD PTR [rax]
  407428:	lea    rcx,[rip+0x27510]        # 42e93f <_IO_stdin_used@@Base+0x193f>
  40742f:	mov    rdx,rbp
  407432:	mov    rsi,rbx
  407435:	mov    rdi,rbx
  407438:	call   406c80 <__flatcc_fb_open_output_file@@Base>
  40743d:	test   eax,eax
  40743f:	mov    r12d,eax
  407442:	jne    4074a0 <__flatcc_fb_codegen_common_c@@Base+0xb0>
  407444:	mov    rdi,rbx
  407447:	call   40f140 <__flatcc_fb_gen_common_c_builder_header@@Base>
  40744c:	mov    rdi,rbx
  40744f:	call   406d70 <__flatcc_fb_close_output_file@@Base>
  407454:	mov    eax,r12d
  407457:	pop    rbx
  407458:	pop    rbp
  407459:	pop    r12
  40745b:	ret    
  40745c:	nop    DWORD PTR [rax+0x0]
  407460:	lea    rcx,[rip+0x274c7]        # 42e92e <_IO_stdin_used@@Base+0x192e>
  407467:	mov    rdx,rbp
  40746a:	mov    rsi,rbx
  40746d:	mov    rdi,rbx
  407470:	call   406c80 <__flatcc_fb_open_output_file@@Base>
  407475:	test   eax,eax
  407477:	jne    4074a0 <__flatcc_fb_codegen_common_c@@Base+0xb0>
  407479:	mov    rdi,rbx
  40747c:	call   40aca0 <__flatcc_fb_gen_common_c_header@@Base>
  407481:	mov    rdi,rbx
  407484:	mov    r12d,eax
  407487:	call   406d70 <__flatcc_fb_close_output_file@@Base>
  40748c:	test   r12d,r12d
  40748f:	jne    40741d <__flatcc_fb_codegen_common_c@@Base+0x2d>
  407491:	mov    rax,QWORD PTR [rbx+0xe0]
  407498:	jmp    407411 <__flatcc_fb_codegen_common_c@@Base+0x21>
  40749d:	nop    DWORD PTR [rax]
  4074a0:	mov    r12d,0xffffffff
  4074a6:	jmp    40741d <__flatcc_fb_codegen_common_c@@Base+0x2d>
  4074ab:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004074b0 <__flatcc_fb_codegen_c@@Base>:
  4074b0:	push   r12
  4074b2:	push   rbp
  4074b3:	xor    edx,edx
  4074b5:	push   rbx
  4074b6:	mov    rbx,rdi
  4074b9:	sub    rsp,0x10
  4074bd:	mov    QWORD PTR [rdi+0xd8],rsi
  4074c4:	mov    rdi,QWORD PTR [rsi+0x68]
  4074c8:	xor    esi,esi
  4074ca:	call   41c2b0 <fb_scope_table_find@@Base>
  4074cf:	mov    QWORD PTR [rbx+0xe8],rax
  4074d6:	mov    rax,QWORD PTR [rbx+0xd8]
  4074dd:	mov    rbp,QWORD PTR [rax+0x110]
  4074e4:	mov    rdi,rbp
  4074e7:	call   4050c0 <strlen@plt>
  4074ec:	mov    r12,rax
  4074ef:	mov    rax,QWORD PTR [rbx+0xe0]
  4074f6:	mov    edi,DWORD PTR [rax+0xb8]
  4074fc:	test   edi,edi
  4074fe:	jne    407540 <__flatcc_fb_codegen_c@@Base+0x90>
  407500:	mov    esi,DWORD PTR [rax+0xbc]
  407506:	test   esi,esi
  407508:	jne    407588 <__flatcc_fb_codegen_c@@Base+0xd8>
  40750a:	mov    ecx,DWORD PTR [rax+0xc0]
  407510:	test   ecx,ecx
  407512:	jne    4075d8 <__flatcc_fb_codegen_c@@Base+0x128>
  407518:	mov    edx,DWORD PTR [rax+0xc4]
  40751e:	test   edx,edx
  407520:	jne    407628 <__flatcc_fb_codegen_c@@Base+0x178>
  407526:	mov    eax,DWORD PTR [rax+0xc8]
  40752c:	test   eax,eax
  40752e:	jne    407670 <__flatcc_fb_codegen_c@@Base+0x1c0>
  407534:	add    rsp,0x10
  407538:	pop    rbx
  407539:	pop    rbp
  40753a:	pop    r12
  40753c:	ret    
  40753d:	nop    DWORD PTR [rax]
  407540:	lea    rcx,[rip+0x273ee]        # 42e935 <_IO_stdin_used@@Base+0x1935>
  407547:	mov    rdx,r12
  40754a:	mov    rsi,rbp
  40754d:	mov    rdi,rbx
  407550:	call   406c80 <__flatcc_fb_open_output_file@@Base>
  407555:	test   eax,eax
  407557:	jne    4076c0 <__flatcc_fb_codegen_c@@Base+0x210>
  40755d:	mov    rdi,rbx
  407560:	call   40b9e0 <__flatcc_fb_gen_c_reader@@Base>
  407565:	test   eax,eax
  407567:	jne    407534 <__flatcc_fb_codegen_c@@Base+0x84>
  407569:	mov    rdi,rbx
  40756c:	call   406d70 <__flatcc_fb_close_output_file@@Base>
  407571:	mov    rax,QWORD PTR [rbx+0xe0]
  407578:	mov    esi,DWORD PTR [rax+0xbc]
  40757e:	test   esi,esi
  407580:	je     40750a <__flatcc_fb_codegen_c@@Base+0x5a>
  407582:	nop    WORD PTR [rax+rax*1+0x0]
  407588:	mov    rax,QWORD PTR [rbx+0xd8]
  40758f:	lea    rcx,[rip+0x273b0]        # 42e946 <_IO_stdin_used@@Base+0x1946>
  407596:	mov    rdx,r12
  407599:	mov    rdi,rbx
  40759c:	mov    rsi,QWORD PTR [rax+0x110]
  4075a3:	call   406c80 <__flatcc_fb_open_output_file@@Base>
  4075a8:	test   eax,eax
  4075aa:	jne    4076c0 <__flatcc_fb_codegen_c@@Base+0x210>
  4075b0:	mov    rdi,rbx
  4075b3:	call   40fd20 <__flatcc_fb_gen_c_builder@@Base>
  4075b8:	test   eax,eax
  4075ba:	jne    407534 <__flatcc_fb_codegen_c@@Base+0x84>
  4075c0:	mov    rdi,rbx
  4075c3:	call   406d70 <__flatcc_fb_close_output_file@@Base>
  4075c8:	mov    rax,QWORD PTR [rbx+0xe0]
  4075cf:	jmp    40750a <__flatcc_fb_codegen_c@@Base+0x5a>
  4075d4:	nop    DWORD PTR [rax+0x0]
  4075d8:	mov    rax,QWORD PTR [rbx+0xd8]
  4075df:	lea    rcx,[rip+0x2736b]        # 42e951 <_IO_stdin_used@@Base+0x1951>
  4075e6:	mov    rdx,r12
  4075e9:	mov    rdi,rbx
  4075ec:	mov    rsi,QWORD PTR [rax+0x110]
  4075f3:	call   406c80 <__flatcc_fb_open_output_file@@Base>
  4075f8:	test   eax,eax
  4075fa:	jne    4076c0 <__flatcc_fb_codegen_c@@Base+0x210>
  407600:	mov    rdi,rbx
  407603:	call   410d90 <__flatcc_fb_gen_c_verifier@@Base>
  407608:	test   eax,eax
  40760a:	jne    407534 <__flatcc_fb_codegen_c@@Base+0x84>
  407610:	mov    rdi,rbx
  407613:	call   406d70 <__flatcc_fb_close_output_file@@Base>
  407618:	mov    rax,QWORD PTR [rbx+0xe0]
  40761f:	jmp    407518 <__flatcc_fb_codegen_c@@Base+0x68>
  407624:	nop    DWORD PTR [rax+0x0]
  407628:	mov    rax,QWORD PTR [rbx+0xd8]
  40762f:	lea    rcx,[rip+0x27327]        # 42e95d <_IO_stdin_used@@Base+0x195d>
  407636:	mov    rdx,r12
  407639:	mov    rdi,rbx
  40763c:	mov    rsi,QWORD PTR [rax+0x110]
  407643:	call   406c80 <__flatcc_fb_open_output_file@@Base>
  407648:	test   eax,eax
  40764a:	jne    4076c0 <__flatcc_fb_codegen_c@@Base+0x210>
  40764c:	mov    rdi,rbx
  40764f:	call   415230 <__flatcc_fb_gen_c_json_parser@@Base>
  407654:	test   eax,eax
  407656:	jne    407534 <__flatcc_fb_codegen_c@@Base+0x84>
  40765c:	mov    rdi,rbx
  40765f:	call   406d70 <__flatcc_fb_close_output_file@@Base>
  407664:	mov    rax,QWORD PTR [rbx+0xe0]
  40766b:	jmp    407526 <__flatcc_fb_codegen_c@@Base+0x76>
  407670:	mov    rax,QWORD PTR [rbx+0xd8]
  407677:	lea    rcx,[rip+0x272ee]        # 42e96c <_IO_stdin_used@@Base+0x196c>
  40767e:	mov    rdx,r12
  407681:	mov    rdi,rbx
  407684:	mov    rsi,QWORD PTR [rax+0x110]
  40768b:	call   406c80 <__flatcc_fb_open_output_file@@Base>
  407690:	test   eax,eax
  407692:	jne    4076c0 <__flatcc_fb_codegen_c@@Base+0x210>
  407694:	mov    rdi,rbx
  407697:	call   417ad0 <__flatcc_fb_gen_c_json_printer@@Base>
  40769c:	test   eax,eax
  40769e:	jne    407534 <__flatcc_fb_codegen_c@@Base+0x84>
  4076a4:	mov    rdi,rbx
  4076a7:	mov    DWORD PTR [rsp+0xc],eax
  4076ab:	call   406d70 <__flatcc_fb_close_output_file@@Base>
  4076b0:	mov    eax,DWORD PTR [rsp+0xc]
  4076b4:	jmp    407534 <__flatcc_fb_codegen_c@@Base+0x84>
  4076b9:	nop    DWORD PTR [rax+0x0]
  4076c0:	mov    eax,0xffffffff
  4076c5:	jmp    407534 <__flatcc_fb_codegen_c@@Base+0x84>
  4076ca:	nop    WORD PTR [rax+rax*1+0x0]
  4076d0:	push   r12
  4076d2:	push   rbp
  4076d3:	mov    ecx,0x1d
  4076d8:	push   rbx
  4076d9:	mov    rbp,rdi
  4076dc:	sub    rsp,0xf0
  4076e3:	mov    rax,QWORD PTR fs:0x28
  4076ec:	mov    QWORD PTR [rsp+0xe8],rax
  4076f4:	xor    eax,eax
  4076f6:	cmp    WORD PTR [rsi+0x10],0x1
  4076fb:	mov    rdi,rsp
  4076fe:	rep stos QWORD PTR es:[rdi],rax
  407701:	ja     407886 <__flatcc_fb_codegen_c@@Base+0x3d6>
  407707:	mov    rdi,QWORD PTR [rsi+0x18]
  40770b:	mov    r12,rsi
  40770e:	mov    rdx,rsp
  407711:	mov    rbx,rsp
  407714:	call   407300 <__flatcc_fb_scoped_symbol_name@@Base>
  407719:	cmp    WORD PTR [r12+0x10],0x1
  407720:	je     4077b0 <__flatcc_fb_codegen_c@@Base+0x300>
  407726:	mov    rdi,QWORD PTR [rbp+0xd0]
  40772d:	lea    rdx,[rip+0x273c4]        # 42eaf8 <_IO_stdin_used@@Base+0x1af8>
  407734:	mov    r8,rsp
  407737:	mov    rcx,rsp
  40773a:	mov    esi,0x1
  40773f:	xor    eax,eax
  407741:	call   405200 <__fprintf_chk@plt>
  407746:	mov    rdi,QWORD PTR [rbp+0xd0]
  40774d:	lea    rdx,[rip+0x273d4]        # 42eb28 <_IO_stdin_used@@Base+0x1b28>
  407754:	mov    r8,rsp
  407757:	mov    rcx,rbp
  40775a:	mov    esi,0x1
  40775f:	xor    eax,eax
  407761:	call   405200 <__fprintf_chk@plt>
  407766:	mov    rdi,QWORD PTR [rbp+0xd0]
  40776d:	lea    rdx,[rip+0x273dc]        # 42eb50 <_IO_stdin_used@@Base+0x1b50>
  407774:	mov    r8,rsp
  407777:	mov    rcx,rbp
  40777a:	mov    esi,0x1
  40777f:	xor    eax,eax
  407781:	call   405200 <__fprintf_chk@plt>
  407786:	mov    rax,QWORD PTR [rsp+0xe8]
  40778e:	xor    rax,QWORD PTR fs:0x28
  407797:	jne    4078a5 <__flatcc_fb_codegen_c@@Base+0x3f5>
  40779d:	add    rsp,0xf0
  4077a4:	pop    rbx
  4077a5:	pop    rbp
  4077a6:	pop    r12
  4077a8:	ret    
  4077a9:	nop    DWORD PTR [rax+0x0]
  4077b0:	cmp    QWORD PTR [r12+0xb8],0x0
  4077b9:	mov    rdi,QWORD PTR [rbp+0xd0]
  4077c0:	jne    407868 <__flatcc_fb_codegen_c@@Base+0x3b8>
  4077c6:	lea    rdx,[rip+0x2726b]        # 42ea38 <_IO_stdin_used@@Base+0x1a38>
  4077cd:	mov    rcx,rsp
  4077d0:	mov    esi,0x1
  4077d5:	xor    eax,eax
  4077d7:	call   405200 <__fprintf_chk@plt>
  4077dc:	mov    rdi,QWORD PTR [rbp+0xd0]
  4077e3:	lea    rdx,[rip+0x27276]        # 42ea60 <_IO_stdin_used@@Base+0x1a60>
  4077ea:	mov    r8,rbx
  4077ed:	mov    rcx,rbx
  4077f0:	mov    esi,0x1
  4077f5:	xor    eax,eax
  4077f7:	call   405200 <__fprintf_chk@plt>
  4077fc:	mov    rdi,QWORD PTR [rbp+0xd0]
  407803:	lea    rdx,[rip+0x2727e]        # 42ea88 <_IO_stdin_used@@Base+0x1a88>
  40780a:	mov    r8,rbx
  40780d:	mov    rcx,rbx
  407810:	mov    esi,0x1
  407815:	xor    eax,eax
  407817:	call   405200 <__fprintf_chk@plt>
  40781c:	mov    rdi,QWORD PTR [rbp+0xd0]
  407823:	lea    rdx,[rip+0x27286]        # 42eab0 <_IO_stdin_used@@Base+0x1ab0>
  40782a:	mov    r8,rbx
  40782d:	mov    rcx,rbx
  407830:	mov    esi,0x1
  407835:	xor    eax,eax
  407837:	call   405200 <__fprintf_chk@plt>
  40783c:	mov    rdi,QWORD PTR [rbp+0xd0]
  407843:	lea    rdx,[rip+0x27286]        # 42ead0 <_IO_stdin_used@@Base+0x1ad0>
  40784a:	mov    r8,rbx
  40784d:	mov    rcx,rbx
  407850:	mov    esi,0x1
  407855:	xor    eax,eax
  407857:	call   405200 <__fprintf_chk@plt>
  40785c:	jmp    407786 <__flatcc_fb_codegen_c@@Base+0x2d6>
  407861:	nop    DWORD PTR [rax+0x0]
  407868:	lea    rdx,[rip+0x2e8f4]        # 436163 <_IO_stdin_used@@Base+0x9163>
  40786f:	mov    r8,rsp
  407872:	mov    rcx,rsp
  407875:	mov    esi,0x1
  40787a:	xor    eax,eax
  40787c:	call   405200 <__fprintf_chk@plt>
  407881:	jmp    4077dc <__flatcc_fb_codegen_c@@Base+0x32c>
  407886:	lea    rcx,[rip+0x2ef23]        # 4367b0 <_IO_stdin_used@@Base+0x97b0>
  40788d:	lea    rsi,[rip+0x270ec]        # 42e980 <_IO_stdin_used@@Base+0x1980>
  407894:	lea    rdi,[rip+0x27155]        # 42e9f0 <_IO_stdin_used@@Base+0x19f0>
  40789b:	mov    edx,0x35f
  4078a0:	call   405100 <__assert_fail@plt>
  4078a5:	call   4050d0 <__stack_chk_fail@plt>
  4078aa:	nop    WORD PTR [rax+rax*1+0x0]
  4078b0:	push   r15
  4078b2:	push   r14
  4078b4:	mov    ecx,0x1d
  4078b9:	push   r13
  4078bb:	push   r12
  4078bd:	push   rbp
  4078be:	push   rbx
  4078bf:	mov    rbx,rdi
  4078c2:	sub    rsp,0x188
  4078c9:	lea    r14,[rsp+0x20]
  4078ce:	mov    rax,QWORD PTR fs:0x28
  4078d7:	mov    QWORD PTR [rsp+0x178],rax
  4078df:	xor    eax,eax
  4078e1:	mov    rdi,r14
  4078e4:	rep stos QWORD PTR es:[rdi],rax
  4078e7:	movzx  eax,WORD PTR [rsi+0x10]
  4078eb:	mov    WORD PTR [rsp+0x16],ax
  4078f0:	sub    eax,0x3
  4078f3:	cmp    ax,0x1
  4078f7:	ja     408449 <__flatcc_fb_codegen_c@@Base+0xf99>
  4078fd:	cmp    WORD PTR [rsi+0x58],0x8
  407902:	mov    rbp,rsi
  407905:	jne    4084a1 <__flatcc_fb_codegen_c@@Base+0xff1>
  40790b:	mov    eax,DWORD PTR [rsi+0x48]
  40790e:	cmp    eax,0x5
  407911:	je     407930 <__flatcc_fb_codegen_c@@Base+0x480>
  407913:	cmp    eax,0xb
  407916:	ja     408306 <__flatcc_fb_codegen_c@@Base+0xe56>
  40791c:	lea    rdx,[rip+0x2eb4d]        # 436470 <_IO_stdin_used@@Base+0x9470>
  407923:	movsxd rax,DWORD PTR [rdx+rax*4]
  407927:	add    rax,rdx
  40792a:	jmp    rax
  40792c:	nop    DWORD PTR [rax+0x0]
  407930:	lea    rax,[rip+0x2e868]        # 43619f <_IO_stdin_used@@Base+0x919f>
  407937:	mov    QWORD PTR [rsp+0x8],rbx
  40793c:	mov    QWORD PTR [rsp+0x18],rax
  407941:	cmp    WORD PTR [rsp+0x16],0x3
  407947:	mov    eax,DWORD PTR [rbp+0xb8]
  40794d:	mov    rdx,r14
  407950:	mov    rdi,QWORD PTR [rbp+0x18]
  407954:	mov    rsi,rbp
  407957:	lea    r12d,[rax*8+0x0]
  40795f:	je     408058 <__flatcc_fb_codegen_c@@Base+0xba8>
  407965:	call   407300 <__flatcc_fb_scoped_symbol_name@@Base>
  40796a:	mov    r13,QWORD PTR [rbp+0x40]
  40796e:	test   r13,r13
  407971:	je     4083c1 <__flatcc_fb_codegen_c@@Base+0xf11>
  407977:	lea    r15,[rip+0x2e835]        # 4361b3 <_IO_stdin_used@@Base+0x91b3>
  40797e:	mov    ecx,0x1
  407983:	xor    edx,edx
  407985:	jmp    4079db <__flatcc_fb_codegen_c@@Base+0x52b>
  407987:	nop    WORD PTR [rax+rax*1+0x0]
  407990:	lea    rdx,[rip+0x2e855]        # 4361ec <_IO_stdin_used@@Base+0x91ec>
  407997:	mov    esi,0x1
  40799c:	xor    eax,eax
  40799e:	call   405200 <__fprintf_chk@plt>
  4079a3:	mov    rax,QWORD PTR [r13+0x8]
  4079a7:	mov    rcx,QWORD PTR [rax+0x8]
  4079ab:	mov    r8,QWORD PTR [rax]
  4079ae:	lea    rdx,[rip+0x2f884]        # 437239 <_IO_stdin_used@@Base+0xa239>
  4079b5:	mov    rdi,QWORD PTR [rbx+0xd0]
  4079bc:	xor    eax,eax
  4079be:	mov    esi,0x1
  4079c3:	call   405200 <__fprintf_chk@plt>
  4079c8:	mov    rax,QWORD PTR [r13+0x8]
  4079cc:	mov    r13,QWORD PTR [r13+0x0]
  4079d0:	xor    ecx,ecx
  4079d2:	test   r13,r13
  4079d5:	mov    rdx,QWORD PTR [rax+0x10]
  4079d9:	je     407a10 <__flatcc_fb_codegen_c@@Base+0x560>
  4079db:	mov    rax,QWORD PTR [r13+0x8]
  4079df:	cmp    QWORD PTR [rax+0x10],rdx
  4079e3:	je     4079a7 <__flatcc_fb_codegen_c@@Base+0x4f7>
  4079e5:	test   ecx,ecx
  4079e7:	mov    rdi,QWORD PTR [rbx+0xd0]
  4079ee:	lea    rcx,[rip+0x3de19]        # 44580e <_IO_stdin_used@@Base+0x1880e>
  4079f5:	jne    407990 <__flatcc_fb_codegen_c@@Base+0x4e0>
  4079f7:	lea    rdx,[rip+0x2e7f5]        # 4361f3 <_IO_stdin_used@@Base+0x91f3>
  4079fe:	mov    esi,0x1
  407a03:	xor    eax,eax
  407a05:	call   405200 <__fprintf_chk@plt>
  407a0a:	mov    rax,QWORD PTR [r13+0x8]
  407a0e:	jmp    4079a7 <__flatcc_fb_codegen_c@@Base+0x4f7>
  407a10:	mov    rdi,QWORD PTR [rbx+0xd0]
  407a17:	lea    rdx,[rip+0x2ea21]        # 43643f <_IO_stdin_used@@Base+0x943f>
  407a1e:	mov    esi,0x1
  407a23:	xor    eax,eax
  407a25:	call   405200 <__fprintf_chk@plt>
  407a2a:	sub    rsp,0x8
  407a2e:	mov    rdi,QWORD PTR [rbx+0xd0]
  407a35:	lea    rdx,[rip+0x2e7be]        # 4361fa <_IO_stdin_used@@Base+0x91fa>
  407a3c:	push   r15
  407a3e:	mov    r8,QWORD PTR [rsp+0x28]
  407a43:	mov    r9,r14
  407a46:	mov    rcx,QWORD PTR [rsp+0x18]
  407a4b:	mov    esi,0x1
  407a50:	xor    eax,eax
  407a52:	call   405200 <__fprintf_chk@plt>
  407a57:	mov    rdi,QWORD PTR [rbx+0xd0]
  407a5e:	push   r12
  407a60:	lea    rdx,[rip+0x27211]        # 42ec78 <_IO_stdin_used@@Base+0x1c78>
  407a67:	push   r15
  407a69:	xor    eax,eax
  407a6b:	mov    r9,r14
  407a6e:	mov    r8,r14
  407a71:	mov    rcx,rbx
  407a74:	mov    esi,0x1
  407a79:	call   405200 <__fprintf_chk@plt>
  407a7e:	add    rsp,0x20
  407a82:	cmp    WORD PTR [rsp+0x16],0x3
  407a88:	je     407f70 <__flatcc_fb_codegen_c@@Base+0xac0>
  407a8e:	mov    rdi,QWORD PTR [rbx+0xd0]
  407a95:	lea    rdx,[rip+0x2e775]        # 436211 <_IO_stdin_used@@Base+0x9211>
  407a9c:	xor    eax,eax
  407a9e:	mov    r9,r14
  407aa1:	mov    r8,rbx
  407aa4:	mov    rcx,rbx
  407aa7:	mov    esi,0x1
  407aac:	call   405200 <__fprintf_chk@plt>
  407ab1:	mov    r12,QWORD PTR [rbp+0x28]
  407ab5:	test   r12,r12
  407ab8:	je     408425 <__flatcc_fb_codegen_c@@Base+0xf75>
  407abe:	lea    rax,[rsp+0x110]
  407ac6:	mov    QWORD PTR [rsp+0x18],r15
  407acb:	mov    QWORD PTR [rsp+0x8],rax
  407ad0:	mov    r13,QWORD PTR [r12+0x68]
  407ad5:	test   r13,r13
  407ad8:	je     407b8a <__flatcc_fb_codegen_c@@Base+0x6da>
  407ade:	mov    ecx,0x1
  407ae3:	xor    edx,edx
  407ae5:	jmp    407b3b <__flatcc_fb_codegen_c@@Base+0x68b>
  407ae7:	nop    WORD PTR [rax+rax*1+0x0]
  407af0:	lea    rdx,[rip+0x2e6f5]        # 4361ec <_IO_stdin_used@@Base+0x91ec>
  407af7:	mov    esi,0x1
  407afc:	xor    eax,eax
  407afe:	call   405200 <__fprintf_chk@plt>
  407b03:	mov    rax,QWORD PTR [r13+0x8]
  407b07:	mov    rcx,QWORD PTR [rax+0x8]
  407b0b:	mov    r8,QWORD PTR [rax]
  407b0e:	lea    rdx,[rip+0x2f724]        # 437239 <_IO_stdin_used@@Base+0xa239>
  407b15:	mov    rdi,QWORD PTR [rbx+0xd0]
  407b1c:	xor    eax,eax
  407b1e:	mov    esi,0x1
  407b23:	call   405200 <__fprintf_chk@plt>
  407b28:	mov    rax,QWORD PTR [r13+0x8]
  407b2c:	mov    r13,QWORD PTR [r13+0x0]
  407b30:	xor    ecx,ecx
  407b32:	test   r13,r13
  407b35:	mov    rdx,QWORD PTR [rax+0x10]
  407b39:	je     407b70 <__flatcc_fb_codegen_c@@Base+0x6c0>
  407b3b:	mov    rax,QWORD PTR [r13+0x8]
  407b3f:	cmp    QWORD PTR [rax+0x10],rdx
  407b43:	je     407b07 <__flatcc_fb_codegen_c@@Base+0x657>
  407b45:	test   ecx,ecx
  407b47:	mov    rdi,QWORD PTR [rbx+0xd0]
  407b4e:	lea    rcx,[rip+0x3dcb9]        # 44580e <_IO_stdin_used@@Base+0x1880e>
  407b55:	jne    407af0 <__flatcc_fb_codegen_c@@Base+0x640>
  407b57:	lea    rdx,[rip+0x2e695]        # 4361f3 <_IO_stdin_used@@Base+0x91f3>
  407b5e:	mov    esi,0x1
  407b63:	xor    eax,eax
  407b65:	call   405200 <__fprintf_chk@plt>
  407b6a:	mov    rax,QWORD PTR [r13+0x8]
  407b6e:	jmp    407b07 <__flatcc_fb_codegen_c@@Base+0x657>
  407b70:	mov    rdi,QWORD PTR [rbx+0xd0]
  407b77:	lea    rdx,[rip+0x2e8c1]        # 43643f <_IO_stdin_used@@Base+0x943f>
  407b7e:	mov    esi,0x1
  407b83:	xor    eax,eax
  407b85:	call   405200 <__fprintf_chk@plt>
  407b8a:	movzx  edx,WORD PTR [r12+0x58]
  407b90:	mov    rax,QWORD PTR [r12+0x8]
  407b95:	mov    r15,QWORD PTR [rax]
  407b98:	mov    r13,QWORD PTR [rax+0x8]
  407b9c:	cmp    dx,0x4
  407ba0:	mov    eax,DWORD PTR [rbp+0x48]
  407ba3:	je     407e78 <__flatcc_fb_codegen_c@@Base+0x9c8>
  407ba9:	jbe    407be0 <__flatcc_fb_codegen_c@@Base+0x730>
  407bab:	cmp    dx,0x5
  407baf:	je     407ef0 <__flatcc_fb_codegen_c@@Base+0xa40>
  407bb5:	cmp    dx,0x6
  407bb9:	jne    407e98 <__flatcc_fb_codegen_c@@Base+0x9e8>
  407bbf:	cmp    eax,0x9
  407bc2:	ja     408356 <__flatcc_fb_codegen_c@@Base+0xea6>
  407bc8:	lea    rdx,[rip+0x2e8d1]        # 4364a0 <_IO_stdin_used@@Base+0x94a0>
  407bcf:	movsxd rax,DWORD PTR [rdx+rax*4]
  407bd3:	add    rax,rdx
  407bd6:	jmp    rax
  407bd8:	nop    DWORD PTR [rax+rax*1+0x0]
  407be0:	cmp    dx,0x3
  407be4:	jne    407e98 <__flatcc_fb_codegen_c@@Base+0x9e8>
  407bea:	cmp    eax,0xb
  407bed:	je     4083a6 <__flatcc_fb_codegen_c@@Base+0xef6>
  407bf3:	vmovsd xmm0,QWORD PTR [r12+0x48]
  407bfa:	lea    rcx,[rip+0x2e647]        # 436248 <_IO_stdin_used@@Base+0x9248>
  407c01:	mov    rdi,QWORD PTR [rsp+0x8]
  407c06:	mov    edx,0x64
  407c0b:	mov    esi,0x1
  407c10:	mov    eax,0x1
  407c15:	call   405220 <__sprintf_chk@plt>
  407c1a:	sub    rsp,0x8
  407c1e:	mov    rdi,QWORD PTR [rbx+0xd0]
  407c25:	lea    rdx,[rip+0x2707c]        # 42eca8 <_IO_stdin_used@@Base+0x1ca8>
  407c2c:	push   QWORD PTR [rsp+0x10]
  407c30:	push   QWORD PTR [rsp+0x28]
  407c34:	xor    eax,eax
  407c36:	push   r14
  407c38:	mov    r9,r15
  407c3b:	mov    r8d,r13d
  407c3e:	mov    rcx,r14
  407c41:	mov    esi,0x1
  407c46:	call   405200 <__fprintf_chk@plt>
  407c4b:	mov    r12,QWORD PTR [r12]
  407c4f:	add    rsp,0x20
  407c53:	test   r12,r12
  407c56:	jne    407ad0 <__flatcc_fb_codegen_c@@Base+0x620>
  407c5c:	mov    rdi,QWORD PTR [rbx+0xd0]
  407c63:	lea    rdx,[rip+0x3dba3]        # 44580d <_IO_stdin_used@@Base+0x1880d>
  407c6a:	xor    eax,eax
  407c6c:	mov    esi,0x1
  407c71:	call   405200 <__fprintf_chk@plt>
  407c76:	cmp    WORD PTR [rsp+0x16],0x3
  407c7c:	je     407f97 <__flatcc_fb_codegen_c@@Base+0xae7>
  407c82:	mov    rdi,QWORD PTR [rbx+0xd0]
  407c89:	lea    rdx,[rip+0x27038]        # 42ecc8 <_IO_stdin_used@@Base+0x1cc8>
  407c90:	mov    r8,r14
  407c93:	mov    rcx,r14
  407c96:	mov    esi,0x1
  407c9b:	xor    eax,eax
  407c9d:	call   405200 <__fprintf_chk@plt>
  407ca2:	mov    rdi,QWORD PTR [rbx+0xd0]
  407ca9:	lea    rdx,[rip+0x2e59c]        # 43624c <_IO_stdin_used@@Base+0x924c>
  407cb0:	xor    eax,eax
  407cb2:	mov    esi,0x1
  407cb7:	call   405200 <__fprintf_chk@plt>
  407cbc:	mov    r12,QWORD PTR [rbp+0x28]
  407cc0:	test   r12,r12
  407cc3:	je     408468 <__flatcc_fb_codegen_c@@Base+0xfb8>
  407cc9:	lea    r13,[rip+0x270a8]        # 42ed78 <_IO_stdin_used@@Base+0x1d78>
  407cd0:	jmp    407cfd <__flatcc_fb_codegen_c@@Base+0x84d>
  407cd2:	nop    WORD PTR [rax+rax*1+0x0]
  407cd8:	push   r9
  407cda:	lea    rdx,[rip+0x2705f]        # 42ed40 <_IO_stdin_used@@Base+0x1d40>
  407ce1:	push   r8
  407ce3:	mov    rcx,r14
  407ce6:	mov    esi,0x1
  407ceb:	xor    eax,eax
  407ced:	call   405200 <__fprintf_chk@plt>
  407cf2:	mov    r12,QWORD PTR [r12]
  407cf6:	pop    rcx
  407cf7:	pop    rsi
  407cf8:	test   r12,r12
  407cfb:	je     407d39 <__flatcc_fb_codegen_c@@Base+0x889>
  407cfd:	test   BYTE PTR [r12+0x12],0x4
  407d03:	mov    rax,QWORD PTR [r12+0x8]
  407d08:	mov    rdi,QWORD PTR [rbx+0xd0]
  407d0f:	mov    r9,QWORD PTR [rax]
  407d12:	mov    r8,QWORD PTR [rax+0x8]
  407d16:	jne    407cd8 <__flatcc_fb_codegen_c@@Base+0x828>
  407d18:	push   r9
  407d1a:	push   r8
  407d1c:	mov    rdx,r13
  407d1f:	xor    eax,eax
  407d21:	mov    rcx,r14
  407d24:	mov    esi,0x1
  407d29:	call   405200 <__fprintf_chk@plt>
  407d2e:	mov    r12,QWORD PTR [r12]
  407d32:	pop    rax
  407d33:	pop    rdx
  407d34:	test   r12,r12
  407d37:	jne    407cfd <__flatcc_fb_codegen_c@@Base+0x84d>
  407d39:	mov    rdi,QWORD PTR [rbx+0xd0]
  407d40:	lea    rdx,[rip+0x27059]        # 42eda0 <_IO_stdin_used@@Base+0x1da0>
  407d47:	mov    esi,0x1
  407d4c:	xor    eax,eax
  407d4e:	call   405200 <__fprintf_chk@plt>
  407d53:	mov    rdi,QWORD PTR [rbx+0xd0]
  407d5a:	lea    rdx,[rip+0x3daac]        # 44580d <_IO_stdin_used@@Base+0x1880d>
  407d61:	xor    eax,eax
  407d63:	mov    esi,0x1
  407d68:	call   405200 <__fprintf_chk@plt>
  407d6d:	cmp    WORD PTR [rsp+0x16],0x3
  407d73:	je     408012 <__flatcc_fb_codegen_c@@Base+0xb62>
  407d79:	mov    rdi,QWORD PTR [rbx+0xd0]
  407d80:	lea    rdx,[rip+0x27041]        # 42edc8 <_IO_stdin_used@@Base+0x1dc8>
  407d87:	mov    esi,0x1
  407d8c:	mov    r8,r14
  407d8f:	mov    rcx,r14
  407d92:	xor    eax,eax
  407d94:	call   405200 <__fprintf_chk@plt>
  407d99:	mov    rdi,QWORD PTR [rbx+0xd0]
  407da0:	lea    rdx,[rip+0x2e4a5]        # 43624c <_IO_stdin_used@@Base+0x924c>
  407da7:	mov    esi,0x1
  407dac:	xor    eax,eax
  407dae:	call   405200 <__fprintf_chk@plt>
  407db3:	mov    rbp,QWORD PTR [rbp+0x28]
  407db7:	lea    r12,[rip+0x270a2]        # 42ee60 <_IO_stdin_used@@Base+0x1e60>
  407dbe:	test   rbp,rbp
  407dc1:	jne    407de0 <__flatcc_fb_codegen_c@@Base+0x930>
  407dc3:	jmp    407e17 <__flatcc_fb_codegen_c@@Base+0x967>
  407dc5:	nop    DWORD PTR [rax]
  407dc8:	xor    eax,eax
  407dca:	mov    rdx,r12
  407dcd:	mov    esi,0x1
  407dd2:	call   405200 <__fprintf_chk@plt>
  407dd7:	mov    rbp,QWORD PTR [rbp+0x0]
  407ddb:	test   rbp,rbp
  407dde:	je     407e17 <__flatcc_fb_codegen_c@@Base+0x967>
  407de0:	test   BYTE PTR [rbp+0x12],0x4
  407de4:	mov    rax,QWORD PTR [rbp+0x8]
  407de8:	mov    rcx,r14
  407deb:	mov    rdi,QWORD PTR [rbx+0xd0]
  407df2:	mov    r9,QWORD PTR [rax]
  407df5:	mov    r8,QWORD PTR [rax+0x8]
  407df9:	jne    407dc8 <__flatcc_fb_codegen_c@@Base+0x918>
  407dfb:	lea    rdx,[rip+0x2e475]        # 436277 <_IO_stdin_used@@Base+0x9277>
  407e02:	xor    eax,eax
  407e04:	mov    esi,0x1
  407e09:	call   405200 <__fprintf_chk@plt>
  407e0e:	mov    rbp,QWORD PTR [rbp+0x0]
  407e12:	test   rbp,rbp
  407e15:	jne    407de0 <__flatcc_fb_codegen_c@@Base+0x930>
  407e17:	mov    rdi,QWORD PTR [rbx+0xd0]
  407e1e:	lea    rdx,[rip+0x2701b]        # 42ee40 <_IO_stdin_used@@Base+0x1e40>
  407e25:	mov    esi,0x1
  407e2a:	xor    eax,eax
  407e2c:	call   405200 <__fprintf_chk@plt>
  407e31:	mov    rdi,QWORD PTR [rbx+0xd0]
  407e38:	lea    rdx,[rip+0x3d9ce]        # 44580d <_IO_stdin_used@@Base+0x1880d>
  407e3f:	xor    eax,eax
  407e41:	mov    esi,0x1
  407e46:	call   405200 <__fprintf_chk@plt>
  407e4b:	mov    rax,QWORD PTR [rsp+0x178]
  407e53:	xor    rax,QWORD PTR fs:0x28
  407e5c:	jne    408444 <__flatcc_fb_codegen_c@@Base+0xf94>
  407e62:	add    rsp,0x188
  407e69:	pop    rbx
  407e6a:	pop    rbp
  407e6b:	pop    r12
  407e6d:	pop    r13
  407e6f:	pop    r14
  407e71:	pop    r15
  407e73:	ret    
  407e74:	nop    DWORD PTR [rax+0x0]
  407e78:	cmp    eax,0x9
  407e7b:	ja     408356 <__flatcc_fb_codegen_c@@Base+0xea6>
  407e81:	lea    rsi,[rip+0x2e640]        # 4364c8 <_IO_stdin_used@@Base+0x94c8>
  407e88:	movsxd rax,DWORD PTR [rsi+rax*4]
  407e8c:	add    rax,rsi
  407e8f:	jmp    rax
  407e91:	nop    DWORD PTR [rax+0x0]
  407e98:	mov    rax,QWORD PTR [rip+0x49149]        # 450fe8 <stderr@GLIBC_2.2.5>
  407e9f:	lea    rcx,[rip+0x26d6a]        # 42ec10 <_IO_stdin_used@@Base+0x1c10>
  407ea6:	lea    rdx,[rip+0x2e334]        # 4361e1 <_IO_stdin_used@@Base+0x91e1>
  407ead:	lea    r9,[rip+0x26d24]        # 42ebd8 <_IO_stdin_used@@Base+0x1bd8>
  407eb4:	mov    esi,0x1
  407eb9:	mov    r8d,0x104
  407ebf:	mov    rdi,QWORD PTR [rax]
  407ec2:	xor    eax,eax
  407ec4:	call   405200 <__fprintf_chk@plt>
  407ec9:	lea    rcx,[rip+0x2e868]        # 436738 <_IO_stdin_used@@Base+0x9738>
  407ed0:	lea    rsi,[rip+0x26d39]        # 42ec10 <_IO_stdin_used@@Base+0x1c10>
  407ed7:	lea    rdi,[rip+0x2f34b]        # 437229 <_IO_stdin_used@@Base+0xa229>
  407ede:	mov    edx,0x104
  407ee3:	call   405100 <__assert_fail@plt>
  407ee8:	nop    DWORD PTR [rax+rax*1+0x0]
  407ef0:	cmp    eax,0x9
  407ef3:	ja     408356 <__flatcc_fb_codegen_c@@Base+0xea6>
  407ef9:	lea    rdx,[rip+0x2e5f0]        # 4364f0 <_IO_stdin_used@@Base+0x94f0>
  407f00:	movsxd rax,DWORD PTR [rdx+rax*4]
  407f04:	add    rax,rdx
  407f07:	jmp    rax
  407f09:	lea    r15,[rip+0x40898]        # 4487a8 <fb_schema_table_missing@@Base+0x2438>
  407f10:	sub    rsp,0x8
  407f14:	mov    rdi,QWORD PTR [rbx+0xd0]
  407f1b:	lea    rdx,[rip+0x2e2d8]        # 4361fa <_IO_stdin_used@@Base+0x91fa>
  407f22:	mov    r9,r14
  407f25:	mov    esi,0x1
  407f2a:	push   r15
  407f2c:	mov    r8,QWORD PTR [rsp+0x28]
  407f31:	xor    eax,eax
  407f33:	mov    rcx,QWORD PTR [rsp+0x18]
  407f38:	call   405200 <__fprintf_chk@plt>
  407f3d:	mov    rdi,QWORD PTR [rbx+0xd0]
  407f44:	push   r12
  407f46:	lea    rdx,[rip+0x26d2b]        # 42ec78 <_IO_stdin_used@@Base+0x1c78>
  407f4d:	push   r15
  407f4f:	mov    r9,r14
  407f52:	mov    r8,r14
  407f55:	mov    rcx,rbx
  407f58:	mov    esi,0x1
  407f5d:	xor    eax,eax
  407f5f:	call   405200 <__fprintf_chk@plt>
  407f64:	add    rsp,0x20
  407f68:	nop    DWORD PTR [rax+rax*1+0x0]
  407f70:	mov    r12,QWORD PTR [rbp+0x28]
  407f74:	test   r12,r12
  407f77:	jne    407abe <__flatcc_fb_codegen_c@@Base+0x60e>
  407f7d:	mov    rdi,QWORD PTR [rbx+0xd0]
  407f84:	lea    rdx,[rip+0x3d882]        # 44580d <_IO_stdin_used@@Base+0x1880d>
  407f8b:	mov    esi,0x1
  407f90:	xor    eax,eax
  407f92:	call   405200 <__fprintf_chk@plt>
  407f97:	mov    rdi,QWORD PTR [rbx+0xd0]
  407f9e:	lea    rdx,[rip+0x26d63]        # 42ed08 <_IO_stdin_used@@Base+0x1d08>
  407fa5:	mov    r8,r14
  407fa8:	mov    rcx,r14
  407fab:	mov    esi,0x1
  407fb0:	xor    eax,eax
  407fb2:	call   405200 <__fprintf_chk@plt>
  407fb7:	mov    rdi,QWORD PTR [rbx+0xd0]
  407fbe:	lea    rdx,[rip+0x2e29c]        # 436261 <_IO_stdin_used@@Base+0x9261>
  407fc5:	xor    eax,eax
  407fc7:	mov    esi,0x1
  407fcc:	call   405200 <__fprintf_chk@plt>
  407fd1:	mov    r12,QWORD PTR [rbp+0x28]
  407fd5:	test   r12,r12
  407fd8:	jne    407cc9 <__flatcc_fb_codegen_c@@Base+0x819>
  407fde:	mov    rdi,QWORD PTR [rbx+0xd0]
  407fe5:	lea    rdx,[rip+0x26db4]        # 42eda0 <_IO_stdin_used@@Base+0x1da0>
  407fec:	mov    esi,0x1
  407ff1:	xor    eax,eax
  407ff3:	call   405200 <__fprintf_chk@plt>
  407ff8:	mov    rdi,QWORD PTR [rbx+0xd0]
  407fff:	lea    rdx,[rip+0x3d807]        # 44580d <_IO_stdin_used@@Base+0x1880d>
  408006:	mov    esi,0x1
  40800b:	xor    eax,eax
  40800d:	call   405200 <__fprintf_chk@plt>
  408012:	mov    rdi,QWORD PTR [rbx+0xd0]
  408019:	lea    rdx,[rip+0x26de8]        # 42ee08 <_IO_stdin_used@@Base+0x1e08>
  408020:	mov    r8,r14
  408023:	mov    rcx,r14
  408026:	mov    esi,0x1
  40802b:	xor    eax,eax
  40802d:	call   405200 <__fprintf_chk@plt>
  408032:	mov    rdi,QWORD PTR [rbx+0xd0]
  408039:	lea    rdx,[rip+0x2e221]        # 436261 <_IO_stdin_used@@Base+0x9261>
  408040:	mov    esi,0x1
  408045:	xor    eax,eax
  408047:	call   405200 <__fprintf_chk@plt>
  40804c:	jmp    407db3 <__flatcc_fb_codegen_c@@Base+0x903>
  408051:	nop    DWORD PTR [rax+0x0]
  408058:	call   407300 <__flatcc_fb_scoped_symbol_name@@Base>
  40805d:	mov    r13,QWORD PTR [rbp+0x40]
  408061:	test   r13,r13
  408064:	je     407f09 <__flatcc_fb_codegen_c@@Base+0xa59>
  40806a:	lea    r15,[rip+0x40737]        # 4487a8 <fb_schema_table_missing@@Base+0x2438>
  408071:	jmp    40797e <__flatcc_fb_codegen_c@@Base+0x4ce>
  408076:	lea    r8,[rip+0x2e15c]        # 4361d9 <_IO_stdin_used@@Base+0x91d9>
  40807d:	movzx  r9d,BYTE PTR [r12+0x48]
  408083:	mov    rdi,QWORD PTR [rsp+0x8]
  408088:	lea    rcx,[rip+0x2e1ae]        # 43623d <_IO_stdin_used@@Base+0x923d>
  40808f:	mov    edx,0x64
  408094:	mov    esi,0x1
  408099:	xor    eax,eax
  40809b:	call   405220 <__sprintf_chk@plt>
  4080a0:	jmp    407c1a <__flatcc_fb_codegen_c@@Base+0x76a>
  4080a5:	lea    r8,[rip+0x2e12d]        # 4361d9 <_IO_stdin_used@@Base+0x91d9>
  4080ac:	mov    r9,QWORD PTR [r12+0x48]
  4080b1:	lea    rcx,[rip+0x2e173]        # 43622b <_IO_stdin_used@@Base+0x922b>
  4080b8:	mov    rdi,QWORD PTR [rsp+0x8]
  4080bd:	mov    edx,0x64
  4080c2:	mov    esi,0x1
  4080c7:	xor    eax,eax
  4080c9:	call   405220 <__sprintf_chk@plt>
  4080ce:	jmp    407c1a <__flatcc_fb_codegen_c@@Base+0x76a>
  4080d3:	lea    r8,[rip+0x2e0ff]        # 4361d9 <_IO_stdin_used@@Base+0x91d9>
  4080da:	mov    r9,QWORD PTR [r12+0x48]
  4080df:	lea    rcx,[rip+0x2e14e]        # 436234 <_IO_stdin_used@@Base+0x9234>
  4080e6:	jmp    4080b8 <__flatcc_fb_codegen_c@@Base+0xc08>
  4080e8:	lea    rax,[rip+0x3d71f]        # 44580e <_IO_stdin_used@@Base+0x1880e>
  4080ef:	mov    QWORD PTR [rsp+0x8],rax
  4080f4:	lea    rax,[rip+0x2e08b]        # 436186 <_IO_stdin_used@@Base+0x9186>
  4080fb:	mov    QWORD PTR [rsp+0x18],rax
  408100:	jmp    407941 <__flatcc_fb_codegen_c@@Base+0x491>
  408105:	lea    rax,[rip+0x3d702]        # 44580e <_IO_stdin_used@@Base+0x1880e>
  40810c:	mov    QWORD PTR [rsp+0x8],rax
  408111:	lea    rax,[rip+0x2e077]        # 43618f <_IO_stdin_used@@Base+0x918f>
  408118:	mov    QWORD PTR [rsp+0x18],rax
  40811d:	jmp    407941 <__flatcc_fb_codegen_c@@Base+0x491>
  408122:	lea    rax,[rip+0x3d6e5]        # 44580e <_IO_stdin_used@@Base+0x1880e>
  408129:	mov    QWORD PTR [rsp+0x8],rax
  40812e:	lea    rax,[rip+0x2e063]        # 436198 <_IO_stdin_used@@Base+0x9198>
  408135:	mov    QWORD PTR [rsp+0x18],rax
  40813a:	jmp    407941 <__flatcc_fb_codegen_c@@Base+0x491>
  40813f:	lea    rax,[rip+0x3d6c8]        # 44580e <_IO_stdin_used@@Base+0x1880e>
  408146:	mov    QWORD PTR [rsp+0x8],rax
  40814b:	lea    rax,[rip+0x2e05a]        # 4361ac <_IO_stdin_used@@Base+0x91ac>
  408152:	mov    QWORD PTR [rsp+0x18],rax
  408157:	jmp    407941 <__flatcc_fb_codegen_c@@Base+0x491>
  40815c:	lea    rax,[rip+0x3d6ab]        # 44580e <_IO_stdin_used@@Base+0x1880e>
  408163:	mov    QWORD PTR [rsp+0x8],rax
  408168:	lea    rax,[rip+0x2e028]        # 436197 <_IO_stdin_used@@Base+0x9197>
  40816f:	mov    QWORD PTR [rsp+0x18],rax
  408174:	jmp    407941 <__flatcc_fb_codegen_c@@Base+0x491>
  408179:	lea    rax,[rip+0x3d68e]        # 44580e <_IO_stdin_used@@Base+0x1880e>
  408180:	mov    QWORD PTR [rsp+0x8],rax
  408185:	lea    rax,[rip+0x2e01a]        # 4361a6 <_IO_stdin_used@@Base+0x91a6>
  40818c:	mov    QWORD PTR [rsp+0x18],rax
  408191:	jmp    407941 <__flatcc_fb_codegen_c@@Base+0x491>
  408196:	lea    rax,[rip+0x3d671]        # 44580e <_IO_stdin_used@@Base+0x1880e>
  40819d:	mov    QWORD PTR [rsp+0x8],rax
  4081a2:	lea    rax,[rip+0x2dfd4]        # 43617d <_IO_stdin_used@@Base+0x917d>
  4081a9:	mov    QWORD PTR [rsp+0x18],rax
  4081ae:	jmp    407941 <__flatcc_fb_codegen_c@@Base+0x491>
  4081b3:	lea    rax,[rip+0x3d654]        # 44580e <_IO_stdin_used@@Base+0x1880e>
  4081ba:	mov    QWORD PTR [rsp+0x8],rax
  4081bf:	lea    rax,[rip+0x2dfbf]        # 436185 <_IO_stdin_used@@Base+0x9185>
  4081c6:	mov    QWORD PTR [rsp+0x18],rax
  4081cb:	jmp    407941 <__flatcc_fb_codegen_c@@Base+0x491>
  4081d0:	lea    rax,[rip+0x3d637]        # 44580e <_IO_stdin_used@@Base+0x1880e>
  4081d7:	mov    QWORD PTR [rsp+0x8],rax
  4081dc:	lea    rax,[rip+0x2df99]        # 43617c <_IO_stdin_used@@Base+0x917c>
  4081e3:	mov    QWORD PTR [rsp+0x18],rax
  4081e8:	jmp    407941 <__flatcc_fb_codegen_c@@Base+0x491>
  4081ed:	lea    rax,[rip+0x3d61a]        # 44580e <_IO_stdin_used@@Base+0x1880e>
  4081f4:	mov    QWORD PTR [rsp+0x8],rax
  4081f9:	lea    rax,[rip+0x2df8e]        # 43618e <_IO_stdin_used@@Base+0x918e>
  408200:	mov    QWORD PTR [rsp+0x18],rax
  408205:	jmp    407941 <__flatcc_fb_codegen_c@@Base+0x491>
  40820a:	lea    r8,[rip+0x2dfb6]        # 4361c7 <_IO_stdin_used@@Base+0x91c7>
  408211:	jmp    40807d <__flatcc_fb_codegen_c@@Base+0xbcd>
  408216:	lea    r8,[rip+0x2dfaa]        # 4361c7 <_IO_stdin_used@@Base+0x91c7>
  40821d:	jmp    4080da <__flatcc_fb_codegen_c@@Base+0xc2a>
  408222:	lea    r8,[rip+0x2df9e]        # 4361c7 <_IO_stdin_used@@Base+0x91c7>
  408229:	jmp    4080ac <__flatcc_fb_codegen_c@@Base+0xbfc>
  40822e:	lea    r8,[rip+0x2dfa5]        # 4361da <_IO_stdin_used@@Base+0x91da>
  408235:	jmp    4080da <__flatcc_fb_codegen_c@@Base+0xc2a>
  40823a:	lea    r8,[rip+0x2df8f]        # 4361d0 <_IO_stdin_used@@Base+0x91d0>
  408241:	jmp    4080da <__flatcc_fb_codegen_c@@Base+0xc2a>
  408246:	lea    r8,[rip+0x2df71]        # 4361be <_IO_stdin_used@@Base+0x91be>
  40824d:	jmp    40807d <__flatcc_fb_codegen_c@@Base+0xbcd>
  408252:	lea    r8,[rip+0x2df66]        # 4361bf <_IO_stdin_used@@Base+0x91bf>
  408259:	jmp    40807d <__flatcc_fb_codegen_c@@Base+0xbcd>
  40825e:	lea    r8,[rip+0x2df75]        # 4361da <_IO_stdin_used@@Base+0x91da>
  408265:	jmp    40807d <__flatcc_fb_codegen_c@@Base+0xbcd>
  40826a:	lea    r8,[rip+0x2df5f]        # 4361d0 <_IO_stdin_used@@Base+0x91d0>
  408271:	jmp    40807d <__flatcc_fb_codegen_c@@Base+0xbcd>
  408276:	lea    r8,[rip+0x2df41]        # 4361be <_IO_stdin_used@@Base+0x91be>
  40827d:	jmp    4080da <__flatcc_fb_codegen_c@@Base+0xc2a>
  408282:	lea    r8,[rip+0x2df35]        # 4361be <_IO_stdin_used@@Base+0x91be>
  408289:	jmp    4080ac <__flatcc_fb_codegen_c@@Base+0xbfc>
  40828e:	lea    r8,[rip+0x2df45]        # 4361da <_IO_stdin_used@@Base+0x91da>
  408295:	jmp    4080ac <__flatcc_fb_codegen_c@@Base+0xbfc>
  40829a:	lea    r8,[rip+0x2df2f]        # 4361d0 <_IO_stdin_used@@Base+0x91d0>
  4082a1:	jmp    4080ac <__flatcc_fb_codegen_c@@Base+0xbfc>
  4082a6:	lea    r8,[rip+0x2df24]        # 4361d1 <_IO_stdin_used@@Base+0x91d1>
  4082ad:	jmp    40807d <__flatcc_fb_codegen_c@@Base+0xbcd>
  4082b2:	lea    r8,[rip+0x2df0f]        # 4361c8 <_IO_stdin_used@@Base+0x91c8>
  4082b9:	jmp    40807d <__flatcc_fb_codegen_c@@Base+0xbcd>
  4082be:	lea    r8,[rip+0x2df0c]        # 4361d1 <_IO_stdin_used@@Base+0x91d1>
  4082c5:	jmp    4080ac <__flatcc_fb_codegen_c@@Base+0xbfc>
  4082ca:	lea    r8,[rip+0x2def7]        # 4361c8 <_IO_stdin_used@@Base+0x91c8>
  4082d1:	jmp    4080ac <__flatcc_fb_codegen_c@@Base+0xbfc>
  4082d6:	lea    r8,[rip+0x2dee2]        # 4361bf <_IO_stdin_used@@Base+0x91bf>
  4082dd:	jmp    4080ac <__flatcc_fb_codegen_c@@Base+0xbfc>
  4082e2:	lea    r8,[rip+0x2ded6]        # 4361bf <_IO_stdin_used@@Base+0x91bf>
  4082e9:	jmp    4080da <__flatcc_fb_codegen_c@@Base+0xc2a>
  4082ee:	lea    r8,[rip+0x2dedc]        # 4361d1 <_IO_stdin_used@@Base+0x91d1>
  4082f5:	jmp    4080da <__flatcc_fb_codegen_c@@Base+0xc2a>
  4082fa:	lea    r8,[rip+0x2dec7]        # 4361c8 <_IO_stdin_used@@Base+0x91c8>
  408301:	jmp    4080da <__flatcc_fb_codegen_c@@Base+0xc2a>
  408306:	mov    rax,QWORD PTR [rip+0x48cdb]        # 450fe8 <stderr@GLIBC_2.2.5>
  40830d:	lea    rcx,[rip+0x268fc]        # 42ec10 <_IO_stdin_used@@Base+0x1c10>
  408314:	lea    rdx,[rip+0x2dec6]        # 4361e1 <_IO_stdin_used@@Base+0x91e1>
  40831b:	lea    r9,[rip+0x268b6]        # 42ebd8 <_IO_stdin_used@@Base+0x1bd8>
  408322:	mov    esi,0x1
  408327:	mov    r8d,0x8d
  40832d:	mov    rdi,QWORD PTR [rax]
  408330:	xor    eax,eax
  408332:	call   405200 <__fprintf_chk@plt>
  408337:	lea    rcx,[rip+0x2e442]        # 436780 <_IO_stdin_used@@Base+0x9780>
  40833e:	lea    rsi,[rip+0x268cb]        # 42ec10 <_IO_stdin_used@@Base+0x1c10>
  408345:	lea    rdi,[rip+0x2eedd]        # 437229 <_IO_stdin_used@@Base+0xa229>
  40834c:	mov    edx,0x8d
  408351:	call   405100 <__assert_fail@plt>
  408356:	mov    rax,QWORD PTR [rip+0x48c8b]        # 450fe8 <stderr@GLIBC_2.2.5>
  40835d:	lea    rcx,[rip+0x268ac]        # 42ec10 <_IO_stdin_used@@Base+0x1c10>
  408364:	lea    rdx,[rip+0x2de76]        # 4361e1 <_IO_stdin_used@@Base+0x91e1>
  40836b:	lea    r9,[rip+0x26866]        # 42ebd8 <_IO_stdin_used@@Base+0x1bd8>
  408372:	mov    esi,0x1
  408377:	mov    r8d,0xe2
  40837d:	mov    rdi,QWORD PTR [rax]
  408380:	xor    eax,eax
  408382:	call   405200 <__fprintf_chk@plt>
  408387:	lea    rcx,[rip+0x2e39a]        # 436728 <_IO_stdin_used@@Base+0x9728>
  40838e:	lea    rsi,[rip+0x2687b]        # 42ec10 <_IO_stdin_used@@Base+0x1c10>
  408395:	lea    rdi,[rip+0x2ee8d]        # 437229 <_IO_stdin_used@@Base+0xa229>
  40839c:	mov    edx,0xe2
  4083a1:	call   405100 <__assert_fail@plt>
  4083a6:	vxorps xmm0,xmm0,xmm0
  4083aa:	lea    rcx,[rip+0x2de93]        # 436244 <_IO_stdin_used@@Base+0x9244>
  4083b1:	vcvtsd2ss xmm0,xmm0,QWORD PTR [r12+0x48]
  4083b8:	vcvtss2sd xmm0,xmm0,xmm0
  4083bc:	jmp    407c01 <__flatcc_fb_codegen_c@@Base+0x751>
  4083c1:	lea    r15,[rip+0x2ddeb]        # 4361b3 <_IO_stdin_used@@Base+0x91b3>
  4083c8:	sub    rsp,0x8
  4083cc:	mov    rdi,QWORD PTR [rbx+0xd0]
  4083d3:	lea    rdx,[rip+0x2de20]        # 4361fa <_IO_stdin_used@@Base+0x91fa>
  4083da:	mov    r9,r14
  4083dd:	mov    esi,0x1
  4083e2:	push   r15
  4083e4:	mov    r8,QWORD PTR [rsp+0x28]
  4083e9:	xor    eax,eax
  4083eb:	mov    rcx,QWORD PTR [rsp+0x18]
  4083f0:	call   405200 <__fprintf_chk@plt>
  4083f5:	mov    rdi,QWORD PTR [rbx+0xd0]
  4083fc:	push   r12
  4083fe:	lea    rdx,[rip+0x26873]        # 42ec78 <_IO_stdin_used@@Base+0x1c78>
  408405:	push   r15
  408407:	mov    r9,r14
  40840a:	mov    r8,r14
  40840d:	mov    rcx,rbx
  408410:	mov    esi,0x1
  408415:	xor    eax,eax
  408417:	call   405200 <__fprintf_chk@plt>
  40841c:	add    rsp,0x20
  408420:	jmp    407a8e <__flatcc_fb_codegen_c@@Base+0x5de>
  408425:	mov    rdi,QWORD PTR [rbx+0xd0]
  40842c:	lea    rdx,[rip+0x3d3da]        # 44580d <_IO_stdin_used@@Base+0x1880d>
  408433:	mov    esi,0x1
  408438:	xor    eax,eax
  40843a:	call   405200 <__fprintf_chk@plt>
  40843f:	jmp    407c82 <__flatcc_fb_codegen_c@@Base+0x7d2>
  408444:	call   4050d0 <__stack_chk_fail@plt>
  408449:	lea    rcx,[rip+0x2e2f8]        # 436748 <_IO_stdin_used@@Base+0x9748>
  408450:	lea    rsi,[rip+0x26529]        # 42e980 <_IO_stdin_used@@Base+0x1980>
  408457:	lea    rdi,[rip+0x2671a]        # 42eb78 <_IO_stdin_used@@Base+0x1b78>
  40845e:	mov    edx,0x4b4
  408463:	call   405100 <__assert_fail@plt>
  408468:	mov    rdi,QWORD PTR [rbx+0xd0]
  40846f:	lea    rdx,[rip+0x2692a]        # 42eda0 <_IO_stdin_used@@Base+0x1da0>
  408476:	mov    esi,0x1
  40847b:	xor    eax,eax
  40847d:	call   405200 <__fprintf_chk@plt>
  408482:	mov    rdi,QWORD PTR [rbx+0xd0]
  408489:	lea    rdx,[rip+0x3d37d]        # 44580d <_IO_stdin_used@@Base+0x1880d>
  408490:	mov    esi,0x1
  408495:	xor    eax,eax
  408497:	call   405200 <__fprintf_chk@plt>
  40849c:	jmp    407d79 <__flatcc_fb_codegen_c@@Base+0x8c9>
  4084a1:	lea    rcx,[rip+0x2e2a0]        # 436748 <_IO_stdin_used@@Base+0x9748>
  4084a8:	lea    rsi,[rip+0x264d1]        # 42e980 <_IO_stdin_used@@Base+0x1980>
  4084af:	lea    rdi,[rip+0x26702]        # 42ebb8 <_IO_stdin_used@@Base+0x1bb8>
  4084b6:	mov    edx,0x4b5
  4084bb:	call   405100 <__assert_fail@plt>
  4084c0:	push   r15
  4084c2:	push   r14
  4084c4:	mov    ecx,0x1d
  4084c9:	push   r13
  4084cb:	push   r12
  4084cd:	push   rbp
  4084ce:	push   rbx
  4084cf:	mov    rbx,rdi
  4084d2:	sub    rsp,0x218
  4084d9:	mov    rax,QWORD PTR fs:0x28
  4084e2:	mov    QWORD PTR [rsp+0x208],rax
  4084ea:	xor    eax,eax
  4084ec:	mov    rax,QWORD PTR [rdi+0xe0]
  4084f3:	lea    r14,[rsp+0x30]
  4084f8:	mov    rdi,r14
  4084fb:	mov    eax,DWORD PTR [rax+0xa4]
  408501:	mov    DWORD PTR [rsp+0xc],eax
  408505:	xor    eax,eax
  408507:	cmp    WORD PTR [rsi+0x10],0x1
  40850c:	rep stos QWORD PTR es:[rdi],rax
  40850f:	lea    rdi,[rsp+0x120]
  408517:	mov    ecx,0x1d
  40851c:	mov    QWORD PTR [rsp+0x10],rdi
  408521:	rep stos QWORD PTR es:[rdi],rax
  408524:	jne    40936a <__flatcc_fb_codegen_c@@Base+0x1eba>
  40852a:	cmp    WORD PTR [rsi+0xb0],0x0
  408532:	mov    r15,rsi
  408535:	jne    408a30 <__flatcc_fb_codegen_c@@Base+0x1580>
  40853b:	cmp    QWORD PTR [rsi+0xa8],0x0
  408543:	jne    40938e <__flatcc_fb_codegen_c@@Base+0x1ede>
  408549:	mov    rdi,QWORD PTR [r15+0x18]
  40854d:	mov    rdx,r14
  408550:	mov    rsi,r15
  408553:	call   407300 <__flatcc_fb_scoped_symbol_name@@Base>
  408558:	mov    rbp,QWORD PTR [r15+0x40]
  40855c:	test   rbp,rbp
  40855f:	je     40860a <__flatcc_fb_codegen_c@@Base+0x115a>
  408565:	mov    ecx,0x1
  40856a:	xor    edx,edx
  40856c:	jmp    4085bb <__flatcc_fb_codegen_c@@Base+0x110b>
  40856e:	xchg   ax,ax
  408570:	lea    rdx,[rip+0x2dc75]        # 4361ec <_IO_stdin_used@@Base+0x91ec>
  408577:	mov    esi,0x1
  40857c:	xor    eax,eax
  40857e:	call   405200 <__fprintf_chk@plt>
  408583:	mov    rax,QWORD PTR [rbp+0x8]
  408587:	mov    rcx,QWORD PTR [rax+0x8]
  40858b:	mov    r8,QWORD PTR [rax]
  40858e:	lea    rdx,[rip+0x2eca4]        # 437239 <_IO_stdin_used@@Base+0xa239>
  408595:	mov    rdi,QWORD PTR [rbx+0xd0]
  40859c:	xor    eax,eax
  40859e:	mov    esi,0x1
  4085a3:	call   405200 <__fprintf_chk@plt>
  4085a8:	mov    rax,QWORD PTR [rbp+0x8]
  4085ac:	mov    rbp,QWORD PTR [rbp+0x0]
  4085b0:	xor    ecx,ecx
  4085b2:	test   rbp,rbp
  4085b5:	mov    rdx,QWORD PTR [rax+0x10]
  4085b9:	je     4085f0 <__flatcc_fb_codegen_c@@Base+0x1140>
  4085bb:	mov    rax,QWORD PTR [rbp+0x8]
  4085bf:	cmp    QWORD PTR [rax+0x10],rdx
  4085c3:	je     408587 <__flatcc_fb_codegen_c@@Base+0x10d7>
  4085c5:	test   ecx,ecx
  4085c7:	mov    rdi,QWORD PTR [rbx+0xd0]
  4085ce:	lea    rcx,[rip+0x3d239]        # 44580e <_IO_stdin_used@@Base+0x1880e>
  4085d5:	jne    408570 <__flatcc_fb_codegen_c@@Base+0x10c0>
  4085d7:	lea    rdx,[rip+0x2dc15]        # 4361f3 <_IO_stdin_used@@Base+0x91f3>
  4085de:	mov    esi,0x1
  4085e3:	xor    eax,eax
  4085e5:	call   405200 <__fprintf_chk@plt>
  4085ea:	mov    rax,QWORD PTR [rbp+0x8]
  4085ee:	jmp    408587 <__flatcc_fb_codegen_c@@Base+0x10d7>
  4085f0:	mov    rdi,QWORD PTR [rbx+0xd0]
  4085f7:	lea    rdx,[rip+0x2de41]        # 43643f <_IO_stdin_used@@Base+0x943f>
  4085fe:	mov    esi,0x1
  408603:	xor    eax,eax
  408605:	call   405200 <__fprintf_chk@plt>
  40860a:	cmp    QWORD PTR [r15+0xb8],0x0
  408612:	mov    rdi,QWORD PTR [rbx+0xd0]
  408619:	je     408abe <__flatcc_fb_codegen_c@@Base+0x160e>
  40861f:	mov    eax,DWORD PTR [rsp+0xc]
  408623:	test   eax,eax
  408625:	jne    408d65 <__flatcc_fb_codegen_c@@Base+0x18b5>
  40862b:	lea    rdx,[rip+0x2dc99]        # 4362cb <_IO_stdin_used@@Base+0x92cb>
  408632:	xor    eax,eax
  408634:	mov    rcx,r14
  408637:	mov    esi,0x1
  40863c:	call   405200 <__fprintf_chk@plt>
  408641:	mov    rbp,QWORD PTR [r15+0x28]
  408645:	test   rbp,rbp
  408648:	je     4087da <__flatcc_fb_codegen_c@@Base+0x132a>
  40864e:	mov    DWORD PTR [rsp+0x20],0x0
  408656:	mov    DWORD PTR [rsp+0x24],0x0
  40865e:	xor    r12d,r12d
  408661:	mov    QWORD PTR [rsp+0x18],r15
  408666:	mov    QWORD PTR [rsp+0x28],r14
  40866b:	mov    r13,QWORD PTR [rbp+0x68]
  40866f:	test   r13,r13
  408672:	je     40872a <__flatcc_fb_codegen_c@@Base+0x127a>
  408678:	mov    ecx,0x1
  40867d:	xor    edx,edx
  40867f:	jmp    4086d3 <__flatcc_fb_codegen_c@@Base+0x1223>
  408681:	nop    DWORD PTR [rax+0x0]
  408688:	lea    rdx,[rip+0x2db5d]        # 4361ec <_IO_stdin_used@@Base+0x91ec>
  40868f:	mov    esi,0x1
  408694:	xor    eax,eax
  408696:	call   405200 <__fprintf_chk@plt>
  40869b:	mov    rax,QWORD PTR [r13+0x8]
  40869f:	mov    rcx,QWORD PTR [rax+0x8]
  4086a3:	mov    r8,QWORD PTR [rax]
  4086a6:	lea    rdx,[rip+0x2eb8c]        # 437239 <_IO_stdin_used@@Base+0xa239>
  4086ad:	mov    rdi,QWORD PTR [rbx+0xd0]
  4086b4:	xor    eax,eax
  4086b6:	mov    esi,0x1
  4086bb:	call   405200 <__fprintf_chk@plt>
  4086c0:	mov    rax,QWORD PTR [r13+0x8]
  4086c4:	mov    r13,QWORD PTR [r13+0x0]
  4086c8:	xor    ecx,ecx
  4086ca:	test   r13,r13
  4086cd:	mov    rdx,QWORD PTR [rax+0x10]
  4086d1:	je     408710 <__flatcc_fb_codegen_c@@Base+0x1260>
  4086d3:	mov    rax,QWORD PTR [r13+0x8]
  4086d7:	cmp    QWORD PTR [rax+0x10],rdx
  4086db:	je     40869f <__flatcc_fb_codegen_c@@Base+0x11ef>
  4086dd:	test   ecx,ecx
  4086df:	mov    rdi,QWORD PTR [rbx+0xd0]
  4086e6:	lea    rcx,[rip+0x3d161]        # 44584e <_IO_stdin_used@@Base+0x1884e>
  4086ed:	jne    408688 <__flatcc_fb_codegen_c@@Base+0x11d8>
  4086ef:	lea    rdx,[rip+0x2dafd]        # 4361f3 <_IO_stdin_used@@Base+0x91f3>
  4086f6:	mov    esi,0x1
  4086fb:	xor    eax,eax
  4086fd:	call   405200 <__fprintf_chk@plt>
  408702:	mov    rax,QWORD PTR [r13+0x8]
  408706:	jmp    40869f <__flatcc_fb_codegen_c@@Base+0x11ef>
  408708:	nop    DWORD PTR [rax+rax*1+0x0]
  408710:	mov    rdi,QWORD PTR [rbx+0xd0]
  408717:	lea    rdx,[rip+0x2dd21]        # 43643f <_IO_stdin_used@@Base+0x943f>
  40871e:	mov    esi,0x1
  408723:	xor    eax,eax
  408725:	call   405200 <__fprintf_chk@plt>
  40872a:	mov    rax,QWORD PTR [rbp+0x8]
  40872e:	test   r12,r12
  408731:	mov    r13,QWORD PTR [rax]
  408734:	mov    r14,QWORD PTR [rax+0x8]
  408738:	jne    408980 <__flatcc_fb_codegen_c@@Base+0x14d0>
  40873e:	mov    rax,QWORD PTR [rsp+0x18]
  408743:	movzx  r15d,WORD PTR [rax+0xb0]
  40874b:	mov    eax,DWORD PTR [rsp+0xc]
  40874f:	test   eax,eax
  408751:	je     408940 <__flatcc_fb_codegen_c@@Base+0x1490>
  408757:	mov    r8d,DWORD PTR [rbp+0x78]
  40875b:	sub    r8d,r12d
  40875e:	jne    408a90 <__flatcc_fb_codegen_c@@Base+0x15e0>
  408764:	test   BYTE PTR [rbp+0x70],0x4
  408768:	je     408890 <__flatcc_fb_codegen_c@@Base+0x13e0>
  40876e:	mov    eax,DWORD PTR [rsp+0x20]
  408772:	mov    rdi,QWORD PTR [rbx+0xd0]
  408779:	sub    rsp,0x8
  40877d:	mov    r8d,DWORD PTR [rbp+0x80]
  408784:	push   r13
  408786:	lea    rdx,[rip+0x26d9b]        # 42f528 <_IO_stdin_used@@Base+0x2528>
  40878d:	mov    r9d,r14d
  408790:	lea    r12d,[rax+0x1]
  408794:	mov    ecx,eax
  408796:	mov    esi,0x1
  40879b:	xor    eax,eax
  40879d:	call   405200 <__fprintf_chk@plt>
  4087a2:	pop    rdi
  4087a3:	pop    r8
  4087a5:	mov    DWORD PTR [rsp+0x20],r12d
  4087aa:	mov    r12,QWORD PTR [rbp+0x80]
  4087b1:	add    r12d,DWORD PTR [rbp+0x78]
  4087b5:	mov    rbp,QWORD PTR [rbp+0x0]
  4087b9:	test   rbp,rbp
  4087bc:	jne    40866b <__flatcc_fb_codegen_c@@Base+0x11bb>
  4087c2:	mov    r13d,DWORD PTR [rsp+0xc]
  4087c7:	mov    r15,QWORD PTR [rsp+0x18]
  4087cc:	mov    r14,QWORD PTR [rsp+0x28]
  4087d1:	test   r13d,r13d
  4087d4:	jne    408dad <__flatcc_fb_codegen_c@@Base+0x18fd>
  4087da:	mov    rdi,QWORD PTR [rbx+0xd0]
  4087e1:	lea    rdx,[rip+0x2ea9d]        # 437285 <_IO_stdin_used@@Base+0xa285>
  4087e8:	mov    esi,0x1
  4087ed:	xor    eax,eax
  4087ef:	call   405200 <__fprintf_chk@plt>
  4087f4:	mov    rdi,QWORD PTR [rbx+0xd0]
  4087fb:	mov    r8,QWORD PTR [r15+0xb8]
  408802:	lea    rdx,[rip+0x268bf]        # 42f0c8 <_IO_stdin_used@@Base+0x20c8>
  408809:	mov    rcx,r14
  40880c:	mov    esi,0x1
  408811:	xor    eax,eax
  408813:	call   405200 <__fprintf_chk@plt>
  408818:	mov    rdi,QWORD PTR [rbx+0xd0]
  40881f:	lea    rdx,[rip+0x268e2]        # 42f108 <_IO_stdin_used@@Base+0x2108>
  408826:	mov    r9,r14
  408829:	mov    r8,r14
  40882c:	mov    rcx,r14
  40882f:	mov    esi,0x1
  408834:	xor    eax,eax
  408836:	call   405200 <__fprintf_chk@plt>
  40883b:	mov    rdi,QWORD PTR [rbx+0xd0]
  408842:	lea    rdx,[rip+0x26917]        # 42f160 <_IO_stdin_used@@Base+0x2160>
  408849:	mov    r9,r14
  40884c:	mov    r8,r14
  40884f:	mov    rcx,r14
  408852:	mov    esi,0x1
  408857:	xor    eax,eax
  408859:	call   405200 <__fprintf_chk@plt>
  40885e:	sub    rsp,0x8
  408862:	mov    rdi,QWORD PTR [rbx+0xd0]
  408869:	lea    rdx,[rip+0x26938]        # 42f1a8 <_IO_stdin_used@@Base+0x21a8>
  408870:	push   rbx
  408871:	mov    r9,r14
  408874:	mov    r8,r14
  408877:	mov    rcx,r14
  40887a:	mov    esi,0x1
  40887f:	xor    eax,eax
  408881:	call   405200 <__fprintf_chk@plt>
  408886:	pop    rbp
  408887:	pop    r12
  408889:	jmp    408b3d <__flatcc_fb_codegen_c@@Base+0x168d>
  40888e:	xchg   ax,ax
  408890:	movzx  eax,WORD PTR [rbp+0x28]
  408894:	cmp    ax,0x8
  408898:	je     408a08 <__flatcc_fb_codegen_c@@Base+0x1558>
  40889e:	cmp    ax,0xe
  4088a2:	jne    408990 <__flatcc_fb_codegen_c@@Base+0x14e0>
  4088a8:	mov    rsi,QWORD PTR [rbp+0x18]
  4088ac:	movzx  eax,WORD PTR [rsi+0x10]
  4088b0:	mov    edx,eax
  4088b2:	and    edx,0xfffffffd
  4088b5:	cmp    dx,0x1
  4088b9:	jne    4093ad <__flatcc_fb_codegen_c@@Base+0x1efd>
  4088bf:	mov    rdi,QWORD PTR [rsi+0x18]
  4088c3:	mov    rdx,QWORD PTR [rsp+0x10]
  4088c8:	cmp    ax,0x1
  4088cc:	lea    r12,[rip+0x2d9c1]        # 436294 <_IO_stdin_used@@Base+0x9294>
  4088d3:	lea    rax,[rip+0x3cf34]        # 44580e <_IO_stdin_used@@Base+0x1880e>
  4088da:	cmove  r12,rax
  4088de:	call   407300 <__flatcc_fb_scoped_symbol_name@@Base>
  4088e3:	mov    eax,DWORD PTR [rsp+0xc]
  4088e7:	mov    rdi,QWORD PTR [rbx+0xd0]
  4088ee:	test   eax,eax
  4088f0:	jne    408a70 <__flatcc_fb_codegen_c@@Base+0x15c0>
  4088f6:	mov    r8,QWORD PTR [rsp+0x10]
  4088fb:	lea    rdx,[rip+0x2da20]        # 436322 <_IO_stdin_used@@Base+0x9322>
  408902:	mov    r9,r12
  408905:	mov    ecx,r15d
  408908:	mov    esi,0x1
  40890d:	xor    eax,eax
  40890f:	call   405200 <__fprintf_chk@plt>
  408914:	mov    rdi,QWORD PTR [rbx+0xd0]
  40891b:	lea    rdx,[rip+0x2da20]        # 436342 <_IO_stdin_used@@Base+0x9342>
  408922:	mov    r8,r13
  408925:	mov    ecx,r14d
  408928:	mov    esi,0x1
  40892d:	xor    eax,eax
  40892f:	call   405200 <__fprintf_chk@plt>
  408934:	jmp    4087aa <__flatcc_fb_codegen_c@@Base+0x12fa>
  408939:	nop    DWORD PTR [rax+0x0]
  408940:	test   BYTE PTR [rbp+0x70],0x4
  408944:	je     408890 <__flatcc_fb_codegen_c@@Base+0x13e0>
  40894a:	mov    eax,DWORD PTR [rsp+0x20]
  40894e:	mov    rdi,QWORD PTR [rbx+0xd0]
  408955:	mov    ecx,r15d
  408958:	push   r13
  40895a:	mov    r9d,DWORD PTR [rbp+0x80]
  408961:	lea    rdx,[rip+0x26bf8]        # 42f560 <_IO_stdin_used@@Base+0x2560>
  408968:	push   r14
  40896a:	lea    r12d,[rax+0x1]
  40896e:	mov    r8d,eax
  408971:	jmp    408796 <__flatcc_fb_codegen_c@@Base+0x12e6>
  408976:	nop    WORD PTR cs:[rax+rax*1+0x0]
  408980:	movzx  r15d,WORD PTR [rbp+0x72]
  408985:	jmp    40874b <__flatcc_fb_codegen_c@@Base+0x129b>
  40898a:	nop    WORD PTR [rax+rax*1+0x0]
  408990:	mov    rdi,QWORD PTR [rbx+0xd0]
  408997:	lea    rcx,[rip+0x2670a]        # 42f0a8 <_IO_stdin_used@@Base+0x20a8>
  40899e:	lea    rdx,[rip+0x2d995]        # 43633a <_IO_stdin_used@@Base+0x933a>
  4089a5:	mov    esi,0x1
  4089aa:	xor    eax,eax
  4089ac:	call   405200 <__fprintf_chk@plt>
  4089b1:	mov    rax,QWORD PTR [rip+0x48630]        # 450fe8 <stderr@GLIBC_2.2.5>
  4089b8:	lea    rcx,[rip+0x25fc1]        # 42e980 <_IO_stdin_used@@Base+0x1980>
  4089bf:	lea    rdx,[rip+0x2d81b]        # 4361e1 <_IO_stdin_used@@Base+0x91e1>
  4089c6:	lea    r9,[rip+0x2620b]        # 42ebd8 <_IO_stdin_used@@Base+0x1bd8>
  4089cd:	mov    esi,0x1
  4089d2:	mov    r8d,0x405
  4089d8:	mov    rdi,QWORD PTR [rax]
  4089db:	xor    eax,eax
  4089dd:	call   405200 <__fprintf_chk@plt>
  4089e2:	lea    rcx,[rip+0x2ddaf]        # 436798 <_IO_stdin_used@@Base+0x9798>
  4089e9:	lea    rsi,[rip+0x25f90]        # 42e980 <_IO_stdin_used@@Base+0x1980>
  4089f0:	lea    rdi,[rip+0x2e832]        # 437229 <_IO_stdin_used@@Base+0xa229>
  4089f7:	mov    edx,0x405
  4089fc:	call   405100 <__assert_fail@plt>
  408a01:	nop    DWORD PTR [rax+0x0]
  408a08:	mov    eax,DWORD PTR [rbp+0x18]
  408a0b:	cmp    eax,0x5
  408a0e:	je     408df6 <__flatcc_fb_codegen_c@@Base+0x1946>
  408a14:	cmp    eax,0xb
  408a17:	ja     408ea1 <__flatcc_fb_codegen_c@@Base+0x19f1>
  408a1d:	lea    rsi,[rip+0x2daf4]        # 436518 <_IO_stdin_used@@Base+0x9518>
  408a24:	movsxd rax,DWORD PTR [rsi+rax*4]
  408a28:	add    rax,rsi
  408a2b:	jmp    rax
  408a2d:	nop    DWORD PTR [rax]
  408a30:	cmp    QWORD PTR [rsi+0xb8],0x0
  408a38:	jne    408549 <__flatcc_fb_codegen_c@@Base+0x1099>
  408a3e:	cmp    QWORD PTR [rsi+0xa8],0x0
  408a46:	je     408549 <__flatcc_fb_codegen_c@@Base+0x1099>
  408a4c:	lea    rcx,[rip+0x2dd45]        # 436798 <_IO_stdin_used@@Base+0x9798>
  408a53:	lea    rsi,[rip+0x25f26]        # 42e980 <_IO_stdin_used@@Base+0x1980>
  408a5a:	lea    rdi,[rip+0x2646f]        # 42eed0 <_IO_stdin_used@@Base+0x1ed0>
  408a61:	mov    edx,0x3aa
  408a66:	call   405100 <__assert_fail@plt>
  408a6b:	nop    DWORD PTR [rax+rax*1+0x0]
  408a70:	mov    rcx,QWORD PTR [rsp+0x10]
  408a75:	lea    rdx,[rip+0x2d89a]        # 436316 <_IO_stdin_used@@Base+0x9316>
  408a7c:	mov    r8,r12
  408a7f:	mov    esi,0x1
  408a84:	xor    eax,eax
  408a86:	call   405200 <__fprintf_chk@plt>
  408a8b:	jmp    408914 <__flatcc_fb_codegen_c@@Base+0x1464>
  408a90:	mov    eax,DWORD PTR [rsp+0x24]
  408a94:	mov    rdi,QWORD PTR [rbx+0xd0]
  408a9b:	lea    rdx,[rip+0x2d836]        # 4362d8 <_IO_stdin_used@@Base+0x92d8>
  408aa2:	mov    esi,0x1
  408aa7:	lea    r12d,[rax+0x1]
  408aab:	mov    ecx,eax
  408aad:	xor    eax,eax
  408aaf:	call   405200 <__fprintf_chk@plt>
  408ab4:	mov    DWORD PTR [rsp+0x24],r12d
  408ab9:	jmp    408764 <__flatcc_fb_codegen_c@@Base+0x12b4>
  408abe:	lea    rdx,[rip+0x2642b]        # 42eef0 <_IO_stdin_used@@Base+0x1ef0>
  408ac5:	mov    rcx,r14
  408ac8:	mov    esi,0x1
  408acd:	xor    eax,eax
  408acf:	call   405200 <__fprintf_chk@plt>
  408ad4:	mov    rdi,QWORD PTR [rbx+0xd0]
  408adb:	lea    rdx,[rip+0x26476]        # 42ef58 <_IO_stdin_used@@Base+0x1f58>
  408ae2:	mov    r9,r14
  408ae5:	mov    r8,r14
  408ae8:	mov    rcx,r14
  408aeb:	mov    esi,0x1
  408af0:	xor    eax,eax
  408af2:	call   405200 <__fprintf_chk@plt>
  408af7:	mov    rdi,QWORD PTR [rbx+0xd0]
  408afe:	lea    rdx,[rip+0x264ab]        # 42efb0 <_IO_stdin_used@@Base+0x1fb0>
  408b05:	mov    r9,r14
  408b08:	mov    r8,r14
  408b0b:	mov    rcx,r14
  408b0e:	mov    esi,0x1
  408b13:	xor    eax,eax
  408b15:	call   405200 <__fprintf_chk@plt>
  408b1a:	mov    rdi,QWORD PTR [rbx+0xd0]
  408b21:	lea    rdx,[rip+0x264d0]        # 42eff8 <_IO_stdin_used@@Base+0x1ff8>
  408b28:	mov    r9,r14
  408b2b:	mov    r8,r14
  408b2e:	mov    rcx,r14
  408b31:	mov    esi,0x1
  408b36:	xor    eax,eax
  408b38:	call   405200 <__fprintf_chk@plt>
  408b3d:	mov    rdi,QWORD PTR [rbx+0xd0]
  408b44:	mov    r8,QWORD PTR [r15+0xb8]
  408b4b:	lea    rdx,[rip+0x266ae]        # 42f200 <_IO_stdin_used@@Base+0x2200>
  408b52:	mov    rcx,r14
  408b55:	mov    esi,0x1
  408b5a:	xor    eax,eax
  408b5c:	xor    r12d,r12d
  408b5f:	call   405200 <__fprintf_chk@plt>
  408b64:	mov    rdi,QWORD PTR [rbx+0xd0]
  408b6b:	lea    rdx,[rip+0x266c6]        # 42f238 <_IO_stdin_used@@Base+0x2238>
  408b72:	mov    r9,rbx
  408b75:	mov    r8,r14
  408b78:	mov    rcx,r14
  408b7b:	mov    esi,0x1
  408b80:	xor    eax,eax
  408b82:	call   405200 <__fprintf_chk@plt>
  408b87:	mov    rdi,QWORD PTR [rbx+0xd0]
  408b8e:	lea    rdx,[rip+0x2d7b4]        # 436349 <_IO_stdin_used@@Base+0x9349>
  408b95:	mov    r8,r14
  408b98:	mov    rcx,rbx
  408b9b:	mov    esi,0x1
  408ba0:	xor    eax,eax
  408ba2:	call   405200 <__fprintf_chk@plt>
  408ba7:	mov    rdi,QWORD PTR [rbx+0xd0]
  408bae:	lea    rdx,[rip+0x3cc58]        # 44580d <_IO_stdin_used@@Base+0x1880d>
  408bb5:	xor    eax,eax
  408bb7:	mov    esi,0x1
  408bbc:	call   405200 <__fprintf_chk@plt>
  408bc1:	mov    rbp,QWORD PTR [r15+0x28]
  408bc5:	mov    DWORD PTR [rsp+0xc],0x0
  408bcd:	test   rbp,rbp
  408bd0:	je     408cad <__flatcc_fb_codegen_c@@Base+0x17fd>
  408bd6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  408be0:	movzx  eax,WORD PTR [rbp+0x70]
  408be4:	test   al,0x4
  408be6:	jne    408ca0 <__flatcc_fb_codegen_c@@Base+0x17f0>
  408bec:	mov    rdx,QWORD PTR [rbp+0x8]
  408bf0:	mov    r13,QWORD PTR [rdx]
  408bf3:	mov    r15,QWORD PTR [rdx+0x8]
  408bf7:	movzx  edx,WORD PTR [rbp+0x28]
  408bfb:	cmp    dx,0x8
  408bff:	je     408d40 <__flatcc_fb_codegen_c@@Base+0x1890>
  408c05:	cmp    dx,0xe
  408c09:	jne    408cf4 <__flatcc_fb_codegen_c@@Base+0x1844>
  408c0f:	mov    rsi,QWORD PTR [rbp+0x18]
  408c13:	mov    rdx,QWORD PTR [rsp+0x10]
  408c18:	mov    rdi,QWORD PTR [rsi+0x18]
  408c1c:	call   407300 <__flatcc_fb_scoped_symbol_name@@Base>
  408c21:	mov    rdx,QWORD PTR [rbp+0x18]
  408c25:	movzx  eax,WORD PTR [rdx+0x10]
  408c29:	cmp    ax,0x1
  408c2d:	je     408f12 <__flatcc_fb_codegen_c@@Base+0x1a62>
  408c33:	cmp    ax,0x3
  408c37:	jne    408cf0 <__flatcc_fb_codegen_c@@Base+0x1840>
  408c3d:	mov    eax,DWORD PTR [rdx+0x48]
  408c40:	sub    eax,0x1
  408c43:	cmp    eax,0xa
  408c46:	ja     4092e8 <__flatcc_fb_codegen_c@@Base+0x1e38>
  408c4c:	sub    rsp,0x8
  408c50:	mov    rdi,QWORD PTR [rbx+0xd0]
  408c57:	lea    rdx,[rip+0x26652]        # 42f2b0 <_IO_stdin_used@@Base+0x22b0>
  408c5e:	mov    rax,QWORD PTR [rsp+0x18]
  408c63:	mov    r9d,r15d
  408c66:	mov    r8,r14
  408c69:	mov    rcx,rbx
  408c6c:	mov    esi,0x1
  408c71:	push   rax
  408c72:	push   rax
  408c73:	xor    eax,eax
  408c75:	push   r13
  408c77:	call   405200 <__fprintf_chk@plt>
  408c7c:	mov    rax,QWORD PTR [rbx+0xe0]
  408c83:	add    rsp,0x20
  408c87:	mov    r11d,DWORD PTR [rax+0x24]
  408c8b:	test   r11d,r11d
  408c8e:	jne    408fc8 <__flatcc_fb_codegen_c@@Base+0x1b18>
  408c94:	test   BYTE PTR [rbp+0x70],0x80
  408c98:	jne    408f9b <__flatcc_fb_codegen_c@@Base+0x1aeb>
  408c9e:	xchg   ax,ax
  408ca0:	mov    rbp,QWORD PTR [rbp+0x0]
  408ca4:	test   rbp,rbp
  408ca7:	jne    408be0 <__flatcc_fb_codegen_c@@Base+0x1730>
  408cad:	mov    rdi,QWORD PTR [rbx+0xd0]
  408cb4:	lea    rdx,[rip+0x3cb52]        # 44580d <_IO_stdin_used@@Base+0x1880d>
  408cbb:	xor    eax,eax
  408cbd:	mov    esi,0x1
  408cc2:	call   405200 <__fprintf_chk@plt>
  408cc7:	mov    rax,QWORD PTR [rsp+0x208]
  408ccf:	xor    rax,QWORD PTR fs:0x28
  408cd8:	jne    409389 <__flatcc_fb_codegen_c@@Base+0x1ed9>
  408cde:	add    rsp,0x218
  408ce5:	pop    rbx
  408ce6:	pop    rbp
  408ce7:	pop    r12
  408ce9:	pop    r13
  408ceb:	pop    r14
  408ced:	pop    r15
  408cef:	ret    
  408cf0:	movzx  eax,WORD PTR [rbp+0x70]
  408cf4:	and    ax,0x80
  408cf8:	test   ax,ax
  408cfb:	je     408ca0 <__flatcc_fb_codegen_c@@Base+0x17f0>
  408cfd:	test   r12d,r12d
  408d00:	jne    408ca0 <__flatcc_fb_codegen_c@@Base+0x17f0>
  408d02:	mov    rdi,QWORD PTR [rbx+0xd0]
  408d09:	lea    rdx,[rip+0x267c0]        # 42f4d0 <_IO_stdin_used@@Base+0x24d0>
  408d10:	xor    eax,eax
  408d12:	mov    esi,0x1
  408d17:	call   405200 <__fprintf_chk@plt>
  408d1c:	mov    rbp,QWORD PTR [rbp+0x0]
  408d20:	mov    DWORD PTR [rsp+0xc],0x1
  408d28:	test   rbp,rbp
  408d2b:	jne    408be0 <__flatcc_fb_codegen_c@@Base+0x1730>
  408d31:	jmp    408cad <__flatcc_fb_codegen_c@@Base+0x17fd>
  408d36:	nop    WORD PTR cs:[rax+rax*1+0x0]
  408d40:	mov    eax,DWORD PTR [rbp+0x18]
  408d43:	cmp    eax,0x5
  408d46:	je     408f4c <__flatcc_fb_codegen_c@@Base+0x1a9c>
  408d4c:	cmp    eax,0xb
  408d4f:	ja     408ea1 <__flatcc_fb_codegen_c@@Base+0x19f1>
  408d55:	lea    rsi,[rip+0x2d7ec]        # 436548 <_IO_stdin_used@@Base+0x9548>
  408d5c:	movsxd rax,DWORD PTR [rsi+rax*4]
  408d60:	add    rax,rsi
  408d63:	jmp    rax
  408d65:	lea    rdx,[rip+0x2d54e]        # 4362ba <_IO_stdin_used@@Base+0x92ba>
  408d6c:	mov    esi,0x1
  408d71:	xor    eax,eax
  408d73:	call   405200 <__fprintf_chk@plt>
  408d78:	mov    rdi,QWORD PTR [rbx+0xd0]
  408d7f:	lea    rdx,[rip+0x2d545]        # 4362cb <_IO_stdin_used@@Base+0x92cb>
  408d86:	xor    eax,eax
  408d88:	mov    rcx,r14
  408d8b:	mov    esi,0x1
  408d90:	call   405200 <__fprintf_chk@plt>
  408d95:	mov    rbp,QWORD PTR [r15+0x28]
  408d99:	test   rbp,rbp
  408d9c:	jne    40864e <__flatcc_fb_codegen_c@@Base+0x119e>
  408da2:	xor    r12d,r12d
  408da5:	mov    DWORD PTR [rsp+0x24],0x0
  408dad:	mov    r8d,DWORD PTR [r15+0xb8]
  408db4:	sub    r8d,r12d
  408db7:	jne    40921d <__flatcc_fb_codegen_c@@Base+0x1d6d>
  408dbd:	mov    rdi,QWORD PTR [rbx+0xd0]
  408dc4:	lea    rdx,[rip+0x2e4ba]        # 437285 <_IO_stdin_used@@Base+0xa285>
  408dcb:	mov    esi,0x1
  408dd0:	xor    eax,eax
  408dd2:	call   405200 <__fprintf_chk@plt>
  408dd7:	mov    rdi,QWORD PTR [rbx+0xd0]
  408dde:	lea    rdx,[rip+0x2d57c]        # 436361 <_IO_stdin_used@@Base+0x9361>
  408de5:	mov    esi,0x1
  408dea:	xor    eax,eax
  408dec:	call   405200 <__fprintf_chk@plt>
  408df1:	jmp    4087f4 <__flatcc_fb_codegen_c@@Base+0x1344>
  408df6:	lea    r8,[rip+0x2d3a2]        # 43619f <_IO_stdin_used@@Base+0x919f>
  408dfd:	mov    rcx,rbx
  408e00:	mov    eax,DWORD PTR [rsp+0xc]
  408e04:	mov    rdi,QWORD PTR [rbx+0xd0]
  408e0b:	test   eax,eax
  408e0d:	je     408ef1 <__flatcc_fb_codegen_c@@Base+0x1a41>
  408e13:	lea    rdx,[rip+0x2d4dc]        # 4362f6 <_IO_stdin_used@@Base+0x92f6>
  408e1a:	mov    esi,0x1
  408e1f:	xor    eax,eax
  408e21:	call   405200 <__fprintf_chk@plt>
  408e26:	jmp    408914 <__flatcc_fb_codegen_c@@Base+0x1464>
  408e2b:	lea    rcx,[rip+0x3c9dc]        # 44580e <_IO_stdin_used@@Base+0x1880e>
  408e32:	lea    r8,[rip+0x2d344]        # 43617d <_IO_stdin_used@@Base+0x917d>
  408e39:	jmp    408e00 <__flatcc_fb_codegen_c@@Base+0x1950>
  408e3b:	lea    rcx,[rip+0x3c9cc]        # 44580e <_IO_stdin_used@@Base+0x1880e>
  408e42:	lea    r8,[rip+0x2d35d]        # 4361a6 <_IO_stdin_used@@Base+0x91a6>
  408e49:	jmp    408e00 <__flatcc_fb_codegen_c@@Base+0x1950>
  408e4b:	lea    rcx,[rip+0x3c9bc]        # 44580e <_IO_stdin_used@@Base+0x1880e>
  408e52:	lea    r8,[rip+0x2d33e]        # 436197 <_IO_stdin_used@@Base+0x9197>
  408e59:	jmp    408e00 <__flatcc_fb_codegen_c@@Base+0x1950>
  408e5b:	lea    rcx,[rip+0x3c9ac]        # 44580e <_IO_stdin_used@@Base+0x1880e>
  408e62:	lea    r8,[rip+0x2d343]        # 4361ac <_IO_stdin_used@@Base+0x91ac>
  408e69:	jmp    408e00 <__flatcc_fb_codegen_c@@Base+0x1950>
  408e6b:	lea    rcx,[rip+0x3c99c]        # 44580e <_IO_stdin_used@@Base+0x1880e>
  408e72:	lea    r8,[rip+0x2d31f]        # 436198 <_IO_stdin_used@@Base+0x9198>
  408e79:	jmp    408e00 <__flatcc_fb_codegen_c@@Base+0x1950>
  408e7b:	lea    rcx,[rip+0x3c98c]        # 44580e <_IO_stdin_used@@Base+0x1880e>
  408e82:	lea    r8,[rip+0x2d306]        # 43618f <_IO_stdin_used@@Base+0x918f>
  408e89:	jmp    408e00 <__flatcc_fb_codegen_c@@Base+0x1950>
  408e8e:	lea    rcx,[rip+0x3c979]        # 44580e <_IO_stdin_used@@Base+0x1880e>
  408e95:	lea    r8,[rip+0x2d2ea]        # 436186 <_IO_stdin_used@@Base+0x9186>
  408e9c:	jmp    408e00 <__flatcc_fb_codegen_c@@Base+0x1950>
  408ea1:	mov    rax,QWORD PTR [rip+0x48140]        # 450fe8 <stderr@GLIBC_2.2.5>
  408ea8:	lea    rcx,[rip+0x25d61]        # 42ec10 <_IO_stdin_used@@Base+0x1c10>
  408eaf:	lea    rdx,[rip+0x2d32b]        # 4361e1 <_IO_stdin_used@@Base+0x91e1>
  408eb6:	lea    r9,[rip+0x25d1b]        # 42ebd8 <_IO_stdin_used@@Base+0x1bd8>
  408ebd:	mov    esi,0x1
  408ec2:	mov    r8d,0x8d
  408ec8:	mov    rdi,QWORD PTR [rax]
  408ecb:	xor    eax,eax
  408ecd:	call   405200 <__fprintf_chk@plt>
  408ed2:	lea    rcx,[rip+0x2d8a7]        # 436780 <_IO_stdin_used@@Base+0x9780>
  408ed9:	lea    rsi,[rip+0x25d30]        # 42ec10 <_IO_stdin_used@@Base+0x1c10>
  408ee0:	lea    rdi,[rip+0x2e342]        # 437229 <_IO_stdin_used@@Base+0xa229>
  408ee7:	mov    edx,0x8d
  408eec:	call   405100 <__assert_fail@plt>
  408ef1:	lea    rdx,[rip+0x2d408]        # 436300 <_IO_stdin_used@@Base+0x9300>
  408ef8:	mov    r9,r8
  408efb:	mov    esi,0x1
  408f00:	mov    r8,rcx
  408f03:	xor    eax,eax
  408f05:	mov    ecx,r15d
  408f08:	call   405200 <__fprintf_chk@plt>
  408f0d:	jmp    408914 <__flatcc_fb_codegen_c@@Base+0x1464>
  408f12:	mov    rdi,QWORD PTR [rbx+0xd0]
  408f19:	push   QWORD PTR [rsp+0x10]
  408f1d:	lea    rdx,[rip+0x26574]        # 42f498 <_IO_stdin_used@@Base+0x2498>
  408f24:	push   r13
  408f26:	mov    r9d,r15d
  408f29:	mov    r8,r14
  408f2c:	mov    rcx,rbx
  408f2f:	mov    esi,0x1
  408f34:	xor    eax,eax
  408f36:	call   405200 <__fprintf_chk@plt>
  408f3b:	movzx  eax,WORD PTR [rbp+0x70]
  408f3f:	pop    r9
  408f41:	pop    r10
  408f43:	and    ax,0x80
  408f47:	jmp    408cf8 <__flatcc_fb_codegen_c@@Base+0x1848>
  408f4c:	lea    rax,[rip+0x2d24c]        # 43619f <_IO_stdin_used@@Base+0x919f>
  408f53:	lea    rdx,[rip+0x2d35b]        # 4362b5 <_IO_stdin_used@@Base+0x92b5>
  408f5a:	mov    rcx,rbx
  408f5d:	sub    rsp,0x8
  408f61:	mov    rdi,QWORD PTR [rbx+0xd0]
  408f68:	mov    r9d,r15d
  408f6b:	push   rax
  408f6c:	push   rcx
  408f6d:	mov    r8,r14
  408f70:	push   rdx
  408f71:	lea    rdx,[rip+0x26300]        # 42f278 <_IO_stdin_used@@Base+0x2278>
  408f78:	push   rbx
  408f79:	push   r13
  408f7b:	mov    rcx,rbx
  408f7e:	mov    esi,0x1
  408f83:	xor    eax,eax
  408f85:	call   405200 <__fprintf_chk@plt>
  408f8a:	movzx  eax,WORD PTR [rbp+0x70]
  408f8e:	add    rsp,0x30
  408f92:	and    ax,0x80
  408f96:	jmp    408cf8 <__flatcc_fb_codegen_c@@Base+0x1848>
  408f9b:	mov    rdi,QWORD PTR [rbx+0xd0]
  408fa2:	push   QWORD PTR [rsp+0x10]
  408fa6:	lea    rdx,[rip+0x26343]        # 42f2f0 <_IO_stdin_used@@Base+0x22f0>
  408fad:	push   r13
  408faf:	mov    r9d,r15d
  408fb2:	mov    r8,r14
  408fb5:	mov    rcx,rbx
  408fb8:	mov    esi,0x1
  408fbd:	xor    eax,eax
  408fbf:	call   405200 <__fprintf_chk@plt>
  408fc4:	pop    r9
  408fc6:	pop    r10
  408fc8:	test   BYTE PTR [rbp+0x70],0x80
  408fcc:	je     408ca0 <__flatcc_fb_codegen_c@@Base+0x17f0>
  408fd2:	mov    r8d,DWORD PTR [rsp+0xc]
  408fd7:	mov    rdi,QWORD PTR [rbx+0xd0]
  408fde:	test   r8d,r8d
  408fe1:	jne    409240 <__flatcc_fb_codegen_c@@Base+0x1d90>
  408fe7:	lea    rdx,[rip+0x26382]        # 42f370 <_IO_stdin_used@@Base+0x2370>
  408fee:	mov    esi,0x1
  408ff3:	xor    eax,eax
  408ff5:	call   405200 <__fprintf_chk@plt>
  408ffa:	mov    rdi,QWORD PTR [rbx+0xd0]
  409001:	push   QWORD PTR [rsp+0x10]
  409005:	lea    rdx,[rip+0x263a4]        # 42f3b0 <_IO_stdin_used@@Base+0x23b0>
  40900c:	push   r13
  40900e:	mov    rcx,rbx
  409011:	mov    esi,0x1
  409016:	xor    eax,eax
  409018:	mov    r9d,r15d
  40901b:	mov    r8,r14
  40901e:	call   405200 <__fprintf_chk@plt>
  409023:	mov    rax,QWORD PTR [rbx+0xe0]
  40902a:	pop    rdx
  40902b:	pop    rcx
  40902c:	mov    esi,DWORD PTR [rax+0xa8]
  409032:	test   esi,esi
  409034:	je     409069 <__flatcc_fb_codegen_c@@Base+0x1bb9>
  409036:	sub    rsp,0x8
  40903a:	mov    rdi,QWORD PTR [rbx+0xd0]
  409041:	lea    rdx,[rip+0x26558]        # 42f5a0 <_IO_stdin_used@@Base+0x25a0>
  409048:	push   r14
  40904a:	push   QWORD PTR [rsp+0x20]
  40904e:	mov    r9d,r15d
  409051:	push   r13
  409053:	mov    r8,r14
  409056:	mov    rcx,rbx
  409059:	mov    esi,0x1
  40905e:	xor    eax,eax
  409060:	call   405200 <__fprintf_chk@plt>
  409065:	add    rsp,0x20
  409069:	mov    r12,QWORD PTR [rsp+0x10]
  40906e:	mov    rdi,QWORD PTR [rbx+0xd0]
  409075:	lea    rdx,[rip+0x2636c]        # 42f3e8 <_IO_stdin_used@@Base+0x23e8>
  40907c:	mov    r9d,r15d
  40907f:	mov    r8,r14
  409082:	mov    rcx,rbx
  409085:	mov    esi,0x1
  40908a:	xor    eax,eax
  40908c:	push   r12
  40908e:	push   r13
  409090:	call   405200 <__fprintf_chk@plt>
  409095:	mov    rdi,QWORD PTR [rbx+0xd0]
  40909c:	push   r12
  40909e:	lea    rdx,[rip+0x26383]        # 42f428 <_IO_stdin_used@@Base+0x2428>
  4090a5:	push   r13
  4090a7:	xor    eax,eax
  4090a9:	mov    r9d,r15d
  4090ac:	mov    r8,r14
  4090af:	mov    rcx,rbx
  4090b2:	mov    esi,0x1
  4090b7:	call   405200 <__fprintf_chk@plt>
  4090bc:	mov    rax,QWORD PTR [rbx+0xe0]
  4090c3:	add    rsp,0x20
  4090c7:	mov    eax,DWORD PTR [rax+0xa8]
  4090cd:	test   eax,eax
  4090cf:	jne    409338 <__flatcc_fb_codegen_c@@Base+0x1e88>
  4090d5:	mov    DWORD PTR [rsp+0xc],0x1
  4090dd:	mov    r12d,0x1
  4090e3:	jmp    408ca0 <__flatcc_fb_codegen_c@@Base+0x17f0>
  4090e8:	lea    rcx,[rip+0x3c71f]        # 44580e <_IO_stdin_used@@Base+0x1880e>
  4090ef:	lea    r8,[rip+0x2d098]        # 43618e <_IO_stdin_used@@Base+0x918e>
  4090f6:	jmp    408e00 <__flatcc_fb_codegen_c@@Base+0x1950>
  4090fb:	lea    rcx,[rip+0x3c70c]        # 44580e <_IO_stdin_used@@Base+0x1880e>
  409102:	lea    r8,[rip+0x2d073]        # 43617c <_IO_stdin_used@@Base+0x917c>
  409109:	jmp    408e00 <__flatcc_fb_codegen_c@@Base+0x1950>
  40910e:	lea    rcx,[rip+0x3c6f9]        # 44580e <_IO_stdin_used@@Base+0x1880e>
  409115:	lea    r8,[rip+0x2d069]        # 436185 <_IO_stdin_used@@Base+0x9185>
  40911c:	jmp    408e00 <__flatcc_fb_codegen_c@@Base+0x1950>
  409121:	lea    rax,[rip+0x2d070]        # 436198 <_IO_stdin_used@@Base+0x9198>
  409128:	lea    rcx,[rip+0x3c6df]        # 44580e <_IO_stdin_used@@Base+0x1880e>
  40912f:	lea    rdx,[rip+0x2d17a]        # 4362b0 <_IO_stdin_used@@Base+0x92b0>
  409136:	jmp    408f5d <__flatcc_fb_codegen_c@@Base+0x1aad>
  40913b:	lea    rax,[rip+0x2d06a]        # 4361ac <_IO_stdin_used@@Base+0x91ac>
  409142:	lea    rcx,[rip+0x3c6c5]        # 44580e <_IO_stdin_used@@Base+0x1880e>
  409149:	mov    rdx,rax
  40914c:	jmp    408f5d <__flatcc_fb_codegen_c@@Base+0x1aad>
  409151:	lea    rax,[rip+0x2d04e]        # 4361a6 <_IO_stdin_used@@Base+0x91a6>
  409158:	lea    rcx,[rip+0x3c6af]        # 44580e <_IO_stdin_used@@Base+0x1880e>
  40915f:	mov    rdx,rax
  409162:	jmp    408f5d <__flatcc_fb_codegen_c@@Base+0x1aad>
  409167:	lea    rax,[rip+0x2d00f]        # 43617d <_IO_stdin_used@@Base+0x917d>
  40916e:	lea    rcx,[rip+0x3c699]        # 44580e <_IO_stdin_used@@Base+0x1880e>
  409175:	lea    rdx,[rip+0x2d11f]        # 43629b <_IO_stdin_used@@Base+0x929b>
  40917c:	jmp    408f5d <__flatcc_fb_codegen_c@@Base+0x1aad>
  409181:	lea    rax,[rip+0x2cffe]        # 436186 <_IO_stdin_used@@Base+0x9186>
  409188:	lea    rcx,[rip+0x3c67f]        # 44580e <_IO_stdin_used@@Base+0x1880e>
  40918f:	lea    rdx,[rip+0x2d10c]        # 4362a2 <_IO_stdin_used@@Base+0x92a2>
  409196:	jmp    408f5d <__flatcc_fb_codegen_c@@Base+0x1aad>
  40919b:	lea    rax,[rip+0x2cfed]        # 43618f <_IO_stdin_used@@Base+0x918f>
  4091a2:	lea    rcx,[rip+0x3c665]        # 44580e <_IO_stdin_used@@Base+0x1880e>
  4091a9:	lea    rdx,[rip+0x2d0f9]        # 4362a9 <_IO_stdin_used@@Base+0x92a9>
  4091b0:	jmp    408f5d <__flatcc_fb_codegen_c@@Base+0x1aad>
  4091b5:	lea    rax,[rip+0x2cfdb]        # 436197 <_IO_stdin_used@@Base+0x9197>
  4091bc:	lea    rcx,[rip+0x3c64b]        # 44580e <_IO_stdin_used@@Base+0x1880e>
  4091c3:	lea    rdx,[rip+0x2d0e5]        # 4362af <_IO_stdin_used@@Base+0x92af>
  4091ca:	jmp    408f5d <__flatcc_fb_codegen_c@@Base+0x1aad>
  4091cf:	lea    rax,[rip+0x2cfa6]        # 43617c <_IO_stdin_used@@Base+0x917c>
  4091d6:	lea    rcx,[rip+0x3c631]        # 44580e <_IO_stdin_used@@Base+0x1880e>
  4091dd:	lea    rdx,[rip+0x2d0b6]        # 43629a <_IO_stdin_used@@Base+0x929a>
  4091e4:	jmp    408f5d <__flatcc_fb_codegen_c@@Base+0x1aad>
  4091e9:	lea    rax,[rip+0x2cf9e]        # 43618e <_IO_stdin_used@@Base+0x918e>
  4091f0:	lea    rcx,[rip+0x3c617]        # 44580e <_IO_stdin_used@@Base+0x1880e>
  4091f7:	lea    rdx,[rip+0x2d0aa]        # 4362a8 <_IO_stdin_used@@Base+0x92a8>
  4091fe:	jmp    408f5d <__flatcc_fb_codegen_c@@Base+0x1aad>
  409203:	lea    rax,[rip+0x2cf7b]        # 436185 <_IO_stdin_used@@Base+0x9185>
  40920a:	lea    rcx,[rip+0x3c5fd]        # 44580e <_IO_stdin_used@@Base+0x1880e>
  409211:	lea    rdx,[rip+0x2d089]        # 4362a1 <_IO_stdin_used@@Base+0x92a1>
  409218:	jmp    408f5d <__flatcc_fb_codegen_c@@Base+0x1aad>
  40921d:	mov    rdi,QWORD PTR [rbx+0xd0]
  409224:	mov    ecx,DWORD PTR [rsp+0x24]
  409228:	lea    rdx,[rip+0x2d0a9]        # 4362d8 <_IO_stdin_used@@Base+0x92d8>
  40922f:	mov    esi,0x1
  409234:	xor    eax,eax
  409236:	call   405200 <__fprintf_chk@plt>
  40923b:	jmp    408dbd <__flatcc_fb_codegen_c@@Base+0x190d>
  409240:	lea    rdx,[rip+0x260e1]        # 42f328 <_IO_stdin_used@@Base+0x2328>
  409247:	mov    esi,0x1
  40924c:	xor    eax,eax
  40924e:	call   405200 <__fprintf_chk@plt>
  409253:	mov    rdi,QWORD PTR [rbx+0xd0]
  40925a:	lea    rdx,[rip+0x2610f]        # 42f370 <_IO_stdin_used@@Base+0x2370>
  409261:	mov    esi,0x1
  409266:	xor    eax,eax
  409268:	call   405200 <__fprintf_chk@plt>
  40926d:	mov    rdi,QWORD PTR [rbx+0xd0]
  409274:	push   QWORD PTR [rsp+0x10]
  409278:	lea    rdx,[rip+0x26131]        # 42f3b0 <_IO_stdin_used@@Base+0x23b0>
  40927f:	push   r13
  409281:	mov    rcx,rbx
  409284:	mov    esi,0x1
  409289:	xor    eax,eax
  40928b:	mov    r9d,r15d
  40928e:	mov    r8,r14
  409291:	call   405200 <__fprintf_chk@plt>
  409296:	mov    rax,QWORD PTR [rbx+0xe0]
  40929d:	pop    rdx
  40929e:	pop    rcx
  40929f:	mov    esi,DWORD PTR [rax+0xa8]
  4092a5:	test   esi,esi
  4092a7:	je     4090d5 <__flatcc_fb_codegen_c@@Base+0x1c25>
  4092ad:	sub    rsp,0x8
  4092b1:	mov    rdi,QWORD PTR [rbx+0xd0]
  4092b8:	lea    rdx,[rip+0x262e1]        # 42f5a0 <_IO_stdin_used@@Base+0x25a0>
  4092bf:	push   r14
  4092c1:	push   QWORD PTR [rsp+0x20]
  4092c5:	mov    r9d,r15d
  4092c8:	push   r13
  4092ca:	mov    r8,r14
  4092cd:	mov    rcx,rbx
  4092d0:	mov    esi,0x1
  4092d5:	xor    eax,eax
  4092d7:	call   405200 <__fprintf_chk@plt>
  4092dc:	add    rsp,0x20
  4092e0:	jmp    4090d5 <__flatcc_fb_codegen_c@@Base+0x1c25>
  4092e5:	nop    DWORD PTR [rax]
  4092e8:	mov    rax,QWORD PTR [rip+0x47cf9]        # 450fe8 <stderr@GLIBC_2.2.5>
  4092ef:	lea    rcx,[rip+0x2591a]        # 42ec10 <_IO_stdin_used@@Base+0x1c10>
  4092f6:	lea    rdx,[rip+0x2cee4]        # 4361e1 <_IO_stdin_used@@Base+0x91e1>
  4092fd:	lea    r9,[rip+0x258d4]        # 42ebd8 <_IO_stdin_used@@Base+0x1bd8>
  409304:	mov    esi,0x1
  409309:	mov    r8d,0x60
  40930f:	mov    rdi,QWORD PTR [rax]
  409312:	xor    eax,eax
  409314:	call   405200 <__fprintf_chk@plt>
  409319:	lea    rcx,[rip+0x2d440]        # 436760 <_IO_stdin_used@@Base+0x9760>
  409320:	lea    rsi,[rip+0x258e9]        # 42ec10 <_IO_stdin_used@@Base+0x1c10>
  409327:	lea    rdi,[rip+0x2defb]        # 437229 <_IO_stdin_used@@Base+0xa229>
  40932e:	mov    edx,0x60
  409333:	call   405100 <__assert_fail@plt>
  409338:	sub    rsp,0x8
  40933c:	mov    rdi,QWORD PTR [rbx+0xd0]
  409343:	lea    rdx,[rip+0x2611e]        # 42f468 <_IO_stdin_used@@Base+0x2468>
  40934a:	push   r13
  40934c:	mov    r9d,r15d
  40934f:	mov    r8,r14
  409352:	mov    rcx,r14
  409355:	mov    esi,0x1
  40935a:	xor    eax,eax
  40935c:	call   405200 <__fprintf_chk@plt>
  409361:	pop    r11
  409363:	pop    r12
  409365:	jmp    4090d5 <__flatcc_fb_codegen_c@@Base+0x1c25>
  40936a:	lea    rcx,[rip+0x2d427]        # 436798 <_IO_stdin_used@@Base+0x9798>
  409371:	lea    rsi,[rip+0x25608]        # 42e980 <_IO_stdin_used@@Base+0x1980>
  409378:	lea    rdi,[rip+0x25b11]        # 42ee90 <_IO_stdin_used@@Base+0x1e90>
  40937f:	mov    edx,0x3a8
  409384:	call   405100 <__assert_fail@plt>
  409389:	call   4050d0 <__stack_chk_fail@plt>
  40938e:	lea    rcx,[rip+0x2d403]        # 436798 <_IO_stdin_used@@Base+0x9798>
  409395:	lea    rsi,[rip+0x255e4]        # 42e980 <_IO_stdin_used@@Base+0x1980>
  40939c:	lea    rdi,[rip+0x25b0d]        # 42eeb0 <_IO_stdin_used@@Base+0x1eb0>
  4093a3:	mov    edx,0x3a9
  4093a8:	call   405100 <__assert_fail@plt>
  4093ad:	lea    rcx,[rip+0x2d3e4]        # 436798 <_IO_stdin_used@@Base+0x9798>
  4093b4:	lea    rsi,[rip+0x255c5]        # 42e980 <_IO_stdin_used@@Base+0x1980>
  4093bb:	lea    rdi,[rip+0x25c86]        # 42f048 <_IO_stdin_used@@Base+0x2048>
  4093c2:	mov    edx,0x3fa
  4093c7:	call   405100 <__assert_fail@plt>
  4093cc:	nop    DWORD PTR [rax+0x0]
  4093d0:	push   r15
  4093d2:	push   r14
  4093d4:	push   r13
  4093d6:	push   r12
  4093d8:	push   rbp
  4093d9:	push   rbx
  4093da:	sub    rsp,0x478
  4093e1:	mov    rax,QWORD PTR fs:0x28
  4093ea:	mov    QWORD PTR [rsp+0x468],rax
  4093f2:	xor    eax,eax
  4093f4:	cmp    WORD PTR [rsi+0x10],0x0
  4093f9:	jne    40ab57 <__flatcc_fb_codegen_c@@Base+0x36a7>
  4093ff:	lea    r12,[rsp+0x40]
  409404:	xor    eax,eax
  409406:	mov    rbx,rdi
  409409:	mov    ecx,0x1d
  40940e:	lea    rdx,[rip+0x3c3f8]        # 44580d <_IO_stdin_used@@Base+0x1880d>
  409415:	mov    r15,rsi
  409418:	mov    rdi,r12
  40941b:	mov    esi,0x1
  409420:	rep stos QWORD PTR es:[rdi],rax
  409423:	lea    rdi,[rsp+0x130]
  40942b:	mov    ecx,0x1d
  409430:	mov    QWORD PTR [rsp],rdi
  409434:	rep stos QWORD PTR es:[rdi],rax
  409437:	mov    rdi,QWORD PTR [rbx+0xd0]
  40943e:	call   405200 <__fprintf_chk@plt>
  409443:	mov    rdi,QWORD PTR [r15+0x18]
  409447:	mov    rdx,r12
  40944a:	mov    rsi,r15
  40944d:	call   407300 <__flatcc_fb_scoped_symbol_name@@Base>
  409452:	mov    rbp,QWORD PTR [r15+0x40]
  409456:	test   rbp,rbp
  409459:	je     40950a <__flatcc_fb_codegen_c@@Base+0x205a>
  40945f:	mov    ecx,0x1
  409464:	xor    edx,edx
  409466:	jmp    4094bb <__flatcc_fb_codegen_c@@Base+0x200b>
  409468:	nop    DWORD PTR [rax+rax*1+0x0]
  409470:	lea    rdx,[rip+0x2cd75]        # 4361ec <_IO_stdin_used@@Base+0x91ec>
  409477:	mov    esi,0x1
  40947c:	xor    eax,eax
  40947e:	call   405200 <__fprintf_chk@plt>
  409483:	mov    rax,QWORD PTR [rbp+0x8]
  409487:	mov    rcx,QWORD PTR [rax+0x8]
  40948b:	mov    r8,QWORD PTR [rax]
  40948e:	lea    rdx,[rip+0x2dda4]        # 437239 <_IO_stdin_used@@Base+0xa239>
  409495:	mov    rdi,QWORD PTR [rbx+0xd0]
  40949c:	xor    eax,eax
  40949e:	mov    esi,0x1
  4094a3:	call   405200 <__fprintf_chk@plt>
  4094a8:	mov    rax,QWORD PTR [rbp+0x8]
  4094ac:	mov    rbp,QWORD PTR [rbp+0x0]
  4094b0:	xor    ecx,ecx
  4094b2:	test   rbp,rbp
  4094b5:	mov    rdx,QWORD PTR [rax+0x10]
  4094b9:	je     4094f0 <__flatcc_fb_codegen_c@@Base+0x2040>
  4094bb:	mov    rax,QWORD PTR [rbp+0x8]
  4094bf:	cmp    QWORD PTR [rax+0x10],rdx
  4094c3:	je     409487 <__flatcc_fb_codegen_c@@Base+0x1fd7>
  4094c5:	test   ecx,ecx
  4094c7:	mov    rdi,QWORD PTR [rbx+0xd0]
  4094ce:	lea    rcx,[rip+0x3c339]        # 44580e <_IO_stdin_used@@Base+0x1880e>
  4094d5:	jne    409470 <__flatcc_fb_codegen_c@@Base+0x1fc0>
  4094d7:	lea    rdx,[rip+0x2cd15]        # 4361f3 <_IO_stdin_used@@Base+0x91f3>
  4094de:	mov    esi,0x1
  4094e3:	xor    eax,eax
  4094e5:	call   405200 <__fprintf_chk@plt>
  4094ea:	mov    rax,QWORD PTR [rbp+0x8]
  4094ee:	jmp    409487 <__flatcc_fb_codegen_c@@Base+0x1fd7>
  4094f0:	mov    rdi,QWORD PTR [rbx+0xd0]
  4094f7:	lea    rdx,[rip+0x2cf41]        # 43643f <_IO_stdin_used@@Base+0x943f>
  4094fe:	mov    esi,0x1
  409503:	xor    eax,eax
  409505:	call   405200 <__fprintf_chk@plt>
  40950a:	mov    rdi,QWORD PTR [rbx+0xd0]
  409511:	lea    rdx,[rip+0x260e8]        # 42f600 <_IO_stdin_used@@Base+0x2600>
  409518:	mov    rcx,r12
  40951b:	mov    esi,0x1
  409520:	xor    eax,eax
  409522:	call   405200 <__fprintf_chk@plt>
  409527:	mov    rdi,QWORD PTR [rbx+0xd0]
  40952e:	lea    rdx,[rip+0x25d03]        # 42f238 <_IO_stdin_used@@Base+0x2238>
  409535:	mov    r9,rbx
  409538:	mov    r8,r12
  40953b:	mov    rcx,r12
  40953e:	mov    esi,0x1
  409543:	xor    eax,eax
  409545:	call   405200 <__fprintf_chk@plt>
  40954a:	mov    rdi,QWORD PTR [rbx+0xd0]
  409551:	lea    rdx,[rip+0x260d8]        # 42f630 <_IO_stdin_used@@Base+0x2630>
  409558:	push   r12
  40955a:	push   rbx
  40955b:	mov    r9,r12
  40955e:	mov    r8,r12
  409561:	mov    rcx,r12
  409564:	mov    esi,0x1
  409569:	xor    eax,eax
  40956b:	call   405200 <__fprintf_chk@plt>
  409570:	mov    rdi,QWORD PTR [rbx+0xd0]
  409577:	lea    rdx,[rip+0x2ce59]        # 4363d7 <_IO_stdin_used@@Base+0x93d7>
  40957e:	mov    r8,r12
  409581:	mov    rcx,rbx
  409584:	mov    esi,0x1
  409589:	xor    eax,eax
  40958b:	call   405200 <__fprintf_chk@plt>
  409590:	mov    rdi,QWORD PTR [rbx+0xd0]
  409597:	lea    rdx,[rip+0x3c26f]        # 44580d <_IO_stdin_used@@Base+0x1880d>
  40959e:	xor    eax,eax
  4095a0:	mov    esi,0x1
  4095a5:	call   405200 <__fprintf_chk@plt>
  4095aa:	mov    rbp,QWORD PTR [r15+0x28]
  4095ae:	pop    rax
  4095af:	pop    rdx
  4095b0:	test   rbp,rbp
  4095b3:	je     409720 <__flatcc_fb_codegen_c@@Base+0x2270>
  4095b9:	lea    rax,[rsp+0x400]
  4095c1:	mov    DWORD PTR [rsp+0x8],0x0
  4095c9:	mov    QWORD PTR [rsp+0x28],r15
  4095ce:	mov    QWORD PTR [rsp+0x10],rax
  4095d3:	lea    rax,[rsp+0x220]
  4095db:	mov    QWORD PTR [rsp+0x18],rax
  4095e0:	lea    rax,[rsp+0x310]
  4095e8:	mov    QWORD PTR [rsp+0x20],rax
  4095ed:	mov    r13,QWORD PTR [rbp+0x68]
  4095f1:	test   r13,r13
  4095f4:	je     4096aa <__flatcc_fb_codegen_c@@Base+0x21fa>
  4095fa:	mov    ecx,0x1
  4095ff:	xor    edx,edx
  409601:	jmp    409653 <__flatcc_fb_codegen_c@@Base+0x21a3>
  409603:	nop    DWORD PTR [rax+rax*1+0x0]
  409608:	lea    rdx,[rip+0x2cbdd]        # 4361ec <_IO_stdin_used@@Base+0x91ec>
  40960f:	mov    esi,0x1
  409614:	xor    eax,eax
  409616:	call   405200 <__fprintf_chk@plt>
  40961b:	mov    rax,QWORD PTR [r13+0x8]
  40961f:	mov    rcx,QWORD PTR [rax+0x8]
  409623:	mov    r8,QWORD PTR [rax]
  409626:	lea    rdx,[rip+0x2dc0c]        # 437239 <_IO_stdin_used@@Base+0xa239>
  40962d:	mov    rdi,QWORD PTR [rbx+0xd0]
  409634:	xor    eax,eax
  409636:	mov    esi,0x1
  40963b:	call   405200 <__fprintf_chk@plt>
  409640:	mov    rax,QWORD PTR [r13+0x8]
  409644:	mov    r13,QWORD PTR [r13+0x0]
  409648:	xor    ecx,ecx
  40964a:	test   r13,r13
  40964d:	mov    rdx,QWORD PTR [rax+0x10]
  409651:	je     409690 <__flatcc_fb_codegen_c@@Base+0x21e0>
  409653:	mov    rax,QWORD PTR [r13+0x8]
  409657:	cmp    QWORD PTR [rax+0x10],rdx
  40965b:	je     40961f <__flatcc_fb_codegen_c@@Base+0x216f>
  40965d:	test   ecx,ecx
  40965f:	mov    rdi,QWORD PTR [rbx+0xd0]
  409666:	lea    rcx,[rip+0x3c1a1]        # 44580e <_IO_stdin_used@@Base+0x1880e>
  40966d:	jne    409608 <__flatcc_fb_codegen_c@@Base+0x2158>
  40966f:	lea    rdx,[rip+0x2cb7d]        # 4361f3 <_IO_stdin_used@@Base+0x91f3>
  409676:	mov    esi,0x1
  40967b:	xor    eax,eax
  40967d:	call   405200 <__fprintf_chk@plt>
  409682:	mov    rax,QWORD PTR [r13+0x8]
  409686:	jmp    40961f <__flatcc_fb_codegen_c@@Base+0x216f>
  409688:	nop    DWORD PTR [rax+rax*1+0x0]
  409690:	mov    rdi,QWORD PTR [rbx+0xd0]
  409697:	lea    rdx,[rip+0x2cda1]        # 43643f <_IO_stdin_used@@Base+0x943f>
  40969e:	mov    esi,0x1
  4096a3:	xor    eax,eax
  4096a5:	call   405200 <__fprintf_chk@plt>
  4096aa:	mov    rax,QWORD PTR [rbp+0x8]
  4096ae:	mov    r13,QWORD PTR [rax]
  4096b1:	mov    r15,QWORD PTR [rax+0x8]
  4096b5:	movzx  eax,WORD PTR [rbp+0x70]
  4096b9:	test   al,0x4
  4096bb:	jne    4096f0 <__flatcc_fb_codegen_c@@Base+0x2240>
  4096bd:	movzx  eax,ah
  4096c0:	and    eax,0x1
  4096c3:	mov    r14d,eax
  4096c6:	movzx  eax,WORD PTR [rbp+0x28]
  4096ca:	sub    eax,0x7
  4096cd:	cmp    ax,0x8
  4096d1:	ja     409aa0 <__flatcc_fb_codegen_c@@Base+0x25f0>
  4096d7:	lea    rsi,[rip+0x2ce9a]        # 436578 <_IO_stdin_used@@Base+0x9578>
  4096de:	movzx  eax,ax
  4096e1:	movsxd rax,DWORD PTR [rsi+rax*4]
  4096e5:	add    rax,rsi
  4096e8:	jmp    rax
  4096ea:	nop    WORD PTR [rax+rax*1+0x0]
  4096f0:	mov    rdi,QWORD PTR [rbx+0xd0]
  4096f7:	lea    rdx,[rip+0x25f9a]        # 42f698 <_IO_stdin_used@@Base+0x2698>
  4096fe:	mov    r9,r13
  409701:	mov    r8d,r15d
  409704:	mov    rcx,r12
  409707:	mov    esi,0x1
  40970c:	xor    eax,eax
  40970e:	call   405200 <__fprintf_chk@plt>
  409713:	mov    rbp,QWORD PTR [rbp+0x0]
  409717:	test   rbp,rbp
  40971a:	jne    4095ed <__flatcc_fb_codegen_c@@Base+0x213d>
  409720:	mov    rax,QWORD PTR [rsp+0x468]
  409728:	xor    rax,QWORD PTR fs:0x28
  409731:	jne    40ab02 <__flatcc_fb_codegen_c@@Base+0x3652>
  409737:	add    rsp,0x478
  40973e:	pop    rbx
  40973f:	pop    rbp
  409740:	pop    r12
  409742:	pop    r13
  409744:	pop    r14
  409746:	pop    r15
  409748:	ret    
  409749:	nop    DWORD PTR [rax+0x0]
  409750:	mov    rsi,QWORD PTR [rbp+0x18]
  409754:	mov    rdx,QWORD PTR [rsp]
  409758:	mov    rdi,QWORD PTR [rsi+0x18]
  40975c:	call   407300 <__flatcc_fb_scoped_symbol_name@@Base>
  409761:	mov    rax,QWORD PTR [rbp+0x18]
  409765:	movzx  eax,WORD PTR [rax+0x10]
  409769:	cmp    ax,0x4
  40976d:	ja     40ab07 <__flatcc_fb_codegen_c@@Base+0x3657>
  409773:	mov    edx,0x1
  409778:	shlx   rdx,rdx,rax
  40977d:	and    edx,0x1b
  409780:	je     40ab07 <__flatcc_fb_codegen_c@@Base+0x3657>
  409786:	cmp    ax,0x4
  40978a:	mov    rdi,QWORD PTR [rbx+0xd0]
  409791:	je     409d0e <__flatcc_fb_codegen_c@@Base+0x285e>
  409797:	mov    r8,QWORD PTR [rbp+0x88]
  40979e:	push   r14
  4097a0:	lea    rdx,[rip+0x263e9]        # 42fb90 <_IO_stdin_used@@Base+0x2b90>
  4097a7:	push   QWORD PTR [rsp+0x8]
  4097ab:	push   r13
  4097ad:	mov    r9,r12
  4097b0:	push   r15
  4097b2:	mov    rcx,rbx
  4097b5:	mov    esi,0x1
  4097ba:	xor    eax,eax
  4097bc:	call   405200 <__fprintf_chk@plt>
  4097c1:	movzx  eax,WORD PTR [rbp+0x70]
  4097c5:	add    rsp,0x20
  4097c9:	and    ax,0x80
  4097cd:	test   ax,ax
  4097d0:	je     409713 <__flatcc_fb_codegen_c@@Base+0x2263>
  4097d6:	mov    rdi,QWORD PTR [rbx+0xd0]
  4097dd:	lea    rdx,[rip+0x25cec]        # 42f4d0 <_IO_stdin_used@@Base+0x24d0>
  4097e4:	mov    esi,0x1
  4097e9:	xor    eax,eax
  4097eb:	call   405200 <__fprintf_chk@plt>
  4097f0:	mov    DWORD PTR [rsp+0x8],0x1
  4097f8:	jmp    409713 <__flatcc_fb_codegen_c@@Base+0x2263>
  4097fd:	nop    DWORD PTR [rax]
  409800:	mov    rsi,QWORD PTR [rbp+0x18]
  409804:	mov    rdx,QWORD PTR [rsp]
  409808:	mov    rdi,QWORD PTR [rsi+0x18]
  40980c:	call   407300 <__flatcc_fb_scoped_symbol_name@@Base>
  409811:	mov    rdx,QWORD PTR [rbp+0x18]
  409815:	movzx  eax,WORD PTR [rdx+0x10]
  409819:	cmp    ax,0x1
  40981d:	je     409dd4 <__flatcc_fb_codegen_c@@Base+0x2924>
  409823:	jb     409daa <__flatcc_fb_codegen_c@@Base+0x28fa>
  409829:	cmp    ax,0x3
  40982d:	je     409af0 <__flatcc_fb_codegen_c@@Base+0x2640>
  409833:	cmp    ax,0x4
  409837:	jne    409dfe <__flatcc_fb_codegen_c@@Base+0x294e>
  40983d:	sub    rsp,0x8
  409841:	mov    r9,QWORD PTR [rbp+0x88]
  409848:	mov    rdi,QWORD PTR [rbx+0xd0]
  40984f:	lea    rdx,[rip+0x26222]        # 42fa78 <_IO_stdin_used@@Base+0x2a78>
  409856:	push   r14
  409858:	push   QWORD PTR [rsp+0x10]
  40985c:	push   r13
  40985e:	push   r15
  409860:	mov    r8,rbx
  409863:	push   r12
  409865:	mov    rcx,rbx
  409868:	mov    esi,0x1
  40986d:	xor    eax,eax
  40986f:	call   405200 <__fprintf_chk@plt>
  409874:	movzx  eax,WORD PTR [rbp+0x70]
  409878:	add    rsp,0x30
  40987c:	and    ax,0x80
  409880:	jmp    4097cd <__flatcc_fb_codegen_c@@Base+0x231d>
  409885:	nop    DWORD PTR [rax]
  409888:	sub    rsp,0x8
  40988c:	mov    rdi,QWORD PTR [rbx+0xd0]
  409893:	mov    r8,QWORD PTR [rbp+0x88]
  40989a:	push   r14
  40989c:	lea    rdx,[rip+0x25fdd]        # 42f880 <_IO_stdin_used@@Base+0x2880>
  4098a3:	push   r13
  4098a5:	push   r15
  4098a7:	xor    eax,eax
  4098a9:	mov    r9,r12
  4098ac:	mov    rcx,rbx
  4098af:	mov    esi,0x1
  4098b4:	call   405200 <__fprintf_chk@plt>
  4098b9:	mov    rax,QWORD PTR [rbx+0xe0]
  4098c0:	add    rsp,0x20
  4098c4:	mov    eax,DWORD PTR [rax+0x24]
  4098c7:	test   eax,eax
  4098c9:	jne    409902 <__flatcc_fb_codegen_c@@Base+0x2452>
  4098cb:	test   BYTE PTR [rbp+0x70],0x80
  4098cf:	je     409713 <__flatcc_fb_codegen_c@@Base+0x2263>
  4098d5:	sub    rsp,0x8
  4098d9:	mov    rdi,QWORD PTR [rbx+0xd0]
  4098e0:	lea    rdx,[rip+0x25fc9]        # 42f8b0 <_IO_stdin_used@@Base+0x28b0>
  4098e7:	push   r13
  4098e9:	mov    r9d,r15d
  4098ec:	mov    r8,r12
  4098ef:	mov    rcx,rbx
  4098f2:	mov    esi,0x1
  4098f7:	xor    eax,eax
  4098f9:	call   405200 <__fprintf_chk@plt>
  4098fe:	pop    r11
  409900:	pop    r14
  409902:	test   BYTE PTR [rbp+0x70],0x80
  409906:	je     409713 <__flatcc_fb_codegen_c@@Base+0x2263>
  40990c:	mov    r10d,DWORD PTR [rsp+0x8]
  409911:	mov    rdi,QWORD PTR [rbx+0xd0]
  409918:	test   r10d,r10d
  40991b:	jne    409c38 <__flatcc_fb_codegen_c@@Base+0x2788>
  409921:	sub    rsp,0x8
  409925:	lea    rdx,[rip+0x25fb4]        # 42f8e0 <_IO_stdin_used@@Base+0x28e0>
  40992c:	xor    eax,eax
  40992e:	push   r13
  409930:	mov    r9d,r15d
  409933:	mov    r8,r12
  409936:	mov    rcx,rbx
  409939:	mov    esi,0x1
  40993e:	call   405200 <__fprintf_chk@plt>
  409943:	mov    rax,QWORD PTR [rbx+0xe0]
  40994a:	pop    r10
  40994c:	pop    r11
  40994e:	mov    r14d,DWORD PTR [rax+0xa8]
  409955:	test   r14d,r14d
  409958:	je     409985 <__flatcc_fb_codegen_c@@Base+0x24d5>
  40995a:	sub    rsp,0x8
  40995e:	mov    rdi,QWORD PTR [rbx+0xd0]
  409965:	lea    rdx,[rip+0x2631c]        # 42fc88 <_IO_stdin_used@@Base+0x2c88>
  40996c:	push   r13
  40996e:	mov    rcx,rbx
  409971:	mov    esi,0x1
  409976:	mov    r9d,r15d
  409979:	mov    r8,r12
  40997c:	xor    eax,eax
  40997e:	call   405200 <__fprintf_chk@plt>
  409983:	pop    rcx
  409984:	pop    rsi
  409985:	sub    rsp,0x8
  409989:	mov    rdi,QWORD PTR [rbx+0xd0]
  409990:	lea    rdx,[rip+0x25f79]        # 42f910 <_IO_stdin_used@@Base+0x2910>
  409997:	push   r13
  409999:	mov    r9d,r15d
  40999c:	mov    r8,r12
  40999f:	mov    rcx,rbx
  4099a2:	mov    esi,0x1
  4099a7:	xor    eax,eax
  4099a9:	call   405200 <__fprintf_chk@plt>
  4099ae:	mov    rdi,QWORD PTR [rbx+0xd0]
  4099b5:	lea    rdx,[rip+0x25f8c]        # 42f948 <_IO_stdin_used@@Base+0x2948>
  4099bc:	mov    rcx,rbx
  4099bf:	mov    esi,0x1
  4099c4:	xor    eax,eax
  4099c6:	mov    r9d,r15d
  4099c9:	mov    r8,r12
  4099cc:	mov    QWORD PTR [rsp],r13
  4099d0:	call   405200 <__fprintf_chk@plt>
  4099d5:	mov    rax,QWORD PTR [rbx+0xe0]
  4099dc:	pop    rdx
  4099dd:	pop    rcx
  4099de:	mov    esi,DWORD PTR [rax+0xa8]
  4099e4:	test   esi,esi
  4099e6:	je     4097f0 <__flatcc_fb_codegen_c@@Base+0x2340>
  4099ec:	sub    rsp,0x8
  4099f0:	mov    rdi,QWORD PTR [rbx+0xd0]
  4099f7:	lea    rdx,[rip+0x25a6a]        # 42f468 <_IO_stdin_used@@Base+0x2468>
  4099fe:	push   r13
  409a00:	mov    r9d,r15d
  409a03:	mov    r8,r12
  409a06:	mov    rcx,r12
  409a09:	mov    esi,0x1
  409a0e:	xor    eax,eax
  409a10:	call   405200 <__fprintf_chk@plt>
  409a15:	pop    rax
  409a16:	pop    rdx
  409a17:	mov    DWORD PTR [rsp+0x8],0x1
  409a1f:	jmp    409713 <__flatcc_fb_codegen_c@@Base+0x2263>
  409a24:	nop    DWORD PTR [rax+0x0]
  409a28:	mov    rdi,QWORD PTR [rbx+0xd0]
  409a2f:	mov    r9,r12
  409a32:	push   r14
  409a34:	mov    r8,QWORD PTR [rbp+0x88]
  409a3b:	push   rbx
  409a3c:	mov    rcx,rbx
  409a3f:	push   r13
  409a41:	lea    rdx,[rip+0x25f38]        # 42f980 <_IO_stdin_used@@Base+0x2980>
  409a48:	push   r15
  409a4a:	jmp    4097b5 <__flatcc_fb_codegen_c@@Base+0x2305>
  409a4f:	nop
  409a50:	mov    edx,DWORD PTR [rbp+0x18]
  409a53:	cmp    edx,0x5
  409a56:	je     409cc0 <__flatcc_fb_codegen_c@@Base+0x2810>
  409a5c:	cmp    edx,0xb
  409a5f:	ja     40a3cb <__flatcc_fb_codegen_c@@Base+0x2f1b>
  409a65:	lea    rcx,[rip+0x2cb30]        # 43659c <_IO_stdin_used@@Base+0x959c>
  409a6c:	mov    eax,edx
  409a6e:	movsxd rax,DWORD PTR [rcx+rax*4]
  409a72:	add    rax,rcx
  409a75:	jmp    rax
  409a77:	nop    WORD PTR [rax+rax*1+0x0]
  409a80:	cmp    DWORD PTR [rbp+0x18],0xb
  409a84:	ja     40a362 <__flatcc_fb_codegen_c@@Base+0x2eb2>
  409a8a:	mov    eax,DWORD PTR [rbp+0x18]
  409a8d:	lea    rdx,[rip+0x2cb38]        # 4365cc <_IO_stdin_used@@Base+0x95cc>
  409a94:	movsxd rax,DWORD PTR [rdx+rax*4]
  409a98:	add    rax,rdx
  409a9b:	jmp    rax
  409a9d:	nop    DWORD PTR [rax]
  409aa0:	mov    rax,QWORD PTR [rip+0x47541]        # 450fe8 <stderr@GLIBC_2.2.5>
  409aa7:	lea    rcx,[rip+0x24ed2]        # 42e980 <_IO_stdin_used@@Base+0x1980>
  409aae:	lea    rdx,[rip+0x2c72c]        # 4361e1 <_IO_stdin_used@@Base+0x91e1>
  409ab5:	lea    r9,[rip+0x2610c]        # 42fbc8 <_IO_stdin_used@@Base+0x2bc8>
  409abc:	mov    esi,0x1
  409ac1:	mov    r8d,0x63f
  409ac7:	mov    rdi,QWORD PTR [rax]
  409aca:	xor    eax,eax
  409acc:	call   405200 <__fprintf_chk@plt>
  409ad1:	lea    rcx,[rip+0x2cc40]        # 436718 <_IO_stdin_used@@Base+0x9718>
  409ad8:	lea    rsi,[rip+0x24ea1]        # 42e980 <_IO_stdin_used@@Base+0x1980>
  409adf:	lea    rdi,[rip+0x2d743]        # 437229 <_IO_stdin_used@@Base+0xa229>
  409ae6:	mov    edx,0x63f
  409aeb:	call   405100 <__assert_fail@plt>
  409af0:	mov    eax,DWORD PTR [rdx+0x48]
  409af3:	movzx  edx,WORD PTR [rbp+0x58]
  409af7:	cmp    dx,0x4
  409afb:	je     40a89d <__flatcc_fb_codegen_c@@Base+0x33ed>
  409b01:	jbe    40a860 <__flatcc_fb_codegen_c@@Base+0x33b0>
  409b07:	cmp    dx,0x5
  409b0b:	je     40a3b2 <__flatcc_fb_codegen_c@@Base+0x2f02>
  409b11:	cmp    dx,0x6
  409b15:	jne    409d5a <__flatcc_fb_codegen_c@@Base+0x28aa>
  409b1b:	cmp    eax,0x9
  409b1e:	ja     40a567 <__flatcc_fb_codegen_c@@Base+0x30b7>
  409b24:	lea    rdx,[rip+0x2cad1]        # 4365fc <_IO_stdin_used@@Base+0x95fc>
  409b2b:	movsxd rax,DWORD PTR [rdx+rax*4]
  409b2f:	add    rax,rdx
  409b32:	jmp    rax
  409b34:	lea    rax,[rip+0x2c869]        # 4363a4 <_IO_stdin_used@@Base+0x93a4>
  409b3b:	sub    rsp,0x8
  409b3f:	mov    rdi,QWORD PTR [rbx+0xd0]
  409b46:	mov    r8,QWORD PTR [rbp+0x88]
  409b4d:	push   r14
  409b4f:	lea    rdx,[rip+0x260ba]        # 42fc10 <_IO_stdin_used@@Base+0x2c10>
  409b56:	push   rax
  409b57:	push   rbx
  409b58:	push   r13
  409b5a:	mov    esi,0x1
  409b5f:	push   r15
  409b61:	xor    eax,eax
  409b63:	mov    r9,r12
  409b66:	mov    rcx,rbx
  409b69:	call   405200 <__fprintf_chk@plt>
  409b6e:	mov    rsi,QWORD PTR [rbp+0x90]
  409b75:	add    rsp,0x30
  409b79:	test   rsi,rsi
  409b7c:	je     409d37 <__flatcc_fb_codegen_c@@Base+0x2887>
  409b82:	mov    rdi,QWORD PTR [rsp+0x18]
  409b87:	xor    eax,eax
  409b89:	mov    ecx,0x1d
  409b8e:	rep stos QWORD PTR es:[rdi],rax
  409b91:	mov    rdi,QWORD PTR [rsp+0x20]
  409b96:	mov    ecx,0x1d
  409b9b:	rep stos QWORD PTR es:[rdi],rax
  409b9e:	movzx  eax,WORD PTR [rsi+0x10]
  409ba2:	test   ax,ax
  409ba5:	je     409e9e <__flatcc_fb_codegen_c@@Base+0x29ee>
  409bab:	cmp    ax,0x1
  409baf:	jne    409e4e <__flatcc_fb_codegen_c@@Base+0x299e>
  409bb5:	lea    r13,[rip+0x2c7bc]        # 436378 <_IO_stdin_used@@Base+0x9378>
  409bbc:	mov    rdi,QWORD PTR [rsi+0x18]
  409bc0:	mov    rdx,QWORD PTR [rsp+0x18]
  409bc5:	call   407300 <__flatcc_fb_scoped_symbol_name@@Base>
  409bca:	mov    rax,QWORD PTR [rsp+0x28]
  409bcf:	cmp    WORD PTR [rax+0x10],0x0
  409bd4:	jne    40abca <__flatcc_fb_codegen_c@@Base+0x371a>
  409bda:	mov    rax,QWORD PTR [rsp+0x28]
  409bdf:	mov    r14,QWORD PTR [rsp+0x20]
  409be4:	mov    rdi,QWORD PTR [rax+0x18]
  409be8:	mov    rsi,rax
  409beb:	mov    rdx,r14
  409bee:	call   407300 <__flatcc_fb_scoped_symbol_name@@Base>
  409bf3:	mov    rax,QWORD PTR [rbp+0x8]
  409bf7:	sub    rsp,0x8
  409bfb:	mov    rdi,QWORD PTR [rbx+0xd0]
  409c02:	lea    rdx,[rip+0x25c47]        # 42f850 <_IO_stdin_used@@Base+0x2850>
  409c09:	push   r13
  409c0b:	push   QWORD PTR [rsp+0x28]
  409c0f:	mov    r8,r14
  409c12:	mov    rcx,rbx
  409c15:	mov    esi,0x1
  409c1a:	mov    r9d,DWORD PTR [rax+0x8]
  409c1e:	push   QWORD PTR [rax]
  409c20:	xor    eax,eax
  409c22:	call   405200 <__fprintf_chk@plt>
  409c27:	movzx  eax,WORD PTR [rbp+0x70]
  409c2b:	add    rsp,0x20
  409c2f:	and    ax,0x80
  409c33:	jmp    4097cd <__flatcc_fb_codegen_c@@Base+0x231d>
  409c38:	lea    rdx,[rip+0x256e9]        # 42f328 <_IO_stdin_used@@Base+0x2328>
  409c3f:	mov    esi,0x1
  409c44:	xor    eax,eax
  409c46:	call   405200 <__fprintf_chk@plt>
  409c4b:	sub    rsp,0x8
  409c4f:	mov    rdi,QWORD PTR [rbx+0xd0]
  409c56:	lea    rdx,[rip+0x25c83]        # 42f8e0 <_IO_stdin_used@@Base+0x28e0>
  409c5d:	push   r13
  409c5f:	mov    r9d,r15d
  409c62:	mov    r8,r12
  409c65:	xor    eax,eax
  409c67:	mov    rcx,rbx
  409c6a:	mov    esi,0x1
  409c6f:	call   405200 <__fprintf_chk@plt>
  409c74:	mov    rax,QWORD PTR [rbx+0xe0]
  409c7b:	pop    rdi
  409c7c:	pop    r8
  409c7e:	mov    r9d,DWORD PTR [rax+0xa8]
  409c85:	test   r9d,r9d
  409c88:	je     4097f0 <__flatcc_fb_codegen_c@@Base+0x2340>
  409c8e:	sub    rsp,0x8
  409c92:	mov    rdi,QWORD PTR [rbx+0xd0]
  409c99:	lea    rdx,[rip+0x25fe8]        # 42fc88 <_IO_stdin_used@@Base+0x2c88>
  409ca0:	push   r13
  409ca2:	mov    r9d,r15d
  409ca5:	mov    r8,r12
  409ca8:	mov    rcx,rbx
  409cab:	mov    esi,0x1
  409cb0:	xor    eax,eax
  409cb2:	call   405200 <__fprintf_chk@plt>
  409cb7:	pop    rax
  409cb8:	pop    rdx
  409cb9:	jmp    4097f0 <__flatcc_fb_codegen_c@@Base+0x2340>
  409cbe:	xchg   ax,ax
  409cc0:	lea    r10,[rip+0x2c4d8]        # 43619f <_IO_stdin_used@@Base+0x919f>
  409cc7:	lea    r11,[rip+0x2c5e7]        # 4362b5 <_IO_stdin_used@@Base+0x92b5>
  409cce:	mov    r14,rbx
  409cd1:	movzx  eax,WORD PTR [rbp+0x58]
  409cd5:	cmp    ax,0x4
  409cd9:	je     409eff <__flatcc_fb_codegen_c@@Base+0x2a4f>
  409cdf:	jbe    409f18 <__flatcc_fb_codegen_c@@Base+0x2a68>
  409ce5:	cmp    ax,0x5
  409ce9:	je     409ed5 <__flatcc_fb_codegen_c@@Base+0x2a25>
  409cef:	cmp    ax,0x6
  409cf3:	jne    409d5a <__flatcc_fb_codegen_c@@Base+0x28aa>
  409cf5:	cmp    edx,0x9
  409cf8:	ja     40a567 <__flatcc_fb_codegen_c@@Base+0x30b7>
  409cfe:	lea    rcx,[rip+0x2c91f]        # 436624 <_IO_stdin_used@@Base+0x9624>
  409d05:	movsxd rax,DWORD PTR [rcx+rdx*4]
  409d09:	add    rax,rcx
  409d0c:	jmp    rax
  409d0e:	sub    rsp,0x8
  409d12:	mov    r9,QWORD PTR [rbp+0x88]
  409d19:	mov    r8,rbx
  409d1c:	push   r14
  409d1e:	mov    rcx,rbx
  409d21:	push   QWORD PTR [rsp+0x10]
  409d25:	lea    rdx,[rip+0x25e24]        # 42fb50 <_IO_stdin_used@@Base+0x2b50>
  409d2c:	push   r13
  409d2e:	push   r15
  409d30:	push   r12
  409d32:	jmp    409868 <__flatcc_fb_codegen_c@@Base+0x23b8>
  409d37:	test   BYTE PTR [rbp+0x70],0x80
  409d3b:	jne    4097d6 <__flatcc_fb_codegen_c@@Base+0x2326>
  409d41:	jmp    409713 <__flatcc_fb_codegen_c@@Base+0x2263>
  409d46:	nop    WORD PTR cs:[rax+rax*1+0x0]
  409d50:	cmp    ax,0x6
  409d54:	je     40a567 <__flatcc_fb_codegen_c@@Base+0x30b7>
  409d5a:	mov    rax,QWORD PTR [rip+0x47287]        # 450fe8 <stderr@GLIBC_2.2.5>
  409d61:	lea    rcx,[rip+0x24ea8]        # 42ec10 <_IO_stdin_used@@Base+0x1c10>
  409d68:	lea    rdx,[rip+0x2c472]        # 4361e1 <_IO_stdin_used@@Base+0x91e1>
  409d6f:	lea    r9,[rip+0x24e62]        # 42ebd8 <_IO_stdin_used@@Base+0x1bd8>
  409d76:	mov    esi,0x1
  409d7b:	mov    r8d,0x104
  409d81:	mov    rdi,QWORD PTR [rax]
  409d84:	xor    eax,eax
  409d86:	call   405200 <__fprintf_chk@plt>
  409d8b:	lea    rcx,[rip+0x2c9a6]        # 436738 <_IO_stdin_used@@Base+0x9738>
  409d92:	lea    rsi,[rip+0x24e77]        # 42ec10 <_IO_stdin_used@@Base+0x1c10>
  409d99:	lea    rdi,[rip+0x2d489]        # 437229 <_IO_stdin_used@@Base+0xa229>
  409da0:	mov    edx,0x104
  409da5:	call   405100 <__assert_fail@plt>
  409daa:	mov    rdi,QWORD PTR [rbx+0xd0]
  409db1:	mov    r9,r12
  409db4:	push   r14
  409db6:	mov    r8,QWORD PTR [rbp+0x88]
  409dbd:	push   QWORD PTR [rsp+0x8]
  409dc1:	mov    rcx,rbx
  409dc4:	push   r13
  409dc6:	lea    rdx,[rip+0x25c33]        # 42fa00 <_IO_stdin_used@@Base+0x2a00>
  409dcd:	push   r15
  409dcf:	jmp    4097b5 <__flatcc_fb_codegen_c@@Base+0x2305>
  409dd4:	mov    rdi,QWORD PTR [rbx+0xd0]
  409ddb:	mov    r9,r12
  409dde:	push   r14
  409de0:	mov    r8,QWORD PTR [rbp+0x88]
  409de7:	push   QWORD PTR [rsp+0x8]
  409deb:	mov    rcx,rbx
  409dee:	push   r13
  409df0:	lea    rdx,[rip+0x25bc9]        # 42f9c0 <_IO_stdin_used@@Base+0x29c0>
  409df7:	push   r15
  409df9:	jmp    4097b5 <__flatcc_fb_codegen_c@@Base+0x2305>
  409dfe:	mov    rax,QWORD PTR [rip+0x471e3]        # 450fe8 <stderr@GLIBC_2.2.5>
  409e05:	lea    rcx,[rip+0x24b74]        # 42e980 <_IO_stdin_used@@Base+0x1980>
  409e0c:	lea    rdx,[rip+0x2c3ce]        # 4361e1 <_IO_stdin_used@@Base+0x91e1>
  409e13:	lea    r9,[rip+0x25c96]        # 42fab0 <_IO_stdin_used@@Base+0x2ab0>
  409e1a:	mov    esi,0x1
  409e1f:	mov    r8d,0x620
  409e25:	mov    rdi,QWORD PTR [rax]
  409e28:	xor    eax,eax
  409e2a:	call   405200 <__fprintf_chk@plt>
  409e2f:	lea    rcx,[rip+0x2c8e2]        # 436718 <_IO_stdin_used@@Base+0x9718>
  409e36:	lea    rsi,[rip+0x24b43]        # 42e980 <_IO_stdin_used@@Base+0x1980>
  409e3d:	lea    rdi,[rip+0x2d3e5]        # 437229 <_IO_stdin_used@@Base+0xa229>
  409e44:	mov    edx,0x620
  409e49:	call   405100 <__assert_fail@plt>
  409e4e:	mov    rax,QWORD PTR [rip+0x47193]        # 450fe8 <stderr@GLIBC_2.2.5>
  409e55:	lea    rcx,[rip+0x24b24]        # 42e980 <_IO_stdin_used@@Base+0x1980>
  409e5c:	lea    rdx,[rip+0x2c37e]        # 4361e1 <_IO_stdin_used@@Base+0x91e1>
  409e63:	lea    r9,[rip+0x2598e]        # 42f7f8 <_IO_stdin_used@@Base+0x27f8>
  409e6a:	mov    esi,0x1
  409e6f:	mov    r8d,0x53b
  409e75:	mov    rdi,QWORD PTR [rax]
  409e78:	xor    eax,eax
  409e7a:	call   405200 <__fprintf_chk@plt>
  409e7f:	lea    rcx,[rip+0x2c86a]        # 4366f0 <_IO_stdin_used@@Base+0x96f0>
  409e86:	lea    rsi,[rip+0x24af3]        # 42e980 <_IO_stdin_used@@Base+0x1980>
  409e8d:	lea    rdi,[rip+0x2d395]        # 437229 <_IO_stdin_used@@Base+0xa229>
  409e94:	mov    edx,0x53b
  409e99:	call   405100 <__assert_fail@plt>
  409e9e:	lea    r13,[rip+0x2c4cc]        # 436371 <_IO_stdin_used@@Base+0x9371>
  409ea5:	jmp    409bbc <__flatcc_fb_codegen_c@@Base+0x270c>
  409eaa:	movzx  eax,WORD PTR [rbp+0x58]
  409eae:	cmp    ax,0x4
  409eb2:	je     409eee <__flatcc_fb_codegen_c@@Base+0x2a3e>
  409eb4:	jbe    40a9bc <__flatcc_fb_codegen_c@@Base+0x350c>
  409eba:	cmp    ax,0x5
  409ebe:	jne    409d50 <__flatcc_fb_codegen_c@@Base+0x28a0>
  409ec4:	lea    r10,[rip+0x2c2e1]        # 4361ac <_IO_stdin_used@@Base+0x91ac>
  409ecb:	lea    r14,[rip+0x3b93c]        # 44580e <_IO_stdin_used@@Base+0x1880e>
  409ed2:	mov    r11,r10
  409ed5:	cmp    edx,0x9
  409ed8:	ja     40a567 <__flatcc_fb_codegen_c@@Base+0x30b7>
  409ede:	lea    rcx,[rip+0x2c767]        # 43664c <_IO_stdin_used@@Base+0x964c>
  409ee5:	movsxd rax,DWORD PTR [rcx+rdx*4]
  409ee9:	add    rax,rcx
  409eec:	jmp    rax
  409eee:	lea    r10,[rip+0x2c2b7]        # 4361ac <_IO_stdin_used@@Base+0x91ac>
  409ef5:	lea    r14,[rip+0x3b912]        # 44580e <_IO_stdin_used@@Base+0x1880e>
  409efc:	mov    r11,r10
  409eff:	cmp    edx,0x9
  409f02:	ja     40a567 <__flatcc_fb_codegen_c@@Base+0x30b7>
  409f08:	lea    rcx,[rip+0x2c765]        # 436674 <_IO_stdin_used@@Base+0x9674>
  409f0f:	movsxd rax,DWORD PTR [rcx+rdx*4]
  409f13:	add    rax,rcx
  409f16:	jmp    rax
  409f18:	cmp    ax,0x3
  409f1c:	jne    409d5a <__flatcc_fb_codegen_c@@Base+0x28aa>
  409f22:	mov    rdi,QWORD PTR [rsp+0x10]
  409f27:	vmovsd xmm0,QWORD PTR [rbp+0x48]
  409f2c:	lea    rcx,[rip+0x2c315]        # 436248 <_IO_stdin_used@@Base+0x9248>
  409f33:	mov    edx,0x64
  409f38:	mov    esi,0x1
  409f3d:	mov    eax,0x1
  409f42:	mov    QWORD PTR [rsp+0x38],r11
  409f47:	mov    QWORD PTR [rsp+0x30],r10
  409f4c:	call   405220 <__sprintf_chk@plt>
  409f51:	mov    r10,QWORD PTR [rsp+0x30]
  409f56:	mov    r11,QWORD PTR [rsp+0x38]
  409f5b:	sub    rsp,0x8
  409f5f:	mov    rdi,QWORD PTR [rbx+0xd0]
  409f66:	mov    r8,QWORD PTR [rbp+0x88]
  409f6d:	push   QWORD PTR [rsp+0x18]
  409f71:	push   r10
  409f73:	lea    rdx,[rip+0x2574e]        # 42f6c8 <_IO_stdin_used@@Base+0x26c8>
  409f7a:	xor    eax,eax
  409f7c:	mov    r9,r12
  409f7f:	mov    rcx,rbx
  409f82:	mov    QWORD PTR [rsp+0x48],r10
  409f87:	push   r14
  409f89:	mov    esi,0x1
  409f8e:	push   r11
  409f90:	push   rbx
  409f91:	push   r13
  409f93:	push   r15
  409f95:	call   405200 <__fprintf_chk@plt>
  409f9a:	mov    rax,QWORD PTR [rbx+0xe0]
  409fa1:	add    rsp,0x40
  409fa5:	mov    r10,QWORD PTR [rsp+0x30]
  409faa:	mov    eax,DWORD PTR [rax+0x24]
  409fad:	test   eax,eax
  409faf:	jne    409ff6 <__flatcc_fb_codegen_c@@Base+0x2b46>
  409fb1:	test   BYTE PTR [rbp+0x70],0x80
  409fb5:	je     409713 <__flatcc_fb_codegen_c@@Base+0x2263>
  409fbb:	sub    rsp,0x8
  409fbf:	mov    rdi,QWORD PTR [rbx+0xd0]
  409fc6:	lea    rdx,[rip+0x2573b]        # 42f708 <_IO_stdin_used@@Base+0x2708>
  409fcd:	push   r10
  409fcf:	mov    r9d,r15d
  409fd2:	mov    r8,r12
  409fd5:	mov    rcx,rbx
  409fd8:	mov    esi,0x1
  409fdd:	xor    eax,eax
  409fdf:	mov    QWORD PTR [rsp+0x40],r10
  409fe4:	push   r14
  409fe6:	push   r13
  409fe8:	call   405200 <__fprintf_chk@plt>
  409fed:	add    rsp,0x20
  409ff1:	mov    r10,QWORD PTR [rsp+0x30]
  409ff6:	test   BYTE PTR [rbp+0x70],0x80
  409ffa:	je     409713 <__flatcc_fb_codegen_c@@Base+0x2263>
  40a000:	mov    eax,DWORD PTR [rsp+0x8]
  40a004:	mov    rdi,QWORD PTR [rbx+0xd0]
  40a00b:	mov    QWORD PTR [rsp+0x8],r10
  40a010:	test   eax,eax
  40a012:	jne    40a7a3 <__flatcc_fb_codegen_c@@Base+0x32f3>
  40a018:	lea    rdx,[rip+0x25351]        # 42f370 <_IO_stdin_used@@Base+0x2370>
  40a01f:	mov    esi,0x1
  40a024:	xor    eax,eax
  40a026:	call   405200 <__fprintf_chk@plt>
  40a02b:	sub    rsp,0x8
  40a02f:	mov    rdi,QWORD PTR [rbx+0xd0]
  40a036:	lea    rdx,[rip+0x25703]        # 42f740 <_IO_stdin_used@@Base+0x2740>
  40a03d:	mov    r10,QWORD PTR [rsp+0x10]
  40a042:	xor    eax,eax
  40a044:	mov    r9d,r15d
  40a047:	mov    r8,r12
  40a04a:	mov    rcx,rbx
  40a04d:	mov    esi,0x1
  40a052:	push   r10
  40a054:	mov    QWORD PTR [rsp+0x18],r10
  40a059:	push   r14
  40a05b:	push   r13
  40a05d:	call   405200 <__fprintf_chk@plt>
  40a062:	mov    rax,QWORD PTR [rbx+0xe0]
  40a069:	add    rsp,0x20
  40a06d:	mov    r10,QWORD PTR [rsp+0x8]
  40a072:	mov    eax,DWORD PTR [rax+0xa8]
  40a078:	test   eax,eax
  40a07a:	je     40a0b4 <__flatcc_fb_codegen_c@@Base+0x2c04>
  40a07c:	mov    rdi,QWORD PTR [rbx+0xd0]
  40a083:	push   rbx
  40a084:	lea    rdx,[rip+0x25bbd]        # 42fc48 <_IO_stdin_used@@Base+0x2c48>
  40a08b:	push   r10
  40a08d:	mov    r9d,r15d
  40a090:	mov    r8,r12
  40a093:	mov    rcx,rbx
  40a096:	mov    esi,0x1
  40a09b:	xor    eax,eax
  40a09d:	mov    QWORD PTR [rsp+0x18],r10
  40a0a2:	push   r14
  40a0a4:	push   r13
  40a0a6:	call   405200 <__fprintf_chk@plt>
  40a0ab:	add    rsp,0x20
  40a0af:	mov    r10,QWORD PTR [rsp+0x8]
  40a0b4:	sub    rsp,0x8
  40a0b8:	mov    rdi,QWORD PTR [rbx+0xd0]
  40a0bf:	lea    rdx,[rip+0x256b2]        # 42f778 <_IO_stdin_used@@Base+0x2778>
  40a0c6:	push   r10
  40a0c8:	mov    r9d,r15d
  40a0cb:	mov    r8,r12
  40a0ce:	mov    rcx,rbx
  40a0d1:	mov    esi,0x1
  40a0d6:	xor    eax,eax
  40a0d8:	mov    QWORD PTR [rsp+0x18],r10
  40a0dd:	push   r14
  40a0df:	push   r13
  40a0e1:	call   405200 <__fprintf_chk@plt>
  40a0e6:	add    rsp,0x18
  40a0ea:	mov    r10,QWORD PTR [rsp+0x10]
  40a0ef:	mov    rdi,QWORD PTR [rbx+0xd0]
  40a0f6:	lea    rdx,[rip+0x256bb]        # 42f7b8 <_IO_stdin_used@@Base+0x27b8>
  40a0fd:	xor    eax,eax
  40a0ff:	mov    r9d,r15d
  40a102:	mov    r8,r12
  40a105:	mov    rcx,rbx
  40a108:	mov    esi,0x1
  40a10d:	push   r10
  40a10f:	push   r14
  40a111:	push   r13
  40a113:	call   405200 <__fprintf_chk@plt>
  40a118:	mov    rax,QWORD PTR [rbx+0xe0]
  40a11f:	add    rsp,0x20
  40a123:	mov    eax,DWORD PTR [rax+0xa8]
  40a129:	test   eax,eax
  40a12b:	je     4097f0 <__flatcc_fb_codegen_c@@Base+0x2340>
  40a131:	jmp    4099ec <__flatcc_fb_codegen_c@@Base+0x253c>
  40a136:	lea    rax,[rip+0x2c280]        # 4363bd <_IO_stdin_used@@Base+0x93bd>
  40a13d:	jmp    409b3b <__flatcc_fb_codegen_c@@Base+0x268b>
  40a142:	lea    rax,[rip+0x2c267]        # 4363b0 <_IO_stdin_used@@Base+0x93b0>
  40a149:	jmp    409b3b <__flatcc_fb_codegen_c@@Base+0x268b>
  40a14e:	lea    rax,[rip+0x2c238]        # 43638d <_IO_stdin_used@@Base+0x938d>
  40a155:	jmp    409b3b <__flatcc_fb_codegen_c@@Base+0x268b>
  40a15a:	lea    rax,[rip+0x2c25d]        # 4363be <_IO_stdin_used@@Base+0x93be>
  40a161:	jmp    409b3b <__flatcc_fb_codegen_c@@Base+0x268b>
  40a166:	lea    rax,[rip+0x2c244]        # 4363b1 <_IO_stdin_used@@Base+0x93b1>
  40a16d:	jmp    409b3b <__flatcc_fb_codegen_c@@Base+0x268b>
  40a172:	lea    rax,[rip+0x2c220]        # 436399 <_IO_stdin_used@@Base+0x9399>
  40a179:	jmp    409b3b <__flatcc_fb_codegen_c@@Base+0x268b>
  40a17e:	lea    rax,[rip+0x2c1fb]        # 436380 <_IO_stdin_used@@Base+0x9380>
  40a185:	jmp    409b3b <__flatcc_fb_codegen_c@@Base+0x268b>
  40a18a:	lea    rax,[rip+0x2c23a]        # 4363cb <_IO_stdin_used@@Base+0x93cb>
  40a191:	jmp    409b3b <__flatcc_fb_codegen_c@@Base+0x268b>
  40a196:	lea    rax,[rip+0x2c22d]        # 4363ca <_IO_stdin_used@@Base+0x93ca>
  40a19d:	jmp    409b3b <__flatcc_fb_codegen_c@@Base+0x268b>
  40a1a2:	movzx  eax,WORD PTR [rbp+0x58]
  40a1a6:	cmp    ax,0x4
  40a1aa:	je     40a91a <__flatcc_fb_codegen_c@@Base+0x346a>
  40a1b0:	jbe    40a8cd <__flatcc_fb_codegen_c@@Base+0x341d>
  40a1b6:	cmp    ax,0x5
  40a1ba:	jne    409d50 <__flatcc_fb_codegen_c@@Base+0x28a0>
  40a1c0:	lea    r10,[rip+0x2bfdf]        # 4361a6 <_IO_stdin_used@@Base+0x91a6>
  40a1c7:	lea    r14,[rip+0x3b640]        # 44580e <_IO_stdin_used@@Base+0x1880e>
  40a1ce:	mov    r11,r10
  40a1d1:	jmp    409ed5 <__flatcc_fb_codegen_c@@Base+0x2a25>
  40a1d6:	movzx  eax,WORD PTR [rbp+0x58]
  40a1da:	cmp    ax,0x4
  40a1de:	je     40a930 <__flatcc_fb_codegen_c@@Base+0x3480>
  40a1e4:	jbe    40a964 <__flatcc_fb_codegen_c@@Base+0x34b4>
  40a1ea:	cmp    ax,0x5
  40a1ee:	je     40a94a <__flatcc_fb_codegen_c@@Base+0x349a>
  40a1f4:	cmp    ax,0x6
  40a1f8:	jne    409d5a <__flatcc_fb_codegen_c@@Base+0x28aa>
  40a1fe:	lea    r10,[rip+0x2bf93]        # 436198 <_IO_stdin_used@@Base+0x9198>
  40a205:	lea    r11,[rip+0x2c0a4]        # 4362b0 <_IO_stdin_used@@Base+0x92b0>
  40a20c:	lea    r14,[rip+0x3b5fb]        # 44580e <_IO_stdin_used@@Base+0x1880e>
  40a213:	lea    r8,[rip+0x2bfc0]        # 4361da <_IO_stdin_used@@Base+0x91da>
  40a21a:	movzx  r9d,BYTE PTR [rbp+0x48]
  40a21f:	mov    rdi,QWORD PTR [rsp+0x10]
  40a224:	lea    rcx,[rip+0x2c012]        # 43623d <_IO_stdin_used@@Base+0x923d>
  40a22b:	mov    edx,0x64
  40a230:	mov    esi,0x1
  40a235:	xor    eax,eax
  40a237:	mov    QWORD PTR [rsp+0x38],r11
  40a23c:	mov    QWORD PTR [rsp+0x30],r10
  40a241:	call   405220 <__sprintf_chk@plt>
  40a246:	mov    r10,QWORD PTR [rsp+0x30]
  40a24b:	mov    r11,QWORD PTR [rsp+0x38]
  40a250:	jmp    409f5b <__flatcc_fb_codegen_c@@Base+0x2aab>
  40a255:	lea    r10,[rip+0x2bf2a]        # 436186 <_IO_stdin_used@@Base+0x9186>
  40a25c:	lea    r14,[rip+0x3b5ab]        # 44580e <_IO_stdin_used@@Base+0x1880e>
  40a263:	lea    r11,[rip+0x2c038]        # 4362a2 <_IO_stdin_used@@Base+0x92a2>
  40a26a:	jmp    409cd1 <__flatcc_fb_codegen_c@@Base+0x2821>
  40a26f:	movzx  eax,WORD PTR [rbp+0x58]
  40a273:	cmp    ax,0x4
  40a277:	je     40a9a2 <__flatcc_fb_codegen_c@@Base+0x34f2>
  40a27d:	jbe    40a988 <__flatcc_fb_codegen_c@@Base+0x34d8>
  40a283:	cmp    ax,0x5
  40a287:	je     40a9d2 <__flatcc_fb_codegen_c@@Base+0x3522>
  40a28d:	cmp    ax,0x6
  40a291:	jne    409d5a <__flatcc_fb_codegen_c@@Base+0x28aa>
  40a297:	lea    r10,[rip+0x2bef1]        # 43618f <_IO_stdin_used@@Base+0x918f>
  40a29e:	lea    r11,[rip+0x2c004]        # 4362a9 <_IO_stdin_used@@Base+0x92a9>
  40a2a5:	lea    r14,[rip+0x3b562]        # 44580e <_IO_stdin_used@@Base+0x1880e>
  40a2ac:	lea    r8,[rip+0x2bf1e]        # 4361d1 <_IO_stdin_used@@Base+0x91d1>
  40a2b3:	jmp    40a21a <__flatcc_fb_codegen_c@@Base+0x2d6a>
  40a2b8:	lea    r10,[rip+0x2bebd]        # 43617c <_IO_stdin_used@@Base+0x917c>
  40a2bf:	lea    r14,[rip+0x3b548]        # 44580e <_IO_stdin_used@@Base+0x1880e>
  40a2c6:	lea    r11,[rip+0x2bfcd]        # 43629a <_IO_stdin_used@@Base+0x929a>
  40a2cd:	jmp    409cd1 <__flatcc_fb_codegen_c@@Base+0x2821>
  40a2d2:	lea    r10,[rip+0x2bea4]        # 43617d <_IO_stdin_used@@Base+0x917d>
  40a2d9:	lea    r14,[rip+0x3b52e]        # 44580e <_IO_stdin_used@@Base+0x1880e>
  40a2e0:	lea    r11,[rip+0x2bfb4]        # 43629b <_IO_stdin_used@@Base+0x929b>
  40a2e7:	jmp    409cd1 <__flatcc_fb_codegen_c@@Base+0x2821>
  40a2ec:	lea    r10,[rip+0x2bea4]        # 436197 <_IO_stdin_used@@Base+0x9197>
  40a2f3:	lea    r14,[rip+0x3b514]        # 44580e <_IO_stdin_used@@Base+0x1880e>
  40a2fa:	lea    r11,[rip+0x2bfae]        # 4362af <_IO_stdin_used@@Base+0x92af>
  40a301:	jmp    409cd1 <__flatcc_fb_codegen_c@@Base+0x2821>
  40a306:	lea    r10,[rip+0x2be81]        # 43618e <_IO_stdin_used@@Base+0x918e>
  40a30d:	lea    r14,[rip+0x3b4fa]        # 44580e <_IO_stdin_used@@Base+0x1880e>
  40a314:	lea    r11,[rip+0x2bf8d]        # 4362a8 <_IO_stdin_used@@Base+0x92a8>
  40a31b:	jmp    409cd1 <__flatcc_fb_codegen_c@@Base+0x2821>
  40a320:	movzx  eax,WORD PTR [rbp+0x58]
  40a324:	cmp    ax,0x4
  40a328:	je     40aacf <__flatcc_fb_codegen_c@@Base+0x361f>
  40a32e:	jbe    40aab2 <__flatcc_fb_codegen_c@@Base+0x3602>
  40a334:	cmp    ax,0x5
  40a338:	je     40aa98 <__flatcc_fb_codegen_c@@Base+0x35e8>
  40a33e:	cmp    ax,0x6
  40a342:	jne    409d5a <__flatcc_fb_codegen_c@@Base+0x28aa>
  40a348:	lea    r10,[rip+0x2be36]        # 436185 <_IO_stdin_used@@Base+0x9185>
  40a34f:	lea    r11,[rip+0x2bf4b]        # 4362a1 <_IO_stdin_used@@Base+0x92a1>
  40a356:	lea    r14,[rip+0x3b4b1]        # 44580e <_IO_stdin_used@@Base+0x1880e>
  40a35d:	jmp    409cf5 <__flatcc_fb_codegen_c@@Base+0x2845>
  40a362:	mov    rax,QWORD PTR [rip+0x46c7f]        # 450fe8 <stderr@GLIBC_2.2.5>
  40a369:	lea    rcx,[rip+0x248a0]        # 42ec10 <_IO_stdin_used@@Base+0x1c10>
  40a370:	lea    rdx,[rip+0x2be6a]        # 4361e1 <_IO_stdin_used@@Base+0x91e1>
  40a377:	lea    r9,[rip+0x2485a]        # 42ebd8 <_IO_stdin_used@@Base+0x1bd8>
  40a37e:	mov    esi,0x1
  40a383:	mov    r8d,0xba
  40a389:	mov    rdi,QWORD PTR [rax]
  40a38c:	xor    eax,eax
  40a38e:	call   405200 <__fprintf_chk@plt>
  40a393:	lea    rcx,[rip+0x2c366]        # 436700 <_IO_stdin_used@@Base+0x9700>
  40a39a:	lea    rsi,[rip+0x2486f]        # 42ec10 <_IO_stdin_used@@Base+0x1c10>
  40a3a1:	lea    rdi,[rip+0x2ce81]        # 437229 <_IO_stdin_used@@Base+0xa229>
  40a3a8:	mov    edx,0xba
  40a3ad:	call   405100 <__assert_fail@plt>
  40a3b2:	cmp    eax,0x9
  40a3b5:	ja     40a567 <__flatcc_fb_codegen_c@@Base+0x30b7>
  40a3bb:	lea    rdx,[rip+0x2c2da]        # 43669c <_IO_stdin_used@@Base+0x969c>
  40a3c2:	movsxd rax,DWORD PTR [rdx+rax*4]
  40a3c6:	add    rax,rdx
  40a3c9:	jmp    rax
  40a3cb:	mov    rax,QWORD PTR [rip+0x46c16]        # 450fe8 <stderr@GLIBC_2.2.5>
  40a3d2:	lea    rcx,[rip+0x24837]        # 42ec10 <_IO_stdin_used@@Base+0x1c10>
  40a3d9:	lea    rdx,[rip+0x2be01]        # 4361e1 <_IO_stdin_used@@Base+0x91e1>
  40a3e0:	lea    r9,[rip+0x247f1]        # 42ebd8 <_IO_stdin_used@@Base+0x1bd8>
  40a3e7:	mov    esi,0x1
  40a3ec:	mov    r8d,0x8d
  40a3f2:	mov    rdi,QWORD PTR [rax]
  40a3f5:	xor    eax,eax
  40a3f7:	call   405200 <__fprintf_chk@plt>
  40a3fc:	lea    rcx,[rip+0x2c37d]        # 436780 <_IO_stdin_used@@Base+0x9780>
  40a403:	lea    rsi,[rip+0x24806]        # 42ec10 <_IO_stdin_used@@Base+0x1c10>
  40a40a:	lea    rdi,[rip+0x2ce18]        # 437229 <_IO_stdin_used@@Base+0xa229>
  40a411:	mov    edx,0x8d
  40a416:	call   405100 <__assert_fail@plt>
  40a41b:	lea    r8,[rip+0x2bdb7]        # 4361d9 <_IO_stdin_used@@Base+0x91d9>
  40a422:	mov    r9,QWORD PTR [rbp+0x48]
  40a426:	lea    rcx,[rip+0x2be07]        # 436234 <_IO_stdin_used@@Base+0x9234>
  40a42d:	mov    QWORD PTR [rsp+0x38],r11
  40a432:	mov    QWORD PTR [rsp+0x30],r10
  40a437:	mov    rdi,QWORD PTR [rsp+0x10]
  40a43c:	mov    edx,0x64
  40a441:	mov    esi,0x1
  40a446:	xor    eax,eax
  40a448:	call   405220 <__sprintf_chk@plt>
  40a44d:	mov    r10,QWORD PTR [rsp+0x30]
  40a452:	mov    r11,QWORD PTR [rsp+0x38]
  40a457:	jmp    409f5b <__flatcc_fb_codegen_c@@Base+0x2aab>
  40a45c:	lea    r8,[rip+0x2bd76]        # 4361d9 <_IO_stdin_used@@Base+0x91d9>
  40a463:	mov    QWORD PTR [rsp+0x38],r11
  40a468:	mov    QWORD PTR [rsp+0x30],r10
  40a46d:	lea    rcx,[rip+0x2bdb7]        # 43622b <_IO_stdin_used@@Base+0x922b>
  40a474:	mov    r9,QWORD PTR [rbp+0x48]
  40a478:	jmp    40a437 <__flatcc_fb_codegen_c@@Base+0x2f87>
  40a47a:	lea    r8,[rip+0x2bd58]        # 4361d9 <_IO_stdin_used@@Base+0x91d9>
  40a481:	jmp    40a21a <__flatcc_fb_codegen_c@@Base+0x2d6a>
  40a486:	lea    r8,[rip+0x2bd4d]        # 4361da <_IO_stdin_used@@Base+0x91da>
  40a48d:	jmp    40a463 <__flatcc_fb_codegen_c@@Base+0x2fb3>
  40a48f:	lea    r8,[rip+0x2bd32]        # 4361c8 <_IO_stdin_used@@Base+0x91c8>
  40a496:	jmp    40a21a <__flatcc_fb_codegen_c@@Base+0x2d6a>
  40a49b:	lea    r8,[rip+0x2bd1d]        # 4361bf <_IO_stdin_used@@Base+0x91bf>
  40a4a2:	jmp    40a21a <__flatcc_fb_codegen_c@@Base+0x2d6a>
  40a4a7:	lea    r8,[rip+0x2bd2c]        # 4361da <_IO_stdin_used@@Base+0x91da>
  40a4ae:	jmp    40a422 <__flatcc_fb_codegen_c@@Base+0x2f72>
  40a4b3:	lea    r8,[rip+0x2bd0e]        # 4361c8 <_IO_stdin_used@@Base+0x91c8>
  40a4ba:	jmp    40a422 <__flatcc_fb_codegen_c@@Base+0x2f72>
  40a4bf:	lea    r8,[rip+0x2bcf9]        # 4361bf <_IO_stdin_used@@Base+0x91bf>
  40a4c6:	jmp    40a422 <__flatcc_fb_codegen_c@@Base+0x2f72>
  40a4cb:	lea    r8,[rip+0x2bcff]        # 4361d1 <_IO_stdin_used@@Base+0x91d1>
  40a4d2:	jmp    40a422 <__flatcc_fb_codegen_c@@Base+0x2f72>
  40a4d7:	lea    r8,[rip+0x2bcf2]        # 4361d0 <_IO_stdin_used@@Base+0x91d0>
  40a4de:	jmp    40a21a <__flatcc_fb_codegen_c@@Base+0x2d6a>
  40a4e3:	lea    r8,[rip+0x2bcdd]        # 4361c7 <_IO_stdin_used@@Base+0x91c7>
  40a4ea:	jmp    40a21a <__flatcc_fb_codegen_c@@Base+0x2d6a>
  40a4ef:	lea    r8,[rip+0x2bcc8]        # 4361be <_IO_stdin_used@@Base+0x91be>
  40a4f6:	jmp    40a21a <__flatcc_fb_codegen_c@@Base+0x2d6a>
  40a4fb:	lea    r8,[rip+0x2bcc6]        # 4361c8 <_IO_stdin_used@@Base+0x91c8>
  40a502:	jmp    40a463 <__flatcc_fb_codegen_c@@Base+0x2fb3>
  40a507:	lea    r8,[rip+0x2bcb1]        # 4361bf <_IO_stdin_used@@Base+0x91bf>
  40a50e:	jmp    40a463 <__flatcc_fb_codegen_c@@Base+0x2fb3>
  40a513:	lea    r8,[rip+0x2bcb6]        # 4361d0 <_IO_stdin_used@@Base+0x91d0>
  40a51a:	jmp    40a422 <__flatcc_fb_codegen_c@@Base+0x2f72>
  40a51f:	lea    r8,[rip+0x2bca1]        # 4361c7 <_IO_stdin_used@@Base+0x91c7>
  40a526:	jmp    40a422 <__flatcc_fb_codegen_c@@Base+0x2f72>
  40a52b:	lea    r8,[rip+0x2bc8c]        # 4361be <_IO_stdin_used@@Base+0x91be>
  40a532:	jmp    40a422 <__flatcc_fb_codegen_c@@Base+0x2f72>
  40a537:	lea    r8,[rip+0x2bc93]        # 4361d1 <_IO_stdin_used@@Base+0x91d1>
  40a53e:	jmp    40a463 <__flatcc_fb_codegen_c@@Base+0x2fb3>
  40a543:	lea    r8,[rip+0x2bc86]        # 4361d0 <_IO_stdin_used@@Base+0x91d0>
  40a54a:	jmp    40a463 <__flatcc_fb_codegen_c@@Base+0x2fb3>
  40a54f:	lea    r8,[rip+0x2bc68]        # 4361be <_IO_stdin_used@@Base+0x91be>
  40a556:	jmp    40a463 <__flatcc_fb_codegen_c@@Base+0x2fb3>
  40a55b:	lea    r8,[rip+0x2bc65]        # 4361c7 <_IO_stdin_used@@Base+0x91c7>
  40a562:	jmp    40a463 <__flatcc_fb_codegen_c@@Base+0x2fb3>
  40a567:	mov    rax,QWORD PTR [rip+0x46a7a]        # 450fe8 <stderr@GLIBC_2.2.5>
  40a56e:	lea    rcx,[rip+0x2469b]        # 42ec10 <_IO_stdin_used@@Base+0x1c10>
  40a575:	lea    rdx,[rip+0x2bc65]        # 4361e1 <_IO_stdin_used@@Base+0x91e1>
  40a57c:	lea    r9,[rip+0x24655]        # 42ebd8 <_IO_stdin_used@@Base+0x1bd8>
  40a583:	mov    esi,0x1
  40a588:	mov    r8d,0xe2
  40a58e:	mov    rdi,QWORD PTR [rax]
  40a591:	xor    eax,eax
  40a593:	call   405200 <__fprintf_chk@plt>
  40a598:	lea    rcx,[rip+0x2c189]        # 436728 <_IO_stdin_used@@Base+0x9728>
  40a59f:	lea    rsi,[rip+0x2466a]        # 42ec10 <_IO_stdin_used@@Base+0x1c10>
  40a5a6:	lea    rdi,[rip+0x2cc7c]        # 437229 <_IO_stdin_used@@Base+0xa229>
  40a5ad:	mov    edx,0xe2
  40a5b2:	call   405100 <__assert_fail@plt>
  40a5b7:	lea    r8,[rip+0x2bc1b]        # 4361d9 <_IO_stdin_used@@Base+0x91d9>
  40a5be:	movzx  r9d,BYTE PTR [rbp+0x48]
  40a5c3:	mov    rdi,QWORD PTR [rsp+0x10]
  40a5c8:	lea    rcx,[rip+0x2bc6e]        # 43623d <_IO_stdin_used@@Base+0x923d>
  40a5cf:	mov    edx,0x64
  40a5d4:	mov    esi,0x1
  40a5d9:	xor    eax,eax
  40a5db:	call   405220 <__sprintf_chk@plt>
  40a5e0:	sub    rsp,0x8
  40a5e4:	mov    rdi,QWORD PTR [rbx+0xd0]
  40a5eb:	mov    r8,QWORD PTR [rbp+0x88]
  40a5f2:	push   QWORD PTR [rsp+0x18]
  40a5f6:	mov    rax,QWORD PTR [rsp+0x10]
  40a5fb:	lea    rdx,[rip+0x25436]        # 42fa38 <_IO_stdin_used@@Base+0x2a38>
  40a602:	mov    r9,r12
  40a605:	mov    rcx,rbx
  40a608:	mov    esi,0x1
  40a60d:	push   rax
  40a60e:	push   rax
  40a60f:	xor    eax,eax
  40a611:	push   r13
  40a613:	push   r15
  40a615:	call   405200 <__fprintf_chk@plt>
  40a61a:	mov    rax,QWORD PTR [rbx+0xe0]
  40a621:	add    rsp,0x30
  40a625:	mov    r14d,DWORD PTR [rax+0x24]
  40a629:	test   r14d,r14d
  40a62c:	jne    40a664 <__flatcc_fb_codegen_c@@Base+0x31b4>
  40a62e:	test   BYTE PTR [rbp+0x70],0x80
  40a632:	je     409713 <__flatcc_fb_codegen_c@@Base+0x2263>
  40a638:	mov    rdi,QWORD PTR [rbx+0xd0]
  40a63f:	lea    rdx,[rip+0x24caa]        # 42f2f0 <_IO_stdin_used@@Base+0x22f0>
  40a646:	push   QWORD PTR [rsp]
  40a649:	push   r13
  40a64b:	mov    r9d,r15d
  40a64e:	mov    r8,r12
  40a651:	mov    rcx,rbx
  40a654:	mov    esi,0x1
  40a659:	xor    eax,eax
  40a65b:	call   405200 <__fprintf_chk@plt>
  40a660:	pop    r10
  40a662:	pop    r11
  40a664:	test   BYTE PTR [rbp+0x70],0x80
  40a668:	je     409713 <__flatcc_fb_codegen_c@@Base+0x2263>
  40a66e:	mov    r9d,DWORD PTR [rsp+0x8]
  40a673:	mov    rdi,QWORD PTR [rbx+0xd0]
  40a67a:	test   r9d,r9d
  40a67d:	jne    40a9ec <__flatcc_fb_codegen_c@@Base+0x353c>
  40a683:	lea    rdx,[rip+0x24ce6]        # 42f370 <_IO_stdin_used@@Base+0x2370>
  40a68a:	mov    esi,0x1
  40a68f:	xor    eax,eax
  40a691:	call   405200 <__fprintf_chk@plt>
  40a696:	mov    rdi,QWORD PTR [rbx+0xd0]
  40a69d:	lea    rdx,[rip+0x24d0c]        # 42f3b0 <_IO_stdin_used@@Base+0x23b0>
  40a6a4:	push   QWORD PTR [rsp]
  40a6a7:	push   r13
  40a6a9:	mov    r9d,r15d
  40a6ac:	mov    r8,r12
  40a6af:	xor    eax,eax
  40a6b1:	mov    rcx,rbx
  40a6b4:	mov    esi,0x1
  40a6b9:	call   405200 <__fprintf_chk@plt>
  40a6be:	mov    rax,QWORD PTR [rbx+0xe0]
  40a6c5:	pop    rdi
  40a6c6:	pop    r8
  40a6c8:	mov    r9d,DWORD PTR [rax+0xa8]
  40a6cf:	test   r9d,r9d
  40a6d2:	je     40a706 <__flatcc_fb_codegen_c@@Base+0x3256>
  40a6d4:	sub    rsp,0x8
  40a6d8:	mov    rdi,QWORD PTR [rbx+0xd0]
  40a6df:	lea    rdx,[rip+0x255d2]        # 42fcb8 <_IO_stdin_used@@Base+0x2cb8>
  40a6e6:	push   rbx
  40a6e7:	push   QWORD PTR [rsp+0x10]
  40a6eb:	mov    r9d,r15d
  40a6ee:	push   r13
  40a6f0:	mov    r8,r12
  40a6f3:	mov    rcx,rbx
  40a6f6:	mov    esi,0x1
  40a6fb:	xor    eax,eax
  40a6fd:	call   405200 <__fprintf_chk@plt>
  40a702:	add    rsp,0x20
  40a706:	mov    r14,QWORD PTR [rsp]
  40a70a:	mov    rdi,QWORD PTR [rbx+0xd0]
  40a711:	lea    rdx,[rip+0x24cd0]        # 42f3e8 <_IO_stdin_used@@Base+0x23e8>
  40a718:	mov    r9d,r15d
  40a71b:	mov    r8,r12
  40a71e:	mov    rcx,rbx
  40a721:	mov    esi,0x1
  40a726:	xor    eax,eax
  40a728:	push   r14
  40a72a:	push   r13
  40a72c:	call   405200 <__fprintf_chk@plt>
  40a731:	mov    rdi,QWORD PTR [rbx+0xd0]
  40a738:	lea    rdx,[rip+0x24ce9]        # 42f428 <_IO_stdin_used@@Base+0x2428>
  40a73f:	push   r14
  40a741:	push   r13
  40a743:	mov    rcx,rbx
  40a746:	xor    eax,eax
  40a748:	mov    r9d,r15d
  40a74b:	mov    r8,r12
  40a74e:	mov    esi,0x1
  40a753:	call   405200 <__fprintf_chk@plt>
  40a758:	mov    rax,QWORD PTR [rbx+0xe0]
  40a75f:	add    rsp,0x20
  40a763:	mov    ecx,DWORD PTR [rax+0xa8]
  40a769:	test   ecx,ecx
  40a76b:	je     4097f0 <__flatcc_fb_codegen_c@@Base+0x2340>
  40a771:	jmp    4099ec <__flatcc_fb_codegen_c@@Base+0x253c>
  40a776:	lea    r8,[rip+0x2ba5c]        # 4361d9 <_IO_stdin_used@@Base+0x91d9>
  40a77d:	mov    r9,QWORD PTR [rbp+0x48]
  40a781:	lea    rcx,[rip+0x2baa3]        # 43622b <_IO_stdin_used@@Base+0x922b>
  40a788:	mov    rdi,QWORD PTR [rsp+0x10]
  40a78d:	mov    edx,0x64
  40a792:	mov    esi,0x1
  40a797:	xor    eax,eax
  40a799:	call   405220 <__sprintf_chk@plt>
  40a79e:	jmp    40a5e0 <__flatcc_fb_codegen_c@@Base+0x3130>
  40a7a3:	lea    rdx,[rip+0x24b7e]        # 42f328 <_IO_stdin_used@@Base+0x2328>
  40a7aa:	mov    esi,0x1
  40a7af:	xor    eax,eax
  40a7b1:	call   405200 <__fprintf_chk@plt>
  40a7b6:	mov    rdi,QWORD PTR [rbx+0xd0]
  40a7bd:	lea    rdx,[rip+0x24bac]        # 42f370 <_IO_stdin_used@@Base+0x2370>
  40a7c4:	mov    esi,0x1
  40a7c9:	xor    eax,eax
  40a7cb:	call   405200 <__fprintf_chk@plt>
  40a7d0:	sub    rsp,0x8
  40a7d4:	mov    rdi,QWORD PTR [rbx+0xd0]
  40a7db:	lea    rdx,[rip+0x24f5e]        # 42f740 <_IO_stdin_used@@Base+0x2740>
  40a7e2:	mov    r10,QWORD PTR [rsp+0x10]
  40a7e7:	xor    eax,eax
  40a7e9:	mov    r9d,r15d
  40a7ec:	mov    r8,r12
  40a7ef:	mov    rcx,rbx
  40a7f2:	mov    esi,0x1
  40a7f7:	push   r10
  40a7f9:	mov    QWORD PTR [rsp+0x18],r10
  40a7fe:	push   r14
  40a800:	push   r13
  40a802:	call   405200 <__fprintf_chk@plt>
  40a807:	mov    rax,QWORD PTR [rbx+0xe0]
  40a80e:	add    rsp,0x20
  40a812:	mov    r10,QWORD PTR [rsp+0x8]
  40a817:	mov    eax,DWORD PTR [rax+0xa8]
  40a81d:	test   eax,eax
  40a81f:	je     4097f0 <__flatcc_fb_codegen_c@@Base+0x2340>
  40a825:	mov    rdi,QWORD PTR [rbx+0xd0]
  40a82c:	lea    rdx,[rip+0x25415]        # 42fc48 <_IO_stdin_used@@Base+0x2c48>
  40a833:	push   rbx
  40a834:	push   r10
  40a836:	push   r14
  40a838:	mov    r9d,r15d
  40a83b:	push   r13
  40a83d:	mov    r8,r12
  40a840:	mov    rcx,rbx
  40a843:	mov    esi,0x1
  40a848:	xor    eax,eax
  40a84a:	call   405200 <__fprintf_chk@plt>
  40a84f:	add    rsp,0x20
  40a853:	jmp    4097f0 <__flatcc_fb_codegen_c@@Base+0x2340>
  40a858:	nop    DWORD PTR [rax+rax*1+0x0]
  40a860:	cmp    dx,0x3
  40a864:	jne    409d5a <__flatcc_fb_codegen_c@@Base+0x28aa>
  40a86a:	cmp    eax,0xb
  40a86d:	je     40aae9 <__flatcc_fb_codegen_c@@Base+0x3639>
  40a873:	vmovsd xmm0,QWORD PTR [rbp+0x48]
  40a878:	lea    rcx,[rip+0x2b9c9]        # 436248 <_IO_stdin_used@@Base+0x9248>
  40a87f:	mov    rdi,QWORD PTR [rsp+0x10]
  40a884:	mov    edx,0x64
  40a889:	mov    esi,0x1
  40a88e:	mov    eax,0x1
  40a893:	call   405220 <__sprintf_chk@plt>
  40a898:	jmp    40a5e0 <__flatcc_fb_codegen_c@@Base+0x3130>
  40a89d:	cmp    eax,0x9
  40a8a0:	ja     40a567 <__flatcc_fb_codegen_c@@Base+0x30b7>
  40a8a6:	lea    rdx,[rip+0x2be17]        # 4366c4 <_IO_stdin_used@@Base+0x96c4>
  40a8ad:	movsxd rax,DWORD PTR [rdx+rax*4]
  40a8b1:	add    rax,rdx
  40a8b4:	jmp    rax
  40a8b6:	lea    r8,[rip+0x2b91c]        # 4361d9 <_IO_stdin_used@@Base+0x91d9>
  40a8bd:	mov    r9,QWORD PTR [rbp+0x48]
  40a8c1:	lea    rcx,[rip+0x2b96c]        # 436234 <_IO_stdin_used@@Base+0x9234>
  40a8c8:	jmp    40a788 <__flatcc_fb_codegen_c@@Base+0x32d8>
  40a8cd:	cmp    ax,0x3
  40a8d1:	jne    409d5a <__flatcc_fb_codegen_c@@Base+0x28aa>
  40a8d7:	vxorps xmm0,xmm0,xmm0
  40a8db:	mov    rdi,QWORD PTR [rsp+0x10]
  40a8e0:	lea    rcx,[rip+0x2b95d]        # 436244 <_IO_stdin_used@@Base+0x9244>
  40a8e7:	mov    edx,0x64
  40a8ec:	mov    esi,0x1
  40a8f1:	mov    eax,0x1
  40a8f6:	lea    r14,[rip+0x3af11]        # 44580e <_IO_stdin_used@@Base+0x1880e>
  40a8fd:	vcvtsd2ss xmm0,xmm0,QWORD PTR [rbp+0x48]
  40a902:	vcvtss2sd xmm0,xmm0,xmm0
  40a906:	call   405220 <__sprintf_chk@plt>
  40a90b:	lea    r10,[rip+0x2b894]        # 4361a6 <_IO_stdin_used@@Base+0x91a6>
  40a912:	mov    r11,r10
  40a915:	jmp    409f5b <__flatcc_fb_codegen_c@@Base+0x2aab>
  40a91a:	lea    r10,[rip+0x2b885]        # 4361a6 <_IO_stdin_used@@Base+0x91a6>
  40a921:	lea    r14,[rip+0x3aee6]        # 44580e <_IO_stdin_used@@Base+0x1880e>
  40a928:	mov    r11,r10
  40a92b:	jmp    409eff <__flatcc_fb_codegen_c@@Base+0x2a4f>
  40a930:	lea    r10,[rip+0x2b861]        # 436198 <_IO_stdin_used@@Base+0x9198>
  40a937:	lea    r11,[rip+0x2b972]        # 4362b0 <_IO_stdin_used@@Base+0x92b0>
  40a93e:	lea    r14,[rip+0x3aec9]        # 44580e <_IO_stdin_used@@Base+0x1880e>
  40a945:	jmp    409eff <__flatcc_fb_codegen_c@@Base+0x2a4f>
  40a94a:	lea    r10,[rip+0x2b847]        # 436198 <_IO_stdin_used@@Base+0x9198>
  40a951:	lea    r11,[rip+0x2b958]        # 4362b0 <_IO_stdin_used@@Base+0x92b0>
  40a958:	lea    r14,[rip+0x3aeaf]        # 44580e <_IO_stdin_used@@Base+0x1880e>
  40a95f:	jmp    409ed5 <__flatcc_fb_codegen_c@@Base+0x2a25>
  40a964:	cmp    ax,0x3
  40a968:	jne    409d5a <__flatcc_fb_codegen_c@@Base+0x28aa>
  40a96e:	lea    r10,[rip+0x2b823]        # 436198 <_IO_stdin_used@@Base+0x9198>
  40a975:	lea    r11,[rip+0x2b934]        # 4362b0 <_IO_stdin_used@@Base+0x92b0>
  40a97c:	lea    r14,[rip+0x3ae8b]        # 44580e <_IO_stdin_used@@Base+0x1880e>
  40a983:	jmp    409f22 <__flatcc_fb_codegen_c@@Base+0x2a72>
  40a988:	cmp    ax,0x3
  40a98c:	jne    409d5a <__flatcc_fb_codegen_c@@Base+0x28aa>
  40a992:	lea    r10,[rip+0x2b7f6]        # 43618f <_IO_stdin_used@@Base+0x918f>
  40a999:	lea    r11,[rip+0x2b909]        # 4362a9 <_IO_stdin_used@@Base+0x92a9>
  40a9a0:	jmp    40a97c <__flatcc_fb_codegen_c@@Base+0x34cc>
  40a9a2:	lea    r10,[rip+0x2b7e6]        # 43618f <_IO_stdin_used@@Base+0x918f>
  40a9a9:	lea    r11,[rip+0x2b8f9]        # 4362a9 <_IO_stdin_used@@Base+0x92a9>
  40a9b0:	lea    r14,[rip+0x3ae57]        # 44580e <_IO_stdin_used@@Base+0x1880e>
  40a9b7:	jmp    409eff <__flatcc_fb_codegen_c@@Base+0x2a4f>
  40a9bc:	cmp    ax,0x3
  40a9c0:	jne    409d5a <__flatcc_fb_codegen_c@@Base+0x28aa>
  40a9c6:	lea    r10,[rip+0x2b7df]        # 4361ac <_IO_stdin_used@@Base+0x91ac>
  40a9cd:	mov    r11,r10
  40a9d0:	jmp    40a97c <__flatcc_fb_codegen_c@@Base+0x34cc>
  40a9d2:	lea    r10,[rip+0x2b7b6]        # 43618f <_IO_stdin_used@@Base+0x918f>
  40a9d9:	lea    r11,[rip+0x2b8c9]        # 4362a9 <_IO_stdin_used@@Base+0x92a9>
  40a9e0:	lea    r14,[rip+0x3ae27]        # 44580e <_IO_stdin_used@@Base+0x1880e>
  40a9e7:	jmp    409ed5 <__flatcc_fb_codegen_c@@Base+0x2a25>
  40a9ec:	lea    rdx,[rip+0x24935]        # 42f328 <_IO_stdin_used@@Base+0x2328>
  40a9f3:	mov    esi,0x1
  40a9f8:	xor    eax,eax
  40a9fa:	call   405200 <__fprintf_chk@plt>
  40a9ff:	mov    rdi,QWORD PTR [rbx+0xd0]
  40aa06:	lea    rdx,[rip+0x24963]        # 42f370 <_IO_stdin_used@@Base+0x2370>
  40aa0d:	mov    esi,0x1
  40aa12:	xor    eax,eax
  40aa14:	call   405200 <__fprintf_chk@plt>
  40aa19:	mov    rdi,QWORD PTR [rbx+0xd0]
  40aa20:	lea    rdx,[rip+0x24989]        # 42f3b0 <_IO_stdin_used@@Base+0x23b0>
  40aa27:	push   QWORD PTR [rsp]
  40aa2a:	push   r13
  40aa2c:	mov    r8,r12
  40aa2f:	mov    esi,0x1
  40aa34:	xor    eax,eax
  40aa36:	mov    r9d,r15d
  40aa39:	mov    rcx,rbx
  40aa3c:	call   405200 <__fprintf_chk@plt>
  40aa41:	mov    rax,QWORD PTR [rbx+0xe0]
  40aa48:	pop    rsi
  40aa49:	pop    rdi
  40aa4a:	mov    r8d,DWORD PTR [rax+0xa8]
  40aa51:	test   r8d,r8d
  40aa54:	je     4097f0 <__flatcc_fb_codegen_c@@Base+0x2340>
  40aa5a:	sub    rsp,0x8
  40aa5e:	mov    rdi,QWORD PTR [rbx+0xd0]
  40aa65:	lea    rdx,[rip+0x2524c]        # 42fcb8 <_IO_stdin_used@@Base+0x2cb8>
  40aa6c:	push   rbx
  40aa6d:	push   QWORD PTR [rsp+0x10]
  40aa71:	mov    r9d,r15d
  40aa74:	push   r13
  40aa76:	mov    r8,r12
  40aa79:	mov    rcx,rbx
  40aa7c:	mov    esi,0x1
  40aa81:	xor    eax,eax
  40aa83:	call   405200 <__fprintf_chk@plt>
  40aa88:	add    rsp,0x20
  40aa8c:	jmp    4097f0 <__flatcc_fb_codegen_c@@Base+0x2340>
  40aa91:	nop    DWORD PTR [rax+0x0]
  40aa98:	lea    r10,[rip+0x2b6e6]        # 436185 <_IO_stdin_used@@Base+0x9185>
  40aa9f:	lea    r11,[rip+0x2b7fb]        # 4362a1 <_IO_stdin_used@@Base+0x92a1>
  40aaa6:	lea    r14,[rip+0x3ad61]        # 44580e <_IO_stdin_used@@Base+0x1880e>
  40aaad:	jmp    409ed5 <__flatcc_fb_codegen_c@@Base+0x2a25>
  40aab2:	cmp    ax,0x3
  40aab6:	jne    409d5a <__flatcc_fb_codegen_c@@Base+0x28aa>
  40aabc:	lea    r10,[rip+0x2b6c2]        # 436185 <_IO_stdin_used@@Base+0x9185>
  40aac3:	lea    r11,[rip+0x2b7d7]        # 4362a1 <_IO_stdin_used@@Base+0x92a1>
  40aaca:	jmp    40a97c <__flatcc_fb_codegen_c@@Base+0x34cc>
  40aacf:	lea    r10,[rip+0x2b6af]        # 436185 <_IO_stdin_used@@Base+0x9185>
  40aad6:	lea    r11,[rip+0x2b7c4]        # 4362a1 <_IO_stdin_used@@Base+0x92a1>
  40aadd:	lea    r14,[rip+0x3ad2a]        # 44580e <_IO_stdin_used@@Base+0x1880e>
  40aae4:	jmp    409eff <__flatcc_fb_codegen_c@@Base+0x2a4f>
  40aae9:	vxorps xmm0,xmm0,xmm0
  40aaed:	lea    rcx,[rip+0x2b750]        # 436244 <_IO_stdin_used@@Base+0x9244>
  40aaf4:	vcvtsd2ss xmm0,xmm0,QWORD PTR [rbp+0x48]
  40aaf9:	vcvtss2sd xmm0,xmm0,xmm0
  40aafd:	jmp    40a87f <__flatcc_fb_codegen_c@@Base+0x33cf>
  40ab02:	call   4050d0 <__stack_chk_fail@plt>
  40ab07:	mov    rax,QWORD PTR [rip+0x464da]        # 450fe8 <stderr@GLIBC_2.2.5>
  40ab0e:	lea    rcx,[rip+0x23e6b]        # 42e980 <_IO_stdin_used@@Base+0x1980>
  40ab15:	lea    rdx,[rip+0x2b6c5]        # 4361e1 <_IO_stdin_used@@Base+0x91e1>
  40ab1c:	lea    r9,[rip+0x24fdd]        # 42fb00 <_IO_stdin_used@@Base+0x2b00>
  40ab23:	mov    esi,0x1
  40ab28:	mov    r8d,0x630
  40ab2e:	mov    rdi,QWORD PTR [rax]
  40ab31:	xor    eax,eax
  40ab33:	call   405200 <__fprintf_chk@plt>
  40ab38:	lea    rcx,[rip+0x2bbd9]        # 436718 <_IO_stdin_used@@Base+0x9718>
  40ab3f:	lea    rsi,[rip+0x23e3a]        # 42e980 <_IO_stdin_used@@Base+0x1980>
  40ab46:	lea    rdi,[rip+0x2c6dc]        # 437229 <_IO_stdin_used@@Base+0xa229>
  40ab4d:	mov    edx,0x630
  40ab52:	call   405100 <__assert_fail@plt>
  40ab57:	lea    rcx,[rip+0x2bbba]        # 436718 <_IO_stdin_used@@Base+0x9718>
  40ab5e:	lea    rsi,[rip+0x23e1b]        # 42e980 <_IO_stdin_used@@Base+0x1980>
  40ab65:	lea    rdi,[rip+0x24a74]        # 42f5e0 <_IO_stdin_used@@Base+0x25e0>
  40ab6c:	mov    edx,0x552
  40ab71:	call   405100 <__assert_fail@plt>
  40ab76:	lea    r8,[rip+0x2b642]        # 4361bf <_IO_stdin_used@@Base+0x91bf>
  40ab7d:	jmp    40a5be <__flatcc_fb_codegen_c@@Base+0x310e>
  40ab82:	lea    r8,[rip+0x2b648]        # 4361d1 <_IO_stdin_used@@Base+0x91d1>
  40ab89:	jmp    40a77d <__flatcc_fb_codegen_c@@Base+0x32cd>
  40ab8e:	lea    r8,[rip+0x2b633]        # 4361c8 <_IO_stdin_used@@Base+0x91c8>
  40ab95:	jmp    40a77d <__flatcc_fb_codegen_c@@Base+0x32cd>
  40ab9a:	lea    r8,[rip+0x2b639]        # 4361da <_IO_stdin_used@@Base+0x91da>
  40aba1:	jmp    40a77d <__flatcc_fb_codegen_c@@Base+0x32cd>
  40aba6:	lea    r8,[rip+0x2b623]        # 4361d0 <_IO_stdin_used@@Base+0x91d0>
  40abad:	jmp    40a77d <__flatcc_fb_codegen_c@@Base+0x32cd>
  40abb2:	lea    r8,[rip+0x2b60e]        # 4361c7 <_IO_stdin_used@@Base+0x91c7>
  40abb9:	jmp    40a77d <__flatcc_fb_codegen_c@@Base+0x32cd>
  40abbe:	lea    r8,[rip+0x2b5f9]        # 4361be <_IO_stdin_used@@Base+0x91be>
  40abc5:	jmp    40a77d <__flatcc_fb_codegen_c@@Base+0x32cd>
  40abca:	lea    rcx,[rip+0x2bb1f]        # 4366f0 <_IO_stdin_used@@Base+0x96f0>
  40abd1:	lea    rsi,[rip+0x23da8]        # 42e980 <_IO_stdin_used@@Base+0x1980>
  40abd8:	lea    rdi,[rip+0x24c51]        # 42f830 <_IO_stdin_used@@Base+0x2830>
  40abdf:	mov    edx,0x53f
  40abe4:	call   405100 <__assert_fail@plt>
  40abe9:	lea    r8,[rip+0x2b5e1]        # 4361d1 <_IO_stdin_used@@Base+0x91d1>
  40abf0:	jmp    40a8bd <__flatcc_fb_codegen_c@@Base+0x340d>
  40abf5:	lea    r8,[rip+0x2b5cc]        # 4361c8 <_IO_stdin_used@@Base+0x91c8>
  40abfc:	jmp    40a8bd <__flatcc_fb_codegen_c@@Base+0x340d>
  40ac01:	lea    r8,[rip+0x2b5b7]        # 4361bf <_IO_stdin_used@@Base+0x91bf>
  40ac08:	jmp    40a8bd <__flatcc_fb_codegen_c@@Base+0x340d>
  40ac0d:	lea    r8,[rip+0x2b5b3]        # 4361c7 <_IO_stdin_used@@Base+0x91c7>
  40ac14:	jmp    40a8bd <__flatcc_fb_codegen_c@@Base+0x340d>
  40ac19:	lea    r8,[rip+0x2b59e]        # 4361be <_IO_stdin_used@@Base+0x91be>
  40ac20:	jmp    40a8bd <__flatcc_fb_codegen_c@@Base+0x340d>
  40ac25:	lea    r8,[rip+0x2b593]        # 4361bf <_IO_stdin_used@@Base+0x91bf>
  40ac2c:	jmp    40a77d <__flatcc_fb_codegen_c@@Base+0x32cd>
  40ac31:	lea    r8,[rip+0x2b5a2]        # 4361da <_IO_stdin_used@@Base+0x91da>
  40ac38:	jmp    40a8bd <__flatcc_fb_codegen_c@@Base+0x340d>
  40ac3d:	lea    r8,[rip+0x2b58c]        # 4361d0 <_IO_stdin_used@@Base+0x91d0>
  40ac44:	jmp    40a8bd <__flatcc_fb_codegen_c@@Base+0x340d>
  40ac49:	lea    r8,[rip+0x2b581]        # 4361d1 <_IO_stdin_used@@Base+0x91d1>
  40ac50:	jmp    40a5be <__flatcc_fb_codegen_c@@Base+0x310e>
  40ac55:	lea    r8,[rip+0x2b56c]        # 4361c8 <_IO_stdin_used@@Base+0x91c8>
  40ac5c:	jmp    40a5be <__flatcc_fb_codegen_c@@Base+0x310e>
  40ac61:	lea    r8,[rip+0x2b572]        # 4361da <_IO_stdin_used@@Base+0x91da>
  40ac68:	jmp    40a5be <__flatcc_fb_codegen_c@@Base+0x310e>
  40ac6d:	lea    r8,[rip+0x2b55c]        # 4361d0 <_IO_stdin_used@@Base+0x91d0>
  40ac74:	jmp    40a5be <__flatcc_fb_codegen_c@@Base+0x310e>
  40ac79:	lea    r8,[rip+0x2b547]        # 4361c7 <_IO_stdin_used@@Base+0x91c7>
  40ac80:	jmp    40a5be <__flatcc_fb_codegen_c@@Base+0x310e>
  40ac85:	lea    r8,[rip+0x2b532]        # 4361be <_IO_stdin_used@@Base+0x91be>
  40ac8c:	jmp    40a5be <__flatcc_fb_codegen_c@@Base+0x310e>
  40ac91:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40ac9c:	nop    DWORD PTR [rax+0x0]

000000000040aca0 <__flatcc_fb_gen_common_c_header@@Base>:
  40aca0:	push   rbp
  40aca1:	push   rbx
  40aca2:	lea    rbp,[rdi+0x66]
  40aca6:	mov    rbx,rdi
  40aca9:	lea    rdx,[rip+0x25050]        # 42fd00 <_IO_stdin_used@@Base+0x2d00>
  40acb0:	mov    esi,0x1
  40acb5:	sub    rsp,0x8
  40acb9:	mov    rdi,QWORD PTR [rdi+0xd0]
  40acc0:	mov    r8,rbp
  40acc3:	mov    rcx,rbp
  40acc6:	xor    eax,eax
  40acc8:	call   405200 <__fprintf_chk@plt>
  40accd:	mov    rdi,QWORD PTR [rbx+0xd0]
  40acd4:	lea    rdx,[rip+0x2505d]        # 42fd38 <_IO_stdin_used@@Base+0x2d38>
  40acdb:	mov    esi,0x1
  40ace0:	xor    eax,eax
  40ace2:	call   405200 <__fprintf_chk@plt>
  40ace7:	mov    rdi,QWORD PTR [rbx+0xd0]
  40acee:	lea    rdx,[rip+0x2509b]        # 42fd90 <_IO_stdin_used@@Base+0x2d90>
  40acf5:	xor    eax,eax
  40acf7:	mov    esi,0x1
  40acfc:	call   405200 <__fprintf_chk@plt>
  40ad01:	mov    rax,QWORD PTR [rbx+0xe0]
  40ad08:	mov    r9d,DWORD PTR [rax+0xa8]
  40ad0f:	test   r9d,r9d
  40ad12:	je     40b9b0 <__flatcc_fb_gen_common_c_header@@Base+0xd10>
  40ad18:	mov    r8d,DWORD PTR [rax+0xac]
  40ad1f:	mov    rdi,QWORD PTR [rbx+0xd0]
  40ad26:	test   r8d,r8d
  40ad29:	jne    40b990 <__flatcc_fb_gen_common_c_header@@Base+0xcf0>
  40ad2f:	lea    rdx,[rip+0x25142]        # 42fe78 <_IO_stdin_used@@Base+0x2e78>
  40ad36:	mov    esi,0x1
  40ad3b:	xor    eax,eax
  40ad3d:	call   405200 <__fprintf_chk@plt>
  40ad42:	lea    rdi,[rip+0x2b6a5]        # 4363ee <_IO_stdin_used@@Base+0x93ee>
  40ad49:	mov    ecx,0xd
  40ad4e:	mov    rsi,rbx
  40ad51:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  40ad53:	jne    40b8e8 <__flatcc_fb_gen_common_c_header@@Base+0xc48>
  40ad59:	mov    rdi,QWORD PTR [rbx+0xd0]
  40ad60:	lea    rdx,[rip+0x25621]        # 430388 <_IO_stdin_used@@Base+0x3388>
  40ad67:	mov    r8,rbx
  40ad6a:	mov    rcx,rbx
  40ad6d:	mov    esi,0x1
  40ad72:	xor    eax,eax
  40ad74:	call   405200 <__fprintf_chk@plt>
  40ad79:	mov    rdi,QWORD PTR [rbx+0xd0]
  40ad80:	push   rbx
  40ad81:	lea    rdx,[rip+0x25690]        # 430418 <_IO_stdin_used@@Base+0x3418>
  40ad88:	push   rbx
  40ad89:	push   rbx
  40ad8a:	mov    r9,rbx
  40ad8d:	push   rbx
  40ad8e:	mov    r8,rbx
  40ad91:	mov    rcx,rbx
  40ad94:	mov    esi,0x1
  40ad99:	xor    eax,eax
  40ad9b:	call   405200 <__fprintf_chk@plt>
  40ada0:	mov    rdi,QWORD PTR [rbx+0xd0]
  40ada7:	lea    rdx,[rip+0x257e2]        # 430590 <_IO_stdin_used@@Base+0x3590>
  40adae:	add    rsp,0x20
  40adb2:	mov    r8,rbx
  40adb5:	mov    rcx,rbx
  40adb8:	mov    esi,0x1
  40adbd:	xor    eax,eax
  40adbf:	call   405200 <__fprintf_chk@plt>
  40adc4:	sub    rsp,0x8
  40adc8:	mov    rdi,QWORD PTR [rbx+0xd0]
  40adcf:	lea    rdx,[rip+0x25812]        # 4305e8 <_IO_stdin_used@@Base+0x35e8>
  40add6:	push   rbx
  40add7:	mov    rcx,rbx
  40adda:	mov    esi,0x1
  40addf:	xor    eax,eax
  40ade1:	mov    r9,rbx
  40ade4:	mov    r8,rbx
  40ade7:	call   405200 <__fprintf_chk@plt>
  40adec:	mov    rax,QWORD PTR [rbx+0xe0]
  40adf3:	mov    rdi,QWORD PTR [rbx+0xd0]
  40adfa:	pop    rdx
  40adfb:	pop    rcx
  40adfc:	mov    esi,DWORD PTR [rax+0x24]
  40adff:	test   esi,esi
  40ae01:	je     40b880 <__flatcc_fb_gen_common_c_header@@Base+0xbe0>
  40ae07:	lea    rdx,[rip+0x25902]        # 430710 <_IO_stdin_used@@Base+0x3710>
  40ae0e:	mov    rcx,rbx
  40ae11:	mov    esi,0x1
  40ae16:	xor    eax,eax
  40ae18:	call   405200 <__fprintf_chk@plt>
  40ae1d:	mov    rdi,QWORD PTR [rbx+0xd0]
  40ae24:	lea    rdx,[rip+0x25915]        # 430740 <_IO_stdin_used@@Base+0x3740>
  40ae2b:	mov    r8,rbx
  40ae2e:	mov    rcx,rbx
  40ae31:	mov    esi,0x1
  40ae36:	xor    eax,eax
  40ae38:	call   405200 <__fprintf_chk@plt>
  40ae3d:	mov    rdi,QWORD PTR [rbx+0xd0]
  40ae44:	push   rbx
  40ae45:	lea    rdx,[rip+0x259cc]        # 430818 <_IO_stdin_used@@Base+0x3818>
  40ae4c:	push   rbx
  40ae4d:	mov    r9,rbx
  40ae50:	mov    r8,rbx
  40ae53:	mov    rcx,rbx
  40ae56:	mov    esi,0x1
  40ae5b:	xor    eax,eax
  40ae5d:	call   405200 <__fprintf_chk@plt>
  40ae62:	mov    rdi,QWORD PTR [rbx+0xd0]
  40ae69:	push   rbx
  40ae6a:	lea    rdx,[rip+0x25b57]        # 4309c8 <_IO_stdin_used@@Base+0x39c8>
  40ae71:	push   rbx
  40ae72:	mov    r9,rbx
  40ae75:	mov    r8,rbx
  40ae78:	mov    rcx,rbx
  40ae7b:	mov    esi,0x1
  40ae80:	xor    eax,eax
  40ae82:	call   405200 <__fprintf_chk@plt>
  40ae87:	mov    rdi,QWORD PTR [rbx+0xd0]
  40ae8e:	lea    rdx,[rip+0x25bd3]        # 430a68 <_IO_stdin_used@@Base+0x3a68>
  40ae95:	add    rsp,0x20
  40ae99:	mov    r9,rbx
  40ae9c:	mov    r8,rbx
  40ae9f:	mov    rcx,rbx
  40aea2:	mov    esi,0x1
  40aea7:	xor    eax,eax
  40aea9:	call   405200 <__fprintf_chk@plt>
  40aeae:	mov    rdi,QWORD PTR [rbx+0xd0]
  40aeb5:	lea    rdx,[rip+0x25c8c]        # 430b48 <_IO_stdin_used@@Base+0x3b48>
  40aebc:	mov    r9,rbx
  40aebf:	mov    r8,rbx
  40aec2:	mov    rcx,rbx
  40aec5:	mov    esi,0x1
  40aeca:	xor    eax,eax
  40aecc:	call   405200 <__fprintf_chk@plt>
  40aed1:	mov    rdi,QWORD PTR [rbx+0xd0]
  40aed8:	lea    rdx,[rip+0x25d49]        # 430c28 <_IO_stdin_used@@Base+0x3c28>
  40aedf:	mov    r9,rbx
  40aee2:	mov    r8,rbx
  40aee5:	mov    rcx,rbx
  40aee8:	mov    esi,0x1
  40aeed:	xor    eax,eax
  40aeef:	call   405200 <__fprintf_chk@plt>
  40aef4:	mov    rdi,QWORD PTR [rbx+0xd0]
  40aefb:	push   rbx
  40aefc:	lea    rdx,[rip+0x25dfd]        # 430d00 <_IO_stdin_used@@Base+0x3d00>
  40af03:	push   rbx
  40af04:	xor    eax,eax
  40af06:	mov    r9,rbx
  40af09:	mov    r8,rbx
  40af0c:	mov    rcx,rbx
  40af0f:	mov    esi,0x1
  40af14:	call   405200 <__fprintf_chk@plt>
  40af19:	mov    rax,QWORD PTR [rbx+0xe0]
  40af20:	mov    rdi,QWORD PTR [rbx+0xd0]
  40af27:	pop    r10
  40af29:	pop    r11
  40af2b:	mov    eax,DWORD PTR [rax+0x24]
  40af2e:	test   eax,eax
  40af30:	je     40b860 <__flatcc_fb_gen_common_c_header@@Base+0xbc0>
  40af36:	lea    rdx,[rip+0x25eab]        # 430de8 <_IO_stdin_used@@Base+0x3de8>
  40af3d:	mov    rcx,rbx
  40af40:	mov    esi,0x1
  40af45:	xor    eax,eax
  40af47:	call   405200 <__fprintf_chk@plt>
  40af4c:	sub    rsp,0x8
  40af50:	mov    rdi,QWORD PTR [rbx+0xd0]
  40af57:	lea    rdx,[rip+0x25eba]        # 430e18 <_IO_stdin_used@@Base+0x3e18>
  40af5e:	push   rbx
  40af5f:	mov    r9,rbx
  40af62:	mov    r8,rbx
  40af65:	mov    rcx,rbx
  40af68:	mov    esi,0x1
  40af6d:	xor    eax,eax
  40af6f:	call   405200 <__fprintf_chk@plt>
  40af74:	mov    rdi,QWORD PTR [rbx+0xd0]
  40af7b:	lea    rdx,[rip+0x25f36]        # 430eb8 <_IO_stdin_used@@Base+0x3eb8>
  40af82:	mov    r8,rbx
  40af85:	mov    rcx,rbx
  40af88:	mov    esi,0x1
  40af8d:	xor    eax,eax
  40af8f:	call   405200 <__fprintf_chk@plt>
  40af94:	mov    rdi,QWORD PTR [rbx+0xd0]
  40af9b:	lea    rdx,[rip+0x25f5e]        # 430f00 <_IO_stdin_used@@Base+0x3f00>
  40afa2:	mov    r9,rbx
  40afa5:	mov    r8,rbx
  40afa8:	mov    rcx,rbx
  40afab:	mov    esi,0x1
  40afb0:	xor    eax,eax
  40afb2:	call   405200 <__fprintf_chk@plt>
  40afb7:	mov    rdi,QWORD PTR [rbx+0xd0]
  40afbe:	lea    rdx,[rip+0x25fcb]        # 430f90 <_IO_stdin_used@@Base+0x3f90>
  40afc5:	mov    r8,rbx
  40afc8:	mov    rcx,rbx
  40afcb:	mov    esi,0x1
  40afd0:	xor    eax,eax
  40afd2:	call   405200 <__fprintf_chk@plt>
  40afd7:	mov    rdi,QWORD PTR [rbx+0xd0]
  40afde:	lea    rdx,[rip+0x26023]        # 431008 <_IO_stdin_used@@Base+0x4008>
  40afe5:	mov    r9,rbx
  40afe8:	mov    r8,rbx
  40afeb:	mov    rcx,rbx
  40afee:	mov    esi,0x1
  40aff3:	xor    eax,eax
  40aff5:	mov    QWORD PTR [rsp],rbx
  40aff9:	call   405200 <__fprintf_chk@plt>
  40affe:	mov    rdi,QWORD PTR [rbx+0xd0]
  40b005:	lea    rdx,[rip+0x2611c]        # 431128 <_IO_stdin_used@@Base+0x4128>
  40b00c:	mov    r8,rbx
  40b00f:	mov    rcx,rbx
  40b012:	mov    esi,0x1
  40b017:	xor    eax,eax
  40b019:	call   405200 <__fprintf_chk@plt>
  40b01e:	mov    rdi,QWORD PTR [rbx+0xd0]
  40b025:	lea    rdx,[rip+0x26174]        # 4311a0 <_IO_stdin_used@@Base+0x41a0>
  40b02c:	mov    r8,rbx
  40b02f:	mov    rcx,rbx
  40b032:	mov    esi,0x1
  40b037:	xor    eax,eax
  40b039:	call   405200 <__fprintf_chk@plt>
  40b03e:	mov    rdi,QWORD PTR [rbx+0xd0]
  40b045:	lea    rdx,[rip+0x261d4]        # 431220 <_IO_stdin_used@@Base+0x4220>
  40b04c:	mov    r9,rbx
  40b04f:	mov    r8,rbx
  40b052:	mov    rcx,rbx
  40b055:	mov    esi,0x1
  40b05a:	xor    eax,eax
  40b05c:	mov    QWORD PTR [rsp],rbx
  40b060:	call   405200 <__fprintf_chk@plt>
  40b065:	mov    rdi,QWORD PTR [rbx+0xd0]
  40b06c:	mov    QWORD PTR [rsp],rbx
  40b070:	lea    rdx,[rip+0x26211]        # 431288 <_IO_stdin_used@@Base+0x4288>
  40b077:	push   rbx
  40b078:	push   rbx
  40b079:	mov    r9,rbx
  40b07c:	push   rbx
  40b07d:	push   rbx
  40b07e:	mov    r8,rbx
  40b081:	push   rbx
  40b082:	push   rbx
  40b083:	mov    rcx,rbx
  40b086:	push   rbx
  40b087:	push   rbx
  40b088:	mov    esi,0x1
  40b08d:	xor    eax,eax
  40b08f:	call   405200 <__fprintf_chk@plt>
  40b094:	mov    rdi,QWORD PTR [rbx+0xd0]
  40b09b:	lea    rdx,[rip+0x2630e]        # 4313b0 <_IO_stdin_used@@Base+0x43b0>
  40b0a2:	add    rsp,0x50
  40b0a6:	mov    rcx,rbx
  40b0a9:	mov    esi,0x1
  40b0ae:	xor    eax,eax
  40b0b0:	call   405200 <__fprintf_chk@plt>
  40b0b5:	sub    rsp,0x8
  40b0b9:	mov    rdi,QWORD PTR [rbx+0xd0]
  40b0c0:	lea    rdx,[rip+0x26311]        # 4313d8 <_IO_stdin_used@@Base+0x43d8>
  40b0c7:	push   rbx
  40b0c8:	mov    r9,rbx
  40b0cb:	mov    r8,rbx
  40b0ce:	mov    rcx,rbx
  40b0d1:	mov    esi,0x1
  40b0d6:	xor    eax,eax
  40b0d8:	call   405200 <__fprintf_chk@plt>
  40b0dd:	mov    rdi,QWORD PTR [rbx+0xd0]
  40b0e4:	push   rbx
  40b0e5:	lea    rdx,[rip+0x26374]        # 431460 <_IO_stdin_used@@Base+0x4460>
  40b0ec:	push   rbx
  40b0ed:	push   rbx
  40b0ee:	mov    r9,rbx
  40b0f1:	push   rbx
  40b0f2:	push   rbx
  40b0f3:	mov    r8,rbx
  40b0f6:	push   rbx
  40b0f7:	push   rbx
  40b0f8:	mov    rcx,rbx
  40b0fb:	push   rbx
  40b0fc:	push   rbx
  40b0fd:	mov    esi,0x1
  40b102:	push   rbx
  40b103:	push   rbx
  40b104:	xor    eax,eax
  40b106:	push   rbx
  40b107:	push   rbx
  40b108:	push   rbx
  40b109:	call   405200 <__fprintf_chk@plt>
  40b10e:	add    rsp,0x78
  40b112:	mov    rdi,QWORD PTR [rbx+0xd0]
  40b119:	lea    rdx,[rip+0x264f0]        # 431610 <_IO_stdin_used@@Base+0x4610>
  40b120:	push   rbx
  40b121:	push   rbx
  40b122:	mov    r9,rbx
  40b125:	push   rbx
  40b126:	push   rbx
  40b127:	mov    r8,rbx
  40b12a:	push   rbx
  40b12b:	mov    rcx,rbx
  40b12e:	mov    esi,0x1
  40b133:	xor    eax,eax
  40b135:	call   405200 <__fprintf_chk@plt>
  40b13a:	add    rsp,0x28
  40b13e:	mov    rdi,QWORD PTR [rbx+0xd0]
  40b145:	lea    rdx,[rip+0x2658c]        # 4316d8 <_IO_stdin_used@@Base+0x46d8>
  40b14c:	push   rbx
  40b14d:	mov    r9,rbx
  40b150:	mov    r8,rbx
  40b153:	mov    rcx,rbx
  40b156:	mov    esi,0x1
  40b15b:	xor    eax,eax
  40b15d:	call   405200 <__fprintf_chk@plt>
  40b162:	mov    rdi,QWORD PTR [rbx+0xd0]
  40b169:	lea    rdx,[rip+0x26608]        # 431778 <_IO_stdin_used@@Base+0x4778>
  40b170:	mov    r9,rbx
  40b173:	mov    r8,rbx
  40b176:	mov    rcx,rbx
  40b179:	mov    esi,0x1
  40b17e:	xor    eax,eax
  40b180:	mov    QWORD PTR [rsp],rbx
  40b184:	call   405200 <__fprintf_chk@plt>
  40b189:	mov    rdi,QWORD PTR [rbx+0xd0]
  40b190:	lea    rdx,[rip+0x26659]        # 4317f0 <_IO_stdin_used@@Base+0x47f0>
  40b197:	mov    rcx,rbx
  40b19a:	mov    esi,0x1
  40b19f:	xor    eax,eax
  40b1a1:	call   405200 <__fprintf_chk@plt>
  40b1a6:	mov    rdi,QWORD PTR [rbx+0xd0]
  40b1ad:	lea    rdx,[rip+0x26914]        # 431ac8 <_IO_stdin_used@@Base+0x4ac8>
  40b1b4:	mov    rcx,rbx
  40b1b7:	mov    esi,0x1
  40b1bc:	xor    eax,eax
  40b1be:	call   405200 <__fprintf_chk@plt>
  40b1c3:	mov    rdi,QWORD PTR [rbx+0xd0]
  40b1ca:	lea    rdx,[rip+0x26b8f]        # 431d60 <_IO_stdin_used@@Base+0x4d60>
  40b1d1:	mov    rcx,rbx
  40b1d4:	mov    esi,0x1
  40b1d9:	xor    eax,eax
  40b1db:	call   405200 <__fprintf_chk@plt>
  40b1e0:	mov    rdi,QWORD PTR [rbx+0xd0]
  40b1e7:	lea    rdx,[rip+0x26bfa]        # 431de8 <_IO_stdin_used@@Base+0x4de8>
  40b1ee:	mov    rcx,rbx
  40b1f1:	mov    esi,0x1
  40b1f6:	xor    eax,eax
  40b1f8:	call   405200 <__fprintf_chk@plt>
  40b1fd:	mov    rdi,QWORD PTR [rbx+0xd0]
  40b204:	lea    rdx,[rip+0x26c4d]        # 431e58 <_IO_stdin_used@@Base+0x4e58>
  40b20b:	mov    rcx,rbx
  40b20e:	mov    esi,0x1
  40b213:	xor    eax,eax
  40b215:	call   405200 <__fprintf_chk@plt>
  40b21a:	mov    rdi,QWORD PTR [rbx+0xd0]
  40b221:	lea    rdx,[rip+0x26e18]        # 432040 <_IO_stdin_used@@Base+0x5040>
  40b228:	mov    r9,rbx
  40b22b:	mov    r8,rbx
  40b22e:	mov    rcx,rbx
  40b231:	mov    esi,0x1
  40b236:	xor    eax,eax
  40b238:	mov    QWORD PTR [rsp],rbx
  40b23c:	call   405200 <__fprintf_chk@plt>
  40b241:	mov    rdi,QWORD PTR [rbx+0xd0]
  40b248:	mov    QWORD PTR [rsp],rbx
  40b24c:	lea    rdx,[rip+0x26e9d]        # 4320f0 <_IO_stdin_used@@Base+0x50f0>
  40b253:	push   rbx
  40b254:	push   rbx
  40b255:	mov    r9,rbx
  40b258:	mov    r8,rbx
  40b25b:	mov    rcx,rbx
  40b25e:	mov    esi,0x1
  40b263:	xor    eax,eax
  40b265:	call   405200 <__fprintf_chk@plt>
  40b26a:	mov    rdi,QWORD PTR [rbx+0xd0]
  40b271:	lea    rdx,[rip+0x27058]        # 4322d0 <_IO_stdin_used@@Base+0x52d0>
  40b278:	add    rsp,0x20
  40b27c:	mov    r9,rbx
  40b27f:	mov    r8,rbx
  40b282:	mov    rcx,rbx
  40b285:	mov    esi,0x1
  40b28a:	xor    eax,eax
  40b28c:	call   405200 <__fprintf_chk@plt>
  40b291:	mov    rdi,QWORD PTR [rbx+0xd0]
  40b298:	push   rbx
  40b299:	lea    rdx,[rip+0x27250]        # 4324f0 <_IO_stdin_used@@Base+0x54f0>
  40b2a0:	push   rbx
  40b2a1:	push   rbx
  40b2a2:	mov    r9,rbx
  40b2a5:	push   rbx
  40b2a6:	push   rbx
  40b2a7:	mov    r8,rbx
  40b2aa:	push   rbx
  40b2ab:	push   rbx
  40b2ac:	mov    rcx,rbx
  40b2af:	push   rbx
  40b2b0:	mov    esi,0x1
  40b2b5:	xor    eax,eax
  40b2b7:	call   405200 <__fprintf_chk@plt>
  40b2bc:	mov    rdi,QWORD PTR [rbx+0xd0]
  40b2c3:	lea    rdx,[rip+0x2737e]        # 432648 <_IO_stdin_used@@Base+0x5648>
  40b2ca:	add    rsp,0x40
  40b2ce:	mov    r8,rbx
  40b2d1:	mov    rcx,rbx
  40b2d4:	mov    esi,0x1
  40b2d9:	xor    eax,eax
  40b2db:	call   405200 <__fprintf_chk@plt>
  40b2e0:	mov    rdi,QWORD PTR [rbx+0xd0]
  40b2e7:	lea    rdx,[rip+0x2742a]        # 432718 <_IO_stdin_used@@Base+0x5718>
  40b2ee:	mov    r9,rbx
  40b2f1:	mov    r8,rbx
  40b2f4:	mov    rcx,rbx
  40b2f7:	mov    esi,0x1
  40b2fc:	xor    eax,eax
  40b2fe:	call   405200 <__fprintf_chk@plt>
  40b303:	mov    rdi,QWORD PTR [rbx+0xd0]
  40b30a:	lea    rdx,[rip+0x274bf]        # 4327d0 <_IO_stdin_used@@Base+0x57d0>
  40b311:	mov    r9,rbx
  40b314:	mov    r8,rbx
  40b317:	mov    rcx,rbx
  40b31a:	mov    esi,0x1
  40b31f:	xor    eax,eax
  40b321:	call   405200 <__fprintf_chk@plt>
  40b326:	mov    rdi,QWORD PTR [rbx+0xd0]
  40b32d:	lea    rdx,[rip+0x27654]        # 432988 <_IO_stdin_used@@Base+0x5988>
  40b334:	mov    rcx,rbx
  40b337:	mov    esi,0x1
  40b33c:	xor    eax,eax
  40b33e:	call   405200 <__fprintf_chk@plt>
  40b343:	mov    rdi,QWORD PTR [rbx+0xd0]
  40b34a:	lea    rdx,[rip+0x276e7]        # 432a38 <_IO_stdin_used@@Base+0x5a38>
  40b351:	mov    rcx,rbx
  40b354:	mov    esi,0x1
  40b359:	xor    eax,eax
  40b35b:	call   405200 <__fprintf_chk@plt>
  40b360:	mov    rdi,QWORD PTR [rbx+0xd0]
  40b367:	lea    rdx,[rip+0x277fa]        # 432b68 <_IO_stdin_used@@Base+0x5b68>
  40b36e:	mov    r8,rbx
  40b371:	mov    rcx,rbx
  40b374:	mov    esi,0x1
  40b379:	xor    eax,eax
  40b37b:	call   405200 <__fprintf_chk@plt>
  40b380:	mov    rdi,QWORD PTR [rbx+0xd0]
  40b387:	lea    rdx,[rip+0x2792a]        # 432cb8 <_IO_stdin_used@@Base+0x5cb8>
  40b38e:	mov    r8,rbx
  40b391:	mov    rcx,rbx
  40b394:	mov    esi,0x1
  40b399:	xor    eax,eax
  40b39b:	call   405200 <__fprintf_chk@plt>
  40b3a0:	mov    rdi,QWORD PTR [rbx+0xd0]
  40b3a7:	push   rbx
  40b3a8:	lea    rdx,[rip+0x279e1]        # 432d90 <_IO_stdin_used@@Base+0x5d90>
  40b3af:	push   rbx
  40b3b0:	push   rbx
  40b3b1:	mov    r9,rbx
  40b3b4:	push   rbx
  40b3b5:	push   rbx
  40b3b6:	mov    r8,rbx
  40b3b9:	push   rbx
  40b3ba:	push   rbx
  40b3bb:	mov    rcx,rbx
  40b3be:	push   rbx
  40b3bf:	mov    esi,0x1
  40b3c4:	xor    eax,eax
  40b3c6:	call   405200 <__fprintf_chk@plt>
  40b3cb:	add    rsp,0x40
  40b3cf:	mov    rdi,QWORD PTR [rbx+0xd0]
  40b3d6:	lea    rdx,[rip+0x27b33]        # 432f10 <_IO_stdin_used@@Base+0x5f10>
  40b3dd:	push   rbx
  40b3de:	push   rbx
  40b3df:	mov    r9,rbx
  40b3e2:	push   rbx
  40b3e3:	push   rbx
  40b3e4:	mov    r8,rbx
  40b3e7:	push   rbx
  40b3e8:	push   rbx
  40b3e9:	mov    rcx,rbx
  40b3ec:	push   rbx
  40b3ed:	push   rbx
  40b3ee:	mov    esi,0x1
  40b3f3:	xor    eax,eax
  40b3f5:	call   405200 <__fprintf_chk@plt>
  40b3fa:	add    rsp,0x40
  40b3fe:	mov    rdi,QWORD PTR [rbx+0xd0]
  40b405:	lea    rdx,[rip+0x27c8c]        # 433098 <_IO_stdin_used@@Base+0x6098>
  40b40c:	push   rbx
  40b40d:	push   rbx
  40b40e:	mov    r9,rbx
  40b411:	push   rbx
  40b412:	push   rbx
  40b413:	mov    r8,rbx
  40b416:	mov    rcx,rbx
  40b419:	mov    esi,0x1
  40b41e:	xor    eax,eax
  40b420:	call   405200 <__fprintf_chk@plt>
  40b425:	add    rsp,0x20
  40b429:	mov    rdi,QWORD PTR [rbx+0xd0]
  40b430:	lea    rdx,[rip+0x27fb9]        # 4333f0 <_IO_stdin_used@@Base+0x63f0>
  40b437:	push   rbx
  40b438:	push   rbx
  40b439:	mov    r9,rbx
  40b43c:	push   rbx
  40b43d:	push   rbx
  40b43e:	mov    r8,rbx
  40b441:	push   rbx
  40b442:	push   rbx
  40b443:	mov    rcx,rbx
  40b446:	push   rbx
  40b447:	push   rbx
  40b448:	mov    esi,0x1
  40b44d:	xor    eax,eax
  40b44f:	call   405200 <__fprintf_chk@plt>
  40b454:	add    rsp,0x40
  40b458:	mov    rdi,QWORD PTR [rbx+0xd0]
  40b45f:	lea    rdx,[rip+0x282aa]        # 433710 <_IO_stdin_used@@Base+0x6710>
  40b466:	push   rbx
  40b467:	push   rbx
  40b468:	mov    r9,rbx
  40b46b:	push   rbx
  40b46c:	push   rbx
  40b46d:	mov    r8,rbx
  40b470:	push   rbx
  40b471:	push   rbx
  40b472:	mov    rcx,rbx
  40b475:	push   rbx
  40b476:	push   rbx
  40b477:	mov    esi,0x1
  40b47c:	push   rbx
  40b47d:	push   rbx
  40b47e:	xor    eax,eax
  40b480:	call   405200 <__fprintf_chk@plt>
  40b485:	mov    rdi,QWORD PTR [rbx+0xd0]
  40b48c:	lea    rdx,[rip+0x2894d]        # 433de0 <_IO_stdin_used@@Base+0x6de0>
  40b493:	add    rsp,0x50
  40b497:	mov    rcx,rbx
  40b49a:	mov    esi,0x1
  40b49f:	xor    eax,eax
  40b4a1:	call   405200 <__fprintf_chk@plt>
  40b4a6:	mov    rdi,QWORD PTR [rbx+0xd0]
  40b4ad:	lea    rdx,[rip+0x28b7c]        # 434030 <_IO_stdin_used@@Base+0x7030>
  40b4b4:	xor    eax,eax
  40b4b6:	mov    rcx,rbx
  40b4b9:	mov    esi,0x1
  40b4be:	call   405200 <__fprintf_chk@plt>
  40b4c3:	mov    rax,QWORD PTR [rbx+0xe0]
  40b4ca:	mov    r9d,DWORD PTR [rax+0xa8]
  40b4d1:	test   r9d,r9d
  40b4d4:	je     40b840 <__flatcc_fb_gen_common_c_header@@Base+0xba0>
  40b4da:	mov    rdi,rbx
  40b4dd:	call   40c010 <__flatcc_gen_sort@@Base>
  40b4e2:	mov    rdi,QWORD PTR [rbx+0xd0]
  40b4e9:	push   rbx
  40b4ea:	lea    rdx,[rip+0x29007]        # 4344f8 <_IO_stdin_used@@Base+0x74f8>
  40b4f1:	push   rbx
  40b4f2:	mov    r8,rbx
  40b4f5:	mov    esi,0x1
  40b4fa:	xor    eax,eax
  40b4fc:	mov    r9,rbx
  40b4ff:	mov    rcx,rbx
  40b502:	call   405200 <__fprintf_chk@plt>
  40b507:	mov    rax,QWORD PTR [rbx+0xe0]
  40b50e:	pop    rsi
  40b50f:	pop    rdi
  40b510:	mov    r8d,DWORD PTR [rax+0xa8]
  40b517:	mov    rdi,QWORD PTR [rbx+0xd0]
  40b51e:	test   r8d,r8d
  40b521:	je     40b820 <__flatcc_fb_gen_common_c_header@@Base+0xb80>
  40b527:	lea    rdx,[rip+0x290b2]        # 4345e0 <_IO_stdin_used@@Base+0x75e0>
  40b52e:	mov    rcx,rbx
  40b531:	mov    esi,0x1
  40b536:	xor    eax,eax
  40b538:	call   405200 <__fprintf_chk@plt>
  40b53d:	mov    rdi,QWORD PTR [rbx+0xd0]
  40b544:	lea    rdx,[rip+0x3a2c2]        # 44580d <_IO_stdin_used@@Base+0x1880d>
  40b54b:	mov    esi,0x1
  40b550:	xor    eax,eax
  40b552:	call   405200 <__fprintf_chk@plt>
  40b557:	mov    rdi,QWORD PTR [rbx+0xd0]
  40b55e:	lea    rdx,[rip+0x2909b]        # 434600 <_IO_stdin_used@@Base+0x7600>
  40b565:	mov    r9,rbx
  40b568:	mov    r8,rbx
  40b56b:	mov    rcx,rbx
  40b56e:	mov    esi,0x1
  40b573:	xor    eax,eax
  40b575:	call   405200 <__fprintf_chk@plt>
  40b57a:	sub    rsp,0x8
  40b57e:	mov    rdi,QWORD PTR [rbx+0xd0]
  40b585:	lea    rdx,[rip+0x290f4]        # 434680 <_IO_stdin_used@@Base+0x7680>
  40b58c:	push   rbx
  40b58d:	push   rbx
  40b58e:	mov    r9,rbx
  40b591:	push   rbx
  40b592:	push   rbx
  40b593:	mov    r8,rbx
  40b596:	push   rbx
  40b597:	push   rbx
  40b598:	mov    rcx,rbx
  40b59b:	push   rbx
  40b59c:	push   rbx
  40b59d:	mov    esi,0x1
  40b5a2:	push   rbx
  40b5a3:	push   rbx
  40b5a4:	xor    eax,eax
  40b5a6:	push   rbx
  40b5a7:	push   rbx
  40b5a8:	push   rbx
  40b5a9:	push   rbx
  40b5aa:	push   rbx
  40b5ab:	push   rbx
  40b5ac:	push   rbx
  40b5ad:	push   rbx
  40b5ae:	push   rbx
  40b5af:	push   rbx
  40b5b0:	push   rbx
  40b5b1:	push   rbx
  40b5b2:	push   rbx
  40b5b3:	call   405200 <__fprintf_chk@plt>
  40b5b8:	add    rsp,0xb8
  40b5bf:	mov    rdi,QWORD PTR [rbx+0xd0]
  40b5c6:	lea    rdx,[rip+0x292cb]        # 434898 <_IO_stdin_used@@Base+0x7898>
  40b5cd:	push   rbx
  40b5ce:	push   rbx
  40b5cf:	mov    r9,rbx
  40b5d2:	push   rbx
  40b5d3:	push   rbx
  40b5d4:	mov    r8,rbx
  40b5d7:	push   rbx
  40b5d8:	push   rbx
  40b5d9:	mov    rcx,rbx
  40b5dc:	push   rbx
  40b5dd:	push   rbx
  40b5de:	mov    esi,0x1
  40b5e3:	push   rbx
  40b5e4:	xor    eax,eax
  40b5e6:	call   405200 <__fprintf_chk@plt>
  40b5eb:	add    rsp,0x48
  40b5ef:	mov    rdi,QWORD PTR [rbx+0xd0]
  40b5f6:	lea    rdx,[rip+0x293eb]        # 4349e8 <_IO_stdin_used@@Base+0x79e8>
  40b5fd:	push   rbx
  40b5fe:	push   rbx
  40b5ff:	mov    rcx,rbx
  40b602:	push   rbx
  40b603:	push   rbx
  40b604:	xor    eax,eax
  40b606:	push   rbx
  40b607:	push   rbx
  40b608:	mov    r9,rbx
  40b60b:	push   rbx
  40b60c:	push   rbx
  40b60d:	mov    r8,rbx
  40b610:	push   rbx
  40b611:	push   rbx
  40b612:	mov    esi,0x1
  40b617:	push   rbx
  40b618:	push   rbx
  40b619:	push   rbx
  40b61a:	push   rbx
  40b61b:	push   rbx
  40b61c:	push   rbx
  40b61d:	push   rbx
  40b61e:	push   rbx
  40b61f:	push   rbx
  40b620:	push   rbx
  40b621:	push   rbx
  40b622:	push   rbx
  40b623:	push   rbx
  40b624:	push   rbx
  40b625:	push   rbx
  40b626:	push   rbx
  40b627:	push   rbx
  40b628:	push   rbx
  40b629:	push   rbx
  40b62a:	push   rbx
  40b62b:	push   rbx
  40b62c:	push   rbx
  40b62d:	push   rbx
  40b62e:	push   rbx
  40b62f:	push   rbx
  40b630:	push   rbx
  40b631:	push   rbx
  40b632:	push   rbx
  40b633:	push   rbx
  40b634:	push   rbx
  40b635:	push   rbx
  40b636:	push   rbx
  40b637:	push   rbx
  40b638:	push   rbx
  40b639:	push   rbx
  40b63a:	push   rbx
  40b63b:	push   rbx
  40b63c:	push   rbx
  40b63d:	push   rbx
  40b63e:	push   rbx
  40b63f:	push   rbx
  40b640:	push   rbx
  40b641:	push   rbx
  40b642:	push   rbx
  40b643:	push   rbx
  40b644:	push   rbx
  40b645:	push   rbx
  40b646:	call   405200 <__fprintf_chk@plt>
  40b64b:	mov    rax,QWORD PTR [rbx+0xe0]
  40b652:	add    rsp,0x1d0
  40b659:	mov    ecx,DWORD PTR [rax+0xa8]
  40b65f:	test   ecx,ecx
  40b661:	jne    40b8c0 <__flatcc_fb_gen_common_c_header@@Base+0xc20>
  40b667:	mov    rdi,QWORD PTR [rbx+0xd0]
  40b66e:	lea    rdx,[rip+0x29a33]        # 4350a8 <_IO_stdin_used@@Base+0x80a8>
  40b675:	xor    eax,eax
  40b677:	mov    r8,rbx
  40b67a:	mov    rcx,rbx
  40b67d:	mov    esi,0x1
  40b682:	call   405200 <__fprintf_chk@plt>
  40b687:	mov    rax,QWORD PTR [rbx+0xe0]
  40b68e:	mov    rdi,QWORD PTR [rbx+0xd0]
  40b695:	mov    edx,DWORD PTR [rax+0x24]
  40b698:	test   edx,edx
  40b69a:	jne    40b8a0 <__flatcc_fb_gen_common_c_header@@Base+0xc00>
  40b6a0:	lea    rdx,[rip+0x3a166]        # 44580d <_IO_stdin_used@@Base+0x1880d>
  40b6a7:	mov    esi,0x1
  40b6ac:	xor    eax,eax
  40b6ae:	call   405200 <__fprintf_chk@plt>
  40b6b3:	mov    rdi,QWORD PTR [rbx+0xd0]
  40b6ba:	lea    rdx,[rip+0x29a87]        # 435148 <_IO_stdin_used@@Base+0x8148>
  40b6c1:	mov    rcx,rbx
  40b6c4:	mov    esi,0x1
  40b6c9:	xor    eax,eax
  40b6cb:	call   405200 <__fprintf_chk@plt>
  40b6d0:	sub    rsp,0x8
  40b6d4:	mov    rdi,QWORD PTR [rbx+0xd0]
  40b6db:	lea    rdx,[rip+0x29ae6]        # 4351c8 <_IO_stdin_used@@Base+0x81c8>
  40b6e2:	push   rbx
  40b6e3:	push   rbx
  40b6e4:	mov    r9,rbx
  40b6e7:	push   rbx
  40b6e8:	push   rbx
  40b6e9:	mov    r8,rbx
  40b6ec:	push   rbx
  40b6ed:	push   rbx
  40b6ee:	mov    rcx,rbx
  40b6f1:	push   rbx
  40b6f2:	push   rbx
  40b6f3:	mov    esi,0x1
  40b6f8:	push   rbx
  40b6f9:	push   rbx
  40b6fa:	xor    eax,eax
  40b6fc:	push   rbx
  40b6fd:	call   405200 <__fprintf_chk@plt>
  40b702:	mov    rdi,QWORD PTR [rbx+0xd0]
  40b709:	lea    rdx,[rip+0x29e08]        # 435518 <_IO_stdin_used@@Base+0x8518>
  40b710:	add    rsp,0x60
  40b714:	mov    r9,rbx
  40b717:	mov    r8,rbx
  40b71a:	mov    rcx,rbx
  40b71d:	mov    esi,0x1
  40b722:	xor    eax,eax
  40b724:	call   405200 <__fprintf_chk@plt>
  40b729:	sub    rsp,0x8
  40b72d:	mov    rdi,QWORD PTR [rbx+0xd0]
  40b734:	lea    rdx,[rip+0x29e95]        # 4355d0 <_IO_stdin_used@@Base+0x85d0>
  40b73b:	push   rbx
  40b73c:	push   rbx
  40b73d:	mov    r9,rbx
  40b740:	push   rbx
  40b741:	mov    r8,rbx
  40b744:	mov    rcx,rbx
  40b747:	mov    esi,0x1
  40b74c:	xor    eax,eax
  40b74e:	call   405200 <__fprintf_chk@plt>
  40b753:	add    rsp,0x18
  40b757:	mov    rdi,QWORD PTR [rbx+0xd0]
  40b75e:	lea    rdx,[rip+0x2a033]        # 435798 <_IO_stdin_used@@Base+0x8798>
  40b765:	push   rbx
  40b766:	mov    r9,rbx
  40b769:	mov    r8,rbx
  40b76c:	mov    rcx,rbx
  40b76f:	mov    esi,0x1
  40b774:	xor    eax,eax
  40b776:	call   405200 <__fprintf_chk@plt>
  40b77b:	mov    rdi,QWORD PTR [rbx+0xd0]
  40b782:	mov    QWORD PTR [rsp],rbx
  40b786:	lea    rdx,[rip+0x2a28b]        # 435a18 <_IO_stdin_used@@Base+0x8a18>
  40b78d:	push   rbx
  40b78e:	push   rbx
  40b78f:	mov    r9,rbx
  40b792:	push   rbx
  40b793:	push   rbx
  40b794:	mov    r8,rbx
  40b797:	push   rbx
  40b798:	push   rbx
  40b799:	mov    rcx,rbx
  40b79c:	mov    esi,0x1
  40b7a1:	xor    eax,eax
  40b7a3:	call   405200 <__fprintf_chk@plt>
  40b7a8:	mov    rdi,QWORD PTR [rbx+0xd0]
  40b7af:	lea    rdx,[rip+0x3a057]        # 44580d <_IO_stdin_used@@Base+0x1880d>
  40b7b6:	add    rsp,0x40
  40b7ba:	xor    eax,eax
  40b7bc:	mov    esi,0x1
  40b7c1:	call   405200 <__fprintf_chk@plt>
  40b7c6:	mov    rax,QWORD PTR [rbx+0xe0]
  40b7cd:	mov    rdi,QWORD PTR [rbx+0xd0]
  40b7d4:	mov    eax,DWORD PTR [rax+0xac]
  40b7da:	test   eax,eax
  40b7dc:	je     40b7f8 <__flatcc_fb_gen_common_c_header@@Base+0xb58>
  40b7de:	lea    rdx,[rip+0x2a51b]        # 435d00 <_IO_stdin_used@@Base+0x8d00>
  40b7e5:	mov    esi,0x1
  40b7ea:	xor    eax,eax
  40b7ec:	call   405200 <__fprintf_chk@plt>
  40b7f1:	mov    rdi,QWORD PTR [rbx+0xd0]
  40b7f8:	lea    rdx,[rip+0x2ac2b]        # 43642a <_IO_stdin_used@@Base+0x942a>
  40b7ff:	mov    rcx,rbp
  40b802:	mov    esi,0x1
  40b807:	xor    eax,eax
  40b809:	call   405200 <__fprintf_chk@plt>
  40b80e:	add    rsp,0x8
  40b812:	xor    eax,eax
  40b814:	pop    rbx
  40b815:	pop    rbp
  40b816:	ret    
  40b817:	nop    WORD PTR [rax+rax*1+0x0]
  40b820:	lea    rdx,[rip+0x39fe6]        # 44580d <_IO_stdin_used@@Base+0x1880d>
  40b827:	mov    esi,0x1
  40b82c:	xor    eax,eax
  40b82e:	call   405200 <__fprintf_chk@plt>
  40b833:	jmp    40b53d <__flatcc_fb_gen_common_c_header@@Base+0x89d>
  40b838:	nop    DWORD PTR [rax+rax*1+0x0]
  40b840:	mov    rdi,QWORD PTR [rbx+0xd0]
  40b847:	lea    rdx,[rip+0x2abad]        # 4363fb <_IO_stdin_used@@Base+0x93fb>
  40b84e:	mov    esi,0x1
  40b853:	xor    eax,eax
  40b855:	call   405200 <__fprintf_chk@plt>
  40b85a:	jmp    40b4e2 <__flatcc_fb_gen_common_c_header@@Base+0x842>
  40b85f:	nop
  40b860:	lea    rdx,[rip+0x39fa6]        # 44580d <_IO_stdin_used@@Base+0x1880d>
  40b867:	mov    esi,0x1
  40b86c:	xor    eax,eax
  40b86e:	call   405200 <__fprintf_chk@plt>
  40b873:	jmp    40af4c <__flatcc_fb_gen_common_c_header@@Base+0x2ac>
  40b878:	nop    DWORD PTR [rax+rax*1+0x0]
  40b880:	lea    rdx,[rip+0x39f86]        # 44580d <_IO_stdin_used@@Base+0x1880d>
  40b887:	mov    esi,0x1
  40b88c:	xor    eax,eax
  40b88e:	call   405200 <__fprintf_chk@plt>
  40b893:	jmp    40ae1d <__flatcc_fb_gen_common_c_header@@Base+0x17d>
  40b898:	nop    DWORD PTR [rax+rax*1+0x0]
  40b8a0:	lea    rdx,[rip+0x24e69]        # 430710 <_IO_stdin_used@@Base+0x3710>
  40b8a7:	mov    rcx,rbx
  40b8aa:	mov    esi,0x1
  40b8af:	xor    eax,eax
  40b8b1:	call   405200 <__fprintf_chk@plt>
  40b8b6:	jmp    40b6b3 <__flatcc_fb_gen_common_c_header@@Base+0xa13>
  40b8bb:	nop    DWORD PTR [rax+rax*1+0x0]
  40b8c0:	mov    rdi,QWORD PTR [rbx+0xd0]
  40b8c7:	lea    rdx,[rip+0x2ab42]        # 436410 <_IO_stdin_used@@Base+0x9410>
  40b8ce:	mov    rcx,rbx
  40b8d1:	mov    esi,0x1
  40b8d6:	xor    eax,eax
  40b8d8:	call   405200 <__fprintf_chk@plt>
  40b8dd:	jmp    40b667 <__flatcc_fb_gen_common_c_header@@Base+0x9c7>
  40b8e2:	nop    WORD PTR [rax+rax*1+0x0]
  40b8e8:	mov    rdi,QWORD PTR [rbx+0xd0]
  40b8ef:	push   rbx
  40b8f0:	lea    rdx,[rip+0x245b1]        # 42fea8 <_IO_stdin_used@@Base+0x2ea8>
  40b8f7:	push   rbx
  40b8f8:	mov    r9,rbx
  40b8fb:	mov    r8,rbx
  40b8fe:	mov    rcx,rbx
  40b901:	mov    esi,0x1
  40b906:	xor    eax,eax
  40b908:	call   405200 <__fprintf_chk@plt>
  40b90d:	mov    rdi,QWORD PTR [rbx+0xd0]
  40b914:	lea    rcx,[rip+0x39ef2]        # 44580d <_IO_stdin_used@@Base+0x1880d>
  40b91b:	lea    rdx,[rip+0x24656]        # 42ff78 <_IO_stdin_used@@Base+0x2f78>
  40b922:	mov    r9,rbx
  40b925:	mov    r8,rbx
  40b928:	mov    esi,0x1
  40b92d:	xor    eax,eax
  40b92f:	mov    QWORD PTR [rsp],rbx
  40b933:	call   405200 <__fprintf_chk@plt>
  40b938:	mov    rdi,QWORD PTR [rbx+0xd0]
  40b93f:	push   rbx
  40b940:	lea    rdx,[rip+0x24789]        # 4300d0 <_IO_stdin_used@@Base+0x30d0>
  40b947:	push   rbx
  40b948:	mov    r8,rbx
  40b94b:	mov    rcx,rbx
  40b94e:	mov    r9,rbx
  40b951:	mov    esi,0x1
  40b956:	xor    eax,eax
  40b958:	call   405200 <__fprintf_chk@plt>
  40b95d:	mov    rdi,QWORD PTR [rbx+0xd0]
  40b964:	lea    rdx,[rip+0x249cd]        # 430338 <_IO_stdin_used@@Base+0x3338>
  40b96b:	add    rsp,0x20
  40b96f:	mov    r8,rbp
  40b972:	mov    rcx,rbp
  40b975:	mov    esi,0x1
  40b97a:	xor    eax,eax
  40b97c:	call   405200 <__fprintf_chk@plt>
  40b981:	jmp    40ad59 <__flatcc_fb_gen_common_c_header@@Base+0xb9>
  40b986:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40b990:	lea    rdx,[rip+0x244b9]        # 42fe50 <_IO_stdin_used@@Base+0x2e50>
  40b997:	mov    esi,0x1
  40b99c:	xor    eax,eax
  40b99e:	call   405200 <__fprintf_chk@plt>
  40b9a3:	mov    rdi,QWORD PTR [rbx+0xd0]
  40b9aa:	jmp    40ad2f <__flatcc_fb_gen_common_c_header@@Base+0x8f>
  40b9af:	nop
  40b9b0:	mov    rdi,QWORD PTR [rbx+0xd0]
  40b9b7:	lea    rdx,[rip+0x2440a]        # 42fdc8 <_IO_stdin_used@@Base+0x2dc8>
  40b9be:	mov    esi,0x1
  40b9c3:	xor    eax,eax
  40b9c5:	call   405200 <__fprintf_chk@plt>
  40b9ca:	mov    rax,QWORD PTR [rbx+0xe0]
  40b9d1:	jmp    40ad18 <__flatcc_fb_gen_common_c_header@@Base+0x78>
  40b9d6:	nop    WORD PTR cs:[rax+rax*1+0x0]

000000000040b9e0 <__flatcc_fb_gen_c_reader@@Base>:
  40b9e0:	push   r15
  40b9e2:	push   r14
  40b9e4:	lea    rdx,[rip+0x2a33d]        # 435d28 <_IO_stdin_used@@Base+0x8d28>
  40b9eb:	push   r13
  40b9ed:	push   r12
  40b9ef:	lea    r12,[rdi+0x66]
  40b9f3:	push   rbp
  40b9f4:	push   rbx
  40b9f5:	mov    rbx,rdi
  40b9f8:	mov    esi,0x1
  40b9fd:	sub    rsp,0x118
  40ba04:	mov    rax,QWORD PTR fs:0x28
  40ba0d:	mov    QWORD PTR [rsp+0x108],rax
  40ba15:	xor    eax,eax
  40ba17:	mov    rax,QWORD PTR [rdi+0xe0]
  40ba1e:	mov    ebp,DWORD PTR [rax+0xa4]
  40ba24:	mov    rax,QWORD PTR [rdi+0xd8]
  40ba2b:	mov    rdi,QWORD PTR [rdi+0xd0]
  40ba32:	mov    rcx,QWORD PTR [rax+0x118]
  40ba39:	xor    eax,eax
  40ba3b:	mov    r8,rcx
  40ba3e:	call   405200 <__fprintf_chk@plt>
  40ba43:	mov    rdi,QWORD PTR [rbx+0xd0]
  40ba4a:	lea    rdx,[rip+0x242e7]        # 42fd38 <_IO_stdin_used@@Base+0x2d38>
  40ba51:	xor    eax,eax
  40ba53:	mov    esi,0x1
  40ba58:	call   405200 <__fprintf_chk@plt>
  40ba5d:	test   ebp,ebp
  40ba5f:	mov    rdi,QWORD PTR [rbx+0xd0]
  40ba66:	jne    40bfa0 <__flatcc_fb_gen_c_reader@@Base+0x5c0>
  40ba6c:	lea    rdx,[rip+0x2a4a5]        # 435f18 <_IO_stdin_used@@Base+0x8f18>
  40ba73:	mov    r8,rbx
  40ba76:	mov    rcx,r12
  40ba79:	mov    esi,0x1
  40ba7e:	xor    eax,eax
  40ba80:	call   405200 <__fprintf_chk@plt>
  40ba85:	lea    rdx,[rip+0x2a9b8]        # 436444 <_IO_stdin_used@@Base+0x9444>
  40ba8c:	lea    rsi,[rip+0x22ea2]        # 42e935 <_IO_stdin_used@@Base+0x1935>
  40ba93:	mov    rdi,rbx
  40ba96:	call   4070a0 <__flatcc_fb_gen_c_includes@@Base>
  40ba9b:	mov    rdi,QWORD PTR [rbx+0xd0]
  40baa2:	lea    rdx,[rip+0x2a4af]        # 435f58 <_IO_stdin_used@@Base+0x8f58>
  40baa9:	mov    esi,0x1
  40baae:	xor    eax,eax
  40bab0:	call   405200 <__fprintf_chk@plt>
  40bab5:	mov    rdi,QWORD PTR [rbx+0xd0]
  40babc:	lea    rdx,[rip+0x2a665]        # 436128 <_IO_stdin_used@@Base+0x9128>
  40bac3:	mov    esi,0x1
  40bac8:	xor    eax,eax
  40baca:	call   405200 <__fprintf_chk@plt>
  40bacf:	mov    rax,QWORD PTR [rbx+0xe0]
  40bad6:	mov    rdi,QWORD PTR [rbx+0xd0]
  40badd:	mov    r8d,DWORD PTR [rax+0xac]
  40bae4:	test   r8d,r8d
  40bae7:	jne    40bf00 <__flatcc_fb_gen_c_reader@@Base+0x520>
  40baed:	mov    rax,QWORD PTR [rbx+0xd8]
  40baf4:	cmp    WORD PTR [rax+0x20],0x2
  40baf9:	je     40bf2c <__flatcc_fb_gen_c_reader@@Base+0x54c>
  40baff:	lea    rdx,[rip+0x2a4b2]        # 435fb8 <_IO_stdin_used@@Base+0x8fb8>
  40bb06:	xor    eax,eax
  40bb08:	mov    r8,rbx
  40bb0b:	mov    rcx,rbx
  40bb0e:	mov    esi,0x1
  40bb13:	call   405200 <__fprintf_chk@plt>
  40bb18:	mov    rax,QWORD PTR [rbx+0xd8]
  40bb1f:	cmp    WORD PTR [rax+0x38],0x2
  40bb24:	je     40bf64 <__flatcc_fb_gen_c_reader@@Base+0x584>
  40bb2a:	mov    rax,QWORD PTR [rbx+0xe0]
  40bb31:	mov    rdi,QWORD PTR [rbx+0xd0]
  40bb38:	lea    rdx,[rip+0x2a4e1]        # 436020 <_IO_stdin_used@@Base+0x9020>
  40bb3f:	mov    r8,rbx
  40bb42:	mov    rcx,rbx
  40bb45:	mov    esi,0x1
  40bb4a:	mov    r9,QWORD PTR [rax+0x78]
  40bb4e:	xor    eax,eax
  40bb50:	call   405200 <__fprintf_chk@plt>
  40bb55:	mov    rdi,QWORD PTR [rbx+0xd0]
  40bb5c:	lea    rdx,[rip+0x39caa]        # 44580d <_IO_stdin_used@@Base+0x1880d>
  40bb63:	xor    eax,eax
  40bb65:	mov    esi,0x1
  40bb6a:	call   405200 <__fprintf_chk@plt>
  40bb6f:	mov    rax,QWORD PTR [rbx+0xd8]
  40bb76:	mov    rbp,QWORD PTR [rax+0x48]
  40bb7a:	test   rbp,rbp
  40bb7d:	je     40bb97 <__flatcc_fb_gen_c_reader@@Base+0x1b7>
  40bb7f:	nop
  40bb80:	mov    rsi,rbp
  40bb83:	mov    rdi,rbx
  40bb86:	call   4076d0 <__flatcc_fb_codegen_c@@Base+0x220>
  40bb8b:	mov    rbp,QWORD PTR [rbp+0xc0]
  40bb92:	test   rbp,rbp
  40bb95:	jne    40bb80 <__flatcc_fb_gen_c_reader@@Base+0x1a0>
  40bb97:	mov    rdi,QWORD PTR [rbx+0xd0]
  40bb9e:	lea    rdx,[rip+0x39c68]        # 44580d <_IO_stdin_used@@Base+0x1880d>
  40bba5:	xor    eax,eax
  40bba7:	mov    esi,0x1
  40bbac:	call   405200 <__fprintf_chk@plt>
  40bbb1:	mov    rax,QWORD PTR [rbx+0xd8]
  40bbb8:	mov    rbp,QWORD PTR [rax+0x40]
  40bbbc:	test   rbp,rbp
  40bbbf:	jne    40bbd9 <__flatcc_fb_gen_c_reader@@Base+0x1f9>
  40bbc1:	jmp    40bd15 <__flatcc_fb_gen_c_reader@@Base+0x335>
  40bbc6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40bbd0:	mov    rbp,QWORD PTR [rbp+0x0]
  40bbd4:	test   rbp,rbp
  40bbd7:	je     40bbf4 <__flatcc_fb_gen_c_reader@@Base+0x214>
  40bbd9:	cmp    WORD PTR [rbp+0x10],0x0
  40bbde:	jne    40bbd0 <__flatcc_fb_gen_c_reader@@Base+0x1f0>
  40bbe0:	mov    rsi,rbp
  40bbe3:	mov    rdi,rbx
  40bbe6:	call   4076d0 <__flatcc_fb_codegen_c@@Base+0x220>
  40bbeb:	mov    rbp,QWORD PTR [rbp+0x0]
  40bbef:	test   rbp,rbp
  40bbf2:	jne    40bbd9 <__flatcc_fb_gen_c_reader@@Base+0x1f9>
  40bbf4:	mov    rax,QWORD PTR [rbx+0xd8]
  40bbfb:	mov    r14,QWORD PTR [rax+0x40]
  40bbff:	test   r14,r14
  40bc02:	je     40bd15 <__flatcc_fb_gen_c_reader@@Base+0x335>
  40bc08:	lea    r13,[rsp+0xf0]
  40bc10:	mov    rbp,rsp
  40bc13:	lea    r12,[r13+0x10]
  40bc17:	jmp    40bc2c <__flatcc_fb_gen_c_reader@@Base+0x24c>
  40bc19:	nop    DWORD PTR [rax+0x0]
  40bc20:	mov    r14,QWORD PTR [r14]
  40bc23:	test   r14,r14
  40bc26:	je     40bd15 <__flatcc_fb_gen_c_reader@@Base+0x335>
  40bc2c:	cmp    WORD PTR [r14+0x10],0x1
  40bc32:	ja     40bc20 <__flatcc_fb_gen_c_reader@@Base+0x240>
  40bc34:	xor    eax,eax
  40bc36:	mov    ecx,0x1d
  40bc3b:	mov    rdi,rbp
  40bc3e:	rep stos QWORD PTR es:[rdi],rax
  40bc41:	mov    rdx,rbp
  40bc44:	mov    rsi,r14
  40bc47:	mov    rdi,QWORD PTR [r14+0x18]
  40bc4b:	call   407300 <__flatcc_fb_scoped_symbol_name@@Base>
  40bc50:	mov    rdi,QWORD PTR [rbx+0xd0]
  40bc57:	lea    rdx,[rip+0x2a3fa]        # 436058 <_IO_stdin_used@@Base+0x9058>
  40bc5e:	mov    r15d,DWORD PTR [r14+0xa0]
  40bc65:	mov    r9,rbx
  40bc68:	mov    r8,rbp
  40bc6b:	mov    rcx,rbp
  40bc6e:	mov    esi,0x1
  40bc73:	xor    eax,eax
  40bc75:	call   405200 <__fprintf_chk@plt>
  40bc7a:	mov    rdi,QWORD PTR [rbx+0xd0]
  40bc81:	lea    rdx,[rip+0x2a418]        # 4360a0 <_IO_stdin_used@@Base+0x90a0>
  40bc88:	mov    r9d,r15d
  40bc8b:	mov    r8,rbx
  40bc8e:	mov    rcx,rbp
  40bc91:	mov    esi,0x1
  40bc96:	xor    eax,eax
  40bc98:	call   405200 <__fprintf_chk@plt>
  40bc9d:	mov    rax,r13
  40bca0:	mov    edx,r15d
  40bca3:	mov    BYTE PTR [rax],0x5c
  40bca6:	mov    BYTE PTR [rax+0x1],0x78
  40bcaa:	and    edx,0xf
  40bcad:	cmp    dl,0xa
  40bcb0:	sbb    ecx,ecx
  40bcb2:	and    ecx,0xffffffd9
  40bcb5:	lea    edx,[rdx+rcx*1+0x57]
  40bcb9:	mov    BYTE PTR [rax+0x3],dl
  40bcbc:	mov    edx,r15d
  40bcbf:	shr    edx,0x4
  40bcc2:	and    edx,0xf
  40bcc5:	cmp    dl,0xa
  40bcc8:	sbb    ecx,ecx
  40bcca:	add    rax,0x4
  40bcce:	shr    r15d,0x8
  40bcd2:	and    ecx,0xffffffd9
  40bcd5:	lea    edx,[rdx+rcx*1+0x57]
  40bcd9:	mov    BYTE PTR [rax-0x2],dl
  40bcdc:	cmp    rax,r12
  40bcdf:	jne    40bca0 <__flatcc_fb_gen_c_reader@@Base+0x2c0>
  40bce1:	mov    rdi,QWORD PTR [rbx+0xd0]
  40bce8:	lea    rdx,[rip+0x2a3e1]        # 4360d0 <_IO_stdin_used@@Base+0x90d0>
  40bcef:	xor    eax,eax
  40bcf1:	mov    r8,r13
  40bcf4:	mov    rcx,rbp
  40bcf7:	mov    esi,0x1
  40bcfc:	mov    BYTE PTR [rsp+0x100],0x0
  40bd04:	call   405200 <__fprintf_chk@plt>
  40bd09:	mov    r14,QWORD PTR [r14]
  40bd0c:	test   r14,r14
  40bd0f:	jne    40bc2c <__flatcc_fb_gen_c_reader@@Base+0x24c>
  40bd15:	mov    rdi,QWORD PTR [rbx+0xd0]
  40bd1c:	lea    rdx,[rip+0x39aea]        # 44580d <_IO_stdin_used@@Base+0x1880d>
  40bd23:	xor    eax,eax
  40bd25:	mov    esi,0x1
  40bd2a:	call   405200 <__fprintf_chk@plt>
  40bd2f:	mov    rax,QWORD PTR [rbx+0xd8]
  40bd36:	mov    rbp,QWORD PTR [rax+0x40]
  40bd3a:	test   rbp,rbp
  40bd3d:	jne    40bd51 <__flatcc_fb_gen_c_reader@@Base+0x371>
  40bd3f:	jmp    40bd6c <__flatcc_fb_gen_c_reader@@Base+0x38c>
  40bd41:	nop    DWORD PTR [rax+0x0]
  40bd48:	mov    rbp,QWORD PTR [rbp+0x0]
  40bd4c:	test   rbp,rbp
  40bd4f:	je     40bd6c <__flatcc_fb_gen_c_reader@@Base+0x38c>
  40bd51:	cmp    WORD PTR [rbp+0x10],0x3
  40bd56:	jne    40bd48 <__flatcc_fb_gen_c_reader@@Base+0x368>
  40bd58:	mov    rsi,rbp
  40bd5b:	mov    rdi,rbx
  40bd5e:	call   4078b0 <__flatcc_fb_codegen_c@@Base+0x400>
  40bd63:	mov    rbp,QWORD PTR [rbp+0x0]
  40bd67:	test   rbp,rbp
  40bd6a:	jne    40bd51 <__flatcc_fb_gen_c_reader@@Base+0x371>
  40bd6c:	mov    rdi,QWORD PTR [rbx+0xd0]
  40bd73:	lea    rdx,[rip+0x39a93]        # 44580d <_IO_stdin_used@@Base+0x1880d>
  40bd7a:	xor    eax,eax
  40bd7c:	mov    esi,0x1
  40bd81:	call   405200 <__fprintf_chk@plt>
  40bd86:	mov    rax,QWORD PTR [rbx+0xd8]
  40bd8d:	mov    rbp,QWORD PTR [rax+0x48]
  40bd91:	test   rbp,rbp
  40bd94:	je     40bdbe <__flatcc_fb_gen_c_reader@@Base+0x3de>
  40bd96:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40bda0:	mov    rsi,rbp
  40bda3:	mov    rdi,rbx
  40bda6:	call   4084c0 <__flatcc_fb_codegen_c@@Base+0x1010>
  40bdab:	mov    rbp,QWORD PTR [rbp+0xc0]
  40bdb2:	test   rbp,rbp
  40bdb5:	jne    40bda0 <__flatcc_fb_gen_c_reader@@Base+0x3c0>
  40bdb7:	mov    rax,QWORD PTR [rbx+0xd8]
  40bdbe:	mov    rbp,QWORD PTR [rax+0x40]
  40bdc2:	test   rbp,rbp
  40bdc5:	je     40bdef <__flatcc_fb_gen_c_reader@@Base+0x40f>
  40bdc7:	movzx  eax,WORD PTR [rbp+0x10]
  40bdcb:	cmp    ax,0x3
  40bdcf:	ja     40be90 <__flatcc_fb_gen_c_reader@@Base+0x4b0>
  40bdd5:	cmp    ax,0x1
  40bdd9:	jae    40bde6 <__flatcc_fb_gen_c_reader@@Base+0x406>
  40bddb:	mov    rsi,rbp
  40bdde:	mov    rdi,rbx
  40bde1:	call   4093d0 <__flatcc_fb_codegen_c@@Base+0x1f20>
  40bde6:	mov    rbp,QWORD PTR [rbp+0x0]
  40bdea:	test   rbp,rbp
  40bded:	jne    40bdc7 <__flatcc_fb_gen_c_reader@@Base+0x3e7>
  40bdef:	mov    rdi,QWORD PTR [rbx+0xd0]
  40bdf6:	lea    rdx,[rip+0x39a10]        # 44580d <_IO_stdin_used@@Base+0x1880d>
  40bdfd:	xor    eax,eax
  40bdff:	mov    esi,0x1
  40be04:	call   405200 <__fprintf_chk@plt>
  40be09:	mov    rax,QWORD PTR [rbx+0xe0]
  40be10:	mov    rdi,QWORD PTR [rbx+0xd0]
  40be17:	mov    eax,DWORD PTR [rax+0xac]
  40be1d:	test   eax,eax
  40be1f:	je     40be3b <__flatcc_fb_gen_c_reader@@Base+0x45b>
  40be21:	lea    rdx,[rip+0x29ed8]        # 435d00 <_IO_stdin_used@@Base+0x8d00>
  40be28:	mov    esi,0x1
  40be2d:	xor    eax,eax
  40be2f:	call   405200 <__fprintf_chk@plt>
  40be34:	mov    rdi,QWORD PTR [rbx+0xd0]
  40be3b:	mov    rax,QWORD PTR [rbx+0xd8]
  40be42:	lea    rdx,[rip+0x2a605]        # 43644e <_IO_stdin_used@@Base+0x944e>
  40be49:	mov    esi,0x1
  40be4e:	mov    rcx,QWORD PTR [rax+0x118]
  40be55:	xor    eax,eax
  40be57:	call   405200 <__fprintf_chk@plt>
  40be5c:	xor    eax,eax
  40be5e:	mov    rsi,QWORD PTR [rsp+0x108]
  40be66:	xor    rsi,QWORD PTR fs:0x28
  40be6f:	jne    40c008 <__flatcc_fb_gen_c_reader@@Base+0x628>
  40be75:	add    rsp,0x118
  40be7c:	pop    rbx
  40be7d:	pop    rbp
  40be7e:	pop    r12
  40be80:	pop    r13
  40be82:	pop    r14
  40be84:	pop    r15
  40be86:	ret    
  40be87:	nop    WORD PTR [rax+rax*1+0x0]
  40be90:	cmp    ax,0x4
  40be94:	jne    40beb0 <__flatcc_fb_gen_c_reader@@Base+0x4d0>
  40be96:	mov    rsi,rbp
  40be99:	mov    rdi,rbx
  40be9c:	call   4078b0 <__flatcc_fb_codegen_c@@Base+0x400>
  40bea1:	jmp    40bde6 <__flatcc_fb_gen_c_reader@@Base+0x406>
  40bea6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40beb0:	mov    rax,QWORD PTR [rip+0x45131]        # 450fe8 <stderr@GLIBC_2.2.5>
  40beb7:	lea    rcx,[rip+0x22ac2]        # 42e980 <_IO_stdin_used@@Base+0x1980>
  40bebe:	lea    rdx,[rip+0x2a31c]        # 4361e1 <_IO_stdin_used@@Base+0x91e1>
  40bec5:	lea    r9,[rip+0x2a22c]        # 4360f8 <_IO_stdin_used@@Base+0x90f8>
  40becc:	mov    esi,0x1
  40bed1:	mov    r8d,0x688
  40bed7:	mov    rdi,QWORD PTR [rax]
  40beda:	xor    eax,eax
  40bedc:	call   405200 <__fprintf_chk@plt>
  40bee1:	lea    rcx,[rip+0x2a8e8]        # 4367d0 <_IO_stdin_used@@Base+0x97d0>
  40bee8:	lea    rsi,[rip+0x22a91]        # 42e980 <_IO_stdin_used@@Base+0x1980>
  40beef:	lea    rdi,[rip+0x2b333]        # 437229 <_IO_stdin_used@@Base+0xa229>
  40bef6:	mov    edx,0x688
  40befb:	call   405100 <__assert_fail@plt>
  40bf00:	lea    rdx,[rip+0x23f49]        # 42fe50 <_IO_stdin_used@@Base+0x2e50>
  40bf07:	xor    eax,eax
  40bf09:	mov    esi,0x1
  40bf0e:	call   405200 <__fprintf_chk@plt>
  40bf13:	mov    rax,QWORD PTR [rbx+0xd8]
  40bf1a:	mov    rdi,QWORD PTR [rbx+0xd0]
  40bf21:	cmp    WORD PTR [rax+0x20],0x2
  40bf26:	jne    40baff <__flatcc_fb_gen_c_reader@@Base+0x11f>
  40bf2c:	sub    rsp,0x8
  40bf30:	push   QWORD PTR [rax+0x10]
  40bf33:	mov    r9d,DWORD PTR [rax+0x18]
  40bf37:	lea    rdx,[rip+0x2a042]        # 435f80 <_IO_stdin_used@@Base+0x8f80>
  40bf3e:	mov    esi,0x1
  40bf43:	xor    eax,eax
  40bf45:	mov    r8,rbx
  40bf48:	mov    rcx,rbx
  40bf4b:	call   405200 <__fprintf_chk@plt>
  40bf50:	mov    rax,QWORD PTR [rbx+0xd8]
  40bf57:	pop    rsi
  40bf58:	pop    rdi
  40bf59:	cmp    WORD PTR [rax+0x38],0x2
  40bf5e:	jne    40bb2a <__flatcc_fb_gen_c_reader@@Base+0x14a>
  40bf64:	sub    rsp,0x8
  40bf68:	mov    rdi,QWORD PTR [rbx+0xd0]
  40bf6f:	push   QWORD PTR [rax+0x28]
  40bf72:	mov    r9d,DWORD PTR [rax+0x30]
  40bf76:	lea    rdx,[rip+0x2a073]        # 435ff0 <_IO_stdin_used@@Base+0x8ff0>
  40bf7d:	mov    rcx,rbx
  40bf80:	mov    r8,rbx
  40bf83:	mov    esi,0x1
  40bf88:	xor    eax,eax
  40bf8a:	call   405200 <__fprintf_chk@plt>
  40bf8f:	pop    rdx
  40bf90:	pop    rcx
  40bf91:	jmp    40bb55 <__flatcc_fb_gen_c_reader@@Base+0x175>
  40bf96:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40bfa0:	lea    rdx,[rip+0x29db1]        # 435d58 <_IO_stdin_used@@Base+0x8d58>
  40bfa7:	mov    esi,0x1
  40bfac:	xor    eax,eax
  40bfae:	call   405200 <__fprintf_chk@plt>
  40bfb3:	mov    rdi,QWORD PTR [rbx+0xd0]
  40bfba:	lea    rdx,[rip+0x29f57]        # 435f18 <_IO_stdin_used@@Base+0x8f18>
  40bfc1:	mov    r8,rbx
  40bfc4:	mov    rcx,r12
  40bfc7:	mov    esi,0x1
  40bfcc:	xor    eax,eax
  40bfce:	call   405200 <__fprintf_chk@plt>
  40bfd3:	lea    rdx,[rip+0x2a46a]        # 436444 <_IO_stdin_used@@Base+0x9444>
  40bfda:	lea    rsi,[rip+0x22954]        # 42e935 <_IO_stdin_used@@Base+0x1935>
  40bfe1:	mov    rdi,rbx
  40bfe4:	call   4070a0 <__flatcc_fb_gen_c_includes@@Base>
  40bfe9:	mov    rdi,QWORD PTR [rbx+0xd0]
  40bff0:	lea    rdx,[rip+0x29f61]        # 435f58 <_IO_stdin_used@@Base+0x8f58>
  40bff7:	mov    esi,0x1
  40bffc:	xor    eax,eax
  40bffe:	call   405200 <__fprintf_chk@plt>
  40c003:	jmp    40bacf <__flatcc_fb_gen_c_reader@@Base+0xef>
  40c008:	call   4050d0 <__stack_chk_fail@plt>
  40c00d:	nop    DWORD PTR [rax]

000000000040c010 <__flatcc_gen_sort@@Base>:
  40c010:	push   rbx
  40c011:	mov    rbx,rdi
  40c014:	mov    rdi,QWORD PTR [rdi+0xd0]
  40c01b:	lea    rdx,[rip+0x2a7ce]        # 4367f0 <_IO_stdin_used@@Base+0x97f0>
  40c022:	mov    rcx,rbx
  40c025:	mov    esi,0x1
  40c02a:	xor    eax,eax
  40c02c:	call   405200 <__fprintf_chk@plt>
  40c031:	mov    rdi,QWORD PTR [rbx+0xd0]
  40c038:	lea    rdx,[rip+0x2ab81]        # 436bc0 <_IO_stdin_used@@Base+0x9bc0>
  40c03f:	mov    r8,rbx
  40c042:	mov    rcx,rbx
  40c045:	mov    esi,0x1
  40c04a:	xor    eax,eax
  40c04c:	call   405200 <__fprintf_chk@plt>
  40c051:	mov    rdi,QWORD PTR [rbx+0xd0]
  40c058:	lea    rdx,[rip+0x2ac71]        # 436cd0 <_IO_stdin_used@@Base+0x9cd0>
  40c05f:	mov    r9,rbx
  40c062:	mov    r8,rbx
  40c065:	mov    rcx,rbx
  40c068:	mov    esi,0x1
  40c06d:	xor    eax,eax
  40c06f:	call   405200 <__fprintf_chk@plt>
  40c074:	sub    rsp,0x8
  40c078:	mov    rdi,QWORD PTR [rbx+0xd0]
  40c07f:	lea    rdx,[rip+0x2ad22]        # 436da8 <_IO_stdin_used@@Base+0x9da8>
  40c086:	push   rbx
  40c087:	mov    r9,rbx
  40c08a:	mov    r8,rbx
  40c08d:	mov    rcx,rbx
  40c090:	mov    esi,0x1
  40c095:	xor    eax,eax
  40c097:	call   405200 <__fprintf_chk@plt>
  40c09c:	mov    rdi,QWORD PTR [rbx+0xd0]
  40c0a3:	lea    rdx,[rip+0x2ad96]        # 436e40 <_IO_stdin_used@@Base+0x9e40>
  40c0aa:	mov    r8,rbx
  40c0ad:	mov    rcx,rbx
  40c0b0:	mov    esi,0x1
  40c0b5:	xor    eax,eax
  40c0b7:	call   405200 <__fprintf_chk@plt>
  40c0bc:	mov    rdi,QWORD PTR [rbx+0xd0]
  40c0c3:	lea    rdx,[rip+0x2af0e]        # 436fd8 <_IO_stdin_used@@Base+0x9fd8>
  40c0ca:	mov    r9,rbx
  40c0cd:	mov    r8,rbx
  40c0d0:	mov    rcx,rbx
  40c0d3:	mov    esi,0x1
  40c0d8:	xor    eax,eax
  40c0da:	mov    QWORD PTR [rsp],rbx
  40c0de:	call   405200 <__fprintf_chk@plt>
  40c0e3:	mov    rdi,QWORD PTR [rbx+0xd0]
  40c0ea:	mov    QWORD PTR [rsp],rbx
  40c0ee:	lea    rdx,[rip+0x2af6b]        # 437060 <_IO_stdin_used@@Base+0xa060>
  40c0f5:	push   rbx
  40c0f6:	push   rbx
  40c0f7:	mov    r9,rbx
  40c0fa:	mov    r8,rbx
  40c0fd:	mov    rcx,rbx
  40c100:	mov    esi,0x1
  40c105:	xor    eax,eax
  40c107:	call   405200 <__fprintf_chk@plt>
  40c10c:	add    rsp,0x18
  40c110:	mov    rdi,QWORD PTR [rbx+0xd0]
  40c117:	lea    rdx,[rip+0x2afd2]        # 4370f0 <_IO_stdin_used@@Base+0xa0f0>
  40c11e:	push   rbx
  40c11f:	mov    r9,rbx
  40c122:	mov    r8,rbx
  40c125:	mov    rcx,rbx
  40c128:	mov    esi,0x1
  40c12d:	xor    eax,eax
  40c12f:	call   405200 <__fprintf_chk@plt>
  40c134:	mov    rdi,QWORD PTR [rbx+0xd0]
  40c13b:	push   rbx
  40c13c:	lea    rdx,[rip+0x2b015]        # 437158 <_IO_stdin_used@@Base+0xa158>
  40c143:	push   rbx
  40c144:	push   rbx
  40c145:	mov    r9,rbx
  40c148:	push   rbx
  40c149:	mov    r8,rbx
  40c14c:	mov    rcx,rbx
  40c14f:	mov    esi,0x1
  40c154:	xor    eax,eax
  40c156:	call   405200 <__fprintf_chk@plt>
  40c15b:	add    rsp,0x30
  40c15f:	xor    eax,eax
  40c161:	pop    rbx
  40c162:	ret    
  40c163:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40c16d:	nop    DWORD PTR [rax]
  40c170:	push   rbp
  40c171:	push   rbx
  40c172:	sub    rsp,0x8
  40c176:	test   rdi,rdi
  40c179:	je     40c1bd <__flatcc_gen_sort@@Base+0x1ad>
  40c17b:	mov    rbx,rdi
  40c17e:	xor    ebp,ebp
  40c180:	test   BYTE PTR [rbx+0x70],0x4
  40c184:	jne    40c19b <__flatcc_gen_sort@@Base+0x18b>
  40c186:	cmp    WORD PTR [rbx+0x28],0xe
  40c18b:	jne    40c198 <__flatcc_gen_sort@@Base+0x188>
  40c18d:	mov    rax,QWORD PTR [rbx+0x18]
  40c191:	cmp    WORD PTR [rax+0x10],0x1
  40c196:	je     40c1b0 <__flatcc_gen_sort@@Base+0x1a0>
  40c198:	add    ebp,0x1
  40c19b:	mov    rbx,QWORD PTR [rbx]
  40c19e:	test   rbx,rbx
  40c1a1:	jne    40c180 <__flatcc_gen_sort@@Base+0x170>
  40c1a3:	add    rsp,0x8
  40c1a7:	mov    eax,ebp
  40c1a9:	pop    rbx
  40c1aa:	pop    rbp
  40c1ab:	ret    
  40c1ac:	nop    DWORD PTR [rax+0x0]
  40c1b0:	mov    rdi,QWORD PTR [rax+0x28]
  40c1b4:	call   40c170 <__flatcc_gen_sort@@Base+0x160>
  40c1b9:	add    ebp,eax
  40c1bb:	jmp    40c19b <__flatcc_gen_sort@@Base+0x18b>
  40c1bd:	xor    ebp,ebp
  40c1bf:	jmp    40c1a3 <__flatcc_gen_sort@@Base+0x193>
  40c1c1:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40c1cc:	nop    DWORD PTR [rax+0x0]
  40c1d0:	push   r15
  40c1d2:	push   r14
  40c1d4:	mov    r14d,edx
  40c1d7:	push   r13
  40c1d9:	push   r12
  40c1db:	lea    rdx,[rip+0x2afed]        # 4371cf <_IO_stdin_used@@Base+0xa1cf>
  40c1e2:	push   rbp
  40c1e3:	push   rbx
  40c1e4:	mov    rbp,rdi
  40c1e7:	mov    r13,r8
  40c1ea:	mov    r15,rsi
  40c1ed:	mov    rsi,r8
  40c1f0:	sub    rsp,0x208
  40c1f7:	mov    rax,QWORD PTR fs:0x28
  40c200:	mov    QWORD PTR [rsp+0x1f8],rax
  40c208:	xor    eax,eax
  40c20a:	lea    rax,[rip+0x3c5dd]        # 4487ee <fb_schema_table_missing@@Base+0x247e>
  40c211:	test   r9d,r9d
  40c214:	lea    rbx,[rsp+0x20]
  40c219:	lea    r12,[rsp+0x110]
  40c221:	mov    QWORD PTR [rsp+0x8],rcx
  40c226:	mov    ecx,0x1d
  40c22b:	cmovne rax,rdx
  40c22f:	mov    rdi,rbx
  40c232:	mov    rdx,rbx
  40c235:	mov    QWORD PTR [rsp],rax
  40c239:	xor    eax,eax
  40c23b:	rep stos QWORD PTR es:[rdi],rax
  40c23e:	mov    ecx,0x1d
  40c243:	mov    rdi,r12
  40c246:	rep stos QWORD PTR es:[rdi],rax
  40c249:	mov    rdi,QWORD PTR [r8+0x18]
  40c24d:	call   407300 <__flatcc_fb_scoped_symbol_name@@Base>
  40c252:	mov    r13,QWORD PTR [r13+0x28]
  40c256:	test   r13,r13
  40c259:	je     40c367 <__flatcc_gen_sort@@Base+0x357>
  40c25f:	mov    rax,QWORD PTR [r13+0x8]
  40c263:	mov    r8,QWORD PTR [rax]
  40c266:	mov    rcx,QWORD PTR [rax+0x8]
  40c26a:	movzx  eax,WORD PTR [r13+0x28]
  40c26f:	cmp    ax,0xa
  40c273:	je     40c398 <__flatcc_gen_sort@@Base+0x388>
  40c279:	cmp    ax,0xe
  40c27d:	je     40c2e0 <__flatcc_gen_sort@@Base+0x2d0>
  40c27f:	test   ax,ax
  40c282:	je     40c35a <__flatcc_gen_sort@@Base+0x34a>
  40c288:	mov    rax,QWORD PTR [rip+0x44d59]        # 450fe8 <stderr@GLIBC_2.2.5>
  40c28f:	lea    rcx,[rip+0x2b2b2]        # 437548 <_IO_stdin_used@@Base+0xa548>
  40c296:	lea    rdx,[rip+0x29f44]        # 4361e1 <_IO_stdin_used@@Base+0x91e1>
  40c29d:	lea    r9,[rip+0x2b34c]        # 4375f0 <_IO_stdin_used@@Base+0xa5f0>
  40c2a4:	mov    esi,0x1
  40c2a9:	mov    r8d,0x558
  40c2af:	mov    rdi,QWORD PTR [rax]
  40c2b2:	xor    eax,eax
  40c2b4:	call   405200 <__fprintf_chk@plt>
  40c2b9:	lea    rcx,[rip+0x34a00]        # 440cc0 <_IO_stdin_used@@Base+0x13cc0>
  40c2c0:	lea    rsi,[rip+0x2b281]        # 437548 <_IO_stdin_used@@Base+0xa548>
  40c2c7:	lea    rdi,[rip+0x2af5b]        # 437229 <_IO_stdin_used@@Base+0xa229>
  40c2ce:	mov    edx,0x558
  40c2d3:	call   405100 <__assert_fail@plt>
  40c2d8:	nop    DWORD PTR [rax+rax*1+0x0]
  40c2e0:	mov    rsi,QWORD PTR [r13+0x18]
  40c2e4:	mov    rdx,r12
  40c2e7:	mov    QWORD PTR [rsp+0x18],rcx
  40c2ec:	mov    QWORD PTR [rsp+0x10],r8
  40c2f1:	mov    rdi,QWORD PTR [rsi+0x18]
  40c2f5:	call   407300 <__flatcc_fb_scoped_symbol_name@@Base>
  40c2fa:	mov    rax,QWORD PTR [r13+0x18]
  40c2fe:	mov    r8,QWORD PTR [rsp+0x10]
  40c303:	mov    rcx,QWORD PTR [rsp+0x18]
  40c308:	movzx  eax,WORD PTR [rax+0x10]
  40c30c:	test   ax,ax
  40c30f:	je     40c3e0 <__flatcc_gen_sort@@Base+0x3d0>
  40c315:	cmp    ax,0x1
  40c319:	jne    40c430 <__flatcc_gen_sort@@Base+0x420>
  40c31f:	sub    rsp,0x8
  40c323:	mov    rdi,QWORD PTR [rbp+0xd0]
  40c32a:	lea    rdx,[rip+0x2b19f]        # 4374d0 <_IO_stdin_used@@Base+0xa4d0>
  40c331:	push   r12
  40c333:	push   r8
  40c335:	mov    r9,rbp
  40c338:	push   rcx
  40c339:	push   rbx
  40c33a:	mov    rcx,rbp
  40c33d:	push   QWORD PTR [rsp+0x30]
  40c341:	push   r14
  40c343:	mov    esi,0x1
  40c348:	push   r15
  40c34a:	mov    r8,QWORD PTR [rsp+0x40]
  40c34f:	xor    eax,eax
  40c351:	call   405200 <__fprintf_chk@plt>
  40c356:	add    rsp,0x40
  40c35a:	mov    r13,QWORD PTR [r13+0x0]
  40c35e:	test   r13,r13
  40c361:	jne    40c25f <__flatcc_gen_sort@@Base+0x24f>
  40c367:	xor    eax,eax
  40c369:	mov    rbx,QWORD PTR [rsp+0x1f8]
  40c371:	xor    rbx,QWORD PTR fs:0x28
  40c37a:	jne    40c480 <__flatcc_gen_sort@@Base+0x470>
  40c380:	add    rsp,0x208
  40c387:	pop    rbx
  40c388:	pop    rbp
  40c389:	pop    r12
  40c38b:	pop    r13
  40c38d:	pop    r14
  40c38f:	pop    r15
  40c391:	ret    
  40c392:	nop    WORD PTR [rax+rax*1+0x0]
  40c398:	mov    rdi,QWORD PTR [rbp+0xd0]
  40c39f:	push   r8
  40c3a1:	lea    rdx,[rip+0x2b210]        # 4375b8 <_IO_stdin_used@@Base+0xa5b8>
  40c3a8:	push   rcx
  40c3a9:	push   rbx
  40c3aa:	xor    eax,eax
  40c3ac:	push   QWORD PTR [rsp+0x20]
  40c3b0:	push   r14
  40c3b2:	mov    r9,rbp
  40c3b5:	push   r15
  40c3b7:	mov    r8,QWORD PTR [rsp+0x30]
  40c3bc:	mov    rcx,rbp
  40c3bf:	mov    esi,0x1
  40c3c4:	call   405200 <__fprintf_chk@plt>
  40c3c9:	mov    r13,QWORD PTR [r13+0x0]
  40c3cd:	add    rsp,0x30
  40c3d1:	test   r13,r13
  40c3d4:	jne    40c25f <__flatcc_gen_sort@@Base+0x24f>
  40c3da:	jmp    40c367 <__flatcc_gen_sort@@Base+0x357>
  40c3dc:	nop    DWORD PTR [rax+0x0]
  40c3e0:	sub    rsp,0x8
  40c3e4:	mov    rdi,QWORD PTR [rbp+0xd0]
  40c3eb:	lea    rdx,[rip+0x2b09e]        # 437490 <_IO_stdin_used@@Base+0xa490>
  40c3f2:	push   r12
  40c3f4:	push   r8
  40c3f6:	xor    eax,eax
  40c3f8:	push   rcx
  40c3f9:	push   rbx
  40c3fa:	mov    r9,rbp
  40c3fd:	push   QWORD PTR [rsp+0x30]
  40c401:	push   r14
  40c403:	mov    rcx,rbp
  40c406:	push   r15
  40c408:	mov    r8,QWORD PTR [rsp+0x40]
  40c40d:	mov    esi,0x1
  40c412:	call   405200 <__fprintf_chk@plt>
  40c417:	mov    r13,QWORD PTR [r13+0x0]
  40c41b:	add    rsp,0x40
  40c41f:	test   r13,r13
  40c422:	jne    40c25f <__flatcc_gen_sort@@Base+0x24f>
  40c428:	jmp    40c367 <__flatcc_gen_sort@@Base+0x357>
  40c42d:	nop    DWORD PTR [rax]
  40c430:	mov    rax,QWORD PTR [rip+0x44bb1]        # 450fe8 <stderr@GLIBC_2.2.5>
  40c437:	lea    rcx,[rip+0x2b10a]        # 437548 <_IO_stdin_used@@Base+0xa548>
  40c43e:	lea    rdx,[rip+0x29d9c]        # 4361e1 <_IO_stdin_used@@Base+0x91e1>
  40c445:	lea    r9,[rip+0x2b0c4]        # 437510 <_IO_stdin_used@@Base+0xa510>
  40c44c:	mov    esi,0x1
  40c451:	mov    r8d,0x54e
  40c457:	mov    rdi,QWORD PTR [rax]
  40c45a:	xor    eax,eax
  40c45c:	call   405200 <__fprintf_chk@plt>
  40c461:	lea    rcx,[rip+0x34858]        # 440cc0 <_IO_stdin_used@@Base+0x13cc0>
  40c468:	lea    rsi,[rip+0x2b0d9]        # 437548 <_IO_stdin_used@@Base+0xa548>
  40c46f:	lea    rdi,[rip+0x2adb3]        # 437229 <_IO_stdin_used@@Base+0xa229>
  40c476:	mov    edx,0x54e
  40c47b:	call   405100 <__assert_fail@plt>
  40c480:	call   4050d0 <__stack_chk_fail@plt>
  40c485:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40c490:	push   r15
  40c492:	push   r14
  40c494:	push   r13
  40c496:	push   r12
  40c498:	mov    r13d,edx
  40c49b:	push   rbp
  40c49c:	push   rbx
  40c49d:	mov    rbx,rdi
  40c4a0:	sub    rsp,0x18
  40c4a4:	mov    rdi,QWORD PTR [rsi+0x28]
  40c4a8:	call   40c170 <__flatcc_gen_sort@@Base+0x160>
  40c4ad:	test   eax,eax
  40c4af:	jle    40c57b <__flatcc_gen_sort@@Base+0x56b>
  40c4b5:	mov    r12d,eax
  40c4b8:	lea    r14,[rip+0x2ad1d]        # 4371dc <_IO_stdin_used@@Base+0xa1dc>
  40c4bf:	lea    rax,[rip+0x39347]        # 44580d <_IO_stdin_used@@Base+0x1880d>
  40c4c6:	test   r8d,r8d
  40c4c9:	mov    ebp,ecx
  40c4cb:	cmovne rax,r14
  40c4cf:	xor    r15d,r15d
  40c4d2:	mov    QWORD PTR [rsp+0x8],rax
  40c4d7:	jmp    40c52a <__flatcc_gen_sort@@Base+0x51a>
  40c4d9:	nop    DWORD PTR [rax+0x0]
  40c4e0:	cmp    ebp,0x4
  40c4e3:	jle    40c549 <__flatcc_gen_sort@@Base+0x539>
  40c4e5:	mov    rdi,QWORD PTR [rbx+0xd0]
  40c4ec:	mov    rcx,QWORD PTR [rsp+0x8]
  40c4f1:	lea    rdx,[rip+0x2ace7]        # 4371df <_IO_stdin_used@@Base+0xa1df>
  40c4f8:	mov    esi,0x1
  40c4fd:	xor    eax,eax
  40c4ff:	call   405200 <__fprintf_chk@plt>
  40c504:	mov    rdi,QWORD PTR [rbx+0xd0]
  40c50b:	lea    rdx,[rip+0x2ad36]        # 437248 <_IO_stdin_used@@Base+0xa248>
  40c512:	xor    eax,eax
  40c514:	mov    ecx,r14d
  40c517:	mov    esi,0x1
  40c51c:	add    r15,0x1
  40c520:	call   405200 <__fprintf_chk@plt>
  40c525:	cmp    r12d,r15d
  40c528:	jle    40c568 <__flatcc_gen_sort@@Base+0x558>
  40c52a:	test   ebp,ebp
  40c52c:	mov    eax,r15d
  40c52f:	lea    r14d,[r13+r15*1+0x0]
  40c534:	je     40c504 <__flatcc_gen_sort@@Base+0x4f4>
  40c536:	test   r15,r15
  40c539:	je     40c4e0 <__flatcc_gen_sort@@Base+0x4d0>
  40c53b:	test   al,0x3
  40c53d:	jne    40c549 <__flatcc_gen_sort@@Base+0x539>
  40c53f:	mov    ecx,ebp
  40c541:	sub    ecx,r15d
  40c544:	cmp    ecx,0x2
  40c547:	jg     40c4e5 <__flatcc_gen_sort@@Base+0x4d5>
  40c549:	mov    rdi,QWORD PTR [rbx+0xd0]
  40c550:	lea    rdx,[rip+0x2ac8e]        # 4371e5 <_IO_stdin_used@@Base+0xa1e5>
  40c557:	mov    esi,0x1
  40c55c:	xor    eax,eax
  40c55e:	call   405200 <__fprintf_chk@plt>
  40c563:	jmp    40c504 <__flatcc_gen_sort@@Base+0x4f4>
  40c565:	nop    DWORD PTR [rax]
  40c568:	lea    eax,[r12+r13*1]
  40c56c:	add    rsp,0x18
  40c570:	pop    rbx
  40c571:	pop    rbp
  40c572:	pop    r12
  40c574:	pop    r13
  40c576:	pop    r14
  40c578:	pop    r15
  40c57a:	ret    
  40c57b:	mov    eax,edx
  40c57d:	jmp    40c56c <__flatcc_gen_sort@@Base+0x55c>
  40c57f:	nop
  40c580:	push   r15
  40c582:	push   r14
  40c584:	mov    r15d,ecx
  40c587:	push   r13
  40c589:	push   r12
  40c58b:	mov    ecx,0x1d
  40c590:	push   rbp
  40c591:	push   rbx
  40c592:	mov    rbp,rdi
  40c595:	sub    rsp,0x118
  40c59c:	mov    rax,QWORD PTR fs:0x28
  40c5a5:	mov    QWORD PTR [rsp+0x108],rax
  40c5ad:	xor    eax,eax
  40c5af:	lea    rdi,[rsp+0x20]
  40c5b4:	cmp    r15d,0x1
  40c5b8:	mov    DWORD PTR [rsp+0x1c],edx
  40c5bc:	mov    DWORD PTR [rsp+0xc],r8d
  40c5c1:	mov    QWORD PTR [rsp],rdi
  40c5c5:	rep stos QWORD PTR es:[rdi],rax
  40c5c8:	lea    rax,[rip+0x2ac20]        # 4371ef <_IO_stdin_used@@Base+0xa1ef>
  40c5cf:	mov    QWORD PTR [rsp+0x10],rax
  40c5d4:	je     40c5f1 <__flatcc_gen_sort@@Base+0x5e1>
  40c5d6:	lea    rax,[rip+0x39231]        # 44580e <_IO_stdin_used@@Base+0x1880e>
  40c5dd:	lea    rdx,[rip+0x2ac04]        # 4371e8 <_IO_stdin_used@@Base+0xa1e8>
  40c5e4:	cmp    r15d,0x2
  40c5e8:	cmove  rax,rdx
  40c5ec:	mov    QWORD PTR [rsp+0x10],rax
  40c5f1:	mov    r12,QWORD PTR [rsi]
  40c5f4:	xor    ebx,ebx
  40c5f6:	test   r12,r12
  40c5f9:	je     40cad0 <__flatcc_gen_sort@@Base+0xac0>
  40c5ff:	mov    rax,QWORD PTR [r12+0x8]
  40c604:	xor    ebx,ebx
  40c606:	mov    DWORD PTR [rsp+0x18],0x0
  40c60e:	mov    r14,QWORD PTR [rax]
  40c611:	mov    r13d,DWORD PTR [rax+0x8]
  40c615:	movzx  eax,WORD PTR [r12+0x28]
  40c61b:	cmp    ax,0x8
  40c61f:	je     40c6c0 <__flatcc_gen_sort@@Base+0x6b0>
  40c625:	cmp    ax,0xe
  40c629:	jne    40c6e8 <__flatcc_gen_sort@@Base+0x6d8>
  40c62f:	mov    rsi,QWORD PTR [r12+0x18]
  40c634:	mov    rdx,QWORD PTR [rsp]
  40c638:	mov    rdi,QWORD PTR [rsi+0x18]
  40c63c:	call   407300 <__flatcc_fb_scoped_symbol_name@@Base>
  40c641:	mov    rax,QWORD PTR [r12+0x18]
  40c646:	cmp    WORD PTR [rax+0x10],0x1
  40c64b:	je     40c820 <__flatcc_gen_sort@@Base+0x810>
  40c651:	test   BYTE PTR [r12+0x70],0x4
  40c657:	jne    40c740 <__flatcc_gen_sort@@Base+0x730>
  40c65d:	cmp    QWORD PTR [r12+0x80],0x1
  40c666:	je     40c7b8 <__flatcc_gen_sort@@Base+0x7a8>
  40c66c:	cmp    r15d,0x1
  40c670:	je     40ca90 <__flatcc_gen_sort@@Base+0xa80>
  40c676:	cmp    r15d,0x2
  40c67a:	jne    40c7b8 <__flatcc_gen_sort@@Base+0x7a8>
  40c680:	mov    r8d,DWORD PTR [rsp+0xc]
  40c685:	mov    rdi,QWORD PTR [rbp+0xd0]
  40c68c:	test   r8d,r8d
  40c68f:	je     40cc00 <__flatcc_gen_sort@@Base+0xbf0>
  40c695:	push   r14
  40c697:	push   r13
  40c699:	lea    rdx,[rip+0x2b030]        # 4376d0 <_IO_stdin_used@@Base+0xa6d0>
  40c6a0:	mov    rcx,QWORD PTR [rsp+0x10]
  40c6a5:	mov    esi,0x1
  40c6aa:	mov    r9,r14
  40c6ad:	mov    r8d,r13d
  40c6b0:	xor    eax,eax
  40c6b2:	call   405200 <__fprintf_chk@plt>
  40c6b7:	pop    rcx
  40c6b8:	pop    rsi
  40c6b9:	jmp    40c7f0 <__flatcc_gen_sort@@Base+0x7e0>
  40c6be:	xchg   ax,ax
  40c6c0:	cmp    DWORD PTR [r12+0x18],0xb
  40c6c6:	ja     40ca00 <__flatcc_gen_sort@@Base+0x9f0>
  40c6cc:	mov    eax,DWORD PTR [r12+0x18]
  40c6d1:	lea    rcx,[rip+0x34388]        # 440a60 <_IO_stdin_used@@Base+0x13a60>
  40c6d8:	movsxd rax,DWORD PTR [rcx+rax*4]
  40c6dc:	add    rax,rcx
  40c6df:	jmp    rax
  40c6e1:	nop    DWORD PTR [rax+0x0]
  40c6e8:	mov    rax,QWORD PTR [rip+0x448f9]        # 450fe8 <stderr@GLIBC_2.2.5>
  40c6ef:	lea    rcx,[rip+0x2ae52]        # 437548 <_IO_stdin_used@@Base+0xa548>
  40c6f6:	lea    rdx,[rip+0x29ae4]        # 4361e1 <_IO_stdin_used@@Base+0x91e1>
  40c6fd:	lea    r9,[rip+0x2ab48]        # 43724c <_IO_stdin_used@@Base+0xa24c>
  40c704:	mov    esi,0x1
  40c709:	mov    r8d,0x3e1
  40c70f:	mov    rdi,QWORD PTR [rax]
  40c712:	xor    eax,eax
  40c714:	call   405200 <__fprintf_chk@plt>
  40c719:	lea    rcx,[rip+0x34660]        # 440d80 <_IO_stdin_used@@Base+0x13d80>
  40c720:	lea    rsi,[rip+0x2ae21]        # 437548 <_IO_stdin_used@@Base+0xa548>
  40c727:	lea    rdi,[rip+0x2aafb]        # 437229 <_IO_stdin_used@@Base+0xa229>
  40c72e:	mov    edx,0x3e1
  40c733:	call   405100 <__assert_fail@plt>
  40c738:	nop    DWORD PTR [rax+rax*1+0x0]
  40c740:	mov    eax,DWORD PTR [rsp+0x18]
  40c744:	mov    rdi,QWORD PTR [rbp+0xd0]
  40c74b:	lea    rdx,[rip+0x2aac3]        # 437215 <_IO_stdin_used@@Base+0xa215>
  40c752:	mov    esi,0x1
  40c757:	add    ebx,0x1
  40c75a:	lea    r13d,[rax+0x1]
  40c75e:	mov    ecx,eax
  40c760:	xor    eax,eax
  40c762:	call   405200 <__fprintf_chk@plt>
  40c767:	mov    DWORD PTR [rsp+0x18],r13d
  40c76c:	mov    r12,QWORD PTR [r12]
  40c770:	test   r12,r12
  40c773:	je     40cad0 <__flatcc_gen_sort@@Base+0xac0>
  40c779:	mov    rax,QWORD PTR [r12+0x8]
  40c77e:	test   ebx,ebx
  40c780:	mov    r14,QWORD PTR [rax]
  40c783:	mov    r13d,DWORD PTR [rax+0x8]
  40c787:	jle    40c615 <__flatcc_gen_sort@@Base+0x605>
  40c78d:	test   bl,0x3
  40c790:	mov    rdi,QWORD PTR [rbp+0xd0]
  40c797:	jne    40c800 <__flatcc_gen_sort@@Base+0x7f0>
  40c799:	lea    rdx,[rip+0x2aa58]        # 4371f8 <_IO_stdin_used@@Base+0xa1f8>
  40c7a0:	mov    esi,0x1
  40c7a5:	xor    eax,eax
  40c7a7:	call   405200 <__fprintf_chk@plt>
  40c7ac:	jmp    40c615 <__flatcc_gen_sort@@Base+0x605>
  40c7b1:	nop    DWORD PTR [rax+0x0]
  40c7b8:	mov    esi,DWORD PTR [rsp+0xc]
  40c7bc:	mov    rdi,QWORD PTR [rbp+0xd0]
  40c7c3:	test   esi,esi
  40c7c5:	jne    40c878 <__flatcc_gen_sort@@Base+0x868>
  40c7cb:	lea    rdx,[rip+0x2aa6c]        # 43723e <_IO_stdin_used@@Base+0xa23e>
  40c7d2:	mov    r9d,ebx
  40c7d5:	mov    r8,r14
  40c7d8:	mov    ecx,r13d
  40c7db:	mov    esi,0x1
  40c7e0:	xor    eax,eax
  40c7e2:	call   405200 <__fprintf_chk@plt>
  40c7e7:	nop    WORD PTR [rax+rax*1+0x0]
  40c7f0:	add    ebx,0x1
  40c7f3:	jmp    40c76c <__flatcc_gen_sort@@Base+0x75c>
  40c7f8:	nop    DWORD PTR [rax+rax*1+0x0]
  40c800:	lea    rdx,[rip+0x2a9f6]        # 4371fd <_IO_stdin_used@@Base+0xa1fd>
  40c807:	mov    esi,0x1
  40c80c:	xor    eax,eax
  40c80e:	call   405200 <__fprintf_chk@plt>
  40c813:	jmp    40c615 <__flatcc_gen_sort@@Base+0x605>
  40c818:	nop    DWORD PTR [rax+rax*1+0x0]
  40c820:	test   BYTE PTR [r12+0x70],0x4
  40c826:	mov    rdi,QWORD PTR [rbp+0xd0]
  40c82d:	jne    40c9c0 <__flatcc_gen_sort@@Base+0x9b0>
  40c833:	mov    ecx,DWORD PTR [rsp+0xc]
  40c837:	test   ecx,ecx
  40c839:	je     40cb70 <__flatcc_gen_sort@@Base+0xb60>
  40c83f:	sub    rsp,0x8
  40c843:	lea    rdx,[rip+0x2ae16]        # 437660 <_IO_stdin_used@@Base+0xa660>
  40c84a:	mov    r9d,r13d
  40c84d:	push   r14
  40c84f:	push   r13
  40c851:	mov    esi,0x1
  40c856:	push   r14
  40c858:	mov    r8,QWORD PTR [rsp+0x30]
  40c85d:	xor    eax,eax
  40c85f:	mov    rcx,QWORD PTR [rsp+0x20]
  40c864:	add    ebx,0x1
  40c867:	call   405200 <__fprintf_chk@plt>
  40c86c:	add    rsp,0x20
  40c870:	jmp    40c76c <__flatcc_gen_sort@@Base+0x75c>
  40c875:	nop    DWORD PTR [rax]
  40c878:	sub    rsp,0x8
  40c87c:	lea    rdx,[rip+0x2a9a8]        # 43722b <_IO_stdin_used@@Base+0xa22b>
  40c883:	mov    ecx,r13d
  40c886:	push   r14
  40c888:	mov    r9d,r13d
  40c88b:	mov    r8,r14
  40c88e:	mov    esi,0x1
  40c893:	xor    eax,eax
  40c895:	call   405200 <__fprintf_chk@plt>
  40c89a:	pop    rdx
  40c89b:	pop    rcx
  40c89c:	jmp    40c7f0 <__flatcc_gen_sort@@Base+0x7e0>
  40c8a1:	nop    DWORD PTR [rax+0x0]
  40c8a8:	lea    r8,[rip+0x299f9]        # 4362a8 <_IO_stdin_used@@Base+0x92a8>
  40c8af:	nop
  40c8b0:	test   BYTE PTR [r12+0x70],0x4
  40c8b6:	jne    40c740 <__flatcc_gen_sort@@Base+0x730>
  40c8bc:	cmp    QWORD PTR [r12+0x80],0x1
  40c8c5:	je     40c7b8 <__flatcc_gen_sort@@Base+0x7a8>
  40c8cb:	cmp    r15d,0x1
  40c8cf:	je     40ca50 <__flatcc_gen_sort@@Base+0xa40>
  40c8d5:	cmp    r15d,0x2
  40c8d9:	jne    40c7b8 <__flatcc_gen_sort@@Base+0x7a8>
  40c8df:	mov    r9d,DWORD PTR [rsp+0xc]
  40c8e4:	mov    rdi,QWORD PTR [rbp+0xd0]
  40c8eb:	test   r9d,r9d
  40c8ee:	je     40cb20 <__flatcc_gen_sort@@Base+0xb10>
  40c8f4:	sub    rsp,0x8
  40c8f8:	lea    rdx,[rip+0x2ae69]        # 437768 <_IO_stdin_used@@Base+0xa768>
  40c8ff:	mov    r9d,r13d
  40c902:	push   r14
  40c904:	push   r13
  40c906:	mov    rcx,rbp
  40c909:	push   r14
  40c90b:	mov    esi,0x1
  40c910:	xor    eax,eax
  40c912:	call   405200 <__fprintf_chk@plt>
  40c917:	add    rsp,0x20
  40c91b:	jmp    40c7f0 <__flatcc_gen_sort@@Base+0x7e0>
  40c920:	lea    r8,[rip+0x29988]        # 4362af <_IO_stdin_used@@Base+0x92af>
  40c927:	jmp    40c8b0 <__flatcc_gen_sort@@Base+0x8a0>
  40c929:	nop    DWORD PTR [rax+0x0]
  40c930:	lea    r8,[rip+0x2997e]        # 4362b5 <_IO_stdin_used@@Base+0x92b5>
  40c937:	jmp    40c8b0 <__flatcc_gen_sort@@Base+0x8a0>
  40c93c:	nop    DWORD PTR [rax+0x0]
  40c940:	lea    r8,[rip+0x29865]        # 4361ac <_IO_stdin_used@@Base+0x91ac>
  40c947:	jmp    40c8b0 <__flatcc_gen_sort@@Base+0x8a0>
  40c94c:	nop    DWORD PTR [rax+0x0]
  40c950:	lea    r8,[rip+0x2984f]        # 4361a6 <_IO_stdin_used@@Base+0x91a6>
  40c957:	jmp    40c8b0 <__flatcc_gen_sort@@Base+0x8a0>
  40c95c:	nop    DWORD PTR [rax+0x0]
  40c960:	lea    r8,[rip+0x29933]        # 43629a <_IO_stdin_used@@Base+0x929a>
  40c967:	jmp    40c8b0 <__flatcc_gen_sort@@Base+0x8a0>
  40c96c:	nop    DWORD PTR [rax+0x0]
  40c970:	lea    r8,[rip+0x2992a]        # 4362a1 <_IO_stdin_used@@Base+0x92a1>
  40c977:	jmp    40c8b0 <__flatcc_gen_sort@@Base+0x8a0>
  40c97c:	nop    DWORD PTR [rax+0x0]
  40c980:	lea    r8,[rip+0x29922]        # 4362a9 <_IO_stdin_used@@Base+0x92a9>
  40c987:	jmp    40c8b0 <__flatcc_gen_sort@@Base+0x8a0>
  40c98c:	nop    DWORD PTR [rax+0x0]
  40c990:	lea    r8,[rip+0x29919]        # 4362b0 <_IO_stdin_used@@Base+0x92b0>
  40c997:	jmp    40c8b0 <__flatcc_gen_sort@@Base+0x8a0>
  40c99c:	nop    DWORD PTR [rax+0x0]
  40c9a0:	lea    r8,[rip+0x298f4]        # 43629b <_IO_stdin_used@@Base+0x929b>
  40c9a7:	jmp    40c8b0 <__flatcc_gen_sort@@Base+0x8a0>
  40c9ac:	nop    DWORD PTR [rax+0x0]
  40c9b0:	lea    r8,[rip+0x298eb]        # 4362a2 <_IO_stdin_used@@Base+0x92a2>
  40c9b7:	jmp    40c8b0 <__flatcc_gen_sort@@Base+0x8a0>
  40c9bc:	nop    DWORD PTR [rax+0x0]
  40c9c0:	mov    r14d,DWORD PTR [rsp+0x18]
  40c9c5:	lea    rdx,[rip+0x2ac54]        # 437620 <_IO_stdin_used@@Base+0xa620>
  40c9cc:	mov    esi,0x1
  40c9d1:	xor    eax,eax
  40c9d3:	mov    r8d,r14d
  40c9d6:	mov    ecx,r14d
  40c9d9:	call   405200 <__fprintf_chk@plt>
  40c9de:	mov    eax,r14d
  40c9e1:	add    eax,0x1
  40c9e4:	mov    DWORD PTR [rsp+0x18],eax
  40c9e8:	mov    rax,QWORD PTR [r12+0x18]
  40c9ed:	mov    rdi,QWORD PTR [rax+0x28]
  40c9f1:	call   40c170 <__flatcc_gen_sort@@Base+0x160>
  40c9f6:	add    ebx,eax
  40c9f8:	jmp    40c76c <__flatcc_gen_sort@@Base+0x75c>
  40c9fd:	nop    DWORD PTR [rax]
  40ca00:	mov    rax,QWORD PTR [rip+0x445e1]        # 450fe8 <stderr@GLIBC_2.2.5>
  40ca07:	lea    rcx,[rip+0x22202]        # 42ec10 <_IO_stdin_used@@Base+0x1c10>
  40ca0e:	lea    rdx,[rip+0x297cc]        # 4361e1 <_IO_stdin_used@@Base+0x91e1>
  40ca15:	lea    r9,[rip+0x221bc]        # 42ebd8 <_IO_stdin_used@@Base+0x1bd8>
  40ca1c:	mov    esi,0x1
  40ca21:	mov    r8d,0x60
  40ca27:	mov    rdi,QWORD PTR [rax]
  40ca2a:	xor    eax,eax
  40ca2c:	call   405200 <__fprintf_chk@plt>
  40ca31:	lea    rcx,[rip+0x34318]        # 440d50 <_IO_stdin_used@@Base+0x13d50>
  40ca38:	lea    rsi,[rip+0x221d1]        # 42ec10 <_IO_stdin_used@@Base+0x1c10>
  40ca3f:	lea    rdi,[rip+0x2a7e3]        # 437229 <_IO_stdin_used@@Base+0xa229>
  40ca46:	mov    edx,0x60
  40ca4b:	call   405100 <__assert_fail@plt>
  40ca50:	mov    eax,DWORD PTR [rsp+0xc]
  40ca54:	mov    rdi,QWORD PTR [rbp+0xd0]
  40ca5b:	test   eax,eax
  40ca5d:	je     40cb48 <__flatcc_gen_sort@@Base+0xb38>
  40ca63:	sub    rsp,0x8
  40ca67:	lea    rdx,[rip+0x2acaa]        # 437718 <_IO_stdin_used@@Base+0xa718>
  40ca6e:	mov    r9d,r13d
  40ca71:	push   r14
  40ca73:	push   r13
  40ca75:	mov    rcx,rbp
  40ca78:	push   r14
  40ca7a:	mov    esi,0x1
  40ca7f:	xor    eax,eax
  40ca81:	call   405200 <__fprintf_chk@plt>
  40ca86:	add    rsp,0x20
  40ca8a:	jmp    40c7f0 <__flatcc_gen_sort@@Base+0x7e0>
  40ca8f:	nop
  40ca90:	mov    eax,DWORD PTR [rsp+0xc]
  40ca94:	mov    rdi,QWORD PTR [rbp+0xd0]
  40ca9b:	test   eax,eax
  40ca9d:	je     40cbd0 <__flatcc_gen_sort@@Base+0xbc0>
  40caa3:	push   r14
  40caa5:	push   r13
  40caa7:	lea    rdx,[rip+0x2abd2]        # 437680 <_IO_stdin_used@@Base+0xa680>
  40caae:	mov    rcx,QWORD PTR [rsp+0x10]
  40cab3:	mov    r8d,r13d
  40cab6:	mov    r9,r14
  40cab9:	mov    esi,0x1
  40cabe:	xor    eax,eax
  40cac0:	call   405200 <__fprintf_chk@plt>
  40cac5:	pop    r11
  40cac7:	pop    r13
  40cac9:	jmp    40c7f0 <__flatcc_gen_sort@@Base+0x7e0>
  40cace:	xchg   ax,ax
  40cad0:	mov    eax,DWORD PTR [rsp+0x1c]
  40cad4:	test   eax,eax
  40cad6:	jle    40caf2 <__flatcc_gen_sort@@Base+0xae2>
  40cad8:	mov    rdi,QWORD PTR [rbp+0xd0]
  40cadf:	lea    rdx,[rip+0x2a712]        # 4371f8 <_IO_stdin_used@@Base+0xa1f8>
  40cae6:	mov    esi,0x1
  40caeb:	xor    eax,eax
  40caed:	call   405200 <__fprintf_chk@plt>
  40caf2:	mov    rdx,QWORD PTR [rsp+0x108]
  40cafa:	xor    rdx,QWORD PTR fs:0x28
  40cb03:	mov    eax,ebx
  40cb05:	jne    40cc2a <__flatcc_gen_sort@@Base+0xc1a>
  40cb0b:	add    rsp,0x118
  40cb12:	pop    rbx
  40cb13:	pop    rbp
  40cb14:	pop    r12
  40cb16:	pop    r13
  40cb18:	pop    r14
  40cb1a:	pop    r15
  40cb1c:	ret    
  40cb1d:	nop    DWORD PTR [rax]
  40cb20:	push   rbx
  40cb21:	lea    rdx,[rip+0x2ac68]        # 437790 <_IO_stdin_used@@Base+0xa790>
  40cb28:	push   r14
  40cb2a:	mov    r9d,r13d
  40cb2d:	mov    rcx,rbp
  40cb30:	mov    esi,0x1
  40cb35:	xor    eax,eax
  40cb37:	call   405200 <__fprintf_chk@plt>
  40cb3c:	pop    rdi
  40cb3d:	pop    r8
  40cb3f:	jmp    40c7f0 <__flatcc_gen_sort@@Base+0x7e0>
  40cb44:	nop    DWORD PTR [rax+0x0]
  40cb48:	push   rbx
  40cb49:	lea    rdx,[rip+0x2abf0]        # 437740 <_IO_stdin_used@@Base+0xa740>
  40cb50:	push   r14
  40cb52:	mov    r9d,r13d
  40cb55:	mov    rcx,rbp
  40cb58:	mov    esi,0x1
  40cb5d:	xor    eax,eax
  40cb5f:	call   405200 <__fprintf_chk@plt>
  40cb64:	pop    r10
  40cb66:	pop    r11
  40cb68:	jmp    40c7f0 <__flatcc_gen_sort@@Base+0x7e0>
  40cb6d:	nop    DWORD PTR [rax]
  40cb70:	sub    rsp,0x8
  40cb74:	lea    rdx,[rip+0x2a685]        # 437200 <_IO_stdin_used@@Base+0xa200>
  40cb7b:	mov    r9d,r13d
  40cb7e:	push   r14
  40cb80:	mov    r8,QWORD PTR [rsp+0x20]
  40cb85:	mov    esi,0x1
  40cb8a:	mov    rcx,QWORD PTR [rsp+0x10]
  40cb8f:	xor    eax,eax
  40cb91:	call   405200 <__fprintf_chk@plt>
  40cb96:	mov    ecx,DWORD PTR [rsp+0x2c]
  40cb9a:	mov    rsi,QWORD PTR [r12+0x18]
  40cb9f:	mov    edx,ebx
  40cba1:	xor    r8d,r8d
  40cba4:	mov    rdi,rbp
  40cba7:	call   40c490 <__flatcc_gen_sort@@Base+0x480>
  40cbac:	mov    rdi,QWORD PTR [rbp+0xd0]
  40cbb3:	lea    rdx,[rip+0x2a7bd]        # 437377 <_IO_stdin_used@@Base+0xa377>
  40cbba:	mov    ebx,eax
  40cbbc:	mov    esi,0x1
  40cbc1:	xor    eax,eax
  40cbc3:	call   405200 <__fprintf_chk@plt>
  40cbc8:	pop    rax
  40cbc9:	pop    rdx
  40cbca:	jmp    40c76c <__flatcc_gen_sort@@Base+0x75c>
  40cbcf:	nop
  40cbd0:	sub    rsp,0x8
  40cbd4:	lea    rdx,[rip+0x2aacd]        # 4376a8 <_IO_stdin_used@@Base+0xa6a8>
  40cbdb:	mov    r9,r14
  40cbde:	push   rbx
  40cbdf:	mov    rcx,QWORD PTR [rsp+0x10]
  40cbe4:	mov    r8d,r13d
  40cbe7:	mov    esi,0x1
  40cbec:	xor    eax,eax
  40cbee:	call   405200 <__fprintf_chk@plt>
  40cbf3:	pop    r9
  40cbf5:	pop    r10
  40cbf7:	jmp    40c7f0 <__flatcc_gen_sort@@Base+0x7e0>
  40cbfc:	nop    DWORD PTR [rax+0x0]
  40cc00:	sub    rsp,0x8
  40cc04:	lea    rdx,[rip+0x2aaed]        # 4376f8 <_IO_stdin_used@@Base+0xa6f8>
  40cc0b:	mov    r9,r14
  40cc0e:	push   rbx
  40cc0f:	mov    rcx,QWORD PTR [rsp+0x10]
  40cc14:	mov    r8d,r13d
  40cc17:	mov    esi,0x1
  40cc1c:	xor    eax,eax
  40cc1e:	call   405200 <__fprintf_chk@plt>
  40cc23:	pop    rax
  40cc24:	pop    rdx
  40cc25:	jmp    40c7f0 <__flatcc_gen_sort@@Base+0x7e0>
  40cc2a:	call   4050d0 <__stack_chk_fail@plt>
  40cc2f:	nop
  40cc30:	push   r15
  40cc32:	push   r14
  40cc34:	mov    r14d,edx
  40cc37:	push   r13
  40cc39:	push   r12
  40cc3b:	mov    r12d,ecx
  40cc3e:	push   rbp
  40cc3f:	push   rbx
  40cc40:	mov    rbp,rdi
  40cc43:	mov    ecx,0x1d
  40cc48:	sub    rsp,0x108
  40cc4f:	mov    r15,QWORD PTR [rsi]
  40cc52:	lea    rbx,[rsp+0x10]
  40cc57:	mov    rax,QWORD PTR fs:0x28
  40cc60:	mov    QWORD PTR [rsp+0xf8],rax
  40cc68:	xor    eax,eax
  40cc6a:	mov    rdi,rbx
  40cc6d:	test   r15,r15
  40cc70:	rep stos QWORD PTR es:[rdi],rax
  40cc73:	je     40cd57 <__flatcc_gen_sort@@Base+0xd47>
  40cc79:	lea    rax,[rip+0x38b8d]        # 44580d <_IO_stdin_used@@Base+0x1880d>
  40cc80:	lea    rdx,[rip+0x2a555]        # 4371dc <_IO_stdin_used@@Base+0xa1dc>
  40cc87:	test   r8d,r8d
  40cc8a:	mov    DWORD PTR [rsp+0xc],r8d
  40cc8f:	mov    r13d,r14d
  40cc92:	cmovne rax,rdx
  40cc96:	mov    QWORD PTR [rsp],rax
  40cc9a:	test   BYTE PTR [r15+0x70],0x4
  40cc9f:	jne    40cd48 <__flatcc_gen_sort@@Base+0xd38>
  40cca5:	movzx  eax,WORD PTR [r15+0x28]
  40ccaa:	cmp    ax,0x8
  40ccae:	je     40cde0 <__flatcc_gen_sort@@Base+0xdd0>
  40ccb4:	cmp    ax,0xe
  40ccb8:	jne    40cd88 <__flatcc_gen_sort@@Base+0xd78>
  40ccbe:	mov    rsi,QWORD PTR [r15+0x18]
  40ccc2:	cmp    WORD PTR [rsi+0x10],0x1
  40ccc7:	je     40cea0 <__flatcc_gen_sort@@Base+0xe90>
  40cccd:	test   r12d,r12d
  40ccd0:	je     40cd0e <__flatcc_gen_sort@@Base+0xcfe>
  40ccd2:	test   r13d,r13d
  40ccd5:	mov    rdi,QWORD PTR [rbp+0xd0]
  40ccdc:	je     40cec0 <__flatcc_gen_sort@@Base+0xeb0>
  40cce2:	test   r13b,0x3
  40cce6:	jne    40ccf7 <__flatcc_gen_sort@@Base+0xce7>
  40cce8:	mov    eax,r12d
  40cceb:	sub    eax,r13d
  40ccee:	cmp    eax,0x2
  40ccf1:	jg     40ceca <__flatcc_gen_sort@@Base+0xeba>
  40ccf7:	lea    rdx,[rip+0x2a4e7]        # 4371e5 <_IO_stdin_used@@Base+0xa1e5>
  40ccfe:	mov    esi,0x1
  40cd03:	xor    eax,eax
  40cd05:	call   405200 <__fprintf_chk@plt>
  40cd0a:	mov    rsi,QWORD PTR [r15+0x18]
  40cd0e:	mov    rdi,QWORD PTR [rsi+0x18]
  40cd12:	mov    rdx,rbx
  40cd15:	lea    r14d,[r13+0x1]
  40cd19:	call   407300 <__flatcc_fb_scoped_symbol_name@@Base>
  40cd1e:	mov    rdi,QWORD PTR [rbp+0xd0]
  40cd25:	lea    rdx,[rip+0x2a53b]        # 437267 <_IO_stdin_used@@Base+0xa267>
  40cd2c:	mov    r8d,r13d
  40cd2f:	mov    rcx,rbx
  40cd32:	mov    esi,0x1
  40cd37:	xor    eax,eax
  40cd39:	mov    r13d,r14d
  40cd3c:	call   405200 <__fprintf_chk@plt>
  40cd41:	nop    DWORD PTR [rax+0x0]
  40cd48:	mov    r15,QWORD PTR [r15]
  40cd4b:	test   r15,r15
  40cd4e:	jne    40cc9a <__flatcc_gen_sort@@Base+0xc8a>
  40cd54:	mov    r14d,r13d
  40cd57:	mov    rbx,QWORD PTR [rsp+0xf8]
  40cd5f:	xor    rbx,QWORD PTR fs:0x28
  40cd68:	mov    eax,r14d
  40cd6b:	jne    40d02b <__flatcc_gen_sort@@Base+0x101b>
  40cd71:	add    rsp,0x108
  40cd78:	pop    rbx
  40cd79:	pop    rbp
  40cd7a:	pop    r12
  40cd7c:	pop    r13
  40cd7e:	pop    r14
  40cd80:	pop    r15
  40cd82:	ret    
  40cd83:	nop    DWORD PTR [rax+rax*1+0x0]
  40cd88:	mov    rax,QWORD PTR [rip+0x44259]        # 450fe8 <stderr@GLIBC_2.2.5>
  40cd8f:	lea    rcx,[rip+0x2a7b2]        # 437548 <_IO_stdin_used@@Base+0xa548>
  40cd96:	lea    rdx,[rip+0x29444]        # 4361e1 <_IO_stdin_used@@Base+0x91e1>
  40cd9d:	lea    r9,[rip+0x2aa14]        # 4377b8 <_IO_stdin_used@@Base+0xa7b8>
  40cda4:	mov    esi,0x1
  40cda9:	mov    r8d,0x352
  40cdaf:	mov    rdi,QWORD PTR [rax]
  40cdb2:	xor    eax,eax
  40cdb4:	call   405200 <__fprintf_chk@plt>
  40cdb9:	lea    rcx,[rip+0x34000]        # 440dc0 <_IO_stdin_used@@Base+0x13dc0>
  40cdc0:	lea    rsi,[rip+0x2a781]        # 437548 <_IO_stdin_used@@Base+0xa548>
  40cdc7:	lea    rdi,[rip+0x2a45b]        # 437229 <_IO_stdin_used@@Base+0xa229>
  40cdce:	mov    edx,0x352
  40cdd3:	call   405100 <__assert_fail@plt>
  40cdd8:	nop    DWORD PTR [rax+rax*1+0x0]
  40cde0:	test   r12d,r12d
  40cde3:	je     40ce0a <__flatcc_gen_sort@@Base+0xdfa>
  40cde5:	test   r13d,r13d
  40cde8:	jne    40ce30 <__flatcc_gen_sort@@Base+0xe20>
  40cdea:	cmp    r12d,0x4
  40cdee:	jg     40ce41 <__flatcc_gen_sort@@Base+0xe31>
  40cdf0:	mov    rdi,QWORD PTR [rbp+0xd0]
  40cdf7:	lea    rdx,[rip+0x2a3e7]        # 4371e5 <_IO_stdin_used@@Base+0xa1e5>
  40cdfe:	mov    esi,0x1
  40ce03:	xor    eax,eax
  40ce05:	call   405200 <__fprintf_chk@plt>
  40ce0a:	mov    eax,DWORD PTR [r15+0x18]
  40ce0e:	cmp    eax,0x5
  40ce11:	je     40ce68 <__flatcc_gen_sort@@Base+0xe58>
  40ce13:	cmp    eax,0xb
  40ce16:	ja     40cfb0 <__flatcc_gen_sort@@Base+0xfa0>
  40ce1c:	lea    rdx,[rip+0x33c6d]        # 440a90 <_IO_stdin_used@@Base+0x13a90>
  40ce23:	movsxd rax,DWORD PTR [rdx+rax*4]
  40ce27:	add    rax,rdx
  40ce2a:	jmp    rax
  40ce2c:	nop    DWORD PTR [rax+0x0]
  40ce30:	test   r13b,0x3
  40ce34:	jne    40cdf0 <__flatcc_gen_sort@@Base+0xde0>
  40ce36:	mov    eax,r12d
  40ce39:	sub    eax,r13d
  40ce3c:	cmp    eax,0x2
  40ce3f:	jle    40cdf0 <__flatcc_gen_sort@@Base+0xde0>
  40ce41:	mov    rdi,QWORD PTR [rbp+0xd0]
  40ce48:	mov    rcx,QWORD PTR [rsp]
  40ce4c:	lea    rdx,[rip+0x2a38c]        # 4371df <_IO_stdin_used@@Base+0xa1df>
  40ce53:	xor    eax,eax
  40ce55:	mov    esi,0x1
  40ce5a:	call   405200 <__fprintf_chk@plt>
  40ce5f:	mov    eax,DWORD PTR [r15+0x18]
  40ce63:	cmp    eax,0x5
  40ce66:	jne    40ce13 <__flatcc_gen_sort@@Base+0xe03>
  40ce68:	lea    r8,[rip+0x29330]        # 43619f <_IO_stdin_used@@Base+0x919f>
  40ce6f:	mov    rcx,rbp
  40ce72:	mov    rdi,QWORD PTR [rbp+0xd0]
  40ce79:	lea    r14d,[r13+0x1]
  40ce7d:	lea    rdx,[rip+0x2a3f1]        # 437275 <_IO_stdin_used@@Base+0xa275>
  40ce84:	mov    r9d,r13d
  40ce87:	mov    esi,0x1
  40ce8c:	xor    eax,eax
  40ce8e:	mov    r13d,r14d
  40ce91:	call   405200 <__fprintf_chk@plt>
  40ce96:	jmp    40cd48 <__flatcc_gen_sort@@Base+0xd38>
  40ce9b:	nop    DWORD PTR [rax+rax*1+0x0]
  40cea0:	mov    r8d,DWORD PTR [rsp+0xc]
  40cea5:	mov    edx,r13d
  40cea8:	add    rsi,0x28
  40ceac:	mov    ecx,r12d
  40ceaf:	mov    rdi,rbp
  40ceb2:	call   40cc30 <__flatcc_gen_sort@@Base+0xc20>
  40ceb7:	mov    r13d,eax
  40ceba:	jmp    40cd48 <__flatcc_gen_sort@@Base+0xd38>
  40cebf:	nop
  40cec0:	cmp    r12d,0x4
  40cec4:	jle    40ccf7 <__flatcc_gen_sort@@Base+0xce7>
  40ceca:	mov    rcx,QWORD PTR [rsp]
  40cece:	lea    rdx,[rip+0x2a30a]        # 4371df <_IO_stdin_used@@Base+0xa1df>
  40ced5:	mov    esi,0x1
  40ceda:	xor    eax,eax
  40cedc:	call   405200 <__fprintf_chk@plt>
  40cee1:	mov    rsi,QWORD PTR [r15+0x18]
  40cee5:	jmp    40cd0e <__flatcc_gen_sort@@Base+0xcfe>
  40ceea:	nop    WORD PTR [rax+rax*1+0x0]
  40cef0:	lea    rcx,[rip+0x38917]        # 44580e <_IO_stdin_used@@Base+0x1880e>
  40cef7:	lea    r8,[rip+0x292ae]        # 4361ac <_IO_stdin_used@@Base+0x91ac>
  40cefe:	jmp    40ce72 <__flatcc_gen_sort@@Base+0xe62>
  40cf03:	nop    DWORD PTR [rax+rax*1+0x0]
  40cf08:	lea    rcx,[rip+0x388ff]        # 44580e <_IO_stdin_used@@Base+0x1880e>
  40cf0f:	lea    r8,[rip+0x29279]        # 43618f <_IO_stdin_used@@Base+0x918f>
  40cf16:	jmp    40ce72 <__flatcc_gen_sort@@Base+0xe62>
  40cf1b:	nop    DWORD PTR [rax+rax*1+0x0]
  40cf20:	lea    rcx,[rip+0x388e7]        # 44580e <_IO_stdin_used@@Base+0x1880e>
  40cf27:	lea    r8,[rip+0x2926a]        # 436198 <_IO_stdin_used@@Base+0x9198>
  40cf2e:	jmp    40ce72 <__flatcc_gen_sort@@Base+0xe62>
  40cf33:	nop    DWORD PTR [rax+rax*1+0x0]
  40cf38:	lea    rcx,[rip+0x388cf]        # 44580e <_IO_stdin_used@@Base+0x1880e>
  40cf3f:	lea    r8,[rip+0x29251]        # 436197 <_IO_stdin_used@@Base+0x9197>
  40cf46:	jmp    40ce72 <__flatcc_gen_sort@@Base+0xe62>
  40cf4b:	nop    DWORD PTR [rax+rax*1+0x0]
  40cf50:	lea    rcx,[rip+0x388b7]        # 44580e <_IO_stdin_used@@Base+0x1880e>
  40cf57:	lea    r8,[rip+0x29248]        # 4361a6 <_IO_stdin_used@@Base+0x91a6>
  40cf5e:	jmp    40ce72 <__flatcc_gen_sort@@Base+0xe62>
  40cf63:	nop    DWORD PTR [rax+rax*1+0x0]
  40cf68:	lea    rcx,[rip+0x3889f]        # 44580e <_IO_stdin_used@@Base+0x1880e>
  40cf6f:	lea    r8,[rip+0x29207]        # 43617d <_IO_stdin_used@@Base+0x917d>
  40cf76:	jmp    40ce72 <__flatcc_gen_sort@@Base+0xe62>
  40cf7b:	nop    DWORD PTR [rax+rax*1+0x0]
  40cf80:	lea    rcx,[rip+0x38887]        # 44580e <_IO_stdin_used@@Base+0x1880e>
  40cf87:	lea    r8,[rip+0x291f8]        # 436186 <_IO_stdin_used@@Base+0x9186>
  40cf8e:	jmp    40ce72 <__flatcc_gen_sort@@Base+0xe62>
  40cf93:	nop    DWORD PTR [rax+rax*1+0x0]
  40cf98:	lea    rcx,[rip+0x3886f]        # 44580e <_IO_stdin_used@@Base+0x1880e>
  40cf9f:	lea    r8,[rip+0x291df]        # 436185 <_IO_stdin_used@@Base+0x9185>
  40cfa6:	jmp    40ce72 <__flatcc_gen_sort@@Base+0xe62>
  40cfab:	nop    DWORD PTR [rax+rax*1+0x0]
  40cfb0:	mov    rax,QWORD PTR [rip+0x44031]        # 450fe8 <stderr@GLIBC_2.2.5>
  40cfb7:	lea    rcx,[rip+0x21c52]        # 42ec10 <_IO_stdin_used@@Base+0x1c10>
  40cfbe:	lea    rdx,[rip+0x2921c]        # 4361e1 <_IO_stdin_used@@Base+0x91e1>
  40cfc5:	lea    r9,[rip+0x21c0c]        # 42ebd8 <_IO_stdin_used@@Base+0x1bd8>
  40cfcc:	mov    esi,0x1
  40cfd1:	mov    r8d,0x8d
  40cfd7:	mov    rdi,QWORD PTR [rax]
  40cfda:	xor    eax,eax
  40cfdc:	call   405200 <__fprintf_chk@plt>
  40cfe1:	lea    rcx,[rip+0x33db8]        # 440da0 <_IO_stdin_used@@Base+0x13da0>
  40cfe8:	lea    rsi,[rip+0x21c21]        # 42ec10 <_IO_stdin_used@@Base+0x1c10>
  40cfef:	lea    rdi,[rip+0x2a233]        # 437229 <_IO_stdin_used@@Base+0xa229>
  40cff6:	mov    edx,0x8d
  40cffb:	call   405100 <__assert_fail@plt>
  40d000:	lea    rcx,[rip+0x38807]        # 44580e <_IO_stdin_used@@Base+0x1880e>
  40d007:	lea    r8,[rip+0x2916e]        # 43617c <_IO_stdin_used@@Base+0x917c>
  40d00e:	jmp    40ce72 <__flatcc_gen_sort@@Base+0xe62>
  40d013:	nop    DWORD PTR [rax+rax*1+0x0]
  40d018:	lea    rcx,[rip+0x387ef]        # 44580e <_IO_stdin_used@@Base+0x1880e>
  40d01f:	lea    r8,[rip+0x29168]        # 43618e <_IO_stdin_used@@Base+0x918e>
  40d026:	jmp    40ce72 <__flatcc_gen_sort@@Base+0xe62>
  40d02b:	call   4050d0 <__stack_chk_fail@plt>
  40d030:	push   r15
  40d032:	push   r14
  40d034:	mov    ecx,0x1d
  40d039:	push   r13
  40d03b:	push   r12
  40d03d:	push   rbp
  40d03e:	push   rbx
  40d03f:	mov    rbp,rdi
  40d042:	mov    rbx,rsi
  40d045:	sub    rsp,0x288
  40d04c:	lea    r15,[rsp+0x30]
  40d051:	mov    rax,QWORD PTR fs:0x28
  40d05a:	mov    QWORD PTR [rsp+0x278],rax
  40d062:	xor    eax,eax
  40d064:	mov    rdi,r15
  40d067:	mov    rdx,r15
  40d06a:	rep stos QWORD PTR es:[rdi],rax
  40d06d:	lea    rdi,[rsp+0x120]
  40d075:	mov    ecx,0x1d
  40d07a:	mov    QWORD PTR [rsp+0x8],rdi
  40d07f:	rep stos QWORD PTR es:[rdi],rax
  40d082:	mov    rdi,QWORD PTR [rsi+0x18]
  40d086:	call   407300 <__flatcc_fb_scoped_symbol_name@@Base>
  40d08b:	mov    rbx,QWORD PTR [rbx+0x28]
  40d08f:	test   rbx,rbx
  40d092:	je     40d10b <__flatcc_gen_sort@@Base+0x10fb>
  40d094:	lea    rax,[rsp+0x210]
  40d09c:	lea    r14,[rip+0x33a1d]        # 440ac0 <_IO_stdin_used@@Base+0x13ac0>
  40d0a3:	mov    QWORD PTR [rsp+0x10],rax
  40d0a8:	test   BYTE PTR [rbx+0x70],0x4
  40d0ac:	mov    rax,QWORD PTR [rbx+0x8]
  40d0b0:	mov    r12,QWORD PTR [rax]
  40d0b3:	mov    r13,QWORD PTR [rax+0x8]
  40d0b7:	jne    40d0e0 <__flatcc_gen_sort@@Base+0x10d0>
  40d0b9:	movzx  eax,WORD PTR [rbx+0x28]
  40d0bd:	sub    eax,0x7
  40d0c0:	cmp    ax,0x8
  40d0c4:	ja     40d338 <__flatcc_gen_sort@@Base+0x1328>
  40d0ca:	movzx  eax,ax
  40d0cd:	movsxd rax,DWORD PTR [r14+rax*4]
  40d0d1:	add    rax,r14
  40d0d4:	jmp    rax
  40d0d6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40d0e0:	mov    rdi,QWORD PTR [rbp+0xd0]
  40d0e7:	lea    rdx,[rip+0x2a6fa]        # 4377e8 <_IO_stdin_used@@Base+0xa7e8>
  40d0ee:	mov    r9,r12
  40d0f1:	mov    r8d,r13d
  40d0f4:	mov    rcx,r15
  40d0f7:	mov    esi,0x1
  40d0fc:	xor    eax,eax
  40d0fe:	call   405200 <__fprintf_chk@plt>
  40d103:	mov    rbx,QWORD PTR [rbx]
  40d106:	test   rbx,rbx
  40d109:	jne    40d0a8 <__flatcc_gen_sort@@Base+0x1098>
  40d10b:	mov    rdi,QWORD PTR [rbp+0xd0]
  40d112:	lea    rdx,[rip+0x386f4]        # 44580d <_IO_stdin_used@@Base+0x1880d>
  40d119:	xor    eax,eax
  40d11b:	mov    esi,0x1
  40d120:	call   405200 <__fprintf_chk@plt>
  40d125:	xor    eax,eax
  40d127:	mov    rcx,QWORD PTR [rsp+0x278]
  40d12f:	xor    rcx,QWORD PTR fs:0x28
  40d138:	jne    40e1bb <__flatcc_gen_sort@@Base+0x21ab>
  40d13e:	add    rsp,0x288
  40d145:	pop    rbx
  40d146:	pop    rbp
  40d147:	pop    r12
  40d149:	pop    r13
  40d14b:	pop    r14
  40d14d:	pop    r15
  40d14f:	ret    
  40d150:	mov    rsi,QWORD PTR [rbx+0x18]
  40d154:	mov    rdx,QWORD PTR [rsp+0x8]
  40d159:	mov    rdi,QWORD PTR [rsi+0x18]
  40d15d:	call   407300 <__flatcc_fb_scoped_symbol_name@@Base>
  40d162:	mov    rdx,QWORD PTR [rbx+0x18]
  40d166:	movzx  eax,WORD PTR [rdx+0x10]
  40d16a:	cmp    ax,0x1
  40d16e:	je     40d808 <__flatcc_gen_sort@@Base+0x17f8>
  40d174:	jb     40d7c0 <__flatcc_gen_sort@@Base+0x17b0>
  40d17a:	cmp    ax,0x3
  40d17e:	je     40d3d8 <__flatcc_gen_sort@@Base+0x13c8>
  40d184:	cmp    ax,0x4
  40d188:	jne    40d718 <__flatcc_gen_sort@@Base+0x1708>
  40d18e:	mov    rdi,QWORD PTR [rbp+0xd0]
  40d195:	mov    r8,QWORD PTR [rbx+0x88]
  40d19c:	lea    rdx,[rip+0x2a9fd]        # 437ba0 <_IO_stdin_used@@Base+0xaba0>
  40d1a3:	push   QWORD PTR [rsp+0x8]
  40d1a7:	push   r12
  40d1a9:	mov    r9,rbp
  40d1ac:	push   r13
  40d1ae:	push   r15
  40d1b0:	mov    rcx,rbp
  40d1b3:	mov    esi,0x1
  40d1b8:	xor    eax,eax
  40d1ba:	call   405200 <__fprintf_chk@plt>
  40d1bf:	add    rsp,0x20
  40d1c3:	mov    r9d,0x1
  40d1c9:	jmp    40d246 <__flatcc_gen_sort@@Base+0x1236>
  40d1cb:	nop    DWORD PTR [rax+rax*1+0x0]
  40d1d0:	mov    rsi,QWORD PTR [rbx+0x18]
  40d1d4:	mov    rdx,QWORD PTR [rsp+0x8]
  40d1d9:	mov    rdi,QWORD PTR [rsi+0x18]
  40d1dd:	call   407300 <__flatcc_fb_scoped_symbol_name@@Base>
  40d1e2:	mov    rdx,QWORD PTR [rbx+0x18]
  40d1e6:	movzx  eax,WORD PTR [rdx+0x10]
  40d1ea:	cmp    ax,0x1
  40d1ee:	je     40d6d0 <__flatcc_gen_sort@@Base+0x16c0>
  40d1f4:	jb     40d690 <__flatcc_gen_sort@@Base+0x1680>
  40d1fa:	cmp    ax,0x3
  40d1fe:	je     40d390 <__flatcc_gen_sort@@Base+0x1380>
  40d204:	cmp    ax,0x4
  40d208:	jne    40d770 <__flatcc_gen_sort@@Base+0x1760>
  40d20e:	mov    rdi,QWORD PTR [rbp+0xd0]
  40d215:	mov    r8,QWORD PTR [rbx+0x88]
  40d21c:	lea    rdx,[rip+0x2a875]        # 437a98 <_IO_stdin_used@@Base+0xaa98>
  40d223:	push   QWORD PTR [rsp+0x8]
  40d227:	push   r12
  40d229:	mov    r9,rbp
  40d22c:	push   r13
  40d22e:	push   r15
  40d230:	mov    rcx,rbp
  40d233:	mov    esi,0x1
  40d238:	xor    eax,eax
  40d23a:	call   405200 <__fprintf_chk@plt>
  40d23f:	add    rsp,0x20
  40d243:	xor    r9d,r9d
  40d246:	mov    r8,QWORD PTR [rbx+0x18]
  40d24a:	mov    rcx,r12
  40d24d:	mov    edx,r13d
  40d250:	mov    rsi,r15
  40d253:	mov    rdi,rbp
  40d256:	call   40c1d0 <__flatcc_gen_sort@@Base+0x1c0>
  40d25b:	jmp    40d103 <__flatcc_gen_sort@@Base+0x10f3>
  40d260:	sub    rsp,0x8
  40d264:	mov    rdi,QWORD PTR [rbp+0xd0]
  40d26b:	mov    r8,QWORD PTR [rbx+0x88]
  40d272:	push   r12
  40d274:	lea    rdx,[rip+0x2a6fd]        # 437978 <_IO_stdin_used@@Base+0xa978>
  40d27b:	push   r13
  40d27d:	push   r15
  40d27f:	mov    r9,rbp
  40d282:	mov    rcx,rbp
  40d285:	mov    esi,0x1
  40d28a:	xor    eax,eax
  40d28c:	call   405200 <__fprintf_chk@plt>
  40d291:	add    rsp,0x20
  40d295:	jmp    40d103 <__flatcc_gen_sort@@Base+0x10f3>
  40d29a:	nop    WORD PTR [rax+rax*1+0x0]
  40d2a0:	sub    rsp,0x8
  40d2a4:	mov    rdi,QWORD PTR [rbp+0xd0]
  40d2ab:	mov    r8,QWORD PTR [rbx+0x88]
  40d2b2:	push   r12
  40d2b4:	lea    rdx,[rip+0x2a6ed]        # 4379a8 <_IO_stdin_used@@Base+0xa9a8>
  40d2bb:	push   r13
  40d2bd:	push   r15
  40d2bf:	mov    r9,rbp
  40d2c2:	mov    rcx,rbp
  40d2c5:	mov    esi,0x1
  40d2ca:	xor    eax,eax
  40d2cc:	call   405200 <__fprintf_chk@plt>
  40d2d1:	add    rsp,0x20
  40d2d5:	jmp    40d103 <__flatcc_gen_sort@@Base+0x10f3>
  40d2da:	nop    WORD PTR [rax+rax*1+0x0]
  40d2e0:	mov    eax,DWORD PTR [rbx+0x18]
  40d2e3:	cmp    eax,0x5
  40d2e6:	je     40d540 <__flatcc_gen_sort@@Base+0x1530>
  40d2ec:	cmp    eax,0xb
  40d2ef:	ja     40d420 <__flatcc_gen_sort@@Base+0x1410>
  40d2f5:	lea    rsi,[rip+0x337e8]        # 440ae4 <_IO_stdin_used@@Base+0x13ae4>
  40d2fc:	mov    ecx,eax
  40d2fe:	movsxd rdx,DWORD PTR [rsi+rcx*4]
  40d302:	add    rdx,rsi
  40d305:	jmp    rdx
  40d307:	nop    WORD PTR [rax+rax*1+0x0]
  40d310:	mov    eax,DWORD PTR [rbx+0x18]
  40d313:	cmp    eax,0x5
  40d316:	je     40d470 <__flatcc_gen_sort@@Base+0x1460>
  40d31c:	cmp    eax,0xb
  40d31f:	ja     40d420 <__flatcc_gen_sort@@Base+0x1410>
  40d325:	lea    rdx,[rip+0x337e8]        # 440b14 <_IO_stdin_used@@Base+0x13b14>
  40d32c:	movsxd rax,DWORD PTR [rdx+rax*4]
  40d330:	add    rax,rdx
  40d333:	jmp    rax
  40d335:	nop    DWORD PTR [rax]
  40d338:	mov    rax,QWORD PTR [rip+0x43ca9]        # 450fe8 <stderr@GLIBC_2.2.5>
  40d33f:	lea    rcx,[rip+0x2a202]        # 437548 <_IO_stdin_used@@Base+0xa548>
  40d346:	lea    rdx,[rip+0x28e94]        # 4361e1 <_IO_stdin_used@@Base+0x91e1>
  40d34d:	lea    r9,[rip+0x22874]        # 42fbc8 <_IO_stdin_used@@Base+0x2bc8>
  40d354:	mov    esi,0x1
  40d359:	mov    r8d,0x5e8
  40d35f:	mov    rdi,QWORD PTR [rax]
  40d362:	xor    eax,eax
  40d364:	call   405200 <__fprintf_chk@plt>
  40d369:	lea    rcx,[rip+0x33990]        # 440d00 <_IO_stdin_used@@Base+0x13d00>
  40d370:	lea    rsi,[rip+0x2a1d1]        # 437548 <_IO_stdin_used@@Base+0xa548>
  40d377:	lea    rdi,[rip+0x29eab]        # 437229 <_IO_stdin_used@@Base+0xa229>
  40d37e:	mov    edx,0x5e8
  40d383:	call   405100 <__assert_fail@plt>
  40d388:	nop    DWORD PTR [rax+rax*1+0x0]
  40d390:	mov    eax,DWORD PTR [rdx+0x48]
  40d393:	movzx  edx,WORD PTR [rbx+0x58]
  40d397:	cmp    dx,0x4
  40d39b:	je     40df0e <__flatcc_gen_sort@@Base+0x1efe>
  40d3a1:	jbe    40dc51 <__flatcc_gen_sort@@Base+0x1c41>
  40d3a7:	cmp    dx,0x5
  40d3ab:	je     40df93 <__flatcc_gen_sort@@Base+0x1f83>
  40d3b1:	cmp    dx,0x6
  40d3b5:	jne    40d5a0 <__flatcc_gen_sort@@Base+0x1590>
  40d3bb:	cmp    eax,0x9
  40d3be:	ja     40de09 <__flatcc_gen_sort@@Base+0x1df9>
  40d3c4:	lea    rdx,[rip+0x33779]        # 440b44 <_IO_stdin_used@@Base+0x13b44>
  40d3cb:	movsxd rax,DWORD PTR [rdx+rax*4]
  40d3cf:	add    rax,rdx
  40d3d2:	jmp    rax
  40d3d4:	nop    DWORD PTR [rax+0x0]
  40d3d8:	sub    rsp,0x8
  40d3dc:	mov    rdi,QWORD PTR [rbp+0xd0]
  40d3e3:	mov    r8,QWORD PTR [rbx+0x88]
  40d3ea:	mov    rax,QWORD PTR [rsp+0x10]
  40d3ef:	lea    rdx,[rip+0x2a76a]        # 437b60 <_IO_stdin_used@@Base+0xab60>
  40d3f6:	mov    r9,rbp
  40d3f9:	mov    rcx,rbp
  40d3fc:	mov    esi,0x1
  40d401:	push   rax
  40d402:	push   rax
  40d403:	xor    eax,eax
  40d405:	push   r12
  40d407:	push   r13
  40d409:	push   r15
  40d40b:	call   405200 <__fprintf_chk@plt>
  40d410:	add    rsp,0x30
  40d414:	jmp    40d103 <__flatcc_gen_sort@@Base+0x10f3>
  40d419:	nop    DWORD PTR [rax+0x0]
  40d420:	mov    rax,QWORD PTR [rip+0x43bc1]        # 450fe8 <stderr@GLIBC_2.2.5>
  40d427:	lea    rcx,[rip+0x217e2]        # 42ec10 <_IO_stdin_used@@Base+0x1c10>
  40d42e:	lea    rdx,[rip+0x28dac]        # 4361e1 <_IO_stdin_used@@Base+0x91e1>
  40d435:	lea    r9,[rip+0x2179c]        # 42ebd8 <_IO_stdin_used@@Base+0x1bd8>
  40d43c:	mov    esi,0x1
  40d441:	mov    r8d,0x8d
  40d447:	mov    rdi,QWORD PTR [rax]
  40d44a:	xor    eax,eax
  40d44c:	call   405200 <__fprintf_chk@plt>
  40d451:	lea    rcx,[rip+0x33948]        # 440da0 <_IO_stdin_used@@Base+0x13da0>
  40d458:	lea    rsi,[rip+0x217b1]        # 42ec10 <_IO_stdin_used@@Base+0x1c10>
  40d45f:	lea    rdi,[rip+0x29dc3]        # 437229 <_IO_stdin_used@@Base+0xa229>
  40d466:	mov    edx,0x8d
  40d46b:	call   405100 <__assert_fail@plt>
  40d470:	lea    rax,[rip+0x28d28]        # 43619f <_IO_stdin_used@@Base+0x919f>
  40d477:	lea    rdx,[rip+0x28e37]        # 4362b5 <_IO_stdin_used@@Base+0x92b5>
  40d47e:	mov    rcx,rbp
  40d481:	sub    rsp,0x8
  40d485:	mov    rdi,QWORD PTR [rbp+0xd0]
  40d48c:	mov    r8,QWORD PTR [rbx+0x88]
  40d493:	push   rax
  40d494:	push   rcx
  40d495:	mov    esi,0x1
  40d49a:	push   rdx
  40d49b:	lea    rdx,[rip+0x2a3c6]        # 437868 <_IO_stdin_used@@Base+0xa868>
  40d4a2:	push   rbp
  40d4a3:	push   r12
  40d4a5:	push   r13
  40d4a7:	xor    eax,eax
  40d4a9:	push   r15
  40d4ab:	mov    r9,rbp
  40d4ae:	mov    rcx,rbp
  40d4b1:	call   405200 <__fprintf_chk@plt>
  40d4b6:	mov    rsi,QWORD PTR [rbx+0x90]
  40d4bd:	add    rsp,0x40
  40d4c1:	test   rsi,rsi
  40d4c4:	je     40d103 <__flatcc_gen_sort@@Base+0x10f3>
  40d4ca:	movzx  eax,WORD PTR [rsi+0x10]
  40d4ce:	test   ax,ax
  40d4d1:	je     40d640 <__flatcc_gen_sort@@Base+0x1630>
  40d4d7:	cmp    ax,0x1
  40d4db:	jne    40d5f0 <__flatcc_gen_sort@@Base+0x15e0>
  40d4e1:	mov    rdx,QWORD PTR [rsp+0x8]
  40d4e6:	mov    rdi,QWORD PTR [rsi+0x18]
  40d4ea:	call   407300 <__flatcc_fb_scoped_symbol_name@@Base>
  40d4ef:	mov    rax,QWORD PTR [rbx+0x90]
  40d4f6:	mov    rcx,QWORD PTR [rsp+0x8]
  40d4fb:	lea    rdx,[rip+0x2a3f6]        # 4378f8 <_IO_stdin_used@@Base+0xa8f8>
  40d502:	mov    rdi,QWORD PTR [rbp+0xd0]
  40d509:	mov    r9,r15
  40d50c:	mov    r8,rbp
  40d50f:	mov    esi,0x1
  40d514:	movzx  eax,WORD PTR [rax+0xb0]
  40d51b:	push   rcx
  40d51c:	push   rcx
  40d51d:	push   rax
  40d51e:	push   rcx
  40d51f:	xor    eax,eax
  40d521:	push   r12
  40d523:	push   r13
  40d525:	mov    rcx,rbp
  40d528:	call   405200 <__fprintf_chk@plt>
  40d52d:	add    rsp,0x30
  40d531:	jmp    40d103 <__flatcc_gen_sort@@Base+0x10f3>
  40d536:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40d540:	lea    rcx,[rip+0x28d6e]        # 4362b5 <_IO_stdin_used@@Base+0x92b5>
  40d547:	lea    r10,[rip+0x28c51]        # 43619f <_IO_stdin_used@@Base+0x919f>
  40d54e:	mov    r11,rbp
  40d551:	mov    QWORD PTR [rsp+0x18],rcx
  40d556:	movzx  edx,WORD PTR [rbx+0x58]
  40d55a:	cmp    dx,0x4
  40d55e:	je     40d8b0 <__flatcc_gen_sort@@Base+0x18a0>
  40d564:	jbe    40d8d0 <__flatcc_gen_sort@@Base+0x18c0>
  40d56a:	cmp    dx,0x5
  40d56e:	je     40d880 <__flatcc_gen_sort@@Base+0x1870>
  40d574:	cmp    dx,0x6
  40d578:	jne    40d5a0 <__flatcc_gen_sort@@Base+0x1590>
  40d57a:	cmp    eax,0x9
  40d57d:	ja     40de09 <__flatcc_gen_sort@@Base+0x1df9>
  40d583:	lea    rdx,[rip+0x335e2]        # 440b6c <_IO_stdin_used@@Base+0x13b6c>
  40d58a:	movsxd rax,DWORD PTR [rdx+rax*4]
  40d58e:	add    rax,rdx
  40d591:	jmp    rax
  40d593:	cmp    dx,0x6
  40d597:	je     40de09 <__flatcc_gen_sort@@Base+0x1df9>
  40d59d:	nop    DWORD PTR [rax]
  40d5a0:	mov    rax,QWORD PTR [rip+0x43a41]        # 450fe8 <stderr@GLIBC_2.2.5>
  40d5a7:	lea    rcx,[rip+0x21662]        # 42ec10 <_IO_stdin_used@@Base+0x1c10>
  40d5ae:	lea    rdx,[rip+0x28c2c]        # 4361e1 <_IO_stdin_used@@Base+0x91e1>
  40d5b5:	lea    r9,[rip+0x2161c]        # 42ebd8 <_IO_stdin_used@@Base+0x1bd8>
  40d5bc:	mov    esi,0x1
  40d5c1:	mov    r8d,0x104
  40d5c7:	mov    rdi,QWORD PTR [rax]
  40d5ca:	xor    eax,eax
  40d5cc:	call   405200 <__fprintf_chk@plt>
  40d5d1:	lea    rcx,[rip+0x33710]        # 440ce8 <_IO_stdin_used@@Base+0x13ce8>
  40d5d8:	lea    rsi,[rip+0x21631]        # 42ec10 <_IO_stdin_used@@Base+0x1c10>
  40d5df:	lea    rdi,[rip+0x29c43]        # 437229 <_IO_stdin_used@@Base+0xa229>
  40d5e6:	mov    edx,0x104
  40d5eb:	call   405100 <__assert_fail@plt>
  40d5f0:	mov    rax,QWORD PTR [rip+0x439f1]        # 450fe8 <stderr@GLIBC_2.2.5>
  40d5f7:	lea    rcx,[rip+0x29f4a]        # 437548 <_IO_stdin_used@@Base+0xa548>
  40d5fe:	lea    rdx,[rip+0x28bdc]        # 4361e1 <_IO_stdin_used@@Base+0x91e1>
  40d605:	lea    r9,[rip+0x2a344]        # 437950 <_IO_stdin_used@@Base+0xa950>
  40d60c:	mov    esi,0x1
  40d611:	mov    r8d,0x596
  40d617:	mov    rdi,QWORD PTR [rax]
  40d61a:	xor    eax,eax
  40d61c:	call   405200 <__fprintf_chk@plt>
  40d621:	lea    rcx,[rip+0x336d8]        # 440d00 <_IO_stdin_used@@Base+0x13d00>
  40d628:	lea    rsi,[rip+0x29f19]        # 437548 <_IO_stdin_used@@Base+0xa548>
  40d62f:	lea    rdi,[rip+0x29bf3]        # 437229 <_IO_stdin_used@@Base+0xa229>
  40d636:	mov    edx,0x596
  40d63b:	call   405100 <__assert_fail@plt>
  40d640:	mov    rdx,QWORD PTR [rsp+0x8]
  40d645:	mov    rdi,QWORD PTR [rsi+0x18]
  40d649:	call   407300 <__flatcc_fb_scoped_symbol_name@@Base>
  40d64e:	sub    rsp,0x8
  40d652:	mov    rdi,QWORD PTR [rbp+0xd0]
  40d659:	lea    rdx,[rip+0x2a240]        # 4378a0 <_IO_stdin_used@@Base+0xa8a0>
  40d660:	mov    rax,QWORD PTR [rsp+0x10]
  40d665:	mov    r9,r15
  40d668:	mov    r8,rbp
  40d66b:	mov    rcx,rbp
  40d66e:	mov    esi,0x1
  40d673:	push   rax
  40d674:	push   rax
  40d675:	push   rax
  40d676:	push   r12
  40d678:	xor    eax,eax
  40d67a:	push   r13
  40d67c:	call   405200 <__fprintf_chk@plt>
  40d681:	add    rsp,0x30
  40d685:	jmp    40d103 <__flatcc_gen_sort@@Base+0x10f3>
  40d68a:	nop    WORD PTR [rax+rax*1+0x0]
  40d690:	mov    rdi,QWORD PTR [rbp+0xd0]
  40d697:	mov    r8,QWORD PTR [rbx+0x88]
  40d69e:	lea    rdx,[rip+0x2a37b]        # 437a20 <_IO_stdin_used@@Base+0xaa20>
  40d6a5:	push   QWORD PTR [rsp+0x8]
  40d6a9:	push   r12
  40d6ab:	mov    r9,rbp
  40d6ae:	push   r13
  40d6b0:	push   r15
  40d6b2:	mov    rcx,rbp
  40d6b5:	mov    esi,0x1
  40d6ba:	xor    eax,eax
  40d6bc:	call   405200 <__fprintf_chk@plt>
  40d6c1:	add    rsp,0x20
  40d6c5:	jmp    40d103 <__flatcc_gen_sort@@Base+0x10f3>
  40d6ca:	nop    WORD PTR [rax+rax*1+0x0]
  40d6d0:	movzx  eax,WORD PTR [rbx+0x72]
  40d6d4:	mov    rdi,QWORD PTR [rbp+0xd0]
  40d6db:	lea    rdx,[rip+0x2a2fe]        # 4379e0 <_IO_stdin_used@@Base+0xa9e0>
  40d6e2:	mov    r9,rbp
  40d6e5:	mov    rcx,rbp
  40d6e8:	mov    esi,0x1
  40d6ed:	push   rax
  40d6ee:	push   QWORD PTR [rbx+0x80]
  40d6f4:	xor    eax,eax
  40d6f6:	mov    r8,QWORD PTR [rbx+0x88]
  40d6fd:	push   QWORD PTR [rsp+0x18]
  40d701:	push   r12
  40d703:	push   r13
  40d705:	push   r15
  40d707:	call   405200 <__fprintf_chk@plt>
  40d70c:	add    rsp,0x30
  40d710:	jmp    40d103 <__flatcc_gen_sort@@Base+0x10f3>
  40d715:	nop    DWORD PTR [rax]
  40d718:	mov    rax,QWORD PTR [rip+0x438c9]        # 450fe8 <stderr@GLIBC_2.2.5>
  40d71f:	lea    rcx,[rip+0x29e22]        # 437548 <_IO_stdin_used@@Base+0xa548>
  40d726:	lea    rdx,[rip+0x28ab4]        # 4361e1 <_IO_stdin_used@@Base+0x91e1>
  40d72d:	lea    r9,[rip+0x223cc]        # 42fb00 <_IO_stdin_used@@Base+0x2b00>
  40d734:	mov    esi,0x1
  40d739:	mov    r8d,0x5e3
  40d73f:	mov    rdi,QWORD PTR [rax]
  40d742:	xor    eax,eax
  40d744:	call   405200 <__fprintf_chk@plt>
  40d749:	lea    rcx,[rip+0x335b0]        # 440d00 <_IO_stdin_used@@Base+0x13d00>
  40d750:	lea    rsi,[rip+0x29df1]        # 437548 <_IO_stdin_used@@Base+0xa548>
  40d757:	lea    rdi,[rip+0x29acb]        # 437229 <_IO_stdin_used@@Base+0xa229>
  40d75e:	mov    edx,0x5e3
  40d763:	call   405100 <__assert_fail@plt>
  40d768:	nop    DWORD PTR [rax+rax*1+0x0]
  40d770:	mov    rax,QWORD PTR [rip+0x43871]        # 450fe8 <stderr@GLIBC_2.2.5>
  40d777:	lea    rcx,[rip+0x29dca]        # 437548 <_IO_stdin_used@@Base+0xa548>
  40d77e:	lea    rdx,[rip+0x28a5c]        # 4361e1 <_IO_stdin_used@@Base+0x91e1>
  40d785:	lea    r9,[rip+0x22324]        # 42fab0 <_IO_stdin_used@@Base+0x2ab0>
  40d78c:	mov    esi,0x1
  40d791:	mov    r8d,0x5c0
  40d797:	mov    rdi,QWORD PTR [rax]
  40d79a:	xor    eax,eax
  40d79c:	call   405200 <__fprintf_chk@plt>
  40d7a1:	lea    rcx,[rip+0x33558]        # 440d00 <_IO_stdin_used@@Base+0x13d00>
  40d7a8:	lea    rsi,[rip+0x29d99]        # 437548 <_IO_stdin_used@@Base+0xa548>
  40d7af:	lea    rdi,[rip+0x29a73]        # 437229 <_IO_stdin_used@@Base+0xa229>
  40d7b6:	mov    edx,0x5c0
  40d7bb:	call   405100 <__assert_fail@plt>
  40d7c0:	test   BYTE PTR [rdx+0x12],0x8
  40d7c4:	jne    40deef <__flatcc_gen_sort@@Base+0x1edf>
  40d7ca:	mov    rdi,QWORD PTR [rbp+0xd0]
  40d7d1:	mov    r8,QWORD PTR [rbx+0x88]
  40d7d8:	lea    rdx,[rip+0x2a349]        # 437b28 <_IO_stdin_used@@Base+0xab28>
  40d7df:	push   QWORD PTR [rsp+0x8]
  40d7e3:	push   r12
  40d7e5:	mov    r9,rbp
  40d7e8:	push   r13
  40d7ea:	push   r15
  40d7ec:	mov    rcx,rbp
  40d7ef:	mov    esi,0x1
  40d7f4:	xor    eax,eax
  40d7f6:	call   405200 <__fprintf_chk@plt>
  40d7fb:	add    rsp,0x20
  40d7ff:	jmp    40d103 <__flatcc_gen_sort@@Base+0x10f3>
  40d804:	nop    DWORD PTR [rax+0x0]
  40d808:	test   BYTE PTR [rdx+0x12],0x8
  40d80c:	jne    40ded0 <__flatcc_gen_sort@@Base+0x1ec0>
  40d812:	sub    rsp,0x8
  40d816:	mov    rdi,QWORD PTR [rbp+0xd0]
  40d81d:	mov    r8,QWORD PTR [rbx+0x88]
  40d824:	mov    rax,QWORD PTR [rsp+0x10]
  40d829:	lea    rdx,[rip+0x2a2c0]        # 437af0 <_IO_stdin_used@@Base+0xaaf0>
  40d830:	mov    r9,rbp
  40d833:	mov    rcx,rbp
  40d836:	mov    esi,0x1
  40d83b:	push   rax
  40d83c:	push   rax
  40d83d:	xor    eax,eax
  40d83f:	push   r12
  40d841:	push   r13
  40d843:	push   r15
  40d845:	call   405200 <__fprintf_chk@plt>
  40d84a:	add    rsp,0x30
  40d84e:	jmp    40d103 <__flatcc_gen_sort@@Base+0x10f3>
  40d853:	movzx  edx,WORD PTR [rbx+0x58]
  40d857:	cmp    dx,0x4
  40d85b:	je     40d899 <__flatcc_gen_sort@@Base+0x1889>
  40d85d:	jbe    40e051 <__flatcc_gen_sort@@Base+0x2041>
  40d863:	cmp    dx,0x5
  40d867:	jne    40d593 <__flatcc_gen_sort@@Base+0x1583>
  40d86d:	lea    r10,[rip+0x28938]        # 4361ac <_IO_stdin_used@@Base+0x91ac>
  40d874:	lea    r11,[rip+0x37f93]        # 44580e <_IO_stdin_used@@Base+0x1880e>
  40d87b:	mov    QWORD PTR [rsp+0x18],r10
  40d880:	cmp    eax,0x9
  40d883:	ja     40de09 <__flatcc_gen_sort@@Base+0x1df9>
  40d889:	lea    rdx,[rip+0x33304]        # 440b94 <_IO_stdin_used@@Base+0x13b94>
  40d890:	movsxd rax,DWORD PTR [rdx+rax*4]
  40d894:	add    rax,rdx
  40d897:	jmp    rax
  40d899:	lea    r10,[rip+0x2890c]        # 4361ac <_IO_stdin_used@@Base+0x91ac>
  40d8a0:	lea    r11,[rip+0x37f67]        # 44580e <_IO_stdin_used@@Base+0x1880e>
  40d8a7:	mov    QWORD PTR [rsp+0x18],r10
  40d8ac:	nop    DWORD PTR [rax+0x0]
  40d8b0:	cmp    eax,0x9
  40d8b3:	ja     40de09 <__flatcc_gen_sort@@Base+0x1df9>
  40d8b9:	lea    rdx,[rip+0x332fc]        # 440bbc <_IO_stdin_used@@Base+0x13bbc>
  40d8c0:	movsxd rax,DWORD PTR [rdx+rax*4]
  40d8c4:	add    rax,rdx
  40d8c7:	jmp    rax
  40d8c9:	nop    DWORD PTR [rax+0x0]
  40d8d0:	cmp    dx,0x3
  40d8d4:	jne    40d5a0 <__flatcc_gen_sort@@Base+0x1590>
  40d8da:	mov    rdi,QWORD PTR [rsp+0x10]
  40d8df:	vmovsd xmm0,QWORD PTR [rbx+0x48]
  40d8e4:	lea    rcx,[rip+0x2895d]        # 436248 <_IO_stdin_used@@Base+0x9248>
  40d8eb:	mov    edx,0x64
  40d8f0:	mov    esi,0x1
  40d8f5:	mov    eax,0x1
  40d8fa:	mov    QWORD PTR [rsp+0x28],r11
  40d8ff:	mov    QWORD PTR [rsp+0x20],r10
  40d904:	call   405220 <__sprintf_chk@plt>
  40d909:	mov    r10,QWORD PTR [rsp+0x20]
  40d90e:	mov    r11,QWORD PTR [rsp+0x28]
  40d913:	nop    DWORD PTR [rax+rax*1+0x0]
  40d918:	movzx  eax,WORD PTR [rbx+0x72]
  40d91c:	mov    rdi,QWORD PTR [rbp+0xd0]
  40d923:	lea    rdx,[rip+0x29ef6]        # 437820 <_IO_stdin_used@@Base+0xa820>
  40d92a:	push   QWORD PTR [rsp+0x10]
  40d92e:	mov    r9,rbp
  40d931:	mov    rcx,rbp
  40d934:	mov    esi,0x1
  40d939:	push   rax
  40d93a:	push   QWORD PTR [rbx+0x80]
  40d940:	xor    eax,eax
  40d942:	mov    r8,QWORD PTR [rbx+0x88]
  40d949:	push   r10
  40d94b:	push   r11
  40d94d:	push   QWORD PTR [rsp+0x40]
  40d951:	push   rbp
  40d952:	push   r12
  40d954:	push   r13
  40d956:	push   r15
  40d958:	call   405200 <__fprintf_chk@plt>
  40d95d:	add    rsp,0x50
  40d961:	jmp    40d103 <__flatcc_gen_sort@@Base+0x10f3>
  40d966:	movzx  edx,WORD PTR [rbx+0x58]
  40d96a:	cmp    dx,0x4
  40d96e:	je     40e0d0 <__flatcc_gen_sort@@Base+0x20c0>
  40d974:	jbe    40e002 <__flatcc_gen_sort@@Base+0x1ff2>
  40d97a:	cmp    dx,0x5
  40d97e:	jne    40d593 <__flatcc_gen_sort@@Base+0x1583>
  40d984:	lea    r10,[rip+0x2881b]        # 4361a6 <_IO_stdin_used@@Base+0x91a6>
  40d98b:	lea    r11,[rip+0x37e7c]        # 44580e <_IO_stdin_used@@Base+0x1880e>
  40d992:	mov    QWORD PTR [rsp+0x18],r10
  40d997:	jmp    40d880 <__flatcc_gen_sort@@Base+0x1870>
  40d99c:	lea    rcx,[rip+0x288ff]        # 4362a2 <_IO_stdin_used@@Base+0x92a2>
  40d9a3:	lea    r10,[rip+0x287dc]        # 436186 <_IO_stdin_used@@Base+0x9186>
  40d9aa:	lea    r11,[rip+0x37e5d]        # 44580e <_IO_stdin_used@@Base+0x1880e>
  40d9b1:	mov    QWORD PTR [rsp+0x18],rcx
  40d9b6:	jmp    40d556 <__flatcc_gen_sort@@Base+0x1546>
  40d9bb:	lea    rax,[rip+0x287ba]        # 43617c <_IO_stdin_used@@Base+0x917c>
  40d9c2:	lea    rcx,[rip+0x37e45]        # 44580e <_IO_stdin_used@@Base+0x1880e>
  40d9c9:	lea    rdx,[rip+0x288ca]        # 43629a <_IO_stdin_used@@Base+0x929a>
  40d9d0:	jmp    40d481 <__flatcc_gen_sort@@Base+0x1471>
  40d9d5:	lea    rax,[rip+0x287b2]        # 43618e <_IO_stdin_used@@Base+0x918e>
  40d9dc:	lea    rcx,[rip+0x37e2b]        # 44580e <_IO_stdin_used@@Base+0x1880e>
  40d9e3:	lea    rdx,[rip+0x288be]        # 4362a8 <_IO_stdin_used@@Base+0x92a8>
  40d9ea:	jmp    40d481 <__flatcc_gen_sort@@Base+0x1471>
  40d9ef:	lea    rcx,[rip+0x288a5]        # 43629b <_IO_stdin_used@@Base+0x929b>
  40d9f6:	lea    r10,[rip+0x28780]        # 43617d <_IO_stdin_used@@Base+0x917d>
  40d9fd:	lea    r11,[rip+0x37e0a]        # 44580e <_IO_stdin_used@@Base+0x1880e>
  40da04:	mov    QWORD PTR [rsp+0x18],rcx
  40da09:	jmp    40d556 <__flatcc_gen_sort@@Base+0x1546>
  40da0e:	lea    rax,[rip+0x28797]        # 4361ac <_IO_stdin_used@@Base+0x91ac>
  40da15:	lea    rcx,[rip+0x37df2]        # 44580e <_IO_stdin_used@@Base+0x1880e>
  40da1c:	mov    rdx,rax
  40da1f:	jmp    40d481 <__flatcc_gen_sort@@Base+0x1471>
  40da24:	lea    rax,[rip+0x2876c]        # 436197 <_IO_stdin_used@@Base+0x9197>
  40da2b:	lea    rcx,[rip+0x37ddc]        # 44580e <_IO_stdin_used@@Base+0x1880e>
  40da32:	lea    rdx,[rip+0x28876]        # 4362af <_IO_stdin_used@@Base+0x92af>
  40da39:	jmp    40d481 <__flatcc_gen_sort@@Base+0x1471>
  40da3e:	lea    rax,[rip+0x28761]        # 4361a6 <_IO_stdin_used@@Base+0x91a6>
  40da45:	lea    rcx,[rip+0x37dc2]        # 44580e <_IO_stdin_used@@Base+0x1880e>
  40da4c:	mov    rdx,rax
  40da4f:	jmp    40d481 <__flatcc_gen_sort@@Base+0x1471>
  40da54:	lea    rax,[rip+0x28722]        # 43617d <_IO_stdin_used@@Base+0x917d>
  40da5b:	lea    rcx,[rip+0x37dac]        # 44580e <_IO_stdin_used@@Base+0x1880e>
  40da62:	lea    rdx,[rip+0x28832]        # 43629b <_IO_stdin_used@@Base+0x929b>
  40da69:	jmp    40d481 <__flatcc_gen_sort@@Base+0x1471>
  40da6e:	lea    rax,[rip+0x2871a]        # 43618f <_IO_stdin_used@@Base+0x918f>
  40da75:	lea    rcx,[rip+0x37d92]        # 44580e <_IO_stdin_used@@Base+0x1880e>
  40da7c:	lea    rdx,[rip+0x28826]        # 4362a9 <_IO_stdin_used@@Base+0x92a9>
  40da83:	jmp    40d481 <__flatcc_gen_sort@@Base+0x1471>
  40da88:	lea    rax,[rip+0x28709]        # 436198 <_IO_stdin_used@@Base+0x9198>
  40da8f:	lea    rcx,[rip+0x37d78]        # 44580e <_IO_stdin_used@@Base+0x1880e>
  40da96:	lea    rdx,[rip+0x28813]        # 4362b0 <_IO_stdin_used@@Base+0x92b0>
  40da9d:	jmp    40d481 <__flatcc_gen_sort@@Base+0x1471>
  40daa2:	movzx  edx,WORD PTR [rbx+0x58]
  40daa6:	cmp    dx,0x4
  40daaa:	je     40e107 <__flatcc_gen_sort@@Base+0x20f7>
  40dab0:	jbe    40e092 <__flatcc_gen_sort@@Base+0x2082>
  40dab6:	cmp    dx,0x5
  40daba:	je     40e0e8 <__flatcc_gen_sort@@Base+0x20d8>
  40dac0:	cmp    dx,0x6
  40dac4:	jne    40d5a0 <__flatcc_gen_sort@@Base+0x1590>
  40daca:	lea    rax,[rip+0x287df]        # 4362b0 <_IO_stdin_used@@Base+0x92b0>
  40dad1:	lea    r10,[rip+0x286c0]        # 436198 <_IO_stdin_used@@Base+0x9198>
  40dad8:	lea    r11,[rip+0x37d2f]        # 44580e <_IO_stdin_used@@Base+0x1880e>
  40dadf:	mov    QWORD PTR [rsp+0x18],rax
  40dae4:	lea    r8,[rip+0x286ef]        # 4361da <_IO_stdin_used@@Base+0x91da>
  40daeb:	nop    DWORD PTR [rax+rax*1+0x0]
  40daf0:	movzx  r9d,BYTE PTR [rbx+0x48]
  40daf5:	mov    rdi,QWORD PTR [rsp+0x10]
  40dafa:	lea    rcx,[rip+0x2873c]        # 43623d <_IO_stdin_used@@Base+0x923d>
  40db01:	mov    edx,0x64
  40db06:	mov    esi,0x1
  40db0b:	xor    eax,eax
  40db0d:	mov    QWORD PTR [rsp+0x28],r11
  40db12:	mov    QWORD PTR [rsp+0x20],r10
  40db17:	call   405220 <__sprintf_chk@plt>
  40db1c:	mov    r10,QWORD PTR [rsp+0x20]
  40db21:	mov    r11,QWORD PTR [rsp+0x28]
  40db26:	jmp    40d918 <__flatcc_gen_sort@@Base+0x1908>
  40db2b:	movzx  edx,WORD PTR [rbx+0x58]
  40db2f:	cmp    dx,0x4
  40db33:	je     40e126 <__flatcc_gen_sort@@Base+0x2116>
  40db39:	jbe    40e0b1 <__flatcc_gen_sort@@Base+0x20a1>
  40db3f:	cmp    dx,0x5
  40db43:	je     40e164 <__flatcc_gen_sort@@Base+0x2154>
  40db49:	cmp    dx,0x6
  40db4d:	jne    40d5a0 <__flatcc_gen_sort@@Base+0x1590>
  40db53:	lea    rax,[rip+0x2874f]        # 4362a9 <_IO_stdin_used@@Base+0x92a9>
  40db5a:	lea    r10,[rip+0x2862e]        # 43618f <_IO_stdin_used@@Base+0x918f>
  40db61:	lea    r11,[rip+0x37ca6]        # 44580e <_IO_stdin_used@@Base+0x1880e>
  40db68:	mov    QWORD PTR [rsp+0x18],rax
  40db6d:	lea    r8,[rip+0x2865d]        # 4361d1 <_IO_stdin_used@@Base+0x91d1>
  40db74:	jmp    40daf0 <__flatcc_gen_sort@@Base+0x1ae0>
  40db79:	movzx  edx,WORD PTR [rbx+0x58]
  40db7d:	cmp    dx,0x4
  40db81:	je     40e145 <__flatcc_gen_sort@@Base+0x2135>
  40db87:	jbe    40e073 <__flatcc_gen_sort@@Base+0x2063>
  40db8d:	cmp    dx,0x5
  40db91:	je     40e183 <__flatcc_gen_sort@@Base+0x2173>
  40db97:	cmp    dx,0x6
  40db9b:	jne    40d5a0 <__flatcc_gen_sort@@Base+0x1590>
  40dba1:	lea    rcx,[rip+0x286f9]        # 4362a1 <_IO_stdin_used@@Base+0x92a1>
  40dba8:	lea    r10,[rip+0x285d6]        # 436185 <_IO_stdin_used@@Base+0x9185>
  40dbaf:	lea    r11,[rip+0x37c58]        # 44580e <_IO_stdin_used@@Base+0x1880e>
  40dbb6:	mov    QWORD PTR [rsp+0x18],rcx
  40dbbb:	jmp    40d57a <__flatcc_gen_sort@@Base+0x156a>
  40dbc0:	lea    rcx,[rip+0x286e8]        # 4362af <_IO_stdin_used@@Base+0x92af>
  40dbc7:	lea    r10,[rip+0x285c9]        # 436197 <_IO_stdin_used@@Base+0x9197>
  40dbce:	lea    r11,[rip+0x37c39]        # 44580e <_IO_stdin_used@@Base+0x1880e>
  40dbd5:	mov    QWORD PTR [rsp+0x18],rcx
  40dbda:	jmp    40d556 <__flatcc_gen_sort@@Base+0x1546>
  40dbdf:	lea    rax,[rip+0x285a0]        # 436186 <_IO_stdin_used@@Base+0x9186>
  40dbe6:	lea    rcx,[rip+0x37c21]        # 44580e <_IO_stdin_used@@Base+0x1880e>
  40dbed:	lea    rdx,[rip+0x286ae]        # 4362a2 <_IO_stdin_used@@Base+0x92a2>
  40dbf4:	jmp    40d481 <__flatcc_gen_sort@@Base+0x1471>
  40dbf9:	lea    rax,[rip+0x28585]        # 436185 <_IO_stdin_used@@Base+0x9185>
  40dc00:	lea    rcx,[rip+0x37c07]        # 44580e <_IO_stdin_used@@Base+0x1880e>
  40dc07:	lea    rdx,[rip+0x28693]        # 4362a1 <_IO_stdin_used@@Base+0x92a1>
  40dc0e:	jmp    40d481 <__flatcc_gen_sort@@Base+0x1471>
  40dc13:	lea    rcx,[rip+0x2868e]        # 4362a8 <_IO_stdin_used@@Base+0x92a8>
  40dc1a:	lea    r10,[rip+0x2856d]        # 43618e <_IO_stdin_used@@Base+0x918e>
  40dc21:	lea    r11,[rip+0x37be6]        # 44580e <_IO_stdin_used@@Base+0x1880e>
  40dc28:	mov    QWORD PTR [rsp+0x18],rcx
  40dc2d:	jmp    40d556 <__flatcc_gen_sort@@Base+0x1546>
  40dc32:	lea    rcx,[rip+0x28661]        # 43629a <_IO_stdin_used@@Base+0x929a>
  40dc39:	lea    r10,[rip+0x2853c]        # 43617c <_IO_stdin_used@@Base+0x917c>
  40dc40:	lea    r11,[rip+0x37bc7]        # 44580e <_IO_stdin_used@@Base+0x1880e>
  40dc47:	mov    QWORD PTR [rsp+0x18],rcx
  40dc4c:	jmp    40d556 <__flatcc_gen_sort@@Base+0x1546>
  40dc51:	cmp    dx,0x3
  40dc55:	jne    40d5a0 <__flatcc_gen_sort@@Base+0x1590>
  40dc5b:	cmp    eax,0xb
  40dc5e:	je     40e1a2 <__flatcc_gen_sort@@Base+0x2192>
  40dc64:	vmovsd xmm0,QWORD PTR [rbx+0x48]
  40dc69:	lea    rcx,[rip+0x285d8]        # 436248 <_IO_stdin_used@@Base+0x9248>
  40dc70:	mov    rdi,QWORD PTR [rsp+0x10]
  40dc75:	mov    edx,0x64
  40dc7a:	mov    esi,0x1
  40dc7f:	mov    eax,0x1
  40dc84:	call   405220 <__sprintf_chk@plt>
  40dc89:	movzx  eax,WORD PTR [rbx+0x72]
  40dc8d:	mov    rdi,QWORD PTR [rbp+0xd0]
  40dc94:	lea    rdx,[rip+0x29db5]        # 437a50 <_IO_stdin_used@@Base+0xaa50>
  40dc9b:	push   QWORD PTR [rsp+0x10]
  40dc9f:	mov    r9,rbp
  40dca2:	mov    rcx,rbp
  40dca5:	mov    esi,0x1
  40dcaa:	push   rax
  40dcab:	push   QWORD PTR [rbx+0x80]
  40dcb1:	mov    rax,QWORD PTR [rsp+0x20]
  40dcb6:	mov    r8,QWORD PTR [rbx+0x88]
  40dcbd:	push   rax
  40dcbe:	push   rax
  40dcbf:	xor    eax,eax
  40dcc1:	push   r12
  40dcc3:	push   r13
  40dcc5:	push   r15
  40dcc7:	call   405200 <__fprintf_chk@plt>
  40dccc:	add    rsp,0x40
  40dcd0:	jmp    40d103 <__flatcc_gen_sort@@Base+0x10f3>
  40dcd5:	lea    r8,[rip+0x284fd]        # 4361d9 <_IO_stdin_used@@Base+0x91d9>
  40dcdc:	mov    r9,QWORD PTR [rbx+0x48]
  40dce0:	lea    rcx,[rip+0x2854d]        # 436234 <_IO_stdin_used@@Base+0x9234>
  40dce7:	mov    QWORD PTR [rsp+0x28],r11
  40dcec:	mov    QWORD PTR [rsp+0x20],r10
  40dcf1:	mov    rdi,QWORD PTR [rsp+0x10]
  40dcf6:	mov    edx,0x64
  40dcfb:	mov    esi,0x1
  40dd00:	xor    eax,eax
  40dd02:	call   405220 <__sprintf_chk@plt>
  40dd07:	mov    r10,QWORD PTR [rsp+0x20]
  40dd0c:	mov    r11,QWORD PTR [rsp+0x28]
  40dd11:	jmp    40d918 <__flatcc_gen_sort@@Base+0x1908>
  40dd16:	lea    r8,[rip+0x284bc]        # 4361d9 <_IO_stdin_used@@Base+0x91d9>
  40dd1d:	jmp    40daf0 <__flatcc_gen_sort@@Base+0x1ae0>
  40dd22:	lea    r8,[rip+0x284b0]        # 4361d9 <_IO_stdin_used@@Base+0x91d9>
  40dd29:	mov    QWORD PTR [rsp+0x28],r11
  40dd2e:	mov    QWORD PTR [rsp+0x20],r10
  40dd33:	lea    rcx,[rip+0x284f1]        # 43622b <_IO_stdin_used@@Base+0x922b>
  40dd3a:	mov    r9,QWORD PTR [rbx+0x48]
  40dd3e:	jmp    40dcf1 <__flatcc_gen_sort@@Base+0x1ce1>
  40dd40:	lea    r8,[rip+0x28480]        # 4361c7 <_IO_stdin_used@@Base+0x91c7>
  40dd47:	jmp    40dd29 <__flatcc_gen_sort@@Base+0x1d19>
  40dd49:	lea    r8,[rip+0x28477]        # 4361c7 <_IO_stdin_used@@Base+0x91c7>
  40dd50:	jmp    40dcdc <__flatcc_gen_sort@@Base+0x1ccc>
  40dd52:	lea    r8,[rip+0x28477]        # 4361d0 <_IO_stdin_used@@Base+0x91d0>
  40dd59:	jmp    40dcdc <__flatcc_gen_sort@@Base+0x1ccc>
  40dd5b:	lea    r8,[rip+0x2845c]        # 4361be <_IO_stdin_used@@Base+0x91be>
  40dd62:	jmp    40dd29 <__flatcc_gen_sort@@Base+0x1d19>
  40dd64:	lea    r8,[rip+0x2846f]        # 4361da <_IO_stdin_used@@Base+0x91da>
  40dd6b:	jmp    40dd29 <__flatcc_gen_sort@@Base+0x1d19>
  40dd6d:	lea    r8,[rip+0x2845c]        # 4361d0 <_IO_stdin_used@@Base+0x91d0>
  40dd74:	jmp    40dd29 <__flatcc_gen_sort@@Base+0x1d19>
  40dd76:	lea    r8,[rip+0x2845d]        # 4361da <_IO_stdin_used@@Base+0x91da>
  40dd7d:	jmp    40dcdc <__flatcc_gen_sort@@Base+0x1ccc>
  40dd82:	lea    r8,[rip+0x28435]        # 4361be <_IO_stdin_used@@Base+0x91be>
  40dd89:	jmp    40dcdc <__flatcc_gen_sort@@Base+0x1ccc>
  40dd8e:	lea    r8,[rip+0x2843c]        # 4361d1 <_IO_stdin_used@@Base+0x91d1>
  40dd95:	jmp    40dd29 <__flatcc_gen_sort@@Base+0x1d19>
  40dd97:	lea    r8,[rip+0x2842a]        # 4361c8 <_IO_stdin_used@@Base+0x91c8>
  40dd9e:	jmp    40dd29 <__flatcc_gen_sort@@Base+0x1d19>
  40dda0:	lea    r8,[rip+0x28418]        # 4361bf <_IO_stdin_used@@Base+0x91bf>
  40dda7:	jmp    40dd29 <__flatcc_gen_sort@@Base+0x1d19>
  40dda9:	lea    r8,[rip+0x28421]        # 4361d1 <_IO_stdin_used@@Base+0x91d1>
  40ddb0:	jmp    40dcdc <__flatcc_gen_sort@@Base+0x1ccc>
  40ddb5:	lea    r8,[rip+0x2840c]        # 4361c8 <_IO_stdin_used@@Base+0x91c8>
  40ddbc:	jmp    40dcdc <__flatcc_gen_sort@@Base+0x1ccc>
  40ddc1:	lea    r8,[rip+0x283f7]        # 4361bf <_IO_stdin_used@@Base+0x91bf>
  40ddc8:	jmp    40dcdc <__flatcc_gen_sort@@Base+0x1ccc>
  40ddcd:	lea    r8,[rip+0x283fc]        # 4361d0 <_IO_stdin_used@@Base+0x91d0>
  40ddd4:	jmp    40daf0 <__flatcc_gen_sort@@Base+0x1ae0>
  40ddd9:	lea    r8,[rip+0x283e8]        # 4361c8 <_IO_stdin_used@@Base+0x91c8>
  40dde0:	jmp    40daf0 <__flatcc_gen_sort@@Base+0x1ae0>
  40dde5:	lea    r8,[rip+0x283d3]        # 4361bf <_IO_stdin_used@@Base+0x91bf>
  40ddec:	jmp    40daf0 <__flatcc_gen_sort@@Base+0x1ae0>
  40ddf1:	lea    r8,[rip+0x283cf]        # 4361c7 <_IO_stdin_used@@Base+0x91c7>
  40ddf8:	jmp    40daf0 <__flatcc_gen_sort@@Base+0x1ae0>
  40ddfd:	lea    r8,[rip+0x283ba]        # 4361be <_IO_stdin_used@@Base+0x91be>
  40de04:	jmp    40daf0 <__flatcc_gen_sort@@Base+0x1ae0>
  40de09:	mov    rax,QWORD PTR [rip+0x431d8]        # 450fe8 <stderr@GLIBC_2.2.5>
  40de10:	lea    rcx,[rip+0x20df9]        # 42ec10 <_IO_stdin_used@@Base+0x1c10>
  40de17:	lea    rdx,[rip+0x283c3]        # 4361e1 <_IO_stdin_used@@Base+0x91e1>
  40de1e:	lea    r9,[rip+0x20db3]        # 42ebd8 <_IO_stdin_used@@Base+0x1bd8>
  40de25:	mov    esi,0x1
  40de2a:	mov    r8d,0xe2
  40de30:	mov    rdi,QWORD PTR [rax]
  40de33:	xor    eax,eax
  40de35:	call   405200 <__fprintf_chk@plt>
  40de3a:	lea    rcx,[rip+0x32e97]        # 440cd8 <_IO_stdin_used@@Base+0x13cd8>
  40de41:	lea    rsi,[rip+0x20dc8]        # 42ec10 <_IO_stdin_used@@Base+0x1c10>
  40de48:	lea    rdi,[rip+0x293da]        # 437229 <_IO_stdin_used@@Base+0xa229>
  40de4f:	mov    edx,0xe2
  40de54:	call   405100 <__assert_fail@plt>
  40de59:	lea    r8,[rip+0x28379]        # 4361d9 <_IO_stdin_used@@Base+0x91d9>
  40de60:	movzx  r9d,BYTE PTR [rbx+0x48]
  40de65:	mov    rdi,QWORD PTR [rsp+0x10]
  40de6a:	lea    rcx,[rip+0x283cc]        # 43623d <_IO_stdin_used@@Base+0x923d>
  40de71:	mov    edx,0x64
  40de76:	mov    esi,0x1
  40de7b:	xor    eax,eax
  40de7d:	call   405220 <__sprintf_chk@plt>
  40de82:	jmp    40dc89 <__flatcc_gen_sort@@Base+0x1c79>
  40de87:	lea    r8,[rip+0x2834c]        # 4361da <_IO_stdin_used@@Base+0x91da>
  40de8e:	jmp    40de60 <__flatcc_gen_sort@@Base+0x1e50>
  40de90:	lea    r8,[rip+0x28331]        # 4361c8 <_IO_stdin_used@@Base+0x91c8>
  40de97:	jmp    40de60 <__flatcc_gen_sort@@Base+0x1e50>
  40de99:	lea    r8,[rip+0x2831f]        # 4361bf <_IO_stdin_used@@Base+0x91bf>
  40dea0:	jmp    40de60 <__flatcc_gen_sort@@Base+0x1e50>
  40dea2:	lea    r8,[rip+0x28327]        # 4361d0 <_IO_stdin_used@@Base+0x91d0>
  40dea9:	jmp    40de60 <__flatcc_gen_sort@@Base+0x1e50>
  40deab:	lea    r8,[rip+0x28315]        # 4361c7 <_IO_stdin_used@@Base+0x91c7>
  40deb2:	jmp    40de60 <__flatcc_gen_sort@@Base+0x1e50>
  40deb4:	lea    r8,[rip+0x28303]        # 4361be <_IO_stdin_used@@Base+0x91be>
  40debb:	jmp    40de60 <__flatcc_gen_sort@@Base+0x1e50>
  40debd:	lea    r8,[rip+0x2830d]        # 4361d1 <_IO_stdin_used@@Base+0x91d1>
  40dec4:	jmp    40de60 <__flatcc_gen_sort@@Base+0x1e50>
  40dec6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40ded0:	mov    rdi,QWORD PTR [rbp+0xd0]
  40ded7:	lea    rdx,[rip+0x29bea]        # 437ac8 <_IO_stdin_used@@Base+0xaac8>
  40dede:	mov    esi,0x1
  40dee3:	xor    eax,eax
  40dee5:	call   405200 <__fprintf_chk@plt>
  40deea:	jmp    40d812 <__flatcc_gen_sort@@Base+0x1802>
  40deef:	mov    rdi,QWORD PTR [rbp+0xd0]
  40def6:	lea    rdx,[rip+0x29bcb]        # 437ac8 <_IO_stdin_used@@Base+0xaac8>
  40defd:	mov    esi,0x1
  40df02:	xor    eax,eax
  40df04:	call   405200 <__fprintf_chk@plt>
  40df09:	jmp    40d7ca <__flatcc_gen_sort@@Base+0x17ba>
  40df0e:	cmp    eax,0x9
  40df11:	ja     40de09 <__flatcc_gen_sort@@Base+0x1df9>
  40df17:	lea    rdx,[rip+0x32cc6]        # 440be4 <_IO_stdin_used@@Base+0x13be4>
  40df1e:	movsxd rax,DWORD PTR [rdx+rax*4]
  40df22:	add    rax,rdx
  40df25:	jmp    rax
  40df27:	lea    r8,[rip+0x282ab]        # 4361d9 <_IO_stdin_used@@Base+0x91d9>
  40df2e:	mov    r9,QWORD PTR [rbx+0x48]
  40df32:	lea    rcx,[rip+0x282fb]        # 436234 <_IO_stdin_used@@Base+0x9234>
  40df39:	mov    rdi,QWORD PTR [rsp+0x10]
  40df3e:	mov    edx,0x64
  40df43:	mov    esi,0x1
  40df48:	xor    eax,eax
  40df4a:	call   405220 <__sprintf_chk@plt>
  40df4f:	jmp    40dc89 <__flatcc_gen_sort@@Base+0x1c79>
  40df54:	lea    r8,[rip+0x2827f]        # 4361da <_IO_stdin_used@@Base+0x91da>
  40df5b:	jmp    40df2e <__flatcc_gen_sort@@Base+0x1f1e>
  40df5d:	lea    r8,[rip+0x2826c]        # 4361d0 <_IO_stdin_used@@Base+0x91d0>
  40df64:	jmp    40df2e <__flatcc_gen_sort@@Base+0x1f1e>
  40df66:	lea    r8,[rip+0x2825a]        # 4361c7 <_IO_stdin_used@@Base+0x91c7>
  40df6d:	jmp    40df2e <__flatcc_gen_sort@@Base+0x1f1e>
  40df6f:	lea    r8,[rip+0x28248]        # 4361be <_IO_stdin_used@@Base+0x91be>
  40df76:	jmp    40df2e <__flatcc_gen_sort@@Base+0x1f1e>
  40df78:	lea    r8,[rip+0x28252]        # 4361d1 <_IO_stdin_used@@Base+0x91d1>
  40df7f:	jmp    40df2e <__flatcc_gen_sort@@Base+0x1f1e>
  40df81:	lea    r8,[rip+0x28240]        # 4361c8 <_IO_stdin_used@@Base+0x91c8>
  40df88:	jmp    40df2e <__flatcc_gen_sort@@Base+0x1f1e>
  40df8a:	lea    r8,[rip+0x2822e]        # 4361bf <_IO_stdin_used@@Base+0x91bf>
  40df91:	jmp    40df2e <__flatcc_gen_sort@@Base+0x1f1e>
  40df93:	cmp    eax,0x9
  40df96:	ja     40de09 <__flatcc_gen_sort@@Base+0x1df9>
  40df9c:	lea    rdx,[rip+0x32c69]        # 440c0c <_IO_stdin_used@@Base+0x13c0c>
  40dfa3:	movsxd rax,DWORD PTR [rdx+rax*4]
  40dfa7:	add    rax,rdx
  40dfaa:	jmp    rax
  40dfac:	lea    r8,[rip+0x28226]        # 4361d9 <_IO_stdin_used@@Base+0x91d9>
  40dfb3:	mov    r9,QWORD PTR [rbx+0x48]
  40dfb7:	lea    rcx,[rip+0x2826d]        # 43622b <_IO_stdin_used@@Base+0x922b>
  40dfbe:	jmp    40df39 <__flatcc_gen_sort@@Base+0x1f29>
  40dfc3:	lea    r8,[rip+0x28210]        # 4361da <_IO_stdin_used@@Base+0x91da>
  40dfca:	jmp    40dfb3 <__flatcc_gen_sort@@Base+0x1fa3>
  40dfcc:	lea    r8,[rip+0x281fd]        # 4361d0 <_IO_stdin_used@@Base+0x91d0>
  40dfd3:	jmp    40dfb3 <__flatcc_gen_sort@@Base+0x1fa3>
  40dfd5:	lea    r8,[rip+0x281eb]        # 4361c7 <_IO_stdin_used@@Base+0x91c7>
  40dfdc:	jmp    40dfb3 <__flatcc_gen_sort@@Base+0x1fa3>
  40dfde:	lea    r8,[rip+0x281d9]        # 4361be <_IO_stdin_used@@Base+0x91be>
  40dfe5:	jmp    40dfb3 <__flatcc_gen_sort@@Base+0x1fa3>
  40dfe7:	lea    r8,[rip+0x281e3]        # 4361d1 <_IO_stdin_used@@Base+0x91d1>
  40dfee:	jmp    40dfb3 <__flatcc_gen_sort@@Base+0x1fa3>
  40dff0:	lea    r8,[rip+0x281d1]        # 4361c8 <_IO_stdin_used@@Base+0x91c8>
  40dff7:	jmp    40dfb3 <__flatcc_gen_sort@@Base+0x1fa3>
  40dff9:	lea    r8,[rip+0x281bf]        # 4361bf <_IO_stdin_used@@Base+0x91bf>
  40e000:	jmp    40dfb3 <__flatcc_gen_sort@@Base+0x1fa3>
  40e002:	cmp    dx,0x3
  40e006:	jne    40d5a0 <__flatcc_gen_sort@@Base+0x1590>
  40e00c:	vxorps xmm0,xmm0,xmm0
  40e010:	mov    rdi,QWORD PTR [rsp+0x10]
  40e015:	lea    rcx,[rip+0x28228]        # 436244 <_IO_stdin_used@@Base+0x9244>
  40e01c:	mov    edx,0x64
  40e021:	mov    esi,0x1
  40e026:	mov    eax,0x1
  40e02b:	vcvtsd2ss xmm0,xmm0,QWORD PTR [rbx+0x48]
  40e030:	vcvtss2sd xmm0,xmm0,xmm0
  40e034:	call   405220 <__sprintf_chk@plt>
  40e039:	lea    r10,[rip+0x28166]        # 4361a6 <_IO_stdin_used@@Base+0x91a6>
  40e040:	lea    r11,[rip+0x377c7]        # 44580e <_IO_stdin_used@@Base+0x1880e>
  40e047:	mov    QWORD PTR [rsp+0x18],r10
  40e04c:	jmp    40d918 <__flatcc_gen_sort@@Base+0x1908>
  40e051:	cmp    dx,0x3
  40e055:	jne    40d5a0 <__flatcc_gen_sort@@Base+0x1590>
  40e05b:	lea    r10,[rip+0x2814a]        # 4361ac <_IO_stdin_used@@Base+0x91ac>
  40e062:	mov    QWORD PTR [rsp+0x18],r10
  40e067:	lea    r11,[rip+0x377a0]        # 44580e <_IO_stdin_used@@Base+0x1880e>
  40e06e:	jmp    40d8da <__flatcc_gen_sort@@Base+0x18ca>
  40e073:	cmp    dx,0x3
  40e077:	jne    40d5a0 <__flatcc_gen_sort@@Base+0x1590>
  40e07d:	lea    rax,[rip+0x2821d]        # 4362a1 <_IO_stdin_used@@Base+0x92a1>
  40e084:	lea    r10,[rip+0x280fa]        # 436185 <_IO_stdin_used@@Base+0x9185>
  40e08b:	mov    QWORD PTR [rsp+0x18],rax
  40e090:	jmp    40e067 <__flatcc_gen_sort@@Base+0x2057>
  40e092:	cmp    dx,0x3
  40e096:	jne    40d5a0 <__flatcc_gen_sort@@Base+0x1590>
  40e09c:	lea    rax,[rip+0x2820d]        # 4362b0 <_IO_stdin_used@@Base+0x92b0>
  40e0a3:	lea    r10,[rip+0x280ee]        # 436198 <_IO_stdin_used@@Base+0x9198>
  40e0aa:	mov    QWORD PTR [rsp+0x18],rax
  40e0af:	jmp    40e067 <__flatcc_gen_sort@@Base+0x2057>
  40e0b1:	cmp    dx,0x3
  40e0b5:	jne    40d5a0 <__flatcc_gen_sort@@Base+0x1590>
  40e0bb:	lea    rax,[rip+0x281e7]        # 4362a9 <_IO_stdin_used@@Base+0x92a9>
  40e0c2:	lea    r10,[rip+0x280c6]        # 43618f <_IO_stdin_used@@Base+0x918f>
  40e0c9:	mov    QWORD PTR [rsp+0x18],rax
  40e0ce:	jmp    40e067 <__flatcc_gen_sort@@Base+0x2057>
  40e0d0:	lea    r10,[rip+0x280cf]        # 4361a6 <_IO_stdin_used@@Base+0x91a6>
  40e0d7:	lea    r11,[rip+0x37730]        # 44580e <_IO_stdin_used@@Base+0x1880e>
  40e0de:	mov    QWORD PTR [rsp+0x18],r10
  40e0e3:	jmp    40d8b0 <__flatcc_gen_sort@@Base+0x18a0>
  40e0e8:	lea    rcx,[rip+0x281c1]        # 4362b0 <_IO_stdin_used@@Base+0x92b0>
  40e0ef:	lea    r10,[rip+0x280a2]        # 436198 <_IO_stdin_used@@Base+0x9198>
  40e0f6:	lea    r11,[rip+0x37711]        # 44580e <_IO_stdin_used@@Base+0x1880e>
  40e0fd:	mov    QWORD PTR [rsp+0x18],rcx
  40e102:	jmp    40d880 <__flatcc_gen_sort@@Base+0x1870>
  40e107:	lea    rcx,[rip+0x281a2]        # 4362b0 <_IO_stdin_used@@Base+0x92b0>
  40e10e:	lea    r10,[rip+0x28083]        # 436198 <_IO_stdin_used@@Base+0x9198>
  40e115:	lea    r11,[rip+0x376f2]        # 44580e <_IO_stdin_used@@Base+0x1880e>
  40e11c:	mov    QWORD PTR [rsp+0x18],rcx
  40e121:	jmp    40d8b0 <__flatcc_gen_sort@@Base+0x18a0>
  40e126:	lea    rcx,[rip+0x2817c]        # 4362a9 <_IO_stdin_used@@Base+0x92a9>
  40e12d:	lea    r10,[rip+0x2805b]        # 43618f <_IO_stdin_used@@Base+0x918f>
  40e134:	lea    r11,[rip+0x376d3]        # 44580e <_IO_stdin_used@@Base+0x1880e>
  40e13b:	mov    QWORD PTR [rsp+0x18],rcx
  40e140:	jmp    40d8b0 <__flatcc_gen_sort@@Base+0x18a0>
  40e145:	lea    rcx,[rip+0x28155]        # 4362a1 <_IO_stdin_used@@Base+0x92a1>
  40e14c:	lea    r10,[rip+0x28032]        # 436185 <_IO_stdin_used@@Base+0x9185>
  40e153:	lea    r11,[rip+0x376b4]        # 44580e <_IO_stdin_used@@Base+0x1880e>
  40e15a:	mov    QWORD PTR [rsp+0x18],rcx
  40e15f:	jmp    40d8b0 <__flatcc_gen_sort@@Base+0x18a0>
  40e164:	lea    rcx,[rip+0x2813e]        # 4362a9 <_IO_stdin_used@@Base+0x92a9>
  40e16b:	lea    r10,[rip+0x2801d]        # 43618f <_IO_stdin_used@@Base+0x918f>
  40e172:	lea    r11,[rip+0x37695]        # 44580e <_IO_stdin_used@@Base+0x1880e>
  40e179:	mov    QWORD PTR [rsp+0x18],rcx
  40e17e:	jmp    40d880 <__flatcc_gen_sort@@Base+0x1870>
  40e183:	lea    rcx,[rip+0x28117]        # 4362a1 <_IO_stdin_used@@Base+0x92a1>
  40e18a:	lea    r10,[rip+0x27ff4]        # 436185 <_IO_stdin_used@@Base+0x9185>
  40e191:	lea    r11,[rip+0x37676]        # 44580e <_IO_stdin_used@@Base+0x1880e>
  40e198:	mov    QWORD PTR [rsp+0x18],rcx
  40e19d:	jmp    40d880 <__flatcc_gen_sort@@Base+0x1870>
  40e1a2:	vxorps xmm0,xmm0,xmm0
  40e1a6:	lea    rcx,[rip+0x28097]        # 436244 <_IO_stdin_used@@Base+0x9244>
  40e1ad:	vcvtsd2ss xmm0,xmm0,QWORD PTR [rbx+0x48]
  40e1b2:	vcvtss2sd xmm0,xmm0,xmm0
  40e1b6:	jmp    40dc70 <__flatcc_gen_sort@@Base+0x1c60>
  40e1bb:	call   4050d0 <__stack_chk_fail@plt>
  40e1c0:	push   r15
  40e1c2:	push   r14
  40e1c4:	mov    ecx,0x1d
  40e1c9:	push   r13
  40e1cb:	push   r12
  40e1cd:	push   rbp
  40e1ce:	push   rbx
  40e1cf:	mov    rbx,rdi
  40e1d2:	sub    rsp,0x1f8
  40e1d9:	lea    r12,[rsp+0x100]
  40e1e1:	mov    rax,QWORD PTR fs:0x28
  40e1ea:	mov    QWORD PTR [rsp+0x1e8],rax
  40e1f2:	xor    eax,eax
  40e1f4:	mov    rdi,r12
  40e1f7:	rep stos QWORD PTR es:[rdi],rax
  40e1fa:	mov    rax,QWORD PTR [rbx+0xd8]
  40e201:	mov    rbp,QWORD PTR [rax+0x40]
  40e205:	test   rbp,rbp
  40e208:	je     40ee65 <__flatcc_gen_sort@@Base+0x2e55>
  40e20e:	xor    eax,eax
  40e210:	lea    r13,[rip+0x299c1]        # 437bd8 <_IO_stdin_used@@Base+0xabd8>
  40e217:	jmp    40e229 <__flatcc_gen_sort@@Base+0x2219>
  40e219:	nop    DWORD PTR [rax+0x0]
  40e220:	mov    rbp,QWORD PTR [rbp+0x0]
  40e224:	test   rbp,rbp
  40e227:	je     40e276 <__flatcc_gen_sort@@Base+0x2266>
  40e229:	cmp    WORD PTR [rbp+0x10],0x4
  40e22e:	jne    40e220 <__flatcc_gen_sort@@Base+0x2210>
  40e230:	mov    rdi,QWORD PTR [rbp+0x18]
  40e234:	mov    rsi,rbp
  40e237:	mov    rdx,r12
  40e23a:	call   407300 <__flatcc_fb_scoped_symbol_name@@Base>
  40e23f:	sub    rsp,0x8
  40e243:	mov    rdi,QWORD PTR [rbx+0xd0]
  40e24a:	xor    eax,eax
  40e24c:	push   r12
  40e24e:	mov    r9,rbx
  40e251:	mov    r8,r12
  40e254:	mov    rcx,rbx
  40e257:	mov    rdx,r13
  40e25a:	mov    esi,0x1
  40e25f:	call   405200 <__fprintf_chk@plt>
  40e264:	mov    rbp,QWORD PTR [rbp+0x0]
  40e268:	mov    eax,0x1
  40e26d:	pop    r10
  40e26f:	pop    r11
  40e271:	test   rbp,rbp
  40e274:	jne    40e229 <__flatcc_gen_sort@@Base+0x2219>
  40e276:	test   eax,eax
  40e278:	je     40e294 <__flatcc_gen_sort@@Base+0x2284>
  40e27a:	mov    rdi,QWORD PTR [rbx+0xd0]
  40e281:	lea    rdx,[rip+0x37585]        # 44580d <_IO_stdin_used@@Base+0x1880d>
  40e288:	mov    esi,0x1
  40e28d:	xor    eax,eax
  40e28f:	call   405200 <__fprintf_chk@plt>
  40e294:	mov    rax,QWORD PTR [rbx+0xd8]
  40e29b:	mov    r14,QWORD PTR [rax+0x40]
  40e29f:	test   r14,r14
  40e2a2:	je     40ee65 <__flatcc_gen_sort@@Base+0x2e55>
  40e2a8:	xor    eax,eax
  40e2aa:	jmp    40e2bc <__flatcc_gen_sort@@Base+0x22ac>
  40e2ac:	nop    DWORD PTR [rax+0x0]
  40e2b0:	mov    r14,QWORD PTR [r14]
  40e2b3:	test   r14,r14
  40e2b6:	je     40e43f <__flatcc_gen_sort@@Base+0x242f>
  40e2bc:	cmp    WORD PTR [r14+0x10],0x0
  40e2c2:	jne    40e2b0 <__flatcc_gen_sort@@Base+0x22a0>
  40e2c4:	xor    eax,eax
  40e2c6:	mov    ecx,0x1d
  40e2cb:	mov    rdi,r12
  40e2ce:	rep stos QWORD PTR es:[rdi],rax
  40e2d1:	xor    r13d,r13d
  40e2d4:	mov    rax,QWORD PTR [r14+0x28]
  40e2d8:	test   rax,rax
  40e2db:	je     40e2f7 <__flatcc_gen_sort@@Base+0x22e7>
  40e2dd:	nop    DWORD PTR [rax]
  40e2e0:	movzx  edx,WORD PTR [rax+0x70]
  40e2e4:	mov    rax,QWORD PTR [rax]
  40e2e7:	and    edx,0x4
  40e2ea:	cmp    dx,0x1
  40e2ee:	adc    r13d,0x0
  40e2f2:	test   rax,rax
  40e2f5:	jne    40e2e0 <__flatcc_gen_sort@@Base+0x22d0>
  40e2f7:	mov    rdi,QWORD PTR [r14+0x18]
  40e2fb:	mov    rdx,r12
  40e2fe:	mov    rsi,r14
  40e301:	call   407300 <__flatcc_fb_scoped_symbol_name@@Base>
  40e306:	mov    rdi,QWORD PTR [rbx+0xd0]
  40e30d:	lea    rdx,[rip+0x2991c]        # 437c30 <_IO_stdin_used@@Base+0xac30>
  40e314:	xor    eax,eax
  40e316:	mov    r8,r12
  40e319:	mov    rcx,rbx
  40e31c:	mov    esi,0x1
  40e321:	call   405200 <__fprintf_chk@plt>
  40e326:	mov    rbp,QWORD PTR [r14+0x28]
  40e32a:	test   rbp,rbp
  40e32d:	je     40e6a0 <__flatcc_gen_sort@@Base+0x2690>
  40e333:	xor    r15d,r15d
  40e336:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40e340:	movzx  eax,WORD PTR [rbp+0x70]
  40e344:	test   al,0x4
  40e346:	jne    40e3b4 <__flatcc_gen_sort@@Base+0x23a4>
  40e348:	test   ah,0x1
  40e34b:	je     40e3b4 <__flatcc_gen_sort@@Base+0x23a4>
  40e34d:	test   r15d,r15d
  40e350:	je     40e680 <__flatcc_gen_sort@@Base+0x2670>
  40e356:	test   r13d,r13d
  40e359:	je     40e390 <__flatcc_gen_sort@@Base+0x2380>
  40e35b:	test   r15b,0x3
  40e35f:	mov    rdi,QWORD PTR [rbx+0xd0]
  40e366:	jne    40e377 <__flatcc_gen_sort@@Base+0x2367>
  40e368:	mov    eax,r13d
  40e36b:	sub    eax,r15d
  40e36e:	cmp    eax,0x2
  40e371:	jg     40e830 <__flatcc_gen_sort@@Base+0x2820>
  40e377:	lea    rdx,[rip+0x28e67]        # 4371e5 <_IO_stdin_used@@Base+0xa1e5>
  40e37e:	mov    esi,0x1
  40e383:	xor    eax,eax
  40e385:	call   405200 <__fprintf_chk@plt>
  40e38a:	nop    WORD PTR [rax+rax*1+0x0]
  40e390:	mov    rdi,QWORD PTR [rbx+0xd0]
  40e397:	mov    ecx,DWORD PTR [rbp+0x88]
  40e39d:	lea    rdx,[rip+0x28eda]        # 43727e <_IO_stdin_used@@Base+0xa27e>
  40e3a4:	mov    esi,0x1
  40e3a9:	xor    eax,eax
  40e3ab:	add    r15d,0x1
  40e3af:	call   405200 <__fprintf_chk@plt>
  40e3b4:	mov    rbp,QWORD PTR [rbp+0x0]
  40e3b8:	test   rbp,rbp
  40e3bb:	jne    40e340 <__flatcc_gen_sort@@Base+0x2330>
  40e3bd:	test   r15d,r15d
  40e3c0:	je     40e6a0 <__flatcc_gen_sort@@Base+0x2690>
  40e3c6:	mov    rdi,QWORD PTR [rbx+0xd0]
  40e3cd:	lea    rdx,[rip+0x28ead]        # 437281 <_IO_stdin_used@@Base+0xa281>
  40e3d4:	mov    esi,0x1
  40e3d9:	xor    eax,eax
  40e3db:	call   405200 <__fprintf_chk@plt>
  40e3e0:	xor    eax,eax
  40e3e2:	mov    ecx,0x1d
  40e3e7:	mov    rdi,r12
  40e3ea:	rep stos QWORD PTR es:[rdi],rax
  40e3ed:	mov    rsi,r14
  40e3f0:	mov    rdx,r12
  40e3f3:	mov    rdi,QWORD PTR [r14+0x18]
  40e3f7:	call   407300 <__flatcc_fb_scoped_symbol_name@@Base>
  40e3fc:	mov    rdi,QWORD PTR [rbx+0xd0]
  40e403:	sub    rsp,0x8
  40e407:	lea    rdx,[rip+0x29852]        # 437c60 <_IO_stdin_used@@Base+0xac60>
  40e40e:	push   QWORD PTR [r14+0xa8]
  40e415:	mov    r9,r12
  40e418:	mov    r8,rbx
  40e41b:	xor    eax,eax
  40e41d:	mov    rcx,rbx
  40e420:	mov    esi,0x1
  40e425:	call   405200 <__fprintf_chk@plt>
  40e42a:	mov    r14,QWORD PTR [r14]
  40e42d:	mov    eax,0x1
  40e432:	pop    r8
  40e434:	pop    r9
  40e436:	test   r14,r14
  40e439:	jne    40e2bc <__flatcc_gen_sort@@Base+0x22ac>
  40e43f:	mov    DWORD PTR [rsp+0xc],eax
  40e443:	mov    rax,QWORD PTR [rbx+0xd8]
  40e44a:	mov    r13,QWORD PTR [rax+0x40]
  40e44e:	test   r13,r13
  40e451:	je     40ec85 <__flatcc_gen_sort@@Base+0x2c75>
  40e457:	lea    rax,[rsp+0x10]
  40e45c:	mov    r15,r13
  40e45f:	mov    QWORD PTR [rsp],rax
  40e463:	cmp    WORD PTR [r15+0x10],0x0
  40e469:	je     40e6c0 <__flatcc_gen_sort@@Base+0x26b0>
  40e46f:	mov    r15,QWORD PTR [r15]
  40e472:	test   r15,r15
  40e475:	jne    40e463 <__flatcc_gen_sort@@Base+0x2453>
  40e477:	mov    ecx,DWORD PTR [rsp+0xc]
  40e47b:	test   ecx,ecx
  40e47d:	jne    40ec91 <__flatcc_gen_sort@@Base+0x2c81>
  40e483:	mov    rax,QWORD PTR [rbx+0xd8]
  40e48a:	mov    rbp,QWORD PTR [rax+0x40]
  40e48e:	xor    eax,eax
  40e490:	test   rbp,rbp
  40e493:	je     40e4cf <__flatcc_gen_sort@@Base+0x24bf>
  40e495:	lea    r14,[rsp+0x10]
  40e49a:	xor    r13d,r13d
  40e49d:	cmp    WORD PTR [rbp+0x10],0x4
  40e4a2:	je     40eab5 <__flatcc_gen_sort@@Base+0x2aa5>
  40e4a8:	mov    rbp,QWORD PTR [rbp+0x0]
  40e4ac:	test   rbp,rbp
  40e4af:	jne    40e49d <__flatcc_gen_sort@@Base+0x248d>
  40e4b1:	test   eax,eax
  40e4b3:	je     40e4cf <__flatcc_gen_sort@@Base+0x24bf>
  40e4b5:	mov    rdi,QWORD PTR [rbx+0xd0]
  40e4bc:	lea    rdx,[rip+0x3734a]        # 44580d <_IO_stdin_used@@Base+0x1880d>
  40e4c3:	mov    esi,0x1
  40e4c8:	xor    eax,eax
  40e4ca:	call   405200 <__fprintf_chk@plt>
  40e4cf:	mov    eax,DWORD PTR [rsp+0xc]
  40e4d3:	test   eax,eax
  40e4d5:	je     40ee72 <__flatcc_gen_sort@@Base+0x2e62>
  40e4db:	mov    rax,QWORD PTR [rbx+0xd8]
  40e4e2:	mov    r14,QWORD PTR [rax+0x40]
  40e4e6:	test   r14,r14
  40e4e9:	je     40ee72 <__flatcc_gen_sort@@Base+0x2e62>
  40e4ef:	mov    r13,rbx
  40e4f2:	jmp    40e504 <__flatcc_gen_sort@@Base+0x24f4>
  40e4f4:	nop    DWORD PTR [rax+0x0]
  40e4f8:	mov    r14,QWORD PTR [r14]
  40e4fb:	test   r14,r14
  40e4fe:	je     40ee72 <__flatcc_gen_sort@@Base+0x2e62>
  40e504:	cmp    WORD PTR [r14+0x10],0x0
  40e50a:	jne    40e4f8 <__flatcc_gen_sort@@Base+0x24e8>
  40e50c:	mov    rsi,r14
  40e50f:	mov    rdi,r13
  40e512:	call   40d030 <__flatcc_gen_sort@@Base+0x1020>
  40e517:	movzx  eax,WORD PTR [r14+0xa4]
  40e51f:	mov    ecx,0x1d
  40e524:	mov    rdi,r12
  40e527:	mov    rdx,r12
  40e52a:	mov    rsi,r14
  40e52d:	and    ax,0x8
  40e531:	mov    WORD PTR [rsp],ax
  40e535:	sete   bl
  40e538:	xor    eax,eax
  40e53a:	rep stos QWORD PTR es:[rdi],rax
  40e53d:	mov    rdi,QWORD PTR [r14+0x18]
  40e541:	call   407300 <__flatcc_fb_scoped_symbol_name@@Base>
  40e546:	sub    rsp,0x8
  40e54a:	mov    rdi,QWORD PTR [r13+0xd0]
  40e551:	lea    rdx,[rip+0x299b0]        # 437f08 <_IO_stdin_used@@Base+0xaf08>
  40e558:	push   r12
  40e55a:	mov    r9,r13
  40e55d:	mov    r8,r12
  40e560:	mov    rcx,r12
  40e563:	mov    esi,0x1
  40e568:	xor    eax,eax
  40e56a:	call   405200 <__fprintf_chk@plt>
  40e56f:	mov    rdi,QWORD PTR [r13+0xd0]
  40e576:	lea    rdx,[rip+0x28de6]        # 437363 <_IO_stdin_used@@Base+0xa363>
  40e57d:	xor    eax,eax
  40e57f:	mov    rcx,r12
  40e582:	mov    esi,0x1
  40e587:	call   405200 <__fprintf_chk@plt>
  40e58c:	mov    rbp,QWORD PTR [r14+0x30]
  40e590:	pop    r15
  40e592:	xor    r15d,r15d
  40e595:	test   rbp,rbp
  40e598:	pop    rax
  40e599:	je     40ed34 <__flatcc_gen_sort@@Base+0x2d24>
  40e59f:	nop
  40e5a0:	test   BYTE PTR [rbp+0x70],0x4
  40e5a4:	jne    40e5f0 <__flatcc_gen_sort@@Base+0x25e0>
  40e5a6:	cmp    WORD PTR [rbp+0x28],0xe
  40e5ab:	mov    rax,QWORD PTR [rbp+0x8]
  40e5af:	mov    r9,QWORD PTR [rax]
  40e5b2:	mov    r8,QWORD PTR [rax+0x8]
  40e5b6:	jne    40e5c7 <__flatcc_gen_sort@@Base+0x25b7>
  40e5b8:	mov    rax,QWORD PTR [rbp+0x18]
  40e5bc:	cmp    WORD PTR [rax+0x10],0x4
  40e5c1:	je     40ee20 <__flatcc_gen_sort@@Base+0x2e10>
  40e5c7:	mov    rdi,QWORD PTR [r13+0xd0]
  40e5ce:	sub    rsp,0x8
  40e5d2:	lea    rdx,[rip+0x29a1f]        # 437ff8 <_IO_stdin_used@@Base+0xaff8>
  40e5d9:	push   QWORD PTR [rbp+0x88]
  40e5df:	mov    esi,0x1
  40e5e4:	mov    rcx,r12
  40e5e7:	xor    eax,eax
  40e5e9:	call   405200 <__fprintf_chk@plt>
  40e5ee:	pop    rsi
  40e5ef:	pop    rdi
  40e5f0:	mov    rbp,QWORD PTR [rbp+0x98]
  40e5f7:	test   rbp,rbp
  40e5fa:	jne    40e5a0 <__flatcc_gen_sort@@Base+0x2590>
  40e5fc:	and    r15d,0x1
  40e600:	je     40ed34 <__flatcc_gen_sort@@Base+0x2d24>
  40e606:	test   bl,bl
  40e608:	je     40ed34 <__flatcc_gen_sort@@Base+0x2d24>
  40e60e:	mov    rbx,QWORD PTR [r14+0x30]
  40e612:	test   rbx,rbx
  40e615:	jne    40e630 <__flatcc_gen_sort@@Base+0x2620>
  40e617:	jmp    40ed34 <__flatcc_gen_sort@@Base+0x2d24>
  40e61c:	nop    DWORD PTR [rax+0x0]
  40e620:	mov    rbx,QWORD PTR [rbx+0x98]
  40e627:	test   rbx,rbx
  40e62a:	je     40ed34 <__flatcc_gen_sort@@Base+0x2d24>
  40e630:	test   BYTE PTR [rbx+0x70],0x4
  40e634:	jne    40e620 <__flatcc_gen_sort@@Base+0x2610>
  40e636:	cmp    WORD PTR [rbx+0x28],0xe
  40e63b:	jne    40e620 <__flatcc_gen_sort@@Base+0x2610>
  40e63d:	mov    rax,QWORD PTR [rbx+0x18]
  40e641:	cmp    WORD PTR [rax+0x10],0x4
  40e646:	jne    40e620 <__flatcc_gen_sort@@Base+0x2610>
  40e648:	mov    rax,QWORD PTR [rbx+0x8]
  40e64c:	sub    rsp,0x8
  40e650:	mov    rdi,QWORD PTR [r13+0xd0]
  40e657:	push   QWORD PTR [rbx+0x88]
  40e65d:	lea    rdx,[rip+0x299bc]        # 438020 <_IO_stdin_used@@Base+0xb020>
  40e664:	mov    rcx,r12
  40e667:	mov    esi,0x1
  40e66c:	mov    r9,QWORD PTR [rax]
  40e66f:	mov    r8d,DWORD PTR [rax+0x8]
  40e673:	xor    eax,eax
  40e675:	call   405200 <__fprintf_chk@plt>
  40e67a:	pop    rdx
  40e67b:	pop    rcx
  40e67c:	jmp    40e620 <__flatcc_gen_sort@@Base+0x2610>
  40e67e:	xchg   ax,ax
  40e680:	mov    rdi,QWORD PTR [rbx+0xd0]
  40e687:	lea    rdx,[rip+0x28b6d]        # 4371fb <_IO_stdin_used@@Base+0xa1fb>
  40e68e:	mov    esi,0x1
  40e693:	xor    eax,eax
  40e695:	call   405200 <__fprintf_chk@plt>
  40e69a:	jmp    40e390 <__flatcc_gen_sort@@Base+0x2380>
  40e69f:	nop
  40e6a0:	mov    rdi,QWORD PTR [rbx+0xd0]
  40e6a7:	lea    rdx,[rip+0x28bd4]        # 437282 <_IO_stdin_used@@Base+0xa282>
  40e6ae:	mov    esi,0x1
  40e6b3:	xor    eax,eax
  40e6b5:	call   405200 <__fprintf_chk@plt>
  40e6ba:	jmp    40e3e0 <__flatcc_gen_sort@@Base+0x23d0>
  40e6bf:	nop
  40e6c0:	mov    rdi,QWORD PTR [rsp]
  40e6c4:	xor    eax,eax
  40e6c6:	mov    ecx,0x1d
  40e6cb:	mov    rdx,QWORD PTR [rsp]
  40e6cf:	mov    rsi,r15
  40e6d2:	xor    r13d,r13d
  40e6d5:	rep stos QWORD PTR es:[rdi],rax
  40e6d8:	mov    rdi,QWORD PTR [r15+0x18]
  40e6dc:	call   407300 <__flatcc_fb_scoped_symbol_name@@Base>
  40e6e1:	mov    rax,QWORD PTR [r15+0x28]
  40e6e5:	test   rax,rax
  40e6e8:	je     40e707 <__flatcc_gen_sort@@Base+0x26f7>
  40e6ea:	nop    WORD PTR [rax+rax*1+0x0]
  40e6f0:	movzx  edx,WORD PTR [rax+0x70]
  40e6f4:	mov    rax,QWORD PTR [rax]
  40e6f7:	and    edx,0x4
  40e6fa:	cmp    dx,0x1
  40e6fe:	adc    r13d,0x0
  40e702:	test   rax,rax
  40e705:	jne    40e6f0 <__flatcc_gen_sort@@Base+0x26e0>
  40e707:	mov    rdi,QWORD PTR [rbx+0xd0]
  40e70e:	mov    rcx,QWORD PTR [rsp]
  40e712:	lea    rdx,[rip+0x28b70]        # 437289 <_IO_stdin_used@@Base+0xa289>
  40e719:	xor    eax,eax
  40e71b:	mov    esi,0x1
  40e720:	call   405200 <__fprintf_chk@plt>
  40e725:	xor    eax,eax
  40e727:	mov    ecx,0x1d
  40e72c:	mov    rdi,r12
  40e72f:	rep stos QWORD PTR es:[rdi],rax
  40e732:	mov    rbp,QWORD PTR [r15+0x28]
  40e736:	test   rbp,rbp
  40e739:	jne    40e74d <__flatcc_gen_sort@@Base+0x273d>
  40e73b:	jmp    40e8b6 <__flatcc_gen_sort@@Base+0x28a6>
  40e740:	mov    rbp,QWORD PTR [rbp+0x0]
  40e744:	test   rbp,rbp
  40e747:	je     40e8b6 <__flatcc_gen_sort@@Base+0x28a6>
  40e74d:	test   BYTE PTR [rbp+0x70],0x4
  40e751:	jne    40e740 <__flatcc_gen_sort@@Base+0x2730>
  40e753:	test   r13d,r13d
  40e756:	lea    r14d,[rax+0x1]
  40e75a:	je     40e780 <__flatcc_gen_sort@@Base+0x2770>
  40e75c:	test   eax,eax
  40e75e:	jne    40e7a0 <__flatcc_gen_sort@@Base+0x2790>
  40e760:	cmp    r13d,0x4
  40e764:	jg     40e7ae <__flatcc_gen_sort@@Base+0x279e>
  40e766:	mov    rdi,QWORD PTR [rbx+0xd0]
  40e76d:	lea    rdx,[rip+0x28a71]        # 4371e5 <_IO_stdin_used@@Base+0xa1e5>
  40e774:	mov    esi,0x1
  40e779:	xor    eax,eax
  40e77b:	call   405200 <__fprintf_chk@plt>
  40e780:	movzx  eax,WORD PTR [rbp+0x28]
  40e784:	sub    eax,0x7
  40e787:	cmp    ax,0x8
  40e78b:	ja     40e7e0 <__flatcc_gen_sort@@Base+0x27d0>
  40e78d:	lea    rcx,[rip+0x324a0]        # 440c34 <_IO_stdin_used@@Base+0x13c34>
  40e794:	movzx  eax,ax
  40e797:	movsxd rax,DWORD PTR [rcx+rax*4]
  40e79b:	add    rax,rcx
  40e79e:	jmp    rax
  40e7a0:	test   al,0x3
  40e7a2:	jne    40e766 <__flatcc_gen_sort@@Base+0x2756>
  40e7a4:	mov    ecx,r13d
  40e7a7:	sub    ecx,eax
  40e7a9:	cmp    ecx,0x2
  40e7ac:	jle    40e766 <__flatcc_gen_sort@@Base+0x2756>
  40e7ae:	mov    rdi,QWORD PTR [rbx+0xd0]
  40e7b5:	lea    rcx,[rip+0x28a20]        # 4371dc <_IO_stdin_used@@Base+0xa1dc>
  40e7bc:	lea    rdx,[rip+0x28a1c]        # 4371df <_IO_stdin_used@@Base+0xa1df>
  40e7c3:	xor    eax,eax
  40e7c5:	mov    esi,0x1
  40e7ca:	call   405200 <__fprintf_chk@plt>
  40e7cf:	movzx  eax,WORD PTR [rbp+0x28]
  40e7d3:	sub    eax,0x7
  40e7d6:	cmp    ax,0x8
  40e7da:	jbe    40e78d <__flatcc_gen_sort@@Base+0x277d>
  40e7dc:	nop    DWORD PTR [rax+0x0]
  40e7e0:	mov    rax,QWORD PTR [rip+0x42801]        # 450fe8 <stderr@GLIBC_2.2.5>
  40e7e7:	lea    rcx,[rip+0x28d5a]        # 437548 <_IO_stdin_used@@Base+0xa548>
  40e7ee:	lea    rdx,[rip+0x279ec]        # 4361e1 <_IO_stdin_used@@Base+0x91e1>
  40e7f5:	lea    r9,[rip+0x28fbc]        # 4377b8 <_IO_stdin_used@@Base+0xa7b8>
  40e7fc:	mov    esi,0x1
  40e801:	mov    r8d,0x4b9
  40e807:	mov    rdi,QWORD PTR [rax]
  40e80a:	xor    eax,eax
  40e80c:	call   405200 <__fprintf_chk@plt>
  40e811:	lea    rcx,[rip+0x32518]        # 440d30 <_IO_stdin_used@@Base+0x13d30>
  40e818:	lea    rsi,[rip+0x28d29]        # 437548 <_IO_stdin_used@@Base+0xa548>
  40e81f:	lea    rdi,[rip+0x28a03]        # 437229 <_IO_stdin_used@@Base+0xa229>
  40e826:	mov    edx,0x4b9
  40e82b:	call   405100 <__assert_fail@plt>
  40e830:	lea    rcx,[rip+0x36fd6]        # 44580d <_IO_stdin_used@@Base+0x1880d>
  40e837:	lea    rdx,[rip+0x289a1]        # 4371df <_IO_stdin_used@@Base+0xa1df>
  40e83e:	mov    esi,0x1
  40e843:	xor    eax,eax
  40e845:	call   405200 <__fprintf_chk@plt>
  40e84a:	jmp    40e390 <__flatcc_gen_sort@@Base+0x2380>
  40e84f:	nop
  40e850:	mov    rsi,QWORD PTR [rbp+0x18]
  40e854:	mov    rdx,r12
  40e857:	mov    rdi,QWORD PTR [rsi+0x18]
  40e85b:	call   407300 <__flatcc_fb_scoped_symbol_name@@Base>
  40e860:	mov    rax,QWORD PTR [rbp+0x18]
  40e864:	movzx  eax,WORD PTR [rax+0x10]
  40e868:	cmp    ax,0x3
  40e86c:	je     40edc1 <__flatcc_gen_sort@@Base+0x2db1>
  40e872:	jbe    40edb7 <__flatcc_gen_sort@@Base+0x2da7>
  40e878:	cmp    ax,0x4
  40e87c:	jne    40ece4 <__flatcc_gen_sort@@Base+0x2cd4>
  40e882:	mov    r8,QWORD PTR [rbp+0x88]
  40e889:	mov    rdi,QWORD PTR [rbx+0xd0]
  40e890:	lea    rdx,[rip+0x28a65]        # 4372fc <_IO_stdin_used@@Base+0xa2fc>
  40e897:	xor    eax,eax
  40e899:	mov    rcx,r12
  40e89c:	mov    esi,0x1
  40e8a1:	call   405200 <__fprintf_chk@plt>
  40e8a6:	mov    rbp,QWORD PTR [rbp+0x0]
  40e8aa:	mov    eax,r14d
  40e8ad:	test   rbp,rbp
  40e8b0:	jne    40e74d <__flatcc_gen_sort@@Base+0x273d>
  40e8b6:	mov    rdi,QWORD PTR [rbx+0xd0]
  40e8bd:	mov    rcx,QWORD PTR [rsp]
  40e8c1:	lea    rdx,[rip+0x289db]        # 4372a3 <_IO_stdin_used@@Base+0xa2a3>
  40e8c8:	xor    eax,eax
  40e8ca:	mov    esi,0x1
  40e8cf:	xor    ebp,ebp
  40e8d1:	call   405200 <__fprintf_chk@plt>
  40e8d6:	mov    r14,QWORD PTR [r15+0x28]
  40e8da:	test   r14,r14
  40e8dd:	jne    40e8f0 <__flatcc_gen_sort@@Base+0x28e0>
  40e8df:	jmp    40e954 <__flatcc_gen_sort@@Base+0x2944>
  40e8e1:	nop    DWORD PTR [rax+0x0]
  40e8e8:	mov    r14,QWORD PTR [r14]
  40e8eb:	test   r14,r14
  40e8ee:	je     40e954 <__flatcc_gen_sort@@Base+0x2944>
  40e8f0:	test   BYTE PTR [r14+0x70],0x4
  40e8f5:	jne    40e8e8 <__flatcc_gen_sort@@Base+0x28d8>
  40e8f7:	test   r13d,r13d
  40e8fa:	je     40e928 <__flatcc_gen_sort@@Base+0x2918>
  40e8fc:	test   ebp,ebp
  40e8fe:	jne    40ec47 <__flatcc_gen_sort@@Base+0x2c37>
  40e904:	cmp    r13d,0x4
  40e908:	jg     40ec5f <__flatcc_gen_sort@@Base+0x2c4f>
  40e90e:	mov    rdi,QWORD PTR [rbx+0xd0]
  40e915:	lea    rdx,[rip+0x288c9]        # 4371e5 <_IO_stdin_used@@Base+0xa1e5>
  40e91c:	mov    esi,0x1
  40e921:	xor    eax,eax
  40e923:	call   405200 <__fprintf_chk@plt>
  40e928:	mov    rcx,QWORD PTR [r14+0x88]
  40e92f:	mov    rdi,QWORD PTR [rbx+0xd0]
  40e936:	lea    rdx,[rip+0x289dd]        # 43731a <_IO_stdin_used@@Base+0xa31a>
  40e93d:	xor    eax,eax
  40e93f:	mov    esi,0x1
  40e944:	add    ebp,0x1
  40e947:	call   405200 <__fprintf_chk@plt>
  40e94c:	mov    r14,QWORD PTR [r14]
  40e94f:	test   r14,r14
  40e952:	jne    40e8f0 <__flatcc_gen_sort@@Base+0x28e0>
  40e954:	mov    rdi,QWORD PTR [rbx+0xd0]
  40e95b:	lea    rdx,[rip+0x36eab]        # 44580d <_IO_stdin_used@@Base+0x1880d>
  40e962:	mov    esi,0x1
  40e967:	xor    eax,eax
  40e969:	call   405200 <__fprintf_chk@plt>
  40e96e:	sub    rsp,0x8
  40e972:	mov    rdi,QWORD PTR [rbx+0xd0]
  40e979:	lea    rdx,[rip+0x29360]        # 437ce0 <_IO_stdin_used@@Base+0xace0>
  40e980:	mov    rcx,QWORD PTR [rsp+0x8]
  40e985:	mov    esi,0x1
  40e98a:	mov    r9,rbx
  40e98d:	xor    eax,eax
  40e98f:	push   rcx
  40e990:	mov    r8,rcx
  40e993:	call   405200 <__fprintf_chk@plt>
  40e998:	pop    rsi
  40e999:	pop    rdi
  40e99a:	jmp    40e46f <__flatcc_gen_sort@@Base+0x245f>
  40e99f:	nop
  40e9a0:	mov    rsi,QWORD PTR [rbp+0x18]
  40e9a4:	mov    rdx,r12
  40e9a7:	mov    rdi,QWORD PTR [rsi+0x18]
  40e9ab:	call   407300 <__flatcc_fb_scoped_symbol_name@@Base>
  40e9b0:	mov    rax,QWORD PTR [rbp+0x18]
  40e9b4:	movzx  eax,WORD PTR [rax+0x10]
  40e9b8:	cmp    ax,0x1
  40e9bc:	je     40ef19 <__flatcc_gen_sort@@Base+0x2f09>
  40e9c2:	jb     40eeed <__flatcc_gen_sort@@Base+0x2edd>
  40e9c8:	cmp    ax,0x3
  40e9cc:	je     40ecb8 <__flatcc_gen_sort@@Base+0x2ca8>
  40e9d2:	cmp    ax,0x4
  40e9d6:	jne    40ee9d <__flatcc_gen_sort@@Base+0x2e8d>
  40e9dc:	mov    rdi,QWORD PTR [rbx+0xd0]
  40e9e3:	mov    r8,QWORD PTR [rbp+0x88]
  40e9ea:	lea    rdx,[rip+0x288f6]        # 4372e7 <_IO_stdin_used@@Base+0xa2e7>
  40e9f1:	mov    rcx,r12
  40e9f4:	mov    esi,0x1
  40e9f9:	xor    eax,eax
  40e9fb:	call   405200 <__fprintf_chk@plt>
  40ea00:	mov    eax,r14d
  40ea03:	jmp    40e740 <__flatcc_gen_sort@@Base+0x2730>
  40ea08:	nop    DWORD PTR [rax+rax*1+0x0]
  40ea10:	mov    rdi,QWORD PTR [rbx+0xd0]
  40ea17:	mov    r8,QWORD PTR [rbp+0x88]
  40ea1e:	lea    rdx,[rip+0x28910]        # 437335 <_IO_stdin_used@@Base+0xa335>
  40ea25:	mov    rcx,rbx
  40ea28:	mov    esi,0x1
  40ea2d:	xor    eax,eax
  40ea2f:	call   405200 <__fprintf_chk@plt>
  40ea34:	mov    eax,r14d
  40ea37:	jmp    40e740 <__flatcc_gen_sort@@Base+0x2730>
  40ea3c:	nop    DWORD PTR [rax+0x0]
  40ea40:	mov    rdi,QWORD PTR [rbx+0xd0]
  40ea47:	mov    r8,QWORD PTR [rbp+0x88]
  40ea4e:	lea    rdx,[rip+0x288f5]        # 43734a <_IO_stdin_used@@Base+0xa34a>
  40ea55:	mov    rcx,rbx
  40ea58:	mov    esi,0x1
  40ea5d:	xor    eax,eax
  40ea5f:	call   405200 <__fprintf_chk@plt>
  40ea64:	mov    eax,r14d
  40ea67:	jmp    40e740 <__flatcc_gen_sort@@Base+0x2730>
  40ea6c:	nop    DWORD PTR [rax+0x0]
  40ea70:	mov    eax,DWORD PTR [rbp+0x18]
  40ea73:	cmp    eax,0x5
  40ea76:	je     40eded <__flatcc_gen_sort@@Base+0x2ddd>
  40ea7c:	cmp    eax,0xb
  40ea7f:	ja     40f0e7 <__flatcc_gen_sort@@Base+0x30d7>
  40ea85:	lea    rdx,[rip+0x321cc]        # 440c58 <_IO_stdin_used@@Base+0x13c58>
  40ea8c:	movsxd rax,DWORD PTR [rdx+rax*4]
  40ea90:	add    rax,rdx
  40ea93:	jmp    rax
  40ea95:	nop    DWORD PTR [rax]
  40ea98:	cmp    DWORD PTR [rbp+0x18],0xb
  40ea9c:	ja     40f097 <__flatcc_gen_sort@@Base+0x3087>
  40eaa2:	mov    eax,DWORD PTR [rbp+0x18]
  40eaa5:	lea    rsi,[rip+0x321dc]        # 440c88 <_IO_stdin_used@@Base+0x13c88>
  40eaac:	movsxd rax,DWORD PTR [rsi+rax*4]
  40eab0:	add    rax,rsi
  40eab3:	jmp    rax
  40eab5:	mov    rax,r13
  40eab8:	mov    ecx,0x1d
  40eabd:	mov    rdi,r14
  40eac0:	rep stos QWORD PTR es:[rdi],rax
  40eac3:	mov    ecx,0x1d
  40eac8:	mov    rdi,r12
  40eacb:	mov    rdx,r14
  40eace:	mov    rsi,rbp
  40ead1:	rep stos QWORD PTR es:[rdi],rax
  40ead4:	mov    rdi,QWORD PTR [rbp+0x18]
  40ead8:	call   407300 <__flatcc_fb_scoped_symbol_name@@Base>
  40eadd:	mov    r15,QWORD PTR [rbp+0x28]
  40eae1:	test   r15,r15
  40eae4:	je     40eb8f <__flatcc_gen_sort@@Base+0x2b7f>
  40eaea:	movzx  eax,WORD PTR [r15+0x28]
  40eaef:	cmp    ax,0xa
  40eaf3:	je     40ec0a <__flatcc_gen_sort@@Base+0x2bfa>
  40eaf9:	cmp    ax,0xe
  40eafd:	je     40ebbc <__flatcc_gen_sort@@Base+0x2bac>
  40eb03:	test   ax,ax
  40eb06:	je     40eb58 <__flatcc_gen_sort@@Base+0x2b48>
  40eb08:	mov    rax,QWORD PTR [rip+0x424d9]        # 450fe8 <stderr@GLIBC_2.2.5>
  40eb0f:	lea    rcx,[rip+0x28a32]        # 437548 <_IO_stdin_used@@Base+0xa548>
  40eb16:	lea    rdx,[rip+0x276c4]        # 4361e1 <_IO_stdin_used@@Base+0x91e1>
  40eb1d:	lea    r9,[rip+0x293b4]        # 437ed8 <_IO_stdin_used@@Base+0xaed8>
  40eb24:	mov    esi,0x1
  40eb29:	mov    r8d,0x648
  40eb2f:	mov    rdi,QWORD PTR [rax]
  40eb32:	xor    eax,eax
  40eb34:	call   405200 <__fprintf_chk@plt>
  40eb39:	lea    rcx,[rip+0x321e0]        # 440d20 <_IO_stdin_used@@Base+0x13d20>
  40eb40:	lea    rsi,[rip+0x28a01]        # 437548 <_IO_stdin_used@@Base+0xa548>
  40eb47:	lea    rdi,[rip+0x286db]        # 437229 <_IO_stdin_used@@Base+0xa229>
  40eb4e:	mov    edx,0x648
  40eb53:	call   405100 <__assert_fail@plt>
  40eb58:	sub    rsp,0x8
  40eb5c:	mov    rdi,QWORD PTR [rbx+0xd0]
  40eb63:	lea    rdx,[rip+0x292f6]        # 437e60 <_IO_stdin_used@@Base+0xae60>
  40eb6a:	push   r14
  40eb6c:	mov    r9,r14
  40eb6f:	mov    r8,r14
  40eb72:	mov    rcx,r14
  40eb75:	mov    esi,0x1
  40eb7a:	xor    eax,eax
  40eb7c:	call   405200 <__fprintf_chk@plt>
  40eb81:	pop    rax
  40eb82:	pop    rdx
  40eb83:	mov    r15,QWORD PTR [r15]
  40eb86:	test   r15,r15
  40eb89:	jne    40eaea <__flatcc_gen_sort@@Base+0x2ada>
  40eb8f:	mov    rdi,QWORD PTR [rbx+0xd0]
  40eb96:	lea    rdx,[rip+0x2918b]        # 437d28 <_IO_stdin_used@@Base+0xad28>
  40eb9d:	mov    r9,r14
  40eba0:	mov    r8,rbx
  40eba3:	mov    rcx,rbx
  40eba6:	mov    esi,0x1
  40ebab:	xor    eax,eax
  40ebad:	call   405200 <__fprintf_chk@plt>
  40ebb2:	mov    eax,0x1
  40ebb7:	jmp    40e4a8 <__flatcc_gen_sort@@Base+0x2498>
  40ebbc:	mov    rsi,QWORD PTR [r15+0x18]
  40ebc0:	mov    rdx,r12
  40ebc3:	mov    rdi,QWORD PTR [rsi+0x18]
  40ebc7:	call   407300 <__flatcc_fb_scoped_symbol_name@@Base>
  40ebcc:	mov    rdx,QWORD PTR [r15+0x8]
  40ebd0:	mov    rdi,QWORD PTR [rbx+0xd0]
  40ebd7:	mov    r8,r14
  40ebda:	mov    rcx,r14
  40ebdd:	mov    esi,0x1
  40ebe2:	mov    rax,QWORD PTR [rdx]
  40ebe5:	mov    r9,QWORD PTR [rdx+0x8]
  40ebe9:	lea    rdx,[rip+0x29158]        # 437d48 <_IO_stdin_used@@Base+0xad48>
  40ebf0:	push   rax
  40ebf1:	push   r9
  40ebf3:	push   r14
  40ebf5:	push   r14
  40ebf7:	push   r12
  40ebf9:	push   rax
  40ebfa:	xor    eax,eax
  40ebfc:	call   405200 <__fprintf_chk@plt>
  40ec01:	add    rsp,0x30
  40ec05:	jmp    40eb83 <__flatcc_gen_sort@@Base+0x2b73>
  40ec0a:	mov    rdx,QWORD PTR [r15+0x8]
  40ec0e:	mov    rdi,QWORD PTR [rbx+0xd0]
  40ec15:	mov    r8,r14
  40ec18:	mov    rcx,r14
  40ec1b:	mov    esi,0x1
  40ec20:	mov    rax,QWORD PTR [rdx]
  40ec23:	mov    r9,QWORD PTR [rdx+0x8]
  40ec27:	lea    rdx,[rip+0x291a2]        # 437dd0 <_IO_stdin_used@@Base+0xadd0>
  40ec2e:	push   rax
  40ec2f:	push   r9
  40ec31:	push   r14
  40ec33:	push   r14
  40ec35:	push   rbx
  40ec36:	push   rax
  40ec37:	xor    eax,eax
  40ec39:	call   405200 <__fprintf_chk@plt>
  40ec3e:	add    rsp,0x30
  40ec42:	jmp    40eb83 <__flatcc_gen_sort@@Base+0x2b73>
  40ec47:	test   bpl,0x3
  40ec4b:	jne    40e90e <__flatcc_gen_sort@@Base+0x28fe>
  40ec51:	mov    eax,r13d
  40ec54:	sub    eax,ebp
  40ec56:	cmp    eax,0x2
  40ec59:	jle    40e90e <__flatcc_gen_sort@@Base+0x28fe>
  40ec5f:	mov    rdi,QWORD PTR [rbx+0xd0]
  40ec66:	lea    rcx,[rip+0x2856f]        # 4371dc <_IO_stdin_used@@Base+0xa1dc>
  40ec6d:	lea    rdx,[rip+0x2856b]        # 4371df <_IO_stdin_used@@Base+0xa1df>
  40ec74:	mov    esi,0x1
  40ec79:	xor    eax,eax
  40ec7b:	call   405200 <__fprintf_chk@plt>
  40ec80:	jmp    40e928 <__flatcc_gen_sort@@Base+0x2918>
  40ec85:	mov    eax,DWORD PTR [rsp+0xc]
  40ec89:	test   eax,eax
  40ec8b:	je     40ee72 <__flatcc_gen_sort@@Base+0x2e62>
  40ec91:	mov    rdi,QWORD PTR [rbx+0xd0]
  40ec98:	lea    rdx,[rip+0x36b6e]        # 44580d <_IO_stdin_used@@Base+0x1880d>
  40ec9f:	mov    esi,0x1
  40eca4:	xor    eax,eax
  40eca6:	call   405200 <__fprintf_chk@plt>
  40ecab:	mov    DWORD PTR [rsp+0xc],0x1
  40ecb3:	jmp    40e483 <__flatcc_gen_sort@@Base+0x2473>
  40ecb8:	mov    rdi,QWORD PTR [rbx+0xd0]
  40ecbf:	mov    r8,QWORD PTR [rbp+0x88]
  40ecc6:	lea    rdx,[rip+0x285fb]        # 4372c8 <_IO_stdin_used@@Base+0xa2c8>
  40eccd:	mov    rcx,r12
  40ecd0:	mov    esi,0x1
  40ecd5:	xor    eax,eax
  40ecd7:	call   405200 <__fprintf_chk@plt>
  40ecdc:	mov    eax,r14d
  40ecdf:	jmp    40e740 <__flatcc_gen_sort@@Base+0x2730>
  40ece4:	mov    rax,QWORD PTR [rip+0x422fd]        # 450fe8 <stderr@GLIBC_2.2.5>
  40eceb:	lea    rcx,[rip+0x28856]        # 437548 <_IO_stdin_used@@Base+0xa548>
  40ecf2:	lea    rdx,[rip+0x274e8]        # 4361e1 <_IO_stdin_used@@Base+0x91e1>
  40ecf9:	lea    r9,[rip+0x28fb0]        # 437cb0 <_IO_stdin_used@@Base+0xacb0>
  40ed00:	mov    esi,0x1
  40ed05:	mov    r8d,0x4a5
  40ed0b:	mov    rdi,QWORD PTR [rax]
  40ed0e:	xor    eax,eax
  40ed10:	call   405200 <__fprintf_chk@plt>
  40ed15:	lea    rcx,[rip+0x32014]        # 440d30 <_IO_stdin_used@@Base+0x13d30>
  40ed1c:	lea    rsi,[rip+0x28825]        # 437548 <_IO_stdin_used@@Base+0xa548>
  40ed23:	lea    rdi,[rip+0x284ff]        # 437229 <_IO_stdin_used@@Base+0xa229>
  40ed2a:	mov    edx,0x4a5
  40ed2f:	call   405100 <__assert_fail@plt>
  40ed34:	mov    rdi,QWORD PTR [r13+0xd0]
  40ed3b:	lea    rdx,[rip+0x2920e]        # 437f50 <_IO_stdin_used@@Base+0xaf50>
  40ed42:	mov    rcx,r12
  40ed45:	mov    esi,0x1
  40ed4a:	xor    eax,eax
  40ed4c:	call   405200 <__fprintf_chk@plt>
  40ed51:	xor    eax,eax
  40ed53:	mov    ecx,0x1d
  40ed58:	mov    rdi,r12
  40ed5b:	rep stos QWORD PTR es:[rdi],rax
  40ed5e:	mov    rdx,r12
  40ed61:	mov    rsi,r14
  40ed64:	mov    rdi,QWORD PTR [r14+0x18]
  40ed68:	call   407300 <__flatcc_fb_scoped_symbol_name@@Base>
  40ed6d:	mov    rdi,QWORD PTR [r13+0xd0]
  40ed74:	lea    rdx,[rip+0x2920d]        # 437f88 <_IO_stdin_used@@Base+0xaf88>
  40ed7b:	push   r12
  40ed7d:	push   r12
  40ed7f:	mov    r9,r12
  40ed82:	mov    r8,r13
  40ed85:	mov    rcx,r13
  40ed88:	mov    esi,0x1
  40ed8d:	xor    eax,eax
  40ed8f:	call   405200 <__fprintf_chk@plt>
  40ed94:	mov    rdi,QWORD PTR [r13+0xd0]
  40ed9b:	lea    rdx,[rip+0x36a6b]        # 44580d <_IO_stdin_used@@Base+0x1880d>
  40eda2:	mov    esi,0x1
  40eda7:	xor    eax,eax
  40eda9:	call   405200 <__fprintf_chk@plt>
  40edae:	pop    r10
  40edb0:	pop    r11
  40edb2:	jmp    40e4f8 <__flatcc_gen_sort@@Base+0x24e8>
  40edb7:	cmp    ax,0x1
  40edbb:	ja     40ece4 <__flatcc_gen_sort@@Base+0x2cd4>
  40edc1:	mov    rdi,QWORD PTR [rbx+0xd0]
  40edc8:	mov    r8,QWORD PTR [rbp+0x88]
  40edcf:	lea    rdx,[rip+0x2854c]        # 437322 <_IO_stdin_used@@Base+0xa322>
  40edd6:	mov    rcx,r12
  40edd9:	mov    esi,0x1
  40edde:	xor    eax,eax
  40ede0:	call   405200 <__fprintf_chk@plt>
  40ede5:	mov    eax,r14d
  40ede8:	jmp    40e740 <__flatcc_gen_sort@@Base+0x2730>
  40eded:	lea    r8,[rip+0x273ab]        # 43619f <_IO_stdin_used@@Base+0x919f>
  40edf4:	mov    rcx,rbx
  40edf7:	mov    rdi,QWORD PTR [rbx+0xd0]
  40edfe:	mov    r9,QWORD PTR [rbp+0x88]
  40ee05:	lea    rdx,[rip+0x28509]        # 437315 <_IO_stdin_used@@Base+0xa315>
  40ee0c:	mov    esi,0x1
  40ee11:	xor    eax,eax
  40ee13:	call   405200 <__fprintf_chk@plt>
  40ee18:	mov    eax,r14d
  40ee1b:	jmp    40e740 <__flatcc_gen_sort@@Base+0x2730>
  40ee20:	cmp    WORD PTR [rsp],0x0
  40ee25:	mov    r15d,DWORD PTR [rsp+0xc]
  40ee2a:	jne    40e5c7 <__flatcc_gen_sort@@Base+0x25b7>
  40ee30:	mov    rdi,QWORD PTR [r13+0xd0]
  40ee37:	sub    rsp,0x8
  40ee3b:	lea    rdx,[rip+0x2918e]        # 437fd0 <_IO_stdin_used@@Base+0xafd0>
  40ee42:	push   QWORD PTR [rbp+0x88]
  40ee48:	mov    rcx,r12
  40ee4b:	mov    esi,0x1
  40ee50:	xor    eax,eax
  40ee52:	call   405200 <__fprintf_chk@plt>
  40ee57:	pop    r8
  40ee59:	pop    r9
  40ee5b:	mov    r15d,DWORD PTR [rsp+0xc]
  40ee60:	jmp    40e5f0 <__flatcc_gen_sort@@Base+0x25e0>
  40ee65:	mov    DWORD PTR [rsp+0xc],0x0
  40ee6d:	jmp    40e48a <__flatcc_gen_sort@@Base+0x247a>
  40ee72:	xor    eax,eax
  40ee74:	mov    rsi,QWORD PTR [rsp+0x1e8]
  40ee7c:	xor    rsi,QWORD PTR fs:0x28
  40ee85:	jne    40f137 <__flatcc_gen_sort@@Base+0x3127>
  40ee8b:	add    rsp,0x1f8
  40ee92:	pop    rbx
  40ee93:	pop    rbp
  40ee94:	pop    r12
  40ee96:	pop    r13
  40ee98:	pop    r14
  40ee9a:	pop    r15
  40ee9c:	ret    
  40ee9d:	mov    rax,QWORD PTR [rip+0x42144]        # 450fe8 <stderr@GLIBC_2.2.5>
  40eea4:	lea    rcx,[rip+0x2869d]        # 437548 <_IO_stdin_used@@Base+0xa548>
  40eeab:	lea    rdx,[rip+0x2732f]        # 4361e1 <_IO_stdin_used@@Base+0x91e1>
  40eeb2:	lea    r9,[rip+0x28dc7]        # 437c80 <_IO_stdin_used@@Base+0xac80>
  40eeb9:	mov    esi,0x1
  40eebe:	mov    r8d,0x495
  40eec4:	mov    rdi,QWORD PTR [rax]
  40eec7:	xor    eax,eax
  40eec9:	call   405200 <__fprintf_chk@plt>
  40eece:	lea    rcx,[rip+0x31e5b]        # 440d30 <_IO_stdin_used@@Base+0x13d30>
  40eed5:	lea    rsi,[rip+0x2866c]        # 437548 <_IO_stdin_used@@Base+0xa548>
  40eedc:	lea    rdi,[rip+0x28346]        # 437229 <_IO_stdin_used@@Base+0xa229>
  40eee3:	mov    edx,0x495
  40eee8:	call   405100 <__assert_fail@plt>
  40eeed:	mov    rdi,QWORD PTR [rbx+0xd0]
  40eef4:	mov    r8,QWORD PTR [rbp+0x88]
  40eefb:	lea    rdx,[rip+0x283d6]        # 4372d8 <_IO_stdin_used@@Base+0xa2d8>
  40ef02:	mov    rcx,r12
  40ef05:	mov    esi,0x1
  40ef0a:	xor    eax,eax
  40ef0c:	call   405200 <__fprintf_chk@plt>
  40ef11:	mov    eax,r14d
  40ef14:	jmp    40e740 <__flatcc_gen_sort@@Base+0x2730>
  40ef19:	mov    rdi,QWORD PTR [rbx+0xd0]
  40ef20:	mov    r8,QWORD PTR [rbp+0x88]
  40ef27:	lea    rdx,[rip+0x2838e]        # 4372bc <_IO_stdin_used@@Base+0xa2bc>
  40ef2e:	mov    rcx,r12
  40ef31:	mov    esi,0x1
  40ef36:	xor    eax,eax
  40ef38:	call   405200 <__fprintf_chk@plt>
  40ef3d:	mov    eax,r14d
  40ef40:	jmp    40e740 <__flatcc_gen_sort@@Base+0x2730>
  40ef45:	lea    r8,[rip+0x27355]        # 4362a1 <_IO_stdin_used@@Base+0x92a1>
  40ef4c:	nop    DWORD PTR [rax+0x0]
  40ef50:	mov    rdi,QWORD PTR [rbx+0xd0]
  40ef57:	mov    r9,QWORD PTR [rbp+0x88]
  40ef5e:	lea    rdx,[rip+0x283bb]        # 437320 <_IO_stdin_used@@Base+0xa320>
  40ef65:	mov    rcx,rbx
  40ef68:	mov    esi,0x1
  40ef6d:	xor    eax,eax
  40ef6f:	call   405200 <__fprintf_chk@plt>
  40ef74:	mov    eax,r14d
  40ef77:	jmp    40e740 <__flatcc_gen_sort@@Base+0x2730>
  40ef7c:	lea    r8,[rip+0x27325]        # 4362a8 <_IO_stdin_used@@Base+0x92a8>
  40ef83:	jmp    40ef50 <__flatcc_gen_sort@@Base+0x2f40>
  40ef85:	lea    r8,[rip+0x27323]        # 4362af <_IO_stdin_used@@Base+0x92af>
  40ef8c:	jmp    40ef50 <__flatcc_gen_sort@@Base+0x2f40>
  40ef8e:	lea    r8,[rip+0x27320]        # 4362b5 <_IO_stdin_used@@Base+0x92b5>
  40ef95:	jmp    40ef50 <__flatcc_gen_sort@@Base+0x2f40>
  40ef97:	lea    r8,[rip+0x27312]        # 4362b0 <_IO_stdin_used@@Base+0x92b0>
  40ef9e:	jmp    40ef50 <__flatcc_gen_sort@@Base+0x2f40>
  40efa0:	lea    r8,[rip+0x272f3]        # 43629a <_IO_stdin_used@@Base+0x929a>
  40efa7:	jmp    40ef50 <__flatcc_gen_sort@@Base+0x2f40>
  40efa9:	lea    r8,[rip+0x271fc]        # 4361ac <_IO_stdin_used@@Base+0x91ac>
  40efb0:	jmp    40ef50 <__flatcc_gen_sort@@Base+0x2f40>
  40efb2:	lea    r8,[rip+0x271ed]        # 4361a6 <_IO_stdin_used@@Base+0x91a6>
  40efb9:	jmp    40ef50 <__flatcc_gen_sort@@Base+0x2f40>
  40efbb:	lea    r8,[rip+0x272d9]        # 43629b <_IO_stdin_used@@Base+0x929b>
  40efc2:	jmp    40ef50 <__flatcc_gen_sort@@Base+0x2f40>
  40efc4:	lea    r8,[rip+0x272d7]        # 4362a2 <_IO_stdin_used@@Base+0x92a2>
  40efcb:	jmp    40ef50 <__flatcc_gen_sort@@Base+0x2f40>
  40efcd:	lea    r8,[rip+0x272d5]        # 4362a9 <_IO_stdin_used@@Base+0x92a9>
  40efd4:	jmp    40ef50 <__flatcc_gen_sort@@Base+0x2f40>
  40efd9:	lea    rcx,[rip+0x3682e]        # 44580e <_IO_stdin_used@@Base+0x1880e>
  40efe0:	lea    r8,[rip+0x271a8]        # 43618f <_IO_stdin_used@@Base+0x918f>
  40efe7:	jmp    40edf7 <__flatcc_gen_sort@@Base+0x2de7>
  40efec:	lea    rcx,[rip+0x3681b]        # 44580e <_IO_stdin_used@@Base+0x1880e>
  40eff3:	lea    r8,[rip+0x2719e]        # 436198 <_IO_stdin_used@@Base+0x9198>
  40effa:	jmp    40edf7 <__flatcc_gen_sort@@Base+0x2de7>
  40efff:	lea    rcx,[rip+0x36808]        # 44580e <_IO_stdin_used@@Base+0x1880e>
  40f006:	lea    r8,[rip+0x2719f]        # 4361ac <_IO_stdin_used@@Base+0x91ac>
  40f00d:	jmp    40edf7 <__flatcc_gen_sort@@Base+0x2de7>
  40f012:	lea    rcx,[rip+0x367f5]        # 44580e <_IO_stdin_used@@Base+0x1880e>
  40f019:	lea    r8,[rip+0x27177]        # 436197 <_IO_stdin_used@@Base+0x9197>
  40f020:	jmp    40edf7 <__flatcc_gen_sort@@Base+0x2de7>
  40f025:	lea    rcx,[rip+0x367e2]        # 44580e <_IO_stdin_used@@Base+0x1880e>
  40f02c:	lea    r8,[rip+0x27173]        # 4361a6 <_IO_stdin_used@@Base+0x91a6>
  40f033:	jmp    40edf7 <__flatcc_gen_sort@@Base+0x2de7>
  40f038:	lea    rcx,[rip+0x367cf]        # 44580e <_IO_stdin_used@@Base+0x1880e>
  40f03f:	lea    r8,[rip+0x27137]        # 43617d <_IO_stdin_used@@Base+0x917d>
  40f046:	jmp    40edf7 <__flatcc_gen_sort@@Base+0x2de7>
  40f04b:	lea    rcx,[rip+0x367bc]        # 44580e <_IO_stdin_used@@Base+0x1880e>
  40f052:	lea    r8,[rip+0x2712d]        # 436186 <_IO_stdin_used@@Base+0x9186>
  40f059:	jmp    40edf7 <__flatcc_gen_sort@@Base+0x2de7>
  40f05e:	lea    rcx,[rip+0x367a9]        # 44580e <_IO_stdin_used@@Base+0x1880e>
  40f065:	lea    r8,[rip+0x27110]        # 43617c <_IO_stdin_used@@Base+0x917c>
  40f06c:	jmp    40edf7 <__flatcc_gen_sort@@Base+0x2de7>
  40f071:	lea    rcx,[rip+0x36796]        # 44580e <_IO_stdin_used@@Base+0x1880e>
  40f078:	lea    r8,[rip+0x27106]        # 436185 <_IO_stdin_used@@Base+0x9185>
  40f07f:	jmp    40edf7 <__flatcc_gen_sort@@Base+0x2de7>
  40f084:	lea    rcx,[rip+0x36783]        # 44580e <_IO_stdin_used@@Base+0x1880e>
  40f08b:	lea    r8,[rip+0x270fc]        # 43618e <_IO_stdin_used@@Base+0x918e>
  40f092:	jmp    40edf7 <__flatcc_gen_sort@@Base+0x2de7>
  40f097:	mov    rax,QWORD PTR [rip+0x41f4a]        # 450fe8 <stderr@GLIBC_2.2.5>
  40f09e:	lea    rcx,[rip+0x1fb6b]        # 42ec10 <_IO_stdin_used@@Base+0x1c10>
  40f0a5:	lea    rdx,[rip+0x27135]        # 4361e1 <_IO_stdin_used@@Base+0x91e1>
  40f0ac:	lea    r9,[rip+0x1fb25]        # 42ebd8 <_IO_stdin_used@@Base+0x1bd8>
  40f0b3:	mov    esi,0x1
  40f0b8:	mov    r8d,0x60
  40f0be:	mov    rdi,QWORD PTR [rax]
  40f0c1:	xor    eax,eax
  40f0c3:	call   405200 <__fprintf_chk@plt>
  40f0c8:	lea    rcx,[rip+0x31c81]        # 440d50 <_IO_stdin_used@@Base+0x13d50>
  40f0cf:	lea    rsi,[rip+0x1fb3a]        # 42ec10 <_IO_stdin_used@@Base+0x1c10>
  40f0d6:	lea    rdi,[rip+0x2814c]        # 437229 <_IO_stdin_used@@Base+0xa229>
  40f0dd:	mov    edx,0x60
  40f0e2:	call   405100 <__assert_fail@plt>
  40f0e7:	mov    rax,QWORD PTR [rip+0x41efa]        # 450fe8 <stderr@GLIBC_2.2.5>
  40f0ee:	lea    rcx,[rip+0x1fb1b]        # 42ec10 <_IO_stdin_used@@Base+0x1c10>
  40f0f5:	lea    rdx,[rip+0x270e5]        # 4361e1 <_IO_stdin_used@@Base+0x91e1>
  40f0fc:	lea    r9,[rip+0x1fad5]        # 42ebd8 <_IO_stdin_used@@Base+0x1bd8>
  40f103:	mov    esi,0x1
  40f108:	mov    r8d,0x8d
  40f10e:	mov    rdi,QWORD PTR [rax]
  40f111:	xor    eax,eax
  40f113:	call   405200 <__fprintf_chk@plt>
  40f118:	lea    rcx,[rip+0x31c81]        # 440da0 <_IO_stdin_used@@Base+0x13da0>
  40f11f:	lea    rsi,[rip+0x1faea]        # 42ec10 <_IO_stdin_used@@Base+0x1c10>
  40f126:	lea    rdi,[rip+0x280fc]        # 437229 <_IO_stdin_used@@Base+0xa229>
  40f12d:	mov    edx,0x8d
  40f132:	call   405100 <__assert_fail@plt>
  40f137:	call   4050d0 <__stack_chk_fail@plt>
  40f13c:	nop    DWORD PTR [rax+0x0]

000000000040f140 <__flatcc_fb_gen_common_c_builder_header@@Base>:
  40f140:	push   rbp
  40f141:	push   rbx
  40f142:	lea    rbp,[rdi+0x66]
  40f146:	mov    rbx,rdi
  40f149:	lea    rdx,[rip+0x28229]        # 437379 <_IO_stdin_used@@Base+0xa379>
  40f150:	mov    esi,0x1
  40f155:	sub    rsp,0x8
  40f159:	mov    rdi,QWORD PTR [rdi+0xd0]
  40f160:	mov    rcx,rbp
  40f163:	xor    eax,eax
  40f165:	call   405200 <__fprintf_chk@plt>
  40f16a:	mov    rdi,QWORD PTR [rbx+0xd0]
  40f171:	lea    rdx,[rip+0x2821e]        # 437396 <_IO_stdin_used@@Base+0xa396>
  40f178:	mov    rcx,rbp
  40f17b:	mov    esi,0x1
  40f180:	xor    eax,eax
  40f182:	call   405200 <__fprintf_chk@plt>
  40f187:	mov    rdi,QWORD PTR [rbx+0xd0]
  40f18e:	lea    rdx,[rip+0x20ba3]        # 42fd38 <_IO_stdin_used@@Base+0x2d38>
  40f195:	mov    esi,0x1
  40f19a:	xor    eax,eax
  40f19c:	call   405200 <__fprintf_chk@plt>
  40f1a1:	mov    rdi,QWORD PTR [rbx+0xd0]
  40f1a8:	lea    rdx,[rip+0x28ea1]        # 438050 <_IO_stdin_used@@Base+0xb050>
  40f1af:	xor    eax,eax
  40f1b1:	mov    esi,0x1
  40f1b6:	call   405200 <__fprintf_chk@plt>
  40f1bb:	mov    rax,QWORD PTR [rbx+0xe0]
  40f1c2:	mov    rdi,QWORD PTR [rbx+0xd0]
  40f1c9:	mov    r8d,DWORD PTR [rax+0xac]
  40f1d0:	test   r8d,r8d
  40f1d3:	jne    40fcf8 <__flatcc_fb_gen_common_c_builder_header@@Base+0xbb8>
  40f1d9:	lea    rdx,[rip+0x281d3]        # 4373b3 <_IO_stdin_used@@Base+0xa3b3>
  40f1e0:	mov    esi,0x1
  40f1e5:	xor    eax,eax
  40f1e7:	call   405200 <__fprintf_chk@plt>
  40f1ec:	mov    rdi,QWORD PTR [rbx+0xd0]
  40f1f3:	lea    rdx,[rip+0x28e8e]        # 438088 <_IO_stdin_used@@Base+0xb088>
  40f1fa:	mov    esi,0x1
  40f1ff:	xor    eax,eax
  40f201:	call   405200 <__fprintf_chk@plt>
  40f206:	mov    rdi,QWORD PTR [rbx+0xd0]
  40f20d:	lea    rdx,[rip+0x281b6]        # 4373ca <_IO_stdin_used@@Base+0xa3ca>
  40f214:	mov    esi,0x1
  40f219:	xor    eax,eax
  40f21b:	call   405200 <__fprintf_chk@plt>
  40f220:	lea    rdi,[rip+0x281ab]        # 4373d2 <_IO_stdin_used@@Base+0xa3d2>
  40f227:	mov    ecx,0x10
  40f22c:	mov    rsi,rbx
  40f22f:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  40f231:	jne    40fc40 <__flatcc_fb_gen_common_c_builder_header@@Base+0xb00>
  40f237:	mov    rdi,QWORD PTR [rbx+0xd0]
  40f23e:	lea    rdx,[rip+0x2819d]        # 4373e2 <_IO_stdin_used@@Base+0xa3e2>
  40f245:	mov    r8,rbx
  40f248:	mov    rcx,rbx
  40f24b:	mov    esi,0x1
  40f250:	xor    eax,eax
  40f252:	call   405200 <__fprintf_chk@plt>
  40f257:	mov    rdi,QWORD PTR [rbx+0xd0]
  40f25e:	lea    rdx,[rip+0x28f9b]        # 438200 <_IO_stdin_used@@Base+0xb200>
  40f265:	mov    rcx,rbx
  40f268:	mov    esi,0x1
  40f26d:	xor    eax,eax
  40f26f:	mov    r8,rbx
  40f272:	call   405200 <__fprintf_chk@plt>
  40f277:	lea    rdi,[rip+0x27170]        # 4363ee <_IO_stdin_used@@Base+0x93ee>
  40f27e:	mov    ecx,0xd
  40f283:	mov    rsi,rbx
  40f286:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  40f288:	jne    40fbf8 <__flatcc_fb_gen_common_c_builder_header@@Base+0xab8>
  40f28e:	mov    rdi,QWORD PTR [rbx+0xd0]
  40f295:	lea    rdx,[rip+0x36571]        # 44580d <_IO_stdin_used@@Base+0x1880d>
  40f29c:	mov    esi,0x1
  40f2a1:	xor    eax,eax
  40f2a3:	call   405200 <__fprintf_chk@plt>
  40f2a8:	mov    rdi,QWORD PTR [rbx+0xd0]
  40f2af:	lea    rdx,[rip+0x28fd2]        # 438288 <_IO_stdin_used@@Base+0xb288>
  40f2b6:	mov    rcx,rbx
  40f2b9:	mov    esi,0x1
  40f2be:	xor    eax,eax
  40f2c0:	call   405200 <__fprintf_chk@plt>
  40f2c5:	mov    rdi,QWORD PTR [rbx+0xd0]
  40f2cc:	lea    rdx,[rip+0x2932d]        # 438600 <_IO_stdin_used@@Base+0xb600>
  40f2d3:	mov    rcx,rbx
  40f2d6:	mov    esi,0x1
  40f2db:	xor    eax,eax
  40f2dd:	call   405200 <__fprintf_chk@plt>
  40f2e2:	mov    rdi,QWORD PTR [rbx+0xd0]
  40f2e9:	lea    rdx,[rip+0x299e0]        # 438cd0 <_IO_stdin_used@@Base+0xbcd0>
  40f2f0:	mov    r9,rbx
  40f2f3:	mov    r8,rbx
  40f2f6:	mov    rcx,rbx
  40f2f9:	mov    esi,0x1
  40f2fe:	xor    eax,eax
  40f300:	call   405200 <__fprintf_chk@plt>
  40f305:	mov    rdi,QWORD PTR [rbx+0xd0]
  40f30c:	lea    rdx,[rip+0x29a4d]        # 438d60 <_IO_stdin_used@@Base+0xbd60>
  40f313:	mov    rcx,rbx
  40f316:	mov    esi,0x1
  40f31b:	xor    eax,eax
  40f31d:	call   405200 <__fprintf_chk@plt>
  40f322:	mov    rdi,QWORD PTR [rbx+0xd0]
  40f329:	lea    rdx,[rip+0x2a4f0]        # 439820 <_IO_stdin_used@@Base+0xc820>
  40f330:	mov    rcx,rbx
  40f333:	mov    esi,0x1
  40f338:	xor    eax,eax
  40f33a:	call   405200 <__fprintf_chk@plt>
  40f33f:	mov    rdi,QWORD PTR [rbx+0xd0]
  40f346:	lea    rdx,[rip+0x2a8b3]        # 439c00 <_IO_stdin_used@@Base+0xcc00>
  40f34d:	mov    rcx,rbx
  40f350:	mov    esi,0x1
  40f355:	xor    eax,eax
  40f357:	call   405200 <__fprintf_chk@plt>
  40f35c:	mov    rdi,QWORD PTR [rbx+0xd0]
  40f363:	lea    rdx,[rip+0x2aece]        # 43a238 <_IO_stdin_used@@Base+0xd238>
  40f36a:	mov    rcx,rbx
  40f36d:	mov    esi,0x1
  40f372:	xor    eax,eax
  40f374:	call   405200 <__fprintf_chk@plt>
  40f379:	mov    rdi,QWORD PTR [rbx+0xd0]
  40f380:	lea    rdx,[rip+0x2b331]        # 43a6b8 <_IO_stdin_used@@Base+0xd6b8>
  40f387:	mov    r8,rbx
  40f38a:	mov    rcx,rbx
  40f38d:	mov    esi,0x1
  40f392:	xor    eax,eax
  40f394:	call   405200 <__fprintf_chk@plt>
  40f399:	mov    rdi,QWORD PTR [rbx+0xd0]
  40f3a0:	lea    rdx,[rip+0x2ba89]        # 43ae30 <_IO_stdin_used@@Base+0xde30>
  40f3a7:	mov    r9,rbx
  40f3aa:	mov    r8,rbx
  40f3ad:	mov    rcx,rbx
  40f3b0:	mov    esi,0x1
  40f3b5:	xor    eax,eax
  40f3b7:	call   405200 <__fprintf_chk@plt>
  40f3bc:	mov    rdi,QWORD PTR [rbx+0xd0]
  40f3c3:	lea    rdx,[rip+0x2bfae]        # 43b378 <_IO_stdin_used@@Base+0xe378>
  40f3ca:	mov    rcx,rbx
  40f3cd:	mov    esi,0x1
  40f3d2:	xor    eax,eax
  40f3d4:	call   405200 <__fprintf_chk@plt>
  40f3d9:	mov    rdi,QWORD PTR [rbx+0xd0]
  40f3e0:	lea    rdx,[rip+0x2c411]        # 43b7f8 <_IO_stdin_used@@Base+0xe7f8>
  40f3e7:	mov    rcx,rbx
  40f3ea:	mov    esi,0x1
  40f3ef:	xor    eax,eax
  40f3f1:	call   405200 <__fprintf_chk@plt>
  40f3f6:	mov    rdi,QWORD PTR [rbx+0xd0]
  40f3fd:	lea    rdx,[rip+0x2c584]        # 43b988 <_IO_stdin_used@@Base+0xe988>
  40f404:	mov    rcx,rbx
  40f407:	mov    esi,0x1
  40f40c:	xor    eax,eax
  40f40e:	call   405200 <__fprintf_chk@plt>
  40f413:	mov    rdi,QWORD PTR [rbx+0xd0]
  40f41a:	lea    rdx,[rip+0x2c8c7]        # 43bce8 <_IO_stdin_used@@Base+0xece8>
  40f421:	mov    r8,rbx
  40f424:	mov    rcx,rbx
  40f427:	mov    esi,0x1
  40f42c:	xor    eax,eax
  40f42e:	call   405200 <__fprintf_chk@plt>
  40f433:	mov    rdi,QWORD PTR [rbx+0xd0]
  40f43a:	lea    rdx,[rip+0x2caaf]        # 43bef0 <_IO_stdin_used@@Base+0xeef0>
  40f441:	mov    rcx,rbx
  40f444:	mov    esi,0x1
  40f449:	xor    eax,eax
  40f44b:	call   405200 <__fprintf_chk@plt>
  40f450:	mov    rdi,QWORD PTR [rbx+0xd0]
  40f457:	lea    rdx,[rip+0x2ce02]        # 43c260 <_IO_stdin_used@@Base+0xf260>
  40f45e:	mov    r9,rbx
  40f461:	mov    r8,rbx
  40f464:	mov    rcx,rbx
  40f467:	mov    esi,0x1
  40f46c:	xor    eax,eax
  40f46e:	call   405200 <__fprintf_chk@plt>
  40f473:	sub    rsp,0x8
  40f477:	mov    rdi,QWORD PTR [rbx+0xd0]
  40f47e:	lea    rdx,[rip+0x2d2db]        # 43c760 <_IO_stdin_used@@Base+0xf760>
  40f485:	push   rbx
  40f486:	mov    r9,rbx
  40f489:	mov    r8,rbx
  40f48c:	mov    rcx,rbx
  40f48f:	mov    esi,0x1
  40f494:	xor    eax,eax
  40f496:	call   405200 <__fprintf_chk@plt>
  40f49b:	mov    rdi,QWORD PTR [rbx+0xd0]
  40f4a2:	lea    rdx,[rip+0x2d3c7]        # 43c870 <_IO_stdin_used@@Base+0xf870>
  40f4a9:	mov    r8,rbx
  40f4ac:	mov    rcx,rbx
  40f4af:	mov    esi,0x1
  40f4b4:	xor    eax,eax
  40f4b6:	call   405200 <__fprintf_chk@plt>
  40f4bb:	mov    rdi,QWORD PTR [rbx+0xd0]
  40f4c2:	lea    rdx,[rip+0x2d70f]        # 43cbd8 <_IO_stdin_used@@Base+0xfbd8>
  40f4c9:	mov    r9,rbx
  40f4cc:	mov    r8,rbx
  40f4cf:	mov    rcx,rbx
  40f4d2:	mov    esi,0x1
  40f4d7:	xor    eax,eax
  40f4d9:	mov    QWORD PTR [rsp],rbx
  40f4dd:	call   405200 <__fprintf_chk@plt>
  40f4e2:	mov    rdi,QWORD PTR [rbx+0xd0]
  40f4e9:	lea    rdx,[rip+0x2dce8]        # 43d1d8 <_IO_stdin_used@@Base+0x101d8>
  40f4f0:	mov    r8,rbx
  40f4f3:	mov    rcx,rbx
  40f4f6:	mov    esi,0x1
  40f4fb:	xor    eax,eax
  40f4fd:	call   405200 <__fprintf_chk@plt>
  40f502:	mov    rdi,QWORD PTR [rbx+0xd0]
  40f509:	lea    rdx,[rip+0x2de80]        # 43d390 <_IO_stdin_used@@Base+0x10390>
  40f510:	mov    rcx,rbx
  40f513:	mov    esi,0x1
  40f518:	xor    eax,eax
  40f51a:	call   405200 <__fprintf_chk@plt>
  40f51f:	mov    rdi,QWORD PTR [rbx+0xd0]
  40f526:	lea    rdx,[rip+0x2e08b]        # 43d5b8 <_IO_stdin_used@@Base+0x105b8>
  40f52d:	mov    rcx,rbx
  40f530:	mov    esi,0x1
  40f535:	xor    eax,eax
  40f537:	call   405200 <__fprintf_chk@plt>
  40f53c:	mov    rdi,QWORD PTR [rbx+0xd0]
  40f543:	lea    rdx,[rip+0x2e42e]        # 43d978 <_IO_stdin_used@@Base+0x10978>
  40f54a:	mov    rcx,rbx
  40f54d:	mov    esi,0x1
  40f552:	xor    eax,eax
  40f554:	call   405200 <__fprintf_chk@plt>
  40f559:	mov    rdi,QWORD PTR [rbx+0xd0]
  40f560:	lea    rdx,[rip+0x2e6d1]        # 43dc38 <_IO_stdin_used@@Base+0x10c38>
  40f567:	mov    rcx,rbx
  40f56a:	mov    esi,0x1
  40f56f:	xor    eax,eax
  40f571:	call   405200 <__fprintf_chk@plt>
  40f576:	mov    rdi,QWORD PTR [rbx+0xd0]
  40f57d:	lea    rdx,[rip+0x2eacc]        # 43e050 <_IO_stdin_used@@Base+0x11050>
  40f584:	mov    r8,rbx
  40f587:	mov    rcx,rbx
  40f58a:	mov    esi,0x1
  40f58f:	xor    eax,eax
  40f591:	call   405200 <__fprintf_chk@plt>
  40f596:	mov    rdi,QWORD PTR [rbx+0xd0]
  40f59d:	lea    rdx,[rip+0x2eb9c]        # 43e140 <_IO_stdin_used@@Base+0x11140>
  40f5a4:	mov    rcx,rbx
  40f5a7:	mov    esi,0x1
  40f5ac:	xor    eax,eax
  40f5ae:	call   405200 <__fprintf_chk@plt>
  40f5b3:	mov    rdi,QWORD PTR [rbx+0xd0]
  40f5ba:	lea    rdx,[rip+0x2ede7]        # 43e3a8 <_IO_stdin_used@@Base+0x113a8>
  40f5c1:	mov    rcx,rbx
  40f5c4:	mov    esi,0x1
  40f5c9:	xor    eax,eax
  40f5cb:	call   405200 <__fprintf_chk@plt>
  40f5d0:	mov    rdi,QWORD PTR [rbx+0xd0]
  40f5d7:	lea    rdx,[rip+0x2f142]        # 43e720 <_IO_stdin_used@@Base+0x11720>
  40f5de:	mov    r8,rbx
  40f5e1:	mov    rcx,rbx
  40f5e4:	mov    esi,0x1
  40f5e9:	xor    eax,eax
  40f5eb:	call   405200 <__fprintf_chk@plt>
  40f5f0:	mov    rdi,QWORD PTR [rbx+0xd0]
  40f5f7:	lea    rdx,[rip+0x2f572]        # 43eb70 <_IO_stdin_used@@Base+0x11b70>
  40f5fe:	mov    r8,rbx
  40f601:	mov    rcx,rbx
  40f604:	mov    esi,0x1
  40f609:	xor    eax,eax
  40f60b:	call   405200 <__fprintf_chk@plt>
  40f610:	mov    rdi,QWORD PTR [rbx+0xd0]
  40f617:	lea    rdx,[rip+0x2f7ea]        # 43ee08 <_IO_stdin_used@@Base+0x11e08>
  40f61e:	mov    r8,rbx
  40f621:	mov    rcx,rbx
  40f624:	mov    esi,0x1
  40f629:	xor    eax,eax
  40f62b:	call   405200 <__fprintf_chk@plt>
  40f630:	mov    rdi,QWORD PTR [rbx+0xd0]
  40f637:	lea    rdx,[rip+0x2fbca]        # 43f208 <_IO_stdin_used@@Base+0x12208>
  40f63e:	mov    r8,rbx
  40f641:	mov    rcx,rbx
  40f644:	mov    esi,0x1
  40f649:	xor    eax,eax
  40f64b:	call   405200 <__fprintf_chk@plt>
  40f650:	mov    rdi,QWORD PTR [rbx+0xd0]
  40f657:	lea    rdx,[rip+0x2fcba]        # 43f318 <_IO_stdin_used@@Base+0x12318>
  40f65e:	mov    r9,rbx
  40f661:	mov    r8,rbx
  40f664:	mov    rcx,rbx
  40f667:	mov    esi,0x1
  40f66c:	xor    eax,eax
  40f66e:	call   405200 <__fprintf_chk@plt>
  40f673:	mov    rdi,QWORD PTR [rbx+0xd0]
  40f67a:	lea    rdx,[rip+0x2fd27]        # 43f3a8 <_IO_stdin_used@@Base+0x123a8>
  40f681:	mov    r8,rbx
  40f684:	mov    rcx,rbx
  40f687:	mov    esi,0x1
  40f68c:	xor    eax,eax
  40f68e:	call   405200 <__fprintf_chk@plt>
  40f693:	mov    rdi,QWORD PTR [rbx+0xd0]
  40f69a:	lea    rdx,[rip+0x30057]        # 43f6f8 <_IO_stdin_used@@Base+0x126f8>
  40f6a1:	mov    rcx,rbx
  40f6a4:	mov    esi,0x1
  40f6a9:	xor    eax,eax
  40f6ab:	call   405200 <__fprintf_chk@plt>
  40f6b0:	mov    rdi,QWORD PTR [rbx+0xd0]
  40f6b7:	lea    rdx,[rip+0x302c2]        # 43f980 <_IO_stdin_used@@Base+0x12980>
  40f6be:	mov    rcx,rbx
  40f6c1:	mov    esi,0x1
  40f6c6:	xor    eax,eax
  40f6c8:	call   405200 <__fprintf_chk@plt>
  40f6cd:	mov    rdi,QWORD PTR [rbx+0xd0]
  40f6d4:	lea    rdx,[rip+0x30535]        # 43fc10 <_IO_stdin_used@@Base+0x12c10>
  40f6db:	mov    rcx,rbx
  40f6de:	mov    esi,0x1
  40f6e3:	xor    eax,eax
  40f6e5:	call   405200 <__fprintf_chk@plt>
  40f6ea:	mov    rdi,QWORD PTR [rbx+0xd0]
  40f6f1:	lea    rdx,[rip+0x30ad0]        # 4401c8 <_IO_stdin_used@@Base+0x131c8>
  40f6f8:	mov    r9,rbx
  40f6fb:	mov    r8,rbx
  40f6fe:	mov    rcx,rbx
  40f701:	mov    esi,0x1
  40f706:	xor    eax,eax
  40f708:	call   405200 <__fprintf_chk@plt>
  40f70d:	mov    rdi,QWORD PTR [rbx+0xd0]
  40f714:	lea    rdx,[rip+0x30b3d]        # 440258 <_IO_stdin_used@@Base+0x13258>
  40f71b:	mov    rcx,rbx
  40f71e:	mov    esi,0x1
  40f723:	xor    eax,eax
  40f725:	call   405200 <__fprintf_chk@plt>
  40f72a:	mov    rdi,QWORD PTR [rbx+0xd0]
  40f731:	lea    rdx,[rip+0x30b50]        # 440288 <_IO_stdin_used@@Base+0x13288>
  40f738:	mov    rcx,rbx
  40f73b:	mov    esi,0x1
  40f740:	xor    eax,eax
  40f742:	call   405200 <__fprintf_chk@plt>
  40f747:	mov    rdi,QWORD PTR [rbx+0xd0]
  40f74e:	lea    rdx,[rip+0x30b5b]        # 4402b0 <_IO_stdin_used@@Base+0x132b0>
  40f755:	mov    rcx,rbx
  40f758:	mov    esi,0x1
  40f75d:	xor    eax,eax
  40f75f:	call   405200 <__fprintf_chk@plt>
  40f764:	mov    rdi,QWORD PTR [rbx+0xd0]
  40f76b:	lea    rdx,[rip+0x30b6e]        # 4402e0 <_IO_stdin_used@@Base+0x132e0>
  40f772:	mov    rcx,rbx
  40f775:	mov    esi,0x1
  40f77a:	xor    eax,eax
  40f77c:	call   405200 <__fprintf_chk@plt>
  40f781:	mov    rdi,QWORD PTR [rbx+0xd0]
  40f788:	lea    rdx,[rip+0x30b79]        # 440308 <_IO_stdin_used@@Base+0x13308>
  40f78f:	mov    r8,rbx
  40f792:	mov    rcx,rbx
  40f795:	mov    esi,0x1
  40f79a:	xor    eax,eax
  40f79c:	call   405200 <__fprintf_chk@plt>
  40f7a1:	mov    rdi,QWORD PTR [rbx+0xd0]
  40f7a8:	lea    rdx,[rip+0x30b89]        # 440338 <_IO_stdin_used@@Base+0x13338>
  40f7af:	mov    rcx,rbx
  40f7b2:	mov    esi,0x1
  40f7b7:	xor    eax,eax
  40f7b9:	call   405200 <__fprintf_chk@plt>
  40f7be:	mov    rdi,QWORD PTR [rbx+0xd0]
  40f7c5:	lea    rdx,[rip+0x30b94]        # 440360 <_IO_stdin_used@@Base+0x13360>
  40f7cc:	mov    rcx,rbx
  40f7cf:	mov    esi,0x1
  40f7d4:	xor    eax,eax
  40f7d6:	call   405200 <__fprintf_chk@plt>
  40f7db:	mov    rdi,QWORD PTR [rbx+0xd0]
  40f7e2:	lea    rdx,[rip+0x30ba7]        # 440390 <_IO_stdin_used@@Base+0x13390>
  40f7e9:	mov    rcx,rbx
  40f7ec:	mov    esi,0x1
  40f7f1:	xor    eax,eax
  40f7f3:	call   405200 <__fprintf_chk@plt>
  40f7f8:	mov    rdi,QWORD PTR [rbx+0xd0]
  40f7ff:	lea    rdx,[rip+0x30bb2]        # 4403b8 <_IO_stdin_used@@Base+0x133b8>
  40f806:	mov    rcx,rbx
  40f809:	mov    esi,0x1
  40f80e:	xor    eax,eax
  40f810:	call   405200 <__fprintf_chk@plt>
  40f815:	mov    rdi,QWORD PTR [rbx+0xd0]
  40f81c:	lea    rdx,[rip+0x30bc5]        # 4403e8 <_IO_stdin_used@@Base+0x133e8>
  40f823:	mov    rcx,rbx
  40f826:	mov    esi,0x1
  40f82b:	xor    eax,eax
  40f82d:	call   405200 <__fprintf_chk@plt>
  40f832:	mov    rdi,QWORD PTR [rbx+0xd0]
  40f839:	lea    rdx,[rip+0x30bd0]        # 440410 <_IO_stdin_used@@Base+0x13410>
  40f840:	mov    rcx,rbx
  40f843:	mov    esi,0x1
  40f848:	xor    eax,eax
  40f84a:	call   405200 <__fprintf_chk@plt>
  40f84f:	mov    rdi,QWORD PTR [rbx+0xd0]
  40f856:	lea    rdx,[rip+0x30be3]        # 440440 <_IO_stdin_used@@Base+0x13440>
  40f85d:	mov    rcx,rbx
  40f860:	mov    esi,0x1
  40f865:	xor    eax,eax
  40f867:	call   405200 <__fprintf_chk@plt>
  40f86c:	mov    rdi,QWORD PTR [rbx+0xd0]
  40f873:	lea    rdx,[rip+0x30bee]        # 440468 <_IO_stdin_used@@Base+0x13468>
  40f87a:	mov    rcx,rbx
  40f87d:	mov    esi,0x1
  40f882:	xor    eax,eax
  40f884:	call   405200 <__fprintf_chk@plt>
  40f889:	mov    rdi,QWORD PTR [rbx+0xd0]
  40f890:	lea    rdx,[rip+0x30c01]        # 440498 <_IO_stdin_used@@Base+0x13498>
  40f897:	mov    rcx,rbx
  40f89a:	mov    esi,0x1
  40f89f:	xor    eax,eax
  40f8a1:	call   405200 <__fprintf_chk@plt>
  40f8a6:	mov    rdi,QWORD PTR [rbx+0xd0]
  40f8ad:	lea    rdx,[rip+0x30c0c]        # 4404c0 <_IO_stdin_used@@Base+0x134c0>
  40f8b4:	mov    rcx,rbx
  40f8b7:	mov    esi,0x1
  40f8bc:	xor    eax,eax
  40f8be:	call   405200 <__fprintf_chk@plt>
  40f8c3:	mov    rdi,QWORD PTR [rbx+0xd0]
  40f8ca:	lea    rdx,[rip+0x30c1f]        # 4404f0 <_IO_stdin_used@@Base+0x134f0>
  40f8d1:	mov    rcx,rbx
  40f8d4:	mov    esi,0x1
  40f8d9:	xor    eax,eax
  40f8db:	call   405200 <__fprintf_chk@plt>
  40f8e0:	mov    rdi,QWORD PTR [rbx+0xd0]
  40f8e7:	lea    rdx,[rip+0x30c2a]        # 440518 <_IO_stdin_used@@Base+0x13518>
  40f8ee:	mov    rcx,rbx
  40f8f1:	mov    esi,0x1
  40f8f6:	xor    eax,eax
  40f8f8:	call   405200 <__fprintf_chk@plt>
  40f8fd:	mov    rdi,QWORD PTR [rbx+0xd0]
  40f904:	lea    rdx,[rip+0x30c3d]        # 440548 <_IO_stdin_used@@Base+0x13548>
  40f90b:	mov    rcx,rbx
  40f90e:	mov    esi,0x1
  40f913:	xor    eax,eax
  40f915:	call   405200 <__fprintf_chk@plt>
  40f91a:	mov    rdi,QWORD PTR [rbx+0xd0]
  40f921:	lea    rdx,[rip+0x30c48]        # 440570 <_IO_stdin_used@@Base+0x13570>
  40f928:	mov    rcx,rbx
  40f92b:	mov    esi,0x1
  40f930:	xor    eax,eax
  40f932:	call   405200 <__fprintf_chk@plt>
  40f937:	mov    rdi,QWORD PTR [rbx+0xd0]
  40f93e:	lea    rdx,[rip+0x30c5b]        # 4405a0 <_IO_stdin_used@@Base+0x135a0>
  40f945:	mov    rcx,rbx
  40f948:	mov    esi,0x1
  40f94d:	xor    eax,eax
  40f94f:	call   405200 <__fprintf_chk@plt>
  40f954:	mov    rdi,QWORD PTR [rbx+0xd0]
  40f95b:	lea    rdx,[rip+0x30c66]        # 4405c8 <_IO_stdin_used@@Base+0x135c8>
  40f962:	mov    rcx,rbx
  40f965:	mov    esi,0x1
  40f96a:	xor    eax,eax
  40f96c:	call   405200 <__fprintf_chk@plt>
  40f971:	mov    rdi,QWORD PTR [rbx+0xd0]
  40f978:	lea    rdx,[rip+0x30c79]        # 4405f8 <_IO_stdin_used@@Base+0x135f8>
  40f97f:	mov    rcx,rbx
  40f982:	mov    esi,0x1
  40f987:	xor    eax,eax
  40f989:	call   405200 <__fprintf_chk@plt>
  40f98e:	mov    rdi,QWORD PTR [rbx+0xd0]
  40f995:	lea    rdx,[rip+0x35e71]        # 44580d <_IO_stdin_used@@Base+0x1880d>
  40f99c:	mov    esi,0x1
  40f9a1:	xor    eax,eax
  40f9a3:	call   405200 <__fprintf_chk@plt>
  40f9a8:	mov    rdi,QWORD PTR [rbx+0xd0]
  40f9af:	lea    rdx,[rip+0x30c6a]        # 440620 <_IO_stdin_used@@Base+0x13620>
  40f9b6:	mov    r9,rbx
  40f9b9:	mov    r8,rbx
  40f9bc:	mov    rcx,rbx
  40f9bf:	mov    esi,0x1
  40f9c4:	xor    eax,eax
  40f9c6:	call   405200 <__fprintf_chk@plt>
  40f9cb:	mov    rdi,QWORD PTR [rbx+0xd0]
  40f9d2:	lea    rdx,[rip+0x30c6f]        # 440648 <_IO_stdin_used@@Base+0x13648>
  40f9d9:	mov    r9,rbx
  40f9dc:	mov    r8,rbx
  40f9df:	mov    rcx,rbx
  40f9e2:	mov    esi,0x1
  40f9e7:	xor    eax,eax
  40f9e9:	call   405200 <__fprintf_chk@plt>
  40f9ee:	mov    rdi,QWORD PTR [rbx+0xd0]
  40f9f5:	lea    rdx,[rip+0x30c74]        # 440670 <_IO_stdin_used@@Base+0x13670>
  40f9fc:	mov    r9,rbx
  40f9ff:	mov    r8,rbx
  40fa02:	mov    rcx,rbx
  40fa05:	mov    esi,0x1
  40fa0a:	xor    eax,eax
  40fa0c:	mov    QWORD PTR [rsp],rbx
  40fa10:	call   405200 <__fprintf_chk@plt>
  40fa15:	mov    rdi,QWORD PTR [rbx+0xd0]
  40fa1c:	lea    rdx,[rip+0x30c75]        # 440698 <_IO_stdin_used@@Base+0x13698>
  40fa23:	mov    r9,rbx
  40fa26:	mov    r8,rbx
  40fa29:	mov    rcx,rbx
  40fa2c:	mov    esi,0x1
  40fa31:	xor    eax,eax
  40fa33:	call   405200 <__fprintf_chk@plt>
  40fa38:	mov    rdi,QWORD PTR [rbx+0xd0]
  40fa3f:	lea    rdx,[rip+0x30c82]        # 4406c8 <_IO_stdin_used@@Base+0x136c8>
  40fa46:	mov    r9,rbx
  40fa49:	mov    r8,rbx
  40fa4c:	mov    rcx,rbx
  40fa4f:	mov    esi,0x1
  40fa54:	xor    eax,eax
  40fa56:	call   405200 <__fprintf_chk@plt>
  40fa5b:	mov    rdi,QWORD PTR [rbx+0xd0]
  40fa62:	lea    rdx,[rip+0x30c8f]        # 4406f8 <_IO_stdin_used@@Base+0x136f8>
  40fa69:	mov    r9,rbx
  40fa6c:	mov    r8,rbx
  40fa6f:	mov    rcx,rbx
  40fa72:	mov    esi,0x1
  40fa77:	xor    eax,eax
  40fa79:	call   405200 <__fprintf_chk@plt>
  40fa7e:	mov    rdi,QWORD PTR [rbx+0xd0]
  40fa85:	lea    rdx,[rip+0x30c9c]        # 440728 <_IO_stdin_used@@Base+0x13728>
  40fa8c:	mov    r9,rbx
  40fa8f:	mov    r8,rbx
  40fa92:	mov    rcx,rbx
  40fa95:	mov    esi,0x1
  40fa9a:	xor    eax,eax
  40fa9c:	call   405200 <__fprintf_chk@plt>
  40faa1:	mov    rdi,QWORD PTR [rbx+0xd0]
  40faa8:	lea    rdx,[rip+0x30ca1]        # 440750 <_IO_stdin_used@@Base+0x13750>
  40faaf:	mov    r9,rbx
  40fab2:	mov    r8,rbx
  40fab5:	mov    rcx,rbx
  40fab8:	mov    esi,0x1
  40fabd:	xor    eax,eax
  40fabf:	call   405200 <__fprintf_chk@plt>
  40fac4:	mov    rdi,QWORD PTR [rbx+0xd0]
  40facb:	lea    rdx,[rip+0x30ca6]        # 440778 <_IO_stdin_used@@Base+0x13778>
  40fad2:	mov    r9,rbx
  40fad5:	mov    r8,rbx
  40fad8:	mov    rcx,rbx
  40fadb:	mov    esi,0x1
  40fae0:	xor    eax,eax
  40fae2:	call   405200 <__fprintf_chk@plt>
  40fae7:	mov    rdi,QWORD PTR [rbx+0xd0]
  40faee:	lea    rdx,[rip+0x30cab]        # 4407a0 <_IO_stdin_used@@Base+0x137a0>
  40faf5:	mov    r9,rbx
  40faf8:	mov    r8,rbx
  40fafb:	mov    rcx,rbx
  40fafe:	mov    esi,0x1
  40fb03:	xor    eax,eax
  40fb05:	call   405200 <__fprintf_chk@plt>
  40fb0a:	mov    rdi,QWORD PTR [rbx+0xd0]
  40fb11:	lea    rdx,[rip+0x30cb0]        # 4407c8 <_IO_stdin_used@@Base+0x137c8>
  40fb18:	mov    r9,rbx
  40fb1b:	mov    r8,rbx
  40fb1e:	mov    rcx,rbx
  40fb21:	mov    esi,0x1
  40fb26:	xor    eax,eax
  40fb28:	call   405200 <__fprintf_chk@plt>
  40fb2d:	mov    rdi,QWORD PTR [rbx+0xd0]
  40fb34:	lea    rdx,[rip+0x35cd2]        # 44580d <_IO_stdin_used@@Base+0x1880d>
  40fb3b:	mov    esi,0x1
  40fb40:	xor    eax,eax
  40fb42:	call   405200 <__fprintf_chk@plt>
  40fb47:	mov    rdi,QWORD PTR [rbx+0xd0]
  40fb4e:	lea    rdx,[rip+0x278a8]        # 4373fd <_IO_stdin_used@@Base+0xa3fd>
  40fb55:	mov    r8,rbx
  40fb58:	mov    rcx,rbx
  40fb5b:	mov    esi,0x1
  40fb60:	xor    eax,eax
  40fb62:	call   405200 <__fprintf_chk@plt>
  40fb67:	mov    rdi,QWORD PTR [rbx+0xd0]
  40fb6e:	lea    rdx,[rip+0x35c98]        # 44580d <_IO_stdin_used@@Base+0x1880d>
  40fb75:	mov    esi,0x1
  40fb7a:	xor    eax,eax
  40fb7c:	call   405200 <__fprintf_chk@plt>
  40fb81:	mov    rdi,QWORD PTR [rbx+0xd0]
  40fb88:	lea    rdx,[rip+0x27884]        # 437413 <_IO_stdin_used@@Base+0xa413>
  40fb8f:	mov    rcx,rbx
  40fb92:	mov    esi,0x1
  40fb97:	xor    eax,eax
  40fb99:	mov    r8,rbx
  40fb9c:	call   405200 <__fprintf_chk@plt>
  40fba1:	mov    rax,QWORD PTR [rbx+0xe0]
  40fba8:	mov    rdi,QWORD PTR [rbx+0xd0]
  40fbaf:	pop    rdx
  40fbb0:	pop    rcx
  40fbb1:	mov    esi,DWORD PTR [rax+0xac]
  40fbb7:	test   esi,esi
  40fbb9:	je     40fbd5 <__flatcc_fb_gen_common_c_builder_header@@Base+0xa95>
  40fbbb:	lea    rdx,[rip+0x2613e]        # 435d00 <_IO_stdin_used@@Base+0x8d00>
  40fbc2:	mov    esi,0x1
  40fbc7:	xor    eax,eax
  40fbc9:	call   405200 <__fprintf_chk@plt>
  40fbce:	mov    rdi,QWORD PTR [rbx+0xd0]
  40fbd5:	lea    rdx,[rip+0x30c14]        # 4407f0 <_IO_stdin_used@@Base+0x137f0>
  40fbdc:	mov    rcx,rbp
  40fbdf:	mov    esi,0x1
  40fbe4:	xor    eax,eax
  40fbe6:	call   405200 <__fprintf_chk@plt>
  40fbeb:	add    rsp,0x8
  40fbef:	xor    eax,eax
  40fbf1:	pop    rbx
  40fbf2:	pop    rbp
  40fbf3:	ret    
  40fbf4:	nop    DWORD PTR [rax+0x0]
  40fbf8:	mov    rdi,QWORD PTR [rbx+0xd0]
  40fbff:	lea    rdx,[rip+0x28622]        # 438228 <_IO_stdin_used@@Base+0xb228>
  40fc06:	mov    rcx,rbx
  40fc09:	mov    esi,0x1
  40fc0e:	xor    eax,eax
  40fc10:	call   405200 <__fprintf_chk@plt>
  40fc15:	mov    rdi,QWORD PTR [rbx+0xd0]
  40fc1c:	lea    rdx,[rip+0x2863d]        # 438260 <_IO_stdin_used@@Base+0xb260>
  40fc23:	mov    rcx,rbx
  40fc26:	mov    esi,0x1
  40fc2b:	xor    eax,eax
  40fc2d:	call   405200 <__fprintf_chk@plt>
  40fc32:	jmp    40f28e <__flatcc_fb_gen_common_c_builder_header@@Base+0x14e>
  40fc37:	nop    WORD PTR [rax+rax*1+0x0]
  40fc40:	mov    rdi,QWORD PTR [rbx+0xd0]
  40fc47:	lea    rdx,[rip+0x28462]        # 4380b0 <_IO_stdin_used@@Base+0xb0b0>
  40fc4e:	mov    rcx,rbx
  40fc51:	mov    esi,0x1
  40fc56:	xor    eax,eax
  40fc58:	call   405200 <__fprintf_chk@plt>
  40fc5d:	mov    rdi,QWORD PTR [rbx+0xd0]
  40fc64:	lea    rdx,[rip+0x2846d]        # 4380d8 <_IO_stdin_used@@Base+0xb0d8>
  40fc6b:	mov    rcx,rbx
  40fc6e:	mov    esi,0x1
  40fc73:	xor    eax,eax
  40fc75:	call   405200 <__fprintf_chk@plt>
  40fc7a:	mov    rdi,QWORD PTR [rbx+0xd0]
  40fc81:	lea    rdx,[rip+0x28478]        # 438100 <_IO_stdin_used@@Base+0xb100>
  40fc88:	mov    rcx,rbx
  40fc8b:	mov    esi,0x1
  40fc90:	xor    eax,eax
  40fc92:	call   405200 <__fprintf_chk@plt>
  40fc97:	mov    rdi,QWORD PTR [rbx+0xd0]
  40fc9e:	lea    rdx,[rip+0x2848b]        # 438130 <_IO_stdin_used@@Base+0xb130>
  40fca5:	mov    rcx,rbx
  40fca8:	mov    esi,0x1
  40fcad:	xor    eax,eax
  40fcaf:	call   405200 <__fprintf_chk@plt>
  40fcb4:	mov    rdi,QWORD PTR [rbx+0xd0]
  40fcbb:	lea    rdx,[rip+0x284a6]        # 438168 <_IO_stdin_used@@Base+0xb168>
  40fcc2:	mov    rcx,rbx
  40fcc5:	mov    esi,0x1
  40fcca:	xor    eax,eax
  40fccc:	call   405200 <__fprintf_chk@plt>
  40fcd1:	mov    rdi,QWORD PTR [rbx+0xd0]
  40fcd8:	lea    rdx,[rip+0x284c9]        # 4381a8 <_IO_stdin_used@@Base+0xb1a8>
  40fcdf:	mov    rcx,rbx
  40fce2:	mov    esi,0x1
  40fce7:	xor    eax,eax
  40fce9:	call   405200 <__fprintf_chk@plt>
  40fcee:	jmp    40f237 <__flatcc_fb_gen_common_c_builder_header@@Base+0xf7>
  40fcf3:	nop    DWORD PTR [rax+rax*1+0x0]
  40fcf8:	lea    rdx,[rip+0x20151]        # 42fe50 <_IO_stdin_used@@Base+0x2e50>
  40fcff:	mov    esi,0x1
  40fd04:	xor    eax,eax
  40fd06:	call   405200 <__fprintf_chk@plt>
  40fd0b:	mov    rdi,QWORD PTR [rbx+0xd0]
  40fd12:	jmp    40f1d9 <__flatcc_fb_gen_common_c_builder_header@@Base+0x99>
  40fd17:	nop    WORD PTR [rax+rax*1+0x0]

000000000040fd20 <__flatcc_fb_gen_c_builder@@Base>:
  40fd20:	push   r15
  40fd22:	push   r14
  40fd24:	lea    rdx,[rip+0x30aed]        # 440818 <_IO_stdin_used@@Base+0x13818>
  40fd2b:	push   r13
  40fd2d:	push   r12
  40fd2f:	mov    esi,0x1
  40fd34:	push   rbp
  40fd35:	push   rbx
  40fd36:	mov    rbx,rdi
  40fd39:	sub    rsp,0xf8
  40fd40:	mov    rax,QWORD PTR fs:0x28
  40fd49:	mov    QWORD PTR [rsp+0xe8],rax
  40fd51:	xor    eax,eax
  40fd53:	mov    rax,QWORD PTR [rdi+0xd8]
  40fd5a:	mov    rdi,QWORD PTR [rdi+0xd0]
  40fd61:	mov    rcx,QWORD PTR [rax+0x118]
  40fd68:	xor    eax,eax
  40fd6a:	mov    r8,rcx
  40fd6d:	call   405200 <__fprintf_chk@plt>
  40fd72:	mov    rdi,QWORD PTR [rbx+0xd0]
  40fd79:	lea    rdx,[rip+0x1ffb8]        # 42fd38 <_IO_stdin_used@@Base+0x2d38>
  40fd80:	mov    esi,0x1
  40fd85:	xor    eax,eax
  40fd87:	call   405200 <__fprintf_chk@plt>
  40fd8c:	mov    rax,QWORD PTR [rbx+0xd8]
  40fd93:	mov    rdi,QWORD PTR [rbx+0xd0]
  40fd9a:	lea    rdx,[rip+0x27688]        # 437429 <_IO_stdin_used@@Base+0xa429>
  40fda1:	mov    esi,0x1
  40fda6:	mov    rcx,QWORD PTR [rax+0x118]
  40fdad:	xor    eax,eax
  40fdaf:	call   405200 <__fprintf_chk@plt>
  40fdb4:	mov    rax,QWORD PTR [rbx+0xd8]
  40fdbb:	mov    rdi,QWORD PTR [rbx+0xd0]
  40fdc2:	lea    rdx,[rip+0x27675]        # 43743e <_IO_stdin_used@@Base+0xa43e>
  40fdc9:	mov    esi,0x1
  40fdce:	mov    rcx,QWORD PTR [rax+0x110]
  40fdd5:	xor    eax,eax
  40fdd7:	call   405200 <__fprintf_chk@plt>
  40fddc:	mov    rdi,QWORD PTR [rbx+0xd0]
  40fde3:	lea    rdx,[rip+0x275e0]        # 4373ca <_IO_stdin_used@@Base+0xa3ca>
  40fdea:	mov    esi,0x1
  40fdef:	xor    eax,eax
  40fdf1:	call   405200 <__fprintf_chk@plt>
  40fdf6:	mov    rdi,QWORD PTR [rbx+0xd0]
  40fdfd:	lea    rcx,[rbx+0x66]
  40fe01:	lea    rdx,[rip+0x27571]        # 437379 <_IO_stdin_used@@Base+0xa379>
  40fe08:	mov    esi,0x1
  40fe0d:	xor    eax,eax
  40fe0f:	call   405200 <__fprintf_chk@plt>
  40fe14:	mov    rdi,QWORD PTR [rbx+0xd0]
  40fe1b:	lea    rdx,[rip+0x30a26]        # 440848 <_IO_stdin_used@@Base+0x13848>
  40fe22:	mov    rcx,rbx
  40fe25:	mov    esi,0x1
  40fe2a:	xor    eax,eax
  40fe2c:	call   405200 <__fprintf_chk@plt>
  40fe31:	mov    rdi,QWORD PTR [rbx+0xd0]
  40fe38:	lea    rdx,[rip+0x2758b]        # 4373ca <_IO_stdin_used@@Base+0xa3ca>
  40fe3f:	mov    esi,0x1
  40fe44:	xor    eax,eax
  40fe46:	call   405200 <__fprintf_chk@plt>
  40fe4b:	lea    rdx,[rip+0x27604]        # 437456 <_IO_stdin_used@@Base+0xa456>
  40fe52:	lea    rsi,[rip+0x1eaed]        # 42e946 <_IO_stdin_used@@Base+0x1946>
  40fe59:	mov    rdi,rbx
  40fe5c:	call   4070a0 <__flatcc_fb_gen_c_includes@@Base>
  40fe61:	mov    rax,QWORD PTR [rbx+0xe0]
  40fe68:	mov    rdi,QWORD PTR [rbx+0xd0]
  40fe6f:	mov    r10d,DWORD PTR [rax+0xac]
  40fe76:	test   r10d,r10d
  40fe79:	jne    410460 <__flatcc_fb_gen_c_builder@@Base+0x740>
  40fe7f:	mov    rax,QWORD PTR [rbx+0xd8]
  40fe86:	cmp    WORD PTR [rax+0x20],0x2
  40fe8b:	je     41048c <__flatcc_fb_gen_c_builder@@Base+0x76c>
  40fe91:	lea    rdx,[rip+0x26120]        # 435fb8 <_IO_stdin_used@@Base+0x8fb8>
  40fe98:	xor    eax,eax
  40fe9a:	mov    r8,rbx
  40fe9d:	mov    rcx,rbx
  40fea0:	mov    esi,0x1
  40fea5:	call   405200 <__fprintf_chk@plt>
  40feaa:	mov    rax,QWORD PTR [rbx+0xd8]
  40feb1:	cmp    WORD PTR [rax+0x38],0x2
  40feb6:	je     4104c6 <__flatcc_fb_gen_c_builder@@Base+0x7a6>
  40febc:	mov    rax,QWORD PTR [rbx+0xe0]
  40fec3:	mov    rdi,QWORD PTR [rbx+0xd0]
  40feca:	lea    rdx,[rip+0x2614f]        # 436020 <_IO_stdin_used@@Base+0x9020>
  40fed1:	mov    r8,rbx
  40fed4:	mov    rcx,rbx
  40fed7:	mov    esi,0x1
  40fedc:	mov    r9,QWORD PTR [rax+0x78]
  40fee0:	xor    eax,eax
  40fee2:	call   405200 <__fprintf_chk@plt>
  40fee7:	mov    rdi,QWORD PTR [rbx+0xd0]
  40feee:	lea    rdx,[rip+0x35918]        # 44580d <_IO_stdin_used@@Base+0x1880d>
  40fef5:	xor    eax,eax
  40fef7:	mov    esi,0x1
  40fefc:	mov    rbp,rsp
  40feff:	call   405200 <__fprintf_chk@plt>
  40ff04:	xor    eax,eax
  40ff06:	mov    ecx,0x1d
  40ff0b:	mov    rdi,rsp
  40ff0e:	rep stos QWORD PTR es:[rdi],rax
  40ff11:	mov    rax,QWORD PTR [rbx+0xd8]
  40ff18:	mov    r12,QWORD PTR [rax+0x40]
  40ff1c:	test   r12,r12
  40ff1f:	je     40ffce <__flatcc_fb_gen_c_builder@@Base+0x2ae>
  40ff25:	xor    eax,eax
  40ff27:	lea    r13,[rip+0x3093a]        # 440868 <_IO_stdin_used@@Base+0x13868>
  40ff2e:	jmp    40ff39 <__flatcc_fb_gen_c_builder@@Base+0x219>
  40ff30:	mov    r12,QWORD PTR [r12]
  40ff34:	test   r12,r12
  40ff37:	je     40ffa9 <__flatcc_fb_gen_c_builder@@Base+0x289>
  40ff39:	cmp    WORD PTR [r12+0x10],0x3
  40ff40:	jne    40ff30 <__flatcc_fb_gen_c_builder@@Base+0x210>
  40ff42:	mov    rdi,QWORD PTR [r12+0x18]
  40ff47:	mov    rsi,r12
  40ff4a:	mov    rdx,rbp
  40ff4d:	call   407300 <__flatcc_fb_scoped_symbol_name@@Base>
  40ff52:	mov    rdi,QWORD PTR [rbx+0xd0]
  40ff59:	mov    r9,rbp
  40ff5c:	mov    r8,rbp
  40ff5f:	mov    rcx,rbp
  40ff62:	mov    rdx,r13
  40ff65:	mov    esi,0x1
  40ff6a:	xor    eax,eax
  40ff6c:	call   405200 <__fprintf_chk@plt>
  40ff71:	sub    rsp,0x8
  40ff75:	mov    rdi,QWORD PTR [rbx+0xd0]
  40ff7c:	lea    rdx,[rip+0x3092d]        # 4408b0 <_IO_stdin_used@@Base+0x138b0>
  40ff83:	push   rbp
  40ff84:	mov    rcx,rbx
  40ff87:	xor    eax,eax
  40ff89:	mov    r9,rbp
  40ff8c:	mov    r8,rbx
  40ff8f:	mov    esi,0x1
  40ff94:	call   405200 <__fprintf_chk@plt>
  40ff99:	mov    r12,QWORD PTR [r12]
  40ff9d:	mov    eax,0x1
  40ffa2:	pop    rdx
  40ffa3:	pop    rcx
  40ffa4:	test   r12,r12
  40ffa7:	jne    40ff39 <__flatcc_fb_gen_c_builder@@Base+0x219>
  40ffa9:	test   eax,eax
  40ffab:	je     40ffc7 <__flatcc_fb_gen_c_builder@@Base+0x2a7>
  40ffad:	mov    rdi,QWORD PTR [rbx+0xd0]
  40ffb4:	lea    rdx,[rip+0x35852]        # 44580d <_IO_stdin_used@@Base+0x1880d>
  40ffbb:	mov    esi,0x1
  40ffc0:	xor    eax,eax
  40ffc2:	call   405200 <__fprintf_chk@plt>
  40ffc7:	mov    rax,QWORD PTR [rbx+0xd8]
  40ffce:	mov    r13,QWORD PTR [rax+0x48]
  40ffd2:	xor    r15d,r15d
  40ffd5:	test   r13,r13
  40ffd8:	je     4103d3 <__flatcc_fb_gen_c_builder@@Base+0x6b3>
  40ffde:	xchg   ax,ax
  40ffe0:	mov    ecx,0x1d
  40ffe5:	mov    rdi,rbp
  40ffe8:	mov    rax,r15
  40ffeb:	rep stos QWORD PTR es:[rdi],rax
  40ffee:	cmp    WORD PTR [r13+0x10],0x1
  40fff4:	jne    4104f8 <__flatcc_fb_gen_c_builder@@Base+0x7d8>
  40fffa:	mov    rdi,QWORD PTR [r13+0x18]
  40fffe:	mov    rsi,r13
  410001:	mov    rdx,rbp
  410004:	lea    r14,[r13+0x28]
  410008:	call   407300 <__flatcc_fb_scoped_symbol_name@@Base>
  41000d:	mov    rdi,QWORD PTR [r13+0x28]
  410011:	call   40c170 <__flatcc_gen_sort@@Base+0x160>
  410016:	mov    rdi,QWORD PTR [rbx+0xd0]
  41001d:	lea    rdx,[rip+0x27265]        # 437289 <_IO_stdin_used@@Base+0xa289>
  410024:	mov    r12d,eax
  410027:	mov    rcx,rbp
  41002a:	mov    esi,0x1
  41002f:	xor    eax,eax
  410031:	call   405200 <__fprintf_chk@plt>
  410036:	mov    r8d,0x1
  41003c:	xor    edx,edx
  41003e:	mov    ecx,r12d
  410041:	mov    rsi,r14
  410044:	mov    rdi,rbx
  410047:	call   40cc30 <__flatcc_gen_sort@@Base+0xc20>
  41004c:	mov    rdi,QWORD PTR [rbx+0xd0]
  410053:	lea    rdx,[rip+0x27249]        # 4372a3 <_IO_stdin_used@@Base+0xa2a3>
  41005a:	mov    rcx,rbp
  41005d:	mov    esi,0x1
  410062:	xor    eax,eax
  410064:	call   405200 <__fprintf_chk@plt>
  410069:	mov    r8d,0x1
  41006f:	mov    ecx,r12d
  410072:	xor    edx,edx
  410074:	mov    rsi,r13
  410077:	mov    rdi,rbx
  41007a:	call   40c490 <__flatcc_gen_sort@@Base+0x480>
  41007f:	mov    rdi,QWORD PTR [rbx+0xd0]
  410086:	lea    rdx,[rip+0x35780]        # 44580d <_IO_stdin_used@@Base+0x1880d>
  41008d:	mov    esi,0x1
  410092:	xor    eax,eax
  410094:	call   405200 <__fprintf_chk@plt>
  410099:	mov    rdi,QWORD PTR [rbx+0xd0]
  4100a0:	lea    rdx,[rip+0x30831]        # 4408d8 <_IO_stdin_used@@Base+0x138d8>
  4100a7:	mov    r9,rbp
  4100aa:	mov    r8,rbp
  4100ad:	mov    rcx,rbp
  4100b0:	mov    esi,0x1
  4100b5:	xor    eax,eax
  4100b7:	call   405200 <__fprintf_chk@plt>
  4100bc:	xor    r8d,r8d
  4100bf:	mov    ecx,r12d
  4100c2:	xor    edx,edx
  4100c4:	mov    rsi,r14
  4100c7:	mov    rdi,rbx
  4100ca:	call   40cc30 <__flatcc_gen_sort@@Base+0xc20>
  4100cf:	mov    rdi,QWORD PTR [rbx+0xd0]
  4100d6:	lea    rdx,[rip+0x27384]        # 437461 <_IO_stdin_used@@Base+0xa461>
  4100dd:	mov    esi,0x1
  4100e2:	xor    eax,eax
  4100e4:	call   405200 <__fprintf_chk@plt>
  4100e9:	xor    r8d,r8d
  4100ec:	xor    ecx,ecx
  4100ee:	mov    edx,r12d
  4100f1:	mov    rsi,r14
  4100f4:	mov    rdi,rbx
  4100f7:	call   40c580 <__flatcc_gen_sort@@Base+0x570>
  4100fc:	mov    rdi,QWORD PTR [rbx+0xd0]
  410103:	lea    rdx,[rip+0x2735c]        # 437466 <_IO_stdin_used@@Base+0xa466>
  41010a:	mov    esi,0x1
  41010f:	xor    eax,eax
  410111:	call   405200 <__fprintf_chk@plt>
  410116:	sub    rsp,0x8
  41011a:	mov    rdi,QWORD PTR [rbx+0xd0]
  410121:	lea    rdx,[rip+0x307d8]        # 440900 <_IO_stdin_used@@Base+0x13900>
  410128:	push   rbp
  410129:	mov    r9,rbp
  41012c:	mov    r8,rbp
  41012f:	mov    rcx,rbp
  410132:	mov    esi,0x1
  410137:	xor    eax,eax
  410139:	call   405200 <__fprintf_chk@plt>
  41013e:	mov    rdi,QWORD PTR [rbx+0xd0]
  410145:	lea    rdx,[rip+0x27317]        # 437463 <_IO_stdin_used@@Base+0xa463>
  41014c:	mov    esi,0x1
  410151:	xor    eax,eax
  410153:	call   405200 <__fprintf_chk@plt>
  410158:	mov    r8d,0x1
  41015e:	xor    ecx,ecx
  410160:	mov    edx,r12d
  410163:	mov    rsi,r14
  410166:	mov    rdi,rbx
  410169:	call   40c580 <__flatcc_gen_sort@@Base+0x570>
  41016e:	mov    rdi,QWORD PTR [rbx+0xd0]
  410175:	lea    rdx,[rip+0x272ea]        # 437466 <_IO_stdin_used@@Base+0xa466>
  41017c:	mov    esi,0x1
  410181:	xor    eax,eax
  410183:	call   405200 <__fprintf_chk@plt>
  410188:	mov    rdi,QWORD PTR [rbx+0xd0]
  41018f:	lea    rdx,[rip+0x307a2]        # 440938 <_IO_stdin_used@@Base+0x13938>
  410196:	mov    r9,rbp
  410199:	mov    r8,rbp
  41019c:	mov    rcx,rbp
  41019f:	mov    esi,0x1
  4101a4:	xor    eax,eax
  4101a6:	call   405200 <__fprintf_chk@plt>
  4101ab:	xor    r8d,r8d
  4101ae:	mov    ecx,r12d
  4101b1:	xor    edx,edx
  4101b3:	mov    rsi,r14
  4101b6:	mov    rdi,rbx
  4101b9:	call   40cc30 <__flatcc_gen_sort@@Base+0xc20>
  4101be:	mov    rdi,QWORD PTR [rbx+0xd0]
  4101c5:	lea    rdx,[rip+0x27295]        # 437461 <_IO_stdin_used@@Base+0xa461>
  4101cc:	mov    esi,0x1
  4101d1:	xor    eax,eax
  4101d3:	call   405200 <__fprintf_chk@plt>
  4101d8:	xor    r8d,r8d
  4101db:	mov    ecx,0x2
  4101e0:	mov    edx,r12d
  4101e3:	mov    rsi,r14
  4101e6:	mov    rdi,rbx
  4101e9:	call   40c580 <__flatcc_gen_sort@@Base+0x570>
  4101ee:	mov    rdi,QWORD PTR [rbx+0xd0]
  4101f5:	lea    rdx,[rip+0x2726a]        # 437466 <_IO_stdin_used@@Base+0xa466>
  4101fc:	mov    esi,0x1
  410201:	xor    eax,eax
  410203:	call   405200 <__fprintf_chk@plt>
  410208:	mov    rdi,QWORD PTR [rbx+0xd0]
  41020f:	lea    rdx,[rip+0x30752]        # 440968 <_IO_stdin_used@@Base+0x13968>
  410216:	mov    r9,rbp
  410219:	mov    r8,rbp
  41021c:	mov    rcx,rbp
  41021f:	mov    esi,0x1
  410224:	xor    eax,eax
  410226:	mov    QWORD PTR [rsp],rbp
  41022a:	call   405200 <__fprintf_chk@plt>
  41022f:	mov    rdi,QWORD PTR [rbx+0xd0]
  410236:	lea    rdx,[rip+0x27226]        # 437463 <_IO_stdin_used@@Base+0xa463>
  41023d:	mov    esi,0x1
  410242:	xor    eax,eax
  410244:	call   405200 <__fprintf_chk@plt>
  410249:	mov    r8d,0x1
  41024f:	mov    ecx,0x2
  410254:	mov    edx,r12d
  410257:	mov    rsi,r14
  41025a:	mov    rdi,rbx
  41025d:	call   40c580 <__flatcc_gen_sort@@Base+0x570>
  410262:	mov    rdi,QWORD PTR [rbx+0xd0]
  410269:	lea    rdx,[rip+0x271f6]        # 437466 <_IO_stdin_used@@Base+0xa466>
  410270:	mov    esi,0x1
  410275:	xor    eax,eax
  410277:	call   405200 <__fprintf_chk@plt>
  41027c:	mov    rdi,QWORD PTR [rbx+0xd0]
  410283:	lea    rdx,[rip+0x3071e]        # 4409a8 <_IO_stdin_used@@Base+0x139a8>
  41028a:	mov    r9,rbp
  41028d:	mov    r8,rbp
  410290:	mov    rcx,rbp
  410293:	mov    esi,0x1
  410298:	xor    eax,eax
  41029a:	call   405200 <__fprintf_chk@plt>
  41029f:	xor    r8d,r8d
  4102a2:	mov    ecx,r12d
  4102a5:	xor    edx,edx
  4102a7:	mov    rsi,r14
  4102aa:	mov    rdi,rbx
  4102ad:	call   40cc30 <__flatcc_gen_sort@@Base+0xc20>
  4102b2:	mov    rdi,QWORD PTR [rbx+0xd0]
  4102b9:	lea    rdx,[rip+0x271a1]        # 437461 <_IO_stdin_used@@Base+0xa461>
  4102c0:	mov    esi,0x1
  4102c5:	xor    eax,eax
  4102c7:	call   405200 <__fprintf_chk@plt>
  4102cc:	xor    r8d,r8d
  4102cf:	mov    ecx,0x1
  4102d4:	mov    edx,r12d
  4102d7:	mov    rsi,r14
  4102da:	mov    rdi,rbx
  4102dd:	call   40c580 <__flatcc_gen_sort@@Base+0x570>
  4102e2:	mov    rdi,QWORD PTR [rbx+0xd0]
  4102e9:	lea    rdx,[rip+0x27176]        # 437466 <_IO_stdin_used@@Base+0xa466>
  4102f0:	mov    esi,0x1
  4102f5:	xor    eax,eax
  4102f7:	call   405200 <__fprintf_chk@plt>
  4102fc:	mov    rdi,QWORD PTR [rbx+0xd0]
  410303:	lea    rdx,[rip+0x306ce]        # 4409d8 <_IO_stdin_used@@Base+0x139d8>
  41030a:	mov    r9,rbp
  41030d:	mov    r8,rbp
  410310:	mov    rcx,rbp
  410313:	mov    esi,0x1
  410318:	xor    eax,eax
  41031a:	mov    QWORD PTR [rsp],rbp
  41031e:	call   405200 <__fprintf_chk@plt>
  410323:	mov    rdi,QWORD PTR [rbx+0xd0]
  41032a:	lea    rdx,[rip+0x27132]        # 437463 <_IO_stdin_used@@Base+0xa463>
  410331:	xor    eax,eax
  410333:	mov    esi,0x1
  410338:	call   405200 <__fprintf_chk@plt>
  41033d:	mov    r8d,0x1
  410343:	mov    ecx,0x1
  410348:	mov    edx,r12d
  41034b:	mov    rsi,r14
  41034e:	mov    rdi,rbx
  410351:	call   40c580 <__flatcc_gen_sort@@Base+0x570>
  410356:	mov    rdi,QWORD PTR [rbx+0xd0]
  41035d:	lea    rdx,[rip+0x27102]        # 437466 <_IO_stdin_used@@Base+0xa466>
  410364:	mov    esi,0x1
  410369:	xor    eax,eax
  41036b:	call   405200 <__fprintf_chk@plt>
  410370:	movzx  eax,WORD PTR [r13+0xb0]
  410378:	mov    rdi,QWORD PTR [rbx+0xd0]
  41037f:	lea    rdx,[rip+0x30692]        # 440a18 <_IO_stdin_used@@Base+0x13a18>
  410386:	push   rbp
  410387:	push   rbp
  410388:	mov    r9,rbp
  41038b:	mov    r8,rbx
  41038e:	mov    rcx,rbx
  410391:	mov    esi,0x1
  410396:	push   rax
  410397:	push   QWORD PTR [r13+0xb8]
  41039e:	xor    eax,eax
  4103a0:	call   405200 <__fprintf_chk@plt>
  4103a5:	mov    rdi,QWORD PTR [rbx+0xd0]
  4103ac:	lea    rdx,[rip+0x3545a]        # 44580d <_IO_stdin_used@@Base+0x1880d>
  4103b3:	add    rsp,0x30
  4103b7:	xor    eax,eax
  4103b9:	mov    esi,0x1
  4103be:	call   405200 <__fprintf_chk@plt>
  4103c3:	mov    r13,QWORD PTR [r13+0xc0]
  4103ca:	test   r13,r13
  4103cd:	jne    40ffe0 <__flatcc_fb_gen_c_builder@@Base+0x2c0>
  4103d3:	mov    rdi,rbx
  4103d6:	call   40e1c0 <__flatcc_gen_sort@@Base+0x21b0>
  4103db:	mov    rax,QWORD PTR [rbx+0xe0]
  4103e2:	mov    rdi,QWORD PTR [rbx+0xd0]
  4103e9:	mov    eax,DWORD PTR [rax+0xac]
  4103ef:	test   eax,eax
  4103f1:	je     41040d <__flatcc_fb_gen_c_builder@@Base+0x6ed>
  4103f3:	lea    rdx,[rip+0x25906]        # 435d00 <_IO_stdin_used@@Base+0x8d00>
  4103fa:	mov    esi,0x1
  4103ff:	xor    eax,eax
  410401:	call   405200 <__fprintf_chk@plt>
  410406:	mov    rdi,QWORD PTR [rbx+0xd0]
  41040d:	mov    rax,QWORD PTR [rbx+0xd8]
  410414:	lea    rdx,[rip+0x27058]        # 437473 <_IO_stdin_used@@Base+0xa473>
  41041b:	mov    esi,0x1
  410420:	mov    rcx,QWORD PTR [rax+0x118]
  410427:	xor    eax,eax
  410429:	call   405200 <__fprintf_chk@plt>
  41042e:	xor    eax,eax
  410430:	mov    rcx,QWORD PTR [rsp+0xe8]
  410438:	xor    rcx,QWORD PTR fs:0x28
  410441:	jne    410517 <__flatcc_fb_gen_c_builder@@Base+0x7f7>
  410447:	add    rsp,0xf8
  41044e:	pop    rbx
  41044f:	pop    rbp
  410450:	pop    r12
  410452:	pop    r13
  410454:	pop    r14
  410456:	pop    r15
  410458:	ret    
  410459:	nop    DWORD PTR [rax+0x0]
  410460:	lea    rdx,[rip+0x1f9e9]        # 42fe50 <_IO_stdin_used@@Base+0x2e50>
  410467:	xor    eax,eax
  410469:	mov    esi,0x1
  41046e:	call   405200 <__fprintf_chk@plt>
  410473:	mov    rax,QWORD PTR [rbx+0xd8]
  41047a:	mov    rdi,QWORD PTR [rbx+0xd0]
  410481:	cmp    WORD PTR [rax+0x20],0x2
  410486:	jne    40fe91 <__flatcc_fb_gen_c_builder@@Base+0x171>
  41048c:	sub    rsp,0x8
  410490:	push   QWORD PTR [rax+0x10]
  410493:	mov    r9d,DWORD PTR [rax+0x18]
  410497:	lea    rdx,[rip+0x25ae2]        # 435f80 <_IO_stdin_used@@Base+0x8f80>
  41049e:	mov    r8,rbx
  4104a1:	xor    eax,eax
  4104a3:	mov    rcx,rbx
  4104a6:	mov    esi,0x1
  4104ab:	call   405200 <__fprintf_chk@plt>
  4104b0:	mov    rax,QWORD PTR [rbx+0xd8]
  4104b7:	pop    r8
  4104b9:	pop    r9
  4104bb:	cmp    WORD PTR [rax+0x38],0x2
  4104c0:	jne    40febc <__flatcc_fb_gen_c_builder@@Base+0x19c>
  4104c6:	sub    rsp,0x8
  4104ca:	mov    rdi,QWORD PTR [rbx+0xd0]
  4104d1:	push   QWORD PTR [rax+0x28]
  4104d4:	mov    r9d,DWORD PTR [rax+0x30]
  4104d8:	lea    rdx,[rip+0x25b11]        # 435ff0 <_IO_stdin_used@@Base+0x8ff0>
  4104df:	mov    esi,0x1
  4104e4:	mov    r8,rbx
  4104e7:	mov    rcx,rbx
  4104ea:	xor    eax,eax
  4104ec:	call   405200 <__fprintf_chk@plt>
  4104f1:	pop    rsi
  4104f2:	pop    rdi
  4104f3:	jmp    40fee7 <__flatcc_fb_gen_c_builder@@Base+0x1c7>
  4104f8:	lea    rcx,[rip+0x308e1]        # 440de0 <_IO_stdin_used@@Base+0x13de0>
  4104ff:	lea    rsi,[rip+0x27042]        # 437548 <_IO_stdin_used@@Base+0xa548>
  410506:	lea    rdi,[rip+0x1e983]        # 42ee90 <_IO_stdin_used@@Base+0x1e90>
  41050d:	mov    edx,0x3f2
  410512:	call   405100 <__assert_fail@plt>
  410517:	call   4050d0 <__stack_chk_fail@plt>
  41051c:	nop    DWORD PTR [rax+0x0]
  410520:	push   r15
  410522:	push   r14
  410524:	mov    ecx,0x1d
  410529:	push   r13
  41052b:	push   r12
  41052d:	push   rbp
  41052e:	push   rbx
  41052f:	mov    rbx,rdi
  410532:	mov    rbp,rsi
  410535:	sub    rsp,0x1f8
  41053c:	lea    r12,[rsp+0x10]
  410541:	lea    r14,[rsp+0x100]
  410549:	mov    rax,QWORD PTR fs:0x28
  410552:	mov    QWORD PTR [rsp+0x1e8],rax
  41055a:	xor    eax,eax
  41055c:	mov    rdi,r12
  41055f:	mov    rdx,r12
  410562:	rep stos QWORD PTR es:[rdi],rax
  410565:	mov    ecx,0x1d
  41056a:	mov    rdi,r14
  41056d:	rep stos QWORD PTR es:[rdi],rax
  410570:	mov    rdi,QWORD PTR [rsi+0x18]
  410574:	call   407300 <__flatcc_fb_scoped_symbol_name@@Base>
  410579:	mov    rdi,QWORD PTR [rbx+0xd0]
  410580:	lea    rdx,[rip+0x30871]        # 440df8 <_IO_stdin_used@@Base+0x13df8>
  410587:	xor    eax,eax
  410589:	mov    rcx,r12
  41058c:	mov    esi,0x1
  410591:	call   405200 <__fprintf_chk@plt>
  410596:	mov    r15,QWORD PTR [rbp+0x28]
  41059a:	test   r15,r15
  41059d:	je     4106bc <__flatcc_fb_gen_c_builder@@Base+0x99c>
  4105a3:	lea    r13,[rip+0x31644]        # 441bee <_IO_stdin_used@@Base+0x14bee>
  4105aa:	lea    rbp,[rip+0x3146f]        # 441a20 <_IO_stdin_used@@Base+0x14a20>
  4105b1:	mov    eax,0x1
  4105b6:	test   BYTE PTR [r15+0x70],0x4
  4105bb:	jne    4106a8 <__flatcc_fb_gen_c_builder@@Base+0x988>
  4105c1:	test   eax,eax
  4105c3:	je     410960 <__flatcc_fb_gen_c_builder@@Base+0xc40>
  4105c9:	mov    rdi,QWORD PTR [rbx+0xd0]
  4105d0:	lea    rdx,[rip+0x313c8]        # 44199f <_IO_stdin_used@@Base+0x1499f>
  4105d7:	mov    esi,0x1
  4105dc:	xor    eax,eax
  4105de:	call   405200 <__fprintf_chk@plt>
  4105e3:	movzx  eax,WORD PTR [r15+0x28]
  4105e8:	movzx  r8d,BYTE PTR [r15+0x71]
  4105ed:	sub    eax,0x7
  4105f0:	and    r8d,0x1
  4105f4:	cmp    ax,0x8
  4105f8:	ja     410640 <__flatcc_fb_gen_c_builder@@Base+0x920>
  4105fa:	movzx  eax,ax
  4105fd:	movsxd rax,DWORD PTR [rbp+rax*4+0x0]
  410602:	add    rax,rbp
  410605:	jmp    rax
  410607:	nop    WORD PTR [rax+rax*1+0x0]
  410610:	movzx  r9d,WORD PTR [r15+0x72]
  410615:	mov    rcx,QWORD PTR [r15+0x88]
  41061c:	lea    rdx,[rip+0x3083d]        # 440e60 <_IO_stdin_used@@Base+0x13e60>
  410623:	mov    rdi,QWORD PTR [rbx+0xd0]
  41062a:	mov    r8,QWORD PTR [r15+0x80]
  410631:	mov    esi,0x1
  410636:	xor    eax,eax
  410638:	call   405200 <__fprintf_chk@plt>
  41063d:	nop    DWORD PTR [rax]
  410640:	mov    rax,QWORD PTR [r15+0x8]
  410644:	mov    rdi,QWORD PTR [rbx+0xd0]
  41064b:	mov    rdx,r13
  41064e:	mov    esi,0x1
  410653:	mov    rcx,QWORD PTR [rax+0x8]
  410657:	mov    r8,QWORD PTR [rax]
  41065a:	xor    eax,eax
  41065c:	call   405200 <__fprintf_chk@plt>
  410661:	mov    r15,QWORD PTR [r15]
  410664:	test   r15,r15
  410667:	je     410b00 <__flatcc_fb_gen_c_builder@@Base+0xde0>
  41066d:	test   BYTE PTR [r15+0x70],0x4
  410672:	je     410960 <__flatcc_fb_gen_c_builder@@Base+0xc40>
  410678:	mov    r15,QWORD PTR [r15]
  41067b:	test   r15,r15
  41067e:	je     410b00 <__flatcc_fb_gen_c_builder@@Base+0xde0>
  410684:	test   BYTE PTR [r15+0x70],0x4
  410689:	je     410960 <__flatcc_fb_gen_c_builder@@Base+0xc40>
  41068f:	mov    r15,QWORD PTR [r15]
  410692:	test   r15,r15
  410695:	je     410b00 <__flatcc_fb_gen_c_builder@@Base+0xde0>
  41069b:	test   BYTE PTR [r15+0x70],0x4
  4106a0:	je     410960 <__flatcc_fb_gen_c_builder@@Base+0xc40>
  4106a6:	xor    eax,eax
  4106a8:	mov    r15,QWORD PTR [r15]
  4106ab:	test   r15,r15
  4106ae:	jne    4105b6 <__flatcc_fb_gen_c_builder@@Base+0x896>
  4106b4:	test   eax,eax
  4106b6:	je     410b00 <__flatcc_fb_gen_c_builder@@Base+0xde0>
  4106bc:	mov    rdi,QWORD PTR [rbx+0xd0]
  4106c3:	lea    rdx,[rip+0x31302]        # 4419cc <_IO_stdin_used@@Base+0x149cc>
  4106ca:	mov    esi,0x1
  4106cf:	xor    eax,eax
  4106d1:	call   405200 <__fprintf_chk@plt>
  4106d6:	mov    rdi,QWORD PTR [rbx+0xd0]
  4106dd:	lea    rdx,[rip+0x35127]        # 44580b <_IO_stdin_used@@Base+0x1880b>
  4106e4:	mov    esi,0x1
  4106e9:	xor    eax,eax
  4106eb:	call   405200 <__fprintf_chk@plt>
  4106f0:	mov    rdi,QWORD PTR [rbx+0xd0]
  4106f7:	lea    rdx,[rip+0x30aaa]        # 4411a8 <_IO_stdin_used@@Base+0x141a8>
  4106fe:	mov    r9,r12
  410701:	mov    r8,r12
  410704:	mov    rcx,r12
  410707:	mov    esi,0x1
  41070c:	xor    eax,eax
  41070e:	call   405200 <__fprintf_chk@plt>
  410713:	mov    rdi,QWORD PTR [rbx+0xd0]
  41071a:	lea    rdx,[rip+0x30b27]        # 441248 <_IO_stdin_used@@Base+0x14248>
  410721:	mov    r9,r12
  410724:	mov    r8,r12
  410727:	mov    rcx,r12
  41072a:	mov    esi,0x1
  41072f:	xor    eax,eax
  410731:	call   405200 <__fprintf_chk@plt>
  410736:	mov    rdi,QWORD PTR [rbx+0xd0]
  41073d:	lea    rdx,[rip+0x30bb4]        # 4412f8 <_IO_stdin_used@@Base+0x142f8>
  410744:	mov    r8,r12
  410747:	mov    rcx,r12
  41074a:	mov    esi,0x1
  41074f:	xor    eax,eax
  410751:	call   405200 <__fprintf_chk@plt>
  410756:	mov    rdi,QWORD PTR [rbx+0xd0]
  41075d:	lea    rdx,[rip+0x30c4c]        # 4413b0 <_IO_stdin_used@@Base+0x143b0>
  410764:	mov    r8,rbx
  410767:	xor    eax,eax
  410769:	mov    r9,r12
  41076c:	mov    rcx,r12
  41076f:	mov    esi,0x1
  410774:	call   405200 <__fprintf_chk@plt>
  410779:	xor    eax,eax
  41077b:	mov    rbx,QWORD PTR [rsp+0x1e8]
  410783:	xor    rbx,QWORD PTR fs:0x28
  41078c:	jne    410b1f <__flatcc_fb_gen_c_builder@@Base+0xdff>
  410792:	add    rsp,0x1f8
  410799:	pop    rbx
  41079a:	pop    rbp
  41079b:	pop    r12
  41079d:	pop    r13
  41079f:	pop    r14
  4107a1:	pop    r15
  4107a3:	ret    
  4107a4:	nop    DWORD PTR [rax+0x0]
  4107a8:	mov    rsi,QWORD PTR [r15+0x90]
  4107af:	test   rsi,rsi
  4107b2:	je     410980 <__flatcc_fb_gen_c_builder@@Base+0xc60>
  4107b8:	mov    rdi,QWORD PTR [rsi+0x18]
  4107bc:	mov    rdx,r14
  4107bf:	mov    DWORD PTR [rsp+0xc],r8d
  4107c4:	call   407300 <__flatcc_fb_scoped_symbol_name@@Base>
  4107c9:	mov    rax,QWORD PTR [r15+0x90]
  4107d0:	mov    r8d,DWORD PTR [rsp+0xc]
  4107d5:	mov    rcx,QWORD PTR [r15+0x88]
  4107dc:	mov    rdi,QWORD PTR [rbx+0xd0]
  4107e3:	cmp    WORD PTR [rax+0x10],0x0
  4107e8:	jne    4109c8 <__flatcc_fb_gen_c_builder@@Base+0xca8>
  4107ee:	movzx  r9d,WORD PTR [r15+0x72]
  4107f3:	sub    rsp,0x8
  4107f7:	lea    rdx,[rip+0x3068a]        # 440e88 <_IO_stdin_used@@Base+0x13e88>
  4107fe:	push   r14
  410800:	mov    esi,0x1
  410805:	xor    eax,eax
  410807:	call   405200 <__fprintf_chk@plt>
  41080c:	pop    rdi
  41080d:	pop    r8
  41080f:	jmp    410640 <__flatcc_fb_gen_c_builder@@Base+0x920>
  410814:	nop    DWORD PTR [rax+0x0]
  410818:	mov    rsi,QWORD PTR [r15+0x18]
  41081c:	mov    rdx,r14
  41081f:	mov    DWORD PTR [rsp+0xc],r8d
  410824:	mov    rdi,QWORD PTR [rsi+0x18]
  410828:	call   407300 <__flatcc_fb_scoped_symbol_name@@Base>
  41082d:	mov    rax,QWORD PTR [r15+0x18]
  410831:	mov    r8d,DWORD PTR [rsp+0xc]
  410836:	movzx  eax,WORD PTR [rax+0x10]
  41083a:	cmp    ax,0x1
  41083e:	je     410980 <__flatcc_fb_gen_c_builder@@Base+0xc60>
  410844:	jb     410ad0 <__flatcc_fb_gen_c_builder@@Base+0xdb0>
  41084a:	cmp    ax,0x3
  41084e:	je     410980 <__flatcc_fb_gen_c_builder@@Base+0xc60>
  410854:	cmp    ax,0x4
  410858:	jne    410a50 <__flatcc_fb_gen_c_builder@@Base+0xd30>
  41085e:	mov    rcx,QWORD PTR [r15+0x88]
  410865:	mov    rdi,QWORD PTR [rbx+0xd0]
  41086c:	lea    rdx,[rip+0x308a5]        # 441118 <_IO_stdin_used@@Base+0x14118>
  410873:	mov    r9,r14
  410876:	mov    esi,0x1
  41087b:	xor    eax,eax
  41087d:	call   405200 <__fprintf_chk@plt>
  410882:	jmp    410640 <__flatcc_fb_gen_c_builder@@Base+0x920>
  410887:	nop    WORD PTR [rax+rax*1+0x0]
  410890:	mov    rcx,QWORD PTR [r15+0x88]
  410897:	mov    rdi,QWORD PTR [rbx+0xd0]
  41089e:	lea    rdx,[rip+0x306ab]        # 440f50 <_IO_stdin_used@@Base+0x13f50>
  4108a5:	mov    esi,0x1
  4108aa:	xor    eax,eax
  4108ac:	call   405200 <__fprintf_chk@plt>
  4108b1:	jmp    410640 <__flatcc_fb_gen_c_builder@@Base+0x920>
  4108b6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4108c0:	mov    rcx,QWORD PTR [r15+0x88]
  4108c7:	mov    rdi,QWORD PTR [rbx+0xd0]
  4108ce:	lea    rdx,[rip+0x306a3]        # 440f78 <_IO_stdin_used@@Base+0x13f78>
  4108d5:	mov    esi,0x1
  4108da:	xor    eax,eax
  4108dc:	call   405200 <__fprintf_chk@plt>
  4108e1:	jmp    410640 <__flatcc_fb_gen_c_builder@@Base+0x920>
  4108e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4108f0:	mov    rsi,QWORD PTR [r15+0x18]
  4108f4:	mov    rdx,r14
  4108f7:	mov    DWORD PTR [rsp+0xc],r8d
  4108fc:	mov    rdi,QWORD PTR [rsi+0x18]
  410900:	call   407300 <__flatcc_fb_scoped_symbol_name@@Base>
  410905:	mov    rax,QWORD PTR [r15+0x18]
  410909:	movzx  eax,WORD PTR [rax+0x10]
  41090d:	cmp    ax,0x1
  410911:	je     410610 <__flatcc_fb_gen_c_builder@@Base+0x8f0>
  410917:	mov    r8d,DWORD PTR [rsp+0xc]
  41091c:	jb     410aa0 <__flatcc_fb_gen_c_builder@@Base+0xd80>
  410922:	cmp    ax,0x3
  410926:	je     410610 <__flatcc_fb_gen_c_builder@@Base+0x8f0>
  41092c:	cmp    ax,0x4
  410930:	jne    4109f8 <__flatcc_fb_gen_c_builder@@Base+0xcd8>
  410936:	mov    rcx,QWORD PTR [r15+0x88]
  41093d:	mov    rdi,QWORD PTR [rbx+0xd0]
  410944:	lea    rdx,[rip+0x3069d]        # 440fe8 <_IO_stdin_used@@Base+0x13fe8>
  41094b:	mov    r9,r14
  41094e:	mov    esi,0x1
  410953:	xor    eax,eax
  410955:	call   405200 <__fprintf_chk@plt>
  41095a:	jmp    410640 <__flatcc_fb_gen_c_builder@@Base+0x920>
  41095f:	nop
  410960:	mov    rdi,QWORD PTR [rbx+0xd0]
  410967:	lea    rdx,[rip+0x304d2]        # 440e40 <_IO_stdin_used@@Base+0x13e40>
  41096e:	mov    esi,0x1
  410973:	xor    eax,eax
  410975:	call   405200 <__fprintf_chk@plt>
  41097a:	jmp    4105e3 <__flatcc_fb_gen_c_builder@@Base+0x8c3>
  41097f:	nop
  410980:	mov    r9,QWORD PTR [r15+0x80]
  410987:	mov    eax,0xffffffff
  41098c:	test   r9,r9
  41098f:	je     410996 <__flatcc_fb_gen_c_builder@@Base+0xc76>
  410991:	xor    edx,edx
  410993:	div    r9
  410996:	mov    rcx,QWORD PTR [r15+0x88]
  41099d:	mov    rdi,QWORD PTR [rbx+0xd0]
  4109a4:	lea    rdx,[rip+0x30565]        # 440f10 <_IO_stdin_used@@Base+0x13f10>
  4109ab:	push   rax
  4109ac:	movzx  eax,WORD PTR [r15+0x72]
  4109b1:	mov    esi,0x1
  4109b6:	push   rax
  4109b7:	xor    eax,eax
  4109b9:	call   405200 <__fprintf_chk@plt>
  4109be:	pop    rax
  4109bf:	pop    rdx
  4109c0:	jmp    410640 <__flatcc_fb_gen_c_builder@@Base+0x920>
  4109c5:	nop    DWORD PTR [rax]
  4109c8:	movzx  eax,WORD PTR [r15+0x72]
  4109cd:	sub    rsp,0x8
  4109d1:	mov    r9,QWORD PTR [r15+0x80]
  4109d8:	lea    rdx,[rip+0x304f1]        # 440ed0 <_IO_stdin_used@@Base+0x13ed0>
  4109df:	mov    esi,0x1
  4109e4:	push   rax
  4109e5:	xor    eax,eax
  4109e7:	call   405200 <__fprintf_chk@plt>
  4109ec:	pop    rcx
  4109ed:	pop    rsi
  4109ee:	jmp    410640 <__flatcc_fb_gen_c_builder@@Base+0x920>
  4109f3:	nop    DWORD PTR [rax+rax*1+0x0]
  4109f8:	mov    rax,QWORD PTR [rip+0x405e9]        # 450fe8 <stderr@GLIBC_2.2.5>
  4109ff:	lea    rcx,[rip+0x30662]        # 441068 <_IO_stdin_used@@Base+0x14068>
  410a06:	lea    rdx,[rip+0x257d4]        # 4361e1 <_IO_stdin_used@@Base+0x91e1>
  410a0d:	lea    r9,[rip+0x30614]        # 441028 <_IO_stdin_used@@Base+0x14028>
  410a14:	mov    esi,0x1
  410a19:	mov    r8d,0xb2
  410a1f:	mov    rdi,QWORD PTR [rax]
  410a22:	xor    eax,eax
  410a24:	call   405200 <__fprintf_chk@plt>
  410a29:	lea    rcx,[rip+0x31020]        # 441a50 <_IO_stdin_used@@Base+0x14a50>
  410a30:	lea    rsi,[rip+0x30631]        # 441068 <_IO_stdin_used@@Base+0x14068>
  410a37:	lea    rdi,[rip+0x267eb]        # 437229 <_IO_stdin_used@@Base+0xa229>
  410a3e:	mov    edx,0xb2
  410a43:	call   405100 <__assert_fail@plt>
  410a48:	nop    DWORD PTR [rax+rax*1+0x0]
  410a50:	mov    rax,QWORD PTR [rip+0x40591]        # 450fe8 <stderr@GLIBC_2.2.5>
  410a57:	lea    rcx,[rip+0x3060a]        # 441068 <_IO_stdin_used@@Base+0x14068>
  410a5e:	lea    rdx,[rip+0x2577c]        # 4361e1 <_IO_stdin_used@@Base+0x91e1>
  410a65:	lea    r9,[rip+0x306f4]        # 441160 <_IO_stdin_used@@Base+0x14160>
  410a6c:	mov    esi,0x1
  410a71:	mov    r8d,0xca
  410a77:	mov    rdi,QWORD PTR [rax]
  410a7a:	xor    eax,eax
  410a7c:	call   405200 <__fprintf_chk@plt>
  410a81:	lea    rcx,[rip+0x30fc8]        # 441a50 <_IO_stdin_used@@Base+0x14a50>
  410a88:	lea    rsi,[rip+0x305d9]        # 441068 <_IO_stdin_used@@Base+0x14068>
  410a8f:	lea    rdi,[rip+0x26793]        # 437229 <_IO_stdin_used@@Base+0xa229>
  410a96:	mov    edx,0xca
  410a9b:	call   405100 <__assert_fail@plt>
  410aa0:	mov    rcx,QWORD PTR [r15+0x88]
  410aa7:	mov    rdi,QWORD PTR [rbx+0xd0]
  410aae:	lea    rdx,[rip+0x304f3]        # 440fa8 <_IO_stdin_used@@Base+0x13fa8>
  410ab5:	mov    r9,r14
  410ab8:	mov    esi,0x1
  410abd:	xor    eax,eax
  410abf:	call   405200 <__fprintf_chk@plt>
  410ac4:	jmp    410640 <__flatcc_fb_gen_c_builder@@Base+0x920>
  410ac9:	nop    DWORD PTR [rax+0x0]
  410ad0:	mov    rcx,QWORD PTR [r15+0x88]
  410ad7:	mov    rdi,QWORD PTR [rbx+0xd0]
  410ade:	lea    rdx,[rip+0x305f3]        # 4410d8 <_IO_stdin_used@@Base+0x140d8>
  410ae5:	mov    r9,r14
  410ae8:	mov    esi,0x1
  410aed:	xor    eax,eax
  410aef:	call   405200 <__fprintf_chk@plt>
  410af4:	jmp    410640 <__flatcc_fb_gen_c_builder@@Base+0x920>
  410af9:	nop    DWORD PTR [rax+0x0]
  410b00:	mov    rdi,QWORD PTR [rbx+0xd0]
  410b07:	lea    rdx,[rip+0x30eae]        # 4419bc <_IO_stdin_used@@Base+0x149bc>
  410b0e:	mov    esi,0x1
  410b13:	xor    eax,eax
  410b15:	call   405200 <__fprintf_chk@plt>
  410b1a:	jmp    4106bc <__flatcc_fb_gen_c_builder@@Base+0x99c>
  410b1f:	call   4050d0 <__stack_chk_fail@plt>
  410b24:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  410b2f:	nop
  410b30:	push   r15
  410b32:	push   r14
  410b34:	mov    ecx,0x1d
  410b39:	push   r13
  410b3b:	push   r12
  410b3d:	mov    r12,rdi
  410b40:	push   rbp
  410b41:	push   rbx
  410b42:	mov    r13,rsi
  410b45:	sub    rsp,0x1e8
  410b4c:	mov    rax,QWORD PTR fs:0x28
  410b55:	mov    QWORD PTR [rsp+0x1d8],rax
  410b5d:	xor    eax,eax
  410b5f:	lea    rbp,[rsp+0xf0]
  410b67:	mov    rdi,rsp
  410b6a:	mov    rdx,rsp
  410b6d:	rep stos QWORD PTR es:[rdi],rax
  410b70:	mov    ecx,0x1d
  410b75:	mov    rdi,rbp
  410b78:	rep stos QWORD PTR es:[rdi],rax
  410b7b:	mov    rdi,QWORD PTR [rsi+0x18]
  410b7f:	call   407300 <__flatcc_fb_scoped_symbol_name@@Base>
  410b84:	mov    rdi,QWORD PTR [r12]
  410b88:	lea    rdx,[rip+0x308e1]        # 441470 <_IO_stdin_used@@Base+0x14470>
  410b8f:	xor    eax,eax
  410b91:	mov    rcx,rsp
  410b94:	mov    esi,0x1
  410b99:	call   405200 <__fprintf_chk@plt>
  410b9e:	mov    rbx,QWORD PTR [r13+0x28]
  410ba2:	lea    r13,[rip+0x30957]        # 441500 <_IO_stdin_used@@Base+0x14500>
  410ba9:	test   rbx,rbx
  410bac:	je     410c97 <__flatcc_fb_gen_c_builder@@Base+0xf77>
  410bb2:	mov    rax,QWORD PTR [rbx+0x8]
  410bb6:	mov    r15,QWORD PTR [rax]
  410bb9:	mov    r14,QWORD PTR [rax+0x8]
  410bbd:	movzx  eax,WORD PTR [rbx+0x28]
  410bc1:	cmp    ax,0xa
  410bc5:	je     410ce0 <__flatcc_fb_gen_c_builder@@Base+0xfc0>
  410bcb:	cmp    ax,0xe
  410bcf:	je     410c30 <__flatcc_fb_gen_c_builder@@Base+0xf10>
  410bd1:	test   ax,ax
  410bd4:	je     410c8b <__flatcc_fb_gen_c_builder@@Base+0xf6b>
  410bda:	mov    rax,QWORD PTR [rip+0x40407]        # 450fe8 <stderr@GLIBC_2.2.5>
  410be1:	lea    rcx,[rip+0x30480]        # 441068 <_IO_stdin_used@@Base+0x14068>
  410be8:	lea    rdx,[rip+0x255f2]        # 4361e1 <_IO_stdin_used@@Base+0x91e1>
  410bef:	lea    r9,[rip+0x30a2a]        # 441620 <_IO_stdin_used@@Base+0x14620>
  410bf6:	mov    esi,0x1
  410bfb:	mov    r8d,0x53
  410c01:	mov    rdi,QWORD PTR [rax]
  410c04:	xor    eax,eax
  410c06:	call   405200 <__fprintf_chk@plt>
  410c0b:	lea    rcx,[rip+0x30e5e]        # 441a70 <_IO_stdin_used@@Base+0x14a70>
  410c12:	lea    rsi,[rip+0x3044f]        # 441068 <_IO_stdin_used@@Base+0x14068>
  410c19:	lea    rdi,[rip+0x26609]        # 437229 <_IO_stdin_used@@Base+0xa229>
  410c20:	mov    edx,0x53
  410c25:	call   405100 <__assert_fail@plt>
  410c2a:	nop    WORD PTR [rax+rax*1+0x0]
  410c30:	mov    rsi,QWORD PTR [rbx+0x18]
  410c34:	mov    rdx,rbp
  410c37:	mov    rdi,QWORD PTR [rsi+0x18]
  410c3b:	call   407300 <__flatcc_fb_scoped_symbol_name@@Base>
  410c40:	mov    rdx,QWORD PTR [rbx+0x18]
  410c44:	movzx  eax,WORD PTR [rdx+0x10]
  410c48:	test   ax,ax
  410c4b:	je     410d10 <__flatcc_fb_gen_c_builder@@Base+0xff0>
  410c51:	cmp    ax,0x1
  410c55:	jne    410d30 <__flatcc_fb_gen_c_builder@@Base+0x1010>
  410c5b:	mov    rcx,QWORD PTR [rbx+0x48]
  410c5f:	movzx  r9d,WORD PTR [rdx+0xb0]
  410c67:	push   r15
  410c69:	mov    r8,QWORD PTR [rdx+0xb8]
  410c70:	lea    rdx,[rip+0x308d9]        # 441550 <_IO_stdin_used@@Base+0x14550>
  410c77:	push   r14
  410c79:	mov    rdi,QWORD PTR [r12]
  410c7d:	mov    esi,0x1
  410c82:	xor    eax,eax
  410c84:	call   405200 <__fprintf_chk@plt>
  410c89:	pop    rax
  410c8a:	pop    rdx
  410c8b:	mov    rbx,QWORD PTR [rbx]
  410c8e:	test   rbx,rbx
  410c91:	jne    410bb2 <__flatcc_fb_gen_c_builder@@Base+0xe92>
  410c97:	mov    rdi,QWORD PTR [r12]
  410c9b:	lea    rdx,[rip+0x3082e]        # 4414d0 <_IO_stdin_used@@Base+0x144d0>
  410ca2:	xor    eax,eax
  410ca4:	mov    esi,0x1
  410ca9:	call   405200 <__fprintf_chk@plt>
  410cae:	xor    eax,eax
  410cb0:	mov    rdx,QWORD PTR [rsp+0x1d8]
  410cb8:	xor    rdx,QWORD PTR fs:0x28
  410cc1:	jne    410d80 <__flatcc_fb_gen_c_builder@@Base+0x1060>
  410cc7:	add    rsp,0x1e8
  410cce:	pop    rbx
  410ccf:	pop    rbp
  410cd0:	pop    r12
  410cd2:	pop    r13
  410cd4:	pop    r14
  410cd6:	pop    r15
  410cd8:	ret    
  410cd9:	nop    DWORD PTR [rax+0x0]
  410ce0:	mov    ecx,DWORD PTR [rbx+0x48]
  410ce3:	mov    rdi,QWORD PTR [r12]
  410ce7:	lea    rdx,[rip+0x308f2]        # 4415e0 <_IO_stdin_used@@Base+0x145e0>
  410cee:	xor    eax,eax
  410cf0:	mov    r9,r15
  410cf3:	mov    r8d,r14d
  410cf6:	mov    esi,0x1
  410cfb:	call   405200 <__fprintf_chk@plt>
  410d00:	mov    rbx,QWORD PTR [rbx]
  410d03:	test   rbx,rbx
  410d06:	jne    410bb2 <__flatcc_fb_gen_c_builder@@Base+0xe92>
  410d0c:	jmp    410c97 <__flatcc_fb_gen_c_builder@@Base+0xf77>
  410d0e:	xchg   ax,ax
  410d10:	sub    rsp,0x8
  410d14:	mov    rcx,QWORD PTR [rbx+0x48]
  410d18:	mov    r9d,r14d
  410d1b:	push   r15
  410d1d:	mov    r8,rbp
  410d20:	mov    rdx,r13
  410d23:	jmp    410c79 <__flatcc_fb_gen_c_builder@@Base+0xf59>
  410d28:	nop    DWORD PTR [rax+rax*1+0x0]
  410d30:	mov    rax,QWORD PTR [rip+0x402b1]        # 450fe8 <stderr@GLIBC_2.2.5>
  410d37:	lea    rcx,[rip+0x3032a]        # 441068 <_IO_stdin_used@@Base+0x14068>
  410d3e:	lea    rdx,[rip+0x2549c]        # 4361e1 <_IO_stdin_used@@Base+0x91e1>
  410d45:	lea    r9,[rip+0x30854]        # 4415a0 <_IO_stdin_used@@Base+0x145a0>
  410d4c:	mov    esi,0x1
  410d51:	mov    r8d,0x4a
  410d57:	mov    rdi,QWORD PTR [rax]
  410d5a:	xor    eax,eax
  410d5c:	call   405200 <__fprintf_chk@plt>
  410d61:	lea    rcx,[rip+0x30d08]        # 441a70 <_IO_stdin_used@@Base+0x14a70>
  410d68:	lea    rsi,[rip+0x302f9]        # 441068 <_IO_stdin_used@@Base+0x14068>
  410d6f:	lea    rdi,[rip+0x264b3]        # 437229 <_IO_stdin_used@@Base+0xa229>
  410d76:	mov    edx,0x4a
  410d7b:	call   405100 <__assert_fail@plt>
  410d80:	call   4050d0 <__stack_chk_fail@plt>
  410d85:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

0000000000410d90 <__flatcc_fb_gen_c_verifier@@Base>:
  410d90:	push   r13
  410d92:	push   r12
  410d94:	lea    rdx,[rip+0x308bd]        # 441658 <_IO_stdin_used@@Base+0x14658>
  410d9b:	push   rbp
  410d9c:	push   rbx
  410d9d:	mov    rbp,rdi
  410da0:	mov    esi,0x1
  410da5:	sub    rsp,0xf8
  410dac:	mov    rax,QWORD PTR fs:0x28
  410db5:	mov    QWORD PTR [rsp+0xe8],rax
  410dbd:	xor    eax,eax
  410dbf:	mov    rax,QWORD PTR [rdi+0xd8]
  410dc6:	mov    rdi,QWORD PTR [rdi+0xd0]
  410dcd:	mov    rcx,QWORD PTR [rax+0x118]
  410dd4:	xor    eax,eax
  410dd6:	mov    r8,rcx
  410dd9:	call   405200 <__fprintf_chk@plt>
  410dde:	mov    rdi,QWORD PTR [rbp+0xd0]
  410de5:	lea    rdx,[rip+0x1ef4c]        # 42fd38 <_IO_stdin_used@@Base+0x2d38>
  410dec:	mov    esi,0x1
  410df1:	xor    eax,eax
  410df3:	call   405200 <__fprintf_chk@plt>
  410df8:	mov    rax,QWORD PTR [rbp+0xd8]
  410dff:	mov    rdi,QWORD PTR [rbp+0xd0]
  410e06:	lea    rdx,[rip+0x2661c]        # 437429 <_IO_stdin_used@@Base+0xa429>
  410e0d:	mov    esi,0x1
  410e12:	mov    rcx,QWORD PTR [rax+0x118]
  410e19:	xor    eax,eax
  410e1b:	call   405200 <__fprintf_chk@plt>
  410e20:	mov    rax,QWORD PTR [rbp+0xd8]
  410e27:	mov    rdi,QWORD PTR [rbp+0xd0]
  410e2e:	lea    rdx,[rip+0x26609]        # 43743e <_IO_stdin_used@@Base+0xa43e>
  410e35:	mov    esi,0x1
  410e3a:	mov    rcx,QWORD PTR [rax+0x110]
  410e41:	xor    eax,eax
  410e43:	call   405200 <__fprintf_chk@plt>
  410e48:	mov    rdi,QWORD PTR [rbp+0xd0]
  410e4f:	lea    rdx,[rip+0x26574]        # 4373ca <_IO_stdin_used@@Base+0xa3ca>
  410e56:	mov    esi,0x1
  410e5b:	xor    eax,eax
  410e5d:	call   405200 <__fprintf_chk@plt>
  410e62:	mov    rdi,QWORD PTR [rbp+0xd0]
  410e69:	lea    rdx,[rip+0x30818]        # 441688 <_IO_stdin_used@@Base+0x14688>
  410e70:	mov    esi,0x1
  410e75:	xor    eax,eax
  410e77:	call   405200 <__fprintf_chk@plt>
  410e7c:	lea    rsi,[rip+0x1dace]        # 42e951 <_IO_stdin_used@@Base+0x1951>
  410e83:	lea    rdx,[rip+0x30b60]        # 4419ea <_IO_stdin_used@@Base+0x149ea>
  410e8a:	mov    rdi,rbp
  410e8d:	call   4070a0 <__flatcc_fb_gen_c_includes@@Base>
  410e92:	mov    rax,QWORD PTR [rbp+0xe0]
  410e99:	mov    rdi,QWORD PTR [rbp+0xd0]
  410ea0:	mov    esi,DWORD PTR [rax+0xac]
  410ea6:	test   esi,esi
  410ea8:	je     410ec4 <__flatcc_fb_gen_c_verifier@@Base+0x134>
  410eaa:	lea    rdx,[rip+0x1ef9f]        # 42fe50 <_IO_stdin_used@@Base+0x2e50>
  410eb1:	mov    esi,0x1
  410eb6:	xor    eax,eax
  410eb8:	call   405200 <__fprintf_chk@plt>
  410ebd:	mov    rdi,QWORD PTR [rbp+0xd0]
  410ec4:	lea    rdx,[rip+0x34942]        # 44580d <_IO_stdin_used@@Base+0x1880d>
  410ecb:	xor    eax,eax
  410ecd:	mov    esi,0x1
  410ed2:	mov    r12,rsp
  410ed5:	lea    r13,[rip+0x307d4]        # 4416b0 <_IO_stdin_used@@Base+0x146b0>
  410edc:	call   405200 <__fprintf_chk@plt>
  410ee1:	xor    eax,eax
  410ee3:	mov    ecx,0x1d
  410ee8:	mov    rdi,rsp
  410eeb:	rep stos QWORD PTR es:[rdi],rax
  410eee:	mov    rax,QWORD PTR [rbp+0xd8]
  410ef5:	mov    rbx,QWORD PTR [rax+0x40]
  410ef9:	test   rbx,rbx
  410efc:	jne    410f08 <__flatcc_fb_gen_c_verifier@@Base+0x178>
  410efe:	jmp    410f3f <__flatcc_fb_gen_c_verifier@@Base+0x1af>
  410f00:	mov    rbx,QWORD PTR [rbx]
  410f03:	test   rbx,rbx
  410f06:	je     410f3f <__flatcc_fb_gen_c_verifier@@Base+0x1af>
  410f08:	cmp    WORD PTR [rbx+0x10],0x0
  410f0d:	jne    410f00 <__flatcc_fb_gen_c_verifier@@Base+0x170>
  410f0f:	mov    rdi,QWORD PTR [rbx+0x18]
  410f13:	mov    rsi,rbx
  410f16:	mov    rdx,r12
  410f19:	call   407300 <__flatcc_fb_scoped_symbol_name@@Base>
  410f1e:	mov    rdi,QWORD PTR [rbp+0xd0]
  410f25:	xor    eax,eax
  410f27:	mov    rcx,r12
  410f2a:	mov    rdx,r13
  410f2d:	mov    esi,0x1
  410f32:	call   405200 <__fprintf_chk@plt>
  410f37:	mov    rbx,QWORD PTR [rbx]
  410f3a:	test   rbx,rbx
  410f3d:	jne    410f08 <__flatcc_fb_gen_c_verifier@@Base+0x178>
  410f3f:	mov    rdi,QWORD PTR [rbp+0xd0]
  410f46:	lea    rdx,[rip+0x348c0]        # 44580d <_IO_stdin_used@@Base+0x1880d>
  410f4d:	xor    eax,eax
  410f4f:	mov    esi,0x1
  410f54:	lea    r13,[rbp+0xd0]
  410f5b:	call   405200 <__fprintf_chk@plt>
  410f60:	mov    rax,QWORD PTR [rbp+0xd8]
  410f67:	mov    rbx,QWORD PTR [rax+0x40]
  410f6b:	test   rbx,rbx
  410f6e:	jne    410f80 <__flatcc_fb_gen_c_verifier@@Base+0x1f0>
  410f70:	jmp    4110f2 <__flatcc_fb_gen_c_verifier@@Base+0x362>
  410f75:	nop    DWORD PTR [rax]
  410f78:	mov    rbx,QWORD PTR [rbx]
  410f7b:	test   rbx,rbx
  410f7e:	je     410f9a <__flatcc_fb_gen_c_verifier@@Base+0x20a>
  410f80:	cmp    WORD PTR [rbx+0x10],0x4
  410f85:	jne    410f78 <__flatcc_fb_gen_c_verifier@@Base+0x1e8>
  410f87:	mov    rsi,rbx
  410f8a:	mov    rdi,r13
  410f8d:	call   410b30 <__flatcc_fb_gen_c_builder@@Base+0xe10>
  410f92:	mov    rbx,QWORD PTR [rbx]
  410f95:	test   rbx,rbx
  410f98:	jne    410f80 <__flatcc_fb_gen_c_verifier@@Base+0x1f0>
  410f9a:	mov    rax,QWORD PTR [rbp+0xd8]
  410fa1:	mov    rbx,QWORD PTR [rax+0x40]
  410fa5:	test   rbx,rbx
  410fa8:	je     4110f2 <__flatcc_fb_gen_c_verifier@@Base+0x362>
  410fae:	xor    r13d,r13d
  410fb1:	jmp    410fc4 <__flatcc_fb_gen_c_verifier@@Base+0x234>
  410fb3:	nop    DWORD PTR [rax+rax*1+0x0]
  410fb8:	mov    rbx,QWORD PTR [rbx]
  410fbb:	test   rbx,rbx
  410fbe:	je     4110b7 <__flatcc_fb_gen_c_verifier@@Base+0x327>
  410fc4:	cmp    WORD PTR [rbx+0x10],0x1
  410fc9:	jne    410fb8 <__flatcc_fb_gen_c_verifier@@Base+0x228>
  410fcb:	mov    rax,r13
  410fce:	mov    ecx,0x1d
  410fd3:	mov    rdi,r12
  410fd6:	rep stos QWORD PTR es:[rdi],rax
  410fd9:	mov    rsi,rbx
  410fdc:	mov    rdx,r12
  410fdf:	mov    rdi,QWORD PTR [rbx+0x18]
  410fe3:	call   407300 <__flatcc_fb_scoped_symbol_name@@Base>
  410fe8:	movzx  eax,WORD PTR [rbx+0xb0]
  410fef:	sub    rsp,0x8
  410ff3:	mov    rdi,QWORD PTR [rbp+0xd0]
  410ffa:	mov    r9,QWORD PTR [rbx+0xb8]
  411001:	lea    rdx,[rip+0x306f0]        # 4416f8 <_IO_stdin_used@@Base+0x146f8>
  411008:	mov    r8,r12
  41100b:	mov    rcx,r12
  41100e:	mov    esi,0x1
  411013:	push   rax
  411014:	xor    eax,eax
  411016:	call   405200 <__fprintf_chk@plt>
  41101b:	movzx  eax,WORD PTR [rbx+0xb0]
  411022:	mov    rdi,QWORD PTR [rbp+0xd0]
  411029:	lea    rdx,[rip+0x30760]        # 441790 <_IO_stdin_used@@Base+0x14790>
  411030:	mov    r9,QWORD PTR [rbx+0xb8]
  411037:	mov    r8,r12
  41103a:	mov    rcx,r12
  41103d:	mov    esi,0x1
  411042:	mov    DWORD PTR [rsp],eax
  411045:	xor    eax,eax
  411047:	call   405200 <__fprintf_chk@plt>
  41104c:	movzx  eax,WORD PTR [rbx+0xb0]
  411053:	mov    rdi,QWORD PTR [rbp+0xd0]
  41105a:	lea    rdx,[rip+0x307d7]        # 441838 <_IO_stdin_used@@Base+0x14838>
  411061:	mov    r9,QWORD PTR [rbx+0xb8]
  411068:	mov    r8,rbp
  41106b:	mov    rcx,r12
  41106e:	mov    esi,0x1
  411073:	mov    DWORD PTR [rsp],eax
  411076:	xor    eax,eax
  411078:	call   405200 <__fprintf_chk@plt>
  41107d:	movzx  r9d,WORD PTR [rbx+0xb0]
  411085:	mov    r8,QWORD PTR [rbx+0xb8]
  41108c:	lea    rdx,[rip+0x3085d]        # 4418f0 <_IO_stdin_used@@Base+0x148f0>
  411093:	mov    rdi,QWORD PTR [rbp+0xd0]
  41109a:	xor    eax,eax
  41109c:	mov    rcx,r12
  41109f:	mov    esi,0x1
  4110a4:	call   405200 <__fprintf_chk@plt>
  4110a9:	mov    rbx,QWORD PTR [rbx]
  4110ac:	pop    rax
  4110ad:	pop    rdx
  4110ae:	test   rbx,rbx
  4110b1:	jne    410fc4 <__flatcc_fb_gen_c_verifier@@Base+0x234>
  4110b7:	mov    rax,QWORD PTR [rbp+0xd8]
  4110be:	mov    rbx,QWORD PTR [rax+0x40]
  4110c2:	test   rbx,rbx
  4110c5:	jne    4110d8 <__flatcc_fb_gen_c_verifier@@Base+0x348>
  4110c7:	jmp    4110f2 <__flatcc_fb_gen_c_verifier@@Base+0x362>
  4110c9:	nop    DWORD PTR [rax+0x0]
  4110d0:	mov    rbx,QWORD PTR [rbx]
  4110d3:	test   rbx,rbx
  4110d6:	je     4110f2 <__flatcc_fb_gen_c_verifier@@Base+0x362>
  4110d8:	cmp    WORD PTR [rbx+0x10],0x0
  4110dd:	jne    4110d0 <__flatcc_fb_gen_c_verifier@@Base+0x340>
  4110df:	mov    rsi,rbx
  4110e2:	mov    rdi,rbp
  4110e5:	call   410520 <__flatcc_fb_gen_c_builder@@Base+0x800>
  4110ea:	mov    rbx,QWORD PTR [rbx]
  4110ed:	test   rbx,rbx
  4110f0:	jne    4110d8 <__flatcc_fb_gen_c_verifier@@Base+0x348>
  4110f2:	mov    rax,QWORD PTR [rbp+0xe0]
  4110f9:	mov    rdi,QWORD PTR [rbp+0xd0]
  411100:	mov    ecx,DWORD PTR [rax+0xac]
  411106:	test   ecx,ecx
  411108:	je     411124 <__flatcc_fb_gen_c_verifier@@Base+0x394>
  41110a:	lea    rdx,[rip+0x24bef]        # 435d00 <_IO_stdin_used@@Base+0x8d00>
  411111:	mov    esi,0x1
  411116:	xor    eax,eax
  411118:	call   405200 <__fprintf_chk@plt>
  41111d:	mov    rdi,QWORD PTR [rbp+0xd0]
  411124:	mov    rax,QWORD PTR [rbp+0xd8]
  41112b:	lea    rdx,[rip+0x308c4]        # 4419f6 <_IO_stdin_used@@Base+0x149f6>
  411132:	mov    esi,0x1
  411137:	mov    rcx,QWORD PTR [rax+0x118]
  41113e:	xor    eax,eax
  411140:	call   405200 <__fprintf_chk@plt>
  411145:	xor    eax,eax
  411147:	mov    rdx,QWORD PTR [rsp+0xe8]
  41114f:	xor    rdx,QWORD PTR fs:0x28
  411158:	jne    411168 <__flatcc_fb_gen_c_verifier@@Base+0x3d8>
  41115a:	add    rsp,0xf8
  411161:	pop    rbx
  411162:	pop    rbp
  411163:	pop    r12
  411165:	pop    r13
  411167:	ret    
  411168:	call   4050d0 <__stack_chk_fail@plt>
  41116d:	nop    DWORD PTR [rax]
  411170:	mov    rdx,rdi
  411173:	lea    rdi,[rsi+0x8]
  411177:	lea    rsi,[rip+0x242]        # 4113c0 <__flatcc_fb_gen_c_verifier@@Base+0x630>
  41117e:	jmp    41b360 <fb_symbol_table_visit@@Base>
  411183:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  41118e:	xchg   ax,ax
  411190:	mov    rdx,rdi
  411193:	lea    rdi,[rsi+0x8]
  411197:	lea    rsi,[rip+0x132]        # 4112d0 <__flatcc_fb_gen_c_verifier@@Base+0x540>
  41119e:	jmp    41b360 <fb_symbol_table_visit@@Base>
  4111a3:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4111ae:	xchg   ax,ax
  4111b0:	push   rbp
  4111b1:	push   rbx
  4111b2:	movsxd rsi,esi
  4111b5:	lea    rcx,[rip+0x304]        # 4114c0 <__flatcc_fb_gen_c_verifier@@Base+0x730>
  4111bc:	mov    rbp,rsi
  4111bf:	mov    edx,0x10
  4111c4:	sub    rsp,0x8
  4111c8:	mov    rbx,rdi
  4111cb:	call   405080 <qsort@plt>
  4111d0:	test   ebp,ebp
  4111d2:	jle    4111f6 <__flatcc_fb_gen_c_verifier@@Base+0x466>
  4111d4:	mov    rdi,rbx
  4111d7:	xor    eax,eax
  4111d9:	nop    DWORD PTR [rax+0x0]
  4111e0:	mov    rdx,QWORD PTR [rdi]
  4111e3:	add    rdi,0x10
  4111e7:	mov    QWORD PTR [rdx+0xc8],rax
  4111ee:	add    rax,0x1
  4111f2:	cmp    ebp,eax
  4111f4:	jg     4111e0 <__flatcc_fb_gen_c_verifier@@Base+0x450>
  4111f6:	add    rsp,0x8
  4111fa:	pop    rbx
  4111fb:	pop    rbp
  4111fc:	ret    
  4111fd:	nop    DWORD PTR [rax]
  411200:	push   rbp
  411201:	push   rbx
  411202:	sub    rsp,0x8
  411206:	movsxd rbx,DWORD PTR [rdi+0x8]
  41120a:	mov    ebp,DWORD PTR [rsi+0x8]
  41120d:	mov    rdi,QWORD PTR [rdi]
  411210:	mov    rsi,QWORD PTR [rsi]
  411213:	movsxd rdx,ebp
  411216:	cmp    ebx,ebp
  411218:	cmovle rdx,rbx
  41121c:	sub    ebx,ebp
  41121e:	call   405130 <memcmp@plt>
  411223:	test   eax,eax
  411225:	cmove  eax,ebx
  411228:	add    rsp,0x8
  41122c:	pop    rbx
  41122d:	pop    rbp
  41122e:	ret    
  41122f:	nop
  411230:	movzx  eax,WORD PTR [rsi+0x10]
  411234:	sub    eax,0x3
  411237:	cmp    ax,0x1
  41123b:	jbe    411240 <__flatcc_fb_gen_c_verifier@@Base+0x4b0>
  41123d:	ret    
  41123e:	xchg   ax,ax
  411240:	push   rbp
  411241:	push   rbx
  411242:	mov    rbx,rsi
  411245:	mov    rbp,rdi
  411248:	sub    rsp,0x8
  41124c:	mov    rax,QWORD PTR [rdi+0x8]
  411250:	mov    rsi,QWORD PTR [rsi+0x20]
  411254:	lea    rdi,[rax+0x128]
  41125b:	call   41aba0 <ptr_set_find_item@@Base>
  411260:	test   rax,rax
  411263:	je     411287 <__flatcc_fb_gen_c_verifier@@Base+0x4f7>
  411265:	mov    rdx,QWORD PTR [rbx+0x8]
  411269:	mov    rax,QWORD PTR [rbp+0x10]
  41126d:	mov    rcx,QWORD PTR [rdx]
  411270:	mov    rdx,QWORD PTR [rdx+0x8]
  411274:	add    rax,0x20
  411278:	mov    QWORD PTR [rax-0x10],rbx
  41127c:	mov    QWORD PTR [rax-0x20],rcx
  411280:	mov    DWORD PTR [rax-0x18],edx
  411283:	mov    QWORD PTR [rbp+0x10],rax
  411287:	add    rsp,0x8
  41128b:	pop    rbx
  41128c:	pop    rbp
  41128d:	ret    
  41128e:	xchg   ax,ax
  411290:	movzx  eax,WORD PTR [rsi+0x10]
  411294:	sub    eax,0x3
  411297:	cmp    ax,0x1
  41129b:	jbe    4112a0 <__flatcc_fb_gen_c_verifier@@Base+0x510>
  41129d:	ret    
  41129e:	xchg   ax,ax
  4112a0:	push   rbx
  4112a1:	mov    rax,QWORD PTR [rdi+0x8]
  4112a5:	mov    rbx,rdi
  4112a8:	mov    rsi,QWORD PTR [rsi+0x20]
  4112ac:	lea    rdi,[rax+0x128]
  4112b3:	call   41aba0 <ptr_set_find_item@@Base>
  4112b8:	test   rax,rax
  4112bb:	je     4112c0 <__flatcc_fb_gen_c_verifier@@Base+0x530>
  4112bd:	add    DWORD PTR [rbx],0x1
  4112c0:	pop    rbx
  4112c1:	ret    
  4112c2:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4112cd:	nop    DWORD PTR [rax]
  4112d0:	cmp    WORD PTR [rsi+0x10],0x4
  4112d5:	jbe    4112e0 <__flatcc_fb_gen_c_verifier@@Base+0x550>
  4112d7:	ret    
  4112d8:	nop    DWORD PTR [rax+rax*1+0x0]
  4112e0:	push   rbp
  4112e1:	push   rbx
  4112e2:	mov    rbp,rsi
  4112e5:	mov    rbx,rdi
  4112e8:	sub    rsp,0x8
  4112ec:	mov    rax,QWORD PTR [rdi+0x48]
  4112f0:	mov    rsi,QWORD PTR [rsi+0x20]
  4112f4:	lea    rdi,[rax+0x128]
  4112fb:	call   41aba0 <ptr_set_find_item@@Base>
  411300:	test   rax,rax
  411303:	je     411361 <__flatcc_fb_gen_c_verifier@@Base+0x5d1>
  411305:	mov    eax,DWORD PTR [rbx]
  411307:	xor    edx,edx
  411309:	test   eax,eax
  41130b:	je     411335 <__flatcc_fb_gen_c_verifier@@Base+0x5a5>
  41130d:	mov    rax,QWORD PTR [rbp+0x18]
  411311:	xor    edx,edx
  411313:	mov    rax,QWORD PTR [rax]
  411316:	test   rax,rax
  411319:	je     411335 <__flatcc_fb_gen_c_verifier@@Base+0x5a5>
  41131b:	nop    DWORD PTR [rax+rax*1+0x0]
  411320:	mov    rcx,QWORD PTR [rax+0x8]
  411324:	mov    rax,QWORD PTR [rax]
  411327:	mov    rcx,QWORD PTR [rcx+0x8]
  41132b:	test   rax,rax
  41132e:	lea    rdx,[rdx+rcx*1+0x1]
  411333:	jne    411320 <__flatcc_fb_gen_c_verifier@@Base+0x590>
  411335:	mov    rcx,QWORD PTR [rbp+0x8]
  411339:	mov    rax,QWORD PTR [rbx+0x10]
  41133d:	add    rax,QWORD PTR [rcx+0x8]
  411341:	lea    rax,[rdx+rax*1+0x1]
  411346:	mov    QWORD PTR [rbx+0x10],rax
  41134a:	movzx  eax,WORD PTR [rbp+0x10]
  41134e:	cmp    ax,0x1
  411352:	jbe    411370 <__flatcc_fb_gen_c_verifier@@Base+0x5e0>
  411354:	sub    eax,0x3
  411357:	cmp    ax,0x1
  41135b:	ja     411361 <__flatcc_fb_gen_c_verifier@@Base+0x5d1>
  41135d:	add    DWORD PTR [rbx+0x8],0x1
  411361:	add    rsp,0x8
  411365:	pop    rbx
  411366:	pop    rbp
  411367:	ret    
  411368:	nop    DWORD PTR [rax+rax*1+0x0]
  411370:	add    DWORD PTR [rbx+0x4],0x1
  411374:	jmp    411361 <__flatcc_fb_gen_c_verifier@@Base+0x5d1>
  411376:	nop    WORD PTR cs:[rax+rax*1+0x0]
  411380:	push   rbx
  411381:	mov    rbx,rdi
  411384:	mov    rdi,QWORD PTR [rdi+0x18]
  411388:	test   rdi,rdi
  41138b:	je     411392 <__flatcc_fb_gen_c_verifier@@Base+0x602>
  41138d:	call   405040 <free@plt>
  411392:	mov    rdi,QWORD PTR [rbx+0x20]
  411396:	test   rdi,rdi
  411399:	je     4113a0 <__flatcc_fb_gen_c_verifier@@Base+0x610>
  41139b:	call   405040 <free@plt>
  4113a0:	mov    rdi,QWORD PTR [rbx+0x28]
  4113a4:	test   rdi,rdi
  4113a7:	je     4113ae <__flatcc_fb_gen_c_verifier@@Base+0x61e>
  4113a9:	call   405040 <free@plt>
  4113ae:	mov    rdi,rbx
  4113b1:	mov    ecx,0xa
  4113b6:	xor    eax,eax
  4113b8:	rep stos QWORD PTR es:[rdi],rax
  4113bb:	pop    rbx
  4113bc:	ret    
  4113bd:	nop    DWORD PTR [rax]
  4113c0:	cmp    WORD PTR [rsi+0x10],0x4
  4113c5:	jbe    4113d0 <__flatcc_fb_gen_c_verifier@@Base+0x640>
  4113c7:	ret    
  4113c8:	nop    DWORD PTR [rax+rax*1+0x0]
  4113d0:	push   r14
  4113d2:	push   r13
  4113d4:	mov    r13,rsi
  4113d7:	push   r12
  4113d9:	push   rbp
  4113da:	mov    r12,rdi
  4113dd:	push   rbx
  4113de:	mov    rax,QWORD PTR [rdi+0x48]
  4113e2:	mov    rsi,QWORD PTR [rsi+0x20]
  4113e6:	lea    rdi,[rax+0x128]
  4113ed:	call   41aba0 <ptr_set_find_item@@Base>
  4113f2:	test   rax,rax
  4113f5:	je     41149a <__flatcc_fb_gen_c_verifier@@Base+0x70a>
  4113fb:	mov    eax,DWORD PTR [r12]
  4113ff:	mov    r14,QWORD PTR [r12+0x40]
  411404:	test   eax,eax
  411406:	mov    rcx,r14
  411409:	je     411449 <__flatcc_fb_gen_c_verifier@@Base+0x6b9>
  41140b:	mov    rax,QWORD PTR [r13+0x18]
  41140f:	mov    rcx,r14
  411412:	mov    rbp,QWORD PTR [rax]
  411415:	test   rbp,rbp
  411418:	je     411449 <__flatcc_fb_gen_c_verifier@@Base+0x6b9>
  41141a:	nop    WORD PTR [rax+rax*1+0x0]
  411420:	mov    rax,QWORD PTR [rbp+0x8]
  411424:	mov    rdi,rcx
  411427:	movsxd rbx,DWORD PTR [rax+0x8]
  41142b:	mov    rsi,QWORD PTR [rax]
  41142e:	mov    rdx,rbx
  411431:	call   405170 <memcpy@plt>
  411436:	add    rbx,rax
  411439:	mov    BYTE PTR [rbx],0x2e
  41143c:	mov    rbp,QWORD PTR [rbp+0x0]
  411440:	lea    rcx,[rbx+0x1]
  411444:	test   rbp,rbp
  411447:	jne    411420 <__flatcc_fb_gen_c_verifier@@Base+0x690>
  411449:	mov    rax,QWORD PTR [r13+0x8]
  41144d:	mov    rdi,rcx
  411450:	movsxd rbx,DWORD PTR [rax+0x8]
  411454:	mov    rsi,QWORD PTR [rax]
  411457:	mov    rdx,rbx
  41145a:	call   405170 <memcpy@plt>
  41145f:	mov    rcx,rax
  411462:	add    rcx,rbx
  411465:	mov    BYTE PTR [rcx],0x0
  411468:	movzx  eax,WORD PTR [r13+0x10]
  41146d:	add    rcx,0x1
  411471:	mov    QWORD PTR [r12+0x40],rcx
  411476:	cmp    ax,0x1
  41147a:	jbe    4114a8 <__flatcc_fb_gen_c_verifier@@Base+0x718>
  41147c:	sub    eax,0x3
  41147f:	cmp    ax,0x1
  411483:	ja     41149a <__flatcc_fb_gen_c_verifier@@Base+0x70a>
  411485:	mov    rax,QWORD PTR [r12+0x38]
  41148a:	mov    QWORD PTR [rax],r13
  41148d:	mov    QWORD PTR [rax+0x8],r14
  411491:	add    rax,0x10
  411495:	mov    QWORD PTR [r12+0x38],rax
  41149a:	pop    rbx
  41149b:	pop    rbp
  41149c:	pop    r12
  41149e:	pop    r13
  4114a0:	pop    r14
  4114a2:	ret    
  4114a3:	nop    DWORD PTR [rax+rax*1+0x0]
  4114a8:	mov    rax,QWORD PTR [r12+0x30]
  4114ad:	mov    QWORD PTR [rax],r13
  4114b0:	mov    QWORD PTR [rax+0x8],r14
  4114b4:	add    rax,0x10
  4114b8:	mov    QWORD PTR [r12+0x30],rax
  4114bd:	jmp    41149a <__flatcc_fb_gen_c_verifier@@Base+0x70a>
  4114bf:	nop
  4114c0:	mov    rsi,QWORD PTR [rsi+0x8]
  4114c4:	mov    rdi,QWORD PTR [rdi+0x8]
  4114c8:	jmp    405150 <strcmp@plt>
  4114cd:	nop    DWORD PTR [rax]
  4114d0:	push   r14
  4114d2:	push   r13
  4114d4:	mov    r14,rsi
  4114d7:	push   r12
  4114d9:	push   rbp
  4114da:	mov    rbp,rdi
  4114dd:	push   rbx
  4114de:	sub    rsp,0xd0
  4114e5:	test   al,al
  4114e7:	mov    QWORD PTR [rsp+0x30],rdx
  4114ec:	mov    QWORD PTR [rsp+0x38],rcx
  4114f1:	mov    QWORD PTR [rsp+0x40],r8
  4114f6:	mov    QWORD PTR [rsp+0x48],r9
  4114fb:	je     41153c <__flatcc_fb_gen_c_verifier@@Base+0x7ac>
  4114fd:	vmovaps XMMWORD PTR [rsp+0x50],xmm0
  411503:	vmovaps XMMWORD PTR [rsp+0x60],xmm1
  411509:	vmovaps XMMWORD PTR [rsp+0x70],xmm2
  41150f:	vmovaps XMMWORD PTR [rsp+0x80],xmm3
  411518:	vmovaps XMMWORD PTR [rsp+0x90],xmm4
  411521:	vmovaps XMMWORD PTR [rsp+0xa0],xmm5
  41152a:	vmovaps XMMWORD PTR [rsp+0xb0],xmm6
  411533:	vmovaps XMMWORD PTR [rsp+0xc0],xmm7
  41153c:	mov    rax,QWORD PTR fs:0x28
  411545:	mov    QWORD PTR [rsp+0x18],rax
  41154a:	xor    eax,eax
  41154c:	cmp    BYTE PTR [rip+0x3fc0d],0x0        # 451160 <__bss_start@@Base+0x38>
  411553:	mov    rax,QWORD PTR [rbp+0xe0]
  41155a:	mov    r13d,DWORD PTR [rbp+0xf0]
  411561:	mov    edx,DWORD PTR [rax+0xd0]
  411567:	je     411668 <__flatcc_fb_gen_c_verifier@@Base+0x8d8>
  41156d:	cmp    BYTE PTR [r14],0x0
  411571:	je     411629 <__flatcc_fb_gen_c_verifier@@Base+0x899>
  411577:	imul   r13d,edx
  41157b:	cmp    r13d,0x40
  41157f:	jle    4115c8 <__flatcc_fb_gen_c_verifier@@Base+0x838>
  411581:	lea    r12,[rip+0x3fbd8]        # 451160 <__bss_start@@Base+0x38>
  411588:	mov    ebx,r13d
  41158b:	nop    DWORD PTR [rax+rax*1+0x0]
  411590:	mov    rdi,QWORD PTR [rbp+0xd0]
  411597:	lea    rdx,[rip+0x25c9b]        # 437239 <_IO_stdin_used@@Base+0xa239>
  41159e:	xor    eax,eax
  4115a0:	mov    r8,r12
  4115a3:	mov    ecx,0x40
  4115a8:	mov    esi,0x1
  4115ad:	sub    ebx,0x40
  4115b0:	call   405200 <__fprintf_chk@plt>
  4115b5:	cmp    ebx,0x40
  4115b8:	jg     411590 <__flatcc_fb_gen_c_verifier@@Base+0x800>
  4115ba:	lea    eax,[r13-0x41]
  4115be:	and    eax,0xffffffc0
  4115c1:	neg    eax
  4115c3:	lea    r13d,[r13+rax*1-0x40]
  4115c8:	mov    rdi,QWORD PTR [rbp+0xd0]
  4115cf:	lea    rdx,[rip+0x25c63]        # 437239 <_IO_stdin_used@@Base+0xa239>
  4115d6:	lea    r8,[rip+0x3fb83]        # 451160 <__bss_start@@Base+0x38>
  4115dd:	mov    ecx,r13d
  4115e0:	mov    esi,0x1
  4115e5:	xor    eax,eax
  4115e7:	call   405200 <__fprintf_chk@plt>
  4115ec:	lea    rax,[rsp+0x100]
  4115f4:	mov    rdi,QWORD PTR [rbp+0xd0]
  4115fb:	mov    rcx,rsp
  4115fe:	mov    rdx,r14
  411601:	mov    esi,0x1
  411606:	mov    DWORD PTR [rsp],0x10
  41160d:	mov    QWORD PTR [rsp+0x8],rax
  411612:	lea    rax,[rsp+0x20]
  411617:	mov    DWORD PTR [rsp+0x4],0x30
  41161f:	mov    QWORD PTR [rsp+0x10],rax
  411624:	call   405050 <__vfprintf_chk@plt>
  411629:	mov    rdi,QWORD PTR [rbp+0xd0]
  411630:	lea    rdx,[rip+0x341d6]        # 44580d <_IO_stdin_used@@Base+0x1880d>
  411637:	xor    eax,eax
  411639:	mov    esi,0x1
  41163e:	call   405200 <__fprintf_chk@plt>
  411643:	mov    rax,QWORD PTR [rsp+0x18]
  411648:	xor    rax,QWORD PTR fs:0x28
  411651:	jne    4116af <__flatcc_fb_gen_c_verifier@@Base+0x91f>
  411653:	add    rsp,0xd0
  41165a:	pop    rbx
  41165b:	pop    rbp
  41165c:	pop    r12
  41165e:	pop    r13
  411660:	pop    r14
  411662:	ret    
  411663:	nop    DWORD PTR [rax+rax*1+0x0]
  411668:	movabs rax,0x2020202020202020
  411672:	mov    QWORD PTR [rip+0x3fae7],rax        # 451160 <__bss_start@@Base+0x38>
  411679:	mov    QWORD PTR [rip+0x3fae8],rax        # 451168 <__bss_start@@Base+0x40>
  411680:	mov    QWORD PTR [rip+0x3fae9],rax        # 451170 <__bss_start@@Base+0x48>
  411687:	mov    QWORD PTR [rip+0x3faea],rax        # 451178 <__bss_start@@Base+0x50>
  41168e:	mov    QWORD PTR [rip+0x3faeb],rax        # 451180 <__bss_start@@Base+0x58>
  411695:	mov    QWORD PTR [rip+0x3faec],rax        # 451188 <__bss_start@@Base+0x60>
  41169c:	mov    QWORD PTR [rip+0x3faed],rax        # 451190 <__bss_start@@Base+0x68>
  4116a3:	mov    QWORD PTR [rip+0x3faee],rax        # 451198 <__bss_start@@Base+0x70>
  4116aa:	jmp    41156d <__flatcc_fb_gen_c_verifier@@Base+0x7dd>
  4116af:	call   4050d0 <__stack_chk_fail@plt>
  4116b4:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4116bf:	nop
  4116c0:	lea    rsi,[rip+0x303bc]        # 441a83 <_IO_stdin_used@@Base+0x14a83>
  4116c7:	xor    eax,eax
  4116c9:	jmp    4114d0 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  4116ce:	xchg   ax,ax
  4116d0:	jmp    4116c0 <__flatcc_fb_gen_c_verifier@@Base+0x930>
  4116d2:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4116dd:	nop    DWORD PTR [rax]
  4116e0:	lea    rsi,[rip+0x308c1]        # 441fa8 <_IO_stdin_used@@Base+0x14fa8>
  4116e7:	xor    eax,eax
  4116e9:	jmp    4114d0 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  4116ee:	xchg   ax,ax
  4116f0:	push   r15
  4116f2:	push   r14
  4116f4:	mov    r15,rdi
  4116f7:	push   r13
  4116f9:	push   r12
  4116fb:	mov    r13,rsi
  4116fe:	push   rbp
  4116ff:	push   rbx
  411700:	mov    ebx,ecx
  411702:	sub    ebx,edx
  411704:	mov    r12d,edx
  411707:	mov    r11d,ecx
  41170a:	lea    eax,[rbx+0x1]
  41170d:	sub    rsp,0x28
  411711:	mov    r14d,r8d
  411714:	mov    DWORD PTR [rsp+0x18],r9d
  411719:	mov    ebx,eax
  41171b:	shr    ebx,0x1f
  41171e:	add    ebx,eax
  411720:	sar    ebx,1
  411722:	add    ebx,edx
  411724:	movsxd rax,ebx
  411727:	shl    rax,0x5
  41172b:	mov    r10,rax
  41172e:	add    rax,QWORD PTR [rsi]
  411731:	mov    ebp,DWORD PTR [rax+0x8]
  411734:	cmp    r8d,ebp
  411737:	jg     4118b0 <__flatcc_fb_gen_c_verifier@@Base+0xb20>
  41173d:	movsxd rdx,r8d
  411740:	add    rdx,QWORD PTR [rax]
  411743:	sub    ebp,r8d
  411746:	cmp    ebp,0x8
  411749:	mov    rax,rdx
  41174c:	mov    QWORD PTR [rsp+0x8],rdx
  411751:	mov    edx,0x8
  411756:	cmovg  ebp,edx
  411759:	test   ebp,ebp
  41175b:	lea    edi,[rbp-0x1]
  41175e:	je     411a29 <__flatcc_fb_gen_c_verifier@@Base+0xc99>
  411764:	sub    edx,ebp
  411766:	movsxd rdi,edi
  411769:	xor    esi,esi
  41176b:	shl    edx,0x3
  41176e:	add    rdi,rax
  411771:	mov    eax,edx
  411773:	nop    DWORD PTR [rax+rax*1+0x0]
  411778:	movsx  rcx,BYTE PTR [rdi]
  41177c:	sub    rdi,0x1
  411780:	shlx   rcx,rcx,rax
  411785:	add    eax,0x8
  411788:	or     rsi,rcx
  41178b:	cmp    eax,0x40
  41178e:	jne    411778 <__flatcc_fb_gen_c_verifier@@Base+0x9e8>
  411790:	mov    rax,0xffffffffffffffff
  411797:	cmp    ebp,0x8
  41179a:	shlx   rdx,rax,rdx
  41179f:	jne    4118bf <__flatcc_fb_gen_c_verifier@@Base+0xb2f>
  4117a5:	mov    r8,QWORD PTR [rsp+0x8]
  4117aa:	mov    rdx,rsi
  4117ad:	lea    rsi,[rip+0x30834]        # 441fe8 <_IO_stdin_used@@Base+0x14fe8>
  4117b4:	xor    eax,eax
  4117b6:	mov    ecx,0x8
  4117bb:	mov    rdi,r15
  4117be:	mov    DWORD PTR [rsp+0x1c],r11d
  4117c3:	mov    QWORD PTR [rsp+0x10],r10
  4117c8:	call   4114d0 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  4117cd:	add    DWORD PTR [r15+0xf0],0x1
  4117d5:	cmp    r12d,ebx
  4117d8:	mov    r10,QWORD PTR [rsp+0x10]
  4117dd:	mov    r11d,DWORD PTR [rsp+0x1c]
  4117e2:	jne    411900 <__flatcc_fb_gen_c_verifier@@Base+0xb70>
  4117e8:	mov    rax,r10
  4117eb:	add    rax,QWORD PTR [r13+0x0]
  4117ef:	mov    rsi,QWORD PTR [r13+0x18]
  4117f3:	mov    r8d,ebp
  4117f6:	mov    rdi,r15
  4117f9:	mov    ecx,DWORD PTR [rax+0x18]
  4117fc:	mov    rdx,QWORD PTR [rax+0x10]
  411800:	call   QWORD PTR [r13+0x8]
  411804:	mov    eax,DWORD PTR [rsp+0x18]
  411808:	test   eax,eax
  41180a:	jle    411a3e <__flatcc_fb_gen_c_verifier@@Base+0xcae>
  411810:	lea    rsi,[rip+0x3027e]        # 441a95 <_IO_stdin_used@@Base+0x14a95>
  411817:	mov    edx,eax
  411819:	mov    rdi,r15
  41181c:	xor    eax,eax
  41181e:	call   4114d0 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  411823:	mov    eax,DWORD PTR [r15+0xf0]
  41182a:	test   eax,eax
  41182c:	je     411a88 <__flatcc_fb_gen_c_verifier@@Base+0xcf8>
  411832:	sub    eax,0x1
  411835:	lea    rsi,[rip+0x30275]        # 441ab1 <_IO_stdin_used@@Base+0x14ab1>
  41183c:	mov    rdi,r15
  41183f:	mov    DWORD PTR [r15+0xf0],eax
  411846:	xor    eax,eax
  411848:	call   4114d0 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  41184d:	mov    eax,DWORD PTR [r15+0xf0]
  411854:	test   eax,eax
  411856:	je     411ac6 <__flatcc_fb_gen_c_verifier@@Base+0xd36>
  41185c:	mov    rcx,QWORD PTR [rsp+0x8]
  411861:	sub    eax,0x1
  411864:	lea    rsi,[rip+0x30248]        # 441ab3 <_IO_stdin_used@@Base+0x14ab3>
  41186b:	mov    DWORD PTR [r15+0xf0],eax
  411872:	mov    edx,ebp
  411874:	xor    eax,eax
  411876:	mov    rdi,r15
  411879:	call   4114d0 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  41187e:	mov    eax,DWORD PTR [rsp+0x18]
  411882:	add    DWORD PTR [r15+0xf0],0x1
  41188a:	test   eax,eax
  41188c:	jle    411a32 <__flatcc_fb_gen_c_verifier@@Base+0xca2>
  411892:	lea    rsi,[rip+0x301fc]        # 441a95 <_IO_stdin_used@@Base+0x14a95>
  411899:	mov    edx,eax
  41189b:	mov    rdi,r15
  41189e:	xor    eax,eax
  4118a0:	call   4114d0 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  4118a5:	jmp    411973 <__flatcc_fb_gen_c_verifier@@Base+0xbe3>
  4118aa:	nop    WORD PTR [rax+rax*1+0x0]
  4118b0:	xor    edx,edx
  4118b2:	xor    esi,esi
  4118b4:	xor    ebp,ebp
  4118b6:	mov    QWORD PTR [rsp+0x8],0x0
  4118bf:	mov    r9,QWORD PTR [rsp+0x8]
  4118c4:	mov    rcx,rsi
  4118c7:	lea    rsi,[rip+0x3073a]        # 442008 <_IO_stdin_used@@Base+0x15008>
  4118ce:	xor    eax,eax
  4118d0:	mov    r8d,ebp
  4118d3:	mov    rdi,r15
  4118d6:	mov    DWORD PTR [rsp+0x1c],r11d
  4118db:	mov    QWORD PTR [rsp+0x10],r10
  4118e0:	call   4114d0 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  4118e5:	add    DWORD PTR [r15+0xf0],0x1
  4118ed:	cmp    r12d,ebx
  4118f0:	mov    r11d,DWORD PTR [rsp+0x1c]
  4118f5:	mov    r10,QWORD PTR [rsp+0x10]
  4118fa:	je     4117e8 <__flatcc_fb_gen_c_verifier@@Base+0xa58>
  411900:	cmp    r11d,ebx
  411903:	je     4119b8 <__flatcc_fb_gen_c_verifier@@Base+0xc28>
  411909:	mov    r9d,DWORD PTR [rsp+0x18]
  41190e:	mov    r8d,r14d
  411911:	mov    ecx,r11d
  411914:	mov    edx,ebx
  411916:	mov    rsi,r13
  411919:	mov    rdi,r15
  41191c:	call   4116f0 <__flatcc_fb_gen_c_verifier@@Base+0x960>
  411921:	mov    eax,DWORD PTR [r15+0xf0]
  411928:	test   eax,eax
  41192a:	je     411a4a <__flatcc_fb_gen_c_verifier@@Base+0xcba>
  411930:	mov    rcx,QWORD PTR [rsp+0x8]
  411935:	sub    eax,0x1
  411938:	lea    rsi,[rip+0x30174]        # 441ab3 <_IO_stdin_used@@Base+0x14ab3>
  41193f:	mov    DWORD PTR [r15+0xf0],eax
  411946:	mov    edx,ebp
  411948:	mov    rdi,r15
  41194b:	xor    eax,eax
  41194d:	call   4114d0 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  411952:	add    DWORD PTR [r15+0xf0],0x1
  41195a:	mov    r9d,DWORD PTR [rsp+0x18]
  41195f:	lea    ecx,[rbx-0x1]
  411962:	mov    r8d,r14d
  411965:	mov    edx,r12d
  411968:	mov    rsi,r13
  41196b:	mov    rdi,r15
  41196e:	call   4116f0 <__flatcc_fb_gen_c_verifier@@Base+0x960>
  411973:	mov    eax,DWORD PTR [r15+0xf0]
  41197a:	test   eax,eax
  41197c:	je     411a69 <__flatcc_fb_gen_c_verifier@@Base+0xcd9>
  411982:	sub    eax,0x1
  411985:	mov    rcx,QWORD PTR [rsp+0x8]
  41198a:	mov    edx,ebp
  41198c:	mov    DWORD PTR [r15+0xf0],eax
  411993:	add    rsp,0x28
  411997:	mov    rdi,r15
  41199a:	pop    rbx
  41199b:	pop    rbp
  41199c:	pop    r12
  41199e:	pop    r13
  4119a0:	pop    r14
  4119a2:	pop    r15
  4119a4:	lea    rsi,[rip+0x3011e]        # 441ac9 <_IO_stdin_used@@Base+0x14ac9>
  4119ab:	xor    eax,eax
  4119ad:	jmp    4114d0 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  4119b2:	nop    WORD PTR [rax+rax*1+0x0]
  4119b8:	mov    rax,r10
  4119bb:	add    rax,QWORD PTR [r13+0x0]
  4119bf:	mov    rsi,QWORD PTR [r13+0x18]
  4119c3:	mov    r8d,ebp
  4119c6:	mov    rdi,r15
  4119c9:	mov    ecx,DWORD PTR [rax+0x18]
  4119cc:	mov    rdx,QWORD PTR [rax+0x10]
  4119d0:	call   QWORD PTR [r13+0x8]
  4119d4:	mov    eax,DWORD PTR [rsp+0x18]
  4119d8:	test   eax,eax
  4119da:	jle    411a20 <__flatcc_fb_gen_c_verifier@@Base+0xc90>
  4119dc:	lea    rsi,[rip+0x300b2]        # 441a95 <_IO_stdin_used@@Base+0x14a95>
  4119e3:	mov    edx,eax
  4119e5:	mov    rdi,r15
  4119e8:	xor    eax,eax
  4119ea:	call   4114d0 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  4119ef:	mov    eax,DWORD PTR [r15+0xf0]
  4119f6:	test   eax,eax
  4119f8:	je     411aa7 <__flatcc_fb_gen_c_verifier@@Base+0xd17>
  4119fe:	sub    eax,0x1
  411a01:	lea    rsi,[rip+0x300a9]        # 441ab1 <_IO_stdin_used@@Base+0x14ab1>
  411a08:	mov    rdi,r15
  411a0b:	mov    DWORD PTR [r15+0xf0],eax
  411a12:	xor    eax,eax
  411a14:	call   4114d0 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  411a19:	jmp    411921 <__flatcc_fb_gen_c_verifier@@Base+0xb91>
  411a1e:	xchg   ax,ax
  411a20:	mov    rdi,r15
  411a23:	call   QWORD PTR [r13+0x10]
  411a27:	jmp    4119ef <__flatcc_fb_gen_c_verifier@@Base+0xc5f>
  411a29:	xor    edx,edx
  411a2b:	xor    esi,esi
  411a2d:	jmp    4118bf <__flatcc_fb_gen_c_verifier@@Base+0xb2f>
  411a32:	mov    rdi,r15
  411a35:	call   QWORD PTR [r13+0x10]
  411a39:	jmp    411973 <__flatcc_fb_gen_c_verifier@@Base+0xbe3>
  411a3e:	mov    rdi,r15
  411a41:	call   QWORD PTR [r13+0x10]
  411a45:	jmp    411823 <__flatcc_fb_gen_c_verifier@@Base+0xa93>
  411a4a:	lea    rcx,[rip+0x3270f]        # 444160 <_IO_stdin_used@@Base+0x17160>
  411a51:	lea    rsi,[rip+0x305e0]        # 442038 <_IO_stdin_used@@Base+0x15038>
  411a58:	lea    rdi,[rip+0x30046]        # 441aa5 <_IO_stdin_used@@Base+0x14aa5>
  411a5f:	mov    edx,0x38b
  411a64:	call   405100 <__assert_fail@plt>
  411a69:	lea    rcx,[rip+0x326f0]        # 444160 <_IO_stdin_used@@Base+0x17160>
  411a70:	lea    rsi,[rip+0x305c1]        # 442038 <_IO_stdin_used@@Base+0x15038>
  411a77:	lea    rdi,[rip+0x30027]        # 441aa5 <_IO_stdin_used@@Base+0x14aa5>
  411a7e:	mov    edx,0x38e
  411a83:	call   405100 <__assert_fail@plt>
  411a88:	lea    rcx,[rip+0x326d1]        # 444160 <_IO_stdin_used@@Base+0x17160>
  411a8f:	lea    rsi,[rip+0x305a2]        # 442038 <_IO_stdin_used@@Base+0x15038>
  411a96:	lea    rdi,[rip+0x30008]        # 441aa5 <_IO_stdin_used@@Base+0x14aa5>
  411a9d:	mov    edx,0x378
  411aa2:	call   405100 <__assert_fail@plt>
  411aa7:	lea    rcx,[rip+0x326b2]        # 444160 <_IO_stdin_used@@Base+0x17160>
  411aae:	lea    rsi,[rip+0x30583]        # 442038 <_IO_stdin_used@@Base+0x15038>
  411ab5:	lea    rdi,[rip+0x2ffe9]        # 441aa5 <_IO_stdin_used@@Base+0x14aa5>
  411abc:	mov    edx,0x387
  411ac1:	call   405100 <__assert_fail@plt>
  411ac6:	lea    rcx,[rip+0x32693]        # 444160 <_IO_stdin_used@@Base+0x17160>
  411acd:	lea    rsi,[rip+0x30564]        # 442038 <_IO_stdin_used@@Base+0x15038>
  411ad4:	lea    rdi,[rip+0x2ffca]        # 441aa5 <_IO_stdin_used@@Base+0x14aa5>
  411adb:	mov    edx,0x379
  411ae0:	call   405100 <__assert_fail@plt>
  411ae5:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  411af0:	push   r15
  411af2:	push   r14
  411af4:	push   r13
  411af6:	push   r12
  411af8:	push   rbp
  411af9:	push   rbx
  411afa:	sub    rsp,0x38
  411afe:	mov    rax,QWORD PTR [rsi]
  411b01:	mov    rbx,rax
  411b04:	mov    QWORD PTR [rsp+0x18],rax
  411b09:	movsxd rax,edx
  411b0c:	shl    rax,0x5
  411b10:	add    rax,rbx
  411b13:	mov    r14d,DWORD PTR [rax+0x8]
  411b17:	mov    QWORD PTR [rsp+0x20],rax
  411b1c:	lea    eax,[r8+0x7]
  411b20:	mov    DWORD PTR [rsp+0x28],eax
  411b24:	cmp    eax,r14d
  411b27:	jge    411f00 <__flatcc_fb_gen_c_verifier@@Base+0x1170>
  411b2d:	mov    eax,r14d
  411b30:	sub    eax,r8d
  411b33:	cmp    eax,0x8
  411b36:	je     411f00 <__flatcc_fb_gen_c_verifier@@Base+0x1170>
  411b3c:	mov    eax,ecx
  411b3e:	mov    ebx,r8d
  411b41:	mov    DWORD PTR [rsp+0xc],ecx
  411b45:	sub    eax,edx
  411b47:	mov    r15d,edx
  411b4a:	mov    QWORD PTR [rsp+0x10],rsi
  411b4f:	mov    r12d,eax
  411b52:	mov    QWORD PTR [rsp],rdi
  411b56:	shr    r12d,0x1f
  411b5a:	add    r12d,eax
  411b5d:	sar    r12d,1
  411b60:	add    r12d,edx
  411b63:	cmp    edx,r12d
  411b66:	jge    411c7c <__flatcc_fb_gen_c_verifier@@Base+0xeec>
  411b6c:	movsxd r10,r12d
  411b6f:	movsxd rax,ebx
  411b72:	mov    ebp,r12d
  411b75:	shl    r10,0x5
  411b79:	add    r10,QWORD PTR [rsp+0x18]
  411b7e:	mov    DWORD PTR [rsp+0x2c],r12d
  411b83:	xor    r9d,r9d
  411b86:	xor    r8d,r8d
  411b89:	xor    edi,edi
  411b8b:	mov    ecx,0x8
  411b90:	mov    r12,rax
  411b93:	nop    DWORD PTR [rax+rax*1+0x0]
  411b98:	mov    eax,DWORD PTR [r10-0x18]
  411b9c:	cmp    ebx,eax
  411b9e:	jg     411c01 <__flatcc_fb_gen_c_verifier@@Base+0xe71>
  411ba0:	sub    eax,ebx
  411ba2:	cmp    eax,0x8
  411ba5:	cmovg  eax,ecx
  411ba8:	test   eax,eax
  411baa:	mov    r8d,eax
  411bad:	lea    esi,[rax-0x1]
  411bb0:	je     41207e <__flatcc_fb_gen_c_verifier@@Base+0x12ee>
  411bb6:	movsxd rsi,esi
  411bb9:	mov    eax,ecx
  411bbb:	xor    edi,edi
  411bbd:	add    rsi,r12
  411bc0:	add    rsi,QWORD PTR [r10-0x20]
  411bc4:	sub    eax,r8d
  411bc7:	shl    eax,0x3
  411bca:	nop    WORD PTR [rax+rax*1+0x0]
  411bd0:	movsx  rdx,BYTE PTR [rsi]
  411bd4:	sub    rsi,0x1
  411bd8:	shlx   rdx,rdx,rax
  411bdd:	add    eax,0x8
  411be0:	or     rdi,rdx
  411be3:	cmp    eax,0x40
  411be6:	jne    411bd0 <__flatcc_fb_gen_c_verifier@@Base+0xe40>
  411be8:	mov    eax,ecx
  411bea:	sub    eax,r8d
  411bed:	mov    r8d,eax
  411bf0:	mov    eax,0x1
  411bf5:	shl    r8d,0x3
  411bf9:	shlx   r8,rax,r8
  411bfe:	neg    r8
  411c01:	mov    r11d,DWORD PTR [r10+0x8]
  411c05:	mov    r13,QWORD PTR [r10]
  411c08:	cmp    ebx,r11d
  411c0b:	jg     411c58 <__flatcc_fb_gen_c_verifier@@Base+0xec8>
  411c0d:	mov    eax,r11d
  411c10:	sub    eax,ebx
  411c12:	cmp    eax,0x8
  411c15:	cmovg  eax,ecx
  411c18:	test   eax,eax
  411c1a:	lea    esi,[rax-0x1]
  411c1d:	je     412085 <__flatcc_fb_gen_c_verifier@@Base+0x12f5>
  411c23:	mov    edx,ecx
  411c25:	movsxd rsi,esi
  411c28:	xor    r9d,r9d
  411c2b:	sub    edx,eax
  411c2d:	add    rsi,r12
  411c30:	mov    eax,edx
  411c32:	add    rsi,r13
  411c35:	shl    eax,0x3
  411c38:	nop    DWORD PTR [rax+rax*1+0x0]
  411c40:	movsx  rdx,BYTE PTR [rsi]
  411c44:	sub    rsi,0x1
  411c48:	shlx   rdx,rdx,rax
  411c4d:	add    eax,0x8
  411c50:	or     r9,rdx
  411c53:	cmp    eax,0x40
  411c56:	jne    411c40 <__flatcc_fb_gen_c_verifier@@Base+0xeb0>
  411c58:	mov    rax,rdi
  411c5b:	xor    rax,r9
  411c5e:	test   rax,r8
  411c61:	jne    411fb4 <__flatcc_fb_gen_c_verifier@@Base+0x1224>
  411c67:	sub    ebp,0x1
  411c6a:	sub    r10,0x20
  411c6e:	cmp    r15d,ebp
  411c71:	jne    411b98 <__flatcc_fb_gen_c_verifier@@Base+0xe08>
  411c77:	mov    r12d,DWORD PTR [rsp+0x2c]
  411c7c:	cmp    DWORD PTR [rsp+0xc],r12d
  411c81:	jle    411d84 <__flatcc_fb_gen_c_verifier@@Base+0xff4>
  411c87:	movsxd r8,r12d
  411c8a:	mov    r13d,DWORD PTR [rsp+0xc]
  411c8f:	xor    edi,edi
  411c91:	shl    r8,0x5
  411c95:	add    r8,QWORD PTR [rsp+0x18]
  411c9a:	xor    r11d,r11d
  411c9d:	xor    esi,esi
  411c9f:	movsxd r10,ebx
  411ca2:	mov    r9d,0x8
  411ca8:	mov    ebp,0x1
  411cad:	nop    DWORD PTR [rax]
  411cb0:	mov    eax,DWORD PTR [r8+0x8]
  411cb4:	cmp    ebx,eax
  411cb6:	jg     411d15 <__flatcc_fb_gen_c_verifier@@Base+0xf85>
  411cb8:	sub    eax,ebx
  411cba:	cmp    eax,0x8
  411cbd:	cmovg  eax,r9d
  411cc1:	mov    r11d,eax
  411cc4:	lea    eax,[rax-0x1]
  411cc7:	test   r11d,r11d
  411cca:	je     4121d3 <__flatcc_fb_gen_c_verifier@@Base+0x1443>
  411cd0:	movsxd rcx,eax
  411cd3:	mov    eax,r9d
  411cd6:	xor    esi,esi
  411cd8:	add    rcx,r10
  411cdb:	add    rcx,QWORD PTR [r8]
  411cde:	sub    eax,r11d
  411ce1:	shl    eax,0x3
  411ce4:	nop    DWORD PTR [rax+0x0]
  411ce8:	movsx  rdx,BYTE PTR [rcx]
  411cec:	sub    rcx,0x1
  411cf0:	shlx   rdx,rdx,rax
  411cf5:	add    eax,0x8
  411cf8:	or     rsi,rdx
  411cfb:	cmp    eax,0x40
  411cfe:	jne    411ce8 <__flatcc_fb_gen_c_verifier@@Base+0xf58>
  411d00:	mov    eax,r9d
  411d03:	sub    eax,r11d
  411d06:	mov    r11d,eax
  411d09:	shl    r11d,0x3
  411d0d:	shlx   r11,rbp,r11
  411d12:	neg    r11
  411d15:	mov    eax,DWORD PTR [r8+0x28]
  411d19:	cmp    ebx,eax
  411d1b:	jg     411d68 <__flatcc_fb_gen_c_verifier@@Base+0xfd8>
  411d1d:	sub    eax,ebx
  411d1f:	cmp    eax,0x8
  411d22:	cmovg  eax,r9d
  411d26:	test   eax,eax
  411d28:	lea    edx,[rax-0x1]
  411d2b:	je     4121cc <__flatcc_fb_gen_c_verifier@@Base+0x143c>
  411d31:	movsxd rcx,edx
  411d34:	mov    edi,r9d
  411d37:	add    rcx,r10
  411d3a:	add    rcx,QWORD PTR [r8+0x20]
  411d3e:	sub    edi,eax
  411d40:	mov    eax,edi
  411d42:	xor    edi,edi
  411d44:	shl    eax,0x3
  411d47:	nop    WORD PTR [rax+rax*1+0x0]
  411d50:	movsx  rdx,BYTE PTR [rcx]
  411d54:	sub    rcx,0x1
  411d58:	shlx   rdx,rdx,rax
  411d5d:	add    eax,0x8
  411d60:	or     rdi,rdx
  411d63:	cmp    eax,0x40
  411d66:	jne    411d50 <__flatcc_fb_gen_c_verifier@@Base+0xfc0>
  411d68:	mov    rax,rsi
  411d6b:	xor    rax,rdi
  411d6e:	test   rax,r11
  411d71:	jne    411d84 <__flatcc_fb_gen_c_verifier@@Base+0xff4>
  411d73:	add    r12d,0x1
  411d77:	add    r8,0x20
  411d7b:	cmp    r13d,r12d
  411d7e:	jne    411cb0 <__flatcc_fb_gen_c_verifier@@Base+0xf20>
  411d84:	lea    r13d,[r12+0x1]
  411d89:	cmp    r15d,r13d
  411d8c:	jge    41237c <__flatcc_fb_gen_c_verifier@@Base+0x15ec>
  411d92:	mov    rax,QWORD PTR [rsp+0x20]
  411d97:	mov    ebp,r15d
  411d9a:	mov    edx,DWORD PTR [rsp+0x28]
  411d9e:	jmp    411da4 <__flatcc_fb_gen_c_verifier@@Base+0x1014>
  411da0:	mov    r14d,DWORD PTR [rax+0x8]
  411da4:	cmp    edx,r14d
  411da7:	jge    411db7 <__flatcc_fb_gen_c_verifier@@Base+0x1027>
  411da9:	mov    ecx,r14d
  411dac:	sub    ecx,ebx
  411dae:	cmp    ecx,0x8
  411db1:	jg     4120e5 <__flatcc_fb_gen_c_verifier@@Base+0x1355>
  411db7:	add    ebp,0x1
  411dba:	add    rax,0x20
  411dbe:	cmp    ebp,r13d
  411dc1:	jne    411da0 <__flatcc_fb_gen_c_verifier@@Base+0x1010>
  411dc3:	lea    r14,[rip+0x33a44]        # 44580e <_IO_stdin_used@@Base+0x1880e>
  411dca:	mov    DWORD PTR [rsp+0x28],ebp
  411dce:	mov    DWORD PTR [rsp+0x18],0x0
  411dd6:	cmp    ebp,r15d
  411dd9:	setg   dl
  411ddc:	cmp    DWORD PTR [rsp+0xc],r13d
  411de1:	setge  al
  411de4:	and    al,dl
  411de6:	je     411f47 <__flatcc_fb_gen_c_verifier@@Base+0x11b7>
  411dec:	mov    rdi,QWORD PTR [rsp+0x10]
  411df1:	mov    ecx,DWORD PTR [rdi+0x28]
  411df4:	lea    r12d,[rcx+0x1]
  411df8:	mov    DWORD PTR [rsp+0x20],ecx
  411dfc:	mov    DWORD PTR [rdi+0x28],r12d
  411e00:	mov    rsi,QWORD PTR [rsp+0x10]
  411e05:	mov    rdi,QWORD PTR [rsp]
  411e09:	lea    ecx,[rbp-0x1]
  411e0c:	mov    r9d,r12d
  411e0f:	mov    r8d,ebx
  411e12:	mov    edx,r15d
  411e15:	mov    BYTE PTR [rsp+0x20],al
  411e19:	call   4116f0 <__flatcc_fb_gen_c_verifier@@Base+0x960>
  411e1e:	movzx  eax,BYTE PTR [rsp+0x20]
  411e23:	test   al,al
  411e25:	je     411f50 <__flatcc_fb_gen_c_verifier@@Base+0x11c0>
  411e2b:	mov    r15,QWORD PTR [rsp]
  411e2f:	lea    rsi,[rip+0x2fd36]        # 441b6c <_IO_stdin_used@@Base+0x14b6c>
  411e36:	xor    eax,eax
  411e38:	mov    edx,r12d
  411e3b:	mov    rdi,r15
  411e3e:	call   4114d0 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  411e43:	mov    eax,DWORD PTR [r15+0xf0]
  411e4a:	lea    rsi,[rip+0x2fd31]        # 441b82 <_IO_stdin_used@@Base+0x14b82>
  411e51:	mov    rdi,r15
  411e54:	mov    edx,r12d
  411e57:	mov    DWORD PTR [r15+0xf0],0x0
  411e62:	mov    DWORD PTR [r15+0xf8],eax
  411e69:	xor    eax,eax
  411e6b:	call   4114d0 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  411e70:	mov    eax,DWORD PTR [r15+0xf8]
  411e77:	mov    ecx,DWORD PTR [rsp+0xc]
  411e7b:	mov    r8d,ebx
  411e7e:	mov    rsi,QWORD PTR [rsp+0x10]
  411e83:	mov    rdi,r15
  411e86:	mov    edx,r13d
  411e89:	mov    DWORD PTR [r15+0xf0],eax
  411e90:	call   411af0 <__flatcc_fb_gen_c_verifier@@Base+0xd60>
  411e95:	mov    eax,DWORD PTR [r15+0xf0]
  411e9c:	lea    rsi,[rip+0x2fcdc]        # 441b7f <_IO_stdin_used@@Base+0x14b7f>
  411ea3:	mov    rdi,r15
  411ea6:	mov    edx,r12d
  411ea9:	mov    DWORD PTR [r15+0xf0],0x0
  411eb4:	mov    DWORD PTR [r15+0xf8],eax
  411ebb:	xor    eax,eax
  411ebd:	call   4114d0 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  411ec2:	mov    eax,DWORD PTR [r15+0xf8]
  411ec9:	lea    rsi,[rip+0x2fcbd]        # 441b8d <_IO_stdin_used@@Base+0x14b8d>
  411ed0:	mov    rdi,r15
  411ed3:	mov    DWORD PTR [r15+0xf0],eax
  411eda:	xor    eax,eax
  411edc:	call   4114d0 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  411ee1:	cmp    r13d,DWORD PTR [rsp+0x28]
  411ee6:	jg     411f6f <__flatcc_fb_gen_c_verifier@@Base+0x11df>
  411eec:	add    rsp,0x38
  411ef0:	pop    rbx
  411ef1:	pop    rbp
  411ef2:	pop    r12
  411ef4:	pop    r13
  411ef6:	pop    r14
  411ef8:	pop    r15
  411efa:	ret    
  411efb:	nop    DWORD PTR [rax+rax*1+0x0]
  411f00:	cmp    edx,ecx
  411f02:	je     411f31 <__flatcc_fb_gen_c_verifier@@Base+0x11a1>
  411f04:	lea    eax,[rdx+0x1]
  411f07:	cmp    ecx,eax
  411f09:	jne    411b3c <__flatcc_fb_gen_c_verifier@@Base+0xdac>
  411f0f:	mov    rbx,QWORD PTR [rsp+0x18]
  411f14:	movsxd rax,ecx
  411f17:	shl    rax,0x5
  411f1b:	mov    eax,DWORD PTR [rbx+rax*1+0x8]
  411f1f:	cmp    DWORD PTR [rsp+0x28],eax
  411f23:	jge    411f31 <__flatcc_fb_gen_c_verifier@@Base+0x11a1>
  411f25:	sub    eax,r8d
  411f28:	cmp    eax,0x8
  411f2b:	jne    411b3c <__flatcc_fb_gen_c_verifier@@Base+0xdac>
  411f31:	add    rsp,0x38
  411f35:	xor    r9d,r9d
  411f38:	pop    rbx
  411f39:	pop    rbp
  411f3a:	pop    r12
  411f3c:	pop    r13
  411f3e:	pop    r14
  411f40:	pop    r15
  411f42:	jmp    4116f0 <__flatcc_fb_gen_c_verifier@@Base+0x960>
  411f47:	cmp    ebp,r15d
  411f4a:	jg     4123d3 <__flatcc_fb_gen_c_verifier@@Base+0x1643>
  411f50:	cmp    DWORD PTR [rsp+0xc],r13d
  411f55:	jge    412397 <__flatcc_fb_gen_c_verifier@@Base+0x1607>
  411f5b:	cmp    ebp,r15d
  411f5e:	jle    412352 <__flatcc_fb_gen_c_verifier@@Base+0x15c2>
  411f64:	cmp    r13d,DWORD PTR [rsp+0x28]
  411f69:	jle    411eec <__flatcc_fb_gen_c_verifier@@Base+0x115c>
  411f6f:	mov    rax,QWORD PTR [rsp]
  411f73:	mov    eax,DWORD PTR [rax+0xf0]
  411f79:	test   eax,eax
  411f7b:	je     412419 <__flatcc_fb_gen_c_verifier@@Base+0x1689>
  411f81:	mov    rbx,QWORD PTR [rsp]
  411f85:	mov    edx,DWORD PTR [rsp+0x18]
  411f89:	sub    eax,0x1
  411f8c:	lea    rsi,[rip+0x2fc03]        # 441b96 <_IO_stdin_used@@Base+0x14b96>
  411f93:	mov    rcx,r14
  411f96:	mov    DWORD PTR [rbx+0xf0],eax
  411f9c:	add    rsp,0x38
  411fa0:	mov    rdi,rbx
  411fa3:	xor    eax,eax
  411fa5:	pop    rbx
  411fa6:	pop    rbp
  411fa7:	pop    r12
  411fa9:	pop    r13
  411fab:	pop    r14
  411fad:	pop    r15
  411faf:	jmp    4114d0 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  411fb4:	cmp    ebx,r11d
  411fb7:	jle    41208d <__flatcc_fb_gen_c_verifier@@Base+0x12fd>
  411fbd:	xor    edx,edx
  411fbf:	xor    r13d,r13d
  411fc2:	xor    r12d,r12d
  411fc5:	mov    r14,QWORD PTR [rsp]
  411fc9:	lea    rsi,[rip+0x300d8]        # 4420a8 <_IO_stdin_used@@Base+0x150a8>
  411fd0:	xor    eax,eax
  411fd2:	mov    r8,r13
  411fd5:	mov    ecx,r12d
  411fd8:	mov    rdi,r14
  411fdb:	call   4114d0 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  411fe0:	add    DWORD PTR [r14+0xf0],0x1
  411fe8:	mov    rsi,QWORD PTR [rsp+0x10]
  411fed:	lea    ecx,[rbp-0x1]
  411ff0:	mov    r8d,ebx
  411ff3:	mov    edx,r15d
  411ff6:	mov    rdi,r14
  411ff9:	call   411af0 <__flatcc_fb_gen_c_verifier@@Base+0xd60>
  411ffe:	mov    eax,DWORD PTR [r14+0xf0]
  412005:	test   eax,eax
  412007:	je     412438 <__flatcc_fb_gen_c_verifier@@Base+0x16a8>
  41200d:	mov    r14,QWORD PTR [rsp]
  412011:	sub    eax,0x1
  412014:	lea    rsi,[rip+0x2fabd]        # 441ad8 <_IO_stdin_used@@Base+0x14ad8>
  41201b:	mov    rcx,r13
  41201e:	mov    edx,r12d
  412021:	mov    rdi,r14
  412024:	mov    DWORD PTR [r14+0xf0],eax
  41202b:	xor    eax,eax
  41202d:	call   4114d0 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  412032:	add    DWORD PTR [r14+0xf0],0x1
  41203a:	mov    ecx,DWORD PTR [rsp+0xc]
  41203e:	mov    rdi,r14
  412041:	mov    rsi,QWORD PTR [rsp+0x10]
  412046:	mov    r8d,ebx
  412049:	mov    edx,ebp
  41204b:	call   411af0 <__flatcc_fb_gen_c_verifier@@Base+0xd60>
  412050:	mov    eax,DWORD PTR [r14+0xf0]
  412057:	test   eax,eax
  412059:	je     4123fa <__flatcc_fb_gen_c_verifier@@Base+0x166a>
  41205f:	mov    rbx,QWORD PTR [rsp]
  412063:	sub    eax,0x1
  412066:	mov    rcx,r13
  412069:	mov    edx,r12d
  41206c:	lea    rsi,[rip+0x2fa82]        # 441af5 <_IO_stdin_used@@Base+0x14af5>
  412073:	mov    DWORD PTR [rbx+0xf0],eax
  412079:	jmp    411f9c <__flatcc_fb_gen_c_verifier@@Base+0x120c>
  41207e:	xor    edi,edi
  412080:	jmp    411be8 <__flatcc_fb_gen_c_verifier@@Base+0xe58>
  412085:	xor    r9d,r9d
  412088:	jmp    411c58 <__flatcc_fb_gen_c_verifier@@Base+0xec8>
  41208d:	movsxd rax,ebx
  412090:	sub    r11d,ebx
  412093:	add    r13,rax
  412096:	cmp    r11d,0x8
  41209a:	mov    eax,0x8
  41209f:	cmovg  r11d,eax
  4120a3:	test   r11d,r11d
  4120a6:	mov    r12d,r11d
  4120a9:	lea    edx,[r11-0x1]
  4120ad:	je     412375 <__flatcc_fb_gen_c_verifier@@Base+0x15e5>
  4120b3:	movsxd rdx,edx
  4120b6:	sub    eax,r11d
  4120b9:	lea    rsi,[r13+rdx*1+0x0]
  4120be:	shl    eax,0x3
  4120c1:	xor    edx,edx
  4120c3:	nop    DWORD PTR [rax+rax*1+0x0]
  4120c8:	movsx  rcx,BYTE PTR [rsi]
  4120cc:	sub    rsi,0x1
  4120d0:	shlx   rcx,rcx,rax
  4120d5:	add    eax,0x8
  4120d8:	or     rdx,rcx
  4120db:	cmp    eax,0x40
  4120de:	jne    4120c8 <__flatcc_fb_gen_c_verifier@@Base+0x1338>
  4120e0:	jmp    411fc5 <__flatcc_fb_gen_c_verifier@@Base+0x1235>
  4120e5:	mov    rax,QWORD PTR [rsp+0x18]
  4120ea:	movsxd r9,ebp
  4120ed:	shl    r9,0x5
  4120f1:	add    rax,r9
  4120f4:	cmp    r15d,ebp
  4120f7:	jl     4121da <__flatcc_fb_gen_c_verifier@@Base+0x144a>
  4120fd:	lea    edi,[rbx+0x8]
  412100:	mov    DWORD PTR [rsp+0x28],edi
  412104:	xor    r11d,r11d
  412107:	cmp    ebx,r14d
  41210a:	mov    rdx,QWORD PTR [rax]
  41210d:	jle    41220b <__flatcc_fb_gen_c_verifier@@Base+0x147b>
  412113:	mov    r14,QWORD PTR [rsp]
  412117:	lea    rsi,[rip+0x2ffb2]        # 4420d0 <_IO_stdin_used@@Base+0x150d0>
  41211e:	xor    r8d,r8d
  412121:	xor    ecx,ecx
  412123:	xor    edx,edx
  412125:	xor    eax,eax
  412127:	mov    rdi,r14
  41212a:	call   4114d0 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  41212f:	add    DWORD PTR [r14+0xf0],0x1
  412137:	mov    DWORD PTR [rsp+0x18],0x0
  41213f:	xor    r14d,r14d
  412142:	mov    rdi,QWORD PTR [rsp]
  412146:	lea    rsi,[rip+0x2f9da]        # 441b27 <_IO_stdin_used@@Base+0x14b27>
  41214d:	xor    eax,eax
  41214f:	call   4114d0 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  412154:	mov    rdi,QWORD PTR [rsp]
  412158:	lea    rsi,[rip+0x2ffb9]        # 442118 <_IO_stdin_used@@Base+0x15118>
  41215f:	xor    eax,eax
  412161:	call   4114d0 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  412166:	mov    r8d,DWORD PTR [rsp+0x28]
  41216b:	mov    rsi,QWORD PTR [rsp+0x10]
  412170:	mov    ecx,r12d
  412173:	mov    rdi,QWORD PTR [rsp]
  412177:	mov    edx,ebp
  412179:	mov    r12d,ebp
  41217c:	call   411af0 <__flatcc_fb_gen_c_verifier@@Base+0xd60>
  412181:	mov    rax,QWORD PTR [rsp]
  412185:	mov    eax,DWORD PTR [rax+0xf0]
  41218b:	test   eax,eax
  41218d:	je     4123db <__flatcc_fb_gen_c_verifier@@Base+0x164b>
  412193:	mov    rdi,QWORD PTR [rsp]
  412197:	mov    edx,DWORD PTR [rsp+0x18]
  41219b:	sub    eax,0x1
  41219e:	lea    rsi,[rip+0x2f9a9]        # 441b4e <_IO_stdin_used@@Base+0x14b4e>
  4121a5:	mov    rcx,r14
  4121a8:	mov    DWORD PTR [rdi+0xf0],eax
  4121ae:	xor    eax,eax
  4121b0:	call   4114d0 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  4121b5:	mov    rdi,QWORD PTR [rsp]
  4121b9:	mov    DWORD PTR [rsp+0x28],ebp
  4121bd:	mov    ebp,r12d
  4121c0:	add    DWORD PTR [rdi+0xf0],0x1
  4121c7:	jmp    411dd6 <__flatcc_fb_gen_c_verifier@@Base+0x1046>
  4121cc:	xor    edi,edi
  4121ce:	jmp    411d68 <__flatcc_fb_gen_c_verifier@@Base+0xfd8>
  4121d3:	xor    esi,esi
  4121d5:	jmp    411d00 <__flatcc_fb_gen_c_verifier@@Base+0xf70>
  4121da:	mov    rdi,QWORD PTR [rsp+0x18]
  4121df:	mov    edx,DWORD PTR [rdi+r9*1-0x18]
  4121e4:	lea    edi,[rbx+0x8]
  4121e7:	mov    DWORD PTR [rsp+0x28],edi
  4121eb:	cmp    edx,edi
  4121ed:	jg     412104 <__flatcc_fb_gen_c_verifier@@Base+0x1374>
  4121f3:	sub    edx,ebx
  4121f5:	xor    r11d,r11d
  4121f8:	cmp    edx,0x8
  4121fb:	mov    rdx,QWORD PTR [rax]
  4121fe:	sete   r11b
  412202:	cmp    ebx,r14d
  412205:	jg     412363 <__flatcc_fb_gen_c_verifier@@Base+0x15d3>
  41220b:	movsxd rax,ebx
  41220e:	lea    r14,[rdx+rax*1]
  412212:	xor    eax,eax
  412214:	xor    edx,edx
  412216:	lea    rsi,[r14+0x7]
  41221a:	nop    WORD PTR [rax+rax*1+0x0]
  412220:	movsx  rcx,BYTE PTR [rsi]
  412224:	sub    rsi,0x1
  412228:	shlx   rcx,rcx,rax
  41222d:	add    eax,0x8
  412230:	or     rdx,rcx
  412233:	cmp    eax,0x40
  412236:	jne    412220 <__flatcc_fb_gen_c_verifier@@Base+0x1490>
  412238:	mov    DWORD PTR [rsp+0x18],0x8
  412240:	mov    ecx,DWORD PTR [rsp+0x18]
  412244:	mov    rdi,QWORD PTR [rsp]
  412248:	lea    rsi,[rip+0x2fe81]        # 4420d0 <_IO_stdin_used@@Base+0x150d0>
  41224f:	xor    eax,eax
  412251:	mov    r8,r14
  412254:	mov    DWORD PTR [rsp+0x2c],r11d
  412259:	mov    QWORD PTR [rsp+0x20],r9
  41225e:	call   4114d0 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  412263:	mov    rax,QWORD PTR [rsp]
  412267:	mov    r11d,DWORD PTR [rsp+0x2c]
  41226c:	add    DWORD PTR [rax+0xf0],0x1
  412273:	test   r11d,r11d
  412276:	je     412142 <__flatcc_fb_gen_c_verifier@@Base+0x13b2>
  41227c:	mov    edx,DWORD PTR [rsp+0x18]
  412280:	lea    rsi,[rip+0x2fe71]        # 4420f8 <_IO_stdin_used@@Base+0x150f8>
  412287:	mov    rdi,rax
  41228a:	mov    rcx,r14
  41228d:	xor    eax,eax
  41228f:	call   4114d0 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  412294:	mov    r11,QWORD PTR [rsp+0x10]
  412299:	mov    r9,QWORD PTR [rsp+0x20]
  41229e:	mov    r8d,0x8
  4122a4:	mov    rdi,QWORD PTR [rsp]
  4122a8:	mov    rax,QWORD PTR [r11]
  4122ab:	mov    rsi,QWORD PTR [r11+0x18]
  4122af:	lea    rax,[rax+r9*1-0x20]
  4122b4:	mov    ecx,DWORD PTR [rax+0x18]
  4122b7:	mov    rdx,QWORD PTR [rax+0x10]
  4122bb:	call   QWORD PTR [r11+0x8]
  4122bf:	mov    edx,DWORD PTR [rsp+0x18]
  4122c3:	mov    rdi,QWORD PTR [rsp]
  4122c7:	lea    rsi,[rip+0x2f83d]        # 441b0b <_IO_stdin_used@@Base+0x14b0b>
  4122ce:	mov    rcx,r14
  4122d1:	xor    eax,eax
  4122d3:	call   4114d0 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  4122d8:	mov    rdi,QWORD PTR [rsp]
  4122dc:	lea    rsi,[rip+0x2f844]        # 441b27 <_IO_stdin_used@@Base+0x14b27>
  4122e3:	xor    eax,eax
  4122e5:	call   4114d0 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  4122ea:	mov    rdi,QWORD PTR [rsp]
  4122ee:	lea    rsi,[rip+0x2fe23]        # 442118 <_IO_stdin_used@@Base+0x15118>
  4122f5:	xor    eax,eax
  4122f7:	call   4114d0 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  4122fc:	mov    ecx,r12d
  4122ff:	mov    r12,QWORD PTR [rsp]
  412303:	mov    r8d,DWORD PTR [rsp+0x28]
  412308:	mov    rsi,QWORD PTR [rsp+0x10]
  41230d:	mov    edx,ebp
  41230f:	mov    rdi,r12
  412312:	call   411af0 <__flatcc_fb_gen_c_verifier@@Base+0xd60>
  412317:	mov    eax,DWORD PTR [r12+0xf0]
  41231f:	test   eax,eax
  412321:	je     4123b4 <__flatcc_fb_gen_c_verifier@@Base+0x1624>
  412327:	mov    rdi,QWORD PTR [rsp]
  41232b:	mov    edx,DWORD PTR [rsp+0x18]
  41232f:	sub    eax,0x1
  412332:	lea    rsi,[rip+0x2f7f8]        # 441b31 <_IO_stdin_used@@Base+0x14b31>
  412339:	mov    rcx,r14
  41233c:	lea    r12d,[rbp-0x1]
  412340:	mov    DWORD PTR [rdi+0xf0],eax
  412346:	xor    eax,eax
  412348:	call   4114d0 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  41234d:	jmp    412181 <__flatcc_fb_gen_c_verifier@@Base+0x13f1>
  412352:	mov    rax,QWORD PTR [rsp+0x10]
  412357:	mov    rdi,QWORD PTR [rsp]
  41235b:	call   QWORD PTR [rax+0x10]
  41235e:	jmp    411f64 <__flatcc_fb_gen_c_verifier@@Base+0x11d4>
  412363:	xor    edx,edx
  412365:	xor    r14d,r14d
  412368:	mov    DWORD PTR [rsp+0x18],0x0
  412370:	jmp    412240 <__flatcc_fb_gen_c_verifier@@Base+0x14b0>
  412375:	xor    edx,edx
  412377:	jmp    411fc5 <__flatcc_fb_gen_c_verifier@@Base+0x1235>
  41237c:	cmp    DWORD PTR [rsp+0xc],r13d
  412381:	mov    DWORD PTR [rsp+0x28],r15d
  412386:	lea    r14,[rip+0x33481]        # 44580e <_IO_stdin_used@@Base+0x1880e>
  41238d:	mov    DWORD PTR [rsp+0x18],0x0
  412395:	jl     412352 <__flatcc_fb_gen_c_verifier@@Base+0x15c2>
  412397:	mov    ecx,DWORD PTR [rsp+0xc]
  41239b:	mov    rsi,QWORD PTR [rsp+0x10]
  4123a0:	mov    r8d,ebx
  4123a3:	mov    rdi,QWORD PTR [rsp]
  4123a7:	mov    edx,r13d
  4123aa:	call   411af0 <__flatcc_fb_gen_c_verifier@@Base+0xd60>
  4123af:	jmp    411f64 <__flatcc_fb_gen_c_verifier@@Base+0x11d4>
  4123b4:	lea    rcx,[rip+0x31db5]        # 444170 <_IO_stdin_used@@Base+0x17170>
  4123bb:	lea    rsi,[rip+0x2fc76]        # 442038 <_IO_stdin_used@@Base+0x15038>
  4123c2:	lea    rdi,[rip+0x2f6dc]        # 441aa5 <_IO_stdin_used@@Base+0x14aa5>
  4123c9:	mov    edx,0x410
  4123ce:	call   405100 <__assert_fail@plt>
  4123d3:	xor    r12d,r12d
  4123d6:	jmp    411e00 <__flatcc_fb_gen_c_verifier@@Base+0x1070>
  4123db:	lea    rcx,[rip+0x31d8e]        # 444170 <_IO_stdin_used@@Base+0x17170>
  4123e2:	lea    rsi,[rip+0x2fc4f]        # 442038 <_IO_stdin_used@@Base+0x15038>
  4123e9:	lea    rdi,[rip+0x2f6b5]        # 441aa5 <_IO_stdin_used@@Base+0x14aa5>
  4123f0:	mov    edx,0x414
  4123f5:	call   405100 <__assert_fail@plt>
  4123fa:	lea    rcx,[rip+0x31d6f]        # 444170 <_IO_stdin_used@@Base+0x17170>
  412401:	lea    rsi,[rip+0x2fc30]        # 442038 <_IO_stdin_used@@Base+0x15038>
  412408:	lea    rdi,[rip+0x2f696]        # 441aa5 <_IO_stdin_used@@Base+0x14aa5>
  41240f:	mov    edx,0x3cf
  412414:	call   405100 <__assert_fail@plt>
  412419:	lea    rcx,[rip+0x31d50]        # 444170 <_IO_stdin_used@@Base+0x17170>
  412420:	lea    rsi,[rip+0x2fc11]        # 442038 <_IO_stdin_used@@Base+0x15038>
  412427:	lea    rdi,[rip+0x2f677]        # 441aa5 <_IO_stdin_used@@Base+0x14aa5>
  41242e:	mov    edx,0x430
  412433:	call   405100 <__assert_fail@plt>
  412438:	lea    rcx,[rip+0x31d31]        # 444170 <_IO_stdin_used@@Base+0x17170>
  41243f:	lea    rsi,[rip+0x2fbf2]        # 442038 <_IO_stdin_used@@Base+0x15038>
  412446:	lea    rdi,[rip+0x2f658]        # 441aa5 <_IO_stdin_used@@Base+0x14aa5>
  41244d:	mov    edx,0x3cd
  412452:	call   405100 <__assert_fail@plt>
  412457:	nop    WORD PTR [rax+rax*1+0x0]
  412460:	push   rbp
  412461:	push   rbx
  412462:	mov    rbx,rdi
  412465:	mov    rdi,rsi
  412468:	sub    rsp,0xe8
  41246f:	mov    rsi,rsp
  412472:	mov    rax,QWORD PTR fs:0x28
  41247b:	mov    QWORD PTR [rsp+0xd8],rax
  412483:	xor    eax,eax
  412485:	call   407250 <__flatcc_fb_copy_scope@@Base>
  41248a:	mov    rax,QWORD PTR [rbx+0xd8]
  412491:	lea    rsi,[rip+0x2fcb0]        # 442148 <_IO_stdin_used@@Base+0x15148>
  412498:	mov    rcx,rsp
  41249b:	mov    rdi,rbx
  41249e:	mov    rdx,QWORD PTR [rax+0x110]
  4124a5:	xor    eax,eax
  4124a7:	call   4114d0 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  4124ac:	lea    rsi,[rip+0x2fd05]        # 4421b8 <_IO_stdin_used@@Base+0x151b8>
  4124b3:	xor    eax,eax
  4124b5:	mov    rdi,rbx
  4124b8:	call   4114d0 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  4124bd:	mov    rax,QWORD PTR [rsp+0xd8]
  4124c5:	xor    rax,QWORD PTR fs:0x28
  4124ce:	jne    4124da <__flatcc_fb_gen_c_verifier@@Base+0x174a>
  4124d0:	add    rsp,0xe8
  4124d7:	pop    rbx
  4124d8:	pop    rbp
  4124d9:	ret    
  4124da:	call   4050d0 <__stack_chk_fail@plt>
  4124df:	nop
  4124e0:	push   r14
  4124e2:	push   r13
  4124e4:	mov    ecx,0x1d
  4124e9:	push   r12
  4124eb:	push   rbp
  4124ec:	mov    r13,rsi
  4124ef:	push   rbx
  4124f0:	mov    rbx,rdi
  4124f3:	sub    rsp,0x1f0
  4124fa:	lea    rbp,[rsp+0x10]
  4124ff:	lea    r12,[rsp+0x100]
  412507:	mov    rax,QWORD PTR fs:0x28
  412510:	mov    QWORD PTR [rsp+0x1e8],rax
  412518:	xor    eax,eax
  41251a:	mov    rdi,rbp
  41251d:	mov    rdx,rbp
  412520:	rep stos QWORD PTR es:[rdi],rax
  412523:	mov    ecx,0x1d
  412528:	mov    rdi,r12
  41252b:	rep stos QWORD PTR es:[rdi],rax
  41252e:	mov    rdi,QWORD PTR [rsi+0x18]
  412532:	call   407300 <__flatcc_fb_scoped_symbol_name@@Base>
  412537:	lea    rsi,[rip+0x2fcb2]        # 4421f0 <_IO_stdin_used@@Base+0x151f0>
  41253e:	mov    rdx,rbp
  412541:	xor    eax,eax
  412543:	mov    rdi,rbx
  412546:	call   4114d0 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  41254b:	lea    rsi,[rip+0x2f676]        # 441bc8 <_IO_stdin_used@@Base+0x14bc8>
  412552:	xor    eax,eax
  412554:	mov    rdi,rbx
  412557:	call   4114d0 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  41255c:	add    DWORD PTR [rbx+0xf0],0x1
  412563:	lea    rsi,[rip+0x332a4]        # 44580e <_IO_stdin_used@@Base+0x1880e>
  41256a:	xor    eax,eax
  41256c:	mov    rdi,rbx
  41256f:	call   4114d0 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  412574:	lea    rsi,[rip+0x2f632]        # 441bad <_IO_stdin_used@@Base+0x14bad>
  41257b:	xor    eax,eax
  41257d:	mov    rdi,rbx
  412580:	call   4114d0 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  412585:	lea    rsi,[rip+0x2f62e]        # 441bba <_IO_stdin_used@@Base+0x14bba>
  41258c:	xor    eax,eax
  41258e:	mov    rdi,rbx
  412591:	call   4114d0 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  412596:	lea    rsi,[rip+0x2f62d]        # 441bca <_IO_stdin_used@@Base+0x14bca>
  41259d:	xor    eax,eax
  41259f:	mov    rdi,rbx
  4125a2:	call   4114d0 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  4125a7:	add    DWORD PTR [rbx+0xf0],0x1
  4125ae:	lea    rsi,[rip+0x2fccb]        # 442280 <_IO_stdin_used@@Base+0x15280>
  4125b5:	xor    eax,eax
  4125b7:	mov    rdi,rbx
  4125ba:	call   4114d0 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  4125bf:	mov    eax,DWORD PTR [rbx+0xf0]
  4125c5:	test   eax,eax
  4125c7:	je     412980 <__flatcc_fb_gen_c_verifier@@Base+0x1bf0>
  4125cd:	mov    rbp,QWORD PTR [r13+0x28]
  4125d1:	sub    eax,0x1
  4125d4:	mov    DWORD PTR [rbx+0xf0],eax
  4125da:	test   rbp,rbp
  4125dd:	je     4126c8 <__flatcc_fb_gen_c_verifier@@Base+0x1938>
  4125e3:	lea    r13,[rip+0x2f5fc]        # 441be6 <_IO_stdin_used@@Base+0x14be6>
  4125ea:	mov    rax,QWORD PTR [rbp+0x8]
  4125ee:	mov    r8,QWORD PTR [rax]
  4125f1:	mov    r14,QWORD PTR [rax+0x8]
  4125f5:	movzx  eax,WORD PTR [rbp+0x28]
  4125f9:	cmp    ax,0xa
  4125fd:	je     412668 <__flatcc_fb_gen_c_verifier@@Base+0x18d8>
  4125ff:	cmp    ax,0xe
  412603:	je     412870 <__flatcc_fb_gen_c_verifier@@Base+0x1ae0>
  412609:	test   ax,ax
  41260c:	je     4126bb <__flatcc_fb_gen_c_verifier@@Base+0x192b>
  412612:	mov    rax,QWORD PTR [rip+0x3e9cf]        # 450fe8 <stderr@GLIBC_2.2.5>
  412619:	lea    rcx,[rip+0x2fa18]        # 442038 <_IO_stdin_used@@Base+0x15038>
  412620:	lea    rdx,[rip+0x23bba]        # 4361e1 <_IO_stdin_used@@Base+0x91e1>
  412627:	lea    r9,[rip+0x2fe0a]        # 442438 <_IO_stdin_used@@Base+0x15438>
  41262e:	mov    esi,0x1
  412633:	mov    r8d,0x5ff
  412639:	mov    rdi,QWORD PTR [rax]
  41263c:	xor    eax,eax
  41263e:	call   405200 <__fprintf_chk@plt>
  412643:	lea    rcx,[rip+0x31af6]        # 444140 <_IO_stdin_used@@Base+0x17140>
  41264a:	lea    rsi,[rip+0x2f9e7]        # 442038 <_IO_stdin_used@@Base+0x15038>
  412651:	lea    rdi,[rip+0x24bd1]        # 437229 <_IO_stdin_used@@Base+0xa229>
  412658:	mov    edx,0x5ff
  41265d:	call   405100 <__assert_fail@plt>
  412662:	nop    WORD PTR [rax+rax*1+0x0]
  412668:	mov    edx,DWORD PTR [rbp+0x48]
  41266b:	mov    ecx,r14d
  41266e:	xor    eax,eax
  412670:	mov    rsi,r13
  412673:	mov    rdi,rbx
  412676:	call   4114d0 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  41267b:	add    DWORD PTR [rbx+0xf0],0x1
  412682:	lea    rsi,[rip+0x2fd6f]        # 4423f8 <_IO_stdin_used@@Base+0x153f8>
  412689:	xor    eax,eax
  41268b:	mov    rdi,rbx
  41268e:	call   4114d0 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  412693:	lea    rsi,[rip+0x2f560]        # 441bfa <_IO_stdin_used@@Base+0x14bfa>
  41269a:	xor    eax,eax
  41269c:	mov    rdi,rbx
  41269f:	call   4114d0 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  4126a4:	mov    eax,DWORD PTR [rbx+0xf0]
  4126aa:	test   eax,eax
  4126ac:	je     412a3f <__flatcc_fb_gen_c_verifier@@Base+0x1caf>
  4126b2:	sub    eax,0x1
  4126b5:	mov    DWORD PTR [rbx+0xf0],eax
  4126bb:	mov    rbp,QWORD PTR [rbp+0x0]
  4126bf:	test   rbp,rbp
  4126c2:	jne    4125ea <__flatcc_fb_gen_c_verifier@@Base+0x185a>
  4126c8:	lea    rsi,[rip+0x2f50e]        # 441bdd <_IO_stdin_used@@Base+0x14bdd>
  4126cf:	xor    eax,eax
  4126d1:	mov    rdi,rbx
  4126d4:	call   4114d0 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  4126d9:	add    DWORD PTR [rbx+0xf0],0x1
  4126e0:	lea    rsi,[rip+0x2fbc9]        # 4422b0 <_IO_stdin_used@@Base+0x152b0>
  4126e7:	xor    eax,eax
  4126e9:	mov    rdi,rbx
  4126ec:	call   4114d0 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  4126f1:	add    DWORD PTR [rbx+0xf0],0x1
  4126f8:	lea    rsi,[rip+0x2fbf1]        # 4422f0 <_IO_stdin_used@@Base+0x152f0>
  4126ff:	xor    eax,eax
  412701:	mov    rdi,rbx
  412704:	call   4114d0 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  412709:	mov    eax,DWORD PTR [rbx+0xf0]
  41270f:	test   eax,eax
  412711:	je     412a20 <__flatcc_fb_gen_c_verifier@@Base+0x1c90>
  412717:	sub    eax,0x1
  41271a:	lea    rsi,[rip+0x2f4e0]        # 441c01 <_IO_stdin_used@@Base+0x14c01>
  412721:	mov    rdi,rbx
  412724:	mov    DWORD PTR [rbx+0xf0],eax
  41272a:	xor    eax,eax
  41272c:	call   4114d0 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  412731:	add    DWORD PTR [rbx+0xf0],0x1
  412738:	lea    rsi,[rip+0x2fd29]        # 442468 <_IO_stdin_used@@Base+0x15468>
  41273f:	xor    eax,eax
  412741:	mov    rdi,rbx
  412744:	call   4114d0 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  412749:	mov    eax,DWORD PTR [rbx+0xf0]
  41274f:	test   eax,eax
  412751:	je     412a01 <__flatcc_fb_gen_c_verifier@@Base+0x1c71>
  412757:	sub    eax,0x1
  41275a:	lea    rsi,[rip+0x2f350]        # 441ab1 <_IO_stdin_used@@Base+0x14ab1>
  412761:	mov    rdi,rbx
  412764:	mov    DWORD PTR [rbx+0xf0],eax
  41276a:	xor    eax,eax
  41276c:	call   4114d0 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  412771:	mov    eax,DWORD PTR [rbx+0xf0]
  412777:	test   eax,eax
  412779:	je     4129e2 <__flatcc_fb_gen_c_verifier@@Base+0x1c52>
  41277f:	sub    eax,0x1
  412782:	lea    rsi,[rip+0x2f328]        # 441ab1 <_IO_stdin_used@@Base+0x14ab1>
  412789:	mov    rdi,rbx
  41278c:	mov    DWORD PTR [rbx+0xf0],eax
  412792:	xor    eax,eax
  412794:	call   4114d0 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  412799:	lea    rsi,[rip+0x2f46a]        # 441c0a <_IO_stdin_used@@Base+0x14c0a>
  4127a0:	xor    eax,eax
  4127a2:	mov    rdi,rbx
  4127a5:	call   4114d0 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  4127aa:	lea    rsi,[rip+0x2f475]        # 441c26 <_IO_stdin_used@@Base+0x14c26>
  4127b1:	xor    eax,eax
  4127b3:	mov    rdi,rbx
  4127b6:	call   4114d0 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  4127bb:	add    DWORD PTR [rbx+0xf0],0x1
  4127c2:	lea    rsi,[rip+0x2fcd7]        # 4424a0 <_IO_stdin_used@@Base+0x154a0>
  4127c9:	xor    eax,eax
  4127cb:	mov    rdi,rbx
  4127ce:	call   4114d0 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  4127d3:	mov    eax,DWORD PTR [rbx+0xf0]
  4127d9:	test   eax,eax
  4127db:	je     4129c3 <__flatcc_fb_gen_c_verifier@@Base+0x1c33>
  4127e1:	sub    eax,0x1
  4127e4:	lea    rsi,[rip+0x2f2c6]        # 441ab1 <_IO_stdin_used@@Base+0x14ab1>
  4127eb:	mov    rdi,rbx
  4127ee:	mov    DWORD PTR [rbx+0xf0],eax
  4127f4:	xor    eax,eax
  4127f6:	call   4114d0 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  4127fb:	lea    rsi,[rip+0x2f418]        # 441c1a <_IO_stdin_used@@Base+0x14c1a>
  412802:	xor    eax,eax
  412804:	mov    rdi,rbx
  412807:	call   4114d0 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  41280c:	mov    eax,DWORD PTR [rbx+0xf0]
  412812:	test   eax,eax
  412814:	je     4129a4 <__flatcc_fb_gen_c_verifier@@Base+0x1c14>
  41281a:	sub    eax,0x1
  41281d:	lea    rsi,[rip+0x2f28d]        # 441ab1 <_IO_stdin_used@@Base+0x14ab1>
  412824:	mov    rdi,rbx
  412827:	mov    DWORD PTR [rbx+0xf0],eax
  41282d:	xor    eax,eax
  41282f:	call   4114d0 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  412834:	lea    rsi,[rip+0x32fd3]        # 44580e <_IO_stdin_used@@Base+0x1880e>
  41283b:	xor    eax,eax
  41283d:	mov    rdi,rbx
  412840:	call   4114d0 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  412845:	xor    eax,eax
  412847:	mov    rdx,QWORD PTR [rsp+0x1e8]
  41284f:	xor    rdx,QWORD PTR fs:0x28
  412858:	jne    41299f <__flatcc_fb_gen_c_verifier@@Base+0x1c0f>
  41285e:	add    rsp,0x1f0
  412865:	pop    rbx
  412866:	pop    rbp
  412867:	pop    r12
  412869:	pop    r13
  41286b:	pop    r14
  41286d:	ret    
  41286e:	xchg   ax,ax
  412870:	mov    rsi,QWORD PTR [rbp+0x18]
  412874:	mov    rdx,r12
  412877:	mov    QWORD PTR [rsp+0x8],r8
  41287c:	mov    rdi,QWORD PTR [rsi+0x18]
  412880:	call   407300 <__flatcc_fb_scoped_symbol_name@@Base>
  412885:	mov    r8,QWORD PTR [rsp+0x8]
  41288a:	mov    edx,DWORD PTR [rbp+0x48]
  41288d:	xor    eax,eax
  41288f:	mov    ecx,r14d
  412892:	mov    rsi,r13
  412895:	mov    rdi,rbx
  412898:	call   4114d0 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  41289d:	add    DWORD PTR [rbx+0xf0],0x1
  4128a4:	mov    rax,QWORD PTR [rbp+0x18]
  4128a8:	movzx  eax,WORD PTR [rax+0x10]
  4128ac:	test   ax,ax
  4128af:	je     412910 <__flatcc_fb_gen_c_verifier@@Base+0x1b80>
  4128b1:	cmp    ax,0x1
  4128b5:	jne    412930 <__flatcc_fb_gen_c_verifier@@Base+0x1ba0>
  4128b7:	lea    rsi,[rip+0x2faca]        # 442388 <_IO_stdin_used@@Base+0x15388>
  4128be:	mov    rdx,r12
  4128c1:	mov    rdi,rbx
  4128c4:	xor    eax,eax
  4128c6:	call   4114d0 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  4128cb:	lea    rsi,[rip+0x2f328]        # 441bfa <_IO_stdin_used@@Base+0x14bfa>
  4128d2:	xor    eax,eax
  4128d4:	mov    rdi,rbx
  4128d7:	call   4114d0 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  4128dc:	mov    eax,DWORD PTR [rbx+0xf0]
  4128e2:	test   eax,eax
  4128e4:	jne    4126b2 <__flatcc_fb_gen_c_verifier@@Base+0x1922>
  4128ea:	lea    rcx,[rip+0x3184f]        # 444140 <_IO_stdin_used@@Base+0x17140>
  4128f1:	lea    rsi,[rip+0x2f740]        # 442038 <_IO_stdin_used@@Base+0x15038>
  4128f8:	lea    rdi,[rip+0x2f1a6]        # 441aa5 <_IO_stdin_used@@Base+0x14aa5>
  4128ff:	mov    edx,0x5f6
  412904:	call   405100 <__assert_fail@plt>
  412909:	nop    DWORD PTR [rax+0x0]
  412910:	lea    rsi,[rip+0x2fa39]        # 442350 <_IO_stdin_used@@Base+0x15350>
  412917:	mov    rdx,r12
  41291a:	mov    rdi,rbx
  41291d:	xor    eax,eax
  41291f:	call   4114d0 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  412924:	jmp    4128cb <__flatcc_fb_gen_c_verifier@@Base+0x1b3b>
  412926:	nop    WORD PTR cs:[rax+rax*1+0x0]
  412930:	mov    rax,QWORD PTR [rip+0x3e6b1]        # 450fe8 <stderr@GLIBC_2.2.5>
  412937:	lea    rcx,[rip+0x2f6fa]        # 442038 <_IO_stdin_used@@Base+0x15038>
  41293e:	lea    rdx,[rip+0x2389c]        # 4361e1 <_IO_stdin_used@@Base+0x91e1>
  412945:	lea    r9,[rip+0x2fa74]        # 4423c0 <_IO_stdin_used@@Base+0x153c0>
  41294c:	mov    esi,0x1
  412951:	mov    r8d,0x5f2
  412957:	mov    rdi,QWORD PTR [rax]
  41295a:	xor    eax,eax
  41295c:	call   405200 <__fprintf_chk@plt>
  412961:	lea    rcx,[rip+0x317d8]        # 444140 <_IO_stdin_used@@Base+0x17140>
  412968:	lea    rsi,[rip+0x2f6c9]        # 442038 <_IO_stdin_used@@Base+0x15038>
  41296f:	lea    rdi,[rip+0x248b3]        # 437229 <_IO_stdin_used@@Base+0xa229>
  412976:	mov    edx,0x5f2
  41297b:	call   405100 <__assert_fail@plt>
  412980:	lea    rcx,[rip+0x317b9]        # 444140 <_IO_stdin_used@@Base+0x17140>
  412987:	lea    rsi,[rip+0x2f6aa]        # 442038 <_IO_stdin_used@@Base+0x15038>
  41298e:	lea    rdi,[rip+0x2f110]        # 441aa5 <_IO_stdin_used@@Base+0x14aa5>
  412995:	mov    edx,0x5df
  41299a:	call   405100 <__assert_fail@plt>
  41299f:	call   4050d0 <__stack_chk_fail@plt>
  4129a4:	lea    rcx,[rip+0x31795]        # 444140 <_IO_stdin_used@@Base+0x17140>
  4129ab:	lea    rsi,[rip+0x2f686]        # 442038 <_IO_stdin_used@@Base+0x15038>
  4129b2:	lea    rdi,[rip+0x2f0ec]        # 441aa5 <_IO_stdin_used@@Base+0x14aa5>
  4129b9:	mov    edx,0x610
  4129be:	call   405100 <__assert_fail@plt>
  4129c3:	lea    rcx,[rip+0x31776]        # 444140 <_IO_stdin_used@@Base+0x17140>
  4129ca:	lea    rsi,[rip+0x2f667]        # 442038 <_IO_stdin_used@@Base+0x15038>
  4129d1:	lea    rdi,[rip+0x2f0cd]        # 441aa5 <_IO_stdin_used@@Base+0x14aa5>
  4129d8:	mov    edx,0x60e
  4129dd:	call   405100 <__assert_fail@plt>
  4129e2:	lea    rcx,[rip+0x31757]        # 444140 <_IO_stdin_used@@Base+0x17140>
  4129e9:	lea    rsi,[rip+0x2f648]        # 442038 <_IO_stdin_used@@Base+0x15038>
  4129f0:	lea    rdi,[rip+0x2f0ae]        # 441aa5 <_IO_stdin_used@@Base+0x14aa5>
  4129f7:	mov    edx,0x60a
  4129fc:	call   405100 <__assert_fail@plt>
  412a01:	lea    rcx,[rip+0x31738]        # 444140 <_IO_stdin_used@@Base+0x17140>
  412a08:	lea    rsi,[rip+0x2f629]        # 442038 <_IO_stdin_used@@Base+0x15038>
  412a0f:	lea    rdi,[rip+0x2f08f]        # 441aa5 <_IO_stdin_used@@Base+0x14aa5>
  412a16:	mov    edx,0x609
  412a1b:	call   405100 <__assert_fail@plt>
  412a20:	lea    rcx,[rip+0x31719]        # 444140 <_IO_stdin_used@@Base+0x17140>
  412a27:	lea    rsi,[rip+0x2f60a]        # 442038 <_IO_stdin_used@@Base+0x15038>
  412a2e:	lea    rdi,[rip+0x2f070]        # 441aa5 <_IO_stdin_used@@Base+0x14aa5>
  412a35:	mov    edx,0x607
  412a3a:	call   405100 <__assert_fail@plt>
  412a3f:	lea    rcx,[rip+0x316fa]        # 444140 <_IO_stdin_used@@Base+0x17140>
  412a46:	lea    rsi,[rip+0x2f5eb]        # 442038 <_IO_stdin_used@@Base+0x15038>
  412a4d:	lea    rdi,[rip+0x2f051]        # 441aa5 <_IO_stdin_used@@Base+0x14aa5>
  412a54:	mov    edx,0x5fc
  412a59:	call   405100 <__assert_fail@plt>
  412a5e:	xchg   ax,ax
  412a60:	push   r12
  412a62:	push   rbp
  412a63:	mov    ecx,0x1d
  412a68:	push   rbx
  412a69:	mov    rbp,rdi
  412a6c:	mov    r12,rsi
  412a6f:	sub    rsp,0x1e0
  412a76:	mov    rax,QWORD PTR fs:0x28
  412a7f:	mov    QWORD PTR [rsp+0x1d8],rax
  412a87:	xor    eax,eax
  412a89:	lea    rdx,[rsp+0xf0]
  412a91:	mov    rdi,rsp
  412a94:	rep stos QWORD PTR es:[rdi],rax
  412a97:	mov    rdi,rdx
  412a9a:	mov    ecx,0x1d
  412a9f:	mov    rdx,rsp
  412aa2:	rep stos QWORD PTR es:[rdi],rax
  412aa5:	mov    rdi,QWORD PTR [rsi+0x18]
  412aa9:	call   407300 <__flatcc_fb_scoped_symbol_name@@Base>
  412aae:	lea    rsi,[rip+0x2fa43]        # 4424f8 <_IO_stdin_used@@Base+0x154f8>
  412ab5:	mov    rdx,rsp
  412ab8:	xor    eax,eax
  412aba:	mov    rdi,rbp
  412abd:	call   4114d0 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  412ac2:	lea    rsi,[rip+0x2f0ff]        # 441bc8 <_IO_stdin_used@@Base+0x14bc8>
  412ac9:	xor    eax,eax
  412acb:	mov    rdi,rbp
  412ace:	call   4114d0 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  412ad3:	add    DWORD PTR [rbp+0xf0],0x1
  412ada:	lea    rsi,[rip+0x2f0d9]        # 441bba <_IO_stdin_used@@Base+0x14bba>
  412ae1:	xor    eax,eax
  412ae3:	mov    rdi,rbp
  412ae6:	call   4114d0 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  412aeb:	mov    rbx,QWORD PTR [r12+0x28]
  412af0:	lea    r12,[rip+0x2f152]        # 441c49 <_IO_stdin_used@@Base+0x14c49>
  412af7:	test   rbx,rbx
  412afa:	jne    412b15 <__flatcc_fb_gen_c_verifier@@Base+0x1d85>
  412afc:	jmp    412b43 <__flatcc_fb_gen_c_verifier@@Base+0x1db3>
  412afe:	xchg   ax,ax
  412b00:	xor    eax,eax
  412b02:	mov    rsi,r12
  412b05:	mov    rdi,rbp
  412b08:	call   4114d0 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  412b0d:	mov    rbx,QWORD PTR [rbx]
  412b10:	test   rbx,rbx
  412b13:	je     412b43 <__flatcc_fb_gen_c_verifier@@Base+0x1db3>
  412b15:	cmp    WORD PTR [rbx+0x28],0x0
  412b1a:	je     412b00 <__flatcc_fb_gen_c_verifier@@Base+0x1d70>
  412b1c:	mov    rax,QWORD PTR [rbx+0x8]
  412b20:	mov    edx,DWORD PTR [rbx+0x48]
  412b23:	lea    rsi,[rip+0x2f13c]        # 441c66 <_IO_stdin_used@@Base+0x14c66>
  412b2a:	mov    rdi,rbp
  412b2d:	mov    rcx,QWORD PTR [rax+0x8]
  412b31:	mov    r8,QWORD PTR [rax]
  412b34:	xor    eax,eax
  412b36:	call   4114d0 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  412b3b:	mov    rbx,QWORD PTR [rbx]
  412b3e:	test   rbx,rbx
  412b41:	jne    412b15 <__flatcc_fb_gen_c_verifier@@Base+0x1d85>
  412b43:	lea    rsi,[rip+0x2f0ec]        # 441c36 <_IO_stdin_used@@Base+0x14c36>
  412b4a:	xor    eax,eax
  412b4c:	mov    rdi,rbp
  412b4f:	call   4114d0 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  412b54:	mov    eax,DWORD PTR [rbp+0xf0]
  412b5a:	lea    edx,[rax+0x1]
  412b5d:	test   edx,edx
  412b5f:	mov    DWORD PTR [rbp+0xf0],edx
  412b65:	je     412bd4 <__flatcc_fb_gen_c_verifier@@Base+0x1e44>
  412b67:	lea    rsi,[rip+0x2ef43]        # 441ab1 <_IO_stdin_used@@Base+0x14ab1>
  412b6e:	mov    DWORD PTR [rbp+0xf0],eax
  412b74:	mov    rdi,rbp
  412b77:	xor    eax,eax
  412b79:	call   4114d0 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  412b7e:	mov    eax,DWORD PTR [rbp+0xf0]
  412b84:	test   eax,eax
  412b86:	je     412bf8 <__flatcc_fb_gen_c_verifier@@Base+0x1e68>
  412b88:	sub    eax,0x1
  412b8b:	lea    rsi,[rip+0x2ef1f]        # 441ab1 <_IO_stdin_used@@Base+0x14ab1>
  412b92:	mov    rdi,rbp
  412b95:	mov    DWORD PTR [rbp+0xf0],eax
  412b9b:	xor    eax,eax
  412b9d:	call   4114d0 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  412ba2:	lea    rsi,[rip+0x32c65]        # 44580e <_IO_stdin_used@@Base+0x1880e>
  412ba9:	xor    eax,eax
  412bab:	mov    rdi,rbp
  412bae:	call   4114d0 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  412bb3:	xor    eax,eax
  412bb5:	mov    rdx,QWORD PTR [rsp+0x1d8]
  412bbd:	xor    rdx,QWORD PTR fs:0x28
  412bc6:	jne    412bf3 <__flatcc_fb_gen_c_verifier@@Base+0x1e63>
  412bc8:	add    rsp,0x1e0
  412bcf:	pop    rbx
  412bd0:	pop    rbp
  412bd1:	pop    r12
  412bd3:	ret    
  412bd4:	lea    rcx,[rip+0x31545]        # 444120 <_IO_stdin_used@@Base+0x17120>
  412bdb:	lea    rsi,[rip+0x2f456]        # 442038 <_IO_stdin_used@@Base+0x15038>
  412be2:	lea    rdi,[rip+0x2eebc]        # 441aa5 <_IO_stdin_used@@Base+0x14aa5>
  412be9:	mov    edx,0x62e
  412bee:	call   405100 <__assert_fail@plt>
  412bf3:	call   4050d0 <__stack_chk_fail@plt>
  412bf8:	lea    rcx,[rip+0x31521]        # 444120 <_IO_stdin_used@@Base+0x17120>
  412bff:	lea    rsi,[rip+0x2f432]        # 442038 <_IO_stdin_used@@Base+0x15038>
  412c06:	lea    rdi,[rip+0x2ee98]        # 441aa5 <_IO_stdin_used@@Base+0x14aa5>
  412c0d:	mov    edx,0x62f
  412c12:	call   405100 <__assert_fail@plt>
  412c17:	nop    WORD PTR [rax+rax*1+0x0]
  412c20:	push   r15
  412c22:	push   r14
  412c24:	mov    ecx,0x6
  412c29:	push   r13
  412c2b:	push   r12
  412c2d:	push   rbp
  412c2e:	push   rbx
  412c2f:	mov    rbx,rdi
  412c32:	mov    rbp,rsi
  412c35:	sub    rsp,0x148
  412c3c:	mov    rax,QWORD PTR fs:0x28
  412c45:	mov    QWORD PTR [rsp+0x138],rax
  412c4d:	xor    eax,eax
  412c4f:	lea    rdi,[rsp+0x30]
  412c54:	lea    r14,[rsp+0x60]
  412c59:	lea    r15,[rsp+0x10]
  412c5e:	mov    QWORD PTR [rsp+0x8],rdi
  412c63:	mov    rsi,r14
  412c66:	rep stos QWORD PTR es:[rdi],rax
  412c69:	mov    rdi,rbp
  412c6c:	add    rbp,0x8
  412c70:	call   407250 <__flatcc_fb_copy_scope@@Base>
  412c75:	mov    rax,QWORD PTR [rbx+0xd8]
  412c7c:	lea    rsi,[rip+0xffffffffffffe60d]        # 411290 <__flatcc_fb_gen_c_verifier@@Base+0x500>
  412c83:	mov    rdx,r15
  412c86:	mov    rdi,rbp
  412c89:	mov    QWORD PTR [rsp+0x10],0x0
  412c92:	mov    QWORD PTR [rsp+0x20],0x0
  412c9b:	mov    QWORD PTR [rsp+0x18],rax
  412ca0:	call   41b360 <fb_symbol_table_visit@@Base>
  412ca5:	mov    r12d,DWORD PTR [rsp+0x10]
  412caa:	test   r12d,r12d
  412cad:	je     412ef0 <__flatcc_fb_gen_c_verifier@@Base+0x2160>
  412cb3:	movsxd rdi,r12d
  412cb6:	shl    rdi,0x5
  412cba:	call   405180 <malloc@plt>
  412cbf:	test   rax,rax
  412cc2:	mov    r13,rax
  412cc5:	je     412f00 <__flatcc_fb_gen_c_verifier@@Base+0x2170>
  412ccb:	lea    rsi,[rip+0xffffffffffffe55e]        # 411230 <__flatcc_fb_gen_c_verifier@@Base+0x4a0>
  412cd2:	mov    rdx,r15
  412cd5:	mov    rdi,rbp
  412cd8:	mov    QWORD PTR [rsp+0x20],rax
  412cdd:	call   41b360 <fb_symbol_table_visit@@Base>
  412ce2:	movsxd rsi,DWORD PTR [rsp+0x10]
  412ce7:	lea    rcx,[rip+0xffffffffffffe512]        # 411200 <__flatcc_fb_gen_c_verifier@@Base+0x470>
  412cee:	mov    edx,0x20
  412cf3:	mov    rdi,r13
  412cf6:	call   405080 <qsort@plt>
  412cfb:	mov    QWORD PTR [rsp+0x30],r13
  412d00:	lea    rax,[rip+0x3f9]        # 413100 <__flatcc_fb_gen_c_verifier@@Base+0x2370>
  412d07:	lea    rsi,[rip+0x2f43a]        # 442148 <_IO_stdin_used@@Base+0x15148>
  412d0e:	mov    rcx,r14
  412d11:	mov    rdi,rbx
  412d14:	mov    QWORD PTR [rsp+0x48],0x0
  412d1d:	mov    DWORD PTR [rsp+0x50],0x3
  412d25:	mov    QWORD PTR [rsp+0x38],rax
  412d2a:	lea    rax,[rip+0xffffffffffffe98f]        # 4116c0 <__flatcc_fb_gen_c_verifier@@Base+0x930>
  412d31:	mov    QWORD PTR [rsp+0x40],rax
  412d36:	mov    rax,QWORD PTR [rbx+0xd8]
  412d3d:	mov    rdx,QWORD PTR [rax+0x110]
  412d44:	xor    eax,eax
  412d46:	call   4114d0 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  412d4b:	add    DWORD PTR [rbx+0xf0],0x2
  412d52:	lea    rsi,[rip+0x2f817]        # 442570 <_IO_stdin_used@@Base+0x15570>
  412d59:	xor    eax,eax
  412d5b:	mov    rdi,rbx
  412d5e:	call   4114d0 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  412d63:	mov    eax,DWORD PTR [rbx+0xf0]
  412d69:	test   eax,eax
  412d6b:	je     412f6c <__flatcc_fb_gen_c_verifier@@Base+0x21dc>
  412d71:	cmp    eax,0x1
  412d74:	je     412f62 <__flatcc_fb_gen_c_verifier@@Base+0x21d2>
  412d7a:	sub    eax,0x2
  412d7d:	lea    rsi,[rip+0x2ee44]        # 441bc8 <_IO_stdin_used@@Base+0x14bc8>
  412d84:	mov    rdi,rbx
  412d87:	mov    DWORD PTR [rbx+0xf0],eax
  412d8d:	xor    eax,eax
  412d8f:	call   4114d0 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  412d94:	add    DWORD PTR [rbx+0xf0],0x1
  412d9b:	test   r12d,r12d
  412d9e:	je     412e98 <__flatcc_fb_gen_c_verifier@@Base+0x2108>
  412da4:	lea    rsi,[rip+0x2eef6]        # 441ca1 <_IO_stdin_used@@Base+0x14ca1>
  412dab:	xor    eax,eax
  412dad:	mov    rdi,rbx
  412db0:	call   4114d0 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  412db5:	lea    rsi,[rip+0x2ef02]        # 441cbe <_IO_stdin_used@@Base+0x14cbe>
  412dbc:	xor    eax,eax
  412dbe:	mov    rdi,rbx
  412dc1:	call   4114d0 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  412dc6:	lea    rsi,[rip+0x2ef03]        # 441cd0 <_IO_stdin_used@@Base+0x14cd0>
  412dcd:	xor    eax,eax
  412dcf:	mov    rdi,rbx
  412dd2:	call   4114d0 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  412dd7:	lea    rsi,[rip+0x32a30]        # 44580e <_IO_stdin_used@@Base+0x1880e>
  412dde:	xor    eax,eax
  412de0:	mov    rdi,rbx
  412de3:	call   4114d0 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  412de8:	lea    rsi,[rip+0x2f329]        # 442118 <_IO_stdin_used@@Base+0x15118>
  412def:	xor    eax,eax
  412df1:	mov    rdi,rbx
  412df4:	call   4114d0 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  412df9:	mov    rsi,QWORD PTR [rsp+0x8]
  412dfe:	lea    ecx,[r12-0x1]
  412e03:	xor    r8d,r8d
  412e06:	xor    edx,edx
  412e08:	mov    rdi,rbx
  412e0b:	call   411af0 <__flatcc_fb_gen_c_verifier@@Base+0xd60>
  412e10:	lea    rsi,[rip+0x2ee03]        # 441c1a <_IO_stdin_used@@Base+0x14c1a>
  412e17:	xor    eax,eax
  412e19:	mov    rdi,rbx
  412e1c:	call   4114d0 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  412e21:	mov    eax,DWORD PTR [rbx+0xf0]
  412e27:	test   eax,eax
  412e29:	je     412f90 <__flatcc_fb_gen_c_verifier@@Base+0x2200>
  412e2f:	sub    eax,0x1
  412e32:	lea    rsi,[rip+0x2ec78]        # 441ab1 <_IO_stdin_used@@Base+0x14ab1>
  412e39:	mov    rdi,rbx
  412e3c:	mov    DWORD PTR [rbx+0xf0],eax
  412e42:	xor    eax,eax
  412e44:	call   4114d0 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  412e49:	lea    rsi,[rip+0x329be]        # 44580e <_IO_stdin_used@@Base+0x1880e>
  412e50:	mov    rdi,rbx
  412e53:	xor    eax,eax
  412e55:	call   4114d0 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  412e5a:	mov    rdi,QWORD PTR [rsp+0x30]
  412e5f:	test   rdi,rdi
  412e62:	je     412e69 <__flatcc_fb_gen_c_verifier@@Base+0x20d9>
  412e64:	call   405040 <free@plt>
  412e69:	mov    rax,QWORD PTR [rsp+0x138]
  412e71:	xor    rax,QWORD PTR fs:0x28
  412e7a:	jne    412f8b <__flatcc_fb_gen_c_verifier@@Base+0x21fb>
  412e80:	add    rsp,0x148
  412e87:	pop    rbx
  412e88:	pop    rbp
  412e89:	pop    r12
  412e8b:	pop    r13
  412e8d:	pop    r14
  412e8f:	pop    r15
  412e91:	ret    
  412e92:	nop    WORD PTR [rax+rax*1+0x0]
  412e98:	lea    rsi,[rip+0x2f709]        # 4425a8 <_IO_stdin_used@@Base+0x155a8>
  412e9f:	xor    eax,eax
  412ea1:	mov    rdi,rbx
  412ea4:	call   4114d0 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  412ea9:	lea    rsi,[rip+0x2edd4]        # 441c84 <_IO_stdin_used@@Base+0x14c84>
  412eb0:	xor    eax,eax
  412eb2:	mov    rdi,rbx
  412eb5:	call   4114d0 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  412eba:	mov    eax,DWORD PTR [rbx+0xf0]
  412ec0:	test   eax,eax
  412ec2:	jne    412e2f <__flatcc_fb_gen_c_verifier@@Base+0x209f>
  412ec8:	lea    rcx,[rip+0x312e1]        # 4441b0 <_IO_stdin_used@@Base+0x171b0>
  412ecf:	lea    rsi,[rip+0x2f162]        # 442038 <_IO_stdin_used@@Base+0x15038>
  412ed6:	lea    rdi,[rip+0x2ebc8]        # 441aa5 <_IO_stdin_used@@Base+0x14aa5>
  412edd:	mov    edx,0x485
  412ee2:	call   405100 <__assert_fail@plt>
  412ee7:	nop    WORD PTR [rax+rax*1+0x0]
  412ef0:	mov    QWORD PTR [rsp+0x30],0x0
  412ef9:	jmp    412d00 <__flatcc_fb_gen_c_verifier@@Base+0x1f70>
  412efe:	xchg   ax,ax
  412f00:	test   r12d,r12d
  412f03:	mov    QWORD PTR [rsp+0x30],0x0
  412f0c:	jle    412d00 <__flatcc_fb_gen_c_verifier@@Base+0x1f70>
  412f12:	mov    rax,QWORD PTR [rip+0x3e0cf]        # 450fe8 <stderr@GLIBC_2.2.5>
  412f19:	lea    rcx,[rip+0x2f118]        # 442038 <_IO_stdin_used@@Base+0x15038>
  412f20:	lea    rdx,[rip+0x232ba]        # 4361e1 <_IO_stdin_used@@Base+0x91e1>
  412f27:	lea    r9,[rip+0x2f602]        # 442530 <_IO_stdin_used@@Base+0x15530>
  412f2e:	mov    esi,0x1
  412f33:	mov    r8d,0x474
  412f39:	mov    rdi,QWORD PTR [rax]
  412f3c:	xor    eax,eax
  412f3e:	call   405200 <__fprintf_chk@plt>
  412f43:	lea    rcx,[rip+0x31266]        # 4441b0 <_IO_stdin_used@@Base+0x171b0>
  412f4a:	lea    rsi,[rip+0x2f0e7]        # 442038 <_IO_stdin_used@@Base+0x15038>
  412f51:	lea    rdi,[rip+0x242d1]        # 437229 <_IO_stdin_used@@Base+0xa229>
  412f58:	mov    edx,0x474
  412f5d:	call   405100 <__assert_fail@plt>
  412f62:	mov    DWORD PTR [rbx+0xf0],0x0
  412f6c:	lea    rcx,[rip+0x3123d]        # 4441b0 <_IO_stdin_used@@Base+0x171b0>
  412f73:	lea    rsi,[rip+0x2f0be]        # 442038 <_IO_stdin_used@@Base+0x15038>
  412f7a:	lea    rdi,[rip+0x2eb24]        # 441aa5 <_IO_stdin_used@@Base+0x14aa5>
  412f81:	mov    edx,0x480
  412f86:	call   405100 <__assert_fail@plt>
  412f8b:	call   4050d0 <__stack_chk_fail@plt>
  412f90:	lea    rcx,[rip+0x31219]        # 4441b0 <_IO_stdin_used@@Base+0x171b0>
  412f97:	lea    rsi,[rip+0x2f09a]        # 442038 <_IO_stdin_used@@Base+0x15038>
  412f9e:	lea    rdi,[rip+0x2eb00]        # 441aa5 <_IO_stdin_used@@Base+0x14aa5>
  412fa5:	mov    edx,0x48e
  412faa:	call   405100 <__assert_fail@plt>
  412faf:	nop
  412fb0:	push   r12
  412fb2:	push   rbp
  412fb3:	mov    rbp,rsi
  412fb6:	push   rbx
  412fb7:	lea    rsi,[rip+0x2f622]        # 4425e0 <_IO_stdin_used@@Base+0x155e0>
  412fbe:	xor    eax,eax
  412fc0:	mov    r12,rdx
  412fc3:	mov    edx,r8d
  412fc6:	mov    rbx,rdi
  412fc9:	call   4114d0 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  412fce:	lea    rsi,[rip+0x2ed07]        # 441cdc <_IO_stdin_used@@Base+0x14cdc>
  412fd5:	xor    eax,eax
  412fd7:	mov    rdi,rbx
  412fda:	call   4114d0 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  412fdf:	add    DWORD PTR [rbx+0xf0],0x1
  412fe6:	mov    eax,DWORD PTR [rbp+0x48]
  412fe9:	cmp    eax,0x1
  412fec:	jb     413050 <__flatcc_fb_gen_c_verifier@@Base+0x22c0>
  412fee:	cmp    eax,0x5
  412ff1:	jbe    4130a0 <__flatcc_fb_gen_c_verifier@@Base+0x2310>
  412ff7:	cmp    eax,0x9
  412ffa:	ja     413050 <__flatcc_fb_gen_c_verifier@@Base+0x22c0>
  412ffc:	mov    rdx,QWORD PTR [r12+0x48]
  413001:	test   rdx,rdx
  413004:	js     4130c0 <__flatcc_fb_gen_c_verifier@@Base+0x2330>
  41300a:	lea    rsi,[rip+0x2f61f]        # 442630 <_IO_stdin_used@@Base+0x15630>
  413011:	mov    rdi,rbx
  413014:	xor    eax,eax
  413016:	call   4114d0 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  41301b:	mov    eax,DWORD PTR [rbx+0xf0]
  413021:	test   eax,eax
  413023:	je     4130d6 <__flatcc_fb_gen_c_verifier@@Base+0x2346>
  413029:	sub    eax,0x1
  41302c:	lea    rsi,[rip+0x2ebce]        # 441c01 <_IO_stdin_used@@Base+0x14c01>
  413033:	mov    rdi,rbx
  413036:	mov    DWORD PTR [rbx+0xf0],eax
  41303c:	xor    eax,eax
  41303e:	call   4114d0 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  413043:	add    DWORD PTR [rbx+0xf0],0x1
  41304a:	pop    rbx
  41304b:	pop    rbp
  41304c:	pop    r12
  41304e:	ret    
  41304f:	nop
  413050:	mov    rax,QWORD PTR [rip+0x3df91]        # 450fe8 <stderr@GLIBC_2.2.5>
  413057:	lea    rcx,[rip+0x2efda]        # 442038 <_IO_stdin_used@@Base+0x15038>
  41305e:	lea    rdx,[rip+0x2317c]        # 4361e1 <_IO_stdin_used@@Base+0x91e1>
  413065:	lea    r9,[rip+0x2f624]        # 442690 <_IO_stdin_used@@Base+0x15690>
  41306c:	mov    esi,0x1
  413071:	mov    r8d,0x2c6
  413077:	mov    rdi,QWORD PTR [rax]
  41307a:	xor    eax,eax
  41307c:	call   405200 <__fprintf_chk@plt>
  413081:	lea    rcx,[rip+0x30fa8]        # 444030 <_IO_stdin_used@@Base+0x17030>
  413088:	lea    rsi,[rip+0x2efa9]        # 442038 <_IO_stdin_used@@Base+0x15038>
  41308f:	lea    rdi,[rip+0x24193]        # 437229 <_IO_stdin_used@@Base+0xa229>
  413096:	mov    edx,0x2c6
  41309b:	call   405100 <__assert_fail@plt>
  4130a0:	mov    rdx,QWORD PTR [r12+0x48]
  4130a5:	lea    rsi,[rip+0x2f584]        # 442630 <_IO_stdin_used@@Base+0x15630>
  4130ac:	mov    rdi,rbx
  4130af:	xor    eax,eax
  4130b1:	call   4114d0 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  4130b6:	jmp    41301b <__flatcc_fb_gen_c_verifier@@Base+0x228b>
  4130bb:	nop    DWORD PTR [rax+rax*1+0x0]
  4130c0:	lea    rsi,[rip+0x2f599]        # 442660 <_IO_stdin_used@@Base+0x15660>
  4130c7:	mov    rdi,rbx
  4130ca:	xor    eax,eax
  4130cc:	call   4114d0 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  4130d1:	jmp    41301b <__flatcc_fb_gen_c_verifier@@Base+0x228b>
  4130d6:	lea    rcx,[rip+0x30f6b]        # 444048 <_IO_stdin_used@@Base+0x17048>
  4130dd:	lea    rsi,[rip+0x2ef54]        # 442038 <_IO_stdin_used@@Base+0x15038>
  4130e4:	lea    rdi,[rip+0x2e9ba]        # 441aa5 <_IO_stdin_used@@Base+0x14aa5>
  4130eb:	mov    edx,0x2cf
  4130f0:	call   405100 <__assert_fail@plt>
  4130f5:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  413100:	push   r12
  413102:	push   rbp
  413103:	lea    rsi,[rip+0x2f5ae]        # 4426b8 <_IO_stdin_used@@Base+0x156b8>
  41310a:	push   rbx
  41310b:	mov    r12,rdx
  41310e:	mov    edx,r8d
  413111:	mov    rbx,rdi
  413114:	sub    rsp,0xf0
  41311b:	mov    rax,QWORD PTR fs:0x28
  413124:	mov    QWORD PTR [rsp+0xe8],rax
  41312c:	xor    eax,eax
  41312e:	call   4114d0 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  413133:	lea    rsi,[rip+0x2eba2]        # 441cdc <_IO_stdin_used@@Base+0x14cdc>
  41313a:	xor    eax,eax
  41313c:	mov    rdi,rbx
  41313f:	call   4114d0 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  413144:	movzx  eax,WORD PTR [r12+0x10]
  41314a:	add    DWORD PTR [rbx+0xf0],0x1
  413151:	sub    eax,0x3
  413154:	cmp    ax,0x1
  413158:	ja     4131d5 <__flatcc_fb_gen_c_verifier@@Base+0x2445>
  41315a:	xor    eax,eax
  41315c:	mov    ecx,0x1d
  413161:	mov    rdi,rsp
  413164:	rep stos QWORD PTR es:[rdi],rax
  413167:	mov    rdi,QWORD PTR [r12+0x18]
  41316c:	mov    rdx,rsp
  41316f:	mov    rsi,r12
  413172:	call   407300 <__flatcc_fb_scoped_symbol_name@@Base>
  413177:	lea    rsi,[rip+0x2f582]        # 442700 <_IO_stdin_used@@Base+0x15700>
  41317e:	xor    eax,eax
  413180:	mov    rdx,rsp
  413183:	mov    rdi,rbx
  413186:	call   4114d0 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  41318b:	mov    eax,DWORD PTR [rbx+0xf0]
  413191:	test   eax,eax
  413193:	je     4131f9 <__flatcc_fb_gen_c_verifier@@Base+0x2469>
  413195:	sub    eax,0x1
  413198:	lea    rsi,[rip+0x2ea62]        # 441c01 <_IO_stdin_used@@Base+0x14c01>
  41319f:	mov    rdi,rbx
  4131a2:	mov    DWORD PTR [rbx+0xf0],eax
  4131a8:	xor    eax,eax
  4131aa:	call   4114d0 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  4131af:	add    DWORD PTR [rbx+0xf0],0x1
  4131b6:	mov    rax,QWORD PTR [rsp+0xe8]
  4131be:	xor    rax,QWORD PTR fs:0x28
  4131c7:	jne    4131f4 <__flatcc_fb_gen_c_verifier@@Base+0x2464>
  4131c9:	add    rsp,0xf0
  4131d0:	pop    rbx
  4131d1:	pop    rbp
  4131d2:	pop    r12
  4131d4:	ret    
  4131d5:	lea    rcx,[rip+0x30fa4]        # 444180 <_IO_stdin_used@@Base+0x17180>
  4131dc:	lea    rsi,[rip+0x2ee55]        # 442038 <_IO_stdin_used@@Base+0x15038>
  4131e3:	lea    rdi,[rip+0x1b98e]        # 42eb78 <_IO_stdin_used@@Base+0x1b78>
  4131ea:	mov    edx,0x2d9
  4131ef:	call   405100 <__assert_fail@plt>
  4131f4:	call   4050d0 <__stack_chk_fail@plt>
  4131f9:	lea    rcx,[rip+0x30fa0]        # 4441a0 <_IO_stdin_used@@Base+0x171a0>
  413200:	lea    rsi,[rip+0x2ee31]        # 442038 <_IO_stdin_used@@Base+0x15038>
  413207:	lea    rdi,[rip+0x2e897]        # 441aa5 <_IO_stdin_used@@Base+0x14aa5>
  41320e:	mov    edx,0x2e6
  413213:	call   405100 <__assert_fail@plt>
  413218:	nop    DWORD PTR [rax+rax*1+0x0]
  413220:	push   r15
  413222:	push   r14
  413224:	mov    r14,rcx
  413227:	push   r13
  413229:	push   r12
  41322b:	mov    ecx,0x1d
  413230:	push   rbp
  413231:	push   rbx
  413232:	mov    rbx,rdi
  413235:	mov    rbp,rsi
  413238:	sub    rsp,0x238
  41323f:	mov    rax,QWORD PTR fs:0x28
  413248:	mov    QWORD PTR [rsp+0x228],rax
  413250:	xor    eax,eax
  413252:	lea    rdi,[rsp+0x60]
  413257:	mov    DWORD PTR [rsp+0xc],r8d
  41325c:	mov    QWORD PTR [rsp+0x10],rdi
  413261:	rep stos QWORD PTR es:[rdi],rax
  413264:	lea    rax,[rsp+0x150]
  41326c:	mov    rdi,QWORD PTR [rdx]
  41326f:	mov    rsi,rax
  413272:	mov    QWORD PTR [rsp+0x38],rax
  413277:	call   407250 <__flatcc_fb_copy_scope@@Base>
  41327c:	movzx  eax,WORD PTR [rbp+0x0]
  413280:	cmp    ax,0x1
  413284:	mov    WORD PTR [rsp+0x48],ax
  413289:	sete   al
  41328c:	movzx  eax,al
  41328f:	mov    DWORD PTR [rsp+0x40],eax
  413293:	movzx  eax,WORD PTR [r14+0x28]
  413298:	cmp    ax,0xf
  41329c:	ja     4132d0 <__flatcc_fb_gen_c_verifier@@Base+0x2540>
  41329e:	mov    edx,0x1
  4132a3:	shlx   rdx,rdx,rax
  4132a8:	test   edx,0x8280
  4132ae:	setne  cl
  4132b1:	sub    eax,0x7
  4132b4:	cmp    ax,0x8
  4132b8:	movzx  ebp,cl
  4132bb:	ja     4132dd <__flatcc_fb_gen_c_verifier@@Base+0x254d>
  4132bd:	lea    rdx,[rip+0x30cac]        # 443f70 <_IO_stdin_used@@Base+0x16f70>
  4132c4:	movzx  eax,ax
  4132c7:	movsxd rax,DWORD PTR [rdx+rax*4]
  4132cb:	add    rax,rdx
  4132ce:	jmp    rax
  4132d0:	sub    eax,0x7
  4132d3:	xor    ebp,ebp
  4132d5:	xor    ecx,ecx
  4132d7:	cmp    ax,0x8
  4132db:	jbe    4132bd <__flatcc_fb_gen_c_verifier@@Base+0x252d>
  4132dd:	xor    edx,edx
  4132df:	xor    r15d,r15d
  4132e2:	mov    DWORD PTR [rsp+0x2c],0x0
  4132ea:	xor    r12d,r12d
  4132ed:	mov    DWORD PTR [rsp+0x34],0x0
  4132f5:	mov    DWORD PTR [rsp+0x28],0x0
  4132fd:	jmp    413320 <__flatcc_fb_gen_c_verifier@@Base+0x2590>
  4132ff:	nop
  413300:	xor    edx,edx
  413302:	xor    r15d,r15d
  413305:	mov    DWORD PTR [rsp+0x2c],0x0
  41330d:	xor    r12d,r12d
  413310:	mov    DWORD PTR [rsp+0x34],0x0
  413318:	mov    DWORD PTR [rsp+0x28],0x1
  413320:	mov    eax,ebp
  413322:	mov    DWORD PTR [rsp+0x30],0x0
  41332a:	mov    DWORD PTR [rsp+0x54],0x0
  413332:	and    eax,0x1
  413335:	mov    DWORD PTR [rsp+0x4c],0x0
  41333d:	mov    DWORD PTR [rsp+0x8],0x0
  413345:	mov    BYTE PTR [rsp+0x4b],al
  413349:	mov    r13d,DWORD PTR [rsp+0xc]
  41334e:	test   r13d,r13d
  413351:	je     4138b9 <__flatcc_fb_gen_c_verifier@@Base+0x2b29>
  413357:	cmp    BYTE PTR [rsp+0x4b],0x0
  41335c:	mov    DWORD PTR [rsp+0x50],0x0
  413364:	mov    r12d,0x0
  41336a:	je     414106 <__flatcc_fb_gen_c_verifier@@Base+0x3376>
  413370:	mov    DWORD PTR [rsp+0x5c],0x1
  413378:	mov    DWORD PTR [rsp+0x58],0x0
  413380:	xor    ebp,ebp
  413382:	cmp    DWORD PTR [rsp+0x8],0x1
  413387:	je     4138f2 <__flatcc_fb_gen_c_verifier@@Base+0x2b62>
  41338d:	lea    rax,[rip+0x2e95b]        # 441cef <_IO_stdin_used@@Base+0x14cef>
  413394:	mov    QWORD PTR [rsp+0x18],rax
  413399:	mov    QWORD PTR [rsp+0x20],rax
  41339e:	mov    eax,DWORD PTR [rsp+0x4c]
  4133a2:	or     eax,DWORD PTR [rsp+0x54]
  4133a6:	cmp    DWORD PTR [rsp+0x8],0x2
  4133ab:	mov    DWORD PTR [rsp+0x44],eax
  4133af:	je     413562 <__flatcc_fb_gen_c_verifier@@Base+0x27d2>
  4133b5:	mov    r13d,r12d
  4133b8:	or     r13d,r15d
  4133bb:	or     r13d,DWORD PTR [rsp+0xc]
  4133c0:	test   r12d,r12d
  4133c3:	jne    4139c0 <__flatcc_fb_gen_c_verifier@@Base+0x2c30>
  4133c9:	test   ebp,ebp
  4133cb:	je     4135db <__flatcc_fb_gen_c_verifier@@Base+0x284b>
  4133d1:	test   r13d,r13d
  4133d4:	je     413a10 <__flatcc_fb_gen_c_verifier@@Base+0x2c80>
  4133da:	mov    rsi,QWORD PTR [r14+0x80]
  4133e1:	mov    r8d,0xffffffff
  4133e7:	test   rsi,rsi
  4133ea:	je     4133f7 <__flatcc_fb_gen_c_verifier@@Base+0x2667>
  4133ec:	mov    rax,r8
  4133ef:	xor    edx,edx
  4133f1:	div    rsi
  4133f4:	mov    r8,rax
  4133f7:	movsx  ecx,WORD PTR [r14+0x72]
  4133fc:	mov    rdx,rsi
  4133ff:	lea    rsi,[rip+0x2f442]        # 442848 <_IO_stdin_used@@Base+0x15848>
  413406:	mov    rdi,rbx
  413409:	xor    eax,eax
  41340b:	call   4114d0 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  413410:	lea    rsi,[rip+0x2f489]        # 4428a0 <_IO_stdin_used@@Base+0x158a0>
  413417:	xor    eax,eax
  413419:	mov    rdi,rbx
  41341c:	mov    ebp,0x1
  413421:	call   4114d0 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  413426:	lea    rsi,[rip+0x2e8dc]        # 441d09 <_IO_stdin_used@@Base+0x14d09>
  41342d:	xor    eax,eax
  41342f:	mov    rdi,rbx
  413432:	call   4114d0 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  413437:	add    DWORD PTR [rbx+0xf0],0x1
  41343e:	test   r12d,r12d
  413441:	jne    413a53 <__flatcc_fb_gen_c_verifier@@Base+0x2cc3>
  413447:	test   r13d,r13d
  41344a:	je     413463 <__flatcc_fb_gen_c_verifier@@Base+0x26d3>
  41344c:	test   bpl,0x1
  413450:	je     413463 <__flatcc_fb_gen_c_verifier@@Base+0x26d3>
  413452:	lea    rsi,[rip+0x2f4f7]        # 442950 <_IO_stdin_used@@Base+0x15950>
  413459:	mov    rdi,rbx
  41345c:	xor    eax,eax
  41345e:	call   4114d0 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  413463:	cmp    WORD PTR [rsp+0x48],0x1
  413469:	je     4135ea <__flatcc_fb_gen_c_verifier@@Base+0x285a>
  41346f:	mov    eax,ebp
  413471:	xor    eax,0x1
  413474:	test   eax,r15d
  413477:	jne    413b90 <__flatcc_fb_gen_c_verifier@@Base+0x2e00>
  41347d:	test   r12d,r12d
  413480:	jne    413610 <__flatcc_fb_gen_c_verifier@@Base+0x2880>
  413486:	test   r15d,r15d
  413489:	jne    413bc0 <__flatcc_fb_gen_c_verifier@@Base+0x2e30>
  41348f:	mov    r11d,DWORD PTR [rsp+0x28]
  413494:	test   r11d,r11d
  413497:	jne    413be0 <__flatcc_fb_gen_c_verifier@@Base+0x2e50>
  41349d:	mov    r10d,DWORD PTR [rsp+0x30]
  4134a2:	test   r10d,r10d
  4134a5:	jne    413c80 <__flatcc_fb_gen_c_verifier@@Base+0x2ef0>
  4134ab:	mov    r8d,DWORD PTR [rsp+0x2c]
  4134b0:	test   r8d,r8d
  4134b3:	jne    413d90 <__flatcc_fb_gen_c_verifier@@Base+0x3000>
  4134b9:	mov    edi,DWORD PTR [rsp+0x50]
  4134bd:	test   edi,edi
  4134bf:	je     413cd0 <__flatcc_fb_gen_c_verifier@@Base+0x2f40>
  4134c5:	mov    esi,DWORD PTR [rsp+0x58]
  4134c9:	mov    rcx,QWORD PTR [r14+0x88]
  4134d0:	mov    rdx,QWORD PTR [r14+0xa0]
  4134d7:	mov    r8,QWORD PTR [rsp+0x10]
  4134dc:	test   esi,esi
  4134de:	je     413e28 <__flatcc_fb_gen_c_verifier@@Base+0x3098>
  4134e4:	lea    rsi,[rip+0x2f845]        # 442d30 <_IO_stdin_used@@Base+0x15d30>
  4134eb:	mov    rdi,rbx
  4134ee:	xor    eax,eax
  4134f0:	call   4114d0 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  4134f5:	nop    DWORD PTR [rax]
  4134f8:	test   ebp,ebp
  4134fa:	je     41354f <__flatcc_fb_gen_c_verifier@@Base+0x27bf>
  4134fc:	test   r13d,r13d
  4134ff:	je     413c10 <__flatcc_fb_gen_c_verifier@@Base+0x2e80>
  413505:	lea    rsi,[rip+0x2fa74]        # 442f80 <_IO_stdin_used@@Base+0x15f80>
  41350c:	xor    eax,eax
  41350e:	mov    rdi,rbx
  413511:	call   4114d0 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  413516:	mov    eax,DWORD PTR [rbx+0xf0]
  41351c:	test   eax,eax
  41351e:	je     413ca8 <__flatcc_fb_gen_c_verifier@@Base+0x2f18>
  413524:	sub    eax,0x1
  413527:	lea    rsi,[rip+0x2e583]        # 441ab1 <_IO_stdin_used@@Base+0x14ab1>
  41352e:	mov    rdi,rbx
  413531:	mov    DWORD PTR [rbx+0xf0],eax
  413537:	xor    eax,eax
  413539:	call   4114d0 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  41353e:	lea    rsi,[rip+0x2fb3b]        # 443080 <_IO_stdin_used@@Base+0x16080>
  413545:	mov    rdi,rbx
  413548:	xor    eax,eax
  41354a:	call   4114d0 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  41354f:	cmp    DWORD PTR [rsp+0x8],0x1
  413554:	jne    413758 <__flatcc_fb_gen_c_verifier@@Base+0x29c8>
  41355a:	mov    DWORD PTR [rsp+0x8],0x2
  413562:	mov    eax,DWORD PTR [rbx+0xf0]
  413568:	test   eax,eax
  41356a:	je     41413f <__flatcc_fb_gen_c_verifier@@Base+0x33af>
  413570:	sub    eax,0x1
  413573:	lea    rsi,[rip+0x2e779]        # 441cf3 <_IO_stdin_used@@Base+0x14cf3>
  41357a:	mov    rdi,rbx
  41357d:	mov    DWORD PTR [rbx+0xf0],eax
  413583:	xor    eax,eax
  413585:	call   4114d0 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  41358a:	mov    rsi,QWORD PTR [r14+0x90]
  413591:	add    DWORD PTR [rbx+0xf0],0x1
  413598:	mov    rdx,QWORD PTR [rsp+0x10]
  41359d:	mov    rdi,QWORD PTR [rsi+0x18]
  4135a1:	call   407300 <__flatcc_fb_scoped_symbol_name@@Base>
  4135a6:	mov    rax,QWORD PTR [r14+0x90]
  4135ad:	cmp    WORD PTR [rax+0x10],0x0
  4135b2:	jne    413c00 <__flatcc_fb_gen_c_verifier@@Base+0x2e70>
  4135b8:	mov    DWORD PTR [rsp+0x2c],0x1
  4135c0:	lea    rsi,[rip+0x2f1f9]        # 4427c0 <_IO_stdin_used@@Base+0x157c0>
  4135c7:	mov    rdi,rbx
  4135ca:	xor    eax,eax
  4135cc:	xor    ebp,ebp
  4135ce:	call   4114d0 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  4135d3:	mov    r13d,DWORD PTR [rsp+0xc]
  4135d8:	or     r13d,r15d
  4135db:	xor    r12d,r12d
  4135de:	cmp    WORD PTR [rsp+0x48],0x1
  4135e4:	jne    41346f <__flatcc_fb_gen_c_verifier@@Base+0x26df>
  4135ea:	mov    rdx,QWORD PTR [r14+0x78]
  4135ee:	lea    rsi,[rip+0x2f3a3]        # 442998 <_IO_stdin_used@@Base+0x15998>
  4135f5:	xor    eax,eax
  4135f7:	mov    rdi,rbx
  4135fa:	call   4114d0 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  4135ff:	test   r12d,r12d
  413602:	je     413486 <__flatcc_fb_gen_c_verifier@@Base+0x26f6>
  413608:	nop    DWORD PTR [rax+rax*1+0x0]
  413610:	mov    r12,QWORD PTR [rsp+0x18]
  413615:	lea    rsi,[rip+0x2f3fc]        # 442a18 <_IO_stdin_used@@Base+0x15a18>
  41361c:	xor    eax,eax
  41361e:	mov    rdi,rbx
  413621:	mov    rdx,r12
  413624:	call   4114d0 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  413629:	lea    rsi,[rip+0x2e725]        # 441d55 <_IO_stdin_used@@Base+0x14d55>
  413630:	xor    eax,eax
  413632:	mov    rdi,rbx
  413635:	call   4114d0 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  41363a:	add    DWORD PTR [rbx+0xf0],0x1
  413641:	lea    rsi,[rip+0x2f410]        # 442a58 <_IO_stdin_used@@Base+0x15a58>
  413648:	xor    eax,eax
  41364a:	mov    rdx,r12
  41364d:	mov    rdi,rbx
  413650:	call   4114d0 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  413655:	lea    rsi,[rip+0x2f454]        # 442ab0 <_IO_stdin_used@@Base+0x15ab0>
  41365c:	xor    eax,eax
  41365e:	mov    rdi,rbx
  413661:	call   4114d0 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  413666:	mov    eax,DWORD PTR [rbx+0xf0]
  41366c:	test   eax,eax
  41366e:	je     414120 <__flatcc_fb_gen_c_verifier@@Base+0x3390>
  413674:	sub    eax,0x1
  413677:	lea    rsi,[rip+0x2e433]        # 441ab1 <_IO_stdin_used@@Base+0x14ab1>
  41367e:	mov    rdi,rbx
  413681:	mov    DWORD PTR [rbx+0xf0],eax
  413687:	xor    eax,eax
  413689:	call   4114d0 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  41368e:	mov    r12d,DWORD PTR [rsp+0x40]
  413693:	mov    eax,DWORD PTR [rsp+0x44]
  413697:	or     r12d,ebp
  41369a:	or     eax,r12d
  41369d:	jne    413d38 <__flatcc_fb_gen_c_verifier@@Base+0x2fa8>
  4136a3:	movzx  eax,WORD PTR [r14+0x58]
  4136a8:	cmp    ax,0x4
  4136ac:	je     413e00 <__flatcc_fb_gen_c_verifier@@Base+0x3070>
  4136b2:	ja     413d60 <__flatcc_fb_gen_c_verifier@@Base+0x2fd0>
  4136b8:	cmp    ax,0x3
  4136bc:	jne    413db0 <__flatcc_fb_gen_c_verifier@@Base+0x3020>
  4136c2:	vmovsd xmm0,QWORD PTR [r14+0x48]
  4136c8:	lea    rsi,[rip+0x2f4a1]        # 442b70 <_IO_stdin_used@@Base+0x15b70>
  4136cf:	mov    rdi,rbx
  4136d2:	mov    eax,0x1
  4136d7:	call   4114d0 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  4136dc:	add    DWORD PTR [rbx+0xf0],0x1
  4136e3:	movsx  r8d,WORD PTR [r14+0x72]
  4136e8:	mov    rcx,QWORD PTR [r14+0x80]
  4136ef:	lea    rsi,[rip+0x2f4f2]        # 442be8 <_IO_stdin_used@@Base+0x15be8>
  4136f6:	mov    rdx,QWORD PTR [r14+0x88]
  4136fd:	mov    rdi,rbx
  413700:	xor    eax,eax
  413702:	call   4114d0 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  413707:	mov    rcx,QWORD PTR [rsp+0x18]
  41370c:	lea    rsi,[rip+0x2e655]        # 441d68 <_IO_stdin_used@@Base+0x14d68>
  413713:	mov    rdx,rbx
  413716:	mov    rdi,rbx
  413719:	xor    eax,eax
  41371b:	call   4114d0 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  413720:	mov    eax,DWORD PTR [rbx+0xf0]
  413726:	test   eax,eax
  413728:	je     4141fb <__flatcc_fb_gen_c_verifier@@Base+0x346b>
  41372e:	sub    eax,0x1
  413731:	lea    rsi,[rip+0x2e379]        # 441ab1 <_IO_stdin_used@@Base+0x14ab1>
  413738:	mov    rdi,rbx
  41373b:	mov    DWORD PTR [rbx+0xf0],eax
  413741:	xor    eax,eax
  413743:	call   4114d0 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  413748:	cmp    DWORD PTR [rsp+0x8],0x1
  41374d:	je     41355a <__flatcc_fb_gen_c_verifier@@Base+0x27ca>
  413753:	nop    DWORD PTR [rax+rax*1+0x0]
  413758:	cmp    DWORD PTR [rsp+0x8],0x2
  41375d:	je     41408e <__flatcc_fb_gen_c_verifier@@Base+0x32fe>
  413763:	mov    eax,DWORD PTR [rsp+0x4c]
  413767:	or     eax,DWORD PTR [rsp+0x54]
  41376b:	or     eax,DWORD PTR [rsp+0x28]
  41376f:	or     eax,DWORD PTR [rsp+0x8]
  413773:	or     eax,DWORD PTR [rsp+0x2c]
  413777:	or     eax,ebp
  413779:	je     4137a4 <__flatcc_fb_gen_c_verifier@@Base+0x2a14>
  41377b:	mov    rdx,QWORD PTR [r14+0x88]
  413782:	lea    rsi,[rip+0x2f867]        # 442ff0 <_IO_stdin_used@@Base+0x15ff0>
  413789:	mov    rdi,rbx
  41378c:	xor    eax,eax
  41378e:	call   4114d0 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  413793:	lea    rsi,[rip+0x2e5eb]        # 441d85 <_IO_stdin_used@@Base+0x14d85>
  41379a:	mov    rdi,rbx
  41379d:	xor    eax,eax
  41379f:	call   4114d0 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  4137a4:	xor    eax,eax
  4137a6:	mov    rcx,QWORD PTR [rsp+0x228]
  4137ae:	xor    rcx,QWORD PTR fs:0x28
  4137b7:	jne    4141ae <__flatcc_fb_gen_c_verifier@@Base+0x341e>
  4137bd:	add    rsp,0x238
  4137c4:	pop    rbx
  4137c5:	pop    rbp
  4137c6:	pop    r12
  4137c8:	pop    r13
  4137ca:	pop    r14
  4137cc:	pop    r15
  4137ce:	ret    
  4137cf:	nop
  4137d0:	mov    edx,DWORD PTR [r14+0x18]
  4137d4:	mov    DWORD PTR [rsp+0x8],0x0
  4137dc:	mov    DWORD PTR [rsp+0x54],0x0
  4137e4:	mov    DWORD PTR [rsp+0x4c],0x0
  4137ec:	mov    eax,ebp
  4137ee:	xor    r15d,r15d
  4137f1:	mov    DWORD PTR [rsp+0x2c],0x0
  4137f9:	and    eax,0x1
  4137fc:	mov    DWORD PTR [rsp+0x28],0x0
  413804:	mov    DWORD PTR [rsp+0x34],0x0
  41380c:	mov    BYTE PTR [rsp+0x4b],al
  413810:	mov    DWORD PTR [rsp+0x30],0x0
  413818:	mov    r12d,0x1
  41381e:	jmp    413349 <__flatcc_fb_gen_c_verifier@@Base+0x25b9>
  413823:	nop    DWORD PTR [rax+rax*1+0x0]
  413828:	xor    eax,eax
  41382a:	cmp    QWORD PTR [r14+0x90],0x0
  413832:	setne  al
  413835:	mov    DWORD PTR [rsp+0x8],eax
  413839:	movzx  eax,WORD PTR [r14+0x70]
  41383e:	mov    edx,eax
  413840:	and    dx,0x400
  413845:	movzx  edx,dx
  413848:	mov    DWORD PTR [rsp+0x4c],edx
  41384c:	mov    edx,eax
  41384e:	and    dx,0x800
  413853:	and    eax,0xc00
  413858:	movzx  edx,dx
  41385b:	mov    DWORD PTR [rsp+0x30],eax
  41385f:	mov    DWORD PTR [rsp+0x54],edx
  413863:	mov    edx,DWORD PTR [r14+0x18]
  413867:	je     4137ec <__flatcc_fb_gen_c_verifier@@Base+0x2a5c>
  413869:	cmp    edx,0x4
  41386c:	setne  al
  41386f:	xor    ecx,0x1
  413872:	or     al,cl
  413874:	mov    BYTE PTR [rsp+0x4b],al
  413878:	jne    41415e <__flatcc_fb_gen_c_verifier@@Base+0x33ce>
  41387e:	mov    r13d,DWORD PTR [rsp+0xc]
  413883:	xor    r15d,r15d
  413886:	xor    r12d,r12d
  413889:	xor    ebp,ebp
  41388b:	mov    DWORD PTR [rsp+0x2c],0x0
  413893:	mov    DWORD PTR [rsp+0x28],0x0
  41389b:	mov    DWORD PTR [rsp+0x34],0x0
  4138a3:	mov    edx,0x4
  4138a8:	mov    DWORD PTR [rsp+0x8],0x0
  4138b0:	test   r13d,r13d
  4138b3:	jne    413357 <__flatcc_fb_gen_c_verifier@@Base+0x25c7>
  4138b9:	mov    DWORD PTR [rsp+0x50],0x0
  4138c1:	movzx  ecx,BYTE PTR [rsp+0x50]
  4138c6:	and    BYTE PTR [rsp+0x4b],cl
  4138ca:	je     41410b <__flatcc_fb_gen_c_verifier@@Base+0x337b>
  4138d0:	xor    ebp,ebp
  4138d2:	cmp    DWORD PTR [rsp+0x8],0x1
  4138d7:	mov    BYTE PTR [rsp+0x4b],0x0
  4138dc:	mov    DWORD PTR [rsp+0x5c],0x0
  4138e4:	mov    DWORD PTR [rsp+0x58],0x1
  4138ec:	jne    41338d <__flatcc_fb_gen_c_verifier@@Base+0x25fd>
  4138f2:	lea    rsi,[rip+0x2ee8f]        # 442788 <_IO_stdin_used@@Base+0x15788>
  4138f9:	mov    rdi,rbx
  4138fc:	xor    eax,eax
  4138fe:	mov    DWORD PTR [rsp+0x18],edx
  413902:	call   4114d0 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  413907:	add    DWORD PTR [rbx+0xf0],0x1
  41390e:	mov    edx,DWORD PTR [rsp+0x18]
  413912:	jmp    41338d <__flatcc_fb_gen_c_verifier@@Base+0x25fd>
  413917:	nop    WORD PTR [rax+rax*1+0x0]
  413920:	mov    rsi,QWORD PTR [r14+0x18]
  413924:	mov    rdx,QWORD PTR [rsp+0x10]
  413929:	mov    rdi,QWORD PTR [rsi+0x18]
  41392d:	call   407300 <__flatcc_fb_scoped_symbol_name@@Base>
  413932:	mov    rdx,QWORD PTR [r14+0x18]
  413936:	xor    ecx,ecx
  413938:	movzx  eax,WORD PTR [rdx+0x10]
  41393c:	cmp    ax,0x3
  413940:	sete   cl
  413943:	xor    r15d,r15d
  413946:	cmp    ax,0x1
  41394a:	sete   r15b
  41394e:	mov    DWORD PTR [rsp+0x34],ecx
  413952:	xor    ecx,ecx
  413954:	test   ax,ax
  413957:	sete   cl
  41395a:	mov    DWORD PTR [rsp+0x2c],ecx
  41395e:	mov    ecx,DWORD PTR [rsp+0xc]
  413962:	test   ecx,ecx
  413964:	jne    414050 <__flatcc_fb_gen_c_verifier@@Base+0x32c0>
  41396a:	cmp    ax,0x4
  41396e:	jne    414050 <__flatcc_fb_gen_c_verifier@@Base+0x32c0>
  413974:	mov    eax,ebp
  413976:	mov    DWORD PTR [rsp+0x28],0x0
  41397e:	mov    DWORD PTR [rsp+0x50],0x1
  413986:	and    eax,0x1
  413989:	xor    edx,edx
  41398b:	mov    DWORD PTR [rsp+0x30],0x0
  413993:	mov    BYTE PTR [rsp+0x4b],al
  413997:	mov    DWORD PTR [rsp+0x54],0x0
  41399f:	xor    r12d,r12d
  4139a2:	mov    DWORD PTR [rsp+0x4c],0x0
  4139aa:	mov    DWORD PTR [rsp+0x8],0x0
  4139b2:	jmp    4138c1 <__flatcc_fb_gen_c_verifier@@Base+0x2b31>
  4139b7:	nop    WORD PTR [rax+rax*1+0x0]
  4139c0:	cmp    edx,0xb
  4139c3:	ja     413b40 <__flatcc_fb_gen_c_verifier@@Base+0x2db0>
  4139c9:	lea    rcx,[rip+0x305c4]        # 443f94 <_IO_stdin_used@@Base+0x16f94>
  4139d0:	movsxd rax,DWORD PTR [rcx+rdx*4]
  4139d4:	add    rax,rcx
  4139d7:	jmp    rax
  4139d9:	nop    DWORD PTR [rax+0x0]
  4139e0:	test   ebp,ebp
  4139e2:	je     413e40 <__flatcc_fb_gen_c_verifier@@Base+0x30b0>
  4139e8:	lea    rax,[rip+0x228c6]        # 4362b5 <_IO_stdin_used@@Base+0x92b5>
  4139ef:	test   r13d,r13d
  4139f2:	mov    r12d,ebp
  4139f5:	mov    QWORD PTR [rsp+0x18],rax
  4139fa:	lea    rax,[rip+0x22796]        # 436197 <_IO_stdin_used@@Base+0x9197>
  413a01:	mov    QWORD PTR [rsp+0x20],rax
  413a06:	jne    4133da <__flatcc_fb_gen_c_verifier@@Base+0x264a>
  413a0c:	nop    DWORD PTR [rax+0x0]
  413a10:	lea    rsi,[rip+0x2edf1]        # 442808 <_IO_stdin_used@@Base+0x15808>
  413a17:	mov    rdi,rbx
  413a1a:	xor    eax,eax
  413a1c:	call   4114d0 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  413a21:	jmp    413410 <__flatcc_fb_gen_c_verifier@@Base+0x2680>
  413a26:	nop    WORD PTR cs:[rax+rax*1+0x0]
  413a30:	lea    rax,[rip+0x22757]        # 43618e <_IO_stdin_used@@Base+0x918e>
  413a37:	mov    QWORD PTR [rsp+0x20],rax
  413a3c:	lea    rax,[rip+0x22865]        # 4362a8 <_IO_stdin_used@@Base+0x92a8>
  413a43:	mov    QWORD PTR [rsp+0x18],rax
  413a48:	xor    r12d,r12d
  413a4b:	test   ebp,ebp
  413a4d:	jne    413b38 <__flatcc_fb_gen_c_verifier@@Base+0x2da8>
  413a53:	mov    rdx,QWORD PTR [rsp+0x20]
  413a58:	lea    rsi,[rip+0x2e2b9]        # 441d18 <_IO_stdin_used@@Base+0x14d18>
  413a5f:	xor    eax,eax
  413a61:	mov    rdi,rbx
  413a64:	call   4114d0 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  413a69:	lea    rsi,[rip+0x2ee70]        # 4428e0 <_IO_stdin_used@@Base+0x158e0>
  413a70:	xor    eax,eax
  413a72:	mov    rdi,rbx
  413a75:	call   4114d0 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  413a7a:	mov    ebp,DWORD PTR [rsp+0x34]
  413a7e:	add    DWORD PTR [rbx+0xf0],0x2
  413a85:	test   ebp,ebp
  413a87:	je     413a9f <__flatcc_fb_gen_c_verifier@@Base+0x2d0f>
  413a89:	mov    rdx,QWORD PTR [rsp+0x10]
  413a8e:	lea    rsi,[rip+0x2e28f]        # 441d24 <_IO_stdin_used@@Base+0x14d24>
  413a95:	mov    rdi,rbx
  413a98:	xor    eax,eax
  413a9a:	call   4114d0 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  413a9f:	mov    rax,QWORD PTR [rbx+0xd8]
  413aa6:	mov    rcx,QWORD PTR [rsp+0x38]
  413aab:	lea    rsi,[rip+0x2e286]        # 441d38 <_IO_stdin_used@@Base+0x14d38>
  413ab2:	mov    rdi,rbx
  413ab5:	mov    rdx,QWORD PTR [rax+0x110]
  413abc:	xor    eax,eax
  413abe:	call   4114d0 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  413ac3:	mov    rax,QWORD PTR [rbx+0xd8]
  413aca:	lea    rsi,[rip+0x2ee57]        # 442928 <_IO_stdin_used@@Base+0x15928>
  413ad1:	mov    rdi,rbx
  413ad4:	mov    rdx,QWORD PTR [rax+0x110]
  413adb:	xor    eax,eax
  413add:	call   4114d0 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  413ae2:	mov    eax,DWORD PTR [rbx+0xf0]
  413ae8:	test   eax,eax
  413aea:	je     4140e7 <__flatcc_fb_gen_c_verifier@@Base+0x3357>
  413af0:	cmp    eax,0x1
  413af3:	je     4140dd <__flatcc_fb_gen_c_verifier@@Base+0x334d>
  413af9:	sub    eax,0x2
  413afc:	mov    ebp,r12d
  413aff:	mov    r12d,0x1
  413b05:	mov    DWORD PTR [rbx+0xf0],eax
  413b0b:	jmp    413447 <__flatcc_fb_gen_c_verifier@@Base+0x26b7>
  413b10:	lea    rax,[rip+0x22665]        # 43617c <_IO_stdin_used@@Base+0x917c>
  413b17:	xor    r12d,r12d
  413b1a:	test   ebp,ebp
  413b1c:	mov    QWORD PTR [rsp+0x20],rax
  413b21:	lea    rax,[rip+0x22772]        # 43629a <_IO_stdin_used@@Base+0x929a>
  413b28:	mov    QWORD PTR [rsp+0x18],rax
  413b2d:	je     413a53 <__flatcc_fb_gen_c_verifier@@Base+0x2cc3>
  413b33:	nop    DWORD PTR [rax+rax*1+0x0]
  413b38:	mov    r12d,ebp
  413b3b:	jmp    4133d1 <__flatcc_fb_gen_c_verifier@@Base+0x2641>
  413b40:	mov    rax,QWORD PTR [rip+0x3d4a1]        # 450fe8 <stderr@GLIBC_2.2.5>
  413b47:	lea    rcx,[rip+0x1b0c2]        # 42ec10 <_IO_stdin_used@@Base+0x1c10>
  413b4e:	lea    rdx,[rip+0x2268c]        # 4361e1 <_IO_stdin_used@@Base+0x91e1>
  413b55:	lea    r9,[rip+0x1b07c]        # 42ebd8 <_IO_stdin_used@@Base+0x1bd8>
  413b5c:	mov    esi,0x1
  413b61:	mov    r8d,0x60
  413b67:	mov    rdi,QWORD PTR [rax]
  413b6a:	xor    eax,eax
  413b6c:	call   405200 <__fprintf_chk@plt>
  413b71:	lea    rcx,[rip+0x30538]        # 4440b0 <_IO_stdin_used@@Base+0x170b0>
  413b78:	lea    rsi,[rip+0x1b091]        # 42ec10 <_IO_stdin_used@@Base+0x1c10>
  413b7f:	lea    rdi,[rip+0x236a3]        # 437229 <_IO_stdin_used@@Base+0xa229>
  413b86:	mov    edx,0x60
  413b8b:	call   405100 <__assert_fail@plt>
  413b90:	movzx  r8d,WORD PTR [r14+0x72]
  413b95:	mov    rcx,QWORD PTR [r14+0x80]
  413b9c:	lea    rsi,[rip+0x2ee25]        # 4429c8 <_IO_stdin_used@@Base+0x159c8>
  413ba3:	mov    rdx,QWORD PTR [r14+0x88]
  413baa:	mov    rdi,rbx
  413bad:	xor    eax,eax
  413baf:	call   4114d0 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  413bb4:	jmp    41347d <__flatcc_fb_gen_c_verifier@@Base+0x26ed>
  413bb9:	nop    DWORD PTR [rax+0x0]
  413bc0:	mov    rdx,QWORD PTR [rsp+0x10]
  413bc5:	lea    rsi,[rip+0x2f06c]        # 442c38 <_IO_stdin_used@@Base+0x15c38>
  413bcc:	mov    rdi,rbx
  413bcf:	xor    eax,eax
  413bd1:	call   4114d0 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  413bd6:	jmp    4134f8 <__flatcc_fb_gen_c_verifier@@Base+0x2768>
  413bdb:	nop    DWORD PTR [rax+rax*1+0x0]
  413be0:	lea    rsi,[rip+0x2f089]        # 442c70 <_IO_stdin_used@@Base+0x15c70>
  413be7:	mov    rdi,rbx
  413bea:	xor    eax,eax
  413bec:	call   4114d0 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  413bf1:	jmp    4134f8 <__flatcc_fb_gen_c_verifier@@Base+0x2768>
  413bf6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  413c00:	mov    r15d,0x1
  413c06:	jmp    4135c0 <__flatcc_fb_gen_c_verifier@@Base+0x2830>
  413c0b:	nop    DWORD PTR [rax+rax*1+0x0]
  413c10:	lea    rsi,[rip+0x2f311]        # 442f28 <_IO_stdin_used@@Base+0x15f28>
  413c17:	xor    eax,eax
  413c19:	mov    rdi,rbx
  413c1c:	call   4114d0 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  413c21:	lea    rsi,[rip+0x2e15d]        # 441d85 <_IO_stdin_used@@Base+0x14d85>
  413c28:	xor    eax,eax
  413c2a:	mov    rdi,rbx
  413c2d:	call   4114d0 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  413c32:	lea    rsi,[rip+0x2f347]        # 442f80 <_IO_stdin_used@@Base+0x15f80>
  413c39:	xor    eax,eax
  413c3b:	mov    rdi,rbx
  413c3e:	call   4114d0 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  413c43:	mov    eax,DWORD PTR [rbx+0xf0]
  413c49:	test   eax,eax
  413c4b:	je     413ca8 <__flatcc_fb_gen_c_verifier@@Base+0x2f18>
  413c4d:	sub    eax,0x1
  413c50:	lea    rsi,[rip+0x2de5a]        # 441ab1 <_IO_stdin_used@@Base+0x14ab1>
  413c57:	mov    rdi,rbx
  413c5a:	mov    DWORD PTR [rbx+0xf0],eax
  413c60:	xor    eax,eax
  413c62:	call   4114d0 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  413c67:	lea    rsi,[rip+0x2f3da]        # 443048 <_IO_stdin_used@@Base+0x16048>
  413c6e:	mov    rdi,rbx
  413c71:	xor    eax,eax
  413c73:	call   4114d0 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  413c78:	jmp    41354f <__flatcc_fb_gen_c_verifier@@Base+0x27bf>
  413c7d:	nop    DWORD PTR [rax]
  413c80:	mov    r9d,DWORD PTR [rsp+0x4c]
  413c85:	xor    edx,edx
  413c87:	lea    rsi,[rip+0x2f022]        # 442cb0 <_IO_stdin_used@@Base+0x15cb0>
  413c8e:	mov    rdi,rbx
  413c91:	test   r9d,r9d
  413c94:	sete   dl
  413c97:	xor    eax,eax
  413c99:	call   4114d0 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  413c9e:	jmp    4134f8 <__flatcc_fb_gen_c_verifier@@Base+0x2768>
  413ca3:	nop    DWORD PTR [rax+rax*1+0x0]
  413ca8:	lea    rcx,[rip+0x30421]        # 4440d0 <_IO_stdin_used@@Base+0x170d0>
  413caf:	lea    rsi,[rip+0x2e382]        # 442038 <_IO_stdin_used@@Base+0x15038>
  413cb6:	lea    rdi,[rip+0x2dde8]        # 441aa5 <_IO_stdin_used@@Base+0x14aa5>
  413cbd:	mov    edx,0x287
  413cc2:	call   405100 <__assert_fail@plt>
  413cc7:	nop    WORD PTR [rax+rax*1+0x0]
  413cd0:	cmp    BYTE PTR [rsp+0x4b],0x0
  413cd5:	jne    413e60 <__flatcc_fb_gen_c_verifier@@Base+0x30d0>
  413cdb:	test   ebp,ebp
  413cdd:	jne    4134fc <__flatcc_fb_gen_c_verifier@@Base+0x276c>
  413ce3:	mov    rax,QWORD PTR [rip+0x3d2fe]        # 450fe8 <stderr@GLIBC_2.2.5>
  413cea:	lea    rcx,[rip+0x2e347]        # 442038 <_IO_stdin_used@@Base+0x15038>
  413cf1:	lea    rdx,[rip+0x224e9]        # 4361e1 <_IO_stdin_used@@Base+0x91e1>
  413cf8:	lea    r9,[rip+0x2f1f1]        # 442ef0 <_IO_stdin_used@@Base+0x15ef0>
  413cff:	mov    esi,0x1
  413d04:	mov    r8d,0x27c
  413d0a:	mov    rdi,QWORD PTR [rax]
  413d0d:	xor    eax,eax
  413d0f:	call   405200 <__fprintf_chk@plt>
  413d14:	lea    rcx,[rip+0x303b5]        # 4440d0 <_IO_stdin_used@@Base+0x170d0>
  413d1b:	lea    rsi,[rip+0x2e316]        # 442038 <_IO_stdin_used@@Base+0x15038>
  413d22:	lea    rdi,[rip+0x23500]        # 437229 <_IO_stdin_used@@Base+0xa229>
  413d29:	mov    edx,0x27c
  413d2e:	call   405100 <__assert_fail@plt>
  413d33:	nop    DWORD PTR [rax+rax*1+0x0]
  413d38:	mov    rcx,QWORD PTR [rsp+0x18]
  413d3d:	lea    rsi,[rip+0x2e024]        # 441d68 <_IO_stdin_used@@Base+0x14d68>
  413d44:	xor    eax,eax
  413d46:	mov    rdx,rbx
  413d49:	mov    rdi,rbx
  413d4c:	call   4114d0 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  413d51:	test   r12d,r12d
  413d54:	jne    4134f8 <__flatcc_fb_gen_c_verifier@@Base+0x2768>
  413d5a:	jmp    413720 <__flatcc_fb_gen_c_verifier@@Base+0x2990>
  413d5f:	nop
  413d60:	cmp    ax,0x6
  413d64:	ja     413db0 <__flatcc_fb_gen_c_verifier@@Base+0x3020>
  413d66:	mov    rdx,QWORD PTR [r14+0x48]
  413d6a:	lea    rsi,[rip+0x2ed6f]        # 442ae0 <_IO_stdin_used@@Base+0x15ae0>
  413d71:	mov    rdi,rbx
  413d74:	xor    eax,eax
  413d76:	call   4114d0 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  413d7b:	add    DWORD PTR [rbx+0xf0],0x1
  413d82:	jmp    4136e3 <__flatcc_fb_gen_c_verifier@@Base+0x2953>
  413d87:	nop    WORD PTR [rax+rax*1+0x0]
  413d90:	mov    rdx,QWORD PTR [rsp+0x10]
  413d95:	lea    rsi,[rip+0x2ef64]        # 442d00 <_IO_stdin_used@@Base+0x15d00>
  413d9c:	mov    rdi,rbx
  413d9f:	xor    eax,eax
  413da1:	call   4114d0 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  413da6:	jmp    4134f8 <__flatcc_fb_gen_c_verifier@@Base+0x2768>
  413dab:	nop    DWORD PTR [rax+rax*1+0x0]
  413db0:	mov    rax,QWORD PTR [rip+0x3d231]        # 450fe8 <stderr@GLIBC_2.2.5>
  413db7:	lea    rcx,[rip+0x2e27a]        # 442038 <_IO_stdin_used@@Base+0x15038>
  413dbe:	lea    rdx,[rip+0x2241c]        # 4361e1 <_IO_stdin_used@@Base+0x91e1>
  413dc5:	lea    r9,[rip+0x2edec]        # 442bb8 <_IO_stdin_used@@Base+0x15bb8>
  413dcc:	mov    esi,0x1
  413dd1:	mov    r8d,0x24e
  413dd7:	mov    rdi,QWORD PTR [rax]
  413dda:	xor    eax,eax
  413ddc:	call   405200 <__fprintf_chk@plt>
  413de1:	lea    rcx,[rip+0x302e8]        # 4440d0 <_IO_stdin_used@@Base+0x170d0>
  413de8:	lea    rsi,[rip+0x2e249]        # 442038 <_IO_stdin_used@@Base+0x15038>
  413def:	lea    rdi,[rip+0x23433]        # 437229 <_IO_stdin_used@@Base+0xa229>
  413df6:	mov    edx,0x24e
  413dfb:	call   405100 <__assert_fail@plt>
  413e00:	mov    rdx,QWORD PTR [r14+0x48]
  413e04:	lea    rsi,[rip+0x2ed1d]        # 442b28 <_IO_stdin_used@@Base+0x15b28>
  413e0b:	mov    rdi,rbx
  413e0e:	xor    eax,eax
  413e10:	call   4114d0 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  413e15:	add    DWORD PTR [rbx+0xf0],0x1
  413e1c:	jmp    4136e3 <__flatcc_fb_gen_c_verifier@@Base+0x2953>
  413e21:	nop    DWORD PTR [rax+0x0]
  413e28:	lea    rsi,[rip+0x2ef61]        # 442d90 <_IO_stdin_used@@Base+0x15d90>
  413e2f:	mov    rdi,rbx
  413e32:	xor    eax,eax
  413e34:	call   4114d0 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  413e39:	jmp    4134f8 <__flatcc_fb_gen_c_verifier@@Base+0x2768>
  413e3e:	xchg   ax,ax
  413e40:	lea    rax,[rip+0x2246e]        # 4362b5 <_IO_stdin_used@@Base+0x92b5>
  413e47:	xor    r12d,r12d
  413e4a:	mov    QWORD PTR [rsp+0x18],rax
  413e4f:	lea    rax,[rip+0x22341]        # 436197 <_IO_stdin_used@@Base+0x9197>
  413e56:	mov    QWORD PTR [rsp+0x20],rax
  413e5b:	jmp    413a53 <__flatcc_fb_gen_c_verifier@@Base+0x2cc3>
  413e60:	lea    rsi,[rip+0x2ea79]        # 4428e0 <_IO_stdin_used@@Base+0x158e0>
  413e67:	xor    eax,eax
  413e69:	mov    rdi,rbx
  413e6c:	call   4114d0 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  413e71:	add    DWORD PTR [rbx+0xf0],0x2
  413e78:	mov    rdx,QWORD PTR [rsp+0x10]
  413e7d:	lea    rsi,[rip+0x2dea0]        # 441d24 <_IO_stdin_used@@Base+0x14d24>
  413e84:	xor    eax,eax
  413e86:	mov    rdi,rbx
  413e89:	call   4114d0 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  413e8e:	mov    rax,QWORD PTR [rbx+0xd8]
  413e95:	mov    rcx,QWORD PTR [rsp+0x38]
  413e9a:	lea    rsi,[rip+0x2de97]        # 441d38 <_IO_stdin_used@@Base+0x14d38>
  413ea1:	mov    rdi,rbx
  413ea4:	mov    rdx,QWORD PTR [rax+0x110]
  413eab:	xor    eax,eax
  413ead:	call   4114d0 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  413eb2:	mov    rax,QWORD PTR [rbx+0xd8]
  413eb9:	lea    rsi,[rip+0x2ea68]        # 442928 <_IO_stdin_used@@Base+0x15928>
  413ec0:	mov    rdi,rbx
  413ec3:	mov    rdx,QWORD PTR [rax+0x110]
  413eca:	xor    eax,eax
  413ecc:	call   4114d0 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  413ed1:	mov    eax,DWORD PTR [rbx+0xf0]
  413ed7:	test   eax,eax
  413ed9:	je     4141dc <__flatcc_fb_gen_c_verifier@@Base+0x344c>
  413edf:	cmp    eax,0x1
  413ee2:	je     4141d2 <__flatcc_fb_gen_c_verifier@@Base+0x3442>
  413ee8:	sub    eax,0x2
  413eeb:	mov    rcx,QWORD PTR [r14+0x88]
  413ef2:	mov    rdx,QWORD PTR [r14+0xa0]
  413ef9:	mov    DWORD PTR [rbx+0xf0],eax
  413eff:	mov    eax,DWORD PTR [rsp+0x5c]
  413f03:	mov    r8,QWORD PTR [rsp+0x10]
  413f08:	test   eax,eax
  413f0a:	je     414030 <__flatcc_fb_gen_c_verifier@@Base+0x32a0>
  413f10:	lea    rsi,[rip+0x2eed1]        # 442de8 <_IO_stdin_used@@Base+0x15de8>
  413f17:	mov    r9,r8
  413f1a:	mov    rdi,rbx
  413f1d:	xor    eax,eax
  413f1f:	call   4114d0 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  413f24:	jmp    4134f8 <__flatcc_fb_gen_c_verifier@@Base+0x2768>
  413f29:	nop    DWORD PTR [rax+0x0]
  413f30:	lea    rax,[rip+0x2226f]        # 4361a6 <_IO_stdin_used@@Base+0x91a6>
  413f37:	mov    QWORD PTR [rsp+0x20],rax
  413f3c:	mov    QWORD PTR [rsp+0x18],rax
  413f41:	jmp    413a48 <__flatcc_fb_gen_c_verifier@@Base+0x2cb8>
  413f46:	nop    WORD PTR cs:[rax+rax*1+0x0]
  413f50:	lea    rax,[rip+0x22255]        # 4361ac <_IO_stdin_used@@Base+0x91ac>
  413f57:	mov    QWORD PTR [rsp+0x20],rax
  413f5c:	mov    QWORD PTR [rsp+0x18],rax
  413f61:	jmp    413a48 <__flatcc_fb_gen_c_verifier@@Base+0x2cb8>
  413f66:	nop    WORD PTR cs:[rax+rax*1+0x0]
  413f70:	lea    rax,[rip+0x22221]        # 436198 <_IO_stdin_used@@Base+0x9198>
  413f77:	mov    QWORD PTR [rsp+0x20],rax
  413f7c:	lea    rax,[rip+0x2232d]        # 4362b0 <_IO_stdin_used@@Base+0x92b0>
  413f83:	mov    QWORD PTR [rsp+0x18],rax
  413f88:	jmp    413a48 <__flatcc_fb_gen_c_verifier@@Base+0x2cb8>
  413f8d:	nop    DWORD PTR [rax]
  413f90:	lea    rax,[rip+0x221f8]        # 43618f <_IO_stdin_used@@Base+0x918f>
  413f97:	mov    QWORD PTR [rsp+0x20],rax
  413f9c:	lea    rax,[rip+0x22306]        # 4362a9 <_IO_stdin_used@@Base+0x92a9>
  413fa3:	mov    QWORD PTR [rsp+0x18],rax
  413fa8:	jmp    413a48 <__flatcc_fb_gen_c_verifier@@Base+0x2cb8>
  413fad:	nop    DWORD PTR [rax]
  413fb0:	lea    rax,[rip+0x221cf]        # 436186 <_IO_stdin_used@@Base+0x9186>
  413fb7:	mov    QWORD PTR [rsp+0x20],rax
  413fbc:	lea    rax,[rip+0x222df]        # 4362a2 <_IO_stdin_used@@Base+0x92a2>
  413fc3:	mov    QWORD PTR [rsp+0x18],rax
  413fc8:	jmp    413a48 <__flatcc_fb_gen_c_verifier@@Base+0x2cb8>
  413fcd:	nop    DWORD PTR [rax]
  413fd0:	lea    rax,[rip+0x221a6]        # 43617d <_IO_stdin_used@@Base+0x917d>
  413fd7:	mov    QWORD PTR [rsp+0x20],rax
  413fdc:	lea    rax,[rip+0x222b8]        # 43629b <_IO_stdin_used@@Base+0x929b>
  413fe3:	mov    QWORD PTR [rsp+0x18],rax
  413fe8:	jmp    413a48 <__flatcc_fb_gen_c_verifier@@Base+0x2cb8>
  413fed:	nop    DWORD PTR [rax]
  413ff0:	lea    rax,[rip+0x221a0]        # 436197 <_IO_stdin_used@@Base+0x9197>
  413ff7:	mov    QWORD PTR [rsp+0x20],rax
  413ffc:	lea    rax,[rip+0x222ac]        # 4362af <_IO_stdin_used@@Base+0x92af>
  414003:	mov    QWORD PTR [rsp+0x18],rax
  414008:	jmp    413a48 <__flatcc_fb_gen_c_verifier@@Base+0x2cb8>
  41400d:	nop    DWORD PTR [rax]
  414010:	lea    rax,[rip+0x2216e]        # 436185 <_IO_stdin_used@@Base+0x9185>
  414017:	mov    QWORD PTR [rsp+0x20],rax
  41401c:	lea    rax,[rip+0x2227e]        # 4362a1 <_IO_stdin_used@@Base+0x92a1>
  414023:	mov    QWORD PTR [rsp+0x18],rax
  414028:	jmp    413a48 <__flatcc_fb_gen_c_verifier@@Base+0x2cb8>
  41402d:	nop    DWORD PTR [rax]
  414030:	lea    rsi,[rip+0x2ee49]        # 442e80 <_IO_stdin_used@@Base+0x15e80>
  414037:	mov    rdi,rbx
  41403a:	xor    eax,eax
  41403c:	call   4114d0 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  414041:	jmp    4134f8 <__flatcc_fb_gen_c_verifier@@Base+0x2768>
  414046:	nop    WORD PTR cs:[rax+rax*1+0x0]
  414050:	cmp    ax,0x3
  414054:	je     414070 <__flatcc_fb_gen_c_verifier@@Base+0x32e0>
  414056:	xor    edx,edx
  414058:	xor    r12d,r12d
  41405b:	mov    DWORD PTR [rsp+0x34],0x0
  414063:	mov    DWORD PTR [rsp+0x28],0x0
  41406b:	jmp    413320 <__flatcc_fb_gen_c_verifier@@Base+0x2590>
  414070:	mov    edx,DWORD PTR [rdx+0x48]
  414073:	mov    r12d,0x1
  414079:	mov    DWORD PTR [rsp+0x34],0x1
  414081:	mov    DWORD PTR [rsp+0x28],0x0
  414089:	jmp    413320 <__flatcc_fb_gen_c_verifier@@Base+0x2590>
  41408e:	lea    rsi,[rip+0x2dcfd]        # 441d92 <_IO_stdin_used@@Base+0x14d92>
  414095:	xor    eax,eax
  414097:	mov    rdi,rbx
  41409a:	call   4114d0 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  41409f:	lea    rsi,[rip+0x2ef1a]        # 442fc0 <_IO_stdin_used@@Base+0x15fc0>
  4140a6:	xor    eax,eax
  4140a8:	mov    rdi,rbx
  4140ab:	call   4114d0 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  4140b0:	mov    eax,DWORD PTR [rbx+0xf0]
  4140b6:	test   eax,eax
  4140b8:	je     4141b3 <__flatcc_fb_gen_c_verifier@@Base+0x3423>
  4140be:	sub    eax,0x1
  4140c1:	lea    rsi,[rip+0x2dce1]        # 441da9 <_IO_stdin_used@@Base+0x14da9>
  4140c8:	mov    rdi,rbx
  4140cb:	mov    DWORD PTR [rbx+0xf0],eax
  4140d1:	xor    eax,eax
  4140d3:	call   4114d0 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  4140d8:	jmp    413763 <__flatcc_fb_gen_c_verifier@@Base+0x29d3>
  4140dd:	mov    DWORD PTR [rbx+0xf0],0x0
  4140e7:	lea    rcx,[rip+0x2ffe2]        # 4440d0 <_IO_stdin_used@@Base+0x170d0>
  4140ee:	lea    rsi,[rip+0x2df43]        # 442038 <_IO_stdin_used@@Base+0x15038>
  4140f5:	lea    rdi,[rip+0x2d9a9]        # 441aa5 <_IO_stdin_used@@Base+0x14aa5>
  4140fc:	mov    edx,0x21b
  414101:	call   405100 <__assert_fail@plt>
  414106:	mov    BYTE PTR [rsp+0x4b],0x1
  41410b:	mov    DWORD PTR [rsp+0x5c],0x0
  414113:	mov    DWORD PTR [rsp+0x58],0x0
  41411b:	jmp    413382 <__flatcc_fb_gen_c_verifier@@Base+0x25f2>
  414120:	lea    rcx,[rip+0x2ffa9]        # 4440d0 <_IO_stdin_used@@Base+0x170d0>
  414127:	lea    rsi,[rip+0x2df0a]        # 442038 <_IO_stdin_used@@Base+0x15038>
  41412e:	lea    rdi,[rip+0x2d970]        # 441aa5 <_IO_stdin_used@@Base+0x14aa5>
  414135:	mov    edx,0x22f
  41413a:	call   405100 <__assert_fail@plt>
  41413f:	lea    rcx,[rip+0x2ff8a]        # 4440d0 <_IO_stdin_used@@Base+0x170d0>
  414146:	lea    rsi,[rip+0x2deeb]        # 442038 <_IO_stdin_used@@Base+0x15038>
  41414d:	lea    rdi,[rip+0x2d951]        # 441aa5 <_IO_stdin_used@@Base+0x14aa5>
  414154:	mov    edx,0x1ea
  414159:	call   405100 <__assert_fail@plt>
  41415e:	mov    rax,QWORD PTR [rip+0x3ce83]        # 450fe8 <stderr@GLIBC_2.2.5>
  414165:	lea    rcx,[rip+0x2decc]        # 442038 <_IO_stdin_used@@Base+0x15038>
  41416c:	lea    rdx,[rip+0x2206e]        # 4361e1 <_IO_stdin_used@@Base+0x91e1>
  414173:	lea    r9,[rip+0x2e5ce]        # 442748 <_IO_stdin_used@@Base+0x15748>
  41417a:	mov    esi,0x1
  41417f:	mov    r8d,0x1d2
  414185:	mov    rdi,QWORD PTR [rax]
  414188:	xor    eax,eax
  41418a:	call   405200 <__fprintf_chk@plt>
  41418f:	lea    rcx,[rip+0x2ff3a]        # 4440d0 <_IO_stdin_used@@Base+0x170d0>
  414196:	lea    rsi,[rip+0x2de9b]        # 442038 <_IO_stdin_used@@Base+0x15038>
  41419d:	lea    rdi,[rip+0x23085]        # 437229 <_IO_stdin_used@@Base+0xa229>
  4141a4:	mov    edx,0x1d2
  4141a9:	call   405100 <__assert_fail@plt>
  4141ae:	call   4050d0 <__stack_chk_fail@plt>
  4141b3:	lea    rcx,[rip+0x2ff16]        # 4440d0 <_IO_stdin_used@@Base+0x170d0>
  4141ba:	lea    rsi,[rip+0x2de77]        # 442038 <_IO_stdin_used@@Base+0x15038>
  4141c1:	lea    rdi,[rip+0x2d8dd]        # 441aa5 <_IO_stdin_used@@Base+0x14aa5>
  4141c8:	mov    edx,0x295
  4141cd:	call   405100 <__assert_fail@plt>
  4141d2:	mov    DWORD PTR [rbx+0xf0],0x0
  4141dc:	lea    rcx,[rip+0x2feed]        # 4440d0 <_IO_stdin_used@@Base+0x170d0>
  4141e3:	lea    rsi,[rip+0x2de4e]        # 442038 <_IO_stdin_used@@Base+0x15038>
  4141ea:	lea    rdi,[rip+0x2d8b4]        # 441aa5 <_IO_stdin_used@@Base+0x14aa5>
  4141f1:	mov    edx,0x273
  4141f6:	call   405100 <__assert_fail@plt>
  4141fb:	lea    rcx,[rip+0x2fece]        # 4440d0 <_IO_stdin_used@@Base+0x170d0>
  414202:	lea    rsi,[rip+0x2de2f]        # 442038 <_IO_stdin_used@@Base+0x15038>
  414209:	lea    rdi,[rip+0x2d895]        # 441aa5 <_IO_stdin_used@@Base+0x14aa5>
  414210:	mov    edx,0x25a
  414215:	call   405100 <__assert_fail@plt>
  41421a:	nop    WORD PTR [rax+rax*1+0x0]
  414220:	push   r13
  414222:	push   r12
  414224:	xor    eax,eax
  414226:	push   rbp
  414227:	push   rbx
  414228:	mov    rbp,rsi
  41422b:	lea    rsi,[rip+0x2ee7e]        # 4430b0 <_IO_stdin_used@@Base+0x160b0>
  414232:	mov    r12,rdx
  414235:	mov    edx,r8d
  414238:	sub    rsp,0x8
  41423c:	mov    rbx,rdi
  41423f:	mov    r13d,ecx
  414242:	call   4114d0 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  414247:	lea    rsi,[rip+0x2db6e]        # 441dbc <_IO_stdin_used@@Base+0x14dbc>
  41424e:	xor    eax,eax
  414250:	mov    rdi,rbx
  414253:	call   4114d0 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  414258:	add    DWORD PTR [rbx+0xf0],0x1
  41425f:	lea    rdx,[rbp+0x18]
  414263:	lea    rsi,[rbp+0x10]
  414267:	mov    r8d,r13d
  41426a:	mov    rcx,r12
  41426d:	mov    rdi,rbx
  414270:	call   413220 <__flatcc_fb_gen_c_verifier@@Base+0x2490>
  414275:	mov    eax,DWORD PTR [rbx+0xf0]
  41427b:	test   eax,eax
  41427d:	je     4142ab <__flatcc_fb_gen_c_verifier@@Base+0x351b>
  41427f:	sub    eax,0x1
  414282:	lea    rsi,[rip+0x2d978]        # 441c01 <_IO_stdin_used@@Base+0x14c01>
  414289:	mov    rdi,rbx
  41428c:	mov    DWORD PTR [rbx+0xf0],eax
  414292:	xor    eax,eax
  414294:	call   4114d0 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  414299:	add    DWORD PTR [rbx+0xf0],0x1
  4142a0:	add    rsp,0x8
  4142a4:	pop    rbx
  4142a5:	pop    rbp
  4142a6:	pop    r12
  4142a8:	pop    r13
  4142aa:	ret    
  4142ab:	lea    rcx,[rip+0x2fe3e]        # 4440f0 <_IO_stdin_used@@Base+0x170f0>
  4142b2:	lea    rsi,[rip+0x2dd7f]        # 442038 <_IO_stdin_used@@Base+0x15038>
  4142b9:	lea    rdi,[rip+0x2d7e5]        # 441aa5 <_IO_stdin_used@@Base+0x14aa5>
  4142c0:	mov    edx,0x2a3
  4142c5:	call   405100 <__assert_fail@plt>
  4142ca:	nop    WORD PTR [rax+rax*1+0x0]
  4142d0:	test   rdi,rdi
  4142d3:	push   r14
  4142d5:	push   r13
  4142d7:	push   r12
  4142d9:	push   rbp
  4142da:	push   rbx
  4142db:	je     41443a <__flatcc_fb_gen_c_verifier@@Base+0x36aa>
  4142e1:	mov    rbx,rdi
  4142e4:	mov    rax,rdi
  4142e7:	xor    ecx,ecx
  4142e9:	xor    edi,edi
  4142eb:	jmp    4142fb <__flatcc_fb_gen_c_verifier@@Base+0x356b>
  4142ed:	nop    DWORD PTR [rax]
  4142f0:	add    ecx,0x1
  4142f3:	mov    rax,QWORD PTR [rax]
  4142f6:	test   rax,rax
  4142f9:	je     414330 <__flatcc_fb_gen_c_verifier@@Base+0x35a0>
  4142fb:	test   BYTE PTR [rax+0x70],0x4
  4142ff:	jne    4142f3 <__flatcc_fb_gen_c_verifier@@Base+0x3563>
  414301:	movzx  edx,WORD PTR [rax+0x28]
  414305:	sub    edx,0xe
  414308:	cmp    dx,0x1
  41430c:	ja     4142f0 <__flatcc_fb_gen_c_verifier@@Base+0x3560>
  41430e:	mov    rdx,QWORD PTR [rax+0x18]
  414312:	cmp    WORD PTR [rdx+0x10],0x4
  414317:	jne    4142f0 <__flatcc_fb_gen_c_verifier@@Base+0x3560>
  414319:	mov    rdx,QWORD PTR [rax+0x8]
  41431d:	add    edi,0x6
  414320:	add    ecx,0x1
  414323:	add    edi,DWORD PTR [rdx+0x8]
  414326:	jmp    4142f0 <__flatcc_fb_gen_c_verifier@@Base+0x3560>
  414328:	nop    DWORD PTR [rax+rax*1+0x0]
  414330:	test   ecx,ecx
  414332:	mov    DWORD PTR [rsi],ecx
  414334:	je     414440 <__flatcc_fb_gen_c_verifier@@Base+0x36b0>
  41433a:	movsxd r12,ecx
  41433d:	movsxd rdi,edi
  414340:	mov    rbp,r12
  414343:	shl    rbp,0x5
  414347:	add    rdi,rbp
  41434a:	call   405180 <malloc@plt>
  41434f:	test   rax,rax
  414352:	mov    r14,rax
  414355:	je     414440 <__flatcc_fb_gen_c_verifier@@Base+0x36b0>
  41435b:	lea    rcx,[rax+rbp*1]
  41435f:	xor    r8d,r8d
  414362:	mov    rbp,rax
  414365:	jmp    41437f <__flatcc_fb_gen_c_verifier@@Base+0x35ef>
  414367:	nop    WORD PTR [rax+rax*1+0x0]
  414370:	mov    rbp,rdi
  414373:	mov    rbx,QWORD PTR [rbx]
  414376:	test   rbx,rbx
  414379:	je     414417 <__flatcc_fb_gen_c_verifier@@Base+0x3687>
  41437f:	test   BYTE PTR [rbx+0x70],0x4
  414383:	jne    414373 <__flatcc_fb_gen_c_verifier@@Base+0x35e3>
  414385:	mov    rax,QWORD PTR [rbx+0x8]
  414389:	lea    rdi,[rbp+0x20]
  41438d:	mov    rsi,QWORD PTR [rax]
  414390:	mov    rdx,QWORD PTR [rax+0x8]
  414394:	movzx  eax,WORD PTR [rbx+0x28]
  414398:	mov    QWORD PTR [rbp+0x10],rbx
  41439c:	mov    DWORD PTR [rbp+0x18],0x0
  4143a3:	mov    QWORD PTR [rbp+0x0],rsi
  4143a7:	mov    DWORD PTR [rbp+0x8],edx
  4143aa:	sub    eax,0xe
  4143ad:	cmp    ax,0x1
  4143b1:	ja     414370 <__flatcc_fb_gen_c_verifier@@Base+0x35e0>
  4143b3:	mov    rax,QWORD PTR [rbx+0x18]
  4143b7:	cmp    WORD PTR [rax+0x10],0x4
  4143bc:	jne    414370 <__flatcc_fb_gen_c_verifier@@Base+0x35e0>
  4143be:	lea    eax,[rdx+0x5]
  4143c1:	mov    QWORD PTR [rbx+0xa0],r8
  4143c8:	mov    rdi,rcx
  4143cb:	mov    QWORD PTR [rbp+0x20],rcx
  4143cf:	lea    r13d,[r8+0x1]
  4143d3:	add    rbp,0x40
  4143d7:	mov    DWORD PTR [rbp-0x18],eax
  4143da:	call   405170 <memcpy@plt>
  4143df:	mov    rcx,rax
  4143e2:	mov    rax,QWORD PTR [rbx+0x8]
  4143e6:	movsxd r8,r13d
  4143e9:	add    rcx,QWORD PTR [rax+0x8]
  4143ed:	mov    eax,0x65
  4143f2:	mov    DWORD PTR [rcx],0x7079745f
  4143f8:	mov    WORD PTR [rcx+0x4],ax
  4143fc:	add    rcx,0x6
  414400:	mov    QWORD PTR [rbp-0x10],rbx
  414404:	mov    rbx,QWORD PTR [rbx]
  414407:	mov    DWORD PTR [rbp-0x8],0x1
  41440e:	test   rbx,rbx
  414411:	jne    41437f <__flatcc_fb_gen_c_verifier@@Base+0x35ef>
  414417:	lea    rcx,[rip+0xffffffffffffcde2]        # 411200 <__flatcc_fb_gen_c_verifier@@Base+0x470>
  41441e:	mov    rsi,r12
  414421:	mov    rdi,r14
  414424:	mov    edx,0x20
  414429:	call   405080 <qsort@plt>
  41442e:	pop    rbx
  41442f:	mov    rax,r14
  414432:	pop    rbp
  414433:	pop    r12
  414435:	pop    r13
  414437:	pop    r14
  414439:	ret    
  41443a:	mov    DWORD PTR [rsi],0x0
  414440:	xor    r14d,r14d
  414443:	pop    rbx
  414444:	mov    rax,r14
  414447:	pop    rbp
  414448:	pop    r12
  41444a:	pop    r13
  41444c:	pop    r14
  41444e:	ret    
  41444f:	nop
  414450:	push   r13
  414452:	push   r12
  414454:	mov    ecx,0x6
  414459:	push   rbp
  41445a:	push   rbx
  41445b:	mov    rbx,rdi
  41445e:	sub    rsp,0x138
  414465:	mov    rax,QWORD PTR fs:0x28
  41446e:	mov    QWORD PTR [rsp+0x128],rax
  414476:	xor    eax,eax
  414478:	cmp    WORD PTR [rsi+0x10],0x1
  41447d:	lea    r13,[rsp+0x10]
  414482:	mov    rdi,r13
  414485:	rep stos QWORD PTR es:[rdi],rax
  414488:	jne    41478c <__flatcc_fb_gen_c_verifier@@Base+0x39fc>
  41448e:	mov    rbp,rsi
  414491:	lea    rsi,[rsp+0xc]
  414496:	mov    rdi,QWORD PTR [rbp+0x28]
  41449a:	call   4142d0 <__flatcc_fb_gen_c_verifier@@Base+0x3540>
  41449f:	test   rax,rax
  4144a2:	mov    QWORD PTR [rsp+0x10],rax
  4144a7:	je     414730 <__flatcc_fb_gen_c_verifier@@Base+0x39a0>
  4144ad:	lea    rax,[rip+0xfffffffffffffd6c]        # 414220 <__flatcc_fb_gen_c_verifier@@Base+0x3490>
  4144b4:	lea    r12,[rsp+0x40]
  4144b9:	mov    ecx,0x1d
  4144be:	mov    rsi,rbp
  4144c1:	mov    QWORD PTR [rsp+0x28],rbp
  4144c6:	mov    DWORD PTR [rsp+0x30],0x1
  4144ce:	mov    QWORD PTR [rsp+0x18],rax
  4144d3:	lea    rax,[rip+0xffffffffffffd206]        # 4116e0 <__flatcc_fb_gen_c_verifier@@Base+0x950>
  4144da:	mov    rdi,r12
  4144dd:	mov    rdx,r12
  4144e0:	mov    QWORD PTR [rsp+0x20],rax
  4144e5:	xor    eax,eax
  4144e7:	rep stos QWORD PTR es:[rdi],rax
  4144ea:	mov    rdi,QWORD PTR [rbp+0x18]
  4144ee:	call   407300 <__flatcc_fb_scoped_symbol_name@@Base>
  4144f3:	lea    rsi,[rip+0x2ebfe]        # 4430f8 <_IO_stdin_used@@Base+0x160f8>
  4144fa:	mov    rdx,r12
  4144fd:	xor    eax,eax
  4144ff:	mov    rdi,rbx
  414502:	call   4114d0 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  414507:	lea    rsi,[rip+0x2d6ba]        # 441bc8 <_IO_stdin_used@@Base+0x14bc8>
  41450e:	xor    eax,eax
  414510:	mov    rdi,rbx
  414513:	call   4114d0 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  414518:	add    DWORD PTR [rbx+0xf0],0x1
  41451f:	lea    rsi,[rip+0x2d8a9]        # 441dcf <_IO_stdin_used@@Base+0x14dcf>
  414526:	xor    eax,eax
  414528:	mov    rdi,rbx
  41452b:	call   4114d0 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  414530:	mov    ecx,DWORD PTR [rsp+0xc]
  414534:	test   ecx,ecx
  414536:	jle    41457c <__flatcc_fb_gen_c_verifier@@Base+0x37ec>
  414538:	lea    rsi,[rip+0x2d89a]        # 441dd9 <_IO_stdin_used@@Base+0x14dd9>
  41453f:	mov    rdi,rbx
  414542:	xor    eax,eax
  414544:	call   4114d0 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  414549:	lea    rsi,[rip+0x2d8a3]        # 441df3 <_IO_stdin_used@@Base+0x14df3>
  414550:	mov    rdi,rbx
  414553:	xor    eax,eax
  414555:	call   4114d0 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  41455a:	lea    rsi,[rip+0x2d75d]        # 441cbe <_IO_stdin_used@@Base+0x14cbe>
  414561:	mov    rdi,rbx
  414564:	xor    eax,eax
  414566:	call   4114d0 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  41456b:	lea    rsi,[rip+0x2d75e]        # 441cd0 <_IO_stdin_used@@Base+0x14cd0>
  414572:	mov    rdi,rbx
  414575:	xor    eax,eax
  414577:	call   4114d0 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  41457c:	lea    rsi,[rip+0x3128b]        # 44580e <_IO_stdin_used@@Base+0x1880e>
  414583:	xor    eax,eax
  414585:	mov    rdi,rbx
  414588:	call   4114d0 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  41458d:	lea    rsi,[rip+0x2ebe4]        # 443178 <_IO_stdin_used@@Base+0x16178>
  414594:	xor    eax,eax
  414596:	mov    rdi,rbx
  414599:	call   4114d0 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  41459e:	lea    rsi,[rip+0x2d764]        # 441d09 <_IO_stdin_used@@Base+0x14d09>
  4145a5:	xor    eax,eax
  4145a7:	mov    rdi,rbx
  4145aa:	call   4114d0 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  4145af:	mov    edx,DWORD PTR [rsp+0xc]
  4145b3:	add    DWORD PTR [rbx+0xf0],0x1
  4145ba:	test   edx,edx
  4145bc:	je     414700 <__flatcc_fb_gen_c_verifier@@Base+0x3970>
  4145c2:	lea    rsi,[rip+0x2ebef]        # 4431b8 <_IO_stdin_used@@Base+0x161b8>
  4145c9:	mov    rdi,rbx
  4145cc:	xor    eax,eax
  4145ce:	call   4114d0 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  4145d3:	lea    rsi,[rip+0x2db3e]        # 442118 <_IO_stdin_used@@Base+0x15118>
  4145da:	mov    rdi,rbx
  4145dd:	xor    eax,eax
  4145df:	call   4114d0 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  4145e4:	mov    eax,DWORD PTR [rsp+0xc]
  4145e8:	xor    r8d,r8d
  4145eb:	xor    edx,edx
  4145ed:	mov    rsi,r13
  4145f0:	mov    rdi,rbx
  4145f3:	lea    ecx,[rax-0x1]
  4145f6:	call   411af0 <__flatcc_fb_gen_c_verifier@@Base+0xd60>
  4145fb:	lea    rsi,[rip+0x2ebee]        # 4431f0 <_IO_stdin_used@@Base+0x161f0>
  414602:	xor    eax,eax
  414604:	mov    rdi,rbx
  414607:	call   4114d0 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  41460c:	mov    eax,DWORD PTR [rbx+0xf0]
  414612:	test   eax,eax
  414614:	je     4147ab <__flatcc_fb_gen_c_verifier@@Base+0x3a1b>
  41461a:	sub    eax,0x1
  41461d:	lea    rsi,[rip+0x2d48d]        # 441ab1 <_IO_stdin_used@@Base+0x14ab1>
  414624:	mov    rdi,rbx
  414627:	mov    DWORD PTR [rbx+0xf0],eax
  41462d:	xor    eax,eax
  41462f:	call   4114d0 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  414634:	lea    rsi,[rip+0x2d5df]        # 441c1a <_IO_stdin_used@@Base+0x14c1a>
  41463b:	xor    eax,eax
  41463d:	mov    rdi,rbx
  414640:	call   4114d0 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  414645:	mov    eax,DWORD PTR [rsp+0xc]
  414649:	test   eax,eax
  41464b:	jle    414691 <__flatcc_fb_gen_c_verifier@@Base+0x3901>
  41464d:	mov    eax,DWORD PTR [rbx+0xf0]
  414653:	lea    rsi,[rip+0x2d7b9]        # 441e13 <_IO_stdin_used@@Base+0x14e13>
  41465a:	mov    rdi,rbx
  41465d:	mov    DWORD PTR [rbx+0xf0],0x0
  414667:	mov    DWORD PTR [rbx+0xf8],eax
  41466d:	xor    eax,eax
  41466f:	call   4114d0 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  414674:	mov    eax,DWORD PTR [rbx+0xf8]
  41467a:	lea    rsi,[rip+0x2de1f]        # 4424a0 <_IO_stdin_used@@Base+0x154a0>
  414681:	mov    rdi,rbx
  414684:	mov    DWORD PTR [rbx+0xf0],eax
  41468a:	xor    eax,eax
  41468c:	call   4114d0 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  414691:	mov    eax,DWORD PTR [rbx+0xf0]
  414697:	test   eax,eax
  414699:	je     4147ca <__flatcc_fb_gen_c_verifier@@Base+0x3a3a>
  41469f:	sub    eax,0x1
  4146a2:	lea    rsi,[rip+0x2d408]        # 441ab1 <_IO_stdin_used@@Base+0x14ab1>
  4146a9:	mov    rdi,rbx
  4146ac:	mov    DWORD PTR [rbx+0xf0],eax
  4146b2:	xor    eax,eax
  4146b4:	call   4114d0 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  4146b9:	lea    rsi,[rip+0x3114e]        # 44580e <_IO_stdin_used@@Base+0x1880e>
  4146c0:	mov    rdi,rbx
  4146c3:	xor    eax,eax
  4146c5:	call   4114d0 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  4146ca:	mov    rdi,QWORD PTR [rsp+0x10]
  4146cf:	test   rdi,rdi
  4146d2:	je     4146d9 <__flatcc_fb_gen_c_verifier@@Base+0x3949>
  4146d4:	call   405040 <free@plt>
  4146d9:	xor    eax,eax
  4146db:	mov    rdx,QWORD PTR [rsp+0x128]
  4146e3:	xor    rdx,QWORD PTR fs:0x28
  4146ec:	jne    4147e9 <__flatcc_fb_gen_c_verifier@@Base+0x3a59>
  4146f2:	add    rsp,0x138
  4146f9:	pop    rbx
  4146fa:	pop    rbp
  4146fb:	pop    r12
  4146fd:	pop    r13
  4146ff:	ret    
  414700:	lea    rsi,[rip+0x2d6f8]        # 441dff <_IO_stdin_used@@Base+0x14dff>
  414707:	mov    rdi,rbx
  41470a:	xor    eax,eax
  41470c:	call   4114d0 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  414711:	lea    rsi,[rip+0x2d890]        # 441fa8 <_IO_stdin_used@@Base+0x14fa8>
  414718:	mov    rdi,rbx
  41471b:	xor    eax,eax
  41471d:	call   4114d0 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  414722:	jmp    4145fb <__flatcc_fb_gen_c_verifier@@Base+0x386b>
  414727:	nop    WORD PTR [rax+rax*1+0x0]
  414730:	mov    esi,DWORD PTR [rsp+0xc]
  414734:	test   esi,esi
  414736:	jle    4144ad <__flatcc_fb_gen_c_verifier@@Base+0x371d>
  41473c:	mov    rax,QWORD PTR [rip+0x3c8a5]        # 450fe8 <stderr@GLIBC_2.2.5>
  414743:	lea    rcx,[rip+0x2d8ee]        # 442038 <_IO_stdin_used@@Base+0x15038>
  41474a:	lea    rdx,[rip+0x21a90]        # 4361e1 <_IO_stdin_used@@Base+0x91e1>
  414751:	lea    r9,[rip+0x2ddd8]        # 442530 <_IO_stdin_used@@Base+0x15530>
  414758:	mov    esi,0x1
  41475d:	mov    r8d,0x517
  414763:	mov    rdi,QWORD PTR [rax]
  414766:	xor    eax,eax
  414768:	call   405200 <__fprintf_chk@plt>
  41476d:	lea    rcx,[rip+0x2f98c]        # 444100 <_IO_stdin_used@@Base+0x17100>
  414774:	lea    rsi,[rip+0x2d8bd]        # 442038 <_IO_stdin_used@@Base+0x15038>
  41477b:	lea    rdi,[rip+0x22aa7]        # 437229 <_IO_stdin_used@@Base+0xa229>
  414782:	mov    edx,0x517
  414787:	call   405100 <__assert_fail@plt>
  41478c:	lea    rcx,[rip+0x2f96d]        # 444100 <_IO_stdin_used@@Base+0x17100>
  414793:	lea    rsi,[rip+0x2d89e]        # 442038 <_IO_stdin_used@@Base+0x15038>
  41479a:	lea    rdi,[rip+0x1a6ef]        # 42ee90 <_IO_stdin_used@@Base+0x1e90>
  4147a1:	mov    edx,0x515
  4147a6:	call   405100 <__assert_fail@plt>
  4147ab:	lea    rcx,[rip+0x2f94e]        # 444100 <_IO_stdin_used@@Base+0x17100>
  4147b2:	lea    rsi,[rip+0x2d87f]        # 442038 <_IO_stdin_used@@Base+0x15038>
  4147b9:	lea    rdi,[rip+0x2d2e5]        # 441aa5 <_IO_stdin_used@@Base+0x14aa5>
  4147c0:	mov    edx,0x536
  4147c5:	call   405100 <__assert_fail@plt>
  4147ca:	lea    rcx,[rip+0x2f92f]        # 444100 <_IO_stdin_used@@Base+0x17100>
  4147d1:	lea    rsi,[rip+0x2d860]        # 442038 <_IO_stdin_used@@Base+0x15038>
  4147d8:	lea    rdi,[rip+0x2d2c6]        # 441aa5 <_IO_stdin_used@@Base+0x14aa5>
  4147df:	mov    edx,0x53f
  4147e4:	call   405100 <__assert_fail@plt>
  4147e9:	call   4050d0 <__stack_chk_fail@plt>
  4147ee:	xchg   ax,ax
  4147f0:	push   r14
  4147f2:	push   r13
  4147f4:	mov    ecx,0x6
  4147f9:	push   r12
  4147fb:	push   rbp
  4147fc:	push   rbx
  4147fd:	mov    rbx,rdi
  414800:	sub    rsp,0x130
  414807:	mov    rax,QWORD PTR fs:0x28
  414810:	mov    QWORD PTR [rsp+0x128],rax
  414818:	xor    eax,eax
  41481a:	cmp    WORD PTR [rsi+0x10],0x0
  41481f:	lea    rbp,[rsp+0x10]
  414824:	mov    rdi,rbp
  414827:	rep stos QWORD PTR es:[rdi],rax
  41482a:	jne    414e4b <__flatcc_fb_gen_c_verifier@@Base+0x40bb>
  414830:	mov    r12,rsi
  414833:	lea    rsi,[rsp+0xc]
  414838:	mov    rdi,QWORD PTR [r12+0x28]
  41483d:	call   4142d0 <__flatcc_fb_gen_c_verifier@@Base+0x3540>
  414842:	test   rax,rax
  414845:	mov    QWORD PTR [rsp+0x10],rax
  41484a:	je     414da0 <__flatcc_fb_gen_c_verifier@@Base+0x4010>
  414850:	mov    ecx,DWORD PTR [rsp+0xc]
  414854:	lea    rdi,[rip+0xfffffffffffff9c5]        # 414220 <__flatcc_fb_gen_c_verifier@@Base+0x3490>
  41485b:	lea    rsi,[rip+0xffffffffffffce7e]        # 4116e0 <__flatcc_fb_gen_c_verifier@@Base+0x950>
  414862:	mov    QWORD PTR [rsp+0x28],r12
  414867:	mov    DWORD PTR [rsp+0x30],0x0
  41486f:	mov    QWORD PTR [rsp+0x18],rdi
  414874:	mov    QWORD PTR [rsp+0x20],rsi
  414879:	test   ecx,ecx
  41487b:	mov    DWORD PTR [rsp+0x34],0x0
  414883:	jle    4148ba <__flatcc_fb_gen_c_verifier@@Base+0x3b2a>
  414885:	sub    ecx,0x1
  414888:	lea    rdx,[rax+0x18]
  41488c:	shl    rcx,0x5
  414890:	lea    rsi,[rax+rcx*1+0x38]
  414895:	xor    eax,eax
  414897:	nop    WORD PTR [rax+rax*1+0x0]
  4148a0:	mov    r8d,DWORD PTR [rdx]
  4148a3:	xor    ecx,ecx
  4148a5:	test   r8d,r8d
  4148a8:	setne  cl
  4148ab:	add    rdx,0x20
  4148af:	add    eax,ecx
  4148b1:	cmp    rsi,rdx
  4148b4:	jne    4148a0 <__flatcc_fb_gen_c_verifier@@Base+0x3b10>
  4148b6:	mov    DWORD PTR [rsp+0x34],eax
  4148ba:	lea    r13,[rsp+0x40]
  4148bf:	xor    eax,eax
  4148c1:	mov    ecx,0x1d
  4148c6:	mov    rsi,r12
  4148c9:	mov    rdi,r13
  4148cc:	mov    rdx,r13
  4148cf:	rep stos QWORD PTR es:[rdi],rax
  4148d2:	mov    rdi,QWORD PTR [r12+0x18]
  4148d7:	call   407300 <__flatcc_fb_scoped_symbol_name@@Base>
  4148dc:	lea    rsi,[rip+0x2e94d]        # 443230 <_IO_stdin_used@@Base+0x16230>
  4148e3:	mov    rdx,r13
  4148e6:	xor    eax,eax
  4148e8:	mov    rdi,rbx
  4148eb:	call   4114d0 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  4148f0:	lea    rsi,[rip+0x2d2d1]        # 441bc8 <_IO_stdin_used@@Base+0x14bc8>
  4148f7:	xor    eax,eax
  4148f9:	mov    rdi,rbx
  4148fc:	call   4114d0 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  414901:	add    DWORD PTR [rbx+0xf0],0x1
  414908:	lea    rsi,[rip+0x2d4c0]        # 441dcf <_IO_stdin_used@@Base+0x14dcf>
  41490f:	mov    rdi,rbx
  414912:	xor    eax,eax
  414914:	call   4114d0 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  414919:	mov    edi,DWORD PTR [rsp+0xc]
  41491d:	test   edi,edi
  41491f:	jle    414965 <__flatcc_fb_gen_c_verifier@@Base+0x3bd5>
  414921:	lea    rsi,[rip+0x2d4cb]        # 441df3 <_IO_stdin_used@@Base+0x14df3>
  414928:	mov    rdi,rbx
  41492b:	xor    eax,eax
  41492d:	call   4114d0 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  414932:	lea    rsi,[rip+0x2e97f]        # 4432b8 <_IO_stdin_used@@Base+0x162b8>
  414939:	mov    rdi,rbx
  41493c:	xor    eax,eax
  41493e:	call   4114d0 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  414943:	lea    rsi,[rip+0x2d374]        # 441cbe <_IO_stdin_used@@Base+0x14cbe>
  41494a:	mov    rdi,rbx
  41494d:	xor    eax,eax
  41494f:	call   4114d0 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  414954:	lea    rsi,[rip+0x2d375]        # 441cd0 <_IO_stdin_used@@Base+0x14cd0>
  41495b:	mov    rdi,rbx
  41495e:	xor    eax,eax
  414960:	call   4114d0 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  414965:	mov    esi,DWORD PTR [rsp+0x34]
  414969:	test   esi,esi
  41496b:	jne    414d10 <__flatcc_fb_gen_c_verifier@@Base+0x3f80>
  414971:	lea    rsi,[rip+0x30e96]        # 44580e <_IO_stdin_used@@Base+0x1880e>
  414978:	xor    eax,eax
  41497a:	mov    rdi,rbx
  41497d:	call   4114d0 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  414982:	lea    rsi,[rip+0x2d224]        # 441bad <_IO_stdin_used@@Base+0x14bad>
  414989:	xor    eax,eax
  41498b:	mov    rdi,rbx
  41498e:	call   4114d0 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  414993:	mov    rdx,QWORD PTR [r12+0xa8]
  41499b:	lea    rsi,[rip+0x2e93e]        # 4432e0 <_IO_stdin_used@@Base+0x162e0>
  4149a2:	xor    eax,eax
  4149a4:	mov    rdi,rbx
  4149a7:	call   4114d0 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  4149ac:	movsxd rdx,DWORD PTR [rsp+0x34]
  4149b1:	test   edx,edx
  4149b3:	jne    414d50 <__flatcc_fb_gen_c_verifier@@Base+0x3fc0>
  4149b9:	lea    rsi,[rip+0x2e7b8]        # 443178 <_IO_stdin_used@@Base+0x16178>
  4149c0:	xor    eax,eax
  4149c2:	mov    rdi,rbx
  4149c5:	call   4114d0 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  4149ca:	lea    rsi,[rip+0x2d338]        # 441d09 <_IO_stdin_used@@Base+0x14d09>
  4149d1:	xor    eax,eax
  4149d3:	mov    rdi,rbx
  4149d6:	call   4114d0 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  4149db:	add    DWORD PTR [rbx+0xf0],0x1
  4149e2:	lea    rsi,[rip+0x2e7cf]        # 4431b8 <_IO_stdin_used@@Base+0x161b8>
  4149e9:	xor    eax,eax
  4149eb:	mov    rdi,rbx
  4149ee:	call   4114d0 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  4149f3:	mov    ecx,DWORD PTR [rsp+0xc]
  4149f7:	test   ecx,ecx
  4149f9:	jle    414d70 <__flatcc_fb_gen_c_verifier@@Base+0x3fe0>
  4149ff:	lea    rsi,[rip+0x2d712]        # 442118 <_IO_stdin_used@@Base+0x15118>
  414a06:	mov    rdi,rbx
  414a09:	xor    eax,eax
  414a0b:	call   4114d0 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  414a10:	mov    eax,DWORD PTR [rsp+0xc]
  414a14:	xor    r8d,r8d
  414a17:	xor    edx,edx
  414a19:	mov    rsi,rbp
  414a1c:	mov    rdi,rbx
  414a1f:	lea    ecx,[rax-0x1]
  414a22:	call   411af0 <__flatcc_fb_gen_c_verifier@@Base+0xd60>
  414a27:	lea    rsi,[rip+0x2e952]        # 443380 <_IO_stdin_used@@Base+0x16380>
  414a2e:	xor    eax,eax
  414a30:	mov    rdi,rbx
  414a33:	call   4114d0 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  414a38:	mov    eax,DWORD PTR [rbx+0xf0]
  414a3e:	test   eax,eax
  414a40:	je     414e2c <__flatcc_fb_gen_c_verifier@@Base+0x409c>
  414a46:	sub    eax,0x1
  414a49:	lea    rsi,[rip+0x2d061]        # 441ab1 <_IO_stdin_used@@Base+0x14ab1>
  414a50:	mov    rdi,rbx
  414a53:	mov    DWORD PTR [rbx+0xf0],eax
  414a59:	xor    eax,eax
  414a5b:	xor    r12d,r12d
  414a5e:	call   4114d0 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  414a63:	lea    rsi,[rip+0x2d3dd]        # 441e47 <_IO_stdin_used@@Base+0x14e47>
  414a6a:	xor    eax,eax
  414a6c:	mov    rdi,rbx
  414a6f:	xor    ebp,ebp
  414a71:	mov    r14d,0x1
  414a77:	call   4114d0 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  414a7c:	mov    edx,DWORD PTR [rsp+0xc]
  414a80:	test   edx,edx
  414a82:	jg     414ad5 <__flatcc_fb_gen_c_verifier@@Base+0x3d45>
  414a84:	jmp    414bae <__flatcc_fb_gen_c_verifier@@Base+0x3e1e>
  414a89:	nop    DWORD PTR [rax+0x0]
  414a90:	and    dh,0x1
  414a93:	movzx  ecx,cl
  414a96:	je     414ac8 <__flatcc_fb_gen_c_verifier@@Base+0x3d38>
  414a98:	mov    rdx,QWORD PTR [rax+0x88]
  414a9f:	sub    rdx,rcx
  414aa2:	test   r14d,r14d
  414aa5:	je     414b08 <__flatcc_fb_gen_c_verifier@@Base+0x3d78>
  414aa7:	lea    rsi,[rip+0x2e912]        # 4433c0 <_IO_stdin_used@@Base+0x163c0>
  414aae:	mov    rdi,rbx
  414ab1:	xor    eax,eax
  414ab3:	xor    r14d,r14d
  414ab6:	call   4114d0 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  414abb:	add    DWORD PTR [rbx+0xf0],0x1
  414ac2:	nop    WORD PTR [rax+rax*1+0x0]
  414ac8:	add    ebp,0x1
  414acb:	add    r12,0x20
  414acf:	cmp    DWORD PTR [rsp+0xc],ebp
  414ad3:	jle    414b30 <__flatcc_fb_gen_c_verifier@@Base+0x3da0>
  414ad5:	mov    rax,QWORD PTR [rsp+0x10]
  414ada:	mov    rax,QWORD PTR [rax+r12*1+0x10]
  414adf:	movzx  edx,WORD PTR [rax+0x70]
  414ae3:	test   dl,0x4
  414ae6:	jne    414ac8 <__flatcc_fb_gen_c_verifier@@Base+0x3d38>
  414ae8:	movzx  edi,WORD PTR [rax+0x28]
  414aec:	xor    ecx,ecx
  414aee:	lea    esi,[rdi-0xe]
  414af1:	cmp    si,0x1
  414af5:	ja     414a90 <__flatcc_fb_gen_c_verifier@@Base+0x3d00>
  414af7:	mov    rcx,QWORD PTR [rax+0x18]
  414afb:	cmp    WORD PTR [rcx+0x10],0x4
  414b00:	sete   cl
  414b03:	jmp    414a90 <__flatcc_fb_gen_c_verifier@@Base+0x3d00>
  414b05:	nop    DWORD PTR [rax]
  414b08:	lea    rsi,[rip+0x2e8e9]        # 4433f8 <_IO_stdin_used@@Base+0x163f8>
  414b0f:	xor    eax,eax
  414b11:	mov    rdi,rbx
  414b14:	add    ebp,0x1
  414b17:	add    r12,0x20
  414b1b:	call   4114d0 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  414b20:	cmp    DWORD PTR [rsp+0xc],ebp
  414b24:	jg     414ad5 <__flatcc_fb_gen_c_verifier@@Base+0x3d45>
  414b26:	nop    WORD PTR cs:[rax+rax*1+0x0]
  414b30:	test   r14d,r14d
  414b33:	jne    414bae <__flatcc_fb_gen_c_verifier@@Base+0x3e1e>
  414b35:	mov    eax,DWORD PTR [rbx+0xf0]
  414b3b:	test   eax,eax
  414b3d:	je     414e89 <__flatcc_fb_gen_c_verifier@@Base+0x40f9>
  414b43:	sub    eax,0x1
  414b46:	lea    rsi,[rip+0x2d079]        # 441bc6 <_IO_stdin_used@@Base+0x14bc6>
  414b4d:	mov    rdi,rbx
  414b50:	mov    DWORD PTR [rbx+0xf0],eax
  414b56:	xor    eax,eax
  414b58:	call   4114d0 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  414b5d:	add    DWORD PTR [rbx+0xf0],0x1
  414b64:	lea    rsi,[rip+0x2e8c5]        # 443430 <_IO_stdin_used@@Base+0x16430>
  414b6b:	xor    eax,eax
  414b6d:	mov    rdi,rbx
  414b70:	call   4114d0 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  414b75:	lea    rsi,[rip+0x2d220]        # 441d9c <_IO_stdin_used@@Base+0x14d9c>
  414b7c:	xor    eax,eax
  414b7e:	mov    rdi,rbx
  414b81:	call   4114d0 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  414b86:	mov    eax,DWORD PTR [rbx+0xf0]
  414b8c:	test   eax,eax
  414b8e:	je     414e6a <__flatcc_fb_gen_c_verifier@@Base+0x40da>
  414b94:	sub    eax,0x1
  414b97:	lea    rsi,[rip+0x2cf13]        # 441ab1 <_IO_stdin_used@@Base+0x14ab1>
  414b9e:	mov    rdi,rbx
  414ba1:	mov    DWORD PTR [rbx+0xf0],eax
  414ba7:	xor    eax,eax
  414ba9:	call   4114d0 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  414bae:	mov    eax,DWORD PTR [rsp+0x34]
  414bb2:	test   eax,eax
  414bb4:	jne    414d30 <__flatcc_fb_gen_c_verifier@@Base+0x3fa0>
  414bba:	lea    rsi,[rip+0x2e90f]        # 4434d0 <_IO_stdin_used@@Base+0x164d0>
  414bc1:	xor    eax,eax
  414bc3:	mov    rdi,rbx
  414bc6:	call   4114d0 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  414bcb:	lea    rsi,[rip+0x2d048]        # 441c1a <_IO_stdin_used@@Base+0x14c1a>
  414bd2:	xor    eax,eax
  414bd4:	mov    rdi,rbx
  414bd7:	call   4114d0 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  414bdc:	mov    eax,DWORD PTR [rbx+0xf0]
  414be2:	lea    rsi,[rip+0x2d22a]        # 441e13 <_IO_stdin_used@@Base+0x14e13>
  414be9:	mov    rdi,rbx
  414bec:	mov    DWORD PTR [rbx+0xf0],0x0
  414bf6:	mov    DWORD PTR [rbx+0xf8],eax
  414bfc:	xor    eax,eax
  414bfe:	call   4114d0 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  414c03:	mov    eax,DWORD PTR [rbx+0xf8]
  414c09:	lea    rsi,[rip+0x2d890]        # 4424a0 <_IO_stdin_used@@Base+0x154a0>
  414c10:	mov    rdi,rbx
  414c13:	mov    DWORD PTR [rbx+0xf0],eax
  414c19:	xor    eax,eax
  414c1b:	call   4114d0 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  414c20:	mov    eax,DWORD PTR [rbx+0xf0]
  414c26:	test   eax,eax
  414c28:	je     414ecc <__flatcc_fb_gen_c_verifier@@Base+0x413c>
  414c2e:	sub    eax,0x1
  414c31:	lea    rsi,[rip+0x2ce79]        # 441ab1 <_IO_stdin_used@@Base+0x14ab1>
  414c38:	mov    rdi,rbx
  414c3b:	mov    DWORD PTR [rbx+0xf0],eax
  414c41:	xor    eax,eax
  414c43:	call   4114d0 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  414c48:	lea    rsi,[rip+0x30bbf]        # 44580e <_IO_stdin_used@@Base+0x1880e>
  414c4f:	xor    eax,eax
  414c51:	mov    rdi,rbx
  414c54:	call   4114d0 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  414c59:	lea    rsi,[rip+0x2e8b8]        # 443518 <_IO_stdin_used@@Base+0x16518>
  414c60:	mov    rdx,r13
  414c63:	xor    eax,eax
  414c65:	mov    rdi,rbx
  414c68:	call   4114d0 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  414c6d:	lea    rsi,[rip+0x2cf54]        # 441bc8 <_IO_stdin_used@@Base+0x14bc8>
  414c74:	xor    eax,eax
  414c76:	mov    rdi,rbx
  414c79:	call   4114d0 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  414c7e:	add    DWORD PTR [rbx+0xf0],0x1
  414c85:	lea    rsi,[rip+0x2e924]        # 4435b0 <_IO_stdin_used@@Base+0x165b0>
  414c8c:	xor    eax,eax
  414c8e:	mov    rdx,r13
  414c91:	mov    rdi,rbx
  414c94:	call   4114d0 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  414c99:	mov    eax,DWORD PTR [rbx+0xf0]
  414c9f:	test   eax,eax
  414ca1:	je     414ead <__flatcc_fb_gen_c_verifier@@Base+0x411d>
  414ca7:	sub    eax,0x1
  414caa:	lea    rsi,[rip+0x2ce00]        # 441ab1 <_IO_stdin_used@@Base+0x14ab1>
  414cb1:	mov    rdi,rbx
  414cb4:	mov    DWORD PTR [rbx+0xf0],eax
  414cba:	xor    eax,eax
  414cbc:	call   4114d0 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  414cc1:	lea    rsi,[rip+0x30b46]        # 44580e <_IO_stdin_used@@Base+0x1880e>
  414cc8:	mov    rdi,rbx
  414ccb:	xor    eax,eax
  414ccd:	call   4114d0 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  414cd2:	mov    rdi,QWORD PTR [rsp+0x10]
  414cd7:	test   rdi,rdi
  414cda:	je     414ce1 <__flatcc_fb_gen_c_verifier@@Base+0x3f51>
  414cdc:	call   405040 <free@plt>
  414ce1:	xor    eax,eax
  414ce3:	mov    rbx,QWORD PTR [rsp+0x128]
  414ceb:	xor    rbx,QWORD PTR fs:0x28
  414cf4:	jne    414ea8 <__flatcc_fb_gen_c_verifier@@Base+0x4118>
  414cfa:	add    rsp,0x130
  414d01:	pop    rbx
  414d02:	pop    rbp
  414d03:	pop    r12
  414d05:	pop    r13
  414d07:	pop    r14
  414d09:	ret    
  414d0a:	nop    WORD PTR [rax+rax*1+0x0]
  414d10:	lea    rsi,[rip+0x2d104]        # 441e1b <_IO_stdin_used@@Base+0x14e1b>
  414d17:	mov    rdi,rbx
  414d1a:	xor    eax,eax
  414d1c:	call   4114d0 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  414d21:	jmp    414971 <__flatcc_fb_gen_c_verifier@@Base+0x3be1>
  414d26:	nop    WORD PTR cs:[rax+rax*1+0x0]
  414d30:	lea    rsi,[rip+0x2e751]        # 443488 <_IO_stdin_used@@Base+0x16488>
  414d37:	mov    rdi,rbx
  414d3a:	xor    eax,eax
  414d3c:	call   4114d0 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  414d41:	jmp    414bba <__flatcc_fb_gen_c_verifier@@Base+0x3e2a>
  414d46:	nop    WORD PTR cs:[rax+rax*1+0x0]
  414d50:	lea    rsi,[rip+0x2e5c9]        # 443320 <_IO_stdin_used@@Base+0x16320>
  414d57:	mov    rdi,rbx
  414d5a:	xor    eax,eax
  414d5c:	call   4114d0 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  414d61:	jmp    4149b9 <__flatcc_fb_gen_c_verifier@@Base+0x3c29>
  414d66:	nop    WORD PTR cs:[rax+rax*1+0x0]
  414d70:	lea    rsi,[rip+0x2d0b5]        # 441e2c <_IO_stdin_used@@Base+0x14e2c>
  414d77:	mov    rdi,rbx
  414d7a:	xor    eax,eax
  414d7c:	call   4114d0 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  414d81:	lea    rsi,[rip+0x2d220]        # 441fa8 <_IO_stdin_used@@Base+0x14fa8>
  414d88:	mov    rdi,rbx
  414d8b:	xor    eax,eax
  414d8d:	call   4114d0 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  414d92:	jmp    414a27 <__flatcc_fb_gen_c_verifier@@Base+0x3c97>
  414d97:	nop    WORD PTR [rax+rax*1+0x0]
  414da0:	mov    r9d,DWORD PTR [rsp+0xc]
  414da5:	test   r9d,r9d
  414da8:	jg     414ddc <__flatcc_fb_gen_c_verifier@@Base+0x404c>
  414daa:	lea    rax,[rip+0xfffffffffffff46f]        # 414220 <__flatcc_fb_gen_c_verifier@@Base+0x3490>
  414db1:	mov    QWORD PTR [rsp+0x28],r12
  414db6:	mov    DWORD PTR [rsp+0x30],0x0
  414dbe:	mov    DWORD PTR [rsp+0x34],0x0
  414dc6:	mov    QWORD PTR [rsp+0x18],rax
  414dcb:	lea    rax,[rip+0xffffffffffffc90e]        # 4116e0 <__flatcc_fb_gen_c_verifier@@Base+0x950>
  414dd2:	mov    QWORD PTR [rsp+0x20],rax
  414dd7:	jmp    4148ba <__flatcc_fb_gen_c_verifier@@Base+0x3b2a>
  414ddc:	mov    rax,QWORD PTR [rip+0x3c205]        # 450fe8 <stderr@GLIBC_2.2.5>
  414de3:	lea    rcx,[rip+0x2d24e]        # 442038 <_IO_stdin_used@@Base+0x15038>
  414dea:	lea    rdx,[rip+0x213f0]        # 4361e1 <_IO_stdin_used@@Base+0x91e1>
  414df1:	lea    r9,[rip+0x2d738]        # 442530 <_IO_stdin_used@@Base+0x15530>
  414df8:	mov    esi,0x1
  414dfd:	mov    r8d,0x570
  414e03:	mov    rdi,QWORD PTR [rax]
  414e06:	xor    eax,eax
  414e08:	call   405200 <__fprintf_chk@plt>
  414e0d:	lea    rcx,[rip+0x2f25c]        # 444070 <_IO_stdin_used@@Base+0x17070>
  414e14:	lea    rsi,[rip+0x2d21d]        # 442038 <_IO_stdin_used@@Base+0x15038>
  414e1b:	lea    rdi,[rip+0x22407]        # 437229 <_IO_stdin_used@@Base+0xa229>
  414e22:	mov    edx,0x570
  414e27:	call   405100 <__assert_fail@plt>
  414e2c:	lea    rcx,[rip+0x2f23d]        # 444070 <_IO_stdin_used@@Base+0x17070>
  414e33:	lea    rsi,[rip+0x2d1fe]        # 442038 <_IO_stdin_used@@Base+0x15038>
  414e3a:	lea    rdi,[rip+0x2cc64]        # 441aa5 <_IO_stdin_used@@Base+0x14aa5>
  414e41:	mov    edx,0x59e
  414e46:	call   405100 <__assert_fail@plt>
  414e4b:	lea    rcx,[rip+0x2f21e]        # 444070 <_IO_stdin_used@@Base+0x17070>
  414e52:	lea    rsi,[rip+0x2d1df]        # 442038 <_IO_stdin_used@@Base+0x15038>
  414e59:	lea    rdi,[rip+0x1a780]        # 42f5e0 <_IO_stdin_used@@Base+0x25e0>
  414e60:	mov    edx,0x56e
  414e65:	call   405100 <__assert_fail@plt>
  414e6a:	lea    rcx,[rip+0x2f1ff]        # 444070 <_IO_stdin_used@@Base+0x17070>
  414e71:	lea    rsi,[rip+0x2d1c0]        # 442038 <_IO_stdin_used@@Base+0x15038>
  414e78:	lea    rdi,[rip+0x2cc26]        # 441aa5 <_IO_stdin_used@@Base+0x14aa5>
  414e7f:	mov    edx,0x5b5
  414e84:	call   405100 <__assert_fail@plt>
  414e89:	lea    rcx,[rip+0x2f1e0]        # 444070 <_IO_stdin_used@@Base+0x17070>
  414e90:	lea    rsi,[rip+0x2d1a1]        # 442038 <_IO_stdin_used@@Base+0x15038>
  414e97:	lea    rdi,[rip+0x2cc07]        # 441aa5 <_IO_stdin_used@@Base+0x14aa5>
  414e9e:	mov    edx,0x5b2
  414ea3:	call   405100 <__assert_fail@plt>
  414ea8:	call   4050d0 <__stack_chk_fail@plt>
  414ead:	lea    rcx,[rip+0x2f1bc]        # 444070 <_IO_stdin_used@@Base+0x17070>
  414eb4:	lea    rsi,[rip+0x2d17d]        # 442038 <_IO_stdin_used@@Base+0x15038>
  414ebb:	lea    rdi,[rip+0x2cbe3]        # 441aa5 <_IO_stdin_used@@Base+0x14aa5>
  414ec2:	mov    edx,0x5c7
  414ec7:	call   405100 <__assert_fail@plt>
  414ecc:	lea    rcx,[rip+0x2f19d]        # 444070 <_IO_stdin_used@@Base+0x17070>
  414ed3:	lea    rsi,[rip+0x2d15e]        # 442038 <_IO_stdin_used@@Base+0x15038>
  414eda:	lea    rdi,[rip+0x2cbc4]        # 441aa5 <_IO_stdin_used@@Base+0x14aa5>
  414ee1:	mov    edx,0x5c1
  414ee6:	call   405100 <__assert_fail@plt>
  414eeb:	nop    DWORD PTR [rax+rax*1+0x0]
  414ef0:	push   r13
  414ef2:	push   r12
  414ef4:	mov    ecx,0x6
  414ef9:	push   rbp
  414efa:	push   rbx
  414efb:	mov    rbx,rdi
  414efe:	sub    rsp,0x138
  414f05:	lea    r13,[rsp+0x10]
  414f0a:	mov    DWORD PTR [rsp+0xc],0x0
  414f12:	mov    rax,QWORD PTR fs:0x28
  414f1b:	mov    QWORD PTR [rsp+0x128],rax
  414f23:	xor    eax,eax
  414f25:	mov    rdi,r13
  414f28:	rep stos QWORD PTR es:[rdi],rax
  414f2b:	movzx  eax,WORD PTR [rsi+0x10]
  414f2f:	sub    eax,0x3
  414f32:	cmp    ax,0x1
  414f36:	ja     4151e5 <__flatcc_fb_gen_c_verifier@@Base+0x4455>
  414f3c:	mov    rbp,rsi
  414f3f:	lea    rsi,[rsp+0xc]
  414f44:	mov    rdi,QWORD PTR [rbp+0x28]
  414f48:	call   4142d0 <__flatcc_fb_gen_c_verifier@@Base+0x3540>
  414f4d:	test   rax,rax
  414f50:	mov    QWORD PTR [rsp+0x10],rax
  414f55:	je     415160 <__flatcc_fb_gen_c_verifier@@Base+0x43d0>
  414f5b:	lea    rax,[rip+0xffffffffffffe04e]        # 412fb0 <__flatcc_fb_gen_c_verifier@@Base+0x2220>
  414f62:	lea    r12,[rsp+0x40]
  414f67:	mov    ecx,0x1d
  414f6c:	mov    rsi,rbp
  414f6f:	mov    QWORD PTR [rsp+0x28],rbp
  414f74:	mov    DWORD PTR [rsp+0x30],0x2
  414f7c:	mov    QWORD PTR [rsp+0x18],rax
  414f81:	lea    rax,[rip+0xffffffffffffc748]        # 4116d0 <__flatcc_fb_gen_c_verifier@@Base+0x940>
  414f88:	mov    rdi,r12
  414f8b:	mov    rdx,r12
  414f8e:	mov    QWORD PTR [rsp+0x20],rax
  414f93:	xor    eax,eax
  414f95:	rep stos QWORD PTR es:[rdi],rax
  414f98:	mov    rdi,QWORD PTR [rbp+0x18]
  414f9c:	call   407300 <__flatcc_fb_scoped_symbol_name@@Base>
  414fa1:	lea    rsi,[rip+0x2e668]        # 443610 <_IO_stdin_used@@Base+0x16610>
  414fa8:	xor    eax,eax
  414faa:	mov    rdx,r12
  414fad:	mov    rdi,rbx
  414fb0:	call   4114d0 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  414fb5:	add    DWORD PTR [rbx+0xf0],0x2
  414fbc:	lea    rsi,[rip+0x2e6b5]        # 443678 <_IO_stdin_used@@Base+0x16678>
  414fc3:	xor    eax,eax
  414fc5:	mov    rdi,rbx
  414fc8:	call   4114d0 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  414fcd:	mov    eax,DWORD PTR [rbx+0xf0]
  414fd3:	test   eax,eax
  414fd5:	je     4151c6 <__flatcc_fb_gen_c_verifier@@Base+0x4436>
  414fdb:	cmp    eax,0x1
  414fde:	je     4151bc <__flatcc_fb_gen_c_verifier@@Base+0x442c>
  414fe4:	sub    eax,0x2
  414fe7:	lea    rsi,[rip+0x2cbda]        # 441bc8 <_IO_stdin_used@@Base+0x14bc8>
  414fee:	mov    rdi,rbx
  414ff1:	mov    DWORD PTR [rbx+0xf0],eax
  414ff7:	xor    eax,eax
  414ff9:	call   4114d0 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  414ffe:	mov    eax,DWORD PTR [rsp+0xc]
  415002:	add    DWORD PTR [rbx+0xf0],0x1
  415009:	test   eax,eax
  41500b:	je     415100 <__flatcc_fb_gen_c_verifier@@Base+0x4370>
  415011:	lea    rsi,[rip+0x2cc89]        # 441ca1 <_IO_stdin_used@@Base+0x14ca1>
  415018:	xor    eax,eax
  41501a:	mov    rdi,rbx
  41501d:	call   4114d0 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  415022:	lea    rsi,[rip+0x2cc95]        # 441cbe <_IO_stdin_used@@Base+0x14cbe>
  415029:	xor    eax,eax
  41502b:	mov    rdi,rbx
  41502e:	call   4114d0 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  415033:	lea    rsi,[rip+0x2cc96]        # 441cd0 <_IO_stdin_used@@Base+0x14cd0>
  41503a:	xor    eax,eax
  41503c:	mov    rdi,rbx
  41503f:	call   4114d0 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  415044:	lea    rsi,[rip+0x307c3]        # 44580e <_IO_stdin_used@@Base+0x1880e>
  41504b:	xor    eax,eax
  41504d:	mov    rdi,rbx
  415050:	call   4114d0 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  415055:	lea    rsi,[rip+0x2d0bc]        # 442118 <_IO_stdin_used@@Base+0x15118>
  41505c:	xor    eax,eax
  41505e:	mov    rdi,rbx
  415061:	call   4114d0 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  415066:	mov    eax,DWORD PTR [rsp+0xc]
  41506a:	xor    r8d,r8d
  41506d:	xor    edx,edx
  41506f:	mov    rsi,r13
  415072:	mov    rdi,rbx
  415075:	lea    ecx,[rax-0x1]
  415078:	call   411af0 <__flatcc_fb_gen_c_verifier@@Base+0xd60>
  41507d:	lea    rsi,[rip+0x2cb96]        # 441c1a <_IO_stdin_used@@Base+0x14c1a>
  415084:	xor    eax,eax
  415086:	mov    rdi,rbx
  415089:	call   4114d0 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  41508e:	mov    eax,DWORD PTR [rbx+0xf0]
  415094:	test   eax,eax
  415096:	je     415209 <__flatcc_fb_gen_c_verifier@@Base+0x4479>
  41509c:	sub    eax,0x1
  41509f:	lea    rsi,[rip+0x2ca0b]        # 441ab1 <_IO_stdin_used@@Base+0x14ab1>
  4150a6:	mov    rdi,rbx
  4150a9:	mov    DWORD PTR [rbx+0xf0],eax
  4150af:	xor    eax,eax
  4150b1:	call   4114d0 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  4150b6:	lea    rsi,[rip+0x30751]        # 44580e <_IO_stdin_used@@Base+0x1880e>
  4150bd:	mov    rdi,rbx
  4150c0:	xor    eax,eax
  4150c2:	call   4114d0 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  4150c7:	mov    rdi,QWORD PTR [rsp+0x10]
  4150cc:	test   rdi,rdi
  4150cf:	je     4150d6 <__flatcc_fb_gen_c_verifier@@Base+0x4346>
  4150d1:	call   405040 <free@plt>
  4150d6:	xor    eax,eax
  4150d8:	mov    rdx,QWORD PTR [rsp+0x128]
  4150e0:	xor    rdx,QWORD PTR fs:0x28
  4150e9:	jne    415204 <__flatcc_fb_gen_c_verifier@@Base+0x4474>
  4150ef:	add    rsp,0x138
  4150f6:	pop    rbx
  4150f7:	pop    rbp
  4150f8:	pop    r12
  4150fa:	pop    r13
  4150fc:	ret    
  4150fd:	nop    DWORD PTR [rax]
  415100:	lea    rsi,[rip+0x2cd5d]        # 441e64 <_IO_stdin_used@@Base+0x14e64>
  415107:	xor    eax,eax
  415109:	mov    rdi,rbx
  41510c:	call   4114d0 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  415111:	lea    rsi,[rip+0x2cd66]        # 441e7e <_IO_stdin_used@@Base+0x14e7e>
  415118:	xor    eax,eax
  41511a:	mov    rdi,rbx
  41511d:	call   4114d0 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  415122:	lea    rsi,[rip+0x2cb5b]        # 441c84 <_IO_stdin_used@@Base+0x14c84>
  415129:	xor    eax,eax
  41512b:	mov    rdi,rbx
  41512e:	call   4114d0 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  415133:	mov    eax,DWORD PTR [rbx+0xf0]
  415139:	test   eax,eax
  41513b:	jne    41509c <__flatcc_fb_gen_c_verifier@@Base+0x430c>
  415141:	lea    rcx,[rip+0x2ef18]        # 444060 <_IO_stdin_used@@Base+0x17060>
  415148:	lea    rsi,[rip+0x2cee9]        # 442038 <_IO_stdin_used@@Base+0x15038>
  41514f:	lea    rdi,[rip+0x2c94f]        # 441aa5 <_IO_stdin_used@@Base+0x14aa5>
  415156:	mov    edx,0x4f5
  41515b:	call   405100 <__assert_fail@plt>
  415160:	mov    edx,DWORD PTR [rsp+0xc]
  415164:	test   edx,edx
  415166:	jle    414f5b <__flatcc_fb_gen_c_verifier@@Base+0x41cb>
  41516c:	mov    rax,QWORD PTR [rip+0x3be75]        # 450fe8 <stderr@GLIBC_2.2.5>
  415173:	lea    rcx,[rip+0x2cebe]        # 442038 <_IO_stdin_used@@Base+0x15038>
  41517a:	lea    rdx,[rip+0x21060]        # 4361e1 <_IO_stdin_used@@Base+0x91e1>
  415181:	lea    r9,[rip+0x2d3a8]        # 442530 <_IO_stdin_used@@Base+0x15530>
  415188:	mov    esi,0x1
  41518d:	mov    r8d,0x4e1
  415193:	mov    rdi,QWORD PTR [rax]
  415196:	xor    eax,eax
  415198:	call   405200 <__fprintf_chk@plt>
  41519d:	lea    rcx,[rip+0x2eebc]        # 444060 <_IO_stdin_used@@Base+0x17060>
  4151a4:	lea    rsi,[rip+0x2ce8d]        # 442038 <_IO_stdin_used@@Base+0x15038>
  4151ab:	lea    rdi,[rip+0x22077]        # 437229 <_IO_stdin_used@@Base+0xa229>
  4151b2:	mov    edx,0x4e1
  4151b7:	call   405100 <__assert_fail@plt>
  4151bc:	mov    DWORD PTR [rbx+0xf0],0x0
  4151c6:	lea    rcx,[rip+0x2ee93]        # 444060 <_IO_stdin_used@@Base+0x17060>
  4151cd:	lea    rsi,[rip+0x2ce64]        # 442038 <_IO_stdin_used@@Base+0x15038>
  4151d4:	lea    rdi,[rip+0x2c8ca]        # 441aa5 <_IO_stdin_used@@Base+0x14aa5>
  4151db:	mov    edx,0x4ef
  4151e0:	call   405100 <__assert_fail@plt>
  4151e5:	lea    rcx,[rip+0x2ee74]        # 444060 <_IO_stdin_used@@Base+0x17060>
  4151ec:	lea    rsi,[rip+0x2ce45]        # 442038 <_IO_stdin_used@@Base+0x15038>
  4151f3:	lea    rdi,[rip+0x1997e]        # 42eb78 <_IO_stdin_used@@Base+0x1b78>
  4151fa:	mov    edx,0x4de
  4151ff:	call   405100 <__assert_fail@plt>
  415204:	call   4050d0 <__stack_chk_fail@plt>
  415209:	lea    rcx,[rip+0x2ee50]        # 444060 <_IO_stdin_used@@Base+0x17060>
  415210:	lea    rsi,[rip+0x2ce21]        # 442038 <_IO_stdin_used@@Base+0x15038>
  415217:	lea    rdi,[rip+0x2c887]        # 441aa5 <_IO_stdin_used@@Base+0x14aa5>
  41521e:	mov    edx,0x4fe
  415223:	call   405100 <__assert_fail@plt>
  415228:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000415230 <__flatcc_fb_gen_c_json_parser@@Base>:
  415230:	push   r15
  415232:	push   r14
  415234:	lea    rsi,[rip+0x2cc53]        # 441e8e <_IO_stdin_used@@Base+0x14e8e>
  41523b:	push   r13
  41523d:	push   r12
  41523f:	push   rbp
  415240:	push   rbx
  415241:	mov    rbx,rdi
  415244:	sub    rsp,0x198
  41524b:	mov    rax,QWORD PTR fs:0x28
  415254:	mov    QWORD PTR [rsp+0x188],rax
  41525c:	xor    eax,eax
  41525e:	mov    rax,QWORD PTR [rdi+0xd8]
  415265:	mov    rdx,QWORD PTR [rax+0x118]
  41526c:	xor    eax,eax
  41526e:	call   4114d0 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  415273:	mov    rax,QWORD PTR [rbx+0xd8]
  41527a:	lea    rsi,[rip+0x2cc26]        # 441ea7 <_IO_stdin_used@@Base+0x14ea7>
  415281:	mov    rdi,rbx
  415284:	mov    rdx,QWORD PTR [rax+0x118]
  41528b:	xor    eax,eax
  41528d:	call   4114d0 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  415292:	lea    rsi,[rip+0x30575]        # 44580e <_IO_stdin_used@@Base+0x1880e>
  415299:	xor    eax,eax
  41529b:	mov    rdi,rbx
  41529e:	call   4114d0 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  4152a3:	lea    rsi,[rip+0x2e406]        # 4436b0 <_IO_stdin_used@@Base+0x166b0>
  4152aa:	xor    eax,eax
  4152ac:	mov    rdi,rbx
  4152af:	call   4114d0 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  4152b4:	lea    rsi,[rip+0x30553]        # 44580e <_IO_stdin_used@@Base+0x1880e>
  4152bb:	xor    eax,eax
  4152bd:	mov    rdi,rbx
  4152c0:	call   4114d0 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  4152c5:	lea    rsi,[rip+0x2e434]        # 443700 <_IO_stdin_used@@Base+0x16700>
  4152cc:	xor    eax,eax
  4152ce:	mov    rdi,rbx
  4152d1:	call   4114d0 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  4152d6:	lea    rdx,[rip+0x2cbd4]        # 441eb1 <_IO_stdin_used@@Base+0x14eb1>
  4152dd:	lea    rsi,[rip+0x19679]        # 42e95d <_IO_stdin_used@@Base+0x195d>
  4152e4:	mov    rdi,rbx
  4152e7:	call   4070a0 <__flatcc_fb_gen_c_includes@@Base>
  4152ec:	mov    rax,QWORD PTR [rbx+0xe0]
  4152f3:	mov    ecx,DWORD PTR [rax+0xac]
  4152f9:	test   ecx,ecx
  4152fb:	je     415317 <__flatcc_fb_gen_c_json_parser@@Base+0xe7>
  4152fd:	mov    rdi,QWORD PTR [rbx+0xd0]
  415304:	lea    rdx,[rip+0x1ab45]        # 42fe50 <_IO_stdin_used@@Base+0x2e50>
  41530b:	mov    esi,0x1
  415310:	xor    eax,eax
  415312:	call   405200 <__fprintf_chk@plt>
  415317:	lea    rsi,[rip+0x304f0]        # 44580e <_IO_stdin_used@@Base+0x1880e>
  41531e:	xor    eax,eax
  415320:	mov    rdi,rbx
  415323:	lea    rbp,[rsp+0xa0]
  41532b:	call   4114d0 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  415330:	mov    rdx,QWORD PTR [rbx+0xd8]
  415337:	xor    eax,eax
  415339:	mov    ecx,0x1d
  41533e:	mov    rdi,rbp
  415341:	mov    rsi,QWORD PTR [rdx+0x58]
  415345:	rep stos QWORD PTR es:[rdi],rax
  415348:	test   rsi,rsi
  41534b:	je     415358 <__flatcc_fb_gen_c_json_parser@@Base+0x128>
  41534d:	cmp    WORD PTR [rsi+0x10],0x1
  415352:	jbe    415f48 <__flatcc_fb_gen_c_json_parser@@Base+0xd18>
  415358:	mov    r12,QWORD PTR [rdx+0x40]
  41535c:	test   r12,r12
  41535f:	je     415477 <__flatcc_fb_gen_c_json_parser@@Base+0x247>
  415365:	lea    r13,[rip+0x2e68c]        # 4439f8 <_IO_stdin_used@@Base+0x169f8>
  41536c:	jmp    41541f <__flatcc_fb_gen_c_json_parser@@Base+0x1ef>
  415371:	nop    DWORD PTR [rax+0x0]
  415378:	jb     415d30 <__flatcc_fb_gen_c_json_parser@@Base+0xb00>
  41537e:	cmp    ax,0x3
  415382:	je     415cb0 <__flatcc_fb_gen_c_json_parser@@Base+0xa80>
  415388:	cmp    ax,0x4
  41538c:	jne    415416 <__flatcc_fb_gen_c_json_parser@@Base+0x1e6>
  415392:	mov    rdi,QWORD PTR [r12+0x18]
  415397:	mov    rdx,rbp
  41539a:	mov    rsi,r12
  41539d:	call   407300 <__flatcc_fb_scoped_symbol_name@@Base>
  4153a2:	lea    rsi,[rip+0x2e587]        # 443930 <_IO_stdin_used@@Base+0x16930>
  4153a9:	xor    eax,eax
  4153ab:	mov    rdx,rbp
  4153ae:	mov    rdi,rbx
  4153b1:	call   4114d0 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  4153b6:	lea    rsi,[rip+0x2e603]        # 4439c0 <_IO_stdin_used@@Base+0x169c0>
  4153bd:	xor    eax,eax
  4153bf:	mov    rdx,rbp
  4153c2:	mov    rdi,rbx
  4153c5:	call   4114d0 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  4153ca:	lea    rsi,[rip+0x2e23f]        # 443610 <_IO_stdin_used@@Base+0x16610>
  4153d1:	xor    eax,eax
  4153d3:	mov    rdx,rbp
  4153d6:	mov    rdi,rbx
  4153d9:	call   4114d0 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  4153de:	add    DWORD PTR [rbx+0xf0],0x2
  4153e5:	lea    rsi,[rip+0x2cdcc]        # 4421b8 <_IO_stdin_used@@Base+0x151b8>
  4153ec:	xor    eax,eax
  4153ee:	mov    rdi,rbx
  4153f1:	call   4114d0 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  4153f6:	mov    eax,DWORD PTR [rbx+0xf0]
  4153fc:	test   eax,eax
  4153fe:	je     4161c2 <__flatcc_fb_gen_c_json_parser@@Base+0xf92>
  415404:	cmp    eax,0x1
  415407:	je     4161b8 <__flatcc_fb_gen_c_json_parser@@Base+0xf88>
  41540d:	sub    eax,0x2
  415410:	mov    DWORD PTR [rbx+0xf0],eax
  415416:	mov    r12,QWORD PTR [r12]
  41541a:	test   r12,r12
  41541d:	je     415470 <__flatcc_fb_gen_c_json_parser@@Base+0x240>
  41541f:	movzx  eax,WORD PTR [r12+0x10]
  415425:	cmp    ax,0x1
  415429:	jne    415378 <__flatcc_fb_gen_c_json_parser@@Base+0x148>
  41542f:	mov    rdi,QWORD PTR [r12+0x18]
  415434:	mov    rsi,r12
  415437:	mov    rdx,rbp
  41543a:	call   407300 <__flatcc_fb_scoped_symbol_name@@Base>
  41543f:	xor    eax,eax
  415441:	mov    rdx,rbp
  415444:	mov    rsi,r13
  415447:	mov    rdi,rbx
  41544a:	call   4114d0 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  41544f:	lea    rsi,[rip+0x2e622]        # 443a78 <_IO_stdin_used@@Base+0x16a78>
  415456:	xor    eax,eax
  415458:	mov    rdx,rbp
  41545b:	mov    rdi,rbx
  41545e:	call   4114d0 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  415463:	mov    r12,QWORD PTR [r12]
  415467:	test   r12,r12
  41546a:	jne    41541f <__flatcc_fb_gen_c_json_parser@@Base+0x1ef>
  41546c:	nop    DWORD PTR [rax+0x0]
  415470:	mov    rdx,QWORD PTR [rbx+0xd8]
  415477:	mov    rdi,QWORD PTR [rdx+0x68]
  41547b:	lea    rsi,[rip+0xffffffffffffcfde]        # 412460 <__flatcc_fb_gen_c_verifier@@Base+0x16d0>
  415482:	mov    rdx,rbx
  415485:	call   41c310 <fb_scope_table_visit@@Base>
  41548a:	mov    rax,QWORD PTR [rbx+0xd8]
  415491:	lea    rsi,[rip+0x2e6f0]        # 443b88 <_IO_stdin_used@@Base+0x16b88>
  415498:	mov    rdi,rbx
  41549b:	mov    rdx,QWORD PTR [rax+0x110]
  4154a2:	xor    eax,eax
  4154a4:	call   4114d0 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  4154a9:	add    DWORD PTR [rbx+0xf0],0x2
  4154b0:	lea    rsi,[rip+0x2cd01]        # 4421b8 <_IO_stdin_used@@Base+0x151b8>
  4154b7:	xor    eax,eax
  4154b9:	mov    rdi,rbx
  4154bc:	call   4114d0 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  4154c1:	mov    eax,DWORD PTR [rbx+0xf0]
  4154c7:	test   eax,eax
  4154c9:	je     416368 <__flatcc_fb_gen_c_json_parser@@Base+0x1138>
  4154cf:	cmp    eax,0x1
  4154d2:	je     41635e <__flatcc_fb_gen_c_json_parser@@Base+0x112e>
  4154d8:	sub    eax,0x2
  4154db:	lea    rsi,[rip+0x3032c]        # 44580e <_IO_stdin_used@@Base+0x1880e>
  4154e2:	mov    rdi,rbx
  4154e5:	mov    DWORD PTR [rbx+0xf0],eax
  4154eb:	xor    eax,eax
  4154ed:	call   4114d0 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  4154f2:	mov    rax,QWORD PTR [rbx+0xd8]
  4154f9:	mov    r12,QWORD PTR [rax+0x40]
  4154fd:	test   r12,r12
  415500:	je     415757 <__flatcc_fb_gen_c_json_parser@@Base+0x527>
  415506:	xor    r13d,r13d
  415509:	jmp    415554 <__flatcc_fb_gen_c_json_parser@@Base+0x324>
  41550b:	nop    DWORD PTR [rax+rax*1+0x0]
  415510:	jb     415d70 <__flatcc_fb_gen_c_json_parser@@Base+0xb40>
  415516:	cmp    ax,0x3
  41551a:	je     415d60 <__flatcc_fb_gen_c_json_parser@@Base+0xb30>
  415520:	cmp    ax,0x4
  415524:	jne    415547 <__flatcc_fb_gen_c_json_parser@@Base+0x317>
  415526:	mov    rsi,r12
  415529:	mov    rdi,rbx
  41552c:	call   4124e0 <__flatcc_fb_gen_c_verifier@@Base+0x1750>
  415531:	mov    rsi,r12
  415534:	mov    rdi,rbx
  415537:	call   412a60 <__flatcc_fb_gen_c_verifier@@Base+0x1cd0>
  41553c:	mov    rsi,r12
  41553f:	mov    rdi,rbx
  415542:	call   414ef0 <__flatcc_fb_gen_c_verifier@@Base+0x4160>
  415547:	mov    r12,QWORD PTR [r12]
  41554b:	test   r12,r12
  41554e:	je     415750 <__flatcc_fb_gen_c_json_parser@@Base+0x520>
  415554:	movzx  eax,WORD PTR [r12+0x10]
  41555a:	cmp    ax,0x1
  41555e:	jne    415510 <__flatcc_fb_gen_c_json_parser@@Base+0x2e0>
  415560:	mov    rsi,r12
  415563:	mov    rdi,rbx
  415566:	call   414450 <__flatcc_fb_gen_c_verifier@@Base+0x36c0>
  41556b:	cmp    WORD PTR [r12+0x10],0x1
  415572:	jne    4162ed <__flatcc_fb_gen_c_json_parser@@Base+0x10bd>
  415578:	mov    rax,r13
  41557b:	mov    ecx,0x1d
  415580:	mov    rdi,rbp
  415583:	rep stos QWORD PTR es:[rdi],rax
  415586:	mov    rdx,rbp
  415589:	mov    rsi,r12
  41558c:	mov    rdi,QWORD PTR [r12+0x18]
  415591:	call   407300 <__flatcc_fb_scoped_symbol_name@@Base>
  415596:	lea    rsi,[rip+0x2e65b]        # 443bf8 <_IO_stdin_used@@Base+0x16bf8>
  41559d:	mov    rdx,rbp
  4155a0:	xor    eax,eax
  4155a2:	mov    rdi,rbx
  4155a5:	call   4114d0 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  4155aa:	lea    rsi,[rip+0x2c617]        # 441bc8 <_IO_stdin_used@@Base+0x14bc8>
  4155b1:	xor    eax,eax
  4155b3:	mov    rdi,rbx
  4155b6:	call   4114d0 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  4155bb:	add    DWORD PTR [rbx+0xf0],0x1
  4155c2:	lea    rsi,[rip+0x2c82a]        # 441df3 <_IO_stdin_used@@Base+0x14df3>
  4155c9:	xor    eax,eax
  4155cb:	mov    rdi,rbx
  4155ce:	call   4114d0 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  4155d3:	lea    rsi,[rip+0x30234]        # 44580e <_IO_stdin_used@@Base+0x1880e>
  4155da:	xor    eax,eax
  4155dc:	mov    rdi,rbx
  4155df:	call   4114d0 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  4155e4:	lea    rsi,[rip+0x2c5c2]        # 441bad <_IO_stdin_used@@Base+0x14bad>
  4155eb:	xor    eax,eax
  4155ed:	mov    rdi,rbx
  4155f0:	call   4114d0 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  4155f5:	movzx  ecx,WORD PTR [r12+0xb0]
  4155fe:	mov    rdx,QWORD PTR [r12+0xb8]
  415606:	lea    rsi,[rip+0x2e673]        # 443c80 <_IO_stdin_used@@Base+0x16c80>
  41560d:	xor    eax,eax
  41560f:	mov    rdi,rbx
  415612:	call   4114d0 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  415617:	lea    rsi,[rip+0x2d61a]        # 442c38 <_IO_stdin_used@@Base+0x15c38>
  41561e:	mov    rdx,rbp
  415621:	xor    eax,eax
  415623:	mov    rdi,rbx
  415626:	call   4114d0 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  41562b:	lea    rsi,[rip+0x2e69e]        # 443cd0 <_IO_stdin_used@@Base+0x16cd0>
  415632:	xor    eax,eax
  415634:	mov    rdi,rbx
  415637:	call   4114d0 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  41563c:	lea    rsi,[rip+0x2c5d7]        # 441c1a <_IO_stdin_used@@Base+0x14c1a>
  415643:	xor    eax,eax
  415645:	mov    rdi,rbx
  415648:	call   4114d0 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  41564d:	mov    eax,DWORD PTR [rbx+0xf0]
  415653:	lea    rsi,[rip+0x2c7b9]        # 441e13 <_IO_stdin_used@@Base+0x14e13>
  41565a:	mov    rdi,rbx
  41565d:	mov    DWORD PTR [rbx+0xf0],0x0
  415667:	mov    DWORD PTR [rbx+0xf8],eax
  41566d:	xor    eax,eax
  41566f:	call   4114d0 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  415674:	mov    eax,DWORD PTR [rbx+0xf8]
  41567a:	lea    rsi,[rip+0x2ce1f]        # 4424a0 <_IO_stdin_used@@Base+0x154a0>
  415681:	mov    rdi,rbx
  415684:	mov    DWORD PTR [rbx+0xf0],eax
  41568a:	xor    eax,eax
  41568c:	call   4114d0 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  415691:	mov    eax,DWORD PTR [rbx+0xf0]
  415697:	test   eax,eax
  415699:	je     416267 <__flatcc_fb_gen_c_json_parser@@Base+0x1037>
  41569f:	sub    eax,0x1
  4156a2:	lea    rsi,[rip+0x2c408]        # 441ab1 <_IO_stdin_used@@Base+0x14ab1>
  4156a9:	mov    rdi,rbx
  4156ac:	mov    DWORD PTR [rbx+0xf0],eax
  4156b2:	xor    eax,eax
  4156b4:	call   4114d0 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  4156b9:	lea    rsi,[rip+0x3014e]        # 44580e <_IO_stdin_used@@Base+0x1880e>
  4156c0:	xor    eax,eax
  4156c2:	mov    rdi,rbx
  4156c5:	call   4114d0 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  4156ca:	lea    rsi,[rip+0x2de47]        # 443518 <_IO_stdin_used@@Base+0x16518>
  4156d1:	mov    rdx,rbp
  4156d4:	xor    eax,eax
  4156d6:	mov    rdi,rbx
  4156d9:	call   4114d0 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  4156de:	lea    rsi,[rip+0x2c4e3]        # 441bc8 <_IO_stdin_used@@Base+0x14bc8>
  4156e5:	xor    eax,eax
  4156e7:	mov    rdi,rbx
  4156ea:	call   4114d0 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  4156ef:	add    DWORD PTR [rbx+0xf0],0x1
  4156f6:	lea    rsi,[rip+0x2e62b]        # 443d28 <_IO_stdin_used@@Base+0x16d28>
  4156fd:	xor    eax,eax
  4156ff:	mov    rdx,rbp
  415702:	mov    rdi,rbx
  415705:	call   4114d0 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  41570a:	mov    eax,DWORD PTR [rbx+0xf0]
  415710:	test   eax,eax
  415712:	je     416248 <__flatcc_fb_gen_c_json_parser@@Base+0x1018>
  415718:	sub    eax,0x1
  41571b:	lea    rsi,[rip+0x2c38f]        # 441ab1 <_IO_stdin_used@@Base+0x14ab1>
  415722:	mov    rdi,rbx
  415725:	mov    DWORD PTR [rbx+0xf0],eax
  41572b:	xor    eax,eax
  41572d:	call   4114d0 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  415732:	lea    rsi,[rip+0x300d5]        # 44580e <_IO_stdin_used@@Base+0x1880e>
  415739:	xor    eax,eax
  41573b:	mov    rdi,rbx
  41573e:	call   4114d0 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  415743:	mov    r12,QWORD PTR [r12]
  415747:	test   r12,r12
  41574a:	jne    415554 <__flatcc_fb_gen_c_json_parser@@Base+0x324>
  415750:	mov    rax,QWORD PTR [rbx+0xd8]
  415757:	mov    rdi,QWORD PTR [rax+0x68]
  41575b:	lea    rsi,[rip+0xffffffffffffd4be]        # 412c20 <__flatcc_fb_gen_c_verifier@@Base+0x1e90>
  415762:	mov    rdx,rbx
  415765:	lea    r13,[rsp+0x50]
  41576a:	call   41c310 <fb_scope_table_visit@@Base>
  41576f:	lea    rdi,[rsp+0x20]
  415774:	xor    eax,eax
  415776:	mov    ecx,0x6
  41577b:	mov    rdx,QWORD PTR [rbx+0xd8]
  415782:	lea    rsi,[rip+0xffffffffffffba07]        # 411190 <__flatcc_fb_gen_c_verifier@@Base+0x400>
  415789:	mov    QWORD PTR [rsp+0x10],rdi
  41578e:	rep stos QWORD PTR es:[rdi],rax
  415791:	mov    ecx,0xa
  415796:	mov    rdi,r13
  415799:	mov    r15,QWORD PTR [rdx+0x68]
  41579d:	rep stos QWORD PTR es:[rdi],rax
  4157a0:	mov    QWORD PTR [rsp+0x98],rdx
  4157a8:	mov    rdi,r15
  4157ab:	mov    rdx,r13
  4157ae:	mov    DWORD PTR [rsp+0x50],0x1
  4157b6:	call   41c310 <fb_scope_table_visit@@Base>
  4157bb:	movsxd rdi,DWORD PTR [rsp+0x54]
  4157c0:	mov    esi,0x10
  4157c5:	mov    r12,rdi
  4157c8:	call   405140 <calloc@plt>
  4157cd:	movsxd rdi,DWORD PTR [rsp+0x58]
  4157d2:	mov    esi,0x10
  4157d7:	mov    QWORD PTR [rsp+0x68],rax
  4157dc:	mov    QWORD PTR [rsp],rax
  4157e0:	mov    DWORD PTR [rsp+0x1c],edi
  4157e4:	call   405140 <calloc@plt>
  4157e9:	mov    r14,rax
  4157ec:	mov    QWORD PTR [rsp+0x70],rax
  4157f1:	mov    rax,QWORD PTR [rsp+0x60]
  4157f6:	mov    rdi,rax
  4157f9:	mov    QWORD PTR [rsp+0x8],rax
  4157fe:	call   405180 <malloc@plt>
  415803:	mov    rdx,QWORD PTR [rsp]
  415807:	mov    QWORD PTR [rsp+0x78],rax
  41580c:	mov    QWORD PTR [rsp+0x88],r14
  415814:	mov    QWORD PTR [rsp+0x90],rax
  41581c:	test   rdx,rdx
  41581f:	mov    QWORD PTR [rsp+0x80],rdx
  415827:	jne    415832 <__flatcc_fb_gen_c_json_parser@@Base+0x602>
  415829:	test   r12d,r12d
  41582c:	jg     415a30 <__flatcc_fb_gen_c_json_parser@@Base+0x800>
  415832:	mov    edx,DWORD PTR [rsp+0x1c]
  415836:	test   edx,edx
  415838:	jle    415843 <__flatcc_fb_gen_c_json_parser@@Base+0x613>
  41583a:	test   r14,r14
  41583d:	je     415a30 <__flatcc_fb_gen_c_json_parser@@Base+0x800>
  415843:	test   rax,rax
  415846:	jne    415854 <__flatcc_fb_gen_c_json_parser@@Base+0x624>
  415848:	cmp    QWORD PTR [rsp+0x8],0x0
  41584e:	jne    415a30 <__flatcc_fb_gen_c_json_parser@@Base+0x800>
  415854:	lea    rsi,[rip+0xffffffffffffb915]        # 411170 <__flatcc_fb_gen_c_verifier@@Base+0x3e0>
  41585b:	mov    rdx,r13
  41585e:	mov    rdi,r15
  415861:	call   41c310 <fb_scope_table_visit@@Base>
  415866:	mov    esi,DWORD PTR [rsp+0x54]
  41586a:	mov    rdi,QWORD PTR [rsp+0x68]
  41586f:	call   4111b0 <__flatcc_fb_gen_c_verifier@@Base+0x420>
  415874:	mov    esi,DWORD PTR [rsp+0x58]
  415878:	mov    rdi,QWORD PTR [rsp+0x70]
  41587d:	call   4111b0 <__flatcc_fb_gen_c_verifier@@Base+0x420>
  415882:	mov    r12d,DWORD PTR [rsp+0x58]
  415887:	test   r12d,r12d
  41588a:	je     416100 <__flatcc_fb_gen_c_json_parser@@Base+0xed0>
  415890:	movsxd rax,r12d
  415893:	mov    rdi,rax
  415896:	mov    QWORD PTR [rsp+0x8],rax
  41589b:	shl    rdi,0x5
  41589f:	call   405180 <malloc@plt>
  4158a4:	test   rax,rax
  4158a7:	mov    QWORD PTR [rsp],rax
  4158ab:	je     416148 <__flatcc_fb_gen_c_json_parser@@Base+0xf18>
  4158b1:	test   r12d,r12d
  4158b4:	jle    4158fe <__flatcc_fb_gen_c_json_parser@@Base+0x6ce>
  4158b6:	mov    r15,QWORD PTR [rsp+0x70]
  4158bb:	sub    r12d,0x1
  4158bf:	mov    r14,QWORD PTR [rsp]
  4158c3:	add    r12,0x1
  4158c7:	shl    r12,0x4
  4158cb:	add    r12,r15
  4158ce:	xchg   ax,ax
  4158d0:	mov    rdi,QWORD PTR [r15+0x8]
  4158d4:	add    r15,0x10
  4158d8:	add    r14,0x20
  4158dc:	mov    QWORD PTR [r14-0x20],rdi
  4158e0:	call   4050c0 <strlen@plt>
  4158e5:	mov    DWORD PTR [r14-0x18],eax
  4158e9:	mov    rax,QWORD PTR [r15-0x10]
  4158ed:	mov    DWORD PTR [r14-0x8],0x0
  4158f5:	mov    QWORD PTR [r14-0x10],rax
  4158f9:	cmp    r12,r15
  4158fc:	jne    4158d0 <__flatcc_fb_gen_c_json_parser@@Base+0x6a0>
  4158fe:	mov    r15,QWORD PTR [rsp]
  415902:	mov    rsi,QWORD PTR [rsp+0x8]
  415907:	lea    rcx,[rip+0xffffffffffffb8f2]        # 411200 <__flatcc_fb_gen_c_verifier@@Base+0x470>
  41590e:	mov    edx,0x20
  415913:	mov    rdi,r15
  415916:	call   405080 <qsort@plt>
  41591b:	mov    r12d,DWORD PTR [rsp+0x58]
  415920:	mov    QWORD PTR [rsp+0x20],r15
  415925:	lea    rax,[rip+0xffffffffffffd7d4]        # 413100 <__flatcc_fb_gen_c_verifier@@Base+0x2370>
  41592c:	lea    rsi,[rip+0x2e255]        # 443b88 <_IO_stdin_used@@Base+0x16b88>
  415933:	mov    rdi,rbx
  415936:	mov    QWORD PTR [rsp+0x38],0x0
  41593f:	mov    DWORD PTR [rsp+0x40],0x4
  415947:	mov    QWORD PTR [rsp+0x28],rax
  41594c:	lea    rax,[rip+0xffffffffffffbd6d]        # 4116c0 <__flatcc_fb_gen_c_verifier@@Base+0x930>
  415953:	mov    QWORD PTR [rsp+0x30],rax
  415958:	mov    rax,QWORD PTR [rbx+0xd8]
  41595f:	mov    rdx,QWORD PTR [rax+0x110]
  415966:	xor    eax,eax
  415968:	call   4114d0 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  41596d:	add    DWORD PTR [rbx+0xf0],0x2
  415974:	lea    rsi,[rip+0x2cbf5]        # 442570 <_IO_stdin_used@@Base+0x15570>
  41597b:	xor    eax,eax
  41597d:	mov    rdi,rbx
  415980:	call   4114d0 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  415985:	mov    eax,DWORD PTR [rbx+0xf0]
  41598b:	test   eax,eax
  41598d:	je     4162ce <__flatcc_fb_gen_c_json_parser@@Base+0x109e>
  415993:	cmp    eax,0x1
  415996:	je     4162c4 <__flatcc_fb_gen_c_json_parser@@Base+0x1094>
  41599c:	sub    eax,0x2
  41599f:	lea    rsi,[rip+0x2c222]        # 441bc8 <_IO_stdin_used@@Base+0x14bc8>
  4159a6:	mov    rdi,rbx
  4159a9:	mov    DWORD PTR [rbx+0xf0],eax
  4159af:	xor    eax,eax
  4159b1:	call   4114d0 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  4159b6:	add    DWORD PTR [rbx+0xf0],0x1
  4159bd:	test   r12d,r12d
  4159c0:	jne    416053 <__flatcc_fb_gen_c_json_parser@@Base+0xe23>
  4159c6:	lea    rsi,[rip+0x2e3c3]        # 443d90 <_IO_stdin_used@@Base+0x16d90>
  4159cd:	xor    eax,eax
  4159cf:	mov    rdi,rbx
  4159d2:	call   4114d0 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  4159d7:	lea    rsi,[rip+0x2c2a6]        # 441c84 <_IO_stdin_used@@Base+0x14c84>
  4159de:	xor    eax,eax
  4159e0:	mov    rdi,rbx
  4159e3:	call   4114d0 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  4159e8:	mov    eax,DWORD PTR [rbx+0xf0]
  4159ee:	test   eax,eax
  4159f0:	je     4162a5 <__flatcc_fb_gen_c_json_parser@@Base+0x1075>
  4159f6:	sub    eax,0x1
  4159f9:	lea    rsi,[rip+0x2c0b1]        # 441ab1 <_IO_stdin_used@@Base+0x14ab1>
  415a00:	mov    rdi,rbx
  415a03:	mov    DWORD PTR [rbx+0xf0],eax
  415a09:	xor    eax,eax
  415a0b:	call   4114d0 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  415a10:	lea    rsi,[rip+0x2fdf7]        # 44580e <_IO_stdin_used@@Base+0x1880e>
  415a17:	mov    rdi,rbx
  415a1a:	xor    eax,eax
  415a1c:	call   4114d0 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  415a21:	mov    rdi,QWORD PTR [rsp+0x20]
  415a26:	test   rdi,rdi
  415a29:	je     415a30 <__flatcc_fb_gen_c_json_parser@@Base+0x800>
  415a2b:	call   405040 <free@plt>
  415a30:	mov    rdi,r13
  415a33:	call   411380 <__flatcc_fb_gen_c_verifier@@Base+0x5f0>
  415a38:	mov    rax,QWORD PTR [rbx+0xd8]
  415a3f:	mov    rsi,QWORD PTR [rax+0x58]
  415a43:	test   rsi,rsi
  415a46:	je     415c34 <__flatcc_fb_gen_c_json_parser@@Base+0xa04>
  415a4c:	movzx  eax,WORD PTR [rsi+0x10]
  415a50:	test   ax,ax
  415a53:	je     415d80 <__flatcc_fb_gen_c_json_parser@@Base+0xb50>
  415a59:	cmp    ax,0x1
  415a5d:	jne    415c34 <__flatcc_fb_gen_c_json_parser@@Base+0xa04>
  415a63:	xor    eax,eax
  415a65:	mov    ecx,0x1d
  415a6a:	mov    rdi,rbp
  415a6d:	rep stos QWORD PTR es:[rdi],rax
  415a70:	mov    rdx,rbp
  415a73:	mov    rdi,QWORD PTR [rsi+0x18]
  415a77:	call   407300 <__flatcc_fb_scoped_symbol_name@@Base>
  415a7c:	mov    rax,QWORD PTR [rbx+0xd8]
  415a83:	lea    rsi,[rip+0x2de26]        # 4438b0 <_IO_stdin_used@@Base+0x168b0>
  415a8a:	mov    rdi,rbx
  415a8d:	mov    rdx,QWORD PTR [rax+0x110]
  415a94:	xor    eax,eax
  415a96:	call   4114d0 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  415a9b:	add    DWORD PTR [rbx+0xf0],0x2
  415aa2:	lea    rsi,[rip+0x2e327]        # 443dd0 <_IO_stdin_used@@Base+0x16dd0>
  415aa9:	xor    eax,eax
  415aab:	mov    rdi,rbx
  415aae:	call   4114d0 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  415ab3:	mov    eax,DWORD PTR [rbx+0xf0]
  415ab9:	test   eax,eax
  415abb:	je     416316 <__flatcc_fb_gen_c_json_parser@@Base+0x10e6>
  415ac1:	cmp    eax,0x1
  415ac4:	je     41630c <__flatcc_fb_gen_c_json_parser@@Base+0x10dc>
  415aca:	sub    eax,0x2
  415acd:	lea    rsi,[rip+0x2c0f4]        # 441bc8 <_IO_stdin_used@@Base+0x14bc8>
  415ad4:	mov    rdi,rbx
  415ad7:	mov    DWORD PTR [rbx+0xf0],eax
  415add:	xor    eax,eax
  415adf:	call   4114d0 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  415ae4:	add    DWORD PTR [rbx+0xf0],0x1
  415aeb:	lea    rsi,[rip+0x2c460]        # 441f52 <_IO_stdin_used@@Base+0x14f52>
  415af2:	xor    eax,eax
  415af4:	mov    rdi,rbx
  415af7:	call   4114d0 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  415afc:	lea    rsi,[rip+0x2c3e0]        # 441ee3 <_IO_stdin_used@@Base+0x14ee3>
  415b03:	xor    eax,eax
  415b05:	mov    rdi,rbx
  415b08:	call   4114d0 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  415b0d:	lea    rsi,[rip+0x2fcfa]        # 44580e <_IO_stdin_used@@Base+0x1880e>
  415b14:	xor    eax,eax
  415b16:	mov    rdi,rbx
  415b19:	call   4114d0 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  415b1e:	lea    rsi,[rip+0x2c448]        # 441f6d <_IO_stdin_used@@Base+0x14f6d>
  415b25:	xor    eax,eax
  415b27:	mov    rdi,rbx
  415b2a:	call   4114d0 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  415b2f:	lea    rsi,[rip+0x2e2ca]        # 443e00 <_IO_stdin_used@@Base+0x16e00>
  415b36:	xor    eax,eax
  415b38:	mov    rdi,rbx
  415b3b:	call   4114d0 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  415b40:	mov    rax,QWORD PTR [rbx+0xd8]
  415b47:	cmp    WORD PTR [rax+0x20],0x2
  415b4c:	je     41610e <__flatcc_fb_gen_c_json_parser@@Base+0xede>
  415b52:	lea    rsi,[rip+0x2e327]        # 443e80 <_IO_stdin_used@@Base+0x16e80>
  415b59:	mov    rdi,rbx
  415b5c:	xor    eax,eax
  415b5e:	call   4114d0 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  415b63:	lea    rsi,[rip+0x2e3be]        # 443f28 <_IO_stdin_used@@Base+0x16f28>
  415b6a:	mov    rdx,rbp
  415b6d:	xor    eax,eax
  415b6f:	mov    rdi,rbx
  415b72:	call   4114d0 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  415b77:	lea    rsi,[rip+0x2c39b]        # 441f19 <_IO_stdin_used@@Base+0x14f19>
  415b7e:	xor    eax,eax
  415b80:	mov    rdi,rbx
  415b83:	call   4114d0 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  415b88:	add    DWORD PTR [rbx+0xf0],0x1
  415b8f:	lea    rsi,[rip+0x2c395]        # 441f2b <_IO_stdin_used@@Base+0x14f2b>
  415b96:	xor    eax,eax
  415b98:	mov    rdi,rbx
  415b9b:	call   4114d0 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  415ba0:	mov    eax,DWORD PTR [rbx+0xf0]
  415ba6:	test   eax,eax
  415ba8:	je     416229 <__flatcc_fb_gen_c_json_parser@@Base+0xff9>
  415bae:	sub    eax,0x1
  415bb1:	lea    rsi,[rip+0x2bef9]        # 441ab1 <_IO_stdin_used@@Base+0x14ab1>
  415bb8:	mov    rdi,rbx
  415bbb:	mov    DWORD PTR [rbx+0xf0],eax
  415bc1:	xor    eax,eax
  415bc3:	call   4114d0 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  415bc8:	lea    rsi,[rip+0x2e321]        # 443ef0 <_IO_stdin_used@@Base+0x16ef0>
  415bcf:	xor    eax,eax
  415bd1:	mov    rdi,rbx
  415bd4:	call   4114d0 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  415bd9:	lea    rsi,[rip+0x2c35e]        # 441f3e <_IO_stdin_used@@Base+0x14f3e>
  415be0:	xor    eax,eax
  415be2:	mov    rdi,rbx
  415be5:	call   4114d0 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  415bea:	lea    rsi,[rip+0x2c04e]        # 441c3f <_IO_stdin_used@@Base+0x14c3f>
  415bf1:	xor    eax,eax
  415bf3:	mov    rdi,rbx
  415bf6:	call   4114d0 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  415bfb:	mov    eax,DWORD PTR [rbx+0xf0]
  415c01:	test   eax,eax
  415c03:	je     416286 <__flatcc_fb_gen_c_json_parser@@Base+0x1056>
  415c09:	sub    eax,0x1
  415c0c:	lea    rsi,[rip+0x2be9e]        # 441ab1 <_IO_stdin_used@@Base+0x14ab1>
  415c13:	mov    rdi,rbx
  415c16:	mov    DWORD PTR [rbx+0xf0],eax
  415c1c:	xor    eax,eax
  415c1e:	call   4114d0 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  415c23:	lea    rsi,[rip+0x2fbe4]        # 44580e <_IO_stdin_used@@Base+0x1880e>
  415c2a:	mov    rdi,rbx
  415c2d:	xor    eax,eax
  415c2f:	call   4114d0 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  415c34:	mov    rax,QWORD PTR [rbx+0xe0]
  415c3b:	mov    eax,DWORD PTR [rax+0xac]
  415c41:	test   eax,eax
  415c43:	je     415c5f <__flatcc_fb_gen_c_json_parser@@Base+0xa2f>
  415c45:	mov    rdi,QWORD PTR [rbx+0xd0]
  415c4c:	lea    rdx,[rip+0x200ad]        # 435d00 <_IO_stdin_used@@Base+0x8d00>
  415c53:	mov    esi,0x1
  415c58:	xor    eax,eax
  415c5a:	call   405200 <__fprintf_chk@plt>
  415c5f:	mov    rax,QWORD PTR [rbx+0xd8]
  415c66:	lea    rsi,[rip+0x2c319]        # 441f86 <_IO_stdin_used@@Base+0x14f86>
  415c6d:	mov    rdi,rbx
  415c70:	mov    rdx,QWORD PTR [rax+0x118]
  415c77:	xor    eax,eax
  415c79:	call   4114d0 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  415c7e:	xor    eax,eax
  415c80:	mov    rcx,QWORD PTR [rsp+0x188]
  415c88:	xor    rcx,QWORD PTR fs:0x28
  415c91:	jne    416387 <__flatcc_fb_gen_c_json_parser@@Base+0x1157>
  415c97:	add    rsp,0x198
  415c9e:	pop    rbx
  415c9f:	pop    rbp
  415ca0:	pop    r12
  415ca2:	pop    r13
  415ca4:	pop    r14
  415ca6:	pop    r15
  415ca8:	ret    
  415ca9:	nop    DWORD PTR [rax+0x0]
  415cb0:	mov    rdi,QWORD PTR [r12+0x18]
  415cb5:	mov    rdx,rbp
  415cb8:	mov    rsi,r12
  415cbb:	call   407300 <__flatcc_fb_scoped_symbol_name@@Base>
  415cc0:	lea    rsi,[rip+0x2d949]        # 443610 <_IO_stdin_used@@Base+0x16610>
  415cc7:	xor    eax,eax
  415cc9:	mov    rdx,rbp
  415ccc:	mov    rdi,rbx
  415ccf:	call   4114d0 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  415cd4:	add    DWORD PTR [rbx+0xf0],0x2
  415cdb:	lea    rsi,[rip+0x2c4d6]        # 4421b8 <_IO_stdin_used@@Base+0x151b8>
  415ce2:	xor    eax,eax
  415ce4:	mov    rdx,rbp
  415ce7:	mov    rdi,rbx
  415cea:	call   4114d0 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  415cef:	mov    eax,DWORD PTR [rbx+0xf0]
  415cf5:	test   eax,eax
  415cf7:	je     415d0c <__flatcc_fb_gen_c_json_parser@@Base+0xadc>
  415cf9:	cmp    eax,0x1
  415cfc:	jne    41540d <__flatcc_fb_gen_c_json_parser@@Base+0x1dd>
  415d02:	mov    DWORD PTR [rbx+0xf0],0x0
  415d0c:	lea    rcx,[rip+0x2e4bd]        # 4441d0 <_IO_stdin_used@@Base+0x171d0>
  415d13:	lea    rsi,[rip+0x2c31e]        # 442038 <_IO_stdin_used@@Base+0x15038>
  415d1a:	lea    rdi,[rip+0x2bd84]        # 441aa5 <_IO_stdin_used@@Base+0x14aa5>
  415d21:	mov    edx,0x6d3
  415d26:	call   405100 <__assert_fail@plt>
  415d2b:	nop    DWORD PTR [rax+rax*1+0x0]
  415d30:	mov    rdi,QWORD PTR [r12+0x18]
  415d35:	mov    rdx,rbp
  415d38:	mov    rsi,r12
  415d3b:	call   407300 <__flatcc_fb_scoped_symbol_name@@Base>
  415d40:	lea    rsi,[rip+0x2ddb9]        # 443b00 <_IO_stdin_used@@Base+0x16b00>
  415d47:	mov    rdx,rbp
  415d4a:	mov    rdi,rbx
  415d4d:	xor    eax,eax
  415d4f:	call   4114d0 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  415d54:	jmp    415416 <__flatcc_fb_gen_c_json_parser@@Base+0x1e6>
  415d59:	nop    DWORD PTR [rax+0x0]
  415d60:	mov    rsi,r12
  415d63:	mov    rdi,rbx
  415d66:	call   414ef0 <__flatcc_fb_gen_c_verifier@@Base+0x4160>
  415d6b:	jmp    415547 <__flatcc_fb_gen_c_json_parser@@Base+0x317>
  415d70:	mov    rsi,r12
  415d73:	mov    rdi,rbx
  415d76:	call   4147f0 <__flatcc_fb_gen_c_verifier@@Base+0x3a60>
  415d7b:	jmp    415547 <__flatcc_fb_gen_c_json_parser@@Base+0x317>
  415d80:	xor    eax,eax
  415d82:	mov    ecx,0x1d
  415d87:	mov    rdi,rbp
  415d8a:	rep stos QWORD PTR es:[rdi],rax
  415d8d:	mov    rdx,rbp
  415d90:	mov    rdi,QWORD PTR [rsi+0x18]
  415d94:	call   407300 <__flatcc_fb_scoped_symbol_name@@Base>
  415d99:	mov    rax,QWORD PTR [rbx+0xd8]
  415da0:	lea    rsi,[rip+0x2db09]        # 4438b0 <_IO_stdin_used@@Base+0x168b0>
  415da7:	mov    rdi,rbx
  415daa:	mov    rdx,QWORD PTR [rax+0x110]
  415db1:	xor    eax,eax
  415db3:	call   4114d0 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  415db8:	add    DWORD PTR [rbx+0xf0],0x2
  415dbf:	lea    rsi,[rip+0x2e00a]        # 443dd0 <_IO_stdin_used@@Base+0x16dd0>
  415dc6:	xor    eax,eax
  415dc8:	mov    rdi,rbx
  415dcb:	call   4114d0 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  415dd0:	mov    eax,DWORD PTR [rbx+0xf0]
  415dd6:	test   eax,eax
  415dd8:	je     41633f <__flatcc_fb_gen_c_json_parser@@Base+0x110f>
  415dde:	cmp    eax,0x1
  415de1:	je     416335 <__flatcc_fb_gen_c_json_parser@@Base+0x1105>
  415de7:	sub    eax,0x2
  415dea:	lea    rsi,[rip+0x2bdd7]        # 441bc8 <_IO_stdin_used@@Base+0x14bc8>
  415df1:	mov    rdi,rbx
  415df4:	mov    DWORD PTR [rbx+0xf0],eax
  415dfa:	xor    eax,eax
  415dfc:	call   4114d0 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  415e01:	add    DWORD PTR [rbx+0xf0],0x1
  415e08:	lea    rsi,[rip+0x2c0b7]        # 441ec6 <_IO_stdin_used@@Base+0x14ec6>
  415e0f:	xor    eax,eax
  415e11:	mov    rdi,rbx
  415e14:	call   4114d0 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  415e19:	lea    rsi,[rip+0x2c0c3]        # 441ee3 <_IO_stdin_used@@Base+0x14ee3>
  415e20:	xor    eax,eax
  415e22:	mov    rdi,rbx
  415e25:	call   4114d0 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  415e2a:	lea    rsi,[rip+0x2f9dd]        # 44580e <_IO_stdin_used@@Base+0x1880e>
  415e31:	xor    eax,eax
  415e33:	mov    rdi,rbx
  415e36:	call   4114d0 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  415e3b:	lea    rsi,[rip+0x2c0bc]        # 441efe <_IO_stdin_used@@Base+0x14efe>
  415e42:	xor    eax,eax
  415e44:	mov    rdi,rbx
  415e47:	call   4114d0 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  415e4c:	lea    rsi,[rip+0x2dfad]        # 443e00 <_IO_stdin_used@@Base+0x16e00>
  415e53:	xor    eax,eax
  415e55:	mov    rdi,rbx
  415e58:	call   4114d0 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  415e5d:	mov    rax,QWORD PTR [rbx+0xd8]
  415e64:	cmp    WORD PTR [rax+0x20],0x2
  415e69:	je     41612b <__flatcc_fb_gen_c_json_parser@@Base+0xefb>
  415e6f:	lea    rsi,[rip+0x2e00a]        # 443e80 <_IO_stdin_used@@Base+0x16e80>
  415e76:	mov    rdi,rbx
  415e79:	xor    eax,eax
  415e7b:	call   4114d0 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  415e80:	lea    rsi,[rip+0x2e031]        # 443eb8 <_IO_stdin_used@@Base+0x16eb8>
  415e87:	mov    rdx,rbp
  415e8a:	xor    eax,eax
  415e8c:	mov    rdi,rbx
  415e8f:	call   4114d0 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  415e94:	lea    rsi,[rip+0x2c07e]        # 441f19 <_IO_stdin_used@@Base+0x14f19>
  415e9b:	xor    eax,eax
  415e9d:	mov    rdi,rbx
  415ea0:	call   4114d0 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  415ea5:	add    DWORD PTR [rbx+0xf0],0x1
  415eac:	lea    rsi,[rip+0x2c078]        # 441f2b <_IO_stdin_used@@Base+0x14f2b>
  415eb3:	xor    eax,eax
  415eb5:	mov    rdi,rbx
  415eb8:	call   4114d0 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  415ebd:	mov    eax,DWORD PTR [rbx+0xf0]
  415ec3:	test   eax,eax
  415ec5:	je     41620a <__flatcc_fb_gen_c_json_parser@@Base+0xfda>
  415ecb:	sub    eax,0x1
  415ece:	lea    rsi,[rip+0x2bbdc]        # 441ab1 <_IO_stdin_used@@Base+0x14ab1>
  415ed5:	mov    rdi,rbx
  415ed8:	mov    DWORD PTR [rbx+0xf0],eax
  415ede:	xor    eax,eax
  415ee0:	call   4114d0 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  415ee5:	lea    rsi,[rip+0x2e004]        # 443ef0 <_IO_stdin_used@@Base+0x16ef0>
  415eec:	xor    eax,eax
  415eee:	mov    rdi,rbx
  415ef1:	call   4114d0 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  415ef6:	lea    rsi,[rip+0x2c041]        # 441f3e <_IO_stdin_used@@Base+0x14f3e>
  415efd:	xor    eax,eax
  415eff:	mov    rdi,rbx
  415f02:	call   4114d0 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  415f07:	lea    rsi,[rip+0x2bd31]        # 441c3f <_IO_stdin_used@@Base+0x14c3f>
  415f0e:	xor    eax,eax
  415f10:	mov    rdi,rbx
  415f13:	call   4114d0 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  415f18:	mov    eax,DWORD PTR [rbx+0xf0]
  415f1e:	test   eax,eax
  415f20:	jne    415c09 <__flatcc_fb_gen_c_json_parser@@Base+0x9d9>
  415f26:	lea    rcx,[rip+0x2e0c3]        # 443ff0 <_IO_stdin_used@@Base+0x16ff0>
  415f2d:	lea    rsi,[rip+0x2c104]        # 442038 <_IO_stdin_used@@Base+0x15038>
  415f34:	lea    rdi,[rip+0x2bb6a]        # 441aa5 <_IO_stdin_used@@Base+0x14aa5>
  415f3b:	mov    edx,0x65e
  415f40:	call   405100 <__assert_fail@plt>
  415f45:	nop    DWORD PTR [rax]
  415f48:	lea    rsi,[rip+0x2bf71]        # 441ec0 <_IO_stdin_used@@Base+0x14ec0>
  415f4f:	mov    rdi,rbx
  415f52:	call   4114d0 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  415f57:	lea    rsi,[rip+0x2d7ca]        # 443728 <_IO_stdin_used@@Base+0x16728>
  415f5e:	xor    eax,eax
  415f60:	mov    rdi,rbx
  415f63:	call   4114d0 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  415f68:	lea    rsi,[rip+0x2bf54]        # 441ec3 <_IO_stdin_used@@Base+0x14ec3>
  415f6f:	xor    eax,eax
  415f71:	mov    rdi,rbx
  415f74:	call   4114d0 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  415f79:	lea    rsi,[rip+0x2d800]        # 443780 <_IO_stdin_used@@Base+0x16780>
  415f80:	xor    eax,eax
  415f82:	mov    rdi,rbx
  415f85:	call   4114d0 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  415f8a:	lea    rsi,[rip+0x2d837]        # 4437c8 <_IO_stdin_used@@Base+0x167c8>
  415f91:	xor    eax,eax
  415f93:	mov    rdi,rbx
  415f96:	call   4114d0 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  415f9b:	lea    rsi,[rip+0x2d85e]        # 443800 <_IO_stdin_used@@Base+0x16800>
  415fa2:	xor    eax,eax
  415fa4:	mov    rdi,rbx
  415fa7:	call   4114d0 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  415fac:	lea    rsi,[rip+0x2d875]        # 443828 <_IO_stdin_used@@Base+0x16828>
  415fb3:	xor    eax,eax
  415fb5:	mov    rdi,rbx
  415fb8:	call   4114d0 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  415fbd:	lea    rsi,[rip+0x2d8ac]        # 443870 <_IO_stdin_used@@Base+0x16870>
  415fc4:	xor    eax,eax
  415fc6:	mov    rdi,rbx
  415fc9:	call   4114d0 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  415fce:	lea    rsi,[rip+0x2baf0]        # 441ac5 <_IO_stdin_used@@Base+0x14ac5>
  415fd5:	xor    eax,eax
  415fd7:	mov    rdi,rbx
  415fda:	call   4114d0 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  415fdf:	mov    rax,QWORD PTR [rbx+0xd8]
  415fe6:	lea    rsi,[rip+0x2d8c3]        # 4438b0 <_IO_stdin_used@@Base+0x168b0>
  415fed:	mov    rdi,rbx
  415ff0:	mov    rdx,QWORD PTR [rax+0x110]
  415ff7:	xor    eax,eax
  415ff9:	call   4114d0 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  415ffe:	add    DWORD PTR [rbx+0xf0],0x2
  416005:	lea    rsi,[rip+0x2d8f4]        # 443900 <_IO_stdin_used@@Base+0x16900>
  41600c:	xor    eax,eax
  41600e:	mov    rdi,rbx
  416011:	call   4114d0 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  416016:	mov    eax,DWORD PTR [rbx+0xf0]
  41601c:	test   eax,eax
  41601e:	je     4161eb <__flatcc_fb_gen_c_json_parser@@Base+0xfbb>
  416024:	cmp    eax,0x1
  416027:	je     4161e1 <__flatcc_fb_gen_c_json_parser@@Base+0xfb1>
  41602d:	sub    eax,0x2
  416030:	lea    rsi,[rip+0x2f7d7]        # 44580e <_IO_stdin_used@@Base+0x1880e>
  416037:	mov    rdi,rbx
  41603a:	mov    DWORD PTR [rbx+0xf0],eax
  416040:	xor    eax,eax
  416042:	call   4114d0 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  416047:	mov    rdx,QWORD PTR [rbx+0xd8]
  41604e:	jmp    415358 <__flatcc_fb_gen_c_json_parser@@Base+0x128>
  416053:	lea    rsi,[rip+0x2bc47]        # 441ca1 <_IO_stdin_used@@Base+0x14ca1>
  41605a:	xor    eax,eax
  41605c:	mov    rdi,rbx
  41605f:	call   4114d0 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  416064:	lea    rsi,[rip+0x2bc53]        # 441cbe <_IO_stdin_used@@Base+0x14cbe>
  41606b:	xor    eax,eax
  41606d:	mov    rdi,rbx
  416070:	call   4114d0 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  416075:	lea    rsi,[rip+0x2bc54]        # 441cd0 <_IO_stdin_used@@Base+0x14cd0>
  41607c:	xor    eax,eax
  41607e:	mov    rdi,rbx
  416081:	call   4114d0 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  416086:	lea    rsi,[rip+0x2f781]        # 44580e <_IO_stdin_used@@Base+0x1880e>
  41608d:	xor    eax,eax
  41608f:	mov    rdi,rbx
  416092:	call   4114d0 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  416097:	lea    rsi,[rip+0x2c07a]        # 442118 <_IO_stdin_used@@Base+0x15118>
  41609e:	xor    eax,eax
  4160a0:	mov    rdi,rbx
  4160a3:	call   4114d0 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  4160a8:	mov    rsi,QWORD PTR [rsp+0x10]
  4160ad:	lea    ecx,[r12-0x1]
  4160b2:	xor    r8d,r8d
  4160b5:	xor    edx,edx
  4160b7:	mov    rdi,rbx
  4160ba:	call   411af0 <__flatcc_fb_gen_c_verifier@@Base+0xd60>
  4160bf:	lea    rsi,[rip+0x2bb54]        # 441c1a <_IO_stdin_used@@Base+0x14c1a>
  4160c6:	xor    eax,eax
  4160c8:	mov    rdi,rbx
  4160cb:	call   4114d0 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  4160d0:	mov    eax,DWORD PTR [rbx+0xf0]
  4160d6:	test   eax,eax
  4160d8:	jne    4159f6 <__flatcc_fb_gen_c_json_parser@@Base+0x7c6>
  4160de:	lea    rcx,[rip+0x2df2b]        # 444010 <_IO_stdin_used@@Base+0x17010>
  4160e5:	lea    rsi,[rip+0x2bf4c]        # 442038 <_IO_stdin_used@@Base+0x15038>
  4160ec:	lea    rdi,[rip+0x2b9b2]        # 441aa5 <_IO_stdin_used@@Base+0x14aa5>
  4160f3:	mov    edx,0x4c3
  4160f8:	call   405100 <__assert_fail@plt>
  4160fd:	nop    DWORD PTR [rax]
  416100:	mov    QWORD PTR [rsp+0x20],0x0
  416109:	jmp    415925 <__flatcc_fb_gen_c_json_parser@@Base+0x6f5>
  41610e:	mov    rcx,QWORD PTR [rax+0x10]
  416112:	mov    edx,DWORD PTR [rax+0x18]
  416115:	lea    rsi,[rip+0x2dd24]        # 443e40 <_IO_stdin_used@@Base+0x16e40>
  41611c:	mov    rdi,rbx
  41611f:	xor    eax,eax
  416121:	call   4114d0 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  416126:	jmp    415b63 <__flatcc_fb_gen_c_json_parser@@Base+0x933>
  41612b:	mov    rcx,QWORD PTR [rax+0x10]
  41612f:	mov    edx,DWORD PTR [rax+0x18]
  416132:	lea    rsi,[rip+0x2dd07]        # 443e40 <_IO_stdin_used@@Base+0x16e40>
  416139:	mov    rdi,rbx
  41613c:	xor    eax,eax
  41613e:	call   4114d0 <__flatcc_fb_gen_c_verifier@@Base+0x740>
  416143:	jmp    415e80 <__flatcc_fb_gen_c_json_parser@@Base+0xc50>
  416148:	test   r12d,r12d
  41614b:	mov    QWORD PTR [rsp+0x20],0x0
  416154:	jle    415925 <__flatcc_fb_gen_c_json_parser@@Base+0x6f5>
  41615a:	mov    rdi,r13
  41615d:	call   411380 <__flatcc_fb_gen_c_verifier@@Base+0x5f0>
  416162:	mov    rax,QWORD PTR [rip+0x3ae7f]        # 450fe8 <stderr@GLIBC_2.2.5>
  416169:	lea    rcx,[rip+0x2bec8]        # 442038 <_IO_stdin_used@@Base+0x15038>
  416170:	lea    rdx,[rip+0x2006a]        # 4361e1 <_IO_stdin_used@@Base+0x91e1>
  416177:	lea    r9,[rip+0x2c3b2]        # 442530 <_IO_stdin_used@@Base+0x15530>
  41617e:	mov    esi,0x1
  416183:	mov    r8d,0x4aa
  416189:	mov    rdi,QWORD PTR [rax]
  41618c:	xor    eax,eax
  41618e:	call   405200 <__fprintf_chk@plt>
  416193:	lea    rcx,[rip+0x2de76]        # 444010 <_IO_stdin_used@@Base+0x17010>
  41619a:	lea    rsi,[rip+0x2be97]        # 442038 <_IO_stdin_used@@Base+0x15038>
  4161a1:	lea    rdi,[rip+0x21081]        # 437229 <_IO_stdin_used@@Base+0xa229>
  4161a8:	mov    edx,0x4aa
  4161ad:	call   405100 <__assert_fail@plt>
  4161b2:	nop    WORD PTR [rax+rax*1+0x0]
  4161b8:	mov    DWORD PTR [rbx+0xf0],0x0
  4161c2:	lea    rcx,[rip+0x2e007]        # 4441d0 <_IO_stdin_used@@Base+0x171d0>
  4161c9:	lea    rsi,[rip+0x2be68]        # 442038 <_IO_stdin_used@@Base+0x15038>
  4161d0:	lea    rdi,[rip+0x2b8ce]        # 441aa5 <_IO_stdin_used@@Base+0x14aa5>
  4161d7:	mov    edx,0x6c3
  4161dc:	call   405100 <__assert_fail@plt>
  4161e1:	mov    DWORD PTR [rbx+0xf0],0x0
  4161eb:	lea    rcx,[rip+0x2dfde]        # 4441d0 <_IO_stdin_used@@Base+0x171d0>
  4161f2:	lea    rsi,[rip+0x2be3f]        # 442038 <_IO_stdin_used@@Base+0x15038>
  4161f9:	lea    rdi,[rip+0x2b8a5]        # 441aa5 <_IO_stdin_used@@Base+0x14aa5>
  416200:	mov    edx,0x6b4
  416205:	call   405100 <__assert_fail@plt>
  41620a:	lea    rcx,[rip+0x2dddf]        # 443ff0 <_IO_stdin_used@@Base+0x16ff0>
  416211:	lea    rsi,[rip+0x2be20]        # 442038 <_IO_stdin_used@@Base+0x15038>
  416218:	lea    rdi,[rip+0x2b886]        # 441aa5 <_IO_stdin_used@@Base+0x14aa5>
  41621f:	mov    edx,0x65a
  416224:	call   405100 <__assert_fail@plt>
  416229:	lea    rcx,[rip+0x2dda0]        # 443fd0 <_IO_stdin_used@@Base+0x16fd0>
  416230:	lea    rsi,[rip+0x2be01]        # 442038 <_IO_stdin_used@@Base+0x15038>
  416237:	lea    rdi,[rip+0x2b867]        # 441aa5 <_IO_stdin_used@@Base+0x14aa5>
  41623e:	mov    edx,0x67d
  416243:	call   405100 <__assert_fail@plt>
  416248:	lea    rcx,[rip+0x2de41]        # 444090 <_IO_stdin_used@@Base+0x17090>
  41624f:	lea    rsi,[rip+0x2bde2]        # 442038 <_IO_stdin_used@@Base+0x15038>
  416256:	lea    rdi,[rip+0x2b848]        # 441aa5 <_IO_stdin_used@@Base+0x14aa5>
  41625d:	mov    edx,0x560
  416262:	call   405100 <__assert_fail@plt>
  416267:	lea    rcx,[rip+0x2de22]        # 444090 <_IO_stdin_used@@Base+0x17090>
  41626e:	lea    rsi,[rip+0x2bdc3]        # 442038 <_IO_stdin_used@@Base+0x15038>
  416275:	lea    rdi,[rip+0x2b829]        # 441aa5 <_IO_stdin_used@@Base+0x14aa5>
  41627c:	mov    edx,0x55a
  416281:	call   405100 <__assert_fail@plt>
  416286:	lea    rcx,[rip+0x2dd43]        # 443fd0 <_IO_stdin_used@@Base+0x16fd0>
  41628d:	lea    rsi,[rip+0x2bda4]        # 442038 <_IO_stdin_used@@Base+0x15038>
  416294:	lea    rdi,[rip+0x2b80a]        # 441aa5 <_IO_stdin_used@@Base+0x14aa5>
  41629b:	mov    edx,0x681
  4162a0:	call   405100 <__assert_fail@plt>
  4162a5:	lea    rcx,[rip+0x2dd64]        # 444010 <_IO_stdin_used@@Base+0x17010>
  4162ac:	lea    rsi,[rip+0x2bd85]        # 442038 <_IO_stdin_used@@Base+0x15038>
  4162b3:	lea    rdi,[rip+0x2b7eb]        # 441aa5 <_IO_stdin_used@@Base+0x14aa5>
  4162ba:	mov    edx,0x4ba
  4162bf:	call   405100 <__assert_fail@plt>
  4162c4:	mov    DWORD PTR [rbx+0xf0],0x0
  4162ce:	lea    rcx,[rip+0x2dd3b]        # 444010 <_IO_stdin_used@@Base+0x17010>
  4162d5:	lea    rsi,[rip+0x2bd5c]        # 442038 <_IO_stdin_used@@Base+0x15038>
  4162dc:	lea    rdi,[rip+0x2b7c2]        # 441aa5 <_IO_stdin_used@@Base+0x14aa5>
  4162e3:	mov    edx,0x4b5
  4162e8:	call   405100 <__assert_fail@plt>
  4162ed:	lea    rcx,[rip+0x2dd9c]        # 444090 <_IO_stdin_used@@Base+0x17090>
  4162f4:	lea    rsi,[rip+0x2bd3d]        # 442038 <_IO_stdin_used@@Base+0x15038>
  4162fb:	lea    rdi,[rip+0x18b8e]        # 42ee90 <_IO_stdin_used@@Base+0x1e90>
  416302:	mov    edx,0x549
  416307:	call   405100 <__assert_fail@plt>
  41630c:	mov    DWORD PTR [rbx+0xf0],0x0
  416316:	lea    rcx,[rip+0x2dcb3]        # 443fd0 <_IO_stdin_used@@Base+0x16fd0>
  41631d:	lea    rsi,[rip+0x2bd14]        # 442038 <_IO_stdin_used@@Base+0x15038>
  416324:	lea    rdi,[rip+0x2b77a]        # 441aa5 <_IO_stdin_used@@Base+0x14aa5>
  41632b:	mov    edx,0x66d
  416330:	call   405100 <__assert_fail@plt>
  416335:	mov    DWORD PTR [rbx+0xf0],0x0
  41633f:	lea    rcx,[rip+0x2dcaa]        # 443ff0 <_IO_stdin_used@@Base+0x16ff0>
  416346:	lea    rsi,[rip+0x2bceb]        # 442038 <_IO_stdin_used@@Base+0x15038>
  41634d:	lea    rdi,[rip+0x2b751]        # 441aa5 <_IO_stdin_used@@Base+0x14aa5>
  416354:	mov    edx,0x64a
  416359:	call   405100 <__assert_fail@plt>
  41635e:	mov    DWORD PTR [rbx+0xf0],0x0
  416368:	lea    rcx,[rip+0x2de61]        # 4441d0 <_IO_stdin_used@@Base+0x171d0>
  41636f:	lea    rsi,[rip+0x2bcc2]        # 442038 <_IO_stdin_used@@Base+0x15038>
  416376:	lea    rdi,[rip+0x2b728]        # 441aa5 <_IO_stdin_used@@Base+0x14aa5>
  41637d:	mov    edx,0x6db
  416382:	call   405100 <__assert_fail@plt>
  416387:	call   4050d0 <__stack_chk_fail@plt>
  41638c:	nop    DWORD PTR [rax+0x0]
  416390:	push   r13
  416392:	push   r12
  416394:	mov    r13,rdi
  416397:	push   rbp
  416398:	push   rbx
  416399:	mov    ecx,0x1d
  41639e:	mov    r12,rsi
  4163a1:	sub    rsp,0x1e8
  4163a8:	mov    rax,QWORD PTR fs:0x28
  4163b1:	mov    QWORD PTR [rsp+0x1d8],rax
  4163b9:	xor    eax,eax
  4163bb:	lea    rbp,[rsp+0xf0]
  4163c3:	mov    rdi,rsp
  4163c6:	mov    rdx,rsp
  4163c9:	rep stos QWORD PTR es:[rdi],rax
  4163cc:	mov    ecx,0x1d
  4163d1:	mov    rdi,rbp
  4163d4:	rep stos QWORD PTR es:[rdi],rax
  4163d7:	mov    rdi,QWORD PTR [rsi+0x18]
  4163db:	call   407300 <__flatcc_fb_scoped_symbol_name@@Base>
  4163e0:	mov    rdi,QWORD PTR [r13+0x0]
  4163e4:	lea    rdx,[rip+0x2de05]        # 4441f0 <_IO_stdin_used@@Base+0x171f0>
  4163eb:	xor    eax,eax
  4163ed:	mov    rcx,rsp
  4163f0:	mov    esi,0x1
  4163f5:	call   405200 <__fprintf_chk@plt>
  4163fa:	mov    rbx,QWORD PTR [r12+0x28]
  4163ff:	lea    r12,[rip+0x2de72]        # 444278 <_IO_stdin_used@@Base+0x17278>
  416406:	test   rbx,rbx
  416409:	je     4164d4 <__flatcc_fb_gen_c_json_parser@@Base+0x12a4>
  41640f:	movzx  eax,WORD PTR [rbx+0x28]
  416413:	cmp    ax,0xa
  416417:	je     416530 <__flatcc_fb_gen_c_json_parser@@Base+0x1300>
  41641d:	cmp    ax,0xe
  416421:	je     416480 <__flatcc_fb_gen_c_json_parser@@Base+0x1250>
  416423:	test   ax,ax
  416426:	je     4164c8 <__flatcc_fb_gen_c_json_parser@@Base+0x1298>
  41642c:	mov    rax,QWORD PTR [rip+0x3abb5]        # 450fe8 <stderr@GLIBC_2.2.5>
  416433:	lea    rcx,[rip+0x2df36]        # 444370 <_IO_stdin_used@@Base+0x17370>
  41643a:	lea    rdx,[rip+0x1fda0]        # 4361e1 <_IO_stdin_used@@Base+0x91e1>
  416441:	lea    r9,[rip+0x2df00]        # 444348 <_IO_stdin_used@@Base+0x17348>
  416448:	mov    esi,0x1
  41644d:	mov    r8d,0xfb
  416453:	mov    rdi,QWORD PTR [rax]
  416456:	xor    eax,eax
  416458:	call   405200 <__fprintf_chk@plt>
  41645d:	lea    rcx,[rip+0x2f5bc]        # 445a20 <_IO_stdin_used@@Base+0x18a20>
  416464:	lea    rsi,[rip+0x2df05]        # 444370 <_IO_stdin_used@@Base+0x17370>
  41646b:	lea    rdi,[rip+0x20db7]        # 437229 <_IO_stdin_used@@Base+0xa229>
  416472:	mov    edx,0xfb
  416477:	call   405100 <__assert_fail@plt>
  41647c:	nop    DWORD PTR [rax+0x0]
  416480:	mov    rsi,QWORD PTR [rbx+0x18]
  416484:	mov    rdx,rbp
  416487:	mov    rdi,QWORD PTR [rsi+0x18]
  41648b:	call   407300 <__flatcc_fb_scoped_symbol_name@@Base>
  416490:	mov    rax,QWORD PTR [rbx+0x18]
  416494:	movzx  eax,WORD PTR [rax+0x10]
  416498:	test   ax,ax
  41649b:	je     416560 <__flatcc_fb_gen_c_json_parser@@Base+0x1330>
  4164a1:	cmp    ax,0x1
  4164a5:	jne    416590 <__flatcc_fb_gen_c_json_parser@@Base+0x1360>
  4164ab:	mov    ecx,DWORD PTR [rbx+0x48]
  4164ae:	mov    rdi,QWORD PTR [r13+0x0]
  4164b2:	lea    rdx,[rip+0x2de27]        # 4442e0 <_IO_stdin_used@@Base+0x172e0>
  4164b9:	mov    r8,rbp
  4164bc:	mov    esi,0x1
  4164c1:	xor    eax,eax
  4164c3:	call   405200 <__fprintf_chk@plt>
  4164c8:	mov    rbx,QWORD PTR [rbx]
  4164cb:	test   rbx,rbx
  4164ce:	jne    41640f <__flatcc_fb_gen_c_json_parser@@Base+0x11df>
  4164d4:	mov    rdi,QWORD PTR [r13+0x0]
  4164d8:	lea    rdx,[rip+0x2f309]        # 4457e8 <_IO_stdin_used@@Base+0x187e8>
  4164df:	mov    esi,0x1
  4164e4:	xor    eax,eax
  4164e6:	call   405200 <__fprintf_chk@plt>
  4164eb:	mov    rdi,QWORD PTR [r13+0x0]
  4164ef:	lea    rdx,[rip+0x2f30f]        # 445805 <_IO_stdin_used@@Base+0x18805>
  4164f6:	xor    eax,eax
  4164f8:	mov    esi,0x1
  4164fd:	call   405200 <__fprintf_chk@plt>
  416502:	xor    eax,eax
  416504:	mov    rdx,QWORD PTR [rsp+0x1d8]
  41650c:	xor    rdx,QWORD PTR fs:0x28
  416515:	jne    4165e0 <__flatcc_fb_gen_c_json_parser@@Base+0x13b0>
  41651b:	add    rsp,0x1e8
  416522:	pop    rbx
  416523:	pop    rbp
  416524:	pop    r12
  416526:	pop    r13
  416528:	ret    
  416529:	nop    DWORD PTR [rax+0x0]
  416530:	mov    ecx,DWORD PTR [rbx+0x48]
  416533:	mov    rdi,QWORD PTR [r13+0x0]
  416537:	lea    rdx,[rip+0x2dea2]        # 4443e0 <_IO_stdin_used@@Base+0x173e0>
  41653e:	xor    eax,eax
  416540:	mov    esi,0x1
  416545:	call   405200 <__fprintf_chk@plt>
  41654a:	mov    rbx,QWORD PTR [rbx]
  41654d:	test   rbx,rbx
  416550:	jne    41640f <__flatcc_fb_gen_c_json_parser@@Base+0x11df>
  416556:	jmp    4164d4 <__flatcc_fb_gen_c_json_parser@@Base+0x12a4>
  41655b:	nop    DWORD PTR [rax+rax*1+0x0]
  416560:	mov    ecx,DWORD PTR [rbx+0x48]
  416563:	mov    rdi,QWORD PTR [r13+0x0]
  416567:	xor    eax,eax
  416569:	mov    r8,rbp
  41656c:	mov    rdx,r12
  41656f:	mov    esi,0x1
  416574:	call   405200 <__fprintf_chk@plt>
  416579:	mov    rbx,QWORD PTR [rbx]
  41657c:	test   rbx,rbx
  41657f:	jne    41640f <__flatcc_fb_gen_c_json_parser@@Base+0x11df>
  416585:	jmp    4164d4 <__flatcc_fb_gen_c_json_parser@@Base+0x12a4>
  41658a:	nop    WORD PTR [rax+rax*1+0x0]
  416590:	mov    rax,QWORD PTR [rip+0x3aa51]        # 450fe8 <stderr@GLIBC_2.2.5>
  416597:	lea    rcx,[rip+0x2ddd2]        # 444370 <_IO_stdin_used@@Base+0x17370>
  41659e:	lea    rdx,[rip+0x1fc3c]        # 4361e1 <_IO_stdin_used@@Base+0x91e1>
  4165a5:	lea    r9,[rip+0x2dd9c]        # 444348 <_IO_stdin_used@@Base+0x17348>
  4165ac:	mov    esi,0x1
  4165b1:	mov    r8d,0xf0
  4165b7:	mov    rdi,QWORD PTR [rax]
  4165ba:	xor    eax,eax
  4165bc:	call   405200 <__fprintf_chk@plt>
  4165c1:	lea    rcx,[rip+0x2f458]        # 445a20 <_IO_stdin_used@@Base+0x18a20>
  4165c8:	lea    rsi,[rip+0x2dda1]        # 444370 <_IO_stdin_used@@Base+0x17370>
  4165cf:	lea    rdi,[rip+0x20c53]        # 437229 <_IO_stdin_used@@Base+0xa229>
  4165d6:	mov    edx,0xf0
  4165db:	call   405100 <__assert_fail@plt>
  4165e0:	call   4050d0 <__stack_chk_fail@plt>
  4165e5:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4165f0:	push   r15
  4165f2:	push   r14
  4165f4:	mov    ecx,0x1d
  4165f9:	push   r13
  4165fb:	push   r12
  4165fd:	mov    r13,rsi
  416600:	push   rbp
  416601:	push   rbx
  416602:	mov    rbp,rdi
  416605:	xor    r14d,r14d
  416608:	sub    rsp,0x1e8
  41660f:	mov    rax,QWORD PTR fs:0x28
  416618:	mov    QWORD PTR [rsp+0x1d8],rax
  416620:	xor    eax,eax
  416622:	lea    r12,[rsp+0xf0]
  41662a:	mov    rdi,rsp
  41662d:	mov    rdx,rsp
  416630:	rep stos QWORD PTR es:[rdi],rax
  416633:	mov    ecx,0x1d
  416638:	mov    rdi,r12
  41663b:	mov    rbx,rsp
  41663e:	rep stos QWORD PTR es:[rdi],rax
  416641:	mov    rdi,QWORD PTR [rsi+0x18]
  416645:	call   407300 <__flatcc_fb_scoped_symbol_name@@Base>
  41664a:	mov    rdi,QWORD PTR [rbp+0x0]
  41664e:	lea    rdx,[rip+0x2dddb]        # 444430 <_IO_stdin_used@@Base+0x17430>
  416655:	xor    eax,eax
  416657:	mov    rcx,rsp
  41665a:	mov    esi,0x1
  41665f:	call   405200 <__fprintf_chk@plt>
  416664:	mov    r15,QWORD PTR [r13+0x28]
  416668:	lea    r13,[rip+0x2f241]        # 4458b0 <_IO_stdin_used@@Base+0x188b0>
  41666f:	test   r15,r15
  416672:	je     416742 <__flatcc_fb_gen_c_json_parser@@Base+0x1512>
  416678:	nop    DWORD PTR [rax+rax*1+0x0]
  416680:	test   BYTE PTR [r15+0x70],0x4
  416685:	jne    416732 <__flatcc_fb_gen_c_json_parser@@Base+0x1502>
  41668b:	movzx  eax,WORD PTR [r15+0x28]
  416690:	cmp    ax,0x8
  416694:	je     4167a8 <__flatcc_fb_gen_c_json_parser@@Base+0x1578>
  41669a:	cmp    ax,0xe
  41669e:	jne    416732 <__flatcc_fb_gen_c_json_parser@@Base+0x1502>
  4166a4:	mov    rsi,QWORD PTR [r15+0x18]
  4166a8:	mov    rdx,r12
  4166ab:	mov    rdi,QWORD PTR [rsi+0x18]
  4166af:	call   407300 <__flatcc_fb_scoped_symbol_name@@Base>
  4166b4:	mov    rdx,QWORD PTR [r15+0x18]
  4166b8:	movzx  eax,WORD PTR [rdx+0x10]
  4166bc:	cmp    ax,0x1
  4166c0:	je     4167c8 <__flatcc_fb_gen_c_json_parser@@Base+0x1598>
  4166c6:	cmp    ax,0x3
  4166ca:	jne    416732 <__flatcc_fb_gen_c_json_parser@@Base+0x1502>
  4166cc:	cmp    DWORD PTR [rdx+0x48],0xb
  4166d0:	ja     4168b8 <__flatcc_fb_gen_c_json_parser@@Base+0x1688>
  4166d6:	mov    eax,DWORD PTR [rdx+0x48]
  4166d9:	lea    rdx,[rip+0x2f1a0]        # 445880 <_IO_stdin_used@@Base+0x18880>
  4166e0:	movsxd rax,DWORD PTR [rdx+rax*4]
  4166e4:	add    rax,rdx
  4166e7:	jmp    rax
  4166e9:	nop    DWORD PTR [rax+0x0]
  4166f0:	lea    rcx,[rip+0x1fbb1]        # 4362a8 <_IO_stdin_used@@Base+0x92a8>
  4166f7:	nop    WORD PTR [rax+rax*1+0x0]
  416700:	mov    rdx,QWORD PTR [r15+0x8]
  416704:	sub    rsp,0x8
  416708:	mov    r8d,r14d
  41670b:	mov    rax,QWORD PTR [rdx+0x8]
  41670f:	push   rax
  416710:	mov    r9,QWORD PTR [r15+0x78]
  416714:	push   QWORD PTR [rdx]
  416716:	lea    rdx,[rip+0x2de3b]        # 444558 <_IO_stdin_used@@Base+0x17558>
  41671d:	push   rax
  41671e:	mov    rdi,QWORD PTR [rbp+0x0]
  416722:	mov    esi,0x1
  416727:	xor    eax,eax
  416729:	call   405200 <__fprintf_chk@plt>
  41672e:	add    rsp,0x20
  416732:	mov    r15,QWORD PTR [r15]
  416735:	add    r14d,0x1
  416739:	test   r15,r15
  41673c:	jne    416680 <__flatcc_fb_gen_c_json_parser@@Base+0x1450>
  416742:	mov    rdi,QWORD PTR [rbp+0x0]
  416746:	lea    rdx,[rip+0x2f0be]        # 44580b <_IO_stdin_used@@Base+0x1880b>
  41674d:	mov    esi,0x1
  416752:	xor    eax,eax
  416754:	call   405200 <__fprintf_chk@plt>
  416759:	mov    rdi,QWORD PTR [rbp+0x0]
  41675d:	lea    rdx,[rip+0x2dd1c]        # 444480 <_IO_stdin_used@@Base+0x17480>
  416764:	mov    r8,rbx
  416767:	mov    rcx,rbx
  41676a:	xor    eax,eax
  41676c:	mov    esi,0x1
  416771:	call   405200 <__fprintf_chk@plt>
  416776:	xor    eax,eax
  416778:	mov    rbx,QWORD PTR [rsp+0x1d8]
  416780:	xor    rbx,QWORD PTR fs:0x28
  416789:	jne    41698b <__flatcc_fb_gen_c_json_parser@@Base+0x175b>
  41678f:	add    rsp,0x1e8
  416796:	pop    rbx
  416797:	pop    rbp
  416798:	pop    r12
  41679a:	pop    r13
  41679c:	pop    r14
  41679e:	pop    r15
  4167a0:	ret    
  4167a1:	nop    DWORD PTR [rax+0x0]
  4167a8:	cmp    DWORD PTR [r15+0x18],0xb
  4167ad:	ja     4168b8 <__flatcc_fb_gen_c_json_parser@@Base+0x1688>
  4167b3:	mov    eax,DWORD PTR [r15+0x18]
  4167b7:	movsxd rax,DWORD PTR [r13+rax*4+0x0]
  4167bc:	add    rax,r13
  4167bf:	jmp    rax
  4167c1:	nop    DWORD PTR [rax+0x0]
  4167c8:	mov    rax,QWORD PTR [r15+0x8]
  4167cc:	sub    rsp,0x8
  4167d0:	mov    rdi,QWORD PTR [rbp+0x0]
  4167d4:	lea    rdx,[rip+0x2de2d]        # 444608 <_IO_stdin_used@@Base+0x17608>
  4167db:	mov    ecx,r14d
  4167de:	mov    esi,0x1
  4167e3:	add    r14d,0x1
  4167e7:	mov    r9,QWORD PTR [rax+0x8]
  4167eb:	push   r12
  4167ed:	push   r9
  4167ef:	mov    r8,QWORD PTR [r15+0x78]
  4167f3:	push   QWORD PTR [rax]
  4167f5:	xor    eax,eax
  4167f7:	call   405200 <__fprintf_chk@plt>
  4167fc:	mov    r15,QWORD PTR [r15]
  4167ff:	add    rsp,0x20
  416803:	test   r15,r15
  416806:	jne    416680 <__flatcc_fb_gen_c_json_parser@@Base+0x1450>
  41680c:	jmp    416742 <__flatcc_fb_gen_c_json_parser@@Base+0x1512>
  416811:	nop    DWORD PTR [rax+0x0]
  416818:	lea    rcx,[rip+0x1fa7b]        # 43629a <_IO_stdin_used@@Base+0x929a>
  41681f:	jmp    416700 <__flatcc_fb_gen_c_json_parser@@Base+0x14d0>
  416824:	nop    DWORD PTR [rax+0x0]
  416828:	lea    rcx,[rip+0x1fa72]        # 4362a1 <_IO_stdin_used@@Base+0x92a1>
  41682f:	jmp    416700 <__flatcc_fb_gen_c_json_parser@@Base+0x14d0>
  416834:	nop    DWORD PTR [rax+0x0]
  416838:	lea    rcx,[rip+0x1fa76]        # 4362b5 <_IO_stdin_used@@Base+0x92b5>
  41683f:	jmp    416700 <__flatcc_fb_gen_c_json_parser@@Base+0x14d0>
  416844:	nop    DWORD PTR [rax+0x0]
  416848:	lea    rcx,[rip+0x1fa4c]        # 43629b <_IO_stdin_used@@Base+0x929b>
  41684f:	jmp    416700 <__flatcc_fb_gen_c_json_parser@@Base+0x14d0>
  416854:	nop    DWORD PTR [rax+0x0]
  416858:	lea    rcx,[rip+0x1f947]        # 4361a6 <_IO_stdin_used@@Base+0x91a6>
  41685f:	jmp    416700 <__flatcc_fb_gen_c_json_parser@@Base+0x14d0>
  416864:	nop    DWORD PTR [rax+0x0]
  416868:	lea    rcx,[rip+0x1fa33]        # 4362a2 <_IO_stdin_used@@Base+0x92a2>
  41686f:	jmp    416700 <__flatcc_fb_gen_c_json_parser@@Base+0x14d0>
  416874:	nop    DWORD PTR [rax+0x0]
  416878:	lea    rcx,[rip+0x1fa2a]        # 4362a9 <_IO_stdin_used@@Base+0x92a9>
  41687f:	jmp    416700 <__flatcc_fb_gen_c_json_parser@@Base+0x14d0>
  416884:	nop    DWORD PTR [rax+0x0]
  416888:	lea    rcx,[rip+0x1fa21]        # 4362b0 <_IO_stdin_used@@Base+0x92b0>
  41688f:	jmp    416700 <__flatcc_fb_gen_c_json_parser@@Base+0x14d0>
  416894:	nop    DWORD PTR [rax+0x0]
  416898:	lea    rcx,[rip+0x1f90d]        # 4361ac <_IO_stdin_used@@Base+0x91ac>
  41689f:	jmp    416700 <__flatcc_fb_gen_c_json_parser@@Base+0x14d0>
  4168a4:	nop    DWORD PTR [rax+0x0]
  4168a8:	lea    rcx,[rip+0x1fa00]        # 4362af <_IO_stdin_used@@Base+0x92af>
  4168af:	jmp    416700 <__flatcc_fb_gen_c_json_parser@@Base+0x14d0>
  4168b4:	nop    DWORD PTR [rax+0x0]
  4168b8:	mov    rax,QWORD PTR [rip+0x3a729]        # 450fe8 <stderr@GLIBC_2.2.5>
  4168bf:	lea    rcx,[rip+0x1834a]        # 42ec10 <_IO_stdin_used@@Base+0x1c10>
  4168c6:	lea    rdx,[rip+0x1f914]        # 4361e1 <_IO_stdin_used@@Base+0x91e1>
  4168cd:	lea    r9,[rip+0x18304]        # 42ebd8 <_IO_stdin_used@@Base+0x1bd8>
  4168d4:	mov    esi,0x1
  4168d9:	mov    r8d,0x60
  4168df:	mov    rdi,QWORD PTR [rax]
  4168e2:	xor    eax,eax
  4168e4:	call   405200 <__fprintf_chk@plt>
  4168e9:	lea    rcx,[rip+0x2f150]        # 445a40 <_IO_stdin_used@@Base+0x18a40>
  4168f0:	lea    rsi,[rip+0x18319]        # 42ec10 <_IO_stdin_used@@Base+0x1c10>
  4168f7:	lea    rdi,[rip+0x2092b]        # 437229 <_IO_stdin_used@@Base+0xa229>
  4168fe:	mov    edx,0x60
  416903:	call   405100 <__assert_fail@plt>
  416908:	lea    rcx,[rip+0x1f999]        # 4362a8 <_IO_stdin_used@@Base+0x92a8>
  41690f:	nop
  416910:	mov    rdx,QWORD PTR [r15+0x8]
  416914:	mov    r8d,r14d
  416917:	mov    rax,QWORD PTR [rdx+0x8]
  41691b:	push   r12
  41691d:	push   rax
  41691e:	push   QWORD PTR [rdx]
  416920:	lea    rdx,[rip+0x2dc79]        # 4445a0 <_IO_stdin_used@@Base+0x175a0>
  416927:	push   rax
  416928:	mov    r9,QWORD PTR [r15+0x78]
  41692c:	jmp    41671e <__flatcc_fb_gen_c_json_parser@@Base+0x14ee>
  416931:	lea    rcx,[rip+0x1f978]        # 4362b0 <_IO_stdin_used@@Base+0x92b0>
  416938:	jmp    416910 <__flatcc_fb_gen_c_json_parser@@Base+0x16e0>
  41693a:	lea    rcx,[rip+0x1f86b]        # 4361ac <_IO_stdin_used@@Base+0x91ac>
  416941:	jmp    416910 <__flatcc_fb_gen_c_json_parser@@Base+0x16e0>
  416943:	lea    rcx,[rip+0x1f85c]        # 4361a6 <_IO_stdin_used@@Base+0x91a6>
  41694a:	jmp    416910 <__flatcc_fb_gen_c_json_parser@@Base+0x16e0>
  41694c:	lea    rcx,[rip+0x1f962]        # 4362b5 <_IO_stdin_used@@Base+0x92b5>
  416953:	jmp    416910 <__flatcc_fb_gen_c_json_parser@@Base+0x16e0>
  416955:	lea    rcx,[rip+0x1f93f]        # 43629b <_IO_stdin_used@@Base+0x929b>
  41695c:	jmp    416910 <__flatcc_fb_gen_c_json_parser@@Base+0x16e0>
  41695e:	lea    rcx,[rip+0x1f93d]        # 4362a2 <_IO_stdin_used@@Base+0x92a2>
  416965:	jmp    416910 <__flatcc_fb_gen_c_json_parser@@Base+0x16e0>
  416967:	lea    rcx,[rip+0x1f93b]        # 4362a9 <_IO_stdin_used@@Base+0x92a9>
  41696e:	jmp    416910 <__flatcc_fb_gen_c_json_parser@@Base+0x16e0>
  416970:	lea    rcx,[rip+0x1f923]        # 43629a <_IO_stdin_used@@Base+0x929a>
  416977:	jmp    416910 <__flatcc_fb_gen_c_json_parser@@Base+0x16e0>
  416979:	lea    rcx,[rip+0x1f921]        # 4362a1 <_IO_stdin_used@@Base+0x92a1>
  416980:	jmp    416910 <__flatcc_fb_gen_c_json_parser@@Base+0x16e0>
  416982:	lea    rcx,[rip+0x1f926]        # 4362af <_IO_stdin_used@@Base+0x92af>
  416989:	jmp    416910 <__flatcc_fb_gen_c_json_parser@@Base+0x16e0>
  41698b:	call   4050d0 <__stack_chk_fail@plt>
  416990:	push   r15
  416992:	push   r14
  416994:	mov    ecx,0x1d
  416999:	push   r13
  41699b:	push   r12
  41699d:	mov    r12,rdi
  4169a0:	push   rbp
  4169a1:	push   rbx
  4169a2:	mov    rbp,rsi
  4169a5:	sub    rsp,0x1f8
  4169ac:	lea    r15,[rsp+0x10]
  4169b1:	lea    rdx,[rsp+0x100]
  4169b9:	mov    rax,QWORD PTR fs:0x28
  4169c2:	mov    QWORD PTR [rsp+0x1e8],rax
  4169ca:	xor    eax,eax
  4169cc:	mov    rdi,r15
  4169cf:	rep stos QWORD PTR es:[rdi],rax
  4169d2:	mov    rdi,rdx
  4169d5:	mov    ecx,0x1d
  4169da:	mov    rdx,r15
  4169dd:	rep stos QWORD PTR es:[rdi],rax
  4169e0:	mov    rdi,QWORD PTR [rsi+0x18]
  4169e4:	call   407300 <__flatcc_fb_scoped_symbol_name@@Base>
  4169e9:	cmp    DWORD PTR [rbp+0x48],0xb
  4169ed:	ja     416d50 <__flatcc_fb_gen_c_json_parser@@Base+0x1b20>
  4169f3:	mov    eax,DWORD PTR [rbp+0x48]
  4169f6:	lea    rdx,[rip+0x2eee3]        # 4458e0 <_IO_stdin_used@@Base+0x188e0>
  4169fd:	movsxd rax,DWORD PTR [rdx+rax*4]
  416a01:	add    rax,rdx
  416a04:	jmp    rax
  416a06:	nop    WORD PTR cs:[rax+rax*1+0x0]
  416a10:	lea    rax,[rip+0x1f891]        # 4362a8 <_IO_stdin_used@@Base+0x92a8>
  416a17:	lea    r11,[rip+0x1f770]        # 43618e <_IO_stdin_used@@Base+0x918e>
  416a1e:	lea    r8,[rip+0x2ede9]        # 44580e <_IO_stdin_used@@Base+0x1880e>
  416a25:	mov    QWORD PTR [rsp+0x8],rax
  416a2a:	nop    WORD PTR [rax+rax*1+0x0]
  416a30:	test   BYTE PTR [rbp+0xa4],0x20
  416a37:	je     416e68 <__flatcc_fb_gen_c_json_parser@@Base+0x1c38>
  416a3d:	mov    rax,QWORD PTR [rbp+0xb8]
  416a44:	cmp    rax,0x2
  416a48:	je     417080 <__flatcc_fb_gen_c_json_parser@@Base+0x1e50>
  416a4e:	cmp    rax,0x4
  416a52:	je     417060 <__flatcc_fb_gen_c_json_parser@@Base+0x1e30>
  416a58:	lea    rdx,[rip+0x1f71d]        # 43617c <_IO_stdin_used@@Base+0x917c>
  416a5f:	lea    r14,[rip+0x1f731]        # 436197 <_IO_stdin_used@@Base+0x9197>
  416a66:	cmp    rax,0x1
  416a6a:	lea    r13,[rip+0x2ed9e]        # 44580f <_IO_stdin_used@@Base+0x1880f>
  416a71:	mov    rax,0xffffffffffffffff
  416a78:	mov    ebx,0xff
  416a7d:	cmovne r14,rdx
  416a81:	lea    rdx,[rip+0x2ed8c]        # 445814 <_IO_stdin_used@@Base+0x18814>
  416a88:	cmovne rbx,rax
  416a8c:	cmovne r13,rdx
  416a90:	mov    rax,QWORD PTR [rbp+0x28]
  416a94:	test   rax,rax
  416a97:	jne    416ab8 <__flatcc_fb_gen_c_json_parser@@Base+0x1888>
  416a99:	jmp    416ad3 <__flatcc_fb_gen_c_json_parser@@Base+0x18a3>
  416a9b:	nop    DWORD PTR [rax+rax*1+0x0]
  416aa0:	cmp    dx,0x6
  416aa4:	je     416da0 <__flatcc_fb_gen_c_json_parser@@Base+0x1b70>
  416aaa:	cmp    dx,0x4
  416aae:	je     416ac2 <__flatcc_fb_gen_c_json_parser@@Base+0x1892>
  416ab0:	mov    rax,QWORD PTR [rax]
  416ab3:	test   rax,rax
  416ab6:	je     416ad3 <__flatcc_fb_gen_c_json_parser@@Base+0x18a3>
  416ab8:	movzx  edx,WORD PTR [rax+0x58]
  416abc:	cmp    dx,0x5
  416ac0:	jne    416aa0 <__flatcc_fb_gen_c_json_parser@@Base+0x1870>
  416ac2:	mov    rdx,QWORD PTR [rax+0x48]
  416ac6:	mov    rax,QWORD PTR [rax]
  416ac9:	andn   rbx,rdx,rbx
  416ace:	test   rax,rax
  416ad1:	jne    416ab8 <__flatcc_fb_gen_c_json_parser@@Base+0x1888>
  416ad3:	mov    rdi,QWORD PTR [r12+0xd0]
  416adb:	lea    rdx,[rip+0x2de0e]        # 4448f0 <_IO_stdin_used@@Base+0x178f0>
  416ae2:	mov    r9,r11
  416ae5:	mov    rcx,r15
  416ae8:	mov    esi,0x1
  416aed:	xor    eax,eax
  416aef:	mov    QWORD PTR [rsp],r11
  416af3:	call   405200 <__fprintf_chk@plt>
  416af8:	mov    r11,QWORD PTR [rsp]
  416afc:	mov    rdi,r14
  416aff:	mov    rsi,r11
  416b02:	call   405150 <strcmp@plt>
  416b07:	test   eax,eax
  416b09:	je     416f30 <__flatcc_fb_gen_c_json_parser@@Base+0x1d00>
  416b0f:	mov    rdi,QWORD PTR [r12+0xd0]
  416b17:	lea    rdx,[rip+0x2ecfa]        # 445818 <_IO_stdin_used@@Base+0x18818>
  416b1e:	mov    r8,r14
  416b21:	mov    rcx,r14
  416b24:	mov    esi,0x1
  416b29:	xor    eax,eax
  416b2b:	call   405200 <__fprintf_chk@plt>
  416b30:	mov    rdi,QWORD PTR [r12+0xd0]
  416b38:	lea    rdx,[rip+0x2db31]        # 444670 <_IO_stdin_used@@Base+0x17670>
  416b3f:	mov    esi,0x1
  416b44:	xor    eax,eax
  416b46:	call   405200 <__fprintf_chk@plt>
  416b4b:	mov    rdi,QWORD PTR [r12+0xd0]
  416b53:	lea    rdx,[rip+0x2ecb3]        # 44580d <_IO_stdin_used@@Base+0x1880d>
  416b5a:	xor    eax,eax
  416b5c:	mov    esi,0x1
  416b61:	call   405200 <__fprintf_chk@plt>
  416b66:	test   rbx,rbx
  416b69:	jne    417030 <__flatcc_fb_gen_c_json_parser@@Base+0x1e00>
  416b6f:	mov    rdi,QWORD PTR [r12+0xd0]
  416b77:	lea    rdx,[rip+0x2db8a]        # 444708 <_IO_stdin_used@@Base+0x17708>
  416b7e:	xor    eax,eax
  416b80:	mov    esi,0x1
  416b85:	call   405200 <__fprintf_chk@plt>
  416b8a:	mov    rbx,QWORD PTR [rbp+0x28]
  416b8e:	lea    rbp,[rip+0x2dbb3]        # 444748 <_IO_stdin_used@@Base+0x17748>
  416b95:	test   rbx,rbx
  416b98:	je     416dea <__flatcc_fb_gen_c_json_parser@@Base+0x1bba>
  416b9e:	movzx  eax,WORD PTR [rbx+0x58]
  416ba2:	cmp    ax,0x5
  416ba6:	je     416db0 <__flatcc_fb_gen_c_json_parser@@Base+0x1b80>
  416bac:	cmp    ax,0x6
  416bb0:	je     416e50 <__flatcc_fb_gen_c_json_parser@@Base+0x1c20>
  416bb6:	cmp    ax,0x4
  416bba:	je     416db0 <__flatcc_fb_gen_c_json_parser@@Base+0x1b80>
  416bc0:	mov    rax,QWORD PTR [rip+0x3a421]        # 450fe8 <stderr@GLIBC_2.2.5>
  416bc7:	lea    rcx,[rip+0x2d7a2]        # 444370 <_IO_stdin_used@@Base+0x17370>
  416bce:	lea    rdx,[rip+0x1f60c]        # 4361e1 <_IO_stdin_used@@Base+0x91e1>
  416bd5:	lea    r9,[rip+0x2dbbc]        # 444798 <_IO_stdin_used@@Base+0x17798>
  416bdc:	mov    esi,0x1
  416be1:	mov    r8d,0x86
  416be7:	mov    rdi,QWORD PTR [rax]
  416bea:	xor    eax,eax
  416bec:	call   405200 <__fprintf_chk@plt>
  416bf1:	lea    rcx,[rip+0x2ee68]        # 445a60 <_IO_stdin_used@@Base+0x18a60>
  416bf8:	lea    rsi,[rip+0x2d771]        # 444370 <_IO_stdin_used@@Base+0x17370>
  416bff:	lea    rdi,[rip+0x20623]        # 437229 <_IO_stdin_used@@Base+0xa229>
  416c06:	mov    edx,0x86
  416c0b:	call   405100 <__assert_fail@plt>
  416c10:	lea    rax,[rip+0x1f68a]        # 4362a1 <_IO_stdin_used@@Base+0x92a1>
  416c17:	lea    r11,[rip+0x1f567]        # 436185 <_IO_stdin_used@@Base+0x9185>
  416c1e:	lea    r8,[rip+0x2ebe9]        # 44580e <_IO_stdin_used@@Base+0x1880e>
  416c25:	mov    QWORD PTR [rsp+0x8],rax
  416c2a:	jmp    416a30 <__flatcc_fb_gen_c_json_parser@@Base+0x1800>
  416c2f:	nop
  416c30:	lea    rax,[rip+0x1f663]        # 43629a <_IO_stdin_used@@Base+0x929a>
  416c37:	lea    r11,[rip+0x1f53e]        # 43617c <_IO_stdin_used@@Base+0x917c>
  416c3e:	lea    r8,[rip+0x2ebc9]        # 44580e <_IO_stdin_used@@Base+0x1880e>
  416c45:	mov    QWORD PTR [rsp+0x8],rax
  416c4a:	jmp    416a30 <__flatcc_fb_gen_c_json_parser@@Base+0x1800>
  416c4f:	nop
  416c50:	lea    rax,[rip+0x1f555]        # 4361ac <_IO_stdin_used@@Base+0x91ac>
  416c57:	lea    r8,[rip+0x2ebb0]        # 44580e <_IO_stdin_used@@Base+0x1880e>
  416c5e:	mov    QWORD PTR [rsp+0x8],rax
  416c63:	mov    r11,rax
  416c66:	jmp    416a30 <__flatcc_fb_gen_c_json_parser@@Base+0x1800>
  416c6b:	nop    DWORD PTR [rax+rax*1+0x0]
  416c70:	lea    rax,[rip+0x1f52f]        # 4361a6 <_IO_stdin_used@@Base+0x91a6>
  416c77:	lea    r8,[rip+0x2eb90]        # 44580e <_IO_stdin_used@@Base+0x1880e>
  416c7e:	mov    QWORD PTR [rsp+0x8],rax
  416c83:	mov    r11,rax
  416c86:	jmp    416a30 <__flatcc_fb_gen_c_json_parser@@Base+0x1800>
  416c8b:	nop    DWORD PTR [rax+rax*1+0x0]
  416c90:	lea    rax,[rip+0x1f604]        # 43629b <_IO_stdin_used@@Base+0x929b>
  416c97:	lea    r11,[rip+0x1f4df]        # 43617d <_IO_stdin_used@@Base+0x917d>
  416c9e:	lea    r8,[rip+0x2eb69]        # 44580e <_IO_stdin_used@@Base+0x1880e>
  416ca5:	mov    QWORD PTR [rsp+0x8],rax
  416caa:	jmp    416a30 <__flatcc_fb_gen_c_json_parser@@Base+0x1800>
  416caf:	nop
  416cb0:	lea    rax,[rip+0x1f5eb]        # 4362a2 <_IO_stdin_used@@Base+0x92a2>
  416cb7:	lea    r11,[rip+0x1f4c8]        # 436186 <_IO_stdin_used@@Base+0x9186>
  416cbe:	lea    r8,[rip+0x2eb49]        # 44580e <_IO_stdin_used@@Base+0x1880e>
  416cc5:	mov    QWORD PTR [rsp+0x8],rax
  416cca:	jmp    416a30 <__flatcc_fb_gen_c_json_parser@@Base+0x1800>
  416ccf:	nop
  416cd0:	lea    rax,[rip+0x1f5d2]        # 4362a9 <_IO_stdin_used@@Base+0x92a9>
  416cd7:	lea    r11,[rip+0x1f4b1]        # 43618f <_IO_stdin_used@@Base+0x918f>
  416cde:	lea    r8,[rip+0x2eb29]        # 44580e <_IO_stdin_used@@Base+0x1880e>
  416ce5:	mov    QWORD PTR [rsp+0x8],rax
  416cea:	jmp    416a30 <__flatcc_fb_gen_c_json_parser@@Base+0x1800>
  416cef:	nop
  416cf0:	lea    rax,[rip+0x1f5b9]        # 4362b0 <_IO_stdin_used@@Base+0x92b0>
  416cf7:	lea    r11,[rip+0x1f49a]        # 436198 <_IO_stdin_used@@Base+0x9198>
  416cfe:	lea    r8,[rip+0x2eb09]        # 44580e <_IO_stdin_used@@Base+0x1880e>
  416d05:	mov    QWORD PTR [rsp+0x8],rax
  416d0a:	jmp    416a30 <__flatcc_fb_gen_c_json_parser@@Base+0x1800>
  416d0f:	nop
  416d10:	lea    rax,[rip+0x1f598]        # 4362af <_IO_stdin_used@@Base+0x92af>
  416d17:	lea    r11,[rip+0x1f479]        # 436197 <_IO_stdin_used@@Base+0x9197>
  416d1e:	lea    r8,[rip+0x2eae9]        # 44580e <_IO_stdin_used@@Base+0x1880e>
  416d25:	mov    QWORD PTR [rsp+0x8],rax
  416d2a:	jmp    416a30 <__flatcc_fb_gen_c_json_parser@@Base+0x1800>
  416d2f:	nop
  416d30:	lea    rax,[rip+0x1f57e]        # 4362b5 <_IO_stdin_used@@Base+0x92b5>
  416d37:	mov    r8,r12
  416d3a:	lea    r11,[rip+0x1f45e]        # 43619f <_IO_stdin_used@@Base+0x919f>
  416d41:	mov    QWORD PTR [rsp+0x8],rax
  416d46:	jmp    416a30 <__flatcc_fb_gen_c_json_parser@@Base+0x1800>
  416d4b:	nop    DWORD PTR [rax+rax*1+0x0]
  416d50:	mov    rax,QWORD PTR [rip+0x3a291]        # 450fe8 <stderr@GLIBC_2.2.5>
  416d57:	lea    rcx,[rip+0x17eb2]        # 42ec10 <_IO_stdin_used@@Base+0x1c10>
  416d5e:	lea    rdx,[rip+0x1f47c]        # 4361e1 <_IO_stdin_used@@Base+0x91e1>
  416d65:	lea    r9,[rip+0x17e6c]        # 42ebd8 <_IO_stdin_used@@Base+0x1bd8>
  416d6c:	mov    esi,0x1
  416d71:	mov    r8d,0x60
  416d77:	mov    rdi,QWORD PTR [rax]
  416d7a:	xor    eax,eax
  416d7c:	call   405200 <__fprintf_chk@plt>
  416d81:	lea    rcx,[rip+0x2ecb8]        # 445a40 <_IO_stdin_used@@Base+0x18a40>
  416d88:	lea    rsi,[rip+0x17e81]        # 42ec10 <_IO_stdin_used@@Base+0x1c10>
  416d8f:	lea    rdi,[rip+0x20493]        # 437229 <_IO_stdin_used@@Base+0xa229>
  416d96:	mov    edx,0x60
  416d9b:	call   405100 <__assert_fail@plt>
  416da0:	movzx  edx,BYTE PTR [rax+0x48]
  416da4:	andn   rbx,rdx,rbx
  416da9:	jmp    416ab0 <__flatcc_fb_gen_c_json_parser@@Base+0x1880>
  416dae:	xchg   ax,ax
  416db0:	mov    rax,QWORD PTR [rbx+0x8]
  416db4:	mov    rcx,QWORD PTR [rbx+0x48]
  416db8:	mov    r9,QWORD PTR [rax+0x8]
  416dbc:	mov    rdi,QWORD PTR [r12+0xd0]
  416dc4:	push   r9
  416dc6:	mov    r8,r13
  416dc9:	push   QWORD PTR [rax]
  416dcb:	mov    rdx,rbp
  416dce:	xor    eax,eax
  416dd0:	mov    esi,0x1
  416dd5:	call   405200 <__fprintf_chk@plt>
  416dda:	mov    rbx,QWORD PTR [rbx]
  416ddd:	pop    r9
  416ddf:	pop    r10
  416de1:	test   rbx,rbx
  416de4:	jne    416b9e <__flatcc_fb_gen_c_json_parser@@Base+0x196e>
  416dea:	mov    rdi,QWORD PTR [r12+0xd0]
  416df2:	lea    rdx,[rip+0x2d90f]        # 444708 <_IO_stdin_used@@Base+0x17708>
  416df9:	mov    esi,0x1
  416dfe:	xor    eax,eax
  416e00:	call   405200 <__fprintf_chk@plt>
  416e05:	mov    rdi,QWORD PTR [r12+0xd0]
  416e0d:	lea    rdx,[rip+0x2e9f7]        # 44580b <_IO_stdin_used@@Base+0x1880b>
  416e14:	mov    esi,0x1
  416e19:	xor    eax,eax
  416e1b:	call   405200 <__fprintf_chk@plt>
  416e20:	xor    eax,eax
  416e22:	mov    rsi,QWORD PTR [rsp+0x1e8]
  416e2a:	xor    rsi,QWORD PTR fs:0x28
  416e33:	jne    417098 <__flatcc_fb_gen_c_json_parser@@Base+0x1e68>
  416e39:	add    rsp,0x1f8
  416e40:	pop    rbx
  416e41:	pop    rbp
  416e42:	pop    r12
  416e44:	pop    r13
  416e46:	pop    r14
  416e48:	pop    r15
  416e4a:	ret    
  416e4b:	nop    DWORD PTR [rax+rax*1+0x0]
  416e50:	mov    rax,QWORD PTR [rbx+0x8]
  416e54:	movzx  ecx,BYTE PTR [rbx+0x48]
  416e58:	mov    r9,QWORD PTR [rax+0x8]
  416e5c:	jmp    416dbc <__flatcc_fb_gen_c_json_parser@@Base+0x1b8c>
  416e61:	nop    DWORD PTR [rax+0x0]
  416e68:	mov    rdi,QWORD PTR [r12+0xd0]
  416e70:	lea    rdx,[rip+0x2da79]        # 4448f0 <_IO_stdin_used@@Base+0x178f0>
  416e77:	mov    r9,r11
  416e7a:	mov    rcx,r15
  416e7d:	mov    esi,0x1
  416e82:	xor    eax,eax
  416e84:	call   405200 <__fprintf_chk@plt>
  416e89:	mov    rdi,QWORD PTR [r12+0xd0]
  416e91:	lea    rdx,[rip+0x2e9a2]        # 44583a <_IO_stdin_used@@Base+0x1883a>
  416e98:	xor    eax,eax
  416e9a:	mov    esi,0x1
  416e9f:	call   405200 <__fprintf_chk@plt>
  416ea4:	mov    rbx,QWORD PTR [rbp+0x28]
  416ea8:	lea    rbp,[rip+0x2d9b9]        # 444868 <_IO_stdin_used@@Base+0x17868>
  416eaf:	test   rbx,rbx
  416eb2:	je     416f96 <__flatcc_fb_gen_c_json_parser@@Base+0x1d66>
  416eb8:	movzx  eax,WORD PTR [rbx+0x58]
  416ebc:	cmp    ax,0x5
  416ec0:	je     416ff0 <__flatcc_fb_gen_c_json_parser@@Base+0x1dc0>
  416ec6:	cmp    ax,0x6
  416eca:	je     416fc0 <__flatcc_fb_gen_c_json_parser@@Base+0x1d90>
  416ed0:	cmp    ax,0x4
  416ed4:	je     416f58 <__flatcc_fb_gen_c_json_parser@@Base+0x1d28>
  416eda:	mov    rax,QWORD PTR [rip+0x3a107]        # 450fe8 <stderr@GLIBC_2.2.5>
  416ee1:	lea    rcx,[rip+0x2d488]        # 444370 <_IO_stdin_used@@Base+0x17370>
  416ee8:	lea    rdx,[rip+0x1f2f2]        # 4361e1 <_IO_stdin_used@@Base+0x91e1>
  416eef:	lea    r9,[rip+0x2d8a2]        # 444798 <_IO_stdin_used@@Base+0x17798>
  416ef6:	mov    esi,0x1
  416efb:	mov    r8d,0x9d
  416f01:	mov    rdi,QWORD PTR [rax]
  416f04:	xor    eax,eax
  416f06:	call   405200 <__fprintf_chk@plt>
  416f0b:	lea    rcx,[rip+0x2eb4e]        # 445a60 <_IO_stdin_used@@Base+0x18a60>
  416f12:	lea    rsi,[rip+0x2d457]        # 444370 <_IO_stdin_used@@Base+0x17370>
  416f19:	lea    rdi,[rip+0x20309]        # 437229 <_IO_stdin_used@@Base+0xa229>
  416f20:	mov    edx,0x9d
  416f25:	call   405100 <__assert_fail@plt>
  416f2a:	nop    WORD PTR [rax+rax*1+0x0]
  416f30:	mov    rdi,QWORD PTR [r12+0xd0]
  416f38:	lea    rdx,[rip+0x2e8ec]        # 44582b <_IO_stdin_used@@Base+0x1882b>
  416f3f:	mov    rcx,r14
  416f42:	mov    esi,0x1
  416f47:	xor    eax,eax
  416f49:	call   405200 <__fprintf_chk@plt>
  416f4e:	jmp    416b30 <__flatcc_fb_gen_c_json_parser@@Base+0x1900>
  416f53:	nop    DWORD PTR [rax+rax*1+0x0]
  416f58:	mov    rax,QWORD PTR [rbx+0x8]
  416f5c:	sub    rsp,0x8
  416f60:	mov    rcx,QWORD PTR [rbx+0x48]
  416f64:	mov    rdi,QWORD PTR [r12+0xd0]
  416f6c:	lea    rdx,[rip+0x2d8ad]        # 444820 <_IO_stdin_used@@Base+0x17820>
  416f73:	mov    esi,0x1
  416f78:	mov    r8,QWORD PTR [rax+0x8]
  416f7c:	mov    r9,QWORD PTR [rax]
  416f7f:	xor    eax,eax
  416f81:	push   r8
  416f83:	call   405200 <__fprintf_chk@plt>
  416f88:	pop    rcx
  416f89:	pop    rsi
  416f8a:	mov    rbx,QWORD PTR [rbx]
  416f8d:	test   rbx,rbx
  416f90:	jne    416eb8 <__flatcc_fb_gen_c_json_parser@@Base+0x1c88>
  416f96:	mov    rdi,QWORD PTR [r12+0xd0]
  416f9e:	mov    rcx,QWORD PTR [rsp+0x8]
  416fa3:	lea    rdx,[rip+0x2d906]        # 4448b0 <_IO_stdin_used@@Base+0x178b0>
  416faa:	mov    esi,0x1
  416faf:	xor    eax,eax
  416fb1:	call   405200 <__fprintf_chk@plt>
  416fb6:	jmp    416e05 <__flatcc_fb_gen_c_json_parser@@Base+0x1bd5>
  416fbb:	nop    DWORD PTR [rax+rax*1+0x0]
  416fc0:	mov    rax,QWORD PTR [rbx+0x8]
  416fc4:	movzx  ecx,BYTE PTR [rbx+0x48]
  416fc8:	sub    rsp,0x8
  416fcc:	mov    rdi,QWORD PTR [r12+0xd0]
  416fd4:	mov    rdx,rbp
  416fd7:	mov    esi,0x1
  416fdc:	mov    r8,QWORD PTR [rax+0x8]
  416fe0:	mov    r9,QWORD PTR [rax]
  416fe3:	xor    eax,eax
  416fe5:	push   r8
  416fe7:	call   405200 <__fprintf_chk@plt>
  416fec:	pop    rax
  416fed:	pop    rdx
  416fee:	jmp    416f8a <__flatcc_fb_gen_c_json_parser@@Base+0x1d5a>
  416ff0:	mov    rax,QWORD PTR [rbx+0x8]
  416ff4:	sub    rsp,0x8
  416ff8:	mov    rcx,QWORD PTR [rbx+0x48]
  416ffc:	mov    rdi,QWORD PTR [r12+0xd0]
  417004:	lea    rdx,[rip+0x2d7cd]        # 4447d8 <_IO_stdin_used@@Base+0x177d8>
  41700b:	mov    esi,0x1
  417010:	mov    r8,QWORD PTR [rax+0x8]
  417014:	mov    r9,QWORD PTR [rax]
  417017:	xor    eax,eax
  417019:	push   r8
  41701b:	call   405200 <__fprintf_chk@plt>
  417020:	pop    rdi
  417021:	pop    r8
  417023:	jmp    416f8a <__flatcc_fb_gen_c_json_parser@@Base+0x1d5a>
  417028:	nop    DWORD PTR [rax+rax*1+0x0]
  417030:	mov    rdi,QWORD PTR [r12+0xd0]
  417038:	mov    r8,QWORD PTR [rsp+0x8]
  41703d:	lea    rdx,[rip+0x2d664]        # 4446a8 <_IO_stdin_used@@Base+0x176a8>
  417044:	mov    rcx,rbx
  417047:	mov    esi,0x1
  41704c:	xor    eax,eax
  41704e:	call   405200 <__fprintf_chk@plt>
  417053:	jmp    416b6f <__flatcc_fb_gen_c_json_parser@@Base+0x193f>
  417058:	nop    DWORD PTR [rax+rax*1+0x0]
  417060:	lea    r14,[rip+0x1f11e]        # 436185 <_IO_stdin_used@@Base+0x9185>
  417067:	lea    r13,[rip+0x2e7a3]        # 445811 <_IO_stdin_used@@Base+0x18811>
  41706e:	mov    ebx,0xffffffff
  417073:	jmp    416a90 <__flatcc_fb_gen_c_json_parser@@Base+0x1860>
  417078:	nop    DWORD PTR [rax+rax*1+0x0]
  417080:	lea    r14,[rip+0x1f107]        # 43618e <_IO_stdin_used@@Base+0x918e>
  417087:	lea    r13,[rip+0x2e781]        # 44580f <_IO_stdin_used@@Base+0x1880f>
  41708e:	mov    ebx,0xffff
  417093:	jmp    416a90 <__flatcc_fb_gen_c_json_parser@@Base+0x1860>
  417098:	call   4050d0 <__stack_chk_fail@plt>
  41709d:	nop    DWORD PTR [rax]
  4170a0:	push   r15
  4170a2:	push   r14
  4170a4:	mov    ecx,0x1d
  4170a9:	push   r13
  4170ab:	push   r12
  4170ad:	mov    r14,rsi
  4170b0:	push   rbp
  4170b1:	push   rbx
  4170b2:	mov    rbp,rdi
  4170b5:	sub    rsp,0x1f8
  4170bc:	mov    rax,QWORD PTR fs:0x28
  4170c5:	mov    QWORD PTR [rsp+0x1e8],rax
  4170cd:	xor    eax,eax
  4170cf:	lea    rdi,[rsp+0x10]
  4170d4:	mov    QWORD PTR [rsp+0x8],rdi
  4170d9:	mov    rdx,QWORD PTR [rsp+0x8]
  4170de:	rep stos QWORD PTR es:[rdi],rax
  4170e1:	lea    rcx,[rsp+0x100]
  4170e9:	mov    rsi,rcx
  4170ec:	mov    QWORD PTR [rsp],rcx
  4170f0:	mov    ecx,0x1d
  4170f5:	mov    rdi,rsi
  4170f8:	mov    rsi,r14
  4170fb:	rep stos QWORD PTR es:[rdi],rax
  4170fe:	mov    rdi,QWORD PTR [r14+0x18]
  417102:	call   407300 <__flatcc_fb_scoped_symbol_name@@Base>
  417107:	mov    rbx,QWORD PTR [r14+0xa8]
  41710e:	mov    esi,0x8
  417113:	mov    rdi,rbx
  417116:	call   405140 <calloc@plt>
  41711b:	test   rbx,rbx
  41711e:	mov    r15,rax
  417121:	je     41712c <__flatcc_fb_gen_c_json_parser@@Base+0x1efc>
  417123:	test   rax,rax
  417126:	je     417a74 <__flatcc_fb_gen_c_json_parser@@Base+0x2844>
  41712c:	mov    rax,QWORD PTR [r14+0x28]
  417130:	test   rax,rax
  417133:	je     41714b <__flatcc_fb_gen_c_json_parser@@Base+0x1f1b>
  417135:	nop    DWORD PTR [rax]
  417138:	mov    rdx,QWORD PTR [rax+0x88]
  41713f:	mov    QWORD PTR [r15+rdx*8],rax
  417143:	mov    rax,QWORD PTR [rax]
  417146:	test   rax,rax
  417149:	jne    417138 <__flatcc_fb_gen_c_json_parser@@Base+0x1f08>
  41714b:	mov    rcx,QWORD PTR [rsp+0x8]
  417150:	mov    rdi,QWORD PTR [rbp+0x0]
  417154:	lea    rdx,[rip+0x2d80d]        # 444968 <_IO_stdin_used@@Base+0x17968>
  41715b:	xor    eax,eax
  41715d:	mov    esi,0x1
  417162:	call   405200 <__fprintf_chk@plt>
  417167:	cmp    QWORD PTR [r14+0xa8],0x0
  41716f:	je     417a30 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  417175:	xor    ebx,ebx
  417177:	lea    r12,[rip+0x2e792]        # 445910 <_IO_stdin_used@@Base+0x18910>
  41717e:	jmp    417191 <__flatcc_fb_gen_c_json_parser@@Base+0x1f61>
  417180:	add    rbx,0x1
  417184:	cmp    rbx,QWORD PTR [r14+0xa8]
  41718b:	jae    417260 <__flatcc_fb_gen_c_json_parser@@Base+0x2030>
  417191:	mov    r13,QWORD PTR [r15+rbx*8]
  417195:	test   r13,r13
  417198:	je     417180 <__flatcc_fb_gen_c_json_parser@@Base+0x1f50>
  41719a:	test   BYTE PTR [r13+0x70],0x4
  41719f:	jne    417180 <__flatcc_fb_gen_c_json_parser@@Base+0x1f50>
  4171a1:	mov    rdi,QWORD PTR [rbp+0x0]
  4171a5:	lea    rdx,[rip+0x2e6a1]        # 44584d <_IO_stdin_used@@Base+0x1884d>
  4171ac:	xor    eax,eax
  4171ae:	mov    esi,0x1
  4171b3:	call   405200 <__fprintf_chk@plt>
  4171b8:	movzx  eax,WORD PTR [r13+0x28]
  4171bd:	sub    eax,0x7
  4171c0:	cmp    ax,0x8
  4171c4:	ja     417180 <__flatcc_fb_gen_c_json_parser@@Base+0x1f50>
  4171c6:	movzx  eax,ax
  4171c9:	movsxd rax,DWORD PTR [r12+rax*4]
  4171cd:	add    rax,r12
  4171d0:	jmp    rax
  4171d2:	nop    WORD PTR [rax+rax*1+0x0]
  4171d8:	mov    rsi,QWORD PTR [r13+0x18]
  4171dc:	mov    rdx,QWORD PTR [rsp]
  4171e0:	mov    rdi,QWORD PTR [rsi+0x18]
  4171e4:	call   407300 <__flatcc_fb_scoped_symbol_name@@Base>
  4171e9:	mov    rax,QWORD PTR [r13+0x18]
  4171ed:	movzx  eax,WORD PTR [rax+0x10]
  4171f1:	cmp    ax,0x1
  4171f5:	je     4177b4 <__flatcc_fb_gen_c_json_parser@@Base+0x2584>
  4171fb:	jb     417536 <__flatcc_fb_gen_c_json_parser@@Base+0x2306>
  417201:	cmp    ax,0x3
  417205:	je     417755 <__flatcc_fb_gen_c_json_parser@@Base+0x2525>
  41720b:	cmp    ax,0x4
  41720f:	jne    417473 <__flatcc_fb_gen_c_json_parser@@Base+0x2243>
  417215:	mov    rax,QWORD PTR [r13+0x8]
  417219:	sub    rsp,0x8
  41721d:	mov    rcx,QWORD PTR [r13+0x88]
  417224:	mov    rsi,QWORD PTR [rsp+0x8]
  417229:	lea    rdx,[rip+0x2de78]        # 4450a8 <_IO_stdin_used@@Base+0x180a8>
  417230:	mov    r8,QWORD PTR [rax+0x8]
  417234:	push   rsi
  417235:	push   rsi
  417236:	mov    r9,QWORD PTR [rax]
  417239:	push   r8
  41723b:	mov    rdi,QWORD PTR [rbp+0x0]
  41723f:	xor    eax,eax
  417241:	mov    esi,0x1
  417246:	add    rbx,0x1
  41724a:	call   405200 <__fprintf_chk@plt>
  41724f:	add    rsp,0x20
  417253:	cmp    rbx,QWORD PTR [r14+0xa8]
  41725a:	jb     417191 <__flatcc_fb_gen_c_json_parser@@Base+0x1f61>
  417260:	mov    rdi,QWORD PTR [rbp+0x0]
  417264:	lea    rdx,[rip+0x2e59f]        # 44580a <_IO_stdin_used@@Base+0x1880a>
  41726b:	mov    esi,0x1
  417270:	xor    eax,eax
  417272:	call   405200 <__fprintf_chk@plt>
  417277:	mov    rcx,QWORD PTR [rsp+0x8]
  41727c:	mov    rdi,QWORD PTR [rbp+0x0]
  417280:	lea    rdx,[rip+0x2d751]        # 4449d8 <_IO_stdin_used@@Base+0x179d8>
  417287:	mov    esi,0x1
  41728c:	xor    eax,eax
  41728e:	mov    r8,rcx
  417291:	call   405200 <__fprintf_chk@plt>
  417296:	mov    rdi,r15
  417299:	call   405040 <free@plt>
  41729e:	xor    eax,eax
  4172a0:	mov    rcx,QWORD PTR [rsp+0x1e8]
  4172a8:	xor    rcx,QWORD PTR fs:0x28
  4172b1:	jne    417ac4 <__flatcc_fb_gen_c_json_parser@@Base+0x2894>
  4172b7:	add    rsp,0x1f8
  4172be:	pop    rbx
  4172bf:	pop    rbp
  4172c0:	pop    r12
  4172c2:	pop    r13
  4172c4:	pop    r14
  4172c6:	pop    r15
  4172c8:	ret    
  4172c9:	nop    DWORD PTR [rax+0x0]
  4172d0:	mov    rsi,QWORD PTR [r13+0x18]
  4172d4:	mov    rdx,QWORD PTR [rsp]
  4172d8:	mov    rdi,QWORD PTR [rsi+0x18]
  4172dc:	call   407300 <__flatcc_fb_scoped_symbol_name@@Base>
  4172e1:	mov    rdx,QWORD PTR [r13+0x18]
  4172e5:	movzx  eax,WORD PTR [rdx+0x10]
  4172e9:	cmp    ax,0x1
  4172ed:	je     417791 <__flatcc_fb_gen_c_json_parser@@Base+0x2561>
  4172f3:	jb     417513 <__flatcc_fb_gen_c_json_parser@@Base+0x22e3>
  4172f9:	cmp    ax,0x3
  4172fd:	je     417774 <__flatcc_fb_gen_c_json_parser@@Base+0x2544>
  417303:	cmp    ax,0x4
  417307:	jne    4174c3 <__flatcc_fb_gen_c_json_parser@@Base+0x2293>
  41730d:	mov    rax,QWORD PTR [r13+0x8]
  417311:	sub    rsp,0x8
  417315:	mov    rcx,QWORD PTR [r13+0x88]
  41731c:	mov    rsi,QWORD PTR [rsp+0x8]
  417321:	lea    rdx,[rip+0x2dbb8]        # 444ee0 <_IO_stdin_used@@Base+0x17ee0>
  417328:	mov    r8,QWORD PTR [rax+0x8]
  41732c:	push   rsi
  41732d:	push   rsi
  41732e:	mov    r9,QWORD PTR [rax]
  417331:	push   r8
  417333:	jmp    41723b <__flatcc_fb_gen_c_json_parser@@Base+0x200b>
  417338:	nop    DWORD PTR [rax+rax*1+0x0]
  417340:	mov    rax,QWORD PTR [r13+0x8]
  417344:	sub    rsp,0x8
  417348:	mov    rcx,QWORD PTR [r13+0x88]
  41734f:	lea    rdx,[rip+0x2d96a]        # 444cc0 <_IO_stdin_used@@Base+0x17cc0>
  417356:	mov    r8,QWORD PTR [rax+0x8]
  41735a:	mov    r9,QWORD PTR [rax]
  41735d:	push   r8
  41735f:	mov    rdi,QWORD PTR [rbp+0x0]
  417363:	mov    esi,0x1
  417368:	xor    eax,eax
  41736a:	call   405200 <__fprintf_chk@plt>
  41736f:	pop    rcx
  417370:	pop    rsi
  417371:	jmp    417180 <__flatcc_fb_gen_c_json_parser@@Base+0x1f50>
  417376:	nop    WORD PTR cs:[rax+rax*1+0x0]
  417380:	mov    rax,QWORD PTR [r13+0x8]
  417384:	sub    rsp,0x8
  417388:	mov    rcx,QWORD PTR [r13+0x88]
  41738f:	lea    rdx,[rip+0x2d96a]        # 444d00 <_IO_stdin_used@@Base+0x17d00>
  417396:	mov    r8,QWORD PTR [rax+0x8]
  41739a:	mov    r9,QWORD PTR [rax]
  41739d:	push   r8
  41739f:	jmp    41735f <__flatcc_fb_gen_c_json_parser@@Base+0x212f>
  4173a1:	nop    DWORD PTR [rax+0x0]
  4173a8:	cmp    DWORD PTR [r13+0x18],0xb
  4173ad:	ja     417646 <__flatcc_fb_gen_c_json_parser@@Base+0x2416>
  4173b3:	mov    eax,DWORD PTR [r13+0x18]
  4173b7:	lea    rdx,[rip+0x2e576]        # 445934 <_IO_stdin_used@@Base+0x18934>
  4173be:	movsxd rax,DWORD PTR [rdx+rax*4]
  4173c2:	add    rax,rdx
  4173c5:	jmp    rax
  4173c7:	nop    WORD PTR [rax+rax*1+0x0]
  4173d0:	movzx  eax,WORD PTR [r13+0x70]
  4173d5:	test   ah,0xc
  4173d8:	jne    417448 <__flatcc_fb_gen_c_json_parser@@Base+0x2218>
  4173da:	mov    rsi,QWORD PTR [r13+0x90]
  4173e1:	test   rsi,rsi
  4173e4:	je     417559 <__flatcc_fb_gen_c_json_parser@@Base+0x2329>
  4173ea:	mov    rdi,QWORD PTR [rsi+0x18]
  4173ee:	mov    rdx,QWORD PTR [rsp]
  4173f2:	call   407300 <__flatcc_fb_scoped_symbol_name@@Base>
  4173f7:	mov    rax,QWORD PTR [r13+0x90]
  4173fe:	mov    rcx,QWORD PTR [r13+0x88]
  417405:	cmp    WORD PTR [rax+0x10],0x0
  41740a:	mov    rax,QWORD PTR [r13+0x8]
  41740e:	mov    r8,QWORD PTR [rax+0x8]
  417412:	jne    417430 <__flatcc_fb_gen_c_json_parser@@Base+0x2200>
  417414:	push   QWORD PTR [rsp]
  417417:	lea    rdx,[rip+0x2d7a2]        # 444bc0 <_IO_stdin_used@@Base+0x17bc0>
  41741e:	push   r8
  417420:	mov    r9,QWORD PTR [rax]
  417423:	jmp    41735f <__flatcc_fb_gen_c_json_parser@@Base+0x212f>
  417428:	nop    DWORD PTR [rax+rax*1+0x0]
  417430:	push   QWORD PTR [rsp]
  417433:	lea    rdx,[rip+0x2d7e6]        # 444c20 <_IO_stdin_used@@Base+0x17c20>
  41743a:	push   r8
  41743c:	mov    r9,QWORD PTR [rax]
  41743f:	jmp    41735f <__flatcc_fb_gen_c_json_parser@@Base+0x212f>
  417444:	nop    DWORD PTR [rax+0x0]
  417448:	mov    rdx,QWORD PTR [r13+0x8]
  41744c:	shr    ax,0xa
  417450:	mov    rcx,QWORD PTR [r13+0x88]
  417457:	xor    eax,0x1
  41745a:	and    eax,0x1
  41745d:	mov    r8,QWORD PTR [rdx+0x8]
  417461:	mov    r9,QWORD PTR [rdx]
  417464:	lea    rdx,[rip+0x2d705]        # 444b70 <_IO_stdin_used@@Base+0x17b70>
  41746b:	push   rax
  41746c:	push   r8
  41746e:	jmp    41735f <__flatcc_fb_gen_c_json_parser@@Base+0x212f>
  417473:	mov    rax,QWORD PTR [rip+0x39b6e]        # 450fe8 <stderr@GLIBC_2.2.5>
  41747a:	lea    rcx,[rip+0x2ceef]        # 444370 <_IO_stdin_used@@Base+0x17370>
  417481:	lea    rdx,[rip+0x1ed59]        # 4361e1 <_IO_stdin_used@@Base+0x91e1>
  417488:	lea    r9,[rip+0x2dc91]        # 445120 <_IO_stdin_used@@Base+0x18120>
  41748f:	mov    esi,0x1
  417494:	mov    r8d,0x21f
  41749a:	mov    rdi,QWORD PTR [rax]
  41749d:	xor    eax,eax
  41749f:	call   405200 <__fprintf_chk@plt>
  4174a4:	lea    rcx,[rip+0x2e555]        # 445a00 <_IO_stdin_used@@Base+0x18a00>
  4174ab:	lea    rsi,[rip+0x2cebe]        # 444370 <_IO_stdin_used@@Base+0x17370>
  4174b2:	lea    rdi,[rip+0x1fd70]        # 437229 <_IO_stdin_used@@Base+0xa229>
  4174b9:	mov    edx,0x21f
  4174be:	call   405100 <__assert_fail@plt>
  4174c3:	mov    rax,QWORD PTR [rip+0x39b1e]        # 450fe8 <stderr@GLIBC_2.2.5>
  4174ca:	lea    rcx,[rip+0x2ce9f]        # 444370 <_IO_stdin_used@@Base+0x17370>
  4174d1:	lea    rdx,[rip+0x1ed09]        # 4361e1 <_IO_stdin_used@@Base+0x91e1>
  4174d8:	lea    r9,[rip+0x2da71]        # 444f50 <_IO_stdin_used@@Base+0x17f50>
  4174df:	mov    esi,0x1
  4174e4:	mov    r8d,0x1f8
  4174ea:	mov    rdi,QWORD PTR [rax]
  4174ed:	xor    eax,eax
  4174ef:	call   405200 <__fprintf_chk@plt>
  4174f4:	lea    rcx,[rip+0x2e505]        # 445a00 <_IO_stdin_used@@Base+0x18a00>
  4174fb:	lea    rsi,[rip+0x2ce6e]        # 444370 <_IO_stdin_used@@Base+0x17370>
  417502:	lea    rdi,[rip+0x1fd20]        # 437229 <_IO_stdin_used@@Base+0xa229>
  417509:	mov    edx,0x1f8
  41750e:	call   405100 <__assert_fail@plt>
  417513:	mov    rax,QWORD PTR [r13+0x8]
  417517:	mov    rcx,QWORD PTR [r13+0x88]
  41751e:	lea    rdx,[rip+0x2d963]        # 444e88 <_IO_stdin_used@@Base+0x17e88>
  417525:	mov    r8,QWORD PTR [rax+0x8]
  417529:	push   QWORD PTR [rsp]
  41752c:	mov    r9,QWORD PTR [rax]
  41752f:	push   r8
  417531:	jmp    41735f <__flatcc_fb_gen_c_json_parser@@Base+0x212f>
  417536:	mov    rax,QWORD PTR [r13+0x8]
  41753a:	mov    rcx,QWORD PTR [r13+0x88]
  417541:	lea    rdx,[rip+0x2da48]        # 444f90 <_IO_stdin_used@@Base+0x17f90>
  417548:	mov    r8,QWORD PTR [rax+0x8]
  41754c:	push   QWORD PTR [rsp]
  41754f:	mov    r9,QWORD PTR [rax]
  417552:	push   r8
  417554:	jmp    41735f <__flatcc_fb_gen_c_json_parser@@Base+0x212f>
  417559:	cmp    DWORD PTR [r13+0x18],0xb
  41755e:	ja     417646 <__flatcc_fb_gen_c_json_parser@@Base+0x2416>
  417564:	mov    eax,DWORD PTR [r13+0x18]
  417568:	lea    rdx,[rip+0x2e3f5]        # 445964 <_IO_stdin_used@@Base+0x18964>
  41756f:	movsxd rax,DWORD PTR [rdx+rax*4]
  417573:	add    rax,rdx
  417576:	jmp    rax
  417578:	lea    rcx,[rip+0x1ed29]        # 4362a8 <_IO_stdin_used@@Base+0x92a8>
  41757f:	nop
  417580:	movzx  eax,WORD PTR [r13+0x58]
  417585:	cmp    ax,0x4
  417589:	je     4176e1 <__flatcc_fb_gen_c_json_parser@@Base+0x24b1>
  41758f:	ja     4176a0 <__flatcc_fb_gen_c_json_parser@@Base+0x2470>
  417595:	cmp    ax,0x3
  417599:	jne    417705 <__flatcc_fb_gen_c_json_parser@@Base+0x24d5>
  41759f:	mov    rax,QWORD PTR [r13+0x8]
  4175a3:	vmovsd xmm0,QWORD PTR [r13+0x48]
  4175a9:	mov    rdi,QWORD PTR [rbp+0x0]
  4175ad:	lea    rdx,[rip+0x2d57c]        # 444b30 <_IO_stdin_used@@Base+0x17b30>
  4175b4:	mov    esi,0x1
  4175b9:	mov    r9,QWORD PTR [rax+0x8]
  4175bd:	push   r9
  4175bf:	mov    r8,QWORD PTR [r13+0x88]
  4175c6:	push   QWORD PTR [rax]
  4175c8:	mov    eax,0x1
  4175cd:	call   405200 <__fprintf_chk@plt>
  4175d2:	pop    rdi
  4175d3:	pop    r8
  4175d5:	jmp    417180 <__flatcc_fb_gen_c_json_parser@@Base+0x1f50>
  4175da:	lea    rcx,[rip+0x1ecb9]        # 43629a <_IO_stdin_used@@Base+0x929a>
  4175e1:	jmp    417580 <__flatcc_fb_gen_c_json_parser@@Base+0x2350>
  4175e3:	lea    rcx,[rip+0x1eccb]        # 4362b5 <_IO_stdin_used@@Base+0x92b5>
  4175ea:	jmp    417580 <__flatcc_fb_gen_c_json_parser@@Base+0x2350>
  4175ec:	lea    rcx,[rip+0x1ecae]        # 4362a1 <_IO_stdin_used@@Base+0x92a1>
  4175f3:	jmp    417580 <__flatcc_fb_gen_c_json_parser@@Base+0x2350>
  4175f5:	lea    rcx,[rip+0x1ebb0]        # 4361ac <_IO_stdin_used@@Base+0x91ac>
  4175fc:	jmp    417580 <__flatcc_fb_gen_c_json_parser@@Base+0x2350>
  4175fe:	lea    rcx,[rip+0x1eba1]        # 4361a6 <_IO_stdin_used@@Base+0x91a6>
  417605:	jmp    417580 <__flatcc_fb_gen_c_json_parser@@Base+0x2350>
  41760a:	lea    rcx,[rip+0x1ec8a]        # 43629b <_IO_stdin_used@@Base+0x929b>
  417611:	jmp    417580 <__flatcc_fb_gen_c_json_parser@@Base+0x2350>
  417616:	lea    rcx,[rip+0x1ec85]        # 4362a2 <_IO_stdin_used@@Base+0x92a2>
  41761d:	jmp    417580 <__flatcc_fb_gen_c_json_parser@@Base+0x2350>
  417622:	lea    rcx,[rip+0x1ec80]        # 4362a9 <_IO_stdin_used@@Base+0x92a9>
  417629:	jmp    417580 <__flatcc_fb_gen_c_json_parser@@Base+0x2350>
  41762e:	lea    rcx,[rip+0x1ec7b]        # 4362b0 <_IO_stdin_used@@Base+0x92b0>
  417635:	jmp    417580 <__flatcc_fb_gen_c_json_parser@@Base+0x2350>
  41763a:	lea    rcx,[rip+0x1ec6e]        # 4362af <_IO_stdin_used@@Base+0x92af>
  417641:	jmp    417580 <__flatcc_fb_gen_c_json_parser@@Base+0x2350>
  417646:	mov    rax,QWORD PTR [rip+0x3999b]        # 450fe8 <stderr@GLIBC_2.2.5>
  41764d:	lea    rcx,[rip+0x175bc]        # 42ec10 <_IO_stdin_used@@Base+0x1c10>
  417654:	lea    rdx,[rip+0x1eb86]        # 4361e1 <_IO_stdin_used@@Base+0x91e1>
  41765b:	lea    r9,[rip+0x17576]        # 42ebd8 <_IO_stdin_used@@Base+0x1bd8>
  417662:	mov    esi,0x1
  417667:	mov    r8d,0x60
  41766d:	mov    rdi,QWORD PTR [rax]
  417670:	xor    eax,eax
  417672:	call   405200 <__fprintf_chk@plt>
  417677:	lea    rcx,[rip+0x2e3c2]        # 445a40 <_IO_stdin_used@@Base+0x18a40>
  41767e:	lea    rsi,[rip+0x1758b]        # 42ec10 <_IO_stdin_used@@Base+0x1c10>
  417685:	lea    rdi,[rip+0x1fb9d]        # 437229 <_IO_stdin_used@@Base+0xa229>
  41768c:	mov    edx,0x60
  417691:	call   405100 <__assert_fail@plt>
  417696:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4176a0:	cmp    ax,0x6
  4176a4:	ja     417705 <__flatcc_fb_gen_c_json_parser@@Base+0x24d5>
  4176a6:	mov    rax,QWORD PTR [r13+0x8]
  4176aa:	sub    rsp,0x8
  4176ae:	lea    rdx,[rip+0x2d3fb]        # 444ab0 <_IO_stdin_used@@Base+0x17ab0>
  4176b5:	mov    r9,QWORD PTR [rax+0x8]
  4176b9:	push   QWORD PTR [r13+0x48]
  4176bd:	push   r9
  4176bf:	mov    r8,QWORD PTR [r13+0x88]
  4176c6:	push   QWORD PTR [rax]
  4176c8:	mov    rdi,QWORD PTR [rbp+0x0]
  4176cc:	mov    esi,0x1
  4176d1:	xor    eax,eax
  4176d3:	call   405200 <__fprintf_chk@plt>
  4176d8:	add    rsp,0x20
  4176dc:	jmp    417180 <__flatcc_fb_gen_c_json_parser@@Base+0x1f50>
  4176e1:	mov    rax,QWORD PTR [r13+0x8]
  4176e5:	sub    rsp,0x8
  4176e9:	lea    rdx,[rip+0x2d400]        # 444af0 <_IO_stdin_used@@Base+0x17af0>
  4176f0:	mov    r9,QWORD PTR [rax+0x8]
  4176f4:	push   QWORD PTR [r13+0x48]
  4176f8:	push   r9
  4176fa:	push   QWORD PTR [rax]
  4176fc:	mov    r8,QWORD PTR [r13+0x88]
  417703:	jmp    4176c8 <__flatcc_fb_gen_c_json_parser@@Base+0x2498>
  417705:	mov    rax,QWORD PTR [rip+0x398dc]        # 450fe8 <stderr@GLIBC_2.2.5>
  41770c:	lea    rcx,[rip+0x2cc5d]        # 444370 <_IO_stdin_used@@Base+0x17370>
  417713:	lea    rdx,[rip+0x1eac7]        # 4361e1 <_IO_stdin_used@@Base+0x91e1>
  41771a:	lea    r9,[rip+0x2b497]        # 442bb8 <_IO_stdin_used@@Base+0x15bb8>
  417721:	mov    esi,0x1
  417726:	mov    r8d,0x196
  41772c:	mov    rdi,QWORD PTR [rax]
  41772f:	xor    eax,eax
  417731:	call   405200 <__fprintf_chk@plt>
  417736:	lea    rcx,[rip+0x2e2c3]        # 445a00 <_IO_stdin_used@@Base+0x18a00>
  41773d:	lea    rsi,[rip+0x2cc2c]        # 444370 <_IO_stdin_used@@Base+0x17370>
  417744:	lea    rdi,[rip+0x1fade]        # 437229 <_IO_stdin_used@@Base+0xa229>
  41774b:	mov    edx,0x196
  417750:	call   405100 <__assert_fail@plt>
  417755:	cmp    DWORD PTR [r13+0x18],0xb
  41775a:	ja     417646 <__flatcc_fb_gen_c_json_parser@@Base+0x2416>
  417760:	mov    eax,DWORD PTR [r13+0x18]
  417764:	lea    rcx,[rip+0x2e229]        # 445994 <_IO_stdin_used@@Base+0x18994>
  41776b:	movsxd rax,DWORD PTR [rcx+rax*4]
  41776f:	add    rax,rcx
  417772:	jmp    rax
  417774:	cmp    DWORD PTR [rdx+0x48],0xb
  417778:	ja     417646 <__flatcc_fb_gen_c_json_parser@@Base+0x2416>
  41777e:	mov    eax,DWORD PTR [rdx+0x48]
  417781:	lea    rdx,[rip+0x2e23c]        # 4459c4 <_IO_stdin_used@@Base+0x189c4>
  417788:	movsxd rax,DWORD PTR [rdx+rax*4]
  41778c:	add    rax,rdx
  41778f:	jmp    rax
  417791:	mov    rax,QWORD PTR [r13+0x8]
  417795:	mov    rcx,QWORD PTR [r13+0x88]
  41779c:	lea    rdx,[rip+0x2d68d]        # 444e30 <_IO_stdin_used@@Base+0x17e30>
  4177a3:	mov    r8,QWORD PTR [rax+0x8]
  4177a7:	push   QWORD PTR [rsp]
  4177aa:	mov    r9,QWORD PTR [rax]
  4177ad:	push   r8
  4177af:	jmp    41735f <__flatcc_fb_gen_c_json_parser@@Base+0x212f>
  4177b4:	mov    rax,QWORD PTR [r13+0x8]
  4177b8:	sub    rsp,0x8
  4177bc:	mov    rcx,QWORD PTR [r13+0x88]
  4177c3:	lea    rdx,[rip+0x2d87e]        # 445048 <_IO_stdin_used@@Base+0x18048>
  4177ca:	mov    r8,QWORD PTR [rax+0x8]
  4177ce:	push   QWORD PTR [rsp+0x8]
  4177d2:	push   QWORD PTR [r13+0x80]
  4177d9:	mov    r9,QWORD PTR [rax]
  4177dc:	push   r8
  4177de:	jmp    41723b <__flatcc_fb_gen_c_json_parser@@Base+0x200b>
  4177e3:	lea    rcx,[rip+0x1e9bc]        # 4361a6 <_IO_stdin_used@@Base+0x91a6>
  4177ea:	movzx  eax,WORD PTR [r13+0x58]
  4177ef:	cmp    ax,0x4
  4177f3:	je     417a0a <__flatcc_fb_gen_c_json_parser@@Base+0x27da>
  4177f9:	jb     4179ba <__flatcc_fb_gen_c_json_parser@@Base+0x278a>
  4177ff:	cmp    ax,0x6
  417803:	ja     4179ba <__flatcc_fb_gen_c_json_parser@@Base+0x278a>
  417809:	mov    rax,QWORD PTR [r13+0x8]
  41780d:	lea    rdx,[rip+0x2d534]        # 444d48 <_IO_stdin_used@@Base+0x17d48>
  417814:	mov    r9,QWORD PTR [rax+0x8]
  417818:	push   QWORD PTR [rsp]
  41781b:	push   QWORD PTR [r13+0x48]
  41781f:	push   r9
  417821:	push   QWORD PTR [rax]
  417823:	mov    r8,QWORD PTR [r13+0x88]
  41782a:	jmp    4176c8 <__flatcc_fb_gen_c_json_parser@@Base+0x2498>
  41782f:	lea    rcx,[rip+0x1e976]        # 4361ac <_IO_stdin_used@@Base+0x91ac>
  417836:	jmp    4177ea <__flatcc_fb_gen_c_json_parser@@Base+0x25ba>
  417838:	lea    rcx,[rip+0x1ea71]        # 4362b0 <_IO_stdin_used@@Base+0x92b0>
  41783f:	jmp    4177ea <__flatcc_fb_gen_c_json_parser@@Base+0x25ba>
  417841:	lea    rcx,[rip+0x1ea61]        # 4362a9 <_IO_stdin_used@@Base+0x92a9>
  417848:	jmp    4177ea <__flatcc_fb_gen_c_json_parser@@Base+0x25ba>
  41784a:	lea    rcx,[rip+0x1ea51]        # 4362a2 <_IO_stdin_used@@Base+0x92a2>
  417851:	jmp    4177ea <__flatcc_fb_gen_c_json_parser@@Base+0x25ba>
  417853:	lea    rcx,[rip+0x1ea41]        # 43629b <_IO_stdin_used@@Base+0x929b>
  41785a:	jmp    4177ea <__flatcc_fb_gen_c_json_parser@@Base+0x25ba>
  41785c:	lea    rcx,[rip+0x1ea52]        # 4362b5 <_IO_stdin_used@@Base+0x92b5>
  417863:	jmp    4177ea <__flatcc_fb_gen_c_json_parser@@Base+0x25ba>
  417865:	lea    rcx,[rip+0x1ea43]        # 4362af <_IO_stdin_used@@Base+0x92af>
  41786c:	jmp    4177ea <__flatcc_fb_gen_c_json_parser@@Base+0x25ba>
  417871:	lea    rcx,[rip+0x1ea30]        # 4362a8 <_IO_stdin_used@@Base+0x92a8>
  417878:	jmp    4177ea <__flatcc_fb_gen_c_json_parser@@Base+0x25ba>
  41787d:	lea    rcx,[rip+0x1ea1d]        # 4362a1 <_IO_stdin_used@@Base+0x92a1>
  417884:	jmp    4177ea <__flatcc_fb_gen_c_json_parser@@Base+0x25ba>
  417889:	lea    rcx,[rip+0x1ea0a]        # 43629a <_IO_stdin_used@@Base+0x929a>
  417890:	jmp    4177ea <__flatcc_fb_gen_c_json_parser@@Base+0x25ba>
  417895:	lea    rcx,[rip+0x1e90a]        # 4361a6 <_IO_stdin_used@@Base+0x91a6>
  41789c:	mov    rax,QWORD PTR [r13+0x8]
  4178a0:	lea    rdx,[rip+0x2d741]        # 444fe8 <_IO_stdin_used@@Base+0x17fe8>
  4178a7:	mov    r9,QWORD PTR [rax+0x8]
  4178ab:	push   QWORD PTR [rsp]
  4178ae:	push   QWORD PTR [r14+0xb8]
  4178b5:	push   r9
  4178b7:	push   QWORD PTR [rax]
  4178b9:	mov    r8,QWORD PTR [r13+0x88]
  4178c0:	jmp    4176c8 <__flatcc_fb_gen_c_json_parser@@Base+0x2498>
  4178c5:	lea    rcx,[rip+0x1e8e0]        # 4361ac <_IO_stdin_used@@Base+0x91ac>
  4178cc:	jmp    41789c <__flatcc_fb_gen_c_json_parser@@Base+0x266c>
  4178ce:	lea    rcx,[rip+0x1e9db]        # 4362b0 <_IO_stdin_used@@Base+0x92b0>
  4178d5:	jmp    41789c <__flatcc_fb_gen_c_json_parser@@Base+0x266c>
  4178d7:	lea    rcx,[rip+0x1e9cb]        # 4362a9 <_IO_stdin_used@@Base+0x92a9>
  4178de:	jmp    41789c <__flatcc_fb_gen_c_json_parser@@Base+0x266c>
  4178e0:	lea    rcx,[rip+0x1e9bb]        # 4362a2 <_IO_stdin_used@@Base+0x92a2>
  4178e7:	jmp    41789c <__flatcc_fb_gen_c_json_parser@@Base+0x266c>
  4178e9:	lea    rcx,[rip+0x1e9ab]        # 43629b <_IO_stdin_used@@Base+0x929b>
  4178f0:	jmp    41789c <__flatcc_fb_gen_c_json_parser@@Base+0x266c>
  4178f2:	lea    rcx,[rip+0x1e9bc]        # 4362b5 <_IO_stdin_used@@Base+0x92b5>
  4178f9:	jmp    41789c <__flatcc_fb_gen_c_json_parser@@Base+0x266c>
  4178fb:	lea    rcx,[rip+0x1e9ad]        # 4362af <_IO_stdin_used@@Base+0x92af>
  417902:	jmp    41789c <__flatcc_fb_gen_c_json_parser@@Base+0x266c>
  417904:	lea    rcx,[rip+0x1e99d]        # 4362a8 <_IO_stdin_used@@Base+0x92a8>
  41790b:	jmp    41789c <__flatcc_fb_gen_c_json_parser@@Base+0x266c>
  41790d:	lea    rcx,[rip+0x1e98d]        # 4362a1 <_IO_stdin_used@@Base+0x92a1>
  417914:	jmp    41789c <__flatcc_fb_gen_c_json_parser@@Base+0x266c>
  417916:	lea    rcx,[rip+0x1e97d]        # 43629a <_IO_stdin_used@@Base+0x929a>
  41791d:	jmp    41789c <__flatcc_fb_gen_c_json_parser@@Base+0x266c>
  417922:	lea    rcx,[rip+0x1e87d]        # 4361a6 <_IO_stdin_used@@Base+0x91a6>
  417929:	mov    rax,QWORD PTR [r13+0x8]
  41792d:	mov    rdi,QWORD PTR [rbp+0x0]
  417931:	lea    rdx,[rip+0x2d348]        # 444c80 <_IO_stdin_used@@Base+0x17c80>
  417938:	mov    esi,0x1
  41793d:	mov    r9,QWORD PTR [rax+0x8]
  417941:	push   r9
  417943:	mov    r8,QWORD PTR [r13+0x88]
  41794a:	push   QWORD PTR [rax]
  41794c:	xor    eax,eax
  41794e:	call   405200 <__fprintf_chk@plt>
  417953:	pop    rax
  417954:	pop    rdx
  417955:	jmp    417180 <__flatcc_fb_gen_c_json_parser@@Base+0x1f50>
  41795a:	lea    rcx,[rip+0x1e84b]        # 4361ac <_IO_stdin_used@@Base+0x91ac>
  417961:	jmp    417929 <__flatcc_fb_gen_c_json_parser@@Base+0x26f9>
  417963:	lea    rcx,[rip+0x1e946]        # 4362b0 <_IO_stdin_used@@Base+0x92b0>
  41796a:	jmp    417929 <__flatcc_fb_gen_c_json_parser@@Base+0x26f9>
  41796c:	lea    rcx,[rip+0x1e936]        # 4362a9 <_IO_stdin_used@@Base+0x92a9>
  417973:	jmp    417929 <__flatcc_fb_gen_c_json_parser@@Base+0x26f9>
  417975:	lea    rcx,[rip+0x1e926]        # 4362a2 <_IO_stdin_used@@Base+0x92a2>
  41797c:	jmp    417929 <__flatcc_fb_gen_c_json_parser@@Base+0x26f9>
  41797e:	lea    rcx,[rip+0x1e916]        # 43629b <_IO_stdin_used@@Base+0x929b>
  417985:	jmp    417929 <__flatcc_fb_gen_c_json_parser@@Base+0x26f9>
  417987:	lea    rcx,[rip+0x1e927]        # 4362b5 <_IO_stdin_used@@Base+0x92b5>
  41798e:	jmp    417929 <__flatcc_fb_gen_c_json_parser@@Base+0x26f9>
  417990:	lea    rcx,[rip+0x1e918]        # 4362af <_IO_stdin_used@@Base+0x92af>
  417997:	jmp    417929 <__flatcc_fb_gen_c_json_parser@@Base+0x26f9>
  417999:	lea    rcx,[rip+0x1e908]        # 4362a8 <_IO_stdin_used@@Base+0x92a8>
  4179a0:	jmp    417929 <__flatcc_fb_gen_c_json_parser@@Base+0x26f9>
  4179a2:	lea    rcx,[rip+0x1e8f8]        # 4362a1 <_IO_stdin_used@@Base+0x92a1>
  4179a9:	jmp    417929 <__flatcc_fb_gen_c_json_parser@@Base+0x26f9>
  4179ae:	lea    rcx,[rip+0x1e8e5]        # 43629a <_IO_stdin_used@@Base+0x929a>
  4179b5:	jmp    417929 <__flatcc_fb_gen_c_json_parser@@Base+0x26f9>
  4179ba:	mov    rax,QWORD PTR [rip+0x39627]        # 450fe8 <stderr@GLIBC_2.2.5>
  4179c1:	lea    rcx,[rip+0x2c9a8]        # 444370 <_IO_stdin_used@@Base+0x17370>
  4179c8:	lea    rdx,[rip+0x1e812]        # 4361e1 <_IO_stdin_used@@Base+0x91e1>
  4179cf:	lea    r9,[rip+0x2d422]        # 444df8 <_IO_stdin_used@@Base+0x17df8>
  4179d6:	mov    esi,0x1
  4179db:	mov    r8d,0x1e3
  4179e1:	mov    rdi,QWORD PTR [rax]
  4179e4:	xor    eax,eax
  4179e6:	call   405200 <__fprintf_chk@plt>
  4179eb:	lea    rcx,[rip+0x2e00e]        # 445a00 <_IO_stdin_used@@Base+0x18a00>
  4179f2:	lea    rsi,[rip+0x2c977]        # 444370 <_IO_stdin_used@@Base+0x17370>
  4179f9:	lea    rdi,[rip+0x1f829]        # 437229 <_IO_stdin_used@@Base+0xa229>
  417a00:	mov    edx,0x1e3
  417a05:	call   405100 <__assert_fail@plt>
  417a0a:	mov    rax,QWORD PTR [r13+0x8]
  417a0e:	lea    rdx,[rip+0x2d38b]        # 444da0 <_IO_stdin_used@@Base+0x17da0>
  417a15:	mov    r9,QWORD PTR [rax+0x8]
  417a19:	push   QWORD PTR [rsp]
  417a1c:	push   QWORD PTR [r13+0x48]
  417a20:	push   r9
  417a22:	push   QWORD PTR [rax]
  417a24:	mov    r8,QWORD PTR [r13+0x88]
  417a2b:	jmp    4176c8 <__flatcc_fb_gen_c_json_parser@@Base+0x2498>
  417a30:	mov    rdi,QWORD PTR [rbp+0x0]
  417a34:	lea    rdx,[rip+0x2ddcf]        # 44580a <_IO_stdin_used@@Base+0x1880a>
  417a3b:	mov    esi,0x1
  417a40:	xor    eax,eax
  417a42:	call   405200 <__fprintf_chk@plt>
  417a47:	mov    rcx,QWORD PTR [rsp+0x8]
  417a4c:	mov    rdi,QWORD PTR [rbp+0x0]
  417a50:	lea    rdx,[rip+0x2cf81]        # 4449d8 <_IO_stdin_used@@Base+0x179d8>
  417a57:	xor    eax,eax
  417a59:	mov    esi,0x1
  417a5e:	mov    r8,rcx
  417a61:	call   405200 <__fprintf_chk@plt>
  417a66:	test   r15,r15
  417a69:	je     41729e <__flatcc_fb_gen_c_json_parser@@Base+0x206e>
  417a6f:	jmp    417296 <__flatcc_fb_gen_c_json_parser@@Base+0x2066>
  417a74:	mov    rax,QWORD PTR [rip+0x3956d]        # 450fe8 <stderr@GLIBC_2.2.5>
  417a7b:	lea    rcx,[rip+0x2c8ee]        # 444370 <_IO_stdin_used@@Base+0x17370>
  417a82:	lea    rdx,[rip+0x1e758]        # 4361e1 <_IO_stdin_used@@Base+0x91e1>
  417a89:	lea    r9,[rip+0x2cea8]        # 444938 <_IO_stdin_used@@Base+0x17938>
  417a90:	mov    esi,0x1
  417a95:	mov    r8d,0x169
  417a9b:	mov    rdi,QWORD PTR [rax]
  417a9e:	xor    eax,eax
  417aa0:	call   405200 <__fprintf_chk@plt>
  417aa5:	lea    rcx,[rip+0x2df54]        # 445a00 <_IO_stdin_used@@Base+0x18a00>
  417aac:	lea    rsi,[rip+0x2c8bd]        # 444370 <_IO_stdin_used@@Base+0x17370>
  417ab3:	lea    rdi,[rip+0x1f76f]        # 437229 <_IO_stdin_used@@Base+0xa229>
  417aba:	mov    edx,0x169
  417abf:	call   405100 <__assert_fail@plt>
  417ac4:	call   4050d0 <__stack_chk_fail@plt>
  417ac9:	nop    DWORD PTR [rax+0x0]

0000000000417ad0 <__flatcc_fb_gen_c_json_printer@@Base>:
  417ad0:	push   r15
  417ad2:	push   r14
  417ad4:	lea    rdx,[rip+0x2d68d]        # 445168 <_IO_stdin_used@@Base+0x18168>
  417adb:	push   r13
  417add:	push   r12
  417adf:	mov    esi,0x1
  417ae4:	push   rbp
  417ae5:	push   rbx
  417ae6:	mov    rbx,rdi
  417ae9:	sub    rsp,0xf8
  417af0:	mov    rax,QWORD PTR fs:0x28
  417af9:	mov    QWORD PTR [rsp+0xe8],rax
  417b01:	xor    eax,eax
  417b03:	mov    rax,QWORD PTR [rdi+0xd8]
  417b0a:	mov    rdi,QWORD PTR [rdi+0xd0]
  417b11:	mov    rcx,QWORD PTR [rax+0x118]
  417b18:	xor    eax,eax
  417b1a:	mov    r8,rcx
  417b1d:	call   405200 <__fprintf_chk@plt>
  417b22:	mov    rdi,QWORD PTR [rbx+0xd0]
  417b29:	lea    rdx,[rip+0x18208]        # 42fd38 <_IO_stdin_used@@Base+0x2d38>
  417b30:	mov    esi,0x1
  417b35:	xor    eax,eax
  417b37:	call   405200 <__fprintf_chk@plt>
  417b3c:	mov    rdi,QWORD PTR [rbx+0xd0]
  417b43:	lea    rdx,[rip+0x2d656]        # 4451a0 <_IO_stdin_used@@Base+0x181a0>
  417b4a:	mov    esi,0x1
  417b4f:	xor    eax,eax
  417b51:	call   405200 <__fprintf_chk@plt>
  417b56:	lea    rsi,[rip+0x16e0f]        # 42e96c <_IO_stdin_used@@Base+0x196c>
  417b5d:	lea    rdx,[rip+0x2dcef]        # 445853 <_IO_stdin_used@@Base+0x18853>
  417b64:	mov    rdi,rbx
  417b67:	call   4070a0 <__flatcc_fb_gen_c_includes@@Base>
  417b6c:	mov    rax,QWORD PTR [rbx+0xe0]
  417b73:	mov    rdi,QWORD PTR [rbx+0xd0]
  417b7a:	mov    esi,DWORD PTR [rax+0xac]
  417b80:	test   esi,esi
  417b82:	je     417b9e <__flatcc_fb_gen_c_json_printer@@Base+0xce>
  417b84:	lea    rdx,[rip+0x182c5]        # 42fe50 <_IO_stdin_used@@Base+0x2e50>
  417b8b:	mov    esi,0x1
  417b90:	xor    eax,eax
  417b92:	call   405200 <__fprintf_chk@plt>
  417b97:	mov    rdi,QWORD PTR [rbx+0xd0]
  417b9e:	lea    rdx,[rip+0x2dc68]        # 44580d <_IO_stdin_used@@Base+0x1880d>
  417ba5:	mov    esi,0x1
  417baa:	xor    eax,eax
  417bac:	mov    rbp,rsp
  417baf:	call   405200 <__fprintf_chk@plt>
  417bb4:	mov    rdx,QWORD PTR [rbx+0xd8]
  417bbb:	xor    eax,eax
  417bbd:	mov    ecx,0x1d
  417bc2:	mov    rdi,rsp
  417bc5:	mov    rsi,QWORD PTR [rdx+0x58]
  417bc9:	rep stos QWORD PTR es:[rdi],rax
  417bcc:	test   rsi,rsi
  417bcf:	je     417bdc <__flatcc_fb_gen_c_json_printer@@Base+0x10c>
  417bd1:	cmp    WORD PTR [rsi+0x10],0x1
  417bd6:	jbe    417fe9 <__flatcc_fb_gen_c_json_printer@@Base+0x519>
  417bdc:	mov    r12,QWORD PTR [rdx+0x40]
  417be0:	lea    r13,[rip+0x2d8f1]        # 4454d8 <_IO_stdin_used@@Base+0x184d8>
  417be7:	test   r12,r12
  417bea:	jne    417c3d <__flatcc_fb_gen_c_json_printer@@Base+0x16d>
  417bec:	jmp    417c7f <__flatcc_fb_gen_c_json_printer@@Base+0x1af>
  417bf1:	nop    DWORD PTR [rax+0x0]
  417bf8:	jb     417f10 <__flatcc_fb_gen_c_json_printer@@Base+0x440>
  417bfe:	cmp    ax,0x4
  417c02:	jne    417c34 <__flatcc_fb_gen_c_json_printer@@Base+0x164>
  417c04:	mov    rdi,QWORD PTR [r12+0x18]
  417c09:	mov    rdx,rbp
  417c0c:	mov    rsi,r12
  417c0f:	call   407300 <__flatcc_fb_scoped_symbol_name@@Base>
  417c14:	mov    rdi,QWORD PTR [rbx+0xd0]
  417c1b:	lea    rdx,[rip+0x2d7ee]        # 445410 <_IO_stdin_used@@Base+0x18410>
  417c22:	mov    r8,rbp
  417c25:	mov    rcx,rbp
  417c28:	mov    esi,0x1
  417c2d:	xor    eax,eax
  417c2f:	call   405200 <__fprintf_chk@plt>
  417c34:	mov    r12,QWORD PTR [r12]
  417c38:	test   r12,r12
  417c3b:	je     417c7f <__flatcc_fb_gen_c_json_printer@@Base+0x1af>
  417c3d:	movzx  eax,WORD PTR [r12+0x10]
  417c43:	cmp    ax,0x1
  417c47:	jne    417bf8 <__flatcc_fb_gen_c_json_printer@@Base+0x128>
  417c49:	mov    rdi,QWORD PTR [r12+0x18]
  417c4e:	mov    rsi,r12
  417c51:	mov    rdx,rbp
  417c54:	call   407300 <__flatcc_fb_scoped_symbol_name@@Base>
  417c59:	mov    rdi,QWORD PTR [rbx+0xd0]
  417c60:	lea    rdx,[rip+0x2d8e1]        # 445548 <_IO_stdin_used@@Base+0x18548>
  417c67:	xor    eax,eax
  417c69:	mov    rcx,rbp
  417c6c:	mov    esi,0x1
  417c71:	call   405200 <__fprintf_chk@plt>
  417c76:	mov    r12,QWORD PTR [r12]
  417c7a:	test   r12,r12
  417c7d:	jne    417c3d <__flatcc_fb_gen_c_json_printer@@Base+0x16d>
  417c7f:	mov    rdi,QWORD PTR [rbx+0xd0]
  417c86:	lea    rdx,[rip+0x2db80]        # 44580d <_IO_stdin_used@@Base+0x1880d>
  417c8d:	xor    eax,eax
  417c8f:	mov    esi,0x1
  417c94:	call   405200 <__fprintf_chk@plt>
  417c99:	mov    rax,QWORD PTR [rbx+0xd8]
  417ca0:	mov    r12,QWORD PTR [rax+0x40]
  417ca4:	test   r12,r12
  417ca7:	jne    417cb9 <__flatcc_fb_gen_c_json_printer@@Base+0x1e9>
  417ca9:	jmp    417e7d <__flatcc_fb_gen_c_json_printer@@Base+0x3ad>
  417cae:	xchg   ax,ax
  417cb0:	mov    r12,QWORD PTR [r12]
  417cb4:	test   r12,r12
  417cb7:	je     417cd6 <__flatcc_fb_gen_c_json_printer@@Base+0x206>
  417cb9:	cmp    WORD PTR [r12+0x10],0x3
  417cc0:	jne    417cb0 <__flatcc_fb_gen_c_json_printer@@Base+0x1e0>
  417cc2:	mov    rsi,r12
  417cc5:	mov    rdi,rbx
  417cc8:	call   416990 <__flatcc_fb_gen_c_json_parser@@Base+0x1760>
  417ccd:	mov    r12,QWORD PTR [r12]
  417cd1:	test   r12,r12
  417cd4:	jne    417cb9 <__flatcc_fb_gen_c_json_printer@@Base+0x1e9>
  417cd6:	mov    rax,QWORD PTR [rbx+0xd8]
  417cdd:	mov    r14,QWORD PTR [rax+0x40]
  417ce1:	test   r14,r14
  417ce4:	je     417e7d <__flatcc_fb_gen_c_json_printer@@Base+0x3ad>
  417cea:	lea    r15,[rbx+0xd0]
  417cf1:	lea    r12,[rip+0x2d968]        # 445660 <_IO_stdin_used@@Base+0x18660>
  417cf8:	jmp    417d0c <__flatcc_fb_gen_c_json_printer@@Base+0x23c>
  417cfa:	nop    WORD PTR [rax+rax*1+0x0]
  417d00:	mov    r14,QWORD PTR [r14]
  417d03:	test   r14,r14
  417d06:	je     417df2 <__flatcc_fb_gen_c_json_printer@@Base+0x322>
  417d0c:	cmp    WORD PTR [r14+0x10],0x4
  417d12:	jne    417d00 <__flatcc_fb_gen_c_json_printer@@Base+0x230>
  417d14:	xor    eax,eax
  417d16:	mov    ecx,0x1d
  417d1b:	mov    rdi,rbp
  417d1e:	rep stos QWORD PTR es:[rdi],rax
  417d21:	mov    rdx,rbp
  417d24:	mov    rsi,r14
  417d27:	mov    rdi,QWORD PTR [r14+0x18]
  417d2b:	call   407300 <__flatcc_fb_scoped_symbol_name@@Base>
  417d30:	mov    rdi,QWORD PTR [rbx+0xd0]
  417d37:	lea    rdx,[rip+0x2d85a]        # 445598 <_IO_stdin_used@@Base+0x18598>
  417d3e:	xor    eax,eax
  417d40:	mov    rcx,rbp
  417d43:	mov    esi,0x1
  417d48:	call   405200 <__fprintf_chk@plt>
  417d4d:	mov    r13,QWORD PTR [r14+0x28]
  417d51:	test   r13,r13
  417d54:	jne    417d69 <__flatcc_fb_gen_c_json_printer@@Base+0x299>
  417d56:	jmp    417da7 <__flatcc_fb_gen_c_json_printer@@Base+0x2d7>
  417d58:	nop    DWORD PTR [rax+rax*1+0x0]
  417d60:	mov    r13,QWORD PTR [r13+0x0]
  417d64:	test   r13,r13
  417d67:	je     417da7 <__flatcc_fb_gen_c_json_printer@@Base+0x2d7>
  417d69:	cmp    WORD PTR [r13+0x28],0x0
  417d6f:	je     417d60 <__flatcc_fb_gen_c_json_printer@@Base+0x290>
  417d71:	mov    rax,QWORD PTR [r13+0x8]
  417d75:	sub    rsp,0x8
  417d79:	mov    rcx,QWORD PTR [r13+0x48]
  417d7d:	mov    rdi,QWORD PTR [rbx+0xd0]
  417d84:	mov    rdx,r12
  417d87:	mov    esi,0x1
  417d8c:	mov    r8,QWORD PTR [rax+0x8]
  417d90:	mov    r9,QWORD PTR [rax]
  417d93:	xor    eax,eax
  417d95:	push   r8
  417d97:	call   405200 <__fprintf_chk@plt>
  417d9c:	mov    r13,QWORD PTR [r13+0x0]
  417da0:	pop    rdx
  417da1:	pop    rcx
  417da2:	test   r13,r13
  417da5:	jne    417d69 <__flatcc_fb_gen_c_json_printer@@Base+0x299>
  417da7:	mov    rdi,QWORD PTR [rbx+0xd0]
  417dae:	lea    rdx,[rip+0x2d85b]        # 445610 <_IO_stdin_used@@Base+0x18610>
  417db5:	mov    esi,0x1
  417dba:	xor    eax,eax
  417dbc:	call   405200 <__fprintf_chk@plt>
  417dc1:	mov    rdi,QWORD PTR [rbx+0xd0]
  417dc8:	lea    rdx,[rip+0x2da36]        # 445805 <_IO_stdin_used@@Base+0x18805>
  417dcf:	mov    esi,0x1
  417dd4:	xor    eax,eax
  417dd6:	call   405200 <__fprintf_chk@plt>
  417ddb:	mov    rsi,r14
  417dde:	mov    rdi,r15
  417de1:	call   416390 <__flatcc_fb_gen_c_json_parser@@Base+0x1160>
  417de6:	mov    r14,QWORD PTR [r14]
  417de9:	test   r14,r14
  417dec:	jne    417d0c <__flatcc_fb_gen_c_json_printer@@Base+0x23c>
  417df2:	mov    rax,QWORD PTR [rbx+0xd8]
  417df9:	mov    r12,QWORD PTR [rax+0x40]
  417dfd:	test   r12,r12
  417e00:	je     417e7d <__flatcc_fb_gen_c_json_printer@@Base+0x3ad>
  417e02:	lea    r13,[rbx+0xd0]
  417e09:	jmp    417e19 <__flatcc_fb_gen_c_json_printer@@Base+0x349>
  417e0b:	nop    DWORD PTR [rax+rax*1+0x0]
  417e10:	mov    r12,QWORD PTR [r12]
  417e14:	test   r12,r12
  417e17:	je     417e36 <__flatcc_fb_gen_c_json_printer@@Base+0x366>
  417e19:	cmp    WORD PTR [r12+0x10],0x1
  417e20:	jne    417e10 <__flatcc_fb_gen_c_json_printer@@Base+0x340>
  417e22:	mov    rsi,r12
  417e25:	mov    rdi,r13
  417e28:	call   4165f0 <__flatcc_fb_gen_c_json_parser@@Base+0x13c0>
  417e2d:	mov    r12,QWORD PTR [r12]
  417e31:	test   r12,r12
  417e34:	jne    417e19 <__flatcc_fb_gen_c_json_printer@@Base+0x349>
  417e36:	mov    rax,QWORD PTR [rbx+0xd8]
  417e3d:	mov    r12,QWORD PTR [rax+0x40]
  417e41:	test   r12,r12
  417e44:	je     417e7d <__flatcc_fb_gen_c_json_printer@@Base+0x3ad>
  417e46:	lea    r13,[rbx+0xd0]
  417e4d:	jmp    417e59 <__flatcc_fb_gen_c_json_printer@@Base+0x389>
  417e4f:	nop
  417e50:	mov    r12,QWORD PTR [r12]
  417e54:	test   r12,r12
  417e57:	je     417e76 <__flatcc_fb_gen_c_json_printer@@Base+0x3a6>
  417e59:	cmp    WORD PTR [r12+0x10],0x0
  417e60:	jne    417e50 <__flatcc_fb_gen_c_json_printer@@Base+0x380>
  417e62:	mov    rsi,r12
  417e65:	mov    rdi,r13
  417e68:	call   4170a0 <__flatcc_fb_gen_c_json_parser@@Base+0x1e70>
  417e6d:	mov    r12,QWORD PTR [r12]
  417e71:	test   r12,r12
  417e74:	jne    417e59 <__flatcc_fb_gen_c_json_printer@@Base+0x389>
  417e76:	mov    rax,QWORD PTR [rbx+0xd8]
  417e7d:	mov    rsi,QWORD PTR [rax+0x58]
  417e81:	test   rsi,rsi
  417e84:	je     417e91 <__flatcc_fb_gen_c_json_printer@@Base+0x3c1>
  417e86:	cmp    WORD PTR [rsi+0x10],0x1
  417e8b:	jbe    417f40 <__flatcc_fb_gen_c_json_printer@@Base+0x470>
  417e91:	mov    rax,QWORD PTR [rbx+0xe0]
  417e98:	mov    rdi,QWORD PTR [rbx+0xd0]
  417e9f:	mov    eax,DWORD PTR [rax+0xac]
  417ea5:	test   eax,eax
  417ea7:	je     417ec3 <__flatcc_fb_gen_c_json_printer@@Base+0x3f3>
  417ea9:	lea    rdx,[rip+0x1de50]        # 435d00 <_IO_stdin_used@@Base+0x8d00>
  417eb0:	mov    esi,0x1
  417eb5:	xor    eax,eax
  417eb7:	call   405200 <__fprintf_chk@plt>
  417ebc:	mov    rdi,QWORD PTR [rbx+0xd0]
  417ec3:	mov    rax,QWORD PTR [rbx+0xd8]
  417eca:	lea    rdx,[rip+0x2d8f7]        # 4457c8 <_IO_stdin_used@@Base+0x187c8>
  417ed1:	mov    esi,0x1
  417ed6:	mov    rcx,QWORD PTR [rax+0x118]
  417edd:	xor    eax,eax
  417edf:	call   405200 <__fprintf_chk@plt>
  417ee4:	xor    eax,eax
  417ee6:	mov    rdx,QWORD PTR [rsp+0xe8]
  417eee:	xor    rdx,QWORD PTR fs:0x28
  417ef7:	jne    41805b <__flatcc_fb_gen_c_json_printer@@Base+0x58b>
  417efd:	add    rsp,0xf8
  417f04:	pop    rbx
  417f05:	pop    rbp
  417f06:	pop    r12
  417f08:	pop    r13
  417f0a:	pop    r14
  417f0c:	pop    r15
  417f0e:	ret    
  417f0f:	nop
  417f10:	mov    rdi,QWORD PTR [r12+0x18]
  417f15:	mov    rdx,rbp
  417f18:	mov    rsi,r12
  417f1b:	call   407300 <__flatcc_fb_scoped_symbol_name@@Base>
  417f20:	mov    rdi,QWORD PTR [rbx+0xd0]
  417f27:	mov    rcx,rbp
  417f2a:	mov    rdx,r13
  417f2d:	mov    esi,0x1
  417f32:	xor    eax,eax
  417f34:	call   405200 <__fprintf_chk@plt>
  417f39:	jmp    417c34 <__flatcc_fb_gen_c_json_printer@@Base+0x164>
  417f3e:	xchg   ax,ax
  417f40:	xor    eax,eax
  417f42:	mov    ecx,0x1d
  417f47:	mov    rdi,rbp
  417f4a:	rep stos QWORD PTR es:[rdi],rax
  417f4d:	mov    rdx,rbp
  417f50:	mov    rdi,QWORD PTR [rsi+0x18]
  417f54:	call   407300 <__flatcc_fb_scoped_symbol_name@@Base>
  417f59:	mov    rax,QWORD PTR [rbx+0xd8]
  417f60:	mov    rdi,QWORD PTR [rbx+0xd0]
  417f67:	lea    rdx,[rip+0x2d74a]        # 4456b8 <_IO_stdin_used@@Base+0x186b8>
  417f6e:	mov    esi,0x1
  417f73:	mov    rcx,QWORD PTR [rax+0x110]
  417f7a:	xor    eax,eax
  417f7c:	call   405200 <__fprintf_chk@plt>
  417f81:	mov    rdi,QWORD PTR [rbx+0xd0]
  417f88:	lea    rdx,[rip+0x2d781]        # 445710 <_IO_stdin_used@@Base+0x18710>
  417f8f:	xor    eax,eax
  417f91:	mov    rcx,rbp
  417f94:	mov    esi,0x1
  417f99:	call   405200 <__fprintf_chk@plt>
  417f9e:	mov    rax,QWORD PTR [rbx+0xd8]
  417fa5:	cmp    WORD PTR [rax+0x20],0x2
  417faa:	je     418035 <__flatcc_fb_gen_c_json_printer@@Base+0x565>
  417fb0:	mov    rdi,QWORD PTR [rbx+0xd0]
  417fb7:	lea    rdx,[rip+0x2d8af]        # 44586d <_IO_stdin_used@@Base+0x1886d>
  417fbe:	mov    esi,0x1
  417fc3:	xor    eax,eax
  417fc5:	call   405200 <__fprintf_chk@plt>
  417fca:	mov    rdi,QWORD PTR [rbx+0xd0]
  417fd1:	lea    rdx,[rip+0x2d833]        # 44580b <_IO_stdin_used@@Base+0x1880b>
  417fd8:	mov    esi,0x1
  417fdd:	xor    eax,eax
  417fdf:	call   405200 <__fprintf_chk@plt>
  417fe4:	jmp    417e91 <__flatcc_fb_gen_c_json_printer@@Base+0x3c1>
  417fe9:	mov    rdi,QWORD PTR [rbx+0xd0]
  417ff0:	lea    rdx,[rip+0x2d1d9]        # 4451d0 <_IO_stdin_used@@Base+0x181d0>
  417ff7:	mov    esi,0x1
  417ffc:	call   405200 <__fprintf_chk@plt>
  418001:	mov    rax,QWORD PTR [rbx+0xd8]
  418008:	mov    rdi,QWORD PTR [rbx+0xd0]
  41800f:	lea    rdx,[rip+0x2d3a2]        # 4453b8 <_IO_stdin_used@@Base+0x183b8>
  418016:	mov    esi,0x1
  41801b:	mov    rcx,QWORD PTR [rax+0x110]
  418022:	xor    eax,eax
  418024:	call   405200 <__fprintf_chk@plt>
  418029:	mov    rdx,QWORD PTR [rbx+0xd8]
  418030:	jmp    417bdc <__flatcc_fb_gen_c_json_printer@@Base+0x10c>
  418035:	mov    ecx,DWORD PTR [rax+0x18]
  418038:	mov    r8,QWORD PTR [rax+0x10]
  41803c:	lea    rdx,[rip+0x2d820]        # 445863 <_IO_stdin_used@@Base+0x18863>
  418043:	mov    rdi,QWORD PTR [rbx+0xd0]
  41804a:	mov    esi,0x1
  41804f:	xor    eax,eax
  418051:	call   405200 <__fprintf_chk@plt>
  418056:	jmp    417fca <__flatcc_fb_gen_c_json_printer@@Base+0x4fa>
  41805b:	call   4050d0 <__stack_chk_fail@plt>
  418060:	mov    rdx,rdi
  418063:	lea    rdi,[rsi+0x8]
  418067:	lea    rsi,[rip+0xe2]        # 418150 <__flatcc_fb_gen_c_json_printer@@Base+0x680>
  41806e:	jmp    41b360 <fb_symbol_table_visit@@Base>
  418073:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  41807e:	xchg   ax,ax
  418080:	mov    rdx,rdi
  418083:	lea    rdi,[rsi+0x8]
  418087:	lea    rsi,[rip+0x12]        # 4180a0 <__flatcc_fb_gen_c_json_printer@@Base+0x5d0>
  41808e:	jmp    41b360 <fb_symbol_table_visit@@Base>
  418093:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  41809e:	xchg   ax,ax
  4180a0:	cmp    WORD PTR [rsi+0x10],0x4
  4180a5:	jbe    4180b0 <__flatcc_fb_gen_c_json_printer@@Base+0x5e0>
  4180a7:	ret    
  4180a8:	nop    DWORD PTR [rax+rax*1+0x0]
  4180b0:	push   rbp
  4180b1:	push   rbx
  4180b2:	mov    rbp,rsi
  4180b5:	mov    rbx,rdi
  4180b8:	sub    rsp,0x8
  4180bc:	mov    rax,QWORD PTR [rdi+0x48]
  4180c0:	mov    rsi,QWORD PTR [rsi+0x20]
  4180c4:	lea    rdi,[rax+0x128]
  4180cb:	call   41aba0 <ptr_set_find_item@@Base>
  4180d0:	test   rax,rax
  4180d3:	je     418131 <__flatcc_fb_gen_c_json_printer@@Base+0x661>
  4180d5:	mov    eax,DWORD PTR [rbx]
  4180d7:	xor    edx,edx
  4180d9:	test   eax,eax
  4180db:	je     418105 <__flatcc_fb_gen_c_json_printer@@Base+0x635>
  4180dd:	mov    rax,QWORD PTR [rbp+0x18]
  4180e1:	xor    edx,edx
  4180e3:	mov    rax,QWORD PTR [rax]
  4180e6:	test   rax,rax
  4180e9:	je     418105 <__flatcc_fb_gen_c_json_printer@@Base+0x635>
  4180eb:	nop    DWORD PTR [rax+rax*1+0x0]
  4180f0:	mov    rcx,QWORD PTR [rax+0x8]
  4180f4:	mov    rax,QWORD PTR [rax]
  4180f7:	mov    rcx,QWORD PTR [rcx+0x8]
  4180fb:	test   rax,rax
  4180fe:	lea    rdx,[rdx+rcx*1+0x1]
  418103:	jne    4180f0 <__flatcc_fb_gen_c_json_printer@@Base+0x620>
  418105:	mov    rcx,QWORD PTR [rbp+0x8]
  418109:	mov    rax,QWORD PTR [rbx+0x10]
  41810d:	add    rax,QWORD PTR [rcx+0x8]
  418111:	lea    rax,[rdx+rax*1+0x1]
  418116:	mov    QWORD PTR [rbx+0x10],rax
  41811a:	movzx  eax,WORD PTR [rbp+0x10]
  41811e:	cmp    ax,0x1
  418122:	jbe    418140 <__flatcc_fb_gen_c_json_printer@@Base+0x670>
  418124:	sub    eax,0x3
  418127:	cmp    ax,0x1
  41812b:	ja     418131 <__flatcc_fb_gen_c_json_printer@@Base+0x661>
  41812d:	add    DWORD PTR [rbx+0x8],0x1
  418131:	add    rsp,0x8
  418135:	pop    rbx
  418136:	pop    rbp
  418137:	ret    
  418138:	nop    DWORD PTR [rax+rax*1+0x0]
  418140:	add    DWORD PTR [rbx+0x4],0x1
  418144:	jmp    418131 <__flatcc_fb_gen_c_json_printer@@Base+0x661>
  418146:	nop    WORD PTR cs:[rax+rax*1+0x0]
  418150:	cmp    WORD PTR [rsi+0x10],0x4
  418155:	jbe    418160 <__flatcc_fb_gen_c_json_printer@@Base+0x690>
  418157:	ret    
  418158:	nop    DWORD PTR [rax+rax*1+0x0]
  418160:	push   r14
  418162:	push   r13
  418164:	mov    r13,rsi
  418167:	push   r12
  418169:	push   rbp
  41816a:	mov    r12,rdi
  41816d:	push   rbx
  41816e:	mov    rax,QWORD PTR [rdi+0x48]
  418172:	mov    rsi,QWORD PTR [rsi+0x20]
  418176:	lea    rdi,[rax+0x128]
  41817d:	call   41aba0 <ptr_set_find_item@@Base>
  418182:	test   rax,rax
  418185:	je     41822a <__flatcc_fb_gen_c_json_printer@@Base+0x75a>
  41818b:	mov    eax,DWORD PTR [r12]
  41818f:	mov    r14,QWORD PTR [r12+0x40]
  418194:	test   eax,eax
  418196:	mov    rcx,r14
  418199:	je     4181d9 <__flatcc_fb_gen_c_json_printer@@Base+0x709>
  41819b:	mov    rax,QWORD PTR [r13+0x18]
  41819f:	mov    rcx,r14
  4181a2:	mov    rbp,QWORD PTR [rax]
  4181a5:	test   rbp,rbp
  4181a8:	je     4181d9 <__flatcc_fb_gen_c_json_printer@@Base+0x709>
  4181aa:	nop    WORD PTR [rax+rax*1+0x0]
  4181b0:	mov    rax,QWORD PTR [rbp+0x8]
  4181b4:	mov    rdi,rcx
  4181b7:	movsxd rbx,DWORD PTR [rax+0x8]
  4181bb:	mov    rsi,QWORD PTR [rax]
  4181be:	mov    rdx,rbx
  4181c1:	call   405170 <memcpy@plt>
  4181c6:	add    rbx,rax
  4181c9:	mov    BYTE PTR [rbx],0x2e
  4181cc:	mov    rbp,QWORD PTR [rbp+0x0]
  4181d0:	lea    rcx,[rbx+0x1]
  4181d4:	test   rbp,rbp
  4181d7:	jne    4181b0 <__flatcc_fb_gen_c_json_printer@@Base+0x6e0>
  4181d9:	mov    rax,QWORD PTR [r13+0x8]
  4181dd:	mov    rdi,rcx
  4181e0:	movsxd rbx,DWORD PTR [rax+0x8]
  4181e4:	mov    rsi,QWORD PTR [rax]
  4181e7:	mov    rdx,rbx
  4181ea:	call   405170 <memcpy@plt>
  4181ef:	mov    rcx,rax
  4181f2:	add    rcx,rbx
  4181f5:	mov    BYTE PTR [rcx],0x0
  4181f8:	movzx  eax,WORD PTR [r13+0x10]
  4181fd:	add    rcx,0x1
  418201:	mov    QWORD PTR [r12+0x40],rcx
  418206:	cmp    ax,0x1
  41820a:	jbe    418238 <__flatcc_fb_gen_c_json_printer@@Base+0x768>
  41820c:	sub    eax,0x3
  41820f:	cmp    ax,0x1
  418213:	ja     41822a <__flatcc_fb_gen_c_json_printer@@Base+0x75a>
  418215:	mov    rax,QWORD PTR [r12+0x38]
  41821a:	mov    QWORD PTR [rax],r13
  41821d:	mov    QWORD PTR [rax+0x8],r14
  418221:	add    rax,0x10
  418225:	mov    QWORD PTR [r12+0x38],rax
  41822a:	pop    rbx
  41822b:	pop    rbp
  41822c:	pop    r12
  41822e:	pop    r13
  418230:	pop    r14
  418232:	ret    
  418233:	nop    DWORD PTR [rax+rax*1+0x0]
  418238:	mov    rax,QWORD PTR [r12+0x30]
  41823d:	mov    QWORD PTR [rax],r13
  418240:	mov    QWORD PTR [rax+0x8],r14
  418244:	add    rax,0x10
  418248:	mov    QWORD PTR [r12+0x30],rax
  41824d:	jmp    41822a <__flatcc_fb_gen_c_json_printer@@Base+0x75a>
  41824f:	nop
  418250:	push   rbx
  418251:	mov    rbx,rdi
  418254:	mov    rdi,QWORD PTR [rdi+0x18]
  418258:	test   rdi,rdi
  41825b:	je     418262 <__flatcc_fb_gen_c_json_printer@@Base+0x792>
  41825d:	call   405040 <free@plt>
  418262:	mov    rdi,QWORD PTR [rbx+0x20]
  418266:	test   rdi,rdi
  418269:	je     418270 <__flatcc_fb_gen_c_json_printer@@Base+0x7a0>
  41826b:	call   405040 <free@plt>
  418270:	mov    rdi,QWORD PTR [rbx+0x28]
  418274:	test   rdi,rdi
  418277:	je     41827e <__flatcc_fb_gen_c_json_printer@@Base+0x7ae>
  418279:	call   405040 <free@plt>
  41827e:	mov    rdi,rbx
  418281:	mov    ecx,0xa
  418286:	xor    eax,eax
  418288:	rep stos QWORD PTR es:[rdi],rax
  41828b:	pop    rbx
  41828c:	ret    
  41828d:	nop    DWORD PTR [rax]
  418290:	push   rbp
  418291:	push   rbx
  418292:	movsxd rsi,esi
  418295:	lea    rcx,[rip+0x44]        # 4182e0 <__flatcc_fb_gen_c_json_printer@@Base+0x810>
  41829c:	mov    rbp,rsi
  41829f:	mov    edx,0x10
  4182a4:	sub    rsp,0x8
  4182a8:	mov    rbx,rdi
  4182ab:	call   405080 <qsort@plt>
  4182b0:	test   ebp,ebp
  4182b2:	jle    4182d6 <__flatcc_fb_gen_c_json_printer@@Base+0x806>
  4182b4:	mov    rdi,rbx
  4182b7:	xor    eax,eax
  4182b9:	nop    DWORD PTR [rax+0x0]
  4182c0:	mov    rdx,QWORD PTR [rdi]
  4182c3:	add    rdi,0x10
  4182c7:	mov    QWORD PTR [rdx+0xc8],rax
  4182ce:	add    rax,0x1
  4182d2:	cmp    ebp,eax
  4182d4:	jg     4182c0 <__flatcc_fb_gen_c_json_printer@@Base+0x7f0>
  4182d6:	add    rsp,0x8
  4182da:	pop    rbx
  4182db:	pop    rbp
  4182dc:	ret    
  4182dd:	nop    DWORD PTR [rax]
  4182e0:	mov    rsi,QWORD PTR [rsi+0x8]
  4182e4:	mov    rdi,QWORD PTR [rdi+0x8]
  4182e8:	jmp    405150 <strcmp@plt>
  4182ed:	nop    DWORD PTR [rax]
  4182f0:	push   r13
  4182f2:	push   r12
  4182f4:	push   rbp
  4182f5:	push   rbx
  4182f6:	mov    rbx,rdi
  4182f9:	sub    rsp,0x8
  4182fd:	cmp    WORD PTR [rsp+0x40],0xf
  418303:	ja     418490 <__flatcc_fb_gen_c_json_printer@@Base+0x9c0>
  418309:	movzx  eax,WORD PTR [rsp+0x40]
  41830e:	lea    rdx,[rip+0x2dceb]        # 446000 <_IO_stdin_used@@Base+0x19000>
  418315:	movsxd rax,DWORD PTR [rdx+rax*4]
  418319:	add    rax,rdx
  41831c:	jmp    rax
  41831e:	xchg   ax,ax
  418320:	mov    r13d,0xd
  418326:	mov    r12d,0xe
  41832c:	mov    ebp,0xffffffff
  418331:	nop    DWORD PTR [rax+0x0]
  418338:	mov    esi,0x3
  41833d:	mov    rdi,rbx
  418340:	call   428900 <flatcc_builder_start_table@@Base>
  418345:	test   eax,eax
  418347:	jne    4184c8 <__flatcc_fb_gen_c_json_printer@@Base+0x9f8>
  41834d:	cmp    ebp,0xffffffff
  418350:	je     418374 <__flatcc_fb_gen_c_json_printer@@Base+0x8a4>
  418352:	mov    ecx,0x4
  418357:	mov    edx,0x4
  41835c:	mov    esi,0x2
  418361:	mov    rdi,rbx
  418364:	call   42a1a0 <flatcc_builder_table_add@@Base>
  418369:	test   rax,rax
  41836c:	je     4184c8 <__flatcc_fb_gen_c_json_printer@@Base+0x9f8>
  418372:	mov    DWORD PTR [rax],ebp
  418374:	test   r12b,r12b
  418377:	jne    4184d8 <__flatcc_fb_gen_c_json_printer@@Base+0xa08>
  41837d:	test   r13b,r13b
  418380:	jne    418510 <__flatcc_fb_gen_c_json_printer@@Base+0xa40>
  418386:	lea    rsi,[rip+0x2de17]        # 4461a4 <_IO_stdin_used@@Base+0x191a4>
  41838d:	xor    edx,edx
  41838f:	mov    rdi,rbx
  418392:	call   429240 <flatcc_builder_check_required@@Base>
  418397:	test   eax,eax
  418399:	je     418558 <__flatcc_fb_gen_c_json_printer@@Base+0xa88>
  41839f:	add    rsp,0x8
  4183a3:	mov    rdi,rbx
  4183a6:	pop    rbx
  4183a7:	pop    rbp
  4183a8:	pop    r12
  4183aa:	pop    r13
  4183ac:	jmp    4292c0 <flatcc_builder_end_table@@Base>
  4183b1:	nop    DWORD PTR [rax+0x0]
  4183b8:	mov    rax,QWORD PTR [rsp+0x30]
  4183bd:	movzx  edx,WORD PTR [rax+0x10]
  4183c1:	mov    ebp,DWORD PTR [rax+0xc8]
  4183c7:	cmp    dx,0x3
  4183cb:	je     418550 <__flatcc_fb_gen_c_json_printer@@Base+0xa80>
  4183d1:	ja     4184a0 <__flatcc_fb_gen_c_json_printer@@Base+0x9d0>
  4183d7:	cmp    dx,0x1
  4183db:	ja     4184b3 <__flatcc_fb_gen_c_json_printer@@Base+0x9e3>
  4183e1:	mov    edx,0xf
  4183e6:	jmp    418453 <__flatcc_fb_gen_c_json_printer@@Base+0x983>
  4183e8:	nop    DWORD PTR [rax+rax*1+0x0]
  4183f0:	mov    rax,QWORD PTR [rsp+0x30]
  4183f5:	movzx  edx,WORD PTR [rax+0x10]
  4183f9:	mov    ebp,DWORD PTR [rax+0xc8]
  4183ff:	cmp    dx,0x1
  418403:	jbe    418538 <__flatcc_fb_gen_c_json_printer@@Base+0xa68>
  418409:	cmp    dx,0x3
  41840d:	jne    418495 <__flatcc_fb_gen_c_json_printer@@Base+0x9c5>
  418413:	mov    eax,DWORD PTR [rax+0x48]
  418416:	jmp    418429 <__flatcc_fb_gen_c_json_printer@@Base+0x959>
  418418:	nop    DWORD PTR [rax+rax*1+0x0]
  418420:	mov    eax,DWORD PTR [rsp+0x30]
  418424:	mov    ebp,0xffffffff
  418429:	sub    eax,0x1
  41842c:	cmp    eax,0xa
  41842f:	ja     418577 <__flatcc_fb_gen_c_json_printer@@Base+0xaa7>
  418435:	mov    edx,0xe
  41843a:	lea    rcx,[rip+0x2dbff]        # 446040 <_IO_stdin_used@@Base+0x19040>
  418441:	test   dl,dl
  418443:	movzx  r12d,BYTE PTR [rcx+rax*1]
  418448:	je     418456 <__flatcc_fb_gen_c_json_printer@@Base+0x986>
  41844a:	cmp    dl,0xe
  41844d:	je     418500 <__flatcc_fb_gen_c_json_printer@@Base+0xa30>
  418453:	mov    r12d,edx
  418456:	xor    r13d,r13d
  418459:	jmp    418338 <__flatcc_fb_gen_c_json_printer@@Base+0x868>
  41845e:	xchg   ax,ax
  418460:	xor    r13d,r13d
  418463:	mov    r12d,0xd
  418469:	mov    ebp,0xffffffff
  41846e:	jmp    418338 <__flatcc_fb_gen_c_json_printer@@Base+0x868>
  418473:	nop    DWORD PTR [rax+rax*1+0x0]
  418478:	mov    eax,DWORD PTR [rsp+0x30]
  41847c:	mov    ebp,0xffffffff
  418481:	sub    eax,0x1
  418484:	cmp    eax,0xa
  418487:	ja     418495 <__flatcc_fb_gen_c_json_printer@@Base+0x9c5>
  418489:	xor    edx,edx
  41848b:	jmp    41843a <__flatcc_fb_gen_c_json_printer@@Base+0x96a>
  41848d:	nop    DWORD PTR [rax]
  418490:	mov    ebp,0xffffffff
  418495:	xor    r13d,r13d
  418498:	xor    r12d,r12d
  41849b:	jmp    418338 <__flatcc_fb_gen_c_json_printer@@Base+0x868>
  4184a0:	xor    r13d,r13d
  4184a3:	cmp    dx,0x4
  4184a7:	mov    r12d,0x10
  4184ad:	je     418338 <__flatcc_fb_gen_c_json_printer@@Base+0x868>
  4184b3:	mov    esi,0x3
  4184b8:	mov    rdi,rbx
  4184bb:	call   428900 <flatcc_builder_start_table@@Base>
  4184c0:	test   eax,eax
  4184c2:	je     418386 <__flatcc_fb_gen_c_json_printer@@Base+0x8b6>
  4184c8:	add    rsp,0x8
  4184cc:	xor    eax,eax
  4184ce:	pop    rbx
  4184cf:	pop    rbp
  4184d0:	pop    r12
  4184d2:	pop    r13
  4184d4:	ret    
  4184d5:	nop    DWORD PTR [rax]
  4184d8:	xor    esi,esi
  4184da:	mov    ecx,0x1
  4184df:	mov    edx,0x1
  4184e4:	mov    rdi,rbx
  4184e7:	call   42a1a0 <flatcc_builder_table_add@@Base>
  4184ec:	test   rax,rax
  4184ef:	je     4184c8 <__flatcc_fb_gen_c_json_printer@@Base+0x9f8>
  4184f1:	mov    BYTE PTR [rax],r12b
  4184f4:	jmp    41837d <__flatcc_fb_gen_c_json_printer@@Base+0x8ad>
  4184f9:	nop    DWORD PTR [rax+0x0]
  418500:	mov    r13d,r12d
  418503:	mov    r12d,0xe
  418509:	jmp    418338 <__flatcc_fb_gen_c_json_printer@@Base+0x868>
  41850e:	xchg   ax,ax
  418510:	mov    ecx,0x1
  418515:	mov    edx,0x1
  41851a:	mov    esi,0x1
  41851f:	mov    rdi,rbx
  418522:	call   42a1a0 <flatcc_builder_table_add@@Base>
  418527:	test   rax,rax
  41852a:	je     4184c8 <__flatcc_fb_gen_c_json_printer@@Base+0x9f8>
  41852c:	mov    BYTE PTR [rax],r13b
  41852f:	jmp    418386 <__flatcc_fb_gen_c_json_printer@@Base+0x8b6>
  418534:	nop    DWORD PTR [rax+0x0]
  418538:	mov    r13d,0xf
  41853e:	mov    r12d,0xe
  418544:	jmp    418338 <__flatcc_fb_gen_c_json_printer@@Base+0x868>
  418549:	nop    DWORD PTR [rax+0x0]
  418550:	mov    eax,DWORD PTR [rax+0x48]
  418553:	jmp    418481 <__flatcc_fb_gen_c_json_printer@@Base+0x9b1>
  418558:	lea    rcx,[rip+0x2dc11]        # 446170 <_IO_stdin_used@@Base+0x19170>
  41855f:	lea    rsi,[rip+0x2d5b2]        # 445b18 <_IO_stdin_used@@Base+0x18b18>
  418566:	lea    rdi,[rip+0x2d62b]        # 445b98 <_IO_stdin_used@@Base+0x18b98>
  41856d:	mov    edx,0x17
  418572:	call   405100 <__assert_fail@plt>
  418577:	xor    r13d,r13d
  41857a:	mov    r12d,0xe
  418580:	jmp    418338 <__flatcc_fb_gen_c_json_printer@@Base+0x868>
  418585:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  418590:	push   r15
  418592:	push   r14
  418594:	mov    r10,rcx
  418597:	push   r13
  418599:	push   r12
  41859b:	mov    r15,rdi
  41859e:	push   rbp
  41859f:	push   rbx
  4185a0:	mov    rbx,rdx
  4185a3:	sub    rsp,0xc8
  4185aa:	mov    r14,QWORD PTR [rcx+0x68]
  4185ae:	lea    rdx,[rsp+0x60]
  4185b3:	mov    QWORD PTR [rsp+0x48],rcx
  4185b8:	mov    ecx,0xa
  4185bd:	mov    rax,QWORD PTR fs:0x28
  4185c6:	mov    QWORD PTR [rsp+0xb8],rax
  4185ce:	xor    eax,eax
  4185d0:	mov    rdi,rdx
  4185d3:	xor    eax,eax
  4185d5:	mov    QWORD PTR [rsp+0x50],rdx
  4185da:	rep stos QWORD PTR es:[rdi],rax
  4185dd:	mov    DWORD PTR [rsp+0x60],esi
  4185e1:	lea    rsi,[rip+0xfffffffffffffa98]        # 418080 <__flatcc_fb_gen_c_json_printer@@Base+0x5b0>
  4185e8:	mov    rdi,r14
  4185eb:	mov    QWORD PTR [rsp+0xa8],r10
  4185f3:	call   41c310 <fb_scope_table_visit@@Base>
  4185f8:	movsxd rdi,DWORD PTR [rsp+0x64]
  4185fd:	mov    esi,0x10
  418602:	mov    r12,rdi
  418605:	call   405140 <calloc@plt>
  41860a:	movsxd rdi,DWORD PTR [rsp+0x68]
  41860f:	mov    esi,0x10
  418614:	mov    r13,rax
  418617:	mov    QWORD PTR [rsp+0x78],rax
  41861c:	mov    DWORD PTR [rsp+0x8],edi
  418620:	call   405140 <calloc@plt>
  418625:	mov    rbp,rax
  418628:	mov    QWORD PTR [rsp+0x80],rax
  418630:	mov    rax,QWORD PTR [rsp+0x70]
  418635:	mov    rdi,rax
  418638:	mov    QWORD PTR [rsp+0x10],rax
  41863d:	call   405180 <malloc@plt>
  418642:	test   r13,r13
  418645:	mov    QWORD PTR [rsp+0x88],rax
  41864d:	mov    QWORD PTR [rsp+0x90],r13
  418655:	mov    QWORD PTR [rsp+0x98],rbp
  41865d:	mov    QWORD PTR [rsp+0xa0],rax
  418665:	jne    418670 <__flatcc_fb_gen_c_json_printer@@Base+0xba0>
  418667:	test   r12d,r12d
  41866a:	jg     4188fc <__flatcc_fb_gen_c_json_printer@@Base+0xe2c>
  418670:	test   rbp,rbp
  418673:	jne    418681 <__flatcc_fb_gen_c_json_printer@@Base+0xbb1>
  418675:	mov    ecx,DWORD PTR [rsp+0x8]
  418679:	test   ecx,ecx
  41867b:	jg     4188fc <__flatcc_fb_gen_c_json_printer@@Base+0xe2c>
  418681:	test   rax,rax
  418684:	jne    418692 <__flatcc_fb_gen_c_json_printer@@Base+0xbc2>
  418686:	cmp    QWORD PTR [rsp+0x10],0x0
  41868c:	jne    4188fc <__flatcc_fb_gen_c_json_printer@@Base+0xe2c>
  418692:	mov    rdx,QWORD PTR [rsp+0x50]
  418697:	lea    rsi,[rip+0xfffffffffffff9c2]        # 418060 <__flatcc_fb_gen_c_json_printer@@Base+0x590>
  41869e:	mov    rdi,r14
  4186a1:	call   41c310 <fb_scope_table_visit@@Base>
  4186a6:	mov    esi,DWORD PTR [rsp+0x64]
  4186aa:	mov    rdi,QWORD PTR [rsp+0x78]
  4186af:	call   418290 <__flatcc_fb_gen_c_json_printer@@Base+0x7c0>
  4186b4:	mov    esi,DWORD PTR [rsp+0x68]
  4186b8:	mov    rdi,QWORD PTR [rsp+0x80]
  4186c0:	call   418290 <__flatcc_fb_gen_c_json_printer@@Base+0x7c0>
  4186c5:	movsxd rax,DWORD PTR [rsp+0x64]
  4186ca:	test   eax,eax
  4186cc:	jle    419224 <__flatcc_fb_gen_c_json_printer@@Base+0x1754>
  4186d2:	lea    rdi,[rax*4+0x0]
  4186da:	call   405180 <malloc@plt>
  4186df:	test   rax,rax
  4186e2:	mov    QWORD PTR [rsp+0x28],rax
  4186e7:	je     4188fc <__flatcc_fb_gen_c_json_printer@@Base+0xe2c>
  4186ed:	mov    edx,DWORD PTR [rbx]
  4186ef:	xor    ecx,ecx
  4186f1:	test   edx,edx
  4186f3:	je     4186fa <__flatcc_fb_gen_c_json_printer@@Base+0xc2a>
  4186f5:	mov    ecx,0x2
  4186fa:	lea    rsi,[rip+0x2daa5]        # 4461a6 <_IO_stdin_used@@Base+0x191a6>
  418701:	xor    edx,edx
  418703:	mov    rdi,r15
  418706:	call   427c90 <flatcc_builder_start_buffer@@Base>
  41870b:	test   eax,eax
  41870d:	jne    41871c <__flatcc_fb_gen_c_json_printer@@Base+0xc4c>
  41870f:	mov    esi,0x5
  418714:	mov    rdi,r15
  418717:	call   428900 <flatcc_builder_start_table@@Base>
  41871c:	mov    rax,QWORD PTR [rsp+0x48]
  418721:	cmp    WORD PTR [rax+0x20],0x2
  418726:	je     419286 <__flatcc_fb_gen_c_json_printer@@Base+0x17b6>
  41872c:	mov    rax,QWORD PTR [rsp+0x48]
  418731:	cmp    WORD PTR [rax+0x38],0x2
  418736:	je     41924f <__flatcc_fb_gen_c_json_printer@@Base+0x177f>
  41873c:	mov    eax,DWORD PTR [rsp+0x64]
  418740:	mov    ecx,eax
  418742:	mov    DWORD PTR [rsp+0x5c],eax
  418746:	mov    rax,QWORD PTR [rsp+0x78]
  41874b:	test   ecx,ecx
  41874d:	jle    418cf6 <__flatcc_fb_gen_c_json_printer@@Base+0x1226>
  418753:	add    rax,0x8
  418757:	mov    rcx,QWORD PTR [rsp+0x28]
  41875c:	mov    r14,r15
  41875f:	mov    QWORD PTR [rsp+0x30],rax
  418764:	mov    eax,DWORD PTR [rsp+0x5c]
  418768:	mov    QWORD PTR [rsp+0x38],rcx
  41876d:	sub    eax,0x1
  418770:	lea    rax,[rcx+rax*4+0x4]
  418775:	mov    QWORD PTR [rsp+0x40],rax
  41877a:	nop    WORD PTR [rax+rax*1+0x0]
  418780:	mov    rbx,QWORD PTR [rsp+0x30]
  418785:	mov    esi,0x5
  41878a:	mov    rdi,r14
  41878d:	mov    rax,QWORD PTR [rbx-0x8]
  418791:	mov    QWORD PTR [rsp+0x10],rax
  418796:	call   428900 <flatcc_builder_start_table@@Base>
  41879b:	mov    rsi,QWORD PTR [rbx]
  41879e:	mov    rdi,r14
  4187a1:	call   42a010 <flatcc_builder_create_string_str@@Base>
  4187a6:	test   eax,eax
  4187a8:	mov    ebx,eax
  4187aa:	je     4187bd <__flatcc_fb_gen_c_json_printer@@Base+0xced>
  4187ac:	xor    esi,esi
  4187ae:	mov    rdi,r14
  4187b1:	call   42a370 <flatcc_builder_table_add_offset@@Base>
  4187b6:	test   rax,rax
  4187b9:	je     4187bd <__flatcc_fb_gen_c_json_printer@@Base+0xced>
  4187bb:	mov    DWORD PTR [rax],ebx
  4187bd:	mov    rdi,r14
  4187c0:	xor    r12d,r12d
  4187c3:	call   428760 <flatcc_builder_start_offset_vector@@Base>
  4187c8:	mov    rax,QWORD PTR [rsp+0x10]
  4187cd:	mov    r13,QWORD PTR [rax+0x28]
  4187d1:	test   r13,r13
  4187d4:	jne    4188dc <__flatcc_fb_gen_c_json_printer@@Base+0xe0c>
  4187da:	jmp    418c68 <__flatcc_fb_gen_c_json_printer@@Base+0x1198>
  4187df:	nop
  4187e0:	test   bl,0x80
  4187e3:	je     4188ea <__flatcc_fb_gen_c_json_printer@@Base+0xe1a>
  4187e9:	mov    BYTE PTR [rsp+0x8],0x1
  4187ee:	mov    DWORD PTR [rsp+0x1c],0x1
  4187f6:	mov    ebp,ebx
  4187f8:	and    bp,0x4
  4187fc:	setne  BYTE PTR [rsp+0x5b]
  418801:	cmp    WORD PTR [r13+0x28],0xe
  418807:	je     418a60 <__flatcc_fb_gen_c_json_printer@@Base+0xf90>
  41880d:	mov    esi,0x9
  418812:	mov    rdi,r14
  418815:	call   428900 <flatcc_builder_start_table@@Base>
  41881a:	mov    rax,QWORD PTR [r13+0x8]
  41881e:	mov    rdi,r14
  418821:	mov    rdx,QWORD PTR [rax+0x8]
  418825:	mov    rsi,QWORD PTR [rax]
  418828:	call   429ef0 <flatcc_builder_create_string@@Base>
  41882d:	test   eax,eax
  41882f:	mov    r15d,eax
  418832:	je     418846 <__flatcc_fb_gen_c_json_printer@@Base+0xd76>
  418834:	xor    esi,esi
  418836:	mov    rdi,r14
  418839:	call   42a370 <flatcc_builder_table_add_offset@@Base>
  41883e:	test   rax,rax
  418841:	je     418846 <__flatcc_fb_gen_c_json_printer@@Base+0xd76>
  418843:	mov    DWORD PTR [rax],r15d
  418846:	sub    rsp,0x8
  41884a:	push   QWORD PTR [r13+0x28]
  41884e:	push   QWORD PTR [r13+0x20]
  418852:	push   QWORD PTR [r13+0x18]
  418856:	mov    rdi,r14
  418859:	call   4182f0 <__flatcc_fb_gen_c_json_printer@@Base+0x820>
  41885e:	add    rsp,0x20
  418862:	test   eax,eax
  418864:	jne    418a38 <__flatcc_fb_gen_c_json_printer@@Base+0xf68>
  41886a:	mov    rax,QWORD PTR [rsp+0x10]
  41886f:	movzx  eax,WORD PTR [rax+0x10]
  418873:	test   ax,ax
  418876:	je     418940 <__flatcc_fb_gen_c_json_printer@@Base+0xe70>
  41887c:	cmp    ax,0x1
  418880:	jne    41888f <__flatcc_fb_gen_c_json_printer@@Base+0xdbf>
  418882:	mov    rbx,QWORD PTR [r13+0x78]
  418886:	test   bx,bx
  418889:	jne    418f38 <__flatcc_fb_gen_c_json_printer@@Base+0x1468>
  41888f:	test   bp,bp
  418892:	jne    418a08 <__flatcc_fb_gen_c_json_printer@@Base+0xf38>
  418898:	lea    rsi,[rip+0x2d8f1]        # 446190 <_IO_stdin_used@@Base+0x19190>
  41889f:	mov    edx,0x2
  4188a4:	mov    rdi,r14
  4188a7:	call   429240 <flatcc_builder_check_required@@Base>
  4188ac:	test   eax,eax
  4188ae:	je     4192bd <__flatcc_fb_gen_c_json_printer@@Base+0x17ed>
  4188b4:	mov    rdi,r14
  4188b7:	call   4292c0 <flatcc_builder_end_table@@Base>
  4188bc:	test   eax,eax
  4188be:	je     4188ca <__flatcc_fb_gen_c_json_printer@@Base+0xdfa>
  4188c0:	mov    esi,eax
  4188c2:	mov    rdi,r14
  4188c5:	call   428290 <flatcc_builder_offset_vector_push@@Base>
  4188ca:	mov    r13,QWORD PTR [r13+0x0]
  4188ce:	or     r12b,BYTE PTR [rsp+0x8]
  4188d3:	test   r13,r13
  4188d6:	je     418c68 <__flatcc_fb_gen_c_json_printer@@Base+0x1198>
  4188dc:	test   r12b,r12b
  4188df:	movzx  ebx,WORD PTR [r13+0x70]
  4188e4:	je     4187e0 <__flatcc_fb_gen_c_json_printer@@Base+0xd10>
  4188ea:	mov    BYTE PTR [rsp+0x8],0x0
  4188ef:	mov    DWORD PTR [rsp+0x1c],0x0
  4188f7:	jmp    4187f6 <__flatcc_fb_gen_c_json_printer@@Base+0xd26>
  4188fc:	mov    rdi,QWORD PTR [rsp+0x50]
  418901:	mov    ebx,0xffffffff
  418906:	call   418250 <__flatcc_fb_gen_c_json_printer@@Base+0x780>
  41890b:	mov    rcx,QWORD PTR [rsp+0xb8]
  418913:	xor    rcx,QWORD PTR fs:0x28
  41891c:	mov    eax,ebx
  41891e:	jne    419339 <__flatcc_fb_gen_c_json_printer@@Base+0x1869>
  418924:	add    rsp,0xc8
  41892b:	pop    rbx
  41892c:	pop    rbp
  41892d:	pop    r12
  41892f:	pop    r13
  418931:	pop    r14
  418933:	pop    r15
  418935:	ret    
  418936:	nop    WORD PTR cs:[rax+rax*1+0x0]
  418940:	movzx  eax,WORD PTR [r13+0x58]
  418945:	cmp    ax,0x4
  418949:	je     418ba0 <__flatcc_fb_gen_c_json_printer@@Base+0x10d0>
  41894f:	jbe    418c10 <__flatcc_fb_gen_c_json_printer@@Base+0x1140>
  418955:	cmp    ax,0x5
  418959:	je     418ba0 <__flatcc_fb_gen_c_json_printer@@Base+0x10d0>
  41895f:	cmp    ax,0x6
  418963:	jne    4190a0 <__flatcc_fb_gen_c_json_printer@@Base+0x15d0>
  418969:	movzx  r8d,BYTE PTR [r13+0x48]
  41896e:	test   r8,r8
  418971:	jne    418bad <__flatcc_fb_gen_c_json_printer@@Base+0x10dd>
  418977:	nop    WORD PTR [rax+rax*1+0x0]
  418980:	mov    r9,QWORD PTR [r13+0x88]
  418987:	mov    r8d,0x4
  41898d:	test   r9w,r9w
  418991:	jne    418ef0 <__flatcc_fb_gen_c_json_printer@@Base+0x1420>
  418997:	mov    ecx,0x2
  41899c:	mov    edx,0x2
  4189a1:	mov    esi,0x3
  4189a6:	mov    rdi,r14
  4189a9:	mov    DWORD PTR [rsp+0x20],r8d
  4189ae:	call   42a1a0 <flatcc_builder_table_add@@Base>
  4189b3:	test   rax,rax
  4189b6:	je     4189c1 <__flatcc_fb_gen_c_json_printer@@Base+0xef1>
  4189b8:	mov    r8d,DWORD PTR [rsp+0x20]
  4189bd:	mov    WORD PTR [rax],r8w
  4189c1:	mov    eax,DWORD PTR [rsp+0x1c]
  4189c5:	test   eax,eax
  4189c7:	jne    418be0 <__flatcc_fb_gen_c_json_printer@@Base+0x1110>
  4189cd:	and    bh,0x1
  4189d0:	je     41888f <__flatcc_fb_gen_c_json_printer@@Base+0xdbf>
  4189d6:	mov    ecx,0x1
  4189db:	mov    edx,0x1
  4189e0:	mov    esi,0x7
  4189e5:	mov    rdi,r14
  4189e8:	call   42a1a0 <flatcc_builder_table_add@@Base>
  4189ed:	test   rax,rax
  4189f0:	je     41888f <__flatcc_fb_gen_c_json_printer@@Base+0xdbf>
  4189f6:	test   bp,bp
  4189f9:	mov    BYTE PTR [rax],0x1
  4189fc:	je     418898 <__flatcc_fb_gen_c_json_printer@@Base+0xdc8>
  418a02:	nop    WORD PTR [rax+rax*1+0x0]
  418a08:	mov    ecx,0x1
  418a0d:	mov    edx,0x1
  418a12:	mov    esi,0x6
  418a17:	mov    rdi,r14
  418a1a:	call   42a1a0 <flatcc_builder_table_add@@Base>
  418a1f:	test   rax,rax
  418a22:	je     418898 <__flatcc_fb_gen_c_json_printer@@Base+0xdc8>
  418a28:	movzx  ecx,BYTE PTR [rsp+0x5b]
  418a2d:	mov    BYTE PTR [rax],cl
  418a2f:	jmp    418898 <__flatcc_fb_gen_c_json_printer@@Base+0xdc8>
  418a34:	nop    DWORD PTR [rax+0x0]
  418a38:	mov    esi,0x1
  418a3d:	mov    rdi,r14
  418a40:	mov    DWORD PTR [rsp+0x20],eax
  418a44:	call   42a370 <flatcc_builder_table_add_offset@@Base>
  418a49:	test   rax,rax
  418a4c:	je     41886a <__flatcc_fb_gen_c_json_printer@@Base+0xd9a>
  418a52:	mov    edx,DWORD PTR [rsp+0x20]
  418a56:	mov    DWORD PTR [rax],edx
  418a58:	jmp    41886a <__flatcc_fb_gen_c_json_printer@@Base+0xd9a>
  418a5d:	nop    DWORD PTR [rax]
  418a60:	mov    rax,QWORD PTR [r13+0x18]
  418a64:	cmp    WORD PTR [rax+0x10],0x4
  418a69:	jne    41880d <__flatcc_fb_gen_c_json_printer@@Base+0xd3d>
  418a6f:	mov    esi,0x9
  418a74:	mov    rdi,r14
  418a77:	call   428900 <flatcc_builder_start_table@@Base>
  418a7c:	mov    rdi,r14
  418a7f:	call   4287c0 <flatcc_builder_start_string@@Base>
  418a84:	mov    rax,QWORD PTR [r13+0x8]
  418a88:	mov    rdi,r14
  418a8b:	mov    rdx,QWORD PTR [rax+0x8]
  418a8f:	mov    rsi,QWORD PTR [rax]
  418a92:	call   428440 <flatcc_builder_append_string@@Base>
  418a97:	lea    rsi,[rip+0x1d71a]        # 4361b8 <_IO_stdin_used@@Base+0x91b8>
  418a9e:	mov    edx,0x5
  418aa3:	mov    rdi,r14
  418aa6:	call   428440 <flatcc_builder_append_string@@Base>
  418aab:	mov    rdi,r14
  418aae:	call   42a080 <flatcc_builder_end_string@@Base>
  418ab3:	test   eax,eax
  418ab5:	mov    r15d,eax
  418ab8:	je     418acc <__flatcc_fb_gen_c_json_printer@@Base+0xffc>
  418aba:	xor    esi,esi
  418abc:	mov    rdi,r14
  418abf:	call   42a370 <flatcc_builder_table_add_offset@@Base>
  418ac4:	test   rax,rax
  418ac7:	je     418acc <__flatcc_fb_gen_c_json_printer@@Base+0xffc>
  418ac9:	mov    DWORD PTR [rax],r15d
  418acc:	mov    esi,0x3
  418ad1:	mov    rdi,r14
  418ad4:	call   428900 <flatcc_builder_start_table@@Base>
  418ad9:	test   eax,eax
  418adb:	jne    418b36 <__flatcc_fb_gen_c_json_printer@@Base+0x1066>
  418add:	xor    esi,esi
  418adf:	mov    ecx,0x1
  418ae4:	mov    edx,0x1
  418ae9:	mov    rdi,r14
  418aec:	call   42a1a0 <flatcc_builder_table_add@@Base>
  418af1:	test   rax,rax
  418af4:	je     418b36 <__flatcc_fb_gen_c_json_printer@@Base+0x1066>
  418af6:	lea    rsi,[rip+0x2d6a7]        # 4461a4 <_IO_stdin_used@@Base+0x191a4>
  418afd:	xor    edx,edx
  418aff:	mov    BYTE PTR [rax],0x1
  418b02:	mov    rdi,r14
  418b05:	call   429240 <flatcc_builder_check_required@@Base>
  418b0a:	test   eax,eax
  418b0c:	je     41931a <__flatcc_fb_gen_c_json_printer@@Base+0x184a>
  418b12:	mov    rdi,r14
  418b15:	call   4292c0 <flatcc_builder_end_table@@Base>
  418b1a:	test   eax,eax
  418b1c:	mov    r15d,eax
  418b1f:	je     418b36 <__flatcc_fb_gen_c_json_printer@@Base+0x1066>
  418b21:	mov    esi,0x1
  418b26:	mov    rdi,r14
  418b29:	call   42a370 <flatcc_builder_table_add_offset@@Base>
  418b2e:	test   rax,rax
  418b31:	je     418b36 <__flatcc_fb_gen_c_json_printer@@Base+0x1066>
  418b33:	mov    DWORD PTR [rax],r15d
  418b36:	mov    rax,QWORD PTR [r13+0x88]
  418b3d:	mov    edx,eax
  418b3f:	add    eax,0x1
  418b42:	add    ax,ax
  418b45:	mov    r15d,eax
  418b48:	jne    4191d0 <__flatcc_fb_gen_c_json_printer@@Base+0x1700>
  418b4e:	sub    dx,0x1
  418b52:	mov    r15d,edx
  418b55:	jne    4191a0 <__flatcc_fb_gen_c_json_printer@@Base+0x16d0>
  418b5b:	test   bp,bp
  418b5e:	jne    419170 <__flatcc_fb_gen_c_json_printer@@Base+0x16a0>
  418b64:	lea    rsi,[rip+0x2d625]        # 446190 <_IO_stdin_used@@Base+0x19190>
  418b6b:	mov    edx,0x2
  418b70:	mov    rdi,r14
  418b73:	call   429240 <flatcc_builder_check_required@@Base>
  418b78:	test   eax,eax
  418b7a:	je     4192bd <__flatcc_fb_gen_c_json_printer@@Base+0x17ed>
  418b80:	mov    rdi,r14
  418b83:	call   4292c0 <flatcc_builder_end_table@@Base>
  418b88:	test   eax,eax
  418b8a:	je     41880d <__flatcc_fb_gen_c_json_printer@@Base+0xd3d>
  418b90:	mov    esi,eax
  418b92:	mov    rdi,r14
  418b95:	call   428290 <flatcc_builder_offset_vector_push@@Base>
  418b9a:	jmp    41880d <__flatcc_fb_gen_c_json_printer@@Base+0xd3d>
  418b9f:	nop
  418ba0:	mov    r8,QWORD PTR [r13+0x48]
  418ba4:	test   r8,r8
  418ba7:	je     418980 <__flatcc_fb_gen_c_json_printer@@Base+0xeb0>
  418bad:	mov    ecx,0x8
  418bb2:	mov    edx,0x8
  418bb7:	mov    esi,0x4
  418bbc:	mov    rdi,r14
  418bbf:	mov    QWORD PTR [rsp+0x20],r8
  418bc4:	call   42a1a0 <flatcc_builder_table_add@@Base>
  418bc9:	test   rax,rax
  418bcc:	je     418980 <__flatcc_fb_gen_c_json_printer@@Base+0xeb0>
  418bd2:	mov    r8,QWORD PTR [rsp+0x20]
  418bd7:	mov    QWORD PTR [rax],r8
  418bda:	jmp    418980 <__flatcc_fb_gen_c_json_printer@@Base+0xeb0>
  418bdf:	nop
  418be0:	mov    ecx,0x1
  418be5:	mov    edx,0x1
  418bea:	mov    esi,0x8
  418bef:	mov    rdi,r14
  418bf2:	call   42a1a0 <flatcc_builder_table_add@@Base>
  418bf7:	test   rax,rax
  418bfa:	je     4189cd <__flatcc_fb_gen_c_json_printer@@Base+0xefd>
  418c00:	mov    BYTE PTR [rax],0x1
  418c03:	jmp    4189cd <__flatcc_fb_gen_c_json_printer@@Base+0xefd>
  418c08:	nop    DWORD PTR [rax+rax*1+0x0]
  418c10:	cmp    ax,0x3
  418c14:	jne    4190a0 <__flatcc_fb_gen_c_json_printer@@Base+0x15d0>
  418c1a:	vxorpd xmm1,xmm1,xmm1
  418c1e:	vmovsd xmm0,QWORD PTR [r13+0x48]
  418c24:	vucomisd xmm0,xmm1
  418c28:	jp     418c30 <__flatcc_fb_gen_c_json_printer@@Base+0x1160>
  418c2a:	je     418980 <__flatcc_fb_gen_c_json_printer@@Base+0xeb0>
  418c30:	mov    ecx,0x8
  418c35:	mov    edx,0x8
  418c3a:	mov    esi,0x5
  418c3f:	mov    rdi,r14
  418c42:	vmovsd QWORD PTR [rsp+0x20],xmm0
  418c48:	call   42a1a0 <flatcc_builder_table_add@@Base>
  418c4d:	test   rax,rax
  418c50:	je     418980 <__flatcc_fb_gen_c_json_printer@@Base+0xeb0>
  418c56:	vmovsd xmm0,QWORD PTR [rsp+0x20]
  418c5c:	vmovsd QWORD PTR [rax],xmm0
  418c60:	jmp    418980 <__flatcc_fb_gen_c_json_printer@@Base+0xeb0>
  418c65:	nop    DWORD PTR [rax]
  418c68:	mov    rdi,r14
  418c6b:	call   4296f0 <flatcc_builder_end_offset_vector@@Base>
  418c70:	test   eax,eax
  418c72:	mov    ebx,eax
  418c74:	je     418c8a <__flatcc_fb_gen_c_json_printer@@Base+0x11ba>
  418c76:	mov    esi,0x1
  418c7b:	mov    rdi,r14
  418c7e:	call   42a370 <flatcc_builder_table_add_offset@@Base>
  418c83:	test   rax,rax
  418c86:	je     418c8a <__flatcc_fb_gen_c_json_printer@@Base+0x11ba>
  418c88:	mov    DWORD PTR [rax],ebx
  418c8a:	mov    rax,QWORD PTR [rsp+0x10]
  418c8f:	cmp    WORD PTR [rax+0x10],0x1
  418c94:	je     419130 <__flatcc_fb_gen_c_json_printer@@Base+0x1660>
  418c9a:	mov    rax,QWORD PTR [rsp+0x10]
  418c9f:	movzx  ebx,WORD PTR [rax+0xb0]
  418ca6:	test   ebx,ebx
  418ca8:	jne    4190b0 <__flatcc_fb_gen_c_json_printer@@Base+0x15e0>
  418cae:	lea    rsi,[rip+0x2d4d5]        # 44618a <_IO_stdin_used@@Base+0x1918a>
  418cb5:	mov    edx,0x2
  418cba:	mov    rdi,r14
  418cbd:	call   429240 <flatcc_builder_check_required@@Base>
  418cc2:	test   eax,eax
  418cc4:	je     4192fb <__flatcc_fb_gen_c_json_printer@@Base+0x182b>
  418cca:	mov    rdi,r14
  418ccd:	call   4292c0 <flatcc_builder_end_table@@Base>
  418cd2:	mov    rcx,QWORD PTR [rsp+0x38]
  418cd7:	add    QWORD PTR [rsp+0x30],0x10
  418cdd:	mov    DWORD PTR [rcx],eax
  418cdf:	add    rcx,0x4
  418ce3:	cmp    QWORD PTR [rsp+0x40],rcx
  418ce8:	mov    QWORD PTR [rsp+0x38],rcx
  418ced:	jne    418780 <__flatcc_fb_gen_c_json_printer@@Base+0xcb0>
  418cf3:	mov    r15,r14
  418cf6:	movsxd rdx,DWORD PTR [rsp+0x5c]
  418cfb:	mov    rsi,QWORD PTR [rsp+0x28]
  418d00:	mov    rdi,r15
  418d03:	call   4297c0 <flatcc_builder_create_offset_vector@@Base>
  418d08:	test   eax,eax
  418d0a:	mov    ebx,eax
  418d0c:	je     418d1f <__flatcc_fb_gen_c_json_printer@@Base+0x124f>
  418d0e:	xor    esi,esi
  418d10:	mov    rdi,r15
  418d13:	call   42a370 <flatcc_builder_table_add_offset@@Base>
  418d18:	test   rax,rax
  418d1b:	je     418d1f <__flatcc_fb_gen_c_json_printer@@Base+0x124f>
  418d1d:	mov    DWORD PTR [rax],ebx
  418d1f:	mov    ebx,DWORD PTR [rsp+0x68]
  418d23:	mov    rdi,r15
  418d26:	mov    r14,QWORD PTR [rsp+0x80]
  418d2e:	call   428760 <flatcc_builder_start_offset_vector@@Base>
  418d33:	test   ebx,ebx
  418d35:	jle    418ffa <__flatcc_fb_gen_c_json_printer@@Base+0x152a>
  418d3b:	lea    eax,[rbx-0x1]
  418d3e:	lea    r12,[rip+0x2d45b]        # 4461a0 <_IO_stdin_used@@Base+0x191a0>
  418d45:	mov    QWORD PTR [rsp+0x8],r14
  418d4a:	add    rax,0x1
  418d4e:	shl    rax,0x4
  418d52:	add    rax,r14
  418d55:	mov    QWORD PTR [rsp+0x10],rax
  418d5a:	nop    WORD PTR [rax+rax*1+0x0]
  418d60:	mov    rbx,QWORD PTR [rsp+0x8]
  418d65:	mov    esi,0x4
  418d6a:	mov    rdi,r15
  418d6d:	mov    r13,QWORD PTR [rbx]
  418d70:	movzx  ebp,WORD PTR [r13+0x10]
  418d75:	call   428900 <flatcc_builder_start_table@@Base>
  418d7a:	mov    rsi,QWORD PTR [rbx+0x8]
  418d7e:	mov    rdi,r15
  418d81:	call   42a010 <flatcc_builder_create_string_str@@Base>
  418d86:	test   eax,eax
  418d88:	mov    ebx,eax
  418d8a:	je     418d9d <__flatcc_fb_gen_c_json_printer@@Base+0x12cd>
  418d8c:	xor    esi,esi
  418d8e:	mov    rdi,r15
  418d91:	call   42a370 <flatcc_builder_table_add_offset@@Base>
  418d96:	test   rax,rax
  418d99:	je     418d9d <__flatcc_fb_gen_c_json_printer@@Base+0x12cd>
  418d9b:	mov    DWORD PTR [rax],ebx
  418d9d:	mov    rdi,r15
  418da0:	call   428760 <flatcc_builder_start_offset_vector@@Base>
  418da5:	mov    rbx,QWORD PTR [r13+0x28]
  418da9:	test   rbx,rbx
  418dac:	jne    418df2 <__flatcc_fb_gen_c_json_printer@@Base+0x1322>
  418dae:	jmp    418f60 <__flatcc_fb_gen_c_json_printer@@Base+0x1490>
  418db3:	nop    DWORD PTR [rax+rax*1+0x0]
  418db8:	mov    edx,0x1
  418dbd:	mov    rsi,r12
  418dc0:	mov    rdi,r15
  418dc3:	call   429240 <flatcc_builder_check_required@@Base>
  418dc8:	test   eax,eax
  418dca:	je     4192dc <__flatcc_fb_gen_c_json_printer@@Base+0x180c>
  418dd0:	mov    rdi,r15
  418dd3:	call   4292c0 <flatcc_builder_end_table@@Base>
  418dd8:	test   eax,eax
  418dda:	je     418de6 <__flatcc_fb_gen_c_json_printer@@Base+0x1316>
  418ddc:	mov    esi,eax
  418dde:	mov    rdi,r15
  418de1:	call   428290 <flatcc_builder_offset_vector_push@@Base>
  418de6:	mov    rbx,QWORD PTR [rbx]
  418de9:	test   rbx,rbx
  418dec:	je     418f60 <__flatcc_fb_gen_c_json_printer@@Base+0x1490>
  418df2:	cmp    bp,0x4
  418df6:	mov    esi,0x3
  418dfb:	mov    rdi,r15
  418dfe:	je     418e70 <__flatcc_fb_gen_c_json_printer@@Base+0x13a0>
  418e00:	call   428900 <flatcc_builder_start_table@@Base>
  418e05:	mov    rax,QWORD PTR [rbx+0x8]
  418e09:	mov    rdi,r15
  418e0c:	mov    rdx,QWORD PTR [rax+0x8]
  418e10:	mov    rsi,QWORD PTR [rax]
  418e13:	call   429ef0 <flatcc_builder_create_string@@Base>
  418e18:	test   eax,eax
  418e1a:	mov    r14d,eax
  418e1d:	je     418e31 <__flatcc_fb_gen_c_json_printer@@Base+0x1361>
  418e1f:	xor    esi,esi
  418e21:	mov    rdi,r15
  418e24:	call   42a370 <flatcc_builder_table_add_offset@@Base>
  418e29:	test   rax,rax
  418e2c:	je     418e31 <__flatcc_fb_gen_c_json_printer@@Base+0x1361>
  418e2e:	mov    DWORD PTR [rax],r14d
  418e31:	mov    r14,QWORD PTR [rbx+0x48]
  418e35:	test   r14,r14
  418e38:	je     418db8 <__flatcc_fb_gen_c_json_printer@@Base+0x12e8>
  418e3e:	mov    ecx,0x8
  418e43:	mov    edx,0x8
  418e48:	mov    esi,0x1
  418e4d:	mov    rdi,r15
  418e50:	call   42a1a0 <flatcc_builder_table_add@@Base>
  418e55:	test   rax,rax
  418e58:	je     418db8 <__flatcc_fb_gen_c_json_printer@@Base+0x12e8>
  418e5e:	mov    QWORD PTR [rax],r14
  418e61:	jmp    418db8 <__flatcc_fb_gen_c_json_printer@@Base+0x12e8>
  418e66:	nop    WORD PTR cs:[rax+rax*1+0x0]
  418e70:	call   428900 <flatcc_builder_start_table@@Base>
  418e75:	mov    rax,QWORD PTR [rbx+0x8]
  418e79:	mov    rdi,r15
  418e7c:	mov    rdx,QWORD PTR [rax+0x8]
  418e80:	mov    rsi,QWORD PTR [rax]
  418e83:	call   429ef0 <flatcc_builder_create_string@@Base>
  418e88:	test   eax,eax
  418e8a:	mov    r14d,eax
  418e8d:	je     418ea1 <__flatcc_fb_gen_c_json_printer@@Base+0x13d1>
  418e8f:	xor    esi,esi
  418e91:	mov    rdi,r15
  418e94:	call   42a370 <flatcc_builder_table_add_offset@@Base>
  418e99:	test   rax,rax
  418e9c:	je     418ea1 <__flatcc_fb_gen_c_json_printer@@Base+0x13d1>
  418e9e:	mov    DWORD PTR [rax],r14d
  418ea1:	cmp    QWORD PTR [rsp+0x28],0x0
  418ea7:	je     418e31 <__flatcc_fb_gen_c_json_printer@@Base+0x1361>
  418ea9:	cmp    WORD PTR [rbx+0x28],0xe
  418eae:	jne    418e31 <__flatcc_fb_gen_c_json_printer@@Base+0x1361>
  418eb0:	mov    rax,QWORD PTR [rbx+0x18]
  418eb4:	mov    rcx,QWORD PTR [rsp+0x28]
  418eb9:	mov    rax,QWORD PTR [rax+0xc8]
  418ec0:	mov    r14d,DWORD PTR [rcx+rax*4]
  418ec4:	test   r14d,r14d
  418ec7:	je     418e31 <__flatcc_fb_gen_c_json_printer@@Base+0x1361>
  418ecd:	mov    esi,0x2
  418ed2:	mov    rdi,r15
  418ed5:	call   42a370 <flatcc_builder_table_add_offset@@Base>
  418eda:	test   rax,rax
  418edd:	jne    418e2e <__flatcc_fb_gen_c_json_printer@@Base+0x135e>
  418ee3:	jmp    418e31 <__flatcc_fb_gen_c_json_printer@@Base+0x1361>
  418ee8:	nop    DWORD PTR [rax+rax*1+0x0]
  418ef0:	mov    ecx,0x2
  418ef5:	mov    edx,0x2
  418efa:	mov    esi,0x2
  418eff:	mov    rdi,r14
  418f02:	mov    QWORD PTR [rsp+0x20],r9
  418f07:	call   42a1a0 <flatcc_builder_table_add@@Base>
  418f0c:	test   rax,rax
  418f0f:	je     418f1a <__flatcc_fb_gen_c_json_printer@@Base+0x144a>
  418f11:	mov    r9,QWORD PTR [rsp+0x20]
  418f16:	mov    WORD PTR [rax],r9w
  418f1a:	movzx  eax,WORD PTR [r13+0x88]
  418f22:	lea    r8d,[rax+0x2]
  418f26:	add    r8w,r8w
  418f2a:	je     4189c1 <__flatcc_fb_gen_c_json_printer@@Base+0xef1>
  418f30:	jmp    418997 <__flatcc_fb_gen_c_json_printer@@Base+0xec7>
  418f35:	nop    DWORD PTR [rax]
  418f38:	mov    ecx,0x2
  418f3d:	mov    edx,0x2
  418f42:	mov    esi,0x3
  418f47:	mov    rdi,r14
  418f4a:	call   42a1a0 <flatcc_builder_table_add@@Base>
  418f4f:	test   rax,rax
  418f52:	je     41888f <__flatcc_fb_gen_c_json_printer@@Base+0xdbf>
  418f58:	mov    WORD PTR [rax],bx
  418f5b:	jmp    41888f <__flatcc_fb_gen_c_json_printer@@Base+0xdbf>
  418f60:	mov    rdi,r15
  418f63:	call   4296f0 <flatcc_builder_end_offset_vector@@Base>
  418f68:	test   eax,eax
  418f6a:	mov    ebx,eax
  418f6c:	je     418f82 <__flatcc_fb_gen_c_json_printer@@Base+0x14b2>
  418f6e:	mov    esi,0x1
  418f73:	mov    rdi,r15
  418f76:	call   42a370 <flatcc_builder_table_add_offset@@Base>
  418f7b:	test   rax,rax
  418f7e:	je     418f82 <__flatcc_fb_gen_c_json_printer@@Base+0x14b2>
  418f80:	mov    DWORD PTR [rax],ebx
  418f82:	cmp    bp,0x4
  418f86:	je     4190e0 <__flatcc_fb_gen_c_json_printer@@Base+0x1610>
  418f8c:	sub    rsp,0x8
  418f90:	push   QWORD PTR [r13+0x58]
  418f94:	push   QWORD PTR [r13+0x50]
  418f98:	push   QWORD PTR [r13+0x48]
  418f9c:	mov    rdi,r15
  418f9f:	call   4182f0 <__flatcc_fb_gen_c_json_printer@@Base+0x820>
  418fa4:	add    rsp,0x20
  418fa8:	test   eax,eax
  418faa:	mov    ebx,eax
  418fac:	jne    419110 <__flatcc_fb_gen_c_json_printer@@Base+0x1640>
  418fb2:	lea    rsi,[rip+0x2d1df]        # 446198 <_IO_stdin_used@@Base+0x19198>
  418fb9:	mov    edx,0x3
  418fbe:	mov    rdi,r15
  418fc1:	call   429240 <flatcc_builder_check_required@@Base>
  418fc6:	test   eax,eax
  418fc8:	je     41935d <__flatcc_fb_gen_c_json_printer@@Base+0x188d>
  418fce:	mov    rdi,r15
  418fd1:	call   4292c0 <flatcc_builder_end_table@@Base>
  418fd6:	test   eax,eax
  418fd8:	je     418fe4 <__flatcc_fb_gen_c_json_printer@@Base+0x1514>
  418fda:	mov    esi,eax
  418fdc:	mov    rdi,r15
  418fdf:	call   428290 <flatcc_builder_offset_vector_push@@Base>
  418fe4:	add    QWORD PTR [rsp+0x8],0x10
  418fea:	mov    rax,QWORD PTR [rsp+0x8]
  418fef:	cmp    rax,QWORD PTR [rsp+0x10]
  418ff4:	jne    418d60 <__flatcc_fb_gen_c_json_printer@@Base+0x1290>
  418ffa:	mov    rdi,r15
  418ffd:	call   4296f0 <flatcc_builder_end_offset_vector@@Base>
  419002:	test   eax,eax
  419004:	mov    ebx,eax
  419006:	je     41901c <__flatcc_fb_gen_c_json_printer@@Base+0x154c>
  419008:	mov    esi,0x1
  41900d:	mov    rdi,r15
  419010:	call   42a370 <flatcc_builder_table_add_offset@@Base>
  419015:	test   rax,rax
  419018:	je     41901c <__flatcc_fb_gen_c_json_printer@@Base+0x154c>
  41901a:	mov    DWORD PTR [rax],ebx
  41901c:	mov    rax,QWORD PTR [rsp+0x48]
  419021:	mov    rax,QWORD PTR [rax+0x58]
  419025:	test   rax,rax
  419028:	je     419048 <__flatcc_fb_gen_c_json_printer@@Base+0x1578>
  41902a:	cmp    WORD PTR [rax+0x10],0x0
  41902f:	jne    419048 <__flatcc_fb_gen_c_json_printer@@Base+0x1578>
  419031:	mov    rax,QWORD PTR [rax+0xc8]
  419038:	mov    rcx,QWORD PTR [rsp+0x28]
  41903d:	mov    ebx,DWORD PTR [rcx+rax*4]
  419040:	test   ebx,ebx
  419042:	jne    419232 <__flatcc_fb_gen_c_json_printer@@Base+0x1762>
  419048:	lea    rsi,[rip+0x2d135]        # 446184 <_IO_stdin_used@@Base+0x19184>
  41904f:	mov    edx,0x2
  419054:	mov    rdi,r15
  419057:	call   429240 <flatcc_builder_check_required@@Base>
  41905c:	test   eax,eax
  41905e:	je     41933e <__flatcc_fb_gen_c_json_printer@@Base+0x186e>
  419064:	mov    rdi,r15
  419067:	xor    ebx,ebx
  419069:	call   4292c0 <flatcc_builder_end_table@@Base>
  41906e:	mov    rdi,r15
  419071:	mov    esi,eax
  419073:	call   427d70 <flatcc_builder_end_buffer@@Base>
  419078:	mov    rdi,QWORD PTR [rsp+0x50]
  41907d:	call   418250 <__flatcc_fb_gen_c_json_printer@@Base+0x780>
  419082:	mov    rax,QWORD PTR [rsp+0x28]
  419087:	test   rax,rax
  41908a:	je     41890b <__flatcc_fb_gen_c_json_printer@@Base+0xe3b>
  419090:	mov    rdi,rax
  419093:	call   405040 <free@plt>
  419098:	jmp    41890b <__flatcc_fb_gen_c_json_printer@@Base+0xe3b>
  41909d:	nop    DWORD PTR [rax]
  4190a0:	vxorpd xmm1,xmm1,xmm1
  4190a4:	vmovapd xmm0,xmm1
  4190a8:	jmp    418c24 <__flatcc_fb_gen_c_json_printer@@Base+0x1154>
  4190ad:	nop    DWORD PTR [rax]
  4190b0:	mov    ecx,0x4
  4190b5:	mov    edx,0x4
  4190ba:	mov    esi,0x3
  4190bf:	mov    rdi,r14
  4190c2:	call   42a1a0 <flatcc_builder_table_add@@Base>
  4190c7:	test   rax,rax
  4190ca:	je     418cae <__flatcc_fb_gen_c_json_printer@@Base+0x11de>
  4190d0:	mov    DWORD PTR [rax],ebx
  4190d2:	jmp    418cae <__flatcc_fb_gen_c_json_printer@@Base+0x11de>
  4190d7:	nop    WORD PTR [rax+rax*1+0x0]
  4190e0:	mov    ecx,0x1
  4190e5:	mov    edx,0x1
  4190ea:	mov    esi,0x2
  4190ef:	mov    rdi,r15
  4190f2:	call   42a1a0 <flatcc_builder_table_add@@Base>
  4190f7:	test   rax,rax
  4190fa:	je     418f8c <__flatcc_fb_gen_c_json_printer@@Base+0x14bc>
  419100:	mov    BYTE PTR [rax],0x1
  419103:	jmp    418f8c <__flatcc_fb_gen_c_json_printer@@Base+0x14bc>
  419108:	nop    DWORD PTR [rax+rax*1+0x0]
  419110:	mov    esi,0x3
  419115:	mov    rdi,r15
  419118:	call   42a370 <flatcc_builder_table_add_offset@@Base>
  41911d:	test   rax,rax
  419120:	je     418fb2 <__flatcc_fb_gen_c_json_printer@@Base+0x14e2>
  419126:	mov    DWORD PTR [rax],ebx
  419128:	jmp    418fb2 <__flatcc_fb_gen_c_json_printer@@Base+0x14e2>
  41912d:	nop    DWORD PTR [rax]
  419130:	mov    rbx,QWORD PTR [rax+0xb8]
  419137:	test   ebx,ebx
  419139:	jne    4191fd <__flatcc_fb_gen_c_json_printer@@Base+0x172d>
  41913f:	mov    ecx,0x1
  419144:	mov    edx,0x1
  419149:	mov    esi,0x2
  41914e:	mov    rdi,r14
  419151:	call   42a1a0 <flatcc_builder_table_add@@Base>
  419156:	test   rax,rax
  419159:	je     418c9a <__flatcc_fb_gen_c_json_printer@@Base+0x11ca>
  41915f:	mov    BYTE PTR [rax],0x1
  419162:	jmp    418c9a <__flatcc_fb_gen_c_json_printer@@Base+0x11ca>
  419167:	nop    WORD PTR [rax+rax*1+0x0]
  419170:	mov    ecx,0x1
  419175:	mov    edx,0x1
  41917a:	mov    esi,0x6
  41917f:	mov    rdi,r14
  419182:	call   42a1a0 <flatcc_builder_table_add@@Base>
  419187:	test   rax,rax
  41918a:	je     418b64 <__flatcc_fb_gen_c_json_printer@@Base+0x1094>
  419190:	movzx  ecx,BYTE PTR [rsp+0x5b]
  419195:	mov    BYTE PTR [rax],cl
  419197:	jmp    418b64 <__flatcc_fb_gen_c_json_printer@@Base+0x1094>
  41919c:	nop    DWORD PTR [rax+0x0]
  4191a0:	mov    ecx,0x2
  4191a5:	mov    edx,0x2
  4191aa:	mov    esi,0x2
  4191af:	mov    rdi,r14
  4191b2:	call   42a1a0 <flatcc_builder_table_add@@Base>
  4191b7:	test   rax,rax
  4191ba:	je     418b5b <__flatcc_fb_gen_c_json_printer@@Base+0x108b>
  4191c0:	mov    WORD PTR [rax],r15w
  4191c4:	jmp    418b5b <__flatcc_fb_gen_c_json_printer@@Base+0x108b>
  4191c9:	nop    DWORD PTR [rax+0x0]
  4191d0:	mov    ecx,0x2
  4191d5:	mov    edx,0x2
  4191da:	mov    esi,0x3
  4191df:	mov    rdi,r14
  4191e2:	call   42a1a0 <flatcc_builder_table_add@@Base>
  4191e7:	test   rax,rax
  4191ea:	je     4191f0 <__flatcc_fb_gen_c_json_printer@@Base+0x1720>
  4191ec:	mov    WORD PTR [rax],r15w
  4191f0:	movzx  edx,WORD PTR [r13+0x88]
  4191f8:	jmp    418b4e <__flatcc_fb_gen_c_json_printer@@Base+0x107e>
  4191fd:	mov    ecx,0x4
  419202:	mov    edx,0x4
  419207:	mov    esi,0x4
  41920c:	mov    rdi,r14
  41920f:	call   42a1a0 <flatcc_builder_table_add@@Base>
  419214:	test   rax,rax
  419217:	je     41913f <__flatcc_fb_gen_c_json_printer@@Base+0x166f>
  41921d:	mov    DWORD PTR [rax],ebx
  41921f:	jmp    41913f <__flatcc_fb_gen_c_json_printer@@Base+0x166f>
  419224:	mov    QWORD PTR [rsp+0x28],0x0
  41922d:	jmp    4186ed <__flatcc_fb_gen_c_json_printer@@Base+0xc1d>
  419232:	mov    esi,0x4
  419237:	mov    rdi,r15
  41923a:	call   42a370 <flatcc_builder_table_add_offset@@Base>
  41923f:	test   rax,rax
  419242:	je     419048 <__flatcc_fb_gen_c_json_printer@@Base+0x1578>
  419248:	mov    DWORD PTR [rax],ebx
  41924a:	jmp    419048 <__flatcc_fb_gen_c_json_printer@@Base+0x1578>
  41924f:	movsxd rdx,DWORD PTR [rax+0x30]
  419253:	mov    rsi,QWORD PTR [rax+0x28]
  419257:	mov    rdi,r15
  41925a:	call   429ef0 <flatcc_builder_create_string@@Base>
  41925f:	test   eax,eax
  419261:	mov    ebx,eax
  419263:	je     41873c <__flatcc_fb_gen_c_json_printer@@Base+0xc6c>
  419269:	mov    esi,0x3
  41926e:	mov    rdi,r15
  419271:	call   42a370 <flatcc_builder_table_add_offset@@Base>
  419276:	test   rax,rax
  419279:	je     41873c <__flatcc_fb_gen_c_json_printer@@Base+0xc6c>
  41927f:	mov    DWORD PTR [rax],ebx
  419281:	jmp    41873c <__flatcc_fb_gen_c_json_printer@@Base+0xc6c>
  419286:	movsxd rdx,DWORD PTR [rax+0x18]
  41928a:	mov    rsi,QWORD PTR [rax+0x10]
  41928e:	mov    rdi,r15
  419291:	call   429ef0 <flatcc_builder_create_string@@Base>
  419296:	test   eax,eax
  419298:	mov    ebx,eax
  41929a:	je     41872c <__flatcc_fb_gen_c_json_printer@@Base+0xc5c>
  4192a0:	mov    esi,0x2
  4192a5:	mov    rdi,r15
  4192a8:	call   42a370 <flatcc_builder_table_add_offset@@Base>
  4192ad:	test   rax,rax
  4192b0:	je     41872c <__flatcc_fb_gen_c_json_printer@@Base+0xc5c>
  4192b6:	mov    DWORD PTR [rax],ebx
  4192b8:	jmp    41872c <__flatcc_fb_gen_c_json_printer@@Base+0xc5c>
  4192bd:	lea    rcx,[rip+0x2ce8c]        # 446150 <_IO_stdin_used@@Base+0x19150>
  4192c4:	lea    rsi,[rip+0x2c84d]        # 445b18 <_IO_stdin_used@@Base+0x18b18>
  4192cb:	lea    rdi,[rip+0x2c956]        # 445c28 <_IO_stdin_used@@Base+0x18c28>
  4192d2:	mov    edx,0x1d
  4192d7:	call   405100 <__assert_fail@plt>
  4192dc:	lea    rcx,[rip+0x2ce2d]        # 446110 <_IO_stdin_used@@Base+0x19110>
  4192e3:	lea    rsi,[rip+0x2c82e]        # 445b18 <_IO_stdin_used@@Base+0x18b18>
  4192ea:	lea    rdi,[rip+0x2ca5f]        # 445d50 <_IO_stdin_used@@Base+0x18d50>
  4192f1:	mov    edx,0x19
  4192f6:	call   405100 <__assert_fail@plt>
  4192fb:	lea    rcx,[rip+0x2ce2e]        # 446130 <_IO_stdin_used@@Base+0x19130>
  419302:	lea    rsi,[rip+0x2c80f]        # 445b18 <_IO_stdin_used@@Base+0x18b18>
  419309:	lea    rdi,[rip+0x2c9a8]        # 445cb8 <_IO_stdin_used@@Base+0x18cb8>
  419310:	mov    edx,0x1f
  419315:	call   405100 <__assert_fail@plt>
  41931a:	lea    rcx,[rip+0x2ce4f]        # 446170 <_IO_stdin_used@@Base+0x19170>
  419321:	lea    rsi,[rip+0x2c7f0]        # 445b18 <_IO_stdin_used@@Base+0x18b18>
  419328:	lea    rdi,[rip+0x2c869]        # 445b98 <_IO_stdin_used@@Base+0x18b98>
  41932f:	mov    edx,0x17
  419334:	call   405100 <__assert_fail@plt>
  419339:	call   4050d0 <__stack_chk_fail@plt>
  41933e:	lea    rcx,[rip+0x2cd8b]        # 4460d0 <_IO_stdin_used@@Base+0x190d0>
  419345:	lea    rsi,[rip+0x2c7cc]        # 445b18 <_IO_stdin_used@@Base+0x18b18>
  41934c:	lea    rdi,[rip+0x2cb25]        # 445e78 <_IO_stdin_used@@Base+0x18e78>
  419353:	mov    edx,0x21
  419358:	call   405100 <__assert_fail@plt>
  41935d:	lea    rcx,[rip+0x2cd8c]        # 4460f0 <_IO_stdin_used@@Base+0x190f0>
  419364:	lea    rsi,[rip+0x2c7ad]        # 445b18 <_IO_stdin_used@@Base+0x18b18>
  41936b:	lea    rdi,[rip+0x2ca76]        # 445de8 <_IO_stdin_used@@Base+0x18de8>
  419372:	mov    edx,0x1b
  419377:	call   405100 <__assert_fail@plt>
  41937c:	nop    DWORD PTR [rax+0x0]
  419380:	push   r15
  419382:	push   r14
  419384:	push   r13
  419386:	push   r12
  419388:	push   rbp
  419389:	push   rbx
  41938a:	sub    rsp,0x58
  41938e:	test   rdi,rdi
  419391:	je     41939c <__flatcc_fb_gen_c_json_printer@@Base+0x18cc>
  419393:	cmp    DWORD PTR [rdi+0x4],0x53424642
  41939a:	je     4193c0 <__flatcc_fb_gen_c_json_printer@@Base+0x18f0>
  41939c:	lea    rcx,[rip+0x2cd0d]        # 4460b0 <_IO_stdin_used@@Base+0x190b0>
  4193a3:	lea    rsi,[rip+0x2c6ce]        # 445a78 <_IO_stdin_used@@Base+0x18a78>
  4193aa:	lea    rdi,[rip+0x2c73f]        # 445af0 <_IO_stdin_used@@Base+0x18af0>
  4193b1:	mov    edx,0xed
  4193b6:	call   405100 <__assert_fail@plt>
  4193bb:	nop    DWORD PTR [rax+rax*1+0x0]
  4193c0:	mov    eax,DWORD PTR [rdi]
  4193c2:	add    rdi,rax
  4193c5:	je     41939c <__flatcc_fb_gen_c_json_printer@@Base+0x18cc>
  4193c7:	movsxd rax,DWORD PTR [rdi]
  4193ca:	mov    rbx,rdi
  4193cd:	sub    rbx,rax
  4193d0:	cmp    WORD PTR [rbx],0x5
  4193d4:	ja     4193f8 <__flatcc_fb_gen_c_json_printer@@Base+0x1928>
  4193d6:	lea    rcx,[rip+0x2ccd3]        # 4460b0 <_IO_stdin_used@@Base+0x190b0>
  4193dd:	lea    rsi,[rip+0x2c694]        # 445a78 <_IO_stdin_used@@Base+0x18a78>
  4193e4:	lea    rdi,[rip+0x2cb25]        # 445f10 <_IO_stdin_used@@Base+0x18f10>
  4193eb:	mov    edx,0xed
  4193f0:	call   405100 <__assert_fail@plt>
  4193f5:	nop    DWORD PTR [rax]
  4193f8:	movzx  eax,WORD PTR [rbx+0x4]
  4193fc:	test   ax,ax
  4193ff:	je     4193d6 <__flatcc_fb_gen_c_json_printer@@Base+0x1906>
  419401:	add    rdi,rax
  419404:	mov    eax,DWORD PTR [rdi]
  419406:	lea    rax,[rdi+rax*1+0x4]
  41940b:	test   rax,rax
  41940e:	mov    QWORD PTR [rsp+0x38],rax
  419413:	mov    rbx,rax
  419416:	je     419a45 <__flatcc_fb_gen_c_json_printer@@Base+0x1f75>
  41941c:	mov    edx,DWORD PTR [rax-0x4]
  41941f:	test   edx,edx
  419421:	je     419a45 <__flatcc_fb_gen_c_json_printer@@Base+0x1f75>
  419427:	mov    eax,DWORD PTR [rax]
  419429:	add    rax,rbx
  41942c:	je     419a78 <__flatcc_fb_gen_c_json_printer@@Base+0x1fa8>
  419432:	movsxd rdx,DWORD PTR [rax]
  419435:	mov    rbx,rax
  419438:	sub    rbx,rdx
  41943b:	cmp    WORD PTR [rbx],0x7
  41943f:	jbe    4199fe <__flatcc_fb_gen_c_json_printer@@Base+0x1f2e>
  419445:	movzx  edx,WORD PTR [rbx+0x6]
  419449:	test   dx,dx
  41944c:	je     4199fe <__flatcc_fb_gen_c_json_printer@@Base+0x1f2e>
  419452:	mov    rbx,QWORD PTR [rsp+0x38]
  419457:	mov    QWORD PTR [rsp+0x30],0x0
  419460:	add    rbx,0x4
  419464:	mov    QWORD PTR [rsp+0x48],rbx
  419469:	add    rax,rdx
  41946c:	mov    edx,DWORD PTR [rax]
  41946e:	lea    r13,[rax+rdx*1+0x4]
  419473:	test   r13,r13
  419476:	je     4199b1 <__flatcc_fb_gen_c_json_printer@@Base+0x1ee1>
  41947c:	mov    eax,DWORD PTR [r13-0x4]
  419480:	test   rax,rax
  419483:	mov    QWORD PTR [rsp+0x40],rax
  419488:	je     4199b1 <__flatcc_fb_gen_c_json_printer@@Base+0x1ee1>
  41948e:	lea    r14,[rax-0x1]
  419492:	shr    rax,1
  419495:	mov    QWORD PTR [rsp+0x8],rax
  41949a:	add    rax,rax
  41949d:	mov    QWORD PTR [rsp+0x28],rax
  4194a2:	mov    QWORD PTR [rsp],r14
  4194a6:	jmp    4195b7 <__flatcc_fb_gen_c_json_printer@@Base+0x1ae7>
  4194ab:	nop    DWORD PTR [rax+rax*1+0x0]
  4194b0:	mov    ecx,DWORD PTR [r13-0x4]
  4194b4:	mov    r14,rbp
  4194b7:	cmp    rcx,rbx
  4194ba:	lea    rbp,[r13+rbx*4+0x0]
  4194bf:	jbe    419a54 <__flatcc_fb_gen_c_json_printer@@Base+0x1f84>
  4194c5:	mov    eax,DWORD PTR [rbp+0x0]
  4194c8:	mov    r15,rax
  4194cb:	add    rax,rbp
  4194ce:	je     419a73 <__flatcc_fb_gen_c_json_printer@@Base+0x1fa3>
  4194d4:	movsxd rdx,DWORD PTR [rax]
  4194d7:	mov    rdi,rax
  4194da:	sub    rdi,rdx
  4194dd:	cmp    WORD PTR [rdi],0x5
  4194e1:	jbe    4196b0 <__flatcc_fb_gen_c_json_printer@@Base+0x1be0>
  4194e7:	movzx  edx,WORD PTR [rdi+0x4]
  4194eb:	test   dx,dx
  4194ee:	je     4196b0 <__flatcc_fb_gen_c_json_printer@@Base+0x1be0>
  4194f4:	add    rax,rdx
  4194f7:	cmp    rcx,r14
  4194fa:	lea    r12,[r13+r14*4+0x0]
  4194ff:	mov    edx,DWORD PTR [rax]
  419501:	lea    rdi,[rax+rdx*1+0x4]
  419506:	jbe    419a54 <__flatcc_fb_gen_c_json_printer@@Base+0x1f84>
  41950c:	mov    eax,DWORD PTR [r12]
  419510:	mov    rcx,rax
  419513:	add    rax,r12
  419516:	je     419a73 <__flatcc_fb_gen_c_json_printer@@Base+0x1fa3>
  41951c:	movsxd rdx,DWORD PTR [rax]
  41951f:	mov    rsi,rax
  419522:	sub    rsi,rdx
  419525:	cmp    WORD PTR [rsi],0x5
  419529:	jbe    4196b0 <__flatcc_fb_gen_c_json_printer@@Base+0x1be0>
  41952f:	movzx  edx,WORD PTR [rsi+0x4]
  419533:	test   dx,dx
  419536:	je     4196b0 <__flatcc_fb_gen_c_json_printer@@Base+0x1be0>
  41953c:	add    rax,rdx
  41953f:	mov    edx,DWORD PTR [rax]
  419541:	lea    rsi,[rax+rdx*1+0x4]
  419546:	test   rsi,rsi
  419549:	je     419720 <__flatcc_fb_gen_c_json_printer@@Base+0x1c50>
  41954f:	mov    r9d,DWORD PTR [rsi-0x4]
  419553:	test   rdi,rdi
  419556:	je     419710 <__flatcc_fb_gen_c_json_printer@@Base+0x1c40>
  41955c:	mov    r10d,DWORD PTR [rdi-0x4]
  419560:	mov    rdx,r9
  419563:	mov    DWORD PTR [rsp+0x24],ecx
  419567:	mov    QWORD PTR [rsp+0x18],r9
  41956c:	cmp    r10,r9
  41956f:	mov    QWORD PTR [rsp+0x10],r10
  419574:	cmovbe rdx,r10
  419578:	call   405070 <strncmp@plt>
  41957d:	test   eax,eax
  41957f:	mov    r10,QWORD PTR [rsp+0x10]
  419584:	mov    r9,QWORD PTR [rsp+0x18]
  419589:	mov    ecx,DWORD PTR [rsp+0x24]
  41958d:	jne    4196d0 <__flatcc_fb_gen_c_json_printer@@Base+0x1c00>
  419593:	cmp    r9,r10
  419596:	ja     4196d6 <__flatcc_fb_gen_c_json_printer@@Base+0x1c06>
  41959c:	sub    QWORD PTR [rsp+0x8],0x1
  4195a2:	sub    QWORD PTR [rsp+0x28],0x2
  4195a8:	mov    rax,QWORD PTR [rsp+0x8]
  4195ad:	cmp    rax,0xffffffffffffffff
  4195b1:	je     419740 <__flatcc_fb_gen_c_json_printer@@Base+0x1c70>
  4195b7:	mov    rbx,QWORD PTR [rsp+0x28]
  4195bc:	cmp    QWORD PTR [rsp],rbx
  4195c0:	jb     41959c <__flatcc_fb_gen_c_json_printer@@Base+0x1acc>
  4195c2:	mov    rbx,QWORD PTR [rsp+0x8]
  4195c7:	mov    rbp,QWORD PTR [rsp+0x28]
  4195cc:	nop    DWORD PTR [rax+0x0]
  4195d0:	cmp    QWORD PTR [rsp],rbp
  4195d4:	jbe    4194b0 <__flatcc_fb_gen_c_json_printer@@Base+0x19e0>
  4195da:	mov    ecx,DWORD PTR [r13-0x4]
  4195de:	lea    rsi,[rbp*4+0x0]
  4195e6:	lea    rax,[r13+rsi*1+0x0]
  4195eb:	cmp    rcx,rbp
  4195ee:	jbe    419a54 <__flatcc_fb_gen_c_json_printer@@Base+0x1f84>
  4195f4:	mov    edx,DWORD PTR [rax]
  4195f6:	add    rax,rdx
  4195f9:	je     419a73 <__flatcc_fb_gen_c_json_printer@@Base+0x1fa3>
  4195ff:	movsxd rdx,DWORD PTR [rax]
  419602:	mov    rdi,rax
  419605:	sub    rdi,rdx
  419608:	cmp    WORD PTR [rdi],0x5
  41960c:	jbe    4196b0 <__flatcc_fb_gen_c_json_printer@@Base+0x1be0>
  419612:	movzx  edx,WORD PTR [rdi+0x4]
  419616:	test   dx,dx
  419619:	je     4196b0 <__flatcc_fb_gen_c_json_printer@@Base+0x1be0>
  41961f:	add    rax,rdx
  419622:	lea    r14,[rbp+0x1]
  419626:	mov    edx,DWORD PTR [rax]
  419628:	cmp    rcx,r14
  41962b:	lea    rdi,[rax+rdx*1+0x4]
  419630:	lea    rax,[r13+rsi*1+0x4]
  419635:	jbe    419a54 <__flatcc_fb_gen_c_json_printer@@Base+0x1f84>
  41963b:	mov    edx,DWORD PTR [rax]
  41963d:	add    rax,rdx
  419640:	je     419a73 <__flatcc_fb_gen_c_json_printer@@Base+0x1fa3>
  419646:	movsxd rdx,DWORD PTR [rax]
  419649:	mov    rsi,rax
  41964c:	sub    rsi,rdx
  41964f:	cmp    WORD PTR [rsi],0x5
  419653:	jbe    4196b0 <__flatcc_fb_gen_c_json_printer@@Base+0x1be0>
  419655:	movzx  edx,WORD PTR [rsi+0x4]
  419659:	test   dx,dx
  41965c:	je     4196b0 <__flatcc_fb_gen_c_json_printer@@Base+0x1be0>
  41965e:	add    rax,rdx
  419661:	mov    edx,DWORD PTR [rax]
  419663:	lea    rsi,[rax+rdx*1+0x4]
  419668:	test   rsi,rsi
  41966b:	je     419730 <__flatcc_fb_gen_c_json_printer@@Base+0x1c60>
  419671:	test   rdi,rdi
  419674:	mov    r12d,DWORD PTR [rsi-0x4]
  419678:	je     419700 <__flatcc_fb_gen_c_json_printer@@Base+0x1c30>
  41967e:	mov    r15d,DWORD PTR [rdi-0x4]
  419682:	mov    QWORD PTR [rsp+0x10],rcx
  419687:	cmp    r12,r15
  41968a:	mov    rdx,r15
  41968d:	cmovbe rdx,r12
  419691:	call   405070 <strncmp@plt>
  419696:	test   eax,eax
  419698:	mov    rcx,QWORD PTR [rsp+0x10]
  41969d:	je     419703 <__flatcc_fb_gen_c_json_printer@@Base+0x1c33>
  41969f:	cmovns r14,rbp
  4196a3:	jmp    4194b7 <__flatcc_fb_gen_c_json_printer@@Base+0x19e7>
  4196a8:	nop    DWORD PTR [rax+rax*1+0x0]
  4196b0:	lea    rcx,[rip+0x2c999]        # 446050 <_IO_stdin_used@@Base+0x19050>
  4196b7:	lea    rsi,[rip+0x2c3ba]        # 445a78 <_IO_stdin_used@@Base+0x18a78>
  4196be:	lea    rdi,[rip+0x2c84b]        # 445f10 <_IO_stdin_used@@Base+0x18f10>
  4196c5:	mov    edx,0xc3
  4196ca:	call   405100 <__assert_fail@plt>
  4196cf:	nop
  4196d0:	jns    41959c <__flatcc_fb_gen_c_json_printer@@Base+0x1acc>
  4196d6:	sub    rbx,r14
  4196d9:	shl    ebx,0x2
  4196dc:	sub    ecx,ebx
  4196de:	add    r15d,ebx
  4196e1:	mov    rbx,r14
  4196e4:	mov    DWORD PTR [rbp+0x0],ecx
  4196e7:	lea    rbp,[r14+r14*1]
  4196eb:	cmp    QWORD PTR [rsp],rbp
  4196ef:	mov    DWORD PTR [r12],r15d
  4196f3:	jae    4195d0 <__flatcc_fb_gen_c_json_printer@@Base+0x1b00>
  4196f9:	jmp    41959c <__flatcc_fb_gen_c_json_printer@@Base+0x1acc>
  4196fe:	xchg   ax,ax
  419700:	xor    r15d,r15d
  419703:	cmp    r12,r15
  419706:	cmovbe r14,rbp
  41970a:	jmp    4194b7 <__flatcc_fb_gen_c_json_printer@@Base+0x19e7>
  41970f:	nop
  419710:	xor    r10d,r10d
  419713:	jmp    419593 <__flatcc_fb_gen_c_json_printer@@Base+0x1ac3>
  419718:	nop    DWORD PTR [rax+rax*1+0x0]
  419720:	xor    r9d,r9d
  419723:	jmp    419553 <__flatcc_fb_gen_c_json_printer@@Base+0x1a83>
  419728:	nop    DWORD PTR [rax+rax*1+0x0]
  419730:	mov    r14,rbp
  419733:	jmp    4194b7 <__flatcc_fb_gen_c_json_printer@@Base+0x19e7>
  419738:	nop    DWORD PTR [rax+rax*1+0x0]
  419740:	mov    r14,QWORD PTR [rsp]
  419744:	test   r14,r14
  419747:	je     4199b1 <__flatcc_fb_gen_c_json_printer@@Base+0x1ee1>
  41974d:	mov    r15d,0x1
  419753:	sub    r15,QWORD PTR [rsp+0x40]
  419758:	mov    r12,r14
  41975b:	mov    r14,r13
  41975e:	lea    eax,[r15*4+0x0]
  419766:	mov    DWORD PTR [rsp+0x24],eax
  41976a:	nop    WORD PTR [rax+rax*1+0x0]
  419770:	mov    eax,DWORD PTR [r14+r12*4]
  419774:	mov    ebx,DWORD PTR [rsp+0x24]
  419778:	xor    ebp,ebp
  41977a:	mov    edx,DWORD PTR [r14]
  41977d:	sub    eax,ebx
  41977f:	add    edx,ebx
  419781:	mov    DWORD PTR [r14],eax
  419784:	xor    ebx,ebx
  419786:	mov    DWORD PTR [r14+r12*4],edx
  41978a:	sub    r12,0x1
  41978e:	jmp    41989d <__flatcc_fb_gen_c_json_printer@@Base+0x1dcd>
  419793:	nop    DWORD PTR [rax+rax*1+0x0]
  419798:	mov    ecx,DWORD PTR [r14-0x4]
  41979c:	lea    r15,[r14+rbx*4]
  4197a0:	mov    r13,rbp
  4197a3:	cmp    rcx,rbx
  4197a6:	jbe    419a54 <__flatcc_fb_gen_c_json_printer@@Base+0x1f84>
  4197ac:	mov    eax,DWORD PTR [r15]
  4197af:	mov    rbp,rax
  4197b2:	add    rax,r15
  4197b5:	je     419a73 <__flatcc_fb_gen_c_json_printer@@Base+0x1fa3>
  4197bb:	movsxd rdx,DWORD PTR [rax]
  4197be:	mov    rdi,rax
  4197c1:	sub    rdi,rdx
  4197c4:	cmp    WORD PTR [rdi],0x5
  4197c8:	jbe    4196b0 <__flatcc_fb_gen_c_json_printer@@Base+0x1be0>
  4197ce:	movzx  edx,WORD PTR [rdi+0x4]
  4197d2:	test   dx,dx
  4197d5:	je     4196b0 <__flatcc_fb_gen_c_json_printer@@Base+0x1be0>
  4197db:	add    rax,rdx
  4197de:	cmp    rcx,r13
  4197e1:	lea    r8,[r14+r13*4]
  4197e5:	mov    edx,DWORD PTR [rax]
  4197e7:	lea    rdi,[rax+rdx*1+0x4]
  4197ec:	jbe    419a54 <__flatcc_fb_gen_c_json_printer@@Base+0x1f84>
  4197f2:	mov    eax,DWORD PTR [r8]
  4197f5:	mov    rcx,rax
  4197f8:	add    rax,r8
  4197fb:	je     419a73 <__flatcc_fb_gen_c_json_printer@@Base+0x1fa3>
  419801:	movsxd rdx,DWORD PTR [rax]
  419804:	mov    rsi,rax
  419807:	sub    rsi,rdx
  41980a:	cmp    WORD PTR [rsi],0x5
  41980e:	jbe    4196b0 <__flatcc_fb_gen_c_json_printer@@Base+0x1be0>
  419814:	movzx  edx,WORD PTR [rsi+0x4]
  419818:	test   dx,dx
  41981b:	je     4196b0 <__flatcc_fb_gen_c_json_printer@@Base+0x1be0>
  419821:	add    rax,rdx
  419824:	mov    edx,DWORD PTR [rax]
  419826:	lea    rsi,[rax+rdx*1+0x4]
  41982b:	test   rsi,rsi
  41982e:	je     4199a3 <__flatcc_fb_gen_c_json_printer@@Base+0x1ed3>
  419834:	test   rdi,rdi
  419837:	mov    r9d,DWORD PTR [rsi-0x4]
  41983b:	je     419a38 <__flatcc_fb_gen_c_json_printer@@Base+0x1f68>
  419841:	mov    r10d,DWORD PTR [rdi-0x4]
  419845:	mov    DWORD PTR [rsp+0x8],ecx
  419849:	mov    QWORD PTR [rsp],r8
  41984d:	mov    QWORD PTR [rsp+0x10],r9
  419852:	cmp    r9,r10
  419855:	mov    rdx,r10
  419858:	mov    QWORD PTR [rsp+0x18],r10
  41985d:	cmovbe rdx,r9
  419861:	call   405070 <strncmp@plt>
  419866:	test   eax,eax
  419868:	mov    r8,QWORD PTR [rsp]
  41986c:	mov    ecx,DWORD PTR [rsp+0x8]
  419870:	je     419990 <__flatcc_fb_gen_c_json_printer@@Base+0x1ec0>
  419876:	jns    4199a3 <__flatcc_fb_gen_c_json_printer@@Base+0x1ed3>
  41987c:	sub    rbx,r13
  41987f:	shl    ebx,0x2
  419882:	add    ebp,ebx
  419884:	sub    ecx,ebx
  419886:	mov    rbx,r13
  419889:	mov    DWORD PTR [r15],ecx
  41988c:	mov    DWORD PTR [r8],ebp
  41988f:	lea    rbp,[r13+r13*1+0x0]
  419894:	cmp    r12,rbp
  419897:	jb     4199a3 <__flatcc_fb_gen_c_json_printer@@Base+0x1ed3>
  41989d:	cmp    r12,rbp
  4198a0:	jbe    419798 <__flatcc_fb_gen_c_json_printer@@Base+0x1cc8>
  4198a6:	mov    ecx,DWORD PTR [r14-0x4]
  4198aa:	lea    rsi,[rbp*4+0x0]
  4198b2:	lea    rax,[r14+rsi*1]
  4198b6:	cmp    rcx,rbp
  4198b9:	jbe    419a54 <__flatcc_fb_gen_c_json_printer@@Base+0x1f84>
  4198bf:	mov    edx,DWORD PTR [rax]
  4198c1:	add    rax,rdx
  4198c4:	je     419a73 <__flatcc_fb_gen_c_json_printer@@Base+0x1fa3>
  4198ca:	movsxd rdx,DWORD PTR [rax]
  4198cd:	mov    rdi,rax
  4198d0:	sub    rdi,rdx
  4198d3:	cmp    WORD PTR [rdi],0x5
  4198d7:	jbe    4196b0 <__flatcc_fb_gen_c_json_printer@@Base+0x1be0>
  4198dd:	movzx  edx,WORD PTR [rdi+0x4]
  4198e1:	test   dx,dx
  4198e4:	je     4196b0 <__flatcc_fb_gen_c_json_printer@@Base+0x1be0>
  4198ea:	add    rax,rdx
  4198ed:	lea    r13,[rbp+0x1]
  4198f1:	mov    edx,DWORD PTR [rax]
  4198f3:	cmp    rcx,r13
  4198f6:	lea    rdi,[rax+rdx*1+0x4]
  4198fb:	lea    rax,[r14+rsi*1+0x4]
  419900:	jbe    419a54 <__flatcc_fb_gen_c_json_printer@@Base+0x1f84>
  419906:	mov    edx,DWORD PTR [rax]
  419908:	add    rax,rdx
  41990b:	je     419a73 <__flatcc_fb_gen_c_json_printer@@Base+0x1fa3>
  419911:	movsxd rdx,DWORD PTR [rax]
  419914:	mov    rsi,rax
  419917:	sub    rsi,rdx
  41991a:	cmp    WORD PTR [rsi],0x5
  41991e:	jbe    4196b0 <__flatcc_fb_gen_c_json_printer@@Base+0x1be0>
  419924:	movzx  edx,WORD PTR [rsi+0x4]
  419928:	test   dx,dx
  41992b:	je     4196b0 <__flatcc_fb_gen_c_json_printer@@Base+0x1be0>
  419931:	add    rax,rdx
  419934:	mov    edx,DWORD PTR [rax]
  419936:	lea    rsi,[rax+rdx*1+0x4]
  41993b:	test   rsi,rsi
  41993e:	je     41979c <__flatcc_fb_gen_c_json_printer@@Base+0x1ccc>
  419944:	test   rdi,rdi
  419947:	mov    r15d,DWORD PTR [rsi-0x4]
  41994b:	je     419a40 <__flatcc_fb_gen_c_json_printer@@Base+0x1f70>
  419951:	mov    r8d,DWORD PTR [rdi-0x4]
  419955:	mov    QWORD PTR [rsp],rcx
  419959:	cmp    r15,r8
  41995c:	mov    rdx,r8
  41995f:	mov    QWORD PTR [rsp+0x8],r8
  419964:	cmovbe rdx,r15
  419968:	call   405070 <strncmp@plt>
  41996d:	test   eax,eax
  41996f:	mov    rcx,QWORD PTR [rsp]
  419973:	je     419a20 <__flatcc_fb_gen_c_json_printer@@Base+0x1f50>
  419979:	test   eax,eax
  41997b:	lea    r15,[r14+rbx*4]
  41997f:	js     4197a3 <__flatcc_fb_gen_c_json_printer@@Base+0x1cd3>
  419985:	jmp    41979c <__flatcc_fb_gen_c_json_printer@@Base+0x1ccc>
  41998a:	nop    WORD PTR [rax+rax*1+0x0]
  419990:	mov    r9,QWORD PTR [rsp+0x10]
  419995:	mov    r10,QWORD PTR [rsp+0x18]
  41999a:	cmp    r9,r10
  41999d:	ja     41987c <__flatcc_fb_gen_c_json_printer@@Base+0x1dac>
  4199a3:	add    DWORD PTR [rsp+0x24],0x4
  4199a8:	test   r12,r12
  4199ab:	jne    419770 <__flatcc_fb_gen_c_json_printer@@Base+0x1ca0>
  4199b1:	mov    rax,QWORD PTR [rsp+0x38]
  4199b6:	add    QWORD PTR [rsp+0x30],0x1
  4199bc:	mov    rbx,QWORD PTR [rsp+0x30]
  4199c1:	mov    eax,DWORD PTR [rax-0x4]
  4199c4:	cmp    rbx,rax
  4199c7:	jae    419a45 <__flatcc_fb_gen_c_json_printer@@Base+0x1f75>
  4199c9:	mov    rbx,QWORD PTR [rsp+0x48]
  4199ce:	mov    eax,DWORD PTR [rbx]
  4199d0:	add    rax,rbx
  4199d3:	je     419a78 <__flatcc_fb_gen_c_json_printer@@Base+0x1fa8>
  4199d9:	movsxd rdx,DWORD PTR [rax]
  4199dc:	mov    rdi,rax
  4199df:	sub    rdi,rdx
  4199e2:	cmp    WORD PTR [rdi],0x7
  4199e6:	jbe    4199fe <__flatcc_fb_gen_c_json_printer@@Base+0x1f2e>
  4199e8:	movzx  edx,WORD PTR [rdi+0x6]
  4199ec:	add    rbx,0x4
  4199f0:	mov    QWORD PTR [rsp+0x48],rbx
  4199f5:	test   dx,dx
  4199f8:	jne    419469 <__flatcc_fb_gen_c_json_printer@@Base+0x1999>
  4199fe:	lea    rcx,[rip+0x2c68b]        # 446090 <_IO_stdin_used@@Base+0x19090>
  419a05:	lea    rsi,[rip+0x2c06c]        # 445a78 <_IO_stdin_used@@Base+0x18a78>
  419a0c:	lea    rdi,[rip+0x2c4fd]        # 445f10 <_IO_stdin_used@@Base+0x18f10>
  419a13:	mov    edx,0xe0
  419a18:	call   405100 <__assert_fail@plt>
  419a1d:	nop    DWORD PTR [rax]
  419a20:	mov    r8,QWORD PTR [rsp+0x8]
  419a25:	cmp    r15,r8
  419a28:	cmova  rbp,r13
  419a2c:	jmp    41979c <__flatcc_fb_gen_c_json_printer@@Base+0x1ccc>
  419a31:	nop    DWORD PTR [rax+0x0]
  419a38:	xor    r10d,r10d
  419a3b:	jmp    41999a <__flatcc_fb_gen_c_json_printer@@Base+0x1eca>
  419a40:	xor    r8d,r8d
  419a43:	jmp    419a25 <__flatcc_fb_gen_c_json_printer@@Base+0x1f55>
  419a45:	add    rsp,0x58
  419a49:	pop    rbx
  419a4a:	pop    rbp
  419a4b:	pop    r12
  419a4d:	pop    r13
  419a4f:	pop    r14
  419a51:	pop    r15
  419a53:	ret    
  419a54:	lea    rcx,[rip+0x2c615]        # 446070 <_IO_stdin_used@@Base+0x19070>
  419a5b:	lea    rsi,[rip+0x2c016]        # 445a78 <_IO_stdin_used@@Base+0x18a78>
  419a62:	lea    rdi,[rip+0x2c4cf]        # 445f38 <_IO_stdin_used@@Base+0x18f38>
  419a69:	mov    edx,0xc0
  419a6e:	call   405100 <__assert_fail@plt>
  419a73:	call   40525b <__sprintf_chk@plt+0x3b>
  419a78:	lea    rcx,[rip+0x2c611]        # 446090 <_IO_stdin_used@@Base+0x19090>
  419a7f:	lea    rsi,[rip+0x2bff2]        # 445a78 <_IO_stdin_used@@Base+0x18a78>
  419a86:	lea    rdi,[rip+0x2c063]        # 445af0 <_IO_stdin_used@@Base+0x18af0>
  419a8d:	mov    edx,0xe0
  419a92:	call   405100 <__assert_fail@plt>
  419a97:	nop    WORD PTR [rax+rax*1+0x0]

0000000000419aa0 <__flatcc_fb_codegen_bfbs_to_buffer@@Base>:
  419aa0:	push   r14
  419aa2:	push   r13
  419aa4:	mov    r13,rdi
  419aa7:	push   r12
  419aa9:	push   rbp
  419aaa:	mov    r14,rsi
  419aad:	push   rbx
  419aae:	mov    rbp,rdx
  419ab1:	mov    r12,rcx
  419ab4:	sub    rsp,0x190
  419abb:	mov    rdi,rsp
  419abe:	mov    rbx,rsp
  419ac1:	mov    rax,QWORD PTR fs:0x28
  419aca:	mov    QWORD PTR [rsp+0x188],rax
  419ad2:	xor    eax,eax
  419ad4:	call   427290 <flatcc_builder_init@@Base>
  419ad9:	mov    esi,DWORD PTR [r13+0xd8]
  419ae0:	lea    rdx,[r13+0xdc]
  419ae7:	mov    rcx,r14
  419aea:	mov    rdi,rsp
  419aed:	call   418590 <__flatcc_fb_gen_c_json_printer@@Base+0xac0>
  419af2:	mov    rdx,QWORD PTR [r12]
  419af6:	mov    rsi,rbp
  419af9:	mov    rdi,rsp
  419afc:	call   42a880 <flatcc_builder_copy_buffer@@Base>
  419b01:	test   rax,rax
  419b04:	je     419b0e <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x6e>
  419b06:	mov    rdi,rbp
  419b09:	call   419380 <__flatcc_fb_gen_c_json_printer@@Base+0x18b0>
  419b0e:	mov    rdi,rbx
  419b11:	call   42a770 <flatcc_builder_get_buffer_size@@Base>
  419b16:	mov    rdi,rbx
  419b19:	mov    QWORD PTR [r12],rax
  419b1d:	call   427460 <flatcc_builder_clear@@Base>
  419b22:	mov    rcx,QWORD PTR [rsp+0x188]
  419b2a:	xor    rcx,QWORD PTR fs:0x28
  419b33:	mov    rax,rbp
  419b36:	jne    419b48 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0xa8>
  419b38:	add    rsp,0x190
  419b3f:	pop    rbx
  419b40:	pop    rbp
  419b41:	pop    r12
  419b43:	pop    r13
  419b45:	pop    r14
  419b47:	ret    
  419b48:	call   4050d0 <__stack_chk_fail@plt>
  419b4d:	nop    DWORD PTR [rax]

0000000000419b50 <__flatcc_fb_codegen_bfbs_alloc_buffer@@Base>:
  419b50:	push   r13
  419b52:	push   r12
  419b54:	mov    r13,rsi
  419b57:	push   rbp
  419b58:	push   rbx
  419b59:	mov    rbp,rdi
  419b5c:	mov    r12,rdx
  419b5f:	sub    rsp,0x198
  419b66:	mov    rdi,rsp
  419b69:	mov    rbx,rsp
  419b6c:	mov    rax,QWORD PTR fs:0x28
  419b75:	mov    QWORD PTR [rsp+0x188],rax
  419b7d:	xor    eax,eax
  419b7f:	call   427290 <flatcc_builder_init@@Base>
  419b84:	mov    esi,DWORD PTR [rbp+0xd8]
  419b8a:	lea    rdx,[rbp+0xdc]
  419b91:	mov    rcx,r13
  419b94:	mov    rdi,rsp
  419b97:	xor    ebp,ebp
  419b99:	call   418590 <__flatcc_fb_gen_c_json_printer@@Base+0xac0>
  419b9e:	test   eax,eax
  419ba0:	jne    419bbd <__flatcc_fb_codegen_bfbs_alloc_buffer@@Base+0x6d>
  419ba2:	mov    rsi,r12
  419ba5:	mov    rdi,rsp
  419ba8:	call   42a8d0 <flatcc_builder_finalize_buffer@@Base>
  419bad:	test   rax,rax
  419bb0:	mov    rbp,rax
  419bb3:	je     419bbd <__flatcc_fb_codegen_bfbs_alloc_buffer@@Base+0x6d>
  419bb5:	mov    rdi,rax
  419bb8:	call   419380 <__flatcc_fb_gen_c_json_printer@@Base+0x18b0>
  419bbd:	mov    rdi,rbx
  419bc0:	call   427460 <flatcc_builder_clear@@Base>
  419bc5:	mov    rcx,QWORD PTR [rsp+0x188]
  419bcd:	xor    rcx,QWORD PTR fs:0x28
  419bd6:	mov    rax,rbp
  419bd9:	jne    419be9 <__flatcc_fb_codegen_bfbs_alloc_buffer@@Base+0x99>
  419bdb:	add    rsp,0x198
  419be2:	pop    rbx
  419be3:	pop    rbp
  419be4:	pop    r12
  419be6:	pop    r13
  419be8:	ret    
  419be9:	call   4050d0 <__stack_chk_fail@plt>
  419bee:	xchg   ax,ax

0000000000419bf0 <__flatcc_fb_codegen_bfbs_to_file@@Base>:
  419bf0:	push   r15
  419bf2:	push   r14
  419bf4:	push   r13
  419bf6:	push   r12
  419bf8:	mov    r12,rsi
  419bfb:	push   rbp
  419bfc:	push   rbx
  419bfd:	mov    rbp,rdi
  419c00:	sub    rsp,0x18
  419c04:	mov    rbx,QWORD PTR [rdi+0x108]
  419c0b:	mov    r14d,DWORD PTR [rdi+0x80]
  419c12:	mov    rax,QWORD PTR fs:0x28
  419c1b:	mov    QWORD PTR [rsp+0x8],rax
  419c20:	xor    eax,eax
  419c22:	mov    r13,QWORD PTR [rsi+0x110]
  419c29:	test   rbx,rbx
  419c2c:	je     419d50 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x160>
  419c32:	mov    rdi,rbx
  419c35:	call   4050c0 <strlen@plt>
  419c3a:	mov    r15,rax
  419c3d:	mov    rdi,r13
  419c40:	call   4050c0 <strlen@plt>
  419c45:	test   r14d,r14d
  419c48:	je     419d00 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x110>
  419c4e:	mov    rax,QWORD PTR [rip+0x3737b]        # 450fd0 <stdout@GLIBC_2.2.5>
  419c55:	mov    rbx,QWORD PTR [rax]
  419c58:	test   rbx,rbx
  419c5b:	je     419da8 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1b8>
  419c61:	mov    rdi,rbp
  419c64:	mov    rdx,rsp
  419c67:	mov    rsi,r12
  419c6a:	call   419b50 <__flatcc_fb_codegen_bfbs_alloc_buffer@@Base>
  419c6f:	test   rax,rax
  419c72:	mov    rbp,rax
  419c75:	je     419d60 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x170>
  419c7b:	mov    rdx,QWORD PTR [rsp]
  419c7f:	mov    rcx,rbx
  419c82:	mov    esi,0x1
  419c87:	mov    rdi,rax
  419c8a:	xor    r12d,r12d
  419c8d:	call   4051f0 <fwrite@plt>
  419c92:	cmp    rax,QWORD PTR [rsp]
  419c96:	je     419cbb <__flatcc_fb_codegen_bfbs_to_file@@Base+0xcb>
  419c98:	mov    rax,QWORD PTR [rip+0x37349]        # 450fe8 <stderr@GLIBC_2.2.5>
  419c9f:	lea    rdx,[rip+0x2c32a]        # 445fd0 <_IO_stdin_used@@Base+0x18fd0>
  419ca6:	mov    esi,0x1
  419cab:	mov    r12d,0xffffffff
  419cb1:	mov    rdi,QWORD PTR [rax]
  419cb4:	xor    eax,eax
  419cb6:	call   405200 <__fprintf_chk@plt>
  419cbb:	mov    rdi,rbp
  419cbe:	call   405040 <free@plt>
  419cc3:	mov    rax,QWORD PTR [rip+0x37306]        # 450fd0 <stdout@GLIBC_2.2.5>
  419cca:	cmp    QWORD PTR [rax],rbx
  419ccd:	je     419cd7 <__flatcc_fb_codegen_bfbs_to_file@@Base+0xe7>
  419ccf:	mov    rdi,rbx
  419cd2:	call   4050b0 <fclose@plt>
  419cd7:	mov    rcx,QWORD PTR [rsp+0x8]
  419cdc:	xor    rcx,QWORD PTR fs:0x28
  419ce5:	mov    eax,r12d
  419ce8:	jne    419db3 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1c3>
  419cee:	add    rsp,0x18
  419cf2:	pop    rbx
  419cf3:	pop    rbp
  419cf4:	pop    r12
  419cf6:	pop    r13
  419cf8:	pop    r14
  419cfa:	pop    r15
  419cfc:	ret    
  419cfd:	nop    DWORD PTR [rax]
  419d00:	lea    r8,[rip+0x14add]        # 42e7e4 <_IO_stdin_used@@Base+0x17e4>
  419d07:	mov    rdx,r13
  419d0a:	mov    r9d,0x1
  419d10:	mov    rcx,rax
  419d13:	mov    rsi,r15
  419d16:	mov    rdi,rbx
  419d19:	call   41cc30 <__flatcc_fb_create_join_path_n@@Base>
  419d1e:	test   rax,rax
  419d21:	mov    r13,rax
  419d24:	je     419db8 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1c8>
  419d2a:	lea    rsi,[rip+0x14af8]        # 42e829 <_IO_stdin_used@@Base+0x1829>
  419d31:	mov    rdi,rax
  419d34:	call   4051d0 <fopen@plt>
  419d39:	test   rax,rax
  419d3c:	mov    rbx,rax
  419d3f:	je     419d80 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x190>
  419d41:	mov    rdi,r13
  419d44:	call   405040 <free@plt>
  419d49:	jmp    419c58 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x68>
  419d4e:	xchg   ax,ax
  419d50:	xor    r15d,r15d
  419d53:	lea    rbx,[rip+0x2bab4]        # 44580e <_IO_stdin_used@@Base+0x1880e>
  419d5a:	jmp    419c3d <__flatcc_fb_codegen_bfbs_to_file@@Base+0x4d>
  419d5f:	nop
  419d60:	lea    rsi,[rip+0x2c241]        # 445fa8 <_IO_stdin_used@@Base+0x18fa8>
  419d67:	mov    edi,0x1
  419d6c:	xor    eax,eax
  419d6e:	mov    r12d,0xffffffff
  419d74:	call   4051c0 <__printf_chk@plt>
  419d79:	jmp    419cc3 <__flatcc_fb_codegen_bfbs_to_file@@Base+0xd3>
  419d7e:	xchg   ax,ax
  419d80:	mov    rax,QWORD PTR [rip+0x37261]        # 450fe8 <stderr@GLIBC_2.2.5>
  419d87:	lea    rdx,[rip+0x2c1e2]        # 445f70 <_IO_stdin_used@@Base+0x18f70>
  419d8e:	mov    rcx,r13
  419d91:	mov    esi,0x1
  419d96:	mov    rdi,QWORD PTR [rax]
  419d99:	xor    eax,eax
  419d9b:	call   405200 <__fprintf_chk@plt>
  419da0:	jmp    419d41 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x151>
  419da2:	nop    WORD PTR [rax+rax*1+0x0]
  419da8:	mov    r12d,0xffffffff
  419dae:	jmp    419cd7 <__flatcc_fb_codegen_bfbs_to_file@@Base+0xe7>
  419db3:	call   4050d0 <__stack_chk_fail@plt>
  419db8:	mov    rax,QWORD PTR [rip+0x37229]        # 450fe8 <stderr@GLIBC_2.2.5>
  419dbf:	lea    rdx,[rip+0x148f2]        # 42e6b8 <_IO_stdin_used@@Base+0x16b8>
  419dc6:	mov    esi,0x1
  419dcb:	mov    rdi,QWORD PTR [rax]
  419dce:	xor    eax,eax
  419dd0:	call   405200 <__fprintf_chk@plt>
  419dd5:	mov    edi,0x1
  419dda:	call   4051e0 <exit@plt>
  419ddf:	nop
  419de0:	push   rbx
  419de1:	mov    rbx,rdi
  419de4:	mov    rdi,QWORD PTR [rdi]
  419de7:	test   rdi,rdi
  419dea:	je     419df1 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x201>
  419dec:	call   405040 <free@plt>
  419df1:	mov    QWORD PTR [rbx],0x0
  419df8:	mov    QWORD PTR [rbx+0x8],0x0
  419e00:	mov    QWORD PTR [rbx+0x10],0x0
  419e08:	mov    QWORD PTR [rbx+0x18],0x0
  419e10:	pop    rbx
  419e11:	ret    
  419e12:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  419e1d:	nop    DWORD PTR [rax]
  419e20:	push   r15
  419e22:	push   r14
  419e24:	push   r13
  419e26:	push   r12
  419e28:	push   rbp
  419e29:	push   rbx
  419e2a:	sub    rsp,0x38
  419e2e:	mov    r12,QWORD PTR [rdi]
  419e31:	mov    rcx,QWORD PTR fs:0x28
  419e3a:	mov    QWORD PTR [rsp+0x28],rcx
  419e3f:	xor    ecx,ecx
  419e41:	mov    QWORD PTR [rsp+0x10],rdi
  419e46:	mov    QWORD PTR [rsp+0x8],rsi
  419e4b:	test   r12,r12
  419e4e:	je     419ed0 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x2e0>
  419e54:	mov    rax,QWORD PTR [rsp+0x10]
  419e59:	mov    rdi,QWORD PTR [rsp+0x8]
  419e5e:	mov    r14,rdx
  419e61:	lea    rcx,[rsp+0x20]
  419e66:	mov    edx,0x2f693b52
  419e6b:	mov    rsi,r14
  419e6e:	mov    rax,QWORD PTR [rax+0x18]
  419e72:	mov    QWORD PTR [rsp+0x18],rax
  419e77:	lea    rbp,[rax-0x1]
  419e7b:	call   42b180 <cmetrohash64_1@@Base>
  419e80:	mov    ecx,DWORD PTR [rsp+0x20]
  419e84:	mov    rax,rbp
  419e87:	and    rax,rcx
  419e8a:	lea    r15,[r12+rax*8]
  419e8e:	mov    rbx,QWORD PTR [r15]
  419e91:	test   rbx,rbx
  419e94:	je     419ed0 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x2e0>
  419e96:	lea    r13,[rcx+0x1]
  419e9a:	nop    WORD PTR [rax+rax*1+0x0]
  419ea0:	cmp    rbx,0x2
  419ea4:	je     419eba <__flatcc_fb_codegen_bfbs_to_file@@Base+0x2ca>
  419ea6:	mov    rdi,QWORD PTR [rsp+0x8]
  419eab:	mov    rdx,r14
  419eae:	mov    rsi,rbx
  419eb1:	call   405070 <strncmp@plt>
  419eb6:	test   eax,eax
  419eb8:	je     419ef8 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x308>
  419eba:	mov    rax,r13
  419ebd:	add    r13,0x1
  419ec1:	and    rax,rbp
  419ec4:	lea    r15,[r12+rax*8]
  419ec8:	mov    rbx,QWORD PTR [r15]
  419ecb:	test   rbx,rbx
  419ece:	jne    419ea0 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x2b0>
  419ed0:	xor    ebx,ebx
  419ed2:	mov    rcx,QWORD PTR [rsp+0x28]
  419ed7:	xor    rcx,QWORD PTR fs:0x28
  419ee0:	mov    rax,rbx
  419ee3:	jne    419f0b <__flatcc_fb_codegen_bfbs_to_file@@Base+0x31b>
  419ee5:	add    rsp,0x38
  419ee9:	pop    rbx
  419eea:	pop    rbp
  419eeb:	pop    r12
  419eed:	pop    r13
  419eef:	pop    r14
  419ef1:	pop    r15
  419ef3:	ret    
  419ef4:	nop    DWORD PTR [rax+0x0]
  419ef8:	mov    rax,QWORD PTR [rsp+0x10]
  419efd:	mov    QWORD PTR [r15],0x2
  419f04:	sub    QWORD PTR [rax+0x10],0x1
  419f09:	jmp    419ed2 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x2e2>
  419f0b:	call   4050d0 <__stack_chk_fail@plt>
  419f10:	push   r14
  419f12:	push   r13
  419f14:	push   r12
  419f16:	push   rbp
  419f17:	mov    r12,rdi
  419f1a:	push   rbx
  419f1b:	mov    ebx,0x4
  419f20:	sub    rsp,0x30
  419f24:	mov    r13,QWORD PTR [rdi]
  419f27:	mov    rax,QWORD PTR fs:0x28
  419f30:	mov    QWORD PTR [rsp+0x28],rax
  419f35:	xor    eax,eax
  419f37:	cmp    QWORD PTR [rdi+0x10],rsi
  419f3b:	cmovae rsi,QWORD PTR [rdi+0x10]
  419f40:	cmp    rsi,0x2
  419f44:	jbe    419f63 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x373>
  419f46:	nop    WORD PTR cs:[rax+rax*1+0x0]
  419f50:	add    rbx,rbx
  419f53:	imul   rax,rbx,0xb3
  419f5a:	shr    rax,0x8
  419f5e:	cmp    rsi,rax
  419f61:	ja     419f50 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x360>
  419f63:	mov    esi,0x8
  419f68:	mov    rdi,rbx
  419f6b:	call   405140 <calloc@plt>
  419f70:	test   rax,rax
  419f73:	mov    QWORD PTR [rsp],rax
  419f77:	je     41a02f <__flatcc_fb_codegen_bfbs_to_file@@Base+0x43f>
  419f7d:	mov    QWORD PTR [rsp+0x18],rbx
  419f82:	xor    ebx,ebx
  419f84:	cmp    QWORD PTR [r12+0x18],0x0
  419f8a:	mov    QWORD PTR [rsp+0x8],0x0
  419f93:	mov    QWORD PTR [rsp+0x10],0x0
  419f9c:	mov    r14,rsp
  419f9f:	je     419fe2 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x3f2>
  419fa1:	nop    DWORD PTR [rax+0x0]
  419fa8:	mov    rbp,QWORD PTR [r13+rbx*8+0x0]
  419fad:	test   rbp,rbp
  419fb0:	je     419fd7 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x3e7>
  419fb2:	cmp    rbp,0x2
  419fb6:	je     419fd7 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x3e7>
  419fb8:	mov    rdi,rbp
  419fbb:	call   4050c0 <strlen@plt>
  419fc0:	mov    r8d,0x3
  419fc6:	mov    rcx,rbp
  419fc9:	mov    rdx,rax
  419fcc:	mov    rsi,rbp
  419fcf:	mov    rdi,r14
  419fd2:	call   41a040 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x450>
  419fd7:	add    rbx,0x1
  419fdb:	cmp    QWORD PTR [r12+0x18],rbx
  419fe0:	ja     419fa8 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x3b8>
  419fe2:	mov    rdi,r12
  419fe5:	call   419de0 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1f0>
  419fea:	mov    rax,QWORD PTR [rsp]
  419fee:	mov    QWORD PTR [r12],rax
  419ff2:	mov    rax,QWORD PTR [rsp+0x8]
  419ff7:	mov    QWORD PTR [r12+0x8],rax
  419ffc:	mov    rax,QWORD PTR [rsp+0x10]
  41a001:	mov    QWORD PTR [r12+0x10],rax
  41a006:	mov    rax,QWORD PTR [rsp+0x18]
  41a00b:	mov    QWORD PTR [r12+0x18],rax
  41a010:	xor    eax,eax
  41a012:	mov    rdx,QWORD PTR [rsp+0x28]
  41a017:	xor    rdx,QWORD PTR fs:0x28
  41a020:	jne    41a036 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x446>
  41a022:	add    rsp,0x30
  41a026:	pop    rbx
  41a027:	pop    rbp
  41a028:	pop    r12
  41a02a:	pop    r13
  41a02c:	pop    r14
  41a02e:	ret    
  41a02f:	mov    eax,0xffffffff
  41a034:	jmp    41a012 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x422>
  41a036:	call   4050d0 <__stack_chk_fail@plt>
  41a03b:	nop    DWORD PTR [rax+rax*1+0x0]
  41a040:	push   r15
  41a042:	push   r14
  41a044:	mov    rax,rcx
  41a047:	push   r13
  41a049:	push   r12
  41a04b:	push   rbp
  41a04c:	push   rbx
  41a04d:	sub    rsp,0x48
  41a051:	mov    QWORD PTR [rsp+0x18],rcx
  41a056:	mov    QWORD PTR [rsp+0x20],rdi
  41a05b:	mov    rcx,QWORD PTR fs:0x28
  41a064:	mov    QWORD PTR [rsp+0x38],rcx
  41a069:	xor    ecx,ecx
  41a06b:	test   rax,rax
  41a06e:	mov    QWORD PTR [rsp+0x8],rsi
  41a073:	mov    DWORD PTR [rsp+0x2c],r8d
  41a078:	je     41a2a6 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x6b6>
  41a07e:	cmp    QWORD PTR [rsp+0x18],0x2
  41a084:	je     41a287 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x697>
  41a08a:	cmp    QWORD PTR [rsp+0x18],0x1
  41a090:	je     41a268 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x678>
  41a096:	mov    rcx,QWORD PTR [rsp+0x20]
  41a09b:	mov    r13,rdx
  41a09e:	mov    rbx,QWORD PTR [rcx+0x18]
  41a0a2:	mov    rsi,QWORD PTR [rcx+0x10]
  41a0a6:	imul   rax,rbx,0xb3
  41a0ad:	shr    rax,0x8
  41a0b1:	cmp    rsi,rax
  41a0b4:	jb     41a0d0 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x4e0>
  41a0b6:	add    rsi,rsi
  41a0b9:	mov    rdi,rcx
  41a0bc:	mov    rbx,rcx
  41a0bf:	call   419f10 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x320>
  41a0c4:	test   eax,eax
  41a0c6:	jne    41a23a <__flatcc_fb_codegen_bfbs_to_file@@Base+0x64a>
  41a0cc:	mov    rbx,QWORD PTR [rbx+0x18]
  41a0d0:	mov    rax,QWORD PTR [rsp+0x20]
  41a0d5:	mov    rdi,QWORD PTR [rsp+0x8]
  41a0da:	lea    rcx,[rsp+0x30]
  41a0df:	mov    edx,0x2f693b52
  41a0e4:	mov    rsi,r13
  41a0e7:	sub    rbx,0x1
  41a0eb:	mov    rbp,QWORD PTR [rax]
  41a0ee:	call   42b180 <cmetrohash64_1@@Base>
  41a0f3:	mov    ecx,DWORD PTR [rsp+0x2c]
  41a0f7:	mov    r8d,DWORD PTR [rsp+0x30]
  41a0fc:	mov    rax,rbx
  41a0ff:	lea    edx,[rcx-0x2]
  41a102:	and    rax,r8
  41a105:	cmp    edx,0x1
  41a108:	jbe    41a1e2 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x5f2>
  41a10e:	lea    r14,[rbp+rax*8+0x0]
  41a113:	lea    r12,[r8+0x1]
  41a117:	mov    QWORD PTR [rsp+0x10],0x0
  41a120:	mov    r15,QWORD PTR [r14]
  41a123:	test   r15,r15
  41a126:	jne    41a15f <__flatcc_fb_codegen_bfbs_to_file@@Base+0x56f>
  41a128:	jmp    41a18c <__flatcc_fb_codegen_bfbs_to_file@@Base+0x59c>
  41a12a:	nop    WORD PTR [rax+rax*1+0x0]
  41a130:	mov    rdi,QWORD PTR [rsp+0x8]
  41a135:	mov    rdx,r13
  41a138:	mov    rsi,r15
  41a13b:	call   405070 <strncmp@plt>
  41a140:	test   eax,eax
  41a142:	je     41a1d0 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x5e0>
  41a148:	mov    rax,rbx
  41a14b:	and    rax,r12
  41a14e:	add    r12,0x1
  41a152:	lea    r14,[rbp+rax*8+0x0]
  41a157:	mov    r15,QWORD PTR [r14]
  41a15a:	test   r15,r15
  41a15d:	je     41a180 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x590>
  41a15f:	cmp    r15,0x2
  41a163:	jne    41a130 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x540>
  41a165:	mov    rax,QWORD PTR [rsp+0x10]
  41a16a:	test   rax,rax
  41a16d:	cmovne r14,rax
  41a171:	mov    QWORD PTR [rsp+0x10],r14
  41a176:	jmp    41a148 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x558>
  41a178:	nop    DWORD PTR [rax+rax*1+0x0]
  41a180:	mov    rax,QWORD PTR [rsp+0x10]
  41a185:	test   rax,rax
  41a188:	cmovne r14,rax
  41a18c:	mov    rax,QWORD PTR [rsp+0x20]
  41a191:	mov    QWORD PTR [rsp+0x10],r14
  41a196:	xor    r15d,r15d
  41a199:	mov    rcx,QWORD PTR [rsp+0x18]
  41a19e:	add    QWORD PTR [rax+0x10],0x1
  41a1a3:	mov    rax,QWORD PTR [rsp+0x10]
  41a1a8:	mov    QWORD PTR [rax],rcx
  41a1ab:	mov    rcx,QWORD PTR [rsp+0x38]
  41a1b0:	xor    rcx,QWORD PTR fs:0x28
  41a1b9:	mov    rax,r15
  41a1bc:	jne    41a235 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x645>
  41a1be:	add    rsp,0x48
  41a1c2:	pop    rbx
  41a1c3:	pop    rbp
  41a1c4:	pop    r12
  41a1c6:	pop    r13
  41a1c8:	pop    r14
  41a1ca:	pop    r15
  41a1cc:	ret    
  41a1cd:	nop    DWORD PTR [rax]
  41a1d0:	mov    eax,DWORD PTR [rsp+0x2c]
  41a1d4:	test   eax,eax
  41a1d6:	jne    41a1ab <__flatcc_fb_codegen_bfbs_to_file@@Base+0x5bb>
  41a1d8:	mov    rax,QWORD PTR [rsp+0x18]
  41a1dd:	mov    QWORD PTR [r14],rax
  41a1e0:	jmp    41a1ab <__flatcc_fb_codegen_bfbs_to_file@@Base+0x5bb>
  41a1e2:	lea    rdx,[rbp+rax*8+0x0]
  41a1e7:	mov    rcx,QWORD PTR [rsp+0x20]
  41a1ec:	mov    rax,QWORD PTR [rdx]
  41a1ef:	add    QWORD PTR [rcx+0x10],0x1
  41a1f4:	test   rax,rax
  41a1f7:	je     41a225 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x635>
  41a1f9:	cmp    rax,0x2
  41a1fd:	je     41a225 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x635>
  41a1ff:	add    r8,0x1
  41a203:	jmp    41a20e <__flatcc_fb_codegen_bfbs_to_file@@Base+0x61e>
  41a205:	nop    DWORD PTR [rax]
  41a208:	cmp    rax,0x2
  41a20c:	je     41a225 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x635>
  41a20e:	mov    rax,rbx
  41a211:	and    rax,r8
  41a214:	add    r8,0x1
  41a218:	lea    rdx,[rbp+rax*8+0x0]
  41a21d:	mov    rax,QWORD PTR [rdx]
  41a220:	test   rax,rax
  41a223:	jne    41a208 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x618>
  41a225:	mov    rax,QWORD PTR [rsp+0x18]
  41a22a:	xor    r15d,r15d
  41a22d:	mov    QWORD PTR [rdx],rax
  41a230:	jmp    41a1ab <__flatcc_fb_codegen_bfbs_to_file@@Base+0x5bb>
  41a235:	call   4050d0 <__stack_chk_fail@plt>
  41a23a:	mov    rax,QWORD PTR [rip+0x36da7]        # 450fe8 <stderr@GLIBC_2.2.5>
  41a241:	lea    rcx,[rip+0x2bfd8]        # 446220 <_IO_stdin_used@@Base+0x19220>
  41a248:	lea    rdx,[rip+0x2c047]        # 446296 <_IO_stdin_used@@Base+0x19296>
  41a24f:	mov    esi,0x1
  41a254:	mov    rdi,QWORD PTR [rax]
  41a257:	xor    eax,eax
  41a259:	call   405200 <__fprintf_chk@plt>
  41a25e:	mov    edi,0x1
  41a263:	call   4051e0 <exit@plt>
  41a268:	lea    rcx,[rip+0x2c041]        # 4462b0 <_IO_stdin_used@@Base+0x192b0>
  41a26f:	lea    rsi,[rip+0x2bf3a]        # 4461b0 <_IO_stdin_used@@Base+0x191b0>
  41a276:	lea    rdi,[rip+0x2c004]        # 446281 <_IO_stdin_used@@Base+0x19281>
  41a27d:	mov    edx,0x74
  41a282:	call   405100 <__assert_fail@plt>
  41a287:	lea    rcx,[rip+0x2c022]        # 4462b0 <_IO_stdin_used@@Base+0x192b0>
  41a28e:	lea    rsi,[rip+0x2bf1b]        # 4461b0 <_IO_stdin_used@@Base+0x191b0>
  41a295:	lea    rdi,[rip+0x2bfce]        # 44626a <_IO_stdin_used@@Base+0x1926a>
  41a29c:	mov    edx,0x73
  41a2a1:	call   405100 <__assert_fail@plt>
  41a2a6:	lea    rcx,[rip+0x2c003]        # 4462b0 <_IO_stdin_used@@Base+0x192b0>
  41a2ad:	lea    rsi,[rip+0x2befc]        # 4461b0 <_IO_stdin_used@@Base+0x191b0>
  41a2b4:	lea    rdi,[rip+0x2bf98]        # 446253 <_IO_stdin_used@@Base+0x19253>
  41a2bb:	mov    edx,0x72
  41a2c0:	call   405100 <__assert_fail@plt>
  41a2c5:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  41a2d0:	push   r15
  41a2d2:	push   r14
  41a2d4:	push   r13
  41a2d6:	push   r12
  41a2d8:	push   rbp
  41a2d9:	push   rbx
  41a2da:	sub    rsp,0x18
  41a2de:	mov    rax,QWORD PTR fs:0x28
  41a2e7:	mov    QWORD PTR [rsp+0x8],rax
  41a2ec:	xor    eax,eax
  41a2ee:	test   rdi,rdi
  41a2f1:	je     41a35c <__flatcc_fb_codegen_bfbs_to_file@@Base+0x76c>
  41a2f3:	mov    r14,rdx
  41a2f6:	mov    r15,rcx
  41a2f9:	mov    r12,QWORD PTR [rsi]
  41a2fc:	mov    r13,rdi
  41a2ff:	mov    rcx,rsp
  41a302:	mov    edx,0x2f693b52
  41a307:	mov    rsi,r15
  41a30a:	mov    rdi,r14
  41a30d:	call   42b180 <cmetrohash64_1@@Base>
  41a312:	mov    ebp,DWORD PTR [rsp]
  41a315:	sub    r12,0x1
  41a319:	mov    rax,r12
  41a31c:	and    rax,rbp
  41a31f:	mov    rbx,QWORD PTR [r13+rax*8+0x0]
  41a324:	test   rbx,rbx
  41a327:	je     41a35c <__flatcc_fb_codegen_bfbs_to_file@@Base+0x76c>
  41a329:	add    rbp,0x1
  41a32d:	nop    DWORD PTR [rax]
  41a330:	cmp    rbx,0x2
  41a334:	je     41a348 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x758>
  41a336:	mov    rdx,r15
  41a339:	mov    rsi,rbx
  41a33c:	mov    rdi,r14
  41a33f:	call   405070 <strncmp@plt>
  41a344:	test   eax,eax
  41a346:	je     41a35e <__flatcc_fb_codegen_bfbs_to_file@@Base+0x76e>
  41a348:	mov    rax,r12
  41a34b:	and    rax,rbp
  41a34e:	add    rbp,0x1
  41a352:	mov    rbx,QWORD PTR [r13+rax*8+0x0]
  41a357:	test   rbx,rbx
  41a35a:	jne    41a330 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x740>
  41a35c:	xor    ebx,ebx
  41a35e:	mov    rcx,QWORD PTR [rsp+0x8]
  41a363:	xor    rcx,QWORD PTR fs:0x28
  41a36c:	mov    rax,rbx
  41a36f:	jne    41a380 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x790>
  41a371:	add    rsp,0x18
  41a375:	pop    rbx
  41a376:	pop    rbp
  41a377:	pop    r12
  41a379:	pop    r13
  41a37b:	pop    r14
  41a37d:	pop    r15
  41a37f:	ret    
  41a380:	call   4050d0 <__stack_chk_fail@plt>
  41a385:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

000000000041a390 <str_set_clear@@Base>:
  41a390:	jmp    419de0 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1f0>
  41a395:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

000000000041a3a0 <str_set_destroy@@Base>:
  41a3a0:	test   rsi,rsi
  41a3a3:	push   r14
  41a3a5:	push   r13
  41a3a7:	push   r12
  41a3a9:	push   rbp
  41a3aa:	mov    rbp,rdi
  41a3ad:	push   rbx
  41a3ae:	je     41a3e7 <str_set_destroy@@Base+0x47>
  41a3b0:	cmp    QWORD PTR [rdi+0x18],0x0
  41a3b5:	mov    r12,QWORD PTR [rdi]
  41a3b8:	je     41a3e7 <str_set_destroy@@Base+0x47>
  41a3ba:	mov    r13,rsi
  41a3bd:	mov    r14,rdx
  41a3c0:	xor    ebx,ebx
  41a3c2:	nop    WORD PTR [rax+rax*1+0x0]
  41a3c8:	mov    rsi,QWORD PTR [r12+rbx*8]
  41a3cc:	test   rsi,rsi
  41a3cf:	je     41a3dd <str_set_destroy@@Base+0x3d>
  41a3d1:	cmp    rsi,0x2
  41a3d5:	je     41a3dd <str_set_destroy@@Base+0x3d>
  41a3d7:	mov    rdi,r14
  41a3da:	call   r13
  41a3dd:	add    rbx,0x1
  41a3e1:	cmp    rbx,QWORD PTR [rbp+0x18]
  41a3e5:	jb     41a3c8 <str_set_destroy@@Base+0x28>
  41a3e7:	pop    rbx
  41a3e8:	mov    rdi,rbp
  41a3eb:	pop    rbp
  41a3ec:	pop    r12
  41a3ee:	pop    r13
  41a3f0:	pop    r14
  41a3f2:	jmp    419de0 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1f0>
  41a3f7:	nop    WORD PTR [rax+rax*1+0x0]

000000000041a400 <str_set_init@@Base>:
  41a400:	push   rbp
  41a401:	push   rbx
  41a402:	mov    rbp,rdi
  41a405:	mov    ebx,0x4
  41a40a:	sub    rsp,0x8
  41a40e:	cmp    rsi,0x2
  41a412:	jbe    41a42b <str_set_init@@Base+0x2b>
  41a414:	nop    DWORD PTR [rax+0x0]
  41a418:	add    rbx,rbx
  41a41b:	imul   rax,rbx,0xb3
  41a422:	shr    rax,0x8
  41a426:	cmp    rsi,rax
  41a429:	ja     41a418 <str_set_init@@Base+0x18>
  41a42b:	mov    esi,0x8
  41a430:	mov    rdi,rbx
  41a433:	call   405140 <calloc@plt>
  41a438:	test   rax,rax
  41a43b:	mov    QWORD PTR [rbp+0x0],rax
  41a43f:	je     41a45e <str_set_init@@Base+0x5e>
  41a441:	mov    QWORD PTR [rbp+0x8],0x0
  41a449:	mov    QWORD PTR [rbp+0x18],rbx
  41a44d:	xor    eax,eax
  41a44f:	mov    QWORD PTR [rbp+0x10],0x0
  41a457:	add    rsp,0x8
  41a45b:	pop    rbx
  41a45c:	pop    rbp
  41a45d:	ret    
  41a45e:	mov    eax,0xffffffff
  41a463:	jmp    41a457 <str_set_init@@Base+0x57>
  41a465:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

000000000041a470 <str_set_resize@@Base>:
  41a470:	jmp    419f10 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x320>
  41a475:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

000000000041a480 <str_set_insert@@Base>:
  41a480:	jmp    41a040 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x450>
  41a485:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

000000000041a490 <str_set_insert_item@@Base>:
  41a490:	push   r12
  41a492:	push   rbp
  41a493:	mov    r12d,edx
  41a496:	push   rbx
  41a497:	mov    rbp,rdi
  41a49a:	mov    rbx,rsi
  41a49d:	mov    rdi,rsi
  41a4a0:	call   4050c0 <strlen@plt>
  41a4a5:	mov    r8d,r12d
  41a4a8:	mov    rcx,rbx
  41a4ab:	mov    rsi,rbx
  41a4ae:	mov    rdi,rbp
  41a4b1:	mov    rdx,rax
  41a4b4:	pop    rbx
  41a4b5:	pop    rbp
  41a4b6:	pop    r12
  41a4b8:	jmp    41a040 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x450>
  41a4bd:	nop    DWORD PTR [rax]

000000000041a4c0 <str_set_find@@Base>:
  41a4c0:	mov    rax,rsi
  41a4c3:	lea    rsi,[rdi+0x18]
  41a4c7:	mov    rdi,QWORD PTR [rdi]
  41a4ca:	mov    rcx,rdx
  41a4cd:	mov    rdx,rax
  41a4d0:	jmp    41a2d0 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x6e0>
  41a4d5:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

000000000041a4e0 <str_set_find_item@@Base>:
  41a4e0:	push   rbp
  41a4e1:	push   rbx
  41a4e2:	mov    rbx,rdi
  41a4e5:	mov    rdi,rsi
  41a4e8:	mov    rbp,rsi
  41a4eb:	sub    rsp,0x8
  41a4ef:	call   4050c0 <strlen@plt>
  41a4f4:	mov    rdi,QWORD PTR [rbx]
  41a4f7:	add    rsp,0x8
  41a4fb:	lea    rsi,[rbx+0x18]
  41a4ff:	mov    rdx,rbp
  41a502:	mov    rcx,rax
  41a505:	pop    rbx
  41a506:	pop    rbp
  41a507:	jmp    41a2d0 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x6e0>
  41a50c:	nop    DWORD PTR [rax+0x0]

000000000041a510 <str_set_remove@@Base>:
  41a510:	jmp    419e20 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x230>
  41a515:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

000000000041a520 <str_set_remove_item@@Base>:
  41a520:	push   rbp
  41a521:	push   rbx
  41a522:	mov    rbp,rdi
  41a525:	mov    rdi,rsi
  41a528:	mov    rbx,rsi
  41a52b:	sub    rsp,0x8
  41a52f:	call   4050c0 <strlen@plt>
  41a534:	add    rsp,0x8
  41a538:	mov    rsi,rbx
  41a53b:	mov    rdi,rbp
  41a53e:	pop    rbx
  41a53f:	pop    rbp
  41a540:	mov    rdx,rax
  41a543:	jmp    419e20 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x230>
  41a548:	nop    DWORD PTR [rax+rax*1+0x0]

000000000041a550 <str_set_visit@@Base>:
  41a550:	push   r14
  41a552:	push   r13
  41a554:	push   r12
  41a556:	push   rbp
  41a557:	push   rbx
  41a558:	cmp    QWORD PTR [rdi+0x18],0x0
  41a55d:	mov    r12,QWORD PTR [rdi]
  41a560:	je     41a58f <str_set_visit@@Base+0x3f>
  41a562:	mov    rbp,rdi
  41a565:	mov    r14,rsi
  41a568:	mov    r13,rdx
  41a56b:	xor    ebx,ebx
  41a56d:	nop    DWORD PTR [rax]
  41a570:	mov    rsi,QWORD PTR [r12+rbx*8]
  41a574:	test   rsi,rsi
  41a577:	je     41a585 <str_set_visit@@Base+0x35>
  41a579:	cmp    rsi,0x2
  41a57d:	je     41a585 <str_set_visit@@Base+0x35>
  41a57f:	mov    rdi,r13
  41a582:	call   r14
  41a585:	add    rbx,0x1
  41a589:	cmp    rbx,QWORD PTR [rbp+0x18]
  41a58d:	jb     41a570 <str_set_visit@@Base+0x20>
  41a58f:	pop    rbx
  41a590:	pop    rbp
  41a591:	pop    r12
  41a593:	pop    r13
  41a595:	pop    r14
  41a597:	ret    
  41a598:	nop    DWORD PTR [rax+rax*1+0x0]
  41a5a0:	push   rbx
  41a5a1:	mov    rbx,rdi
  41a5a4:	mov    rdi,QWORD PTR [rdi]
  41a5a7:	test   rdi,rdi
  41a5aa:	je     41a5b1 <str_set_visit@@Base+0x61>
  41a5ac:	call   405040 <free@plt>
  41a5b1:	mov    QWORD PTR [rbx],0x0
  41a5b8:	mov    QWORD PTR [rbx+0x8],0x0
  41a5c0:	mov    QWORD PTR [rbx+0x10],0x0
  41a5c8:	mov    QWORD PTR [rbx+0x18],0x0
  41a5d0:	pop    rbx
  41a5d1:	ret    
  41a5d2:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  41a5dd:	nop    DWORD PTR [rax]
  41a5e0:	push   r15
  41a5e2:	push   r14
  41a5e4:	push   r13
  41a5e6:	push   r12
  41a5e8:	push   rbp
  41a5e9:	push   rbx
  41a5ea:	sub    rsp,0x28
  41a5ee:	mov    rax,QWORD PTR fs:0x28
  41a5f7:	mov    QWORD PTR [rsp+0x18],rax
  41a5fc:	xor    eax,eax
  41a5fe:	test   rdx,rdx
  41a601:	je     41a7cf <str_set_visit@@Base+0x27f>
  41a607:	cmp    rdx,0x2
  41a60b:	mov    r14,rdx
  41a60e:	je     41a7b0 <str_set_visit@@Base+0x260>
  41a614:	cmp    rdx,0x1
  41a618:	je     41a791 <str_set_visit@@Base+0x241>
  41a61e:	mov    rbx,QWORD PTR [rdi+0x18]
  41a622:	mov    r13,rsi
  41a625:	mov    rsi,QWORD PTR [rdi+0x10]
  41a629:	mov    r15,rdi
  41a62c:	mov    ebp,ecx
  41a62e:	imul   rax,rbx,0xb3
  41a635:	shr    rax,0x8
  41a639:	cmp    rsi,rax
  41a63c:	jb     41a652 <str_set_visit@@Base+0x102>
  41a63e:	add    rsi,rsi
  41a641:	call   41a800 <str_set_visit@@Base+0x2b0>
  41a646:	test   eax,eax
  41a648:	jne    41a763 <str_set_visit@@Base+0x213>
  41a64e:	mov    rbx,QWORD PTR [r15+0x18]
  41a652:	lea    rcx,[rsp+0x10]
  41a657:	lea    rdi,[rsp+0x8]
  41a65c:	mov    edx,0x2f693b52
  41a661:	mov    esi,0x8
  41a666:	mov    r12,QWORD PTR [r15]
  41a669:	mov    QWORD PTR [rsp+0x8],r13
  41a66e:	call   42b180 <cmetrohash64_1@@Base>
  41a673:	mov    edx,DWORD PTR [rsp+0x10]
  41a677:	sub    rbx,0x1
  41a67b:	lea    ecx,[rbp-0x2]
  41a67e:	mov    rax,rbx
  41a681:	and    rax,rdx
  41a684:	cmp    ecx,0x1
  41a687:	jbe    41a71e <str_set_visit@@Base+0x1ce>
  41a68d:	lea    rcx,[r12+rax*8]
  41a691:	add    rdx,0x1
  41a695:	xor    esi,esi
  41a697:	mov    rax,QWORD PTR [rcx]
  41a69a:	test   rax,rax
  41a69d:	jne    41a6c3 <str_set_visit@@Base+0x173>
  41a69f:	jmp    41a719 <str_set_visit@@Base+0x1c9>
  41a6a1:	nop    DWORD PTR [rax+0x0]
  41a6a8:	cmp    r13,rax
  41a6ab:	je     41a710 <str_set_visit@@Base+0x1c0>
  41a6ad:	mov    rax,rbx
  41a6b0:	and    rax,rdx
  41a6b3:	add    rdx,0x1
  41a6b7:	lea    rcx,[r12+rax*8]
  41a6bb:	mov    rax,QWORD PTR [rcx]
  41a6be:	test   rax,rax
  41a6c1:	je     41a6d8 <str_set_visit@@Base+0x188>
  41a6c3:	cmp    rax,0x2
  41a6c7:	jne    41a6a8 <str_set_visit@@Base+0x158>
  41a6c9:	test   rsi,rsi
  41a6cc:	cmove  rsi,rcx
  41a6d0:	jmp    41a6ad <str_set_visit@@Base+0x15d>
  41a6d2:	nop    WORD PTR [rax+rax*1+0x0]
  41a6d8:	test   rsi,rsi
  41a6db:	cmove  rsi,rcx
  41a6df:	add    QWORD PTR [r15+0x10],0x1
  41a6e4:	xor    eax,eax
  41a6e6:	mov    QWORD PTR [rsi],r14
  41a6e9:	mov    rdi,QWORD PTR [rsp+0x18]
  41a6ee:	xor    rdi,QWORD PTR fs:0x28
  41a6f7:	jne    41a7ee <str_set_visit@@Base+0x29e>
  41a6fd:	add    rsp,0x28
  41a701:	pop    rbx
  41a702:	pop    rbp
  41a703:	pop    r12
  41a705:	pop    r13
  41a707:	pop    r14
  41a709:	pop    r15
  41a70b:	ret    
  41a70c:	nop    DWORD PTR [rax+0x0]
  41a710:	test   ebp,ebp
  41a712:	jne    41a6e9 <str_set_visit@@Base+0x199>
  41a714:	mov    QWORD PTR [rcx],r14
  41a717:	jmp    41a6e9 <str_set_visit@@Base+0x199>
  41a719:	mov    rsi,rcx
  41a71c:	jmp    41a6df <str_set_visit@@Base+0x18f>
  41a71e:	lea    rcx,[r12+rax*8]
  41a722:	add    QWORD PTR [r15+0x10],0x1
  41a727:	mov    rax,QWORD PTR [rcx]
  41a72a:	test   rax,rax
  41a72d:	je     41a75c <str_set_visit@@Base+0x20c>
  41a72f:	cmp    rax,0x2
  41a733:	je     41a75c <str_set_visit@@Base+0x20c>
  41a735:	add    rdx,0x1
  41a739:	jmp    41a746 <str_set_visit@@Base+0x1f6>
  41a73b:	nop    DWORD PTR [rax+rax*1+0x0]
  41a740:	cmp    rax,0x2
  41a744:	je     41a75c <str_set_visit@@Base+0x20c>
  41a746:	mov    rax,rbx
  41a749:	and    rax,rdx
  41a74c:	add    rdx,0x1
  41a750:	lea    rcx,[r12+rax*8]
  41a754:	mov    rax,QWORD PTR [rcx]
  41a757:	test   rax,rax
  41a75a:	jne    41a740 <str_set_visit@@Base+0x1f0>
  41a75c:	mov    QWORD PTR [rcx],r14
  41a75f:	xor    eax,eax
  41a761:	jmp    41a6e9 <str_set_visit@@Base+0x199>
  41a763:	mov    rax,QWORD PTR [rip+0x3687e]        # 450fe8 <stderr@GLIBC_2.2.5>
  41a76a:	lea    rcx,[rip+0x2baaf]        # 446220 <_IO_stdin_used@@Base+0x19220>
  41a771:	lea    rdx,[rip+0x2bb1e]        # 446296 <_IO_stdin_used@@Base+0x19296>
  41a778:	mov    esi,0x1
  41a77d:	mov    rdi,QWORD PTR [rax]
  41a780:	xor    eax,eax
  41a782:	call   405200 <__fprintf_chk@plt>
  41a787:	mov    edi,0x1
  41a78c:	call   4051e0 <exit@plt>
  41a791:	lea    rcx,[rip+0x2bb40]        # 4462d8 <str_set_missing@@Base+0x8>
  41a798:	lea    rsi,[rip+0x2ba11]        # 4461b0 <_IO_stdin_used@@Base+0x191b0>
  41a79f:	lea    rdi,[rip+0x2badb]        # 446281 <_IO_stdin_used@@Base+0x19281>
  41a7a6:	mov    edx,0x74
  41a7ab:	call   405100 <__assert_fail@plt>
  41a7b0:	lea    rcx,[rip+0x2bb21]        # 4462d8 <str_set_missing@@Base+0x8>
  41a7b7:	lea    rsi,[rip+0x2b9f2]        # 4461b0 <_IO_stdin_used@@Base+0x191b0>
  41a7be:	lea    rdi,[rip+0x2baa5]        # 44626a <_IO_stdin_used@@Base+0x1926a>
  41a7c5:	mov    edx,0x73
  41a7ca:	call   405100 <__assert_fail@plt>
  41a7cf:	lea    rcx,[rip+0x2bb02]        # 4462d8 <str_set_missing@@Base+0x8>
  41a7d6:	lea    rsi,[rip+0x2b9d3]        # 4461b0 <_IO_stdin_used@@Base+0x191b0>
  41a7dd:	lea    rdi,[rip+0x2ba6f]        # 446253 <_IO_stdin_used@@Base+0x19253>
  41a7e4:	mov    edx,0x72
  41a7e9:	call   405100 <__assert_fail@plt>
  41a7ee:	call   4050d0 <__stack_chk_fail@plt>
  41a7f3:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  41a7fe:	xchg   ax,ax
  41a800:	push   r13
  41a802:	push   r12
  41a804:	push   rbp
  41a805:	push   rbx
  41a806:	mov    rbp,rdi
  41a809:	mov    ebx,0x4
  41a80e:	sub    rsp,0x38
  41a812:	mov    r12,QWORD PTR [rdi]
  41a815:	mov    rax,QWORD PTR fs:0x28
  41a81e:	mov    QWORD PTR [rsp+0x28],rax
  41a823:	xor    eax,eax
  41a825:	cmp    QWORD PTR [rdi+0x10],rsi
  41a829:	cmovae rsi,QWORD PTR [rdi+0x10]
  41a82e:	cmp    rsi,0x2
  41a832:	jbe    41a84b <str_set_visit@@Base+0x2fb>
  41a834:	nop    DWORD PTR [rax+0x0]
  41a838:	add    rbx,rbx
  41a83b:	imul   rax,rbx,0xb3
  41a842:	shr    rax,0x8
  41a846:	cmp    rsi,rax
  41a849:	ja     41a838 <str_set_visit@@Base+0x2e8>
  41a84b:	mov    esi,0x8
  41a850:	mov    rdi,rbx
  41a853:	call   405140 <calloc@plt>
  41a858:	test   rax,rax
  41a85b:	mov    QWORD PTR [rsp],rax
  41a85f:	je     41a901 <str_set_visit@@Base+0x3b1>
  41a865:	mov    QWORD PTR [rsp+0x18],rbx
  41a86a:	xor    ebx,ebx
  41a86c:	cmp    QWORD PTR [rbp+0x18],0x0
  41a871:	mov    QWORD PTR [rsp+0x8],0x0
  41a87a:	mov    QWORD PTR [rsp+0x10],0x0
  41a883:	mov    r13,rsp
  41a886:	je     41a8b9 <str_set_visit@@Base+0x369>
  41a888:	nop    DWORD PTR [rax+rax*1+0x0]
  41a890:	mov    rsi,QWORD PTR [r12+rbx*8]
  41a894:	test   rsi,rsi
  41a897:	je     41a8af <str_set_visit@@Base+0x35f>
  41a899:	cmp    rsi,0x2
  41a89d:	je     41a8af <str_set_visit@@Base+0x35f>
  41a89f:	mov    ecx,0x3
  41a8a4:	mov    rdx,rsi
  41a8a7:	mov    rdi,r13
  41a8aa:	call   41a5e0 <str_set_visit@@Base+0x90>
  41a8af:	add    rbx,0x1
  41a8b3:	cmp    QWORD PTR [rbp+0x18],rbx
  41a8b7:	ja     41a890 <str_set_visit@@Base+0x340>
  41a8b9:	mov    rdi,rbp
  41a8bc:	call   41a5a0 <str_set_visit@@Base+0x50>
  41a8c1:	mov    rax,QWORD PTR [rsp]
  41a8c5:	mov    QWORD PTR [rbp+0x0],rax
  41a8c9:	mov    rax,QWORD PTR [rsp+0x8]
  41a8ce:	mov    QWORD PTR [rbp+0x8],rax
  41a8d2:	mov    rax,QWORD PTR [rsp+0x10]
  41a8d7:	mov    QWORD PTR [rbp+0x10],rax
  41a8db:	mov    rax,QWORD PTR [rsp+0x18]
  41a8e0:	mov    QWORD PTR [rbp+0x18],rax
  41a8e4:	xor    eax,eax
  41a8e6:	mov    rdx,QWORD PTR [rsp+0x28]
  41a8eb:	xor    rdx,QWORD PTR fs:0x28
  41a8f4:	jne    41a908 <str_set_visit@@Base+0x3b8>
  41a8f6:	add    rsp,0x38
  41a8fa:	pop    rbx
  41a8fb:	pop    rbp
  41a8fc:	pop    r12
  41a8fe:	pop    r13
  41a900:	ret    
  41a901:	mov    eax,0xffffffff
  41a906:	jmp    41a8e6 <str_set_visit@@Base+0x396>
  41a908:	call   4050d0 <__stack_chk_fail@plt>
  41a90d:	nop    DWORD PTR [rax]
  41a910:	push   r12
  41a912:	push   rbp
  41a913:	push   rbx
  41a914:	sub    rsp,0x20
  41a918:	mov    rax,QWORD PTR fs:0x28
  41a921:	mov    QWORD PTR [rsp+0x18],rax
  41a926:	xor    eax,eax
  41a928:	test   rdi,rdi
  41a92b:	je     41a98f <str_set_visit@@Base+0x43f>
  41a92d:	mov    rbp,rdi
  41a930:	lea    rcx,[rsp+0x10]
  41a935:	lea    rdi,[rsp+0x8]
  41a93a:	mov    rbx,QWORD PTR [rsi]
  41a93d:	mov    QWORD PTR [rsp+0x8],rdx
  41a942:	mov    r12,rdx
  41a945:	mov    esi,0x8
  41a94a:	mov    edx,0x2f693b52
  41a94f:	call   42b180 <cmetrohash64_1@@Base>
  41a954:	mov    edx,DWORD PTR [rsp+0x10]
  41a958:	sub    rbx,0x1
  41a95c:	mov    rax,rbx
  41a95f:	and    rax,rdx
  41a962:	mov    rax,QWORD PTR [rbp+rax*8+0x0]
  41a967:	test   rax,rax
  41a96a:	je     41a98f <str_set_visit@@Base+0x43f>
  41a96c:	add    rdx,0x1
  41a970:	cmp    rax,0x2
  41a974:	je     41a97b <str_set_visit@@Base+0x42b>
  41a976:	cmp    r12,rax
  41a979:	je     41a991 <str_set_visit@@Base+0x441>
  41a97b:	mov    rax,rdx
  41a97e:	add    rdx,0x1
  41a982:	and    rax,rbx
  41a985:	mov    rax,QWORD PTR [rbp+rax*8+0x0]
  41a98a:	test   rax,rax
  41a98d:	jne    41a970 <str_set_visit@@Base+0x420>
  41a98f:	xor    eax,eax
  41a991:	mov    rcx,QWORD PTR [rsp+0x18]
  41a996:	xor    rcx,QWORD PTR fs:0x28
  41a99f:	jne    41a9aa <str_set_visit@@Base+0x45a>
  41a9a1:	add    rsp,0x20
  41a9a5:	pop    rbx
  41a9a6:	pop    rbp
  41a9a7:	pop    r12
  41a9a9:	ret    
  41a9aa:	call   4050d0 <__stack_chk_fail@plt>
  41a9af:	nop
  41a9b0:	push   r13
  41a9b2:	push   r12
  41a9b4:	push   rbp
  41a9b5:	push   rbx
  41a9b6:	sub    rsp,0x28
  41a9ba:	mov    rbp,QWORD PTR [rdi]
  41a9bd:	mov    rax,QWORD PTR fs:0x28
  41a9c6:	mov    QWORD PTR [rsp+0x18],rax
  41a9cb:	xor    eax,eax
  41a9cd:	test   rbp,rbp
  41a9d0:	je     41aa42 <str_set_visit@@Base+0x4f2>
  41a9d2:	mov    rax,QWORD PTR [rdi+0x18]
  41a9d6:	lea    rcx,[rsp+0x10]
  41a9db:	mov    r13,rdi
  41a9de:	lea    rdi,[rsp+0x8]
  41a9e3:	mov    QWORD PTR [rsp+0x8],rsi
  41a9e8:	mov    edx,0x2f693b52
  41a9ed:	mov    r12,rsi
  41a9f0:	mov    esi,0x8
  41a9f5:	lea    rbx,[rax-0x1]
  41a9f9:	call   42b180 <cmetrohash64_1@@Base>
  41a9fe:	mov    edx,DWORD PTR [rsp+0x10]
  41aa02:	mov    rax,rbx
  41aa05:	and    rax,rdx
  41aa08:	lea    rcx,[rbp+rax*8+0x0]
  41aa0d:	mov    rax,QWORD PTR [rcx]
  41aa10:	test   rax,rax
  41aa13:	je     41aa42 <str_set_visit@@Base+0x4f2>
  41aa15:	add    rdx,0x1
  41aa19:	nop    DWORD PTR [rax+0x0]
  41aa20:	cmp    rax,0x2
  41aa24:	je     41aa2b <str_set_visit@@Base+0x4db>
  41aa26:	cmp    r12,rax
  41aa29:	je     41aa60 <str_set_visit@@Base+0x510>
  41aa2b:	mov    rax,rbx
  41aa2e:	and    rax,rdx
  41aa31:	add    rdx,0x1
  41aa35:	lea    rcx,[rbp+rax*8+0x0]
  41aa3a:	mov    rax,QWORD PTR [rcx]
  41aa3d:	test   rax,rax
  41aa40:	jne    41aa20 <str_set_visit@@Base+0x4d0>
  41aa42:	xor    eax,eax
  41aa44:	mov    rsi,QWORD PTR [rsp+0x18]
  41aa49:	xor    rsi,QWORD PTR fs:0x28
  41aa52:	jne    41aa6e <str_set_visit@@Base+0x51e>
  41aa54:	add    rsp,0x28
  41aa58:	pop    rbx
  41aa59:	pop    rbp
  41aa5a:	pop    r12
  41aa5c:	pop    r13
  41aa5e:	ret    
  41aa5f:	nop
  41aa60:	mov    QWORD PTR [rcx],0x2
  41aa67:	sub    QWORD PTR [r13+0x10],0x1
  41aa6c:	jmp    41aa44 <str_set_visit@@Base+0x4f4>
  41aa6e:	call   4050d0 <__stack_chk_fail@plt>
  41aa73:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  41aa7e:	xchg   ax,ax

000000000041aa80 <ptr_set_clear@@Base>:
  41aa80:	jmp    41a5a0 <str_set_visit@@Base+0x50>
  41aa85:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

000000000041aa90 <ptr_set_destroy@@Base>:
  41aa90:	test   rsi,rsi
  41aa93:	push   r14
  41aa95:	push   r13
  41aa97:	push   r12
  41aa99:	push   rbp
  41aa9a:	mov    rbp,rdi
  41aa9d:	push   rbx
  41aa9e:	je     41aad7 <ptr_set_destroy@@Base+0x47>
  41aaa0:	cmp    QWORD PTR [rdi+0x18],0x0
  41aaa5:	mov    r12,QWORD PTR [rdi]
  41aaa8:	je     41aad7 <ptr_set_destroy@@Base+0x47>
  41aaaa:	mov    r13,rsi
  41aaad:	mov    r14,rdx
  41aab0:	xor    ebx,ebx
  41aab2:	nop    WORD PTR [rax+rax*1+0x0]
  41aab8:	mov    rsi,QWORD PTR [r12+rbx*8]
  41aabc:	test   rsi,rsi
  41aabf:	je     41aacd <ptr_set_destroy@@Base+0x3d>
  41aac1:	cmp    rsi,0x2
  41aac5:	je     41aacd <ptr_set_destroy@@Base+0x3d>
  41aac7:	mov    rdi,r14
  41aaca:	call   r13
  41aacd:	add    rbx,0x1
  41aad1:	cmp    rbx,QWORD PTR [rbp+0x18]
  41aad5:	jb     41aab8 <ptr_set_destroy@@Base+0x28>
  41aad7:	pop    rbx
  41aad8:	mov    rdi,rbp
  41aadb:	pop    rbp
  41aadc:	pop    r12
  41aade:	pop    r13
  41aae0:	pop    r14
  41aae2:	jmp    41a5a0 <str_set_visit@@Base+0x50>
  41aae7:	nop    WORD PTR [rax+rax*1+0x0]

000000000041aaf0 <ptr_set_init@@Base>:
  41aaf0:	push   rbp
  41aaf1:	push   rbx
  41aaf2:	mov    rbp,rdi
  41aaf5:	mov    ebx,0x4
  41aafa:	sub    rsp,0x8
  41aafe:	cmp    rsi,0x2
  41ab02:	jbe    41ab1b <ptr_set_init@@Base+0x2b>
  41ab04:	nop    DWORD PTR [rax+0x0]
  41ab08:	add    rbx,rbx
  41ab0b:	imul   rax,rbx,0xb3
  41ab12:	shr    rax,0x8
  41ab16:	cmp    rsi,rax
  41ab19:	ja     41ab08 <ptr_set_init@@Base+0x18>
  41ab1b:	mov    esi,0x8
  41ab20:	mov    rdi,rbx
  41ab23:	call   405140 <calloc@plt>
  41ab28:	test   rax,rax
  41ab2b:	mov    QWORD PTR [rbp+0x0],rax
  41ab2f:	je     41ab4e <ptr_set_init@@Base+0x5e>
  41ab31:	mov    QWORD PTR [rbp+0x8],0x0
  41ab39:	mov    QWORD PTR [rbp+0x18],rbx
  41ab3d:	xor    eax,eax
  41ab3f:	mov    QWORD PTR [rbp+0x10],0x0
  41ab47:	add    rsp,0x8
  41ab4b:	pop    rbx
  41ab4c:	pop    rbp
  41ab4d:	ret    
  41ab4e:	mov    eax,0xffffffff
  41ab53:	jmp    41ab47 <ptr_set_init@@Base+0x57>
  41ab55:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

000000000041ab60 <ptr_set_resize@@Base>:
  41ab60:	jmp    41a800 <str_set_visit@@Base+0x2b0>
  41ab65:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

000000000041ab70 <ptr_set_insert@@Base>:
  41ab70:	mov    rdx,rcx
  41ab73:	mov    ecx,r8d
  41ab76:	jmp    41a5e0 <str_set_visit@@Base+0x90>
  41ab7b:	nop    DWORD PTR [rax+rax*1+0x0]

000000000041ab80 <ptr_set_insert_item@@Base>:
  41ab80:	mov    ecx,edx
  41ab82:	mov    rdx,rsi
  41ab85:	jmp    41a5e0 <str_set_visit@@Base+0x90>
  41ab8a:	nop    WORD PTR [rax+rax*1+0x0]

000000000041ab90 <ptr_set_find@@Base>:
  41ab90:	mov    rdx,rsi
  41ab93:	lea    rsi,[rdi+0x18]
  41ab97:	mov    rdi,QWORD PTR [rdi]
  41ab9a:	jmp    41a910 <str_set_visit@@Base+0x3c0>
  41ab9f:	nop

000000000041aba0 <ptr_set_find_item@@Base>:
  41aba0:	mov    rdx,rsi
  41aba3:	lea    rsi,[rdi+0x18]
  41aba7:	mov    rdi,QWORD PTR [rdi]
  41abaa:	jmp    41a910 <str_set_visit@@Base+0x3c0>
  41abaf:	nop

000000000041abb0 <ptr_set_remove@@Base>:
  41abb0:	jmp    41a9b0 <str_set_visit@@Base+0x460>
  41abb5:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

000000000041abc0 <ptr_set_remove_item@@Base>:
  41abc0:	jmp    41a9b0 <str_set_visit@@Base+0x460>
  41abc5:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

000000000041abd0 <ptr_set_visit@@Base>:
  41abd0:	push   r14
  41abd2:	push   r13
  41abd4:	push   r12
  41abd6:	push   rbp
  41abd7:	push   rbx
  41abd8:	cmp    QWORD PTR [rdi+0x18],0x0
  41abdd:	mov    r12,QWORD PTR [rdi]
  41abe0:	je     41ac0f <ptr_set_visit@@Base+0x3f>
  41abe2:	mov    rbp,rdi
  41abe5:	mov    r14,rsi
  41abe8:	mov    r13,rdx
  41abeb:	xor    ebx,ebx
  41abed:	nop    DWORD PTR [rax]
  41abf0:	mov    rsi,QWORD PTR [r12+rbx*8]
  41abf4:	test   rsi,rsi
  41abf7:	je     41ac05 <ptr_set_visit@@Base+0x35>
  41abf9:	cmp    rsi,0x2
  41abfd:	je     41ac05 <ptr_set_visit@@Base+0x35>
  41abff:	mov    rdi,r13
  41ac02:	call   r14
  41ac05:	add    rbx,0x1
  41ac09:	cmp    rbx,QWORD PTR [rbp+0x18]
  41ac0d:	jb     41abf0 <ptr_set_visit@@Base+0x20>
  41ac0f:	pop    rbx
  41ac10:	pop    rbp
  41ac11:	pop    r12
  41ac13:	pop    r13
  41ac15:	pop    r14
  41ac17:	ret    
  41ac18:	nop    DWORD PTR [rax+rax*1+0x0]
  41ac20:	push   rbx
  41ac21:	mov    rbx,rdi
  41ac24:	mov    rdi,QWORD PTR [rdi]
  41ac27:	test   rdi,rdi
  41ac2a:	je     41ac31 <ptr_set_visit@@Base+0x61>
  41ac2c:	call   405040 <free@plt>
  41ac31:	mov    QWORD PTR [rbx],0x0
  41ac38:	mov    QWORD PTR [rbx+0x8],0x0
  41ac40:	mov    QWORD PTR [rbx+0x10],0x0
  41ac48:	mov    QWORD PTR [rbx+0x18],0x0
  41ac50:	pop    rbx
  41ac51:	ret    
  41ac52:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  41ac5d:	nop    DWORD PTR [rax]
  41ac60:	push   r15
  41ac62:	push   r14
  41ac64:	push   r13
  41ac66:	push   r12
  41ac68:	push   rbp
  41ac69:	push   rbx
  41ac6a:	sub    rsp,0x38
  41ac6e:	mov    r13,QWORD PTR [rdi]
  41ac71:	mov    rcx,QWORD PTR fs:0x28
  41ac7a:	mov    QWORD PTR [rsp+0x28],rcx
  41ac7f:	xor    ecx,ecx
  41ac81:	mov    QWORD PTR [rsp+0x10],rdi
  41ac86:	mov    QWORD PTR [rsp+0x8],rsi
  41ac8b:	test   r13,r13
  41ac8e:	je     41ad30 <ptr_set_visit@@Base+0x160>
  41ac94:	mov    rax,QWORD PTR [rsp+0x10]
  41ac99:	mov    rdi,QWORD PTR [rsp+0x8]
  41ac9e:	mov    r14,rdx
  41aca1:	lea    rcx,[rsp+0x20]
  41aca6:	mov    edx,0x2f693b52
  41acab:	mov    rsi,r14
  41acae:	mov    rax,QWORD PTR [rax+0x18]
  41acb2:	mov    QWORD PTR [rsp+0x18],rax
  41acb7:	lea    r15,[rax-0x1]
  41acbb:	call   42b180 <cmetrohash64_1@@Base>
  41acc0:	mov    ebp,DWORD PTR [rsp+0x20]
  41acc4:	mov    rax,r15
  41acc7:	and    rax,rbp
  41acca:	lea    r12,[r13+rax*8+0x0]
  41accf:	mov    rbx,QWORD PTR [r12]
  41acd3:	test   rbx,rbx
  41acd6:	je     41ad30 <ptr_set_visit@@Base+0x160>
  41acd8:	add    rbp,0x1
  41acdc:	jmp    41acf8 <ptr_set_visit@@Base+0x128>
  41acde:	xchg   ax,ax
  41ace0:	mov    rax,r15
  41ace3:	and    rax,rbp
  41ace6:	add    rbp,0x1
  41acea:	lea    r12,[r13+rax*8+0x0]
  41acef:	mov    rbx,QWORD PTR [r12]
  41acf3:	test   rbx,rbx
  41acf6:	je     41ad30 <ptr_set_visit@@Base+0x160>
  41acf8:	cmp    rbx,0x2
  41acfc:	je     41ace0 <ptr_set_visit@@Base+0x110>
  41acfe:	mov    rax,QWORD PTR [rbx+0x8]
  41ad02:	cmp    r14,QWORD PTR [rax+0x8]
  41ad06:	jne    41ace0 <ptr_set_visit@@Base+0x110>
  41ad08:	mov    rsi,QWORD PTR [rax]
  41ad0b:	mov    rdi,QWORD PTR [rsp+0x8]
  41ad10:	mov    rdx,r14
  41ad13:	call   405130 <memcmp@plt>
  41ad18:	test   eax,eax
  41ad1a:	jne    41ace0 <ptr_set_visit@@Base+0x110>
  41ad1c:	mov    rax,QWORD PTR [rsp+0x10]
  41ad21:	mov    QWORD PTR [r12],0x2
  41ad29:	sub    QWORD PTR [rax+0x10],0x1
  41ad2e:	jmp    41ad32 <ptr_set_visit@@Base+0x162>
  41ad30:	xor    ebx,ebx
  41ad32:	mov    rcx,QWORD PTR [rsp+0x28]
  41ad37:	xor    rcx,QWORD PTR fs:0x28
  41ad40:	mov    rax,rbx
  41ad43:	jne    41ad54 <ptr_set_visit@@Base+0x184>
  41ad45:	add    rsp,0x38
  41ad49:	pop    rbx
  41ad4a:	pop    rbp
  41ad4b:	pop    r12
  41ad4d:	pop    r13
  41ad4f:	pop    r14
  41ad51:	pop    r15
  41ad53:	ret    
  41ad54:	call   4050d0 <__stack_chk_fail@plt>
  41ad59:	nop    DWORD PTR [rax+0x0]
  41ad60:	push   r13
  41ad62:	push   r12
  41ad64:	push   rbp
  41ad65:	push   rbx
  41ad66:	mov    rbp,rdi
  41ad69:	mov    ebx,0x4
  41ad6e:	sub    rsp,0x38
  41ad72:	mov    r12,QWORD PTR [rdi]
  41ad75:	mov    rax,QWORD PTR fs:0x28
  41ad7e:	mov    QWORD PTR [rsp+0x28],rax
  41ad83:	xor    eax,eax
  41ad85:	cmp    QWORD PTR [rdi+0x10],rsi
  41ad89:	cmovae rsi,QWORD PTR [rdi+0x10]
  41ad8e:	cmp    rsi,0x2
  41ad92:	jbe    41adab <ptr_set_visit@@Base+0x1db>
  41ad94:	nop    DWORD PTR [rax+0x0]
  41ad98:	add    rbx,rbx
  41ad9b:	imul   rax,rbx,0xb3
  41ada2:	shr    rax,0x8
  41ada6:	cmp    rsi,rax
  41ada9:	ja     41ad98 <ptr_set_visit@@Base+0x1c8>
  41adab:	mov    esi,0x8
  41adb0:	mov    rdi,rbx
  41adb3:	call   405140 <calloc@plt>
  41adb8:	test   rax,rax
  41adbb:	mov    QWORD PTR [rsp],rax
  41adbf:	je     41ae6a <ptr_set_visit@@Base+0x29a>
  41adc5:	mov    QWORD PTR [rsp+0x18],rbx
  41adca:	xor    ebx,ebx
  41adcc:	cmp    QWORD PTR [rbp+0x18],0x0
  41add1:	mov    QWORD PTR [rsp+0x8],0x0
  41adda:	mov    QWORD PTR [rsp+0x10],0x0
  41ade3:	mov    r13,rsp
  41ade6:	je     41ae22 <ptr_set_visit@@Base+0x252>
  41ade8:	nop    DWORD PTR [rax+rax*1+0x0]
  41adf0:	mov    rcx,QWORD PTR [r12+rbx*8]
  41adf4:	test   rcx,rcx
  41adf7:	je     41ae18 <ptr_set_visit@@Base+0x248>
  41adf9:	cmp    rcx,0x2
  41adfd:	je     41ae18 <ptr_set_visit@@Base+0x248>
  41adff:	mov    rax,QWORD PTR [rcx+0x8]
  41ae03:	mov    r8d,0x3
  41ae09:	mov    rdi,r13
  41ae0c:	mov    rdx,QWORD PTR [rax+0x8]
  41ae10:	mov    rsi,QWORD PTR [rax]
  41ae13:	call   41ae80 <ptr_set_visit@@Base+0x2b0>
  41ae18:	add    rbx,0x1
  41ae1c:	cmp    QWORD PTR [rbp+0x18],rbx
  41ae20:	ja     41adf0 <ptr_set_visit@@Base+0x220>
  41ae22:	mov    rdi,rbp
  41ae25:	call   41ac20 <ptr_set_visit@@Base+0x50>
  41ae2a:	mov    rax,QWORD PTR [rsp]
  41ae2e:	mov    QWORD PTR [rbp+0x0],rax
  41ae32:	mov    rax,QWORD PTR [rsp+0x8]
  41ae37:	mov    QWORD PTR [rbp+0x8],rax
  41ae3b:	mov    rax,QWORD PTR [rsp+0x10]
  41ae40:	mov    QWORD PTR [rbp+0x10],rax
  41ae44:	mov    rax,QWORD PTR [rsp+0x18]
  41ae49:	mov    QWORD PTR [rbp+0x18],rax
  41ae4d:	xor    eax,eax
  41ae4f:	mov    rdi,QWORD PTR [rsp+0x28]
  41ae54:	xor    rdi,QWORD PTR fs:0x28
  41ae5d:	jne    41ae71 <ptr_set_visit@@Base+0x2a1>
  41ae5f:	add    rsp,0x38
  41ae63:	pop    rbx
  41ae64:	pop    rbp
  41ae65:	pop    r12
  41ae67:	pop    r13
  41ae69:	ret    
  41ae6a:	mov    eax,0xffffffff
  41ae6f:	jmp    41ae4f <ptr_set_visit@@Base+0x27f>
  41ae71:	call   4050d0 <__stack_chk_fail@plt>
  41ae76:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41ae80:	push   r15
  41ae82:	push   r14
  41ae84:	push   r13
  41ae86:	push   r12
  41ae88:	push   rbp
  41ae89:	push   rbx
  41ae8a:	sub    rsp,0x48
  41ae8e:	mov    QWORD PTR [rsp+0x20],rdi
  41ae93:	mov    QWORD PTR [rsp+0x10],rsi
  41ae98:	mov    rdi,QWORD PTR fs:0x28
  41aea1:	mov    QWORD PTR [rsp+0x38],rdi
  41aea6:	xor    edi,edi
  41aea8:	test   rcx,rcx
  41aeab:	mov    QWORD PTR [rsp+0x18],rcx
  41aeb0:	mov    DWORD PTR [rsp+0x2c],r8d
  41aeb5:	je     41b0e0 <ptr_set_visit@@Base+0x510>
  41aebb:	cmp    QWORD PTR [rsp+0x18],0x2
  41aec1:	je     41b0c1 <ptr_set_visit@@Base+0x4f1>
  41aec7:	cmp    QWORD PTR [rsp+0x18],0x1
  41aecd:	je     41b0a2 <ptr_set_visit@@Base+0x4d2>
  41aed3:	mov    rbx,QWORD PTR [rsp+0x20]
  41aed8:	mov    r14,rdx
  41aedb:	mov    r8,QWORD PTR [rbx+0x18]
  41aedf:	mov    rsi,QWORD PTR [rbx+0x10]
  41aee3:	imul   rax,r8,0xb3
  41aeea:	shr    rax,0x8
  41aeee:	cmp    rsi,rax
  41aef1:	jb     41af0a <ptr_set_visit@@Base+0x33a>
  41aef3:	add    rsi,rsi
  41aef6:	mov    rdi,rbx
  41aef9:	call   41ad60 <ptr_set_visit@@Base+0x190>
  41aefe:	test   eax,eax
  41af00:	jne    41b074 <ptr_set_visit@@Base+0x4a4>
  41af06:	mov    r8,QWORD PTR [rbx+0x18]
  41af0a:	mov    rax,QWORD PTR [rsp+0x20]
  41af0f:	mov    rdi,QWORD PTR [rsp+0x10]
  41af14:	lea    rcx,[rsp+0x30]
  41af19:	mov    edx,0x2f693b52
  41af1e:	mov    rsi,r14
  41af21:	lea    r12,[r8-0x1]
  41af25:	mov    r13,QWORD PTR [rax]
  41af28:	call   42b180 <cmetrohash64_1@@Base>
  41af2d:	mov    edi,DWORD PTR [rsp+0x2c]
  41af31:	mov    ebp,DWORD PTR [rsp+0x30]
  41af35:	mov    rax,r12
  41af38:	lea    edx,[rdi-0x2]
  41af3b:	and    rax,rbp
  41af3e:	cmp    edx,0x1
  41af41:	jbe    41b022 <ptr_set_visit@@Base+0x452>
  41af47:	lea    r15,[r13+rax*8+0x0]
  41af4c:	add    rbp,0x1
  41af50:	xor    ecx,ecx
  41af52:	mov    rbx,QWORD PTR [r15]
  41af55:	test   rbx,rbx
  41af58:	jne    41af7b <ptr_set_visit@@Base+0x3ab>
  41af5a:	jmp    41b01d <ptr_set_visit@@Base+0x44d>
  41af5f:	nop
  41af60:	mov    rax,r12
  41af63:	and    rax,rbp
  41af66:	add    rbp,0x1
  41af6a:	lea    r15,[r13+rax*8+0x0]
  41af6f:	mov    rbx,QWORD PTR [r15]
  41af72:	test   rbx,rbx
  41af75:	je     41b000 <ptr_set_visit@@Base+0x430>
  41af7b:	cmp    rbx,0x2
  41af7f:	je     41afe0 <ptr_set_visit@@Base+0x410>
  41af81:	mov    rax,QWORD PTR [rbx+0x8]
  41af85:	cmp    r14,QWORD PTR [rax+0x8]
  41af89:	jne    41af60 <ptr_set_visit@@Base+0x390>
  41af8b:	mov    rsi,QWORD PTR [rax]
  41af8e:	mov    rdi,QWORD PTR [rsp+0x10]
  41af93:	mov    rdx,r14
  41af96:	mov    QWORD PTR [rsp+0x8],rcx
  41af9b:	call   405130 <memcmp@plt>
  41afa0:	test   eax,eax
  41afa2:	mov    rcx,QWORD PTR [rsp+0x8]
  41afa7:	jne    41af60 <ptr_set_visit@@Base+0x390>
  41afa9:	mov    eax,DWORD PTR [rsp+0x2c]
  41afad:	test   eax,eax
  41afaf:	je     41aff0 <ptr_set_visit@@Base+0x420>
  41afb1:	nop    DWORD PTR [rax+0x0]
  41afb8:	mov    rdx,QWORD PTR [rsp+0x38]
  41afbd:	xor    rdx,QWORD PTR fs:0x28
  41afc6:	mov    rax,rbx
  41afc9:	jne    41b0ff <ptr_set_visit@@Base+0x52f>
  41afcf:	add    rsp,0x48
  41afd3:	pop    rbx
  41afd4:	pop    rbp
  41afd5:	pop    r12
  41afd7:	pop    r13
  41afd9:	pop    r14
  41afdb:	pop    r15
  41afdd:	ret    
  41afde:	xchg   ax,ax
  41afe0:	test   rcx,rcx
  41afe3:	cmove  rcx,r15
  41afe7:	jmp    41af60 <ptr_set_visit@@Base+0x390>
  41afec:	nop    DWORD PTR [rax+0x0]
  41aff0:	mov    rax,QWORD PTR [rsp+0x18]
  41aff5:	mov    QWORD PTR [r15],rax
  41aff8:	jmp    41afb8 <ptr_set_visit@@Base+0x3e8>
  41affa:	nop    WORD PTR [rax+rax*1+0x0]
  41b000:	test   rcx,rcx
  41b003:	cmove  rcx,r15
  41b007:	mov    rax,QWORD PTR [rsp+0x20]
  41b00c:	xor    ebx,ebx
  41b00e:	add    QWORD PTR [rax+0x10],0x1
  41b013:	mov    rax,QWORD PTR [rsp+0x18]
  41b018:	mov    QWORD PTR [rcx],rax
  41b01b:	jmp    41afb8 <ptr_set_visit@@Base+0x3e8>
  41b01d:	mov    rcx,r15
  41b020:	jmp    41b007 <ptr_set_visit@@Base+0x437>
  41b022:	lea    rdx,[r13+rax*8+0x0]
  41b027:	mov    rdi,QWORD PTR [rsp+0x20]
  41b02c:	mov    rax,QWORD PTR [rdx]
  41b02f:	add    QWORD PTR [rdi+0x10],0x1
  41b034:	test   rax,rax
  41b037:	je     41b065 <ptr_set_visit@@Base+0x495>
  41b039:	cmp    rax,0x2
  41b03d:	je     41b065 <ptr_set_visit@@Base+0x495>
  41b03f:	add    rbp,0x1
  41b043:	jmp    41b04e <ptr_set_visit@@Base+0x47e>
  41b045:	nop    DWORD PTR [rax]
  41b048:	cmp    rax,0x2
  41b04c:	je     41b065 <ptr_set_visit@@Base+0x495>
  41b04e:	mov    rax,r12
  41b051:	and    rax,rbp
  41b054:	add    rbp,0x1
  41b058:	lea    rdx,[r13+rax*8+0x0]
  41b05d:	mov    rax,QWORD PTR [rdx]
  41b060:	test   rax,rax
  41b063:	jne    41b048 <ptr_set_visit@@Base+0x478>
  41b065:	mov    rax,QWORD PTR [rsp+0x18]
  41b06a:	xor    ebx,ebx
  41b06c:	mov    QWORD PTR [rdx],rax
  41b06f:	jmp    41afb8 <ptr_set_visit@@Base+0x3e8>
  41b074:	mov    rax,QWORD PTR [rip+0x35f6d]        # 450fe8 <stderr@GLIBC_2.2.5>
  41b07b:	lea    rcx,[rip+0x2b19e]        # 446220 <_IO_stdin_used@@Base+0x19220>
  41b082:	lea    rdx,[rip+0x2b20d]        # 446296 <_IO_stdin_used@@Base+0x19296>
  41b089:	mov    esi,0x1
  41b08e:	mov    rdi,QWORD PTR [rax]
  41b091:	xor    eax,eax
  41b093:	call   405200 <__fprintf_chk@plt>
  41b098:	mov    edi,0x1
  41b09d:	call   4051e0 <exit@plt>
  41b0a2:	lea    rcx,[rip+0x2b257]        # 446300 <ptr_set_missing@@Base+0x8>
  41b0a9:	lea    rsi,[rip+0x2b100]        # 4461b0 <_IO_stdin_used@@Base+0x191b0>
  41b0b0:	lea    rdi,[rip+0x2b1ca]        # 446281 <_IO_stdin_used@@Base+0x19281>
  41b0b7:	mov    edx,0x74
  41b0bc:	call   405100 <__assert_fail@plt>
  41b0c1:	lea    rcx,[rip+0x2b238]        # 446300 <ptr_set_missing@@Base+0x8>
  41b0c8:	lea    rsi,[rip+0x2b0e1]        # 4461b0 <_IO_stdin_used@@Base+0x191b0>
  41b0cf:	lea    rdi,[rip+0x2b194]        # 44626a <_IO_stdin_used@@Base+0x1926a>
  41b0d6:	mov    edx,0x73
  41b0db:	call   405100 <__assert_fail@plt>
  41b0e0:	lea    rcx,[rip+0x2b219]        # 446300 <ptr_set_missing@@Base+0x8>
  41b0e7:	lea    rsi,[rip+0x2b0c2]        # 4461b0 <_IO_stdin_used@@Base+0x191b0>
  41b0ee:	lea    rdi,[rip+0x2b15e]        # 446253 <_IO_stdin_used@@Base+0x19253>
  41b0f5:	mov    edx,0x72
  41b0fa:	call   405100 <__assert_fail@plt>
  41b0ff:	call   4050d0 <__stack_chk_fail@plt>
  41b104:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  41b10f:	nop
  41b110:	push   r15
  41b112:	push   r14
  41b114:	push   r13
  41b116:	push   r12
  41b118:	push   rbp
  41b119:	push   rbx
  41b11a:	sub    rsp,0x18
  41b11e:	mov    rax,QWORD PTR fs:0x28
  41b127:	mov    QWORD PTR [rsp+0x8],rax
  41b12c:	xor    eax,eax
  41b12e:	test   rdi,rdi
  41b131:	je     41b1d0 <ptr_set_visit@@Base+0x600>
  41b137:	mov    r12,rdx
  41b13a:	mov    r14,rcx
  41b13d:	mov    r13,QWORD PTR [rsi]
  41b140:	mov    r15,rdi
  41b143:	mov    rcx,rsp
  41b146:	mov    edx,0x2f693b52
  41b14b:	mov    rsi,r14
  41b14e:	mov    rdi,r12
  41b151:	call   42b180 <cmetrohash64_1@@Base>
  41b156:	mov    ebp,DWORD PTR [rsp]
  41b159:	sub    r13,0x1
  41b15d:	mov    rax,r13
  41b160:	and    rax,rbp
  41b163:	mov    rbx,QWORD PTR [r15+rax*8]
  41b167:	test   rbx,rbx
  41b16a:	je     41b1d0 <ptr_set_visit@@Base+0x600>
  41b16c:	add    rbp,0x1
  41b170:	jmp    41b18b <ptr_set_visit@@Base+0x5bb>
  41b172:	nop    WORD PTR [rax+rax*1+0x0]
  41b178:	mov    rax,r13
  41b17b:	and    rax,rbp
  41b17e:	add    rbp,0x1
  41b182:	mov    rbx,QWORD PTR [r15+rax*8]
  41b186:	test   rbx,rbx
  41b189:	je     41b1d0 <ptr_set_visit@@Base+0x600>
  41b18b:	cmp    rbx,0x2
  41b18f:	je     41b178 <ptr_set_visit@@Base+0x5a8>
  41b191:	mov    rax,QWORD PTR [rbx+0x8]
  41b195:	cmp    r14,QWORD PTR [rax+0x8]
  41b199:	jne    41b178 <ptr_set_visit@@Base+0x5a8>
  41b19b:	mov    rsi,QWORD PTR [rax]
  41b19e:	mov    rdx,r14
  41b1a1:	mov    rdi,r12
  41b1a4:	call   405130 <memcmp@plt>
  41b1a9:	test   eax,eax
  41b1ab:	jne    41b178 <ptr_set_visit@@Base+0x5a8>
  41b1ad:	mov    rcx,QWORD PTR [rsp+0x8]
  41b1b2:	xor    rcx,QWORD PTR fs:0x28
  41b1bb:	mov    rax,rbx
  41b1be:	jne    41b1d4 <ptr_set_visit@@Base+0x604>
  41b1c0:	add    rsp,0x18
  41b1c4:	pop    rbx
  41b1c5:	pop    rbp
  41b1c6:	pop    r12
  41b1c8:	pop    r13
  41b1ca:	pop    r14
  41b1cc:	pop    r15
  41b1ce:	ret    
  41b1cf:	nop
  41b1d0:	xor    ebx,ebx
  41b1d2:	jmp    41b1ad <ptr_set_visit@@Base+0x5dd>
  41b1d4:	call   4050d0 <__stack_chk_fail@plt>
  41b1d9:	nop    DWORD PTR [rax+0x0]

000000000041b1e0 <fb_symbol_table_clear@@Base>:
  41b1e0:	jmp    41ac20 <ptr_set_visit@@Base+0x50>
  41b1e5:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

000000000041b1f0 <fb_symbol_table_destroy@@Base>:
  41b1f0:	test   rsi,rsi
  41b1f3:	push   r14
  41b1f5:	push   r13
  41b1f7:	push   r12
  41b1f9:	push   rbp
  41b1fa:	mov    rbp,rdi
  41b1fd:	push   rbx
  41b1fe:	je     41b237 <fb_symbol_table_destroy@@Base+0x47>
  41b200:	cmp    QWORD PTR [rdi+0x18],0x0
  41b205:	mov    r12,QWORD PTR [rdi]
  41b208:	je     41b237 <fb_symbol_table_destroy@@Base+0x47>
  41b20a:	mov    r13,rsi
  41b20d:	mov    r14,rdx
  41b210:	xor    ebx,ebx
  41b212:	nop    WORD PTR [rax+rax*1+0x0]
  41b218:	mov    rsi,QWORD PTR [r12+rbx*8]
  41b21c:	test   rsi,rsi
  41b21f:	je     41b22d <fb_symbol_table_destroy@@Base+0x3d>
  41b221:	cmp    rsi,0x2
  41b225:	je     41b22d <fb_symbol_table_destroy@@Base+0x3d>
  41b227:	mov    rdi,r14
  41b22a:	call   r13
  41b22d:	add    rbx,0x1
  41b231:	cmp    rbx,QWORD PTR [rbp+0x18]
  41b235:	jb     41b218 <fb_symbol_table_destroy@@Base+0x28>
  41b237:	pop    rbx
  41b238:	mov    rdi,rbp
  41b23b:	pop    rbp
  41b23c:	pop    r12
  41b23e:	pop    r13
  41b240:	pop    r14
  41b242:	jmp    41ac20 <ptr_set_visit@@Base+0x50>
  41b247:	nop    WORD PTR [rax+rax*1+0x0]

000000000041b250 <fb_symbol_table_init@@Base>:
  41b250:	push   rbp
  41b251:	push   rbx
  41b252:	mov    rbp,rdi
  41b255:	mov    ebx,0x4
  41b25a:	sub    rsp,0x8
  41b25e:	cmp    rsi,0x2
  41b262:	jbe    41b27b <fb_symbol_table_init@@Base+0x2b>
  41b264:	nop    DWORD PTR [rax+0x0]
  41b268:	add    rbx,rbx
  41b26b:	imul   rax,rbx,0xb3
  41b272:	shr    rax,0x8
  41b276:	cmp    rsi,rax
  41b279:	ja     41b268 <fb_symbol_table_init@@Base+0x18>
  41b27b:	mov    esi,0x8
  41b280:	mov    rdi,rbx
  41b283:	call   405140 <calloc@plt>
  41b288:	test   rax,rax
  41b28b:	mov    QWORD PTR [rbp+0x0],rax
  41b28f:	je     41b2ae <fb_symbol_table_init@@Base+0x5e>
  41b291:	mov    QWORD PTR [rbp+0x8],0x0
  41b299:	mov    QWORD PTR [rbp+0x18],rbx
  41b29d:	xor    eax,eax
  41b29f:	mov    QWORD PTR [rbp+0x10],0x0
  41b2a7:	add    rsp,0x8
  41b2ab:	pop    rbx
  41b2ac:	pop    rbp
  41b2ad:	ret    
  41b2ae:	mov    eax,0xffffffff
  41b2b3:	jmp    41b2a7 <fb_symbol_table_init@@Base+0x57>
  41b2b5:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

000000000041b2c0 <fb_symbol_table_resize@@Base>:
  41b2c0:	jmp    41ad60 <ptr_set_visit@@Base+0x190>
  41b2c5:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

000000000041b2d0 <fb_symbol_table_insert@@Base>:
  41b2d0:	jmp    41ae80 <ptr_set_visit@@Base+0x2b0>
  41b2d5:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

000000000041b2e0 <fb_symbol_table_insert_item@@Base>:
  41b2e0:	mov    rax,QWORD PTR [rsi+0x8]
  41b2e4:	mov    rcx,rsi
  41b2e7:	mov    r8d,edx
  41b2ea:	mov    rsi,QWORD PTR [rax]
  41b2ed:	mov    rdx,QWORD PTR [rax+0x8]
  41b2f1:	jmp    41ae80 <ptr_set_visit@@Base+0x2b0>
  41b2f6:	nop    WORD PTR cs:[rax+rax*1+0x0]

000000000041b300 <fb_symbol_table_find@@Base>:
  41b300:	mov    rax,rsi
  41b303:	lea    rsi,[rdi+0x18]
  41b307:	mov    rdi,QWORD PTR [rdi]
  41b30a:	mov    rcx,rdx
  41b30d:	mov    rdx,rax
  41b310:	jmp    41b110 <ptr_set_visit@@Base+0x540>
  41b315:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

000000000041b320 <fb_symbol_table_find_item@@Base>:
  41b320:	mov    rax,QWORD PTR [rsi+0x8]
  41b324:	lea    rsi,[rdi+0x18]
  41b328:	mov    rdi,QWORD PTR [rdi]
  41b32b:	mov    rcx,QWORD PTR [rax+0x8]
  41b32f:	mov    rdx,QWORD PTR [rax]
  41b332:	jmp    41b110 <ptr_set_visit@@Base+0x540>
  41b337:	nop    WORD PTR [rax+rax*1+0x0]

000000000041b340 <fb_symbol_table_remove@@Base>:
  41b340:	jmp    41ac60 <ptr_set_visit@@Base+0x90>
  41b345:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

000000000041b350 <fb_symbol_table_remove_item@@Base>:
  41b350:	mov    rax,QWORD PTR [rsi+0x8]
  41b354:	mov    rdx,QWORD PTR [rax+0x8]
  41b358:	mov    rsi,QWORD PTR [rax]
  41b35b:	jmp    41ac60 <ptr_set_visit@@Base+0x90>

000000000041b360 <fb_symbol_table_visit@@Base>:
  41b360:	push   r14
  41b362:	push   r13
  41b364:	push   r12
  41b366:	push   rbp
  41b367:	push   rbx
  41b368:	cmp    QWORD PTR [rdi+0x18],0x0
  41b36d:	mov    r12,QWORD PTR [rdi]
  41b370:	je     41b39f <fb_symbol_table_visit@@Base+0x3f>
  41b372:	mov    rbp,rdi
  41b375:	mov    r14,rsi
  41b378:	mov    r13,rdx
  41b37b:	xor    ebx,ebx
  41b37d:	nop    DWORD PTR [rax]
  41b380:	mov    rsi,QWORD PTR [r12+rbx*8]
  41b384:	test   rsi,rsi
  41b387:	je     41b395 <fb_symbol_table_visit@@Base+0x35>
  41b389:	cmp    rsi,0x2
  41b38d:	je     41b395 <fb_symbol_table_visit@@Base+0x35>
  41b38f:	mov    rdi,r13
  41b392:	call   r14
  41b395:	add    rbx,0x1
  41b399:	cmp    rbx,QWORD PTR [rbp+0x18]
  41b39d:	jb     41b380 <fb_symbol_table_visit@@Base+0x20>
  41b39f:	pop    rbx
  41b3a0:	pop    rbp
  41b3a1:	pop    r12
  41b3a3:	pop    r13
  41b3a5:	pop    r14
  41b3a7:	ret    
  41b3a8:	nop    DWORD PTR [rax+rax*1+0x0]
  41b3b0:	push   rbx
  41b3b1:	mov    rbx,rdi
  41b3b4:	mov    rdi,QWORD PTR [rdi]
  41b3b7:	test   rdi,rdi
  41b3ba:	je     41b3c1 <fb_symbol_table_visit@@Base+0x61>
  41b3bc:	call   405040 <free@plt>
  41b3c1:	mov    QWORD PTR [rbx],0x0
  41b3c8:	mov    QWORD PTR [rbx+0x8],0x0
  41b3d0:	mov    QWORD PTR [rbx+0x10],0x0
  41b3d8:	mov    QWORD PTR [rbx+0x18],0x0
  41b3e0:	pop    rbx
  41b3e1:	ret    
  41b3e2:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  41b3ed:	nop    DWORD PTR [rax]
  41b3f0:	push   r15
  41b3f2:	push   r14
  41b3f4:	push   r13
  41b3f6:	push   r12
  41b3f8:	push   rbp
  41b3f9:	push   rbx
  41b3fa:	sub    rsp,0x48
  41b3fe:	test   rcx,rcx
  41b401:	mov    QWORD PTR [rsp+0x30],rdi
  41b406:	mov    QWORD PTR [rsp+0x10],rsi
  41b40b:	mov    QWORD PTR [rsp+0x20],rdx
  41b410:	mov    QWORD PTR [rsp+0x28],rcx
  41b415:	mov    DWORD PTR [rsp+0x3c],r8d
  41b41a:	je     41b8fc <fb_symbol_table_visit@@Base+0x59c>
  41b420:	cmp    QWORD PTR [rsp+0x28],0x2
  41b426:	je     41b8dd <fb_symbol_table_visit@@Base+0x57d>
  41b42c:	cmp    QWORD PTR [rsp+0x28],0x1
  41b432:	je     41b8be <fb_symbol_table_visit@@Base+0x55e>
  41b438:	mov    rbx,QWORD PTR [rsp+0x30]
  41b43d:	mov    rdx,QWORD PTR [rbx+0x18]
  41b441:	mov    rcx,QWORD PTR [rbx+0x10]
  41b445:	imul   rax,rdx,0xb3
  41b44c:	shr    rax,0x8
  41b450:	cmp    rcx,rax
  41b453:	jb     41b46d <fb_symbol_table_visit@@Base+0x10d>
  41b455:	lea    rsi,[rcx+rcx*1]
  41b459:	mov    rdi,rbx
  41b45c:	call   41b950 <fb_symbol_table_visit@@Base+0x5f0>
  41b461:	test   eax,eax
  41b463:	jne    41b91b <fb_symbol_table_visit@@Base+0x5bb>
  41b469:	mov    rdx,QWORD PTR [rbx+0x18]
  41b46d:	mov    rax,QWORD PTR [rsp+0x30]
  41b472:	mov    r11,QWORD PTR [rsp+0x20]
  41b477:	mov    rax,QWORD PTR [rax]
  41b47a:	test   r11d,r11d
  41b47d:	mov    DWORD PTR [rsp+0x38],r11d
  41b482:	mov    QWORD PTR [rsp],rax
  41b486:	lea    rax,[rdx-0x1]
  41b48a:	mov    QWORD PTR [rsp+0x8],rax
  41b48f:	jle    41b7c1 <fb_symbol_table_visit@@Base+0x461>
  41b495:	xor    esi,esi
  41b497:	test   r11,r11
  41b49a:	mov    r10,QWORD PTR [rsp+0x10]
  41b49f:	mov    r12,0xffffffffffffffff
  41b4a6:	mov    ebp,0x9e3779b1
  41b4ab:	je     41b559 <fb_symbol_table_visit@@Base+0x1f9>
  41b4b1:	nop    DWORD PTR [rax+0x0]
  41b4b8:	cmp    BYTE PTR [r10],0x2e
  41b4bc:	je     41b7b6 <fb_symbol_table_visit@@Base+0x456>
  41b4c2:	xor    ecx,ecx
  41b4c4:	jmp    41b4df <fb_symbol_table_visit@@Base+0x17f>
  41b4c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41b4d0:	cmp    BYTE PTR [r10+rcx*1+0x1],0x2e
  41b4d6:	je     41b568 <fb_symbol_table_visit@@Base+0x208>
  41b4dc:	mov    rcx,r9
  41b4df:	lea    r9,[rcx+0x1]
  41b4e3:	cmp    r9,r11
  41b4e6:	jne    41b4d0 <fb_symbol_table_visit@@Base+0x170>
  41b4e8:	test   rcx,rcx
  41b4eb:	je     41b586 <fb_symbol_table_visit@@Base+0x226>
  41b4f1:	movzx  edx,BYTE PTR [r10]
  41b4f5:	lea    r8,[r10+0x1]
  41b4f9:	test   dl,dl
  41b4fb:	je     41b586 <fb_symbol_table_visit@@Base+0x226>
  41b501:	lea    rdi,[r10+rcx*1]
  41b505:	mov    eax,0x2f692e57
  41b50a:	jmp    41b51d <fb_symbol_table_visit@@Base+0x1bd>
  41b50c:	nop    DWORD PTR [rax+0x0]
  41b510:	add    r8,0x1
  41b514:	movzx  edx,BYTE PTR [r8-0x1]
  41b519:	test   dl,dl
  41b51b:	je     41b52f <fb_symbol_table_visit@@Base+0x1cf>
  41b51d:	mov    rcx,rax
  41b520:	shl    rcx,0x5
  41b524:	add    rax,rcx
  41b527:	xor    rax,rdx
  41b52a:	cmp    r8,rdi
  41b52d:	jne    41b510 <fb_symbol_table_visit@@Base+0x1b0>
  41b52f:	xor    rsi,0x2f693b52
  41b536:	xor    rsi,rax
  41b539:	imul   rsi,rbp
  41b53d:	cmp    r11,r9
  41b540:	je     41b59c <fb_symbol_table_visit@@Base+0x23c>
  41b542:	mov    rax,r9
  41b545:	lea    r10,[r10+r9*1+0x1]
  41b54a:	not    rax
  41b54d:	add    r11,rax
  41b550:	test   r11,r11
  41b553:	jne    41b4b8 <fb_symbol_table_visit@@Base+0x158>
  41b559:	xor    r9d,r9d
  41b55c:	mov    rcx,r12
  41b55f:	jmp    41b4f1 <fb_symbol_table_visit@@Base+0x191>
  41b561:	nop    DWORD PTR [rax+0x0]
  41b568:	test   rcx,rcx
  41b56b:	je     41b579 <fb_symbol_table_visit@@Base+0x219>
  41b56d:	movzx  edx,BYTE PTR [r10]
  41b571:	lea    r8,[r10+0x1]
  41b575:	test   dl,dl
  41b577:	jne    41b501 <fb_symbol_table_visit@@Base+0x1a1>
  41b579:	xor    rsi,0x1505
  41b580:	imul   rsi,rbp
  41b584:	jmp    41b542 <fb_symbol_table_visit@@Base+0x1e2>
  41b586:	mov    rbx,rsi
  41b589:	mov    edx,0x9e3779b1
  41b58e:	xor    rbx,0x1505
  41b595:	imul   rbx,rdx
  41b599:	mov    rsi,rbx
  41b59c:	mov    r13,QWORD PTR [rsp+0x8]
  41b5a1:	and    r13,rsi
  41b5a4:	shl    r13,0x3
  41b5a8:	mov    eax,DWORD PTR [rsp+0x3c]
  41b5ac:	sub    eax,0x2
  41b5af:	cmp    eax,0x1
  41b5b2:	jbe    41b85a <fb_symbol_table_visit@@Base+0x4fa>
  41b5b8:	add    r13,QWORD PTR [rsp]
  41b5bc:	lea    rbx,[rsi+0x1]
  41b5c0:	mov    QWORD PTR [rsp+0x18],0x0
  41b5c9:	mov    r12,QWORD PTR [r13+0x0]
  41b5cd:	test   r12,r12
  41b5d0:	je     41b6b5 <fb_symbol_table_visit@@Base+0x355>
  41b5d6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41b5e0:	cmp    r12,0x2
  41b5e4:	je     41b6f0 <fb_symbol_table_visit@@Base+0x390>
  41b5ea:	mov    edx,DWORD PTR [rsp+0x38]
  41b5ee:	mov    rcx,QWORD PTR [r12]
  41b5f2:	test   edx,edx
  41b5f4:	jle    41b708 <fb_symbol_table_visit@@Base+0x3a8>
  41b5fa:	test   rcx,rcx
  41b5fd:	je     41b688 <fb_symbol_table_visit@@Base+0x328>
  41b603:	mov    rax,QWORD PTR [rcx+0x8]
  41b607:	mov    rdx,QWORD PTR [rax+0x8]
  41b60b:	mov    rdi,QWORD PTR [rax]
  41b60e:	mov    rax,QWORD PTR [rsp+0x20]
  41b613:	cmp    rax,rdx
  41b616:	jb     41b688 <fb_symbol_table_visit@@Base+0x328>
  41b618:	mov    rsi,QWORD PTR [rsp+0x10]
  41b61d:	mov    r8,rax
  41b620:	test   rdx,rdx
  41b623:	je     41b797 <fb_symbol_table_visit@@Base+0x437>
  41b629:	movzx  eax,BYTE PTR [rsi]
  41b62c:	cmp    BYTE PTR [rdi],al
  41b62e:	jne    41b688 <fb_symbol_table_visit@@Base+0x328>
  41b630:	xor    eax,eax
  41b632:	jmp    41b643 <fb_symbol_table_visit@@Base+0x2e3>
  41b634:	nop    DWORD PTR [rax+0x0]
  41b638:	movzx  r14d,BYTE PTR [rsi+rax*1]
  41b63d:	cmp    BYTE PTR [rdi+rax*1],r14b
  41b641:	jne    41b688 <fb_symbol_table_visit@@Base+0x328>
  41b643:	add    rax,0x1
  41b647:	cmp    rax,rdx
  41b64a:	jne    41b638 <fb_symbol_table_visit@@Base+0x2d8>
  41b64c:	cmp    rdx,r8
  41b64f:	je     41b7a2 <fb_symbol_table_visit@@Base+0x442>
  41b655:	cmp    BYTE PTR [rsi+rax*1],0x2e
  41b659:	jne    41b688 <fb_symbol_table_visit@@Base+0x328>
  41b65b:	mov    rcx,QWORD PTR [rcx]
  41b65e:	mov    rax,rdx
  41b661:	lea    rsi,[rsi+rdx*1+0x1]
  41b666:	not    rax
  41b669:	add    r8,rax
  41b66c:	test   rcx,rcx
  41b66f:	je     41b688 <fb_symbol_table_visit@@Base+0x328>
  41b671:	mov    rax,QWORD PTR [rcx+0x8]
  41b675:	mov    rdx,QWORD PTR [rax+0x8]
  41b679:	mov    rdi,QWORD PTR [rax]
  41b67c:	cmp    rdx,r8
  41b67f:	jbe    41b620 <fb_symbol_table_visit@@Base+0x2c0>
  41b681:	nop    DWORD PTR [rax+0x0]
  41b688:	mov    rax,QWORD PTR [rsp+0x8]
  41b68d:	mov    rsi,QWORD PTR [rsp]
  41b691:	and    rax,rbx
  41b694:	add    rbx,0x1
  41b698:	lea    r13,[rsi+rax*8]
  41b69c:	mov    r12,QWORD PTR [r13+0x0]
  41b6a0:	test   r12,r12
  41b6a3:	jne    41b5e0 <fb_symbol_table_visit@@Base+0x280>
  41b6a9:	mov    rax,QWORD PTR [rsp+0x18]
  41b6ae:	test   rax,rax
  41b6b1:	cmovne r13,rax
  41b6b5:	mov    rax,QWORD PTR [rsp+0x30]
  41b6ba:	mov    QWORD PTR [rsp+0x18],r13
  41b6bf:	xor    r12d,r12d
  41b6c2:	mov    rbx,QWORD PTR [rsp+0x28]
  41b6c7:	add    QWORD PTR [rax+0x10],0x1
  41b6cc:	mov    rax,QWORD PTR [rsp+0x18]
  41b6d1:	mov    QWORD PTR [rax],rbx
  41b6d4:	add    rsp,0x48
  41b6d8:	mov    rax,r12
  41b6db:	pop    rbx
  41b6dc:	pop    rbp
  41b6dd:	pop    r12
  41b6df:	pop    r13
  41b6e1:	pop    r14
  41b6e3:	pop    r15
  41b6e5:	ret    
  41b6e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41b6f0:	mov    rax,QWORD PTR [rsp+0x18]
  41b6f5:	test   rax,rax
  41b6f8:	cmovne r13,rax
  41b6fc:	mov    QWORD PTR [rsp+0x18],r13
  41b701:	jmp    41b688 <fb_symbol_table_visit@@Base+0x328>
  41b703:	nop    DWORD PTR [rax+rax*1+0x0]
  41b708:	mov    r14,QWORD PTR [rsp+0x10]
  41b70d:	mov    ebp,DWORD PTR [rsp+0x38]
  41b711:	mov    r15,rcx
  41b714:	jmp    41b73e <fb_symbol_table_visit@@Base+0x3de>
  41b716:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41b720:	mov    rsi,QWORD PTR [rcx]
  41b723:	mov    rdi,QWORD PTR [rax]
  41b726:	call   405070 <strncmp@plt>
  41b72b:	test   eax,eax
  41b72d:	jne    41b688 <fb_symbol_table_visit@@Base+0x328>
  41b733:	add    ebp,0x1
  41b736:	mov    r15,QWORD PTR [r15]
  41b739:	mov    r14,QWORD PTR [r14]
  41b73c:	je     41b76d <fb_symbol_table_visit@@Base+0x40d>
  41b73e:	test   r15,r15
  41b741:	setne  dl
  41b744:	test   r14,r14
  41b747:	setne  al
  41b74a:	test   dl,dl
  41b74c:	je     41b7ad <fb_symbol_table_visit@@Base+0x44d>
  41b74e:	test   al,al
  41b750:	je     41b688 <fb_symbol_table_visit@@Base+0x328>
  41b756:	mov    rax,QWORD PTR [r15+0x8]
  41b75a:	mov    rcx,QWORD PTR [r14+0x8]
  41b75e:	mov    rdx,QWORD PTR [rax+0x8]
  41b762:	cmp    rdx,QWORD PTR [rcx+0x8]
  41b766:	je     41b720 <fb_symbol_table_visit@@Base+0x3c0>
  41b768:	jmp    41b688 <fb_symbol_table_visit@@Base+0x328>
  41b76d:	xor    eax,eax
  41b76f:	test   r15,r15
  41b772:	sete   al
  41b775:	test   eax,eax
  41b777:	je     41b688 <fb_symbol_table_visit@@Base+0x328>
  41b77d:	mov    eax,DWORD PTR [rsp+0x3c]
  41b781:	test   eax,eax
  41b783:	jne    41b6d4 <fb_symbol_table_visit@@Base+0x374>
  41b789:	mov    rax,QWORD PTR [rsp+0x28]
  41b78e:	mov    QWORD PTR [r13+0x0],rax
  41b792:	jmp    41b6d4 <fb_symbol_table_visit@@Base+0x374>
  41b797:	xor    eax,eax
  41b799:	cmp    rdx,r8
  41b79c:	jne    41b655 <fb_symbol_table_visit@@Base+0x2f5>
  41b7a2:	xor    eax,eax
  41b7a4:	cmp    QWORD PTR [rcx],0x0
  41b7a8:	sete   al
  41b7ab:	jmp    41b775 <fb_symbol_table_visit@@Base+0x415>
  41b7ad:	test   al,al
  41b7af:	je     41b77d <fb_symbol_table_visit@@Base+0x41d>
  41b7b1:	jmp    41b688 <fb_symbol_table_visit@@Base+0x328>
  41b7b6:	mov    rcx,r12
  41b7b9:	xor    r9d,r9d
  41b7bc:	jmp    41b56d <fb_symbol_table_visit@@Base+0x20d>
  41b7c1:	mov    rax,QWORD PTR [rsp+0x10]
  41b7c6:	xor    esi,esi
  41b7c8:	mov    r9d,DWORD PTR [rsp+0x20]
  41b7cd:	mov    r10d,0x9e3779b1
  41b7d3:	test   rax,rax
  41b7d6:	mov    r8,rax
  41b7d9:	je     41b8b3 <fb_symbol_table_visit@@Base+0x553>
  41b7df:	nop
  41b7e0:	mov    rax,QWORD PTR [r8+0x8]
  41b7e4:	mov    r11,QWORD PTR [rax]
  41b7e7:	mov    rax,QWORD PTR [rax+0x8]
  41b7eb:	sub    rax,0x1
  41b7ef:	je     41b853 <fb_symbol_table_visit@@Base+0x4f3>
  41b7f1:	movzx  edx,BYTE PTR [r11]
  41b7f5:	lea    rdi,[r11+0x1]
  41b7f9:	test   dl,dl
  41b7fb:	je     41b853 <fb_symbol_table_visit@@Base+0x4f3>
  41b7fd:	add    r11,rax
  41b800:	mov    eax,0x2f692e57
  41b805:	jmp    41b81c <fb_symbol_table_visit@@Base+0x4bc>
  41b807:	nop    WORD PTR [rax+rax*1+0x0]
  41b810:	add    rdi,0x1
  41b814:	movzx  edx,BYTE PTR [rdi-0x1]
  41b818:	test   dl,dl
  41b81a:	je     41b82e <fb_symbol_table_visit@@Base+0x4ce>
  41b81c:	mov    rcx,rax
  41b81f:	shl    rcx,0x5
  41b823:	add    rax,rcx
  41b826:	xor    rax,rdx
  41b829:	cmp    rdi,r11
  41b82c:	jne    41b810 <fb_symbol_table_visit@@Base+0x4b0>
  41b82e:	xor    rsi,0x2f693b52
  41b835:	mov    r8,QWORD PTR [r8]
  41b838:	xor    rsi,rax
  41b83b:	imul   rsi,r10
  41b83f:	add    r9d,0x1
  41b843:	je     41b59c <fb_symbol_table_visit@@Base+0x23c>
  41b849:	test   r8,r8
  41b84c:	jne    41b7e0 <fb_symbol_table_visit@@Base+0x480>
  41b84e:	jmp    41b59c <fb_symbol_table_visit@@Base+0x23c>
  41b853:	mov    eax,0x2f692e57
  41b858:	jmp    41b82e <fb_symbol_table_visit@@Base+0x4ce>
  41b85a:	mov    rdx,QWORD PTR [rsp]
  41b85e:	mov    rax,QWORD PTR [rsp+0x30]
  41b863:	add    r13,rdx
  41b866:	add    QWORD PTR [rax+0x10],0x1
  41b86b:	mov    rax,QWORD PTR [r13+0x0]
  41b86f:	test   rax,rax
  41b872:	je     41b8a2 <fb_symbol_table_visit@@Base+0x542>
  41b874:	cmp    rax,0x2
  41b878:	je     41b8a2 <fb_symbol_table_visit@@Base+0x542>
  41b87a:	add    rsi,0x1
  41b87e:	mov    rcx,QWORD PTR [rsp+0x8]
  41b883:	jmp    41b88b <fb_symbol_table_visit@@Base+0x52b>
  41b885:	cmp    rax,0x2
  41b889:	je     41b8a2 <fb_symbol_table_visit@@Base+0x542>
  41b88b:	mov    rax,rcx
  41b88e:	and    rax,rsi
  41b891:	add    rsi,0x1
  41b895:	lea    r13,[rdx+rax*8]
  41b899:	mov    rax,QWORD PTR [r13+0x0]
  41b89d:	test   rax,rax
  41b8a0:	jne    41b885 <fb_symbol_table_visit@@Base+0x525>
  41b8a2:	mov    rax,QWORD PTR [rsp+0x28]
  41b8a7:	xor    r12d,r12d
  41b8aa:	mov    QWORD PTR [r13+0x0],rax
  41b8ae:	jmp    41b6d4 <fb_symbol_table_visit@@Base+0x374>
  41b8b3:	xor    r13d,r13d
  41b8b6:	mov    rsi,rax
  41b8b9:	jmp    41b5a8 <fb_symbol_table_visit@@Base+0x248>
  41b8be:	lea    rcx,[rip+0x2aa63]        # 446328 <fb_symbol_table_missing@@Base+0x8>
  41b8c5:	lea    rsi,[rip+0x2a8e4]        # 4461b0 <_IO_stdin_used@@Base+0x191b0>
  41b8cc:	lea    rdi,[rip+0x2a9ae]        # 446281 <_IO_stdin_used@@Base+0x19281>
  41b8d3:	mov    edx,0x74
  41b8d8:	call   405100 <__assert_fail@plt>
  41b8dd:	lea    rcx,[rip+0x2aa44]        # 446328 <fb_symbol_table_missing@@Base+0x8>
  41b8e4:	lea    rsi,[rip+0x2a8c5]        # 4461b0 <_IO_stdin_used@@Base+0x191b0>
  41b8eb:	lea    rdi,[rip+0x2a978]        # 44626a <_IO_stdin_used@@Base+0x1926a>
  41b8f2:	mov    edx,0x73
  41b8f7:	call   405100 <__assert_fail@plt>
  41b8fc:	lea    rcx,[rip+0x2aa25]        # 446328 <fb_symbol_table_missing@@Base+0x8>
  41b903:	lea    rsi,[rip+0x2a8a6]        # 4461b0 <_IO_stdin_used@@Base+0x191b0>
  41b90a:	lea    rdi,[rip+0x2a942]        # 446253 <_IO_stdin_used@@Base+0x19253>
  41b911:	mov    edx,0x72
  41b916:	call   405100 <__assert_fail@plt>
  41b91b:	mov    rax,QWORD PTR [rip+0x356c6]        # 450fe8 <stderr@GLIBC_2.2.5>
  41b922:	lea    rcx,[rip+0x2a8f7]        # 446220 <_IO_stdin_used@@Base+0x19220>
  41b929:	lea    rdx,[rip+0x2a966]        # 446296 <_IO_stdin_used@@Base+0x19296>
  41b930:	mov    esi,0x1
  41b935:	mov    rdi,QWORD PTR [rax]
  41b938:	xor    eax,eax
  41b93a:	call   405200 <__fprintf_chk@plt>
  41b93f:	mov    edi,0x1
  41b944:	call   4051e0 <exit@plt>
  41b949:	nop    DWORD PTR [rax+0x0]
  41b950:	push   r13
  41b952:	push   r12
  41b954:	push   rbp
  41b955:	push   rbx
  41b956:	mov    rbp,rdi
  41b959:	mov    ebx,0x4
  41b95e:	sub    rsp,0x38
  41b962:	mov    r12,QWORD PTR [rdi]
  41b965:	mov    rax,QWORD PTR fs:0x28
  41b96e:	mov    QWORD PTR [rsp+0x28],rax
  41b973:	xor    eax,eax
  41b975:	cmp    QWORD PTR [rdi+0x10],rsi
  41b979:	cmovae rsi,QWORD PTR [rdi+0x10]
  41b97e:	cmp    rsi,0x2
  41b982:	jbe    41b99b <fb_symbol_table_visit@@Base+0x63b>
  41b984:	nop    DWORD PTR [rax+0x0]
  41b988:	add    rbx,rbx
  41b98b:	imul   rax,rbx,0xb3
  41b992:	shr    rax,0x8
  41b996:	cmp    rsi,rax
  41b999:	ja     41b988 <fb_symbol_table_visit@@Base+0x628>
  41b99b:	mov    esi,0x8
  41b9a0:	mov    rdi,rbx
  41b9a3:	call   405140 <calloc@plt>
  41b9a8:	test   rax,rax
  41b9ab:	mov    QWORD PTR [rsp],rax
  41b9af:	je     41ba57 <fb_symbol_table_visit@@Base+0x6f7>
  41b9b5:	mov    QWORD PTR [rsp+0x18],rbx
  41b9ba:	xor    ebx,ebx
  41b9bc:	cmp    QWORD PTR [rbp+0x18],0x0
  41b9c1:	mov    QWORD PTR [rsp+0x8],0x0
  41b9ca:	mov    QWORD PTR [rsp+0x10],0x0
  41b9d3:	mov    r13,rsp
  41b9d6:	je     41ba0f <fb_symbol_table_visit@@Base+0x6af>
  41b9d8:	nop    DWORD PTR [rax+rax*1+0x0]
  41b9e0:	mov    rax,QWORD PTR [r12+rbx*8]
  41b9e4:	test   rax,rax
  41b9e7:	je     41ba05 <fb_symbol_table_visit@@Base+0x6a5>
  41b9e9:	cmp    rax,0x2
  41b9ed:	je     41ba05 <fb_symbol_table_visit@@Base+0x6a5>
  41b9ef:	mov    rsi,QWORD PTR [rax]
  41b9f2:	mov    r8d,0x3
  41b9f8:	mov    rcx,rax
  41b9fb:	xor    edx,edx
  41b9fd:	mov    rdi,r13
  41ba00:	call   41b3f0 <fb_symbol_table_visit@@Base+0x90>
  41ba05:	add    rbx,0x1
  41ba09:	cmp    QWORD PTR [rbp+0x18],rbx
  41ba0d:	ja     41b9e0 <fb_symbol_table_visit@@Base+0x680>
  41ba0f:	mov    rdi,rbp
  41ba12:	call   41b3b0 <fb_symbol_table_visit@@Base+0x50>
  41ba17:	mov    rax,QWORD PTR [rsp]
  41ba1b:	mov    QWORD PTR [rbp+0x0],rax
  41ba1f:	mov    rax,QWORD PTR [rsp+0x8]
  41ba24:	mov    QWORD PTR [rbp+0x8],rax
  41ba28:	mov    rax,QWORD PTR [rsp+0x10]
  41ba2d:	mov    QWORD PTR [rbp+0x10],rax
  41ba31:	mov    rax,QWORD PTR [rsp+0x18]
  41ba36:	mov    QWORD PTR [rbp+0x18],rax
  41ba3a:	xor    eax,eax
  41ba3c:	mov    rdx,QWORD PTR [rsp+0x28]
  41ba41:	xor    rdx,QWORD PTR fs:0x28
  41ba4a:	jne    41ba5e <fb_symbol_table_visit@@Base+0x6fe>
  41ba4c:	add    rsp,0x38
  41ba50:	pop    rbx
  41ba51:	pop    rbp
  41ba52:	pop    r12
  41ba54:	pop    r13
  41ba56:	ret    
  41ba57:	mov    eax,0xffffffff
  41ba5c:	jmp    41ba3c <fb_symbol_table_visit@@Base+0x6dc>
  41ba5e:	call   4050d0 <__stack_chk_fail@plt>
  41ba63:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  41ba6e:	xchg   ax,ax
  41ba70:	push   r15
  41ba72:	push   r14
  41ba74:	push   r13
  41ba76:	push   r12
  41ba78:	push   rbp
  41ba79:	push   rbx
  41ba7a:	sub    rsp,0x28
  41ba7e:	test   rdi,rdi
  41ba81:	je     41bddb <fb_symbol_table_visit@@Base+0xa7b>
  41ba87:	mov    rax,QWORD PTR [rsi]
  41ba8a:	mov    DWORD PTR [rsp+0xc],ecx
  41ba8e:	sub    rax,0x1
  41ba92:	test   ecx,ecx
  41ba94:	mov    QWORD PTR [rsp],rax
  41ba98:	jle    41bd4c <fb_symbol_table_visit@@Base+0x9ec>
  41ba9e:	mov    r14,rcx
  41baa1:	xor    r9d,r9d
  41baa4:	mov    r12,rdx
  41baa7:	test   r14,r14
  41baaa:	mov    r15,0xffffffffffffffff
  41bab1:	mov    r13d,0x9e3779b1
  41bab7:	je     41bb5a <fb_symbol_table_visit@@Base+0x7fa>
  41babd:	nop    DWORD PTR [rax]
  41bac0:	cmp    BYTE PTR [r12],0x2e
  41bac5:	je     41bd42 <fb_symbol_table_visit@@Base+0x9e2>
  41bacb:	xor    r10d,r10d
  41bace:	jmp    41badf <fb_symbol_table_visit@@Base+0x77f>
  41bad0:	cmp    BYTE PTR [r12+r10*1+0x1],0x2e
  41bad6:	je     41bc88 <fb_symbol_table_visit@@Base+0x928>
  41badc:	mov    r10,rbx
  41badf:	lea    rbx,[r10+0x1]
  41bae3:	cmp    rbx,r14
  41bae6:	jne    41bad0 <fb_symbol_table_visit@@Base+0x770>
  41bae8:	test   r10,r10
  41baeb:	je     41bb6e <fb_symbol_table_visit@@Base+0x80e>
  41baf1:	movzx  esi,BYTE PTR [r12]
  41baf6:	lea    r11,[r12+0x1]
  41bafb:	test   sil,sil
  41bafe:	je     41bb6e <fb_symbol_table_visit@@Base+0x80e>
  41bb00:	add    r10,r12
  41bb03:	mov    eax,0x2f692e57
  41bb08:	jmp    41bb1e <fb_symbol_table_visit@@Base+0x7be>
  41bb0a:	nop    WORD PTR [rax+rax*1+0x0]
  41bb10:	add    r11,0x1
  41bb14:	movzx  esi,BYTE PTR [r11-0x1]
  41bb19:	test   sil,sil
  41bb1c:	je     41bb30 <fb_symbol_table_visit@@Base+0x7d0>
  41bb1e:	mov    r8,rax
  41bb21:	shl    r8,0x5
  41bb25:	add    rax,r8
  41bb28:	xor    rax,rsi
  41bb2b:	cmp    r11,r10
  41bb2e:	jne    41bb10 <fb_symbol_table_visit@@Base+0x7b0>
  41bb30:	xor    r9,0x2f693b52
  41bb37:	xor    r9,rax
  41bb3a:	imul   r9,r13
  41bb3e:	cmp    r14,rbx
  41bb41:	je     41bb84 <fb_symbol_table_visit@@Base+0x824>
  41bb43:	mov    rax,rbx
  41bb46:	lea    r12,[r12+rbx*1+0x1]
  41bb4b:	not    rax
  41bb4e:	add    r14,rax
  41bb51:	test   r14,r14
  41bb54:	jne    41bac0 <fb_symbol_table_visit@@Base+0x760>
  41bb5a:	movzx  esi,BYTE PTR [r12]
  41bb5f:	xor    ebx,ebx
  41bb61:	mov    r10,r15
  41bb64:	lea    r11,[r12+0x1]
  41bb69:	test   sil,sil
  41bb6c:	jne    41bb00 <fb_symbol_table_visit@@Base+0x7a0>
  41bb6e:	mov    rbx,r9
  41bb71:	mov    esi,0x9e3779b1
  41bb76:	xor    rbx,0x1505
  41bb7d:	imul   rbx,rsi
  41bb81:	mov    r9,rbx
  41bb84:	mov    rax,QWORD PTR [rsp]
  41bb88:	and    rax,r9
  41bb8b:	shl    rax,0x3
  41bb8f:	mov    r12,QWORD PTR [rdi+rax*1]
  41bb93:	test   r12,r12
  41bb96:	je     41bc70 <fb_symbol_table_visit@@Base+0x910>
  41bb9c:	lea    rbx,[r9+0x1]
  41bba0:	mov    QWORD PTR [rsp+0x18],rcx
  41bba5:	mov    QWORD PTR [rsp+0x10],rdx
  41bbaa:	mov    r14,rdi
  41bbad:	nop    DWORD PTR [rax]
  41bbb0:	cmp    r12,0x2
  41bbb4:	je     41bc58 <fb_symbol_table_visit@@Base+0x8f8>
  41bbba:	mov    eax,DWORD PTR [rsp+0xc]
  41bbbe:	mov    rcx,QWORD PTR [r12]
  41bbc2:	test   eax,eax
  41bbc4:	jle    41bcb0 <fb_symbol_table_visit@@Base+0x950>
  41bbca:	test   rcx,rcx
  41bbcd:	je     41bc58 <fb_symbol_table_visit@@Base+0x8f8>
  41bbd3:	mov    rax,QWORD PTR [rcx+0x8]
  41bbd7:	mov    rdx,QWORD PTR [rax+0x8]
  41bbdb:	mov    rdi,QWORD PTR [rax]
  41bbde:	mov    rax,QWORD PTR [rsp+0x18]
  41bbe3:	cmp    rax,rdx
  41bbe6:	jb     41bc58 <fb_symbol_table_visit@@Base+0x8f8>
  41bbe8:	mov    rsi,QWORD PTR [rsp+0x10]
  41bbed:	mov    r8,rax
  41bbf0:	test   rdx,rdx
  41bbf3:	je     41bd1f <fb_symbol_table_visit@@Base+0x9bf>
  41bbf9:	movzx  eax,BYTE PTR [rdi]
  41bbfc:	cmp    BYTE PTR [rsi],al
  41bbfe:	jne    41bc58 <fb_symbol_table_visit@@Base+0x8f8>
  41bc00:	xor    eax,eax
  41bc02:	jmp    41bc13 <fb_symbol_table_visit@@Base+0x8b3>
  41bc04:	nop    DWORD PTR [rax+0x0]
  41bc08:	movzx  r15d,BYTE PTR [rsi+rax*1]
  41bc0d:	cmp    BYTE PTR [rdi+rax*1],r15b
  41bc11:	jne    41bc58 <fb_symbol_table_visit@@Base+0x8f8>
  41bc13:	add    rax,0x1
  41bc17:	cmp    rax,rdx
  41bc1a:	jne    41bc08 <fb_symbol_table_visit@@Base+0x8a8>
  41bc1c:	cmp    rdx,r8
  41bc1f:	je     41bd2a <fb_symbol_table_visit@@Base+0x9ca>
  41bc25:	cmp    BYTE PTR [rsi+rax*1],0x2e
  41bc29:	jne    41bc58 <fb_symbol_table_visit@@Base+0x8f8>
  41bc2b:	mov    rcx,QWORD PTR [rcx]
  41bc2e:	mov    rax,rdx
  41bc31:	lea    rsi,[rsi+rdx*1+0x1]
  41bc36:	not    rax
  41bc39:	add    r8,rax
  41bc3c:	test   rcx,rcx
  41bc3f:	je     41bc58 <fb_symbol_table_visit@@Base+0x8f8>
  41bc41:	mov    rax,QWORD PTR [rcx+0x8]
  41bc45:	mov    rdx,QWORD PTR [rax+0x8]
  41bc49:	mov    rdi,QWORD PTR [rax]
  41bc4c:	cmp    rdx,r8
  41bc4f:	jbe    41bbf0 <fb_symbol_table_visit@@Base+0x890>
  41bc51:	nop    DWORD PTR [rax+0x0]
  41bc58:	mov    rax,QWORD PTR [rsp]
  41bc5c:	and    rax,rbx
  41bc5f:	add    rbx,0x1
  41bc63:	mov    r12,QWORD PTR [r14+rax*8]
  41bc67:	test   r12,r12
  41bc6a:	jne    41bbb0 <fb_symbol_table_visit@@Base+0x850>
  41bc70:	add    rsp,0x28
  41bc74:	mov    rax,r12
  41bc77:	pop    rbx
  41bc78:	pop    rbp
  41bc79:	pop    r12
  41bc7b:	pop    r13
  41bc7d:	pop    r14
  41bc7f:	pop    r15
  41bc81:	ret    
  41bc82:	nop    WORD PTR [rax+rax*1+0x0]
  41bc88:	test   r10,r10
  41bc8b:	je     41bca0 <fb_symbol_table_visit@@Base+0x940>
  41bc8d:	movzx  esi,BYTE PTR [r12]
  41bc92:	lea    r11,[r12+0x1]
  41bc97:	test   sil,sil
  41bc9a:	jne    41bb00 <fb_symbol_table_visit@@Base+0x7a0>
  41bca0:	xor    r9,0x1505
  41bca7:	imul   r9,r13
  41bcab:	jmp    41bb43 <fb_symbol_table_visit@@Base+0x7e3>
  41bcb0:	mov    r15,QWORD PTR [rsp+0x10]
  41bcb5:	mov    ebp,DWORD PTR [rsp+0xc]
  41bcb9:	mov    r13,rcx
  41bcbc:	jmp    41bcdb <fb_symbol_table_visit@@Base+0x97b>
  41bcbe:	xchg   ax,ax
  41bcc0:	mov    rsi,QWORD PTR [rsi]
  41bcc3:	mov    rdi,QWORD PTR [rax]
  41bcc6:	call   405070 <strncmp@plt>
  41bccb:	test   eax,eax
  41bccd:	jne    41bc58 <fb_symbol_table_visit@@Base+0x8f8>
  41bccf:	add    ebp,0x1
  41bcd2:	mov    r13,QWORD PTR [r13+0x0]
  41bcd6:	mov    r15,QWORD PTR [r15]
  41bcd9:	je     41bd0a <fb_symbol_table_visit@@Base+0x9aa>
  41bcdb:	test   r13,r13
  41bcde:	setne  dl
  41bce1:	test   r15,r15
  41bce4:	setne  al
  41bce7:	test   dl,dl
  41bce9:	je     41bd35 <fb_symbol_table_visit@@Base+0x9d5>
  41bceb:	test   al,al
  41bced:	je     41bc58 <fb_symbol_table_visit@@Base+0x8f8>
  41bcf3:	mov    rax,QWORD PTR [r13+0x8]
  41bcf7:	mov    rsi,QWORD PTR [r15+0x8]
  41bcfb:	mov    rdx,QWORD PTR [rax+0x8]
  41bcff:	cmp    rdx,QWORD PTR [rsi+0x8]
  41bd03:	je     41bcc0 <fb_symbol_table_visit@@Base+0x960>
  41bd05:	jmp    41bc58 <fb_symbol_table_visit@@Base+0x8f8>
  41bd0a:	xor    eax,eax
  41bd0c:	test   r13,r13
  41bd0f:	sete   al
  41bd12:	test   eax,eax
  41bd14:	jne    41bc70 <fb_symbol_table_visit@@Base+0x910>
  41bd1a:	jmp    41bc58 <fb_symbol_table_visit@@Base+0x8f8>
  41bd1f:	xor    eax,eax
  41bd21:	cmp    rdx,r8
  41bd24:	jne    41bc25 <fb_symbol_table_visit@@Base+0x8c5>
  41bd2a:	xor    eax,eax
  41bd2c:	cmp    QWORD PTR [rcx],0x0
  41bd30:	sete   al
  41bd33:	jmp    41bd12 <fb_symbol_table_visit@@Base+0x9b2>
  41bd35:	test   al,al
  41bd37:	je     41bc70 <fb_symbol_table_visit@@Base+0x910>
  41bd3d:	jmp    41bc58 <fb_symbol_table_visit@@Base+0x8f8>
  41bd42:	mov    r10,r15
  41bd45:	xor    ebx,ebx
  41bd47:	jmp    41bc8d <fb_symbol_table_visit@@Base+0x92d>
  41bd4c:	xor    r9d,r9d
  41bd4f:	test   rdx,rdx
  41bd52:	mov    ebp,ecx
  41bd54:	mov    r11,rdx
  41bd57:	mov    r12d,0x9e3779b1
  41bd5d:	je     41bde3 <fb_symbol_table_visit@@Base+0xa83>
  41bd63:	nop    DWORD PTR [rax+rax*1+0x0]
  41bd68:	mov    rax,QWORD PTR [r11+0x8]
  41bd6c:	mov    rbx,QWORD PTR [rax]
  41bd6f:	mov    rax,QWORD PTR [rax+0x8]
  41bd73:	sub    rax,0x1
  41bd77:	je     41bdd4 <fb_symbol_table_visit@@Base+0xa74>
  41bd79:	movzx  esi,BYTE PTR [rbx]
  41bd7c:	lea    r8,[rbx+0x1]
  41bd80:	test   sil,sil
  41bd83:	je     41bdd4 <fb_symbol_table_visit@@Base+0xa74>
  41bd85:	add    rbx,rax
  41bd88:	mov    eax,0x2f692e57
  41bd8d:	jmp    41bd9e <fb_symbol_table_visit@@Base+0xa3e>
  41bd8f:	nop
  41bd90:	add    r8,0x1
  41bd94:	movzx  esi,BYTE PTR [r8-0x1]
  41bd99:	test   sil,sil
  41bd9c:	je     41bdb0 <fb_symbol_table_visit@@Base+0xa50>
  41bd9e:	mov    r10,rax
  41bda1:	shl    r10,0x5
  41bda5:	add    rax,r10
  41bda8:	xor    rax,rsi
  41bdab:	cmp    r8,rbx
  41bdae:	jne    41bd90 <fb_symbol_table_visit@@Base+0xa30>
  41bdb0:	xor    r9,0x2f693b52
  41bdb7:	mov    r11,QWORD PTR [r11]
  41bdba:	xor    r9,rax
  41bdbd:	imul   r9,r12
  41bdc1:	add    ebp,0x1
  41bdc4:	je     41bb84 <fb_symbol_table_visit@@Base+0x824>
  41bdca:	test   r11,r11
  41bdcd:	jne    41bd68 <fb_symbol_table_visit@@Base+0xa08>
  41bdcf:	jmp    41bb84 <fb_symbol_table_visit@@Base+0x824>
  41bdd4:	mov    eax,0x2f692e57
  41bdd9:	jmp    41bdb0 <fb_symbol_table_visit@@Base+0xa50>
  41bddb:	xor    r12d,r12d
  41bdde:	jmp    41bc70 <fb_symbol_table_visit@@Base+0x910>
  41bde3:	xor    eax,eax
  41bde5:	mov    r9,rdx
  41bde8:	jmp    41bb8f <fb_symbol_table_visit@@Base+0x82f>
  41bded:	nop    DWORD PTR [rax]
  41bdf0:	push   r15
  41bdf2:	push   r14
  41bdf4:	push   r13
  41bdf6:	push   r12
  41bdf8:	push   rbp
  41bdf9:	push   rbx
  41bdfa:	sub    rsp,0x38
  41bdfe:	mov    rax,QWORD PTR [rdi]
  41be01:	test   rax,rax
  41be04:	mov    QWORD PTR [rsp],rax
  41be08:	je     41c18a <fb_symbol_table_visit@@Base+0xe2a>
  41be0e:	mov    rax,QWORD PTR [rdi+0x18]
  41be12:	mov    r15,rsi
  41be15:	mov    DWORD PTR [rsp+0x14],edx
  41be19:	sub    rax,0x1
  41be1d:	test   edx,edx
  41be1f:	mov    QWORD PTR [rsp+0x8],rax
  41be24:	jle    41c0fe <fb_symbol_table_visit@@Base+0xd9e>
  41be2a:	mov    r12,rdx
  41be2d:	xor    r8d,r8d
  41be30:	mov    rbp,rsi
  41be33:	test   r12,r12
  41be36:	mov    r14,0xffffffffffffffff
  41be3d:	mov    r13d,0x9e3779b1
  41be43:	je     41bee1 <fb_symbol_table_visit@@Base+0xb81>
  41be49:	nop    DWORD PTR [rax+0x0]
  41be50:	cmp    BYTE PTR [rbp+0x0],0x2e
  41be54:	je     41c0f3 <fb_symbol_table_visit@@Base+0xd93>
  41be5a:	xor    r9d,r9d
  41be5d:	jmp    41be6f <fb_symbol_table_visit@@Base+0xb0f>
  41be5f:	nop
  41be60:	cmp    BYTE PTR [rbp+r9*1+0x1],0x2e
  41be66:	je     41c020 <fb_symbol_table_visit@@Base+0xcc0>
  41be6c:	mov    r9,r11
  41be6f:	lea    r11,[r9+0x1]
  41be73:	cmp    r11,r12
  41be76:	jne    41be60 <fb_symbol_table_visit@@Base+0xb00>
  41be78:	test   r9,r9
  41be7b:	je     41bef3 <fb_symbol_table_visit@@Base+0xb93>
  41be7d:	movzx  ecx,BYTE PTR [rbp+0x0]
  41be81:	lea    r10,[rbp+0x1]
  41be85:	test   cl,cl
  41be87:	je     41bef3 <fb_symbol_table_visit@@Base+0xb93>
  41be89:	add    r9,rbp
  41be8c:	mov    eax,0x2f692e57
  41be91:	jmp    41bea5 <fb_symbol_table_visit@@Base+0xb45>
  41be93:	nop    DWORD PTR [rax+rax*1+0x0]
  41be98:	add    r10,0x1
  41be9c:	movzx  ecx,BYTE PTR [r10-0x1]
  41bea1:	test   cl,cl
  41bea3:	je     41beb7 <fb_symbol_table_visit@@Base+0xb57>
  41bea5:	mov    rsi,rax
  41bea8:	shl    rsi,0x5
  41beac:	add    rax,rsi
  41beaf:	xor    rax,rcx
  41beb2:	cmp    r10,r9
  41beb5:	jne    41be98 <fb_symbol_table_visit@@Base+0xb38>
  41beb7:	xor    r8,0x2f693b52
  41bebe:	xor    r8,rax
  41bec1:	imul   r8,r13
  41bec5:	cmp    r12,r11
  41bec8:	je     41bf09 <fb_symbol_table_visit@@Base+0xba9>
  41beca:	mov    rax,r11
  41becd:	lea    rbp,[rbp+r11*1+0x1]
  41bed2:	not    rax
  41bed5:	add    r12,rax
  41bed8:	test   r12,r12
  41bedb:	jne    41be50 <fb_symbol_table_visit@@Base+0xaf0>
  41bee1:	movzx  ecx,BYTE PTR [rbp+0x0]
  41bee5:	xor    r11d,r11d
  41bee8:	mov    r9,r14
  41beeb:	lea    r10,[rbp+0x1]
  41beef:	test   cl,cl
  41bef1:	jne    41be89 <fb_symbol_table_visit@@Base+0xb29>
  41bef3:	mov    rbx,r8
  41bef6:	mov    ecx,0x9e3779b1
  41befb:	xor    rbx,0x1505
  41bf02:	imul   rbx,rcx
  41bf06:	mov    r8,rbx
  41bf09:	mov    r13,QWORD PTR [rsp+0x8]
  41bf0e:	and    r13,r8
  41bf11:	shl    r13,0x3
  41bf15:	add    r13,QWORD PTR [rsp]
  41bf19:	mov    r12,QWORD PTR [r13+0x0]
  41bf1d:	test   r12,r12
  41bf20:	je     41c009 <fb_symbol_table_visit@@Base+0xca9>
  41bf26:	lea    rbx,[r8+0x1]
  41bf2a:	mov    QWORD PTR [rsp+0x20],rdx
  41bf2f:	mov    QWORD PTR [rsp+0x18],r15
  41bf34:	mov    QWORD PTR [rsp+0x28],rdi
  41bf39:	nop    DWORD PTR [rax+0x0]
  41bf40:	cmp    r12,0x2
  41bf44:	je     41bfe8 <fb_symbol_table_visit@@Base+0xc88>
  41bf4a:	mov    eax,DWORD PTR [rsp+0x14]
  41bf4e:	mov    rcx,QWORD PTR [r12]
  41bf52:	test   eax,eax
  41bf54:	jle    41c048 <fb_symbol_table_visit@@Base+0xce8>
  41bf5a:	test   rcx,rcx
  41bf5d:	je     41bfe8 <fb_symbol_table_visit@@Base+0xc88>
  41bf63:	mov    rax,QWORD PTR [rcx+0x8]
  41bf67:	mov    rdx,QWORD PTR [rax+0x8]
  41bf6b:	mov    rdi,QWORD PTR [rax]
  41bf6e:	mov    rax,QWORD PTR [rsp+0x20]
  41bf73:	cmp    rax,rdx
  41bf76:	jb     41bfe8 <fb_symbol_table_visit@@Base+0xc88>
  41bf78:	mov    rsi,QWORD PTR [rsp+0x18]
  41bf7d:	mov    r8,rax
  41bf80:	test   rdx,rdx
  41bf83:	je     41c0d4 <fb_symbol_table_visit@@Base+0xd74>
  41bf89:	movzx  eax,BYTE PTR [rsi]
  41bf8c:	cmp    BYTE PTR [rdi],al
  41bf8e:	jne    41bfe8 <fb_symbol_table_visit@@Base+0xc88>
  41bf90:	xor    eax,eax
  41bf92:	jmp    41bfa3 <fb_symbol_table_visit@@Base+0xc43>
  41bf94:	nop    DWORD PTR [rax+0x0]
  41bf98:	movzx  r14d,BYTE PTR [rsi+rax*1]
  41bf9d:	cmp    BYTE PTR [rdi+rax*1],r14b
  41bfa1:	jne    41bfe8 <fb_symbol_table_visit@@Base+0xc88>
  41bfa3:	add    rax,0x1
  41bfa7:	cmp    rax,rdx
  41bfaa:	jne    41bf98 <fb_symbol_table_visit@@Base+0xc38>
  41bfac:	cmp    rdx,r8
  41bfaf:	je     41c0df <fb_symbol_table_visit@@Base+0xd7f>
  41bfb5:	cmp    BYTE PTR [rsi+rax*1],0x2e
  41bfb9:	jne    41bfe8 <fb_symbol_table_visit@@Base+0xc88>
  41bfbb:	mov    rcx,QWORD PTR [rcx]
  41bfbe:	mov    rax,rdx
  41bfc1:	lea    rsi,[rsi+rdx*1+0x1]
  41bfc6:	not    rax
  41bfc9:	add    r8,rax
  41bfcc:	test   rcx,rcx
  41bfcf:	je     41bfe8 <fb_symbol_table_visit@@Base+0xc88>
  41bfd1:	mov    rax,QWORD PTR [rcx+0x8]
  41bfd5:	mov    rdx,QWORD PTR [rax+0x8]
  41bfd9:	mov    rdi,QWORD PTR [rax]
  41bfdc:	cmp    rdx,r8
  41bfdf:	jbe    41bf80 <fb_symbol_table_visit@@Base+0xc20>
  41bfe1:	nop    DWORD PTR [rax+0x0]
  41bfe8:	mov    rax,QWORD PTR [rsp+0x8]
  41bfed:	mov    rdi,QWORD PTR [rsp]
  41bff1:	and    rax,rbx
  41bff4:	add    rbx,0x1
  41bff8:	lea    r13,[rdi+rax*8]
  41bffc:	mov    r12,QWORD PTR [r13+0x0]
  41c000:	test   r12,r12
  41c003:	jne    41bf40 <fb_symbol_table_visit@@Base+0xbe0>
  41c009:	add    rsp,0x38
  41c00d:	mov    rax,r12
  41c010:	pop    rbx
  41c011:	pop    rbp
  41c012:	pop    r12
  41c014:	pop    r13
  41c016:	pop    r14
  41c018:	pop    r15
  41c01a:	ret    
  41c01b:	nop    DWORD PTR [rax+rax*1+0x0]
  41c020:	test   r9,r9
  41c023:	je     41c035 <fb_symbol_table_visit@@Base+0xcd5>
  41c025:	movzx  ecx,BYTE PTR [rbp+0x0]
  41c029:	lea    r10,[rbp+0x1]
  41c02d:	test   cl,cl
  41c02f:	jne    41be89 <fb_symbol_table_visit@@Base+0xb29>
  41c035:	xor    r8,0x1505
  41c03c:	imul   r8,r13
  41c040:	jmp    41beca <fb_symbol_table_visit@@Base+0xb6a>
  41c045:	nop    DWORD PTR [rax]
  41c048:	mov    r14,QWORD PTR [rsp+0x18]
  41c04d:	mov    ebp,DWORD PTR [rsp+0x14]
  41c051:	mov    r15,rcx
  41c054:	jmp    41c07e <fb_symbol_table_visit@@Base+0xd1e>
  41c056:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41c060:	mov    rsi,QWORD PTR [rsi]
  41c063:	mov    rdi,QWORD PTR [rax]
  41c066:	call   405070 <strncmp@plt>
  41c06b:	test   eax,eax
  41c06d:	jne    41bfe8 <fb_symbol_table_visit@@Base+0xc88>
  41c073:	add    ebp,0x1
  41c076:	mov    r15,QWORD PTR [r15]
  41c079:	mov    r14,QWORD PTR [r14]
  41c07c:	je     41c0ad <fb_symbol_table_visit@@Base+0xd4d>
  41c07e:	test   r15,r15
  41c081:	setne  dl
  41c084:	test   r14,r14
  41c087:	setne  al
  41c08a:	test   dl,dl
  41c08c:	je     41c0ea <fb_symbol_table_visit@@Base+0xd8a>
  41c08e:	test   al,al
  41c090:	je     41bfe8 <fb_symbol_table_visit@@Base+0xc88>
  41c096:	mov    rax,QWORD PTR [r15+0x8]
  41c09a:	mov    rsi,QWORD PTR [r14+0x8]
  41c09e:	mov    rdx,QWORD PTR [rax+0x8]
  41c0a2:	cmp    rdx,QWORD PTR [rsi+0x8]
  41c0a6:	je     41c060 <fb_symbol_table_visit@@Base+0xd00>
  41c0a8:	jmp    41bfe8 <fb_symbol_table_visit@@Base+0xc88>
  41c0ad:	xor    eax,eax
  41c0af:	test   r15,r15
  41c0b2:	sete   al
  41c0b5:	test   eax,eax
  41c0b7:	je     41bfe8 <fb_symbol_table_visit@@Base+0xc88>
  41c0bd:	mov    rax,QWORD PTR [rsp+0x28]
  41c0c2:	mov    QWORD PTR [r13+0x0],0x2
  41c0ca:	sub    QWORD PTR [rax+0x10],0x1
  41c0cf:	jmp    41c009 <fb_symbol_table_visit@@Base+0xca9>
  41c0d4:	xor    eax,eax
  41c0d6:	cmp    rdx,r8
  41c0d9:	jne    41bfb5 <fb_symbol_table_visit@@Base+0xc55>
  41c0df:	xor    eax,eax
  41c0e1:	cmp    QWORD PTR [rcx],0x0
  41c0e5:	sete   al
  41c0e8:	jmp    41c0b5 <fb_symbol_table_visit@@Base+0xd55>
  41c0ea:	test   al,al
  41c0ec:	je     41c0bd <fb_symbol_table_visit@@Base+0xd5d>
  41c0ee:	jmp    41bfe8 <fb_symbol_table_visit@@Base+0xc88>
  41c0f3:	mov    r9,r14
  41c0f6:	xor    r11d,r11d
  41c0f9:	jmp    41c025 <fb_symbol_table_visit@@Base+0xcc5>
  41c0fe:	xor    r8d,r8d
  41c101:	test   rsi,rsi
  41c104:	mov    r11d,edx
  41c107:	mov    r10,rsi
  41c10a:	mov    ebp,0x9e3779b1
  41c10f:	je     41c192 <fb_symbol_table_visit@@Base+0xe32>
  41c115:	nop    DWORD PTR [rax]
  41c118:	mov    rax,QWORD PTR [r10+0x8]
  41c11c:	mov    rbx,QWORD PTR [rax]
  41c11f:	mov    rax,QWORD PTR [rax+0x8]
  41c123:	sub    rax,0x1
  41c127:	je     41c183 <fb_symbol_table_visit@@Base+0xe23>
  41c129:	movzx  ecx,BYTE PTR [rbx]
  41c12c:	lea    rsi,[rbx+0x1]
  41c130:	test   cl,cl
  41c132:	je     41c183 <fb_symbol_table_visit@@Base+0xe23>
  41c134:	add    rbx,rax
  41c137:	mov    eax,0x2f692e57
  41c13c:	jmp    41c14c <fb_symbol_table_visit@@Base+0xdec>
  41c13e:	xchg   ax,ax
  41c140:	add    rsi,0x1
  41c144:	movzx  ecx,BYTE PTR [rsi-0x1]
  41c148:	test   cl,cl
  41c14a:	je     41c15e <fb_symbol_table_visit@@Base+0xdfe>
  41c14c:	mov    r9,rax
  41c14f:	shl    r9,0x5
  41c153:	add    rax,r9
  41c156:	xor    rax,rcx
  41c159:	cmp    rsi,rbx
  41c15c:	jne    41c140 <fb_symbol_table_visit@@Base+0xde0>
  41c15e:	xor    r8,0x2f693b52
  41c165:	mov    r10,QWORD PTR [r10]
  41c168:	xor    r8,rax
  41c16b:	imul   r8,rbp
  41c16f:	add    r11d,0x1
  41c173:	je     41bf09 <fb_symbol_table_visit@@Base+0xba9>
  41c179:	test   r10,r10
  41c17c:	jne    41c118 <fb_symbol_table_visit@@Base+0xdb8>
  41c17e:	jmp    41bf09 <fb_symbol_table_visit@@Base+0xba9>
  41c183:	mov    eax,0x2f692e57
  41c188:	jmp    41c15e <fb_symbol_table_visit@@Base+0xdfe>
  41c18a:	xor    r12d,r12d
  41c18d:	jmp    41c009 <fb_symbol_table_visit@@Base+0xca9>
  41c192:	xor    r13d,r13d
  41c195:	mov    r8,rsi
  41c198:	jmp    41bf15 <fb_symbol_table_visit@@Base+0xbb5>
  41c19d:	nop    DWORD PTR [rax]

000000000041c1a0 <fb_scope_table_clear@@Base>:
  41c1a0:	jmp    41b3b0 <fb_symbol_table_visit@@Base+0x50>
  41c1a5:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

000000000041c1b0 <fb_scope_table_destroy@@Base>:
  41c1b0:	test   rsi,rsi
  41c1b3:	push   r14
  41c1b5:	push   r13
  41c1b7:	push   r12
  41c1b9:	push   rbp
  41c1ba:	mov    rbp,rdi
  41c1bd:	push   rbx
  41c1be:	je     41c1f7 <fb_scope_table_destroy@@Base+0x47>
  41c1c0:	cmp    QWORD PTR [rdi+0x18],0x0
  41c1c5:	mov    r12,QWORD PTR [rdi]
  41c1c8:	je     41c1f7 <fb_scope_table_destroy@@Base+0x47>
  41c1ca:	mov    r13,rsi
  41c1cd:	mov    r14,rdx
  41c1d0:	xor    ebx,ebx
  41c1d2:	nop    WORD PTR [rax+rax*1+0x0]
  41c1d8:	mov    rsi,QWORD PTR [r12+rbx*8]
  41c1dc:	test   rsi,rsi
  41c1df:	je     41c1ed <fb_scope_table_destroy@@Base+0x3d>
  41c1e1:	cmp    rsi,0x2
  41c1e5:	je     41c1ed <fb_scope_table_destroy@@Base+0x3d>
  41c1e7:	mov    rdi,r14
  41c1ea:	call   r13
  41c1ed:	add    rbx,0x1
  41c1f1:	cmp    rbx,QWORD PTR [rbp+0x18]
  41c1f5:	jb     41c1d8 <fb_scope_table_destroy@@Base+0x28>
  41c1f7:	pop    rbx
  41c1f8:	mov    rdi,rbp
  41c1fb:	pop    rbp
  41c1fc:	pop    r12
  41c1fe:	pop    r13
  41c200:	pop    r14
  41c202:	jmp    41b3b0 <fb_symbol_table_visit@@Base+0x50>
  41c207:	nop    WORD PTR [rax+rax*1+0x0]

000000000041c210 <fb_scope_table_init@@Base>:
  41c210:	push   rbp
  41c211:	push   rbx
  41c212:	mov    rbp,rdi
  41c215:	mov    ebx,0x4
  41c21a:	sub    rsp,0x8
  41c21e:	cmp    rsi,0x2
  41c222:	jbe    41c23b <fb_scope_table_init@@Base+0x2b>
  41c224:	nop    DWORD PTR [rax+0x0]
  41c228:	add    rbx,rbx
  41c22b:	imul   rax,rbx,0xb3
  41c232:	shr    rax,0x8
  41c236:	cmp    rsi,rax
  41c239:	ja     41c228 <fb_scope_table_init@@Base+0x18>
  41c23b:	mov    esi,0x8
  41c240:	mov    rdi,rbx
  41c243:	call   405140 <calloc@plt>
  41c248:	test   rax,rax
  41c24b:	mov    QWORD PTR [rbp+0x0],rax
  41c24f:	je     41c26e <fb_scope_table_init@@Base+0x5e>
  41c251:	mov    QWORD PTR [rbp+0x8],0x0
  41c259:	mov    QWORD PTR [rbp+0x18],rbx
  41c25d:	xor    eax,eax
  41c25f:	mov    QWORD PTR [rbp+0x10],0x0
  41c267:	add    rsp,0x8
  41c26b:	pop    rbx
  41c26c:	pop    rbp
  41c26d:	ret    
  41c26e:	mov    eax,0xffffffff
  41c273:	jmp    41c267 <fb_scope_table_init@@Base+0x57>
  41c275:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

000000000041c280 <fb_scope_table_resize@@Base>:
  41c280:	jmp    41b950 <fb_symbol_table_visit@@Base+0x5f0>
  41c285:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

000000000041c290 <fb_scope_table_insert@@Base>:
  41c290:	jmp    41b3f0 <fb_symbol_table_visit@@Base+0x90>
  41c295:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

000000000041c2a0 <fb_scope_table_insert_item@@Base>:
  41c2a0:	mov    rcx,rsi
  41c2a3:	mov    rsi,QWORD PTR [rsi]
  41c2a6:	mov    r8d,edx
  41c2a9:	xor    edx,edx
  41c2ab:	jmp    41b3f0 <fb_symbol_table_visit@@Base+0x90>

000000000041c2b0 <fb_scope_table_find@@Base>:
  41c2b0:	mov    rax,rsi
  41c2b3:	lea    rsi,[rdi+0x18]
  41c2b7:	mov    rdi,QWORD PTR [rdi]
  41c2ba:	mov    rcx,rdx
  41c2bd:	mov    rdx,rax
  41c2c0:	jmp    41ba70 <fb_symbol_table_visit@@Base+0x710>
  41c2c5:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

000000000041c2d0 <fb_scope_table_find_item@@Base>:
  41c2d0:	lea    rax,[rdi+0x18]
  41c2d4:	mov    rdx,QWORD PTR [rsi]
  41c2d7:	mov    rdi,QWORD PTR [rdi]
  41c2da:	xor    ecx,ecx
  41c2dc:	mov    rsi,rax
  41c2df:	jmp    41ba70 <fb_symbol_table_visit@@Base+0x710>
  41c2e4:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  41c2ef:	nop

000000000041c2f0 <fb_scope_table_remove@@Base>:
  41c2f0:	jmp    41bdf0 <fb_symbol_table_visit@@Base+0xa90>
  41c2f5:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

000000000041c300 <fb_scope_table_remove_item@@Base>:
  41c300:	mov    rsi,QWORD PTR [rsi]
  41c303:	xor    edx,edx
  41c305:	jmp    41bdf0 <fb_symbol_table_visit@@Base+0xa90>
  41c30a:	nop    WORD PTR [rax+rax*1+0x0]

000000000041c310 <fb_scope_table_visit@@Base>:
  41c310:	push   r14
  41c312:	push   r13
  41c314:	push   r12
  41c316:	push   rbp
  41c317:	push   rbx
  41c318:	cmp    QWORD PTR [rdi+0x18],0x0
  41c31d:	mov    r12,QWORD PTR [rdi]
  41c320:	je     41c34f <fb_scope_table_visit@@Base+0x3f>
  41c322:	mov    rbp,rdi
  41c325:	mov    r14,rsi
  41c328:	mov    r13,rdx
  41c32b:	xor    ebx,ebx
  41c32d:	nop    DWORD PTR [rax]
  41c330:	mov    rsi,QWORD PTR [r12+rbx*8]
  41c334:	test   rsi,rsi
  41c337:	je     41c345 <fb_scope_table_visit@@Base+0x35>
  41c339:	cmp    rsi,0x2
  41c33d:	je     41c345 <fb_scope_table_visit@@Base+0x35>
  41c33f:	mov    rdi,r13
  41c342:	call   r14
  41c345:	add    rbx,0x1
  41c349:	cmp    rbx,QWORD PTR [rbp+0x18]
  41c34d:	jb     41c330 <fb_scope_table_visit@@Base+0x20>
  41c34f:	pop    rbx
  41c350:	pop    rbp
  41c351:	pop    r12
  41c353:	pop    r13
  41c355:	pop    r14
  41c357:	ret    
  41c358:	nop    DWORD PTR [rax+rax*1+0x0]
  41c360:	push   rbx
  41c361:	mov    rbx,rdi
  41c364:	mov    rdi,QWORD PTR [rdi]
  41c367:	test   rdi,rdi
  41c36a:	je     41c371 <fb_scope_table_visit@@Base+0x61>
  41c36c:	call   405040 <free@plt>
  41c371:	mov    QWORD PTR [rbx],0x0
  41c378:	mov    QWORD PTR [rbx+0x8],0x0
  41c380:	mov    QWORD PTR [rbx+0x10],0x0
  41c388:	mov    QWORD PTR [rbx+0x18],0x0
  41c390:	pop    rbx
  41c391:	ret    
  41c392:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  41c39d:	nop    DWORD PTR [rax]
  41c3a0:	push   r15
  41c3a2:	push   r14
  41c3a4:	push   r13
  41c3a6:	push   r12
  41c3a8:	push   rbp
  41c3a9:	push   rbx
  41c3aa:	sub    rsp,0x38
  41c3ae:	mov    r13,QWORD PTR [rdi]
  41c3b1:	mov    rcx,QWORD PTR fs:0x28
  41c3ba:	mov    QWORD PTR [rsp+0x28],rcx
  41c3bf:	xor    ecx,ecx
  41c3c1:	mov    QWORD PTR [rsp+0x10],rdi
  41c3c6:	mov    QWORD PTR [rsp+0x8],rsi
  41c3cb:	test   r13,r13
  41c3ce:	je     41c480 <fb_scope_table_visit@@Base+0x170>
  41c3d4:	mov    rax,QWORD PTR [rsp+0x10]
  41c3d9:	mov    rdi,QWORD PTR [rsp+0x8]
  41c3de:	mov    r14,rdx
  41c3e1:	lea    rcx,[rsp+0x20]
  41c3e6:	mov    edx,0x2f693b52
  41c3eb:	mov    rsi,r14
  41c3ee:	mov    rax,QWORD PTR [rax+0x18]
  41c3f2:	mov    QWORD PTR [rsp+0x18],rax
  41c3f7:	lea    r15,[rax-0x1]
  41c3fb:	call   42b180 <cmetrohash64_1@@Base>
  41c400:	mov    ebp,DWORD PTR [rsp+0x20]
  41c404:	mov    rax,r15
  41c407:	and    rax,rbp
  41c40a:	lea    r12,[r13+rax*8+0x0]
  41c40f:	mov    rbx,QWORD PTR [r12]
  41c413:	test   rbx,rbx
  41c416:	je     41c480 <fb_scope_table_visit@@Base+0x170>
  41c418:	add    rbp,0x1
  41c41c:	jmp    41c438 <fb_scope_table_visit@@Base+0x128>
  41c41e:	xchg   ax,ax
  41c420:	mov    rax,rbp
  41c423:	add    rbp,0x1
  41c427:	and    rax,r15
  41c42a:	lea    r12,[r13+rax*8+0x0]
  41c42f:	mov    rbx,QWORD PTR [r12]
  41c433:	test   rbx,rbx
  41c436:	je     41c480 <fb_scope_table_visit@@Base+0x170>
  41c438:	cmp    rbx,0x2
  41c43c:	je     41c420 <fb_scope_table_visit@@Base+0x110>
  41c43e:	movsxd rax,DWORD PTR [rbx+0x100]
  41c445:	cmp    r14,rax
  41c448:	jne    41c420 <fb_scope_table_visit@@Base+0x110>
  41c44a:	mov    rsi,QWORD PTR [rbx+0xf8]
  41c451:	mov    rdi,QWORD PTR [rsp+0x8]
  41c456:	mov    rdx,r14
  41c459:	call   405130 <memcmp@plt>
  41c45e:	test   eax,eax
  41c460:	jne    41c420 <fb_scope_table_visit@@Base+0x110>
  41c462:	mov    rax,QWORD PTR [rsp+0x10]
  41c467:	mov    QWORD PTR [r12],0x2
  41c46f:	sub    QWORD PTR [rax+0x10],0x1
  41c474:	jmp    41c482 <fb_scope_table_visit@@Base+0x172>
  41c476:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41c480:	xor    ebx,ebx
  41c482:	mov    rcx,QWORD PTR [rsp+0x28]
  41c487:	xor    rcx,QWORD PTR fs:0x28
  41c490:	mov    rax,rbx
  41c493:	jne    41c4a4 <fb_scope_table_visit@@Base+0x194>
  41c495:	add    rsp,0x38
  41c499:	pop    rbx
  41c49a:	pop    rbp
  41c49b:	pop    r12
  41c49d:	pop    r13
  41c49f:	pop    r14
  41c4a1:	pop    r15
  41c4a3:	ret    
  41c4a4:	call   4050d0 <__stack_chk_fail@plt>
  41c4a9:	nop    DWORD PTR [rax+0x0]
  41c4b0:	push   r13
  41c4b2:	push   r12
  41c4b4:	push   rbp
  41c4b5:	push   rbx
  41c4b6:	mov    rbp,rdi
  41c4b9:	mov    ebx,0x4
  41c4be:	sub    rsp,0x38
  41c4c2:	mov    r12,QWORD PTR [rdi]
  41c4c5:	mov    rax,QWORD PTR fs:0x28
  41c4ce:	mov    QWORD PTR [rsp+0x28],rax
  41c4d3:	xor    eax,eax
  41c4d5:	cmp    QWORD PTR [rdi+0x10],rsi
  41c4d9:	cmovae rsi,QWORD PTR [rdi+0x10]
  41c4de:	cmp    rsi,0x2
  41c4e2:	jbe    41c4fb <fb_scope_table_visit@@Base+0x1eb>
  41c4e4:	nop    DWORD PTR [rax+0x0]
  41c4e8:	add    rbx,rbx
  41c4eb:	imul   rax,rbx,0xb3
  41c4f2:	shr    rax,0x8
  41c4f6:	cmp    rsi,rax
  41c4f9:	ja     41c4e8 <fb_scope_table_visit@@Base+0x1d8>
  41c4fb:	mov    esi,0x8
  41c500:	mov    rdi,rbx
  41c503:	call   405140 <calloc@plt>
  41c508:	test   rax,rax
  41c50b:	mov    QWORD PTR [rsp],rax
  41c50f:	je     41c5bd <fb_scope_table_visit@@Base+0x2ad>
  41c515:	mov    QWORD PTR [rsp+0x18],rbx
  41c51a:	xor    ebx,ebx
  41c51c:	cmp    QWORD PTR [rbp+0x18],0x0
  41c521:	mov    QWORD PTR [rsp+0x8],0x0
  41c52a:	mov    QWORD PTR [rsp+0x10],0x0
  41c533:	mov    r13,rsp
  41c536:	je     41c575 <fb_scope_table_visit@@Base+0x265>
  41c538:	nop    DWORD PTR [rax+rax*1+0x0]
  41c540:	mov    rcx,QWORD PTR [r12+rbx*8]
  41c544:	test   rcx,rcx
  41c547:	je     41c56b <fb_scope_table_visit@@Base+0x25b>
  41c549:	cmp    rcx,0x2
  41c54d:	je     41c56b <fb_scope_table_visit@@Base+0x25b>
  41c54f:	movsxd rdx,DWORD PTR [rcx+0x100]
  41c556:	mov    rsi,QWORD PTR [rcx+0xf8]
  41c55d:	mov    r8d,0x3
  41c563:	mov    rdi,r13
  41c566:	call   41c5d0 <fb_scope_table_visit@@Base+0x2c0>
  41c56b:	add    rbx,0x1
  41c56f:	cmp    QWORD PTR [rbp+0x18],rbx
  41c573:	ja     41c540 <fb_scope_table_visit@@Base+0x230>
  41c575:	mov    rdi,rbp
  41c578:	call   41c360 <fb_scope_table_visit@@Base+0x50>
  41c57d:	mov    rax,QWORD PTR [rsp]
  41c581:	mov    QWORD PTR [rbp+0x0],rax
  41c585:	mov    rax,QWORD PTR [rsp+0x8]
  41c58a:	mov    QWORD PTR [rbp+0x8],rax
  41c58e:	mov    rax,QWORD PTR [rsp+0x10]
  41c593:	mov    QWORD PTR [rbp+0x10],rax
  41c597:	mov    rax,QWORD PTR [rsp+0x18]
  41c59c:	mov    QWORD PTR [rbp+0x18],rax
  41c5a0:	xor    eax,eax
  41c5a2:	mov    rdi,QWORD PTR [rsp+0x28]
  41c5a7:	xor    rdi,QWORD PTR fs:0x28
  41c5b0:	jne    41c5c4 <fb_scope_table_visit@@Base+0x2b4>
  41c5b2:	add    rsp,0x38
  41c5b6:	pop    rbx
  41c5b7:	pop    rbp
  41c5b8:	pop    r12
  41c5ba:	pop    r13
  41c5bc:	ret    
  41c5bd:	mov    eax,0xffffffff
  41c5c2:	jmp    41c5a2 <fb_scope_table_visit@@Base+0x292>
  41c5c4:	call   4050d0 <__stack_chk_fail@plt>
  41c5c9:	nop    DWORD PTR [rax+0x0]
  41c5d0:	push   r15
  41c5d2:	push   r14
  41c5d4:	push   r13
  41c5d6:	push   r12
  41c5d8:	push   rbp
  41c5d9:	push   rbx
  41c5da:	sub    rsp,0x48
  41c5de:	mov    QWORD PTR [rsp+0x20],rdi
  41c5e3:	mov    QWORD PTR [rsp+0x10],rsi
  41c5e8:	mov    rdi,QWORD PTR fs:0x28
  41c5f1:	mov    QWORD PTR [rsp+0x38],rdi
  41c5f6:	xor    edi,edi
  41c5f8:	test   rcx,rcx
  41c5fb:	mov    QWORD PTR [rsp+0x18],rcx
  41c600:	mov    DWORD PTR [rsp+0x2c],r8d
  41c605:	je     41c840 <fb_scope_table_visit@@Base+0x530>
  41c60b:	cmp    QWORD PTR [rsp+0x18],0x2
  41c611:	je     41c821 <fb_scope_table_visit@@Base+0x511>
  41c617:	cmp    QWORD PTR [rsp+0x18],0x1
  41c61d:	je     41c802 <fb_scope_table_visit@@Base+0x4f2>
  41c623:	mov    rbx,QWORD PTR [rsp+0x20]
  41c628:	mov    r14,rdx
  41c62b:	mov    r8,QWORD PTR [rbx+0x18]
  41c62f:	mov    rsi,QWORD PTR [rbx+0x10]
  41c633:	imul   rax,r8,0xb3
  41c63a:	shr    rax,0x8
  41c63e:	cmp    rsi,rax
  41c641:	jb     41c65a <fb_scope_table_visit@@Base+0x34a>
  41c643:	add    rsi,rsi
  41c646:	mov    rdi,rbx
  41c649:	call   41c4b0 <fb_scope_table_visit@@Base+0x1a0>
  41c64e:	test   eax,eax
  41c650:	jne    41c7d4 <fb_scope_table_visit@@Base+0x4c4>
  41c656:	mov    r8,QWORD PTR [rbx+0x18]
  41c65a:	mov    rax,QWORD PTR [rsp+0x20]
  41c65f:	mov    rdi,QWORD PTR [rsp+0x10]
  41c664:	lea    rcx,[rsp+0x30]
  41c669:	mov    edx,0x2f693b52
  41c66e:	mov    rsi,r14
  41c671:	lea    r12,[r8-0x1]
  41c675:	mov    r13,QWORD PTR [rax]
  41c678:	call   42b180 <cmetrohash64_1@@Base>
  41c67d:	mov    edi,DWORD PTR [rsp+0x2c]
  41c681:	mov    ebp,DWORD PTR [rsp+0x30]
  41c685:	mov    rax,r12
  41c688:	lea    edx,[rdi-0x2]
  41c68b:	and    rax,rbp
  41c68e:	cmp    edx,0x1
  41c691:	jbe    41c782 <fb_scope_table_visit@@Base+0x472>
  41c697:	lea    r15,[r13+rax*8+0x0]
  41c69c:	add    rbp,0x1
  41c6a0:	xor    ecx,ecx
  41c6a2:	mov    rbx,QWORD PTR [r15]
  41c6a5:	test   rbx,rbx
  41c6a8:	jne    41c6cb <fb_scope_table_visit@@Base+0x3bb>
  41c6aa:	jmp    41c77d <fb_scope_table_visit@@Base+0x46d>
  41c6af:	nop
  41c6b0:	mov    rax,r12
  41c6b3:	and    rax,rbp
  41c6b6:	add    rbp,0x1
  41c6ba:	lea    r15,[r13+rax*8+0x0]
  41c6bf:	mov    rbx,QWORD PTR [r15]
  41c6c2:	test   rbx,rbx
  41c6c5:	je     41c760 <fb_scope_table_visit@@Base+0x450>
  41c6cb:	cmp    rbx,0x2
  41c6cf:	je     41c740 <fb_scope_table_visit@@Base+0x430>
  41c6d1:	movsxd rax,DWORD PTR [rbx+0x100]
  41c6d8:	cmp    r14,rax
  41c6db:	jne    41c6b0 <fb_scope_table_visit@@Base+0x3a0>
  41c6dd:	mov    rsi,QWORD PTR [rbx+0xf8]
  41c6e4:	mov    rdi,QWORD PTR [rsp+0x10]
  41c6e9:	mov    rdx,r14
  41c6ec:	mov    QWORD PTR [rsp+0x8],rcx
  41c6f1:	call   405130 <memcmp@plt>
  41c6f6:	test   eax,eax
  41c6f8:	mov    rcx,QWORD PTR [rsp+0x8]
  41c6fd:	jne    41c6b0 <fb_scope_table_visit@@Base+0x3a0>
  41c6ff:	mov    eax,DWORD PTR [rsp+0x2c]
  41c703:	test   eax,eax
  41c705:	je     41c750 <fb_scope_table_visit@@Base+0x440>
  41c707:	nop    WORD PTR [rax+rax*1+0x0]
  41c710:	mov    rdx,QWORD PTR [rsp+0x38]
  41c715:	xor    rdx,QWORD PTR fs:0x28
  41c71e:	mov    rax,rbx
  41c721:	jne    41c85f <fb_scope_table_visit@@Base+0x54f>
  41c727:	add    rsp,0x48
  41c72b:	pop    rbx
  41c72c:	pop    rbp
  41c72d:	pop    r12
  41c72f:	pop    r13
  41c731:	pop    r14
  41c733:	pop    r15
  41c735:	ret    
  41c736:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41c740:	test   rcx,rcx
  41c743:	cmove  rcx,r15
  41c747:	jmp    41c6b0 <fb_scope_table_visit@@Base+0x3a0>
  41c74c:	nop    DWORD PTR [rax+0x0]
  41c750:	mov    rax,QWORD PTR [rsp+0x18]
  41c755:	mov    QWORD PTR [r15],rax
  41c758:	jmp    41c710 <fb_scope_table_visit@@Base+0x400>
  41c75a:	nop    WORD PTR [rax+rax*1+0x0]
  41c760:	test   rcx,rcx
  41c763:	cmove  rcx,r15
  41c767:	mov    rax,QWORD PTR [rsp+0x20]
  41c76c:	xor    ebx,ebx
  41c76e:	add    QWORD PTR [rax+0x10],0x1
  41c773:	mov    rax,QWORD PTR [rsp+0x18]
  41c778:	mov    QWORD PTR [rcx],rax
  41c77b:	jmp    41c710 <fb_scope_table_visit@@Base+0x400>
  41c77d:	mov    rcx,r15
  41c780:	jmp    41c767 <fb_scope_table_visit@@Base+0x457>
  41c782:	lea    rdx,[r13+rax*8+0x0]
  41c787:	mov    rdi,QWORD PTR [rsp+0x20]
  41c78c:	mov    rax,QWORD PTR [rdx]
  41c78f:	add    QWORD PTR [rdi+0x10],0x1
  41c794:	test   rax,rax
  41c797:	je     41c7c5 <fb_scope_table_visit@@Base+0x4b5>
  41c799:	cmp    rax,0x2
  41c79d:	je     41c7c5 <fb_scope_table_visit@@Base+0x4b5>
  41c79f:	add    rbp,0x1
  41c7a3:	jmp    41c7ae <fb_scope_table_visit@@Base+0x49e>
  41c7a5:	nop    DWORD PTR [rax]
  41c7a8:	cmp    rax,0x2
  41c7ac:	je     41c7c5 <fb_scope_table_visit@@Base+0x4b5>
  41c7ae:	mov    rax,r12
  41c7b1:	and    rax,rbp
  41c7b4:	add    rbp,0x1
  41c7b8:	lea    rdx,[r13+rax*8+0x0]
  41c7bd:	mov    rax,QWORD PTR [rdx]
  41c7c0:	test   rax,rax
  41c7c3:	jne    41c7a8 <fb_scope_table_visit@@Base+0x498>
  41c7c5:	mov    rax,QWORD PTR [rsp+0x18]
  41c7ca:	xor    ebx,ebx
  41c7cc:	mov    QWORD PTR [rdx],rax
  41c7cf:	jmp    41c710 <fb_scope_table_visit@@Base+0x400>
  41c7d4:	mov    rax,QWORD PTR [rip+0x3480d]        # 450fe8 <stderr@GLIBC_2.2.5>
  41c7db:	lea    rcx,[rip+0x29a3e]        # 446220 <_IO_stdin_used@@Base+0x19220>
  41c7e2:	lea    rdx,[rip+0x29aad]        # 446296 <_IO_stdin_used@@Base+0x19296>
  41c7e9:	mov    esi,0x1
  41c7ee:	mov    rdi,QWORD PTR [rax]
  41c7f1:	xor    eax,eax
  41c7f3:	call   405200 <__fprintf_chk@plt>
  41c7f8:	mov    edi,0x1
  41c7fd:	call   4051e0 <exit@plt>
  41c802:	lea    rcx,[rip+0x29b47]        # 446350 <fb_scope_table_missing@@Base+0x8>
  41c809:	lea    rsi,[rip+0x299a0]        # 4461b0 <_IO_stdin_used@@Base+0x191b0>
  41c810:	lea    rdi,[rip+0x29a6a]        # 446281 <_IO_stdin_used@@Base+0x19281>
  41c817:	mov    edx,0x74
  41c81c:	call   405100 <__assert_fail@plt>
  41c821:	lea    rcx,[rip+0x29b28]        # 446350 <fb_scope_table_missing@@Base+0x8>
  41c828:	lea    rsi,[rip+0x29981]        # 4461b0 <_IO_stdin_used@@Base+0x191b0>
  41c82f:	lea    rdi,[rip+0x29a34]        # 44626a <_IO_stdin_used@@Base+0x1926a>
  41c836:	mov    edx,0x73
  41c83b:	call   405100 <__assert_fail@plt>
  41c840:	lea    rcx,[rip+0x29b09]        # 446350 <fb_scope_table_missing@@Base+0x8>
  41c847:	lea    rsi,[rip+0x29962]        # 4461b0 <_IO_stdin_used@@Base+0x191b0>
  41c84e:	lea    rdi,[rip+0x299fe]        # 446253 <_IO_stdin_used@@Base+0x19253>
  41c855:	mov    edx,0x72
  41c85a:	call   405100 <__assert_fail@plt>
  41c85f:	call   4050d0 <__stack_chk_fail@plt>
  41c864:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  41c86f:	nop
  41c870:	push   r15
  41c872:	push   r14
  41c874:	push   r13
  41c876:	push   r12
  41c878:	push   rbp
  41c879:	push   rbx
  41c87a:	sub    rsp,0x18
  41c87e:	mov    rax,QWORD PTR fs:0x28
  41c887:	mov    QWORD PTR [rsp+0x8],rax
  41c88c:	xor    eax,eax
  41c88e:	test   rdi,rdi
  41c891:	je     41c938 <fb_scope_table_visit@@Base+0x628>
  41c897:	mov    r12,rdx
  41c89a:	mov    r14,rcx
  41c89d:	mov    r13,QWORD PTR [rsi]
  41c8a0:	mov    r15,rdi
  41c8a3:	mov    rcx,rsp
  41c8a6:	mov    edx,0x2f693b52
  41c8ab:	mov    rsi,r14
  41c8ae:	mov    rdi,r12
  41c8b1:	call   42b180 <cmetrohash64_1@@Base>
  41c8b6:	mov    ebp,DWORD PTR [rsp]
  41c8b9:	sub    r13,0x1
  41c8bd:	mov    rax,r13
  41c8c0:	and    rax,rbp
  41c8c3:	mov    rbx,QWORD PTR [r15+rax*8]
  41c8c7:	test   rbx,rbx
  41c8ca:	je     41c938 <fb_scope_table_visit@@Base+0x628>
  41c8cc:	add    rbp,0x1
  41c8d0:	jmp    41c8eb <fb_scope_table_visit@@Base+0x5db>
  41c8d2:	nop    WORD PTR [rax+rax*1+0x0]
  41c8d8:	mov    rax,r13
  41c8db:	and    rax,rbp
  41c8de:	add    rbp,0x1
  41c8e2:	mov    rbx,QWORD PTR [r15+rax*8]
  41c8e6:	test   rbx,rbx
  41c8e9:	je     41c938 <fb_scope_table_visit@@Base+0x628>
  41c8eb:	cmp    rbx,0x2
  41c8ef:	je     41c8d8 <fb_scope_table_visit@@Base+0x5c8>
  41c8f1:	movsxd rax,DWORD PTR [rbx+0x100]
  41c8f8:	cmp    r14,rax
  41c8fb:	jne    41c8d8 <fb_scope_table_visit@@Base+0x5c8>
  41c8fd:	mov    rsi,QWORD PTR [rbx+0xf8]
  41c904:	mov    rdx,r14
  41c907:	mov    rdi,r12
  41c90a:	call   405130 <memcmp@plt>
  41c90f:	test   eax,eax
  41c911:	jne    41c8d8 <fb_scope_table_visit@@Base+0x5c8>
  41c913:	mov    rcx,QWORD PTR [rsp+0x8]
  41c918:	xor    rcx,QWORD PTR fs:0x28
  41c921:	mov    rax,rbx
  41c924:	jne    41c93c <fb_scope_table_visit@@Base+0x62c>
  41c926:	add    rsp,0x18
  41c92a:	pop    rbx
  41c92b:	pop    rbp
  41c92c:	pop    r12
  41c92e:	pop    r13
  41c930:	pop    r14
  41c932:	pop    r15
  41c934:	ret    
  41c935:	nop    DWORD PTR [rax]
  41c938:	xor    ebx,ebx
  41c93a:	jmp    41c913 <fb_scope_table_visit@@Base+0x603>
  41c93c:	call   4050d0 <__stack_chk_fail@plt>
  41c941:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  41c94c:	nop    DWORD PTR [rax+0x0]

000000000041c950 <fb_schema_table_clear@@Base>:
  41c950:	jmp    41c360 <fb_scope_table_visit@@Base+0x50>
  41c955:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

000000000041c960 <fb_schema_table_destroy@@Base>:
  41c960:	test   rsi,rsi
  41c963:	push   r14
  41c965:	push   r13
  41c967:	push   r12
  41c969:	push   rbp
  41c96a:	mov    rbp,rdi
  41c96d:	push   rbx
  41c96e:	je     41c9a7 <fb_schema_table_destroy@@Base+0x47>
  41c970:	cmp    QWORD PTR [rdi+0x18],0x0
  41c975:	mov    r12,QWORD PTR [rdi]
  41c978:	je     41c9a7 <fb_schema_table_destroy@@Base+0x47>
  41c97a:	mov    r13,rsi
  41c97d:	mov    r14,rdx
  41c980:	xor    ebx,ebx
  41c982:	nop    WORD PTR [rax+rax*1+0x0]
  41c988:	mov    rsi,QWORD PTR [r12+rbx*8]
  41c98c:	test   rsi,rsi
  41c98f:	je     41c99d <fb_schema_table_destroy@@Base+0x3d>
  41c991:	cmp    rsi,0x2
  41c995:	je     41c99d <fb_schema_table_destroy@@Base+0x3d>
  41c997:	mov    rdi,r14
  41c99a:	call   r13
  41c99d:	add    rbx,0x1
  41c9a1:	cmp    rbx,QWORD PTR [rbp+0x18]
  41c9a5:	jb     41c988 <fb_schema_table_destroy@@Base+0x28>
  41c9a7:	pop    rbx
  41c9a8:	mov    rdi,rbp
  41c9ab:	pop    rbp
  41c9ac:	pop    r12
  41c9ae:	pop    r13
  41c9b0:	pop    r14
  41c9b2:	jmp    41c360 <fb_scope_table_visit@@Base+0x50>
  41c9b7:	nop    WORD PTR [rax+rax*1+0x0]

000000000041c9c0 <fb_schema_table_init@@Base>:
  41c9c0:	push   rbp
  41c9c1:	push   rbx
  41c9c2:	mov    rbp,rdi
  41c9c5:	mov    ebx,0x4
  41c9ca:	sub    rsp,0x8
  41c9ce:	cmp    rsi,0x2
  41c9d2:	jbe    41c9eb <fb_schema_table_init@@Base+0x2b>
  41c9d4:	nop    DWORD PTR [rax+0x0]
  41c9d8:	add    rbx,rbx
  41c9db:	imul   rax,rbx,0xb3
  41c9e2:	shr    rax,0x8
  41c9e6:	cmp    rsi,rax
  41c9e9:	ja     41c9d8 <fb_schema_table_init@@Base+0x18>
  41c9eb:	mov    esi,0x8
  41c9f0:	mov    rdi,rbx
  41c9f3:	call   405140 <calloc@plt>
  41c9f8:	test   rax,rax
  41c9fb:	mov    QWORD PTR [rbp+0x0],rax
  41c9ff:	je     41ca1e <fb_schema_table_init@@Base+0x5e>
  41ca01:	mov    QWORD PTR [rbp+0x8],0x0
  41ca09:	mov    QWORD PTR [rbp+0x18],rbx
  41ca0d:	xor    eax,eax
  41ca0f:	mov    QWORD PTR [rbp+0x10],0x0
  41ca17:	add    rsp,0x8
  41ca1b:	pop    rbx
  41ca1c:	pop    rbp
  41ca1d:	ret    
  41ca1e:	mov    eax,0xffffffff
  41ca23:	jmp    41ca17 <fb_schema_table_init@@Base+0x57>
  41ca25:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

000000000041ca30 <fb_schema_table_resize@@Base>:
  41ca30:	jmp    41c4b0 <fb_scope_table_visit@@Base+0x1a0>
  41ca35:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

000000000041ca40 <fb_schema_table_insert@@Base>:
  41ca40:	jmp    41c5d0 <fb_scope_table_visit@@Base+0x2c0>
  41ca45:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

000000000041ca50 <fb_schema_table_insert_item@@Base>:
  41ca50:	mov    r8d,edx
  41ca53:	movsxd rdx,DWORD PTR [rsi+0x100]
  41ca5a:	mov    rcx,rsi
  41ca5d:	mov    rsi,QWORD PTR [rsi+0xf8]
  41ca64:	jmp    41c5d0 <fb_scope_table_visit@@Base+0x2c0>
  41ca69:	nop    DWORD PTR [rax+0x0]

000000000041ca70 <fb_schema_table_find@@Base>:
  41ca70:	mov    rax,rsi
  41ca73:	lea    rsi,[rdi+0x18]
  41ca77:	mov    rdi,QWORD PTR [rdi]
  41ca7a:	mov    rcx,rdx
  41ca7d:	mov    rdx,rax
  41ca80:	jmp    41c870 <fb_scope_table_visit@@Base+0x560>
  41ca85:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

000000000041ca90 <fb_schema_table_find_item@@Base>:
  41ca90:	movsxd rcx,DWORD PTR [rsi+0x100]
  41ca97:	mov    rdx,QWORD PTR [rsi+0xf8]
  41ca9e:	lea    rsi,[rdi+0x18]
  41caa2:	mov    rdi,QWORD PTR [rdi]
  41caa5:	jmp    41c870 <fb_scope_table_visit@@Base+0x560>
  41caaa:	nop    WORD PTR [rax+rax*1+0x0]

000000000041cab0 <fb_schema_table_remove@@Base>:
  41cab0:	jmp    41c3a0 <fb_scope_table_visit@@Base+0x90>
  41cab5:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

000000000041cac0 <fb_schema_table_remove_item@@Base>:
  41cac0:	movsxd rdx,DWORD PTR [rsi+0x100]
  41cac7:	mov    rsi,QWORD PTR [rsi+0xf8]
  41cace:	jmp    41c3a0 <fb_scope_table_visit@@Base+0x90>
  41cad3:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  41cade:	xchg   ax,ax

000000000041cae0 <fb_schema_table_visit@@Base>:
  41cae0:	push   r14
  41cae2:	push   r13
  41cae4:	push   r12
  41cae6:	push   rbp
  41cae7:	push   rbx
  41cae8:	cmp    QWORD PTR [rdi+0x18],0x0
  41caed:	mov    r12,QWORD PTR [rdi]
  41caf0:	je     41cb1f <fb_schema_table_visit@@Base+0x3f>
  41caf2:	mov    rbp,rdi
  41caf5:	mov    r14,rsi
  41caf8:	mov    r13,rdx
  41cafb:	xor    ebx,ebx
  41cafd:	nop    DWORD PTR [rax]
  41cb00:	mov    rsi,QWORD PTR [r12+rbx*8]
  41cb04:	test   rsi,rsi
  41cb07:	je     41cb15 <fb_schema_table_visit@@Base+0x35>
  41cb09:	cmp    rsi,0x2
  41cb0d:	je     41cb15 <fb_schema_table_visit@@Base+0x35>
  41cb0f:	mov    rdi,r13
  41cb12:	call   r14
  41cb15:	add    rbx,0x1
  41cb19:	cmp    rbx,QWORD PTR [rbp+0x18]
  41cb1d:	jb     41cb00 <fb_schema_table_visit@@Base+0x20>
  41cb1f:	pop    rbx
  41cb20:	pop    rbp
  41cb21:	pop    r12
  41cb23:	pop    r13
  41cb25:	pop    r14
  41cb27:	ret    
  41cb28:	nop    DWORD PTR [rax+rax*1+0x0]

000000000041cb30 <__flatcc_fb_copy_path_n@@Base>:
  41cb30:	push   rbp
  41cb31:	push   rbx
  41cb32:	mov    rdx,rsi
  41cb35:	mov    rbx,rsi
  41cb38:	xor    esi,esi
  41cb3a:	mov    rbp,rdi
  41cb3d:	sub    rsp,0x8
  41cb41:	call   405120 <memchr@plt>
  41cb46:	mov    rdx,rax
  41cb49:	sub    rdx,rbp
  41cb4c:	test   rax,rax
  41cb4f:	cmovne rbx,rdx
  41cb53:	lea    rdi,[rbx+0x1]
  41cb57:	call   405180 <malloc@plt>
  41cb5c:	test   rax,rax
  41cb5f:	mov    rcx,rax
  41cb62:	je     41cb79 <__flatcc_fb_copy_path_n@@Base+0x49>
  41cb64:	mov    rdx,rbx
  41cb67:	mov    rsi,rbp
  41cb6a:	mov    rdi,rax
  41cb6d:	call   405170 <memcpy@plt>
  41cb72:	mov    rcx,rax
  41cb75:	mov    BYTE PTR [rax+rbx*1],0x0
  41cb79:	add    rsp,0x8
  41cb7d:	mov    rax,rcx
  41cb80:	pop    rbx
  41cb81:	pop    rbp
  41cb82:	ret    
  41cb83:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  41cb8e:	xchg   ax,ax

000000000041cb90 <__flatcc_fb_copy_path@@Base>:
  41cb90:	push   rbp
  41cb91:	push   rbx
  41cb92:	mov    rbp,rdi
  41cb95:	sub    rsp,0x8
  41cb99:	call   4050c0 <strlen@plt>
  41cb9e:	lea    rdi,[rax+0x1]
  41cba2:	mov    rbx,rax
  41cba5:	call   405180 <malloc@plt>
  41cbaa:	test   rax,rax
  41cbad:	mov    rcx,rax
  41cbb0:	je     41cbc7 <__flatcc_fb_copy_path@@Base+0x37>
  41cbb2:	mov    rdx,rbx
  41cbb5:	mov    rsi,rbp
  41cbb8:	mov    rdi,rax
  41cbbb:	call   405170 <memcpy@plt>
  41cbc0:	mov    rcx,rax
  41cbc3:	mov    BYTE PTR [rax+rbx*1],0x0
  41cbc7:	add    rsp,0x8
  41cbcb:	mov    rax,rcx
  41cbce:	pop    rbx
  41cbcf:	pop    rbp
  41cbd0:	ret    
  41cbd1:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  41cbdc:	nop    DWORD PTR [rax+0x0]

000000000041cbe0 <__flatcc_fb_chomp@@Base>:
  41cbe0:	push   r13
  41cbe2:	push   r12
  41cbe4:	push   rbp
  41cbe5:	push   rbx
  41cbe6:	mov    rbx,rsi
  41cbe9:	sub    rsp,0x8
  41cbed:	test   rdx,rdx
  41cbf0:	je     41cc20 <__flatcc_fb_chomp@@Base+0x40>
  41cbf2:	mov    r12,rdi
  41cbf5:	mov    rdi,rdx
  41cbf8:	mov    rbp,rdx
  41cbfb:	call   4050c0 <strlen@plt>
  41cc00:	cmp    rax,rbx
  41cc03:	jae    41cc20 <__flatcc_fb_chomp@@Base+0x40>
  41cc05:	mov    r13,rbx
  41cc08:	mov    rdx,rax
  41cc0b:	mov    rsi,rbp
  41cc0e:	sub    r13,rax
  41cc11:	lea    rdi,[r12+r13*1]
  41cc15:	call   405070 <strncmp@plt>
  41cc1a:	test   eax,eax
  41cc1c:	cmove  rbx,r13
  41cc20:	add    rsp,0x8
  41cc24:	mov    rax,rbx
  41cc27:	pop    rbx
  41cc28:	pop    rbp
  41cc29:	pop    r12
  41cc2b:	pop    r13
  41cc2d:	ret    
  41cc2e:	xchg   ax,ax

000000000041cc30 <__flatcc_fb_create_join_path_n@@Base>:
  41cc30:	push   r15
  41cc32:	push   r14
  41cc34:	mov    r10,rsi
  41cc37:	push   r13
  41cc39:	push   r12
  41cc3b:	mov    r14,rdi
  41cc3e:	push   rbp
  41cc3f:	push   rbx
  41cc40:	mov    r12,rcx
  41cc43:	mov    r13,r8
  41cc46:	movsxd rbx,r9d
  41cc49:	sub    rsp,0x18
  41cc4d:	test   r8,r8
  41cc50:	mov    QWORD PTR [rsp],rdx
  41cc54:	je     41cd88 <__flatcc_fb_create_join_path_n@@Base+0x158>
  41cc5a:	mov    rdi,r8
  41cc5d:	mov    QWORD PTR [rsp+0x8],rsi
  41cc62:	call   4050c0 <strlen@plt>
  41cc67:	mov    r10,QWORD PTR [rsp+0x8]
  41cc6c:	mov    rbp,rax
  41cc6f:	test   r14,r14
  41cc72:	je     41cd10 <__flatcc_fb_create_join_path_n@@Base+0xe0>
  41cc78:	test   r12,r12
  41cc7b:	je     41cca0 <__flatcc_fb_create_join_path_n@@Base+0x70>
  41cc7d:	mov    rcx,QWORD PTR [rsp]
  41cc81:	movzx  eax,BYTE PTR [rcx]
  41cc84:	cmp    al,0x2f
  41cc86:	je     41cd10 <__flatcc_fb_create_join_path_n@@Base+0xe0>
  41cc8c:	cmp    al,0x5c
  41cc8e:	je     41cd10 <__flatcc_fb_create_join_path_n@@Base+0xe0>
  41cc94:	cmp    r12,0x1
  41cc98:	jbe    41cca0 <__flatcc_fb_create_join_path_n@@Base+0x70>
  41cc9a:	cmp    BYTE PTR [rcx+0x1],0x3a
  41cc9e:	je     41cd10 <__flatcc_fb_create_join_path_n@@Base+0xe0>
  41cca0:	test   r10,r10
  41cca3:	je     41cd80 <__flatcc_fb_create_join_path_n@@Base+0x150>
  41cca9:	test   ebx,ebx
  41ccab:	je     41cd80 <__flatcc_fb_create_join_path_n@@Base+0x150>
  41ccb1:	movzx  eax,BYTE PTR [r14+r10*1-0x1]
  41ccb7:	cmp    al,0x2f
  41ccb9:	je     41cd80 <__flatcc_fb_create_join_path_n@@Base+0x150>
  41ccbf:	cmp    al,0x5c
  41ccc1:	je     41cd80 <__flatcc_fb_create_join_path_n@@Base+0x150>
  41ccc7:	lea    rdi,[r10+rbx*1+0x1]
  41cccc:	mov    QWORD PTR [rsp+0x8],r10
  41ccd1:	add    rdi,r12
  41ccd4:	add    rdi,rbp
  41ccd7:	call   405180 <malloc@plt>
  41ccdc:	test   rax,rax
  41ccdf:	mov    r15,rax
  41cce2:	mov    r10,QWORD PTR [rsp+0x8]
  41cce7:	je     41cd78 <__flatcc_fb_create_join_path_n@@Base+0x148>
  41cced:	mov    rdx,r10
  41ccf0:	mov    rsi,r14
  41ccf3:	mov    rdi,r15
  41ccf6:	mov    QWORD PTR [rsp+0x8],r10
  41ccfb:	call   405170 <memcpy@plt>
  41cd00:	mov    r10,QWORD PTR [rsp+0x8]
  41cd05:	lea    rbx,[r10+0x1]
  41cd09:	mov    BYTE PTR [r15+r10*1],0x2f
  41cd0e:	jmp    41cd35 <__flatcc_fb_create_join_path_n@@Base+0x105>
  41cd10:	xor    ebx,ebx
  41cd12:	lea    rdi,[rbp+r12*1+0x1]
  41cd17:	add    rdi,rbx
  41cd1a:	call   405180 <malloc@plt>
  41cd1f:	test   rax,rax
  41cd22:	mov    r15,rax
  41cd25:	je     41cd78 <__flatcc_fb_create_join_path_n@@Base+0x148>
  41cd27:	mov    rdx,rbx
  41cd2a:	mov    rsi,r14
  41cd2d:	mov    rdi,r15
  41cd30:	call   405170 <memcpy@plt>
  41cd35:	mov    rsi,QWORD PTR [rsp]
  41cd39:	lea    rdi,[r15+rbx*1]
  41cd3d:	mov    rdx,r12
  41cd40:	add    rbx,r12
  41cd43:	call   405170 <memcpy@plt>
  41cd48:	lea    rdi,[r15+rbx*1]
  41cd4c:	mov    rdx,rbp
  41cd4f:	mov    rsi,r13
  41cd52:	add    rbp,r15
  41cd55:	call   405170 <memcpy@plt>
  41cd5a:	mov    BYTE PTR [rbp+rbx*1+0x0],0x0
  41cd5f:	add    rsp,0x18
  41cd63:	mov    rax,r15
  41cd66:	pop    rbx
  41cd67:	pop    rbp
  41cd68:	pop    r12
  41cd6a:	pop    r13
  41cd6c:	pop    r14
  41cd6e:	pop    r15
  41cd70:	ret    
  41cd71:	nop    DWORD PTR [rax+0x0]
  41cd78:	xor    r15d,r15d
  41cd7b:	jmp    41cd5f <__flatcc_fb_create_join_path_n@@Base+0x12f>
  41cd7d:	nop    DWORD PTR [rax]
  41cd80:	mov    rbx,r10
  41cd83:	jmp    41cd12 <__flatcc_fb_create_join_path_n@@Base+0xe2>
  41cd85:	nop    DWORD PTR [rax]
  41cd88:	xor    ebp,ebp
  41cd8a:	jmp    41cc6f <__flatcc_fb_create_join_path_n@@Base+0x3f>
  41cd8f:	nop

000000000041cd90 <__flatcc_fb_create_join_path@@Base>:
  41cd90:	test   rsi,rsi
  41cd93:	push   r14
  41cd95:	mov    r14d,ecx
  41cd98:	push   r13
  41cd9a:	mov    r13,rdx
  41cd9d:	push   r12
  41cd9f:	push   rbp
  41cda0:	mov    rbp,rsi
  41cda3:	push   rbx
  41cda4:	mov    rbx,rdi
  41cda7:	je     41cde0 <__flatcc_fb_create_join_path@@Base+0x50>
  41cda9:	mov    rdi,rsi
  41cdac:	call   4050c0 <strlen@plt>
  41cdb1:	test   rbx,rbx
  41cdb4:	mov    r12,rax
  41cdb7:	je     41cdf0 <__flatcc_fb_create_join_path@@Base+0x60>
  41cdb9:	mov    rdi,rbx
  41cdbc:	call   4050c0 <strlen@plt>
  41cdc1:	mov    rsi,rax
  41cdc4:	mov    r9d,r14d
  41cdc7:	mov    r8,r13
  41cdca:	mov    rcx,r12
  41cdcd:	mov    rdx,rbp
  41cdd0:	mov    rdi,rbx
  41cdd3:	pop    rbx
  41cdd4:	pop    rbp
  41cdd5:	pop    r12
  41cdd7:	pop    r13
  41cdd9:	pop    r14
  41cddb:	jmp    41cc30 <__flatcc_fb_create_join_path_n@@Base>
  41cde0:	xor    r12d,r12d
  41cde3:	test   rbx,rbx
  41cde6:	jne    41cdb9 <__flatcc_fb_create_join_path@@Base+0x29>
  41cde8:	nop    DWORD PTR [rax+rax*1+0x0]
  41cdf0:	xor    esi,esi
  41cdf2:	jmp    41cdc4 <__flatcc_fb_create_join_path@@Base+0x34>
  41cdf4:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  41cdff:	nop

000000000041ce00 <__flatcc_fb_create_path_ext_n@@Base>:
  41ce00:	mov    rcx,rsi
  41ce03:	mov    r8,rdx
  41ce06:	xor    r9d,r9d
  41ce09:	mov    rdx,rdi
  41ce0c:	xor    esi,esi
  41ce0e:	xor    edi,edi
  41ce10:	jmp    41cc30 <__flatcc_fb_create_join_path_n@@Base>
  41ce15:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

000000000041ce20 <__flatcc_fb_create_path_ext@@Base>:
  41ce20:	mov    rdx,rsi
  41ce23:	xor    ecx,ecx
  41ce25:	mov    rsi,rdi
  41ce28:	xor    edi,edi
  41ce2a:	jmp    41cd90 <__flatcc_fb_create_join_path@@Base>
  41ce2f:	nop

000000000041ce30 <__flatcc_fb_create_make_path_n@@Base>:
  41ce30:	push   rbp
  41ce31:	push   rbx
  41ce32:	mov    rbx,rdi
  41ce35:	sub    rsp,0x8
  41ce39:	cmp    rsi,0x1
  41ce3d:	je     41cf48 <__flatcc_fb_create_make_path_n@@Base+0x118>
  41ce43:	jbe    41cf57 <__flatcc_fb_create_make_path_n@@Base+0x127>
  41ce49:	lea    rbp,[rsi-0x1]
  41ce4d:	movzx  edx,BYTE PTR [rdi]
  41ce50:	mov    eax,0x1
  41ce55:	jmp    41ce77 <__flatcc_fb_create_make_path_n@@Base+0x47>
  41ce57:	nop    WORD PTR [rax+rax*1+0x0]
  41ce60:	cmp    dl,0x20
  41ce63:	sete   dl
  41ce66:	add    rax,0x1
  41ce6a:	movzx  edx,dl
  41ce6d:	add    rsi,rdx
  41ce70:	cmp    rdi,rbp
  41ce73:	jae    41ce90 <__flatcc_fb_create_make_path_n@@Base+0x60>
  41ce75:	mov    edx,ecx
  41ce77:	cmp    dl,0x5c
  41ce7a:	movzx  ecx,BYTE PTR [rbx+rax*1]
  41ce7e:	mov    rdi,rax
  41ce81:	jne    41ce60 <__flatcc_fb_create_make_path_n@@Base+0x30>
  41ce83:	cmp    cl,0x20
  41ce86:	jne    41ce60 <__flatcc_fb_create_make_path_n@@Base+0x30>
  41ce88:	add    rsi,0x1
  41ce8c:	jmp    41ce60 <__flatcc_fb_create_make_path_n@@Base+0x30>
  41ce8e:	xchg   ax,ax
  41ce90:	xor    eax,eax
  41ce92:	cmp    cl,0x20
  41ce95:	sete   al
  41ce98:	lea    rdi,[rsi+rax*1+0x1]
  41ce9d:	call   405180 <malloc@plt>
  41cea2:	test   rax,rax
  41cea5:	je     41cf1f <__flatcc_fb_create_make_path_n@@Base+0xef>
  41cea7:	movzx  ecx,BYTE PTR [rbx]
  41ceaa:	mov    edx,0x1
  41ceaf:	xor    edi,edi
  41ceb1:	jmp    41cedb <__flatcc_fb_create_make_path_n@@Base+0xab>
  41ceb3:	nop    DWORD PTR [rax+rax*1+0x0]
  41ceb8:	cmp    cl,0x20
  41cebb:	je     41cf30 <__flatcc_fb_create_make_path_n@@Base+0x100>
  41cebd:	movzx  r8d,BYTE PTR [rbx+rdx*1]
  41cec2:	mov    r9,rdx
  41cec5:	mov    rsi,rdi
  41cec8:	add    rdx,0x1
  41cecc:	cmp    rbp,r9
  41cecf:	mov    BYTE PTR [rax+rsi*1],cl
  41ced2:	lea    rdi,[rsi+0x1]
  41ced6:	jbe    41cf10 <__flatcc_fb_create_make_path_n@@Base+0xe0>
  41ced8:	mov    ecx,r8d
  41cedb:	cmp    cl,0x5c
  41cede:	jne    41ceb8 <__flatcc_fb_create_make_path_n@@Base+0x88>
  41cee0:	movzx  r8d,BYTE PTR [rbx+rdx*1]
  41cee5:	mov    r9,rdx
  41cee8:	mov    rsi,rdi
  41ceeb:	cmp    r8b,0x20
  41ceef:	jne    41cec8 <__flatcc_fb_create_make_path_n@@Base+0x98>
  41cef1:	add    rsi,0x1
  41cef5:	add    rdx,0x1
  41cef9:	cmp    rbp,r9
  41cefc:	mov    BYTE PTR [rax+rdi*1],0x5c
  41cf00:	mov    BYTE PTR [rax+rsi*1],cl
  41cf03:	lea    rdi,[rsi+0x1]
  41cf07:	ja     41ced8 <__flatcc_fb_create_make_path_n@@Base+0xa8>
  41cf09:	nop    DWORD PTR [rax+0x0]
  41cf10:	cmp    r8b,0x20
  41cf14:	je     41cf68 <__flatcc_fb_create_make_path_n@@Base+0x138>
  41cf16:	mov    BYTE PTR [rax+rdi*1],r8b
  41cf1a:	mov    BYTE PTR [rax+rdi*1+0x1],0x0
  41cf1f:	add    rsp,0x8
  41cf23:	pop    rbx
  41cf24:	pop    rbp
  41cf25:	ret    
  41cf26:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41cf30:	lea    rsi,[rdi+0x1]
  41cf34:	mov    BYTE PTR [rax+rdi*1],0x5c
  41cf38:	mov    r9,rdx
  41cf3b:	movzx  r8d,BYTE PTR [rbx+rdx*1]
  41cf40:	jmp    41cec8 <__flatcc_fb_create_make_path_n@@Base+0x98>
  41cf42:	nop    WORD PTR [rax+rax*1+0x0]
  41cf48:	movzx  ebp,BYTE PTR [rdi]
  41cf4b:	cmp    bpl,0x20
  41cf4f:	je     41cf72 <__flatcc_fb_create_make_path_n@@Base+0x142>
  41cf51:	cmp    bpl,0x5c
  41cf55:	je     41cf72 <__flatcc_fb_create_make_path_n@@Base+0x142>
  41cf57:	add    rsp,0x8
  41cf5b:	mov    rdi,rbx
  41cf5e:	pop    rbx
  41cf5f:	pop    rbp
  41cf60:	jmp    41cb30 <__flatcc_fb_copy_path_n@@Base>
  41cf65:	nop    DWORD PTR [rax]
  41cf68:	mov    BYTE PTR [rax+rdi*1],0x5c
  41cf6c:	lea    rdi,[rsi+0x2]
  41cf70:	jmp    41cf16 <__flatcc_fb_create_make_path_n@@Base+0xe6>
  41cf72:	mov    edi,0x3
  41cf77:	call   405180 <malloc@plt>
  41cf7c:	test   rax,rax
  41cf7f:	je     41cf1f <__flatcc_fb_create_make_path_n@@Base+0xef>
  41cf81:	mov    BYTE PTR [rax],0x5c
  41cf84:	mov    BYTE PTR [rax+0x1],bpl
  41cf88:	mov    BYTE PTR [rax+0x2],0x0
  41cf8c:	jmp    41cf1f <__flatcc_fb_create_make_path_n@@Base+0xef>
  41cf8e:	xchg   ax,ax

000000000041cf90 <__flatcc_fb_create_make_path@@Base>:
  41cf90:	push   rbx
  41cf91:	mov    rbx,rdi
  41cf94:	call   4050c0 <strlen@plt>
  41cf99:	mov    rdi,rbx
  41cf9c:	mov    rsi,rax
  41cf9f:	pop    rbx
  41cfa0:	jmp    41ce30 <__flatcc_fb_create_make_path_n@@Base>
  41cfa5:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

000000000041cfb0 <__flatcc_fb_find_basename@@Base>:
  41cfb0:	add    rsi,rdi
  41cfb3:	cmp    rdi,rsi
  41cfb6:	je     41cfee <__flatcc_fb_find_basename@@Base+0x3e>
  41cfb8:	movzx  edx,BYTE PTR [rsi-0x1]
  41cfbc:	lea    rax,[rsi-0x1]
  41cfc0:	cmp    dl,0x5c
  41cfc3:	je     41cff3 <__flatcc_fb_find_basename@@Base+0x43>
  41cfc5:	cmp    dl,0x2f
  41cfc8:	jne    41cfe5 <__flatcc_fb_find_basename@@Base+0x35>
  41cfca:	jmp    41cff3 <__flatcc_fb_find_basename@@Base+0x43>
  41cfcc:	nop    DWORD PTR [rax+0x0]
  41cfd0:	movzx  edx,BYTE PTR [rax-0x1]
  41cfd4:	lea    rcx,[rax-0x1]
  41cfd8:	cmp    dl,0x2f
  41cfdb:	je     41cfea <__flatcc_fb_find_basename@@Base+0x3a>
  41cfdd:	cmp    dl,0x5c
  41cfe0:	je     41cfea <__flatcc_fb_find_basename@@Base+0x3a>
  41cfe2:	mov    rax,rcx
  41cfe5:	cmp    rdi,rax
  41cfe8:	jne    41cfd0 <__flatcc_fb_find_basename@@Base+0x20>
  41cfea:	sub    rax,rdi
  41cfed:	ret    
  41cfee:	mov    rax,rdi
  41cff1:	jmp    41cfea <__flatcc_fb_find_basename@@Base+0x3a>
  41cff3:	mov    rax,rsi
  41cff6:	jmp    41cfea <__flatcc_fb_find_basename@@Base+0x3a>
  41cff8:	nop    DWORD PTR [rax+rax*1+0x0]

000000000041d000 <__flatcc_fb_create_basename@@Base>:
  41d000:	push   r12
  41d002:	push   rbp
  41d003:	mov    rbp,rsi
  41d006:	push   rbx
  41d007:	mov    rbx,rdi
  41d00a:	mov    r12,rdx
  41d00d:	call   41cfb0 <__flatcc_fb_find_basename@@Base>
  41d012:	mov    rsi,rbp
  41d015:	add    rbx,rax
  41d018:	mov    rdx,r12
  41d01b:	sub    rsi,rax
  41d01e:	mov    rdi,rbx
  41d021:	call   41cbe0 <__flatcc_fb_chomp@@Base>
  41d026:	lea    rdi,[rax+0x1]
  41d02a:	mov    rbp,rax
  41d02d:	call   405180 <malloc@plt>
  41d032:	test   rax,rax
  41d035:	mov    rcx,rax
  41d038:	je     41d04f <__flatcc_fb_create_basename@@Base+0x4f>
  41d03a:	mov    rdx,rbp
  41d03d:	mov    rsi,rbx
  41d040:	mov    rdi,rax
  41d043:	call   405170 <memcpy@plt>
  41d048:	mov    rcx,rax
  41d04b:	mov    BYTE PTR [rax+rbp*1],0x0
  41d04f:	pop    rbx
  41d050:	mov    rax,rcx
  41d053:	pop    rbp
  41d054:	pop    r12
  41d056:	ret    
  41d057:	nop    WORD PTR [rax+rax*1+0x0]

000000000041d060 <__flatcc_fb_read_file@@Base>:
  41d060:	push   r14
  41d062:	push   r13
  41d064:	mov    r14,rdx
  41d067:	push   r12
  41d069:	push   rbp
  41d06a:	push   rbx
  41d06b:	mov    rbx,rsi
  41d06e:	lea    rsi,[rip+0x29303]        # 446378 <fb_schema_table_missing@@Base+0x8>
  41d075:	sub    rsp,0x10
  41d079:	mov    rax,QWORD PTR fs:0x28
  41d082:	mov    QWORD PTR [rsp+0x8],rax
  41d087:	xor    eax,eax
  41d089:	test   rdx,rdx
  41d08c:	cmove  r14,rsp
  41d090:	call   4051d0 <fopen@plt>
  41d095:	test   rax,rax
  41d098:	je     41d172 <__flatcc_fb_read_file@@Base+0x112>
  41d09e:	xor    esi,esi
  41d0a0:	mov    rbp,rax
  41d0a3:	mov    edx,0x2
  41d0a8:	mov    rdi,rax
  41d0ab:	call   405190 <fseek@plt>
  41d0b0:	mov    rdi,rbp
  41d0b3:	call   405160 <ftell@plt>
  41d0b8:	test   rbx,rbx
  41d0bb:	mov    r12,rax
  41d0be:	mov    QWORD PTR [r14],rax
  41d0c1:	je     41d0cc <__flatcc_fb_read_file@@Base+0x6c>
  41d0c3:	cmp    rax,rbx
  41d0c6:	ja     41d168 <__flatcc_fb_read_file@@Base+0x108>
  41d0cc:	mov    rdi,rbp
  41d0cf:	call   4050f0 <rewind@plt>
  41d0d4:	test   r12,r12
  41d0d7:	mov    edi,0x1
  41d0dc:	cmovne rdi,r12
  41d0e0:	call   405180 <malloc@plt>
  41d0e5:	test   rax,rax
  41d0e8:	mov    r13,rax
  41d0eb:	je     41d168 <__flatcc_fb_read_file@@Base+0x108>
  41d0ed:	xor    ebx,ebx
  41d0ef:	jmp    41d0fb <__flatcc_fb_read_file@@Base+0x9b>
  41d0f1:	nop    DWORD PTR [rax+0x0]
  41d0f8:	add    rbx,rax
  41d0fb:	mov    rdx,r12
  41d0fe:	lea    rdi,[r13+rbx*1+0x0]
  41d103:	mov    rcx,rbp
  41d106:	sub    rdx,rbx
  41d109:	mov    esi,0x1
  41d10e:	call   405090 <fread@plt>
  41d113:	test   rax,rax
  41d116:	jne    41d0f8 <__flatcc_fb_read_file@@Base+0x98>
  41d118:	cmp    rbx,r12
  41d11b:	mov    rdi,rbp
  41d11e:	jne    41d150 <__flatcc_fb_read_file@@Base+0xf0>
  41d120:	call   4050b0 <fclose@plt>
  41d125:	mov    QWORD PTR [r14],rbx
  41d128:	mov    rcx,QWORD PTR [rsp+0x8]
  41d12d:	xor    rcx,QWORD PTR fs:0x28
  41d136:	mov    rax,r13
  41d139:	jne    41d177 <__flatcc_fb_read_file@@Base+0x117>
  41d13b:	add    rsp,0x10
  41d13f:	pop    rbx
  41d140:	pop    rbp
  41d141:	pop    r12
  41d143:	pop    r13
  41d145:	pop    r14
  41d147:	ret    
  41d148:	nop    DWORD PTR [rax+rax*1+0x0]
  41d150:	call   4050b0 <fclose@plt>
  41d155:	mov    rdi,r13
  41d158:	call   405040 <free@plt>
  41d15d:	mov    QWORD PTR [r14],r12
  41d160:	xor    r13d,r13d
  41d163:	jmp    41d128 <__flatcc_fb_read_file@@Base+0xc8>
  41d165:	nop    DWORD PTR [rax]
  41d168:	mov    rdi,rbp
  41d16b:	call   4050b0 <fclose@plt>
  41d170:	jmp    41d15d <__flatcc_fb_read_file@@Base+0xfd>
  41d172:	xor    r12d,r12d
  41d175:	jmp    41d15d <__flatcc_fb_read_file@@Base+0xfd>
  41d177:	call   4050d0 <__stack_chk_fail@plt>
  41d17c:	nop    DWORD PTR [rax+0x0]

000000000041d180 <__flatcc_fb_default_error_out@@Base>:
  41d180:	mov    rax,QWORD PTR [rip+0x33e61]        # 450fe8 <stderr@GLIBC_2.2.5>
  41d187:	mov    rdi,rsi
  41d18a:	movsxd rdx,edx
  41d18d:	mov    esi,0x1
  41d192:	mov    rcx,QWORD PTR [rax]
  41d195:	jmp    4051f0 <fwrite@plt>
  41d19a:	nop    WORD PTR [rax+rax*1+0x0]
  41d1a0:	lea    rdi,[rsi+0x8]
  41d1a4:	jmp    41b1e0 <fb_symbol_table_clear@@Base>
  41d1a9:	nop    DWORD PTR [rax+0x0]
  41d1b0:	push   r12
  41d1b2:	push   rbp
  41d1b3:	mov    r12,rsi
  41d1b6:	push   rbx
  41d1b7:	mov    rbx,rdi
  41d1ba:	sub    rsp,0x10
  41d1be:	movsxd rax,DWORD PTR [rbx+0x38]
  41d1c2:	mov    rdi,QWORD PTR [rdi+0x28]
  41d1c6:	lea    rbp,[rax+rax*4]
  41d1ca:	mov    r8,rax
  41d1cd:	mov    rax,QWORD PTR [rbx+0x48]
  41d1d1:	shl    rbp,0x3
  41d1d5:	lea    rsi,[rdi+rbp*1]
  41d1d9:	cmp    rsi,rax
  41d1dc:	mov    QWORD PTR [rbx+0x30],rsi
  41d1e0:	je     41d218 <__flatcc_fb_default_error_out@@Base+0x98>
  41d1e2:	mov    QWORD PTR [rax],rdx
  41d1e5:	sub    rcx,rdx
  41d1e8:	sub    rdx,QWORD PTR [rbx+0x70]
  41d1ec:	mov    QWORD PTR [rax+0x8],rcx
  41d1f0:	mov    rcx,QWORD PTR [rbx+0x78]
  41d1f4:	add    rax,0x28
  41d1f8:	mov    QWORD PTR [rax-0x8],r12
  41d1fc:	add    rdx,0x1
  41d200:	mov    QWORD PTR [rax-0x18],rcx
  41d204:	mov    QWORD PTR [rax-0x10],rdx
  41d208:	mov    QWORD PTR [rbx+0x48],rax
  41d20c:	add    rsp,0x10
  41d210:	pop    rbx
  41d211:	pop    rbp
  41d212:	pop    r12
  41d214:	ret    
  41d215:	nop    DWORD PTR [rax]
  41d218:	test   r8d,r8d
  41d21b:	jne    41d268 <__flatcc_fb_default_error_out@@Base+0xe8>
  41d21d:	mov    esi,0xa000
  41d222:	mov    r8d,0x400
  41d228:	mov    DWORD PTR [rbx+0x38],r8d
  41d22c:	mov    QWORD PTR [rsp+0x8],rcx
  41d231:	mov    QWORD PTR [rsp],rdx
  41d235:	call   4051b0 <realloc@plt>
  41d23a:	test   rax,rax
  41d23d:	mov    QWORD PTR [rbx+0x28],rax
  41d241:	mov    rdx,QWORD PTR [rsp]
  41d245:	mov    rcx,QWORD PTR [rsp+0x8]
  41d24a:	je     41d278 <__flatcc_fb_default_error_out@@Base+0xf8>
  41d24c:	movsxd rsi,DWORD PTR [rbx+0x38]
  41d250:	lea    rsi,[rsi+rsi*4]
  41d254:	lea    rsi,[rax+rsi*8]
  41d258:	add    rax,rbp
  41d25b:	mov    QWORD PTR [rbx+0x30],rsi
  41d25f:	jmp    41d1e2 <__flatcc_fb_default_error_out@@Base+0x62>
  41d261:	nop    DWORD PTR [rax+0x0]
  41d268:	add    r8d,r8d
  41d26b:	movsxd rax,r8d
  41d26e:	lea    rsi,[rax+rax*4]
  41d272:	shl    rsi,0x3
  41d276:	jmp    41d228 <__flatcc_fb_default_error_out@@Base+0xa8>
  41d278:	call   40527e <__sprintf_chk@plt+0x5e>
  41d27d:	nop    DWORD PTR [rax]
  41d280:	push   r12
  41d282:	push   rbp
  41d283:	push   rbx
  41d284:	mov    rcx,QWORD PTR [rdi+0x48]
  41d288:	mov    rbx,rdi
  41d28b:	mov    r12,QWORD PTR [rdi+0x30]
  41d28f:	lea    rbp,[rcx+0x28]
  41d293:	mov    rdx,rcx
  41d296:	cmp    r12,rbp
  41d299:	mov    QWORD PTR [rdi+0x48],rbp
  41d29d:	je     41d340 <__flatcc_fb_default_error_out@@Base+0x1c0>
  41d2a3:	cmp    QWORD PTR [rcx+0x48],0xfffffffffffffc3c
  41d2ab:	jne    41d338 <__flatcc_fb_default_error_out@@Base+0x1b8>
  41d2b1:	mov    rcx,rbp
  41d2b4:	mov    rax,QWORD PTR [rdi+0x60]
  41d2b8:	jmp    41d2f0 <__flatcc_fb_default_error_out@@Base+0x170>
  41d2ba:	nop    WORD PTR [rax+rax*1+0x0]
  41d2c0:	mov    QWORD PTR [rbx+0x60],rax
  41d2c4:	mov    rsi,QWORD PTR [rbx+0x40]
  41d2c8:	mov    QWORD PTR [rdx+0x8],rbp
  41d2cc:	lea    rbp,[rcx+0x28]
  41d2d0:	cmp    rbp,r12
  41d2d3:	mov    QWORD PTR [rdx],rsi
  41d2d6:	mov    QWORD PTR [rbx+0x40],rdx
  41d2da:	mov    QWORD PTR [rbx+0x48],rbp
  41d2de:	mov    rdx,rcx
  41d2e1:	mov    rcx,rbp
  41d2e4:	je     41d340 <__flatcc_fb_default_error_out@@Base+0x1c0>
  41d2e6:	cmp    QWORD PTR [rdx+0x48],0xfffffffffffffc3c
  41d2ee:	jne    41d338 <__flatcc_fb_default_error_out@@Base+0x1b8>
  41d2f0:	mov    rdx,rax
  41d2f3:	add    rax,0x20
  41d2f7:	cmp    rax,QWORD PTR [rbx+0x50]
  41d2fb:	jbe    41d2c0 <__flatcc_fb_default_error_out@@Base+0x140>
  41d2fd:	mov    esi,0x1
  41d302:	mov    edi,0x10000
  41d307:	call   405140 <calloc@plt>
  41d30c:	test   rax,rax
  41d30f:	je     41d363 <__flatcc_fb_default_error_out@@Base+0x1e3>
  41d311:	mov    rdx,QWORD PTR [rbx+0x58]
  41d315:	lea    rcx,[rax+0x10000]
  41d31c:	mov    QWORD PTR [rbx+0x58],rax
  41d320:	mov    QWORD PTR [rbx+0x50],rcx
  41d324:	mov    rcx,QWORD PTR [rbx+0x48]
  41d328:	mov    QWORD PTR [rax],rdx
  41d32b:	lea    rdx,[rax+0x10]
  41d32f:	add    rax,0x30
  41d333:	jmp    41d2c0 <__flatcc_fb_default_error_out@@Base+0x140>
  41d335:	nop    DWORD PTR [rax]
  41d338:	mov    rax,rbp
  41d33b:	pop    rbx
  41d33c:	pop    rbp
  41d33d:	pop    r12
  41d33f:	ret    
  41d340:	lea    rcx,[rip+0x29ebd]        # 447204 <fb_schema_table_missing@@Base+0xe94>
  41d347:	lea    rsi,[rip+0x29032]        # 446380 <fb_schema_table_missing@@Base+0x10>
  41d34e:	lea    rdi,[rip+0x19ed4]        # 437229 <_IO_stdin_used@@Base+0xa229>
  41d355:	mov    QWORD PTR [rbx+0x48],rdx
  41d359:	mov    edx,0x155
  41d35e:	call   405100 <__assert_fail@plt>
  41d363:	call   40527e <__sprintf_chk@plt+0x5e>
  41d368:	nop    DWORD PTR [rax+rax*1+0x0]
  41d370:	mov    rax,QWORD PTR [rdi+0x48]
  41d374:	mov    rax,QWORD PTR [rax+0x20]
  41d378:	test   rax,rax
  41d37b:	je     41d3ba <__flatcc_fb_default_error_out@@Base+0x23a>
  41d37d:	push   rbx
  41d37e:	mov    rbx,rdi
  41d381:	jmp    41d3a3 <__flatcc_fb_default_error_out@@Base+0x223>
  41d383:	nop    DWORD PTR [rax+rax*1+0x0]
  41d388:	cmp    rax,0x7d
  41d38c:	je     41d3c0 <__flatcc_fb_default_error_out@@Base+0x240>
  41d38e:	mov    rdi,rbx
  41d391:	call   41d280 <__flatcc_fb_default_error_out@@Base+0x100>
  41d396:	mov    rax,QWORD PTR [rbx+0x48]
  41d39a:	mov    rax,QWORD PTR [rax+0x20]
  41d39e:	test   rax,rax
  41d3a1:	je     41d3b9 <__flatcc_fb_default_error_out@@Base+0x239>
  41d3a3:	cmp    rax,0x3b
  41d3a7:	jne    41d388 <__flatcc_fb_default_error_out@@Base+0x208>
  41d3a9:	mov    rdi,rbx
  41d3ac:	call   41d280 <__flatcc_fb_default_error_out@@Base+0x100>
  41d3b1:	mov    QWORD PTR [rbx+0x40],0x0
  41d3b9:	pop    rbx
  41d3ba:	repz ret 
  41d3bc:	nop    DWORD PTR [rax+0x0]
  41d3c0:	mov    QWORD PTR [rbx+0x40],0x0
  41d3c8:	pop    rbx
  41d3c9:	jmp    41d3ba <__flatcc_fb_default_error_out@@Base+0x23a>
  41d3cb:	nop    DWORD PTR [rax+rax*1+0x0]
  41d3d0:	mov    rax,QWORD PTR [rdi+0x48]
  41d3d4:	mov    rax,QWORD PTR [rax+0x20]
  41d3d8:	test   rax,rax
  41d3db:	je     41d41d <__flatcc_fb_default_error_out@@Base+0x29d>
  41d3dd:	push   rbp
  41d3de:	push   rbx
  41d3df:	mov    rbp,rsi
  41d3e2:	mov    rbx,rdi
  41d3e5:	sub    rsp,0x8
  41d3e9:	jmp    41d402 <__flatcc_fb_default_error_out@@Base+0x282>
  41d3eb:	nop    DWORD PTR [rax+rax*1+0x0]
  41d3f0:	call   41d280 <__flatcc_fb_default_error_out@@Base+0x100>
  41d3f5:	mov    rax,QWORD PTR [rbx+0x48]
  41d3f9:	mov    rax,QWORD PTR [rax+0x20]
  41d3fd:	test   rax,rax
  41d400:	je     41d417 <__flatcc_fb_default_error_out@@Base+0x297>
  41d402:	cmp    rbp,rax
  41d405:	mov    rdi,rbx
  41d408:	jne    41d3f0 <__flatcc_fb_default_error_out@@Base+0x270>
  41d40a:	call   41d280 <__flatcc_fb_default_error_out@@Base+0x100>
  41d40f:	mov    QWORD PTR [rbx+0x40],0x0
  41d417:	add    rsp,0x8
  41d41b:	pop    rbx
  41d41c:	pop    rbp
  41d41d:	repz ret 
  41d41f:	nop

000000000041d420 <__flatcc_fb_print_error@@Base>:
  41d420:	push   r12
  41d422:	push   rbp
  41d423:	mov    r12,rdi
  41d426:	push   rbx
  41d427:	sub    rsp,0x1a0
  41d42e:	test   al,al
  41d430:	mov    QWORD PTR [rsp+0x100],rdx
  41d438:	mov    QWORD PTR [rsp+0x108],rcx
  41d440:	mov    QWORD PTR [rsp+0x110],r8
  41d448:	mov    QWORD PTR [rsp+0x118],r9
  41d450:	je     41d49a <__flatcc_fb_print_error@@Base+0x7a>
  41d452:	vmovaps XMMWORD PTR [rsp+0x120],xmm0
  41d45b:	vmovaps XMMWORD PTR [rsp+0x130],xmm1
  41d464:	vmovaps XMMWORD PTR [rsp+0x140],xmm2
  41d46d:	vmovaps XMMWORD PTR [rsp+0x150],xmm3
  41d476:	vmovaps XMMWORD PTR [rsp+0x160],xmm4
  41d47f:	vmovaps XMMWORD PTR [rsp+0x170],xmm5
  41d488:	vmovaps XMMWORD PTR [rsp+0x180],xmm6
  41d491:	vmovaps XMMWORD PTR [rsp+0x190],xmm7
  41d49a:	mov    rax,QWORD PTR fs:0x28
  41d4a3:	mov    QWORD PTR [rsp+0xe8],rax
  41d4ab:	xor    eax,eax
  41d4ad:	lea    rax,[rsp+0x1c0]
  41d4b5:	lea    rbp,[rsp+0x20]
  41d4ba:	lea    r9,[rsp+0x8]
  41d4bf:	mov    r8,rsi
  41d4c2:	mov    ecx,0xc8
  41d4c7:	mov    edx,0x1
  41d4cc:	mov    QWORD PTR [rsp+0x10],rax
  41d4d1:	lea    rax,[rsp+0xf0]
  41d4d9:	mov    esi,0xc8
  41d4de:	mov    rdi,rbp
  41d4e1:	mov    DWORD PTR [rsp+0x8],0x10
  41d4e9:	mov    DWORD PTR [rsp+0xc],0x30
  41d4f1:	mov    QWORD PTR [rsp+0x18],rax
  41d4f6:	call   4051a0 <__vsnprintf_chk@plt>
  41d4fb:	cmp    eax,0xc7
  41d500:	mov    ebx,eax
  41d502:	jle    41d51b <__flatcc_fb_print_error@@Base+0xfb>
  41d504:	mov    DWORD PTR [rsp+0xe3],0xa2e2e2e
  41d50f:	mov    ebx,0xc7
  41d514:	mov    BYTE PTR [rbp+0xc7],0x0
  41d51b:	mov    rdi,QWORD PTR [r12+0x18]
  41d520:	mov    edx,ebx
  41d522:	mov    rsi,rbp
  41d525:	call   QWORD PTR [r12+0x10]
  41d52a:	mov    rcx,QWORD PTR [rsp+0xe8]
  41d532:	xor    rcx,QWORD PTR fs:0x28
  41d53b:	mov    eax,ebx
  41d53d:	jne    41d54b <__flatcc_fb_print_error@@Base+0x12b>
  41d53f:	add    rsp,0x1a0
  41d546:	pop    rbx
  41d547:	pop    rbp
  41d548:	pop    r12
  41d54a:	ret    
  41d54b:	call   4050d0 <__stack_chk_fail@plt>

000000000041d550 <__flatcc_error_find_file_of_token@@Base>:
  41d550:	jmp    41d567 <__flatcc_error_find_file_of_token@@Base+0x17>
  41d552:	nop    WORD PTR [rax+rax*1+0x0]
  41d558:	cmp    QWORD PTR [rdi+0x28],rsi
  41d55c:	ja     41d564 <__flatcc_error_find_file_of_token@@Base+0x14>
  41d55e:	cmp    rsi,QWORD PTR [rdi+0x30]
  41d562:	jb     41d578 <__flatcc_error_find_file_of_token@@Base+0x28>
  41d564:	mov    rdi,QWORD PTR [rdi]
  41d567:	test   rdi,rdi
  41d56a:	jne    41d558 <__flatcc_error_find_file_of_token@@Base+0x8>
  41d56c:	lea    rax,[rip+0x2829b]        # 44580e <_IO_stdin_used@@Base+0x1880e>
  41d573:	ret    
  41d574:	nop    DWORD PTR [rax+0x0]
  41d578:	mov    rax,QWORD PTR [rdi+0x318]
  41d57f:	ret    

000000000041d580 <__flatcc_error_report@@Base>:
  41d580:	push   r14
  41d582:	push   r13
  41d584:	mov    r13,rsi
  41d587:	push   r12
  41d589:	push   rbp
  41d58a:	mov    r12,rdx
  41d58d:	push   rbx
  41d58e:	mov    rbp,rdi
  41d591:	mov    rbx,rcx
  41d594:	sub    rsp,0x10
  41d598:	test   rsi,rsi
  41d59b:	setne  al
  41d59e:	test   r8,r8
  41d5a1:	jne    41d5ae <__flatcc_error_report@@Base+0x2e>
  41d5a3:	test   al,al
  41d5a5:	je     41d5ae <__flatcc_error_report@@Base+0x2e>
  41d5a7:	mov    r8,QWORD PTR [rsi]
  41d5aa:	mov    r9d,DWORD PTR [rsi+0x8]
  41d5ae:	lea    rdx,[rip+0x28259]        # 44580e <_IO_stdin_used@@Base+0x1880e>
  41d5b5:	test   r12,r12
  41d5b8:	cmove  r12,rdx
  41d5bc:	test   r8,r8
  41d5bf:	je     41d6f0 <__flatcc_error_report@@Base+0x170>
  41d5c5:	test   rbx,rbx
  41d5c8:	sete   dl
  41d5cb:	test   al,al
  41d5cd:	je     41d5d3 <__flatcc_error_report@@Base+0x53>
  41d5cf:	test   dl,dl
  41d5d1:	jne    41d640 <__flatcc_error_report@@Base+0xc0>
  41d5d3:	test   rbx,rbx
  41d5d6:	je     41d5e0 <__flatcc_error_report@@Base+0x60>
  41d5d8:	test   al,al
  41d5da:	jne    41d688 <__flatcc_error_report@@Base+0x108>
  41d5e0:	test   r13,r13
  41d5e3:	jne    41d5ed <__flatcc_error_report@@Base+0x6d>
  41d5e5:	test   dl,dl
  41d5e7:	jne    41d700 <__flatcc_error_report@@Base+0x180>
  41d5ed:	test   rbx,rbx
  41d5f0:	je     41d720 <__flatcc_error_report@@Base+0x1a0>
  41d5f6:	mov    rsi,rbx
  41d5f9:	mov    rdi,rbp
  41d5fc:	call   41d550 <__flatcc_error_find_file_of_token@@Base>
  41d601:	mov    rdx,QWORD PTR [rbx+0x8]
  41d605:	mov    r9,QWORD PTR [rbx+0x18]
  41d609:	lea    rsi,[rip+0x28e28]        # 446438 <fb_schema_table_missing@@Base+0xc8>
  41d610:	mov    r8,QWORD PTR [rbx+0x10]
  41d614:	push   QWORD PTR [rbx]
  41d616:	mov    rcx,rax
  41d619:	mov    rdi,rbp
  41d61c:	xor    eax,eax
  41d61e:	push   rdx
  41d61f:	mov    rdx,r12
  41d622:	call   41d420 <__flatcc_fb_print_error@@Base>
  41d627:	pop    rax
  41d628:	pop    rdx
  41d629:	add    DWORD PTR [rbp+0xd0],0x1
  41d630:	add    rsp,0x10
  41d634:	pop    rbx
  41d635:	pop    rbp
  41d636:	pop    r12
  41d638:	pop    r13
  41d63a:	pop    r14
  41d63c:	ret    
  41d63d:	nop    DWORD PTR [rax]
  41d640:	mov    rsi,r13
  41d643:	mov    rdi,rbp
  41d646:	mov    DWORD PTR [rsp+0xc],r9d
  41d64b:	mov    QWORD PTR [rsp],r8
  41d64f:	call   41d550 <__flatcc_error_find_file_of_token@@Base>
  41d654:	push   r12
  41d656:	mov    r8,QWORD PTR [rsp+0x8]
  41d65b:	lea    rsi,[rip+0x28d7e]        # 4463e0 <fb_schema_table_missing@@Base+0x70>
  41d662:	mov    rcx,QWORD PTR [r13+0x10]
  41d666:	mov    rdx,rax
  41d669:	mov    rdi,rbp
  41d66c:	xor    eax,eax
  41d66e:	push   r8
  41d670:	mov    r8,QWORD PTR [r13+0x18]
  41d674:	mov    r9d,DWORD PTR [rsp+0x1c]
  41d679:	call   41d420 <__flatcc_fb_print_error@@Base>
  41d67e:	pop    rcx
  41d67f:	pop    rsi
  41d680:	jmp    41d629 <__flatcc_error_report@@Base+0xa9>
  41d682:	nop    WORD PTR [rax+rax*1+0x0]
  41d688:	mov    rsi,r13
  41d68b:	mov    rdi,rbp
  41d68e:	mov    DWORD PTR [rsp+0xc],r9d
  41d693:	mov    QWORD PTR [rsp],r8
  41d697:	call   41d550 <__flatcc_error_find_file_of_token@@Base>
  41d69c:	mov    rsi,rbx
  41d69f:	mov    rdi,rbp
  41d6a2:	mov    r14,rax
  41d6a5:	call   41d550 <__flatcc_error_find_file_of_token@@Base>
  41d6aa:	mov    rdx,QWORD PTR [rbx+0x8]
  41d6ae:	sub    rsp,0x8
  41d6b2:	push   QWORD PTR [rbx]
  41d6b4:	mov    rcx,QWORD PTR [r13+0x10]
  41d6b8:	lea    rsi,[rip+0x28d41]        # 446400 <fb_schema_table_missing@@Base+0x90>
  41d6bf:	mov    rdi,rbp
  41d6c2:	push   rdx
  41d6c3:	push   QWORD PTR [rbx+0x18]
  41d6c6:	mov    rdx,r14
  41d6c9:	push   QWORD PTR [rbx+0x10]
  41d6cc:	push   rax
  41d6cd:	xor    eax,eax
  41d6cf:	push   r12
  41d6d1:	mov    r8,QWORD PTR [rsp+0x38]
  41d6d6:	push   r8
  41d6d8:	mov    r8,QWORD PTR [r13+0x18]
  41d6dc:	mov    r9d,DWORD PTR [rsp+0x4c]
  41d6e1:	call   41d420 <__flatcc_fb_print_error@@Base>
  41d6e6:	add    rsp,0x40
  41d6ea:	jmp    41d629 <__flatcc_error_report@@Base+0xa9>
  41d6ef:	nop
  41d6f0:	xor    r9d,r9d
  41d6f3:	mov    r8,rdx
  41d6f6:	jmp    41d5c5 <__flatcc_error_report@@Base+0x45>
  41d6fb:	nop    DWORD PTR [rax+rax*1+0x0]
  41d700:	lea    rsi,[rip+0x29587]        # 446c8e <fb_schema_table_missing@@Base+0x91e>
  41d707:	mov    rdx,r12
  41d70a:	mov    rdi,rbp
  41d70d:	xor    eax,eax
  41d70f:	call   41d420 <__flatcc_fb_print_error@@Base>
  41d714:	jmp    41d629 <__flatcc_error_report@@Base+0xa9>
  41d719:	nop    DWORD PTR [rax+0x0]
  41d720:	lea    rsi,[rip+0x28d31]        # 446458 <fb_schema_table_missing@@Base+0xe8>
  41d727:	mov    rdi,rbp
  41d72a:	xor    eax,eax
  41d72c:	call   41d420 <__flatcc_fb_print_error@@Base>
  41d731:	jmp    41d629 <__flatcc_error_report@@Base+0xa9>
  41d736:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41d740:	push   r12
  41d742:	push   rbp
  41d743:	mov    rbp,rsi
  41d746:	push   rbx
  41d747:	mov    rdx,QWORD PTR [rdi+0x60]
  41d74b:	mov    rbx,rdi
  41d74e:	mov    r12,QWORD PTR [rdi+0x48]
  41d752:	lea    rax,[rdx+0x20]
  41d756:	cmp    rax,QWORD PTR [rdi+0x50]
  41d75a:	ja     41d840 <__flatcc_error_report@@Base+0x2c0>
  41d760:	mov    QWORD PTR [rbx+0x60],rax
  41d764:	mov    rdi,rbx
  41d767:	mov    QWORD PTR [rdx+0x8],r12
  41d76b:	mov    QWORD PTR [rbp+0x0],rdx
  41d76f:	call   41d280 <__flatcc_fb_default_error_out@@Base+0x100>
  41d774:	mov    rax,QWORD PTR [rbx+0x48]
  41d778:	mov    r12,QWORD PTR [rbp+0x0]
  41d77c:	cmp    QWORD PTR [rax+0x20],0x2e
  41d781:	je     41d7b2 <__flatcc_error_report@@Base+0x232>
  41d783:	jmp    41d810 <__flatcc_error_report@@Base+0x290>
  41d788:	nop    DWORD PTR [rax+rax*1+0x0]
  41d790:	mov    QWORD PTR [rbx+0x60],rax
  41d794:	mov    rdi,rbx
  41d797:	mov    QWORD PTR [rdx+0x8],rbp
  41d79b:	mov    QWORD PTR [r12],rdx
  41d79f:	mov    r12,rdx
  41d7a2:	call   41d280 <__flatcc_fb_default_error_out@@Base+0x100>
  41d7a7:	mov    rax,QWORD PTR [rbx+0x48]
  41d7ab:	cmp    QWORD PTR [rax+0x20],0x2e
  41d7b0:	jne    41d810 <__flatcc_error_report@@Base+0x290>
  41d7b2:	mov    rdi,rbx
  41d7b5:	call   41d280 <__flatcc_fb_default_error_out@@Base+0x100>
  41d7ba:	mov    rbp,QWORD PTR [rbx+0x48]
  41d7be:	cmp    QWORD PTR [rbp+0x20],0x9
  41d7c3:	jne    41d818 <__flatcc_error_report@@Base+0x298>
  41d7c5:	mov    rdx,QWORD PTR [rbx+0x60]
  41d7c9:	lea    rax,[rdx+0x20]
  41d7cd:	cmp    rax,QWORD PTR [rbx+0x50]
  41d7d1:	jbe    41d790 <__flatcc_error_report@@Base+0x210>
  41d7d3:	mov    esi,0x1
  41d7d8:	mov    edi,0x10000
  41d7dd:	call   405140 <calloc@plt>
  41d7e2:	test   rax,rax
  41d7e5:	je     41d877 <__flatcc_error_report@@Base+0x2f7>
  41d7eb:	mov    rdx,QWORD PTR [rbx+0x58]
  41d7ef:	lea    rcx,[rax+0x10000]
  41d7f6:	mov    QWORD PTR [rbx+0x58],rax
  41d7fa:	mov    QWORD PTR [rbx+0x50],rcx
  41d7fe:	mov    QWORD PTR [rax],rdx
  41d801:	lea    rdx,[rax+0x10]
  41d805:	add    rax,0x30
  41d809:	jmp    41d790 <__flatcc_error_report@@Base+0x210>
  41d80b:	nop    DWORD PTR [rax+rax*1+0x0]
  41d810:	pop    rbx
  41d811:	pop    rbp
  41d812:	pop    r12
  41d814:	ret    
  41d815:	nop    DWORD PTR [rax]
  41d818:	mov    rsi,rbp
  41d81b:	mov    rdi,rbx
  41d81e:	lea    rdx,[rip+0x28c5b]        # 446480 <fb_schema_table_missing@@Base+0x110>
  41d825:	pop    rbx
  41d826:	pop    rbp
  41d827:	pop    r12
  41d829:	xor    r9d,r9d
  41d82c:	xor    r8d,r8d
  41d82f:	xor    ecx,ecx
  41d831:	jmp    41d580 <__flatcc_error_report@@Base>
  41d836:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41d840:	mov    esi,0x1
  41d845:	mov    edi,0x10000
  41d84a:	call   405140 <calloc@plt>
  41d84f:	test   rax,rax
  41d852:	je     41d877 <__flatcc_error_report@@Base+0x2f7>
  41d854:	mov    rdx,QWORD PTR [rbx+0x58]
  41d858:	lea    rcx,[rax+0x10000]
  41d85f:	mov    QWORD PTR [rbx+0x58],rax
  41d863:	mov    QWORD PTR [rbx+0x50],rcx
  41d867:	mov    QWORD PTR [rax],rdx
  41d86a:	lea    rdx,[rax+0x10]
  41d86e:	add    rax,0x30
  41d872:	jmp    41d760 <__flatcc_error_report@@Base+0x1e0>
  41d877:	call   40527e <__sprintf_chk@plt+0x5e>
  41d87c:	nop    DWORD PTR [rax+0x0]
  41d880:	mov    rax,QWORD PTR [rdi+0x48]
  41d884:	mov    QWORD PTR [rdi+0x40],0x0
  41d88c:	cmp    QWORD PTR [rax+0x20],rsi
  41d890:	je     41d8b0 <__flatcc_error_report@@Base+0x330>
  41d892:	push   rbx
  41d893:	mov    rsi,rax
  41d896:	mov    rbx,rdi
  41d899:	xor    r9d,r9d
  41d89c:	xor    r8d,r8d
  41d89f:	call   41d580 <__flatcc_error_report@@Base>
  41d8a4:	mov    rax,QWORD PTR [rbx+0x48]
  41d8a8:	pop    rbx
  41d8a9:	ret    
  41d8aa:	nop    WORD PTR [rax+rax*1+0x0]
  41d8b0:	jmp    41d280 <__flatcc_fb_default_error_out@@Base+0x100>
  41d8b5:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  41d8c0:	push   r13
  41d8c2:	push   r12
  41d8c4:	mov    eax,0x1
  41d8c9:	push   rbp
  41d8ca:	push   rbx
  41d8cb:	xor    ebp,ebp
  41d8cd:	mov    rbx,rdi
  41d8d0:	mov    r13,rsi
  41d8d3:	sub    rsp,0x8
  41d8d7:	mov    r12,QWORD PTR [rdi+0x48]
  41d8db:	mov    WORD PTR [rsi+0x10],ax
  41d8df:	mov    rax,QWORD PTR [r12+0x20]
  41d8e4:	cmp    rax,0x5b
  41d8e8:	jne    41daea <__flatcc_error_report@@Base+0x56a>
  41d8ee:	xchg   ax,ax
  41d8f0:	mov    rdi,rbx
  41d8f3:	add    ebp,0x1
  41d8f6:	call   41d280 <__flatcc_fb_default_error_out@@Base+0x100>
  41d8fb:	mov    rdx,QWORD PTR [rbx+0x48]
  41d8ff:	mov    rax,QWORD PTR [rdx+0x20]
  41d903:	cmp    rax,0x5b
  41d907:	je     41d8f0 <__flatcc_error_report@@Base+0x370>
  41d909:	cmp    ebp,0x1
  41d90c:	je     41d930 <__flatcc_error_report@@Base+0x3b0>
  41d90e:	lea    rdx,[rip+0x28b93]        # 4464a8 <fb_schema_table_missing@@Base+0x138>
  41d915:	xor    r9d,r9d
  41d918:	xor    r8d,r8d
  41d91b:	xor    ecx,ecx
  41d91d:	mov    rsi,r12
  41d920:	mov    rdi,rbx
  41d923:	call   41d580 <__flatcc_error_report@@Base>
  41d928:	mov    rdx,QWORD PTR [rbx+0x48]
  41d92c:	mov    rax,QWORD PTR [rdx+0x20]
  41d930:	cmp    rax,0xfffffffffffffc28
  41d936:	jle    41da60 <__flatcc_error_report@@Base+0x4e0>
  41d93c:	cmp    rax,0xfffffffffffffc32
  41d942:	je     41daa8 <__flatcc_error_report@@Base+0x528>
  41d948:	jle    41da26 <__flatcc_error_report@@Base+0x4a6>
  41d94e:	cmp    rax,0x9
  41d952:	je     41dac0 <__flatcc_error_report@@Base+0x540>
  41d958:	cmp    rax,0x5d
  41d95c:	jne    41db30 <__flatcc_error_report@@Base+0x5b0>
  41d962:	lea    rdx,[rip+0x29330]        # 446c99 <fb_schema_table_missing@@Base+0x929>
  41d969:	xor    r9d,r9d
  41d96c:	xor    r8d,r8d
  41d96f:	xor    ecx,ecx
  41d971:	xor    esi,esi
  41d973:	mov    rdi,rbx
  41d976:	call   41d580 <__flatcc_error_report@@Base>
  41d97b:	jmp    41d990 <__flatcc_error_report@@Base+0x410>
  41d97d:	nop    DWORD PTR [rax]
  41d980:	mov    rdi,rbx
  41d983:	sub    ebp,0x1
  41d986:	call   41d280 <__flatcc_fb_default_error_out@@Base+0x100>
  41d98b:	cmp    ebp,0xffffffff
  41d98e:	je     41d9b0 <__flatcc_error_report@@Base+0x430>
  41d990:	mov    rax,QWORD PTR [rbx+0x48]
  41d994:	cmp    QWORD PTR [rax+0x20],0x5d
  41d999:	je     41d980 <__flatcc_error_report@@Base+0x400>
  41d99b:	test   ebp,ebp
  41d99d:	jne    41d9b0 <__flatcc_error_report@@Base+0x430>
  41d99f:	add    rsp,0x8
  41d9a3:	pop    rbx
  41d9a4:	pop    rbp
  41d9a5:	pop    r12
  41d9a7:	pop    r13
  41d9a9:	ret    
  41d9aa:	nop    WORD PTR [rax+rax*1+0x0]
  41d9b0:	lea    rdx,[rip+0x28b19]        # 4464d0 <fb_schema_table_missing@@Base+0x160>
  41d9b7:	xor    r9d,r9d
  41d9ba:	xor    r8d,r8d
  41d9bd:	xor    esi,esi
  41d9bf:	mov    rcx,r12
  41d9c2:	mov    rdi,rbx
  41d9c5:	call   41d580 <__flatcc_error_report@@Base>
  41d9ca:	mov    rbp,QWORD PTR [rbx+0x48]
  41d9ce:	cmp    QWORD PTR [rbp+0x20],0x5d
  41d9d3:	jne    41d99f <__flatcc_error_report@@Base+0x41f>
  41d9d5:	mov    rdi,rbx
  41d9d8:	call   41d280 <__flatcc_fb_default_error_out@@Base+0x100>
  41d9dd:	lea    rdx,[rip+0x292e8]        # 446ccc <fb_schema_table_missing@@Base+0x95c>
  41d9e4:	xor    r9d,r9d
  41d9e7:	xor    r8d,r8d
  41d9ea:	mov    rcx,r12
  41d9ed:	mov    rsi,rbp
  41d9f0:	mov    rdi,rbx
  41d9f3:	call   41d580 <__flatcc_error_report@@Base>
  41d9f8:	mov    rax,QWORD PTR [rbx+0x48]
  41d9fc:	cmp    QWORD PTR [rax+0x20],0x5d
  41da01:	jne    41d99f <__flatcc_error_report@@Base+0x41f>
  41da03:	nop    DWORD PTR [rax+rax*1+0x0]
  41da08:	mov    rdi,rbx
  41da0b:	call   41d280 <__flatcc_fb_default_error_out@@Base+0x100>
  41da10:	mov    rax,QWORD PTR [rbx+0x48]
  41da14:	cmp    QWORD PTR [rax+0x20],0x5d
  41da19:	je     41da08 <__flatcc_error_report@@Base+0x488>
  41da1b:	add    rsp,0x8
  41da1f:	pop    rbx
  41da20:	pop    rbp
  41da21:	pop    r12
  41da23:	pop    r13
  41da25:	ret    
  41da26:	cmp    rax,0xfffffffffffffc2a
  41da2c:	jl     41da40 <__flatcc_error_report@@Base+0x4c0>
  41da2e:	cmp    rax,0xfffffffffffffc2f
  41da34:	jle    41da88 <__flatcc_error_report@@Base+0x508>
  41da36:	cmp    rax,0xfffffffffffffc31
  41da3c:	je     41da88 <__flatcc_error_report@@Base+0x508>
  41da3e:	xchg   ax,ax
  41da40:	lea    rdx,[rip+0x2926e]        # 446cb5 <fb_schema_table_missing@@Base+0x945>
  41da47:	xor    r9d,r9d
  41da4a:	xor    r8d,r8d
  41da4d:	xor    ecx,ecx
  41da4f:	xor    esi,esi
  41da51:	mov    rdi,rbx
  41da54:	call   41d580 <__flatcc_error_report@@Base>
  41da59:	jmp    41d990 <__flatcc_error_report@@Base+0x410>
  41da5e:	xchg   ax,ax
  41da60:	cmp    rax,0xfffffffffffffc27
  41da66:	jge    41da88 <__flatcc_error_report@@Base+0x508>
  41da68:	cmp    rax,0xfffffffffffffc23
  41da6e:	jg     41db1f <__flatcc_error_report@@Base+0x59f>
  41da74:	cmp    rax,0xfffffffffffffc1c
  41da7a:	jge    41da88 <__flatcc_error_report@@Base+0x508>
  41da7c:	add    rax,0x3e7
  41da82:	cmp    rax,0x1
  41da86:	ja     41da40 <__flatcc_error_report@@Base+0x4c0>
  41da88:	mov    QWORD PTR [r13+0x0],rdx
  41da8c:	mov    eax,0x7
  41da91:	mov    WORD PTR [r13+0x10],ax
  41da96:	mov    rdi,rbx
  41da99:	call   41d280 <__flatcc_fb_default_error_out@@Base+0x100>
  41da9e:	jmp    41d990 <__flatcc_error_report@@Base+0x410>
  41daa3:	nop    DWORD PTR [rax+rax*1+0x0]
  41daa8:	test   ebp,ebp
  41daaa:	mov    QWORD PTR [r13+0x0],rdx
  41daae:	mov    eax,0x9
  41dab3:	jne    41da91 <__flatcc_error_report@@Base+0x511>
  41dab5:	mov    eax,0xa
  41daba:	jmp    41da91 <__flatcc_error_report@@Base+0x511>
  41dabc:	nop    DWORD PTR [rax+0x0]
  41dac0:	mov    rsi,r13
  41dac3:	mov    rdi,rbx
  41dac6:	call   41d740 <__flatcc_error_report@@Base+0x1c0>
  41dacb:	test   ebp,ebp
  41dacd:	mov    eax,0xb
  41dad2:	je     41dae3 <__flatcc_error_report@@Base+0x563>
  41dad4:	mov    WORD PTR [r13+0x10],ax
  41dad9:	jmp    41d990 <__flatcc_error_report@@Base+0x410>
  41dade:	call   41d740 <__flatcc_error_report@@Base+0x1c0>
  41dae3:	mov    eax,0xc
  41dae8:	jmp    41dad4 <__flatcc_error_report@@Base+0x554>
  41daea:	cmp    rax,0xfffffffffffffc28
  41daf0:	jle    41db69 <__flatcc_error_report@@Base+0x5e9>
  41daf2:	cmp    rax,0xfffffffffffffc32
  41daf8:	je     41db94 <__flatcc_error_report@@Base+0x614>
  41dafe:	jle    41db41 <__flatcc_error_report@@Base+0x5c1>
  41db00:	cmp    rax,0x9
  41db04:	je     41dade <__flatcc_error_report@@Base+0x55e>
  41db06:	cmp    rax,0x5d
  41db0a:	je     41d962 <__flatcc_error_report@@Base+0x3e2>
  41db10:	cmp    rax,0xfffffffffffffc34
  41db16:	je     41db59 <__flatcc_error_report@@Base+0x5d9>
  41db18:	xor    ebp,ebp
  41db1a:	jmp    41da40 <__flatcc_error_report@@Base+0x4c0>
  41db1f:	cmp    rax,0xfffffffffffffc25
  41db25:	jne    41da40 <__flatcc_error_report@@Base+0x4c0>
  41db2b:	jmp    41da88 <__flatcc_error_report@@Base+0x508>
  41db30:	cmp    rax,0xfffffffffffffc34
  41db36:	jne    41da40 <__flatcc_error_report@@Base+0x4c0>
  41db3c:	jmp    41da88 <__flatcc_error_report@@Base+0x508>
  41db41:	cmp    rax,0xfffffffffffffc2a
  41db47:	jl     41db18 <__flatcc_error_report@@Base+0x598>
  41db49:	cmp    rax,0xfffffffffffffc2f
  41db4f:	jle    41db59 <__flatcc_error_report@@Base+0x5d9>
  41db51:	cmp    rax,0xfffffffffffffc31
  41db57:	jne    41db18 <__flatcc_error_report@@Base+0x598>
  41db59:	mov    QWORD PTR [r13+0x0],r12
  41db5d:	xor    ebp,ebp
  41db5f:	mov    eax,0x8
  41db64:	jmp    41da91 <__flatcc_error_report@@Base+0x511>
  41db69:	cmp    rax,0xfffffffffffffc27
  41db6f:	jge    41db59 <__flatcc_error_report@@Base+0x5d9>
  41db71:	cmp    rax,0xfffffffffffffc23
  41db77:	jg     41db9c <__flatcc_error_report@@Base+0x61c>
  41db79:	cmp    rax,0xfffffffffffffc1c
  41db7f:	jge    41db59 <__flatcc_error_report@@Base+0x5d9>
  41db81:	add    rax,0x3e7
  41db87:	cmp    rax,0x1
  41db8b:	jbe    41db59 <__flatcc_error_report@@Base+0x5d9>
  41db8d:	xor    ebp,ebp
  41db8f:	jmp    41da40 <__flatcc_error_report@@Base+0x4c0>
  41db94:	mov    QWORD PTR [rsi],r12
  41db97:	jmp    41dab5 <__flatcc_error_report@@Base+0x535>
  41db9c:	cmp    rax,0xfffffffffffffc25
  41dba2:	je     41db59 <__flatcc_error_report@@Base+0x5d9>
  41dba4:	xor    ebp,ebp
  41dba6:	jmp    41da40 <__flatcc_error_report@@Base+0x4c0>
  41dbab:	nop    DWORD PTR [rax+rax*1+0x0]
  41dbb0:	push   r12
  41dbb2:	mov    r9d,0x2
  41dbb8:	push   rbp
  41dbb9:	lea    rbp,[rip+0x29400]        # 446fc0 <fb_schema_table_missing@@Base+0xc50>
  41dbc0:	push   rbx
  41dbc1:	mov    r12,rsi
  41dbc4:	mov    rbx,rdi
  41dbc7:	mov    WORD PTR [rsi+0x10],r9w
  41dbcc:	mov    QWORD PTR [rsi],0x0
  41dbd3:	mov    DWORD PTR [rsi+0x8],0x0
  41dbda:	mov    rsi,QWORD PTR [rbx+0x48]
  41dbde:	mov    rax,QWORD PTR [rsi+0x20]
  41dbe2:	sub    rax,0x6
  41dbe6:	cmp    rax,0x11
  41dbea:	ja     41dc00 <__flatcc_error_report@@Base+0x680>
  41dbec:	movsxd rax,DWORD PTR [rbp+rax*4+0x0]
  41dbf1:	add    rax,rbp
  41dbf4:	jmp    rax
  41dbf6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41dc00:	lea    rdx,[rip+0x28941]        # 446548 <fb_schema_table_missing@@Base+0x1d8>
  41dc07:	xor    r9d,r9d
  41dc0a:	xor    r8d,r8d
  41dc0d:	xor    ecx,ecx
  41dc0f:	mov    rdi,rbx
  41dc12:	call   41d580 <__flatcc_error_report@@Base>
  41dc17:	mov    rsi,QWORD PTR [rbx+0x48]
  41dc1b:	mov    edx,0x1
  41dc20:	mov    WORD PTR [r12+0x10],dx
  41dc26:	mov    rdx,QWORD PTR [r12]
  41dc2a:	test   rdx,rdx
  41dc2d:	je     41dc3e <__flatcc_error_report@@Base+0x6be>
  41dc2f:	mov    rax,QWORD PTR [rsi]
  41dc32:	sub    rax,rdx
  41dc35:	mov    DWORD PTR [r12+0x8],eax
  41dc3a:	mov    rsi,QWORD PTR [rbx+0x48]
  41dc3e:	cmp    QWORD PTR [rsi+0x20],0x16
  41dc43:	jne    41dcf8 <__flatcc_error_report@@Base+0x778>
  41dc49:	mov    rdi,rbx
  41dc4c:	pop    rbx
  41dc4d:	pop    rbp
  41dc4e:	pop    r12
  41dc50:	jmp    41d280 <__flatcc_fb_default_error_out@@Base+0x100>
  41dc55:	nop    DWORD PTR [rax]
  41dc58:	mov    r8d,0x1
  41dc5e:	lea    rdx,[rip+0x2907e]        # 446ce3 <fb_schema_table_missing@@Base+0x973>
  41dc65:	xor    r9d,r9d
  41dc68:	mov    WORD PTR [r12+0x10],r8w
  41dc6e:	xor    ecx,ecx
  41dc70:	xor    r8d,r8d
  41dc73:	mov    rdi,rbx
  41dc76:	call   41d580 <__flatcc_error_report@@Base>
  41dc7b:	mov    rdi,rbx
  41dc7e:	call   41d280 <__flatcc_fb_default_error_out@@Base+0x100>
  41dc83:	jmp    41dbda <__flatcc_error_report@@Base+0x65a>
  41dc88:	nop    DWORD PTR [rax+rax*1+0x0]
  41dc90:	cmp    QWORD PTR [r12],0x0
  41dc95:	jne    41dc7b <__flatcc_error_report@@Base+0x6fb>
  41dc97:	mov    rax,QWORD PTR [rsi]
  41dc9a:	mov    QWORD PTR [r12],rax
  41dc9e:	jmp    41dc7b <__flatcc_error_report@@Base+0x6fb>
  41dca0:	mov    ecx,0x1
  41dca5:	lea    rdx,[rip+0x2887c]        # 446528 <fb_schema_table_missing@@Base+0x1b8>
  41dcac:	xor    r9d,r9d
  41dcaf:	mov    WORD PTR [r12+0x10],cx
  41dcb5:	xor    r8d,r8d
  41dcb8:	xor    ecx,ecx
  41dcba:	mov    rdi,rbx
  41dcbd:	call   41d580 <__flatcc_error_report@@Base>
  41dcc2:	jmp    41dc7b <__flatcc_error_report@@Base+0x6fb>
  41dcc4:	nop    DWORD PTR [rax+0x0]
  41dcc8:	mov    edi,0x1
  41dccd:	lea    r8,[rip+0x2902d]        # 446d01 <fb_schema_table_missing@@Base+0x991>
  41dcd4:	lea    rdx,[rip+0x2881d]        # 4464f8 <fb_schema_table_missing@@Base+0x188>
  41dcdb:	mov    WORD PTR [r12+0x10],di
  41dce1:	mov    r9d,0x1
  41dce7:	xor    ecx,ecx
  41dce9:	mov    rdi,rbx
  41dcec:	call   41d580 <__flatcc_error_report@@Base>
  41dcf1:	jmp    41dc7b <__flatcc_error_report@@Base+0x6fb>
  41dcf3:	nop    DWORD PTR [rax+rax*1+0x0]
  41dcf8:	lea    rdx,[rip+0x29004]        # 446d03 <fb_schema_table_missing@@Base+0x993>
  41dcff:	mov    rdi,rbx
  41dd02:	xor    r9d,r9d
  41dd05:	xor    r8d,r8d
  41dd08:	xor    ecx,ecx
  41dd0a:	call   41d580 <__flatcc_error_report@@Base>
  41dd0f:	mov    eax,0x1
  41dd14:	pop    rbx
  41dd15:	mov    WORD PTR [r12+0x10],ax
  41dd1b:	pop    rbp
  41dd1c:	pop    r12
  41dd1e:	ret    
  41dd1f:	nop
  41dd20:	push   r14
  41dd22:	push   r13
  41dd24:	mov    r13,rcx
  41dd27:	push   r12
  41dd29:	push   rbp
  41dd2a:	mov    rbp,rsi
  41dd2d:	push   rbx
  41dd2e:	mov    rbx,rdi
  41dd31:	sub    rsp,0x20
  41dd35:	mov    r12,QWORD PTR [rdi+0x48]
  41dd39:	mov    rax,QWORD PTR fs:0x28
  41dd42:	mov    QWORD PTR [rsp+0x18],rax
  41dd47:	xor    eax,eax
  41dd49:	mov    rax,QWORD PTR [r12+0x20]
  41dd4e:	cmp    rax,0x2d
  41dd52:	je     41de38 <__flatcc_error_report@@Base+0x8b8>
  41dd58:	cmp    rax,0xa
  41dd5c:	je     41deb0 <__flatcc_error_report@@Base+0x930>
  41dd62:	jle    41dda0 <__flatcc_error_report@@Base+0x820>
  41dd64:	cmp    rax,0xe
  41dd68:	je     41e010 <__flatcc_error_report@@Base+0xa90>
  41dd6e:	cmp    rax,0x13
  41dd72:	je     41de08 <__flatcc_error_report@@Base+0x888>
  41dd78:	cmp    rax,0xb
  41dd7c:	je     41df68 <__flatcc_error_report@@Base+0x9e8>
  41dd82:	xor    r9d,r9d
  41dd85:	xor    r8d,r8d
  41dd88:	xor    ecx,ecx
  41dd8a:	mov    rdx,r13
  41dd8d:	mov    rsi,r12
  41dd90:	mov    rdi,rbx
  41dd93:	call   41d580 <__flatcc_error_report@@Base>
  41dd98:	jmp    41dde0 <__flatcc_error_report@@Base+0x860>
  41dd9a:	nop    WORD PTR [rax+rax*1+0x0]
  41dda0:	cmp    rax,0xfffffffffffffc26
  41dda6:	je     41e080 <__flatcc_error_report@@Base+0xb00>
  41ddac:	cmp    rax,0x9
  41ddb0:	je     41e110 <__flatcc_error_report@@Base+0xb90>
  41ddb6:	xor    edx,edx
  41ddb8:	cmp    rax,0xfffffffffffffc24
  41ddbe:	jne    41dd82 <__flatcc_error_report@@Base+0x802>
  41ddc0:	mov    r9d,0x6
  41ddc6:	mov    BYTE PTR [rbp+0x0],0x1
  41ddca:	mov    WORD PTR [rbp+0x10],r9w
  41ddcf:	test   rdx,rdx
  41ddd2:	jne    41dfe0 <__flatcc_error_report@@Base+0xa60>
  41ddd8:	mov    rdi,rbx
  41dddb:	call   41d280 <__flatcc_fb_default_error_out@@Base+0x100>
  41dde0:	mov    rax,QWORD PTR [rsp+0x18]
  41dde5:	xor    rax,QWORD PTR fs:0x28
  41ddee:	jne    41e30c <__flatcc_error_report@@Base+0xd8c>
  41ddf4:	add    rsp,0x20
  41ddf8:	pop    rbx
  41ddf9:	pop    rbp
  41ddfa:	pop    r12
  41ddfc:	pop    r13
  41ddfe:	pop    r14
  41de00:	ret    
  41de01:	nop    DWORD PTR [rax+0x0]
  41de08:	mov    DWORD PTR [rsp+0xc],edx
  41de0c:	call   41d280 <__flatcc_fb_default_error_out@@Base+0x100>
  41de11:	mov    rsi,rbp
  41de14:	mov    rdi,rbx
  41de17:	call   41dbb0 <__flatcc_error_report@@Base+0x630>
  41de1c:	mov    edx,DWORD PTR [rsp+0xc]
  41de20:	and    edx,0x1
  41de23:	jne    41dde0 <__flatcc_error_report@@Base+0x860>
  41de25:	mov    edi,0x1
  41de2a:	mov    WORD PTR [rbp+0x10],di
  41de2e:	jmp    41dd82 <__flatcc_error_report@@Base+0x802>
  41de33:	nop    DWORD PTR [rax+rax*1+0x0]
  41de38:	mov    DWORD PTR [rsp+0xc],edx
  41de3c:	call   41d280 <__flatcc_fb_default_error_out@@Base+0x100>
  41de41:	mov    r14,QWORD PTR [rbx+0x48]
  41de45:	mov    rax,QWORD PTR [r14+0x20]
  41de49:	cmp    rax,0xa
  41de4d:	je     41e24b <__flatcc_error_report@@Base+0xccb>
  41de53:	mov    edx,DWORD PTR [rsp+0xc]
  41de57:	jg     41e1f0 <__flatcc_error_report@@Base+0xc70>
  41de5d:	cmp    rax,0xfffffffffffffc26
  41de63:	je     41e240 <__flatcc_error_report@@Base+0xcc0>
  41de69:	cmp    rax,0x9
  41de6d:	jne    41e20e <__flatcc_error_report@@Base+0xc8e>
  41de73:	mov    rsi,rbp
  41de76:	mov    rdi,rbx
  41de79:	call   41d740 <__flatcc_error_report@@Base+0x1c0>
  41de7e:	mov    ecx,0x1
  41de83:	lea    rdx,[rip+0x28ed4]        # 446d5e <fb_schema_table_missing@@Base+0x9ee>
  41de8a:	xor    r9d,r9d
  41de8d:	mov    WORD PTR [rbp+0x10],cx
  41de91:	xor    r8d,r8d
  41de94:	xor    ecx,ecx
  41de96:	mov    rsi,r14
  41de99:	mov    rdi,rbx
  41de9c:	call   41d580 <__flatcc_error_report@@Base>
  41dea1:	jmp    41dde0 <__flatcc_error_report@@Base+0x860>
  41dea6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41deb0:	xor    r13d,r13d
  41deb3:	movsxd rsi,DWORD PTR [r12+0x8]
  41deb8:	mov    r8,QWORD PTR [r12]
  41debc:	mov    eax,0x5
  41dec1:	mov    WORD PTR [rbp+0x10],ax
  41dec5:	add    rsi,r8
  41dec8:	cmp    r8,rsi
  41decb:	je     41e0c0 <__flatcc_error_report@@Base+0xb40>
  41ded1:	movzx  r9d,BYTE PTR [r8]
  41ded5:	xor    edi,edi
  41ded7:	cmp    r9b,0x2d
  41dedb:	sete   dil
  41dedf:	add    rdi,r8
  41dee2:	cmp    rsi,rdi
  41dee5:	je     41e0c0 <__flatcc_error_report@@Base+0xb40>
  41deeb:	movsx  rdx,BYTE PTR [rdi]
  41deef:	lea    eax,[rdx-0x30]
  41def2:	cmp    al,0x9
  41def4:	ja     41e0c0 <__flatcc_error_report@@Base+0xb40>
  41defa:	sub    rdx,0x30
  41defe:	mov    rcx,rdi
  41df01:	jmp    41df2f <__flatcc_error_report@@Base+0x9af>
  41df03:	nop    DWORD PTR [rax+rax*1+0x0]
  41df08:	movsx  rax,BYTE PTR [rcx]
  41df0c:	lea    r10d,[rax-0x30]
  41df10:	cmp    r10b,0x9
  41df14:	ja     41e0a0 <__flatcc_error_report@@Base+0xb20>
  41df1a:	lea    r10,[rdx+rdx*4]
  41df1e:	lea    rax,[rax+r10*2-0x30]
  41df23:	cmp    rax,rdx
  41df26:	jb     41e0c0 <__flatcc_error_report@@Base+0xb40>
  41df2c:	mov    rdx,rax
  41df2f:	add    rcx,0x1
  41df33:	cmp    rsi,rcx
  41df36:	jne    41df08 <__flatcc_error_report@@Base+0x988>
  41df38:	cmp    r9b,0x2d
  41df3c:	mov    QWORD PTR [rbp+0x0],rdx
  41df40:	je     41e0c0 <__flatcc_error_report@@Base+0xb40>
  41df46:	test   r13,r13
  41df49:	je     41ddd8 <__flatcc_error_report@@Base+0x858>
  41df4f:	mov    eax,0x4
  41df54:	neg    QWORD PTR [rbp+0x0]
  41df58:	mov    WORD PTR [rbp+0x10],ax
  41df5c:	jmp    41ddd8 <__flatcc_error_report@@Base+0x858>
  41df61:	nop    DWORD PTR [rax+0x0]
  41df68:	xor    r13d,r13d
  41df6b:	mov    rdi,QWORD PTR [r12]
  41df6f:	mov    r14d,0x3
  41df75:	lea    rsi,[rsp+0x10]
  41df7a:	mov    WORD PTR [rbp+0x10],r14w
  41df7f:	call   4050a0 <strtod@plt>
  41df84:	mov    rax,QWORD PTR [r12]
  41df88:	vmovsd QWORD PTR [rbp+0x0],xmm0
  41df8d:	mov    rdx,rax
  41df90:	add    rdx,QWORD PTR [r12+0x8]
  41df95:	cmp    QWORD PTR [rsp+0x10],rdx
  41df9a:	je     41e0f0 <__flatcc_error_report@@Base+0xb70>
  41dfa0:	mov    r11d,0x1
  41dfa6:	lea    rdx,[rip+0x28d9c]        # 446d49 <fb_schema_table_missing@@Base+0x9d9>
  41dfad:	xor    r9d,r9d
  41dfb0:	mov    WORD PTR [rbp+0x10],r11w
  41dfb5:	xor    r8d,r8d
  41dfb8:	xor    ecx,ecx
  41dfba:	mov    rsi,r12
  41dfbd:	mov    rdi,rbx
  41dfc0:	call   41d580 <__flatcc_error_report@@Base>
  41dfc5:	test   r13,r13
  41dfc8:	je     41ddd8 <__flatcc_error_report@@Base+0x858>
  41dfce:	cmp    WORD PTR [rbp+0x10],0x6
  41dfd3:	jne    41ddd8 <__flatcc_error_report@@Base+0x858>
  41dfd9:	nop    DWORD PTR [rax+0x0]
  41dfe0:	mov    edx,0x1
  41dfe5:	xor    r9d,r9d
  41dfe8:	xor    r8d,r8d
  41dfeb:	mov    WORD PTR [rbp+0x10],dx
  41dfef:	lea    rdx,[rip+0x285d2]        # 4465c8 <fb_schema_table_missing@@Base+0x258>
  41dff6:	xor    ecx,ecx
  41dff8:	mov    rsi,r12
  41dffb:	mov    rdi,rbx
  41dffe:	call   41d580 <__flatcc_error_report@@Base>
  41e003:	jmp    41ddd8 <__flatcc_error_report@@Base+0x858>
  41e008:	nop    DWORD PTR [rax+rax*1+0x0]
  41e010:	xor    r13d,r13d
  41e013:	mov    eax,0x5
  41e018:	movsxd rdx,DWORD PTR [r12+0x8]
  41e01d:	mov    WORD PTR [rbp+0x10],ax
  41e021:	mov    rax,QWORD PTR [r12]
  41e025:	lea    r8,[rax+rdx*1]
  41e029:	cmp    rax,r8
  41e02c:	je     41e04f <__flatcc_error_report@@Base+0xacf>
  41e02e:	movzx  edi,BYTE PTR [rax]
  41e031:	xor    ecx,ecx
  41e033:	cmp    dil,0x2d
  41e037:	sete   cl
  41e03a:	sub    rdx,rcx
  41e03d:	add    rax,rcx
  41e040:	cmp    rdx,0x1
  41e044:	jle    41e04f <__flatcc_error_report@@Base+0xacf>
  41e046:	cmp    BYTE PTR [rax],0x30
  41e049:	je     41e158 <__flatcc_error_report@@Base+0xbd8>
  41e04f:	mov    eax,0x1
  41e054:	lea    rdx,[rip+0x28cbc]        # 446d17 <fb_schema_table_missing@@Base+0x9a7>
  41e05b:	xor    r9d,r9d
  41e05e:	mov    WORD PTR [rbp+0x10],ax
  41e062:	xor    r8d,r8d
  41e065:	xor    ecx,ecx
  41e067:	mov    rsi,r12
  41e06a:	mov    rdi,rbx
  41e06d:	call   41d580 <__flatcc_error_report@@Base>
  41e072:	jmp    41df46 <__flatcc_error_report@@Base+0x9c6>
  41e077:	nop    WORD PTR [rax+rax*1+0x0]
  41e080:	xor    edx,edx
  41e082:	mov    r8d,0x6
  41e088:	mov    BYTE PTR [rbp+0x0],0x0
  41e08c:	mov    WORD PTR [rbp+0x10],r8w
  41e091:	jmp    41ddcf <__flatcc_error_report@@Base+0x84f>
  41e096:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41e0a0:	cmp    r8,rcx
  41e0a3:	je     41e0c0 <__flatcc_error_report@@Base+0xb40>
  41e0a5:	cmp    rdi,rcx
  41e0a8:	je     41e0c0 <__flatcc_error_report@@Base+0xb40>
  41e0aa:	cmp    al,0x50
  41e0ac:	je     41e0c0 <__flatcc_error_report@@Base+0xb40>
  41e0ae:	jg     41e1d8 <__flatcc_error_report@@Base+0xc58>
  41e0b4:	cmp    al,0x2e
  41e0b6:	je     41e0c0 <__flatcc_error_report@@Base+0xb40>
  41e0b8:	cmp    al,0x45
  41e0ba:	jne    41df38 <__flatcc_error_report@@Base+0x9b8>
  41e0c0:	mov    eax,0x1
  41e0c5:	lea    rdx,[rip+0x28c66]        # 446d32 <fb_schema_table_missing@@Base+0x9c2>
  41e0cc:	xor    r9d,r9d
  41e0cf:	mov    WORD PTR [rbp+0x10],ax
  41e0d3:	xor    r8d,r8d
  41e0d6:	xor    ecx,ecx
  41e0d8:	mov    rsi,r12
  41e0db:	mov    rdi,rbx
  41e0de:	call   41d580 <__flatcc_error_report@@Base>
  41e0e3:	jmp    41df46 <__flatcc_error_report@@Base+0x9c6>
  41e0e8:	nop    DWORD PTR [rax+rax*1+0x0]
  41e0f0:	cmp    BYTE PTR [rax],0x2e
  41e0f3:	je     41e129 <__flatcc_error_report@@Base+0xba9>
  41e0f5:	test   r13,r13
  41e0f8:	je     41ddd8 <__flatcc_error_report@@Base+0x858>
  41e0fe:	vxorpd xmm0,xmm0,XMMWORD PTR [rip+0x2923a]        # 447340 <fb_schema_table_missing@@Base+0xfd0>
  41e106:	vmovsd QWORD PTR [rbp+0x0],xmm0
  41e10b:	jmp    41dfce <__flatcc_error_report@@Base+0xa4e>
  41e110:	mov    rsi,rbp
  41e113:	mov    rdi,rbx
  41e116:	call   41d740 <__flatcc_error_report@@Base+0x1c0>
  41e11b:	mov    eax,0xd
  41e120:	mov    WORD PTR [rbp+0x10],ax
  41e124:	jmp    41dde0 <__flatcc_error_report@@Base+0x860>
  41e129:	mov    r10d,0x1
  41e12f:	lea    rdx,[rip+0x28442]        # 446578 <fb_schema_table_missing@@Base+0x208>
  41e136:	xor    r9d,r9d
  41e139:	mov    WORD PTR [rbp+0x10],r10w
  41e13e:	xor    r8d,r8d
  41e141:	xor    ecx,ecx
  41e143:	mov    rsi,r12
  41e146:	mov    rdi,rbx
  41e149:	call   41d580 <__flatcc_error_report@@Base>
  41e14e:	jmp    41dfc5 <__flatcc_error_report@@Base+0xa45>
  41e153:	nop    DWORD PTR [rax+rax*1+0x0]
  41e158:	movzx  edx,BYTE PTR [rax+0x1]
  41e15c:	or     edx,0x20
  41e15f:	cmp    dl,0x78
  41e162:	jne    41e04f <__flatcc_error_report@@Base+0xacf>
  41e168:	lea    r10,[rax+0x2]
  41e16c:	mov    rdx,r8
  41e16f:	add    rax,0x12
  41e173:	sub    rdx,r10
  41e176:	cmp    rdx,0x11
  41e17a:	cmovl  rax,r8
  41e17e:	cmp    r10,rax
  41e181:	je     41e04f <__flatcc_error_report@@Base+0xacf>
  41e187:	mov    rcx,r10
  41e18a:	xor    esi,esi
  41e18c:	jmp    41e1a2 <__flatcc_error_report@@Base+0xc22>
  41e18e:	xchg   ax,ax
  41e190:	shl    rsi,0x4
  41e194:	lea    rsi,[rsi+rdx*1-0x30]
  41e199:	add    rcx,0x1
  41e19d:	cmp    rcx,rax
  41e1a0:	je     41e221 <__flatcc_error_report@@Base+0xca1>
  41e1a2:	movzx  edx,BYTE PTR [rcx]
  41e1a5:	lea    r9d,[rdx-0x30]
  41e1a9:	cmp    r9b,0x9
  41e1ad:	jbe    41e190 <__flatcc_error_report@@Base+0xc10>
  41e1af:	mov    r9d,edx
  41e1b2:	or     r9d,0x20
  41e1b6:	lea    r11d,[r9-0x61]
  41e1ba:	cmp    r11b,0x5
  41e1be:	ja     41e2b8 <__flatcc_error_report@@Base+0xd38>
  41e1c4:	shl    rsi,0x4
  41e1c8:	movzx  r9d,r9b
  41e1cc:	lea    rsi,[rsi+r9*1-0x57]
  41e1d1:	jmp    41e199 <__flatcc_error_report@@Base+0xc19>
  41e1d3:	nop    DWORD PTR [rax+rax*1+0x0]
  41e1d8:	cmp    al,0x65
  41e1da:	je     41e0c0 <__flatcc_error_report@@Base+0xb40>
  41e1e0:	cmp    al,0x70
  41e1e2:	jne    41df38 <__flatcc_error_report@@Base+0x9b8>
  41e1e8:	jmp    41e0c0 <__flatcc_error_report@@Base+0xb40>
  41e1ed:	nop    DWORD PTR [rax]
  41e1f0:	cmp    rax,0xe
  41e1f4:	je     41e2ad <__flatcc_error_report@@Base+0xd2d>
  41e1fa:	cmp    rax,0x13
  41e1fe:	je     41e261 <__flatcc_error_report@@Base+0xce1>
  41e200:	cmp    rax,0xb
  41e204:	je     41e256 <__flatcc_error_report@@Base+0xcd6>
  41e206:	mov    r12,r14
  41e209:	jmp    41dd82 <__flatcc_error_report@@Base+0x802>
  41e20e:	cmp    rax,0xfffffffffffffc24
  41e214:	jne    41e206 <__flatcc_error_report@@Base+0xc86>
  41e216:	mov    rdx,r12
  41e219:	mov    r12,r14
  41e21c:	jmp    41ddc0 <__flatcc_error_report@@Base+0x840>
  41e221:	cmp    r8,rcx
  41e224:	jne    41e2ef <__flatcc_error_report@@Base+0xd6f>
  41e22a:	cmp    dil,0x2d
  41e22e:	mov    QWORD PTR [rbp+0x0],rsi
  41e232:	jne    41df46 <__flatcc_error_report@@Base+0x9c6>
  41e238:	jmp    41e04f <__flatcc_error_report@@Base+0xacf>
  41e23d:	nop    DWORD PTR [rax]
  41e240:	mov    rdx,r12
  41e243:	mov    r12,r14
  41e246:	jmp    41e082 <__flatcc_error_report@@Base+0xb02>
  41e24b:	mov    r13,r12
  41e24e:	mov    r12,r14
  41e251:	jmp    41deb3 <__flatcc_error_report@@Base+0x933>
  41e256:	mov    r13,r12
  41e259:	mov    r12,r14
  41e25c:	jmp    41df6b <__flatcc_error_report@@Base+0x9eb>
  41e261:	mov    rdi,rbx
  41e264:	mov    DWORD PTR [rsp+0xc],edx
  41e268:	call   41d280 <__flatcc_fb_default_error_out@@Base+0x100>
  41e26d:	mov    rsi,rbp
  41e270:	mov    rdi,rbx
  41e273:	call   41dbb0 <__flatcc_error_report@@Base+0x630>
  41e278:	mov    edx,DWORD PTR [rsp+0xc]
  41e27c:	and    edx,0x1
  41e27f:	je     41e311 <__flatcc_error_report@@Base+0xd91>
  41e285:	mov    esi,0x1
  41e28a:	lea    rdx,[rip+0x2830f]        # 4465a0 <fb_schema_table_missing@@Base+0x230>
  41e291:	xor    r9d,r9d
  41e294:	mov    WORD PTR [rbp+0x10],si
  41e298:	xor    r8d,r8d
  41e29b:	xor    ecx,ecx
  41e29d:	mov    rsi,r14
  41e2a0:	mov    rdi,rbx
  41e2a3:	call   41d580 <__flatcc_error_report@@Base>
  41e2a8:	jmp    41dde0 <__flatcc_error_report@@Base+0x860>
  41e2ad:	mov    r13,r12
  41e2b0:	mov    r12,r14
  41e2b3:	jmp    41e013 <__flatcc_error_report@@Base+0xa93>
  41e2b8:	cmp    r10,rcx
  41e2bb:	je     41e04f <__flatcc_error_report@@Base+0xacf>
  41e2c1:	cmp    r8,rcx
  41e2c4:	je     41e22a <__flatcc_error_report@@Base+0xcaa>
  41e2ca:	cmp    rax,rcx
  41e2cd:	je     41e2f2 <__flatcc_error_report@@Base+0xd72>
  41e2cf:	cmp    dl,0x50
  41e2d2:	je     41e04f <__flatcc_error_report@@Base+0xacf>
  41e2d8:	cmp    dl,0x70
  41e2db:	je     41e04f <__flatcc_error_report@@Base+0xacf>
  41e2e1:	cmp    dl,0x2e
  41e2e4:	jne    41e22a <__flatcc_error_report@@Base+0xcaa>
  41e2ea:	jmp    41e04f <__flatcc_error_report@@Base+0xacf>
  41e2ef:	movzx  edx,BYTE PTR [rcx]
  41e2f2:	lea    eax,[rdx-0x30]
  41e2f5:	cmp    al,0x9
  41e2f7:	jbe    41e04f <__flatcc_error_report@@Base+0xacf>
  41e2fd:	or     edx,0x20
  41e300:	lea    eax,[rdx-0x61]
  41e303:	cmp    al,0x5
  41e305:	ja     41e2cf <__flatcc_error_report@@Base+0xd4f>
  41e307:	jmp    41e04f <__flatcc_error_report@@Base+0xacf>
  41e30c:	call   4050d0 <__stack_chk_fail@plt>
  41e311:	mov    r12,r14
  41e314:	jmp    41de25 <__flatcc_error_report@@Base+0x8a5>
  41e319:	nop    DWORD PTR [rax+0x0]
  41e320:	push   r15
  41e322:	push   r14
  41e324:	push   r13
  41e326:	push   r12
  41e328:	push   rbp
  41e329:	push   rbx
  41e32a:	xor    ebp,ebp
  41e32c:	sub    rsp,0x8
  41e330:	mov    r12,QWORD PTR [rdi+0x48]
  41e334:	cmp    QWORD PTR [r12+0x20],0x28
  41e33a:	je     41e350 <__flatcc_error_report@@Base+0xdd0>
  41e33c:	add    rsp,0x8
  41e340:	mov    rax,rbp
  41e343:	pop    rbx
  41e344:	pop    rbp
  41e345:	pop    r12
  41e347:	pop    r13
  41e349:	pop    r14
  41e34b:	pop    r15
  41e34d:	ret    
  41e34e:	xchg   ax,ax
  41e350:	mov    rbx,rdi
  41e353:	call   41d280 <__flatcc_fb_default_error_out@@Base+0x100>
  41e358:	mov    r14,QWORD PTR [rbx+0x48]
  41e35c:	cmp    QWORD PTR [r14+0x20],0x9
  41e361:	je     41e380 <__flatcc_error_report@@Base+0xe00>
  41e363:	lea    rdx,[rip+0x282d6]        # 446640 <fb_schema_table_missing@@Base+0x2d0>
  41e36a:	mov    rcx,r12
  41e36d:	mov    esi,0x29
  41e372:	mov    rdi,rbx
  41e375:	call   41d880 <__flatcc_error_report@@Base+0x300>
  41e37a:	jmp    41e33c <__flatcc_error_report@@Base+0xdbc>
  41e37c:	nop    DWORD PTR [rax+0x0]
  41e380:	mov    rdi,rbx
  41e383:	xor    r15d,r15d
  41e386:	lea    r13,[rip+0x28263]        # 4465f0 <fb_schema_table_missing@@Base+0x280>
  41e38d:	call   41d280 <__flatcc_fb_default_error_out@@Base+0x100>
  41e392:	mov    rbp,QWORD PTR [rbx+0x60]
  41e396:	lea    rax,[rbp+0x30]
  41e39a:	cmp    rax,QWORD PTR [rbx+0x50]
  41e39e:	ja     41e417 <__flatcc_error_report@@Base+0xe97>
  41e3a0:	mov    QWORD PTR [rbx+0x60],rax
  41e3a4:	mov    rax,QWORD PTR [rbx+0x48]
  41e3a8:	mov    QWORD PTR [rbp+0x0],r15
  41e3ac:	mov    QWORD PTR [rbp+0x8],r14
  41e3b0:	cmp    QWORD PTR [rax+0x20],0x3a
  41e3b5:	jne    41e3d3 <__flatcc_error_report@@Base+0xe53>
  41e3b7:	mov    rdi,rbx
  41e3ba:	call   41d280 <__flatcc_fb_default_error_out@@Base+0x100>
  41e3bf:	lea    rsi,[rbp+0x10]
  41e3c3:	mov    rcx,r13
  41e3c6:	mov    edx,0x1
  41e3cb:	mov    rdi,rbx
  41e3ce:	call   41dd20 <__flatcc_error_report@@Base+0x7a0>
  41e3d3:	cmp    DWORD PTR [rbx+0xd0],0x9
  41e3da:	jg     41e33c <__flatcc_error_report@@Base+0xdbc>
  41e3e0:	mov    rax,QWORD PTR [rbx+0x48]
  41e3e4:	cmp    QWORD PTR [rax+0x20],0x2c
  41e3e9:	jne    41e46a <__flatcc_error_report@@Base+0xeea>
  41e3eb:	mov    rdi,rbx
  41e3ee:	call   41d280 <__flatcc_fb_default_error_out@@Base+0x100>
  41e3f3:	mov    r14,QWORD PTR [rbx+0x48]
  41e3f7:	cmp    QWORD PTR [r14+0x20],0x9
  41e3fc:	jne    41e450 <__flatcc_error_report@@Base+0xed0>
  41e3fe:	mov    rdi,rbx
  41e401:	mov    r15,rbp
  41e404:	call   41d280 <__flatcc_fb_default_error_out@@Base+0x100>
  41e409:	mov    rbp,QWORD PTR [rbx+0x60]
  41e40d:	lea    rax,[rbp+0x30]
  41e411:	cmp    rax,QWORD PTR [rbx+0x50]
  41e415:	jbe    41e3a0 <__flatcc_error_report@@Base+0xe20>
  41e417:	mov    esi,0x1
  41e41c:	mov    edi,0x10000
  41e421:	call   405140 <calloc@plt>
  41e426:	test   rax,rax
  41e429:	je     41e4a0 <__flatcc_error_report@@Base+0xf20>
  41e42b:	mov    rdx,QWORD PTR [rbx+0x58]
  41e42f:	lea    rbp,[rax+0x10]
  41e433:	mov    QWORD PTR [rbx+0x58],rax
  41e437:	mov    QWORD PTR [rax],rdx
  41e43a:	lea    rdx,[rax+0x10000]
  41e441:	add    rax,0x40
  41e445:	mov    QWORD PTR [rbx+0x50],rdx
  41e449:	jmp    41e3a0 <__flatcc_error_report@@Base+0xe20>
  41e44e:	xchg   ax,ax
  41e450:	lea    rdx,[rip+0x281b9]        # 446610 <fb_schema_table_missing@@Base+0x2a0>
  41e457:	xor    r9d,r9d
  41e45a:	xor    r8d,r8d
  41e45d:	xor    ecx,ecx
  41e45f:	mov    rsi,r14
  41e462:	mov    rdi,rbx
  41e465:	call   41d580 <__flatcc_error_report@@Base>
  41e46a:	lea    rdx,[rip+0x281cf]        # 446640 <fb_schema_table_missing@@Base+0x2d0>
  41e471:	mov    rcx,r12
  41e474:	mov    esi,0x29
  41e479:	mov    rdi,rbx
  41e47c:	call   41d880 <__flatcc_error_report@@Base+0x300>
  41e481:	xor    edx,edx
  41e483:	jmp    41e48b <__flatcc_error_report@@Base+0xf0b>
  41e485:	nop    DWORD PTR [rax]
  41e488:	mov    rbp,rax
  41e48b:	mov    rax,QWORD PTR [rbp+0x0]
  41e48f:	mov    QWORD PTR [rbp+0x0],rdx
  41e493:	mov    rdx,rbp
  41e496:	test   rax,rax
  41e499:	jne    41e488 <__flatcc_error_report@@Base+0xf08>
  41e49b:	jmp    41e33c <__flatcc_error_report@@Base+0xdbc>
  41e4a0:	call   40527e <__sprintf_chk@plt+0x5e>
  41e4a5:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  41e4b0:	push   r15
  41e4b2:	push   r14
  41e4b4:	push   r13
  41e4b6:	push   r12
  41e4b8:	push   rbp
  41e4b9:	push   rbx
  41e4ba:	mov    rbx,rdi
  41e4bd:	sub    rsp,0x8
  41e4c1:	mov    r13,QWORD PTR [rdi+0x48]
  41e4c5:	cmp    QWORD PTR [r13+0x20],0x9
  41e4ca:	jne    41e8c8 <__flatcc_error_report@@Base+0x1348>
  41e4d0:	mov    rbp,rsi
  41e4d3:	mov    r12,rdx
  41e4d6:	call   41d280 <__flatcc_fb_default_error_out@@Base+0x100>
  41e4db:	mov    QWORD PTR [rbp+0x8],r13
  41e4df:	mov    rdi,rbx
  41e4e2:	call   41e320 <__flatcc_error_report@@Base+0xda0>
  41e4e7:	mov    rsi,QWORD PTR [rbx+0x48]
  41e4eb:	mov    QWORD PTR [rbp+0x38],rax
  41e4ef:	cmp    QWORD PTR [rsi+0x20],0x7b
  41e4f4:	jne    41e900 <__flatcc_error_report@@Base+0x1380>
  41e4fa:	mov    rdi,rbx
  41e4fd:	call   41d280 <__flatcc_fb_default_error_out@@Base+0x100>
  41e502:	nop    WORD PTR [rax+rax*1+0x0]
  41e508:	mov    r14,QWORD PTR [rbx+0x48]
  41e50c:	mov    r13,QWORD PTR [r14+0x20]
  41e510:	cmp    r13,0x7d
  41e514:	je     41e86f <__flatcc_error_report@@Base+0x12ef>
  41e51a:	mov    r15,QWORD PTR [rbx+0x60]
  41e51e:	cmp    r12,0xfffffffffffffc39
  41e525:	lea    rax,[r15+0xb0]
  41e52c:	je     41e678 <__flatcc_error_report@@Base+0x10f8>
  41e532:	cmp    rax,QWORD PTR [rbx+0x50]
  41e536:	ja     41e638 <__flatcc_error_report@@Base+0x10b8>
  41e53c:	mov    QWORD PTR [rbx+0x60],rax
  41e540:	mov    rax,QWORD PTR [rbp+0x28]
  41e544:	mov    QWORD PTR [r15],rax
  41e547:	mov    eax,0x5
  41e54c:	mov    WORD PTR [r15+0x10],ax
  41e551:	mov    QWORD PTR [rbp+0x28],r15
  41e555:	mov    rax,QWORD PTR [rbx+0x40]
  41e559:	test   rax,rax
  41e55c:	je     41e579 <__flatcc_error_report@@Base+0xff9>
  41e55e:	xor    ecx,ecx
  41e560:	jmp    41e56b <__flatcc_error_report@@Base+0xfeb>
  41e562:	nop    WORD PTR [rax+rax*1+0x0]
  41e568:	mov    rax,rdx
  41e56b:	mov    rdx,QWORD PTR [rax]
  41e56e:	mov    QWORD PTR [rax],rcx
  41e571:	mov    rcx,rax
  41e574:	test   rdx,rdx
  41e577:	jne    41e568 <__flatcc_error_report@@Base+0xfe8>
  41e579:	cmp    r13,0x9
  41e57d:	mov    QWORD PTR [r15+0x68],rax
  41e581:	mov    QWORD PTR [rbx+0x40],0x0
  41e589:	jne    41e780 <__flatcc_error_report@@Base+0x1200>
  41e58f:	mov    rdi,rbx
  41e592:	call   41d280 <__flatcc_fb_default_error_out@@Base+0x100>
  41e597:	mov    rsi,QWORD PTR [rbx+0x48]
  41e59b:	mov    QWORD PTR [r15+0x8],r14
  41e59f:	cmp    QWORD PTR [rsi+0x20],0x3a
  41e5a4:	jne    41e7b0 <__flatcc_error_report@@Base+0x1230>
  41e5aa:	mov    rdi,rbx
  41e5ad:	call   41d280 <__flatcc_fb_default_error_out@@Base+0x100>
  41e5b2:	lea    rsi,[r15+0x18]
  41e5b6:	mov    rdi,rbx
  41e5b9:	call   41d8c0 <__flatcc_error_report@@Base+0x340>
  41e5be:	mov    rax,QWORD PTR [rbx+0x48]
  41e5c2:	cmp    QWORD PTR [rax+0x20],0x3d
  41e5c7:	jne    41e5e9 <__flatcc_error_report@@Base+0x1069>
  41e5c9:	mov    rdi,rbx
  41e5cc:	call   41d280 <__flatcc_fb_default_error_out@@Base+0x100>
  41e5d1:	lea    rsi,[r15+0x48]
  41e5d5:	lea    rcx,[rip+0x2818c]        # 446768 <fb_schema_table_missing@@Base+0x3f8>
  41e5dc:	mov    edx,0x2
  41e5e1:	mov    rdi,rbx
  41e5e4:	call   41dd20 <__flatcc_error_report@@Base+0x7a0>
  41e5e9:	mov    rdi,rbx
  41e5ec:	call   41e320 <__flatcc_error_report@@Base+0xda0>
  41e5f1:	lea    rdx,[rip+0x28198]        # 446790 <fb_schema_table_missing@@Base+0x420>
  41e5f8:	mov    QWORD PTR [r15+0x60],rax
  41e5fc:	xor    ecx,ecx
  41e5fe:	mov    esi,0x3b
  41e603:	mov    rdi,rbx
  41e606:	call   41d880 <__flatcc_error_report@@Base+0x300>
  41e60b:	cmp    DWORD PTR [rbx+0xd0],0x9
  41e612:	jle    41e508 <__flatcc_error_report@@Base+0xf88>
  41e618:	add    rsp,0x8
  41e61c:	mov    rdi,rbx
  41e61f:	mov    esi,0x7d
  41e624:	pop    rbx
  41e625:	pop    rbp
  41e626:	pop    r12
  41e628:	pop    r13
  41e62a:	pop    r14
  41e62c:	pop    r15
  41e62e:	jmp    41d3d0 <__flatcc_fb_default_error_out@@Base+0x250>
  41e633:	nop    DWORD PTR [rax+rax*1+0x0]
  41e638:	mov    esi,0x1
  41e63d:	mov    edi,0x10000
  41e642:	call   405140 <calloc@plt>
  41e647:	test   rax,rax
  41e64a:	je     41e91c <__flatcc_error_report@@Base+0x139c>
  41e650:	mov    rdx,QWORD PTR [rbx+0x58]
  41e654:	lea    r15,[rax+0x10]
  41e658:	mov    QWORD PTR [rbx+0x58],rax
  41e65c:	mov    QWORD PTR [rax],rdx
  41e65f:	lea    rdx,[rax+0x10000]
  41e666:	add    rax,0xc0
  41e66c:	mov    QWORD PTR [rbx+0x50],rdx
  41e670:	jmp    41e53c <__flatcc_error_report@@Base+0xfbc>
  41e675:	nop    DWORD PTR [rax]
  41e678:	cmp    rax,QWORD PTR [rbx+0x50]
  41e67c:	ja     41e7d0 <__flatcc_error_report@@Base+0x1250>
  41e682:	mov    QWORD PTR [rbx+0x60],rax
  41e686:	mov    rax,QWORD PTR [rbp+0x28]
  41e68a:	mov    edx,0x5
  41e68f:	mov    WORD PTR [r15+0x10],dx
  41e694:	mov    QWORD PTR [r15],rax
  41e697:	mov    QWORD PTR [rbp+0x28],r15
  41e69b:	mov    rax,QWORD PTR [rbx+0x40]
  41e69f:	test   rax,rax
  41e6a2:	je     41e6c1 <__flatcc_error_report@@Base+0x1141>
  41e6a4:	xor    ecx,ecx
  41e6a6:	jmp    41e6b3 <__flatcc_error_report@@Base+0x1133>
  41e6a8:	nop    DWORD PTR [rax+rax*1+0x0]
  41e6b0:	mov    rax,rdx
  41e6b3:	mov    rdx,QWORD PTR [rax]
  41e6b6:	mov    QWORD PTR [rax],rcx
  41e6b9:	mov    rcx,rax
  41e6bc:	test   rdx,rdx
  41e6bf:	jne    41e6b0 <__flatcc_error_report@@Base+0x1130>
  41e6c1:	cmp    r13,0x9
  41e6c5:	mov    QWORD PTR [r15+0x68],rax
  41e6c9:	mov    QWORD PTR [rbx+0x40],0x0
  41e6d1:	jne    41e834 <__flatcc_error_report@@Base+0x12b4>
  41e6d7:	mov    rdi,rbx
  41e6da:	call   41d280 <__flatcc_fb_default_error_out@@Base+0x100>
  41e6df:	mov    rsi,QWORD PTR [rbx+0x48]
  41e6e3:	mov    QWORD PTR [r15+0x8],r14
  41e6e7:	cmp    QWORD PTR [rsi+0x20],0x28
  41e6ec:	jne    41e853 <__flatcc_error_report@@Base+0x12d3>
  41e6f2:	mov    rdi,rbx
  41e6f5:	call   41d280 <__flatcc_fb_default_error_out@@Base+0x100>
  41e6fa:	lea    rsi,[r15+0x30]
  41e6fe:	mov    rdi,rbx
  41e701:	call   41d8c0 <__flatcc_error_report@@Base+0x340>
  41e706:	mov    rsi,QWORD PTR [rbx+0x48]
  41e70a:	cmp    QWORD PTR [rsi+0x20],0x29
  41e70f:	jne    41e8ac <__flatcc_error_report@@Base+0x132c>
  41e715:	mov    rdi,rbx
  41e718:	call   41d280 <__flatcc_fb_default_error_out@@Base+0x100>
  41e71d:	mov    rsi,QWORD PTR [rbx+0x48]
  41e721:	cmp    QWORD PTR [rsi+0x20],0x3a
  41e726:	jne    41e8e4 <__flatcc_error_report@@Base+0x1364>
  41e72c:	mov    rdi,rbx
  41e72f:	call   41d280 <__flatcc_fb_default_error_out@@Base+0x100>
  41e734:	lea    rsi,[r15+0x18]
  41e738:	mov    rdi,rbx
  41e73b:	call   41d8c0 <__flatcc_error_report@@Base+0x340>
  41e740:	mov    r14,QWORD PTR [rbx+0x48]
  41e744:	cmp    QWORD PTR [r14+0x20],0x3d
  41e749:	je     41e80d <__flatcc_error_report@@Base+0x128d>
  41e74f:	mov    rdi,rbx
  41e752:	call   41e320 <__flatcc_error_report@@Base+0xda0>
  41e757:	lea    rdx,[rip+0x2805a]        # 4467b8 <fb_schema_table_missing@@Base+0x448>
  41e75e:	mov    QWORD PTR [r15+0x60],rax
  41e762:	xor    ecx,ecx
  41e764:	mov    esi,0x3b
  41e769:	mov    rdi,rbx
  41e76c:	call   41d880 <__flatcc_error_report@@Base+0x300>
  41e771:	jmp    41e60b <__flatcc_error_report@@Base+0x108b>
  41e776:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41e780:	lea    rdx,[rip+0x28629]        # 446db0 <fb_schema_table_missing@@Base+0xa40>
  41e787:	xor    r9d,r9d
  41e78a:	xor    r8d,r8d
  41e78d:	xor    ecx,ecx
  41e78f:	mov    rsi,r14
  41e792:	mov    rdi,rbx
  41e795:	call   41d580 <__flatcc_error_report@@Base>
  41e79a:	mov    rdi,rbx
  41e79d:	call   41d370 <__flatcc_fb_default_error_out@@Base+0x1f0>
  41e7a2:	jmp    41e60b <__flatcc_error_report@@Base+0x108b>
  41e7a7:	nop    WORD PTR [rax+rax*1+0x0]
  41e7b0:	lea    rdx,[rip+0x27f81]        # 446738 <fb_schema_table_missing@@Base+0x3c8>
  41e7b7:	xor    r9d,r9d
  41e7ba:	xor    r8d,r8d
  41e7bd:	xor    ecx,ecx
  41e7bf:	mov    rdi,rbx
  41e7c2:	call   41d580 <__flatcc_error_report@@Base>
  41e7c7:	jmp    41e79a <__flatcc_error_report@@Base+0x121a>
  41e7c9:	nop    DWORD PTR [rax+0x0]
  41e7d0:	mov    esi,0x1
  41e7d5:	mov    edi,0x10000
  41e7da:	call   405140 <calloc@plt>
  41e7df:	test   rax,rax
  41e7e2:	je     41e91c <__flatcc_error_report@@Base+0x139c>
  41e7e8:	mov    rdx,QWORD PTR [rbx+0x58]
  41e7ec:	lea    r15,[rax+0x10]
  41e7f0:	mov    QWORD PTR [rbx+0x58],rax
  41e7f4:	mov    QWORD PTR [rax],rdx
  41e7f7:	lea    rdx,[rax+0x10000]
  41e7fe:	add    rax,0xc0
  41e804:	mov    QWORD PTR [rbx+0x50],rdx
  41e808:	jmp    41e682 <__flatcc_error_report@@Base+0x1102>
  41e80d:	mov    rdi,rbx
  41e810:	call   41d280 <__flatcc_fb_default_error_out@@Base+0x100>
  41e815:	lea    rdx,[rip+0x27ef4]        # 446710 <fb_schema_table_missing@@Base+0x3a0>
  41e81c:	xor    r9d,r9d
  41e81f:	xor    r8d,r8d
  41e822:	xor    ecx,ecx
  41e824:	mov    rsi,r14
  41e827:	mov    rdi,rbx
  41e82a:	call   41d580 <__flatcc_error_report@@Base>
  41e82f:	jmp    41e79a <__flatcc_error_report@@Base+0x121a>
  41e834:	lea    rdx,[rip+0x2855a]        # 446d95 <fb_schema_table_missing@@Base+0xa25>
  41e83b:	xor    r9d,r9d
  41e83e:	xor    r8d,r8d
  41e841:	xor    ecx,ecx
  41e843:	mov    rsi,r14
  41e846:	mov    rdi,rbx
  41e849:	call   41d580 <__flatcc_error_report@@Base>
  41e84e:	jmp    41e79a <__flatcc_error_report@@Base+0x121a>
  41e853:	lea    rdx,[rip+0x27e2e]        # 446688 <fb_schema_table_missing@@Base+0x318>
  41e85a:	xor    r9d,r9d
  41e85d:	xor    r8d,r8d
  41e860:	xor    ecx,ecx
  41e862:	mov    rdi,rbx
  41e865:	call   41d580 <__flatcc_error_report@@Base>
  41e86a:	jmp    41e79a <__flatcc_error_report@@Base+0x121a>
  41e86f:	mov    rdi,rbx
  41e872:	call   41d280 <__flatcc_fb_default_error_out@@Base+0x100>
  41e877:	mov    rax,QWORD PTR [rbp+0x28]
  41e87b:	test   rax,rax
  41e87e:	je     41e899 <__flatcc_error_report@@Base+0x1319>
  41e880:	xor    ecx,ecx
  41e882:	jmp    41e88b <__flatcc_error_report@@Base+0x130b>
  41e884:	nop    DWORD PTR [rax+0x0]
  41e888:	mov    rax,rdx
  41e88b:	mov    rdx,QWORD PTR [rax]
  41e88e:	mov    QWORD PTR [rax],rcx
  41e891:	mov    rcx,rax
  41e894:	test   rdx,rdx
  41e897:	jne    41e888 <__flatcc_error_report@@Base+0x1308>
  41e899:	mov    QWORD PTR [rbp+0x28],rax
  41e89d:	add    rsp,0x8
  41e8a1:	pop    rbx
  41e8a2:	pop    rbp
  41e8a3:	pop    r12
  41e8a5:	pop    r13
  41e8a7:	pop    r14
  41e8a9:	pop    r15
  41e8ab:	ret    
  41e8ac:	lea    rdx,[rip+0x27dfd]        # 4466b0 <fb_schema_table_missing@@Base+0x340>
  41e8b3:	xor    r9d,r9d
  41e8b6:	xor    r8d,r8d
  41e8b9:	xor    ecx,ecx
  41e8bb:	mov    rdi,rbx
  41e8be:	call   41d580 <__flatcc_error_report@@Base>
  41e8c3:	jmp    41e79a <__flatcc_error_report@@Base+0x121a>
  41e8c8:	lea    rdx,[rip+0x27d91]        # 446660 <fb_schema_table_missing@@Base+0x2f0>
  41e8cf:	xor    r9d,r9d
  41e8d2:	xor    r8d,r8d
  41e8d5:	xor    ecx,ecx
  41e8d7:	mov    rsi,r13
  41e8da:	call   41d580 <__flatcc_error_report@@Base>
  41e8df:	jmp    41e618 <__flatcc_error_report@@Base+0x1098>
  41e8e4:	lea    rdx,[rip+0x27ded]        # 4466d8 <fb_schema_table_missing@@Base+0x368>
  41e8eb:	xor    r9d,r9d
  41e8ee:	xor    r8d,r8d
  41e8f1:	xor    ecx,ecx
  41e8f3:	mov    rdi,rbx
  41e8f6:	call   41d580 <__flatcc_error_report@@Base>
  41e8fb:	jmp    41e79a <__flatcc_error_report@@Base+0x121a>
  41e900:	lea    rdx,[rip+0x28475]        # 446d7c <fb_schema_table_missing@@Base+0xa0c>
  41e907:	xor    r9d,r9d
  41e90a:	xor    r8d,r8d
  41e90d:	xor    ecx,ecx
  41e90f:	mov    rdi,rbx
  41e912:	call   41d580 <__flatcc_error_report@@Base>
  41e917:	jmp    41e618 <__flatcc_error_report@@Base+0x1098>
  41e91c:	call   40527e <__sprintf_chk@plt+0x5e>
  41e921:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  41e92c:	nop    DWORD PTR [rax+0x0]

000000000041e930 <error_ref_sym@@Base>:
  41e930:	push   r15
  41e932:	push   r14
  41e934:	push   r13
  41e936:	push   r12
  41e938:	mov    r12,rsi
  41e93b:	push   rbp
  41e93c:	push   rbx
  41e93d:	sub    rsp,0x68
  41e941:	mov    rax,QWORD PTR fs:0x28
  41e94a:	mov    QWORD PTR [rsp+0x58],rax
  41e94f:	xor    eax,eax
  41e951:	test   rsi,rsi
  41e954:	mov    QWORD PTR [rsp+0x8],rdi
  41e959:	mov    QWORD PTR [rsp+0x10],rdx
  41e95e:	mov    QWORD PTR [rsp+0x18],rcx
  41e963:	je     41ea3c <error_ref_sym@@Base+0x10c>
  41e969:	mov    r13,rsi
  41e96c:	xor    r15d,r15d
  41e96f:	mov    r14d,0x32
  41e975:	lea    rbp,[rsp+0x20]
  41e97a:	jmp    41e985 <error_ref_sym@@Base+0x55>
  41e97c:	nop    DWORD PTR [rax+0x0]
  41e980:	test   r14d,r14d
  41e983:	jle    41e9c7 <error_ref_sym@@Base+0x97>
  41e985:	mov    rax,QWORD PTR [r13+0x8]
  41e989:	movsxd rdi,r15d
  41e98c:	mov    rbx,QWORD PTR [rax+0x8]
  41e990:	mov    rsi,QWORD PTR [rax]
  41e993:	cmp    ebx,r14d
  41e996:	cmovg  ebx,r14d
  41e99a:	add    rdi,rbp
  41e99d:	movsxd rdx,ebx
  41e9a0:	call   405170 <memcpy@plt>
  41e9a5:	lea    r9d,[rbx+r15*1]
  41e9a9:	mov    ecx,r14d
  41e9ac:	sub    ecx,ebx
  41e9ae:	movsxd rax,r9d
  41e9b1:	lea    r14d,[rcx-0x1]
  41e9b5:	lea    r15d,[r9+0x1]
  41e9b9:	mov    BYTE PTR [rsp+rax*1+0x20],0x2e
  41e9be:	mov    r13,QWORD PTR [r13+0x0]
  41e9c2:	test   r13,r13
  41e9c5:	jne    41e980 <error_ref_sym@@Base+0x50>
  41e9c7:	test   r15d,r15d
  41e9ca:	movsxd rax,r15d
  41e9cd:	cmovle r9d,r15d
  41e9d1:	test   r14d,r14d
  41e9d4:	mov    BYTE PTR [rsp+rax*1+0x20],0x0
  41e9d9:	jle    41ea20 <error_ref_sym@@Base+0xf0>
  41e9db:	mov    rax,QWORD PTR [rsp+0x18]
  41e9e0:	test   rax,rax
  41e9e3:	je     41ea38 <error_ref_sym@@Base+0x108>
  41e9e5:	mov    rcx,QWORD PTR [rax+0x8]
  41e9e9:	mov    rsi,QWORD PTR [r12+0x8]
  41e9ee:	mov    rdx,QWORD PTR [rsp+0x10]
  41e9f3:	mov    r8,rbp
  41e9f6:	mov    rdi,QWORD PTR [rsp+0x8]
  41e9fb:	call   41d580 <__flatcc_error_report@@Base>
  41ea00:	mov    rax,QWORD PTR [rsp+0x58]
  41ea05:	xor    rax,QWORD PTR fs:0x28
  41ea0e:	jne    41ea4b <error_ref_sym@@Base+0x11b>
  41ea10:	add    rsp,0x68
  41ea14:	pop    rbx
  41ea15:	pop    rbp
  41ea16:	pop    r12
  41ea18:	pop    r13
  41ea1a:	pop    r14
  41ea1c:	pop    r15
  41ea1e:	ret    
  41ea1f:	nop
  41ea20:	mov    rax,QWORD PTR [rsp+0x18]
  41ea25:	mov    DWORD PTR [rsp+0x4f],0x2e2e2e
  41ea2d:	mov    r9d,0x32
  41ea33:	test   rax,rax
  41ea36:	jne    41e9e5 <error_ref_sym@@Base+0xb5>
  41ea38:	xor    ecx,ecx
  41ea3a:	jmp    41e9e9 <error_ref_sym@@Base+0xb9>
  41ea3c:	mov    BYTE PTR [rsp+0x20],0x0
  41ea41:	xor    r9d,r9d
  41ea44:	lea    rbp,[rsp+0x20]
  41ea49:	jmp    41e9db <error_ref_sym@@Base+0xab>
  41ea4b:	call   4050d0 <__stack_chk_fail@plt>

000000000041ea50 <__flatcc_fb_init_parser@@Base>:
  41ea50:	push   r15
  41ea52:	push   r14
  41ea54:	xor    eax,eax
  41ea56:	push   r13
  41ea58:	push   r12
  41ea5a:	mov    r12,rdx
  41ea5d:	push   rbp
  41ea5e:	push   rbx
  41ea5f:	mov    rbp,rdi
  41ea62:	add    rdi,0x8
  41ea66:	mov    rdx,rcx
  41ea69:	mov    rcx,rbp
  41ea6c:	sub    rsp,0x18
  41ea70:	mov    QWORD PTR [rdi-0x8],0x0
  41ea78:	mov    QWORD PTR [rdi+0x348],0x0
  41ea83:	and    rdi,0xfffffffffffffff8
  41ea87:	mov    r14,rsi
  41ea8a:	sub    rcx,rdi
  41ea8d:	add    ecx,0x358
  41ea93:	shr    ecx,0x3
  41ea96:	test   rdx,rdx
  41ea99:	rep stos QWORD PTR es:[rdi],rax
  41ea9c:	je     41ec90 <__flatcc_fb_init_parser@@Base+0x240>
  41eaa2:	test   r14,r14
  41eaa5:	mov    QWORD PTR [rbp+0x10],rdx
  41eaa9:	mov    QWORD PTR [rbp+0x18],r8
  41eaad:	je     41eca8 <__flatcc_fb_init_parser@@Base+0x258>
  41eab3:	mov    rax,QWORD PTR [r14]
  41eab6:	lea    rdi,[rbp+0xf0]
  41eabd:	lea    rcx,[rbp+0xe8]
  41eac4:	mov    rsi,r14
  41eac7:	and    rdi,0xfffffffffffffff8
  41eacb:	mov    QWORD PTR [rbp+0xe8],rax
  41ead2:	mov    rax,QWORD PTR [r14+0x108]
  41ead9:	sub    rcx,rdi
  41eadc:	sub    rsi,rcx
  41eadf:	add    ecx,0x110
  41eae5:	shr    ecx,0x3
  41eae8:	mov    QWORD PTR [rbp+0x1f0],rax
  41eaef:	rep movs QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
  41eaf2:	lea    rax,[rbp+0x268]
  41eaf9:	test   r9,r9
  41eafc:	cmove  r9,rax
  41eb00:	mov    eax,DWORD PTR [rbp+0x12c]
  41eb06:	mov    QWORD PTR [rbp+0x260],r9
  41eb0d:	cmp    eax,0x8
  41eb10:	ja     41ed26 <__flatcc_fb_init_parser@@Base+0x2d6>
  41eb16:	mov    edx,0x1
  41eb1b:	shlx   rax,rdx,rax
  41eb20:	test   eax,0x114
  41eb25:	je     41ed26 <__flatcc_fb_init_parser@@Base+0x2d6>
  41eb2b:	mov    eax,DWORD PTR [rbp+0x130]
  41eb31:	cmp    eax,0x8
  41eb34:	ja     41ed49 <__flatcc_fb_init_parser@@Base+0x2f9>
  41eb3a:	shlx   rdx,rdx,rax
  41eb3f:	test   edx,0x114
  41eb45:	je     41ed49 <__flatcc_fb_init_parser@@Base+0x2f9>
  41eb4b:	test   r12,r12
  41eb4e:	je     41ecc8 <__flatcc_fb_init_parser@@Base+0x278>
  41eb54:	mov    rdi,r12
  41eb57:	call   4050c0 <strlen@plt>
  41eb5c:	mov    r13,rax
  41eb5f:	mov    rdx,QWORD PTR [r14+0x68]
  41eb63:	mov    rsi,r13
  41eb66:	mov    rdi,r12
  41eb69:	call   41d000 <__flatcc_fb_create_basename@@Base>
  41eb6e:	test   rax,rax
  41eb71:	mov    rbx,rax
  41eb74:	mov    QWORD PTR [rbp+0x308],rax
  41eb7b:	je     41edc2 <__flatcc_fb_init_parser@@Base+0x372>
  41eb81:	mov    rdi,rax
  41eb84:	call   4050c0 <strlen@plt>
  41eb89:	mov    rdi,rbx
  41eb8c:	mov    rsi,rax
  41eb8f:	mov    r15,rax
  41eb92:	call   41cb30 <__flatcc_fb_copy_path_n@@Base>
  41eb97:	test   rax,rax
  41eb9a:	mov    rdi,rax
  41eb9d:	je     41edc2 <__flatcc_fb_init_parser@@Base+0x372>
  41eba3:	test   r15,r15
  41eba6:	je     41ebeb <__flatcc_fb_init_parser@@Base+0x19b>
  41eba8:	movsx  rbx,BYTE PTR [rax]
  41ebac:	test   bl,bl
  41ebae:	je     41ebeb <__flatcc_fb_init_parser@@Base+0x19b>
  41ebb0:	mov    QWORD PTR [rsp+0x8],rax
  41ebb5:	call   405030 <__ctype_toupper_loc@plt>
  41ebba:	mov    rdi,QWORD PTR [rsp+0x8]
  41ebbf:	lea    rdx,[rdi+0x1]
  41ebc3:	lea    rsi,[rdi+r15*1]
  41ebc7:	jmp    41ebdd <__flatcc_fb_init_parser@@Base+0x18d>
  41ebc9:	nop    DWORD PTR [rax+0x0]
  41ebd0:	add    rdx,0x1
  41ebd4:	movsx  rbx,BYTE PTR [rdx-0x1]
  41ebd9:	test   bl,bl
  41ebdb:	je     41ebeb <__flatcc_fb_init_parser@@Base+0x19b>
  41ebdd:	mov    rcx,QWORD PTR [rax]
  41ebe0:	cmp    rsi,rdx
  41ebe3:	mov    ecx,DWORD PTR [rcx+rbx*4]
  41ebe6:	mov    BYTE PTR [rdx-0x1],cl
  41ebe9:	jne    41ebd0 <__flatcc_fb_init_parser@@Base+0x180>
  41ebeb:	lea    rdx,[rip+0x26c1c]        # 44580e <_IO_stdin_used@@Base+0x1880e>
  41ebf2:	mov    QWORD PTR [rbp+0x310],rdi
  41ebf9:	mov    QWORD PTR [rbp+0x2f0],rdi
  41ec00:	mov    DWORD PTR [rbp+0x2f8],r15d
  41ec07:	mov    rsi,r13
  41ec0a:	mov    rdi,r12
  41ec0d:	call   41d000 <__flatcc_fb_create_basename@@Base>
  41ec12:	test   rax,rax
  41ec15:	mov    QWORD PTR [rbp+0x318],rax
  41ec1c:	je     41edc2 <__flatcc_fb_init_parser@@Base+0x372>
  41ec22:	mov    rdi,QWORD PTR [r14+0xe0]
  41ec29:	test   rdi,rdi
  41ec2c:	je     41ec40 <__flatcc_fb_init_parser@@Base+0x1f0>
  41ec2e:	mov    QWORD PTR [rbp+0x2d8],rdi
  41ec35:	call   4050c0 <strlen@plt>
  41ec3a:	mov    DWORD PTR [rbp+0x2e0],eax
  41ec40:	mov    rdi,QWORD PTR [rbp+0x260]
  41ec47:	xor    edx,edx
  41ec49:	xor    esi,esi
  41ec4b:	call   41c2b0 <fb_scope_table_find@@Base>
  41ec50:	test   rax,rax
  41ec53:	mov    rbx,rax
  41ec56:	je     41ecda <__flatcc_fb_init_parser@@Base+0x28a>
  41ec5c:	mov    rdi,QWORD PTR [rbp+0x260]
  41ec63:	xor    edx,edx
  41ec65:	xor    esi,esi
  41ec67:	mov    QWORD PTR [rbp+0x340],rbx
  41ec6e:	call   41c2b0 <fb_scope_table_find@@Base>
  41ec73:	cmp    rax,rbx
  41ec76:	jne    41eda3 <__flatcc_fb_init_parser@@Base+0x353>
  41ec7c:	xor    eax,eax
  41ec7e:	add    rsp,0x18
  41ec82:	pop    rbx
  41ec83:	pop    rbp
  41ec84:	pop    r12
  41ec86:	pop    r13
  41ec88:	pop    r14
  41ec8a:	pop    r15
  41ec8c:	ret    
  41ec8d:	nop    DWORD PTR [rax]
  41ec90:	mov    rax,0x41d180
  41ec97:	test   r14,r14
  41ec9a:	mov    QWORD PTR [rbp+0x10],rax
  41ec9e:	jne    41eab3 <__flatcc_fb_init_parser@@Base+0x63>
  41eca4:	nop    DWORD PTR [rax+0x0]
  41eca8:	lea    rdi,[rbp+0xe8]
  41ecaf:	mov    QWORD PTR [rsp+0x8],r9
  41ecb4:	call   406140 <flatcc_init_options@@Base>
  41ecb9:	mov    r9,QWORD PTR [rsp+0x8]
  41ecbe:	jmp    41eaf2 <__flatcc_fb_init_parser@@Base+0xa2>
  41ecc3:	nop    DWORD PTR [rax+rax*1+0x0]
  41ecc8:	mov    r13d,0x4
  41ecce:	lea    r12,[rip+0x280f5]        # 446dca <fb_schema_table_missing@@Base+0xa5a>
  41ecd5:	jmp    41eb5f <__flatcc_fb_init_parser@@Base+0x10f>
  41ecda:	mov    rbx,QWORD PTR [rbp+0x60]
  41ecde:	lea    rax,[rbx+0x40]
  41ece2:	cmp    rax,QWORD PTR [rbp+0x50]
  41ece6:	ja     41ed6c <__flatcc_fb_init_parser@@Base+0x31c>
  41ecec:	mov    QWORD PTR [rbp+0x60],rax
  41ecf0:	mov    rdx,QWORD PTR [rbp+0x2e0]
  41ecf7:	mov    rsi,rbx
  41ecfa:	mov    rax,QWORD PTR [rbp+0x2d8]
  41ed01:	mov    rdi,QWORD PTR [rbp+0x260]
  41ed08:	mov    QWORD PTR [rbx],0x0
  41ed0f:	mov    QWORD PTR [rbx+0x30],rdx
  41ed13:	mov    edx,0x1
  41ed18:	mov    QWORD PTR [rbx+0x28],rax
  41ed1c:	call   41c2a0 <fb_scope_table_insert_item@@Base>
  41ed21:	jmp    41ec5c <__flatcc_fb_init_parser@@Base+0x20c>
  41ed26:	lea    rdx,[rip+0x27ab3]        # 4467e0 <fb_schema_table_missing@@Base+0x470>
  41ed2d:	xor    r9d,r9d
  41ed30:	xor    r8d,r8d
  41ed33:	xor    ecx,ecx
  41ed35:	xor    esi,esi
  41ed37:	mov    rdi,rbp
  41ed3a:	call   41d580 <__flatcc_error_report@@Base>
  41ed3f:	mov    eax,0xffffffff
  41ed44:	jmp    41ec7e <__flatcc_fb_init_parser@@Base+0x22e>
  41ed49:	lea    rdx,[rip+0x27ac8]        # 446818 <fb_schema_table_missing@@Base+0x4a8>
  41ed50:	xor    r9d,r9d
  41ed53:	xor    r8d,r8d
  41ed56:	xor    ecx,ecx
  41ed58:	xor    esi,esi
  41ed5a:	mov    rdi,rbp
  41ed5d:	call   41d580 <__flatcc_error_report@@Base>
  41ed62:	mov    eax,0xffffffff
  41ed67:	jmp    41ec7e <__flatcc_fb_init_parser@@Base+0x22e>
  41ed6c:	mov    esi,0x1
  41ed71:	mov    edi,0x10000
  41ed76:	call   405140 <calloc@plt>
  41ed7b:	test   rax,rax
  41ed7e:	je     41edc2 <__flatcc_fb_init_parser@@Base+0x372>
  41ed80:	mov    rdx,QWORD PTR [rbp+0x58]
  41ed84:	lea    rbx,[rax+0x10]
  41ed88:	mov    QWORD PTR [rbp+0x58],rax
  41ed8c:	mov    QWORD PTR [rax],rdx
  41ed8f:	lea    rdx,[rax+0x10000]
  41ed96:	add    rax,0x50
  41ed9a:	mov    QWORD PTR [rbp+0x50],rdx
  41ed9e:	jmp    41ecec <__flatcc_fb_init_parser@@Base+0x29c>
  41eda3:	lea    rcx,[rip+0x28466]        # 447210 <fb_schema_table_missing@@Base+0xea0>
  41edaa:	lea    rsi,[rip+0x275cf]        # 446380 <fb_schema_table_missing@@Base+0x10>
  41edb1:	lea    rdi,[rip+0x27aa0]        # 446858 <fb_schema_table_missing@@Base+0x4e8>
  41edb8:	mov    edx,0x533
  41edbd:	call   405100 <__assert_fail@plt>
  41edc2:	call   40527e <__sprintf_chk@plt+0x5e>
  41edc7:	nop    WORD PTR [rax+rax*1+0x0]

000000000041edd0 <__flatcc_fb_parse@@Base>:
  41edd0:	push   r15
  41edd2:	push   r14
  41edd4:	push   r13
  41edd6:	push   r12
  41edd8:	mov    r13,rdi
  41eddb:	push   rbp
  41eddc:	push   rbx
  41eddd:	mov    rbx,rsi
  41ede0:	sub    rsp,0x48
  41ede4:	mov    QWORD PTR [rdi+0x70],rsi
  41ede8:	mov    QWORD PTR [rdi+0x78],0x1
  41edf0:	mov    rax,QWORD PTR fs:0x28
  41edf9:	mov    QWORD PTR [rsp+0x38],rax
  41edfe:	xor    eax,eax
  41ee00:	lea    rax,[rip+0x27fc8]        # 446dcf <fb_schema_table_missing@@Base+0xa5f>
  41ee07:	test   ecx,ecx
  41ee09:	mov    QWORD PTR [rdi+0xa0],0x9
  41ee14:	mov    QWORD PTR [rdi+0x88],0x4
  41ee1f:	mov    QWORD PTR [rdi+0x98],0x0
  41ee2a:	mov    QWORD PTR [rdi+0x80],rax
  41ee31:	lea    rax,[rip+0x27f9c]        # 446dd4 <fb_schema_table_missing@@Base+0xa64>
  41ee38:	mov    QWORD PTR [rdi+0x90],0x0
  41ee43:	mov    QWORD PTR [rdi+0xc8],0xfffffffffffffc2a
  41ee4e:	mov    QWORD PTR [rdi+0xb0],0x5
  41ee59:	mov    QWORD PTR [rdi+0xa8],rax
  41ee60:	mov    QWORD PTR [rdi+0xc0],0x0
  41ee6b:	mov    QWORD PTR [rdi+0xb8],0x0
  41ee76:	je     41ee7c <__flatcc_fb_parse@@Base+0xac>
  41ee78:	mov    QWORD PTR [r13+0x20],rsi
  41ee7c:	lea    r15,[rbx+rdx*1]
  41ee80:	lea    rbp,[rip+0x28181]        # 447008 <fb_schema_table_missing@@Base+0xc98>
  41ee87:	cmp    r15,rbx
  41ee8a:	je     42074a <__flatcc_fb_parse@@Base+0x197a>
  41ee90:	movzx  eax,BYTE PTR [rbx]
  41ee93:	cmp    al,0x7e
  41ee95:	ja     41f687 <__flatcc_fb_parse@@Base+0x8b7>
  41ee9b:	movzx  edx,al
  41ee9e:	movsxd rdx,DWORD PTR [rbp+rdx*4+0x0]
  41eea3:	add    rdx,rbp
  41eea6:	jmp    rdx
  41eea8:	nop    DWORD PTR [rax+rax*1+0x0]
  41eeb0:	add    rbx,0x1
  41eeb4:	cmp    r15,rbx
  41eeb7:	je     42074a <__flatcc_fb_parse@@Base+0x197a>
  41eebd:	movzx  eax,BYTE PTR [rbx]
  41eec0:	cmp    al,0x20
  41eec2:	je     41eeb0 <__flatcc_fb_parse@@Base+0xe0>
  41eec4:	cmp    al,0x9
  41eec6:	je     41eeb0 <__flatcc_fb_parse@@Base+0xe0>
  41eec8:	jmp    41ee93 <__flatcc_fb_parse@@Base+0xc3>
  41eeca:	lea    r14,[rbx+0x1]
  41eece:	mov    rdx,rbx
  41eed1:	mov    esi,0x13
  41eed6:	mov    rdi,r13
  41eed9:	mov    rcx,r14
  41eedc:	mov    r12,r14
  41eedf:	call   41d1b0 <__flatcc_fb_default_error_out@@Base+0x30>
  41eee4:	nop    DWORD PTR [rax+0x0]
  41eee8:	sub    r14,0x1
  41eeec:	jmp    41ef07 <__flatcc_fb_parse@@Base+0x137>
  41eeee:	xchg   ax,ax
  41eef0:	movzx  eax,BYTE PTR [r14+0x1]
  41eef5:	cmp    al,0x22
  41eef7:	je     41ef13 <__flatcc_fb_parse@@Base+0x143>
  41eef9:	cmp    al,0x5c
  41eefb:	je     41ef13 <__flatcc_fb_parse@@Base+0x143>
  41eefd:	sub    eax,0x20
  41ef00:	cmp    al,0x5e
  41ef02:	ja     41ef13 <__flatcc_fb_parse@@Base+0x143>
  41ef04:	mov    r14,rbx
  41ef07:	lea    rbx,[r14+0x1]
  41ef0b:	cmp    r15,rbx
  41ef0e:	jne    41eef0 <__flatcc_fb_parse@@Base+0x120>
  41ef10:	mov    rbx,r15
  41ef13:	cmp    r12,rbx
  41ef16:	je     41ef2b <__flatcc_fb_parse@@Base+0x15b>
  41ef18:	mov    rcx,rbx
  41ef1b:	mov    rdx,r12
  41ef1e:	mov    esi,0x14
  41ef23:	mov    rdi,r13
  41ef26:	call   41d1b0 <__flatcc_fb_default_error_out@@Base+0x30>
  41ef2b:	movzx  eax,BYTE PTR [rbx]
  41ef2e:	cmp    al,0x22
  41ef30:	je     42072b <__flatcc_fb_parse@@Base+0x195b>
  41ef36:	cmp    r15,rbx
  41ef39:	je     41efc1 <__flatcc_fb_parse@@Base+0x1f1>
  41ef3f:	test   al,al
  41ef41:	je     41efc1 <__flatcc_fb_parse@@Base+0x1f1>
  41ef43:	cmp    al,0x5c
  41ef45:	je     41ef70 <__flatcc_fb_parse@@Base+0x1a0>
  41ef47:	cmp    al,0xa
  41ef49:	je     41efc1 <__flatcc_fb_parse@@Base+0x1f1>
  41ef4b:	cmp    al,0xd
  41ef4d:	je     41efc1 <__flatcc_fb_parse@@Base+0x1f1>
  41ef4f:	lea    r14,[rbx+0x1]
  41ef53:	mov    rdx,rbx
  41ef56:	mov    esi,0x6
  41ef5b:	mov    rdi,r13
  41ef5e:	mov    rcx,r14
  41ef61:	mov    r12,r14
  41ef64:	call   41d1b0 <__flatcc_fb_default_error_out@@Base+0x30>
  41ef69:	jmp    41eee8 <__flatcc_fb_parse@@Base+0x118>
  41ef6e:	xchg   ax,ax
  41ef70:	lea    r12,[r14+0x2]
  41ef74:	mov    rdx,rbx
  41ef77:	mov    esi,0x15
  41ef7c:	mov    rdi,r13
  41ef7f:	mov    rcx,r12
  41ef82:	call   41d1b0 <__flatcc_fb_default_error_out@@Base+0x30>
  41ef87:	cmp    r15,r12
  41ef8a:	je     42115a <__flatcc_fb_parse@@Base+0x238a>
  41ef90:	movzx  eax,BYTE PTR [rbx+0x1]
  41ef94:	test   al,al
  41ef96:	je     41efbe <__flatcc_fb_parse@@Base+0x1ee>
  41ef98:	cmp    al,0x5c
  41ef9a:	je     41efb5 <__flatcc_fb_parse@@Base+0x1e5>
  41ef9c:	cmp    al,0x22
  41ef9e:	je     41efb5 <__flatcc_fb_parse@@Base+0x1e5>
  41efa0:	cmp    al,0xa
  41efa2:	je     41f64e <__flatcc_fb_parse@@Base+0x87e>
  41efa8:	cmp    al,0xd
  41efaa:	je     420c07 <__flatcc_fb_parse@@Base+0x1e37>
  41efb0:	mov    rbx,r12
  41efb3:	jmp    41ef4f <__flatcc_fb_parse@@Base+0x17f>
  41efb5:	lea    r14,[rbx+0x2]
  41efb9:	jmp    41eee8 <__flatcc_fb_parse@@Base+0x118>
  41efbe:	mov    rbx,r12
  41efc1:	mov    rcx,rbx
  41efc4:	mov    rdx,rbx
  41efc7:	mov    esi,0x17
  41efcc:	mov    rdi,r13
  41efcf:	call   41d1b0 <__flatcc_fb_default_error_out@@Base+0x30>
  41efd4:	jmp    41ee87 <__flatcc_fb_parse@@Base+0xb7>
  41efd9:	lea    r14,[rbx+0x1]
  41efdd:	cmp    r15,r14
  41efe0:	je     41eff6 <__flatcc_fb_parse@@Base+0x226>
  41efe2:	movzx  eax,BYTE PTR [rbx+0x1]
  41efe6:	cmp    al,0x58
  41efe8:	je     41f590 <__flatcc_fb_parse@@Base+0x7c0>
  41efee:	cmp    al,0x78
  41eff0:	je     41f590 <__flatcc_fb_parse@@Base+0x7c0>
  41eff6:	mov    r14,rbx
  41eff9:	jmp    41f010 <__flatcc_fb_parse@@Base+0x240>
  41effb:	nop    DWORD PTR [rax+rax*1+0x0]
  41f000:	movzx  eax,BYTE PTR [r14]
  41f004:	lea    edx,[rax-0x30]
  41f007:	cmp    dl,0x9
  41f00a:	ja     420421 <__flatcc_fb_parse@@Base+0x1651>
  41f010:	add    r14,0x1
  41f014:	jne    41f000 <__flatcc_fb_parse@@Base+0x230>
  41f016:	movzx  eax,BYTE PTR ds:0x0
  41f01e:	ud2    
  41f020:	lea    r14,[rbx+0x1]
  41f024:	cmp    r15,r14
  41f027:	je     41f045 <__flatcc_fb_parse@@Base+0x275>
  41f029:	movzx  eax,BYTE PTR [rbx+0x1]
  41f02d:	cmp    al,0x3c
  41f02f:	je     420eb5 <__flatcc_fb_parse@@Base+0x20e5>
  41f035:	cmp    al,0x3d
  41f037:	je     420e96 <__flatcc_fb_parse@@Base+0x20c6>
  41f03d:	cmp    al,0x2d
  41f03f:	je     4209f1 <__flatcc_fb_parse@@Base+0x1c21>
  41f045:	mov    rdx,rbx
  41f048:	mov    rcx,r14
  41f04b:	mov    esi,0x3c
  41f050:	mov    rdi,r13
  41f053:	mov    rbx,r14
  41f056:	call   41d1b0 <__flatcc_fb_default_error_out@@Base+0x30>
  41f05b:	jmp    41ee87 <__flatcc_fb_parse@@Base+0xb7>
  41f060:	lea    r14,[rbx+0x1]
  41f064:	cmp    r15,r14
  41f067:	je     41f70e <__flatcc_fb_parse@@Base+0x93e>
  41f06d:	movzx  eax,BYTE PTR [rbx+0x1]
  41f071:	cmp    al,0x3d
  41f073:	je     41f6e8 <__flatcc_fb_parse@@Base+0x918>
  41f079:	cmp    al,0x3e
  41f07b:	jne    41f70e <__flatcc_fb_parse@@Base+0x93e>
  41f081:	lea    r14,[rbx+0x2]
  41f085:	mov    rdx,rbx
  41f088:	mov    esi,0x3e3d
  41f08d:	mov    rdi,r13
  41f090:	mov    rcx,r14
  41f093:	mov    rbx,r14
  41f096:	call   41d1b0 <__flatcc_fb_default_error_out@@Base+0x30>
  41f09b:	jmp    41ee87 <__flatcc_fb_parse@@Base+0xb7>
  41f0a0:	lea    r14,[rbx+0x1]
  41f0a4:	cmp    r15,r14
  41f0a7:	je     42090a <__flatcc_fb_parse@@Base+0x1b3a>
  41f0ad:	movzx  eax,BYTE PTR [rbx+0x1]
  41f0b1:	cmp    al,0x3d
  41f0b3:	je     420cde <__flatcc_fb_parse@@Base+0x1f0e>
  41f0b9:	cmp    al,0x3e
  41f0bb:	jne    42090a <__flatcc_fb_parse@@Base+0x1b3a>
  41f0c1:	lea    r14,[rbx+0x2]
  41f0c5:	cmp    r15,r14
  41f0c8:	je     420fa5 <__flatcc_fb_parse@@Base+0x21d5>
  41f0ce:	movzx  eax,BYTE PTR [rbx+0x2]
  41f0d2:	cmp    al,0x3d
  41f0d4:	je     420f86 <__flatcc_fb_parse@@Base+0x21b6>
  41f0da:	cmp    al,0x3e
  41f0dc:	jne    420fa5 <__flatcc_fb_parse@@Base+0x21d5>
  41f0e2:	lea    r14,[rbx+0x3]
  41f0e6:	cmp    r15,r14
  41f0e9:	je     41f0f5 <__flatcc_fb_parse@@Base+0x325>
  41f0eb:	cmp    BYTE PTR [rbx+0x3],0x3d
  41f0ef:	je     4216b9 <__flatcc_fb_parse@@Base+0x28e9>
  41f0f5:	mov    rdx,rbx
  41f0f8:	mov    rcx,r14
  41f0fb:	mov    esi,0x3e3e3e
  41f100:	mov    rdi,r13
  41f103:	mov    rbx,r14
  41f106:	call   41d1b0 <__flatcc_fb_default_error_out@@Base+0x30>
  41f10b:	jmp    41ee87 <__flatcc_fb_parse@@Base+0xb7>
  41f110:	movsx  rax,al
  41f114:	lea    r14,[rbx+0x1]
  41f118:	mov    rsi,rax
  41f11b:	shl    rsi,0x8
  41f11f:	cmp    r15,r14
  41f122:	je     41f171 <__flatcc_fb_parse@@Base+0x3a1>
  41f124:	movzx  edx,BYTE PTR [rbx+0x1]
  41f128:	lea    rdi,[rip+0x28111]        # 447240 <fb_schema_table_missing@@Base+0xed0>
  41f12f:	cmp    BYTE PTR [rdi+rdx*1],0x0
  41f133:	je     41f171 <__flatcc_fb_parse@@Base+0x3a1>
  41f135:	movsx  rcx,dl
  41f139:	shl    rcx,0x10
  41f13d:	or     rsi,rcx
  41f140:	jmp    41f161 <__flatcc_fb_parse@@Base+0x391>
  41f142:	nop    WORD PTR [rax+rax*1+0x0]
  41f148:	movzx  eax,BYTE PTR [r14+0x1]
  41f14d:	lea    rdi,[rip+0x280ec]        # 447240 <fb_schema_table_missing@@Base+0xed0>
  41f154:	cmp    BYTE PTR [rdi+rax*1],0x0
  41f158:	je     420ef5 <__flatcc_fb_parse@@Base+0x2125>
  41f15e:	mov    r14,rdx
  41f161:	lea    rdx,[r14+0x1]
  41f165:	cmp    r15,rdx
  41f168:	jne    41f148 <__flatcc_fb_parse@@Base+0x378>
  41f16a:	movsx  rax,BYTE PTR [r14]
  41f16e:	mov    r14,r15
  41f171:	shl    rax,0x18
  41f175:	or     rax,rsi
  41f178:	mov    rdx,rax
  41f17b:	mov    rax,r14
  41f17e:	sub    rax,rbx
  41f181:	movzx  eax,al
  41f184:	add    rax,0x30
  41f188:	or     rax,rdx
  41f18b:	cmp    rax,0x6570723b
  41f191:	je     4215ce <__flatcc_fb_parse@@Base+0x27fe>
  41f197:	ja     4207c0 <__flatcc_fb_parse@@Base+0x19f0>
  41f19d:	cmp    rax,0x38697535
  41f1a3:	je     4215a4 <__flatcc_fb_parse@@Base+0x27d4>
  41f1a9:	ja     420925 <__flatcc_fb_parse@@Base+0x1b55>
  41f1af:	cmp    rax,0x34697536
  41f1b5:	je     421276 <__flatcc_fb_parse@@Base+0x24a6>
  41f1bb:	jbe    421012 <__flatcc_fb_parse@@Base+0x2242>
  41f1c1:	cmp    rax,0x346e6935
  41f1c7:	je     42124c <__flatcc_fb_parse@@Base+0x247c>
  41f1cd:	jbe    421216 <__flatcc_fb_parse@@Base+0x2446>
  41f1d3:	cmp    rax,0x36697536
  41f1d9:	je     42136e <__flatcc_fb_parse@@Base+0x259e>
  41f1df:	cmp    rax,0x366e6935
  41f1e5:	jne    420fed <__flatcc_fb_parse@@Base+0x221d>
  41f1eb:	lea    rdi,[rip+0x170b7]        # 4362a9 <_IO_stdin_used@@Base+0x92a9>
  41f1f2:	mov    rsi,rbx
  41f1f5:	mov    edx,0x5
  41f1fa:	call   405130 <memcmp@plt>
  41f1ff:	cmp    eax,0x1
  41f202:	sbb    rsi,rsi
  41f205:	and    rsi,0xfffffffffffffc17
  41f20c:	add    rsi,0x9
  41f210:	jmp    41f27a <__flatcc_fb_parse@@Base+0x4aa>
  41f212:	nop    WORD PTR [rax+rax*1+0x0]
  41f218:	lea    r14,[rbx+0x1]
  41f21c:	cmp    r15,r14
  41f21f:	je     41f248 <__flatcc_fb_parse@@Base+0x478>
  41f221:	movzx  eax,BYTE PTR [rbx+0x1]
  41f225:	cmp    al,0x3d
  41f227:	je     420c44 <__flatcc_fb_parse@@Base+0x1e74>
  41f22d:	cmp    al,0x7c
  41f22f:	jne    41f248 <__flatcc_fb_parse@@Base+0x478>
  41f231:	lea    r14,[rbx+0x2]
  41f235:	mov    rdx,rbx
  41f238:	mov    esi,0x7c7c
  41f23d:	mov    rdi,r13
  41f240:	mov    rcx,r14
  41f243:	call   41d1b0 <__flatcc_fb_default_error_out@@Base+0x30>
  41f248:	mov    rdx,rbx
  41f24b:	mov    rcx,r14
  41f24e:	mov    esi,0x7c
  41f253:	mov    rdi,r13
  41f256:	mov    rbx,r14
  41f259:	call   41d1b0 <__flatcc_fb_default_error_out@@Base+0x30>
  41f25e:	jmp    41ee87 <__flatcc_fb_parse@@Base+0xb7>
  41f263:	lea    r14,[rbx+0x1]
  41f267:	cmp    r15,r14
  41f26a:	je     41f276 <__flatcc_fb_parse@@Base+0x4a6>
  41f26c:	cmp    BYTE PTR [rbx+0x1],0x3d
  41f270:	je     420f73 <__flatcc_fb_parse@@Base+0x21a3>
  41f276:	movsx  rsi,al
  41f27a:	mov    rdx,rbx
  41f27d:	mov    rcx,r14
  41f280:	mov    rdi,r13
  41f283:	call   41d1b0 <__flatcc_fb_default_error_out@@Base+0x30>
  41f288:	mov    rbx,r14
  41f28b:	jmp    41ee87 <__flatcc_fb_parse@@Base+0xb7>
  41f290:	lea    r14,[rbx+0x1]
  41f294:	cmp    r15,r14
  41f297:	je     41f6cd <__flatcc_fb_parse@@Base+0x8fd>
  41f29d:	movzx  eax,BYTE PTR [rbx+0x1]
  41f2a1:	cmp    al,0x26
  41f2a3:	je     41f6b6 <__flatcc_fb_parse@@Base+0x8e6>
  41f2a9:	cmp    al,0x3d
  41f2ab:	jne    41f6cd <__flatcc_fb_parse@@Base+0x8fd>
  41f2b1:	lea    r14,[rbx+0x2]
  41f2b5:	mov    rdx,rbx
  41f2b8:	mov    esi,0x3d26
  41f2bd:	mov    rdi,r13
  41f2c0:	mov    rcx,r14
  41f2c3:	mov    rbx,r14
  41f2c6:	call   41d1b0 <__flatcc_fb_default_error_out@@Base+0x30>
  41f2cb:	jmp    41ee87 <__flatcc_fb_parse@@Base+0xb7>
  41f2d0:	lea    r14,[rbx+0x1]
  41f2d4:	movsx  rsi,al
  41f2d8:	jmp    41f27a <__flatcc_fb_parse@@Base+0x4aa>
  41f2da:	mov    rcx,rbx
  41f2dd:	mov    rdx,rbx
  41f2e0:	xor    esi,esi
  41f2e2:	mov    rdi,r13
  41f2e5:	call   41d1b0 <__flatcc_fb_default_error_out@@Base+0x30>
  41f2ea:	mov    rax,QWORD PTR [r13+0x48]
  41f2ee:	mov    rbp,QWORD PTR [r13+0x28]
  41f2f2:	mov    rdi,QWORD PTR [r13+0x148]
  41f2f9:	mov    QWORD PTR [r13+0x30],rax
  41f2fd:	mov    QWORD PTR [r13+0x48],rbp
  41f301:	call   405180 <malloc@plt>
  41f306:	test   rax,rax
  41f309:	mov    QWORD PTR [r13+0xd8],rax
  41f310:	je     4216d8 <__flatcc_fb_parse@@Base+0x2908>
  41f316:	mov    rdx,QWORD PTR [rbp+0x20]
  41f31a:	cmp    rdx,0xfffffffffffffc3c
  41f321:	je     420659 <__flatcc_fb_parse@@Base+0x1889>
  41f327:	mov    rbx,rbp
  41f32a:	lea    r12,[rip+0x2757f]        # 4468b0 <fb_schema_table_missing@@Base+0x540>
  41f331:	jmp    41f378 <__flatcc_fb_parse@@Base+0x5a8>
  41f333:	nop    DWORD PTR [rax+rax*1+0x0]
  41f338:	mov    QWORD PTR [r13+0x60],rax
  41f33c:	mov    rax,QWORD PTR [r13+0x1f8]
  41f343:	mov    rdi,r13
  41f346:	mov    QWORD PTR [rsi],rax
  41f349:	mov    QWORD PTR [r13+0x1f8],rsi
  41f350:	add    rsi,0x8
  41f354:	call   41dbb0 <__flatcc_error_report@@Base+0x630>
  41f359:	mov    rsi,QWORD PTR [r13+0x48]
  41f35d:	cmp    QWORD PTR [rsi+0x20],0x3b
  41f362:	jne    41f790 <__flatcc_fb_parse@@Base+0x9c0>
  41f368:	mov    rdi,r13
  41f36b:	call   41d280 <__flatcc_fb_default_error_out@@Base+0x100>
  41f370:	mov    rbx,QWORD PTR [r13+0x48]
  41f374:	mov    rdx,QWORD PTR [rbx+0x20]
  41f378:	cmp    rdx,0xfffffffffffffc35
  41f37f:	jne    41f7b0 <__flatcc_fb_parse@@Base+0x9e0>
  41f385:	mov    rdi,r13
  41f388:	call   41d280 <__flatcc_fb_default_error_out@@Base+0x100>
  41f38d:	mov    eax,DWORD PTR [r13+0xf8]
  41f394:	test   eax,eax
  41f396:	jne    41f730 <__flatcc_fb_parse@@Base+0x960>
  41f39c:	mov    eax,DWORD PTR [r13+0xd0]
  41f3a3:	cmp    eax,0x9
  41f3a6:	jg     41f756 <__flatcc_fb_parse@@Base+0x986>
  41f3ac:	mov    rsi,QWORD PTR [r13+0x48]
  41f3b0:	cmp    QWORD PTR [rsi+0x20],0x13
  41f3b5:	jne    41f760 <__flatcc_fb_parse@@Base+0x990>
  41f3bb:	mov    rdi,r13
  41f3be:	call   41d280 <__flatcc_fb_default_error_out@@Base+0x100>
  41f3c3:	mov    rsi,QWORD PTR [r13+0x60]
  41f3c7:	lea    rax,[rsi+0x20]
  41f3cb:	cmp    rax,QWORD PTR [r13+0x50]
  41f3cf:	jbe    41f338 <__flatcc_fb_parse@@Base+0x568>
  41f3d5:	mov    esi,0x1
  41f3da:	mov    edi,0x10000
  41f3df:	call   405140 <calloc@plt>
  41f3e4:	test   rax,rax
  41f3e7:	je     4216d8 <__flatcc_fb_parse@@Base+0x2908>
  41f3ed:	mov    rdx,QWORD PTR [r13+0x58]
  41f3f1:	lea    rsi,[rax+0x10]
  41f3f5:	mov    QWORD PTR [r13+0x58],rax
  41f3f9:	mov    QWORD PTR [rax],rdx
  41f3fc:	lea    rdx,[rax+0x10000]
  41f403:	add    rax,0x30
  41f407:	mov    QWORD PTR [r13+0x50],rdx
  41f40b:	jmp    41f338 <__flatcc_fb_parse@@Base+0x568>
  41f410:	lea    rax,[rbx+0x1]
  41f414:	cmp    r15,rax
  41f417:	je     41f425 <__flatcc_fb_parse@@Base+0x655>
  41f419:	cmp    BYTE PTR [rbx+0x1],0xd
  41f41d:	lea    rdx,[rbx+0x2]
  41f421:	cmove  rax,rdx
  41f425:	add    QWORD PTR [r13+0x78],0x1
  41f42a:	mov    QWORD PTR [r13+0x70],rax
  41f42e:	mov    rbx,rax
  41f431:	jmp    41ee87 <__flatcc_fb_parse@@Base+0xb7>
  41f436:	lea    rax,[rbx+0x1]
  41f43a:	cmp    r15,rax
  41f43d:	je     41f425 <__flatcc_fb_parse@@Base+0x655>
  41f43f:	cmp    BYTE PTR [rbx+0x1],0xa
  41f443:	lea    rdx,[rbx+0x2]
  41f447:	cmove  rax,rdx
  41f44b:	jmp    41f425 <__flatcc_fb_parse@@Base+0x655>
  41f44d:	lea    r14,[rbx+0x1]
  41f451:	cmp    r15,r14
  41f454:	je     4208ef <__flatcc_fb_parse@@Base+0x1b1f>
  41f45a:	movzx  eax,BYTE PTR [rbx+0x1]
  41f45e:	cmp    al,0x3a
  41f460:	je     420c91 <__flatcc_fb_parse@@Base+0x1ec1>
  41f466:	cmp    al,0x3d
  41f468:	jne    4208ef <__flatcc_fb_parse@@Base+0x1b1f>
  41f46e:	lea    r14,[rbx+0x2]
  41f472:	mov    rdx,rbx
  41f475:	mov    esi,0x3d3a
  41f47a:	mov    rdi,r13
  41f47d:	mov    rcx,r14
  41f480:	mov    rbx,r14
  41f483:	call   41d1b0 <__flatcc_fb_default_error_out@@Base+0x30>
  41f488:	jmp    41ee87 <__flatcc_fb_parse@@Base+0xb7>
  41f48d:	lea    r14,[rbx+0x1]
  41f491:	cmp    r15,r14
  41f494:	je     41f4b2 <__flatcc_fb_parse@@Base+0x6e2>
  41f496:	movzx  eax,BYTE PTR [rbx+0x1]
  41f49a:	cmp    al,0x3d
  41f49c:	je     420e77 <__flatcc_fb_parse@@Base+0x20a7>
  41f4a2:	cmp    al,0x3e
  41f4a4:	je     420e58 <__flatcc_fb_parse@@Base+0x2088>
  41f4aa:	cmp    al,0x2d
  41f4ac:	je     420b09 <__flatcc_fb_parse@@Base+0x1d39>
  41f4b2:	mov    rdx,rbx
  41f4b5:	mov    rcx,r14
  41f4b8:	mov    esi,0x2d
  41f4bd:	mov    rdi,r13
  41f4c0:	mov    rbx,r14
  41f4c3:	call   41d1b0 <__flatcc_fb_default_error_out@@Base+0x30>
  41f4c8:	jmp    41ee87 <__flatcc_fb_parse@@Base+0xb7>
  41f4cd:	lea    r14,[rbx+0x1]
  41f4d1:	cmp    r15,r14
  41f4d4:	je     41f4ee <__flatcc_fb_parse@@Base+0x71e>
  41f4d6:	movzx  eax,BYTE PTR [rbx+0x1]
  41f4da:	cmp    al,0x2e
  41f4dc:	je     420c63 <__flatcc_fb_parse@@Base+0x1e93>
  41f4e2:	jl     41f4ee <__flatcc_fb_parse@@Base+0x71e>
  41f4e4:	sub    eax,0x30
  41f4e7:	mov    rcx,rbx
  41f4ea:	cmp    al,0x9
  41f4ec:	jbe    41f520 <__flatcc_fb_parse@@Base+0x750>
  41f4ee:	mov    rdx,rbx
  41f4f1:	mov    rcx,r14
  41f4f4:	mov    esi,0x2e
  41f4f9:	mov    rdi,r13
  41f4fc:	mov    rbx,r14
  41f4ff:	call   41d1b0 <__flatcc_fb_default_error_out@@Base+0x30>
  41f504:	jmp    41ee87 <__flatcc_fb_parse@@Base+0xb7>
  41f509:	nop    DWORD PTR [rax+0x0]
  41f510:	movzx  eax,BYTE PTR [r14]
  41f514:	lea    edx,[rax-0x30]
  41f517:	cmp    dl,0x9
  41f51a:	ja     420840 <__flatcc_fb_parse@@Base+0x1a70>
  41f520:	add    r14,0x1
  41f524:	cmp    r15,r14
  41f527:	jne    41f510 <__flatcc_fb_parse@@Base+0x740>
  41f529:	mov    r14,r15
  41f52c:	cmp    r14,rcx
  41f52f:	je     420cfd <__flatcc_fb_parse@@Base+0x1f2d>
  41f535:	mov    rdx,rbx
  41f538:	mov    rcx,r14
  41f53b:	mov    esi,0xb
  41f540:	mov    rdi,r13
  41f543:	mov    rbx,r14
  41f546:	call   41d1b0 <__flatcc_fb_default_error_out@@Base+0x30>
  41f54b:	jmp    41ee87 <__flatcc_fb_parse@@Base+0xb7>
  41f550:	lea    r14,[rbx+0x1]
  41f554:	cmp    r15,r14
  41f557:	je     41f575 <__flatcc_fb_parse@@Base+0x7a5>
  41f559:	movzx  eax,BYTE PTR [rbx+0x1]
  41f55d:	cmp    al,0x2f
  41f55f:	je     420d3f <__flatcc_fb_parse@@Base+0x1f6f>
  41f565:	cmp    al,0x3d
  41f567:	je     420d20 <__flatcc_fb_parse@@Base+0x1f50>
  41f56d:	cmp    al,0x2a
  41f56f:	je     420a10 <__flatcc_fb_parse@@Base+0x1c40>
  41f575:	mov    rdx,rbx
  41f578:	mov    rcx,r14
  41f57b:	mov    esi,0x2f
  41f580:	mov    rdi,r13
  41f583:	mov    rbx,r14
  41f586:	call   41d1b0 <__flatcc_fb_default_error_out@@Base+0x30>
  41f58b:	jmp    41ee87 <__flatcc_fb_parse@@Base+0xb7>
  41f590:	add    r14,0x1
  41f594:	cmp    r15,r14
  41f597:	je     420d18 <__flatcc_fb_parse@@Base+0x1f48>
  41f59d:	movzx  eax,BYTE PTR [r14]
  41f5a1:	lea    edx,[rax-0x30]
  41f5a4:	cmp    dl,0x9
  41f5a7:	jbe    41f590 <__flatcc_fb_parse@@Base+0x7c0>
  41f5a9:	or     eax,0x20
  41f5ac:	sub    eax,0x61
  41f5af:	cmp    al,0x5
  41f5b1:	jbe    41f590 <__flatcc_fb_parse@@Base+0x7c0>
  41f5b3:	mov    rdx,rbx
  41f5b6:	mov    rcx,r14
  41f5b9:	mov    esi,0xe
  41f5be:	mov    rdi,r13
  41f5c1:	mov    rbx,r14
  41f5c4:	call   41d1b0 <__flatcc_fb_default_error_out@@Base+0x30>
  41f5c9:	jmp    41ee87 <__flatcc_fb_parse@@Base+0xb7>
  41f5ce:	lea    r14,[rbx+0x1]
  41f5d2:	cmp    r15,r14
  41f5d5:	je     4208d4 <__flatcc_fb_parse@@Base+0x1b04>
  41f5db:	movzx  eax,BYTE PTR [rbx+0x1]
  41f5df:	cmp    al,0x2a
  41f5e1:	je     420c25 <__flatcc_fb_parse@@Base+0x1e55>
  41f5e7:	cmp    al,0x3d
  41f5e9:	jne    4208d4 <__flatcc_fb_parse@@Base+0x1b04>
  41f5ef:	mov    rdx,rbx
  41f5f2:	mov    rcx,r14
  41f5f5:	mov    esi,0x3d2a
  41f5fa:	mov    rdi,r13
  41f5fd:	call   41d1b0 <__flatcc_fb_default_error_out@@Base+0x30>
  41f602:	movzx  eax,BYTE PTR [rbx+0x1]
  41f606:	mov    rbx,r14
  41f609:	jmp    41ee93 <__flatcc_fb_parse@@Base+0xc3>
  41f60e:	lea    r14,[rbx+0x1]
  41f612:	cmp    r15,r14
  41f615:	je     4208b9 <__flatcc_fb_parse@@Base+0x1ae9>
  41f61b:	movzx  eax,BYTE PTR [rbx+0x1]
  41f61f:	cmp    al,0x2b
  41f621:	je     420cbf <__flatcc_fb_parse@@Base+0x1eef>
  41f627:	cmp    al,0x3d
  41f629:	jne    4208b9 <__flatcc_fb_parse@@Base+0x1ae9>
  41f62f:	lea    r14,[rbx+0x2]
  41f633:	mov    rdx,rbx
  41f636:	mov    esi,0x3d2b
  41f63b:	mov    rdi,r13
  41f63e:	mov    rcx,r14
  41f641:	mov    rbx,r14
  41f644:	call   41d1b0 <__flatcc_fb_default_error_out@@Base+0x30>
  41f649:	jmp    41ee87 <__flatcc_fb_parse@@Base+0xb7>
  41f64e:	lea    r14,[rbx+0x2]
  41f652:	cmp    r15,r14
  41f655:	je     41f663 <__flatcc_fb_parse@@Base+0x893>
  41f657:	cmp    BYTE PTR [rbx+0x2],0xd
  41f65b:	lea    rax,[rbx+0x3]
  41f65f:	cmove  r14,rax
  41f663:	add    QWORD PTR [r13+0x78],0x1
  41f668:	mov    rdx,r12
  41f66b:	mov    QWORD PTR [r13+0x70],r14
  41f66f:	mov    rcx,r14
  41f672:	mov    esi,0x12
  41f677:	mov    rdi,r13
  41f67a:	mov    r12,r14
  41f67d:	call   41d1b0 <__flatcc_fb_default_error_out@@Base+0x30>
  41f682:	jmp    41eee8 <__flatcc_fb_parse@@Base+0x118>
  41f687:	lea    edx,[rax-0x20]
  41f68a:	lea    r14,[rbx+0x1]
  41f68e:	cmp    dl,0x5e
  41f691:	jbe    41f69b <__flatcc_fb_parse@@Base+0x8cb>
  41f693:	cmp    al,0x9
  41f695:	jne    420f01 <__flatcc_fb_parse@@Base+0x2131>
  41f69b:	mov    rdx,rbx
  41f69e:	mov    rcx,r14
  41f6a1:	mov    esi,0x8
  41f6a6:	mov    rdi,r13
  41f6a9:	mov    rbx,r14
  41f6ac:	call   41d1b0 <__flatcc_fb_default_error_out@@Base+0x30>
  41f6b1:	jmp    41ee87 <__flatcc_fb_parse@@Base+0xb7>
  41f6b6:	lea    r14,[rbx+0x2]
  41f6ba:	mov    rdx,rbx
  41f6bd:	mov    esi,0x2626
  41f6c2:	mov    rdi,r13
  41f6c5:	mov    rcx,r14
  41f6c8:	call   41d1b0 <__flatcc_fb_default_error_out@@Base+0x30>
  41f6cd:	mov    rdx,rbx
  41f6d0:	mov    rcx,r14
  41f6d3:	mov    esi,0x26
  41f6d8:	mov    rdi,r13
  41f6db:	mov    rbx,r14
  41f6de:	call   41d1b0 <__flatcc_fb_default_error_out@@Base+0x30>
  41f6e3:	jmp    41ee87 <__flatcc_fb_parse@@Base+0xb7>
  41f6e8:	lea    r14,[rbx+0x2]
  41f6ec:	cmp    r15,r14
  41f6ef:	je     41f6fb <__flatcc_fb_parse@@Base+0x92b>
  41f6f1:	cmp    BYTE PTR [rbx+0x2],0x3d
  41f6f5:	je     4215f8 <__flatcc_fb_parse@@Base+0x2828>
  41f6fb:	mov    rcx,r14
  41f6fe:	mov    rdx,rbx
  41f701:	mov    esi,0x3d3d
  41f706:	mov    rdi,r13
  41f709:	call   41d1b0 <__flatcc_fb_default_error_out@@Base+0x30>
  41f70e:	mov    rdx,rbx
  41f711:	mov    rcx,r14
  41f714:	mov    esi,0x3d
  41f719:	mov    rdi,r13
  41f71c:	mov    rbx,r14
  41f71f:	call   41d1b0 <__flatcc_fb_default_error_out@@Base+0x30>
  41f724:	jmp    41ee87 <__flatcc_fb_parse@@Base+0xb7>
  41f729:	nop    DWORD PTR [rax+0x0]
  41f730:	xor    r9d,r9d
  41f733:	xor    r8d,r8d
  41f736:	xor    ecx,ecx
  41f738:	mov    rdx,r12
  41f73b:	mov    rsi,rbp
  41f73e:	mov    rdi,r13
  41f741:	call   41d580 <__flatcc_error_report@@Base>
  41f746:	mov    eax,DWORD PTR [r13+0xd0]
  41f74d:	cmp    eax,0x9
  41f750:	jle    41f3ac <__flatcc_fb_parse@@Base+0x5dc>
  41f756:	mov    rbx,QWORD PTR [r13+0x48]
  41f75a:	mov    rdx,QWORD PTR [rbx+0x20]
  41f75e:	jmp    41f7b7 <__flatcc_fb_parse@@Base+0x9e7>
  41f760:	lea    rdx,[rip+0x27181]        # 4468e8 <fb_schema_table_missing@@Base+0x578>
  41f767:	mov    rdi,r13
  41f76a:	xor    r9d,r9d
  41f76d:	xor    r8d,r8d
  41f770:	xor    ecx,ecx
  41f772:	call   41d580 <__flatcc_error_report@@Base>
  41f777:	mov    esi,0x3b
  41f77c:	mov    rdi,r13
  41f77f:	call   41d3d0 <__flatcc_fb_default_error_out@@Base+0x250>
  41f784:	jmp    41f3c3 <__flatcc_fb_parse@@Base+0x5f3>
  41f789:	nop    DWORD PTR [rax+0x0]
  41f790:	lea    rdx,[rip+0x27181]        # 446918 <fb_schema_table_missing@@Base+0x5a8>
  41f797:	xor    r9d,r9d
  41f79a:	xor    r8d,r8d
  41f79d:	xor    ecx,ecx
  41f79f:	mov    rdi,r13
  41f7a2:	call   41d580 <__flatcc_error_report@@Base>
  41f7a7:	jmp    41f370 <__flatcc_fb_parse@@Base+0x5a0>
  41f7ac:	nop    DWORD PTR [rax+0x0]
  41f7b0:	mov    eax,DWORD PTR [r13+0xd0]
  41f7b7:	lea    rdi,[r13+0x248]
  41f7be:	lea    r15,[rsp+0x30]
  41f7c3:	mov    QWORD PTR [rsp+0x8],rdi
  41f7c8:	lea    rdi,[rsp+0x28]
  41f7cd:	mov    QWORD PTR [rsp+0x18],rdi
  41f7d2:	jmp    41f843 <__flatcc_fb_parse@@Base+0xa73>
  41f7d4:	nop    DWORD PTR [rax+0x0]
  41f7d8:	cmp    rax,0xfffffffffffffc33
  41f7de:	je     41fa1a <__flatcc_fb_parse@@Base+0xc4a>
  41f7e4:	jg     41f9e0 <__flatcc_fb_parse@@Base+0xc10>
  41f7ea:	cmp    rax,0xfffffffffffffc29
  41f7f0:	je     4201ed <__flatcc_fb_parse@@Base+0x141d>
  41f7f6:	cmp    rax,0xfffffffffffffc30
  41f7fc:	je     41ff3d <__flatcc_fb_parse@@Base+0x116d>
  41f802:	cmp    rax,0xfffffffffffffc1b
  41f808:	je     41fd18 <__flatcc_fb_parse@@Base+0xf48>
  41f80e:	lea    rdx,[rip+0x27453]        # 446c68 <fb_schema_table_missing@@Base+0x8f8>
  41f815:	xor    r9d,r9d
  41f818:	xor    r8d,r8d
  41f81b:	xor    ecx,ecx
  41f81d:	mov    rdi,r13
  41f820:	call   41d580 <__flatcc_error_report@@Base>
  41f825:	nop    DWORD PTR [rax]
  41f828:	mov    rcx,QWORD PTR [r13+0x48]
  41f82c:	cmp    rbx,rcx
  41f82f:	je     41f940 <__flatcc_fb_parse@@Base+0xb70>
  41f835:	mov    rdx,QWORD PTR [rcx+0x20]
  41f839:	mov    eax,DWORD PTR [r13+0xd0]
  41f840:	mov    rbx,rcx
  41f843:	test   rdx,rdx
  41f846:	je     420488 <__flatcc_fb_parse@@Base+0x16b8>
  41f84c:	cmp    eax,0x9
  41f84f:	jg     41f970 <__flatcc_fb_parse@@Base+0xba0>
  41f855:	mov    rsi,QWORD PTR [r13+0x48]
  41f859:	mov    rax,QWORD PTR [rsi+0x20]
  41f85d:	cmp    rax,0xfffffffffffffc38
  41f863:	je     41faa1 <__flatcc_fb_parse@@Base+0xcd1>
  41f869:	jle    41f7d8 <__flatcc_fb_parse@@Base+0xa08>
  41f86f:	cmp    rax,0x5
  41f873:	je     41fbfc <__flatcc_fb_parse@@Base+0xe2c>
  41f879:	jg     41f998 <__flatcc_fb_parse@@Base+0xbc8>
  41f87f:	cmp    rax,0xfffffffffffffc3a
  41f885:	je     41fb91 <__flatcc_fb_parse@@Base+0xdc1>
  41f88b:	jl     41fb08 <__flatcc_fb_parse@@Base+0xd38>
  41f891:	cmp    rax,0xfffffffffffffc3b
  41f897:	jne    41f80e <__flatcc_fb_parse@@Base+0xa3e>
  41f89d:	mov    rdi,r13
  41f8a0:	lea    rbp,[r13+0x208]
  41f8a7:	call   41d280 <__flatcc_fb_default_error_out@@Base+0x100>
  41f8ac:	cmp    WORD PTR [r13+0x218],0x0
  41f8b5:	jne    42066e <__flatcc_fb_parse@@Base+0x189e>
  41f8bb:	mov    rsi,QWORD PTR [r13+0x48]
  41f8bf:	cmp    QWORD PTR [rsi+0x20],0x13
  41f8c4:	jne    420696 <__flatcc_fb_parse@@Base+0x18c6>
  41f8ca:	mov    rdi,r13
  41f8cd:	call   41d280 <__flatcc_fb_default_error_out@@Base+0x100>
  41f8d2:	mov    rsi,rbp
  41f8d5:	mov    rdi,r13
  41f8d8:	mov    r12,QWORD PTR [r13+0x48]
  41f8dc:	call   41dbb0 <__flatcc_error_report@@Base+0x630>
  41f8e1:	cmp    QWORD PTR [r13+0x208],0x0
  41f8e9:	je     41f91c <__flatcc_fb_parse@@Base+0xb4c>
  41f8eb:	cmp    DWORD PTR [r13+0x210],0x4
  41f8f3:	je     41f91c <__flatcc_fb_parse@@Base+0xb4c>
  41f8f5:	mov    eax,0x1
  41f8fa:	lea    rdx,[rip+0x270cf]        # 4469d0 <fb_schema_table_missing@@Base+0x660>
  41f901:	xor    r9d,r9d
  41f904:	mov    WORD PTR [r13+0x218],ax
  41f90c:	xor    r8d,r8d
  41f90f:	xor    ecx,ecx
  41f911:	mov    rsi,r12
  41f914:	mov    rdi,r13
  41f917:	call   41d580 <__flatcc_error_report@@Base>
  41f91c:	mov    rsi,QWORD PTR [r13+0x48]
  41f920:	cmp    QWORD PTR [rsi+0x20],0x3b
  41f925:	jne    420783 <__flatcc_fb_parse@@Base+0x19b3>
  41f92b:	mov    rdi,r13
  41f92e:	call   41d280 <__flatcc_fb_default_error_out@@Base+0x100>
  41f933:	mov    rcx,QWORD PTR [r13+0x48]
  41f937:	cmp    rbx,rcx
  41f93a:	jne    41f835 <__flatcc_fb_parse@@Base+0xa65>
  41f940:	mov    eax,DWORD PTR [r13+0xd0]
  41f947:	test   eax,eax
  41f949:	jne    41f970 <__flatcc_fb_parse@@Base+0xba0>
  41f94b:	lea    rdx,[rip+0x27648]        # 446f9a <fb_schema_table_missing@@Base+0xc2a>
  41f952:	xor    r9d,r9d
  41f955:	xor    r8d,r8d
  41f958:	xor    ecx,ecx
  41f95a:	mov    rsi,rbx
  41f95d:	mov    rdi,r13
  41f960:	call   41d580 <__flatcc_error_report@@Base>
  41f965:	mov    eax,DWORD PTR [r13+0xd0]
  41f96c:	nop    DWORD PTR [rax+0x0]
  41f970:	mov    rdi,QWORD PTR [rsp+0x38]
  41f975:	xor    rdi,QWORD PTR fs:0x28
  41f97e:	jne    4216b4 <__flatcc_fb_parse@@Base+0x28e4>
  41f984:	add    rsp,0x48
  41f988:	pop    rbx
  41f989:	pop    rbp
  41f98a:	pop    r12
  41f98c:	pop    r13
  41f98e:	pop    r14
  41f990:	pop    r15
  41f992:	ret    
  41f993:	nop    DWORD PTR [rax+rax*1+0x0]
  41f998:	cmp    rax,0x1b
  41f99c:	je     42028d <__flatcc_fb_parse@@Base+0x14bd>
  41f9a2:	cmp    rax,0x7b
  41f9a6:	je     420271 <__flatcc_fb_parse@@Base+0x14a1>
  41f9ac:	cmp    rax,0x7
  41f9b0:	jne    41f80e <__flatcc_fb_parse@@Base+0xa3e>
  41f9b6:	lea    r8,[rip+0x27344]        # 446d01 <fb_schema_table_missing@@Base+0x991>
  41f9bd:	lea    rdx,[rip+0x2727c]        # 446c40 <fb_schema_table_missing@@Base+0x8d0>
  41f9c4:	mov    r9d,0x1
  41f9ca:	xor    ecx,ecx
  41f9cc:	mov    rdi,r13
  41f9cf:	call   41d580 <__flatcc_error_report@@Base>
  41f9d4:	jmp    41f828 <__flatcc_fb_parse@@Base+0xa58>
  41f9d9:	nop    DWORD PTR [rax+0x0]
  41f9e0:	cmp    rax,0xfffffffffffffc36
  41f9e6:	je     41fc78 <__flatcc_fb_parse@@Base+0xea8>
  41f9ec:	jg     41fc1f <__flatcc_fb_parse@@Base+0xe4f>
  41f9f2:	cmp    rax,0xfffffffffffffc35
  41f9f8:	jne    41f80e <__flatcc_fb_parse@@Base+0xa3e>
  41f9fe:	lea    rdx,[rip+0x27163]        # 446b68 <fb_schema_table_missing@@Base+0x7f8>
  41fa05:	xor    r9d,r9d
  41fa08:	xor    r8d,r8d
  41fa0b:	xor    ecx,ecx
  41fa0d:	mov    rdi,r13
  41fa10:	call   41d580 <__flatcc_error_report@@Base>
  41fa15:	jmp    41f828 <__flatcc_fb_parse@@Base+0xa58>
  41fa1a:	mov    rdi,r13
  41fa1d:	call   41d280 <__flatcc_fb_default_error_out@@Base+0x100>
  41fa22:	mov    rsi,QWORD PTR [r13+0x60]
  41fa26:	lea    rax,[rsi+0xd0]
  41fa2d:	cmp    rax,QWORD PTR [r13+0x50]
  41fa31:	ja     42052a <__flatcc_fb_parse@@Base+0x175a>
  41fa37:	mov    QWORD PTR [r13+0x60],rax
  41fa3b:	mov    rax,QWORD PTR [r13+0x238]
  41fa42:	mov    QWORD PTR [rsi],rax
  41fa45:	mov    eax,0x1
  41fa4a:	mov    WORD PTR [rsi+0x10],ax
  41fa4e:	mov    rax,QWORD PTR [r13+0x340]
  41fa55:	mov    QWORD PTR [r13+0x238],rsi
  41fa5c:	mov    QWORD PTR [rsi+0x18],rax
  41fa60:	mov    rax,QWORD PTR [r13+0x40]
  41fa64:	test   rax,rax
  41fa67:	je     41fa81 <__flatcc_fb_parse@@Base+0xcb1>
  41fa69:	xor    ecx,ecx
  41fa6b:	jmp    41fa73 <__flatcc_fb_parse@@Base+0xca3>
  41fa6d:	nop    DWORD PTR [rax]
  41fa70:	mov    rax,rdx
  41fa73:	mov    rdx,QWORD PTR [rax]
  41fa76:	mov    QWORD PTR [rax],rcx
  41fa79:	mov    rcx,rax
  41fa7c:	test   rdx,rdx
  41fa7f:	jne    41fa70 <__flatcc_fb_parse@@Base+0xca0>
  41fa81:	mov    QWORD PTR [rsi+0x40],rax
  41fa85:	mov    rdx,0xfffffffffffffc33
  41fa8c:	mov    QWORD PTR [r13+0x40],0x0
  41fa94:	mov    rdi,r13
  41fa97:	call   41e4b0 <__flatcc_error_report@@Base+0xf30>
  41fa9c:	jmp    41f828 <__flatcc_fb_parse@@Base+0xa58>
  41faa1:	mov    rdi,r13
  41faa4:	call   41d280 <__flatcc_fb_default_error_out@@Base+0x100>
  41faa9:	cmp    QWORD PTR [r13+0x248],0x0
  41fab1:	mov    rbp,QWORD PTR [r13+0x48]
  41fab5:	je     41fad1 <__flatcc_fb_parse@@Base+0xd01>
  41fab7:	lea    rdx,[rip+0x2740d]        # 446ecb <fb_schema_table_missing@@Base+0xb5b>
  41fabe:	xor    r9d,r9d
  41fac1:	xor    r8d,r8d
  41fac4:	xor    ecx,ecx
  41fac6:	mov    rsi,rbp
  41fac9:	mov    rdi,r13
  41facc:	call   41d580 <__flatcc_error_report@@Base>
  41fad1:	mov    rsi,QWORD PTR [rsp+0x8]
  41fad6:	mov    rdi,r13
  41fad9:	call   41d740 <__flatcc_error_report@@Base+0x1c0>
  41fade:	mov    rax,QWORD PTR [r13+0x340]
  41fae5:	lea    rdx,[rip+0x26f0c]        # 4469f8 <fb_schema_table_missing@@Base+0x688>
  41faec:	mov    rcx,rbp
  41faef:	mov    esi,0x3b
  41faf4:	mov    rdi,r13
  41faf7:	mov    QWORD PTR [r13+0x258],rax
  41fafe:	call   41d880 <__flatcc_error_report@@Base+0x300>
  41fb03:	jmp    41f828 <__flatcc_fb_parse@@Base+0xa58>
  41fb08:	mov    rdi,r13
  41fb0b:	call   41d280 <__flatcc_fb_default_error_out@@Base+0x100>
  41fb10:	mov    rsi,QWORD PTR [r13+0x60]
  41fb14:	lea    rax,[rsi+0xd0]
  41fb1b:	cmp    rax,QWORD PTR [r13+0x50]
  41fb1f:	ja     4204ed <__flatcc_fb_parse@@Base+0x171d>
  41fb25:	mov    QWORD PTR [r13+0x60],rax
  41fb29:	mov    rax,QWORD PTR [r13+0x238]
  41fb30:	mov    r14d,0x2
  41fb36:	mov    WORD PTR [rsi+0x10],r14w
  41fb3b:	mov    QWORD PTR [rsi],rax
  41fb3e:	mov    rax,QWORD PTR [r13+0x340]
  41fb45:	mov    QWORD PTR [r13+0x238],rsi
  41fb4c:	mov    QWORD PTR [rsi+0x18],rax
  41fb50:	mov    rax,QWORD PTR [r13+0x40]
  41fb54:	test   rax,rax
  41fb57:	je     41fb71 <__flatcc_fb_parse@@Base+0xda1>
  41fb59:	xor    ecx,ecx
  41fb5b:	jmp    41fb63 <__flatcc_fb_parse@@Base+0xd93>
  41fb5d:	nop    DWORD PTR [rax]
  41fb60:	mov    rax,rdx
  41fb63:	mov    rdx,QWORD PTR [rax]
  41fb66:	mov    QWORD PTR [rax],rcx
  41fb69:	mov    rcx,rax
  41fb6c:	test   rdx,rdx
  41fb6f:	jne    41fb60 <__flatcc_fb_parse@@Base+0xd90>
  41fb71:	mov    QWORD PTR [rsi+0x40],rax
  41fb75:	mov    rdx,0xfffffffffffffc39
  41fb7c:	mov    QWORD PTR [r13+0x40],0x0
  41fb84:	mov    rdi,r13
  41fb87:	call   41e4b0 <__flatcc_error_report@@Base+0xf30>
  41fb8c:	jmp    41f828 <__flatcc_fb_parse@@Base+0xa58>
  41fb91:	mov    rdi,r13
  41fb94:	lea    rbp,[r13+0x220]
  41fb9b:	call   41d280 <__flatcc_fb_default_error_out@@Base+0x100>
  41fba0:	cmp    WORD PTR [r13+0x230],0x2
  41fba9:	je     420891 <__flatcc_fb_parse@@Base+0x1ac1>
  41fbaf:	mov    rsi,QWORD PTR [r13+0x48]
  41fbb3:	cmp    QWORD PTR [rsi+0x20],0x13
  41fbb8:	jne    420717 <__flatcc_fb_parse@@Base+0x1947>
  41fbbe:	mov    rdi,r13
  41fbc1:	call   41d280 <__flatcc_fb_default_error_out@@Base+0x100>
  41fbc6:	mov    rsi,rbp
  41fbc9:	mov    rdi,r13
  41fbcc:	call   41dbb0 <__flatcc_error_report@@Base+0x630>
  41fbd1:	mov    rsi,QWORD PTR [r13+0x48]
  41fbd5:	cmp    QWORD PTR [rsi+0x20],0x3b
  41fbda:	je     41f92b <__flatcc_fb_parse@@Base+0xb5b>
  41fbe0:	lea    rdx,[rip+0x2728f]        # 446e76 <fb_schema_table_missing@@Base+0xb06>
  41fbe7:	xor    r9d,r9d
  41fbea:	xor    r8d,r8d
  41fbed:	xor    ecx,ecx
  41fbef:	mov    rdi,r13
  41fbf2:	call   41d580 <__flatcc_error_report@@Base>
  41fbf7:	jmp    41f828 <__flatcc_fb_parse@@Base+0xa58>
  41fbfc:	lea    r8,[rip+0x270fe]        # 446d01 <fb_schema_table_missing@@Base+0x991>
  41fc03:	lea    rdx,[rip+0x26ffe]        # 446c08 <fb_schema_table_missing@@Base+0x898>
  41fc0a:	mov    r9d,0x1
  41fc10:	xor    ecx,ecx
  41fc12:	mov    rdi,r13
  41fc15:	call   41d580 <__flatcc_error_report@@Base>
  41fc1a:	jmp    41f828 <__flatcc_fb_parse@@Base+0xa58>
  41fc1f:	mov    rdi,r13
  41fc22:	call   41d280 <__flatcc_fb_default_error_out@@Base+0x100>
  41fc27:	mov    rbp,QWORD PTR [r13+0x48]
  41fc2b:	mov    QWORD PTR [rsp+0x28],0x0
  41fc34:	mov    rax,QWORD PTR [rbp+0x20]
  41fc38:	cmp    rax,0x3b
  41fc3c:	je     42039d <__flatcc_fb_parse@@Base+0x15cd>
  41fc42:	cmp    rax,0x9
  41fc46:	je     420f24 <__flatcc_fb_parse@@Base+0x2154>
  41fc4c:	lea    rdx,[rip+0x26ce5]        # 446938 <fb_schema_table_missing@@Base+0x5c8>
  41fc53:	xor    r9d,r9d
  41fc56:	xor    r8d,r8d
  41fc59:	xor    ecx,ecx
  41fc5b:	mov    rsi,rbp
  41fc5e:	mov    rdi,r13
  41fc61:	call   41d580 <__flatcc_error_report@@Base>
  41fc66:	mov    esi,0x3b
  41fc6b:	mov    rdi,r13
  41fc6e:	call   41d3d0 <__flatcc_fb_default_error_out@@Base+0x250>
  41fc73:	jmp    41f828 <__flatcc_fb_parse@@Base+0xa58>
  41fc78:	mov    rdi,r13
  41fc7b:	call   41d280 <__flatcc_fb_default_error_out@@Base+0x100>
  41fc80:	mov    rbp,QWORD PTR [r13+0x60]
  41fc84:	lea    rax,[rbp+0x30]
  41fc88:	cmp    rax,QWORD PTR [r13+0x50]
  41fc8c:	ja     42061e <__flatcc_fb_parse@@Base+0x184e>
  41fc92:	mov    r12,QWORD PTR [r13+0x48]
  41fc96:	mov    QWORD PTR [r13+0x60],rax
  41fc9a:	mov    rax,QWORD PTR [r13+0x200]
  41fca1:	cmp    QWORD PTR [r12+0x20],0x13
  41fca7:	mov    QWORD PTR [rbp+0x0],rax
  41fcab:	mov    QWORD PTR [r13+0x200],rbp
  41fcb2:	jne    4206aa <__flatcc_fb_parse@@Base+0x18da>
  41fcb8:	mov    rdi,r13
  41fcbb:	call   41d280 <__flatcc_fb_default_error_out@@Base+0x100>
  41fcc0:	lea    rsi,[rbp+0x8]
  41fcc4:	mov    rdi,r13
  41fcc7:	call   41dbb0 <__flatcc_error_report@@Base+0x630>
  41fccc:	mov    eax,DWORD PTR [rbp+0x10]
  41fccf:	test   eax,eax
  41fcd1:	jne    41fced <__flatcc_fb_parse@@Base+0xf1d>
  41fcd3:	lea    rdx,[rip+0x26d6e]        # 446a48 <fb_schema_table_missing@@Base+0x6d8>
  41fcda:	xor    r9d,r9d
  41fcdd:	xor    r8d,r8d
  41fce0:	xor    ecx,ecx
  41fce2:	mov    rsi,r12
  41fce5:	mov    rdi,r13
  41fce8:	call   41d580 <__flatcc_error_report@@Base>
  41fced:	mov    rsi,QWORD PTR [r13+0x48]
  41fcf1:	cmp    QWORD PTR [rsi+0x20],0x3b
  41fcf6:	je     41f92b <__flatcc_fb_parse@@Base+0xb5b>
  41fcfc:	lea    rdx,[rip+0x271de]        # 446ee1 <fb_schema_table_missing@@Base+0xb71>
  41fd03:	xor    r9d,r9d
  41fd06:	xor    r8d,r8d
  41fd09:	xor    ecx,ecx
  41fd0b:	mov    rdi,r13
  41fd0e:	call   41d580 <__flatcc_error_report@@Base>
  41fd13:	jmp    41f828 <__flatcc_fb_parse@@Base+0xa58>
  41fd18:	mov    rdi,r13
  41fd1b:	call   41d280 <__flatcc_fb_default_error_out@@Base+0x100>
  41fd20:	mov    rbp,QWORD PTR [r13+0x60]
  41fd24:	lea    rax,[rbp+0xd0]
  41fd2b:	cmp    rax,QWORD PTR [r13+0x50]
  41fd2f:	ja     4205e1 <__flatcc_fb_parse@@Base+0x1811>
  41fd35:	mov    QWORD PTR [r13+0x60],rax
  41fd39:	mov    rax,QWORD PTR [r13+0x238]
  41fd40:	mov    r12d,0x3
  41fd46:	mov    WORD PTR [rbp+0x10],r12w
  41fd4b:	mov    QWORD PTR [rbp+0x0],rax
  41fd4f:	mov    rax,QWORD PTR [r13+0x340]
  41fd56:	mov    QWORD PTR [r13+0x238],rbp
  41fd5d:	mov    QWORD PTR [rbp+0x18],rax
  41fd61:	mov    rax,QWORD PTR [r13+0x40]
  41fd65:	test   rax,rax
  41fd68:	je     41fd81 <__flatcc_fb_parse@@Base+0xfb1>
  41fd6a:	xor    ecx,ecx
  41fd6c:	jmp    41fd73 <__flatcc_fb_parse@@Base+0xfa3>
  41fd6e:	xchg   ax,ax
  41fd70:	mov    rax,rdx
  41fd73:	mov    rdx,QWORD PTR [rax]
  41fd76:	mov    QWORD PTR [rax],rcx
  41fd79:	mov    rcx,rax
  41fd7c:	test   rdx,rdx
  41fd7f:	jne    41fd70 <__flatcc_fb_parse@@Base+0xfa0>
  41fd81:	mov    r12,QWORD PTR [r13+0x48]
  41fd85:	mov    QWORD PTR [rbp+0x40],rax
  41fd89:	mov    QWORD PTR [r13+0x40],0x0
  41fd91:	cmp    QWORD PTR [r12+0x20],0x9
  41fd97:	jne    4206c9 <__flatcc_fb_parse@@Base+0x18f9>
  41fd9d:	mov    rdi,r13
  41fda0:	call   41d280 <__flatcc_fb_default_error_out@@Base+0x100>
  41fda5:	mov    rax,QWORD PTR [r13+0x48]
  41fda9:	mov    QWORD PTR [rbp+0x8],r12
  41fdad:	cmp    QWORD PTR [rax+0x20],0x3a
  41fdb2:	je     4203bd <__flatcc_fb_parse@@Base+0x15ed>
  41fdb8:	mov    rdi,r13
  41fdbb:	call   41e320 <__flatcc_error_report@@Base+0xda0>
  41fdc0:	mov    QWORD PTR [rbp+0x38],rax
  41fdc4:	mov    rax,QWORD PTR [r13+0x48]
  41fdc8:	cmp    QWORD PTR [rax+0x20],0x7b
  41fdcd:	mov    QWORD PTR [rsp+0x10],rax
  41fdd2:	jne    420762 <__flatcc_fb_parse@@Base+0x1992>
  41fdd8:	mov    rdi,r13
  41fddb:	call   41d280 <__flatcc_fb_default_error_out@@Base+0x100>
  41fde0:	mov    r14,QWORD PTR [r13+0x48]
  41fde4:	cmp    QWORD PTR [r14+0x20],0x9
  41fde9:	jne    41fecf <__flatcc_fb_parse@@Base+0x10ff>
  41fdef:	nop
  41fdf0:	mov    rdi,r13
  41fdf3:	call   41d280 <__flatcc_fb_default_error_out@@Base+0x100>
  41fdf8:	cmp    DWORD PTR [r13+0xd0],0x9
  41fe00:	jg     41fee9 <__flatcc_fb_parse@@Base+0x1119>
  41fe06:	mov    r12,QWORD PTR [r13+0x60]
  41fe0a:	lea    rax,[r12+0xb0]
  41fe12:	cmp    rax,QWORD PTR [r13+0x50]
  41fe16:	ja     41ff00 <__flatcc_fb_parse@@Base+0x1130>
  41fe1c:	mov    QWORD PTR [r13+0x60],rax
  41fe20:	mov    rax,QWORD PTR [rbp+0x28]
  41fe24:	mov    r11d,0x5
  41fe2a:	mov    WORD PTR [r12+0x10],r11w
  41fe30:	mov    QWORD PTR [r12],rax
  41fe34:	mov    QWORD PTR [rbp+0x28],r12
  41fe38:	mov    rax,QWORD PTR [r13+0x40]
  41fe3c:	test   rax,rax
  41fe3f:	je     41fe59 <__flatcc_fb_parse@@Base+0x1089>
  41fe41:	xor    ecx,ecx
  41fe43:	jmp    41fe4b <__flatcc_fb_parse@@Base+0x107b>
  41fe45:	nop    DWORD PTR [rax]
  41fe48:	mov    rax,rdx
  41fe4b:	mov    rdx,QWORD PTR [rax]
  41fe4e:	mov    QWORD PTR [rax],rcx
  41fe51:	mov    rcx,rax
  41fe54:	test   rdx,rdx
  41fe57:	jne    41fe48 <__flatcc_fb_parse@@Base+0x1078>
  41fe59:	mov    QWORD PTR [r12+0x68],rax
  41fe5e:	mov    rax,QWORD PTR [r13+0x48]
  41fe62:	mov    QWORD PTR [r13+0x40],0x0
  41fe6a:	mov    QWORD PTR [r12+0x8],r14
  41fe6f:	cmp    QWORD PTR [rax+0x20],0x3d
  41fe74:	jne    41fe98 <__flatcc_fb_parse@@Base+0x10c8>
  41fe76:	mov    rdi,r13
  41fe79:	call   41d280 <__flatcc_fb_default_error_out@@Base+0x100>
  41fe7e:	lea    rsi,[r12+0x48]
  41fe83:	lea    rcx,[rip+0x270be]        # 446f48 <fb_schema_table_missing@@Base+0xbd8>
  41fe8a:	xor    edx,edx
  41fe8c:	mov    rdi,r13
  41fe8f:	call   41dd20 <__flatcc_error_report@@Base+0x7a0>
  41fe94:	mov    rax,QWORD PTR [r13+0x48]
  41fe98:	cmp    QWORD PTR [rax+0x20],0x2c
  41fe9d:	jne    4202b0 <__flatcc_fb_parse@@Base+0x14e0>
  41fea3:	mov    rdi,r13
  41fea6:	call   41d280 <__flatcc_fb_default_error_out@@Base+0x100>
  41feab:	mov    r14,QWORD PTR [r13+0x48]
  41feaf:	mov    rax,QWORD PTR [r14+0x20]
  41feb3:	cmp    rax,0x7d
  41feb7:	je     4202b0 <__flatcc_fb_parse@@Base+0x14e0>
  41febd:	cmp    rax,0x9
  41fec1:	mov    QWORD PTR [r13+0x40],0x0
  41fec9:	je     41fdf0 <__flatcc_fb_parse@@Base+0x1020>
  41fecf:	lea    rdx,[rip+0x27057]        # 446f2d <fb_schema_table_missing@@Base+0xbbd>
  41fed6:	xor    r9d,r9d
  41fed9:	xor    r8d,r8d
  41fedc:	xor    ecx,ecx
  41fede:	mov    rsi,r14
  41fee1:	mov    rdi,r13
  41fee4:	call   41d580 <__flatcc_error_report@@Base>
  41fee9:	mov    esi,0x7d
  41feee:	mov    rdi,r13
  41fef1:	call   41d3d0 <__flatcc_fb_default_error_out@@Base+0x250>
  41fef6:	jmp    41f828 <__flatcc_fb_parse@@Base+0xa58>
  41fefb:	nop    DWORD PTR [rax+rax*1+0x0]
  41ff00:	mov    esi,0x1
  41ff05:	mov    edi,0x10000
  41ff0a:	call   405140 <calloc@plt>
  41ff0f:	test   rax,rax
  41ff12:	je     4216d8 <__flatcc_fb_parse@@Base+0x2908>
  41ff18:	mov    rdx,QWORD PTR [r13+0x58]
  41ff1c:	lea    r12,[rax+0x10]
  41ff20:	mov    QWORD PTR [r13+0x58],rax
  41ff24:	mov    QWORD PTR [rax],rdx
  41ff27:	lea    rdx,[rax+0x10000]
  41ff2e:	add    rax,0xc0
  41ff34:	mov    QWORD PTR [r13+0x50],rdx
  41ff38:	jmp    41fe1c <__flatcc_fb_parse@@Base+0x104c>
  41ff3d:	mov    rdi,r13
  41ff40:	call   41d280 <__flatcc_fb_default_error_out@@Base+0x100>
  41ff45:	mov    rbp,QWORD PTR [r13+0x60]
  41ff49:	lea    rax,[rbp+0xd0]
  41ff50:	cmp    rax,QWORD PTR [r13+0x50]
  41ff54:	ja     4205a4 <__flatcc_fb_parse@@Base+0x17d4>
  41ff5a:	mov    QWORD PTR [r13+0x60],rax
  41ff5e:	mov    rax,QWORD PTR [r13+0x238]
  41ff65:	mov    r10d,0x4
  41ff6b:	mov    WORD PTR [rbp+0x10],r10w
  41ff70:	mov    QWORD PTR [rbp+0x0],rax
  41ff74:	mov    rax,QWORD PTR [r13+0x340]
  41ff7b:	mov    QWORD PTR [r13+0x238],rbp
  41ff82:	mov    QWORD PTR [rbp+0x18],rax
  41ff86:	mov    rax,QWORD PTR [r13+0x40]
  41ff8a:	test   rax,rax
  41ff8d:	je     41ffa9 <__flatcc_fb_parse@@Base+0x11d9>
  41ff8f:	xor    ecx,ecx
  41ff91:	jmp    41ff9b <__flatcc_fb_parse@@Base+0x11cb>
  41ff93:	nop    DWORD PTR [rax+rax*1+0x0]
  41ff98:	mov    rax,rdx
  41ff9b:	mov    rdx,QWORD PTR [rax]
  41ff9e:	mov    QWORD PTR [rax],rcx
  41ffa1:	mov    rcx,rax
  41ffa4:	test   rdx,rdx
  41ffa7:	jne    41ff98 <__flatcc_fb_parse@@Base+0x11c8>
  41ffa9:	mov    r12,QWORD PTR [r13+0x48]
  41ffad:	mov    QWORD PTR [rbp+0x40],rax
  41ffb1:	mov    QWORD PTR [r13+0x40],0x0
  41ffb9:	cmp    QWORD PTR [r12+0x20],0x9
  41ffbf:	jne    4206f0 <__flatcc_fb_parse@@Base+0x1920>
  41ffc5:	mov    rdi,r13
  41ffc8:	call   41d280 <__flatcc_fb_default_error_out@@Base+0x100>
  41ffcd:	mov    QWORD PTR [rbp+0x8],r12
  41ffd1:	mov    rdi,r13
  41ffd4:	call   41e320 <__flatcc_error_report@@Base+0xda0>
  41ffd9:	mov    QWORD PTR [rbp+0x38],rax
  41ffdd:	mov    rax,QWORD PTR [r13+0x48]
  41ffe1:	cmp    QWORD PTR [rax+0x20],0x7b
  41ffe6:	mov    QWORD PTR [rsp+0x10],rax
  41ffeb:	jne    42079f <__flatcc_fb_parse@@Base+0x19cf>
  41fff1:	mov    rdi,r13
  41fff4:	call   41d280 <__flatcc_fb_default_error_out@@Base+0x100>
  41fff9:	mov    r12,QWORD PTR [r13+0x48]
  41fffd:	cmp    QWORD PTR [r12+0x20],0x9
  420003:	jne    42013c <__flatcc_fb_parse@@Base+0x136c>
  420009:	nop    DWORD PTR [rax+0x0]
  420010:	cmp    DWORD PTR [r13+0xd0],0x9
  420018:	jg     420156 <__flatcc_fb_parse@@Base+0x1386>
  42001e:	mov    r14,QWORD PTR [r13+0x60]
  420022:	lea    rax,[r14+0xb0]
  420029:	cmp    rax,QWORD PTR [r13+0x50]
  42002d:	ja     4201b0 <__flatcc_fb_parse@@Base+0x13e0>
  420033:	mov    QWORD PTR [r13+0x60],rax
  420037:	mov    rax,QWORD PTR [rbp+0x28]
  42003b:	mov    r9d,0x5
  420041:	mov    WORD PTR [r14+0x10],r9w
  420046:	mov    QWORD PTR [r14],rax
  420049:	mov    QWORD PTR [rbp+0x28],r14
  42004d:	mov    rax,QWORD PTR [r13+0x40]
  420051:	test   rax,rax
  420054:	je     420071 <__flatcc_fb_parse@@Base+0x12a1>
  420056:	xor    ecx,ecx
  420058:	jmp    420063 <__flatcc_fb_parse@@Base+0x1293>
  42005a:	nop    WORD PTR [rax+rax*1+0x0]
  420060:	mov    rax,rdx
  420063:	mov    rdx,QWORD PTR [rax]
  420066:	mov    QWORD PTR [rax],rcx
  420069:	mov    rcx,rax
  42006c:	test   rdx,rdx
  42006f:	jne    420060 <__flatcc_fb_parse@@Base+0x1290>
  420071:	mov    QWORD PTR [r14+0x68],rax
  420075:	mov    rsi,r15
  420078:	mov    QWORD PTR [r13+0x40],0x0
  420080:	mov    rdi,r13
  420083:	call   41d740 <__flatcc_error_report@@Base+0x1c0>
  420088:	mov    rax,QWORD PTR [rsp+0x30]
  42008d:	mov    r8d,0xc
  420093:	mov    WORD PTR [r14+0x28],r8w
  420098:	mov    QWORD PTR [r14+0x18],rax
  42009c:	mov    rdx,QWORD PTR [rax]
  42009f:	test   rdx,rdx
  4200a2:	jne    4200b3 <__flatcc_fb_parse@@Base+0x12e3>
  4200a4:	jmp    4203b5 <__flatcc_fb_parse@@Base+0x15e5>
  4200a9:	nop    DWORD PTR [rax+0x0]
  4200b0:	mov    rdx,rax
  4200b3:	mov    rax,QWORD PTR [rdx]
  4200b6:	test   rax,rax
  4200b9:	jne    4200b0 <__flatcc_fb_parse@@Base+0x12e0>
  4200bb:	mov    QWORD PTR [rsp+0x30],rdx
  4200c0:	mov    rax,QWORD PTR [rdx+0x8]
  4200c4:	mov    QWORD PTR [r14+0x8],rax
  4200c8:	mov    rax,QWORD PTR [r13+0x48]
  4200cc:	mov    rax,QWORD PTR [rax+0x20]
  4200d0:	cmp    rax,0x3a
  4200d4:	je     420168 <__flatcc_fb_parse@@Base+0x1398>
  4200da:	cmp    rax,0x3d
  4200de:	jne    420105 <__flatcc_fb_parse@@Base+0x1335>
  4200e0:	mov    rdi,r13
  4200e3:	call   41d280 <__flatcc_fb_default_error_out@@Base+0x100>
  4200e8:	lea    rsi,[r14+0x48]
  4200ec:	lea    rcx,[rip+0x26e55]        # 446f48 <fb_schema_table_missing@@Base+0xbd8>
  4200f3:	xor    edx,edx
  4200f5:	mov    rdi,r13
  4200f8:	call   41dd20 <__flatcc_error_report@@Base+0x7a0>
  4200fd:	mov    rax,QWORD PTR [r13+0x48]
  420101:	mov    rax,QWORD PTR [rax+0x20]
  420105:	cmp    rax,0x2c
  420109:	jne    4202fa <__flatcc_fb_parse@@Base+0x152a>
  42010f:	mov    rdi,r13
  420112:	call   41d280 <__flatcc_fb_default_error_out@@Base+0x100>
  420117:	mov    r12,QWORD PTR [r13+0x48]
  42011b:	mov    rax,QWORD PTR [r12+0x20]
  420120:	cmp    rax,0x7d
  420124:	je     4202fa <__flatcc_fb_parse@@Base+0x152a>
  42012a:	cmp    rax,0x9
  42012e:	mov    QWORD PTR [r13+0x40],0x0
  420136:	je     420010 <__flatcc_fb_parse@@Base+0x1240>
  42013c:	lea    rdx,[rip+0x26e20]        # 446f63 <fb_schema_table_missing@@Base+0xbf3>
  420143:	xor    r9d,r9d
  420146:	xor    r8d,r8d
  420149:	xor    ecx,ecx
  42014b:	mov    rsi,r12
  42014e:	mov    rdi,r13
  420151:	call   41d580 <__flatcc_error_report@@Base>
  420156:	mov    rdi,r13
  420159:	call   41d370 <__flatcc_fb_default_error_out@@Base+0x1f0>
  42015e:	jmp    41f828 <__flatcc_fb_parse@@Base+0xa58>
  420163:	nop    DWORD PTR [rax+rax*1+0x0]
  420168:	mov    rdi,r13
  42016b:	call   41d280 <__flatcc_fb_default_error_out@@Base+0x100>
  420170:	mov    rax,QWORD PTR [r14+0x18]
  420174:	cmp    QWORD PTR [rax],0x0
  420178:	je     420194 <__flatcc_fb_parse@@Base+0x13c4>
  42017a:	lea    rdx,[rip+0x2697f]        # 446b00 <fb_schema_table_missing@@Base+0x790>
  420181:	xor    r9d,r9d
  420184:	xor    r8d,r8d
  420187:	xor    ecx,ecx
  420189:	mov    rsi,r12
  42018c:	mov    rdi,r13
  42018f:	call   41d580 <__flatcc_error_report@@Base>
  420194:	lea    rsi,[r14+0x18]
  420198:	mov    rdi,r13
  42019b:	call   41d8c0 <__flatcc_error_report@@Base+0x340>
  4201a0:	mov    rax,QWORD PTR [r13+0x48]
  4201a4:	mov    rax,QWORD PTR [rax+0x20]
  4201a8:	jmp    4200da <__flatcc_fb_parse@@Base+0x130a>
  4201ad:	nop    DWORD PTR [rax]
  4201b0:	mov    esi,0x1
  4201b5:	mov    edi,0x10000
  4201ba:	call   405140 <calloc@plt>
  4201bf:	test   rax,rax
  4201c2:	je     4216d8 <__flatcc_fb_parse@@Base+0x2908>
  4201c8:	mov    rdx,QWORD PTR [r13+0x58]
  4201cc:	lea    r14,[rax+0x10]
  4201d0:	mov    QWORD PTR [r13+0x58],rax
  4201d4:	mov    QWORD PTR [rax],rdx
  4201d7:	lea    rdx,[rax+0x10000]
  4201de:	add    rax,0xc0
  4201e4:	mov    QWORD PTR [r13+0x50],rdx
  4201e8:	jmp    420033 <__flatcc_fb_parse@@Base+0x1263>
  4201ed:	mov    rdi,r13
  4201f0:	call   41d280 <__flatcc_fb_default_error_out@@Base+0x100>
  4201f5:	mov    rsi,QWORD PTR [r13+0x60]
  4201f9:	lea    rax,[rsi+0xd0]
  420200:	cmp    rax,QWORD PTR [r13+0x50]
  420204:	ja     420567 <__flatcc_fb_parse@@Base+0x1797>
  42020a:	mov    QWORD PTR [r13+0x60],rax
  42020e:	mov    rax,QWORD PTR [r13+0x238]
  420215:	mov    QWORD PTR [rsi],rax
  420218:	xor    eax,eax
  42021a:	mov    WORD PTR [rsi+0x10],ax
  42021e:	mov    rax,QWORD PTR [r13+0x340]
  420225:	mov    QWORD PTR [r13+0x238],rsi
  42022c:	mov    QWORD PTR [rsi+0x18],rax
  420230:	mov    rax,QWORD PTR [r13+0x40]
  420234:	test   rax,rax
  420237:	je     420251 <__flatcc_fb_parse@@Base+0x1481>
  420239:	xor    ecx,ecx
  42023b:	jmp    420243 <__flatcc_fb_parse@@Base+0x1473>
  42023d:	nop    DWORD PTR [rax]
  420240:	mov    rax,rdx
  420243:	mov    rdx,QWORD PTR [rax]
  420246:	mov    QWORD PTR [rax],rcx
  420249:	mov    rcx,rax
  42024c:	test   rdx,rdx
  42024f:	jne    420240 <__flatcc_fb_parse@@Base+0x1470>
  420251:	mov    QWORD PTR [rsi+0x40],rax
  420255:	mov    rdx,0xfffffffffffffc29
  42025c:	mov    QWORD PTR [r13+0x40],0x0
  420264:	mov    rdi,r13
  420267:	call   41e4b0 <__flatcc_error_report@@Base+0xf30>
  42026c:	jmp    41f828 <__flatcc_fb_parse@@Base+0xa58>
  420271:	lea    rdx,[rip+0x26928]        # 446ba0 <fb_schema_table_missing@@Base+0x830>
  420278:	xor    r9d,r9d
  42027b:	xor    r8d,r8d
  42027e:	xor    ecx,ecx
  420280:	mov    rdi,r13
  420283:	call   41d580 <__flatcc_error_report@@Base>
  420288:	jmp    41f828 <__flatcc_fb_parse@@Base+0xa58>
  42028d:	lea    r8,[rip+0x26ceb]        # 446f7f <fb_schema_table_missing@@Base+0xc0f>
  420294:	lea    rdx,[rip+0x26cea]        # 446f85 <fb_schema_table_missing@@Base+0xc15>
  42029b:	mov    r9d,0x5
  4202a1:	xor    ecx,ecx
  4202a3:	mov    rdi,r13
  4202a6:	call   41d580 <__flatcc_error_report@@Base>
  4202ab:	jmp    41f828 <__flatcc_fb_parse@@Base+0xa58>
  4202b0:	mov    rcx,QWORD PTR [rsp+0x10]
  4202b5:	lea    rdx,[rip+0x267d4]        # 446a90 <fb_schema_table_missing@@Base+0x720>
  4202bc:	mov    esi,0x7d
  4202c1:	mov    rdi,r13
  4202c4:	call   41d880 <__flatcc_error_report@@Base+0x300>
  4202c9:	mov    rax,QWORD PTR [rbp+0x28]
  4202cd:	test   rax,rax
  4202d0:	je     4202f1 <__flatcc_fb_parse@@Base+0x1521>
  4202d2:	xor    ecx,ecx
  4202d4:	jmp    4202e3 <__flatcc_fb_parse@@Base+0x1513>
  4202d6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4202e0:	mov    rax,rdx
  4202e3:	mov    rdx,QWORD PTR [rax]
  4202e6:	mov    QWORD PTR [rax],rcx
  4202e9:	mov    rcx,rax
  4202ec:	test   rdx,rdx
  4202ef:	jne    4202e0 <__flatcc_fb_parse@@Base+0x1510>
  4202f1:	mov    QWORD PTR [rbp+0x28],rax
  4202f5:	jmp    41f828 <__flatcc_fb_parse@@Base+0xa58>
  4202fa:	mov    rcx,QWORD PTR [rsp+0x10]
  4202ff:	lea    rdx,[rip+0x2683a]        # 446b40 <fb_schema_table_missing@@Base+0x7d0>
  420306:	mov    esi,0x7d
  42030b:	mov    rdi,r13
  42030e:	call   41d880 <__flatcc_error_report@@Base+0x300>
  420313:	mov    rdx,QWORD PTR [rbp+0x28]
  420317:	test   rdx,rdx
  42031a:	je     420331 <__flatcc_fb_parse@@Base+0x1561>
  42031c:	xor    ecx,ecx
  42031e:	jmp    420323 <__flatcc_fb_parse@@Base+0x1553>
  420320:	mov    rdx,rax
  420323:	mov    rax,QWORD PTR [rdx]
  420326:	mov    QWORD PTR [rdx],rcx
  420329:	mov    rcx,rdx
  42032c:	test   rax,rax
  42032f:	jne    420320 <__flatcc_fb_parse@@Base+0x1550>
  420331:	mov    rsi,QWORD PTR [r13+0x60]
  420335:	mov    QWORD PTR [rbp+0x28],rdx
  420339:	lea    rax,[rsi+0xb0]
  420340:	cmp    rax,QWORD PTR [r13+0x50]
  420344:	ja     420850 <__flatcc_fb_parse@@Base+0x1a80>
  42034a:	mov    edi,0x5
  42034f:	mov    QWORD PTR [r13+0x60],rax
  420353:	mov    QWORD PTR [rsi],rdx
  420356:	mov    WORD PTR [rsi+0x10],di
  42035a:	mov    QWORD PTR [rbp+0x28],rsi
  42035e:	mov    rax,QWORD PTR [r13+0x40]
  420362:	test   rax,rax
  420365:	je     420381 <__flatcc_fb_parse@@Base+0x15b1>
  420367:	xor    ecx,ecx
  420369:	jmp    420373 <__flatcc_fb_parse@@Base+0x15a3>
  42036b:	nop    DWORD PTR [rax+rax*1+0x0]
  420370:	mov    rax,rdx
  420373:	mov    rdx,QWORD PTR [rax]
  420376:	mov    QWORD PTR [rax],rcx
  420379:	mov    rcx,rax
  42037c:	test   rdx,rdx
  42037f:	jne    420370 <__flatcc_fb_parse@@Base+0x15a0>
  420381:	mov    QWORD PTR [rsi+0x68],rax
  420385:	lea    rax,[r13+0x80]
  42038c:	mov    QWORD PTR [r13+0x40],0x0
  420394:	mov    QWORD PTR [rsi+0x8],rax
  420398:	jmp    41f828 <__flatcc_fb_parse@@Base+0xa58>
  42039d:	mov    rdi,r13
  4203a0:	call   41d280 <__flatcc_fb_default_error_out@@Base+0x100>
  4203a5:	mov    QWORD PTR [r13+0x340],0x0
  4203b0:	jmp    41f828 <__flatcc_fb_parse@@Base+0xa58>
  4203b5:	mov    rdx,rax
  4203b8:	jmp    4200c0 <__flatcc_fb_parse@@Base+0x12f0>
  4203bd:	mov    rdi,r13
  4203c0:	call   41d280 <__flatcc_fb_default_error_out@@Base+0x100>
  4203c5:	lea    rsi,[rbp+0x48]
  4203c9:	mov    rdi,r13
  4203cc:	call   41d8c0 <__flatcc_error_report@@Base+0x340>
  4203d1:	cmp    WORD PTR [rbp+0x58],0x8
  4203d6:	mov    rsi,QWORD PTR [rbp+0x48]
  4203da:	jne    420405 <__flatcc_fb_parse@@Base+0x1635>
  4203dc:	mov    rax,QWORD PTR [rsi+0x20]
  4203e0:	add    rax,0x3e4
  4203e6:	cmp    rax,0x15
  4203ea:	ja     41fdb8 <__flatcc_fb_parse@@Base+0xfe8>
  4203f0:	mov    edx,0x1
  4203f5:	shlx   rax,rdx,rax
  4203fa:	test   eax,0x200803
  4203ff:	je     41fdb8 <__flatcc_fb_parse@@Base+0xfe8>
  420405:	lea    rdx,[rip+0x26aec]        # 446ef8 <fb_schema_table_missing@@Base+0xb88>
  42040c:	xor    r9d,r9d
  42040f:	xor    r8d,r8d
  420412:	xor    ecx,ecx
  420414:	mov    rdi,r13
  420417:	call   41d580 <__flatcc_error_report@@Base>
  42041c:	jmp    41fdb8 <__flatcc_fb_parse@@Base+0xfe8>
  420421:	cmp    al,0x2e
  420423:	mov    rcx,r14
  420426:	je     41f520 <__flatcc_fb_parse@@Base+0x750>
  42042c:	cmp    r15,r14
  42042f:	je     420cfd <__flatcc_fb_parse@@Base+0x1f2d>
  420435:	and    eax,0xffffffdf
  420438:	mov    rcx,r14
  42043b:	cmp    al,0x45
  42043d:	jne    420cfd <__flatcc_fb_parse@@Base+0x1f2d>
  420443:	lea    rax,[r14+0x1]
  420447:	cmp    r15,rax
  42044a:	je     420fc0 <__flatcc_fb_parse@@Base+0x21f0>
  420450:	movzx  edx,BYTE PTR [r14+0x1]
  420455:	sub    edx,0x2b
  420458:	and    edx,0xfffffffd
  42045b:	cmp    dl,0x1
  42045e:	adc    rax,0x0
  420462:	jmp    42047b <__flatcc_fb_parse@@Base+0x16ab>
  420464:	nop    DWORD PTR [rax+0x0]
  420468:	movzx  edi,BYTE PTR [rax]
  42046b:	lea    edx,[rdi-0x30]
  42046e:	cmp    dl,0x9
  420471:	ja     41f52c <__flatcc_fb_parse@@Base+0x75c>
  420477:	add    rax,0x1
  42047b:	cmp    r15,rax
  42047e:	mov    r14,rax
  420481:	jne    420468 <__flatcc_fb_parse@@Base+0x1698>
  420483:	jmp    41f529 <__flatcc_fb_parse@@Base+0x759>
  420488:	mov    rdx,QWORD PTR [r13+0x200]
  42048f:	test   rdx,rdx
  420492:	je     4204b1 <__flatcc_fb_parse@@Base+0x16e1>
  420494:	xor    esi,esi
  420496:	jmp    4204a3 <__flatcc_fb_parse@@Base+0x16d3>
  420498:	nop    DWORD PTR [rax+rax*1+0x0]
  4204a0:	mov    rdx,rcx
  4204a3:	mov    rcx,QWORD PTR [rdx]
  4204a6:	mov    QWORD PTR [rdx],rsi
  4204a9:	mov    rsi,rdx
  4204ac:	test   rcx,rcx
  4204af:	jne    4204a0 <__flatcc_fb_parse@@Base+0x16d0>
  4204b1:	mov    QWORD PTR [r13+0x200],rdx
  4204b8:	mov    rdx,QWORD PTR [r13+0x238]
  4204bf:	test   rdx,rdx
  4204c2:	je     4204e1 <__flatcc_fb_parse@@Base+0x1711>
  4204c4:	xor    esi,esi
  4204c6:	jmp    4204d3 <__flatcc_fb_parse@@Base+0x1703>
  4204c8:	nop    DWORD PTR [rax+rax*1+0x0]
  4204d0:	mov    rdx,rcx
  4204d3:	mov    rcx,QWORD PTR [rdx]
  4204d6:	mov    QWORD PTR [rdx],rsi
  4204d9:	mov    rsi,rdx
  4204dc:	test   rcx,rcx
  4204df:	jne    4204d0 <__flatcc_fb_parse@@Base+0x1700>
  4204e1:	mov    QWORD PTR [r13+0x238],rdx
  4204e8:	jmp    41f970 <__flatcc_fb_parse@@Base+0xba0>
  4204ed:	mov    esi,0x1
  4204f2:	mov    edi,0x10000
  4204f7:	call   405140 <calloc@plt>
  4204fc:	test   rax,rax
  4204ff:	je     4216d8 <__flatcc_fb_parse@@Base+0x2908>
  420505:	mov    rdx,QWORD PTR [r13+0x58]
  420509:	lea    rsi,[rax+0x10]
  42050d:	mov    QWORD PTR [r13+0x58],rax
  420511:	mov    QWORD PTR [rax],rdx
  420514:	lea    rdx,[rax+0x10000]
  42051b:	add    rax,0xe0
  420521:	mov    QWORD PTR [r13+0x50],rdx
  420525:	jmp    41fb25 <__flatcc_fb_parse@@Base+0xd55>
  42052a:	mov    esi,0x1
  42052f:	mov    edi,0x10000
  420534:	call   405140 <calloc@plt>
  420539:	test   rax,rax
  42053c:	je     4216d8 <__flatcc_fb_parse@@Base+0x2908>
  420542:	mov    rdx,QWORD PTR [r13+0x58]
  420546:	lea    rsi,[rax+0x10]
  42054a:	mov    QWORD PTR [r13+0x58],rax
  42054e:	mov    QWORD PTR [rax],rdx
  420551:	lea    rdx,[rax+0x10000]
  420558:	add    rax,0xe0
  42055e:	mov    QWORD PTR [r13+0x50],rdx
  420562:	jmp    41fa37 <__flatcc_fb_parse@@Base+0xc67>
  420567:	mov    esi,0x1
  42056c:	mov    edi,0x10000
  420571:	call   405140 <calloc@plt>
  420576:	test   rax,rax
  420579:	je     4216d8 <__flatcc_fb_parse@@Base+0x2908>
  42057f:	mov    rdx,QWORD PTR [r13+0x58]
  420583:	lea    rsi,[rax+0x10]
  420587:	mov    QWORD PTR [r13+0x58],rax
  42058b:	mov    QWORD PTR [rax],rdx
  42058e:	lea    rdx,[rax+0x10000]
  420595:	add    rax,0xe0
  42059b:	mov    QWORD PTR [r13+0x50],rdx
  42059f:	jmp    42020a <__flatcc_fb_parse@@Base+0x143a>
  4205a4:	mov    esi,0x1
  4205a9:	mov    edi,0x10000
  4205ae:	call   405140 <calloc@plt>
  4205b3:	test   rax,rax
  4205b6:	je     4216d8 <__flatcc_fb_parse@@Base+0x2908>
  4205bc:	mov    rdx,QWORD PTR [r13+0x58]
  4205c0:	lea    rbp,[rax+0x10]
  4205c4:	mov    QWORD PTR [r13+0x58],rax
  4205c8:	mov    QWORD PTR [rax],rdx
  4205cb:	lea    rdx,[rax+0x10000]
  4205d2:	add    rax,0xe0
  4205d8:	mov    QWORD PTR [r13+0x50],rdx
  4205dc:	jmp    41ff5a <__flatcc_fb_parse@@Base+0x118a>
  4205e1:	mov    esi,0x1
  4205e6:	mov    edi,0x10000
  4205eb:	call   405140 <calloc@plt>
  4205f0:	test   rax,rax
  4205f3:	je     4216d8 <__flatcc_fb_parse@@Base+0x2908>
  4205f9:	mov    rdx,QWORD PTR [r13+0x58]
  4205fd:	lea    rbp,[rax+0x10]
  420601:	mov    QWORD PTR [r13+0x58],rax
  420605:	mov    QWORD PTR [rax],rdx
  420608:	lea    rdx,[rax+0x10000]
  42060f:	add    rax,0xe0
  420615:	mov    QWORD PTR [r13+0x50],rdx
  420619:	jmp    41fd35 <__flatcc_fb_parse@@Base+0xf65>
  42061e:	mov    esi,0x1
  420623:	mov    edi,0x10000
  420628:	call   405140 <calloc@plt>
  42062d:	test   rax,rax
  420630:	je     4216d8 <__flatcc_fb_parse@@Base+0x2908>
  420636:	mov    rdx,QWORD PTR [r13+0x58]
  42063a:	lea    rbp,[rax+0x10]
  42063e:	mov    QWORD PTR [r13+0x58],rax
  420642:	mov    QWORD PTR [rax],rdx
  420645:	lea    rdx,[rax+0x10000]
  42064c:	add    rax,0x40
  420650:	mov    QWORD PTR [r13+0x50],rdx
  420654:	jmp    41fc92 <__flatcc_fb_parse@@Base+0xec2>
  420659:	mov    rdi,r13
  42065c:	call   41d280 <__flatcc_fb_default_error_out@@Base+0x100>
  420661:	mov    rbp,QWORD PTR [r13+0x48]
  420665:	mov    rdx,QWORD PTR [rbp+0x20]
  420669:	jmp    41f327 <__flatcc_fb_parse@@Base+0x557>
  42066e:	mov    rsi,QWORD PTR [r13+0x48]
  420672:	mov    r9d,DWORD PTR [r13+0x210]
  420679:	lea    rdx,[rip+0x26812]        # 446e92 <fb_schema_table_missing@@Base+0xb22>
  420680:	mov    r8,QWORD PTR [r13+0x208]
  420687:	xor    ecx,ecx
  420689:	mov    rdi,r13
  42068c:	call   41d580 <__flatcc_error_report@@Base>
  420691:	jmp    41f8bb <__flatcc_fb_parse@@Base+0xaeb>
  420696:	xor    r9d,r9d
  420699:	xor    r8d,r8d
  42069c:	xor    ecx,ecx
  42069e:	lea    rdx,[rip+0x26303]        # 4469a8 <fb_schema_table_missing@@Base+0x638>
  4206a5:	jmp    41fc5e <__flatcc_fb_parse@@Base+0xe8e>
  4206aa:	lea    rdx,[rip+0x2636f]        # 446a20 <fb_schema_table_missing@@Base+0x6b0>
  4206b1:	xor    r9d,r9d
  4206b4:	xor    r8d,r8d
  4206b7:	xor    ecx,ecx
  4206b9:	mov    rsi,r12
  4206bc:	mov    rdi,r13
  4206bf:	call   41d580 <__flatcc_error_report@@Base>
  4206c4:	jmp    41fced <__flatcc_fb_parse@@Base+0xf1d>
  4206c9:	lea    rdx,[rip+0x26398]        # 446a68 <fb_schema_table_missing@@Base+0x6f8>
  4206d0:	xor    r9d,r9d
  4206d3:	xor    r8d,r8d
  4206d6:	xor    ecx,ecx
  4206d8:	mov    rsi,r12
  4206db:	mov    rdi,r13
  4206de:	call   41d580 <__flatcc_error_report@@Base>
  4206e3:	mov    QWORD PTR [rbp+0x8],0x0
  4206eb:	jmp    41fee9 <__flatcc_fb_parse@@Base+0x1119>
  4206f0:	lea    rdx,[rip+0x263c1]        # 446ab8 <fb_schema_table_missing@@Base+0x748>
  4206f7:	xor    r9d,r9d
  4206fa:	xor    r8d,r8d
  4206fd:	xor    ecx,ecx
  4206ff:	mov    rsi,r12
  420702:	mov    rdi,r13
  420705:	call   41d580 <__flatcc_error_report@@Base>
  42070a:	mov    QWORD PTR [rbp+0x8],0x0
  420712:	jmp    420156 <__flatcc_fb_parse@@Base+0x1386>
  420717:	xor    r9d,r9d
  42071a:	xor    r8d,r8d
  42071d:	xor    ecx,ecx
  42071f:	lea    rdx,[rip+0x2625a]        # 446980 <fb_schema_table_missing@@Base+0x610>
  420726:	jmp    41fc5e <__flatcc_fb_parse@@Base+0xe8e>
  42072b:	add    r14,0x2
  42072f:	mov    rdx,rbx
  420732:	mov    esi,0x16
  420737:	mov    rcx,r14
  42073a:	mov    rdi,r13
  42073d:	mov    rbx,r14
  420740:	call   41d1b0 <__flatcc_fb_default_error_out@@Base+0x30>
  420745:	jmp    41ee87 <__flatcc_fb_parse@@Base+0xb7>
  42074a:	mov    r12,r15
  42074d:	mov    rcx,r12
  420750:	mov    rdx,r12
  420753:	xor    esi,esi
  420755:	mov    rdi,r13
  420758:	call   41d1b0 <__flatcc_fb_default_error_out@@Base+0x30>
  42075d:	jmp    41f2ea <__flatcc_fb_parse@@Base+0x51a>
  420762:	mov    rsi,QWORD PTR [rsp+0x10]
  420767:	lea    rdx,[rip+0x267a1]        # 446f0f <fb_schema_table_missing@@Base+0xb9f>
  42076e:	xor    r9d,r9d
  420771:	xor    r8d,r8d
  420774:	xor    ecx,ecx
  420776:	mov    rdi,r13
  420779:	call   41d580 <__flatcc_error_report@@Base>
  42077e:	jmp    41fee9 <__flatcc_fb_parse@@Base+0x1119>
  420783:	lea    rdx,[rip+0x26724]        # 446eae <fb_schema_table_missing@@Base+0xb3e>
  42078a:	xor    r9d,r9d
  42078d:	xor    r8d,r8d
  420790:	xor    ecx,ecx
  420792:	mov    rdi,r13
  420795:	call   41d580 <__flatcc_error_report@@Base>
  42079a:	jmp    41f828 <__flatcc_fb_parse@@Base+0xa58>
  42079f:	mov    rsi,QWORD PTR [rsp+0x10]
  4207a4:	lea    rdx,[rip+0x26335]        # 446ae0 <fb_schema_table_missing@@Base+0x770>
  4207ab:	xor    r9d,r9d
  4207ae:	xor    r8d,r8d
  4207b1:	xor    ecx,ecx
  4207b3:	mov    rdi,r13
  4207b6:	call   41d580 <__flatcc_error_report@@Base>
  4207bb:	jmp    420156 <__flatcc_fb_parse@@Base+0x1386>
  4207c0:	cmp    rax,0x6e69663e
  4207c6:	je     421398 <__flatcc_fb_parse@@Base+0x25c8>
  4207cc:	ja     42098b <__flatcc_fb_parse@@Base+0x1bbb>
  4207d2:	cmp    rax,0x676c7535
  4207d8:	je     421422 <__flatcc_fb_parse@@Base+0x2652>
  4207de:	jbe    420fc9 <__flatcc_fb_parse@@Base+0x21f9>
  4207e4:	cmp    rax,0x67747336
  4207ea:	je     4213f8 <__flatcc_fb_parse@@Base+0x2628>
  4207f0:	jbe    4213c2 <__flatcc_fb_parse@@Base+0x25f2>
  4207f6:	cmp    rax,0x6c6f6234
  4207fc:	je     42144c <__flatcc_fb_parse@@Base+0x267c>
  420802:	cmp    rax,0x6d6e6534
  420808:	jne    420fed <__flatcc_fb_parse@@Base+0x221d>
  42080e:	lea    rdi,[rip+0x27f93]        # 4487a8 <fb_schema_table_missing@@Base+0x2438>
  420815:	mov    rsi,rbx
  420818:	mov    edx,0x4
  42081d:	call   405130 <memcmp@plt>
  420822:	cmp    eax,0x1
  420825:	sbb    rsi,rsi
  420828:	and    rsi,0xfffffffffffffc12
  42082f:	add    rsi,0x9
  420833:	jmp    41f27a <__flatcc_fb_parse@@Base+0x4aa>
  420838:	nop    DWORD PTR [rax+rax*1+0x0]
  420840:	and    eax,0xffffffdf
  420843:	cmp    al,0x45
  420845:	jne    41f52c <__flatcc_fb_parse@@Base+0x75c>
  42084b:	jmp    420443 <__flatcc_fb_parse@@Base+0x1673>
  420850:	mov    esi,0x1
  420855:	mov    edi,0x10000
  42085a:	call   405140 <calloc@plt>
  42085f:	test   rax,rax
  420862:	je     4216d8 <__flatcc_fb_parse@@Base+0x2908>
  420868:	mov    rdx,QWORD PTR [r13+0x58]
  42086c:	lea    rsi,[rax+0x10]
  420870:	mov    QWORD PTR [r13+0x58],rax
  420874:	mov    QWORD PTR [rax],rdx
  420877:	lea    rdx,[rax+0x10000]
  42087e:	add    rax,0xc0
  420884:	mov    QWORD PTR [r13+0x50],rdx
  420888:	mov    rdx,QWORD PTR [rbp+0x28]
  42088c:	jmp    42034a <__flatcc_fb_parse@@Base+0x157a>
  420891:	mov    rsi,QWORD PTR [r13+0x48]
  420895:	mov    r9d,DWORD PTR [r13+0x228]
  42089c:	lea    rdx,[rip+0x265b8]        # 446e5b <fb_schema_table_missing@@Base+0xaeb>
  4208a3:	mov    r8,QWORD PTR [r13+0x220]
  4208aa:	xor    ecx,ecx
  4208ac:	mov    rdi,r13
  4208af:	call   41d580 <__flatcc_error_report@@Base>
  4208b4:	jmp    41fbaf <__flatcc_fb_parse@@Base+0xddf>
  4208b9:	mov    rdx,rbx
  4208bc:	mov    rcx,r14
  4208bf:	mov    esi,0x2b
  4208c4:	mov    rdi,r13
  4208c7:	mov    rbx,r14
  4208ca:	call   41d1b0 <__flatcc_fb_default_error_out@@Base+0x30>
  4208cf:	jmp    41ee87 <__flatcc_fb_parse@@Base+0xb7>
  4208d4:	mov    rdx,rbx
  4208d7:	mov    rcx,r14
  4208da:	mov    esi,0x2a
  4208df:	mov    rdi,r13
  4208e2:	mov    rbx,r14
  4208e5:	call   41d1b0 <__flatcc_fb_default_error_out@@Base+0x30>
  4208ea:	jmp    41ee87 <__flatcc_fb_parse@@Base+0xb7>
  4208ef:	mov    rdx,rbx
  4208f2:	mov    rcx,r14
  4208f5:	mov    esi,0x3a
  4208fa:	mov    rdi,r13
  4208fd:	mov    rbx,r14
  420900:	call   41d1b0 <__flatcc_fb_default_error_out@@Base+0x30>
  420905:	jmp    41ee87 <__flatcc_fb_parse@@Base+0xb7>
  42090a:	mov    rdx,rbx
  42090d:	mov    rcx,r14
  420910:	mov    esi,0x3e
  420915:	mov    rdi,r13
  420918:	mov    rbx,r14
  42091b:	call   41d1b0 <__flatcc_fb_default_error_out@@Base+0x30>
  420920:	jmp    41ee87 <__flatcc_fb_parse@@Base+0xb7>
  420925:	cmp    rax,0x65617435
  42092b:	je     4214d6 <__flatcc_fb_parse@@Base+0x2706>
  420931:	jbe    4210a4 <__flatcc_fb_parse@@Base+0x22d4>
  420937:	cmp    rax,0x656e6937
  42093d:	je     4214ac <__flatcc_fb_parse@@Base+0x26dc>
  420943:	jbe    421476 <__flatcc_fb_parse@@Base+0x26a6>
  420949:	cmp    rax,0x656f6436
  42094f:	je     421617 <__flatcc_fb_parse@@Base+0x2847>
  420955:	cmp    rax,0x656f7239
  42095b:	jne    420fed <__flatcc_fb_parse@@Base+0x221d>
  420961:	lea    rdi,[rip+0x264be]        # 446e26 <fb_schema_table_missing@@Base+0xab6>
  420968:	mov    rsi,rbx
  42096b:	mov    edx,0x9
  420970:	call   405130 <memcmp@plt>
  420975:	cmp    eax,0x1
  420978:	sbb    rsi,rsi
  42097b:	and    rsi,0xfffffffffffffc2f
  420982:	add    rsi,0x9
  420986:	jmp    41f27a <__flatcc_fb_parse@@Base+0x4aa>
  42098b:	cmp    rax,0x74697534
  420991:	je     421162 <__flatcc_fb_parse@@Base+0x2392>
  420997:	jbe    42110c <__flatcc_fb_parse@@Base+0x233c>
  42099d:	cmp    rax,0x746e6933
  4209a3:	je     4211c2 <__flatcc_fb_parse@@Base+0x23f2>
  4209a9:	jbe    42118c <__flatcc_fb_parse@@Base+0x23bc>
  4209af:	cmp    rax,0x74737536
  4209b5:	je     4211ec <__flatcc_fb_parse@@Base+0x241c>
  4209bb:	cmp    rax,0x74747336
  4209c1:	jne    420fed <__flatcc_fb_parse@@Base+0x221d>
  4209c7:	lea    rdi,[rip+0x26428]        # 446df6 <fb_schema_table_missing@@Base+0xa86>
  4209ce:	mov    rsi,rbx
  4209d1:	mov    edx,0x6
  4209d6:	call   405130 <memcmp@plt>
  4209db:	cmp    eax,0x1
  4209de:	sbb    rsi,rsi
  4209e1:	and    rsi,0xfffffffffffffc2a
  4209e8:	add    rsi,0x9
  4209ec:	jmp    41f27a <__flatcc_fb_parse@@Base+0x4aa>
  4209f1:	lea    r14,[rbx+0x2]
  4209f5:	mov    rdx,rbx
  4209f8:	mov    esi,0x2d3c
  4209fd:	mov    rdi,r13
  420a00:	mov    rcx,r14
  420a03:	mov    rbx,r14
  420a06:	call   41d1b0 <__flatcc_fb_default_error_out@@Base+0x30>
  420a0b:	jmp    41ee87 <__flatcc_fb_parse@@Base+0xb7>
  420a10:	lea    r14,[rbx+0x2]
  420a14:	cmp    r15,r14
  420a17:	je     4212a0 <__flatcc_fb_parse@@Base+0x24d0>
  420a1d:	movzx  edx,BYTE PTR [rbx+0x2]
  420a21:	cmp    dl,0x2a
  420a24:	sete   al
  420a27:	cmp    dl,0x21
  420a2a:	sete   dl
  420a2d:	or     eax,edx
  420a2f:	movzx  eax,al
  420a32:	xor    edx,edx
  420a34:	add    r14,rax
  420a37:	mov    rax,r14
  420a3a:	sub    rax,rbx
  420a3d:	cmp    rax,0x3
  420a41:	sete   dl
  420a44:	mov    DWORD PTR [r13+0x3c],edx
  420a48:	je     42105c <__flatcc_fb_parse@@Base+0x228c>
  420a4e:	xchg   ax,ax
  420a50:	lea    rdx,[r14-0x1]
  420a54:	jmp    420a63 <__flatcc_fb_parse@@Base+0x1c93>
  420a56:	nop    WORD PTR cs:[rax+rax*1+0x0]
  420a60:	mov    rdx,r12
  420a63:	lea    r12,[rdx+0x1]
  420a67:	cmp    r15,r12
  420a6a:	je     420b30 <__flatcc_fb_parse@@Base+0x1d60>
  420a70:	movzx  eax,BYTE PTR [rdx+0x1]
  420a74:	lea    ecx,[rax-0x20]
  420a77:	cmp    cl,0x5e
  420a7a:	ja     420b62 <__flatcc_fb_parse@@Base+0x1d92>
  420a80:	cmp    al,0x2f
  420a82:	jne    420a60 <__flatcc_fb_parse@@Base+0x1c90>
  420a84:	cmp    BYTE PTR [r12-0x1],0x2a
  420a8a:	jne    420a60 <__flatcc_fb_parse@@Base+0x1c90>
  420a8c:	cmp    r14,rdx
  420a8f:	je     4216dd <__flatcc_fb_parse@@Base+0x290d>
  420a95:	mov    r12,rdx
  420a98:	mov    edx,DWORD PTR [r13+0x3c]
  420a9c:	test   edx,edx
  420a9e:	jne    420b48 <__flatcc_fb_parse@@Base+0x1d78>
  420aa4:	cmp    r15,r12
  420aa7:	je     420f1c <__flatcc_fb_parse@@Base+0x214c>
  420aad:	movzx  eax,BYTE PTR [r12]
  420ab2:	test   al,al
  420ab4:	je     420baa <__flatcc_fb_parse@@Base+0x1dda>
  420aba:	cmp    al,0xa
  420abc:	je     420b80 <__flatcc_fb_parse@@Base+0x1db0>
  420ac2:	cmp    al,0xd
  420ac4:	je     420bd4 <__flatcc_fb_parse@@Base+0x1e04>
  420aca:	lea    edx,[rax-0x20]
  420acd:	cmp    dl,0x5e
  420ad0:	jbe    420bc2 <__flatcc_fb_parse@@Base+0x1df2>
  420ad6:	cmp    al,0x9
  420ad8:	lea    r14,[r12+0x1]
  420add:	jne    420bef <__flatcc_fb_parse@@Base+0x1e1f>
  420ae3:	mov    eax,DWORD PTR [r13+0x3c]
  420ae7:	test   eax,eax
  420ae9:	je     420a50 <__flatcc_fb_parse@@Base+0x1c80>
  420aef:	mov    rcx,r14
  420af2:	mov    rdx,r12
  420af5:	mov    rsi,0xfffffffffffffc3c
  420afc:	mov    rdi,r13
  420aff:	call   41d1b0 <__flatcc_fb_default_error_out@@Base+0x30>
  420b04:	jmp    420a50 <__flatcc_fb_parse@@Base+0x1c80>
  420b09:	lea    r14,[rbx+0x2]
  420b0d:	mov    rdx,rbx
  420b10:	mov    esi,0x2d2d
  420b15:	mov    rdi,r13
  420b18:	mov    rcx,r14
  420b1b:	mov    rbx,r14
  420b1e:	call   41d1b0 <__flatcc_fb_default_error_out@@Base+0x30>
  420b23:	jmp    41ee87 <__flatcc_fb_parse@@Base+0xb7>
  420b28:	nop    DWORD PTR [rax+rax*1+0x0]
  420b30:	cmp    r15,r14
  420b33:	je     420f1c <__flatcc_fb_parse@@Base+0x214c>
  420b39:	mov    eax,DWORD PTR [r13+0x3c]
  420b3d:	test   eax,eax
  420b3f:	je     420f1c <__flatcc_fb_parse@@Base+0x214c>
  420b45:	mov    r12,r15
  420b48:	mov    rcx,r12
  420b4b:	mov    rdx,r14
  420b4e:	mov    rsi,0xfffffffffffffc3c
  420b55:	mov    rdi,r13
  420b58:	call   41d1b0 <__flatcc_fb_default_error_out@@Base+0x30>
  420b5d:	jmp    420aa4 <__flatcc_fb_parse@@Base+0x1cd4>
  420b62:	cmp    r14,r12
  420b65:	je     420ab2 <__flatcc_fb_parse@@Base+0x1ce2>
  420b6b:	mov    edx,DWORD PTR [r13+0x3c]
  420b6f:	test   edx,edx
  420b71:	je     420aad <__flatcc_fb_parse@@Base+0x1cdd>
  420b77:	jmp    420b48 <__flatcc_fb_parse@@Base+0x1d78>
  420b79:	nop    DWORD PTR [rax+0x0]
  420b80:	lea    r14,[r12+0x1]
  420b85:	cmp    r15,r14
  420b88:	je     420b99 <__flatcc_fb_parse@@Base+0x1dc9>
  420b8a:	cmp    BYTE PTR [r12+0x1],0xd
  420b90:	lea    rax,[r12+0x2]
  420b95:	cmove  r14,rax
  420b99:	add    QWORD PTR [r13+0x78],0x1
  420b9e:	mov    QWORD PTR [r13+0x70],r14
  420ba2:	jmp    420a50 <__flatcc_fb_parse@@Base+0x1c80>
  420ba7:	mov    r12,rbx
  420baa:	mov    rcx,r12
  420bad:	mov    rdx,r12
  420bb0:	mov    esi,0x1b
  420bb5:	mov    rdi,r13
  420bb8:	call   41d1b0 <__flatcc_fb_default_error_out@@Base+0x30>
  420bbd:	jmp    42074d <__flatcc_fb_parse@@Base+0x197d>
  420bc2:	lea    rbx,[r12+0x2]
  420bc7:	mov    DWORD PTR [r13+0x3c],0x0
  420bcf:	jmp    41ee87 <__flatcc_fb_parse@@Base+0xb7>
  420bd4:	lea    r14,[r12+0x1]
  420bd9:	cmp    r15,r14
  420bdc:	je     420b99 <__flatcc_fb_parse@@Base+0x1dc9>
  420bde:	cmp    BYTE PTR [r12+0x1],0xa
  420be4:	lea    rax,[r12+0x2]
  420be9:	cmove  r14,rax
  420bed:	jmp    420b99 <__flatcc_fb_parse@@Base+0x1dc9>
  420bef:	mov    rcx,r14
  420bf2:	mov    rdx,r12
  420bf5:	mov    esi,0x7
  420bfa:	mov    rdi,r13
  420bfd:	call   41d1b0 <__flatcc_fb_default_error_out@@Base+0x30>
  420c02:	jmp    420a50 <__flatcc_fb_parse@@Base+0x1c80>
  420c07:	lea    r14,[rbx+0x2]
  420c0b:	cmp    r15,r14
  420c0e:	je     41f663 <__flatcc_fb_parse@@Base+0x893>
  420c14:	cmp    BYTE PTR [rbx+0x2],0xa
  420c18:	lea    rax,[rbx+0x3]
  420c1c:	cmove  r14,rax
  420c20:	jmp    41f663 <__flatcc_fb_parse@@Base+0x893>
  420c25:	mov    rdx,rbx
  420c28:	mov    rcx,r14
  420c2b:	mov    esi,0x2a2a
  420c30:	mov    rdi,r13
  420c33:	call   41d1b0 <__flatcc_fb_default_error_out@@Base+0x30>
  420c38:	movzx  eax,BYTE PTR [rbx+0x1]
  420c3c:	mov    rbx,r14
  420c3f:	jmp    41ee93 <__flatcc_fb_parse@@Base+0xc3>
  420c44:	lea    r14,[rbx+0x2]
  420c48:	mov    rdx,rbx
  420c4b:	mov    esi,0x3d7c
  420c50:	mov    rdi,r13
  420c53:	mov    rcx,r14
  420c56:	mov    rbx,r14
  420c59:	call   41d1b0 <__flatcc_fb_default_error_out@@Base+0x30>
  420c5e:	jmp    41ee87 <__flatcc_fb_parse@@Base+0xb7>
  420c63:	lea    r14,[rbx+0x2]
  420c67:	cmp    r15,r14
  420c6a:	je     420c76 <__flatcc_fb_parse@@Base+0x1ea6>
  420c6c:	cmp    BYTE PTR [rbx+0x2],0x2e
  420c70:	je     4212a7 <__flatcc_fb_parse@@Base+0x24d7>
  420c76:	mov    rdx,rbx
  420c79:	mov    rcx,r14
  420c7c:	mov    esi,0x2e2e
  420c81:	mov    rdi,r13
  420c84:	mov    rbx,r14
  420c87:	call   41d1b0 <__flatcc_fb_default_error_out@@Base+0x30>
  420c8c:	jmp    41ee87 <__flatcc_fb_parse@@Base+0xb7>
  420c91:	lea    r14,[rbx+0x2]
  420c95:	cmp    r15,r14
  420c98:	je     420ca4 <__flatcc_fb_parse@@Base+0x1ed4>
  420c9a:	cmp    BYTE PTR [rbx+0x2],0x3d
  420c9e:	je     421585 <__flatcc_fb_parse@@Base+0x27b5>
  420ca4:	mov    rdx,rbx
  420ca7:	mov    rcx,r14
  420caa:	mov    esi,0x3a3a
  420caf:	mov    rdi,r13
  420cb2:	mov    rbx,r14
  420cb5:	call   41d1b0 <__flatcc_fb_default_error_out@@Base+0x30>
  420cba:	jmp    41ee87 <__flatcc_fb_parse@@Base+0xb7>
  420cbf:	lea    r14,[rbx+0x2]
  420cc3:	mov    rdx,rbx
  420cc6:	mov    esi,0x2b2b
  420ccb:	mov    rdi,r13
  420cce:	mov    rcx,r14
  420cd1:	mov    rbx,r14
  420cd4:	call   41d1b0 <__flatcc_fb_default_error_out@@Base+0x30>
  420cd9:	jmp    41ee87 <__flatcc_fb_parse@@Base+0xb7>
  420cde:	lea    r14,[rbx+0x2]
  420ce2:	mov    rdx,rbx
  420ce5:	mov    esi,0x3d3e
  420cea:	mov    rdi,r13
  420ced:	mov    rcx,r14
  420cf0:	mov    rbx,r14
  420cf3:	call   41d1b0 <__flatcc_fb_default_error_out@@Base+0x30>
  420cf8:	jmp    41ee87 <__flatcc_fb_parse@@Base+0xb7>
  420cfd:	mov    rdx,rbx
  420d00:	mov    rcx,r14
  420d03:	mov    esi,0xa
  420d08:	mov    rdi,r13
  420d0b:	mov    rbx,r14
  420d0e:	call   41d1b0 <__flatcc_fb_default_error_out@@Base+0x30>
  420d13:	jmp    41ee87 <__flatcc_fb_parse@@Base+0xb7>
  420d18:	mov    r14,r15
  420d1b:	jmp    41f5b3 <__flatcc_fb_parse@@Base+0x7e3>
  420d20:	lea    r14,[rbx+0x2]
  420d24:	mov    rdx,rbx
  420d27:	mov    esi,0x3d2f
  420d2c:	mov    rdi,r13
  420d2f:	mov    rcx,r14
  420d32:	mov    rbx,r14
  420d35:	call   41d1b0 <__flatcc_fb_default_error_out@@Base+0x30>
  420d3a:	jmp    41ee87 <__flatcc_fb_parse@@Base+0xb7>
  420d3f:	lea    r9,[rbx+0x2]
  420d43:	cmp    r15,r9
  420d46:	je     421500 <__flatcc_fb_parse@@Base+0x2730>
  420d4c:	movzx  edx,BYTE PTR [rbx+0x2]
  420d50:	cmp    dl,0x2f
  420d53:	sete   al
  420d56:	cmp    dl,0x21
  420d59:	sete   dl
  420d5c:	or     eax,edx
  420d5e:	movzx  eax,al
  420d61:	xor    edx,edx
  420d63:	lea    r12,[r9+rax*1]
  420d67:	mov    rax,r12
  420d6a:	sub    rax,rbx
  420d6d:	cmp    rax,0x3
  420d71:	sete   dl
  420d74:	mov    DWORD PTR [r13+0x3c],edx
  420d78:	je     4210f2 <__flatcc_fb_parse@@Base+0x2322>
  420d7e:	xchg   ax,ax
  420d80:	lea    r14,[r12-0x1]
  420d85:	jmp    420da3 <__flatcc_fb_parse@@Base+0x1fd3>
  420d87:	nop    WORD PTR [rax+rax*1+0x0]
  420d90:	movzx  eax,BYTE PTR [r14+0x1]
  420d95:	sub    eax,0x20
  420d98:	cmp    al,0x5e
  420d9a:	ja     420e30 <__flatcc_fb_parse@@Base+0x2060>
  420da0:	mov    r14,rbx
  420da3:	lea    rbx,[r14+0x1]
  420da7:	cmp    r15,rbx
  420daa:	jne    420d90 <__flatcc_fb_parse@@Base+0x1fc0>
  420dac:	cmp    r15,r12
  420daf:	je     420baa <__flatcc_fb_parse@@Base+0x1dda>
  420db5:	mov    esi,DWORD PTR [r13+0x3c]
  420db9:	test   esi,esi
  420dbb:	je     420f1c <__flatcc_fb_parse@@Base+0x214c>
  420dc1:	mov    rbx,r15
  420dc4:	mov    rcx,rbx
  420dc7:	mov    rdx,r12
  420dca:	mov    rsi,0xfffffffffffffc3c
  420dd1:	mov    rdi,r13
  420dd4:	call   41d1b0 <__flatcc_fb_default_error_out@@Base+0x30>
  420dd9:	cmp    r15,rbx
  420ddc:	je     420f1c <__flatcc_fb_parse@@Base+0x214c>
  420de2:	movzx  eax,BYTE PTR [rbx]
  420de5:	test   al,al
  420de7:	je     420ba7 <__flatcc_fb_parse@@Base+0x1dd7>
  420ded:	cmp    al,0xa
  420def:	je     420bc7 <__flatcc_fb_parse@@Base+0x1df7>
  420df5:	cmp    al,0xd
  420df7:	je     420bc7 <__flatcc_fb_parse@@Base+0x1df7>
  420dfd:	cmp    al,0x20
  420dff:	lea    r12,[r14+0x2]
  420e03:	je     420e09 <__flatcc_fb_parse@@Base+0x2039>
  420e05:	cmp    al,0x9
  420e07:	jne    420e40 <__flatcc_fb_parse@@Base+0x2070>
  420e09:	mov    ecx,DWORD PTR [r13+0x3c]
  420e0d:	test   ecx,ecx
  420e0f:	je     420d80 <__flatcc_fb_parse@@Base+0x1fb0>
  420e15:	mov    rcx,r12
  420e18:	mov    rdx,rbx
  420e1b:	mov    rsi,0xfffffffffffffc3c
  420e22:	mov    rdi,r13
  420e25:	call   41d1b0 <__flatcc_fb_default_error_out@@Base+0x30>
  420e2a:	jmp    420d80 <__flatcc_fb_parse@@Base+0x1fb0>
  420e2f:	nop
  420e30:	cmp    r12,rbx
  420e33:	je     420de2 <__flatcc_fb_parse@@Base+0x2012>
  420e35:	mov    ecx,DWORD PTR [r13+0x3c]
  420e39:	test   ecx,ecx
  420e3b:	je     420de2 <__flatcc_fb_parse@@Base+0x2012>
  420e3d:	jmp    420dc4 <__flatcc_fb_parse@@Base+0x1ff4>
  420e3f:	nop
  420e40:	mov    rcx,r12
  420e43:	mov    rdx,rbx
  420e46:	mov    esi,0x7
  420e4b:	mov    rdi,r13
  420e4e:	call   41d1b0 <__flatcc_fb_default_error_out@@Base+0x30>
  420e53:	jmp    420d80 <__flatcc_fb_parse@@Base+0x1fb0>
  420e58:	lea    r14,[rbx+0x2]
  420e5c:	mov    rdx,rbx
  420e5f:	mov    esi,0x3e2d
  420e64:	mov    rdi,r13
  420e67:	mov    rcx,r14
  420e6a:	mov    rbx,r14
  420e6d:	call   41d1b0 <__flatcc_fb_default_error_out@@Base+0x30>
  420e72:	jmp    41ee87 <__flatcc_fb_parse@@Base+0xb7>
  420e77:	lea    r14,[rbx+0x2]
  420e7b:	mov    rdx,rbx
  420e7e:	mov    esi,0x3d2d
  420e83:	mov    rdi,r13
  420e86:	mov    rcx,r14
  420e89:	mov    rbx,r14
  420e8c:	call   41d1b0 <__flatcc_fb_default_error_out@@Base+0x30>
  420e91:	jmp    41ee87 <__flatcc_fb_parse@@Base+0xb7>
  420e96:	lea    r14,[rbx+0x2]
  420e9a:	mov    rdx,rbx
  420e9d:	mov    esi,0x3d3c
  420ea2:	mov    rdi,r13
  420ea5:	mov    rcx,r14
  420ea8:	mov    rbx,r14
  420eab:	call   41d1b0 <__flatcc_fb_default_error_out@@Base+0x30>
  420eb0:	jmp    41ee87 <__flatcc_fb_parse@@Base+0xb7>
  420eb5:	lea    r14,[rbx+0x2]
  420eb9:	cmp    r15,r14
  420ebc:	je     420ff7 <__flatcc_fb_parse@@Base+0x2227>
  420ec2:	movzx  eax,BYTE PTR [rbx+0x2]
  420ec6:	cmp    al,0x3c
  420ec8:	je     421076 <__flatcc_fb_parse@@Base+0x22a6>
  420ece:	cmp    al,0x3d
  420ed0:	jne    420ff7 <__flatcc_fb_parse@@Base+0x2227>
  420ed6:	lea    r14,[rbx+0x3]
  420eda:	mov    rdx,rbx
  420edd:	mov    esi,0x3d3c3c
  420ee2:	mov    rdi,r13
  420ee5:	mov    rcx,r14
  420ee8:	mov    rbx,r14
  420eeb:	call   41d1b0 <__flatcc_fb_default_error_out@@Base+0x30>
  420ef0:	jmp    41ee87 <__flatcc_fb_parse@@Base+0xb7>
  420ef5:	movsx  rax,BYTE PTR [r14]
  420ef9:	mov    r14,rdx
  420efc:	jmp    41f171 <__flatcc_fb_parse@@Base+0x3a1>
  420f01:	mov    rdx,rbx
  420f04:	mov    rcx,r14
  420f07:	mov    esi,0x5
  420f0c:	mov    rdi,r13
  420f0f:	mov    rbx,r14
  420f12:	call   41d1b0 <__flatcc_fb_default_error_out@@Base+0x30>
  420f17:	jmp    41ee87 <__flatcc_fb_parse@@Base+0xb7>
  420f1c:	mov    r12,r15
  420f1f:	jmp    420baa <__flatcc_fb_parse@@Base+0x1dda>
  420f24:	mov    rsi,QWORD PTR [rsp+0x18]
  420f29:	mov    rdi,r13
  420f2c:	call   41d740 <__flatcc_error_report@@Base+0x1c0>
  420f31:	lea    rdx,[rip+0x25a20]        # 446958 <fb_schema_table_missing@@Base+0x5e8>
  420f38:	mov    rcx,rbp
  420f3b:	mov    esi,0x3b
  420f40:	mov    rdi,r13
  420f43:	call   41d880 <__flatcc_error_report@@Base+0x300>
  420f48:	mov    rbp,QWORD PTR [rsp+0x28]
  420f4d:	mov    rdi,QWORD PTR [r13+0x260]
  420f54:	xor    edx,edx
  420f56:	mov    rsi,rbp
  420f59:	call   41c2b0 <fb_scope_table_find@@Base>
  420f5e:	test   rax,rax
  420f61:	je     4216e5 <__flatcc_fb_parse@@Base+0x2915>
  420f67:	mov    QWORD PTR [r13+0x340],rax
  420f6e:	jmp    41f828 <__flatcc_fb_parse@@Base+0xa58>
  420f73:	movsx  rax,al
  420f77:	lea    r14,[rbx+0x2]
  420f7b:	or     ah,0x3d
  420f7e:	mov    rsi,rax
  420f81:	jmp    41f27a <__flatcc_fb_parse@@Base+0x4aa>
  420f86:	lea    r14,[rbx+0x3]
  420f8a:	mov    rdx,rbx
  420f8d:	mov    esi,0x3d3e3e
  420f92:	mov    rdi,r13
  420f95:	mov    rcx,r14
  420f98:	mov    rbx,r14
  420f9b:	call   41d1b0 <__flatcc_fb_default_error_out@@Base+0x30>
  420fa0:	jmp    41ee87 <__flatcc_fb_parse@@Base+0xb7>
  420fa5:	mov    rdx,rbx
  420fa8:	mov    rcx,r14
  420fab:	mov    esi,0x3e3e
  420fb0:	mov    rdi,r13
  420fb3:	mov    rbx,r14
  420fb6:	call   41d1b0 <__flatcc_fb_default_error_out@@Base+0x30>
  420fbb:	jmp    41ee87 <__flatcc_fb_parse@@Base+0xb7>
  420fc0:	lea    rax,[r14+0x2]
  420fc4:	jmp    42047b <__flatcc_fb_parse@@Base+0x16ab>
  420fc9:	cmp    rax,0x65746139
  420fcf:	je     421344 <__flatcc_fb_parse@@Base+0x2574>
  420fd5:	cmp    rax,0x65796234
  420fdb:	je     42131a <__flatcc_fb_parse@@Base+0x254a>
  420fe1:	cmp    rax,0x65727434
  420fe7:	je     421507 <__flatcc_fb_parse@@Base+0x2737>
  420fed:	mov    esi,0x9
  420ff2:	jmp    41f27a <__flatcc_fb_parse@@Base+0x4aa>
  420ff7:	mov    rdx,rbx
  420ffa:	mov    rcx,r14
  420ffd:	mov    esi,0x3c3c
  421002:	mov    rdi,r13
  421005:	mov    rbx,r14
  421008:	call   41d1b0 <__flatcc_fb_default_error_out@@Base+0x30>
  42100d:	jmp    41ee87 <__flatcc_fb_parse@@Base+0xb7>
  421012:	cmp    rax,0x326c6637
  421018:	je     4212f0 <__flatcc_fb_parse@@Base+0x2520>
  42101e:	cmp    rax,0x326e6935
  421024:	je     4212c6 <__flatcc_fb_parse@@Base+0x24f6>
  42102a:	cmp    rax,0x32697536
  421030:	jne    420fed <__flatcc_fb_parse@@Base+0x221d>
  421032:	lea    rdi,[rip+0x15268]        # 4362a1 <_IO_stdin_used@@Base+0x92a1>
  421039:	mov    rsi,rbx
  42103c:	mov    edx,0x6
  421041:	call   405130 <memcmp@plt>
  421046:	cmp    eax,0x1
  421049:	sbb    rsi,rsi
  42104c:	and    rsi,0xfffffffffffffc24
  421053:	add    rsi,0x9
  421057:	jmp    41f27a <__flatcc_fb_parse@@Base+0x4aa>
  42105c:	mov    rcx,r14
  42105f:	mov    rdx,r14
  421062:	mov    rsi,0xfffffffffffffc3c
  421069:	mov    rdi,r13
  42106c:	call   41d1b0 <__flatcc_fb_default_error_out@@Base+0x30>
  421071:	jmp    420a50 <__flatcc_fb_parse@@Base+0x1c80>
  421076:	lea    r14,[rbx+0x3]
  42107a:	cmp    r15,r14
  42107d:	je     421089 <__flatcc_fb_parse@@Base+0x22b9>
  42107f:	cmp    BYTE PTR [rbx+0x3],0x3d
  421083:	je     421695 <__flatcc_fb_parse@@Base+0x28c5>
  421089:	mov    rdx,rbx
  42108c:	mov    rcx,r14
  42108f:	mov    esi,0x3c3c3c
  421094:	mov    rdi,r13
  421097:	mov    rbx,r14
  42109a:	call   41d1b0 <__flatcc_fb_default_error_out@@Base+0x30>
  42109f:	jmp    41ee87 <__flatcc_fb_parse@@Base+0xb7>
  4210a4:	cmp    rax,0x65616635
  4210aa:	je     42155b <__flatcc_fb_parse@@Base+0x278b>
  4210b0:	cmp    rax,0x65616e39
  4210b6:	je     421531 <__flatcc_fb_parse@@Base+0x2761>
  4210bc:	cmp    rax,0x386e6934
  4210c2:	jne    420fed <__flatcc_fb_parse@@Base+0x221d>
  4210c8:	lea    rdi,[rip+0x151e1]        # 4362b0 <_IO_stdin_used@@Base+0x92b0>
  4210cf:	mov    rsi,rbx
  4210d2:	mov    edx,0x4
  4210d7:	call   405130 <memcmp@plt>
  4210dc:	cmp    eax,0x1
  4210df:	sbb    rsi,rsi
  4210e2:	and    rsi,0xfffffffffffffc16
  4210e9:	add    rsi,0x9
  4210ed:	jmp    41f27a <__flatcc_fb_parse@@Base+0x4aa>
  4210f2:	mov    rcx,r12
  4210f5:	mov    rdx,r12
  4210f8:	mov    rsi,0xfffffffffffffc3c
  4210ff:	mov    rdi,r13
  421102:	call   41d1b0 <__flatcc_fb_default_error_out@@Base+0x30>
  421107:	jmp    420d80 <__flatcc_fb_parse@@Base+0x1fb0>
  42110c:	cmp    rax,0x7269663f
  421112:	je     42166b <__flatcc_fb_parse@@Base+0x289b>
  421118:	cmp    rax,0x74687335
  42111e:	je     421641 <__flatcc_fb_parse@@Base+0x2871>
  421124:	cmp    rax,0x6e6e7535
  42112a:	jne    420fed <__flatcc_fb_parse@@Base+0x221d>
  421130:	lea    rdi,[rip+0x25cb9]        # 446df0 <fb_schema_table_missing@@Base+0xa80>
  421137:	mov    rsi,rbx
  42113a:	mov    edx,0x5
  42113f:	call   405130 <memcmp@plt>
  421144:	cmp    eax,0x1
  421147:	sbb    rsi,rsi
  42114a:	and    rsi,0xfffffffffffffc27
  421151:	add    rsi,0x9
  421155:	jmp    41f27a <__flatcc_fb_parse@@Base+0x4aa>
  42115a:	mov    rbx,r15
  42115d:	jmp    41efc1 <__flatcc_fb_parse@@Base+0x1f1>
  421162:	lea    rdi,[rip+0x25c76]        # 446ddf <fb_schema_table_missing@@Base+0xa6f>
  421169:	mov    rsi,rbx
  42116c:	mov    edx,0x4
  421171:	call   405130 <memcmp@plt>
  421176:	cmp    eax,0x1
  421179:	sbb    rsi,rsi
  42117c:	and    rsi,0xfffffffffffffc1c
  421183:	add    rsi,0x9
  421187:	jmp    41f27a <__flatcc_fb_parse@@Base+0x4aa>
  42118c:	cmp    rax,0x746c6635
  421192:	jne    420fed <__flatcc_fb_parse@@Base+0x221d>
  421198:	lea    rdi,[rip+0x15007]        # 4361a6 <_IO_stdin_used@@Base+0x91a6>
  42119f:	mov    rsi,rbx
  4211a2:	mov    edx,0x5
  4211a7:	call   405130 <memcmp@plt>
  4211ac:	cmp    eax,0x1
  4211af:	sbb    rsi,rsi
  4211b2:	and    rsi,0xfffffffffffffc1e
  4211b9:	add    rsi,0x9
  4211bd:	jmp    41f27a <__flatcc_fb_parse@@Base+0x4aa>
  4211c2:	lea    rdi,[rip+0x25c17]        # 446de0 <fb_schema_table_missing@@Base+0xa70>
  4211c9:	mov    rsi,rbx
  4211cc:	mov    edx,0x3
  4211d1:	call   405130 <memcmp@plt>
  4211d6:	cmp    eax,0x1
  4211d9:	sbb    rsi,rsi
  4211dc:	and    rsi,0xfffffffffffffc15
  4211e3:	add    rsi,0x9
  4211e7:	jmp    41f27a <__flatcc_fb_parse@@Base+0x4aa>
  4211ec:	lea    rdi,[rip+0x25c0a]        # 446dfd <fb_schema_table_missing@@Base+0xa8d>
  4211f3:	mov    rsi,rbx
  4211f6:	mov    edx,0x6
  4211fb:	call   405130 <memcmp@plt>
  421200:	cmp    eax,0x1
  421203:	sbb    rsi,rsi
  421206:	and    rsi,0xfffffffffffffc2b
  42120d:	add    rsi,0x9
  421211:	jmp    41f27a <__flatcc_fb_parse@@Base+0x4aa>
  421216:	cmp    rax,0x346c6637
  42121c:	jne    420fed <__flatcc_fb_parse@@Base+0x221d>
  421222:	lea    rdi,[rip+0x25be3]        # 446e0c <fb_schema_table_missing@@Base+0xa9c>
  421229:	mov    rsi,rbx
  42122c:	mov    edx,0x7
  421231:	call   405130 <memcmp@plt>
  421236:	cmp    eax,0x1
  421239:	sbb    rsi,rsi
  42123c:	and    rsi,0xfffffffffffffc14
  421243:	add    rsi,0x9
  421247:	jmp    41f27a <__flatcc_fb_parse@@Base+0x4aa>
  42124c:	lea    rdi,[rip+0x15048]        # 43629b <_IO_stdin_used@@Base+0x929b>
  421253:	mov    rsi,rbx
  421256:	mov    edx,0x5
  42125b:	call   405130 <memcmp@plt>
  421260:	cmp    eax,0x1
  421263:	sbb    rsi,rsi
  421266:	and    rsi,0xfffffffffffffc19
  42126d:	add    rsi,0x9
  421271:	jmp    41f27a <__flatcc_fb_parse@@Base+0x4aa>
  421276:	lea    rdi,[rip+0x1501d]        # 43629a <_IO_stdin_used@@Base+0x929a>
  42127d:	mov    rsi,rbx
  421280:	mov    edx,0x6
  421285:	call   405130 <memcmp@plt>
  42128a:	cmp    eax,0x1
  42128d:	sbb    rsi,rsi
  421290:	and    rsi,0xfffffffffffffc25
  421297:	add    rsi,0x9
  42129b:	jmp    41f27a <__flatcc_fb_parse@@Base+0x4aa>
  4212a0:	xor    eax,eax
  4212a2:	jmp    420a2f <__flatcc_fb_parse@@Base+0x1c5f>
  4212a7:	lea    r14,[rbx+0x3]
  4212ab:	mov    rdx,rbx
  4212ae:	mov    esi,0x2e2e2e
  4212b3:	mov    rdi,r13
  4212b6:	mov    rcx,r14
  4212b9:	mov    rbx,r14
  4212bc:	call   41d1b0 <__flatcc_fb_default_error_out@@Base+0x30>
  4212c1:	jmp    41ee87 <__flatcc_fb_parse@@Base+0xb7>
  4212c6:	lea    rdi,[rip+0x14fd5]        # 4362a2 <_IO_stdin_used@@Base+0x92a2>
  4212cd:	mov    rsi,rbx
  4212d0:	mov    edx,0x5
  4212d5:	call   405130 <memcmp@plt>
  4212da:	cmp    eax,0x1
  4212dd:	sbb    rsi,rsi
  4212e0:	and    rsi,0xfffffffffffffc18
  4212e7:	add    rsi,0x9
  4212eb:	jmp    41f27a <__flatcc_fb_parse@@Base+0x4aa>
  4212f0:	lea    rdi,[rip+0x25b0d]        # 446e04 <fb_schema_table_missing@@Base+0xa94>
  4212f7:	mov    rsi,rbx
  4212fa:	mov    edx,0x7
  4212ff:	call   405130 <memcmp@plt>
  421304:	cmp    eax,0x1
  421307:	sbb    rsi,rsi
  42130a:	and    rsi,0xfffffffffffffc13
  421311:	add    rsi,0x9
  421315:	jmp    41f27a <__flatcc_fb_parse@@Base+0x4aa>
  42131a:	lea    rdi,[rip+0x25ab4]        # 446dd5 <fb_schema_table_missing@@Base+0xa65>
  421321:	mov    rsi,rbx
  421324:	mov    edx,0x4
  421329:	call   405130 <memcmp@plt>
  42132e:	cmp    eax,0x1
  421331:	sbb    rsi,rsi
  421334:	and    rsi,0xfffffffffffffc11
  42133b:	add    rsi,0x9
  42133f:	jmp    41f27a <__flatcc_fb_parse@@Base+0x4aa>
  421344:	lea    rdi,[rip+0x25ad1]        # 446e1c <fb_schema_table_missing@@Base+0xaac>
  42134b:	mov    rsi,rbx
  42134e:	mov    edx,0x9
  421353:	call   405130 <memcmp@plt>
  421358:	cmp    eax,0x1
  42135b:	sbb    rsi,rsi
  42135e:	and    rsi,0xfffffffffffffc2d
  421365:	add    rsi,0x9
  421369:	jmp    41f27a <__flatcc_fb_parse@@Base+0x4aa>
  42136e:	lea    rdi,[rip+0x14f33]        # 4362a8 <_IO_stdin_used@@Base+0x92a8>
  421375:	mov    rsi,rbx
  421378:	mov    edx,0x6
  42137d:	call   405130 <memcmp@plt>
  421382:	cmp    eax,0x1
  421385:	sbb    rsi,rsi
  421388:	and    rsi,0xfffffffffffffc23
  42138f:	add    rsi,0x9
  421393:	jmp    41f27a <__flatcc_fb_parse@@Base+0x4aa>
  421398:	lea    rdi,[rip+0x25a9d]        # 446e3c <fb_schema_table_missing@@Base+0xacc>
  42139f:	mov    rsi,rbx
  4213a2:	mov    edx,0xe
  4213a7:	call   405130 <memcmp@plt>
  4213ac:	cmp    eax,0x1
  4213af:	sbb    rsi,rsi
  4213b2:	and    rsi,0xfffffffffffffc31
  4213b9:	add    rsi,0x9
  4213bd:	jmp    41f27a <__flatcc_fb_parse@@Base+0x4aa>
  4213c2:	cmp    rax,0x676f6c34
  4213c8:	jne    420fed <__flatcc_fb_parse@@Base+0x221d>
  4213ce:	lea    rdi,[rip+0x25a16]        # 446deb <fb_schema_table_missing@@Base+0xa7b>
  4213d5:	mov    rsi,rbx
  4213d8:	mov    edx,0x4
  4213dd:	call   405130 <memcmp@plt>
  4213e2:	cmp    eax,0x1
  4213e5:	sbb    rsi,rsi
  4213e8:	and    rsi,0xfffffffffffffc1a
  4213ef:	add    rsi,0x9
  4213f3:	jmp    41f27a <__flatcc_fb_parse@@Base+0x4aa>
  4213f8:	lea    rdi,[rip+0x25911]        # 446d10 <fb_schema_table_missing@@Base+0x9a0>
  4213ff:	mov    rsi,rbx
  421402:	mov    edx,0x6
  421407:	call   405130 <memcmp@plt>
  42140c:	cmp    eax,0x1
  42140f:	sbb    rsi,rsi
  421412:	and    rsi,0xfffffffffffffc29
  421419:	add    rsi,0x9
  42141d:	jmp    41f27a <__flatcc_fb_parse@@Base+0x4aa>
  421422:	lea    rdi,[rip+0x259c1]        # 446dea <fb_schema_table_missing@@Base+0xa7a>
  421429:	mov    rsi,rbx
  42142c:	mov    edx,0x5
  421431:	call   405130 <memcmp@plt>
  421436:	cmp    eax,0x1
  421439:	sbb    rsi,rsi
  42143c:	and    rsi,0xfffffffffffffc26
  421443:	add    rsi,0x9
  421447:	jmp    41f27a <__flatcc_fb_parse@@Base+0x4aa>
  42144c:	lea    rdi,[rip+0x14e62]        # 4362b5 <_IO_stdin_used@@Base+0x92b5>
  421453:	mov    rsi,rbx
  421456:	mov    edx,0x4
  42145b:	call   405130 <memcmp@plt>
  421460:	cmp    eax,0x1
  421463:	sbb    rsi,rsi
  421466:	and    rsi,0xfffffffffffffc10
  42146d:	add    rsi,0x9
  421471:	jmp    41f27a <__flatcc_fb_parse@@Base+0x4aa>
  421476:	cmp    rax,0x65627535
  42147c:	jne    420fed <__flatcc_fb_parse@@Base+0x221d>
  421482:	lea    rdi,[rip+0x2594b]        # 446dd4 <fb_schema_table_missing@@Base+0xa64>
  421489:	mov    rsi,rbx
  42148c:	mov    edx,0x5
  421491:	call   405130 <memcmp@plt>
  421496:	cmp    eax,0x1
  421499:	sbb    rsi,rsi
  42149c:	and    rsi,0xfffffffffffffc21
  4214a3:	add    rsi,0x9
  4214a7:	jmp    41f27a <__flatcc_fb_parse@@Base+0x4aa>
  4214ac:	lea    rdi,[rip+0x25961]        # 446e14 <fb_schema_table_missing@@Base+0xaa4>
  4214b3:	mov    rsi,rbx
  4214b6:	mov    edx,0x7
  4214bb:	call   405130 <memcmp@plt>
  4214c0:	cmp    eax,0x1
  4214c3:	sbb    rsi,rsi
  4214c6:	and    rsi,0xfffffffffffffc2c
  4214cd:	add    rsi,0x9
  4214d1:	jmp    41f27a <__flatcc_fb_parse@@Base+0x4aa>
  4214d6:	lea    rdi,[rip+0x27479]        # 448956 <fb_schema_table_missing@@Base+0x25e6>
  4214dd:	mov    rsi,rbx
  4214e0:	mov    edx,0x5
  4214e5:	call   405130 <memcmp@plt>
  4214ea:	cmp    eax,0x1
  4214ed:	sbb    rsi,rsi
  4214f0:	and    rsi,0xfffffffffffffc20
  4214f7:	add    rsi,0x9
  4214fb:	jmp    41f27a <__flatcc_fb_parse@@Base+0x4aa>
  421500:	xor    eax,eax
  421502:	jmp    420d5e <__flatcc_fb_parse@@Base+0x1f8e>
  421507:	lea    rdi,[rip+0x258cc]        # 446dda <fb_schema_table_missing@@Base+0xa6a>
  42150e:	mov    rsi,rbx
  421511:	mov    edx,0x4
  421516:	call   405130 <memcmp@plt>
  42151b:	cmp    eax,0x1
  42151e:	sbb    rsi,rsi
  421521:	and    rsi,0xfffffffffffffc1b
  421528:	add    rsi,0x9
  42152c:	jmp    41f27a <__flatcc_fb_parse@@Base+0x4aa>
  421531:	lea    rdi,[rip+0xd061]        # 42e599 <_IO_stdin_used@@Base+0x1599>
  421538:	mov    rsi,rbx
  42153b:	mov    edx,0x9
  421540:	call   405130 <memcmp@plt>
  421545:	cmp    eax,0x1
  421548:	sbb    rsi,rsi
  42154b:	and    rsi,0xfffffffffffffc2e
  421552:	add    rsi,0x9
  421556:	jmp    41f27a <__flatcc_fb_parse@@Base+0x4aa>
  42155b:	lea    rdi,[rip+0x25882]        # 446de4 <fb_schema_table_missing@@Base+0xa74>
  421562:	mov    rsi,rbx
  421565:	mov    edx,0x5
  42156a:	call   405130 <memcmp@plt>
  42156f:	cmp    eax,0x1
  421572:	sbb    rsi,rsi
  421575:	and    rsi,0xfffffffffffffc1d
  42157c:	add    rsi,0x9
  421580:	jmp    41f27a <__flatcc_fb_parse@@Base+0x4aa>
  421585:	lea    r14,[rbx+0x3]
  421589:	mov    rdx,rbx
  42158c:	mov    esi,0x3d3a3a
  421591:	mov    rdi,r13
  421594:	mov    rcx,r14
  421597:	mov    rbx,r14
  42159a:	call   41d1b0 <__flatcc_fb_default_error_out@@Base+0x30>
  42159f:	jmp    41ee87 <__flatcc_fb_parse@@Base+0xb7>
  4215a4:	lea    rdi,[rip+0x14d04]        # 4362af <_IO_stdin_used@@Base+0x92af>
  4215ab:	mov    rsi,rbx
  4215ae:	mov    edx,0x5
  4215b3:	call   405130 <memcmp@plt>
  4215b8:	cmp    eax,0x1
  4215bb:	sbb    rsi,rsi
  4215be:	and    rsi,0xfffffffffffffc22
  4215c5:	add    rsi,0x9
  4215c9:	jmp    41f27a <__flatcc_fb_parse@@Base+0x4aa>
  4215ce:	lea    rdi,[rip+0x2585b]        # 446e30 <fb_schema_table_missing@@Base+0xac0>
  4215d5:	mov    rsi,rbx
  4215d8:	mov    edx,0xb
  4215dd:	call   405130 <memcmp@plt>
  4215e2:	cmp    eax,0x1
  4215e5:	sbb    rsi,rsi
  4215e8:	and    rsi,0xfffffffffffffc30
  4215ef:	add    rsi,0x9
  4215f3:	jmp    41f27a <__flatcc_fb_parse@@Base+0x4aa>
  4215f8:	lea    r14,[rbx+0x3]
  4215fc:	mov    rdx,rbx
  4215ff:	mov    esi,0x3d3d3d
  421604:	mov    rdi,r13
  421607:	mov    rcx,r14
  42160a:	mov    rbx,r14
  42160d:	call   41d1b0 <__flatcc_fb_default_error_out@@Base+0x30>
  421612:	jmp    41ee87 <__flatcc_fb_parse@@Base+0xb7>
  421617:	lea    rdi,[rip+0x14b8e]        # 4361ac <_IO_stdin_used@@Base+0x91ac>
  42161e:	mov    rsi,rbx
  421621:	mov    edx,0x6
  421626:	call   405130 <memcmp@plt>
  42162b:	cmp    eax,0x1
  42162e:	sbb    rsi,rsi
  421631:	and    rsi,0xfffffffffffffc28
  421638:	add    rsi,0x9
  42163c:	jmp    41f27a <__flatcc_fb_parse@@Base+0x4aa>
  421641:	lea    rdi,[rip+0x257b6]        # 446dfe <fb_schema_table_missing@@Base+0xa8e>
  421648:	mov    rsi,rbx
  42164b:	mov    edx,0x5
  421650:	call   405130 <memcmp@plt>
  421655:	cmp    eax,0x1
  421658:	sbb    rsi,rsi
  42165b:	and    rsi,0xfffffffffffffc1f
  421662:	add    rsi,0x9
  421666:	jmp    41f27a <__flatcc_fb_parse@@Base+0x4aa>
  42166b:	lea    rdi,[rip+0x257d9]        # 446e4b <fb_schema_table_missing@@Base+0xadb>
  421672:	mov    rsi,rbx
  421675:	mov    edx,0xf
  42167a:	call   405130 <memcmp@plt>
  42167f:	cmp    eax,0x1
  421682:	sbb    rsi,rsi
  421685:	and    rsi,0xfffffffffffffc32
  42168c:	add    rsi,0x9
  421690:	jmp    41f27a <__flatcc_fb_parse@@Base+0x4aa>
  421695:	lea    r14,[rbx+0x4]
  421699:	mov    rdx,rbx
  42169c:	mov    esi,0x3d3c3c3c
  4216a1:	mov    rdi,r13
  4216a4:	mov    rcx,r14
  4216a7:	mov    rbx,r14
  4216aa:	call   41d1b0 <__flatcc_fb_default_error_out@@Base+0x30>
  4216af:	jmp    41ee87 <__flatcc_fb_parse@@Base+0xb7>
  4216b4:	call   4050d0 <__stack_chk_fail@plt>
  4216b9:	lea    r14,[rbx+0x4]
  4216bd:	mov    rdx,rbx
  4216c0:	mov    esi,0x3d3e3e3e
  4216c5:	mov    rdi,r13
  4216c8:	mov    rcx,r14
  4216cb:	mov    rbx,r14
  4216ce:	call   41d1b0 <__flatcc_fb_default_error_out@@Base+0x30>
  4216d3:	jmp    41ee87 <__flatcc_fb_parse@@Base+0xb7>
  4216d8:	call   40527e <__sprintf_chk@plt+0x5e>
  4216dd:	mov    r12,r14
  4216e0:	jmp    420aa4 <__flatcc_fb_parse@@Base+0x1cd4>
  4216e5:	mov    r12,QWORD PTR [r13+0x60]
  4216e9:	lea    rax,[r12+0x40]
  4216ee:	cmp    rax,QWORD PTR [r13+0x50]
  4216f2:	ja     421730 <__flatcc_fb_parse@@Base+0x2960>
  4216f4:	mov    QWORD PTR [r13+0x60],rax
  4216f8:	mov    rdx,QWORD PTR [r13+0x2e0]
  4216ff:	mov    rsi,r12
  421702:	mov    rax,QWORD PTR [r13+0x2d8]
  421709:	mov    rdi,QWORD PTR [r13+0x260]
  421710:	mov    QWORD PTR [r12],rbp
  421714:	mov    QWORD PTR [r12+0x30],rdx
  421719:	mov    edx,0x1
  42171e:	mov    QWORD PTR [r12+0x28],rax
  421723:	call   41c2a0 <fb_scope_table_insert_item@@Base>
  421728:	mov    rax,r12
  42172b:	jmp    420f67 <__flatcc_fb_parse@@Base+0x2197>
  421730:	mov    esi,0x1
  421735:	mov    edi,0x10000
  42173a:	call   405140 <calloc@plt>
  42173f:	test   rax,rax
  421742:	je     4216d8 <__flatcc_fb_parse@@Base+0x2908>
  421744:	mov    rdx,QWORD PTR [r13+0x58]
  421748:	lea    r12,[rax+0x10]
  42174c:	mov    QWORD PTR [r13+0x58],rax
  421750:	mov    QWORD PTR [rax],rdx
  421753:	lea    rdx,[rax+0x10000]
  42175a:	add    rax,0x50
  42175e:	mov    QWORD PTR [r13+0x50],rdx
  421762:	jmp    4216f4 <__flatcc_fb_parse@@Base+0x2924>
  421764:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  42176f:	nop

0000000000421770 <__flatcc_fb_clear_parser@@Base>:
  421770:	push   rbp
  421771:	push   rbx
  421772:	mov    rbp,rdi
  421775:	sub    rsp,0x8
  421779:	mov    rbx,QWORD PTR [rdi+0x238]
  421780:	test   rbx,rbx
  421783:	jne    421798 <__flatcc_fb_clear_parser@@Base+0x28>
  421785:	jmp    4217bc <__flatcc_fb_clear_parser@@Base+0x4c>
  421787:	nop    WORD PTR [rax+rax*1+0x0]
  421790:	mov    rbx,QWORD PTR [rbx]
  421793:	test   rbx,rbx
  421796:	je     4217bc <__flatcc_fb_clear_parser@@Base+0x4c>
  421798:	cmp    WORD PTR [rbx+0x10],0x4
  42179d:	ja     421790 <__flatcc_fb_clear_parser@@Base+0x20>
  42179f:	lea    rdi,[rbx+0x60]
  4217a3:	call   41b1e0 <fb_symbol_table_clear@@Base>
  4217a8:	lea    rdi,[rbx+0x80]
  4217af:	call   42c350 <fb_value_set_clear@@Base>
  4217b4:	mov    rbx,QWORD PTR [rbx]
  4217b7:	test   rbx,rbx
  4217ba:	jne    421798 <__flatcc_fb_clear_parser@@Base+0x28>
  4217bc:	lea    rdi,[rbp+0x2a8]
  4217c3:	call   41c950 <fb_schema_table_clear@@Base>
  4217c8:	lea    rdi,[rbp+0x288]
  4217cf:	call   42bc00 <fb_name_table_clear@@Base>
  4217d4:	lea    rdi,[rbp+0x320]
  4217db:	call   41aa80 <ptr_set_clear@@Base>
  4217e0:	mov    rdi,QWORD PTR [rbp+0xd8]
  4217e7:	test   rdi,rdi
  4217ea:	je     4217f1 <__flatcc_fb_clear_parser@@Base+0x81>
  4217ec:	call   405040 <free@plt>
  4217f1:	mov    rdi,QWORD PTR [rbp+0x28]
  4217f5:	test   rdi,rdi
  4217f8:	je     4217ff <__flatcc_fb_clear_parser@@Base+0x8f>
  4217fa:	call   405040 <free@plt>
  4217ff:	mov    rdi,QWORD PTR [rbp+0x308]
  421806:	test   rdi,rdi
  421809:	je     421810 <__flatcc_fb_clear_parser@@Base+0xa0>
  42180b:	call   405040 <free@plt>
  421810:	mov    rdi,QWORD PTR [rbp+0x310]
  421817:	test   rdi,rdi
  42181a:	je     421821 <__flatcc_fb_clear_parser@@Base+0xb1>
  42181c:	call   405040 <free@plt>
  421821:	mov    rdi,QWORD PTR [rbp+0x318]
  421828:	test   rdi,rdi
  42182b:	je     421832 <__flatcc_fb_clear_parser@@Base+0xc2>
  42182d:	call   405040 <free@plt>
  421832:	mov    rdi,QWORD PTR [rbp+0x348]
  421839:	test   rdi,rdi
  42183c:	je     421843 <__flatcc_fb_clear_parser@@Base+0xd3>
  42183e:	call   405040 <free@plt>
  421843:	lea    rdi,[rbp+0x268]
  42184a:	lea    rsi,[rip+0xffffffffffffb94f]        # 41d1a0 <__flatcc_fb_default_error_out@@Base+0x20>
  421851:	xor    edx,edx
  421853:	call   41c1b0 <fb_scope_table_destroy@@Base>
  421858:	mov    rdi,QWORD PTR [rbp+0x58]
  42185c:	test   rdi,rdi
  42185f:	je     421878 <__flatcc_fb_clear_parser@@Base+0x108>
  421861:	nop    DWORD PTR [rax+0x0]
  421868:	mov    rbx,QWORD PTR [rdi]
  42186b:	call   405040 <free@plt>
  421870:	test   rbx,rbx
  421873:	mov    rdi,rbx
  421876:	jne    421868 <__flatcc_fb_clear_parser@@Base+0xf8>
  421878:	mov    rdi,QWORD PTR [rbp+0x20]
  42187c:	test   rdi,rdi
  42187f:	je     421886 <__flatcc_fb_clear_parser@@Base+0x116>
  421881:	call   405040 <free@plt>
  421886:	lea    rdi,[rbp+0x8]
  42188a:	mov    QWORD PTR [rbp+0x0],0x0
  421892:	mov    QWORD PTR [rbp+0x350],0x0
  42189d:	xor    eax,eax
  42189f:	and    rdi,0xfffffffffffffff8
  4218a3:	sub    rbp,rdi
  4218a6:	lea    ecx,[rbp+0x358]
  4218ac:	shr    ecx,0x3
  4218af:	rep stos QWORD PTR es:[rdi],rax
  4218b2:	add    rsp,0x8
  4218b6:	pop    rbx
  4218b7:	pop    rbp
  4218b8:	ret    
  4218b9:	nop    DWORD PTR [rax+0x0]
  4218c0:	push   r15
  4218c2:	push   r14
  4218c4:	push   r13
  4218c6:	push   r12
  4218c8:	push   rbp
  4218c9:	push   rbx
  4218ca:	sub    rsp,0x18
  4218ce:	movzx  r12d,WORD PTR [rsi+0x10]
  4218d3:	cmp    r12w,0x1
  4218d8:	jne    421d0a <__flatcc_fb_clear_parser@@Base+0x59a>
  4218de:	movzx  eax,WORD PTR [rsi+0x12]
  4218e2:	mov    rbp,rsi
  4218e5:	test   al,0x1
  4218e7:	jne    421d29 <__flatcc_fb_clear_parser@@Base+0x5b9>
  4218ed:	test   al,0x2
  4218ef:	jne    421a16 <__flatcc_fb_clear_parser@@Base+0x2a6>
  4218f5:	cmp    QWORD PTR [rsi+0xc0],0x0
  4218fd:	jne    421d48 <__flatcc_fb_clear_parser@@Base+0x5d8>
  421903:	mov    rbx,QWORD PTR [rsi+0x28]
  421907:	or     eax,0x1
  42190a:	mov    r14,rdi
  42190d:	mov    WORD PTR [rsi+0x12],ax
  421911:	test   rbx,rbx
  421914:	je     421990 <__flatcc_fb_clear_parser@@Base+0x220>
  421916:	cmp    DWORD PTR [rdi+0xe0],0x63
  42191d:	jg     421bdc <__flatcc_fb_clear_parser@@Base+0x46c>
  421923:	lea    r15,[rip+0x270f6]        # 448a20 <fb_schema_table_missing@@Base+0x26b0>
  42192a:	lea    r13,[rip+0x25b8f]        # 4474c0 <fb_schema_table_missing@@Base+0x1150>
  421931:	movzx  edx,WORD PTR [rbx+0x28]
  421935:	cmp    dx,0x8
  421939:	je     421ad8 <__flatcc_fb_clear_parser@@Base+0x368>
  42193f:	cmp    dx,0xe
  421943:	je     421a30 <__flatcc_fb_clear_parser@@Base+0x2c0>
  421949:	cmp    dx,0x1
  42194d:	mov    eax,0xffffffff
  421952:	je     421977 <__flatcc_fb_clear_parser@@Base+0x207>
  421954:	mov    rsi,QWORD PTR [rbx+0x8]
  421958:	lea    rdx,[rip+0x26e0b]        # 44876a <fb_schema_table_missing@@Base+0x23fa>
  42195f:	xor    r9d,r9d
  421962:	xor    r8d,r8d
  421965:	xor    ecx,ecx
  421967:	mov    rdi,r14
  42196a:	mov    DWORD PTR [rsp+0x8],eax
  42196e:	call   41d580 <__flatcc_error_report@@Base>
  421973:	mov    eax,DWORD PTR [rsp+0x8]
  421977:	add    rsp,0x18
  42197b:	pop    rbx
  42197c:	pop    rbp
  42197d:	pop    r12
  42197f:	pop    r13
  421981:	pop    r14
  421983:	pop    r15
  421985:	ret    
  421986:	nop    WORD PTR cs:[rax+rax*1+0x0]
  421990:	movzx  eax,WORD PTR [rbp+0xb0]
  421997:	test   ax,ax
  42199a:	je     421c81 <__flatcc_fb_clear_parser@@Base+0x511>
  4219a0:	cmp    ax,r12w
  4219a4:	jb     421cde <__flatcc_fb_clear_parser@@Base+0x56e>
  4219aa:	lea    rdx,[rax-0x1]
  4219ae:	mov    rcx,QWORD PTR [rbp+0xb8]
  4219b5:	cmp    rdx,0xff
  4219bc:	ja     421acf <__flatcc_fb_clear_parser@@Base+0x35f>
  4219c2:	cmp    rax,0x1
  4219c6:	je     4219e1 <__flatcc_fb_clear_parser@@Base+0x271>
  4219c8:	mov    edx,0x2
  4219cd:	jmp    4219dc <__flatcc_fb_clear_parser@@Base+0x26c>
  4219cf:	nop
  4219d0:	add    rdx,rdx
  4219d3:	cmp    rax,rdx
  4219d6:	jb     421acf <__flatcc_fb_clear_parser@@Base+0x35f>
  4219dc:	cmp    rdx,rax
  4219df:	jne    4219d0 <__flatcc_fb_clear_parser@@Base+0x260>
  4219e1:	lea    rdx,[rax+rcx*1-0x1]
  4219e6:	neg    rax
  4219e9:	and    rax,rdx
  4219ec:	mov    QWORD PTR [rbp+0xb8],rax
  4219f3:	movzx  eax,WORD PTR [rbp+0x12]
  4219f7:	and    eax,0xfffffffe
  4219fa:	or     eax,0x2
  4219fd:	mov    WORD PTR [rbp+0x12],ax
  421a01:	mov    rax,QWORD PTR [r14+0x240]
  421a08:	mov    QWORD PTR [rbp+0xc0],rax
  421a0f:	mov    QWORD PTR [r14+0x240],rbp
  421a16:	add    rsp,0x18
  421a1a:	xor    eax,eax
  421a1c:	pop    rbx
  421a1d:	pop    rbp
  421a1e:	pop    r12
  421a20:	pop    r13
  421a22:	pop    r14
  421a24:	pop    r15
  421a26:	ret    
  421a27:	nop    WORD PTR [rax+rax*1+0x0]
  421a30:	mov    r11,QWORD PTR [rbx+0x18]
  421a34:	movzx  eax,WORD PTR [r11+0x10]
  421a39:	cmp    ax,0x3
  421a3d:	je     421b50 <__flatcc_fb_clear_parser@@Base+0x3e0>
  421a43:	cmp    ax,0x1
  421a47:	jne    421cb9 <__flatcc_fb_clear_parser@@Base+0x549>
  421a4d:	movzx  eax,WORD PTR [r11+0x12]
  421a52:	test   al,0x1
  421a54:	jne    421c92 <__flatcc_fb_clear_parser@@Base+0x522>
  421a5a:	test   al,0x2
  421a5c:	jne    421a9a <__flatcc_fb_clear_parser@@Base+0x32a>
  421a5e:	mov    eax,DWORD PTR [r14+0x128]
  421a65:	test   eax,eax
  421a67:	jne    421c30 <__flatcc_fb_clear_parser@@Base+0x4c0>
  421a6d:	add    DWORD PTR [r14+0xe0],0x1
  421a75:	mov    rsi,r11
  421a78:	mov    rdi,r14
  421a7b:	mov    QWORD PTR [rsp+0x8],r11
  421a80:	call   4218c0 <__flatcc_fb_clear_parser@@Base+0x150>
  421a85:	sub    DWORD PTR [r14+0xe0],0x1
  421a8d:	test   eax,eax
  421a8f:	mov    r11,QWORD PTR [rsp+0x8]
  421a94:	jne    421977 <__flatcc_fb_clear_parser@@Base+0x207>
  421a9a:	movzx  ecx,WORD PTR [r11+0xb0]
  421aa2:	mov    rax,QWORD PTR [r11+0xb8]
  421aa9:	mov    QWORD PTR [rbx+0x80],rax
  421ab0:	mov    WORD PTR [rbx+0x72],cx
  421ab4:	movzx  eax,cx
  421ab7:	mov    rsi,QWORD PTR [rbp+0xb8]
  421abe:	lea    rdx,[rax-0x1]
  421ac2:	cmp    rdx,0xff
  421ac9:	jbe    421b60 <__flatcc_fb_clear_parser@@Base+0x3f0>
  421acf:	call   4052a9 <__sprintf_chk@plt+0x89>
  421ad4:	nop    DWORD PTR [rax+0x0]
  421ad8:	mov    rcx,QWORD PTR [rbx+0x18]
  421adc:	mov    rax,QWORD PTR [rcx+0x20]
  421ae0:	add    rax,0x3e7
  421ae6:	cmp    rax,0x1b
  421aea:	jbe    421b20 <__flatcc_fb_clear_parser@@Base+0x3b0>
  421aec:	mov    DWORD PTR [rbx+0x18],0x0
  421af3:	mov    rsi,QWORD PTR [rbx+0x8]
  421af7:	lea    rdx,[rip+0x26c6c]        # 44876a <fb_schema_table_missing@@Base+0x23fa>
  421afe:	xor    r9d,r9d
  421b01:	xor    r8d,r8d
  421b04:	mov    rdi,r14
  421b07:	call   41d580 <__flatcc_error_report@@Base>
  421b0c:	mov    eax,0xffffffff
  421b11:	jmp    421977 <__flatcc_fb_clear_parser@@Base+0x207>
  421b16:	nop    WORD PTR cs:[rax+rax*1+0x0]
  421b20:	mov    eax,DWORD PTR [r15+rax*4]
  421b24:	lea    rdi,[rip+0x26ff5]        # 448b20 <fb_schema_table_missing@@Base+0x27b0>
  421b2b:	mov    DWORD PTR [rbx+0x18],eax
  421b2e:	movsxd rax,DWORD PTR [rdi+rax*4]
  421b32:	test   rax,rax
  421b35:	je     421af3 <__flatcc_fb_clear_parser@@Base+0x383>
  421b37:	mov    ecx,eax
  421b39:	mov    WORD PTR [rbx+0x72],ax
  421b3d:	mov    QWORD PTR [rbx+0x80],rax
  421b44:	jmp    421ab4 <__flatcc_fb_clear_parser@@Base+0x344>
  421b49:	nop    DWORD PTR [rax+0x0]
  421b50:	mov    rax,QWORD PTR [r11+0xb8]
  421b57:	jmp    421b37 <__flatcc_fb_clear_parser@@Base+0x3c7>
  421b59:	nop    DWORD PTR [rax+0x0]
  421b60:	cmp    rax,0x1
  421b64:	je     421b81 <__flatcc_fb_clear_parser@@Base+0x411>
  421b66:	mov    edx,0x2
  421b6b:	jmp    421b7c <__flatcc_fb_clear_parser@@Base+0x40c>
  421b6d:	nop    DWORD PTR [rax]
  421b70:	add    rdx,rdx
  421b73:	cmp    rax,rdx
  421b76:	jb     421acf <__flatcc_fb_clear_parser@@Base+0x35f>
  421b7c:	cmp    rax,rdx
  421b7f:	jne    421b70 <__flatcc_fb_clear_parser@@Base+0x400>
  421b81:	lea    rdx,[rax+rsi*1-0x1]
  421b86:	neg    rax
  421b89:	and    rax,rdx
  421b8c:	cmp    rsi,rax
  421b8f:	mov    QWORD PTR [rbx+0x78],rax
  421b93:	ja     421c5c <__flatcc_fb_clear_parser@@Base+0x4ec>
  421b99:	add    rax,QWORD PTR [rbx+0x80]
  421ba0:	jb     421c5c <__flatcc_fb_clear_parser@@Base+0x4ec>
  421ba6:	cmp    rsi,rax
  421ba9:	ja     421c00 <__flatcc_fb_clear_parser@@Base+0x490>
  421bab:	cmp    rax,0xffff
  421bb1:	ja     421c00 <__flatcc_fb_clear_parser@@Base+0x490>
  421bb3:	mov    rbx,QWORD PTR [rbx]
  421bb6:	cmp    r12w,cx
  421bba:	mov    QWORD PTR [rbp+0xb8],rax
  421bc1:	cmovb  r12d,ecx
  421bc5:	test   rbx,rbx
  421bc8:	je     421990 <__flatcc_fb_clear_parser@@Base+0x220>
  421bce:	cmp    DWORD PTR [r14+0xe0],0x63
  421bd6:	jle    421931 <__flatcc_fb_clear_parser@@Base+0x1c1>
  421bdc:	lea    rdx,[rip+0x257fd]        # 4473e0 <fb_schema_table_missing@@Base+0x1070>
  421be3:	xor    r9d,r9d
  421be6:	xor    r8d,r8d
  421be9:	xor    ecx,ecx
  421beb:	xor    esi,esi
  421bed:	mov    rdi,r14
  421bf0:	call   41d580 <__flatcc_error_report@@Base>
  421bf5:	mov    eax,0xffffffff
  421bfa:	jmp    421977 <__flatcc_fb_clear_parser@@Base+0x207>
  421bff:	nop
  421c00:	mov    rsi,QWORD PTR [rbx+0x8]
  421c04:	xor    ecx,ecx
  421c06:	xor    r9d,r9d
  421c09:	xor    r8d,r8d
  421c0c:	mov    rdx,r13
  421c0f:	mov    rdi,r14
  421c12:	mov    QWORD PTR [rsp+0x8],rax
  421c17:	call   41d580 <__flatcc_error_report@@Base>
  421c1c:	movzx  ecx,WORD PTR [rbx+0x72]
  421c20:	mov    rax,QWORD PTR [rsp+0x8]
  421c25:	jmp    421bb3 <__flatcc_fb_clear_parser@@Base+0x443>
  421c27:	nop    WORD PTR [rax+rax*1+0x0]
  421c30:	mov    rcx,QWORD PTR [r11+0x8]
  421c34:	mov    rsi,QWORD PTR [rbx+0x8]
  421c38:	lea    rdx,[rip+0x25811]        # 447450 <fb_schema_table_missing@@Base+0x10e0>
  421c3f:	xor    r9d,r9d
  421c42:	xor    r8d,r8d
  421c45:	mov    rdi,r14
  421c48:	mov    QWORD PTR [rsp+0x8],r11
  421c4d:	call   41d580 <__flatcc_error_report@@Base>
  421c52:	mov    r11,QWORD PTR [rsp+0x8]
  421c57:	jmp    421a6d <__flatcc_fb_clear_parser@@Base+0x2fd>
  421c5c:	mov    rsi,QWORD PTR [rbx+0x8]
  421c60:	lea    rdx,[rip+0x26b13]        # 44877a <fb_schema_table_missing@@Base+0x240a>
  421c67:	xor    r9d,r9d
  421c6a:	xor    r8d,r8d
  421c6d:	xor    ecx,ecx
  421c6f:	mov    rdi,r14
  421c72:	call   41d580 <__flatcc_error_report@@Base>
  421c77:	mov    eax,0xffffffff
  421c7c:	jmp    421977 <__flatcc_fb_clear_parser@@Base+0x207>
  421c81:	mov    WORD PTR [rbp+0xb0],r12w
  421c89:	movzx  eax,r12w
  421c8d:	jmp    4219aa <__flatcc_fb_clear_parser@@Base+0x23a>
  421c92:	mov    rcx,QWORD PTR [r11+0x8]
  421c96:	mov    rsi,QWORD PTR [rbx+0x8]
  421c9a:	lea    rdx,[rip+0x2578f]        # 447430 <fb_schema_table_missing@@Base+0x10c0>
  421ca1:	xor    r9d,r9d
  421ca4:	xor    r8d,r8d
  421ca7:	mov    rdi,r14
  421caa:	call   41d580 <__flatcc_error_report@@Base>
  421caf:	mov    eax,0xffffffff
  421cb4:	jmp    421977 <__flatcc_fb_clear_parser@@Base+0x207>
  421cb9:	mov    rsi,QWORD PTR [rbx+0x8]
  421cbd:	lea    rdx,[rip+0x257d4]        # 447498 <fb_schema_table_missing@@Base+0x1128>
  421cc4:	xor    r9d,r9d
  421cc7:	xor    r8d,r8d
  421cca:	xor    ecx,ecx
  421ccc:	mov    rdi,r14
  421ccf:	call   41d580 <__flatcc_error_report@@Base>
  421cd4:	mov    eax,0xffffffff
  421cd9:	jmp    421977 <__flatcc_fb_clear_parser@@Base+0x207>
  421cde:	mov    rsi,QWORD PTR [rbp+0x8]
  421ce2:	lea    rdx,[rip+0x2580f]        # 4474f8 <fb_schema_table_missing@@Base+0x1188>
  421ce9:	xor    r9d,r9d
  421cec:	xor    r8d,r8d
  421cef:	xor    ecx,ecx
  421cf1:	mov    rdi,r14
  421cf4:	call   41d580 <__flatcc_error_report@@Base>
  421cf9:	mov    WORD PTR [rbp+0xb0],r12w
  421d01:	movzx  eax,r12w
  421d05:	jmp    4219aa <__flatcc_fb_clear_parser@@Base+0x23a>
  421d0a:	lea    rcx,[rip+0x26df7]        # 448b08 <fb_schema_table_missing@@Base+0x2798>
  421d11:	lea    rsi,[rip+0x25638]        # 447350 <fb_schema_table_missing@@Base+0xfe0>
  421d18:	lea    rdi,[rip+0xd171]        # 42ee90 <_IO_stdin_used@@Base+0x1e90>
  421d1f:	mov    edx,0x1f6
  421d24:	call   405100 <__assert_fail@plt>
  421d29:	lea    rcx,[rip+0x26dd8]        # 448b08 <fb_schema_table_missing@@Base+0x2798>
  421d30:	lea    rsi,[rip+0x25619]        # 447350 <fb_schema_table_missing@@Base+0xfe0>
  421d37:	lea    rdi,[rip+0x2567a]        # 4473b8 <fb_schema_table_missing@@Base+0x1048>
  421d3e:	mov    edx,0x1f8
  421d43:	call   405100 <__assert_fail@plt>
  421d48:	lea    rcx,[rip+0x26db9]        # 448b08 <fb_schema_table_missing@@Base+0x2798>
  421d4f:	lea    rsi,[rip+0x255fa]        # 447350 <fb_schema_table_missing@@Base+0xfe0>
  421d56:	lea    rdi,[rip+0x26a02]        # 44875f <fb_schema_table_missing@@Base+0x23ef>
  421d5d:	mov    edx,0x1fc
  421d62:	call   405100 <__assert_fail@plt>
  421d67:	nop    WORD PTR [rax+rax*1+0x0]
  421d70:	push   r15
  421d72:	push   r14
  421d74:	mov    r14,rsi
  421d77:	push   r13
  421d79:	push   r12
  421d7b:	push   rbp
  421d7c:	push   rbx
  421d7d:	mov    rbx,rdi
  421d80:	sub    rsp,0xf8
  421d87:	mov    rax,QWORD PTR fs:0x28
  421d90:	mov    QWORD PTR [rsp+0xe8],rax
  421d98:	xor    eax,eax
  421d9a:	movzx  eax,WORD PTR [rsi+0x10]
  421d9e:	cmp    ax,0x4
  421da2:	mov    WORD PTR [rsp+0x6],ax
  421da7:	je     422450 <__flatcc_fb_clear_parser@@Base+0xce0>
  421dad:	cmp    ax,0x3
  421db1:	jne    422a34 <__flatcc_fb_clear_parser@@Base+0x12c4>
  421db7:	movzx  eax,WORD PTR [rsi+0x58]
  421dbb:	test   ax,ax
  421dbe:	je     4228f5 <__flatcc_fb_clear_parser@@Base+0x1185>
  421dc4:	cmp    ax,0x8
  421dc8:	jne    4228a9 <__flatcc_fb_clear_parser@@Base+0x1139>
  421dce:	mov    rax,QWORD PTR [rsi+0x48]
  421dd2:	mov    rax,QWORD PTR [rax+0x20]
  421dd6:	add    rax,0x3e7
  421ddc:	cmp    rax,0x1b
  421de0:	ja     4221b8 <__flatcc_fb_clear_parser@@Base+0xa48>
  421de6:	lea    rdx,[rip+0x26c33]        # 448a20 <fb_schema_table_missing@@Base+0x26b0>
  421ded:	mov    ecx,DWORD PTR [rdx+rax*4]
  421df0:	lea    rax,[rip+0x26d29]        # 448b20 <fb_schema_table_missing@@Base+0x27b0>
  421df7:	movsxd rax,DWORD PTR [rax+rcx*4]
  421dfb:	mov    rdx,rcx
  421dfe:	mov    ecx,eax
  421e00:	mov    DWORD PTR [r14+0x48],edx
  421e04:	mov    QWORD PTR [r14+0xb8],rax
  421e0b:	mov    WORD PTR [r14+0xb0],cx
  421e13:	mov    r15,QWORD PTR [r14+0x38]
  421e17:	lea    r13,[rsp+0x80]
  421e1f:	xor    eax,eax
  421e21:	mov    ecx,0xc
  421e26:	mov    rdi,r13
  421e29:	test   r15,r15
  421e2c:	rep stos QWORD PTR es:[rdi],rax
  421e2f:	je     4226bd <__flatcc_fb_clear_parser@@Base+0xf4d>
  421e35:	mov    ebp,0x64
  421e3a:	xor    r12d,r12d
  421e3d:	jmp    421e86 <__flatcc_fb_clear_parser@@Base+0x716>
  421e3f:	nop
  421e40:	mov    edx,0x1
  421e45:	shlx   edx,edx,eax
  421e4a:	or     r12d,edx
  421e4d:	lea    rdx,[r13+rax*8+0x0]
  421e52:	cmp    QWORD PTR [rdx],0x0
  421e56:	je     4221c8 <__flatcc_fb_clear_parser@@Base+0xa58>
  421e5c:	mov    rsi,QWORD PTR [r15+0x8]
  421e60:	lea    rdx,[rip+0x25799]        # 447600 <fb_schema_table_missing@@Base+0x1290>
  421e67:	xor    r9d,r9d
  421e6a:	xor    r8d,r8d
  421e6d:	xor    ecx,ecx
  421e6f:	mov    rdi,rbx
  421e72:	call   41d580 <__flatcc_error_report@@Base>
  421e77:	mov    r15,QWORD PTR [r15]
  421e7a:	sub    ebp,0x1
  421e7d:	test   r15,r15
  421e80:	je     421ee0 <__flatcc_fb_clear_parser@@Base+0x770>
  421e82:	test   ebp,ebp
  421e84:	je     421ee0 <__flatcc_fb_clear_parser@@Base+0x770>
  421e86:	mov    rax,QWORD PTR [r15+0x8]
  421e8a:	mov    rdi,QWORD PTR [rbx+0x260]
  421e91:	mov    rdx,QWORD PTR [rax+0x8]
  421e95:	mov    rsi,QWORD PTR [rax]
  421e98:	add    rdi,0x20
  421e9c:	call   42bd20 <fb_name_table_find@@Base>
  421ea1:	test   rax,rax
  421ea4:	je     4222e0 <__flatcc_fb_clear_parser@@Base+0xb70>
  421eaa:	movsxd rax,DWORD PTR [rax+0x20]
  421eae:	test   eax,eax
  421eb0:	je     421e77 <__flatcc_fb_clear_parser@@Base+0x707>
  421eb2:	cmp    al,0x5
  421eb4:	je     421e40 <__flatcc_fb_clear_parser@@Base+0x6d0>
  421eb6:	mov    rsi,QWORD PTR [r15+0x8]
  421eba:	lea    rdx,[rip+0x2570f]        # 4475d0 <fb_schema_table_missing@@Base+0x1260>
  421ec1:	xor    r9d,r9d
  421ec4:	xor    r8d,r8d
  421ec7:	xor    ecx,ecx
  421ec9:	mov    rdi,rbx
  421ecc:	sub    ebp,0x1
  421ecf:	call   41d580 <__flatcc_error_report@@Base>
  421ed4:	mov    r15,QWORD PTR [r15]
  421ed7:	test   r15,r15
  421eda:	jne    421e82 <__flatcc_fb_clear_parser@@Base+0x712>
  421edc:	nop    DWORD PTR [rax+0x0]
  421ee0:	test   r15,r15
  421ee3:	je     421f00 <__flatcc_fb_clear_parser@@Base+0x790>
  421ee5:	mov    rsi,QWORD PTR [r15+0x8]
  421ee9:	lea    rdx,[rip+0x268d3]        # 4487c3 <fb_schema_table_missing@@Base+0x2453>
  421ef0:	xor    r9d,r9d
  421ef3:	xor    r8d,r8d
  421ef6:	xor    ecx,ecx
  421ef8:	mov    rdi,rbx
  421efb:	call   41d580 <__flatcc_error_report@@Base>
  421f00:	mov    eax,r12d
  421f03:	mov    WORD PTR [r14+0xa4],r12w
  421f0b:	mov    DWORD PTR [rsp+0x38],0x0
  421f13:	and    eax,0x20
  421f16:	test   ax,ax
  421f19:	je     421f2c <__flatcc_fb_clear_parser@@Base+0x7bc>
  421f1b:	mov    QWORD PTR [rsp+0x40],0x0
  421f24:	mov    DWORD PTR [rsp+0x38],0x1
  421f2c:	mov    edx,DWORD PTR [r14+0x48]
  421f30:	cmp    edx,0x5
  421f33:	jne    422300 <__flatcc_fb_clear_parser@@Base+0xb90>
  421f39:	mov    edi,0x6
  421f3e:	mov    BYTE PTR [rsp+0x40],0x0
  421f43:	mov    WORD PTR [rsp+0x50],di
  421f48:	mov    rax,QWORD PTR [rsp+0x40]
  421f4d:	mov    r13,QWORD PTR [r14+0x28]
  421f51:	mov    QWORD PTR [rsp+0x60],rax
  421f56:	mov    rax,QWORD PTR [rsp+0x48]
  421f5b:	test   r13,r13
  421f5e:	mov    QWORD PTR [rsp+0x68],rax
  421f63:	mov    rax,QWORD PTR [rsp+0x50]
  421f68:	mov    QWORD PTR [rsp+0x70],rax
  421f6d:	je     422188 <__flatcc_fb_clear_parser@@Base+0xa18>
  421f73:	lea    rax,[r14+0x80]
  421f7a:	lea    r12,[r14+0x60]
  421f7e:	mov    ebp,0x1
  421f83:	lea    r15,[rbx+0x1f8]
  421f8a:	mov    QWORD PTR [rsp+0x10],r14
  421f8f:	mov    QWORD PTR [rsp+0x8],rax
  421f94:	lea    rax,[rsp+0x40]
  421f99:	mov    QWORD PTR [rsp+0x18],rax
  421f9e:	jmp    421fe6 <__flatcc_fb_clear_parser@@Base+0x876>
  421fa0:	mov    rcx,QWORD PTR [rax+0x8]
  421fa4:	lea    rax,[rbx+0x80]
  421fab:	xor    r9d,r9d
  421fae:	xor    r8d,r8d
  421fb1:	mov    rsi,QWORD PTR [r13+0x8]
  421fb5:	cmp    rcx,rax
  421fb8:	je     422210 <__flatcc_fb_clear_parser@@Base+0xaa0>
  421fbe:	lea    rdx,[rip+0x2682f]        # 4487f4 <fb_schema_table_missing@@Base+0x2484>
  421fc5:	mov    rdi,rbx
  421fc8:	call   41d580 <__flatcc_error_report@@Base>
  421fcd:	mov    edx,0x1
  421fd2:	mov    WORD PTR [r13+0x28],dx
  421fd7:	mov    r13,QWORD PTR [r13+0x0]
  421fdb:	xor    ebp,ebp
  421fdd:	test   r13,r13
  421fe0:	je     422188 <__flatcc_fb_clear_parser@@Base+0xa18>
  421fe6:	mov    edx,0x1
  421feb:	mov    rsi,r13
  421fee:	mov    rdi,r12
  421ff1:	call   41b2e0 <fb_symbol_table_insert_item@@Base>
  421ff6:	test   rax,rax
  421ff9:	jne    421fa0 <__flatcc_fb_clear_parser@@Base+0x830>
  421ffb:	cmp    WORD PTR [r13+0x10],0x5
  422001:	jne    422698 <__flatcc_fb_clear_parser@@Base+0xf28>
  422007:	cmp    QWORD PTR [r13+0x60],0x0
  42200c:	jne    422a15 <__flatcc_fb_clear_parser@@Base+0x12a5>
  422012:	cmp    WORD PTR [rsp+0x6],0x4
  422018:	je     422280 <__flatcc_fb_clear_parser@@Base+0xb10>
  42201e:	movzx  eax,WORD PTR [r13+0x58]
  422023:	xor    ebp,0x1
  422026:	test   ax,ax
  422029:	jne    422730 <__flatcc_fb_clear_parser@@Base+0xfc0>
  42202f:	test   bpl,bpl
  422032:	je     422730 <__flatcc_fb_clear_parser@@Base+0xfc0>
  422038:	movzx  eax,WORD PTR [rsp+0x50]
  42203d:	cmp    ax,0x5
  422041:	je     422230 <__flatcc_fb_clear_parser@@Base+0xac0>
  422047:	cmp    ax,0x4
  42204b:	je     4224bc <__flatcc_fb_clear_parser@@Base+0xd4c>
  422051:	cmp    ax,0x6
  422055:	je     422546 <__flatcc_fb_clear_parser@@Base+0xdd6>
  42205b:	nop    DWORD PTR [rax+rax*1+0x0]
  422060:	mov    r11d,DWORD PTR [rsp+0x38]
  422065:	test   r11d,r11d
  422068:	je     422258 <__flatcc_fb_clear_parser@@Base+0xae8>
  42206e:	mov    rax,QWORD PTR [rsp+0x10]
  422073:	mov    rcx,QWORD PTR [rsp+0x40]
  422078:	mov    esi,DWORD PTR [rax+0x48]
  42207b:	lea    rax,[rip+0x26a9e]        # 448b20 <fb_schema_table_missing@@Base+0x27b0>
  422082:	movsxd rax,DWORD PTR [rax+rsi*4]
  422086:	mov    rdx,rsi
  422089:	shl    rax,0x3
  42208d:	cmp    rcx,rax
  422090:	jae    4226d4 <__flatcc_fb_clear_parser@@Base+0xf64>
  422096:	mov    eax,0x1
  42209b:	mov    r9d,0x5
  4220a1:	mov    rsi,r13
  4220a4:	shlx   rax,rax,rcx
  4220a9:	lea    rcx,[r13+0x48]
  4220ad:	mov    WORD PTR [r13+0x58],r9w
  4220b2:	mov    QWORD PTR [r13+0x48],rax
  4220b6:	mov    rdi,rbx
  4220b9:	call   4263d0 <__flatcc_fb_coerce_scalar_type@@Base>
  4220be:	test   eax,eax
  4220c0:	jne    4226d4 <__flatcc_fb_clear_parser@@Base+0xf64>
  4220c6:	test   bpl,bpl
  4220c9:	je     422108 <__flatcc_fb_clear_parser@@Base+0x998>
  4220cb:	mov    r8d,DWORD PTR [rbx+0x120]
  4220d2:	test   r8d,r8d
  4220d5:	je     422108 <__flatcc_fb_clear_parser@@Base+0x998>
  4220d7:	movzx  eax,WORD PTR [rsp+0x50]
  4220dc:	cmp    ax,0x5
  4220e0:	je     422388 <__flatcc_fb_clear_parser@@Base+0xc18>
  4220e6:	cmp    ax,0x4
  4220ea:	je     4223e0 <__flatcc_fb_clear_parser@@Base+0xc70>
  4220f0:	cmp    ax,0x6
  4220f4:	jne    422108 <__flatcc_fb_clear_parser@@Base+0x998>
  4220f6:	movzx  eax,BYTE PTR [rsp+0x60]
  4220fb:	cmp    BYTE PTR [rsp+0x40],al
  4220ff:	jbe    4229a1 <__flatcc_fb_clear_parser@@Base+0x1231>
  422105:	nop    DWORD PTR [rax]
  422108:	mov    rax,QWORD PTR [rsp+0x40]
  42210d:	mov    rdi,QWORD PTR [rsp+0x8]
  422112:	lea    rsi,[r13+0x48]
  422116:	mov    edx,0x1
  42211b:	mov    QWORD PTR [rsp+0x60],rax
  422120:	mov    rax,QWORD PTR [rsp+0x48]
  422125:	mov    QWORD PTR [rsp+0x68],rax
  42212a:	mov    rax,QWORD PTR [rsp+0x50]
  42212f:	mov    QWORD PTR [rsp+0x70],rax
  422134:	call   42c450 <fb_value_set_insert_item@@Base>
  422139:	test   rax,rax
  42213c:	je     422150 <__flatcc_fb_clear_parser@@Base+0x9e0>
  42213e:	cmp    WORD PTR [rsp+0x6],0x4
  422144:	je     42278c <__flatcc_fb_clear_parser@@Base+0x101c>
  42214a:	or     WORD PTR [r13+0x12],0x4
  422150:	cmp    QWORD PTR [r13+0x60],0x0
  422155:	je     421fd7 <__flatcc_fb_clear_parser@@Base+0x867>
  42215b:	mov    rsi,QWORD PTR [r13+0x8]
  42215f:	lea    rdx,[rip+0x25872]        # 4479d8 <fb_schema_table_missing@@Base+0x1668>
  422166:	xor    r9d,r9d
  422169:	xor    r8d,r8d
  42216c:	xor    ecx,ecx
  42216e:	mov    rdi,rbx
  422171:	xor    ebp,ebp
  422173:	call   41d580 <__flatcc_error_report@@Base>
  422178:	mov    r13,QWORD PTR [r13+0x0]
  42217c:	test   r13,r13
  42217f:	jne    421fe6 <__flatcc_fb_clear_parser@@Base+0x876>
  422185:	nop    DWORD PTR [rax]
  422188:	xor    eax,eax
  42218a:	mov    rbx,QWORD PTR [rsp+0xe8]
  422192:	xor    rbx,QWORD PTR fs:0x28
  42219b:	jne    422a53 <__flatcc_fb_clear_parser@@Base+0x12e3>
  4221a1:	add    rsp,0xf8
  4221a8:	pop    rbx
  4221a9:	pop    rbp
  4221aa:	pop    r12
  4221ac:	pop    r13
  4221ae:	pop    r14
  4221b0:	pop    r15
  4221b2:	ret    
  4221b3:	nop    DWORD PTR [rax+rax*1+0x0]
  4221b8:	xor    ecx,ecx
  4221ba:	xor    eax,eax
  4221bc:	xor    edx,edx
  4221be:	jmp    421e00 <__flatcc_fb_clear_parser@@Base+0x690>
  4221c3:	nop    DWORD PTR [rax+rax*1+0x0]
  4221c8:	lea    rcx,[rip+0x269b1]        # 448b80 <fb_schema_table_missing@@Base+0x2810>
  4221cf:	mov    QWORD PTR [rdx],r15
  4221d2:	mov    eax,DWORD PTR [rcx+rax*4]
  4221d5:	test   eax,eax
  4221d7:	jne    422350 <__flatcc_fb_clear_parser@@Base+0xbe0>
  4221dd:	cmp    WORD PTR [r15+0x20],0x0
  4221e3:	je     421e77 <__flatcc_fb_clear_parser@@Base+0x707>
  4221e9:	mov    rsi,QWORD PTR [r15+0x8]
  4221ed:	lea    rdx,[rip+0x25434]        # 447628 <fb_schema_table_missing@@Base+0x12b8>
  4221f4:	xor    r9d,r9d
  4221f7:	xor    r8d,r8d
  4221fa:	xor    ecx,ecx
  4221fc:	mov    rdi,rbx
  4221ff:	call   41d580 <__flatcc_error_report@@Base>
  422204:	jmp    421e77 <__flatcc_fb_clear_parser@@Base+0x707>
  422209:	nop    DWORD PTR [rax+0x0]
  422210:	lea    rdx,[rip+0x265c0]        # 4487d7 <fb_schema_table_missing@@Base+0x2467>
  422217:	xor    ecx,ecx
  422219:	mov    rdi,rbx
  42221c:	call   41d580 <__flatcc_error_report@@Base>
  422221:	mov    ecx,0x1
  422226:	mov    WORD PTR [r13+0x28],cx
  42222b:	jmp    421fd7 <__flatcc_fb_clear_parser@@Base+0x867>
  422230:	mov    rax,QWORD PTR [rsp+0x10]
  422235:	cmp    DWORD PTR [rax+0x48],0x6
  422239:	je     4226f9 <__flatcc_fb_clear_parser@@Base+0xf89>
  42223f:	mov    eax,DWORD PTR [rsp+0x38]
  422243:	add    QWORD PTR [rsp+0x40],0x1
  422249:	test   eax,eax
  42224b:	jne    42206e <__flatcc_fb_clear_parser@@Base+0x8fe>
  422251:	nop    DWORD PTR [rax+0x0]
  422258:	mov    rax,QWORD PTR [rsp+0x40]
  42225d:	mov    QWORD PTR [r13+0x48],rax
  422261:	mov    rax,QWORD PTR [rsp+0x48]
  422266:	mov    QWORD PTR [r13+0x50],rax
  42226a:	mov    rax,QWORD PTR [rsp+0x50]
  42226f:	mov    QWORD PTR [r13+0x58],rax
  422273:	jmp    4220c6 <__flatcc_fb_clear_parser@@Base+0x956>
  422278:	nop    DWORD PTR [rax+rax*1+0x0]
  422280:	mov    rsi,QWORD PTR [r13+0x8]
  422284:	lea    rax,[rbx+0x80]
  42228b:	cmp    rsi,rax
  42228e:	je     42253a <__flatcc_fb_clear_parser@@Base+0xdca>
  422294:	movzx  eax,WORD PTR [r13+0x28]
  422299:	cmp    ax,0xa
  42229d:	je     422440 <__flatcc_fb_clear_parser@@Base+0xcd0>
  4222a3:	cmp    ax,0xc
  4222a7:	je     42255b <__flatcc_fb_clear_parser@@Base+0xdeb>
  4222ad:	cmp    ax,0x1
  4222b1:	je     421fd7 <__flatcc_fb_clear_parser@@Base+0x867>
  4222b7:	lea    rdx,[rip+0x254b2]        # 447770 <fb_schema_table_missing@@Base+0x1400>
  4222be:	xor    r9d,r9d
  4222c1:	xor    r8d,r8d
  4222c4:	xor    ecx,ecx
  4222c6:	mov    rdi,rbx
  4222c9:	call   41d580 <__flatcc_error_report@@Base>
  4222ce:	mov    eax,0x1
  4222d3:	mov    WORD PTR [r13+0x28],ax
  4222d8:	jmp    421fd7 <__flatcc_fb_clear_parser@@Base+0x867>
  4222dd:	nop    DWORD PTR [rax]
  4222e0:	mov    rsi,QWORD PTR [r15+0x8]
  4222e4:	lea    rdx,[rip+0x252c5]        # 4475b0 <fb_schema_table_missing@@Base+0x1240>
  4222eb:	xor    r9d,r9d
  4222ee:	xor    r8d,r8d
  4222f1:	xor    ecx,ecx
  4222f3:	mov    rdi,rbx
  4222f6:	call   41d580 <__flatcc_error_report@@Base>
  4222fb:	jmp    421e77 <__flatcc_fb_clear_parser@@Base+0x707>
  422300:	mov    esi,0x4
  422305:	lea    rcx,[rsp+0x40]
  42230a:	mov    rdi,rbx
  42230d:	mov    WORD PTR [rsp+0x50],si
  422312:	mov    rsi,r14
  422315:	mov    QWORD PTR [rsp+0x40],0x0
  42231e:	call   4263d0 <__flatcc_fb_coerce_scalar_type@@Base>
  422323:	test   eax,eax
  422325:	je     421f48 <__flatcc_fb_clear_parser@@Base+0x7d8>
  42232b:	lea    rdx,[rip+0x253ce]        # 447700 <fb_schema_table_missing@@Base+0x1390>
  422332:	xor    r9d,r9d
  422335:	xor    r8d,r8d
  422338:	xor    ecx,ecx
  42233a:	xor    esi,esi
  42233c:	mov    rdi,rbx
  42233f:	call   41d580 <__flatcc_error_report@@Base>
  422344:	mov    eax,0xffffffff
  422349:	jmp    42218a <__flatcc_fb_clear_parser@@Base+0xa1a>
  42234e:	xchg   ax,ax
  422350:	cmp    eax,0x2
  422353:	jne    42248b <__flatcc_fb_clear_parser@@Base+0xd1b>
  422359:	cmp    WORD PTR [r15+0x20],0x2
  42235f:	je     421e77 <__flatcc_fb_clear_parser@@Base+0x707>
  422365:	mov    rsi,QWORD PTR [r15+0x8]
  422369:	lea    rdx,[rip+0x252e0]        # 447650 <fb_schema_table_missing@@Base+0x12e0>
  422370:	xor    r9d,r9d
  422373:	xor    r8d,r8d
  422376:	xor    ecx,ecx
  422378:	mov    rdi,rbx
  42237b:	call   41d580 <__flatcc_error_report@@Base>
  422380:	jmp    421e77 <__flatcc_fb_clear_parser@@Base+0x707>
  422385:	nop    DWORD PTR [rax]
  422388:	mov    rax,QWORD PTR [rsp+0x60]
  42238d:	cmp    QWORD PTR [rsp+0x40],rax
  422392:	ja     422108 <__flatcc_fb_clear_parser@@Base+0x998>
  422398:	xor    r9d,r9d
  42239b:	xor    r8d,r8d
  42239e:	xor    ecx,ecx
  4223a0:	cmp    WORD PTR [rsp+0x6],0x4
  4223a6:	mov    rsi,QWORD PTR [r13+0x8]
  4223aa:	jne    4223b8 <__flatcc_fb_clear_parser@@Base+0xc48>
  4223ac:	cmp    QWORD PTR [rsp+0x60],0x0
  4223b2:	je     4229d0 <__flatcc_fb_clear_parser@@Base+0x1260>
  4223b8:	lea    rdx,[rip+0x25561]        # 447920 <fb_schema_table_missing@@Base+0x15b0>
  4223bf:	mov    rdi,rbx
  4223c2:	call   41d580 <__flatcc_error_report@@Base>
  4223c7:	mov    esi,0x1
  4223cc:	mov    eax,0xffffffff
  4223d1:	mov    WORD PTR [r13+0x58],si
  4223d6:	jmp    42218a <__flatcc_fb_clear_parser@@Base+0xa1a>
  4223db:	nop    DWORD PTR [rax+rax*1+0x0]
  4223e0:	mov    rax,QWORD PTR [rsp+0x60]
  4223e5:	cmp    QWORD PTR [rsp+0x40],rax
  4223ea:	jg     422108 <__flatcc_fb_clear_parser@@Base+0x998>
  4223f0:	jmp    422398 <__flatcc_fb_clear_parser@@Base+0xc28>
  4223f2:	nop    WORD PTR [rax+rax*1+0x0]
  4223f8:	mov    rsi,QWORD PTR [rax+0x20]
  4223fc:	mov    rdi,QWORD PTR [rsp+0x30]
  422401:	mov    QWORD PTR [rsp+0x20],rax
  422406:	call   41aba0 <ptr_set_find_item@@Base>
  42240b:	test   rax,rax
  42240e:	mov    rdx,QWORD PTR [rsp+0x20]
  422413:	je     4225e4 <__flatcc_fb_clear_parser@@Base+0xe74>
  422419:	mov    ebp,DWORD PTR [rsp+0x3c]
  42241d:	mov    r12,QWORD PTR [rsp+0x28]
  422422:	cmp    WORD PTR [rdx+0x10],0x1
  422427:	ja     422848 <__flatcc_fb_clear_parser@@Base+0x10d8>
  42242d:	mov    eax,0xe
  422432:	mov    QWORD PTR [r13+0x18],rdx
  422436:	mov    WORD PTR [r13+0x28],ax
  42243b:	nop    DWORD PTR [rax+rax*1+0x0]
  422440:	mov    QWORD PTR [r13+0x80],0x0
  42244b:	jmp    42201e <__flatcc_fb_clear_parser@@Base+0x8ae>
  422450:	cmp    WORD PTR [rsi+0x58],0x0
  422455:	jne    4229f3 <__flatcc_fb_clear_parser@@Base+0x1283>
  42245b:	mov    r8d,0x8
  422461:	mov    r9d,0x1
  422467:	mov    DWORD PTR [rsi+0x48],0x4
  42246e:	mov    WORD PTR [rsi+0x58],r8w
  422473:	mov    QWORD PTR [rsi+0xb8],0x1
  42247e:	mov    WORD PTR [rsi+0xb0],r9w
  422486:	jmp    421e13 <__flatcc_fb_clear_parser@@Base+0x6a3>
  42248b:	cmp    eax,0x5
  42248e:	jne    4224ff <__flatcc_fb_clear_parser@@Base+0xd8f>
  422490:	cmp    WORD PTR [r15+0x20],0x5
  422496:	je     421e77 <__flatcc_fb_clear_parser@@Base+0x707>
  42249c:	mov    rsi,QWORD PTR [r15+0x8]
  4224a0:	lea    rdx,[rip+0x251d1]        # 447678 <fb_schema_table_missing@@Base+0x1308>
  4224a7:	xor    r9d,r9d
  4224aa:	xor    r8d,r8d
  4224ad:	xor    ecx,ecx
  4224af:	mov    rdi,rbx
  4224b2:	call   41d580 <__flatcc_error_report@@Base>
  4224b7:	jmp    421e77 <__flatcc_fb_clear_parser@@Base+0x707>
  4224bc:	mov    rax,QWORD PTR [rsp+0x10]
  4224c1:	cmp    DWORD PTR [rax+0x48],0x6
  4224c5:	jne    42223f <__flatcc_fb_clear_parser@@Base+0xacf>
  4224cb:	mov    rax,QWORD PTR [rsp+0x40]
  4224d0:	movabs rdx,0x7fffffffffffffff
  4224da:	cmp    rax,rdx
  4224dd:	je     422976 <__flatcc_fb_clear_parser@@Base+0x1206>
  4224e3:	mov    r14d,DWORD PTR [rsp+0x38]
  4224e8:	add    rax,0x1
  4224ec:	mov    QWORD PTR [rsp+0x40],rax
  4224f1:	test   r14d,r14d
  4224f4:	jne    42206e <__flatcc_fb_clear_parser@@Base+0x8fe>
  4224fa:	jmp    422258 <__flatcc_fb_clear_parser@@Base+0xae8>
  4224ff:	cmp    eax,0x4
  422502:	jne    422874 <__flatcc_fb_clear_parser@@Base+0x1104>
  422508:	movzx  eax,WORD PTR [r15+0x20]
  42250d:	sub    eax,0x4
  422510:	cmp    ax,0x1
  422514:	jbe    421e77 <__flatcc_fb_clear_parser@@Base+0x707>
  42251a:	mov    rsi,QWORD PTR [r15+0x8]
  42251e:	lea    rdx,[rip+0x25183]        # 4476a8 <fb_schema_table_missing@@Base+0x1338>
  422525:	xor    r9d,r9d
  422528:	xor    r8d,r8d
  42252b:	xor    ecx,ecx
  42252d:	mov    rdi,rbx
  422530:	call   41d580 <__flatcc_error_report@@Base>
  422535:	jmp    421e77 <__flatcc_fb_clear_parser@@Base+0x707>
  42253a:	xor    eax,eax
  42253c:	mov    WORD PTR [r13+0x28],ax
  422541:	jmp    42201e <__flatcc_fb_clear_parser@@Base+0x8ae>
  422546:	cmp    BYTE PTR [rsp+0x40],0x1
  42254b:	je     4228cb <__flatcc_fb_clear_parser@@Base+0x115b>
  422551:	mov    BYTE PTR [rsp+0x40],0x1
  422556:	jmp    422060 <__flatcc_fb_clear_parser@@Base+0x8f0>
  42255b:	mov    rax,QWORD PTR [rsp+0x10]
  422560:	mov    rsi,QWORD PTR [r13+0x18]
  422564:	mov    rax,QWORD PTR [rax+0x18]
  422568:	test   rsi,rsi
  42256b:	mov    r11,rax
  42256e:	je     422669 <__flatcc_fb_clear_parser@@Base+0xef9>
  422574:	mov    rdi,rsi
  422577:	xor    edx,edx
  422579:	jmp    422585 <__flatcc_fb_clear_parser@@Base+0xe15>
  42257b:	nop    DWORD PTR [rax+rax*1+0x0]
  422580:	mov    edx,ecx
  422582:	mov    rdi,rax
  422585:	mov    rax,QWORD PTR [rdi]
  422588:	lea    ecx,[rdx+0x1]
  42258b:	test   rax,rax
  42258e:	jne    422580 <__flatcc_fb_clear_parser@@Base+0xe10>
  422590:	test   r11,r11
  422593:	mov    r14,rdi
  422596:	je     4227bb <__flatcc_fb_clear_parser@@Base+0x104b>
  42259c:	cmp    ecx,0x1
  42259f:	jne    4227bb <__flatcc_fb_clear_parser@@Base+0x104b>
  4225a5:	lea    rax,[rbx+0x320]
  4225ac:	mov    DWORD PTR [rsp+0x3c],ebp
  4225b0:	mov    r14,r11
  4225b3:	mov    QWORD PTR [rsp+0x28],r12
  4225b8:	mov    rbp,rdi
  4225bb:	mov    QWORD PTR [rsp+0x30],rax
  4225c0:	mov    rax,QWORD PTR [rbp+0x8]
  4225c4:	lea    rdi,[r14+0x8]
  4225c8:	mov    rdx,QWORD PTR [rax+0x8]
  4225cc:	mov    rsi,QWORD PTR [rax]
  4225cf:	call   41b300 <fb_symbol_table_find@@Base>
  4225d4:	test   rax,rax
  4225d7:	je     4225e4 <__flatcc_fb_clear_parser@@Base+0xe74>
  4225d9:	cmp    WORD PTR [rax+0x10],0x4
  4225de:	jbe    4223f8 <__flatcc_fb_clear_parser@@Base+0xc88>
  4225e4:	mov    rax,QWORD PTR [r14]
  4225e7:	test   rax,rax
  4225ea:	je     422660 <__flatcc_fb_clear_parser@@Base+0xef0>
  4225ec:	xor    edx,edx
  4225ee:	xchg   ax,ax
  4225f0:	mov    rax,QWORD PTR [rax]
  4225f3:	add    edx,0x1
  4225f6:	test   rax,rax
  4225f9:	jne    4225f0 <__flatcc_fb_clear_parser@@Base+0xe80>
  4225fb:	mov    r12d,0x1
  422601:	sub    r12d,edx
  422604:	jmp    422635 <__flatcc_fb_clear_parser@@Base+0xec5>
  422606:	nop    WORD PTR cs:[rax+rax*1+0x0]
  422610:	test   r15,r15
  422613:	je     422631 <__flatcc_fb_clear_parser@@Base+0xec1>
  422615:	mov    rdi,QWORD PTR [rbx+0x260]
  42261c:	test   rdi,rdi
  42261f:	je     422631 <__flatcc_fb_clear_parser@@Base+0xec1>
  422621:	mov    rsi,QWORD PTR [r14]
  422624:	movsxd rdx,r12d
  422627:	call   41c2b0 <fb_scope_table_find@@Base>
  42262c:	test   rax,rax
  42262f:	jne    422690 <__flatcc_fb_clear_parser@@Base+0xf20>
  422631:	add    r12d,0x1
  422635:	test   r12d,r12d
  422638:	jne    422610 <__flatcc_fb_clear_parser@@Base+0xea0>
  42263a:	test   r15,r15
  42263d:	je     422660 <__flatcc_fb_clear_parser@@Base+0xef0>
  42263f:	mov    rdi,QWORD PTR [rbx+0x260]
  422646:	test   rdi,rdi
  422649:	je     422660 <__flatcc_fb_clear_parser@@Base+0xef0>
  42264b:	xor    edx,edx
  42264d:	xor    esi,esi
  42264f:	call   41c2b0 <fb_scope_table_find@@Base>
  422654:	test   rax,rax
  422657:	mov    r14,rax
  42265a:	jne    4225c0 <__flatcc_fb_clear_parser@@Base+0xe50>
  422660:	mov    r12,QWORD PTR [rsp+0x28]
  422665:	mov    rsi,QWORD PTR [r13+0x18]
  422669:	lea    rdx,[rip+0x25148]        # 4477b8 <fb_schema_table_missing@@Base+0x1448>
  422670:	mov    rcx,r13
  422673:	mov    rdi,rbx
  422676:	call   41e930 <error_ref_sym@@Base>
  42267b:	mov    eax,0x1
  422680:	mov    WORD PTR [r13+0x28],ax
  422685:	jmp    421fd7 <__flatcc_fb_clear_parser@@Base+0x867>
  42268a:	nop    WORD PTR [rax+rax*1+0x0]
  422690:	mov    r14,rax
  422693:	jmp    4225c0 <__flatcc_fb_clear_parser@@Base+0xe50>
  422698:	mov    rsi,QWORD PTR [r13+0x8]
  42269c:	lea    rdx,[rip+0x2509d]        # 447740 <fb_schema_table_missing@@Base+0x13d0>
  4226a3:	xor    r9d,r9d
  4226a6:	xor    r8d,r8d
  4226a9:	xor    ecx,ecx
  4226ab:	mov    rdi,rbx
  4226ae:	call   41d580 <__flatcc_error_report@@Base>
  4226b3:	mov    eax,0xffffffff
  4226b8:	jmp    42218a <__flatcc_fb_clear_parser@@Base+0xa1a>
  4226bd:	xor    eax,eax
  4226bf:	mov    DWORD PTR [rsp+0x38],0x0
  4226c7:	mov    WORD PTR [r14+0xa4],ax
  4226cf:	jmp    421f2c <__flatcc_fb_clear_parser@@Base+0x7bc>
  4226d4:	mov    rsi,QWORD PTR [r13+0x8]
  4226d8:	lea    rdx,[rip+0x251c1]        # 4478a0 <fb_schema_table_missing@@Base+0x1530>
  4226df:	xor    r9d,r9d
  4226e2:	xor    r8d,r8d
  4226e5:	xor    ecx,ecx
  4226e7:	mov    rdi,rbx
  4226ea:	call   41d580 <__flatcc_error_report@@Base>
  4226ef:	mov    eax,0xffffffff
  4226f4:	jmp    42218a <__flatcc_fb_clear_parser@@Base+0xa1a>
  4226f9:	cmp    QWORD PTR [rsp+0x40],0xffffffffffffffff
  4226ff:	jne    42223f <__flatcc_fb_clear_parser@@Base+0xacf>
  422705:	mov    rsi,QWORD PTR [r13+0x8]
  422709:	lea    rdx,[rip+0x26115]        # 448825 <fb_schema_table_missing@@Base+0x24b5>
  422710:	xor    r9d,r9d
  422713:	xor    r8d,r8d
  422716:	xor    ecx,ecx
  422718:	mov    rdi,rbx
  42271b:	call   41d580 <__flatcc_error_report@@Base>
  422720:	movzx  eax,WORD PTR [r13+0x58]
  422725:	add    QWORD PTR [rsp+0x40],0x1
  42272b:	nop    DWORD PTR [rax+rax*1+0x0]
  422730:	mov    r10d,DWORD PTR [rsp+0x38]
  422735:	test   r10d,r10d
  422738:	jne    422922 <__flatcc_fb_clear_parser@@Base+0x11b2>
  42273e:	test   ax,ax
  422741:	je     422258 <__flatcc_fb_clear_parser@@Base+0xae8>
  422747:	mov    rax,QWORD PTR [r13+0x48]
  42274b:	mov    rcx,QWORD PTR [rsp+0x18]
  422750:	mov    rsi,r13
  422753:	mov    rdi,rbx
  422756:	mov    QWORD PTR [rsp+0x40],rax
  42275b:	mov    rax,QWORD PTR [r13+0x50]
  42275f:	mov    QWORD PTR [rsp+0x48],rax
  422764:	mov    rax,QWORD PTR [r13+0x58]
  422768:	mov    QWORD PTR [rsp+0x50],rax
  42276d:	mov    rax,QWORD PTR [rsp+0x10]
  422772:	mov    edx,DWORD PTR [rax+0x48]
  422775:	call   4263d0 <__flatcc_fb_coerce_scalar_type@@Base>
  42277a:	test   eax,eax
  42277c:	je     422258 <__flatcc_fb_clear_parser@@Base+0xae8>
  422782:	mov    eax,0xffffffff
  422787:	jmp    42218a <__flatcc_fb_clear_parser@@Base+0xa1a>
  42278c:	mov    rsi,QWORD PTR [r13+0x8]
  422790:	lea    rdx,[rip+0x251f1]        # 447988 <fb_schema_table_missing@@Base+0x1618>
  422797:	xor    r9d,r9d
  42279a:	xor    r8d,r8d
  42279d:	xor    ecx,ecx
  42279f:	mov    rdi,rbx
  4227a2:	call   41d580 <__flatcc_error_report@@Base>
  4227a7:	mov    edx,0x1
  4227ac:	mov    eax,0xffffffff
  4227b1:	mov    WORD PTR [r13+0x58],dx
  4227b6:	jmp    42218a <__flatcc_fb_clear_parser@@Base+0xa1a>
  4227bb:	cmp    ecx,0x1
  4227be:	cmovne rax,rsi
  4227c2:	test   r15,r15
  4227c5:	je     422669 <__flatcc_fb_clear_parser@@Base+0xef9>
  4227cb:	mov    rdi,QWORD PTR [rbx+0x260]
  4227d2:	test   rdi,rdi
  4227d5:	je     422669 <__flatcc_fb_clear_parser@@Base+0xef9>
  4227db:	neg    edx
  4227dd:	mov    rsi,rax
  4227e0:	movsxd rdx,edx
  4227e3:	call   41c2b0 <fb_scope_table_find@@Base>
  4227e8:	test   rax,rax
  4227eb:	je     422665 <__flatcc_fb_clear_parser@@Base+0xef5>
  4227f1:	mov    rcx,QWORD PTR [r14+0x8]
  4227f5:	lea    rdi,[rax+0x8]
  4227f9:	mov    rdx,QWORD PTR [rcx+0x8]
  4227fd:	mov    rsi,QWORD PTR [rcx]
  422800:	call   41b300 <fb_symbol_table_find@@Base>
  422805:	test   rax,rax
  422808:	je     422665 <__flatcc_fb_clear_parser@@Base+0xef5>
  42280e:	cmp    WORD PTR [rax+0x10],0x4
  422813:	ja     422665 <__flatcc_fb_clear_parser@@Base+0xef5>
  422819:	mov    rsi,QWORD PTR [rax+0x20]
  42281d:	lea    rdi,[rbx+0x320]
  422824:	mov    QWORD PTR [rsp+0x20],rax
  422829:	call   41aba0 <ptr_set_find_item@@Base>
  42282e:	test   rax,rax
  422831:	mov    rdx,QWORD PTR [rsp+0x20]
  422836:	jne    422422 <__flatcc_fb_clear_parser@@Base+0xcb2>
  42283c:	jmp    422665 <__flatcc_fb_clear_parser@@Base+0xef5>
  422841:	nop    DWORD PTR [rax+0x0]
  422848:	mov    rcx,QWORD PTR [rdx+0x8]
  42284c:	mov    rsi,QWORD PTR [r13+0x8]
  422850:	lea    rdx,[rip+0x24f91]        # 4477e8 <fb_schema_table_missing@@Base+0x1478>
  422857:	xor    r9d,r9d
  42285a:	xor    r8d,r8d
  42285d:	mov    rdi,rbx
  422860:	call   41d580 <__flatcc_error_report@@Base>
  422865:	mov    eax,0x1
  42286a:	mov    WORD PTR [r13+0x28],ax
  42286f:	jmp    421fd7 <__flatcc_fb_clear_parser@@Base+0x867>
  422874:	cmp    eax,0x6
  422877:	jne    421e77 <__flatcc_fb_clear_parser@@Base+0x707>
  42287d:	cmp    WORD PTR [r15+0x20],0x6
  422883:	je     421e77 <__flatcc_fb_clear_parser@@Base+0x707>
  422889:	mov    rsi,QWORD PTR [r15+0x8]
  42288d:	lea    rdx,[rip+0x24e3c]        # 4476d0 <fb_schema_table_missing@@Base+0x1360>
  422894:	xor    r9d,r9d
  422897:	xor    r8d,r8d
  42289a:	xor    ecx,ecx
  42289c:	mov    rdi,rbx
  42289f:	call   41d580 <__flatcc_error_report@@Base>
  4228a4:	jmp    421e77 <__flatcc_fb_clear_parser@@Base+0x707>
  4228a9:	mov    rsi,QWORD PTR [rsi+0x8]
  4228ad:	lea    rdx,[rip+0x24c84]        # 447538 <fb_schema_table_missing@@Base+0x11c8>
  4228b4:	xor    r9d,r9d
  4228b7:	xor    r8d,r8d
  4228ba:	xor    ecx,ecx
  4228bc:	call   41d580 <__flatcc_error_report@@Base>
  4228c1:	mov    eax,0xffffffff
  4228c6:	jmp    42218a <__flatcc_fb_clear_parser@@Base+0xa1a>
  4228cb:	mov    rsi,QWORD PTR [r13+0x8]
  4228cf:	lea    rdx,[rip+0x24f5a]        # 447830 <fb_schema_table_missing@@Base+0x14c0>
  4228d6:	xor    r9d,r9d
  4228d9:	xor    r8d,r8d
  4228dc:	xor    ecx,ecx
  4228de:	mov    rdi,rbx
  4228e1:	call   41d580 <__flatcc_error_report@@Base>
  4228e6:	movzx  eax,WORD PTR [r13+0x58]
  4228eb:	mov    BYTE PTR [rsp+0x40],0x1
  4228f0:	jmp    422730 <__flatcc_fb_clear_parser@@Base+0xfc0>
  4228f5:	mov    r10d,0x1
  4228fb:	lea    rdx,[rip+0x25eab]        # 4487ad <fb_schema_table_missing@@Base+0x243d>
  422902:	xor    r9d,r9d
  422905:	mov    WORD PTR [rsi+0x58],r10w
  42290a:	mov    rsi,QWORD PTR [rsi+0x8]
  42290e:	xor    r8d,r8d
  422911:	xor    ecx,ecx
  422913:	call   41d580 <__flatcc_error_report@@Base>
  422918:	mov    eax,0xffffffff
  42291d:	jmp    42218a <__flatcc_fb_clear_parser@@Base+0xa1a>
  422922:	test   ax,ax
  422925:	je     42206e <__flatcc_fb_clear_parser@@Base+0x8fe>
  42292b:	cmp    ax,0x5
  42292f:	jne    422951 <__flatcc_fb_clear_parser@@Base+0x11e1>
  422931:	mov    rax,QWORD PTR [r13+0x48]
  422935:	mov    QWORD PTR [rsp+0x40],rax
  42293a:	mov    rax,QWORD PTR [r13+0x50]
  42293e:	mov    QWORD PTR [rsp+0x48],rax
  422943:	mov    rax,QWORD PTR [r13+0x58]
  422947:	mov    QWORD PTR [rsp+0x50],rax
  42294c:	jmp    42206e <__flatcc_fb_clear_parser@@Base+0x8fe>
  422951:	mov    rsi,QWORD PTR [r13+0x8]
  422955:	lea    rdx,[rip+0x24f04]        # 447860 <fb_schema_table_missing@@Base+0x14f0>
  42295c:	xor    r9d,r9d
  42295f:	xor    r8d,r8d
  422962:	xor    ecx,ecx
  422964:	mov    rdi,rbx
  422967:	call   41d580 <__flatcc_error_report@@Base>
  42296c:	mov    eax,0xffffffff
  422971:	jmp    42218a <__flatcc_fb_clear_parser@@Base+0xa1a>
  422976:	mov    rsi,QWORD PTR [r13+0x8]
  42297a:	lea    rdx,[rip+0x25ec1]        # 448842 <fb_schema_table_missing@@Base+0x24d2>
  422981:	xor    r9d,r9d
  422984:	xor    r8d,r8d
  422987:	xor    ecx,ecx
  422989:	mov    rdi,rbx
  42298c:	call   41d580 <__flatcc_error_report@@Base>
  422991:	movzx  eax,WORD PTR [r13+0x58]
  422996:	add    QWORD PTR [rsp+0x40],0x1
  42299c:	jmp    422730 <__flatcc_fb_clear_parser@@Base+0xfc0>
  4229a1:	mov    rsi,QWORD PTR [r13+0x8]
  4229a5:	lea    rdx,[rip+0x24f9c]        # 447948 <fb_schema_table_missing@@Base+0x15d8>
  4229ac:	xor    ecx,ecx
  4229ae:	xor    r9d,r9d
  4229b1:	xor    r8d,r8d
  4229b4:	mov    rdi,rbx
  4229b7:	call   41d580 <__flatcc_error_report@@Base>
  4229bc:	mov    ecx,0x1
  4229c1:	mov    eax,0xffffffff
  4229c6:	mov    WORD PTR [r13+0x58],cx
  4229cb:	jmp    42218a <__flatcc_fb_clear_parser@@Base+0xa1a>
  4229d0:	lea    rdx,[rip+0x24f01]        # 4478d8 <fb_schema_table_missing@@Base+0x1568>
  4229d7:	mov    rdi,rbx
  4229da:	call   41d580 <__flatcc_error_report@@Base>
  4229df:	mov    edi,0x1
  4229e4:	mov    eax,0xffffffff
  4229e9:	mov    WORD PTR [r13+0x58],di
  4229ee:	jmp    42218a <__flatcc_fb_clear_parser@@Base+0xa1a>
  4229f3:	mov    rsi,QWORD PTR [rsi+0x8]
  4229f7:	lea    rdx,[rip+0x24b72]        # 447570 <fb_schema_table_missing@@Base+0x1200>
  4229fe:	xor    r9d,r9d
  422a01:	xor    r8d,r8d
  422a04:	xor    ecx,ecx
  422a06:	call   41d580 <__flatcc_error_report@@Base>
  422a0b:	mov    eax,0xffffffff
  422a10:	jmp    42218a <__flatcc_fb_clear_parser@@Base+0xa1a>
  422a15:	lea    rcx,[rip+0x26134]        # 448b50 <fb_schema_table_missing@@Base+0x27e0>
  422a1c:	lea    rsi,[rip+0x2492d]        # 447350 <fb_schema_table_missing@@Base+0xfe0>
  422a23:	lea    rdi,[rip+0x25de5]        # 44880f <fb_schema_table_missing@@Base+0x249f>
  422a2a:	mov    edx,0x523
  422a2f:	call   405100 <__assert_fail@plt>
  422a34:	lea    rcx,[rip+0x26115]        # 448b50 <fb_schema_table_missing@@Base+0x27e0>
  422a3b:	lea    rsi,[rip+0x2490e]        # 447350 <fb_schema_table_missing@@Base+0xfe0>
  422a42:	lea    rdi,[rip+0x25d46]        # 44878f <fb_schema_table_missing@@Base+0x241f>
  422a49:	mov    edx,0x4cd
  422a4e:	call   405100 <__assert_fail@plt>
  422a53:	call   4050d0 <__stack_chk_fail@plt>
  422a58:	nop    DWORD PTR [rax+rax*1+0x0]
  422a60:	push   r15
  422a62:	push   r14
  422a64:	push   r13
  422a66:	push   r12
  422a68:	push   rbp
  422a69:	push   rbx
  422a6a:	sub    rsp,0x168
  422a71:	mov    rcx,QWORD PTR fs:0x28
  422a7a:	mov    QWORD PTR [rsp+0x158],rcx
  422a82:	xor    ecx,ecx
  422a84:	cmp    WORD PTR [rsi+0x10],0x0
  422a89:	mov    QWORD PTR [rsp+0x38],rsi
  422a8e:	jne    4247dd <__flatcc_fb_clear_parser@@Base+0x306d>
  422a94:	mov    rax,QWORD PTR [rsp+0x38]
  422a99:	cmp    WORD PTR [rax+0x58],0x0
  422a9e:	jne    424721 <__flatcc_fb_clear_parser@@Base+0x2fb1>
  422aa4:	mov    rax,QWORD PTR [rsp+0x38]
  422aa9:	lea    r15,[rsp+0x90]
  422ab1:	mov    r14,rdi
  422ab4:	mov    ecx,0xc
  422ab9:	xor    ebp,ebp
  422abb:	mov    rdi,r15
  422abe:	mov    QWORD PTR [rsp+0x10],r15
  422ac3:	mov    r13,QWORD PTR [rax+0x38]
  422ac7:	xor    eax,eax
  422ac9:	rep stos QWORD PTR es:[rdi],rax
  422acc:	test   r13,r13
  422acf:	je     422ba4 <__flatcc_fb_clear_parser@@Base+0x1434>
  422ad5:	mov    ebx,0x64
  422ada:	lea    r12,[rip+0x2609f]        # 448b80 <fb_schema_table_missing@@Base+0x2810>
  422ae1:	jmp    422b2d <__flatcc_fb_clear_parser@@Base+0x13bd>
  422ae3:	nop    DWORD PTR [rax+rax*1+0x0]
  422ae8:	mov    edx,0x1
  422aed:	shlx   edx,edx,eax
  422af2:	or     ebp,edx
  422af4:	lea    rdx,[r15+rax*8]
  422af8:	cmp    QWORD PTR [rdx],0x0
  422afc:	je     423050 <__flatcc_fb_clear_parser@@Base+0x18e0>
  422b02:	mov    rsi,QWORD PTR [r13+0x8]
  422b06:	lea    rdx,[rip+0x24af3]        # 447600 <fb_schema_table_missing@@Base+0x1290>
  422b0d:	xor    r9d,r9d
  422b10:	xor    r8d,r8d
  422b13:	xor    ecx,ecx
  422b15:	mov    rdi,r14
  422b18:	call   41d580 <__flatcc_error_report@@Base>
  422b1d:	mov    r13,QWORD PTR [r13+0x0]
  422b21:	sub    ebx,0x1
  422b24:	test   r13,r13
  422b27:	je     422b84 <__flatcc_fb_clear_parser@@Base+0x1414>
  422b29:	test   ebx,ebx
  422b2b:	je     422b84 <__flatcc_fb_clear_parser@@Base+0x1414>
  422b2d:	mov    rax,QWORD PTR [r13+0x8]
  422b31:	mov    rcx,QWORD PTR [r14+0x260]
  422b38:	mov    rdx,QWORD PTR [rax+0x8]
  422b3c:	mov    rsi,QWORD PTR [rax]
  422b3f:	lea    rdi,[rcx+0x20]
  422b43:	call   42bd20 <fb_name_table_find@@Base>
  422b48:	test   rax,rax
  422b4b:	je     42331b <__flatcc_fb_clear_parser@@Base+0x1bab>
  422b51:	movsxd rax,DWORD PTR [rax+0x20]
  422b55:	test   eax,eax
  422b57:	je     422b1d <__flatcc_fb_clear_parser@@Base+0x13ad>
  422b59:	cmp    al,0x3
  422b5b:	je     422ae8 <__flatcc_fb_clear_parser@@Base+0x1378>
  422b5d:	mov    rsi,QWORD PTR [r13+0x8]
  422b61:	lea    rdx,[rip+0x24a68]        # 4475d0 <fb_schema_table_missing@@Base+0x1260>
  422b68:	xor    r9d,r9d
  422b6b:	xor    r8d,r8d
  422b6e:	xor    ecx,ecx
  422b70:	mov    rdi,r14
  422b73:	sub    ebx,0x1
  422b76:	call   41d580 <__flatcc_error_report@@Base>
  422b7b:	mov    r13,QWORD PTR [r13+0x0]
  422b7f:	test   r13,r13
  422b82:	jne    422b29 <__flatcc_fb_clear_parser@@Base+0x13b9>
  422b84:	test   r13,r13
  422b87:	je     422ba4 <__flatcc_fb_clear_parser@@Base+0x1434>
  422b89:	mov    rsi,QWORD PTR [r13+0x8]
  422b8d:	lea    rdx,[rip+0x25c2f]        # 4487c3 <fb_schema_table_missing@@Base+0x2453>
  422b94:	xor    r9d,r9d
  422b97:	xor    r8d,r8d
  422b9a:	xor    ecx,ecx
  422b9c:	mov    rdi,r14
  422b9f:	call   41d580 <__flatcc_error_report@@Base>
  422ba4:	mov    rax,QWORD PTR [rsp+0x38]
  422ba9:	mov    r12,QWORD PTR [rax+0x28]
  422bad:	mov    WORD PTR [rax+0xa4],bp
  422bb4:	test   r12,r12
  422bb7:	je     42426f <__flatcc_fb_clear_parser@@Base+0x2aff>
  422bbd:	add    rax,0x60
  422bc1:	mov    QWORD PTR [rsp+0x50],0x0
  422bca:	mov    DWORD PTR [rsp+0x48],0x0
  422bd2:	mov    QWORD PTR [rsp+0x8],rax
  422bd7:	lea    rax,[r14+0x320]
  422bde:	mov    QWORD PTR [rsp+0x68],0x0
  422be7:	mov    DWORD PTR [rsp+0x2c],0x0
  422bef:	mov    DWORD PTR [rsp+0x4c],0x0
  422bf7:	mov    QWORD PTR [rsp+0x40],rax
  422bfc:	lea    rax,[r14+0x1f8]
  422c03:	mov    QWORD PTR [rsp+0x30],0x0
  422c0c:	mov    QWORD PTR [rsp+0x58],rax
  422c11:	jmp    422c43 <__flatcc_fb_clear_parser@@Base+0x14d3>
  422c13:	nop    DWORD PTR [rax+rax*1+0x0]
  422c18:	mov    rcx,QWORD PTR [rax+0x8]
  422c1c:	mov    rsi,QWORD PTR [r12+0x8]
  422c21:	lea    rdx,[rip+0x24fe8]        # 447c10 <fb_schema_table_missing@@Base+0x18a0>
  422c28:	xor    r9d,r9d
  422c2b:	xor    r8d,r8d
  422c2e:	mov    rdi,r14
  422c31:	call   41d580 <__flatcc_error_report@@Base>
  422c36:	mov    r12,QWORD PTR [r12]
  422c3a:	test   r12,r12
  422c3d:	je     423258 <__flatcc_fb_clear_parser@@Base+0x1ae8>
  422c43:	mov    rdi,QWORD PTR [rsp+0x8]
  422c48:	mov    edx,0x1
  422c4d:	mov    rsi,r12
  422c50:	call   41b2e0 <fb_symbol_table_insert_item@@Base>
  422c55:	test   rax,rax
  422c58:	mov    rbp,rax
  422c5b:	jne    422c18 <__flatcc_fb_clear_parser@@Base+0x14a8>
  422c5d:	cmp    WORD PTR [r12+0x10],0x5
  422c64:	jne    423d60 <__flatcc_fb_clear_parser@@Base+0x25f0>
  422c6a:	movzx  eax,WORD PTR [r12+0x28]
  422c70:	cmp    ax,0x1
  422c74:	je     422c36 <__flatcc_fb_clear_parser@@Base+0x14c6>
  422c76:	sub    eax,0x7
  422c79:	cmp    ax,0x1
  422c7d:	jbe    423180 <__flatcc_fb_clear_parser@@Base+0x1a10>
  422c83:	mov    r15,QWORD PTR [r12+0x60]
  422c88:	mov    rdi,QWORD PTR [rsp+0x10]
  422c8d:	xor    eax,eax
  422c8f:	mov    ecx,0xc
  422c94:	xor    ebx,ebx
  422c96:	mov    r13d,0x64
  422c9c:	test   r15,r15
  422c9f:	rep stos QWORD PTR es:[rdi],rax
  422ca2:	je     423bdb <__flatcc_fb_clear_parser@@Base+0x246b>
  422ca8:	mov    rax,r15
  422cab:	mov    r15,r12
  422cae:	mov    r12,rbp
  422cb1:	mov    rbp,rax
  422cb4:	jmp    422d0c <__flatcc_fb_clear_parser@@Base+0x159c>
  422cb6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  422cc0:	mov    rcx,QWORD PTR [rsp+0x10]
  422cc5:	mov    edx,0x1
  422cca:	shlx   edx,edx,eax
  422ccf:	or     ebx,edx
  422cd1:	lea    rdx,[rcx+rax*8]
  422cd5:	cmp    QWORD PTR [rdx],0x0
  422cd9:	je     423090 <__flatcc_fb_clear_parser@@Base+0x1920>
  422cdf:	mov    rsi,QWORD PTR [rbp+0x8]
  422ce3:	lea    rdx,[rip+0x24916]        # 447600 <fb_schema_table_missing@@Base+0x1290>
  422cea:	xor    r9d,r9d
  422ced:	xor    r8d,r8d
  422cf0:	xor    ecx,ecx
  422cf2:	mov    rdi,r14
  422cf5:	call   41d580 <__flatcc_error_report@@Base>
  422cfa:	mov    rbp,QWORD PTR [rbp+0x0]
  422cfe:	sub    r13d,0x1
  422d02:	test   rbp,rbp
  422d05:	je     422d70 <__flatcc_fb_clear_parser@@Base+0x1600>
  422d07:	test   r13d,r13d
  422d0a:	je     422d70 <__flatcc_fb_clear_parser@@Base+0x1600>
  422d0c:	mov    rax,QWORD PTR [rbp+0x8]
  422d10:	mov    rcx,QWORD PTR [r14+0x260]
  422d17:	mov    rdx,QWORD PTR [rax+0x8]
  422d1b:	mov    rsi,QWORD PTR [rax]
  422d1e:	lea    rdi,[rcx+0x20]
  422d22:	call   42bd20 <fb_name_table_find@@Base>
  422d27:	test   rax,rax
  422d2a:	je     423130 <__flatcc_fb_clear_parser@@Base+0x19c0>
  422d30:	movsxd rax,DWORD PTR [rax+0x20]
  422d34:	test   eax,eax
  422d36:	je     422cfa <__flatcc_fb_clear_parser@@Base+0x158a>
  422d38:	mov    edx,0xfc6
  422d3d:	bt     edx,eax
  422d40:	jb     422cc0 <__flatcc_fb_clear_parser@@Base+0x1550>
  422d46:	mov    rsi,QWORD PTR [rbp+0x8]
  422d4a:	lea    rdx,[rip+0x2487f]        # 4475d0 <fb_schema_table_missing@@Base+0x1260>
  422d51:	xor    r9d,r9d
  422d54:	xor    r8d,r8d
  422d57:	xor    ecx,ecx
  422d59:	mov    rdi,r14
  422d5c:	sub    r13d,0x1
  422d60:	call   41d580 <__flatcc_error_report@@Base>
  422d65:	mov    rbp,QWORD PTR [rbp+0x0]
  422d69:	test   rbp,rbp
  422d6c:	jne    422d07 <__flatcc_fb_clear_parser@@Base+0x1597>
  422d6e:	xchg   ax,ax
  422d70:	mov    rax,rbp
  422d73:	mov    rbp,r12
  422d76:	mov    r12,r15
  422d79:	test   rax,rax
  422d7c:	je     422d99 <__flatcc_fb_clear_parser@@Base+0x1629>
  422d7e:	mov    rsi,QWORD PTR [rax+0x8]
  422d82:	lea    rdx,[rip+0x25a3a]        # 4487c3 <fb_schema_table_missing@@Base+0x2453>
  422d89:	xor    r9d,r9d
  422d8c:	xor    r8d,r8d
  422d8f:	xor    ecx,ecx
  422d91:	mov    rdi,r14
  422d94:	call   41d580 <__flatcc_error_report@@Base>
  422d99:	mov    r13,QWORD PTR [rsp+0xc0]
  422da1:	mov    WORD PTR [r12+0x70],bx
  422da7:	test   r13,r13
  422daa:	je     422f10 <__flatcc_fb_clear_parser@@Base+0x17a0>
  422db0:	cmp    DWORD PTR [r12+0x18],0x4
  422db6:	jne    423bb5 <__flatcc_fb_clear_parser@@Base+0x2445>
  422dbc:	cmp    WORD PTR [r12+0x28],0x7
  422dc3:	jne    423bb5 <__flatcc_fb_clear_parser@@Base+0x2445>
  422dc9:	cmp    WORD PTR [r13+0x20],0x2
  422dcf:	jne    422f10 <__flatcc_fb_clear_parser@@Base+0x17a0>
  422dd5:	mov    r9d,DWORD PTR [r13+0x18]
  422dd9:	mov    r8,QWORD PTR [r13+0x10]
  422ddd:	test   r9d,r9d
  422de0:	jle    4240ea <__flatcc_fb_clear_parser@@Base+0x297a>
  422de6:	lea    esi,[r9-0x1]
  422dea:	movsxd rcx,esi
  422ded:	cmp    BYTE PTR [r8+rcx*1],0x2e
  422df2:	je     4240fa <__flatcc_fb_clear_parser@@Base+0x298a>
  422df8:	sub    rcx,0x1
  422dfc:	mov    eax,esi
  422dfe:	jmp    422e16 <__flatcc_fb_clear_parser@@Base+0x16a6>
  422e00:	lea    rdx,[rcx-0x1]
  422e04:	sub    eax,0x1
  422e07:	cmp    BYTE PTR [r8+rdx*1+0x1],0x2e
  422e0d:	je     4231d9 <__flatcc_fb_clear_parser@@Base+0x1a69>
  422e13:	mov    rcx,rdx
  422e16:	test   eax,eax
  422e18:	jne    422e00 <__flatcc_fb_clear_parser@@Base+0x1690>
  422e1a:	mov    r10d,r9d
  422e1d:	mov    QWORD PTR [rsp+0x18],r8
  422e22:	mov    rcx,QWORD PTR [rsp+0x38]
  422e27:	test   eax,eax
  422e29:	mov    rbx,QWORD PTR [rcx+0x18]
  422e2d:	jne    4231f9 <__flatcc_fb_clear_parser@@Base+0x1a89>
  422e33:	movsxd rcx,r10d
  422e36:	test   rbx,rbx
  422e39:	mov    QWORD PTR [rsp+0x20],rcx
  422e3e:	je     4231f9 <__flatcc_fb_clear_parser@@Base+0x1a89>
  422e44:	nop    DWORD PTR [rax+0x0]
  422e48:	mov    rdx,QWORD PTR [rsp+0x20]
  422e4d:	mov    rsi,QWORD PTR [rsp+0x18]
  422e52:	lea    rdi,[rbx+0x8]
  422e56:	call   41b300 <fb_symbol_table_find@@Base>
  422e5b:	test   rax,rax
  422e5e:	mov    r15,rax
  422e61:	je     422e6e <__flatcc_fb_clear_parser@@Base+0x16fe>
  422e63:	cmp    WORD PTR [rax+0x10],0x4
  422e68:	jbe    4230d0 <__flatcc_fb_clear_parser@@Base+0x1960>
  422e6e:	mov    rax,QWORD PTR [rbx]
  422e71:	test   rax,rax
  422e74:	je     422ee3 <__flatcc_fb_clear_parser@@Base+0x1773>
  422e76:	xor    edx,edx
  422e78:	nop    DWORD PTR [rax+rax*1+0x0]
  422e80:	mov    rax,QWORD PTR [rax]
  422e83:	add    edx,0x1
  422e86:	test   rax,rax
  422e89:	jne    422e80 <__flatcc_fb_clear_parser@@Base+0x1710>
  422e8b:	mov    ecx,0x1
  422e90:	mov    rdi,QWORD PTR [r14+0x260]
  422e97:	sub    ecx,edx
  422e99:	mov    r15d,ecx
  422e9c:	jmp    422ec4 <__flatcc_fb_clear_parser@@Base+0x1754>
  422e9e:	xchg   ax,ax
  422ea0:	test   rdi,rdi
  422ea3:	je     422ec0 <__flatcc_fb_clear_parser@@Base+0x1750>
  422ea5:	mov    rsi,QWORD PTR [rbx]
  422ea8:	movsxd rdx,r15d
  422eab:	call   41c2b0 <fb_scope_table_find@@Base>
  422eb0:	test   rax,rax
  422eb3:	jne    423120 <__flatcc_fb_clear_parser@@Base+0x19b0>
  422eb9:	mov    rdi,QWORD PTR [r14+0x260]
  422ec0:	add    r15d,0x1
  422ec4:	test   r15d,r15d
  422ec7:	jne    422ea0 <__flatcc_fb_clear_parser@@Base+0x1730>
  422ec9:	test   rdi,rdi
  422ecc:	je     422ee3 <__flatcc_fb_clear_parser@@Base+0x1773>
  422ece:	xor    edx,edx
  422ed0:	xor    esi,esi
  422ed2:	call   41c2b0 <fb_scope_table_find@@Base>
  422ed7:	test   rax,rax
  422eda:	mov    rbx,rax
  422edd:	jne    422e48 <__flatcc_fb_clear_parser@@Base+0x16d8>
  422ee3:	mov    r9d,DWORD PTR [r13+0x18]
  422ee7:	mov    r8,QWORD PTR [r13+0x10]
  422eeb:	mov    rsi,QWORD PTR [r13+0x8]
  422eef:	lea    rdx,[rip+0x25976]        # 44886c <fb_schema_table_missing@@Base+0x24fc>
  422ef6:	xor    ecx,ecx
  422ef8:	mov    rdi,r14
  422efb:	call   41d580 <__flatcc_error_report@@Base>
  422f00:	movzx  ebx,WORD PTR [r12+0x70]
  422f06:	nop    WORD PTR cs:[rax+rax*1+0x0]
  422f10:	test   bh,0x1
  422f13:	je     422f22 <__flatcc_fb_clear_parser@@Base+0x17b2>
  422f15:	cmp    WORD PTR [r12+0x28],0x8
  422f1c:	je     423d0c <__flatcc_fb_clear_parser@@Base+0x259c>
  422f22:	test   bh,0x4
  422f25:	je     422f5e <__flatcc_fb_clear_parser@@Base+0x17ee>
  422f27:	cmp    WORD PTR [r12+0x28],0x7
  422f2e:	jne    422f3c <__flatcc_fb_clear_parser@@Base+0x17cc>
  422f30:	cmp    DWORD PTR [r12+0x18],0x4
  422f36:	je     423cf8 <__flatcc_fb_clear_parser@@Base+0x2588>
  422f3c:	mov    rsi,QWORD PTR [r12+0x8]
  422f41:	lea    rdx,[rip+0x24df8]        # 447d40 <fb_schema_table_missing@@Base+0x19d0>
  422f48:	xor    r9d,r9d
  422f4b:	xor    r8d,r8d
  422f4e:	xor    ecx,ecx
  422f50:	mov    rdi,r14
  422f53:	call   41d580 <__flatcc_error_report@@Base>
  422f58:	movzx  ebx,WORD PTR [r12+0x70]
  422f5e:	test   bh,0x8
  422f61:	je     422f92 <__flatcc_fb_clear_parser@@Base+0x1822>
  422f63:	cmp    WORD PTR [r12+0x28],0x7
  422f6a:	je     4232d8 <__flatcc_fb_clear_parser@@Base+0x1b68>
  422f70:	mov    rsi,QWORD PTR [r12+0x8]
  422f75:	lea    rdx,[rip+0x24e04]        # 447d80 <fb_schema_table_missing@@Base+0x1a10>
  422f7c:	xor    r9d,r9d
  422f7f:	xor    r8d,r8d
  422f82:	xor    ecx,ecx
  422f84:	mov    rdi,r14
  422f87:	call   41d580 <__flatcc_error_report@@Base>
  422f8c:	movzx  ebx,WORD PTR [r12+0x70]
  422f92:	and    bx,0xc00
  422f97:	cmp    bx,0xc00
  422f9c:	je     4232fa <__flatcc_fb_clear_parser@@Base+0x1b8a>
  422fa2:	mov    rax,QWORD PTR [rsp+0x98]
  422faa:	test   rax,rax
  422fad:	mov    QWORD PTR [rsp+0x20],rax
  422fb2:	setne  BYTE PTR [rsp+0x18]
  422fb7:	cmp    QWORD PTR [rsp+0x30],0x0
  422fbd:	movzx  eax,BYTE PTR [rsp+0x18]
  422fc2:	jne    422fed <__flatcc_fb_clear_parser@@Base+0x187d>
  422fc4:	test   al,al
  422fc6:	je     422fed <__flatcc_fb_clear_parser@@Base+0x187d>
  422fc8:	mov    rax,QWORD PTR [r14+0xd8]
  422fcf:	mov    rdx,QWORD PTR [r14+0x148]
  422fd6:	xor    esi,esi
  422fd8:	mov    rdi,rax
  422fdb:	mov    QWORD PTR [rsp+0x50],rax
  422fe0:	call   405110 <memset@plt>
  422fe5:	mov    DWORD PTR [rsp+0x4c],0x1
  422fed:	mov    esi,DWORD PTR [rsp+0x2c]
  422ff1:	test   esi,esi
  422ff3:	jne    423026 <__flatcc_fb_clear_parser@@Base+0x18b6>
  422ff5:	mov    rax,QWORD PTR [rsp+0x30]
  422ffa:	cmp    QWORD PTR [r14+0x148],rax
  423001:	jbe    423b8c <__flatcc_fb_clear_parser@@Base+0x241c>
  423007:	mov    ebx,DWORD PTR [rsp+0x4c]
  42300b:	test   ebx,ebx
  42300d:	jne    423020 <__flatcc_fb_clear_parser@@Base+0x18b0>
  42300f:	movzx  eax,WORD PTR [rsp+0x30]
  423014:	mov    DWORD PTR [rsp+0x2c],ebx
  423018:	mov    QWORD PTR [r12+0x88],rax
  423020:	add    QWORD PTR [rsp+0x30],0x1
  423026:	movzx  eax,WORD PTR [r12+0x28]
  42302c:	sub    eax,0x7
  42302f:	cmp    ax,0x5
  423033:	ja     423b60 <__flatcc_fb_clear_parser@@Base+0x23f0>
  423039:	lea    rdx,[rip+0x259a0]        # 4489e0 <fb_schema_table_missing@@Base+0x2670>
  423040:	movzx  eax,ax
  423043:	movsxd rax,DWORD PTR [rdx+rax*4]
  423047:	add    rax,rdx
  42304a:	jmp    rax
  42304c:	nop    DWORD PTR [rax+0x0]
  423050:	mov    eax,DWORD PTR [r12+rax*4]
  423054:	mov    QWORD PTR [rdx],r13
  423057:	test   eax,eax
  423059:	jne    42333b <__flatcc_fb_clear_parser@@Base+0x1bcb>
  42305f:	cmp    WORD PTR [r13+0x20],0x0
  423065:	je     422b1d <__flatcc_fb_clear_parser@@Base+0x13ad>
  42306b:	mov    rsi,QWORD PTR [r13+0x8]
  42306f:	lea    rdx,[rip+0x245b2]        # 447628 <fb_schema_table_missing@@Base+0x12b8>
  423076:	xor    r9d,r9d
  423079:	xor    r8d,r8d
  42307c:	xor    ecx,ecx
  42307e:	mov    rdi,r14
  423081:	call   41d580 <__flatcc_error_report@@Base>
  423086:	jmp    422b1d <__flatcc_fb_clear_parser@@Base+0x13ad>
  42308b:	nop    DWORD PTR [rax+rax*1+0x0]
  423090:	lea    rcx,[rip+0x25ae9]        # 448b80 <fb_schema_table_missing@@Base+0x2810>
  423097:	mov    QWORD PTR [rdx],rbp
  42309a:	mov    eax,DWORD PTR [rcx+rax*4]
  42309d:	test   eax,eax
  42309f:	jne    423150 <__flatcc_fb_clear_parser@@Base+0x19e0>
  4230a5:	cmp    WORD PTR [rbp+0x20],0x0
  4230aa:	je     422cfa <__flatcc_fb_clear_parser@@Base+0x158a>
  4230b0:	mov    rsi,QWORD PTR [rbp+0x8]
  4230b4:	lea    rdx,[rip+0x2456d]        # 447628 <fb_schema_table_missing@@Base+0x12b8>
  4230bb:	xor    r9d,r9d
  4230be:	xor    r8d,r8d
  4230c1:	xor    ecx,ecx
  4230c3:	mov    rdi,r14
  4230c6:	call   41d580 <__flatcc_error_report@@Base>
  4230cb:	jmp    422cfa <__flatcc_fb_clear_parser@@Base+0x158a>
  4230d0:	mov    rsi,QWORD PTR [rax+0x20]
  4230d4:	mov    rdi,QWORD PTR [rsp+0x40]
  4230d9:	call   41aba0 <ptr_set_find_item@@Base>
  4230de:	test   rax,rax
  4230e1:	je     422e6e <__flatcc_fb_clear_parser@@Base+0x16fe>
  4230e7:	mov    rdx,r15
  4230ea:	movzx  eax,WORD PTR [rdx+0x10]
  4230ee:	test   ax,ax
  4230f1:	je     42310c <__flatcc_fb_clear_parser@@Base+0x199c>
  4230f3:	mov    edi,DWORD PTR [r14+0x11c]
  4230fa:	test   edi,edi
  4230fc:	je     42462b <__flatcc_fb_clear_parser@@Base+0x2ebb>
  423102:	cmp    ax,0x1
  423106:	jne    4245a1 <__flatcc_fb_clear_parser@@Base+0x2e31>
  42310c:	mov    QWORD PTR [r12+0x90],rdx
  423114:	movzx  ebx,WORD PTR [r12+0x70]
  42311a:	jmp    422f10 <__flatcc_fb_clear_parser@@Base+0x17a0>
  42311f:	nop
  423120:	mov    rbx,rax
  423123:	jmp    422e48 <__flatcc_fb_clear_parser@@Base+0x16d8>
  423128:	nop    DWORD PTR [rax+rax*1+0x0]
  423130:	mov    rsi,QWORD PTR [rbp+0x8]
  423134:	lea    rdx,[rip+0x24475]        # 4475b0 <fb_schema_table_missing@@Base+0x1240>
  42313b:	xor    r9d,r9d
  42313e:	xor    r8d,r8d
  423141:	xor    ecx,ecx
  423143:	mov    rdi,r14
  423146:	call   41d580 <__flatcc_error_report@@Base>
  42314b:	jmp    422cfa <__flatcc_fb_clear_parser@@Base+0x158a>
  423150:	cmp    eax,0x2
  423153:	jne    4231a5 <__flatcc_fb_clear_parser@@Base+0x1a35>
  423155:	cmp    WORD PTR [rbp+0x20],0x2
  42315a:	je     422cfa <__flatcc_fb_clear_parser@@Base+0x158a>
  423160:	mov    rsi,QWORD PTR [rbp+0x8]
  423164:	lea    rdx,[rip+0x244e5]        # 447650 <fb_schema_table_missing@@Base+0x12e0>
  42316b:	xor    r9d,r9d
  42316e:	xor    r8d,r8d
  423171:	xor    ecx,ecx
  423173:	mov    rdi,r14
  423176:	call   41d580 <__flatcc_error_report@@Base>
  42317b:	jmp    422cfa <__flatcc_fb_clear_parser@@Base+0x158a>
  423180:	mov    rax,QWORD PTR [r12+0x18]
  423185:	xor    edx,edx
  423187:	mov    rax,QWORD PTR [rax+0x20]
  42318b:	add    rax,0x3e7
  423191:	cmp    rax,0x1b
  423195:	jbe    423791 <__flatcc_fb_clear_parser@@Base+0x2021>
  42319b:	mov    DWORD PTR [r12+0x18],edx
  4231a0:	jmp    422c83 <__flatcc_fb_clear_parser@@Base+0x1513>
  4231a5:	cmp    eax,0x5
  4231a8:	jne    423ee7 <__flatcc_fb_clear_parser@@Base+0x2777>
  4231ae:	cmp    WORD PTR [rbp+0x20],0x5
  4231b3:	je     422cfa <__flatcc_fb_clear_parser@@Base+0x158a>
  4231b9:	mov    rsi,QWORD PTR [rbp+0x8]
  4231bd:	lea    rdx,[rip+0x244b4]        # 447678 <fb_schema_table_missing@@Base+0x1308>
  4231c4:	xor    r9d,r9d
  4231c7:	xor    r8d,r8d
  4231ca:	xor    ecx,ecx
  4231cc:	mov    rdi,r14
  4231cf:	call   41d580 <__flatcc_error_report@@Base>
  4231d4:	jmp    422cfa <__flatcc_fb_clear_parser@@Base+0x158a>
  4231d9:	sub    esi,eax
  4231db:	mov    r10d,esi
  4231de:	lea    rbx,[r8+rcx*1+0x1]
  4231e3:	mov    rcx,QWORD PTR [rsp+0x38]
  4231e8:	test   eax,eax
  4231ea:	mov    QWORD PTR [rsp+0x18],rbx
  4231ef:	mov    rbx,QWORD PTR [rcx+0x18]
  4231f3:	je     422e33 <__flatcc_fb_clear_parser@@Base+0x16c3>
  4231f9:	mov    rdi,QWORD PTR [r14+0x260]
  423200:	test   rdi,rdi
  423203:	je     422eeb <__flatcc_fb_clear_parser@@Base+0x177b>
  423209:	test   eax,eax
  42320b:	mov    esi,0x0
  423210:	movsxd rdx,eax
  423213:	cmovne rsi,r8
  423217:	mov    DWORD PTR [rsp+0x20],r10d
  42321c:	call   41c2b0 <fb_scope_table_find@@Base>
  423221:	test   rax,rax
  423224:	mov    r10d,DWORD PTR [rsp+0x20]
  423229:	je     422ee3 <__flatcc_fb_clear_parser@@Base+0x1773>
  42322f:	mov    rsi,QWORD PTR [rsp+0x18]
  423234:	lea    rdi,[rax+0x8]
  423238:	movsxd rdx,r10d
  42323b:	call   41b300 <fb_symbol_table_find@@Base>
  423240:	test   rax,rax
  423243:	mov    rdx,rax
  423246:	jne    4230ea <__flatcc_fb_clear_parser@@Base+0x197a>
  42324c:	jmp    422ee3 <__flatcc_fb_clear_parser@@Base+0x1773>
  423251:	nop    DWORD PTR [rax+0x0]
  423258:	mov    ebp,DWORD PTR [rsp+0x2c]
  42325c:	test   ebp,ebp
  42325e:	je     4237a5 <__flatcc_fb_clear_parser@@Base+0x2035>
  423264:	mov    ecx,DWORD PTR [rsp+0x48]
  423268:	test   ecx,ecx
  42326a:	je     424594 <__flatcc_fb_clear_parser@@Base+0x2e24>
  423270:	mov    rax,QWORD PTR [rsp+0x38]
  423275:	or     WORD PTR [rax+0x12],0x8
  42327a:	cmp    DWORD PTR [rsp+0x48],0x1
  42327f:	je     424594 <__flatcc_fb_clear_parser@@Base+0x2e24>
  423285:	mov    r10d,DWORD PTR [r14+0x108]
  42328c:	test   r10d,r10d
  42328f:	je     423895 <__flatcc_fb_clear_parser@@Base+0x2125>
  423295:	mov    DWORD PTR [rsp+0x48],0x0
  42329d:	mov    r9d,DWORD PTR [rsp+0x2c]
  4232a2:	test   r9d,r9d
  4232a5:	jne    424594 <__flatcc_fb_clear_parser@@Base+0x2e24>
  4232ab:	mov    rbx,QWORD PTR [rsp+0x158]
  4232b3:	xor    rbx,QWORD PTR fs:0x28
  4232bc:	mov    eax,DWORD PTR [rsp+0x48]
  4232c0:	jne    4247a4 <__flatcc_fb_clear_parser@@Base+0x3034>
  4232c6:	add    rsp,0x168
  4232cd:	pop    rbx
  4232ce:	pop    rbp
  4232cf:	pop    r12
  4232d1:	pop    r13
  4232d3:	pop    r14
  4232d5:	pop    r15
  4232d7:	ret    
  4232d8:	cmp    DWORD PTR [r12+0x18],0x4
  4232de:	jne    422f70 <__flatcc_fb_clear_parser@@Base+0x1800>
  4232e4:	movzx  ebx,WORD PTR [r12+0x70]
  4232ea:	and    bx,0xc00
  4232ef:	cmp    bx,0xc00
  4232f4:	jne    422fa2 <__flatcc_fb_clear_parser@@Base+0x1832>
  4232fa:	mov    rsi,QWORD PTR [r12+0x8]
  4232ff:	lea    rdx,[rip+0x24aba]        # 447dc0 <fb_schema_table_missing@@Base+0x1a50>
  423306:	xor    r9d,r9d
  423309:	xor    r8d,r8d
  42330c:	xor    ecx,ecx
  42330e:	mov    rdi,r14
  423311:	call   41d580 <__flatcc_error_report@@Base>
  423316:	jmp    422fa2 <__flatcc_fb_clear_parser@@Base+0x1832>
  42331b:	mov    rsi,QWORD PTR [r13+0x8]
  42331f:	lea    rdx,[rip+0x2428a]        # 4475b0 <fb_schema_table_missing@@Base+0x1240>
  423326:	xor    r9d,r9d
  423329:	xor    r8d,r8d
  42332c:	xor    ecx,ecx
  42332e:	mov    rdi,r14
  423331:	call   41d580 <__flatcc_error_report@@Base>
  423336:	jmp    422b1d <__flatcc_fb_clear_parser@@Base+0x13ad>
  42333b:	cmp    eax,0x2
  42333e:	je     4238c2 <__flatcc_fb_clear_parser@@Base+0x2152>
  423344:	cmp    eax,0x5
  423347:	jne    423e90 <__flatcc_fb_clear_parser@@Base+0x2720>
  42334d:	cmp    WORD PTR [r13+0x20],0x5
  423353:	je     422b1d <__flatcc_fb_clear_parser@@Base+0x13ad>
  423359:	mov    rsi,QWORD PTR [r13+0x8]
  42335d:	lea    rdx,[rip+0x24314]        # 447678 <fb_schema_table_missing@@Base+0x1308>
  423364:	xor    r9d,r9d
  423367:	xor    r8d,r8d
  42336a:	xor    ecx,ecx
  42336c:	mov    rdi,r14
  42336f:	call   41d580 <__flatcc_error_report@@Base>
  423374:	jmp    422b1d <__flatcc_fb_clear_parser@@Base+0x13ad>
  423379:	mov    rsi,QWORD PTR [r12+0x18]
  42337e:	mov    rax,QWORD PTR [rsp+0x38]
  423383:	test   rsi,rsi
  423386:	mov    rbx,QWORD PTR [rax+0x18]
  42338a:	je     423486 <__flatcc_fb_clear_parser@@Base+0x1d16>
  423390:	mov    r13,rsi
  423393:	xor    edx,edx
  423395:	jmp    4233a5 <__flatcc_fb_clear_parser@@Base+0x1c35>
  423397:	nop    WORD PTR [rax+rax*1+0x0]
  4233a0:	mov    edx,ecx
  4233a2:	mov    r13,rax
  4233a5:	mov    rax,QWORD PTR [r13+0x0]
  4233a9:	lea    ecx,[rdx+0x1]
  4233ac:	test   rax,rax
  4233af:	jne    4233a0 <__flatcc_fb_clear_parser@@Base+0x1c30>
  4233b1:	test   rbx,rbx
  4233b4:	je     423c73 <__flatcc_fb_clear_parser@@Base+0x2503>
  4233ba:	cmp    ecx,0x1
  4233bd:	jne    423c73 <__flatcc_fb_clear_parser@@Base+0x2503>
  4233c3:	mov    rbp,QWORD PTR [rsp+0x58]
  4233c8:	mov    r15d,0x1
  4233ce:	mov    QWORD PTR [rsp+0x70],r12
  4233d3:	nop    DWORD PTR [rax+rax*1+0x0]
  4233d8:	mov    rax,QWORD PTR [r13+0x8]
  4233dc:	lea    rdi,[rbx+0x8]
  4233e0:	mov    rdx,QWORD PTR [rax+0x8]
  4233e4:	mov    rsi,QWORD PTR [rax]
  4233e7:	call   41b300 <fb_symbol_table_find@@Base>
  4233ec:	test   rax,rax
  4233ef:	je     4233fc <__flatcc_fb_clear_parser@@Base+0x1c8c>
  4233f1:	cmp    WORD PTR [rax+0x10],0x4
  4233f6:	jbe    423930 <__flatcc_fb_clear_parser@@Base+0x21c0>
  4233fc:	mov    rax,QWORD PTR [rbx]
  4233ff:	test   rax,rax
  423402:	je     42347c <__flatcc_fb_clear_parser@@Base+0x1d0c>
  423404:	xor    edx,edx
  423406:	nop    WORD PTR cs:[rax+rax*1+0x0]
  423410:	mov    rax,QWORD PTR [rax]
  423413:	add    edx,0x1
  423416:	test   rax,rax
  423419:	jne    423410 <__flatcc_fb_clear_parser@@Base+0x1ca0>
  42341b:	mov    r12d,r15d
  42341e:	sub    r12d,edx
  423421:	jmp    423451 <__flatcc_fb_clear_parser@@Base+0x1ce1>
  423423:	nop    DWORD PTR [rax+rax*1+0x0]
  423428:	test   rbp,rbp
  42342b:	je     42344d <__flatcc_fb_clear_parser@@Base+0x1cdd>
  42342d:	mov    rdi,QWORD PTR [r14+0x260]
  423434:	test   rdi,rdi
  423437:	je     42344d <__flatcc_fb_clear_parser@@Base+0x1cdd>
  423439:	mov    rsi,QWORD PTR [rbx]
  42343c:	movsxd rdx,r12d
  42343f:	call   41c2b0 <fb_scope_table_find@@Base>
  423444:	test   rax,rax
  423447:	jne    423b58 <__flatcc_fb_clear_parser@@Base+0x23e8>
  42344d:	add    r12d,0x1
  423451:	test   r12d,r12d
  423454:	jne    423428 <__flatcc_fb_clear_parser@@Base+0x1cb8>
  423456:	test   rbp,rbp
  423459:	je     42347c <__flatcc_fb_clear_parser@@Base+0x1d0c>
  42345b:	mov    rdi,QWORD PTR [r14+0x260]
  423462:	test   rdi,rdi
  423465:	je     42347c <__flatcc_fb_clear_parser@@Base+0x1d0c>
  423467:	xor    edx,edx
  423469:	xor    esi,esi
  42346b:	call   41c2b0 <fb_scope_table_find@@Base>
  423470:	test   rax,rax
  423473:	mov    rbx,rax
  423476:	jne    4233d8 <__flatcc_fb_clear_parser@@Base+0x1c68>
  42347c:	mov    r12,QWORD PTR [rsp+0x70]
  423481:	mov    rsi,QWORD PTR [r12+0x18]
  423486:	lea    rdx,[rip+0x24be3]        # 448070 <fb_schema_table_missing@@Base+0x1d00>
  42348d:	mov    rcx,r12
  423490:	mov    rdi,r14
  423493:	call   41e930 <error_ref_sym@@Base>
  423498:	mov    esi,0x1
  42349d:	mov    WORD PTR [r12+0x28],si
  4234a3:	jmp    422c36 <__flatcc_fb_clear_parser@@Base+0x14c6>
  4234a8:	nop    DWORD PTR [rax+rax*1+0x0]
  4234b0:	cmp    WORD PTR [r12+0x58],0x0
  4234b7:	jne    423f21 <__flatcc_fb_clear_parser@@Base+0x27b1>
  4234bd:	mov    ebx,DWORD PTR [r14+0x110]
  4234c4:	mov    eax,DWORD PTR [rsp+0x2c]
  4234c8:	test   eax,eax
  4234ca:	jne    423550 <__flatcc_fb_clear_parser@@Base+0x1de0>
  4234d0:	mov    eax,DWORD PTR [rsp+0x4c]
  4234d4:	test   eax,eax
  4234d6:	jne    4234e3 <__flatcc_fb_clear_parser@@Base+0x1d73>
  4234d8:	cmp    BYTE PTR [rsp+0x18],0x0
  4234dd:	jne    423d33 <__flatcc_fb_clear_parser@@Base+0x25c3>
  4234e3:	cmp    QWORD PTR [rsp+0x20],0x0
  4234e9:	jne    4234f9 <__flatcc_fb_clear_parser@@Base+0x1d89>
  4234eb:	mov    r15d,DWORD PTR [rsp+0x4c]
  4234f0:	test   r15d,r15d
  4234f3:	jne    423dcf <__flatcc_fb_clear_parser@@Base+0x265f>
  4234f9:	mov    rax,QWORD PTR [rsp+0x20]
  4234fe:	test   rax,rax
  423501:	je     423fad <__flatcc_fb_clear_parser@@Base+0x283d>
  423507:	movzx  eax,WORD PTR [rax+0x20]
  42350b:	cmp    ax,0x5
  42350f:	je     423f7b <__flatcc_fb_clear_parser@@Base+0x280b>
  423515:	cmp    ax,0x4
  423519:	mov    rax,QWORD PTR [rsp+0x20]
  42351e:	mov    r9d,0x0
  423524:	mov    r8d,0x0
  42352a:	mov    ecx,0x0
  42352f:	mov    rsi,QWORD PTR [rax+0x8]
  423533:	je     423ecb <__flatcc_fb_clear_parser@@Base+0x275b>
  423539:	lea    rdx,[rip+0x25369]        # 4488a9 <fb_schema_table_missing@@Base+0x2539>
  423540:	mov    rdi,r14
  423543:	call   41d580 <__flatcc_error_report@@Base>
  423548:	mov    DWORD PTR [rsp+0x2c],0x1
  423550:	test   BYTE PTR [r12+0x70],0x80
  423556:	je     422c36 <__flatcc_fb_clear_parser@@Base+0x14c6>
  42355c:	add    DWORD PTR [rsp+0x48],0x1
  423561:	test   ebx,ebx
  423563:	jne    422c36 <__flatcc_fb_clear_parser@@Base+0x14c6>
  423569:	mov    rsi,QWORD PTR [r12+0x8]
  42356e:	lea    rdx,[rip+0x24cb3]        # 448228 <fb_schema_table_missing@@Base+0x1eb8>
  423575:	xor    r9d,r9d
  423578:	xor    r8d,r8d
  42357b:	xor    ecx,ecx
  42357d:	mov    rdi,r14
  423580:	call   41d580 <__flatcc_error_report@@Base>
  423585:	jmp    422c36 <__flatcc_fb_clear_parser@@Base+0x14c6>
  42358a:	xor    ebx,ebx
  42358c:	cmp    WORD PTR [r12+0x58],0x0
  423593:	je     4234c4 <__flatcc_fb_clear_parser@@Base+0x1d54>
  423599:	mov    rsi,QWORD PTR [r12+0x8]
  42359e:	lea    rdx,[rip+0x24903]        # 447ea8 <fb_schema_table_missing@@Base+0x1b38>
  4235a5:	xor    r9d,r9d
  4235a8:	xor    r8d,r8d
  4235ab:	xor    ecx,ecx
  4235ad:	mov    rdi,r14
  4235b0:	call   41d580 <__flatcc_error_report@@Base>
  4235b5:	mov    eax,0x1
  4235ba:	mov    WORD PTR [r12+0x28],ax
  4235c0:	jmp    422c36 <__flatcc_fb_clear_parser@@Base+0x14c6>
  4235c5:	movzx  eax,WORD PTR [r12+0x58]
  4235cb:	cmp    ax,0xd
  4235cf:	je     424104 <__flatcc_fb_clear_parser@@Base+0x2994>
  4235d5:	test   ax,ax
  4235d8:	jne    4235ee <__flatcc_fb_clear_parser@@Base+0x1e7e>
  4235da:	mov    edx,0x5
  4235df:	mov    QWORD PTR [r12+0x48],0x0
  4235e8:	mov    WORD PTR [r12+0x58],dx
  4235ee:	mov    edx,DWORD PTR [r12+0x18]
  4235f3:	lea    rcx,[r12+0x48]
  4235f8:	mov    rsi,r12
  4235fb:	mov    rdi,r14
  4235fe:	call   4263d0 <__flatcc_fb_coerce_scalar_type@@Base>
  423603:	test   eax,eax
  423605:	jne    423678 <__flatcc_fb_clear_parser@@Base+0x1f08>
  423607:	mov    edx,DWORD PTR [r12+0x18]
  42360c:	lea    rax,[rip+0x2550d]        # 448b20 <fb_schema_table_missing@@Base+0x27b0>
  423613:	mov    ebx,0x1
  423618:	movsxd rax,DWORD PTR [rax+rdx*4]
  42361c:	mov    QWORD PTR [r12+0x80],rax
  423624:	mov    WORD PTR [r12+0x72],ax
  42362a:	jmp    4234c4 <__flatcc_fb_clear_parser@@Base+0x1d54>
  42362f:	mov    edx,DWORD PTR [r12+0x18]
  423634:	lea    rax,[rip+0x254e5]        # 448b20 <fb_schema_table_missing@@Base+0x27b0>
  42363b:	xor    ebx,ebx
  42363d:	cmp    WORD PTR [r12+0x58],0x0
  423644:	movsxd rax,DWORD PTR [rax+rdx*4]
  423648:	mov    QWORD PTR [r12+0x80],rax
  423650:	mov    WORD PTR [r12+0x72],ax
  423656:	je     4234c4 <__flatcc_fb_clear_parser@@Base+0x1d54>
  42365c:	mov    rsi,QWORD PTR [r12+0x8]
  423661:	lea    rdx,[rip+0x247e8]        # 447e50 <fb_schema_table_missing@@Base+0x1ae0>
  423668:	xor    r9d,r9d
  42366b:	xor    r8d,r8d
  42366e:	xor    ecx,ecx
  423670:	mov    rdi,r14
  423673:	call   41d580 <__flatcc_error_report@@Base>
  423678:	mov    eax,0x1
  42367d:	mov    WORD PTR [r12+0x28],ax
  423683:	jmp    422c36 <__flatcc_fb_clear_parser@@Base+0x14c6>
  423688:	mov    r8,QWORD PTR [r12+0x18]
  42368d:	mov    rax,QWORD PTR [rsp+0x38]
  423692:	test   r8,r8
  423695:	mov    rbx,QWORD PTR [rax+0x18]
  423699:	je     423c46 <__flatcc_fb_clear_parser@@Base+0x24d6>
  42369f:	mov    r13,r8
  4236a2:	xor    eax,eax
  4236a4:	jmp    4236b5 <__flatcc_fb_clear_parser@@Base+0x1f45>
  4236a6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4236b0:	mov    eax,edx
  4236b2:	mov    r13,r15
  4236b5:	mov    r15,QWORD PTR [r13+0x0]
  4236b9:	lea    edx,[rax+0x1]
  4236bc:	test   r15,r15
  4236bf:	jne    4236b0 <__flatcc_fb_clear_parser@@Base+0x1f40>
  4236c1:	test   rbx,rbx
  4236c4:	je     423be8 <__flatcc_fb_clear_parser@@Base+0x2478>
  4236ca:	cmp    edx,0x1
  4236cd:	jne    423be8 <__flatcc_fb_clear_parser@@Base+0x2478>
  4236d3:	mov    rbp,QWORD PTR [rsp+0x58]
  4236d8:	mov    QWORD PTR [rsp+0x70],r15
  4236dd:	nop    DWORD PTR [rax]
  4236e0:	mov    rax,QWORD PTR [r13+0x8]
  4236e4:	lea    rdi,[rbx+0x8]
  4236e8:	mov    rdx,QWORD PTR [rax+0x8]
  4236ec:	mov    rsi,QWORD PTR [rax]
  4236ef:	call   41b300 <fb_symbol_table_find@@Base>
  4236f4:	test   rax,rax
  4236f7:	je     423704 <__flatcc_fb_clear_parser@@Base+0x1f94>
  4236f9:	cmp    WORD PTR [rax+0x10],0x4
  4236fe:	jbe    423a0f <__flatcc_fb_clear_parser@@Base+0x229f>
  423704:	mov    rax,QWORD PTR [rbx]
  423707:	test   rax,rax
  42370a:	je     423c41 <__flatcc_fb_clear_parser@@Base+0x24d1>
  423710:	xor    edx,edx
  423712:	nop    WORD PTR [rax+rax*1+0x0]
  423718:	mov    rax,QWORD PTR [rax]
  42371b:	add    edx,0x1
  42371e:	test   rax,rax
  423721:	jne    423718 <__flatcc_fb_clear_parser@@Base+0x1fa8>
  423723:	mov    r15d,0x1
  423729:	sub    r15d,edx
  42372c:	jmp    423759 <__flatcc_fb_clear_parser@@Base+0x1fe9>
  42372e:	xchg   ax,ax
  423730:	test   rbp,rbp
  423733:	je     423755 <__flatcc_fb_clear_parser@@Base+0x1fe5>
  423735:	mov    rdi,QWORD PTR [r14+0x260]
  42373c:	test   rdi,rdi
  42373f:	je     423755 <__flatcc_fb_clear_parser@@Base+0x1fe5>
  423741:	mov    rsi,QWORD PTR [rbx]
  423744:	movsxd rdx,r15d
  423747:	call   41c2b0 <fb_scope_table_find@@Base>
  42374c:	test   rax,rax
  42374f:	jne    423b50 <__flatcc_fb_clear_parser@@Base+0x23e0>
  423755:	add    r15d,0x1
  423759:	test   r15d,r15d
  42375c:	jne    423730 <__flatcc_fb_clear_parser@@Base+0x1fc0>
  42375e:	test   rbp,rbp
  423761:	je     423c41 <__flatcc_fb_clear_parser@@Base+0x24d1>
  423767:	mov    rdi,QWORD PTR [r14+0x260]
  42376e:	test   rdi,rdi
  423771:	je     423c41 <__flatcc_fb_clear_parser@@Base+0x24d1>
  423777:	xor    edx,edx
  423779:	xor    esi,esi
  42377b:	call   41c2b0 <fb_scope_table_find@@Base>
  423780:	test   rax,rax
  423783:	mov    rbx,rax
  423786:	jne    4236e0 <__flatcc_fb_clear_parser@@Base+0x1f70>
  42378c:	jmp    423c41 <__flatcc_fb_clear_parser@@Base+0x24d1>
  423791:	lea    rdx,[rip+0x25288]        # 448a20 <fb_schema_table_missing@@Base+0x26b0>
  423798:	mov    edx,DWORD PTR [rdx+rax*4]
  42379b:	mov    DWORD PTR [r12+0x18],edx
  4237a0:	jmp    422c83 <__flatcc_fb_clear_parser@@Base+0x1513>
  4237a5:	mov    ebx,DWORD PTR [rsp+0x4c]
  4237a9:	mov    rcx,QWORD PTR [rsp+0x38]
  4237ae:	mov    rax,QWORD PTR [rsp+0x30]
  4237b3:	test   ebx,ebx
  4237b5:	mov    QWORD PTR [rcx+0xa8],rax
  4237bc:	je     424740 <__flatcc_fb_clear_parser@@Base+0x2fd0>
  4237c2:	test   rax,rax
  4237c5:	je     4238ee <__flatcc_fb_clear_parser@@Base+0x217e>
  4237cb:	mov    rbp,QWORD PTR [rsp+0x68]
  4237d0:	cmp    rax,rbp
  4237d3:	ja     4238ee <__flatcc_fb_clear_parser@@Base+0x217e>
  4237d9:	test   rbp,rbp
  4237dc:	je     42385d <__flatcc_fb_clear_parser@@Base+0x20ed>
  4237de:	mov    r13,QWORD PTR [rsp+0x50]
  4237e3:	lea    rbx,[rsp+0xf0]
  4237eb:	mov    QWORD PTR [rsp+0x8],r14
  4237f0:	mov    eax,0xa
  4237f5:	mov    r14,r12
  4237f8:	mov    r12,rcx
  4237fb:	nop    DWORD PTR [rax+rax*1+0x0]
  423800:	cmp    BYTE PTR [r13+r14*1+0x0],0x0
  423806:	jne    42384f <__flatcc_fb_clear_parser@@Base+0x20df>
  423808:	test   eax,eax
  42380a:	lea    r15d,[rax-0x1]
  42380e:	je     424245 <__flatcc_fb_clear_parser@@Base+0x2ad5>
  423814:	lea    rcx,[rip+0x24a45]        # 448260 <fb_schema_table_missing@@Base+0x1ef0>
  42381b:	mov    r8,r14
  42381e:	mov    edx,0x64
  423823:	mov    esi,0x1
  423828:	mov    rdi,rbx
  42382b:	xor    eax,eax
  42382d:	call   405220 <__sprintf_chk@plt>
  423832:	mov    rsi,QWORD PTR [r12+0x8]
  423837:	mov    rdi,QWORD PTR [rsp+0x8]
  42383c:	xor    r9d,r9d
  42383f:	xor    r8d,r8d
  423842:	xor    ecx,ecx
  423844:	mov    rdx,rbx
  423847:	call   41d580 <__flatcc_error_report@@Base>
  42384c:	mov    eax,r15d
  42384f:	add    r14,0x1
  423853:	cmp    rbp,r14
  423856:	jne    423800 <__flatcc_fb_clear_parser@@Base+0x2090>
  423858:	mov    r14,QWORD PTR [rsp+0x8]
  42385d:	mov    edi,DWORD PTR [rsp+0x48]
  423861:	test   edi,edi
  423863:	je     424594 <__flatcc_fb_clear_parser@@Base+0x2e24>
  423869:	mov    rax,QWORD PTR [rsp+0x38]
  42386e:	or     WORD PTR [rax+0x12],0x8
  423873:	cmp    DWORD PTR [rsp+0x48],0x1
  423878:	je     424594 <__flatcc_fb_clear_parser@@Base+0x2e24>
  42387e:	mov    edx,DWORD PTR [r14+0x108]
  423885:	test   edx,edx
  423887:	jne    424594 <__flatcc_fb_clear_parser@@Base+0x2e24>
  42388d:	mov    DWORD PTR [rsp+0x2c],0x1
  423895:	mov    rax,QWORD PTR [rsp+0x38]
  42389a:	lea    rdx,[rip+0x249f7]        # 448298 <fb_schema_table_missing@@Base+0x1f28>
  4238a1:	xor    r9d,r9d
  4238a4:	xor    r8d,r8d
  4238a7:	xor    ecx,ecx
  4238a9:	mov    rdi,r14
  4238ac:	mov    rsi,QWORD PTR [rax+0x8]
  4238b0:	call   41d580 <__flatcc_error_report@@Base>
  4238b5:	mov    DWORD PTR [rsp+0x48],0xffffffff
  4238bd:	jmp    42329d <__flatcc_fb_clear_parser@@Base+0x1b2d>
  4238c2:	cmp    WORD PTR [r13+0x20],0x2
  4238c8:	je     422b1d <__flatcc_fb_clear_parser@@Base+0x13ad>
  4238ce:	mov    rsi,QWORD PTR [r13+0x8]
  4238d2:	lea    rdx,[rip+0x23d77]        # 447650 <fb_schema_table_missing@@Base+0x12e0>
  4238d9:	xor    r9d,r9d
  4238dc:	xor    r8d,r8d
  4238df:	xor    ecx,ecx
  4238e1:	mov    rdi,r14
  4238e4:	call   41d580 <__flatcc_error_report@@Base>
  4238e9:	jmp    422b1d <__flatcc_fb_clear_parser@@Base+0x13ad>
  4238ee:	mov    r8d,DWORD PTR [rsp+0x48]
  4238f3:	test   r8d,r8d
  4238f6:	je     4232ab <__flatcc_fb_clear_parser@@Base+0x1b3b>
  4238fc:	mov    rax,QWORD PTR [rsp+0x38]
  423901:	or     WORD PTR [rax+0x12],0x8
  423906:	cmp    DWORD PTR [rsp+0x48],0x1
  42390b:	je     424763 <__flatcc_fb_clear_parser@@Base+0x2ff3>
  423911:	mov    eax,DWORD PTR [r14+0x108]
  423918:	test   eax,eax
  42391a:	jne    424763 <__flatcc_fb_clear_parser@@Base+0x2ff3>
  423920:	mov    DWORD PTR [rsp+0x2c],0x0
  423928:	jmp    423895 <__flatcc_fb_clear_parser@@Base+0x2125>
  42392d:	nop    DWORD PTR [rax]
  423930:	mov    rsi,QWORD PTR [rax+0x20]
  423934:	mov    rdi,QWORD PTR [rsp+0x40]
  423939:	mov    QWORD PTR [rsp+0x60],rax
  42393e:	call   41aba0 <ptr_set_find_item@@Base>
  423943:	test   rax,rax
  423946:	mov    rdx,QWORD PTR [rsp+0x60]
  42394b:	je     4233fc <__flatcc_fb_clear_parser@@Base+0x1c8c>
  423951:	mov    r12,QWORD PTR [rsp+0x70]
  423956:	mov    rbp,rdx
  423959:	movzx  eax,WORD PTR [rbp+0x10]
  42395d:	cmp    ax,0x4
  423961:	ja     4239e0 <__flatcc_fb_clear_parser@@Base+0x2270>
  423963:	mov    edx,0x1
  423968:	shlx   rax,rdx,rax
  42396d:	test   al,0x1b
  42396f:	je     4239e0 <__flatcc_fb_clear_parser@@Base+0x2270>
  423971:	cmp    WORD PTR [r12+0x58],0x0
  423978:	jne    4240be <__flatcc_fb_clear_parser@@Base+0x294e>
  42397e:	mov    eax,0xf
  423983:	mov    QWORD PTR [r12+0x18],rbp
  423988:	xor    ebx,ebx
  42398a:	mov    WORD PTR [r12+0x28],ax
  423990:	mov    rax,QWORD PTR [rbp+0xb8]
  423997:	cmp    WORD PTR [rbp+0x10],0x4
  42399c:	mov    QWORD PTR [r12+0x80],rax
  4239a4:	movzx  eax,WORD PTR [rbp+0xb0]
  4239ab:	mov    WORD PTR [r12+0x72],ax
  4239b1:	jne    4234c4 <__flatcc_fb_clear_parser@@Base+0x1d54>
  4239b7:	mov    eax,DWORD PTR [rsp+0x2c]
  4239bb:	test   eax,eax
  4239bd:	je     4246e0 <__flatcc_fb_clear_parser@@Base+0x2f70>
  4239c3:	test   BYTE PTR [r12+0x70],0x80
  4239c9:	je     422c36 <__flatcc_fb_clear_parser@@Base+0x14c6>
  4239cf:	add    DWORD PTR [rsp+0x48],0x1
  4239d4:	jmp    423569 <__flatcc_fb_clear_parser@@Base+0x1df9>
  4239d9:	nop    DWORD PTR [rax+0x0]
  4239e0:	mov    rcx,QWORD PTR [r12+0x18]
  4239e5:	mov    rsi,QWORD PTR [r12+0x8]
  4239ea:	lea    rdx,[rip+0x246b7]        # 4480a8 <fb_schema_table_missing@@Base+0x1d38>
  4239f1:	xor    r9d,r9d
  4239f4:	xor    r8d,r8d
  4239f7:	mov    rdi,r14
  4239fa:	call   41d580 <__flatcc_error_report@@Base>
  4239ff:	mov    ecx,0x1
  423a04:	mov    WORD PTR [r12+0x28],cx
  423a0a:	jmp    422c36 <__flatcc_fb_clear_parser@@Base+0x14c6>
  423a0f:	mov    rsi,QWORD PTR [rax+0x20]
  423a13:	mov    rdi,QWORD PTR [rsp+0x40]
  423a18:	mov    QWORD PTR [rsp+0x60],rax
  423a1d:	call   41aba0 <ptr_set_find_item@@Base>
  423a22:	test   rax,rax
  423a25:	mov    rdx,QWORD PTR [rsp+0x60]
  423a2a:	je     423704 <__flatcc_fb_clear_parser@@Base+0x1f94>
  423a30:	mov    r15,QWORD PTR [rsp+0x70]
  423a35:	mov    rbp,rdx
  423a38:	cmp    WORD PTR [rbp+0x10],0x4
  423a3d:	ja     423f4d <__flatcc_fb_clear_parser@@Base+0x27dd>
  423a43:	movzx  eax,WORD PTR [rbp+0x10]
  423a47:	lea    rdx,[rip+0x24faa]        # 4489f8 <fb_schema_table_missing@@Base+0x2688>
  423a4e:	movsxd rax,DWORD PTR [rdx+rax*4]
  423a52:	add    rax,rdx
  423a55:	jmp    rax
  423a57:	xor    ebx,ebx
  423a59:	mov    eax,0xe
  423a5e:	mov    QWORD PTR [r12+0x18],rbp
  423a63:	test   BYTE PTR [rsp+0x2c],0x1
  423a68:	mov    WORD PTR [r12+0x28],ax
  423a6e:	mov    rax,QWORD PTR [rbp+0xb8]
  423a75:	mov    QWORD PTR [r12+0x80],rax
  423a7d:	movzx  eax,WORD PTR [rbp+0xb0]
  423a84:	mov    WORD PTR [r12+0x72],ax
  423a8a:	movzx  eax,WORD PTR [rbp+0x10]
  423a8e:	jne    423ab3 <__flatcc_fb_clear_parser@@Base+0x2343>
  423a90:	cmp    ax,0x4
  423a94:	jne    423ab3 <__flatcc_fb_clear_parser@@Base+0x2343>
  423a96:	mov    r13d,DWORD PTR [rsp+0x4c]
  423a9b:	test   r13d,r13d
  423a9e:	jne    423aad <__flatcc_fb_clear_parser@@Base+0x233d>
  423aa0:	movzx  edx,WORD PTR [rsp+0x30]
  423aa5:	mov    QWORD PTR [r12+0x88],rdx
  423aad:	add    QWORD PTR [rsp+0x30],0x1
  423ab3:	movzx  edx,WORD PTR [r12+0x58]
  423ab9:	test   dx,dx
  423abc:	je     423df8 <__flatcc_fb_clear_parser@@Base+0x2688>
  423ac2:	cmp    ax,0x3
  423ac6:	jne    4240be <__flatcc_fb_clear_parser@@Base+0x294e>
  423acc:	cmp    dx,0xd
  423ad0:	je     424368 <__flatcc_fb_clear_parser@@Base+0x2bf8>
  423ad6:	lea    r13,[r12+0x48]
  423adb:	mov    edx,DWORD PTR [rbp+0x48]
  423ade:	mov    rsi,r12
  423ae1:	mov    rdi,r14
  423ae4:	mov    rcx,r13
  423ae7:	call   4263d0 <__flatcc_fb_coerce_scalar_type@@Base>
  423aec:	test   eax,eax
  423aee:	jne    423678 <__flatcc_fb_clear_parser@@Base+0x1f08>
  423af4:	mov    r11d,DWORD PTR [r14+0x140]
  423afb:	test   r11d,r11d
  423afe:	je     4234c4 <__flatcc_fb_clear_parser@@Base+0x1d54>
  423b04:	mov    rax,QWORD PTR [r12+0x18]
  423b09:	mov    rsi,r13
  423b0c:	lea    rdi,[rax+0x80]
  423b13:	call   42c470 <fb_value_set_find_item@@Base>
  423b18:	test   rax,rax
  423b1b:	jne    4234c4 <__flatcc_fb_clear_parser@@Base+0x1d54>
  423b21:	mov    rsi,QWORD PTR [r12+0x8]
  423b26:	lea    rdx,[rip+0x244cb]        # 447ff8 <fb_schema_table_missing@@Base+0x1c88>
  423b2d:	xor    r9d,r9d
  423b30:	xor    r8d,r8d
  423b33:	xor    ecx,ecx
  423b35:	mov    rdi,r14
  423b38:	call   41d580 <__flatcc_error_report@@Base>
  423b3d:	mov    r10d,0x1
  423b43:	mov    WORD PTR [r12+0x28],r10w
  423b49:	jmp    422c36 <__flatcc_fb_clear_parser@@Base+0x14c6>
  423b4e:	xchg   ax,ax
  423b50:	mov    rbx,rax
  423b53:	jmp    4236e0 <__flatcc_fb_clear_parser@@Base+0x1f70>
  423b58:	mov    rbx,rax
  423b5b:	jmp    4233d8 <__flatcc_fb_clear_parser@@Base+0x1c68>
  423b60:	mov    rsi,QWORD PTR [r12+0x8]
  423b65:	lea    rdx,[rip+0x2458c]        # 4480f8 <fb_schema_table_missing@@Base+0x1d88>
  423b6c:	xor    r9d,r9d
  423b6f:	xor    r8d,r8d
  423b72:	xor    ecx,ecx
  423b74:	mov    rdi,r14
  423b77:	call   41d580 <__flatcc_error_report@@Base>
  423b7c:	mov    eax,0x1
  423b81:	mov    WORD PTR [r12+0x28],ax
  423b87:	jmp    422c36 <__flatcc_fb_clear_parser@@Base+0x14c6>
  423b8c:	mov    rsi,QWORD PTR [r12+0x8]
  423b91:	lea    rdx,[rip+0x24260]        # 447df8 <fb_schema_table_missing@@Base+0x1a88>
  423b98:	xor    r9d,r9d
  423b9b:	xor    r8d,r8d
  423b9e:	xor    ecx,ecx
  423ba0:	mov    rdi,r14
  423ba3:	call   41d580 <__flatcc_error_report@@Base>
  423ba8:	mov    DWORD PTR [rsp+0x2c],0x1
  423bb0:	jmp    423020 <__flatcc_fb_clear_parser@@Base+0x18b0>
  423bb5:	mov    rsi,QWORD PTR [r13+0x8]
  423bb9:	lea    rdx,[rip+0x240a0]        # 447c60 <fb_schema_table_missing@@Base+0x18f0>
  423bc0:	xor    r9d,r9d
  423bc3:	xor    r8d,r8d
  423bc6:	xor    ecx,ecx
  423bc8:	mov    rdi,r14
  423bcb:	call   41d580 <__flatcc_error_report@@Base>
  423bd0:	movzx  ebx,WORD PTR [r12+0x70]
  423bd6:	jmp    422f10 <__flatcc_fb_clear_parser@@Base+0x17a0>
  423bdb:	xor    esi,esi
  423bdd:	mov    WORD PTR [r12+0x70],si
  423be3:	jmp    422f22 <__flatcc_fb_clear_parser@@Base+0x17b2>
  423be8:	cmp    edx,0x1
  423beb:	mov    edx,0x0
  423bf0:	mov    rsi,rdx
  423bf3:	cmovne rsi,r8
  423bf7:	cmp    QWORD PTR [rsp+0x58],0x0
  423bfd:	je     423c46 <__flatcc_fb_clear_parser@@Base+0x24d6>
  423bff:	mov    rdi,QWORD PTR [r14+0x260]
  423c06:	test   rdi,rdi
  423c09:	je     423c46 <__flatcc_fb_clear_parser@@Base+0x24d6>
  423c0b:	neg    eax
  423c0d:	movsxd rdx,eax
  423c10:	call   41c2b0 <fb_scope_table_find@@Base>
  423c15:	test   rax,rax
  423c18:	je     423c41 <__flatcc_fb_clear_parser@@Base+0x24d1>
  423c1a:	mov    rcx,QWORD PTR [r13+0x8]
  423c1e:	lea    rdi,[rax+0x8]
  423c22:	mov    rdx,QWORD PTR [rcx+0x8]
  423c26:	mov    rsi,QWORD PTR [rcx]
  423c29:	call   41b300 <fb_symbol_table_find@@Base>
  423c2e:	test   rax,rax
  423c31:	mov    rbp,rax
  423c34:	je     423c41 <__flatcc_fb_clear_parser@@Base+0x24d1>
  423c36:	cmp    WORD PTR [rax+0x10],0x4
  423c3b:	jbe    424229 <__flatcc_fb_clear_parser@@Base+0x2ab9>
  423c41:	mov    r8,QWORD PTR [r12+0x18]
  423c46:	lea    rdx,[rip+0x2428b]        # 447ed8 <fb_schema_table_missing@@Base+0x1b68>
  423c4d:	mov    rcx,r12
  423c50:	mov    rsi,r8
  423c53:	mov    rdi,r14
  423c56:	call   41e930 <error_ref_sym@@Base>
  423c5b:	mov    eax,0x1
  423c60:	mov    DWORD PTR [rsp+0x2c],0x1
  423c68:	mov    WORD PTR [r12+0x28],ax
  423c6e:	jmp    422c36 <__flatcc_fb_clear_parser@@Base+0x14c6>
  423c73:	cmp    ecx,0x1
  423c76:	cmovne rax,rsi
  423c7a:	cmp    QWORD PTR [rsp+0x58],0x0
  423c80:	je     423486 <__flatcc_fb_clear_parser@@Base+0x1d16>
  423c86:	mov    rdi,QWORD PTR [r14+0x260]
  423c8d:	test   rdi,rdi
  423c90:	je     423486 <__flatcc_fb_clear_parser@@Base+0x1d16>
  423c96:	neg    edx
  423c98:	mov    rsi,rax
  423c9b:	movsxd rdx,edx
  423c9e:	call   41c2b0 <fb_scope_table_find@@Base>
  423ca3:	test   rax,rax
  423ca6:	je     423481 <__flatcc_fb_clear_parser@@Base+0x1d11>
  423cac:	mov    rcx,QWORD PTR [r13+0x8]
  423cb0:	lea    rdi,[rax+0x8]
  423cb4:	mov    rdx,QWORD PTR [rcx+0x8]
  423cb8:	mov    rsi,QWORD PTR [rcx]
  423cbb:	call   41b300 <fb_symbol_table_find@@Base>
  423cc0:	test   rax,rax
  423cc3:	mov    rbp,rax
  423cc6:	je     423481 <__flatcc_fb_clear_parser@@Base+0x1d11>
  423ccc:	cmp    WORD PTR [rax+0x10],0x4
  423cd1:	ja     423481 <__flatcc_fb_clear_parser@@Base+0x1d11>
  423cd7:	mov    rsi,QWORD PTR [rax+0x20]
  423cdb:	mov    rdi,QWORD PTR [rsp+0x40]
  423ce0:	call   41aba0 <ptr_set_find_item@@Base>
  423ce5:	test   rax,rax
  423ce8:	jne    423959 <__flatcc_fb_clear_parser@@Base+0x21e9>
  423cee:	jmp    423481 <__flatcc_fb_clear_parser@@Base+0x1d11>
  423cf3:	nop    DWORD PTR [rax+rax*1+0x0]
  423cf8:	test   bh,0x8
  423cfb:	je     422f92 <__flatcc_fb_clear_parser@@Base+0x1822>
  423d01:	movzx  ebx,WORD PTR [r12+0x70]
  423d07:	jmp    4232ea <__flatcc_fb_clear_parser@@Base+0x1b7a>
  423d0c:	mov    rsi,QWORD PTR [r12+0x8]
  423d11:	lea    rdx,[rip+0x23ff0]        # 447d08 <fb_schema_table_missing@@Base+0x1998>
  423d18:	xor    r9d,r9d
  423d1b:	xor    r8d,r8d
  423d1e:	xor    ecx,ecx
  423d20:	mov    rdi,r14
  423d23:	call   41d580 <__flatcc_error_report@@Base>
  423d28:	movzx  ebx,WORD PTR [r12+0x70]
  423d2e:	jmp    422f22 <__flatcc_fb_clear_parser@@Base+0x17b2>
  423d33:	mov    rax,QWORD PTR [rsp+0x20]
  423d38:	lea    rdx,[rip+0x243e1]        # 448120 <fb_schema_table_missing@@Base+0x1db0>
  423d3f:	xor    r9d,r9d
  423d42:	xor    r8d,r8d
  423d45:	xor    ecx,ecx
  423d47:	mov    rdi,r14
  423d4a:	mov    rsi,QWORD PTR [rax+0x8]
  423d4e:	call   41d580 <__flatcc_error_report@@Base>
  423d53:	mov    DWORD PTR [rsp+0x2c],0x1
  423d5b:	jmp    423550 <__flatcc_fb_clear_parser@@Base+0x1de0>
  423d60:	mov    rsi,QWORD PTR [r12+0x8]
  423d65:	lea    rdx,[rip+0x23ecc]        # 447c38 <fb_schema_table_missing@@Base+0x18c8>
  423d6c:	xor    r9d,r9d
  423d6f:	xor    r8d,r8d
  423d72:	xor    ecx,ecx
  423d74:	mov    rdi,r14
  423d77:	call   41d580 <__flatcc_error_report@@Base>
  423d7c:	mov    DWORD PTR [rsp+0x48],0xffffffff
  423d84:	jmp    4232ab <__flatcc_fb_clear_parser@@Base+0x1b3b>
  423d89:	mov    rcx,QWORD PTR [rbp+0x8]
  423d8d:	mov    rsi,QWORD PTR [r12+0x8]
  423d92:	lea    rdx,[rip+0x241a7]        # 447f40 <fb_schema_table_missing@@Base+0x1bd0>
  423d99:	xor    r9d,r9d
  423d9c:	xor    r8d,r8d
  423d9f:	mov    rdi,r14
  423da2:	call   41d580 <__flatcc_error_report@@Base>
  423da7:	mov    eax,0x1
  423dac:	mov    WORD PTR [r12+0x28],ax
  423db2:	jmp    422c36 <__flatcc_fb_clear_parser@@Base+0x14c6>
  423db7:	test   BYTE PTR [r12+0x71],0x1
  423dbd:	jne    424533 <__flatcc_fb_clear_parser@@Base+0x2dc3>
  423dc3:	mov    ebx,DWORD PTR [r14+0x100]
  423dca:	jmp    423a59 <__flatcc_fb_clear_parser@@Base+0x22e9>
  423dcf:	mov    rsi,QWORD PTR [r12+0x8]
  423dd4:	lea    rdx,[rip+0x24385]        # 448160 <fb_schema_table_missing@@Base+0x1df0>
  423ddb:	xor    r9d,r9d
  423dde:	xor    r8d,r8d
  423de1:	xor    ecx,ecx
  423de3:	mov    rdi,r14
  423de6:	call   41d580 <__flatcc_error_report@@Base>
  423deb:	mov    DWORD PTR [rsp+0x2c],0x1
  423df3:	jmp    423550 <__flatcc_fb_clear_parser@@Base+0x1de0>
  423df8:	cmp    ax,0x3
  423dfc:	jne    4234c4 <__flatcc_fb_clear_parser@@Base+0x1d54>
  423e02:	mov    r9d,0x5
  423e08:	mov    QWORD PTR [r12+0x48],0x0
  423e11:	lea    r13,[r12+0x48]
  423e16:	mov    WORD PTR [r12+0x58],r9w
  423e1c:	mov    edx,DWORD PTR [rbp+0x48]
  423e1f:	mov    rsi,rbp
  423e22:	mov    rcx,r13
  423e25:	mov    rdi,r14
  423e28:	call   4263d0 <__flatcc_fb_coerce_scalar_type@@Base>
  423e2d:	test   eax,eax
  423e2f:	jne    423678 <__flatcc_fb_clear_parser@@Base+0x1f08>
  423e35:	mov    r8d,DWORD PTR [r14+0x140]
  423e3c:	test   r8d,r8d
  423e3f:	je     4234c4 <__flatcc_fb_clear_parser@@Base+0x1d54>
  423e45:	mov    rax,QWORD PTR [r12+0x18]
  423e4a:	mov    rsi,r13
  423e4d:	lea    rdi,[rax+0x80]
  423e54:	call   42c470 <fb_value_set_find_item@@Base>
  423e59:	test   rax,rax
  423e5c:	jne    4234c4 <__flatcc_fb_clear_parser@@Base+0x1d54>
  423e62:	mov    rcx,QWORD PTR [rbp+0x8]
  423e66:	mov    rsi,QWORD PTR [r12+0x8]
  423e6b:	lea    rdx,[rip+0x241b6]        # 448028 <fb_schema_table_missing@@Base+0x1cb8>
  423e72:	mov    rdi,r14
  423e75:	xor    r9d,r9d
  423e78:	xor    r8d,r8d
  423e7b:	call   41d580 <__flatcc_error_report@@Base>
  423e80:	mov    edi,0x1
  423e85:	mov    WORD PTR [r12+0x28],di
  423e8b:	jmp    422c36 <__flatcc_fb_clear_parser@@Base+0x14c6>
  423e90:	cmp    eax,0x4
  423e93:	jne    4244cb <__flatcc_fb_clear_parser@@Base+0x2d5b>
  423e99:	movzx  eax,WORD PTR [r13+0x20]
  423e9e:	sub    eax,0x4
  423ea1:	cmp    ax,0x1
  423ea5:	jbe    422b1d <__flatcc_fb_clear_parser@@Base+0x13ad>
  423eab:	mov    rsi,QWORD PTR [r13+0x8]
  423eaf:	lea    rdx,[rip+0x237f2]        # 4476a8 <fb_schema_table_missing@@Base+0x1338>
  423eb6:	xor    r9d,r9d
  423eb9:	xor    r8d,r8d
  423ebc:	xor    ecx,ecx
  423ebe:	mov    rdi,r14
  423ec1:	call   41d580 <__flatcc_error_report@@Base>
  423ec6:	jmp    422b1d <__flatcc_fb_clear_parser@@Base+0x13ad>
  423ecb:	lea    rdx,[rip+0x242ce]        # 4481a0 <fb_schema_table_missing@@Base+0x1e30>
  423ed2:	mov    rdi,r14
  423ed5:	call   41d580 <__flatcc_error_report@@Base>
  423eda:	mov    DWORD PTR [rsp+0x2c],0x1
  423ee2:	jmp    423550 <__flatcc_fb_clear_parser@@Base+0x1de0>
  423ee7:	cmp    eax,0x4
  423eea:	jne    4247a9 <__flatcc_fb_clear_parser@@Base+0x3039>
  423ef0:	movzx  eax,WORD PTR [rbp+0x20]
  423ef4:	sub    eax,0x4
  423ef7:	cmp    ax,0x1
  423efb:	jbe    422cfa <__flatcc_fb_clear_parser@@Base+0x158a>
  423f01:	mov    rsi,QWORD PTR [rbp+0x8]
  423f05:	lea    rdx,[rip+0x2379c]        # 4476a8 <fb_schema_table_missing@@Base+0x1338>
  423f0c:	xor    r9d,r9d
  423f0f:	xor    r8d,r8d
  423f12:	xor    ecx,ecx
  423f14:	mov    rdi,r14
  423f17:	call   41d580 <__flatcc_error_report@@Base>
  423f1c:	jmp    422cfa <__flatcc_fb_clear_parser@@Base+0x158a>
  423f21:	mov    rsi,QWORD PTR [r12+0x8]
  423f26:	lea    rdx,[rip+0x23f53]        # 447e80 <fb_schema_table_missing@@Base+0x1b10>
  423f2d:	xor    r9d,r9d
  423f30:	xor    r8d,r8d
  423f33:	xor    ecx,ecx
  423f35:	mov    rdi,r14
  423f38:	call   41d580 <__flatcc_error_report@@Base>
  423f3d:	mov    eax,0x1
  423f42:	mov    WORD PTR [r12+0x28],ax
  423f48:	jmp    422c36 <__flatcc_fb_clear_parser@@Base+0x14c6>
  423f4d:	mov    rcx,QWORD PTR [rbp+0x8]
  423f51:	mov    rsi,QWORD PTR [r12+0x8]
  423f56:	lea    rdx,[rip+0x24013]        # 447f70 <fb_schema_table_missing@@Base+0x1c00>
  423f5d:	xor    r9d,r9d
  423f60:	xor    r8d,r8d
  423f63:	mov    rdi,r14
  423f66:	call   41d580 <__flatcc_error_report@@Base>
  423f6b:	mov    eax,0x1
  423f70:	mov    WORD PTR [r12+0x28],ax
  423f76:	jmp    422c36 <__flatcc_fb_clear_parser@@Base+0x14c6>
  423f7b:	mov    rax,QWORD PTR [rsp+0x20]
  423f80:	mov    rax,QWORD PTR [rax+0x10]
  423f84:	cmp    rax,QWORD PTR [r14+0x148]
  423f8b:	jae    424554 <__flatcc_fb_clear_parser@@Base+0x2de4>
  423f91:	mov    rcx,QWORD PTR [rsp+0x68]
  423f96:	movzx  eax,ax
  423f99:	mov    QWORD PTR [r12+0x88],rax
  423fa1:	cmp    rcx,rax
  423fa4:	cmovae rax,rcx
  423fa8:	mov    QWORD PTR [rsp+0x68],rax
  423fad:	mov    r13d,DWORD PTR [rsp+0x4c]
  423fb2:	test   r13d,r13d
  423fb5:	je     424770 <__flatcc_fb_clear_parser@@Base+0x3000>
  423fbb:	mov    rdx,QWORD PTR [rsp+0x50]
  423fc0:	add    rdx,QWORD PTR [r12+0x88]
  423fc8:	movzx  eax,BYTE PTR [rdx]
  423fcb:	cmp    al,0x2
  423fcd:	je     424091 <__flatcc_fb_clear_parser@@Base+0x2921>
  423fd3:	test   al,al
  423fd5:	jne    42406c <__flatcc_fb_clear_parser@@Base+0x28fc>
  423fdb:	mov    BYTE PTR [rdx],0x1
  423fde:	test   rbp,rbp
  423fe1:	mov    DWORD PTR [rsp+0x2c],0x0
  423fe9:	je     423550 <__flatcc_fb_clear_parser@@Base+0x1de0>
  423fef:	cmp    WORD PTR [rbp+0x10],0x4
  423ff4:	jne    423550 <__flatcc_fb_clear_parser@@Base+0x1de0>
  423ffa:	mov    rdx,QWORD PTR [r12+0x88]
  424002:	movzx  eax,WORD PTR [r12+0x28]
  424008:	cmp    rdx,0x1
  42400c:	jbe    42457d <__flatcc_fb_clear_parser@@Base+0x2e0d>
  424012:	mov    rcx,QWORD PTR [rsp+0x50]
  424017:	lea    rdx,[rcx+rdx*1-0x1]
  42401c:	movzx  ecx,BYTE PTR [rdx]
  42401f:	cmp    cl,0x2
  424022:	je     4245c9 <__flatcc_fb_clear_parser@@Base+0x2e59>
  424028:	test   cl,cl
  42402a:	je     42428c <__flatcc_fb_clear_parser@@Base+0x2b1c>
  424030:	cmp    ax,0xb
  424034:	lea    rdx,[rip+0x23b85]        # 447bc0 <fb_schema_table_missing@@Base+0x1850>
  42403b:	lea    rax,[rip+0x23b26]        # 447b68 <fb_schema_table_missing@@Base+0x17f8>
  424042:	cmove  rdx,rax
  424046:	mov    rax,QWORD PTR [rsp+0x20]
  42404b:	xor    r9d,r9d
  42404e:	xor    r8d,r8d
  424051:	xor    ecx,ecx
  424053:	mov    rdi,r14
  424056:	mov    rsi,QWORD PTR [rax+0x8]
  42405a:	call   41d580 <__flatcc_error_report@@Base>
  42405f:	mov    eax,DWORD PTR [rsp+0x4c]
  424063:	mov    DWORD PTR [rsp+0x2c],eax
  424067:	jmp    423550 <__flatcc_fb_clear_parser@@Base+0x1de0>
  42406c:	mov    rax,QWORD PTR [rsp+0x20]
  424071:	lea    rdx,[rip+0x24180]        # 4481f8 <fb_schema_table_missing@@Base+0x1e88>
  424078:	xor    r9d,r9d
  42407b:	xor    r8d,r8d
  42407e:	xor    ecx,ecx
  424080:	mov    rdi,r14
  424083:	mov    rsi,QWORD PTR [rax+0x8]
  424087:	call   41d580 <__flatcc_error_report@@Base>
  42408c:	jmp    423fde <__flatcc_fb_clear_parser@@Base+0x286e>
  424091:	mov    rax,QWORD PTR [rsp+0x20]
  424096:	lea    rdx,[rip+0x24123]        # 4481c0 <fb_schema_table_missing@@Base+0x1e50>
  42409d:	xor    r9d,r9d
  4240a0:	xor    r8d,r8d
  4240a3:	xor    ecx,ecx
  4240a5:	mov    rdi,r14
  4240a8:	mov    rsi,QWORD PTR [rax+0x8]
  4240ac:	call   41d580 <__flatcc_error_report@@Base>
  4240b1:	mov    eax,DWORD PTR [rsp+0x4c]
  4240b5:	mov    DWORD PTR [rsp+0x2c],eax
  4240b9:	jmp    423550 <__flatcc_fb_clear_parser@@Base+0x1de0>
  4240be:	mov    rsi,QWORD PTR [r12+0x8]
  4240c3:	lea    rdx,[rip+0x23ece]        # 447f98 <fb_schema_table_missing@@Base+0x1c28>
  4240ca:	xor    r9d,r9d
  4240cd:	xor    r8d,r8d
  4240d0:	xor    ecx,ecx
  4240d2:	mov    rdi,r14
  4240d5:	call   41d580 <__flatcc_error_report@@Base>
  4240da:	mov    edx,0x1
  4240df:	mov    WORD PTR [r12+0x28],dx
  4240e5:	jmp    422c36 <__flatcc_fb_clear_parser@@Base+0x14c6>
  4240ea:	mov    eax,r9d
  4240ed:	mov    QWORD PTR [rsp+0x18],r8
  4240f2:	xor    r10d,r10d
  4240f5:	jmp    422e22 <__flatcc_fb_clear_parser@@Base+0x16b2>
  4240fa:	mov    eax,esi
  4240fc:	xor    r10d,r10d
  4240ff:	jmp    4231de <__flatcc_fb_clear_parser@@Base+0x1a6e>
  424104:	mov    rsi,QWORD PTR [r12+0x48]
  424109:	mov    rax,QWORD PTR [rsp+0x38]
  42410e:	test   rsi,rsi
  424111:	mov    rbx,QWORD PTR [rax+0x18]
  424115:	je     424702 <__flatcc_fb_clear_parser@@Base+0x2f92>
  42411b:	mov    r13,rsi
  42411e:	xor    edi,edi
  424120:	xor    edx,edx
  424122:	jmp    42412c <__flatcc_fb_clear_parser@@Base+0x29bc>
  424124:	mov    rdi,r13
  424127:	mov    edx,ecx
  424129:	mov    r13,rax
  42412c:	mov    rax,QWORD PTR [r13+0x0]
  424130:	lea    ecx,[rdx+0x1]
  424133:	test   rax,rax
  424136:	jne    424124 <__flatcc_fb_clear_parser@@Base+0x29b4>
  424138:	test   rdi,rdi
  42413b:	mov    QWORD PTR [rsp+0x60],rdi
  424140:	je     424207 <__flatcc_fb_clear_parser@@Base+0x2a97>
  424146:	test   rbx,rbx
  424149:	je     424294 <__flatcc_fb_clear_parser@@Base+0x2b24>
  42414f:	cmp    edx,0x1
  424152:	jne    424294 <__flatcc_fb_clear_parser@@Base+0x2b24>
  424158:	mov    r15,QWORD PTR [rsp+0x58]
  42415d:	mov    QWORD PTR [rsp+0x70],rbp
  424162:	mov    rax,QWORD PTR [rsp+0x60]
  424167:	lea    rdi,[rbx+0x8]
  42416b:	mov    rax,QWORD PTR [rax+0x8]
  42416f:	mov    rdx,QWORD PTR [rax+0x8]
  424173:	mov    rsi,QWORD PTR [rax]
  424176:	call   41b300 <fb_symbol_table_find@@Base>
  42417b:	test   rax,rax
  42417e:	je     42418b <__flatcc_fb_clear_parser@@Base+0x2a1b>
  424180:	cmp    WORD PTR [rax+0x10],0x4
  424185:	jbe    424500 <__flatcc_fb_clear_parser@@Base+0x2d90>
  42418b:	mov    rax,QWORD PTR [rbx]
  42418e:	test   rax,rax
  424191:	je     424202 <__flatcc_fb_clear_parser@@Base+0x2a92>
  424193:	xor    edx,edx
  424195:	nop    DWORD PTR [rax]
  424198:	mov    rax,QWORD PTR [rax]
  42419b:	add    edx,0x1
  42419e:	test   rax,rax
  4241a1:	jne    424198 <__flatcc_fb_clear_parser@@Base+0x2a28>
  4241a3:	mov    ebp,0x1
  4241a8:	sub    ebp,edx
  4241aa:	jmp    4241d8 <__flatcc_fb_clear_parser@@Base+0x2a68>
  4241ac:	nop    DWORD PTR [rax+0x0]
  4241b0:	test   r15,r15
  4241b3:	je     4241d5 <__flatcc_fb_clear_parser@@Base+0x2a65>
  4241b5:	mov    rdi,QWORD PTR [r14+0x260]
  4241bc:	test   rdi,rdi
  4241bf:	je     4241d5 <__flatcc_fb_clear_parser@@Base+0x2a65>
  4241c1:	mov    rsi,QWORD PTR [rbx]
  4241c4:	movsxd rdx,ebp
  4241c7:	call   41c2b0 <fb_scope_table_find@@Base>
  4241cc:	test   rax,rax
  4241cf:	jne    42452b <__flatcc_fb_clear_parser@@Base+0x2dbb>
  4241d5:	add    ebp,0x1
  4241d8:	test   ebp,ebp
  4241da:	jne    4241b0 <__flatcc_fb_clear_parser@@Base+0x2a40>
  4241dc:	test   r15,r15
  4241df:	je     424202 <__flatcc_fb_clear_parser@@Base+0x2a92>
  4241e1:	mov    rdi,QWORD PTR [r14+0x260]
  4241e8:	test   rdi,rdi
  4241eb:	je     424202 <__flatcc_fb_clear_parser@@Base+0x2a92>
  4241ed:	xor    edx,edx
  4241ef:	xor    esi,esi
  4241f1:	call   41c2b0 <fb_scope_table_find@@Base>
  4241f6:	test   rax,rax
  4241f9:	mov    rbx,rax
  4241fc:	jne    424162 <__flatcc_fb_clear_parser@@Base+0x29f2>
  424202:	mov    rsi,QWORD PTR [r12+0x48]
  424207:	lea    rdx,[rip+0x23c0a]        # 447e18 <fb_schema_table_missing@@Base+0x1aa8>
  42420e:	mov    rcx,r12
  424211:	mov    rdi,r14
  424214:	call   41e930 <error_ref_sym@@Base>
  424219:	mov    ecx,0x1
  42421e:	mov    WORD PTR [r12+0x28],cx
  424224:	jmp    422c36 <__flatcc_fb_clear_parser@@Base+0x14c6>
  424229:	mov    rsi,QWORD PTR [rax+0x20]
  42422d:	mov    rdi,QWORD PTR [rsp+0x40]
  424232:	call   41aba0 <ptr_set_find_item@@Base>
  424237:	test   rax,rax
  42423a:	jne    423a38 <__flatcc_fb_clear_parser@@Base+0x22c8>
  424240:	jmp    423c41 <__flatcc_fb_clear_parser@@Base+0x24d1>
  424245:	mov    rax,QWORD PTR [rsp+0x38]
  42424a:	mov    r14,QWORD PTR [rsp+0x8]
  42424f:	lea    rdx,[rip+0x2466f]        # 4488c5 <fb_schema_table_missing@@Base+0x2555>
  424256:	xor    r9d,r9d
  424259:	xor    r8d,r8d
  42425c:	xor    ecx,ecx
  42425e:	mov    rsi,QWORD PTR [rax+0x8]
  424262:	mov    rdi,r14
  424265:	call   41d580 <__flatcc_error_report@@Base>
  42426a:	jmp    42385d <__flatcc_fb_clear_parser@@Base+0x20ed>
  42426f:	mov    rax,QWORD PTR [rsp+0x38]
  424274:	mov    DWORD PTR [rsp+0x48],0x0
  42427c:	mov    QWORD PTR [rax+0xa8],0x0
  424287:	jmp    4232ab <__flatcc_fb_clear_parser@@Base+0x1b3b>
  42428c:	mov    BYTE PTR [rdx],0x2
  42428f:	jmp    423550 <__flatcc_fb_clear_parser@@Base+0x1de0>
  424294:	cmp    edx,0x1
  424297:	cmovne rax,rsi
  42429b:	cmp    QWORD PTR [rsp+0x58],0x0
  4242a1:	je     424207 <__flatcc_fb_clear_parser@@Base+0x2a97>
  4242a7:	mov    rdi,QWORD PTR [r14+0x260]
  4242ae:	test   rdi,rdi
  4242b1:	je     424207 <__flatcc_fb_clear_parser@@Base+0x2a97>
  4242b7:	mov    ecx,0x1
  4242bc:	mov    rsi,rax
  4242bf:	sub    ecx,edx
  4242c1:	movsxd rdx,ecx
  4242c4:	call   41c2b0 <fb_scope_table_find@@Base>
  4242c9:	test   rax,rax
  4242cc:	je     424202 <__flatcc_fb_clear_parser@@Base+0x2a92>
  4242d2:	mov    rbx,QWORD PTR [rsp+0x60]
  4242d7:	lea    rdi,[rax+0x8]
  4242db:	mov    rcx,QWORD PTR [rbx+0x8]
  4242df:	mov    rdx,QWORD PTR [rcx+0x8]
  4242e3:	mov    rsi,QWORD PTR [rcx]
  4242e6:	call   41b300 <fb_symbol_table_find@@Base>
  4242eb:	test   rax,rax
  4242ee:	je     424202 <__flatcc_fb_clear_parser@@Base+0x2a92>
  4242f4:	cmp    WORD PTR [rax+0x10],0x4
  4242f9:	ja     424202 <__flatcc_fb_clear_parser@@Base+0x2a92>
  4242ff:	mov    rsi,QWORD PTR [rax+0x20]
  424303:	mov    rdi,QWORD PTR [rsp+0x40]
  424308:	mov    QWORD PTR [rsp+0x60],rax
  42430d:	call   41aba0 <ptr_set_find_item@@Base>
  424312:	test   rax,rax
  424315:	mov    rcx,QWORD PTR [rsp+0x60]
  42431a:	je     424202 <__flatcc_fb_clear_parser@@Base+0x2a92>
  424320:	cmp    WORD PTR [rcx+0x10],0x3
  424325:	jne    424202 <__flatcc_fb_clear_parser@@Base+0x2a92>
  42432b:	mov    rax,QWORD PTR [r13+0x8]
  42432f:	lea    rdi,[rcx+0x60]
  424333:	mov    rdx,QWORD PTR [rax+0x8]
  424337:	mov    rsi,QWORD PTR [rax]
  42433a:	call   41b300 <fb_symbol_table_find@@Base>
  42433f:	test   rax,rax
  424342:	je     424202 <__flatcc_fb_clear_parser@@Base+0x2a92>
  424348:	mov    rdx,QWORD PTR [rax+0x48]
  42434c:	mov    QWORD PTR [r12+0x48],rdx
  424351:	mov    rdx,QWORD PTR [rax+0x50]
  424355:	mov    QWORD PTR [r12+0x50],rdx
  42435a:	mov    rax,QWORD PTR [rax+0x58]
  42435e:	mov    QWORD PTR [r12+0x58],rax
  424363:	jmp    4235d5 <__flatcc_fb_clear_parser@@Base+0x1e65>
  424368:	mov    rax,QWORD PTR [r12+0x48]
  42436d:	mov    rcx,QWORD PTR [rsp+0x38]
  424372:	test   rax,rax
  424375:	mov    QWORD PTR [rsp+0x78],rax
  42437a:	mov    r13,QWORD PTR [rcx+0x18]
  42437e:	je     424702 <__flatcc_fb_clear_parser@@Base+0x2f92>
  424384:	mov    rdx,rax
  424387:	xor    eax,eax
  424389:	jmp    424393 <__flatcc_fb_clear_parser@@Base+0x2c23>
  42438b:	mov    r15,rdx
  42438e:	mov    eax,ecx
  424390:	mov    rdx,rsi
  424393:	mov    rsi,QWORD PTR [rdx]
  424396:	lea    ecx,[rax+0x1]
  424399:	test   rsi,rsi
  42439c:	jne    42438b <__flatcc_fb_clear_parser@@Base+0x2c1b>
  42439e:	test   r15,r15
  4243a1:	mov    QWORD PTR [rsp+0x80],rdx
  4243a9:	je     424474 <__flatcc_fb_clear_parser@@Base+0x2d04>
  4243af:	test   r13,r13
  4243b2:	je     424653 <__flatcc_fb_clear_parser@@Base+0x2ee3>
  4243b8:	cmp    eax,0x1
  4243bb:	jne    424653 <__flatcc_fb_clear_parser@@Base+0x2ee3>
  4243c1:	mov    QWORD PTR [rsp+0x60],rbp
  4243c6:	mov    rbp,QWORD PTR [rsp+0x58]
  4243cb:	mov    DWORD PTR [rsp+0x70],ebx
  4243cf:	mov    rax,QWORD PTR [r15+0x8]
  4243d3:	lea    rdi,[r13+0x8]
  4243d7:	mov    rdx,QWORD PTR [rax+0x8]
  4243db:	mov    rsi,QWORD PTR [rax]
  4243de:	call   41b300 <fb_symbol_table_find@@Base>
  4243e3:	test   rax,rax
  4243e6:	je     4243f3 <__flatcc_fb_clear_parser@@Base+0x2c83>
  4243e8:	cmp    WORD PTR [rax+0x10],0x4
  4243ed:	jbe    4245e8 <__flatcc_fb_clear_parser@@Base+0x2e78>
  4243f3:	mov    rax,QWORD PTR [r13+0x0]
  4243f7:	test   rax,rax
  4243fa:	je     42446b <__flatcc_fb_clear_parser@@Base+0x2cfb>
  4243fc:	xor    edx,edx
  4243fe:	mov    rax,QWORD PTR [rax]
  424401:	add    edx,0x1
  424404:	test   rax,rax
  424407:	jne    4243fe <__flatcc_fb_clear_parser@@Base+0x2c8e>
  424409:	mov    ecx,0x1
  42440e:	mov    ebx,ecx
  424410:	sub    ebx,edx
  424412:	jmp    424441 <__flatcc_fb_clear_parser@@Base+0x2cd1>
  424414:	nop    DWORD PTR [rax+0x0]
  424418:	test   rbp,rbp
  42441b:	je     42443e <__flatcc_fb_clear_parser@@Base+0x2cce>
  42441d:	mov    rdi,QWORD PTR [r14+0x260]
  424424:	test   rdi,rdi
  424427:	je     42443e <__flatcc_fb_clear_parser@@Base+0x2cce>
  424429:	mov    rsi,QWORD PTR [r13+0x0]
  42442d:	movsxd rdx,ebx
  424430:	call   41c2b0 <fb_scope_table_find@@Base>
  424435:	test   rax,rax
  424438:	jne    4245e0 <__flatcc_fb_clear_parser@@Base+0x2e70>
  42443e:	add    ebx,0x1
  424441:	test   ebx,ebx
  424443:	jne    424418 <__flatcc_fb_clear_parser@@Base+0x2ca8>
  424445:	test   rbp,rbp
  424448:	je     42446b <__flatcc_fb_clear_parser@@Base+0x2cfb>
  42444a:	mov    rdi,QWORD PTR [r14+0x260]
  424451:	test   rdi,rdi
  424454:	je     42446b <__flatcc_fb_clear_parser@@Base+0x2cfb>
  424456:	xor    edx,edx
  424458:	xor    esi,esi
  42445a:	call   41c2b0 <fb_scope_table_find@@Base>
  42445f:	test   rax,rax
  424462:	mov    r13,rax
  424465:	jne    4243cf <__flatcc_fb_clear_parser@@Base+0x2c5f>
  42446b:	mov    rbp,QWORD PTR [rsp+0x60]
  424470:	mov    ebx,DWORD PTR [rsp+0x70]
  424474:	mov    rax,QWORD PTR [rsp+0x78]
  424479:	cmp    QWORD PTR [rax],0x0
  42447d:	jne    42477d <__flatcc_fb_clear_parser@@Base+0x300d>
  424483:	mov    rax,rbp
  424486:	mov    rcx,QWORD PTR [rsp+0x80]
  42448e:	lea    rdi,[rax+0x60]
  424492:	mov    rcx,QWORD PTR [rcx+0x8]
  424496:	mov    rdx,QWORD PTR [rcx+0x8]
  42449a:	mov    rsi,QWORD PTR [rcx]
  42449d:	call   41b300 <fb_symbol_table_find@@Base>
  4244a2:	test   rax,rax
  4244a5:	je     42477d <__flatcc_fb_clear_parser@@Base+0x300d>
  4244ab:	mov    rdx,QWORD PTR [rax+0x48]
  4244af:	mov    QWORD PTR [r12+0x48],rdx
  4244b4:	mov    rdx,QWORD PTR [rax+0x50]
  4244b8:	mov    QWORD PTR [r12+0x50],rdx
  4244bd:	mov    rax,QWORD PTR [rax+0x58]
  4244c1:	mov    QWORD PTR [r12+0x58],rax
  4244c6:	jmp    4234c4 <__flatcc_fb_clear_parser@@Base+0x1d54>
  4244cb:	cmp    eax,0x6
  4244ce:	jne    422b1d <__flatcc_fb_clear_parser@@Base+0x13ad>
  4244d4:	cmp    WORD PTR [r13+0x20],0x6
  4244da:	je     422b1d <__flatcc_fb_clear_parser@@Base+0x13ad>
  4244e0:	mov    rsi,QWORD PTR [r13+0x8]
  4244e4:	lea    rdx,[rip+0x231e5]        # 4476d0 <fb_schema_table_missing@@Base+0x1360>
  4244eb:	xor    r9d,r9d
  4244ee:	xor    r8d,r8d
  4244f1:	xor    ecx,ecx
  4244f3:	mov    rdi,r14
  4244f6:	call   41d580 <__flatcc_error_report@@Base>
  4244fb:	jmp    422b1d <__flatcc_fb_clear_parser@@Base+0x13ad>
  424500:	mov    rsi,QWORD PTR [rax+0x20]
  424504:	mov    rdi,QWORD PTR [rsp+0x40]
  424509:	mov    QWORD PTR [rsp+0x78],rax
  42450e:	call   41aba0 <ptr_set_find_item@@Base>
  424513:	test   rax,rax
  424516:	mov    rcx,QWORD PTR [rsp+0x78]
  42451b:	je     42418b <__flatcc_fb_clear_parser@@Base+0x2a1b>
  424521:	mov    rbp,QWORD PTR [rsp+0x70]
  424526:	jmp    424320 <__flatcc_fb_clear_parser@@Base+0x2bb0>
  42452b:	mov    rbx,rax
  42452e:	jmp    424162 <__flatcc_fb_clear_parser@@Base+0x29f2>
  424533:	mov    rsi,QWORD PTR [r12+0x8]
  424538:	lea    rdx,[rip+0x239c9]        # 447f08 <fb_schema_table_missing@@Base+0x1b98>
  42453f:	xor    r9d,r9d
  424542:	xor    r8d,r8d
  424545:	xor    ecx,ecx
  424547:	mov    rdi,r14
  42454a:	call   41d580 <__flatcc_error_report@@Base>
  42454f:	jmp    423dc3 <__flatcc_fb_clear_parser@@Base+0x2653>
  424554:	mov    rsi,QWORD PTR [r12+0x8]
  424559:	lea    rdx,[rip+0x2432b]        # 44888b <fb_schema_table_missing@@Base+0x251b>
  424560:	xor    r9d,r9d
  424563:	xor    r8d,r8d
  424566:	xor    ecx,ecx
  424568:	mov    rdi,r14
  42456b:	call   41d580 <__flatcc_error_report@@Base>
  424570:	mov    DWORD PTR [rsp+0x2c],0x1
  424578:	jmp    423550 <__flatcc_fb_clear_parser@@Base+0x1de0>
  42457d:	cmp    ax,0xb
  424581:	lea    rdx,[rip+0x234c8]        # 447a50 <fb_schema_table_missing@@Base+0x16e0>
  424588:	lea    rax,[rip+0x23471]        # 447a00 <fb_schema_table_missing@@Base+0x1690>
  42458f:	jmp    424042 <__flatcc_fb_clear_parser@@Base+0x28d2>
  424594:	mov    DWORD PTR [rsp+0x48],0xffffffff
  42459c:	jmp    4232ab <__flatcc_fb_clear_parser@@Base+0x1b3b>
  4245a1:	mov    rcx,QWORD PTR [rdx+0x8]
  4245a5:	mov    rsi,QWORD PTR [r13+0x8]
  4245a9:	lea    rdx,[rip+0x23720]        # 447cd0 <fb_schema_table_missing@@Base+0x1960>
  4245b0:	xor    r9d,r9d
  4245b3:	xor    r8d,r8d
  4245b6:	mov    rdi,r14
  4245b9:	call   41d580 <__flatcc_error_report@@Base>
  4245be:	movzx  ebx,WORD PTR [r12+0x70]
  4245c4:	jmp    422f10 <__flatcc_fb_clear_parser@@Base+0x17a0>
  4245c9:	cmp    ax,0xb
  4245cd:	lea    rdx,[rip+0x23534]        # 447b08 <fb_schema_table_missing@@Base+0x1798>
  4245d4:	lea    rax,[rip+0x234c5]        # 447aa0 <fb_schema_table_missing@@Base+0x1730>
  4245db:	jmp    424042 <__flatcc_fb_clear_parser@@Base+0x28d2>
  4245e0:	mov    r13,rax
  4245e3:	jmp    4243cf <__flatcc_fb_clear_parser@@Base+0x2c5f>
  4245e8:	mov    rsi,QWORD PTR [rax+0x20]
  4245ec:	mov    rdi,QWORD PTR [rsp+0x40]
  4245f1:	mov    QWORD PTR [rsp+0x88],rax
  4245f9:	call   41aba0 <ptr_set_find_item@@Base>
  4245fe:	test   rax,rax
  424601:	mov    rdx,QWORD PTR [rsp+0x88]
  424609:	je     4243f3 <__flatcc_fb_clear_parser@@Base+0x2c83>
  42460f:	mov    rbp,QWORD PTR [rsp+0x60]
  424614:	mov    ebx,DWORD PTR [rsp+0x70]
  424618:	cmp    WORD PTR [rdx+0x10],0x3
  42461d:	jne    424474 <__flatcc_fb_clear_parser@@Base+0x2d04>
  424623:	mov    rax,rdx
  424626:	jmp    424486 <__flatcc_fb_clear_parser@@Base+0x2d16>
  42462b:	mov    rcx,QWORD PTR [rdx+0x8]
  42462f:	mov    rsi,QWORD PTR [r13+0x8]
  424633:	lea    rdx,[rip+0x23666]        # 447ca0 <fb_schema_table_missing@@Base+0x1930>
  42463a:	xor    r9d,r9d
  42463d:	xor    r8d,r8d
  424640:	mov    rdi,r14
  424643:	call   41d580 <__flatcc_error_report@@Base>
  424648:	movzx  ebx,WORD PTR [r12+0x70]
  42464e:	jmp    422f10 <__flatcc_fb_clear_parser@@Base+0x17a0>
  424653:	cmp    eax,0x1
  424656:	cmovne rsi,QWORD PTR [rsp+0x78]
  42465c:	cmp    QWORD PTR [rsp+0x58],0x0
  424662:	je     424474 <__flatcc_fb_clear_parser@@Base+0x2d04>
  424668:	mov    rdi,QWORD PTR [r14+0x260]
  42466f:	test   rdi,rdi
  424672:	je     424474 <__flatcc_fb_clear_parser@@Base+0x2d04>
  424678:	mov    edx,0x1
  42467d:	sub    edx,eax
  42467f:	movsxd rdx,edx
  424682:	call   41c2b0 <fb_scope_table_find@@Base>
  424687:	test   rax,rax
  42468a:	je     424474 <__flatcc_fb_clear_parser@@Base+0x2d04>
  424690:	mov    rcx,QWORD PTR [r15+0x8]
  424694:	lea    rdi,[rax+0x8]
  424698:	mov    rdx,QWORD PTR [rcx+0x8]
  42469c:	mov    rsi,QWORD PTR [rcx]
  42469f:	call   41b300 <fb_symbol_table_find@@Base>
  4246a4:	test   rax,rax
  4246a7:	je     424474 <__flatcc_fb_clear_parser@@Base+0x2d04>
  4246ad:	cmp    WORD PTR [rax+0x10],0x4
  4246b2:	ja     424474 <__flatcc_fb_clear_parser@@Base+0x2d04>
  4246b8:	mov    rsi,QWORD PTR [rax+0x20]
  4246bc:	mov    rdi,QWORD PTR [rsp+0x40]
  4246c1:	mov    QWORD PTR [rsp+0x60],rax
  4246c6:	call   41aba0 <ptr_set_find_item@@Base>
  4246cb:	test   rax,rax
  4246ce:	mov    rdx,QWORD PTR [rsp+0x60]
  4246d3:	jne    424618 <__flatcc_fb_clear_parser@@Base+0x2ea8>
  4246d9:	jmp    424474 <__flatcc_fb_clear_parser@@Base+0x2d04>
  4246de:	xchg   ax,ax
  4246e0:	mov    eax,DWORD PTR [rsp+0x4c]
  4246e4:	test   eax,eax
  4246e6:	jne    4246f5 <__flatcc_fb_clear_parser@@Base+0x2f85>
  4246e8:	movzx  eax,WORD PTR [rsp+0x30]
  4246ed:	mov    QWORD PTR [r12+0x88],rax
  4246f5:	add    QWORD PTR [rsp+0x30],0x1
  4246fb:	xor    ebx,ebx
  4246fd:	jmp    4234d0 <__flatcc_fb_clear_parser@@Base+0x1d60>
  424702:	lea    rcx,[rip+0x243c7]        # 448ad0 <fb_schema_table_missing@@Base+0x2760>
  424709:	lea    rsi,[rip+0x22c40]        # 447350 <fb_schema_table_missing@@Base+0xfe0>
  424710:	lea    rdi,[rip+0x24170]        # 448887 <fb_schema_table_missing@@Base+0x2517>
  424717:	mov    edx,0x15b
  42471c:	call   405100 <__assert_fail@plt>
  424721:	lea    rcx,[rip+0x243c0]        # 448ae8 <fb_schema_table_missing@@Base+0x2778>
  424728:	lea    rsi,[rip+0x22c21]        # 447350 <fb_schema_table_missing@@Base+0xfe0>
  42472f:	lea    rdi,[rip+0x24127]        # 44885d <fb_schema_table_missing@@Base+0x24ed>
  424736:	mov    edx,0x302
  42473b:	call   405100 <__assert_fail@plt>
  424740:	mov    r11d,DWORD PTR [rsp+0x48]
  424745:	test   r11d,r11d
  424748:	je     4232ab <__flatcc_fb_clear_parser@@Base+0x1b3b>
  42474e:	mov    rax,QWORD PTR [rsp+0x38]
  424753:	or     WORD PTR [rax+0x12],0x8
  424758:	cmp    DWORD PTR [rsp+0x48],0x1
  42475d:	jne    423285 <__flatcc_fb_clear_parser@@Base+0x1b15>
  424763:	mov    DWORD PTR [rsp+0x48],0x0
  42476b:	jmp    4232ab <__flatcc_fb_clear_parser@@Base+0x1b3b>
  424770:	mov    DWORD PTR [rsp+0x2c],0x0
  424778:	jmp    423550 <__flatcc_fb_clear_parser@@Base+0x1de0>
  42477d:	mov    rsi,QWORD PTR [r12+0x48]
  424782:	lea    rdx,[rip+0x2383f]        # 447fc8 <fb_schema_table_missing@@Base+0x1c58>
  424789:	mov    rcx,r12
  42478c:	mov    rdi,r14
  42478f:	mov    ebx,0x1
  424794:	call   41e930 <error_ref_sym@@Base>
  424799:	mov    WORD PTR [r12+0x28],bx
  42479f:	jmp    422c36 <__flatcc_fb_clear_parser@@Base+0x14c6>
  4247a4:	call   4050d0 <__stack_chk_fail@plt>
  4247a9:	cmp    eax,0x6
  4247ac:	jne    422cfa <__flatcc_fb_clear_parser@@Base+0x158a>
  4247b2:	cmp    WORD PTR [rbp+0x20],0x6
  4247b7:	je     422cfa <__flatcc_fb_clear_parser@@Base+0x158a>
  4247bd:	mov    rsi,QWORD PTR [rbp+0x8]
  4247c1:	lea    rdx,[rip+0x22f08]        # 4476d0 <fb_schema_table_missing@@Base+0x1360>
  4247c8:	xor    r9d,r9d
  4247cb:	xor    r8d,r8d
  4247ce:	xor    ecx,ecx
  4247d0:	mov    rdi,r14
  4247d3:	call   41d580 <__flatcc_error_report@@Base>
  4247d8:	jmp    422cfa <__flatcc_fb_clear_parser@@Base+0x158a>
  4247dd:	lea    rcx,[rip+0x24304]        # 448ae8 <fb_schema_table_missing@@Base+0x2778>
  4247e4:	lea    rsi,[rip+0x22b65]        # 447350 <fb_schema_table_missing@@Base+0xfe0>
  4247eb:	lea    rdi,[rip+0xadee]        # 42f5e0 <_IO_stdin_used@@Base+0x25e0>
  4247f2:	mov    edx,0x301
  4247f7:	call   405100 <__assert_fail@plt>
  4247fc:	nop    DWORD PTR [rax+0x0]

0000000000424800 <__flatcc_fb_build_schema@@Base>:
  424800:	push   r15
  424802:	push   r14
  424804:	lea    r14,[rdi+0x1f8]
  42480b:	push   r13
  42480d:	push   r12
  42480f:	mov    r15,rdi
  424812:	push   rbp
  424813:	push   rbx
  424814:	mov    rsi,r14
  424817:	sub    rsp,0x108
  42481e:	mov    rax,QWORD PTR fs:0x28
  424827:	mov    QWORD PTR [rsp+0xf8],rax
  42482f:	xor    eax,eax
  424831:	lea    rax,[rdi+0x320]
  424838:	mov    rdi,rax
  42483b:	mov    QWORD PTR [rsp+0x10],rax
  424840:	call   41aba0 <ptr_set_find_item@@Base>
  424845:	test   rax,rax
  424848:	je     4262c6 <__flatcc_fb_build_schema@@Base+0x1ac6>
  42484e:	mov    rbp,QWORD PTR [r15+0x238]
  424855:	mov    ebx,0x811c9dc5
  42485a:	test   rbp,rbp
  42485d:	jne    424875 <__flatcc_fb_build_schema@@Base+0x75>
  42485f:	jmp    424971 <__flatcc_fb_build_schema@@Base+0x171>
  424864:	nop    DWORD PTR [rax+0x0]
  424868:	mov    rbp,QWORD PTR [rbp+0x0]
  42486c:	test   rbp,rbp
  42486f:	je     424971 <__flatcc_fb_build_schema@@Base+0x171>
  424875:	cmp    WORD PTR [rbp+0x10],0x4
  42487a:	ja     424868 <__flatcc_fb_build_schema@@Base+0x68>
  42487c:	mov    r8,QWORD PTR [rbp+0x18]
  424880:	test   r8,r8
  424883:	je     42578a <__flatcc_fb_build_schema@@Base+0xf8a>
  424889:	mov    rdi,QWORD PTR [r8]
  42488c:	test   rdi,rdi
  42488f:	je     4257b6 <__flatcc_fb_build_schema@@Base+0xfb6>
  424895:	mov    ecx,0x811c9dc5
  42489a:	nop    WORD PTR [rax+rax*1+0x0]
  4248a0:	mov    rax,QWORD PTR [rdi+0x8]
  4248a4:	mov    rsi,QWORD PTR [rax+0x8]
  4248a8:	mov    rax,QWORD PTR [rax]
  4248ab:	test   rsi,rsi
  4248ae:	je     4248cd <__flatcc_fb_build_schema@@Base+0xcd>
  4248b0:	add    rsi,rax
  4248b3:	nop    DWORD PTR [rax+rax*1+0x0]
  4248b8:	add    rax,0x1
  4248bc:	movzx  edx,BYTE PTR [rax-0x1]
  4248c0:	xor    edx,ecx
  4248c2:	imul   ecx,edx,0x1000193
  4248c8:	cmp    rax,rsi
  4248cb:	jne    4248b8 <__flatcc_fb_build_schema@@Base+0xb8>
  4248cd:	mov    rdi,QWORD PTR [rdi]
  4248d0:	xor    ecx,0x2e
  4248d3:	imul   ecx,ecx,0x1000193
  4248d9:	test   rdi,rdi
  4248dc:	jne    4248a0 <__flatcc_fb_build_schema@@Base+0xa0>
  4248de:	mov    rax,QWORD PTR [rbp+0x8]
  4248e2:	mov    rdx,QWORD PTR [rax+0x8]
  4248e6:	mov    rax,QWORD PTR [rax]
  4248e9:	test   rdx,rdx
  4248ec:	lea    rsi,[rdx-0x1]
  4248f0:	je     4257e2 <__flatcc_fb_build_schema@@Base+0xfe2>
  4248f6:	lea    rsi,[rax+rsi*1+0x1]
  4248fb:	nop    DWORD PTR [rax+rax*1+0x0]
  424900:	add    rax,0x1
  424904:	movzx  edx,BYTE PTR [rax-0x1]
  424908:	xor    edx,ecx
  42490a:	imul   ecx,edx,0x1000193
  424910:	cmp    rax,rsi
  424913:	jne    424900 <__flatcc_fb_build_schema@@Base+0x100>
  424915:	test   ecx,ecx
  424917:	cmove  ecx,ebx
  42491a:	test   r8,r8
  42491d:	mov    DWORD PTR [rbp+0xa0],ecx
  424923:	mov    QWORD PTR [rbp+0x20],r14
  424927:	je     424868 <__flatcc_fb_build_schema@@Base+0x68>
  42492d:	lea    rdi,[r8+0x8]
  424931:	mov    edx,0x1
  424936:	mov    rsi,rbp
  424939:	call   41b2e0 <fb_symbol_table_insert_item@@Base>
  42493e:	test   rax,rax
  424941:	je     424868 <__flatcc_fb_build_schema@@Base+0x68>
  424947:	mov    rsi,QWORD PTR [rbp+0x8]
  42494b:	mov    rcx,QWORD PTR [rax+0x8]
  42494f:	lea    rdx,[rip+0x23f85]        # 4488db <fb_schema_table_missing@@Base+0x256b>
  424956:	xor    r9d,r9d
  424959:	xor    r8d,r8d
  42495c:	mov    rdi,r15
  42495f:	call   41d580 <__flatcc_error_report@@Base>
  424964:	mov    rbp,QWORD PTR [rbp+0x0]
  424968:	test   rbp,rbp
  42496b:	jne    424875 <__flatcc_fb_build_schema@@Base+0x75>
  424971:	mov    rbx,QWORD PTR [r15+0x200]
  424978:	lea    rbp,[rip+0x23f78]        # 4488f7 <fb_schema_table_missing@@Base+0x2587>
  42497f:	test   rbx,rbx
  424982:	je     4249c4 <__flatcc_fb_build_schema@@Base+0x1c4>
  424984:	nop    DWORD PTR [rax+0x0]
  424988:	mov    rax,QWORD PTR [r15+0x260]
  42498f:	mov    edx,0x1
  424994:	mov    rsi,rbx
  424997:	lea    rdi,[rax+0x20]
  42499b:	call   42bd00 <fb_name_table_insert_item@@Base>
  4249a0:	test   rax,rax
  4249a3:	je     4249bc <__flatcc_fb_build_schema@@Base+0x1bc>
  4249a5:	mov    r9d,DWORD PTR [rbx+0x10]
  4249a9:	mov    r8,QWORD PTR [rbx+0x8]
  4249ad:	xor    ecx,ecx
  4249af:	mov    rdx,rbp
  4249b2:	xor    esi,esi
  4249b4:	mov    rdi,r15
  4249b7:	call   41d580 <__flatcc_error_report@@Base>
  4249bc:	mov    rbx,QWORD PTR [rbx]
  4249bf:	test   rbx,rbx
  4249c2:	jne    424988 <__flatcc_fb_build_schema@@Base+0x188>
  4249c4:	xor    r12d,r12d
  4249c7:	lea    rbp,[rip+0x2c3d2]        # 450da0 <fb_value_set_missing@@Base+0x6f78>
  4249ce:	jmp    424a26 <__flatcc_fb_build_schema@@Base+0x226>
  4249d0:	mov    rdi,QWORD PTR [rbp+r12*8+0x0]
  4249d5:	mov    QWORD PTR [r15+0x60],rax
  4249d9:	mov    DWORD PTR [rbx+0x20],r12d
  4249dd:	mov    QWORD PTR [rbx+0x8],rdi
  4249e1:	call   4050c0 <strlen@plt>
  4249e6:	mov    DWORD PTR [rbx+0x10],eax
  4249e9:	mov    rax,QWORD PTR [r15+0x260]
  4249f0:	mov    r9d,0x2
  4249f6:	mov    WORD PTR [rbx+0x18],r9w
  4249fb:	mov    QWORD PTR [rbx],0x0
  424a02:	mov    edx,0x1
  424a07:	mov    rsi,rbx
  424a0a:	lea    rdi,[rax+0x20]
  424a0e:	call   42bd00 <fb_name_table_insert_item@@Base>
  424a13:	test   rax,rax
  424a16:	je     424a1c <__flatcc_fb_build_schema@@Base+0x21c>
  424a18:	mov    DWORD PTR [rax+0x20],r12d
  424a1c:	add    r12,0x1
  424a20:	cmp    r12,0xc
  424a24:	je     424a6f <__flatcc_fb_build_schema@@Base+0x26f>
  424a26:	mov    rbx,QWORD PTR [r15+0x60]
  424a2a:	lea    rax,[rbx+0x30]
  424a2e:	cmp    rax,QWORD PTR [r15+0x50]
  424a32:	jbe    4249d0 <__flatcc_fb_build_schema@@Base+0x1d0>
  424a34:	mov    esi,0x1
  424a39:	mov    edi,0x10000
  424a3e:	call   405140 <calloc@plt>
  424a43:	test   rax,rax
  424a46:	je     426355 <__flatcc_fb_build_schema@@Base+0x1b55>
  424a4c:	mov    rdx,QWORD PTR [r15+0x58]
  424a50:	lea    rbx,[rax+0x10]
  424a54:	mov    QWORD PTR [r15+0x58],rax
  424a58:	mov    QWORD PTR [rax],rdx
  424a5b:	lea    rdx,[rax+0x10000]
  424a62:	add    rax,0x40
  424a66:	mov    QWORD PTR [r15+0x50],rdx
  424a6a:	jmp    4249d0 <__flatcc_fb_build_schema@@Base+0x1d0>
  424a6f:	mov    r8d,DWORD PTR [r15+0x124]
  424a76:	test   r8d,r8d
  424a79:	jne    424cb3 <__flatcc_fb_build_schema@@Base+0x4b3>
  424a7f:	mov    rbx,QWORD PTR [r15+0x238]
  424a86:	test   rbx,rbx
  424a89:	jne    424ca4 <__flatcc_fb_build_schema@@Base+0x4a4>
  424a8f:	mov    rax,QWORD PTR [r15+0x240]
  424a96:	xor    r13d,r13d
  424a99:	test   rax,rax
  424a9c:	je     4261e5 <__flatcc_fb_build_schema@@Base+0x19e5>
  424aa2:	xor    ecx,ecx
  424aa4:	jmp    424ab3 <__flatcc_fb_build_schema@@Base+0x2b3>
  424aa6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  424ab0:	mov    rax,rdx
  424ab3:	mov    rdx,QWORD PTR [rax+0xc0]
  424aba:	mov    QWORD PTR [rax+0xc0],rcx
  424ac1:	mov    rcx,rax
  424ac4:	test   rdx,rdx
  424ac7:	jne    424ab0 <__flatcc_fb_build_schema@@Base+0x2b0>
  424ac9:	test   r13,r13
  424acc:	mov    QWORD PTR [r15+0x240],rax
  424ad3:	je     424b4b <__flatcc_fb_build_schema@@Base+0x34b>
  424ad5:	lea    r11,[rsp+0x40]
  424ada:	lea    r10,[rsp+0x38]
  424adf:	xor    eax,eax
  424ae1:	mov    r8d,0x1
  424ae7:	mov    esi,0x7
  424aec:	lea    rbx,[r11+0x40]
  424af0:	cmp    WORD PTR [r13+0x10],0x0
  424af6:	jne    424b42 <__flatcc_fb_build_schema@@Base+0x342>
  424af8:	test   BYTE PTR [r13+0xa4],0x8
  424b00:	je     425cb0 <__flatcc_fb_build_schema@@Base+0x14b0>
  424b06:	mov    rdx,QWORD PTR [r13+0x28]
  424b0a:	mov    QWORD PTR [rsp+0x38],0x0
  424b13:	mov    rcx,r10
  424b16:	test   rdx,rdx
  424b19:	je     424b32 <__flatcc_fb_build_schema@@Base+0x332>
  424b1b:	nop    DWORD PTR [rax+rax*1+0x0]
  424b20:	mov    QWORD PTR [rcx],rdx
  424b23:	lea    rcx,[rdx+0x98]
  424b2a:	mov    rdx,QWORD PTR [rdx]
  424b2d:	test   rdx,rdx
  424b30:	jne    424b20 <__flatcc_fb_build_schema@@Base+0x320>
  424b32:	mov    QWORD PTR [rcx],0x0
  424b39:	mov    rdx,QWORD PTR [rsp+0x38]
  424b3e:	mov    QWORD PTR [r13+0x30],rdx
  424b42:	mov    r13,QWORD PTR [r13+0x0]
  424b46:	test   r13,r13
  424b49:	jne    424af0 <__flatcc_fb_build_schema@@Base+0x2f0>
  424b4b:	mov    rsi,QWORD PTR [r15+0x248]
  424b52:	test   rsi,rsi
  424b55:	je     4260d0 <__flatcc_fb_build_schema@@Base+0x18d0>
  424b5b:	mov    rbx,QWORD PTR [r15+0x258]
  424b62:	mov    rbp,rsi
  424b65:	xor    edx,edx
  424b67:	jmp    424b6e <__flatcc_fb_build_schema@@Base+0x36e>
  424b69:	mov    edx,ecx
  424b6b:	mov    rbp,rax
  424b6e:	mov    rax,QWORD PTR [rbp+0x0]
  424b72:	lea    ecx,[rdx+0x1]
  424b75:	test   rax,rax
  424b78:	jne    424b69 <__flatcc_fb_build_schema@@Base+0x369>
  424b7a:	test   rbx,rbx
  424b7d:	je     42604e <__flatcc_fb_build_schema@@Base+0x184e>
  424b83:	cmp    ecx,0x1
  424b86:	mov    r12d,0x1
  424b8c:	jne    42604e <__flatcc_fb_build_schema@@Base+0x184e>
  424b92:	mov    rax,QWORD PTR [rbp+0x8]
  424b96:	lea    rdi,[rbx+0x8]
  424b9a:	mov    rdx,QWORD PTR [rax+0x8]
  424b9e:	mov    rsi,QWORD PTR [rax]
  424ba1:	call   41b300 <fb_symbol_table_find@@Base>
  424ba6:	test   rax,rax
  424ba9:	mov    r13,rax
  424bac:	je     424bb9 <__flatcc_fb_build_schema@@Base+0x3b9>
  424bae:	cmp    WORD PTR [rax+0x10],0x4
  424bb3:	jbe    425e6a <__flatcc_fb_build_schema@@Base+0x166a>
  424bb9:	mov    rax,QWORD PTR [rbx]
  424bbc:	test   rax,rax
  424bbf:	je     4260af <__flatcc_fb_build_schema@@Base+0x18af>
  424bc5:	xor    edx,edx
  424bc7:	nop    WORD PTR [rax+rax*1+0x0]
  424bd0:	mov    rax,QWORD PTR [rax]
  424bd3:	add    edx,0x1
  424bd6:	test   rax,rax
  424bd9:	jne    424bd0 <__flatcc_fb_build_schema@@Base+0x3d0>
  424bdb:	mov    r13d,r12d
  424bde:	sub    r13d,edx
  424be1:	jmp    424c11 <__flatcc_fb_build_schema@@Base+0x411>
  424be3:	nop    DWORD PTR [rax+rax*1+0x0]
  424be8:	test   r14,r14
  424beb:	je     424c0d <__flatcc_fb_build_schema@@Base+0x40d>
  424bed:	mov    rdi,QWORD PTR [r15+0x260]
  424bf4:	test   rdi,rdi
  424bf7:	je     424c0d <__flatcc_fb_build_schema@@Base+0x40d>
  424bf9:	mov    rsi,QWORD PTR [rbx]
  424bfc:	movsxd rdx,r13d
  424bff:	call   41c2b0 <fb_scope_table_find@@Base>
  424c04:	test   rax,rax
  424c07:	jne    425e62 <__flatcc_fb_build_schema@@Base+0x1662>
  424c0d:	add    r13d,0x1
  424c11:	test   r13d,r13d
  424c14:	jne    424be8 <__flatcc_fb_build_schema@@Base+0x3e8>
  424c16:	test   r14,r14
  424c19:	je     424c3c <__flatcc_fb_build_schema@@Base+0x43c>
  424c1b:	mov    rdi,QWORD PTR [r15+0x260]
  424c22:	test   rdi,rdi
  424c25:	je     424c3c <__flatcc_fb_build_schema@@Base+0x43c>
  424c27:	xor    edx,edx
  424c29:	xor    esi,esi
  424c2b:	call   41c2b0 <fb_scope_table_find@@Base>
  424c30:	test   rax,rax
  424c33:	mov    rbx,rax
  424c36:	jne    424b92 <__flatcc_fb_build_schema@@Base+0x392>
  424c3c:	mov    rsi,QWORD PTR [r15+0x248]
  424c43:	mov    QWORD PTR [r15+0x250],0x0
  424c4e:	lea    rdx,[rip+0x23cd9]        # 44892e <fb_schema_table_missing@@Base+0x25be>
  424c55:	xor    ecx,ecx
  424c57:	mov    rdi,r15
  424c5a:	call   41e930 <error_ref_sym@@Base>
  424c5f:	mov    QWORD PTR [r15+0x248],0x0
  424c6a:	mov    eax,DWORD PTR [r15+0xd0]
  424c71:	xor    edx,edx
  424c73:	test   eax,eax
  424c75:	sete   dl
  424c78:	mov    DWORD PTR [r15+0xe4],edx
  424c7f:	jmp    425400 <__flatcc_fb_build_schema@@Base+0xc00>
  424c84:	mov    rsi,rbx
  424c87:	mov    rdi,r15
  424c8a:	call   421d70 <__flatcc_fb_clear_parser@@Base+0x600>
  424c8f:	test   eax,eax
  424c91:	je     424c9c <__flatcc_fb_build_schema@@Base+0x49c>
  424c93:	mov    edi,0x1
  424c98:	mov    WORD PTR [rbx+0x58],di
  424c9c:	mov    rbx,QWORD PTR [rbx]
  424c9f:	test   rbx,rbx
  424ca2:	je     424cb3 <__flatcc_fb_build_schema@@Base+0x4b3>
  424ca4:	cmp    WORD PTR [rbx+0x10],0x3
  424ca9:	je     424c84 <__flatcc_fb_build_schema@@Base+0x484>
  424cab:	mov    rbx,QWORD PTR [rbx]
  424cae:	test   rbx,rbx
  424cb1:	jne    424ca4 <__flatcc_fb_build_schema@@Base+0x4a4>
  424cb3:	mov    r13,QWORD PTR [r15+0x238]
  424cba:	test   r13,r13
  424cbd:	je     424a8f <__flatcc_fb_build_schema@@Base+0x28f>
  424cc3:	lea    rax,[rsp+0x90]
  424ccb:	mov    QWORD PTR [rsp],rax
  424ccf:	cmp    WORD PTR [r13+0x10],0x4
  424cd5:	ja     4253e0 <__flatcc_fb_build_schema@@Base+0xbe0>
  424cdb:	movzx  eax,WORD PTR [r13+0x10]
  424ce0:	lea    rbx,[rip+0x23d25]        # 448a0c <fb_schema_table_missing@@Base+0x269c>
  424ce7:	movsxd rax,DWORD PTR [rbx+rax*4]
  424ceb:	add    rax,rbx
  424cee:	jmp    rax
  424cf0:	mov    esi,DWORD PTR [r15+0x124]
  424cf7:	test   esi,esi
  424cf9:	je     424d14 <__flatcc_fb_build_schema@@Base+0x514>
  424cfb:	mov    rsi,r13
  424cfe:	mov    rdi,r15
  424d01:	call   421d70 <__flatcc_fb_clear_parser@@Base+0x600>
  424d06:	test   eax,eax
  424d08:	je     424d14 <__flatcc_fb_build_schema@@Base+0x514>
  424d0a:	mov    esi,0x1
  424d0f:	mov    WORD PTR [r13+0x58],si
  424d14:	mov    r13,QWORD PTR [r13+0x0]
  424d18:	test   r13,r13
  424d1b:	jne    424ccf <__flatcc_fb_build_schema@@Base+0x4cf>
  424d1d:	mov    rbx,QWORD PTR [r15+0x238]
  424d24:	test   rbx,rbx
  424d27:	je     4261d5 <__flatcc_fb_build_schema@@Base+0x19d5>
  424d2d:	cmp    WORD PTR [rbx+0x10],0x1
  424d32:	jne    424d53 <__flatcc_fb_build_schema@@Base+0x553>
  424d34:	cmp    WORD PTR [rbx+0x58],0x1
  424d39:	je     424d53 <__flatcc_fb_build_schema@@Base+0x553>
  424d3b:	mov    rsi,rbx
  424d3e:	mov    rdi,r15
  424d41:	call   4218c0 <__flatcc_fb_clear_parser@@Base+0x150>
  424d46:	test   eax,eax
  424d48:	je     424d53 <__flatcc_fb_build_schema@@Base+0x553>
  424d4a:	mov    ecx,0x1
  424d4f:	mov    WORD PTR [rbx+0x58],cx
  424d53:	mov    rbx,QWORD PTR [rbx]
  424d56:	test   rbx,rbx
  424d59:	jne    424d2d <__flatcc_fb_build_schema@@Base+0x52d>
  424d5b:	mov    rax,QWORD PTR [r15+0x238]
  424d62:	test   rax,rax
  424d65:	mov    QWORD PTR [rsp],rax
  424d69:	je     4261d5 <__flatcc_fb_build_schema@@Base+0x19d5>
  424d6f:	lea    rax,[rsp+0x90]
  424d77:	mov    QWORD PTR [rsp+0x18],rax
  424d7c:	mov    rax,QWORD PTR [rsp]
  424d80:	movzx  eax,WORD PTR [rax+0x10]
  424d84:	test   ax,ax
  424d87:	je     425898 <__flatcc_fb_build_schema@@Base+0x1098>
  424d8d:	cmp    ax,0x2
  424d91:	jne    424fa2 <__flatcc_fb_build_schema@@Base+0x7a2>
  424d97:	mov    rax,QWORD PTR [rsp]
  424d9b:	movzx  eax,WORD PTR [rax+0x58]
  424d9f:	cmp    ax,0x1
  424da3:	je     424fa2 <__flatcc_fb_build_schema@@Base+0x7a2>
  424da9:	test   ax,ax
  424dac:	jne    42637c <__flatcc_fb_build_schema@@Base+0x1b7c>
  424db2:	mov    rax,QWORD PTR [rsp]
  424db6:	cmp    QWORD PTR [rax+0x38],0x0
  424dbb:	je     424dd8 <__flatcc_fb_build_schema@@Base+0x5d8>
  424dbd:	mov    rsi,QWORD PTR [rax+0x8]
  424dc1:	lea    rdx,[rip+0x23768]        # 448530 <fb_schema_table_missing@@Base+0x21c0>
  424dc8:	xor    r9d,r9d
  424dcb:	xor    r8d,r8d
  424dce:	xor    ecx,ecx
  424dd0:	mov    rdi,r15
  424dd3:	call   41d580 <__flatcc_error_report@@Base>
  424dd8:	mov    rax,QWORD PTR [rsp]
  424ddc:	mov    rbp,QWORD PTR [rax+0x28]
  424de0:	test   rbp,rbp
  424de3:	je     424fa2 <__flatcc_fb_build_schema@@Base+0x7a2>
  424de9:	add    rax,0x60
  424ded:	mov    QWORD PTR [rsp+0x8],rax
  424df2:	jmp    424e22 <__flatcc_fb_build_schema@@Base+0x622>
  424df4:	nop    DWORD PTR [rax+0x0]
  424df8:	mov    rcx,QWORD PTR [rax+0x8]
  424dfc:	mov    rsi,QWORD PTR [rbp+0x8]
  424e00:	lea    rdx,[rip+0x23751]        # 448558 <fb_schema_table_missing@@Base+0x21e8>
  424e07:	xor    r9d,r9d
  424e0a:	xor    r8d,r8d
  424e0d:	mov    rdi,r15
  424e10:	call   41d580 <__flatcc_error_report@@Base>
  424e15:	mov    rbp,QWORD PTR [rbp+0x0]
  424e19:	test   rbp,rbp
  424e1c:	je     424fa2 <__flatcc_fb_build_schema@@Base+0x7a2>
  424e22:	mov    rdi,QWORD PTR [rsp+0x8]
  424e27:	mov    edx,0x1
  424e2c:	mov    rsi,rbp
  424e2f:	call   41b2e0 <fb_symbol_table_insert_item@@Base>
  424e34:	test   rax,rax
  424e37:	jne    424df8 <__flatcc_fb_build_schema@@Base+0x5f8>
  424e39:	cmp    WORD PTR [rbp+0x10],0x5
  424e3e:	jne    425ee0 <__flatcc_fb_build_schema@@Base+0x16e0>
  424e44:	cmp    WORD PTR [rbp+0x58],0x0
  424e49:	jne    425aea <__flatcc_fb_build_schema@@Base+0x12ea>
  424e4f:	movzx  eax,WORD PTR [rbp+0x28]
  424e53:	cmp    ax,0x1
  424e57:	je     424e15 <__flatcc_fb_build_schema@@Base+0x615>
  424e59:	cmp    ax,0xc
  424e5d:	je     424e7a <__flatcc_fb_build_schema@@Base+0x67a>
  424e5f:	mov    rsi,QWORD PTR [rbp+0x8]
  424e63:	lea    rdx,[rip+0x2374e]        # 4485b8 <fb_schema_table_missing@@Base+0x2248>
  424e6a:	xor    r9d,r9d
  424e6d:	xor    r8d,r8d
  424e70:	xor    ecx,ecx
  424e72:	mov    rdi,r15
  424e75:	call   41d580 <__flatcc_error_report@@Base>
  424e7a:	mov    rsi,QWORD PTR [rbp+0x30]
  424e7e:	mov    rax,QWORD PTR [rsp]
  424e82:	test   rsi,rsi
  424e85:	mov    rbx,QWORD PTR [rax+0x18]
  424e89:	je     424f78 <__flatcc_fb_build_schema@@Base+0x778>
  424e8f:	mov    r12,rsi
  424e92:	xor    edx,edx
  424e94:	jmp    424ea5 <__flatcc_fb_build_schema@@Base+0x6a5>
  424e96:	nop    WORD PTR cs:[rax+rax*1+0x0]
  424ea0:	mov    edx,ecx
  424ea2:	mov    r12,rax
  424ea5:	mov    rax,QWORD PTR [r12]
  424ea9:	lea    ecx,[rdx+0x1]
  424eac:	test   rax,rax
  424eaf:	jne    424ea0 <__flatcc_fb_build_schema@@Base+0x6a0>
  424eb1:	test   rbx,rbx
  424eb4:	je     4258e0 <__flatcc_fb_build_schema@@Base+0x10e0>
  424eba:	cmp    ecx,0x1
  424ebd:	jne    4258e0 <__flatcc_fb_build_schema@@Base+0x10e0>
  424ec3:	nop    DWORD PTR [rax+rax*1+0x0]
  424ec8:	mov    rax,QWORD PTR [r12+0x8]
  424ecd:	lea    rdi,[rbx+0x8]
  424ed1:	mov    rdx,QWORD PTR [rax+0x8]
  424ed5:	mov    rsi,QWORD PTR [rax]
  424ed8:	call   41b300 <fb_symbol_table_find@@Base>
  424edd:	test   rax,rax
  424ee0:	mov    r13,rax
  424ee3:	je     424ef0 <__flatcc_fb_build_schema@@Base+0x6f0>
  424ee5:	cmp    WORD PTR [rax+0x10],0x4
  424eea:	jbe    425840 <__flatcc_fb_build_schema@@Base+0x1040>
  424ef0:	mov    rax,QWORD PTR [rbx]
  424ef3:	test   rax,rax
  424ef6:	je     424f74 <__flatcc_fb_build_schema@@Base+0x774>
  424ef8:	xor    edx,edx
  424efa:	nop    WORD PTR [rax+rax*1+0x0]
  424f00:	mov    rax,QWORD PTR [rax]
  424f03:	add    edx,0x1
  424f06:	test   rax,rax
  424f09:	jne    424f00 <__flatcc_fb_build_schema@@Base+0x700>
  424f0b:	mov    r13d,0x1
  424f11:	sub    r13d,edx
  424f14:	jmp    424f49 <__flatcc_fb_build_schema@@Base+0x749>
  424f16:	nop    WORD PTR cs:[rax+rax*1+0x0]
  424f20:	test   r14,r14
  424f23:	je     424f45 <__flatcc_fb_build_schema@@Base+0x745>
  424f25:	mov    rdi,QWORD PTR [r15+0x260]
  424f2c:	test   rdi,rdi
  424f2f:	je     424f45 <__flatcc_fb_build_schema@@Base+0x745>
  424f31:	mov    rsi,QWORD PTR [rbx]
  424f34:	movsxd rdx,r13d
  424f37:	call   41c2b0 <fb_scope_table_find@@Base>
  424f3c:	test   rax,rax
  424f3f:	jne    425890 <__flatcc_fb_build_schema@@Base+0x1090>
  424f45:	add    r13d,0x1
  424f49:	test   r13d,r13d
  424f4c:	jne    424f20 <__flatcc_fb_build_schema@@Base+0x720>
  424f4e:	test   r14,r14
  424f51:	je     424f74 <__flatcc_fb_build_schema@@Base+0x774>
  424f53:	mov    rdi,QWORD PTR [r15+0x260]
  424f5a:	test   rdi,rdi
  424f5d:	je     424f74 <__flatcc_fb_build_schema@@Base+0x774>
  424f5f:	xor    edx,edx
  424f61:	xor    esi,esi
  424f63:	call   41c2b0 <fb_scope_table_find@@Base>
  424f68:	test   rax,rax
  424f6b:	mov    rbx,rax
  424f6e:	jne    424ec8 <__flatcc_fb_build_schema@@Base+0x6c8>
  424f74:	mov    rsi,QWORD PTR [rbp+0x30]
  424f78:	lea    rdx,[rip+0x23679]        # 4485f8 <fb_schema_table_missing@@Base+0x2288>
  424f7f:	mov    rcx,rbp
  424f82:	mov    rdi,r15
  424f85:	mov    r12d,0x1
  424f8b:	call   41e930 <error_ref_sym@@Base>
  424f90:	mov    WORD PTR [rbp+0x28],r12w
  424f95:	mov    rbp,QWORD PTR [rbp+0x0]
  424f99:	test   rbp,rbp
  424f9c:	jne    424e22 <__flatcc_fb_build_schema@@Base+0x622>
  424fa2:	mov    rax,QWORD PTR [rsp]
  424fa6:	mov    rax,QWORD PTR [rax]
  424fa9:	test   rax,rax
  424fac:	mov    QWORD PTR [rsp],rax
  424fb0:	jne    424d7c <__flatcc_fb_build_schema@@Base+0x57c>
  424fb6:	mov    rax,QWORD PTR [r15+0x240]
  424fbd:	mov    r13,QWORD PTR [r15+0x238]
  424fc4:	test   rax,rax
  424fc7:	jne    424aa2 <__flatcc_fb_build_schema@@Base+0x2a2>
  424fcd:	jmp    424ac9 <__flatcc_fb_build_schema@@Base+0x2c9>
  424fd2:	nop    WORD PTR [rax+rax*1+0x0]
  424fd8:	cmp    WORD PTR [r13+0x58],0x0
  424fde:	jne    4261b5 <__flatcc_fb_build_schema@@Base+0x19b5>
  424fe4:	mov    r12,QWORD PTR [r13+0x38]
  424fe8:	mov    rdi,QWORD PTR [rsp]
  424fec:	xor    eax,eax
  424fee:	mov    ecx,0xc
  424ff3:	xor    ebp,ebp
  424ff5:	mov    ebx,0x64
  424ffa:	test   r12,r12
  424ffd:	rep stos QWORD PTR es:[rdi],rax
  425000:	jne    42505a <__flatcc_fb_build_schema@@Base+0x85a>
  425002:	jmp    426135 <__flatcc_fb_build_schema@@Base+0x1935>
  425007:	nop    WORD PTR [rax+rax*1+0x0]
  425010:	mov    rsi,QWORD PTR [rsp]
  425014:	mov    edx,0x1
  425019:	shlx   edx,edx,eax
  42501e:	or     ebp,edx
  425020:	lea    rdx,[rsi+rax*8]
  425024:	cmp    QWORD PTR [rdx],0x0
  425028:	je     425429 <__flatcc_fb_build_schema@@Base+0xc29>
  42502e:	mov    rsi,QWORD PTR [r12+0x8]
  425033:	lea    rdx,[rip+0x225c6]        # 447600 <fb_schema_table_missing@@Base+0x1290>
  42503a:	xor    r9d,r9d
  42503d:	xor    r8d,r8d
  425040:	xor    ecx,ecx
  425042:	mov    rdi,r15
  425045:	call   41d580 <__flatcc_error_report@@Base>
  42504a:	mov    r12,QWORD PTR [r12]
  42504e:	sub    ebx,0x1
  425051:	test   r12,r12
  425054:	je     4250b3 <__flatcc_fb_build_schema@@Base+0x8b3>
  425056:	test   ebx,ebx
  425058:	je     4250b3 <__flatcc_fb_build_schema@@Base+0x8b3>
  42505a:	mov    rax,QWORD PTR [r12+0x8]
  42505f:	mov    rsi,QWORD PTR [r15+0x260]
  425066:	mov    rdx,QWORD PTR [rax+0x8]
  42506a:	lea    rdi,[rsi+0x20]
  42506e:	mov    rsi,QWORD PTR [rax]
  425071:	call   42bd20 <fb_name_table_find@@Base>
  425076:	test   rax,rax
  425079:	je     4255e0 <__flatcc_fb_build_schema@@Base+0xde0>
  42507f:	movsxd rax,DWORD PTR [rax+0x20]
  425083:	test   eax,eax
  425085:	je     42504a <__flatcc_fb_build_schema@@Base+0x84a>
  425087:	cmp    al,0x4
  425089:	je     425010 <__flatcc_fb_build_schema@@Base+0x810>
  42508b:	mov    rsi,QWORD PTR [r12+0x8]
  425090:	lea    rdx,[rip+0x22539]        # 4475d0 <fb_schema_table_missing@@Base+0x1260>
  425097:	xor    r9d,r9d
  42509a:	xor    r8d,r8d
  42509d:	xor    ecx,ecx
  42509f:	mov    rdi,r15
  4250a2:	sub    ebx,0x1
  4250a5:	call   41d580 <__flatcc_error_report@@Base>
  4250aa:	mov    r12,QWORD PTR [r12]
  4250ae:	test   r12,r12
  4250b1:	jne    425056 <__flatcc_fb_build_schema@@Base+0x856>
  4250b3:	test   r12,r12
  4250b6:	je     4250d4 <__flatcc_fb_build_schema@@Base+0x8d4>
  4250b8:	mov    rsi,QWORD PTR [r12+0x8]
  4250bd:	lea    rdx,[rip+0x236ff]        # 4487c3 <fb_schema_table_missing@@Base+0x2453>
  4250c4:	xor    r9d,r9d
  4250c7:	xor    r8d,r8d
  4250ca:	xor    ecx,ecx
  4250cc:	mov    rdi,r15
  4250cf:	call   41d580 <__flatcc_error_report@@Base>
  4250d4:	mov    rax,QWORD PTR [rsp+0xb0]
  4250dc:	mov    WORD PTR [r13+0xa4],bp
  4250e4:	test   rax,rax
  4250e7:	je     425118 <__flatcc_fb_build_schema@@Base+0x918>
  4250e9:	mov    rdx,QWORD PTR [rax+0x10]
  4250ed:	lea    rax,[rdx-0x1]
  4250f1:	cmp    rax,0xff
  4250f7:	jbe    42565d <__flatcc_fb_build_schema@@Base+0xe5d>
  4250fd:	mov    rsi,QWORD PTR [r13+0x8]
  425101:	lea    rdx,[rip+0x235f8]        # 448700 <fb_schema_table_missing@@Base+0x2390>
  425108:	xor    r9d,r9d
  42510b:	xor    r8d,r8d
  42510e:	xor    ecx,ecx
  425110:	mov    rdi,r15
  425113:	call   41d580 <__flatcc_error_report@@Base>
  425118:	mov    rbp,QWORD PTR [r13+0x28]
  42511c:	test   rbp,rbp
  42511f:	je     424d14 <__flatcc_fb_build_schema@@Base+0x514>
  425125:	lea    rax,[r13+0x60]
  425129:	mov    DWORD PTR [rsp+0x2c],0x0
  425131:	mov    QWORD PTR [rsp+0x18],r13
  425136:	mov    QWORD PTR [rsp+0x8],rax
  42513b:	jmp    42516a <__flatcc_fb_build_schema@@Base+0x96a>
  42513d:	nop    DWORD PTR [rax]
  425140:	mov    rcx,QWORD PTR [rax+0x8]
  425144:	mov    rsi,QWORD PTR [rbp+0x8]
  425148:	lea    rdx,[rip+0x231f1]        # 448340 <fb_schema_table_missing@@Base+0x1fd0>
  42514f:	xor    r9d,r9d
  425152:	xor    r8d,r8d
  425155:	mov    rdi,r15
  425158:	call   41d580 <__flatcc_error_report@@Base>
  42515d:	mov    rbp,QWORD PTR [rbp+0x0]
  425161:	test   rbp,rbp
  425164:	je     425588 <__flatcc_fb_build_schema@@Base+0xd88>
  42516a:	mov    rdi,QWORD PTR [rsp+0x8]
  42516f:	mov    edx,0x1
  425174:	mov    rsi,rbp
  425177:	call   41b2e0 <fb_symbol_table_insert_item@@Base>
  42517c:	test   rax,rax
  42517f:	jne    425140 <__flatcc_fb_build_schema@@Base+0x940>
  425181:	cmp    WORD PTR [rbp+0x10],0x5
  425186:	jne    426190 <__flatcc_fb_build_schema@@Base+0x1990>
  42518c:	mov    r13d,DWORD PTR [r15+0x118]
  425193:	xor    r12d,r12d
  425196:	mov    ecx,DWORD PTR [r15+0x114]
  42519d:	mov    rdi,QWORD PTR [rsp]
  4251a1:	test   r13d,r13d
  4251a4:	setne  r12b
  4251a8:	shl    r12d,0x7
  4251ac:	mov    edx,r12d
  4251af:	or     edx,0x4
  4251b2:	test   ecx,ecx
  4251b4:	mov    ecx,0xc
  4251b9:	cmovne r12d,edx
  4251bd:	movzx  ebx,r12w
  4251c1:	mov    r12,QWORD PTR [rbp+0x60]
  4251c5:	mov    esi,ebx
  4251c7:	rep stos QWORD PTR es:[rdi],rax
  4251ca:	test   r12,r12
  4251cd:	je     425f8e <__flatcc_fb_build_schema@@Base+0x178e>
  4251d3:	mov    QWORD PTR [rsp+0x20],rbp
  4251d8:	xor    r13d,r13d
  4251db:	mov    ebx,0x64
  4251e0:	mov    ebp,esi
  4251e2:	jmp    425233 <__flatcc_fb_build_schema@@Base+0xa33>
  4251e4:	nop    DWORD PTR [rax+0x0]
  4251e8:	mov    rsi,QWORD PTR [rsp]
  4251ec:	mov    edx,0x1
  4251f1:	shlx   edx,edx,eax
  4251f6:	or     r13d,edx
  4251f9:	lea    rdx,[rsi+rax*8]
  4251fd:	cmp    QWORD PTR [rdx],0x0
  425201:	je     425480 <__flatcc_fb_build_schema@@Base+0xc80>
  425207:	mov    rsi,QWORD PTR [r12+0x8]
  42520c:	lea    rdx,[rip+0x223ed]        # 447600 <fb_schema_table_missing@@Base+0x1290>
  425213:	xor    r9d,r9d
  425216:	xor    r8d,r8d
  425219:	xor    ecx,ecx
  42521b:	mov    rdi,r15
  42521e:	call   41d580 <__flatcc_error_report@@Base>
  425223:	mov    r12,QWORD PTR [r12]
  425227:	sub    ebx,0x1
  42522a:	test   r12,r12
  42522d:	je     42528d <__flatcc_fb_build_schema@@Base+0xa8d>
  42522f:	test   ebx,ebx
  425231:	je     42528d <__flatcc_fb_build_schema@@Base+0xa8d>
  425233:	mov    rax,QWORD PTR [r12+0x8]
  425238:	mov    rsi,QWORD PTR [r15+0x260]
  42523f:	mov    rdx,QWORD PTR [rax+0x8]
  425243:	lea    rdi,[rsi+0x20]
  425247:	mov    rsi,QWORD PTR [rax]
  42524a:	call   42bd20 <fb_name_table_find@@Base>
  42524f:	test   rax,rax
  425252:	je     4254bf <__flatcc_fb_build_schema@@Base+0xcbf>
  425258:	movsxd rax,DWORD PTR [rax+0x20]
  42525c:	test   eax,eax
  42525e:	je     425223 <__flatcc_fb_build_schema@@Base+0xa23>
  425260:	bt     ebp,eax
  425263:	jb     4251e8 <__flatcc_fb_build_schema@@Base+0x9e8>
  425265:	mov    rsi,QWORD PTR [r12+0x8]
  42526a:	lea    rdx,[rip+0x2235f]        # 4475d0 <fb_schema_table_missing@@Base+0x1260>
  425271:	xor    r9d,r9d
  425274:	xor    r8d,r8d
  425277:	xor    ecx,ecx
  425279:	mov    rdi,r15
  42527c:	sub    ebx,0x1
  42527f:	call   41d580 <__flatcc_error_report@@Base>
  425284:	mov    r12,QWORD PTR [r12]
  425288:	test   r12,r12
  42528b:	jne    42522f <__flatcc_fb_build_schema@@Base+0xa2f>
  42528d:	test   r12,r12
  425290:	mov    rbp,QWORD PTR [rsp+0x20]
  425295:	je     4252b3 <__flatcc_fb_build_schema@@Base+0xab3>
  425297:	mov    rsi,QWORD PTR [r12+0x8]
  42529c:	lea    rdx,[rip+0x23520]        # 4487c3 <fb_schema_table_missing@@Base+0x2453>
  4252a3:	xor    r9d,r9d
  4252a6:	xor    r8d,r8d
  4252a9:	xor    ecx,ecx
  4252ab:	mov    rdi,r15
  4252ae:	call   41d580 <__flatcc_error_report@@Base>
  4252b3:	movzx  eax,WORD PTR [rbp+0x28]
  4252b7:	mov    WORD PTR [rbp+0x70],r13w
  4252bc:	cmp    ax,0x8
  4252c0:	je     425545 <__flatcc_fb_build_schema@@Base+0xd45>
  4252c6:	cmp    ax,0xc
  4252ca:	jne    425520 <__flatcc_fb_build_schema@@Base+0xd20>
  4252d0:	mov    rsi,QWORD PTR [rbp+0x18]
  4252d4:	mov    rax,QWORD PTR [rsp+0x18]
  4252d9:	test   rsi,rsi
  4252dc:	mov    rbx,QWORD PTR [rax+0x18]
  4252e0:	je     4253b8 <__flatcc_fb_build_schema@@Base+0xbb8>
  4252e6:	mov    r12,rsi
  4252e9:	xor    edx,edx
  4252eb:	jmp    4252f5 <__flatcc_fb_build_schema@@Base+0xaf5>
  4252ed:	nop    DWORD PTR [rax]
  4252f0:	mov    edx,ecx
  4252f2:	mov    r12,rax
  4252f5:	mov    rax,QWORD PTR [r12]
  4252f9:	lea    ecx,[rdx+0x1]
  4252fc:	test   rax,rax
  4252ff:	jne    4252f0 <__flatcc_fb_build_schema@@Base+0xaf0>
  425301:	test   rbx,rbx
  425304:	je     425688 <__flatcc_fb_build_schema@@Base+0xe88>
  42530a:	cmp    ecx,0x1
  42530d:	jne    425688 <__flatcc_fb_build_schema@@Base+0xe88>
  425313:	mov    rax,QWORD PTR [r12+0x8]
  425318:	lea    rdi,[rbx+0x8]
  42531c:	mov    rdx,QWORD PTR [rax+0x8]
  425320:	mov    rsi,QWORD PTR [rax]
  425323:	call   41b300 <fb_symbol_table_find@@Base>
  425328:	test   rax,rax
  42532b:	mov    r13,rax
  42532e:	je     42533b <__flatcc_fb_build_schema@@Base+0xb3b>
  425330:	cmp    WORD PTR [rax+0x10],0x4
  425335:	jbe    425710 <__flatcc_fb_build_schema@@Base+0xf10>
  42533b:	mov    rax,QWORD PTR [rbx]
  42533e:	test   rax,rax
  425341:	je     4253b4 <__flatcc_fb_build_schema@@Base+0xbb4>
  425343:	xor    edx,edx
  425345:	nop    DWORD PTR [rax]
  425348:	mov    rax,QWORD PTR [rax]
  42534b:	add    edx,0x1
  42534e:	test   rax,rax
  425351:	jne    425348 <__flatcc_fb_build_schema@@Base+0xb48>
  425353:	mov    r13d,0x1
  425359:	sub    r13d,edx
  42535c:	jmp    425389 <__flatcc_fb_build_schema@@Base+0xb89>
  42535e:	xchg   ax,ax
  425360:	test   r14,r14
  425363:	je     425385 <__flatcc_fb_build_schema@@Base+0xb85>
  425365:	mov    rdi,QWORD PTR [r15+0x260]
  42536c:	test   rdi,rdi
  42536f:	je     425385 <__flatcc_fb_build_schema@@Base+0xb85>
  425371:	mov    rsi,QWORD PTR [rbx]
  425374:	movsxd rdx,r13d
  425377:	call   41c2b0 <fb_scope_table_find@@Base>
  42537c:	test   rax,rax
  42537f:	jne    425782 <__flatcc_fb_build_schema@@Base+0xf82>
  425385:	add    r13d,0x1
  425389:	test   r13d,r13d
  42538c:	jne    425360 <__flatcc_fb_build_schema@@Base+0xb60>
  42538e:	test   r14,r14
  425391:	je     4253b4 <__flatcc_fb_build_schema@@Base+0xbb4>
  425393:	mov    rdi,QWORD PTR [r15+0x260]
  42539a:	test   rdi,rdi
  42539d:	je     4253b4 <__flatcc_fb_build_schema@@Base+0xbb4>
  42539f:	xor    edx,edx
  4253a1:	xor    esi,esi
  4253a3:	call   41c2b0 <fb_scope_table_find@@Base>
  4253a8:	test   rax,rax
  4253ab:	mov    rbx,rax
  4253ae:	jne    425313 <__flatcc_fb_build_schema@@Base+0xb13>
  4253b4:	mov    rsi,QWORD PTR [rbp+0x18]
  4253b8:	lea    rdx,[rip+0x22fd1]        # 448390 <fb_schema_table_missing@@Base+0x2020>
  4253bf:	mov    rcx,rbp
  4253c2:	mov    rdi,r15
  4253c5:	mov    r12d,0x1
  4253cb:	call   41e930 <error_ref_sym@@Base>
  4253d0:	mov    WORD PTR [rbp+0x28],r12w
  4253d5:	jmp    42515d <__flatcc_fb_build_schema@@Base+0x95d>
  4253da:	nop    WORD PTR [rax+rax*1+0x0]
  4253e0:	mov    rsi,QWORD PTR [r13+0x8]
  4253e4:	lea    rdx,[rip+0x2310d]        # 4484f8 <fb_schema_table_missing@@Base+0x2188>
  4253eb:	xor    r9d,r9d
  4253ee:	xor    r8d,r8d
  4253f1:	xor    ecx,ecx
  4253f3:	mov    rdi,r15
  4253f6:	call   41d580 <__flatcc_error_report@@Base>
  4253fb:	mov    eax,0xffffffff
  425400:	mov    rbx,QWORD PTR [rsp+0xf8]
  425408:	xor    rbx,QWORD PTR fs:0x28
  425411:	jne    426319 <__flatcc_fb_build_schema@@Base+0x1b19>
  425417:	add    rsp,0x108
  42541e:	pop    rbx
  42541f:	pop    rbp
  425420:	pop    r12
  425422:	pop    r13
  425424:	pop    r14
  425426:	pop    r15
  425428:	ret    
  425429:	lea    rsi,[rip+0x23750]        # 448b80 <fb_schema_table_missing@@Base+0x2810>
  425430:	mov    QWORD PTR [rdx],r12
  425433:	mov    eax,DWORD PTR [rsi+rax*4]
  425436:	test   eax,eax
  425438:	je     42562f <__flatcc_fb_build_schema@@Base+0xe2f>
  42543e:	cmp    eax,0x2
  425441:	je     425f23 <__flatcc_fb_build_schema@@Base+0x1723>
  425447:	cmp    eax,0x5
  42544a:	jne    4257fd <__flatcc_fb_build_schema@@Base+0xffd>
  425450:	cmp    WORD PTR [r12+0x20],0x5
  425457:	je     42504a <__flatcc_fb_build_schema@@Base+0x84a>
  42545d:	mov    rsi,QWORD PTR [r12+0x8]
  425462:	lea    rdx,[rip+0x2220f]        # 447678 <fb_schema_table_missing@@Base+0x1308>
  425469:	xor    r9d,r9d
  42546c:	xor    r8d,r8d
  42546f:	xor    ecx,ecx
  425471:	mov    rdi,r15
  425474:	call   41d580 <__flatcc_error_report@@Base>
  425479:	jmp    42504a <__flatcc_fb_build_schema@@Base+0x84a>
  42547e:	xchg   ax,ax
  425480:	lea    rsi,[rip+0x236f9]        # 448b80 <fb_schema_table_missing@@Base+0x2810>
  425487:	mov    QWORD PTR [rdx],r12
  42548a:	mov    eax,DWORD PTR [rsi+rax*4]
  42548d:	test   eax,eax
  42548f:	jne    4254e0 <__flatcc_fb_build_schema@@Base+0xce0>
  425491:	cmp    WORD PTR [r12+0x20],0x0
  425498:	je     425223 <__flatcc_fb_build_schema@@Base+0xa23>
  42549e:	mov    rsi,QWORD PTR [r12+0x8]
  4254a3:	lea    rdx,[rip+0x2217e]        # 447628 <fb_schema_table_missing@@Base+0x12b8>
  4254aa:	xor    r9d,r9d
  4254ad:	xor    r8d,r8d
  4254b0:	xor    ecx,ecx
  4254b2:	mov    rdi,r15
  4254b5:	call   41d580 <__flatcc_error_report@@Base>
  4254ba:	jmp    425223 <__flatcc_fb_build_schema@@Base+0xa23>
  4254bf:	mov    rsi,QWORD PTR [r12+0x8]
  4254c4:	lea    rdx,[rip+0x220e5]        # 4475b0 <fb_schema_table_missing@@Base+0x1240>
  4254cb:	xor    r9d,r9d
  4254ce:	xor    r8d,r8d
  4254d1:	xor    ecx,ecx
  4254d3:	mov    rdi,r15
  4254d6:	call   41d580 <__flatcc_error_report@@Base>
  4254db:	jmp    425223 <__flatcc_fb_build_schema@@Base+0xa23>
  4254e0:	cmp    eax,0x2
  4254e3:	je     425601 <__flatcc_fb_build_schema@@Base+0xe01>
  4254e9:	cmp    eax,0x5
  4254ec:	jne    425fe8 <__flatcc_fb_build_schema@@Base+0x17e8>
  4254f2:	cmp    WORD PTR [r12+0x20],0x5
  4254f9:	je     425223 <__flatcc_fb_build_schema@@Base+0xa23>
  4254ff:	mov    rsi,QWORD PTR [r12+0x8]
  425504:	lea    rdx,[rip+0x2216d]        # 447678 <fb_schema_table_missing@@Base+0x1308>
  42550b:	xor    r9d,r9d
  42550e:	xor    r8d,r8d
  425511:	xor    ecx,ecx
  425513:	mov    rdi,r15
  425516:	call   41d580 <__flatcc_error_report@@Base>
  42551b:	jmp    425223 <__flatcc_fb_build_schema@@Base+0xa23>
  425520:	mov    rsi,QWORD PTR [rbp+0x8]
  425524:	lea    rdx,[rip+0x22f55]        # 448480 <fb_schema_table_missing@@Base+0x2110>
  42552b:	xor    r9d,r9d
  42552e:	xor    r8d,r8d
  425531:	xor    ecx,ecx
  425533:	mov    rdi,r15
  425536:	mov    r13,QWORD PTR [rsp+0x18]
  42553b:	call   41d580 <__flatcc_error_report@@Base>
  425540:	jmp    424d0a <__flatcc_fb_build_schema@@Base+0x50a>
  425545:	and    r13w,0x80
  42554b:	cmp    r13w,0x1
  425550:	sbb    DWORD PTR [rsp+0x2c],0xffffffff
  425555:	cmp    WORD PTR [rbp+0x58],0x0
  42555a:	je     42515d <__flatcc_fb_build_schema@@Base+0x95d>
  425560:	mov    rsi,QWORD PTR [rbp+0x8]
  425564:	lea    rdx,[rip+0x22f55]        # 4484c0 <fb_schema_table_missing@@Base+0x2150>
  42556b:	xor    r9d,r9d
  42556e:	xor    r8d,r8d
  425571:	xor    ecx,ecx
  425573:	mov    rdi,r15
  425576:	call   41d580 <__flatcc_error_report@@Base>
  42557b:	mov    rbp,QWORD PTR [rbp+0x0]
  42557f:	test   rbp,rbp
  425582:	jne    42516a <__flatcc_fb_build_schema@@Base+0x96a>
  425588:	mov    eax,DWORD PTR [rsp+0x2c]
  42558c:	mov    r13,QWORD PTR [rsp+0x18]
  425591:	test   eax,eax
  425593:	je     424d14 <__flatcc_fb_build_schema@@Base+0x514>
  425599:	or     WORD PTR [r13+0x12],0x8
  42559f:	cmp    eax,0x1
  4255a2:	je     424d14 <__flatcc_fb_build_schema@@Base+0x514>
  4255a8:	mov    edi,DWORD PTR [r15+0x108]
  4255af:	test   edi,edi
  4255b1:	jne    424d14 <__flatcc_fb_build_schema@@Base+0x514>
  4255b7:	mov    rsi,QWORD PTR [r13+0x8]
  4255bb:	lea    rdx,[rip+0x22cd6]        # 448298 <fb_schema_table_missing@@Base+0x1f28>
  4255c2:	xor    r9d,r9d
  4255c5:	xor    r8d,r8d
  4255c8:	xor    ecx,ecx
  4255ca:	mov    rdi,r15
  4255cd:	call   41d580 <__flatcc_error_report@@Base>
  4255d2:	jmp    424d0a <__flatcc_fb_build_schema@@Base+0x50a>
  4255d7:	nop    WORD PTR [rax+rax*1+0x0]
  4255e0:	mov    rsi,QWORD PTR [r12+0x8]
  4255e5:	lea    rdx,[rip+0x21fc4]        # 4475b0 <fb_schema_table_missing@@Base+0x1240>
  4255ec:	xor    r9d,r9d
  4255ef:	xor    r8d,r8d
  4255f2:	xor    ecx,ecx
  4255f4:	mov    rdi,r15
  4255f7:	call   41d580 <__flatcc_error_report@@Base>
  4255fc:	jmp    42504a <__flatcc_fb_build_schema@@Base+0x84a>
  425601:	cmp    WORD PTR [r12+0x20],0x2
  425608:	je     425223 <__flatcc_fb_build_schema@@Base+0xa23>
  42560e:	mov    rsi,QWORD PTR [r12+0x8]
  425613:	lea    rdx,[rip+0x22036]        # 447650 <fb_schema_table_missing@@Base+0x12e0>
  42561a:	xor    r9d,r9d
  42561d:	xor    r8d,r8d
  425620:	xor    ecx,ecx
  425622:	mov    rdi,r15
  425625:	call   41d580 <__flatcc_error_report@@Base>
  42562a:	jmp    425223 <__flatcc_fb_build_schema@@Base+0xa23>
  42562f:	cmp    WORD PTR [r12+0x20],0x0
  425636:	je     42504a <__flatcc_fb_build_schema@@Base+0x84a>
  42563c:	mov    rsi,QWORD PTR [r12+0x8]
  425641:	lea    rdx,[rip+0x21fe0]        # 447628 <fb_schema_table_missing@@Base+0x12b8>
  425648:	xor    r9d,r9d
  42564b:	xor    r8d,r8d
  42564e:	xor    ecx,ecx
  425650:	mov    rdi,r15
  425653:	call   41d580 <__flatcc_error_report@@Base>
  425658:	jmp    42504a <__flatcc_fb_build_schema@@Base+0x84a>
  42565d:	cmp    rdx,0x1
  425661:	je     42567b <__flatcc_fb_build_schema@@Base+0xe7b>
  425663:	mov    eax,0x2
  425668:	jmp    425676 <__flatcc_fb_build_schema@@Base+0xe76>
  42566a:	add    rax,rax
  42566d:	cmp    rdx,rax
  425670:	jb     4250fd <__flatcc_fb_build_schema@@Base+0x8fd>
  425676:	cmp    rdx,rax
  425679:	jne    42566a <__flatcc_fb_build_schema@@Base+0xe6a>
  42567b:	mov    WORD PTR [r13+0xb0],dx
  425683:	jmp    425118 <__flatcc_fb_build_schema@@Base+0x918>
  425688:	cmp    ecx,0x1
  42568b:	cmovne rax,rsi
  42568f:	test   r14,r14
  425692:	je     4253b8 <__flatcc_fb_build_schema@@Base+0xbb8>
  425698:	mov    rdi,QWORD PTR [r15+0x260]
  42569f:	test   rdi,rdi
  4256a2:	je     4253b8 <__flatcc_fb_build_schema@@Base+0xbb8>
  4256a8:	neg    edx
  4256aa:	mov    rsi,rax
  4256ad:	movsxd rdx,edx
  4256b0:	call   41c2b0 <fb_scope_table_find@@Base>
  4256b5:	test   rax,rax
  4256b8:	je     4253b4 <__flatcc_fb_build_schema@@Base+0xbb4>
  4256be:	mov    rcx,QWORD PTR [r12+0x8]
  4256c3:	lea    rdi,[rax+0x8]
  4256c7:	mov    rdx,QWORD PTR [rcx+0x8]
  4256cb:	mov    rsi,QWORD PTR [rcx]
  4256ce:	call   41b300 <fb_symbol_table_find@@Base>
  4256d3:	test   rax,rax
  4256d6:	je     4253b4 <__flatcc_fb_build_schema@@Base+0xbb4>
  4256dc:	cmp    WORD PTR [rax+0x10],0x4
  4256e1:	ja     4253b4 <__flatcc_fb_build_schema@@Base+0xbb4>
  4256e7:	mov    rsi,QWORD PTR [rax+0x20]
  4256eb:	mov    rdi,QWORD PTR [rsp+0x10]
  4256f0:	mov    QWORD PTR [rsp+0x20],rax
  4256f5:	call   41aba0 <ptr_set_find_item@@Base>
  4256fa:	test   rax,rax
  4256fd:	mov    rdx,QWORD PTR [rsp+0x20]
  425702:	jne    42572a <__flatcc_fb_build_schema@@Base+0xf2a>
  425704:	jmp    4253b4 <__flatcc_fb_build_schema@@Base+0xbb4>
  425709:	nop    DWORD PTR [rax+0x0]
  425710:	mov    rsi,QWORD PTR [rax+0x20]
  425714:	mov    rdi,QWORD PTR [rsp+0x10]
  425719:	call   41aba0 <ptr_set_find_item@@Base>
  42571e:	test   rax,rax
  425721:	je     42533b <__flatcc_fb_build_schema@@Base+0xb3b>
  425727:	mov    rdx,r13
  42572a:	mov    QWORD PTR [rbp+0x18],rdx
  42572e:	movzx  eax,WORD PTR [rdx+0x10]
  425732:	mov    ecx,0xe
  425737:	mov    WORD PTR [rbp+0x28],cx
  42573b:	cmp    ax,0x1
  42573f:	je     425fa7 <__flatcc_fb_build_schema@@Base+0x17a7>
  425745:	mov    ebx,DWORD PTR [r15+0x104]
  42574c:	test   ebx,ebx
  42574e:	je     42625e <__flatcc_fb_build_schema@@Base+0x1a5e>
  425754:	cmp    ax,0x3
  425758:	jne    42622c <__flatcc_fb_build_schema@@Base+0x1a2c>
  42575e:	test   BYTE PTR [rbp+0x70],0x80
  425762:	je     425555 <__flatcc_fb_build_schema@@Base+0xd55>
  425768:	mov    r10d,DWORD PTR [r15+0x100]
  42576f:	test   r10d,r10d
  425772:	je     425fb1 <__flatcc_fb_build_schema@@Base+0x17b1>
  425778:	add    DWORD PTR [rsp+0x2c],0x1
  42577d:	jmp    425555 <__flatcc_fb_build_schema@@Base+0xd55>
  425782:	mov    rbx,rax
  425785:	jmp    425313 <__flatcc_fb_build_schema@@Base+0xb13>
  42578a:	mov    rax,QWORD PTR [rbp+0x8]
  42578e:	mov    ecx,0x811c9dc5
  425793:	mov    rdx,QWORD PTR [rax+0x8]
  425797:	mov    rax,QWORD PTR [rax]
  42579a:	test   rdx,rdx
  42579d:	lea    rsi,[rdx-0x1]
  4257a1:	jne    4248f6 <__flatcc_fb_build_schema@@Base+0xf6>
  4257a7:	mov    DWORD PTR [rbp+0xa0],ecx
  4257ad:	mov    QWORD PTR [rbp+0x20],r14
  4257b1:	jmp    424868 <__flatcc_fb_build_schema@@Base+0x68>
  4257b6:	mov    rax,QWORD PTR [rbp+0x8]
  4257ba:	mov    ecx,0x811c9dc5
  4257bf:	mov    rdx,QWORD PTR [rax+0x8]
  4257c3:	mov    rax,QWORD PTR [rax]
  4257c6:	test   rdx,rdx
  4257c9:	lea    rsi,[rdx-0x1]
  4257cd:	jne    4248f6 <__flatcc_fb_build_schema@@Base+0xf6>
  4257d3:	mov    DWORD PTR [rbp+0xa0],ecx
  4257d9:	mov    QWORD PTR [rbp+0x20],r14
  4257dd:	jmp    42492d <__flatcc_fb_build_schema@@Base+0x12d>
  4257e2:	test   ecx,ecx
  4257e4:	jne    42491a <__flatcc_fb_build_schema@@Base+0x11a>
  4257ea:	mov    DWORD PTR [rbp+0xa0],0x811c9dc5
  4257f4:	mov    QWORD PTR [rbp+0x20],r14
  4257f8:	jmp    42492d <__flatcc_fb_build_schema@@Base+0x12d>
  4257fd:	cmp    eax,0x4
  425800:	jne    4261f5 <__flatcc_fb_build_schema@@Base+0x19f5>
  425806:	movzx  eax,WORD PTR [r12+0x20]
  42580c:	sub    eax,0x4
  42580f:	cmp    ax,0x1
  425813:	jbe    42504a <__flatcc_fb_build_schema@@Base+0x84a>
  425819:	mov    rsi,QWORD PTR [r12+0x8]
  42581e:	lea    rdx,[rip+0x21e83]        # 4476a8 <fb_schema_table_missing@@Base+0x1338>
  425825:	xor    r9d,r9d
  425828:	xor    r8d,r8d
  42582b:	xor    ecx,ecx
  42582d:	mov    rdi,r15
  425830:	call   41d580 <__flatcc_error_report@@Base>
  425835:	jmp    42504a <__flatcc_fb_build_schema@@Base+0x84a>
  42583a:	nop    WORD PTR [rax+rax*1+0x0]
  425840:	mov    rsi,QWORD PTR [rax+0x20]
  425844:	mov    rdi,QWORD PTR [rsp+0x10]
  425849:	call   41aba0 <ptr_set_find_item@@Base>
  42584e:	test   rax,rax
  425851:	je     424ef0 <__flatcc_fb_build_schema@@Base+0x6f0>
  425857:	mov    rdx,r13
  42585a:	cmp    WORD PTR [rdx+0x10],0x0
  42585f:	je     42596b <__flatcc_fb_build_schema@@Base+0x116b>
  425865:	mov    rcx,QWORD PTR [rdx+0x8]
  425869:	mov    rsi,QWORD PTR [rbp+0x8]
  42586d:	lea    rdx,[rip+0x22dbc]        # 448630 <fb_schema_table_missing@@Base+0x22c0>
  425874:	xor    r9d,r9d
  425877:	xor    r8d,r8d
  42587a:	mov    rdi,r15
  42587d:	mov    ebx,0x1
  425882:	call   41d580 <__flatcc_error_report@@Base>
  425887:	mov    WORD PTR [rbp+0x28],bx
  42588b:	jmp    424e15 <__flatcc_fb_build_schema@@Base+0x615>
  425890:	mov    rbx,rax
  425893:	jmp    424ec8 <__flatcc_fb_build_schema@@Base+0x6c8>
  425898:	mov    rbx,QWORD PTR [rsp]
  42589c:	cmp    WORD PTR [rbx+0x58],0x1
  4258a1:	je     424fa2 <__flatcc_fb_build_schema@@Base+0x7a2>
  4258a7:	mov    rsi,rbx
  4258aa:	mov    rdi,r15
  4258ad:	call   422a60 <__flatcc_fb_clear_parser@@Base+0x12f0>
  4258b2:	test   eax,eax
  4258b4:	je     424fa2 <__flatcc_fb_build_schema@@Base+0x7a2>
  4258ba:	mov    rax,QWORD PTR [rsp]
  4258be:	mov    edx,0x1
  4258c3:	mov    WORD PTR [rbx+0x58],dx
  4258c7:	mov    rax,QWORD PTR [rax]
  4258ca:	test   rax,rax
  4258cd:	mov    QWORD PTR [rsp],rax
  4258d1:	jne    424d7c <__flatcc_fb_build_schema@@Base+0x57c>
  4258d7:	jmp    424fb6 <__flatcc_fb_build_schema@@Base+0x7b6>
  4258dc:	nop    DWORD PTR [rax+0x0]
  4258e0:	cmp    ecx,0x1
  4258e3:	cmovne rax,rsi
  4258e7:	test   r14,r14
  4258ea:	je     424f78 <__flatcc_fb_build_schema@@Base+0x778>
  4258f0:	mov    rdi,QWORD PTR [r15+0x260]
  4258f7:	test   rdi,rdi
  4258fa:	je     424f78 <__flatcc_fb_build_schema@@Base+0x778>
  425900:	neg    edx
  425902:	mov    rsi,rax
  425905:	movsxd rdx,edx
  425908:	call   41c2b0 <fb_scope_table_find@@Base>
  42590d:	test   rax,rax
  425910:	je     424f74 <__flatcc_fb_build_schema@@Base+0x774>
  425916:	mov    rcx,QWORD PTR [r12+0x8]
  42591b:	lea    rdi,[rax+0x8]
  42591f:	mov    rdx,QWORD PTR [rcx+0x8]
  425923:	mov    rsi,QWORD PTR [rcx]
  425926:	call   41b300 <fb_symbol_table_find@@Base>
  42592b:	test   rax,rax
  42592e:	je     424f74 <__flatcc_fb_build_schema@@Base+0x774>
  425934:	cmp    WORD PTR [rax+0x10],0x4
  425939:	ja     424f74 <__flatcc_fb_build_schema@@Base+0x774>
  42593f:	mov    rsi,QWORD PTR [rax+0x20]
  425943:	mov    rdi,QWORD PTR [rsp+0x10]
  425948:	mov    QWORD PTR [rsp+0x20],rax
  42594d:	call   41aba0 <ptr_set_find_item@@Base>
  425952:	test   rax,rax
  425955:	mov    rdx,QWORD PTR [rsp+0x20]
  42595a:	je     424f74 <__flatcc_fb_build_schema@@Base+0x774>
  425960:	cmp    WORD PTR [rdx+0x10],0x0
  425965:	jne    425865 <__flatcc_fb_build_schema@@Base+0x1065>
  42596b:	mov    rsi,QWORD PTR [rbp+0x18]
  42596f:	mov    rax,QWORD PTR [rsp]
  425973:	mov    r11d,0xe
  425979:	mov    QWORD PTR [rbp+0x30],rdx
  42597d:	mov    WORD PTR [rbp+0x40],r11w
  425982:	test   rsi,rsi
  425985:	mov    rbx,QWORD PTR [rax+0x18]
  425989:	je     425a68 <__flatcc_fb_build_schema@@Base+0x1268>
  42598f:	mov    r12,rsi
  425992:	xor    edx,edx
  425994:	jmp    4259a5 <__flatcc_fb_build_schema@@Base+0x11a5>
  425996:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4259a0:	mov    edx,ecx
  4259a2:	mov    r12,rax
  4259a5:	mov    rax,QWORD PTR [r12]
  4259a9:	lea    ecx,[rdx+0x1]
  4259ac:	test   rax,rax
  4259af:	jne    4259a0 <__flatcc_fb_build_schema@@Base+0x11a0>
  4259b1:	test   rbx,rbx
  4259b4:	je     425b0a <__flatcc_fb_build_schema@@Base+0x130a>
  4259ba:	cmp    ecx,0x1
  4259bd:	jne    425b0a <__flatcc_fb_build_schema@@Base+0x130a>
  4259c3:	mov    rax,QWORD PTR [r12+0x8]
  4259c8:	lea    rdi,[rbx+0x8]
  4259cc:	mov    rdx,QWORD PTR [rax+0x8]
  4259d0:	mov    rsi,QWORD PTR [rax]
  4259d3:	call   41b300 <fb_symbol_table_find@@Base>
  4259d8:	test   rax,rax
  4259db:	mov    r13,rax
  4259de:	je     4259eb <__flatcc_fb_build_schema@@Base+0x11eb>
  4259e0:	cmp    WORD PTR [rax+0x10],0x4
  4259e5:	jbe    425a90 <__flatcc_fb_build_schema@@Base+0x1290>
  4259eb:	mov    rax,QWORD PTR [rbx]
  4259ee:	test   rax,rax
  4259f1:	je     425a64 <__flatcc_fb_build_schema@@Base+0x1264>
  4259f3:	xor    edx,edx
  4259f5:	nop    DWORD PTR [rax]
  4259f8:	mov    rax,QWORD PTR [rax]
  4259fb:	add    edx,0x1
  4259fe:	test   rax,rax
  425a01:	jne    4259f8 <__flatcc_fb_build_schema@@Base+0x11f8>
  425a03:	mov    r13d,0x1
  425a09:	sub    r13d,edx
  425a0c:	jmp    425a39 <__flatcc_fb_build_schema@@Base+0x1239>
  425a0e:	xchg   ax,ax
  425a10:	test   r14,r14
  425a13:	je     425a35 <__flatcc_fb_build_schema@@Base+0x1235>
  425a15:	mov    rdi,QWORD PTR [r15+0x260]
  425a1c:	test   rdi,rdi
  425a1f:	je     425a35 <__flatcc_fb_build_schema@@Base+0x1235>
  425a21:	mov    rsi,QWORD PTR [rbx]
  425a24:	movsxd rdx,r13d
  425a27:	call   41c2b0 <fb_scope_table_find@@Base>
  425a2c:	test   rax,rax
  425a2f:	jne    425ae2 <__flatcc_fb_build_schema@@Base+0x12e2>
  425a35:	add    r13d,0x1
  425a39:	test   r13d,r13d
  425a3c:	jne    425a10 <__flatcc_fb_build_schema@@Base+0x1210>
  425a3e:	test   r14,r14
  425a41:	je     425a64 <__flatcc_fb_build_schema@@Base+0x1264>
  425a43:	mov    rdi,QWORD PTR [r15+0x260]
  425a4a:	test   rdi,rdi
  425a4d:	je     425a64 <__flatcc_fb_build_schema@@Base+0x1264>
  425a4f:	xor    edx,edx
  425a51:	xor    esi,esi
  425a53:	call   41c2b0 <fb_scope_table_find@@Base>
  425a58:	test   rax,rax
  425a5b:	mov    rbx,rax
  425a5e:	jne    4259c3 <__flatcc_fb_build_schema@@Base+0x11c3>
  425a64:	mov    rsi,QWORD PTR [rbp+0x18]
  425a68:	lea    rdx,[rip+0x22bf9]        # 448668 <fb_schema_table_missing@@Base+0x22f8>
  425a6f:	mov    rcx,rbp
  425a72:	mov    rdi,r15
  425a75:	call   41e930 <error_ref_sym@@Base>
  425a7a:	mov    r10d,0x1
  425a80:	mov    WORD PTR [rbp+0x28],r10w
  425a85:	jmp    424e15 <__flatcc_fb_build_schema@@Base+0x615>
  425a8a:	nop    WORD PTR [rax+rax*1+0x0]
  425a90:	mov    rsi,QWORD PTR [rax+0x20]
  425a94:	mov    rdi,QWORD PTR [rsp+0x10]
  425a99:	call   41aba0 <ptr_set_find_item@@Base>
  425a9e:	test   rax,rax
  425aa1:	je     4259eb <__flatcc_fb_build_schema@@Base+0x11eb>
  425aa7:	mov    rdx,r13
  425aaa:	cmp    WORD PTR [rdx+0x10],0x0
  425aaf:	je     425b95 <__flatcc_fb_build_schema@@Base+0x1395>
  425ab5:	mov    rcx,QWORD PTR [rdx+0x8]
  425ab9:	mov    rsi,QWORD PTR [rbp+0x8]
  425abd:	lea    rdx,[rip+0x22bdc]        # 4486a0 <fb_schema_table_missing@@Base+0x2330>
  425ac4:	xor    r9d,r9d
  425ac7:	xor    r8d,r8d
  425aca:	mov    rdi,r15
  425acd:	call   41d580 <__flatcc_error_report@@Base>
  425ad2:	mov    r9d,0x1
  425ad8:	mov    WORD PTR [rbp+0x28],r9w
  425add:	jmp    424e15 <__flatcc_fb_build_schema@@Base+0x615>
  425ae2:	mov    rbx,rax
  425ae5:	jmp    4259c3 <__flatcc_fb_build_schema@@Base+0x11c3>
  425aea:	mov    rsi,QWORD PTR [rbp+0x8]
  425aee:	lea    rdx,[rip+0x22a83]        # 448578 <fb_schema_table_missing@@Base+0x2208>
  425af5:	xor    r9d,r9d
  425af8:	xor    r8d,r8d
  425afb:	xor    ecx,ecx
  425afd:	mov    rdi,r15
  425b00:	call   41d580 <__flatcc_error_report@@Base>
  425b05:	jmp    424e4f <__flatcc_fb_build_schema@@Base+0x64f>
  425b0a:	cmp    ecx,0x1
  425b0d:	cmovne rax,rsi
  425b11:	test   r14,r14
  425b14:	je     425a68 <__flatcc_fb_build_schema@@Base+0x1268>
  425b1a:	mov    rdi,QWORD PTR [r15+0x260]
  425b21:	test   rdi,rdi
  425b24:	je     425a68 <__flatcc_fb_build_schema@@Base+0x1268>
  425b2a:	neg    edx
  425b2c:	mov    rsi,rax
  425b2f:	movsxd rdx,edx
  425b32:	call   41c2b0 <fb_scope_table_find@@Base>
  425b37:	test   rax,rax
  425b3a:	je     425a64 <__flatcc_fb_build_schema@@Base+0x1264>
  425b40:	mov    rcx,QWORD PTR [r12+0x8]
  425b45:	lea    rdi,[rax+0x8]
  425b49:	mov    rdx,QWORD PTR [rcx+0x8]
  425b4d:	mov    rsi,QWORD PTR [rcx]
  425b50:	call   41b300 <fb_symbol_table_find@@Base>
  425b55:	test   rax,rax
  425b58:	je     425a64 <__flatcc_fb_build_schema@@Base+0x1264>
  425b5e:	cmp    WORD PTR [rax+0x10],0x4
  425b63:	ja     425a64 <__flatcc_fb_build_schema@@Base+0x1264>
  425b69:	mov    rsi,QWORD PTR [rax+0x20]
  425b6d:	mov    rdi,QWORD PTR [rsp+0x10]
  425b72:	mov    QWORD PTR [rsp+0x20],rax
  425b77:	call   41aba0 <ptr_set_find_item@@Base>
  425b7c:	test   rax,rax
  425b7f:	mov    rdx,QWORD PTR [rsp+0x20]
  425b84:	je     425a64 <__flatcc_fb_build_schema@@Base+0x1264>
  425b8a:	cmp    WORD PTR [rdx+0x10],0x0
  425b8f:	jne    425ab5 <__flatcc_fb_build_schema@@Base+0x12b5>
  425b95:	mov    r13,QWORD PTR [rbp+0x60]
  425b99:	mov    rdi,QWORD PTR [rsp+0x18]
  425b9e:	xor    eax,eax
  425ba0:	mov    r8d,0xe
  425ba6:	mov    ecx,0xc
  425bab:	xor    r12d,r12d
  425bae:	mov    WORD PTR [rbp+0x28],r8w
  425bb3:	mov    QWORD PTR [rbp+0x18],rdx
  425bb7:	test   r13,r13
  425bba:	mov    QWORD PTR [rbp+0x80],0x0
  425bc5:	rep stos QWORD PTR es:[rdi],rax
  425bc8:	je     425ca6 <__flatcc_fb_build_schema@@Base+0x14a6>
  425bce:	mov    rax,r13
  425bd1:	mov    ebx,0x64
  425bd6:	mov    r13,rbp
  425bd9:	mov    rbp,rax
  425bdc:	jmp    425c29 <__flatcc_fb_build_schema@@Base+0x1429>
  425bde:	mov    rsi,QWORD PTR [rsp+0x18]
  425be3:	mov    edx,0x1
  425be8:	shlx   edx,edx,eax
  425bed:	or     r12d,edx
  425bf0:	lea    rdx,[rsi+rax*8]
  425bf4:	cmp    QWORD PTR [rdx],0x0
  425bf8:	je     425e22 <__flatcc_fb_build_schema@@Base+0x1622>
  425bfe:	mov    rsi,QWORD PTR [rbp+0x8]
  425c02:	lea    rdx,[rip+0x219f7]        # 447600 <fb_schema_table_missing@@Base+0x1290>
  425c09:	xor    r9d,r9d
  425c0c:	xor    r8d,r8d
  425c0f:	xor    ecx,ecx
  425c11:	mov    rdi,r15
  425c14:	call   41d580 <__flatcc_error_report@@Base>
  425c19:	mov    rbp,QWORD PTR [rbp+0x0]
  425c1d:	sub    ebx,0x1
  425c20:	test   rbp,rbp
  425c23:	je     425c80 <__flatcc_fb_build_schema@@Base+0x1480>
  425c25:	test   ebx,ebx
  425c27:	je     425c80 <__flatcc_fb_build_schema@@Base+0x1480>
  425c29:	mov    rax,QWORD PTR [rbp+0x8]
  425c2d:	mov    rsi,QWORD PTR [r15+0x260]
  425c34:	mov    rdx,QWORD PTR [rax+0x8]
  425c38:	lea    rdi,[rsi+0x20]
  425c3c:	mov    rsi,QWORD PTR [rax]
  425c3f:	call   42bd20 <fb_name_table_find@@Base>
  425c44:	test   rax,rax
  425c47:	je     425ec0 <__flatcc_fb_build_schema@@Base+0x16c0>
  425c4d:	movsxd rax,DWORD PTR [rax+0x20]
  425c51:	test   eax,eax
  425c53:	je     425c19 <__flatcc_fb_build_schema@@Base+0x1419>
  425c55:	cmp    al,0x2
  425c57:	je     425bde <__flatcc_fb_build_schema@@Base+0x13de>
  425c59:	mov    rsi,QWORD PTR [rbp+0x8]
  425c5d:	lea    rdx,[rip+0x2196c]        # 4475d0 <fb_schema_table_missing@@Base+0x1260>
  425c64:	xor    r9d,r9d
  425c67:	xor    r8d,r8d
  425c6a:	xor    ecx,ecx
  425c6c:	mov    rdi,r15
  425c6f:	sub    ebx,0x1
  425c72:	call   41d580 <__flatcc_error_report@@Base>
  425c77:	mov    rbp,QWORD PTR [rbp+0x0]
  425c7b:	test   rbp,rbp
  425c7e:	jne    425c25 <__flatcc_fb_build_schema@@Base+0x1425>
  425c80:	mov    rax,rbp
  425c83:	mov    rbp,r13
  425c86:	test   rax,rax
  425c89:	je     425ca6 <__flatcc_fb_build_schema@@Base+0x14a6>
  425c8b:	mov    rsi,QWORD PTR [rax+0x8]
  425c8f:	lea    rdx,[rip+0x22b2d]        # 4487c3 <fb_schema_table_missing@@Base+0x2453>
  425c96:	xor    r9d,r9d
  425c99:	xor    r8d,r8d
  425c9c:	xor    ecx,ecx
  425c9e:	mov    rdi,r15
  425ca1:	call   41d580 <__flatcc_error_report@@Base>
  425ca6:	mov    WORD PTR [rbp+0x70],r12w
  425cab:	jmp    424e15 <__flatcc_fb_build_schema@@Base+0x615>
  425cb0:	mov    r9,QWORD PTR [r13+0x28]
  425cb4:	mov    ecx,0x9
  425cb9:	mov    rdi,r11
  425cbc:	rep stos QWORD PTR es:[rdi],rax
  425cbf:	lea    rdi,[rsp+0x90]
  425cc7:	mov    ecx,0x9
  425ccc:	test   r9,r9
  425ccf:	rep stos QWORD PTR es:[rdi],rax
  425cd2:	je     4263ba <__flatcc_fb_build_schema@@Base+0x1bba>
  425cd8:	mov    rdi,r9
  425cdb:	nop    DWORD PTR [rax+rax*1+0x0]
  425ce0:	movzx  ecx,WORD PTR [rdi+0x28]
  425ce4:	movzx  edx,WORD PTR [rdi+0x72]
  425ce8:	cmp    cx,0xf
  425cec:	ja     425d38 <__flatcc_fb_build_schema@@Base+0x1538>
  425cee:	shlx   rcx,r8,rcx
  425cf3:	test   ecx,0x8680
  425cf9:	jne    425d30 <__flatcc_fb_build_schema@@Base+0x1530>
  425cfb:	test   cl,0x2
  425cfe:	jne    4260fd <__flatcc_fb_build_schema@@Base+0x18fd>
  425d04:	and    ch,0x40
  425d07:	je     425d38 <__flatcc_fb_build_schema@@Base+0x1538>
  425d09:	mov    rcx,QWORD PTR [rdi+0x18]
  425d0d:	movzx  edx,WORD PTR [rcx+0x10]
  425d11:	cmp    dx,0x3
  425d15:	je     425e16 <__flatcc_fb_build_schema@@Base+0x1616>
  425d1b:	cmp    dx,0x4
  425d1f:	je     425d30 <__flatcc_fb_build_schema@@Base+0x1530>
  425d21:	cmp    dx,0x1
  425d25:	je     425e16 <__flatcc_fb_build_schema@@Base+0x1616>
  425d2b:	nop    DWORD PTR [rax+rax*1+0x0]
  425d30:	movzx  edx,WORD PTR [r15+0x12c]
  425d38:	test   dx,dx
  425d3b:	je     42639b <__flatcc_fb_build_schema@@Base+0x1b9b>
  425d41:	xor    ecx,ecx
  425d43:	shr    dx,1
  425d46:	je     425e0f <__flatcc_fb_build_schema@@Base+0x160f>
  425d4c:	nop    DWORD PTR [rax+0x0]
  425d50:	add    ecx,0x1
  425d53:	shr    dx,1
  425d56:	jne    425d50 <__flatcc_fb_build_schema@@Base+0x1550>
  425d58:	cmp    cx,0x7
  425d5c:	cmova  ecx,esi
  425d5f:	movzx  edx,cx
  425d62:	movsxd rdx,edx
  425d65:	cmp    QWORD PTR [rsp+rdx*8+0x40],0x0
  425d6b:	je     425e05 <__flatcc_fb_build_schema@@Base+0x1605>
  425d71:	mov    rcx,QWORD PTR [rsp+rdx*8+0x90]
  425d79:	mov    QWORD PTR [rcx],rdi
  425d7c:	lea    rcx,[rdi+0x98]
  425d83:	mov    rdi,QWORD PTR [rdi]
  425d86:	mov    QWORD PTR [rsp+rdx*8+0x90],rcx
  425d8e:	test   rdi,rdi
  425d91:	jne    425ce0 <__flatcc_fb_build_schema@@Base+0x14e0>
  425d97:	mov    r9,QWORD PTR [rsp+0x78]
  425d9c:	mov    QWORD PTR [rsp+0xd0],rbx
  425da4:	mov    rdi,rbx
  425da7:	mov    edx,0x8
  425dac:	jmp    425dbd <__flatcc_fb_build_schema@@Base+0x15bd>
  425dae:	xchg   ax,ax
  425db0:	sub    edx,0x2
  425db3:	movzx  edx,dx
  425db6:	mov    r9,QWORD PTR [rsp+rdx*8+0x40]
  425dbb:	mov    edx,ecx
  425dbd:	test   r9,r9
  425dc0:	lea    ecx,[rdx-0x1]
  425dc3:	jne    425de3 <__flatcc_fb_build_schema@@Base+0x15e3>
  425dc5:	test   cx,cx
  425dc8:	jne    425db0 <__flatcc_fb_build_schema@@Base+0x15b0>
  425dca:	mov    rdx,QWORD PTR [rsp+0x40]
  425dcf:	mov    QWORD PTR [rdi],rdx
  425dd2:	mov    rdx,QWORD PTR [rsp+0x80]
  425dda:	mov    QWORD PTR [r13+0x30],rdx
  425dde:	jmp    424b42 <__flatcc_fb_build_schema@@Base+0x342>
  425de3:	test   cx,cx
  425de6:	mov    QWORD PTR [rdi],r9
  425de9:	je     425dd2 <__flatcc_fb_build_schema@@Base+0x15d2>
  425deb:	sub    edx,0x2
  425dee:	movzx  edi,cx
  425df1:	movzx  edx,dx
  425df4:	mov    rdi,QWORD PTR [rsp+rdi*8+0x90]
  425dfc:	mov    r9,QWORD PTR [rsp+rdx*8+0x40]
  425e01:	mov    edx,ecx
  425e03:	jmp    425dbd <__flatcc_fb_build_schema@@Base+0x15bd>
  425e05:	mov    QWORD PTR [rsp+rdx*8+0x40],rdi
  425e0a:	jmp    425d7c <__flatcc_fb_build_schema@@Base+0x157c>
  425e0f:	xor    edx,edx
  425e11:	jmp    425d62 <__flatcc_fb_build_schema@@Base+0x1562>
  425e16:	movzx  edx,WORD PTR [rcx+0xb0]
  425e1d:	jmp    425d38 <__flatcc_fb_build_schema@@Base+0x1538>
  425e22:	lea    rsi,[rip+0x22d57]        # 448b80 <fb_schema_table_missing@@Base+0x2810>
  425e29:	mov    QWORD PTR [rdx],rbp
  425e2c:	mov    eax,DWORD PTR [rsi+rax*4]
  425e2f:	test   eax,eax
  425e31:	jne    425f51 <__flatcc_fb_build_schema@@Base+0x1751>
  425e37:	cmp    WORD PTR [rbp+0x20],0x0
  425e3c:	je     425c19 <__flatcc_fb_build_schema@@Base+0x1419>
  425e42:	mov    rsi,QWORD PTR [rbp+0x8]
  425e46:	lea    rdx,[rip+0x217db]        # 447628 <fb_schema_table_missing@@Base+0x12b8>
  425e4d:	xor    r9d,r9d
  425e50:	xor    r8d,r8d
  425e53:	xor    ecx,ecx
  425e55:	mov    rdi,r15
  425e58:	call   41d580 <__flatcc_error_report@@Base>
  425e5d:	jmp    425c19 <__flatcc_fb_build_schema@@Base+0x1419>
  425e62:	mov    rbx,rax
  425e65:	jmp    424b92 <__flatcc_fb_build_schema@@Base+0x392>
  425e6a:	mov    rsi,QWORD PTR [rax+0x20]
  425e6e:	mov    rdi,QWORD PTR [rsp+0x10]
  425e73:	call   41aba0 <ptr_set_find_item@@Base>
  425e78:	test   rax,rax
  425e7b:	je     424bb9 <__flatcc_fb_build_schema@@Base+0x3b9>
  425e81:	mov    edx,DWORD PTR [r15+0x11c]
  425e88:	mov    QWORD PTR [r15+0x250],r13
  425e8f:	test   edx,edx
  425e91:	je     426025 <__flatcc_fb_build_schema@@Base+0x1825>
  425e97:	cmp    WORD PTR [r13+0x10],0x1
  425e9d:	jbe    424c5f <__flatcc_fb_build_schema@@Base+0x45f>
  425ea3:	mov    rsi,QWORD PTR [r15+0x248]
  425eaa:	lea    rdx,[rip+0x22827]        # 4486d8 <fb_schema_table_missing@@Base+0x2368>
  425eb1:	xor    ecx,ecx
  425eb3:	mov    rdi,r15
  425eb6:	call   41e930 <error_ref_sym@@Base>
  425ebb:	jmp    424c5f <__flatcc_fb_build_schema@@Base+0x45f>
  425ec0:	mov    rsi,QWORD PTR [rbp+0x8]
  425ec4:	lea    rdx,[rip+0x216e5]        # 4475b0 <fb_schema_table_missing@@Base+0x1240>
  425ecb:	xor    r9d,r9d
  425ece:	xor    r8d,r8d
  425ed1:	xor    ecx,ecx
  425ed3:	mov    rdi,r15
  425ed6:	call   41d580 <__flatcc_error_report@@Base>
  425edb:	jmp    425c19 <__flatcc_fb_build_schema@@Base+0x1419>
  425ee0:	mov    rsi,QWORD PTR [rbp+0x8]
  425ee4:	lea    rdx,[rip+0x21d4d]        # 447c38 <fb_schema_table_missing@@Base+0x18c8>
  425eeb:	xor    r9d,r9d
  425eee:	xor    r8d,r8d
  425ef1:	xor    ecx,ecx
  425ef3:	mov    rdi,r15
  425ef6:	mov    r13d,0x1
  425efc:	call   41d580 <__flatcc_error_report@@Base>
  425f01:	mov    rax,QWORD PTR [rsp]
  425f05:	mov    WORD PTR [rax+0x58],r13w
  425f0a:	mov    rax,QWORD PTR [rsp]
  425f0e:	mov    rax,QWORD PTR [rax]
  425f11:	test   rax,rax
  425f14:	mov    QWORD PTR [rsp],rax
  425f18:	jne    424d7c <__flatcc_fb_build_schema@@Base+0x57c>
  425f1e:	jmp    424fb6 <__flatcc_fb_build_schema@@Base+0x7b6>
  425f23:	cmp    WORD PTR [r12+0x20],0x2
  425f2a:	je     42504a <__flatcc_fb_build_schema@@Base+0x84a>
  425f30:	mov    rsi,QWORD PTR [r12+0x8]
  425f35:	lea    rdx,[rip+0x21714]        # 447650 <fb_schema_table_missing@@Base+0x12e0>
  425f3c:	xor    r9d,r9d
  425f3f:	xor    r8d,r8d
  425f42:	xor    ecx,ecx
  425f44:	mov    rdi,r15
  425f47:	call   41d580 <__flatcc_error_report@@Base>
  425f4c:	jmp    42504a <__flatcc_fb_build_schema@@Base+0x84a>
  425f51:	cmp    eax,0x2
  425f54:	je     426144 <__flatcc_fb_build_schema@@Base+0x1944>
  425f5a:	cmp    eax,0x5
  425f5d:	jne    426290 <__flatcc_fb_build_schema@@Base+0x1a90>
  425f63:	cmp    WORD PTR [rbp+0x20],0x5
  425f68:	je     425c19 <__flatcc_fb_build_schema@@Base+0x1419>
  425f6e:	mov    rsi,QWORD PTR [rbp+0x8]
  425f72:	lea    rdx,[rip+0x216ff]        # 447678 <fb_schema_table_missing@@Base+0x1308>
  425f79:	xor    r9d,r9d
  425f7c:	xor    r8d,r8d
  425f7f:	xor    ecx,ecx
  425f81:	mov    rdi,r15
  425f84:	call   41d580 <__flatcc_error_report@@Base>
  425f89:	jmp    425c19 <__flatcc_fb_build_schema@@Base+0x1419>
  425f8e:	xor    eax,eax
  425f90:	mov    WORD PTR [rbp+0x70],ax
  425f94:	movzx  eax,WORD PTR [rbp+0x28]
  425f98:	cmp    ax,0x8
  425f9c:	jne    4252c6 <__flatcc_fb_build_schema@@Base+0xac6>
  425fa2:	jmp    425555 <__flatcc_fb_build_schema@@Base+0xd55>
  425fa7:	test   BYTE PTR [rbp+0x70],0x80
  425fab:	je     425555 <__flatcc_fb_build_schema@@Base+0xd55>
  425fb1:	mov    rsi,QWORD PTR [rbp+0x8]
  425fb5:	lea    rdx,[rip+0x2244c]        # 448408 <fb_schema_table_missing@@Base+0x2098>
  425fbc:	xor    r8d,r8d
  425fbf:	xor    r9d,r9d
  425fc2:	xor    ecx,ecx
  425fc4:	mov    rdi,r15
  425fc7:	mov    r13,QWORD PTR [rsp+0x18]
  425fcc:	call   41d580 <__flatcc_error_report@@Base>
  425fd1:	mov    r8d,0x1
  425fd7:	mov    WORD PTR [rbp+0x28],r8w
  425fdc:	jmp    424d0a <__flatcc_fb_build_schema@@Base+0x50a>
  425fe1:	nop    DWORD PTR [rax+0x0]
  425fe8:	cmp    eax,0x4
  425feb:	jne    42631e <__flatcc_fb_build_schema@@Base+0x1b1e>
  425ff1:	movzx  eax,WORD PTR [r12+0x20]
  425ff7:	sub    eax,0x4
  425ffa:	cmp    ax,0x1
  425ffe:	jbe    425223 <__flatcc_fb_build_schema@@Base+0xa23>
  426004:	mov    rsi,QWORD PTR [r12+0x8]
  426009:	lea    rdx,[rip+0x21698]        # 4476a8 <fb_schema_table_missing@@Base+0x1338>
  426010:	xor    r9d,r9d
  426013:	xor    r8d,r8d
  426016:	xor    ecx,ecx
  426018:	mov    rdi,r15
  42601b:	call   41d580 <__flatcc_error_report@@Base>
  426020:	jmp    425223 <__flatcc_fb_build_schema@@Base+0xa23>
  426025:	cmp    WORD PTR [r13+0x10],0x0
  42602b:	je     424c5f <__flatcc_fb_build_schema@@Base+0x45f>
  426031:	mov    rsi,QWORD PTR [r15+0x248]
  426038:	lea    rdx,[rip+0x22903]        # 448942 <fb_schema_table_missing@@Base+0x25d2>
  42603f:	xor    ecx,ecx
  426041:	mov    rdi,r15
  426044:	call   41e930 <error_ref_sym@@Base>
  426049:	jmp    424c5f <__flatcc_fb_build_schema@@Base+0x45f>
  42604e:	cmp    ecx,0x1
  426051:	cmovne rax,rsi
  426055:	test   r14,r14
  426058:	je     424c43 <__flatcc_fb_build_schema@@Base+0x443>
  42605e:	mov    rdi,QWORD PTR [r15+0x260]
  426065:	test   rdi,rdi
  426068:	je     424c43 <__flatcc_fb_build_schema@@Base+0x443>
  42606e:	neg    edx
  426070:	mov    rsi,rax
  426073:	movsxd rdx,edx
  426076:	call   41c2b0 <fb_scope_table_find@@Base>
  42607b:	test   rax,rax
  42607e:	je     424c3c <__flatcc_fb_build_schema@@Base+0x43c>
  426084:	mov    rcx,QWORD PTR [rbp+0x8]
  426088:	lea    rdi,[rax+0x8]
  42608c:	mov    rdx,QWORD PTR [rcx+0x8]
  426090:	mov    rsi,QWORD PTR [rcx]
  426093:	call   41b300 <fb_symbol_table_find@@Base>
  426098:	test   rax,rax
  42609b:	mov    r13,rax
  42609e:	je     424c3c <__flatcc_fb_build_schema@@Base+0x43c>
  4260a4:	cmp    WORD PTR [rax+0x10],0x4
  4260a9:	jbe    42616f <__flatcc_fb_build_schema@@Base+0x196f>
  4260af:	mov    QWORD PTR [r15+0x250],0x0
  4260ba:	mov    rsi,QWORD PTR [r15+0x248]
  4260c1:	jmp    424c4e <__flatcc_fb_build_schema@@Base+0x44e>
  4260c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4260d0:	mov    edi,DWORD PTR [r15+0x13c]
  4260d7:	test   edi,edi
  4260d9:	je     424c6a <__flatcc_fb_build_schema@@Base+0x46a>
  4260df:	lea    rdx,[rip+0x22831]        # 448917 <fb_schema_table_missing@@Base+0x25a7>
  4260e6:	xor    r9d,r9d
  4260e9:	xor    r8d,r8d
  4260ec:	xor    ecx,ecx
  4260ee:	xor    esi,esi
  4260f0:	mov    rdi,r15
  4260f3:	call   41d580 <__flatcc_error_report@@Base>
  4260f8:	jmp    424c6a <__flatcc_fb_build_schema@@Base+0x46a>
  4260fd:	mov    QWORD PTR [rsp+0x38],0x0
  426106:	mov    rcx,r10
  426109:	jmp    42610e <__flatcc_fb_build_schema@@Base+0x190e>
  42610b:	mov    r9,rdx
  42610e:	mov    rdx,QWORD PTR [r9]
  426111:	mov    QWORD PTR [rcx],r9
  426114:	lea    rcx,[r9+0x98]
  42611b:	test   rdx,rdx
  42611e:	jne    42610b <__flatcc_fb_build_schema@@Base+0x190b>
  426120:	mov    QWORD PTR [r9+0x98],0x0
  42612b:	mov    rdx,QWORD PTR [rsp+0x38]
  426130:	jmp    425dda <__flatcc_fb_build_schema@@Base+0x15da>
  426135:	xor    esi,esi
  426137:	mov    WORD PTR [r13+0xa4],si
  42613f:	jmp    425118 <__flatcc_fb_build_schema@@Base+0x918>
  426144:	cmp    WORD PTR [rbp+0x20],0x2
  426149:	je     425c19 <__flatcc_fb_build_schema@@Base+0x1419>
  42614f:	mov    rsi,QWORD PTR [rbp+0x8]
  426153:	lea    rdx,[rip+0x214f6]        # 447650 <fb_schema_table_missing@@Base+0x12e0>
  42615a:	xor    r9d,r9d
  42615d:	xor    r8d,r8d
  426160:	xor    ecx,ecx
  426162:	mov    rdi,r15
  426165:	call   41d580 <__flatcc_error_report@@Base>
  42616a:	jmp    425c19 <__flatcc_fb_build_schema@@Base+0x1419>
  42616f:	mov    rsi,QWORD PTR [rax+0x20]
  426173:	mov    rdi,QWORD PTR [rsp+0x10]
  426178:	call   41aba0 <ptr_set_find_item@@Base>
  42617d:	test   rax,rax
  426180:	jne    425e81 <__flatcc_fb_build_schema@@Base+0x1681>
  426186:	jmp    424c3c <__flatcc_fb_build_schema@@Base+0x43c>
  42618b:	nop    DWORD PTR [rax+rax*1+0x0]
  426190:	mov    rsi,QWORD PTR [rbp+0x8]
  426194:	lea    rdx,[rip+0x221cd]        # 448368 <fb_schema_table_missing@@Base+0x1ff8>
  42619b:	xor    r9d,r9d
  42619e:	xor    r8d,r8d
  4261a1:	xor    ecx,ecx
  4261a3:	mov    rdi,r15
  4261a6:	mov    r13,QWORD PTR [rsp+0x18]
  4261ab:	call   41d580 <__flatcc_error_report@@Base>
  4261b0:	jmp    424d0a <__flatcc_fb_build_schema@@Base+0x50a>
  4261b5:	mov    rsi,QWORD PTR [r13+0x8]
  4261b9:	lea    rdx,[rip+0x22150]        # 448310 <fb_schema_table_missing@@Base+0x1fa0>
  4261c0:	xor    r9d,r9d
  4261c3:	xor    r8d,r8d
  4261c6:	xor    ecx,ecx
  4261c8:	mov    rdi,r15
  4261cb:	call   41d580 <__flatcc_error_report@@Base>
  4261d0:	jmp    424d0a <__flatcc_fb_build_schema@@Base+0x50a>
  4261d5:	mov    rax,QWORD PTR [r15+0x240]
  4261dc:	test   rax,rax
  4261df:	jne    424aa2 <__flatcc_fb_build_schema@@Base+0x2a2>
  4261e5:	mov    QWORD PTR [r15+0x240],0x0
  4261f0:	jmp    424b4b <__flatcc_fb_build_schema@@Base+0x34b>
  4261f5:	cmp    eax,0x6
  4261f8:	jne    42504a <__flatcc_fb_build_schema@@Base+0x84a>
  4261fe:	cmp    WORD PTR [r12+0x20],0x6
  426205:	je     42504a <__flatcc_fb_build_schema@@Base+0x84a>
  42620b:	mov    rsi,QWORD PTR [r12+0x8]
  426210:	lea    rdx,[rip+0x214b9]        # 4476d0 <fb_schema_table_missing@@Base+0x1360>
  426217:	xor    r9d,r9d
  42621a:	xor    r8d,r8d
  42621d:	xor    ecx,ecx
  42621f:	mov    rdi,r15
  426222:	call   41d580 <__flatcc_error_report@@Base>
  426227:	jmp    42504a <__flatcc_fb_build_schema@@Base+0x84a>
  42622c:	mov    rcx,QWORD PTR [rdx+0x8]
  426230:	mov    rsi,QWORD PTR [rbp+0x8]
  426234:	lea    rdx,[rip+0x22185]        # 4483c0 <fb_schema_table_missing@@Base+0x2050>
  42623b:	xor    r9d,r9d
  42623e:	xor    r8d,r8d
  426241:	mov    rdi,r15
  426244:	mov    r13,QWORD PTR [rsp+0x18]
  426249:	call   41d580 <__flatcc_error_report@@Base>
  42624e:	mov    r11d,0x1
  426254:	mov    WORD PTR [rbp+0x28],r11w
  426259:	jmp    424d0a <__flatcc_fb_build_schema@@Base+0x50a>
  42625e:	mov    rcx,QWORD PTR [rdx+0x8]
  426262:	mov    rsi,QWORD PTR [rbp+0x8]
  426266:	lea    rdx,[rip+0x221d3]        # 448440 <fb_schema_table_missing@@Base+0x20d0>
  42626d:	xor    r9d,r9d
  426270:	xor    r8d,r8d
  426273:	mov    rdi,r15
  426276:	mov    r13,QWORD PTR [rsp+0x18]
  42627b:	call   41d580 <__flatcc_error_report@@Base>
  426280:	mov    r9d,0x1
  426286:	mov    WORD PTR [rbp+0x28],r9w
  42628b:	jmp    424d0a <__flatcc_fb_build_schema@@Base+0x50a>
  426290:	cmp    eax,0x4
  426293:	jne    4262e5 <__flatcc_fb_build_schema@@Base+0x1ae5>
  426295:	movzx  eax,WORD PTR [rbp+0x20]
  426299:	sub    eax,0x4
  42629c:	cmp    ax,0x1
  4262a0:	jbe    425c19 <__flatcc_fb_build_schema@@Base+0x1419>
  4262a6:	mov    rsi,QWORD PTR [rbp+0x8]
  4262aa:	lea    rdx,[rip+0x213f7]        # 4476a8 <fb_schema_table_missing@@Base+0x1338>
  4262b1:	xor    r9d,r9d
  4262b4:	xor    r8d,r8d
  4262b7:	xor    ecx,ecx
  4262b9:	mov    rdi,r15
  4262bc:	call   41d580 <__flatcc_error_report@@Base>
  4262c1:	jmp    425c19 <__flatcc_fb_build_schema@@Base+0x1419>
  4262c6:	lea    rcx,[rip+0x22893]        # 448b60 <fb_schema_table_missing@@Base+0x27f0>
  4262cd:	lea    rsi,[rip+0x2107c]        # 447350 <fb_schema_table_missing@@Base+0xfe0>
  4262d4:	lea    rdi,[rip+0x21ffd]        # 4482d8 <fb_schema_table_missing@@Base+0x1f68>
  4262db:	mov    edx,0x616
  4262e0:	call   405100 <__assert_fail@plt>
  4262e5:	cmp    eax,0x6
  4262e8:	jne    425c19 <__flatcc_fb_build_schema@@Base+0x1419>
  4262ee:	cmp    WORD PTR [rbp+0x20],0x6
  4262f3:	je     425c19 <__flatcc_fb_build_schema@@Base+0x1419>
  4262f9:	mov    rsi,QWORD PTR [rbp+0x8]
  4262fd:	lea    rdx,[rip+0x213cc]        # 4476d0 <fb_schema_table_missing@@Base+0x1360>
  426304:	xor    r9d,r9d
  426307:	xor    r8d,r8d
  42630a:	xor    ecx,ecx
  42630c:	mov    rdi,r15
  42630f:	call   41d580 <__flatcc_error_report@@Base>
  426314:	jmp    425c19 <__flatcc_fb_build_schema@@Base+0x1419>
  426319:	call   4050d0 <__stack_chk_fail@plt>
  42631e:	cmp    eax,0x6
  426321:	jne    425223 <__flatcc_fb_build_schema@@Base+0xa23>
  426327:	cmp    WORD PTR [r12+0x20],0x6
  42632e:	je     425223 <__flatcc_fb_build_schema@@Base+0xa23>
  426334:	mov    rsi,QWORD PTR [r12+0x8]
  426339:	lea    rdx,[rip+0x21390]        # 4476d0 <fb_schema_table_missing@@Base+0x1360>
  426340:	xor    r9d,r9d
  426343:	xor    r8d,r8d
  426346:	xor    ecx,ecx
  426348:	mov    rdi,r15
  42634b:	call   41d580 <__flatcc_error_report@@Base>
  426350:	jmp    425223 <__flatcc_fb_build_schema@@Base+0xa23>
  426355:	mov    rax,QWORD PTR [rip+0x2ac8c]        # 450fe8 <stderr@GLIBC_2.2.5>
  42635c:	lea    rdx,[rip+0x8355]        # 42e6b8 <_IO_stdin_used@@Base+0x16b8>
  426363:	mov    esi,0x1
  426368:	mov    rdi,QWORD PTR [rax]
  42636b:	xor    eax,eax
  42636d:	call   405200 <__fprintf_chk@plt>
  426372:	mov    edi,0x1
  426377:	call   4051e0 <exit@plt>
  42637c:	lea    rcx,[rip+0x2272d]        # 448ab0 <fb_schema_table_missing@@Base+0x2740>
  426383:	lea    rsi,[rip+0x20fc6]        # 447350 <fb_schema_table_missing@@Base+0xfe0>
  42638a:	lea    rdi,[rip+0x224cc]        # 44885d <fb_schema_table_missing@@Base+0x24ed>
  426391:	mov    edx,0x469
  426396:	call   405100 <__assert_fail@plt>
  42639b:	lea    rcx,[rip+0x226ee]        # 448a90 <fb_schema_table_missing@@Base+0x2720>
  4263a2:	lea    rsi,[rip+0x20fa7]        # 447350 <fb_schema_table_missing@@Base+0xfe0>
  4263a9:	lea    rdi,[rip+0x22561]        # 448911 <fb_schema_table_missing@@Base+0x25a1>
  4263b0:	mov    edx,0x5f1
  4263b5:	call   405100 <__assert_fail@plt>
  4263ba:	xor    r9d,r9d
  4263bd:	jmp    425d9c <__flatcc_fb_build_schema@@Base+0x159c>
  4263c2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4263cc:	nop    DWORD PTR [rax+0x0]

00000000004263d0 <__flatcc_fb_coerce_scalar_type@@Base>:
  4263d0:	movzx  eax,WORD PTR [rcx+0x10]
  4263d4:	test   ax,ax
  4263d7:	je     426478 <__flatcc_fb_coerce_scalar_type@@Base+0xa8>
  4263dd:	cmp    ax,0x4
  4263e1:	push   rbx
  4263e2:	mov    rbx,rcx
  4263e5:	je     426440 <__flatcc_fb_coerce_scalar_type@@Base+0x70>
  4263e7:	cmp    ax,0x1
  4263eb:	je     426470 <__flatcc_fb_coerce_scalar_type@@Base+0xa0>
  4263f1:	cmp    ax,0x6
  4263f5:	jne    426453 <__flatcc_fb_coerce_scalar_type@@Base+0x83>
  4263f7:	cmp    edx,0x5
  4263fa:	je     426453 <__flatcc_fb_coerce_scalar_type@@Base+0x83>
  4263fc:	mov    r9d,DWORD PTR [rdi+0xfc]
  426403:	test   r9d,r9d
  426406:	je     426453 <__flatcc_fb_coerce_scalar_type@@Base+0x83>
  426408:	movzx  eax,BYTE PTR [rcx]
  42640b:	mov    r8d,0x5
  426411:	mov    WORD PTR [rcx+0x10],r8w
  426416:	cmp    rax,0x1
  42641a:	mov    QWORD PTR [rcx],rax
  42641d:	ja     426b73 <__flatcc_fb_coerce_scalar_type@@Base+0x7a3>
  426423:	cmp    edx,0xb
  426426:	ja     426758 <__flatcc_fb_coerce_scalar_type@@Base+0x388>
  42642c:	lea    rcx,[rip+0x22c2d]        # 449060 <fb_schema_table_missing@@Base+0x2cf0>
  426433:	mov    edx,edx
  426435:	movsxd rax,DWORD PTR [rcx+rdx*4]
  426439:	add    rax,rcx
  42643c:	jmp    rax
  42643e:	xchg   ax,ax
  426440:	mov    rax,QWORD PTR [rcx]
  426443:	test   rax,rax
  426446:	js     426453 <__flatcc_fb_coerce_scalar_type@@Base+0x83>
  426448:	mov    r10d,0x5
  42644e:	mov    WORD PTR [rcx+0x10],r10w
  426453:	cmp    edx,0xb
  426456:	ja     426758 <__flatcc_fb_coerce_scalar_type@@Base+0x388>
  42645c:	lea    rcx,[rip+0x22c2d]        # 449090 <fb_schema_table_missing@@Base+0x2d20>
  426463:	mov    edx,edx
  426465:	movsxd rax,DWORD PTR [rcx+rdx*4]
  426469:	add    rax,rcx
  42646c:	jmp    rax
  42646e:	xchg   ax,ax
  426470:	xor    eax,eax
  426472:	pop    rbx
  426473:	ret    
  426474:	nop    DWORD PTR [rax+0x0]
  426478:	xor    eax,eax
  42647a:	ret    
  42647b:	nop    DWORD PTR [rax+rax*1+0x0]
  426480:	cmp    WORD PTR [rbx+0x10],0x5
  426485:	je     426470 <__flatcc_fb_coerce_scalar_type@@Base+0xa0>
  426487:	mov    rsi,QWORD PTR [rsi+0x8]
  42648b:	lea    rdx,[rip+0x2279e]        # 448c30 <fb_schema_table_missing@@Base+0x28c0>
  426492:	xor    r9d,r9d
  426495:	xor    r8d,r8d
  426498:	xor    ecx,ecx
  42649a:	call   41d580 <__flatcc_error_report@@Base>
  42649f:	mov    edi,0x1
  4264a4:	mov    eax,0xffffffff
  4264a9:	mov    WORD PTR [rbx+0x10],di
  4264ad:	pop    rbx
  4264ae:	ret    
  4264af:	nop
  4264b0:	cmp    WORD PTR [rbx+0x10],0x5
  4264b5:	jne    4269cf <__flatcc_fb_coerce_scalar_type@@Base+0x5ff>
  4264bb:	mov    eax,0xffffffff
  4264c0:	cmp    QWORD PTR [rbx],rax
  4264c3:	jbe    426470 <__flatcc_fb_coerce_scalar_type@@Base+0xa0>
  4264c5:	mov    rsi,QWORD PTR [rsi+0x8]
  4264c9:	lea    rdx,[rip+0x22a98]        # 448f68 <fb_schema_table_missing@@Base+0x2bf8>
  4264d0:	xor    r9d,r9d
  4264d3:	xor    r8d,r8d
  4264d6:	xor    ecx,ecx
  4264d8:	call   41d580 <__flatcc_error_report@@Base>
  4264dd:	mov    WORD PTR [rbx+0x10],0x1
  4264e3:	or     eax,0xffffffff
  4264e6:	pop    rbx
  4264e7:	ret    
  4264e8:	nop    DWORD PTR [rax+rax*1+0x0]
  4264f0:	cmp    WORD PTR [rbx+0x10],0x5
  4264f5:	jne    426a1f <__flatcc_fb_coerce_scalar_type@@Base+0x64f>
  4264fb:	cmp    QWORD PTR [rbx],0xffff
  426502:	jbe    426470 <__flatcc_fb_coerce_scalar_type@@Base+0xa0>
  426508:	mov    rsi,QWORD PTR [rsi+0x8]
  42650c:	lea    rdx,[rip+0x227cd]        # 448ce0 <fb_schema_table_missing@@Base+0x2970>
  426513:	xor    r9d,r9d
  426516:	xor    r8d,r8d
  426519:	xor    ecx,ecx
  42651b:	call   41d580 <__flatcc_error_report@@Base>
  426520:	mov    WORD PTR [rbx+0x10],0x1
  426526:	or     eax,0xffffffff
  426529:	pop    rbx
  42652a:	ret    
  42652b:	nop    DWORD PTR [rax+rax*1+0x0]
  426530:	cmp    WORD PTR [rbx+0x10],0x5
  426535:	jne    4269f7 <__flatcc_fb_coerce_scalar_type@@Base+0x627>
  42653b:	cmp    QWORD PTR [rbx],0xff
  426542:	jbe    426470 <__flatcc_fb_coerce_scalar_type@@Base+0xa0>
  426548:	mov    rsi,QWORD PTR [rsi+0x8]
  42654c:	lea    rdx,[rip+0x22a32]        # 448f85 <fb_schema_table_missing@@Base+0x2c15>
  426553:	xor    r9d,r9d
  426556:	xor    r8d,r8d
  426559:	xor    ecx,ecx
  42655b:	call   41d580 <__flatcc_error_report@@Base>
  426560:	mov    WORD PTR [rbx+0x10],0x1
  426566:	or     eax,0xffffffff
  426569:	pop    rbx
  42656a:	ret    
  42656b:	nop    DWORD PTR [rax+rax*1+0x0]
  426570:	movzx  eax,WORD PTR [rbx+0x10]
  426574:	cmp    ax,0x5
  426578:	je     426780 <__flatcc_fb_coerce_scalar_type@@Base+0x3b0>
  42657e:	cmp    ax,0x6
  426582:	je     426470 <__flatcc_fb_coerce_scalar_type@@Base+0xa0>
  426588:	mov    rsi,QWORD PTR [rsi+0x8]
  42658c:	lea    rdx,[rip+0x228c5]        # 448e58 <fb_schema_table_missing@@Base+0x2ae8>
  426593:	xor    r9d,r9d
  426596:	xor    r8d,r8d
  426599:	xor    ecx,ecx
  42659b:	call   41d580 <__flatcc_error_report@@Base>
  4265a0:	mov    r10d,0x1
  4265a6:	mov    eax,0xffffffff
  4265ab:	mov    WORD PTR [rbx+0x10],r10w
  4265b0:	pop    rbx
  4265b1:	ret    
  4265b2:	nop    WORD PTR [rax+rax*1+0x0]
  4265b8:	movzx  eax,WORD PTR [rbx+0x10]
  4265bc:	cmp    ax,0x4
  4265c0:	je     426470 <__flatcc_fb_coerce_scalar_type@@Base+0xa0>
  4265c6:	cmp    ax,0x5
  4265ca:	jne    426a47 <__flatcc_fb_coerce_scalar_type@@Base+0x677>
  4265d0:	mov    rax,QWORD PTR [rbx]
  4265d3:	test   rax,rax
  4265d6:	js     426b50 <__flatcc_fb_coerce_scalar_type@@Base+0x780>
  4265dc:	mov    QWORD PTR [rbx],rax
  4265df:	mov    eax,0x4
  4265e4:	mov    WORD PTR [rbx+0x10],ax
  4265e8:	xor    eax,eax
  4265ea:	pop    rbx
  4265eb:	ret    
  4265ec:	nop    DWORD PTR [rax+0x0]
  4265f0:	movzx  eax,WORD PTR [rbx+0x10]
  4265f4:	cmp    ax,0x4
  4265f8:	je     426890 <__flatcc_fb_coerce_scalar_type@@Base+0x4c0>
  4265fe:	cmp    ax,0x5
  426602:	jne    426a6f <__flatcc_fb_coerce_scalar_type@@Base+0x69f>
  426608:	cmp    QWORD PTR [rbx],0x7fff
  42660f:	jg     426b2d <__flatcc_fb_coerce_scalar_type@@Base+0x75d>
  426615:	mov    eax,0x4
  42661a:	mov    WORD PTR [rbx+0x10],ax
  42661e:	xor    eax,eax
  426620:	pop    rbx
  426621:	ret    
  426622:	nop    WORD PTR [rax+rax*1+0x0]
  426628:	movzx  eax,WORD PTR [rbx+0x10]
  42662c:	cmp    ax,0x4
  426630:	je     426860 <__flatcc_fb_coerce_scalar_type@@Base+0x490>
  426636:	cmp    ax,0x5
  42663a:	jne    426a97 <__flatcc_fb_coerce_scalar_type@@Base+0x6c7>
  426640:	cmp    QWORD PTR [rbx],0x7fffffff
  426647:	jle    426615 <__flatcc_fb_coerce_scalar_type@@Base+0x245>
  426649:	mov    rsi,QWORD PTR [rsi+0x8]
  42664d:	lea    rdx,[rip+0x2296a]        # 448fbe <fb_schema_table_missing@@Base+0x2c4e>
  426654:	xor    r9d,r9d
  426657:	xor    r8d,r8d
  42665a:	xor    ecx,ecx
  42665c:	call   41d580 <__flatcc_error_report@@Base>
  426661:	mov    WORD PTR [rbx+0x10],0x1
  426667:	or     eax,0xffffffff
  42666a:	pop    rbx
  42666b:	ret    
  42666c:	nop    DWORD PTR [rax+0x0]
  426670:	movzx  edx,WORD PTR [rbx+0x10]
  426674:	cmp    dx,0x4
  426678:	je     4268f0 <__flatcc_fb_coerce_scalar_type@@Base+0x520>
  42667e:	cmp    dx,0x5
  426682:	je     426810 <__flatcc_fb_coerce_scalar_type@@Base+0x440>
  426688:	xor    eax,eax
  42668a:	cmp    dx,0x3
  42668e:	je     426472 <__flatcc_fb_coerce_scalar_type@@Base+0xa2>
  426694:	mov    rsi,QWORD PTR [rsi+0x8]
  426698:	lea    rdx,[rip+0x22821]        # 448ec0 <fb_schema_table_missing@@Base+0x2b50>
  42669f:	xor    r9d,r9d
  4266a2:	xor    r8d,r8d
  4266a5:	xor    ecx,ecx
  4266a7:	call   41d580 <__flatcc_error_report@@Base>
  4266ac:	mov    edi,0x1
  4266b1:	mov    eax,0xffffffff
  4266b6:	mov    WORD PTR [rbx+0x10],di
  4266ba:	pop    rbx
  4266bb:	ret    
  4266bc:	nop    DWORD PTR [rax+0x0]
  4266c0:	movzx  edx,WORD PTR [rbx+0x10]
  4266c4:	cmp    dx,0x4
  4266c8:	je     426920 <__flatcc_fb_coerce_scalar_type@@Base+0x550>
  4266ce:	cmp    dx,0x5
  4266d2:	je     4267c0 <__flatcc_fb_coerce_scalar_type@@Base+0x3f0>
  4266d8:	xor    eax,eax
  4266da:	cmp    dx,0x3
  4266de:	je     426472 <__flatcc_fb_coerce_scalar_type@@Base+0xa2>
  4266e4:	mov    rsi,QWORD PTR [rsi+0x8]
  4266e8:	lea    rdx,[rip+0x22841]        # 448f30 <fb_schema_table_missing@@Base+0x2bc0>
  4266ef:	xor    r9d,r9d
  4266f2:	xor    r8d,r8d
  4266f5:	xor    ecx,ecx
  4266f7:	call   41d580 <__flatcc_error_report@@Base>
  4266fc:	mov    edx,0x1
  426701:	mov    eax,0xffffffff
  426706:	mov    WORD PTR [rbx+0x10],dx
  42670a:	pop    rbx
  42670b:	ret    
  42670c:	nop    DWORD PTR [rax+0x0]
  426710:	movzx  eax,WORD PTR [rbx+0x10]
  426714:	cmp    ax,0x4
  426718:	je     4268c0 <__flatcc_fb_coerce_scalar_type@@Base+0x4f0>
  42671e:	cmp    ax,0x5
  426722:	jne    426abf <__flatcc_fb_coerce_scalar_type@@Base+0x6ef>
  426728:	cmp    QWORD PTR [rbx],0x7f
  42672c:	jle    426615 <__flatcc_fb_coerce_scalar_type@@Base+0x245>
  426732:	mov    rsi,QWORD PTR [rsi+0x8]
  426736:	lea    rdx,[rip+0x228f3]        # 449030 <fb_schema_table_missing@@Base+0x2cc0>
  42673d:	xor    r9d,r9d
  426740:	xor    r8d,r8d
  426743:	xor    ecx,ecx
  426745:	call   41d580 <__flatcc_error_report@@Base>
  42674a:	mov    WORD PTR [rbx+0x10],0x1
  426750:	or     eax,0xffffffff
  426753:	pop    rbx
  426754:	ret    
  426755:	nop    DWORD PTR [rax]
  426758:	mov    rsi,QWORD PTR [rsi+0x8]
  42675c:	lea    rdx,[rip+0x228e8]        # 44904b <fb_schema_table_missing@@Base+0x2cdb>
  426763:	xor    r9d,r9d
  426766:	xor    r8d,r8d
  426769:	xor    ecx,ecx
  42676b:	call   41d580 <__flatcc_error_report@@Base>
  426770:	mov    eax,0x1
  426775:	mov    WORD PTR [rbx+0x10],ax
  426779:	mov    eax,0xffffffff
  42677e:	pop    rbx
  42677f:	ret    
  426780:	mov    r11d,DWORD PTR [rdi+0xfc]
  426787:	test   r11d,r11d
  42678a:	je     426588 <__flatcc_fb_coerce_scalar_type@@Base+0x1b8>
  426790:	cmp    QWORD PTR [rbx],0x1
  426794:	jbe    426470 <__flatcc_fb_coerce_scalar_type@@Base+0xa0>
  42679a:	mov    rsi,QWORD PTR [rsi+0x8]
  42679e:	lea    rdx,[rip+0x22673]        # 448e18 <fb_schema_table_missing@@Base+0x2aa8>
  4267a5:	xor    r9d,r9d
  4267a8:	xor    r8d,r8d
  4267ab:	xor    ecx,ecx
  4267ad:	call   41d580 <__flatcc_error_report@@Base>
  4267b2:	mov    WORD PTR [rbx+0x10],0x1
  4267b8:	or     eax,0xffffffff
  4267bb:	pop    rbx
  4267bc:	ret    
  4267bd:	nop    DWORD PTR [rax]
  4267c0:	mov    rdx,QWORD PTR [rbx]
  4267c3:	test   rdx,rdx
  4267c6:	js     42698d <__flatcc_fb_coerce_scalar_type@@Base+0x5bd>
  4267cc:	vxorps xmm0,xmm0,xmm0
  4267d0:	vcvtsi2ss xmm0,xmm0,rdx
  4267d5:	vucomiss xmm0,DWORD PTR [rip+0x2290b]        # 4490e8 <fb_schema_table_missing@@Base+0x2d78>
  4267dd:	jae    426953 <__flatcc_fb_coerce_scalar_type@@Base+0x583>
  4267e3:	vcvttss2si rax,xmm0
  4267e8:	cmp    rdx,rax
  4267eb:	jne    426b0a <__flatcc_fb_coerce_scalar_type@@Base+0x73a>
  4267f1:	vxorpd xmm3,xmm3,xmm3
  4267f5:	mov    ecx,0x3
  4267fa:	xor    eax,eax
  4267fc:	mov    WORD PTR [rbx+0x10],cx
  426800:	vcvtss2sd xmm3,xmm3,xmm0
  426804:	vmovsd QWORD PTR [rbx],xmm3
  426808:	pop    rbx
  426809:	ret    
  42680a:	nop    WORD PTR [rax+rax*1+0x0]
  426810:	mov    rdx,QWORD PTR [rbx]
  426813:	test   rdx,rdx
  426816:	js     4269ae <__flatcc_fb_coerce_scalar_type@@Base+0x5de>
  42681c:	vxorpd xmm1,xmm1,xmm1
  426820:	vcvtsi2sd xmm1,xmm1,rdx
  426825:	vmovsd xmm0,QWORD PTR [rip+0x228b3]        # 4490e0 <fb_schema_table_missing@@Base+0x2d70>
  42682d:	vucomisd xmm1,xmm0
  426831:	jae    426972 <__flatcc_fb_coerce_scalar_type@@Base+0x5a2>
  426837:	vcvttsd2si rax,xmm1
  42683c:	cmp    rdx,rax
  42683f:	jne    426ae7 <__flatcc_fb_coerce_scalar_type@@Base+0x717>
  426845:	mov    r8d,0x3
  42684b:	vmovsd QWORD PTR [rbx],xmm1
  42684f:	xor    eax,eax
  426851:	mov    WORD PTR [rbx+0x10],r8w
  426856:	pop    rbx
  426857:	ret    
  426858:	nop    DWORD PTR [rax+rax*1+0x0]
  426860:	cmp    QWORD PTR [rbx],0xffffffff80000000
  426867:	jge    426470 <__flatcc_fb_coerce_scalar_type@@Base+0xa0>
  42686d:	mov    rsi,QWORD PTR [rsi+0x8]
  426871:	lea    rdx,[rip+0x2272a]        # 448fa2 <fb_schema_table_missing@@Base+0x2c32>
  426878:	xor    r9d,r9d
  42687b:	xor    r8d,r8d
  42687e:	xor    ecx,ecx
  426880:	call   41d580 <__flatcc_error_report@@Base>
  426885:	mov    WORD PTR [rbx+0x10],0x1
  42688b:	or     eax,0xffffffff
  42688e:	pop    rbx
  42688f:	ret    
  426890:	cmp    QWORD PTR [rbx],0xffffffffffff8000
  426897:	jge    426470 <__flatcc_fb_coerce_scalar_type@@Base+0xa0>
  42689d:	mov    rsi,QWORD PTR [rsi+0x8]
  4268a1:	lea    rdx,[rip+0x22731]        # 448fd9 <fb_schema_table_missing@@Base+0x2c69>
  4268a8:	xor    r9d,r9d
  4268ab:	xor    r8d,r8d
  4268ae:	xor    ecx,ecx
  4268b0:	call   41d580 <__flatcc_error_report@@Base>
  4268b5:	mov    WORD PTR [rbx+0x10],0x1
  4268bb:	or     eax,0xffffffff
  4268be:	pop    rbx
  4268bf:	ret    
  4268c0:	cmp    QWORD PTR [rbx],0xffffffffffffff80
  4268c4:	jge    426470 <__flatcc_fb_coerce_scalar_type@@Base+0xa0>
  4268ca:	mov    rsi,QWORD PTR [rsi+0x8]
  4268ce:	lea    rdx,[rip+0x2273f]        # 449014 <fb_schema_table_missing@@Base+0x2ca4>
  4268d5:	xor    r9d,r9d
  4268d8:	xor    r8d,r8d
  4268db:	xor    ecx,ecx
  4268dd:	call   41d580 <__flatcc_error_report@@Base>
  4268e2:	mov    WORD PTR [rbx+0x10],0x1
  4268e8:	or     eax,0xffffffff
  4268eb:	pop    rbx
  4268ec:	ret    
  4268ed:	nop    DWORD PTR [rax]
  4268f0:	mov    rax,QWORD PTR [rbx]
  4268f3:	vxorpd xmm0,xmm0,xmm0
  4268f7:	vcvtsi2sd xmm0,xmm0,rax
  4268fc:	vcvttsd2si rdx,xmm0
  426901:	cmp    rax,rdx
  426904:	jne    426ae7 <__flatcc_fb_coerce_scalar_type@@Base+0x717>
  42690a:	mov    r9d,0x3
  426910:	vmovsd QWORD PTR [rbx],xmm0
  426914:	xor    eax,eax
  426916:	mov    WORD PTR [rbx+0x10],r9w
  42691b:	pop    rbx
  42691c:	ret    
  42691d:	nop    DWORD PTR [rax]
  426920:	mov    rax,QWORD PTR [rbx]
  426923:	vxorps xmm0,xmm0,xmm0
  426927:	vcvtsi2ss xmm0,xmm0,rax
  42692c:	vcvttss2si rdx,xmm0
  426931:	cmp    rax,rdx
  426934:	jne    426b0a <__flatcc_fb_coerce_scalar_type@@Base+0x73a>
  42693a:	vxorpd xmm2,xmm2,xmm2
  42693e:	mov    esi,0x3
  426943:	xor    eax,eax
  426945:	mov    WORD PTR [rbx+0x10],si
  426949:	vcvtss2sd xmm2,xmm2,xmm0
  42694d:	vmovsd QWORD PTR [rbx],xmm2
  426951:	pop    rbx
  426952:	ret    
  426953:	vsubss xmm1,xmm0,DWORD PTR [rip+0x2278d]        # 4490e8 <fb_schema_table_missing@@Base+0x2d78>
  42695b:	movabs rcx,0x8000000000000000
  426965:	vcvttss2si rax,xmm1
  42696a:	xor    rax,rcx
  42696d:	jmp    4267e8 <__flatcc_fb_coerce_scalar_type@@Base+0x418>
  426972:	vsubsd xmm0,xmm1,xmm0
  426976:	movabs rcx,0x8000000000000000
  426980:	vcvttsd2si rax,xmm0
  426985:	xor    rax,rcx
  426988:	jmp    42683c <__flatcc_fb_coerce_scalar_type@@Base+0x46c>
  42698d:	mov    rax,rdx
  426990:	mov    rcx,rdx
  426993:	vxorps xmm0,xmm0,xmm0
  426997:	shr    rax,1
  42699a:	and    ecx,0x1
  42699d:	or     rax,rcx
  4269a0:	vcvtsi2ss xmm0,xmm0,rax
  4269a5:	vaddss xmm0,xmm0,xmm0
  4269a9:	jmp    4267d5 <__flatcc_fb_coerce_scalar_type@@Base+0x405>
  4269ae:	mov    rax,rdx
  4269b1:	mov    rcx,rdx
  4269b4:	vxorpd xmm1,xmm1,xmm1
  4269b8:	shr    rax,1
  4269bb:	and    ecx,0x1
  4269be:	or     rax,rcx
  4269c1:	vcvtsi2sd xmm1,xmm1,rax
  4269c6:	vaddsd xmm1,xmm1,xmm1
  4269ca:	jmp    426825 <__flatcc_fb_coerce_scalar_type@@Base+0x455>
  4269cf:	mov    rsi,QWORD PTR [rsi+0x8]
  4269d3:	lea    rdx,[rip+0x2228e]        # 448c68 <fb_schema_table_missing@@Base+0x28f8>
  4269da:	xor    r9d,r9d
  4269dd:	xor    r8d,r8d
  4269e0:	xor    ecx,ecx
  4269e2:	call   41d580 <__flatcc_error_report@@Base>
  4269e7:	mov    esi,0x1
  4269ec:	mov    eax,0xffffffff
  4269f1:	mov    WORD PTR [rbx+0x10],si
  4269f5:	pop    rbx
  4269f6:	ret    
  4269f7:	mov    rsi,QWORD PTR [rsi+0x8]
  4269fb:	lea    rdx,[rip+0x222fe]        # 448d00 <fb_schema_table_missing@@Base+0x2990>
  426a02:	xor    r9d,r9d
  426a05:	xor    r8d,r8d
  426a08:	xor    ecx,ecx
  426a0a:	call   41d580 <__flatcc_error_report@@Base>
  426a0f:	mov    edx,0x1
  426a14:	mov    eax,0xffffffff
  426a19:	mov    WORD PTR [rbx+0x10],dx
  426a1d:	pop    rbx
  426a1e:	ret    
  426a1f:	mov    rsi,QWORD PTR [rsi+0x8]
  426a23:	lea    rdx,[rip+0x22276]        # 448ca0 <fb_schema_table_missing@@Base+0x2930>
  426a2a:	xor    ecx,ecx
  426a2c:	xor    r9d,r9d
  426a2f:	xor    r8d,r8d
  426a32:	call   41d580 <__flatcc_error_report@@Base>
  426a37:	mov    ecx,0x1
  426a3c:	mov    eax,0xffffffff
  426a41:	mov    WORD PTR [rbx+0x10],cx
  426a45:	pop    rbx
  426a46:	ret    
  426a47:	mov    rsi,QWORD PTR [rsi+0x8]
  426a4b:	lea    rdx,[rip+0x22306]        # 448d58 <fb_schema_table_missing@@Base+0x29e8>
  426a52:	xor    r9d,r9d
  426a55:	xor    r8d,r8d
  426a58:	xor    ecx,ecx
  426a5a:	call   41d580 <__flatcc_error_report@@Base>
  426a5f:	mov    eax,0x1
  426a64:	mov    WORD PTR [rbx+0x10],ax
  426a68:	mov    eax,0xffffffff
  426a6d:	pop    rbx
  426a6e:	ret    
  426a6f:	mov    rsi,QWORD PTR [rsi+0x8]
  426a73:	lea    rdx,[rip+0x2233e]        # 448db8 <fb_schema_table_missing@@Base+0x2a48>
  426a7a:	xor    r9d,r9d
  426a7d:	xor    r8d,r8d
  426a80:	xor    ecx,ecx
  426a82:	call   41d580 <__flatcc_error_report@@Base>
  426a87:	mov    eax,0x1
  426a8c:	mov    WORD PTR [rbx+0x10],ax
  426a90:	mov    eax,0xffffffff
  426a95:	pop    rbx
  426a96:	ret    
  426a97:	mov    rsi,QWORD PTR [rsi+0x8]
  426a9b:	lea    rdx,[rip+0x222e6]        # 448d88 <fb_schema_table_missing@@Base+0x2a18>
  426aa2:	xor    r9d,r9d
  426aa5:	xor    r8d,r8d
  426aa8:	xor    ecx,ecx
  426aaa:	call   41d580 <__flatcc_error_report@@Base>
  426aaf:	mov    eax,0x1
  426ab4:	mov    WORD PTR [rbx+0x10],ax
  426ab8:	mov    eax,0xffffffff
  426abd:	pop    rbx
  426abe:	ret    
  426abf:	mov    rsi,QWORD PTR [rsi+0x8]
  426ac3:	lea    rdx,[rip+0x2231e]        # 448de8 <fb_schema_table_missing@@Base+0x2a78>
  426aca:	xor    r9d,r9d
  426acd:	xor    r8d,r8d
  426ad0:	xor    ecx,ecx
  426ad2:	call   41d580 <__flatcc_error_report@@Base>
  426ad7:	mov    eax,0x1
  426adc:	mov    WORD PTR [rbx+0x10],ax
  426ae0:	mov    eax,0xffffffff
  426ae5:	pop    rbx
  426ae6:	ret    
  426ae7:	mov    rsi,QWORD PTR [rsi+0x8]
  426aeb:	lea    rdx,[rip+0x2239e]        # 448e90 <fb_schema_table_missing@@Base+0x2b20>
  426af2:	xor    r9d,r9d
  426af5:	xor    r8d,r8d
  426af8:	xor    ecx,ecx
  426afa:	call   41d580 <__flatcc_error_report@@Base>
  426aff:	mov    WORD PTR [rbx+0x10],0x1
  426b05:	or     eax,0xffffffff
  426b08:	pop    rbx
  426b09:	ret    
  426b0a:	mov    rsi,QWORD PTR [rsi+0x8]
  426b0e:	lea    rdx,[rip+0x223eb]        # 448f00 <fb_schema_table_missing@@Base+0x2b90>
  426b15:	xor    r9d,r9d
  426b18:	xor    r8d,r8d
  426b1b:	xor    ecx,ecx
  426b1d:	call   41d580 <__flatcc_error_report@@Base>
  426b22:	mov    WORD PTR [rbx+0x10],0x1
  426b28:	or     eax,0xffffffff
  426b2b:	pop    rbx
  426b2c:	ret    
  426b2d:	mov    rsi,QWORD PTR [rsi+0x8]
  426b31:	lea    rdx,[rip+0x224bf]        # 448ff7 <fb_schema_table_missing@@Base+0x2c87>
  426b38:	xor    r9d,r9d
  426b3b:	xor    r8d,r8d
  426b3e:	xor    ecx,ecx
  426b40:	call   41d580 <__flatcc_error_report@@Base>
  426b45:	mov    WORD PTR [rbx+0x10],0x1
  426b4b:	or     eax,0xffffffff
  426b4e:	pop    rbx
  426b4f:	ret    
  426b50:	mov    rsi,QWORD PTR [rsi+0x8]
  426b54:	lea    rdx,[rip+0x221dd]        # 448d38 <fb_schema_table_missing@@Base+0x29c8>
  426b5b:	xor    r9d,r9d
  426b5e:	xor    r8d,r8d
  426b61:	xor    ecx,ecx
  426b63:	call   41d580 <__flatcc_error_report@@Base>
  426b68:	mov    WORD PTR [rbx+0x10],0x1
  426b6e:	or     eax,0xffffffff
  426b71:	pop    rbx
  426b72:	ret    
  426b73:	lea    rcx,[rip+0x22546]        # 4490c0 <fb_schema_table_missing@@Base+0x2d50>
  426b7a:	lea    rsi,[rip+0x2202f]        # 448bb0 <fb_schema_table_missing@@Base+0x2840>
  426b81:	lea    rdi,[rip+0x22088]        # 448c10 <fb_schema_table_missing@@Base+0x28a0>
  426b88:	mov    edx,0x34
  426b8d:	call   405100 <__assert_fail@plt>
  426b92:	nop    WORD PTR cs:[rax+rax*1+0x0]
  426b9c:	nop    DWORD PTR [rax+0x0]
  426ba0:	push   rbp
  426ba1:	push   rbx
  426ba2:	mov    ebp,edx
  426ba4:	mov    rbx,rdi
  426ba7:	mov    r8d,0x1
  426bad:	mov    ecx,0x1
  426bb2:	sub    rsp,0x8
  426bb6:	mov    edx,DWORD PTR [rdi+0x28]
  426bb9:	add    rdx,rsi
  426bbc:	lea    rsi,[rdi+0x68]
  426bc0:	mov    rdi,QWORD PTR [rdi+0x40]
  426bc4:	call   QWORD PTR [rbx+0x50]
  426bc7:	test   eax,eax
  426bc9:	jne    426bf8 <__flatcc_fb_coerce_scalar_type@@Base+0x828>
  426bcb:	mov    edx,DWORD PTR [rbx+0x28]
  426bce:	mov    rcx,rdx
  426bd1:	add    rdx,QWORD PTR [rbx+0x68]
  426bd5:	mov    QWORD PTR [rbx+0x18],rdx
  426bd9:	mov    edx,DWORD PTR [rbx+0x70]
  426bdc:	sub    edx,ecx
  426bde:	cmp    ebp,edx
  426be0:	cmovb  edx,ebp
  426be3:	mov    DWORD PTR [rbx+0x24],edx
  426be6:	mov    rdx,QWORD PTR [rbx+0x30]
  426bea:	mov    DWORD PTR [rdx+0x4],ebp
  426bed:	add    rsp,0x8
  426bf1:	pop    rbx
  426bf2:	pop    rbp
  426bf3:	ret    
  426bf4:	nop    DWORD PTR [rax+0x0]
  426bf8:	mov    eax,0xffffffff
  426bfd:	jmp    426bed <__flatcc_fb_coerce_scalar_type@@Base+0x81d>
  426bff:	nop

0000000000426c00 <flatcc_builder_default_alloc@@Base>:
  426c00:	push   r12
  426c02:	push   rbp
  426c03:	mov    rbp,rsi
  426c06:	push   rbx
  426c07:	sub    rsp,0x10
  426c0b:	test   rdx,rdx
  426c0e:	jne    426c40 <flatcc_builder_default_alloc@@Base+0x40>
  426c10:	mov    rdi,QWORD PTR [rsi]
  426c13:	xor    eax,eax
  426c15:	test   rdi,rdi
  426c18:	je     426c37 <flatcc_builder_default_alloc@@Base+0x37>
  426c1a:	mov    DWORD PTR [rsp+0xc],eax
  426c1e:	call   405040 <free@plt>
  426c23:	mov    eax,DWORD PTR [rsp+0xc]
  426c27:	mov    QWORD PTR [rbp+0x0],0x0
  426c2f:	mov    QWORD PTR [rbp+0x8],0x0
  426c37:	add    rsp,0x10
  426c3b:	pop    rbx
  426c3c:	pop    rbp
  426c3d:	pop    r12
  426c3f:	ret    
  426c40:	cmp    r8d,0x4
  426c44:	je     426ce0 <flatcc_builder_default_alloc@@Base+0xe0>
  426c4a:	jle    426cf0 <flatcc_builder_default_alloc@@Base+0xf0>
  426c50:	cmp    r8d,0x5
  426c54:	mov    rbx,rdx
  426c57:	je     426c78 <flatcc_builder_default_alloc@@Base+0x78>
  426c59:	cmp    r8d,0x7
  426c5d:	mov    ebx,0x40
  426c62:	je     426c73 <flatcc_builder_default_alloc@@Base+0x73>
  426c64:	jmp    426cff <flatcc_builder_default_alloc@@Base+0xff>
  426c69:	nop    DWORD PTR [rax+0x0]
  426c70:	add    rbx,rbx
  426c73:	cmp    rdx,rbx
  426c76:	ja     426c70 <flatcc_builder_default_alloc@@Base+0x70>
  426c78:	mov    rax,QWORD PTR [rbp+0x8]
  426c7c:	cmp    rdx,rax
  426c7f:	ja     426c8e <flatcc_builder_default_alloc@@Base+0x8e>
  426c81:	shr    rax,1
  426c84:	mov    rdx,rax
  426c87:	xor    eax,eax
  426c89:	cmp    rdx,rbx
  426c8c:	jae    426c37 <flatcc_builder_default_alloc@@Base+0x37>
  426c8e:	mov    rdi,QWORD PTR [rbp+0x0]
  426c92:	mov    rsi,rbx
  426c95:	mov    DWORD PTR [rsp+0xc],ecx
  426c99:	call   4051b0 <realloc@plt>
  426c9e:	test   rax,rax
  426ca1:	mov    r12,rax
  426ca4:	je     426d09 <flatcc_builder_default_alloc@@Base+0x109>
  426ca6:	mov    ecx,DWORD PTR [rsp+0xc]
  426caa:	test   ecx,ecx
  426cac:	je     426cc8 <flatcc_builder_default_alloc@@Base+0xc8>
  426cae:	mov    rax,QWORD PTR [rbp+0x8]
  426cb2:	cmp    rax,rbx
  426cb5:	jae    426cc8 <flatcc_builder_default_alloc@@Base+0xc8>
  426cb7:	mov    rdx,rbx
  426cba:	lea    rdi,[r12+rax*1]
  426cbe:	xor    esi,esi
  426cc0:	sub    rdx,rax
  426cc3:	call   405110 <memset@plt>
  426cc8:	mov    QWORD PTR [rbp+0x0],r12
  426ccc:	mov    QWORD PTR [rbp+0x8],rbx
  426cd0:	add    rsp,0x10
  426cd4:	pop    rbx
  426cd5:	xor    eax,eax
  426cd7:	pop    rbp
  426cd8:	pop    r12
  426cda:	ret    
  426cdb:	nop    DWORD PTR [rax+rax*1+0x0]
  426ce0:	mov    ebx,0x120
  426ce5:	jmp    426c73 <flatcc_builder_default_alloc@@Base+0x73>
  426ce7:	nop    WORD PTR [rax+rax*1+0x0]
  426cf0:	cmp    r8d,0x1
  426cf4:	mov    ebx,0x100
  426cf9:	je     426c73 <flatcc_builder_default_alloc@@Base+0x73>
  426cff:	mov    ebx,0x20
  426d04:	jmp    426c73 <flatcc_builder_default_alloc@@Base+0x73>
  426d09:	mov    eax,0xffffffff
  426d0e:	jmp    426c37 <flatcc_builder_default_alloc@@Base+0x37>
  426d13:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  426d1e:	xchg   ax,ax
  426d20:	push   rbx
  426d21:	mov    r9,rdi
  426d24:	sub    rsp,0xa0
  426d2b:	mov    rbx,QWORD PTR fs:0x28
  426d34:	mov    QWORD PTR [rsp+0x98],rbx
  426d3c:	xor    ebx,ebx
  426d3e:	test   dx,dx
  426d41:	je     426da0 <flatcc_builder_default_alloc@@Base+0x1a0>
  426d43:	mov    eax,edx
  426d45:	movzx  edx,dx
  426d48:	movzx  edi,WORD PTR [rsi]
  426d4b:	cmp    di,0x3
  426d4f:	ja     426d5e <flatcc_builder_default_alloc@@Base+0x15e>
  426d51:	mov    edi,0x4
  426d56:	mov    WORD PTR [rsi],di
  426d59:	mov    edi,0x4
  426d5e:	cmp    ax,di
  426d61:	jbe    426d66 <flatcc_builder_default_alloc@@Base+0x166>
  426d63:	mov    WORD PTR [rsi],ax
  426d66:	test   ecx,ecx
  426d68:	jne    426d78 <flatcc_builder_default_alloc@@Base+0x178>
  426d6a:	mov    ebx,DWORD PTR [r9+0xf4]
  426d71:	sub    edx,0x1
  426d74:	and    edx,ebx
  426d76:	jne    426dc0 <flatcc_builder_default_alloc@@Base+0x1c0>
  426d78:	xor    eax,eax
  426d7a:	mov    rbx,QWORD PTR [rsp+0x98]
  426d82:	xor    rbx,QWORD PTR fs:0x28
  426d8b:	jne    426e2d <flatcc_builder_default_alloc@@Base+0x22d>
  426d91:	add    rsp,0xa0
  426d98:	pop    rbx
  426d99:	ret    
  426d9a:	nop    WORD PTR [rax+rax*1+0x0]
  426da0:	movzx  eax,WORD PTR [rdi+0xec]
  426da7:	test   ax,ax
  426daa:	movzx  edx,ax
  426dad:	jne    426d48 <flatcc_builder_default_alloc@@Base+0x148>
  426daf:	mov    edx,0x1
  426db4:	mov    eax,0x1
  426db9:	jmp    426d48 <flatcc_builder_default_alloc@@Base+0x148>
  426dbb:	nop    DWORD PTR [rax+rax*1+0x0]
  426dc0:	mov    rax,0x449be0
  426dc7:	movsxd r8,edx
  426dca:	add    edx,ebx
  426dcc:	cmp    ebx,edx
  426dce:	mov    QWORD PTR [rsp],r8
  426dd2:	mov    QWORD PTR [rsp+0x18],r8
  426dd7:	mov    DWORD PTR [rsp+0x8],0x1
  426ddf:	mov    DWORD PTR [r9+0xf4],edx
  426de6:	mov    QWORD PTR [rsp+0x10],rax
  426deb:	jg     426e32 <flatcc_builder_default_alloc@@Base+0x232>
  426ded:	lea    rsi,[rsp+0x10]
  426df2:	mov    rdi,QWORD PTR [r9+0x38]
  426df6:	mov    ecx,ebx
  426df8:	mov    edx,0x1
  426dfd:	call   QWORD PTR [r9+0x48]
  426e01:	test   eax,eax
  426e03:	jne    426e37 <flatcc_builder_default_alloc@@Base+0x237>
  426e05:	cmp    ebx,0xffffffff
  426e08:	jne    426d78 <flatcc_builder_default_alloc@@Base+0x178>
  426e0e:	lea    rcx,[rip+0x22d3b]        # 449b50 <fb_schema_table_missing@@Base+0x37e0>
  426e15:	lea    rsi,[rip+0x222d4]        # 4490f0 <fb_schema_table_missing@@Base+0x2d80>
  426e1c:	lea    rdi,[rip+0x10406]        # 437229 <_IO_stdin_used@@Base+0xa229>
  426e23:	mov    edx,0x2be
  426e28:	call   405100 <__assert_fail@plt>
  426e2d:	call   4050d0 <__stack_chk_fail@plt>
  426e32:	call   4052ef <__sprintf_chk@plt+0xcf>
  426e37:	lea    rcx,[rip+0x22d02]        # 449b40 <fb_schema_table_missing@@Base+0x37d0>
  426e3e:	lea    rsi,[rip+0x222ab]        # 4490f0 <fb_schema_table_missing@@Base+0x2d80>
  426e45:	lea    rdi,[rip+0x103dd]        # 437229 <_IO_stdin_used@@Base+0xa229>
  426e4c:	mov    edx,0x2a5
  426e51:	call   405100 <__assert_fail@plt>
  426e56:	nop    WORD PTR cs:[rax+rax*1+0x0]
  426e60:	push   r12
  426e62:	push   rbp
  426e63:	mov    r12d,esi
  426e66:	push   rbx
  426e67:	movsxd rax,DWORD PTR [rdi+0x104]
  426e6e:	mov    rbx,rdi
  426e71:	lea    edx,[rax+0x1]
  426e74:	cmp    edx,DWORD PTR [rdi+0x108]
  426e7a:	mov    DWORD PTR [rdi+0x104],edx
  426e80:	jle    426f00 <flatcc_builder_default_alloc@@Base+0x300>
  426e82:	mov    ecx,DWORD PTR [rdi+0x120]
  426e88:	test   ecx,ecx
  426e8a:	jle    426e94 <flatcc_builder_default_alloc@@Base+0x294>
  426e8c:	cmp    edx,ecx
  426e8e:	jg     426f80 <flatcc_builder_default_alloc@@Base+0x380>
  426e94:	lea    rcx,[rax+rax*8]
  426e98:	lea    rbp,[rcx*4+0x0]
  426ea0:	lea    rdx,[rbp+0x24]
  426ea4:	cmp    rdx,QWORD PTR [rbx+0xa0]
  426eab:	ja     426f58 <flatcc_builder_default_alloc@@Base+0x358>
  426eb1:	mov    rcx,rbp
  426eb4:	add    rcx,QWORD PTR [rbx+0x98]
  426ebb:	test   rcx,rcx
  426ebe:	mov    QWORD PTR [rbx+0x30],rcx
  426ec2:	je     426f80 <flatcc_builder_default_alloc@@Base+0x380>
  426ec8:	movabs rdx,0xe38e38e38e38e38f
  426ed2:	mov    rax,rdx
  426ed5:	mul    QWORD PTR [rbx+0xa0]
  426edc:	mov    eax,DWORD PTR [rbx+0x120]
  426ee2:	shr    rdx,0x5
  426ee6:	test   eax,eax
  426ee8:	mov    DWORD PTR [rbx+0x108],edx
  426eee:	jle    426f50 <flatcc_builder_default_alloc@@Base+0x350>
  426ef0:	cmp    eax,edx
  426ef2:	jge    426f50 <flatcc_builder_default_alloc@@Base+0x350>
  426ef4:	mov    DWORD PTR [rbx+0x108],eax
  426efa:	mov    rax,rcx
  426efd:	jmp    426f0c <flatcc_builder_default_alloc@@Base+0x30c>
  426eff:	nop
  426f00:	mov    rax,QWORD PTR [rdi+0x30]
  426f04:	add    rax,0x24
  426f08:	mov    QWORD PTR [rdi+0x30],rax
  426f0c:	movzx  edx,WORD PTR [rbx+0xea]
  426f13:	mov    ecx,DWORD PTR [rbx+0x20]
  426f16:	mov    DWORD PTR [rax+0x8],ecx
  426f19:	mov    WORD PTR [rax+0xc],dx
  426f1d:	mov    edx,DWORD PTR [rbx+0x28]
  426f20:	mov    WORD PTR [rbx+0xea],r12w
  426f28:	mov    DWORD PTR [rax+0x4],0xfffffffc
  426f2f:	mov    DWORD PTR [rax],edx
  426f31:	lea    eax,[rcx+rdx*1+0x7]
  426f35:	mov    DWORD PTR [rbx+0x20],0x0
  426f3c:	and    eax,0xfffffff8
  426f3f:	mov    DWORD PTR [rbx+0x28],eax
  426f42:	xor    eax,eax
  426f44:	pop    rbx
  426f45:	pop    rbp
  426f46:	pop    r12
  426f48:	ret    
  426f49:	nop    DWORD PTR [rax+0x0]
  426f50:	mov    rax,rcx
  426f53:	jmp    426f0c <flatcc_builder_default_alloc@@Base+0x30c>
  426f55:	nop    DWORD PTR [rax]
  426f58:	xor    ecx,ecx
  426f5a:	lea    rsi,[rbx+0x98]
  426f61:	mov    rdi,QWORD PTR [rbx+0x40]
  426f65:	mov    r8d,0x4
  426f6b:	call   QWORD PTR [rbx+0x50]
  426f6e:	test   eax,eax
  426f70:	je     426eb1 <flatcc_builder_default_alloc@@Base+0x2b1>
  426f76:	call   4052cc <__sprintf_chk@plt+0xac>
  426f7b:	nop    DWORD PTR [rax+rax*1+0x0]
  426f80:	mov    eax,0xffffffff
  426f85:	jmp    426f44 <flatcc_builder_default_alloc@@Base+0x344>
  426f87:	nop    WORD PTR [rax+rax*1+0x0]
  426f90:	push   rbp
  426f91:	push   rbx
  426f92:	sub    rsp,0xb8
  426f99:	mov    rax,QWORD PTR fs:0x28
  426fa2:	mov    QWORD PTR [rsp+0xa8],rax
  426faa:	xor    eax,eax
  426fac:	cmp    edx,0x3fffffff
  426fb2:	ja     427148 <flatcc_builder_default_alloc@@Base+0x548>
  426fb8:	cmp    WORD PTR [rdi+0xe8],0x3
  426fc0:	mov    rbx,rdi
  426fc3:	mov    r10d,edx
  426fc6:	ja     426fd4 <flatcc_builder_default_alloc@@Base+0x3d4>
  426fc8:	mov    eax,0x4
  426fcd:	mov    WORD PTR [rdi+0xe8],ax
  426fd4:	mov    eax,DWORD PTR [rbx+0xf0]
  426fda:	lea    r9d,[rdx*4+0x0]
  426fe2:	lea    r8,[rsp+0xc]
  426fe7:	mov    DWORD PTR [rsp+0xc],edx
  426feb:	mov    QWORD PTR [rsp+0x10],0x4
  426ff4:	mov    QWORD PTR [rsp+0x20],r8
  426ff9:	mov    QWORD PTR [rsp+0x28],0x4
  427002:	mov    r8d,0x4
  427008:	mov    edi,eax
  42700a:	mov    DWORD PTR [rsp+0x18],0x1
  427012:	and    edi,0x3
  427015:	test   r9d,r9d
  427018:	je     427035 <flatcc_builder_default_alloc@@Base+0x435>
  42701a:	lea    r8,[r9+0x4]
  42701e:	mov    QWORD PTR [rsp+0x30],rsi
  427023:	mov    QWORD PTR [rsp+0x38],r9
  427028:	mov    DWORD PTR [rsp+0x18],0x2
  427030:	mov    QWORD PTR [rsp+0x10],r8
  427035:	test   edi,edi
  427037:	jne    427110 <flatcc_builder_default_alloc@@Base+0x510>
  42703d:	mov    r11d,eax
  427040:	sub    r11d,r8d
  427043:	test   edx,edx
  427045:	je     4270b6 <flatcc_builder_default_alloc@@Base+0x4b6>
  427047:	mov    edx,0xfffffffc
  42704c:	xor    eax,eax
  42704e:	jmp    427077 <flatcc_builder_default_alloc@@Base+0x477>
  427050:	mov    r9d,edx
  427053:	sub    r9d,r11d
  427056:	add    edi,r9d
  427059:	test   rcx,rcx
  42705c:	mov    DWORD PTR [rsi+rax*4],edi
  42705f:	je     42706b <flatcc_builder_default_alloc@@Base+0x46b>
  427061:	cmp    BYTE PTR [rcx+rax*1],0x0
  427065:	je     42716b <flatcc_builder_default_alloc@@Base+0x56b>
  42706b:	add    rax,0x1
  42706f:	sub    edx,0x4
  427072:	cmp    r10d,eax
  427075:	jbe    4270b0 <flatcc_builder_default_alloc@@Base+0x4b0>
  427077:	mov    edi,DWORD PTR [rsi+rax*4]
  42707a:	test   edi,edi
  42707c:	jne    427050 <flatcc_builder_default_alloc@@Base+0x450>
  42707e:	test   rcx,rcx
  427081:	je     42714c <flatcc_builder_default_alloc@@Base+0x54c>
  427087:	cmp    BYTE PTR [rcx+rax*1],0x0
  42708b:	je     42706b <flatcc_builder_default_alloc@@Base+0x46b>
  42708d:	lea    rcx,[rip+0x2271c]        # 4497b0 <fb_schema_table_missing@@Base+0x3440>
  427094:	lea    rsi,[rip+0x22055]        # 4490f0 <fb_schema_table_missing@@Base+0x2d80>
  42709b:	lea    rdi,[rip+0x223e7]        # 449489 <fb_schema_table_missing@@Base+0x3119>
  4270a2:	mov    edx,0x5b5
  4270a7:	call   405100 <__assert_fail@plt>
  4270ac:	nop    DWORD PTR [rax+0x0]
  4270b0:	mov    eax,DWORD PTR [rbx+0xf0]
  4270b6:	mov    ebp,eax
  4270b8:	sub    ebp,r8d
  4270bb:	cmp    ebp,eax
  4270bd:	jge    42718a <flatcc_builder_default_alloc@@Base+0x58a>
  4270c3:	lea    rsi,[rsp+0x20]
  4270c8:	mov    rdi,QWORD PTR [rbx+0x38]
  4270cc:	mov    ecx,ebp
  4270ce:	mov    edx,DWORD PTR [rsp+0x18]
  4270d2:	call   QWORD PTR [rbx+0x48]
  4270d5:	test   eax,eax
  4270d7:	jne    4271ae <flatcc_builder_default_alloc@@Base+0x5ae>
  4270dd:	mov    DWORD PTR [rbx+0xf0],ebp
  4270e3:	mov    rbx,QWORD PTR [rsp+0xa8]
  4270eb:	xor    rbx,QWORD PTR fs:0x28
  4270f4:	mov    eax,ebp
  4270f6:	jne    4271a9 <flatcc_builder_default_alloc@@Base+0x5a9>
  4270fc:	add    rsp,0xb8
  427103:	pop    rbx
  427104:	pop    rbp
  427105:	ret    
  427106:	nop    WORD PTR cs:[rax+rax*1+0x0]
  427110:	movsxd r11,DWORD PTR [rsp+0x18]
  427115:	mov    rbp,0x449be0
  42711c:	add    r8,rdi
  42711f:	mov    QWORD PTR [rsp+0x10],r8
  427124:	mov    r9,r11
  427127:	shl    r11,0x4
  42712b:	add    r9d,0x1
  42712f:	mov    QWORD PTR [rsp+r11*1+0x20],rbp
  427134:	mov    QWORD PTR [rsp+r11*1+0x28],rdi
  427139:	mov    DWORD PTR [rsp+0x18],r9d
  42713e:	jmp    42703d <flatcc_builder_default_alloc@@Base+0x43d>
  427143:	nop    DWORD PTR [rax+rax*1+0x0]
  427148:	xor    ebp,ebp
  42714a:	jmp    4270e3 <flatcc_builder_default_alloc@@Base+0x4e3>
  42714c:	lea    rcx,[rip+0x2265d]        # 4497b0 <fb_schema_table_missing@@Base+0x3440>
  427153:	lea    rsi,[rip+0x21f96]        # 4490f0 <fb_schema_table_missing@@Base+0x2d80>
  42715a:	lea    rdi,[rip+0x100c8]        # 437229 <_IO_stdin_used@@Base+0xa229>
  427161:	mov    edx,0x5b7
  427166:	call   405100 <__assert_fail@plt>
  42716b:	lea    rcx,[rip+0x2263e]        # 4497b0 <fb_schema_table_missing@@Base+0x3440>
  427172:	lea    rsi,[rip+0x21f77]        # 4490f0 <fb_schema_table_missing@@Base+0x2d80>
  427179:	lea    rdi,[rip+0x222fb]        # 44947b <fb_schema_table_missing@@Base+0x310b>
  427180:	mov    edx,0x5b1
  427185:	call   405100 <__assert_fail@plt>
  42718a:	lea    rcx,[rip+0x2299f]        # 449b30 <fb_schema_table_missing@@Base+0x37c0>
  427191:	lea    rsi,[rip+0x21f58]        # 4490f0 <fb_schema_table_missing@@Base+0x2d80>
  427198:	lea    rdi,[rip+0x1008a]        # 437229 <_IO_stdin_used@@Base+0xa229>
  42719f:	mov    edx,0x287
  4271a4:	call   405100 <__assert_fail@plt>
  4271a9:	call   4050d0 <__stack_chk_fail@plt>
  4271ae:	call   405312 <__sprintf_chk@plt+0xf2>
  4271b3:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4271be:	xchg   ax,ax

00000000004271c0 <flatcc_builder_flush_vtable_cache@@Base>:
  4271c0:	cmp    QWORD PTR [rdi+0xd8],0x0
  4271c8:	jne    4271d0 <flatcc_builder_flush_vtable_cache@@Base+0x10>
  4271ca:	ret    
  4271cb:	nop    DWORD PTR [rax+rax*1+0x0]
  4271d0:	push   rbx
  4271d1:	mov    rbx,rdi
  4271d4:	mov    rdi,QWORD PTR [rdi+0xa8]
  4271db:	mov    rdx,QWORD PTR [rbx+0xb0]
  4271e2:	xor    esi,esi
  4271e4:	call   405110 <memset@plt>
  4271e9:	mov    DWORD PTR [rbx+0xe4],0x10
  4271f3:	mov    DWORD PTR [rbx+0xe0],0x0
  4271fd:	pop    rbx
  4271fe:	ret    
  4271ff:	nop

0000000000427200 <flatcc_builder_custom_init@@Base>:
  427200:	mov    QWORD PTR [rdi],0x0
  427207:	mov    QWORD PTR [rdi+0x180],0x0
  427212:	mov    r9,rdi
  427215:	lea    rdi,[rdi+0x8]
  427219:	mov    r10,rcx
  42721c:	mov    rcx,r9
  42721f:	xor    eax,eax
  427221:	and    rdi,0xfffffffffffffff8
  427225:	sub    rcx,rdi
  427228:	add    ecx,0x188
  42722e:	shr    ecx,0x3
  427231:	test   rsi,rsi
  427234:	rep stos QWORD PTR es:[rdi],rax
  427237:	je     427268 <flatcc_builder_custom_init@@Base+0x68>
  427239:	test   r10,r10
  42723c:	je     427258 <flatcc_builder_custom_init@@Base+0x58>
  42723e:	mov    QWORD PTR [r9+0x40],r8
  427242:	mov    QWORD PTR [r9+0x50],r10
  427246:	xor    eax,eax
  427248:	mov    QWORD PTR [r9+0x38],rdx
  42724c:	mov    QWORD PTR [r9+0x48],rsi
  427250:	ret    
  427251:	nop    DWORD PTR [rax+0x0]
  427258:	mov    r10,0x426c00
  42725f:	jmp    42723e <flatcc_builder_custom_init@@Base+0x3e>
  427261:	nop    DWORD PTR [rax+0x0]
  427268:	mov    DWORD PTR [r9+0x128],0x1
  427273:	lea    rdx,[r9+0x130]
  42727a:	mov    rsi,0x42acb0
  427281:	jmp    427239 <flatcc_builder_custom_init@@Base+0x39>
  427283:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  42728e:	xchg   ax,ax

0000000000427290 <flatcc_builder_init@@Base>:
  427290:	xor    r8d,r8d
  427293:	xor    ecx,ecx
  427295:	xor    edx,edx
  427297:	xor    esi,esi
  427299:	jmp    427200 <flatcc_builder_custom_init@@Base>
  42729e:	xchg   ax,ax

00000000004272a0 <flatcc_builder_custom_reset@@Base>:
  4272a0:	push   r14
  4272a2:	mov    r14d,esi
  4272a5:	push   r13
  4272a7:	mov    r13d,edx
  4272aa:	push   r12
  4272ac:	mov    r12,rdi
  4272af:	push   rbp
  4272b0:	xor    ebp,ebp
  4272b2:	push   rbx
  4272b3:	lea    rbx,[rdi+0x58]
  4272b7:	jmp    427306 <flatcc_builder_custom_reset@@Base+0x66>
  4272b9:	nop    DWORD PTR [rax+0x0]
  4272c0:	cmp    ebp,0x5
  4272c3:	je     4272ef <flatcc_builder_custom_reset@@Base+0x4f>
  4272c5:	test   r13d,r13d
  4272c8:	je     4272ef <flatcc_builder_custom_reset@@Base+0x4f>
  4272ca:	mov    rdi,QWORD PTR [r12+0x40]
  4272cf:	mov    r8d,ebp
  4272d2:	mov    ecx,0x1
  4272d7:	mov    edx,0x1
  4272dc:	mov    rsi,rbx
  4272df:	call   QWORD PTR [r12+0x50]
  4272e4:	test   eax,eax
  4272e6:	jne    427440 <flatcc_builder_custom_reset@@Base+0x1a0>
  4272ec:	mov    rdi,QWORD PTR [rbx]
  4272ef:	mov    rdx,QWORD PTR [rbx+0x8]
  4272f3:	xor    esi,esi
  4272f5:	call   405110 <memset@plt>
  4272fa:	add    ebp,0x1
  4272fd:	add    rbx,0x10
  427301:	cmp    ebp,0x8
  427304:	je     427338 <flatcc_builder_custom_reset@@Base+0x98>
  427306:	mov    rdi,QWORD PTR [rbx]
  427309:	test   rdi,rdi
  42730c:	jne    4272c0 <flatcc_builder_custom_reset@@Base+0x20>
  42730e:	cmp    QWORD PTR [rbx+0x8],0x0
  427313:	je     4272fa <flatcc_builder_custom_reset@@Base+0x5a>
  427315:	lea    rcx,[rip+0x228a4]        # 449bc0 <fb_schema_table_missing@@Base+0x3850>
  42731c:	lea    rsi,[rip+0x21dcd]        # 4490f0 <fb_schema_table_missing@@Base+0x2d80>
  427323:	lea    rdi,[rip+0x2216d]        # 449497 <fb_schema_table_missing@@Base+0x3127>
  42732a:	mov    edx,0x1b2
  42732f:	call   405100 <__assert_fail@plt>
  427334:	nop    DWORD PTR [rax+0x0]
  427338:	mov    edx,DWORD PTR [r12+0xe4]
  427340:	mov    DWORD PTR [r12+0xe0],0x0
  42734c:	test   edx,edx
  42734e:	je     42735c <flatcc_builder_custom_reset@@Base+0xbc>
  427350:	mov    DWORD PTR [r12+0xe4],0x10
  42735c:	xor    eax,eax
  42735e:	test   r14d,r14d
  427361:	mov    DWORD PTR [r12+0xf0],0x0
  42736d:	mov    WORD PTR [r12+0xe8],ax
  427376:	mov    rax,QWORD PTR [r12+0x68]
  42737b:	mov    DWORD PTR [r12+0xf4],0x0
  427387:	mov    DWORD PTR [r12+0x104],0x0
  427393:	mov    DWORD PTR [r12+0x108],0x0
  42739f:	mov    DWORD PTR [r12+0x20],0x0
  4273a8:	mov    QWORD PTR [r12+0x18],rax
  4273ad:	mov    rax,QWORD PTR [r12+0x88]
  4273b5:	mov    DWORD PTR [r12+0x24],0x0
  4273be:	mov    DWORD PTR [r12+0xfc],0x0
  4273ca:	mov    DWORD PTR [r12+0x100],0x0
  4273d6:	mov    QWORD PTR [r12+0x30],0x0
  4273df:	mov    QWORD PTR [r12],rax
  4273e3:	mov    rax,QWORD PTR [r12+0x58]
  4273e8:	mov    QWORD PTR [r12+0x8],rax
  4273ed:	jne    427418 <flatcc_builder_custom_reset@@Base+0x178>
  4273ef:	mov    eax,DWORD PTR [r12+0x128]
  4273f7:	test   eax,eax
  4273f9:	je     42740a <flatcc_builder_custom_reset@@Base+0x16a>
  4273fb:	lea    rdi,[r12+0x130]
  427403:	call   42ab40 <flatcc_emitter_reset@@Base>
  427408:	xor    eax,eax
  42740a:	pop    rbx
  42740b:	pop    rbp
  42740c:	pop    r12
  42740e:	pop    r13
  427410:	pop    r14
  427412:	ret    
  427413:	nop    DWORD PTR [rax+rax*1+0x0]
  427418:	mov    QWORD PTR [r12+0x118],0x0
  427424:	mov    DWORD PTR [r12+0x120],0x0
  427430:	mov    DWORD PTR [r12+0x124],0x0
  42743c:	jmp    4273ef <flatcc_builder_custom_reset@@Base+0x14f>
  42743e:	xchg   ax,ax
  427440:	mov    eax,0xffffffff
  427445:	jmp    42740a <flatcc_builder_custom_reset@@Base+0x16a>
  427447:	nop    WORD PTR [rax+rax*1+0x0]

0000000000427450 <flatcc_builder_reset@@Base>:
  427450:	xor    edx,edx
  427452:	xor    esi,esi
  427454:	jmp    4272a0 <flatcc_builder_custom_reset@@Base>
  427459:	nop    DWORD PTR [rax+0x0]

0000000000427460 <flatcc_builder_clear@@Base>:
  427460:	push   r12
  427462:	lea    r12,[rdi+0x58]
  427466:	push   rbp
  427467:	xor    ebp,ebp
  427469:	push   rbx
  42746a:	mov    rbx,rdi
  42746d:	nop    DWORD PTR [rax]
  427470:	mov    r8d,ebp
  427473:	add    ebp,0x1
  427476:	xor    ecx,ecx
  427478:	xor    edx,edx
  42747a:	mov    rsi,r12
  42747d:	mov    rdi,QWORD PTR [rbx+0x40]
  427481:	add    r12,0x10
  427485:	call   QWORD PTR [rbx+0x50]
  427488:	cmp    ebp,0x8
  42748b:	jne    427470 <flatcc_builder_clear@@Base+0x10>
  42748d:	mov    eax,DWORD PTR [rbx+0x128]
  427493:	test   eax,eax
  427495:	je     4274a3 <flatcc_builder_clear@@Base+0x43>
  427497:	lea    rdi,[rbx+0x130]
  42749e:	call   42ac20 <flatcc_emitter_clear@@Base>
  4274a3:	lea    rdi,[rbx+0x8]
  4274a7:	mov    QWORD PTR [rbx],0x0
  4274ae:	mov    QWORD PTR [rbx+0x180],0x0
  4274b9:	xor    eax,eax
  4274bb:	and    rdi,0xfffffffffffffff8
  4274bf:	sub    rbx,rdi
  4274c2:	lea    ecx,[rbx+0x188]
  4274c8:	shr    ecx,0x3
  4274cb:	rep stos QWORD PTR es:[rdi],rax
  4274ce:	pop    rbx
  4274cf:	pop    rbp
  4274d0:	pop    r12
  4274d2:	ret    
  4274d3:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4274de:	xchg   ax,ax

00000000004274e0 <flatcc_builder_enter_user_frame_ptr@@Base>:
  4274e0:	push   r12
  4274e2:	push   rbp
  4274e3:	mov    r12,rdi
  4274e6:	push   rbx
  4274e7:	lea    rbx,[rsi+0x7]
  4274eb:	mov    rbp,QWORD PTR [rdi+0x180]
  4274f2:	and    rbx,0xfffffffffffffff8
  4274f6:	add    rbx,0x8
  4274fa:	lea    rdx,[rbx+rbp*1]
  4274fe:	cmp    rdx,QWORD PTR [rdi+0xd0]
  427505:	ja     427558 <flatcc_builder_enter_user_frame_ptr@@Base+0x78>
  427507:	add    rbp,QWORD PTR [r12+0xc8]
  42750f:	je     427580 <flatcc_builder_enter_user_frame_ptr@@Base+0xa0>
  427511:	mov    rdx,rbx
  427514:	xor    esi,esi
  427516:	mov    rdi,rbp
  427519:	call   405110 <memset@plt>
  42751e:	mov    rax,QWORD PTR [r12+0x178]
  427526:	mov    QWORD PTR [rbp+0x0],rax
  42752a:	mov    rax,QWORD PTR [r12+0x180]
  427532:	lea    rdx,[rax+0x8]
  427536:	add    rbx,rax
  427539:	lea    rax,[rbp+0x8]
  42753d:	mov    QWORD PTR [r12+0x180],rbx
  427545:	mov    QWORD PTR [r12+0x178],rdx
  42754d:	pop    rbx
  42754e:	pop    rbp
  42754f:	pop    r12
  427551:	ret    
  427552:	nop    WORD PTR [rax+rax*1+0x0]
  427558:	lea    rsi,[rdi+0xc8]
  42755f:	xor    ecx,ecx
  427561:	mov    rdi,QWORD PTR [rdi+0x40]
  427565:	mov    r8d,0x7
  42756b:	call   QWORD PTR [r12+0x50]
  427570:	test   eax,eax
  427572:	je     427507 <flatcc_builder_enter_user_frame_ptr@@Base+0x27>
  427574:	call   4052cc <__sprintf_chk@plt+0xac>
  427579:	nop    DWORD PTR [rax+0x0]
  427580:	xor    eax,eax
  427582:	jmp    42754d <flatcc_builder_enter_user_frame_ptr@@Base+0x6d>
  427584:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  42758f:	nop

0000000000427590 <flatcc_builder_enter_user_frame@@Base>:
  427590:	push   r12
  427592:	push   rbp
  427593:	mov    r12,rdi
  427596:	push   rbx
  427597:	lea    rbx,[rsi+0x7]
  42759b:	mov    rbp,QWORD PTR [rdi+0x180]
  4275a2:	and    rbx,0xfffffffffffffff8
  4275a6:	add    rbx,0x8
  4275aa:	lea    rdx,[rbx+rbp*1]
  4275ae:	cmp    rdx,QWORD PTR [rdi+0xd0]
  4275b5:	ja     427600 <flatcc_builder_enter_user_frame@@Base+0x70>
  4275b7:	xor    eax,eax
  4275b9:	add    rbp,QWORD PTR [r12+0xc8]
  4275c1:	je     4275fb <flatcc_builder_enter_user_frame@@Base+0x6b>
  4275c3:	mov    rdx,rbx
  4275c6:	xor    esi,esi
  4275c8:	mov    rdi,rbp
  4275cb:	call   405110 <memset@plt>
  4275d0:	mov    rax,QWORD PTR [r12+0x178]
  4275d8:	mov    QWORD PTR [rbp+0x0],rax
  4275dc:	mov    rdx,QWORD PTR [r12+0x180]
  4275e4:	lea    rax,[rdx+0x8]
  4275e8:	add    rbx,rdx
  4275eb:	mov    QWORD PTR [r12+0x180],rbx
  4275f3:	mov    QWORD PTR [r12+0x178],rax
  4275fb:	pop    rbx
  4275fc:	pop    rbp
  4275fd:	pop    r12
  4275ff:	ret    
  427600:	lea    rsi,[rdi+0xc8]
  427607:	xor    ecx,ecx
  427609:	mov    rdi,QWORD PTR [rdi+0x40]
  42760d:	mov    r8d,0x7
  427613:	call   QWORD PTR [r12+0x50]
  427618:	test   eax,eax
  42761a:	je     4275b7 <flatcc_builder_enter_user_frame@@Base+0x27>
  42761c:	call   4052cc <__sprintf_chk@plt+0xac>
  427621:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  42762c:	nop    DWORD PTR [rax+0x0]

0000000000427630 <flatcc_builder_exit_user_frame@@Base>:
  427630:	mov    rax,QWORD PTR [rdi+0x178]
  427637:	test   rax,rax
  42763a:	je     42765c <flatcc_builder_exit_user_frame@@Base+0x2c>
  42763c:	mov    edx,eax
  42763e:	add    rdx,QWORD PTR [rdi+0xc8]
  427645:	sub    rax,0x8
  427649:	mov    QWORD PTR [rdi+0x180],rax
  427650:	mov    rax,QWORD PTR [rdx-0x8]
  427654:	mov    QWORD PTR [rdi+0x178],rax
  42765b:	ret    
  42765c:	lea    rcx,[rip+0x2252d]        # 449b90 <fb_schema_table_missing@@Base+0x3820>
  427663:	lea    rsi,[rip+0x21a86]        # 4490f0 <fb_schema_table_missing@@Base+0x2d80>
  42766a:	lea    rdi,[rip+0x21e38]        # 4494a9 <fb_schema_table_missing@@Base+0x3139>
  427671:	sub    rsp,0x8
  427675:	mov    edx,0x21e
  42767a:	call   405100 <__assert_fail@plt>
  42767f:	nop

0000000000427680 <flatcc_builder_exit_user_frame_at@@Base>:
  427680:	cmp    QWORD PTR [rdi+0x178],rsi
  427687:	jb     427695 <flatcc_builder_exit_user_frame_at@@Base+0x15>
  427689:	mov    QWORD PTR [rdi+0x178],rsi
  427690:	jmp    427630 <flatcc_builder_exit_user_frame@@Base>
  427695:	lea    rcx,[rip+0x224c4]        # 449b60 <fb_schema_table_missing@@Base+0x37f0>
  42769c:	lea    rsi,[rip+0x21a4d]        # 4490f0 <fb_schema_table_missing@@Base+0x2d80>
  4276a3:	lea    rdi,[rip+0x21aa6]        # 449150 <fb_schema_table_missing@@Base+0x2de0>
  4276aa:	sub    rsp,0x8
  4276ae:	mov    edx,0x227
  4276b3:	call   405100 <__assert_fail@plt>
  4276b8:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004276c0 <flatcc_builder_get_current_user_frame@@Base>:
  4276c0:	mov    rax,QWORD PTR [rdi+0x178]
  4276c7:	ret    
  4276c8:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004276d0 <flatcc_builder_get_user_frame_ptr@@Base>:
  4276d0:	mov    eax,esi
  4276d2:	add    rax,QWORD PTR [rdi+0xc8]
  4276d9:	ret    
  4276da:	nop    WORD PTR [rax+rax*1+0x0]

00000000004276e0 <flatcc_builder_embed_buffer@@Base>:
  4276e0:	push   r13
  4276e2:	push   r12
  4276e4:	mov    r12,rcx
  4276e7:	push   rbp
  4276e8:	push   rbx
  4276e9:	xor    ecx,ecx
  4276eb:	mov    rbp,rdx
  4276ee:	movzx  edx,si
  4276f1:	mov    rbx,rdi
  4276f4:	sub    rsp,0xc8
  4276fb:	mov    r13d,r9d
  4276fe:	mov    WORD PTR [rsp+0xc],r8w
  427704:	mov    r8d,DWORD PTR [rdi+0x100]
  42770b:	lea    rsi,[rsp+0xc]
  427710:	mov    rax,QWORD PTR fs:0x28
  427719:	mov    QWORD PTR [rsp+0xb8],rax
  427721:	xor    eax,eax
  427723:	test   r8d,r8d
  427726:	setne  cl
  427729:	call   426d20 <flatcc_builder_default_alloc@@Base+0x120>
  42772e:	test   eax,eax
  427730:	jne    427878 <flatcc_builder_embed_buffer@@Base+0x198>
  427736:	mov    edx,DWORD PTR [rbx+0xf0]
  42773c:	movzx  ecx,WORD PTR [rsp+0xc]
  427741:	xor    esi,esi
  427743:	and    r13d,0x2
  427747:	mov    QWORD PTR [rsp+0x20],0x0
  427750:	mov    DWORD PTR [rsp+0x28],0x0
  427758:	setne  sil
  42775c:	xor    r8d,r8d
  42775f:	mov    eax,edx
  427761:	shl    esi,0x2
  427764:	sub    eax,r12d
  427767:	sub    ecx,0x1
  42776a:	sub    eax,esi
  42776c:	and    eax,ecx
  42776e:	lea    ecx,[rax+r12*1]
  427772:	mov    DWORD PTR [rsp+0x1c],ecx
  427776:	mov    ecx,DWORD PTR [rbx+0x100]
  42777c:	test   ecx,ecx
  42777e:	je     4277aa <flatcc_builder_embed_buffer@@Base+0xca>
  427780:	lea    rcx,[rsp+0x1c]
  427785:	mov    QWORD PTR [rsp+0x20],0x4
  42778e:	mov    QWORD PTR [rsp+0x38],0x4
  427797:	mov    DWORD PTR [rsp+0x28],0x1
  42779f:	mov    r8d,0x4
  4277a5:	mov    QWORD PTR [rsp+0x30],rcx
  4277aa:	test   r12,r12
  4277ad:	je     4277d4 <flatcc_builder_embed_buffer@@Base+0xf4>
  4277af:	movsxd rsi,DWORD PTR [rsp+0x28]
  4277b4:	add    r8,r12
  4277b7:	mov    QWORD PTR [rsp+0x20],r8
  4277bc:	mov    rcx,rsi
  4277bf:	shl    rsi,0x4
  4277c3:	add    ecx,0x1
  4277c6:	mov    QWORD PTR [rsp+rsi*1+0x30],rbp
  4277cb:	mov    QWORD PTR [rsp+rsi*1+0x38],r12
  4277d0:	mov    DWORD PTR [rsp+0x28],ecx
  4277d4:	test   eax,eax
  4277d6:	jne    427840 <flatcc_builder_embed_buffer@@Base+0x160>
  4277d8:	mov    ebp,edx
  4277da:	sub    ebp,r8d
  4277dd:	cmp    edx,ebp
  4277df:	jle    42787c <flatcc_builder_embed_buffer@@Base+0x19c>
  4277e5:	movabs rax,0x10000000f
  4277ef:	cmp    r8,rax
  4277f2:	ja     42787c <flatcc_builder_embed_buffer@@Base+0x19c>
  4277f8:	lea    rsi,[rsp+0x30]
  4277fd:	mov    rdi,QWORD PTR [rbx+0x38]
  427801:	mov    ecx,ebp
  427803:	mov    edx,DWORD PTR [rsp+0x28]
  427807:	call   QWORD PTR [rbx+0x48]
  42780a:	test   eax,eax
  42780c:	jne    4278a0 <flatcc_builder_embed_buffer@@Base+0x1c0>
  427812:	mov    DWORD PTR [rbx+0xf0],ebp
  427818:	mov    rdi,QWORD PTR [rsp+0xb8]
  427820:	xor    rdi,QWORD PTR fs:0x28
  427829:	mov    eax,ebp
  42782b:	jne    42789b <flatcc_builder_embed_buffer@@Base+0x1bb>
  42782d:	add    rsp,0xc8
  427834:	pop    rbx
  427835:	pop    rbp
  427836:	pop    r12
  427838:	pop    r13
  42783a:	ret    
  42783b:	nop    DWORD PTR [rax+rax*1+0x0]
  427840:	movsxd rsi,DWORD PTR [rsp+0x28]
  427845:	mov    rdi,0x449be0
  42784c:	add    r8,rax
  42784f:	mov    QWORD PTR [rsp+0x20],r8
  427854:	mov    rcx,rsi
  427857:	shl    rsi,0x4
  42785b:	add    ecx,0x1
  42785e:	mov    QWORD PTR [rsp+rsi*1+0x30],rdi
  427863:	mov    QWORD PTR [rsp+rsi*1+0x38],rax
  427868:	mov    DWORD PTR [rsp+0x28],ecx
  42786c:	jmp    4277d8 <flatcc_builder_embed_buffer@@Base+0xf8>
  427871:	nop    DWORD PTR [rax+0x0]
  427878:	xor    ebp,ebp
  42787a:	jmp    427818 <flatcc_builder_embed_buffer@@Base+0x138>
  42787c:	lea    rcx,[rip+0x222ad]        # 449b30 <fb_schema_table_missing@@Base+0x37c0>
  427883:	lea    rsi,[rip+0x21866]        # 4490f0 <fb_schema_table_missing@@Base+0x2d80>
  42788a:	lea    rdi,[rip+0xf998]        # 437229 <_IO_stdin_used@@Base+0xa229>
  427891:	mov    edx,0x287
  427896:	call   405100 <__assert_fail@plt>
  42789b:	call   4050d0 <__stack_chk_fail@plt>
  4278a0:	call   405312 <__sprintf_chk@plt+0xf2>
  4278a5:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

00000000004278b0 <flatcc_builder_create_buffer@@Base>:
  4278b0:	push   r14
  4278b2:	push   r13
  4278b4:	mov    r13d,r9d
  4278b7:	push   r12
  4278b9:	push   rbp
  4278ba:	and    r13d,0x1
  4278be:	push   rbx
  4278bf:	mov    r14,rsi
  4278c2:	mov    r12d,ecx
  4278c5:	movzx  edx,dx
  4278c8:	mov    ecx,r13d
  4278cb:	mov    rbp,rdi
  4278ce:	sub    rsp,0xc0
  4278d5:	mov    ebx,r9d
  4278d8:	lea    rsi,[rsp+0xc]
  4278dd:	mov    WORD PTR [rsp+0xc],r8w
  4278e3:	mov    DWORD PTR [rsp+0x1c],0x0
  4278eb:	mov    rax,QWORD PTR fs:0x28
  4278f4:	mov    QWORD PTR [rsp+0xb8],rax
  4278fc:	xor    eax,eax
  4278fe:	call   426d20 <flatcc_builder_default_alloc@@Base+0x120>
  427903:	test   eax,eax
  427905:	jne    427ac0 <flatcc_builder_create_buffer@@Base+0x210>
  42790b:	movzx  ecx,WORD PTR [rsp+0xc]
  427910:	cmp    cx,WORD PTR [rbp+0xe8]
  427917:	ja     427ab0 <flatcc_builder_create_buffer@@Base+0x200>
  42791d:	test   r14,r14
  427920:	mov    eax,DWORD PTR [rsp+0x1c]
  427924:	je     42792d <flatcc_builder_create_buffer@@Base+0x7d>
  427926:	mov    eax,DWORD PTR [r14]
  427929:	mov    DWORD PTR [rsp+0x1c],eax
  42792d:	xor    r10d,r10d
  427930:	test   eax,eax
  427932:	mov    edi,ebx
  427934:	setne  r10b
  427938:	and    edi,0x1
  42793b:	mov    edx,DWORD PTR [rbp+0xf0]
  427941:	shl    r10d,0x2
  427945:	and    ebx,0x2
  427948:	jne    427a78 <flatcc_builder_create_buffer@@Base+0x1c8>
  42794e:	lea    eax,[rdx-0x4]
  427951:	sub    ecx,0x1
  427954:	sub    eax,r10d
  427957:	and    eax,ecx
  427959:	test   dil,dil
  42795c:	jne    427a83 <flatcc_builder_create_buffer@@Base+0x1d3>
  427962:	mov    ecx,0x1
  427967:	mov    r8d,0x4
  42796d:	movsxd rsi,ebx
  427970:	lea    r9,[rsp+0x14]
  427975:	mov    QWORD PTR [rsp+0x20],r8
  42797a:	shl    rsi,0x4
  42797e:	test   r10d,r10d
  427981:	mov    DWORD PTR [rsp+0x28],ecx
  427985:	mov    QWORD PTR [rsp+rsi*1+0x30],r9
  42798a:	mov    QWORD PTR [rsp+rsi*1+0x38],0x4
  427993:	je     4279b7 <flatcc_builder_create_buffer@@Base+0x107>
  427995:	lea    rsi,[rsp+0x1c]
  42799a:	shl    rcx,0x4
  42799e:	add    r8,r10
  4279a1:	add    ebx,0x2
  4279a4:	mov    QWORD PTR [rsp+0x20],r8
  4279a9:	mov    QWORD PTR [rsp+rcx*1+0x38],r10
  4279ae:	mov    QWORD PTR [rsp+rcx*1+0x30],rsi
  4279b3:	mov    DWORD PTR [rsp+0x28],ebx
  4279b7:	test   eax,eax
  4279b9:	je     4279e7 <flatcc_builder_create_buffer@@Base+0x137>
  4279bb:	movsxd rsi,DWORD PTR [rsp+0x28]
  4279c0:	mov    r9,0x449be0
  4279c7:	add    r8,rax
  4279ca:	mov    QWORD PTR [rsp+0x20],r8
  4279cf:	mov    rcx,rsi
  4279d2:	shl    rsi,0x4
  4279d6:	add    ecx,0x1
  4279d9:	mov    QWORD PTR [rsp+rsi*1+0x30],r9
  4279de:	mov    QWORD PTR [rsp+rsi*1+0x38],rax
  4279e3:	mov    DWORD PTR [rsp+0x28],ecx
  4279e7:	mov    eax,edx
  4279e9:	sub    eax,r8d
  4279ec:	test   dil,dil
  4279ef:	je     427ac8 <flatcc_builder_create_buffer@@Base+0x218>
  4279f5:	add    eax,0x4
  4279f8:	test   r13d,r13d
  4279fb:	je     427ac8 <flatcc_builder_create_buffer@@Base+0x218>
  427a01:	mov    ecx,DWORD PTR [rbp+0xf8]
  427a07:	sub    ecx,eax
  427a09:	mov    DWORD PTR [rsp+0x18],ecx
  427a0d:	mov    ebx,edx
  427a0f:	sub    r12d,eax
  427a12:	sub    ebx,r8d
  427a15:	mov    DWORD PTR [rsp+0x14],r12d
  427a1a:	cmp    ebx,edx
  427a1c:	jge    427ad9 <flatcc_builder_create_buffer@@Base+0x229>
  427a22:	lea    rsi,[rsp+0x30]
  427a27:	mov    rdi,QWORD PTR [rbp+0x38]
  427a2b:	mov    ecx,ebx
  427a2d:	mov    edx,DWORD PTR [rsp+0x28]
  427a31:	call   QWORD PTR [rbp+0x48]
  427a34:	test   eax,eax
  427a36:	jne    427afd <flatcc_builder_create_buffer@@Base+0x24d>
  427a3c:	test   ebx,ebx
  427a3e:	mov    DWORD PTR [rbp+0xf0],ebx
  427a44:	je     427b02 <flatcc_builder_create_buffer@@Base+0x252>
  427a4a:	mov    rdi,QWORD PTR [rsp+0xb8]
  427a52:	xor    rdi,QWORD PTR fs:0x28
  427a5b:	mov    eax,ebx
  427a5d:	jne    427af8 <flatcc_builder_create_buffer@@Base+0x248>
  427a63:	add    rsp,0xc0
  427a6a:	pop    rbx
  427a6b:	pop    rbp
  427a6c:	pop    r12
  427a6e:	pop    r13
  427a70:	pop    r14
  427a72:	ret    
  427a73:	nop    DWORD PTR [rax+rax*1+0x0]
  427a78:	lea    eax,[rdx-0x8]
  427a7b:	sub    ecx,0x1
  427a7e:	sub    eax,r10d
  427a81:	and    eax,ecx
  427a83:	lea    rcx,[rsp+0x18]
  427a88:	mov    QWORD PTR [rsp+0x38],0x4
  427a91:	mov    ebx,0x1
  427a96:	mov    r8d,0x8
  427a9c:	mov    edi,0x1
  427aa1:	mov    QWORD PTR [rsp+0x30],rcx
  427aa6:	mov    ecx,0x2
  427aab:	jmp    42796d <flatcc_builder_create_buffer@@Base+0xbd>
  427ab0:	mov    WORD PTR [rbp+0xe8],cx
  427ab7:	jmp    42791d <flatcc_builder_create_buffer@@Base+0x6d>
  427abc:	nop    DWORD PTR [rax+0x0]
  427ac0:	xor    ebx,ebx
  427ac2:	jmp    427a4a <flatcc_builder_create_buffer@@Base+0x19a>
  427ac4:	nop    DWORD PTR [rax+0x0]
  427ac8:	mov    ecx,DWORD PTR [rbp+0xf4]
  427ace:	sub    ecx,eax
  427ad0:	mov    DWORD PTR [rsp+0x18],ecx
  427ad4:	jmp    427a0d <flatcc_builder_create_buffer@@Base+0x15d>
  427ad9:	lea    rcx,[rip+0x22050]        # 449b30 <fb_schema_table_missing@@Base+0x37c0>
  427ae0:	lea    rsi,[rip+0x21609]        # 4490f0 <fb_schema_table_missing@@Base+0x2d80>
  427ae7:	lea    rdi,[rip+0xf73b]        # 437229 <_IO_stdin_used@@Base+0xa229>
  427aee:	mov    edx,0x287
  427af3:	call   405100 <__assert_fail@plt>
  427af8:	call   4050d0 <__stack_chk_fail@plt>
  427afd:	call   405312 <__sprintf_chk@plt+0xf2>
  427b02:	lea    rcx,[rip+0x22007]        # 449b10 <fb_schema_table_missing@@Base+0x37a0>
  427b09:	lea    rsi,[rip+0x215e0]        # 4490f0 <fb_schema_table_missing@@Base+0x2d80>
  427b10:	lea    rdi,[rip+0xf712]        # 437229 <_IO_stdin_used@@Base+0xa229>
  427b17:	mov    edx,0x304
  427b1c:	call   405100 <__assert_fail@plt>
  427b21:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  427b2c:	nop    DWORD PTR [rax+0x0]

0000000000427b30 <flatcc_builder_create_struct@@Base>:
  427b30:	push   rbp
  427b31:	push   rbx
  427b32:	sub    rsp,0xa8
  427b39:	mov    rax,QWORD PTR fs:0x28
  427b42:	mov    QWORD PTR [rsp+0x98],rax
  427b4a:	xor    eax,eax
  427b4c:	test   cx,cx
  427b4f:	je     427c5f <flatcc_builder_create_struct@@Base+0x12f>
  427b55:	mov    rbx,rdi
  427b58:	mov    r8,rdx
  427b5b:	movzx  edi,cx
  427b5e:	cmp    cx,WORD PTR [rbx+0xe8]
  427b65:	jbe    427b6e <flatcc_builder_create_struct@@Base+0x3e>
  427b67:	mov    WORD PTR [rbx+0xe8],cx
  427b6e:	mov    edx,DWORD PTR [rbx+0xf0]
  427b74:	lea    ecx,[rdi-0x1]
  427b77:	mov    QWORD PTR [rsp],0x0
  427b7f:	mov    DWORD PTR [rsp+0x8],0x0
  427b87:	mov    eax,edx
  427b89:	sub    eax,r8d
  427b8c:	and    eax,ecx
  427b8e:	test   r8,r8
  427b91:	jne    427c20 <flatcc_builder_create_struct@@Base+0xf0>
  427b97:	test   eax,eax
  427b99:	je     427bc6 <flatcc_builder_create_struct@@Base+0x96>
  427b9b:	movsxd rsi,DWORD PTR [rsp+0x8]
  427ba0:	mov    rdi,0x449be0
  427ba7:	add    r8,rax
  427baa:	mov    QWORD PTR [rsp],r8
  427bae:	mov    rcx,rsi
  427bb1:	shl    rsi,0x4
  427bb5:	add    ecx,0x1
  427bb8:	mov    QWORD PTR [rsp+rsi*1+0x10],rdi
  427bbd:	mov    QWORD PTR [rsp+rsi*1+0x18],rax
  427bc2:	mov    DWORD PTR [rsp+0x8],ecx
  427bc6:	mov    ebp,edx
  427bc8:	movabs rax,0x10000000f
  427bd2:	sub    ebp,r8d
  427bd5:	cmp    r8,rax
  427bd8:	ja     427c3b <flatcc_builder_create_struct@@Base+0x10b>
  427bda:	cmp    edx,ebp
  427bdc:	jle    427c3b <flatcc_builder_create_struct@@Base+0x10b>
  427bde:	lea    rsi,[rsp+0x10]
  427be3:	mov    rdi,QWORD PTR [rbx+0x38]
  427be7:	mov    ecx,ebp
  427be9:	mov    edx,DWORD PTR [rsp+0x8]
  427bed:	call   QWORD PTR [rbx+0x48]
  427bf0:	test   eax,eax
  427bf2:	jne    427c5a <flatcc_builder_create_struct@@Base+0x12a>
  427bf4:	mov    rdx,QWORD PTR [rsp+0x98]
  427bfc:	xor    rdx,QWORD PTR fs:0x28
  427c05:	mov    DWORD PTR [rbx+0xf0],ebp
  427c0b:	mov    eax,ebp
  427c0d:	jne    427c7e <flatcc_builder_create_struct@@Base+0x14e>
  427c0f:	add    rsp,0xa8
  427c16:	pop    rbx
  427c17:	pop    rbp
  427c18:	ret    
  427c19:	nop    DWORD PTR [rax+0x0]
  427c20:	mov    QWORD PTR [rsp],r8
  427c24:	mov    QWORD PTR [rsp+0x10],rsi
  427c29:	mov    QWORD PTR [rsp+0x18],r8
  427c2e:	mov    DWORD PTR [rsp+0x8],0x1
  427c36:	jmp    427b97 <flatcc_builder_create_struct@@Base+0x67>
  427c3b:	lea    rcx,[rip+0x21eee]        # 449b30 <fb_schema_table_missing@@Base+0x37c0>
  427c42:	lea    rsi,[rip+0x214a7]        # 4490f0 <fb_schema_table_missing@@Base+0x2d80>
  427c49:	lea    rdi,[rip+0xf5d9]        # 437229 <_IO_stdin_used@@Base+0xa229>
  427c50:	mov    edx,0x287
  427c55:	call   405100 <__assert_fail@plt>
  427c5a:	call   405312 <__sprintf_chk@plt+0xf2>
  427c5f:	lea    rcx,[rip+0x21e8a]        # 449af0 <fb_schema_table_missing@@Base+0x3780>
  427c66:	lea    rsi,[rip+0x21483]        # 4490f0 <fb_schema_table_missing@@Base+0x2d80>
  427c6d:	lea    rdi,[rip+0x2184e]        # 4494c2 <fb_schema_table_missing@@Base+0x3152>
  427c74:	mov    edx,0x30f
  427c79:	call   405100 <__assert_fail@plt>
  427c7e:	call   4050d0 <__stack_chk_fail@plt>
  427c83:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  427c8e:	xchg   ax,ax

0000000000427c90 <flatcc_builder_start_buffer@@Base>:
  427c90:	push   r13
  427c92:	push   r12
  427c94:	mov    r13d,edx
  427c97:	push   rbp
  427c98:	push   rbx
  427c99:	mov    rbp,rsi
  427c9c:	mov    rbx,rdi
  427c9f:	mov    r12d,ecx
  427ca2:	sub    rsp,0x8
  427ca6:	movzx  esi,WORD PTR [rdi+0xe8]
  427cad:	call   426e60 <flatcc_builder_default_alloc@@Base+0x260>
  427cb2:	test   eax,eax
  427cb4:	jne    427d60 <flatcc_builder_start_buffer@@Base+0xd0>
  427cba:	movzx  edx,WORD PTR [rbx+0xec]
  427cc1:	mov    rdi,QWORD PTR [rbx+0x30]
  427cc5:	mov    ecx,0x1
  427cca:	mov    WORD PTR [rbx+0xe8],cx
  427cd1:	test   rbp,rbp
  427cd4:	mov    rsi,rbp
  427cd7:	mov    WORD PTR [rdi+0x22],dx
  427cdb:	movzx  edx,WORD PTR [rbx+0x10c]
  427ce2:	mov    WORD PTR [rbx+0xec],r13w
  427cea:	mov    WORD PTR [rdi+0x20],dx
  427cee:	mov    edx,DWORD PTR [rbx+0xf8]
  427cf4:	mov    WORD PTR [rbx+0x10c],r12w
  427cfc:	mov    DWORD PTR [rdi+0x14],edx
  427cff:	mov    edx,DWORD PTR [rbx+0x100]
  427d05:	mov    DWORD PTR [rdi+0x1c],edx
  427d08:	mov    edx,DWORD PTR [rbx+0xf0]
  427d0e:	mov    DWORD PTR [rbx+0xf8],edx
  427d14:	mov    edx,DWORD PTR [rbx+0xfc]
  427d1a:	lea    ecx,[rdx+0x1]
  427d1d:	mov    DWORD PTR [rbx+0x100],edx
  427d23:	mov    edx,DWORD PTR [rbx+0x110]
  427d29:	mov    DWORD PTR [rbx+0xfc],ecx
  427d2f:	mov    DWORD PTR [rdi+0x10],edx
  427d32:	je     427d50 <flatcc_builder_start_buffer@@Base+0xc0>
  427d34:	mov    edx,DWORD PTR [rsi]
  427d36:	mov    DWORD PTR [rbx+0x110],edx
  427d3c:	mov    edx,0x1
  427d41:	mov    WORD PTR [rdi+0xe],dx
  427d45:	add    rsp,0x8
  427d49:	pop    rbx
  427d4a:	pop    rbp
  427d4b:	pop    r12
  427d4d:	pop    r13
  427d4f:	ret    
  427d50:	mov    rsi,0x449be0
  427d57:	jmp    427d34 <flatcc_builder_start_buffer@@Base+0xa4>
  427d59:	nop    DWORD PTR [rax+0x0]
  427d60:	mov    eax,0xffffffff
  427d65:	jmp    427d45 <flatcc_builder_start_buffer@@Base+0xb5>
  427d67:	nop    WORD PTR [rax+rax*1+0x0]

0000000000427d70 <flatcc_builder_end_buffer@@Base>:
  427d70:	push   rbp
  427d71:	push   rbx
  427d72:	xor    eax,eax
  427d74:	sub    rsp,0x8
  427d78:	movzx  r9d,WORD PTR [rdi+0x10c]
  427d80:	mov    edx,DWORD PTR [rdi+0x100]
  427d86:	and    r9d,0x2
  427d8a:	test   edx,edx
  427d8c:	setne  al
  427d8f:	or     r9d,eax
  427d92:	mov    rax,QWORD PTR [rdi+0x30]
  427d96:	cmp    WORD PTR [rax+0xe],0x1
  427d9b:	jne    427e91 <flatcc_builder_end_buffer@@Base+0x121>
  427da1:	movzx  edx,WORD PTR [rdi+0xec]
  427da8:	movzx  r8d,WORD PTR [rdi+0xe8]
  427db0:	mov    rbx,rdi
  427db3:	mov    ecx,esi
  427db5:	cmp    dx,r8w
  427db9:	ja     427de0 <flatcc_builder_end_buffer@@Base+0x70>
  427dbb:	lea    rsi,[rbx+0x110]
  427dc2:	mov    rdi,rbx
  427dc5:	call   4278b0 <flatcc_builder_create_buffer@@Base>
  427dca:	test   eax,eax
  427dcc:	mov    ebp,eax
  427dce:	jne    427df0 <flatcc_builder_end_buffer@@Base+0x80>
  427dd0:	add    rsp,0x8
  427dd4:	mov    eax,ebp
  427dd6:	pop    rbx
  427dd7:	pop    rbp
  427dd8:	ret    
  427dd9:	nop    DWORD PTR [rax+0x0]
  427de0:	mov    WORD PTR [rbx+0xe8],dx
  427de7:	mov    r8d,edx
  427dea:	jmp    427dbb <flatcc_builder_end_buffer@@Base+0x4b>
  427dec:	nop    DWORD PTR [rax+0x0]
  427df0:	mov    rax,QWORD PTR [rbx+0x30]
  427df4:	mov    rdi,QWORD PTR [rbx+0x18]
  427df8:	xor    esi,esi
  427dfa:	mov    edx,DWORD PTR [rax+0x14]
  427dfd:	mov    DWORD PTR [rbx+0xf8],edx
  427e03:	mov    edx,DWORD PTR [rax+0x1c]
  427e06:	mov    DWORD PTR [rbx+0x100],edx
  427e0c:	mov    edx,DWORD PTR [rax+0x10]
  427e0f:	mov    DWORD PTR [rbx+0x110],edx
  427e15:	movzx  eax,WORD PTR [rax+0x20]
  427e19:	mov    edx,DWORD PTR [rbx+0x20]
  427e1c:	mov    WORD PTR [rbx+0x10c],ax
  427e23:	call   405110 <memset@plt>
  427e28:	mov    rax,QWORD PTR [rbx+0x30]
  427e2c:	mov    edi,DWORD PTR [rbx+0x70]
  427e2f:	mov    esi,DWORD PTR [rax]
  427e31:	mov    edx,DWORD PTR [rax+0x8]
  427e34:	mov    ecx,DWORD PTR [rax+0x4]
  427e37:	mov    DWORD PTR [rbx+0x20],edx
  427e3a:	mov    rdx,rsi
  427e3d:	mov    DWORD PTR [rbx+0x28],esi
  427e40:	add    rsi,QWORD PTR [rbx+0x68]
  427e44:	sub    edi,edx
  427e46:	cmp    ecx,edi
  427e48:	mov    edx,edi
  427e4a:	cmovb  edx,ecx
  427e4d:	mov    DWORD PTR [rbx+0x24],edx
  427e50:	movzx  edx,WORD PTR [rbx+0xea]
  427e57:	cmp    dx,WORD PTR [rbx+0xe8]
  427e5e:	mov    QWORD PTR [rbx+0x18],rsi
  427e62:	mov    DWORD PTR [rax+0x4],ecx
  427e65:	jbe    427e6e <flatcc_builder_end_buffer@@Base+0xfe>
  427e67:	mov    WORD PTR [rbx+0xe8],dx
  427e6e:	movzx  edx,WORD PTR [rax+0xc]
  427e72:	sub    rax,0x24
  427e76:	sub    DWORD PTR [rbx+0x104],0x1
  427e7d:	mov    QWORD PTR [rbx+0x30],rax
  427e81:	mov    eax,ebp
  427e83:	mov    WORD PTR [rbx+0xea],dx
  427e8a:	add    rsp,0x8
  427e8e:	pop    rbx
  427e8f:	pop    rbp
  427e90:	ret    
  427e91:	lea    rcx,[rip+0x21c38]        # 449ad0 <fb_schema_table_missing@@Base+0x3760>
  427e98:	lea    rsi,[rip+0x21251]        # 4490f0 <fb_schema_table_missing@@Base+0x2d80>
  427e9f:	lea    rdi,[rip+0x212ca]        # 449170 <fb_schema_table_missing@@Base+0x2e00>
  427ea6:	mov    edx,0x346
  427eab:	call   405100 <__assert_fail@plt>

0000000000427eb0 <flatcc_builder_start_struct@@Base>:
  427eb0:	push   r12
  427eb2:	push   rbp
  427eb3:	mov    rbp,rsi
  427eb6:	push   rbx
  427eb7:	movzx  esi,dx
  427eba:	mov    rbx,rdi
  427ebd:	call   426e60 <flatcc_builder_default_alloc@@Base+0x260>
  427ec2:	test   eax,eax
  427ec4:	jne    427f40 <flatcc_builder_start_struct@@Base+0x90>
  427ec6:	mov    rcx,QWORD PTR [rbx+0x30]
  427eca:	mov    eax,0x2
  427ecf:	mov    edi,DWORD PTR [rbx+0x70]
  427ed2:	mov    WORD PTR [rcx+0xe],ax
  427ed6:	mov    eax,DWORD PTR [rbx+0x28]
  427ed9:	mov    rdx,rax
  427edc:	add    rax,QWORD PTR [rbx+0x68]
  427ee0:	sub    edi,edx
  427ee2:	cmp    edi,0xfffffffc
  427ee5:	mov    edx,edi
  427ee7:	mov    QWORD PTR [rbx+0x18],rax
  427eeb:	ja     427f10 <flatcc_builder_start_struct@@Base+0x60>
  427eed:	mov    DWORD PTR [rbx+0x24],edi
  427ef0:	mov    r12d,DWORD PTR [rbx+0x20]
  427ef4:	mov    DWORD PTR [rcx+0x4],0xfffffffc
  427efb:	mov    rsi,r12
  427efe:	add    esi,ebp
  427f00:	cmp    esi,edx
  427f02:	mov    DWORD PTR [rbx+0x20],esi
  427f05:	jae    427f20 <flatcc_builder_start_struct@@Base+0x70>
  427f07:	add    rax,r12
  427f0a:	pop    rbx
  427f0b:	pop    rbp
  427f0c:	pop    r12
  427f0e:	ret    
  427f0f:	nop
  427f10:	mov    DWORD PTR [rbx+0x24],0xfffffffc
  427f17:	mov    edx,0xfffffffc
  427f1c:	jmp    427ef0 <flatcc_builder_start_struct@@Base+0x40>
  427f1e:	xchg   ax,ax
  427f20:	add    esi,0x1
  427f23:	mov    edx,0xfffffffc
  427f28:	mov    rdi,rbx
  427f2b:	call   426ba0 <__flatcc_fb_coerce_scalar_type@@Base+0x7d0>
  427f30:	test   eax,eax
  427f32:	jne    427f40 <flatcc_builder_start_struct@@Base+0x90>
  427f34:	mov    rax,QWORD PTR [rbx+0x18]
  427f38:	jmp    427f07 <flatcc_builder_start_struct@@Base+0x57>
  427f3a:	nop    WORD PTR [rax+rax*1+0x0]
  427f40:	pop    rbx
  427f41:	xor    eax,eax
  427f43:	pop    rbp
  427f44:	pop    r12
  427f46:	ret    
  427f47:	nop    WORD PTR [rax+rax*1+0x0]

0000000000427f50 <flatcc_builder_struct_edit@@Base>:
  427f50:	mov    rax,QWORD PTR [rdi+0x18]
  427f54:	ret    
  427f55:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

0000000000427f60 <flatcc_builder_end_struct@@Base>:
  427f60:	push   rbp
  427f61:	push   rbx
  427f62:	sub    rsp,0x8
  427f66:	mov    rax,QWORD PTR [rdi+0x30]
  427f6a:	cmp    WORD PTR [rax+0xe],0x2
  427f6f:	jne    428017 <flatcc_builder_end_struct@@Base+0xb7>
  427f75:	movzx  ecx,WORD PTR [rdi+0xea]
  427f7c:	mov    edx,DWORD PTR [rdi+0x20]
  427f7f:	mov    rbx,rdi
  427f82:	mov    rsi,QWORD PTR [rdi+0x18]
  427f86:	call   427b30 <flatcc_builder_create_struct@@Base>
  427f8b:	test   eax,eax
  427f8d:	mov    ebp,eax
  427f8f:	jne    427fa0 <flatcc_builder_end_struct@@Base+0x40>
  427f91:	add    rsp,0x8
  427f95:	mov    eax,ebp
  427f97:	pop    rbx
  427f98:	pop    rbp
  427f99:	ret    
  427f9a:	nop    WORD PTR [rax+rax*1+0x0]
  427fa0:	mov    edx,DWORD PTR [rbx+0x20]
  427fa3:	mov    rdi,QWORD PTR [rbx+0x18]
  427fa7:	xor    esi,esi
  427fa9:	call   405110 <memset@plt>
  427fae:	mov    rax,QWORD PTR [rbx+0x30]
  427fb2:	mov    edi,DWORD PTR [rbx+0x70]
  427fb5:	mov    esi,DWORD PTR [rax]
  427fb7:	mov    edx,DWORD PTR [rax+0x8]
  427fba:	mov    ecx,DWORD PTR [rax+0x4]
  427fbd:	mov    DWORD PTR [rbx+0x20],edx
  427fc0:	mov    rdx,rsi
  427fc3:	mov    DWORD PTR [rbx+0x28],esi
  427fc6:	add    rsi,QWORD PTR [rbx+0x68]
  427fca:	sub    edi,edx
  427fcc:	cmp    ecx,edi
  427fce:	mov    edx,edi
  427fd0:	cmovb  edx,ecx
  427fd3:	mov    DWORD PTR [rbx+0x24],edx
  427fd6:	movzx  edx,WORD PTR [rbx+0xea]
  427fdd:	cmp    dx,WORD PTR [rbx+0xe8]
  427fe4:	mov    QWORD PTR [rbx+0x18],rsi
  427fe8:	mov    DWORD PTR [rax+0x4],ecx
  427feb:	jbe    427ff4 <flatcc_builder_end_struct@@Base+0x94>
  427fed:	mov    WORD PTR [rbx+0xe8],dx
  427ff4:	movzx  edx,WORD PTR [rax+0xc]
  427ff8:	sub    rax,0x24
  427ffc:	sub    DWORD PTR [rbx+0x104],0x1
  428003:	mov    QWORD PTR [rbx+0x30],rax
  428007:	mov    eax,ebp
  428009:	mov    WORD PTR [rbx+0xea],dx
  428010:	add    rsp,0x8
  428014:	pop    rbx
  428015:	pop    rbp
  428016:	ret    
  428017:	lea    rcx,[rip+0x21a92]        # 449ab0 <fb_schema_table_missing@@Base+0x3740>
  42801e:	lea    rsi,[rip+0x210cb]        # 4490f0 <fb_schema_table_missing@@Base+0x2d80>
  428025:	lea    rdi,[rip+0x21174]        # 4491a0 <fb_schema_table_missing@@Base+0x2e30>
  42802c:	mov    edx,0x368
  428031:	call   405100 <__assert_fail@plt>
  428036:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000428040 <flatcc_builder_extend_vector@@Base>:
  428040:	push   rbp
  428041:	push   rbx
  428042:	mov    eax,esi
  428044:	sub    rsp,0x8
  428048:	mov    rdx,QWORD PTR [rdi+0x30]
  42804c:	add    eax,DWORD PTR [rdx+0x14]
  42804f:	setb   cl
  428052:	cmp    DWORD PTR [rdx+0x18],eax
  428055:	jb     42809d <flatcc_builder_extend_vector@@Base+0x5d>
  428057:	movzx  ecx,cl
  42805a:	test   ecx,ecx
  42805c:	jne    42809d <flatcc_builder_extend_vector@@Base+0x5d>
  42805e:	imul   esi,DWORD PTR [rdx+0x10]
  428062:	mov    DWORD PTR [rdx+0x14],eax
  428065:	mov    ebp,DWORD PTR [rdi+0x20]
  428068:	mov    rbx,rdi
  42806b:	add    esi,ebp
  42806d:	cmp    esi,DWORD PTR [rdi+0x24]
  428070:	mov    DWORD PTR [rdi+0x20],esi
  428073:	jae    428088 <flatcc_builder_extend_vector@@Base+0x48>
  428075:	mov    rax,rbp
  428078:	add    rax,QWORD PTR [rbx+0x18]
  42807c:	add    rsp,0x8
  428080:	pop    rbx
  428081:	pop    rbp
  428082:	ret    
  428083:	nop    DWORD PTR [rax+rax*1+0x0]
  428088:	add    esi,0x1
  42808b:	mov    edx,0xfffffffc
  428090:	call   426ba0 <__flatcc_fb_coerce_scalar_type@@Base+0x7d0>
  428095:	test   eax,eax
  428097:	je     428075 <flatcc_builder_extend_vector@@Base+0x35>
  428099:	xor    eax,eax
  42809b:	jmp    42807c <flatcc_builder_extend_vector@@Base+0x3c>
  42809d:	call   405335 <__sprintf_chk@plt+0x115>
  4280a2:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4280ad:	nop    DWORD PTR [rax]

00000000004280b0 <flatcc_builder_vector_push@@Base>:
  4280b0:	push   r13
  4280b2:	push   r12
  4280b4:	push   rbp
  4280b5:	push   rbx
  4280b6:	sub    rsp,0x8
  4280ba:	mov    rax,QWORD PTR [rdi+0x30]
  4280be:	cmp    WORD PTR [rax+0xe],0x4
  4280c3:	jne    428144 <flatcc_builder_vector_push@@Base+0x94>
  4280c5:	mov    edx,DWORD PTR [rax+0x14]
  4280c8:	cmp    edx,DWORD PTR [rax+0x18]
  4280cb:	ja     428125 <flatcc_builder_vector_push@@Base+0x75>
  4280cd:	add    edx,0x1
  4280d0:	mov    r12d,DWORD PTR [rax+0x10]
  4280d4:	mov    rbx,rdi
  4280d7:	mov    DWORD PTR [rax+0x14],edx
  4280da:	mov    ebp,DWORD PTR [rdi+0x20]
  4280dd:	mov    r13,rsi
  4280e0:	mov    rcx,rbp
  4280e3:	add    ecx,r12d
  4280e6:	cmp    ecx,DWORD PTR [rdi+0x24]
  4280e9:	mov    DWORD PTR [rdi+0x20],ecx
  4280ec:	jae    428110 <flatcc_builder_vector_push@@Base+0x60>
  4280ee:	add    rbp,QWORD PTR [rbx+0x18]
  4280f2:	je     428102 <flatcc_builder_vector_push@@Base+0x52>
  4280f4:	mov    edx,r12d
  4280f7:	mov    rsi,r13
  4280fa:	mov    rdi,rbp
  4280fd:	call   405170 <memcpy@plt>
  428102:	add    rsp,0x8
  428106:	mov    rax,rbp
  428109:	pop    rbx
  42810a:	pop    rbp
  42810b:	pop    r12
  42810d:	pop    r13
  42810f:	ret    
  428110:	lea    esi,[rcx+0x1]
  428113:	mov    edx,0xfffffffc
  428118:	call   426ba0 <__flatcc_fb_coerce_scalar_type@@Base+0x7d0>
  42811d:	test   eax,eax
  42811f:	je     4280ee <flatcc_builder_vector_push@@Base+0x3e>
  428121:	xor    ebp,ebp
  428123:	jmp    428102 <flatcc_builder_vector_push@@Base+0x52>
  428125:	lea    rcx,[rip+0x21944]        # 449a70 <fb_schema_table_missing@@Base+0x3700>
  42812c:	lea    rsi,[rip+0x20fbd]        # 4490f0 <fb_schema_table_missing@@Base+0x2d80>
  428133:	lea    rdi,[rip+0x210c6]        # 449200 <fb_schema_table_missing@@Base+0x2e90>
  42813a:	mov    edx,0x38c
  42813f:	call   405100 <__assert_fail@plt>
  428144:	lea    rcx,[rip+0x21925]        # 449a70 <fb_schema_table_missing@@Base+0x3700>
  42814b:	lea    rsi,[rip+0x20f9e]        # 4490f0 <fb_schema_table_missing@@Base+0x2d80>
  428152:	lea    rdi,[rip+0x21077]        # 4491d0 <fb_schema_table_missing@@Base+0x2e60>
  428159:	mov    edx,0x38b
  42815e:	call   405100 <__assert_fail@plt>
  428163:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  42816e:	xchg   ax,ax

0000000000428170 <flatcc_builder_append_vector@@Base>:
  428170:	push   r13
  428172:	push   r12
  428174:	push   rbp
  428175:	push   rbx
  428176:	sub    rsp,0x8
  42817a:	mov    rax,QWORD PTR [rdi+0x30]
  42817e:	cmp    WORD PTR [rax+0xe],0x4
  428183:	jne    4281fb <flatcc_builder_append_vector@@Base+0x8b>
  428185:	mov    r13,rsi
  428188:	mov    ecx,edx
  42818a:	xor    esi,esi
  42818c:	add    ecx,DWORD PTR [rax+0x14]
  42818f:	setb   sil
  428193:	cmp    DWORD PTR [rax+0x18],ecx
  428196:	jb     4281f6 <flatcc_builder_append_vector@@Base+0x86>
  428198:	test   esi,esi
  42819a:	jne    4281f6 <flatcc_builder_append_vector@@Base+0x86>
  42819c:	mov    ebx,DWORD PTR [rax+0x10]
  42819f:	mov    DWORD PTR [rax+0x14],ecx
  4281a2:	mov    rbp,rdi
  4281a5:	mov    r12d,DWORD PTR [rdi+0x20]
  4281a9:	imul   ebx,edx
  4281ac:	mov    rdx,r12
  4281af:	add    edx,ebx
  4281b1:	cmp    edx,DWORD PTR [rdi+0x24]
  4281b4:	mov    DWORD PTR [rdi+0x20],edx
  4281b7:	jae    4281e0 <flatcc_builder_append_vector@@Base+0x70>
  4281b9:	add    r12,QWORD PTR [rbp+0x18]
  4281bd:	je     4281cc <flatcc_builder_append_vector@@Base+0x5c>
  4281bf:	mov    edx,ebx
  4281c1:	mov    rsi,r13
  4281c4:	mov    rdi,r12
  4281c7:	call   405170 <memcpy@plt>
  4281cc:	add    rsp,0x8
  4281d0:	mov    rax,r12
  4281d3:	pop    rbx
  4281d4:	pop    rbp
  4281d5:	pop    r12
  4281d7:	pop    r13
  4281d9:	ret    
  4281da:	nop    WORD PTR [rax+rax*1+0x0]
  4281e0:	lea    esi,[rdx+0x1]
  4281e3:	mov    edx,0xfffffffc
  4281e8:	call   426ba0 <__flatcc_fb_coerce_scalar_type@@Base+0x7d0>
  4281ed:	test   eax,eax
  4281ef:	je     4281b9 <flatcc_builder_append_vector@@Base+0x49>
  4281f1:	xor    r12d,r12d
  4281f4:	jmp    4281cc <flatcc_builder_append_vector@@Base+0x5c>
  4281f6:	call   405335 <__sprintf_chk@plt+0x115>
  4281fb:	lea    rcx,[rip+0x2184e]        # 449a50 <fb_schema_table_missing@@Base+0x36e0>
  428202:	lea    rsi,[rip+0x20ee7]        # 4490f0 <fb_schema_table_missing@@Base+0x2d80>
  428209:	lea    rdi,[rip+0x20fc0]        # 4491d0 <fb_schema_table_missing@@Base+0x2e60>
  428210:	mov    edx,0x393
  428215:	call   405100 <__assert_fail@plt>
  42821a:	nop    WORD PTR [rax+rax*1+0x0]

0000000000428220 <flatcc_builder_extend_offset_vector@@Base>:
  428220:	push   rbp
  428221:	push   rbx
  428222:	xor    edx,edx
  428224:	mov    ecx,esi
  428226:	sub    rsp,0x8
  42822a:	mov    rax,QWORD PTR [rdi+0x30]
  42822e:	add    ecx,DWORD PTR [rax+0x14]
  428231:	setb   dl
  428234:	test   edx,edx
  428236:	jne    42827d <flatcc_builder_extend_offset_vector@@Base+0x5d>
  428238:	cmp    ecx,0x3fffffff
  42823e:	ja     42827d <flatcc_builder_extend_offset_vector@@Base+0x5d>
  428240:	mov    DWORD PTR [rax+0x14],ecx
  428243:	mov    ebp,DWORD PTR [rdi+0x20]
  428246:	mov    rbx,rdi
  428249:	lea    eax,[rbp+rsi*4+0x0]
  42824d:	cmp    eax,DWORD PTR [rdi+0x24]
  428250:	mov    DWORD PTR [rdi+0x20],eax
  428253:	jae    428268 <flatcc_builder_extend_offset_vector@@Base+0x48>
  428255:	mov    rax,rbp
  428258:	add    rax,QWORD PTR [rbx+0x18]
  42825c:	add    rsp,0x8
  428260:	pop    rbx
  428261:	pop    rbp
  428262:	ret    
  428263:	nop    DWORD PTR [rax+rax*1+0x0]
  428268:	lea    esi,[rax+0x1]
  42826b:	mov    edx,0xfffffffc
  428270:	call   426ba0 <__flatcc_fb_coerce_scalar_type@@Base+0x7d0>
  428275:	test   eax,eax
  428277:	je     428255 <flatcc_builder_extend_offset_vector@@Base+0x35>
  428279:	xor    eax,eax
  42827b:	jmp    42825c <flatcc_builder_extend_offset_vector@@Base+0x3c>
  42827d:	call   405335 <__sprintf_chk@plt+0x115>
  428282:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  42828d:	nop    DWORD PTR [rax]

0000000000428290 <flatcc_builder_offset_vector_push@@Base>:
  428290:	push   r12
  428292:	push   rbp
  428293:	push   rbx
  428294:	mov    rdx,QWORD PTR [rdi+0x30]
  428298:	cmp    WORD PTR [rdx+0xe],0x5
  42829d:	jne    4282f0 <flatcc_builder_offset_vector_push@@Base+0x60>
  42829f:	mov    eax,DWORD PTR [rdx+0x14]
  4282a2:	cmp    eax,0x3fffffff
  4282a7:	je     4282e9 <flatcc_builder_offset_vector_push@@Base+0x59>
  4282a9:	add    eax,0x1
  4282ac:	mov    rbp,rdi
  4282af:	mov    r12d,esi
  4282b2:	mov    DWORD PTR [rdx+0x14],eax
  4282b5:	mov    ebx,DWORD PTR [rdi+0x20]
  4282b8:	lea    edx,[rbx+0x4]
  4282bb:	cmp    edx,DWORD PTR [rdi+0x24]
  4282be:	mov    DWORD PTR [rdi+0x20],edx
  4282c1:	jae    4282d8 <flatcc_builder_offset_vector_push@@Base+0x48>
  4282c3:	mov    rax,rbx
  4282c6:	add    rax,QWORD PTR [rbp+0x18]
  4282ca:	je     4282e9 <flatcc_builder_offset_vector_push@@Base+0x59>
  4282cc:	mov    DWORD PTR [rax],r12d
  4282cf:	pop    rbx
  4282d0:	pop    rbp
  4282d1:	pop    r12
  4282d3:	ret    
  4282d4:	nop    DWORD PTR [rax+0x0]
  4282d8:	lea    esi,[rbx+0x5]
  4282db:	mov    edx,0xfffffffc
  4282e0:	call   426ba0 <__flatcc_fb_coerce_scalar_type@@Base+0x7d0>
  4282e5:	test   eax,eax
  4282e7:	je     4282c3 <flatcc_builder_offset_vector_push@@Base+0x33>
  4282e9:	pop    rbx
  4282ea:	xor    eax,eax
  4282ec:	pop    rbp
  4282ed:	pop    r12
  4282ef:	ret    
  4282f0:	lea    rcx,[rip+0x21729]        # 449a20 <fb_schema_table_missing@@Base+0x36b0>
  4282f7:	lea    rsi,[rip+0x20df2]        # 4490f0 <fb_schema_table_missing@@Base+0x2d80>
  4282fe:	lea    rdi,[rip+0x20f3b]        # 449240 <fb_schema_table_missing@@Base+0x2ed0>
  428305:	mov    edx,0x3a6
  42830a:	call   405100 <__assert_fail@plt>
  42830f:	nop

0000000000428310 <flatcc_builder_append_offset_vector@@Base>:
  428310:	push   r13
  428312:	push   r12
  428314:	push   rbp
  428315:	push   rbx
  428316:	sub    rsp,0x8
  42831a:	mov    rax,QWORD PTR [rdi+0x30]
  42831e:	cmp    WORD PTR [rax+0xe],0x5
  428323:	jne    42839b <flatcc_builder_append_offset_vector@@Base+0x8b>
  428325:	mov    r13,rsi
  428328:	mov    ecx,edx
  42832a:	xor    esi,esi
  42832c:	add    ecx,DWORD PTR [rax+0x14]
  42832f:	setb   sil
  428333:	test   esi,esi
  428335:	jne    428396 <flatcc_builder_append_offset_vector@@Base+0x86>
  428337:	cmp    ecx,0x3fffffff
  42833d:	ja     428396 <flatcc_builder_append_offset_vector@@Base+0x86>
  42833f:	mov    DWORD PTR [rax+0x14],ecx
  428342:	mov    r12d,DWORD PTR [rdi+0x20]
  428346:	lea    ebx,[rdx*4+0x0]
  42834d:	mov    rbp,rdi
  428350:	mov    rdx,r12
  428353:	add    edx,ebx
  428355:	cmp    edx,DWORD PTR [rdi+0x24]
  428358:	mov    DWORD PTR [rdi+0x20],edx
  42835b:	jae    428380 <flatcc_builder_append_offset_vector@@Base+0x70>
  42835d:	add    r12,QWORD PTR [rbp+0x18]
  428361:	je     428370 <flatcc_builder_append_offset_vector@@Base+0x60>
  428363:	mov    edx,ebx
  428365:	mov    rsi,r13
  428368:	mov    rdi,r12
  42836b:	call   405170 <memcpy@plt>
  428370:	add    rsp,0x8
  428374:	mov    rax,r12
  428377:	pop    rbx
  428378:	pop    rbp
  428379:	pop    r12
  42837b:	pop    r13
  42837d:	ret    
  42837e:	xchg   ax,ax
  428380:	lea    esi,[rdx+0x1]
  428383:	mov    edx,0xfffffffc
  428388:	call   426ba0 <__flatcc_fb_coerce_scalar_type@@Base+0x7d0>
  42838d:	test   eax,eax
  42838f:	je     42835d <flatcc_builder_append_offset_vector@@Base+0x4d>
  428391:	xor    r12d,r12d
  428394:	jmp    428370 <flatcc_builder_append_offset_vector@@Base+0x60>
  428396:	call   405335 <__sprintf_chk@plt+0x115>
  42839b:	lea    rcx,[rip+0x2163e]        # 4499e0 <fb_schema_table_missing@@Base+0x3670>
  4283a2:	lea    rsi,[rip+0x20d47]        # 4490f0 <fb_schema_table_missing@@Base+0x2d80>
  4283a9:	lea    rdi,[rip+0x20e90]        # 449240 <fb_schema_table_missing@@Base+0x2ed0>
  4283b0:	mov    edx,0x3b4
  4283b5:	call   405100 <__assert_fail@plt>
  4283ba:	nop    WORD PTR [rax+rax*1+0x0]

00000000004283c0 <flatcc_builder_extend_string@@Base>:
  4283c0:	push   rbp
  4283c1:	push   rbx
  4283c2:	sub    rsp,0x8
  4283c6:	mov    rax,QWORD PTR [rdi+0x30]
  4283ca:	cmp    WORD PTR [rax+0xe],0x6
  4283cf:	jne    42841a <flatcc_builder_extend_string@@Base+0x5a>
  4283d1:	mov    edx,esi
  4283d3:	add    edx,DWORD PTR [rax+0x14]
  4283d6:	jb     428415 <flatcc_builder_extend_string@@Base+0x55>
  4283d8:	mov    DWORD PTR [rax+0x14],edx
  4283db:	mov    ebp,DWORD PTR [rdi+0x20]
  4283de:	mov    rbx,rdi
  4283e1:	add    esi,ebp
  4283e3:	cmp    esi,DWORD PTR [rdi+0x24]
  4283e6:	mov    DWORD PTR [rdi+0x20],esi
  4283e9:	jae    428400 <flatcc_builder_extend_string@@Base+0x40>
  4283eb:	mov    rax,rbp
  4283ee:	add    rax,QWORD PTR [rbx+0x18]
  4283f2:	add    rsp,0x8
  4283f6:	pop    rbx
  4283f7:	pop    rbp
  4283f8:	ret    
  4283f9:	nop    DWORD PTR [rax+0x0]
  428400:	add    esi,0x1
  428403:	mov    edx,0xfffffffc
  428408:	call   426ba0 <__flatcc_fb_coerce_scalar_type@@Base+0x7d0>
  42840d:	test   eax,eax
  42840f:	je     4283eb <flatcc_builder_extend_string@@Base+0x2b>
  428411:	xor    eax,eax
  428413:	jmp    4283f2 <flatcc_builder_extend_string@@Base+0x32>
  428415:	call   405335 <__sprintf_chk@plt+0x115>
  42841a:	lea    rcx,[rip+0x2158f]        # 4499b0 <fb_schema_table_missing@@Base+0x3640>
  428421:	lea    rsi,[rip+0x20cc8]        # 4490f0 <fb_schema_table_missing@@Base+0x2d80>
  428428:	lea    rdi,[rip+0x20e49]        # 449278 <fb_schema_table_missing@@Base+0x2f08>
  42842f:	mov    edx,0x3bd
  428434:	call   405100 <__assert_fail@plt>
  428439:	nop    DWORD PTR [rax+0x0]

0000000000428440 <flatcc_builder_append_string@@Base>:
  428440:	push   r13
  428442:	push   r12
  428444:	push   rbp
  428445:	push   rbx
  428446:	sub    rsp,0x8
  42844a:	mov    rax,QWORD PTR [rdi+0x30]
  42844e:	cmp    WORD PTR [rax+0xe],0x6
  428453:	jne    4284bb <flatcc_builder_append_string@@Base+0x7b>
  428455:	mov    rbp,rdx
  428458:	add    edx,DWORD PTR [rax+0x14]
  42845b:	jb     4284b6 <flatcc_builder_append_string@@Base+0x76>
  42845d:	mov    DWORD PTR [rax+0x14],edx
  428460:	mov    r12d,DWORD PTR [rdi+0x20]
  428464:	mov    rbx,rdi
  428467:	mov    r13,rsi
  42846a:	mov    rdx,r12
  42846d:	add    edx,ebp
  42846f:	cmp    edx,DWORD PTR [rdi+0x24]
  428472:	mov    DWORD PTR [rdi+0x20],edx
  428475:	jae    4284a0 <flatcc_builder_append_string@@Base+0x60>
  428477:	add    r12,QWORD PTR [rbx+0x18]
  42847b:	je     42848a <flatcc_builder_append_string@@Base+0x4a>
  42847d:	mov    edx,ebp
  42847f:	mov    rsi,r13
  428482:	mov    rdi,r12
  428485:	call   405170 <memcpy@plt>
  42848a:	add    rsp,0x8
  42848e:	mov    rax,r12
  428491:	pop    rbx
  428492:	pop    rbp
  428493:	pop    r12
  428495:	pop    r13
  428497:	ret    
  428498:	nop    DWORD PTR [rax+rax*1+0x0]
  4284a0:	lea    esi,[rdx+0x1]
  4284a3:	mov    edx,0xfffffffc
  4284a8:	call   426ba0 <__flatcc_fb_coerce_scalar_type@@Base+0x7d0>
  4284ad:	test   eax,eax
  4284af:	je     428477 <flatcc_builder_append_string@@Base+0x37>
  4284b1:	xor    r12d,r12d
  4284b4:	jmp    42848a <flatcc_builder_append_string@@Base+0x4a>
  4284b6:	call   405335 <__sprintf_chk@plt+0x115>
  4284bb:	lea    rcx,[rip+0x214ce]        # 449990 <fb_schema_table_missing@@Base+0x3620>
  4284c2:	lea    rsi,[rip+0x20c27]        # 4490f0 <fb_schema_table_missing@@Base+0x2d80>
  4284c9:	lea    rdi,[rip+0x20da8]        # 449278 <fb_schema_table_missing@@Base+0x2f08>
  4284d0:	mov    edx,0x3c6
  4284d5:	call   405100 <__assert_fail@plt>
  4284da:	nop    WORD PTR [rax+rax*1+0x0]

00000000004284e0 <flatcc_builder_append_string_str@@Base>:
  4284e0:	push   rbp
  4284e1:	push   rbx
  4284e2:	mov    rbp,rdi
  4284e5:	mov    rdi,rsi
  4284e8:	mov    rbx,rsi
  4284eb:	sub    rsp,0x8
  4284ef:	call   4050c0 <strlen@plt>
  4284f4:	add    rsp,0x8
  4284f8:	mov    rsi,rbx
  4284fb:	mov    rdi,rbp
  4284fe:	pop    rbx
  4284ff:	pop    rbp
  428500:	mov    rdx,rax
  428503:	jmp    428440 <flatcc_builder_append_string@@Base>
  428508:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000428510 <flatcc_builder_append_string_strn@@Base>:
  428510:	push   r12
  428512:	push   rbp
  428513:	mov    rbp,rsi
  428516:	push   rbx
  428517:	mov    r12,rdi
  42851a:	xor    esi,esi
  42851c:	mov    rdi,rbp
  42851f:	mov    rbx,rdx
  428522:	call   405120 <memchr@plt>
  428527:	mov    rdx,rax
  42852a:	mov    rsi,rbp
  42852d:	mov    rdi,r12
  428530:	sub    rdx,rbp
  428533:	test   rax,rax
  428536:	cmovne rbx,rdx
  42853a:	mov    rdx,rbx
  42853d:	pop    rbx
  42853e:	pop    rbp
  42853f:	pop    r12
  428541:	jmp    428440 <flatcc_builder_append_string@@Base>
  428546:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000428550 <flatcc_builder_truncate_vector@@Base>:
  428550:	sub    rsp,0x8
  428554:	mov    rax,QWORD PTR [rdi+0x30]
  428558:	cmp    WORD PTR [rax+0xe],0x4
  42855d:	jne    428593 <flatcc_builder_truncate_vector@@Base+0x43>
  42855f:	mov    ecx,DWORD PTR [rax+0x14]
  428562:	cmp    rcx,rsi
  428565:	mov    rdx,rcx
  428568:	jb     4285b2 <flatcc_builder_truncate_vector@@Base+0x62>
  42856a:	sub    edx,esi
  42856c:	imul   esi,DWORD PTR [rax+0x10]
  428570:	mov    DWORD PTR [rax+0x14],edx
  428573:	mov    eax,DWORD PTR [rdi+0x20]
  428576:	mov    rcx,QWORD PTR [rdi+0x18]
  42857a:	sub    eax,esi
  42857c:	mov    edx,esi
  42857e:	xor    esi,esi
  428580:	mov    DWORD PTR [rdi+0x20],eax
  428583:	lea    rdi,[rcx+rax*1]
  428587:	call   405110 <memset@plt>
  42858c:	xor    eax,eax
  42858e:	add    rsp,0x8
  428592:	ret    
  428593:	lea    rcx,[rip+0x213d6]        # 449970 <fb_schema_table_missing@@Base+0x3600>
  42859a:	lea    rsi,[rip+0x20b4f]        # 4490f0 <fb_schema_table_missing@@Base+0x2d80>
  4285a1:	lea    rdi,[rip+0x20c28]        # 4491d0 <fb_schema_table_missing@@Base+0x2e60>
  4285a8:	mov    edx,0x3d9
  4285ad:	call   405100 <__assert_fail@plt>
  4285b2:	lea    rcx,[rip+0x213b7]        # 449970 <fb_schema_table_missing@@Base+0x3600>
  4285b9:	lea    rsi,[rip+0x20b30]        # 4490f0 <fb_schema_table_missing@@Base+0x2d80>
  4285c0:	lea    rdi,[rip+0x20ce1]        # 4492a8 <fb_schema_table_missing@@Base+0x2f38>
  4285c7:	mov    edx,0x3da
  4285cc:	call   405100 <__assert_fail@plt>
  4285d1:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4285dc:	nop    DWORD PTR [rax+0x0]

00000000004285e0 <flatcc_builder_truncate_offset_vector@@Base>:
  4285e0:	sub    rsp,0x8
  4285e4:	mov    rax,QWORD PTR [rdi+0x30]
  4285e8:	cmp    WORD PTR [rax+0xe],0x5
  4285ed:	jne    42861f <flatcc_builder_truncate_offset_vector@@Base+0x3f>
  4285ef:	mov    edx,DWORD PTR [rax+0x14]
  4285f2:	cmp    edx,esi
  4285f4:	jb     42863e <flatcc_builder_truncate_offset_vector@@Base+0x5e>
  4285f6:	sub    edx,esi
  4285f8:	imul   esi,DWORD PTR [rax+0x10]
  4285fc:	mov    DWORD PTR [rax+0x14],edx
  4285ff:	mov    eax,DWORD PTR [rdi+0x20]
  428602:	mov    rcx,QWORD PTR [rdi+0x18]
  428606:	sub    eax,esi
  428608:	mov    edx,esi
  42860a:	xor    esi,esi
  42860c:	mov    DWORD PTR [rdi+0x20],eax
  42860f:	lea    rdi,[rcx+rax*1]
  428613:	call   405110 <memset@plt>
  428618:	xor    eax,eax
  42861a:	add    rsp,0x8
  42861e:	ret    
  42861f:	lea    rcx,[rip+0x2131a]        # 449940 <fb_schema_table_missing@@Base+0x35d0>
  428626:	lea    rsi,[rip+0x20ac3]        # 4490f0 <fb_schema_table_missing@@Base+0x2d80>
  42862d:	lea    rdi,[rip+0x20c0c]        # 449240 <fb_schema_table_missing@@Base+0x2ed0>
  428634:	mov    edx,0x3e2
  428639:	call   405100 <__assert_fail@plt>
  42863e:	lea    rcx,[rip+0x212fb]        # 449940 <fb_schema_table_missing@@Base+0x35d0>
  428645:	lea    rsi,[rip+0x20aa4]        # 4490f0 <fb_schema_table_missing@@Base+0x2d80>
  42864c:	lea    rdi,[rip+0x20c7d]        # 4492d0 <fb_schema_table_missing@@Base+0x2f60>
  428653:	mov    edx,0x3e3
  428658:	call   405100 <__assert_fail@plt>
  42865d:	nop    DWORD PTR [rax]

0000000000428660 <flatcc_builder_truncate_string@@Base>:
  428660:	sub    rsp,0x8
  428664:	mov    rdx,QWORD PTR [rdi+0x30]
  428668:	cmp    WORD PTR [rdx+0xe],0x6
  42866d:	jne    4286a0 <flatcc_builder_truncate_string@@Base+0x40>
  42866f:	mov    ecx,DWORD PTR [rdx+0x14]
  428672:	cmp    rcx,rsi
  428675:	mov    rax,rcx
  428678:	jb     4286bf <flatcc_builder_truncate_string@@Base+0x5f>
  42867a:	sub    eax,esi
  42867c:	mov    DWORD PTR [rdx+0x14],eax
  42867f:	mov    eax,DWORD PTR [rdi+0x20]
  428682:	mov    rdx,QWORD PTR [rdi+0x18]
  428686:	sub    eax,esi
  428688:	mov    DWORD PTR [rdi+0x20],eax
  42868b:	lea    rdi,[rdx+rax*1]
  42868f:	mov    rdx,rsi
  428692:	xor    esi,esi
  428694:	call   405110 <memset@plt>
  428699:	xor    eax,eax
  42869b:	add    rsp,0x8
  42869f:	ret    
  4286a0:	lea    rcx,[rip+0x21279]        # 449920 <fb_schema_table_missing@@Base+0x35b0>
  4286a7:	lea    rsi,[rip+0x20a42]        # 4490f0 <fb_schema_table_missing@@Base+0x2d80>
  4286ae:	lea    rdi,[rip+0x20bc3]        # 449278 <fb_schema_table_missing@@Base+0x2f08>
  4286b5:	mov    edx,0x3eb
  4286ba:	call   405100 <__assert_fail@plt>
  4286bf:	lea    rcx,[rip+0x2125a]        # 449920 <fb_schema_table_missing@@Base+0x35b0>
  4286c6:	lea    rsi,[rip+0x20a23]        # 4490f0 <fb_schema_table_missing@@Base+0x2d80>
  4286cd:	lea    rdi,[rip+0x20c3c]        # 449310 <fb_schema_table_missing@@Base+0x2fa0>
  4286d4:	mov    edx,0x3ec
  4286d9:	call   405100 <__assert_fail@plt>
  4286de:	xchg   ax,ax

00000000004286e0 <flatcc_builder_start_vector@@Base>:
  4286e0:	push   r12
  4286e2:	cmp    dx,0x4
  4286e6:	push   rbp
  4286e7:	mov    rbp,rsi
  4286ea:	mov    esi,0x4
  4286ef:	push   rbx
  4286f0:	cmovb  edx,esi
  4286f3:	mov    rbx,rdi
  4286f6:	mov    r12,rcx
  4286f9:	movzx  esi,dx
  4286fc:	call   426e60 <flatcc_builder_default_alloc@@Base+0x260>
  428701:	test   eax,eax
  428703:	jne    428750 <flatcc_builder_start_vector@@Base+0x70>
  428705:	mov    rsi,QWORD PTR [rbx+0x30]
  428709:	mov    edx,0x4
  42870e:	mov    DWORD PTR [rsi+0x10],ebp
  428711:	mov    DWORD PTR [rsi+0x14],0x0
  428718:	mov    DWORD PTR [rsi+0x18],r12d
  42871c:	mov    WORD PTR [rsi+0xe],dx
  428720:	mov    edx,DWORD PTR [rbx+0x28]
  428723:	mov    rcx,rdx
  428726:	add    rdx,QWORD PTR [rbx+0x68]
  42872a:	mov    QWORD PTR [rbx+0x18],rdx
  42872e:	mov    edx,DWORD PTR [rbx+0x70]
  428731:	sub    edx,ecx
  428733:	mov    ecx,0xfffffffc
  428738:	cmp    edx,ecx
  42873a:	cmova  edx,ecx
  42873d:	mov    DWORD PTR [rbx+0x24],edx
  428740:	mov    DWORD PTR [rsi+0x4],ecx
  428743:	pop    rbx
  428744:	pop    rbp
  428745:	pop    r12
  428747:	ret    
  428748:	nop    DWORD PTR [rax+rax*1+0x0]
  428750:	mov    eax,0xffffffff
  428755:	jmp    428743 <flatcc_builder_start_vector@@Base+0x63>
  428757:	nop    WORD PTR [rax+rax*1+0x0]

0000000000428760 <flatcc_builder_start_offset_vector@@Base>:
  428760:	push   rbx
  428761:	mov    esi,0x4
  428766:	mov    rbx,rdi
  428769:	call   426e60 <flatcc_builder_default_alloc@@Base+0x260>
  42876e:	test   eax,eax
  428770:	jne    4287b8 <flatcc_builder_start_offset_vector@@Base+0x58>
  428772:	mov    rcx,QWORD PTR [rbx+0x30]
  428776:	mov    edx,0x5
  42877b:	mov    DWORD PTR [rcx+0x10],0x4
  428782:	mov    DWORD PTR [rcx+0x14],0x0
  428789:	mov    WORD PTR [rcx+0xe],dx
  42878d:	mov    edx,DWORD PTR [rbx+0x28]
  428790:	mov    rsi,rdx
  428793:	add    rdx,QWORD PTR [rbx+0x68]
  428797:	mov    QWORD PTR [rbx+0x18],rdx
  42879b:	mov    edx,DWORD PTR [rbx+0x70]
  42879e:	sub    edx,esi
  4287a0:	mov    esi,0xfffffffc
  4287a5:	cmp    edx,esi
  4287a7:	cmova  edx,esi
  4287aa:	mov    DWORD PTR [rbx+0x24],edx
  4287ad:	mov    DWORD PTR [rcx+0x4],esi
  4287b0:	pop    rbx
  4287b1:	ret    
  4287b2:	nop    WORD PTR [rax+rax*1+0x0]
  4287b8:	mov    eax,0xffffffff
  4287bd:	pop    rbx
  4287be:	ret    
  4287bf:	nop

00000000004287c0 <flatcc_builder_start_string@@Base>:
  4287c0:	push   rbx
  4287c1:	mov    esi,0x1
  4287c6:	mov    rbx,rdi
  4287c9:	call   426e60 <flatcc_builder_default_alloc@@Base+0x260>
  4287ce:	test   eax,eax
  4287d0:	jne    428818 <flatcc_builder_start_string@@Base+0x58>
  4287d2:	mov    rcx,QWORD PTR [rbx+0x30]
  4287d6:	mov    edx,0x6
  4287db:	mov    DWORD PTR [rcx+0x10],0x1
  4287e2:	mov    DWORD PTR [rcx+0x14],0x0
  4287e9:	mov    WORD PTR [rcx+0xe],dx
  4287ed:	mov    edx,DWORD PTR [rbx+0x28]
  4287f0:	mov    rsi,rdx
  4287f3:	add    rdx,QWORD PTR [rbx+0x68]
  4287f7:	mov    QWORD PTR [rbx+0x18],rdx
  4287fb:	mov    edx,DWORD PTR [rbx+0x70]
  4287fe:	sub    edx,esi
  428800:	mov    esi,0xfffffffc
  428805:	cmp    edx,esi
  428807:	cmova  edx,esi
  42880a:	mov    DWORD PTR [rbx+0x24],edx
  42880d:	mov    DWORD PTR [rcx+0x4],esi
  428810:	pop    rbx
  428811:	ret    
  428812:	nop    WORD PTR [rax+rax*1+0x0]
  428818:	mov    eax,0xffffffff
  42881d:	pop    rbx
  42881e:	ret    
  42881f:	nop

0000000000428820 <flatcc_builder_reserve_table@@Base>:
  428820:	test   esi,esi
  428822:	push   r12
  428824:	push   rbp
  428825:	push   rbx
  428826:	js     4288df <flatcc_builder_reserve_table@@Base+0xbf>
  42882c:	mov    rax,QWORD PTR [rdi+0x30]
  428830:	lea    r12d,[rsi+rsi*1+0x4]
  428835:	mov    rbx,rdi
  428838:	movzx  edx,WORD PTR [rax+0x1c]
  42883c:	mov    eax,DWORD PTR [rax+0x10]
  42883f:	lea    ebp,[rax+rdx*2]
  428842:	mov    edx,r12d
  428845:	add    rdx,rbp
  428848:	cmp    rdx,QWORD PTR [rdi+0x60]
  42884c:	ja     428890 <flatcc_builder_reserve_table@@Base+0x70>
  42884e:	add    rbp,QWORD PTR [rbx+0x58]
  428852:	je     4288d0 <flatcc_builder_reserve_table@@Base+0xb0>
  428854:	mov    rax,QWORD PTR [rbx+0x30]
  428858:	add    rbp,0x4
  42885c:	lea    edx,[r12-0x3]
  428861:	mov    QWORD PTR [rbx+0x8],rbp
  428865:	mov    ebp,DWORD PTR [rax+0x14]
  428868:	add    rdx,rbp
  42886b:	cmp    rdx,QWORD PTR [rbx+0x90]
  428872:	ja     4288b0 <flatcc_builder_reserve_table@@Base+0x90>
  428874:	add    rbp,QWORD PTR [rbx+0x88]
  42887b:	xor    eax,eax
  42887d:	test   rbp,rbp
  428880:	mov    QWORD PTR [rbx],rbp
  428883:	sete   al
  428886:	neg    eax
  428888:	pop    rbx
  428889:	pop    rbp
  42888a:	pop    r12
  42888c:	ret    
  42888d:	nop    DWORD PTR [rax]
  428890:	lea    rsi,[rdi+0x58]
  428894:	xor    r8d,r8d
  428897:	mov    rdi,QWORD PTR [rdi+0x40]
  42889b:	mov    ecx,0x1
  4288a0:	call   QWORD PTR [rbx+0x50]
  4288a3:	test   eax,eax
  4288a5:	je     42884e <flatcc_builder_reserve_table@@Base+0x2e>
  4288a7:	call   4052cc <__sprintf_chk@plt+0xac>
  4288ac:	nop    DWORD PTR [rax+0x0]
  4288b0:	xor    ecx,ecx
  4288b2:	lea    rsi,[rbx+0x88]
  4288b9:	mov    rdi,QWORD PTR [rbx+0x40]
  4288bd:	mov    r8d,0x3
  4288c3:	call   QWORD PTR [rbx+0x50]
  4288c6:	test   eax,eax
  4288c8:	je     428874 <flatcc_builder_reserve_table@@Base+0x54>
  4288ca:	jmp    4288a7 <flatcc_builder_reserve_table@@Base+0x87>
  4288cc:	nop    DWORD PTR [rax+0x0]
  4288d0:	mov    QWORD PTR [rbx+0x8],0x0
  4288d8:	mov    eax,0xffffffff
  4288dd:	jmp    428888 <flatcc_builder_reserve_table@@Base+0x68>
  4288df:	lea    rcx,[rip+0x2101a]        # 449900 <fb_schema_table_missing@@Base+0x3590>
  4288e6:	lea    rsi,[rip+0x20803]        # 4490f0 <fb_schema_table_missing@@Base+0x2d80>
  4288ed:	lea    rdi,[rip+0x20bef]        # 4494e3 <fb_schema_table_missing@@Base+0x3173>
  4288f4:	mov    edx,0x429
  4288f9:	call   405100 <__assert_fail@plt>
  4288fe:	xchg   ax,ax

0000000000428900 <flatcc_builder_start_table@@Base>:
  428900:	push   r13
  428902:	push   r12
  428904:	mov    r12d,esi
  428907:	push   rbp
  428908:	push   rbx
  428909:	mov    esi,0x4
  42890e:	mov    rbx,rdi
  428911:	sub    rsp,0x8
  428915:	call   426e60 <flatcc_builder_default_alloc@@Base+0x260>
  42891a:	test   eax,eax
  42891c:	jne    428a50 <flatcc_builder_start_table@@Base+0x150>
  428922:	mov    rcx,QWORD PTR [rbx+0x8]
  428926:	mov    ebp,eax
  428928:	mov    rax,QWORD PTR [rbx+0x58]
  42892c:	mov    rdx,QWORD PTR [rbx+0x30]
  428930:	xor    edi,edi
  428932:	mov    r8d,0x3
  428938:	sub    rcx,rax
  42893b:	mov    DWORD PTR [rdx+0x10],ecx
  42893e:	mov    rsi,QWORD PTR [rbx]
  428941:	sub    rsi,QWORD PTR [rbx+0x88]
  428948:	mov    DWORD PTR [rdx+0x14],esi
  42894b:	mov    esi,DWORD PTR [rbx+0x14]
  42894e:	mov    DWORD PTR [rdx+0x18],esi
  428951:	movzx  esi,WORD PTR [rbx+0x10]
  428955:	mov    WORD PTR [rdx+0x1c],si
  428959:	lea    r13d,[rcx+rsi*2]
  42895d:	mov    DWORD PTR [rbx+0x14],0x2f693b52
  428964:	mov    WORD PTR [rbx+0x10],di
  428968:	mov    WORD PTR [rdx+0xe],r8w
  42896d:	lea    edx,[r12+r12*1+0x4]
  428972:	add    rdx,r13
  428975:	cmp    rdx,QWORD PTR [rbx+0x60]
  428979:	ja     4289f8 <flatcc_builder_start_table@@Base+0xf8>
  42897b:	add    rax,r13
  42897e:	je     428a48 <flatcc_builder_start_table@@Base+0x148>
  428984:	add    rax,0x4
  428988:	lea    edx,[r12+r12*1+0x1]
  42898d:	mov    QWORD PTR [rbx+0x8],rax
  428991:	mov    rax,QWORD PTR [rbx+0x30]
  428995:	mov    r13d,DWORD PTR [rax+0x14]
  428999:	add    rdx,r13
  42899c:	cmp    rdx,QWORD PTR [rbx+0x90]
  4289a3:	ja     428a20 <flatcc_builder_start_table@@Base+0x120>
  4289a5:	add    r13,QWORD PTR [rbx+0x88]
  4289ac:	test   r13,r13
  4289af:	mov    QWORD PTR [rbx],r13
  4289b2:	je     428a50 <flatcc_builder_start_table@@Base+0x150>
  4289b8:	mov    eax,DWORD PTR [rbx+0x28]
  4289bb:	mov    rdx,rax
  4289be:	add    rax,QWORD PTR [rbx+0x68]
  4289c2:	mov    QWORD PTR [rbx+0x18],rax
  4289c6:	mov    eax,DWORD PTR [rbx+0x70]
  4289c9:	sub    eax,edx
  4289cb:	mov    edx,0xfffc
  4289d0:	cmp    eax,0xfffc
  4289d5:	cmova  eax,edx
  4289d8:	mov    DWORD PTR [rbx+0x24],eax
  4289db:	mov    rax,QWORD PTR [rbx+0x30]
  4289df:	mov    DWORD PTR [rax+0x4],0xfffc
  4289e6:	add    rsp,0x8
  4289ea:	mov    eax,ebp
  4289ec:	pop    rbx
  4289ed:	pop    rbp
  4289ee:	pop    r12
  4289f0:	pop    r13
  4289f2:	ret    
  4289f3:	nop    DWORD PTR [rax+rax*1+0x0]
  4289f8:	xor    r8d,r8d
  4289fb:	lea    rsi,[rbx+0x58]
  4289ff:	mov    rdi,QWORD PTR [rbx+0x40]
  428a03:	mov    ecx,0x1
  428a08:	call   QWORD PTR [rbx+0x50]
  428a0b:	test   eax,eax
  428a0d:	jne    428a3e <flatcc_builder_start_table@@Base+0x13e>
  428a0f:	mov    rax,QWORD PTR [rbx+0x58]
  428a13:	jmp    42897b <flatcc_builder_start_table@@Base+0x7b>
  428a18:	nop    DWORD PTR [rax+rax*1+0x0]
  428a20:	xor    ecx,ecx
  428a22:	lea    rsi,[rbx+0x88]
  428a29:	mov    rdi,QWORD PTR [rbx+0x40]
  428a2d:	mov    r8d,0x3
  428a33:	call   QWORD PTR [rbx+0x50]
  428a36:	test   eax,eax
  428a38:	je     4289a5 <flatcc_builder_start_table@@Base+0xa5>
  428a3e:	call   4052cc <__sprintf_chk@plt+0xac>
  428a43:	nop    DWORD PTR [rax+rax*1+0x0]
  428a48:	mov    QWORD PTR [rbx+0x8],0x0
  428a50:	add    rsp,0x8
  428a54:	mov    ebp,0xffffffff
  428a59:	pop    rbx
  428a5a:	mov    eax,ebp
  428a5c:	pop    rbp
  428a5d:	pop    r12
  428a5f:	pop    r13
  428a61:	ret    
  428a62:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  428a6d:	nop    DWORD PTR [rax]

0000000000428a70 <flatcc_builder_create_vtable@@Base>:
  428a70:	push   rbp
  428a71:	push   rbx
  428a72:	mov    rbp,rdi
  428a75:	sub    rsp,0xa8
  428a7c:	mov    rax,QWORD PTR fs:0x28
  428a85:	mov    QWORD PTR [rsp+0x98],rax
  428a8d:	xor    eax,eax
  428a8f:	test   dx,dx
  428a92:	mov    QWORD PTR [rsp],0x0
  428a9a:	mov    DWORD PTR [rsp+0x8],0x0
  428aa2:	je     428b30 <flatcc_builder_create_vtable@@Base+0xc0>
  428aa8:	mov    QWORD PTR [rsp+0x10],rsi
  428aad:	mov    esi,DWORD PTR [rdi+0x100]
  428ab3:	movzx  r8d,dx
  428ab7:	mov    QWORD PTR [rsp],r8
  428abb:	mov    QWORD PTR [rsp+0x18],r8
  428ac0:	movzx  edx,dx
  428ac3:	mov    DWORD PTR [rsp+0x8],0x1
  428acb:	test   esi,esi
  428acd:	je     428b68 <flatcc_builder_create_vtable@@Base+0xf8>
  428ad3:	mov    eax,DWORD PTR [rbp+0xf0]
  428ad9:	mov    ebx,eax
  428adb:	sub    ebx,edx
  428add:	cmp    eax,ebx
  428adf:	jle    428b44 <flatcc_builder_create_vtable@@Base+0xd4>
  428ae1:	lea    rsi,[rsp+0x10]
  428ae6:	mov    rdi,QWORD PTR [rbp+0x38]
  428aea:	mov    ecx,ebx
  428aec:	mov    edx,DWORD PTR [rsp+0x8]
  428af0:	call   QWORD PTR [rbp+0x48]
  428af3:	test   eax,eax
  428af5:	jne    428bc0 <flatcc_builder_create_vtable@@Base+0x150>
  428afb:	cmp    ebx,0x1
  428afe:	mov    DWORD PTR [rbp+0xf0],ebx
  428b04:	sbb    ebx,0xffffffff
  428b07:	mov    rcx,QWORD PTR [rsp+0x98]
  428b0f:	xor    rcx,QWORD PTR fs:0x28
  428b18:	mov    eax,ebx
  428b1a:	jne    428bbb <flatcc_builder_create_vtable@@Base+0x14b>
  428b20:	add    rsp,0xa8
  428b27:	pop    rbx
  428b28:	pop    rbp
  428b29:	ret    
  428b2a:	nop    WORD PTR [rax+rax*1+0x0]
  428b30:	mov    edx,DWORD PTR [rdi+0x100]
  428b36:	test   edx,edx
  428b38:	jne    428b44 <flatcc_builder_create_vtable@@Base+0xd4>
  428b3a:	mov    eax,DWORD PTR [rdi+0x124]
  428b40:	test   eax,eax
  428b42:	je     428bb0 <flatcc_builder_create_vtable@@Base+0x140>
  428b44:	lea    rcx,[rip+0x20fe5]        # 449b30 <fb_schema_table_missing@@Base+0x37c0>
  428b4b:	lea    rsi,[rip+0x2059e]        # 4490f0 <fb_schema_table_missing@@Base+0x2d80>
  428b52:	lea    rdi,[rip+0xe6d0]        # 437229 <_IO_stdin_used@@Base+0xa229>
  428b59:	mov    edx,0x287
  428b5e:	call   405100 <__assert_fail@plt>
  428b63:	nop    DWORD PTR [rax+rax*1+0x0]
  428b68:	mov    ecx,DWORD PTR [rdi+0x124]
  428b6e:	test   ecx,ecx
  428b70:	jne    428ad3 <flatcc_builder_create_vtable@@Base+0x63>
  428b76:	mov    ebx,DWORD PTR [rdi+0xf4]
  428b7c:	add    edx,ebx
  428b7e:	cmp    ebx,edx
  428b80:	mov    DWORD PTR [rdi+0xf4],edx
  428b86:	jg     428be4 <flatcc_builder_create_vtable@@Base+0x174>
  428b88:	lea    rsi,[rsp+0x10]
  428b8d:	mov    rdi,QWORD PTR [rbp+0x38]
  428b91:	mov    ecx,ebx
  428b93:	mov    edx,DWORD PTR [rsp+0x8]
  428b97:	call   QWORD PTR [rbp+0x48]
  428b9a:	test   eax,eax
  428b9c:	jne    428bc5 <flatcc_builder_create_vtable@@Base+0x155>
  428b9e:	add    ebx,0x1
  428ba1:	jmp    428b07 <flatcc_builder_create_vtable@@Base+0x97>
  428ba6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  428bb0:	mov    ebx,DWORD PTR [rbp+0xf4]
  428bb6:	xor    r8d,r8d
  428bb9:	jmp    428b88 <flatcc_builder_create_vtable@@Base+0x118>
  428bbb:	call   4050d0 <__stack_chk_fail@plt>
  428bc0:	call   405312 <__sprintf_chk@plt+0xf2>
  428bc5:	lea    rcx,[rip+0x20f74]        # 449b40 <fb_schema_table_missing@@Base+0x37d0>
  428bcc:	lea    rsi,[rip+0x2051d]        # 4490f0 <fb_schema_table_missing@@Base+0x2d80>
  428bd3:	lea    rdi,[rip+0xe64f]        # 437229 <_IO_stdin_used@@Base+0xa229>
  428bda:	mov    edx,0x2a5
  428bdf:	call   405100 <__assert_fail@plt>
  428be4:	call   4052ef <__sprintf_chk@plt+0xcf>
  428be9:	nop    DWORD PTR [rax+0x0]

0000000000428bf0 <flatcc_builder_create_cached_vtable@@Base>:
  428bf0:	push   r15
  428bf2:	push   r14
  428bf4:	mov    r15,rdi
  428bf7:	push   r13
  428bf9:	push   r12
  428bfb:	movzx  r14d,dx
  428bff:	push   rbp
  428c00:	push   rbx
  428c01:	mov    ebp,ecx
  428c03:	sub    rsp,0x38
  428c07:	mov    rbx,QWORD PTR [rdi+0xd8]
  428c0e:	mov    QWORD PTR [rsp+0x10],rsi
  428c13:	mov    DWORD PTR [rsp+0x2c],edx
  428c17:	test   rbx,rbx
  428c1a:	je     428da8 <flatcc_builder_create_cached_vtable@@Base+0x1b8>
  428c20:	mov    eax,0x20
  428c25:	sub    eax,ebx
  428c27:	shrx   ebp,ebp,eax
  428c2c:	mov    rax,QWORD PTR [r15+0xa8]
  428c33:	lea    r12,[rax+rbp*4]
  428c37:	test   r12,r12
  428c3a:	je     428d90 <flatcc_builder_create_cached_vtable@@Base+0x1a0>
  428c40:	mov    ebp,DWORD PTR [r12]
  428c44:	test   ebp,ebp
  428c46:	je     428eb0 <flatcc_builder_create_cached_vtable@@Base+0x2c0>
  428c4c:	movzx  eax,r14w
  428c50:	mov    r11,QWORD PTR [r15+0xb8]
  428c57:	mov    r8,QWORD PTR [r15+0x78]
  428c5b:	mov    r13,r12
  428c5e:	mov    QWORD PTR [rsp+0x20],0x0
  428c67:	mov    QWORD PTR [rsp+0x18],rax
  428c6c:	jmp    428c7b <flatcc_builder_create_cached_vtable@@Base+0x8b>
  428c6e:	xchg   ax,ax
  428c70:	mov    ebp,DWORD PTR [rbx+0xc]
  428c73:	lea    r13,[rbx+0xc]
  428c77:	test   ebp,ebp
  428c79:	je     428cd8 <flatcc_builder_create_cached_vtable@@Base+0xe8>
  428c7b:	mov    ebx,ebp
  428c7d:	add    rbx,r11
  428c80:	mov    esi,DWORD PTR [rbx+0x8]
  428c83:	add    rsi,r8
  428c86:	cmp    WORD PTR [rsi],r14w
  428c8a:	jne    428c70 <flatcc_builder_create_cached_vtable@@Base+0x80>
  428c8c:	mov    rdx,QWORD PTR [rsp+0x18]
  428c91:	mov    rdi,QWORD PTR [rsp+0x10]
  428c96:	mov    QWORD PTR [rsp+0x8],r8
  428c9b:	mov    QWORD PTR [rsp],r11
  428c9f:	call   405130 <memcmp@plt>
  428ca4:	test   eax,eax
  428ca6:	mov    r11,QWORD PTR [rsp]
  428caa:	mov    r8,QWORD PTR [rsp+0x8]
  428caf:	jne    428c70 <flatcc_builder_create_cached_vtable@@Base+0x80>
  428cb1:	mov    eax,DWORD PTR [r15+0x100]
  428cb8:	cmp    DWORD PTR [rbx+0x4],eax
  428cbb:	je     428d60 <flatcc_builder_create_cached_vtable@@Base+0x170>
  428cc1:	mov    ebp,DWORD PTR [rbx+0xc]
  428cc4:	lea    r13,[rbx+0xc]
  428cc8:	mov    QWORD PTR [rsp+0x20],rbx
  428ccd:	test   ebp,ebp
  428ccf:	jne    428c7b <flatcc_builder_create_cached_vtable@@Base+0x8b>
  428cd1:	nop    DWORD PTR [rax+0x0]
  428cd8:	mov    ebx,DWORD PTR [r15+0xe4]
  428cdf:	lea    rdx,[rbx+0x10]
  428ce3:	cmp    rdx,QWORD PTR [r15+0xc0]
  428cea:	ja     428e88 <flatcc_builder_create_cached_vtable@@Base+0x298>
  428cf0:	add    rbx,QWORD PTR [r15+0xb8]
  428cf7:	je     428d90 <flatcc_builder_create_cached_vtable@@Base+0x1a0>
  428cfd:	mov    eax,DWORD PTR [r15+0xe4]
  428d04:	movzx  ebp,WORD PTR [rsp+0x2c]
  428d09:	mov    rdi,r15
  428d0c:	mov    rsi,QWORD PTR [rsp+0x10]
  428d11:	lea    edx,[rax+0x10]
  428d14:	mov    DWORD PTR [r15+0xe4],edx
  428d1b:	mov    edx,DWORD PTR [r15+0x100]
  428d22:	mov    DWORD PTR [rbx+0x4],edx
  428d25:	mov    edx,DWORD PTR [r12]
  428d29:	mov    DWORD PTR [rbx+0xc],edx
  428d2c:	mov    DWORD PTR [r12],eax
  428d30:	mov    edx,ebp
  428d32:	call   428a70 <flatcc_builder_create_vtable@@Base>
  428d37:	test   eax,eax
  428d39:	mov    DWORD PTR [rbx],eax
  428d3b:	je     428d90 <flatcc_builder_create_cached_vtable@@Base+0x1a0>
  428d3d:	mov    rdi,QWORD PTR [rsp+0x20]
  428d42:	test   rdi,rdi
  428d45:	je     428ebe <flatcc_builder_create_cached_vtable@@Base+0x2ce>
  428d4b:	mov    edx,DWORD PTR [rdi+0x8]
  428d4e:	mov    DWORD PTR [rbx+0x8],edx
  428d51:	add    rsp,0x38
  428d55:	pop    rbx
  428d56:	pop    rbp
  428d57:	pop    r12
  428d59:	pop    r13
  428d5b:	pop    r14
  428d5d:	pop    r15
  428d5f:	ret    
  428d60:	cmp    r12,r13
  428d63:	je     428d77 <flatcc_builder_create_cached_vtable@@Base+0x187>
  428d65:	mov    eax,DWORD PTR [rbx+0xc]
  428d68:	mov    DWORD PTR [r13+0x0],eax
  428d6c:	mov    eax,DWORD PTR [r12]
  428d70:	mov    DWORD PTR [rbx+0xc],eax
  428d73:	mov    DWORD PTR [r12],ebp
  428d77:	mov    eax,DWORD PTR [rbx]
  428d79:	add    rsp,0x38
  428d7d:	pop    rbx
  428d7e:	pop    rbp
  428d7f:	pop    r12
  428d81:	pop    r13
  428d83:	pop    r14
  428d85:	pop    r15
  428d87:	ret    
  428d88:	nop    DWORD PTR [rax+rax*1+0x0]
  428d90:	add    rsp,0x38
  428d94:	xor    eax,eax
  428d96:	pop    rbx
  428d97:	pop    rbp
  428d98:	pop    r12
  428d9a:	pop    r13
  428d9c:	pop    r14
  428d9e:	pop    r15
  428da0:	ret    
  428da1:	nop    DWORD PTR [rax+0x0]
  428da8:	mov    eax,DWORD PTR [rdi+0xe4]
  428dae:	lea    r12,[rdi+0xa8]
  428db5:	test   eax,eax
  428db7:	jne    428f4f <flatcc_builder_create_cached_vtable@@Base+0x35f>
  428dbd:	cmp    QWORD PTR [rdi+0xc0],0xf
  428dc5:	jbe    428e58 <flatcc_builder_create_cached_vtable@@Base+0x268>
  428dcb:	cmp    QWORD PTR [r15+0xb8],0x0
  428dd3:	je     428d90 <flatcc_builder_create_cached_vtable@@Base+0x1a0>
  428dd5:	mov    DWORD PTR [r15+0xe4],0x10
  428de0:	mov    rdi,QWORD PTR [r15+0x40]
  428de4:	mov    r8d,0x5
  428dea:	mov    ecx,0x1
  428def:	mov    edx,0x100
  428df4:	mov    rsi,r12
  428df7:	call   QWORD PTR [r15+0x50]
  428dfb:	test   eax,eax
  428dfd:	jne    428d90 <flatcc_builder_create_cached_vtable@@Base+0x1a0>
  428dff:	mov    rcx,QWORD PTR [r15+0xb0]
  428e06:	mov    eax,0x100
  428e0b:	jmp    428e13 <flatcc_builder_create_cached_vtable@@Base+0x223>
  428e0d:	nop    DWORD PTR [rax]
  428e10:	mov    rax,rdx
  428e13:	lea    rdx,[rax+rax*1]
  428e17:	cmp    rdx,rcx
  428e1a:	jbe    428e10 <flatcc_builder_create_cached_vtable@@Base+0x220>
  428e1c:	shr    rax,0x2
  428e20:	cmp    rax,0x1
  428e24:	jbe    428f18 <flatcc_builder_create_cached_vtable@@Base+0x328>
  428e2a:	mov    esi,0x1
  428e2f:	nop
  428e30:	add    rbx,0x1
  428e34:	shlx   rdx,rsi,rbx
  428e39:	cmp    rax,rdx
  428e3c:	ja     428e30 <flatcc_builder_create_cached_vtable@@Base+0x240>
  428e3e:	mov    eax,0x20
  428e43:	sub    eax,ebx
  428e45:	mov    QWORD PTR [r15+0xd8],rbx
  428e4c:	jmp    428c27 <flatcc_builder_create_cached_vtable@@Base+0x37>
  428e51:	nop    DWORD PTR [rax+0x0]
  428e58:	lea    rsi,[rdi+0xb8]
  428e5f:	xor    ecx,ecx
  428e61:	mov    rdi,QWORD PTR [rdi+0x40]
  428e65:	mov    r8d,0x6
  428e6b:	mov    edx,0x10
  428e70:	call   QWORD PTR [r15+0x50]
  428e74:	test   eax,eax
  428e76:	je     428dcb <flatcc_builder_create_cached_vtable@@Base+0x1db>
  428e7c:	jmp    428f3a <flatcc_builder_create_cached_vtable@@Base+0x34a>
  428e81:	nop    DWORD PTR [rax+0x0]
  428e88:	xor    ecx,ecx
  428e8a:	lea    rsi,[r15+0xb8]
  428e91:	mov    rdi,QWORD PTR [r15+0x40]
  428e95:	mov    r8d,0x6
  428e9b:	call   QWORD PTR [r15+0x50]
  428e9f:	test   eax,eax
  428ea1:	je     428cf0 <flatcc_builder_create_cached_vtable@@Base+0x100>
  428ea7:	jmp    428f3a <flatcc_builder_create_cached_vtable@@Base+0x34a>
  428eac:	nop    DWORD PTR [rax+0x0]
  428eb0:	mov    QWORD PTR [rsp+0x20],0x0
  428eb9:	jmp    428cd8 <flatcc_builder_create_cached_vtable@@Base+0xe8>
  428ebe:	mov    rax,QWORD PTR [r15+0x118]
  428ec5:	mov    r12d,DWORD PTR [r15+0xe0]
  428ecc:	test   rax,rax
  428ecf:	je     428edb <flatcc_builder_create_cached_vtable@@Base+0x2eb>
  428ed1:	lea    edx,[rbp+r12*1+0x0]
  428ed6:	cmp    rax,rdx
  428ed9:	jb     428f40 <flatcc_builder_create_cached_vtable@@Base+0x350>
  428edb:	lea    rdx,[r14+r12*1]
  428edf:	cmp    rdx,QWORD PTR [r15+0x80]
  428ee6:	ja     428f22 <flatcc_builder_create_cached_vtable@@Base+0x332>
  428ee8:	mov    rdi,r12
  428eeb:	add    rdi,QWORD PTR [r15+0x78]
  428eef:	je     428f6e <flatcc_builder_create_cached_vtable@@Base+0x37e>
  428ef1:	mov    eax,DWORD PTR [r15+0xe0]
  428ef8:	mov    rsi,QWORD PTR [rsp+0x10]
  428efd:	mov    rdx,r14
  428f00:	add    ebp,eax
  428f02:	mov    DWORD PTR [rbx+0x8],eax
  428f05:	mov    DWORD PTR [r15+0xe0],ebp
  428f0c:	call   405170 <memcpy@plt>
  428f11:	mov    eax,DWORD PTR [rbx]
  428f13:	jmp    428d51 <flatcc_builder_create_cached_vtable@@Base+0x161>
  428f18:	mov    eax,0x20
  428f1d:	jmp    428e45 <flatcc_builder_create_cached_vtable@@Base+0x255>
  428f22:	xor    ecx,ecx
  428f24:	lea    rsi,[r15+0x78]
  428f28:	mov    rdi,QWORD PTR [r15+0x40]
  428f2c:	mov    r8d,0x2
  428f32:	call   QWORD PTR [r15+0x50]
  428f36:	test   eax,eax
  428f38:	je     428ee8 <flatcc_builder_create_cached_vtable@@Base+0x2f8>
  428f3a:	call   4052cc <__sprintf_chk@plt+0xac>
  428f3f:	nop
  428f40:	mov    rdi,r15
  428f43:	call   4271c0 <flatcc_builder_flush_vtable_cache@@Base>
  428f48:	mov    eax,DWORD PTR [rbx]
  428f4a:	jmp    428d79 <flatcc_builder_create_cached_vtable@@Base+0x189>
  428f4f:	lea    rcx,[rip+0x2099a]        # 4498f0 <fb_schema_table_missing@@Base+0x3580>
  428f56:	lea    rsi,[rip+0x20193]        # 4490f0 <fb_schema_table_missing@@Base+0x2d80>
  428f5d:	lea    rdi,[rip+0x20569]        # 4494cd <fb_schema_table_missing@@Base+0x315d>
  428f64:	mov    edx,0x156
  428f69:	call   405100 <__assert_fail@plt>
  428f6e:	mov    eax,0xffffffff
  428f73:	jmp    428d51 <flatcc_builder_create_cached_vtable@@Base+0x161>
  428f78:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000428f80 <flatcc_builder_create_table@@Base>:
  428f80:	push   rbp
  428f81:	push   rbx
  428f82:	sub    rsp,0xb8
  428f89:	mov    rax,QWORD PTR fs:0x28
  428f92:	mov    QWORD PTR [rsp+0xa8],rax
  428f9a:	xor    eax,eax
  428f9c:	test   r9d,r9d
  428f9f:	mov    r11d,DWORD PTR [rsp+0xd0]
  428fa7:	js     42914d <flatcc_builder_create_table@@Base+0x1cd>
  428fad:	test   r11b,0x1
  428fb1:	je     42912e <flatcc_builder_create_table@@Base+0x1ae>
  428fb7:	cmp    cx,0x4
  428fbb:	mov    eax,0x4
  428fc0:	mov    rbx,rdi
  428fc3:	cmovb  ecx,eax
  428fc6:	cmp    WORD PTR [rdi+0xe8],cx
  428fcd:	movzx  eax,cx
  428fd0:	jae    428fd9 <flatcc_builder_create_table@@Base+0x59>
  428fd2:	mov    WORD PTR [rdi+0xe8],cx
  428fd9:	mov    ecx,DWORD PTR [rbx+0xf0]
  428fdf:	sub    eax,0x1
  428fe2:	mov    edi,0xfffffffc
  428fe7:	sub    r11d,0x1
  428feb:	mov    r10d,ecx
  428fee:	sub    r10d,edx
  428ff1:	and    r10d,eax
  428ff4:	mov    eax,edi
  428ff6:	sub    eax,edx
  428ff8:	add    eax,ecx
  428ffa:	sub    eax,r10d
  428ffd:	mov    ebp,eax
  428fff:	sub    ebp,r11d
  429002:	test   r9d,r9d
  429005:	mov    DWORD PTR [rsp+0xc],ebp
  429009:	je     42903d <flatcc_builder_create_table@@Base+0xbd>
  42900b:	lea    ecx,[r9-0x1]
  42900f:	sub    edi,eax
  429011:	lea    r9,[r8+rcx*2+0x2]
  429016:	nop    WORD PTR cs:[rax+rax*1+0x0]
  429020:	movzx  ecx,WORD PTR [r8]
  429024:	mov    r11d,edi
  429027:	add    r8,0x2
  42902b:	sub    r11d,ecx
  42902e:	add    DWORD PTR [rsi+rcx*1],r11d
  429032:	cmp    r9,r8
  429035:	jne    429020 <flatcc_builder_create_table@@Base+0xa0>
  429037:	mov    ecx,DWORD PTR [rbx+0xf0]
  42903d:	lea    rax,[rsp+0xc]
  429042:	test   rdx,rdx
  429045:	mov    QWORD PTR [rsp+0x10],0x4
  42904e:	mov    QWORD PTR [rsp+0x28],0x4
  429057:	mov    DWORD PTR [rsp+0x18],0x1
  42905f:	mov    r8d,0x4
  429065:	mov    QWORD PTR [rsp+0x20],rax
  42906a:	je     429087 <flatcc_builder_create_table@@Base+0x107>
  42906c:	lea    r8,[rdx+0x4]
  429070:	mov    QWORD PTR [rsp+0x30],rsi
  429075:	mov    QWORD PTR [rsp+0x38],rdx
  42907a:	mov    DWORD PTR [rsp+0x18],0x2
  429082:	mov    QWORD PTR [rsp+0x10],r8
  429087:	test   r10d,r10d
  42908a:	je     4290b8 <flatcc_builder_create_table@@Base+0x138>
  42908c:	movsxd rdx,DWORD PTR [rsp+0x18]
  429091:	mov    rsi,0x449be0
  429098:	add    r8,r10
  42909b:	mov    QWORD PTR [rsp+0x10],r8
  4290a0:	mov    rax,rdx
  4290a3:	shl    rdx,0x4
  4290a7:	add    eax,0x1
  4290aa:	mov    QWORD PTR [rsp+rdx*1+0x20],rsi
  4290af:	mov    QWORD PTR [rsp+rdx*1+0x28],r10
  4290b4:	mov    DWORD PTR [rsp+0x18],eax
  4290b8:	mov    ebp,ecx
  4290ba:	movabs rax,0x10000000f
  4290c4:	sub    ebp,r8d
  4290c7:	cmp    r8,rax
  4290ca:	ja     42910f <flatcc_builder_create_table@@Base+0x18f>
  4290cc:	cmp    ebp,ecx
  4290ce:	jge    42910f <flatcc_builder_create_table@@Base+0x18f>
  4290d0:	lea    rsi,[rsp+0x20]
  4290d5:	mov    rdi,QWORD PTR [rbx+0x38]
  4290d9:	mov    ecx,ebp
  4290db:	mov    edx,DWORD PTR [rsp+0x18]
  4290df:	call   QWORD PTR [rbx+0x48]
  4290e2:	test   eax,eax
  4290e4:	jne    429171 <flatcc_builder_create_table@@Base+0x1f1>
  4290ea:	mov    DWORD PTR [rbx+0xf0],ebp
  4290f0:	mov    eax,ebp
  4290f2:	mov    rbx,QWORD PTR [rsp+0xa8]
  4290fa:	xor    rbx,QWORD PTR fs:0x28
  429103:	jne    42916c <flatcc_builder_create_table@@Base+0x1ec>
  429105:	add    rsp,0xb8
  42910c:	pop    rbx
  42910d:	pop    rbp
  42910e:	ret    
  42910f:	lea    rcx,[rip+0x20a1a]        # 449b30 <fb_schema_table_missing@@Base+0x37c0>
  429116:	lea    rsi,[rip+0x1ffd3]        # 4490f0 <fb_schema_table_missing@@Base+0x2d80>
  42911d:	lea    rdi,[rip+0xe105]        # 437229 <_IO_stdin_used@@Base+0xa229>
  429124:	mov    edx,0x287
  429129:	call   405100 <__assert_fail@plt>
  42912e:	lea    rcx,[rip+0x2079b]        # 4498d0 <fb_schema_table_missing@@Base+0x3560>
  429135:	lea    rsi,[rip+0x1ffb4]        # 4490f0 <fb_schema_table_missing@@Base+0x2d80>
  42913c:	lea    rdi,[rip+0x203ab]        # 4494ee <fb_schema_table_missing@@Base+0x317e>
  429143:	mov    edx,0x4db
  429148:	call   405100 <__assert_fail@plt>
  42914d:	lea    rcx,[rip+0x2077c]        # 4498d0 <fb_schema_table_missing@@Base+0x3560>
  429154:	lea    rsi,[rip+0x1ff95]        # 4490f0 <fb_schema_table_missing@@Base+0x2d80>
  42915b:	lea    rdi,[rip+0x2037a]        # 4494dc <fb_schema_table_missing@@Base+0x316c>
  429162:	mov    edx,0x4d5
  429167:	call   405100 <__assert_fail@plt>
  42916c:	call   4050d0 <__stack_chk_fail@plt>
  429171:	call   405312 <__sprintf_chk@plt+0xf2>
  429176:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000429180 <flatcc_builder_check_required_field@@Base>:
  429180:	mov    rax,QWORD PTR [rdi+0x30]
  429184:	cmp    WORD PTR [rax+0xe],0x3
  429189:	jne    4291a6 <flatcc_builder_check_required_field@@Base+0x26>
  42918b:	xor    eax,eax
  42918d:	cmp    WORD PTR [rdi+0x10],si
  429191:	jbe    4291a2 <flatcc_builder_check_required_field@@Base+0x22>
  429193:	mov    rax,QWORD PTR [rdi+0x8]
  429197:	movzx  edx,si
  42919a:	cmp    WORD PTR [rax+rdx*2],0x0
  42919f:	setne  al
  4291a2:	movzx  eax,al
  4291a5:	ret    
  4291a6:	lea    rcx,[rip+0x206f3]        # 4498a0 <fb_schema_table_missing@@Base+0x3530>
  4291ad:	lea    rsi,[rip+0x1ff3c]        # 4490f0 <fb_schema_table_missing@@Base+0x2d80>
  4291b4:	lea    rdi,[rip+0x2017d]        # 449338 <fb_schema_table_missing@@Base+0x2fc8>
  4291bb:	sub    rsp,0x8
  4291bf:	mov    edx,0x4f8
  4291c4:	call   405100 <__assert_fail@plt>
  4291c9:	nop    DWORD PTR [rax+0x0]

00000000004291d0 <flatcc_builder_check_union_field@@Base>:
  4291d0:	mov    rax,QWORD PTR [rdi+0x30]
  4291d4:	cmp    WORD PTR [rax+0xe],0x3
  4291d9:	jne    42921b <flatcc_builder_check_union_field@@Base+0x4b>
  4291db:	xor    eax,eax
  4291dd:	test   si,si
  4291e0:	je     42920d <flatcc_builder_check_union_field@@Base+0x3d>
  4291e2:	cmp    si,WORD PTR [rdi+0x10]
  4291e6:	jae    42920d <flatcc_builder_check_union_field@@Base+0x3d>
  4291e8:	mov    rcx,QWORD PTR [rdi+0x8]
  4291ec:	movzx  edx,si
  4291ef:	movzx  eax,WORD PTR [rcx+rdx*2-0x2]
  4291f4:	test   ax,ax
  4291f7:	je     429203 <flatcc_builder_check_union_field@@Base+0x33>
  4291f9:	mov    rsi,QWORD PTR [rdi+0x18]
  4291fd:	cmp    BYTE PTR [rsi+rax*1],0x0
  429201:	jne    429210 <flatcc_builder_check_union_field@@Base+0x40>
  429203:	xor    eax,eax
  429205:	cmp    WORD PTR [rcx+rdx*2],0x0
  42920a:	sete   al
  42920d:	repz ret 
  42920f:	nop
  429210:	xor    eax,eax
  429212:	cmp    WORD PTR [rcx+rdx*2],0x0
  429217:	setne  al
  42921a:	ret    
  42921b:	lea    rcx,[rip+0x2063e]        # 449860 <fb_schema_table_missing@@Base+0x34f0>
  429222:	lea    rsi,[rip+0x1fec7]        # 4490f0 <fb_schema_table_missing@@Base+0x2d80>
  429229:	lea    rdi,[rip+0x20108]        # 449338 <fb_schema_table_missing@@Base+0x2fc8>
  429230:	sub    rsp,0x8
  429234:	mov    edx,0x4ff
  429239:	call   405100 <__assert_fail@plt>
  42923e:	xchg   ax,ax

0000000000429240 <flatcc_builder_check_required@@Base>:
  429240:	mov    rax,QWORD PTR [rdi+0x30]
  429244:	cmp    WORD PTR [rax+0xe],0x3
  429249:	jne    42929b <flatcc_builder_check_required@@Base+0x5b>
  42924b:	movzx  ecx,WORD PTR [rdi+0x10]
  42924f:	xor    eax,eax
  429251:	cmp    ecx,edx
  429253:	jl     429290 <flatcc_builder_check_required@@Base+0x50>
  429255:	test   edx,edx
  429257:	jle    42928b <flatcc_builder_check_required@@Base+0x4b>
  429259:	mov    rcx,QWORD PTR [rdi+0x8]
  42925d:	movzx  edi,WORD PTR [rsi]
  429260:	cmp    WORD PTR [rcx+rdi*2],0x0
  429265:	je     429290 <flatcc_builder_check_required@@Base+0x50>
  429267:	sub    edx,0x1
  42926a:	lea    rax,[rsi+0x2]
  42926e:	lea    rsi,[rsi+rdx*2+0x2]
  429273:	jmp    429286 <flatcc_builder_check_required@@Base+0x46>
  429275:	nop    DWORD PTR [rax]
  429278:	movzx  edx,WORD PTR [rax]
  42927b:	add    rax,0x2
  42927f:	cmp    WORD PTR [rcx+rdx*2],0x0
  429284:	je     429298 <flatcc_builder_check_required@@Base+0x58>
  429286:	cmp    rax,rsi
  429289:	jne    429278 <flatcc_builder_check_required@@Base+0x38>
  42928b:	mov    eax,0x1
  429290:	repz ret 
  429292:	nop    WORD PTR [rax+rax*1+0x0]
  429298:	xor    eax,eax
  42929a:	ret    
  42929b:	lea    rcx,[rip+0x2058e]        # 449830 <fb_schema_table_missing@@Base+0x34c0>
  4292a2:	lea    rsi,[rip+0x1fe47]        # 4490f0 <fb_schema_table_missing@@Base+0x2d80>
  4292a9:	lea    rdi,[rip+0x20088]        # 449338 <fb_schema_table_missing@@Base+0x2fc8>
  4292b0:	sub    rsp,0x8
  4292b4:	mov    edx,0x511
  4292b9:	call   405100 <__assert_fail@plt>
  4292be:	xchg   ax,ax

00000000004292c0 <flatcc_builder_end_table@@Base>:
  4292c0:	push   r13
  4292c2:	push   r12
  4292c4:	push   rbp
  4292c5:	push   rbx
  4292c6:	sub    rsp,0x8
  4292ca:	mov    rax,QWORD PTR [rdi+0x30]
  4292ce:	cmp    WORD PTR [rax+0xe],0x3
  4292d3:	jne    42942e <flatcc_builder_end_table@@Base+0x16e>
  4292d9:	movzx  ebp,WORD PTR [rdi+0x10]
  4292dd:	movzx  eax,WORD PTR [rdi+0x20]
  4292e1:	mov    rbx,rdi
  4292e4:	mov    rcx,QWORD PTR [rdi+0x8]
  4292e8:	add    ebp,0x2
  4292eb:	add    eax,0x4
  4292ee:	lea    r12,[rcx-0x4]
  4292f2:	add    ebp,ebp
  4292f4:	mov    WORD PTR [rcx-0x2],ax
  4292f8:	movzx  eax,ax
  4292fb:	mov    WORD PTR [rcx-0x4],bp
  4292ff:	mov    ecx,DWORD PTR [rdi+0x14]
  429302:	movzx  edx,bp
  429305:	mov    rsi,r12
  429308:	xor    ecx,edx
  42930a:	imul   ecx,ecx,0x9e3779b1
  429310:	xor    ecx,eax
  429312:	imul   ecx,ecx,0x9e3779b1
  429318:	mov    DWORD PTR [rdi+0x14],ecx
  42931b:	call   428bf0 <flatcc_builder_create_cached_vtable@@Base>
  429320:	test   eax,eax
  429322:	mov    r13d,eax
  429325:	jne    429340 <flatcc_builder_end_table@@Base+0x80>
  429327:	add    rsp,0x8
  42932b:	xor    ebp,ebp
  42932d:	pop    rbx
  42932e:	mov    eax,ebp
  429330:	pop    rbp
  429331:	pop    r12
  429333:	pop    r13
  429335:	ret    
  429336:	nop    WORD PTR cs:[rax+rax*1+0x0]
  429340:	movzx  edx,bp
  429343:	xor    esi,esi
  429345:	mov    rdi,r12
  429348:	call   405110 <memset@plt>
  42934d:	mov    rax,QWORD PTR [rbx+0x30]
  429351:	mov    r9,QWORD PTR [rbx]
  429354:	sub    rsp,0x8
  429358:	mov    edx,DWORD PTR [rbx+0x20]
  42935b:	movzx  ecx,WORD PTR [rbx+0xea]
  429362:	mov    rdi,rbx
  429365:	mov    rsi,QWORD PTR [rbx+0x18]
  429369:	mov    r8d,DWORD PTR [rax+0x14]
  42936d:	add    r8,QWORD PTR [rbx+0x88]
  429374:	push   r13
  429376:	sub    r9,r8
  429379:	shr    r9,1
  42937c:	call   428f80 <flatcc_builder_create_table@@Base>
  429381:	mov    ebp,eax
  429383:	test   ebp,ebp
  429385:	pop    rax
  429386:	pop    rdx
  429387:	je     429327 <flatcc_builder_end_table@@Base+0x67>
  429389:	mov    rax,QWORD PTR [rbx+0x30]
  42938d:	mov    rdi,QWORD PTR [rbx+0x18]
  429391:	xor    esi,esi
  429393:	mov    edx,DWORD PTR [rax+0x18]
  429396:	mov    DWORD PTR [rbx+0x14],edx
  429399:	movzx  edx,WORD PTR [rax+0x1c]
  42939d:	mov    WORD PTR [rbx+0x10],dx
  4293a1:	mov    edx,DWORD PTR [rax+0x10]
  4293a4:	add    rdx,QWORD PTR [rbx+0x58]
  4293a8:	mov    QWORD PTR [rbx+0x8],rdx
  4293ac:	mov    eax,DWORD PTR [rax+0x14]
  4293af:	add    rax,QWORD PTR [rbx+0x88]
  4293b6:	mov    edx,DWORD PTR [rbx+0x20]
  4293b9:	mov    QWORD PTR [rbx],rax
  4293bc:	call   405110 <memset@plt>
  4293c1:	mov    rax,QWORD PTR [rbx+0x30]
  4293c5:	mov    edi,DWORD PTR [rbx+0x70]
  4293c8:	mov    esi,DWORD PTR [rax]
  4293ca:	mov    edx,DWORD PTR [rax+0x8]
  4293cd:	mov    ecx,DWORD PTR [rax+0x4]
  4293d0:	mov    DWORD PTR [rbx+0x20],edx
  4293d3:	mov    rdx,rsi
  4293d6:	mov    DWORD PTR [rbx+0x28],esi
  4293d9:	add    rsi,QWORD PTR [rbx+0x68]
  4293dd:	sub    edi,edx
  4293df:	cmp    ecx,edi
  4293e1:	mov    edx,edi
  4293e3:	cmovb  edx,ecx
  4293e6:	mov    DWORD PTR [rbx+0x24],edx
  4293e9:	movzx  edx,WORD PTR [rbx+0xea]
  4293f0:	cmp    dx,WORD PTR [rbx+0xe8]
  4293f7:	mov    QWORD PTR [rbx+0x18],rsi
  4293fb:	mov    DWORD PTR [rax+0x4],ecx
  4293fe:	jbe    429407 <flatcc_builder_end_table@@Base+0x147>
  429400:	mov    WORD PTR [rbx+0xe8],dx
  429407:	movzx  edx,WORD PTR [rax+0xc]
  42940b:	sub    rax,0x24
  42940f:	sub    DWORD PTR [rbx+0x104],0x1
  429416:	mov    QWORD PTR [rbx+0x30],rax
  42941a:	mov    eax,ebp
  42941c:	mov    WORD PTR [rbx+0xea],dx
  429423:	add    rsp,0x8
  429427:	pop    rbx
  429428:	pop    rbp
  429429:	pop    r12
  42942b:	pop    r13
  42942d:	ret    
  42942e:	lea    rcx,[rip+0x203db]        # 449810 <fb_schema_table_missing@@Base+0x34a0>
  429435:	lea    rsi,[rip+0x1fcb4]        # 4490f0 <fb_schema_table_missing@@Base+0x2d80>
  42943c:	lea    rdi,[rip+0x1fef5]        # 449338 <fb_schema_table_missing@@Base+0x2fc8>
  429443:	mov    edx,0x525
  429448:	call   405100 <__assert_fail@plt>
  42944d:	nop    DWORD PTR [rax]

0000000000429450 <flatcc_builder_create_vector@@Base>:
  429450:	push   rbp
  429451:	push   rbx
  429452:	sub    rsp,0xb8
  429459:	mov    rax,QWORD PTR fs:0x28
  429462:	mov    QWORD PTR [rsp+0xa8],rax
  42946a:	xor    eax,eax
  42946c:	cmp    rdx,r9
  42946f:	ja     4295b4 <flatcc_builder_create_vector@@Base+0x164>
  429475:	mov    rbx,rdi
  429478:	cmp    r8w,0x4
  42947d:	mov    eax,0x4
  429482:	cmovb  r8d,eax
  429486:	cmp    r8w,WORD PTR [rbx+0xe8]
  42948e:	movzx  edi,r8w
  429492:	jbe    42949c <flatcc_builder_create_vector@@Base+0x4c>
  429494:	mov    WORD PTR [rbx+0xe8],r8w
  42949c:	imul   ecx,edx
  42949f:	mov    DWORD PTR [rsp+0xc],edx
  4294a3:	mov    edx,DWORD PTR [rbx+0xf0]
  4294a9:	sub    edi,0x1
  4294ac:	mov    QWORD PTR [rsp+0x10],0x4
  4294b5:	mov    QWORD PTR [rsp+0x28],0x4
  4294be:	mov    DWORD PTR [rsp+0x18],0x1
  4294c6:	mov    r8d,0x4
  4294cc:	mov    eax,edx
  4294ce:	sub    eax,ecx
  4294d0:	and    eax,edi
  4294d2:	lea    rdi,[rsp+0xc]
  4294d7:	test   ecx,ecx
  4294d9:	mov    QWORD PTR [rsp+0x20],rdi
  4294de:	jne    429570 <flatcc_builder_create_vector@@Base+0x120>
  4294e4:	test   eax,eax
  4294e6:	je     429514 <flatcc_builder_create_vector@@Base+0xc4>
  4294e8:	movsxd rsi,DWORD PTR [rsp+0x18]
  4294ed:	mov    rdi,0x449be0
  4294f4:	add    r8,rax
  4294f7:	mov    QWORD PTR [rsp+0x10],r8
  4294fc:	mov    rcx,rsi
  4294ff:	shl    rsi,0x4
  429503:	add    ecx,0x1
  429506:	mov    QWORD PTR [rsp+rsi*1+0x20],rdi
  42950b:	mov    QWORD PTR [rsp+rsi*1+0x28],rax
  429510:	mov    DWORD PTR [rsp+0x18],ecx
  429514:	mov    ebp,edx
  429516:	movabs rax,0x10000000f
  429520:	sub    ebp,r8d
  429523:	cmp    r8,rax
  429526:	ja     429590 <flatcc_builder_create_vector@@Base+0x140>
  429528:	cmp    edx,ebp
  42952a:	jle    429590 <flatcc_builder_create_vector@@Base+0x140>
  42952c:	lea    rsi,[rsp+0x20]
  429531:	mov    rdi,QWORD PTR [rbx+0x38]
  429535:	mov    ecx,ebp
  429537:	mov    edx,DWORD PTR [rsp+0x18]
  42953b:	call   QWORD PTR [rbx+0x48]
  42953e:	test   eax,eax
  429540:	jne    4295af <flatcc_builder_create_vector@@Base+0x15f>
  429542:	mov    DWORD PTR [rbx+0xf0],ebp
  429548:	mov    eax,ebp
  42954a:	mov    rbx,QWORD PTR [rsp+0xa8]
  429552:	xor    rbx,QWORD PTR fs:0x28
  42955b:	jne    4295d3 <flatcc_builder_create_vector@@Base+0x183>
  42955d:	add    rsp,0xb8
  429564:	pop    rbx
  429565:	pop    rbp
  429566:	ret    
  429567:	nop    WORD PTR [rax+rax*1+0x0]
  429570:	lea    r8,[rcx+0x4]
  429574:	mov    QWORD PTR [rsp+0x30],rsi
  429579:	mov    QWORD PTR [rsp+0x38],rcx
  42957e:	mov    DWORD PTR [rsp+0x18],0x2
  429586:	mov    QWORD PTR [rsp+0x10],r8
  42958b:	jmp    4294e4 <flatcc_builder_create_vector@@Base+0x94>
  429590:	lea    rcx,[rip+0x20599]        # 449b30 <fb_schema_table_missing@@Base+0x37c0>
  429597:	lea    rsi,[rip+0x1fb52]        # 4490f0 <fb_schema_table_missing@@Base+0x2d80>
  42959e:	lea    rdi,[rip+0xdc84]        # 437229 <_IO_stdin_used@@Base+0xa229>
  4295a5:	mov    edx,0x287
  4295aa:	call   405100 <__assert_fail@plt>
  4295af:	call   405312 <__sprintf_chk@plt+0xf2>
  4295b4:	lea    rcx,[rip+0x20235]        # 4497f0 <fb_schema_table_missing@@Base+0x3480>
  4295bb:	lea    rsi,[rip+0x1fb2e]        # 4490f0 <fb_schema_table_missing@@Base+0x2d80>
  4295c2:	lea    rdi,[rip+0x1ff30]        # 4494f9 <fb_schema_table_missing@@Base+0x3189>
  4295c9:	mov    edx,0x555
  4295ce:	call   405100 <__assert_fail@plt>
  4295d3:	call   4050d0 <__stack_chk_fail@plt>
  4295d8:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004295e0 <flatcc_builder_end_vector@@Base>:
  4295e0:	push   rbp
  4295e1:	push   rbx
  4295e2:	sub    rsp,0x8
  4295e6:	mov    rax,QWORD PTR [rdi+0x30]
  4295ea:	cmp    WORD PTR [rax+0xe],0x4
  4295ef:	jne    42969f <flatcc_builder_end_vector@@Base+0xbf>
  4295f5:	mov    ecx,DWORD PTR [rax+0x10]
  4295f8:	mov    edx,DWORD PTR [rax+0x14]
  4295fb:	mov    rbx,rdi
  4295fe:	mov    r9d,DWORD PTR [rax+0x18]
  429602:	movzx  r8d,WORD PTR [rdi+0xea]
  42960a:	mov    rsi,QWORD PTR [rdi+0x18]
  42960e:	call   429450 <flatcc_builder_create_vector@@Base>
  429613:	test   eax,eax
  429615:	mov    ebp,eax
  429617:	jne    429628 <flatcc_builder_end_vector@@Base+0x48>
  429619:	add    rsp,0x8
  42961d:	mov    eax,ebp
  42961f:	pop    rbx
  429620:	pop    rbp
  429621:	ret    
  429622:	nop    WORD PTR [rax+rax*1+0x0]
  429628:	mov    edx,DWORD PTR [rbx+0x20]
  42962b:	mov    rdi,QWORD PTR [rbx+0x18]
  42962f:	xor    esi,esi
  429631:	call   405110 <memset@plt>
  429636:	mov    rax,QWORD PTR [rbx+0x30]
  42963a:	mov    edi,DWORD PTR [rbx+0x70]
  42963d:	mov    esi,DWORD PTR [rax]
  42963f:	mov    edx,DWORD PTR [rax+0x8]
  429642:	mov    ecx,DWORD PTR [rax+0x4]
  429645:	mov    DWORD PTR [rbx+0x20],edx
  429648:	mov    rdx,rsi
  42964b:	mov    DWORD PTR [rbx+0x28],esi
  42964e:	add    rsi,QWORD PTR [rbx+0x68]
  429652:	sub    edi,edx
  429654:	cmp    ecx,edi
  429656:	mov    edx,edi
  429658:	cmovb  edx,ecx
  42965b:	mov    DWORD PTR [rbx+0x24],edx
  42965e:	movzx  edx,WORD PTR [rbx+0xea]
  429665:	cmp    dx,WORD PTR [rbx+0xe8]
  42966c:	mov    QWORD PTR [rbx+0x18],rsi
  429670:	mov    DWORD PTR [rax+0x4],ecx
  429673:	jbe    42967c <flatcc_builder_end_vector@@Base+0x9c>
  429675:	mov    WORD PTR [rbx+0xe8],dx
  42967c:	movzx  edx,WORD PTR [rax+0xc]
  429680:	sub    rax,0x24
  429684:	sub    DWORD PTR [rbx+0x104],0x1
  42968b:	mov    QWORD PTR [rbx+0x30],rax
  42968f:	mov    eax,ebp
  429691:	mov    WORD PTR [rbx+0xea],dx
  429698:	add    rsp,0x8
  42969c:	pop    rbx
  42969d:	pop    rbp
  42969e:	ret    
  42969f:	lea    rcx,[rip+0x2012a]        # 4497d0 <fb_schema_table_missing@@Base+0x3460>
  4296a6:	lea    rsi,[rip+0x1fa43]        # 4490f0 <fb_schema_table_missing@@Base+0x2d80>
  4296ad:	lea    rdi,[rip+0x1fb1c]        # 4491d0 <fb_schema_table_missing@@Base+0x2e60>
  4296b4:	mov    edx,0x578
  4296b9:	call   405100 <__assert_fail@plt>
  4296be:	xchg   ax,ax

00000000004296c0 <flatcc_builder_vector_count@@Base>:
  4296c0:	mov    rax,QWORD PTR [rdi+0x30]
  4296c4:	mov    eax,DWORD PTR [rax+0x14]
  4296c7:	ret    
  4296c8:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004296d0 <flatcc_builder_vector_edit@@Base>:
  4296d0:	mov    rax,QWORD PTR [rdi+0x18]
  4296d4:	ret    
  4296d5:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

00000000004296e0 <flatcc_builder_create_offset_vector_direct@@Base>:
  4296e0:	xor    ecx,ecx
  4296e2:	jmp    426f90 <flatcc_builder_default_alloc@@Base+0x390>
  4296e7:	nop    WORD PTR [rax+rax*1+0x0]

00000000004296f0 <flatcc_builder_end_offset_vector@@Base>:
  4296f0:	push   rbp
  4296f1:	push   rbx
  4296f2:	sub    rsp,0x8
  4296f6:	mov    rax,QWORD PTR [rdi+0x30]
  4296fa:	cmp    WORD PTR [rax+0xe],0x5
  4296ff:	jne    42979f <flatcc_builder_end_offset_vector@@Base+0xaf>
  429705:	mov    edx,DWORD PTR [rax+0x14]
  429708:	mov    rsi,QWORD PTR [rdi+0x18]
  42970c:	mov    rbx,rdi
  42970f:	call   4296e0 <flatcc_builder_create_offset_vector_direct@@Base>
  429714:	test   eax,eax
  429716:	mov    ebp,eax
  429718:	jne    429728 <flatcc_builder_end_offset_vector@@Base+0x38>
  42971a:	add    rsp,0x8
  42971e:	mov    eax,ebp
  429720:	pop    rbx
  429721:	pop    rbp
  429722:	ret    
  429723:	nop    DWORD PTR [rax+rax*1+0x0]
  429728:	mov    edx,DWORD PTR [rbx+0x20]
  42972b:	mov    rdi,QWORD PTR [rbx+0x18]
  42972f:	xor    esi,esi
  429731:	call   405110 <memset@plt>
  429736:	mov    rax,QWORD PTR [rbx+0x30]
  42973a:	mov    edi,DWORD PTR [rbx+0x70]
  42973d:	mov    esi,DWORD PTR [rax]
  42973f:	mov    edx,DWORD PTR [rax+0x8]
  429742:	mov    ecx,DWORD PTR [rax+0x4]
  429745:	mov    DWORD PTR [rbx+0x20],edx
  429748:	mov    rdx,rsi
  42974b:	mov    DWORD PTR [rbx+0x28],esi
  42974e:	add    rsi,QWORD PTR [rbx+0x68]
  429752:	sub    edi,edx
  429754:	cmp    ecx,edi
  429756:	mov    edx,edi
  429758:	cmovb  edx,ecx
  42975b:	mov    DWORD PTR [rbx+0x24],edx
  42975e:	movzx  edx,WORD PTR [rbx+0xea]
  429765:	cmp    dx,WORD PTR [rbx+0xe8]
  42976c:	mov    QWORD PTR [rbx+0x18],rsi
  429770:	mov    DWORD PTR [rax+0x4],ecx
  429773:	jbe    42977c <flatcc_builder_end_offset_vector@@Base+0x8c>
  429775:	mov    WORD PTR [rbx+0xe8],dx
  42977c:	movzx  edx,WORD PTR [rax+0xc]
  429780:	sub    rax,0x24
  429784:	sub    DWORD PTR [rbx+0x104],0x1
  42978b:	mov    QWORD PTR [rbx+0x30],rax
  42978f:	mov    eax,ebp
  429791:	mov    WORD PTR [rbx+0xea],dx
  429798:	add    rsp,0x8
  42979c:	pop    rbx
  42979d:	pop    rbp
  42979e:	ret    
  42979f:	lea    rcx,[rip+0x1ffda]        # 449780 <fb_schema_table_missing@@Base+0x3410>
  4297a6:	lea    rsi,[rip+0x1f943]        # 4490f0 <fb_schema_table_missing@@Base+0x2d80>
  4297ad:	lea    rdi,[rip+0x1fa8c]        # 449240 <fb_schema_table_missing@@Base+0x2ed0>
  4297b4:	mov    edx,0x5c8
  4297b9:	call   405100 <__assert_fail@plt>
  4297be:	xchg   ax,ax

00000000004297c0 <flatcc_builder_create_offset_vector@@Base>:
  4297c0:	push   r12
  4297c2:	push   rbp
  4297c3:	mov    r12,rsi
  4297c6:	push   rbx
  4297c7:	mov    rbp,rdx
  4297ca:	mov    rbx,rdi
  4297cd:	call   428760 <flatcc_builder_start_offset_vector@@Base>
  4297d2:	test   eax,eax
  4297d4:	je     4297e0 <flatcc_builder_create_offset_vector@@Base+0x20>
  4297d6:	pop    rbx
  4297d7:	xor    eax,eax
  4297d9:	pop    rbp
  4297da:	pop    r12
  4297dc:	ret    
  4297dd:	nop    DWORD PTR [rax]
  4297e0:	mov    rsi,rbp
  4297e3:	mov    rdi,rbx
  4297e6:	call   428220 <flatcc_builder_extend_offset_vector@@Base>
  4297eb:	test   rax,rax
  4297ee:	je     4297d6 <flatcc_builder_create_offset_vector@@Base+0x16>
  4297f0:	lea    rdx,[rbp*4+0x0]
  4297f8:	mov    rsi,r12
  4297fb:	mov    rdi,rax
  4297fe:	call   405170 <memcpy@plt>
  429803:	mov    rdi,rbx
  429806:	pop    rbx
  429807:	pop    rbp
  429808:	pop    r12
  42980a:	jmp    4296f0 <flatcc_builder_end_offset_vector@@Base>
  42980f:	nop

0000000000429810 <flatcc_builder_end_offset_vector_for_unions@@Base>:
  429810:	push   rbp
  429811:	push   rbx
  429812:	sub    rsp,0x8
  429816:	mov    rax,QWORD PTR [rdi+0x30]
  42981a:	cmp    WORD PTR [rax+0xe],0x5
  42981f:	jne    4298c7 <flatcc_builder_end_offset_vector_for_unions@@Base+0xb7>
  429825:	mov    edx,DWORD PTR [rax+0x14]
  429828:	mov    rcx,rsi
  42982b:	mov    rsi,QWORD PTR [rdi+0x18]
  42982f:	mov    rbx,rdi
  429832:	call   426f90 <flatcc_builder_default_alloc@@Base+0x390>
  429837:	test   eax,eax
  429839:	mov    ebp,eax
  42983b:	jne    429850 <flatcc_builder_end_offset_vector_for_unions@@Base+0x40>
  42983d:	add    rsp,0x8
  429841:	mov    eax,ebp
  429843:	pop    rbx
  429844:	pop    rbp
  429845:	ret    
  429846:	nop    WORD PTR cs:[rax+rax*1+0x0]
  429850:	mov    edx,DWORD PTR [rbx+0x20]
  429853:	mov    rdi,QWORD PTR [rbx+0x18]
  429857:	xor    esi,esi
  429859:	call   405110 <memset@plt>
  42985e:	mov    rax,QWORD PTR [rbx+0x30]
  429862:	mov    edi,DWORD PTR [rbx+0x70]
  429865:	mov    esi,DWORD PTR [rax]
  429867:	mov    edx,DWORD PTR [rax+0x8]
  42986a:	mov    ecx,DWORD PTR [rax+0x4]
  42986d:	mov    DWORD PTR [rbx+0x20],edx
  429870:	mov    rdx,rsi
  429873:	mov    DWORD PTR [rbx+0x28],esi
  429876:	add    rsi,QWORD PTR [rbx+0x68]
  42987a:	sub    edi,edx
  42987c:	cmp    ecx,edi
  42987e:	mov    edx,edi
  429880:	cmovb  edx,ecx
  429883:	mov    DWORD PTR [rbx+0x24],edx
  429886:	movzx  edx,WORD PTR [rbx+0xea]
  42988d:	cmp    dx,WORD PTR [rbx+0xe8]
  429894:	mov    QWORD PTR [rbx+0x18],rsi
  429898:	mov    DWORD PTR [rax+0x4],ecx
  42989b:	jbe    4298a4 <flatcc_builder_end_offset_vector_for_unions@@Base+0x94>
  42989d:	mov    WORD PTR [rbx+0xe8],dx
  4298a4:	movzx  edx,WORD PTR [rax+0xc]
  4298a8:	sub    rax,0x24
  4298ac:	sub    DWORD PTR [rbx+0x104],0x1
  4298b3:	mov    QWORD PTR [rbx+0x30],rax
  4298b7:	mov    eax,ebp
  4298b9:	mov    WORD PTR [rbx+0xea],dx
  4298c0:	add    rsp,0x8
  4298c4:	pop    rbx
  4298c5:	pop    rbp
  4298c6:	ret    
  4298c7:	lea    rcx,[rip+0x1fe72]        # 449740 <fb_schema_table_missing@@Base+0x33d0>
  4298ce:	lea    rsi,[rip+0x1f81b]        # 4490f0 <fb_schema_table_missing@@Base+0x2d80>
  4298d5:	lea    rdi,[rip+0x1f964]        # 449240 <fb_schema_table_missing@@Base+0x2ed0>
  4298dc:	mov    edx,0x5d5
  4298e1:	call   405100 <__assert_fail@plt>
  4298e6:	nop    WORD PTR cs:[rax+rax*1+0x0]

00000000004298f0 <flatcc_builder_offset_vector_edit@@Base>:
  4298f0:	mov    rax,QWORD PTR [rdi+0x18]
  4298f4:	ret    
  4298f5:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

0000000000429900 <flatcc_builder_offset_vector_count@@Base>:
  429900:	mov    rax,QWORD PTR [rdi+0x30]
  429904:	mov    eax,DWORD PTR [rax+0x14]
  429907:	ret    
  429908:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000429910 <flatcc_builder_create_union_vector_direct@@Base>:
  429910:	push   r13
  429912:	push   r12
  429914:	mov    r13,rcx
  429917:	push   rbp
  429918:	push   rbx
  429919:	mov    r12,rsi
  42991c:	mov    rcx,r12
  42991f:	mov    rsi,rdx
  429922:	mov    rdx,r13
  429925:	sub    rsp,0x8
  429929:	mov    rbp,rdi
  42992c:	call   426f90 <flatcc_builder_default_alloc@@Base+0x390>
  429931:	test   eax,eax
  429933:	jne    429948 <flatcc_builder_create_union_vector_direct@@Base+0x38>
  429935:	add    rsp,0x8
  429939:	xor    eax,eax
  42993b:	pop    rbx
  42993c:	pop    rbp
  42993d:	pop    r12
  42993f:	pop    r13
  429941:	ret    
  429942:	nop    WORD PTR [rax+rax*1+0x0]
  429948:	mov    ebx,eax
  42994a:	mov    rdx,r13
  42994d:	mov    ecx,0x1
  429952:	mov    rsi,r12
  429955:	mov    rdi,rbp
  429958:	mov    r9d,0xffffffff
  42995e:	mov    r8d,0x1
  429964:	call   429450 <flatcc_builder_create_vector@@Base>
  429969:	mov    rcx,rbx
  42996c:	mov    edx,eax
  42996e:	shl    rcx,0x20
  429972:	mov    rbx,rcx
  429975:	or     rbx,rdx
  429978:	test   eax,eax
  42997a:	mov    rax,rcx
  42997d:	cmovne rax,rbx
  429981:	add    rsp,0x8
  429985:	pop    rbx
  429986:	pop    rbp
  429987:	pop    r12
  429989:	pop    r13
  42998b:	ret    
  42998c:	nop    DWORD PTR [rax+0x0]

0000000000429990 <flatcc_builder_create_union_vector@@Base>:
  429990:	push   r13
  429992:	push   r12
  429994:	mov    r12,rdx
  429997:	push   rbp
  429998:	push   rbx
  429999:	mov    rbp,rsi
  42999c:	mov    rbx,rdi
  42999f:	sub    rsp,0x8
  4299a3:	call   428760 <flatcc_builder_start_offset_vector@@Base>
  4299a8:	test   eax,eax
  4299aa:	je     4299c0 <flatcc_builder_create_union_vector@@Base+0x30>
  4299ac:	add    rsp,0x8
  4299b0:	xor    eax,eax
  4299b2:	pop    rbx
  4299b3:	pop    rbp
  4299b4:	pop    r12
  4299b6:	pop    r13
  4299b8:	ret    
  4299b9:	nop    DWORD PTR [rax+0x0]
  4299c0:	mov    rsi,r12
  4299c3:	mov    rdi,rbx
  4299c6:	call   428220 <flatcc_builder_extend_offset_vector@@Base>
  4299cb:	test   rax,rax
  4299ce:	je     4299ac <flatcc_builder_create_union_vector@@Base+0x1c>
  4299d0:	mov    r13d,DWORD PTR [rbx+0x20]
  4299d4:	mov    rax,r13
  4299d7:	add    eax,r12d
  4299da:	cmp    eax,DWORD PTR [rbx+0x24]
  4299dd:	mov    DWORD PTR [rbx+0x20],eax
  4299e0:	jae    429ac0 <flatcc_builder_create_union_vector@@Base+0x130>
  4299e6:	add    r13,QWORD PTR [rbx+0x18]
  4299ea:	je     4299ac <flatcc_builder_create_union_vector@@Base+0x1c>
  4299ec:	mov    rdi,rbx
  4299ef:	call   4298f0 <flatcc_builder_offset_vector_edit@@Base>
  4299f4:	xor    edi,edi
  4299f6:	test   r12,r12
  4299f9:	je     429a1d <flatcc_builder_create_union_vector@@Base+0x8d>
  4299fb:	nop    DWORD PTR [rax+rax*1+0x0]
  429a00:	movzx  r8d,BYTE PTR [rbp+rdi*8+0x0]
  429a06:	mov    BYTE PTR [r13+rdi*1+0x0],r8b
  429a0b:	mov    r8d,DWORD PTR [rbp+rdi*8+0x4]
  429a10:	mov    DWORD PTR [rax+rdi*4],r8d
  429a14:	add    rdi,0x1
  429a18:	cmp    r12,rdi
  429a1b:	jne    429a00 <flatcc_builder_create_union_vector@@Base+0x70>
  429a1d:	mov    rcx,r12
  429a20:	mov    rdx,rax
  429a23:	mov    rsi,r13
  429a26:	mov    rdi,rbx
  429a29:	call   429910 <flatcc_builder_create_union_vector_direct@@Base>
  429a2e:	mov    edx,DWORD PTR [rbx+0x20]
  429a31:	mov    rdi,QWORD PTR [rbx+0x18]
  429a35:	xor    esi,esi
  429a37:	mov    r12,rax
  429a3a:	mov    rbp,rax
  429a3d:	sar    r12,0x20
  429a41:	call   405110 <memset@plt>
  429a46:	mov    rax,QWORD PTR [rbx+0x30]
  429a4a:	mov    esi,DWORD PTR [rax]
  429a4c:	mov    edx,DWORD PTR [rax+0x8]
  429a4f:	mov    ecx,DWORD PTR [rax+0x4]
  429a52:	mov    DWORD PTR [rbx+0x20],edx
  429a55:	mov    DWORD PTR [rbx+0x28],esi
  429a58:	mov    rdx,rsi
  429a5b:	add    rsi,QWORD PTR [rbx+0x68]
  429a5f:	mov    QWORD PTR [rbx+0x18],rsi
  429a63:	mov    esi,DWORD PTR [rbx+0x70]
  429a66:	sub    esi,edx
  429a68:	cmp    ecx,esi
  429a6a:	mov    edx,esi
  429a6c:	cmovb  edx,ecx
  429a6f:	mov    DWORD PTR [rbx+0x24],edx
  429a72:	movzx  edx,WORD PTR [rbx+0xea]
  429a79:	cmp    dx,WORD PTR [rbx+0xe8]
  429a80:	mov    DWORD PTR [rax+0x4],ecx
  429a83:	jbe    429a8c <flatcc_builder_create_union_vector@@Base+0xfc>
  429a85:	mov    WORD PTR [rbx+0xe8],dx
  429a8c:	movzx  edx,WORD PTR [rax+0xc]
  429a90:	sub    rax,0x24
  429a94:	sub    DWORD PTR [rbx+0x104],0x1
  429a9b:	mov    QWORD PTR [rbx+0x30],rax
  429a9f:	shl    r12,0x20
  429aa3:	mov    eax,ebp
  429aa5:	or     rax,r12
  429aa8:	mov    WORD PTR [rbx+0xea],dx
  429aaf:	add    rsp,0x8
  429ab3:	pop    rbx
  429ab4:	pop    rbp
  429ab5:	pop    r12
  429ab7:	pop    r13
  429ab9:	ret    
  429aba:	nop    WORD PTR [rax+rax*1+0x0]
  429ac0:	lea    esi,[rax+0x1]
  429ac3:	mov    edx,0xfffffffc
  429ac8:	mov    rdi,rbx
  429acb:	call   426ba0 <__flatcc_fb_coerce_scalar_type@@Base+0x7d0>
  429ad0:	test   eax,eax
  429ad2:	je     4299e6 <flatcc_builder_create_union_vector@@Base+0x56>
  429ad8:	jmp    4299ac <flatcc_builder_create_union_vector@@Base+0x1c>
  429add:	nop    DWORD PTR [rax]

0000000000429ae0 <flatcc_builder_start_union_vector@@Base>:
  429ae0:	push   rbx
  429ae1:	mov    esi,0x4
  429ae6:	mov    rbx,rdi
  429ae9:	call   426e60 <flatcc_builder_default_alloc@@Base+0x260>
  429aee:	test   eax,eax
  429af0:	jne    429b38 <flatcc_builder_start_union_vector@@Base+0x58>
  429af2:	mov    rcx,QWORD PTR [rbx+0x30]
  429af6:	mov    edx,0x7
  429afb:	mov    DWORD PTR [rcx+0x10],0x8
  429b02:	mov    DWORD PTR [rcx+0x14],0x0
  429b09:	mov    WORD PTR [rcx+0xe],dx
  429b0d:	mov    edx,DWORD PTR [rbx+0x28]
  429b10:	mov    rsi,rdx
  429b13:	add    rdx,QWORD PTR [rbx+0x68]
  429b17:	mov    QWORD PTR [rbx+0x18],rdx
  429b1b:	mov    edx,DWORD PTR [rbx+0x70]
  429b1e:	sub    edx,esi
  429b20:	mov    esi,0xfffffffc
  429b25:	cmp    edx,esi
  429b27:	cmova  edx,esi
  429b2a:	mov    DWORD PTR [rbx+0x24],edx
  429b2d:	mov    DWORD PTR [rcx+0x4],esi
  429b30:	pop    rbx
  429b31:	ret    
  429b32:	nop    WORD PTR [rax+rax*1+0x0]
  429b38:	mov    eax,0xffffffff
  429b3d:	pop    rbx
  429b3e:	ret    
  429b3f:	nop

0000000000429b40 <flatcc_builder_union_vector_edit@@Base>:
  429b40:	mov    rax,QWORD PTR [rdi+0x18]
  429b44:	ret    
  429b45:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

0000000000429b50 <flatcc_builder_union_vector_count@@Base>:
  429b50:	mov    rax,QWORD PTR [rdi+0x30]
  429b54:	mov    eax,DWORD PTR [rax+0x14]
  429b57:	ret    
  429b58:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000429b60 <flatcc_builder_end_union_vector@@Base>:
  429b60:	push   r13
  429b62:	push   r12
  429b64:	push   rbp
  429b65:	push   rbx
  429b66:	sub    rsp,0x8
  429b6a:	mov    rax,QWORD PTR [rdi+0x30]
  429b6e:	cmp    WORD PTR [rax+0xe],0x7
  429b73:	jne    429ca5 <flatcc_builder_end_union_vector@@Base+0x145>
  429b79:	mov    rbx,rdi
  429b7c:	call   429b50 <flatcc_builder_union_vector_count@@Base>
  429b81:	mov    ebp,DWORD PTR [rbx+0x20]
  429b84:	mov    r12,rax
  429b87:	lea    eax,[rax+rax*4]
  429b8a:	add    eax,ebp
  429b8c:	cmp    eax,DWORD PTR [rbx+0x24]
  429b8f:	mov    DWORD PTR [rbx+0x20],eax
  429b92:	jae    429c80 <flatcc_builder_end_union_vector@@Base+0x120>
  429b98:	add    rbp,QWORD PTR [rbx+0x18]
  429b9c:	je     429c98 <flatcc_builder_end_union_vector@@Base+0x138>
  429ba2:	mov    rdi,rbx
  429ba5:	lea    r13,[rbp+r12*4+0x0]
  429baa:	call   429b40 <flatcc_builder_union_vector_edit@@Base>
  429baf:	xor    edi,edi
  429bb1:	test   r12,r12
  429bb4:	je     429bdd <flatcc_builder_end_union_vector@@Base+0x7d>
  429bb6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  429bc0:	movzx  r8d,BYTE PTR [rax+rdi*8]
  429bc5:	mov    BYTE PTR [r13+rdi*1+0x0],r8b
  429bca:	mov    r8d,DWORD PTR [rax+rdi*8+0x4]
  429bcf:	mov    DWORD PTR [rbp+rdi*4+0x0],r8d
  429bd4:	add    rdi,0x1
  429bd8:	cmp    r12,rdi
  429bdb:	jne    429bc0 <flatcc_builder_end_union_vector@@Base+0x60>
  429bdd:	mov    rcx,r12
  429be0:	mov    rdx,rbp
  429be3:	mov    rsi,r13
  429be6:	mov    rdi,rbx
  429be9:	call   429910 <flatcc_builder_create_union_vector_direct@@Base>
  429bee:	mov    edx,DWORD PTR [rbx+0x20]
  429bf1:	mov    rdi,QWORD PTR [rbx+0x18]
  429bf5:	xor    esi,esi
  429bf7:	mov    r12,rax
  429bfa:	mov    rbp,rax
  429bfd:	sar    r12,0x20
  429c01:	call   405110 <memset@plt>
  429c06:	mov    rax,QWORD PTR [rbx+0x30]
  429c0a:	mov    esi,DWORD PTR [rax]
  429c0c:	mov    edx,DWORD PTR [rax+0x8]
  429c0f:	mov    ecx,DWORD PTR [rax+0x4]
  429c12:	mov    DWORD PTR [rbx+0x20],edx
  429c15:	mov    DWORD PTR [rbx+0x28],esi
  429c18:	mov    rdx,rsi
  429c1b:	add    rsi,QWORD PTR [rbx+0x68]
  429c1f:	mov    QWORD PTR [rbx+0x18],rsi
  429c23:	mov    esi,DWORD PTR [rbx+0x70]
  429c26:	sub    esi,edx
  429c28:	cmp    ecx,esi
  429c2a:	mov    edx,esi
  429c2c:	cmovb  edx,ecx
  429c2f:	mov    DWORD PTR [rbx+0x24],edx
  429c32:	movzx  edx,WORD PTR [rbx+0xea]
  429c39:	cmp    dx,WORD PTR [rbx+0xe8]
  429c40:	mov    DWORD PTR [rax+0x4],ecx
  429c43:	jbe    429c4c <flatcc_builder_end_union_vector@@Base+0xec>
  429c45:	mov    WORD PTR [rbx+0xe8],dx
  429c4c:	movzx  edx,WORD PTR [rax+0xc]
  429c50:	sub    rax,0x24
  429c54:	sub    DWORD PTR [rbx+0x104],0x1
  429c5b:	mov    QWORD PTR [rbx+0x30],rax
  429c5f:	shl    r12,0x20
  429c63:	mov    eax,ebp
  429c65:	or     rax,r12
  429c68:	mov    WORD PTR [rbx+0xea],dx
  429c6f:	add    rsp,0x8
  429c73:	pop    rbx
  429c74:	pop    rbp
  429c75:	pop    r12
  429c77:	pop    r13
  429c79:	ret    
  429c7a:	nop    WORD PTR [rax+rax*1+0x0]
  429c80:	lea    esi,[rax+0x1]
  429c83:	mov    edx,0xfffffffc
  429c88:	mov    rdi,rbx
  429c8b:	call   426ba0 <__flatcc_fb_coerce_scalar_type@@Base+0x7d0>
  429c90:	test   eax,eax
  429c92:	je     429b98 <flatcc_builder_end_union_vector@@Base+0x38>
  429c98:	add    rsp,0x8
  429c9c:	xor    eax,eax
  429c9e:	pop    rbx
  429c9f:	pop    rbp
  429ca0:	pop    r12
  429ca2:	pop    r13
  429ca4:	ret    
  429ca5:	lea    rcx,[rip+0x1fa14]        # 4496c0 <fb_schema_table_missing@@Base+0x3350>
  429cac:	lea    rsi,[rip+0x1f43d]        # 4490f0 <fb_schema_table_missing@@Base+0x2d80>
  429cb3:	lea    rdi,[rip+0x1f6ae]        # 449368 <fb_schema_table_missing@@Base+0x2ff8>
  429cba:	mov    edx,0x651
  429cbf:	call   405100 <__assert_fail@plt>
  429cc4:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  429ccf:	nop

0000000000429cd0 <flatcc_builder_extend_union_vector@@Base>:
  429cd0:	push   rbp
  429cd1:	push   rbx
  429cd2:	xor    edx,edx
  429cd4:	mov    ecx,esi
  429cd6:	sub    rsp,0x8
  429cda:	mov    rax,QWORD PTR [rdi+0x30]
  429cde:	add    ecx,DWORD PTR [rax+0x14]
  429ce1:	setb   dl
  429ce4:	test   edx,edx
  429ce6:	jne    429d2d <flatcc_builder_extend_union_vector@@Base+0x5d>
  429ce8:	cmp    ecx,0x1fffffff
  429cee:	ja     429d2d <flatcc_builder_extend_union_vector@@Base+0x5d>
  429cf0:	mov    DWORD PTR [rax+0x14],ecx
  429cf3:	mov    ebp,DWORD PTR [rdi+0x20]
  429cf6:	mov    rbx,rdi
  429cf9:	lea    eax,[rbp+rsi*8+0x0]
  429cfd:	cmp    eax,DWORD PTR [rdi+0x24]
  429d00:	mov    DWORD PTR [rdi+0x20],eax
  429d03:	jae    429d18 <flatcc_builder_extend_union_vector@@Base+0x48>
  429d05:	mov    rax,rbp
  429d08:	add    rax,QWORD PTR [rbx+0x18]
  429d0c:	add    rsp,0x8
  429d10:	pop    rbx
  429d11:	pop    rbp
  429d12:	ret    
  429d13:	nop    DWORD PTR [rax+rax*1+0x0]
  429d18:	lea    esi,[rax+0x1]
  429d1b:	mov    edx,0xfffffffc
  429d20:	call   426ba0 <__flatcc_fb_coerce_scalar_type@@Base+0x7d0>
  429d25:	test   eax,eax
  429d27:	je     429d05 <flatcc_builder_extend_union_vector@@Base+0x35>
  429d29:	xor    eax,eax
  429d2b:	jmp    429d0c <flatcc_builder_extend_union_vector@@Base+0x3c>
  429d2d:	call   405335 <__sprintf_chk@plt+0x115>
  429d32:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  429d3d:	nop    DWORD PTR [rax]

0000000000429d40 <flatcc_builder_truncate_union_vector@@Base>:
  429d40:	sub    rsp,0x8
  429d44:	mov    rax,QWORD PTR [rdi+0x30]
  429d48:	cmp    WORD PTR [rax+0xe],0x7
  429d4d:	jne    429d7f <flatcc_builder_truncate_union_vector@@Base+0x3f>
  429d4f:	mov    edx,DWORD PTR [rax+0x14]
  429d52:	cmp    edx,esi
  429d54:	jb     429d9e <flatcc_builder_truncate_union_vector@@Base+0x5e>
  429d56:	sub    edx,esi
  429d58:	imul   esi,DWORD PTR [rax+0x10]
  429d5c:	mov    DWORD PTR [rax+0x14],edx
  429d5f:	mov    eax,DWORD PTR [rdi+0x20]
  429d62:	mov    rcx,QWORD PTR [rdi+0x18]
  429d66:	sub    eax,esi
  429d68:	mov    edx,esi
  429d6a:	xor    esi,esi
  429d6c:	mov    DWORD PTR [rdi+0x20],eax
  429d6f:	lea    rdi,[rcx+rax*1]
  429d73:	call   405110 <memset@plt>
  429d78:	xor    eax,eax
  429d7a:	add    rsp,0x8
  429d7e:	ret    
  429d7f:	lea    rcx,[rip+0x1f8fa]        # 449680 <fb_schema_table_missing@@Base+0x3310>
  429d86:	lea    rsi,[rip+0x1f363]        # 4490f0 <fb_schema_table_missing@@Base+0x2d80>
  429d8d:	lea    rdi,[rip+0x1f5d4]        # 449368 <fb_schema_table_missing@@Base+0x2ff8>
  429d94:	mov    edx,0x681
  429d99:	call   405100 <__assert_fail@plt>
  429d9e:	lea    rcx,[rip+0x1f8db]        # 449680 <fb_schema_table_missing@@Base+0x3310>
  429da5:	lea    rsi,[rip+0x1f344]        # 4490f0 <fb_schema_table_missing@@Base+0x2d80>
  429dac:	lea    rdi,[rip+0x1f51d]        # 4492d0 <fb_schema_table_missing@@Base+0x2f60>
  429db3:	mov    edx,0x682
  429db8:	call   405100 <__assert_fail@plt>
  429dbd:	nop    DWORD PTR [rax]

0000000000429dc0 <flatcc_builder_union_vector_push@@Base>:
  429dc0:	push   r12
  429dc2:	push   rbp
  429dc3:	push   rbx
  429dc4:	mov    rdx,QWORD PTR [rdi+0x30]
  429dc8:	cmp    WORD PTR [rdx+0xe],0x7
  429dcd:	jne    429e20 <flatcc_builder_union_vector_push@@Base+0x60>
  429dcf:	mov    eax,DWORD PTR [rdx+0x14]
  429dd2:	cmp    eax,0x1fffffff
  429dd7:	je     429e19 <flatcc_builder_union_vector_push@@Base+0x59>
  429dd9:	add    eax,0x1
  429ddc:	mov    rbp,rdi
  429ddf:	mov    r12,rsi
  429de2:	mov    DWORD PTR [rdx+0x14],eax
  429de5:	mov    ebx,DWORD PTR [rdi+0x20]
  429de8:	lea    edx,[rbx+0x8]
  429deb:	cmp    edx,DWORD PTR [rdi+0x24]
  429dee:	mov    DWORD PTR [rdi+0x20],edx
  429df1:	jae    429e08 <flatcc_builder_union_vector_push@@Base+0x48>
  429df3:	mov    rax,rbx
  429df6:	add    rax,QWORD PTR [rbp+0x18]
  429dfa:	je     429e19 <flatcc_builder_union_vector_push@@Base+0x59>
  429dfc:	mov    QWORD PTR [rax],r12
  429dff:	pop    rbx
  429e00:	pop    rbp
  429e01:	pop    r12
  429e03:	ret    
  429e04:	nop    DWORD PTR [rax+0x0]
  429e08:	lea    esi,[rbx+0x9]
  429e0b:	mov    edx,0xfffffffc
  429e10:	call   426ba0 <__flatcc_fb_coerce_scalar_type@@Base+0x7d0>
  429e15:	test   eax,eax
  429e17:	je     429df3 <flatcc_builder_union_vector_push@@Base+0x33>
  429e19:	pop    rbx
  429e1a:	xor    eax,eax
  429e1c:	pop    rbp
  429e1d:	pop    r12
  429e1f:	ret    
  429e20:	lea    rcx,[rip+0x1f819]        # 449640 <fb_schema_table_missing@@Base+0x32d0>
  429e27:	lea    rsi,[rip+0x1f2c2]        # 4490f0 <fb_schema_table_missing@@Base+0x2d80>
  429e2e:	lea    rdi,[rip+0x1f533]        # 449368 <fb_schema_table_missing@@Base+0x2ff8>
  429e35:	mov    edx,0x68d
  429e3a:	call   405100 <__assert_fail@plt>
  429e3f:	nop

0000000000429e40 <flatcc_builder_append_union_vector@@Base>:
  429e40:	push   r13
  429e42:	push   r12
  429e44:	push   rbp
  429e45:	push   rbx
  429e46:	sub    rsp,0x8
  429e4a:	mov    rax,QWORD PTR [rdi+0x30]
  429e4e:	cmp    WORD PTR [rax+0xe],0x7
  429e53:	jne    429ecb <flatcc_builder_append_union_vector@@Base+0x8b>
  429e55:	mov    r13,rsi
  429e58:	mov    ecx,edx
  429e5a:	xor    esi,esi
  429e5c:	add    ecx,DWORD PTR [rax+0x14]
  429e5f:	setb   sil
  429e63:	test   esi,esi
  429e65:	jne    429ec6 <flatcc_builder_append_union_vector@@Base+0x86>
  429e67:	cmp    ecx,0x1fffffff
  429e6d:	ja     429ec6 <flatcc_builder_append_union_vector@@Base+0x86>
  429e6f:	mov    DWORD PTR [rax+0x14],ecx
  429e72:	mov    r12d,DWORD PTR [rdi+0x20]
  429e76:	lea    ebx,[rdx*8+0x0]
  429e7d:	mov    rbp,rdi
  429e80:	mov    rdx,r12
  429e83:	add    edx,ebx
  429e85:	cmp    edx,DWORD PTR [rdi+0x24]
  429e88:	mov    DWORD PTR [rdi+0x20],edx
  429e8b:	jae    429eb0 <flatcc_builder_append_union_vector@@Base+0x70>
  429e8d:	add    r12,QWORD PTR [rbp+0x18]
  429e91:	je     429ea0 <flatcc_builder_append_union_vector@@Base+0x60>
  429e93:	mov    edx,ebx
  429e95:	mov    rsi,r13
  429e98:	mov    rdi,r12
  429e9b:	call   405170 <memcpy@plt>
  429ea0:	add    rsp,0x8
  429ea4:	mov    rax,r12
  429ea7:	pop    rbx
  429ea8:	pop    rbp
  429ea9:	pop    r12
  429eab:	pop    r13
  429ead:	ret    
  429eae:	xchg   ax,ax
  429eb0:	lea    esi,[rdx+0x1]
  429eb3:	mov    edx,0xfffffffc
  429eb8:	call   426ba0 <__flatcc_fb_coerce_scalar_type@@Base+0x7d0>
  429ebd:	test   eax,eax
  429ebf:	je     429e8d <flatcc_builder_append_union_vector@@Base+0x4d>
  429ec1:	xor    r12d,r12d
  429ec4:	jmp    429ea0 <flatcc_builder_append_union_vector@@Base+0x60>
  429ec6:	call   405335 <__sprintf_chk@plt+0x115>
  429ecb:	lea    rcx,[rip+0x1f72e]        # 449600 <fb_schema_table_missing@@Base+0x3290>
  429ed2:	lea    rsi,[rip+0x1f217]        # 4490f0 <fb_schema_table_missing@@Base+0x2d80>
  429ed9:	lea    rdi,[rip+0x1f488]        # 449368 <fb_schema_table_missing@@Base+0x2ff8>
  429ee0:	mov    edx,0x69c
  429ee5:	call   405100 <__assert_fail@plt>
  429eea:	nop    WORD PTR [rax+rax*1+0x0]

0000000000429ef0 <flatcc_builder_create_string@@Base>:
  429ef0:	push   rbp
  429ef1:	push   rbx
  429ef2:	sub    rsp,0xb8
  429ef9:	mov    rax,QWORD PTR fs:0x28
  429f02:	mov    QWORD PTR [rsp+0xa8],rax
  429f0a:	xor    eax,eax
  429f0c:	mov    eax,0xffffffff
  429f11:	cmp    rdx,rax
  429f14:	ja     429fe0 <flatcc_builder_create_string@@Base+0xf0>
  429f1a:	mov    rbx,rdi
  429f1d:	mov    edi,DWORD PTR [rdi+0xf0]
  429f23:	lea    rcx,[rsp+0xc]
  429f28:	mov    DWORD PTR [rsp+0xc],edx
  429f2c:	mov    QWORD PTR [rsp+0x28],0x4
  429f35:	mov    QWORD PTR [rsp+0x20],rcx
  429f3a:	lea    eax,[rdi-0x1]
  429f3d:	sub    eax,edx
  429f3f:	and    eax,0x3
  429f42:	add    eax,0x1
  429f45:	test   rdx,rdx
  429f48:	jne    429fc0 <flatcc_builder_create_string@@Base+0xd0>
  429f4a:	mov    edx,0x2
  429f4f:	mov    ecx,0x1
  429f54:	mov    r8d,0x4
  429f5a:	add    r8,rax
  429f5d:	mov    rsi,0x449be0
  429f64:	mov    ebp,edi
  429f66:	sub    ebp,r8d
  429f69:	shl    rcx,0x4
  429f6d:	mov    QWORD PTR [rsp+0x10],r8
  429f72:	cmp    edi,ebp
  429f74:	mov    QWORD PTR [rsp+rcx*1+0x28],rax
  429f79:	mov    DWORD PTR [rsp+0x18],edx
  429f7d:	mov    QWORD PTR [rsp+rcx*1+0x20],rsi
  429f82:	jle    429fe4 <flatcc_builder_create_string@@Base+0xf4>
  429f84:	lea    rsi,[rsp+0x20]
  429f89:	mov    rdi,QWORD PTR [rbx+0x38]
  429f8d:	mov    ecx,ebp
  429f8f:	call   QWORD PTR [rbx+0x48]
  429f92:	test   eax,eax
  429f94:	jne    42a008 <flatcc_builder_create_string@@Base+0x118>
  429f96:	mov    DWORD PTR [rbx+0xf0],ebp
  429f9c:	mov    rbx,QWORD PTR [rsp+0xa8]
  429fa4:	xor    rbx,QWORD PTR fs:0x28
  429fad:	mov    eax,ebp
  429faf:	jne    42a003 <flatcc_builder_create_string@@Base+0x113>
  429fb1:	add    rsp,0xb8
  429fb8:	pop    rbx
  429fb9:	pop    rbp
  429fba:	ret    
  429fbb:	nop    DWORD PTR [rax+rax*1+0x0]
  429fc0:	lea    r8,[rdx+0x4]
  429fc4:	mov    QWORD PTR [rsp+0x38],rdx
  429fc9:	mov    QWORD PTR [rsp+0x30],rsi
  429fce:	mov    edx,0x3
  429fd3:	mov    ecx,0x2
  429fd8:	jmp    429f5a <flatcc_builder_create_string@@Base+0x6a>
  429fdd:	nop    DWORD PTR [rax]
  429fe0:	xor    ebp,ebp
  429fe2:	jmp    429f9c <flatcc_builder_create_string@@Base+0xac>
  429fe4:	lea    rcx,[rip+0x1fb45]        # 449b30 <fb_schema_table_missing@@Base+0x37c0>
  429feb:	lea    rsi,[rip+0x1f0fe]        # 4490f0 <fb_schema_table_missing@@Base+0x2d80>
  429ff2:	lea    rdi,[rip+0xd230]        # 437229 <_IO_stdin_used@@Base+0xa229>
  429ff9:	mov    edx,0x287
  429ffe:	call   405100 <__assert_fail@plt>
  42a003:	call   4050d0 <__stack_chk_fail@plt>
  42a008:	call   405312 <__sprintf_chk@plt+0xf2>
  42a00d:	nop    DWORD PTR [rax]

000000000042a010 <flatcc_builder_create_string_str@@Base>:
  42a010:	push   rbp
  42a011:	push   rbx
  42a012:	mov    rbp,rdi
  42a015:	mov    rdi,rsi
  42a018:	mov    rbx,rsi
  42a01b:	sub    rsp,0x8
  42a01f:	call   4050c0 <strlen@plt>
  42a024:	add    rsp,0x8
  42a028:	mov    rsi,rbx
  42a02b:	mov    rdi,rbp
  42a02e:	pop    rbx
  42a02f:	pop    rbp
  42a030:	mov    rdx,rax
  42a033:	jmp    429ef0 <flatcc_builder_create_string@@Base>
  42a038:	nop    DWORD PTR [rax+rax*1+0x0]

000000000042a040 <flatcc_builder_create_string_strn@@Base>:
  42a040:	push   r12
  42a042:	push   rbp
  42a043:	mov    rbp,rsi
  42a046:	push   rbx
  42a047:	mov    r12,rdi
  42a04a:	xor    esi,esi
  42a04c:	mov    rdi,rbp
  42a04f:	mov    rbx,rdx
  42a052:	call   405120 <memchr@plt>
  42a057:	mov    rdx,rax
  42a05a:	mov    rsi,rbp
  42a05d:	mov    rdi,r12
  42a060:	sub    rdx,rbp
  42a063:	test   rax,rax
  42a066:	cmovne rbx,rdx
  42a06a:	mov    rdx,rbx
  42a06d:	pop    rbx
  42a06e:	pop    rbp
  42a06f:	pop    r12
  42a071:	jmp    429ef0 <flatcc_builder_create_string@@Base>
  42a076:	nop    WORD PTR cs:[rax+rax*1+0x0]

000000000042a080 <flatcc_builder_end_string@@Base>:
  42a080:	push   rbp
  42a081:	push   rbx
  42a082:	sub    rsp,0x8
  42a086:	mov    rax,QWORD PTR [rdi+0x30]
  42a08a:	cmp    WORD PTR [rax+0xe],0x6
  42a08f:	jne    42a156 <flatcc_builder_end_string@@Base+0xd6>
  42a095:	mov    edx,DWORD PTR [rax+0x14]
  42a098:	mov    rbx,rdi
  42a09b:	cmp    edx,DWORD PTR [rdi+0x20]
  42a09e:	jne    42a137 <flatcc_builder_end_string@@Base+0xb7>
  42a0a4:	mov    rsi,QWORD PTR [rdi+0x18]
  42a0a8:	call   429ef0 <flatcc_builder_create_string@@Base>
  42a0ad:	test   eax,eax
  42a0af:	mov    ebp,eax
  42a0b1:	jne    42a0c0 <flatcc_builder_end_string@@Base+0x40>
  42a0b3:	add    rsp,0x8
  42a0b7:	mov    eax,ebp
  42a0b9:	pop    rbx
  42a0ba:	pop    rbp
  42a0bb:	ret    
  42a0bc:	nop    DWORD PTR [rax+0x0]
  42a0c0:	mov    edx,DWORD PTR [rbx+0x20]
  42a0c3:	mov    rdi,QWORD PTR [rbx+0x18]
  42a0c7:	xor    esi,esi
  42a0c9:	call   405110 <memset@plt>
  42a0ce:	mov    rax,QWORD PTR [rbx+0x30]
  42a0d2:	mov    edi,DWORD PTR [rbx+0x70]
  42a0d5:	mov    esi,DWORD PTR [rax]
  42a0d7:	mov    edx,DWORD PTR [rax+0x8]
  42a0da:	mov    ecx,DWORD PTR [rax+0x4]
  42a0dd:	mov    DWORD PTR [rbx+0x20],edx
  42a0e0:	mov    rdx,rsi
  42a0e3:	mov    DWORD PTR [rbx+0x28],esi
  42a0e6:	add    rsi,QWORD PTR [rbx+0x68]
  42a0ea:	sub    edi,edx
  42a0ec:	cmp    ecx,edi
  42a0ee:	mov    edx,edi
  42a0f0:	cmovb  edx,ecx
  42a0f3:	mov    DWORD PTR [rbx+0x24],edx
  42a0f6:	movzx  edx,WORD PTR [rbx+0xea]
  42a0fd:	cmp    dx,WORD PTR [rbx+0xe8]
  42a104:	mov    QWORD PTR [rbx+0x18],rsi
  42a108:	mov    DWORD PTR [rax+0x4],ecx
  42a10b:	jbe    42a114 <flatcc_builder_end_string@@Base+0x94>
  42a10d:	mov    WORD PTR [rbx+0xe8],dx
  42a114:	movzx  edx,WORD PTR [rax+0xc]
  42a118:	sub    rax,0x24
  42a11c:	sub    DWORD PTR [rbx+0x104],0x1
  42a123:	mov    QWORD PTR [rbx+0x30],rax
  42a127:	mov    eax,ebp
  42a129:	mov    WORD PTR [rbx+0xea],dx
  42a130:	add    rsp,0x8
  42a134:	pop    rbx
  42a135:	pop    rbp
  42a136:	ret    
  42a137:	lea    rcx,[rip+0x1f4a2]        # 4495e0 <fb_schema_table_missing@@Base+0x3270>
  42a13e:	lea    rsi,[rip+0x1efab]        # 4490f0 <fb_schema_table_missing@@Base+0x2d80>
  42a145:	lea    rdi,[rip+0x1f254]        # 4493a0 <fb_schema_table_missing@@Base+0x3030>
  42a14c:	mov    edx,0x6c5
  42a151:	call   405100 <__assert_fail@plt>
  42a156:	lea    rcx,[rip+0x1f483]        # 4495e0 <fb_schema_table_missing@@Base+0x3270>
  42a15d:	lea    rsi,[rip+0x1ef8c]        # 4490f0 <fb_schema_table_missing@@Base+0x2d80>
  42a164:	lea    rdi,[rip+0x1f10d]        # 449278 <fb_schema_table_missing@@Base+0x2f08>
  42a16b:	mov    edx,0x6c4
  42a170:	call   405100 <__assert_fail@plt>
  42a175:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

000000000042a180 <flatcc_builder_string_edit@@Base>:
  42a180:	mov    rax,QWORD PTR [rdi+0x18]
  42a184:	ret    
  42a185:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

000000000042a190 <flatcc_builder_string_len@@Base>:
  42a190:	mov    rax,QWORD PTR [rdi+0x30]
  42a194:	mov    eax,DWORD PTR [rax+0x14]
  42a197:	ret    
  42a198:	nop    DWORD PTR [rax+rax*1+0x0]

000000000042a1a0 <flatcc_builder_table_add@@Base>:
  42a1a0:	push   r13
  42a1a2:	push   r12
  42a1a4:	push   rbp
  42a1a5:	push   rbx
  42a1a6:	sub    rsp,0x8
  42a1aa:	mov    rax,QWORD PTR [rdi+0x30]
  42a1ae:	cmp    WORD PTR [rax+0xe],0x3
  42a1b3:	jne    42a2c2 <flatcc_builder_table_add@@Base+0x122>
  42a1b9:	cmp    esi,0x7ffc
  42a1bf:	mov    r12d,esi
  42a1c2:	ja     42a2a3 <flatcc_builder_table_add@@Base+0x103>
  42a1c8:	cmp    WORD PTR [rdi+0xea],cx
  42a1cf:	mov    rbx,rdi
  42a1d2:	jb     42a240 <flatcc_builder_table_add@@Base+0xa0>
  42a1d4:	movsxd r13,r12d
  42a1d7:	add    r13,r13
  42a1da:	mov    rsi,r13
  42a1dd:	add    rsi,QWORD PTR [rbx+0x8]
  42a1e1:	cmp    WORD PTR [rsi],0x0
  42a1e5:	jne    42a284 <flatcc_builder_table_add@@Base+0xe4>
  42a1eb:	mov    eax,DWORD PTR [rbx+0x14]
  42a1ee:	movzx  ecx,cx
  42a1f1:	xor    eax,r12d
  42a1f4:	imul   eax,eax,0x9e3779b1
  42a1fa:	xor    eax,edx
  42a1fc:	imul   eax,eax,0x9e3779b1
  42a202:	mov    DWORD PTR [rbx+0x14],eax
  42a205:	mov    eax,DWORD PTR [rbx+0x20]
  42a208:	lea    ebp,[rcx+rax*1-0x1]
  42a20c:	neg    ecx
  42a20e:	and    ebp,ecx
  42a210:	add    edx,ebp
  42a212:	cmp    edx,DWORD PTR [rbx+0x24]
  42a215:	mov    DWORD PTR [rbx+0x20],edx
  42a218:	jae    42a260 <flatcc_builder_table_add@@Base+0xc0>
  42a21a:	lea    eax,[rbp+0x4]
  42a21d:	mov    WORD PTR [rsi],ax
  42a220:	cmp    r12w,WORD PTR [rbx+0x10]
  42a225:	jae    42a250 <flatcc_builder_table_add@@Base+0xb0>
  42a227:	mov    eax,ebp
  42a229:	add    rax,QWORD PTR [rbx+0x18]
  42a22d:	add    rsp,0x8
  42a231:	pop    rbx
  42a232:	pop    rbp
  42a233:	pop    r12
  42a235:	pop    r13
  42a237:	ret    
  42a238:	nop    DWORD PTR [rax+rax*1+0x0]
  42a240:	mov    WORD PTR [rdi+0xea],cx
  42a247:	jmp    42a1d4 <flatcc_builder_table_add@@Base+0x34>
  42a249:	nop    DWORD PTR [rax+0x0]
  42a250:	add    r12d,0x1
  42a254:	mov    WORD PTR [rbx+0x10],r12w
  42a259:	jmp    42a227 <flatcc_builder_table_add@@Base+0x87>
  42a25b:	nop    DWORD PTR [rax+rax*1+0x0]
  42a260:	lea    esi,[rdx+0x1]
  42a263:	mov    rdi,rbx
  42a266:	mov    edx,0xfffc
  42a26b:	call   426ba0 <__flatcc_fb_coerce_scalar_type@@Base+0x7d0>
  42a270:	test   eax,eax
  42a272:	jne    42a280 <flatcc_builder_table_add@@Base+0xe0>
  42a274:	mov    rsi,r13
  42a277:	add    rsi,QWORD PTR [rbx+0x8]
  42a27b:	jmp    42a21a <flatcc_builder_table_add@@Base+0x7a>
  42a27d:	nop    DWORD PTR [rax]
  42a280:	xor    eax,eax
  42a282:	jmp    42a22d <flatcc_builder_table_add@@Base+0x8d>
  42a284:	lea    rcx,[rip+0x1f335]        # 4495c0 <fb_schema_table_missing@@Base+0x3250>
  42a28b:	lea    rsi,[rip+0x1ee5e]        # 4490f0 <fb_schema_table_missing@@Base+0x2d80>
  42a292:	lea    rdi,[rip+0xcf90]        # 437229 <_IO_stdin_used@@Base+0xa229>
  42a299:	mov    edx,0x6f8
  42a29e:	call   405100 <__assert_fail@plt>
  42a2a3:	lea    rcx,[rip+0x1f316]        # 4495c0 <fb_schema_table_missing@@Base+0x3250>
  42a2aa:	lea    rsi,[rip+0x1ee3f]        # 4490f0 <fb_schema_table_missing@@Base+0x2d80>
  42a2b1:	lea    rdi,[rip+0x1f110]        # 4493c8 <fb_schema_table_missing@@Base+0x3058>
  42a2b8:	mov    edx,0x6ee
  42a2bd:	call   405100 <__assert_fail@plt>
  42a2c2:	lea    rcx,[rip+0x1f2f7]        # 4495c0 <fb_schema_table_missing@@Base+0x3250>
  42a2c9:	lea    rsi,[rip+0x1ee20]        # 4490f0 <fb_schema_table_missing@@Base+0x2d80>
  42a2d0:	lea    rdi,[rip+0x1f061]        # 449338 <fb_schema_table_missing@@Base+0x2fc8>
  42a2d7:	mov    edx,0x6ed
  42a2dc:	call   405100 <__assert_fail@plt>
  42a2e1:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  42a2ec:	nop    DWORD PTR [rax+0x0]

000000000042a2f0 <flatcc_builder_table_edit@@Base>:
  42a2f0:	mov    rax,QWORD PTR [rdi+0x30]
  42a2f4:	cmp    WORD PTR [rax+0xe],0x3
  42a2f9:	jne    42a306 <flatcc_builder_table_edit@@Base+0x16>
  42a2fb:	mov    eax,DWORD PTR [rdi+0x20]
  42a2fe:	sub    rax,rsi
  42a301:	add    rax,QWORD PTR [rdi+0x18]
  42a305:	ret    
  42a306:	lea    rcx,[rip+0x1f293]        # 4495a0 <fb_schema_table_missing@@Base+0x3230>
  42a30d:	lea    rsi,[rip+0x1eddc]        # 4490f0 <fb_schema_table_missing@@Base+0x2d80>
  42a314:	lea    rdi,[rip+0x1f01d]        # 449338 <fb_schema_table_missing@@Base+0x2fc8>
  42a31b:	sub    rsp,0x8
  42a31f:	mov    edx,0x702
  42a324:	call   405100 <__assert_fail@plt>
  42a329:	nop    DWORD PTR [rax+0x0]

000000000042a330 <flatcc_builder_table_add_copy@@Base>:
  42a330:	push   rbp
  42a331:	push   rbx
  42a332:	mov    rbx,rcx
  42a335:	mov    rbp,rdx
  42a338:	movzx  ecx,r8w
  42a33c:	mov    rdx,rbx
  42a33f:	sub    rsp,0x8
  42a343:	call   42a1a0 <flatcc_builder_table_add@@Base>
  42a348:	test   rax,rax
  42a34b:	mov    rcx,rax
  42a34e:	je     42a361 <flatcc_builder_table_add_copy@@Base+0x31>
  42a350:	mov    rdx,rbx
  42a353:	mov    rsi,rbp
  42a356:	mov    rdi,rax
  42a359:	call   405170 <memcpy@plt>
  42a35e:	mov    rcx,rax
  42a361:	add    rsp,0x8
  42a365:	mov    rax,rcx
  42a368:	pop    rbx
  42a369:	pop    rbp
  42a36a:	ret    
  42a36b:	nop    DWORD PTR [rax+rax*1+0x0]

000000000042a370 <flatcc_builder_table_add_offset@@Base>:
  42a370:	push   r13
  42a372:	push   r12
  42a374:	push   rbp
  42a375:	push   rbx
  42a376:	sub    rsp,0x8
  42a37a:	mov    rax,QWORD PTR [rdi+0x30]
  42a37e:	cmp    WORD PTR [rax+0xe],0x3
  42a383:	jne    42a482 <flatcc_builder_table_add_offset@@Base+0x112>
  42a389:	cmp    esi,0x7ffc
  42a38f:	mov    r12d,esi
  42a392:	ja     42a463 <flatcc_builder_table_add_offset@@Base+0xf3>
  42a398:	movsxd r13,esi
  42a39b:	mov    rbx,rdi
  42a39e:	add    r13,r13
  42a3a1:	mov    rdx,r13
  42a3a4:	add    rdx,QWORD PTR [rdi+0x8]
  42a3a8:	cmp    WORD PTR [rdx],0x0
  42a3ac:	jne    42a444 <flatcc_builder_table_add_offset@@Base+0xd4>
  42a3b2:	mov    eax,DWORD PTR [rdi+0x14]
  42a3b5:	xor    eax,esi
  42a3b7:	imul   eax,eax,0x9e3779b1
  42a3bd:	xor    eax,0x4
  42a3c0:	imul   eax,eax,0x9e3779b1
  42a3c6:	mov    DWORD PTR [rdi+0x14],eax
  42a3c9:	mov    eax,DWORD PTR [rdi+0x20]
  42a3cc:	lea    ebp,[rax+0x3]
  42a3cf:	and    ebp,0xfffffffc
  42a3d2:	lea    esi,[rbp+0x4]
  42a3d5:	cmp    esi,DWORD PTR [rdi+0x24]
  42a3d8:	mov    DWORD PTR [rdi+0x20],esi
  42a3db:	ja     42a420 <flatcc_builder_table_add_offset@@Base+0xb0>
  42a3dd:	lea    eax,[rbp+0x4]
  42a3e0:	mov    WORD PTR [rdx],ax
  42a3e3:	cmp    r12w,WORD PTR [rbx+0x10]
  42a3e8:	jae    42a410 <flatcc_builder_table_add_offset@@Base+0xa0>
  42a3ea:	mov    rax,QWORD PTR [rbx]
  42a3ed:	lea    rdx,[rax+0x2]
  42a3f1:	mov    QWORD PTR [rbx],rdx
  42a3f4:	mov    WORD PTR [rax],bp
  42a3f7:	mov    eax,ebp
  42a3f9:	add    rax,QWORD PTR [rbx+0x18]
  42a3fd:	add    rsp,0x8
  42a401:	pop    rbx
  42a402:	pop    rbp
  42a403:	pop    r12
  42a405:	pop    r13
  42a407:	ret    
  42a408:	nop    DWORD PTR [rax+rax*1+0x0]
  42a410:	lea    esi,[r12+0x1]
  42a415:	mov    WORD PTR [rbx+0x10],si
  42a419:	jmp    42a3ea <flatcc_builder_table_add_offset@@Base+0x7a>
  42a41b:	nop    DWORD PTR [rax+rax*1+0x0]
  42a420:	mov    edx,0xfffc
  42a425:	call   426ba0 <__flatcc_fb_coerce_scalar_type@@Base+0x7d0>
  42a42a:	test   eax,eax
  42a42c:	jne    42a440 <flatcc_builder_table_add_offset@@Base+0xd0>
  42a42e:	mov    rdx,r13
  42a431:	add    rdx,QWORD PTR [rbx+0x8]
  42a435:	jmp    42a3dd <flatcc_builder_table_add_offset@@Base+0x6d>
  42a437:	nop    WORD PTR [rax+rax*1+0x0]
  42a440:	xor    eax,eax
  42a442:	jmp    42a3fd <flatcc_builder_table_add_offset@@Base+0x8d>
  42a444:	lea    rcx,[rip+0x1f135]        # 449580 <fb_schema_table_missing@@Base+0x3210>
  42a44b:	lea    rsi,[rip+0x1ec9e]        # 4490f0 <fb_schema_table_missing@@Base+0x2d80>
  42a452:	lea    rdi,[rip+0xcdd0]        # 437229 <_IO_stdin_used@@Base+0xa229>
  42a459:	mov    edx,0x71b
  42a45e:	call   405100 <__assert_fail@plt>
  42a463:	lea    rcx,[rip+0x1f116]        # 449580 <fb_schema_table_missing@@Base+0x3210>
  42a46a:	lea    rsi,[rip+0x1ec7f]        # 4490f0 <fb_schema_table_missing@@Base+0x2d80>
  42a471:	lea    rdi,[rip+0x1ef50]        # 4493c8 <fb_schema_table_missing@@Base+0x3058>
  42a478:	mov    edx,0x714
  42a47d:	call   405100 <__assert_fail@plt>
  42a482:	lea    rcx,[rip+0x1f0f7]        # 449580 <fb_schema_table_missing@@Base+0x3210>
  42a489:	lea    rsi,[rip+0x1ec60]        # 4490f0 <fb_schema_table_missing@@Base+0x2d80>
  42a490:	lea    rdi,[rip+0x1eea1]        # 449338 <fb_schema_table_missing@@Base+0x2fc8>
  42a497:	mov    edx,0x713
  42a49c:	call   405100 <__assert_fail@plt>
  42a4a1:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  42a4ac:	nop    DWORD PTR [rax+0x0]

000000000042a4b0 <flatcc_builder_table_add_union@@Base>:
  42a4b0:	push   r13
  42a4b2:	push   r12
  42a4b4:	mov    r13,rdx
  42a4b7:	push   rbp
  42a4b8:	push   rbx
  42a4b9:	sar    r13,0x20
  42a4bd:	sub    rsp,0x8
  42a4c1:	mov    rax,QWORD PTR [rdi+0x30]
  42a4c5:	cmp    WORD PTR [rax+0xe],0x3
  42a4ca:	jne    42a544 <flatcc_builder_table_add_union@@Base+0x94>
  42a4cc:	test   dl,dl
  42a4ce:	mov    r12,rdi
  42a4d1:	mov    ebx,esi
  42a4d3:	mov    rbp,rdx
  42a4d6:	je     42a520 <flatcc_builder_table_add_union@@Base+0x70>
  42a4d8:	test   r13d,r13d
  42a4db:	je     42a4ee <flatcc_builder_table_add_union@@Base+0x3e>
  42a4dd:	call   42a370 <flatcc_builder_table_add_offset@@Base>
  42a4e2:	test   rax,rax
  42a4e5:	je     42a582 <flatcc_builder_table_add_union@@Base+0xd2>
  42a4eb:	mov    DWORD PTR [rax],r13d
  42a4ee:	lea    esi,[rbx-0x1]
  42a4f1:	mov    ecx,0x1
  42a4f6:	mov    edx,0x1
  42a4fb:	mov    rdi,r12
  42a4fe:	call   42a1a0 <flatcc_builder_table_add@@Base>
  42a503:	test   rax,rax
  42a506:	je     42a563 <flatcc_builder_table_add_union@@Base+0xb3>
  42a508:	mov    BYTE PTR [rax],bpl
  42a50b:	add    rsp,0x8
  42a50f:	xor    eax,eax
  42a511:	pop    rbx
  42a512:	pop    rbp
  42a513:	pop    r12
  42a515:	pop    r13
  42a517:	ret    
  42a518:	nop    DWORD PTR [rax+rax*1+0x0]
  42a520:	test   r13d,r13d
  42a523:	je     42a4ee <flatcc_builder_table_add_union@@Base+0x3e>
  42a525:	lea    rcx,[rip+0x1f1e4]        # 449710 <fb_schema_table_missing@@Base+0x33a0>
  42a52c:	lea    rsi,[rip+0x1ebbd]        # 4490f0 <fb_schema_table_missing@@Base+0x2d80>
  42a533:	lea    rdi,[rip+0x1eed6]        # 449410 <fb_schema_table_missing@@Base+0x30a0>
  42a53a:	mov    edx,0x5ef
  42a53f:	call   405100 <__assert_fail@plt>
  42a544:	lea    rcx,[rip+0x1f1c5]        # 449710 <fb_schema_table_missing@@Base+0x33a0>
  42a54b:	lea    rsi,[rip+0x1eb9e]        # 4490f0 <fb_schema_table_missing@@Base+0x2d80>
  42a552:	lea    rdi,[rip+0x1eddf]        # 449338 <fb_schema_table_missing@@Base+0x2fc8>
  42a559:	mov    edx,0x5ee
  42a55e:	call   405100 <__assert_fail@plt>
  42a563:	lea    rcx,[rip+0x1f1a6]        # 449710 <fb_schema_table_missing@@Base+0x33a0>
  42a56a:	lea    rsi,[rip+0x1eb7f]        # 4490f0 <fb_schema_table_missing@@Base+0x2d80>
  42a571:	lea    rdi,[rip+0x1ef9e]        # 449516 <fb_schema_table_missing@@Base+0x31a6>
  42a578:	mov    edx,0x5f6
  42a57d:	call   405100 <__assert_fail@plt>
  42a582:	lea    rcx,[rip+0x1f187]        # 449710 <fb_schema_table_missing@@Base+0x33a0>
  42a589:	lea    rsi,[rip+0x1eb60]        # 4490f0 <fb_schema_table_missing@@Base+0x2d80>
  42a590:	lea    rdi,[rip+0x1ef75]        # 44950c <fb_schema_table_missing@@Base+0x319c>
  42a597:	mov    edx,0x5f2
  42a59c:	call   405100 <__assert_fail@plt>
  42a5a1:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  42a5ac:	nop    DWORD PTR [rax+0x0]

000000000042a5b0 <flatcc_builder_table_add_union_vector@@Base>:
  42a5b0:	push   r13
  42a5b2:	push   r12
  42a5b4:	push   rbp
  42a5b5:	push   rbx
  42a5b6:	mov    rbp,rdx
  42a5b9:	sar    rbp,0x20
  42a5bd:	sub    rsp,0x18
  42a5c1:	mov    rax,QWORD PTR [rdi+0x30]
  42a5c5:	cmp    WORD PTR [rax+0xe],0x3
  42a5ca:	jne    42a646 <flatcc_builder_table_add_union_vector@@Base+0x96>
  42a5cc:	test   ebp,ebp
  42a5ce:	sete   al
  42a5d1:	test   edx,edx
  42a5d3:	sete   cl
  42a5d6:	cmp    cl,al
  42a5d8:	je     42a600 <flatcc_builder_table_add_union_vector@@Base+0x50>
  42a5da:	test   edx,edx
  42a5dc:	setne  dl
  42a5df:	cmp    al,dl
  42a5e1:	je     42a665 <flatcc_builder_table_add_union_vector@@Base+0xb5>
  42a5e7:	mov    r12d,0xffffffff
  42a5ed:	add    rsp,0x18
  42a5f1:	mov    eax,r12d
  42a5f4:	pop    rbx
  42a5f5:	pop    rbp
  42a5f6:	pop    r12
  42a5f8:	pop    r13
  42a5fa:	ret    
  42a5fb:	nop    DWORD PTR [rax+rax*1+0x0]
  42a600:	xor    r12d,r12d
  42a603:	test   edx,edx
  42a605:	je     42a5ed <flatcc_builder_table_add_union_vector@@Base+0x3d>
  42a607:	mov    r13d,esi
  42a60a:	lea    esi,[rsi-0x1]
  42a60d:	mov    QWORD PTR [rsp+0x8],rdx
  42a612:	mov    rbx,rdi
  42a615:	call   42a370 <flatcc_builder_table_add_offset@@Base>
  42a61a:	test   rax,rax
  42a61d:	mov    rdx,QWORD PTR [rsp+0x8]
  42a622:	je     42a6a3 <flatcc_builder_table_add_union_vector@@Base+0xf3>
  42a624:	mov    DWORD PTR [rax],edx
  42a626:	mov    esi,r13d
  42a629:	mov    rdi,rbx
  42a62c:	call   42a370 <flatcc_builder_table_add_offset@@Base>
  42a631:	test   rax,rax
  42a634:	je     42a684 <flatcc_builder_table_add_union_vector@@Base+0xd4>
  42a636:	mov    DWORD PTR [rax],ebp
  42a638:	add    rsp,0x18
  42a63c:	mov    eax,r12d
  42a63f:	pop    rbx
  42a640:	pop    rbp
  42a641:	pop    r12
  42a643:	pop    r13
  42a645:	ret    
  42a646:	lea    rcx,[rip+0x1f093]        # 4496e0 <fb_schema_table_missing@@Base+0x3370>
  42a64d:	lea    rsi,[rip+0x1ea9c]        # 4490f0 <fb_schema_table_missing@@Base+0x2d80>
  42a654:	lea    rdi,[rip+0x1ecdd]        # 449338 <fb_schema_table_missing@@Base+0x2fc8>
  42a65b:	mov    edx,0x600
  42a660:	call   405100 <__assert_fail@plt>
  42a665:	lea    rcx,[rip+0x1f074]        # 4496e0 <fb_schema_table_missing@@Base+0x3370>
  42a66c:	lea    rsi,[rip+0x1ea7d]        # 4490f0 <fb_schema_table_missing@@Base+0x2d80>
  42a673:	lea    rdi,[rip+0x1edbe]        # 449438 <fb_schema_table_missing@@Base+0x30c8>
  42a67a:	mov    edx,0x601
  42a67f:	call   405100 <__assert_fail@plt>
  42a684:	lea    rcx,[rip+0x1f055]        # 4496e0 <fb_schema_table_missing@@Base+0x3370>
  42a68b:	lea    rsi,[rip+0x1ea5e]        # 4490f0 <fb_schema_table_missing@@Base+0x2d80>
  42a692:	lea    rdi,[rip+0x1ee73]        # 44950c <fb_schema_table_missing@@Base+0x319c>
  42a699:	mov    edx,0x608
  42a69e:	call   405100 <__assert_fail@plt>
  42a6a3:	lea    rcx,[rip+0x1f036]        # 4496e0 <fb_schema_table_missing@@Base+0x3370>
  42a6aa:	lea    rsi,[rip+0x1ea3f]        # 4490f0 <fb_schema_table_missing@@Base+0x2d80>
  42a6b1:	lea    rdi,[rip+0x1ee54]        # 44950c <fb_schema_table_missing@@Base+0x319c>
  42a6b8:	mov    edx,0x604
  42a6bd:	call   405100 <__assert_fail@plt>
  42a6c2:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  42a6cd:	nop    DWORD PTR [rax]

000000000042a6d0 <flatcc_builder_push_buffer_alignment@@Base>:
  42a6d0:	mov    edx,0x4
  42a6d5:	movzx  eax,WORD PTR [rdi+0xe8]
  42a6dc:	mov    WORD PTR [rdi+0xe8],dx
  42a6e3:	ret    
  42a6e4:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  42a6ef:	nop

000000000042a6f0 <flatcc_builder_pop_buffer_alignment@@Base>:
  42a6f0:	cmp    si,WORD PTR [rdi+0xe8]
  42a6f7:	jbe    42a700 <flatcc_builder_pop_buffer_alignment@@Base+0x10>
  42a6f9:	mov    WORD PTR [rdi+0xe8],si
  42a700:	repz ret 
  42a702:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  42a70d:	nop    DWORD PTR [rax]

000000000042a710 <flatcc_builder_get_buffer_alignment@@Base>:
  42a710:	movzx  eax,WORD PTR [rdi+0xe8]
  42a717:	ret    
  42a718:	nop    DWORD PTR [rax+rax*1+0x0]

000000000042a720 <flatcc_builder_set_vtable_clustering@@Base>:
  42a720:	xor    eax,eax
  42a722:	test   esi,esi
  42a724:	sete   al
  42a727:	mov    DWORD PTR [rdi+0x124],eax
  42a72d:	ret    
  42a72e:	xchg   ax,ax

000000000042a730 <flatcc_builder_set_block_align@@Base>:
  42a730:	mov    WORD PTR [rdi+0xec],si
  42a737:	ret    
  42a738:	nop    DWORD PTR [rax+rax*1+0x0]

000000000042a740 <flatcc_builder_get_level@@Base>:
  42a740:	mov    eax,DWORD PTR [rdi+0x104]
  42a746:	ret    
  42a747:	nop    WORD PTR [rax+rax*1+0x0]

000000000042a750 <flatcc_builder_set_max_level@@Base>:
  42a750:	cmp    esi,DWORD PTR [rdi+0x108]
  42a756:	mov    DWORD PTR [rdi+0x120],esi
  42a75c:	jle    42a764 <flatcc_builder_set_max_level@@Base+0x14>
  42a75e:	mov    DWORD PTR [rdi+0x108],esi
  42a764:	repz ret 
  42a766:	nop    WORD PTR cs:[rax+rax*1+0x0]

000000000042a770 <flatcc_builder_get_buffer_size@@Base>:
  42a770:	mov    eax,DWORD PTR [rdi+0xf4]
  42a776:	sub    eax,DWORD PTR [rdi+0xf0]
  42a77c:	cdqe   
  42a77e:	ret    
  42a77f:	nop

000000000042a780 <flatcc_builder_get_buffer_start@@Base>:
  42a780:	mov    eax,DWORD PTR [rdi+0xf0]
  42a786:	ret    
  42a787:	nop    WORD PTR [rax+rax*1+0x0]

000000000042a790 <flatcc_builder_get_buffer_end@@Base>:
  42a790:	mov    eax,DWORD PTR [rdi+0xf4]
  42a796:	ret    
  42a797:	nop    WORD PTR [rax+rax*1+0x0]

000000000042a7a0 <flatcc_builder_set_vtable_cache_limit@@Base>:
  42a7a0:	mov    QWORD PTR [rdi+0x118],rsi
  42a7a7:	ret    
  42a7a8:	nop    DWORD PTR [rax+rax*1+0x0]

000000000042a7b0 <flatcc_builder_set_identifier@@Base>:
  42a7b0:	test   rsi,rsi
  42a7b3:	je     42a7c0 <flatcc_builder_set_identifier@@Base+0x10>
  42a7b5:	mov    eax,DWORD PTR [rsi]
  42a7b7:	mov    DWORD PTR [rdi+0x110],eax
  42a7bd:	ret    
  42a7be:	xchg   ax,ax
  42a7c0:	mov    rsi,0x449be0
  42a7c7:	mov    eax,DWORD PTR [rsi]
  42a7c9:	mov    DWORD PTR [rdi+0x110],eax
  42a7cf:	ret    

000000000042a7d0 <flatcc_builder_get_type@@Base>:
  42a7d0:	mov    rax,QWORD PTR [rdi+0x30]
  42a7d4:	test   rax,rax
  42a7d7:	je     42a7e0 <flatcc_builder_get_type@@Base+0x10>
  42a7d9:	movzx  eax,WORD PTR [rax+0xe]
  42a7dd:	ret    
  42a7de:	xchg   ax,ax
  42a7e0:	xor    eax,eax
  42a7e2:	ret    
  42a7e3:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  42a7ee:	xchg   ax,ax

000000000042a7f0 <flatcc_builder_get_type_at@@Base>:
  42a7f0:	test   esi,esi
  42a7f2:	jle    42a820 <flatcc_builder_get_type_at@@Base+0x30>
  42a7f4:	mov    edx,DWORD PTR [rdi+0x104]
  42a7fa:	xor    eax,eax
  42a7fc:	cmp    esi,edx
  42a7fe:	jg     42a822 <flatcc_builder_get_type_at@@Base+0x32>
  42a800:	sub    esi,edx
  42a802:	mov    rdx,QWORD PTR [rdi+0x30]
  42a806:	movsxd rsi,esi
  42a809:	lea    rax,[rsi+rsi*8]
  42a80d:	lea    rax,[rdx+rax*4]
  42a811:	movzx  eax,WORD PTR [rax+0xe]
  42a815:	ret    
  42a816:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42a820:	xor    eax,eax
  42a822:	repz ret 
  42a824:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  42a82f:	nop

000000000042a830 <flatcc_builder_get_direct_buffer@@Base>:
  42a830:	mov    eax,DWORD PTR [rdi+0x128]
  42a836:	test   eax,eax
  42a838:	je     42a84a <flatcc_builder_get_direct_buffer@@Base+0x1a>
  42a83a:	mov    rax,QWORD PTR [rdi+0x138]
  42a841:	cmp    QWORD PTR [rdi+0x130],rax
  42a848:	je     42a860 <flatcc_builder_get_direct_buffer@@Base+0x30>
  42a84a:	test   rsi,rsi
  42a84d:	jne    42a852 <flatcc_builder_get_direct_buffer@@Base+0x22>
  42a84f:	xor    eax,eax
  42a851:	ret    
  42a852:	mov    QWORD PTR [rsi],0x0
  42a859:	xor    eax,eax
  42a85b:	ret    
  42a85c:	nop    DWORD PTR [rax+0x0]
  42a860:	test   rsi,rsi
  42a863:	je     42a86f <flatcc_builder_get_direct_buffer@@Base+0x3f>
  42a865:	mov    rax,QWORD PTR [rdi+0x160]
  42a86c:	mov    QWORD PTR [rsi],rax
  42a86f:	mov    rax,QWORD PTR [rdi+0x140]
  42a876:	ret    
  42a877:	nop    WORD PTR [rax+rax*1+0x0]

000000000042a880 <flatcc_builder_copy_buffer@@Base>:
  42a880:	mov    eax,DWORD PTR [rdi+0x128]
  42a886:	test   eax,eax
  42a888:	je     42a8a8 <flatcc_builder_copy_buffer@@Base+0x28>
  42a88a:	sub    rsp,0x8
  42a88e:	add    rdi,0x130
  42a895:	call   42b080 <flatcc_emitter_copy_buffer@@Base>
  42a89a:	test   rax,rax
  42a89d:	je     42a8ab <flatcc_builder_copy_buffer@@Base+0x2b>
  42a89f:	add    rsp,0x8
  42a8a3:	ret    
  42a8a4:	nop    DWORD PTR [rax+0x0]
  42a8a8:	xor    eax,eax
  42a8aa:	ret    
  42a8ab:	lea    rcx,[rip+0x1ecae]        # 449560 <fb_schema_table_missing@@Base+0x31f0>
  42a8b2:	lea    rsi,[rip+0x1e837]        # 4490f0 <fb_schema_table_missing@@Base+0x2d80>
  42a8b9:	lea    rdi,[rip+0x1e0da]        # 44899a <fb_schema_table_missing@@Base+0x262a>
  42a8c0:	mov    edx,0x786
  42a8c5:	call   405100 <__assert_fail@plt>
  42a8ca:	nop    WORD PTR [rax+rax*1+0x0]

000000000042a8d0 <flatcc_builder_finalize_buffer@@Base>:
  42a8d0:	push   r12
  42a8d2:	push   rbp
  42a8d3:	mov    r12,rdi
  42a8d6:	push   rbx
  42a8d7:	mov    rbx,rsi
  42a8da:	call   42a770 <flatcc_builder_get_buffer_size@@Base>
  42a8df:	test   rbx,rbx
  42a8e2:	mov    rbp,rax
  42a8e5:	je     42a8ea <flatcc_builder_finalize_buffer@@Base+0x1a>
  42a8e7:	mov    QWORD PTR [rbx],rax
  42a8ea:	mov    rdi,rbp
  42a8ed:	call   405180 <malloc@plt>
  42a8f2:	test   rax,rax
  42a8f5:	mov    rbx,rax
  42a8f8:	je     42a915 <flatcc_builder_finalize_buffer@@Base+0x45>
  42a8fa:	mov    rdx,rbp
  42a8fd:	mov    rsi,rax
  42a900:	mov    rdi,r12
  42a903:	call   42a880 <flatcc_builder_copy_buffer@@Base>
  42a908:	test   rax,rax
  42a90b:	je     42a934 <flatcc_builder_finalize_buffer@@Base+0x64>
  42a90d:	mov    rax,rbx
  42a910:	pop    rbx
  42a911:	pop    rbp
  42a912:	pop    r12
  42a914:	ret    
  42a915:	lea    rcx,[rip+0x1ec24]        # 449540 <fb_schema_table_missing@@Base+0x31d0>
  42a91c:	lea    rsi,[rip+0x1e7cd]        # 4490f0 <fb_schema_table_missing@@Base+0x2d80>
  42a923:	lea    rdi,[rip+0xc8ff]        # 437229 <_IO_stdin_used@@Base+0xa229>
  42a92a:	mov    edx,0x798
  42a92f:	call   405100 <__assert_fail@plt>
  42a934:	lea    rcx,[rip+0x1ec05]        # 449540 <fb_schema_table_missing@@Base+0x31d0>
  42a93b:	lea    rsi,[rip+0x1e7ae]        # 4490f0 <fb_schema_table_missing@@Base+0x2d80>
  42a942:	lea    rdi,[rip+0xc8e0]        # 437229 <_IO_stdin_used@@Base+0xa229>
  42a949:	mov    edx,0x79c
  42a94e:	call   405100 <__assert_fail@plt>
  42a953:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  42a95e:	xchg   ax,ax

000000000042a960 <flatcc_builder_finalize_aligned_buffer@@Base>:
  42a960:	push   r13
  42a962:	push   r12
  42a964:	mov    r12,rdi
  42a967:	push   rbp
  42a968:	push   rbx
  42a969:	mov    rbp,rsi
  42a96c:	sub    rsp,0x18
  42a970:	mov    rax,QWORD PTR fs:0x28
  42a979:	mov    QWORD PTR [rsp+0x8],rax
  42a97e:	xor    eax,eax
  42a980:	call   42a770 <flatcc_builder_get_buffer_size@@Base>
  42a985:	test   rbp,rbp
  42a988:	mov    rbx,rax
  42a98b:	je     42a991 <flatcc_builder_finalize_aligned_buffer@@Base+0x31>
  42a98d:	mov    QWORD PTR [rbp+0x0],rax
  42a991:	mov    rdi,r12
  42a994:	call   42a710 <flatcc_builder_get_buffer_alignment@@Base>
  42a999:	movzx  eax,ax
  42a99c:	mov    esi,0x8
  42a9a1:	mov    rdi,rsp
  42a9a4:	lea    rdx,[rbx+rax*1-0x1]
  42a9a9:	mov    rbx,rax
  42a9ac:	mov    QWORD PTR [rsp],0x0
  42a9b4:	neg    rbx
  42a9b7:	and    rbx,rdx
  42a9ba:	cmp    rax,0x8
  42a9be:	cmovae rsi,rax
  42a9c2:	mov    rdx,rbx
  42a9c5:	call   405210 <posix_memalign@plt>
  42a9ca:	test   eax,eax
  42a9cc:	je     42aa10 <flatcc_builder_finalize_aligned_buffer@@Base+0xb0>
  42a9ce:	mov    rdi,QWORD PTR [rsp]
  42a9d2:	test   rdi,rdi
  42a9d5:	je     42a9dc <flatcc_builder_finalize_aligned_buffer@@Base+0x7c>
  42a9d7:	call   405040 <free@plt>
  42a9dc:	test   rbp,rbp
  42a9df:	je     42aa36 <flatcc_builder_finalize_aligned_buffer@@Base+0xd6>
  42a9e1:	mov    QWORD PTR [rbp+0x0],0x0
  42a9e9:	xor    r13d,r13d
  42a9ec:	mov    rcx,QWORD PTR [rsp+0x8]
  42a9f1:	xor    rcx,QWORD PTR fs:0x28
  42a9fa:	mov    rax,r13
  42a9fd:	jne    42aa31 <flatcc_builder_finalize_aligned_buffer@@Base+0xd1>
  42a9ff:	add    rsp,0x18
  42aa03:	pop    rbx
  42aa04:	pop    rbp
  42aa05:	pop    r12
  42aa07:	pop    r13
  42aa09:	ret    
  42aa0a:	nop    WORD PTR [rax+rax*1+0x0]
  42aa10:	mov    r13,QWORD PTR [rsp]
  42aa14:	test   r13,r13
  42aa17:	je     42a9dc <flatcc_builder_finalize_aligned_buffer@@Base+0x7c>
  42aa19:	mov    rdx,rbx
  42aa1c:	mov    rsi,r13
  42aa1f:	mov    rdi,r12
  42aa22:	call   42a880 <flatcc_builder_copy_buffer@@Base>
  42aa27:	test   rax,rax
  42aa2a:	jne    42a9ec <flatcc_builder_finalize_aligned_buffer@@Base+0x8c>
  42aa2c:	mov    rdi,r13
  42aa2f:	jmp    42a9d7 <flatcc_builder_finalize_aligned_buffer@@Base+0x77>
  42aa31:	call   4050d0 <__stack_chk_fail@plt>
  42aa36:	xor    r13d,r13d
  42aa39:	jmp    42a9ec <flatcc_builder_finalize_aligned_buffer@@Base+0x8c>
  42aa3b:	nop    DWORD PTR [rax+rax*1+0x0]

000000000042aa40 <flatcc_builder_aligned_alloc@@Base>:
  42aa40:	sub    rsp,0x18
  42aa44:	mov    rdx,rsi
  42aa47:	mov    esi,0x8
  42aa4c:	mov    rax,QWORD PTR fs:0x28
  42aa55:	mov    QWORD PTR [rsp+0x8],rax
  42aa5a:	xor    eax,eax
  42aa5c:	cmp    rdi,0x8
  42aa60:	mov    QWORD PTR [rsp],0x0
  42aa68:	cmovae rsi,rdi
  42aa6c:	mov    rdi,rsp
  42aa6f:	call   405210 <posix_memalign@plt>
  42aa74:	test   eax,eax
  42aa76:	mov    rax,QWORD PTR [rsp]
  42aa7a:	je     42aa8b <flatcc_builder_aligned_alloc@@Base+0x4b>
  42aa7c:	test   rax,rax
  42aa7f:	je     42aa8b <flatcc_builder_aligned_alloc@@Base+0x4b>
  42aa81:	mov    rdi,rax
  42aa84:	call   405040 <free@plt>
  42aa89:	xor    eax,eax
  42aa8b:	mov    rcx,QWORD PTR [rsp+0x8]
  42aa90:	xor    rcx,QWORD PTR fs:0x28
  42aa99:	jne    42aaa0 <flatcc_builder_aligned_alloc@@Base+0x60>
  42aa9b:	add    rsp,0x18
  42aa9f:	ret    
  42aaa0:	call   4050d0 <__stack_chk_fail@plt>
  42aaa5:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

000000000042aab0 <flatcc_builder_aligned_free@@Base>:
  42aab0:	jmp    405040 <free@plt>
  42aab5:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

000000000042aac0 <flatcc_builder_get_emit_context@@Base>:
  42aac0:	mov    rax,QWORD PTR [rdi+0x38]
  42aac4:	ret    
  42aac5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42aacf:	nop

000000000042aad0 <flatcc_emitter_recycle_page@@Base>:
  42aad0:	mov    rax,QWORD PTR [rdi]
  42aad3:	cmp    rax,rsi
  42aad6:	je     42ab30 <flatcc_emitter_recycle_page@@Base+0x60>
  42aad8:	cmp    rsi,QWORD PTR [rdi+0x8]
  42aadc:	je     42ab30 <flatcc_emitter_recycle_page@@Base+0x60>
  42aade:	mov    rdx,QWORD PTR [rsi+0xb80]
  42aae5:	mov    rcx,QWORD PTR [rsi+0xb88]
  42aaec:	mov    QWORD PTR [rdx+0xb88],rcx
  42aaf3:	mov    rcx,QWORD PTR [rsi+0xb88]
  42aafa:	mov    QWORD PTR [rcx+0xb80],rdx
  42ab01:	mov    rdx,QWORD PTR [rax+0xb88]
  42ab08:	mov    QWORD PTR [rsi+0xb80],rax
  42ab0f:	mov    QWORD PTR [rsi+0xb88],rdx
  42ab16:	mov    QWORD PTR [rdx+0xb80],rsi
  42ab1d:	mov    rax,QWORD PTR [rsi+0xb80]
  42ab24:	mov    QWORD PTR [rax+0xb88],rsi
  42ab2b:	xor    eax,eax
  42ab2d:	ret    
  42ab2e:	xchg   ax,ax
  42ab30:	mov    eax,0xffffffff
  42ab35:	ret    
  42ab36:	nop    WORD PTR cs:[rax+rax*1+0x0]

000000000042ab40 <flatcc_emitter_reset@@Base>:
  42ab40:	mov    rax,QWORD PTR [rdi]
  42ab43:	test   rax,rax
  42ab46:	je     42ac0d <flatcc_emitter_reset@@Base+0xcd>
  42ab4c:	lea    rdx,[rax+0x5c0]
  42ab53:	mov    QWORD PTR [rdi+0x8],rax
  42ab57:	mov    QWORD PTR [rdi+0x18],0x5c0
  42ab5f:	mov    QWORD PTR [rdi+0x28],0x5c0
  42ab67:	mov    rcx,QWORD PTR [rdi+0x30]
  42ab6b:	mov    QWORD PTR [rdi+0x10],rdx
  42ab6f:	mov    QWORD PTR [rdi+0x20],rdx
  42ab73:	mov    rdx,QWORD PTR [rdi+0x40]
  42ab77:	mov    DWORD PTR [rax+0xb90],0xfffffa40
  42ab81:	test   rdx,rdx
  42ab84:	je     42ac10 <flatcc_emitter_reset@@Base+0xd0>
  42ab8a:	lea    rdx,[rdx+rdx*2]
  42ab8e:	shr    rcx,0x2
  42ab92:	mov    QWORD PTR [rdi+0x30],0x0
  42ab9a:	shr    rdx,0x2
  42ab9e:	add    rdx,rcx
  42aba1:	mov    QWORD PTR [rdi+0x40],rdx
  42aba5:	add    rdx,rdx
  42aba8:	cmp    QWORD PTR [rdi+0x38],rdx
  42abac:	jbe    42ac0d <flatcc_emitter_reset@@Base+0xcd>
  42abae:	push   rbx
  42abaf:	mov    rbx,rdi
  42abb2:	mov    rdi,QWORD PTR [rax+0xb80]
  42abb9:	cmp    rax,rdi
  42abbc:	jne    42abd0 <flatcc_emitter_reset@@Base+0x90>
  42abbe:	jmp    42ac0c <flatcc_emitter_reset@@Base+0xcc>
  42abc0:	mov    rax,QWORD PTR [rbx+0x8]
  42abc4:	mov    rdi,QWORD PTR [rax+0xb80]
  42abcb:	cmp    rdi,QWORD PTR [rbx]
  42abce:	je     42ac0c <flatcc_emitter_reset@@Base+0xcc>
  42abd0:	mov    rdx,QWORD PTR [rdi+0xb80]
  42abd7:	mov    QWORD PTR [rax+0xb80],rdx
  42abde:	mov    rdx,QWORD PTR [rdi+0xb80]
  42abe5:	mov    QWORD PTR [rdx+0xb88],rax
  42abec:	call   405040 <free@plt>
  42abf1:	mov    rsi,QWORD PTR [rbx+0x40]
  42abf5:	mov    rax,QWORD PTR [rbx+0x38]
  42abf9:	lea    rdx,[rsi+rsi*1]
  42abfd:	sub    rax,0xb80
  42ac03:	mov    QWORD PTR [rbx+0x38],rax
  42ac07:	cmp    rdx,rax
  42ac0a:	jb     42abc0 <flatcc_emitter_reset@@Base+0x80>
  42ac0c:	pop    rbx
  42ac0d:	repz ret 
  42ac0f:	nop
  42ac10:	mov    rdx,rcx
  42ac13:	jmp    42ab8a <flatcc_emitter_reset@@Base+0x4a>
  42ac18:	nop    DWORD PTR [rax+rax*1+0x0]

000000000042ac20 <flatcc_emitter_clear@@Base>:
  42ac20:	mov    rax,QWORD PTR [rdi]
  42ac23:	test   rax,rax
  42ac26:	je     42aca7 <flatcc_emitter_clear@@Base+0x87>
  42ac28:	push   rbp
  42ac29:	push   rbx
  42ac2a:	mov    rbp,rdi
  42ac2d:	sub    rsp,0x8
  42ac31:	mov    rdx,QWORD PTR [rax+0xb88]
  42ac38:	mov    QWORD PTR [rdx+0xb80],0x0
  42ac43:	mov    rbx,QWORD PTR [rax+0xb80]
  42ac4a:	test   rbx,rbx
  42ac4d:	jne    42ac5b <flatcc_emitter_clear@@Base+0x3b>
  42ac4f:	jmp    42aca9 <flatcc_emitter_clear@@Base+0x89>
  42ac51:	nop    DWORD PTR [rax+0x0]
  42ac58:	mov    rbx,rax
  42ac5b:	mov    rdi,QWORD PTR [rbx+0xb88]
  42ac62:	call   405040 <free@plt>
  42ac67:	mov    rax,QWORD PTR [rbx+0xb80]
  42ac6e:	test   rax,rax
  42ac71:	jne    42ac58 <flatcc_emitter_clear@@Base+0x38>
  42ac73:	mov    rdi,rbx
  42ac76:	call   405040 <free@plt>
  42ac7b:	lea    rdi,[rbp+0x8]
  42ac7f:	mov    QWORD PTR [rbp+0x0],0x0
  42ac87:	mov    QWORD PTR [rbp+0x40],0x0
  42ac8f:	xor    eax,eax
  42ac91:	and    rdi,0xfffffffffffffff8
  42ac95:	sub    rbp,rdi
  42ac98:	lea    ecx,[rbp+0x48]
  42ac9b:	shr    ecx,0x3
  42ac9e:	rep stos QWORD PTR es:[rdi],rax
  42aca1:	add    rsp,0x8
  42aca5:	pop    rbx
  42aca6:	pop    rbp
  42aca7:	repz ret 
  42aca9:	mov    rbx,rax
  42acac:	jmp    42ac73 <flatcc_emitter_clear@@Base+0x53>
  42acae:	xchg   ax,ax

000000000042acb0 <flatcc_emitter@@Base>:
  42acb0:	push   r15
  42acb2:	push   r14
  42acb4:	mov    r14,rsi
  42acb7:	push   r13
  42acb9:	push   r12
  42acbb:	push   rbp
  42acbc:	push   rbx
  42acbd:	mov    rbx,rdi
  42acc0:	sub    rsp,0x18
  42acc4:	add    QWORD PTR [rdi+0x30],r8
  42acc8:	test   ecx,ecx
  42acca:	js     42aebe <flatcc_emitter@@Base+0x20e>
  42acd0:	mov    rax,QWORD PTR [rdi+0x28]
  42acd4:	cmp    r8,rax
  42acd7:	jbe    42ad64 <flatcc_emitter@@Base+0xb4>
  42acdd:	test   edx,edx
  42acdf:	je     42ad53 <flatcc_emitter@@Base+0xa3>
  42ace1:	lea    r15d,[rdx-0x1]
  42ace5:	add    r15,0x1
  42ace9:	shl    r15,0x4
  42aced:	lea    rax,[rsi+r15*1]
  42acf1:	mov    QWORD PTR [rsp+0x8],rax
  42acf6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42ad00:	mov    r12,QWORD PTR [r14+0x8]
  42ad04:	mov    r13,QWORD PTR [r14]
  42ad07:	test   r12,r12
  42ad0a:	je     42ad48 <flatcc_emitter@@Base+0x98>
  42ad0c:	nop    DWORD PTR [rax+0x0]
  42ad10:	mov    rbp,QWORD PTR [rbx+0x28]
  42ad14:	cmp    rbp,r12
  42ad17:	jae    42adb8 <flatcc_emitter@@Base+0x108>
  42ad1d:	test   rbp,rbp
  42ad20:	je     42adc8 <flatcc_emitter@@Base+0x118>
  42ad26:	sub    r12,rbp
  42ad29:	mov    rdi,QWORD PTR [rbx+0x20]
  42ad2d:	mov    rsi,r13
  42ad30:	mov    rdx,rbp
  42ad33:	add    r13,rbp
  42ad36:	call   405170 <memcpy@plt>
  42ad3b:	add    QWORD PTR [rbx+0x20],rbp
  42ad3f:	sub    QWORD PTR [rbx+0x28],rbp
  42ad43:	test   r12,r12
  42ad46:	jne    42ad10 <flatcc_emitter@@Base+0x60>
  42ad48:	add    r14,0x10
  42ad4c:	cmp    r14,QWORD PTR [rsp+0x8]
  42ad51:	jne    42ad00 <flatcc_emitter@@Base+0x50>
  42ad53:	add    rsp,0x18
  42ad57:	xor    eax,eax
  42ad59:	pop    rbx
  42ad5a:	pop    rbp
  42ad5b:	pop    r12
  42ad5d:	pop    r13
  42ad5f:	pop    r14
  42ad61:	pop    r15
  42ad63:	ret    
  42ad64:	mov    rcx,QWORD PTR [rdi+0x20]
  42ad68:	sub    rax,r8
  42ad6b:	mov    QWORD PTR [rdi+0x28],rax
  42ad6f:	lea    rsi,[rcx+r8*1]
  42ad73:	mov    QWORD PTR [rdi+0x20],rsi
  42ad77:	test   edx,edx
  42ad79:	je     42ad53 <flatcc_emitter@@Base+0xa3>
  42ad7b:	lea    ebx,[rdx-0x1]
  42ad7e:	add    rbx,0x1
  42ad82:	shl    rbx,0x4
  42ad86:	add    rbx,r14
  42ad89:	nop    DWORD PTR [rax+0x0]
  42ad90:	mov    rsi,QWORD PTR [r14]
  42ad93:	mov    rdx,QWORD PTR [r14+0x8]
  42ad97:	mov    rdi,rcx
  42ad9a:	add    r14,0x10
  42ad9e:	call   405170 <memcpy@plt>
  42ada3:	mov    rcx,rax
  42ada6:	add    rcx,QWORD PTR [r14-0x8]
  42adaa:	cmp    rbx,r14
  42adad:	jne    42ad90 <flatcc_emitter@@Base+0xe0>
  42adaf:	jmp    42ad53 <flatcc_emitter@@Base+0xa3>
  42adb1:	nop    DWORD PTR [rax+0x0]
  42adb8:	mov    rbp,r12
  42adbb:	xor    r12d,r12d
  42adbe:	jmp    42ad29 <flatcc_emitter@@Base+0x79>
  42adc3:	nop    DWORD PTR [rax+rax*1+0x0]
  42adc8:	mov    r15,QWORD PTR [rbx+0x8]
  42adcc:	test   r15,r15
  42adcf:	je     42ae50 <flatcc_emitter@@Base+0x1a0>
  42add1:	mov    rbp,QWORD PTR [r15+0xb80]
  42add8:	cmp    rbp,QWORD PTR [rbx]
  42addb:	je     42ae10 <flatcc_emitter@@Base+0x160>
  42addd:	mov    QWORD PTR [rbx+0x8],rbp
  42ade1:	mov    rax,QWORD PTR [rbp+0xb88]
  42ade8:	mov    QWORD PTR [rbx+0x20],rbp
  42adec:	mov    QWORD PTR [rbx+0x28],0xb80
  42adf4:	mov    eax,DWORD PTR [rax+0xb90]
  42adfa:	add    eax,0xb80
  42adff:	mov    DWORD PTR [rbp+0xb90],eax
  42ae05:	jmp    42ad10 <flatcc_emitter@@Base+0x60>
  42ae0a:	nop    WORD PTR [rax+rax*1+0x0]
  42ae10:	mov    edi,0xb98
  42ae15:	call   405180 <malloc@plt>
  42ae1a:	test   rax,rax
  42ae1d:	je     42ae5f <flatcc_emitter@@Base+0x1af>
  42ae1f:	mov    QWORD PTR [rax+0xb80],rbp
  42ae26:	add    QWORD PTR [rbx+0x38],0xb80
  42ae2e:	mov    QWORD PTR [rax+0xb88],r15
  42ae35:	mov    QWORD PTR [rbp+0xb88],rax
  42ae3c:	mov    rbp,rax
  42ae3f:	mov    QWORD PTR [r15+0xb80],rax
  42ae46:	mov    QWORD PTR [rbx+0x8],rax
  42ae4a:	jmp    42ade1 <flatcc_emitter@@Base+0x131>
  42ae4c:	nop    DWORD PTR [rax+0x0]
  42ae50:	mov    edi,0xb98
  42ae55:	call   405180 <malloc@plt>
  42ae5a:	test   rax,rax
  42ae5d:	jne    42ae73 <flatcc_emitter@@Base+0x1c3>
  42ae5f:	add    rsp,0x18
  42ae63:	mov    eax,0xffffffff
  42ae68:	pop    rbx
  42ae69:	pop    rbp
  42ae6a:	pop    r12
  42ae6c:	pop    r13
  42ae6e:	pop    r14
  42ae70:	pop    r15
  42ae72:	ret    
  42ae73:	lea    rdx,[rax+0x5c0]
  42ae7a:	add    QWORD PTR [rbx+0x38],0xb80
  42ae82:	mov    QWORD PTR [rbx],rax
  42ae85:	mov    QWORD PTR [rbx+0x8],rax
  42ae89:	mov    QWORD PTR [rax+0xb80],rax
  42ae90:	mov    QWORD PTR [rax+0xb88],rax
  42ae97:	mov    QWORD PTR [rbx+0x10],rdx
  42ae9b:	mov    QWORD PTR [rbx+0x20],rdx
  42ae9f:	mov    QWORD PTR [rbx+0x18],0x5c0
  42aea7:	mov    QWORD PTR [rbx+0x28],0x5c0
  42aeaf:	mov    DWORD PTR [rax+0xb90],0xfffffa40
  42aeb9:	jmp    42ad10 <flatcc_emitter@@Base+0x60>
  42aebe:	mov    rax,QWORD PTR [rdi+0x18]
  42aec2:	cmp    r8,rax
  42aec5:	jbe    42af5c <flatcc_emitter@@Base+0x2ac>
  42aecb:	movsxd rax,edx
  42aece:	shl    rax,0x4
  42aed2:	add    r14,rax
  42aed5:	mov    eax,edx
  42aed7:	shl    rax,0x4
  42aedb:	mov    rcx,r14
  42aede:	sub    rcx,rax
  42aee1:	mov    QWORD PTR [rsp+0x8],rcx
  42aee6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42aef0:	cmp    r14,QWORD PTR [rsp+0x8]
  42aef5:	je     42ad53 <flatcc_emitter@@Base+0xa3>
  42aefb:	sub    r14,0x10
  42aeff:	mov    rbp,QWORD PTR [r14+0x8]
  42af03:	mov    r12,rbp
  42af06:	add    r12,QWORD PTR [r14]
  42af09:	test   rbp,rbp
  42af0c:	je     42aef0 <flatcc_emitter@@Base+0x240>
  42af0e:	mov    rdx,QWORD PTR [rbx+0x18]
  42af12:	cmp    rdx,rbp
  42af15:	jae    42af4f <flatcc_emitter@@Base+0x29f>
  42af17:	test   rdx,rdx
  42af1a:	je     42af78 <flatcc_emitter@@Base+0x2c8>
  42af1c:	sub    rbp,rdx
  42af1f:	xor    ecx,ecx
  42af21:	mov    rax,rdx
  42af24:	mov    QWORD PTR [rbx+0x18],rcx
  42af28:	neg    rax
  42af2b:	mov    rdi,rax
  42af2e:	add    rdi,QWORD PTR [rbx+0x10]
  42af32:	add    r12,rax
  42af35:	mov    rsi,r12
  42af38:	mov    QWORD PTR [rbx+0x10],rdi
  42af3c:	call   405170 <memcpy@plt>
  42af41:	test   rbp,rbp
  42af44:	je     42aef0 <flatcc_emitter@@Base+0x240>
  42af46:	mov    rdx,QWORD PTR [rbx+0x18]
  42af4a:	cmp    rdx,rbp
  42af4d:	jb     42af17 <flatcc_emitter@@Base+0x267>
  42af4f:	mov    rcx,rdx
  42af52:	mov    rdx,rbp
  42af55:	sub    rcx,rbp
  42af58:	xor    ebp,ebp
  42af5a:	jmp    42af21 <flatcc_emitter@@Base+0x271>
  42af5c:	mov    rcx,QWORD PTR [rdi+0x10]
  42af60:	sub    rax,r8
  42af63:	mov    QWORD PTR [rdi+0x18],rax
  42af67:	sub    rcx,r8
  42af6a:	mov    QWORD PTR [rdi+0x10],rcx
  42af6e:	jmp    42ad77 <flatcc_emitter@@Base+0xc7>
  42af73:	nop    DWORD PTR [rax+rax*1+0x0]
  42af78:	mov    r13,QWORD PTR [rbx]
  42af7b:	test   r13,r13
  42af7e:	je     42b01f <flatcc_emitter@@Base+0x36f>
  42af84:	mov    r15,QWORD PTR [r13+0xb88]
  42af8b:	cmp    r15,QWORD PTR [rbx+0x8]
  42af8f:	je     42afe0 <flatcc_emitter@@Base+0x330>
  42af91:	mov    eax,DWORD PTR [r13+0xb90]
  42af98:	sub    eax,0xb80
  42af9d:	mov    DWORD PTR [r15+0xb90],eax
  42afa4:	mov    QWORD PTR [rbx],r15
  42afa7:	lea    rax,[r15+0xb80]
  42afae:	mov    QWORD PTR [rbx+0x18],0xb80
  42afb6:	mov    QWORD PTR [rbx+0x10],rax
  42afba:	mov    rax,QWORD PTR [r15+0xb80]
  42afc1:	mov    eax,DWORD PTR [rax+0xb90]
  42afc7:	sub    eax,0xb80
  42afcc:	mov    DWORD PTR [r15+0xb90],eax
  42afd3:	jmp    42af0e <flatcc_emitter@@Base+0x25e>
  42afd8:	nop    DWORD PTR [rax+rax*1+0x0]
  42afe0:	mov    edi,0xb98
  42afe5:	call   405180 <malloc@plt>
  42afea:	test   rax,rax
  42afed:	je     42ae5f <flatcc_emitter@@Base+0x1af>
  42aff3:	mov    QWORD PTR [rax+0xb88],r15
  42affa:	add    QWORD PTR [rbx+0x38],0xb80
  42b002:	mov    QWORD PTR [rax+0xb80],r13
  42b009:	mov    QWORD PTR [r13+0xb88],rax
  42b010:	mov    QWORD PTR [r15+0xb80],rax
  42b017:	mov    QWORD PTR [rbx],rax
  42b01a:	mov    r15,rax
  42b01d:	jmp    42afa7 <flatcc_emitter@@Base+0x2f7>
  42b01f:	mov    edi,0xb98
  42b024:	call   405180 <malloc@plt>
  42b029:	test   rax,rax
  42b02c:	je     42ae5f <flatcc_emitter@@Base+0x1af>
  42b032:	lea    rdx,[rax+0x5c0]
  42b039:	add    QWORD PTR [rbx+0x38],0xb80
  42b041:	mov    QWORD PTR [rbx],rax
  42b044:	mov    QWORD PTR [rbx+0x8],rax
  42b048:	mov    QWORD PTR [rax+0xb80],rax
  42b04f:	mov    QWORD PTR [rax+0xb88],rax
  42b056:	mov    QWORD PTR [rbx+0x10],rdx
  42b05a:	mov    QWORD PTR [rbx+0x20],rdx
  42b05e:	mov    QWORD PTR [rbx+0x18],0x5c0
  42b066:	mov    QWORD PTR [rbx+0x28],0x5c0
  42b06e:	mov    DWORD PTR [rax+0xb90],0xfffffa40
  42b078:	jmp    42af0e <flatcc_emitter@@Base+0x25e>
  42b07d:	nop    DWORD PTR [rax]

000000000042b080 <flatcc_emitter_copy_buffer@@Base>:
  42b080:	push   rbp
  42b081:	push   rbx
  42b082:	sub    rsp,0x8
  42b086:	mov    r9,QWORD PTR [rdi+0x30]
  42b08a:	cmp    r9,rdx
  42b08d:	ja     42b150 <flatcc_emitter_copy_buffer@@Base+0xd0>
  42b093:	mov    rax,QWORD PTR [rdi]
  42b096:	test   rax,rax
  42b099:	je     42b150 <flatcc_emitter_copy_buffer@@Base+0xd0>
  42b09f:	cmp    rax,QWORD PTR [rdi+0x8]
  42b0a3:	mov    rcx,rsi
  42b0a6:	mov    rbx,rdi
  42b0a9:	je     42b160 <flatcc_emitter_copy_buffer@@Base+0xe0>
  42b0af:	mov    r8d,0xb80
  42b0b5:	sub    r8,QWORD PTR [rdi+0x18]
  42b0b9:	mov    rsi,QWORD PTR [rdi+0x10]
  42b0bd:	mov    rdi,rcx
  42b0c0:	mov    rbp,r8
  42b0c3:	mov    rdx,r8
  42b0c6:	call   405170 <memcpy@plt>
  42b0cb:	add    rbp,rax
  42b0ce:	mov    rax,QWORD PTR [rbx]
  42b0d1:	mov    rsi,QWORD PTR [rbx+0x8]
  42b0d5:	mov    rax,QWORD PTR [rax+0xb80]
  42b0dc:	cmp    rax,rsi
  42b0df:	je     42b134 <flatcc_emitter_copy_buffer@@Base+0xb4>
  42b0e1:	nop    DWORD PTR [rax+0x0]
  42b0e8:	mov    rdx,QWORD PTR [rax]
  42b0eb:	lea    rdi,[rbp+0x8]
  42b0ef:	mov    rcx,rbp
  42b0f2:	mov    rsi,rax
  42b0f5:	add    rbp,0xb80
  42b0fc:	and    rdi,0xfffffffffffffff8
  42b100:	mov    QWORD PTR [rbp-0xb80],rdx
  42b107:	mov    rdx,QWORD PTR [rax+0xb78]
  42b10e:	sub    rcx,rdi
  42b111:	sub    rsi,rcx
  42b114:	add    ecx,0xb80
  42b11a:	shr    ecx,0x3
  42b11d:	mov    QWORD PTR [rbp-0x8],rdx
  42b121:	rep movs QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
  42b124:	mov    rax,QWORD PTR [rax+0xb80]
  42b12b:	mov    rsi,QWORD PTR [rbx+0x8]
  42b12f:	cmp    rsi,rax
  42b132:	jne    42b0e8 <flatcc_emitter_copy_buffer@@Base+0x68>
  42b134:	mov    edx,0xb80
  42b139:	sub    rdx,QWORD PTR [rbx+0x28]
  42b13d:	mov    rdi,rbp
  42b140:	call   405170 <memcpy@plt>
  42b145:	add    rsp,0x8
  42b149:	mov    rax,rbp
  42b14c:	pop    rbx
  42b14d:	pop    rbp
  42b14e:	ret    
  42b14f:	nop
  42b150:	xor    ebp,ebp
  42b152:	add    rsp,0x8
  42b156:	mov    rax,rbp
  42b159:	pop    rbx
  42b15a:	pop    rbp
  42b15b:	ret    
  42b15c:	nop    DWORD PTR [rax+0x0]
  42b160:	mov    rsi,QWORD PTR [rdi+0x10]
  42b164:	mov    rdx,r9
  42b167:	mov    rdi,rcx
  42b16a:	call   405170 <memcpy@plt>
  42b16f:	mov    rbp,rax
  42b172:	jmp    42b145 <flatcc_emitter_copy_buffer@@Base+0xc5>
  42b174:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42b17e:	xchg   ax,ax

000000000042b180 <cmetrohash64_1@@Base>:
  42b180:	mov    edx,edx
  42b182:	mov    r10d,0xc83a91e1
  42b188:	movabs r8,0x60e25d3baf065edb
  42b192:	imul   rdx,r10
  42b196:	add    r8,rsi
  42b199:	push   r13
  42b19b:	push   r12
  42b19d:	push   rbp
  42b19e:	lea    rbp,[rdi+rsi*1]
  42b1a2:	push   rbx
  42b1a3:	add    r8,rdx
  42b1a6:	cmp    rsi,0x1f
  42b1aa:	jbe    42b290 <cmetrohash64_1@@Base+0x110>
  42b1b0:	lea    rbx,[rbp-0x20]
  42b1b4:	mov    r12,r8
  42b1b7:	mov    r13,r8
  42b1ba:	mov    rsi,r8
  42b1bd:	mov    r9,r8
  42b1c0:	mov    r11d,0x8648dbdb
  42b1c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42b1d0:	mov    rax,r10
  42b1d3:	add    rdi,0x20
  42b1d7:	imul   rax,QWORD PTR [rdi-0x20]
  42b1dc:	imul   rdx,QWORD PTR [rdi-0x10],0x7bdec03b
  42b1e4:	add    r9,rax
  42b1e7:	mov    rax,r11
  42b1ea:	imul   rax,QWORD PTR [rdi-0x18]
  42b1ef:	add    rdx,r13
  42b1f2:	rorx   r9,r9,0x1d
  42b1f8:	add    r9,r13
  42b1fb:	rorx   rdx,rdx,0x1d
  42b201:	lea    r13,[rdx+r9*1]
  42b205:	add    rsi,rax
  42b208:	imul   rax,QWORD PTR [rdi-0x8],0x2f5870a5
  42b210:	rorx   rsi,rsi,0x1d
  42b216:	add    rsi,r12
  42b219:	add    rax,r12
  42b21c:	cmp    rbx,rdi
  42b21f:	rorx   rax,rax,0x1d
  42b225:	lea    r12,[rax+rsi*1]
  42b229:	jae    42b1d0 <cmetrohash64_1@@Base+0x50>
  42b22b:	lea    rdx,[r9+r12*1]
  42b22f:	imul   rdx,r10
  42b233:	add    rdx,rsi
  42b236:	rorx   rdx,rdx,0x21
  42b23c:	imul   rdx,r11
  42b240:	xor    rdx,r13
  42b243:	lea    rax,[rsi+rdx*1]
  42b247:	lea    rbx,[r9+rdx*1]
  42b24b:	imul   rax,r11
  42b24f:	imul   rbx,r10
  42b253:	add    rax,r9
  42b256:	xor    r9,rsi
  42b259:	rorx   rax,rax,0x21
  42b25f:	imul   rax,r10
  42b263:	xor    rax,r12
  42b266:	add    rbx,rax
  42b269:	add    rsi,rax
  42b26c:	rorx   rbx,rbx,0x21
  42b272:	imul   rbx,r11
  42b276:	imul   r11,rsi
  42b27a:	xor    r9,rbx
  42b27d:	add    r11,rdx
  42b280:	rorx   r11,r11,0x21
  42b286:	imul   r10,r11
  42b28a:	xor    r10,r9
  42b28d:	add    r8,r10
  42b290:	mov    rax,rbp
  42b293:	sub    rax,rdi
  42b296:	cmp    rax,0xf
  42b29a:	jle    42b302 <cmetrohash64_1@@Base+0x182>
  42b29c:	mov    r9d,0xc83a91e1
  42b2a2:	mov    eax,0x8648dbdb
  42b2a7:	add    rdi,0x10
  42b2ab:	mov    rsi,r9
  42b2ae:	imul   rsi,QWORD PTR [rdi-0x10]
  42b2b3:	add    rsi,r8
  42b2b6:	rorx   rsi,rsi,0x21
  42b2bc:	imul   rsi,rax
  42b2c0:	imul   rax,QWORD PTR [rdi-0x8]
  42b2c5:	imul   r9,rsi
  42b2c9:	lea    rdx,[rax+r8*1]
  42b2cd:	rorx   r9,r9,0x23
  42b2d3:	rorx   rdx,rdx,0x21
  42b2d9:	imul   rax,rdx,0x7bdec03b
  42b2e0:	imul   rdx,rax,0x2f5870a5
  42b2e7:	add    r9,rax
  42b2ea:	xor    rsi,r9
  42b2ed:	rorx   rdx,rdx,0x23
  42b2f3:	add    rsi,rdx
  42b2f6:	xor    rax,rsi
  42b2f9:	add    r8,rax
  42b2fc:	mov    rax,rbp
  42b2ff:	sub    rax,rdi
  42b302:	cmp    rax,0x7
  42b306:	jle    42b32e <cmetrohash64_1@@Base+0x1ae>
  42b308:	imul   rax,QWORD PTR [rdi],0x2f5870a5
  42b30f:	mov    edx,0x8648dbdb
  42b314:	add    rdi,0x8
  42b318:	add    rax,r8
  42b31b:	rorx   r8,rax,0x21
  42b321:	imul   r8,rdx
  42b325:	xor    r8,rax
  42b328:	mov    rax,rbp
  42b32b:	sub    rax,rdi
  42b32e:	cmp    rax,0x3
  42b332:	jle    42b35c <cmetrohash64_1@@Base+0x1dc>
  42b334:	mov    eax,DWORD PTR [rdi]
  42b336:	mov    edx,0x8648dbdb
  42b33b:	add    rdi,0x4
  42b33f:	imul   rax,rax,0x2f5870a5
  42b346:	add    rax,r8
  42b349:	rorx   r8,rax,0xf
  42b34f:	imul   r8,rdx
  42b353:	xor    r8,rax
  42b356:	mov    rax,rbp
  42b359:	sub    rax,rdi
  42b35c:	cmp    rax,0x1
  42b360:	jle    42b38b <cmetrohash64_1@@Base+0x20b>
  42b362:	movzx  eax,WORD PTR [rdi]
  42b365:	mov    edx,0x8648dbdb
  42b36a:	add    rdi,0x2
  42b36e:	imul   rax,rax,0x2f5870a5
  42b375:	add    rax,r8
  42b378:	rorx   r8,rax,0xd
  42b37e:	imul   r8,rdx
  42b382:	xor    r8,rax
  42b385:	mov    rax,rbp
  42b388:	sub    rax,rdi
  42b38b:	test   rax,rax
  42b38e:	jle    42b3af <cmetrohash64_1@@Base+0x22f>
  42b390:	movzx  eax,BYTE PTR [rdi]
  42b393:	mov    edx,0x8648dbdb
  42b398:	imul   rax,rax,0x2f5870a5
  42b39f:	add    rax,r8
  42b3a2:	rorx   r8,rax,0x19
  42b3a8:	imul   r8,rdx
  42b3ac:	xor    r8,rax
  42b3af:	rorx   rax,r8,0x21
  42b3b5:	xor    r8,rax
  42b3b8:	mov    eax,0xc83a91e1
  42b3bd:	imul   r8,rax
  42b3c1:	pop    rbx
  42b3c2:	pop    rbp
  42b3c3:	pop    r12
  42b3c5:	rorx   rax,r8,0x21
  42b3cb:	xor    r8,rax
  42b3ce:	mov    QWORD PTR [rcx],r8
  42b3d1:	pop    r13
  42b3d3:	ret    
  42b3d4:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  42b3df:	nop

000000000042b3e0 <cmetrohash64_2@@Base>:
  42b3e0:	mov    edx,edx
  42b3e2:	mov    r10d,0xd6d018f5
  42b3e8:	movabs r8,0x52bc33fedbe4cbb5
  42b3f2:	imul   rdx,r10
  42b3f6:	add    r8,rsi
  42b3f9:	push   r13
  42b3fb:	push   r12
  42b3fd:	push   rbp
  42b3fe:	lea    rbp,[rdi+rsi*1]
  42b402:	push   rbx
  42b403:	add    r8,rdx
  42b406:	cmp    rsi,0x1f
  42b40a:	jbe    42b4f0 <cmetrohash64_2@@Base+0x110>
  42b410:	lea    rbx,[rbp-0x20]
  42b414:	mov    r12,r8
  42b417:	mov    r13,r8
  42b41a:	mov    rsi,r8
  42b41d:	mov    r9,r8
  42b420:	mov    r11d,0xa2aa033b
  42b426:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42b430:	mov    rax,r10
  42b433:	add    rdi,0x20
  42b437:	imul   rax,QWORD PTR [rdi-0x20]
  42b43c:	imul   rdx,QWORD PTR [rdi-0x10],0x62992fc1
  42b444:	add    r9,rax
  42b447:	mov    rax,r11
  42b44a:	imul   rax,QWORD PTR [rdi-0x18]
  42b44f:	add    rdx,r13
  42b452:	rorx   r9,r9,0x1d
  42b458:	add    r9,r13
  42b45b:	rorx   rdx,rdx,0x1d
  42b461:	lea    r13,[rdx+r9*1]
  42b465:	add    rsi,rax
  42b468:	imul   rax,QWORD PTR [rdi-0x8],0x30bc5b29
  42b470:	rorx   rsi,rsi,0x1d
  42b476:	add    rsi,r12
  42b479:	add    rax,r12
  42b47c:	cmp    rbx,rdi
  42b47f:	rorx   rax,rax,0x1d
  42b485:	lea    r12,[rax+rsi*1]
  42b489:	jae    42b430 <cmetrohash64_2@@Base+0x50>
  42b48b:	lea    rdx,[r9+r12*1]
  42b48f:	imul   rdx,r10
  42b493:	add    rdx,rsi
  42b496:	rorx   rdx,rdx,0x1e
  42b49c:	imul   rdx,r11
  42b4a0:	xor    rdx,r13
  42b4a3:	lea    rax,[rsi+rdx*1]
  42b4a7:	lea    rbx,[r9+rdx*1]
  42b4ab:	imul   rax,r11
  42b4af:	imul   rbx,r10
  42b4b3:	add    rax,r9
  42b4b6:	xor    r9,rsi
  42b4b9:	rorx   rax,rax,0x1e
  42b4bf:	imul   rax,r10
  42b4c3:	xor    rax,r12
  42b4c6:	add    rbx,rax
  42b4c9:	add    rsi,rax
  42b4cc:	rorx   rbx,rbx,0x1e
  42b4d2:	imul   rbx,r11
  42b4d6:	imul   r11,rsi
  42b4da:	xor    r9,rbx
  42b4dd:	add    r11,rdx
  42b4e0:	rorx   r11,r11,0x1e
  42b4e6:	imul   r10,r11
  42b4ea:	xor    r10,r9
  42b4ed:	add    r8,r10
  42b4f0:	mov    rax,rbp
  42b4f3:	sub    rax,rdi
  42b4f6:	cmp    rax,0xf
  42b4fa:	jle    42b560 <cmetrohash64_2@@Base+0x180>
  42b4fc:	imul   rsi,QWORD PTR [rdi],0x62992fc1
  42b503:	imul   rdx,QWORD PTR [rdi+0x8],0x62992fc1
  42b50b:	add    rdi,0x10
  42b50f:	add    rsi,r8
  42b512:	rorx   rsi,rsi,0x1d
  42b518:	add    rdx,r8
  42b51b:	imul   rsi,rsi,0x30bc5b29
  42b522:	rorx   rdx,rdx,0x1d
  42b528:	imul   rax,rdx,0x30bc5b29
  42b52f:	mov    edx,0xd6d018f5
  42b534:	imul   rdx,rsi
  42b538:	imul   r9,rax,0x30bc5b29
  42b53f:	rorx   rdx,rdx,0x22
  42b545:	add    rdx,rax
  42b548:	rorx   r9,r9,0x22
  42b54e:	xor    rsi,rdx
  42b551:	add    rsi,r9
  42b554:	xor    rax,rsi
  42b557:	add    r8,rax
  42b55a:	mov    rax,rbp
  42b55d:	sub    rax,rdi
  42b560:	cmp    rax,0x7
  42b564:	jle    42b58c <cmetrohash64_2@@Base+0x1ac>
  42b566:	imul   rax,QWORD PTR [rdi],0x30bc5b29
  42b56d:	mov    edx,0xa2aa033b
  42b572:	add    rdi,0x8
  42b576:	add    rax,r8
  42b579:	rorx   r8,rax,0x24
  42b57f:	imul   r8,rdx
  42b583:	xor    r8,rax
  42b586:	mov    rax,rbp
  42b589:	sub    rax,rdi
  42b58c:	cmp    rax,0x3
  42b590:	jle    42b5ba <cmetrohash64_2@@Base+0x1da>
  42b592:	mov    eax,DWORD PTR [rdi]
  42b594:	mov    edx,0xa2aa033b
  42b599:	add    rdi,0x4
  42b59d:	imul   rax,rax,0x30bc5b29
  42b5a4:	add    rax,r8
  42b5a7:	rorx   r8,rax,0xf
  42b5ad:	imul   r8,rdx
  42b5b1:	xor    r8,rax
  42b5b4:	mov    rax,rbp
  42b5b7:	sub    rax,rdi
  42b5ba:	cmp    rax,0x1
  42b5be:	jle    42b5e9 <cmetrohash64_2@@Base+0x209>
  42b5c0:	movzx  eax,WORD PTR [rdi]
  42b5c3:	mov    edx,0xa2aa033b
  42b5c8:	add    rdi,0x2
  42b5cc:	imul   rax,rax,0x30bc5b29
  42b5d3:	add    rax,r8
  42b5d6:	rorx   r8,rax,0xf
  42b5dc:	imul   r8,rdx
  42b5e0:	xor    r8,rax
  42b5e3:	mov    rax,rbp
  42b5e6:	sub    rax,rdi
  42b5e9:	test   rax,rax
  42b5ec:	jle    42b60d <cmetrohash64_2@@Base+0x22d>
  42b5ee:	movzx  eax,BYTE PTR [rdi]
  42b5f1:	mov    edx,0xa2aa033b
  42b5f6:	imul   rax,rax,0x30bc5b29
  42b5fd:	add    rax,r8
  42b600:	rorx   r8,rax,0x17
  42b606:	imul   r8,rdx
  42b60a:	xor    r8,rax
  42b60d:	rorx   rax,r8,0x1c
  42b613:	xor    r8,rax
  42b616:	mov    eax,0xd6d018f5
  42b61b:	imul   r8,rax
  42b61f:	pop    rbx
  42b620:	pop    rbp
  42b621:	pop    r12
  42b623:	rorx   rax,r8,0x1d
  42b629:	xor    r8,rax
  42b62c:	mov    QWORD PTR [rcx],r8
  42b62f:	pop    r13
  42b631:	ret    
  42b632:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42b63c:	nop    DWORD PTR [rax+0x0]
  42b640:	push   rbx
  42b641:	mov    rbx,rdi
  42b644:	mov    rdi,QWORD PTR [rdi]
  42b647:	test   rdi,rdi
  42b64a:	je     42b651 <cmetrohash64_2@@Base+0x271>
  42b64c:	call   405040 <free@plt>
  42b651:	mov    QWORD PTR [rbx],0x0
  42b658:	mov    QWORD PTR [rbx+0x8],0x0
  42b660:	mov    QWORD PTR [rbx+0x10],0x0
  42b668:	mov    QWORD PTR [rbx+0x18],0x0
  42b670:	pop    rbx
  42b671:	ret    
  42b672:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  42b67d:	nop    DWORD PTR [rax]
  42b680:	push   r15
  42b682:	push   r14
  42b684:	push   r13
  42b686:	push   r12
  42b688:	push   rbp
  42b689:	push   rbx
  42b68a:	sub    rsp,0x38
  42b68e:	mov    r13,QWORD PTR [rdi]
  42b691:	mov    rcx,QWORD PTR fs:0x28
  42b69a:	mov    QWORD PTR [rsp+0x28],rcx
  42b69f:	xor    ecx,ecx
  42b6a1:	mov    QWORD PTR [rsp+0x10],rdi
  42b6a6:	mov    QWORD PTR [rsp+0x8],rsi
  42b6ab:	test   r13,r13
  42b6ae:	je     42b750 <cmetrohash64_2@@Base+0x370>
  42b6b4:	mov    rax,QWORD PTR [rsp+0x10]
  42b6b9:	mov    rdi,QWORD PTR [rsp+0x8]
  42b6be:	mov    r14,rdx
  42b6c1:	lea    rcx,[rsp+0x20]
  42b6c6:	mov    edx,0x2f693b52
  42b6cb:	mov    rsi,r14
  42b6ce:	mov    rax,QWORD PTR [rax+0x18]
  42b6d2:	mov    QWORD PTR [rsp+0x18],rax
  42b6d7:	lea    r15,[rax-0x1]
  42b6db:	call   42b180 <cmetrohash64_1@@Base>
  42b6e0:	mov    ebp,DWORD PTR [rsp+0x20]
  42b6e4:	mov    rax,r15
  42b6e7:	and    rax,rbp
  42b6ea:	lea    r12,[r13+rax*8+0x0]
  42b6ef:	mov    rbx,QWORD PTR [r12]
  42b6f3:	test   rbx,rbx
  42b6f6:	je     42b750 <cmetrohash64_2@@Base+0x370>
  42b6f8:	add    rbp,0x1
  42b6fc:	jmp    42b718 <cmetrohash64_2@@Base+0x338>
  42b6fe:	xchg   ax,ax
  42b700:	mov    rax,rbp
  42b703:	add    rbp,0x1
  42b707:	and    rax,r15
  42b70a:	lea    r12,[r13+rax*8+0x0]
  42b70f:	mov    rbx,QWORD PTR [r12]
  42b713:	test   rbx,rbx
  42b716:	je     42b750 <cmetrohash64_2@@Base+0x370>
  42b718:	cmp    rbx,0x2
  42b71c:	je     42b700 <cmetrohash64_2@@Base+0x320>
  42b71e:	movsxd rax,DWORD PTR [rbx+0x10]
  42b722:	cmp    r14,rax
  42b725:	jne    42b700 <cmetrohash64_2@@Base+0x320>
  42b727:	mov    rsi,QWORD PTR [rbx+0x8]
  42b72b:	mov    rdi,QWORD PTR [rsp+0x8]
  42b730:	mov    rdx,r14
  42b733:	call   405130 <memcmp@plt>
  42b738:	test   eax,eax
  42b73a:	jne    42b700 <cmetrohash64_2@@Base+0x320>
  42b73c:	mov    rax,QWORD PTR [rsp+0x10]
  42b741:	mov    QWORD PTR [r12],0x2
  42b749:	sub    QWORD PTR [rax+0x10],0x1
  42b74e:	jmp    42b752 <cmetrohash64_2@@Base+0x372>
  42b750:	xor    ebx,ebx
  42b752:	mov    rcx,QWORD PTR [rsp+0x28]
  42b757:	xor    rcx,QWORD PTR fs:0x28
  42b760:	mov    rax,rbx
  42b763:	jne    42b774 <cmetrohash64_2@@Base+0x394>
  42b765:	add    rsp,0x38
  42b769:	pop    rbx
  42b76a:	pop    rbp
  42b76b:	pop    r12
  42b76d:	pop    r13
  42b76f:	pop    r14
  42b771:	pop    r15
  42b773:	ret    
  42b774:	call   4050d0 <__stack_chk_fail@plt>
  42b779:	nop    DWORD PTR [rax+0x0]
  42b780:	push   r13
  42b782:	push   r12
  42b784:	push   rbp
  42b785:	push   rbx
  42b786:	mov    rbp,rdi
  42b789:	mov    ebx,0x4
  42b78e:	sub    rsp,0x38
  42b792:	mov    r12,QWORD PTR [rdi]
  42b795:	mov    rax,QWORD PTR fs:0x28
  42b79e:	mov    QWORD PTR [rsp+0x28],rax
  42b7a3:	xor    eax,eax
  42b7a5:	cmp    QWORD PTR [rdi+0x10],rsi
  42b7a9:	cmovae rsi,QWORD PTR [rdi+0x10]
  42b7ae:	cmp    rsi,0x2
  42b7b2:	jbe    42b7cb <cmetrohash64_2@@Base+0x3eb>
  42b7b4:	nop    DWORD PTR [rax+0x0]
  42b7b8:	add    rbx,rbx
  42b7bb:	imul   rax,rbx,0xb3
  42b7c2:	shr    rax,0x8
  42b7c6:	cmp    rsi,rax
  42b7c9:	ja     42b7b8 <cmetrohash64_2@@Base+0x3d8>
  42b7cb:	mov    esi,0x8
  42b7d0:	mov    rdi,rbx
  42b7d3:	call   405140 <calloc@plt>
  42b7d8:	test   rax,rax
  42b7db:	mov    QWORD PTR [rsp],rax
  42b7df:	je     42b887 <cmetrohash64_2@@Base+0x4a7>
  42b7e5:	mov    QWORD PTR [rsp+0x18],rbx
  42b7ea:	xor    ebx,ebx
  42b7ec:	cmp    QWORD PTR [rbp+0x18],0x0
  42b7f1:	mov    QWORD PTR [rsp+0x8],0x0
  42b7fa:	mov    QWORD PTR [rsp+0x10],0x0
  42b803:	mov    r13,rsp
  42b806:	je     42b83f <cmetrohash64_2@@Base+0x45f>
  42b808:	nop    DWORD PTR [rax+rax*1+0x0]
  42b810:	mov    rcx,QWORD PTR [r12+rbx*8]
  42b814:	test   rcx,rcx
  42b817:	je     42b835 <cmetrohash64_2@@Base+0x455>
  42b819:	cmp    rcx,0x2
  42b81d:	je     42b835 <cmetrohash64_2@@Base+0x455>
  42b81f:	movsxd rdx,DWORD PTR [rcx+0x10]
  42b823:	mov    rsi,QWORD PTR [rcx+0x8]
  42b827:	mov    r8d,0x3
  42b82d:	mov    rdi,r13
  42b830:	call   42b8a0 <cmetrohash64_2@@Base+0x4c0>
  42b835:	add    rbx,0x1
  42b839:	cmp    QWORD PTR [rbp+0x18],rbx
  42b83d:	ja     42b810 <cmetrohash64_2@@Base+0x430>
  42b83f:	mov    rdi,rbp
  42b842:	call   42b640 <cmetrohash64_2@@Base+0x260>
  42b847:	mov    rax,QWORD PTR [rsp]
  42b84b:	mov    QWORD PTR [rbp+0x0],rax
  42b84f:	mov    rax,QWORD PTR [rsp+0x8]
  42b854:	mov    QWORD PTR [rbp+0x8],rax
  42b858:	mov    rax,QWORD PTR [rsp+0x10]
  42b85d:	mov    QWORD PTR [rbp+0x10],rax
  42b861:	mov    rax,QWORD PTR [rsp+0x18]
  42b866:	mov    QWORD PTR [rbp+0x18],rax
  42b86a:	xor    eax,eax
  42b86c:	mov    rdi,QWORD PTR [rsp+0x28]
  42b871:	xor    rdi,QWORD PTR fs:0x28
  42b87a:	jne    42b88e <cmetrohash64_2@@Base+0x4ae>
  42b87c:	add    rsp,0x38
  42b880:	pop    rbx
  42b881:	pop    rbp
  42b882:	pop    r12
  42b884:	pop    r13
  42b886:	ret    
  42b887:	mov    eax,0xffffffff
  42b88c:	jmp    42b86c <cmetrohash64_2@@Base+0x48c>
  42b88e:	call   4050d0 <__stack_chk_fail@plt>
  42b893:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  42b89e:	xchg   ax,ax
  42b8a0:	push   r15
  42b8a2:	push   r14
  42b8a4:	push   r13
  42b8a6:	push   r12
  42b8a8:	push   rbp
  42b8a9:	push   rbx
  42b8aa:	sub    rsp,0x48
  42b8ae:	mov    QWORD PTR [rsp+0x20],rdi
  42b8b3:	mov    QWORD PTR [rsp+0x10],rsi
  42b8b8:	mov    rdi,QWORD PTR fs:0x28
  42b8c1:	mov    QWORD PTR [rsp+0x38],rdi
  42b8c6:	xor    edi,edi
  42b8c8:	test   rcx,rcx
  42b8cb:	mov    QWORD PTR [rsp+0x18],rcx
  42b8d0:	mov    DWORD PTR [rsp+0x2c],r8d
  42b8d5:	je     42bb00 <cmetrohash64_2@@Base+0x720>
  42b8db:	cmp    QWORD PTR [rsp+0x18],0x2
  42b8e1:	je     42bae1 <cmetrohash64_2@@Base+0x701>
  42b8e7:	cmp    QWORD PTR [rsp+0x18],0x1
  42b8ed:	je     42bac2 <cmetrohash64_2@@Base+0x6e2>
  42b8f3:	mov    rbx,QWORD PTR [rsp+0x20]
  42b8f8:	mov    r14,rdx
  42b8fb:	mov    r8,QWORD PTR [rbx+0x18]
  42b8ff:	mov    rsi,QWORD PTR [rbx+0x10]
  42b903:	imul   rax,r8,0xb3
  42b90a:	shr    rax,0x8
  42b90e:	cmp    rsi,rax
  42b911:	jb     42b92a <cmetrohash64_2@@Base+0x54a>
  42b913:	add    rsi,rsi
  42b916:	mov    rdi,rbx
  42b919:	call   42b780 <cmetrohash64_2@@Base+0x3a0>
  42b91e:	test   eax,eax
  42b920:	jne    42ba94 <cmetrohash64_2@@Base+0x6b4>
  42b926:	mov    r8,QWORD PTR [rbx+0x18]
  42b92a:	mov    rax,QWORD PTR [rsp+0x20]
  42b92f:	mov    rdi,QWORD PTR [rsp+0x10]
  42b934:	lea    rcx,[rsp+0x30]
  42b939:	mov    edx,0x2f693b52
  42b93e:	mov    rsi,r14
  42b941:	lea    r12,[r8-0x1]
  42b945:	mov    r13,QWORD PTR [rax]
  42b948:	call   42b180 <cmetrohash64_1@@Base>
  42b94d:	mov    edi,DWORD PTR [rsp+0x2c]
  42b951:	mov    ebp,DWORD PTR [rsp+0x30]
  42b955:	mov    rax,r12
  42b958:	lea    edx,[rdi-0x2]
  42b95b:	and    rax,rbp
  42b95e:	cmp    edx,0x1
  42b961:	jbe    42ba42 <cmetrohash64_2@@Base+0x662>
  42b967:	lea    r15,[r13+rax*8+0x0]
  42b96c:	add    rbp,0x1
  42b970:	xor    ecx,ecx
  42b972:	mov    rbx,QWORD PTR [r15]
  42b975:	test   rbx,rbx
  42b978:	jne    42b99b <cmetrohash64_2@@Base+0x5bb>
  42b97a:	jmp    42ba3d <cmetrohash64_2@@Base+0x65d>
  42b97f:	nop
  42b980:	mov    rax,r12
  42b983:	and    rax,rbp
  42b986:	add    rbp,0x1
  42b98a:	lea    r15,[r13+rax*8+0x0]
  42b98f:	mov    rbx,QWORD PTR [r15]
  42b992:	test   rbx,rbx
  42b995:	je     42ba20 <cmetrohash64_2@@Base+0x640>
  42b99b:	cmp    rbx,0x2
  42b99f:	je     42ba00 <cmetrohash64_2@@Base+0x620>
  42b9a1:	movsxd rax,DWORD PTR [rbx+0x10]
  42b9a5:	cmp    r14,rax
  42b9a8:	jne    42b980 <cmetrohash64_2@@Base+0x5a0>
  42b9aa:	mov    rsi,QWORD PTR [rbx+0x8]
  42b9ae:	mov    rdi,QWORD PTR [rsp+0x10]
  42b9b3:	mov    rdx,r14
  42b9b6:	mov    QWORD PTR [rsp+0x8],rcx
  42b9bb:	call   405130 <memcmp@plt>
  42b9c0:	test   eax,eax
  42b9c2:	mov    rcx,QWORD PTR [rsp+0x8]
  42b9c7:	jne    42b980 <cmetrohash64_2@@Base+0x5a0>
  42b9c9:	mov    eax,DWORD PTR [rsp+0x2c]
  42b9cd:	test   eax,eax
  42b9cf:	je     42ba10 <cmetrohash64_2@@Base+0x630>
  42b9d1:	nop    DWORD PTR [rax+0x0]
  42b9d8:	mov    rdx,QWORD PTR [rsp+0x38]
  42b9dd:	xor    rdx,QWORD PTR fs:0x28
  42b9e6:	mov    rax,rbx
  42b9e9:	jne    42bb1f <cmetrohash64_2@@Base+0x73f>
  42b9ef:	add    rsp,0x48
  42b9f3:	pop    rbx
  42b9f4:	pop    rbp
  42b9f5:	pop    r12
  42b9f7:	pop    r13
  42b9f9:	pop    r14
  42b9fb:	pop    r15
  42b9fd:	ret    
  42b9fe:	xchg   ax,ax
  42ba00:	test   rcx,rcx
  42ba03:	cmove  rcx,r15
  42ba07:	jmp    42b980 <cmetrohash64_2@@Base+0x5a0>
  42ba0c:	nop    DWORD PTR [rax+0x0]
  42ba10:	mov    rax,QWORD PTR [rsp+0x18]
  42ba15:	mov    QWORD PTR [r15],rax
  42ba18:	jmp    42b9d8 <cmetrohash64_2@@Base+0x5f8>
  42ba1a:	nop    WORD PTR [rax+rax*1+0x0]
  42ba20:	test   rcx,rcx
  42ba23:	cmove  rcx,r15
  42ba27:	mov    rax,QWORD PTR [rsp+0x20]
  42ba2c:	xor    ebx,ebx
  42ba2e:	add    QWORD PTR [rax+0x10],0x1
  42ba33:	mov    rax,QWORD PTR [rsp+0x18]
  42ba38:	mov    QWORD PTR [rcx],rax
  42ba3b:	jmp    42b9d8 <cmetrohash64_2@@Base+0x5f8>
  42ba3d:	mov    rcx,r15
  42ba40:	jmp    42ba27 <cmetrohash64_2@@Base+0x647>
  42ba42:	lea    rdx,[r13+rax*8+0x0]
  42ba47:	mov    rdi,QWORD PTR [rsp+0x20]
  42ba4c:	mov    rax,QWORD PTR [rdx]
  42ba4f:	add    QWORD PTR [rdi+0x10],0x1
  42ba54:	test   rax,rax
  42ba57:	je     42ba85 <cmetrohash64_2@@Base+0x6a5>
  42ba59:	cmp    rax,0x2
  42ba5d:	je     42ba85 <cmetrohash64_2@@Base+0x6a5>
  42ba5f:	add    rbp,0x1
  42ba63:	jmp    42ba6e <cmetrohash64_2@@Base+0x68e>
  42ba65:	nop    DWORD PTR [rax]
  42ba68:	cmp    rax,0x2
  42ba6c:	je     42ba85 <cmetrohash64_2@@Base+0x6a5>
  42ba6e:	mov    rax,r12
  42ba71:	and    rax,rbp
  42ba74:	add    rbp,0x1
  42ba78:	lea    rdx,[r13+rax*8+0x0]
  42ba7d:	mov    rax,QWORD PTR [rdx]
  42ba80:	test   rax,rax
  42ba83:	jne    42ba68 <cmetrohash64_2@@Base+0x688>
  42ba85:	mov    rax,QWORD PTR [rsp+0x18]
  42ba8a:	xor    ebx,ebx
  42ba8c:	mov    QWORD PTR [rdx],rax
  42ba8f:	jmp    42b9d8 <cmetrohash64_2@@Base+0x5f8>
  42ba94:	mov    rax,QWORD PTR [rip+0x2554d]        # 450fe8 <stderr@GLIBC_2.2.5>
  42ba9b:	lea    rcx,[rip+0x1a77e]        # 446220 <_IO_stdin_used@@Base+0x19220>
  42baa2:	lea    rdx,[rip+0x1a7ed]        # 446296 <_IO_stdin_used@@Base+0x19296>
  42baa9:	mov    esi,0x1
  42baae:	mov    rdi,QWORD PTR [rax]
  42bab1:	xor    eax,eax
  42bab3:	call   405200 <__fprintf_chk@plt>
  42bab8:	mov    edi,0x1
  42babd:	call   4051e0 <exit@plt>
  42bac2:	lea    rcx,[rip+0x1e317]        # 449de0 <flatcc_builder_padding_base@@Base+0x200>
  42bac9:	lea    rsi,[rip+0x1a6e0]        # 4461b0 <_IO_stdin_used@@Base+0x191b0>
  42bad0:	lea    rdi,[rip+0x1a7aa]        # 446281 <_IO_stdin_used@@Base+0x19281>
  42bad7:	mov    edx,0x74
  42badc:	call   405100 <__assert_fail@plt>
  42bae1:	lea    rcx,[rip+0x1e2f8]        # 449de0 <flatcc_builder_padding_base@@Base+0x200>
  42bae8:	lea    rsi,[rip+0x1a6c1]        # 4461b0 <_IO_stdin_used@@Base+0x191b0>
  42baef:	lea    rdi,[rip+0x1a774]        # 44626a <_IO_stdin_used@@Base+0x1926a>
  42baf6:	mov    edx,0x73
  42bafb:	call   405100 <__assert_fail@plt>
  42bb00:	lea    rcx,[rip+0x1e2d9]        # 449de0 <flatcc_builder_padding_base@@Base+0x200>
  42bb07:	lea    rsi,[rip+0x1a6a2]        # 4461b0 <_IO_stdin_used@@Base+0x191b0>
  42bb0e:	lea    rdi,[rip+0x1a73e]        # 446253 <_IO_stdin_used@@Base+0x19253>
  42bb15:	mov    edx,0x72
  42bb1a:	call   405100 <__assert_fail@plt>
  42bb1f:	call   4050d0 <__stack_chk_fail@plt>
  42bb24:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  42bb2f:	nop
  42bb30:	push   r15
  42bb32:	push   r14
  42bb34:	push   r13
  42bb36:	push   r12
  42bb38:	push   rbp
  42bb39:	push   rbx
  42bb3a:	sub    rsp,0x18
  42bb3e:	mov    rax,QWORD PTR fs:0x28
  42bb47:	mov    QWORD PTR [rsp+0x8],rax
  42bb4c:	xor    eax,eax
  42bb4e:	test   rdi,rdi
  42bb51:	je     42bbf0 <cmetrohash64_2@@Base+0x810>
  42bb57:	mov    r12,rdx
  42bb5a:	mov    r14,rcx
  42bb5d:	mov    r13,QWORD PTR [rsi]
  42bb60:	mov    r15,rdi
  42bb63:	mov    rcx,rsp
  42bb66:	mov    edx,0x2f693b52
  42bb6b:	mov    rsi,r14
  42bb6e:	mov    rdi,r12
  42bb71:	call   42b180 <cmetrohash64_1@@Base>
  42bb76:	mov    ebp,DWORD PTR [rsp]
  42bb79:	sub    r13,0x1
  42bb7d:	mov    rax,r13
  42bb80:	and    rax,rbp
  42bb83:	mov    rbx,QWORD PTR [r15+rax*8]
  42bb87:	test   rbx,rbx
  42bb8a:	je     42bbf0 <cmetrohash64_2@@Base+0x810>
  42bb8c:	add    rbp,0x1
  42bb90:	jmp    42bbab <cmetrohash64_2@@Base+0x7cb>
  42bb92:	nop    WORD PTR [rax+rax*1+0x0]
  42bb98:	mov    rax,r13
  42bb9b:	and    rax,rbp
  42bb9e:	add    rbp,0x1
  42bba2:	mov    rbx,QWORD PTR [r15+rax*8]
  42bba6:	test   rbx,rbx
  42bba9:	je     42bbf0 <cmetrohash64_2@@Base+0x810>
  42bbab:	cmp    rbx,0x2
  42bbaf:	je     42bb98 <cmetrohash64_2@@Base+0x7b8>
  42bbb1:	movsxd rax,DWORD PTR [rbx+0x10]
  42bbb5:	cmp    r14,rax
  42bbb8:	jne    42bb98 <cmetrohash64_2@@Base+0x7b8>
  42bbba:	mov    rsi,QWORD PTR [rbx+0x8]
  42bbbe:	mov    rdx,r14
  42bbc1:	mov    rdi,r12
  42bbc4:	call   405130 <memcmp@plt>
  42bbc9:	test   eax,eax
  42bbcb:	jne    42bb98 <cmetrohash64_2@@Base+0x7b8>
  42bbcd:	mov    rcx,QWORD PTR [rsp+0x8]
  42bbd2:	xor    rcx,QWORD PTR fs:0x28
  42bbdb:	mov    rax,rbx
  42bbde:	jne    42bbf4 <cmetrohash64_2@@Base+0x814>
  42bbe0:	add    rsp,0x18
  42bbe4:	pop    rbx
  42bbe5:	pop    rbp
  42bbe6:	pop    r12
  42bbe8:	pop    r13
  42bbea:	pop    r14
  42bbec:	pop    r15
  42bbee:	ret    
  42bbef:	nop
  42bbf0:	xor    ebx,ebx
  42bbf2:	jmp    42bbcd <cmetrohash64_2@@Base+0x7ed>
  42bbf4:	call   4050d0 <__stack_chk_fail@plt>
  42bbf9:	nop    DWORD PTR [rax+0x0]

000000000042bc00 <fb_name_table_clear@@Base>:
  42bc00:	jmp    42b640 <cmetrohash64_2@@Base+0x260>
  42bc05:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

000000000042bc10 <fb_name_table_destroy@@Base>:
  42bc10:	test   rsi,rsi
  42bc13:	push   r14
  42bc15:	push   r13
  42bc17:	push   r12
  42bc19:	push   rbp
  42bc1a:	mov    rbp,rdi
  42bc1d:	push   rbx
  42bc1e:	je     42bc57 <fb_name_table_destroy@@Base+0x47>
  42bc20:	cmp    QWORD PTR [rdi+0x18],0x0
  42bc25:	mov    r12,QWORD PTR [rdi]
  42bc28:	je     42bc57 <fb_name_table_destroy@@Base+0x47>
  42bc2a:	mov    r13,rsi
  42bc2d:	mov    r14,rdx
  42bc30:	xor    ebx,ebx
  42bc32:	nop    WORD PTR [rax+rax*1+0x0]
  42bc38:	mov    rsi,QWORD PTR [r12+rbx*8]
  42bc3c:	test   rsi,rsi
  42bc3f:	je     42bc4d <fb_name_table_destroy@@Base+0x3d>
  42bc41:	cmp    rsi,0x2
  42bc45:	je     42bc4d <fb_name_table_destroy@@Base+0x3d>
  42bc47:	mov    rdi,r14
  42bc4a:	call   r13
  42bc4d:	add    rbx,0x1
  42bc51:	cmp    rbx,QWORD PTR [rbp+0x18]
  42bc55:	jb     42bc38 <fb_name_table_destroy@@Base+0x28>
  42bc57:	pop    rbx
  42bc58:	mov    rdi,rbp
  42bc5b:	pop    rbp
  42bc5c:	pop    r12
  42bc5e:	pop    r13
  42bc60:	pop    r14
  42bc62:	jmp    42b640 <cmetrohash64_2@@Base+0x260>
  42bc67:	nop    WORD PTR [rax+rax*1+0x0]

000000000042bc70 <fb_name_table_init@@Base>:
  42bc70:	push   rbp
  42bc71:	push   rbx
  42bc72:	mov    rbp,rdi
  42bc75:	mov    ebx,0x4
  42bc7a:	sub    rsp,0x8
  42bc7e:	cmp    rsi,0x2
  42bc82:	jbe    42bc9b <fb_name_table_init@@Base+0x2b>
  42bc84:	nop    DWORD PTR [rax+0x0]
  42bc88:	add    rbx,rbx
  42bc8b:	imul   rax,rbx,0xb3
  42bc92:	shr    rax,0x8
  42bc96:	cmp    rsi,rax
  42bc99:	ja     42bc88 <fb_name_table_init@@Base+0x18>
  42bc9b:	mov    esi,0x8
  42bca0:	mov    rdi,rbx
  42bca3:	call   405140 <calloc@plt>
  42bca8:	test   rax,rax
  42bcab:	mov    QWORD PTR [rbp+0x0],rax
  42bcaf:	je     42bcce <fb_name_table_init@@Base+0x5e>
  42bcb1:	mov    QWORD PTR [rbp+0x8],0x0
  42bcb9:	mov    QWORD PTR [rbp+0x18],rbx
  42bcbd:	xor    eax,eax
  42bcbf:	mov    QWORD PTR [rbp+0x10],0x0
  42bcc7:	add    rsp,0x8
  42bccb:	pop    rbx
  42bccc:	pop    rbp
  42bccd:	ret    
  42bcce:	mov    eax,0xffffffff
  42bcd3:	jmp    42bcc7 <fb_name_table_init@@Base+0x57>
  42bcd5:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

000000000042bce0 <fb_name_table_resize@@Base>:
  42bce0:	jmp    42b780 <cmetrohash64_2@@Base+0x3a0>
  42bce5:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

000000000042bcf0 <fb_name_table_insert@@Base>:
  42bcf0:	jmp    42b8a0 <cmetrohash64_2@@Base+0x4c0>
  42bcf5:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

000000000042bd00 <fb_name_table_insert_item@@Base>:
  42bd00:	mov    r8d,edx
  42bd03:	movsxd rdx,DWORD PTR [rsi+0x10]
  42bd07:	mov    rcx,rsi
  42bd0a:	mov    rsi,QWORD PTR [rsi+0x8]
  42bd0e:	jmp    42b8a0 <cmetrohash64_2@@Base+0x4c0>
  42bd13:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  42bd1e:	xchg   ax,ax

000000000042bd20 <fb_name_table_find@@Base>:
  42bd20:	mov    rax,rsi
  42bd23:	lea    rsi,[rdi+0x18]
  42bd27:	mov    rdi,QWORD PTR [rdi]
  42bd2a:	mov    rcx,rdx
  42bd2d:	mov    rdx,rax
  42bd30:	jmp    42bb30 <cmetrohash64_2@@Base+0x750>
  42bd35:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

000000000042bd40 <fb_name_table_find_item@@Base>:
  42bd40:	movsxd rcx,DWORD PTR [rsi+0x10]
  42bd44:	mov    rdx,QWORD PTR [rsi+0x8]
  42bd48:	lea    rsi,[rdi+0x18]
  42bd4c:	mov    rdi,QWORD PTR [rdi]
  42bd4f:	jmp    42bb30 <cmetrohash64_2@@Base+0x750>
  42bd54:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  42bd5f:	nop

000000000042bd60 <fb_name_table_remove@@Base>:
  42bd60:	jmp    42b680 <cmetrohash64_2@@Base+0x2a0>
  42bd65:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

000000000042bd70 <fb_name_table_remove_item@@Base>:
  42bd70:	movsxd rdx,DWORD PTR [rsi+0x10]
  42bd74:	mov    rsi,QWORD PTR [rsi+0x8]
  42bd78:	jmp    42b680 <cmetrohash64_2@@Base+0x2a0>
  42bd7d:	nop    DWORD PTR [rax]

000000000042bd80 <fb_name_table_visit@@Base>:
  42bd80:	push   r14
  42bd82:	push   r13
  42bd84:	push   r12
  42bd86:	push   rbp
  42bd87:	push   rbx
  42bd88:	cmp    QWORD PTR [rdi+0x18],0x0
  42bd8d:	mov    r12,QWORD PTR [rdi]
  42bd90:	je     42bdbf <fb_name_table_visit@@Base+0x3f>
  42bd92:	mov    rbp,rdi
  42bd95:	mov    r14,rsi
  42bd98:	mov    r13,rdx
  42bd9b:	xor    ebx,ebx
  42bd9d:	nop    DWORD PTR [rax]
  42bda0:	mov    rsi,QWORD PTR [r12+rbx*8]
  42bda4:	test   rsi,rsi
  42bda7:	je     42bdb5 <fb_name_table_visit@@Base+0x35>
  42bda9:	cmp    rsi,0x2
  42bdad:	je     42bdb5 <fb_name_table_visit@@Base+0x35>
  42bdaf:	mov    rdi,r13
  42bdb2:	call   r14
  42bdb5:	add    rbx,0x1
  42bdb9:	cmp    rbx,QWORD PTR [rbp+0x18]
  42bdbd:	jb     42bda0 <fb_name_table_visit@@Base+0x20>
  42bdbf:	pop    rbx
  42bdc0:	pop    rbp
  42bdc1:	pop    r12
  42bdc3:	pop    r13
  42bdc5:	pop    r14
  42bdc7:	ret    
  42bdc8:	nop    DWORD PTR [rax+rax*1+0x0]
  42bdd0:	push   rbx
  42bdd1:	mov    rbx,rdi
  42bdd4:	mov    rdi,QWORD PTR [rdi]
  42bdd7:	test   rdi,rdi
  42bdda:	je     42bde1 <fb_name_table_visit@@Base+0x61>
  42bddc:	call   405040 <free@plt>
  42bde1:	mov    QWORD PTR [rbx],0x0
  42bde8:	mov    QWORD PTR [rbx+0x8],0x0
  42bdf0:	mov    QWORD PTR [rbx+0x10],0x0
  42bdf8:	mov    QWORD PTR [rbx+0x18],0x0
  42be00:	pop    rbx
  42be01:	ret    
  42be02:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  42be0d:	nop    DWORD PTR [rax]
  42be10:	movzx  eax,WORD PTR [rdi+0x10]
  42be14:	cmp    ax,0x5
  42be18:	je     42be68 <fb_name_table_visit@@Base+0xe8>
  42be1a:	cmp    ax,0x6
  42be1e:	je     42be48 <fb_name_table_visit@@Base+0xc8>
  42be20:	cmp    ax,0x4
  42be24:	je     42be30 <fb_name_table_visit@@Base+0xb0>
  42be26:	xor    eax,eax
  42be28:	ret    
  42be29:	nop    DWORD PTR [rax+0x0]
  42be30:	mov    rax,QWORD PTR [rdi]
  42be33:	mov    edx,0x9e3779b1
  42be38:	xor    rax,0x2f693b56
  42be3e:	imul   rax,rdx
  42be42:	ret    
  42be43:	nop    DWORD PTR [rax+rax*1+0x0]
  42be48:	movzx  eax,BYTE PTR [rdi]
  42be4b:	mov    edx,0x9e3779b1
  42be50:	xor    eax,0x6
  42be53:	movzx  eax,al
  42be56:	xor    rax,0x2f693b52
  42be5c:	imul   rax,rdx
  42be60:	ret    
  42be61:	nop    DWORD PTR [rax+0x0]
  42be68:	mov    rax,QWORD PTR [rdi]
  42be6b:	mov    edx,0x9e3779b1
  42be70:	xor    rax,0x2f693b57
  42be76:	imul   rax,rdx
  42be7a:	ret    
  42be7b:	nop    DWORD PTR [rax+rax*1+0x0]
  42be80:	test   rdi,rdi
  42be83:	je     42bf15 <fb_name_table_visit@@Base+0x195>
  42be89:	mov    r10,QWORD PTR [rsi]
  42be8c:	mov    r8,rdi
  42be8f:	mov    rdi,rdx
  42be92:	mov    r9,rdx
  42be95:	sub    r10,0x1
  42be99:	call   42be10 <fb_name_table_visit@@Base+0x90>
  42be9e:	mov    rdx,r10
  42bea1:	and    rdx,rax
  42bea4:	mov    rcx,QWORD PTR [r8+rdx*8]
  42bea8:	test   rcx,rcx
  42beab:	je     42befd <fb_name_table_visit@@Base+0x17d>
  42bead:	add    rax,0x1
  42beb1:	jmp    42becb <fb_name_table_visit@@Base+0x14b>
  42beb3:	nop    DWORD PTR [rax+rax*1+0x0]
  42beb8:	mov    rcx,r10
  42bebb:	and    rcx,rax
  42bebe:	add    rax,0x1
  42bec2:	mov    rcx,QWORD PTR [r8+rcx*8]
  42bec6:	test   rcx,rcx
  42bec9:	je     42befd <fb_name_table_visit@@Base+0x17d>
  42becb:	cmp    rcx,0x2
  42becf:	je     42beb8 <fb_name_table_visit@@Base+0x138>
  42bed1:	movzx  esi,WORD PTR [r9+0x10]
  42bed6:	cmp    si,WORD PTR [rcx+0x10]
  42beda:	jne    42beb8 <fb_name_table_visit@@Base+0x138>
  42bedc:	cmp    si,0x5
  42bee0:	je     42beee <fb_name_table_visit@@Base+0x16e>
  42bee2:	cmp    si,0x6
  42bee6:	je     42bf08 <fb_name_table_visit@@Base+0x188>
  42bee8:	cmp    si,0x4
  42beec:	jne    42beb8 <fb_name_table_visit@@Base+0x138>
  42beee:	xor    edx,edx
  42bef0:	mov    rdi,QWORD PTR [rcx]
  42bef3:	cmp    QWORD PTR [r9],rdi
  42bef6:	sete   dl
  42bef9:	test   edx,edx
  42befb:	je     42beb8 <fb_name_table_visit@@Base+0x138>
  42befd:	mov    rax,rcx
  42bf00:	ret    
  42bf01:	nop    DWORD PTR [rax+0x0]
  42bf08:	movzx  edi,BYTE PTR [rcx]
  42bf0b:	xor    edx,edx
  42bf0d:	cmp    BYTE PTR [r9],dil
  42bf10:	sete   dl
  42bf13:	jmp    42bef9 <fb_name_table_visit@@Base+0x179>
  42bf15:	xor    ecx,ecx
  42bf17:	jmp    42befd <fb_name_table_visit@@Base+0x17d>
  42bf19:	nop    DWORD PTR [rax+0x0]
  42bf20:	push   r15
  42bf22:	push   r14
  42bf24:	push   rbp
  42bf25:	push   rbx
  42bf26:	mov    rbx,QWORD PTR [rdi]
  42bf29:	test   rbx,rbx
  42bf2c:	je     42bfcd <fb_name_table_visit@@Base+0x24d>
  42bf32:	mov    rax,QWORD PTR [rdi+0x18]
  42bf36:	mov    rbp,rdi
  42bf39:	mov    rdi,rsi
  42bf3c:	mov    r14,rsi
  42bf3f:	lea    r15,[rax-0x1]
  42bf43:	call   42be10 <fb_name_table_visit@@Base+0x90>
  42bf48:	mov    rdx,r15
  42bf4b:	and    rdx,rax
  42bf4e:	lea    r8,[rbx+rdx*8]
  42bf52:	mov    rdx,QWORD PTR [r8]
  42bf55:	test   rdx,rdx
  42bf58:	je     42bfb4 <fb_name_table_visit@@Base+0x234>
  42bf5a:	add    rax,0x1
  42bf5e:	jmp    42bf76 <fb_name_table_visit@@Base+0x1f6>
  42bf60:	mov    rdx,r15
  42bf63:	and    rdx,rax
  42bf66:	add    rax,0x1
  42bf6a:	lea    r8,[rbx+rdx*8]
  42bf6e:	mov    rdx,QWORD PTR [r8]
  42bf71:	test   rdx,rdx
  42bf74:	je     42bfb4 <fb_name_table_visit@@Base+0x234>
  42bf76:	cmp    rdx,0x2
  42bf7a:	je     42bf60 <fb_name_table_visit@@Base+0x1e0>
  42bf7c:	movzx  ecx,WORD PTR [r14+0x10]
  42bf81:	cmp    cx,WORD PTR [rdx+0x10]
  42bf85:	jne    42bf60 <fb_name_table_visit@@Base+0x1e0>
  42bf87:	cmp    cx,0x5
  42bf8b:	je     42bf99 <fb_name_table_visit@@Base+0x219>
  42bf8d:	cmp    cx,0x6
  42bf91:	je     42bfc0 <fb_name_table_visit@@Base+0x240>
  42bf93:	cmp    cx,0x4
  42bf97:	jne    42bf60 <fb_name_table_visit@@Base+0x1e0>
  42bf99:	xor    ecx,ecx
  42bf9b:	mov    rsi,QWORD PTR [rdx]
  42bf9e:	cmp    QWORD PTR [r14],rsi
  42bfa1:	sete   cl
  42bfa4:	test   ecx,ecx
  42bfa6:	je     42bf60 <fb_name_table_visit@@Base+0x1e0>
  42bfa8:	mov    QWORD PTR [r8],0x2
  42bfaf:	sub    QWORD PTR [rbp+0x10],0x1
  42bfb4:	pop    rbx
  42bfb5:	mov    rax,rdx
  42bfb8:	pop    rbp
  42bfb9:	pop    r14
  42bfbb:	pop    r15
  42bfbd:	ret    
  42bfbe:	xchg   ax,ax
  42bfc0:	movzx  edi,BYTE PTR [rdx]
  42bfc3:	xor    ecx,ecx
  42bfc5:	cmp    BYTE PTR [r14],dil
  42bfc8:	sete   cl
  42bfcb:	jmp    42bfa4 <fb_name_table_visit@@Base+0x224>
  42bfcd:	xor    edx,edx
  42bfcf:	jmp    42bfb4 <fb_name_table_visit@@Base+0x234>
  42bfd1:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  42bfdc:	nop    DWORD PTR [rax+0x0]
  42bfe0:	push   r13
  42bfe2:	push   r12
  42bfe4:	push   rbp
  42bfe5:	push   rbx
  42bfe6:	sub    rsp,0x8
  42bfea:	test   rdx,rdx
  42bfed:	je     42c1f3 <fb_name_table_visit@@Base+0x473>
  42bff3:	cmp    rdx,0x2
  42bff7:	mov    r13,rdx
  42bffa:	je     42c1a6 <fb_name_table_visit@@Base+0x426>
  42c000:	cmp    rdx,0x1
  42c004:	je     42c212 <fb_name_table_visit@@Base+0x492>
  42c00a:	mov    ebx,ecx
  42c00c:	mov    rcx,QWORD PTR [rdi+0x18]
  42c010:	mov    rbp,rsi
  42c013:	mov    rsi,QWORD PTR [rdi+0x10]
  42c017:	mov    r12,rdi
  42c01a:	imul   rax,rcx,0xb3
  42c021:	shr    rax,0x8
  42c025:	cmp    rsi,rax
  42c028:	jae    42c140 <fb_name_table_visit@@Base+0x3c0>
  42c02e:	mov    rdi,rbp
  42c031:	sub    rcx,0x1
  42c035:	mov    r9,QWORD PTR [r12]
  42c039:	call   42be10 <fb_name_table_visit@@Base+0x90>
  42c03e:	lea    esi,[rbx-0x2]
  42c041:	mov    rdx,rcx
  42c044:	and    rdx,rax
  42c047:	cmp    esi,0x1
  42c04a:	jbe    42c15b <fb_name_table_visit@@Base+0x3db>
  42c050:	lea    rdi,[r9+rdx*8]
  42c054:	add    rax,0x1
  42c058:	xor    edx,edx
  42c05a:	mov    rsi,QWORD PTR [rdi]
  42c05d:	test   rsi,rsi
  42c060:	jne    42c08a <fb_name_table_visit@@Base+0x30a>
  42c062:	jmp    42c156 <fb_name_table_visit@@Base+0x3d6>
  42c067:	nop    WORD PTR [rax+rax*1+0x0]
  42c070:	mov    rsi,rcx
  42c073:	and    rsi,rax
  42c076:	add    rax,0x1
  42c07a:	lea    rdi,[r9+rsi*8]
  42c07e:	mov    rsi,QWORD PTR [rdi]
  42c081:	test   rsi,rsi
  42c084:	je     42c120 <fb_name_table_visit@@Base+0x3a0>
  42c08a:	cmp    rsi,0x2
  42c08e:	je     42c0e0 <fb_name_table_visit@@Base+0x360>
  42c090:	movzx  r8d,WORD PTR [rbp+0x10]
  42c095:	cmp    r8w,WORD PTR [rsi+0x10]
  42c09a:	jne    42c070 <fb_name_table_visit@@Base+0x2f0>
  42c09c:	cmp    r8w,0x5
  42c0a1:	je     42c108 <fb_name_table_visit@@Base+0x388>
  42c0a3:	cmp    r8w,0x6
  42c0a8:	je     42c0f0 <fb_name_table_visit@@Base+0x370>
  42c0aa:	cmp    r8w,0x4
  42c0af:	jne    42c070 <fb_name_table_visit@@Base+0x2f0>
  42c0b1:	xor    r8d,r8d
  42c0b4:	mov    r10,QWORD PTR [rsi]
  42c0b7:	cmp    QWORD PTR [rbp+0x0],r10
  42c0bb:	sete   r8b
  42c0bf:	test   r8d,r8d
  42c0c2:	je     42c070 <fb_name_table_visit@@Base+0x2f0>
  42c0c4:	test   ebx,ebx
  42c0c6:	jne    42c0cb <fb_name_table_visit@@Base+0x34b>
  42c0c8:	mov    QWORD PTR [rdi],r13
  42c0cb:	add    rsp,0x8
  42c0cf:	mov    rax,rsi
  42c0d2:	pop    rbx
  42c0d3:	pop    rbp
  42c0d4:	pop    r12
  42c0d6:	pop    r13
  42c0d8:	ret    
  42c0d9:	nop    DWORD PTR [rax+0x0]
  42c0e0:	test   rdx,rdx
  42c0e3:	cmove  rdx,rdi
  42c0e7:	jmp    42c070 <fb_name_table_visit@@Base+0x2f0>
  42c0e9:	nop    DWORD PTR [rax+0x0]
  42c0f0:	movzx  r10d,BYTE PTR [rsi]
  42c0f4:	xor    r8d,r8d
  42c0f7:	cmp    BYTE PTR [rbp+0x0],r10b
  42c0fb:	sete   r8b
  42c0ff:	jmp    42c0bf <fb_name_table_visit@@Base+0x33f>
  42c101:	nop    DWORD PTR [rax+0x0]
  42c108:	xor    r8d,r8d
  42c10b:	mov    r11,QWORD PTR [rsi]
  42c10e:	cmp    QWORD PTR [rbp+0x0],r11
  42c112:	sete   r8b
  42c116:	jmp    42c0bf <fb_name_table_visit@@Base+0x33f>
  42c118:	nop    DWORD PTR [rax+rax*1+0x0]
  42c120:	test   rdx,rdx
  42c123:	cmove  rdx,rdi
  42c127:	add    QWORD PTR [r12+0x10],0x1
  42c12d:	xor    esi,esi
  42c12f:	mov    QWORD PTR [rdx],r13
  42c132:	add    rsp,0x8
  42c136:	mov    rax,rsi
  42c139:	pop    rbx
  42c13a:	pop    rbp
  42c13b:	pop    r12
  42c13d:	pop    r13
  42c13f:	ret    
  42c140:	add    rsi,rsi
  42c143:	call   42c240 <fb_name_table_visit@@Base+0x4c0>
  42c148:	test   eax,eax
  42c14a:	jne    42c1c5 <fb_name_table_visit@@Base+0x445>
  42c14c:	mov    rcx,QWORD PTR [r12+0x18]
  42c151:	jmp    42c02e <fb_name_table_visit@@Base+0x2ae>
  42c156:	mov    rdx,rdi
  42c159:	jmp    42c127 <fb_name_table_visit@@Base+0x3a7>
  42c15b:	lea    rsi,[r9+rdx*8]
  42c15f:	add    QWORD PTR [r12+0x10],0x1
  42c165:	mov    rdx,QWORD PTR [rsi]
  42c168:	test   rdx,rdx
  42c16b:	je     42c19c <fb_name_table_visit@@Base+0x41c>
  42c16d:	cmp    rdx,0x2
  42c171:	je     42c19c <fb_name_table_visit@@Base+0x41c>
  42c173:	add    rax,0x1
  42c177:	jmp    42c186 <fb_name_table_visit@@Base+0x406>
  42c179:	nop    DWORD PTR [rax+0x0]
  42c180:	cmp    rdx,0x2
  42c184:	je     42c19c <fb_name_table_visit@@Base+0x41c>
  42c186:	mov    rdx,rcx
  42c189:	and    rdx,rax
  42c18c:	add    rax,0x1
  42c190:	lea    rsi,[r9+rdx*8]
  42c194:	mov    rdx,QWORD PTR [rsi]
  42c197:	test   rdx,rdx
  42c19a:	jne    42c180 <fb_name_table_visit@@Base+0x400>
  42c19c:	mov    QWORD PTR [rsi],r13
  42c19f:	xor    esi,esi
  42c1a1:	jmp    42c0cb <fb_name_table_visit@@Base+0x34b>
  42c1a6:	lea    rcx,[rip+0x1dc5b]        # 449e08 <fb_name_table_missing@@Base+0x8>
  42c1ad:	lea    rsi,[rip+0x19ffc]        # 4461b0 <_IO_stdin_used@@Base+0x191b0>
  42c1b4:	lea    rdi,[rip+0x1a0af]        # 44626a <_IO_stdin_used@@Base+0x1926a>
  42c1bb:	mov    edx,0x73
  42c1c0:	call   405100 <__assert_fail@plt>
  42c1c5:	mov    rax,QWORD PTR [rip+0x24e1c]        # 450fe8 <stderr@GLIBC_2.2.5>
  42c1cc:	lea    rcx,[rip+0x1a04d]        # 446220 <_IO_stdin_used@@Base+0x19220>
  42c1d3:	lea    rdx,[rip+0x1a0bc]        # 446296 <_IO_stdin_used@@Base+0x19296>
  42c1da:	mov    esi,0x1
  42c1df:	mov    rdi,QWORD PTR [rax]
  42c1e2:	xor    eax,eax
  42c1e4:	call   405200 <__fprintf_chk@plt>
  42c1e9:	mov    edi,0x1
  42c1ee:	call   4051e0 <exit@plt>
  42c1f3:	lea    rcx,[rip+0x1dc0e]        # 449e08 <fb_name_table_missing@@Base+0x8>
  42c1fa:	lea    rsi,[rip+0x19faf]        # 4461b0 <_IO_stdin_used@@Base+0x191b0>
  42c201:	lea    rdi,[rip+0x1a04b]        # 446253 <_IO_stdin_used@@Base+0x19253>
  42c208:	mov    edx,0x72
  42c20d:	call   405100 <__assert_fail@plt>
  42c212:	lea    rcx,[rip+0x1dbef]        # 449e08 <fb_name_table_missing@@Base+0x8>
  42c219:	lea    rsi,[rip+0x19f90]        # 4461b0 <_IO_stdin_used@@Base+0x191b0>
  42c220:	lea    rdi,[rip+0x1a05a]        # 446281 <_IO_stdin_used@@Base+0x19281>
  42c227:	mov    edx,0x74
  42c22c:	call   405100 <__assert_fail@plt>
  42c231:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  42c23c:	nop    DWORD PTR [rax+0x0]
  42c240:	push   r13
  42c242:	push   r12
  42c244:	push   rbp
  42c245:	push   rbx
  42c246:	mov    rbp,rdi
  42c249:	mov    ebx,0x4
  42c24e:	sub    rsp,0x38
  42c252:	mov    r12,QWORD PTR [rdi]
  42c255:	mov    rax,QWORD PTR fs:0x28
  42c25e:	mov    QWORD PTR [rsp+0x28],rax
  42c263:	xor    eax,eax
  42c265:	cmp    QWORD PTR [rdi+0x10],rsi
  42c269:	cmovae rsi,QWORD PTR [rdi+0x10]
  42c26e:	cmp    rsi,0x2
  42c272:	jbe    42c28b <fb_name_table_visit@@Base+0x50b>
  42c274:	nop    DWORD PTR [rax+0x0]
  42c278:	add    rbx,rbx
  42c27b:	imul   rax,rbx,0xb3
  42c282:	shr    rax,0x8
  42c286:	cmp    rsi,rax
  42c289:	ja     42c278 <fb_name_table_visit@@Base+0x4f8>
  42c28b:	mov    esi,0x8
  42c290:	mov    rdi,rbx
  42c293:	call   405140 <calloc@plt>
  42c298:	test   rax,rax
  42c29b:	mov    QWORD PTR [rsp],rax
  42c29f:	je     42c341 <fb_name_table_visit@@Base+0x5c1>
  42c2a5:	mov    QWORD PTR [rsp+0x18],rbx
  42c2aa:	xor    ebx,ebx
  42c2ac:	cmp    QWORD PTR [rbp+0x18],0x0
  42c2b1:	mov    QWORD PTR [rsp+0x8],0x0
  42c2ba:	mov    QWORD PTR [rsp+0x10],0x0
  42c2c3:	mov    r13,rsp
  42c2c6:	je     42c2f9 <fb_name_table_visit@@Base+0x579>
  42c2c8:	nop    DWORD PTR [rax+rax*1+0x0]
  42c2d0:	mov    rsi,QWORD PTR [r12+rbx*8]
  42c2d4:	test   rsi,rsi
  42c2d7:	je     42c2ef <fb_name_table_visit@@Base+0x56f>
  42c2d9:	cmp    rsi,0x2
  42c2dd:	je     42c2ef <fb_name_table_visit@@Base+0x56f>
  42c2df:	mov    ecx,0x3
  42c2e4:	mov    rdx,rsi
  42c2e7:	mov    rdi,r13
  42c2ea:	call   42bfe0 <fb_name_table_visit@@Base+0x260>
  42c2ef:	add    rbx,0x1
  42c2f3:	cmp    QWORD PTR [rbp+0x18],rbx
  42c2f7:	ja     42c2d0 <fb_name_table_visit@@Base+0x550>
  42c2f9:	mov    rdi,rbp
  42c2fc:	call   42bdd0 <fb_name_table_visit@@Base+0x50>
  42c301:	mov    rax,QWORD PTR [rsp]
  42c305:	mov    QWORD PTR [rbp+0x0],rax
  42c309:	mov    rax,QWORD PTR [rsp+0x8]
  42c30e:	mov    QWORD PTR [rbp+0x8],rax
  42c312:	mov    rax,QWORD PTR [rsp+0x10]
  42c317:	mov    QWORD PTR [rbp+0x10],rax
  42c31b:	mov    rax,QWORD PTR [rsp+0x18]
  42c320:	mov    QWORD PTR [rbp+0x18],rax
  42c324:	xor    eax,eax
  42c326:	mov    rdx,QWORD PTR [rsp+0x28]
  42c32b:	xor    rdx,QWORD PTR fs:0x28
  42c334:	jne    42c348 <fb_name_table_visit@@Base+0x5c8>
  42c336:	add    rsp,0x38
  42c33a:	pop    rbx
  42c33b:	pop    rbp
  42c33c:	pop    r12
  42c33e:	pop    r13
  42c340:	ret    
  42c341:	mov    eax,0xffffffff
  42c346:	jmp    42c326 <fb_name_table_visit@@Base+0x5a6>
  42c348:	call   4050d0 <__stack_chk_fail@plt>
  42c34d:	nop    DWORD PTR [rax]

000000000042c350 <fb_value_set_clear@@Base>:
  42c350:	jmp    42bdd0 <fb_name_table_visit@@Base+0x50>
  42c355:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

000000000042c360 <fb_value_set_destroy@@Base>:
  42c360:	test   rsi,rsi
  42c363:	push   r14
  42c365:	push   r13
  42c367:	push   r12
  42c369:	push   rbp
  42c36a:	mov    rbp,rdi
  42c36d:	push   rbx
  42c36e:	je     42c3a7 <fb_value_set_destroy@@Base+0x47>
  42c370:	cmp    QWORD PTR [rdi+0x18],0x0
  42c375:	mov    r12,QWORD PTR [rdi]
  42c378:	je     42c3a7 <fb_value_set_destroy@@Base+0x47>
  42c37a:	mov    r13,rsi
  42c37d:	mov    r14,rdx
  42c380:	xor    ebx,ebx
  42c382:	nop    WORD PTR [rax+rax*1+0x0]
  42c388:	mov    rsi,QWORD PTR [r12+rbx*8]
  42c38c:	test   rsi,rsi
  42c38f:	je     42c39d <fb_value_set_destroy@@Base+0x3d>
  42c391:	cmp    rsi,0x2
  42c395:	je     42c39d <fb_value_set_destroy@@Base+0x3d>
  42c397:	mov    rdi,r14
  42c39a:	call   r13
  42c39d:	add    rbx,0x1
  42c3a1:	cmp    rbx,QWORD PTR [rbp+0x18]
  42c3a5:	jb     42c388 <fb_value_set_destroy@@Base+0x28>
  42c3a7:	pop    rbx
  42c3a8:	mov    rdi,rbp
  42c3ab:	pop    rbp
  42c3ac:	pop    r12
  42c3ae:	pop    r13
  42c3b0:	pop    r14
  42c3b2:	jmp    42bdd0 <fb_name_table_visit@@Base+0x50>
  42c3b7:	nop    WORD PTR [rax+rax*1+0x0]

000000000042c3c0 <fb_value_set_init@@Base>:
  42c3c0:	push   rbp
  42c3c1:	push   rbx
  42c3c2:	mov    rbp,rdi
  42c3c5:	mov    ebx,0x4
  42c3ca:	sub    rsp,0x8
  42c3ce:	cmp    rsi,0x2
  42c3d2:	jbe    42c3eb <fb_value_set_init@@Base+0x2b>
  42c3d4:	nop    DWORD PTR [rax+0x0]
  42c3d8:	add    rbx,rbx
  42c3db:	imul   rax,rbx,0xb3
  42c3e2:	shr    rax,0x8
  42c3e6:	cmp    rsi,rax
  42c3e9:	ja     42c3d8 <fb_value_set_init@@Base+0x18>
  42c3eb:	mov    esi,0x8
  42c3f0:	mov    rdi,rbx
  42c3f3:	call   405140 <calloc@plt>
  42c3f8:	test   rax,rax
  42c3fb:	mov    QWORD PTR [rbp+0x0],rax
  42c3ff:	je     42c41e <fb_value_set_init@@Base+0x5e>
  42c401:	mov    QWORD PTR [rbp+0x8],0x0
  42c409:	mov    QWORD PTR [rbp+0x18],rbx
  42c40d:	xor    eax,eax
  42c40f:	mov    QWORD PTR [rbp+0x10],0x0
  42c417:	add    rsp,0x8
  42c41b:	pop    rbx
  42c41c:	pop    rbp
  42c41d:	ret    
  42c41e:	mov    eax,0xffffffff
  42c423:	jmp    42c417 <fb_value_set_init@@Base+0x57>
  42c425:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

000000000042c430 <fb_value_set_resize@@Base>:
  42c430:	jmp    42c240 <fb_name_table_visit@@Base+0x4c0>
  42c435:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

000000000042c440 <fb_value_set_insert@@Base>:
  42c440:	mov    rdx,rcx
  42c443:	mov    ecx,r8d
  42c446:	jmp    42bfe0 <fb_name_table_visit@@Base+0x260>
  42c44b:	nop    DWORD PTR [rax+rax*1+0x0]

000000000042c450 <fb_value_set_insert_item@@Base>:
  42c450:	mov    ecx,edx
  42c452:	mov    rdx,rsi
  42c455:	jmp    42bfe0 <fb_name_table_visit@@Base+0x260>
  42c45a:	nop    WORD PTR [rax+rax*1+0x0]

000000000042c460 <fb_value_set_find@@Base>:
  42c460:	mov    rdx,rsi
  42c463:	lea    rsi,[rdi+0x18]
  42c467:	mov    rdi,QWORD PTR [rdi]
  42c46a:	jmp    42be80 <fb_name_table_visit@@Base+0x100>
  42c46f:	nop

000000000042c470 <fb_value_set_find_item@@Base>:
  42c470:	mov    rdx,rsi
  42c473:	lea    rsi,[rdi+0x18]
  42c477:	mov    rdi,QWORD PTR [rdi]
  42c47a:	jmp    42be80 <fb_name_table_visit@@Base+0x100>
  42c47f:	nop

000000000042c480 <fb_value_set_remove@@Base>:
  42c480:	jmp    42bf20 <fb_name_table_visit@@Base+0x1a0>
  42c485:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

000000000042c490 <fb_value_set_remove_item@@Base>:
  42c490:	jmp    42bf20 <fb_name_table_visit@@Base+0x1a0>
  42c495:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

000000000042c4a0 <fb_value_set_visit@@Base>:
  42c4a0:	push   r14
  42c4a2:	push   r13
  42c4a4:	push   r12
  42c4a6:	push   rbp
  42c4a7:	push   rbx
  42c4a8:	cmp    QWORD PTR [rdi+0x18],0x0
  42c4ad:	mov    r12,QWORD PTR [rdi]
  42c4b0:	je     42c4df <fb_value_set_visit@@Base+0x3f>
  42c4b2:	mov    rbp,rdi
  42c4b5:	mov    r14,rsi
  42c4b8:	mov    r13,rdx
  42c4bb:	xor    ebx,ebx
  42c4bd:	nop    DWORD PTR [rax]
  42c4c0:	mov    rsi,QWORD PTR [r12+rbx*8]
  42c4c4:	test   rsi,rsi
  42c4c7:	je     42c4d5 <fb_value_set_visit@@Base+0x35>
  42c4c9:	cmp    rsi,0x2
  42c4cd:	je     42c4d5 <fb_value_set_visit@@Base+0x35>
  42c4cf:	mov    rdi,r13
  42c4d2:	call   r14
  42c4d5:	add    rbx,0x1
  42c4d9:	cmp    rbx,QWORD PTR [rbp+0x18]
  42c4dd:	jb     42c4c0 <fb_value_set_visit@@Base+0x20>
  42c4df:	pop    rbx
  42c4e0:	pop    rbp
  42c4e1:	pop    r12
  42c4e3:	pop    r13
  42c4e5:	pop    r14
  42c4e7:	ret    
  42c4e8:	nop    DWORD PTR [rax+rax*1+0x0]

000000000042c4f0 <__libc_csu_init@@Base>:
  42c4f0:	endbr64 
  42c4f4:	push   r15
  42c4f6:	lea    r15,[rip+0x2488b]        # 450d88 <fb_value_set_missing@@Base+0x6f60>
  42c4fd:	push   r14
  42c4ff:	mov    r14,rdx
  42c502:	push   r13
  42c504:	mov    r13,rsi
  42c507:	push   r12
  42c509:	mov    r12d,edi
  42c50c:	push   rbp
  42c50d:	lea    rbp,[rip+0x2487c]        # 450d90 <fb_value_set_missing@@Base+0x6f68>
  42c514:	push   rbx
  42c515:	sub    rbp,r15
  42c518:	sub    rsp,0x8
  42c51c:	call   405000 <__ctype_toupper_loc@plt-0x30>
  42c521:	sar    rbp,0x3
  42c525:	je     42c546 <__libc_csu_init@@Base+0x56>
  42c527:	xor    ebx,ebx
  42c529:	nop    DWORD PTR [rax+0x0]
  42c530:	mov    rdx,r14
  42c533:	mov    rsi,r13
  42c536:	mov    edi,r12d
  42c539:	call   QWORD PTR [r15+rbx*8]
  42c53d:	add    rbx,0x1
  42c541:	cmp    rbp,rbx
  42c544:	jne    42c530 <__libc_csu_init@@Base+0x40>
  42c546:	add    rsp,0x8
  42c54a:	pop    rbx
  42c54b:	pop    rbp
  42c54c:	pop    r12
  42c54e:	pop    r13
  42c550:	pop    r14
  42c552:	pop    r15
  42c554:	ret    
  42c555:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

000000000042c560 <__libc_csu_fini@@Base>:
  42c560:	endbr64 
  42c564:	ret    

Disassembly of section .fini:

000000000042c568 <.fini>:
  42c568:	endbr64 
  42c56c:	sub    rsp,0x8
  42c570:	add    rsp,0x8
  42c574:	ret    
