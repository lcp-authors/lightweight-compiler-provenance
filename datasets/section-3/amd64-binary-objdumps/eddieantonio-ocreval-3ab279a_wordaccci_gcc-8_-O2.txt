
../repos/eddieantonio-ocreval-3ab279a/wordaccci/wordaccci:     file format elf64-x86-64


Disassembly of section .init:

0000000000401000 <.init>:
  401000:	endbr64 
  401004:	sub    rsp,0x8
  401008:	mov    rax,QWORD PTR [rip+0x4fe1]        # 405ff0 <__gmon_start__>
  40100f:	test   rax,rax
  401012:	je     401016 <free@plt-0x17a>
  401014:	call   rax
  401016:	add    rsp,0x8
  40101a:	ret    

Disassembly of section .plt:

0000000000401020 <.plt>:
  401020:	push   QWORD PTR [rip+0x4fe2]        # 406008 <error@@Base+0x42d8>
  401026:	bnd jmp QWORD PTR [rip+0x4fe3]        # 406010 <error@@Base+0x42e0>
  40102d:	nop    DWORD PTR [rax]
  401030:	endbr64 
  401034:	push   0x0
  401039:	bnd jmp 401020 <free@plt-0x170>
  40103f:	nop
  401040:	endbr64 
  401044:	push   0x1
  401049:	bnd jmp 401020 <free@plt-0x170>
  40104f:	nop
  401050:	endbr64 
  401054:	push   0x2
  401059:	bnd jmp 401020 <free@plt-0x170>
  40105f:	nop
  401060:	endbr64 
  401064:	push   0x3
  401069:	bnd jmp 401020 <free@plt-0x170>
  40106f:	nop
  401070:	endbr64 
  401074:	push   0x4
  401079:	bnd jmp 401020 <free@plt-0x170>
  40107f:	nop
  401080:	endbr64 
  401084:	push   0x5
  401089:	bnd jmp 401020 <free@plt-0x170>
  40108f:	nop
  401090:	endbr64 
  401094:	push   0x6
  401099:	bnd jmp 401020 <free@plt-0x170>
  40109f:	nop
  4010a0:	endbr64 
  4010a4:	push   0x7
  4010a9:	bnd jmp 401020 <free@plt-0x170>
  4010af:	nop
  4010b0:	endbr64 
  4010b4:	push   0x8
  4010b9:	bnd jmp 401020 <free@plt-0x170>
  4010bf:	nop
  4010c0:	endbr64 
  4010c4:	push   0x9
  4010c9:	bnd jmp 401020 <free@plt-0x170>
  4010cf:	nop
  4010d0:	endbr64 
  4010d4:	push   0xa
  4010d9:	bnd jmp 401020 <free@plt-0x170>
  4010df:	nop
  4010e0:	endbr64 
  4010e4:	push   0xb
  4010e9:	bnd jmp 401020 <free@plt-0x170>
  4010ef:	nop
  4010f0:	endbr64 
  4010f4:	push   0xc
  4010f9:	bnd jmp 401020 <free@plt-0x170>
  4010ff:	nop
  401100:	endbr64 
  401104:	push   0xd
  401109:	bnd jmp 401020 <free@plt-0x170>
  40110f:	nop
  401110:	endbr64 
  401114:	push   0xe
  401119:	bnd jmp 401020 <free@plt-0x170>
  40111f:	nop
  401120:	endbr64 
  401124:	push   0xf
  401129:	bnd jmp 401020 <free@plt-0x170>
  40112f:	nop
  401130:	endbr64 
  401134:	push   0x10
  401139:	bnd jmp 401020 <free@plt-0x170>
  40113f:	nop
  401140:	endbr64 
  401144:	push   0x11
  401149:	bnd jmp 401020 <free@plt-0x170>
  40114f:	nop
  401150:	endbr64 
  401154:	push   0x12
  401159:	bnd jmp 401020 <free@plt-0x170>
  40115f:	nop
  401160:	endbr64 
  401164:	push   0x13
  401169:	bnd jmp 401020 <free@plt-0x170>
  40116f:	nop
  401170:	endbr64 
  401174:	push   0x14
  401179:	bnd jmp 401020 <free@plt-0x170>
  40117f:	nop
  401180:	endbr64 
  401184:	push   0x15
  401189:	bnd jmp 401020 <free@plt-0x170>
  40118f:	nop

Disassembly of section .plt.sec:

0000000000401190 <free@plt>:
  401190:	endbr64 
  401194:	bnd jmp QWORD PTR [rip+0x4e7d]        # 406018 <free@GLIBC_2.2.5>
  40119b:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004011a0 <unlink@plt>:
  4011a0:	endbr64 
  4011a4:	bnd jmp QWORD PTR [rip+0x4e75]        # 406020 <unlink@GLIBC_2.2.5>
  4011ab:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004011b0 <getpid@plt>:
  4011b0:	endbr64 
  4011b4:	bnd jmp QWORD PTR [rip+0x4e6d]        # 406028 <getpid@GLIBC_2.2.5>
  4011bb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004011c0 <fclose@plt>:
  4011c0:	endbr64 
  4011c4:	bnd jmp QWORD PTR [rip+0x4e65]        # 406030 <fclose@GLIBC_2.2.5>
  4011cb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004011d0 <strlen@plt>:
  4011d0:	endbr64 
  4011d4:	bnd jmp QWORD PTR [rip+0x4e5d]        # 406038 <strlen@GLIBC_2.2.5>
  4011db:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004011e0 <__stack_chk_fail@plt>:
  4011e0:	endbr64 
  4011e4:	bnd jmp QWORD PTR [rip+0x4e55]        # 406040 <__stack_chk_fail@GLIBC_2.4>
  4011eb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004011f0 <fputc@plt>:
  4011f0:	endbr64 
  4011f4:	bnd jmp QWORD PTR [rip+0x4e4d]        # 406048 <fputc@GLIBC_2.2.5>
  4011fb:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000401200 <fgets@plt>:
  401200:	endbr64 
  401204:	bnd jmp QWORD PTR [rip+0x4e45]        # 406050 <fgets@GLIBC_2.2.5>
  40120b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000401210 <calloc@plt>:
  401210:	endbr64 
  401214:	bnd jmp QWORD PTR [rip+0x4e3d]        # 406058 <calloc@GLIBC_2.2.5>
  40121b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000401220 <strcmp@plt>:
  401220:	endbr64 
  401224:	bnd jmp QWORD PTR [rip+0x4e35]        # 406060 <strcmp@GLIBC_2.2.5>
  40122b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000401230 <strtol@plt>:
  401230:	endbr64 
  401234:	bnd jmp QWORD PTR [rip+0x4e2d]        # 406068 <strtol@GLIBC_2.2.5>
  40123b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000401240 <__sysv_signal@plt>:
  401240:	endbr64 
  401244:	bnd jmp QWORD PTR [rip+0x4e25]        # 406070 <__sysv_signal@GLIBC_2.2.5>
  40124b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000401250 <__xstat@plt>:
  401250:	endbr64 
  401254:	bnd jmp QWORD PTR [rip+0x4e1d]        # 406078 <__xstat@GLIBC_2.2.5>
  40125b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000401260 <__isoc99_sscanf@plt>:
  401260:	endbr64 
  401264:	bnd jmp QWORD PTR [rip+0x4e15]        # 406080 <__isoc99_sscanf@GLIBC_2.7>
  40126b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000401270 <__printf_chk@plt>:
  401270:	endbr64 
  401274:	bnd jmp QWORD PTR [rip+0x4e0d]        # 406088 <__printf_chk@GLIBC_2.3.4>
  40127b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000401280 <fopen@plt>:
  401280:	endbr64 
  401284:	bnd jmp QWORD PTR [rip+0x4e05]        # 406090 <fopen@GLIBC_2.2.5>
  40128b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000401290 <exit@plt>:
  401290:	endbr64 
  401294:	bnd jmp QWORD PTR [rip+0x4dfd]        # 406098 <exit@GLIBC_2.2.5>
  40129b:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004012a0 <fwrite@plt>:
  4012a0:	endbr64 
  4012a4:	bnd jmp QWORD PTR [rip+0x4df5]        # 4060a0 <fwrite@GLIBC_2.2.5>
  4012ab:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004012b0 <__fprintf_chk@plt>:
  4012b0:	endbr64 
  4012b4:	bnd jmp QWORD PTR [rip+0x4ded]        # 4060a8 <__fprintf_chk@GLIBC_2.3.4>
  4012bb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004012c0 <sqrt@plt>:
  4012c0:	endbr64 
  4012c4:	bnd jmp QWORD PTR [rip+0x4de5]        # 4060b0 <sqrt@GLIBC_2.2.5>
  4012cb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004012d0 <strdup@plt>:
  4012d0:	endbr64 
  4012d4:	bnd jmp QWORD PTR [rip+0x4ddd]        # 4060b8 <strdup@GLIBC_2.2.5>
  4012db:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004012e0 <__sprintf_chk@plt>:
  4012e0:	endbr64 
  4012e4:	bnd jmp QWORD PTR [rip+0x4dd5]        # 4060c0 <__sprintf_chk@GLIBC_2.3.4>
  4012eb:	nop    DWORD PTR [rax+rax*1+0x0]

Disassembly of section .text:

00000000004012f0 <error@@Base-0xa40>:
  4012f0:	endbr64 
  4012f4:	push   rbp
  4012f5:	xor    ecx,ecx
  4012f7:	xor    eax,eax
  4012f9:	push   rbx
  4012fa:	lea    rdx,[rip+0x2db7]        # 4040b8 <error@@Base+0x2388>
  401301:	mov    rbp,rsi
  401304:	sub    rsp,0x18
  401308:	mov    DWORD PTR [rsp+0xc],edi
  40130c:	lea    rdi,[rsp+0xc]
  401311:	call   401eb0 <error@@Base+0x180>
  401316:	xor    ebx,ebx
  401318:	cmp    DWORD PTR [rsp+0xc],0x1
  40131d:	jle    401343 <__sprintf_chk@plt+0x63>
  40131f:	nop
  401320:	mov    rdi,QWORD PTR [rbp+rbx*8+0x0]
  401325:	xor    eax,eax
  401327:	inc    rbx
  40132a:	call   401450 <__sprintf_chk@plt+0x170>
  40132f:	cmp    DWORD PTR [rsp+0xc],ebx
  401333:	jg     401320 <__sprintf_chk@plt+0x40>
  401335:	xor    eax,eax
  401337:	call   4014a0 <__sprintf_chk@plt+0x1c0>
  40133c:	xor    eax,eax
  40133e:	call   401cc0 <__sprintf_chk@plt+0x9e0>
  401343:	lea    rdi,[rip+0x2d1f]        # 404069 <error@@Base+0x2339>
  40134a:	xor    eax,eax
  40134c:	call   401d30 <error@@Base>
  401351:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40135b:	nop    DWORD PTR [rax+rax*1+0x0]
  401360:	endbr64 
  401364:	xor    ebp,ebp
  401366:	mov    r9,rdx
  401369:	pop    rsi
  40136a:	mov    rdx,rsp
  40136d:	and    rsp,0xfffffffffffffff0
  401371:	push   rax
  401372:	push   rsp
  401373:	mov    r8,0x4030a0
  40137a:	mov    rcx,0x403030
  401381:	mov    rdi,0x4012f0
  401388:	call   QWORD PTR [rip+0x4c5a]        # 405fe8 <error@@Base+0x42b8>
  40138e:	hlt    
  40138f:	nop
  401390:	endbr64 
  401394:	ret    
  401395:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40139f:	nop
  4013a0:	mov    eax,0x4060e0
  4013a5:	cmp    rax,0x4060e0
  4013ab:	je     4013c0 <__sprintf_chk@plt+0xe0>
  4013ad:	mov    eax,0x0
  4013b2:	test   rax,rax
  4013b5:	je     4013c0 <__sprintf_chk@plt+0xe0>
  4013b7:	mov    edi,0x4060e0
  4013bc:	jmp    rax
  4013be:	xchg   ax,ax
  4013c0:	ret    
  4013c1:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4013cc:	nop    DWORD PTR [rax+0x0]
  4013d0:	mov    esi,0x4060e0
  4013d5:	sub    rsi,0x4060e0
  4013dc:	sar    rsi,0x3
  4013e0:	mov    rax,rsi
  4013e3:	shr    rax,0x3f
  4013e7:	add    rsi,rax
  4013ea:	sar    rsi,1
  4013ed:	je     401400 <__sprintf_chk@plt+0x120>
  4013ef:	mov    eax,0x0
  4013f4:	test   rax,rax
  4013f7:	je     401400 <__sprintf_chk@plt+0x120>
  4013f9:	mov    edi,0x4060e0
  4013fe:	jmp    rax
  401400:	ret    
  401401:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40140c:	nop    DWORD PTR [rax+0x0]
  401410:	endbr64 
  401414:	cmp    BYTE PTR [rip+0x4cc5],0x0        # 4060e0 <error@@Base+0x43b0>
  40141b:	jne    401430 <__sprintf_chk@plt+0x150>
  40141d:	push   rbp
  40141e:	mov    rbp,rsp
  401421:	call   4013a0 <__sprintf_chk@plt+0xc0>
  401426:	mov    BYTE PTR [rip+0x4cb3],0x1        # 4060e0 <error@@Base+0x43b0>
  40142d:	pop    rbp
  40142e:	ret    
  40142f:	nop
  401430:	ret    
  401431:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40143c:	nop    DWORD PTR [rax+0x0]
  401440:	endbr64 
  401444:	jmp    4013d0 <__sprintf_chk@plt+0xf0>
  401446:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401450:	endbr64 
  401454:	push   r12
  401456:	mov    rsi,rdi
  401459:	xor    eax,eax
  40145b:	push   rbp
  40145c:	push   rbx
  40145d:	mov    rbx,0x406180
  401464:	mov    rdi,rbx
  401467:	mov    rbp,QWORD PTR [rbx]
  40146a:	mov    r12,QWORD PTR [rbx+0x8]
  40146e:	call   402830 <error@@Base+0xb00>
  401473:	mov    rsi,QWORD PTR [rbx]
  401476:	mov    rdx,QWORD PTR [rbx+0x8]
  40147a:	pop    rbx
  40147b:	sub    rsi,rbp
  40147e:	mov    rdi,0x40e720
  401485:	pop    rbp
  401486:	sub    rdx,r12
  401489:	xor    eax,eax
  40148b:	pop    r12
  40148d:	jmp    4015a0 <__sprintf_chk@plt+0x2c0>
  401492:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40149d:	nop    DWORD PTR [rax]
  4014a0:	endbr64 
  4014a4:	push   rbx
  4014a5:	sub    rsp,0x20
  4014a9:	mov    rax,QWORD PTR fs:0x28
  4014b2:	mov    QWORD PTR [rsp+0x18],rax
  4014b7:	xor    eax,eax
  4014b9:	mov    rbx,0x40e720
  4014c0:	lea    rdx,[rsp+0x10]
  4014c5:	mov    rdi,rbx
  4014c8:	lea    rsi,[rsp+0x8]
  4014cd:	call   4015f0 <__sprintf_chk@plt+0x310>
  4014d2:	mov    rdx,QWORD PTR [rbx+0x18]
  4014d6:	lea    rsi,[rip+0x2b27]        # 404004 <error@@Base+0x22d4>
  4014dd:	mov    edi,0x1
  4014e2:	xor    eax,eax
  4014e4:	call   401270 <__printf_chk@plt>
  4014e9:	mov    rbx,0x406180
  4014f0:	lea    rsi,[rip+0x2b23]        # 40401a <error@@Base+0x22ea>
  4014f7:	mov    rdx,QWORD PTR [rbx]
  4014fa:	mov    edi,0x1
  4014ff:	xor    eax,eax
  401501:	call   401270 <__printf_chk@plt>
  401506:	mov    rdx,QWORD PTR [rbx+0x8]
  40150a:	lea    rsi,[rip+0x2b18]        # 404029 <error@@Base+0x22f9>
  401511:	mov    edi,0x1
  401516:	xor    eax,eax
  401518:	call   401270 <__printf_chk@plt>
  40151d:	mov    rdx,QWORD PTR [rbx]
  401520:	vxorpd xmm0,xmm0,xmm0
  401524:	mov    rax,rdx
  401527:	sub    rax,QWORD PTR [rbx+0x8]
  40152b:	vcvtsi2sd xmm0,xmm0,rax
  401530:	vxorpd xmm1,xmm1,xmm1
  401534:	vcvtsi2sd xmm1,xmm1,rdx
  401539:	lea    rsi,[rip+0x2b00]        # 404040 <error@@Base+0x2310>
  401540:	vmulsd xmm0,xmm0,QWORD PTR [rip+0x2ba0]        # 4040e8 <error@@Base+0x23b8>
  401548:	mov    edi,0x1
  40154d:	mov    eax,0x1
  401552:	vdivsd xmm0,xmm0,xmm1
  401556:	call   401270 <__printf_chk@plt>
  40155b:	vmovsd xmm1,QWORD PTR [rsp+0x10]
  401561:	vmovsd xmm0,QWORD PTR [rsp+0x8]
  401567:	lea    rdx,[rip+0x2b12]        # 404080 <error@@Base+0x2350>
  40156e:	lea    rsi,[rip+0x2adf]        # 404054 <error@@Base+0x2324>
  401575:	mov    edi,0x1
  40157a:	mov    eax,0x2
  40157f:	call   401270 <__printf_chk@plt>
  401584:	mov    rax,QWORD PTR [rsp+0x18]
  401589:	xor    rax,QWORD PTR fs:0x28
  401592:	jne    40159a <__sprintf_chk@plt+0x2ba>
  401594:	add    rsp,0x20
  401598:	pop    rbx
  401599:	ret    
  40159a:	call   4011e0 <__stack_chk_fail@plt>
  40159f:	nop
  4015a0:	endbr64 
  4015a4:	push   r12
  4015a6:	xor    eax,eax
  4015a8:	mov    r12,rsi
  4015ab:	push   rbp
  4015ac:	mov    esi,0x30
  4015b1:	mov    rbp,rdx
  4015b4:	push   rbx
  4015b5:	mov    rbx,rdi
  4015b8:	mov    edi,0x1
  4015bd:	call   401d80 <error@@Base+0x50>
  4015c2:	mov    QWORD PTR [rax+0x10],r12
  4015c6:	mov    QWORD PTR [rax+0x18],rbp
  4015ca:	mov    rdi,rbx
  4015cd:	add    QWORD PTR [rbx+0x30],r12
  4015d1:	add    QWORD PTR [rbx+0x38],rbp
  4015d5:	pop    rbx
  4015d6:	pop    rbp
  4015d7:	mov    rsi,rax
  4015da:	pop    r12
  4015dc:	xor    eax,eax
  4015de:	jmp    401860 <__sprintf_chk@plt+0x580>
  4015e3:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4015ee:	xchg   ax,ax
  4015f0:	endbr64 
  4015f4:	push   rbx
  4015f5:	sub    rsp,0x20
  4015f9:	mov    r9,QWORD PTR [rdi]
  4015fc:	test   r9,r9
  4015ff:	je     4017c8 <__sprintf_chk@plt+0x4e8>
  401605:	mov    rax,r9
  401608:	xor    ecx,ecx
  40160a:	nop    WORD PTR [rax+rax*1+0x0]
  401610:	xor    r8d,r8d
  401613:	cmp    QWORD PTR [rax+0x10],0x0
  401618:	mov    rax,QWORD PTR [rax+0x8]
  40161c:	setg   r8b
  401620:	add    rcx,r8
  401623:	test   rax,rax
  401626:	jne    401610 <__sprintf_chk@plt+0x330>
  401628:	cmp    rcx,0x1
  40162c:	jle    4017c8 <__sprintf_chk@plt+0x4e8>
  401632:	mov    r10,QWORD PTR [rdi+0x30]
  401636:	mov    r11,QWORD PTR [rdi+0x38]
  40163a:	mov    rax,r10
  40163d:	sub    rax,r11
  401640:	vxorpd xmm2,xmm2,xmm2
  401644:	vcvtsi2sd xmm2,xmm2,rax
  401649:	vmovsd xmm5,QWORD PTR [rip+0x2a97]        # 4040e8 <error@@Base+0x23b8>
  401651:	vxorpd xmm3,xmm3,xmm3
  401655:	vcvtsi2sd xmm3,xmm3,r10
  40165a:	vmulsd xmm2,xmm2,xmm5
  40165e:	mov    rcx,QWORD PTR [rdi+0x18]
  401662:	vxorpd xmm7,xmm7,xmm7
  401666:	vcvtsi2sd xmm7,xmm7,rcx
  40166b:	vxorpd xmm8,xmm8,xmm8
  401670:	vdivsd xmm2,xmm2,xmm3
  401674:	dec    rcx
  401677:	vcvtsi2sd xmm8,xmm8,rcx
  40167c:	vxorpd xmm6,xmm6,xmm6
  401680:	mov    rcx,r9
  401683:	vxorpd xmm0,xmm0,xmm0
  401687:	vmulsd xmm3,xmm7,xmm2
  40168b:	vmovsd QWORD PTR [rdi+0x40],xmm2
  401690:	mov    r8,r10
  401693:	sub    r8,QWORD PTR [rcx+0x10]
  401697:	mov    rax,r11
  40169a:	sub    rax,QWORD PTR [rcx+0x18]
  40169e:	mov    rbx,r8
  4016a1:	sub    rbx,rax
  4016a4:	vxorpd xmm1,xmm1,xmm1
  4016a8:	vcvtsi2sd xmm1,xmm1,rbx
  4016ad:	vxorpd xmm2,xmm2,xmm2
  4016b1:	vcvtsi2sd xmm2,xmm2,r8
  4016b6:	vmulsd xmm1,xmm1,xmm5
  4016ba:	vdivsd xmm1,xmm1,xmm2
  4016be:	vmulsd xmm4,xmm1,xmm8
  4016c3:	vmovsd QWORD PTR [rcx+0x20],xmm1
  4016c8:	vaddsd xmm0,xmm0,xmm1
  4016cc:	vsubsd xmm4,xmm3,xmm4
  4016d0:	vmovsd QWORD PTR [rcx+0x28],xmm4
  4016d5:	mov    rcx,QWORD PTR [rcx+0x8]
  4016d9:	test   rcx,rcx
  4016dc:	jne    401690 <__sprintf_chk@plt+0x3b0>
  4016de:	vmulsd xmm2,xmm0,xmm8
  4016e3:	vxorpd xmm0,xmm0,xmm0
  4016e7:	vdivsd xmm2,xmm2,xmm7
  4016eb:	vsubsd xmm2,xmm3,xmm2
  4016ef:	vmovsd QWORD PTR [rdi+0x48],xmm2
  4016f4:	nop    DWORD PTR [rax+0x0]
  4016f8:	vmovsd xmm1,QWORD PTR [r9+0x28]
  4016fe:	mov    r9,QWORD PTR [r9+0x8]
  401702:	vsubsd xmm1,xmm1,xmm2
  401706:	vmulsd xmm1,xmm1,xmm1
  40170a:	vaddsd xmm0,xmm0,xmm1
  40170e:	test   r9,r9
  401711:	jne    4016f8 <__sprintf_chk@plt+0x418>
  401713:	vdivsd xmm0,xmm0,xmm8
  401718:	vdivsd xmm0,xmm0,xmm7
  40171c:	vucomisd xmm6,xmm0
  401720:	vsqrtsd xmm1,xmm1,xmm0
  401724:	ja     401781 <__sprintf_chk@plt+0x4a1>
  401726:	vmulsd xmm0,xmm1,QWORD PTR [rip+0x29da]        # 404108 <error@@Base+0x23d8>
  40172e:	vsubsd xmm2,xmm2,xmm0
  401732:	vcomisd xmm2,xmm5
  401736:	ja     401760 <__sprintf_chk@plt+0x480>
  401738:	vmaxsd xmm2,xmm6,xmm2
  40173c:	vmovsd QWORD PTR [rsi],xmm2
  401740:	vaddsd xmm0,xmm0,QWORD PTR [rdi+0x48]
  401745:	vcomisd xmm0,xmm5
  401749:	ja     401773 <__sprintf_chk@plt+0x493>
  40174b:	vmaxsd xmm0,xmm6,xmm0
  40174f:	vmovsd QWORD PTR [rdx],xmm0
  401753:	add    rsp,0x20
  401757:	pop    rbx
  401758:	ret    
  401759:	nop    DWORD PTR [rax+0x0]
  401760:	vmovapd xmm2,xmm5
  401764:	vmovsd QWORD PTR [rsi],xmm2
  401768:	vaddsd xmm0,xmm0,QWORD PTR [rdi+0x48]
  40176d:	vcomisd xmm0,xmm5
  401771:	jbe    40174b <__sprintf_chk@plt+0x46b>
  401773:	vmovapd xmm0,xmm5
  401777:	vmovsd QWORD PTR [rdx],xmm0
  40177b:	add    rsp,0x20
  40177f:	pop    rbx
  401780:	ret    
  401781:	mov    QWORD PTR [rsp+0x18],rdx
  401786:	mov    QWORD PTR [rsp+0x10],rsi
  40178b:	mov    QWORD PTR [rsp+0x8],rdi
  401790:	vmovsd QWORD PTR [rsp],xmm1
  401795:	call   4012c0 <sqrt@plt>
  40179a:	mov    rdi,QWORD PTR [rsp+0x8]
  40179f:	mov    rax,QWORD PTR [rip+0x2942]        # 4040e8 <error@@Base+0x23b8>
  4017a6:	vmovsd xmm2,QWORD PTR [rdi+0x48]
  4017ab:	vmovq  xmm5,rax
  4017b0:	vxorpd xmm6,xmm6,xmm6
  4017b4:	mov    rdx,QWORD PTR [rsp+0x18]
  4017b9:	mov    rsi,QWORD PTR [rsp+0x10]
  4017be:	vmovsd xmm1,QWORD PTR [rsp]
  4017c3:	jmp    401726 <__sprintf_chk@plt+0x446>
  4017c8:	lea    rdi,[rip+0x2921]        # 4040f0 <error@@Base+0x23c0>
  4017cf:	xor    eax,eax
  4017d1:	call   401d30 <error@@Base>
  4017d6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4017e0:	endbr64 
  4017e4:	mov    QWORD PTR [rdi+0x8],0x0
  4017ec:	mov    QWORD PTR [rdi],0x0
  4017f3:	mov    QWORD PTR [rdi+0x10],0x0
  4017fb:	mov    QWORD PTR [rdi+0x18],0x0
  401803:	ret    
  401804:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40180f:	nop
  401810:	endbr64 
  401814:	push   rbx
  401815:	mov    rbx,rdi
  401818:	mov    rax,QWORD PTR [rdi]
  40181b:	mov    QWORD PTR [rsi],0x0
  401822:	mov    QWORD PTR [rsi+0x8],rax
  401826:	mov    QWORD PTR [rdi],rsi
  401829:	test   rax,rax
  40182c:	je     401850 <__sprintf_chk@plt+0x570>
  40182e:	mov    QWORD PTR [rax],rsi
  401831:	mov    rdi,QWORD PTR [rbx+0x10]
  401835:	test   rdi,rdi
  401838:	je     401847 <__sprintf_chk@plt+0x567>
  40183a:	call   401190 <free@plt>
  40183f:	mov    QWORD PTR [rbx+0x10],0x0
  401847:	inc    QWORD PTR [rbx+0x18]
  40184b:	pop    rbx
  40184c:	ret    
  40184d:	nop    DWORD PTR [rax]
  401850:	mov    QWORD PTR [rdi+0x8],rsi
  401854:	jmp    401831 <__sprintf_chk@plt+0x551>
  401856:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401860:	endbr64 
  401864:	push   rbx
  401865:	mov    rbx,rdi
  401868:	mov    rax,QWORD PTR [rdi+0x8]
  40186c:	mov    QWORD PTR [rsi+0x8],0x0
  401874:	mov    QWORD PTR [rsi],rax
  401877:	test   rax,rax
  40187a:	je     4018a0 <__sprintf_chk@plt+0x5c0>
  40187c:	mov    QWORD PTR [rax+0x8],rsi
  401880:	mov    rdi,QWORD PTR [rbx+0x10]
  401884:	mov    QWORD PTR [rbx+0x8],rsi
  401888:	test   rdi,rdi
  40188b:	je     40189a <__sprintf_chk@plt+0x5ba>
  40188d:	call   401190 <free@plt>
  401892:	mov    QWORD PTR [rbx+0x10],0x0
  40189a:	inc    QWORD PTR [rbx+0x18]
  40189e:	pop    rbx
  40189f:	ret    
  4018a0:	mov    QWORD PTR [rdi],rsi
  4018a3:	jmp    401880 <__sprintf_chk@plt+0x5a0>
  4018a5:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4018b0:	endbr64 
  4018b4:	mov    rax,QWORD PTR [rdx]
  4018b7:	push   rbx
  4018b8:	mov    QWORD PTR [rsi],rax
  4018bb:	mov    rbx,rdi
  4018be:	mov    QWORD PTR [rsi+0x8],rdx
  4018c2:	test   rax,rax
  4018c5:	je     4018f0 <__sprintf_chk@plt+0x610>
  4018c7:	mov    QWORD PTR [rax+0x8],rsi
  4018cb:	mov    rdi,QWORD PTR [rbx+0x10]
  4018cf:	mov    QWORD PTR [rdx],rsi
  4018d2:	test   rdi,rdi
  4018d5:	je     4018e4 <__sprintf_chk@plt+0x604>
  4018d7:	call   401190 <free@plt>
  4018dc:	mov    QWORD PTR [rbx+0x10],0x0
  4018e4:	inc    QWORD PTR [rbx+0x18]
  4018e8:	pop    rbx
  4018e9:	ret    
  4018ea:	nop    WORD PTR [rax+rax*1+0x0]
  4018f0:	mov    QWORD PTR [rdi],rsi
  4018f3:	jmp    4018cb <__sprintf_chk@plt+0x5eb>
  4018f5:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  401900:	endbr64 
  401904:	mov    rax,QWORD PTR [rsi+0x8]
  401908:	push   rbx
  401909:	mov    QWORD PTR [rdx],rsi
  40190c:	mov    QWORD PTR [rdx+0x8],rax
  401910:	mov    rbx,rdi
  401913:	mov    QWORD PTR [rsi+0x8],rdx
  401917:	test   rax,rax
  40191a:	je     401940 <__sprintf_chk@plt+0x660>
  40191c:	mov    QWORD PTR [rax],rdx
  40191f:	mov    rdi,QWORD PTR [rbx+0x10]
  401923:	test   rdi,rdi
  401926:	je     401935 <__sprintf_chk@plt+0x655>
  401928:	call   401190 <free@plt>
  40192d:	mov    QWORD PTR [rbx+0x10],0x0
  401935:	inc    QWORD PTR [rbx+0x18]
  401939:	pop    rbx
  40193a:	ret    
  40193b:	nop    DWORD PTR [rax+rax*1+0x0]
  401940:	mov    QWORD PTR [rdi+0x8],rdx
  401944:	jmp    40191f <__sprintf_chk@plt+0x63f>
  401946:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401950:	endbr64 
  401954:	mov    rdx,QWORD PTR [rsi]
  401957:	push   rbx
  401958:	mov    rax,QWORD PTR [rsi+0x8]
  40195c:	mov    rbx,rdi
  40195f:	test   rdx,rdx
  401962:	je     4019a0 <__sprintf_chk@plt+0x6c0>
  401964:	mov    QWORD PTR [rdx+0x8],rax
  401968:	mov    rax,QWORD PTR [rsi+0x8]
  40196c:	test   rax,rax
  40196f:	je     4019a8 <__sprintf_chk@plt+0x6c8>
  401971:	mov    QWORD PTR [rax],rdx
  401974:	mov    rdi,QWORD PTR [rbx+0x10]
  401978:	mov    QWORD PTR [rsi+0x8],0x0
  401980:	mov    QWORD PTR [rsi],0x0
  401987:	test   rdi,rdi
  40198a:	je     401999 <__sprintf_chk@plt+0x6b9>
  40198c:	call   401190 <free@plt>
  401991:	mov    QWORD PTR [rbx+0x10],0x0
  401999:	dec    QWORD PTR [rbx+0x18]
  40199d:	pop    rbx
  40199e:	ret    
  40199f:	nop
  4019a0:	mov    QWORD PTR [rdi],rax
  4019a3:	test   rax,rax
  4019a6:	jne    401971 <__sprintf_chk@plt+0x691>
  4019a8:	mov    QWORD PTR [rbx+0x8],rdx
  4019ac:	jmp    401974 <__sprintf_chk@plt+0x694>
  4019ae:	xchg   ax,ax
  4019b0:	endbr64 
  4019b4:	cmp    QWORD PTR [rdi+0x10],0x0
  4019b9:	je     4019c0 <__sprintf_chk@plt+0x6e0>
  4019bb:	ret    
  4019bc:	nop    DWORD PTR [rax+0x0]
  4019c0:	mov    rax,QWORD PTR [rdi+0x18]
  4019c4:	test   rax,rax
  4019c7:	je     4019bb <__sprintf_chk@plt+0x6db>
  4019c9:	push   rbx
  4019ca:	mov    esi,0x8
  4019cf:	mov    rbx,rdi
  4019d2:	mov    rdi,rax
  4019d5:	xor    eax,eax
  4019d7:	call   401d80 <error@@Base+0x50>
  4019dc:	mov    rdx,QWORD PTR [rbx]
  4019df:	mov    QWORD PTR [rbx+0x10],rax
  4019e3:	test   rdx,rdx
  4019e6:	je     401a00 <__sprintf_chk@plt+0x720>
  4019e8:	nop    DWORD PTR [rax+rax*1+0x0]
  4019f0:	mov    QWORD PTR [rax],rdx
  4019f3:	add    rax,0x8
  4019f7:	mov    rdx,QWORD PTR [rdx+0x8]
  4019fb:	test   rdx,rdx
  4019fe:	jne    4019f0 <__sprintf_chk@plt+0x710>
  401a00:	pop    rbx
  401a01:	ret    
  401a02:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  401a0d:	nop    DWORD PTR [rax]
  401a10:	endbr64 
  401a14:	push   r12
  401a16:	push   rbp
  401a17:	push   rbx
  401a18:	mov    rbx,QWORD PTR [rdi]
  401a1b:	test   rbx,rbx
  401a1e:	je     401a4e <__sprintf_chk@plt+0x76e>
  401a20:	mov    rbp,rdi
  401a23:	mov    r12,rsi
  401a26:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401a30:	mov    rsi,rbx
  401a33:	mov    rdi,rbp
  401a36:	xor    eax,eax
  401a38:	call   401950 <__sprintf_chk@plt+0x670>
  401a3d:	mov    rdi,rbx
  401a40:	xor    eax,eax
  401a42:	call   r12
  401a45:	mov    rbx,QWORD PTR [rbp+0x0]
  401a49:	test   rbx,rbx
  401a4c:	jne    401a30 <__sprintf_chk@plt+0x750>
  401a4e:	pop    rbx
  401a4f:	pop    rbp
  401a50:	pop    r12
  401a52:	ret    
  401a53:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401a5d:	nop    DWORD PTR [rax]
  401a60:	push   rbp
  401a61:	push   rbx
  401a62:	mov    ebx,edi
  401a64:	movsx  ebx,bx
  401a67:	sub    rsp,0x78
  401a6b:	mov    rax,QWORD PTR fs:0x28
  401a74:	mov    QWORD PTR [rsp+0x68],rax
  401a79:	xor    eax,eax
  401a7b:	mov    rbp,rsp
  401a7e:	call   4011b0 <getpid@plt>
  401a83:	mov    r9d,eax
  401a86:	sub    rsp,0x8
  401a8a:	mov    rax,0x40e778
  401a91:	push   rbx
  401a92:	mov    r8,QWORD PTR [rax]
  401a95:	lea    rcx,[rip+0x2674]        # 404110 <error@@Base+0x23e0>
  401a9c:	mov    edx,0x64
  401aa1:	mov    esi,0x1
  401aa6:	mov    rdi,rbp
  401aa9:	xor    eax,eax
  401aab:	call   4012e0 <__sprintf_chk@plt>
  401ab0:	mov    rdi,rbp
  401ab3:	call   4012d0 <strdup@plt>
  401ab8:	pop    rdx
  401ab9:	pop    rcx
  401aba:	mov    rdx,QWORD PTR [rsp+0x68]
  401abf:	xor    rdx,QWORD PTR fs:0x28
  401ac8:	jne    401ad1 <__sprintf_chk@plt+0x7f1>
  401aca:	add    rsp,0x78
  401ace:	pop    rbx
  401acf:	pop    rbp
  401ad0:	ret    
  401ad1:	call   4011e0 <__stack_chk_fail@plt>
  401ad6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401ae0:	push   r12
  401ae2:	mov    rax,0x40e780
  401ae9:	mov    r12d,edi
  401aec:	push   rbp
  401aed:	push   rbx
  401aee:	mov    rdx,QWORD PTR [rax]
  401af1:	test   rdx,rdx
  401af4:	je     401afa <__sprintf_chk@plt+0x81a>
  401af6:	xor    eax,eax
  401af8:	call   rdx
  401afa:	cmp    WORD PTR [rip+0x45e2],0x0        # 4060e4 <error@@Base+0x43b4>
  401b02:	jle    401b3a <__sprintf_chk@plt+0x85a>
  401b04:	mov    ebx,0x1
  401b09:	nop    DWORD PTR [rax+0x0]
  401b10:	movsx  edi,bx
  401b13:	xor    eax,eax
  401b15:	call   401a60 <__sprintf_chk@plt+0x780>
  401b1a:	mov    rdi,rax
  401b1d:	mov    rbp,rax
  401b20:	xor    eax,eax
  401b22:	call   4011a0 <unlink@plt>
  401b27:	inc    ebx
  401b29:	mov    rdi,rbp
  401b2c:	call   401190 <free@plt>
  401b31:	cmp    bx,WORD PTR [rip+0x45ac]        # 4060e4 <error@@Base+0x43b4>
  401b38:	jle    401b10 <__sprintf_chk@plt+0x830>
  401b3a:	mov    edi,r12d
  401b3d:	call   401290 <exit@plt>
  401b42:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  401b4d:	nop    DWORD PTR [rax]
  401b50:	endbr64 
  401b54:	movzx  edx,BYTE PTR [rdi]
  401b57:	movzx  ecx,BYTE PTR [rsi]
  401b5a:	test   dl,dl
  401b5c:	je     401b83 <__sprintf_chk@plt+0x8a3>
  401b5e:	cmp    cl,dl
  401b60:	jne    401b89 <__sprintf_chk@plt+0x8a9>
  401b62:	xor    eax,eax
  401b64:	jmp    401b74 <__sprintf_chk@plt+0x894>
  401b66:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401b70:	cmp    dl,cl
  401b72:	jne    401b89 <__sprintf_chk@plt+0x8a9>
  401b74:	inc    rax
  401b77:	movzx  edx,BYTE PTR [rdi+rax*1]
  401b7b:	movzx  ecx,BYTE PTR [rsi+rax*1]
  401b7f:	test   dl,dl
  401b81:	jne    401b70 <__sprintf_chk@plt+0x890>
  401b83:	test   cl,cl
  401b85:	je     401b98 <__sprintf_chk@plt+0x8b8>
  401b87:	xor    edx,edx
  401b89:	cmp    dl,cl
  401b8b:	sbb    eax,eax
  401b8d:	or     eax,0x1
  401b90:	ret    
  401b91:	nop    DWORD PTR [rax+0x0]
  401b98:	xor    eax,eax
  401b9a:	ret    
  401b9b:	nop    DWORD PTR [rax+rax*1+0x0]
  401ba0:	endbr64 
  401ba4:	mov    rax,QWORD PTR [rip+0x4435]        # 405fe0 <error@@Base+0x42b0>
  401bab:	cmp    QWORD PTR [rax],rdi
  401bae:	je     401bc8 <__sprintf_chk@plt+0x8e8>
  401bb0:	mov    rax,QWORD PTR [rip+0x4421]        # 405fd8 <error@@Base+0x42a8>
  401bb7:	cmp    QWORD PTR [rax],rdi
  401bba:	je     401bc8 <__sprintf_chk@plt+0x8e8>
  401bbc:	jmp    4011c0 <fclose@plt>
  401bc1:	nop    DWORD PTR [rax+0x0]
  401bc8:	ret    
  401bc9:	nop    DWORD PTR [rax+0x0]
  401bd0:	endbr64 
  401bd4:	sub    rsp,0xa8
  401bdb:	mov    rsi,rdi
  401bde:	mov    rdx,rsp
  401be1:	mov    edi,0x1
  401be6:	mov    rax,QWORD PTR fs:0x28
  401bef:	mov    QWORD PTR [rsp+0x98],rax
  401bf7:	xor    eax,eax
  401bf9:	call   401250 <__xstat@plt>
  401bfe:	test   eax,eax
  401c00:	sete   al
  401c03:	mov    rcx,QWORD PTR [rsp+0x98]
  401c0b:	xor    rcx,QWORD PTR fs:0x28
  401c14:	jne    401c1e <__sprintf_chk@plt+0x93e>
  401c16:	add    rsp,0xa8
  401c1d:	ret    
  401c1e:	call   4011e0 <__stack_chk_fail@plt>
  401c23:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  401c2e:	xchg   ax,ax
  401c30:	endbr64 
  401c34:	movzx  eax,WORD PTR [rip+0x44a9]        # 4060e4 <error@@Base+0x43b4>
  401c3b:	push   rbx
  401c3c:	lea    edi,[rax+0x1]
  401c3f:	mov    WORD PTR [rip+0x449e],di        # 4060e4 <error@@Base+0x43b4>
  401c46:	xor    eax,eax
  401c48:	movsx  edi,di
  401c4b:	call   401a60 <__sprintf_chk@plt+0x780>
  401c50:	mov    rbx,rax
  401c53:	mov    rdi,rax
  401c56:	xor    eax,eax
  401c58:	call   4011a0 <unlink@plt>
  401c5d:	mov    rax,rbx
  401c60:	pop    rbx
  401c61:	ret    
  401c62:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  401c6d:	nop    DWORD PTR [rax]
  401c70:	endbr64 
  401c74:	push   rbx
  401c75:	mov    rbx,rdi
  401c78:	call   4011d0 <strlen@plt>
  401c7d:	lea    ecx,[rax-0x1]
  401c80:	movsx  rdx,cx
  401c84:	test   cx,cx
  401c87:	js     401cb3 <__sprintf_chk@plt+0x9d3>
  401c89:	cmp    BYTE PTR [rbx+rdx*1],0x2f
  401c8d:	je     401cb3 <__sprintf_chk@plt+0x9d3>
  401c8f:	sub    eax,0x2
  401c92:	movsx  rdx,ax
  401c96:	jmp    401cae <__sprintf_chk@plt+0x9ce>
  401c98:	nop    DWORD PTR [rax+rax*1+0x0]
  401ca0:	lea    rax,[rdx-0x1]
  401ca4:	cmp    BYTE PTR [rbx+rax*1+0x1],0x2f
  401ca9:	je     401cb3 <__sprintf_chk@plt+0x9d3>
  401cab:	mov    rdx,rax
  401cae:	test   dx,dx
  401cb1:	jns    401ca0 <__sprintf_chk@plt+0x9c0>
  401cb3:	lea    rax,[rbx+rdx*1+0x1]
  401cb8:	pop    rbx
  401cb9:	ret    
  401cba:	nop    WORD PTR [rax+rax*1+0x0]
  401cc0:	endbr64 
  401cc4:	push   rax
  401cc5:	pop    rax
  401cc6:	xor    edi,edi
  401cc8:	xor    eax,eax
  401cca:	sub    rsp,0x8
  401cce:	call   401ae0 <__sprintf_chk@plt+0x800>
  401cd3:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  401cde:	xchg   ax,ax
  401ce0:	push   rax
  401ce1:	pop    rax
  401ce2:	sub    rsp,0x8
  401ce6:	mov    rax,0x40e770
  401ced:	mov    rdx,QWORD PTR [rax]
  401cf0:	test   rdx,rdx
  401cf3:	je     401d00 <__sprintf_chk@plt+0xa20>
  401cf5:	xor    eax,eax
  401cf7:	call   rdx
  401cf9:	xor    eax,eax
  401cfb:	call   401cc0 <__sprintf_chk@plt+0x9e0>
  401d00:	mov    rax,0x40e778
  401d07:	mov    r8,rdi
  401d0a:	mov    rcx,QWORD PTR [rax]
  401d0d:	mov    rax,QWORD PTR [rip+0x42e4]        # 405ff8 <error@@Base+0x42c8>
  401d14:	lea    rdx,[rip+0x2403]        # 40411e <error@@Base+0x23ee>
  401d1b:	mov    rdi,QWORD PTR [rax]
  401d1e:	mov    esi,0x1
  401d23:	xor    eax,eax
  401d25:	call   4012b0 <__fprintf_chk@plt>
  401d2a:	jmp    401cf9 <__sprintf_chk@plt+0xa19>
  401d2c:	nop    DWORD PTR [rax+0x0]

0000000000401d30 <error@@Base>:
  401d30:	endbr64 
  401d34:	push   rax
  401d35:	pop    rax
  401d36:	lea    rdx,[rip+0x23f0]        # 40412d <error@@Base+0x23fd>
  401d3d:	mov    esi,0x1
  401d42:	sub    rsp,0x8
  401d46:	mov    rax,0x40e778
  401d4d:	mov    r8,rdi
  401d50:	mov    rcx,QWORD PTR [rax]
  401d53:	mov    rax,QWORD PTR [rip+0x429e]        # 405ff8 <error@@Base+0x42c8>
  401d5a:	mov    rdi,QWORD PTR [rax]
  401d5d:	xor    eax,eax
  401d5f:	call   4012b0 <__fprintf_chk@plt>
  401d64:	mov    rax,0x4060d8
  401d6b:	mov    edi,DWORD PTR [rax]
  401d6d:	xor    eax,eax
  401d6f:	call   401ae0 <__sprintf_chk@plt+0x800>
  401d74:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  401d7f:	nop
  401d80:	endbr64 
  401d84:	sub    rsp,0x8
  401d88:	call   401210 <calloc@plt>
  401d8d:	test   rax,rax
  401d90:	je     401d97 <error@@Base+0x67>
  401d92:	add    rsp,0x8
  401d96:	ret    
  401d97:	lea    rdi,[rip+0x2397]        # 404135 <error@@Base+0x2405>
  401d9e:	call   401d30 <error@@Base>
  401da3:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  401dae:	xchg   ax,ax
  401db0:	endbr64 
  401db4:	cmp    BYTE PTR [rip+0x4327],0x0        # 4060e2 <error@@Base+0x43b2>
  401dbb:	je     401dbe <error@@Base+0x8e>
  401dbd:	ret    
  401dbe:	push   rax
  401dbf:	lea    rdi,[rip+0x2389]        # 40414f <error@@Base+0x241f>
  401dc6:	xor    eax,eax
  401dc8:	mov    BYTE PTR [rip+0x4313],0x1        # 4060e2 <error@@Base+0x43b2>
  401dcf:	call   401d30 <error@@Base>
  401dd4:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  401ddf:	nop
  401de0:	endbr64 
  401de4:	push   rax
  401de5:	pop    rax
  401de6:	lea    rdx,[rip+0x2371]        # 40415e <error@@Base+0x242e>
  401ded:	sub    rsp,0x8
  401df1:	mov    rax,0x40e778
  401df8:	mov    r8,rdi
  401dfb:	mov    rcx,QWORD PTR [rax]
  401dfe:	mov    rax,QWORD PTR [rip+0x41f3]        # 405ff8 <error@@Base+0x42c8>
  401e05:	mov    r9,rsi
  401e08:	mov    rdi,QWORD PTR [rax]
  401e0b:	mov    esi,0x1
  401e10:	xor    eax,eax
  401e12:	call   4012b0 <__fprintf_chk@plt>
  401e17:	mov    rax,0x4060d8
  401e1e:	mov    edi,DWORD PTR [rax]
  401e20:	xor    eax,eax
  401e22:	call   401ae0 <__sprintf_chk@plt+0x800>
  401e27:	nop    WORD PTR [rax+rax*1+0x0]
  401e30:	endbr64 
  401e34:	test   rdi,rdi
  401e37:	je     401e80 <error@@Base+0x150>
  401e39:	push   rbp
  401e3a:	mov    rbp,rsi
  401e3d:	push   rbx
  401e3e:	mov    rbx,rdi
  401e41:	sub    rsp,0x8
  401e45:	call   401280 <fopen@plt>
  401e4a:	test   rax,rax
  401e4d:	je     401e60 <error@@Base+0x130>
  401e4f:	add    rsp,0x8
  401e53:	pop    rbx
  401e54:	pop    rbp
  401e55:	ret    
  401e56:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401e60:	cmp    BYTE PTR [rbp+0x0],0x77
  401e64:	mov    rsi,rbx
  401e67:	je     401e90 <error@@Base+0x160>
  401e69:	lea    rdi,[rip+0x2311]        # 404181 <error@@Base+0x2451>
  401e70:	xor    eax,eax
  401e72:	call   401de0 <error@@Base+0xb0>
  401e77:	nop    WORD PTR [rax+rax*1+0x0]
  401e80:	cmp    BYTE PTR [rsi],0x72
  401e83:	je     401ea0 <error@@Base+0x170>
  401e85:	mov    rax,QWORD PTR [rip+0x414c]        # 405fd8 <error@@Base+0x42a8>
  401e8c:	mov    rax,QWORD PTR [rax]
  401e8f:	ret    
  401e90:	lea    rdi,[rip+0x22d4]        # 40416b <error@@Base+0x243b>
  401e97:	call   401de0 <error@@Base+0xb0>
  401e9c:	nop    DWORD PTR [rax+0x0]
  401ea0:	mov    rax,QWORD PTR [rip+0x4139]        # 405fe0 <error@@Base+0x42b0>
  401ea7:	mov    rax,QWORD PTR [rax]
  401eaa:	ret    
  401eab:	nop    DWORD PTR [rax+rax*1+0x0]
  401eb0:	endbr64 
  401eb4:	push   r15
  401eb6:	xor    eax,eax
  401eb8:	push   r14
  401eba:	mov    r14,rsi
  401ebd:	push   r13
  401ebf:	push   r12
  401ec1:	push   rbp
  401ec2:	push   rbx
  401ec3:	sub    rsp,0x38
  401ec7:	mov    QWORD PTR [rsp+0x8],rdi
  401ecc:	mov    rdi,QWORD PTR [rsi]
  401ecf:	mov    QWORD PTR [rsp+0x28],rdx
  401ed4:	mov    QWORD PTR [rsp+0x10],rcx
  401ed9:	call   401c70 <__sprintf_chk@plt+0x990>
  401ede:	mov    rcx,0x40e778
  401ee5:	lea    rsi,[rip+0xfffffffffffffec4]        # 401db0 <error@@Base+0x80>
  401eec:	mov    edi,0x2
  401ef1:	mov    QWORD PTR [rcx],rax
  401ef4:	call   401240 <__sysv_signal@plt>
  401ef9:	lea    rsi,[rip+0xfffffffffffffeb0]        # 401db0 <error@@Base+0x80>
  401f00:	mov    edi,0xf
  401f05:	call   401240 <__sysv_signal@plt>
  401f0a:	mov    r9,QWORD PTR [rsp+0x8]
  401f0f:	mov    r15d,DWORD PTR [r9]
  401f12:	cmp    r15d,0x1
  401f16:	je     4020e0 <error@@Base+0x3b0>
  401f1c:	mov    rdx,QWORD PTR [rsp+0x10]
  401f21:	jle    4020ec <error@@Base+0x3bc>
  401f27:	mov    r8d,r15d
  401f2a:	xor    r12d,r12d
  401f2d:	mov    r15,rdx
  401f30:	mov    r13d,0x1
  401f36:	mov    ebx,0x1
  401f3b:	mov    rdx,r14
  401f3e:	jmp    401f5a <error@@Base+0x22a>
  401f40:	movsx  rax,r12w
  401f44:	mov    QWORD PTR [rdx+rax*8],rbp
  401f48:	inc    ebx
  401f4a:	inc    r12d
  401f4d:	movsx  r13d,bx
  401f51:	cmp    r13d,r8d
  401f54:	jge    402080 <error@@Base+0x350>
  401f5a:	movsx  rax,bx
  401f5e:	mov    rbp,QWORD PTR [rdx+rax*8]
  401f62:	lea    r10,[rax*8+0x0]
  401f6a:	cmp    BYTE PTR [rbp+0x0],0x2d
  401f6e:	jne    401f40 <error@@Base+0x210>
  401f70:	movzx  r14d,BYTE PTR [rbp+0x1]
  401f75:	mov    QWORD PTR [rsp+0x20],r10
  401f7a:	test   r14b,r14b
  401f7d:	je     401f40 <error@@Base+0x210>
  401f7f:	mov    rdi,rbp
  401f82:	mov    DWORD PTR [rsp+0x1c],r8d
  401f87:	mov    QWORD PTR [rsp+0x10],rdx
  401f8c:	mov    QWORD PTR [rsp+0x8],r9
  401f91:	call   4011d0 <strlen@plt>
  401f96:	cmp    rax,0x6
  401f9a:	mov    ecx,0x6
  401f9f:	cmovle rcx,rax
  401fa3:	lea    rsi,[rip+0x21eb]        # 404195 <error@@Base+0x2465>
  401faa:	cmp    rcx,rcx
  401fad:	mov    rdi,rbp
  401fb0:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  401fb2:	seta   al
  401fb5:	sbb    al,0x0
  401fb7:	test   al,al
  401fb9:	je     402110 <error@@Base+0x3e0>
  401fbf:	mov    r8d,DWORD PTR [rsp+0x1c]
  401fc4:	inc    r13d
  401fc7:	xor    eax,eax
  401fc9:	cmp    r13d,r8d
  401fcc:	mov    r9,QWORD PTR [rsp+0x8]
  401fd1:	mov    rdx,QWORD PTR [rsp+0x10]
  401fd6:	jge    401fe2 <error@@Base+0x2b2>
  401fd8:	mov    r10,QWORD PTR [rsp+0x20]
  401fdd:	mov    rax,QWORD PTR [rdx+r10*1+0x8]
  401fe2:	test   r15,r15
  401fe5:	je     40201b <error@@Base+0x2eb>
  401fe7:	movzx  ecx,BYTE PTR [r15]
  401feb:	test   cl,cl
  401fed:	je     40201b <error@@Base+0x2eb>
  401fef:	cmp    r14b,cl
  401ff2:	je     402030 <error@@Base+0x300>
  401ff4:	xor    ecx,ecx
  401ff6:	jmp    402005 <error@@Base+0x2d5>
  401ff8:	nop    DWORD PTR [rax+rax*1+0x0]
  402000:	cmp    r14b,dil
  402003:	je     402038 <error@@Base+0x308>
  402005:	inc    ecx
  402007:	movsx  rsi,cx
  40200b:	lea    rsi,[rsi+rsi*2]
  40200f:	lea    rsi,[r15+rsi*8]
  402013:	movzx  edi,BYTE PTR [rsi]
  402016:	test   dil,dil
  402019:	jne    402000 <error@@Base+0x2d0>
  40201b:	mov    rsi,rbp
  40201e:	lea    rdi,[rip+0x2176]        # 40419b <error@@Base+0x246b>
  402025:	xor    eax,eax
  402027:	call   401de0 <error@@Base+0xb0>
  40202c:	nop    DWORD PTR [rax+0x0]
  402030:	mov    rsi,r15
  402033:	nop    DWORD PTR [rax+rax*1+0x0]
  402038:	mov    rcx,QWORD PTR [rsi+0x8]
  40203c:	test   rcx,rcx
  40203f:	je     4020b0 <error@@Base+0x380>
  402041:	cmp    BYTE PTR [rbp+0x2],0x0
  402045:	jne    4020a0 <error@@Base+0x370>
  402047:	test   rax,rax
  40204a:	je     4020f8 <error@@Base+0x3c8>
  402050:	cmp    QWORD PTR [rcx],0x0
  402054:	jne    402120 <error@@Base+0x3f0>
  40205a:	mov    QWORD PTR [rcx],rax
  40205d:	mov    eax,ebx
  40205f:	inc    ebx
  402061:	cmp    BYTE PTR [rbp+0x2],0x0
  402065:	jne    401f4d <error@@Base+0x21d>
  40206b:	lea    ebx,[rax+0x2]
  40206e:	movsx  r13d,bx
  402072:	cmp    r13d,r8d
  402075:	jl     401f5a <error@@Base+0x22a>
  40207b:	nop    DWORD PTR [rax+rax*1+0x0]
  402080:	movsx  r12d,r12w
  402084:	mov    DWORD PTR [r9],r12d
  402087:	add    rsp,0x38
  40208b:	pop    rbx
  40208c:	pop    rbp
  40208d:	pop    r12
  40208f:	pop    r13
  402091:	pop    r14
  402093:	pop    r15
  402095:	ret    
  402096:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4020a0:	cmp    QWORD PTR [rcx],0x0
  4020a4:	jne    402120 <error@@Base+0x3f0>
  4020a6:	lea    rax,[rbp+0x2]
  4020aa:	jmp    40205a <error@@Base+0x32a>
  4020ac:	nop    DWORD PTR [rax+0x0]
  4020b0:	mov    rax,QWORD PTR [rsi+0x10]
  4020b4:	test   rax,rax
  4020b7:	je     40201b <error@@Base+0x2eb>
  4020bd:	cmp    BYTE PTR [rbp+0x2],0x0
  4020c1:	jne    40201b <error@@Base+0x2eb>
  4020c7:	cmp    BYTE PTR [rax],0x0
  4020ca:	jne    402120 <error@@Base+0x3f0>
  4020cc:	mov    BYTE PTR [rax],0x1
  4020cf:	inc    ebx
  4020d1:	mov    r8d,DWORD PTR [r9]
  4020d4:	jmp    401f4d <error@@Base+0x21d>
  4020d9:	nop    DWORD PTR [rax+0x0]
  4020e0:	mov    rax,0x4060dc
  4020e7:	cmp    BYTE PTR [rax],0x0
  4020ea:	jne    402110 <error@@Base+0x3e0>
  4020ec:	xor    r12d,r12d
  4020ef:	jmp    402084 <error@@Base+0x354>
  4020f1:	nop    DWORD PTR [rax+0x0]
  4020f8:	mov    rax,QWORD PTR [rsi+0x10]
  4020fc:	test   rax,rax
  4020ff:	jne    4020c7 <error@@Base+0x397>
  402101:	jmp    40201b <error@@Base+0x2eb>
  402106:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402110:	mov    rdi,QWORD PTR [rsp+0x28]
  402115:	xor    eax,eax
  402117:	call   401ce0 <__sprintf_chk@plt+0xa00>
  40211c:	nop    DWORD PTR [rax+0x0]
  402120:	mov    rsi,rbp
  402123:	lea    rdi,[rip+0x2080]        # 4041aa <error@@Base+0x247a>
  40212a:	xor    eax,eax
  40212c:	call   401de0 <error@@Base+0xb0>
  402131:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40213c:	nop    DWORD PTR [rax+0x0]
  402140:	endbr64 
  402144:	mov    rax,0x40e778
  40214b:	mov    r8,rdi
  40214e:	mov    rcx,QWORD PTR [rax]
  402151:	mov    rax,QWORD PTR [rip+0x3ea0]        # 405ff8 <error@@Base+0x42c8>
  402158:	mov    r9,rsi
  40215b:	mov    rdi,QWORD PTR [rax]
  40215e:	lea    rdx,[rip+0x1ff9]        # 40415e <error@@Base+0x242e>
  402165:	mov    esi,0x1
  40216a:	xor    eax,eax
  40216c:	jmp    4012b0 <__fprintf_chk@plt>
  402171:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40217b:	nop    DWORD PTR [rax+rax*1+0x0]
  402180:	push   rbx
  402181:	mov    rdx,rdi
  402184:	mov    rbx,rsi
  402187:	lea    rdi,[rip+0x3f72]        # 406100 <error@@Base+0x43d0>
  40218e:	mov    esi,0x63
  402193:	call   401200 <fgets@plt>
  402198:	xor    edx,edx
  40219a:	test   rax,rax
  40219d:	je     4021bd <error@@Base+0x48d>
  40219f:	mov    rdx,rbx
  4021a2:	xor    eax,eax
  4021a4:	lea    rsi,[rip+0x2014]        # 4041bf <error@@Base+0x248f>
  4021ab:	lea    rdi,[rip+0x3f4e]        # 406100 <error@@Base+0x43d0>
  4021b2:	call   401260 <__isoc99_sscanf@plt>
  4021b7:	cmp    eax,0x1
  4021ba:	sete   dl
  4021bd:	mov    eax,edx
  4021bf:	pop    rbx
  4021c0:	ret    
  4021c1:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4021cc:	nop    DWORD PTR [rax+0x0]
  4021d0:	push   rbp
  4021d1:	mov    rbp,rdx
  4021d4:	mov    rdx,rdi
  4021d7:	push   rbx
  4021d8:	lea    rdi,[rip+0x3f21]        # 406100 <error@@Base+0x43d0>
  4021df:	mov    rbx,rsi
  4021e2:	sub    rsp,0x8
  4021e6:	mov    esi,0x63
  4021eb:	call   401200 <fgets@plt>
  4021f0:	xor    edx,edx
  4021f2:	test   rax,rax
  4021f5:	je     402218 <error@@Base+0x4e8>
  4021f7:	mov    rdx,rbx
  4021fa:	xor    eax,eax
  4021fc:	mov    rcx,rbp
  4021ff:	lea    rsi,[rip+0x1fb5]        # 4041bb <error@@Base+0x248b>
  402206:	lea    rdi,[rip+0x3ef3]        # 406100 <error@@Base+0x43d0>
  40220d:	call   401260 <__isoc99_sscanf@plt>
  402212:	cmp    eax,0x2
  402215:	sete   dl
  402218:	add    rsp,0x8
  40221c:	pop    rbx
  40221d:	mov    eax,edx
  40221f:	pop    rbp
  402220:	ret    
  402221:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40222c:	nop    DWORD PTR [rax+0x0]
  402230:	endbr64 
  402234:	mov    rsi,QWORD PTR [rsi+0x10]
  402238:	mov    rdi,QWORD PTR [rdi+0x10]
  40223c:	xor    eax,eax
  40223e:	jmp    401b50 <__sprintf_chk@plt+0x870>
  402243:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40224e:	xchg   ax,ax
  402250:	test   rsi,rsi
  402253:	jne    402270 <error@@Base+0x540>
  402255:	mov    rcx,rdi
  402258:	mov    edx,0x8
  40225d:	mov    esi,0x1
  402262:	lea    rdi,[rip+0x1f5a]        # 4041c3 <error@@Base+0x2493>
  402269:	jmp    4012a0 <fwrite@plt>
  40226e:	xchg   ax,ax
  402270:	mov    rax,rsi
  402273:	sub    rax,QWORD PTR [rdx]
  402276:	vxorpd xmm0,xmm0,xmm0
  40227a:	vcvtsi2sd xmm0,xmm0,rax
  40227f:	vxorpd xmm1,xmm1,xmm1
  402283:	vcvtsi2sd xmm1,xmm1,rsi
  402288:	lea    rdx,[rip+0x1f3d]        # 4041cc <error@@Base+0x249c>
  40228f:	vmulsd xmm0,xmm0,QWORD PTR [rip+0x1e51]        # 4040e8 <error@@Base+0x23b8>
  402297:	mov    esi,0x1
  40229c:	mov    eax,0x1
  4022a1:	vdivsd xmm0,xmm0,xmm1
  4022a5:	jmp    4012b0 <__fprintf_chk@plt>
  4022aa:	nop    WORD PTR [rax+rax*1+0x0]
  4022b0:	push   rbp
  4022b1:	mov    rbp,rdi
  4022b4:	push   rbx
  4022b5:	sub    rsp,0x8
  4022b9:	test   rsi,rsi
  4022bc:	je     402310 <error@@Base+0x5e0>
  4022be:	mov    r8,QWORD PTR [rsi+0x8]
  4022c2:	mov    rcx,QWORD PTR [rsi]
  4022c5:	mov    rbx,rsi
  4022c8:	lea    rdx,[rip+0x1f03]        # 4041d2 <error@@Base+0x24a2>
  4022cf:	mov    esi,0x1
  4022d4:	xor    eax,eax
  4022d6:	call   4012b0 <__fprintf_chk@plt>
  4022db:	mov    rsi,QWORD PTR [rbx]
  4022de:	lea    rdx,[rbx+0x8]
  4022e2:	mov    rdi,rbp
  4022e5:	xor    eax,eax
  4022e7:	call   402250 <error@@Base+0x520>
  4022ec:	add    rsp,0x8
  4022f0:	pop    rbx
  4022f1:	mov    rcx,rbp
  4022f4:	mov    edx,0x3
  4022f9:	mov    esi,0x1
  4022fe:	lea    rdi,[rip+0x1ef3]        # 4041f8 <error@@Base+0x24c8>
  402305:	pop    rbp
  402306:	jmp    4012a0 <fwrite@plt>
  40230b:	nop    DWORD PTR [rax+rax*1+0x0]
  402310:	mov    rcx,rdi
  402313:	mov    edx,0x1a
  402318:	mov    esi,0x1
  40231d:	lea    rdi,[rip+0x1eb9]        # 4041dd <error@@Base+0x24ad>
  402324:	call   4012a0 <fwrite@plt>
  402329:	jmp    4022ec <error@@Base+0x5bc>
  40232b:	nop    DWORD PTR [rax+rax*1+0x0]
  402330:	push   r15
  402332:	xor    eax,eax
  402334:	mov    r15,rsi
  402337:	push   r14
  402339:	mov    r14d,edx
  40233c:	push   r13
  40233e:	mov    r13d,r8d
  402341:	push   r12
  402343:	lea    r12,[r15+0x10]
  402347:	mov    r15d,0x1
  40234d:	push   rbp
  40234e:	lea    rbp,[rip+0x1eba]        # 40420f <error@@Base+0x24df>
  402355:	push   rbx
  402356:	mov    rbx,rdi
  402359:	sub    rsp,0x28
  40235d:	mov    QWORD PTR [rsp+0x10],rsi
  402362:	mov    DWORD PTR [rsp+0x1c],edx
  402366:	mov    WORD PTR [rsp+0x1a],dx
  40236b:	mov    esi,0x1
  402370:	lea    rdx,[rip+0x1e93]        # 40420a <error@@Base+0x24da>
  402377:	mov    DWORD PTR [rsp+0xc],r9d
  40237c:	call   4012b0 <__fprintf_chk@plt>
  402381:	xor    esi,esi
  402383:	xor    eax,eax
  402385:	mov    rdi,rbx
  402388:	call   4022b0 <error@@Base+0x580>
  40238d:	test   r13b,r13b
  402390:	lea    rax,[rip+0x1e6c]        # 404203 <error@@Base+0x24d3>
  402397:	lea    rcx,[rip+0x1e5e]        # 4041fc <error@@Base+0x24cc>
  40239e:	cmove  rcx,rax
  4023a2:	lea    rdx,[rip+0x1e62]        # 40420b <error@@Base+0x24db>
  4023a9:	mov    esi,0x1
  4023ae:	mov    rdi,rbx
  4023b1:	xor    eax,eax
  4023b3:	call   4012b0 <__fprintf_chk@plt>
  4023b8:	mov    eax,r14d
  4023bb:	lea    r10d,[rax-0x1]
  4023bf:	movzx  r10d,r10w
  4023c3:	lea    r14,[r10+0x2]
  4023c7:	nop    WORD PTR [rax+rax*1+0x0]
  4023d0:	cmp    QWORD PTR [r12],0x0
  4023d5:	jle    4023f9 <error@@Base+0x6c9>
  4023d7:	mov    rsi,r12
  4023da:	mov    rdi,rbx
  4023dd:	xor    eax,eax
  4023df:	call   4022b0 <error@@Base+0x580>
  4023e4:	mov    ecx,r15d
  4023e7:	mov    rdx,rbp
  4023ea:	mov    esi,0x1
  4023ef:	mov    rdi,rbx
  4023f2:	xor    eax,eax
  4023f4:	call   4012b0 <__fprintf_chk@plt>
  4023f9:	inc    r15
  4023fc:	add    r12,0x10
  402400:	cmp    r14,r15
  402403:	jne    4023d0 <error@@Base+0x6a0>
  402405:	test   r13b,r13b
  402408:	je     402422 <error@@Base+0x6f2>
  40240a:	movsx  rsi,WORD PTR [rsp+0x1a]
  402410:	inc    rsi
  402413:	shl    rsi,0x4
  402417:	add    rsi,QWORD PTR [rsp+0x10]
  40241c:	cmp    QWORD PTR [rsi],0x0
  402420:	jg     402440 <error@@Base+0x710>
  402422:	cmp    BYTE PTR [rsp+0xc],0x0
  402427:	jne    40246c <error@@Base+0x73c>
  402429:	add    rsp,0x28
  40242d:	pop    rbx
  40242e:	pop    rbp
  40242f:	pop    r12
  402431:	pop    r13
  402433:	pop    r14
  402435:	pop    r15
  402437:	ret    
  402438:	nop    DWORD PTR [rax+rax*1+0x0]
  402440:	xor    eax,eax
  402442:	mov    rdi,rbx
  402445:	call   4022b0 <error@@Base+0x580>
  40244a:	movsx  ecx,WORD PTR [rsp+0x1c]
  40244f:	xor    eax,eax
  402451:	lea    rdx,[rip+0x1dc0]        # 404218 <error@@Base+0x24e8>
  402458:	mov    esi,0x1
  40245d:	mov    rdi,rbx
  402460:	call   4012b0 <__fprintf_chk@plt>
  402465:	cmp    BYTE PTR [rsp+0xc],0x0
  40246a:	je     402429 <error@@Base+0x6f9>
  40246c:	mov    rsi,QWORD PTR [rsp+0x10]
  402471:	mov    rdi,rbx
  402474:	xor    eax,eax
  402476:	call   4022b0 <error@@Base+0x580>
  40247b:	add    rsp,0x28
  40247f:	mov    rcx,rbx
  402482:	pop    rbx
  402483:	pop    rbp
  402484:	pop    r12
  402486:	pop    r13
  402488:	pop    r14
  40248a:	mov    edx,0x7
  40248f:	mov    esi,0x1
  402494:	lea    rdi,[rip+0x1d86]        # 404221 <error@@Base+0x24f1>
  40249b:	pop    r15
  40249d:	jmp    4012a0 <fwrite@plt>
  4024a2:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4024ad:	nop    DWORD PTR [rax]
  4024b0:	push   r13
  4024b2:	xor    eax,eax
  4024b4:	push   r12
  4024b6:	mov    r12,rdi
  4024b9:	mov    rdi,rsi
  4024bc:	push   rbp
  4024bd:	mov    rbp,rsi
  4024c0:	push   rbx
  4024c1:	mov    rbx,rdx
  4024c4:	sub    rsp,0x8
  4024c8:	call   402f50 <error@@Base+0x1220>
  4024cd:	mov    rsi,QWORD PTR [rbp+0x3ee0]
  4024d4:	mov    rdi,QWORD PTR [rbp+0x3ee8]
  4024db:	xor    eax,eax
  4024dd:	lea    rdx,[rip+0xfffffffffffffd4c]        # 402230 <error@@Base+0x500>
  4024e4:	call   402d40 <error@@Base+0x1010>
  4024e9:	mov    rcx,rbx
  4024ec:	lea    rdx,[rip+0x1d17]        # 40420a <error@@Base+0x24da>
  4024f3:	mov    esi,0x1
  4024f8:	mov    rdi,r12
  4024fb:	xor    eax,eax
  4024fd:	call   4012b0 <__fprintf_chk@plt>
  402502:	xor    esi,esi
  402504:	xor    eax,eax
  402506:	mov    rdi,r12
  402509:	call   4022b0 <error@@Base+0x580>
  40250e:	mov    rsi,r12
  402511:	mov    edi,0xa
  402516:	call   4011f0 <fputc@plt>
  40251b:	cmp    QWORD PTR [rbp+0x3ee8],0x0
  402523:	jle    402576 <error@@Base+0x846>
  402525:	xor    ebx,ebx
  402527:	lea    r13,[rip+0x1cdd]        # 40420b <error@@Base+0x24db>
  40252e:	xchg   ax,ax
  402530:	mov    rax,QWORD PTR [rbp+0x3ee0]
  402537:	mov    rdi,r12
  40253a:	mov    rsi,QWORD PTR [rax+rbx*8]
  40253e:	xor    eax,eax
  402540:	add    rsi,0x18
  402544:	call   4022b0 <error@@Base+0x580>
  402549:	mov    rax,QWORD PTR [rbp+0x3ee0]
  402550:	mov    rdx,r13
  402553:	mov    rax,QWORD PTR [rax+rbx*8]
  402557:	mov    esi,0x1
  40255c:	mov    rcx,QWORD PTR [rax+0x10]
  402560:	mov    rdi,r12
  402563:	xor    eax,eax
  402565:	inc    rbx
  402568:	call   4012b0 <__fprintf_chk@plt>
  40256d:	cmp    QWORD PTR [rbp+0x3ee8],rbx
  402574:	jg     402530 <error@@Base+0x800>
  402576:	add    rsp,0x8
  40257a:	pop    rbx
  40257b:	pop    rbp
  40257c:	pop    r12
  40257e:	pop    r13
  402580:	ret    
  402581:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40258c:	nop    DWORD PTR [rax+0x0]
  402590:	endbr64 
  402594:	add    QWORD PTR [rdi],rsi
  402597:	add    QWORD PTR [rdi+0x8],rdx
  40259b:	ret    
  40259c:	nop    DWORD PTR [rax+0x0]
  4025a0:	push   r15
  4025a2:	mov    rdx,rdi
  4025a5:	push   r14
  4025a7:	push   r13
  4025a9:	push   r12
  4025ab:	push   rbp
  4025ac:	mov    rbp,rsi
  4025af:	mov    esi,0x63
  4025b4:	push   rbx
  4025b5:	mov    rbx,rdi
  4025b8:	lea    rdi,[rip+0x3b41]        # 406100 <error@@Base+0x43d0>
  4025bf:	sub    rsp,0x28
  4025c3:	mov    rax,QWORD PTR fs:0x28
  4025cc:	mov    QWORD PTR [rsp+0x18],rax
  4025d1:	xor    eax,eax
  4025d3:	call   401200 <fgets@plt>
  4025d8:	test   rax,rax
  4025db:	je     402690 <error@@Base+0x960>
  4025e1:	mov    rdx,rbx
  4025e4:	mov    esi,0x63
  4025e9:	lea    rdi,[rip+0x3b10]        # 406100 <error@@Base+0x43d0>
  4025f0:	call   401200 <fgets@plt>
  4025f5:	test   rax,rax
  4025f8:	je     402690 <error@@Base+0x960>
  4025fe:	xor    r14d,r14d
  402601:	lea    r13,[rsp+0x10]
  402606:	lea    r12,[rsp+0x8]
  40260b:	lea    r15,[rip+0x1c0f]        # 404221 <error@@Base+0x24f1>
  402612:	jmp    402632 <error@@Base+0x902>
  402614:	nop    DWORD PTR [rax+0x0]
  402618:	shl    rax,0x4
  40261c:	mov    rsi,QWORD PTR [rsp+0x8]
  402621:	lea    rdi,[rbp+rax*1+0x0]
  402626:	mov    rdx,QWORD PTR [rsp+0x10]
  40262b:	xor    eax,eax
  40262d:	call   402590 <error@@Base+0x860>
  402632:	xor    eax,eax
  402634:	mov    rdx,r13
  402637:	mov    rsi,r12
  40263a:	mov    rdi,rbx
  40263d:	call   4021d0 <error@@Base+0x4a0>
  402642:	test   al,al
  402644:	je     402693 <error@@Base+0x963>
  402646:	mov    edx,0xa
  40264b:	xor    esi,esi
  40264d:	lea    rdi,[rip+0x3ac9]        # 40611d <error@@Base+0x43ed>
  402654:	call   401230 <strtol@plt>
  402659:	cdqe   
  40265b:	test   rax,rax
  40265e:	jne    402618 <error@@Base+0x8e8>
  402660:	lea    rsi,[rip+0x3ab6]        # 40611d <error@@Base+0x43ed>
  402667:	mov    rdi,r15
  40266a:	mov    ecx,0x8
  40266f:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  402671:	mov    rsi,QWORD PTR [rsp+0x8]
  402676:	lea    rdi,[rbp+0xb0]
  40267d:	seta   al
  402680:	sbb    al,0x0
  402682:	test   al,al
  402684:	jne    402626 <error@@Base+0x8f6>
  402686:	mov    rdi,rbp
  402689:	mov    r14,rsi
  40268c:	jmp    402626 <error@@Base+0x8f6>
  40268e:	xchg   ax,ax
  402690:	xor    r14d,r14d
  402693:	mov    rcx,QWORD PTR [rsp+0x18]
  402698:	xor    rcx,QWORD PTR fs:0x28
  4026a1:	mov    rax,r14
  4026a4:	jne    4026b5 <error@@Base+0x985>
  4026a6:	add    rsp,0x28
  4026aa:	pop    rbx
  4026ab:	pop    rbp
  4026ac:	pop    r12
  4026ae:	pop    r13
  4026b0:	pop    r14
  4026b2:	pop    r15
  4026b4:	ret    
  4026b5:	call   4011e0 <__stack_chk_fail@plt>
  4026ba:	nop    WORD PTR [rax+rax*1+0x0]
  4026c0:	endbr64 
  4026c4:	push   r14
  4026c6:	xor    eax,eax
  4026c8:	mov    r14,rcx
  4026cb:	push   r13
  4026cd:	mov    r13,rdx
  4026d0:	push   r12
  4026d2:	mov    r12,rsi
  4026d5:	push   rbp
  4026d6:	mov    rbp,rdi
  4026d9:	push   rbx
  4026da:	call   402dc0 <error@@Base+0x1090>
  4026df:	mov    rbx,rax
  4026e2:	test   rax,rax
  4026e5:	je     402700 <error@@Base+0x9d0>
  4026e7:	lea    rdi,[rbx+0x18]
  4026eb:	pop    rbx
  4026ec:	pop    rbp
  4026ed:	pop    r12
  4026ef:	mov    rsi,r13
  4026f2:	pop    r13
  4026f4:	mov    rdx,r14
  4026f7:	xor    eax,eax
  4026f9:	pop    r14
  4026fb:	jmp    402590 <error@@Base+0x860>
  402700:	mov    esi,0x28
  402705:	mov    edi,0x1
  40270a:	xor    eax,eax
  40270c:	call   401d80 <error@@Base+0x50>
  402711:	mov    rdi,r12
  402714:	mov    rbx,rax
  402717:	call   4012d0 <strdup@plt>
  40271c:	mov    QWORD PTR [rbx+0x10],rax
  402720:	mov    rsi,rbx
  402723:	mov    rdi,rbp
  402726:	xor    eax,eax
  402728:	call   402e50 <error@@Base+0x1120>
  40272d:	jmp    4026e7 <error@@Base+0x9b7>
  40272f:	nop
  402730:	push   r13
  402732:	mov    rdx,rdi
  402735:	push   r12
  402737:	push   rbp
  402738:	mov    rbp,rsi
  40273b:	mov    esi,0x63
  402740:	push   rbx
  402741:	mov    rbx,rdi
  402744:	lea    rdi,[rip+0x39b5]        # 406100 <error@@Base+0x43d0>
  40274b:	sub    rsp,0x28
  40274f:	mov    rax,QWORD PTR fs:0x28
  402758:	mov    QWORD PTR [rsp+0x18],rax
  40275d:	xor    eax,eax
  40275f:	call   401200 <fgets@plt>
  402764:	test   rax,rax
  402767:	je     402810 <error@@Base+0xae0>
  40276d:	mov    rdx,rbx
  402770:	mov    esi,0x63
  402775:	lea    rdi,[rip+0x3984]        # 406100 <error@@Base+0x43d0>
  40277c:	call   401200 <fgets@plt>
  402781:	test   rax,rax
  402784:	je     402810 <error@@Base+0xae0>
  40278a:	lea    r13,[rsp+0x10]
  40278f:	lea    r12,[rsp+0x8]
  402794:	jmp    4027fc <error@@Base+0xacc>
  402796:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4027a0:	lea    rdx,[rip+0x3959]        # 406100 <error@@Base+0x43d0>
  4027a7:	mov    ecx,DWORD PTR [rdx]
  4027a9:	add    rdx,0x4
  4027ad:	lea    eax,[rcx-0x1010101]
  4027b3:	andn   eax,ecx,eax
  4027b8:	and    eax,0x80808080
  4027bd:	je     4027a7 <error@@Base+0xa77>
  4027bf:	mov    ecx,eax
  4027c1:	shr    ecx,0x10
  4027c4:	test   eax,0x8080
  4027c9:	cmove  eax,ecx
  4027cc:	lea    rcx,[rdx+0x2]
  4027d0:	cmove  rdx,rcx
  4027d4:	mov    esi,eax
  4027d6:	add    sil,al
  4027d9:	sbb    rdx,0x3
  4027dd:	mov    BYTE PTR [rdx-0x1],0x0
  4027e1:	mov    rcx,QWORD PTR [rsp+0x10]
  4027e6:	mov    rdx,QWORD PTR [rsp+0x8]
  4027eb:	lea    rsi,[rip+0x392b]        # 40611d <error@@Base+0x43ed>
  4027f2:	mov    rdi,rbp
  4027f5:	xor    eax,eax
  4027f7:	call   4026c0 <error@@Base+0x990>
  4027fc:	xor    eax,eax
  4027fe:	mov    rdx,r13
  402801:	mov    rsi,r12
  402804:	mov    rdi,rbx
  402807:	call   4021d0 <error@@Base+0x4a0>
  40280c:	test   al,al
  40280e:	jne    4027a0 <error@@Base+0xa70>
  402810:	mov    rax,QWORD PTR [rsp+0x18]
  402815:	xor    rax,QWORD PTR fs:0x28
  40281e:	jne    40282b <error@@Base+0xafb>
  402820:	add    rsp,0x28
  402824:	pop    rbx
  402825:	pop    rbp
  402826:	pop    r12
  402828:	pop    r13
  40282a:	ret    
  40282b:	call   4011e0 <__stack_chk_fail@plt>
  402830:	endbr64 
  402834:	push   r13
  402836:	mov    r13,rsi
  402839:	lea    rsi,[rip+0x19ef]        # 40422f <error@@Base+0x24ff>
  402840:	push   r12
  402842:	push   rbp
  402843:	mov    rbp,rdi
  402846:	mov    rdi,r13
  402849:	push   rbx
  40284a:	sub    rsp,0x28
  40284e:	mov    rax,QWORD PTR fs:0x28
  402857:	mov    QWORD PTR [rsp+0x18],rax
  40285c:	xor    eax,eax
  40285e:	call   401e30 <error@@Base+0x100>
  402863:	mov    rdx,rax
  402866:	mov    esi,0x63
  40286b:	lea    rdi,[rip+0x388e]        # 406100 <error@@Base+0x43d0>
  402872:	mov    rbx,rax
  402875:	call   401200 <fgets@plt>
  40287a:	test   rax,rax
  40287d:	je     4029f7 <error@@Base+0xcc7>
  402883:	lea    r12,[rip+0x3876]        # 406100 <error@@Base+0x43d0>
  40288a:	mov    ecx,0x2d
  40288f:	lea    rdi,[rip+0x1a02]        # 404298 <error@@Base+0x2568>
  402896:	mov    rsi,r12
  402899:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  40289b:	seta   al
  40289e:	sbb    al,0x0
  4028a0:	test   al,al
  4028a2:	jne    4029f7 <error@@Base+0xcc7>
  4028a8:	mov    rdx,rbx
  4028ab:	mov    esi,0x63
  4028b0:	mov    rdi,r12
  4028b3:	call   401200 <fgets@plt>
  4028b8:	test   rax,rax
  4028bb:	je     4029f7 <error@@Base+0xcc7>
  4028c1:	mov    ecx,0x30
  4028c6:	lea    rdi,[rip+0x19fb]        # 4042c8 <error@@Base+0x2598>
  4028cd:	mov    rsi,r12
  4028d0:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  4028d2:	seta   al
  4028d5:	sbb    al,0x0
  4028d7:	test   al,al
  4028d9:	jne    4029f7 <error@@Base+0xcc7>
  4028df:	lea    rsi,[rsp+0x8]
  4028e4:	mov    rdi,rbx
  4028e7:	call   402180 <error@@Base+0x450>
  4028ec:	test   al,al
  4028ee:	je     4029f7 <error@@Base+0xcc7>
  4028f4:	xor    eax,eax
  4028f6:	lea    rsi,[rsp+0x10]
  4028fb:	mov    rdi,rbx
  4028fe:	call   402180 <error@@Base+0x450>
  402903:	test   al,al
  402905:	je     4029f7 <error@@Base+0xcc7>
  40290b:	mov    rdx,rbx
  40290e:	mov    esi,0x63
  402913:	mov    rdi,r12
  402916:	call   401200 <fgets@plt>
  40291b:	test   rax,rax
  40291e:	je     4029f7 <error@@Base+0xcc7>
  402924:	mov    rdx,rbx
  402927:	mov    esi,0x63
  40292c:	mov    rdi,r12
  40292f:	call   401200 <fgets@plt>
  402934:	test   rax,rax
  402937:	je     4029f7 <error@@Base+0xcc7>
  40293d:	mov    rdx,QWORD PTR [rsp+0x10]
  402942:	mov    rsi,QWORD PTR [rsp+0x8]
  402947:	xor    eax,eax
  402949:	mov    rdi,rbp
  40294c:	call   402590 <error@@Base+0x860>
  402951:	lea    rsi,[rbp+0x10]
  402955:	mov    rdi,rbx
  402958:	xor    eax,eax
  40295a:	call   4025a0 <error@@Base+0x870>
  40295f:	mov    r13,rax
  402962:	lea    rsi,[rbp+0x340]
  402969:	mov    rdi,rbx
  40296c:	xor    eax,eax
  40296e:	call   4025a0 <error@@Base+0x870>
  402973:	mov    r12,rax
  402976:	lea    rsi,[rbp+0x670]
  40297d:	xor    eax,eax
  40297f:	mov    rdi,rbx
  402982:	call   4025a0 <error@@Base+0x870>
  402987:	cmp    QWORD PTR [rsp+0x8],0x0
  40298d:	jg     4029b8 <error@@Base+0xc88>
  40298f:	xor    eax,eax
  402991:	mov    rdi,rbx
  402994:	call   401ba0 <__sprintf_chk@plt+0x8c0>
  402999:	mov    rax,QWORD PTR [rsp+0x18]
  40299e:	xor    rax,QWORD PTR fs:0x28
  4029a7:	jne    402a16 <error@@Base+0xce6>
  4029a9:	add    rsp,0x28
  4029ad:	pop    rbx
  4029ae:	pop    rbp
  4029af:	pop    r12
  4029b1:	pop    r13
  4029b3:	ret    
  4029b4:	nop    DWORD PTR [rax+0x0]
  4029b8:	xor    eax,eax
  4029ba:	lea    rsi,[rbp+0x730]
  4029c1:	mov    rdi,rbx
  4029c4:	call   4025a0 <error@@Base+0x870>
  4029c9:	test   r13,r13
  4029cc:	jle    4029df <error@@Base+0xcaf>
  4029ce:	lea    rsi,[rbp+0x7c0]
  4029d5:	mov    rdi,rbx
  4029d8:	xor    eax,eax
  4029da:	call   402730 <error@@Base+0xa00>
  4029df:	test   r12,r12
  4029e2:	jle    40298f <error@@Base+0xc5f>
  4029e4:	lea    rsi,[rbp+0x46b0]
  4029eb:	mov    rdi,rbx
  4029ee:	xor    eax,eax
  4029f0:	call   402730 <error@@Base+0xa00>
  4029f5:	jmp    40298f <error@@Base+0xc5f>
  4029f7:	test   r13,r13
  4029fa:	lea    rax,[rip+0x1828]        # 404229 <error@@Base+0x24f9>
  402a01:	cmove  r13,rax
  402a05:	lea    rdi,[rip+0x1825]        # 404231 <error@@Base+0x2501>
  402a0c:	mov    rsi,r13
  402a0f:	xor    eax,eax
  402a11:	call   401de0 <error@@Base+0xb0>
  402a16:	call   4011e0 <__stack_chk_fail@plt>
  402a1b:	nop    DWORD PTR [rax+rax*1+0x0]
  402a20:	endbr64 
  402a24:	push   rbp
  402a25:	xor    eax,eax
  402a27:	push   rbx
  402a28:	mov    rbx,rdi
  402a2b:	mov    rdi,rsi
  402a2e:	sub    rsp,0x8
  402a32:	lea    rsi,[rip+0x180a]        # 404243 <error@@Base+0x2513>
  402a39:	call   401e30 <error@@Base+0x100>
  402a3e:	mov    rbp,rax
  402a41:	lea    r8,[rip+0x1880]        # 4042c8 <error@@Base+0x2598>
  402a48:	mov    rdi,rax
  402a4b:	lea    rcx,[rip+0x1846]        # 404298 <error@@Base+0x2568>
  402a52:	lea    rdx,[rip+0x17ec]        # 404245 <error@@Base+0x2515>
  402a59:	mov    esi,0x1
  402a5e:	xor    eax,eax
  402a60:	call   4012b0 <__fprintf_chk@plt>
  402a65:	mov    rcx,QWORD PTR [rbx]
  402a68:	lea    rdx,[rip+0x17db]        # 40424a <error@@Base+0x251a>
  402a6f:	mov    esi,0x1
  402a74:	mov    rdi,rbp
  402a77:	xor    eax,eax
  402a79:	call   4012b0 <__fprintf_chk@plt>
  402a7e:	mov    rcx,QWORD PTR [rbx+0x8]
  402a82:	lea    rdx,[rip+0x17cf]        # 404258 <error@@Base+0x2528>
  402a89:	mov    esi,0x1
  402a8e:	mov    rdi,rbp
  402a91:	xor    eax,eax
  402a93:	call   4012b0 <__fprintf_chk@plt>
  402a98:	mov    rsi,QWORD PTR [rbx]
  402a9b:	xor    eax,eax
  402a9d:	lea    rdx,[rbx+0x8]
  402aa1:	mov    rdi,rbp
  402aa4:	call   402250 <error@@Base+0x520>
  402aa9:	mov    rcx,rbp
  402aac:	mov    edx,0xc
  402ab1:	mov    esi,0x1
  402ab6:	lea    rdi,[rip+0x158a]        # 404047 <error@@Base+0x2317>
  402abd:	call   4012a0 <fwrite@plt>
  402ac2:	xor    r8d,r8d
  402ac5:	xor    eax,eax
  402ac7:	lea    rsi,[rbx+0x10]
  402acb:	mov    r9d,0x1
  402ad1:	lea    rcx,[rip+0x1796]        # 40426e <error@@Base+0x253e>
  402ad8:	mov    edx,0x32
  402add:	mov    rdi,rbp
  402ae0:	call   402330 <error@@Base+0x600>
  402ae5:	xor    r8d,r8d
  402ae8:	xor    eax,eax
  402aea:	lea    rsi,[rbx+0x340]
  402af1:	mov    r9d,0x1
  402af7:	lea    rcx,[rip+0x1783]        # 404281 <error@@Base+0x2551>
  402afe:	mov    edx,0x32
  402b03:	mov    rdi,rbp
  402b06:	call   402330 <error@@Base+0x600>
  402b0b:	xor    eax,eax
  402b0d:	lea    rsi,[rbx+0x670]
  402b14:	mov    r9d,0x1
  402b1a:	mov    r8d,0x1
  402b20:	lea    rcx,[rip+0x1751]        # 404278 <error@@Base+0x2548>
  402b27:	mov    edx,0xa
  402b2c:	mov    rdi,rbp
  402b2f:	call   402330 <error@@Base+0x600>
  402b34:	cmp    QWORD PTR [rbx],0x0
  402b38:	jg     402b50 <error@@Base+0xe20>
  402b3a:	add    rsp,0x8
  402b3e:	pop    rbx
  402b3f:	mov    rdi,rbp
  402b42:	xor    eax,eax
  402b44:	pop    rbp
  402b45:	jmp    401ba0 <__sprintf_chk@plt+0x8c0>
  402b4a:	nop    WORD PTR [rax+rax*1+0x0]
  402b50:	xor    r9d,r9d
  402b53:	xor    r8d,r8d
  402b56:	xor    eax,eax
  402b58:	lea    rsi,[rbx+0x730]
  402b5f:	lea    rcx,[rip+0x1729]        # 40428f <error@@Base+0x255f>
  402b66:	mov    edx,0x8
  402b6b:	mov    rdi,rbp
  402b6e:	call   402330 <error@@Base+0x600>
  402b73:	cmp    QWORD PTR [rbx+0x10],0x0
  402b78:	jle    402b92 <error@@Base+0xe62>
  402b7a:	lea    rsi,[rbx+0x7c0]
  402b81:	lea    rdx,[rip+0x16e6]        # 40426e <error@@Base+0x253e>
  402b88:	mov    rdi,rbp
  402b8b:	xor    eax,eax
  402b8d:	call   4024b0 <error@@Base+0x780>
  402b92:	cmp    QWORD PTR [rbx+0x340],0x0
  402b9a:	jle    402b3a <error@@Base+0xe0a>
  402b9c:	mov    rdi,rbp
  402b9f:	lea    rsi,[rbx+0x46b0]
  402ba6:	xor    eax,eax
  402ba8:	lea    rdx,[rip+0x16d2]        # 404281 <error@@Base+0x2551>
  402baf:	call   4024b0 <error@@Base+0x780>
  402bb4:	add    rsp,0x8
  402bb8:	pop    rbx
  402bb9:	mov    rdi,rbp
  402bbc:	xor    eax,eax
  402bbe:	pop    rbp
  402bbf:	jmp    401ba0 <__sprintf_chk@plt+0x8c0>
  402bc4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402bce:	xchg   ax,ax
  402bd0:	push   r15
  402bd2:	mov    rax,rsi
  402bd5:	shl    rax,0x3
  402bd9:	push   r14
  402bdb:	push   r13
  402bdd:	mov    r13,rdi
  402be0:	push   r12
  402be2:	push   rbp
  402be3:	push   rbx
  402be4:	sub    rsp,0x18
  402be8:	mov    QWORD PTR [rsp],rsi
  402bec:	mov    QWORD PTR [rsp+0x8],rax
  402bf1:	mov    rax,QWORD PTR [rip+0x3578]        # 406170 <error@@Base+0x4440>
  402bf8:	mov    rdx,QWORD PTR [rsp]
  402bfc:	mov    rbx,QWORD PTR [rax+r13*8]
  402c00:	mov    r15,rdx
  402c03:	mov    rbp,r13
  402c06:	cmp    r13,rdx
  402c09:	jge    402d23 <error@@Base+0xff3>
  402c0f:	nop
  402c10:	mov    rsi,QWORD PTR [rax+r15*8]
  402c14:	mov    rdi,rbx
  402c17:	xor    eax,eax
  402c19:	lea    r12,[r15*8+0x0]
  402c21:	call   QWORD PTR [rip+0x3541]        # 406168 <error@@Base+0x4438>
  402c27:	test   eax,eax
  402c29:	jns    402cc8 <error@@Base+0xf98>
  402c2f:	dec    r15
  402c32:	mov    rax,QWORD PTR [rip+0x3537]        # 406170 <error@@Base+0x4440>
  402c39:	lea    r12,[r15*8+0x0]
  402c41:	cmp    rbp,r15
  402c44:	jl     402c10 <error@@Base+0xee0>
  402c46:	lea    rsi,[rax+r12*1]
  402c4a:	cmp    r15,rbp
  402c4d:	je     402cdf <error@@Base+0xfaf>
  402c53:	mov    rsi,QWORD PTR [rsi]
  402c56:	lea    r14,[rbp+0x1]
  402c5a:	lea    rdi,[rbp*8+0x0]
  402c62:	mov    QWORD PTR [rax+rbp*8],rsi
  402c66:	cmp    r15,r14
  402c69:	jg     402c7f <error@@Base+0xf4f>
  402c6b:	jmp    402d0b <error@@Base+0xfdb>
  402c70:	inc    r14
  402c73:	mov    rax,QWORD PTR [rip+0x34f6]        # 406170 <error@@Base+0x4440>
  402c7a:	cmp    r15,r14
  402c7d:	je     402cd8 <error@@Base+0xfa8>
  402c7f:	mov    rsi,QWORD PTR [rax+r14*8]
  402c83:	mov    rdi,rbx
  402c86:	xor    eax,eax
  402c88:	lea    rbp,[r14*8+0x0]
  402c90:	call   QWORD PTR [rip+0x34d2]        # 406168 <error@@Base+0x4438>
  402c96:	test   eax,eax
  402c98:	jg     402c70 <error@@Base+0xf40>
  402c9a:	mov    rax,QWORD PTR [rip+0x34cf]        # 406170 <error@@Base+0x4440>
  402ca1:	lea    rsi,[rax+rbp*1]
  402ca5:	mov    rbp,r14
  402ca8:	mov    rsi,QWORD PTR [rsi]
  402cab:	dec    r15
  402cae:	mov    QWORD PTR [rax+r12*1],rsi
  402cb2:	cmp    r15,r14
  402cb5:	jg     402c10 <error@@Base+0xee0>
  402cbb:	lea    rsi,[rax+r15*8]
  402cbf:	jmp    402ce2 <error@@Base+0xfb2>
  402cc1:	nop    DWORD PTR [rax+0x0]
  402cc8:	mov    rax,QWORD PTR [rip+0x34a1]        # 406170 <error@@Base+0x4440>
  402ccf:	jmp    402c46 <error@@Base+0xf16>
  402cd4:	nop    DWORD PTR [rax+0x0]
  402cd8:	lea    rsi,[rax+r15*8]
  402cdc:	mov    rbp,r15
  402cdf:	mov    r15,rbp
  402ce2:	mov    QWORD PTR [rsi],rbx
  402ce5:	lea    rsi,[r15-0x1]
  402ce9:	cmp    r13,rsi
  402cec:	jl     402d17 <error@@Base+0xfe7>
  402cee:	lea    r13,[rbp+0x1]
  402cf2:	cmp    r13,QWORD PTR [rsp]
  402cf6:	jl     402bf1 <error@@Base+0xec1>
  402cfc:	add    rsp,0x18
  402d00:	pop    rbx
  402d01:	pop    rbp
  402d02:	pop    r12
  402d04:	pop    r13
  402d06:	pop    r14
  402d08:	pop    r15
  402d0a:	ret    
  402d0b:	lea    rsi,[rax+rdi*1+0x8]
  402d10:	je     402cdc <error@@Base+0xfac>
  402d12:	mov    rbp,r14
  402d15:	jmp    402ca8 <error@@Base+0xf78>
  402d17:	mov    rdi,r13
  402d1a:	xor    eax,eax
  402d1c:	call   402bd0 <error@@Base+0xea0>
  402d21:	jmp    402cee <error@@Base+0xfbe>
  402d23:	mov    rcx,QWORD PTR [rsp+0x8]
  402d28:	mov    r15,QWORD PTR [rsp]
  402d2c:	lea    rsi,[rax+rcx*1]
  402d30:	jmp    402ce2 <error@@Base+0xfb2>
  402d32:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  402d3d:	nop    DWORD PTR [rax]
  402d40:	endbr64 
  402d44:	cmp    rdi,0x1
  402d48:	jle    402d68 <error@@Base+0x1038>
  402d4a:	mov    QWORD PTR [rip+0x341f],rsi        # 406170 <error@@Base+0x4440>
  402d51:	xor    eax,eax
  402d53:	lea    rsi,[rdi-0x1]
  402d57:	xor    edi,edi
  402d59:	mov    QWORD PTR [rip+0x3408],rdx        # 406168 <error@@Base+0x4438>
  402d60:	jmp    402bd0 <error@@Base+0xea0>
  402d65:	nop    DWORD PTR [rax]
  402d68:	ret    
  402d69:	nop    DWORD PTR [rax+0x0]
  402d70:	endbr64 
  402d74:	push   r12
  402d76:	mov    r12,rdi
  402d79:	push   rbp
  402d7a:	lea    rbp,[rdi+0x3ee0]
  402d81:	push   rbx
  402d82:	mov    rbx,rdi
  402d85:	nop    DWORD PTR [rax]
  402d88:	mov    rdi,rbx
  402d8b:	xor    eax,eax
  402d8d:	add    rbx,0x20
  402d91:	call   4017e0 <__sprintf_chk@plt+0x500>
  402d96:	cmp    rbx,rbp
  402d99:	jne    402d88 <error@@Base+0x1058>
  402d9b:	pop    rbx
  402d9c:	pop    rbp
  402d9d:	mov    QWORD PTR [r12+0x3ee0],0x0
  402da9:	mov    QWORD PTR [r12+0x3ee8],0x0
  402db5:	pop    r12
  402db7:	ret    
  402db8:	nop    DWORD PTR [rax+rax*1+0x0]
  402dc0:	endbr64 
  402dc4:	push   rbp
  402dc5:	mov    rbp,rsi
  402dc8:	push   rbx
  402dc9:	sub    rsp,0x8
  402dcd:	movzx  eax,BYTE PTR [rsi]
  402dd0:	test   al,al
  402dd2:	je     402e48 <error@@Base+0x1118>
  402dd4:	lea    rdx,[rsi+0x1]
  402dd8:	xor    ecx,ecx
  402dda:	nop    WORD PTR [rax+rax*1+0x0]
  402de0:	inc    rdx
  402de3:	add    rcx,rax
  402de6:	movzx  eax,BYTE PTR [rdx-0x1]
  402dea:	test   al,al
  402dec:	jne    402de0 <error@@Base+0x10b0>
  402dee:	mov    rax,rcx
  402df1:	movabs rdx,0x824a4e60b3262bc5
  402dfb:	mul    rdx
  402dfe:	shr    rdx,0x8
  402e02:	imul   rdx,rdx,0x1f7
  402e09:	sub    ecx,edx
  402e0b:	movsxd rcx,ecx
  402e0e:	shl    rcx,0x5
  402e12:	mov    rbx,QWORD PTR [rdi+rcx*1]
  402e16:	test   rbx,rbx
  402e19:	jne    402e29 <error@@Base+0x10f9>
  402e1b:	jmp    402e39 <error@@Base+0x1109>
  402e1d:	nop    DWORD PTR [rax]
  402e20:	mov    rbx,QWORD PTR [rbx+0x8]
  402e24:	test   rbx,rbx
  402e27:	je     402e39 <error@@Base+0x1109>
  402e29:	mov    rsi,QWORD PTR [rbx+0x10]
  402e2d:	mov    rdi,rbp
  402e30:	call   401220 <strcmp@plt>
  402e35:	test   eax,eax
  402e37:	jne    402e20 <error@@Base+0x10f0>
  402e39:	add    rsp,0x8
  402e3d:	mov    rax,rbx
  402e40:	pop    rbx
  402e41:	pop    rbp
  402e42:	ret    
  402e43:	nop    DWORD PTR [rax+rax*1+0x0]
  402e48:	xor    ecx,ecx
  402e4a:	jmp    402e0b <error@@Base+0x10db>
  402e4c:	nop    DWORD PTR [rax+0x0]
  402e50:	endbr64 
  402e54:	push   rbx
  402e55:	mov    rdx,QWORD PTR [rsi+0x10]
  402e59:	mov    rbx,rdi
  402e5c:	movzx  eax,BYTE PTR [rdx]
  402e5f:	test   al,al
  402e61:	je     402ea3 <error@@Base+0x1173>
  402e63:	inc    rdx
  402e66:	xor    edi,edi
  402e68:	nop    DWORD PTR [rax+rax*1+0x0]
  402e70:	inc    rdx
  402e73:	add    rdi,rax
  402e76:	movzx  eax,BYTE PTR [rdx-0x1]
  402e7a:	test   al,al
  402e7c:	jne    402e70 <error@@Base+0x1140>
  402e7e:	mov    rax,rdi
  402e81:	movabs rdx,0x824a4e60b3262bc5
  402e8b:	mul    rdx
  402e8e:	shr    rdx,0x8
  402e92:	imul   rdx,rdx,0x1f7
  402e99:	sub    rdi,rdx
  402e9c:	shl    rdi,0x5
  402ea0:	add    rdi,rbx
  402ea3:	xor    eax,eax
  402ea5:	call   401810 <__sprintf_chk@plt+0x530>
  402eaa:	mov    rdi,QWORD PTR [rbx+0x3ee0]
  402eb1:	test   rdi,rdi
  402eb4:	je     402ec6 <error@@Base+0x1196>
  402eb6:	call   401190 <free@plt>
  402ebb:	mov    QWORD PTR [rbx+0x3ee0],0x0
  402ec6:	inc    QWORD PTR [rbx+0x3ee8]
  402ecd:	pop    rbx
  402ece:	ret    
  402ecf:	nop
  402ed0:	endbr64 
  402ed4:	push   rbx
  402ed5:	mov    rdx,QWORD PTR [rsi+0x10]
  402ed9:	mov    rbx,rdi
  402edc:	movzx  eax,BYTE PTR [rdx]
  402edf:	test   al,al
  402ee1:	je     402f23 <error@@Base+0x11f3>
  402ee3:	inc    rdx
  402ee6:	xor    edi,edi
  402ee8:	nop    DWORD PTR [rax+rax*1+0x0]
  402ef0:	inc    rdx
  402ef3:	add    rdi,rax
  402ef6:	movzx  eax,BYTE PTR [rdx-0x1]
  402efa:	test   al,al
  402efc:	jne    402ef0 <error@@Base+0x11c0>
  402efe:	mov    rax,rdi
  402f01:	movabs rdx,0x824a4e60b3262bc5
  402f0b:	mul    rdx
  402f0e:	shr    rdx,0x8
  402f12:	imul   rdx,rdx,0x1f7
  402f19:	sub    rdi,rdx
  402f1c:	shl    rdi,0x5
  402f20:	add    rdi,rbx
  402f23:	xor    eax,eax
  402f25:	call   401950 <__sprintf_chk@plt+0x670>
  402f2a:	mov    rdi,QWORD PTR [rbx+0x3ee0]
  402f31:	test   rdi,rdi
  402f34:	je     402f46 <error@@Base+0x1216>
  402f36:	call   401190 <free@plt>
  402f3b:	mov    QWORD PTR [rbx+0x3ee0],0x0
  402f46:	dec    QWORD PTR [rbx+0x3ee8]
  402f4d:	pop    rbx
  402f4e:	ret    
  402f4f:	nop
  402f50:	endbr64 
  402f54:	cmp    QWORD PTR [rdi+0x3ee0],0x0
  402f5c:	je     402f5f <error@@Base+0x122f>
  402f5e:	ret    
  402f5f:	mov    rax,QWORD PTR [rdi+0x3ee8]
  402f66:	test   rax,rax
  402f69:	je     402f5e <error@@Base+0x122e>
  402f6b:	push   rbx
  402f6c:	mov    esi,0x8
  402f71:	mov    rbx,rdi
  402f74:	mov    rdi,rax
  402f77:	xor    eax,eax
  402f79:	call   401d80 <error@@Base+0x50>
  402f7e:	mov    QWORD PTR [rbx+0x3ee0],rax
  402f85:	mov    rsi,rbx
  402f88:	lea    rdi,[rbx+0x3ee0]
  402f8f:	xor    ecx,ecx
  402f91:	nop    DWORD PTR [rax+0x0]
  402f98:	mov    rdx,QWORD PTR [rsi]
  402f9b:	test   rdx,rdx
  402f9e:	je     402fb1 <error@@Base+0x1281>
  402fa0:	inc    rcx
  402fa3:	mov    QWORD PTR [rax+rcx*8-0x8],rdx
  402fa8:	mov    rdx,QWORD PTR [rdx+0x8]
  402fac:	test   rdx,rdx
  402faf:	jne    402fa0 <error@@Base+0x1270>
  402fb1:	add    rsi,0x20
  402fb5:	cmp    rsi,rdi
  402fb8:	jne    402f98 <error@@Base+0x1268>
  402fba:	pop    rbx
  402fbb:	ret    
  402fbc:	nop    DWORD PTR [rax+0x0]
  402fc0:	endbr64 
  402fc4:	push   r13
  402fc6:	mov    r13,rdi
  402fc9:	push   r12
  402fcb:	mov    r12,rsi
  402fce:	push   rbp
  402fcf:	lea    rbp,[rdi+0x3ee0]
  402fd6:	push   rbx
  402fd7:	mov    rbx,rdi
  402fda:	sub    rsp,0x8
  402fde:	xchg   ax,ax
  402fe0:	mov    rdi,rbx
  402fe3:	mov    rsi,r12
  402fe6:	xor    eax,eax
  402fe8:	add    rbx,0x20
  402fec:	call   401a10 <__sprintf_chk@plt+0x730>
  402ff1:	cmp    rbx,rbp
  402ff4:	jne    402fe0 <error@@Base+0x12b0>
  402ff6:	mov    rdi,QWORD PTR [r13+0x3ee0]
  402ffd:	test   rdi,rdi
  403000:	je     403012 <error@@Base+0x12e2>
  403002:	call   401190 <free@plt>
  403007:	mov    QWORD PTR [r13+0x3ee0],0x0
  403012:	mov    QWORD PTR [r13+0x3ee8],0x0
  40301d:	add    rsp,0x8
  403021:	pop    rbx
  403022:	pop    rbp
  403023:	pop    r12
  403025:	pop    r13
  403027:	ret    
  403028:	nop    DWORD PTR [rax+rax*1+0x0]
  403030:	endbr64 
  403034:	push   r15
  403036:	lea    r15,[rip+0x2dab]        # 405de8 <error@@Base+0x40b8>
  40303d:	push   r14
  40303f:	mov    r14,rdx
  403042:	push   r13
  403044:	mov    r13,rsi
  403047:	push   r12
  403049:	mov    r12d,edi
  40304c:	push   rbp
  40304d:	lea    rbp,[rip+0x2d9c]        # 405df0 <error@@Base+0x40c0>
  403054:	push   rbx
  403055:	sub    rbp,r15
  403058:	sub    rsp,0x8
  40305c:	call   401000 <free@plt-0x190>
  403061:	sar    rbp,0x3
  403065:	je     403086 <error@@Base+0x1356>
  403067:	xor    ebx,ebx
  403069:	nop    DWORD PTR [rax+0x0]
  403070:	mov    rdx,r14
  403073:	mov    rsi,r13
  403076:	mov    edi,r12d
  403079:	call   QWORD PTR [r15+rbx*8]
  40307d:	add    rbx,0x1
  403081:	cmp    rbp,rbx
  403084:	jne    403070 <error@@Base+0x1340>
  403086:	add    rsp,0x8
  40308a:	pop    rbx
  40308b:	pop    rbp
  40308c:	pop    r12
  40308e:	pop    r13
  403090:	pop    r14
  403092:	pop    r15
  403094:	ret    
  403095:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4030a0:	endbr64 
  4030a4:	ret    

Disassembly of section .fini:

00000000004030a8 <.fini>:
  4030a8:	endbr64 
  4030ac:	sub    rsp,0x8
  4030b0:	add    rsp,0x8
  4030b4:	ret    
