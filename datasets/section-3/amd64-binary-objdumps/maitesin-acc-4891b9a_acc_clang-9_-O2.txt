
../repos/maitesin-acc-4891b9a/bin/acc:     file format elf64-x86-64


Disassembly of section .init:

0000000000403000 <.init>:
  403000:	endbr64 
  403004:	sub    rsp,0x8
  403008:	mov    rax,QWORD PTR [rip+0xafd9]        # 40dfe8 <__gmon_start__>
  40300f:	test   rax,rax
  403012:	je     403016 <getenv@plt-0x1a>
  403014:	call   rax
  403016:	add    rsp,0x8
  40301a:	ret    

Disassembly of section .plt:

0000000000403020 <getenv@plt-0x10>:
  403020:	push   QWORD PTR [rip+0xafe2]        # 40e008 <_IO_stdin_used@@Base+0x5008>
  403026:	jmp    QWORD PTR [rip+0xafe4]        # 40e010 <_IO_stdin_used@@Base+0x5010>
  40302c:	nop    DWORD PTR [rax+0x0]

0000000000403030 <getenv@plt>:
  403030:	jmp    QWORD PTR [rip+0xafe2]        # 40e018 <getenv@GLIBC_2.2.5>
  403036:	push   0x0
  40303b:	jmp    403020 <getenv@plt-0x10>

0000000000403040 <free@plt>:
  403040:	jmp    QWORD PTR [rip+0xafda]        # 40e020 <free@GLIBC_2.2.5>
  403046:	push   0x1
  40304b:	jmp    403020 <getenv@plt-0x10>

0000000000403050 <__errno_location@plt>:
  403050:	jmp    QWORD PTR [rip+0xafd2]        # 40e028 <__errno_location@GLIBC_2.2.5>
  403056:	push   0x2
  40305b:	jmp    403020 <getenv@plt-0x10>

0000000000403060 <strncpy@plt>:
  403060:	jmp    QWORD PTR [rip+0xafca]        # 40e030 <strncpy@GLIBC_2.2.5>
  403066:	push   0x3
  40306b:	jmp    403020 <getenv@plt-0x10>

0000000000403070 <strncmp@plt>:
  403070:	jmp    QWORD PTR [rip+0xafc2]        # 40e038 <strncmp@GLIBC_2.2.5>
  403076:	push   0x4
  40307b:	jmp    403020 <getenv@plt-0x10>

0000000000403080 <mkdir@plt>:
  403080:	jmp    QWORD PTR [rip+0xafba]        # 40e040 <mkdir@GLIBC_2.2.5>
  403086:	push   0x5
  40308b:	jmp    403020 <getenv@plt-0x10>

0000000000403090 <fcntl@plt>:
  403090:	jmp    QWORD PTR [rip+0xafb2]        # 40e048 <fcntl@GLIBC_2.2.5>
  403096:	push   0x6
  40309b:	jmp    403020 <getenv@plt-0x10>

00000000004030a0 <getpid@plt>:
  4030a0:	jmp    QWORD PTR [rip+0xafaa]        # 40e050 <getpid@GLIBC_2.2.5>
  4030a6:	push   0x7
  4030ab:	jmp    403020 <getenv@plt-0x10>

00000000004030b0 <fread_unlocked@plt>:
  4030b0:	jmp    QWORD PTR [rip+0xafa2]        # 40e058 <fread_unlocked@GLIBC_2.2.5>
  4030b6:	push   0x8
  4030bb:	jmp    403020 <getenv@plt-0x10>

00000000004030c0 <fclose@plt>:
  4030c0:	jmp    QWORD PTR [rip+0xaf9a]        # 40e060 <fclose@GLIBC_2.2.5>
  4030c6:	push   0x9
  4030cb:	jmp    403020 <getenv@plt-0x10>

00000000004030d0 <msync@plt>:
  4030d0:	jmp    QWORD PTR [rip+0xaf92]        # 40e068 <msync@GLIBC_2.2.5>
  4030d6:	push   0xa
  4030db:	jmp    403020 <getenv@plt-0x10>

00000000004030e0 <strlen@plt>:
  4030e0:	jmp    QWORD PTR [rip+0xaf8a]        # 40e070 <strlen@GLIBC_2.2.5>
  4030e6:	push   0xb
  4030eb:	jmp    403020 <getenv@plt-0x10>

00000000004030f0 <mmap@plt>:
  4030f0:	jmp    QWORD PTR [rip+0xaf82]        # 40e078 <mmap@GLIBC_2.2.5>
  4030f6:	push   0xc
  4030fb:	jmp    403020 <getenv@plt-0x10>

0000000000403100 <strchr@plt>:
  403100:	jmp    QWORD PTR [rip+0xaf7a]        # 40e080 <strchr@GLIBC_2.2.5>
  403106:	push   0xd
  40310b:	jmp    403020 <getenv@plt-0x10>

0000000000403110 <strrchr@plt>:
  403110:	jmp    QWORD PTR [rip+0xaf72]        # 40e088 <strrchr@GLIBC_2.2.5>
  403116:	push   0xe
  40311b:	jmp    403020 <getenv@plt-0x10>

0000000000403120 <uname@plt>:
  403120:	jmp    QWORD PTR [rip+0xaf6a]        # 40e090 <uname@GLIBC_2.2.5>
  403126:	push   0xf
  40312b:	jmp    403020 <getenv@plt-0x10>

0000000000403130 <memset@plt>:
  403130:	jmp    QWORD PTR [rip+0xaf62]        # 40e098 <memset@GLIBC_2.2.5>
  403136:	push   0x10
  40313b:	jmp    403020 <getenv@plt-0x10>

0000000000403140 <strnlen@plt>:
  403140:	jmp    QWORD PTR [rip+0xaf5a]        # 40e0a0 <strnlen@GLIBC_2.2.5>
  403146:	push   0x11
  40314b:	jmp    403020 <getenv@plt-0x10>

0000000000403150 <fputc@plt>:
  403150:	jmp    QWORD PTR [rip+0xaf52]        # 40e0a8 <fputc@GLIBC_2.2.5>
  403156:	push   0x12
  40315b:	jmp    403020 <getenv@plt-0x10>

0000000000403160 <fprintf@plt>:
  403160:	jmp    QWORD PTR [rip+0xaf4a]        # 40e0b0 <fprintf@GLIBC_2.2.5>
  403166:	push   0x13
  40316b:	jmp    403020 <getenv@plt-0x10>

0000000000403170 <ftell@plt>:
  403170:	jmp    QWORD PTR [rip+0xaf42]        # 40e0b8 <ftell@GLIBC_2.2.5>
  403176:	push   0x14
  40317b:	jmp    403020 <getenv@plt-0x10>

0000000000403180 <strtol@plt>:
  403180:	jmp    QWORD PTR [rip+0xaf3a]        # 40e0c0 <strtol@GLIBC_2.2.5>
  403186:	push   0x15
  40318b:	jmp    403020 <getenv@plt-0x10>

0000000000403190 <memcpy@plt>:
  403190:	jmp    QWORD PTR [rip+0xaf32]        # 40e0c8 <memcpy@GLIBC_2.14>
  403196:	push   0x16
  40319b:	jmp    403020 <getenv@plt-0x10>

00000000004031a0 <prctl@plt>:
  4031a0:	jmp    QWORD PTR [rip+0xaf2a]        # 40e0d0 <prctl@GLIBC_2.2.5>
  4031a6:	push   0x17
  4031ab:	jmp    403020 <getenv@plt-0x10>

00000000004031b0 <fileno@plt>:
  4031b0:	jmp    QWORD PTR [rip+0xaf22]        # 40e0d8 <fileno@GLIBC_2.2.5>
  4031b6:	push   0x18
  4031bb:	jmp    403020 <getenv@plt-0x10>

00000000004031c0 <malloc@plt>:
  4031c0:	jmp    QWORD PTR [rip+0xaf1a]        # 40e0e0 <malloc@GLIBC_2.2.5>
  4031c6:	push   0x19
  4031cb:	jmp    403020 <getenv@plt-0x10>

00000000004031d0 <fflush@plt>:
  4031d0:	jmp    QWORD PTR [rip+0xaf12]        # 40e0e8 <fflush@GLIBC_2.2.5>
  4031d6:	push   0x1a
  4031db:	jmp    403020 <getenv@plt-0x10>

00000000004031e0 <fseek@plt>:
  4031e0:	jmp    QWORD PTR [rip+0xaf0a]        # 40e0f0 <fseek@GLIBC_2.2.5>
  4031e6:	push   0x1b
  4031eb:	jmp    403020 <getenv@plt-0x10>

00000000004031f0 <realloc@plt>:
  4031f0:	jmp    QWORD PTR [rip+0xaf02]        # 40e0f8 <realloc@GLIBC_2.2.5>
  4031f6:	push   0x1c
  4031fb:	jmp    403020 <getenv@plt-0x10>

0000000000403200 <fdopen@plt>:
  403200:	jmp    QWORD PTR [rip+0xaefa]        # 40e100 <fdopen@GLIBC_2.2.5>
  403206:	push   0x1d
  40320b:	jmp    403020 <getenv@plt-0x10>

0000000000403210 <munmap@plt>:
  403210:	jmp    QWORD PTR [rip+0xaef2]        # 40e108 <munmap@GLIBC_2.2.5>
  403216:	push   0x1e
  40321b:	jmp    403020 <getenv@plt-0x10>

0000000000403220 <open@plt>:
  403220:	jmp    QWORD PTR [rip+0xaeea]        # 40e110 <open@GLIBC_2.2.5>
  403226:	push   0x1f
  40322b:	jmp    403020 <getenv@plt-0x10>

0000000000403230 <fopen@plt>:
  403230:	jmp    QWORD PTR [rip+0xaee2]        # 40e118 <fopen@GLIBC_2.2.5>
  403236:	push   0x20
  40323b:	jmp    403020 <getenv@plt-0x10>

0000000000403240 <getopt@plt>:
  403240:	jmp    QWORD PTR [rip+0xaeda]        # 40e120 <getopt@GLIBC_2.2.5>
  403246:	push   0x21
  40324b:	jmp    403020 <getenv@plt-0x10>

0000000000403250 <__cxa_atexit@plt>:
  403250:	jmp    QWORD PTR [rip+0xaed2]        # 40e128 <__cxa_atexit@GLIBC_2.2.5>
  403256:	push   0x22
  40325b:	jmp    403020 <getenv@plt-0x10>

0000000000403260 <exit@plt>:
  403260:	jmp    QWORD PTR [rip+0xaeca]        # 40e130 <exit@GLIBC_2.2.5>
  403266:	push   0x23
  40326b:	jmp    403020 <getenv@plt-0x10>

0000000000403270 <fwrite@plt>:
  403270:	jmp    QWORD PTR [rip+0xaec2]        # 40e138 <fwrite@GLIBC_2.2.5>
  403276:	push   0x24
  40327b:	jmp    403020 <getenv@plt-0x10>

0000000000403280 <strdup@plt>:
  403280:	jmp    QWORD PTR [rip+0xaeba]        # 40e140 <strdup@GLIBC_2.2.5>
  403286:	push   0x25
  40328b:	jmp    403020 <getenv@plt-0x10>

0000000000403290 <strerror@plt>:
  403290:	jmp    QWORD PTR [rip+0xaeb2]        # 40e148 <strerror@GLIBC_2.2.5>
  403296:	push   0x26
  40329b:	jmp    403020 <getenv@plt-0x10>

Disassembly of section .text:

00000000004032a0 <_start@@Base>:
  4032a0:	endbr64 
  4032a4:	xor    ebp,ebp
  4032a6:	mov    r9,rdx
  4032a9:	pop    rsi
  4032aa:	mov    rdx,rsp
  4032ad:	and    rsp,0xfffffffffffffff0
  4032b1:	push   rax
  4032b2:	push   rsp
  4032b3:	mov    r8,0x408cd0
  4032ba:	mov    rcx,0x408c60
  4032c1:	mov    rdi,0x4035b0
  4032c8:	call   QWORD PTR [rip+0xad0a]        # 40dfd8 <__libc_start_main@GLIBC_2.2.5>
  4032ce:	hlt    
  4032cf:	nop
  4032d0:	endbr64 
  4032d4:	ret    
  4032d5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4032df:	nop
  4032e0:	mov    eax,0x40e168
  4032e5:	cmp    rax,0x40e168
  4032eb:	je     403300 <_start@@Base+0x60>
  4032ed:	mov    eax,0x0
  4032f2:	test   rax,rax
  4032f5:	je     403300 <_start@@Base+0x60>
  4032f7:	mov    edi,0x40e168
  4032fc:	jmp    rax
  4032fe:	xchg   ax,ax
  403300:	ret    
  403301:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40330c:	nop    DWORD PTR [rax+0x0]
  403310:	mov    esi,0x40e168
  403315:	sub    rsi,0x40e168
  40331c:	mov    rax,rsi
  40331f:	shr    rsi,0x3f
  403323:	sar    rax,0x3
  403327:	add    rsi,rax
  40332a:	sar    rsi,1
  40332d:	je     403340 <_start@@Base+0xa0>
  40332f:	mov    eax,0x0
  403334:	test   rax,rax
  403337:	je     403340 <_start@@Base+0xa0>
  403339:	mov    edi,0x40e168
  40333e:	jmp    rax
  403340:	ret    
  403341:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40334c:	nop    DWORD PTR [rax+0x0]
  403350:	endbr64 
  403354:	cmp    BYTE PTR [rip+0xae15],0x0        # 40e170 <__bss_start@@Base+0x8>
  40335b:	jne    403370 <_start@@Base+0xd0>
  40335d:	push   rbp
  40335e:	mov    rbp,rsp
  403361:	call   4032e0 <_start@@Base+0x40>
  403366:	mov    BYTE PTR [rip+0xae03],0x1        # 40e170 <__bss_start@@Base+0x8>
  40336d:	pop    rbp
  40336e:	ret    
  40336f:	nop
  403370:	ret    
  403371:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40337c:	nop    DWORD PTR [rax+0x0]
  403380:	endbr64 
  403384:	jmp    403310 <_start@@Base+0x70>
  403386:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000403390 <load_file@@Base>:
  403390:	push   r15
  403392:	push   r14
  403394:	push   r12
  403396:	push   rbx
  403397:	push   rax
  403398:	mov    r14,rdi
  40339b:	inc    QWORD PTR [rip+0xadde]        # 40e180 <__bss_start@@Base+0x18>
  4033a2:	lea    rsi,[rip+0x613f]        # 4094e8 <_IO_stdin_used@@Base+0x4e8>
  4033a9:	call   403230 <fopen@plt>
  4033ae:	test   rax,rax
  4033b1:	je     4033df <load_file@@Base+0x4f>
  4033b3:	mov    rbx,rax
  4033b6:	inc    QWORD PTR [rip+0xadcb]        # 40e188 <__bss_start@@Base+0x20>
  4033bd:	xor    r15d,r15d
  4033c0:	mov    rdi,rax
  4033c3:	xor    esi,esi
  4033c5:	mov    edx,0x2
  4033ca:	call   4031e0 <fseek@plt>
  4033cf:	test   eax,eax
  4033d1:	je     4033ee <load_file@@Base+0x5e>
  4033d3:	lea    rax,[rip+0xadc6]        # 40e1a0 <__bss_start@@Base+0x38>
  4033da:	jmp    403467 <load_file@@Base+0xd7>
  4033df:	lea    rax,[rip+0xadaa]        # 40e190 <__bss_start@@Base+0x28>
  4033e6:	xor    r15d,r15d
  4033e9:	jmp    403479 <load_file@@Base+0xe9>
  4033ee:	inc    QWORD PTR [rip+0xada3]        # 40e198 <__bss_start@@Base+0x30>
  4033f5:	mov    rdi,rbx
  4033f8:	call   403170 <ftell@plt>
  4033fd:	cmp    rax,0xffffffffffffffff
  403401:	je     403492 <load_file@@Base+0x102>
  403407:	mov    r12,rax
  40340a:	inc    QWORD PTR [rip+0xad9f]        # 40e1b0 <__bss_start@@Base+0x48>
  403411:	lea    rdi,[rax+0x1]
  403415:	call   4031c0 <malloc@plt>
  40341a:	mov    r15,rax
  40341d:	mov    rdi,rbx
  403420:	xor    esi,esi
  403422:	xor    edx,edx
  403424:	call   4031e0 <fseek@plt>
  403429:	test   eax,eax
  40342b:	jne    4034b1 <load_file@@Base+0x121>
  403431:	inc    QWORD PTR [rip+0xad88]        # 40e1c0 <__bss_start@@Base+0x58>
  403438:	mov    esi,0x1
  40343d:	mov    rdi,r15
  403440:	mov    rdx,r12
  403443:	mov    rcx,rbx
  403446:	call   4030b0 <fread_unlocked@plt>
  40344b:	test   rax,rax
  40344e:	je     4034e2 <load_file@@Base+0x152>
  403454:	inc    QWORD PTR [rip+0xad75]        # 40e1d0 <__bss_start@@Base+0x68>
  40345b:	mov    BYTE PTR [r15+rax*1],0x0
  403460:	lea    rax,[rip+0xad71]        # 40e1d8 <__bss_start@@Base+0x70>
  403467:	inc    QWORD PTR [rax]
  40346a:	mov    rdi,rbx
  40346d:	call   4030c0 <fclose@plt>
  403472:	lea    rax,[rip+0xad67]        # 40e1e0 <__bss_start@@Base+0x78>
  403479:	inc    QWORD PTR [rax]
  40347c:	inc    QWORD PTR [rip+0xad65]        # 40e1e8 <__bss_start@@Base+0x80>
  403483:	mov    rax,r15
  403486:	add    rsp,0x8
  40348a:	pop    rbx
  40348b:	pop    r12
  40348d:	pop    r14
  40348f:	pop    r15
  403491:	ret    
  403492:	inc    QWORD PTR [rip+0xad0f]        # 40e1a8 <__bss_start@@Base+0x40>
  403499:	mov    rax,QWORD PTR [rip+0xab50]        # 40dff0 <stderr@GLIBC_2.2.5>
  4034a0:	mov    rcx,QWORD PTR [rax]
  4034a3:	lea    rdi,[rip+0x5b5a]        # 409004 <_IO_stdin_used@@Base+0x4>
  4034aa:	mov    esi,0x33
  4034af:	jmp    4034ce <load_file@@Base+0x13e>
  4034b1:	inc    QWORD PTR [rip+0xad00]        # 40e1b8 <__bss_start@@Base+0x50>
  4034b8:	mov    rax,QWORD PTR [rip+0xab31]        # 40dff0 <stderr@GLIBC_2.2.5>
  4034bf:	mov    rcx,QWORD PTR [rax]
  4034c2:	lea    rdi,[rip+0x5b6f]        # 409038 <_IO_stdin_used@@Base+0x38>
  4034c9:	mov    esi,0x31
  4034ce:	mov    edx,0x1
  4034d3:	call   403270 <fwrite@plt>
  4034d8:	mov    edi,0x1
  4034dd:	call   403260 <exit@plt>
  4034e2:	inc    QWORD PTR [rip+0xacdf]        # 40e1c8 <__bss_start@@Base+0x60>
  4034e9:	mov    rax,QWORD PTR [rip+0xab00]        # 40dff0 <stderr@GLIBC_2.2.5>
  4034f0:	mov    rdi,QWORD PTR [rax]
  4034f3:	lea    rsi,[rip+0x5b70]        # 40906a <_IO_stdin_used@@Base+0x6a>
  4034fa:	mov    rdx,r14
  4034fd:	xor    eax,eax
  4034ff:	call   403160 <fprintf@plt>
  403504:	mov    edi,0x1
  403509:	call   403260 <exit@plt>
  40350e:	xchg   ax,ax

0000000000403510 <my_main@@Base>:
  403510:	push   r15
  403512:	push   r14
  403514:	push   r13
  403516:	push   r12
  403518:	push   rbx
  403519:	sub    rsp,0x40
  40351d:	mov    r14,rsi
  403520:	vmovdqa xmm0,XMMWORD PTR [rip+0xacc8]        # 40e1f0 <__bss_start@@Base+0x88>
  403528:	vpcmpeqd xmm1,xmm1,xmm1
  40352c:	vpsubq xmm0,xmm0,xmm1
  403530:	vmovdqa XMMWORD PTR [rip+0xacb8],xmm0        # 40e1f0 <__bss_start@@Base+0x88>
  403538:	call   403390 <load_file@@Base>
  40353d:	mov    r13,rax
  403540:	lea    r15,[rsp+0x28]
  403545:	mov    rdi,r15
  403548:	mov    rsi,rax
  40354b:	call   403d30 <init_lexer@@Base>
  403550:	lea    r12,[rsp+0x8]
  403555:	mov    rdi,r12
  403558:	mov    rsi,r15
  40355b:	call   405a00 <init_grammar@@Base>
  403560:	lea    rbx,[rsp+0x10]
  403565:	mov    rdi,rbx
  403568:	mov    rsi,r12
  40356b:	mov    rdx,r14
  40356e:	call   4064c0 <init_generator@@Base>
  403573:	mov    rdi,rbx
  403576:	call   406530 <generate_code@@Base>
  40357b:	mov    rdi,rbx
  40357e:	call   406500 <destroy_generator@@Base>
  403583:	mov    rdi,r12
  403586:	call   405a20 <destroy_grammar@@Base>
  40358b:	mov    rdi,r15
  40358e:	call   403d60 <destroy_lexer@@Base>
  403593:	mov    rdi,r13
  403596:	call   403040 <free@plt>
  40359b:	xor    eax,eax
  40359d:	add    rsp,0x40
  4035a1:	pop    rbx
  4035a2:	pop    r12
  4035a4:	pop    r13
  4035a6:	pop    r14
  4035a8:	pop    r15
  4035aa:	ret    
  4035ab:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004035b0 <main@@Base>:
  4035b0:	push   rbp
  4035b1:	push   r15
  4035b3:	push   r14
  4035b5:	push   r13
  4035b7:	push   r12
  4035b9:	push   rbx
  4035ba:	push   rax
  4035bb:	mov    rbx,rsi
  4035be:	mov    ebp,edi
  4035c0:	vmovdqa xmm0,XMMWORD PTR [rip+0xac38]        # 40e200 <__bss_start@@Base+0x98>
  4035c8:	vpcmpeqd xmm1,xmm1,xmm1
  4035cc:	vpsubq xmm0,xmm0,xmm1
  4035d0:	vmovdqa XMMWORD PTR [rip+0xac28],xmm0        # 40e200 <__bss_start@@Base+0x98>
  4035d8:	lea    rdx,[rip+0x5aa3]        # 409082 <_IO_stdin_used@@Base+0x82>
  4035df:	call   403240 <getopt@plt>
  4035e4:	xor    r15d,r15d
  4035e7:	cmp    eax,0xffffffff
  4035ea:	je     403651 <main@@Base+0xa1>
  4035ec:	lea    r12,[rip+0xac35]        # 40e228 <__bss_start@@Base+0xc0>
  4035f3:	lea    r13,[rip+0xac36]        # 40e230 <__bss_start@@Base+0xc8>
  4035fa:	lea    r14,[rip+0x5a81]        # 409082 <_IO_stdin_used@@Base+0x82>
  403601:	jmp    40362c <main@@Base+0x7c>
  403603:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40360d:	nop    DWORD PTR [rax]
  403610:	inc    QWORD PTR [rcx]
  403613:	inc    QWORD PTR [rip+0xac1e]        # 40e238 <__bss_start@@Base+0xd0>
  40361a:	mov    edi,ebp
  40361c:	mov    rsi,rbx
  40361f:	mov    rdx,r14
  403622:	call   403240 <getopt@plt>
  403627:	cmp    eax,0xffffffff
  40362a:	je     403651 <main@@Base+0xa1>
  40362c:	inc    QWORD PTR [rip+0xabdd]        # 40e210 <__bss_start@@Base+0xa8>
  403633:	mov    rcx,r12
  403636:	cmp    eax,0x6f
  403639:	jne    403610 <main@@Base+0x60>
  40363b:	inc    QWORD PTR [rip+0xabde]        # 40e220 <__bss_start@@Base+0xb8>
  403642:	mov    rax,QWORD PTR [rip+0xa997]        # 40dfe0 <optarg@GLIBC_2.2.5>
  403649:	mov    r15,QWORD PTR [rax]
  40364c:	mov    rcx,r13
  40364f:	jmp    403610 <main@@Base+0x60>
  403651:	inc    QWORD PTR [rip+0xabc0]        # 40e218 <__bss_start@@Base+0xb0>
  403658:	mov    rax,QWORD PTR [rip+0xa971]        # 40dfd0 <optind@GLIBC_2.2.5>
  40365f:	movsxd rax,DWORD PTR [rax]
  403662:	cmp    eax,ebp
  403664:	jge    40369c <main@@Base+0xec>
  403666:	inc    QWORD PTR [rip+0xabd3]        # 40e240 <__bss_start@@Base+0xd8>
  40366d:	inc    QWORD PTR [rip+0xabdc]        # 40e250 <__bss_start@@Base+0xe8>
  403674:	mov    rdi,QWORD PTR [rbx+rax*8]
  403678:	test   r15,r15
  40367b:	lea    rsi,[rip+0x5a03]        # 409085 <_IO_stdin_used@@Base+0x85>
  403682:	cmovne rsi,r15
  403686:	call   403510 <my_main@@Base>
  40368b:	xor    eax,eax
  40368d:	add    rsp,0x8
  403691:	pop    rbx
  403692:	pop    r12
  403694:	pop    r13
  403696:	pop    r14
  403698:	pop    r15
  40369a:	pop    rbp
  40369b:	ret    
  40369c:	inc    QWORD PTR [rip+0xaba5]        # 40e248 <__bss_start@@Base+0xe0>
  4036a3:	mov    rax,QWORD PTR [rip+0xa946]        # 40dff0 <stderr@GLIBC_2.2.5>
  4036aa:	mov    rcx,QWORD PTR [rax]
  4036ad:	lea    rdi,[rip+0x59d5]        # 409089 <_IO_stdin_used@@Base+0x89>
  4036b4:	mov    esi,0x2d
  4036b9:	mov    edx,0x1
  4036be:	call   403270 <fwrite@plt>
  4036c3:	mov    edi,0x1
  4036c8:	call   403260 <exit@plt>
  4036cd:	nop    DWORD PTR [rax]
  4036d0:	push   rax
  4036d1:	lea    rdi,[rip+0x59df]        # 4090b7 <_IO_stdin_used@@Base+0xb7>
  4036d8:	lea    rsi,[rip+0x5a40]        # 40911f <_IO_stdin_used@@Base+0x11f>
  4036df:	mov    edx,0x7eaaf060
  4036e4:	call   406e80 <__generate_code_for_binary_boolean_expression@@Base+0x3b0>
  4036e9:	lea    rsi,[rip+0x5a34]        # 409124 <_IO_stdin_used@@Base+0x124>
  4036f0:	xor    edi,edi
  4036f2:	mov    edx,0xdc2fd3d4
  4036f7:	xor    ecx,ecx
  4036f9:	mov    r8d,0x7eaaf060
  4036ff:	call   4072d0 <__generate_code_for_binary_boolean_expression@@Base+0x800>
  403704:	lea    rsi,[rip+0xaa75]        # 40e180 <__bss_start@@Base+0x18>
  40370b:	mov    edi,0xe
  403710:	call   4076f0 <__generate_code_for_binary_boolean_expression@@Base+0xc20>
  403715:	lea    rsi,[rip+0x5a12]        # 40912e <_IO_stdin_used@@Base+0x12e>
  40371c:	mov    edi,0x1
  403721:	mov    edx,0x884edc95
  403726:	xor    ecx,ecx
  403728:	mov    r8d,0x7eaaf060
  40372e:	call   4072d0 <__generate_code_for_binary_boolean_expression@@Base+0x800>
  403733:	lea    rsi,[rip+0xaab6]        # 40e1f0 <__bss_start@@Base+0x88>
  40373a:	mov    edi,0x2
  40373f:	call   4076f0 <__generate_code_for_binary_boolean_expression@@Base+0xc20>
  403744:	lea    rsi,[rip+0x63a2]        # 409aed <_IO_stdin_used@@Base+0xaed>
  40374b:	mov    edi,0x2
  403750:	mov    edx,0xe13b85bc
  403755:	xor    ecx,ecx
  403757:	mov    r8d,0x7eaaf060
  40375d:	call   4072d0 <__generate_code_for_binary_boolean_expression@@Base+0x800>
  403762:	lea    rsi,[rip+0xaa97]        # 40e200 <__bss_start@@Base+0x98>
  403769:	mov    edi,0xb
  40376e:	call   4076f0 <__generate_code_for_binary_boolean_expression@@Base+0xc20>
  403773:	call   407b00 <__generate_code_for_binary_boolean_expression@@Base+0x1030>
  403778:	pop    rax
  403779:	jmp    4082a0 <__generate_code_for_binary_boolean_expression@@Base+0x17d0>
  40377e:	xchg   ax,ax
  403780:	push   rax
  403781:	call   4036d0 <main@@Base+0x120>
  403786:	vxorps xmm0,xmm0,xmm0
  40378a:	vmovups YMMWORD PTR [rip+0xaa3e],ymm0        # 40e1d0 <__bss_start@@Base+0x68>
  403792:	vmovups YMMWORD PTR [rip+0xaa26],ymm0        # 40e1c0 <__bss_start@@Base+0x58>
  40379a:	vmovups YMMWORD PTR [rip+0xa9fe],ymm0        # 40e1a0 <__bss_start@@Base+0x38>
  4037a2:	vmovups YMMWORD PTR [rip+0xa9d6],ymm0        # 40e180 <__bss_start@@Base+0x18>
  4037aa:	vxorps xmm1,xmm1,xmm1
  4037ae:	vmovaps XMMWORD PTR [rip+0xaa3a],xmm1        # 40e1f0 <__bss_start@@Base+0x88>
  4037b6:	vmovups YMMWORD PTR [rip+0xaa42],ymm0        # 40e200 <__bss_start@@Base+0x98>
  4037be:	vmovups YMMWORD PTR [rip+0xaa5a],ymm0        # 40e220 <__bss_start@@Base+0xb8>
  4037c6:	vmovups YMMWORD PTR [rip+0xaa6a],ymm0        # 40e238 <__bss_start@@Base+0xd0>
  4037ce:	pop    rax
  4037cf:	vzeroupper 
  4037d2:	ret    
  4037d3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4037dd:	nop    DWORD PTR [rax]
  4037e0:	lea    rdi,[rip+0xfffffffffffffee9]        # 4036d0 <main@@Base+0x120>
  4037e7:	lea    rsi,[rip+0xffffffffffffff92]        # 403780 <main@@Base+0x1d0>
  4037ee:	jmp    408680 <__gcov_flush@@Base+0xb0>
  4037f3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4037fd:	nop    DWORD PTR [rax]

0000000000403800 <init_token_int_type@@Base>:
  403800:	vmovdqa xmm0,XMMWORD PTR [rip+0xaa58]        # 40e260 <__bss_start@@Base+0xf8>
  403808:	vpcmpeqd xmm1,xmm1,xmm1
  40380c:	vpsubq xmm0,xmm0,xmm1
  403810:	vmovdqa XMMWORD PTR [rip+0xaa48],xmm0        # 40e260 <__bss_start@@Base+0xf8>
  403818:	mov    DWORD PTR [rdi],0x0
  40381e:	ret    
  40381f:	nop

0000000000403820 <init_token_int_value@@Base>:
  403820:	vmovdqa xmm0,XMMWORD PTR [rip+0xaa48]        # 40e270 <__bss_start@@Base+0x108>
  403828:	vpcmpeqd xmm1,xmm1,xmm1
  40382c:	vpsubq xmm0,xmm0,xmm1
  403830:	vmovdqa XMMWORD PTR [rip+0xaa38],xmm0        # 40e270 <__bss_start@@Base+0x108>
  403838:	mov    DWORD PTR [rdi],0x1
  40383e:	mov    DWORD PTR [rdi+0x4],esi
  403841:	ret    
  403842:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40384c:	nop    DWORD PTR [rax+0x0]

0000000000403850 <init_token_function@@Base>:
  403850:	vmovdqa xmm0,XMMWORD PTR [rip+0xaa28]        # 40e280 <__bss_start@@Base+0x118>
  403858:	vpcmpeqd xmm1,xmm1,xmm1
  40385c:	vpsubq xmm0,xmm0,xmm1
  403860:	vmovdqa XMMWORD PTR [rip+0xaa18],xmm0        # 40e280 <__bss_start@@Base+0x118>
  403868:	mov    DWORD PTR [rdi],0x2
  40386e:	mov    QWORD PTR [rdi+0x8],rsi
  403872:	ret    
  403873:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40387d:	nop    DWORD PTR [rax]

0000000000403880 <init_token_opar@@Base>:
  403880:	vmovdqa xmm0,XMMWORD PTR [rip+0xaa08]        # 40e290 <__bss_start@@Base+0x128>
  403888:	vpcmpeqd xmm1,xmm1,xmm1
  40388c:	vpsubq xmm0,xmm0,xmm1
  403890:	vmovdqa XMMWORD PTR [rip+0xa9f8],xmm0        # 40e290 <__bss_start@@Base+0x128>
  403898:	mov    DWORD PTR [rdi],0x3
  40389e:	ret    
  40389f:	nop

00000000004038a0 <init_token_cpar@@Base>:
  4038a0:	vmovdqa xmm0,XMMWORD PTR [rip+0xa9f8]        # 40e2a0 <__bss_start@@Base+0x138>
  4038a8:	vpcmpeqd xmm1,xmm1,xmm1
  4038ac:	vpsubq xmm0,xmm0,xmm1
  4038b0:	vmovdqa XMMWORD PTR [rip+0xa9e8],xmm0        # 40e2a0 <__bss_start@@Base+0x138>
  4038b8:	mov    DWORD PTR [rdi],0x4
  4038be:	ret    
  4038bf:	nop

00000000004038c0 <init_token_obra@@Base>:
  4038c0:	vmovdqa xmm0,XMMWORD PTR [rip+0xa9e8]        # 40e2b0 <__bss_start@@Base+0x148>
  4038c8:	vpcmpeqd xmm1,xmm1,xmm1
  4038cc:	vpsubq xmm0,xmm0,xmm1
  4038d0:	vmovdqa XMMWORD PTR [rip+0xa9d8],xmm0        # 40e2b0 <__bss_start@@Base+0x148>
  4038d8:	mov    DWORD PTR [rdi],0x5
  4038de:	ret    
  4038df:	nop

00000000004038e0 <init_token_cbra@@Base>:
  4038e0:	vmovdqa xmm0,XMMWORD PTR [rip+0xa9d8]        # 40e2c0 <__bss_start@@Base+0x158>
  4038e8:	vpcmpeqd xmm1,xmm1,xmm1
  4038ec:	vpsubq xmm0,xmm0,xmm1
  4038f0:	vmovdqa XMMWORD PTR [rip+0xa9c8],xmm0        # 40e2c0 <__bss_start@@Base+0x158>
  4038f8:	mov    DWORD PTR [rdi],0x6
  4038fe:	ret    
  4038ff:	nop

0000000000403900 <init_token_return@@Base>:
  403900:	vmovdqa xmm0,XMMWORD PTR [rip+0xa9c8]        # 40e2d0 <__bss_start@@Base+0x168>
  403908:	vpcmpeqd xmm1,xmm1,xmm1
  40390c:	vpsubq xmm0,xmm0,xmm1
  403910:	vmovdqa XMMWORD PTR [rip+0xa9b8],xmm0        # 40e2d0 <__bss_start@@Base+0x168>
  403918:	mov    DWORD PTR [rdi],0x7
  40391e:	ret    
  40391f:	nop

0000000000403920 <init_token_semicolon@@Base>:
  403920:	vmovdqa xmm0,XMMWORD PTR [rip+0xa9b8]        # 40e2e0 <__bss_start@@Base+0x178>
  403928:	vpcmpeqd xmm1,xmm1,xmm1
  40392c:	vpsubq xmm0,xmm0,xmm1
  403930:	vmovdqa XMMWORD PTR [rip+0xa9a8],xmm0        # 40e2e0 <__bss_start@@Base+0x178>
  403938:	mov    DWORD PTR [rdi],0x8
  40393e:	ret    
  40393f:	nop

0000000000403940 <init_token_eof@@Base>:
  403940:	vmovdqa xmm0,XMMWORD PTR [rip+0xa9a8]        # 40e2f0 <__bss_start@@Base+0x188>
  403948:	vpcmpeqd xmm1,xmm1,xmm1
  40394c:	vpsubq xmm0,xmm0,xmm1
  403950:	vmovdqa XMMWORD PTR [rip+0xa998],xmm0        # 40e2f0 <__bss_start@@Base+0x188>
  403958:	mov    DWORD PTR [rdi],0x9
  40395e:	ret    
  40395f:	nop

0000000000403960 <init_token_if@@Base>:
  403960:	vmovdqa xmm0,XMMWORD PTR [rip+0xa998]        # 40e300 <__bss_start@@Base+0x198>
  403968:	vpcmpeqd xmm1,xmm1,xmm1
  40396c:	vpsubq xmm0,xmm0,xmm1
  403970:	vmovdqa XMMWORD PTR [rip+0xa988],xmm0        # 40e300 <__bss_start@@Base+0x198>
  403978:	mov    DWORD PTR [rdi],0xa
  40397e:	ret    
  40397f:	nop

0000000000403980 <init_token_else@@Base>:
  403980:	vmovdqa xmm0,XMMWORD PTR [rip+0xa988]        # 40e310 <__bss_start@@Base+0x1a8>
  403988:	vpcmpeqd xmm1,xmm1,xmm1
  40398c:	vpsubq xmm0,xmm0,xmm1
  403990:	vmovdqa XMMWORD PTR [rip+0xa978],xmm0        # 40e310 <__bss_start@@Base+0x1a8>
  403998:	mov    DWORD PTR [rdi],0xb
  40399e:	ret    
  40399f:	nop

00000000004039a0 <init_token_boolean_op@@Base>:
  4039a0:	vmovdqa xmm0,XMMWORD PTR [rip+0xa978]        # 40e320 <__bss_start@@Base+0x1b8>
  4039a8:	vpcmpeqd xmm1,xmm1,xmm1
  4039ac:	vpsubq xmm0,xmm0,xmm1
  4039b0:	vmovdqa XMMWORD PTR [rip+0xa968],xmm0        # 40e320 <__bss_start@@Base+0x1b8>
  4039b8:	mov    DWORD PTR [rdi],0xc
  4039be:	mov    QWORD PTR [rdi+0x8],rsi
  4039c2:	ret    
  4039c3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4039cd:	nop    DWORD PTR [rax]

00000000004039d0 <free_token_int_type@@Base>:
  4039d0:	vmovdqa xmm0,XMMWORD PTR [rip+0xa958]        # 40e330 <__bss_start@@Base+0x1c8>
  4039d8:	vpcmpeqd xmm1,xmm1,xmm1
  4039dc:	vpsubq xmm0,xmm0,xmm1
  4039e0:	vmovdqa XMMWORD PTR [rip+0xa948],xmm0        # 40e330 <__bss_start@@Base+0x1c8>
  4039e8:	jmp    403040 <free@plt>
  4039ed:	nop    DWORD PTR [rax]

00000000004039f0 <free_token_int_value@@Base>:
  4039f0:	vmovdqa xmm0,XMMWORD PTR [rip+0xa948]        # 40e340 <__bss_start@@Base+0x1d8>
  4039f8:	vpcmpeqd xmm1,xmm1,xmm1
  4039fc:	vpsubq xmm0,xmm0,xmm1
  403a00:	vmovdqa XMMWORD PTR [rip+0xa938],xmm0        # 40e340 <__bss_start@@Base+0x1d8>
  403a08:	jmp    403040 <free@plt>
  403a0d:	nop    DWORD PTR [rax]

0000000000403a10 <free_token_function@@Base>:
  403a10:	vmovdqa xmm0,XMMWORD PTR [rip+0xa938]        # 40e350 <__bss_start@@Base+0x1e8>
  403a18:	vpcmpeqd xmm1,xmm1,xmm1
  403a1c:	vpsubq xmm0,xmm0,xmm1
  403a20:	vmovdqa XMMWORD PTR [rip+0xa928],xmm0        # 40e350 <__bss_start@@Base+0x1e8>
  403a28:	jmp    403040 <free@plt>
  403a2d:	nop    DWORD PTR [rax]

0000000000403a30 <free_token_opar@@Base>:
  403a30:	vmovdqa xmm0,XMMWORD PTR [rip+0xa928]        # 40e360 <__bss_start@@Base+0x1f8>
  403a38:	vpcmpeqd xmm1,xmm1,xmm1
  403a3c:	vpsubq xmm0,xmm0,xmm1
  403a40:	vmovdqa XMMWORD PTR [rip+0xa918],xmm0        # 40e360 <__bss_start@@Base+0x1f8>
  403a48:	jmp    403040 <free@plt>
  403a4d:	nop    DWORD PTR [rax]

0000000000403a50 <free_token_cpar@@Base>:
  403a50:	vmovdqa xmm0,XMMWORD PTR [rip+0xa918]        # 40e370 <__bss_start@@Base+0x208>
  403a58:	vpcmpeqd xmm1,xmm1,xmm1
  403a5c:	vpsubq xmm0,xmm0,xmm1
  403a60:	vmovdqa XMMWORD PTR [rip+0xa908],xmm0        # 40e370 <__bss_start@@Base+0x208>
  403a68:	jmp    403040 <free@plt>
  403a6d:	nop    DWORD PTR [rax]

0000000000403a70 <free_token_obra@@Base>:
  403a70:	vmovdqa xmm0,XMMWORD PTR [rip+0xa908]        # 40e380 <__bss_start@@Base+0x218>
  403a78:	vpcmpeqd xmm1,xmm1,xmm1
  403a7c:	vpsubq xmm0,xmm0,xmm1
  403a80:	vmovdqa XMMWORD PTR [rip+0xa8f8],xmm0        # 40e380 <__bss_start@@Base+0x218>
  403a88:	jmp    403040 <free@plt>
  403a8d:	nop    DWORD PTR [rax]

0000000000403a90 <free_token_cbra@@Base>:
  403a90:	vmovdqa xmm0,XMMWORD PTR [rip+0xa8f8]        # 40e390 <__bss_start@@Base+0x228>
  403a98:	vpcmpeqd xmm1,xmm1,xmm1
  403a9c:	vpsubq xmm0,xmm0,xmm1
  403aa0:	vmovdqa XMMWORD PTR [rip+0xa8e8],xmm0        # 40e390 <__bss_start@@Base+0x228>
  403aa8:	jmp    403040 <free@plt>
  403aad:	nop    DWORD PTR [rax]

0000000000403ab0 <free_token_return@@Base>:
  403ab0:	vmovdqa xmm0,XMMWORD PTR [rip+0xa8e8]        # 40e3a0 <__bss_start@@Base+0x238>
  403ab8:	vpcmpeqd xmm1,xmm1,xmm1
  403abc:	vpsubq xmm0,xmm0,xmm1
  403ac0:	vmovdqa XMMWORD PTR [rip+0xa8d8],xmm0        # 40e3a0 <__bss_start@@Base+0x238>
  403ac8:	jmp    403040 <free@plt>
  403acd:	nop    DWORD PTR [rax]

0000000000403ad0 <free_token_semicolon@@Base>:
  403ad0:	vmovdqa xmm0,XMMWORD PTR [rip+0xa8d8]        # 40e3b0 <__bss_start@@Base+0x248>
  403ad8:	vpcmpeqd xmm1,xmm1,xmm1
  403adc:	vpsubq xmm0,xmm0,xmm1
  403ae0:	vmovdqa XMMWORD PTR [rip+0xa8c8],xmm0        # 40e3b0 <__bss_start@@Base+0x248>
  403ae8:	jmp    403040 <free@plt>
  403aed:	nop    DWORD PTR [rax]

0000000000403af0 <free_token_eof@@Base>:
  403af0:	vmovdqa xmm0,XMMWORD PTR [rip+0xa8c8]        # 40e3c0 <__bss_start@@Base+0x258>
  403af8:	vpcmpeqd xmm1,xmm1,xmm1
  403afc:	vpsubq xmm0,xmm0,xmm1
  403b00:	vmovdqa XMMWORD PTR [rip+0xa8b8],xmm0        # 40e3c0 <__bss_start@@Base+0x258>
  403b08:	jmp    403040 <free@plt>
  403b0d:	nop    DWORD PTR [rax]

0000000000403b10 <free_token_if@@Base>:
  403b10:	vmovdqa xmm0,XMMWORD PTR [rip+0xa8b8]        # 40e3d0 <__bss_start@@Base+0x268>
  403b18:	vpcmpeqd xmm1,xmm1,xmm1
  403b1c:	vpsubq xmm0,xmm0,xmm1
  403b20:	vmovdqa XMMWORD PTR [rip+0xa8a8],xmm0        # 40e3d0 <__bss_start@@Base+0x268>
  403b28:	jmp    403040 <free@plt>
  403b2d:	nop    DWORD PTR [rax]

0000000000403b30 <free_token_else@@Base>:
  403b30:	vmovdqa xmm0,XMMWORD PTR [rip+0xa8a8]        # 40e3e0 <__bss_start@@Base+0x278>
  403b38:	vpcmpeqd xmm1,xmm1,xmm1
  403b3c:	vpsubq xmm0,xmm0,xmm1
  403b40:	vmovdqa XMMWORD PTR [rip+0xa898],xmm0        # 40e3e0 <__bss_start@@Base+0x278>
  403b48:	jmp    403040 <free@plt>
  403b4d:	nop    DWORD PTR [rax]

0000000000403b50 <free_token_boolean_op@@Base>:
  403b50:	push   rbx
  403b51:	mov    rbx,rdi
  403b54:	inc    QWORD PTR [rip+0xa895]        # 40e3f0 <__bss_start@@Base+0x288>
  403b5b:	mov    rdi,QWORD PTR [rdi+0x8]
  403b5f:	test   rdi,rdi
  403b62:	je     403b79 <free_token_boolean_op@@Base+0x29>
  403b64:	inc    QWORD PTR [rip+0xa88d]        # 40e3f8 <__bss_start@@Base+0x290>
  403b6b:	call   403040 <free@plt>
  403b70:	lea    rax,[rip+0xa891]        # 40e408 <__bss_start@@Base+0x2a0>
  403b77:	jmp    403b80 <free_token_boolean_op@@Base+0x30>
  403b79:	lea    rax,[rip+0xa880]        # 40e400 <__bss_start@@Base+0x298>
  403b80:	inc    QWORD PTR [rax]
  403b83:	inc    QWORD PTR [rip+0xa886]        # 40e410 <__bss_start@@Base+0x2a8>
  403b8a:	mov    rdi,rbx
  403b8d:	pop    rbx
  403b8e:	jmp    403040 <free@plt>
  403b93:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403b9d:	nop    DWORD PTR [rax]
  403ba0:	push   r15
  403ba2:	push   r14
  403ba4:	push   rbx
  403ba5:	lea    rdi,[rip+0x558a]        # 409136 <_IO_stdin_used@@Base+0x136>
  403bac:	lea    rsi,[rip+0x556c]        # 40911f <_IO_stdin_used@@Base+0x11f>
  403bb3:	mov    edx,0xb7b65b46
  403bb8:	call   406e80 <__generate_code_for_binary_boolean_expression@@Base+0x3b0>
  403bbd:	xor    ebx,ebx
  403bbf:	lea    r14,[rip+0x941a]        # 40cfe0 <_IO_stdin_used@@Base+0x3fe0>
  403bc6:	lea    r15,[rip+0x9753]        # 40d320 <_IO_stdin_used@@Base+0x4320>
  403bcd:	nop    DWORD PTR [rax]
  403bd0:	mov    edi,DWORD PTR [r14+rbx*2]
  403bd4:	mov    rsi,QWORD PTR [r14+rbx*2+0x8]
  403bd9:	mov    edx,DWORD PTR [r14+rbx*2+0x10]
  403bde:	mov    r8d,DWORD PTR [r14+rbx*2+0x18]
  403be3:	mov    ecx,DWORD PTR [r14+rbx*2+0x14]
  403be8:	call   4072d0 <__generate_code_for_binary_boolean_expression@@Base+0x800>
  403bed:	mov    edi,DWORD PTR [rbx+r15*1]
  403bf1:	mov    rsi,QWORD PTR [rbx+r15*1+0x8]
  403bf6:	call   4076f0 <__generate_code_for_binary_boolean_expression@@Base+0xc20>
  403bfb:	add    rbx,0x10
  403bff:	cmp    rbx,0x1a0
  403c06:	jne    403bd0 <free_token_boolean_op@@Base+0x80>
  403c08:	call   407b00 <__generate_code_for_binary_boolean_expression@@Base+0x1030>
  403c0d:	pop    rbx
  403c0e:	pop    r14
  403c10:	pop    r15
  403c12:	jmp    4082a0 <__generate_code_for_binary_boolean_expression@@Base+0x17d0>
  403c17:	nop    WORD PTR [rax+rax*1+0x0]
  403c20:	push   rax
  403c21:	call   403ba0 <free_token_boolean_op@@Base+0x50>
  403c26:	vxorps xmm0,xmm0,xmm0
  403c2a:	vmovaps XMMWORD PTR [rip+0xa62e],xmm0        # 40e260 <__bss_start@@Base+0xf8>
  403c32:	vmovaps XMMWORD PTR [rip+0xa636],xmm0        # 40e270 <__bss_start@@Base+0x108>
  403c3a:	vmovaps XMMWORD PTR [rip+0xa63e],xmm0        # 40e280 <__bss_start@@Base+0x118>
  403c42:	vmovaps XMMWORD PTR [rip+0xa646],xmm0        # 40e290 <__bss_start@@Base+0x128>
  403c4a:	vmovaps XMMWORD PTR [rip+0xa64e],xmm0        # 40e2a0 <__bss_start@@Base+0x138>
  403c52:	vmovaps XMMWORD PTR [rip+0xa656],xmm0        # 40e2b0 <__bss_start@@Base+0x148>
  403c5a:	vmovaps XMMWORD PTR [rip+0xa65e],xmm0        # 40e2c0 <__bss_start@@Base+0x158>
  403c62:	vmovaps XMMWORD PTR [rip+0xa666],xmm0        # 40e2d0 <__bss_start@@Base+0x168>
  403c6a:	vmovaps XMMWORD PTR [rip+0xa66e],xmm0        # 40e2e0 <__bss_start@@Base+0x178>
  403c72:	vmovaps XMMWORD PTR [rip+0xa676],xmm0        # 40e2f0 <__bss_start@@Base+0x188>
  403c7a:	vmovaps XMMWORD PTR [rip+0xa67e],xmm0        # 40e300 <__bss_start@@Base+0x198>
  403c82:	vmovaps XMMWORD PTR [rip+0xa686],xmm0        # 40e310 <__bss_start@@Base+0x1a8>
  403c8a:	vmovaps XMMWORD PTR [rip+0xa68e],xmm0        # 40e320 <__bss_start@@Base+0x1b8>
  403c92:	vmovaps XMMWORD PTR [rip+0xa696],xmm0        # 40e330 <__bss_start@@Base+0x1c8>
  403c9a:	vmovaps XMMWORD PTR [rip+0xa69e],xmm0        # 40e340 <__bss_start@@Base+0x1d8>
  403ca2:	vmovaps XMMWORD PTR [rip+0xa6a6],xmm0        # 40e350 <__bss_start@@Base+0x1e8>
  403caa:	vmovaps XMMWORD PTR [rip+0xa6ae],xmm0        # 40e360 <__bss_start@@Base+0x1f8>
  403cb2:	vmovaps XMMWORD PTR [rip+0xa6b6],xmm0        # 40e370 <__bss_start@@Base+0x208>
  403cba:	vmovaps XMMWORD PTR [rip+0xa6be],xmm0        # 40e380 <__bss_start@@Base+0x218>
  403cc2:	vmovaps XMMWORD PTR [rip+0xa6c6],xmm0        # 40e390 <__bss_start@@Base+0x228>
  403cca:	vmovaps XMMWORD PTR [rip+0xa6ce],xmm0        # 40e3a0 <__bss_start@@Base+0x238>
  403cd2:	vmovaps XMMWORD PTR [rip+0xa6d6],xmm0        # 40e3b0 <__bss_start@@Base+0x248>
  403cda:	vmovaps XMMWORD PTR [rip+0xa6de],xmm0        # 40e3c0 <__bss_start@@Base+0x258>
  403ce2:	vmovaps XMMWORD PTR [rip+0xa6e6],xmm0        # 40e3d0 <__bss_start@@Base+0x268>
  403cea:	vmovaps XMMWORD PTR [rip+0xa6ee],xmm0        # 40e3e0 <__bss_start@@Base+0x278>
  403cf2:	vxorps xmm0,xmm0,xmm0
  403cf6:	vmovups YMMWORD PTR [rip+0xa6f2],ymm0        # 40e3f0 <__bss_start@@Base+0x288>
  403cfe:	mov    QWORD PTR [rip+0xa707],0x0        # 40e410 <__bss_start@@Base+0x2a8>
  403d09:	pop    rax
  403d0a:	vzeroupper 
  403d0d:	ret    
  403d0e:	xchg   ax,ax
  403d10:	lea    rdi,[rip+0xfffffffffffffe89]        # 403ba0 <free_token_boolean_op@@Base+0x50>
  403d17:	lea    rsi,[rip+0xffffffffffffff02]        # 403c20 <free_token_boolean_op@@Base+0xd0>
  403d1e:	jmp    408680 <__gcov_flush@@Base+0xb0>
  403d23:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403d2d:	nop    DWORD PTR [rax]

0000000000403d30 <init_lexer@@Base>:
  403d30:	vmovdqa xmm0,XMMWORD PTR [rip+0xa6e8]        # 40e420 <__bss_start@@Base+0x2b8>
  403d38:	vpcmpeqd xmm1,xmm1,xmm1
  403d3c:	vpsubq xmm0,xmm0,xmm1
  403d40:	vmovdqa XMMWORD PTR [rip+0xa6d8],xmm0        # 40e420 <__bss_start@@Base+0x2b8>
  403d48:	mov    QWORD PTR [rdi],rsi
  403d4b:	vpxor  xmm0,xmm0,xmm0
  403d4f:	vmovdqu XMMWORD PTR [rdi+0x8],xmm0
  403d54:	ret    
  403d55:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403d5f:	nop

0000000000403d60 <destroy_lexer@@Base>:
  403d60:	push   rax
  403d61:	inc    QWORD PTR [rip+0xa6c8]        # 40e430 <__bss_start@@Base+0x2c8>
  403d68:	mov    rdi,QWORD PTR [rdi+0x8]
  403d6c:	test   rdi,rdi
  403d6f:	je     403d9e <destroy_lexer@@Base+0x3e>
  403d71:	inc    QWORD PTR [rip+0xa6c0]        # 40e438 <__bss_start@@Base+0x2d0>
  403d78:	vmovdqa xmm0,XMMWORD PTR [rip+0xa6e0]        # 40e460 <__bss_start@@Base+0x2f8>
  403d80:	vpcmpeqd xmm1,xmm1,xmm1
  403d84:	vpsubq xmm0,xmm0,xmm1
  403d88:	vmovdqa XMMWORD PTR [rip+0xa6d0],xmm0        # 40e460 <__bss_start@@Base+0x2f8>
  403d90:	call   403040 <free@plt>
  403d95:	lea    rax,[rip+0xa6ac]        # 40e448 <__bss_start@@Base+0x2e0>
  403d9c:	jmp    403da5 <destroy_lexer@@Base+0x45>
  403d9e:	lea    rax,[rip+0xa69b]        # 40e440 <__bss_start@@Base+0x2d8>
  403da5:	inc    QWORD PTR [rax]
  403da8:	inc    QWORD PTR [rip+0xa6a1]        # 40e450 <__bss_start@@Base+0x2e8>
  403daf:	pop    rax
  403db0:	ret    
  403db1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403dbb:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403dc0 <free_stack_base@@Base>:
  403dc0:	vmovdqa xmm0,XMMWORD PTR [rip+0xa698]        # 40e460 <__bss_start@@Base+0x2f8>
  403dc8:	vpcmpeqd xmm1,xmm1,xmm1
  403dcc:	vpsubq xmm0,xmm0,xmm1
  403dd0:	vmovdqa XMMWORD PTR [rip+0xa688],xmm0        # 40e460 <__bss_start@@Base+0x2f8>
  403dd8:	jmp    403040 <free@plt>
  403ddd:	nop    DWORD PTR [rax]

0000000000403de0 <push_back@@Base>:
  403de0:	push   r14
  403de2:	push   rbx
  403de3:	push   rax
  403de4:	mov    r14,rsi
  403de7:	mov    rbx,rdi
  403dea:	vmovdqa xmm0,XMMWORD PTR [rip+0xa67e]        # 40e470 <__bss_start@@Base+0x308>
  403df2:	vpcmpeqd xmm1,xmm1,xmm1
  403df6:	vpsubq xmm0,xmm0,xmm1
  403dfa:	vmovdqa XMMWORD PTR [rip+0xa66e],xmm0        # 40e470 <__bss_start@@Base+0x308>
  403e02:	mov    edi,0x10
  403e07:	call   4031c0 <malloc@plt>
  403e0c:	mov    QWORD PTR [rax+0x8],r14
  403e10:	mov    rcx,QWORD PTR [rbx+0x8]
  403e14:	mov    QWORD PTR [rax],rcx
  403e17:	mov    QWORD PTR [rbx+0x8],rax
  403e1b:	add    rsp,0x8
  403e1f:	pop    rbx
  403e20:	pop    r14
  403e22:	ret    
  403e23:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403e2d:	nop    DWORD PTR [rax]

0000000000403e30 <get_char@@Base>:
  403e30:	vmovdqa xmm0,XMMWORD PTR [rip+0xa648]        # 40e480 <__bss_start@@Base+0x318>
  403e38:	vpcmpeqd xmm1,xmm1,xmm1
  403e3c:	vpsubq xmm0,xmm0,xmm1
  403e40:	vmovdqa XMMWORD PTR [rip+0xa638],xmm0        # 40e480 <__bss_start@@Base+0x318>
  403e48:	mov    rax,QWORD PTR [rdi]
  403e4b:	mov    rcx,QWORD PTR [rdi+0x10]
  403e4f:	lea    rdx,[rcx+0x1]
  403e53:	mov    QWORD PTR [rdi+0x10],rdx
  403e57:	mov    al,BYTE PTR [rax+rcx*1]
  403e5a:	ret    
  403e5b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403e60 <push_back_chars@@Base>:
  403e60:	push   rax
  403e61:	inc    QWORD PTR [rip+0xa628]        # 40e490 <__bss_start@@Base+0x328>
  403e68:	mov    rax,QWORD PTR [rdi+0x10]
  403e6c:	sub    rax,rsi
  403e6f:	jb     403e85 <push_back_chars@@Base+0x25>
  403e71:	inc    QWORD PTR [rip+0xa620]        # 40e498 <__bss_start@@Base+0x330>
  403e78:	inc    QWORD PTR [rip+0xa629]        # 40e4a8 <__bss_start@@Base+0x340>
  403e7f:	mov    QWORD PTR [rdi+0x10],rax
  403e83:	pop    rax
  403e84:	ret    
  403e85:	inc    QWORD PTR [rip+0xa614]        # 40e4a0 <__bss_start@@Base+0x338>
  403e8c:	mov    rax,QWORD PTR [rip+0xa15d]        # 40dff0 <stderr@GLIBC_2.2.5>
  403e93:	mov    rcx,QWORD PTR [rax]
  403e96:	lea    rdi,[rip+0x553b]        # 4093d8 <_IO_stdin_used@@Base+0x3d8>
  403e9d:	mov    esi,0x20
  403ea2:	mov    edx,0x1
  403ea7:	call   403270 <fwrite@plt>
  403eac:	mov    edi,0x1
  403eb1:	call   403260 <exit@plt>
  403eb6:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000403ec0 <push_back_one_char@@Base>:
  403ec0:	push   rax
  403ec1:	vmovdqa xmm0,XMMWORD PTR [rip+0xa5e7]        # 40e4b0 <__bss_start@@Base+0x348>
  403ec9:	vpcmpeqd xmm1,xmm1,xmm1
  403ecd:	vpsubq xmm0,xmm0,xmm1
  403ed1:	vmovdqa XMMWORD PTR [rip+0xa5d7],xmm0        # 40e4b0 <__bss_start@@Base+0x348>
  403ed9:	inc    QWORD PTR [rip+0xa5b0]        # 40e490 <__bss_start@@Base+0x328>
  403ee0:	mov    rax,QWORD PTR [rdi+0x10]
  403ee4:	test   rax,rax
  403ee7:	je     403f00 <push_back_one_char@@Base+0x40>
  403ee9:	inc    QWORD PTR [rip+0xa5a8]        # 40e498 <__bss_start@@Base+0x330>
  403ef0:	inc    QWORD PTR [rip+0xa5b1]        # 40e4a8 <__bss_start@@Base+0x340>
  403ef7:	dec    rax
  403efa:	mov    QWORD PTR [rdi+0x10],rax
  403efe:	pop    rax
  403eff:	ret    
  403f00:	inc    QWORD PTR [rip+0xa599]        # 40e4a0 <__bss_start@@Base+0x338>
  403f07:	mov    rax,QWORD PTR [rip+0xa0e2]        # 40dff0 <stderr@GLIBC_2.2.5>
  403f0e:	mov    rcx,QWORD PTR [rax]
  403f11:	lea    rdi,[rip+0x54c0]        # 4093d8 <_IO_stdin_used@@Base+0x3d8>
  403f18:	mov    esi,0x20
  403f1d:	mov    edx,0x1
  403f22:	call   403270 <fwrite@plt>
  403f27:	mov    edi,0x1
  403f2c:	call   403260 <exit@plt>
  403f31:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403f3b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403f40 <next@@Base>:
  403f40:	push   rbp
  403f41:	push   r15
  403f43:	push   r14
  403f45:	push   r13
  403f47:	push   r12
  403f49:	push   rbx
  403f4a:	sub    rsp,0x208
  403f51:	mov    rbx,rdi
  403f54:	inc    QWORD PTR [rip+0xa565]        # 40e4c0 <__bss_start@@Base+0x358>
  403f5b:	mov    rdi,QWORD PTR [rdi+0x8]
  403f5f:	test   rdi,rdi
  403f62:	je     403fa7 <next@@Base+0x67>
  403f64:	inc    QWORD PTR [rip+0xa55d]        # 40e4c8 <__bss_start@@Base+0x360>
  403f6b:	mov    rax,QWORD PTR [rdi]
  403f6e:	mov    QWORD PTR [rbx+0x8],rax
  403f72:	mov    r14,QWORD PTR [rdi+0x8]
  403f76:	mov    QWORD PTR [rdi+0x8],0x0
  403f7e:	vmovdqa xmm0,XMMWORD PTR [rip+0xa4da]        # 40e460 <__bss_start@@Base+0x2f8>
  403f86:	vpcmpeqd xmm1,xmm1,xmm1
  403f8a:	vpsubq xmm0,xmm0,xmm1
  403f8e:	vmovdqa XMMWORD PTR [rip+0xa4ca],xmm0        # 40e460 <__bss_start@@Base+0x2f8>
  403f96:	call   403040 <free@plt>
  403f9b:	lea    rax,[rip+0xa536]        # 40e4d8 <__bss_start@@Base+0x370>
  403fa2:	jmp    4042d4 <next@@Base+0x394>
  403fa7:	inc    QWORD PTR [rip+0xa522]        # 40e4d0 <__bss_start@@Base+0x368>
  403fae:	vmovdqa xmm1,XMMWORD PTR [rip+0xa4ca]        # 40e480 <__bss_start@@Base+0x318>
  403fb6:	vpcmpeqd xmm0,xmm0,xmm0
  403fba:	vpsubq xmm1,xmm1,xmm0
  403fbe:	vmovdqa XMMWORD PTR [rip+0xa4ba],xmm1        # 40e480 <__bss_start@@Base+0x318>
  403fc6:	mov    rax,QWORD PTR [rbx]
  403fc9:	mov    rcx,QWORD PTR [rbx+0x10]
  403fcd:	lea    rdx,[rcx+0x1]
  403fd1:	mov    QWORD PTR [rbx+0x10],rdx
  403fd5:	mov    cl,BYTE PTR [rax+rcx*1]
  403fd8:	inc    QWORD PTR [rip+0xa501]        # 40e4e0 <__bss_start@@Base+0x378>
  403fdf:	test   cl,cl
  403fe1:	je     4042b1 <next@@Base+0x371>
  403fe7:	xor    ebp,ebp
  403fe9:	lea    r12,[rip+0xa508]        # 40e4f8 <__bss_start@@Base+0x390>
  403ff0:	lea    rsi,[rip+0x53c9]        # 4093c0 <_IO_stdin_used@@Base+0x3c0>
  403ff7:	lea    rdi,[rip+0xa532]        # 40e530 <__bss_start@@Base+0x3c8>
  403ffe:	lea    r8,[rip+0xa55b]        # 40e560 <__bss_start@@Base+0x3f8>
  404005:	lea    r9,[rip+0xa534]        # 40e540 <__bss_start@@Base+0x3d8>
  40400c:	lea    r10,[rip+0xa53d]        # 40e550 <__bss_start@@Base+0x3e8>
  404013:	lea    r11,[rip+0xa586]        # 40e5a0 <__bss_start@@Base+0x438>
  40401a:	lea    r14,[rip+0xa60f]        # 40e630 <__bss_start@@Base+0x4c8>
  404021:	lea    r15,[rip+0xa620]        # 40e648 <__bss_start@@Base+0x4e0>
  404028:	lea    r13,[rip+0xa649]        # 40e678 <__bss_start@@Base+0x510>
  40402f:	xor    eax,eax
  404031:	jmp    404055 <next@@Base+0x115>
  404033:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40403d:	nop    DWORD PTR [rax]
  404040:	mov    rdx,r12
  404043:	inc    QWORD PTR [rdx]
  404046:	inc    QWORD PTR [rip+0xa84b]        # 40e898 <__bss_start@@Base+0x730>
  40404d:	test   cl,cl
  40404f:	je     4042b1 <next@@Base+0x371>
  404055:	inc    QWORD PTR [rip+0xa48c]        # 40e4e8 <__bss_start@@Base+0x380>
  40405c:	cmp    rbp,0x5
  404060:	ja     404040 <next@@Base+0x100>
  404062:	movsxd rdx,DWORD PTR [rsi+rbp*4]
  404066:	add    rdx,rsi
  404069:	jmp    rdx
  40406b:	inc    QWORD PTR [rip+0xa48e]        # 40e500 <__bss_start@@Base+0x398>
  404072:	mov    rdx,rdi
  404075:	cmp    cl,0x9
  404078:	je     4040a0 <next@@Base+0x160>
  40407a:	inc    QWORD PTR [rip+0xa4b7]        # 40e538 <__bss_start@@Base+0x3d0>
  404081:	mov    rdx,r9
  404084:	cmp    cl,0x20
  404087:	je     4040a0 <next@@Base+0x160>
  404089:	inc    QWORD PTR [rip+0xa4b8]        # 40e548 <__bss_start@@Base+0x3e0>
  404090:	mov    rdx,r10
  404093:	cmp    cl,0xa
  404096:	jne    4040d3 <next@@Base+0x193>
  404098:	nop    DWORD PTR [rax+rax*1+0x0]
  4040a0:	inc    QWORD PTR [rdx]
  4040a3:	vmovdqa xmm1,XMMWORD PTR [rip+0xa3d5]        # 40e480 <__bss_start@@Base+0x318>
  4040ab:	vpsubq xmm1,xmm1,xmm0
  4040af:	vmovdqa XMMWORD PTR [rip+0xa3c9],xmm1        # 40e480 <__bss_start@@Base+0x318>
  4040b7:	mov    rcx,QWORD PTR [rbx+0x10]
  4040bb:	lea    rdx,[rcx+0x1]
  4040bf:	mov    QWORD PTR [rbx+0x10],rdx
  4040c3:	add    rcx,QWORD PTR [rbx]
  4040c6:	mov    rdx,r8
  4040c9:	xor    ebp,ebp
  4040cb:	movzx  ecx,BYTE PTR [rcx]
  4040ce:	jmp    404043 <next@@Base+0x103>
  4040d3:	inc    QWORD PTR [rip+0xa47e]        # 40e558 <__bss_start@@Base+0x3f0>
  4040da:	cmp    cl,0x30
  4040dd:	je     40474c <next@@Base+0x80c>
  4040e3:	inc    QWORD PTR [rip+0xa486]        # 40e570 <__bss_start@@Base+0x408>
  4040ea:	cmp    cl,0x31
  4040ed:	jl     404776 <next@@Base+0x836>
  4040f3:	inc    QWORD PTR [rip+0xa486]        # 40e580 <__bss_start@@Base+0x418>
  4040fa:	cmp    cl,0x39
  4040fd:	jg     40413b <next@@Base+0x1fb>
  4040ff:	inc    QWORD PTR [rip+0xa48a]        # 40e590 <__bss_start@@Base+0x428>
  404106:	movsxd rdx,eax
  404109:	inc    eax
  40410b:	mov    BYTE PTR [rsp+rdx*1],cl
  40410e:	vmovdqa xmm1,XMMWORD PTR [rip+0xa36a]        # 40e480 <__bss_start@@Base+0x318>
  404116:	vpsubq xmm1,xmm1,xmm0
  40411a:	vmovdqa XMMWORD PTR [rip+0xa35e],xmm1        # 40e480 <__bss_start@@Base+0x318>
  404122:	mov    rcx,QWORD PTR [rbx+0x10]
  404126:	lea    rdx,[rcx+0x1]
  40412a:	mov    QWORD PTR [rbx+0x10],rdx
  40412e:	add    rcx,QWORD PTR [rbx]
  404131:	mov    ebp,0x1
  404136:	mov    rdx,r11
  404139:	jmp    4040cb <next@@Base+0x18b>
  40413b:	inc    QWORD PTR [rip+0xa456]        # 40e598 <__bss_start@@Base+0x430>
  404142:	inc    QWORD PTR [rip+0xa467]        # 40e5b0 <__bss_start@@Base+0x448>
  404149:	inc    QWORD PTR [rip+0xa478]        # 40e5c8 <__bss_start@@Base+0x460>
  404150:	cmp    cl,0x7b
  404153:	je     4047e2 <next@@Base+0x8a2>
  404159:	inc    QWORD PTR [rip+0xa480]        # 40e5e0 <__bss_start@@Base+0x478>
  404160:	cmp    cl,0x7d
  404163:	je     40480a <next@@Base+0x8ca>
  404169:	inc    QWORD PTR [rip+0xa488]        # 40e5f8 <__bss_start@@Base+0x490>
  404170:	cmp    cl,0x3b
  404173:	je     404832 <next@@Base+0x8f2>
  404179:	inc    QWORD PTR [rip+0xa490]        # 40e610 <__bss_start@@Base+0x4a8>
  404180:	cmp    cl,0x65
  404183:	jne    4041c5 <next@@Base+0x285>
  404185:	inc    QWORD PTR [rip+0xa494]        # 40e620 <__bss_start@@Base+0x4b8>
  40418c:	movsxd rcx,eax
  40418f:	inc    eax
  404191:	mov    BYTE PTR [rsp+rcx*1],0x65
  404195:	vmovdqa xmm1,XMMWORD PTR [rip+0xa2e3]        # 40e480 <__bss_start@@Base+0x318>
  40419d:	vpsubq xmm1,xmm1,xmm0
  4041a1:	vmovdqa XMMWORD PTR [rip+0xa2d7],xmm1        # 40e480 <__bss_start@@Base+0x318>
  4041a9:	mov    rcx,QWORD PTR [rbx+0x10]
  4041ad:	lea    rdx,[rcx+0x1]
  4041b1:	mov    QWORD PTR [rbx+0x10],rdx
  4041b5:	add    rcx,QWORD PTR [rbx]
  4041b8:	mov    ebp,0x5
  4041bd:	mov    rdx,r14
  4041c0:	jmp    4040cb <next@@Base+0x18b>
  4041c5:	inc    QWORD PTR [rip+0xa45c]        # 40e628 <__bss_start@@Base+0x4c0>
  4041cc:	cmp    cl,0x69
  4041cf:	jne    404211 <next@@Base+0x2d1>
  4041d1:	inc    QWORD PTR [rip+0xa460]        # 40e638 <__bss_start@@Base+0x4d0>
  4041d8:	movsxd rcx,eax
  4041db:	inc    eax
  4041dd:	mov    BYTE PTR [rsp+rcx*1],0x69
  4041e1:	vmovdqa xmm1,XMMWORD PTR [rip+0xa297]        # 40e480 <__bss_start@@Base+0x318>
  4041e9:	vpsubq xmm1,xmm1,xmm0
  4041ed:	vmovdqa XMMWORD PTR [rip+0xa28b],xmm1        # 40e480 <__bss_start@@Base+0x318>
  4041f5:	mov    rcx,QWORD PTR [rbx+0x10]
  4041f9:	lea    rdx,[rcx+0x1]
  4041fd:	mov    QWORD PTR [rbx+0x10],rdx
  404201:	add    rcx,QWORD PTR [rbx]
  404204:	mov    ebp,0x2
  404209:	mov    rdx,r15
  40420c:	jmp    4040cb <next@@Base+0x18b>
  404211:	inc    QWORD PTR [rip+0xa428]        # 40e640 <__bss_start@@Base+0x4d8>
  404218:	cmp    cl,0x6d
  40421b:	jne    404261 <next@@Base+0x321>
  40421d:	inc    QWORD PTR [rip+0xa42c]        # 40e650 <__bss_start@@Base+0x4e8>
  404224:	movsxd rcx,eax
  404227:	inc    eax
  404229:	mov    BYTE PTR [rsp+rcx*1],0x6d
  40422d:	vmovdqa xmm1,XMMWORD PTR [rip+0xa24b]        # 40e480 <__bss_start@@Base+0x318>
  404235:	vpsubq xmm1,xmm1,xmm0
  404239:	vmovdqa XMMWORD PTR [rip+0xa23f],xmm1        # 40e480 <__bss_start@@Base+0x318>
  404241:	mov    rcx,QWORD PTR [rbx+0x10]
  404245:	lea    rdx,[rcx+0x1]
  404249:	mov    QWORD PTR [rbx+0x10],rdx
  40424d:	add    rcx,QWORD PTR [rbx]
  404250:	mov    ebp,0x3
  404255:	lea    rdx,[rip+0xa404]        # 40e660 <__bss_start@@Base+0x4f8>
  40425c:	jmp    4040cb <next@@Base+0x18b>
  404261:	inc    QWORD PTR [rip+0xa3f0]        # 40e658 <__bss_start@@Base+0x4f0>
  404268:	cmp    cl,0x72
  40426b:	jne    404a40 <next@@Base+0xb00>
  404271:	inc    QWORD PTR [rip+0xa3f0]        # 40e668 <__bss_start@@Base+0x500>
  404278:	movsxd rcx,eax
  40427b:	inc    eax
  40427d:	mov    BYTE PTR [rsp+rcx*1],0x72
  404281:	vmovdqa xmm1,XMMWORD PTR [rip+0xa1f7]        # 40e480 <__bss_start@@Base+0x318>
  404289:	vpsubq xmm1,xmm1,xmm0
  40428d:	vmovdqa XMMWORD PTR [rip+0xa1eb],xmm1        # 40e480 <__bss_start@@Base+0x318>
  404295:	mov    rcx,QWORD PTR [rbx+0x10]
  404299:	lea    rdx,[rcx+0x1]
  40429d:	mov    QWORD PTR [rbx+0x10],rdx
  4042a1:	add    rcx,QWORD PTR [rbx]
  4042a4:	mov    ebp,0x4
  4042a9:	mov    rdx,r13
  4042ac:	jmp    4040cb <next@@Base+0x18b>
  4042b1:	inc    QWORD PTR [rip+0xa238]        # 40e4f0 <__bss_start@@Base+0x388>
  4042b8:	mov    edi,0x4
  4042bd:	call   4031c0 <malloc@plt>
  4042c2:	mov    r14,rax
  4042c5:	mov    rdi,rax
  4042c8:	call   403940 <init_token_eof@@Base>
  4042cd:	lea    rax,[rip+0xa5cc]        # 40e8a0 <__bss_start@@Base+0x738>
  4042d4:	inc    QWORD PTR [rax]
  4042d7:	inc    QWORD PTR [rip+0xa5ca]        # 40e8a8 <__bss_start@@Base+0x740>
  4042de:	mov    rax,r14
  4042e1:	add    rsp,0x208
  4042e8:	pop    rbx
  4042e9:	pop    r12
  4042eb:	pop    r13
  4042ed:	pop    r14
  4042ef:	pop    r15
  4042f1:	pop    rbp
  4042f2:	ret    
  4042f3:	inc    QWORD PTR [rip+0xa20e]        # 40e508 <__bss_start@@Base+0x3a0>
  4042fa:	lea    edx,[rcx-0x30]
  4042fd:	cmp    dl,0x9
  404300:	ja     40435d <next@@Base+0x41d>
  404302:	movsxd rdx,eax
  404305:	vmovdqa xmm0,XMMWORD PTR [rip+0xa173]        # 40e480 <__bss_start@@Base+0x318>
  40430d:	add    rdx,rsp
  404310:	vpcmpeqd xmm1,xmm1,xmm1
  404314:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40431e:	xchg   ax,ax
  404320:	inc    QWORD PTR [rip+0xa451]        # 40e778 <__bss_start@@Base+0x610>
  404327:	vpsubq xmm0,xmm0,xmm1
  40432b:	mov    BYTE PTR [rdx],cl
  40432d:	vmovdqa XMMWORD PTR [rip+0xa14b],xmm0        # 40e480 <__bss_start@@Base+0x318>
  404335:	mov    rcx,QWORD PTR [rbx]
  404338:	mov    rsi,QWORD PTR [rbx+0x10]
  40433c:	lea    rdi,[rsi+0x1]
  404340:	mov    QWORD PTR [rbx+0x10],rdi
  404344:	movzx  ecx,BYTE PTR [rcx+rsi*1]
  404348:	inc    QWORD PTR [rip+0xa439]        # 40e788 <__bss_start@@Base+0x620>
  40434f:	lea    esi,[rcx-0x30]
  404352:	inc    rdx
  404355:	inc    eax
  404357:	cmp    sil,0xa
  40435b:	jb     404320 <next@@Base+0x3e0>
  40435d:	inc    QWORD PTR [rip+0xa41c]        # 40e780 <__bss_start@@Base+0x618>
  404364:	vmovdqa xmm0,XMMWORD PTR [rip+0xa144]        # 40e4b0 <__bss_start@@Base+0x348>
  40436c:	vpcmpeqd xmm1,xmm1,xmm1
  404370:	vpsubq xmm0,xmm0,xmm1
  404374:	vmovdqa XMMWORD PTR [rip+0xa134],xmm0        # 40e4b0 <__bss_start@@Base+0x348>
  40437c:	inc    QWORD PTR [rip+0xa10d]        # 40e490 <__bss_start@@Base+0x328>
  404383:	mov    rcx,QWORD PTR [rbx+0x10]
  404387:	test   rcx,rcx
  40438a:	je     404c84 <next@@Base+0xd44>
  404390:	inc    QWORD PTR [rip+0xa101]        # 40e498 <__bss_start@@Base+0x330>
  404397:	inc    QWORD PTR [rip+0xa10a]        # 40e4a8 <__bss_start@@Base+0x340>
  40439e:	dec    rcx
  4043a1:	mov    QWORD PTR [rbx+0x10],rcx
  4043a5:	cdqe   
  4043a7:	mov    BYTE PTR [rsp+rax*1],0x0
  4043ab:	mov    edi,0x8
  4043b0:	call   4031c0 <malloc@plt>
  4043b5:	mov    r14,rax
  4043b8:	vmovdqa xmm0,XMMWORD PTR [rip+0xa4f0]        # 40e8b0 <__bss_start@@Base+0x748>
  4043c0:	vpsubq xmm0,xmm0,XMMWORD PTR [rip+0x4fd8]        # 4093a0 <_IO_stdin_used@@Base+0x3a0>
  4043c8:	vmovdqa XMMWORD PTR [rip+0xa4e0],xmm0        # 40e8b0 <__bss_start@@Base+0x748>
  4043d0:	mov    rdi,rsp
  4043d3:	xor    esi,esi
  4043d5:	mov    edx,0xa
  4043da:	call   403180 <strtol@plt>
  4043df:	mov    rdi,r14
  4043e2:	mov    esi,eax
  4043e4:	call   403820 <init_token_int_value@@Base>
  4043e9:	lea    rax,[rip+0xa3a0]        # 40e790 <__bss_start@@Base+0x628>
  4043f0:	jmp    4042d4 <next@@Base+0x394>
  4043f5:	inc    QWORD PTR [rip+0xa11c]        # 40e518 <__bss_start@@Base+0x3b0>
  4043fc:	cmp    cl,0x61
  4043ff:	jne    404cb5 <next@@Base+0xd75>
  404405:	inc    QWORD PTR [rip+0xa3cc]        # 40e7d8 <__bss_start@@Base+0x670>
  40440c:	movsxd rbp,eax
  40440f:	mov    BYTE PTR [rsp+rbp*1],0x61
  404413:	vmovdqa xmm0,XMMWORD PTR [rip+0xa065]        # 40e480 <__bss_start@@Base+0x318>
  40441b:	vpcmpeqd xmm1,xmm1,xmm1
  40441f:	vpsubq xmm1,xmm0,xmm1
  404423:	vmovdqa XMMWORD PTR [rip+0xa055],xmm1        # 40e480 <__bss_start@@Base+0x318>
  40442b:	mov    rax,QWORD PTR [rbx]
  40442e:	mov    rcx,QWORD PTR [rbx+0x10]
  404432:	lea    rdx,[rcx+0x1]
  404436:	mov    QWORD PTR [rbx+0x10],rdx
  40443a:	cmp    BYTE PTR [rax+rcx*1],0x69
  40443e:	jne    404cc6 <next@@Base+0xd86>
  404444:	inc    QWORD PTR [rip+0xa39d]        # 40e7e8 <__bss_start@@Base+0x680>
  40444b:	mov    r14,rsp
  40444e:	mov    BYTE PTR [rbp+r14*1+0x1],0x69
  404454:	vpaddq xmm0,xmm0,XMMWORD PTR [rip+0x4f14]        # 409370 <_IO_stdin_used@@Base+0x370>
  40445c:	vmovdqa XMMWORD PTR [rip+0xa01c],xmm0        # 40e480 <__bss_start@@Base+0x318>
  404464:	mov    rax,QWORD PTR [rbx]
  404467:	mov    rcx,QWORD PTR [rbx+0x10]
  40446b:	lea    rdx,[rcx+0x1]
  40446f:	mov    QWORD PTR [rbx+0x10],rdx
  404473:	cmp    BYTE PTR [rax+rcx*1],0x6e
  404477:	jne    404cd7 <next@@Base+0xd97>
  40447d:	inc    QWORD PTR [rip+0xa374]        # 40e7f8 <__bss_start@@Base+0x690>
  404484:	lea    r15,[rbp+0x3]
  404488:	mov    WORD PTR [rbp+r14*1+0x2],0x6e
  404490:	lea    rdi,[rbp+0x4]
  404494:	call   4031c0 <malloc@plt>
  404499:	mov    rbx,rax
  40449c:	mov    rdi,rax
  40449f:	mov    rsi,r14
  4044a2:	mov    rdx,r15
  4044a5:	call   403060 <strncpy@plt>
  4044aa:	mov    BYTE PTR [rbx+rbp*1+0x3],0x0
  4044af:	mov    edi,0x10
  4044b4:	call   4031c0 <malloc@plt>
  4044b9:	mov    r14,rax
  4044bc:	mov    rdi,rax
  4044bf:	mov    rsi,rbx
  4044c2:	call   403850 <init_token_function@@Base>
  4044c7:	lea    rax,[rip+0xa332]        # 40e800 <__bss_start@@Base+0x698>
  4044ce:	jmp    4042d4 <next@@Base+0x394>
  4044d3:	inc    QWORD PTR [rip+0xa046]        # 40e520 <__bss_start@@Base+0x3b8>
  4044da:	cmp    cl,0x65
  4044dd:	jne    404ce8 <next@@Base+0xda8>
  4044e3:	inc    QWORD PTR [rip+0xa326]        # 40e810 <__bss_start@@Base+0x6a8>
  4044ea:	cdqe   
  4044ec:	mov    BYTE PTR [rsp+rax*1],0x65
  4044f0:	vmovdqa xmm0,XMMWORD PTR [rip+0x9f88]        # 40e480 <__bss_start@@Base+0x318>
  4044f8:	vpcmpeqd xmm1,xmm1,xmm1
  4044fc:	vpsubq xmm1,xmm0,xmm1
  404500:	vmovdqa XMMWORD PTR [rip+0x9f78],xmm1        # 40e480 <__bss_start@@Base+0x318>
  404508:	mov    rcx,QWORD PTR [rbx]
  40450b:	mov    rdx,QWORD PTR [rbx+0x10]
  40450f:	lea    rsi,[rdx+0x1]
  404513:	mov    QWORD PTR [rbx+0x10],rsi
  404517:	cmp    BYTE PTR [rcx+rdx*1],0x74
  40451b:	jne    404cf9 <next@@Base+0xdb9>
  404521:	inc    QWORD PTR [rip+0xa2f8]        # 40e820 <__bss_start@@Base+0x6b8>
  404528:	mov    rcx,rsp
  40452b:	mov    BYTE PTR [rax+rcx*1+0x1],0x74
  404530:	vpaddq xmm1,xmm0,XMMWORD PTR [rip+0x4e38]        # 409370 <_IO_stdin_used@@Base+0x370>
  404538:	vmovdqa XMMWORD PTR [rip+0x9f40],xmm1        # 40e480 <__bss_start@@Base+0x318>
  404540:	mov    rdx,QWORD PTR [rbx]
  404543:	mov    rsi,QWORD PTR [rbx+0x10]
  404547:	lea    rdi,[rsi+0x1]
  40454b:	mov    QWORD PTR [rbx+0x10],rdi
  40454f:	cmp    BYTE PTR [rdx+rsi*1],0x75
  404553:	jne    404d0a <next@@Base+0xdca>
  404559:	inc    QWORD PTR [rip+0xa2d0]        # 40e830 <__bss_start@@Base+0x6c8>
  404560:	mov    BYTE PTR [rax+rcx*1+0x2],0x75
  404565:	vpaddq xmm1,xmm0,XMMWORD PTR [rip+0x4e13]        # 409380 <_IO_stdin_used@@Base+0x380>
  40456d:	vmovdqa XMMWORD PTR [rip+0x9f0b],xmm1        # 40e480 <__bss_start@@Base+0x318>
  404575:	mov    rdx,QWORD PTR [rbx]
  404578:	mov    rsi,QWORD PTR [rbx+0x10]
  40457c:	lea    rdi,[rsi+0x1]
  404580:	mov    QWORD PTR [rbx+0x10],rdi
  404584:	cmp    BYTE PTR [rdx+rsi*1],0x72
  404588:	jne    404d1b <next@@Base+0xddb>
  40458e:	inc    QWORD PTR [rip+0xa2ab]        # 40e840 <__bss_start@@Base+0x6d8>
  404595:	mov    BYTE PTR [rax+rcx*1+0x3],0x72
  40459a:	vpaddq xmm0,xmm0,XMMWORD PTR [rip+0x4dee]        # 409390 <_IO_stdin_used@@Base+0x390>
  4045a2:	vmovdqa XMMWORD PTR [rip+0x9ed6],xmm0        # 40e480 <__bss_start@@Base+0x318>
  4045aa:	mov    rax,QWORD PTR [rbx]
  4045ad:	mov    rcx,QWORD PTR [rbx+0x10]
  4045b1:	lea    rdx,[rcx+0x1]
  4045b5:	mov    QWORD PTR [rbx+0x10],rdx
  4045b9:	cmp    BYTE PTR [rax+rcx*1],0x6e
  4045bd:	jne    404d2c <next@@Base+0xdec>
  4045c3:	inc    QWORD PTR [rip+0xa286]        # 40e850 <__bss_start@@Base+0x6e8>
  4045ca:	mov    edi,0x4
  4045cf:	call   4031c0 <malloc@plt>
  4045d4:	mov    r14,rax
  4045d7:	mov    rdi,rax
  4045da:	call   403900 <init_token_return@@Base>
  4045df:	lea    rax,[rip+0xa272]        # 40e858 <__bss_start@@Base+0x6f0>
  4045e6:	jmp    4042d4 <next@@Base+0x394>
  4045eb:	movsx  edx,cl
  4045ee:	inc    QWORD PTR [rip+0x9f1b]        # 40e510 <__bss_start@@Base+0x3a8>
  4045f5:	cmp    edx,0x66
  4045f8:	je     40471a <next@@Base+0x7da>
  4045fe:	cmp    edx,0x6e
  404601:	jne    404d3d <next@@Base+0xdfd>
  404607:	inc    QWORD PTR [rip+0xa192]        # 40e7a0 <__bss_start@@Base+0x638>
  40460e:	cdqe   
  404610:	mov    BYTE PTR [rsp+rax*1],cl
  404613:	vmovdqa xmm0,XMMWORD PTR [rip+0x9e65]        # 40e480 <__bss_start@@Base+0x318>
  40461b:	vpcmpeqd xmm1,xmm1,xmm1
  40461f:	vpsubq xmm0,xmm0,xmm1
  404623:	vmovdqa XMMWORD PTR [rip+0x9e55],xmm0        # 40e480 <__bss_start@@Base+0x318>
  40462b:	mov    rax,QWORD PTR [rbx]
  40462e:	mov    rcx,QWORD PTR [rbx+0x10]
  404632:	lea    rdx,[rcx+0x1]
  404636:	mov    QWORD PTR [rbx+0x10],rdx
  40463a:	cmp    BYTE PTR [rax+rcx*1],0x74
  40463e:	jne    404d81 <next@@Base+0xe41>
  404644:	inc    QWORD PTR [rip+0xa16d]        # 40e7b8 <__bss_start@@Base+0x650>
  40464b:	mov    edi,0x4
  404650:	call   4031c0 <malloc@plt>
  404655:	mov    r14,rax
  404658:	mov    rdi,rax
  40465b:	call   403800 <init_token_int_type@@Base>
  404660:	lea    rax,[rip+0xa159]        # 40e7c0 <__bss_start@@Base+0x658>
  404667:	jmp    4042d4 <next@@Base+0x394>
  40466c:	inc    QWORD PTR [rip+0x9eb5]        # 40e528 <__bss_start@@Base+0x3c0>
  404673:	cmp    cl,0x6c
  404676:	jne    404d4e <next@@Base+0xe0e>
  40467c:	inc    QWORD PTR [rip+0xa1e5]        # 40e868 <__bss_start@@Base+0x700>
  404683:	cdqe   
  404685:	mov    BYTE PTR [rsp+rax*1],0x6c
  404689:	vmovdqa xmm0,XMMWORD PTR [rip+0x9def]        # 40e480 <__bss_start@@Base+0x318>
  404691:	vpcmpeqd xmm1,xmm1,xmm1
  404695:	vpsubq xmm1,xmm0,xmm1
  404699:	vmovdqa XMMWORD PTR [rip+0x9ddf],xmm1        # 40e480 <__bss_start@@Base+0x318>
  4046a1:	mov    rcx,QWORD PTR [rbx]
  4046a4:	mov    rdx,QWORD PTR [rbx+0x10]
  4046a8:	lea    rsi,[rdx+0x1]
  4046ac:	mov    QWORD PTR [rbx+0x10],rsi
  4046b0:	cmp    BYTE PTR [rcx+rdx*1],0x73
  4046b4:	jne    404d5f <next@@Base+0xe1f>
  4046ba:	inc    QWORD PTR [rip+0xa1b7]        # 40e878 <__bss_start@@Base+0x710>
  4046c1:	mov    rcx,rsp
  4046c4:	mov    BYTE PTR [rax+rcx*1+0x1],0x73
  4046c9:	vpaddq xmm0,xmm0,XMMWORD PTR [rip+0x4c9f]        # 409370 <_IO_stdin_used@@Base+0x370>
  4046d1:	vmovdqa XMMWORD PTR [rip+0x9da7],xmm0        # 40e480 <__bss_start@@Base+0x318>
  4046d9:	mov    rax,QWORD PTR [rbx]
  4046dc:	mov    rcx,QWORD PTR [rbx+0x10]
  4046e0:	lea    rdx,[rcx+0x1]
  4046e4:	mov    QWORD PTR [rbx+0x10],rdx
  4046e8:	cmp    BYTE PTR [rax+rcx*1],0x65
  4046ec:	jne    404d70 <next@@Base+0xe30>
  4046f2:	inc    QWORD PTR [rip+0xa18f]        # 40e888 <__bss_start@@Base+0x720>
  4046f9:	mov    edi,0x4
  4046fe:	call   4031c0 <malloc@plt>
  404703:	mov    r14,rax
  404706:	mov    rdi,rax
  404709:	call   403980 <init_token_else@@Base>
  40470e:	lea    rax,[rip+0xa17b]        # 40e890 <__bss_start@@Base+0x728>
  404715:	jmp    4042d4 <next@@Base+0x394>
  40471a:	inc    QWORD PTR [rip+0xa087]        # 40e7a8 <__bss_start@@Base+0x640>
  404721:	cdqe   
  404723:	mov    BYTE PTR [rsp+rax*1],cl
  404726:	mov    BYTE PTR [rsp+rax*1+0x1],0x0
  40472b:	mov    edi,0x4
  404730:	call   4031c0 <malloc@plt>
  404735:	mov    r14,rax
  404738:	mov    rdi,rax
  40473b:	call   403960 <init_token_if@@Base>
  404740:	lea    rax,[rip+0xa081]        # 40e7c8 <__bss_start@@Base+0x660>
  404747:	jmp    4042d4 <next@@Base+0x394>
  40474c:	inc    QWORD PTR [rip+0x9e15]        # 40e568 <__bss_start@@Base+0x400>
  404753:	mov    edi,0x8
  404758:	call   4031c0 <malloc@plt>
  40475d:	mov    r14,rax
  404760:	mov    rdi,rax
  404763:	xor    esi,esi
  404765:	call   403820 <init_token_int_value@@Base>
  40476a:	lea    rax,[rip+0x9e07]        # 40e578 <__bss_start@@Base+0x410>
  404771:	jmp    4042d4 <next@@Base+0x394>
  404776:	inc    QWORD PTR [rip+0x9e0b]        # 40e588 <__bss_start@@Base+0x420>
  40477d:	cmp    cl,0x28
  404780:	jne    4047aa <next@@Base+0x86a>
  404782:	inc    QWORD PTR [rip+0x9e1f]        # 40e5a8 <__bss_start@@Base+0x440>
  404789:	mov    edi,0x4
  40478e:	call   4031c0 <malloc@plt>
  404793:	mov    r14,rax
  404796:	mov    rdi,rax
  404799:	call   403880 <init_token_opar@@Base>
  40479e:	lea    rax,[rip+0x9e13]        # 40e5b8 <__bss_start@@Base+0x450>
  4047a5:	jmp    4042d4 <next@@Base+0x394>
  4047aa:	inc    QWORD PTR [rip+0x9dff]        # 40e5b0 <__bss_start@@Base+0x448>
  4047b1:	cmp    cl,0x29
  4047b4:	jne    40485a <next@@Base+0x91a>
  4047ba:	inc    QWORD PTR [rip+0x9dff]        # 40e5c0 <__bss_start@@Base+0x458>
  4047c1:	mov    edi,0x4
  4047c6:	call   4031c0 <malloc@plt>
  4047cb:	mov    r14,rax
  4047ce:	mov    rdi,rax
  4047d1:	call   4038a0 <init_token_cpar@@Base>
  4047d6:	lea    rax,[rip+0x9df3]        # 40e5d0 <__bss_start@@Base+0x468>
  4047dd:	jmp    4042d4 <next@@Base+0x394>
  4047e2:	inc    QWORD PTR [rip+0x9def]        # 40e5d8 <__bss_start@@Base+0x470>
  4047e9:	mov    edi,0x4
  4047ee:	call   4031c0 <malloc@plt>
  4047f3:	mov    r14,rax
  4047f6:	mov    rdi,rax
  4047f9:	call   4038c0 <init_token_obra@@Base>
  4047fe:	lea    rax,[rip+0x9de3]        # 40e5e8 <__bss_start@@Base+0x480>
  404805:	jmp    4042d4 <next@@Base+0x394>
  40480a:	inc    QWORD PTR [rip+0x9ddf]        # 40e5f0 <__bss_start@@Base+0x488>
  404811:	mov    edi,0x4
  404816:	call   4031c0 <malloc@plt>
  40481b:	mov    r14,rax
  40481e:	mov    rdi,rax
  404821:	call   4038e0 <init_token_cbra@@Base>
  404826:	lea    rax,[rip+0x9dd3]        # 40e600 <__bss_start@@Base+0x498>
  40482d:	jmp    4042d4 <next@@Base+0x394>
  404832:	inc    QWORD PTR [rip+0x9dcf]        # 40e608 <__bss_start@@Base+0x4a0>
  404839:	mov    edi,0x4
  40483e:	call   4031c0 <malloc@plt>
  404843:	mov    r14,rax
  404846:	mov    rdi,rax
  404849:	call   403920 <init_token_semicolon@@Base>
  40484e:	lea    rax,[rip+0x9dc3]        # 40e618 <__bss_start@@Base+0x4b0>
  404855:	jmp    4042d4 <next@@Base+0x394>
  40485a:	inc    QWORD PTR [rip+0x9d67]        # 40e5c8 <__bss_start@@Base+0x460>
  404861:	inc    QWORD PTR [rip+0x9d78]        # 40e5e0 <__bss_start@@Base+0x478>
  404868:	inc    QWORD PTR [rip+0x9d89]        # 40e5f8 <__bss_start@@Base+0x490>
  40486f:	inc    QWORD PTR [rip+0x9d9a]        # 40e610 <__bss_start@@Base+0x4a8>
  404876:	inc    QWORD PTR [rip+0x9dab]        # 40e628 <__bss_start@@Base+0x4c0>
  40487d:	inc    QWORD PTR [rip+0x9dbc]        # 40e640 <__bss_start@@Base+0x4d8>
  404884:	inc    QWORD PTR [rip+0x9dcd]        # 40e658 <__bss_start@@Base+0x4f0>
  40488b:	inc    QWORD PTR [rip+0x9dde]        # 40e670 <__bss_start@@Base+0x508>
  404892:	cmp    cl,0x21
  404895:	jne    404913 <next@@Base+0x9d3>
  404897:	inc    QWORD PTR [rip+0x9de2]        # 40e680 <__bss_start@@Base+0x518>
  40489e:	cdqe   
  4048a0:	vmovdqa xmm0,XMMWORD PTR [rip+0x9bd8]        # 40e480 <__bss_start@@Base+0x318>
  4048a8:	vpcmpeqd xmm1,xmm1,xmm1
  4048ac:	vpsubq xmm0,xmm0,xmm1
  4048b0:	vmovdqa XMMWORD PTR [rip+0x9bc8],xmm0        # 40e480 <__bss_start@@Base+0x318>
  4048b8:	mov    BYTE PTR [rsp+rax*1],0x21
  4048bc:	mov    rax,QWORD PTR [rbx]
  4048bf:	mov    rcx,QWORD PTR [rbx+0x10]
  4048c3:	lea    rdx,[rcx+0x1]
  4048c7:	mov    QWORD PTR [rbx+0x10],rdx
  4048cb:	mov    bpl,BYTE PTR [rax+rcx*1]
  4048cf:	mov    edi,0x10
  4048d4:	call   4031c0 <malloc@plt>
  4048d9:	mov    r14,rax
  4048dc:	cmp    bpl,0x3d
  4048e0:	jne    4049bf <next@@Base+0xa7f>
  4048e6:	inc    QWORD PTR [rip+0x9dab]        # 40e698 <__bss_start@@Base+0x530>
  4048ed:	mov    edi,0x3
  4048f2:	call   4031c0 <malloc@plt>
  4048f7:	mov    cl,BYTE PTR [rsp]
  4048fa:	mov    BYTE PTR [rax],cl
  4048fc:	mov    BYTE PTR [rax+0x1],0x3d
  404900:	mov    rcx,rax
  404903:	add    rcx,0x2
  404907:	lea    rdx,[rip+0x9d9a]        # 40e6a8 <__bss_start@@Base+0x540>
  40490e:	jmp    404a23 <next@@Base+0xae3>
  404913:	inc    QWORD PTR [rip+0x9d6e]        # 40e688 <__bss_start@@Base+0x520>
  40491a:	inc    QWORD PTR [rip+0x9d9f]        # 40e6c0 <__bss_start@@Base+0x558>
  404921:	inc    QWORD PTR [rip+0x9da8]        # 40e6d0 <__bss_start@@Base+0x568>
  404928:	inc    QWORD PTR [rip+0x9dd9]        # 40e708 <__bss_start@@Base+0x5a0>
  40492f:	inc    QWORD PTR [rip+0x9dfa]        # 40e730 <__bss_start@@Base+0x5c8>
  404936:	cmp    cl,0x26
  404939:	jne    404dbb <next@@Base+0xe7b>
  40493f:	inc    QWORD PTR [rip+0x9e0a]        # 40e750 <__bss_start@@Base+0x5e8>
  404946:	cdqe   
  404948:	vmovdqa xmm0,XMMWORD PTR [rip+0x9b30]        # 40e480 <__bss_start@@Base+0x318>
  404950:	vpcmpeqd xmm1,xmm1,xmm1
  404954:	vpsubq xmm0,xmm0,xmm1
  404958:	vmovdqa XMMWORD PTR [rip+0x9b20],xmm0        # 40e480 <__bss_start@@Base+0x318>
  404960:	mov    BYTE PTR [rsp+rax*1],0x26
  404964:	mov    rax,QWORD PTR [rbx]
  404967:	mov    rcx,QWORD PTR [rbx+0x10]
  40496b:	lea    rdx,[rcx+0x1]
  40496f:	mov    QWORD PTR [rbx+0x10],rdx
  404973:	mov    bl,BYTE PTR [rax+rcx*1]
  404976:	mov    edi,0x10
  40497b:	call   4031c0 <malloc@plt>
  404980:	cmp    bl,0x26
  404983:	jne    404d92 <next@@Base+0xe52>
  404989:	mov    r14,rax
  40498c:	inc    QWORD PTR [rip+0x9dd5]        # 40e768 <__bss_start@@Base+0x600>
  404993:	mov    edi,0x3
  404998:	call   4031c0 <malloc@plt>
  40499d:	mov    cl,BYTE PTR [rsp]
  4049a0:	mov    BYTE PTR [rax],cl
  4049a2:	mov    WORD PTR [rax+0x1],0x26
  4049a8:	mov    rdi,r14
  4049ab:	mov    rsi,rax
  4049ae:	call   4039a0 <init_token_boolean_op@@Base>
  4049b3:	lea    rax,[rip+0x9db6]        # 40e770 <__bss_start@@Base+0x608>
  4049ba:	jmp    4042d4 <next@@Base+0x394>
  4049bf:	inc    QWORD PTR [rip+0x9cca]        # 40e690 <__bss_start@@Base+0x528>
  4049c6:	vmovdqa xmm0,XMMWORD PTR [rip+0x9ae2]        # 40e4b0 <__bss_start@@Base+0x348>
  4049ce:	vpsubq xmm0,xmm0,XMMWORD PTR [rip+0x49ca]        # 4093a0 <_IO_stdin_used@@Base+0x3a0>
  4049d6:	vmovdqa XMMWORD PTR [rip+0x9ad2],xmm0        # 40e4b0 <__bss_start@@Base+0x348>
  4049de:	inc    QWORD PTR [rip+0x9aab]        # 40e490 <__bss_start@@Base+0x328>
  4049e5:	mov    rax,QWORD PTR [rbx+0x10]
  4049e9:	test   rax,rax
  4049ec:	je     404c84 <next@@Base+0xd44>
  4049f2:	inc    QWORD PTR [rip+0x9a9f]        # 40e498 <__bss_start@@Base+0x330>
  4049f9:	inc    QWORD PTR [rip+0x9aa8]        # 40e4a8 <__bss_start@@Base+0x340>
  404a00:	dec    rax
  404a03:	mov    QWORD PTR [rbx+0x10],rax
  404a07:	mov    edi,0x2
  404a0c:	call   4031c0 <malloc@plt>
  404a11:	mov    cl,BYTE PTR [rsp]
  404a14:	mov    BYTE PTR [rax],cl
  404a16:	mov    rcx,rax
  404a19:	inc    rcx
  404a1c:	lea    rdx,[rip+0x9c7d]        # 40e6a0 <__bss_start@@Base+0x538>
  404a23:	mov    BYTE PTR [rcx],0x0
  404a26:	inc    QWORD PTR [rdx]
  404a29:	mov    rdi,r14
  404a2c:	mov    rsi,rax
  404a2f:	call   4039a0 <init_token_boolean_op@@Base>
  404a34:	lea    rax,[rip+0x9c75]        # 40e6b0 <__bss_start@@Base+0x548>
  404a3b:	jmp    4042d4 <next@@Base+0x394>
  404a40:	inc    QWORD PTR [rip+0x9c29]        # 40e670 <__bss_start@@Base+0x508>
  404a47:	inc    QWORD PTR [rip+0x9c3a]        # 40e688 <__bss_start@@Base+0x520>
  404a4e:	cmp    cl,0x3c
  404a51:	jne    404a5c <next@@Base+0xb1c>
  404a53:	lea    rdx,[rip+0x9c5e]        # 40e6b8 <__bss_start@@Base+0x550>
  404a5a:	jmp    404a73 <next@@Base+0xb33>
  404a5c:	inc    QWORD PTR [rip+0x9c5d]        # 40e6c0 <__bss_start@@Base+0x558>
  404a63:	cmp    cl,0x3e
  404a66:	jne    404b64 <next@@Base+0xc24>
  404a6c:	lea    rdx,[rip+0x9c55]        # 40e6c8 <__bss_start@@Base+0x560>
  404a73:	inc    QWORD PTR [rdx]
  404a76:	cdqe   
  404a78:	vmovdqa xmm0,XMMWORD PTR [rip+0x9a00]        # 40e480 <__bss_start@@Base+0x318>
  404a80:	vpcmpeqd xmm1,xmm1,xmm1
  404a84:	vpsubq xmm0,xmm0,xmm1
  404a88:	vmovdqa XMMWORD PTR [rip+0x99f0],xmm0        # 40e480 <__bss_start@@Base+0x318>
  404a90:	mov    BYTE PTR [rsp+rax*1],cl
  404a93:	mov    rax,QWORD PTR [rbx]
  404a96:	mov    rcx,QWORD PTR [rbx+0x10]
  404a9a:	lea    rdx,[rcx+0x1]
  404a9e:	mov    QWORD PTR [rbx+0x10],rdx
  404aa2:	mov    bpl,BYTE PTR [rax+rcx*1]
  404aa6:	mov    edi,0x10
  404aab:	call   4031c0 <malloc@plt>
  404ab0:	mov    r14,rax
  404ab3:	cmp    bpl,0x3d
  404ab7:	jne    404ae3 <next@@Base+0xba3>
  404ab9:	inc    QWORD PTR [rip+0x9c20]        # 40e6e0 <__bss_start@@Base+0x578>
  404ac0:	mov    edi,0x3
  404ac5:	call   4031c0 <malloc@plt>
  404aca:	mov    cl,BYTE PTR [rsp]
  404acd:	mov    BYTE PTR [rax],cl
  404acf:	mov    BYTE PTR [rax+0x1],0x3d
  404ad3:	mov    rcx,rax
  404ad6:	add    rcx,0x2
  404ada:	lea    rdx,[rip+0x9c0f]        # 40e6f0 <__bss_start@@Base+0x588>
  404ae1:	jmp    404b47 <next@@Base+0xc07>
  404ae3:	inc    QWORD PTR [rip+0x9bee]        # 40e6d8 <__bss_start@@Base+0x570>
  404aea:	vmovdqa xmm0,XMMWORD PTR [rip+0x99be]        # 40e4b0 <__bss_start@@Base+0x348>
  404af2:	vpsubq xmm0,xmm0,XMMWORD PTR [rip+0x48a6]        # 4093a0 <_IO_stdin_used@@Base+0x3a0>
  404afa:	vmovdqa XMMWORD PTR [rip+0x99ae],xmm0        # 40e4b0 <__bss_start@@Base+0x348>
  404b02:	inc    QWORD PTR [rip+0x9987]        # 40e490 <__bss_start@@Base+0x328>
  404b09:	mov    rax,QWORD PTR [rbx+0x10]
  404b0d:	test   rax,rax
  404b10:	je     404c84 <next@@Base+0xd44>
  404b16:	inc    QWORD PTR [rip+0x997b]        # 40e498 <__bss_start@@Base+0x330>
  404b1d:	inc    QWORD PTR [rip+0x9984]        # 40e4a8 <__bss_start@@Base+0x340>
  404b24:	dec    rax
  404b27:	mov    QWORD PTR [rbx+0x10],rax
  404b2b:	mov    edi,0x2
  404b30:	call   4031c0 <malloc@plt>
  404b35:	mov    cl,BYTE PTR [rsp]
  404b38:	mov    BYTE PTR [rax],cl
  404b3a:	mov    rcx,rax
  404b3d:	inc    rcx
  404b40:	lea    rdx,[rip+0x9ba1]        # 40e6e8 <__bss_start@@Base+0x580>
  404b47:	mov    BYTE PTR [rcx],0x0
  404b4a:	inc    QWORD PTR [rdx]
  404b4d:	mov    rdi,r14
  404b50:	mov    rsi,rax
  404b53:	call   4039a0 <init_token_boolean_op@@Base>
  404b58:	lea    rax,[rip+0x9b99]        # 40e6f8 <__bss_start@@Base+0x590>
  404b5f:	jmp    4042d4 <next@@Base+0x394>
  404b64:	inc    QWORD PTR [rip+0x9b65]        # 40e6d0 <__bss_start@@Base+0x568>
  404b6b:	cmp    cl,0x3d
  404b6e:	jne    404bf4 <next@@Base+0xcb4>
  404b74:	inc    QWORD PTR [rip+0x9b85]        # 40e700 <__bss_start@@Base+0x598>
  404b7b:	cdqe   
  404b7d:	vmovdqa xmm0,XMMWORD PTR [rip+0x98fb]        # 40e480 <__bss_start@@Base+0x318>
  404b85:	vpcmpeqd xmm1,xmm1,xmm1
  404b89:	vpsubq xmm0,xmm0,xmm1
  404b8d:	vmovdqa XMMWORD PTR [rip+0x98eb],xmm0        # 40e480 <__bss_start@@Base+0x318>
  404b95:	mov    BYTE PTR [rsp+rax*1],0x3d
  404b99:	mov    rax,QWORD PTR [rbx]
  404b9c:	mov    rcx,QWORD PTR [rbx+0x10]
  404ba0:	lea    rdx,[rcx+0x1]
  404ba4:	mov    QWORD PTR [rbx+0x10],rdx
  404ba8:	mov    bl,BYTE PTR [rax+rcx*1]
  404bab:	mov    edi,0x10
  404bb0:	call   4031c0 <malloc@plt>
  404bb5:	cmp    bl,0x3d
  404bb8:	jne    404da3 <next@@Base+0xe63>
  404bbe:	mov    r14,rax
  404bc1:	inc    QWORD PTR [rip+0x9b50]        # 40e718 <__bss_start@@Base+0x5b0>
  404bc8:	mov    edi,0x3
  404bcd:	call   4031c0 <malloc@plt>
  404bd2:	mov    cl,BYTE PTR [rsp]
  404bd5:	mov    BYTE PTR [rax],cl
  404bd7:	mov    WORD PTR [rax+0x1],0x3d
  404bdd:	mov    rdi,r14
  404be0:	mov    rsi,rax
  404be3:	call   4039a0 <init_token_boolean_op@@Base>
  404be8:	lea    rax,[rip+0x9b31]        # 40e720 <__bss_start@@Base+0x5b8>
  404bef:	jmp    4042d4 <next@@Base+0x394>
  404bf4:	inc    QWORD PTR [rip+0x9b0d]        # 40e708 <__bss_start@@Base+0x5a0>
  404bfb:	cmp    cl,0x7c
  404bfe:	jne    404db4 <next@@Base+0xe74>
  404c04:	inc    QWORD PTR [rip+0x9b1d]        # 40e728 <__bss_start@@Base+0x5c0>
  404c0b:	cdqe   
  404c0d:	vmovdqa xmm0,XMMWORD PTR [rip+0x986b]        # 40e480 <__bss_start@@Base+0x318>
  404c15:	vpcmpeqd xmm1,xmm1,xmm1
  404c19:	vpsubq xmm0,xmm0,xmm1
  404c1d:	vmovdqa XMMWORD PTR [rip+0x985b],xmm0        # 40e480 <__bss_start@@Base+0x318>
  404c25:	mov    BYTE PTR [rsp+rax*1],0x7c
  404c29:	mov    rax,QWORD PTR [rbx]
  404c2c:	mov    rcx,QWORD PTR [rbx+0x10]
  404c30:	lea    rdx,[rcx+0x1]
  404c34:	mov    QWORD PTR [rbx+0x10],rdx
  404c38:	mov    bl,BYTE PTR [rax+rcx*1]
  404c3b:	mov    edi,0x10
  404c40:	call   4031c0 <malloc@plt>
  404c45:	cmp    bl,0x7c
  404c48:	jne    404de7 <next@@Base+0xea7>
  404c4e:	mov    r14,rax
  404c51:	inc    QWORD PTR [rip+0x9ae8]        # 40e740 <__bss_start@@Base+0x5d8>
  404c58:	mov    edi,0x3
  404c5d:	call   4031c0 <malloc@plt>
  404c62:	mov    cl,BYTE PTR [rsp]
  404c65:	mov    BYTE PTR [rax],cl
  404c67:	mov    WORD PTR [rax+0x1],0x7c
  404c6d:	mov    rdi,r14
  404c70:	mov    rsi,rax
  404c73:	call   4039a0 <init_token_boolean_op@@Base>
  404c78:	lea    rax,[rip+0x9ac9]        # 40e748 <__bss_start@@Base+0x5e0>
  404c7f:	jmp    4042d4 <next@@Base+0x394>
  404c84:	inc    QWORD PTR [rip+0x9815]        # 40e4a0 <__bss_start@@Base+0x338>
  404c8b:	mov    rax,QWORD PTR [rip+0x935e]        # 40dff0 <stderr@GLIBC_2.2.5>
  404c92:	mov    rcx,QWORD PTR [rax]
  404c95:	lea    rdi,[rip+0x473c]        # 4093d8 <_IO_stdin_used@@Base+0x3d8>
  404c9c:	mov    esi,0x20
  404ca1:	mov    edx,0x1
  404ca6:	call   403270 <fwrite@plt>
  404cab:	mov    edi,0x1
  404cb0:	call   403260 <exit@plt>
  404cb5:	inc    QWORD PTR [rip+0x9b14]        # 40e7d0 <__bss_start@@Base+0x668>
  404cbc:	mov    edi,0x1
  404cc1:	call   403260 <exit@plt>
  404cc6:	inc    QWORD PTR [rip+0x9b13]        # 40e7e0 <__bss_start@@Base+0x678>
  404ccd:	mov    edi,0x1
  404cd2:	call   403260 <exit@plt>
  404cd7:	inc    QWORD PTR [rip+0x9b12]        # 40e7f0 <__bss_start@@Base+0x688>
  404cde:	mov    edi,0x1
  404ce3:	call   403260 <exit@plt>
  404ce8:	inc    QWORD PTR [rip+0x9b19]        # 40e808 <__bss_start@@Base+0x6a0>
  404cef:	mov    edi,0x1
  404cf4:	call   403260 <exit@plt>
  404cf9:	inc    QWORD PTR [rip+0x9b18]        # 40e818 <__bss_start@@Base+0x6b0>
  404d00:	mov    edi,0x1
  404d05:	call   403260 <exit@plt>
  404d0a:	inc    QWORD PTR [rip+0x9b17]        # 40e828 <__bss_start@@Base+0x6c0>
  404d11:	mov    edi,0x1
  404d16:	call   403260 <exit@plt>
  404d1b:	inc    QWORD PTR [rip+0x9b16]        # 40e838 <__bss_start@@Base+0x6d0>
  404d22:	mov    edi,0x1
  404d27:	call   403260 <exit@plt>
  404d2c:	inc    QWORD PTR [rip+0x9b15]        # 40e848 <__bss_start@@Base+0x6e0>
  404d33:	mov    edi,0x1
  404d38:	call   403260 <exit@plt>
  404d3d:	inc    QWORD PTR [rip+0x9a54]        # 40e798 <__bss_start@@Base+0x630>
  404d44:	mov    edi,0x1
  404d49:	call   403260 <exit@plt>
  404d4e:	inc    QWORD PTR [rip+0x9b0b]        # 40e860 <__bss_start@@Base+0x6f8>
  404d55:	mov    edi,0x1
  404d5a:	call   403260 <exit@plt>
  404d5f:	inc    QWORD PTR [rip+0x9b0a]        # 40e870 <__bss_start@@Base+0x708>
  404d66:	mov    edi,0x1
  404d6b:	call   403260 <exit@plt>
  404d70:	inc    QWORD PTR [rip+0x9b09]        # 40e880 <__bss_start@@Base+0x718>
  404d77:	mov    edi,0x1
  404d7c:	call   403260 <exit@plt>
  404d81:	inc    QWORD PTR [rip+0x9a28]        # 40e7b0 <__bss_start@@Base+0x648>
  404d88:	mov    edi,0x1
  404d8d:	call   403260 <exit@plt>
  404d92:	inc    QWORD PTR [rip+0x99c7]        # 40e760 <__bss_start@@Base+0x5f8>
  404d99:	mov    edi,0x1
  404d9e:	call   403260 <exit@plt>
  404da3:	inc    QWORD PTR [rip+0x9966]        # 40e710 <__bss_start@@Base+0x5a8>
  404daa:	mov    edi,0x1
  404daf:	call   403260 <exit@plt>
  404db4:	inc    QWORD PTR [rip+0x9975]        # 40e730 <__bss_start@@Base+0x5c8>
  404dbb:	movsx  edx,cl
  404dbe:	inc    QWORD PTR [rip+0x9993]        # 40e758 <__bss_start@@Base+0x5f0>
  404dc5:	mov    rax,QWORD PTR [rip+0x9224]        # 40dff0 <stderr@GLIBC_2.2.5>
  404dcc:	mov    rdi,QWORD PTR [rax]
  404dcf:	lea    rsi,[rip+0x4623]        # 4093f9 <_IO_stdin_used@@Base+0x3f9>
  404dd6:	xor    eax,eax
  404dd8:	call   403160 <fprintf@plt>
  404ddd:	mov    edi,0x1
  404de2:	call   403260 <exit@plt>
  404de7:	inc    QWORD PTR [rip+0x994a]        # 40e738 <__bss_start@@Base+0x5d0>
  404dee:	mov    edi,0x1
  404df3:	call   403260 <exit@plt>
  404df8:	nop    DWORD PTR [rax+rax*1+0x0]
  404e00:	push   r15
  404e02:	push   r14
  404e04:	push   rbx
  404e05:	lea    rdi,[rip+0x4615]        # 409421 <_IO_stdin_used@@Base+0x421>
  404e0c:	lea    rsi,[rip+0x430c]        # 40911f <_IO_stdin_used@@Base+0x11f>
  404e13:	mov    edx,0xbd3d1f9d
  404e18:	call   406e80 <__generate_code_for_binary_boolean_expression@@Base+0x3b0>
  404e1d:	xor    ebx,ebx
  404e1f:	lea    r14,[rip+0x869a]        # 40d4c0 <_IO_stdin_used@@Base+0x44c0>
  404e26:	lea    r15,[rip+0x87b3]        # 40d5e0 <_IO_stdin_used@@Base+0x45e0>
  404e2d:	nop    DWORD PTR [rax]
  404e30:	mov    edi,DWORD PTR [r14+rbx*2]
  404e34:	mov    rsi,QWORD PTR [r14+rbx*2+0x8]
  404e39:	mov    edx,DWORD PTR [r14+rbx*2+0x10]
  404e3e:	mov    r8d,DWORD PTR [r14+rbx*2+0x18]
  404e43:	mov    ecx,DWORD PTR [r14+rbx*2+0x14]
  404e48:	call   4072d0 <__generate_code_for_binary_boolean_expression@@Base+0x800>
  404e4d:	mov    edi,DWORD PTR [rbx+r15*1]
  404e51:	mov    rsi,QWORD PTR [rbx+r15*1+0x8]
  404e56:	call   4076f0 <__generate_code_for_binary_boolean_expression@@Base+0xc20>
  404e5b:	add    rbx,0x10
  404e5f:	cmp    rbx,0x90
  404e66:	jne    404e30 <next@@Base+0xef0>
  404e68:	call   407b00 <__generate_code_for_binary_boolean_expression@@Base+0x1030>
  404e6d:	pop    rbx
  404e6e:	pop    r14
  404e70:	pop    r15
  404e72:	jmp    4082a0 <__generate_code_for_binary_boolean_expression@@Base+0x17d0>
  404e77:	nop    WORD PTR [rax+rax*1+0x0]
  404e80:	push   rax
  404e81:	call   404e00 <next@@Base+0xec0>
  404e86:	vxorps xmm1,xmm1,xmm1
  404e8a:	vmovaps XMMWORD PTR [rip+0x958e],xmm1        # 40e420 <__bss_start@@Base+0x2b8>
  404e92:	vxorps xmm0,xmm0,xmm0
  404e96:	vmovups YMMWORD PTR [rip+0x9592],ymm0        # 40e430 <__bss_start@@Base+0x2c8>
  404e9e:	mov    QWORD PTR [rip+0x95a7],0x0        # 40e450 <__bss_start@@Base+0x2e8>
  404ea9:	vmovaps XMMWORD PTR [rip+0x95af],xmm1        # 40e460 <__bss_start@@Base+0x2f8>
  404eb1:	vmovaps XMMWORD PTR [rip+0x95b7],xmm1        # 40e470 <__bss_start@@Base+0x308>
  404eb9:	vmovaps XMMWORD PTR [rip+0x95bf],xmm1        # 40e480 <__bss_start@@Base+0x318>
  404ec1:	vmovups YMMWORD PTR [rip+0x95c7],ymm0        # 40e490 <__bss_start@@Base+0x328>
  404ec9:	vmovaps XMMWORD PTR [rip+0x95df],xmm1        # 40e4b0 <__bss_start@@Base+0x348>
  404ed1:	lea    rdi,[rip+0x95e8]        # 40e4c0 <__bss_start@@Base+0x358>
  404ed8:	mov    edx,0x3f0
  404edd:	xor    esi,esi
  404edf:	vzeroupper 
  404ee2:	call   403130 <memset@plt>
  404ee7:	vxorps xmm0,xmm0,xmm0
  404eeb:	vmovaps XMMWORD PTR [rip+0x99bd],xmm0        # 40e8b0 <__bss_start@@Base+0x748>
  404ef3:	pop    rax
  404ef4:	ret    
  404ef5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404eff:	nop
  404f00:	lea    rdi,[rip+0xfffffffffffffef9]        # 404e00 <next@@Base+0xec0>
  404f07:	lea    rsi,[rip+0xffffffffffffff72]        # 404e80 <next@@Base+0xf40>
  404f0e:	jmp    408680 <__gcov_flush@@Base+0xb0>
  404f13:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404f1d:	nop    DWORD PTR [rax]

0000000000404f20 <init_ast_base@@Base>:
  404f20:	vmovdqa xmm0,XMMWORD PTR [rip+0x9998]        # 40e8c0 <__bss_start@@Base+0x758>
  404f28:	vpcmpeqd xmm1,xmm1,xmm1
  404f2c:	vpsubq xmm0,xmm0,xmm1
  404f30:	vmovdqa XMMWORD PTR [rip+0x9988],xmm0        # 40e8c0 <__bss_start@@Base+0x758>
  404f38:	mov    DWORD PTR [rdi],esi
  404f3a:	mov    QWORD PTR [rdi+0x8],rdx
  404f3e:	ret    
  404f3f:	nop

0000000000404f40 <init_ast_base_single@@Base>:
  404f40:	vmovdqa xmm0,XMMWORD PTR [rip+0x9988]        # 40e8d0 <__bss_start@@Base+0x768>
  404f48:	vpcmpeqd xmm1,xmm1,xmm1
  404f4c:	vpsubq xmm0,xmm0,xmm1
  404f50:	vmovdqa XMMWORD PTR [rip+0x9978],xmm0        # 40e8d0 <__bss_start@@Base+0x768>
  404f58:	vmovdqa xmm0,XMMWORD PTR [rip+0x9960]        # 40e8c0 <__bss_start@@Base+0x758>
  404f60:	vpsubq xmm0,xmm0,xmm1
  404f64:	vmovdqa XMMWORD PTR [rip+0x9954],xmm0        # 40e8c0 <__bss_start@@Base+0x758>
  404f6c:	mov    DWORD PTR [rdi],esi
  404f6e:	mov    QWORD PTR [rdi+0x8],0x0
  404f76:	ret    
  404f77:	nop    WORD PTR [rax+rax*1+0x0]

0000000000404f80 <init_node_id@@Base>:
  404f80:	vmovdqa xmm0,XMMWORD PTR [rip+0x9958]        # 40e8e0 <__bss_start@@Base+0x778>
  404f88:	vpcmpeqd xmm1,xmm1,xmm1
  404f8c:	vpsubq xmm0,xmm0,xmm1
  404f90:	vmovdqa XMMWORD PTR [rip+0x9948],xmm0        # 40e8e0 <__bss_start@@Base+0x778>
  404f98:	vmovdqa xmm0,XMMWORD PTR [rip+0x9930]        # 40e8d0 <__bss_start@@Base+0x768>
  404fa0:	vpsubq xmm0,xmm0,xmm1
  404fa4:	vmovdqa XMMWORD PTR [rip+0x9924],xmm0        # 40e8d0 <__bss_start@@Base+0x768>
  404fac:	vmovdqa xmm0,XMMWORD PTR [rip+0x990c]        # 40e8c0 <__bss_start@@Base+0x758>
  404fb4:	vpsubq xmm0,xmm0,xmm1
  404fb8:	vmovdqa XMMWORD PTR [rip+0x9900],xmm0        # 40e8c0 <__bss_start@@Base+0x758>
  404fc0:	mov    DWORD PTR [rdi],0x0
  404fc6:	mov    QWORD PTR [rdi+0x8],0x0
  404fce:	mov    QWORD PTR [rdi+0x10],rsi
  404fd2:	ret    
  404fd3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404fdd:	nop    DWORD PTR [rax]

0000000000404fe0 <init_node_int@@Base>:
  404fe0:	vmovdqa xmm0,XMMWORD PTR [rip+0x9908]        # 40e8f0 <__bss_start@@Base+0x788>
  404fe8:	vpcmpeqd xmm1,xmm1,xmm1
  404fec:	vpsubq xmm0,xmm0,xmm1
  404ff0:	vmovdqa XMMWORD PTR [rip+0x98f8],xmm0        # 40e8f0 <__bss_start@@Base+0x788>
  404ff8:	vmovdqa xmm0,XMMWORD PTR [rip+0x98d0]        # 40e8d0 <__bss_start@@Base+0x768>
  405000:	vpsubq xmm0,xmm0,xmm1
  405004:	vmovdqa XMMWORD PTR [rip+0x98c4],xmm0        # 40e8d0 <__bss_start@@Base+0x768>
  40500c:	vmovdqa xmm0,XMMWORD PTR [rip+0x98ac]        # 40e8c0 <__bss_start@@Base+0x758>
  405014:	vpsubq xmm0,xmm0,xmm1
  405018:	vmovdqa XMMWORD PTR [rip+0x98a0],xmm0        # 40e8c0 <__bss_start@@Base+0x758>
  405020:	mov    DWORD PTR [rdi],0x1
  405026:	mov    QWORD PTR [rdi+0x8],0x0
  40502e:	mov    DWORD PTR [rdi+0x10],esi
  405031:	ret    
  405032:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40503c:	nop    DWORD PTR [rax+0x0]

0000000000405040 <init_node_function@@Base>:
  405040:	vmovdqa xmm0,XMMWORD PTR [rip+0x98b8]        # 40e900 <__bss_start@@Base+0x798>
  405048:	vpcmpeqd xmm1,xmm1,xmm1
  40504c:	vpsubq xmm0,xmm0,xmm1
  405050:	vmovdqa XMMWORD PTR [rip+0x98a8],xmm0        # 40e900 <__bss_start@@Base+0x798>
  405058:	vmovdqa xmm0,XMMWORD PTR [rip+0x9870]        # 40e8d0 <__bss_start@@Base+0x768>
  405060:	vpsubq xmm0,xmm0,xmm1
  405064:	vmovdqa XMMWORD PTR [rip+0x9864],xmm0        # 40e8d0 <__bss_start@@Base+0x768>
  40506c:	vmovdqa xmm0,XMMWORD PTR [rip+0x984c]        # 40e8c0 <__bss_start@@Base+0x758>
  405074:	vpsubq xmm0,xmm0,xmm1
  405078:	vmovdqa XMMWORD PTR [rip+0x9840],xmm0        # 40e8c0 <__bss_start@@Base+0x758>
  405080:	mov    DWORD PTR [rdi],0x2
  405086:	mov    QWORD PTR [rdi+0x8],0x0
  40508e:	mov    QWORD PTR [rdi+0x10],rsi
  405092:	mov    QWORD PTR [rdi+0x18],rdx
  405096:	ret    
  405097:	nop    WORD PTR [rax+rax*1+0x0]

00000000004050a0 <init_node_return@@Base>:
  4050a0:	vmovdqa xmm0,XMMWORD PTR [rip+0x9868]        # 40e910 <__bss_start@@Base+0x7a8>
  4050a8:	vpcmpeqd xmm1,xmm1,xmm1
  4050ac:	vpsubq xmm0,xmm0,xmm1
  4050b0:	vmovdqa XMMWORD PTR [rip+0x9858],xmm0        # 40e910 <__bss_start@@Base+0x7a8>
  4050b8:	vmovdqa xmm0,XMMWORD PTR [rip+0x9810]        # 40e8d0 <__bss_start@@Base+0x768>
  4050c0:	vpsubq xmm0,xmm0,xmm1
  4050c4:	vmovdqa XMMWORD PTR [rip+0x9804],xmm0        # 40e8d0 <__bss_start@@Base+0x768>
  4050cc:	vmovdqa xmm0,XMMWORD PTR [rip+0x97ec]        # 40e8c0 <__bss_start@@Base+0x758>
  4050d4:	vpsubq xmm0,xmm0,xmm1
  4050d8:	vmovdqa XMMWORD PTR [rip+0x97e0],xmm0        # 40e8c0 <__bss_start@@Base+0x758>
  4050e0:	mov    DWORD PTR [rdi],0x3
  4050e6:	mov    QWORD PTR [rdi+0x8],0x0
  4050ee:	mov    QWORD PTR [rdi+0x10],rsi
  4050f2:	ret    
  4050f3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4050fd:	nop    DWORD PTR [rax]

0000000000405100 <init_node_if@@Base>:
  405100:	vmovdqa xmm0,XMMWORD PTR [rip+0x9818]        # 40e920 <__bss_start@@Base+0x7b8>
  405108:	vpcmpeqd xmm1,xmm1,xmm1
  40510c:	vpsubq xmm0,xmm0,xmm1
  405110:	vmovdqa XMMWORD PTR [rip+0x9808],xmm0        # 40e920 <__bss_start@@Base+0x7b8>
  405118:	vmovdqa xmm0,XMMWORD PTR [rip+0x97b0]        # 40e8d0 <__bss_start@@Base+0x768>
  405120:	vpsubq xmm0,xmm0,xmm1
  405124:	vmovdqa XMMWORD PTR [rip+0x97a4],xmm0        # 40e8d0 <__bss_start@@Base+0x768>
  40512c:	vmovdqa xmm0,XMMWORD PTR [rip+0x978c]        # 40e8c0 <__bss_start@@Base+0x758>
  405134:	vpsubq xmm0,xmm0,xmm1
  405138:	vmovdqa XMMWORD PTR [rip+0x9780],xmm0        # 40e8c0 <__bss_start@@Base+0x758>
  405140:	mov    DWORD PTR [rdi],0x4
  405146:	mov    QWORD PTR [rdi+0x8],0x0
  40514e:	mov    QWORD PTR [rdi+0x10],rsi
  405152:	mov    QWORD PTR [rdi+0x18],rdx
  405156:	mov    QWORD PTR [rdi+0x20],rcx
  40515a:	ret    
  40515b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000405160 <init_node_boolean_operator@@Base>:
  405160:	vmovdqa xmm0,XMMWORD PTR [rip+0x97c8]        # 40e930 <__bss_start@@Base+0x7c8>
  405168:	vpcmpeqd xmm1,xmm1,xmm1
  40516c:	vpsubq xmm0,xmm0,xmm1
  405170:	vmovdqa XMMWORD PTR [rip+0x97b8],xmm0        # 40e930 <__bss_start@@Base+0x7c8>
  405178:	vmovdqa xmm0,XMMWORD PTR [rip+0x9750]        # 40e8d0 <__bss_start@@Base+0x768>
  405180:	vpsubq xmm0,xmm0,xmm1
  405184:	vmovdqa XMMWORD PTR [rip+0x9744],xmm0        # 40e8d0 <__bss_start@@Base+0x768>
  40518c:	vmovdqa xmm0,XMMWORD PTR [rip+0x972c]        # 40e8c0 <__bss_start@@Base+0x758>
  405194:	vpsubq xmm0,xmm0,xmm1
  405198:	vmovdqa XMMWORD PTR [rip+0x9720],xmm0        # 40e8c0 <__bss_start@@Base+0x758>
  4051a0:	mov    QWORD PTR [rdi+0x8],0x0
  4051a8:	mov    DWORD PTR [rdi],0x5
  4051ae:	mov    DWORD PTR [rdi+0x20],esi
  4051b1:	mov    QWORD PTR [rdi+0x10],rdx
  4051b5:	mov    QWORD PTR [rdi+0x18],rcx
  4051b9:	ret    
  4051ba:	nop    WORD PTR [rax+rax*1+0x0]

00000000004051c0 <free_node@@Base>:
  4051c0:	push   rbx
  4051c1:	inc    QWORD PTR [rip+0x9778]        # 40e940 <__bss_start@@Base+0x7d8>
  4051c8:	mov    eax,DWORD PTR [rdi]
  4051ca:	cmp    rax,0x5
  4051ce:	ja     4053d3 <free_node@@Base+0x213>
  4051d4:	mov    rbx,rdi
  4051d7:	lea    rcx,[rip+0x4316]        # 4094f4 <_IO_stdin_used@@Base+0x4f4>
  4051de:	movsxd rax,DWORD PTR [rcx+rax*4]
  4051e2:	add    rax,rcx
  4051e5:	jmp    rax
  4051e7:	inc    QWORD PTR [rip+0x9762]        # 40e950 <__bss_start@@Base+0x7e8>
  4051ee:	inc    QWORD PTR [rip+0x97cb]        # 40e9c0 <__bss_start@@Base+0x858>
  4051f5:	mov    rdi,QWORD PTR [rbx+0x8]
  4051f9:	test   rdi,rdi
  4051fc:	je     405301 <free_node@@Base+0x141>
  405202:	inc    QWORD PTR [rip+0x97bf]        # 40e9c8 <__bss_start@@Base+0x860>
  405209:	call   4051c0 <free_node@@Base>
  40520e:	lea    rax,[rip+0x97c3]        # 40e9d8 <__bss_start@@Base+0x870>
  405215:	jmp    405308 <free_node@@Base+0x148>
  40521a:	inc    QWORD PTR [rip+0x974f]        # 40e970 <__bss_start@@Base+0x808>
  405221:	mov    rdi,rbx
  405224:	call   405550 <free_node_if@@Base>
  405229:	lea    rax,[rip+0x9770]        # 40e9a0 <__bss_start@@Base+0x838>
  405230:	jmp    4053c7 <free_node@@Base+0x207>
  405235:	inc    QWORD PTR [rip+0x9724]        # 40e960 <__bss_start@@Base+0x7f8>
  40523c:	inc    QWORD PTR [rip+0x97dd]        # 40ea20 <__bss_start@@Base+0x8b8>
  405243:	mov    rdi,QWORD PTR [rbx+0x8]
  405247:	test   rdi,rdi
  40524a:	je     405326 <free_node@@Base+0x166>
  405250:	inc    QWORD PTR [rip+0x97d1]        # 40ea28 <__bss_start@@Base+0x8c0>
  405257:	call   4051c0 <free_node@@Base>
  40525c:	lea    rax,[rip+0x97d5]        # 40ea38 <__bss_start@@Base+0x8d0>
  405263:	jmp    40532d <free_node@@Base+0x16d>
  405268:	inc    QWORD PTR [rip+0x96e9]        # 40e958 <__bss_start@@Base+0x7f0>
  40526f:	inc    QWORD PTR [rip+0x977a]        # 40e9f0 <__bss_start@@Base+0x888>
  405276:	mov    rdi,QWORD PTR [rbx+0x8]
  40527a:	test   rdi,rdi
  40527d:	je     405351 <free_node@@Base+0x191>
  405283:	inc    QWORD PTR [rip+0x976e]        # 40e9f8 <__bss_start@@Base+0x890>
  40528a:	call   4051c0 <free_node@@Base>
  40528f:	lea    rax,[rip+0x9772]        # 40ea08 <__bss_start@@Base+0x8a0>
  405296:	jmp    405358 <free_node@@Base+0x198>
  40529b:	inc    QWORD PTR [rip+0x96c6]        # 40e968 <__bss_start@@Base+0x800>
  4052a2:	inc    QWORD PTR [rip+0x97a7]        # 40ea50 <__bss_start@@Base+0x8e8>
  4052a9:	mov    rdi,QWORD PTR [rbx+0x8]
  4052ad:	test   rdi,rdi
  4052b0:	je     405373 <free_node@@Base+0x1b3>
  4052b6:	inc    QWORD PTR [rip+0x979b]        # 40ea58 <__bss_start@@Base+0x8f0>
  4052bd:	call   4051c0 <free_node@@Base>
  4052c2:	lea    rax,[rip+0x979f]        # 40ea68 <__bss_start@@Base+0x900>
  4052c9:	jmp    40537a <free_node@@Base+0x1ba>
  4052ce:	inc    QWORD PTR [rip+0x96a3]        # 40e978 <__bss_start@@Base+0x810>
  4052d5:	inc    QWORD PTR [rip+0x97d4]        # 40eab0 <__bss_start@@Base+0x948>
  4052dc:	mov    rdi,QWORD PTR [rbx+0x8]
  4052e0:	test   rdi,rdi
  4052e3:	je     405395 <free_node@@Base+0x1d5>
  4052e9:	inc    QWORD PTR [rip+0x97c8]        # 40eab8 <__bss_start@@Base+0x950>
  4052f0:	call   4051c0 <free_node@@Base>
  4052f5:	lea    rax,[rip+0x97cc]        # 40eac8 <__bss_start@@Base+0x960>
  4052fc:	jmp    40539c <free_node@@Base+0x1dc>
  405301:	lea    rax,[rip+0x96c8]        # 40e9d0 <__bss_start@@Base+0x868>
  405308:	inc    QWORD PTR [rax]
  40530b:	inc    QWORD PTR [rip+0x96ce]        # 40e9e0 <__bss_start@@Base+0x878>
  405312:	mov    rdi,rbx
  405315:	call   403040 <free@plt>
  40531a:	lea    rax,[rip+0x965f]        # 40e980 <__bss_start@@Base+0x818>
  405321:	jmp    4053c7 <free_node@@Base+0x207>
  405326:	lea    rax,[rip+0x9703]        # 40ea30 <__bss_start@@Base+0x8c8>
  40532d:	inc    QWORD PTR [rax]
  405330:	inc    QWORD PTR [rip+0x9709]        # 40ea40 <__bss_start@@Base+0x8d8>
  405337:	mov    rdi,QWORD PTR [rbx+0x10]
  40533b:	call   403040 <free@plt>
  405340:	mov    rdi,rbx
  405343:	call   403040 <free@plt>
  405348:	lea    rax,[rip+0x9641]        # 40e990 <__bss_start@@Base+0x828>
  40534f:	jmp    4053c7 <free_node@@Base+0x207>
  405351:	lea    rax,[rip+0x96a8]        # 40ea00 <__bss_start@@Base+0x898>
  405358:	inc    QWORD PTR [rax]
  40535b:	inc    QWORD PTR [rip+0x96ae]        # 40ea10 <__bss_start@@Base+0x8a8>
  405362:	mov    rdi,rbx
  405365:	call   403040 <free@plt>
  40536a:	lea    rax,[rip+0x9617]        # 40e988 <__bss_start@@Base+0x820>
  405371:	jmp    4053c7 <free_node@@Base+0x207>
  405373:	lea    rax,[rip+0x96e6]        # 40ea60 <__bss_start@@Base+0x8f8>
  40537a:	inc    QWORD PTR [rax]
  40537d:	inc    QWORD PTR [rip+0x96ec]        # 40ea70 <__bss_start@@Base+0x908>
  405384:	mov    rdi,rbx
  405387:	call   403040 <free@plt>
  40538c:	lea    rax,[rip+0x9605]        # 40e998 <__bss_start@@Base+0x830>
  405393:	jmp    4053c7 <free_node@@Base+0x207>
  405395:	lea    rax,[rip+0x9724]        # 40eac0 <__bss_start@@Base+0x958>
  40539c:	inc    QWORD PTR [rax]
  40539f:	inc    QWORD PTR [rip+0x972a]        # 40ead0 <__bss_start@@Base+0x968>
  4053a6:	mov    rdi,QWORD PTR [rbx+0x10]
  4053aa:	call   4051c0 <free_node@@Base>
  4053af:	mov    rdi,QWORD PTR [rbx+0x18]
  4053b3:	call   4051c0 <free_node@@Base>
  4053b8:	mov    rdi,rbx
  4053bb:	call   403040 <free@plt>
  4053c0:	lea    rax,[rip+0x95e1]        # 40e9a8 <__bss_start@@Base+0x840>
  4053c7:	inc    QWORD PTR [rax]
  4053ca:	inc    QWORD PTR [rip+0x95df]        # 40e9b0 <__bss_start@@Base+0x848>
  4053d1:	pop    rbx
  4053d2:	ret    
  4053d3:	inc    QWORD PTR [rip+0x956e]        # 40e948 <__bss_start@@Base+0x7e0>
  4053da:	mov    rax,QWORD PTR [rip+0x8c0f]        # 40dff0 <stderr@GLIBC_2.2.5>
  4053e1:	mov    rcx,QWORD PTR [rax]
  4053e4:	lea    rdi,[rip+0x4121]        # 40950c <_IO_stdin_used@@Base+0x50c>
  4053eb:	mov    esi,0x1f
  4053f0:	mov    edx,0x1
  4053f5:	call   403270 <fwrite@plt>
  4053fa:	mov    edi,0x1
  4053ff:	call   403260 <exit@plt>
  405404:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40540e:	xchg   ax,ax

0000000000405410 <free_node_id@@Base>:
  405410:	push   rbx
  405411:	mov    rbx,rdi
  405414:	inc    QWORD PTR [rip+0x95a5]        # 40e9c0 <__bss_start@@Base+0x858>
  40541b:	mov    rdi,QWORD PTR [rdi+0x8]
  40541f:	test   rdi,rdi
  405422:	je     405439 <free_node_id@@Base+0x29>
  405424:	inc    QWORD PTR [rip+0x959d]        # 40e9c8 <__bss_start@@Base+0x860>
  40542b:	call   4051c0 <free_node@@Base>
  405430:	lea    rax,[rip+0x95a1]        # 40e9d8 <__bss_start@@Base+0x870>
  405437:	jmp    405440 <free_node_id@@Base+0x30>
  405439:	lea    rax,[rip+0x9590]        # 40e9d0 <__bss_start@@Base+0x868>
  405440:	inc    QWORD PTR [rax]
  405443:	inc    QWORD PTR [rip+0x9596]        # 40e9e0 <__bss_start@@Base+0x878>
  40544a:	mov    rdi,rbx
  40544d:	pop    rbx
  40544e:	jmp    403040 <free@plt>
  405453:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40545d:	nop    DWORD PTR [rax]

0000000000405460 <free_node_int@@Base>:
  405460:	push   rbx
  405461:	mov    rbx,rdi
  405464:	inc    QWORD PTR [rip+0x9585]        # 40e9f0 <__bss_start@@Base+0x888>
  40546b:	mov    rdi,QWORD PTR [rdi+0x8]
  40546f:	test   rdi,rdi
  405472:	je     405489 <free_node_int@@Base+0x29>
  405474:	inc    QWORD PTR [rip+0x957d]        # 40e9f8 <__bss_start@@Base+0x890>
  40547b:	call   4051c0 <free_node@@Base>
  405480:	lea    rax,[rip+0x9581]        # 40ea08 <__bss_start@@Base+0x8a0>
  405487:	jmp    405490 <free_node_int@@Base+0x30>
  405489:	lea    rax,[rip+0x9570]        # 40ea00 <__bss_start@@Base+0x898>
  405490:	inc    QWORD PTR [rax]
  405493:	inc    QWORD PTR [rip+0x9576]        # 40ea10 <__bss_start@@Base+0x8a8>
  40549a:	mov    rdi,rbx
  40549d:	pop    rbx
  40549e:	jmp    403040 <free@plt>
  4054a3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4054ad:	nop    DWORD PTR [rax]

00000000004054b0 <free_node_function@@Base>:
  4054b0:	push   rbx
  4054b1:	mov    rbx,rdi
  4054b4:	inc    QWORD PTR [rip+0x9565]        # 40ea20 <__bss_start@@Base+0x8b8>
  4054bb:	mov    rdi,QWORD PTR [rdi+0x8]
  4054bf:	test   rdi,rdi
  4054c2:	je     4054d9 <free_node_function@@Base+0x29>
  4054c4:	inc    QWORD PTR [rip+0x955d]        # 40ea28 <__bss_start@@Base+0x8c0>
  4054cb:	call   4051c0 <free_node@@Base>
  4054d0:	lea    rax,[rip+0x9561]        # 40ea38 <__bss_start@@Base+0x8d0>
  4054d7:	jmp    4054e0 <free_node_function@@Base+0x30>
  4054d9:	lea    rax,[rip+0x9550]        # 40ea30 <__bss_start@@Base+0x8c8>
  4054e0:	inc    QWORD PTR [rax]
  4054e3:	inc    QWORD PTR [rip+0x9556]        # 40ea40 <__bss_start@@Base+0x8d8>
  4054ea:	mov    rdi,QWORD PTR [rbx+0x10]
  4054ee:	call   403040 <free@plt>
  4054f3:	mov    rdi,rbx
  4054f6:	pop    rbx
  4054f7:	jmp    403040 <free@plt>
  4054fc:	nop    DWORD PTR [rax+0x0]

0000000000405500 <free_node_return@@Base>:
  405500:	push   rbx
  405501:	mov    rbx,rdi
  405504:	inc    QWORD PTR [rip+0x9545]        # 40ea50 <__bss_start@@Base+0x8e8>
  40550b:	mov    rdi,QWORD PTR [rdi+0x8]
  40550f:	test   rdi,rdi
  405512:	je     405529 <free_node_return@@Base+0x29>
  405514:	inc    QWORD PTR [rip+0x953d]        # 40ea58 <__bss_start@@Base+0x8f0>
  40551b:	call   4051c0 <free_node@@Base>
  405520:	lea    rax,[rip+0x9541]        # 40ea68 <__bss_start@@Base+0x900>
  405527:	jmp    405530 <free_node_return@@Base+0x30>
  405529:	lea    rax,[rip+0x9530]        # 40ea60 <__bss_start@@Base+0x8f8>
  405530:	inc    QWORD PTR [rax]
  405533:	inc    QWORD PTR [rip+0x9536]        # 40ea70 <__bss_start@@Base+0x908>
  40553a:	mov    rdi,rbx
  40553d:	pop    rbx
  40553e:	jmp    403040 <free@plt>
  405543:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40554d:	nop    DWORD PTR [rax]

0000000000405550 <free_node_if@@Base>:
  405550:	push   rbx
  405551:	mov    rbx,rdi
  405554:	inc    QWORD PTR [rip+0x9525]        # 40ea80 <__bss_start@@Base+0x918>
  40555b:	mov    rdi,QWORD PTR [rdi+0x8]
  40555f:	test   rdi,rdi
  405562:	je     405579 <free_node_if@@Base+0x29>
  405564:	inc    QWORD PTR [rip+0x951d]        # 40ea88 <__bss_start@@Base+0x920>
  40556b:	call   4051c0 <free_node@@Base>
  405570:	lea    rax,[rip+0x9521]        # 40ea98 <__bss_start@@Base+0x930>
  405577:	jmp    405580 <free_node_if@@Base+0x30>
  405579:	lea    rax,[rip+0x9510]        # 40ea90 <__bss_start@@Base+0x928>
  405580:	inc    QWORD PTR [rax]
  405583:	inc    QWORD PTR [rip+0x9516]        # 40eaa0 <__bss_start@@Base+0x938>
  40558a:	mov    rdi,QWORD PTR [rbx+0x10]
  40558e:	call   4051c0 <free_node@@Base>
  405593:	mov    rdi,QWORD PTR [rbx+0x18]
  405597:	call   4051c0 <free_node@@Base>
  40559c:	mov    rdi,QWORD PTR [rbx+0x20]
  4055a0:	call   4051c0 <free_node@@Base>
  4055a5:	mov    rdi,rbx
  4055a8:	pop    rbx
  4055a9:	jmp    403040 <free@plt>
  4055ae:	xchg   ax,ax

00000000004055b0 <free_node_boolean_operator@@Base>:
  4055b0:	push   rbx
  4055b1:	mov    rbx,rdi
  4055b4:	inc    QWORD PTR [rip+0x94f5]        # 40eab0 <__bss_start@@Base+0x948>
  4055bb:	mov    rdi,QWORD PTR [rdi+0x8]
  4055bf:	test   rdi,rdi
  4055c2:	je     4055d9 <free_node_boolean_operator@@Base+0x29>
  4055c4:	inc    QWORD PTR [rip+0x94ed]        # 40eab8 <__bss_start@@Base+0x950>
  4055cb:	call   4051c0 <free_node@@Base>
  4055d0:	lea    rax,[rip+0x94f1]        # 40eac8 <__bss_start@@Base+0x960>
  4055d7:	jmp    4055e0 <free_node_boolean_operator@@Base+0x30>
  4055d9:	lea    rax,[rip+0x94e0]        # 40eac0 <__bss_start@@Base+0x958>
  4055e0:	inc    QWORD PTR [rax]
  4055e3:	inc    QWORD PTR [rip+0x94e6]        # 40ead0 <__bss_start@@Base+0x968>
  4055ea:	mov    rdi,QWORD PTR [rbx+0x10]
  4055ee:	call   4051c0 <free_node@@Base>
  4055f3:	mov    rdi,QWORD PTR [rbx+0x18]
  4055f7:	call   4051c0 <free_node@@Base>
  4055fc:	mov    rdi,rbx
  4055ff:	pop    rbx
  405600:	jmp    403040 <free@plt>
  405605:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40560f:	nop

0000000000405610 <get_boolean_op_value@@Base>:
  405610:	push   rbx
  405611:	inc    QWORD PTR [rip+0x94c8]        # 40eae0 <__bss_start@@Base+0x978>
  405618:	mov    rbx,QWORD PTR [rdi+0x8]
  40561c:	mov    esi,0x2
  405621:	mov    rdi,rbx
  405624:	call   403140 <strnlen@plt>
  405629:	cmp    rax,0x2
  40562d:	jne    40571d <get_boolean_op_value@@Base+0x10d>
  405633:	inc    QWORD PTR [rip+0x94ae]        # 40eae8 <__bss_start@@Base+0x980>
  40563a:	lea    rsi,[rip+0x3eeb]        # 40952c <_IO_stdin_used@@Base+0x52c>
  405641:	mov    edx,0x2
  405646:	mov    rdi,rbx
  405649:	call   403070 <strncmp@plt>
  40564e:	test   eax,eax
  405650:	je     405752 <get_boolean_op_value@@Base+0x142>
  405656:	inc    QWORD PTR [rip+0x94a3]        # 40eb00 <__bss_start@@Base+0x998>
  40565d:	lea    rsi,[rip+0x3ecb]        # 40952f <_IO_stdin_used@@Base+0x52f>
  405664:	mov    edx,0x2
  405669:	mov    rdi,rbx
  40566c:	call   403070 <strncmp@plt>
  405671:	test   eax,eax
  405673:	je     40578e <get_boolean_op_value@@Base+0x17e>
  405679:	inc    QWORD PTR [rip+0x9498]        # 40eb18 <__bss_start@@Base+0x9b0>
  405680:	lea    rsi,[rip+0x3eab]        # 409532 <_IO_stdin_used@@Base+0x532>
  405687:	mov    edx,0x2
  40568c:	mov    rdi,rbx
  40568f:	call   403070 <strncmp@plt>
  405694:	test   eax,eax
  405696:	je     4057a3 <get_boolean_op_value@@Base+0x193>
  40569c:	inc    QWORD PTR [rip+0x948d]        # 40eb30 <__bss_start@@Base+0x9c8>
  4056a3:	lea    rsi,[rip+0x3e8b]        # 409535 <_IO_stdin_used@@Base+0x535>
  4056aa:	mov    edx,0x2
  4056af:	mov    rdi,rbx
  4056b2:	call   403070 <strncmp@plt>
  4056b7:	test   eax,eax
  4056b9:	je     4057b8 <get_boolean_op_value@@Base+0x1a8>
  4056bf:	inc    QWORD PTR [rip+0x9482]        # 40eb48 <__bss_start@@Base+0x9e0>
  4056c6:	lea    rsi,[rip+0x3e6b]        # 409538 <_IO_stdin_used@@Base+0x538>
  4056cd:	mov    edx,0x2
  4056d2:	mov    rdi,rbx
  4056d5:	call   403070 <strncmp@plt>
  4056da:	test   eax,eax
  4056dc:	je     4057cd <get_boolean_op_value@@Base+0x1bd>
  4056e2:	inc    QWORD PTR [rip+0x9477]        # 40eb60 <__bss_start@@Base+0x9f8>
  4056e9:	lea    rsi,[rip+0x3e4b]        # 40953b <_IO_stdin_used@@Base+0x53b>
  4056f0:	mov    edx,0x2
  4056f5:	mov    rdi,rbx
  4056f8:	call   403070 <strncmp@plt>
  4056fd:	test   eax,eax
  4056ff:	jne    405818 <get_boolean_op_value@@Base+0x208>
  405705:	inc    QWORD PTR [rip+0x9464]        # 40eb70 <__bss_start@@Base+0xa08>
  40570c:	mov    eax,0x5
  405711:	lea    rcx,[rip+0x9468]        # 40eb80 <__bss_start@@Base+0xa18>
  405718:	jmp    4057e0 <get_boolean_op_value@@Base+0x1d0>
  40571d:	inc    QWORD PTR [rip+0x93cc]        # 40eaf0 <__bss_start@@Base+0x988>
  405724:	movsx  eax,BYTE PTR [rbx]
  405727:	cmp    eax,0x3e
  40572a:	je     405779 <get_boolean_op_value@@Base+0x169>
  40572c:	cmp    eax,0x3c
  40572f:	je     405764 <get_boolean_op_value@@Base+0x154>
  405731:	cmp    eax,0x21
  405734:	jne    4057ec <get_boolean_op_value@@Base+0x1dc>
  40573a:	inc    QWORD PTR [rip+0x944f]        # 40eb90 <__bss_start@@Base+0xa28>
  405741:	mov    eax,0x8
  405746:	lea    rcx,[rip+0x945b]        # 40eba8 <__bss_start@@Base+0xa40>
  40574d:	jmp    4057e0 <get_boolean_op_value@@Base+0x1d0>
  405752:	inc    QWORD PTR [rip+0x939f]        # 40eaf8 <__bss_start@@Base+0x990>
  405759:	xor    eax,eax
  40575b:	lea    rcx,[rip+0x93a6]        # 40eb08 <__bss_start@@Base+0x9a0>
  405762:	jmp    4057e0 <get_boolean_op_value@@Base+0x1d0>
  405764:	inc    QWORD PTR [rip+0x942d]        # 40eb98 <__bss_start@@Base+0xa30>
  40576b:	mov    eax,0x6
  405770:	lea    rcx,[rip+0x9439]        # 40ebb0 <__bss_start@@Base+0xa48>
  405777:	jmp    4057e0 <get_boolean_op_value@@Base+0x1d0>
  405779:	inc    QWORD PTR [rip+0x9420]        # 40eba0 <__bss_start@@Base+0xa38>
  405780:	mov    eax,0x7
  405785:	lea    rcx,[rip+0x942c]        # 40ebb8 <__bss_start@@Base+0xa50>
  40578c:	jmp    4057e0 <get_boolean_op_value@@Base+0x1d0>
  40578e:	inc    QWORD PTR [rip+0x937b]        # 40eb10 <__bss_start@@Base+0x9a8>
  405795:	mov    eax,0x1
  40579a:	lea    rcx,[rip+0x937f]        # 40eb20 <__bss_start@@Base+0x9b8>
  4057a1:	jmp    4057e0 <get_boolean_op_value@@Base+0x1d0>
  4057a3:	inc    QWORD PTR [rip+0x937e]        # 40eb28 <__bss_start@@Base+0x9c0>
  4057aa:	mov    eax,0x2
  4057af:	lea    rcx,[rip+0x9382]        # 40eb38 <__bss_start@@Base+0x9d0>
  4057b6:	jmp    4057e0 <get_boolean_op_value@@Base+0x1d0>
  4057b8:	inc    QWORD PTR [rip+0x9381]        # 40eb40 <__bss_start@@Base+0x9d8>
  4057bf:	mov    eax,0x3
  4057c4:	lea    rcx,[rip+0x9385]        # 40eb50 <__bss_start@@Base+0x9e8>
  4057cb:	jmp    4057e0 <get_boolean_op_value@@Base+0x1d0>
  4057cd:	inc    QWORD PTR [rip+0x9384]        # 40eb58 <__bss_start@@Base+0x9f0>
  4057d4:	mov    eax,0x4
  4057d9:	lea    rcx,[rip+0x9388]        # 40eb68 <__bss_start@@Base+0xa00>
  4057e0:	inc    QWORD PTR [rcx]
  4057e3:	inc    QWORD PTR [rip+0x93d6]        # 40ebc0 <__bss_start@@Base+0xa58>
  4057ea:	pop    rbx
  4057eb:	ret    
  4057ec:	inc    QWORD PTR [rip+0x9395]        # 40eb88 <__bss_start@@Base+0xa20>
  4057f3:	mov    rax,QWORD PTR [rip+0x87f6]        # 40dff0 <stderr@GLIBC_2.2.5>
  4057fa:	mov    rdi,QWORD PTR [rax]
  4057fd:	lea    rsi,[rip+0x3d3a]        # 40953e <_IO_stdin_used@@Base+0x53e>
  405804:	mov    rdx,rbx
  405807:	xor    eax,eax
  405809:	call   403160 <fprintf@plt>
  40580e:	mov    edi,0x1
  405813:	call   403260 <exit@plt>
  405818:	inc    QWORD PTR [rip+0x9359]        # 40eb78 <__bss_start@@Base+0xa10>
  40581f:	jmp    4057f3 <get_boolean_op_value@@Base+0x1e3>
  405821:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40582b:	nop    DWORD PTR [rax+rax*1+0x0]
  405830:	push   r15
  405832:	push   r14
  405834:	push   rbx
  405835:	lea    rdi,[rip+0x3d38]        # 409574 <_IO_stdin_used@@Base+0x574>
  40583c:	lea    rsi,[rip+0x38dc]        # 40911f <_IO_stdin_used@@Base+0x11f>
  405843:	mov    edx,0x3bea7c70
  405848:	call   406e80 <__generate_code_for_binary_boolean_expression@@Base+0x3b0>
  40584d:	xor    ebx,ebx
  40584f:	lea    r14,[rip+0x7e1a]        # 40d670 <_IO_stdin_used@@Base+0x4670>
  405856:	lea    r15,[rip+0x8013]        # 40d870 <_IO_stdin_used@@Base+0x4870>
  40585d:	nop    DWORD PTR [rax]
  405860:	mov    edi,DWORD PTR [r14+rbx*2]
  405864:	mov    rsi,QWORD PTR [r14+rbx*2+0x8]
  405869:	mov    edx,DWORD PTR [r14+rbx*2+0x10]
  40586e:	mov    r8d,DWORD PTR [r14+rbx*2+0x18]
  405873:	mov    ecx,DWORD PTR [r14+rbx*2+0x14]
  405878:	call   4072d0 <__generate_code_for_binary_boolean_expression@@Base+0x800>
  40587d:	mov    edi,DWORD PTR [rbx+r15*1]
  405881:	mov    rsi,QWORD PTR [rbx+r15*1+0x8]
  405886:	call   4076f0 <__generate_code_for_binary_boolean_expression@@Base+0xc20>
  40588b:	add    rbx,0x10
  40588f:	cmp    rbx,0x100
  405896:	jne    405860 <get_boolean_op_value@@Base+0x250>
  405898:	call   407b00 <__generate_code_for_binary_boolean_expression@@Base+0x1030>
  40589d:	pop    rbx
  40589e:	pop    r14
  4058a0:	pop    r15
  4058a2:	jmp    4082a0 <__generate_code_for_binary_boolean_expression@@Base+0x17d0>
  4058a7:	nop    WORD PTR [rax+rax*1+0x0]
  4058b0:	push   rax
  4058b1:	call   405830 <get_boolean_op_value@@Base+0x220>
  4058b6:	vxorps xmm0,xmm0,xmm0
  4058ba:	vmovaps XMMWORD PTR [rip+0x8ffe],xmm0        # 40e8c0 <__bss_start@@Base+0x758>
  4058c2:	vmovaps XMMWORD PTR [rip+0x9006],xmm0        # 40e8d0 <__bss_start@@Base+0x768>
  4058ca:	vmovaps XMMWORD PTR [rip+0x900e],xmm0        # 40e8e0 <__bss_start@@Base+0x778>
  4058d2:	vmovaps XMMWORD PTR [rip+0x9016],xmm0        # 40e8f0 <__bss_start@@Base+0x788>
  4058da:	vmovaps XMMWORD PTR [rip+0x901e],xmm0        # 40e900 <__bss_start@@Base+0x798>
  4058e2:	vmovaps XMMWORD PTR [rip+0x9026],xmm0        # 40e910 <__bss_start@@Base+0x7a8>
  4058ea:	vmovaps XMMWORD PTR [rip+0x902e],xmm0        # 40e920 <__bss_start@@Base+0x7b8>
  4058f2:	vmovaps XMMWORD PTR [rip+0x9036],xmm0        # 40e930 <__bss_start@@Base+0x7c8>
  4058fa:	vxorps xmm0,xmm0,xmm0
  4058fe:	vmovups YMMWORD PTR [rip+0x903a],ymm0        # 40e940 <__bss_start@@Base+0x7d8>
  405906:	vmovups YMMWORD PTR [rip+0x9052],ymm0        # 40e960 <__bss_start@@Base+0x7f8>
  40590e:	vmovups YMMWORD PTR [rip+0x906a],ymm0        # 40e980 <__bss_start@@Base+0x818>
  405916:	vmovups YMMWORD PTR [rip+0x907a],ymm0        # 40e998 <__bss_start@@Base+0x830>
  40591e:	vmovups YMMWORD PTR [rip+0x909a],ymm0        # 40e9c0 <__bss_start@@Base+0x858>
  405926:	mov    QWORD PTR [rip+0x90af],0x0        # 40e9e0 <__bss_start@@Base+0x878>
  405931:	vmovups YMMWORD PTR [rip+0x90b7],ymm0        # 40e9f0 <__bss_start@@Base+0x888>
  405939:	mov    QWORD PTR [rip+0x90cc],0x0        # 40ea10 <__bss_start@@Base+0x8a8>
  405944:	vmovups YMMWORD PTR [rip+0x90d4],ymm0        # 40ea20 <__bss_start@@Base+0x8b8>
  40594c:	mov    QWORD PTR [rip+0x90e9],0x0        # 40ea40 <__bss_start@@Base+0x8d8>
  405957:	vmovups YMMWORD PTR [rip+0x90f1],ymm0        # 40ea50 <__bss_start@@Base+0x8e8>
  40595f:	mov    QWORD PTR [rip+0x9106],0x0        # 40ea70 <__bss_start@@Base+0x908>
  40596a:	vmovups YMMWORD PTR [rip+0x910e],ymm0        # 40ea80 <__bss_start@@Base+0x918>
  405972:	mov    QWORD PTR [rip+0x9123],0x0        # 40eaa0 <__bss_start@@Base+0x938>
  40597d:	vmovups YMMWORD PTR [rip+0x912b],ymm0        # 40eab0 <__bss_start@@Base+0x948>
  405985:	vmovups YMMWORD PTR [rip+0x9213],ymm0        # 40eba0 <__bss_start@@Base+0xa38>
  40598d:	vmovups YMMWORD PTR [rip+0x91eb],ymm0        # 40eb80 <__bss_start@@Base+0xa18>
  405995:	vmovups YMMWORD PTR [rip+0x91c3],ymm0        # 40eb60 <__bss_start@@Base+0x9f8>
  40599d:	vmovups YMMWORD PTR [rip+0x919b],ymm0        # 40eb40 <__bss_start@@Base+0x9d8>
  4059a5:	vmovups YMMWORD PTR [rip+0x9173],ymm0        # 40eb20 <__bss_start@@Base+0x9b8>
  4059ad:	mov    QWORD PTR [rip+0x9118],0x0        # 40ead0 <__bss_start@@Base+0x968>
  4059b8:	vmovups YMMWORD PTR [rip+0x9140],ymm0        # 40eb00 <__bss_start@@Base+0x998>
  4059c0:	vmovups YMMWORD PTR [rip+0x9118],ymm0        # 40eae0 <__bss_start@@Base+0x978>
  4059c8:	mov    QWORD PTR [rip+0x91ed],0x0        # 40ebc0 <__bss_start@@Base+0xa58>
  4059d3:	pop    rax
  4059d4:	vzeroupper 
  4059d7:	ret    
  4059d8:	nop    DWORD PTR [rax+rax*1+0x0]
  4059e0:	lea    rdi,[rip+0xfffffffffffffe49]        # 405830 <get_boolean_op_value@@Base+0x220>
  4059e7:	lea    rsi,[rip+0xfffffffffffffec2]        # 4058b0 <get_boolean_op_value@@Base+0x2a0>
  4059ee:	jmp    408680 <__gcov_flush@@Base+0xb0>
  4059f3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4059fd:	nop    DWORD PTR [rax]

0000000000405a00 <init_grammar@@Base>:
  405a00:	vmovdqa xmm0,XMMWORD PTR [rip+0x91c8]        # 40ebd0 <__bss_start@@Base+0xa68>
  405a08:	vpcmpeqd xmm1,xmm1,xmm1
  405a0c:	vpsubq xmm0,xmm0,xmm1
  405a10:	vmovdqa XMMWORD PTR [rip+0x91b8],xmm0        # 40ebd0 <__bss_start@@Base+0xa68>
  405a18:	mov    QWORD PTR [rdi],rsi
  405a1b:	ret    
  405a1c:	nop    DWORD PTR [rax+0x0]

0000000000405a20 <destroy_grammar@@Base>:
  405a20:	vmovdqa xmm0,XMMWORD PTR [rip+0x91b8]        # 40ebe0 <__bss_start@@Base+0xa78>
  405a28:	vpcmpeqd xmm1,xmm1,xmm1
  405a2c:	vpsubq xmm0,xmm0,xmm1
  405a30:	vmovdqa XMMWORD PTR [rip+0x91a8],xmm0        # 40ebe0 <__bss_start@@Base+0xa78>
  405a38:	ret    
  405a39:	nop    DWORD PTR [rax+0x0]

0000000000405a40 <build_ast@@Base>:
  405a40:	vmovdqa xmm0,XMMWORD PTR [rip+0x91a8]        # 40ebf0 <__bss_start@@Base+0xa88>
  405a48:	vpcmpeqd xmm1,xmm1,xmm1
  405a4c:	vpsubq xmm0,xmm0,xmm1
  405a50:	vmovdqa XMMWORD PTR [rip+0x9198],xmm0        # 40ebf0 <__bss_start@@Base+0xa88>
  405a58:	jmp    405a60 <read_function_ast_node@@Base>
  405a5d:	nop    DWORD PTR [rax]

0000000000405a60 <read_function_ast_node@@Base>:
  405a60:	push   r15
  405a62:	push   r14
  405a64:	push   rbx
  405a65:	mov    rbx,rdi
  405a68:	inc    QWORD PTR [rip+0x9191]        # 40ec00 <__bss_start@@Base+0xa98>
  405a6f:	mov    rdi,QWORD PTR [rdi]
  405a72:	call   403f40 <next@@Base>
  405a77:	cmp    DWORD PTR [rax],0x0
  405a7a:	je     405a8f <read_function_ast_node@@Base+0x2f>
  405a7c:	inc    QWORD PTR [rip+0x9185]        # 40ec08 <__bss_start@@Base+0xaa0>
  405a83:	lea    rax,[rip+0x918e]        # 40ec18 <__bss_start@@Base+0xab0>
  405a8a:	jmp    405b53 <read_function_ast_node@@Base+0xf3>
  405a8f:	inc    QWORD PTR [rip+0x917a]        # 40ec10 <__bss_start@@Base+0xaa8>
  405a96:	mov    rdi,rax
  405a99:	call   4039d0 <free_token_int_type@@Base>
  405a9e:	mov    rdi,QWORD PTR [rbx]
  405aa1:	call   403f40 <next@@Base>
  405aa6:	cmp    DWORD PTR [rax],0x2
  405aa9:	jne    405b25 <read_function_ast_node@@Base+0xc5>
  405aab:	mov    r14,rax
  405aae:	inc    QWORD PTR [rip+0x9173]        # 40ec28 <__bss_start@@Base+0xac0>
  405ab5:	mov    rdi,QWORD PTR [rbx]
  405ab8:	call   403f40 <next@@Base>
  405abd:	cmp    DWORD PTR [rax],0x3
  405ac0:	jne    405b35 <read_function_ast_node@@Base+0xd5>
  405ac2:	inc    QWORD PTR [rip+0x9177]        # 40ec40 <__bss_start@@Base+0xad8>
  405ac9:	mov    rdi,rax
  405acc:	call   403a30 <free_token_opar@@Base>
  405ad1:	mov    rdi,QWORD PTR [rbx]
  405ad4:	call   403f40 <next@@Base>
  405ad9:	cmp    DWORD PTR [rax],0x4
  405adc:	jne    405b45 <read_function_ast_node@@Base+0xe5>
  405ade:	inc    QWORD PTR [rip+0x9173]        # 40ec58 <__bss_start@@Base+0xaf0>
  405ae5:	mov    rdi,rax
  405ae8:	call   403a50 <free_token_cpar@@Base>
  405aed:	mov    rdi,rbx
  405af0:	call   405b70 <read_body@@Base>
  405af5:	mov    r15,rax
  405af8:	mov    edi,0x20
  405afd:	call   4031c0 <malloc@plt>
  405b02:	mov    rbx,rax
  405b05:	mov    rsi,QWORD PTR [r14+0x8]
  405b09:	mov    rdi,rax
  405b0c:	mov    rdx,r15
  405b0f:	call   405040 <init_node_function@@Base>
  405b14:	mov    rdi,r14
  405b17:	call   403a10 <free_token_function@@Base>
  405b1c:	lea    rax,[rip+0x9145]        # 40ec68 <__bss_start@@Base+0xb00>
  405b23:	jmp    405b55 <read_function_ast_node@@Base+0xf5>
  405b25:	inc    QWORD PTR [rip+0x90f4]        # 40ec20 <__bss_start@@Base+0xab8>
  405b2c:	lea    rax,[rip+0x90fd]        # 40ec30 <__bss_start@@Base+0xac8>
  405b33:	jmp    405b53 <read_function_ast_node@@Base+0xf3>
  405b35:	inc    QWORD PTR [rip+0x90fc]        # 40ec38 <__bss_start@@Base+0xad0>
  405b3c:	lea    rax,[rip+0x9105]        # 40ec48 <__bss_start@@Base+0xae0>
  405b43:	jmp    405b53 <read_function_ast_node@@Base+0xf3>
  405b45:	inc    QWORD PTR [rip+0x9104]        # 40ec50 <__bss_start@@Base+0xae8>
  405b4c:	lea    rax,[rip+0x910d]        # 40ec60 <__bss_start@@Base+0xaf8>
  405b53:	xor    ebx,ebx
  405b55:	inc    QWORD PTR [rax]
  405b58:	inc    QWORD PTR [rip+0x9111]        # 40ec70 <__bss_start@@Base+0xb08>
  405b5f:	mov    rax,rbx
  405b62:	pop    rbx
  405b63:	pop    r14
  405b65:	pop    r15
  405b67:	ret    
  405b68:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000405b70 <read_body@@Base>:
  405b70:	push   rbp
  405b71:	push   r15
  405b73:	push   r14
  405b75:	push   r13
  405b77:	push   r12
  405b79:	push   rbx
  405b7a:	push   rax
  405b7b:	mov    r15,rdi
  405b7e:	inc    QWORD PTR [rip+0x90fb]        # 40ec80 <__bss_start@@Base+0xb18>
  405b85:	mov    rdi,QWORD PTR [rdi]
  405b88:	call   403f40 <next@@Base>
  405b8d:	cmp    DWORD PTR [rax],0x5
  405b90:	jne    405bbf <read_body@@Base+0x4f>
  405b92:	inc    QWORD PTR [rip+0x90f7]        # 40ec90 <__bss_start@@Base+0xb28>
  405b99:	mov    rdi,rax
  405b9c:	call   403a70 <free_token_obra@@Base>
  405ba1:	mov    rdi,QWORD PTR [r15]
  405ba4:	call   403f40 <next@@Base>
  405ba9:	inc    QWORD PTR [rip+0x90f0]        # 40eca0 <__bss_start@@Base+0xb38>
  405bb0:	mov    ecx,DWORD PTR [rax]
  405bb2:	cmp    ecx,0x6
  405bb5:	jne    405bd5 <read_body@@Base+0x65>
  405bb7:	xor    r14d,r14d
  405bba:	jmp    405c91 <read_body@@Base+0x121>
  405bbf:	inc    QWORD PTR [rip+0x90c2]        # 40ec88 <__bss_start@@Base+0xb20>
  405bc6:	lea    rax,[rip+0x90cb]        # 40ec98 <__bss_start@@Base+0xb30>
  405bcd:	xor    r14d,r14d
  405bd0:	jmp    405cc2 <read_body@@Base+0x152>
  405bd5:	xor    r12d,r12d
  405bd8:	lea    rbp,[rip+0x9119]        # 40ecf8 <__bss_start@@Base+0xb90>
  405bdf:	lea    r13,[rip+0x90ea]        # 40ecd0 <__bss_start@@Base+0xb68>
  405be6:	xor    r14d,r14d
  405be9:	jmp    405c1d <read_body@@Base+0xad>
  405beb:	nop    DWORD PTR [rax+rax*1+0x0]
  405bf0:	inc    QWORD PTR [rip+0x90f9]        # 40ecf0 <__bss_start@@Base+0xb88>
  405bf7:	lea    rax,[rip+0x9102]        # 40ed00 <__bss_start@@Base+0xb98>
  405bfe:	mov    r14,rbx
  405c01:	inc    QWORD PTR [rax]
  405c04:	mov    rdi,QWORD PTR [r15]
  405c07:	call   403f40 <next@@Base>
  405c0c:	inc    QWORD PTR [rip+0x90f5]        # 40ed08 <__bss_start@@Base+0xba0>
  405c13:	mov    ecx,DWORD PTR [rax]
  405c15:	mov    r12,rbx
  405c18:	cmp    ecx,0x6
  405c1b:	je     405c91 <read_body@@Base+0x121>
  405c1d:	inc    QWORD PTR [rip+0x9084]        # 40eca8 <__bss_start@@Base+0xb40>
  405c24:	cmp    ecx,0xa
  405c27:	je     405c50 <read_body@@Base+0xe0>
  405c29:	cmp    ecx,0x7
  405c2c:	jne    405ca9 <read_body@@Base+0x139>
  405c2e:	inc    QWORD PTR [rip+0x908b]        # 40ecc0 <__bss_start@@Base+0xb58>
  405c35:	mov    rdi,rax
  405c38:	call   403ab0 <free_token_return@@Base>
  405c3d:	mov    rdi,r15
  405c40:	call   405ce0 <read_return_expression@@Base>
  405c45:	mov    rbx,rax
  405c48:	mov    rax,r13
  405c4b:	jmp    405c71 <read_body@@Base+0x101>
  405c4d:	nop    DWORD PTR [rax]
  405c50:	inc    QWORD PTR [rip+0x9071]        # 40ecc8 <__bss_start@@Base+0xb60>
  405c57:	mov    rdi,rax
  405c5a:	call   403b10 <free_token_if@@Base>
  405c5f:	mov    rdi,r15
  405c62:	call   405da0 <read_if_statement@@Base>
  405c67:	mov    rbx,rax
  405c6a:	lea    rax,[rip+0x9067]        # 40ecd8 <__bss_start@@Base+0xb70>
  405c71:	inc    QWORD PTR [rax]
  405c74:	test   r14,r14
  405c77:	je     405bf0 <read_body@@Base+0x80>
  405c7d:	inc    QWORD PTR [rip+0x9064]        # 40ece8 <__bss_start@@Base+0xb80>
  405c84:	mov    QWORD PTR [r12+0x8],rbx
  405c89:	mov    rax,rbp
  405c8c:	jmp    405c01 <read_body@@Base+0x91>
  405c91:	inc    QWORD PTR [rip+0x9018]        # 40ecb0 <__bss_start@@Base+0xb48>
  405c98:	mov    rdi,rax
  405c9b:	call   403a90 <free_token_cbra@@Base>
  405ca0:	lea    rax,[rip+0x9069]        # 40ed10 <__bss_start@@Base+0xba8>
  405ca7:	jmp    405cc2 <read_body@@Base+0x152>
  405ca9:	inc    QWORD PTR [rip+0x9008]        # 40ecb8 <__bss_start@@Base+0xb50>
  405cb0:	mov    rdi,QWORD PTR [r15]
  405cb3:	mov    rsi,rax
  405cb6:	call   403de0 <push_back@@Base>
  405cbb:	lea    rax,[rip+0x901e]        # 40ece0 <__bss_start@@Base+0xb78>
  405cc2:	inc    QWORD PTR [rax]
  405cc5:	inc    QWORD PTR [rip+0x904c]        # 40ed18 <__bss_start@@Base+0xbb0>
  405ccc:	mov    rax,r14
  405ccf:	add    rsp,0x8
  405cd3:	pop    rbx
  405cd4:	pop    r12
  405cd6:	pop    r13
  405cd8:	pop    r14
  405cda:	pop    r15
  405cdc:	pop    rbp
  405cdd:	ret    
  405cde:	xchg   ax,ax

0000000000405ce0 <read_return_expression@@Base>:
  405ce0:	push   r15
  405ce2:	push   r14
  405ce4:	push   rbx
  405ce5:	mov    r14,rdi
  405ce8:	inc    QWORD PTR [rip+0x9031]        # 40ed20 <__bss_start@@Base+0xbb8>
  405cef:	mov    rdi,QWORD PTR [rdi]
  405cf2:	call   403f40 <next@@Base>
  405cf7:	cmp    DWORD PTR [rax],0x1
  405cfa:	jne    405d63 <read_return_expression@@Base+0x83>
  405cfc:	mov    rbx,rax
  405cff:	inc    QWORD PTR [rip+0x902a]        # 40ed30 <__bss_start@@Base+0xbc8>
  405d06:	mov    edi,0x18
  405d0b:	call   4031c0 <malloc@plt>
  405d10:	mov    r15,rax
  405d13:	mov    esi,DWORD PTR [rbx+0x4]
  405d16:	mov    rdi,rax
  405d19:	call   404fe0 <init_node_int@@Base>
  405d1e:	mov    rdi,rbx
  405d21:	call   4039f0 <free_token_int_value@@Base>
  405d26:	mov    edi,0x18
  405d2b:	call   4031c0 <malloc@plt>
  405d30:	mov    rbx,rax
  405d33:	mov    rdi,rax
  405d36:	mov    rsi,r15
  405d39:	call   4050a0 <init_node_return@@Base>
  405d3e:	mov    rdi,QWORD PTR [r14]
  405d41:	call   403f40 <next@@Base>
  405d46:	cmp    DWORD PTR [rax],0x8
  405d49:	jne    405d73 <read_return_expression@@Base+0x93>
  405d4b:	inc    QWORD PTR [rip+0x8ff6]        # 40ed48 <__bss_start@@Base+0xbe0>
  405d52:	mov    rdi,rax
  405d55:	call   403ad0 <free_token_semicolon@@Base>
  405d5a:	lea    rax,[rip+0x8ff7]        # 40ed58 <__bss_start@@Base+0xbf0>
  405d61:	jmp    405d83 <read_return_expression@@Base+0xa3>
  405d63:	inc    QWORD PTR [rip+0x8fbe]        # 40ed28 <__bss_start@@Base+0xbc0>
  405d6a:	lea    rax,[rip+0x8fc7]        # 40ed38 <__bss_start@@Base+0xbd0>
  405d71:	jmp    405d81 <read_return_expression@@Base+0xa1>
  405d73:	inc    QWORD PTR [rip+0x8fc6]        # 40ed40 <__bss_start@@Base+0xbd8>
  405d7a:	lea    rax,[rip+0x8fcf]        # 40ed50 <__bss_start@@Base+0xbe8>
  405d81:	xor    ebx,ebx
  405d83:	inc    QWORD PTR [rax]
  405d86:	inc    QWORD PTR [rip+0x8fd3]        # 40ed60 <__bss_start@@Base+0xbf8>
  405d8d:	mov    rax,rbx
  405d90:	pop    rbx
  405d91:	pop    r14
  405d93:	pop    r15
  405d95:	ret    
  405d96:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000405da0 <read_if_statement@@Base>:
  405da0:	push   r15
  405da2:	push   r14
  405da4:	push   r12
  405da6:	push   rbx
  405da7:	push   rax
  405da8:	mov    rbx,rdi
  405dab:	inc    QWORD PTR [rip+0x8fbe]        # 40ed70 <__bss_start@@Base+0xc08>
  405db2:	mov    rdi,QWORD PTR [rdi]
  405db5:	call   403f40 <next@@Base>
  405dba:	cmp    DWORD PTR [rax],0x3
  405dbd:	jne    405e14 <read_if_statement@@Base+0x74>
  405dbf:	inc    QWORD PTR [rip+0x8fba]        # 40ed80 <__bss_start@@Base+0xc18>
  405dc6:	mov    rdi,rax
  405dc9:	call   403a30 <free_token_opar@@Base>
  405dce:	mov    rdi,rbx
  405dd1:	call   405e90 <read_boolean_expression@@Base>
  405dd6:	mov    r14,rax
  405dd9:	mov    rdi,rbx
  405ddc:	call   405b70 <read_body@@Base>
  405de1:	mov    r15,rax
  405de4:	mov    rdi,QWORD PTR [rbx]
  405de7:	call   403f40 <next@@Base>
  405dec:	cmp    DWORD PTR [rax],0xb
  405def:	jne    405e26 <read_if_statement@@Base+0x86>
  405df1:	inc    QWORD PTR [rip+0x8f98]        # 40ed90 <__bss_start@@Base+0xc28>
  405df8:	mov    rdi,rax
  405dfb:	call   403b30 <free_token_else@@Base>
  405e00:	mov    rdi,rbx
  405e03:	call   405b70 <read_body@@Base>
  405e08:	mov    r12,rax
  405e0b:	lea    rax,[rip+0x8f8e]        # 40eda0 <__bss_start@@Base+0xc38>
  405e12:	jmp    405e42 <read_if_statement@@Base+0xa2>
  405e14:	inc    QWORD PTR [rip+0x8f5d]        # 40ed78 <__bss_start@@Base+0xc10>
  405e1b:	lea    rax,[rip+0x8f66]        # 40ed88 <__bss_start@@Base+0xc20>
  405e22:	xor    ebx,ebx
  405e24:	jmp    405e6a <read_if_statement@@Base+0xca>
  405e26:	inc    QWORD PTR [rip+0x8f6b]        # 40ed98 <__bss_start@@Base+0xc30>
  405e2d:	mov    rdi,QWORD PTR [rbx]
  405e30:	mov    rsi,rax
  405e33:	call   403de0 <push_back@@Base>
  405e38:	lea    rax,[rip+0x8f69]        # 40eda8 <__bss_start@@Base+0xc40>
  405e3f:	xor    r12d,r12d
  405e42:	inc    QWORD PTR [rax]
  405e45:	mov    edi,0x28
  405e4a:	call   4031c0 <malloc@plt>
  405e4f:	mov    rbx,rax
  405e52:	mov    rdi,rax
  405e55:	mov    rsi,r14
  405e58:	mov    rdx,r15
  405e5b:	mov    rcx,r12
  405e5e:	call   405100 <init_node_if@@Base>
  405e63:	lea    rax,[rip+0x8f46]        # 40edb0 <__bss_start@@Base+0xc48>
  405e6a:	inc    QWORD PTR [rax]
  405e6d:	inc    QWORD PTR [rip+0x8f44]        # 40edb8 <__bss_start@@Base+0xc50>
  405e74:	mov    rax,rbx
  405e77:	add    rsp,0x8
  405e7b:	pop    rbx
  405e7c:	pop    r12
  405e7e:	pop    r14
  405e80:	pop    r15
  405e82:	ret    
  405e83:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405e8d:	nop    DWORD PTR [rax]

0000000000405e90 <read_boolean_expression@@Base>:
  405e90:	push   rbp
  405e91:	push   r15
  405e93:	push   r14
  405e95:	push   r13
  405e97:	push   r12
  405e99:	push   rbx
  405e9a:	push   rax
  405e9b:	mov    rbx,rdi
  405e9e:	inc    QWORD PTR [rip+0x8f1b]        # 40edc0 <__bss_start@@Base+0xc58>
  405ea5:	mov    DWORD PTR [rsp+0x4],0x0
  405ead:	mov    rdi,QWORD PTR [rdi]
  405eb0:	call   403f40 <next@@Base>
  405eb5:	inc    QWORD PTR [rip+0x8f0c]        # 40edc8 <__bss_start@@Base+0xc60>
  405ebc:	mov    ecx,DWORD PTR [rax]
  405ebe:	xor    r14d,r14d
  405ec1:	cmp    ecx,0x4
  405ec4:	je     405f85 <read_boolean_expression@@Base+0xf5>
  405eca:	lea    r15,[rsp+0x4]
  405ecf:	lea    r13,[rip+0x8f3a]        # 40ee10 <__bss_start@@Base+0xca8>
  405ed6:	lea    r12,[rip+0x8f23]        # 40ee00 <__bss_start@@Base+0xc98>
  405edd:	jmp    405f16 <read_boolean_expression@@Base+0x86>
  405edf:	nop
  405ee0:	inc    QWORD PTR [rip+0x8f11]        # 40edf8 <__bss_start@@Base+0xc90>
  405ee7:	mov    rdi,rbx
  405eea:	mov    rsi,r14
  405eed:	mov    rdx,r15
  405ef0:	mov    ecx,ebp
  405ef2:	call   405fe0 <read_single_boolean_expression@@Base>
  405ef7:	mov    r14,rax
  405efa:	mov    rax,r13
  405efd:	inc    QWORD PTR [rax]
  405f00:	mov    rdi,QWORD PTR [rbx]
  405f03:	call   403f40 <next@@Base>
  405f08:	inc    QWORD PTR [rip+0x8f09]        # 40ee18 <__bss_start@@Base+0xcb0>
  405f0f:	mov    ecx,DWORD PTR [rax]
  405f11:	cmp    ecx,0x4
  405f14:	je     405f85 <read_boolean_expression@@Base+0xf5>
  405f16:	inc    QWORD PTR [rip+0x8eb3]        # 40edd0 <__bss_start@@Base+0xc68>
  405f1d:	cmp    ecx,0xc
  405f20:	je     405f60 <read_boolean_expression@@Base+0xd0>
  405f22:	cmp    ecx,0x3
  405f25:	je     405ee0 <read_boolean_expression@@Base+0x50>
  405f27:	cmp    ecx,0x1
  405f2a:	jne    405fad <read_boolean_expression@@Base+0x11d>
  405f30:	inc    QWORD PTR [rip+0x8eb1]        # 40ede8 <__bss_start@@Base+0xc80>
  405f37:	mov    rdi,QWORD PTR [rbx]
  405f3a:	mov    rsi,rax
  405f3d:	call   403de0 <push_back@@Base>
  405f42:	mov    rdi,rbx
  405f45:	mov    rsi,r14
  405f48:	mov    rdx,r15
  405f4b:	mov    ecx,ebp
  405f4d:	call   405fe0 <read_single_boolean_expression@@Base>
  405f52:	mov    r14,rax
  405f55:	mov    rax,r12
  405f58:	jmp    405efd <read_boolean_expression@@Base+0x6d>
  405f5a:	nop    WORD PTR [rax+rax*1+0x0]
  405f60:	inc    QWORD PTR [rip+0x8e89]        # 40edf0 <__bss_start@@Base+0xc88>
  405f67:	mov    rdi,rax
  405f6a:	call   405610 <get_boolean_op_value@@Base>
  405f6f:	mov    ebp,eax
  405f71:	mov    DWORD PTR [rsp+0x4],0x1
  405f79:	lea    rax,[rip+0x8e88]        # 40ee08 <__bss_start@@Base+0xca0>
  405f80:	jmp    405efd <read_boolean_expression@@Base+0x6d>
  405f85:	inc    QWORD PTR [rip+0x8e4c]        # 40edd8 <__bss_start@@Base+0xc70>
  405f8c:	inc    QWORD PTR [rip+0x8e8d]        # 40ee20 <__bss_start@@Base+0xcb8>
  405f93:	mov    rdi,rax
  405f96:	call   403a50 <free_token_cpar@@Base>
  405f9b:	mov    rax,r14
  405f9e:	add    rsp,0x8
  405fa2:	pop    rbx
  405fa3:	pop    r12
  405fa5:	pop    r13
  405fa7:	pop    r14
  405fa9:	pop    r15
  405fab:	pop    rbp
  405fac:	ret    
  405fad:	inc    QWORD PTR [rip+0x8e2c]        # 40ede0 <__bss_start@@Base+0xc78>
  405fb4:	mov    rax,QWORD PTR [rip+0x8035]        # 40dff0 <stderr@GLIBC_2.2.5>
  405fbb:	mov    rcx,QWORD PTR [rax]
  405fbe:	lea    rdi,[rip+0x3727]        # 4096ec <_IO_stdin_used@@Base+0x6ec>
  405fc5:	mov    esi,0x21
  405fca:	mov    edx,0x1
  405fcf:	call   403270 <fwrite@plt>
  405fd4:	mov    edi,0x1
  405fd9:	call   403260 <exit@plt>
  405fde:	xchg   ax,ax

0000000000405fe0 <read_single_boolean_expression@@Base>:
  405fe0:	push   rbp
  405fe1:	push   r15
  405fe3:	push   r14
  405fe5:	push   rbx
  405fe6:	push   rax
  405fe7:	inc    QWORD PTR [rip+0x8e42]        # 40ee30 <__bss_start@@Base+0xcc8>
  405fee:	test   rsi,rsi
  405ff1:	je     406040 <read_single_boolean_expression@@Base+0x60>
  405ff3:	mov    rbx,rdx
  405ff6:	inc    QWORD PTR [rip+0x8e43]        # 40ee40 <__bss_start@@Base+0xcd8>
  405ffd:	cmp    DWORD PTR [rdx],0x0
  406000:	je     40606e <read_single_boolean_expression@@Base+0x8e>
  406002:	mov    r14d,ecx
  406005:	inc    QWORD PTR [rip+0x8e44]        # 40ee50 <__bss_start@@Base+0xce8>
  40600c:	call   4060a0 <read_boolean_binary_expression@@Base>
  406011:	mov    r15,rax
  406014:	mov    edi,0x28
  406019:	call   4031c0 <malloc@plt>
  40601e:	mov    rbp,rax
  406021:	mov    rdi,rax
  406024:	mov    esi,r14d
  406027:	xor    edx,edx
  406029:	mov    rcx,r15
  40602c:	call   405160 <init_node_boolean_operator@@Base>
  406031:	mov    DWORD PTR [rbx],0x0
  406037:	lea    rax,[rip+0x8e22]        # 40ee60 <__bss_start@@Base+0xcf8>
  40603e:	jmp    406056 <read_single_boolean_expression@@Base+0x76>
  406040:	inc    QWORD PTR [rip+0x8df1]        # 40ee38 <__bss_start@@Base+0xcd0>
  406047:	call   4060a0 <read_boolean_binary_expression@@Base>
  40604c:	mov    rbp,rax
  40604f:	lea    rax,[rip+0x8df2]        # 40ee48 <__bss_start@@Base+0xce0>
  406056:	inc    QWORD PTR [rax]
  406059:	inc    QWORD PTR [rip+0x8e08]        # 40ee68 <__bss_start@@Base+0xd00>
  406060:	mov    rax,rbp
  406063:	add    rsp,0x8
  406067:	pop    rbx
  406068:	pop    r14
  40606a:	pop    r15
  40606c:	pop    rbp
  40606d:	ret    
  40606e:	inc    QWORD PTR [rip+0x8de3]        # 40ee58 <__bss_start@@Base+0xcf0>
  406075:	mov    rax,QWORD PTR [rip+0x7f74]        # 40dff0 <stderr@GLIBC_2.2.5>
  40607c:	mov    rdi,QWORD PTR [rax]
  40607f:	mov    edx,DWORD PTR ds:0x4
  406086:	lea    rsi,[rip+0x3681]        # 40970e <_IO_stdin_used@@Base+0x70e>
  40608d:	xor    eax,eax
  40608f:	call   403160 <fprintf@plt>
  406094:	mov    edi,0x1
  406099:	call   403260 <exit@plt>
  40609e:	xchg   ax,ax

00000000004060a0 <read_boolean_binary_expression@@Base>:
  4060a0:	push   rbp
  4060a1:	push   r15
  4060a3:	push   r14
  4060a5:	push   rbx
  4060a6:	push   rax
  4060a7:	mov    rbx,rdi
  4060aa:	inc    QWORD PTR [rip+0x8dbf]        # 40ee70 <__bss_start@@Base+0xd08>
  4060b1:	mov    rdi,QWORD PTR [rdi]
  4060b4:	call   403f40 <next@@Base>
  4060b9:	mov    rbp,rax
  4060bc:	mov    eax,DWORD PTR [rax]
  4060be:	cmp    eax,0x1
  4060c1:	jne    40617e <read_boolean_binary_expression@@Base+0xde>
  4060c7:	inc    QWORD PTR [rip+0x8db2]        # 40ee80 <__bss_start@@Base+0xd18>
  4060ce:	mov    edi,0x18
  4060d3:	call   4031c0 <malloc@plt>
  4060d8:	mov    r14,rax
  4060db:	mov    esi,DWORD PTR [rbp+0x4]
  4060de:	mov    rdi,rax
  4060e1:	call   404fe0 <init_node_int@@Base>
  4060e6:	mov    rdi,rbp
  4060e9:	call   4039f0 <free_token_int_value@@Base>
  4060ee:	mov    rdi,QWORD PTR [rbx]
  4060f1:	call   403f40 <next@@Base>
  4060f6:	cmp    DWORD PTR [rax],0xc
  4060f9:	jne    4061b0 <read_boolean_binary_expression@@Base+0x110>
  4060ff:	mov    rbp,rax
  406102:	inc    QWORD PTR [rip+0x8da7]        # 40eeb0 <__bss_start@@Base+0xd48>
  406109:	mov    rdi,rax
  40610c:	call   405610 <get_boolean_op_value@@Base>
  406111:	mov    r15d,eax
  406114:	mov    rdi,rbp
  406117:	call   403b50 <free_token_boolean_op@@Base>
  40611c:	mov    rdi,QWORD PTR [rbx]
  40611f:	call   403f40 <next@@Base>
  406124:	cmp    DWORD PTR [rax],0x1
  406127:	jne    4061d8 <read_boolean_binary_expression@@Base+0x138>
  40612d:	mov    rbx,rax
  406130:	inc    QWORD PTR [rip+0x8d91]        # 40eec8 <__bss_start@@Base+0xd60>
  406137:	mov    edi,0x18
  40613c:	call   4031c0 <malloc@plt>
  406141:	mov    rbp,rax
  406144:	mov    esi,DWORD PTR [rbx+0x4]
  406147:	mov    rdi,rax
  40614a:	call   404fe0 <init_node_int@@Base>
  40614f:	mov    rdi,rbx
  406152:	call   4039f0 <free_token_int_value@@Base>
  406157:	mov    edi,0x28
  40615c:	call   4031c0 <malloc@plt>
  406161:	mov    rbx,rax
  406164:	mov    rdi,rax
  406167:	mov    esi,r15d
  40616a:	mov    rdx,r14
  40616d:	mov    rcx,rbp
  406170:	call   405160 <init_node_boolean_operator@@Base>
  406175:	lea    rax,[rip+0x8d5c]        # 40eed8 <__bss_start@@Base+0xd70>
  40617c:	jmp    4061f0 <read_boolean_binary_expression@@Base+0x150>
  40617e:	inc    QWORD PTR [rip+0x8cf3]        # 40ee78 <__bss_start@@Base+0xd10>
  406185:	cmp    eax,0xc
  406188:	jne    4061c8 <read_boolean_binary_expression@@Base+0x128>
  40618a:	inc    QWORD PTR [rip+0x8cf7]        # 40ee88 <__bss_start@@Base+0xd20>
  406191:	mov    rdi,QWORD PTR [rbx]
  406194:	mov    rsi,rbp
  406197:	call   403de0 <push_back@@Base>
  40619c:	mov    rdi,rbx
  40619f:	call   406210 <read_boolean_unary_expression@@Base>
  4061a4:	mov    rbx,rax
  4061a7:	lea    rax,[rip+0x8cea]        # 40ee98 <__bss_start@@Base+0xd30>
  4061ae:	jmp    4061f0 <read_boolean_binary_expression@@Base+0x150>
  4061b0:	inc    QWORD PTR [rip+0x8cf1]        # 40eea8 <__bss_start@@Base+0xd40>
  4061b7:	mov    rdi,r14
  4061ba:	call   4051c0 <free_node@@Base>
  4061bf:	lea    rax,[rip+0x8cf2]        # 40eeb8 <__bss_start@@Base+0xd50>
  4061c6:	jmp    4061ee <read_boolean_binary_expression@@Base+0x14e>
  4061c8:	inc    QWORD PTR [rip+0x8cc1]        # 40ee90 <__bss_start@@Base+0xd28>
  4061cf:	lea    rax,[rip+0x8cca]        # 40eea0 <__bss_start@@Base+0xd38>
  4061d6:	jmp    4061ee <read_boolean_binary_expression@@Base+0x14e>
  4061d8:	inc    QWORD PTR [rip+0x8ce1]        # 40eec0 <__bss_start@@Base+0xd58>
  4061df:	mov    rdi,r14
  4061e2:	call   4051c0 <free_node@@Base>
  4061e7:	lea    rax,[rip+0x8ce2]        # 40eed0 <__bss_start@@Base+0xd68>
  4061ee:	xor    ebx,ebx
  4061f0:	inc    QWORD PTR [rax]
  4061f3:	inc    QWORD PTR [rip+0x8ce6]        # 40eee0 <__bss_start@@Base+0xd78>
  4061fa:	mov    rax,rbx
  4061fd:	add    rsp,0x8
  406201:	pop    rbx
  406202:	pop    r14
  406204:	pop    r15
  406206:	pop    rbp
  406207:	ret    
  406208:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000406210 <read_boolean_unary_expression@@Base>:
  406210:	push   rbp
  406211:	push   r15
  406213:	push   r14
  406215:	push   rbx
  406216:	push   rax
  406217:	mov    rbp,rdi
  40621a:	inc    QWORD PTR [rip+0x8ccf]        # 40eef0 <__bss_start@@Base+0xd88>
  406221:	mov    edi,0x28
  406226:	call   4031c0 <malloc@plt>
  40622b:	mov    r15,rax
  40622e:	mov    rdi,QWORD PTR [rbp+0x0]
  406232:	call   403f40 <next@@Base>
  406237:	cmp    DWORD PTR [rax],0xc
  40623a:	jne    4062aa <read_boolean_unary_expression@@Base+0x9a>
  40623c:	mov    rbx,rax
  40623f:	inc    QWORD PTR [rip+0x8cba]        # 40ef00 <__bss_start@@Base+0xd98>
  406246:	mov    rdi,rax
  406249:	call   405610 <get_boolean_op_value@@Base>
  40624e:	mov    r14d,eax
  406251:	mov    rdi,rbx
  406254:	call   403b50 <free_token_boolean_op@@Base>
  406259:	mov    rdi,QWORD PTR [rbp+0x0]
  40625d:	call   403f40 <next@@Base>
  406262:	cmp    DWORD PTR [rax],0x1
  406265:	jne    4062c2 <read_boolean_unary_expression@@Base+0xb2>
  406267:	mov    rbp,rax
  40626a:	inc    QWORD PTR [rip+0x8ca7]        # 40ef18 <__bss_start@@Base+0xdb0>
  406271:	mov    edi,0x18
  406276:	call   4031c0 <malloc@plt>
  40627b:	mov    rbx,rax
  40627e:	mov    esi,DWORD PTR [rbp+0x4]
  406281:	mov    rdi,rax
  406284:	call   404fe0 <init_node_int@@Base>
  406289:	mov    rdi,rbp
  40628c:	call   4039f0 <free_token_int_value@@Base>
  406291:	mov    rdi,r15
  406294:	mov    esi,r14d
  406297:	mov    rdx,rbx
  40629a:	xor    ecx,ecx
  40629c:	call   405160 <init_node_boolean_operator@@Base>
  4062a1:	lea    rax,[rip+0x8c80]        # 40ef28 <__bss_start@@Base+0xdc0>
  4062a8:	jmp    4062db <read_boolean_unary_expression@@Base+0xcb>
  4062aa:	inc    QWORD PTR [rip+0x8c47]        # 40eef8 <__bss_start@@Base+0xd90>
  4062b1:	mov    rdi,r15
  4062b4:	call   4055b0 <free_node_boolean_operator@@Base>
  4062b9:	lea    rax,[rip+0x8c48]        # 40ef08 <__bss_start@@Base+0xda0>
  4062c0:	jmp    4062d8 <read_boolean_unary_expression@@Base+0xc8>
  4062c2:	inc    QWORD PTR [rip+0x8c47]        # 40ef10 <__bss_start@@Base+0xda8>
  4062c9:	mov    rdi,r15
  4062cc:	call   4055b0 <free_node_boolean_operator@@Base>
  4062d1:	lea    rax,[rip+0x8c48]        # 40ef20 <__bss_start@@Base+0xdb8>
  4062d8:	xor    r15d,r15d
  4062db:	inc    QWORD PTR [rax]
  4062de:	inc    QWORD PTR [rip+0x8c4b]        # 40ef30 <__bss_start@@Base+0xdc8>
  4062e5:	mov    rax,r15
  4062e8:	add    rsp,0x8
  4062ec:	pop    rbx
  4062ed:	pop    r14
  4062ef:	pop    r15
  4062f1:	pop    rbp
  4062f2:	ret    
  4062f3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4062fd:	nop    DWORD PTR [rax]
  406300:	push   r15
  406302:	push   r14
  406304:	push   rbx
  406305:	lea    rdi,[rip+0x343a]        # 409746 <_IO_stdin_used@@Base+0x746>
  40630c:	lea    rsi,[rip+0x2e0c]        # 40911f <_IO_stdin_used@@Base+0x11f>
  406313:	mov    edx,0xa66cc747
  406318:	call   406e80 <__generate_code_for_binary_boolean_expression@@Base+0x3b0>
  40631d:	xor    ebx,ebx
  40631f:	lea    r14,[rip+0x764a]        # 40d970 <_IO_stdin_used@@Base+0x4970>
  406326:	lea    r15,[rip+0x77a3]        # 40dad0 <_IO_stdin_used@@Base+0x4ad0>
  40632d:	nop    DWORD PTR [rax]
  406330:	mov    edi,DWORD PTR [r14+rbx*2]
  406334:	mov    rsi,QWORD PTR [r14+rbx*2+0x8]
  406339:	mov    edx,DWORD PTR [r14+rbx*2+0x10]
  40633e:	mov    r8d,DWORD PTR [r14+rbx*2+0x18]
  406343:	mov    ecx,DWORD PTR [r14+rbx*2+0x14]
  406348:	call   4072d0 <__generate_code_for_binary_boolean_expression@@Base+0x800>
  40634d:	mov    edi,DWORD PTR [rbx+r15*1]
  406351:	mov    rsi,QWORD PTR [rbx+r15*1+0x8]
  406356:	call   4076f0 <__generate_code_for_binary_boolean_expression@@Base+0xc20>
  40635b:	add    rbx,0x10
  40635f:	cmp    rbx,0xb0
  406366:	jne    406330 <read_boolean_unary_expression@@Base+0x120>
  406368:	call   407b00 <__generate_code_for_binary_boolean_expression@@Base+0x1030>
  40636d:	pop    rbx
  40636e:	pop    r14
  406370:	pop    r15
  406372:	jmp    4082a0 <__generate_code_for_binary_boolean_expression@@Base+0x17d0>
  406377:	nop    WORD PTR [rax+rax*1+0x0]
  406380:	push   rax
  406381:	call   406300 <read_boolean_unary_expression@@Base+0xf0>
  406386:	vxorps xmm0,xmm0,xmm0
  40638a:	vmovaps XMMWORD PTR [rip+0x883e],xmm0        # 40ebd0 <__bss_start@@Base+0xa68>
  406392:	vmovaps XMMWORD PTR [rip+0x8846],xmm0        # 40ebe0 <__bss_start@@Base+0xa78>
  40639a:	vmovaps XMMWORD PTR [rip+0x884e],xmm0        # 40ebf0 <__bss_start@@Base+0xa88>
  4063a2:	vxorps xmm0,xmm0,xmm0
  4063a6:	vmovups YMMWORD PTR [rip+0x8852],ymm0        # 40ec00 <__bss_start@@Base+0xa98>
  4063ae:	vmovups YMMWORD PTR [rip+0x886a],ymm0        # 40ec20 <__bss_start@@Base+0xab8>
  4063b6:	vmovups YMMWORD PTR [rip+0x8882],ymm0        # 40ec40 <__bss_start@@Base+0xad8>
  4063be:	vmovups YMMWORD PTR [rip+0x8892],ymm0        # 40ec58 <__bss_start@@Base+0xaf0>
  4063c6:	vmovups YMMWORD PTR [rip+0x88b2],ymm0        # 40ec80 <__bss_start@@Base+0xb18>
  4063ce:	vmovups YMMWORD PTR [rip+0x88ca],ymm0        # 40eca0 <__bss_start@@Base+0xb38>
  4063d6:	vmovups YMMWORD PTR [rip+0x88e2],ymm0        # 40ecc0 <__bss_start@@Base+0xb58>
  4063de:	vmovups YMMWORD PTR [rip+0x88fa],ymm0        # 40ece0 <__bss_start@@Base+0xb78>
  4063e6:	vmovups YMMWORD PTR [rip+0x8912],ymm0        # 40ed00 <__bss_start@@Base+0xb98>
  4063ee:	vmovups YMMWORD PTR [rip+0x892a],ymm0        # 40ed20 <__bss_start@@Base+0xbb8>
  4063f6:	vmovups YMMWORD PTR [rip+0x8942],ymm0        # 40ed40 <__bss_start@@Base+0xbd8>
  4063fe:	mov    QWORD PTR [rip+0x8957],0x0        # 40ed60 <__bss_start@@Base+0xbf8>
  406409:	vmovups YMMWORD PTR [rip+0x895f],ymm0        # 40ed70 <__bss_start@@Base+0xc08>
  406411:	vmovups YMMWORD PTR [rip+0x8977],ymm0        # 40ed90 <__bss_start@@Base+0xc28>
  406419:	vmovups YMMWORD PTR [rip+0x897f],ymm0        # 40eda0 <__bss_start@@Base+0xc38>
  406421:	vmovups YMMWORD PTR [rip+0x8997],ymm0        # 40edc0 <__bss_start@@Base+0xc58>
  406429:	vmovups YMMWORD PTR [rip+0x89af],ymm0        # 40ede0 <__bss_start@@Base+0xc78>
  406431:	vmovups YMMWORD PTR [rip+0x89c7],ymm0        # 40ee00 <__bss_start@@Base+0xc98>
  406439:	vmovups YMMWORD PTR [rip+0x8a0f],ymm0        # 40ee50 <__bss_start@@Base+0xce8>
  406441:	vmovups YMMWORD PTR [rip+0x89e7],ymm0        # 40ee30 <__bss_start@@Base+0xcc8>
  406449:	vmovups YMMWORD PTR [rip+0x8a77],ymm0        # 40eec8 <__bss_start@@Base+0xd60>
  406451:	vmovups YMMWORD PTR [rip+0x8a57],ymm0        # 40eeb0 <__bss_start@@Base+0xd48>
  406459:	vmovups YMMWORD PTR [rip+0x8a2f],ymm0        # 40ee90 <__bss_start@@Base+0xd28>
  406461:	vmovups YMMWORD PTR [rip+0x8a07],ymm0        # 40ee70 <__bss_start@@Base+0xd08>
  406469:	mov    QWORD PTR [rip+0x89ac],0x0        # 40ee20 <__bss_start@@Base+0xcb8>
  406474:	vmovups YMMWORD PTR [rip+0x8a94],ymm0        # 40ef10 <__bss_start@@Base+0xda8>
  40647c:	vmovups YMMWORD PTR [rip+0x8a6c],ymm0        # 40eef0 <__bss_start@@Base+0xd88>
  406484:	mov    QWORD PTR [rip+0x8aa1],0x0        # 40ef30 <__bss_start@@Base+0xdc8>
  40648f:	pop    rax
  406490:	vzeroupper 
  406493:	ret    
  406494:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40649e:	xchg   ax,ax
  4064a0:	lea    rdi,[rip+0xfffffffffffffe59]        # 406300 <read_boolean_unary_expression@@Base+0xf0>
  4064a7:	lea    rsi,[rip+0xfffffffffffffed2]        # 406380 <read_boolean_unary_expression@@Base+0x170>
  4064ae:	jmp    408680 <__gcov_flush@@Base+0xb0>
  4064b3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4064bd:	nop    DWORD PTR [rax]

00000000004064c0 <init_generator@@Base>:
  4064c0:	push   rbx
  4064c1:	mov    rbx,rdi
  4064c4:	vmovdqa xmm0,XMMWORD PTR [rip+0x8a74]        # 40ef40 <__bss_start@@Base+0xdd8>
  4064cc:	vpcmpeqd xmm1,xmm1,xmm1
  4064d0:	vpsubq xmm0,xmm0,xmm1
  4064d4:	vmovdqa XMMWORD PTR [rip+0x8a64],xmm0        # 40ef40 <__bss_start@@Base+0xdd8>
  4064dc:	mov    QWORD PTR [rdi],rsi
  4064df:	lea    rsi,[rip+0x33d2]        # 4098b8 <_IO_stdin_used@@Base+0x8b8>
  4064e6:	mov    rdi,rdx
  4064e9:	call   403230 <fopen@plt>
  4064ee:	mov    QWORD PTR [rbx+0x8],rax
  4064f2:	mov    QWORD PTR [rbx+0x10],0x0
  4064fa:	pop    rbx
  4064fb:	ret    
  4064fc:	nop    DWORD PTR [rax+0x0]

0000000000406500 <destroy_generator@@Base>:
  406500:	vmovdqa xmm0,XMMWORD PTR [rip+0x8a48]        # 40ef50 <__bss_start@@Base+0xde8>
  406508:	vpcmpeqd xmm1,xmm1,xmm1
  40650c:	vpsubq xmm0,xmm0,xmm1
  406510:	vmovdqa XMMWORD PTR [rip+0x8a38],xmm0        # 40ef50 <__bss_start@@Base+0xde8>
  406518:	mov    rdi,QWORD PTR [rdi+0x8]
  40651c:	jmp    4030c0 <fclose@plt>
  406521:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40652b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000406530 <generate_code@@Base>:
  406530:	push   r14
  406532:	push   rbx
  406533:	push   rax
  406534:	mov    rbx,rdi
  406537:	vmovdqa xmm0,XMMWORD PTR [rip+0x8a21]        # 40ef60 <__bss_start@@Base+0xdf8>
  40653f:	vpcmpeqd xmm1,xmm1,xmm1
  406543:	vpsubq xmm0,xmm0,xmm1
  406547:	vmovdqa XMMWORD PTR [rip+0x8a11],xmm0        # 40ef60 <__bss_start@@Base+0xdf8>
  40654f:	mov    rdi,QWORD PTR [rdi]
  406552:	call   405a40 <build_ast@@Base>
  406557:	mov    r14,rax
  40655a:	vmovdqa xmm0,XMMWORD PTR [rip+0x8a0e]        # 40ef70 <__bss_start@@Base+0xe08>
  406562:	vpsubq xmm0,xmm0,XMMWORD PTR [rip+0x2e36]        # 4093a0 <_IO_stdin_used@@Base+0x3a0>
  40656a:	vmovdqa XMMWORD PTR [rip+0x89fe],xmm0        # 40ef70 <__bss_start@@Base+0xe08>
  406572:	mov    rcx,QWORD PTR [rbx+0x8]
  406576:	lea    rdi,[rip+0x333d]        # 4098ba <_IO_stdin_used@@Base+0x8ba>
  40657d:	mov    esi,0x15
  406582:	mov    edx,0x1
  406587:	call   403270 <fwrite@plt>
  40658c:	mov    rdi,rbx
  40658f:	mov    rsi,r14
  406592:	call   406600 <__generate_code_for_main@@Base>
  406597:	mov    rdi,r14
  40659a:	add    rsp,0x8
  40659e:	pop    rbx
  40659f:	pop    r14
  4065a1:	jmp    4051c0 <free_node@@Base>
  4065a6:	nop    WORD PTR cs:[rax+rax*1+0x0]

00000000004065b0 <__generate_code@@Base>:
  4065b0:	push   r14
  4065b2:	push   rbx
  4065b3:	push   rax
  4065b4:	mov    r14,rsi
  4065b7:	mov    rbx,rdi
  4065ba:	vmovdqa xmm0,XMMWORD PTR [rip+0x89ae]        # 40ef70 <__bss_start@@Base+0xe08>
  4065c2:	vpcmpeqd xmm1,xmm1,xmm1
  4065c6:	vpsubq xmm0,xmm0,xmm1
  4065ca:	vmovdqa XMMWORD PTR [rip+0x899e],xmm0        # 40ef70 <__bss_start@@Base+0xe08>
  4065d2:	mov    rcx,QWORD PTR [rdi+0x8]
  4065d6:	lea    rdi,[rip+0x32dd]        # 4098ba <_IO_stdin_used@@Base+0x8ba>
  4065dd:	mov    esi,0x15
  4065e2:	mov    edx,0x1
  4065e7:	call   403270 <fwrite@plt>
  4065ec:	mov    rdi,rbx
  4065ef:	mov    rsi,r14
  4065f2:	add    rsp,0x8
  4065f6:	pop    rbx
  4065f7:	pop    r14
  4065f9:	jmp    406600 <__generate_code_for_main@@Base>
  4065fe:	xchg   ax,ax

0000000000406600 <__generate_code_for_main@@Base>:
  406600:	push   r14
  406602:	push   rbx
  406603:	push   rax
  406604:	inc    QWORD PTR [rip+0x8975]        # 40ef80 <__bss_start@@Base+0xe18>
  40660b:	cmp    DWORD PTR [rsi],0x2
  40660e:	jne    406665 <__generate_code_for_main@@Base+0x65>
  406610:	mov    rbx,rsi
  406613:	mov    r14,rdi
  406616:	inc    QWORD PTR [rip+0x896b]        # 40ef88 <__bss_start@@Base+0xe20>
  40661d:	inc    QWORD PTR [rip+0x8974]        # 40ef98 <__bss_start@@Base+0xe30>
  406624:	vmovdqa xmm0,XMMWORD PTR [rip+0x8974]        # 40efa0 <__bss_start@@Base+0xe38>
  40662c:	vpcmpeqd xmm1,xmm1,xmm1
  406630:	vpsubq xmm0,xmm0,xmm1
  406634:	vmovdqa XMMWORD PTR [rip+0x8964],xmm0        # 40efa0 <__bss_start@@Base+0xe38>
  40663c:	mov    rdi,QWORD PTR [rdi+0x8]
  406640:	mov    rdx,QWORD PTR [rsi+0x10]
  406644:	lea    rsi,[rip+0x32b4]        # 4098ff <_IO_stdin_used@@Base+0x8ff>
  40664b:	xor    eax,eax
  40664d:	call   403160 <fprintf@plt>
  406652:	mov    rsi,QWORD PTR [rbx+0x18]
  406656:	mov    rdi,r14
  406659:	add    rsp,0x8
  40665d:	pop    rbx
  40665e:	pop    r14
  406660:	jmp    4066f0 <__generate_code_for_body@@Base>
  406665:	inc    QWORD PTR [rip+0x8924]        # 40ef90 <__bss_start@@Base+0xe28>
  40666c:	mov    rax,QWORD PTR [rip+0x797d]        # 40dff0 <stderr@GLIBC_2.2.5>
  406673:	mov    rcx,QWORD PTR [rax]
  406676:	lea    rdi,[rip+0x3253]        # 4098d0 <_IO_stdin_used@@Base+0x8d0>
  40667d:	mov    esi,0x2e
  406682:	mov    edx,0x1
  406687:	call   403270 <fwrite@plt>
  40668c:	mov    edi,0x1
  406691:	call   403260 <exit@plt>
  406696:	nop    WORD PTR cs:[rax+rax*1+0x0]

00000000004066a0 <__generate_code_for_function@@Base>:
  4066a0:	push   r14
  4066a2:	push   rbx
  4066a3:	push   rax
  4066a4:	mov    rbx,rsi
  4066a7:	mov    r14,rdi
  4066aa:	vmovdqa xmm0,XMMWORD PTR [rip+0x88ee]        # 40efa0 <__bss_start@@Base+0xe38>
  4066b2:	vpcmpeqd xmm1,xmm1,xmm1
  4066b6:	vpsubq xmm0,xmm0,xmm1
  4066ba:	vmovdqa XMMWORD PTR [rip+0x88de],xmm0        # 40efa0 <__bss_start@@Base+0xe38>
  4066c2:	mov    rdi,QWORD PTR [rdi+0x8]
  4066c6:	mov    rdx,QWORD PTR [rsi+0x10]
  4066ca:	lea    rsi,[rip+0x322e]        # 4098ff <_IO_stdin_used@@Base+0x8ff>
  4066d1:	xor    eax,eax
  4066d3:	call   403160 <fprintf@plt>
  4066d8:	mov    rsi,QWORD PTR [rbx+0x18]
  4066dc:	mov    rdi,r14
  4066df:	add    rsp,0x8
  4066e3:	pop    rbx
  4066e4:	pop    r14
  4066e6:	jmp    4066f0 <__generate_code_for_body@@Base>
  4066eb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004066f0 <__generate_code_for_body@@Base>:
  4066f0:	push   r15
  4066f2:	push   r14
  4066f4:	push   r12
  4066f6:	push   rbx
  4066f7:	push   rax
  4066f8:	vmovdqa xmm0,XMMWORD PTR [rip+0x88b0]        # 40efb0 <__bss_start@@Base+0xe48>
  406700:	vpcmpeqd xmm1,xmm1,xmm1
  406704:	vpsubq xmm0,xmm0,xmm1
  406708:	vmovdqa XMMWORD PTR [rip+0x88a0],xmm0        # 40efb0 <__bss_start@@Base+0xe48>
  406710:	test   rsi,rsi
  406713:	je     40677f <__generate_code_for_body@@Base+0x8f>
  406715:	mov    r12,rdi
  406718:	lea    r14,[rip+0x88d1]        # 40eff0 <__bss_start@@Base+0xe88>
  40671f:	lea    r15,[rip+0x88c2]        # 40efe8 <__bss_start@@Base+0xe80>
  406726:	jmp    406754 <__generate_code_for_body@@Base+0x64>
  406728:	nop    DWORD PTR [rax+rax*1+0x0]
  406730:	inc    QWORD PTR [rip+0x88a9]        # 40efe0 <__bss_start@@Base+0xe78>
  406737:	mov    rdi,r12
  40673a:	call   4067d0 <__generate_code_for_if@@Base>
  40673f:	mov    rax,r14
  406742:	inc    QWORD PTR [rax]
  406745:	inc    QWORD PTR [rip+0x88ac]        # 40eff8 <__bss_start@@Base+0xe90>
  40674c:	mov    rsi,rbx
  40674f:	test   rbx,rbx
  406752:	je     40677f <__generate_code_for_body@@Base+0x8f>
  406754:	inc    QWORD PTR [rip+0x8865]        # 40efc0 <__bss_start@@Base+0xe58>
  40675b:	mov    rbx,QWORD PTR [rsi+0x8]
  40675f:	mov    eax,DWORD PTR [rsi]
  406761:	cmp    eax,0x4
  406764:	je     406730 <__generate_code_for_body@@Base+0x40>
  406766:	cmp    eax,0x3
  406769:	jne    406799 <__generate_code_for_body@@Base+0xa9>
  40676b:	inc    QWORD PTR [rip+0x8866]        # 40efd8 <__bss_start@@Base+0xe70>
  406772:	mov    rdi,r12
  406775:	call   4068f0 <__generate_code_for_return@@Base>
  40677a:	mov    rax,r15
  40677d:	jmp    406742 <__generate_code_for_body@@Base+0x52>
  40677f:	inc    QWORD PTR [rip+0x8842]        # 40efc8 <__bss_start@@Base+0xe60>
  406786:	inc    QWORD PTR [rip+0x8873]        # 40f000 <__bss_start@@Base+0xe98>
  40678d:	add    rsp,0x8
  406791:	pop    rbx
  406792:	pop    r12
  406794:	pop    r14
  406796:	pop    r15
  406798:	ret    
  406799:	inc    QWORD PTR [rip+0x8830]        # 40efd0 <__bss_start@@Base+0xe68>
  4067a0:	mov    rax,QWORD PTR [rip+0x7849]        # 40dff0 <stderr@GLIBC_2.2.5>
  4067a7:	mov    rcx,QWORD PTR [rax]
  4067aa:	lea    rdi,[rip+0x3254]        # 409a05 <_IO_stdin_used@@Base+0xa05>
  4067b1:	mov    esi,0x34
  4067b6:	mov    edx,0x1
  4067bb:	call   403270 <fwrite@plt>
  4067c0:	mov    edi,0x1
  4067c5:	call   403260 <exit@plt>
  4067ca:	nop    WORD PTR [rax+rax*1+0x0]

00000000004067d0 <__generate_code_for_if@@Base>:
  4067d0:	push   r15
  4067d2:	push   r14
  4067d4:	push   rbx
  4067d5:	mov    r14,rsi
  4067d8:	mov    rbx,rdi
  4067db:	inc    QWORD PTR [rip+0x882e]        # 40f010 <__bss_start@@Base+0xea8>
  4067e2:	mov    r15,QWORD PTR [rdi+0x10]
  4067e6:	lea    rax,[r15+0x1]
  4067ea:	mov    QWORD PTR [rdi+0x10],rax
  4067ee:	mov    rsi,QWORD PTR [rsi+0x10]
  4067f2:	inc    QWORD PTR [rip+0x8847]        # 40f040 <__bss_start@@Base+0xed8>
  4067f9:	cmp    DWORD PTR [rsi+0x20],0x8
  4067fd:	jne    40681a <__generate_code_for_if@@Base+0x4a>
  4067ff:	inc    QWORD PTR [rip+0x8842]        # 40f048 <__bss_start@@Base+0xee0>
  406806:	mov    rdi,rbx
  406809:	mov    rdx,r15
  40680c:	call   4069e0 <__generate_code_for_unary_boolean_expression@@Base>
  406811:	lea    rax,[rip+0x8840]        # 40f058 <__bss_start@@Base+0xef0>
  406818:	jmp    406833 <__generate_code_for_if@@Base+0x63>
  40681a:	inc    QWORD PTR [rip+0x882f]        # 40f050 <__bss_start@@Base+0xee8>
  406821:	mov    rdi,rbx
  406824:	mov    rdx,r15
  406827:	call   406ad0 <__generate_code_for_binary_boolean_expression@@Base>
  40682c:	lea    rax,[rip+0x882d]        # 40f060 <__bss_start@@Base+0xef8>
  406833:	inc    QWORD PTR [rax]
  406836:	inc    QWORD PTR [rip+0x882b]        # 40f068 <__bss_start@@Base+0xf00>
  40683d:	mov    rsi,QWORD PTR [r14+0x18]
  406841:	mov    rdi,rbx
  406844:	call   4066f0 <__generate_code_for_body@@Base>
  406849:	mov    rdi,QWORD PTR [rbx+0x8]
  40684d:	lea    rsi,[rip+0x30b0]        # 409904 <_IO_stdin_used@@Base+0x904>
  406854:	mov    rdx,r15
  406857:	xor    eax,eax
  406859:	call   403160 <fprintf@plt>
  40685e:	mov    rsi,QWORD PTR [r14+0x20]
  406862:	test   rsi,rsi
  406865:	je     40687f <__generate_code_for_if@@Base+0xaf>
  406867:	inc    QWORD PTR [rip+0x87aa]        # 40f018 <__bss_start@@Base+0xeb0>
  40686e:	mov    rdi,rbx
  406871:	call   4066f0 <__generate_code_for_body@@Base>
  406876:	lea    rax,[rip+0x87ab]        # 40f028 <__bss_start@@Base+0xec0>
  40687d:	jmp    406886 <__generate_code_for_if@@Base+0xb6>
  40687f:	lea    rax,[rip+0x879a]        # 40f020 <__bss_start@@Base+0xeb8>
  406886:	inc    QWORD PTR [rax]
  406889:	inc    QWORD PTR [rip+0x87a0]        # 40f030 <__bss_start@@Base+0xec8>
  406890:	pop    rbx
  406891:	pop    r14
  406893:	pop    r15
  406895:	ret    
  406896:	nop    WORD PTR cs:[rax+rax*1+0x0]

00000000004068a0 <__generate_code_for_if_expression@@Base>:
  4068a0:	push   rax
  4068a1:	inc    QWORD PTR [rip+0x8798]        # 40f040 <__bss_start@@Base+0xed8>
  4068a8:	cmp    DWORD PTR [rsi+0x20],0x8
  4068ac:	jne    4068c3 <__generate_code_for_if_expression@@Base+0x23>
  4068ae:	inc    QWORD PTR [rip+0x8793]        # 40f048 <__bss_start@@Base+0xee0>
  4068b5:	call   4069e0 <__generate_code_for_unary_boolean_expression@@Base>
  4068ba:	lea    rax,[rip+0x8797]        # 40f058 <__bss_start@@Base+0xef0>
  4068c1:	jmp    4068d6 <__generate_code_for_if_expression@@Base+0x36>
  4068c3:	inc    QWORD PTR [rip+0x8786]        # 40f050 <__bss_start@@Base+0xee8>
  4068ca:	call   406ad0 <__generate_code_for_binary_boolean_expression@@Base>
  4068cf:	lea    rax,[rip+0x878a]        # 40f060 <__bss_start@@Base+0xef8>
  4068d6:	inc    QWORD PTR [rax]
  4068d9:	inc    QWORD PTR [rip+0x8788]        # 40f068 <__bss_start@@Base+0xf00>
  4068e0:	pop    rax
  4068e1:	ret    
  4068e2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4068ec:	nop    DWORD PTR [rax+0x0]

00000000004068f0 <__generate_code_for_return@@Base>:
  4068f0:	push   r14
  4068f2:	push   rbx
  4068f3:	push   rax
  4068f4:	mov    rbx,rdi
  4068f7:	inc    QWORD PTR [rip+0x8772]        # 40f070 <__bss_start@@Base+0xf08>
  4068fe:	mov    r14,QWORD PTR [rsi+0x10]
  406902:	mov    rcx,QWORD PTR [rdi+0x8]
  406906:	lea    rdi,[rip+0x3006]        # 409913 <_IO_stdin_used@@Base+0x913>
  40690d:	mov    esi,0x9
  406912:	mov    edx,0x1
  406917:	call   403270 <fwrite@plt>
  40691c:	cmp    DWORD PTR [r14],0x1
  406920:	jne    40697f <__generate_code_for_return@@Base+0x8f>
  406922:	inc    QWORD PTR [rip+0x874f]        # 40f078 <__bss_start@@Base+0xf10>
  406929:	inc    QWORD PTR [rip+0x8758]        # 40f088 <__bss_start@@Base+0xf20>
  406930:	vmovdqa xmm0,XMMWORD PTR [rip+0x8758]        # 40f090 <__bss_start@@Base+0xf28>
  406938:	vpcmpeqd xmm1,xmm1,xmm1
  40693c:	vpsubq xmm0,xmm0,xmm1
  406940:	vmovdqa XMMWORD PTR [rip+0x8748],xmm0        # 40f090 <__bss_start@@Base+0xf28>
  406948:	mov    rdi,QWORD PTR [rbx+0x8]
  40694c:	mov    edx,DWORD PTR [r14+0x10]
  406950:	lea    rsi,[rip+0x2ff5]        # 40994c <_IO_stdin_used@@Base+0x94c>
  406957:	xor    eax,eax
  406959:	call   403160 <fprintf@plt>
  40695e:	mov    rcx,QWORD PTR [rbx+0x8]
  406962:	lea    rdi,[rip+0x2fda]        # 409943 <_IO_stdin_used@@Base+0x943>
  406969:	mov    esi,0x8
  40696e:	mov    edx,0x1
  406973:	add    rsp,0x8
  406977:	pop    rbx
  406978:	pop    r14
  40697a:	jmp    403270 <fwrite@plt>
  40697f:	inc    QWORD PTR [rip+0x86fa]        # 40f080 <__bss_start@@Base+0xf18>
  406986:	mov    rax,QWORD PTR [rip+0x7663]        # 40dff0 <stderr@GLIBC_2.2.5>
  40698d:	mov    rcx,QWORD PTR [rax]
  406990:	lea    rdi,[rip+0x2f86]        # 40991d <_IO_stdin_used@@Base+0x91d>
  406997:	mov    esi,0x25
  40699c:	mov    edx,0x1
  4069a1:	call   403270 <fwrite@plt>
  4069a6:	mov    edi,0x1
  4069ab:	call   403260 <exit@plt>

00000000004069b0 <__generate_code_for_int@@Base>:
  4069b0:	vmovdqa xmm0,XMMWORD PTR [rip+0x86d8]        # 40f090 <__bss_start@@Base+0xf28>
  4069b8:	vpcmpeqd xmm1,xmm1,xmm1
  4069bc:	vpsubq xmm0,xmm0,xmm1
  4069c0:	vmovdqa XMMWORD PTR [rip+0x86c8],xmm0        # 40f090 <__bss_start@@Base+0xf28>
  4069c8:	mov    rdi,QWORD PTR [rdi+0x8]
  4069cc:	mov    edx,DWORD PTR [rsi+0x10]
  4069cf:	lea    rsi,[rip+0x2f76]        # 40994c <_IO_stdin_used@@Base+0x94c>
  4069d6:	xor    eax,eax
  4069d8:	jmp    403160 <fprintf@plt>
  4069dd:	nop    DWORD PTR [rax]

00000000004069e0 <__generate_code_for_unary_boolean_expression@@Base>:
  4069e0:	push   r15
  4069e2:	push   r14
  4069e4:	push   r12
  4069e6:	push   rbx
  4069e7:	push   rax
  4069e8:	mov    r14,rdx
  4069eb:	mov    r15,rsi
  4069ee:	mov    rbx,rdi
  4069f1:	inc    QWORD PTR [rip+0x86a8]        # 40f0a0 <__bss_start@@Base+0xf38>
  4069f8:	mov    r12,QWORD PTR [rsi+0x10]
  4069fc:	mov    rcx,QWORD PTR [rdi+0x8]
  406a00:	lea    rdi,[rip+0x2ff2]        # 4099f9 <_IO_stdin_used@@Base+0x9f9>
  406a07:	mov    esi,0xb
  406a0c:	mov    edx,0x1
  406a11:	call   403270 <fwrite@plt>
  406a16:	mov    rcx,QWORD PTR [rbx+0x8]
  406a1a:	lea    rdi,[rip+0x2f2f]        # 409950 <_IO_stdin_used@@Base+0x950>
  406a21:	mov    esi,0x9
  406a26:	mov    edx,0x1
  406a2b:	call   403270 <fwrite@plt>
  406a30:	vmovdqa xmm0,XMMWORD PTR [rip+0x8658]        # 40f090 <__bss_start@@Base+0xf28>
  406a38:	vpcmpeqd xmm1,xmm1,xmm1
  406a3c:	vpsubq xmm0,xmm0,xmm1
  406a40:	vmovdqa XMMWORD PTR [rip+0x8648],xmm0        # 40f090 <__bss_start@@Base+0xf28>
  406a48:	mov    rdi,QWORD PTR [rbx+0x8]
  406a4c:	mov    edx,DWORD PTR [r12+0x10]
  406a51:	lea    rsi,[rip+0x2ef4]        # 40994c <_IO_stdin_used@@Base+0x94c>
  406a58:	xor    eax,eax
  406a5a:	call   403160 <fprintf@plt>
  406a5f:	cmp    DWORD PTR [r15+0x20],0x8
  406a64:	jne    406a94 <__generate_code_for_unary_boolean_expression@@Base+0xb4>
  406a66:	inc    QWORD PTR [rip+0x863b]        # 40f0a8 <__bss_start@@Base+0xf40>
  406a6d:	inc    QWORD PTR [rip+0x8644]        # 40f0b8 <__bss_start@@Base+0xf50>
  406a74:	mov    rdi,QWORD PTR [rbx+0x8]
  406a78:	lea    rsi,[rip+0x2efb]        # 40997a <_IO_stdin_used@@Base+0x97a>
  406a7f:	mov    rdx,r14
  406a82:	xor    eax,eax
  406a84:	add    rsp,0x8
  406a88:	pop    rbx
  406a89:	pop    r12
  406a8b:	pop    r14
  406a8d:	pop    r15
  406a8f:	jmp    403160 <fprintf@plt>
  406a94:	inc    QWORD PTR [rip+0x8615]        # 40f0b0 <__bss_start@@Base+0xf48>
  406a9b:	mov    rax,QWORD PTR [rip+0x754e]        # 40dff0 <stderr@GLIBC_2.2.5>
  406aa2:	mov    rcx,QWORD PTR [rax]
  406aa5:	lea    rdi,[rip+0x2f2d]        # 4099d9 <_IO_stdin_used@@Base+0x9d9>
  406aac:	mov    esi,0x1f
  406ab1:	mov    edx,0x1
  406ab6:	call   403270 <fwrite@plt>
  406abb:	mov    edi,0x1
  406ac0:	call   403260 <exit@plt>
  406ac5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  406acf:	nop

0000000000406ad0 <__generate_code_for_binary_boolean_expression@@Base>:
  406ad0:	push   r15
  406ad2:	push   r14
  406ad4:	push   r13
  406ad6:	push   r12
  406ad8:	push   rbx
  406ad9:	mov    r14,rdx
  406adc:	mov    r15,rsi
  406adf:	mov    rbx,rdi
  406ae2:	inc    QWORD PTR [rip+0x85d7]        # 40f0c0 <__bss_start@@Base+0xf58>
  406ae9:	mov    r12,QWORD PTR [rsi+0x10]
  406aed:	mov    r13,QWORD PTR [rsi+0x18]
  406af1:	mov    rcx,QWORD PTR [rdi+0x8]
  406af5:	lea    rdi,[rip+0x2e17]        # 409913 <_IO_stdin_used@@Base+0x913>
  406afc:	mov    esi,0x9
  406b01:	mov    edx,0x1
  406b06:	call   403270 <fwrite@plt>
  406b0b:	vmovdqa xmm0,XMMWORD PTR [rip+0x857d]        # 40f090 <__bss_start@@Base+0xf28>
  406b13:	vpcmpeqd xmm1,xmm1,xmm1
  406b17:	vpsubq xmm0,xmm0,xmm1
  406b1b:	vmovdqa XMMWORD PTR [rip+0x856d],xmm0        # 40f090 <__bss_start@@Base+0xf28>
  406b23:	mov    rdi,QWORD PTR [rbx+0x8]
  406b27:	mov    edx,DWORD PTR [r12+0x10]
  406b2c:	lea    r12,[rip+0x2e19]        # 40994c <_IO_stdin_used@@Base+0x94c>
  406b33:	mov    rsi,r12
  406b36:	xor    eax,eax
  406b38:	call   403160 <fprintf@plt>
  406b3d:	mov    rsi,QWORD PTR [rbx+0x8]
  406b41:	mov    edi,0xa
  406b46:	call   403150 <fputc@plt>
  406b4b:	mov    rcx,QWORD PTR [rbx+0x8]
  406b4f:	lea    rdi,[rip+0x2dfa]        # 409950 <_IO_stdin_used@@Base+0x950>
  406b56:	mov    esi,0x9
  406b5b:	mov    edx,0x1
  406b60:	call   403270 <fwrite@plt>
  406b65:	vmovdqa xmm0,XMMWORD PTR [rip+0x8523]        # 40f090 <__bss_start@@Base+0xf28>
  406b6d:	vpsubq xmm0,xmm0,XMMWORD PTR [rip+0x282b]        # 4093a0 <_IO_stdin_used@@Base+0x3a0>
  406b75:	vmovdqa XMMWORD PTR [rip+0x8513],xmm0        # 40f090 <__bss_start@@Base+0xf28>
  406b7d:	mov    rdi,QWORD PTR [rbx+0x8]
  406b81:	mov    edx,DWORD PTR [r13+0x10]
  406b85:	mov    rsi,r12
  406b88:	xor    eax,eax
  406b8a:	call   403160 <fprintf@plt>
  406b8f:	mov    rsi,QWORD PTR [rbx+0x8]
  406b93:	mov    edi,0xa
  406b98:	call   403150 <fputc@plt>
  406b9d:	mov    rcx,QWORD PTR [rbx+0x8]
  406ba1:	lea    rdi,[rip+0x2db2]        # 40995a <_IO_stdin_used@@Base+0x95a>
  406ba8:	mov    esi,0xc
  406bad:	mov    edx,0x1
  406bb2:	call   403270 <fwrite@plt>
  406bb7:	mov    ecx,DWORD PTR [r15+0x20]
  406bbb:	cmp    rcx,0x7
  406bbf:	ja     406cd2 <__generate_code_for_binary_boolean_expression@@Base+0x202>
  406bc5:	lea    rax,[rip+0x852c]        # 40f0f8 <__bss_start@@Base+0xf90>
  406bcc:	lea    rdx,[rip+0x2cc5]        # 409898 <_IO_stdin_used@@Base+0x898>
  406bd3:	movsxd rcx,DWORD PTR [rdx+rcx*4]
  406bd7:	add    rcx,rdx
  406bda:	jmp    rcx
  406bdc:	inc    QWORD PTR [rip+0x84ed]        # 40f0d0 <__bss_start@@Base+0xf68>
  406be3:	mov    rdi,QWORD PTR [rbx+0x8]
  406be7:	lea    rsi,[rip+0x2d79]        # 409967 <_IO_stdin_used@@Base+0x967>
  406bee:	mov    rdx,r14
  406bf1:	xor    eax,eax
  406bf3:	call   403160 <fprintf@plt>
  406bf8:	lea    rax,[rip+0x8511]        # 40f110 <__bss_start@@Base+0xfa8>
  406bff:	jmp    406cbe <__generate_code_for_binary_boolean_expression@@Base+0x1ee>
  406c04:	inc    QWORD PTR [rip+0x84d5]        # 40f0e0 <__bss_start@@Base+0xf78>
  406c0b:	mov    rdi,QWORD PTR [rbx+0x8]
  406c0f:	lea    rsi,[rip+0x2d77]        # 40998d <_IO_stdin_used@@Base+0x98d>
  406c16:	mov    rdx,r14
  406c19:	xor    eax,eax
  406c1b:	call   403160 <fprintf@plt>
  406c20:	lea    rax,[rip+0x84f9]        # 40f120 <__bss_start@@Base+0xfb8>
  406c27:	jmp    406cbe <__generate_code_for_binary_boolean_expression@@Base+0x1ee>
  406c2c:	inc    QWORD PTR [rip+0x84a5]        # 40f0d8 <__bss_start@@Base+0xf70>
  406c33:	mov    rdi,QWORD PTR [rbx+0x8]
  406c37:	lea    rsi,[rip+0x2d3c]        # 40997a <_IO_stdin_used@@Base+0x97a>
  406c3e:	mov    rdx,r14
  406c41:	xor    eax,eax
  406c43:	call   403160 <fprintf@plt>
  406c48:	lea    rax,[rip+0x84c9]        # 40f118 <__bss_start@@Base+0xfb0>
  406c4f:	jmp    406cbe <__generate_code_for_binary_boolean_expression@@Base+0x1ee>
  406c51:	inc    QWORD PTR [rip+0x84b0]        # 40f108 <__bss_start@@Base+0xfa0>
  406c58:	mov    rdi,QWORD PTR [rbx+0x8]
  406c5c:	lea    rsi,[rip+0x2d63]        # 4099c6 <_IO_stdin_used@@Base+0x9c6>
  406c63:	mov    rdx,r14
  406c66:	xor    eax,eax
  406c68:	call   403160 <fprintf@plt>
  406c6d:	lea    rax,[rip+0x84c4]        # 40f138 <__bss_start@@Base+0xfd0>
  406c74:	jmp    406cbe <__generate_code_for_binary_boolean_expression@@Base+0x1ee>
  406c76:	inc    QWORD PTR [rip+0x846b]        # 40f0e8 <__bss_start@@Base+0xf80>
  406c7d:	mov    rdi,QWORD PTR [rbx+0x8]
  406c81:	lea    rsi,[rip+0x2d18]        # 4099a0 <_IO_stdin_used@@Base+0x9a0>
  406c88:	mov    rdx,r14
  406c8b:	xor    eax,eax
  406c8d:	call   403160 <fprintf@plt>
  406c92:	lea    rax,[rip+0x848f]        # 40f128 <__bss_start@@Base+0xfc0>
  406c99:	jmp    406cbe <__generate_code_for_binary_boolean_expression@@Base+0x1ee>
  406c9b:	inc    QWORD PTR [rip+0x845e]        # 40f100 <__bss_start@@Base+0xf98>
  406ca2:	mov    rdi,QWORD PTR [rbx+0x8]
  406ca6:	lea    rsi,[rip+0x2d06]        # 4099b3 <_IO_stdin_used@@Base+0x9b3>
  406cad:	mov    rdx,r14
  406cb0:	xor    eax,eax
  406cb2:	call   403160 <fprintf@plt>
  406cb7:	lea    rax,[rip+0x8472]        # 40f130 <__bss_start@@Base+0xfc8>
  406cbe:	inc    QWORD PTR [rax]
  406cc1:	inc    QWORD PTR [rip+0x8478]        # 40f140 <__bss_start@@Base+0xfd8>
  406cc8:	pop    rbx
  406cc9:	pop    r12
  406ccb:	pop    r13
  406ccd:	pop    r14
  406ccf:	pop    r15
  406cd1:	ret    
  406cd2:	inc    QWORD PTR [rip+0x83ef]        # 40f0c8 <__bss_start@@Base+0xf60>
  406cd9:	mov    rax,QWORD PTR [rip+0x7310]        # 40dff0 <stderr@GLIBC_2.2.5>
  406ce0:	mov    rcx,QWORD PTR [rax]
  406ce3:	lea    rdi,[rip+0x2cef]        # 4099d9 <_IO_stdin_used@@Base+0x9d9>
  406cea:	mov    esi,0x1f
  406cef:	mov    edx,0x1
  406cf4:	call   403270 <fwrite@plt>
  406cf9:	mov    edi,0x1
  406cfe:	call   403260 <exit@plt>
  406d03:	nop    WORD PTR cs:[rax+rax*1+0x0]
  406d0d:	nop    DWORD PTR [rax]
  406d10:	push   r15
  406d12:	push   r14
  406d14:	push   rbx
  406d15:	lea    rdi,[rip+0x2d1e]        # 409a3a <_IO_stdin_used@@Base+0xa3a>
  406d1c:	lea    rsi,[rip+0x23fc]        # 40911f <_IO_stdin_used@@Base+0x11f>
  406d23:	mov    edx,0x8448ad5
  406d28:	call   406e80 <__generate_code_for_binary_boolean_expression@@Base+0x3b0>
  406d2d:	xor    ebx,ebx
  406d2f:	lea    r14,[rip+0x6e4a]        # 40db80 <_IO_stdin_used@@Base+0x4b80>
  406d36:	lea    r15,[rip+0x6fe3]        # 40dd20 <_IO_stdin_used@@Base+0x4d20>
  406d3d:	nop    DWORD PTR [rax]
  406d40:	mov    edi,DWORD PTR [r14+rbx*2]
  406d44:	mov    rsi,QWORD PTR [r14+rbx*2+0x8]
  406d49:	mov    edx,DWORD PTR [r14+rbx*2+0x10]
  406d4e:	mov    r8d,DWORD PTR [r14+rbx*2+0x18]
  406d53:	mov    ecx,DWORD PTR [r14+rbx*2+0x14]
  406d58:	call   4072d0 <__generate_code_for_binary_boolean_expression@@Base+0x800>
  406d5d:	mov    edi,DWORD PTR [rbx+r15*1]
  406d61:	mov    rsi,QWORD PTR [rbx+r15*1+0x8]
  406d66:	call   4076f0 <__generate_code_for_binary_boolean_expression@@Base+0xc20>
  406d6b:	add    rbx,0x10
  406d6f:	cmp    rbx,0xd0
  406d76:	jne    406d40 <__generate_code_for_binary_boolean_expression@@Base+0x270>
  406d78:	call   407b00 <__generate_code_for_binary_boolean_expression@@Base+0x1030>
  406d7d:	pop    rbx
  406d7e:	pop    r14
  406d80:	pop    r15
  406d82:	jmp    4082a0 <__generate_code_for_binary_boolean_expression@@Base+0x17d0>
  406d87:	nop    WORD PTR [rax+rax*1+0x0]
  406d90:	push   rax
  406d91:	call   406d10 <__generate_code_for_binary_boolean_expression@@Base+0x240>
  406d96:	vxorps xmm0,xmm0,xmm0
  406d9a:	vmovaps XMMWORD PTR [rip+0x819e],xmm0        # 40ef40 <__bss_start@@Base+0xdd8>
  406da2:	vmovaps XMMWORD PTR [rip+0x81a6],xmm0        # 40ef50 <__bss_start@@Base+0xde8>
  406daa:	vmovaps XMMWORD PTR [rip+0x81ae],xmm0        # 40ef60 <__bss_start@@Base+0xdf8>
  406db2:	vmovaps XMMWORD PTR [rip+0x81b6],xmm0        # 40ef70 <__bss_start@@Base+0xe08>
  406dba:	vxorps xmm1,xmm1,xmm1
  406dbe:	vmovups YMMWORD PTR [rip+0x81ba],ymm1        # 40ef80 <__bss_start@@Base+0xe18>
  406dc6:	vmovaps XMMWORD PTR [rip+0x81d2],xmm0        # 40efa0 <__bss_start@@Base+0xe38>
  406dce:	vmovups YMMWORD PTR [rip+0x81da],ymm1        # 40efb0 <__bss_start@@Base+0xe48>
  406dd6:	vmovups YMMWORD PTR [rip+0x81f2],ymm1        # 40efd0 <__bss_start@@Base+0xe68>
  406dde:	vmovups YMMWORD PTR [rip+0x8202],ymm1        # 40efe8 <__bss_start@@Base+0xe80>
  406de6:	vmovups YMMWORD PTR [rip+0x8222],ymm1        # 40f010 <__bss_start@@Base+0xea8>
  406dee:	vmovups YMMWORD PTR [rip+0x824a],ymm1        # 40f040 <__bss_start@@Base+0xed8>
  406df6:	vmovups YMMWORD PTR [rip+0x8252],ymm1        # 40f050 <__bss_start@@Base+0xee8>
  406dfe:	vmovups YMMWORD PTR [rip+0x826a],ymm1        # 40f070 <__bss_start@@Base+0xf08>
  406e06:	vmovaps XMMWORD PTR [rip+0x8282],xmm0        # 40f090 <__bss_start@@Base+0xf28>
  406e0e:	vmovups YMMWORD PTR [rip+0x828a],ymm1        # 40f0a0 <__bss_start@@Base+0xf38>
  406e16:	vmovups YMMWORD PTR [rip+0x82a2],ymm1        # 40f0c0 <__bss_start@@Base+0xf58>
  406e1e:	vmovups YMMWORD PTR [rip+0x82ba],ymm1        # 40f0e0 <__bss_start@@Base+0xf78>
  406e26:	mov    QWORD PTR [rip+0x81ff],0x0        # 40f030 <__bss_start@@Base+0xec8>
  406e31:	vmovups YMMWORD PTR [rip+0x82c7],ymm1        # 40f100 <__bss_start@@Base+0xf98>
  406e39:	vmovups YMMWORD PTR [rip+0x82df],ymm1        # 40f120 <__bss_start@@Base+0xfb8>
  406e41:	mov    QWORD PTR [rip+0x82f4],0x0        # 40f140 <__bss_start@@Base+0xfd8>
  406e4c:	pop    rax
  406e4d:	vzeroupper 
  406e50:	ret    
  406e51:	nop    WORD PTR cs:[rax+rax*1+0x0]
  406e5b:	nop    DWORD PTR [rax+rax*1+0x0]
  406e60:	lea    rdi,[rip+0xfffffffffffffea9]        # 406d10 <__generate_code_for_binary_boolean_expression@@Base+0x240>
  406e67:	lea    rsi,[rip+0xffffffffffffff22]        # 406d90 <__generate_code_for_binary_boolean_expression@@Base+0x2c0>
  406e6e:	jmp    408680 <__gcov_flush@@Base+0xb0>
  406e73:	nop
  406e74:	nop    WORD PTR cs:[rax+rax*1+0x0]
  406e7e:	xchg   ax,ax
  406e80:	push   rbp
  406e81:	push   r15
  406e83:	push   r14
  406e85:	push   r13
  406e87:	push   r12
  406e89:	push   rbx
  406e8a:	sub    rsp,0x18
  406e8e:	mov    r14d,edx
  406e91:	mov    r15,rsi
  406e94:	mov    r12,rdi
  406e97:	lea    rdi,[rsp+0xc]
  406e9c:	lea    rsi,[rsp+0x10]
  406ea1:	call   408ab0 <__gcov_flush@@Base+0x4e0>
  406ea6:	test   rax,rax
  406ea9:	je     406ee3 <__generate_code_for_binary_boolean_expression@@Base+0x413>
  406eab:	mov    rbx,rax
  406eae:	mov    r13,QWORD PTR [rsp+0x10]
  406eb3:	mov    rdi,r12
  406eb6:	call   4030e0 <strlen@plt>
  406ebb:	lea    rdi,[rax+r13*1]
  406ebf:	add    rdi,0x2
  406ec3:	call   4031c0 <malloc@plt>
  406ec8:	mov    rbp,rax
  406ecb:	mov    r8d,DWORD PTR [rsp+0xc]
  406ed0:	mov    rdi,rax
  406ed3:	mov    rsi,r12
  406ed6:	mov    rdx,rbx
  406ed9:	mov    rcx,r13
  406edc:	call   408b40 <__gcov_flush@@Base+0x570>
  406ee1:	jmp    406eee <__generate_code_for_binary_boolean_expression@@Base+0x41e>
  406ee3:	mov    rdi,r12
  406ee6:	call   403280 <strdup@plt>
  406eeb:	mov    rbp,rax
  406eee:	mov    QWORD PTR [rip+0x8253],rbp        # 40f148 <__bss_start@@Base+0xfe0>
  406ef5:	mov    BYTE PTR [rip+0x8254],0x0        # 40f150 <__bss_start@@Base+0xfe8>
  406efc:	mov    rdi,rbp
  406eff:	mov    esi,0x2
  406f04:	xor    eax,eax
  406f06:	call   403220 <open@plt>
  406f0b:	mov    DWORD PTR [rip+0x724f],eax        # 40e160 <__data_start@@Base+0x10>
  406f11:	cmp    eax,0xffffffff
  406f14:	je     406f1f <__generate_code_for_binary_boolean_expression@@Base+0x44f>
  406f16:	lea    rbx,[rip+0x2cd2]        # 409bef <_IO_stdin_used@@Base+0xbef>
  406f1d:	jmp    406f83 <__generate_code_for_binary_boolean_expression@@Base+0x4b3>
  406f1f:	mov    BYTE PTR [rip+0x822a],0x1        # 40f150 <__bss_start@@Base+0xfe8>
  406f26:	mov    rdi,QWORD PTR [rip+0x821b]        # 40f148 <__bss_start@@Base+0xfe0>
  406f2d:	mov    esi,0x42
  406f32:	mov    edx,0x1a4
  406f37:	xor    eax,eax
  406f39:	call   403220 <open@plt>
  406f3e:	mov    DWORD PTR [rip+0x721c],eax        # 40e160 <__data_start@@Base+0x10>
  406f44:	lea    rbx,[rip+0x2ca8]        # 409bf3 <_IO_stdin_used@@Base+0xbf3>
  406f4b:	cmp    eax,0xffffffff
  406f4e:	jne    406f83 <__generate_code_for_binary_boolean_expression@@Base+0x4b3>
  406f50:	mov    rdi,QWORD PTR [rip+0x81f1]        # 40f148 <__bss_start@@Base+0xfe0>
  406f57:	call   408770 <__gcov_flush@@Base+0x1a0>
  406f5c:	mov    rdi,QWORD PTR [rip+0x81e5]        # 40f148 <__bss_start@@Base+0xfe0>
  406f63:	mov    esi,0x42
  406f68:	mov    edx,0x1a4
  406f6d:	xor    eax,eax
  406f6f:	call   403220 <open@plt>
  406f74:	mov    DWORD PTR [rip+0x71e6],eax        # 40e160 <__data_start@@Base+0x10>
  406f7a:	cmp    eax,0xffffffff
  406f7d:	je     407268 <__generate_code_for_binary_boolean_expression@@Base+0x798>
  406f83:	mov    edi,eax
  406f85:	call   408820 <__gcov_flush@@Base+0x250>
  406f8a:	mov    edi,DWORD PTR [rip+0x71d0]        # 40e160 <__data_start@@Base+0x10>
  406f90:	mov    rsi,rbx
  406f93:	call   403200 <fdopen@plt>
  406f98:	mov    QWORD PTR [rip+0x81b9],rax        # 40f158 <__bss_start@@Base+0xff0>
  406f9f:	mov    QWORD PTR [rip+0x81b6],0x0        # 40f160 <__bss_start@@Base+0xff8>
  406faa:	mov    QWORD PTR [rip+0x81b3],0x0        # 40f168 <__bss_start@@Base+0x1000>
  406fb5:	mov    QWORD PTR [rip+0x81b0],0x0        # 40f170 <__bss_start@@Base+0x1008>
  406fc0:	mov    ebx,0x20000
  406fc5:	cmp    BYTE PTR [rip+0x8184],0x0        # 40f150 <__bss_start@@Base+0xfe8>
  406fcc:	je     407069 <__generate_code_for_binary_boolean_expression@@Base+0x599>
  406fd2:	mov    rdi,rbx
  406fd5:	call   4031c0 <malloc@plt>
  406fda:	mov    r12,rax
  406fdd:	mov    QWORD PTR [rip+0x817c],rax        # 40f160 <__bss_start@@Base+0xff8>
  406fe4:	mov    QWORD PTR [rip+0x817d],rbx        # 40f168 <__bss_start@@Base+0x1000>
  406feb:	mov    edx,0x20000
  406ff0:	mov    rdi,r12
  406ff3:	xor    esi,esi
  406ff5:	call   403130 <memset@plt>
  406ffa:	mov    rbx,QWORD PTR [rip+0x816f]        # 40f170 <__bss_start@@Base+0x1008>
  407001:	lea    rax,[rbx+0x4]
  407005:	cmp    rax,QWORD PTR [rip+0x815c]        # 40f168 <__bss_start@@Base+0x1000>
  40700c:	jbe    407107 <__generate_code_for_binary_boolean_expression@@Base+0x637>
  407012:	add    rbx,0x20003
  407019:	and    rbx,0xfffffffffffe0000
  407020:	mov    rdi,r12
  407023:	mov    rsi,rbx
  407026:	call   4031f0 <realloc@plt>
  40702b:	mov    r12,rax
  40702e:	mov    QWORD PTR [rip+0x812b],rax        # 40f160 <__bss_start@@Base+0xff8>
  407035:	mov    QWORD PTR [rip+0x812c],rbx        # 40f168 <__bss_start@@Base+0x1000>
  40703c:	mov    al,BYTE PTR [rip+0x810e]        # 40f150 <__bss_start@@Base+0xfe8>
  407042:	mov    rbp,QWORD PTR [rip+0x8127]        # 40f170 <__bss_start@@Base+0x1008>
  407049:	mov    DWORD PTR [r12+rbp*1],0x67636461
  407051:	lea    rbx,[rbp+0x4]
  407055:	mov    QWORD PTR [rip+0x8114],rbx        # 40f170 <__bss_start@@Base+0x1008>
  40705c:	cmp    al,0x1
  40705e:	jne    4070ed <__generate_code_for_binary_boolean_expression@@Base+0x61d>
  407064:	jmp    407121 <__generate_code_for_binary_boolean_expression@@Base+0x651>
  407069:	mov    rdi,rax
  40706c:	xor    esi,esi
  40706e:	mov    edx,0x2
  407073:	call   4031e0 <fseek@plt>
  407078:	mov    rdi,QWORD PTR [rip+0x80d9]        # 40f158 <__bss_start@@Base+0xff0>
  40707f:	call   403170 <ftell@plt>
  407084:	mov    QWORD PTR [rip+0x8105],rax        # 40f190 <__bss_start@@Base+0x1028>
  40708b:	test   rax,rax
  40708e:	je     407220 <__generate_code_for_binary_boolean_expression@@Base+0x750>
  407094:	mov    r8d,DWORD PTR [rip+0x70c5]        # 40e160 <__data_start@@Base+0x10>
  40709b:	xor    edi,edi
  40709d:	mov    rsi,rax
  4070a0:	mov    edx,0x3
  4070a5:	mov    ecx,0x1
  4070aa:	xor    r9d,r9d
  4070ad:	call   4030f0 <mmap@plt>
  4070b2:	mov    QWORD PTR [rip+0x80a7],rax        # 40f160 <__bss_start@@Base+0xff8>
  4070b9:	cmp    rax,0xffffffffffffffff
  4070bd:	je     4071ec <__generate_code_for_binary_boolean_expression@@Base+0x71c>
  4070c3:	mov    r12,rax
  4070c6:	cmp    BYTE PTR [rip+0x8083],0x0        # 40f150 <__bss_start@@Base+0xfe8>
  4070cd:	jne    406ffa <__generate_code_for_binary_boolean_expression@@Base+0x52a>
  4070d3:	mov    rbx,QWORD PTR [rip+0x8096]        # 40f170 <__bss_start@@Base+0x1008>
  4070da:	mov    DWORD PTR [r12+rbx*1],0x67636461
  4070e2:	add    rbx,0x4
  4070e6:	mov    QWORD PTR [rip+0x8083],rbx        # 40f170 <__bss_start@@Base+0x1008>
  4070ed:	mov    eax,DWORD PTR [r15]
  4070f0:	mov    DWORD PTR [r12+rbx*1],eax
  4070f4:	add    rbx,0x4
  4070f8:	mov    QWORD PTR [rip+0x8071],rbx        # 40f170 <__bss_start@@Base+0x1008>
  4070ff:	mov    rax,rbx
  407102:	jmp    4071ce <__generate_code_for_binary_boolean_expression@@Base+0x6fe>
  407107:	mov    rbp,QWORD PTR [rip+0x8062]        # 40f170 <__bss_start@@Base+0x1008>
  40710e:	mov    DWORD PTR [r12+rbp*1],0x67636461
  407116:	lea    rbx,[rbp+0x4]
  40711a:	mov    QWORD PTR [rip+0x804f],rbx        # 40f170 <__bss_start@@Base+0x1008>
  407121:	lea    rax,[rbp+0x8]
  407125:	cmp    rax,QWORD PTR [rip+0x803c]        # 40f168 <__bss_start@@Base+0x1000>
  40712c:	jbe    40717e <__generate_code_for_binary_boolean_expression@@Base+0x6ae>
  40712e:	add    rbp,0x20007
  407135:	and    rbp,0xfffffffffffe0000
  40713c:	mov    rdi,r12
  40713f:	mov    rsi,rbp
  407142:	call   4031f0 <realloc@plt>
  407147:	mov    r12,rax
  40714a:	mov    QWORD PTR [rip+0x800f],rax        # 40f160 <__bss_start@@Base+0xff8>
  407151:	mov    QWORD PTR [rip+0x8010],rbp        # 40f168 <__bss_start@@Base+0x1000>
  407158:	mov    rbx,QWORD PTR [rip+0x8011]        # 40f170 <__bss_start@@Base+0x1008>
  40715f:	mov    cl,BYTE PTR [rip+0x7feb]        # 40f150 <__bss_start@@Base+0xfe8>
  407165:	mov    eax,DWORD PTR [r15]
  407168:	mov    DWORD PTR [r12+rbx*1],eax
  40716c:	lea    rax,[rbx+0x4]
  407170:	mov    QWORD PTR [rip+0x7ff9],rax        # 40f170 <__bss_start@@Base+0x1008>
  407177:	cmp    cl,0x1
  40717a:	je     407190 <__generate_code_for_binary_boolean_expression@@Base+0x6c0>
  40717c:	jmp    4071ce <__generate_code_for_binary_boolean_expression@@Base+0x6fe>
  40717e:	mov    eax,DWORD PTR [r15]
  407181:	mov    DWORD PTR [r12+rbx*1],eax
  407185:	lea    rax,[rbx+0x4]
  407189:	mov    QWORD PTR [rip+0x7fe0],rax        # 40f170 <__bss_start@@Base+0x1008>
  407190:	lea    rcx,[rbx+0x8]
  407194:	cmp    rcx,QWORD PTR [rip+0x7fcd]        # 40f168 <__bss_start@@Base+0x1000>
  40719b:	jbe    4071ce <__generate_code_for_binary_boolean_expression@@Base+0x6fe>
  40719d:	add    rbx,0x20007
  4071a4:	and    rbx,0xfffffffffffe0000
  4071ab:	mov    rdi,r12
  4071ae:	mov    rsi,rbx
  4071b1:	call   4031f0 <realloc@plt>
  4071b6:	mov    r12,rax
  4071b9:	mov    QWORD PTR [rip+0x7fa0],rax        # 40f160 <__bss_start@@Base+0xff8>
  4071c0:	mov    QWORD PTR [rip+0x7fa1],rbx        # 40f168 <__bss_start@@Base+0x1000>
  4071c7:	mov    rax,QWORD PTR [rip+0x7fa2]        # 40f170 <__bss_start@@Base+0x1008>
  4071ce:	mov    DWORD PTR [r12+rax*1],r14d
  4071d2:	add    rax,0x4
  4071d6:	mov    QWORD PTR [rip+0x7f93],rax        # 40f170 <__bss_start@@Base+0x1008>
  4071dd:	add    rsp,0x18
  4071e1:	pop    rbx
  4071e2:	pop    r12
  4071e4:	pop    r13
  4071e6:	pop    r14
  4071e8:	pop    r15
  4071ea:	pop    rbp
  4071eb:	ret    
  4071ec:	call   403050 <__errno_location@plt>
  4071f1:	mov    edi,DWORD PTR [rax]
  4071f3:	mov    rax,QWORD PTR [rip+0x6df6]        # 40dff0 <stderr@GLIBC_2.2.5>
  4071fa:	mov    rbx,QWORD PTR [rax]
  4071fd:	mov    rbp,QWORD PTR [rip+0x7f44]        # 40f148 <__bss_start@@Base+0xfe0>
  407204:	call   403290 <strerror@plt>
  407209:	lea    rsi,[rip+0x2b41]        # 409d51 <_IO_stdin_used@@Base+0xd51>
  407210:	mov    rdi,rbx
  407213:	mov    rdx,rbp
  407216:	mov    rcx,rax
  407219:	xor    eax,eax
  40721b:	call   403160 <fprintf@plt>
  407220:	mov    BYTE PTR [rip+0x7f29],0x1        # 40f150 <__bss_start@@Base+0xfe8>
  407227:	mov    QWORD PTR [rip+0x7f2e],0x0        # 40f160 <__bss_start@@Base+0xff8>
  407232:	mov    QWORD PTR [rip+0x7f2b],0x0        # 40f168 <__bss_start@@Base+0x1000>
  40723d:	mov    rbx,QWORD PTR [rip+0x7f2c]        # 40f170 <__bss_start@@Base+0x1008>
  407244:	cmp    rbx,0xfffffffffffe0000
  40724b:	jne    407255 <__generate_code_for_binary_boolean_expression@@Base+0x785>
  40724d:	xor    r12d,r12d
  407250:	jmp    406feb <__generate_code_for_binary_boolean_expression@@Base+0x51b>
  407255:	add    rbx,0x3ffff
  40725c:	and    rbx,0xfffffffffffe0000
  407263:	jmp    406fd2 <__generate_code_for_binary_boolean_expression@@Base+0x502>
  407268:	call   403050 <__errno_location@plt>
  40726d:	mov    edi,DWORD PTR [rax]
  40726f:	mov    rax,QWORD PTR [rip+0x6d7a]        # 40dff0 <stderr@GLIBC_2.2.5>
  407276:	mov    rbx,QWORD PTR [rax]
  407279:	mov    rbp,QWORD PTR [rip+0x7ec8]        # 40f148 <__bss_start@@Base+0xfe0>
  407280:	call   403290 <strerror@plt>
  407285:	lea    rsi,[rip+0x296b]        # 409bf7 <_IO_stdin_used@@Base+0xbf7>
  40728c:	mov    rdi,rbx
  40728f:	mov    rdx,rbp
  407292:	mov    rcx,rax
  407295:	xor    eax,eax
  407297:	call   403160 <fprintf@plt>
  40729c:	jmp    4071dd <__generate_code_for_binary_boolean_expression@@Base+0x70d>
  4072a1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4072ab:	nop    DWORD PTR [rax+rax*1+0x0]
  4072b0:	mov    eax,DWORD PTR [rdi]
  4072b2:	mov    ecx,0xffffffff
  4072b7:	cmp    rax,rcx
  4072ba:	je     4072c9 <__generate_code_for_binary_boolean_expression@@Base+0x7f9>
  4072bc:	mov    rax,QWORD PTR [rsi+rax*8]
  4072c0:	test   rax,rax
  4072c3:	je     4072c9 <__generate_code_for_binary_boolean_expression@@Base+0x7f9>
  4072c5:	add    QWORD PTR [rax],0x1
  4072c9:	ret    
  4072ca:	nop    WORD PTR [rax+rax*1+0x0]
  4072d0:	push   rbp
  4072d1:	push   r15
  4072d3:	push   r14
  4072d5:	push   r13
  4072d7:	push   r12
  4072d9:	push   rbx
  4072da:	sub    rsp,0x18
  4072de:	mov    r15d,ecx
  4072e1:	xor    r14d,r14d
  4072e4:	test   r15b,r15b
  4072e7:	setne  al
  4072ea:	cmp    QWORD PTR [rip+0x7e66],0x0        # 40f158 <__bss_start@@Base+0xff0>
  4072f2:	je     407613 <__generate_code_for_binary_boolean_expression@@Base+0xb43>
  4072f8:	mov    DWORD PTR [rsp+0x4],edi
  4072fc:	mov    DWORD PTR [rsp+0x14],edx
  407300:	mov    DWORD PTR [rsp],r8d
  407304:	mov    QWORD PTR [rsp+0x8],rsi
  407309:	mov    r14b,al
  40730c:	cmp    BYTE PTR [rip+0x7e3d],0x1        # 40f150 <__bss_start@@Base+0xfe8>
  407313:	jne    407354 <__generate_code_for_binary_boolean_expression@@Base+0x884>
  407315:	mov    rbx,QWORD PTR [rip+0x7e54]        # 40f170 <__bss_start@@Base+0x1008>
  40731c:	lea    rax,[rbx+0x4]
  407320:	cmp    rax,QWORD PTR [rip+0x7e41]        # 40f168 <__bss_start@@Base+0x1000>
  407327:	jbe    407354 <__generate_code_for_binary_boolean_expression@@Base+0x884>
  407329:	add    rbx,0x20003
  407330:	and    rbx,0xfffffffffffe0000
  407337:	mov    rdi,QWORD PTR [rip+0x7e22]        # 40f160 <__bss_start@@Base+0xff8>
  40733e:	mov    rsi,rbx
  407341:	call   4031f0 <realloc@plt>
  407346:	mov    QWORD PTR [rip+0x7e13],rax        # 40f160 <__bss_start@@Base+0xff8>
  40734d:	mov    QWORD PTR [rip+0x7e14],rbx        # 40f168 <__bss_start@@Base+0x1000>
  407354:	or     r14d,0x2
  407358:	mov    r12,QWORD PTR [rip+0x7e01]        # 40f160 <__bss_start@@Base+0xff8>
  40735f:	mov    rbp,QWORD PTR [rip+0x7e0a]        # 40f170 <__bss_start@@Base+0x1008>
  407366:	mov    DWORD PTR [r12+rbp*1],0x1000000
  40736e:	lea    r13,[rbp+0x4]
  407372:	mov    QWORD PTR [rip+0x7df7],r13        # 40f170 <__bss_start@@Base+0x1008>
  407379:	mov    rdi,QWORD PTR [rsp+0x8]
  40737e:	test   rdi,rdi
  407381:	je     407394 <__generate_code_for_binary_boolean_expression@@Base+0x8c4>
  407383:	call   4030e0 <strlen@plt>
  407388:	shr    rax,0x2
  40738c:	lea    r14d,[r14+rax*1]
  407390:	add    r14d,0x2
  407394:	cmp    BYTE PTR [rip+0x7db5],0x0        # 40f150 <__bss_start@@Base+0xfe8>
  40739b:	je     4073fd <__generate_code_for_binary_boolean_expression@@Base+0x92d>
  40739d:	lea    rbx,[rbp+0x8]
  4073a1:	cmp    rbx,QWORD PTR [rip+0x7dc0]        # 40f168 <__bss_start@@Base+0x1000>
  4073a8:	jbe    407622 <__generate_code_for_binary_boolean_expression@@Base+0xb52>
  4073ae:	add    rbp,0x20007
  4073b5:	and    rbp,0xfffffffffffe0000
  4073bc:	mov    rdi,r12
  4073bf:	mov    rsi,rbp
  4073c2:	call   4031f0 <realloc@plt>
  4073c7:	mov    r12,rax
  4073ca:	mov    QWORD PTR [rip+0x7d8f],rax        # 40f160 <__bss_start@@Base+0xff8>
  4073d1:	mov    QWORD PTR [rip+0x7d90],rbp        # 40f168 <__bss_start@@Base+0x1000>
  4073d8:	mov    r13,QWORD PTR [rip+0x7d91]        # 40f170 <__bss_start@@Base+0x1008>
  4073df:	mov    al,BYTE PTR [rip+0x7d6b]        # 40f150 <__bss_start@@Base+0xfe8>
  4073e5:	mov    DWORD PTR [r12+r13*1],r14d
  4073e9:	lea    rbx,[r13+0x4]
  4073ed:	mov    QWORD PTR [rip+0x7d7c],rbx        # 40f170 <__bss_start@@Base+0x1008>
  4073f4:	cmp    al,0x1
  4073f6:	jne    407410 <__generate_code_for_binary_boolean_expression@@Base+0x940>
  4073f8:	jmp    40762e <__generate_code_for_binary_boolean_expression@@Base+0xb5e>
  4073fd:	mov    DWORD PTR [r12+rbp*1+0x4],r14d
  407402:	add    rbp,0x8
  407406:	mov    QWORD PTR [rip+0x7d63],rbp        # 40f170 <__bss_start@@Base+0x1008>
  40740d:	mov    rbx,rbp
  407410:	mov    eax,DWORD PTR [rsp+0x4]
  407414:	mov    DWORD PTR [r12+rbx*1],eax
  407418:	add    rbx,0x4
  40741c:	mov    QWORD PTR [rip+0x7d4d],rbx        # 40f170 <__bss_start@@Base+0x1008>
  407423:	mov    r13,rbx
  407426:	lea    rbp,[r13+0x4]
  40742a:	mov    eax,DWORD PTR [rsp+0x14]
  40742e:	mov    DWORD PTR [r12+r13*1],eax
  407432:	mov    QWORD PTR [rip+0x7d37],rbp        # 40f170 <__bss_start@@Base+0x1008>
  407439:	test   r15b,r15b
  40743c:	je     4074a6 <__generate_code_for_binary_boolean_expression@@Base+0x9d6>
  40743e:	cmp    BYTE PTR [rip+0x7d0b],0x1        # 40f150 <__bss_start@@Base+0xfe8>
  407445:	jne    407485 <__generate_code_for_binary_boolean_expression@@Base+0x9b5>
  407447:	lea    rax,[r13+0x8]
  40744b:	cmp    rax,QWORD PTR [rip+0x7d16]        # 40f168 <__bss_start@@Base+0x1000>
  407452:	jbe    407485 <__generate_code_for_binary_boolean_expression@@Base+0x9b5>
  407454:	add    r13,0x20007
  40745b:	and    r13,0xfffffffffffe0000
  407462:	mov    rdi,r12
  407465:	mov    rsi,r13
  407468:	call   4031f0 <realloc@plt>
  40746d:	mov    r12,rax
  407470:	mov    QWORD PTR [rip+0x7ce9],rax        # 40f160 <__bss_start@@Base+0xff8>
  407477:	mov    QWORD PTR [rip+0x7cea],r13        # 40f168 <__bss_start@@Base+0x1000>
  40747e:	mov    rbp,QWORD PTR [rip+0x7ceb]        # 40f170 <__bss_start@@Base+0x1008>
  407485:	mov    r13,QWORD PTR [rsp+0x8]
  40748a:	mov    eax,DWORD PTR [rsp]
  40748d:	mov    DWORD PTR [r12+rbp*1],eax
  407491:	add    rbp,0x4
  407495:	mov    QWORD PTR [rip+0x7cd4],rbp        # 40f170 <__bss_start@@Base+0x1008>
  40749c:	test   r13,r13
  40749f:	jne    4074b4 <__generate_code_for_binary_boolean_expression@@Base+0x9e4>
  4074a1:	jmp    407613 <__generate_code_for_binary_boolean_expression@@Base+0xb43>
  4074a6:	mov    r13,QWORD PTR [rsp+0x8]
  4074ab:	test   r13,r13
  4074ae:	je     407613 <__generate_code_for_binary_boolean_expression@@Base+0xb43>
  4074b4:	mov    rdi,r13
  4074b7:	call   4030e0 <strlen@plt>
  4074bc:	mov    rbx,rax
  4074bf:	shr    rbx,0x2
  4074c3:	add    ebx,0x1
  4074c6:	cmp    BYTE PTR [rip+0x7c83],0x1        # 40f150 <__bss_start@@Base+0xfe8>
  4074cd:	jne    407519 <__generate_code_for_binary_boolean_expression@@Base+0xa49>
  4074cf:	lea    rax,[rbp+0x4]
  4074d3:	mov    r14b,0x1
  4074d6:	cmp    rax,QWORD PTR [rip+0x7c8b]        # 40f168 <__bss_start@@Base+0x1000>
  4074dd:	jbe    40751c <__generate_code_for_binary_boolean_expression@@Base+0xa4c>
  4074df:	add    rbp,0x20003
  4074e6:	and    rbp,0xfffffffffffe0000
  4074ed:	mov    rdi,r12
  4074f0:	mov    rsi,rbp
  4074f3:	call   4031f0 <realloc@plt>
  4074f8:	mov    r12,rax
  4074fb:	mov    QWORD PTR [rip+0x7c5e],rax        # 40f160 <__bss_start@@Base+0xff8>
  407502:	mov    QWORD PTR [rip+0x7c5f],rbp        # 40f168 <__bss_start@@Base+0x1000>
  407509:	mov    r14b,BYTE PTR [rip+0x7c40]        # 40f150 <__bss_start@@Base+0xfe8>
  407510:	mov    rbp,QWORD PTR [rip+0x7c59]        # 40f170 <__bss_start@@Base+0x1008>
  407517:	jmp    40751c <__generate_code_for_binary_boolean_expression@@Base+0xa4c>
  407519:	xor    r14d,r14d
  40751c:	mov    DWORD PTR [r12+rbp*1],ebx
  407520:	add    rbp,0x4
  407524:	mov    QWORD PTR [rip+0x7c45],rbp        # 40f170 <__bss_start@@Base+0x1008>
  40752b:	mov    rdi,r13
  40752e:	call   4030e0 <strlen@plt>
  407533:	mov    rbx,rax
  407536:	test   r14b,0x1
  40753a:	je     407586 <__generate_code_for_binary_boolean_expression@@Base+0xab6>
  40753c:	lea    r15,[rbx+rbp*1]
  407540:	mov    r14b,0x1
  407543:	cmp    r15,QWORD PTR [rip+0x7c1e]        # 40f168 <__bss_start@@Base+0x1000>
  40754a:	jbe    407589 <__generate_code_for_binary_boolean_expression@@Base+0xab9>
  40754c:	add    r15,0x1ffff
  407553:	and    r15,0xfffffffffffe0000
  40755a:	mov    rdi,r12
  40755d:	mov    rsi,r15
  407560:	call   4031f0 <realloc@plt>
  407565:	mov    r12,rax
  407568:	mov    QWORD PTR [rip+0x7bf1],rax        # 40f160 <__bss_start@@Base+0xff8>
  40756f:	mov    QWORD PTR [rip+0x7bf2],r15        # 40f168 <__bss_start@@Base+0x1000>
  407576:	mov    rbp,QWORD PTR [rip+0x7bf3]        # 40f170 <__bss_start@@Base+0x1008>
  40757d:	mov    r14b,BYTE PTR [rip+0x7bcc]        # 40f150 <__bss_start@@Base+0xfe8>
  407584:	jmp    407589 <__generate_code_for_binary_boolean_expression@@Base+0xab9>
  407586:	xor    r14d,r14d
  407589:	lea    rdi,[r12+rbp*1]
  40758d:	mov    rsi,r13
  407590:	mov    rdx,rbx
  407593:	call   403190 <memcpy@plt>
  407598:	add    rbx,rbp
  40759b:	mov    QWORD PTR [rip+0x7bce],rbx        # 40f170 <__bss_start@@Base+0x1008>
  4075a2:	mov    rdi,r13
  4075a5:	call   4030e0 <strlen@plt>
  4075aa:	and    eax,0x3
  4075ad:	mov    ebp,0x4
  4075b2:	sub    rbp,rax
  4075b5:	test   r14b,0x1
  4075b9:	je     4075f9 <__generate_code_for_binary_boolean_expression@@Base+0xb29>
  4075bb:	lea    r14,[rbx+rbp*1]
  4075bf:	cmp    r14,QWORD PTR [rip+0x7ba2]        # 40f168 <__bss_start@@Base+0x1000>
  4075c6:	jbe    4075f9 <__generate_code_for_binary_boolean_expression@@Base+0xb29>
  4075c8:	add    r14,0x1ffff
  4075cf:	and    r14,0xfffffffffffe0000
  4075d6:	mov    rdi,r12
  4075d9:	mov    rsi,r14
  4075dc:	call   4031f0 <realloc@plt>
  4075e1:	mov    r12,rax
  4075e4:	mov    QWORD PTR [rip+0x7b75],rax        # 40f160 <__bss_start@@Base+0xff8>
  4075eb:	mov    QWORD PTR [rip+0x7b76],r14        # 40f168 <__bss_start@@Base+0x1000>
  4075f2:	mov    rbx,QWORD PTR [rip+0x7b77]        # 40f170 <__bss_start@@Base+0x1008>
  4075f9:	add    r12,rbx
  4075fc:	mov    rdi,r12
  4075ff:	xor    esi,esi
  407601:	mov    rdx,rbp
  407604:	call   403130 <memset@plt>
  407609:	add    rbx,rbp
  40760c:	mov    QWORD PTR [rip+0x7b5d],rbx        # 40f170 <__bss_start@@Base+0x1008>
  407613:	add    rsp,0x18
  407617:	pop    rbx
  407618:	pop    r12
  40761a:	pop    r13
  40761c:	pop    r14
  40761e:	pop    r15
  407620:	pop    rbp
  407621:	ret    
  407622:	mov    DWORD PTR [r12+rbp*1+0x4],r14d
  407627:	mov    QWORD PTR [rip+0x7b42],rbx        # 40f170 <__bss_start@@Base+0x1008>
  40762e:	lea    rax,[r13+0x8]
  407632:	cmp    rax,QWORD PTR [rip+0x7b2f]        # 40f168 <__bss_start@@Base+0x1000>
  407639:	jbe    40768f <__generate_code_for_binary_boolean_expression@@Base+0xbbf>
  40763b:	add    r13,0x20007
  407642:	and    r13,0xfffffffffffe0000
  407649:	mov    rdi,r12
  40764c:	mov    rsi,r13
  40764f:	call   4031f0 <realloc@plt>
  407654:	mov    r12,rax
  407657:	mov    QWORD PTR [rip+0x7b02],rax        # 40f160 <__bss_start@@Base+0xff8>
  40765e:	mov    QWORD PTR [rip+0x7b03],r13        # 40f168 <__bss_start@@Base+0x1000>
  407665:	mov    rbx,QWORD PTR [rip+0x7b04]        # 40f170 <__bss_start@@Base+0x1008>
  40766c:	mov    al,BYTE PTR [rip+0x7ade]        # 40f150 <__bss_start@@Base+0xfe8>
  407672:	mov    ecx,DWORD PTR [rsp+0x4]
  407676:	mov    DWORD PTR [r12+rbx*1],ecx
  40767a:	lea    r13,[rbx+0x4]
  40767e:	mov    QWORD PTR [rip+0x7aeb],r13        # 40f170 <__bss_start@@Base+0x1008>
  407685:	cmp    al,0x1
  407687:	jne    407426 <__generate_code_for_binary_boolean_expression@@Base+0x956>
  40768d:	jmp    4076a2 <__generate_code_for_binary_boolean_expression@@Base+0xbd2>
  40768f:	mov    eax,DWORD PTR [rsp+0x4]
  407693:	mov    DWORD PTR [r12+rbx*1],eax
  407697:	lea    r13,[rbx+0x4]
  40769b:	mov    QWORD PTR [rip+0x7ace],r13        # 40f170 <__bss_start@@Base+0x1008>
  4076a2:	lea    rax,[rbx+0x8]
  4076a6:	cmp    rax,QWORD PTR [rip+0x7abb]        # 40f168 <__bss_start@@Base+0x1000>
  4076ad:	jbe    407426 <__generate_code_for_binary_boolean_expression@@Base+0x956>
  4076b3:	add    rbx,0x20007
  4076ba:	and    rbx,0xfffffffffffe0000
  4076c1:	mov    rdi,r12
  4076c4:	mov    rsi,rbx
  4076c7:	call   4031f0 <realloc@plt>
  4076cc:	mov    r12,rax
  4076cf:	mov    QWORD PTR [rip+0x7a8a],rax        # 40f160 <__bss_start@@Base+0xff8>
  4076d6:	mov    QWORD PTR [rip+0x7a8b],rbx        # 40f168 <__bss_start@@Base+0x1000>
  4076dd:	mov    r13,QWORD PTR [rip+0x7a8c]        # 40f170 <__bss_start@@Base+0x1008>
  4076e4:	jmp    407426 <__generate_code_for_binary_boolean_expression@@Base+0x956>
  4076e9:	nop    DWORD PTR [rax+0x0]
  4076f0:	push   rbp
  4076f1:	push   r15
  4076f3:	push   r14
  4076f5:	push   r13
  4076f7:	push   r12
  4076f9:	push   rbx
  4076fa:	sub    rsp,0x18
  4076fe:	cmp    QWORD PTR [rip+0x7a52],0x0        # 40f158 <__bss_start@@Base+0xff0>
  407706:	je     4077aa <__generate_code_for_binary_boolean_expression@@Base+0xcda>
  40770c:	mov    r13d,edi
  40770f:	mov    r14,QWORD PTR [rip+0x7a5a]        # 40f170 <__bss_start@@Base+0x1008>
  407716:	cmp    BYTE PTR [rip+0x7a33],0x0        # 40f150 <__bss_start@@Base+0xfe8>
  40771d:	mov    QWORD PTR [rsp+0x8],rsi
  407722:	je     4077b9 <__generate_code_for_binary_boolean_expression@@Base+0xce9>
  407728:	lea    rbx,[r14+0x4]
  40772c:	cmp    rbx,QWORD PTR [rip+0x7a35]        # 40f168 <__bss_start@@Base+0x1000>
  407733:	jbe    407841 <__generate_code_for_binary_boolean_expression@@Base+0xd71>
  407739:	add    r14,0x20003
  407740:	and    r14,0xfffffffffffe0000
  407747:	mov    rdi,QWORD PTR [rip+0x7a12]        # 40f160 <__bss_start@@Base+0xff8>
  40774e:	mov    rsi,r14
  407751:	call   4031f0 <realloc@plt>
  407756:	mov    rsi,QWORD PTR [rsp+0x8]
  40775b:	mov    r15,rax
  40775e:	mov    QWORD PTR [rip+0x79fb],rax        # 40f160 <__bss_start@@Base+0xff8>
  407765:	mov    QWORD PTR [rip+0x79fc],r14        # 40f168 <__bss_start@@Base+0x1000>
  40776c:	mov    r14,QWORD PTR [rip+0x79fd]        # 40f170 <__bss_start@@Base+0x1008>
  407773:	mov    al,BYTE PTR [rip+0x79d7]        # 40f150 <__bss_start@@Base+0xfe8>
  407779:	lea    rbx,[r14+0x4]
  40777d:	mov    DWORD PTR [r15+r14*1],0x1a10000
  407785:	mov    QWORD PTR [rip+0x79e4],rbx        # 40f170 <__bss_start@@Base+0x1008>
  40778c:	lea    ebp,[r13+r13*1+0x0]
  407791:	xor    ecx,ecx
  407793:	mov    QWORD PTR [rsp],rcx
  407797:	mov    r12d,0x0
  40779d:	cmp    al,0x1
  40779f:	je     40785c <__generate_code_for_binary_boolean_expression@@Base+0xd8c>
  4077a5:	jmp    40798f <__generate_code_for_binary_boolean_expression@@Base+0xebf>
  4077aa:	add    rsp,0x18
  4077ae:	pop    rbx
  4077af:	pop    r12
  4077b1:	pop    r13
  4077b3:	pop    r14
  4077b5:	pop    r15
  4077b7:	pop    rbp
  4077b8:	ret    
  4077b9:	mov    r15,QWORD PTR [rip+0x79a0]        # 40f160 <__bss_start@@Base+0xff8>
  4077c0:	mov    ecx,DWORD PTR [r15+r14*1]
  4077c4:	lea    rbx,[r14+0x4]
  4077c8:	mov    QWORD PTR [rip+0x79a1],rbx        # 40f170 <__bss_start@@Base+0x1008>
  4077cf:	cmp    ecx,0xffffffff
  4077d2:	je     4078b5 <__generate_code_for_binary_boolean_expression@@Base+0xde5>
  4077d8:	cmp    ecx,0x1a10000
  4077de:	jne    4078c3 <__generate_code_for_binary_boolean_expression@@Base+0xdf3>
  4077e4:	mov    ecx,DWORD PTR [r15+r14*1+0x4]
  4077e9:	lea    rbp,[r14+0x8]
  4077ed:	mov    QWORD PTR [rip+0x797c],rbp        # 40f170 <__bss_start@@Base+0x1008>
  4077f4:	cmp    ecx,0xffffffff
  4077f7:	je     4078dd <__generate_code_for_binary_boolean_expression@@Base+0xe0d>
  4077fd:	mov    eax,ecx
  4077ff:	shr    eax,1
  407801:	cmp    eax,r13d
  407804:	jne    4078dd <__generate_code_for_binary_boolean_expression@@Base+0xe0d>
  40780a:	mov    r12d,r13d
  40780d:	lea    rdi,[r12*8+0x0]
  407815:	call   4031c0 <malloc@plt>
  40781a:	test   r13d,r13d
  40781d:	mov    rcx,rax
  407820:	mov    QWORD PTR [rsp],rax
  407824:	je     40790a <__generate_code_for_binary_boolean_expression@@Base+0xe3a>
  40782a:	mov    eax,r12d
  40782d:	and    eax,0x1
  407830:	cmp    r13d,0x1
  407834:	jne    407914 <__generate_code_for_binary_boolean_expression@@Base+0xe44>
  40783a:	xor    ecx,ecx
  40783c:	jmp    407953 <__generate_code_for_binary_boolean_expression@@Base+0xe83>
  407841:	mov    r15,QWORD PTR [rip+0x7918]        # 40f160 <__bss_start@@Base+0xff8>
  407848:	mov    DWORD PTR [r15+r14*1],0x1a10000
  407850:	mov    QWORD PTR [rip+0x7919],rbx        # 40f170 <__bss_start@@Base+0x1008>
  407857:	lea    ebp,[r13+r13*1+0x0]
  40785c:	lea    rax,[r14+0x8]
  407860:	cmp    rax,QWORD PTR [rip+0x7901]        # 40f168 <__bss_start@@Base+0x1000>
  407867:	jbe    4078a7 <__generate_code_for_binary_boolean_expression@@Base+0xdd7>
  407869:	add    r14,0x20007
  407870:	and    r14,0xfffffffffffe0000
  407877:	mov    rdi,r15
  40787a:	mov    rsi,r14
  40787d:	call   4031f0 <realloc@plt>
  407882:	mov    rsi,QWORD PTR [rsp+0x8]
  407887:	mov    r15,rax
  40788a:	mov    QWORD PTR [rip+0x78cf],rax        # 40f160 <__bss_start@@Base+0xff8>
  407891:	mov    QWORD PTR [rip+0x78d0],r14        # 40f168 <__bss_start@@Base+0x1000>
  407898:	xor    eax,eax
  40789a:	mov    QWORD PTR [rsp],rax
  40789e:	mov    rbx,QWORD PTR [rip+0x78cb]        # 40f170 <__bss_start@@Base+0x1008>
  4078a5:	jmp    4078ad <__generate_code_for_binary_boolean_expression@@Base+0xddd>
  4078a7:	xor    eax,eax
  4078a9:	mov    QWORD PTR [rsp],rax
  4078ad:	xor    r12d,r12d
  4078b0:	jmp    40798f <__generate_code_for_binary_boolean_expression@@Base+0xebf>
  4078b5:	xor    r12d,r12d
  4078b8:	xor    eax,eax
  4078ba:	mov    QWORD PTR [rsp],rax
  4078be:	jmp    407974 <__generate_code_for_binary_boolean_expression@@Base+0xea4>
  4078c3:	mov    rax,QWORD PTR [rip+0x6726]        # 40dff0 <stderr@GLIBC_2.2.5>
  4078ca:	mov    rdi,QWORD PTR [rax]
  4078cd:	mov    rdx,QWORD PTR [rip+0x7874]        # 40f148 <__bss_start@@Base+0xfe0>
  4078d4:	lea    rsi,[rip+0x233c]        # 409c17 <_IO_stdin_used@@Base+0xc17>
  4078db:	jmp    4078f5 <__generate_code_for_binary_boolean_expression@@Base+0xe25>
  4078dd:	mov    rax,QWORD PTR [rip+0x670c]        # 40dff0 <stderr@GLIBC_2.2.5>
  4078e4:	mov    rdi,QWORD PTR [rax]
  4078e7:	mov    rdx,QWORD PTR [rip+0x785a]        # 40f148 <__bss_start@@Base+0xfe0>
  4078ee:	lea    rsi,[rip+0x236c]        # 409c61 <_IO_stdin_used@@Base+0xc61>
  4078f5:	xor    eax,eax
  4078f7:	add    rsp,0x18
  4078fb:	pop    rbx
  4078fc:	pop    r12
  4078fe:	pop    r13
  407900:	pop    r14
  407902:	pop    r15
  407904:	pop    rbp
  407905:	jmp    403160 <fprintf@plt>
  40790a:	mov    r12,rax
  40790d:	mov    rsi,QWORD PTR [rsp+0x8]
  407912:	jmp    407974 <__generate_code_for_binary_boolean_expression@@Base+0xea4>
  407914:	mov    rbp,0xfffffffffffffff8
  40791b:	sub    rbp,r14
  40791e:	lea    rdx,[r14+r15*1]
  407922:	add    rdx,0x14
  407926:	sub    r12,rax
  407929:	xor    ecx,ecx
  40792b:	mov    rdi,QWORD PTR [rsp]
  40792f:	nop
  407930:	mov    rsi,QWORD PTR [rdx+rcx*8-0xc]
  407935:	mov    QWORD PTR [rdi+rcx*8],rsi
  407939:	mov    rsi,QWORD PTR [rdx+rcx*8-0x4]
  40793e:	mov    QWORD PTR [rdi+rcx*8+0x8],rsi
  407943:	add    rcx,0x2
  407947:	add    rbp,0xfffffffffffffff0
  40794b:	cmp    r12,rcx
  40794e:	jne    407930 <__generate_code_for_binary_boolean_expression@@Base+0xe60>
  407950:	neg    rbp
  407953:	mov    rsi,QWORD PTR [rsp+0x8]
  407958:	test   rax,rax
  40795b:	mov    r12,QWORD PTR [rsp]
  40795f:	je     40796d <__generate_code_for_binary_boolean_expression@@Base+0xe9d>
  407961:	mov    rax,QWORD PTR [r15+rbp*1]
  407965:	mov    QWORD PTR [r12+rcx*8],rax
  407969:	add    rbp,0x8
  40796d:	mov    QWORD PTR [rip+0x77fc],rbp        # 40f170 <__bss_start@@Base+0x1008>
  407974:	mov    QWORD PTR [rip+0x77f5],r14        # 40f170 <__bss_start@@Base+0x1008>
  40797b:	mov    DWORD PTR [r15+r14*1],0x1a10000
  407983:	mov    QWORD PTR [rip+0x77e6],rbx        # 40f170 <__bss_start@@Base+0x1008>
  40798a:	lea    ebp,[r13+r13*1+0x0]
  40798f:	mov    DWORD PTR [r15+rbx*1],ebp
  407993:	add    rbx,0x4
  407997:	mov    QWORD PTR [rip+0x77d2],rbx        # 40f170 <__bss_start@@Base+0x1008>
  40799e:	test   r13d,r13d
  4079a1:	je     407ae8 <__generate_code_for_binary_boolean_expression@@Base+0x1018>
  4079a7:	mov    edi,r13d
  4079aa:	xor    ebp,ebp
  4079ac:	mov    QWORD PTR [rsp+0x10],rdi
  4079b1:	test   r12,r12
  4079b4:	jne    4079f6 <__generate_code_for_binary_boolean_expression@@Base+0xf26>
  4079b6:	jmp    407a00 <__generate_code_for_binary_boolean_expression@@Base+0xf30>
  4079b8:	nop    DWORD PTR [rax+rax*1+0x0]
  4079c0:	mov    DWORD PTR [r15+rbx*1],r14d
  4079c4:	add    rbx,0x4
  4079c8:	mov    QWORD PTR [rip+0x77a1],rbx        # 40f170 <__bss_start@@Base+0x1008>
  4079cf:	mov    rax,rbx
  4079d2:	mov    DWORD PTR [r15+rax*1],r13d
  4079d6:	add    rax,0x4
  4079da:	mov    QWORD PTR [rip+0x778f],rax        # 40f170 <__bss_start@@Base+0x1008>
  4079e1:	add    rbp,0x1
  4079e5:	mov    rbx,rax
  4079e8:	cmp    rdi,rbp
  4079eb:	je     407ae8 <__generate_code_for_binary_boolean_expression@@Base+0x1018>
  4079f1:	test   r12,r12
  4079f4:	je     407a00 <__generate_code_for_binary_boolean_expression@@Base+0xf30>
  4079f6:	mov    r14,QWORD PTR [r12+rbp*8]
  4079fa:	jmp    407a03 <__generate_code_for_binary_boolean_expression@@Base+0xf33>
  4079fc:	nop    DWORD PTR [rax+0x0]
  407a00:	xor    r14d,r14d
  407a03:	add    r14,QWORD PTR [rsi+rbp*8]
  407a07:	mov    QWORD PTR [rsi+rbp*8],r14
  407a0b:	mov    r13,r14
  407a0e:	shr    r13,0x20
  407a12:	cmp    BYTE PTR [rip+0x7737],0x0        # 40f150 <__bss_start@@Base+0xfe8>
  407a19:	je     4079c0 <__generate_code_for_binary_boolean_expression@@Base+0xef0>
  407a1b:	lea    rax,[rbx+0x4]
  407a1f:	mov    rcx,QWORD PTR [rip+0x7742]        # 40f168 <__bss_start@@Base+0x1000>
  407a26:	cmp    rax,rcx
  407a29:	jbe    407a90 <__generate_code_for_binary_boolean_expression@@Base+0xfc0>
  407a2b:	add    rbx,0x20003
  407a32:	and    rbx,0xfffffffffffe0000
  407a39:	mov    rdi,r15
  407a3c:	mov    rsi,rbx
  407a3f:	call   4031f0 <realloc@plt>
  407a44:	mov    rdi,QWORD PTR [rsp+0x10]
  407a49:	mov    rsi,QWORD PTR [rsp+0x8]
  407a4e:	mov    r15,rax
  407a51:	mov    QWORD PTR [rip+0x7708],rax        # 40f160 <__bss_start@@Base+0xff8>
  407a58:	mov    QWORD PTR [rip+0x7709],rbx        # 40f168 <__bss_start@@Base+0x1000>
  407a5f:	mov    dl,BYTE PTR [rip+0x76eb]        # 40f150 <__bss_start@@Base+0xfe8>
  407a65:	mov    rcx,rbx
  407a68:	mov    rbx,QWORD PTR [rip+0x7701]        # 40f170 <__bss_start@@Base+0x1008>
  407a6f:	mov    DWORD PTR [rax+rbx*1],r14d
  407a73:	lea    rax,[rbx+0x4]
  407a77:	mov    QWORD PTR [rip+0x76f2],rax        # 40f170 <__bss_start@@Base+0x1008>
  407a7e:	cmp    dl,0x1
  407a81:	jne    4079d2 <__generate_code_for_binary_boolean_expression@@Base+0xf02>
  407a87:	jmp    407a9b <__generate_code_for_binary_boolean_expression@@Base+0xfcb>
  407a89:	nop    DWORD PTR [rax+0x0]
  407a90:	mov    DWORD PTR [r15+rbx*1],r14d
  407a94:	mov    QWORD PTR [rip+0x76d5],rax        # 40f170 <__bss_start@@Base+0x1008>
  407a9b:	lea    rdx,[rbx+0x8]
  407a9f:	cmp    rdx,rcx
  407aa2:	jbe    4079d2 <__generate_code_for_binary_boolean_expression@@Base+0xf02>
  407aa8:	add    rbx,0x20007
  407aaf:	and    rbx,0xfffffffffffe0000
  407ab6:	mov    rdi,r15
  407ab9:	mov    rsi,rbx
  407abc:	call   4031f0 <realloc@plt>
  407ac1:	mov    rdi,QWORD PTR [rsp+0x10]
  407ac6:	mov    rsi,QWORD PTR [rsp+0x8]
  407acb:	mov    r15,rax
  407ace:	mov    QWORD PTR [rip+0x768b],rax        # 40f160 <__bss_start@@Base+0xff8>
  407ad5:	mov    QWORD PTR [rip+0x768c],rbx        # 40f168 <__bss_start@@Base+0x1000>
  407adc:	mov    rax,QWORD PTR [rip+0x768d]        # 40f170 <__bss_start@@Base+0x1008>
  407ae3:	jmp    4079d2 <__generate_code_for_binary_boolean_expression@@Base+0xf02>
  407ae8:	mov    rdi,QWORD PTR [rsp]
  407aec:	add    rsp,0x18
  407af0:	pop    rbx
  407af1:	pop    r12
  407af3:	pop    r13
  407af5:	pop    r14
  407af7:	pop    r15
  407af9:	pop    rbp
  407afa:	jmp    403040 <free@plt>
  407aff:	nop
  407b00:	push   rbp
  407b01:	push   r15
  407b03:	push   r14
  407b05:	push   rbx
  407b06:	push   rax
  407b07:	cmp    QWORD PTR [rip+0x7649],0x0        # 40f158 <__bss_start@@Base+0xff0>
  407b0f:	je     407e86 <__generate_code_for_binary_boolean_expression@@Base+0x13b6>
  407b15:	mov    rbx,QWORD PTR [rip+0x7654]        # 40f170 <__bss_start@@Base+0x1008>
  407b1c:	cmp    BYTE PTR [rip+0x762d],0x0        # 40f150 <__bss_start@@Base+0xfe8>
  407b23:	je     407b8f <__generate_code_for_binary_boolean_expression@@Base+0x10bf>
  407b25:	lea    r14,[rbx+0x4]
  407b29:	cmp    r14,QWORD PTR [rip+0x7638]        # 40f168 <__bss_start@@Base+0x1000>
  407b30:	jbe    407bdb <__generate_code_for_binary_boolean_expression@@Base+0x110b>
  407b36:	add    rbx,0x20003
  407b3d:	and    rbx,0xfffffffffffe0000
  407b44:	mov    rdi,QWORD PTR [rip+0x7615]        # 40f160 <__bss_start@@Base+0xff8>
  407b4b:	mov    rsi,rbx
  407b4e:	call   4031f0 <realloc@plt>
  407b53:	mov    QWORD PTR [rip+0x7606],rax        # 40f160 <__bss_start@@Base+0xff8>
  407b5a:	mov    QWORD PTR [rip+0x7607],rbx        # 40f168 <__bss_start@@Base+0x1000>
  407b61:	mov    rbx,QWORD PTR [rip+0x7608]        # 40f170 <__bss_start@@Base+0x1008>
  407b68:	mov    cl,BYTE PTR [rip+0x75e2]        # 40f150 <__bss_start@@Base+0xfe8>
  407b6e:	lea    r14,[rbx+0x4]
  407b72:	mov    DWORD PTR [rax+rbx*1],0xa1000000
  407b79:	mov    QWORD PTR [rip+0x75f0],r14        # 40f170 <__bss_start@@Base+0x1008>
  407b80:	mov    ebp,0x1
  407b85:	cmp    cl,0x1
  407b88:	je     407bf0 <__generate_code_for_binary_boolean_expression@@Base+0x1120>
  407b8a:	jmp    407d0b <__generate_code_for_binary_boolean_expression@@Base+0x123b>
  407b8f:	mov    rax,QWORD PTR [rip+0x75ca]        # 40f160 <__bss_start@@Base+0xff8>
  407b96:	mov    ecx,DWORD PTR [rax+rbx*1]
  407b99:	lea    r14,[rbx+0x4]
  407b9d:	mov    QWORD PTR [rip+0x75cc],r14        # 40f170 <__bss_start@@Base+0x1008>
  407ba4:	cmp    ecx,0xa1000000
  407baa:	je     407ccc <__generate_code_for_binary_boolean_expression@@Base+0x11fc>
  407bb0:	mov    ebp,0x1
  407bb5:	cmp    ecx,0xffffffff
  407bb8:	je     407cfd <__generate_code_for_binary_boolean_expression@@Base+0x122d>
  407bbe:	mov    rax,QWORD PTR [rip+0x642b]        # 40dff0 <stderr@GLIBC_2.2.5>
  407bc5:	mov    rdi,QWORD PTR [rax]
  407bc8:	mov    rdx,QWORD PTR [rip+0x7579]        # 40f148 <__bss_start@@Base+0xfe0>
  407bcf:	lea    rsi,[rip+0x20df]        # 409cb5 <_IO_stdin_used@@Base+0xcb5>
  407bd6:	jmp    4080e5 <__generate_code_for_binary_boolean_expression@@Base+0x1615>
  407bdb:	mov    rax,QWORD PTR [rip+0x757e]        # 40f160 <__bss_start@@Base+0xff8>
  407be2:	mov    DWORD PTR [rax+rbx*1],0xa1000000
  407be9:	mov    QWORD PTR [rip+0x7580],r14        # 40f170 <__bss_start@@Base+0x1008>
  407bf0:	lea    rcx,[rbx+0x8]
  407bf4:	cmp    rcx,QWORD PTR [rip+0x756d]        # 40f168 <__bss_start@@Base+0x1000>
  407bfb:	jbe    407c53 <__generate_code_for_binary_boolean_expression@@Base+0x1183>
  407bfd:	add    rbx,0x20007
  407c04:	and    rbx,0xfffffffffffe0000
  407c0b:	mov    rdi,rax
  407c0e:	mov    rsi,rbx
  407c11:	call   4031f0 <realloc@plt>
  407c16:	mov    QWORD PTR [rip+0x7543],rax        # 40f160 <__bss_start@@Base+0xff8>
  407c1d:	mov    QWORD PTR [rip+0x7544],rbx        # 40f168 <__bss_start@@Base+0x1000>
  407c24:	mov    r14,QWORD PTR [rip+0x7545]        # 40f170 <__bss_start@@Base+0x1008>
  407c2b:	mov    cl,BYTE PTR [rip+0x751f]        # 40f150 <__bss_start@@Base+0xfe8>
  407c31:	mov    DWORD PTR [rax+r14*1],0x9
  407c39:	lea    rbx,[r14+0x4]
  407c3d:	mov    QWORD PTR [rip+0x752c],rbx        # 40f170 <__bss_start@@Base+0x1008>
  407c44:	mov    ebp,0x1
  407c49:	cmp    cl,0x1
  407c4c:	je     407c66 <__generate_code_for_binary_boolean_expression@@Base+0x1196>
  407c4e:	jmp    407d21 <__generate_code_for_binary_boolean_expression@@Base+0x1251>
  407c53:	mov    DWORD PTR [rax+r14*1],0x9
  407c5b:	lea    rbx,[r14+0x4]
  407c5f:	mov    QWORD PTR [rip+0x750a],rbx        # 40f170 <__bss_start@@Base+0x1008>
  407c66:	lea    rcx,[r14+0x8]
  407c6a:	cmp    rcx,QWORD PTR [rip+0x74f7]        # 40f168 <__bss_start@@Base+0x1000>
  407c71:	jbe    407f0d <__generate_code_for_binary_boolean_expression@@Base+0x143d>
  407c77:	add    r14,0x20007
  407c7e:	and    r14,0xfffffffffffe0000
  407c85:	mov    rdi,rax
  407c88:	mov    rsi,r14
  407c8b:	call   4031f0 <realloc@plt>
  407c90:	mov    QWORD PTR [rip+0x74c9],rax        # 40f160 <__bss_start@@Base+0xff8>
  407c97:	mov    QWORD PTR [rip+0x74ca],r14        # 40f168 <__bss_start@@Base+0x1000>
  407c9e:	mov    rbx,QWORD PTR [rip+0x74cb]        # 40f170 <__bss_start@@Base+0x1008>
  407ca5:	mov    cl,BYTE PTR [rip+0x74a5]        # 40f150 <__bss_start@@Base+0xfe8>
  407cab:	mov    DWORD PTR [rax+rbx*1],0x0
  407cb2:	lea    r14,[rbx+0x4]
  407cb6:	mov    QWORD PTR [rip+0x74b3],r14        # 40f170 <__bss_start@@Base+0x1008>
  407cbd:	mov    ebp,0x1
  407cc2:	cmp    cl,0x1
  407cc5:	jne    407d36 <__generate_code_for_binary_boolean_expression@@Base+0x1266>
  407cc7:	jmp    407f1f <__generate_code_for_binary_boolean_expression@@Base+0x144f>
  407ccc:	mov    ecx,DWORD PTR [rax+rbx*1+0x4]
  407cd0:	lea    rdx,[rbx+0x8]
  407cd4:	mov    QWORD PTR [rip+0x7495],rdx        # 40f170 <__bss_start@@Base+0x1008>
  407cdb:	cmp    ecx,0x9
  407cde:	jne    4080cd <__generate_code_for_binary_boolean_expression@@Base+0x15fd>
  407ce4:	lea    rcx,[rbx+0x14]
  407ce8:	movzx  ebp,BYTE PTR [rip+0x7489]        # 40f178 <__bss_start@@Base+0x1010>
  407cef:	xor    ebp,0x1
  407cf2:	add    ebp,DWORD PTR [rbx+rax*1+0x10]
  407cf6:	mov    QWORD PTR [rip+0x7473],rcx        # 40f170 <__bss_start@@Base+0x1008>
  407cfd:	mov    DWORD PTR [rax+rbx*1],0xa1000000
  407d04:	mov    QWORD PTR [rip+0x7465],r14        # 40f170 <__bss_start@@Base+0x1008>
  407d0b:	mov    DWORD PTR [rax+r14*1],0x9
  407d13:	add    r14,0x4
  407d17:	mov    QWORD PTR [rip+0x7452],r14        # 40f170 <__bss_start@@Base+0x1008>
  407d1e:	mov    rbx,r14
  407d21:	mov    DWORD PTR [rax+rbx*1],0x0
  407d28:	add    rbx,0x4
  407d2c:	mov    QWORD PTR [rip+0x743d],rbx        # 40f170 <__bss_start@@Base+0x1008>
  407d33:	mov    r14,rbx
  407d36:	mov    DWORD PTR [rax+r14*1],0x0
  407d3e:	add    r14,0x4
  407d42:	mov    QWORD PTR [rip+0x7427],r14        # 40f170 <__bss_start@@Base+0x1008>
  407d49:	mov    rbx,r14
  407d4c:	mov    DWORD PTR [rax+rbx*1],ebp
  407d4f:	lea    r14,[rbx+0x4]
  407d53:	mov    QWORD PTR [rip+0x7416],r14        # 40f170 <__bss_start@@Base+0x1008>
  407d5a:	cmp    BYTE PTR [rip+0x73ef],0x0        # 40f150 <__bss_start@@Base+0xfe8>
  407d61:	je     407dc7 <__generate_code_for_binary_boolean_expression@@Base+0x12f7>
  407d63:	lea    r15,[rbx+0x8]
  407d67:	cmp    r15,QWORD PTR [rip+0x73fa]        # 40f168 <__bss_start@@Base+0x1000>
  407d6e:	jbe    407e91 <__generate_code_for_binary_boolean_expression@@Base+0x13c1>
  407d74:	add    rbx,0x20007
  407d7b:	and    rbx,0xfffffffffffe0000
  407d82:	mov    rdi,QWORD PTR [rip+0x73d7]        # 40f160 <__bss_start@@Base+0xff8>
  407d89:	mov    rsi,rbx
  407d8c:	call   4031f0 <realloc@plt>
  407d91:	mov    QWORD PTR [rip+0x73c8],rax        # 40f160 <__bss_start@@Base+0xff8>
  407d98:	mov    QWORD PTR [rip+0x73c9],rbx        # 40f168 <__bss_start@@Base+0x1000>
  407d9f:	mov    r14,QWORD PTR [rip+0x73ca]        # 40f170 <__bss_start@@Base+0x1008>
  407da6:	lea    r15,[r14+0x4]
  407daa:	cmp    BYTE PTR [rip+0x739f],0x0        # 40f150 <__bss_start@@Base+0xfe8>
  407db1:	mov    DWORD PTR [rax+r14*1],0x0
  407db9:	mov    QWORD PTR [rip+0x73b0],r15        # 40f170 <__bss_start@@Base+0x1008>
  407dc0:	je     407de4 <__generate_code_for_binary_boolean_expression@@Base+0x1314>
  407dc2:	jmp    407ea7 <__generate_code_for_binary_boolean_expression@@Base+0x13d7>
  407dc7:	mov    rax,QWORD PTR [rip+0x7392]        # 40f160 <__bss_start@@Base+0xff8>
  407dce:	mov    DWORD PTR [rax+rbx*1+0x4],0x0
  407dd6:	add    rbx,0x8
  407dda:	mov    QWORD PTR [rip+0x738f],rbx        # 40f170 <__bss_start@@Base+0x1008>
  407de1:	mov    r15,rbx
  407de4:	mov    DWORD PTR [rax+r15*1],0x0
  407dec:	add    r15,0x4
  407df0:	mov    QWORD PTR [rip+0x7379],r15        # 40f170 <__bss_start@@Base+0x1008>
  407df7:	mov    r14,r15
  407dfa:	mov    DWORD PTR [rax+r14*1],0x0
  407e02:	add    r14,0x4
  407e06:	mov    QWORD PTR [rip+0x7363],r14        # 40f170 <__bss_start@@Base+0x1008>
  407e0d:	mov    rbx,r14
  407e10:	mov    DWORD PTR [rax+rbx*1],0x0
  407e17:	add    rbx,0x4
  407e1b:	mov    QWORD PTR [rip+0x734e],rbx        # 40f170 <__bss_start@@Base+0x1008>
  407e22:	mov    r14,rbx
  407e25:	mov    DWORD PTR [rax+r14*1],0x0
  407e2d:	add    r14,0x4
  407e31:	mov    QWORD PTR [rip+0x7338],r14        # 40f170 <__bss_start@@Base+0x1008>
  407e38:	mov    rbx,r14
  407e3b:	mov    DWORD PTR [rax+rbx*1],0x0
  407e42:	add    rbx,0x4
  407e46:	mov    QWORD PTR [rip+0x7323],rbx        # 40f170 <__bss_start@@Base+0x1008>
  407e4d:	mov    r14,rbx
  407e50:	mov    DWORD PTR [rax+r14*1],0xa3000000
  407e58:	add    r14,0x4
  407e5c:	mov    QWORD PTR [rip+0x730d],r14        # 40f170 <__bss_start@@Base+0x1008>
  407e63:	mov    rcx,r14
  407e66:	mov    rax,QWORD PTR [rip+0x72f3]        # 40f160 <__bss_start@@Base+0xff8>
  407e6d:	mov    DWORD PTR [rax+rcx*1],0x0
  407e74:	add    rcx,0x4
  407e78:	mov    QWORD PTR [rip+0x72f1],rcx        # 40f170 <__bss_start@@Base+0x1008>
  407e7f:	mov    BYTE PTR [rip+0x72f2],0x1        # 40f178 <__bss_start@@Base+0x1010>
  407e86:	add    rsp,0x8
  407e8a:	pop    rbx
  407e8b:	pop    r14
  407e8d:	pop    r15
  407e8f:	pop    rbp
  407e90:	ret    
  407e91:	mov    rax,QWORD PTR [rip+0x72c8]        # 40f160 <__bss_start@@Base+0xff8>
  407e98:	mov    DWORD PTR [rax+rbx*1+0x4],0x0
  407ea0:	mov    QWORD PTR [rip+0x72c9],r15        # 40f170 <__bss_start@@Base+0x1008>
  407ea7:	lea    rcx,[r14+0x8]
  407eab:	cmp    rcx,QWORD PTR [rip+0x72b6]        # 40f168 <__bss_start@@Base+0x1000>
  407eb2:	jbe    407f8a <__generate_code_for_binary_boolean_expression@@Base+0x14ba>
  407eb8:	add    r14,0x20007
  407ebf:	and    r14,0xfffffffffffe0000
  407ec6:	mov    rdi,rax
  407ec9:	mov    rsi,r14
  407ecc:	call   4031f0 <realloc@plt>
  407ed1:	mov    QWORD PTR [rip+0x7288],rax        # 40f160 <__bss_start@@Base+0xff8>
  407ed8:	mov    QWORD PTR [rip+0x7289],r14        # 40f168 <__bss_start@@Base+0x1000>
  407edf:	mov    r15,QWORD PTR [rip+0x728a]        # 40f170 <__bss_start@@Base+0x1008>
  407ee6:	mov    cl,BYTE PTR [rip+0x7264]        # 40f150 <__bss_start@@Base+0xfe8>
  407eec:	mov    DWORD PTR [rax+r15*1],0x0
  407ef4:	lea    r14,[r15+0x4]
  407ef8:	mov    QWORD PTR [rip+0x7271],r14        # 40f170 <__bss_start@@Base+0x1008>
  407eff:	cmp    cl,0x1
  407f02:	jne    407dfa <__generate_code_for_binary_boolean_expression@@Base+0x132a>
  407f08:	jmp    407f9d <__generate_code_for_binary_boolean_expression@@Base+0x14cd>
  407f0d:	mov    DWORD PTR [rax+rbx*1],0x0
  407f14:	lea    r14,[rbx+0x4]
  407f18:	mov    QWORD PTR [rip+0x7251],r14        # 40f170 <__bss_start@@Base+0x1008>
  407f1f:	lea    rcx,[rbx+0x8]
  407f23:	cmp    rcx,QWORD PTR [rip+0x723e]        # 40f168 <__bss_start@@Base+0x1000>
  407f2a:	jbe    408000 <__generate_code_for_binary_boolean_expression@@Base+0x1530>
  407f30:	add    rbx,0x20007
  407f37:	and    rbx,0xfffffffffffe0000
  407f3e:	mov    rdi,rax
  407f41:	mov    rsi,rbx
  407f44:	call   4031f0 <realloc@plt>
  407f49:	mov    QWORD PTR [rip+0x7210],rax        # 40f160 <__bss_start@@Base+0xff8>
  407f50:	mov    QWORD PTR [rip+0x7211],rbx        # 40f168 <__bss_start@@Base+0x1000>
  407f57:	mov    r14,QWORD PTR [rip+0x7212]        # 40f170 <__bss_start@@Base+0x1008>
  407f5e:	mov    cl,BYTE PTR [rip+0x71ec]        # 40f150 <__bss_start@@Base+0xfe8>
  407f64:	mov    DWORD PTR [rax+r14*1],0x0
  407f6c:	lea    rbx,[r14+0x4]
  407f70:	mov    QWORD PTR [rip+0x71f9],rbx        # 40f170 <__bss_start@@Base+0x1008>
  407f77:	mov    ebp,0x1
  407f7c:	cmp    cl,0x1
  407f7f:	jne    407d4c <__generate_code_for_binary_boolean_expression@@Base+0x127c>
  407f85:	jmp    408013 <__generate_code_for_binary_boolean_expression@@Base+0x1543>
  407f8a:	mov    DWORD PTR [rax+r15*1],0x0
  407f92:	lea    r14,[r15+0x4]
  407f96:	mov    QWORD PTR [rip+0x71d3],r14        # 40f170 <__bss_start@@Base+0x1008>
  407f9d:	lea    rcx,[r15+0x8]
  407fa1:	cmp    rcx,QWORD PTR [rip+0x71c0]        # 40f168 <__bss_start@@Base+0x1000>
  407fa8:	jbe    40805c <__generate_code_for_binary_boolean_expression@@Base+0x158c>
  407fae:	add    r15,0x20007
  407fb5:	and    r15,0xfffffffffffe0000
  407fbc:	mov    rdi,rax
  407fbf:	mov    rsi,r15
  407fc2:	call   4031f0 <realloc@plt>
  407fc7:	mov    QWORD PTR [rip+0x7192],rax        # 40f160 <__bss_start@@Base+0xff8>
  407fce:	mov    QWORD PTR [rip+0x7193],r15        # 40f168 <__bss_start@@Base+0x1000>
  407fd5:	mov    r14,QWORD PTR [rip+0x7194]        # 40f170 <__bss_start@@Base+0x1008>
  407fdc:	mov    cl,BYTE PTR [rip+0x716e]        # 40f150 <__bss_start@@Base+0xfe8>
  407fe2:	mov    DWORD PTR [rax+r14*1],0x0
  407fea:	lea    rbx,[r14+0x4]
  407fee:	mov    QWORD PTR [rip+0x717b],rbx        # 40f170 <__bss_start@@Base+0x1008>
  407ff5:	cmp    cl,0x1
  407ff8:	jne    407e10 <__generate_code_for_binary_boolean_expression@@Base+0x1340>
  407ffe:	jmp    40806f <__generate_code_for_binary_boolean_expression@@Base+0x159f>
  408000:	mov    DWORD PTR [rax+r14*1],0x0
  408008:	lea    rbx,[r14+0x4]
  40800c:	mov    QWORD PTR [rip+0x715d],rbx        # 40f170 <__bss_start@@Base+0x1008>
  408013:	lea    rcx,[r14+0x8]
  408017:	mov    ebp,0x1
  40801c:	cmp    rcx,QWORD PTR [rip+0x7145]        # 40f168 <__bss_start@@Base+0x1000>
  408023:	jbe    407d4c <__generate_code_for_binary_boolean_expression@@Base+0x127c>
  408029:	add    r14,0x20007
  408030:	and    r14,0xfffffffffffe0000
  408037:	mov    rdi,rax
  40803a:	mov    rsi,r14
  40803d:	call   4031f0 <realloc@plt>
  408042:	mov    QWORD PTR [rip+0x7117],rax        # 40f160 <__bss_start@@Base+0xff8>
  408049:	mov    QWORD PTR [rip+0x7118],r14        # 40f168 <__bss_start@@Base+0x1000>
  408050:	mov    rbx,QWORD PTR [rip+0x7119]        # 40f170 <__bss_start@@Base+0x1008>
  408057:	jmp    407d4c <__generate_code_for_binary_boolean_expression@@Base+0x127c>
  40805c:	mov    DWORD PTR [rax+r14*1],0x0
  408064:	lea    rbx,[r14+0x4]
  408068:	mov    QWORD PTR [rip+0x7101],rbx        # 40f170 <__bss_start@@Base+0x1008>
  40806f:	lea    rcx,[r14+0x8]
  408073:	cmp    rcx,QWORD PTR [rip+0x70ee]        # 40f168 <__bss_start@@Base+0x1000>
  40807a:	jbe    4080f6 <__generate_code_for_binary_boolean_expression@@Base+0x1626>
  40807c:	add    r14,0x20007
  408083:	and    r14,0xfffffffffffe0000
  40808a:	mov    rdi,rax
  40808d:	mov    rsi,r14
  408090:	call   4031f0 <realloc@plt>
  408095:	mov    QWORD PTR [rip+0x70c4],rax        # 40f160 <__bss_start@@Base+0xff8>
  40809c:	mov    QWORD PTR [rip+0x70c5],r14        # 40f168 <__bss_start@@Base+0x1000>
  4080a3:	mov    rbx,QWORD PTR [rip+0x70c6]        # 40f170 <__bss_start@@Base+0x1008>
  4080aa:	mov    cl,BYTE PTR [rip+0x70a0]        # 40f150 <__bss_start@@Base+0xfe8>
  4080b0:	mov    DWORD PTR [rax+rbx*1],0x0
  4080b7:	lea    r14,[rbx+0x4]
  4080bb:	mov    QWORD PTR [rip+0x70ae],r14        # 40f170 <__bss_start@@Base+0x1008>
  4080c2:	cmp    cl,0x1
  4080c5:	jne    407e25 <__generate_code_for_binary_boolean_expression@@Base+0x1355>
  4080cb:	jmp    408108 <__generate_code_for_binary_boolean_expression@@Base+0x1638>
  4080cd:	mov    rax,QWORD PTR [rip+0x5f1c]        # 40dff0 <stderr@GLIBC_2.2.5>
  4080d4:	mov    rdi,QWORD PTR [rax]
  4080d7:	mov    rdx,QWORD PTR [rip+0x706a]        # 40f148 <__bss_start@@Base+0xfe0>
  4080de:	lea    rsi,[rip+0x1c1d]        # 409d02 <_IO_stdin_used@@Base+0xd02>
  4080e5:	xor    eax,eax
  4080e7:	add    rsp,0x8
  4080eb:	pop    rbx
  4080ec:	pop    r14
  4080ee:	pop    r15
  4080f0:	pop    rbp
  4080f1:	jmp    403160 <fprintf@plt>
  4080f6:	mov    DWORD PTR [rax+rbx*1],0x0
  4080fd:	lea    r14,[rbx+0x4]
  408101:	mov    QWORD PTR [rip+0x7068],r14        # 40f170 <__bss_start@@Base+0x1008>
  408108:	lea    rcx,[rbx+0x8]
  40810c:	cmp    rcx,QWORD PTR [rip+0x7055]        # 40f168 <__bss_start@@Base+0x1000>
  408113:	jbe    408167 <__generate_code_for_binary_boolean_expression@@Base+0x1697>
  408115:	add    rbx,0x20007
  40811c:	and    rbx,0xfffffffffffe0000
  408123:	mov    rdi,rax
  408126:	mov    rsi,rbx
  408129:	call   4031f0 <realloc@plt>
  40812e:	mov    QWORD PTR [rip+0x702b],rax        # 40f160 <__bss_start@@Base+0xff8>
  408135:	mov    QWORD PTR [rip+0x702c],rbx        # 40f168 <__bss_start@@Base+0x1000>
  40813c:	mov    r14,QWORD PTR [rip+0x702d]        # 40f170 <__bss_start@@Base+0x1008>
  408143:	mov    cl,BYTE PTR [rip+0x7007]        # 40f150 <__bss_start@@Base+0xfe8>
  408149:	mov    DWORD PTR [rax+r14*1],0x0
  408151:	lea    rbx,[r14+0x4]
  408155:	mov    QWORD PTR [rip+0x7014],rbx        # 40f170 <__bss_start@@Base+0x1008>
  40815c:	cmp    cl,0x1
  40815f:	jne    407e3b <__generate_code_for_binary_boolean_expression@@Base+0x136b>
  408165:	jmp    40817a <__generate_code_for_binary_boolean_expression@@Base+0x16aa>
  408167:	mov    DWORD PTR [rax+r14*1],0x0
  40816f:	lea    rbx,[r14+0x4]
  408173:	mov    QWORD PTR [rip+0x6ff6],rbx        # 40f170 <__bss_start@@Base+0x1008>
  40817a:	lea    rcx,[r14+0x8]
  40817e:	cmp    rcx,QWORD PTR [rip+0x6fe3]        # 40f168 <__bss_start@@Base+0x1000>
  408185:	jbe    4081d6 <__generate_code_for_binary_boolean_expression@@Base+0x1706>
  408187:	add    r14,0x20007
  40818e:	and    r14,0xfffffffffffe0000
  408195:	mov    rdi,rax
  408198:	mov    rsi,r14
  40819b:	call   4031f0 <realloc@plt>
  4081a0:	mov    QWORD PTR [rip+0x6fb9],rax        # 40f160 <__bss_start@@Base+0xff8>
  4081a7:	mov    QWORD PTR [rip+0x6fba],r14        # 40f168 <__bss_start@@Base+0x1000>
  4081ae:	mov    rbx,QWORD PTR [rip+0x6fbb]        # 40f170 <__bss_start@@Base+0x1008>
  4081b5:	lea    r14,[rbx+0x4]
  4081b9:	cmp    BYTE PTR [rip+0x6f90],0x0        # 40f150 <__bss_start@@Base+0xfe8>
  4081c0:	mov    DWORD PTR [rax+rbx*1],0x0
  4081c7:	mov    QWORD PTR [rip+0x6fa2],r14        # 40f170 <__bss_start@@Base+0x1008>
  4081ce:	je     407e50 <__generate_code_for_binary_boolean_expression@@Base+0x1380>
  4081d4:	jmp    4081e8 <__generate_code_for_binary_boolean_expression@@Base+0x1718>
  4081d6:	mov    DWORD PTR [rax+rbx*1],0x0
  4081dd:	lea    r14,[rbx+0x4]
  4081e1:	mov    QWORD PTR [rip+0x6f88],r14        # 40f170 <__bss_start@@Base+0x1008>
  4081e8:	lea    rcx,[rbx+0x8]
  4081ec:	cmp    rcx,QWORD PTR [rip+0x6f75]        # 40f168 <__bss_start@@Base+0x1000>
  4081f3:	jbe    408247 <__generate_code_for_binary_boolean_expression@@Base+0x1777>
  4081f5:	add    rbx,0x20007
  4081fc:	and    rbx,0xfffffffffffe0000
  408203:	mov    rdi,rax
  408206:	mov    rsi,rbx
  408209:	call   4031f0 <realloc@plt>
  40820e:	mov    QWORD PTR [rip+0x6f4b],rax        # 40f160 <__bss_start@@Base+0xff8>
  408215:	mov    QWORD PTR [rip+0x6f4c],rbx        # 40f168 <__bss_start@@Base+0x1000>
  40821c:	mov    dl,BYTE PTR [rip+0x6f2e]        # 40f150 <__bss_start@@Base+0xfe8>
  408222:	mov    r14,QWORD PTR [rip+0x6f47]        # 40f170 <__bss_start@@Base+0x1008>
  408229:	mov    DWORD PTR [rax+r14*1],0xa3000000
  408231:	lea    rcx,[r14+0x4]
  408235:	mov    QWORD PTR [rip+0x6f34],rcx        # 40f170 <__bss_start@@Base+0x1008>
  40823c:	cmp    dl,0x1
  40823f:	jne    407e66 <__generate_code_for_binary_boolean_expression@@Base+0x1396>
  408245:	jmp    40825a <__generate_code_for_binary_boolean_expression@@Base+0x178a>
  408247:	mov    DWORD PTR [rax+r14*1],0xa3000000
  40824f:	lea    rcx,[r14+0x4]
  408253:	mov    QWORD PTR [rip+0x6f16],rcx        # 40f170 <__bss_start@@Base+0x1008>
  40825a:	lea    rdx,[r14+0x8]
  40825e:	cmp    rdx,QWORD PTR [rip+0x6f03]        # 40f168 <__bss_start@@Base+0x1000>
  408265:	jbe    407e66 <__generate_code_for_binary_boolean_expression@@Base+0x1396>
  40826b:	add    r14,0x20007
  408272:	and    r14,0xfffffffffffe0000
  408279:	mov    rdi,rax
  40827c:	mov    rsi,r14
  40827f:	call   4031f0 <realloc@plt>
  408284:	mov    QWORD PTR [rip+0x6ed5],rax        # 40f160 <__bss_start@@Base+0xff8>
  40828b:	mov    QWORD PTR [rip+0x6ed6],r14        # 40f168 <__bss_start@@Base+0x1000>
  408292:	mov    rcx,QWORD PTR [rip+0x6ed7]        # 40f170 <__bss_start@@Base+0x1008>
  408299:	jmp    407e66 <__generate_code_for_binary_boolean_expression@@Base+0x1396>
  40829e:	xchg   ax,ax
  4082a0:	push   r14
  4082a2:	push   rbx
  4082a3:	push   rax
  4082a4:	cmp    QWORD PTR [rip+0x6eac],0x0        # 40f158 <__bss_start@@Base+0xff0>
  4082ac:	je     408407 <__generate_code_for_binary_boolean_expression@@Base+0x1937>
  4082b2:	cmp    BYTE PTR [rip+0x6e97],0x0        # 40f150 <__bss_start@@Base+0xfe8>
  4082b9:	je     40832a <__generate_code_for_binary_boolean_expression@@Base+0x185a>
  4082bb:	mov    rbx,QWORD PTR [rip+0x6eae]        # 40f170 <__bss_start@@Base+0x1008>
  4082c2:	lea    rax,[rbx+0x8]
  4082c6:	cmp    rax,QWORD PTR [rip+0x6e9b]        # 40f168 <__bss_start@@Base+0x1000>
  4082cd:	jbe    408390 <__generate_code_for_binary_boolean_expression@@Base+0x18c0>
  4082d3:	add    rbx,0x20007
  4082da:	and    rbx,0xfffffffffffe0000
  4082e1:	mov    rdi,QWORD PTR [rip+0x6e78]        # 40f160 <__bss_start@@Base+0xff8>
  4082e8:	mov    rsi,rbx
  4082eb:	call   4031f0 <realloc@plt>
  4082f0:	mov    rdi,rax
  4082f3:	mov    QWORD PTR [rip+0x6e66],rax        # 40f160 <__bss_start@@Base+0xff8>
  4082fa:	mov    QWORD PTR [rip+0x6e67],rbx        # 40f168 <__bss_start@@Base+0x1000>
  408301:	mov    al,BYTE PTR [rip+0x6e49]        # 40f150 <__bss_start@@Base+0xfe8>
  408307:	mov    rsi,QWORD PTR [rip+0x6e62]        # 40f170 <__bss_start@@Base+0x1008>
  40830e:	mov    QWORD PTR [rdi+rsi*1],0x0
  408316:	add    rsi,0x8
  40831a:	mov    QWORD PTR [rip+0x6e4f],rsi        # 40f170 <__bss_start@@Base+0x1008>
  408321:	cmp    al,0x1
  408323:	jne    40834b <__generate_code_for_binary_boolean_expression@@Base+0x187b>
  408325:	jmp    4083b1 <__generate_code_for_binary_boolean_expression@@Base+0x18e1>
  40832a:	mov    rdi,QWORD PTR [rip+0x6e2f]        # 40f160 <__bss_start@@Base+0xff8>
  408331:	mov    rax,QWORD PTR [rip+0x6e38]        # 40f170 <__bss_start@@Base+0x1008>
  408338:	mov    QWORD PTR [rdi+rax*1],0x0
  408340:	add    rax,0x8
  408344:	mov    QWORD PTR [rip+0x6e25],rax        # 40f170 <__bss_start@@Base+0x1008>
  40834b:	mov    rsi,QWORD PTR [rip+0x6e3e]        # 40f190 <__bss_start@@Base+0x1028>
  408352:	mov    edx,0x4
  408357:	call   4030d0 <msync@plt>
  40835c:	cmp    eax,0xffffffff
  40835f:	je     40841a <__generate_code_for_binary_boolean_expression@@Base+0x194a>
  408365:	mov    rdi,QWORD PTR [rip+0x6df4]        # 40f160 <__bss_start@@Base+0xff8>
  40836c:	mov    rsi,QWORD PTR [rip+0x6e1d]        # 40f190 <__bss_start@@Base+0x1028>
  408373:	call   403210 <munmap@plt>
  408378:	mov    QWORD PTR [rip+0x6ddd],0x0        # 40f160 <__bss_start@@Base+0xff8>
  408383:	mov    QWORD PTR [rip+0x6e02],0x0        # 40f190 <__bss_start@@Base+0x1028>
  40838e:	jmp    4083ce <__generate_code_for_binary_boolean_expression@@Base+0x18fe>
  408390:	mov    rdi,QWORD PTR [rip+0x6dc9]        # 40f160 <__bss_start@@Base+0xff8>
  408397:	mov    rsi,QWORD PTR [rip+0x6dd2]        # 40f170 <__bss_start@@Base+0x1008>
  40839e:	mov    QWORD PTR [rdi+rsi*1],0x0
  4083a6:	add    rsi,0x8
  4083aa:	mov    QWORD PTR [rip+0x6dbf],rsi        # 40f170 <__bss_start@@Base+0x1008>
  4083b1:	mov    rcx,QWORD PTR [rip+0x6da0]        # 40f158 <__bss_start@@Base+0xff0>
  4083b8:	mov    edx,0x1
  4083bd:	call   403270 <fwrite@plt>
  4083c2:	mov    rdi,QWORD PTR [rip+0x6d97]        # 40f160 <__bss_start@@Base+0xff8>
  4083c9:	call   403040 <free@plt>
  4083ce:	mov    rdi,QWORD PTR [rip+0x6d83]        # 40f158 <__bss_start@@Base+0xff0>
  4083d5:	call   4031d0 <fflush@plt>
  4083da:	mov    edi,DWORD PTR [rip+0x5d80]        # 40e160 <__data_start@@Base+0x10>
  4083e0:	call   408890 <__gcov_flush@@Base+0x2c0>
  4083e5:	mov    rdi,QWORD PTR [rip+0x6d6c]        # 40f158 <__bss_start@@Base+0xff0>
  4083ec:	call   4030c0 <fclose@plt>
  4083f1:	mov    QWORD PTR [rip+0x6d5c],0x0        # 40f158 <__bss_start@@Base+0xff0>
  4083fc:	mov    QWORD PTR [rip+0x6d59],0x0        # 40f160 <__bss_start@@Base+0xff8>
  408407:	mov    rdi,QWORD PTR [rip+0x6d3a]        # 40f148 <__bss_start@@Base+0xfe0>
  40840e:	add    rsp,0x8
  408412:	pop    rbx
  408413:	pop    r14
  408415:	jmp    403040 <free@plt>
  40841a:	call   403050 <__errno_location@plt>
  40841f:	mov    edi,DWORD PTR [rax]
  408421:	mov    rax,QWORD PTR [rip+0x5bc8]        # 40dff0 <stderr@GLIBC_2.2.5>
  408428:	mov    rbx,QWORD PTR [rax]
  40842b:	mov    r14,QWORD PTR [rip+0x6d16]        # 40f148 <__bss_start@@Base+0xfe0>
  408432:	call   403290 <strerror@plt>
  408437:	lea    rsi,[rip+0x1932]        # 409d70 <_IO_stdin_used@@Base+0xd70>
  40843e:	mov    rdi,rbx
  408441:	mov    rdx,r14
  408444:	mov    rcx,rax
  408447:	xor    eax,eax
  408449:	call   403160 <fprintf@plt>
  40844e:	jmp    408365 <__generate_code_for_binary_boolean_expression@@Base+0x1895>
  408453:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40845d:	nop    DWORD PTR [rax]
  408460:	push   rbx
  408461:	mov    rbx,rdi
  408464:	mov    edi,0x18
  408469:	call   4031c0 <malloc@plt>
  40846e:	mov    QWORD PTR [rax+0x8],rbx
  408472:	mov    QWORD PTR [rax+0x10],0x0
  40847a:	lea    rcx,[rip+0x6cff]        # 40f180 <__bss_start@@Base+0x1018>
  408481:	mov    QWORD PTR [rax],rcx
  408484:	lea    rcx,[rip+0x6d1d]        # 40f1a8 <writeout_fn_list@@Base>
  40848b:	lea    rdx,[rcx+0x8]
  40848f:	mov    rsi,QWORD PTR [rcx+0x8]
  408493:	add    rsi,0x10
  408497:	xor    edi,edi
  408499:	cmp    QWORD PTR [rcx],0x0
  40849d:	setne  dil
  4084a1:	cmove  rsi,rdx
  4084a5:	mov    QWORD PTR [rsi],rax
  4084a8:	mov    QWORD PTR [rcx+rdi*8],rax
  4084ac:	pop    rbx
  4084ad:	ret    
  4084ae:	xchg   ax,ax
  4084b0:	push   r14
  4084b2:	push   rbx
  4084b3:	push   rax
  4084b4:	lea    rax,[rip+0x6ced]        # 40f1a8 <writeout_fn_list@@Base>
  4084bb:	mov    rbx,QWORD PTR [rax]
  4084be:	test   rbx,rbx
  4084c1:	je     4084e5 <__generate_code_for_binary_boolean_expression@@Base+0x1a15>
  4084c3:	lea    r14,[rip+0x6cb6]        # 40f180 <__bss_start@@Base+0x1018>
  4084ca:	cmp    QWORD PTR [rbx],r14
  4084cd:	je     4084de <__generate_code_for_binary_boolean_expression@@Base+0x1a0e>
  4084cf:	nop
  4084d0:	mov    rbx,QWORD PTR [rbx+0x10]
  4084d4:	test   rbx,rbx
  4084d7:	je     4084e5 <__generate_code_for_binary_boolean_expression@@Base+0x1a15>
  4084d9:	cmp    QWORD PTR [rbx],r14
  4084dc:	jne    4084d0 <__generate_code_for_binary_boolean_expression@@Base+0x1a00>
  4084de:	xor    eax,eax
  4084e0:	call   QWORD PTR [rbx+0x8]
  4084e3:	jmp    4084d0 <__generate_code_for_binary_boolean_expression@@Base+0x1a00>
  4084e5:	add    rsp,0x8
  4084e9:	pop    rbx
  4084ea:	pop    r14
  4084ec:	ret    
  4084ed:	nop    DWORD PTR [rax]
  4084f0:	push   r15
  4084f2:	push   r14
  4084f4:	push   r12
  4084f6:	push   rbx
  4084f7:	push   rax
  4084f8:	lea    r14,[rip+0x6ca9]        # 40f1a8 <writeout_fn_list@@Base>
  4084ff:	mov    rdi,QWORD PTR [r14]
  408502:	test   rdi,rdi
  408505:	je     40856b <__generate_code_for_binary_boolean_expression@@Base+0x1a9b>
  408507:	xor    r12d,r12d
  40850a:	lea    r15,[rip+0x6c6f]        # 40f180 <__bss_start@@Base+0x1018>
  408511:	jmp    40852d <__generate_code_for_binary_boolean_expression@@Base+0x1a5d>
  408513:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40851d:	nop    DWORD PTR [rax]
  408520:	call   403040 <free@plt>
  408525:	mov    rdi,rbx
  408528:	test   rbx,rbx
  40852b:	je     40856b <__generate_code_for_binary_boolean_expression@@Base+0x1a9b>
  40852d:	mov    rbx,QWORD PTR [rdi+0x10]
  408531:	cmp    QWORD PTR [rdi],r15
  408534:	je     408540 <__generate_code_for_binary_boolean_expression@@Base+0x1a70>
  408536:	mov    r12,rdi
  408539:	jmp    408525 <__generate_code_for_binary_boolean_expression@@Base+0x1a55>
  40853b:	nop    DWORD PTR [rax+rax*1+0x0]
  408540:	cmp    rdi,QWORD PTR [r14]
  408543:	je     408552 <__generate_code_for_binary_boolean_expression@@Base+0x1a82>
  408545:	cmp    rdi,QWORD PTR [r14+0x8]
  408549:	je     40855b <__generate_code_for_binary_boolean_expression@@Base+0x1a8b>
  40854b:	test   r12,r12
  40854e:	jne    408564 <__generate_code_for_binary_boolean_expression@@Base+0x1a94>
  408550:	jmp    408520 <__generate_code_for_binary_boolean_expression@@Base+0x1a50>
  408552:	mov    QWORD PTR [r14],rbx
  408555:	cmp    rdi,QWORD PTR [r14+0x8]
  408559:	jne    40854b <__generate_code_for_binary_boolean_expression@@Base+0x1a7b>
  40855b:	mov    QWORD PTR [r14+0x8],r12
  40855f:	test   r12,r12
  408562:	je     408520 <__generate_code_for_binary_boolean_expression@@Base+0x1a50>
  408564:	mov    QWORD PTR [r12+0x10],rbx
  408569:	jmp    408520 <__generate_code_for_binary_boolean_expression@@Base+0x1a50>
  40856b:	add    rsp,0x8
  40856f:	pop    rbx
  408570:	pop    r12
  408572:	pop    r14
  408574:	pop    r15
  408576:	ret    
  408577:	nop    WORD PTR [rax+rax*1+0x0]
  408580:	push   rbx
  408581:	mov    rbx,rdi
  408584:	mov    edi,0x18
  408589:	call   4031c0 <malloc@plt>
  40858e:	mov    QWORD PTR [rax+0x8],rbx
  408592:	mov    QWORD PTR [rax+0x10],0x0
  40859a:	lea    rcx,[rip+0x6bdf]        # 40f180 <__bss_start@@Base+0x1018>
  4085a1:	mov    QWORD PTR [rax],rcx
  4085a4:	lea    rcx,[rip+0x6bed]        # 40f198 <flush_fn_list@@Base>
  4085ab:	lea    rdx,[rcx+0x8]
  4085af:	mov    rsi,QWORD PTR [rcx+0x8]
  4085b3:	add    rsi,0x10
  4085b7:	xor    edi,edi
  4085b9:	cmp    QWORD PTR [rcx],0x0
  4085bd:	setne  dil
  4085c1:	cmove  rsi,rdx
  4085c5:	mov    QWORD PTR [rsi],rax
  4085c8:	mov    QWORD PTR [rcx+rdi*8],rax
  4085cc:	pop    rbx
  4085cd:	ret    
  4085ce:	xchg   ax,ax

00000000004085d0 <__gcov_flush@@Base>:
  4085d0:	push   rbx
  4085d1:	lea    rax,[rip+0x6bc0]        # 40f198 <flush_fn_list@@Base>
  4085d8:	mov    rbx,QWORD PTR [rax]
  4085db:	test   rbx,rbx
  4085de:	je     4085ee <__gcov_flush@@Base+0x1e>
  4085e0:	xor    eax,eax
  4085e2:	call   QWORD PTR [rbx+0x8]
  4085e5:	mov    rbx,QWORD PTR [rbx+0x10]
  4085e9:	test   rbx,rbx
  4085ec:	jne    4085e0 <__gcov_flush@@Base+0x10>
  4085ee:	pop    rbx
  4085ef:	ret    
  4085f0:	push   r15
  4085f2:	push   r14
  4085f4:	push   r12
  4085f6:	push   rbx
  4085f7:	push   rax
  4085f8:	lea    r14,[rip+0x6b99]        # 40f198 <flush_fn_list@@Base>
  4085ff:	mov    rdi,QWORD PTR [r14]
  408602:	test   rdi,rdi
  408605:	je     40866b <__gcov_flush@@Base+0x9b>
  408607:	xor    r12d,r12d
  40860a:	lea    r15,[rip+0x6b6f]        # 40f180 <__bss_start@@Base+0x1018>
  408611:	jmp    40862d <__gcov_flush@@Base+0x5d>
  408613:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40861d:	nop    DWORD PTR [rax]
  408620:	call   403040 <free@plt>
  408625:	mov    rdi,rbx
  408628:	test   rbx,rbx
  40862b:	je     40866b <__gcov_flush@@Base+0x9b>
  40862d:	mov    rbx,QWORD PTR [rdi+0x10]
  408631:	cmp    QWORD PTR [rdi],r15
  408634:	je     408640 <__gcov_flush@@Base+0x70>
  408636:	mov    r12,rdi
  408639:	jmp    408625 <__gcov_flush@@Base+0x55>
  40863b:	nop    DWORD PTR [rax+rax*1+0x0]
  408640:	cmp    rdi,QWORD PTR [r14]
  408643:	je     408652 <__gcov_flush@@Base+0x82>
  408645:	cmp    rdi,QWORD PTR [r14+0x8]
  408649:	je     40865b <__gcov_flush@@Base+0x8b>
  40864b:	test   r12,r12
  40864e:	jne    408664 <__gcov_flush@@Base+0x94>
  408650:	jmp    408620 <__gcov_flush@@Base+0x50>
  408652:	mov    QWORD PTR [r14],rbx
  408655:	cmp    rdi,QWORD PTR [r14+0x8]
  408659:	jne    40864b <__gcov_flush@@Base+0x7b>
  40865b:	mov    QWORD PTR [r14+0x8],r12
  40865f:	test   r12,r12
  408662:	je     408620 <__gcov_flush@@Base+0x50>
  408664:	mov    QWORD PTR [r12+0x10],rbx
  408669:	jmp    408620 <__gcov_flush@@Base+0x50>
  40866b:	add    rsp,0x8
  40866f:	pop    rbx
  408670:	pop    r12
  408672:	pop    r14
  408674:	pop    r15
  408676:	ret    
  408677:	nop    WORD PTR [rax+rax*1+0x0]
  408680:	push   r14
  408682:	push   rbx
  408683:	push   rax
  408684:	mov    r14,rsi
  408687:	test   rdi,rdi
  40868a:	je     4086d7 <__gcov_flush@@Base+0x107>
  40868c:	mov    rbx,rdi
  40868f:	mov    edi,0x18
  408694:	call   4031c0 <malloc@plt>
  408699:	mov    QWORD PTR [rax+0x8],rbx
  40869d:	mov    QWORD PTR [rax+0x10],0x0
  4086a5:	lea    rcx,[rip+0x6ad4]        # 40f180 <__bss_start@@Base+0x1018>
  4086ac:	mov    QWORD PTR [rax],rcx
  4086af:	lea    rcx,[rip+0x6af2]        # 40f1a8 <writeout_fn_list@@Base>
  4086b6:	lea    rdx,[rcx+0x8]
  4086ba:	mov    rsi,QWORD PTR [rcx+0x8]
  4086be:	add    rsi,0x10
  4086c2:	xor    edi,edi
  4086c4:	cmp    QWORD PTR [rcx],0x0
  4086c8:	setne  dil
  4086cc:	cmove  rsi,rdx
  4086d0:	mov    QWORD PTR [rsi],rax
  4086d3:	mov    QWORD PTR [rcx+rdi*8],rax
  4086d7:	test   r14,r14
  4086da:	je     408724 <__gcov_flush@@Base+0x154>
  4086dc:	mov    edi,0x18
  4086e1:	call   4031c0 <malloc@plt>
  4086e6:	mov    QWORD PTR [rax+0x8],r14
  4086ea:	mov    QWORD PTR [rax+0x10],0x0
  4086f2:	lea    rcx,[rip+0x6a87]        # 40f180 <__bss_start@@Base+0x1018>
  4086f9:	mov    QWORD PTR [rax],rcx
  4086fc:	lea    rcx,[rip+0x6a95]        # 40f198 <flush_fn_list@@Base>
  408703:	lea    rdx,[rcx+0x8]
  408707:	mov    rsi,QWORD PTR [rcx+0x8]
  40870b:	add    rsi,0x10
  40870f:	xor    edi,edi
  408711:	cmp    QWORD PTR [rcx],0x0
  408715:	setne  dil
  408719:	cmove  rsi,rdx
  40871d:	mov    QWORD PTR [rsi],rax
  408720:	mov    QWORD PTR [rcx+rdi*8],rax
  408724:	cmp    BYTE PTR [rip+0x6a5d],0x0        # 40f188 <__bss_start@@Base+0x1020>
  40872b:	je     408735 <__gcov_flush@@Base+0x165>
  40872d:	add    rsp,0x8
  408731:	pop    rbx
  408732:	pop    r14
  408734:	ret    
  408735:	mov    BYTE PTR [rip+0x6a4c],0x1        # 40f188 <__bss_start@@Base+0x1020>
  40873c:	lea    rdi,[rip+0xfffffffffffffead]        # 4085f0 <__gcov_flush@@Base+0x20>
  408743:	call   408ce0 <__libc_csu_fini@@Base+0x10>
  408748:	lea    rdi,[rip+0xfffffffffffffda1]        # 4084f0 <__generate_code_for_binary_boolean_expression@@Base+0x1a20>
  40874f:	call   408ce0 <__libc_csu_fini@@Base+0x10>
  408754:	lea    rdi,[rip+0xfffffffffffffd55]        # 4084b0 <__generate_code_for_binary_boolean_expression@@Base+0x19e0>
  40875b:	add    rsp,0x8
  40875f:	pop    rbx
  408760:	pop    r14
  408762:	jmp    408ce0 <__libc_csu_fini@@Base+0x10>
  408767:	nop
  408768:	nop    DWORD PTR [rax+rax*1+0x0]
  408770:	push   r15
  408772:	push   r14
  408774:	push   rbx
  408775:	mov    r14,rdi
  408778:	lea    rbx,[rdi+0x1]
  40877c:	lea    r15,[rip+0x59e1]        # 40e164 <lprofDirMode@@Base>
  408783:	jmp    4087a5 <__gcov_flush@@Base+0x1d5>
  408785:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40878f:	nop
  408790:	mov    BYTE PTR [rbx],0x0
  408793:	mov    esi,DWORD PTR [r15]
  408796:	mov    rdi,r14
  408799:	call   403080 <mkdir@plt>
  40879e:	mov    BYTE PTR [rbx],0x2f
  4087a1:	add    rbx,0x1
  4087a5:	movzx  eax,BYTE PTR [rbx]
  4087a8:	cmp    al,0x2f
  4087aa:	je     408790 <__gcov_flush@@Base+0x1c0>
  4087ac:	test   al,al
  4087ae:	jne    4087a1 <__gcov_flush@@Base+0x1d1>
  4087b0:	pop    rbx
  4087b1:	pop    r14
  4087b3:	pop    r15
  4087b5:	ret    
  4087b6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4087c0:	lea    rax,[rip+0x599d]        # 40e164 <lprofDirMode@@Base>
  4087c7:	mov    eax,DWORD PTR [rax]
  4087c9:	ret    
  4087ca:	nop    WORD PTR [rax+rax*1+0x0]
  4087d0:	lea    rax,[rip+0x598d]        # 40e164 <lprofDirMode@@Base>
  4087d7:	mov    DWORD PTR [rax],edi
  4087d9:	ret    
  4087da:	nop    WORD PTR [rax+rax*1+0x0]
  4087e0:	push   rbp
  4087e1:	push   rbx
  4087e2:	sub    rsp,0x188
  4087e9:	mov    ebp,esi
  4087eb:	mov    rbx,rdi
  4087ee:	mov    rdi,rsp
  4087f1:	call   403120 <uname@plt>
  4087f6:	test   eax,eax
  4087f8:	js     40880c <__gcov_flush@@Base+0x23c>
  4087fa:	lea    rsi,[rsp+0x41]
  4087ff:	movsxd rdx,ebp
  408802:	mov    rdi,rbx
  408805:	call   403060 <strncpy@plt>
  40880a:	xor    eax,eax
  40880c:	add    rsp,0x188
  408813:	pop    rbx
  408814:	pop    rbp
  408815:	ret    
  408816:	nop    WORD PTR cs:[rax+rax*1+0x0]
  408820:	push   rbp
  408821:	push   r14
  408823:	push   rbx
  408824:	sub    rsp,0x20
  408828:	mov    ebx,edi
  40882a:	mov    WORD PTR [rsp+0x2],0x0
  408831:	xorps  xmm0,xmm0
  408834:	movups XMMWORD PTR [rsp+0x8],xmm0
  408839:	call   4030a0 <getpid@plt>
  40883e:	mov    DWORD PTR [rsp+0x18],eax
  408842:	mov    WORD PTR [rsp],0x1
  408848:	mov    r14,rsp
  40884b:	xor    ebp,ebp
  40884d:	nop    DWORD PTR [rax]
  408850:	mov    edi,ebx
  408852:	mov    esi,0x7
  408857:	mov    rdx,r14
  40885a:	xor    eax,eax
  40885c:	call   403090 <fcntl@plt>
  408861:	cmp    eax,0xffffffff
  408864:	jne    40887c <__gcov_flush@@Base+0x2ac>
  408866:	call   403050 <__errno_location@plt>
  40886b:	mov    eax,DWORD PTR [rax]
  40886d:	cmp    eax,0x4
  408870:	je     408850 <__gcov_flush@@Base+0x280>
  408872:	cmp    eax,0x25
  408875:	jne    40887c <__gcov_flush@@Base+0x2ac>
  408877:	mov    ebp,0xffffffff
  40887c:	mov    eax,ebp
  40887e:	add    rsp,0x20
  408882:	pop    rbx
  408883:	pop    r14
  408885:	pop    rbp
  408886:	ret    
  408887:	nop    WORD PTR [rax+rax*1+0x0]
  408890:	push   rbp
  408891:	push   r14
  408893:	push   rbx
  408894:	sub    rsp,0x20
  408898:	mov    ebx,edi
  40889a:	mov    WORD PTR [rsp+0x2],0x0
  4088a1:	xorps  xmm0,xmm0
  4088a4:	movups XMMWORD PTR [rsp+0x8],xmm0
  4088a9:	call   4030a0 <getpid@plt>
  4088ae:	mov    DWORD PTR [rsp+0x18],eax
  4088b2:	mov    WORD PTR [rsp],0x2
  4088b8:	mov    r14,rsp
  4088bb:	xor    ebp,ebp
  4088bd:	nop    DWORD PTR [rax]
  4088c0:	mov    edi,ebx
  4088c2:	mov    esi,0x7
  4088c7:	mov    rdx,r14
  4088ca:	xor    eax,eax
  4088cc:	call   403090 <fcntl@plt>
  4088d1:	cmp    eax,0xffffffff
  4088d4:	jne    4088ec <__gcov_flush@@Base+0x31c>
  4088d6:	call   403050 <__errno_location@plt>
  4088db:	mov    eax,DWORD PTR [rax]
  4088dd:	cmp    eax,0x4
  4088e0:	je     4088c0 <__gcov_flush@@Base+0x2f0>
  4088e2:	cmp    eax,0x25
  4088e5:	jne    4088ec <__gcov_flush@@Base+0x31c>
  4088e7:	mov    ebp,0xffffffff
  4088ec:	mov    eax,ebp
  4088ee:	add    rsp,0x20
  4088f2:	pop    rbx
  4088f3:	pop    r14
  4088f5:	pop    rbp
  4088f6:	ret    
  4088f7:	nop    WORD PTR [rax+rax*1+0x0]
  408900:	push   rbp
  408901:	push   r14
  408903:	push   rbx
  408904:	sub    rsp,0x20
  408908:	call   4031b0 <fileno@plt>
  40890d:	mov    ebx,eax
  40890f:	mov    WORD PTR [rsp+0x2],0x0
  408916:	xorps  xmm0,xmm0
  408919:	movups XMMWORD PTR [rsp+0x8],xmm0
  40891e:	call   4030a0 <getpid@plt>
  408923:	mov    DWORD PTR [rsp+0x18],eax
  408927:	mov    WORD PTR [rsp],0x1
  40892d:	mov    r14,rsp
  408930:	xor    ebp,ebp
  408932:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40893c:	nop    DWORD PTR [rax+0x0]
  408940:	mov    edi,ebx
  408942:	mov    esi,0x7
  408947:	mov    rdx,r14
  40894a:	xor    eax,eax
  40894c:	call   403090 <fcntl@plt>
  408951:	cmp    eax,0xffffffff
  408954:	jne    40896c <__gcov_flush@@Base+0x39c>
  408956:	call   403050 <__errno_location@plt>
  40895b:	mov    eax,DWORD PTR [rax]
  40895d:	cmp    eax,0x4
  408960:	je     408940 <__gcov_flush@@Base+0x370>
  408962:	cmp    eax,0x25
  408965:	jne    40896c <__gcov_flush@@Base+0x39c>
  408967:	mov    ebp,0xffffffff
  40896c:	mov    eax,ebp
  40896e:	add    rsp,0x20
  408972:	pop    rbx
  408973:	pop    r14
  408975:	pop    rbp
  408976:	ret    
  408977:	nop    WORD PTR [rax+rax*1+0x0]
  408980:	push   rbp
  408981:	push   r14
  408983:	push   rbx
  408984:	sub    rsp,0x20
  408988:	call   4031b0 <fileno@plt>
  40898d:	mov    ebx,eax
  40898f:	mov    WORD PTR [rsp+0x2],0x0
  408996:	xorps  xmm0,xmm0
  408999:	movups XMMWORD PTR [rsp+0x8],xmm0
  40899e:	call   4030a0 <getpid@plt>
  4089a3:	mov    DWORD PTR [rsp+0x18],eax
  4089a7:	mov    WORD PTR [rsp],0x2
  4089ad:	mov    r14,rsp
  4089b0:	xor    ebp,ebp
  4089b2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4089bc:	nop    DWORD PTR [rax+0x0]
  4089c0:	mov    edi,ebx
  4089c2:	mov    esi,0x7
  4089c7:	mov    rdx,r14
  4089ca:	xor    eax,eax
  4089cc:	call   403090 <fcntl@plt>
  4089d1:	cmp    eax,0xffffffff
  4089d4:	jne    4089ec <__gcov_flush@@Base+0x41c>
  4089d6:	call   403050 <__errno_location@plt>
  4089db:	mov    eax,DWORD PTR [rax]
  4089dd:	cmp    eax,0x4
  4089e0:	je     4089c0 <__gcov_flush@@Base+0x3f0>
  4089e2:	cmp    eax,0x25
  4089e5:	jne    4089ec <__gcov_flush@@Base+0x41c>
  4089e7:	mov    ebp,0xffffffff
  4089ec:	mov    eax,ebp
  4089ee:	add    rsp,0x20
  4089f2:	pop    rbx
  4089f3:	pop    r14
  4089f5:	pop    rbp
  4089f6:	ret    
  4089f7:	nop    WORD PTR [rax+rax*1+0x0]
  408a00:	push   rbp
  408a01:	push   r14
  408a03:	push   rbx
  408a04:	sub    rsp,0x20
  408a08:	xor    ebx,ebx
  408a0a:	mov    esi,0x42
  408a0f:	mov    edx,0x1b6
  408a14:	xor    eax,eax
  408a16:	call   403220 <open@plt>
  408a1b:	test   eax,eax
  408a1d:	js     408a7a <__gcov_flush@@Base+0x4aa>
  408a1f:	mov    ebp,eax
  408a21:	mov    WORD PTR [rsp+0x2],0x0
  408a28:	xorps  xmm0,xmm0
  408a2b:	movups XMMWORD PTR [rsp+0x8],xmm0
  408a30:	call   4030a0 <getpid@plt>
  408a35:	mov    DWORD PTR [rsp+0x18],eax
  408a39:	mov    WORD PTR [rsp],0x1
  408a3f:	mov    r14,rsp
  408a42:	mov    edi,ebp
  408a44:	mov    esi,0x7
  408a49:	mov    rdx,r14
  408a4c:	xor    eax,eax
  408a4e:	call   403090 <fcntl@plt>
  408a53:	cmp    eax,0xffffffff
  408a56:	jne    408a69 <__gcov_flush@@Base+0x499>
  408a58:	call   403050 <__errno_location@plt>
  408a5d:	mov    eax,DWORD PTR [rax]
  408a5f:	cmp    eax,0x4
  408a62:	je     408a42 <__gcov_flush@@Base+0x472>
  408a64:	cmp    eax,0x25
  408a67:	je     408a86 <__gcov_flush@@Base+0x4b6>
  408a69:	lea    rsi,[rip+0x117f]        # 409bef <_IO_stdin_used@@Base+0xbef>
  408a70:	mov    edi,ebp
  408a72:	call   403200 <fdopen@plt>
  408a77:	mov    rbx,rax
  408a7a:	mov    rax,rbx
  408a7d:	add    rsp,0x20
  408a81:	pop    rbx
  408a82:	pop    r14
  408a84:	pop    rbp
  408a85:	ret    
  408a86:	mov    rax,QWORD PTR [rip+0x5563]        # 40dff0 <stderr@GLIBC_2.2.5>
  408a8d:	mov    rdi,QWORD PTR [rax]
  408a90:	lea    rsi,[rip+0x12fa]        # 409d91 <_IO_stdin_used@@Base+0xd91>
  408a97:	lea    rdx,[rip+0x133c]        # 409dda <_IO_stdin_used@@Base+0xdda>
  408a9e:	xor    eax,eax
  408aa0:	call   403160 <fprintf@plt>
  408aa5:	jmp    408a69 <__gcov_flush@@Base+0x499>
  408aa7:	nop    WORD PTR [rax+rax*1+0x0]
  408ab0:	push   r15
  408ab2:	push   r14
  408ab4:	push   r12
  408ab6:	push   rbx
  408ab7:	push   rax
  408ab8:	mov    r14,rsi
  408abb:	mov    r15,rdi
  408abe:	lea    rdi,[rip+0x1343]        # 409e08 <_IO_stdin_used@@Base+0xe08>
  408ac5:	call   403030 <getenv@plt>
  408aca:	mov    rbx,rax
  408acd:	lea    rdi,[rip+0x1340]        # 409e14 <_IO_stdin_used@@Base+0xe14>
  408ad4:	call   403030 <getenv@plt>
  408ad9:	mov    QWORD PTR [r14],0x0
  408ae0:	mov    DWORD PTR [r15],0x0
  408ae7:	test   rbx,rbx
  408aea:	je     408b21 <__gcov_flush@@Base+0x551>
  408aec:	xor    r12d,r12d
  408aef:	cmp    BYTE PTR [rbx],0x0
  408af2:	je     408b21 <__gcov_flush@@Base+0x551>
  408af4:	test   rax,rax
  408af7:	je     408b11 <__gcov_flush@@Base+0x541>
  408af9:	xor    r12d,r12d
  408afc:	mov    rdi,rax
  408aff:	xor    esi,esi
  408b01:	mov    edx,0xa
  408b06:	call   403180 <strtol@plt>
  408b0b:	test   eax,eax
  408b0d:	cmovns r12d,eax
  408b11:	mov    DWORD PTR [r15],r12d
  408b14:	mov    rdi,rbx
  408b17:	call   4030e0 <strlen@plt>
  408b1c:	mov    QWORD PTR [r14],rax
  408b1f:	jmp    408b23 <__gcov_flush@@Base+0x553>
  408b21:	xor    ebx,ebx
  408b23:	mov    rax,rbx
  408b26:	add    rsp,0x8
  408b2a:	pop    rbx
  408b2b:	pop    r12
  408b2d:	pop    r14
  408b2f:	pop    r15
  408b31:	ret    
  408b32:	nop    WORD PTR cs:[rax+rax*1+0x0]
  408b3c:	nop    DWORD PTR [rax+0x0]
  408b40:	push   r15
  408b42:	push   r14
  408b44:	push   r12
  408b46:	push   rbx
  408b47:	push   rax
  408b48:	mov    r15,rcx
  408b4b:	mov    r12,rdx
  408b4e:	mov    rbx,rsi
  408b51:	mov    r14,rdi
  408b54:	test   r8d,r8d
  408b57:	jle    408b8b <__gcov_flush@@Base+0x5bb>
  408b59:	lea    rax,[rbx+0x1]
  408b5d:	xor    ecx,ecx
  408b5f:	jmp    408b7f <__gcov_flush@@Base+0x5af>
  408b61:	nop    WORD PTR cs:[rax+rax*1+0x0]
  408b6b:	nop    DWORD PTR [rax+rax*1+0x0]
  408b70:	add    ecx,0x1
  408b73:	mov    rbx,rax
  408b76:	add    rax,0x1
  408b7a:	cmp    ecx,r8d
  408b7d:	jge    408b8b <__gcov_flush@@Base+0x5bb>
  408b7f:	movzx  edx,BYTE PTR [rax]
  408b82:	cmp    dl,0x2f
  408b85:	je     408b70 <__gcov_flush@@Base+0x5a0>
  408b87:	test   dl,dl
  408b89:	jne    408b76 <__gcov_flush@@Base+0x5a6>
  408b8b:	mov    rdi,r14
  408b8e:	mov    rsi,r12
  408b91:	mov    rdx,r15
  408b94:	call   403190 <memcpy@plt>
  408b99:	cmp    BYTE PTR [r15+r12*1-0x1],0x2f
  408b9f:	je     408baa <__gcov_flush@@Base+0x5da>
  408ba1:	mov    BYTE PTR [r14+r15*1],0x2f
  408ba6:	add    r15,0x1
  408baa:	add    r14,r15
  408bad:	mov    rdi,rbx
  408bb0:	call   4030e0 <strlen@plt>
  408bb5:	lea    rdx,[rax+0x1]
  408bb9:	mov    rdi,r14
  408bbc:	mov    rsi,rbx
  408bbf:	add    rsp,0x8
  408bc3:	pop    rbx
  408bc4:	pop    r12
  408bc6:	pop    r14
  408bc8:	pop    r15
  408bca:	jmp    403190 <memcpy@plt>
  408bcf:	nop
  408bd0:	mov    esi,0x2f
  408bd5:	jmp    403100 <strchr@plt>
  408bda:	nop    WORD PTR [rax+rax*1+0x0]
  408be0:	mov    esi,0x2f
  408be5:	jmp    403110 <strrchr@plt>
  408bea:	nop    WORD PTR [rax+rax*1+0x0]
  408bf0:	push   rax
  408bf1:	mov    DWORD PTR [rsp+0x4],0x0
  408bf9:	lea    rsi,[rsp+0x4]
  408bfe:	mov    edi,0x2
  408c03:	xor    eax,eax
  408c05:	call   4031a0 <prctl@plt>
  408c0a:	mov    ecx,DWORD PTR [rsp+0x4]
  408c0e:	test   eax,eax
  408c10:	jne    408c29 <__gcov_flush@@Base+0x659>
  408c12:	cmp    ecx,0x9
  408c15:	jne    408c29 <__gcov_flush@@Base+0x659>
  408c17:	mov    edi,0x1
  408c1c:	xor    esi,esi
  408c1e:	xor    eax,eax
  408c20:	call   4031a0 <prctl@plt>
  408c25:	mov    ecx,DWORD PTR [rsp+0x4]
  408c29:	xor    eax,eax
  408c2b:	cmp    ecx,0x9
  408c2e:	sete   al
  408c31:	pop    rcx
  408c32:	ret    
  408c33:	nop    WORD PTR cs:[rax+rax*1+0x0]
  408c3d:	nop    DWORD PTR [rax]
  408c40:	mov    edi,0x1
  408c45:	mov    esi,0x9
  408c4a:	xor    eax,eax
  408c4c:	jmp    4031a0 <prctl@plt>
  408c51:	nop    WORD PTR cs:[rax+rax*1+0x0]
  408c5b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000408c60 <__libc_csu_init@@Base>:
  408c60:	endbr64 
  408c64:	push   r15
  408c66:	lea    r15,[rip+0x4333]        # 40cfa0 <_IO_stdin_used@@Base+0x3fa0>
  408c6d:	push   r14
  408c6f:	mov    r14,rdx
  408c72:	push   r13
  408c74:	mov    r13,rsi
  408c77:	push   r12
  408c79:	mov    r12d,edi
  408c7c:	push   rbp
  408c7d:	lea    rbp,[rip+0x4354]        # 40cfd8 <_IO_stdin_used@@Base+0x3fd8>
  408c84:	push   rbx
  408c85:	sub    rbp,r15
  408c88:	sub    rsp,0x8
  408c8c:	call   403000 <getenv@plt-0x30>
  408c91:	sar    rbp,0x3
  408c95:	je     408cb6 <__libc_csu_init@@Base+0x56>
  408c97:	xor    ebx,ebx
  408c99:	nop    DWORD PTR [rax+0x0]
  408ca0:	mov    rdx,r14
  408ca3:	mov    rsi,r13
  408ca6:	mov    edi,r12d
  408ca9:	call   QWORD PTR [r15+rbx*8]
  408cad:	add    rbx,0x1
  408cb1:	cmp    rbp,rbx
  408cb4:	jne    408ca0 <__libc_csu_init@@Base+0x40>
  408cb6:	add    rsp,0x8
  408cba:	pop    rbx
  408cbb:	pop    rbp
  408cbc:	pop    r12
  408cbe:	pop    r13
  408cc0:	pop    r14
  408cc2:	pop    r15
  408cc4:	ret    
  408cc5:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

0000000000408cd0 <__libc_csu_fini@@Base>:
  408cd0:	endbr64 
  408cd4:	ret    
  408cd5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  408cdf:	nop
  408ce0:	endbr64 
  408ce4:	mov    rdx,QWORD PTR [rip+0x546d]        # 40e158 <__data_start@@Base+0x8>
  408ceb:	xor    esi,esi
  408ced:	jmp    403250 <__cxa_atexit@plt>

Disassembly of section .fini:

0000000000408cf4 <.fini>:
  408cf4:	endbr64 
  408cf8:	sub    rsp,0x8
  408cfc:	add    rsp,0x8
  408d00:	ret    
