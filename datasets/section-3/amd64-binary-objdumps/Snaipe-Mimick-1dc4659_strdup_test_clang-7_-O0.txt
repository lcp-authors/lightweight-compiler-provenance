
../repos/Snaipe-Mimick-1dc4659/sample/strdup/strdup_test:     file format elf64-x86-64


Disassembly of section .init:

0000000000402000 <.init>:
  402000:	endbr64 
  402004:	sub    rsp,0x8
  402008:	mov    rax,QWORD PTR [rip+0x5fd1]        # 407fe0 <__gmon_start__>
  40200f:	test   rax,rax
  402012:	je     402016 <free@plt-0x1a>
  402014:	call   rax
  402016:	add    rsp,0x8
  40201a:	ret    

Disassembly of section .plt:

0000000000402020 <free@plt-0x10>:
  402020:	push   QWORD PTR [rip+0x5fe2]        # 408008 <_IO_stdin_used@@Base+0x3008>
  402026:	jmp    QWORD PTR [rip+0x5fe4]        # 408010 <_IO_stdin_used@@Base+0x3010>
  40202c:	nop    DWORD PTR [rax+0x0]

0000000000402030 <free@plt>:
  402030:	jmp    QWORD PTR [rip+0x5fe2]        # 408018 <free@GLIBC_2.2.5>
  402036:	push   0x0
  40203b:	jmp    402020 <free@plt-0x10>

0000000000402040 <abort@plt>:
  402040:	jmp    QWORD PTR [rip+0x5fda]        # 408020 <abort@GLIBC_2.2.5>
  402046:	push   0x1
  40204b:	jmp    402020 <free@plt-0x10>

0000000000402050 <__errno_location@plt>:
  402050:	jmp    QWORD PTR [rip+0x5fd2]        # 408028 <__errno_location@GLIBC_2.2.5>
  402056:	push   0x2
  40205b:	jmp    402020 <free@plt-0x10>

0000000000402060 <strncmp@plt>:
  402060:	jmp    QWORD PTR [rip+0x5fca]        # 408030 <strncmp@GLIBC_2.2.5>
  402066:	push   0x3
  40206b:	jmp    402020 <free@plt-0x10>

0000000000402070 <strlen@plt>:
  402070:	jmp    QWORD PTR [rip+0x5fc2]        # 408038 <strlen@GLIBC_2.2.5>
  402076:	push   0x4
  40207b:	jmp    402020 <free@plt-0x10>

0000000000402080 <mmap@plt>:
  402080:	jmp    QWORD PTR [rip+0x5fba]        # 408040 <mmap@GLIBC_2.2.5>
  402086:	push   0x5
  40208b:	jmp    402020 <free@plt-0x10>

0000000000402090 <strchr@plt>:
  402090:	jmp    QWORD PTR [rip+0x5fb2]        # 408048 <strchr@GLIBC_2.2.5>
  402096:	push   0x6
  40209b:	jmp    402020 <free@plt-0x10>

00000000004020a0 <snprintf@plt>:
  4020a0:	jmp    QWORD PTR [rip+0x5faa]        # 408050 <snprintf@GLIBC_2.2.5>
  4020a6:	push   0x7
  4020ab:	jmp    402020 <free@plt-0x10>

00000000004020b0 <memset@plt>:
  4020b0:	jmp    QWORD PTR [rip+0x5fa2]        # 408058 <memset@GLIBC_2.2.5>
  4020b6:	push   0x8
  4020bb:	jmp    402020 <free@plt-0x10>

00000000004020c0 <__tls_get_addr@plt>:
  4020c0:	jmp    QWORD PTR [rip+0x5f9a]        # 408060 <__tls_get_addr@GLIBC_2.3>
  4020c6:	push   0x9
  4020cb:	jmp    402020 <free@plt-0x10>

00000000004020d0 <strcmp@plt>:
  4020d0:	jmp    QWORD PTR [rip+0x5f92]        # 408068 <strcmp@GLIBC_2.2.5>
  4020d6:	push   0xa
  4020db:	jmp    402020 <free@plt-0x10>

00000000004020e0 <fprintf@plt>:
  4020e0:	jmp    QWORD PTR [rip+0x5f8a]        # 408070 <fprintf@GLIBC_2.2.5>
  4020e6:	push   0xb
  4020eb:	jmp    402020 <free@plt-0x10>

00000000004020f0 <memcpy@plt>:
  4020f0:	jmp    QWORD PTR [rip+0x5f82]        # 408078 <memcpy@GLIBC_2.14>
  4020f6:	push   0xc
  4020fb:	jmp    402020 <free@plt-0x10>

0000000000402100 <realloc@plt>:
  402100:	jmp    QWORD PTR [rip+0x5f7a]        # 408080 <realloc@GLIBC_2.2.5>
  402106:	push   0xd
  40210b:	jmp    402020 <free@plt-0x10>

0000000000402110 <munmap@plt>:
  402110:	jmp    QWORD PTR [rip+0x5f72]        # 408088 <munmap@GLIBC_2.2.5>
  402116:	push   0xe
  40211b:	jmp    402020 <free@plt-0x10>

0000000000402120 <my_strdup@plt>:
  402120:	jmp    QWORD PTR [rip+0x5f6a]        # 408090 <my_strdup>
  402126:	push   0xf
  40212b:	jmp    402020 <free@plt-0x10>

0000000000402130 <mprotect@plt>:
  402130:	jmp    QWORD PTR [rip+0x5f62]        # 408098 <mprotect@GLIBC_2.2.5>
  402136:	push   0x10
  40213b:	jmp    402020 <free@plt-0x10>

0000000000402140 <strstr@plt>:
  402140:	jmp    QWORD PTR [rip+0x5f5a]        # 4080a0 <strstr@GLIBC_2.2.5>
  402146:	push   0x11
  40214b:	jmp    402020 <free@plt-0x10>

Disassembly of section .plt.got:

0000000000402150 <malloc@plt>:
  402150:	jmp    QWORD PTR [rip+0x5e9a]        # 407ff0 <malloc@GLIBC_2.2.5>
  402156:	xchg   ax,ax

Disassembly of section .text:

0000000000402160 <_start@@Base>:
  402160:	endbr64 
  402164:	xor    ebp,ebp
  402166:	mov    r9,rdx
  402169:	pop    rsi
  40216a:	mov    rdx,rsp
  40216d:	and    rsp,0xfffffffffffffff0
  402171:	push   rax
  402172:	push   rsp
  402173:	mov    r8,0x404f90
  40217a:	mov    rcx,0x404f20
  402181:	mov    rdi,0x402540
  402188:	call   QWORD PTR [rip+0x5e4a]        # 407fd8 <__libc_start_main@GLIBC_2.2.5>
  40218e:	hlt    
  40218f:	nop
  402190:	endbr64 
  402194:	ret    
  402195:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40219f:	nop
  4021a0:	mov    eax,0x4080c8
  4021a5:	cmp    rax,0x4080c8
  4021ab:	je     4021c0 <_start@@Base+0x60>
  4021ad:	mov    eax,0x0
  4021b2:	test   rax,rax
  4021b5:	je     4021c0 <_start@@Base+0x60>
  4021b7:	mov    edi,0x4080c8
  4021bc:	jmp    rax
  4021be:	xchg   ax,ax
  4021c0:	ret    
  4021c1:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4021cc:	nop    DWORD PTR [rax+0x0]
  4021d0:	mov    esi,0x4080c8
  4021d5:	sub    rsi,0x4080c8
  4021dc:	mov    rax,rsi
  4021df:	shr    rsi,0x3f
  4021e3:	sar    rax,0x3
  4021e7:	add    rsi,rax
  4021ea:	sar    rsi,1
  4021ed:	je     402200 <_start@@Base+0xa0>
  4021ef:	mov    eax,0x0
  4021f4:	test   rax,rax
  4021f7:	je     402200 <_start@@Base+0xa0>
  4021f9:	mov    edi,0x4080c8
  4021fe:	jmp    rax
  402200:	ret    
  402201:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40220c:	nop    DWORD PTR [rax+0x0]
  402210:	endbr64 
  402214:	cmp    BYTE PTR [rip+0x5ead],0x0        # 4080c8 <__bss_start@@Base>
  40221b:	jne    402230 <_start@@Base+0xd0>
  40221d:	push   rbp
  40221e:	mov    rbp,rsp
  402221:	call   4021a0 <_start@@Base+0x40>
  402226:	mov    BYTE PTR [rip+0x5e9b],0x1        # 4080c8 <__bss_start@@Base>
  40222d:	pop    rbp
  40222e:	ret    
  40222f:	nop
  402230:	ret    
  402231:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40223c:	nop    DWORD PTR [rax+0x0]
  402240:	endbr64 
  402244:	jmp    4021d0 <_start@@Base+0x70>
  402246:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000402250 <test_simple_case@@Base>:
  402250:	push   rbp
  402251:	mov    rbp,rsp
  402254:	sub    rsp,0xa0
  40225b:	lea    rdi,[rip+0x2da2]        # 405004 <_IO_stdin_used@@Base+0x4>
  402262:	call   402410 <test_simple_case@@Base+0x1c0>
  402267:	xor    edi,edi
  402269:	mov    QWORD PTR [rbp-0x70],rax
  40226d:	call   402cf0 <mmk_matcher_init@@Base>
  402272:	lea    rax,[rbp-0x6]
  402276:	xor    esi,esi
  402278:	mov    edi,0x20
  40227d:	mov    edx,edi
  40227f:	lea    rcx,[rbp-0x28]
  402283:	mov    r8,rcx
  402286:	mov    rdi,r8
  402289:	mov    QWORD PTR [rbp-0x78],rax
  40228d:	mov    QWORD PTR [rbp-0x80],rcx
  402291:	call   4020b0 <memset@plt>
  402296:	mov    rax,QWORD PTR [rbp-0x78]
  40229a:	mov    QWORD PTR [rbp-0x30],rax
  40229e:	lea    rcx,[rbp-0x30]
  4022a2:	mov    QWORD PTR [rbp-0x20],rcx
  4022a6:	mov    rdi,QWORD PTR [rbp-0x80]
  4022aa:	call   404d90 <mmk_when_init@@Base>
  4022af:	mov    esi,0x6
  4022b4:	mov    edi,esi
  4022b6:	call   402150 <malloc@plt>
  4022bb:	mov    QWORD PTR [rbp-0x88],rax
  4022c2:	call   402d60 <mmk_matcher_term@@Base>
  4022c7:	lea    rdi,[rip+0x2d48]        # 405016 <_IO_stdin_used@@Base+0x16>
  4022ce:	call   402120 <my_strdup@plt>
  4022d3:	mov    QWORD PTR [rbp-0x38],rax
  4022d7:	mov    edi,0x1
  4022dc:	call   402cf0 <mmk_matcher_init@@Base>
  4022e1:	xor    esi,esi
  4022e3:	mov    edi,0x8000000a
  4022e8:	call   402da0 <mmk_matcher_add@@Base>
  4022ed:	mov    esi,0x6
  4022f2:	mov    edi,esi
  4022f4:	call   402150 <malloc@plt>
  4022f9:	mov    QWORD PTR [rbp-0x90],rax
  402300:	call   402d60 <mmk_matcher_term@@Base>
  402305:	mov    DWORD PTR [rbp-0x68],0x1
  40230c:	mov    DWORD PTR [rbp-0x64],0x0
  402313:	mov    QWORD PTR [rbp-0x60],0x0
  40231b:	mov    QWORD PTR [rbp-0x58],0x0
  402323:	mov    QWORD PTR [rbp-0x50],0x1
  40232b:	mov    QWORD PTR [rbp-0x48],0x0
  402333:	lea    rdi,[rbp-0x68]
  402337:	call   404410 <mmk_verify_times@@Base>
  40233c:	mov    DWORD PTR [rbp-0x3c],eax
  40233f:	cmp    DWORD PTR [rbp-0x3c],0x0
  402343:	jne    40237f <test_simple_case@@Base+0x12f>
  402349:	mov    rax,QWORD PTR [rip+0x5ca8]        # 407ff8 <stderr@GLIBC_2.2.5>
  402350:	mov    rdi,QWORD PTR [rax]
  402353:	lea    rsi,[rip+0x2cc2]        # 40501c <_IO_stdin_used@@Base+0x1c>
  40235a:	lea    rdx,[rip+0x2cd8]        # 405039 <_IO_stdin_used@@Base+0x39>
  402361:	mov    ecx,0x17
  402366:	lea    r8,[rip+0x2d28]        # 405095 <_IO_stdin_used@@Base+0x95>
  40236d:	mov    al,0x0
  40236f:	call   4020e0 <fprintf@plt>
  402374:	mov    DWORD PTR [rbp-0x94],eax
  40237a:	call   402040 <abort@plt>
  40237f:	jmp    402384 <test_simple_case@@Base+0x134>
  402384:	jmp    402389 <test_simple_case@@Base+0x139>
  402389:	lea    rax,[rbp-0x6]
  40238d:	mov    rcx,QWORD PTR [rbp-0x38]
  402391:	cmp    rcx,rax
  402394:	jne    4023b3 <test_simple_case@@Base+0x163>
  40239a:	lea    rsi,[rbp-0x6]
  40239e:	lea    rdi,[rip+0x5d13]        # 4080b8 <__data_start@@Base+0x10>
  4023a5:	call   4020d0 <strcmp@plt>
  4023aa:	cmp    eax,0x0
  4023ad:	je     4023e9 <test_simple_case@@Base+0x199>
  4023b3:	mov    rax,QWORD PTR [rip+0x5c3e]        # 407ff8 <stderr@GLIBC_2.2.5>
  4023ba:	mov    rdi,QWORD PTR [rax]
  4023bd:	lea    rsi,[rip+0x2c58]        # 40501c <_IO_stdin_used@@Base+0x1c>
  4023c4:	lea    rdx,[rip+0x2c6e]        # 405039 <_IO_stdin_used@@Base+0x39>
  4023cb:	mov    ecx,0x18
  4023d0:	lea    r8,[rip+0x2cc3]        # 40509a <_IO_stdin_used@@Base+0x9a>
  4023d7:	mov    al,0x0
  4023d9:	call   4020e0 <fprintf@plt>
  4023de:	mov    DWORD PTR [rbp-0x98],eax
  4023e4:	call   402040 <abort@plt>
  4023e9:	jmp    4023ee <test_simple_case@@Base+0x19e>
  4023ee:	mov    rax,QWORD PTR [rip+0x5bfb]        # 407ff0 <malloc@GLIBC_2.2.5>
  4023f5:	mov    rdi,rax
  4023f8:	call   402ca0 <mmk_reset@@Base>
  4023fd:	add    rsp,0xa0
  402404:	pop    rbp
  402405:	ret    
  402406:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402410:	push   rbp
  402411:	mov    rbp,rsp
  402414:	sub    rsp,0x10
  402418:	lea    rax,[rip+0x151]        # 402570 <main@@Base+0x30>
  40241f:	mov    QWORD PTR [rbp-0x8],rdi
  402423:	mov    rdi,QWORD PTR [rbp-0x8]
  402427:	mov    rsi,rax
  40242a:	call   402eb0 <mmk_mock_create_internal@@Base>
  40242f:	add    rsp,0x10
  402433:	pop    rbp
  402434:	ret    
  402435:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40243f:	nop

0000000000402440 <test_error_case@@Base>:
  402440:	push   rbp
  402441:	mov    rbp,rsp
  402444:	sub    rsp,0x60
  402448:	lea    rdi,[rip+0x2bb5]        # 405004 <_IO_stdin_used@@Base+0x4>
  40244f:	call   402410 <test_simple_case@@Base+0x1c0>
  402454:	xor    edi,edi
  402456:	mov    QWORD PTR [rbp-0x8],rax
  40245a:	call   402cf0 <mmk_matcher_init@@Base>
  40245f:	mov    DWORD PTR [rbp-0x28],0x0
  402466:	mov    DWORD PTR [rbp-0x24],0xc
  40246d:	mov    QWORD PTR [rbp-0x30],0x0
  402475:	lea    rax,[rbp-0x30]
  402479:	mov    QWORD PTR [rbp-0x20],rax
  40247d:	mov    QWORD PTR [rbp-0x18],0x0
  402485:	mov    QWORD PTR [rbp-0x10],0x0
  40248d:	lea    rdi,[rbp-0x28]
  402491:	call   404d90 <mmk_when_init@@Base>
  402496:	xor    edi,edi
  402498:	mov    rax,QWORD PTR [rbp-0x8]
  40249c:	mov    esi,0x1
  4024a1:	mov    QWORD PTR [rbp-0x48],rax
  4024a5:	call   402da0 <mmk_matcher_add@@Base>
  4024aa:	mov    QWORD PTR [rbp-0x38],0x0
  4024b2:	mov    rdi,QWORD PTR [rbp-0x38]
  4024b6:	mov    rax,QWORD PTR [rbp-0x48]
  4024ba:	call   rax
  4024bc:	mov    QWORD PTR [rbp-0x50],rax
  4024c0:	call   402d60 <mmk_matcher_term@@Base>
  4024c5:	lea    rdi,[rip+0x2bee]        # 4050ba <_IO_stdin_used@@Base+0xba>
  4024cc:	call   402120 <my_strdup@plt>
  4024d1:	mov    QWORD PTR [rbp-0x40],rax
  4024d5:	cmp    QWORD PTR [rbp-0x40],0x0
  4024da:	jne    4024ee <test_error_case@@Base+0xae>
  4024e0:	call   402050 <__errno_location@plt>
  4024e5:	cmp    DWORD PTR [rax],0xc
  4024e8:	je     402521 <test_error_case@@Base+0xe1>
  4024ee:	mov    rax,QWORD PTR [rip+0x5b03]        # 407ff8 <stderr@GLIBC_2.2.5>
  4024f5:	mov    rdi,QWORD PTR [rax]
  4024f8:	lea    rsi,[rip+0x2b1d]        # 40501c <_IO_stdin_used@@Base+0x1c>
  4024ff:	lea    rdx,[rip+0x2b33]        # 405039 <_IO_stdin_used@@Base+0x39>
  402506:	mov    ecx,0x27
  40250b:	lea    r8,[rip+0x2bac]        # 4050be <_IO_stdin_used@@Base+0xbe>
  402512:	mov    al,0x0
  402514:	call   4020e0 <fprintf@plt>
  402519:	mov    DWORD PTR [rbp-0x54],eax
  40251c:	call   402040 <abort@plt>
  402521:	jmp    402526 <test_error_case@@Base+0xe6>
  402526:	mov    rax,QWORD PTR [rbp-0x8]
  40252a:	mov    rdi,rax
  40252d:	call   402ca0 <mmk_reset@@Base>
  402532:	add    rsp,0x60
  402536:	pop    rbp
  402537:	ret    
  402538:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402540 <main@@Base>:
  402540:	push   rbp
  402541:	mov    rbp,rsp
  402544:	sub    rsp,0x10
  402548:	mov    DWORD PTR [rbp-0x4],0x0
  40254f:	call   402250 <test_simple_case@@Base>
  402554:	call   402440 <test_error_case@@Base>
  402559:	xor    eax,eax
  40255b:	add    rsp,0x10
  40255f:	pop    rbp
  402560:	ret    
  402561:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40256b:	nop    DWORD PTR [rax+rax*1+0x0]
  402570:	push   rbp
  402571:	mov    rbp,rsp
  402574:	sub    rsp,0xd0
  40257b:	mov    QWORD PTR [rbp-0x10],rdi
  40257f:	jmp    402584 <main@@Base+0x44>
  402584:	call   402d80 <mmk_matcher_ctx@@Base>
  402589:	mov    QWORD PTR [rbp-0x18],rax
  40258d:	cmp    QWORD PTR [rbp-0x18],0x0
  402592:	je     40282e <main@@Base+0x2ee>
  402598:	call   4040e0 <mmk_ctx@@Base>
  40259d:	mov    rdi,rax
  4025a0:	call   403e30 <mmk_stub_context@@Base>
  4025a5:	mov    QWORD PTR [rbp-0x20],rax
  4025a9:	mov    rax,QWORD PTR [rbp-0x18]
  4025ad:	cmp    DWORD PTR [rax],0x0
  4025b0:	jne    402622 <main@@Base+0xe2>
  4025b6:	mov    eax,0x50
  4025bb:	mov    edi,eax
  4025bd:	call   404bb0 <mmk_malloc@@Base>
  4025c2:	mov    QWORD PTR [rbp-0x28],rax
  4025c6:	mov    rax,QWORD PTR [rbp-0x28]
  4025ca:	mov    QWORD PTR [rbp-0xc0],rax
  4025d1:	call   404dd0 <mmk_when_get_result@@Base>
  4025d6:	mov    rdi,QWORD PTR [rax]
  4025d9:	mov    rcx,QWORD PTR [rbp-0xc0]
  4025e0:	mov    QWORD PTR [rcx+0x10],rdi
  4025e4:	mov    rdi,QWORD PTR [rax+0x8]
  4025e8:	mov    QWORD PTR [rcx+0x18],rdi
  4025ec:	mov    rdi,QWORD PTR [rax+0x10]
  4025f0:	mov    QWORD PTR [rcx+0x20],rdi
  4025f4:	mov    rax,QWORD PTR [rax+0x18]
  4025f8:	mov    QWORD PTR [rcx+0x28],rax
  4025fc:	mov    rax,QWORD PTR [rbp-0x10]
  402600:	mov    rdi,QWORD PTR [rbp-0x28]
  402604:	mov    QWORD PTR [rdi+0x48],rax
  402608:	jmp    40260d <main@@Base+0xcd>
  40260d:	mov    rdi,QWORD PTR [rbp-0x20]
  402611:	mov    rax,QWORD PTR [rbp-0x28]
  402615:	mov    rsi,rax
  402618:	call   404df0 <mmk_when_impl@@Base>
  40261d:	jmp    402814 <main@@Base+0x2d4>
  402622:	mov    rax,QWORD PTR [rbp-0x18]
  402626:	cmp    DWORD PTR [rax],0x1
  402629:	jne    40280f <main@@Base+0x2cf>
  40262f:	mov    QWORD PTR [rbp-0x30],0x0
  402637:	mov    rdi,QWORD PTR [rbp-0x20]
  40263b:	call   4031a0 <mmk_mock_params_begin@@Base>
  402640:	mov    QWORD PTR [rbp-0x38],rax
  402644:	cmp    QWORD PTR [rbp-0x38],0x0
  402649:	je     4027ce <main@@Base+0x28e>
  40264f:	mov    rax,QWORD PTR [rbp-0x18]
  402653:	mov    QWORD PTR [rbp-0x40],rax
  402657:	mov    rax,QWORD PTR [rbp-0x40]
  40265b:	cmp    QWORD PTR [rax+0x10],0x0
  402660:	je     402769 <main@@Base+0x229>
  402666:	mov    rax,QWORD PTR [rbp-0x40]
  40266a:	mov    rax,QWORD PTR [rax+0x10]
  40266e:	mov    QWORD PTR [rbp-0x40],rax
  402672:	mov    rax,QWORD PTR [rbp-0x40]
  402676:	cmp    DWORD PTR [rax],0x0
  402679:	jne    402684 <main@@Base+0x144>
  40267f:	jmp    402764 <main@@Base+0x224>
  402684:	mov    rax,QWORD PTR [rbp-0x40]
  402688:	mov    ecx,DWORD PTR [rax]
  40268a:	and    ecx,0x80000000
  402690:	cmp    ecx,0x0
  402693:	je     40271f <main@@Base+0x1df>
  402699:	mov    eax,0x8
  40269e:	mov    edx,eax
  4026a0:	mov    rcx,QWORD PTR [rbp-0x38]
  4026a4:	add    rcx,0x18
  4026a8:	lea    rsi,[rbp-0x10]
  4026ac:	mov    rdi,rcx
  4026af:	call   4047e0 <mmk_memcmp@@Base>
  4026b4:	mov    DWORD PTR [rbp-0x44],eax
  4026b7:	cmp    DWORD PTR [rbp-0x44],0x0
  4026bb:	jne    4026d8 <main@@Base+0x198>
  4026c1:	mov    rax,QWORD PTR [rbp-0x40]
  4026c5:	mov    ecx,DWORD PTR [rax]
  4026c7:	and    ecx,0x2
  4026ca:	cmp    ecx,0x0
  4026cd:	jne    4026d8 <main@@Base+0x198>
  4026d3:	jmp    4027b0 <main@@Base+0x270>
  4026d8:	cmp    DWORD PTR [rbp-0x44],0x0
  4026dc:	jge    4026f9 <main@@Base+0x1b9>
  4026e2:	mov    rax,QWORD PTR [rbp-0x40]
  4026e6:	mov    ecx,DWORD PTR [rax]
  4026e8:	and    ecx,0x4
  4026eb:	cmp    ecx,0x0
  4026ee:	jne    4026f9 <main@@Base+0x1b9>
  4026f4:	jmp    4027b0 <main@@Base+0x270>
  4026f9:	cmp    DWORD PTR [rbp-0x44],0x0
  4026fd:	jle    40271a <main@@Base+0x1da>
  402703:	mov    rax,QWORD PTR [rbp-0x40]
  402707:	mov    ecx,DWORD PTR [rax]
  402709:	and    ecx,0x8
  40270c:	cmp    ecx,0x0
  40270f:	jne    40271a <main@@Base+0x1da>
  402715:	jmp    4027b0 <main@@Base+0x270>
  40271a:	jmp    40275f <main@@Base+0x21f>
  40271f:	mov    rax,QWORD PTR [rbp-0x40]
  402723:	cmp    DWORD PTR [rax],0x1
  402726:	jne    40275a <main@@Base+0x21a>
  40272c:	mov    rdi,QWORD PTR [rbp-0x40]
  402730:	call   402e90 <mmk_matcher_get_predicate@@Base>
  402735:	mov    QWORD PTR [rbp-0x50],rax
  402739:	mov    rax,QWORD PTR [rbp-0x50]
  40273d:	mov    rdi,QWORD PTR [rbp-0x38]
  402741:	mov    rdi,QWORD PTR [rdi+0x18]
  402745:	call   rax
  402747:	cmp    eax,0x0
  40274a:	jne    402755 <main@@Base+0x215>
  402750:	jmp    4027b0 <main@@Base+0x270>
  402755:	jmp    40275a <main@@Base+0x21a>
  40275a:	jmp    40275f <main@@Base+0x21f>
  40275f:	jmp    402764 <main@@Base+0x224>
  402764:	jmp    402797 <main@@Base+0x257>
  402769:	mov    eax,0x8
  40276e:	mov    edx,eax
  402770:	mov    rcx,QWORD PTR [rbp-0x38]
  402774:	add    rcx,0x18
  402778:	lea    rsi,[rbp-0x10]
  40277c:	mov    rdi,rcx
  40277f:	call   4047e0 <mmk_memcmp@@Base>
  402784:	cmp    eax,0x0
  402787:	je     402792 <main@@Base+0x252>
  40278d:	jmp    4027b0 <main@@Base+0x270>
  402792:	jmp    402797 <main@@Base+0x257>
  402797:	jmp    40279c <main@@Base+0x25c>
  40279c:	jmp    4027a1 <main@@Base+0x261>
  4027a1:	mov    rax,QWORD PTR [rbp-0x38]
  4027a5:	mov    rax,QWORD PTR [rax]
  4027a8:	add    rax,QWORD PTR [rbp-0x30]
  4027ac:	mov    QWORD PTR [rbp-0x30],rax
  4027b0:	jmp    4027b5 <main@@Base+0x275>
  4027b5:	mov    rdi,QWORD PTR [rbp-0x20]
  4027b9:	mov    rax,QWORD PTR [rbp-0x38]
  4027bd:	mov    rsi,rax
  4027c0:	call   4031f0 <mmk_mock_params_next@@Base>
  4027c5:	mov    QWORD PTR [rbp-0x38],rax
  4027c9:	jmp    402644 <main@@Base+0x104>
  4027ce:	mov    rax,QWORD PTR [rbp-0x18]
  4027d2:	mov    QWORD PTR [rbp-0x58],rax
  4027d6:	cmp    QWORD PTR [rbp-0x58],0x0
  4027db:	je     402806 <main@@Base+0x2c6>
  4027e1:	mov    rax,QWORD PTR [rbp-0x58]
  4027e5:	mov    rax,QWORD PTR [rax+0x10]
  4027e9:	mov    QWORD PTR [rbp-0x60],rax
  4027ed:	mov    rax,QWORD PTR [rbp-0x58]
  4027f1:	mov    rdi,rax
  4027f4:	call   404c10 <mmk_free@@Base>
  4027f9:	mov    rax,QWORD PTR [rbp-0x60]
  4027fd:	mov    QWORD PTR [rbp-0x58],rax
  402801:	jmp    4027d6 <main@@Base+0x296>
  402806:	mov    rdi,QWORD PTR [rbp-0x30]
  40280a:	call   4043d0 <mmk_verify_set_times@@Base>
  40280f:	jmp    402814 <main@@Base+0x2d4>
  402814:	jmp    402819 <main@@Base+0x2d9>
  402819:	jmp    40281e <main@@Base+0x2de>
  40281e:	mov    rax,QWORD PTR [rip+0x58ab]        # 4080d0 <__bss_start@@Base+0x8>
  402825:	mov    QWORD PTR [rbp-0x8],rax
  402829:	jmp    402b9b <main@@Base+0x65b>
  40282e:	mov    QWORD PTR [rbp-0x88],0x0
  402839:	mov    QWORD PTR [rbp-0x80],0x0
  402841:	mov    QWORD PTR [rbp-0x78],0x0
  402849:	mov    rax,QWORD PTR [rbp-0x10]
  40284d:	mov    QWORD PTR [rbp-0x70],rax
  402851:	lea    rax,[rbp-0x88]
  402858:	mov    QWORD PTR [rbp-0x68],rax
  40285c:	jmp    402861 <main@@Base+0x321>
  402861:	mov    eax,0x20
  402866:	mov    esi,eax
  402868:	mov    rcx,QWORD PTR [rbp-0x68]
  40286c:	mov    rdi,rcx
  40286f:	call   404530 <mmk_verify_register_call@@Base>
  402874:	call   403260 <mmk_mock_get_params@@Base>
  402879:	mov    QWORD PTR [rbp-0x90],rax
  402880:	cmp    QWORD PTR [rbp-0x90],0x0
  402888:	je     402b86 <main@@Base+0x646>
  40288e:	mov    rax,QWORD PTR [rbp-0x90]
  402895:	mov    QWORD PTR [rbp-0x98],rax
  40289c:	mov    rax,QWORD PTR [rbp-0x90]
  4028a3:	mov    rax,QWORD PTR [rax]
  4028a6:	mov    QWORD PTR [rbp-0xa0],rax
  4028ad:	mov    rax,QWORD PTR [rbp-0xa0]
  4028b4:	cmp    QWORD PTR [rax+0x10],0x0
  4028b9:	je     4029e9 <main@@Base+0x4a9>
  4028bf:	mov    rax,QWORD PTR [rbp-0xa0]
  4028c6:	mov    rax,QWORD PTR [rax+0x10]
  4028ca:	mov    QWORD PTR [rbp-0xa0],rax
  4028d1:	mov    rax,QWORD PTR [rbp-0xa0]
  4028d8:	cmp    DWORD PTR [rax],0x0
  4028db:	jne    4028e6 <main@@Base+0x3a6>
  4028e1:	jmp    4029e4 <main@@Base+0x4a4>
  4028e6:	mov    rax,QWORD PTR [rbp-0xa0]
  4028ed:	mov    ecx,DWORD PTR [rax]
  4028ef:	and    ecx,0x80000000
  4028f5:	cmp    ecx,0x0
  4028f8:	je     402997 <main@@Base+0x457>
  4028fe:	mov    eax,0x8
  402903:	mov    edx,eax
  402905:	lea    rcx,[rbp-0x10]
  402909:	mov    rsi,rcx
  40290c:	mov    rdi,rsi
  40290f:	mov    rsi,rcx
  402912:	call   4047e0 <mmk_memcmp@@Base>
  402917:	mov    DWORD PTR [rbp-0xa4],eax
  40291d:	cmp    DWORD PTR [rbp-0xa4],0x0
  402924:	jne    402944 <main@@Base+0x404>
  40292a:	mov    rax,QWORD PTR [rbp-0xa0]
  402931:	mov    ecx,DWORD PTR [rax]
  402933:	and    ecx,0x2
  402936:	cmp    ecx,0x0
  402939:	jne    402944 <main@@Base+0x404>
  40293f:	jmp    402b6f <main@@Base+0x62f>
  402944:	cmp    DWORD PTR [rbp-0xa4],0x0
  40294b:	jge    40296b <main@@Base+0x42b>
  402951:	mov    rax,QWORD PTR [rbp-0xa0]
  402958:	mov    ecx,DWORD PTR [rax]
  40295a:	and    ecx,0x4
  40295d:	cmp    ecx,0x0
  402960:	jne    40296b <main@@Base+0x42b>
  402966:	jmp    402b6f <main@@Base+0x62f>
  40296b:	cmp    DWORD PTR [rbp-0xa4],0x0
  402972:	jle    402992 <main@@Base+0x452>
  402978:	mov    rax,QWORD PTR [rbp-0xa0]
  40297f:	mov    ecx,DWORD PTR [rax]
  402981:	and    ecx,0x8
  402984:	cmp    ecx,0x0
  402987:	jne    402992 <main@@Base+0x452>
  40298d:	jmp    402b6f <main@@Base+0x62f>
  402992:	jmp    4029df <main@@Base+0x49f>
  402997:	mov    rax,QWORD PTR [rbp-0xa0]
  40299e:	cmp    DWORD PTR [rax],0x1
  4029a1:	jne    4029da <main@@Base+0x49a>
  4029a7:	mov    rdi,QWORD PTR [rbp-0xa0]
  4029ae:	call   402e90 <mmk_matcher_get_predicate@@Base>
  4029b3:	mov    QWORD PTR [rbp-0xb0],rax
  4029ba:	mov    rax,QWORD PTR [rbp-0xb0]
  4029c1:	mov    rdi,QWORD PTR [rbp-0x10]
  4029c5:	call   rax
  4029c7:	cmp    eax,0x0
  4029ca:	jne    4029d5 <main@@Base+0x495>
  4029d0:	jmp    402b6f <main@@Base+0x62f>
  4029d5:	jmp    4029da <main@@Base+0x49a>
  4029da:	jmp    4029df <main@@Base+0x49f>
  4029df:	jmp    4029e4 <main@@Base+0x4a4>
  4029e4:	jmp    402a1e <main@@Base+0x4de>
  4029e9:	mov    eax,0x8
  4029ee:	mov    edx,eax
  4029f0:	lea    rcx,[rbp-0x10]
  4029f4:	mov    rsi,QWORD PTR [rbp-0x98]
  4029fb:	add    rsi,0x30
  4029ff:	add    rsi,0x18
  402a03:	mov    rdi,rcx
  402a06:	call   4047e0 <mmk_memcmp@@Base>
  402a0b:	cmp    eax,0x0
  402a0e:	je     402a19 <main@@Base+0x4d9>
  402a14:	jmp    402b6f <main@@Base+0x62f>
  402a19:	jmp    402a1e <main@@Base+0x4de>
  402a1e:	mov    rax,QWORD PTR [rbp-0x98]
  402a25:	cmp    DWORD PTR [rax+0x14],0x0
  402a29:	je     402a4c <main@@Base+0x50c>
  402a2f:	mov    rax,QWORD PTR [rbp-0x98]
  402a36:	mov    ecx,DWORD PTR [rax+0x14]
  402a39:	mov    DWORD PTR [rbp-0xc4],ecx
  402a3f:	call   402050 <__errno_location@plt>
  402a44:	mov    ecx,DWORD PTR [rbp-0xc4]
  402a4a:	mov    DWORD PTR [rax],ecx
  402a4c:	mov    rax,QWORD PTR [rbp-0x98]
  402a53:	cmp    QWORD PTR [rax+0x20],0x0
  402a58:	je     402ab6 <main@@Base+0x576>
  402a5e:	mov    rax,QWORD PTR [rbp-0x98]
  402a65:	cmp    QWORD PTR [rax+0x18],0x0
  402a6a:	jne    402ab6 <main@@Base+0x576>
  402a70:	jmp    402a75 <main@@Base+0x535>
  402a75:	jmp    402a7a <main@@Base+0x53a>
  402a7a:	jmp    402a7f <main@@Base+0x53f>
  402a7f:	mov    rax,QWORD PTR [rbp-0x98]
  402a86:	mov    rax,QWORD PTR [rax+0x20]
  402a8a:	mov    rdi,QWORD PTR [rbp-0x10]
  402a8e:	call   rax
  402a90:	mov    QWORD PTR [rbp-0xb8],rax
  402a97:	jmp    402a9c <main@@Base+0x55c>
  402a9c:	jmp    402aa1 <main@@Base+0x561>
  402aa1:	jmp    402aa6 <main@@Base+0x566>
  402aa6:	mov    rax,QWORD PTR [rbp-0xb8]
  402aad:	mov    QWORD PTR [rbp-0x8],rax
  402ab1:	jmp    402b9b <main@@Base+0x65b>
  402ab6:	mov    rax,QWORD PTR [rbp-0x98]
  402abd:	cmp    QWORD PTR [rax+0x20],0x0
  402ac2:	je     402b22 <main@@Base+0x5e2>
  402ac8:	mov    rax,QWORD PTR [rbp-0x98]
  402acf:	cmp    QWORD PTR [rax+0x18],0x0
  402ad4:	je     402b22 <main@@Base+0x5e2>
  402ada:	jmp    402adf <main@@Base+0x59f>
  402adf:	jmp    402ae4 <main@@Base+0x5a4>
  402ae4:	mov    rax,QWORD PTR [rbp-0x98]
  402aeb:	mov    rax,QWORD PTR [rax+0x20]
  402aef:	mov    rdi,QWORD PTR [rbp-0x10]
  402af3:	call   rax
  402af5:	mov    QWORD PTR [rbp-0xd0],rax
  402afc:	jmp    402b01 <main@@Base+0x5c1>
  402b01:	jmp    402b06 <main@@Base+0x5c6>
  402b06:	jmp    402b0b <main@@Base+0x5cb>
  402b0b:	mov    rax,QWORD PTR [rbp-0x98]
  402b12:	mov    rax,QWORD PTR [rax+0x18]
  402b16:	mov    rax,QWORD PTR [rax]
  402b19:	mov    QWORD PTR [rbp-0x8],rax
  402b1d:	jmp    402b9b <main@@Base+0x65b>
  402b22:	mov    rax,QWORD PTR [rbp-0x98]
  402b29:	cmp    QWORD PTR [rax+0x18],0x0
  402b2e:	je     402b55 <main@@Base+0x615>
  402b34:	jmp    402b39 <main@@Base+0x5f9>
  402b39:	jmp    402b3e <main@@Base+0x5fe>
  402b3e:	mov    rax,QWORD PTR [rbp-0x98]
  402b45:	mov    rax,QWORD PTR [rax+0x18]
  402b49:	mov    rax,QWORD PTR [rax]
  402b4c:	mov    QWORD PTR [rbp-0x8],rax
  402b50:	jmp    402b9b <main@@Base+0x65b>
  402b55:	jmp    402b5a <main@@Base+0x61a>
  402b5a:	jmp    402b5f <main@@Base+0x61f>
  402b5f:	mov    rax,QWORD PTR [rip+0x556a]        # 4080d0 <__bss_start@@Base+0x8>
  402b66:	mov    QWORD PTR [rbp-0x8],rax
  402b6a:	jmp    402b9b <main@@Base+0x65b>
  402b6f:	mov    rax,QWORD PTR [rbp-0x90]
  402b76:	mov    rax,QWORD PTR [rax+0x8]
  402b7a:	mov    QWORD PTR [rbp-0x90],rax
  402b81:	jmp    402880 <main@@Base+0x340>
  402b86:	jmp    402b8b <main@@Base+0x64b>
  402b8b:	jmp    402b90 <main@@Base+0x650>
  402b90:	mov    rax,QWORD PTR [rip+0x5539]        # 4080d0 <__bss_start@@Base+0x8>
  402b97:	mov    QWORD PTR [rbp-0x8],rax
  402b9b:	mov    rax,QWORD PTR [rbp-0x8]
  402b9f:	add    rsp,0xd0
  402ba6:	pop    rbp
  402ba7:	ret    
  402ba8:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402bb0 <mmk_init@@Base>:
  402bb0:	push   rbp
  402bb1:	mov    rbp,rsp
  402bb4:	sub    rsp,0x10
  402bb8:	cmp    DWORD PTR [rip+0x5519],0x0        # 4080d8 <__bss_start@@Base+0x10>
  402bbf:	je     402bca <mmk_init@@Base+0x1a>
  402bc5:	jmp    402c38 <mmk_init@@Base+0x88>
  402bca:	call   403290 <plt_init_ctx@@Base>
  402bcf:	mov    QWORD PTR [rip+0x550a],rax        # 4080e0 <__bss_start@@Base+0x18>
  402bd6:	mov    rax,0xffffffffffffffff
  402bdd:	cmp    QWORD PTR [rip+0x54fc],rax        # 4080e0 <__bss_start@@Base+0x18>
  402be4:	jne    402c1d <mmk_init@@Base+0x6d>
  402bea:	mov    rax,QWORD PTR [rip+0x5407]        # 407ff8 <stderr@GLIBC_2.2.5>
  402bf1:	mov    rdi,QWORD PTR [rax]
  402bf4:	lea    rsi,[rip+0x2421]        # 40501c <_IO_stdin_used@@Base+0x1c>
  402bfb:	lea    rdx,[rip+0x24db]        # 4050dd <_IO_stdin_used@@Base+0xdd>
  402c02:	mov    ecx,0x2d
  402c07:	lea    r8,[rip+0x2521]        # 40512f <_IO_stdin_used@@Base+0x12f>
  402c0e:	mov    al,0x0
  402c10:	call   4020e0 <fprintf@plt>
  402c15:	mov    DWORD PTR [rbp-0x4],eax
  402c18:	call   402040 <abort@plt>
  402c1d:	jmp    402c22 <mmk_init@@Base+0x72>
  402c22:	mov    rdi,QWORD PTR [rip+0x54b7]        # 4080e0 <__bss_start@@Base+0x18>
  402c29:	call   404c40 <mmk_init_vital_functions@@Base>
  402c2e:	mov    DWORD PTR [rip+0x54a0],0x1        # 4080d8 <__bss_start@@Base+0x10>
  402c38:	add    rsp,0x10
  402c3c:	pop    rbp
  402c3d:	ret    
  402c3e:	xchg   ax,ax

0000000000402c40 <mmk_plt_ctx@@Base>:
  402c40:	push   rbp
  402c41:	mov    rbp,rsp
  402c44:	sub    rsp,0x10
  402c48:	jmp    402c4d <mmk_plt_ctx@@Base+0xd>
  402c4d:	cmp    DWORD PTR [rip+0x5484],0x0        # 4080d8 <__bss_start@@Base+0x10>
  402c54:	jne    402c8d <mmk_plt_ctx@@Base+0x4d>
  402c5a:	mov    rax,QWORD PTR [rip+0x5397]        # 407ff8 <stderr@GLIBC_2.2.5>
  402c61:	mov    rdi,QWORD PTR [rax]
  402c64:	lea    rsi,[rip+0x23b1]        # 40501c <_IO_stdin_used@@Base+0x1c>
  402c6b:	lea    rdx,[rip+0x246b]        # 4050dd <_IO_stdin_used@@Base+0xdd>
  402c72:	mov    ecx,0x36
  402c77:	lea    r8,[rip+0x24c8]        # 405146 <_IO_stdin_used@@Base+0x146>
  402c7e:	mov    al,0x0
  402c80:	call   4020e0 <fprintf@plt>
  402c85:	mov    DWORD PTR [rbp-0x4],eax
  402c88:	call   402040 <abort@plt>
  402c8d:	jmp    402c92 <mmk_plt_ctx@@Base+0x52>
  402c92:	mov    rax,QWORD PTR [rip+0x5447]        # 4080e0 <__bss_start@@Base+0x18>
  402c99:	add    rsp,0x10
  402c9d:	pop    rbp
  402c9e:	ret    
  402c9f:	nop

0000000000402ca0 <mmk_reset@@Base>:
  402ca0:	push   rbp
  402ca1:	mov    rbp,rsp
  402ca4:	sub    rsp,0x20
  402ca8:	mov    QWORD PTR [rbp-0x8],rdi
  402cac:	cmp    QWORD PTR [rbp-0x8],0x0
  402cb1:	jne    402cbc <mmk_reset@@Base+0x1c>
  402cb7:	jmp    402cdf <mmk_reset@@Base+0x3f>
  402cbc:	mov    rdi,QWORD PTR [rbp-0x8]
  402cc0:	call   404210 <mmk_ask_ctx@@Base>
  402cc5:	mov    QWORD PTR [rbp-0x10],rax
  402cc9:	mov    rdi,QWORD PTR [rbp-0x10]
  402ccd:	call   403e30 <mmk_stub_context@@Base>
  402cd2:	mov    QWORD PTR [rbp-0x18],rax
  402cd6:	mov    rdi,QWORD PTR [rbp-0x18]
  402cda:	call   4030c0 <mmk_mock_destroy_internal@@Base>
  402cdf:	add    rsp,0x20
  402ce3:	pop    rbp
  402ce4:	ret    
  402ce5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402cef:	nop

0000000000402cf0 <mmk_matcher_init@@Base>:
  402cf0:	push   rbp
  402cf1:	mov    rbp,rsp
  402cf4:	sub    rsp,0x40
  402cf8:	mov    DWORD PTR [rbp-0x4],edi
  402cfb:	mov    edi,0x18
  402d00:	call   404bb0 <mmk_malloc@@Base>
  402d05:	mov    QWORD PTR [rbp-0x10],rax
  402d09:	mov    rax,QWORD PTR [rbp-0x10]
  402d0d:	vxorps xmm0,xmm0,xmm0
  402d11:	vmovdqa XMMWORD PTR [rbp-0x30],xmm0
  402d16:	mov    QWORD PTR [rbp-0x20],0x0
  402d1e:	mov    ecx,DWORD PTR [rbp-0x4]
  402d21:	mov    DWORD PTR [rbp-0x30],ecx
  402d24:	mov    rdi,QWORD PTR [rbp-0x20]
  402d28:	mov    QWORD PTR [rax+0x10],rdi
  402d2c:	vmovdqa xmm0,XMMWORD PTR [rbp-0x30]
  402d31:	vmovdqu XMMWORD PTR [rax],xmm0
  402d35:	mov    rax,QWORD PTR [rbp-0x10]
  402d39:	mov    QWORD PTR [rbp-0x38],rax
  402d3d:	data16 data16 data16 mov rax,QWORD PTR fs:0x0
  402d49:	mov    rcx,QWORD PTR [rbp-0x38]
  402d4d:	mov    QWORD PTR [rax-0x28],rcx
  402d54:	add    rsp,0x40
  402d58:	pop    rbp
  402d59:	ret    
  402d5a:	nop    WORD PTR [rax+rax*1+0x0]

0000000000402d60 <mmk_matcher_term@@Base>:
  402d60:	push   rbp
  402d61:	mov    rbp,rsp
  402d64:	data16 data16 data16 mov rax,QWORD PTR fs:0x0
  402d70:	mov    QWORD PTR [rax-0x28],0x0
  402d7b:	pop    rbp
  402d7c:	ret    
  402d7d:	nop    DWORD PTR [rax]

0000000000402d80 <mmk_matcher_ctx@@Base>:
  402d80:	push   rbp
  402d81:	mov    rbp,rsp
  402d84:	data16 data16 data16 mov rax,QWORD PTR fs:0x0
  402d90:	mov    rax,QWORD PTR [rax-0x28]
  402d97:	pop    rbp
  402d98:	ret    
  402d99:	nop    DWORD PTR [rax+0x0]

0000000000402da0 <mmk_matcher_add@@Base>:
  402da0:	push   rbp
  402da1:	mov    rbp,rsp
  402da4:	push   rbx
  402da5:	sub    rsp,0x48
  402da9:	mov    DWORD PTR [rbp-0xc],edi
  402dac:	mov    DWORD PTR [rbp-0x10],esi
  402daf:	mov    esi,0x18
  402db4:	mov    edi,esi
  402db6:	call   404bb0 <mmk_malloc@@Base>
  402dbb:	mov    QWORD PTR [rbp-0x18],rax
  402dbf:	data16 data16 data16 mov rax,QWORD PTR fs:0x0
  402dcb:	mov    rcx,QWORD PTR [rax-0x28]
  402dd2:	mov    QWORD PTR [rbp-0x20],rcx
  402dd6:	mov    rcx,QWORD PTR [rbp-0x18]
  402dda:	mov    ebx,DWORD PTR [rbp-0xc]
  402ddd:	mov    DWORD PTR [rbp-0x38],ebx
  402de0:	movsxd rdx,DWORD PTR [rbp-0x10]
  402de4:	mov    QWORD PTR [rbp-0x30],rdx
  402de8:	mov    QWORD PTR [rbp-0x28],0x0
  402df0:	mov    rdx,QWORD PTR [rbp-0x28]
  402df4:	mov    QWORD PTR [rcx+0x10],rdx
  402df8:	vmovdqu xmm0,XMMWORD PTR [rbp-0x38]
  402dfd:	vmovdqu XMMWORD PTR [rcx],xmm0
  402e01:	mov    rax,QWORD PTR [rax-0x28]
  402e08:	mov    rax,QWORD PTR [rax+0x10]
  402e0c:	mov    QWORD PTR [rbp-0x40],rax
  402e10:	xor    eax,eax
  402e12:	mov    cl,al
  402e14:	cmp    QWORD PTR [rbp-0x40],0x0
  402e19:	mov    BYTE PTR [rbp-0x41],cl
  402e1c:	je     402e38 <mmk_matcher_add@@Base+0x98>
  402e22:	mov    rax,QWORD PTR [rbp-0x40]
  402e26:	mov    rax,QWORD PTR [rax+0x8]
  402e2a:	mov    rcx,QWORD PTR [rbp-0x18]
  402e2e:	cmp    rax,QWORD PTR [rcx+0x8]
  402e32:	setb   dl
  402e35:	mov    BYTE PTR [rbp-0x41],dl
  402e38:	mov    al,BYTE PTR [rbp-0x41]
  402e3b:	test   al,0x1
  402e3d:	jne    402e48 <mmk_matcher_add@@Base+0xa8>
  402e43:	jmp    402e66 <mmk_matcher_add@@Base+0xc6>
  402e48:	jmp    402e4d <mmk_matcher_add@@Base+0xad>
  402e4d:	mov    rax,QWORD PTR [rbp-0x40]
  402e51:	mov    QWORD PTR [rbp-0x20],rax
  402e55:	mov    rax,QWORD PTR [rbp-0x40]
  402e59:	mov    rax,QWORD PTR [rax+0x10]
  402e5d:	mov    QWORD PTR [rbp-0x40],rax
  402e61:	jmp    402e10 <mmk_matcher_add@@Base+0x70>
  402e66:	mov    rax,QWORD PTR [rbp-0x20]
  402e6a:	mov    rax,QWORD PTR [rax+0x10]
  402e6e:	mov    rcx,QWORD PTR [rbp-0x18]
  402e72:	mov    QWORD PTR [rcx+0x10],rax
  402e76:	mov    rax,QWORD PTR [rbp-0x18]
  402e7a:	mov    rcx,QWORD PTR [rbp-0x20]
  402e7e:	mov    QWORD PTR [rcx+0x10],rax
  402e82:	add    rsp,0x48
  402e86:	pop    rbx
  402e87:	pop    rbp
  402e88:	ret    
  402e89:	nop    DWORD PTR [rax+0x0]

0000000000402e90 <mmk_matcher_get_predicate@@Base>:
  402e90:	push   rbp
  402e91:	mov    rbp,rsp
  402e94:	mov    QWORD PTR [rbp-0x8],rdi
  402e98:	mov    rdi,QWORD PTR [rbp-0x8]
  402e9c:	add    rdi,0x18
  402ea0:	mov    rax,rdi
  402ea3:	pop    rbp
  402ea4:	ret    
  402ea5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402eaf:	nop

0000000000402eb0 <mmk_mock_create_internal@@Base>:
  402eb0:	push   rbp
  402eb1:	mov    rbp,rsp
  402eb4:	sub    rsp,0x90
  402ebb:	mov    QWORD PTR [rbp-0x8],rdi
  402ebf:	mov    QWORD PTR [rbp-0x10],rsi
  402ec3:	call   402bb0 <mmk_init@@Base>
  402ec8:	mov    eax,0x28
  402ecd:	mov    edi,eax
  402ecf:	call   404bb0 <mmk_malloc@@Base>
  402ed4:	mov    QWORD PTR [rbp-0x18],rax
  402ed8:	cmp    QWORD PTR [rbp-0x18],0x0
  402edd:	jne    402f16 <mmk_mock_create_internal@@Base+0x66>
  402ee3:	mov    rax,QWORD PTR [rip+0x510e]        # 407ff8 <stderr@GLIBC_2.2.5>
  402eea:	mov    rdi,QWORD PTR [rax]
  402eed:	lea    rsi,[rip+0x2128]        # 40501c <_IO_stdin_used@@Base+0x1c>
  402ef4:	lea    rdx,[rip+0x225c]        # 405157 <_IO_stdin_used@@Base+0x157>
  402efb:	mov    ecx,0x24
  402f00:	lea    r8,[rip+0x22a2]        # 4051a9 <_IO_stdin_used@@Base+0x1a9>
  402f07:	mov    al,0x0
  402f09:	call   4020e0 <fprintf@plt>
  402f0e:	mov    DWORD PTR [rbp-0x60],eax
  402f11:	call   402040 <abort@plt>
  402f16:	jmp    402f1b <mmk_mock_create_internal@@Base+0x6b>
  402f1b:	mov    eax,0x28
  402f20:	mov    ecx,eax
  402f22:	xor    esi,esi
  402f24:	mov    rdx,QWORD PTR [rbp-0x18]
  402f28:	lea    rdi,[rbp-0x40]
  402f2c:	mov    r8,rdi
  402f2f:	mov    QWORD PTR [rbp-0x68],rdi
  402f33:	mov    rdi,r8
  402f36:	mov    QWORD PTR [rbp-0x70],rdx
  402f3a:	mov    rdx,rcx
  402f3d:	mov    QWORD PTR [rbp-0x78],rcx
  402f41:	call   4020b0 <memset@plt>
  402f46:	mov    rcx,QWORD PTR [rbp-0x70]
  402f4a:	mov    rdx,QWORD PTR [rbp-0x68]
  402f4e:	mov    rdi,rcx
  402f51:	mov    rsi,rdx
  402f54:	mov    rdx,QWORD PTR [rbp-0x78]
  402f58:	call   4020f0 <memcpy@plt>
  402f5d:	mov    rdi,QWORD PTR [rbp-0x8]
  402f61:	mov    esi,0x40
  402f66:	call   4049d0 <mmk_strchr@@Base>
  402f6b:	mov    QWORD PTR [rbp-0x48],rax
  402f6f:	cmp    QWORD PTR [rbp-0x48],0x0
  402f74:	jne    402f8c <mmk_mock_create_internal@@Base+0xdc>
  402f7a:	mov    rdi,QWORD PTR [rbp-0x8]
  402f7e:	call   404b10 <mmk_strlen@@Base>
  402f83:	mov    QWORD PTR [rbp-0x50],rax
  402f87:	jmp    402f9b <mmk_mock_create_internal@@Base+0xeb>
  402f8c:	mov    rax,QWORD PTR [rbp-0x48]
  402f90:	mov    rcx,QWORD PTR [rbp-0x8]
  402f94:	sub    rax,rcx
  402f97:	mov    QWORD PTR [rbp-0x50],rax
  402f9b:	mov    rax,QWORD PTR [rbp-0x50]
  402f9f:	add    rax,0x1
  402fa3:	mov    rdi,rax
  402fa6:	call   404bb0 <mmk_malloc@@Base>
  402fab:	mov    QWORD PTR [rbp-0x58],rax
  402faf:	mov    rdi,QWORD PTR [rbp-0x58]
  402fb3:	mov    rsi,QWORD PTR [rbp-0x8]
  402fb7:	mov    rdx,QWORD PTR [rbp-0x50]
  402fbb:	call   404a80 <mmk_strncpy@@Base>
  402fc0:	mov    rdx,QWORD PTR [rbp-0x58]
  402fc4:	mov    rsi,QWORD PTR [rbp-0x50]
  402fc8:	mov    BYTE PTR [rdx+rsi*1],0x0
  402fcc:	cmp    QWORD PTR [rbp-0x48],0x0
  402fd1:	mov    cl,0x1
  402fd3:	mov    QWORD PTR [rbp-0x80],rax
  402fd7:	mov    BYTE PTR [rbp-0x81],cl
  402fdd:	je     40300f <mmk_mock_create_internal@@Base+0x15f>
  402fe3:	mov    eax,0x4
  402fe8:	mov    edx,eax
  402fea:	mov    rcx,QWORD PTR [rbp-0x48]
  402fee:	add    rcx,0x1
  402ff2:	mov    rdi,rcx
  402ff5:	lea    rsi,[rip+0x21b1]        # 4051ad <_IO_stdin_used@@Base+0x1ad>
  402ffc:	call   4048f0 <mmk_strneq@@Base>
  403001:	cmp    eax,0x0
  403004:	setne  r8b
  403008:	mov    BYTE PTR [rbp-0x81],r8b
  40300f:	mov    al,BYTE PTR [rbp-0x81]
  403015:	and    al,0x1
  403017:	movzx  ecx,al
  40301a:	mov    DWORD PTR [rbp-0x5c],ecx
  40301d:	mov    rdi,QWORD PTR [rbp-0x8]
  403021:	mov    rsi,QWORD PTR [rbp-0x10]
  403025:	mov    rdx,QWORD PTR [rbp-0x18]
  403029:	call   404100 <mmk_stub_create@@Base>
  40302e:	mov    rdx,QWORD PTR [rbp-0x18]
  403032:	mov    QWORD PTR [rdx+0x8],rax
  403036:	mov    rax,QWORD PTR [rbp-0x18]
  40303a:	cmp    QWORD PTR [rax+0x8],0x0
  40303f:	jne    40306c <mmk_mock_create_internal@@Base+0x1bc>
  403045:	mov    rax,QWORD PTR [rip+0x4fac]        # 407ff8 <stderr@GLIBC_2.2.5>
  40304c:	mov    rdi,QWORD PTR [rax]
  40304f:	mov    rdx,QWORD PTR [rbp-0x8]
  403053:	lea    rsi,[rip+0x2158]        # 4051b2 <_IO_stdin_used@@Base+0x1b2>
  40305a:	mov    al,0x0
  40305c:	call   4020e0 <fprintf@plt>
  403061:	mov    DWORD PTR [rbp-0x88],eax
  403067:	call   402040 <abort@plt>
  40306c:	cmp    DWORD PTR [rbp-0x5c],0x0
  403070:	jne    403096 <mmk_mock_create_internal@@Base+0x1e6>
  403076:	mov    rdi,QWORD PTR [rbp-0x58]
  40307a:	mov    rsi,QWORD PTR [rbp-0x10]
  40307e:	mov    rax,QWORD PTR [rbp-0x18]
  403082:	mov    rdx,rax
  403085:	call   404100 <mmk_stub_create@@Base>
  40308a:	mov    rdx,QWORD PTR [rbp-0x18]
  40308e:	mov    rdx,QWORD PTR [rdx+0x8]
  403092:	mov    QWORD PTR [rdx+0x48],rax
  403096:	mov    rdi,QWORD PTR [rbp-0x58]
  40309a:	call   404c10 <mmk_free@@Base>
  40309f:	mov    rdi,QWORD PTR [rbp-0x18]
  4030a3:	mov    rdi,QWORD PTR [rdi+0x8]
  4030a7:	mov    rax,QWORD PTR [rdi+0x40]
  4030ab:	add    rsp,0x90
  4030b2:	pop    rbp
  4030b3:	ret    
  4030b4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4030be:	xchg   ax,ax

00000000004030c0 <mmk_mock_destroy_internal@@Base>:
  4030c0:	push   rbp
  4030c1:	mov    rbp,rsp
  4030c4:	sub    rsp,0x40
  4030c8:	mov    QWORD PTR [rbp-0x8],rdi
  4030cc:	mov    rdi,QWORD PTR [rbp-0x8]
  4030d0:	mov    rdi,QWORD PTR [rdi+0x8]
  4030d4:	mov    QWORD PTR [rbp-0x10],rdi
  4030d8:	cmp    QWORD PTR [rbp-0x10],0x0
  4030dd:	je     403105 <mmk_mock_destroy_internal@@Base+0x45>
  4030e3:	mov    rax,QWORD PTR [rbp-0x10]
  4030e7:	mov    rax,QWORD PTR [rax+0x48]
  4030eb:	mov    QWORD PTR [rbp-0x18],rax
  4030ef:	mov    rdi,QWORD PTR [rbp-0x10]
  4030f3:	call   4041e0 <mmk_stub_destroy@@Base>
  4030f8:	mov    rax,QWORD PTR [rbp-0x18]
  4030fc:	mov    QWORD PTR [rbp-0x10],rax
  403100:	jmp    4030d8 <mmk_mock_destroy_internal@@Base+0x18>
  403105:	mov    rax,QWORD PTR [rbp-0x8]
  403109:	mov    rdi,QWORD PTR [rax+0x10]
  40310d:	call   404c10 <mmk_free@@Base>
  403112:	mov    rax,QWORD PTR [rbp-0x8]
  403116:	mov    rax,QWORD PTR [rax]
  403119:	mov    QWORD PTR [rbp-0x20],rax
  40311d:	cmp    QWORD PTR [rbp-0x20],0x0
  403122:	je     403188 <mmk_mock_destroy_internal@@Base+0xc8>
  403128:	mov    rax,QWORD PTR [rbp-0x20]
  40312c:	mov    rax,QWORD PTR [rax+0x8]
  403130:	mov    QWORD PTR [rbp-0x28],rax
  403134:	mov    rax,QWORD PTR [rbp-0x20]
  403138:	mov    rax,QWORD PTR [rax]
  40313b:	mov    QWORD PTR [rbp-0x30],rax
  40313f:	cmp    QWORD PTR [rbp-0x30],0x0
  403144:	je     40316f <mmk_mock_destroy_internal@@Base+0xaf>
  40314a:	mov    rax,QWORD PTR [rbp-0x30]
  40314e:	mov    rax,QWORD PTR [rax+0x10]
  403152:	mov    QWORD PTR [rbp-0x38],rax
  403156:	mov    rax,QWORD PTR [rbp-0x30]
  40315a:	mov    rdi,rax
  40315d:	call   404c10 <mmk_free@@Base>
  403162:	mov    rax,QWORD PTR [rbp-0x38]
  403166:	mov    QWORD PTR [rbp-0x30],rax
  40316a:	jmp    40313f <mmk_mock_destroy_internal@@Base+0x7f>
  40316f:	mov    rax,QWORD PTR [rbp-0x20]
  403173:	mov    rdi,rax
  403176:	call   404c10 <mmk_free@@Base>
  40317b:	mov    rax,QWORD PTR [rbp-0x28]
  40317f:	mov    QWORD PTR [rbp-0x20],rax
  403183:	jmp    40311d <mmk_mock_destroy_internal@@Base+0x5d>
  403188:	mov    rax,QWORD PTR [rbp-0x8]
  40318c:	mov    rdi,rax
  40318f:	call   404c10 <mmk_free@@Base>
  403194:	add    rsp,0x40
  403198:	pop    rbp
  403199:	ret    
  40319a:	nop    WORD PTR [rax+rax*1+0x0]

00000000004031a0 <mmk_mock_params_begin@@Base>:
  4031a0:	push   rbp
  4031a1:	mov    rbp,rsp
  4031a4:	mov    QWORD PTR [rbp-0x10],rdi
  4031a8:	mov    rdi,QWORD PTR [rbp-0x10]
  4031ac:	cmp    QWORD PTR [rdi+0x10],0x0
  4031b1:	je     4031c6 <mmk_mock_params_begin@@Base+0x26>
  4031b7:	mov    rax,QWORD PTR [rbp-0x10]
  4031bb:	cmp    QWORD PTR [rax+0x18],0x0
  4031c0:	jne    4031d3 <mmk_mock_params_begin@@Base+0x33>
  4031c6:	mov    QWORD PTR [rbp-0x8],0x0
  4031ce:	jmp    4031e3 <mmk_mock_params_begin@@Base+0x43>
  4031d3:	mov    rax,QWORD PTR [rbp-0x10]
  4031d7:	mov    rax,QWORD PTR [rax+0x10]
  4031db:	add    rax,0x8
  4031df:	mov    QWORD PTR [rbp-0x8],rax
  4031e3:	mov    rax,QWORD PTR [rbp-0x8]
  4031e7:	pop    rbp
  4031e8:	ret    
  4031e9:	nop    DWORD PTR [rax+0x0]

00000000004031f0 <mmk_mock_params_next@@Base>:
  4031f0:	push   rbp
  4031f1:	mov    rbp,rsp
  4031f4:	mov    QWORD PTR [rbp-0x10],rdi
  4031f8:	mov    QWORD PTR [rbp-0x18],rsi
  4031fc:	mov    rsi,QWORD PTR [rbp-0x18]
  403200:	mov    QWORD PTR [rbp-0x20],rsi
  403204:	mov    rsi,QWORD PTR [rbp-0x20]
  403208:	mov    rsi,QWORD PTR [rsi-0x8]
  40320c:	mov    QWORD PTR [rbp-0x28],rsi
  403210:	mov    rsi,QWORD PTR [rbp-0x28]
  403214:	add    rsi,0x8
  403218:	add    rsi,QWORD PTR [rbp-0x20]
  40321c:	mov    QWORD PTR [rbp-0x20],rsi
  403220:	mov    rsi,QWORD PTR [rbp-0x20]
  403224:	mov    rdi,QWORD PTR [rbp-0x10]
  403228:	mov    rdi,QWORD PTR [rdi+0x10]
  40322c:	mov    rax,QWORD PTR [rbp-0x10]
  403230:	add    rdi,QWORD PTR [rax+0x18]
  403234:	cmp    rsi,rdi
  403237:	jb     40324a <mmk_mock_params_next@@Base+0x5a>
  40323d:	mov    QWORD PTR [rbp-0x8],0x0
  403245:	jmp    403252 <mmk_mock_params_next@@Base+0x62>
  40324a:	mov    rax,QWORD PTR [rbp-0x20]
  40324e:	mov    QWORD PTR [rbp-0x8],rax
  403252:	mov    rax,QWORD PTR [rbp-0x8]
  403256:	pop    rbp
  403257:	ret    
  403258:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403260 <mmk_mock_get_params@@Base>:
  403260:	push   rbp
  403261:	mov    rbp,rsp
  403264:	sub    rsp,0x10
  403268:	call   4040e0 <mmk_ctx@@Base>
  40326d:	mov    rdi,rax
  403270:	call   403e30 <mmk_stub_context@@Base>
  403275:	mov    QWORD PTR [rbp-0x8],rax
  403279:	mov    rax,QWORD PTR [rbp-0x8]
  40327d:	mov    rax,QWORD PTR [rax]
  403280:	add    rsp,0x10
  403284:	pop    rbp
  403285:	ret    
  403286:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000403290 <plt_init_ctx@@Base>:
  403290:	push   rbp
  403291:	mov    rbp,rsp
  403294:	mov    rax,0xffffffffffffffff
  40329b:	cmp    QWORD PTR [rip+0x4e1e],rax        # 4080c0 <__data_start@@Base+0x18>
  4032a2:	jne    4032b4 <plt_init_ctx@@Base+0x24>
  4032a8:	call   4032c0 <plt_init_ctx@@Base+0x30>
  4032ad:	mov    QWORD PTR [rip+0x4e0c],rax        # 4080c0 <__data_start@@Base+0x18>
  4032b4:	mov    rax,QWORD PTR [rip+0x4e05]        # 4080c0 <__data_start@@Base+0x18>
  4032bb:	pop    rbp
  4032bc:	ret    
  4032bd:	nop    DWORD PTR [rax]
  4032c0:	push   rbp
  4032c1:	mov    rbp,rsp
  4032c4:	sub    rsp,0x30
  4032c8:	mov    rax,QWORD PTR [rip+0x4d01]        # 407fd0 <_r_debug@GLIBC_2.2.5>
  4032cf:	mov    QWORD PTR [rbp-0x8],0x0
  4032d7:	mov    QWORD PTR [rbp-0x8],rax
  4032db:	cmp    QWORD PTR [rbp-0x8],0x0
  4032e0:	jne    40337e <plt_init_ctx@@Base+0xee>
  4032e6:	mov    rax,QWORD PTR [rip+0x4cfb]        # 407fe8 <environ@GLIBC_2.2.5>
  4032ed:	mov    rax,QWORD PTR [rax]
  4032f0:	mov    QWORD PTR [rbp-0x10],rax
  4032f4:	mov    rax,QWORD PTR [rbp-0x10]
  4032f8:	mov    rcx,rax
  4032fb:	add    rcx,0x8
  4032ff:	mov    QWORD PTR [rbp-0x10],rcx
  403303:	cmp    QWORD PTR [rax],0x0
  403307:	je     403312 <plt_init_ctx@@Base+0x82>
  40330d:	jmp    4032f4 <plt_init_ctx@@Base+0x64>
  403312:	mov    eax,0x3
  403317:	mov    esi,eax
  403319:	mov    rcx,QWORD PTR [rbp-0x10]
  40331d:	mov    QWORD PTR [rbp-0x18],rcx
  403321:	mov    rdi,QWORD PTR [rbp-0x18]
  403325:	call   403ad0 <plt_get_real_fn@@Base+0x80>
  40332a:	mov    edx,0x4
  40332f:	mov    esi,edx
  403331:	mov    QWORD PTR [rbp-0x20],rax
  403335:	mov    rdi,QWORD PTR [rbp-0x18]
  403339:	call   403ad0 <plt_get_real_fn@@Base+0x80>
  40333e:	mov    QWORD PTR [rbp-0x28],rax
  403342:	cmp    QWORD PTR [rbp-0x20],0xffffffffffffffff
  403347:	je     403379 <plt_init_ctx@@Base+0xe9>
  40334d:	cmp    QWORD PTR [rbp-0x28],0xffffffffffffffff
  403352:	je     403379 <plt_init_ctx@@Base+0xe9>
  403358:	mov    rax,QWORD PTR [rbp-0x20]
  40335c:	mov    rsi,QWORD PTR [rbp-0x28]
  403360:	mov    rdi,rax
  403363:	call   403b30 <plt_get_real_fn@@Base+0xe0>
  403368:	mov    QWORD PTR [rbp-0x30],rax
  40336c:	mov    rdi,QWORD PTR [rbp-0x30]
  403370:	call   403bb0 <plt_get_real_fn@@Base+0x160>
  403375:	mov    QWORD PTR [rbp-0x8],rax
  403379:	jmp    40337e <plt_init_ctx@@Base+0xee>
  40337e:	mov    rax,QWORD PTR [rbp-0x8]
  403382:	add    rsp,0x30
  403386:	pop    rbp
  403387:	ret    
  403388:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403390 <plt_get_lib@@Base>:
  403390:	push   rbp
  403391:	mov    rbp,rsp
  403394:	sub    rsp,0xb0
  40339b:	mov    QWORD PTR [rbp-0x10],rdi
  40339f:	mov    QWORD PTR [rbp-0x18],rsi
  4033a3:	cmp    QWORD PTR [rbp-0x18],0x0
  4033a8:	jne    4033b9 <plt_get_lib@@Base+0x29>
  4033ae:	lea    rax,[rip+0x1df8]        # 4051ad <_IO_stdin_used@@Base+0x1ad>
  4033b5:	mov    QWORD PTR [rbp-0x18],rax
  4033b9:	mov    eax,0x4
  4033be:	mov    edx,eax
  4033c0:	mov    DWORD PTR [rbp-0x1c],0x0
  4033c7:	mov    rdi,QWORD PTR [rbp-0x18]
  4033cb:	lea    rsi,[rip+0x1e13]        # 4051e5 <_IO_stdin_used@@Base+0x1e5>
  4033d2:	call   402060 <strncmp@plt>
  4033d7:	cmp    eax,0x0
  4033da:	jne    4033ec <plt_get_lib@@Base+0x5c>
  4033e0:	mov    DWORD PTR [rbp-0x1c],0x1
  4033e7:	jmp    403506 <plt_get_lib@@Base+0x176>
  4033ec:	mov    eax,0x5
  4033f1:	mov    edx,eax
  4033f3:	mov    rdi,QWORD PTR [rbp-0x18]
  4033f7:	lea    rsi,[rip+0x1dec]        # 4051ea <_IO_stdin_used@@Base+0x1ea>
  4033fe:	call   402060 <strncmp@plt>
  403403:	cmp    eax,0x0
  403406:	jne    403418 <plt_get_lib@@Base+0x88>
  40340c:	mov    DWORD PTR [rbp-0x1c],0x2
  403413:	jmp    403501 <plt_get_lib@@Base+0x171>
  403418:	mov    eax,0x4
  40341d:	mov    edx,eax
  40341f:	mov    rdi,QWORD PTR [rbp-0x18]
  403423:	lea    rsi,[rip+0x1dc6]        # 4051f0 <_IO_stdin_used@@Base+0x1f0>
  40342a:	call   402060 <strncmp@plt>
  40342f:	cmp    eax,0x0
  403432:	jne    403444 <plt_get_lib@@Base+0xb4>
  403438:	mov    DWORD PTR [rbp-0x1c],0x3
  40343f:	jmp    4034fc <plt_get_lib@@Base+0x16c>
  403444:	mov    rdi,QWORD PTR [rbp-0x18]
  403448:	lea    rsi,[rip+0x1d5e]        # 4051ad <_IO_stdin_used@@Base+0x1ad>
  40344f:	call   4020d0 <strcmp@plt>
  403454:	cmp    eax,0x0
  403457:	jne    40346d <plt_get_lib@@Base+0xdd>
  40345d:	lea    rax,[rip+0x1dd5]        # 405239 <_IO_stdin_used@@Base+0x239>
  403464:	mov    QWORD PTR [rbp-0x18],rax
  403468:	jmp    4034f7 <plt_get_lib@@Base+0x167>
  40346d:	mov    rdi,QWORD PTR [rbp-0x18]
  403471:	mov    esi,0x3a
  403476:	call   402090 <strchr@plt>
  40347b:	mov    QWORD PTR [rbp-0x28],rax
  40347f:	cmp    QWORD PTR [rbp-0x28],0x0
  403484:	je     4034d0 <plt_get_lib@@Base+0x140>
  40348a:	mov    rax,QWORD PTR [rip+0x4b67]        # 407ff8 <stderr@GLIBC_2.2.5>
  403491:	mov    rcx,QWORD PTR [rbp-0x28]
  403495:	mov    rdx,QWORD PTR [rbp-0x18]
  403499:	sub    rcx,rdx
  40349c:	add    rcx,0x1
  4034a0:	mov    QWORD PTR [rbp-0x30],rcx
  4034a4:	mov    rdi,QWORD PTR [rax]
  4034a7:	mov    rax,QWORD PTR [rbp-0x30]
  4034ab:	mov    esi,eax
  4034ad:	mov    rcx,QWORD PTR [rbp-0x18]
  4034b1:	lea    rax,[rip+0x1d3d]        # 4051f5 <_IO_stdin_used@@Base+0x1f5>
  4034b8:	mov    DWORD PTR [rbp-0x7c],esi
  4034bb:	mov    rsi,rax
  4034be:	mov    edx,DWORD PTR [rbp-0x7c]
  4034c1:	mov    al,0x0
  4034c3:	call   4020e0 <fprintf@plt>
  4034c8:	mov    DWORD PTR [rbp-0x80],eax
  4034cb:	jmp    4034f2 <plt_get_lib@@Base+0x162>
  4034d0:	mov    rax,QWORD PTR [rip+0x4b21]        # 407ff8 <stderr@GLIBC_2.2.5>
  4034d7:	mov    rdi,QWORD PTR [rax]
  4034da:	mov    rdx,QWORD PTR [rbp-0x18]
  4034de:	lea    rsi,[rip+0x1d32]        # 405217 <_IO_stdin_used@@Base+0x217>
  4034e5:	mov    al,0x0
  4034e7:	call   4020e0 <fprintf@plt>
  4034ec:	mov    DWORD PTR [rbp-0x84],eax
  4034f2:	call   402040 <abort@plt>
  4034f7:	jmp    4034fc <plt_get_lib@@Base+0x16c>
  4034fc:	jmp    403501 <plt_get_lib@@Base+0x171>
  403501:	jmp    403506 <plt_get_lib@@Base+0x176>
  403506:	cmp    DWORD PTR [rbp-0x1c],0x0
  40350a:	jne    403520 <plt_get_lib@@Base+0x190>
  403510:	mov    rax,QWORD PTR [rbp-0x18]
  403514:	mov    QWORD PTR [rbp-0x90],rax
  40351b:	jmp    403539 <plt_get_lib@@Base+0x1a9>
  403520:	mov    rdi,QWORD PTR [rbp-0x18]
  403524:	mov    esi,0x3a
  403529:	call   402090 <strchr@plt>
  40352e:	add    rax,0x1
  403532:	mov    QWORD PTR [rbp-0x90],rax
  403539:	mov    rax,QWORD PTR [rbp-0x90]
  403540:	mov    QWORD PTR [rbp-0x38],rax
  403544:	mov    rdi,QWORD PTR [rbp-0x38]
  403548:	call   402070 <strlen@plt>
  40354d:	mov    QWORD PTR [rbp-0x40],rax
  403551:	mov    rdi,QWORD PTR [rbp-0x38]
  403555:	lea    rsi,[rip+0x1d50]        # 4052ac <_IO_stdin_used@@Base+0x2ac>
  40355c:	call   4020d0 <strcmp@plt>
  403561:	cmp    eax,0x0
  403564:	setne  cl
  403567:	xor    cl,0xff
  40356a:	and    cl,0x1
  40356d:	movzx  eax,cl
  403570:	mov    DWORD PTR [rbp-0x44],eax
  403573:	mov    rsi,QWORD PTR [rbp-0x10]
  403577:	mov    rsi,QWORD PTR [rsi+0x8]
  40357b:	mov    QWORD PTR [rbp-0x50],rsi
  40357f:	cmp    QWORD PTR [rbp-0x50],0x0
  403584:	je     403756 <plt_get_lib@@Base+0x3c6>
  40358a:	cmp    DWORD PTR [rbp-0x1c],0x1
  40358e:	jne    4036be <plt_get_lib@@Base+0x32e>
  403594:	cmp    DWORD PTR [rbp-0x44],0x0
  403598:	je     4035ec <plt_get_lib@@Base+0x25c>
  40359e:	mov    rax,QWORD PTR [rbp-0x50]
  4035a2:	mov    rdi,QWORD PTR [rax+0x8]
  4035a6:	lea    rsi,[rip+0x1c8d]        # 40523a <_IO_stdin_used@@Base+0x23a>
  4035ad:	call   402140 <strstr@plt>
  4035b2:	cmp    rax,0x0
  4035b6:	jne    4035da <plt_get_lib@@Base+0x24a>
  4035bc:	mov    rax,QWORD PTR [rbp-0x50]
  4035c0:	mov    rdi,QWORD PTR [rax+0x8]
  4035c4:	lea    rsi,[rip+0x1c78]        # 405243 <_IO_stdin_used@@Base+0x243>
  4035cb:	call   402140 <strstr@plt>
  4035d0:	cmp    rax,0x0
  4035d4:	je     4035e7 <plt_get_lib@@Base+0x257>
  4035da:	mov    rax,QWORD PTR [rbp-0x50]
  4035de:	mov    QWORD PTR [rbp-0x8],rax
  4035e2:	jmp    40375e <plt_get_lib@@Base+0x3ce>
  4035e7:	jmp    4036b9 <plt_get_lib@@Base+0x329>
  4035ec:	mov    rax,QWORD PTR [rbp-0x40]
  4035f0:	add    rax,0x8
  4035f4:	mov    QWORD PTR [rbp-0x58],rax
  4035f8:	mov    rax,QWORD PTR [rbp-0x58]
  4035fc:	mov    rcx,rsp
  4035ff:	mov    QWORD PTR [rbp-0x60],rcx
  403603:	mov    rcx,rax
  403606:	add    rcx,0xf
  40360a:	and    rcx,0xfffffffffffffff0
  40360e:	mov    rdx,rsp
  403611:	sub    rdx,rcx
  403614:	mov    rsp,rdx
  403617:	mov    QWORD PTR [rbp-0x68],rax
  40361b:	mov    rsi,QWORD PTR [rbp-0x58]
  40361f:	mov    rcx,QWORD PTR [rbp-0x38]
  403623:	mov    rdi,rdx
  403626:	lea    rax,[rip+0x1c1f]        # 40524c <_IO_stdin_used@@Base+0x24c>
  40362d:	mov    QWORD PTR [rbp-0x98],rdx
  403634:	mov    rdx,rax
  403637:	mov    al,0x0
  403639:	call   4020a0 <snprintf@plt>
  40363e:	mov    rcx,QWORD PTR [rbp-0x50]
  403642:	mov    rdi,QWORD PTR [rcx+0x8]
  403646:	mov    rsi,QWORD PTR [rbp-0x98]
  40364d:	mov    DWORD PTR [rbp-0x9c],eax
  403653:	call   402140 <strstr@plt>
  403658:	cmp    rax,0x0
  40365c:	je     403676 <plt_get_lib@@Base+0x2e6>
  403662:	mov    rax,QWORD PTR [rbp-0x50]
  403666:	mov    QWORD PTR [rbp-0x8],rax
  40366a:	mov    DWORD PTR [rbp-0x6c],0x1
  403671:	jmp    40367d <plt_get_lib@@Base+0x2ed>
  403676:	mov    DWORD PTR [rbp-0x6c],0x0
  40367d:	mov    rax,QWORD PTR [rbp-0x60]
  403681:	mov    rsp,rax
  403684:	mov    ecx,DWORD PTR [rbp-0x6c]
  403687:	test   ecx,ecx
  403689:	mov    DWORD PTR [rbp-0xa0],ecx
  40368f:	je     4036b4 <plt_get_lib@@Base+0x324>
  403695:	jmp    40369a <plt_get_lib@@Base+0x30a>
  40369a:	mov    eax,DWORD PTR [rbp-0xa0]
  4036a0:	sub    eax,0x1
  4036a3:	mov    DWORD PTR [rbp-0xa4],eax
  4036a9:	je     40375e <plt_get_lib@@Base+0x3ce>
  4036af:	jmp    403767 <plt_get_lib@@Base+0x3d7>
  4036b4:	jmp    4036b9 <plt_get_lib@@Base+0x329>
  4036b9:	jmp    403740 <plt_get_lib@@Base+0x3b0>
  4036be:	cmp    DWORD PTR [rbp-0x1c],0x0
  4036c2:	je     4036d2 <plt_get_lib@@Base+0x342>
  4036c8:	cmp    DWORD PTR [rbp-0x1c],0x2
  4036cc:	jne    4036fe <plt_get_lib@@Base+0x36e>
  4036d2:	mov    rdi,QWORD PTR [rbp-0x18]
  4036d6:	mov    rax,QWORD PTR [rbp-0x50]
  4036da:	mov    rsi,QWORD PTR [rax+0x8]
  4036de:	call   4020d0 <strcmp@plt>
  4036e3:	cmp    eax,0x0
  4036e6:	jne    4036f9 <plt_get_lib@@Base+0x369>
  4036ec:	mov    rax,QWORD PTR [rbp-0x50]
  4036f0:	mov    QWORD PTR [rbp-0x8],rax
  4036f4:	jmp    40375e <plt_get_lib@@Base+0x3ce>
  4036f9:	jmp    40373b <plt_get_lib@@Base+0x3ab>
  4036fe:	cmp    DWORD PTR [rbp-0x1c],0x3
  403702:	jne    403736 <plt_get_lib@@Base+0x3a6>
  403708:	mov    rdi,QWORD PTR [rbp-0x50]
  40370c:	mov    rsi,QWORD PTR [rbp-0x38]
  403710:	call   403770 <plt_get_lib@@Base+0x3e0>
  403715:	mov    QWORD PTR [rbp-0x78],rax
  403719:	cmp    QWORD PTR [rbp-0x78],0x0
  40371e:	je     403731 <plt_get_lib@@Base+0x3a1>
  403724:	mov    rax,QWORD PTR [rbp-0x50]
  403728:	mov    QWORD PTR [rbp-0x8],rax
  40372c:	jmp    40375e <plt_get_lib@@Base+0x3ce>
  403731:	jmp    403736 <plt_get_lib@@Base+0x3a6>
  403736:	jmp    40373b <plt_get_lib@@Base+0x3ab>
  40373b:	jmp    403740 <plt_get_lib@@Base+0x3b0>
  403740:	jmp    403745 <plt_get_lib@@Base+0x3b5>
  403745:	mov    rax,QWORD PTR [rbp-0x50]
  403749:	mov    rax,QWORD PTR [rax+0x18]
  40374d:	mov    QWORD PTR [rbp-0x50],rax
  403751:	jmp    40357f <plt_get_lib@@Base+0x1ef>
  403756:	mov    QWORD PTR [rbp-0x8],0x0
  40375e:	mov    rax,QWORD PTR [rbp-0x8]
  403762:	mov    rsp,rbp
  403765:	pop    rbp
  403766:	ret    
  403767:	nop    WORD PTR [rax+rax*1+0x0]
  403770:	push   rbp
  403771:	mov    rbp,rsp
  403774:	sub    rsp,0x70
  403778:	mov    eax,0x6
  40377d:	mov    ecx,eax
  40377f:	mov    QWORD PTR [rbp-0x10],rdi
  403783:	mov    QWORD PTR [rbp-0x18],rsi
  403787:	mov    rdi,QWORD PTR [rbp-0x10]
  40378b:	mov    rsi,rcx
  40378e:	call   403c20 <plt_get_real_fn@@Base+0x1d0>
  403793:	mov    edx,0x5
  403798:	mov    esi,edx
  40379a:	mov    QWORD PTR [rbp-0x20],rax
  40379e:	mov    rdi,QWORD PTR [rbp-0x10]
  4037a2:	call   403c20 <plt_get_real_fn@@Base+0x1d0>
  4037a7:	mov    edx,0x14
  4037ac:	mov    esi,edx
  4037ae:	mov    QWORD PTR [rbp-0x28],rax
  4037b2:	mov    rdi,QWORD PTR [rbp-0x10]
  4037b6:	call   403cd0 <plt_get_real_fn@@Base+0x280>
  4037bb:	mov    edx,0x17
  4037c0:	mov    esi,edx
  4037c2:	mov    QWORD PTR [rbp-0x30],rax
  4037c6:	mov    rdi,QWORD PTR [rbp-0x10]
  4037ca:	call   403c20 <plt_get_real_fn@@Base+0x1d0>
  4037cf:	mov    edx,0x2
  4037d4:	mov    esi,edx
  4037d6:	mov    QWORD PTR [rbp-0x38],rax
  4037da:	mov    rdi,QWORD PTR [rbp-0x10]
  4037de:	call   403cd0 <plt_get_real_fn@@Base+0x280>
  4037e3:	mov    QWORD PTR [rbp-0x40],rax
  4037e7:	mov    rdi,QWORD PTR [rbp-0x10]
  4037eb:	mov    rax,QWORD PTR [rbp-0x30]
  4037ef:	add    rax,0x2
  4037f3:	mov    rsi,rax
  4037f6:	call   403cd0 <plt_get_real_fn@@Base+0x280>
  4037fb:	mov    QWORD PTR [rbp-0x48],rax
  4037ff:	cmp    QWORD PTR [rbp-0x20],0x0
  403804:	je     403841 <plt_get_lib@@Base+0x4b1>
  40380a:	cmp    QWORD PTR [rbp-0x28],0x0
  40380f:	je     403841 <plt_get_lib@@Base+0x4b1>
  403815:	cmp    QWORD PTR [rbp-0x30],0x0
  40381a:	je     403841 <plt_get_lib@@Base+0x4b1>
  403820:	cmp    QWORD PTR [rbp-0x38],0x0
  403825:	je     403841 <plt_get_lib@@Base+0x4b1>
  40382b:	cmp    QWORD PTR [rbp-0x40],0x0
  403830:	je     403841 <plt_get_lib@@Base+0x4b1>
  403836:	cmp    QWORD PTR [rbp-0x48],0x0
  40383b:	jne    40384e <plt_get_lib@@Base+0x4be>
  403841:	mov    QWORD PTR [rbp-0x8],0x0
  403849:	jmp    4038ae <plt_get_lib@@Base+0x51e>
  40384e:	mov    rax,QWORD PTR [rbp-0x38]
  403852:	mov    QWORD PTR [rbp-0x60],rax
  403856:	mov    rax,QWORD PTR [rbp-0x40]
  40385a:	mov    QWORD PTR [rbp-0x58],rax
  40385e:	mov    rax,QWORD PTR [rbp-0x48]
  403862:	mov    QWORD PTR [rbp-0x50],rax
  403866:	mov    rax,QWORD PTR [rbp-0x10]
  40386a:	mov    rax,QWORD PTR [rax]
  40386d:	mov    QWORD PTR [rbp-0x68],rax
  403871:	mov    rsi,QWORD PTR [rbp-0x20]
  403875:	mov    rdx,QWORD PTR [rbp-0x28]
  403879:	mov    rcx,QWORD PTR [rbp-0x18]
  40387d:	lea    rdi,[rbp-0x60]
  403881:	call   403d40 <plt_get_real_fn@@Base+0x2f0>
  403886:	mov    QWORD PTR [rbp-0x70],rax
  40388a:	cmp    QWORD PTR [rbp-0x70],0x0
  40388f:	je     4038a6 <plt_get_lib@@Base+0x516>
  403895:	mov    rax,QWORD PTR [rbp-0x70]
  403899:	add    rax,QWORD PTR [rbp-0x68]
  40389d:	mov    QWORD PTR [rbp-0x8],rax
  4038a1:	jmp    4038ae <plt_get_lib@@Base+0x51e>
  4038a6:	mov    QWORD PTR [rbp-0x8],0x0
  4038ae:	mov    rax,QWORD PTR [rbp-0x8]
  4038b2:	add    rsp,0x70
  4038b6:	pop    rbp
  4038b7:	ret    
  4038b8:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004038c0 <plt_get_offsets@@Base>:
  4038c0:	push   rbp
  4038c1:	mov    rbp,rsp
  4038c4:	sub    rsp,0x40
  4038c8:	mov    QWORD PTR [rbp-0x10],rdi
  4038cc:	mov    QWORD PTR [rbp-0x18],rsi
  4038d0:	mov    QWORD PTR [rbp-0x20],rdx
  4038d4:	mov    rdi,QWORD PTR [rbp-0x10]
  4038d8:	mov    rsi,QWORD PTR [rbp-0x18]
  4038dc:	call   403770 <plt_get_lib@@Base+0x3e0>
  4038e1:	mov    QWORD PTR [rbp-0x28],rax
  4038e5:	cmp    QWORD PTR [rbp-0x28],0x0
  4038ea:	je     40393b <plt_get_offsets@@Base+0x7b>
  4038f0:	mov    eax,0x10
  4038f5:	mov    edi,eax
  4038f7:	call   404bb0 <mmk_malloc@@Base>
  4038fc:	mov    QWORD PTR [rbp-0x30],rax
  403900:	mov    rax,QWORD PTR [rbp-0x20]
  403904:	mov    QWORD PTR [rax],0x1
  40390b:	mov    rax,QWORD PTR [rbp-0x30]
  40390f:	mov    rdi,QWORD PTR [rbp-0x28]
  403913:	mov    QWORD PTR [rbp-0x40],rdi
  403917:	mov    QWORD PTR [rbp-0x38],0x0
  40391f:	mov    rdi,QWORD PTR [rbp-0x40]
  403923:	mov    QWORD PTR [rax],rdi
  403926:	mov    rdi,QWORD PTR [rbp-0x38]
  40392a:	mov    QWORD PTR [rax+0x8],rdi
  40392e:	mov    rax,QWORD PTR [rbp-0x30]
  403932:	mov    QWORD PTR [rbp-0x8],rax
  403936:	jmp    403943 <plt_get_offsets@@Base+0x83>
  40393b:	mov    QWORD PTR [rbp-0x8],0x0
  403943:	mov    rax,QWORD PTR [rbp-0x8]
  403947:	add    rsp,0x40
  40394b:	pop    rbp
  40394c:	ret    
  40394d:	nop    DWORD PTR [rax]

0000000000403950 <plt_set_offsets@@Base>:
  403950:	push   rbp
  403951:	mov    rbp,rsp
  403954:	mov    QWORD PTR [rbp-0x8],rdi
  403958:	mov    QWORD PTR [rbp-0x10],rsi
  40395c:	mov    QWORD PTR [rbp-0x18],rdx
  403960:	mov    QWORD PTR [rbp-0x20],0x0
  403968:	mov    rax,QWORD PTR [rbp-0x20]
  40396c:	cmp    rax,QWORD PTR [rbp-0x10]
  403970:	jae    4039e2 <plt_set_offsets@@Base+0x92>
  403976:	mov    rax,QWORD PTR [rbp-0x8]
  40397a:	mov    rcx,QWORD PTR [rbp-0x20]
  40397e:	shl    rcx,0x4
  403982:	add    rax,rcx
  403985:	cmp    QWORD PTR [rax+0x8],0x0
  40398a:	jne    4039b8 <plt_set_offsets@@Base+0x68>
  403990:	mov    rax,QWORD PTR [rbp-0x8]
  403994:	mov    rcx,QWORD PTR [rbp-0x20]
  403998:	shl    rcx,0x4
  40399c:	add    rax,rcx
  40399f:	mov    rax,QWORD PTR [rax]
  4039a2:	mov    rax,QWORD PTR [rax]
  4039a5:	mov    rcx,QWORD PTR [rbp-0x8]
  4039a9:	mov    rdx,QWORD PTR [rbp-0x20]
  4039ad:	shl    rdx,0x4
  4039b1:	add    rcx,rdx
  4039b4:	mov    QWORD PTR [rcx+0x8],rax
  4039b8:	mov    rax,QWORD PTR [rbp-0x18]
  4039bc:	mov    rcx,QWORD PTR [rbp-0x8]
  4039c0:	mov    rdx,QWORD PTR [rbp-0x20]
  4039c4:	shl    rdx,0x4
  4039c8:	add    rcx,rdx
  4039cb:	mov    rcx,QWORD PTR [rcx]
  4039ce:	mov    QWORD PTR [rcx],rax
  4039d1:	mov    rax,QWORD PTR [rbp-0x20]
  4039d5:	add    rax,0x1
  4039d9:	mov    QWORD PTR [rbp-0x20],rax
  4039dd:	jmp    403968 <plt_set_offsets@@Base+0x18>
  4039e2:	pop    rbp
  4039e3:	ret    
  4039e4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4039ee:	xchg   ax,ax

00000000004039f0 <plt_reset_offsets@@Base>:
  4039f0:	push   rbp
  4039f1:	mov    rbp,rsp
  4039f4:	mov    QWORD PTR [rbp-0x8],rdi
  4039f8:	mov    QWORD PTR [rbp-0x10],rsi
  4039fc:	mov    QWORD PTR [rbp-0x18],0x0
  403a04:	mov    rax,QWORD PTR [rbp-0x18]
  403a08:	cmp    rax,QWORD PTR [rbp-0x10]
  403a0c:	jae    403a4b <plt_reset_offsets@@Base+0x5b>
  403a12:	mov    rax,QWORD PTR [rbp-0x8]
  403a16:	mov    rcx,QWORD PTR [rbp-0x18]
  403a1a:	shl    rcx,0x4
  403a1e:	add    rax,rcx
  403a21:	mov    rax,QWORD PTR [rax+0x8]
  403a25:	mov    rcx,QWORD PTR [rbp-0x8]
  403a29:	mov    rdx,QWORD PTR [rbp-0x18]
  403a2d:	shl    rdx,0x4
  403a31:	add    rcx,rdx
  403a34:	mov    rcx,QWORD PTR [rcx]
  403a37:	mov    QWORD PTR [rcx],rax
  403a3a:	mov    rax,QWORD PTR [rbp-0x18]
  403a3e:	add    rax,0x1
  403a42:	mov    QWORD PTR [rbp-0x18],rax
  403a46:	jmp    403a04 <plt_reset_offsets@@Base+0x14>
  403a4b:	pop    rbp
  403a4c:	ret    
  403a4d:	nop    DWORD PTR [rax]

0000000000403a50 <plt_get_real_fn@@Base>:
  403a50:	push   rbp
  403a51:	mov    rbp,rsp
  403a54:	sub    rsp,0x30
  403a58:	mov    QWORD PTR [rbp-0x10],rdi
  403a5c:	mov    QWORD PTR [rbp-0x18],rsi
  403a60:	mov    rsi,QWORD PTR [rbp-0x10]
  403a64:	mov    rsi,QWORD PTR [rsi+0x8]
  403a68:	mov    QWORD PTR [rbp-0x20],rsi
  403a6c:	cmp    QWORD PTR [rbp-0x20],0x0
  403a71:	je     403ab9 <plt_get_real_fn@@Base+0x69>
  403a77:	mov    rdi,QWORD PTR [rbp-0x20]
  403a7b:	mov    rsi,QWORD PTR [rbp-0x18]
  403a7f:	call   403770 <plt_get_lib@@Base+0x3e0>
  403a84:	mov    QWORD PTR [rbp-0x28],rax
  403a88:	cmp    QWORD PTR [rbp-0x28],0x0
  403a8d:	je     403aa3 <plt_get_real_fn@@Base+0x53>
  403a93:	mov    rax,QWORD PTR [rbp-0x28]
  403a97:	mov    rax,QWORD PTR [rax]
  403a9a:	mov    QWORD PTR [rbp-0x8],rax
  403a9e:	jmp    403ac1 <plt_get_real_fn@@Base+0x71>
  403aa3:	jmp    403aa8 <plt_get_real_fn@@Base+0x58>
  403aa8:	mov    rax,QWORD PTR [rbp-0x20]
  403aac:	mov    rax,QWORD PTR [rax+0x18]
  403ab0:	mov    QWORD PTR [rbp-0x20],rax
  403ab4:	jmp    403a6c <plt_get_real_fn@@Base+0x1c>
  403ab9:	mov    QWORD PTR [rbp-0x8],0x0
  403ac1:	mov    rax,QWORD PTR [rbp-0x8]
  403ac5:	add    rsp,0x30
  403ac9:	pop    rbp
  403aca:	ret    
  403acb:	nop    DWORD PTR [rax+rax*1+0x0]
  403ad0:	push   rbp
  403ad1:	mov    rbp,rsp
  403ad4:	mov    QWORD PTR [rbp-0x10],rdi
  403ad8:	mov    QWORD PTR [rbp-0x18],rsi
  403adc:	mov    rax,QWORD PTR [rbp-0x10]
  403ae0:	cmp    QWORD PTR [rax],0x0
  403ae4:	je     403b22 <plt_get_real_fn@@Base+0xd2>
  403aea:	mov    rax,QWORD PTR [rbp-0x10]
  403aee:	mov    rax,QWORD PTR [rax]
  403af1:	cmp    rax,QWORD PTR [rbp-0x18]
  403af5:	jne    403b0c <plt_get_real_fn@@Base+0xbc>
  403afb:	mov    rax,QWORD PTR [rbp-0x10]
  403aff:	mov    rax,QWORD PTR [rax+0x8]
  403b03:	mov    QWORD PTR [rbp-0x8],rax
  403b07:	jmp    403b2a <plt_get_real_fn@@Base+0xda>
  403b0c:	jmp    403b11 <plt_get_real_fn@@Base+0xc1>
  403b11:	mov    rax,QWORD PTR [rbp-0x10]
  403b15:	add    rax,0x10
  403b19:	mov    QWORD PTR [rbp-0x10],rax
  403b1d:	jmp    403adc <plt_get_real_fn@@Base+0x8c>
  403b22:	mov    QWORD PTR [rbp-0x8],0xffffffffffffffff
  403b2a:	mov    rax,QWORD PTR [rbp-0x8]
  403b2e:	pop    rbp
  403b2f:	ret    
  403b30:	push   rbp
  403b31:	mov    rbp,rsp
  403b34:	mov    QWORD PTR [rbp-0x10],rdi
  403b38:	mov    QWORD PTR [rbp-0x18],rsi
  403b3c:	mov    QWORD PTR [rbp-0x20],0x0
  403b44:	mov    rax,QWORD PTR [rbp-0x20]
  403b48:	cmp    rax,QWORD PTR [rbp-0x18]
  403b4c:	jae    403b96 <plt_get_real_fn@@Base+0x146>
  403b52:	mov    rax,QWORD PTR [rbp-0x10]
  403b56:	imul   rcx,QWORD PTR [rbp-0x20],0x38
  403b5b:	add    rax,rcx
  403b5e:	cmp    DWORD PTR [rax],0x2
  403b61:	jne    403b80 <plt_get_real_fn@@Base+0x130>
  403b67:	mov    rax,QWORD PTR [rbp-0x10]
  403b6b:	imul   rcx,QWORD PTR [rbp-0x20],0x38
  403b70:	add    rax,rcx
  403b73:	mov    rax,QWORD PTR [rax+0x10]
  403b77:	mov    QWORD PTR [rbp-0x8],rax
  403b7b:	jmp    403b9e <plt_get_real_fn@@Base+0x14e>
  403b80:	jmp    403b85 <plt_get_real_fn@@Base+0x135>
  403b85:	mov    rax,QWORD PTR [rbp-0x20]
  403b89:	add    rax,0x1
  403b8d:	mov    QWORD PTR [rbp-0x20],rax
  403b91:	jmp    403b44 <plt_get_real_fn@@Base+0xf4>
  403b96:	mov    QWORD PTR [rbp-0x8],0x0
  403b9e:	mov    rax,QWORD PTR [rbp-0x8]
  403ba2:	pop    rbp
  403ba3:	ret    
  403ba4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403bae:	xchg   ax,ax
  403bb0:	push   rbp
  403bb1:	mov    rbp,rsp
  403bb4:	mov    QWORD PTR [rbp-0x10],rdi
  403bb8:	mov    rdi,QWORD PTR [rbp-0x10]
  403bbc:	mov    QWORD PTR [rbp-0x18],rdi
  403bc0:	mov    rax,QWORD PTR [rbp-0x18]
  403bc4:	cmp    QWORD PTR [rax],0x0
  403bc8:	je     403c03 <plt_get_real_fn@@Base+0x1b3>
  403bce:	mov    rax,QWORD PTR [rbp-0x18]
  403bd2:	cmp    QWORD PTR [rax],0x15
  403bd6:	jne    403bed <plt_get_real_fn@@Base+0x19d>
  403bdc:	mov    rax,QWORD PTR [rbp-0x18]
  403be0:	mov    rax,QWORD PTR [rax+0x8]
  403be4:	mov    QWORD PTR [rbp-0x8],rax
  403be8:	jmp    403c0b <plt_get_real_fn@@Base+0x1bb>
  403bed:	jmp    403bf2 <plt_get_real_fn@@Base+0x1a2>
  403bf2:	mov    rax,QWORD PTR [rbp-0x18]
  403bf6:	add    rax,0x10
  403bfa:	mov    QWORD PTR [rbp-0x18],rax
  403bfe:	jmp    403bc0 <plt_get_real_fn@@Base+0x170>
  403c03:	mov    QWORD PTR [rbp-0x8],0x0
  403c0b:	mov    rax,QWORD PTR [rbp-0x8]
  403c0f:	pop    rbp
  403c10:	ret    
  403c11:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403c1b:	nop    DWORD PTR [rax+rax*1+0x0]
  403c20:	push   rbp
  403c21:	mov    rbp,rsp
  403c24:	mov    QWORD PTR [rbp-0x10],rdi
  403c28:	mov    QWORD PTR [rbp-0x18],rsi
  403c2c:	mov    rsi,QWORD PTR [rbp-0x10]
  403c30:	mov    rsi,QWORD PTR [rsi]
  403c33:	mov    QWORD PTR [rbp-0x20],rsi
  403c37:	mov    rsi,QWORD PTR [rbp-0x10]
  403c3b:	mov    rsi,QWORD PTR [rsi+0x10]
  403c3f:	mov    QWORD PTR [rbp-0x28],rsi
  403c43:	mov    rax,QWORD PTR [rbp-0x28]
  403c47:	cmp    QWORD PTR [rax],0x0
  403c4b:	je     403cbf <plt_get_real_fn@@Base+0x26f>
  403c51:	mov    rax,QWORD PTR [rbp-0x28]
  403c55:	mov    rax,QWORD PTR [rax]
  403c58:	cmp    rax,QWORD PTR [rbp-0x18]
  403c5c:	jne    403ca9 <plt_get_real_fn@@Base+0x259>
  403c62:	mov    rax,QWORD PTR [rbp-0x28]
  403c66:	mov    rax,QWORD PTR [rax+0x8]
  403c6a:	cmp    rax,QWORD PTR [rbp-0x20]
  403c6e:	jb     403c94 <plt_get_real_fn@@Base+0x244>
  403c74:	mov    rax,QWORD PTR [rbp-0x28]
  403c78:	cmp    QWORD PTR [rax+0x8],0x0
  403c7d:	jl     403c94 <plt_get_real_fn@@Base+0x244>
  403c83:	mov    rax,QWORD PTR [rbp-0x28]
  403c87:	mov    rax,QWORD PTR [rax+0x8]
  403c8b:	mov    QWORD PTR [rbp-0x8],rax
  403c8f:	jmp    403cc7 <plt_get_real_fn@@Base+0x277>
  403c94:	mov    rax,QWORD PTR [rbp-0x20]
  403c98:	mov    rcx,QWORD PTR [rbp-0x28]
  403c9c:	add    rax,QWORD PTR [rcx+0x8]
  403ca0:	mov    QWORD PTR [rbp-0x8],rax
  403ca4:	jmp    403cc7 <plt_get_real_fn@@Base+0x277>
  403ca9:	jmp    403cae <plt_get_real_fn@@Base+0x25e>
  403cae:	mov    rax,QWORD PTR [rbp-0x28]
  403cb2:	add    rax,0x10
  403cb6:	mov    QWORD PTR [rbp-0x28],rax
  403cba:	jmp    403c43 <plt_get_real_fn@@Base+0x1f3>
  403cbf:	mov    QWORD PTR [rbp-0x8],0x0
  403cc7:	mov    rax,QWORD PTR [rbp-0x8]
  403ccb:	pop    rbp
  403ccc:	ret    
  403ccd:	nop    DWORD PTR [rax]
  403cd0:	push   rbp
  403cd1:	mov    rbp,rsp
  403cd4:	mov    QWORD PTR [rbp-0x10],rdi
  403cd8:	mov    QWORD PTR [rbp-0x18],rsi
  403cdc:	mov    rsi,QWORD PTR [rbp-0x10]
  403ce0:	mov    rsi,QWORD PTR [rsi+0x10]
  403ce4:	mov    QWORD PTR [rbp-0x20],rsi
  403ce8:	mov    rax,QWORD PTR [rbp-0x20]
  403cec:	cmp    QWORD PTR [rax],0x0
  403cf0:	je     403d2e <plt_get_real_fn@@Base+0x2de>
  403cf6:	mov    rax,QWORD PTR [rbp-0x20]
  403cfa:	mov    rax,QWORD PTR [rax]
  403cfd:	cmp    rax,QWORD PTR [rbp-0x18]
  403d01:	jne    403d18 <plt_get_real_fn@@Base+0x2c8>
  403d07:	mov    rax,QWORD PTR [rbp-0x20]
  403d0b:	mov    rax,QWORD PTR [rax+0x8]
  403d0f:	mov    QWORD PTR [rbp-0x8],rax
  403d13:	jmp    403d36 <plt_get_real_fn@@Base+0x2e6>
  403d18:	jmp    403d1d <plt_get_real_fn@@Base+0x2cd>
  403d1d:	mov    rax,QWORD PTR [rbp-0x20]
  403d21:	add    rax,0x10
  403d25:	mov    QWORD PTR [rbp-0x20],rax
  403d29:	jmp    403ce8 <plt_get_real_fn@@Base+0x298>
  403d2e:	mov    QWORD PTR [rbp-0x8],0x0
  403d36:	mov    rax,QWORD PTR [rbp-0x8]
  403d3a:	pop    rbp
  403d3b:	ret    
  403d3c:	nop    DWORD PTR [rax+0x0]
  403d40:	push   rbp
  403d41:	mov    rbp,rsp
  403d44:	sub    rsp,0x50
  403d48:	mov    QWORD PTR [rbp-0x10],rdi
  403d4c:	mov    QWORD PTR [rbp-0x18],rsi
  403d50:	mov    QWORD PTR [rbp-0x20],rdx
  403d54:	mov    QWORD PTR [rbp-0x28],rcx
  403d58:	mov    rcx,QWORD PTR [rbp-0x10]
  403d5c:	mov    rcx,QWORD PTR [rcx]
  403d5f:	mov    QWORD PTR [rbp-0x30],rcx
  403d63:	mov    QWORD PTR [rbp-0x38],0x0
  403d6b:	mov    rax,QWORD PTR [rbp-0x38]
  403d6f:	mov    rcx,QWORD PTR [rbp-0x10]
  403d73:	mov    rcx,QWORD PTR [rcx+0x8]
  403d77:	mov    rdx,QWORD PTR [rbp-0x10]
  403d7b:	mov    QWORD PTR [rbp-0x48],rax
  403d7f:	mov    rax,rcx
  403d82:	xor    esi,esi
  403d84:	mov    QWORD PTR [rbp-0x50],rdx
  403d88:	mov    edx,esi
  403d8a:	mov    rcx,QWORD PTR [rbp-0x50]
  403d8e:	div    QWORD PTR [rcx+0x10]
  403d92:	mov    rdi,QWORD PTR [rbp-0x48]
  403d96:	cmp    rdi,rax
  403d99:	jae    403e14 <plt_get_real_fn@@Base+0x3c4>
  403d9f:	mov    rax,QWORD PTR [rbp-0x18]
  403da3:	mov    rcx,QWORD PTR [rbp-0x30]
  403da7:	mov    rcx,QWORD PTR [rcx+0x8]
  403dab:	shr    rcx,0x20
  403daf:	imul   rcx,rcx,0x18
  403db3:	add    rax,rcx
  403db6:	mov    QWORD PTR [rbp-0x40],rax
  403dba:	mov    rax,QWORD PTR [rbp-0x20]
  403dbe:	mov    rcx,QWORD PTR [rbp-0x40]
  403dc2:	mov    edx,DWORD PTR [rcx]
  403dc4:	mov    ecx,edx
  403dc6:	add    rax,rcx
  403dc9:	mov    rsi,QWORD PTR [rbp-0x28]
  403dcd:	mov    rdi,rax
  403dd0:	call   4020d0 <strcmp@plt>
  403dd5:	cmp    eax,0x0
  403dd8:	jne    403dee <plt_get_real_fn@@Base+0x39e>
  403dde:	mov    rax,QWORD PTR [rbp-0x30]
  403de2:	mov    rax,QWORD PTR [rax]
  403de5:	mov    QWORD PTR [rbp-0x8],rax
  403de9:	jmp    403e1c <plt_get_real_fn@@Base+0x3cc>
  403dee:	jmp    403df3 <plt_get_real_fn@@Base+0x3a3>
  403df3:	mov    rax,QWORD PTR [rbp-0x38]
  403df7:	add    rax,0x1
  403dfb:	mov    QWORD PTR [rbp-0x38],rax
  403dff:	mov    rax,QWORD PTR [rbp-0x30]
  403e03:	mov    rcx,QWORD PTR [rbp-0x10]
  403e07:	add    rax,QWORD PTR [rcx+0x10]
  403e0b:	mov    QWORD PTR [rbp-0x30],rax
  403e0f:	jmp    403d6b <plt_get_real_fn@@Base+0x31b>
  403e14:	mov    QWORD PTR [rbp-0x8],0x0
  403e1c:	mov    rax,QWORD PTR [rbp-0x8]
  403e20:	add    rsp,0x50
  403e24:	pop    rbp
  403e25:	ret    
  403e26:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000403e30 <mmk_stub_context@@Base>:
  403e30:	push   rbp
  403e31:	mov    rbp,rsp
  403e34:	mov    QWORD PTR [rbp-0x10],rdi
  403e38:	cmp    QWORD PTR [rbp-0x10],0x0
  403e3d:	jne    403e50 <mmk_stub_context@@Base+0x20>
  403e43:	mov    QWORD PTR [rbp-0x8],0x0
  403e4b:	jmp    403e5c <mmk_stub_context@@Base+0x2c>
  403e50:	mov    rax,QWORD PTR [rbp-0x10]
  403e54:	mov    rax,QWORD PTR [rax+0x18]
  403e58:	mov    QWORD PTR [rbp-0x8],rax
  403e5c:	mov    rax,QWORD PTR [rbp-0x8]
  403e60:	pop    rbp
  403e61:	ret    
  403e62:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403e6c:	nop    DWORD PTR [rax+0x0]

0000000000403e70 <mmk_stub_create_static@@Base>:
  403e70:	push   rbp
  403e71:	mov    rbp,rsp
  403e74:	sub    rsp,0xb0
  403e7b:	mov    QWORD PTR [rbp-0x10],rdi
  403e7f:	mov    QWORD PTR [rbp-0x18],rsi
  403e83:	mov    QWORD PTR [rbp-0x20],rdx
  403e87:	mov    QWORD PTR [rbp-0x28],rcx
  403e8b:	data16 data16 data16 mov rax,QWORD PTR fs:0x0
  403e97:	mov    DWORD PTR [rax-0x20],0x0
  403ea1:	data16 data16 data16 mov rax,QWORD PTR fs:0x0
  403ead:	mov    QWORD PTR [rax-0x18],0x0
  403eb8:	mov    rdi,QWORD PTR [rbp-0x18]
  403ebc:	call   404b10 <mmk_strlen@@Base>
  403ec1:	add    rax,0x1
  403ec5:	mov    rdi,rax
  403ec8:	call   404bb0 <mmk_malloc@@Base>
  403ecd:	mov    QWORD PTR [rbp-0x30],rax
  403ed1:	cmp    QWORD PTR [rbp-0x30],0x0
  403ed6:	jne    403ee8 <mmk_stub_create_static@@Base+0x78>
  403edc:	mov    DWORD PTR [rbp-0x4],0xfffffff4
  403ee3:	jmp    404058 <mmk_stub_create_static@@Base+0x1e8>
  403ee8:	mov    rdi,QWORD PTR [rbp-0x30]
  403eec:	mov    rsi,QWORD PTR [rbp-0x18]
  403ef0:	call   404a30 <mmk_strcpy@@Base>
  403ef5:	mov    QWORD PTR [rbp-0x38],0x0
  403efd:	mov    rdi,QWORD PTR [rbp-0x30]
  403f01:	mov    esi,0x40
  403f06:	mov    QWORD PTR [rbp-0xb0],rax
  403f0d:	call   4049d0 <mmk_strchr@@Base>
  403f12:	mov    QWORD PTR [rbp-0x40],rax
  403f16:	cmp    QWORD PTR [rbp-0x40],0x0
  403f1b:	je     403f34 <mmk_stub_create_static@@Base+0xc4>
  403f21:	mov    rax,QWORD PTR [rbp-0x40]
  403f25:	mov    BYTE PTR [rax],0x0
  403f28:	mov    rax,QWORD PTR [rbp-0x40]
  403f2c:	add    rax,0x1
  403f30:	mov    QWORD PTR [rbp-0x38],rax
  403f34:	call   402c40 <mmk_plt_ctx@@Base>
  403f39:	mov    rsi,QWORD PTR [rbp-0x38]
  403f3d:	mov    rdi,rax
  403f40:	call   403390 <plt_get_lib@@Base>
  403f45:	mov    QWORD PTR [rbp-0x48],rax
  403f49:	cmp    QWORD PTR [rbp-0x48],0x0
  403f4e:	jne    403f60 <mmk_stub_create_static@@Base+0xf0>
  403f54:	mov    DWORD PTR [rbp-0x4],0xfffffffe
  403f5b:	jmp    404058 <mmk_stub_create_static@@Base+0x1e8>
  403f60:	mov    QWORD PTR [rbp-0x50],0x0
  403f68:	mov    rdi,QWORD PTR [rbp-0x48]
  403f6c:	mov    rsi,QWORD PTR [rbp-0x30]
  403f70:	lea    rdx,[rbp-0x50]
  403f74:	call   4038c0 <plt_get_offsets@@Base>
  403f79:	mov    QWORD PTR [rbp-0x58],rax
  403f7d:	cmp    QWORD PTR [rbp-0x58],0x0
  403f82:	je     403f93 <mmk_stub_create_static@@Base+0x123>
  403f88:	cmp    QWORD PTR [rbp-0x50],0x0
  403f8d:	jne    403f9f <mmk_stub_create_static@@Base+0x12f>
  403f93:	mov    DWORD PTR [rbp-0x4],0xfffffffe
  403f9a:	jmp    404058 <mmk_stub_create_static@@Base+0x1e8>
  403f9f:	mov    eax,0x50
  403fa4:	mov    edx,eax
  403fa6:	lea    rcx,[rip+0x133]        # 4040e0 <mmk_ctx@@Base>
  403fad:	lea    rsi,[rip+0xec]        # 4040a0 <mmk_set_ctx@@Base>
  403fb4:	lea    rdi,[rip+0xb5]        # 404070 <mmk_ctx_asked@@Base>
  403fbb:	mov    r8,QWORD PTR [rbp-0x10]
  403fbf:	mov    QWORD PTR [rbp-0xa8],rdi
  403fc6:	mov    QWORD PTR [rbp-0xa0],rsi
  403fcd:	mov    QWORD PTR [rbp-0x98],rcx
  403fd4:	mov    rcx,QWORD PTR [rbp-0x28]
  403fd8:	mov    QWORD PTR [rbp-0x90],rcx
  403fdf:	mov    rcx,QWORD PTR [rbp-0x30]
  403fe3:	mov    QWORD PTR [rbp-0x88],rcx
  403fea:	mov    rcx,QWORD PTR [rbp-0x38]
  403fee:	mov    QWORD PTR [rbp-0x80],rcx
  403ff2:	mov    rcx,QWORD PTR [rbp-0x58]
  403ff6:	mov    QWORD PTR [rbp-0x78],rcx
  403ffa:	mov    rcx,QWORD PTR [rbp-0x50]
  403ffe:	mov    QWORD PTR [rbp-0x70],rcx
  404002:	mov    QWORD PTR [rbp-0x68],0x0
  40400a:	mov    QWORD PTR [rbp-0x60],0x0
  404012:	lea    rcx,[rbp-0xa8]
  404019:	mov    rdi,r8
  40401c:	mov    rsi,rcx
  40401f:	call   4020f0 <memcpy@plt>
  404024:	mov    rcx,QWORD PTR [rbp-0x10]
  404028:	mov    rsi,QWORD PTR [rbp-0x20]
  40402c:	mov    rdi,rcx
  40402f:	call   404240 <create_trampoline@@Base>
  404034:	mov    rcx,QWORD PTR [rbp-0x10]
  404038:	mov    QWORD PTR [rcx+0x40],rax
  40403c:	mov    rdi,QWORD PTR [rbp-0x58]
  404040:	mov    rsi,QWORD PTR [rbp-0x50]
  404044:	mov    rax,QWORD PTR [rbp-0x10]
  404048:	mov    rdx,QWORD PTR [rax+0x40]
  40404c:	call   403950 <plt_set_offsets@@Base>
  404051:	mov    DWORD PTR [rbp-0x4],0x0
  404058:	mov    eax,DWORD PTR [rbp-0x4]
  40405b:	add    rsp,0xb0
  404062:	pop    rbp
  404063:	ret    
  404064:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40406e:	xchg   ax,ax

0000000000404070 <mmk_ctx_asked@@Base>:
  404070:	push   rbp
  404071:	mov    rbp,rsp
  404074:	push   rbx
  404075:	push   rax
  404076:	data16 data16 data16 mov rax,QWORD PTR fs:0x0
  404082:	mov    ebx,DWORD PTR [rax-0x20]
  404088:	mov    DWORD PTR [rbp-0xc],ebx
  40408b:	mov    DWORD PTR [rax-0x20],0x0
  404095:	mov    eax,DWORD PTR [rbp-0xc]
  404098:	add    rsp,0x8
  40409c:	pop    rbx
  40409d:	pop    rbp
  40409e:	ret    
  40409f:	nop

00000000004040a0 <mmk_set_ctx@@Base>:
  4040a0:	push   rbp
  4040a1:	mov    rbp,rsp
  4040a4:	sub    rsp,0x10
  4040a8:	mov    QWORD PTR [rbp-0x8],rdi
  4040ac:	mov    rdi,QWORD PTR [rbp-0x8]
  4040b0:	mov    QWORD PTR [rbp-0x10],rdi
  4040b4:	data16 data16 data16 mov rax,QWORD PTR fs:0x0
  4040c0:	mov    rcx,QWORD PTR [rbp-0x10]
  4040c4:	mov    QWORD PTR [rax-0x18],rcx
  4040cb:	add    rsp,0x10
  4040cf:	pop    rbp
  4040d0:	ret    
  4040d1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4040db:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004040e0 <mmk_ctx@@Base>:
  4040e0:	push   rbp
  4040e1:	mov    rbp,rsp
  4040e4:	data16 data16 data16 mov rax,QWORD PTR fs:0x0
  4040f0:	mov    rax,QWORD PTR [rax-0x18]
  4040f7:	pop    rbp
  4040f8:	ret    
  4040f9:	nop    DWORD PTR [rax+0x0]

0000000000404100 <mmk_stub_create@@Base>:
  404100:	push   rbp
  404101:	mov    rbp,rsp
  404104:	sub    rsp,0x30
  404108:	mov    QWORD PTR [rbp-0x8],rdi
  40410c:	mov    QWORD PTR [rbp-0x10],rsi
  404110:	mov    QWORD PTR [rbp-0x18],rdx
  404114:	call   402bb0 <mmk_init@@Base>
  404119:	mov    eax,0x50
  40411e:	mov    edi,eax
  404120:	call   404bb0 <mmk_malloc@@Base>
  404125:	mov    QWORD PTR [rbp-0x20],rax
  404129:	mov    rdi,QWORD PTR [rbp-0x20]
  40412d:	mov    rsi,QWORD PTR [rbp-0x8]
  404131:	mov    rdx,QWORD PTR [rbp-0x10]
  404135:	mov    rcx,QWORD PTR [rbp-0x18]
  404139:	call   403e70 <mmk_stub_create_static@@Base>
  40413e:	mov    DWORD PTR [rbp-0x24],eax
  404141:	cmp    DWORD PTR [rbp-0x24],0x0
  404145:	jge    40416f <mmk_stub_create@@Base+0x6f>
  40414b:	mov    rax,QWORD PTR [rbp-0x20]
  40414f:	mov    rdi,rax
  404152:	call   404c10 <mmk_free@@Base>
  404157:	mov    ecx,DWORD PTR [rbp-0x24]
  40415a:	mov    DWORD PTR [rbp-0x28],ecx
  40415d:	call   402050 <__errno_location@plt>
  404162:	mov    ecx,DWORD PTR [rbp-0x28]
  404165:	mov    DWORD PTR [rax],ecx
  404167:	mov    QWORD PTR [rbp-0x20],0x0
  40416f:	mov    rax,QWORD PTR [rbp-0x20]
  404173:	add    rsp,0x30
  404177:	pop    rbp
  404178:	ret    
  404179:	nop    DWORD PTR [rax+0x0]

0000000000404180 <mmk_stub_destroy_static@@Base>:
  404180:	push   rbp
  404181:	mov    rbp,rsp
  404184:	sub    rsp,0x10
  404188:	mov    QWORD PTR [rbp-0x8],rdi
  40418c:	mov    rdi,QWORD PTR [rbp-0x8]
  404190:	mov    rdi,QWORD PTR [rdi+0x30]
  404194:	mov    rax,QWORD PTR [rbp-0x8]
  404198:	mov    rsi,QWORD PTR [rax+0x38]
  40419c:	call   4039f0 <plt_reset_offsets@@Base>
  4041a1:	mov    rax,QWORD PTR [rbp-0x8]
  4041a5:	mov    rax,QWORD PTR [rax+0x30]
  4041a9:	mov    rdi,rax
  4041ac:	call   404c10 <mmk_free@@Base>
  4041b1:	mov    rax,QWORD PTR [rbp-0x8]
  4041b5:	mov    rdi,QWORD PTR [rax+0x40]
  4041b9:	call   4043a0 <destroy_trampoline@@Base>
  4041be:	mov    rax,QWORD PTR [rbp-0x8]
  4041c2:	mov    rdi,QWORD PTR [rax+0x20]
  4041c6:	call   404c10 <mmk_free@@Base>
  4041cb:	add    rsp,0x10
  4041cf:	pop    rbp
  4041d0:	ret    
  4041d1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4041db:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004041e0 <mmk_stub_destroy@@Base>:
  4041e0:	push   rbp
  4041e1:	mov    rbp,rsp
  4041e4:	sub    rsp,0x10
  4041e8:	mov    QWORD PTR [rbp-0x8],rdi
  4041ec:	mov    rdi,QWORD PTR [rbp-0x8]
  4041f0:	call   404180 <mmk_stub_destroy_static@@Base>
  4041f5:	mov    rdi,QWORD PTR [rbp-0x8]
  4041f9:	call   404c10 <mmk_free@@Base>
  4041fe:	add    rsp,0x10
  404202:	pop    rbp
  404203:	ret    
  404204:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40420e:	xchg   ax,ax

0000000000404210 <mmk_ask_ctx@@Base>:
  404210:	push   rbp
  404211:	mov    rbp,rsp
  404214:	sub    rsp,0x10
  404218:	mov    QWORD PTR [rbp-0x8],rdi
  40421c:	data16 data16 data16 mov rax,QWORD PTR fs:0x0
  404228:	mov    DWORD PTR [rax-0x20],0x1
  404232:	call   QWORD PTR [rbp-0x8]
  404235:	add    rsp,0x10
  404239:	pop    rbp
  40423a:	ret    
  40423b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000404240 <create_trampoline@@Base>:
  404240:	push   rbp
  404241:	mov    rbp,rsp
  404244:	sub    rsp,0x50
  404248:	lea    rax,[rip+0xcc1]        # 404f10 <mmk_trampoline_end@@Base>
  40424f:	lea    rcx,[rip+0xbde]        # 404e34 <mmk_trampoline@@Base>
  404256:	sub    rax,rcx
  404259:	mov    QWORD PTR [rbp-0x8],rdi
  40425d:	mov    QWORD PTR [rbp-0x10],rsi
  404261:	mov    QWORD PTR [rbp-0x18],rax
  404265:	cmp    QWORD PTR [rbp-0x18],0x1000
  40426d:	jb     4042a6 <create_trampoline@@Base+0x66>
  404273:	mov    rax,QWORD PTR [rip+0x3d7e]        # 407ff8 <stderr@GLIBC_2.2.5>
  40427a:	mov    rdi,QWORD PTR [rax]
  40427d:	lea    rsi,[rip+0xd98]        # 40501c <_IO_stdin_used@@Base+0x1c>
  404284:	lea    rdx,[rip+0xfcb]        # 405256 <_IO_stdin_used@@Base+0x256>
  40428b:	mov    ecx,0x2d
  404290:	lea    r8,[rip+0x1017]        # 4052ae <_IO_stdin_used@@Base+0x2ae>
  404297:	mov    al,0x0
  404299:	call   4020e0 <fprintf@plt>
  40429e:	mov    DWORD PTR [rbp-0x24],eax
  4042a1:	call   402040 <abort@plt>
  4042a6:	jmp    4042ab <create_trampoline@@Base+0x6b>
  4042ab:	xor    eax,eax
  4042ad:	mov    ecx,eax
  4042af:	mov    eax,0x1000
  4042b4:	mov    esi,eax
  4042b6:	mov    rdi,rcx
  4042b9:	mov    edx,0x7
  4042be:	mov    eax,0x22
  4042c3:	mov    QWORD PTR [rbp-0x30],rcx
  4042c7:	mov    ecx,eax
  4042c9:	mov    r8d,0xffffffff
  4042cf:	mov    r9,QWORD PTR [rbp-0x30]
  4042d3:	call   402080 <mmap@plt>
  4042d8:	mov    QWORD PTR [rbp-0x20],rax
  4042dc:	mov    rax,0xffffffffffffffff
  4042e3:	cmp    QWORD PTR [rbp-0x20],rax
  4042e7:	jne    404320 <create_trampoline@@Base+0xe0>
  4042ed:	mov    rax,QWORD PTR [rip+0x3d04]        # 407ff8 <stderr@GLIBC_2.2.5>
  4042f4:	mov    rdi,QWORD PTR [rax]
  4042f7:	lea    rsi,[rip+0xd1e]        # 40501c <_IO_stdin_used@@Base+0x1c>
  4042fe:	lea    rdx,[rip+0xf51]        # 405256 <_IO_stdin_used@@Base+0x256>
  404305:	mov    ecx,0x45
  40430a:	lea    r8,[rip+0xfb7]        # 4052c8 <_IO_stdin_used@@Base+0x2c8>
  404311:	mov    al,0x0
  404313:	call   4020e0 <fprintf@plt>
  404318:	mov    DWORD PTR [rbp-0x34],eax
  40431b:	call   402040 <abort@plt>
  404320:	jmp    404325 <create_trampoline@@Base+0xe5>
  404325:	mov    eax,0x1000
  40432a:	mov    esi,eax
  40432c:	lea    rcx,[rip+0xb01]        # 404e34 <mmk_trampoline@@Base>
  404333:	mov    rdx,QWORD PTR [rbp-0x8]
  404337:	mov    rdi,QWORD PTR [rbp-0x20]
  40433b:	mov    QWORD PTR [rdi],rdx
  40433e:	mov    rdx,QWORD PTR [rbp-0x10]
  404342:	mov    rdi,QWORD PTR [rbp-0x20]
  404346:	mov    QWORD PTR [rdi+0x8],rdx
  40434a:	mov    rdx,QWORD PTR [rbp-0x20]
  40434e:	add    rdx,0x10
  404352:	mov    rdi,QWORD PTR [rbp-0x18]
  404356:	mov    QWORD PTR [rbp-0x40],rdi
  40435a:	mov    rdi,rdx
  40435d:	mov    QWORD PTR [rbp-0x48],rsi
  404361:	mov    rsi,rcx
  404364:	mov    rdx,QWORD PTR [rbp-0x40]
  404368:	call   4020f0 <memcpy@plt>
  40436d:	mov    rcx,QWORD PTR [rbp-0x20]
  404371:	mov    rdi,rcx
  404374:	mov    rsi,QWORD PTR [rbp-0x48]
  404378:	mov    edx,0x5
  40437d:	call   402130 <mprotect@plt>
  404382:	mov    rcx,QWORD PTR [rbp-0x20]
  404386:	add    rcx,0x10
  40438a:	mov    DWORD PTR [rbp-0x4c],eax
  40438d:	mov    rax,rcx
  404390:	add    rsp,0x50
  404394:	pop    rbp
  404395:	ret    
  404396:	nop    WORD PTR cs:[rax+rax*1+0x0]

00000000004043a0 <destroy_trampoline@@Base>:
  4043a0:	push   rbp
  4043a1:	mov    rbp,rsp
  4043a4:	sub    rsp,0x10
  4043a8:	mov    eax,0x1000
  4043ad:	mov    esi,eax
  4043af:	mov    QWORD PTR [rbp-0x8],rdi
  4043b3:	mov    rdi,QWORD PTR [rbp-0x8]
  4043b7:	add    rdi,0xfffffffffffffff0
  4043bb:	call   402110 <munmap@plt>
  4043c0:	mov    DWORD PTR [rbp-0xc],eax
  4043c3:	add    rsp,0x10
  4043c7:	pop    rbp
  4043c8:	ret    
  4043c9:	nop    DWORD PTR [rax+0x0]

00000000004043d0 <mmk_verify_set_times@@Base>:
  4043d0:	push   rbp
  4043d1:	mov    rbp,rsp
  4043d4:	sub    rsp,0x10
  4043d8:	mov    QWORD PTR [rbp-0x8],rdi
  4043dc:	mov    rdi,QWORD PTR [rbp-0x8]
  4043e0:	mov    QWORD PTR [rbp-0x10],rdi
  4043e4:	data16 data16 data16 mov rax,QWORD PTR fs:0x0
  4043f0:	mov    rcx,QWORD PTR [rbp-0x10]
  4043f4:	mov    QWORD PTR [rax-0x10],rcx
  4043fb:	add    rsp,0x10
  4043ff:	pop    rbp
  404400:	ret    
  404401:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40440b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000404410 <mmk_verify_times@@Base>:
  404410:	push   rbp
  404411:	mov    rbp,rsp
  404414:	sub    rsp,0x30
  404418:	mov    QWORD PTR [rbp-0x10],rdi
  40441c:	data16 data16 data16 mov rax,QWORD PTR fs:0x0
  404428:	mov    rax,QWORD PTR [rax-0x10]
  40442f:	mov    QWORD PTR [rbp-0x18],rax
  404433:	mov    rax,QWORD PTR [rbp-0x10]
  404437:	cmp    DWORD PTR [rax+0x4],0x0
  40443b:	je     404456 <mmk_verify_times@@Base+0x46>
  404441:	cmp    QWORD PTR [rbp-0x18],0x0
  404446:	sete   al
  404449:	and    al,0x1
  40444b:	movzx  ecx,al
  40444e:	mov    DWORD PTR [rbp-0x4],ecx
  404451:	jmp    404518 <mmk_verify_times@@Base+0x108>
  404456:	mov    rax,QWORD PTR [rbp-0x10]
  40445a:	cmp    QWORD PTR [rax+0x8],0x0
  40445f:	jne    404474 <mmk_verify_times@@Base+0x64>
  404465:	mov    rax,QWORD PTR [rbp-0x10]
  404469:	cmp    QWORD PTR [rax+0x10],0x0
  40446e:	je     4044db <mmk_verify_times@@Base+0xcb>
  404474:	mov    rax,QWORD PTR [rbp-0x10]
  404478:	cmp    QWORD PTR [rax+0x10],0x0
  40447d:	je     404494 <mmk_verify_times@@Base+0x84>
  404483:	mov    rax,QWORD PTR [rbp-0x10]
  404487:	mov    rax,QWORD PTR [rax+0x10]
  40448b:	mov    QWORD PTR [rbp-0x28],rax
  40448f:	jmp    40449c <mmk_verify_times@@Base+0x8c>
  404494:	mov    rax,QWORD PTR [rbp-0x18]
  404498:	mov    QWORD PTR [rbp-0x28],rax
  40449c:	mov    rax,QWORD PTR [rbp-0x28]
  4044a0:	xor    ecx,ecx
  4044a2:	mov    dl,cl
  4044a4:	mov    QWORD PTR [rbp-0x20],rax
  4044a8:	mov    rax,QWORD PTR [rbp-0x18]
  4044ac:	mov    rsi,QWORD PTR [rbp-0x10]
  4044b0:	cmp    rax,QWORD PTR [rsi+0x8]
  4044b4:	mov    BYTE PTR [rbp-0x29],dl
  4044b7:	jb     4044cb <mmk_verify_times@@Base+0xbb>
  4044bd:	mov    rax,QWORD PTR [rbp-0x18]
  4044c1:	cmp    rax,QWORD PTR [rbp-0x20]
  4044c5:	setbe  cl
  4044c8:	mov    BYTE PTR [rbp-0x29],cl
  4044cb:	mov    al,BYTE PTR [rbp-0x29]
  4044ce:	and    al,0x1
  4044d0:	movzx  ecx,al
  4044d3:	mov    DWORD PTR [rbp-0x4],ecx
  4044d6:	jmp    404518 <mmk_verify_times@@Base+0x108>
  4044db:	mov    rax,QWORD PTR [rbp-0x10]
  4044df:	cmp    QWORD PTR [rax+0x20],0x0
  4044e4:	je     404500 <mmk_verify_times@@Base+0xf0>
  4044ea:	mov    rax,QWORD PTR [rbp-0x10]
  4044ee:	mov    rax,QWORD PTR [rax+0x20]
  4044f2:	mov    rdi,QWORD PTR [rbp-0x18]
  4044f6:	call   rax
  4044f8:	mov    DWORD PTR [rbp-0x4],eax
  4044fb:	jmp    404518 <mmk_verify_times@@Base+0x108>
  404500:	mov    rax,QWORD PTR [rbp-0x10]
  404504:	mov    rax,QWORD PTR [rax+0x18]
  404508:	cmp    rax,QWORD PTR [rbp-0x18]
  40450c:	sete   cl
  40450f:	and    cl,0x1
  404512:	movzx  edx,cl
  404515:	mov    DWORD PTR [rbp-0x4],edx
  404518:	mov    eax,DWORD PTR [rbp-0x4]
  40451b:	add    rsp,0x30
  40451f:	pop    rbp
  404520:	ret    
  404521:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40452b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000404530 <mmk_verify_register_call@@Base>:
  404530:	push   rbp
  404531:	mov    rbp,rsp
  404534:	sub    rsp,0x30
  404538:	mov    QWORD PTR [rbp-0x8],rdi
  40453c:	mov    QWORD PTR [rbp-0x10],rsi
  404540:	call   4040e0 <mmk_ctx@@Base>
  404545:	mov    rdi,rax
  404548:	call   403e30 <mmk_stub_context@@Base>
  40454d:	mov    QWORD PTR [rbp-0x18],rax
  404551:	mov    rax,QWORD PTR [rbp-0x18]
  404555:	cmp    QWORD PTR [rax+0x10],0x0
  40455a:	jne    4045c7 <mmk_verify_register_call@@Base+0x97>
  404560:	mov    eax,0x1000
  404565:	mov    edi,eax
  404567:	call   404bb0 <mmk_malloc@@Base>
  40456c:	mov    rdi,QWORD PTR [rbp-0x18]
  404570:	mov    QWORD PTR [rdi+0x10],rax
  404574:	mov    rax,QWORD PTR [rbp-0x18]
  404578:	cmp    QWORD PTR [rax+0x10],0x0
  40457d:	jne    4045b6 <mmk_verify_register_call@@Base+0x86>
  404583:	mov    rax,QWORD PTR [rip+0x3a6e]        # 407ff8 <stderr@GLIBC_2.2.5>
  40458a:	mov    rdi,QWORD PTR [rax]
  40458d:	lea    rsi,[rip+0xa88]        # 40501c <_IO_stdin_used@@Base+0x1c>
  404594:	lea    rdx,[rip+0xd3f]        # 4052da <_IO_stdin_used@@Base+0x2da>
  40459b:	mov    ecx,0x4f
  4045a0:	lea    r8,[rip+0xd87]        # 40532e <_IO_stdin_used@@Base+0x32e>
  4045a7:	mov    al,0x0
  4045a9:	call   4020e0 <fprintf@plt>
  4045ae:	mov    DWORD PTR [rbp-0x24],eax
  4045b1:	call   402040 <abort@plt>
  4045b6:	jmp    4045bb <mmk_verify_register_call@@Base+0x8b>
  4045bb:	mov    rax,QWORD PTR [rbp-0x18]
  4045bf:	mov    QWORD PTR [rax+0x20],0x1000
  4045c7:	mov    rdi,QWORD PTR [rbp-0x18]
  4045cb:	mov    rsi,QWORD PTR [rbp-0x8]
  4045cf:	mov    rdx,QWORD PTR [rbp-0x10]
  4045d3:	call   404720 <mmk_verify_register_call@@Base+0x1f0>
  4045d8:	cmp    eax,0x0
  4045db:	je     4045e6 <mmk_verify_register_call@@Base+0xb6>
  4045e1:	jmp    404716 <mmk_verify_register_call@@Base+0x1e6>
  4045e6:	mov    rax,QWORD PTR [rbp-0x18]
  4045ea:	mov    rax,QWORD PTR [rax+0x18]
  4045ee:	add    rax,QWORD PTR [rbp-0x10]
  4045f2:	add    rax,0x8
  4045f6:	mov    rcx,QWORD PTR [rbp-0x18]
  4045fa:	cmp    rax,QWORD PTR [rcx+0x20]
  4045fe:	jb     4046a8 <mmk_verify_register_call@@Base+0x178>
  404604:	jmp    404609 <mmk_verify_register_call@@Base+0xd9>
  404609:	mov    rax,QWORD PTR [rbp-0x18]
  40460d:	mov    rax,QWORD PTR [rax+0x18]
  404611:	add    rax,QWORD PTR [rbp-0x10]
  404615:	add    rax,0x8
  404619:	mov    rcx,QWORD PTR [rbp-0x18]
  40461d:	cmp    rax,QWORD PTR [rcx+0x20]
  404621:	jb     40463f <mmk_verify_register_call@@Base+0x10f>
  404627:	mov    rax,QWORD PTR [rbp-0x18]
  40462b:	mov    rcx,QWORD PTR [rax+0x20]
  40462f:	add    rcx,0x1000
  404636:	mov    QWORD PTR [rax+0x20],rcx
  40463a:	jmp    404609 <mmk_verify_register_call@@Base+0xd9>
  40463f:	mov    rax,QWORD PTR [rbp-0x18]
  404643:	mov    rdi,QWORD PTR [rax+0x10]
  404647:	mov    rax,QWORD PTR [rbp-0x18]
  40464b:	mov    rsi,QWORD PTR [rax+0x20]
  40464f:	call   404be0 <mmk_realloc@@Base>
  404654:	mov    rsi,QWORD PTR [rbp-0x18]
  404658:	mov    QWORD PTR [rsi+0x10],rax
  40465c:	mov    rax,QWORD PTR [rbp-0x18]
  404660:	cmp    QWORD PTR [rax+0x10],0x0
  404665:	jne    40469e <mmk_verify_register_call@@Base+0x16e>
  40466b:	mov    rax,QWORD PTR [rip+0x3986]        # 407ff8 <stderr@GLIBC_2.2.5>
  404672:	mov    rdi,QWORD PTR [rax]
  404675:	lea    rsi,[rip+0x9a0]        # 40501c <_IO_stdin_used@@Base+0x1c>
  40467c:	lea    rdx,[rip+0xc57]        # 4052da <_IO_stdin_used@@Base+0x2da>
  404683:	mov    ecx,0x5b
  404688:	lea    r8,[rip+0xc9f]        # 40532e <_IO_stdin_used@@Base+0x32e>
  40468f:	mov    al,0x0
  404691:	call   4020e0 <fprintf@plt>
  404696:	mov    DWORD PTR [rbp-0x28],eax
  404699:	call   402040 <abort@plt>
  40469e:	jmp    4046a3 <mmk_verify_register_call@@Base+0x173>
  4046a3:	jmp    4046a8 <mmk_verify_register_call@@Base+0x178>
  4046a8:	mov    eax,0x8
  4046ad:	mov    edx,eax
  4046af:	mov    rcx,QWORD PTR [rbp-0x18]
  4046b3:	mov    rcx,QWORD PTR [rcx+0x10]
  4046b7:	mov    rsi,QWORD PTR [rbp-0x18]
  4046bb:	add    rcx,QWORD PTR [rsi+0x18]
  4046bf:	lea    rsi,[rbp-0x10]
  4046c3:	mov    rdi,rcx
  4046c6:	call   404880 <mmk_memcpy@@Base>
  4046cb:	mov    rcx,QWORD PTR [rbp-0x18]
  4046cf:	mov    rcx,QWORD PTR [rcx+0x10]
  4046d3:	mov    rdx,QWORD PTR [rbp-0x18]
  4046d7:	add    rcx,QWORD PTR [rdx+0x18]
  4046db:	add    rcx,0x8
  4046df:	mov    rsi,QWORD PTR [rbp-0x8]
  4046e3:	mov    rdx,QWORD PTR [rbp-0x10]
  4046e7:	mov    rdi,rcx
  4046ea:	mov    QWORD PTR [rbp-0x30],rax
  4046ee:	call   404880 <mmk_memcpy@@Base>
  4046f3:	mov    QWORD PTR [rbp-0x20],rax
  4046f7:	mov    rax,QWORD PTR [rbp-0x20]
  4046fb:	mov    QWORD PTR [rax],0x1
  404702:	mov    rax,QWORD PTR [rbp-0x10]
  404706:	add    rax,0x8
  40470a:	mov    rcx,QWORD PTR [rbp-0x18]
  40470e:	add    rax,QWORD PTR [rcx+0x18]
  404712:	mov    QWORD PTR [rcx+0x18],rax
  404716:	add    rsp,0x30
  40471a:	pop    rbp
  40471b:	ret    
  40471c:	nop    DWORD PTR [rax+0x0]
  404720:	push   rbp
  404721:	mov    rbp,rsp
  404724:	sub    rsp,0x40
  404728:	mov    QWORD PTR [rbp-0x10],rdi
  40472c:	mov    QWORD PTR [rbp-0x18],rsi
  404730:	mov    QWORD PTR [rbp-0x20],rdx
  404734:	mov    rdx,QWORD PTR [rbp-0x18]
  404738:	add    rdx,0x8
  40473c:	mov    QWORD PTR [rbp-0x18],rdx
  404740:	mov    rdx,QWORD PTR [rbp-0x20]
  404744:	sub    rdx,0x8
  404748:	mov    QWORD PTR [rbp-0x20],rdx
  40474c:	mov    rdi,QWORD PTR [rbp-0x10]
  404750:	call   4031a0 <mmk_mock_params_begin@@Base>
  404755:	mov    QWORD PTR [rbp-0x28],rax
  404759:	cmp    QWORD PTR [rbp-0x28],0x0
  40475e:	je     4047c6 <mmk_verify_register_call@@Base+0x296>
  404764:	mov    rax,QWORD PTR [rbp-0x28]
  404768:	add    rax,0x8
  40476c:	mov    rsi,QWORD PTR [rbp-0x18]
  404770:	mov    rdx,QWORD PTR [rbp-0x20]
  404774:	mov    rdi,rax
  404777:	call   4047e0 <mmk_memcmp@@Base>
  40477c:	mov    DWORD PTR [rbp-0x2c],eax
  40477f:	cmp    DWORD PTR [rbp-0x2c],0x0
  404783:	jne    4047ab <mmk_verify_register_call@@Base+0x27b>
  404789:	mov    rax,QWORD PTR [rbp-0x28]
  40478d:	mov    QWORD PTR [rbp-0x38],rax
  404791:	mov    rax,QWORD PTR [rbp-0x38]
  404795:	mov    rcx,QWORD PTR [rax]
  404798:	add    rcx,0x1
  40479c:	mov    QWORD PTR [rax],rcx
  40479f:	mov    DWORD PTR [rbp-0x4],0x1
  4047a6:	jmp    4047cd <mmk_verify_register_call@@Base+0x29d>
  4047ab:	jmp    4047b0 <mmk_verify_register_call@@Base+0x280>
  4047b0:	mov    rdi,QWORD PTR [rbp-0x10]
  4047b4:	mov    rsi,QWORD PTR [rbp-0x28]
  4047b8:	call   4031f0 <mmk_mock_params_next@@Base>
  4047bd:	mov    QWORD PTR [rbp-0x28],rax
  4047c1:	jmp    404759 <mmk_verify_register_call@@Base+0x229>
  4047c6:	mov    DWORD PTR [rbp-0x4],0x0
  4047cd:	mov    eax,DWORD PTR [rbp-0x4]
  4047d0:	add    rsp,0x40
  4047d4:	pop    rbp
  4047d5:	ret    
  4047d6:	nop    WORD PTR cs:[rax+rax*1+0x0]

00000000004047e0 <mmk_memcmp@@Base>:
  4047e0:	push   rbp
  4047e1:	mov    rbp,rsp
  4047e4:	mov    QWORD PTR [rbp-0x10],rdi
  4047e8:	mov    QWORD PTR [rbp-0x18],rsi
  4047ec:	mov    QWORD PTR [rbp-0x20],rdx
  4047f0:	mov    rdx,QWORD PTR [rbp-0x10]
  4047f4:	mov    QWORD PTR [rbp-0x28],rdx
  4047f8:	mov    rdx,QWORD PTR [rbp-0x18]
  4047fc:	mov    QWORD PTR [rbp-0x30],rdx
  404800:	cmp    QWORD PTR [rbp-0x20],0x0
  404805:	je     404874 <mmk_memcmp@@Base+0x94>
  40480b:	mov    rax,QWORD PTR [rbp-0x28]
  40480f:	movsx  ecx,BYTE PTR [rax]
  404812:	mov    rax,QWORD PTR [rbp-0x30]
  404816:	movsx  edx,BYTE PTR [rax]
  404819:	cmp    ecx,edx
  40481b:	je     404846 <mmk_memcmp@@Base+0x66>
  404821:	mov    rax,QWORD PTR [rbp-0x28]
  404825:	movsx  ecx,BYTE PTR [rax]
  404828:	mov    rax,QWORD PTR [rbp-0x30]
  40482c:	movsx  edx,BYTE PTR [rax]
  40482f:	cmp    ecx,edx
  404831:	mov    ecx,0xffffffff
  404836:	mov    edx,0x1
  40483b:	cmovl  edx,ecx
  40483e:	mov    DWORD PTR [rbp-0x4],edx
  404841:	jmp    40487b <mmk_memcmp@@Base+0x9b>
  404846:	jmp    40484b <mmk_memcmp@@Base+0x6b>
  40484b:	mov    rax,QWORD PTR [rbp-0x28]
  40484f:	add    rax,0x1
  404853:	mov    QWORD PTR [rbp-0x28],rax
  404857:	mov    rax,QWORD PTR [rbp-0x30]
  40485b:	add    rax,0x1
  40485f:	mov    QWORD PTR [rbp-0x30],rax
  404863:	mov    rax,QWORD PTR [rbp-0x20]
  404867:	add    rax,0xffffffffffffffff
  40486b:	mov    QWORD PTR [rbp-0x20],rax
  40486f:	jmp    404800 <mmk_memcmp@@Base+0x20>
  404874:	mov    DWORD PTR [rbp-0x4],0x0
  40487b:	mov    eax,DWORD PTR [rbp-0x4]
  40487e:	pop    rbp
  40487f:	ret    

0000000000404880 <mmk_memcpy@@Base>:
  404880:	push   rbp
  404881:	mov    rbp,rsp
  404884:	mov    QWORD PTR [rbp-0x8],rdi
  404888:	mov    QWORD PTR [rbp-0x10],rsi
  40488c:	mov    QWORD PTR [rbp-0x18],rdx
  404890:	mov    rdx,QWORD PTR [rbp-0x10]
  404894:	mov    QWORD PTR [rbp-0x20],rdx
  404898:	mov    rdx,QWORD PTR [rbp-0x8]
  40489c:	mov    QWORD PTR [rbp-0x28],rdx
  4048a0:	cmp    QWORD PTR [rbp-0x18],0x0
  4048a5:	je     4048e0 <mmk_memcpy@@Base+0x60>
  4048ab:	mov    rax,QWORD PTR [rbp-0x20]
  4048af:	mov    cl,BYTE PTR [rax]
  4048b1:	mov    rax,QWORD PTR [rbp-0x28]
  4048b5:	mov    BYTE PTR [rax],cl
  4048b7:	mov    rax,QWORD PTR [rbp-0x28]
  4048bb:	add    rax,0x1
  4048bf:	mov    QWORD PTR [rbp-0x28],rax
  4048c3:	mov    rax,QWORD PTR [rbp-0x20]
  4048c7:	add    rax,0x1
  4048cb:	mov    QWORD PTR [rbp-0x20],rax
  4048cf:	mov    rax,QWORD PTR [rbp-0x18]
  4048d3:	add    rax,0xffffffffffffffff
  4048d7:	mov    QWORD PTR [rbp-0x18],rax
  4048db:	jmp    4048a0 <mmk_memcpy@@Base+0x20>
  4048e0:	mov    rax,QWORD PTR [rbp-0x8]
  4048e4:	pop    rbp
  4048e5:	ret    
  4048e6:	nop    WORD PTR cs:[rax+rax*1+0x0]

00000000004048f0 <mmk_strneq@@Base>:
  4048f0:	push   rbp
  4048f1:	mov    rbp,rsp
  4048f4:	mov    QWORD PTR [rbp-0x10],rdi
  4048f8:	mov    QWORD PTR [rbp-0x18],rsi
  4048fc:	mov    QWORD PTR [rbp-0x20],rdx
  404900:	xor    eax,eax
  404902:	mov    cl,al
  404904:	mov    rdx,QWORD PTR [rbp-0x10]
  404908:	movsx  eax,BYTE PTR [rdx]
  40490b:	cmp    eax,0x0
  40490e:	mov    BYTE PTR [rbp-0x21],cl
  404911:	je     404939 <mmk_strneq@@Base+0x49>
  404917:	xor    eax,eax
  404919:	mov    cl,al
  40491b:	mov    rdx,QWORD PTR [rbp-0x18]
  40491f:	movsx  eax,BYTE PTR [rdx]
  404922:	cmp    eax,0x0
  404925:	mov    BYTE PTR [rbp-0x21],cl
  404928:	je     404939 <mmk_strneq@@Base+0x49>
  40492e:	cmp    QWORD PTR [rbp-0x20],0x0
  404933:	setne  al
  404936:	mov    BYTE PTR [rbp-0x21],al
  404939:	mov    al,BYTE PTR [rbp-0x21]
  40493c:	test   al,0x1
  40493e:	jne    404949 <mmk_strneq@@Base+0x59>
  404944:	jmp    404999 <mmk_strneq@@Base+0xa9>
  404949:	mov    rax,QWORD PTR [rbp-0x10]
  40494d:	movsx  ecx,BYTE PTR [rax]
  404950:	mov    rax,QWORD PTR [rbp-0x18]
  404954:	movsx  edx,BYTE PTR [rax]
  404957:	cmp    ecx,edx
  404959:	je     40496b <mmk_strneq@@Base+0x7b>
  40495f:	mov    DWORD PTR [rbp-0x4],0x0
  404966:	jmp    4049c4 <mmk_strneq@@Base+0xd4>
  40496b:	jmp    404970 <mmk_strneq@@Base+0x80>
  404970:	mov    rax,QWORD PTR [rbp-0x10]
  404974:	add    rax,0x1
  404978:	mov    QWORD PTR [rbp-0x10],rax
  40497c:	mov    rax,QWORD PTR [rbp-0x18]
  404980:	add    rax,0x1
  404984:	mov    QWORD PTR [rbp-0x18],rax
  404988:	mov    rax,QWORD PTR [rbp-0x20]
  40498c:	add    rax,0xffffffffffffffff
  404990:	mov    QWORD PTR [rbp-0x20],rax
  404994:	jmp    404900 <mmk_strneq@@Base+0x10>
  404999:	cmp    QWORD PTR [rbp-0x20],0x0
  40499e:	mov    al,0x1
  4049a0:	mov    BYTE PTR [rbp-0x22],al
  4049a3:	je     4049b9 <mmk_strneq@@Base+0xc9>
  4049a9:	mov    rax,QWORD PTR [rbp-0x18]
  4049ad:	cmp    BYTE PTR [rax],0x0
  4049b0:	setne  cl
  4049b3:	xor    cl,0xff
  4049b6:	mov    BYTE PTR [rbp-0x22],cl
  4049b9:	mov    al,BYTE PTR [rbp-0x22]
  4049bc:	and    al,0x1
  4049be:	movzx  ecx,al
  4049c1:	mov    DWORD PTR [rbp-0x4],ecx
  4049c4:	mov    eax,DWORD PTR [rbp-0x4]
  4049c7:	pop    rbp
  4049c8:	ret    
  4049c9:	nop    DWORD PTR [rax+0x0]

00000000004049d0 <mmk_strchr@@Base>:
  4049d0:	push   rbp
  4049d1:	mov    rbp,rsp
  4049d4:	mov    QWORD PTR [rbp-0x10],rdi
  4049d8:	mov    DWORD PTR [rbp-0x14],esi
  4049db:	mov    rax,QWORD PTR [rbp-0x10]
  4049df:	cmp    BYTE PTR [rax],0x0
  4049e2:	je     404a1b <mmk_strchr@@Base+0x4b>
  4049e8:	mov    rax,QWORD PTR [rbp-0x10]
  4049ec:	movsx  ecx,BYTE PTR [rax]
  4049ef:	cmp    ecx,DWORD PTR [rbp-0x14]
  4049f2:	jne    404a05 <mmk_strchr@@Base+0x35>
  4049f8:	mov    rax,QWORD PTR [rbp-0x10]
  4049fc:	mov    QWORD PTR [rbp-0x8],rax
  404a00:	jmp    404a23 <mmk_strchr@@Base+0x53>
  404a05:	jmp    404a0a <mmk_strchr@@Base+0x3a>
  404a0a:	mov    rax,QWORD PTR [rbp-0x10]
  404a0e:	add    rax,0x1
  404a12:	mov    QWORD PTR [rbp-0x10],rax
  404a16:	jmp    4049db <mmk_strchr@@Base+0xb>
  404a1b:	mov    QWORD PTR [rbp-0x8],0x0
  404a23:	mov    rax,QWORD PTR [rbp-0x8]
  404a27:	pop    rbp
  404a28:	ret    
  404a29:	nop    DWORD PTR [rax+0x0]

0000000000404a30 <mmk_strcpy@@Base>:
  404a30:	push   rbp
  404a31:	mov    rbp,rsp
  404a34:	mov    QWORD PTR [rbp-0x8],rdi
  404a38:	mov    QWORD PTR [rbp-0x10],rsi
  404a3c:	mov    rax,QWORD PTR [rbp-0x10]
  404a40:	cmp    BYTE PTR [rax],0x0
  404a43:	je     404a72 <mmk_strcpy@@Base+0x42>
  404a49:	mov    rax,QWORD PTR [rbp-0x10]
  404a4d:	mov    cl,BYTE PTR [rax]
  404a4f:	mov    rax,QWORD PTR [rbp-0x8]
  404a53:	mov    BYTE PTR [rax],cl
  404a55:	mov    rax,QWORD PTR [rbp-0x8]
  404a59:	add    rax,0x1
  404a5d:	mov    QWORD PTR [rbp-0x8],rax
  404a61:	mov    rax,QWORD PTR [rbp-0x10]
  404a65:	add    rax,0x1
  404a69:	mov    QWORD PTR [rbp-0x10],rax
  404a6d:	jmp    404a3c <mmk_strcpy@@Base+0xc>
  404a72:	mov    rax,QWORD PTR [rbp-0x8]
  404a76:	mov    BYTE PTR [rax],0x0
  404a79:	mov    rax,QWORD PTR [rbp-0x8]
  404a7d:	pop    rbp
  404a7e:	ret    
  404a7f:	nop

0000000000404a80 <mmk_strncpy@@Base>:
  404a80:	push   rbp
  404a81:	mov    rbp,rsp
  404a84:	mov    QWORD PTR [rbp-0x8],rdi
  404a88:	mov    QWORD PTR [rbp-0x10],rsi
  404a8c:	mov    QWORD PTR [rbp-0x18],rdx
  404a90:	xor    eax,eax
  404a92:	mov    cl,al
  404a94:	mov    rdx,QWORD PTR [rbp-0x10]
  404a98:	movsx  eax,BYTE PTR [rdx]
  404a9b:	cmp    eax,0x0
  404a9e:	mov    BYTE PTR [rbp-0x19],cl
  404aa1:	je     404ab2 <mmk_strncpy@@Base+0x32>
  404aa7:	cmp    QWORD PTR [rbp-0x18],0x0
  404aac:	setne  al
  404aaf:	mov    BYTE PTR [rbp-0x19],al
  404ab2:	mov    al,BYTE PTR [rbp-0x19]
  404ab5:	test   al,0x1
  404ab7:	jne    404ac2 <mmk_strncpy@@Base+0x42>
  404abd:	jmp    404af7 <mmk_strncpy@@Base+0x77>
  404ac2:	mov    rax,QWORD PTR [rbp-0x10]
  404ac6:	mov    cl,BYTE PTR [rax]
  404ac8:	mov    rax,QWORD PTR [rbp-0x8]
  404acc:	mov    BYTE PTR [rax],cl
  404ace:	mov    rax,QWORD PTR [rbp-0x8]
  404ad2:	add    rax,0x1
  404ad6:	mov    QWORD PTR [rbp-0x8],rax
  404ada:	mov    rax,QWORD PTR [rbp-0x10]
  404ade:	add    rax,0x1
  404ae2:	mov    QWORD PTR [rbp-0x10],rax
  404ae6:	mov    rax,QWORD PTR [rbp-0x18]
  404aea:	add    rax,0xffffffffffffffff
  404aee:	mov    QWORD PTR [rbp-0x18],rax
  404af2:	jmp    404a90 <mmk_strncpy@@Base+0x10>
  404af7:	mov    rax,QWORD PTR [rbp-0x8]
  404afb:	mov    BYTE PTR [rax],0x0
  404afe:	mov    rax,QWORD PTR [rbp-0x8]
  404b02:	pop    rbp
  404b03:	ret    
  404b04:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404b0e:	xchg   ax,ax

0000000000404b10 <mmk_strlen@@Base>:
  404b10:	push   rbp
  404b11:	mov    rbp,rsp
  404b14:	mov    QWORD PTR [rbp-0x8],rdi
  404b18:	mov    QWORD PTR [rbp-0x10],0x0
  404b20:	mov    rax,QWORD PTR [rbp-0x8]
  404b24:	cmp    BYTE PTR [rax],0x0
  404b27:	je     404b4f <mmk_strlen@@Base+0x3f>
  404b2d:	jmp    404b32 <mmk_strlen@@Base+0x22>
  404b32:	mov    rax,QWORD PTR [rbp-0x10]
  404b36:	add    rax,0x1
  404b3a:	mov    QWORD PTR [rbp-0x10],rax
  404b3e:	mov    rax,QWORD PTR [rbp-0x8]
  404b42:	add    rax,0x1
  404b46:	mov    QWORD PTR [rbp-0x8],rax
  404b4a:	jmp    404b20 <mmk_strlen@@Base+0x10>
  404b4f:	mov    rax,QWORD PTR [rbp-0x10]
  404b53:	pop    rbp
  404b54:	ret    
  404b55:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404b5f:	nop

0000000000404b60 <mmk_isspace@@Base>:
  404b60:	push   rbp
  404b61:	mov    rbp,rsp
  404b64:	mov    DWORD PTR [rbp-0x4],edi
  404b67:	cmp    DWORD PTR [rbp-0x4],0x20
  404b6b:	mov    al,0x1
  404b6d:	mov    BYTE PTR [rbp-0x5],al
  404b70:	je     404b9e <mmk_isspace@@Base+0x3e>
  404b76:	cmp    DWORD PTR [rbp-0x4],0x9
  404b7a:	mov    al,0x1
  404b7c:	mov    BYTE PTR [rbp-0x5],al
  404b7f:	je     404b9e <mmk_isspace@@Base+0x3e>
  404b85:	cmp    DWORD PTR [rbp-0x4],0xd
  404b89:	mov    al,0x1
  404b8b:	mov    BYTE PTR [rbp-0x5],al
  404b8e:	je     404b9e <mmk_isspace@@Base+0x3e>
  404b94:	cmp    DWORD PTR [rbp-0x4],0xa
  404b98:	sete   al
  404b9b:	mov    BYTE PTR [rbp-0x5],al
  404b9e:	mov    al,BYTE PTR [rbp-0x5]
  404ba1:	and    al,0x1
  404ba3:	movzx  eax,al
  404ba6:	pop    rbp
  404ba7:	ret    
  404ba8:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000404bb0 <mmk_malloc@@Base>:
  404bb0:	push   rbp
  404bb1:	mov    rbp,rsp
  404bb4:	sub    rsp,0x10
  404bb8:	lea    rax,[rip+0x3539]        # 4080f8 <mmk_malloc_@@Base>
  404bbf:	mov    QWORD PTR [rbp-0x8],rdi
  404bc3:	mov    rax,QWORD PTR [rax]
  404bc6:	mov    rdi,QWORD PTR [rbp-0x8]
  404bca:	call   rax
  404bcc:	add    rsp,0x10
  404bd0:	pop    rbp
  404bd1:	ret    
  404bd2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404bdc:	nop    DWORD PTR [rax+0x0]

0000000000404be0 <mmk_realloc@@Base>:
  404be0:	push   rbp
  404be1:	mov    rbp,rsp
  404be4:	sub    rsp,0x10
  404be8:	lea    rax,[rip+0x34f9]        # 4080e8 <mmk_realloc_@@Base>
  404bef:	mov    QWORD PTR [rbp-0x8],rdi
  404bf3:	mov    QWORD PTR [rbp-0x10],rsi
  404bf7:	mov    rax,QWORD PTR [rax]
  404bfa:	mov    rdi,QWORD PTR [rbp-0x8]
  404bfe:	mov    rsi,QWORD PTR [rbp-0x10]
  404c02:	call   rax
  404c04:	add    rsp,0x10
  404c08:	pop    rbp
  404c09:	ret    
  404c0a:	nop    WORD PTR [rax+rax*1+0x0]

0000000000404c10 <mmk_free@@Base>:
  404c10:	push   rbp
  404c11:	mov    rbp,rsp
  404c14:	sub    rsp,0x10
  404c18:	lea    rax,[rip+0x34d1]        # 4080f0 <mmk_free_@@Base>
  404c1f:	mov    QWORD PTR [rbp-0x8],rdi
  404c23:	mov    rax,QWORD PTR [rax]
  404c26:	mov    rdi,QWORD PTR [rbp-0x8]
  404c2a:	call   rax
  404c2c:	add    rsp,0x10
  404c30:	pop    rbp
  404c31:	ret    
  404c32:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404c3c:	nop    DWORD PTR [rax+0x0]

0000000000404c40 <mmk_init_vital_functions@@Base>:
  404c40:	push   rbp
  404c41:	mov    rbp,rsp
  404c44:	sub    rsp,0x20
  404c48:	xor    eax,eax
  404c4a:	mov    ecx,eax
  404c4c:	mov    QWORD PTR [rbp-0x8],rdi
  404c50:	mov    rdi,rcx
  404c53:	call   402150 <malloc@plt>
  404c58:	xor    edx,edx
  404c5a:	mov    esi,edx
  404c5c:	mov    rdi,rax
  404c5f:	call   402100 <realloc@plt>
  404c64:	mov    rdi,rax
  404c67:	call   402030 <free@plt>
  404c6c:	mov    rdi,QWORD PTR [rbp-0x8]
  404c70:	lea    rsi,[rip+0x6c7]        # 40533e <_IO_stdin_used@@Base+0x33e>
  404c77:	call   403a50 <plt_get_real_fn@@Base>
  404c7c:	lea    rsi,[rip+0x3475]        # 4080f8 <mmk_malloc_@@Base>
  404c83:	mov    QWORD PTR [rsi],rax
  404c86:	cmp    rax,0x0
  404c8a:	jne    404cc3 <mmk_init_vital_functions@@Base+0x83>
  404c90:	mov    rax,QWORD PTR [rip+0x3361]        # 407ff8 <stderr@GLIBC_2.2.5>
  404c97:	mov    rdi,QWORD PTR [rax]
  404c9a:	lea    rsi,[rip+0x37b]        # 40501c <_IO_stdin_used@@Base+0x1c>
  404ca1:	lea    rdx,[rip+0x69d]        # 405345 <_IO_stdin_used@@Base+0x345>
  404ca8:	mov    ecx,0x58
  404cad:	lea    r8,[rip+0x6e5]        # 405399 <_IO_stdin_used@@Base+0x399>
  404cb4:	mov    al,0x0
  404cb6:	call   4020e0 <fprintf@plt>
  404cbb:	mov    DWORD PTR [rbp-0xc],eax
  404cbe:	call   402040 <abort@plt>
  404cc3:	jmp    404cc8 <mmk_init_vital_functions@@Base+0x88>
  404cc8:	jmp    404ccd <mmk_init_vital_functions@@Base+0x8d>
  404ccd:	mov    rdi,QWORD PTR [rbp-0x8]
  404cd1:	lea    rsi,[rip+0x6f7]        # 4053cf <_IO_stdin_used@@Base+0x3cf>
  404cd8:	call   403a50 <plt_get_real_fn@@Base>
  404cdd:	lea    rsi,[rip+0x3404]        # 4080e8 <mmk_realloc_@@Base>
  404ce4:	mov    QWORD PTR [rsi],rax
  404ce7:	cmp    rax,0x0
  404ceb:	jne    404d24 <mmk_init_vital_functions@@Base+0xe4>
  404cf1:	mov    rax,QWORD PTR [rip+0x3300]        # 407ff8 <stderr@GLIBC_2.2.5>
  404cf8:	mov    rdi,QWORD PTR [rax]
  404cfb:	lea    rsi,[rip+0x31a]        # 40501c <_IO_stdin_used@@Base+0x1c>
  404d02:	lea    rdx,[rip+0x63c]        # 405345 <_IO_stdin_used@@Base+0x345>
  404d09:	mov    ecx,0x59
  404d0e:	lea    r8,[rip+0x6c2]        # 4053d7 <_IO_stdin_used@@Base+0x3d7>
  404d15:	mov    al,0x0
  404d17:	call   4020e0 <fprintf@plt>
  404d1c:	mov    DWORD PTR [rbp-0x10],eax
  404d1f:	call   402040 <abort@plt>
  404d24:	jmp    404d29 <mmk_init_vital_functions@@Base+0xe9>
  404d29:	jmp    404d2e <mmk_init_vital_functions@@Base+0xee>
  404d2e:	mov    rdi,QWORD PTR [rbp-0x8]
  404d32:	lea    rsi,[rip+0x6d6]        # 40540f <_IO_stdin_used@@Base+0x40f>
  404d39:	call   403a50 <plt_get_real_fn@@Base>
  404d3e:	lea    rsi,[rip+0x33ab]        # 4080f0 <mmk_free_@@Base>
  404d45:	mov    QWORD PTR [rsi],rax
  404d48:	cmp    rax,0x0
  404d4c:	jne    404d85 <mmk_init_vital_functions@@Base+0x145>
  404d52:	mov    rax,QWORD PTR [rip+0x329f]        # 407ff8 <stderr@GLIBC_2.2.5>
  404d59:	mov    rdi,QWORD PTR [rax]
  404d5c:	lea    rsi,[rip+0x2b9]        # 40501c <_IO_stdin_used@@Base+0x1c>
  404d63:	lea    rdx,[rip+0x5db]        # 405345 <_IO_stdin_used@@Base+0x345>
  404d6a:	mov    ecx,0x5a
  404d6f:	lea    r8,[rip+0x69e]        # 405414 <_IO_stdin_used@@Base+0x414>
  404d76:	mov    al,0x0
  404d78:	call   4020e0 <fprintf@plt>
  404d7d:	mov    DWORD PTR [rbp-0x14],eax
  404d80:	call   402040 <abort@plt>
  404d85:	jmp    404d8a <mmk_init_vital_functions@@Base+0x14a>
  404d8a:	add    rsp,0x20
  404d8e:	pop    rbp
  404d8f:	ret    

0000000000404d90 <mmk_when_init@@Base>:
  404d90:	push   rbp
  404d91:	mov    rbp,rsp
  404d94:	sub    rsp,0x10
  404d98:	mov    QWORD PTR [rbp-0x8],rdi
  404d9c:	mov    rdi,QWORD PTR [rbp-0x8]
  404da0:	mov    QWORD PTR [rbp-0x10],rdi
  404da4:	data16 data16 data16 mov rax,QWORD PTR fs:0x0
  404db0:	mov    rcx,QWORD PTR [rbp-0x10]
  404db4:	mov    QWORD PTR [rax-0x8],rcx
  404dbb:	add    rsp,0x10
  404dbf:	pop    rbp
  404dc0:	ret    
  404dc1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404dcb:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000404dd0 <mmk_when_get_result@@Base>:
  404dd0:	push   rbp
  404dd1:	mov    rbp,rsp
  404dd4:	data16 data16 data16 mov rax,QWORD PTR fs:0x0
  404de0:	mov    rax,QWORD PTR [rax-0x8]
  404de7:	pop    rbp
  404de8:	ret    
  404de9:	nop    DWORD PTR [rax+0x0]

0000000000404df0 <mmk_when_impl@@Base>:
  404df0:	push   rbp
  404df1:	mov    rbp,rsp
  404df4:	sub    rsp,0x20
  404df8:	mov    QWORD PTR [rbp-0x8],rdi
  404dfc:	mov    QWORD PTR [rbp-0x10],rsi
  404e00:	mov    rsi,QWORD PTR [rbp-0x10]
  404e04:	mov    QWORD PTR [rbp-0x18],rsi
  404e08:	call   402d80 <mmk_matcher_ctx@@Base>
  404e0d:	mov    rsi,QWORD PTR [rbp-0x18]
  404e11:	mov    QWORD PTR [rsi],rax
  404e14:	mov    rax,QWORD PTR [rbp-0x8]
  404e18:	mov    rax,QWORD PTR [rax]
  404e1b:	mov    rsi,QWORD PTR [rbp-0x18]
  404e1f:	mov    QWORD PTR [rsi+0x8],rax
  404e23:	mov    rax,QWORD PTR [rbp-0x18]
  404e27:	mov    rsi,QWORD PTR [rbp-0x8]
  404e2b:	mov    QWORD PTR [rsi],rax
  404e2e:	add    rsp,0x20
  404e32:	pop    rbp
  404e33:	ret    

0000000000404e34 <mmk_trampoline@@Base>:
  404e34:	call   404e39 <mmk_trampoline@@Base+0x5>
  404e39:	pop    rax
  404e3a:	push   rax
  404e3b:	mov    rax,QWORD PTR [rax-0x15]
  404e42:	push   rdi
  404e43:	push   rsi
  404e44:	push   rdx
  404e45:	push   rcx
  404e46:	push   r8
  404e48:	push   r9
  404e4a:	sub    rsp,0x10
  404e4e:	movdqu XMMWORD PTR [rsp],xmm0
  404e53:	sub    rsp,0x10
  404e57:	movdqu XMMWORD PTR [rsp],xmm1
  404e5c:	sub    rsp,0x10
  404e60:	movdqu XMMWORD PTR [rsp],xmm2
  404e65:	sub    rsp,0x10
  404e69:	movdqu XMMWORD PTR [rsp],xmm3
  404e6e:	sub    rsp,0x10
  404e72:	movdqu XMMWORD PTR [rsp],xmm4
  404e77:	sub    rsp,0x10
  404e7b:	movdqu XMMWORD PTR [rsp],xmm5
  404e80:	sub    rsp,0x10
  404e84:	movdqu XMMWORD PTR [rsp],xmm6
  404e89:	sub    rsp,0x10
  404e8d:	movdqu XMMWORD PTR [rsp],xmm7
  404e92:	mov    rdi,rax
  404e95:	push   rax
  404e96:	mov    rax,QWORD PTR [rax+0x8]
  404e9a:	call   rax
  404e9c:	pop    rax
  404e9d:	mov    rax,QWORD PTR [rax]
  404ea0:	call   rax
  404ea2:	movdqu xmm7,XMMWORD PTR [rsp]
  404ea7:	add    rsp,0x10
  404eab:	movdqu xmm6,XMMWORD PTR [rsp]
  404eb0:	add    rsp,0x10
  404eb4:	movdqu xmm5,XMMWORD PTR [rsp]
  404eb9:	add    rsp,0x10
  404ebd:	movdqu xmm4,XMMWORD PTR [rsp]
  404ec2:	add    rsp,0x10
  404ec6:	movdqu xmm3,XMMWORD PTR [rsp]
  404ecb:	add    rsp,0x10
  404ecf:	movdqu xmm2,XMMWORD PTR [rsp]
  404ed4:	add    rsp,0x10
  404ed8:	movdqu xmm1,XMMWORD PTR [rsp]
  404edd:	add    rsp,0x10
  404ee1:	movdqu xmm0,XMMWORD PTR [rsp]
  404ee6:	add    rsp,0x10
  404eea:	pop    r9
  404eec:	pop    r8
  404eee:	pop    rcx
  404eef:	pop    rdx
  404ef0:	pop    rsi
  404ef1:	pop    rdi
  404ef2:	test   rax,rax
  404ef5:	jne    404f01 <mmk_trampoline@@Base+0xcd>
  404ef7:	pop    rax
  404ef8:	mov    rax,QWORD PTR [rax-0xd]
  404eff:	jmp    rax
  404f01:	pop    rax
  404f02:	mov    rax,QWORD PTR [rax-0x15]
  404f09:	mov    rax,QWORD PTR [rax+0x10]
  404f0d:	call   rax
  404f0f:	ret    

0000000000404f10 <mmk_trampoline_end@@Base>:
  404f10:	nop
  404f11:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404f1b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000404f20 <__libc_csu_init@@Base>:
  404f20:	endbr64 
  404f24:	push   r15
  404f26:	lea    r15,[rip+0x2e83]        # 407db0 <_IO_stdin_used@@Base+0x2db0>
  404f2d:	push   r14
  404f2f:	mov    r14,rdx
  404f32:	push   r13
  404f34:	mov    r13,rsi
  404f37:	push   r12
  404f39:	mov    r12d,edi
  404f3c:	push   rbp
  404f3d:	lea    rbp,[rip+0x2e74]        # 407db8 <_IO_stdin_used@@Base+0x2db8>
  404f44:	push   rbx
  404f45:	sub    rbp,r15
  404f48:	sub    rsp,0x8
  404f4c:	call   402000 <free@plt-0x30>
  404f51:	sar    rbp,0x3
  404f55:	je     404f76 <__libc_csu_init@@Base+0x56>
  404f57:	xor    ebx,ebx
  404f59:	nop    DWORD PTR [rax+0x0]
  404f60:	mov    rdx,r14
  404f63:	mov    rsi,r13
  404f66:	mov    edi,r12d
  404f69:	call   QWORD PTR [r15+rbx*8]
  404f6d:	add    rbx,0x1
  404f71:	cmp    rbp,rbx
  404f74:	jne    404f60 <__libc_csu_init@@Base+0x40>
  404f76:	add    rsp,0x8
  404f7a:	pop    rbx
  404f7b:	pop    rbp
  404f7c:	pop    r12
  404f7e:	pop    r13
  404f80:	pop    r14
  404f82:	pop    r15
  404f84:	ret    
  404f85:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

0000000000404f90 <__libc_csu_fini@@Base>:
  404f90:	endbr64 
  404f94:	ret    

Disassembly of section .fini:

0000000000404f98 <.fini>:
  404f98:	endbr64 
  404f9c:	sub    rsp,0x8
  404fa0:	add    rsp,0x8
  404fa4:	ret    
