
../repos/oor/oor/oor:     file format elf64-x86-64


Disassembly of section .init:

0000000000403000 <.init>:
  403000:	endbr64 
  403004:	sub    rsp,0x8
  403008:	mov    rax,QWORD PTR [rip+0x65fe9]        # 468ff8 <xmlStrEqual@plt+0x650b8>
  40300f:	test   rax,rax
  403012:	je     403016 <free@plt-0x79a>
  403014:	call   rax
  403016:	add    rsp,0x8
  40301a:	ret    

Disassembly of section .plt:

0000000000403020 <.plt>:
  403020:	push   QWORD PTR [rip+0x65fe2]        # 469008 <xmlStrEqual@plt+0x650c8>
  403026:	bnd jmp QWORD PTR [rip+0x65fe3]        # 469010 <xmlStrEqual@plt+0x650d0>
  40302d:	nop    DWORD PTR [rax]
  403030:	endbr64 
  403034:	push   0x0
  403039:	bnd jmp 403020 <free@plt-0x790>
  40303f:	nop
  403040:	endbr64 
  403044:	push   0x1
  403049:	bnd jmp 403020 <free@plt-0x790>
  40304f:	nop
  403050:	endbr64 
  403054:	push   0x2
  403059:	bnd jmp 403020 <free@plt-0x790>
  40305f:	nop
  403060:	endbr64 
  403064:	push   0x3
  403069:	bnd jmp 403020 <free@plt-0x790>
  40306f:	nop
  403070:	endbr64 
  403074:	push   0x4
  403079:	bnd jmp 403020 <free@plt-0x790>
  40307f:	nop
  403080:	endbr64 
  403084:	push   0x5
  403089:	bnd jmp 403020 <free@plt-0x790>
  40308f:	nop
  403090:	endbr64 
  403094:	push   0x6
  403099:	bnd jmp 403020 <free@plt-0x790>
  40309f:	nop
  4030a0:	endbr64 
  4030a4:	push   0x7
  4030a9:	bnd jmp 403020 <free@plt-0x790>
  4030af:	nop
  4030b0:	endbr64 
  4030b4:	push   0x8
  4030b9:	bnd jmp 403020 <free@plt-0x790>
  4030bf:	nop
  4030c0:	endbr64 
  4030c4:	push   0x9
  4030c9:	bnd jmp 403020 <free@plt-0x790>
  4030cf:	nop
  4030d0:	endbr64 
  4030d4:	push   0xa
  4030d9:	bnd jmp 403020 <free@plt-0x790>
  4030df:	nop
  4030e0:	endbr64 
  4030e4:	push   0xb
  4030e9:	bnd jmp 403020 <free@plt-0x790>
  4030ef:	nop
  4030f0:	endbr64 
  4030f4:	push   0xc
  4030f9:	bnd jmp 403020 <free@plt-0x790>
  4030ff:	nop
  403100:	endbr64 
  403104:	push   0xd
  403109:	bnd jmp 403020 <free@plt-0x790>
  40310f:	nop
  403110:	endbr64 
  403114:	push   0xe
  403119:	bnd jmp 403020 <free@plt-0x790>
  40311f:	nop
  403120:	endbr64 
  403124:	push   0xf
  403129:	bnd jmp 403020 <free@plt-0x790>
  40312f:	nop
  403130:	endbr64 
  403134:	push   0x10
  403139:	bnd jmp 403020 <free@plt-0x790>
  40313f:	nop
  403140:	endbr64 
  403144:	push   0x11
  403149:	bnd jmp 403020 <free@plt-0x790>
  40314f:	nop
  403150:	endbr64 
  403154:	push   0x12
  403159:	bnd jmp 403020 <free@plt-0x790>
  40315f:	nop
  403160:	endbr64 
  403164:	push   0x13
  403169:	bnd jmp 403020 <free@plt-0x790>
  40316f:	nop
  403170:	endbr64 
  403174:	push   0x14
  403179:	bnd jmp 403020 <free@plt-0x790>
  40317f:	nop
  403180:	endbr64 
  403184:	push   0x15
  403189:	bnd jmp 403020 <free@plt-0x790>
  40318f:	nop
  403190:	endbr64 
  403194:	push   0x16
  403199:	bnd jmp 403020 <free@plt-0x790>
  40319f:	nop
  4031a0:	endbr64 
  4031a4:	push   0x17
  4031a9:	bnd jmp 403020 <free@plt-0x790>
  4031af:	nop
  4031b0:	endbr64 
  4031b4:	push   0x18
  4031b9:	bnd jmp 403020 <free@plt-0x790>
  4031bf:	nop
  4031c0:	endbr64 
  4031c4:	push   0x19
  4031c9:	bnd jmp 403020 <free@plt-0x790>
  4031cf:	nop
  4031d0:	endbr64 
  4031d4:	push   0x1a
  4031d9:	bnd jmp 403020 <free@plt-0x790>
  4031df:	nop
  4031e0:	endbr64 
  4031e4:	push   0x1b
  4031e9:	bnd jmp 403020 <free@plt-0x790>
  4031ef:	nop
  4031f0:	endbr64 
  4031f4:	push   0x1c
  4031f9:	bnd jmp 403020 <free@plt-0x790>
  4031ff:	nop
  403200:	endbr64 
  403204:	push   0x1d
  403209:	bnd jmp 403020 <free@plt-0x790>
  40320f:	nop
  403210:	endbr64 
  403214:	push   0x1e
  403219:	bnd jmp 403020 <free@plt-0x790>
  40321f:	nop
  403220:	endbr64 
  403224:	push   0x1f
  403229:	bnd jmp 403020 <free@plt-0x790>
  40322f:	nop
  403230:	endbr64 
  403234:	push   0x20
  403239:	bnd jmp 403020 <free@plt-0x790>
  40323f:	nop
  403240:	endbr64 
  403244:	push   0x21
  403249:	bnd jmp 403020 <free@plt-0x790>
  40324f:	nop
  403250:	endbr64 
  403254:	push   0x22
  403259:	bnd jmp 403020 <free@plt-0x790>
  40325f:	nop
  403260:	endbr64 
  403264:	push   0x23
  403269:	bnd jmp 403020 <free@plt-0x790>
  40326f:	nop
  403270:	endbr64 
  403274:	push   0x24
  403279:	bnd jmp 403020 <free@plt-0x790>
  40327f:	nop
  403280:	endbr64 
  403284:	push   0x25
  403289:	bnd jmp 403020 <free@plt-0x790>
  40328f:	nop
  403290:	endbr64 
  403294:	push   0x26
  403299:	bnd jmp 403020 <free@plt-0x790>
  40329f:	nop
  4032a0:	endbr64 
  4032a4:	push   0x27
  4032a9:	bnd jmp 403020 <free@plt-0x790>
  4032af:	nop
  4032b0:	endbr64 
  4032b4:	push   0x28
  4032b9:	bnd jmp 403020 <free@plt-0x790>
  4032bf:	nop
  4032c0:	endbr64 
  4032c4:	push   0x29
  4032c9:	bnd jmp 403020 <free@plt-0x790>
  4032cf:	nop
  4032d0:	endbr64 
  4032d4:	push   0x2a
  4032d9:	bnd jmp 403020 <free@plt-0x790>
  4032df:	nop
  4032e0:	endbr64 
  4032e4:	push   0x2b
  4032e9:	bnd jmp 403020 <free@plt-0x790>
  4032ef:	nop
  4032f0:	endbr64 
  4032f4:	push   0x2c
  4032f9:	bnd jmp 403020 <free@plt-0x790>
  4032ff:	nop
  403300:	endbr64 
  403304:	push   0x2d
  403309:	bnd jmp 403020 <free@plt-0x790>
  40330f:	nop
  403310:	endbr64 
  403314:	push   0x2e
  403319:	bnd jmp 403020 <free@plt-0x790>
  40331f:	nop
  403320:	endbr64 
  403324:	push   0x2f
  403329:	bnd jmp 403020 <free@plt-0x790>
  40332f:	nop
  403330:	endbr64 
  403334:	push   0x30
  403339:	bnd jmp 403020 <free@plt-0x790>
  40333f:	nop
  403340:	endbr64 
  403344:	push   0x31
  403349:	bnd jmp 403020 <free@plt-0x790>
  40334f:	nop
  403350:	endbr64 
  403354:	push   0x32
  403359:	bnd jmp 403020 <free@plt-0x790>
  40335f:	nop
  403360:	endbr64 
  403364:	push   0x33
  403369:	bnd jmp 403020 <free@plt-0x790>
  40336f:	nop
  403370:	endbr64 
  403374:	push   0x34
  403379:	bnd jmp 403020 <free@plt-0x790>
  40337f:	nop
  403380:	endbr64 
  403384:	push   0x35
  403389:	bnd jmp 403020 <free@plt-0x790>
  40338f:	nop
  403390:	endbr64 
  403394:	push   0x36
  403399:	bnd jmp 403020 <free@plt-0x790>
  40339f:	nop
  4033a0:	endbr64 
  4033a4:	push   0x37
  4033a9:	bnd jmp 403020 <free@plt-0x790>
  4033af:	nop
  4033b0:	endbr64 
  4033b4:	push   0x38
  4033b9:	bnd jmp 403020 <free@plt-0x790>
  4033bf:	nop
  4033c0:	endbr64 
  4033c4:	push   0x39
  4033c9:	bnd jmp 403020 <free@plt-0x790>
  4033cf:	nop
  4033d0:	endbr64 
  4033d4:	push   0x3a
  4033d9:	bnd jmp 403020 <free@plt-0x790>
  4033df:	nop
  4033e0:	endbr64 
  4033e4:	push   0x3b
  4033e9:	bnd jmp 403020 <free@plt-0x790>
  4033ef:	nop
  4033f0:	endbr64 
  4033f4:	push   0x3c
  4033f9:	bnd jmp 403020 <free@plt-0x790>
  4033ff:	nop
  403400:	endbr64 
  403404:	push   0x3d
  403409:	bnd jmp 403020 <free@plt-0x790>
  40340f:	nop
  403410:	endbr64 
  403414:	push   0x3e
  403419:	bnd jmp 403020 <free@plt-0x790>
  40341f:	nop
  403420:	endbr64 
  403424:	push   0x3f
  403429:	bnd jmp 403020 <free@plt-0x790>
  40342f:	nop
  403430:	endbr64 
  403434:	push   0x40
  403439:	bnd jmp 403020 <free@plt-0x790>
  40343f:	nop
  403440:	endbr64 
  403444:	push   0x41
  403449:	bnd jmp 403020 <free@plt-0x790>
  40344f:	nop
  403450:	endbr64 
  403454:	push   0x42
  403459:	bnd jmp 403020 <free@plt-0x790>
  40345f:	nop
  403460:	endbr64 
  403464:	push   0x43
  403469:	bnd jmp 403020 <free@plt-0x790>
  40346f:	nop
  403470:	endbr64 
  403474:	push   0x44
  403479:	bnd jmp 403020 <free@plt-0x790>
  40347f:	nop
  403480:	endbr64 
  403484:	push   0x45
  403489:	bnd jmp 403020 <free@plt-0x790>
  40348f:	nop
  403490:	endbr64 
  403494:	push   0x46
  403499:	bnd jmp 403020 <free@plt-0x790>
  40349f:	nop
  4034a0:	endbr64 
  4034a4:	push   0x47
  4034a9:	bnd jmp 403020 <free@plt-0x790>
  4034af:	nop
  4034b0:	endbr64 
  4034b4:	push   0x48
  4034b9:	bnd jmp 403020 <free@plt-0x790>
  4034bf:	nop
  4034c0:	endbr64 
  4034c4:	push   0x49
  4034c9:	bnd jmp 403020 <free@plt-0x790>
  4034cf:	nop
  4034d0:	endbr64 
  4034d4:	push   0x4a
  4034d9:	bnd jmp 403020 <free@plt-0x790>
  4034df:	nop
  4034e0:	endbr64 
  4034e4:	push   0x4b
  4034e9:	bnd jmp 403020 <free@plt-0x790>
  4034ef:	nop
  4034f0:	endbr64 
  4034f4:	push   0x4c
  4034f9:	bnd jmp 403020 <free@plt-0x790>
  4034ff:	nop
  403500:	endbr64 
  403504:	push   0x4d
  403509:	bnd jmp 403020 <free@plt-0x790>
  40350f:	nop
  403510:	endbr64 
  403514:	push   0x4e
  403519:	bnd jmp 403020 <free@plt-0x790>
  40351f:	nop
  403520:	endbr64 
  403524:	push   0x4f
  403529:	bnd jmp 403020 <free@plt-0x790>
  40352f:	nop
  403530:	endbr64 
  403534:	push   0x50
  403539:	bnd jmp 403020 <free@plt-0x790>
  40353f:	nop
  403540:	endbr64 
  403544:	push   0x51
  403549:	bnd jmp 403020 <free@plt-0x790>
  40354f:	nop
  403550:	endbr64 
  403554:	push   0x52
  403559:	bnd jmp 403020 <free@plt-0x790>
  40355f:	nop
  403560:	endbr64 
  403564:	push   0x53
  403569:	bnd jmp 403020 <free@plt-0x790>
  40356f:	nop
  403570:	endbr64 
  403574:	push   0x54
  403579:	bnd jmp 403020 <free@plt-0x790>
  40357f:	nop
  403580:	endbr64 
  403584:	push   0x55
  403589:	bnd jmp 403020 <free@plt-0x790>
  40358f:	nop
  403590:	endbr64 
  403594:	push   0x56
  403599:	bnd jmp 403020 <free@plt-0x790>
  40359f:	nop
  4035a0:	endbr64 
  4035a4:	push   0x57
  4035a9:	bnd jmp 403020 <free@plt-0x790>
  4035af:	nop
  4035b0:	endbr64 
  4035b4:	push   0x58
  4035b9:	bnd jmp 403020 <free@plt-0x790>
  4035bf:	nop
  4035c0:	endbr64 
  4035c4:	push   0x59
  4035c9:	bnd jmp 403020 <free@plt-0x790>
  4035cf:	nop
  4035d0:	endbr64 
  4035d4:	push   0x5a
  4035d9:	bnd jmp 403020 <free@plt-0x790>
  4035df:	nop
  4035e0:	endbr64 
  4035e4:	push   0x5b
  4035e9:	bnd jmp 403020 <free@plt-0x790>
  4035ef:	nop
  4035f0:	endbr64 
  4035f4:	push   0x5c
  4035f9:	bnd jmp 403020 <free@plt-0x790>
  4035ff:	nop
  403600:	endbr64 
  403604:	push   0x5d
  403609:	bnd jmp 403020 <free@plt-0x790>
  40360f:	nop
  403610:	endbr64 
  403614:	push   0x5e
  403619:	bnd jmp 403020 <free@plt-0x790>
  40361f:	nop
  403620:	endbr64 
  403624:	push   0x5f
  403629:	bnd jmp 403020 <free@plt-0x790>
  40362f:	nop
  403630:	endbr64 
  403634:	push   0x60
  403639:	bnd jmp 403020 <free@plt-0x790>
  40363f:	nop
  403640:	endbr64 
  403644:	push   0x61
  403649:	bnd jmp 403020 <free@plt-0x790>
  40364f:	nop
  403650:	endbr64 
  403654:	push   0x62
  403659:	bnd jmp 403020 <free@plt-0x790>
  40365f:	nop
  403660:	endbr64 
  403664:	push   0x63
  403669:	bnd jmp 403020 <free@plt-0x790>
  40366f:	nop
  403670:	endbr64 
  403674:	push   0x64
  403679:	bnd jmp 403020 <free@plt-0x790>
  40367f:	nop
  403680:	endbr64 
  403684:	push   0x65
  403689:	bnd jmp 403020 <free@plt-0x790>
  40368f:	nop
  403690:	endbr64 
  403694:	push   0x66
  403699:	bnd jmp 403020 <free@plt-0x790>
  40369f:	nop
  4036a0:	endbr64 
  4036a4:	push   0x67
  4036a9:	bnd jmp 403020 <free@plt-0x790>
  4036af:	nop
  4036b0:	endbr64 
  4036b4:	push   0x68
  4036b9:	bnd jmp 403020 <free@plt-0x790>
  4036bf:	nop
  4036c0:	endbr64 
  4036c4:	push   0x69
  4036c9:	bnd jmp 403020 <free@plt-0x790>
  4036cf:	nop
  4036d0:	endbr64 
  4036d4:	push   0x6a
  4036d9:	bnd jmp 403020 <free@plt-0x790>
  4036df:	nop
  4036e0:	endbr64 
  4036e4:	push   0x6b
  4036e9:	bnd jmp 403020 <free@plt-0x790>
  4036ef:	nop
  4036f0:	endbr64 
  4036f4:	push   0x6c
  4036f9:	bnd jmp 403020 <free@plt-0x790>
  4036ff:	nop
  403700:	endbr64 
  403704:	push   0x6d
  403709:	bnd jmp 403020 <free@plt-0x790>
  40370f:	nop
  403710:	endbr64 
  403714:	push   0x6e
  403719:	bnd jmp 403020 <free@plt-0x790>
  40371f:	nop
  403720:	endbr64 
  403724:	push   0x6f
  403729:	bnd jmp 403020 <free@plt-0x790>
  40372f:	nop
  403730:	endbr64 
  403734:	push   0x70
  403739:	bnd jmp 403020 <free@plt-0x790>
  40373f:	nop
  403740:	endbr64 
  403744:	push   0x71
  403749:	bnd jmp 403020 <free@plt-0x790>
  40374f:	nop
  403750:	endbr64 
  403754:	push   0x72
  403759:	bnd jmp 403020 <free@plt-0x790>
  40375f:	nop
  403760:	endbr64 
  403764:	push   0x73
  403769:	bnd jmp 403020 <free@plt-0x790>
  40376f:	nop
  403770:	endbr64 
  403774:	push   0x74
  403779:	bnd jmp 403020 <free@plt-0x790>
  40377f:	nop
  403780:	endbr64 
  403784:	push   0x75
  403789:	bnd jmp 403020 <free@plt-0x790>
  40378f:	nop
  403790:	endbr64 
  403794:	push   0x76
  403799:	bnd jmp 403020 <free@plt-0x790>
  40379f:	nop
  4037a0:	endbr64 
  4037a4:	push   0x77
  4037a9:	bnd jmp 403020 <free@plt-0x790>
  4037af:	nop

Disassembly of section .plt.got:

00000000004037b0 <free@plt>:
  4037b0:	endbr64 
  4037b4:	bnd jmp QWORD PTR [rip+0x65805]        # 468fc0 <xmlStrEqual@plt+0x65080>
  4037bb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004037c0 <strcmp@plt>:
  4037c0:	endbr64 
  4037c4:	bnd jmp QWORD PTR [rip+0x6580d]        # 468fd8 <xmlStrEqual@plt+0x65098>
  4037cb:	nop    DWORD PTR [rax+rax*1+0x0]

Disassembly of section .plt.sec:

00000000004037d0 <__printf_chk@plt>:
  4037d0:	endbr64 
  4037d4:	bnd jmp QWORD PTR [rip+0x6583d]        # 469018 <xmlStrEqual@plt+0x650d8>
  4037db:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004037e0 <xmlReadMemory@plt>:
  4037e0:	endbr64 
  4037e4:	bnd jmp QWORD PTR [rip+0x65835]        # 469020 <xmlStrEqual@plt+0x650e0>
  4037eb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004037f0 <__errno_location@plt>:
  4037f0:	endbr64 
  4037f4:	bnd jmp QWORD PTR [rip+0x6582d]        # 469028 <xmlStrEqual@plt+0x650e8>
  4037fb:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403800 <sendto@plt>:
  403800:	endbr64 
  403804:	bnd jmp QWORD PTR [rip+0x65825]        # 469030 <xmlStrEqual@plt+0x650f0>
  40380b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403810 <__ctype_toupper_loc@plt>:
  403810:	endbr64 
  403814:	bnd jmp QWORD PTR [rip+0x6581d]        # 469038 <xmlStrEqual@plt+0x650f8>
  40381b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403820 <bind@plt>:
  403820:	endbr64 
  403824:	bnd jmp QWORD PTR [rip+0x65815]        # 469040 <xmlStrEqual@plt+0x65100>
  40382b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403830 <__ctype_tolower_loc@plt>:
  403830:	endbr64 
  403834:	bnd jmp QWORD PTR [rip+0x6580d]        # 469048 <xmlStrEqual@plt+0x65108>
  40383b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403840 <__vsyslog_chk@plt>:
  403840:	endbr64 
  403844:	bnd jmp QWORD PTR [rip+0x65805]        # 469050 <xmlStrEqual@plt+0x65110>
  40384b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403850 <if_nametoindex@plt>:
  403850:	endbr64 
  403854:	bnd jmp QWORD PTR [rip+0x657fd]        # 469058 <xmlStrEqual@plt+0x65118>
  40385b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403860 <strstr@plt>:
  403860:	endbr64 
  403864:	bnd jmp QWORD PTR [rip+0x657f5]        # 469060 <xmlStrEqual@plt+0x65120>
  40386b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403870 <srandom@plt>:
  403870:	endbr64 
  403874:	bnd jmp QWORD PTR [rip+0x657ed]        # 469068 <xmlStrEqual@plt+0x65128>
  40387b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403880 <socket@plt>:
  403880:	endbr64 
  403884:	bnd jmp QWORD PTR [rip+0x657e5]        # 469070 <xmlStrEqual@plt+0x65130>
  40388b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403890 <zmq_strerror@plt>:
  403890:	endbr64 
  403894:	bnd jmp QWORD PTR [rip+0x657dd]        # 469078 <xmlStrEqual@plt+0x65138>
  40389b:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004038a0 <fork@plt>:
  4038a0:	endbr64 
  4038a4:	bnd jmp QWORD PTR [rip+0x657d5]        # 469080 <xmlStrEqual@plt+0x65140>
  4038ab:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004038b0 <cfg_getnstr@plt>:
  4038b0:	endbr64 
  4038b4:	bnd jmp QWORD PTR [rip+0x657cd]        # 469088 <xmlStrEqual@plt+0x65148>
  4038bb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004038c0 <__vfprintf_chk@plt>:
  4038c0:	endbr64 
  4038c4:	bnd jmp QWORD PTR [rip+0x657c5]        # 469090 <xmlStrEqual@plt+0x65150>
  4038cb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004038d0 <recvmsg@plt>:
  4038d0:	endbr64 
  4038d4:	bnd jmp QWORD PTR [rip+0x657bd]        # 469098 <xmlStrEqual@plt+0x65158>
  4038db:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004038e0 <nanosleep@plt>:
  4038e0:	endbr64 
  4038e4:	bnd jmp QWORD PTR [rip+0x657b5]        # 4690a0 <xmlStrEqual@plt+0x65160>
  4038eb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004038f0 <cfg_free@plt>:
  4038f0:	endbr64 
  4038f4:	bnd jmp QWORD PTR [rip+0x657ad]        # 4690a8 <xmlStrEqual@plt+0x65168>
  4038fb:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403900 <recv@plt>:
  403900:	endbr64 
  403904:	bnd jmp QWORD PTR [rip+0x657a5]        # 4690b0 <xmlStrEqual@plt+0x65170>
  40390b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403910 <strerror@plt>:
  403910:	endbr64 
  403914:	bnd jmp QWORD PTR [rip+0x6579d]        # 4690b8 <xmlStrEqual@plt+0x65178>
  40391b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403920 <write@plt>:
  403920:	endbr64 
  403924:	bnd jmp QWORD PTR [rip+0x65795]        # 4690c0 <xmlStrEqual@plt+0x65180>
  40392b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403930 <strchr@plt>:
  403930:	endbr64 
  403934:	bnd jmp QWORD PTR [rip+0x6578d]        # 4690c8 <xmlStrEqual@plt+0x65188>
  40393b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403940 <cfg_getint@plt>:
  403940:	endbr64 
  403944:	bnd jmp QWORD PTR [rip+0x65785]        # 4690d0 <xmlStrEqual@plt+0x65190>
  40394b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403950 <getprotobyname@plt>:
  403950:	endbr64 
  403954:	bnd jmp QWORD PTR [rip+0x6577d]        # 4690d8 <xmlStrEqual@plt+0x65198>
  40395b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403960 <dirname@plt>:
  403960:	endbr64 
  403964:	bnd jmp QWORD PTR [rip+0x65775]        # 4690e0 <xmlStrEqual@plt+0x651a0>
  40396b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403970 <strlen@plt>:
  403970:	endbr64 
  403974:	bnd jmp QWORD PTR [rip+0x6576d]        # 4690e8 <xmlStrEqual@plt+0x651a8>
  40397b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403980 <cfg_getnsec@plt>:
  403980:	endbr64 
  403984:	bnd jmp QWORD PTR [rip+0x65765]        # 4690f0 <xmlStrEqual@plt+0x651b0>
  40398b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403990 <memcmp@plt>:
  403990:	endbr64 
  403994:	bnd jmp QWORD PTR [rip+0x6575d]        # 4690f8 <xmlStrEqual@plt+0x651b8>
  40399b:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004039a0 <xmlNextElementSibling@plt>:
  4039a0:	endbr64 
  4039a4:	bnd jmp QWORD PTR [rip+0x65755]        # 469100 <xmlStrEqual@plt+0x651c0>
  4039ab:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004039b0 <strncmp@plt>:
  4039b0:	endbr64 
  4039b4:	bnd jmp QWORD PTR [rip+0x6574d]        # 469108 <xmlStrEqual@plt+0x651c8>
  4039bb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004039c0 <send@plt>:
  4039c0:	endbr64 
  4039c4:	bnd jmp QWORD PTR [rip+0x65745]        # 469110 <xmlStrEqual@plt+0x651d0>
  4039cb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004039d0 <random@plt>:
  4039d0:	endbr64 
  4039d4:	bnd jmp QWORD PTR [rip+0x6573d]        # 469118 <xmlStrEqual@plt+0x651d8>
  4039db:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004039e0 <strncpy@plt>:
  4039e0:	endbr64 
  4039e4:	bnd jmp QWORD PTR [rip+0x65735]        # 469120 <xmlStrEqual@plt+0x651e0>
  4039eb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004039f0 <memset@plt>:
  4039f0:	endbr64 
  4039f4:	bnd jmp QWORD PTR [rip+0x6572d]        # 469128 <xmlStrEqual@plt+0x651e8>
  4039fb:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403a00 <abort@plt>:
  403a00:	endbr64 
  403a04:	bnd jmp QWORD PTR [rip+0x65725]        # 469130 <xmlStrEqual@plt+0x651f0>
  403a0b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403a10 <cfg_getsec@plt>:
  403a10:	endbr64 
  403a14:	bnd jmp QWORD PTR [rip+0x6571d]        # 469138 <xmlStrEqual@plt+0x651f8>
  403a1b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403a20 <fcntl@plt>:
  403a20:	endbr64 
  403a24:	bnd jmp QWORD PTR [rip+0x65715]        # 469140 <xmlStrEqual@plt+0x65200>
  403a2b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403a30 <__sprintf_chk@plt>:
  403a30:	endbr64 
  403a34:	bnd jmp QWORD PTR [rip+0x6570d]        # 469148 <xmlStrEqual@plt+0x65208>
  403a3b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403a40 <__snprintf_chk@plt>:
  403a40:	endbr64 
  403a44:	bnd jmp QWORD PTR [rip+0x65705]        # 469150 <xmlStrEqual@plt+0x65210>
  403a4b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403a50 <getnameinfo@plt>:
  403a50:	endbr64 
  403a54:	bnd jmp QWORD PTR [rip+0x656fd]        # 469158 <xmlStrEqual@plt+0x65218>
  403a5b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403a60 <__assert_fail@plt>:
  403a60:	endbr64 
  403a64:	bnd jmp QWORD PTR [rip+0x656f5]        # 469160 <xmlStrEqual@plt+0x65220>
  403a6b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403a70 <cfg_getstr@plt>:
  403a70:	endbr64 
  403a74:	bnd jmp QWORD PTR [rip+0x656ed]        # 469168 <xmlStrEqual@plt+0x65228>
  403a7b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403a80 <calloc@plt>:
  403a80:	endbr64 
  403a84:	bnd jmp QWORD PTR [rip+0x656e5]        # 469170 <xmlStrEqual@plt+0x65230>
  403a8b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403a90 <zmq_bind@plt>:
  403a90:	endbr64 
  403a94:	bnd jmp QWORD PTR [rip+0x656dd]        # 469178 <xmlStrEqual@plt+0x65238>
  403a9b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403aa0 <open@plt>:
  403aa0:	endbr64 
  403aa4:	bnd jmp QWORD PTR [rip+0x656d5]        # 469180 <xmlStrEqual@plt+0x65240>
  403aab:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403ab0 <localtime@plt>:
  403ab0:	endbr64 
  403ab4:	bnd jmp QWORD PTR [rip+0x656cd]        # 469188 <xmlStrEqual@plt+0x65248>
  403abb:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403ac0 <xmlFirstElementChild@plt>:
  403ac0:	endbr64 
  403ac4:	bnd jmp QWORD PTR [rip+0x656c5]        # 469190 <xmlStrEqual@plt+0x65250>
  403acb:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403ad0 <strftime@plt>:
  403ad0:	endbr64 
  403ad4:	bnd jmp QWORD PTR [rip+0x656bd]        # 469198 <xmlStrEqual@plt+0x65258>
  403adb:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403ae0 <memcpy@plt>:
  403ae0:	endbr64 
  403ae4:	bnd jmp QWORD PTR [rip+0x656b5]        # 4691a0 <xmlStrEqual@plt+0x65260>
  403aeb:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403af0 <timer_settime@plt>:
  403af0:	endbr64 
  403af4:	bnd jmp QWORD PTR [rip+0x656ad]        # 4691a8 <xmlStrEqual@plt+0x65268>
  403afb:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403b00 <cfg_getbool@plt>:
  403b00:	endbr64 
  403b04:	bnd jmp QWORD PTR [rip+0x656a5]        # 4691b0 <xmlStrEqual@plt+0x65270>
  403b0b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403b10 <clock_gettime@plt>:
  403b10:	endbr64 
  403b14:	bnd jmp QWORD PTR [rip+0x6569d]        # 4691b8 <xmlStrEqual@plt+0x65278>
  403b1b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403b20 <time@plt>:
  403b20:	endbr64 
  403b24:	bnd jmp QWORD PTR [rip+0x65695]        # 4691c0 <xmlStrEqual@plt+0x65280>
  403b2b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403b30 <getsockname@plt>:
  403b30:	endbr64 
  403b34:	bnd jmp QWORD PTR [rip+0x6568d]        # 4691c8 <xmlStrEqual@plt+0x65288>
  403b3b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403b40 <cfg_init@plt>:
  403b40:	endbr64 
  403b44:	bnd jmp QWORD PTR [rip+0x65685]        # 4691d0 <xmlStrEqual@plt+0x65290>
  403b4b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403b50 <select@plt>:
  403b50:	endbr64 
  403b54:	bnd jmp QWORD PTR [rip+0x6567d]        # 4691d8 <xmlStrEqual@plt+0x65298>
  403b5b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403b60 <zmq_connect@plt>:
  403b60:	endbr64 
  403b64:	bnd jmp QWORD PTR [rip+0x65675]        # 4691e0 <xmlStrEqual@plt+0x652a0>
  403b6b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403b70 <zmq_send@plt>:
  403b70:	endbr64 
  403b74:	bnd jmp QWORD PTR [rip+0x6566d]        # 4691e8 <xmlStrEqual@plt+0x652a8>
  403b7b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403b80 <fclose@plt>:
  403b80:	endbr64 
  403b84:	bnd jmp QWORD PTR [rip+0x65665]        # 4691f0 <xmlStrEqual@plt+0x652b0>
  403b8b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403b90 <inet_ntop@plt>:
  403b90:	endbr64 
  403b94:	bnd jmp QWORD PTR [rip+0x6565d]        # 4691f8 <xmlStrEqual@plt+0x652b8>
  403b9b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403ba0 <zmq_poll@plt>:
  403ba0:	endbr64 
  403ba4:	bnd jmp QWORD PTR [rip+0x65655]        # 469200 <xmlStrEqual@plt+0x652c0>
  403bab:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403bb0 <freopen@plt>:
  403bb0:	endbr64 
  403bb4:	bnd jmp QWORD PTR [rip+0x6564d]        # 469208 <xmlStrEqual@plt+0x652c8>
  403bbb:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403bc0 <__ctype_b_loc@plt>:
  403bc0:	endbr64 
  403bc4:	bnd jmp QWORD PTR [rip+0x65645]        # 469210 <xmlStrEqual@plt+0x652d0>
  403bcb:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403bd0 <xmlNodeGetContent@plt>:
  403bd0:	endbr64 
  403bd4:	bnd jmp QWORD PTR [rip+0x6563d]        # 469218 <xmlStrEqual@plt+0x652d8>
  403bdb:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403be0 <setsid@plt>:
  403be0:	endbr64 
  403be4:	bnd jmp QWORD PTR [rip+0x65635]        # 469220 <xmlStrEqual@plt+0x652e0>
  403beb:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403bf0 <__syslog_chk@plt>:
  403bf0:	endbr64 
  403bf4:	bnd jmp QWORD PTR [rip+0x6562d]        # 469228 <xmlStrEqual@plt+0x652e8>
  403bfb:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403c00 <__stack_chk_fail@plt>:
  403c00:	endbr64 
  403c04:	bnd jmp QWORD PTR [rip+0x65625]        # 469230 <xmlStrEqual@plt+0x652f0>
  403c0b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403c10 <fputs@plt>:
  403c10:	endbr64 
  403c14:	bnd jmp QWORD PTR [rip+0x6561d]        # 469238 <xmlStrEqual@plt+0x652f8>
  403c1b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403c20 <fflush@plt>:
  403c20:	endbr64 
  403c24:	bnd jmp QWORD PTR [rip+0x65615]        # 469240 <xmlStrEqual@plt+0x65300>
  403c2b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403c30 <capget@plt>:
  403c30:	endbr64 
  403c34:	bnd jmp QWORD PTR [rip+0x6560d]        # 469248 <xmlStrEqual@plt+0x65308>
  403c3b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403c40 <fopen@plt>:
  403c40:	endbr64 
  403c44:	bnd jmp QWORD PTR [rip+0x65605]        # 469250 <xmlStrEqual@plt+0x65310>
  403c4b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403c50 <signal@plt>:
  403c50:	endbr64 
  403c54:	bnd jmp QWORD PTR [rip+0x655fd]        # 469258 <xmlStrEqual@plt+0x65318>
  403c5b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403c60 <exit@plt>:
  403c60:	endbr64 
  403c64:	bnd jmp QWORD PTR [rip+0x655f5]        # 469260 <xmlStrEqual@plt+0x65320>
  403c6b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403c70 <timer_delete@plt>:
  403c70:	endbr64 
  403c74:	bnd jmp QWORD PTR [rip+0x655ed]        # 469268 <xmlStrEqual@plt+0x65328>
  403c7b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403c80 <fputc@plt>:
  403c80:	endbr64 
  403c84:	bnd jmp QWORD PTR [rip+0x655e5]        # 469270 <xmlStrEqual@plt+0x65330>
  403c8b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403c90 <sigemptyset@plt>:
  403c90:	endbr64 
  403c94:	bnd jmp QWORD PTR [rip+0x655dd]        # 469278 <xmlStrEqual@plt+0x65338>
  403c9b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403ca0 <sigaction@plt>:
  403ca0:	endbr64 
  403ca4:	bnd jmp QWORD PTR [rip+0x655d5]        # 469280 <xmlStrEqual@plt+0x65340>
  403cab:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403cb0 <getaddrinfo@plt>:
  403cb0:	endbr64 
  403cb4:	bnd jmp QWORD PTR [rip+0x655cd]        # 469288 <xmlStrEqual@plt+0x65348>
  403cbb:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403cc0 <freeaddrinfo@plt>:
  403cc0:	endbr64 
  403cc4:	bnd jmp QWORD PTR [rip+0x655c5]        # 469290 <xmlStrEqual@plt+0x65350>
  403ccb:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403cd0 <malloc@plt>:
  403cd0:	endbr64 
  403cd4:	bnd jmp QWORD PTR [rip+0x655bd]        # 469298 <xmlStrEqual@plt+0x65358>
  403cdb:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403ce0 <pipe@plt>:
  403ce0:	endbr64 
  403ce4:	bnd jmp QWORD PTR [rip+0x655b5]        # 4692a0 <xmlStrEqual@plt+0x65360>
  403ceb:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403cf0 <zmq_recv@plt>:
  403cf0:	endbr64 
  403cf4:	bnd jmp QWORD PTR [rip+0x655ad]        # 4692a8 <xmlStrEqual@plt+0x65368>
  403cfb:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403d00 <gai_strerror@plt>:
  403d00:	endbr64 
  403d04:	bnd jmp QWORD PTR [rip+0x655a5]        # 4692b0 <xmlStrEqual@plt+0x65370>
  403d0b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403d10 <putchar@plt>:
  403d10:	endbr64 
  403d14:	bnd jmp QWORD PTR [rip+0x6559d]        # 4692b8 <xmlStrEqual@plt+0x65378>
  403d1b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403d20 <strtol@plt>:
  403d20:	endbr64 
  403d24:	bnd jmp QWORD PTR [rip+0x65595]        # 4692c0 <xmlStrEqual@plt+0x65380>
  403d2b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403d30 <ioctl@plt>:
  403d30:	endbr64 
  403d34:	bnd jmp QWORD PTR [rip+0x6558d]        # 4692c8 <xmlStrEqual@plt+0x65388>
  403d3b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403d40 <read@plt>:
  403d40:	endbr64 
  403d44:	bnd jmp QWORD PTR [rip+0x65585]        # 4692d0 <xmlStrEqual@plt+0x65390>
  403d4b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403d50 <xmlCharStrdup@plt>:
  403d50:	endbr64 
  403d54:	bnd jmp QWORD PTR [rip+0x6557d]        # 4692d8 <xmlStrEqual@plt+0x65398>
  403d5b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403d60 <getpid@plt>:
  403d60:	endbr64 
  403d64:	bnd jmp QWORD PTR [rip+0x65575]        # 4692e0 <xmlStrEqual@plt+0x653a0>
  403d6b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403d70 <zmq_close@plt>:
  403d70:	endbr64 
  403d74:	bnd jmp QWORD PTR [rip+0x6556d]        # 4692e8 <xmlStrEqual@plt+0x653a8>
  403d7b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403d80 <chdir@plt>:
  403d80:	endbr64 
  403d84:	bnd jmp QWORD PTR [rip+0x65565]        # 4692f0 <xmlStrEqual@plt+0x653b0>
  403d8b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403d90 <xmlDocGetRootElement@plt>:
  403d90:	endbr64 
  403d94:	bnd jmp QWORD PTR [rip+0x6555d]        # 4692f8 <xmlStrEqual@plt+0x653b8>
  403d9b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403da0 <puts@plt>:
  403da0:	endbr64 
  403da4:	bnd jmp QWORD PTR [rip+0x65555]        # 469300 <xmlStrEqual@plt+0x653c0>
  403dab:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403db0 <strtok@plt>:
  403db0:	endbr64 
  403db4:	bnd jmp QWORD PTR [rip+0x6554d]        # 469308 <xmlStrEqual@plt+0x653c8>
  403dbb:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403dc0 <fgets@plt>:
  403dc0:	endbr64 
  403dc4:	bnd jmp QWORD PTR [rip+0x65545]        # 469310 <xmlStrEqual@plt+0x653d0>
  403dcb:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403dd0 <__fdelt_chk@plt>:
  403dd0:	endbr64 
  403dd4:	bnd jmp QWORD PTR [rip+0x6553d]        # 469318 <xmlStrEqual@plt+0x653d8>
  403ddb:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403de0 <snprintf@plt>:
  403de0:	endbr64 
  403de4:	bnd jmp QWORD PTR [rip+0x65535]        # 469320 <xmlStrEqual@plt+0x653e0>
  403deb:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403df0 <zmq_ctx_destroy@plt>:
  403df0:	endbr64 
  403df4:	bnd jmp QWORD PTR [rip+0x6552d]        # 469328 <xmlStrEqual@plt+0x653e8>
  403dfb:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403e00 <gettimeofday@plt>:
  403e00:	endbr64 
  403e04:	bnd jmp QWORD PTR [rip+0x65525]        # 469330 <xmlStrEqual@plt+0x653f0>
  403e0b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403e10 <realloc@plt>:
  403e10:	endbr64 
  403e14:	bnd jmp QWORD PTR [rip+0x6551d]        # 469338 <xmlStrEqual@plt+0x653f8>
  403e1b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403e20 <__fprintf_chk@plt>:
  403e20:	endbr64 
  403e24:	bnd jmp QWORD PTR [rip+0x65515]        # 469340 <xmlStrEqual@plt+0x65400>
  403e2b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403e30 <getopt_long@plt>:
  403e30:	endbr64 
  403e34:	bnd jmp QWORD PTR [rip+0x6550d]        # 469348 <xmlStrEqual@plt+0x65408>
  403e3b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403e40 <access@plt>:
  403e40:	endbr64 
  403e44:	bnd jmp QWORD PTR [rip+0x65505]        # 469350 <xmlStrEqual@plt+0x65410>
  403e4b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403e50 <timer_create@plt>:
  403e50:	endbr64 
  403e54:	bnd jmp QWORD PTR [rip+0x654fd]        # 469358 <xmlStrEqual@plt+0x65418>
  403e5b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403e60 <zmq_ctx_new@plt>:
  403e60:	endbr64 
  403e64:	bnd jmp QWORD PTR [rip+0x654f5]        # 469360 <xmlStrEqual@plt+0x65420>
  403e6b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403e70 <__memcpy_chk@plt>:
  403e70:	endbr64 
  403e74:	bnd jmp QWORD PTR [rip+0x654ed]        # 469368 <xmlStrEqual@plt+0x65428>
  403e7b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403e80 <freeifaddrs@plt>:
  403e80:	endbr64 
  403e84:	bnd jmp QWORD PTR [rip+0x654e5]        # 469370 <xmlStrEqual@plt+0x65430>
  403e8b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403e90 <cfg_parse@plt>:
  403e90:	endbr64 
  403e94:	bnd jmp QWORD PTR [rip+0x654dd]        # 469378 <xmlStrEqual@plt+0x65438>
  403e9b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403ea0 <umask@plt>:
  403ea0:	endbr64 
  403ea4:	bnd jmp QWORD PTR [rip+0x654d5]        # 469380 <xmlStrEqual@plt+0x65440>
  403eab:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403eb0 <zmq_socket@plt>:
  403eb0:	endbr64 
  403eb4:	bnd jmp QWORD PTR [rip+0x654cd]        # 469388 <xmlStrEqual@plt+0x65448>
  403ebb:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403ec0 <setsockopt@plt>:
  403ec0:	endbr64 
  403ec4:	bnd jmp QWORD PTR [rip+0x654c5]        # 469390 <xmlStrEqual@plt+0x65450>
  403ecb:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403ed0 <strdup@plt>:
  403ed0:	endbr64 
  403ed4:	bnd jmp QWORD PTR [rip+0x654bd]        # 469398 <xmlStrEqual@plt+0x65458>
  403edb:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403ee0 <xmlFreeDoc@plt>:
  403ee0:	endbr64 
  403ee4:	bnd jmp QWORD PTR [rip+0x654b5]        # 4693a0 <xmlStrEqual@plt+0x65460>
  403eeb:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403ef0 <cfg_size@plt>:
  403ef0:	endbr64 
  403ef4:	bnd jmp QWORD PTR [rip+0x654ad]        # 4693a8 <xmlStrEqual@plt+0x65468>
  403efb:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403f00 <if_indextoname@plt>:
  403f00:	endbr64 
  403f04:	bnd jmp QWORD PTR [rip+0x654a5]        # 4693b0 <xmlStrEqual@plt+0x65470>
  403f0b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403f10 <getifaddrs@plt>:
  403f10:	endbr64 
  403f14:	bnd jmp QWORD PTR [rip+0x6549d]        # 4693b8 <xmlStrEqual@plt+0x65478>
  403f1b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403f20 <inet_pton@plt>:
  403f20:	endbr64 
  403f24:	bnd jmp QWORD PTR [rip+0x65495]        # 4693c0 <xmlStrEqual@plt+0x65480>
  403f2b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403f30 <close@plt>:
  403f30:	endbr64 
  403f34:	bnd jmp QWORD PTR [rip+0x6548d]        # 4693c8 <xmlStrEqual@plt+0x65488>
  403f3b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403f40 <xmlStrEqual@plt>:
  403f40:	endbr64 
  403f44:	bnd jmp QWORD PTR [rip+0x65485]        # 4693d0 <xmlStrEqual@plt+0x65490>
  403f4b:	nop    DWORD PTR [rax+rax*1+0x0]

Disassembly of section .text:

0000000000403f50 <.text>:
  403f50:	movzx  eax,BYTE PTR ds:0x0
  403f58:	and    eax,0xfffffff7
  403f5b:	mov    BYTE PTR ds:0x0,al
  403f62:	ud2    
  403f64:	mov    QWORD PTR ds:0x4,0x0
  403f70:	ud2    
  403f72:	mov    QWORD PTR ds:0x4,0x0
  403f7e:	ud2    
  403f80:	movzx  eax,WORD PTR ds:0x0
  403f88:	and    ah,0xbf
  403f8b:	mov    WORD PTR ds:0x0,ax
  403f93:	ud2    
  403f95:	movzx  eax,WORD PTR ds:0x0
  403f9d:	and    eax,0xfffffffe
  403fa0:	mov    WORD PTR ds:0x0,ax
  403fa8:	ud2    
  403faa:	mov    QWORD PTR ds:0x4,0x0
  403fb6:	ud2    
  403fb8:	movzx  eax,BYTE PTR ds:0x0
  403fc0:	and    eax,0xfffffff7
  403fc3:	mov    BYTE PTR ds:0x0,al
  403fca:	ud2    
  403fcc:	movzx  eax,WORD PTR ds:0x0
  403fd4:	and    ah,0xbf
  403fd7:	mov    WORD PTR ds:0x0,ax
  403fdf:	ud2    
  403fe1:	mov    QWORD PTR ds:0x4,0x0
  403fed:	ud2    
  403fef:	movzx  eax,BYTE PTR ds:0x0
  403ff7:	and    eax,0xfffffff7
  403ffa:	mov    BYTE PTR ds:0x0,al
  404001:	ud2    
  404003:	mov    QWORD PTR ds:0x4,0x0
  40400f:	ud2    
  404011:	mov    rax,QWORD PTR ds:0x10
  404019:	ud2    
  40401b:	movzx  eax,BYTE PTR ds:0x0
  404023:	and    eax,0xfffffff7
  404026:	mov    BYTE PTR ds:0x0,al
  40402d:	ud2    
  40402f:	movzx  eax,WORD PTR ds:0x0
  404037:	and    eax,0xfffffffb
  40403a:	mov    WORD PTR ds:0x0,ax
  404042:	ud2    
  404044:	mov    QWORD PTR ds:0x4,0x0
  404050:	ud2    
  404052:	mov    rax,QWORD PTR ds:0x10
  40405a:	ud2    
  40405c:	movzx  eax,WORD PTR ds:0x0
  404064:	and    eax,0xfffffffb
  404067:	mov    WORD PTR ds:0x0,ax
  40406f:	ud2    
  404071:	mov    rax,QWORD PTR ds:0x10
  404079:	ud2    
  40407b:	mov    QWORD PTR ds:0x4,0x0
  404087:	ud2    
  404089:	vmovdqa xmm0,XMMWORD PTR ds:0x0
  404092:	ud2    
  404094:	mov    rax,QWORD PTR ds:0x0
  40409c:	ud2    
  40409e:	movzx  eax,BYTE PTR ds:0x2
  4040a6:	and    eax,0xffffffe0
  4040a9:	mov    BYTE PTR ds:0x2,al
  4040b0:	ud2    
  4040b2:	mov    QWORD PTR ds:0x4,0x0
  4040be:	ud2    
  4040c0:	mov    QWORD PTR ds:0x4,0x0
  4040cc:	ud2    
  4040ce:	movzx  eax,BYTE PTR ds:0x0
  4040d6:	ud2    
  4040d8:	movzx  eax,WORD PTR ds:0x4
  4040e0:	ud2    
  4040e2:	movzx  eax,WORD PTR ds:0x0
  4040ea:	ud2    
  4040ec:	movzx  eax,BYTE PTR ds:0x0
  4040f4:	and    eax,0xfffffff7
  4040f7:	mov    BYTE PTR ds:0x0,al
  4040fe:	ud2    
  404100:	mov    rax,QWORD PTR ds:0x10
  404108:	ud2    
  40410a:	mov    rax,QWORD PTR ds:0x10
  404112:	ud2    
  404114:	mov    rax,QWORD PTR ds:0x0
  40411c:	ud2    
  40411e:	mov    rax,QWORD PTR ds:0x0
  404126:	ud2    
  404128:	mov    rax,QWORD PTR ds:0x0
  404130:	ud2    
  404132:	mov    rax,QWORD PTR ds:0x0
  40413a:	ud2    
  40413c:	nop    DWORD PTR [rax+0x0]
  404140:	endbr64 
  404144:	push   r15
  404146:	lea    rdx,[rip+0x4fcbd]        # 453e0a <xmlStrEqual@plt+0x4feca>
  40414d:	push   r14
  40414f:	mov    r14,rsi
  404152:	lea    rsi,[rip+0x4fb57]        # 453cb0 <xmlStrEqual@plt+0x4fd70>
  404159:	push   r13
  40415b:	mov    r13d,edi
  40415e:	mov    edi,0x4
  404163:	push   r12
  404165:	push   rbp
  404166:	push   rbx
  404167:	sub    rsp,0x98
  40416e:	mov    rax,QWORD PTR fs:0x28
  404177:	mov    QWORD PTR [rsp+0x88],rax
  40417f:	xor    eax,eax
  404181:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  404186:	mov    rbp,0x469e3c
  40418d:	mov    eax,DWORD PTR [rbp+0x0]
  404190:	test   eax,eax
  404192:	jle    4041a7 <xmlStrEqual@plt+0x267>
  404194:	lea    rsi,[rip+0x4fc76]        # 453e11 <xmlStrEqual@plt+0x4fed1>
  40419b:	mov    edi,0x5
  4041a0:	xor    eax,eax
  4041a2:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  4041a7:	xor    eax,eax
  4041a9:	call   43f920 <xmlStrEqual@plt+0x3b9e0>
  4041ae:	cmp    eax,0x1
  4041b1:	je     4041ba <xmlStrEqual@plt+0x27a>
  4041b3:	xor    edi,edi
  4041b5:	call   403c60 <exit@plt>
  4041ba:	xor    edi,edi
  4041bc:	call   403b20 <time@plt>
  4041c1:	mov    rdx,0x4757b8
  4041c8:	mov    edi,eax
  4041ca:	mov    DWORD PTR [rdx],eax
  4041cc:	call   403870 <srandom@plt>
  4041d1:	mov    rbx,0x43fab0
  4041d8:	mov    edi,0x1
  4041dd:	mov    rsi,rbx
  4041e0:	call   403c50 <signal@plt>
  4041e5:	mov    rsi,rbx
  4041e8:	mov    edi,0xf
  4041ed:	call   403c50 <signal@plt>
  4041f2:	mov    rsi,rbx
  4041f5:	mov    edi,0x2
  4041fa:	call   403c50 <signal@plt>
  4041ff:	mov    rsi,rbx
  404202:	mov    edi,0x3
  404207:	call   403c50 <signal@plt>
  40420c:	xor    eax,eax
  40420e:	call   4351c0 <xmlStrEqual@plt+0x31280>
  404213:	mov    rdx,0x475860
  40421a:	mov    r12,rsp
  40421d:	mov    QWORD PTR [rdx],rax
  404220:	xor    eax,eax
  404222:	call   42e530 <xmlStrEqual@plt+0x2a5f0>
  404227:	mov    rdx,0x475858
  40422e:	mov    rsi,r14
  404231:	mov    QWORD PTR [rdx],rax
  404234:	mov    edi,r13d
  404237:	mov    rdx,r12
  40423a:	call   405260 <xmlStrEqual@plt+0x1320>
  40423f:	test   eax,eax
  404241:	jne    4044fb <xmlStrEqual@plt+0x5bb>
  404247:	cmp    DWORD PTR [rsp+0x74],0x0
  40424c:	jne    4044e2 <xmlStrEqual@plt+0x5a2>
  404252:	lea    rdi,[rip+0x4fbc3]        # 453e1c <xmlStrEqual@plt+0x4fedc>
  404259:	call   403ed0 <strdup@plt>
  40425e:	mov    rbx,0x4757c8
  404265:	mov    QWORD PTR [rbx],rax
  404268:	cmp    DWORD PTR [rsp+0x70],0x0
  40426d:	je     404297 <xmlStrEqual@plt+0x357>
  40426f:	mov    rdx,QWORD PTR [rbx]
  404272:	cmp    BYTE PTR [rdx],0x2f
  404275:	je     40428a <xmlStrEqual@plt+0x34a>
  404277:	lea    rsi,[rip+0x4fa62]        # 453ce0 <xmlStrEqual@plt+0x4fda0>
  40427e:	mov    edi,0x1
  404283:	xor    eax,eax
  404285:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  40428a:	mov    rax,0x4757bc
  404291:	mov    DWORD PTR [rax],0x1
  404297:	cmp    DWORD PTR [rsp+0x68],0x0
  40429c:	je     4042a5 <xmlStrEqual@plt+0x365>
  40429e:	mov    eax,DWORD PTR [rsp+0x10]
  4042a2:	mov    DWORD PTR [rbp+0x0],eax
  4042a5:	cmp    DWORD PTR [rsp+0x6c],0x0
  4042aa:	je     404520 <xmlStrEqual@plt+0x5e0>
  4042b0:	mov    eax,DWORD PTR [rsp+0x28]
  4042b4:	test   eax,eax
  4042b6:	je     404544 <xmlStrEqual@plt+0x604>
  4042bc:	dec    eax
  4042be:	je     404532 <xmlStrEqual@plt+0x5f2>
  4042c4:	lea    rsi,[rip+0x4fa7d]        # 453d48 <xmlStrEqual@plt+0x4fe08>
  4042cb:	mov    edi,0x4
  4042d0:	xor    eax,eax
  4042d2:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  4042d7:	mov    rdi,r12
  4042da:	call   404eb0 <xmlStrEqual@plt+0xf70>
  4042df:	mov    rdi,QWORD PTR [rbx]
  4042e2:	xor    esi,esi
  4042e4:	call   403e40 <access@plt>
  4042e9:	inc    eax
  4042eb:	je     404505 <xmlStrEqual@plt+0x5c5>
  4042f1:	mov    rax,0x4757bc
  4042f8:	cmp    DWORD PTR [rax],0x0
  4042fb:	je     404385 <xmlStrEqual@plt+0x445>
  404301:	cmp    DWORD PTR [rbp+0x0],0x0
  404305:	jle    40431a <xmlStrEqual@plt+0x3da>
  404307:	lea    rsi,[rip+0x4fa62]        # 453d70 <xmlStrEqual@plt+0x4fe30>
  40430e:	mov    edi,0x5
  404313:	xor    eax,eax
  404315:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  40431a:	call   4038a0 <fork@plt>
  40431f:	mov    rbx,0x4757b4
  404326:	mov    DWORD PTR [rbx],eax
  404328:	test   eax,eax
  40432a:	js     404560 <xmlStrEqual@plt+0x620>
  404330:	xor    edi,edi
  404332:	call   403ea0 <umask@plt>
  404337:	cmp    DWORD PTR [rbx],0x0
  40433a:	jg     4041b3 <xmlStrEqual@plt+0x273>
  404340:	call   403be0 <setsid@plt>
  404345:	mov    rdx,0x4757b0
  40434c:	mov    DWORD PTR [rdx],eax
  40434e:	test   eax,eax
  404350:	js     404574 <xmlStrEqual@plt+0x634>
  404356:	lea    rdi,[rip+0x4ab60]        # 44eebd <xmlStrEqual@plt+0x4af7d>
  40435d:	call   403d80 <chdir@plt>
  404362:	test   eax,eax
  404364:	js     40456a <xmlStrEqual@plt+0x62a>
  40436a:	xor    edi,edi
  40436c:	call   403f30 <close@plt>
  404371:	mov    edi,0x1
  404376:	call   403f30 <close@plt>
  40437b:	mov    edi,0x2
  404380:	call   403f30 <close@plt>
  404385:	xor    eax,eax
  404387:	call   419be0 <xmlStrEqual@plt+0x15ca0>
  40438c:	xor    eax,eax
  40438e:	call   43c050 <xmlStrEqual@plt+0x38110>
  404393:	xor    eax,eax
  404395:	call   438560 <xmlStrEqual@plt+0x34620>
  40439a:	mov    rbx,0x4757a8
  4043a1:	mov    QWORD PTR [rbx],rax
  4043a4:	xor    eax,eax
  4043a6:	call   43b0f0 <xmlStrEqual@plt+0x371b0>
  4043ab:	xor    eax,eax
  4043ad:	call   43ec50 <xmlStrEqual@plt+0x3ad10>
  4043b2:	dec    eax
  4043b4:	je     4043bb <xmlStrEqual@plt+0x47b>
  4043b6:	call   43f9f0 <xmlStrEqual@plt+0x3bab0>
  4043bb:	xor    eax,eax
  4043bd:	call   4082c0 <xmlStrEqual@plt+0x4380>
  4043c2:	mov    r15,0x475830
  4043c9:	mov    QWORD PTR [r15],rax
  4043cc:	test   rax,rax
  4043cf:	je     404556 <xmlStrEqual@plt+0x616>
  4043d5:	xor    eax,eax
  4043d7:	call   4455f0 <xmlStrEqual@plt+0x416b0>
  4043dc:	dec    eax
  4043de:	je     4043e5 <xmlStrEqual@plt+0x4a5>
  4043e0:	call   43f9f0 <xmlStrEqual@plt+0x3bab0>
  4043e5:	mov    r12,0x475850
  4043ec:	mov    rdi,QWORD PTR [r12]
  4043f0:	call   408940 <xmlStrEqual@plt+0x4a00>
  4043f5:	mov    r13d,eax
  4043f8:	lea    eax,[rax-0x2]
  4043fb:	cmp    eax,0x1
  4043fe:	jbe    404405 <xmlStrEqual@plt+0x4c5>
  404400:	test   r13d,r13d
  404403:	jne    404468 <xmlStrEqual@plt+0x528>
  404405:	cmp    DWORD PTR [rbp+0x0],0x1
  404409:	jle    40441e <xmlStrEqual@plt+0x4de>
  40440b:	lea    rsi,[rip+0x4fa36]        # 453e48 <xmlStrEqual@plt+0x4ff08>
  404412:	mov    edi,0x6
  404417:	xor    eax,eax
  404419:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  40441e:	mov    rdi,QWORD PTR [r12]
  404422:	call   40beb0 <xmlStrEqual@plt+0x7f70>
  404427:	mov    r14,0x46d558
  40442e:	mov    rdx,QWORD PTR [rax+0x60]
  404432:	mov    esi,DWORD PTR [rax+0x58]
  404435:	mov    rcx,QWORD PTR [r14]
  404438:	xor    eax,eax
  40443a:	mov    edi,r13d
  40443d:	call   QWORD PTR [rcx]
  40443f:	dec    eax
  404441:	je     40444f <xmlStrEqual@plt+0x50f>
  404443:	mov    QWORD PTR [r14],0x0
  40444a:	call   43f9f0 <xmlStrEqual@plt+0x3bab0>
  40444f:	cmp    DWORD PTR [rbp+0x0],0x0
  404453:	jle    404468 <xmlStrEqual@plt+0x528>
  404455:	lea    rsi,[rip+0x4fa03]        # 453e5f <xmlStrEqual@plt+0x4ff1f>
  40445c:	mov    edi,0x5
  404461:	xor    eax,eax
  404463:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  404468:	mov    rdi,QWORD PTR [r15]
  40446b:	call   4083b0 <xmlStrEqual@plt+0x4470>
  404470:	dec    eax
  404472:	je     404479 <xmlStrEqual@plt+0x539>
  404474:	call   43f9f0 <xmlStrEqual@plt+0x3bab0>
  404479:	mov    rax,0x474da8
  404480:	mov    rdx,QWORD PTR [rax]
  404483:	xor    eax,eax
  404485:	call   QWORD PTR [rdx]
  404487:	dec    eax
  404489:	je     404490 <xmlStrEqual@plt+0x550>
  40448b:	call   43f9f0 <xmlStrEqual@plt+0x3bab0>
  404490:	mov    rdi,QWORD PTR [r12]
  404494:	call   408970 <xmlStrEqual@plt+0x4a30>
  404499:	mov    edi,0x4
  40449e:	lea    rdx,[rip+0x4f965]        # 453e0a <xmlStrEqual@plt+0x4feca>
  4044a5:	lea    rsi,[rip+0x4f8ec]        # 453d98 <xmlStrEqual@plt+0x4fe58>
  4044ac:	xor    eax,eax
  4044ae:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  4044b3:	mov    rbp,0x475840
  4044ba:	mov    rdi,rbp
  4044bd:	call   442780 <xmlStrEqual@plt+0x3e840>
  4044c2:	nop    WORD PTR [rax+rax*1+0x0]
  4044c8:	mov    rdi,QWORD PTR [rbx]
  4044cb:	call   438940 <xmlStrEqual@plt+0x34a00>
  4044d0:	mov    rdi,QWORD PTR [rbx]
  4044d3:	call   438840 <xmlStrEqual@plt+0x34900>
  4044d8:	mov    rdi,rbp
  4044db:	call   442cd0 <xmlStrEqual@plt+0x3ed90>
  4044e0:	jmp    4044c8 <xmlStrEqual@plt+0x588>
  4044e2:	mov    rdi,QWORD PTR [rsp+0x48]
  4044e7:	call   403ed0 <strdup@plt>
  4044ec:	mov    rbx,0x4757c8
  4044f3:	mov    QWORD PTR [rbx],rax
  4044f6:	jmp    404268 <xmlStrEqual@plt+0x328>
  4044fb:	call   43f9f0 <xmlStrEqual@plt+0x3bab0>
  404500:	jmp    404247 <xmlStrEqual@plt+0x307>
  404505:	mov    rdx,QWORD PTR [rbx]
  404508:	lea    rsi,[rip+0x4f91b]        # 453e2a <xmlStrEqual@plt+0x4feea>
  40450f:	mov    edi,0x1
  404514:	xor    eax,eax
  404516:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  40451b:	jmp    4041b3 <xmlStrEqual@plt+0x273>
  404520:	mov    rax,0x4757c0
  404527:	mov    DWORD PTR [rax],0x0
  40452d:	jmp    4042d7 <xmlStrEqual@plt+0x397>
  404532:	mov    rax,0x4757c0
  404539:	mov    DWORD PTR [rax],0xa
  40453f:	jmp    4042d7 <xmlStrEqual@plt+0x397>
  404544:	mov    rax,0x4757c0
  40454b:	mov    DWORD PTR [rax],0x2
  404551:	jmp    4042d7 <xmlStrEqual@plt+0x397>
  404556:	call   43f9f0 <xmlStrEqual@plt+0x3bab0>
  40455b:	jmp    4043d5 <xmlStrEqual@plt+0x495>
  404560:	call   43f9f0 <xmlStrEqual@plt+0x3bab0>
  404565:	jmp    404330 <xmlStrEqual@plt+0x3f0>
  40456a:	call   43f9f0 <xmlStrEqual@plt+0x3bab0>
  40456f:	jmp    40436a <xmlStrEqual@plt+0x42a>
  404574:	call   43f9f0 <xmlStrEqual@plt+0x3bab0>
  404579:	jmp    404356 <xmlStrEqual@plt+0x416>
  40457e:	xchg   ax,ax
  404580:	endbr64 
  404584:	xor    ebp,ebp
  404586:	mov    r9,rdx
  404589:	pop    rsi
  40458a:	mov    rdx,rsp
  40458d:	and    rsp,0xfffffffffffffff0
  404591:	push   rax
  404592:	push   rsp
  404593:	mov    r8,0x446010
  40459a:	mov    rcx,0x445fa0
  4045a1:	mov    rdi,0x404140
  4045a8:	call   QWORD PTR [rip+0x64a42]        # 468ff0 <xmlStrEqual@plt+0x650b0>
  4045ae:	hlt    
  4045af:	nop
  4045b0:	endbr64 
  4045b4:	ret    
  4045b5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4045bf:	nop
  4045c0:	mov    eax,0x46d220
  4045c5:	cmp    rax,0x46d220
  4045cb:	je     4045e0 <xmlStrEqual@plt+0x6a0>
  4045cd:	mov    eax,0x0
  4045d2:	test   rax,rax
  4045d5:	je     4045e0 <xmlStrEqual@plt+0x6a0>
  4045d7:	mov    edi,0x46d220
  4045dc:	jmp    rax
  4045de:	xchg   ax,ax
  4045e0:	ret    
  4045e1:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4045ec:	nop    DWORD PTR [rax+0x0]
  4045f0:	mov    esi,0x46d220
  4045f5:	sub    rsi,0x46d220
  4045fc:	sar    rsi,0x3
  404600:	mov    rax,rsi
  404603:	shr    rax,0x3f
  404607:	add    rsi,rax
  40460a:	sar    rsi,1
  40460d:	je     404620 <xmlStrEqual@plt+0x6e0>
  40460f:	mov    eax,0x0
  404614:	test   rax,rax
  404617:	je     404620 <xmlStrEqual@plt+0x6e0>
  404619:	mov    edi,0x46d220
  40461e:	jmp    rax
  404620:	ret    
  404621:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40462c:	nop    DWORD PTR [rax+0x0]
  404630:	endbr64 
  404634:	cmp    BYTE PTR [rip+0x68be5],0x0        # 46d220 <xmlStrEqual@plt+0x692e0>
  40463b:	jne    404650 <xmlStrEqual@plt+0x710>
  40463d:	push   rbp
  40463e:	mov    rbp,rsp
  404641:	call   4045c0 <xmlStrEqual@plt+0x680>
  404646:	mov    BYTE PTR [rip+0x68bd3],0x1        # 46d220 <xmlStrEqual@plt+0x692e0>
  40464d:	pop    rbp
  40464e:	ret    
  40464f:	nop
  404650:	ret    
  404651:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40465c:	nop    DWORD PTR [rax+0x0]
  404660:	endbr64 
  404664:	jmp    4045f0 <xmlStrEqual@plt+0x6b0>
  404666:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404670:	push   r15
  404672:	push   r14
  404674:	push   r13
  404676:	push   r12
  404678:	push   rbp
  404679:	push   rbx
  40467a:	sub    rsp,0x18
  40467e:	test   rdi,rdi
  404681:	je     404725 <xmlStrEqual@plt+0x7e5>
  404687:	mov    r13,rsi
  40468a:	mov    rbp,rdi
  40468d:	call   403970 <strlen@plt>
  404692:	mov    r14,QWORD PTR [r13+0x0]
  404696:	mov    rbx,rax
  404699:	mov    r12d,0xffffffff
  40469f:	test   r14,r14
  4046a2:	je     404713 <xmlStrEqual@plt+0x7d3>
  4046a4:	mov    DWORD PTR [rsp+0xc],0x0
  4046ac:	mov    DWORD PTR [rsp+0x8],0x0
  4046b4:	xor    r15d,r15d
  4046b7:	nop    WORD PTR [rax+rax*1+0x0]
  4046c0:	mov    rdx,rbx
  4046c3:	mov    rsi,r14
  4046c6:	mov    rdi,rbp
  4046c9:	mov    r12d,r15d
  4046cc:	call   4039b0 <strncmp@plt>
  4046d1:	test   eax,eax
  4046d3:	jne    4046eb <xmlStrEqual@plt+0x7ab>
  4046d5:	mov    rdi,r14
  4046d8:	inc    DWORD PTR [rsp+0x8]
  4046dc:	call   403970 <strlen@plt>
  4046e1:	cmp    rax,rbx
  4046e4:	je     404713 <xmlStrEqual@plt+0x7d3>
  4046e6:	mov    DWORD PTR [rsp+0xc],r15d
  4046eb:	inc    r15
  4046ee:	mov    r14,QWORD PTR [r13+r15*8+0x0]
  4046f3:	test   r14,r14
  4046f6:	jne    4046c0 <xmlStrEqual@plt+0x780>
  4046f8:	mov    eax,DWORD PTR [rsp+0x8]
  4046fc:	mov    r12d,DWORD PTR [rsp+0xc]
  404701:	cmp    eax,0x1
  404704:	je     404713 <xmlStrEqual@plt+0x7d3>
  404706:	xor    r12d,r12d
  404709:	test   eax,eax
  40470b:	sete   r12b
  40470f:	sub    r12d,0x2
  404713:	add    rsp,0x18
  404717:	pop    rbx
  404718:	pop    rbp
  404719:	mov    eax,r12d
  40471c:	pop    r12
  40471e:	pop    r13
  404720:	pop    r14
  404722:	pop    r15
  404724:	ret    
  404725:	mov    r12d,0xffffffff
  40472b:	jmp    404713 <xmlStrEqual@plt+0x7d3>
  40472d:	nop    DWORD PTR [rax]
  404730:	push   rbx
  404731:	mov    rbx,rdi
  404734:	mov    rdi,QWORD PTR [rdi+0x18]
  404738:	test   rdi,rdi
  40473b:	je     40474a <xmlStrEqual@plt+0x80a>
  40473d:	call   4037b0 <free@plt>
  404742:	mov    QWORD PTR [rbx+0x18],0x0
  40474a:	mov    rdi,QWORD PTR [rbx+0x30]
  40474e:	test   rdi,rdi
  404751:	je     404760 <xmlStrEqual@plt+0x820>
  404753:	call   4037b0 <free@plt>
  404758:	mov    QWORD PTR [rbx+0x30],0x0
  404760:	mov    rdi,QWORD PTR [rbx+0x48]
  404764:	test   rdi,rdi
  404767:	je     404776 <xmlStrEqual@plt+0x836>
  404769:	call   4037b0 <free@plt>
  40476e:	mov    QWORD PTR [rbx+0x48],0x0
  404776:	mov    rdi,QWORD PTR [rbx+0x50]
  40477a:	test   rdi,rdi
  40477d:	je     40478c <xmlStrEqual@plt+0x84c>
  40477f:	call   4037b0 <free@plt>
  404784:	mov    QWORD PTR [rbx+0x50],0x0
  40478c:	mov    QWORD PTR [rbx+0x60],0x0
  404794:	mov    QWORD PTR [rbx+0x68],0x0
  40479c:	mov    QWORD PTR [rbx+0x70],0x0
  4047a4:	mov    DWORD PTR [rbx+0x78],0x0
  4047ab:	pop    rbx
  4047ac:	ret    
  4047ad:	nop    DWORD PTR [rax]
  4047b0:	test   rdi,rdi
  4047b3:	je     4047f8 <xmlStrEqual@plt+0x8b8>
  4047b5:	push   rbp
  4047b6:	push   rbx
  4047b7:	mov    rbx,rdi
  4047ba:	sub    rsp,0x8
  4047be:	call   403970 <strlen@plt>
  4047c3:	lea    rbp,[rax+0x1]
  4047c7:	mov    rdi,rbp
  4047ca:	call   403cd0 <malloc@plt>
  4047cf:	mov    rcx,rax
  4047d2:	test   rax,rax
  4047d5:	je     4047e8 <xmlStrEqual@plt+0x8a8>
  4047d7:	mov    rdx,rbp
  4047da:	mov    rsi,rbx
  4047dd:	mov    rdi,rax
  4047e0:	call   403ae0 <memcpy@plt>
  4047e5:	mov    rcx,rax
  4047e8:	add    rsp,0x8
  4047ec:	pop    rbx
  4047ed:	mov    rax,rcx
  4047f0:	pop    rbp
  4047f1:	ret    
  4047f2:	nop    WORD PTR [rax+rax*1+0x0]
  4047f8:	xor    ecx,ecx
  4047fa:	mov    rax,rcx
  4047fd:	ret    
  4047fe:	xchg   ax,ax
  404800:	test   rdx,rdx
  404803:	je     404890 <xmlStrEqual@plt+0x950>
  404809:	push   r13
  40480b:	mov    r13,rsi
  40480e:	push   r12
  404810:	mov    r12,rdi
  404813:	push   rbp
  404814:	mov    rbp,rcx
  404817:	push   rbx
  404818:	mov    rbx,rdx
  40481b:	sub    rsp,0x8
  40481f:	test   rcx,rcx
  404822:	je     404833 <xmlStrEqual@plt+0x8f3>
  404824:	mov    rsi,rcx
  404827:	mov    rdi,rdx
  40482a:	call   404670 <xmlStrEqual@plt+0x730>
  40482f:	test   eax,eax
  404831:	jns    404860 <xmlStrEqual@plt+0x920>
  404833:	add    rsp,0x8
  404837:	mov    r8,rbx
  40483a:	pop    rbx
  40483b:	pop    rbp
  40483c:	mov    rdi,r12
  40483f:	pop    r12
  404841:	mov    rcx,r13
  404844:	lea    rdx,[rip+0x427c7]        # 447012 <xmlStrEqual@plt+0x430d2>
  40484b:	mov    esi,0x1
  404850:	xor    eax,eax
  404852:	pop    r13
  404854:	jmp    403e20 <__fprintf_chk@plt>
  404859:	nop    DWORD PTR [rax+0x0]
  404860:	cdqe   
  404862:	mov    r9,QWORD PTR [rbp+rax*8+0x0]
  404867:	add    rsp,0x8
  40486b:	mov    r8,rbx
  40486e:	pop    rbx
  40486f:	pop    rbp
  404870:	mov    rdi,r12
  404873:	pop    r12
  404875:	mov    rcx,r13
  404878:	lea    rdx,[rip+0x42785]        # 447004 <xmlStrEqual@plt+0x430c4>
  40487f:	mov    esi,0x1
  404884:	xor    eax,eax
  404886:	pop    r13
  404888:	jmp    403e20 <__fprintf_chk@plt>
  40488d:	nop    DWORD PTR [rax]
  404890:	mov    rcx,rsi
  404893:	lea    rdx,[rip+0x4cc21]        # 4514bb <xmlStrEqual@plt+0x4d57b>
  40489a:	mov    esi,0x1
  40489f:	xor    eax,eax
  4048a1:	jmp    403e20 <__fprintf_chk@plt>
  4048a6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4048b0:	push   r15
  4048b2:	push   r14
  4048b4:	push   r13
  4048b6:	push   r12
  4048b8:	push   rbp
  4048b9:	push   rbx
  4048ba:	sub    rsp,0x18
  4048be:	mov    ebx,DWORD PTR [rcx]
  4048c0:	mov    r15d,DWORD PTR [rsp+0x70]
  4048c5:	test   ebx,ebx
  4048c7:	jne    4049f8 <xmlStrEqual@plt+0xab8>
  4048cd:	mov    r11d,DWORD PTR [rsp+0x58]
  4048d2:	mov    r13,rdi
  4048d5:	mov    r12,rsi
  4048d8:	mov    rbx,rdx
  4048db:	mov    rbp,rcx
  4048de:	mov    r14,r8
  4048e1:	test   r11d,r11d
  4048e4:	je     404990 <xmlStrEqual@plt+0xa50>
  4048ea:	mov    r10d,DWORD PTR [rdx]
  4048ed:	test   r10d,r10d
  4048f0:	jne    4049f8 <xmlStrEqual@plt+0xab8>
  4048f6:	test   r9,r9
  4048f9:	je     4049a7 <xmlStrEqual@plt+0xa67>
  4048ff:	nop
  404900:	mov    rsi,r9
  404903:	mov    rdi,r14
  404906:	mov    QWORD PTR [rsp+0x8],r9
  40490b:	call   404670 <xmlStrEqual@plt+0x730>
  404910:	test   eax,eax
  404912:	mov    edx,eax
  404914:	mov    r9,QWORD PTR [rsp+0x8]
  404919:	js     404a50 <xmlStrEqual@plt+0xb10>
  40491f:	mov    esi,DWORD PTR [rbx]
  404921:	test   esi,esi
  404923:	je     404931 <xmlStrEqual@plt+0x9f1>
  404925:	mov    ecx,DWORD PTR [rsp+0x60]
  404929:	test   ecx,ecx
  40492b:	je     4049e0 <xmlStrEqual@plt+0xaa0>
  404931:	mov    DWORD PTR [rbp+0x0],0x1
  404938:	movsxd rax,edx
  40493b:	inc    DWORD PTR [rbx]
  40493d:	cmp    DWORD PTR [rsp+0x50],0x1
  404942:	mov    rbx,QWORD PTR [r9+rax*8]
  404946:	je     4049bc <xmlStrEqual@plt+0xa7c>
  404948:	xor    eax,eax
  40494a:	cmp    DWORD PTR [rsp+0x50],0x2
  40494f:	jne    4049e2 <xmlStrEqual@plt+0xaa2>
  404955:	test   rbx,rbx
  404958:	je     40495e <xmlStrEqual@plt+0xa1e>
  40495a:	mov    DWORD PTR [r13+0x0],edx
  40495e:	test   r14,r14
  404961:	je     4049e0 <xmlStrEqual@plt+0xaa0>
  404963:	test   r12,r12
  404966:	je     4049e0 <xmlStrEqual@plt+0xaa0>
  404968:	mov    rdi,QWORD PTR [r12]
  40496c:	test   rdi,rdi
  40496f:	je     404976 <xmlStrEqual@plt+0xa36>
  404971:	call   4037b0 <free@plt>
  404976:	mov    rdi,r14
  404979:	call   4047b0 <xmlStrEqual@plt+0x870>
  40497e:	mov    QWORD PTR [r12],rax
  404982:	xor    eax,eax
  404984:	jmp    4049e2 <xmlStrEqual@plt+0xaa2>
  404986:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404990:	test   r9,r9
  404993:	jne    404900 <xmlStrEqual@plt+0x9c0>
  404999:	mov    edx,DWORD PTR [rdx]
  40499b:	test   edx,edx
  40499d:	je     4049a7 <xmlStrEqual@plt+0xa67>
  40499f:	mov    eax,DWORD PTR [rsp+0x60]
  4049a3:	test   eax,eax
  4049a5:	je     4049e0 <xmlStrEqual@plt+0xaa0>
  4049a7:	mov    DWORD PTR [rbp+0x0],0x1
  4049ae:	xor    edx,edx
  4049b0:	inc    DWORD PTR [rbx]
  4049b2:	cmp    DWORD PTR [rsp+0x50],0x1
  4049b7:	mov    rbx,r14
  4049ba:	jne    404948 <xmlStrEqual@plt+0xa08>
  4049bc:	test   rbx,rbx
  4049bf:	je     40495e <xmlStrEqual@plt+0xa1e>
  4049c1:	mov    rdi,QWORD PTR [r13+0x0]
  4049c5:	test   rdi,rdi
  4049c8:	je     4049cf <xmlStrEqual@plt+0xa8f>
  4049ca:	call   4037b0 <free@plt>
  4049cf:	mov    rdi,rbx
  4049d2:	call   4047b0 <xmlStrEqual@plt+0x870>
  4049d7:	mov    QWORD PTR [r13+0x0],rax
  4049db:	jmp    40495e <xmlStrEqual@plt+0xa1e>
  4049dd:	nop    DWORD PTR [rax]
  4049e0:	xor    eax,eax
  4049e2:	add    rsp,0x18
  4049e6:	pop    rbx
  4049e7:	pop    rbp
  4049e8:	pop    r12
  4049ea:	pop    r13
  4049ec:	pop    r14
  4049ee:	pop    r15
  4049f0:	ret    
  4049f1:	nop    DWORD PTR [rax+0x0]
  4049f8:	sub    rsp,0x8
  4049fc:	lea    rax,[rip+0x42631]        # 447034 <xmlStrEqual@plt+0x430f4>
  404a03:	push   rax
  404a04:	mov    rax,QWORD PTR [rip+0x645bd]        # 468fc8 <xmlStrEqual@plt+0x65088>
  404a0b:	mov    rcx,QWORD PTR [rip+0x68816]        # 46d228 <xmlStrEqual@plt+0x692e8>
  404a12:	mov    r8,QWORD PTR [rsp+0x78]
  404a17:	mov    rdi,QWORD PTR [rax]
  404a1a:	movsx  r9d,r15b
  404a1e:	lea    rdx,[rip+0x42683]        # 4470a8 <xmlStrEqual@plt+0x43168>
  404a25:	mov    esi,0x1
  404a2a:	xor    eax,eax
  404a2c:	call   403e20 <__fprintf_chk@plt>
  404a31:	pop    rdi
  404a32:	pop    r8
  404a34:	add    rsp,0x18
  404a38:	pop    rbx
  404a39:	pop    rbp
  404a3a:	pop    r12
  404a3c:	pop    r13
  404a3e:	pop    r14
  404a40:	mov    eax,0x1
  404a45:	pop    r15
  404a47:	ret    
  404a48:	nop    DWORD PTR [rax+rax*1+0x0]
  404a50:	cmp    eax,0xfffffffe
  404a53:	lea    r8,[rip+0x425c1]        # 44701b <xmlStrEqual@plt+0x430db>
  404a5a:	lea    rax,[rip+0x442cf]        # 448d30 <xmlStrEqual@plt+0x44df0>
  404a61:	cmovne r8,rax
  404a65:	sub    rsp,0x8
  404a69:	lea    rax,[rip+0x425c4]        # 447034 <xmlStrEqual@plt+0x430f4>
  404a70:	push   rax
  404a71:	movsx  r15d,r15b
  404a75:	mov    rax,QWORD PTR [rip+0x6454c]        # 468fc8 <xmlStrEqual@plt+0x65088>
  404a7c:	push   r15
  404a7e:	mov    rdi,QWORD PTR [rax]
  404a81:	mov    rcx,QWORD PTR [rip+0x687a0]        # 46d228 <xmlStrEqual@plt+0x692e8>
  404a88:	push   QWORD PTR [rsp+0x80]
  404a8f:	mov    r9,r14
  404a92:	lea    rdx,[rip+0x42647]        # 4470e0 <xmlStrEqual@plt+0x431a0>
  404a99:	mov    esi,0x1
  404a9e:	xor    eax,eax
  404aa0:	call   403e20 <__fprintf_chk@plt>
  404aa5:	add    rsp,0x20
  404aa9:	mov    eax,0x1
  404aae:	jmp    4049e2 <xmlStrEqual@plt+0xaa2>
  404ab3:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  404abe:	xchg   ax,ax
  404ac0:	endbr64 
  404ac4:	sub    rsp,0x8
  404ac8:	lea    rdx,[rip+0x42556]        # 447025 <xmlStrEqual@plt+0x430e5>
  404acf:	xor    eax,eax
  404ad1:	lea    rcx,[rip+0x4f333]        # 453e0b <xmlStrEqual@plt+0x4fecb>
  404ad8:	lea    rsi,[rip+0x4254a]        # 447029 <xmlStrEqual@plt+0x430e9>
  404adf:	mov    edi,0x1
  404ae4:	call   4037d0 <__printf_chk@plt>
  404ae9:	mov    rax,0x469588
  404af0:	mov    rdx,QWORD PTR [rax]
  404af3:	cmp    BYTE PTR [rdx],0x0
  404af6:	jne    404b00 <xmlStrEqual@plt+0xbc0>
  404af8:	add    rsp,0x8
  404afc:	ret    
  404afd:	nop    DWORD PTR [rax]
  404b00:	lea    rsi,[rip+0x4c9b3]        # 4514ba <xmlStrEqual@plt+0x4d57a>
  404b07:	mov    edi,0x1
  404b0c:	xor    eax,eax
  404b0e:	add    rsp,0x8
  404b12:	jmp    4037d0 <__printf_chk@plt>
  404b17:	nop    WORD PTR [rax+rax*1+0x0]
  404b20:	endbr64 
  404b24:	push   r12
  404b26:	push   rbp
  404b27:	push   rbx
  404b28:	mov    rbx,0x469598
  404b2f:	mov    rdi,QWORD PTR [rbx]
  404b32:	call   403970 <strlen@plt>
  404b37:	mov    r12,rax
  404b3a:	mov    rax,0x469590
  404b41:	mov    rbp,QWORD PTR [rax]
  404b44:	mov    rdi,rbp
  404b47:	call   403970 <strlen@plt>
  404b4c:	test   rax,rax
  404b4f:	jne    404b90 <xmlStrEqual@plt+0xc50>
  404b51:	test   r12,r12
  404b54:	jne    404b9d <xmlStrEqual@plt+0xc5d>
  404b56:	mov    rax,0x469580
  404b5d:	mov    rdx,QWORD PTR [rax]
  404b60:	cmp    BYTE PTR [rdx],0x0
  404b63:	jne    404bbe <xmlStrEqual@plt+0xc7e>
  404b65:	mov    rbx,0x469540
  404b6c:	mov    rdi,QWORD PTR [rbx]
  404b6f:	test   rdi,rdi
  404b72:	je     404b89 <xmlStrEqual@plt+0xc49>
  404b74:	nop    DWORD PTR [rax+0x0]
  404b78:	add    rbx,0x8
  404b7c:	call   403da0 <puts@plt>
  404b81:	mov    rdi,QWORD PTR [rbx]
  404b84:	test   rdi,rdi
  404b87:	jne    404b78 <xmlStrEqual@plt+0xc38>
  404b89:	pop    rbx
  404b8a:	pop    rbp
  404b8b:	pop    r12
  404b8d:	ret    
  404b8e:	xchg   ax,ax
  404b90:	mov    rdi,rbp
  404b93:	call   403da0 <puts@plt>
  404b98:	test   r12,r12
  404b9b:	je     404ba5 <xmlStrEqual@plt+0xc65>
  404b9d:	mov    rdi,QWORD PTR [rbx]
  404ba0:	call   403da0 <puts@plt>
  404ba5:	mov    edi,0xa
  404baa:	call   403d10 <putchar@plt>
  404baf:	mov    rax,0x469580
  404bb6:	mov    rdx,QWORD PTR [rax]
  404bb9:	cmp    BYTE PTR [rdx],0x0
  404bbc:	je     404b65 <xmlStrEqual@plt+0xc25>
  404bbe:	lea    rsi,[rip+0x4246b]        # 447030 <xmlStrEqual@plt+0x430f0>
  404bc5:	mov    edi,0x1
  404bca:	xor    eax,eax
  404bcc:	call   4037d0 <__printf_chk@plt>
  404bd1:	jmp    404b65 <xmlStrEqual@plt+0xc25>
  404bd3:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  404bde:	xchg   ax,ax
  404be0:	endbr64 
  404be4:	mov    rax,0x469540
  404beb:	mov    QWORD PTR [rdi+0x60],0x0
  404bf3:	mov    rdx,QWORD PTR [rax]
  404bf6:	mov    QWORD PTR [rdi+0x68],0x0
  404bfe:	mov    QWORD PTR [rdi],rdx
  404c01:	mov    rdx,QWORD PTR [rax+0x8]
  404c05:	mov    QWORD PTR [rdi+0x70],0x0
  404c0d:	mov    QWORD PTR [rdi+0x8],rdx
  404c11:	mov    rdx,QWORD PTR [rax+0x18]
  404c15:	mov    DWORD PTR [rdi+0x78],0x0
  404c1c:	mov    QWORD PTR [rdi+0x20],rdx
  404c20:	mov    rdx,QWORD PTR [rax+0x20]
  404c24:	mov    DWORD PTR [rdi+0x10],0xffffffff
  404c2b:	mov    QWORD PTR [rdi+0x38],rdx
  404c2f:	mov    rdx,QWORD PTR [rax+0x28]
  404c33:	mov    rax,QWORD PTR [rax+0x30]
  404c37:	mov    QWORD PTR [rdi+0x18],0x0
  404c3f:	mov    DWORD PTR [rdi+0x28],0xffffffff
  404c46:	mov    QWORD PTR [rdi+0x30],0x0
  404c4e:	mov    QWORD PTR [rdi+0x48],0x0
  404c56:	mov    QWORD PTR [rdi+0x50],0x0
  404c5e:	mov    QWORD PTR [rdi+0x40],rdx
  404c62:	mov    QWORD PTR [rdi+0x58],rax
  404c66:	ret    
  404c67:	nop    WORD PTR [rax+rax*1+0x0]
  404c70:	endbr64 
  404c74:	test   rdi,rdi
  404c77:	je     404c95 <xmlStrEqual@plt+0xd55>
  404c79:	movabs rax,0x100000000
  404c83:	mov    QWORD PTR [rdi],rax
  404c86:	mov    QWORD PTR [rdi+0x8],0x1
  404c8e:	mov    DWORD PTR [rdi+0x10],0x1
  404c95:	ret    
  404c96:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404ca0:	endbr64 
  404ca4:	push   rbx
  404ca5:	mov    edi,0x14
  404caa:	call   403cd0 <malloc@plt>
  404caf:	mov    rbx,rax
  404cb2:	mov    rdi,rax
  404cb5:	call   404c70 <xmlStrEqual@plt+0xd30>
  404cba:	mov    rax,rbx
  404cbd:	pop    rbx
  404cbe:	ret    
  404cbf:	nop
  404cc0:	endbr64 
  404cc4:	push   rbp
  404cc5:	push   rbx
  404cc6:	sub    rsp,0x18
  404cca:	test   rdi,rdi
  404ccd:	je     404e00 <xmlStrEqual@plt+0xec0>
  404cd3:	mov    r9d,DWORD PTR [rsi+0x60]
  404cd7:	mov    rbp,rdi
  404cda:	mov    rbx,rsi
  404cdd:	test   r9d,r9d
  404ce0:	jne    404d20 <xmlStrEqual@plt+0xde0>
  404ce2:	mov    r8d,DWORD PTR [rbx+0x64]
  404ce6:	test   r8d,r8d
  404ce9:	jne    404d43 <xmlStrEqual@plt+0xe03>
  404ceb:	mov    edi,DWORD PTR [rbx+0x68]
  404cee:	test   edi,edi
  404cf0:	jne    404d67 <xmlStrEqual@plt+0xe27>
  404cf2:	mov    esi,DWORD PTR [rbx+0x6c]
  404cf5:	test   esi,esi
  404cf7:	jne    404d8c <xmlStrEqual@plt+0xe4c>
  404cfd:	mov    ecx,DWORD PTR [rbx+0x70]
  404d00:	test   ecx,ecx
  404d02:	jne    404db1 <xmlStrEqual@plt+0xe71>
  404d08:	mov    edx,DWORD PTR [rbx+0x74]
  404d0b:	xor    eax,eax
  404d0d:	test   edx,edx
  404d0f:	jne    404ddb <xmlStrEqual@plt+0xe9b>
  404d15:	add    rsp,0x18
  404d19:	pop    rbx
  404d1a:	pop    rbp
  404d1b:	ret    
  404d1c:	nop    DWORD PTR [rax+0x0]
  404d20:	lea    rcx,[rip+0x4230e]        # 447035 <xmlStrEqual@plt+0x430f5>
  404d27:	lea    rdx,[rip+0x4c78d]        # 4514bb <xmlStrEqual@plt+0x4d57b>
  404d2e:	mov    esi,0x1
  404d33:	xor    eax,eax
  404d35:	call   403e20 <__fprintf_chk@plt>
  404d3a:	mov    r8d,DWORD PTR [rbx+0x64]
  404d3e:	test   r8d,r8d
  404d41:	je     404ceb <xmlStrEqual@plt+0xdab>
  404d43:	mov    rdi,rbp
  404d46:	lea    rcx,[rip+0x507f7]        # 455544 <xmlStrEqual@plt+0x51604>
  404d4d:	lea    rdx,[rip+0x4c767]        # 4514bb <xmlStrEqual@plt+0x4d57b>
  404d54:	mov    esi,0x1
  404d59:	xor    eax,eax
  404d5b:	call   403e20 <__fprintf_chk@plt>
  404d60:	mov    edi,DWORD PTR [rbx+0x68]
  404d63:	test   edi,edi
  404d65:	je     404cf2 <xmlStrEqual@plt+0xdb2>
  404d67:	mov    rdx,QWORD PTR [rbx+0x18]
  404d6b:	mov    rcx,0x469500
  404d72:	lea    rsi,[rip+0x509ad]        # 455726 <xmlStrEqual@plt+0x517e6>
  404d79:	mov    rdi,rbp
  404d7c:	call   404800 <xmlStrEqual@plt+0x8c0>
  404d81:	mov    esi,DWORD PTR [rbx+0x6c]
  404d84:	test   esi,esi
  404d86:	je     404cfd <xmlStrEqual@plt+0xdbd>
  404d8c:	mov    rcx,0x4694e0
  404d93:	mov    rdx,QWORD PTR [rbx+0x30]
  404d97:	lea    rsi,[rip+0x4229c]        # 44703a <xmlStrEqual@plt+0x430fa>
  404d9e:	mov    rdi,rbp
  404da1:	call   404800 <xmlStrEqual@plt+0x8c0>
  404da6:	mov    ecx,DWORD PTR [rbx+0x70]
  404da9:	test   ecx,ecx
  404dab:	je     404d08 <xmlStrEqual@plt+0xdc8>
  404db1:	lea    rdx,[rip+0x4c703]        # 4514bb <xmlStrEqual@plt+0x4d57b>
  404db8:	lea    rcx,[rip+0x4227f]        # 44703e <xmlStrEqual@plt+0x430fe>
  404dbf:	mov    esi,0x1
  404dc4:	mov    rdi,rbp
  404dc7:	xor    eax,eax
  404dc9:	call   403e20 <__fprintf_chk@plt>
  404dce:	mov    edx,DWORD PTR [rbx+0x74]
  404dd1:	xor    eax,eax
  404dd3:	test   edx,edx
  404dd5:	je     404d15 <xmlStrEqual@plt+0xdd5>
  404ddb:	mov    rdx,QWORD PTR [rbx+0x50]
  404ddf:	mov    rdi,rbp
  404de2:	xor    ecx,ecx
  404de4:	lea    rsi,[rip+0x4225d]        # 447048 <xmlStrEqual@plt+0x43108>
  404deb:	mov    DWORD PTR [rsp+0xc],eax
  404def:	call   404800 <xmlStrEqual@plt+0x8c0>
  404df4:	mov    eax,DWORD PTR [rsp+0xc]
  404df8:	add    rsp,0x18
  404dfc:	pop    rbx
  404dfd:	pop    rbp
  404dfe:	ret    
  404dff:	nop
  404e00:	mov    rax,QWORD PTR [rip+0x641c1]        # 468fc8 <xmlStrEqual@plt+0x65088>
  404e07:	lea    rcx,[rip+0x42217]        # 447025 <xmlStrEqual@plt+0x430e5>
  404e0e:	mov    rdi,QWORD PTR [rax]
  404e11:	lea    rdx,[rip+0x42300]        # 447118 <xmlStrEqual@plt+0x431d8>
  404e18:	mov    esi,0x1
  404e1d:	xor    eax,eax
  404e1f:	call   403e20 <__fprintf_chk@plt>
  404e24:	mov    eax,0x1
  404e29:	jmp    404d15 <xmlStrEqual@plt+0xdd5>
  404e2e:	xchg   ax,ax
  404e30:	endbr64 
  404e34:	push   r12
  404e36:	mov    r12,rsi
  404e39:	lea    rsi,[rip+0x42214]        # 447054 <xmlStrEqual@plt+0x43114>
  404e40:	push   rbp
  404e41:	mov    rbp,rdi
  404e44:	push   rbx
  404e45:	call   403c40 <fopen@plt>
  404e4a:	test   rax,rax
  404e4d:	je     404e70 <xmlStrEqual@plt+0xf30>
  404e4f:	mov    rbx,rax
  404e52:	mov    rsi,r12
  404e55:	mov    rdi,rax
  404e58:	call   404cc0 <xmlStrEqual@plt+0xd80>
  404e5d:	mov    rdi,rbx
  404e60:	mov    ebp,eax
  404e62:	call   403b80 <fclose@plt>
  404e67:	pop    rbx
  404e68:	mov    eax,ebp
  404e6a:	pop    rbp
  404e6b:	pop    r12
  404e6d:	ret    
  404e6e:	xchg   ax,ax
  404e70:	mov    rax,QWORD PTR [rip+0x64151]        # 468fc8 <xmlStrEqual@plt+0x65088>
  404e77:	mov    r8,rbp
  404e7a:	mov    rdi,QWORD PTR [rax]
  404e7d:	lea    rcx,[rip+0x421a1]        # 447025 <xmlStrEqual@plt+0x430e5>
  404e84:	lea    rdx,[rip+0x422b5]        # 447140 <xmlStrEqual@plt+0x43200>
  404e8b:	mov    esi,0x1
  404e90:	xor    eax,eax
  404e92:	call   403e20 <__fprintf_chk@plt>
  404e97:	mov    ebp,0x1
  404e9c:	pop    rbx
  404e9d:	mov    eax,ebp
  404e9f:	pop    rbp
  404ea0:	pop    r12
  404ea2:	ret    
  404ea3:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  404eae:	xchg   ax,ax
  404eb0:	endbr64 
  404eb4:	jmp    404730 <xmlStrEqual@plt+0x7f0>
  404eb9:	nop    DWORD PTR [rax+0x0]
  404ec0:	push   r15
  404ec2:	push   r14
  404ec4:	mov    r14d,edi
  404ec7:	push   r13
  404ec9:	mov    r13,rcx
  404ecc:	push   r12
  404ece:	mov    r12,rsi
  404ed1:	push   rbp
  404ed2:	push   rbx
  404ed3:	mov    rbx,rdx
  404ed6:	sub    rsp,0xb8
  404edd:	mov    rax,QWORD PTR fs:0x28
  404ee6:	mov    QWORD PTR [rsp+0xa8],rax
  404eee:	xor    eax,eax
  404ef0:	mov    rax,QWORD PTR [rsi]
  404ef3:	mov    r15d,DWORD PTR [rcx+0xc]
  404ef7:	mov    QWORD PTR [rip+0x6832a],rax        # 46d228 <xmlStrEqual@plt+0x692e8>
  404efe:	mov    eax,DWORD PTR [rcx]
  404f00:	mov    DWORD PTR [rsp+0xc],eax
  404f04:	mov    eax,DWORD PTR [rcx+0x4]
  404f07:	test   eax,eax
  404f09:	jne    405130 <xmlStrEqual@plt+0x11f0>
  404f0f:	lea    rbp,[rsp+0x20]
  404f14:	mov    rdi,rbp
  404f17:	call   404be0 <xmlStrEqual@plt+0xca0>
  404f1c:	mov    rax,QWORD PTR [rip+0x6408d]        # 468fb0 <xmlStrEqual@plt+0x65070>
  404f23:	mov    edx,DWORD PTR [r13+0x10]
  404f27:	mov    QWORD PTR [rax],0x0
  404f2e:	mov    rax,QWORD PTR [rip+0x6409b]        # 468fd0 <xmlStrEqual@plt+0x65090>
  404f35:	lea    r13,[rsp+0x1c]
  404f3a:	mov    DWORD PTR [rax],0x0
  404f40:	mov    rax,QWORD PTR [rip+0x640a1]        # 468fe8 <xmlStrEqual@plt+0x650a8>
  404f47:	mov    DWORD PTR [rax],edx
  404f49:	mov    rax,QWORD PTR [rip+0x64068]        # 468fb8 <xmlStrEqual@plt+0x65078>
  404f50:	mov    DWORD PTR [rax],0x3f
  404f56:	mov    r8,r13
  404f59:	lea    rcx,[rip+0x644a0]        # 469400 <xmlStrEqual@plt+0x654c0>
  404f60:	lea    rdx,[rip+0x420ef]        # 447056 <xmlStrEqual@plt+0x43116>
  404f67:	mov    rsi,r12
  404f6a:	mov    edi,r14d
  404f6d:	mov    DWORD PTR [rsp+0x1c],0x0
  404f75:	call   403e30 <getopt_long@plt>
  404f7a:	cmp    eax,0xffffffff
  404f7d:	je     405198 <xmlStrEqual@plt+0x1258>
  404f83:	cmp    eax,0x56
  404f86:	je     405180 <xmlStrEqual@plt+0x1240>
  404f8c:	jle    405090 <xmlStrEqual@plt+0x1150>
  404f92:	cmp    eax,0x64
  404f95:	je     405140 <xmlStrEqual@plt+0x1200>
  404f9b:	jle    405050 <xmlStrEqual@plt+0x1110>
  404fa1:	cmp    eax,0x66
  404fa4:	jne    405030 <xmlStrEqual@plt+0x10f0>
  404faa:	sub    rsp,0x8
  404fae:	push   0x66
  404fb0:	lea    rax,[rip+0x42091]        # 447048 <xmlStrEqual@plt+0x43108>
  404fb7:	inc    DWORD PTR [rbx+0x78]
  404fba:	push   rax
  404fbb:	lea    rcx,[rbp+0x74]
  404fbf:	lea    rdx,[rbx+0x74]
  404fc3:	mov    eax,DWORD PTR [rsp+0x24]
  404fc7:	lea    rsi,[rbx+0x50]
  404fcb:	push   rax
  404fcc:	lea    rdi,[rbx+0x48]
  404fd0:	xor    r9d,r9d
  404fd3:	push   r15
  404fd5:	push   0x1
  404fd7:	mov    rax,QWORD PTR [rip+0x63fd2]        # 468fb0 <xmlStrEqual@plt+0x65070>
  404fde:	mov    r8,QWORD PTR [rax]
  404fe1:	call   4048b0 <xmlStrEqual@plt+0x970>
  404fe6:	add    rsp,0x30
  404fea:	test   eax,eax
  404fec:	je     404f56 <xmlStrEqual@plt+0x1016>
  404ff2:	nop    WORD PTR [rax+rax*1+0x0]
  404ff8:	mov    rdi,rbp
  404ffb:	call   404730 <xmlStrEqual@plt+0x7f0>
  405000:	mov    eax,0x1
  405005:	mov    rsi,QWORD PTR [rsp+0xa8]
  40500d:	xor    rsi,QWORD PTR fs:0x28
  405016:	jne    4051a7 <xmlStrEqual@plt+0x1267>
  40501c:	add    rsp,0xb8
  405023:	pop    rbx
  405024:	pop    rbp
  405025:	pop    r12
  405027:	pop    r13
  405029:	pop    r14
  40502b:	pop    r15
  40502d:	ret    
  40502e:	xchg   ax,ax
  405030:	cmp    eax,0x68
  405033:	jne    4050f8 <xmlStrEqual@plt+0x11b8>
  405039:	call   404b20 <xmlStrEqual@plt+0xbe0>
  40503e:	mov    rdi,rbp
  405041:	call   404eb0 <xmlStrEqual@plt+0xf70>
  405046:	xor    edi,edi
  405048:	call   403c60 <exit@plt>
  40504d:	nop    DWORD PTR [rax]
  405050:	cmp    eax,0x61
  405053:	jne    4050f8 <xmlStrEqual@plt+0x11b8>
  405059:	sub    rsp,0x8
  40505d:	push   0x61
  40505f:	lea    rax,[rip+0x41fd4]        # 44703a <xmlStrEqual@plt+0x430fa>
  405066:	inc    DWORD PTR [rbx+0x78]
  405069:	push   rax
  40506a:	lea    rcx,[rbp+0x6c]
  40506e:	lea    rdx,[rbx+0x6c]
  405072:	mov    eax,DWORD PTR [rsp+0x24]
  405076:	lea    rsi,[rbx+0x30]
  40507a:	push   rax
  40507b:	lea    rdi,[rbx+0x28]
  40507f:	mov    r9,0x4694e0
  405086:	push   r15
  405088:	push   0x2
  40508a:	jmp    404fd7 <xmlStrEqual@plt+0x1097>
  40508f:	nop
  405090:	cmp    eax,0x3f
  405093:	je     404ff8 <xmlStrEqual@plt+0x10b8>
  405099:	cmp    eax,0x44
  40509c:	jne    4050f0 <xmlStrEqual@plt+0x11b0>
  40509e:	sub    rsp,0x8
  4050a2:	push   0x44
  4050a4:	lea    rax,[rip+0x41f93]        # 44703e <xmlStrEqual@plt+0x430fe>
  4050ab:	inc    DWORD PTR [rbx+0x78]
  4050ae:	push   rax
  4050af:	lea    rcx,[rbp+0x70]
  4050b3:	lea    rdx,[rbx+0x70]
  4050b7:	mov    eax,DWORD PTR [rsp+0x24]
  4050bb:	xor    r9d,r9d
  4050be:	push   rax
  4050bf:	mov    rax,QWORD PTR [rip+0x63eea]        # 468fb0 <xmlStrEqual@plt+0x65070>
  4050c6:	xor    esi,esi
  4050c8:	push   r15
  4050ca:	mov    r8,QWORD PTR [rax]
  4050cd:	xor    edi,edi
  4050cf:	push   0x0
  4050d1:	call   4048b0 <xmlStrEqual@plt+0x970>
  4050d6:	add    rsp,0x30
  4050da:	test   eax,eax
  4050dc:	je     404f56 <xmlStrEqual@plt+0x1016>
  4050e2:	jmp    404ff8 <xmlStrEqual@plt+0x10b8>
  4050e7:	nop    WORD PTR [rax+rax*1+0x0]
  4050f0:	test   eax,eax
  4050f2:	je     404ff8 <xmlStrEqual@plt+0x10b8>
  4050f8:	mov    r8d,eax
  4050fb:	mov    rax,QWORD PTR [rip+0x63ec6]        # 468fc8 <xmlStrEqual@plt+0x65088>
  405102:	lea    r9,[rip+0x41f2b]        # 447034 <xmlStrEqual@plt+0x430f4>
  405109:	mov    rdi,QWORD PTR [rax]
  40510c:	lea    rcx,[rip+0x41f12]        # 447025 <xmlStrEqual@plt+0x430e5>
  405113:	lea    rdx,[rip+0x41f46]        # 447060 <xmlStrEqual@plt+0x43120>
  40511a:	mov    esi,0x1
  40511f:	xor    eax,eax
  405121:	call   403e20 <__fprintf_chk@plt>
  405126:	call   403a00 <abort@plt>
  40512b:	nop    DWORD PTR [rax+rax*1+0x0]
  405130:	mov    rdi,rdx
  405133:	call   404be0 <xmlStrEqual@plt+0xca0>
  405138:	jmp    404f0f <xmlStrEqual@plt+0xfcf>
  40513d:	nop    DWORD PTR [rax]
  405140:	sub    rsp,0x8
  405144:	push   0x64
  405146:	lea    rax,[rip+0x505d9]        # 455726 <xmlStrEqual@plt+0x517e6>
  40514d:	inc    DWORD PTR [rbx+0x78]
  405150:	push   rax
  405151:	lea    rcx,[rbp+0x68]
  405155:	lea    rdx,[rbx+0x68]
  405159:	mov    eax,DWORD PTR [rsp+0x24]
  40515d:	lea    rsi,[rbx+0x18]
  405161:	push   rax
  405162:	lea    rdi,[rbx+0x10]
  405166:	mov    r9,0x469500
  40516d:	push   r15
  40516f:	push   0x2
  405171:	jmp    404fd7 <xmlStrEqual@plt+0x1097>
  405176:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405180:	call   404ac0 <xmlStrEqual@plt+0xb80>
  405185:	mov    rdi,rbp
  405188:	call   404eb0 <xmlStrEqual@plt+0xf70>
  40518d:	xor    edi,edi
  40518f:	call   403c60 <exit@plt>
  405194:	nop    DWORD PTR [rax+0x0]
  405198:	mov    rdi,rbp
  40519b:	call   404730 <xmlStrEqual@plt+0x7f0>
  4051a0:	xor    eax,eax
  4051a2:	jmp    405005 <xmlStrEqual@plt+0x10c5>
  4051a7:	call   403c00 <__stack_chk_fail@plt>
  4051ac:	nop    DWORD PTR [rax+0x0]
  4051b0:	endbr64 
  4051b4:	push   rbx
  4051b5:	mov    rbx,rdx
  4051b8:	call   404ec0 <xmlStrEqual@plt+0xf80>
  4051bd:	cmp    eax,0x1
  4051c0:	je     4051c4 <xmlStrEqual@plt+0x1284>
  4051c2:	pop    rbx
  4051c3:	ret    
  4051c4:	mov    rdi,rbx
  4051c7:	call   404eb0 <xmlStrEqual@plt+0xf70>
  4051cc:	mov    edi,0x1
  4051d1:	call   403c60 <exit@plt>
  4051d6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4051e0:	endbr64 
  4051e4:	push   rbx
  4051e5:	mov    rbx,rdx
  4051e8:	sub    rsp,0x20
  4051ec:	mov    rax,QWORD PTR fs:0x28
  4051f5:	mov    QWORD PTR [rsp+0x18],rax
  4051fa:	xor    eax,eax
  4051fc:	mov    DWORD PTR [rsp],ecx
  4051ff:	movabs rax,0x100000000
  405209:	mov    rcx,rsp
  40520c:	mov    DWORD PTR [rsp+0x4],r8d
  405211:	mov    DWORD PTR [rsp+0x8],r9d
  405216:	mov    QWORD PTR [rsp+0xc],rax
  40521b:	call   404ec0 <xmlStrEqual@plt+0xf80>
  405220:	cmp    eax,0x1
  405223:	je     40523b <xmlStrEqual@plt+0x12fb>
  405225:	mov    rdx,QWORD PTR [rsp+0x18]
  40522a:	xor    rdx,QWORD PTR fs:0x28
  405233:	jne    40524d <xmlStrEqual@plt+0x130d>
  405235:	add    rsp,0x20
  405239:	pop    rbx
  40523a:	ret    
  40523b:	mov    rdi,rbx
  40523e:	call   404eb0 <xmlStrEqual@plt+0xf70>
  405243:	mov    edi,0x1
  405248:	call   403c60 <exit@plt>
  40524d:	call   403c00 <__stack_chk_fail@plt>
  405252:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40525d:	nop    DWORD PTR [rax]
  405260:	endbr64 
  405264:	mov    r9d,0x1
  40526a:	mov    r8d,0x1
  405270:	xor    ecx,ecx
  405272:	jmp    4051e0 <xmlStrEqual@plt+0x12a0>
  405277:	nop    WORD PTR [rax+rax*1+0x0]
  405280:	endbr64 
  405284:	xor    eax,eax
  405286:	ret    
  405287:	nop    WORD PTR [rax+rax*1+0x0]
  405290:	endbr64 
  405294:	test   rdi,rdi
  405297:	je     4052b0 <xmlStrEqual@plt+0x1370>
  405299:	push   rbx
  40529a:	mov    rbx,rdi
  40529d:	mov    rdi,QWORD PTR [rdi]
  4052a0:	call   4037b0 <free@plt>
  4052a5:	mov    rdi,rbx
  4052a8:	pop    rbx
  4052a9:	jmp    4037b0 <free@plt>
  4052ae:	xchg   ax,ax
  4052b0:	ret    
  4052b1:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4052bc:	nop    DWORD PTR [rax+0x0]
  4052c0:	endbr64 
  4052c4:	test   rdi,rdi
  4052c7:	je     4052e0 <xmlStrEqual@plt+0x13a0>
  4052c9:	push   rbx
  4052ca:	mov    rbx,rdi
  4052cd:	mov    rdi,QWORD PTR [rdi]
  4052d0:	call   4037b0 <free@plt>
  4052d5:	mov    rdi,rbx
  4052d8:	pop    rbx
  4052d9:	jmp    4037b0 <free@plt>
  4052de:	xchg   ax,ax
  4052e0:	ret    
  4052e1:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4052ec:	nop    DWORD PTR [rax+0x0]
  4052f0:	endbr64 
  4052f4:	push   rbx
  4052f5:	mov    edi,0x20
  4052fa:	call   434fe0 <xmlStrEqual@plt+0x310a0>
  4052ff:	mov    rbx,rax
  405302:	test   rax,rax
  405305:	je     405338 <xmlStrEqual@plt+0x13f8>
  405307:	mov    QWORD PTR [rax],0x0
  40530e:	lea    rdi,[rip+0xffffffffffffffab]        # 4052c0 <xmlStrEqual@plt+0x1380>
  405315:	call   42dca0 <xmlStrEqual@plt+0x29d60>
  40531a:	mov    QWORD PTR [rbx+0x10],rax
  40531e:	lea    rdi,[rip+0xffffffffffffff6b]        # 405290 <xmlStrEqual@plt+0x1350>
  405325:	call   42dca0 <xmlStrEqual@plt+0x29d60>
  40532a:	mov    QWORD PTR [rbx+0x18],rax
  40532e:	mov    rax,rbx
  405331:	pop    rbx
  405332:	ret    
  405333:	nop    DWORD PTR [rax+rax*1+0x0]
  405338:	lea    rsi,[rip+0x41ff9]        # 447338 <xmlStrEqual@plt+0x433f8>
  40533f:	mov    edi,0x3
  405344:	xor    eax,eax
  405346:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  40534b:	jmp    40532e <xmlStrEqual@plt+0x13ee>
  40534d:	nop    DWORD PTR [rax]
  405350:	endbr64 
  405354:	test   rdi,rdi
  405357:	je     405380 <xmlStrEqual@plt+0x1440>
  405359:	push   rbx
  40535a:	mov    rbx,rdi
  40535d:	mov    rdi,QWORD PTR [rdi+0x10]
  405361:	call   42e2b0 <xmlStrEqual@plt+0x2a370>
  405366:	mov    rdi,QWORD PTR [rbx+0x18]
  40536a:	call   42e2b0 <xmlStrEqual@plt+0x2a370>
  40536f:	mov    rdi,QWORD PTR [rbx]
  405372:	call   4037b0 <free@plt>
  405377:	mov    rdi,rbx
  40537a:	pop    rbx
  40537b:	jmp    4037b0 <free@plt>
  405380:	ret    
  405381:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40538c:	nop    DWORD PTR [rax+0x0]
  405390:	endbr64 
  405394:	push   rbp
  405395:	mov    ebp,edi
  405397:	mov    edi,0x10
  40539c:	push   rbx
  40539d:	mov    rbx,rsi
  4053a0:	sub    rsp,0x8
  4053a4:	call   434fe0 <xmlStrEqual@plt+0x310a0>
  4053a9:	test   rax,rax
  4053ac:	je     4053b4 <xmlStrEqual@plt+0x1474>
  4053ae:	mov    DWORD PTR [rax],ebp
  4053b0:	mov    QWORD PTR [rax+0x8],rbx
  4053b4:	add    rsp,0x8
  4053b8:	pop    rbx
  4053b9:	pop    rbp
  4053ba:	ret    
  4053bb:	nop    DWORD PTR [rax+rax*1+0x0]
  4053c0:	endbr64 
  4053c4:	test   rdi,rdi
  4053c7:	je     405420 <xmlStrEqual@plt+0x14e0>
  4053c9:	push   rbp
  4053ca:	push   rbx
  4053cb:	mov    rbx,rdi
  4053ce:	sub    rsp,0x8
  4053d2:	mov    eax,DWORD PTR [rdi]
  4053d4:	test   eax,eax
  4053d6:	je     4053f0 <xmlStrEqual@plt+0x14b0>
  4053d8:	cmp    eax,0x1
  4053db:	je     4053f0 <xmlStrEqual@plt+0x14b0>
  4053dd:	add    rsp,0x8
  4053e1:	mov    rdi,rbx
  4053e4:	pop    rbx
  4053e5:	pop    rbp
  4053e6:	jmp    4037b0 <free@plt>
  4053eb:	nop    DWORD PTR [rax+rax*1+0x0]
  4053f0:	mov    rbp,QWORD PTR [rbx+0x8]
  4053f4:	test   rbp,rbp
  4053f7:	je     4053dd <xmlStrEqual@plt+0x149d>
  4053f9:	mov    rdi,QWORD PTR [rbp+0x0]
  4053fd:	call   4037b0 <free@plt>
  405402:	mov    rdi,rbp
  405405:	call   4037b0 <free@plt>
  40540a:	add    rsp,0x8
  40540e:	mov    rdi,rbx
  405411:	pop    rbx
  405412:	pop    rbp
  405413:	jmp    4037b0 <free@plt>
  405418:	nop    DWORD PTR [rax+rax*1+0x0]
  405420:	ret    
  405421:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40542c:	nop    DWORD PTR [rax+0x0]
  405430:	endbr64 
  405434:	push   r15
  405436:	mov    r15d,esi
  405439:	push   r14
  40543b:	mov    r14d,edx
  40543e:	push   r13
  405440:	mov    r13d,r9d
  405443:	push   r12
  405445:	mov    r12d,ecx
  405448:	push   rbp
  405449:	mov    rbp,rdi
  40544c:	push   rbx
  40544d:	sub    rsp,0x18
  405451:	mov    DWORD PTR [rsp+0xc],r8d
  405456:	test   rdi,rdi
  405459:	je     4054b0 <xmlStrEqual@plt+0x1570>
  40545b:	mov    edi,0x20
  405460:	call   434fe0 <xmlStrEqual@plt+0x310a0>
  405465:	mov    rbx,rax
  405468:	test   rax,rax
  40546b:	je     4054c8 <xmlStrEqual@plt+0x1588>
  40546d:	mov    rdi,rbp
  405470:	call   403ed0 <strdup@plt>
  405475:	movzx  ebp,BYTE PTR [rsp+0xc]
  40547a:	movzx  r15d,r15b
  40547e:	movzx  r14d,r14b
  405482:	movzx  r12d,r12b
  405486:	mov    QWORD PTR [rbx],rax
  405489:	mov    DWORD PTR [rbx+0x8],r15d
  40548d:	mov    DWORD PTR [rbx+0xc],r14d
  405491:	mov    DWORD PTR [rbx+0x10],r12d
  405495:	mov    DWORD PTR [rbx+0x14],ebp
  405498:	mov    BYTE PTR [rbx+0x18],r13b
  40549c:	add    rsp,0x18
  4054a0:	mov    rax,rbx
  4054a3:	pop    rbx
  4054a4:	pop    rbp
  4054a5:	pop    r12
  4054a7:	pop    r13
  4054a9:	pop    r14
  4054ab:	pop    r15
  4054ad:	ret    
  4054ae:	xchg   ax,ax
  4054b0:	lea    rsi,[rip+0x41ed1]        # 447388 <xmlStrEqual@plt+0x43448>
  4054b7:	mov    edi,0x2
  4054bc:	xor    eax,eax
  4054be:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  4054c3:	jmp    40545b <xmlStrEqual@plt+0x151b>
  4054c5:	nop    DWORD PTR [rax]
  4054c8:	lea    rsi,[rip+0x41ef1]        # 4473c0 <xmlStrEqual@plt+0x43480>
  4054cf:	mov    edi,0x3
  4054d4:	xor    eax,eax
  4054d6:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  4054db:	jmp    40549c <xmlStrEqual@plt+0x155c>
  4054dd:	nop    DWORD PTR [rax]
  4054e0:	endbr64 
  4054e4:	push   r14
  4054e6:	movabs rax,0xff000000ff
  4054f0:	push   r13
  4054f2:	push   r12
  4054f4:	push   rbp
  4054f5:	push   rbx
  4054f6:	mov    r13,QWORD PTR [rdi+0x8]
  4054fa:	mov    r14,QWORD PTR [rdi]
  4054fd:	and    r13,rax
  405500:	and    rax,QWORD PTR [rdi+0x10]
  405504:	movzx  r12d,BYTE PTR [rdi+0x18]
  405509:	mov    rbp,rax
  40550c:	test   r14,r14
  40550f:	je     405550 <xmlStrEqual@plt+0x1610>
  405511:	mov    edi,0x20
  405516:	call   434fe0 <xmlStrEqual@plt+0x310a0>
  40551b:	mov    rbx,rax
  40551e:	test   rax,rax
  405521:	je     405568 <xmlStrEqual@plt+0x1628>
  405523:	mov    rdi,r14
  405526:	call   403ed0 <strdup@plt>
  40552b:	mov    QWORD PTR [rbx],rax
  40552e:	mov    QWORD PTR [rbx+0x8],r13
  405532:	mov    QWORD PTR [rbx+0x10],rbp
  405536:	mov    BYTE PTR [rbx+0x18],r12b
  40553a:	mov    rax,rbx
  40553d:	pop    rbx
  40553e:	pop    rbp
  40553f:	pop    r12
  405541:	pop    r13
  405543:	pop    r14
  405545:	ret    
  405546:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405550:	lea    rsi,[rip+0x41e31]        # 447388 <xmlStrEqual@plt+0x43448>
  405557:	mov    edi,0x2
  40555c:	xor    eax,eax
  40555e:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  405563:	jmp    405511 <xmlStrEqual@plt+0x15d1>
  405565:	nop    DWORD PTR [rax]
  405568:	lea    rsi,[rip+0x41e51]        # 4473c0 <xmlStrEqual@plt+0x43480>
  40556f:	mov    edi,0x3
  405574:	xor    eax,eax
  405576:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  40557b:	jmp    40553a <xmlStrEqual@plt+0x15fa>
  40557d:	nop    DWORD PTR [rax]
  405580:	endbr64 
  405584:	sub    rsp,0x10
  405588:	mov    BYTE PTR [rip+0x67d31],0x0        # 46d2c0 <xmlStrEqual@plt+0x69380>
  40558f:	lea    rdx,[rip+0x430b9]        # 44864f <xmlStrEqual@plt+0x4470f>
  405596:	lea    rax,[rip+0x430ad]        # 44864a <xmlStrEqual@plt+0x4470a>
  40559d:	cmp    BYTE PTR [rdi+0x18],0x0
  4055a1:	cmove  rax,rdx
  4055a5:	lea    r8,[rip+0x41e5c]        # 447408 <xmlStrEqual@plt+0x434c8>
  4055ac:	push   rax
  4055ad:	mov    eax,DWORD PTR [rdi+0xc]
  4055b0:	mov    ecx,0x72
  4055b5:	push   rax
  4055b6:	mov    r9,QWORD PTR [rdi]
  4055b9:	mov    edx,0x1
  4055be:	mov    eax,DWORD PTR [rdi+0x8]
  4055c1:	mov    esi,0x72
  4055c6:	push   rax
  4055c7:	lea    rdi,[rip+0x67cf2]        # 46d2c0 <xmlStrEqual@plt+0x69380>
  4055ce:	xor    eax,eax
  4055d0:	call   403a40 <__snprintf_chk@plt>
  4055d5:	lea    rax,[rip+0x67ce4]        # 46d2c0 <xmlStrEqual@plt+0x69380>
  4055dc:	add    rsp,0x28
  4055e0:	ret    
  4055e1:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4055ec:	nop    DWORD PTR [rax+0x0]
  4055f0:	endbr64 
  4055f4:	push   r15
  4055f6:	push   r14
  4055f8:	push   r13
  4055fa:	push   r12
  4055fc:	push   rbp
  4055fd:	push   rbx
  4055fe:	sub    rsp,0x18
  405602:	test   rdi,rdi
  405605:	je     4056d8 <xmlStrEqual@plt+0x1798>
  40560b:	mov    r10,rdi
  40560e:	mov    r14d,edx
  405611:	mov    r13d,ecx
  405614:	mov    r12d,r8d
  405617:	mov    ebp,r9d
  40561a:	cmp    esi,0x4
  40561d:	je     405690 <xmlStrEqual@plt+0x1750>
  40561f:	mov    r15d,0xa
  405625:	cmp    esi,0x6
  405628:	jne    4056a0 <xmlStrEqual@plt+0x1760>
  40562a:	mov    edi,0x20
  40562f:	mov    QWORD PTR [rsp+0x8],r10
  405634:	call   434fe0 <xmlStrEqual@plt+0x310a0>
  405639:	test   rax,rax
  40563c:	mov    rbx,rax
  40563f:	mov    r10,QWORD PTR [rsp+0x8]
  405644:	je     4056c0 <xmlStrEqual@plt+0x1780>
  405646:	mov    rdi,r10
  405649:	call   403ed0 <strdup@plt>
  40564e:	movzx  r14d,r14b
  405652:	movzx  r13d,r13b
  405656:	movzx  r12d,r12b
  40565a:	movzx  ebp,bpl
  40565e:	mov    QWORD PTR [rbx],rax
  405661:	mov    DWORD PTR [rbx+0x8],r15d
  405665:	mov    DWORD PTR [rbx+0xc],r14d
  405669:	mov    DWORD PTR [rbx+0x10],r13d
  40566d:	mov    DWORD PTR [rbx+0x14],r12d
  405671:	mov    DWORD PTR [rbx+0x18],ebp
  405674:	add    rsp,0x18
  405678:	mov    rax,rbx
  40567b:	pop    rbx
  40567c:	pop    rbp
  40567d:	pop    r12
  40567f:	pop    r13
  405681:	pop    r14
  405683:	pop    r15
  405685:	ret    
  405686:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405690:	mov    r15d,0x2
  405696:	jmp    40562a <xmlStrEqual@plt+0x16ea>
  405698:	nop    DWORD PTR [rax+rax*1+0x0]
  4056a0:	mov    edx,esi
  4056a2:	mov    edi,0x2
  4056a7:	lea    rsi,[rip+0x41de2]        # 447490 <xmlStrEqual@plt+0x43550>
  4056ae:	xor    eax,eax
  4056b0:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  4056b5:	xor    ebx,ebx
  4056b7:	jmp    405674 <xmlStrEqual@plt+0x1734>
  4056b9:	nop    DWORD PTR [rax+0x0]
  4056c0:	lea    rsi,[rip+0x41e21]        # 4474e8 <xmlStrEqual@plt+0x435a8>
  4056c7:	mov    edi,0x3
  4056cc:	xor    eax,eax
  4056ce:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  4056d3:	jmp    405674 <xmlStrEqual@plt+0x1734>
  4056d5:	nop    DWORD PTR [rax]
  4056d8:	lea    rsi,[rip+0x41d69]        # 447448 <xmlStrEqual@plt+0x43508>
  4056df:	mov    edi,0x2
  4056e4:	xor    eax,eax
  4056e6:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  4056eb:	xor    ebx,ebx
  4056ed:	jmp    405674 <xmlStrEqual@plt+0x1734>
  4056ef:	nop
  4056f0:	endbr64 
  4056f4:	push   r14
  4056f6:	movabs rax,0xff000000ff
  405700:	push   r13
  405702:	push   r12
  405704:	push   rbp
  405705:	push   rbx
  405706:	mov    r13,QWORD PTR [rdi+0xc]
  40570a:	mov    r12d,DWORD PTR [rdi+0x8]
  40570e:	and    r13,rax
  405711:	and    rax,QWORD PTR [rdi+0x14]
  405715:	mov    rbp,rax
  405718:	mov    r14,QWORD PTR [rdi]
  40571b:	cmp    r12d,0x2
  40571f:	je     405768 <xmlStrEqual@plt+0x1828>
  405721:	test   r14,r14
  405724:	je     40576d <xmlStrEqual@plt+0x182d>
  405726:	mov    r12d,0xa
  40572c:	mov    edi,0x20
  405731:	call   434fe0 <xmlStrEqual@plt+0x310a0>
  405736:	mov    rbx,rax
  405739:	test   rax,rax
  40573c:	je     405788 <xmlStrEqual@plt+0x1848>
  40573e:	mov    rdi,r14
  405741:	call   403ed0 <strdup@plt>
  405746:	mov    QWORD PTR [rbx],rax
  405749:	mov    DWORD PTR [rbx+0x8],r12d
  40574d:	mov    QWORD PTR [rbx+0xc],r13
  405751:	mov    QWORD PTR [rbx+0x14],rbp
  405755:	mov    rax,rbx
  405758:	pop    rbx
  405759:	pop    rbp
  40575a:	pop    r12
  40575c:	pop    r13
  40575e:	pop    r14
  405760:	ret    
  405761:	nop    DWORD PTR [rax+0x0]
  405768:	test   r14,r14
  40576b:	jne    40572c <xmlStrEqual@plt+0x17ec>
  40576d:	lea    rsi,[rip+0x41cd4]        # 447448 <xmlStrEqual@plt+0x43508>
  405774:	mov    edi,0x2
  405779:	xor    eax,eax
  40577b:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  405780:	xor    ebx,ebx
  405782:	jmp    405755 <xmlStrEqual@plt+0x1815>
  405784:	nop    DWORD PTR [rax+0x0]
  405788:	lea    rsi,[rip+0x41d59]        # 4474e8 <xmlStrEqual@plt+0x435a8>
  40578f:	mov    edi,0x3
  405794:	xor    eax,eax
  405796:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  40579b:	jmp    405755 <xmlStrEqual@plt+0x1815>
  40579d:	nop    DWORD PTR [rax]
  4057a0:	endbr64 
  4057a4:	push   rbx
  4057a5:	mov    BYTE PTR [rip+0x67a94],0x0        # 46d240 <xmlStrEqual@plt+0x69300>
  4057ac:	lea    rbx,[rip+0x67a8d]        # 46d240 <xmlStrEqual@plt+0x69300>
  4057b3:	sub    rsp,0x8
  4057b7:	mov    eax,DWORD PTR [rdi+0x10]
  4057ba:	mov    r9,QWORD PTR [rdi]
  4057bd:	push   rax
  4057be:	lea    r8,[rip+0x41d7b]        # 447540 <xmlStrEqual@plt+0x43600>
  4057c5:	mov    ecx,0x64
  4057ca:	mov    eax,DWORD PTR [rdi+0xc]
  4057cd:	mov    edx,0x1
  4057d2:	push   rax
  4057d3:	mov    esi,0x64
  4057d8:	mov    eax,DWORD PTR [rdi+0x8]
  4057db:	mov    rdi,rbx
  4057de:	push   rax
  4057df:	xor    eax,eax
  4057e1:	call   403a40 <__snprintf_chk@plt>
  4057e6:	add    rsp,0x20
  4057ea:	mov    rax,rbx
  4057ed:	pop    rbx
  4057ee:	ret    
  4057ef:	nop
  4057f0:	endbr64 
  4057f4:	push   r14
  4057f6:	push   r13
  4057f8:	push   r12
  4057fa:	mov    r12d,esi
  4057fd:	push   rbp
  4057fe:	mov    rbp,rdi
  405801:	push   rbx
  405802:	sub    rsp,0x7e0
  405809:	mov    rax,QWORD PTR fs:0x28
  405812:	mov    QWORD PTR [rsp+0x7d8],rax
  40581a:	xor    eax,eax
  40581c:	cmp    esi,0x4
  40581f:	jle    405860 <xmlStrEqual@plt+0x1920>
  405821:	mov    rax,0x469e3c
  405828:	mov    eax,DWORD PTR [rax]
  40582a:	add    eax,0x4
  40582d:	cmp    esi,eax
  40582f:	jle    405860 <xmlStrEqual@plt+0x1920>
  405831:	mov    rax,QWORD PTR [rsp+0x7d8]
  405839:	xor    rax,QWORD PTR fs:0x28
  405842:	jne    4059ea <xmlStrEqual@plt+0x1aaa>
  405848:	add    rsp,0x7e0
  40584f:	pop    rbx
  405850:	pop    rbp
  405851:	pop    r12
  405853:	pop    r13
  405855:	pop    r14
  405857:	ret    
  405858:	nop    DWORD PTR [rax+rax*1+0x0]
  405860:	mov    eax,DWORD PTR [rbp+0x8]
  405863:	mov    rbx,rsp
  405866:	sub    rsp,0x8
  40586a:	push   rax
  40586b:	mov    r9,QWORD PTR [rbp+0x0]
  40586f:	mov    ecx,0x7d0
  405874:	mov    edx,0x1
  405879:	lea    r8,[rip+0x42dd5]        # 448655 <xmlStrEqual@plt+0x44715>
  405880:	mov    esi,0x7d0
  405885:	mov    rdi,rbx
  405888:	xor    eax,eax
  40588a:	call   403a40 <__snprintf_chk@plt>
  40588f:	mov    rax,QWORD PTR [rbp+0x10]
  405893:	pop    rdx
  405894:	mov    r14,QWORD PTR [rax+0x8]
  405898:	pop    rcx
  405899:	cmp    rax,r14
  40589c:	je     405926 <xmlStrEqual@plt+0x19e6>
  4058a2:	mov    r13d,0x7d0
  4058a8:	nop    DWORD PTR [rax+rax*1+0x0]
  4058b0:	mov    rdi,QWORD PTR [r14+0x10]
  4058b4:	call   405580 <xmlStrEqual@plt+0x1640>
  4058b9:	mov    r9,rax
  4058bc:	mov    rdi,rbx
  4058bf:	mov    ecx,DWORD PTR [rdi]
  4058c1:	add    rdi,0x4
  4058c5:	lea    edx,[rcx-0x1010101]
  4058cb:	andn   edx,ecx,edx
  4058d0:	and    edx,0x80808080
  4058d6:	je     4058bf <xmlStrEqual@plt+0x197f>
  4058d8:	mov    ecx,edx
  4058da:	shr    ecx,0x10
  4058dd:	test   edx,0x8080
  4058e3:	cmove  edx,ecx
  4058e6:	lea    rcx,[rdi+0x2]
  4058ea:	cmove  rdi,rcx
  4058ee:	mov    eax,edx
  4058f0:	add    al,dl
  4058f2:	sbb    rdi,0x3
  4058f6:	sub    rdi,rbx
  4058f9:	mov    rsi,r13
  4058fc:	sub    rsi,rdi
  4058ff:	lea    r8,[rip+0x42d61]        # 448667 <xmlStrEqual@plt+0x44727>
  405906:	add    rdi,rbx
  405909:	mov    rcx,0xffffffffffffffff
  405910:	mov    edx,0x1
  405915:	xor    eax,eax
  405917:	call   403a40 <__snprintf_chk@plt>
  40591c:	mov    r14,QWORD PTR [r14+0x8]
  405920:	cmp    QWORD PTR [rbp+0x10],r14
  405924:	jne    4058b0 <xmlStrEqual@plt+0x1970>
  405926:	mov    rax,QWORD PTR [rbp+0x18]
  40592a:	mov    r14,QWORD PTR [rax+0x8]
  40592e:	cmp    rax,r14
  405931:	je     4059b6 <xmlStrEqual@plt+0x1a76>
  405937:	mov    r13d,0x7d0
  40593d:	nop    DWORD PTR [rax]
  405940:	mov    rdi,QWORD PTR [r14+0x10]
  405944:	call   4057a0 <xmlStrEqual@plt+0x1860>
  405949:	mov    r9,rax
  40594c:	mov    rdi,rbx
  40594f:	mov    ecx,DWORD PTR [rdi]
  405951:	add    rdi,0x4
  405955:	lea    edx,[rcx-0x1010101]
  40595b:	andn   edx,ecx,edx
  405960:	and    edx,0x80808080
  405966:	je     40594f <xmlStrEqual@plt+0x1a0f>
  405968:	mov    ecx,edx
  40596a:	shr    ecx,0x10
  40596d:	test   edx,0x8080
  405973:	cmove  edx,ecx
  405976:	lea    rcx,[rdi+0x2]
  40597a:	cmove  rdi,rcx
  40597e:	mov    eax,edx
  405980:	add    al,dl
  405982:	sbb    rdi,0x3
  405986:	sub    rdi,rbx
  405989:	mov    rsi,r13
  40598c:	sub    rsi,rdi
  40598f:	lea    r8,[rip+0x42cd1]        # 448667 <xmlStrEqual@plt+0x44727>
  405996:	add    rdi,rbx
  405999:	mov    rcx,0xffffffffffffffff
  4059a0:	mov    edx,0x1
  4059a5:	xor    eax,eax
  4059a7:	call   403a40 <__snprintf_chk@plt>
  4059ac:	mov    r14,QWORD PTR [r14+0x8]
  4059b0:	cmp    QWORD PTR [rbp+0x18],r14
  4059b4:	jne    405940 <xmlStrEqual@plt+0x1a00>
  4059b6:	cmp    r12d,0x4
  4059ba:	jle    4059d1 <xmlStrEqual@plt+0x1a91>
  4059bc:	mov    rax,0x469e3c
  4059c3:	mov    eax,DWORD PTR [rax]
  4059c5:	add    eax,0x4
  4059c8:	cmp    r12d,eax
  4059cb:	jg     405831 <xmlStrEqual@plt+0x18f1>
  4059d1:	mov    rdx,rbx
  4059d4:	lea    rsi,[rip+0x4bae0]        # 4514bb <xmlStrEqual@plt+0x4d57b>
  4059db:	mov    edi,r12d
  4059de:	xor    eax,eax
  4059e0:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  4059e5:	jmp    405831 <xmlStrEqual@plt+0x18f1>
  4059ea:	call   403c00 <__stack_chk_fail@plt>
  4059ef:	nop
  4059f0:	endbr64 
  4059f4:	push   r13
  4059f6:	mov    r13,rdi
  4059f9:	mov    edi,0x18
  4059fe:	push   r12
  405a00:	mov    r12,rsi
  405a03:	push   rbp
  405a04:	mov    ebp,edx
  405a06:	push   rbx
  405a07:	sub    rsp,0x8
  405a0b:	call   434fe0 <xmlStrEqual@plt+0x310a0>
  405a10:	mov    rbx,rax
  405a13:	test   rax,rax
  405a16:	je     405a2a <xmlStrEqual@plt+0x1aea>
  405a18:	mov    QWORD PTR [rax],r13
  405a1b:	mov    rdi,r12
  405a1e:	call   403ed0 <strdup@plt>
  405a23:	mov    QWORD PTR [rbx+0x8],rax
  405a27:	mov    DWORD PTR [rbx+0x10],ebp
  405a2a:	add    rsp,0x8
  405a2e:	mov    rax,rbx
  405a31:	pop    rbx
  405a32:	pop    rbp
  405a33:	pop    r12
  405a35:	pop    r13
  405a37:	ret    
  405a38:	nop    DWORD PTR [rax+rax*1+0x0]
  405a40:	endbr64 
  405a44:	push   rbx
  405a45:	mov    rbx,rdi
  405a48:	mov    rdi,QWORD PTR [rdi+0x8]
  405a4c:	call   4037b0 <free@plt>
  405a51:	mov    rdi,rbx
  405a54:	pop    rbx
  405a55:	jmp    4037b0 <free@plt>
  405a5a:	nop    WORD PTR [rax+rax*1+0x0]
  405a60:	endbr64 
  405a64:	mov    rdx,QWORD PTR [rdi+0x8]
  405a68:	cmp    rdi,rdx
  405a6b:	je     405a92 <xmlStrEqual@plt+0x1b52>
  405a6d:	mov    rax,QWORD PTR [rdx+0x10]
  405a71:	cmp    rsi,QWORD PTR [rax]
  405a74:	jne    405a89 <xmlStrEqual@plt+0x1b49>
  405a76:	jmp    405a95 <xmlStrEqual@plt+0x1b55>
  405a78:	nop    DWORD PTR [rax+rax*1+0x0]
  405a80:	mov    rax,QWORD PTR [rdx+0x10]
  405a84:	cmp    QWORD PTR [rax],rsi
  405a87:	je     405a94 <xmlStrEqual@plt+0x1b54>
  405a89:	mov    rdx,QWORD PTR [rdx+0x8]
  405a8d:	cmp    rdi,rdx
  405a90:	jne    405a80 <xmlStrEqual@plt+0x1b40>
  405a92:	xor    eax,eax
  405a94:	ret    
  405a95:	ret    
  405a96:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405aa0:	endbr64 
  405aa4:	push   r12
  405aa6:	mov    r12,rdx
  405aa9:	push   rbp
  405aaa:	mov    rbp,rsi
  405aad:	push   rbx
  405aae:	mov    rbx,rdi
  405ab1:	mov    edx,DWORD PTR [rdi]
  405ab3:	test   edx,edx
  405ab5:	js     405b40 <xmlStrEqual@plt+0x1c00>
  405abb:	mov    rax,0x469e3c
  405ac2:	mov    ecx,DWORD PTR [rax]
  405ac4:	je     405be2 <xmlStrEqual@plt+0x1ca2>
  405aca:	test   ecx,ecx
  405acc:	jg     405b20 <xmlStrEqual@plt+0x1be0>
  405ace:	mov    eax,DWORD PTR [rbp+0x0]
  405ad1:	cmp    eax,0x5
  405ad4:	jg     405b70 <xmlStrEqual@plt+0x1c30>
  405ada:	test   eax,eax
  405adc:	js     405ba0 <xmlStrEqual@plt+0x1c60>
  405ae2:	test   eax,eax
  405ae4:	jle    405b39 <xmlStrEqual@plt+0x1bf9>
  405ae6:	mov    eax,DWORD PTR [r12]
  405aea:	test   eax,eax
  405aec:	jle    405bd0 <xmlStrEqual@plt+0x1c90>
  405af2:	mov    ecx,DWORD PTR [rbx]
  405af4:	cmp    eax,ecx
  405af6:	jle    405b39 <xmlStrEqual@plt+0x1bf9>
  405af8:	mov    DWORD PTR [r12],ecx
  405afc:	pop    rbx
  405afd:	pop    rbp
  405afe:	mov    edx,0x1
  405b03:	lea    rsi,[rip+0x41b06]        # 447610 <xmlStrEqual@plt+0x436d0>
  405b0a:	mov    edi,0x3
  405b0f:	xor    eax,eax
  405b11:	pop    r12
  405b13:	jmp    430e20 <xmlStrEqual@plt+0x2cee0>
  405b18:	nop    DWORD PTR [rax+rax*1+0x0]
  405b20:	lea    rsi,[rip+0x42b46]        # 44866d <xmlStrEqual@plt+0x4472d>
  405b27:	mov    edi,0x5
  405b2c:	xor    eax,eax
  405b2e:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  405b33:	mov    eax,DWORD PTR [rbx]
  405b35:	test   eax,eax
  405b37:	jne    405ace <xmlStrEqual@plt+0x1b8e>
  405b39:	pop    rbx
  405b3a:	pop    rbp
  405b3b:	pop    r12
  405b3d:	ret    
  405b3e:	xchg   ax,ax
  405b40:	mov    DWORD PTR [rdi],0x0
  405b46:	mov    rax,0x469e3c
  405b4d:	mov    edx,DWORD PTR [rax]
  405b4f:	test   edx,edx
  405b51:	jle    405b39 <xmlStrEqual@plt+0x1bf9>
  405b53:	lea    rsi,[rip+0x42b2d]        # 448687 <xmlStrEqual@plt+0x44747>
  405b5a:	mov    edi,0x5
  405b5f:	xor    eax,eax
  405b61:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  405b66:	jmp    405b33 <xmlStrEqual@plt+0x1bf3>
  405b68:	nop    DWORD PTR [rax+rax*1+0x0]
  405b70:	mov    DWORD PTR [rbp+0x0],0x5
  405b77:	xor    eax,eax
  405b79:	mov    ecx,0x5
  405b7e:	mov    edx,0x5
  405b83:	lea    rsi,[rip+0x419f6]        # 447580 <xmlStrEqual@plt+0x43640>
  405b8a:	mov    edi,0x3
  405b8f:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  405b94:	mov    eax,DWORD PTR [rbp+0x0]
  405b97:	jmp    405ae2 <xmlStrEqual@plt+0x1ba2>
  405b9c:	nop    DWORD PTR [rax+0x0]
  405ba0:	mov    DWORD PTR [rbp+0x0],0x0
  405ba7:	xor    eax,eax
  405ba9:	mov    edx,0x5
  405bae:	lea    rsi,[rip+0x41a13]        # 4475c8 <xmlStrEqual@plt+0x43688>
  405bb5:	mov    edi,0x3
  405bba:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  405bbf:	mov    eax,DWORD PTR [rbp+0x0]
  405bc2:	jmp    405ae2 <xmlStrEqual@plt+0x1ba2>
  405bc7:	nop    WORD PTR [rax+rax*1+0x0]
  405bd0:	mov    DWORD PTR [r12],0x1
  405bd8:	mov    ecx,0x1
  405bdd:	jmp    405afc <xmlStrEqual@plt+0x1bbc>
  405be2:	cmp    DWORD PTR [rax],0x0
  405be5:	jle    405b33 <xmlStrEqual@plt+0x1bf3>
  405beb:	jmp    405b53 <xmlStrEqual@plt+0x1c13>
  405bf0:	endbr64 
  405bf4:	lea    eax,[rdi+0x1]
  405bf7:	sub    rsp,0x8
  405bfb:	cmp    eax,0x100
  405c00:	ja     405c18 <xmlStrEqual@plt+0x1cd8>
  405c02:	mov    eax,0x1
  405c07:	cmp    esi,0xff
  405c0d:	ja     405c40 <xmlStrEqual@plt+0x1d00>
  405c0f:	add    rsp,0x8
  405c13:	ret    
  405c14:	nop    DWORD PTR [rax+0x0]
  405c18:	mov    edx,edi
  405c1a:	xor    eax,eax
  405c1c:	mov    r8d,0xfe
  405c22:	xor    ecx,ecx
  405c24:	lea    rsi,[rip+0x41a45]        # 447670 <xmlStrEqual@plt+0x43730>
  405c2b:	mov    edi,0x2
  405c30:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  405c35:	xor    eax,eax
  405c37:	add    rsp,0x8
  405c3b:	ret    
  405c3c:	nop    DWORD PTR [rax+0x0]
  405c40:	mov    edx,edi
  405c42:	xor    eax,eax
  405c44:	mov    r8d,0xff
  405c4a:	xor    ecx,ecx
  405c4c:	lea    rsi,[rip+0x41a55]        # 4476a8 <xmlStrEqual@plt+0x43768>
  405c53:	mov    edi,0x2
  405c58:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  405c5d:	xor    eax,eax
  405c5f:	add    rsp,0x8
  405c63:	ret    
  405c64:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  405c6f:	nop
  405c70:	endbr64 
  405c74:	push   r15
  405c76:	mov    r15d,r9d
  405c79:	push   r14
  405c7b:	mov    r14d,r8d
  405c7e:	push   r13
  405c80:	mov    r13d,ecx
  405c83:	push   r12
  405c85:	mov    r12,rdi
  405c88:	mov    rdi,rdx
  405c8b:	push   rbp
  405c8c:	mov    rbp,rsi
  405c8f:	push   rbx
  405c90:	mov    rbx,rdx
  405c93:	sub    rsp,0x18
  405c97:	call   434a40 <xmlStrEqual@plt+0x30b00>
  405c9c:	mov    rsi,QWORD PTR [rbp+0x8]
  405ca0:	mov    rdi,rbx
  405ca3:	mov    QWORD PTR [rsp+0x8],rax
  405ca8:	call   42ded0 <xmlStrEqual@plt+0x29f90>
  405cad:	test   al,al
  405caf:	je     405d80 <xmlStrEqual@plt+0x1e40>
  405cb5:	mov    ebx,0x1
  405cba:	test   r14d,r14d
  405cbd:	js     405d1a <xmlStrEqual@plt+0x1dda>
  405cbf:	movzx  esi,BYTE PTR [r12+0xc]
  405cc5:	cmp    r13d,0x2
  405cc9:	je     405d30 <xmlStrEqual@plt+0x1df0>
  405ccb:	mov    rdi,QWORD PTR [r12+0x18]
  405cd0:	push   0x0
  405cd2:	mov    edx,0x1
  405cd7:	movzx  r9d,r15b
  405cdb:	push   0xff
  405ce0:	movzx  r8d,r14b
  405ce4:	mov    ecx,0x1
  405ce9:	call   42a830 <xmlStrEqual@plt+0x268f0>
  405cee:	mov    r12,rax
  405cf1:	pop    rax
  405cf2:	pop    rdx
  405cf3:	test   r12,r12
  405cf6:	je     405d18 <xmlStrEqual@plt+0x1dd8>
  405cf8:	mov    rdi,QWORD PTR [rsp+0x8]
  405cfd:	mov    rsi,r12
  405d00:	call   42b7b0 <xmlStrEqual@plt+0x27870>
  405d05:	mov    ebx,eax
  405d07:	cmp    eax,0x1
  405d0a:	je     405d98 <xmlStrEqual@plt+0x1e58>
  405d10:	mov    rdi,r12
  405d13:	call   42a7f0 <xmlStrEqual@plt+0x268b0>
  405d18:	xor    ebx,ebx
  405d1a:	add    rsp,0x18
  405d1e:	mov    eax,ebx
  405d20:	pop    rbx
  405d21:	pop    rbp
  405d22:	pop    r12
  405d24:	pop    r13
  405d26:	pop    r14
  405d28:	pop    r15
  405d2a:	ret    
  405d2b:	nop    DWORD PTR [rax+rax*1+0x0]
  405d30:	mov    rdi,QWORD PTR [r12+0x10]
  405d35:	push   0x0
  405d37:	mov    ecx,0x1
  405d3c:	movzx  r9d,r15b
  405d40:	push   0xff
  405d45:	movzx  r8d,r14b
  405d49:	mov    edx,0x1
  405d4e:	call   42a830 <xmlStrEqual@plt+0x268f0>
  405d53:	pop    rcx
  405d54:	mov    r12,rax
  405d57:	pop    rsi
  405d58:	test   rax,rax
  405d5b:	je     405d18 <xmlStrEqual@plt+0x1dd8>
  405d5d:	mov    rdi,QWORD PTR [rsp+0x8]
  405d62:	mov    rsi,rax
  405d65:	call   42b7b0 <xmlStrEqual@plt+0x27870>
  405d6a:	mov    ebx,eax
  405d6c:	cmp    eax,0x1
  405d6f:	jne    405d10 <xmlStrEqual@plt+0x1dd0>
  405d71:	mov    rsi,QWORD PTR [rbp+0x10]
  405d75:	mov    rdi,r12
  405d78:	call   42dcf0 <xmlStrEqual@plt+0x29db0>
  405d7d:	jmp    405d1a <xmlStrEqual@plt+0x1dda>
  405d7f:	nop
  405d80:	mov    rsi,QWORD PTR [rbp+0x8]
  405d84:	mov    rdi,rbx
  405d87:	call   42dcf0 <xmlStrEqual@plt+0x29db0>
  405d8c:	jmp    405cb5 <xmlStrEqual@plt+0x1d75>
  405d91:	nop    DWORD PTR [rax+0x0]
  405d98:	mov    rsi,QWORD PTR [rbp+0x18]
  405d9c:	mov    rdi,r12
  405d9f:	call   42dcf0 <xmlStrEqual@plt+0x29db0>
  405da4:	jmp    405d1a <xmlStrEqual@plt+0x1dda>
  405da9:	nop    DWORD PTR [rax+0x0]
  405db0:	endbr64 
  405db4:	push   r15
  405db6:	push   r14
  405db8:	push   r13
  405dba:	push   r12
  405dbc:	push   rbp
  405dbd:	push   rbx
  405dbe:	sub    rsp,0x18
  405dc2:	test   rsi,rsi
  405dc5:	je     405f20 <xmlStrEqual@plt+0x1fe0>
  405dcb:	mov    r15,rdi
  405dce:	mov    rbp,rsi
  405dd1:	mov    edi,ecx
  405dd3:	mov    esi,r8d
  405dd6:	mov    r14d,edx
  405dd9:	mov    r12d,ecx
  405ddc:	mov    r13d,r8d
  405ddf:	call   405bf0 <xmlStrEqual@plt+0x1cb0>
  405de4:	mov    ebx,eax
  405de6:	cmp    eax,0x1
  405de9:	jne    405eb0 <xmlStrEqual@plt+0x1f70>
  405def:	test   r12d,r12d
  405df2:	js     405f68 <xmlStrEqual@plt+0x2028>
  405df8:	mov    eax,r14d
  405dfb:	and    eax,0xfffffffd
  405dfe:	cmp    eax,0x4
  405e01:	jne    405e98 <xmlStrEqual@plt+0x1f58>
  405e07:	xor    ebx,ebx
  405e09:	mov    rdi,rbp
  405e0c:	cmp    r14d,0x4
  405e10:	setne  bl
  405e13:	call   43ef10 <xmlStrEqual@plt+0x3afd0>
  405e18:	lea    ebx,[rbx*8+0x2]
  405e1f:	mov    r14,rax
  405e22:	test   rax,rax
  405e25:	je     405ee8 <xmlStrEqual@plt+0x1fa8>
  405e2b:	mov    esi,ebx
  405e2d:	mov    rdi,r14
  405e30:	call   43f490 <xmlStrEqual@plt+0x3b550>
  405e35:	cmp    eax,0x1
  405e38:	jne    405ec8 <xmlStrEqual@plt+0x1f88>
  405e3e:	mov    rdi,QWORD PTR [r15+0x50]
  405e42:	mov    rsi,rbp
  405e45:	call   43aca0 <xmlStrEqual@plt+0x36d60>
  405e4a:	mov    r10,rax
  405e4d:	test   rax,rax
  405e50:	je     405fb8 <xmlStrEqual@plt+0x2078>
  405e56:	mov    rsi,QWORD PTR [r15+0x68]
  405e5a:	cmp    QWORD PTR [rsi+0x8],0x0
  405e5f:	je     405f40 <xmlStrEqual@plt+0x2000>
  405e65:	mov    ecx,ebx
  405e67:	mov    rdx,rsi
  405e6a:	mov    r9d,r13d
  405e6d:	mov    r8d,r12d
  405e70:	mov    rsi,r10
  405e73:	mov    rdi,r14
  405e76:	call   405c70 <xmlStrEqual@plt+0x1d30>
  405e7b:	mov    ebx,eax
  405e7d:	cmp    eax,0x1
  405e80:	jne    405eb0 <xmlStrEqual@plt+0x1f70>
  405e82:	mov    rsi,QWORD PTR [r15+0x68]
  405e86:	mov    rdi,QWORD PTR [r15+0x40]
  405e8a:	mov    rax,QWORD PTR [r15+0x38]
  405e8e:	call   QWORD PTR [rax+0x30]
  405e91:	jmp    405eb2 <xmlStrEqual@plt+0x1f72>
  405e93:	nop    DWORD PTR [rax+rax*1+0x0]
  405e98:	lea    rsi,[rip+0x418e9]        # 447788 <xmlStrEqual@plt+0x43848>
  405e9f:	mov    edi,0x2
  405ea4:	xor    eax,eax
  405ea6:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  405eab:	nop    DWORD PTR [rax+rax*1+0x0]
  405eb0:	xor    ebx,ebx
  405eb2:	add    rsp,0x18
  405eb6:	mov    eax,ebx
  405eb8:	pop    rbx
  405eb9:	pop    rbp
  405eba:	pop    r12
  405ebc:	pop    r13
  405ebe:	pop    r14
  405ec0:	pop    r15
  405ec2:	ret    
  405ec3:	nop    DWORD PTR [rax+rax*1+0x0]
  405ec8:	mov    rdx,rbp
  405ecb:	lea    rsi,[rip+0x41946]        # 447818 <xmlStrEqual@plt+0x438d8>
  405ed2:	mov    edi,0x3
  405ed7:	xor    eax,eax
  405ed9:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  405ede:	xor    ebx,ebx
  405ee0:	jmp    405eb2 <xmlStrEqual@plt+0x1f72>
  405ee2:	nop    WORD PTR [rax+rax*1+0x0]
  405ee8:	mov    rdi,rbp
  405eeb:	call   43ee00 <xmlStrEqual@plt+0x3aec0>
  405ef0:	mov    r14,rax
  405ef3:	test   rax,rax
  405ef6:	jne    405e2b <xmlStrEqual@plt+0x1eeb>
  405efc:	mov    rdx,rbp
  405eff:	lea    rsi,[rip+0x418e2]        # 4477e8 <xmlStrEqual@plt+0x438a8>
  405f06:	mov    edi,0x3
  405f0b:	xor    eax,eax
  405f0d:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  405f12:	xor    ebx,ebx
  405f14:	jmp    405eb2 <xmlStrEqual@plt+0x1f72>
  405f16:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405f20:	lea    rsi,[rip+0x417b9]        # 4476e0 <xmlStrEqual@plt+0x437a0>
  405f27:	mov    edi,0x2
  405f2c:	xor    eax,eax
  405f2e:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  405f33:	xor    ebx,ebx
  405f35:	jmp    405eb2 <xmlStrEqual@plt+0x1f72>
  405f3a:	nop    WORD PTR [rax+rax*1+0x0]
  405f40:	mov    rdi,QWORD PTR [r15+0x40]
  405f44:	mov    rax,QWORD PTR [r15+0x38]
  405f48:	xor    edx,edx
  405f4a:	mov    QWORD PTR [rsp+0x8],r10
  405f4f:	call   QWORD PTR [rax+0x10]
  405f52:	cmp    eax,0x1
  405f55:	jne    405f90 <xmlStrEqual@plt+0x2050>
  405f57:	mov    rsi,QWORD PTR [r15+0x68]
  405f5b:	mov    r10,QWORD PTR [rsp+0x8]
  405f60:	jmp    405e65 <xmlStrEqual@plt+0x1f25>
  405f65:	nop    DWORD PTR [rax]
  405f68:	mov    ecx,r14d
  405f6b:	mov    rdx,rbp
  405f6e:	lea    rsi,[rip+0x417ab]        # 447720 <xmlStrEqual@plt+0x437e0>
  405f75:	mov    edi,0x2
  405f7a:	xor    eax,eax
  405f7c:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  405f81:	jmp    405eb2 <xmlStrEqual@plt+0x1f72>
  405f86:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405f90:	lea    rsi,[rip+0x418c1]        # 447858 <xmlStrEqual@plt+0x43918>
  405f97:	mov    edi,0x2
  405f9c:	xor    eax,eax
  405f9e:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  405fa3:	mov    rdi,QWORD PTR [r15+0x68]
  405fa7:	xor    ebx,ebx
  405fa9:	call   434b90 <xmlStrEqual@plt+0x30c50>
  405fae:	jmp    405eb2 <xmlStrEqual@plt+0x1f72>
  405fb3:	nop    DWORD PTR [rax+rax*1+0x0]
  405fb8:	mov    rdi,rbp
  405fbb:	call   42efa0 <xmlStrEqual@plt+0x2b060>
  405fc0:	mov    rdi,rbp
  405fc3:	mov    QWORD PTR [rsp+0x8],rax
  405fc8:	call   403ed0 <strdup@plt>
  405fcd:	mov    r10,QWORD PTR [rsp+0x8]
  405fd2:	mov    rdi,QWORD PTR [r15+0x50]
  405fd6:	mov    rdx,r10
  405fd9:	mov    rsi,rax
  405fdc:	call   43a0e0 <xmlStrEqual@plt+0x361a0>
  405fe1:	mov    r10,QWORD PTR [rsp+0x8]
  405fe6:	jmp    405e56 <xmlStrEqual@plt+0x1f16>
  405feb:	nop    DWORD PTR [rax+rax*1+0x0]
  405ff0:	endbr64 
  405ff4:	push   r13
  405ff6:	mov    r13,rsi
  405ff9:	push   r12
  405ffb:	mov    r12d,edx
  405ffe:	push   rbp
  405fff:	mov    rbp,rcx
  406002:	push   rbx
  406003:	sub    rsp,0x8
  406007:	cmp    edx,0xffffff
  40600d:	ja     406080 <xmlStrEqual@plt+0x2140>
  40600f:	xor    eax,eax
  406011:	call   424be0 <xmlStrEqual@plt+0x20ca0>
  406016:	mov    rsi,rax
  406019:	mov    rdi,r13
  40601c:	mov    rbx,rax
  40601f:	call   425bf0 <xmlStrEqual@plt+0x21cb0>
  406024:	cmp    eax,0x1
  406027:	je     40604f <xmlStrEqual@plt+0x210f>
  406029:	mov    rdi,rbx
  40602c:	call   424bf0 <xmlStrEqual@plt+0x20cb0>
  406031:	mov    rdi,rbp
  406034:	mov    rsi,r13
  406037:	call   43aca0 <xmlStrEqual@plt+0x36d60>
  40603c:	mov    rbp,rax
  40603f:	test   rax,rax
  406042:	je     4060a0 <xmlStrEqual@plt+0x2160>
  406044:	mov    rdi,rax
  406047:	call   425060 <xmlStrEqual@plt+0x21120>
  40604c:	mov    rbx,rax
  40604f:	mov    rdi,rbx
  406052:	call   437a50 <xmlStrEqual@plt+0x33b10>
  406057:	mov    rdi,rbx
  40605a:	mov    esi,r12d
  40605d:	call   416ef0 <xmlStrEqual@plt+0x12fb0>
  406062:	mov    rdi,rbx
  406065:	mov    rbp,rax
  406068:	call   424bf0 <xmlStrEqual@plt+0x20cb0>
  40606d:	add    rsp,0x8
  406071:	pop    rbx
  406072:	mov    rax,rbp
  406075:	pop    rbp
  406076:	pop    r12
  406078:	pop    r13
  40607a:	ret    
  40607b:	nop    DWORD PTR [rax+rax*1+0x0]
  406080:	mov    ecx,0xffffff
  406085:	lea    rsi,[rip+0x4180c]        # 447898 <xmlStrEqual@plt+0x43958>
  40608c:	mov    edi,0x2
  406091:	xor    eax,eax
  406093:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  406098:	xor    r12d,r12d
  40609b:	jmp    40600f <xmlStrEqual@plt+0x20cf>
  4060a0:	mov    rdx,r13
  4060a3:	lea    rsi,[rip+0x41836]        # 4478e0 <xmlStrEqual@plt+0x439a0>
  4060aa:	mov    edi,0x2
  4060af:	xor    eax,eax
  4060b1:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  4060b6:	jmp    40606d <xmlStrEqual@plt+0x212d>
  4060b8:	nop    DWORD PTR [rax+rax*1+0x0]
  4060c0:	endbr64 
  4060c4:	push   r14
  4060c6:	push   r13
  4060c8:	mov    r13,rdi
  4060cb:	push   r12
  4060cd:	push   rbp
  4060ce:	push   rbx
  4060cf:	mov    ebx,esi
  4060d1:	sub    rsp,0x50
  4060d5:	mov    rdi,0x424bf0
  4060dc:	mov    rax,QWORD PTR fs:0x28
  4060e5:	mov    QWORD PTR [rsp+0x48],rax
  4060ea:	xor    eax,eax
  4060ec:	mov    QWORD PTR [rsp+0x8],0x0
  4060f5:	call   42dca0 <xmlStrEqual@plt+0x29d60>
  4060fa:	lea    rdx,[rsp+0x10]
  4060ff:	vpxor  xmm0,xmm0,xmm0
  406103:	vmovups XMMWORD PTR [rsp+0x18],xmm0
  406109:	mov    QWORD PTR [rdx+0x28],0x0
  406111:	xor    esi,esi
  406113:	vmovups XMMWORD PTR [rdx+0x18],xmm0
  406118:	lea    rcx,[rsp+0x8]
  40611d:	mov    rdi,r13
  406120:	mov    r12,rax
  406123:	mov    DWORD PTR [rsp+0x14],ebx
  406127:	mov    DWORD PTR [rsp+0x10],0x1
  40612f:	mov    DWORD PTR [rsp+0x1c],0x11
  406137:	call   403cb0 <getaddrinfo@plt>
  40613c:	test   eax,eax
  40613e:	jne    406240 <xmlStrEqual@plt+0x2300>
  406144:	mov    rbx,QWORD PTR [rsp+0x8]
  406149:	test   rbx,rbx
  40614c:	je     4061f5 <xmlStrEqual@plt+0x22b5>
  406152:	lea    r14,[rip+0x417f7]        # 447950 <xmlStrEqual@plt+0x43a10>
  406159:	jmp    4061b5 <xmlStrEqual@plt+0x2275>
  40615b:	nop    DWORD PTR [rax+rax*1+0x0]
  406160:	cmp    ax,0xa
  406164:	jne    406177 <xmlStrEqual@plt+0x2237>
  406166:	add    rsi,0x8
  40616a:	mov    edx,0xa
  40616f:	mov    rdi,rbp
  406172:	call   425e60 <xmlStrEqual@plt+0x21f20>
  406177:	mov    rax,0x469e3c
  40617e:	mov    eax,DWORD PTR [rax]
  406180:	test   eax,eax
  406182:	jle    4061a1 <xmlStrEqual@plt+0x2261>
  406184:	mov    rdi,rbp
  406187:	call   424d40 <xmlStrEqual@plt+0x20e00>
  40618c:	mov    rcx,rax
  40618f:	mov    rdx,r13
  406192:	mov    rsi,r14
  406195:	mov    edi,0x5
  40619a:	xor    eax,eax
  40619c:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  4061a1:	mov    rsi,r12
  4061a4:	mov    rdi,rbp
  4061a7:	call   42dcf0 <xmlStrEqual@plt+0x29db0>
  4061ac:	mov    rbx,QWORD PTR [rbx+0x28]
  4061b0:	test   rbx,rbx
  4061b3:	je     4061f0 <xmlStrEqual@plt+0x22b0>
  4061b5:	mov    edi,0x1
  4061ba:	call   424b10 <xmlStrEqual@plt+0x20bd0>
  4061bf:	mov    rbp,rax
  4061c2:	test   rax,rax
  4061c5:	je     406220 <xmlStrEqual@plt+0x22e0>
  4061c7:	mov    rsi,QWORD PTR [rbx+0x18]
  4061cb:	movzx  eax,WORD PTR [rsi]
  4061ce:	cmp    ax,0x2
  4061d2:	jne    406160 <xmlStrEqual@plt+0x2220>
  4061d4:	add    rsi,0x4
  4061d8:	mov    edx,0x2
  4061dd:	mov    rdi,rbp
  4061e0:	call   425e60 <xmlStrEqual@plt+0x21f20>
  4061e5:	jmp    406177 <xmlStrEqual@plt+0x2237>
  4061e7:	nop    WORD PTR [rax+rax*1+0x0]
  4061f0:	mov    rbx,QWORD PTR [rsp+0x8]
  4061f5:	mov    rdi,rbx
  4061f8:	call   403cc0 <freeaddrinfo@plt>
  4061fd:	mov    rcx,QWORD PTR [rsp+0x48]
  406202:	xor    rcx,QWORD PTR fs:0x28
  40620b:	mov    rax,r12
  40620e:	jne    406262 <xmlStrEqual@plt+0x2322>
  406210:	add    rsp,0x50
  406214:	pop    rbx
  406215:	pop    rbp
  406216:	pop    r12
  406218:	pop    r13
  40621a:	pop    r14
  40621c:	ret    
  40621d:	nop    DWORD PTR [rax]
  406220:	lea    rsi,[rip+0x416e9]        # 447910 <xmlStrEqual@plt+0x439d0>
  406227:	mov    edi,0x3
  40622c:	xor    eax,eax
  40622e:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  406233:	jmp    4061ac <xmlStrEqual@plt+0x226c>
  406238:	nop    DWORD PTR [rax+rax*1+0x0]
  406240:	mov    edi,eax
  406242:	call   403d00 <gai_strerror@plt>
  406247:	mov    rdx,rax
  40624a:	lea    rsi,[rip+0x4244c]        # 44869d <xmlStrEqual@plt+0x4475d>
  406251:	mov    edi,0x3
  406256:	xor    eax,eax
  406258:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  40625d:	xor    r12d,r12d
  406260:	jmp    4061fd <xmlStrEqual@plt+0x22bd>
  406262:	call   403c00 <__stack_chk_fail@plt>
  406267:	nop    WORD PTR [rax+rax*1+0x0]
  406270:	endbr64 
  406274:	push   r12
  406276:	xor    eax,eax
  406278:	push   rbp
  406279:	mov    rbp,rsi
  40627c:	push   rbx
  40627d:	mov    rbx,rdi
  406280:	call   424be0 <xmlStrEqual@plt+0x20ca0>
  406285:	mov    esi,0x2f
  40628a:	mov    rdi,rbx
  40628d:	mov    r12,rax
  406290:	call   403930 <strchr@plt>
  406295:	mov    rsi,r12
  406298:	mov    rdi,rbx
  40629b:	test   rax,rax
  40629e:	je     406350 <xmlStrEqual@plt+0x2410>
  4062a4:	call   425bf0 <xmlStrEqual@plt+0x21cb0>
  4062a9:	cmp    eax,0x1
  4062ac:	jne    406328 <xmlStrEqual@plt+0x23e8>
  4062ae:	test   r12,r12
  4062b1:	je     406300 <xmlStrEqual@plt+0x23c0>
  4062b3:	mov    rdi,0x424bf0
  4062ba:	call   42dca0 <xmlStrEqual@plt+0x29d60>
  4062bf:	mov    rbp,rax
  4062c2:	test   rax,rax
  4062c5:	je     406360 <xmlStrEqual@plt+0x2420>
  4062cb:	mov    rsi,rax
  4062ce:	mov    rdi,r12
  4062d1:	call   42dcf0 <xmlStrEqual@plt+0x29db0>
  4062d6:	mov    eax,DWORD PTR [rbp+0x18]
  4062d9:	test   eax,eax
  4062db:	jne    4062f6 <xmlStrEqual@plt+0x23b6>
  4062dd:	nop    DWORD PTR [rax]
  4062e0:	mov    rdx,rbx
  4062e3:	lea    rsi,[rip+0x4168e]        # 447978 <xmlStrEqual@plt+0x43a38>
  4062ea:	mov    edi,0x2
  4062ef:	xor    eax,eax
  4062f1:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  4062f6:	pop    rbx
  4062f7:	mov    rax,rbp
  4062fa:	pop    rbp
  4062fb:	pop    r12
  4062fd:	ret    
  4062fe:	xchg   ax,ax
  406300:	mov    rax,0x4757c0
  406307:	mov    rdi,rbx
  40630a:	mov    esi,DWORD PTR [rax]
  40630c:	call   4060c0 <xmlStrEqual@plt+0x2180>
  406311:	mov    rbp,rax
  406314:	test   rax,rax
  406317:	je     406360 <xmlStrEqual@plt+0x2420>
  406319:	mov    eax,DWORD PTR [rbp+0x18]
  40631c:	test   eax,eax
  40631e:	jne    4062f6 <xmlStrEqual@plt+0x23b6>
  406320:	jmp    4062e0 <xmlStrEqual@plt+0x23a0>
  406322:	nop    WORD PTR [rax+rax*1+0x0]
  406328:	mov    rdi,r12
  40632b:	call   424bf0 <xmlStrEqual@plt+0x20cb0>
  406330:	mov    rsi,rbx
  406333:	mov    rdi,rbp
  406336:	call   43aca0 <xmlStrEqual@plt+0x36d60>
  40633b:	test   rax,rax
  40633e:	je     406300 <xmlStrEqual@plt+0x23c0>
  406340:	mov    rdi,rax
  406343:	call   425060 <xmlStrEqual@plt+0x21120>
  406348:	mov    r12,rax
  40634b:	jmp    4062ae <xmlStrEqual@plt+0x236e>
  406350:	call   425bd0 <xmlStrEqual@plt+0x21c90>
  406355:	jmp    4062a9 <xmlStrEqual@plt+0x2369>
  40635a:	nop    WORD PTR [rax+rax*1+0x0]
  406360:	xor    ebp,ebp
  406362:	jmp    4062e0 <xmlStrEqual@plt+0x23a0>
  406367:	nop    WORD PTR [rax+rax*1+0x0]
  406370:	endbr64 
  406374:	push   r15
  406376:	push   r14
  406378:	mov    r14d,edx
  40637b:	push   r13
  40637d:	mov    r13d,r9d
  406380:	push   r12
  406382:	push   rbp
  406383:	push   rbx
  406384:	sub    rsp,0x38
  406388:	mov    eax,DWORD PTR [rsp+0x70]
  40638c:	mov    QWORD PTR [rsp+0x10],rsi
  406391:	mov    DWORD PTR [rsp+0x28],eax
  406395:	mov    eax,DWORD PTR [rsp+0x78]
  406399:	mov    DWORD PTR [rsp+0x1c],ecx
  40639d:	mov    QWORD PTR [rsp+0x20],r8
  4063a2:	mov    DWORD PTR [rsp+0x2c],eax
  4063a6:	mov    r15d,DWORD PTR [rsp+0x80]
  4063ae:	mov    rbp,QWORD PTR [rsp+0x88]
  4063b6:	mov    r12,QWORD PTR [rsp+0x90]
  4063be:	cmp    edx,0xffffff
  4063c4:	ja     4064c2 <xmlStrEqual@plt+0x2582>
  4063ca:	xor    eax,eax
  4063cc:	call   424be0 <xmlStrEqual@plt+0x20ca0>
  4063d1:	mov    rdi,QWORD PTR [rsp+0x10]
  4063d6:	mov    rsi,rax
  4063d9:	mov    rbx,rax
  4063dc:	mov    QWORD PTR [rsp+0x8],rax
  4063e1:	call   425bf0 <xmlStrEqual@plt+0x21cb0>
  4063e6:	cmp    eax,0x1
  4063e9:	je     406419 <xmlStrEqual@plt+0x24d9>
  4063eb:	mov    rdi,rbx
  4063ee:	call   424bf0 <xmlStrEqual@plt+0x20cb0>
  4063f3:	mov    rsi,QWORD PTR [rsp+0x10]
  4063f8:	mov    rdi,r12
  4063fb:	call   43aca0 <xmlStrEqual@plt+0x36d60>
  406400:	mov    rbx,rax
  406403:	test   rax,rax
  406406:	je     4064e2 <xmlStrEqual@plt+0x25a2>
  40640c:	mov    rdi,rax
  40640f:	call   425060 <xmlStrEqual@plt+0x21120>
  406414:	mov    QWORD PTR [rsp+0x8],rax
  406419:	mov    rbx,QWORD PTR [rsp+0x8]
  40641e:	mov    rdi,rbx
  406421:	call   437a50 <xmlStrEqual@plt+0x33b10>
  406426:	sub    rsp,0x8
  40642a:	movzx  eax,BYTE PTR [rsp+0x34]
  40642f:	mov    rdi,rbx
  406432:	push   rax
  406433:	movzx  r8d,r13b
  406437:	mov    esi,r14d
  40643a:	movzx  r9d,BYTE PTR [rsp+0x38]
  406440:	mov    rcx,QWORD PTR [rsp+0x30]
  406445:	mov    edx,DWORD PTR [rsp+0x2c]
  406449:	call   430cd0 <xmlStrEqual@plt+0x2cd90>
  40644e:	mov    BYTE PTR [rax+0x19],r15b
  406452:	mov    rbx,rax
  406455:	mov    r15,QWORD PTR [rbp+0x8]
  406459:	pop    rax
  40645a:	pop    rdx
  40645b:	cmp    rbp,r15
  40645e:	je     4064a6 <xmlStrEqual@plt+0x2566>
  406460:	mov    rdi,QWORD PTR [r15+0x10]
  406464:	mov    rsi,r12
  406467:	call   406270 <xmlStrEqual@plt+0x2330>
  40646c:	mov    r13,QWORD PTR [rax+0x8]
  406470:	mov    r14,rax
  406473:	cmp    rax,r13
  406476:	je     406495 <xmlStrEqual@plt+0x2555>
  406478:	nop    DWORD PTR [rax+rax*1+0x0]
  406480:	mov    rsi,QWORD PTR [r13+0x10]
  406484:	mov    rdi,rbx
  406487:	call   430d80 <xmlStrEqual@plt+0x2ce40>
  40648c:	mov    r13,QWORD PTR [r13+0x8]
  406490:	cmp    r14,r13
  406493:	jne    406480 <xmlStrEqual@plt+0x2540>
  406495:	mov    rdi,r14
  406498:	call   42e2b0 <xmlStrEqual@plt+0x2a370>
  40649d:	mov    r15,QWORD PTR [r15+0x8]
  4064a1:	cmp    rbp,r15
  4064a4:	jne    406460 <xmlStrEqual@plt+0x2520>
  4064a6:	mov    rdi,QWORD PTR [rsp+0x8]
  4064ab:	call   424bf0 <xmlStrEqual@plt+0x20cb0>
  4064b0:	add    rsp,0x38
  4064b4:	mov    rax,rbx
  4064b7:	pop    rbx
  4064b8:	pop    rbp
  4064b9:	pop    r12
  4064bb:	pop    r13
  4064bd:	pop    r14
  4064bf:	pop    r15
  4064c1:	ret    
  4064c2:	mov    ecx,0xffffff
  4064c7:	lea    rsi,[rip+0x413ca]        # 447898 <xmlStrEqual@plt+0x43958>
  4064ce:	mov    edi,0x2
  4064d3:	xor    eax,eax
  4064d5:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  4064da:	xor    r14d,r14d
  4064dd:	jmp    4063ca <xmlStrEqual@plt+0x248a>
  4064e2:	mov    rdx,QWORD PTR [rsp+0x10]
  4064e7:	lea    rsi,[rip+0x413f2]        # 4478e0 <xmlStrEqual@plt+0x439a0>
  4064ee:	mov    edi,0x2
  4064f3:	xor    eax,eax
  4064f5:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  4064fa:	jmp    4064b0 <xmlStrEqual@plt+0x2570>
  4064fc:	nop    DWORD PTR [rax+0x0]
  406500:	endbr64 
  406504:	push   r15
  406506:	mov    r15d,edx
  406509:	push   r14
  40650b:	push   r13
  40650d:	mov    r13,r9
  406510:	push   r12
  406512:	mov    r12,r8
  406515:	push   rbp
  406516:	push   rbx
  406517:	mov    rbx,rsi
  40651a:	sub    rsp,0x18
  40651e:	mov    rdi,0x424bf0
  406525:	mov    DWORD PTR [rsp+0x8],edx
  406529:	mov    DWORD PTR [rsp+0xc],ecx
  40652d:	call   42dca0 <xmlStrEqual@plt+0x29d60>
  406532:	mov    rbp,rax
  406535:	cmp    r15d,0xffffff
  40653c:	ja     406638 <xmlStrEqual@plt+0x26f8>
  406542:	xor    eax,eax
  406544:	call   424be0 <xmlStrEqual@plt+0x20ca0>
  406549:	mov    rsi,rax
  40654c:	mov    rdi,rbx
  40654f:	mov    r15,rax
  406552:	mov    QWORD PTR [rsp],rax
  406556:	call   425bf0 <xmlStrEqual@plt+0x21cb0>
  40655b:	cmp    eax,0x1
  40655e:	je     406588 <xmlStrEqual@plt+0x2648>
  406560:	mov    rdi,r15
  406563:	call   424bf0 <xmlStrEqual@plt+0x20cb0>
  406568:	mov    rsi,rbx
  40656b:	mov    rdi,r13
  40656e:	call   43aca0 <xmlStrEqual@plt+0x36d60>
  406573:	test   rax,rax
  406576:	je     406661 <xmlStrEqual@plt+0x2721>
  40657c:	mov    rdi,rax
  40657f:	call   425060 <xmlStrEqual@plt+0x21120>
  406584:	mov    QWORD PTR [rsp],rax
  406588:	mov    rdi,QWORD PTR [rsp]
  40658c:	call   437a50 <xmlStrEqual@plt+0x33b10>
  406591:	mov    rbx,QWORD PTR [r12+0x8]
  406596:	cmp    r12,rbx
  406599:	jne    4065b1 <xmlStrEqual@plt+0x2671>
  40659b:	jmp    4065f0 <xmlStrEqual@plt+0x26b0>
  40659d:	nop    DWORD PTR [rax]
  4065a0:	mov    rdi,r15
  4065a3:	call   42e2b0 <xmlStrEqual@plt+0x2a370>
  4065a8:	mov    rbx,QWORD PTR [rbx+0x8]
  4065ac:	cmp    r12,rbx
  4065af:	je     4065f0 <xmlStrEqual@plt+0x26b0>
  4065b1:	mov    rdi,QWORD PTR [rbx+0x10]
  4065b5:	mov    rsi,r13
  4065b8:	call   406270 <xmlStrEqual@plt+0x2330>
  4065bd:	mov    r15,rax
  4065c0:	mov    eax,DWORD PTR [rax+0x18]
  4065c3:	test   eax,eax
  4065c5:	jle    4065a0 <xmlStrEqual@plt+0x2660>
  4065c7:	mov    r14,QWORD PTR [r15+0x8]
  4065cb:	cmp    r15,r14
  4065ce:	je     4065a0 <xmlStrEqual@plt+0x2660>
  4065d0:	mov    rdi,QWORD PTR [r14+0x10]
  4065d4:	call   425060 <xmlStrEqual@plt+0x21120>
  4065d9:	mov    rdi,rax
  4065dc:	mov    rsi,rbp
  4065df:	call   42de80 <xmlStrEqual@plt+0x29f40>
  4065e4:	mov    r14,QWORD PTR [r14+0x8]
  4065e8:	cmp    r15,r14
  4065eb:	jne    4065d0 <xmlStrEqual@plt+0x2690>
  4065ed:	jmp    4065a0 <xmlStrEqual@plt+0x2660>
  4065ef:	nop
  4065f0:	mov    rbx,QWORD PTR [rsp]
  4065f4:	mov    edx,DWORD PTR [rsp+0xc]
  4065f8:	mov    esi,DWORD PTR [rsp+0x8]
  4065fc:	mov    rcx,rbp
  4065ff:	mov    rdi,rbx
  406602:	call   416f50 <xmlStrEqual@plt+0x13010>
  406607:	mov    rdi,rbx
  40660a:	mov    QWORD PTR [rsp],rax
  40660e:	call   424bf0 <xmlStrEqual@plt+0x20cb0>
  406613:	mov    rdi,rbp
  406616:	call   42e2b0 <xmlStrEqual@plt+0x2a370>
  40661b:	mov    rcx,QWORD PTR [rsp]
  40661f:	add    rsp,0x18
  406623:	pop    rbx
  406624:	pop    rbp
  406625:	pop    r12
  406627:	pop    r13
  406629:	pop    r14
  40662b:	mov    rax,rcx
  40662e:	pop    r15
  406630:	ret    
  406631:	nop    DWORD PTR [rax+0x0]
  406638:	mov    edx,DWORD PTR [rsp+0x8]
  40663c:	mov    ecx,0xffffff
  406641:	lea    rsi,[rip+0x41250]        # 447898 <xmlStrEqual@plt+0x43958>
  406648:	mov    edi,0x2
  40664d:	xor    eax,eax
  40664f:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  406654:	mov    DWORD PTR [rsp+0x8],0x0
  40665c:	jmp    406542 <xmlStrEqual@plt+0x2602>
  406661:	mov    QWORD PTR [rsp],rax
  406665:	mov    rdx,rbx
  406668:	lea    rsi,[rip+0x41271]        # 4478e0 <xmlStrEqual@plt+0x439a0>
  40666f:	mov    edi,0x2
  406674:	xor    eax,eax
  406676:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  40667b:	mov    rcx,QWORD PTR [rsp]
  40667f:	jmp    40661f <xmlStrEqual@plt+0x26df>
  406681:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40668c:	nop    DWORD PTR [rax+0x0]
  406690:	endbr64 
  406694:	push   r15
  406696:	push   r14
  406698:	push   r13
  40669a:	mov    r13,rdx
  40669d:	push   r12
  40669f:	mov    r12,rsi
  4066a2:	push   rbp
  4066a3:	push   rbx
  4066a4:	sub    rsp,0x18
  4066a8:	mov    QWORD PTR [rsp+0x8],rdi
  4066ad:	mov    rdi,0x424bf0
  4066b4:	call   42dca0 <xmlStrEqual@plt+0x29d60>
  4066b9:	mov    rbp,rax
  4066bc:	xor    eax,eax
  4066be:	call   424be0 <xmlStrEqual@plt+0x20ca0>
  4066c3:	mov    rbx,QWORD PTR [r12+0x8]
  4066c8:	mov    QWORD PTR [rsp],rax
  4066cc:	cmp    r12,rbx
  4066cf:	jne    4066e9 <xmlStrEqual@plt+0x27a9>
  4066d1:	jmp    406730 <xmlStrEqual@plt+0x27f0>
  4066d3:	nop    DWORD PTR [rax+rax*1+0x0]
  4066d8:	mov    rdi,r15
  4066db:	call   42e2b0 <xmlStrEqual@plt+0x2a370>
  4066e0:	mov    rbx,QWORD PTR [rbx+0x8]
  4066e4:	cmp    r12,rbx
  4066e7:	je     406730 <xmlStrEqual@plt+0x27f0>
  4066e9:	mov    rdi,QWORD PTR [rbx+0x10]
  4066ed:	mov    rsi,r13
  4066f0:	call   406270 <xmlStrEqual@plt+0x2330>
  4066f5:	mov    esi,DWORD PTR [rax+0x18]
  4066f8:	mov    r15,rax
  4066fb:	test   esi,esi
  4066fd:	jle    4066d8 <xmlStrEqual@plt+0x2798>
  4066ff:	mov    r14,QWORD PTR [rax+0x8]
  406703:	cmp    rax,r14
  406706:	je     4066d8 <xmlStrEqual@plt+0x2798>
  406708:	nop    DWORD PTR [rax+rax*1+0x0]
  406710:	mov    rdi,QWORD PTR [r14+0x10]
  406714:	call   425060 <xmlStrEqual@plt+0x21120>
  406719:	mov    rdi,rax
  40671c:	mov    rsi,rbp
  40671f:	call   42de80 <xmlStrEqual@plt+0x29f40>
  406724:	mov    r14,QWORD PTR [r14+0x8]
  406728:	cmp    r15,r14
  40672b:	jne    406710 <xmlStrEqual@plt+0x27d0>
  40672d:	jmp    4066d8 <xmlStrEqual@plt+0x2798>
  40672f:	nop
  406730:	mov    ecx,DWORD PTR [rbp+0x18]
  406733:	test   ecx,ecx
  406735:	jle    4067c0 <xmlStrEqual@plt+0x2880>
  40673b:	mov    r15,QWORD PTR [rsp]
  40673f:	lea    rdi,[rip+0x41f6d]        # 4486b3 <xmlStrEqual@plt+0x44773>
  406746:	mov    rsi,r15
  406749:	call   425bf0 <xmlStrEqual@plt+0x21cb0>
  40674e:	push   0x0
  406750:	mov    r9,rbp
  406753:	xor    edx,edx
  406755:	push   0x0
  406757:	xor    r8d,r8d
  40675a:	mov    ecx,0x1
  40675f:	mov    rdi,r15
  406762:	mov    esi,0x5a0
  406767:	call   42c630 <xmlStrEqual@plt+0x286f0>
  40676c:	mov    r12,rax
  40676f:	xor    eax,eax
  406771:	call   433a70 <xmlStrEqual@plt+0x2fb30>
  406776:	mov    rdi,rax
  406779:	mov    rsi,r12
  40677c:	mov    rbx,rax
  40677f:	call   433ab0 <xmlStrEqual@plt+0x2fb70>
  406784:	mov    rdi,QWORD PTR [rsp+0x18]
  406789:	mov    rsi,rbx
  40678c:	call   4172c0 <xmlStrEqual@plt+0x13380>
  406791:	mov    rdi,r15
  406794:	call   424bf0 <xmlStrEqual@plt+0x20cb0>
  406799:	mov    rdi,rbp
  40679c:	call   42e2b0 <xmlStrEqual@plt+0x2a370>
  4067a1:	pop    rax
  4067a2:	pop    rdx
  4067a3:	add    rsp,0x18
  4067a7:	pop    rbx
  4067a8:	pop    rbp
  4067a9:	pop    r12
  4067ab:	pop    r13
  4067ad:	pop    r14
  4067af:	mov    eax,0x1
  4067b4:	pop    r15
  4067b6:	ret    
  4067b7:	nop    WORD PTR [rax+rax*1+0x0]
  4067c0:	xor    eax,eax
  4067c2:	lea    rsi,[rip+0x411df]        # 4479a8 <xmlStrEqual@plt+0x43a68>
  4067c9:	mov    edi,0x2
  4067ce:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  4067d3:	add    rsp,0x18
  4067d7:	pop    rbx
  4067d8:	pop    rbp
  4067d9:	pop    r12
  4067db:	pop    r13
  4067dd:	pop    r14
  4067df:	xor    eax,eax
  4067e1:	pop    r15
  4067e3:	ret    
  4067e4:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4067ef:	nop
  4067f0:	endbr64 
  4067f4:	push   r12
  4067f6:	xor    eax,eax
  4067f8:	push   rbp
  4067f9:	mov    rbp,rdi
  4067fc:	push   rbx
  4067fd:	call   424be0 <xmlStrEqual@plt+0x20ca0>
  406802:	mov    rsi,rax
  406805:	mov    rdi,rbp
  406808:	mov    r12,rax
  40680b:	call   425bd0 <xmlStrEqual@plt+0x21c90>
  406810:	cmp    eax,0x1
  406813:	je     406860 <xmlStrEqual@plt+0x2920>
  406815:	mov    rdi,r12
  406818:	call   424bf0 <xmlStrEqual@plt+0x20cb0>
  40681d:	mov    rax,0x4757c0
  406824:	mov    rdi,rbp
  406827:	mov    esi,DWORD PTR [rax]
  406829:	call   4060c0 <xmlStrEqual@plt+0x2180>
  40682e:	mov    rbx,rax
  406831:	test   rax,rax
  406834:	je     406888 <xmlStrEqual@plt+0x2948>
  406836:	mov    eax,DWORD PTR [rbx+0x18]
  406839:	test   eax,eax
  40683b:	jne    406853 <xmlStrEqual@plt+0x2913>
  40683d:	mov    rdx,rbp
  406840:	lea    rsi,[rip+0x411a9]        # 4479f0 <xmlStrEqual@plt+0x43ab0>
  406847:	mov    edi,0x2
  40684c:	xor    eax,eax
  40684e:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  406853:	mov    rax,rbx
  406856:	pop    rbx
  406857:	pop    rbp
  406858:	pop    r12
  40685a:	ret    
  40685b:	nop    DWORD PTR [rax+rax*1+0x0]
  406860:	mov    rdi,0x424bf0
  406867:	call   42dca0 <xmlStrEqual@plt+0x29d60>
  40686c:	mov    rbx,rax
  40686f:	test   rax,rax
  406872:	je     406888 <xmlStrEqual@plt+0x2948>
  406874:	mov    rsi,rax
  406877:	mov    rdi,r12
  40687a:	call   42dcf0 <xmlStrEqual@plt+0x29db0>
  40687f:	jmp    406836 <xmlStrEqual@plt+0x28f6>
  406881:	nop    DWORD PTR [rax+0x0]
  406888:	xor    ebx,ebx
  40688a:	jmp    40683d <xmlStrEqual@plt+0x28fd>
  40688c:	nop    DWORD PTR [rax+0x0]
  406890:	endbr64 
  406894:	push   r15
  406896:	push   r14
  406898:	mov    r14,rdi
  40689b:	push   r13
  40689d:	mov    r13,rsi
  4068a0:	push   r12
  4068a2:	push   rbp
  4068a3:	push   rbx
  4068a4:	sub    rsp,0x8
  4068a8:	call   4067f0 <xmlStrEqual@plt+0x28b0>
  4068ad:	test   rax,rax
  4068b0:	je     406978 <xmlStrEqual@plt+0x2a38>
  4068b6:	mov    r15,QWORD PTR [rax+0x8]
  4068ba:	mov    rbp,rax
  4068bd:	cmp    rax,r15
  4068c0:	je     406958 <xmlStrEqual@plt+0x2a18>
  4068c6:	mov    r12,0x4757c0
  4068cd:	jmp    406916 <xmlStrEqual@plt+0x29d6>
  4068cf:	nop
  4068d0:	mov    rdi,rbx
  4068d3:	call   425060 <xmlStrEqual@plt+0x21120>
  4068d8:	mov    rdi,rax
  4068db:	mov    rsi,r13
  4068de:	call   42de80 <xmlStrEqual@plt+0x29f40>
  4068e3:	mov    rax,0x469e3c
  4068ea:	cmp    DWORD PTR [rax],0x2
  4068ed:	jle    40690d <xmlStrEqual@plt+0x29cd>
  4068ef:	mov    rdi,rbx
  4068f2:	call   424d40 <xmlStrEqual@plt+0x20e00>
  4068f7:	mov    rdx,rax
  4068fa:	lea    rsi,[rip+0x411b7]        # 447ab8 <xmlStrEqual@plt+0x43b78>
  406901:	mov    edi,0x7
  406906:	xor    eax,eax
  406908:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  40690d:	mov    r15,QWORD PTR [r15+0x8]
  406911:	cmp    rbp,r15
  406914:	je     406958 <xmlStrEqual@plt+0x2a18>
  406916:	mov    eax,DWORD PTR [r12]
  40691a:	mov    rbx,QWORD PTR [r15+0x10]
  40691e:	test   eax,eax
  406920:	je     4068d0 <xmlStrEqual@plt+0x2990>
  406922:	mov    rdi,rbx
  406925:	call   425890 <xmlStrEqual@plt+0x21950>
  40692a:	movzx  eax,ax
  40692d:	cmp    eax,DWORD PTR [r12]
  406931:	je     4068d0 <xmlStrEqual@plt+0x2990>
  406933:	mov    rdx,r14
  406936:	lea    rsi,[rip+0x41123]        # 447a60 <xmlStrEqual@plt+0x43b20>
  40693d:	mov    edi,0x3
  406942:	xor    eax,eax
  406944:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  406949:	mov    r15,QWORD PTR [r15+0x8]
  40694d:	cmp    rbp,r15
  406950:	jne    406916 <xmlStrEqual@plt+0x29d6>
  406952:	nop    WORD PTR [rax+rax*1+0x0]
  406958:	mov    rdi,rbp
  40695b:	call   42e2b0 <xmlStrEqual@plt+0x2a370>
  406960:	mov    eax,0x1
  406965:	add    rsp,0x8
  406969:	pop    rbx
  40696a:	pop    rbp
  40696b:	pop    r12
  40696d:	pop    r13
  40696f:	pop    r14
  406971:	pop    r15
  406973:	ret    
  406974:	nop    DWORD PTR [rax+0x0]
  406978:	xor    eax,eax
  40697a:	mov    rdx,r14
  40697d:	lea    rsi,[rip+0x410a4]        # 447a28 <xmlStrEqual@plt+0x43ae8>
  406984:	mov    edi,0x2
  406989:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  40698e:	xor    eax,eax
  406990:	jmp    406965 <xmlStrEqual@plt+0x2a25>
  406992:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40699d:	nop    DWORD PTR [rax]
  4069a0:	endbr64 
  4069a4:	push   r15
  4069a6:	push   r14
  4069a8:	mov    r14d,r8d
  4069ab:	push   r13
  4069ad:	push   r12
  4069af:	mov    r12d,edx
  4069b2:	push   rbp
  4069b3:	push   rbx
  4069b4:	sub    rsp,0x28
  4069b8:	test   edx,edx
  4069ba:	sete   dl
  4069bd:	test   rcx,rcx
  4069c0:	sete   al
  4069c3:	or     dl,al
  4069c5:	mov    QWORD PTR [rsp+0x10],rdi
  4069ca:	mov    QWORD PTR [rsp+0x18],rsi
  4069cf:	mov    QWORD PTR [rsp+0x8],rcx
  4069d4:	jne    406ac0 <xmlStrEqual@plt+0x2b80>
  4069da:	test   rsi,rsi
  4069dd:	je     406ac0 <xmlStrEqual@plt+0x2b80>
  4069e3:	cmp    r12d,0x1
  4069e7:	je     406a03 <xmlStrEqual@plt+0x2ac3>
  4069e9:	xor    eax,eax
  4069eb:	lea    rsi,[rip+0x41146]        # 447b38 <xmlStrEqual@plt+0x43bf8>
  4069f2:	mov    edi,0x2
  4069f7:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  4069fc:	xor    eax,eax
  4069fe:	call   43f9f0 <xmlStrEqual@plt+0x3bab0>
  406a03:	mov    rdi,QWORD PTR [rsp+0x18]
  406a08:	call   4067f0 <xmlStrEqual@plt+0x28b0>
  406a0d:	mov    rbx,rax
  406a10:	test   rax,rax
  406a13:	je     406ae0 <xmlStrEqual@plt+0x2ba0>
  406a19:	mov    r15,QWORD PTR [rax+0x8]
  406a1d:	cmp    rax,r15
  406a20:	je     406aa0 <xmlStrEqual@plt+0x2b60>
  406a22:	mov    rbp,0x4757c0
  406a29:	jmp    406a60 <xmlStrEqual@plt+0x2b20>
  406a2b:	nop    DWORD PTR [rax+rax*1+0x0]
  406a30:	mov    rdx,QWORD PTR [rsp+0x8]
  406a35:	movzx  ecx,r14b
  406a39:	movzx  esi,r12b
  406a3d:	mov    rdi,r13
  406a40:	call   412c90 <xmlStrEqual@plt+0xed50>
  406a45:	test   rax,rax
  406a48:	je     406a57 <xmlStrEqual@plt+0x2b17>
  406a4a:	mov    rsi,QWORD PTR [rsp+0x10]
  406a4f:	mov    rdi,rax
  406a52:	call   42dcf0 <xmlStrEqual@plt+0x29db0>
  406a57:	mov    r15,QWORD PTR [r15+0x8]
  406a5b:	cmp    rbx,r15
  406a5e:	je     406aa0 <xmlStrEqual@plt+0x2b60>
  406a60:	mov    eax,DWORD PTR [rbp+0x0]
  406a63:	mov    r13,QWORD PTR [r15+0x10]
  406a67:	test   eax,eax
  406a69:	je     406a30 <xmlStrEqual@plt+0x2af0>
  406a6b:	mov    rdi,r13
  406a6e:	call   425890 <xmlStrEqual@plt+0x21950>
  406a73:	movzx  eax,ax
  406a76:	cmp    eax,DWORD PTR [rbp+0x0]
  406a79:	je     406a30 <xmlStrEqual@plt+0x2af0>
  406a7b:	mov    rdx,QWORD PTR [rsp+0x18]
  406a80:	lea    rsi,[rip+0x41121]        # 447ba8 <xmlStrEqual@plt+0x43c68>
  406a87:	mov    edi,0x3
  406a8c:	xor    eax,eax
  406a8e:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  406a93:	mov    r15,QWORD PTR [r15+0x8]
  406a97:	cmp    rbx,r15
  406a9a:	jne    406a60 <xmlStrEqual@plt+0x2b20>
  406a9c:	nop    DWORD PTR [rax+0x0]
  406aa0:	mov    rdi,rbx
  406aa3:	call   42e2b0 <xmlStrEqual@plt+0x2a370>
  406aa8:	mov    eax,0x1
  406aad:	add    rsp,0x28
  406ab1:	pop    rbx
  406ab2:	pop    rbp
  406ab3:	pop    r12
  406ab5:	pop    r13
  406ab7:	pop    r14
  406ab9:	pop    r15
  406abb:	ret    
  406abc:	nop    DWORD PTR [rax+0x0]
  406ac0:	xor    eax,eax
  406ac2:	lea    rsi,[rip+0x4101f]        # 447ae8 <xmlStrEqual@plt+0x43ba8>
  406ac9:	mov    edi,0x2
  406ace:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  406ad3:	xor    eax,eax
  406ad5:	call   43f9f0 <xmlStrEqual@plt+0x3bab0>
  406ada:	jmp    4069e3 <xmlStrEqual@plt+0x2aa3>
  406adf:	nop
  406ae0:	mov    rdx,QWORD PTR [rsp+0x18]
  406ae5:	xor    eax,eax
  406ae7:	lea    rsi,[rip+0x4108a]        # 447b78 <xmlStrEqual@plt+0x43c38>
  406aee:	mov    edi,0x2
  406af3:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  406af8:	xor    eax,eax
  406afa:	jmp    406aad <xmlStrEqual@plt+0x2b6d>
  406afc:	nop    DWORD PTR [rax+0x0]
  406b00:	endbr64 
  406b04:	push   r15
  406b06:	push   r14
  406b08:	push   r13
  406b0a:	push   r12
  406b0c:	push   rbp
  406b0d:	push   rbx
  406b0e:	sub    rsp,0x28
  406b12:	mov    QWORD PTR [rsp+0x10],rdi
  406b17:	mov    QWORD PTR [rsp+0x18],rsi
  406b1c:	test   rsi,rsi
  406b1f:	je     406c40 <xmlStrEqual@plt+0x2d00>
  406b25:	mov    esi,ecx
  406b27:	mov    edi,edx
  406b29:	mov    ebx,edx
  406b2b:	mov    ebp,ecx
  406b2d:	call   405bf0 <xmlStrEqual@plt+0x1cb0>
  406b32:	mov    r12d,eax
  406b35:	cmp    eax,0x1
  406b38:	je     406b50 <xmlStrEqual@plt+0x2c10>
  406b3a:	xor    r12d,r12d
  406b3d:	add    rsp,0x28
  406b41:	pop    rbx
  406b42:	pop    rbp
  406b43:	mov    eax,r12d
  406b46:	pop    r12
  406b48:	pop    r13
  406b4a:	pop    r14
  406b4c:	pop    r15
  406b4e:	ret    
  406b4f:	nop
  406b50:	mov    rdi,QWORD PTR [rsp+0x18]
  406b55:	call   4067f0 <xmlStrEqual@plt+0x28b0>
  406b5a:	mov    r13,rax
  406b5d:	test   rax,rax
  406b60:	je     406c60 <xmlStrEqual@plt+0x2d20>
  406b66:	mov    r15,QWORD PTR [rax+0x8]
  406b6a:	cmp    rax,r15
  406b6d:	je     406c20 <xmlStrEqual@plt+0x2ce0>
  406b73:	mov    r14,0x4757c0
  406b7a:	jmp    406bd6 <xmlStrEqual@plt+0x2c96>
  406b7c:	nop    DWORD PTR [rax+0x0]
  406b80:	push   0x0
  406b82:	mov    ecx,0x1
  406b87:	xor    edx,edx
  406b89:	push   0xff
  406b8e:	movzx  r9d,bpl
  406b92:	movzx  r8d,bl
  406b96:	mov    esi,0x1
  406b9b:	mov    rdi,r11
  406b9e:	call   42a830 <xmlStrEqual@plt+0x268f0>
  406ba3:	mov    rdx,rax
  406ba6:	pop    rax
  406ba7:	pop    rcx
  406ba8:	test   rdx,rdx
  406bab:	je     406bcd <xmlStrEqual@plt+0x2c8d>
  406bad:	mov    rax,QWORD PTR [rsp+0x10]
  406bb2:	mov    rsi,rdx
  406bb5:	mov    rdi,QWORD PTR [rax+0x8]
  406bb9:	mov    QWORD PTR [rsp+0x8],rdx
  406bbe:	call   42b7b0 <xmlStrEqual@plt+0x27870>
  406bc3:	cmp    eax,0x1
  406bc6:	mov    rdx,QWORD PTR [rsp+0x8]
  406bcb:	jne    406c30 <xmlStrEqual@plt+0x2cf0>
  406bcd:	mov    r15,QWORD PTR [r15+0x8]
  406bd1:	cmp    r13,r15
  406bd4:	je     406c20 <xmlStrEqual@plt+0x2ce0>
  406bd6:	mov    esi,DWORD PTR [r14]
  406bd9:	mov    r11,QWORD PTR [r15+0x10]
  406bdd:	test   esi,esi
  406bdf:	je     406b80 <xmlStrEqual@plt+0x2c40>
  406be1:	mov    rdi,r11
  406be4:	mov    QWORD PTR [rsp+0x8],r11
  406be9:	call   425890 <xmlStrEqual@plt+0x21950>
  406bee:	movzx  eax,ax
  406bf1:	cmp    eax,DWORD PTR [r14]
  406bf4:	mov    r11,QWORD PTR [rsp+0x8]
  406bf9:	je     406b80 <xmlStrEqual@plt+0x2c40>
  406bfb:	mov    rdx,QWORD PTR [rsp+0x18]
  406c00:	lea    rsi,[rip+0x41079]        # 447c80 <xmlStrEqual@plt+0x43d40>
  406c07:	mov    edi,0x3
  406c0c:	xor    eax,eax
  406c0e:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  406c13:	mov    r15,QWORD PTR [r15+0x8]
  406c17:	cmp    r13,r15
  406c1a:	jne    406bd6 <xmlStrEqual@plt+0x2c96>
  406c1c:	nop    DWORD PTR [rax+0x0]
  406c20:	mov    rdi,r13
  406c23:	call   42e2b0 <xmlStrEqual@plt+0x2a370>
  406c28:	jmp    406b3d <xmlStrEqual@plt+0x2bfd>
  406c2d:	nop    DWORD PTR [rax]
  406c30:	mov    rdi,rdx
  406c33:	call   42a7f0 <xmlStrEqual@plt+0x268b0>
  406c38:	jmp    406bcd <xmlStrEqual@plt+0x2c8d>
  406c3a:	nop    WORD PTR [rax+rax*1+0x0]
  406c40:	mov    rax,rsi
  406c43:	mov    edi,0x2
  406c48:	lea    rsi,[rip+0x40fb1]        # 447c00 <xmlStrEqual@plt+0x43cc0>
  406c4f:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  406c54:	xor    r12d,r12d
  406c57:	jmp    406b3d <xmlStrEqual@plt+0x2bfd>
  406c5c:	nop    DWORD PTR [rax+0x0]
  406c60:	mov    rdx,QWORD PTR [rsp+0x18]
  406c65:	lea    rsi,[rip+0x40fdc]        # 447c48 <xmlStrEqual@plt+0x43d08>
  406c6c:	mov    edi,0x2
  406c71:	xor    eax,eax
  406c73:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  406c78:	xor    r12d,r12d
  406c7b:	jmp    406b3d <xmlStrEqual@plt+0x2bfd>
  406c80:	endbr64 
  406c84:	push   r15
  406c86:	push   r14
  406c88:	mov    r14d,ecx
  406c8b:	push   r13
  406c8d:	push   r12
  406c8f:	push   rbp
  406c90:	push   rbx
  406c91:	sub    rsp,0x68
  406c95:	mov    eax,DWORD PTR [rdi]
  406c97:	mov    QWORD PTR [rsp+0x48],rdi
  406c9c:	mov    QWORD PTR [rsp+0x38],rsi
  406ca1:	mov    QWORD PTR [rsp+0x28],rdx
  406ca6:	mov    DWORD PTR [rsp+0x5c],ecx
  406caa:	test   eax,eax
  406cac:	je     407530 <xmlStrEqual@plt+0x35f0>
  406cb2:	mov    QWORD PTR [rsp+0x40],0x0
  406cbb:	cmp    eax,0x3
  406cbe:	je     407530 <xmlStrEqual@plt+0x35f0>
  406cc4:	mov    rax,QWORD PTR [rsp+0x28]
  406cc9:	mov    rsi,QWORD PTR [rsp+0x38]
  406cce:	mov    rdi,QWORD PTR [rax]
  406cd1:	call   406270 <xmlStrEqual@plt+0x2330>
  406cd6:	mov    rbp,rax
  406cd9:	test   rax,rax
  406cdc:	je     4070f0 <xmlStrEqual@plt+0x31b0>
  406ce2:	cmp    DWORD PTR [rax+0x18],0x1
  406ce6:	jne    4070f0 <xmlStrEqual@plt+0x31b0>
  406cec:	mov    rax,QWORD PTR [rax+0x8]
  406cf0:	mov    rbx,QWORD PTR [rax+0x10]
  406cf4:	mov    rdi,rbx
  406cf7:	call   437a50 <xmlStrEqual@plt+0x33b10>
  406cfc:	mov    rax,QWORD PTR [rsp+0x28]
  406d01:	mov    edi,DWORD PTR [rax+0xc]
  406d04:	cmp    edi,0xffffff
  406d0a:	ja     4075f8 <xmlStrEqual@plt+0x36b8>
  406d10:	test   edi,edi
  406d12:	je     40761e <xmlStrEqual@plt+0x36de>
  406d18:	mov    edx,0x20
  406d1d:	mov    rsi,rbx
  406d20:	call   429ab0 <xmlStrEqual@plt+0x25b70>
  406d25:	mov    rbx,rax
  406d28:	mov    rax,QWORD PTR [rsp+0x28]
  406d2d:	mov    edx,DWORD PTR [rax+0x8]
  406d30:	test   edx,edx
  406d32:	jle    407639 <xmlStrEqual@plt+0x36f9>
  406d38:	mov    rdi,rbx
  406d3b:	call   42b040 <xmlStrEqual@plt+0x27100>
  406d40:	mov    r15,rax
  406d43:	test   rax,rax
  406d46:	je     4070f0 <xmlStrEqual@plt+0x31b0>
  406d4c:	mov    r12,QWORD PTR [rsp+0x28]
  406d51:	cmp    BYTE PTR [rsp+0x5c],0x0
  406d56:	mov    eax,DWORD PTR [r12+0x8]
  406d5b:	mov    DWORD PTR [r15+0x30],eax
  406d5f:	je     407578 <xmlStrEqual@plt+0x3638>
  406d65:	mov    BYTE PTR [r15+0x35],0x1
  406d6a:	mov    rdi,rbx
  406d6d:	call   424bf0 <xmlStrEqual@plt+0x20cb0>
  406d72:	mov    rdi,rbp
  406d75:	call   42e2b0 <xmlStrEqual@plt+0x2a370>
  406d7a:	mov    rax,QWORD PTR [r12+0x10]
  406d7f:	mov    rcx,QWORD PTR [rax+0x8]
  406d83:	mov    QWORD PTR [rsp+0x10],rcx
  406d88:	cmp    rax,rcx
  406d8b:	je     4071b5 <xmlStrEqual@plt+0x3275>
  406d91:	mov    QWORD PTR [rsp+0x50],r15
  406d96:	nop    WORD PTR cs:[rax+rax*1+0x0]
  406da0:	mov    rax,QWORD PTR [rsp+0x10]
  406da5:	mov    rbp,QWORD PTR [rax+0x10]
  406da9:	mov    esi,DWORD PTR [rbp+0xc]
  406dac:	mov    edi,DWORD PTR [rbp+0x8]
  406daf:	call   405bf0 <xmlStrEqual@plt+0x1cb0>
  406db4:	cmp    eax,0x1
  406db7:	jne    407188 <xmlStrEqual@plt+0x3248>
  406dbd:	mov    rsi,QWORD PTR [rsp+0x38]
  406dc2:	mov    rdi,QWORD PTR [rbp+0x0]
  406dc6:	call   406270 <xmlStrEqual@plt+0x2330>
  406dcb:	mov    rbx,rax
  406dce:	mov    QWORD PTR [rsp],rax
  406dd2:	test   rax,rax
  406dd5:	je     407188 <xmlStrEqual@plt+0x3248>
  406ddb:	mov    eax,DWORD PTR [rax+0x18]
  406dde:	test   eax,eax
  406de0:	je     407188 <xmlStrEqual@plt+0x3248>
  406de6:	call   42dc90 <xmlStrEqual@plt+0x29d50>
  406deb:	mov    r13,rax
  406dee:	test   rax,rax
  406df1:	je     407188 <xmlStrEqual@plt+0x3248>
  406df7:	mov    rax,rbx
  406dfa:	mov    rbx,QWORD PTR [rbx+0x8]
  406dfe:	cmp    rax,rbx
  406e01:	je     406ff8 <xmlStrEqual@plt+0x30b8>
  406e07:	mov    r15,0x4757c0
  406e0e:	mov    QWORD PTR [rsp+0x20],r13
  406e13:	mov    r12d,r14d
  406e16:	jmp    406f8a <xmlStrEqual@plt+0x304a>
  406e1b:	nop    DWORD PTR [rax+rax*1+0x0]
  406e20:	mov    eax,DWORD PTR [r13+0x18]
  406e24:	cmp    eax,0x2
  406e27:	je     407370 <xmlStrEqual@plt+0x3430>
  406e2d:	movzx  edx,BYTE PTR [rbp+0x18]
  406e31:	test   r12b,r12b
  406e34:	je     407108 <xmlStrEqual@plt+0x31c8>
  406e3a:	test   dl,dl
  406e3c:	je     407108 <xmlStrEqual@plt+0x31c8>
  406e42:	mov    r14,r13
  406e45:	cmp    eax,0x3
  406e48:	je     407150 <xmlStrEqual@plt+0x3210>
  406e4e:	mov    rdi,r14
  406e51:	call   425890 <xmlStrEqual@plt+0x21950>
  406e56:	movzx  eax,ax
  406e59:	mov    DWORD PTR [rsp+0x8],eax
  406e5d:	cmp    eax,0xa
  406e60:	jne    406e7c <xmlStrEqual@plt+0x2f3c>
  406e62:	mov    rax,0x474dc0
  406e69:	mov    eax,DWORD PTR [rax]
  406e6b:	test   eax,eax
  406e6d:	je     4073f0 <xmlStrEqual@plt+0x34b0>
  406e73:	cmp    eax,0x1
  406e76:	je     40741a <xmlStrEqual@plt+0x34da>
  406e7c:	mov    rdi,r14
  406e7f:	call   43f8c0 <xmlStrEqual@plt+0x3b980>
  406e84:	mov    QWORD PTR [rsp+0x18],rax
  406e89:	test   rax,rax
  406e8c:	je     407470 <xmlStrEqual@plt+0x3530>
  406e92:	mov    rdi,QWORD PTR [rsp+0x18]
  406e97:	call   43ef10 <xmlStrEqual@plt+0x3afd0>
  406e9c:	mov    rdx,rax
  406e9f:	test   rax,rax
  406ea2:	je     4073b8 <xmlStrEqual@plt+0x3478>
  406ea8:	mov    esi,DWORD PTR [rsp+0x8]
  406eac:	mov    rdi,rdx
  406eaf:	mov    QWORD PTR [rsp+0x30],rdx
  406eb4:	call   43f490 <xmlStrEqual@plt+0x3b550>
  406eb9:	mov    rdx,QWORD PTR [rsp+0x30]
  406ebe:	mov    esi,DWORD PTR [rsp+0x8]
  406ec2:	mov    rdi,rdx
  406ec5:	mov    QWORD PTR [rsp+0x8],rdx
  406eca:	call   43f430 <xmlStrEqual@plt+0x3b4f0>
  406ecf:	mov    rsi,rax
  406ed2:	mov    rdi,r14
  406ed5:	call   425310 <xmlStrEqual@plt+0x213d0>
  406eda:	test   eax,eax
  406edc:	mov    rdx,QWORD PTR [rsp+0x8]
  406ee1:	jne    407398 <xmlStrEqual@plt+0x3458>
  406ee7:	movzx  eax,BYTE PTR [rbp+0x14]
  406eeb:	mov    r9d,DWORD PTR [rbp+0xc]
  406eef:	mov    r8d,DWORD PTR [rbp+0x8]
  406ef3:	movzx  esi,BYTE PTR [rdx+0xc]
  406ef7:	push   rax
  406ef8:	mov    rdi,r13
  406efb:	movzx  r9d,r9b
  406eff:	movzx  eax,BYTE PTR [rbp+0x10]
  406f03:	movzx  r8d,r8b
  406f07:	push   rax
  406f08:	mov    ecx,0x1
  406f0d:	mov    edx,0x1
  406f12:	call   42a830 <xmlStrEqual@plt+0x268f0>
  406f17:	mov    r13,rax
  406f1a:	pop    r11
  406f1c:	pop    rax
  406f1d:	test   r13,r13
  406f20:	je     406f80 <xmlStrEqual@plt+0x3040>
  406f22:	mov    rax,QWORD PTR [rsp+0x48]
  406f27:	mov    eax,DWORD PTR [rax]
  406f29:	test   eax,eax
  406f2b:	je     407498 <xmlStrEqual@plt+0x3558>
  406f31:	cmp    eax,0x3
  406f34:	je     407498 <xmlStrEqual@plt+0x3558>
  406f3a:	nop    WORD PTR [rax+rax*1+0x0]
  406f40:	mov    rsi,QWORD PTR [rsp+0x20]
  406f45:	mov    rdi,r13
  406f48:	call   42dcf0 <xmlStrEqual@plt+0x29db0>
  406f4d:	mov    rax,0x469e3c
  406f54:	cmp    DWORD PTR [rax],0x1
  406f57:	jle    406f80 <xmlStrEqual@plt+0x3040>
  406f59:	mov    rdi,r13
  406f5c:	call   42a8c0 <xmlStrEqual@plt+0x26980>
  406f61:	mov    rdx,rax
  406f64:	lea    rsi,[rip+0x410d5]        # 448040 <xmlStrEqual@plt+0x44100>
  406f6b:	mov    edi,0x6
  406f70:	xor    eax,eax
  406f72:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  406f77:	nop    WORD PTR [rax+rax*1+0x0]
  406f80:	mov    rbx,QWORD PTR [rbx+0x8]
  406f84:	cmp    QWORD PTR [rsp],rbx
  406f88:	je     406ff0 <xmlStrEqual@plt+0x30b0>
  406f8a:	mov    eax,DWORD PTR [r15]
  406f8d:	mov    r13,QWORD PTR [rbx+0x10]
  406f91:	test   eax,eax
  406f93:	je     406e20 <xmlStrEqual@plt+0x2ee0>
  406f99:	mov    rdi,r13
  406f9c:	call   4255a0 <xmlStrEqual@plt+0x21660>
  406fa1:	mov    rdi,rax
  406fa4:	call   425890 <xmlStrEqual@plt+0x21950>
  406fa9:	movzx  eax,ax
  406fac:	cmp    eax,DWORD PTR [r15]
  406faf:	je     406e20 <xmlStrEqual@plt+0x2ee0>
  406fb5:	mov    rax,0x469e3c
  406fbc:	mov    eax,DWORD PTR [rax]
  406fbe:	test   eax,eax
  406fc0:	jle    406f80 <xmlStrEqual@plt+0x3040>
  406fc2:	mov    rdi,r13
  406fc5:	call   424d40 <xmlStrEqual@plt+0x20e00>
  406fca:	mov    rdx,rax
  406fcd:	lea    rsi,[rip+0x40d7c]        # 447d50 <xmlStrEqual@plt+0x43e10>
  406fd4:	mov    edi,0x5
  406fd9:	xor    eax,eax
  406fdb:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  406fe0:	mov    rbx,QWORD PTR [rbx+0x8]
  406fe4:	cmp    QWORD PTR [rsp],rbx
  406fe8:	jne    406f8a <xmlStrEqual@plt+0x304a>
  406fea:	nop    WORD PTR [rax+rax*1+0x0]
  406ff0:	mov    r13,QWORD PTR [rsp+0x20]
  406ff5:	mov    r14d,r12d
  406ff8:	mov    rdi,QWORD PTR [rsp]
  406ffc:	call   42e2b0 <xmlStrEqual@plt+0x2a370>
  407001:	mov    rbx,QWORD PTR [r13+0x8]
  407005:	cmp    rbx,r13
  407008:	je     407360 <xmlStrEqual@plt+0x3420>
  40700e:	mov    r15,QWORD PTR [rsp+0x40]
  407013:	mov    r12,QWORD PTR [rsp+0x50]
  407018:	jmp    40707a <xmlStrEqual@plt+0x313a>
  40701a:	nop    WORD PTR [rax+rax*1+0x0]
  407020:	mov    rdi,r12
  407023:	call   424d40 <xmlStrEqual@plt+0x20e00>
  407028:	mov    rdi,QWORD PTR [rbp+0x0]
  40702c:	mov    QWORD PTR [rsp],rax
  407030:	call   424d40 <xmlStrEqual@plt+0x20e00>
  407035:	mov    rcx,QWORD PTR [rsp]
  407039:	mov    rdx,rax
  40703c:	lea    rsi,[rip+0x41035]        # 448078 <xmlStrEqual@plt+0x44138>
  407043:	xor    eax,eax
  407045:	mov    edi,0x2
  40704a:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  40704f:	test   r15,r15
  407052:	je     407065 <xmlStrEqual@plt+0x3125>
  407054:	test   r14b,r14b
  407057:	je     407065 <xmlStrEqual@plt+0x3125>
  407059:	mov    rdi,QWORD PTR [r15+0x50]
  40705d:	mov    rsi,rbp
  407060:	call   42f240 <xmlStrEqual@plt+0x2b300>
  407065:	mov    rdi,rbp
  407068:	call   42a7f0 <xmlStrEqual@plt+0x268b0>
  40706d:	mov    rbx,QWORD PTR [rbx+0x8]
  407071:	cmp    rbx,r13
  407074:	je     407360 <xmlStrEqual@plt+0x3420>
  40707a:	mov    rbp,QWORD PTR [rbx+0x10]
  40707e:	test   rbp,rbp
  407081:	je     40706d <xmlStrEqual@plt+0x312d>
  407083:	mov    rsi,QWORD PTR [rbp+0x0]
  407087:	mov    rdi,r12
  40708a:	call   42b790 <xmlStrEqual@plt+0x27850>
  40708f:	test   rax,rax
  407092:	jne    407020 <xmlStrEqual@plt+0x30e0>
  407094:	mov    rsi,rbp
  407097:	mov    rdi,r12
  40709a:	call   42b7b0 <xmlStrEqual@plt+0x27870>
  40709f:	cmp    eax,0x1
  4070a2:	je     40706d <xmlStrEqual@plt+0x312d>
  4070a4:	mov    rax,0x469e3c
  4070ab:	mov    r8d,DWORD PTR [rax]
  4070ae:	test   r8d,r8d
  4070b1:	jle    4070e2 <xmlStrEqual@plt+0x31a2>
  4070b3:	mov    rdi,r12
  4070b6:	call   424d40 <xmlStrEqual@plt+0x20e00>
  4070bb:	mov    rdi,QWORD PTR [rbp+0x0]
  4070bf:	mov    QWORD PTR [rsp],rax
  4070c3:	call   424d40 <xmlStrEqual@plt+0x20e00>
  4070c8:	mov    rcx,QWORD PTR [rsp]
  4070cc:	mov    rdx,rax
  4070cf:	lea    rsi,[rip+0x40ffa]        # 4480d0 <xmlStrEqual@plt+0x44190>
  4070d6:	mov    edi,0x5
  4070db:	xor    eax,eax
  4070dd:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  4070e2:	test   r15,r15
  4070e5:	jne    407054 <xmlStrEqual@plt+0x3114>
  4070eb:	jmp    407065 <xmlStrEqual@plt+0x3125>
  4070f0:	xor    r15d,r15d
  4070f3:	add    rsp,0x68
  4070f7:	pop    rbx
  4070f8:	pop    rbp
  4070f9:	pop    r12
  4070fb:	pop    r13
  4070fd:	pop    r14
  4070ff:	mov    rax,r15
  407102:	pop    r15
  407104:	ret    
  407105:	nop    DWORD PTR [rax]
  407108:	mov    r9d,DWORD PTR [rbp+0xc]
  40710c:	mov    r8d,DWORD PTR [rbp+0x8]
  407110:	push   0x0
  407112:	movzx  r9d,r9b
  407116:	mov    rdi,r13
  407119:	push   0xff
  40711e:	movzx  r8d,r8b
  407122:	mov    ecx,0x1
  407127:	mov    esi,0x1
  40712c:	call   42a830 <xmlStrEqual@plt+0x268f0>
  407131:	pop    r9
  407133:	mov    r13,rax
  407136:	pop    r10
  407138:	test   rax,rax
  40713b:	je     406f80 <xmlStrEqual@plt+0x3040>
  407141:	jmp    406f40 <xmlStrEqual@plt+0x3000>
  407146:	nop    WORD PTR cs:[rax+rax*1+0x0]
  407150:	mov    rdi,r13
  407153:	call   4255a0 <xmlStrEqual@plt+0x21660>
  407158:	mov    r14,rax
  40715b:	test   rax,rax
  40715e:	jne    406e4e <xmlStrEqual@plt+0x2f0e>
  407164:	mov    rdi,r13
  407167:	call   424d40 <xmlStrEqual@plt+0x20e00>
  40716c:	mov    rdx,rax
  40716f:	lea    rsi,[rip+0x40c82]        # 447df8 <xmlStrEqual@plt+0x43eb8>
  407176:	mov    edi,0x2
  40717b:	xor    eax,eax
  40717d:	mov    r14d,r12d
  407180:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  407185:	nop    DWORD PTR [rax]
  407188:	mov    rax,QWORD PTR [rsp+0x10]
  40718d:	mov    rcx,QWORD PTR [rsp+0x28]
  407192:	mov    rax,QWORD PTR [rax+0x8]
  407196:	mov    QWORD PTR [rsp+0x10],rax
  40719b:	cmp    QWORD PTR [rcx+0x10],rax
  40719f:	jne    406da0 <xmlStrEqual@plt+0x2e60>
  4071a5:	cmp    BYTE PTR [rsp+0x5c],0x0
  4071aa:	mov    r15,QWORD PTR [rsp+0x50]
  4071af:	je     4070f3 <xmlStrEqual@plt+0x31b3>
  4071b5:	mov    rax,QWORD PTR [rsp+0x28]
  4071ba:	mov    rax,QWORD PTR [rax+0x18]
  4071be:	mov    rbx,QWORD PTR [rax+0x8]
  4071c2:	cmp    rax,rbx
  4071c5:	je     4070f3 <xmlStrEqual@plt+0x31b3>
  4071cb:	mov    r14,QWORD PTR [rsp+0x40]
  4071d0:	mov    r12,QWORD PTR [rsp+0x28]
  4071d5:	jmp    407235 <xmlStrEqual@plt+0x32f5>
  4071d7:	nop    WORD PTR [rax+rax*1+0x0]
  4071e0:	mov    rdi,r15
  4071e3:	call   424d40 <xmlStrEqual@plt+0x20e00>
  4071e8:	mov    rdi,QWORD PTR [rbp+0x0]
  4071ec:	mov    r13,rax
  4071ef:	call   424d40 <xmlStrEqual@plt+0x20e00>
  4071f4:	mov    rdx,rax
  4071f7:	mov    rcx,r13
  4071fa:	xor    eax,eax
  4071fc:	lea    rsi,[rip+0x40e75]        # 448078 <xmlStrEqual@plt+0x44138>
  407203:	mov    edi,0x2
  407208:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  40720d:	test   r14,r14
  407210:	je     40721e <xmlStrEqual@plt+0x32de>
  407212:	mov    rdi,QWORD PTR [r14+0x50]
  407216:	mov    rsi,rbp
  407219:	call   42f240 <xmlStrEqual@plt+0x2b300>
  40721e:	mov    rdi,rbp
  407221:	call   42a7f0 <xmlStrEqual@plt+0x268b0>
  407226:	mov    rbx,QWORD PTR [rbx+0x8]
  40722a:	cmp    QWORD PTR [r12+0x18],rbx
  40722f:	je     4070f3 <xmlStrEqual@plt+0x31b3>
  407235:	mov    r13,QWORD PTR [rbx+0x10]
  407239:	test   r13,r13
  40723c:	je     407226 <xmlStrEqual@plt+0x32e6>
  40723e:	mov    rax,0x4757c0
  407245:	mov    eax,DWORD PTR [rax]
  407247:	test   eax,eax
  407249:	je     407255 <xmlStrEqual@plt+0x3315>
  40724b:	cmp    eax,DWORD PTR [r13+0x8]
  40724f:	jne    407500 <xmlStrEqual@plt+0x35c0>
  407255:	mov    esi,DWORD PTR [r13+0x10]
  407259:	mov    edi,DWORD PTR [r13+0xc]
  40725d:	call   405bf0 <xmlStrEqual@plt+0x1cb0>
  407262:	cmp    eax,0x1
  407265:	jne    407226 <xmlStrEqual@plt+0x32e6>
  407267:	mov    rdi,QWORD PTR [r13+0x0]
  40726b:	call   43ef10 <xmlStrEqual@plt+0x3afd0>
  407270:	mov    rbp,rax
  407273:	test   rax,rax
  407276:	je     4075b0 <xmlStrEqual@plt+0x3670>
  40727c:	mov    esi,DWORD PTR [r13+0x8]
  407280:	mov    rdi,rbp
  407283:	call   43f490 <xmlStrEqual@plt+0x3b550>
  407288:	mov    rdi,QWORD PTR [rbp+0x18]
  40728c:	movzx  eax,BYTE PTR [r13+0x18]
  407291:	cmp    DWORD PTR [r13+0x8],0x2
  407296:	cmove  rdi,QWORD PTR [rbp+0x10]
  40729b:	mov    r9d,DWORD PTR [r13+0x10]
  40729f:	mov    r8d,DWORD PTR [r13+0xc]
  4072a3:	movzx  esi,BYTE PTR [rbp+0xc]
  4072a7:	push   rax
  4072a8:	mov    ecx,0x1
  4072ad:	mov    edx,0x1
  4072b2:	movzx  eax,BYTE PTR [r13+0x14]
  4072b7:	movzx  r9d,r9b
  4072bb:	push   rax
  4072bc:	movzx  r8d,r8b
  4072c0:	call   42a830 <xmlStrEqual@plt+0x268f0>
  4072c5:	mov    rbp,rax
  4072c8:	mov    rax,0x469e3c
  4072cf:	pop    rdx
  4072d0:	cmp    DWORD PTR [rax],0x1
  4072d3:	pop    rcx
  4072d4:	jle    4072f4 <xmlStrEqual@plt+0x33b4>
  4072d6:	mov    rdi,rbp
  4072d9:	call   42a8c0 <xmlStrEqual@plt+0x26980>
  4072de:	mov    rdx,rax
  4072e1:	lea    rsi,[rip+0x40d58]        # 448040 <xmlStrEqual@plt+0x44100>
  4072e8:	mov    edi,0x6
  4072ed:	xor    eax,eax
  4072ef:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  4072f4:	test   rbp,rbp
  4072f7:	je     407226 <xmlStrEqual@plt+0x32e6>
  4072fd:	mov    rax,QWORD PTR [rsp+0x48]
  407302:	mov    eax,DWORD PTR [rax]
  407304:	test   eax,eax
  407306:	je     4076a4 <xmlStrEqual@plt+0x3764>
  40730c:	cmp    eax,0x3
  40730f:	je     4076a4 <xmlStrEqual@plt+0x3764>
  407315:	mov    rsi,QWORD PTR [rbp+0x0]
  407319:	mov    rdi,r15
  40731c:	call   42b790 <xmlStrEqual@plt+0x27850>
  407321:	test   rax,rax
  407324:	jne    4071e0 <xmlStrEqual@plt+0x32a0>
  40732a:	mov    rsi,rbp
  40732d:	mov    rdi,r15
  407330:	call   42b7b0 <xmlStrEqual@plt+0x27870>
  407335:	cmp    eax,0x1
  407338:	je     407226 <xmlStrEqual@plt+0x32e6>
  40733e:	mov    rax,0x469e3c
  407345:	mov    eax,DWORD PTR [rax]
  407347:	test   eax,eax
  407349:	jg     407658 <xmlStrEqual@plt+0x3718>
  40734f:	test   r14,r14
  407352:	jne    407212 <xmlStrEqual@plt+0x32d2>
  407358:	jmp    40721e <xmlStrEqual@plt+0x32de>
  40735d:	nop    DWORD PTR [rax]
  407360:	mov    rdi,r13
  407363:	call   42e2b0 <xmlStrEqual@plt+0x2a370>
  407368:	jmp    407188 <xmlStrEqual@plt+0x3248>
  40736d:	nop    DWORD PTR [rax]
  407370:	mov    rdi,r13
  407373:	call   424d40 <xmlStrEqual@plt+0x20e00>
  407378:	mov    rdx,rax
  40737b:	lea    rsi,[rip+0x40a36]        # 447db8 <xmlStrEqual@plt+0x43e78>
  407382:	mov    edi,0x2
  407387:	xor    eax,eax
  407389:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  40738e:	jmp    406f80 <xmlStrEqual@plt+0x3040>
  407393:	nop    DWORD PTR [rax+rax*1+0x0]
  407398:	mov    rdx,QWORD PTR [rsp+0x18]
  40739d:	lea    rsi,[rip+0x40bec]        # 447f90 <xmlStrEqual@plt+0x44050>
  4073a4:	mov    edi,0x2
  4073a9:	xor    eax,eax
  4073ab:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  4073b0:	jmp    406f80 <xmlStrEqual@plt+0x3040>
  4073b5:	nop    DWORD PTR [rax]
  4073b8:	mov    rdi,QWORD PTR [rsp+0x18]
  4073bd:	call   43ee00 <xmlStrEqual@plt+0x3aec0>
  4073c2:	mov    rdx,rax
  4073c5:	test   rax,rax
  4073c8:	jne    406ea8 <xmlStrEqual@plt+0x2f68>
  4073ce:	mov    rdx,QWORD PTR [rsp+0x18]
  4073d3:	lea    rsi,[rip+0x40b7e]        # 447f58 <xmlStrEqual@plt+0x44018>
  4073da:	mov    edi,0x2
  4073df:	xor    eax,eax
  4073e1:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  4073e6:	jmp    406f80 <xmlStrEqual@plt+0x3040>
  4073eb:	nop    DWORD PTR [rax+rax*1+0x0]
  4073f0:	mov    rdi,r14
  4073f3:	call   425cf0 <xmlStrEqual@plt+0x21db0>
  4073f8:	mov    eax,DWORD PTR [rax]
  4073fa:	and    eax,0xe0
  4073ff:	cmp    eax,0x20
  407402:	jne    407550 <xmlStrEqual@plt+0x3610>
  407408:	mov    rax,0x474dc0
  40740f:	mov    eax,DWORD PTR [rax]
  407411:	cmp    eax,0x1
  407414:	jne    406e7c <xmlStrEqual@plt+0x2f3c>
  40741a:	mov    rdi,r14
  40741d:	call   425cf0 <xmlStrEqual@plt+0x21db0>
  407422:	mov    eax,DWORD PTR [rax]
  407424:	mov    edx,eax
  407426:	and    edx,0xc0ff
  40742c:	cmp    edx,0xc0fe
  407432:	je     406e7c <xmlStrEqual@plt+0x2f3c>
  407438:	and    eax,0xfe
  40743d:	cmp    eax,0xfc
  407442:	je     406e7c <xmlStrEqual@plt+0x2f3c>
  407448:	mov    rdi,r14
  40744b:	call   424d40 <xmlStrEqual@plt+0x20e00>
  407450:	mov    rdx,rax
  407453:	lea    rsi,[rip+0x40a4e]        # 447ea8 <xmlStrEqual@plt+0x43f68>
  40745a:	mov    edi,0x2
  40745f:	xor    eax,eax
  407461:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  407466:	jmp    406f80 <xmlStrEqual@plt+0x3040>
  40746b:	nop    DWORD PTR [rax+rax*1+0x0]
  407470:	mov    rdi,r14
  407473:	call   424d40 <xmlStrEqual@plt+0x20e00>
  407478:	mov    rdx,rax
  40747b:	lea    rsi,[rip+0x40a9e]        # 447f20 <xmlStrEqual@plt+0x43fe0>
  407482:	mov    edi,0x2
  407487:	xor    eax,eax
  407489:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  40748e:	jmp    406f80 <xmlStrEqual@plt+0x3040>
  407493:	nop    DWORD PTR [rax+rax*1+0x0]
  407498:	mov    rax,0x475850
  40749f:	mov    rdi,QWORD PTR [rax]
  4074a2:	call   410cf0 <xmlStrEqual@plt+0xcdb0>
  4074a7:	mov    rdi,QWORD PTR [rax+0x50]
  4074ab:	mov    rsi,QWORD PTR [rsp+0x18]
  4074b0:	mov    QWORD PTR [rsp+0x8],rax
  4074b5:	call   43aca0 <xmlStrEqual@plt+0x36d60>
  4074ba:	test   rax,rax
  4074bd:	mov    rcx,rax
  4074c0:	mov    rdx,QWORD PTR [rsp+0x8]
  4074c5:	je     4076e8 <xmlStrEqual@plt+0x37a8>
  4074cb:	mov    rdi,r14
  4074ce:	mov    QWORD PTR [rsp+0x8],rcx
  4074d3:	call   425890 <xmlStrEqual@plt+0x21950>
  4074d8:	cmp    ax,0x2
  4074dc:	mov    rcx,QWORD PTR [rsp+0x8]
  4074e1:	je     407693 <xmlStrEqual@plt+0x3753>
  4074e7:	mov    rsi,QWORD PTR [rcx+0x18]
  4074eb:	mov    rdi,r13
  4074ee:	call   42dcf0 <xmlStrEqual@plt+0x29db0>
  4074f3:	jmp    406f40 <xmlStrEqual@plt+0x3000>
  4074f8:	nop    DWORD PTR [rax+rax*1+0x0]
  407500:	mov    rax,0x469e3c
  407507:	mov    edi,DWORD PTR [rax]
  407509:	test   edi,edi
  40750b:	jle    407226 <xmlStrEqual@plt+0x32e6>
  407511:	mov    rdx,QWORD PTR [r13+0x0]
  407515:	lea    rsi,[rip+0x40c1c]        # 448138 <xmlStrEqual@plt+0x441f8>
  40751c:	mov    edi,0x5
  407521:	xor    eax,eax
  407523:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  407528:	jmp    407226 <xmlStrEqual@plt+0x32e6>
  40752d:	nop    DWORD PTR [rax]
  407530:	mov    rax,0x475850
  407537:	mov    rdi,QWORD PTR [rax]
  40753a:	call   410cf0 <xmlStrEqual@plt+0xcdb0>
  40753f:	mov    QWORD PTR [rsp+0x40],rax
  407544:	jmp    406cc4 <xmlStrEqual@plt+0x2d84>
  407549:	nop    DWORD PTR [rax+0x0]
  407550:	mov    rdi,r14
  407553:	call   424d40 <xmlStrEqual@plt+0x20e00>
  407558:	mov    rdx,rax
  40755b:	lea    rsi,[rip+0x408d6]        # 447e38 <xmlStrEqual@plt+0x43ef8>
  407562:	mov    edi,0x2
  407567:	xor    eax,eax
  407569:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  40756e:	jmp    406f80 <xmlStrEqual@plt+0x3040>
  407573:	nop    DWORD PTR [rax+rax*1+0x0]
  407578:	mov    rdi,rbx
  40757b:	call   424bf0 <xmlStrEqual@plt+0x20cb0>
  407580:	mov    rdi,rbp
  407583:	call   42e2b0 <xmlStrEqual@plt+0x2a370>
  407588:	mov    rax,QWORD PTR [rsp+0x28]
  40758d:	mov    rax,QWORD PTR [rax+0x10]
  407591:	mov    rcx,QWORD PTR [rax+0x8]
  407595:	mov    QWORD PTR [rsp+0x10],rcx
  40759a:	cmp    rcx,rax
  40759d:	jne    406d91 <xmlStrEqual@plt+0x2e51>
  4075a3:	jmp    4070f3 <xmlStrEqual@plt+0x31b3>
  4075a8:	nop    DWORD PTR [rax+rax*1+0x0]
  4075b0:	mov    rdi,QWORD PTR [r13+0x0]
  4075b4:	call   43ee00 <xmlStrEqual@plt+0x3aec0>
  4075b9:	mov    rbp,rax
  4075bc:	test   rax,rax
  4075bf:	jne    40727c <xmlStrEqual@plt+0x333c>
  4075c5:	mov    rax,0x469e3c
  4075cc:	mov    esi,DWORD PTR [rax]
  4075ce:	test   esi,esi
  4075d0:	jle    407226 <xmlStrEqual@plt+0x32e6>
  4075d6:	mov    rdx,QWORD PTR [r13+0x0]
  4075da:	lea    rsi,[rip+0x40bc7]        # 4481a8 <xmlStrEqual@plt+0x44268>
  4075e1:	mov    edi,0x5
  4075e6:	xor    eax,eax
  4075e8:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  4075ed:	jmp    407226 <xmlStrEqual@plt+0x32e6>
  4075f2:	nop    WORD PTR [rax+rax*1+0x0]
  4075f8:	mov    edx,edi
  4075fa:	xor    eax,eax
  4075fc:	mov    ecx,0xffffff
  407601:	lea    rsi,[rip+0x406c0]        # 447cc8 <xmlStrEqual@plt+0x43d88>
  407608:	mov    edi,0x2
  40760d:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  407612:	mov    rax,QWORD PTR [rsp+0x28]
  407617:	mov    DWORD PTR [rax+0xc],0x0
  40761e:	mov    rdi,rbx
  407621:	call   425060 <xmlStrEqual@plt+0x21120>
  407626:	mov    rbx,rax
  407629:	mov    rax,QWORD PTR [rsp+0x28]
  40762e:	mov    edx,DWORD PTR [rax+0x8]
  407631:	test   edx,edx
  407633:	jg     406d38 <xmlStrEqual@plt+0x2df8>
  407639:	mov    DWORD PTR [rax+0x8],0x1
  407640:	lea    rsi,[rip+0x406c9]        # 447d10 <xmlStrEqual@plt+0x43dd0>
  407647:	mov    edi,0x3
  40764c:	xor    eax,eax
  40764e:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  407653:	jmp    406d38 <xmlStrEqual@plt+0x2df8>
  407658:	mov    rdi,r15
  40765b:	call   424d40 <xmlStrEqual@plt+0x20e00>
  407660:	mov    rdi,QWORD PTR [rbp+0x0]
  407664:	mov    r13,rax
  407667:	call   424d40 <xmlStrEqual@plt+0x20e00>
  40766c:	mov    rdx,rax
  40766f:	mov    rcx,r13
  407672:	xor    eax,eax
  407674:	lea    rsi,[rip+0x40a55]        # 4480d0 <xmlStrEqual@plt+0x44190>
  40767b:	mov    edi,0x5
  407680:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  407685:	test   r14,r14
  407688:	jne    407212 <xmlStrEqual@plt+0x32d2>
  40768e:	jmp    40721e <xmlStrEqual@plt+0x32de>
  407693:	mov    rsi,QWORD PTR [rcx+0x10]
  407697:	mov    rdi,r13
  40769a:	call   42dcf0 <xmlStrEqual@plt+0x29db0>
  40769f:	jmp    406f40 <xmlStrEqual@plt+0x3000>
  4076a4:	mov    rax,0x475850
  4076ab:	mov    rdi,QWORD PTR [rax]
  4076ae:	call   410cf0 <xmlStrEqual@plt+0xcdb0>
  4076b3:	mov    rdi,QWORD PTR [rax+0x50]
  4076b7:	mov    rsi,QWORD PTR [r13+0x0]
  4076bb:	mov    QWORD PTR [rsp],rax
  4076bf:	call   43aca0 <xmlStrEqual@plt+0x36d60>
  4076c4:	test   rax,rax
  4076c7:	mov    rcx,rax
  4076ca:	mov    rdx,QWORD PTR [rsp]
  4076ce:	je     40773a <xmlStrEqual@plt+0x37fa>
  4076d0:	cmp    DWORD PTR [r13+0x8],0x2
  4076d5:	je     407729 <xmlStrEqual@plt+0x37e9>
  4076d7:	mov    rsi,QWORD PTR [rcx+0x18]
  4076db:	mov    rdi,rbp
  4076de:	call   42dcf0 <xmlStrEqual@plt+0x29db0>
  4076e3:	jmp    407315 <xmlStrEqual@plt+0x33d5>
  4076e8:	mov    rdi,QWORD PTR [rsp+0x18]
  4076ed:	mov    QWORD PTR [rsp+0x30],rdx
  4076f2:	call   42efa0 <xmlStrEqual@plt+0x2b060>
  4076f7:	mov    rdi,QWORD PTR [rsp+0x18]
  4076fc:	mov    QWORD PTR [rsp+0x8],rax
  407701:	call   403ed0 <strdup@plt>
  407706:	mov    rdx,QWORD PTR [rsp+0x30]
  40770b:	mov    rcx,QWORD PTR [rsp+0x8]
  407710:	mov    rdi,QWORD PTR [rdx+0x50]
  407714:	mov    rsi,rax
  407717:	mov    rdx,rcx
  40771a:	call   43a0e0 <xmlStrEqual@plt+0x361a0>
  40771f:	mov    rcx,QWORD PTR [rsp+0x8]
  407724:	jmp    4074cb <xmlStrEqual@plt+0x358b>
  407729:	mov    rsi,QWORD PTR [rcx+0x10]
  40772d:	mov    rdi,rbp
  407730:	call   42dcf0 <xmlStrEqual@plt+0x29db0>
  407735:	jmp    407315 <xmlStrEqual@plt+0x33d5>
  40773a:	mov    rdi,QWORD PTR [r13+0x0]
  40773e:	mov    QWORD PTR [rsp+0x8],rdx
  407743:	call   42efa0 <xmlStrEqual@plt+0x2b060>
  407748:	mov    rdi,QWORD PTR [r13+0x0]
  40774c:	mov    QWORD PTR [rsp],rax
  407750:	call   403ed0 <strdup@plt>
  407755:	mov    rdx,QWORD PTR [rsp+0x8]
  40775a:	mov    rcx,QWORD PTR [rsp]
  40775e:	mov    rdi,QWORD PTR [rdx+0x50]
  407762:	mov    rsi,rax
  407765:	mov    rdx,rcx
  407768:	call   43a0e0 <xmlStrEqual@plt+0x361a0>
  40776d:	mov    rcx,QWORD PTR [rsp]
  407771:	jmp    4076d0 <xmlStrEqual@plt+0x3790>
  407776:	nop    WORD PTR cs:[rax+rax*1+0x0]
  407780:	endbr64 
  407784:	push   r13
  407786:	push   r12
  407788:	push   rbp
  407789:	mov    rbp,rsi
  40778c:	push   rbx
  40778d:	mov    rbx,rdi
  407790:	sub    rsp,0x8
  407794:	call   434ad0 <xmlStrEqual@plt+0x30b90>
  407799:	test   rbx,rbx
  40779c:	je     407860 <xmlStrEqual@plt+0x3920>
  4077a2:	mov    rdi,QWORD PTR [rbp+0x70]
  4077a6:	mov    rsi,rax
  4077a9:	mov    r13,rax
  4077ac:	call   408fe0 <xmlStrEqual@plt+0x50a0>
  4077b1:	test   rax,rax
  4077b4:	je     4077f8 <xmlStrEqual@plt+0x38b8>
  4077b6:	mov    rdi,r13
  4077b9:	call   424d40 <xmlStrEqual@plt+0x20e00>
  4077be:	mov    rdx,rax
  4077c1:	lea    rsi,[rip+0x40a60]        # 448228 <xmlStrEqual@plt+0x442e8>
  4077c8:	mov    edi,0x2
  4077cd:	xor    eax,eax
  4077cf:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  4077d4:	mov    rdi,QWORD PTR [rbp+0x50]
  4077d8:	mov    rsi,rbx
  4077db:	call   42f340 <xmlStrEqual@plt+0x2b400>
  4077e0:	add    rsp,0x8
  4077e4:	pop    rbx
  4077e5:	xor    r12d,r12d
  4077e8:	pop    rbp
  4077e9:	mov    eax,r12d
  4077ec:	pop    r12
  4077ee:	pop    r13
  4077f0:	ret    
  4077f1:	nop    DWORD PTR [rax+0x0]
  4077f8:	mov    rdi,QWORD PTR [rbp+0x70]
  4077fc:	mov    rsi,rbx
  4077ff:	call   408dd0 <xmlStrEqual@plt+0x4e90>
  407804:	mov    r12d,eax
  407807:	cmp    eax,0x1
  40780a:	jne    407888 <xmlStrEqual@plt+0x3948>
  40780c:	mov    rax,0x469e3c
  407813:	mov    eax,DWORD PTR [rax]
  407815:	test   eax,eax
  407817:	jg     407838 <xmlStrEqual@plt+0x38f8>
  407819:	mov    rdi,QWORD PTR [rbp+0x50]
  40781d:	mov    rsi,rbx
  407820:	call   42f190 <xmlStrEqual@plt+0x2b250>
  407825:	add    rsp,0x8
  407829:	pop    rbx
  40782a:	pop    rbp
  40782b:	mov    eax,r12d
  40782e:	pop    r12
  407830:	pop    r13
  407832:	ret    
  407833:	nop    DWORD PTR [rax+rax*1+0x0]
  407838:	mov    rdi,r13
  40783b:	call   424d40 <xmlStrEqual@plt+0x20e00>
  407840:	mov    rdx,rax
  407843:	lea    rsi,[rip+0x4098e]        # 4481d8 <xmlStrEqual@plt+0x44298>
  40784a:	mov    edi,0x5
  40784f:	xor    eax,eax
  407851:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  407856:	jmp    407819 <xmlStrEqual@plt+0x38d9>
  407858:	nop    DWORD PTR [rax+rax*1+0x0]
  407860:	xor    eax,eax
  407862:	lea    rsi,[rip+0x40e54]        # 4486bd <xmlStrEqual@plt+0x4477d>
  407869:	mov    edi,0x2
  40786e:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  407873:	add    rsp,0x8
  407877:	pop    rbx
  407878:	xor    r12d,r12d
  40787b:	pop    rbp
  40787c:	mov    eax,r12d
  40787f:	pop    r12
  407881:	pop    r13
  407883:	ret    
  407884:	nop    DWORD PTR [rax+0x0]
  407888:	mov    rdi,r13
  40788b:	call   424d40 <xmlStrEqual@plt+0x20e00>
  407890:	mov    rdx,rax
  407893:	lea    rsi,[rip+0x40966]        # 448200 <xmlStrEqual@plt+0x442c0>
  40789a:	mov    edi,0x2
  40789f:	xor    eax,eax
  4078a1:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  4078a6:	jmp    4077d4 <xmlStrEqual@plt+0x3894>
  4078ab:	nop    DWORD PTR [rax+rax*1+0x0]
  4078b0:	endbr64 
  4078b4:	push   r14
  4078b6:	test   rdx,rdx
  4078b9:	push   r13
  4078bb:	push   r12
  4078bd:	push   rbp
  4078be:	mov    rbp,rdx
  4078c1:	sete   dl
  4078c4:	test   rcx,rcx
  4078c7:	sete   al
  4078ca:	or     dl,al
  4078cc:	push   rbx
  4078cd:	jne    407990 <xmlStrEqual@plt+0x3a50>
  4078d3:	mov    rbx,rsi
  4078d6:	test   rsi,rsi
  4078d9:	je     407990 <xmlStrEqual@plt+0x3a50>
  4078df:	mov    r13,rdi
  4078e2:	mov    rdi,QWORD PTR [rdi+0x30]
  4078e6:	mov    r12,rcx
  4078e9:	call   43aca0 <xmlStrEqual@plt+0x36d60>
  4078ee:	test   rax,rax
  4078f1:	je     407920 <xmlStrEqual@plt+0x39e0>
  4078f3:	mov    rdx,rbx
  4078f6:	lea    rsi,[rip+0x409ab]        # 4482a8 <xmlStrEqual@plt+0x44368>
  4078fd:	mov    edi,0x2
  407902:	xor    eax,eax
  407904:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  407909:	xor    ebx,ebx
  40790b:	mov    eax,ebx
  40790d:	pop    rbx
  40790e:	pop    rbp
  40790f:	pop    r12
  407911:	pop    r13
  407913:	pop    r14
  407915:	ret    
  407916:	nop    WORD PTR cs:[rax+rax*1+0x0]
  407920:	mov    rdi,rbp
  407923:	call   4067f0 <xmlStrEqual@plt+0x28b0>
  407928:	mov    r14,rax
  40792b:	test   rax,rax
  40792e:	je     4079c6 <xmlStrEqual@plt+0x3a86>
  407934:	mov    eax,DWORD PTR [rax+0x18]
  407937:	test   eax,eax
  407939:	je     4079c6 <xmlStrEqual@plt+0x3a86>
  40793f:	cmp    eax,0x1
  407942:	jg     4079b0 <xmlStrEqual@plt+0x3a70>
  407944:	mov    rax,QWORD PTR [r14+0x8]
  407948:	mov    rbp,QWORD PTR [rax+0x10]
  40794c:	mov    rdi,rbp
  40794f:	call   424d40 <xmlStrEqual@plt+0x20e00>
  407954:	mov    rdi,QWORD PTR [r13+0x38]
  407958:	mov    rsi,rax
  40795b:	call   43aca0 <xmlStrEqual@plt+0x36d60>
  407960:	test   rax,rax
  407963:	je     4079e0 <xmlStrEqual@plt+0x3aa0>
  407965:	mov    rdi,rbp
  407968:	call   424d40 <xmlStrEqual@plt+0x20e00>
  40796d:	mov    rdx,rax
  407970:	lea    rsi,[rip+0x409b1]        # 448328 <xmlStrEqual@plt+0x443e8>
  407977:	mov    edi,0x2
  40797c:	xor    eax,eax
  40797e:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  407983:	xor    ebx,ebx
  407985:	jmp    40790b <xmlStrEqual@plt+0x39cb>
  407987:	nop    WORD PTR [rax+rax*1+0x0]
  407990:	xor    eax,eax
  407992:	xor    ebx,ebx
  407994:	lea    rsi,[rip+0x408cd]        # 448268 <xmlStrEqual@plt+0x44328>
  40799b:	mov    edi,0x2
  4079a0:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  4079a5:	mov    eax,ebx
  4079a7:	pop    rbx
  4079a8:	pop    rbp
  4079a9:	pop    r12
  4079ab:	pop    r13
  4079ad:	pop    r14
  4079af:	ret    
  4079b0:	mov    rdx,rbp
  4079b3:	lea    rsi,[rip+0x4090e]        # 4482c8 <xmlStrEqual@plt+0x44388>
  4079ba:	mov    edi,0x2
  4079bf:	xor    eax,eax
  4079c1:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  4079c6:	mov    rdi,r14
  4079c9:	xor    ebx,ebx
  4079cb:	call   42e2b0 <xmlStrEqual@plt+0x2a370>
  4079d0:	mov    eax,ebx
  4079d2:	pop    rbx
  4079d3:	pop    rbp
  4079d4:	pop    r12
  4079d6:	pop    r13
  4079d8:	pop    r14
  4079da:	ret    
  4079db:	nop    DWORD PTR [rax+rax*1+0x0]
  4079e0:	mov    rsi,rbp
  4079e3:	mov    rdi,rbx
  4079e6:	mov    rdx,r12
  4079e9:	call   415270 <xmlStrEqual@plt+0x11330>
  4079ee:	mov    rbp,rax
  4079f1:	mov    rdi,r14
  4079f4:	call   42e2b0 <xmlStrEqual@plt+0x2a370>
  4079f9:	xor    ebx,ebx
  4079fb:	test   rbp,rbp
  4079fe:	je     40790b <xmlStrEqual@plt+0x39cb>
  407a04:	mov    rdi,QWORD PTR [rbp+0x0]
  407a08:	mov    ebx,0x1
  407a0d:	call   403ed0 <strdup@plt>
  407a12:	mov    rdi,QWORD PTR [r13+0x30]
  407a16:	mov    rdx,rbp
  407a19:	mov    rsi,rax
  407a1c:	call   43a0e0 <xmlStrEqual@plt+0x361a0>
  407a21:	mov    rdi,QWORD PTR [rbp+0x8]
  407a25:	call   424d40 <xmlStrEqual@plt+0x20e00>
  407a2a:	mov    rdi,rax
  407a2d:	call   403ed0 <strdup@plt>
  407a32:	mov    rdi,QWORD PTR [r13+0x38]
  407a36:	mov    rsi,rax
  407a39:	mov    rdx,rbp
  407a3c:	call   43a0e0 <xmlStrEqual@plt+0x361a0>
  407a41:	mov    rax,0x469e3c
  407a48:	mov    eax,DWORD PTR [rax]
  407a4a:	test   eax,eax
  407a4c:	jle    40790b <xmlStrEqual@plt+0x39cb>
  407a52:	mov    rdi,QWORD PTR [rbp+0x8]
  407a56:	call   424d40 <xmlStrEqual@plt+0x20e00>
  407a5b:	mov    rdx,QWORD PTR [rbp+0x0]
  407a5f:	mov    rcx,rax
  407a62:	lea    rsi,[rip+0x408ef]        # 448358 <xmlStrEqual@plt+0x44418>
  407a69:	mov    edi,0x5
  407a6e:	xor    eax,eax
  407a70:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  407a75:	jmp    40790b <xmlStrEqual@plt+0x39cb>
  407a7a:	nop    WORD PTR [rax+rax*1+0x0]
  407a80:	endbr64 
  407a84:	push   r15
  407a86:	push   r14
  407a88:	push   r13
  407a8a:	push   r12
  407a8c:	push   rbp
  407a8d:	push   rbx
  407a8e:	sub    rsp,0x8
  407a92:	test   rsi,rsi
  407a95:	je     407b90 <xmlStrEqual@plt+0x3c50>
  407a9b:	mov    r12,rdi
  407a9e:	mov    rdi,QWORD PTR [rdi+0x28]
  407aa2:	mov    r14,rsi
  407aa5:	mov    ebp,edx
  407aa7:	mov    r13,rcx
  407aaa:	call   43aca0 <xmlStrEqual@plt+0x36d60>
  407aaf:	test   rax,rax
  407ab2:	jne    407b48 <xmlStrEqual@plt+0x3c08>
  407ab8:	mov    ebx,DWORD PTR [r13+0x18]
  407abc:	test   ebx,ebx
  407abe:	je     407b78 <xmlStrEqual@plt+0x3c38>
  407ac4:	test   ebp,ebp
  407ac6:	jle    407c00 <xmlStrEqual@plt+0x3cc0>
  407acc:	mov    esi,ebp
  407ace:	mov    rdi,r14
  407ad1:	call   415300 <xmlStrEqual@plt+0x113c0>
  407ad6:	mov    r15,rax
  407ad9:	test   rax,rax
  407adc:	je     407c20 <xmlStrEqual@plt+0x3ce0>
  407ae2:	mov    rbx,QWORD PTR [r13+0x8]
  407ae6:	cmp    r13,rbx
  407ae9:	jne    407b09 <xmlStrEqual@plt+0x3bc9>
  407aeb:	jmp    407bb0 <xmlStrEqual@plt+0x3c70>
  407af0:	mov    rsi,QWORD PTR [r15+0x10]
  407af4:	mov    rdi,rax
  407af7:	call   42dcf0 <xmlStrEqual@plt+0x29db0>
  407afc:	mov    rbx,QWORD PTR [rbx+0x8]
  407b00:	cmp    r13,rbx
  407b03:	je     407bb0 <xmlStrEqual@plt+0x3c70>
  407b09:	mov    rbp,QWORD PTR [rbx+0x10]
  407b0d:	mov    rdi,QWORD PTR [r12+0x30]
  407b12:	mov    rsi,rbp
  407b15:	call   43aca0 <xmlStrEqual@plt+0x36d60>
  407b1a:	test   rax,rax
  407b1d:	jne    407af0 <xmlStrEqual@plt+0x3bb0>
  407b1f:	mov    rcx,r14
  407b22:	mov    rdx,rbp
  407b25:	lea    rsi,[rip+0x408fc]        # 448428 <xmlStrEqual@plt+0x444e8>
  407b2c:	mov    edi,0x2
  407b31:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  407b36:	mov    rdi,r15
  407b39:	call   412d60 <xmlStrEqual@plt+0xee20>
  407b3e:	xor    ebx,ebx
  407b40:	jmp    407b60 <xmlStrEqual@plt+0x3c20>
  407b42:	nop    WORD PTR [rax+rax*1+0x0]
  407b48:	mov    rdx,r14
  407b4b:	lea    rsi,[rip+0x40856]        # 4483a8 <xmlStrEqual@plt+0x44468>
  407b52:	mov    edi,0x2
  407b57:	xor    eax,eax
  407b59:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  407b5e:	xor    ebx,ebx
  407b60:	add    rsp,0x8
  407b64:	mov    eax,ebx
  407b66:	pop    rbx
  407b67:	pop    rbp
  407b68:	pop    r12
  407b6a:	pop    r13
  407b6c:	pop    r14
  407b6e:	pop    r15
  407b70:	ret    
  407b71:	nop    DWORD PTR [rax+0x0]
  407b78:	mov    rdx,r14
  407b7b:	lea    rsi,[rip+0x40846]        # 4483c8 <xmlStrEqual@plt+0x44488>
  407b82:	mov    edi,0x2
  407b87:	xor    eax,eax
  407b89:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  407b8e:	jmp    407b60 <xmlStrEqual@plt+0x3c20>
  407b90:	lea    rsi,[rip+0x407f1]        # 448388 <xmlStrEqual@plt+0x44448>
  407b97:	mov    edi,0x2
  407b9c:	xor    eax,eax
  407b9e:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  407ba3:	xor    ebx,ebx
  407ba5:	jmp    407b60 <xmlStrEqual@plt+0x3c20>
  407ba7:	nop    WORD PTR [rax+rax*1+0x0]
  407bb0:	mov    rdi,r14
  407bb3:	call   403ed0 <strdup@plt>
  407bb8:	mov    rdi,QWORD PTR [r12+0x28]
  407bbd:	mov    rsi,rax
  407bc0:	mov    rdx,r15
  407bc3:	call   43a0e0 <xmlStrEqual@plt+0x361a0>
  407bc8:	mov    rax,0x469e3c
  407bcf:	mov    eax,DWORD PTR [rax]
  407bd1:	test   eax,eax
  407bd3:	jle    407be8 <xmlStrEqual@plt+0x3ca8>
  407bd5:	lea    rsi,[rip+0x40afa]        # 4486d6 <xmlStrEqual@plt+0x44796>
  407bdc:	mov    edi,0x5
  407be1:	xor    eax,eax
  407be3:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  407be8:	mov    esi,0x5
  407bed:	mov    rdi,r15
  407bf0:	call   415370 <xmlStrEqual@plt+0x11430>
  407bf5:	mov    ebx,0x1
  407bfa:	jmp    407b60 <xmlStrEqual@plt+0x3c20>
  407bff:	nop
  407c00:	mov    rdx,r14
  407c03:	lea    rsi,[rip+0x407ee]        # 4483f8 <xmlStrEqual@plt+0x444b8>
  407c0a:	mov    edi,0x2
  407c0f:	xor    eax,eax
  407c11:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  407c16:	xor    ebx,ebx
  407c18:	jmp    407b60 <xmlStrEqual@plt+0x3c20>
  407c1d:	nop    DWORD PTR [rax]
  407c20:	xor    ebx,ebx
  407c22:	jmp    407b60 <xmlStrEqual@plt+0x3c20>
  407c27:	nop    WORD PTR [rax+rax*1+0x0]
  407c30:	endbr64 
  407c34:	push   rbp
  407c35:	mov    rbp,rdi
  407c38:	push   rbx
  407c39:	sub    rsp,0x8
  407c3d:	test   rsi,rsi
  407c40:	je     407c68 <xmlStrEqual@plt+0x3d28>
  407c42:	mov    rdi,QWORD PTR [rdi+0x28]
  407c46:	mov    rbx,rsi
  407c49:	call   43aca0 <xmlStrEqual@plt+0x36d60>
  407c4e:	mov    QWORD PTR [rbp+0x40],rax
  407c52:	test   rax,rax
  407c55:	je     407c98 <xmlStrEqual@plt+0x3d58>
  407c57:	mov    eax,0x1
  407c5c:	add    rsp,0x8
  407c60:	pop    rbx
  407c61:	pop    rbp
  407c62:	ret    
  407c63:	nop    DWORD PTR [rax+rax*1+0x0]
  407c68:	mov    rax,0x469e3c
  407c6f:	mov    QWORD PTR [rdi+0x40],0x0
  407c77:	mov    eax,DWORD PTR [rax]
  407c79:	test   eax,eax
  407c7b:	jle    407c57 <xmlStrEqual@plt+0x3d17>
  407c7d:	lea    rsi,[rip+0x40a65]        # 4486e9 <xmlStrEqual@plt+0x447a9>
  407c84:	mov    edi,0x5
  407c89:	xor    eax,eax
  407c8b:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  407c90:	jmp    407c57 <xmlStrEqual@plt+0x3d17>
  407c92:	nop    WORD PTR [rax+rax*1+0x0]
  407c98:	mov    rdx,rbx
  407c9b:	lea    rsi,[rip+0x407c6]        # 448468 <xmlStrEqual@plt+0x44528>
  407ca2:	mov    edi,0x2
  407ca7:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  407cac:	xor    eax,eax
  407cae:	jmp    407c5c <xmlStrEqual@plt+0x3d1c>
  407cb0:	endbr64 
  407cb4:	push   r14
  407cb6:	push   r13
  407cb8:	push   r12
  407cba:	push   rbp
  407cbb:	push   rbx
  407cbc:	test   rsi,rsi
  407cbf:	je     407e00 <xmlStrEqual@plt+0x3ec0>
  407cc5:	mov    r13,rdx
  407cc8:	test   rdx,rdx
  407ccb:	je     407e00 <xmlStrEqual@plt+0x3ec0>
  407cd1:	mov    rdx,rcx
  407cd4:	mov    r12,rdi
  407cd7:	mov    rbp,rsi
  407cda:	mov    ecx,0x4
  407cdf:	lea    rdi,[rip+0x40a1d]        # 448703 <xmlStrEqual@plt+0x447c3>
  407ce6:	mov    rsi,rdx
  407ce9:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  407ceb:	seta   al
  407cee:	sbb    al,0x0
  407cf0:	test   al,al
  407cf2:	je     407df0 <xmlStrEqual@plt+0x3eb0>
  407cf8:	mov    ecx,0x4
  407cfd:	lea    rdi,[rip+0x40a03]        # 448707 <xmlStrEqual@plt+0x447c7>
  407d04:	mov    rsi,rdx
  407d07:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  407d09:	mov    r14d,0x1
  407d0f:	seta   al
  407d12:	sbb    al,0x0
  407d14:	test   al,al
  407d16:	jne    407e20 <xmlStrEqual@plt+0x3ee0>
  407d1c:	mov    rdi,rbp
  407d1f:	call   4067f0 <xmlStrEqual@plt+0x28b0>
  407d24:	mov    rbx,rax
  407d27:	test   rax,rax
  407d2a:	je     407dd6 <xmlStrEqual@plt+0x3e96>
  407d30:	mov    eax,DWORD PTR [rax+0x18]
  407d33:	test   eax,eax
  407d35:	je     407dd6 <xmlStrEqual@plt+0x3e96>
  407d3b:	cmp    eax,0x1
  407d3e:	jg     407dc0 <xmlStrEqual@plt+0x3e80>
  407d44:	mov    rax,QWORD PTR [rbx+0x8]
  407d48:	mov    edx,r14d
  407d4b:	mov    rdi,QWORD PTR [rax+0x10]
  407d4f:	mov    rsi,r13
  407d52:	call   40bd30 <xmlStrEqual@plt+0x7df0>
  407d57:	mov    rbp,rax
  407d5a:	mov    rdi,rbx
  407d5d:	call   42e2b0 <xmlStrEqual@plt+0x2a370>
  407d62:	xor    ebx,ebx
  407d64:	test   rbp,rbp
  407d67:	je     407de0 <xmlStrEqual@plt+0x3ea0>
  407d69:	mov    rdi,QWORD PTR [rbp+0x0]
  407d6d:	mov    ebx,0x1
  407d72:	call   424d40 <xmlStrEqual@plt+0x20e00>
  407d77:	mov    rdi,rax
  407d7a:	call   403ed0 <strdup@plt>
  407d7f:	mov    rdi,QWORD PTR [r12+0x70]
  407d84:	mov    rsi,rax
  407d87:	mov    rdx,rbp
  407d8a:	call   43a0e0 <xmlStrEqual@plt+0x361a0>
  407d8f:	mov    rax,0x469e3c
  407d96:	mov    eax,DWORD PTR [rax]
  407d98:	test   eax,eax
  407d9a:	jle    407de0 <xmlStrEqual@plt+0x3ea0>
  407d9c:	mov    rdi,rbp
  407d9f:	call   409fd0 <xmlStrEqual@plt+0x6090>
  407da4:	mov    rdx,rax
  407da7:	lea    rsi,[rip+0x407ca]        # 448578 <xmlStrEqual@plt+0x44638>
  407dae:	mov    edi,0x5
  407db3:	xor    eax,eax
  407db5:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  407dba:	jmp    407de0 <xmlStrEqual@plt+0x3ea0>
  407dbc:	nop    DWORD PTR [rax+0x0]
  407dc0:	mov    rdx,rbp
  407dc3:	lea    rsi,[rip+0x4074e]        # 448518 <xmlStrEqual@plt+0x445d8>
  407dca:	mov    edi,0x2
  407dcf:	xor    eax,eax
  407dd1:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  407dd6:	mov    rdi,rbx
  407dd9:	call   42e2b0 <xmlStrEqual@plt+0x2a370>
  407dde:	xor    ebx,ebx
  407de0:	mov    eax,ebx
  407de2:	pop    rbx
  407de3:	pop    rbp
  407de4:	pop    r12
  407de6:	pop    r13
  407de8:	pop    r14
  407dea:	ret    
  407deb:	nop    DWORD PTR [rax+rax*1+0x0]
  407df0:	xor    r14d,r14d
  407df3:	jmp    407d1c <xmlStrEqual@plt+0x3ddc>
  407df8:	nop    DWORD PTR [rax+rax*1+0x0]
  407e00:	xor    eax,eax
  407e02:	xor    ebx,ebx
  407e04:	lea    rsi,[rip+0x40695]        # 4484a0 <xmlStrEqual@plt+0x44560>
  407e0b:	mov    edi,0x2
  407e10:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  407e15:	mov    eax,ebx
  407e17:	pop    rbx
  407e18:	pop    rbp
  407e19:	pop    r12
  407e1b:	pop    r13
  407e1d:	pop    r14
  407e1f:	ret    
  407e20:	xor    eax,eax
  407e22:	xor    ebx,ebx
  407e24:	lea    rsi,[rip+0x406c5]        # 4484f0 <xmlStrEqual@plt+0x445b0>
  407e2b:	mov    edi,0x2
  407e30:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  407e35:	mov    eax,ebx
  407e37:	pop    rbx
  407e38:	pop    rbp
  407e39:	pop    r12
  407e3b:	pop    r13
  407e3d:	pop    r14
  407e3f:	ret    
  407e40:	endbr64 
  407e44:	mov    QWORD PTR [rdi+0x88],rsi
  407e4b:	ret    
  407e4c:	nop    DWORD PTR [rax+0x0]
  407e50:	endbr64 
  407e54:	push   r15
  407e56:	push   r14
  407e58:	push   r13
  407e5a:	push   r12
  407e5c:	push   rbp
  407e5d:	mov    rbp,rdi
  407e60:	push   rbx
  407e61:	sub    rsp,0x138
  407e68:	mov    rax,QWORD PTR fs:0x28
  407e71:	mov    QWORD PTR [rsp+0x128],rax
  407e79:	xor    eax,eax
  407e7b:	mov    rax,0x4757c8
  407e82:	lea    r14,[rsp+0x60]
  407e87:	mov    rdi,QWORD PTR [rax]
  407e8a:	call   403960 <dirname@plt>
  407e8f:	mov    r9,rax
  407e92:	sub    rsp,0x8
  407e96:	lea    rax,[rip+0x40874]        # 448711 <xmlStrEqual@plt+0x447d1>
  407e9d:	push   rax
  407e9e:	mov    ecx,0xc8
  407ea3:	mov    edx,0x1
  407ea8:	lea    r8,[rip+0x4085c]        # 44870b <xmlStrEqual@plt+0x447cb>
  407eaf:	mov    esi,0xc8
  407eb4:	mov    rdi,r14
  407eb7:	xor    eax,eax
  407eb9:	call   403a40 <__snprintf_chk@plt>
  407ebe:	pop    rdx
  407ebf:	pop    rcx
  407ec0:	cmp    eax,0xc7
  407ec5:	ja     408008 <xmlStrEqual@plt+0x40c8>
  407ecb:	lea    rsi,[rip+0x473b4]        # 44f286 <xmlStrEqual@plt+0x4b346>
  407ed2:	mov    rdi,r14
  407ed5:	call   403c40 <fopen@plt>
  407eda:	lea    r13,[rbp+0x90]
  407ee1:	mov    r12,rax
  407ee4:	test   rax,rax
  407ee7:	je     408020 <xmlStrEqual@plt+0x40e0>
  407eed:	lea    rbx,[rsp+0x10]
  407ef2:	mov    rdx,rax
  407ef5:	mov    esi,0x50
  407efa:	mov    rdi,rbx
  407efd:	call   403dc0 <fgets@plt>
  407f02:	test   rax,rax
  407f05:	je     407f4d <xmlStrEqual@plt+0x400d>
  407f07:	mov    rdx,rbx
  407f0a:	mov    ecx,DWORD PTR [rdx]
  407f0c:	add    rdx,0x4
  407f10:	lea    eax,[rcx-0x1010101]
  407f16:	andn   eax,ecx,eax
  407f1b:	and    eax,0x80808080
  407f20:	je     407f0a <xmlStrEqual@plt+0x3fca>
  407f22:	mov    ecx,eax
  407f24:	shr    ecx,0x10
  407f27:	test   eax,0x8080
  407f2c:	cmove  eax,ecx
  407f2f:	lea    rcx,[rdx+0x2]
  407f33:	cmove  rdx,rcx
  407f37:	mov    esi,eax
  407f39:	add    sil,al
  407f3c:	sbb    rdx,0x3
  407f40:	sub    rdx,rbx
  407f43:	cmp    rdx,0x20
  407f47:	je     408060 <xmlStrEqual@plt+0x4120>
  407f4d:	mov    rdi,r12
  407f50:	call   403b80 <fclose@plt>
  407f55:	lea    rsi,[rip+0x3f0f8]        # 447054 <xmlStrEqual@plt+0x43114>
  407f5c:	mov    rdi,r14
  407f5f:	call   403c40 <fopen@plt>
  407f64:	mov    r12,rax
  407f67:	mov    rbx,r13
  407f6a:	add    rbp,0xa0
  407f71:	test   rax,rax
  407f74:	je     4080aa <xmlStrEqual@plt+0x416a>
  407f7a:	nop    WORD PTR [rax+rax*1+0x0]
  407f80:	call   4039d0 <random@plt>
  407f85:	mov    BYTE PTR [rbx],al
  407f87:	inc    rbx
  407f8a:	cmp    rbx,rbp
  407f8d:	jne    407f80 <xmlStrEqual@plt+0x4040>
  407f8f:	mov    rdi,r13
  407f92:	call   43bc20 <xmlStrEqual@plt+0x37ce0>
  407f97:	mov    rdi,rax
  407f9a:	mov    rsi,r12
  407f9d:	call   403c10 <fputs@plt>
  407fa2:	mov    rdi,r12
  407fa5:	call   403b80 <fclose@plt>
  407faa:	mov    rax,0x469e3c
  407fb1:	mov    ebx,0x1
  407fb6:	cmp    DWORD PTR [rax],0x1
  407fb9:	jle    407fd9 <xmlStrEqual@plt+0x4099>
  407fbb:	mov    rdi,r13
  407fbe:	call   43bc20 <xmlStrEqual@plt+0x37ce0>
  407fc3:	mov    rdx,rax
  407fc6:	lea    rsi,[rip+0x4064b]        # 448618 <xmlStrEqual@plt+0x446d8>
  407fcd:	mov    edi,0x6
  407fd2:	xor    eax,eax
  407fd4:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  407fd9:	mov    rsi,QWORD PTR [rsp+0x128]
  407fe1:	xor    rsi,QWORD PTR fs:0x28
  407fea:	mov    eax,ebx
  407fec:	jne    408102 <xmlStrEqual@plt+0x41c2>
  407ff2:	add    rsp,0x138
  407ff9:	pop    rbx
  407ffa:	pop    rbp
  407ffb:	pop    r12
  407ffd:	pop    r13
  407fff:	pop    r14
  408001:	pop    r15
  408003:	ret    
  408004:	nop    DWORD PTR [rax+0x0]
  408008:	lea    rsi,[rip+0x40709]        # 448718 <xmlStrEqual@plt+0x447d8>
  40800f:	mov    edi,0x2
  408014:	xor    eax,eax
  408016:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  40801b:	xor    ebx,ebx
  40801d:	jmp    407fd9 <xmlStrEqual@plt+0x4099>
  40801f:	nop
  408020:	lea    rsi,[rip+0x3f02d]        # 447054 <xmlStrEqual@plt+0x43114>
  408027:	mov    rdi,r14
  40802a:	call   403c40 <fopen@plt>
  40802f:	mov    r12,rax
  408032:	mov    rbx,r13
  408035:	add    rbp,0xa0
  40803c:	test   rax,rax
  40803f:	je     4080d6 <xmlStrEqual@plt+0x4196>
  408045:	nop    DWORD PTR [rax]
  408048:	call   4039d0 <random@plt>
  40804d:	mov    BYTE PTR [rbx],al
  40804f:	inc    rbx
  408052:	cmp    rbx,rbp
  408055:	jne    408048 <xmlStrEqual@plt+0x4108>
  408057:	jmp    407f8f <xmlStrEqual@plt+0x404f>
  40805c:	nop    DWORD PTR [rax+0x0]
  408060:	mov    BYTE PTR [rsp+0xf],0x0
  408065:	mov    rbp,r13
  408068:	lea    r15,[rbx+0x20]
  40806c:	lea    r14,[rsp+0xd]
  408071:	nop    DWORD PTR [rax+0x0]
  408078:	movzx  eax,BYTE PTR [rbx]
  40807b:	mov    edx,0x10
  408080:	mov    BYTE PTR [rsp+0xd],al
  408084:	movzx  eax,BYTE PTR [rbx+0x1]
  408088:	xor    esi,esi
  40808a:	mov    rdi,r14
  40808d:	mov    BYTE PTR [rsp+0xe],al
  408091:	add    rbx,0x2
  408095:	call   403d20 <strtol@plt>
  40809a:	mov    BYTE PTR [rbp+0x0],al
  40809d:	inc    rbp
  4080a0:	cmp    rbx,r15
  4080a3:	jne    408078 <xmlStrEqual@plt+0x4138>
  4080a5:	jmp    407fa2 <xmlStrEqual@plt+0x4062>
  4080aa:	call   4037f0 <__errno_location@plt>
  4080af:	mov    edi,DWORD PTR [rax]
  4080b1:	xor    ebx,ebx
  4080b3:	call   403910 <strerror@plt>
  4080b8:	mov    rcx,rax
  4080bb:	mov    rdx,r14
  4080be:	lea    rsi,[rip+0x40513]        # 4485d8 <xmlStrEqual@plt+0x44698>
  4080c5:	mov    edi,0x2
  4080ca:	xor    eax,eax
  4080cc:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  4080d1:	jmp    407fd9 <xmlStrEqual@plt+0x4099>
  4080d6:	call   4037f0 <__errno_location@plt>
  4080db:	mov    edi,DWORD PTR [rax]
  4080dd:	xor    ebx,ebx
  4080df:	call   403910 <strerror@plt>
  4080e4:	mov    rcx,rax
  4080e7:	mov    rdx,r14
  4080ea:	lea    rsi,[rip+0x404b7]        # 4485a8 <xmlStrEqual@plt+0x44668>
  4080f1:	mov    edi,0x2
  4080f6:	xor    eax,eax
  4080f8:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  4080fd:	jmp    407fd9 <xmlStrEqual@plt+0x4099>
  408102:	call   403c00 <__stack_chk_fail@plt>
  408107:	nop    WORD PTR [rax+rax*1+0x0]
  408110:	endbr64 
  408114:	push   rbp
  408115:	xor    eax,eax
  408117:	push   rbx
  408118:	sub    rsp,0x8
  40811c:	mov    rbx,QWORD PTR [rdi+0x48]
  408120:	call   424be0 <xmlStrEqual@plt+0x20ca0>
  408125:	mov    rbp,rax
  408128:	mov    rsi,rax
  40812b:	lea    rdi,[rip+0x405fe]        # 448730 <xmlStrEqual@plt+0x447f0>
  408132:	call   425bf0 <xmlStrEqual@plt+0x21cb0>
  408137:	mov    rsi,rbx
  40813a:	mov    rdi,rbp
  40813d:	call   42dcf0 <xmlStrEqual@plt+0x29db0>
  408142:	xor    eax,eax
  408144:	call   424be0 <xmlStrEqual@plt+0x20ca0>
  408149:	mov    rbp,rax
  40814c:	mov    rsi,rax
  40814f:	lea    rdi,[rip+0x405e4]        # 44873a <xmlStrEqual@plt+0x447fa>
  408156:	call   425bf0 <xmlStrEqual@plt+0x21cb0>
  40815b:	mov    rsi,rbx
  40815e:	mov    rdi,rbp
  408161:	call   42dcf0 <xmlStrEqual@plt+0x29db0>
  408166:	xor    eax,eax
  408168:	call   424be0 <xmlStrEqual@plt+0x20ca0>
  40816d:	mov    rbp,rax
  408170:	mov    rsi,rax
  408173:	lea    rdi,[rip+0x405d0]        # 44874a <xmlStrEqual@plt+0x4480a>
  40817a:	call   425bf0 <xmlStrEqual@plt+0x21cb0>
  40817f:	mov    rsi,rbx
  408182:	mov    rdi,rbp
  408185:	call   42dcf0 <xmlStrEqual@plt+0x29db0>
  40818a:	xor    eax,eax
  40818c:	call   424be0 <xmlStrEqual@plt+0x20ca0>
  408191:	mov    rsi,rax
  408194:	lea    rdi,[rip+0x405ab]        # 448746 <xmlStrEqual@plt+0x44806>
  40819b:	mov    rbp,rax
  40819e:	call   425bf0 <xmlStrEqual@plt+0x21cb0>
  4081a3:	add    rsp,0x8
  4081a7:	mov    rsi,rbx
  4081aa:	pop    rbx
  4081ab:	mov    rdi,rbp
  4081ae:	pop    rbp
  4081af:	jmp    42dcf0 <xmlStrEqual@plt+0x29db0>
  4081b4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4081be:	xchg   ax,ax
  4081c0:	push   r13
  4081c2:	push   r12
  4081c4:	mov    r12,rdi
  4081c7:	push   rbp
  4081c8:	push   rbx
  4081c9:	sub    rsp,0x8
  4081cd:	mov    rdi,QWORD PTR [rdi+0x10]
  4081d1:	call   42e260 <xmlStrEqual@plt+0x2a320>
  4081d6:	mov    rdi,QWORD PTR [r12+0x18]
  4081db:	call   42e260 <xmlStrEqual@plt+0x2a320>
  4081e0:	mov    rdi,QWORD PTR [r12+0x20]
  4081e5:	call   42e260 <xmlStrEqual@plt+0x2a320>
  4081ea:	mov    r13,0x474dd0
  4081f1:	mov    DWORD PTR [r12+0x8],0x0
  4081fa:	mov    rax,QWORD PTR [r13+0x0]
  4081fe:	mov    rbx,QWORD PTR [rax+0x8]
  408202:	cmp    rax,rbx
  408205:	jne    40822a <xmlStrEqual@plt+0x42ea>
  408207:	jmp    408282 <xmlStrEqual@plt+0x4342>
  408209:	nop    DWORD PTR [rax+0x0]
  408210:	mov    rdi,QWORD PTR [rbp+0x18]
  408214:	test   rdi,rdi
  408217:	je     408220 <xmlStrEqual@plt+0x42e0>
  408219:	mov    ecx,DWORD PTR [rdi+0x18]
  40821c:	test   ecx,ecx
  40821e:	jne    408260 <xmlStrEqual@plt+0x4320>
  408220:	mov    rbx,QWORD PTR [rbx+0x8]
  408224:	cmp    QWORD PTR [r13+0x0],rbx
  408228:	je     408282 <xmlStrEqual@plt+0x4342>
  40822a:	mov    rbp,QWORD PTR [rbx+0x10]
  40822e:	mov    rdi,QWORD PTR [rbp+0x10]
  408232:	test   rdi,rdi
  408235:	je     408210 <xmlStrEqual@plt+0x42d0>
  408237:	mov    esi,DWORD PTR [rdi+0x18]
  40823a:	test   esi,esi
  40823c:	je     408210 <xmlStrEqual@plt+0x42d0>
  40823e:	mov    rsi,QWORD PTR [r12+0x18]
  408243:	call   42de80 <xmlStrEqual@plt+0x29f40>
  408248:	mov    rsi,QWORD PTR [r12+0x10]
  40824d:	mov    rdi,QWORD PTR [rbp+0x10]
  408251:	call   42de80 <xmlStrEqual@plt+0x29f40>
  408256:	jmp    408210 <xmlStrEqual@plt+0x42d0>
  408258:	nop    DWORD PTR [rax+rax*1+0x0]
  408260:	mov    rsi,QWORD PTR [r12+0x20]
  408265:	call   42de80 <xmlStrEqual@plt+0x29f40>
  40826a:	mov    rsi,QWORD PTR [r12+0x10]
  40826f:	mov    rdi,QWORD PTR [rbp+0x18]
  408273:	call   42de80 <xmlStrEqual@plt+0x29f40>
  408278:	mov    rbx,QWORD PTR [rbx+0x8]
  40827c:	cmp    QWORD PTR [r13+0x0],rbx
  408280:	jne    40822a <xmlStrEqual@plt+0x42ea>
  408282:	mov    rax,QWORD PTR [r12+0x18]
  408287:	mov    edx,DWORD PTR [rax+0x18]
  40828a:	test   edx,edx
  40828c:	jle    408294 <xmlStrEqual@plt+0x4354>
  40828e:	or     DWORD PTR [r12+0x8],0x1
  408294:	mov    rax,QWORD PTR [r12+0x20]
  408299:	mov    eax,DWORD PTR [rax+0x18]
  40829c:	test   eax,eax
  40829e:	jle    4082a6 <xmlStrEqual@plt+0x4366>
  4082a0:	or     DWORD PTR [r12+0x8],0x2
  4082a6:	add    rsp,0x8
  4082aa:	pop    rbx
  4082ab:	pop    rbp
  4082ac:	pop    r12
  4082ae:	pop    r13
  4082b0:	ret    
  4082b1:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4082bc:	nop    DWORD PTR [rax+0x0]
  4082c0:	endbr64 
  4082c4:	push   rbx
  4082c5:	mov    edi,0x30
  4082ca:	call   434fe0 <xmlStrEqual@plt+0x310a0>
  4082cf:	mov    rbx,rax
  4082d2:	test   rax,rax
  4082d5:	je     40831f <xmlStrEqual@plt+0x43df>
  4082d7:	mov    rdi,0x408980
  4082de:	call   42dca0 <xmlStrEqual@plt+0x29d60>
  4082e3:	mov    QWORD PTR [rbx],rax
  4082e6:	call   42dc90 <xmlStrEqual@plt+0x29d50>
  4082eb:	mov    QWORD PTR [rbx+0x10],rax
  4082ef:	call   42dc90 <xmlStrEqual@plt+0x29d50>
  4082f4:	mov    QWORD PTR [rbx+0x18],rax
  4082f8:	call   42dc90 <xmlStrEqual@plt+0x29d50>
  4082fd:	mov    QWORD PTR [rbx+0x20],rax
  408301:	xor    eax,eax
  408303:	call   418f10 <xmlStrEqual@plt+0x14fd0>
  408308:	mov    QWORD PTR [rbx+0x28],rax
  40830c:	lea    rsi,[rip+0x4043c]        # 44874f <xmlStrEqual@plt+0x4480f>
  408313:	mov    edi,0x4
  408318:	xor    eax,eax
  40831a:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  40831f:	mov    rax,rbx
  408322:	pop    rbx
  408323:	ret    
  408324:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40832f:	nop
  408330:	endbr64 
  408334:	test   rdi,rdi
  408337:	je     4083a8 <xmlStrEqual@plt+0x4468>
  408339:	push   rbx
  40833a:	mov    rbx,rdi
  40833d:	mov    rdi,QWORD PTR [rdi]
  408340:	call   42e2b0 <xmlStrEqual@plt+0x2a370>
  408345:	mov    rdi,QWORD PTR [rbx+0x10]
  408349:	call   42e2b0 <xmlStrEqual@plt+0x2a370>
  40834e:	mov    rdi,QWORD PTR [rbx+0x18]
  408352:	call   42e2b0 <xmlStrEqual@plt+0x2a370>
  408357:	mov    rdi,QWORD PTR [rbx+0x20]
  40835b:	call   42e2b0 <xmlStrEqual@plt+0x2a370>
  408360:	mov    rax,QWORD PTR [rbx+0x28]
  408364:	test   rax,rax
  408367:	je     40836f <xmlStrEqual@plt+0x442f>
  408369:	mov    rdi,rbx
  40836c:	call   QWORD PTR [rax+0x8]
  40836f:	mov    rdi,rbx
  408372:	call   4037b0 <free@plt>
  408377:	mov    rax,0x469e3c
  40837e:	mov    eax,DWORD PTR [rax]
  408380:	test   eax,eax
  408382:	jg     408390 <xmlStrEqual@plt+0x4450>
  408384:	pop    rbx
  408385:	ret    
  408386:	nop    WORD PTR cs:[rax+rax*1+0x0]
  408390:	lea    rsi,[rip+0x403c9]        # 448760 <xmlStrEqual@plt+0x44820>
  408397:	mov    edi,0x5
  40839c:	xor    eax,eax
  40839e:	pop    rbx
  40839f:	jmp    430e20 <xmlStrEqual@plt+0x2cee0>
  4083a4:	nop    DWORD PTR [rax+0x0]
  4083a8:	ret    
  4083a9:	nop    DWORD PTR [rax+0x0]
  4083b0:	endbr64 
  4083b4:	push   rbp
  4083b5:	mov    rbp,rdi
  4083b8:	push   rbx
  4083b9:	sub    rsp,0x8
  4083bd:	mov    rax,0x4757a8
  4083c4:	mov    rdx,QWORD PTR [rdi+0x28]
  4083c8:	mov    rsi,QWORD PTR [rax]
  4083cb:	xor    eax,eax
  4083cd:	call   QWORD PTR [rdx]
  4083cf:	cmp    eax,0x1
  4083d2:	je     4083f8 <xmlStrEqual@plt+0x44b8>
  4083d4:	lea    rsi,[rip+0x403b5]        # 448790 <xmlStrEqual@plt+0x44850>
  4083db:	mov    edi,0x2
  4083e0:	xor    eax,eax
  4083e2:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  4083e7:	xor    ebx,ebx
  4083e9:	add    rsp,0x8
  4083ed:	mov    eax,ebx
  4083ef:	pop    rbx
  4083f0:	pop    rbp
  4083f1:	ret    
  4083f2:	nop    WORD PTR [rax+rax*1+0x0]
  4083f8:	mov    rdi,rbp
  4083fb:	mov    ebx,eax
  4083fd:	call   4081c0 <xmlStrEqual@plt+0x4280>
  408402:	mov    rax,0x469e3c
  408409:	mov    eax,DWORD PTR [rax]
  40840b:	test   eax,eax
  40840d:	jle    4083e9 <xmlStrEqual@plt+0x44a9>
  40840f:	xor    eax,eax
  408411:	lea    rsi,[rip+0x40362]        # 44877a <xmlStrEqual@plt+0x4483a>
  408418:	mov    edi,0x5
  40841d:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  408422:	add    rsp,0x8
  408426:	mov    eax,ebx
  408428:	pop    rbx
  408429:	pop    rbp
  40842a:	ret    
  40842b:	nop    DWORD PTR [rax+rax*1+0x0]
  408430:	endbr64 
  408434:	push   r13
  408436:	push   r12
  408438:	push   rbp
  408439:	push   rbx
  40843a:	sub    rsp,0x8
  40843e:	mov    r12,0x474dd0
  408445:	mov    rax,QWORD PTR [r12]
  408449:	mov    rbx,QWORD PTR [rax+0x8]
  40844d:	cmp    rax,rbx
  408450:	je     40850a <xmlStrEqual@plt+0x45ca>
  408456:	mov    r13,rdi
  408459:	jmp    40847e <xmlStrEqual@plt+0x453e>
  40845b:	nop    DWORD PTR [rax+rax*1+0x0]
  408460:	mov    rdi,QWORD PTR [rbp+0x18]
  408464:	test   rdi,rdi
  408467:	je     408470 <xmlStrEqual@plt+0x4530>
  408469:	mov    eax,DWORD PTR [rdi+0x18]
  40846c:	test   eax,eax
  40846e:	jne    4084e8 <xmlStrEqual@plt+0x45a8>
  408470:	mov    rbx,QWORD PTR [rbx+0x8]
  408474:	cmp    QWORD PTR [r12],rbx
  408478:	je     40850a <xmlStrEqual@plt+0x45ca>
  40847e:	mov    rbp,QWORD PTR [rbx+0x10]
  408482:	mov    rdi,QWORD PTR [rbp+0x10]
  408486:	test   rdi,rdi
  408489:	je     408460 <xmlStrEqual@plt+0x4520>
  40848b:	mov    edx,DWORD PTR [rdi+0x18]
  40848e:	test   edx,edx
  408490:	je     408460 <xmlStrEqual@plt+0x4520>
  408492:	mov    rsi,QWORD PTR [r13+0x18]
  408496:	mov    rdx,0x425310
  40849d:	call   42df40 <xmlStrEqual@plt+0x2a000>
  4084a2:	test   al,al
  4084a4:	jne    408460 <xmlStrEqual@plt+0x4520>
  4084a6:	mov    rdi,r13
  4084a9:	call   4081c0 <xmlStrEqual@plt+0x4280>
  4084ae:	mov    rbx,0x474da8
  4084b5:	mov    esi,0x2
  4084ba:	mov    rax,QWORD PTR [rbx]
  4084bd:	mov    edi,0xfe
  4084c2:	call   QWORD PTR [rax+0x50]
  4084c5:	mov    rax,QWORD PTR [rbx]
  4084c8:	mov    esi,0xa
  4084cd:	mov    rax,QWORD PTR [rax+0x50]
  4084d1:	add    rsp,0x8
  4084d5:	pop    rbx
  4084d6:	pop    rbp
  4084d7:	pop    r12
  4084d9:	mov    edi,0xfe
  4084de:	pop    r13
  4084e0:	jmp    rax
  4084e2:	nop    WORD PTR [rax+rax*1+0x0]
  4084e8:	mov    rsi,QWORD PTR [r13+0x20]
  4084ec:	mov    rdx,0x425310
  4084f3:	call   42df40 <xmlStrEqual@plt+0x2a000>
  4084f8:	test   al,al
  4084fa:	je     4084a6 <xmlStrEqual@plt+0x4566>
  4084fc:	mov    rbx,QWORD PTR [rbx+0x8]
  408500:	cmp    QWORD PTR [r12],rbx
  408504:	jne    40847e <xmlStrEqual@plt+0x453e>
  40850a:	add    rsp,0x8
  40850e:	pop    rbx
  40850f:	pop    rbp
  408510:	pop    r12
  408512:	pop    r13
  408514:	ret    
  408515:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  408520:	endbr64 
  408524:	push   r14
  408526:	push   r13
  408528:	mov    r13,rcx
  40852b:	push   r12
  40852d:	mov    r12,rdx
  408530:	push   rbp
  408531:	mov    rbp,rsi
  408534:	push   rbx
  408535:	mov    rbx,rdi
  408538:	mov    rax,QWORD PTR [rdi]
  40853b:	mov    edx,DWORD PTR [rax+0x18]
  40853e:	test   edx,edx
  408540:	je     408588 <xmlStrEqual@plt+0x4648>
  408542:	mov    rax,QWORD PTR [rax+0x8]
  408546:	mov    r14,QWORD PTR [rax+0x10]
  40854a:	mov    rax,QWORD PTR [rbx+0x28]
  40854e:	mov    rcx,r13
  408551:	mov    rdx,r12
  408554:	mov    rsi,rbp
  408557:	mov    rdi,rbx
  40855a:	call   QWORD PTR [rax+0x40]
  40855d:	movzx  r8d,BYTE PTR [rbp+0xc]
  408562:	mov    rsi,QWORD PTR [rbp+0x0]
  408566:	mov    rdi,r14
  408569:	mov    rcx,r13
  40856c:	mov    rdx,r12
  40856f:	call   408a00 <xmlStrEqual@plt+0x4ac0>
  408574:	mov    rdi,rbx
  408577:	pop    rbx
  408578:	pop    rbp
  408579:	pop    r12
  40857b:	pop    r13
  40857d:	pop    r14
  40857f:	jmp    4081c0 <xmlStrEqual@plt+0x4280>
  408584:	nop    DWORD PTR [rax+0x0]
  408588:	xor    r14d,r14d
  40858b:	jmp    40854a <xmlStrEqual@plt+0x460a>
  40858d:	nop    DWORD PTR [rax]
  408590:	endbr64 
  408594:	push   r13
  408596:	push   r12
  408598:	mov    r12d,r8d
  40859b:	push   rbp
  40859c:	mov    rbp,rsi
  40859f:	push   rbx
  4085a0:	mov    rbx,rdi
  4085a3:	sub    rsp,0x8
  4085a7:	mov    rax,QWORD PTR [rdi]
  4085aa:	mov    esi,DWORD PTR [rax+0x18]
  4085ad:	test   esi,esi
  4085af:	je     4085f0 <xmlStrEqual@plt+0x46b0>
  4085b1:	mov    rax,QWORD PTR [rax+0x8]
  4085b5:	mov    r13,QWORD PTR [rax+0x10]
  4085b9:	mov    rax,QWORD PTR [rbx+0x28]
  4085bd:	mov    r8d,r12d
  4085c0:	mov    rsi,rbp
  4085c3:	mov    rdi,rbx
  4085c6:	call   QWORD PTR [rax+0x48]
  4085c9:	mov    rsi,QWORD PTR [rbp+0x0]
  4085cd:	mov    rdi,r13
  4085d0:	movzx  edx,r12b
  4085d4:	call   4089e0 <xmlStrEqual@plt+0x4aa0>
  4085d9:	add    rsp,0x8
  4085dd:	mov    rdi,rbx
  4085e0:	pop    rbx
  4085e1:	pop    rbp
  4085e2:	pop    r12
  4085e4:	pop    r13
  4085e6:	jmp    4081c0 <xmlStrEqual@plt+0x4280>
  4085eb:	nop    DWORD PTR [rax+rax*1+0x0]
  4085f0:	xor    r13d,r13d
  4085f3:	jmp    4085b9 <xmlStrEqual@plt+0x4679>
  4085f5:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  408600:	endbr64 
  408604:	push   r15
  408606:	mov    r15,r9
  408609:	push   r14
  40860b:	mov    r14,r8
  40860e:	push   r13
  408610:	mov    r13,rcx
  408613:	push   r12
  408615:	mov    r12,rdx
  408618:	push   rbp
  408619:	mov    ebp,esi
  40861b:	push   rbx
  40861c:	mov    rbx,rdi
  40861f:	sub    rsp,0x18
  408623:	mov    rax,QWORD PTR [rdi]
  408626:	mov    edx,DWORD PTR [rax+0x18]
  408629:	test   edx,edx
  40862b:	je     408688 <xmlStrEqual@plt+0x4748>
  40862d:	mov    rax,QWORD PTR [rax+0x8]
  408631:	mov    rax,QWORD PTR [rax+0x10]
  408635:	mov    QWORD PTR [rsp+0x8],rax
  40863a:	mov    rax,QWORD PTR [rbx+0x28]
  40863e:	mov    r9,r15
  408641:	mov    r8,r14
  408644:	mov    rcx,r13
  408647:	mov    rdx,r12
  40864a:	mov    esi,ebp
  40864c:	mov    rdi,rbx
  40864f:	call   QWORD PTR [rax+0x38]
  408652:	mov    rdi,QWORD PTR [rsp+0x8]
  408657:	mov    rdx,QWORD PTR [r12]
  40865b:	mov    r9,r15
  40865e:	mov    r8,r14
  408661:	mov    rcx,r13
  408664:	mov    esi,ebp
  408666:	call   408a20 <xmlStrEqual@plt+0x4ae0>
  40866b:	add    rsp,0x18
  40866f:	mov    rdi,rbx
  408672:	pop    rbx
  408673:	pop    rbp
  408674:	pop    r12
  408676:	pop    r13
  408678:	pop    r14
  40867a:	pop    r15
  40867c:	jmp    4081c0 <xmlStrEqual@plt+0x4280>
  408681:	nop    DWORD PTR [rax+0x0]
  408688:	mov    QWORD PTR [rsp+0x8],0x0
  408691:	jmp    40863a <xmlStrEqual@plt+0x46fa>
  408693:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40869e:	xchg   ax,ax
  4086a0:	endbr64 
  4086a4:	mov    rax,QWORD PTR [rdi+0x28]
  4086a8:	jmp    QWORD PTR [rax+0x30]
  4086ab:	nop    DWORD PTR [rax+rax*1+0x0]
  4086b0:	endbr64 
  4086b4:	push   rbp
  4086b5:	push   rbx
  4086b6:	mov    rbx,rdi
  4086b9:	sub    rsp,0x8
  4086bd:	call   42dc90 <xmlStrEqual@plt+0x29d50>
  4086c2:	mov    rbp,rax
  4086c5:	test   rax,rax
  4086c8:	je     408708 <xmlStrEqual@plt+0x47c8>
  4086ca:	mov    rax,QWORD PTR [rbx+0x28]
  4086ce:	mov    esi,0x2
  4086d3:	mov    rdi,rbx
  4086d6:	call   QWORD PTR [rax+0x30]
  4086d9:	test   rax,rax
  4086dc:	je     4086e9 <xmlStrEqual@plt+0x47a9>
  4086de:	mov    rsi,rbp
  4086e1:	mov    rdi,rax
  4086e4:	call   42dcf0 <xmlStrEqual@plt+0x29db0>
  4086e9:	mov    rax,QWORD PTR [rbx+0x28]
  4086ed:	mov    esi,0xa
  4086f2:	mov    rdi,rbx
  4086f5:	call   QWORD PTR [rax+0x30]
  4086f8:	test   rax,rax
  4086fb:	je     408708 <xmlStrEqual@plt+0x47c8>
  4086fd:	mov    rsi,rbp
  408700:	mov    rdi,rax
  408703:	call   42dcf0 <xmlStrEqual@plt+0x29db0>
  408708:	add    rsp,0x8
  40870c:	pop    rbx
  40870d:	mov    rax,rbp
  408710:	pop    rbp
  408711:	ret    
  408712:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40871d:	nop    DWORD PTR [rax]
  408720:	endbr64 
  408724:	mov    rax,QWORD PTR [rdi+0x10]
  408728:	ret    
  408729:	nop    DWORD PTR [rax+0x0]
  408730:	endbr64 
  408734:	cmp    esi,0x2
  408737:	je     408750 <xmlStrEqual@plt+0x4810>
  408739:	cmp    esi,0xa
  40873c:	jne    408748 <xmlStrEqual@plt+0x4808>
  40873e:	mov    rax,QWORD PTR [rdi+0x20]
  408742:	ret    
  408743:	nop    DWORD PTR [rax+rax*1+0x0]
  408748:	xor    eax,eax
  40874a:	ret    
  40874b:	nop    DWORD PTR [rax+rax*1+0x0]
  408750:	mov    rax,QWORD PTR [rdi+0x18]
  408754:	ret    
  408755:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  408760:	endbr64 
  408764:	mov    eax,DWORD PTR [rdi+0x8]
  408767:	ret    
  408768:	nop    DWORD PTR [rax+rax*1+0x0]
  408770:	endbr64 
  408774:	mov    rax,0x475830
  40877b:	mov    rsi,rdi
  40877e:	mov    rax,QWORD PTR [rax]
  408781:	mov    rax,QWORD PTR [rax]
  408784:	mov    edx,DWORD PTR [rax+0x18]
  408787:	test   edx,edx
  408789:	je     4087a0 <xmlStrEqual@plt+0x4860>
  40878b:	mov    rax,QWORD PTR [rax+0x8]
  40878f:	mov    rdi,QWORD PTR [rax+0x10]
  408793:	jmp    408a30 <xmlStrEqual@plt+0x4af0>
  408798:	nop    DWORD PTR [rax+rax*1+0x0]
  4087a0:	xor    edi,edi
  4087a2:	jmp    408a30 <xmlStrEqual@plt+0x4af0>
  4087a7:	nop    WORD PTR [rax+rax*1+0x0]
  4087b0:	endbr64 
  4087b4:	push   rbp
  4087b5:	mov    rbp,rdi
  4087b8:	push   rbx
  4087b9:	mov    rbx,rsi
  4087bc:	sub    rsp,0x8
  4087c0:	mov    edi,DWORD PTR [rsi]
  4087c2:	call   408ae0 <xmlStrEqual@plt+0x4ba0>
  4087c7:	mov    rdx,rax
  4087ca:	lea    rsi,[rip+0x3ffe7]        # 4487b8 <xmlStrEqual@plt+0x44878>
  4087d1:	mov    edi,0x4
  4087d6:	xor    eax,eax
  4087d8:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  4087dd:	mov    rsi,QWORD PTR [rbp+0x0]
  4087e1:	mov    rdi,rbx
  4087e4:	call   42dcf0 <xmlStrEqual@plt+0x29db0>
  4087e9:	add    rsp,0x8
  4087ed:	pop    rbx
  4087ee:	mov    eax,0x1
  4087f3:	pop    rbp
  4087f4:	ret    
  4087f5:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  408800:	endbr64 
  408804:	mov    edi,DWORD PTR [rdi]
  408806:	lea    eax,[rdi-0x2]
  408809:	cmp    eax,0x1
  40880c:	jbe    408812 <xmlStrEqual@plt+0x48d2>
  40880e:	test   edi,edi
  408810:	jne    408820 <xmlStrEqual@plt+0x48e0>
  408812:	mov    rax,0x46d558
  408819:	mov    rax,QWORD PTR [rax]
  40881c:	jmp    QWORD PTR [rax+0x20]
  40881f:	nop
  408820:	mov    rax,0x469e3c
  408827:	mov    eax,DWORD PTR [rax]
  408829:	test   eax,eax
  40882b:	jg     408838 <xmlStrEqual@plt+0x48f8>
  40882d:	mov    eax,0x1
  408832:	ret    
  408833:	nop    DWORD PTR [rax+rax*1+0x0]
  408838:	sub    rsp,0x8
  40883c:	xor    eax,eax
  40883e:	lea    rsi,[rip+0x3ffab]        # 4487f0 <xmlStrEqual@plt+0x448b0>
  408845:	mov    edi,0x5
  40884a:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  40884f:	mov    eax,0x1
  408854:	add    rsp,0x8
  408858:	ret    
  408859:	nop    DWORD PTR [rax+0x0]
  408860:	endbr64 
  408864:	mov    rax,0x46d558
  40886b:	mov    rax,QWORD PTR [rax]
  40886e:	test   rax,rax
  408871:	je     4088c0 <xmlStrEqual@plt+0x4980>
  408873:	sub    rsp,0x8
  408877:	mov    edi,DWORD PTR [rdi]
  408879:	lea    edx,[rdi-0x2]
  40887c:	cmp    edx,0x1
  40887f:	jbe    4088b0 <xmlStrEqual@plt+0x4970>
  408881:	test   edi,edi
  408883:	je     4088b0 <xmlStrEqual@plt+0x4970>
  408885:	mov    rax,0x469e3c
  40888c:	mov    eax,DWORD PTR [rax]
  40888e:	test   eax,eax
  408890:	jle    4088b3 <xmlStrEqual@plt+0x4973>
  408892:	lea    rsi,[rip+0x3ffb7]        # 448850 <xmlStrEqual@plt+0x44910>
  408899:	mov    edi,0x5
  40889e:	xor    eax,eax
  4088a0:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  4088a5:	jmp    4088b3 <xmlStrEqual@plt+0x4973>
  4088a7:	nop    WORD PTR [rax+rax*1+0x0]
  4088b0:	call   QWORD PTR [rax+0x28]
  4088b3:	mov    eax,0x1
  4088b8:	add    rsp,0x8
  4088bc:	ret    
  4088bd:	nop    DWORD PTR [rax]
  4088c0:	mov    eax,0x1
  4088c5:	ret    
  4088c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4088d0:	endbr64 
  4088d4:	mov    rax,0x46d558
  4088db:	movzx  esi,sil
  4088df:	mov    rax,QWORD PTR [rax]
  4088e2:	mov    rax,QWORD PTR [rax+0x60]
  4088e6:	jmp    rax
  4088e8:	nop    DWORD PTR [rax+rax*1+0x0]
  4088f0:	endbr64 
  4088f4:	mov    rax,0x46d558
  4088fb:	mov    rax,QWORD PTR [rax]
  4088fe:	mov    rdx,QWORD PTR [rax+0x68]
  408902:	xor    eax,eax
  408904:	jmp    rdx
  408906:	nop    WORD PTR cs:[rax+rax*1+0x0]
  408910:	endbr64 
  408914:	sub    rsp,0x8
  408918:	call   429760 <xmlStrEqual@plt+0x25820>
  40891d:	mov    rdi,rax
  408920:	add    rsp,0x8
  408924:	jmp    424bf0 <xmlStrEqual@plt+0x20cb0>
  408929:	nop    DWORD PTR [rax+0x0]
  408930:	endbr64 
  408934:	jmp    408910 <xmlStrEqual@plt+0x49d0>
  408936:	nop    WORD PTR cs:[rax+rax*1+0x0]
  408940:	endbr64 
  408944:	mov    eax,DWORD PTR [rdi]
  408946:	ret    
  408947:	nop    WORD PTR [rax+rax*1+0x0]
  408950:	endbr64 
  408954:	mov    rax,QWORD PTR [rdi+0x10]
  408958:	ret    
  408959:	nop    DWORD PTR [rax+0x0]
  408960:	endbr64 
  408964:	mov    rax,QWORD PTR [rdi+0x8]
  408968:	jmp    QWORD PTR [rax+0x30]
  40896b:	nop    DWORD PTR [rax+rax*1+0x0]
  408970:	endbr64 
  408974:	mov    rax,QWORD PTR [rdi+0x8]
  408978:	jmp    QWORD PTR [rax+0x28]
  40897b:	nop    DWORD PTR [rax+rax*1+0x0]
  408980:	endbr64 
  408984:	test   rdi,rdi
  408987:	je     4089a8 <xmlStrEqual@plt+0x4a68>
  408989:	push   rbx
  40898a:	mov    rbx,rdi
  40898d:	mov    rax,QWORD PTR [rdi+0x8]
  408991:	call   QWORD PTR [rax+0x18]
  408994:	mov    rax,QWORD PTR [rbx+0x8]
  408998:	mov    rdi,rbx
  40899b:	mov    rax,QWORD PTR [rax+0x10]
  40899f:	pop    rbx
  4089a0:	jmp    rax
  4089a2:	nop    WORD PTR [rax+rax*1+0x0]
  4089a8:	ret    
  4089a9:	nop    DWORD PTR [rax+0x0]
  4089b0:	endbr64 
  4089b4:	mov    rdi,QWORD PTR [rdi+0x10]
  4089b8:	mov    rax,QWORD PTR [rdi+0x28]
  4089bc:	jmp    QWORD PTR [rax+0x28]
  4089bf:	nop
  4089c0:	endbr64 
  4089c4:	mov    rdi,rsi
  4089c7:	movzx  esi,dl
  4089ca:	jmp    4088d0 <xmlStrEqual@plt+0x4990>
  4089cf:	nop
  4089d0:	endbr64 
  4089d4:	xor    eax,eax
  4089d6:	jmp    4088f0 <xmlStrEqual@plt+0x49b0>
  4089db:	nop    DWORD PTR [rax+rax*1+0x0]
  4089e0:	endbr64 
  4089e4:	mov    rax,QWORD PTR [rdi+0x8]
  4089e8:	movzx  edx,dl
  4089eb:	mov    rax,QWORD PTR [rax+0x38]
  4089ef:	jmp    rax
  4089f1:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4089fc:	nop    DWORD PTR [rax+0x0]
  408a00:	endbr64 
  408a04:	mov    rax,QWORD PTR [rdi+0x8]
  408a08:	movzx  r8d,r8b
  408a0c:	mov    rax,QWORD PTR [rax+0x40]
  408a10:	jmp    rax
  408a12:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  408a1d:	nop    DWORD PTR [rax]
  408a20:	endbr64 
  408a24:	mov    rax,QWORD PTR [rdi+0x8]
  408a28:	jmp    QWORD PTR [rax+0x48]
  408a2b:	nop    DWORD PTR [rax+rax*1+0x0]
  408a30:	endbr64 
  408a34:	mov    rax,QWORD PTR [rdi+0x8]
  408a38:	jmp    QWORD PTR [rax+0x50]
  408a3b:	nop    DWORD PTR [rax+rax*1+0x0]
  408a40:	endbr64 
  408a44:	mov    rax,rdi
  408a47:	sub    rsp,0x8
  408a4b:	mov    QWORD PTR [rax+0x10],rsi
  408a4f:	mov    rdi,rsi
  408a52:	mov    rsi,rax
  408a55:	call   4087b0 <xmlStrEqual@plt+0x4870>
  408a5a:	mov    eax,0x1
  408a5f:	add    rsp,0x8
  408a63:	ret    
  408a64:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  408a6f:	nop
  408a70:	endbr64 
  408a74:	push   r13
  408a76:	mov    edx,edi
  408a78:	lea    rax,[rip+0x60281]        # 468d00 <xmlStrEqual@plt+0x64dc0>
  408a7f:	push   r12
  408a81:	mov    r13,rdx
  408a84:	mov    r12,rsi
  408a87:	push   rbp
  408a88:	push   rbx
  408a89:	sub    rsp,0x8
  408a8d:	mov    QWORD PTR [rsi],0x0
  408a94:	mov    rbp,QWORD PTR [rax+rdx*8]
  408a98:	call   QWORD PTR [rbp+0x0]
  408a9b:	mov    DWORD PTR [rax],r13d
  408a9e:	mov    QWORD PTR [rax+0x8],rbp
  408aa2:	mov    rdi,rax
  408aa5:	mov    rbx,rax
  408aa8:	call   QWORD PTR [rbp+0x8]
  408aab:	mov    rax,0x475830
  408ab2:	mov    rdi,rbx
  408ab5:	mov    rsi,QWORD PTR [rax]
  408ab8:	call   408a40 <xmlStrEqual@plt+0x4b00>
  408abd:	mov    QWORD PTR [r12],rbx
  408ac1:	add    rsp,0x8
  408ac5:	pop    rbx
  408ac6:	pop    rbp
  408ac7:	pop    r12
  408ac9:	mov    eax,0x1
  408ace:	pop    r13
  408ad0:	ret    
  408ad1:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  408adc:	nop    DWORD PTR [rax+0x0]
  408ae0:	endbr64 
  408ae4:	cmp    edi,0x5
  408ae7:	ja     408bd0 <xmlStrEqual@plt+0x4c90>
  408aed:	lea    rdx,[rip+0x3fdb4]        # 4488a8 <xmlStrEqual@plt+0x44968>
  408af4:	mov    edi,edi
  408af6:	movsxd rax,DWORD PTR [rdx+rdi*4]
  408afa:	add    rax,rdx
  408afd:	notrack jmp rax
  408b00:	movabs rax,0x65646f6e20544444
  408b0a:	mov    QWORD PTR [rip+0x64827],rax        # 46d338 <xmlStrEqual@plt+0x693f8>
  408b11:	mov    BYTE PTR [rip+0x64828],0x0        # 46d340 <xmlStrEqual@plt+0x69400>
  408b18:	lea    rax,[rip+0x64819]        # 46d338 <xmlStrEqual@plt+0x693f8>
  408b1f:	ret    
  408b20:	movabs rax,0x6e20524d20544444
  408b2a:	mov    QWORD PTR [rip+0x64807],rax        # 46d338 <xmlStrEqual@plt+0x693f8>
  408b31:	mov    DWORD PTR [rip+0x64805],0x65646f        # 46d340 <xmlStrEqual@plt+0x69400>
  408b3b:	lea    rax,[rip+0x647f6]        # 46d338 <xmlStrEqual@plt+0x693f8>
  408b42:	ret    
  408b43:	nop    DWORD PTR [rax+rax*1+0x0]
  408b48:	mov    DWORD PTR [rip+0x647e6],0x525478        # 46d338 <xmlStrEqual@plt+0x693f8>
  408b52:	lea    rax,[rip+0x647df]        # 46d338 <xmlStrEqual@plt+0x693f8>
  408b59:	ret    
  408b5a:	nop    WORD PTR [rax+rax*1+0x0]
  408b60:	movabs rax,0x767265532070614d
  408b6a:	mov    QWORD PTR [rip+0x647c7],rax        # 46d338 <xmlStrEqual@plt+0x693f8>
  408b71:	mov    eax,0x7265
  408b76:	mov    WORD PTR [rip+0x647c3],ax        # 46d340 <xmlStrEqual@plt+0x69400>
  408b7d:	mov    BYTE PTR [rip+0x647be],0x0        # 46d342 <xmlStrEqual@plt+0x69402>
  408b84:	lea    rax,[rip+0x647ad]        # 46d338 <xmlStrEqual@plt+0x693f8>
  408b8b:	ret    
  408b8c:	nop    DWORD PTR [rax+0x0]
  408b90:	mov    DWORD PTR [rip+0x6479e],0x525452        # 46d338 <xmlStrEqual@plt+0x693f8>
  408b9a:	lea    rax,[rip+0x64797]        # 46d338 <xmlStrEqual@plt+0x693f8>
  408ba1:	ret    
  408ba2:	nop    WORD PTR [rax+rax*1+0x0]
  408ba8:	movabs rax,0x4e20656c69626f4d
  408bb2:	mov    QWORD PTR [rip+0x6477f],rax        # 46d338 <xmlStrEqual@plt+0x693f8>
  408bb9:	mov    DWORD PTR [rip+0x6477d],0x65646f        # 46d340 <xmlStrEqual@plt+0x69400>
  408bc3:	lea    rax,[rip+0x6476e]        # 46d338 <xmlStrEqual@plt+0x693f8>
  408bca:	ret    
  408bcb:	nop    DWORD PTR [rax+rax*1+0x0]
  408bd0:	movabs rax,0x6e776f6e6b6e55
  408bda:	mov    QWORD PTR [rip+0x64757],rax        # 46d338 <xmlStrEqual@plt+0x693f8>
  408be1:	lea    rax,[rip+0x64750]        # 46d338 <xmlStrEqual@plt+0x693f8>
  408be8:	ret    
  408be9:	nop    DWORD PTR [rax+0x0]
  408bf0:	endbr64 
  408bf4:	push   r14
  408bf6:	mov    r14,rdx
  408bf9:	push   r13
  408bfb:	mov    r13,rdi
  408bfe:	push   r12
  408c00:	mov    r12,r8
  408c03:	push   rbp
  408c04:	mov    rbp,rsi
  408c07:	push   rbx
  408c08:	mov    rbx,rcx
  408c0b:	sub    rsp,0x10
  408c0f:	test   rcx,rcx
  408c12:	je     408c60 <xmlStrEqual@plt+0x4d20>
  408c14:	mov    rdi,rbx
  408c17:	call   425890 <xmlStrEqual@plt+0x21950>
  408c1c:	movzx  esi,ax
  408c1f:	mov    rdi,rbp
  408c22:	call   424970 <xmlStrEqual@plt+0x20a30>
  408c27:	mov    r8,rax
  408c2a:	test   rax,rax
  408c2d:	je     408c90 <xmlStrEqual@plt+0x4d50>
  408c2f:	movzx  edx,WORD PTR [r14+0x42]
  408c34:	mov    rcx,rbx
  408c37:	mov    esi,0x10f6
  408c3c:	mov    rdi,r12
  408c3f:	call   439130 <xmlStrEqual@plt+0x351f0>
  408c44:	mov    eax,0x1
  408c49:	add    rsp,0x10
  408c4d:	pop    rbx
  408c4e:	pop    rbp
  408c4f:	pop    r12
  408c51:	pop    r13
  408c53:	pop    r14
  408c55:	ret    
  408c56:	nop    WORD PTR cs:[rax+rax*1+0x0]
  408c60:	mov    r8,rdx
  408c63:	mov    rbx,rdx
  408c66:	add    r8,0x20
  408c6a:	je     408c14 <xmlStrEqual@plt+0x4cd4>
  408c6c:	mov    rsi,r8
  408c6f:	mov    rdi,rbp
  408c72:	mov    QWORD PTR [rsp+0x8],r8
  408c77:	call   424910 <xmlStrEqual@plt+0x209d0>
  408c7c:	test   eax,eax
  408c7e:	mov    r8,QWORD PTR [rsp+0x8]
  408c83:	jne    408c2f <xmlStrEqual@plt+0x4cef>
  408c85:	jmp    408c14 <xmlStrEqual@plt+0x4cd4>
  408c87:	nop    WORD PTR [rax+rax*1+0x0]
  408c90:	mov    ecx,DWORD PTR [rbp+0x18]
  408c93:	test   ecx,ecx
  408c95:	je     408d20 <xmlStrEqual@plt+0x4de0>
  408c9b:	mov    rax,QWORD PTR [rbp+0x8]
  408c9f:	mov    r8,QWORD PTR [rax+0x10]
  408ca3:	test   r8,r8
  408ca6:	je     408d20 <xmlStrEqual@plt+0x4de0>
  408ca8:	mov    rdi,r8
  408cab:	mov    QWORD PTR [rsp+0x8],r8
  408cb0:	call   425890 <xmlStrEqual@plt+0x21950>
  408cb5:	mov    rdi,QWORD PTR [r13+0x10]
  408cb9:	movzx  esi,ax
  408cbc:	call   4086a0 <xmlStrEqual@plt+0x4760>
  408cc1:	test   rax,rax
  408cc4:	mov    rbx,rax
  408cc7:	mov    r8,QWORD PTR [rsp+0x8]
  408ccc:	jne    408c2f <xmlStrEqual@plt+0x4cef>
  408cd2:	mov    rax,0x469e3c
  408cd9:	mov    eax,DWORD PTR [rax]
  408cdb:	test   eax,eax
  408cdd:	jle    408d2d <xmlStrEqual@plt+0x4ded>
  408cdf:	mov    rdi,r8
  408ce2:	call   425890 <xmlStrEqual@plt+0x21950>
  408ce7:	cmp    ax,0x2
  408ceb:	lea    rdx,[rip+0x3fbce]        # 4488c0 <xmlStrEqual@plt+0x44980>
  408cf2:	lea    rax,[rip+0x3fbcc]        # 4488c5 <xmlStrEqual@plt+0x44985>
  408cf9:	cmovne rdx,rax
  408cfd:	lea    rsi,[rip+0x3fbfc]        # 448900 <xmlStrEqual@plt+0x449c0>
  408d04:	xor    eax,eax
  408d06:	mov    edi,0x5
  408d0b:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  408d10:	xor    eax,eax
  408d12:	jmp    408c49 <xmlStrEqual@plt+0x4d09>
  408d17:	nop    WORD PTR [rax+rax*1+0x0]
  408d20:	mov    rax,0x469e3c
  408d27:	mov    edx,DWORD PTR [rax]
  408d29:	test   edx,edx
  408d2b:	jg     408d40 <xmlStrEqual@plt+0x4e00>
  408d2d:	xor    eax,eax
  408d2f:	add    rsp,0x10
  408d33:	pop    rbx
  408d34:	pop    rbp
  408d35:	pop    r12
  408d37:	pop    r13
  408d39:	pop    r14
  408d3b:	ret    
  408d3c:	nop    DWORD PTR [rax+0x0]
  408d40:	xor    eax,eax
  408d42:	lea    rsi,[rip+0x3fb87]        # 4488d0 <xmlStrEqual@plt+0x44990>
  408d49:	mov    edi,0x5
  408d4e:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  408d53:	xor    eax,eax
  408d55:	jmp    408d2f <xmlStrEqual@plt+0x4def>
  408d57:	nop    WORD PTR [rax+rax*1+0x0]
  408d60:	endbr64 
  408d64:	push   rbx
  408d65:	mov    edi,0x8
  408d6a:	call   434fe0 <xmlStrEqual@plt+0x310a0>
  408d6f:	test   rax,rax
  408d72:	je     408d90 <xmlStrEqual@plt+0x4e50>
  408d74:	mov    rbx,rax
  408d77:	xor    eax,eax
  408d79:	call   431e70 <xmlStrEqual@plt+0x2df30>
  408d7e:	mov    QWORD PTR [rbx],rax
  408d81:	test   rax,rax
  408d84:	je     408d90 <xmlStrEqual@plt+0x4e50>
  408d86:	mov    rax,rbx
  408d89:	pop    rbx
  408d8a:	ret    
  408d8b:	nop    DWORD PTR [rax+rax*1+0x0]
  408d90:	xor    eax,eax
  408d92:	xor    ebx,ebx
  408d94:	lea    rsi,[rip+0x3fbad]        # 448948 <xmlStrEqual@plt+0x44a08>
  408d9b:	mov    edi,0x1
  408da0:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  408da5:	mov    rax,rbx
  408da8:	pop    rbx
  408da9:	ret    
  408daa:	nop    WORD PTR [rax+rax*1+0x0]
  408db0:	endbr64 
  408db4:	push   rbx
  408db5:	mov    rsi,0x434b90
  408dbc:	mov    rbx,rdi
  408dbf:	mov    rdi,QWORD PTR [rdi]
  408dc2:	call   4319b0 <xmlStrEqual@plt+0x2da70>
  408dc7:	mov    rdi,rbx
  408dca:	pop    rbx
  408dcb:	jmp    4037b0 <free@plt>
  408dd0:	endbr64 
  408dd4:	push   rbp
  408dd5:	mov    rbp,rsi
  408dd8:	push   rbx
  408dd9:	mov    rbx,rdi
  408ddc:	mov    rdi,rsi
  408ddf:	sub    rsp,0x8
  408de3:	call   434ad0 <xmlStrEqual@plt+0x30b90>
  408de8:	mov    rdi,rax
  408deb:	call   425670 <xmlStrEqual@plt+0x21730>
  408df0:	mov    rdi,QWORD PTR [rbx]
  408df3:	mov    rdx,rbp
  408df6:	mov    rsi,rax
  408df9:	call   4321e0 <xmlStrEqual@plt+0x2e2a0>
  408dfe:	mov    ebx,eax
  408e00:	cmp    eax,0x1
  408e03:	je     408e13 <xmlStrEqual@plt+0x4ed3>
  408e05:	mov    rax,0x469e3c
  408e0c:	xor    ebx,ebx
  408e0e:	cmp    DWORD PTR [rax],0x2
  408e11:	jg     408e20 <xmlStrEqual@plt+0x4ee0>
  408e13:	add    rsp,0x8
  408e17:	mov    eax,ebx
  408e19:	pop    rbx
  408e1a:	pop    rbp
  408e1b:	ret    
  408e1c:	nop    DWORD PTR [rax+0x0]
  408e20:	mov    rdi,rbp
  408e23:	call   434ad0 <xmlStrEqual@plt+0x30b90>
  408e28:	mov    rdi,rax
  408e2b:	call   424d40 <xmlStrEqual@plt+0x20e00>
  408e30:	mov    rdx,rax
  408e33:	lea    rsi,[rip+0x3fb36]        # 448970 <xmlStrEqual@plt+0x44a30>
  408e3a:	xor    eax,eax
  408e3c:	mov    edi,0x7
  408e41:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  408e46:	add    rsp,0x8
  408e4a:	mov    eax,ebx
  408e4c:	pop    rbx
  408e4d:	pop    rbp
  408e4e:	ret    
  408e4f:	nop
  408e50:	endbr64 
  408e54:	push   r13
  408e56:	xor    r13d,r13d
  408e59:	push   r12
  408e5b:	mov    r12d,edx
  408e5e:	push   rbp
  408e5f:	mov    rbp,rdi
  408e62:	push   rbx
  408e63:	mov    rbx,rsi
  408e66:	sub    rsp,0x8
  408e6a:	cmp    DWORD PTR [rsi+0x18],0x3
  408e6e:	je     408ea0 <xmlStrEqual@plt+0x4f60>
  408e70:	mov    rdi,QWORD PTR [rbp+0x0]
  408e74:	call   432d40 <xmlStrEqual@plt+0x2ee00>
  408e79:	mov    rbp,rax
  408e7c:	test   rax,rax
  408e7f:	je     408fa0 <xmlStrEqual@plt+0x5060>
  408e85:	test   r12b,r12b
  408e88:	jne    408ed0 <xmlStrEqual@plt+0x4f90>
  408e8a:	add    rsp,0x8
  408e8e:	pop    rbx
  408e8f:	mov    rax,rbp
  408e92:	pop    rbp
  408e93:	pop    r12
  408e95:	pop    r13
  408e97:	ret    
  408e98:	nop    DWORD PTR [rax+rax*1+0x0]
  408ea0:	mov    rdi,rsi
  408ea3:	call   428e10 <xmlStrEqual@plt+0x24ed0>
  408ea8:	test   eax,eax
  408eaa:	je     408f68 <xmlStrEqual@plt+0x5028>
  408eb0:	mov    rdi,rbx
  408eb3:	call   429910 <xmlStrEqual@plt+0x259d0>
  408eb8:	mov    rdi,rbx
  408ebb:	mov    r13d,eax
  408ebe:	call   425670 <xmlStrEqual@plt+0x21730>
  408ec3:	mov    rsi,rax
  408ec6:	jmp    408e70 <xmlStrEqual@plt+0x4f30>
  408ec8:	nop    DWORD PTR [rax+rax*1+0x0]
  408ed0:	mov    rdi,rax
  408ed3:	call   434ad0 <xmlStrEqual@plt+0x30b90>
  408ed8:	test   r13d,r13d
  408edb:	jne    408f20 <xmlStrEqual@plt+0x4fe0>
  408edd:	cmp    DWORD PTR [rax+0x18],0x3
  408ee1:	jne    408e8a <xmlStrEqual@plt+0x4f4a>
  408ee3:	mov    rax,0x469e3c
  408eea:	cmp    DWORD PTR [rax],0x2
  408eed:	jle    408f0d <xmlStrEqual@plt+0x4fcd>
  408eef:	mov    rdi,rbx
  408ef2:	call   424d40 <xmlStrEqual@plt+0x20e00>
  408ef7:	mov    rdx,rax
  408efa:	lea    rsi,[rip+0x3fb77]        # 448a78 <xmlStrEqual@plt+0x44b38>
  408f01:	mov    edi,0x7
  408f06:	xor    eax,eax
  408f08:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  408f0d:	add    rsp,0x8
  408f11:	pop    rbx
  408f12:	xor    ebp,ebp
  408f14:	mov    rax,rbp
  408f17:	pop    rbp
  408f18:	pop    r12
  408f1a:	pop    r13
  408f1c:	ret    
  408f1d:	nop    DWORD PTR [rax]
  408f20:	mov    rdi,rax
  408f23:	call   429910 <xmlStrEqual@plt+0x259d0>
  408f28:	cmp    eax,r13d
  408f2b:	je     408e8a <xmlStrEqual@plt+0x4f4a>
  408f31:	mov    rax,0x469e3c
  408f38:	cmp    DWORD PTR [rax],0x2
  408f3b:	jle    408f0d <xmlStrEqual@plt+0x4fcd>
  408f3d:	mov    rdi,rbx
  408f40:	call   424d40 <xmlStrEqual@plt+0x20e00>
  408f45:	mov    rdx,rax
  408f48:	lea    rsi,[rip+0x3fad9]        # 448a28 <xmlStrEqual@plt+0x44ae8>
  408f4f:	mov    edi,0x7
  408f54:	xor    eax,eax
  408f56:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  408f5b:	xor    ebp,ebp
  408f5d:	jmp    408e8a <xmlStrEqual@plt+0x4f4a>
  408f62:	nop    WORD PTR [rax+rax*1+0x0]
  408f68:	mov    rax,0x469e3c
  408f6f:	cmp    DWORD PTR [rax],0x1
  408f72:	jle    408f0d <xmlStrEqual@plt+0x4fcd>
  408f74:	mov    rdi,rbx
  408f77:	call   424d40 <xmlStrEqual@plt+0x20e00>
  408f7c:	mov    rdx,rax
  408f7f:	lea    rsi,[rip+0x3fa2a]        # 4489b0 <xmlStrEqual@plt+0x44a70>
  408f86:	mov    edi,0x6
  408f8b:	xor    eax,eax
  408f8d:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  408f92:	xor    ebp,ebp
  408f94:	jmp    408e8a <xmlStrEqual@plt+0x4f4a>
  408f99:	nop    DWORD PTR [rax+0x0]
  408fa0:	mov    rax,0x469e3c
  408fa7:	cmp    DWORD PTR [rax],0x2
  408faa:	jle    408f0d <xmlStrEqual@plt+0x4fcd>
  408fb0:	mov    rdi,rbx
  408fb3:	call   424d40 <xmlStrEqual@plt+0x20e00>
  408fb8:	mov    rdx,rax
  408fbb:	lea    rsi,[rip+0x3fa26]        # 4489e8 <xmlStrEqual@plt+0x44aa8>
  408fc2:	mov    edi,0x7
  408fc7:	xor    eax,eax
  408fc9:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  408fce:	jmp    408e8a <xmlStrEqual@plt+0x4f4a>
  408fd3:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  408fde:	xchg   ax,ax
  408fe0:	endbr64 
  408fe4:	push   rbp
  408fe5:	mov    rbp,rdi
  408fe8:	push   rbx
  408fe9:	mov    rbx,rsi
  408fec:	sub    rsp,0x8
  408ff0:	cmp    DWORD PTR [rsi+0x18],0x3
  408ff4:	je     409030 <xmlStrEqual@plt+0x50f0>
  408ff6:	mov    rdi,QWORD PTR [rbp+0x0]
  408ffa:	call   432d60 <xmlStrEqual@plt+0x2ee20>
  408fff:	mov    rbp,rax
  409002:	test   rax,rax
  409005:	je     409050 <xmlStrEqual@plt+0x5110>
  409007:	mov    rdi,rax
  40900a:	call   434ad0 <xmlStrEqual@plt+0x30b90>
  40900f:	mov    rdi,rax
  409012:	mov    rsi,rbx
  409015:	call   425310 <xmlStrEqual@plt+0x213d0>
  40901a:	test   eax,eax
  40901c:	jne    409070 <xmlStrEqual@plt+0x5130>
  40901e:	add    rsp,0x8
  409022:	pop    rbx
  409023:	mov    rax,rbp
  409026:	pop    rbp
  409027:	ret    
  409028:	nop    DWORD PTR [rax+rax*1+0x0]
  409030:	mov    rdi,rsi
  409033:	call   428e10 <xmlStrEqual@plt+0x24ed0>
  409038:	test   eax,eax
  40903a:	je     4090a0 <xmlStrEqual@plt+0x5160>
  40903c:	mov    rdi,rbx
  40903f:	call   425670 <xmlStrEqual@plt+0x21730>
  409044:	mov    rsi,rax
  409047:	jmp    408ff6 <xmlStrEqual@plt+0x50b6>
  409049:	nop    DWORD PTR [rax+0x0]
  409050:	mov    rax,0x469e3c
  409057:	cmp    DWORD PTR [rax],0x2
  40905a:	jg     4090d8 <xmlStrEqual@plt+0x5198>
  40905c:	xor    ebp,ebp
  40905e:	add    rsp,0x8
  409062:	pop    rbx
  409063:	mov    rax,rbp
  409066:	pop    rbp
  409067:	ret    
  409068:	nop    DWORD PTR [rax+rax*1+0x0]
  409070:	mov    rax,0x469e3c
  409077:	cmp    DWORD PTR [rax],0x2
  40907a:	jle    40905c <xmlStrEqual@plt+0x511c>
  40907c:	mov    rdi,rbx
  40907f:	call   424d40 <xmlStrEqual@plt+0x20e00>
  409084:	mov    rdx,rax
  409087:	lea    rsi,[rip+0x3fa3a]        # 448ac8 <xmlStrEqual@plt+0x44b88>
  40908e:	mov    edi,0x7
  409093:	xor    eax,eax
  409095:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  40909a:	xor    ebp,ebp
  40909c:	jmp    40905e <xmlStrEqual@plt+0x511e>
  40909e:	xchg   ax,ax
  4090a0:	mov    rax,0x469e3c
  4090a7:	cmp    DWORD PTR [rax],0x1
  4090aa:	jle    40905c <xmlStrEqual@plt+0x511c>
  4090ac:	mov    rdi,rbx
  4090af:	call   424d40 <xmlStrEqual@plt+0x20e00>
  4090b4:	mov    rdx,rax
  4090b7:	lea    rsi,[rip+0x3f8f2]        # 4489b0 <xmlStrEqual@plt+0x44a70>
  4090be:	mov    edi,0x6
  4090c3:	xor    eax,eax
  4090c5:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  4090ca:	xor    ebp,ebp
  4090cc:	jmp    40901e <xmlStrEqual@plt+0x50de>
  4090d1:	nop    DWORD PTR [rax+0x0]
  4090d8:	mov    rdi,rbx
  4090db:	call   424d40 <xmlStrEqual@plt+0x20e00>
  4090e0:	mov    rdx,rax
  4090e3:	lea    rsi,[rip+0x3f8fe]        # 4489e8 <xmlStrEqual@plt+0x44aa8>
  4090ea:	mov    edi,0x7
  4090ef:	xor    eax,eax
  4090f1:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  4090f6:	jmp    40901e <xmlStrEqual@plt+0x50de>
  4090fb:	nop    DWORD PTR [rax+rax*1+0x0]
  409100:	endbr64 
  409104:	sub    rsp,0x8
  409108:	mov    rdi,QWORD PTR [rdi]
  40910b:	call   432f40 <xmlStrEqual@plt+0x2f000>
  409110:	test   rax,rax
  409113:	je     409128 <xmlStrEqual@plt+0x51e8>
  409115:	mov    rdi,rax
  409118:	add    rsp,0x8
  40911c:	jmp    434b90 <xmlStrEqual@plt+0x30c50>
  409121:	nop    DWORD PTR [rax+0x0]
  409128:	add    rsp,0x8
  40912c:	ret    
  40912d:	nop    DWORD PTR [rax]
  409130:	endbr64 
  409134:	push   r15
  409136:	push   r14
  409138:	push   r13
  40913a:	push   r12
  40913c:	mov    r12d,esi
  40913f:	push   rbp
  409140:	mov    rbp,rdi
  409143:	push   rbx
  409144:	sub    rsp,0x848
  40914b:	mov    rax,QWORD PTR fs:0x28
  409154:	mov    QWORD PTR [rsp+0x838],rax
  40915c:	xor    eax,eax
  40915e:	call   42dc90 <xmlStrEqual@plt+0x29d50>
  409163:	mov    rbx,rax
  409166:	mov    QWORD PTR [rsp+0x18],rax
  40916b:	mov    rax,QWORD PTR [rbp+0x0]
  40916f:	mov    rsi,rbx
  409172:	mov    rdi,QWORD PTR [rax]
  409175:	call   42dcf0 <xmlStrEqual@plt+0x29db0>
  40917a:	mov    rax,QWORD PTR [rbp+0x0]
  40917e:	mov    rsi,rbx
  409181:	mov    rdi,QWORD PTR [rax+0x8]
  409185:	call   42dcf0 <xmlStrEqual@plt+0x29db0>
  40918a:	mov    rsi,QWORD PTR [rbp+0x0]
  40918e:	mov    rax,QWORD PTR [rsi+0x10]
  409192:	mov    rdi,QWORD PTR [rax]
  409195:	mov    edx,DWORD PTR [rdi]
  409197:	test   edx,edx
  409199:	je     4091ef <xmlStrEqual@plt+0x52af>
  40919b:	xor    ebx,ebx
  40919d:	jmp    4091ac <xmlStrEqual@plt+0x526c>
  40919f:	mov    rax,QWORD PTR [rsi+0x10]
  4091a3:	inc    ebx
  4091a5:	mov    rdi,QWORD PTR [rax]
  4091a8:	cmp    DWORD PTR [rdi],ebx
  4091aa:	je     4091ef <xmlStrEqual@plt+0x52af>
  4091ac:	mov    ecx,ebx
  4091ae:	mov    r8,QWORD PTR [rdi+0x10]
  4091b2:	lea    eax,[rbx+rbx*1]
  4091b5:	and    eax,0x1e
  4091b8:	shr    ecx,0x4
  4091bb:	mov    edx,eax
  4091bd:	mov    eax,DWORD PTR [r8+rcx*4]
  4091c1:	shrx   eax,eax,edx
  4091c6:	test   al,0x3
  4091c8:	jne    40919f <xmlStrEqual@plt+0x525f>
  4091ca:	mov    rdx,QWORD PTR [rdi+0x20]
  4091ce:	mov    eax,ebx
  4091d0:	mov    rdi,QWORD PTR [rdx+rax*8]
  4091d4:	mov    rsi,QWORD PTR [rsp+0x18]
  4091d9:	inc    ebx
  4091db:	call   42dcf0 <xmlStrEqual@plt+0x29db0>
  4091e0:	mov    rsi,QWORD PTR [rbp+0x0]
  4091e4:	mov    rax,QWORD PTR [rsi+0x10]
  4091e8:	mov    rdi,QWORD PTR [rax]
  4091eb:	cmp    DWORD PTR [rdi],ebx
  4091ed:	jne    4091ac <xmlStrEqual@plt+0x526c>
  4091ef:	mov    rax,QWORD PTR [rsi+0x18]
  4091f3:	xor    ebx,ebx
  4091f5:	mov    rdi,QWORD PTR [rax]
  4091f8:	mov    eax,DWORD PTR [rdi]
  4091fa:	test   eax,eax
  4091fc:	jne    40920d <xmlStrEqual@plt+0x52cd>
  4091fe:	jmp    409250 <xmlStrEqual@plt+0x5310>
  409200:	mov    rax,QWORD PTR [rsi+0x18]
  409204:	inc    ebx
  409206:	mov    rdi,QWORD PTR [rax]
  409209:	cmp    DWORD PTR [rdi],ebx
  40920b:	je     409250 <xmlStrEqual@plt+0x5310>
  40920d:	mov    ecx,ebx
  40920f:	mov    r8,QWORD PTR [rdi+0x10]
  409213:	lea    eax,[rbx+rbx*1]
  409216:	and    eax,0x1e
  409219:	shr    ecx,0x4
  40921c:	mov    edx,eax
  40921e:	mov    eax,DWORD PTR [r8+rcx*4]
  409222:	shrx   eax,eax,edx
  409227:	test   al,0x3
  409229:	jne    409200 <xmlStrEqual@plt+0x52c0>
  40922b:	mov    rdx,QWORD PTR [rdi+0x20]
  40922f:	mov    eax,ebx
  409231:	mov    rdi,QWORD PTR [rdx+rax*8]
  409235:	mov    rsi,QWORD PTR [rsp+0x18]
  40923a:	inc    ebx
  40923c:	call   42dcf0 <xmlStrEqual@plt+0x29db0>
  409241:	mov    rsi,QWORD PTR [rbp+0x0]
  409245:	mov    rax,QWORD PTR [rsi+0x18]
  409249:	mov    rdi,QWORD PTR [rax]
  40924c:	cmp    DWORD PTR [rdi],ebx
  40924e:	jne    40920d <xmlStrEqual@plt+0x52cd>
  409250:	mov    rax,QWORD PTR [rsp+0x18]
  409255:	lea    rsi,[rsp+0x20]
  40925a:	mov    rdx,QWORD PTR [rax+0x8]
  40925e:	mov    QWORD PTR [rsp+0x10],rsi
  409263:	lea    rsi,[rsp+0x430]
  40926b:	mov    QWORD PTR [rsp+0x8],rdx
  409270:	mov    QWORD PTR [rsp],rsi
  409274:	cmp    rax,rdx
  409277:	je     4093d9 <xmlStrEqual@plt+0x5499>
  40927d:	nop    DWORD PTR [rax]
  409280:	mov    rax,QWORD PTR [rsp+0x8]
  409285:	mov    rax,QWORD PTR [rax+0x10]
  409289:	mov    rbx,QWORD PTR [rax]
  40928c:	test   rbx,rbx
  40928f:	je     4093c0 <xmlStrEqual@plt+0x5480>
  409295:	mov    rbp,QWORD PTR [rsp+0x10]
  40929a:	nop    WORD PTR [rax+rax*1+0x0]
  4092a0:	cmp    QWORD PTR [rbx+0x8],0x0
  4092a5:	jne    4092d3 <xmlStrEqual@plt+0x5393>
  4092a7:	mov    rax,QWORD PTR [rbx+0x10]
  4092ab:	mov    rbx,QWORD PTR [rbx+0x18]
  4092af:	test   rax,rax
  4092b2:	je     409390 <xmlStrEqual@plt+0x5450>
  4092b8:	test   rbx,rbx
  4092bb:	je     4093b8 <xmlStrEqual@plt+0x5478>
  4092c1:	mov    QWORD PTR [rbp+0x0],rbx
  4092c5:	mov    rbx,rax
  4092c8:	add    rbp,0x8
  4092cc:	cmp    QWORD PTR [rbx+0x8],0x0
  4092d1:	je     4092a7 <xmlStrEqual@plt+0x5367>
  4092d3:	mov    rax,QWORD PTR [rbx+0x28]
  4092d7:	mov    r13,QWORD PTR [rax]
  4092da:	test   r13,r13
  4092dd:	je     4092a7 <xmlStrEqual@plt+0x5367>
  4092df:	mov    r14,QWORD PTR [rsp]
  4092e3:	nop    DWORD PTR [rax+rax*1+0x0]
  4092e8:	cmp    QWORD PTR [r13+0x8],0x0
  4092ed:	je     409319 <xmlStrEqual@plt+0x53d9>
  4092ef:	mov    rdi,QWORD PTR [r13+0x28]
  4092f3:	test   rdi,rdi
  4092f6:	je     409319 <xmlStrEqual@plt+0x53d9>
  4092f8:	call   434ad0 <xmlStrEqual@plt+0x30b90>
  4092fd:	mov    r15,rax
  409300:	test   rax,rax
  409303:	je     409319 <xmlStrEqual@plt+0x53d9>
  409305:	mov    rdi,rax
  409308:	call   425890 <xmlStrEqual@plt+0x21950>
  40930d:	movzx  eax,ax
  409310:	cmp    eax,r12d
  409313:	je     4093dc <xmlStrEqual@plt+0x549c>
  409319:	mov    rax,QWORD PTR [r13+0x10]
  40931d:	mov    r13,QWORD PTR [r13+0x18]
  409321:	test   rax,rax
  409324:	je     409350 <xmlStrEqual@plt+0x5410>
  409326:	test   r13,r13
  409329:	je     409380 <xmlStrEqual@plt+0x5440>
  40932b:	mov    QWORD PTR [r14],r13
  40932e:	mov    r13,rax
  409331:	add    r14,0x8
  409335:	cmp    QWORD PTR [r13+0x8],0x0
  40933a:	jne    4092ef <xmlStrEqual@plt+0x53af>
  40933c:	mov    rax,QWORD PTR [r13+0x10]
  409340:	mov    r13,QWORD PTR [r13+0x18]
  409344:	test   rax,rax
  409347:	jne    409326 <xmlStrEqual@plt+0x53e6>
  409349:	nop    DWORD PTR [rax+0x0]
  409350:	test   r13,r13
  409353:	jne    4092e8 <xmlStrEqual@plt+0x53a8>
  409355:	cmp    r14,QWORD PTR [rsp]
  409359:	je     4092a7 <xmlStrEqual@plt+0x5367>
  40935f:	mov    r13,QWORD PTR [r14-0x8]
  409363:	lea    rax,[r14-0x8]
  409367:	test   r13,r13
  40936a:	je     4092a7 <xmlStrEqual@plt+0x5367>
  409370:	mov    r14,rax
  409373:	jmp    4092e8 <xmlStrEqual@plt+0x53a8>
  409378:	nop    DWORD PTR [rax+rax*1+0x0]
  409380:	mov    r13,rax
  409383:	jmp    4092e8 <xmlStrEqual@plt+0x53a8>
  409388:	nop    DWORD PTR [rax+rax*1+0x0]
  409390:	test   rbx,rbx
  409393:	jne    4092a0 <xmlStrEqual@plt+0x5360>
  409399:	cmp    rbp,QWORD PTR [rsp+0x10]
  40939e:	je     4093c0 <xmlStrEqual@plt+0x5480>
  4093a0:	mov    rbx,QWORD PTR [rbp-0x8]
  4093a4:	test   rbx,rbx
  4093a7:	je     4093c0 <xmlStrEqual@plt+0x5480>
  4093a9:	sub    rbp,0x8
  4093ad:	jmp    4092a0 <xmlStrEqual@plt+0x5360>
  4093b2:	nop    WORD PTR [rax+rax*1+0x0]
  4093b8:	mov    rbx,rax
  4093bb:	jmp    4092a0 <xmlStrEqual@plt+0x5360>
  4093c0:	mov    rax,QWORD PTR [rsp+0x8]
  4093c5:	mov    rax,QWORD PTR [rax+0x8]
  4093c9:	mov    QWORD PTR [rsp+0x8],rax
  4093ce:	cmp    QWORD PTR [rsp+0x18],rax
  4093d3:	jne    409280 <xmlStrEqual@plt+0x5340>
  4093d9:	xor    r15d,r15d
  4093dc:	mov    rdi,QWORD PTR [rsp+0x18]
  4093e1:	call   42e2b0 <xmlStrEqual@plt+0x2a370>
  4093e6:	mov    rdx,QWORD PTR [rsp+0x838]
  4093ee:	xor    rdx,QWORD PTR fs:0x28
  4093f7:	mov    rax,r15
  4093fa:	jne    40940e <xmlStrEqual@plt+0x54ce>
  4093fc:	add    rsp,0x848
  409403:	pop    rbx
  409404:	pop    rbp
  409405:	pop    r12
  409407:	pop    r13
  409409:	pop    r14
  40940b:	pop    r15
  40940d:	ret    
  40940e:	call   403c00 <__stack_chk_fail@plt>
  409413:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40941e:	xchg   ax,ax
  409420:	endbr64 
  409424:	push   r15
  409426:	push   r14
  409428:	push   r13
  40942a:	push   r12
  40942c:	push   rbp
  40942d:	mov    rbp,rdi
  409430:	push   rbx
  409431:	sub    rsp,0x848
  409438:	mov    DWORD PTR [rsp+0x14],esi
  40943c:	mov    rax,QWORD PTR fs:0x28
  409445:	mov    QWORD PTR [rsp+0x838],rax
  40944d:	xor    eax,eax
  40944f:	call   42dc90 <xmlStrEqual@plt+0x29d50>
  409454:	mov    rbx,rax
  409457:	mov    QWORD PTR [rsp+0x8],rax
  40945c:	mov    rax,QWORD PTR [rbp+0x0]
  409460:	mov    rsi,rbx
  409463:	mov    rdi,QWORD PTR [rax]
  409466:	call   42dcf0 <xmlStrEqual@plt+0x29db0>
  40946b:	mov    rax,QWORD PTR [rbp+0x0]
  40946f:	mov    rsi,rbx
  409472:	mov    rdi,QWORD PTR [rax+0x8]
  409476:	call   42dcf0 <xmlStrEqual@plt+0x29db0>
  40947b:	mov    rsi,QWORD PTR [rbp+0x0]
  40947f:	mov    rax,QWORD PTR [rsi+0x10]
  409483:	mov    rdi,QWORD PTR [rax]
  409486:	mov    edx,DWORD PTR [rdi]
  409488:	test   edx,edx
  40948a:	je     4094e0 <xmlStrEqual@plt+0x55a0>
  40948c:	xor    ebx,ebx
  40948e:	jmp    40949d <xmlStrEqual@plt+0x555d>
  409490:	mov    rax,QWORD PTR [rsi+0x10]
  409494:	inc    ebx
  409496:	mov    rdi,QWORD PTR [rax]
  409499:	cmp    DWORD PTR [rdi],ebx
  40949b:	je     4094e0 <xmlStrEqual@plt+0x55a0>
  40949d:	mov    ecx,ebx
  40949f:	mov    r8,QWORD PTR [rdi+0x10]
  4094a3:	lea    eax,[rbx+rbx*1]
  4094a6:	and    eax,0x1e
  4094a9:	shr    ecx,0x4
  4094ac:	mov    edx,eax
  4094ae:	mov    eax,DWORD PTR [r8+rcx*4]
  4094b2:	shrx   eax,eax,edx
  4094b7:	test   al,0x3
  4094b9:	jne    409490 <xmlStrEqual@plt+0x5550>
  4094bb:	mov    rdx,QWORD PTR [rdi+0x20]
  4094bf:	mov    eax,ebx
  4094c1:	mov    rdi,QWORD PTR [rdx+rax*8]
  4094c5:	mov    rsi,QWORD PTR [rsp+0x8]
  4094ca:	inc    ebx
  4094cc:	call   42dcf0 <xmlStrEqual@plt+0x29db0>
  4094d1:	mov    rsi,QWORD PTR [rbp+0x0]
  4094d5:	mov    rax,QWORD PTR [rsi+0x10]
  4094d9:	mov    rdi,QWORD PTR [rax]
  4094dc:	cmp    DWORD PTR [rdi],ebx
  4094de:	jne    40949d <xmlStrEqual@plt+0x555d>
  4094e0:	mov    rax,QWORD PTR [rsi+0x18]
  4094e4:	xor    ebx,ebx
  4094e6:	mov    rdi,QWORD PTR [rax]
  4094e9:	mov    eax,DWORD PTR [rdi]
  4094eb:	test   eax,eax
  4094ed:	jne    409505 <xmlStrEqual@plt+0x55c5>
  4094ef:	jmp    409548 <xmlStrEqual@plt+0x5608>
  4094f1:	nop    DWORD PTR [rax+0x0]
  4094f8:	mov    rax,QWORD PTR [rsi+0x18]
  4094fc:	inc    ebx
  4094fe:	mov    rdi,QWORD PTR [rax]
  409501:	cmp    DWORD PTR [rdi],ebx
  409503:	je     409548 <xmlStrEqual@plt+0x5608>
  409505:	mov    ecx,ebx
  409507:	mov    r8,QWORD PTR [rdi+0x10]
  40950b:	lea    eax,[rbx+rbx*1]
  40950e:	and    eax,0x1e
  409511:	shr    ecx,0x4
  409514:	mov    edx,eax
  409516:	mov    eax,DWORD PTR [r8+rcx*4]
  40951a:	shrx   eax,eax,edx
  40951f:	test   al,0x3
  409521:	jne    4094f8 <xmlStrEqual@plt+0x55b8>
  409523:	mov    rdx,QWORD PTR [rdi+0x20]
  409527:	mov    eax,ebx
  409529:	mov    rdi,QWORD PTR [rdx+rax*8]
  40952d:	mov    rsi,QWORD PTR [rsp+0x8]
  409532:	inc    ebx
  409534:	call   42dcf0 <xmlStrEqual@plt+0x29db0>
  409539:	mov    rsi,QWORD PTR [rbp+0x0]
  40953d:	mov    rax,QWORD PTR [rsi+0x18]
  409541:	mov    rdi,QWORD PTR [rax]
  409544:	cmp    DWORD PTR [rdi],ebx
  409546:	jne    409505 <xmlStrEqual@plt+0x55c5>
  409548:	mov    rax,QWORD PTR [rsp+0x8]
  40954d:	lea    rsi,[rsp+0x20]
  409552:	mov    r12,QWORD PTR [rax+0x8]
  409556:	mov    DWORD PTR [rsp+0x10],0x0
  40955e:	mov    QWORD PTR [rsp+0x18],rsi
  409563:	lea    rbp,[rsp+0x430]
  40956b:	cmp    rax,r12
  40956e:	je     409664 <xmlStrEqual@plt+0x5724>
  409574:	nop    DWORD PTR [rax+0x0]
  409578:	mov    rax,QWORD PTR [r12+0x10]
  40957d:	mov    r15,QWORD PTR [rax]
  409580:	test   r15,r15
  409583:	je     409654 <xmlStrEqual@plt+0x5714>
  409589:	mov    rbx,QWORD PTR [rsp+0x18]
  40958e:	jmp    4095b0 <xmlStrEqual@plt+0x5670>
  409590:	mov    rax,QWORD PTR [r15+0x10]
  409594:	mov    rdx,QWORD PTR [r15+0x18]
  409598:	test   rax,rax
  40959b:	je     409638 <xmlStrEqual@plt+0x56f8>
  4095a1:	test   rdx,rdx
  4095a4:	je     4095ad <xmlStrEqual@plt+0x566d>
  4095a6:	mov    QWORD PTR [rbx],rdx
  4095a9:	add    rbx,0x8
  4095ad:	mov    r15,rax
  4095b0:	cmp    QWORD PTR [r15+0x8],0x0
  4095b5:	je     409590 <xmlStrEqual@plt+0x5650>
  4095b7:	mov    rax,QWORD PTR [r15+0x28]
  4095bb:	mov    r13,QWORD PTR [rax]
  4095be:	test   r13,r13
  4095c1:	je     409590 <xmlStrEqual@plt+0x5650>
  4095c3:	mov    r14,rbp
  4095c6:	jmp    4095df <xmlStrEqual@plt+0x569f>
  4095c8:	nop    DWORD PTR [rax+rax*1+0x0]
  4095d0:	test   rdx,rdx
  4095d3:	je     4095dc <xmlStrEqual@plt+0x569c>
  4095d5:	mov    QWORD PTR [r14],rdx
  4095d8:	add    r14,0x8
  4095dc:	mov    r13,rax
  4095df:	cmp    QWORD PTR [r13+0x8],0x0
  4095e4:	je     409603 <xmlStrEqual@plt+0x56c3>
  4095e6:	mov    rdi,QWORD PTR [r13+0x28]
  4095ea:	test   rdi,rdi
  4095ed:	je     409603 <xmlStrEqual@plt+0x56c3>
  4095ef:	call   434ad0 <xmlStrEqual@plt+0x30b90>
  4095f4:	test   rax,rax
  4095f7:	je     409603 <xmlStrEqual@plt+0x56c3>
  4095f9:	cmp    DWORD PTR [rax+0x18],0x2
  4095fd:	je     4096a0 <xmlStrEqual@plt+0x5760>
  409603:	mov    rax,QWORD PTR [r13+0x10]
  409607:	mov    rdx,QWORD PTR [r13+0x18]
  40960b:	test   rax,rax
  40960e:	jne    4095d0 <xmlStrEqual@plt+0x5690>
  409610:	mov    rax,rdx
  409613:	test   rdx,rdx
  409616:	jne    4095dc <xmlStrEqual@plt+0x569c>
  409618:	cmp    r14,rbp
  40961b:	je     409590 <xmlStrEqual@plt+0x5650>
  409621:	mov    rax,QWORD PTR [r14-0x8]
  409625:	test   rax,rax
  409628:	je     409590 <xmlStrEqual@plt+0x5650>
  40962e:	sub    r14,0x8
  409632:	jmp    4095dc <xmlStrEqual@plt+0x569c>
  409634:	nop    DWORD PTR [rax+0x0]
  409638:	mov    rax,rdx
  40963b:	test   rdx,rdx
  40963e:	jne    4095ad <xmlStrEqual@plt+0x566d>
  409644:	cmp    rbx,QWORD PTR [rsp+0x18]
  409649:	je     409654 <xmlStrEqual@plt+0x5714>
  40964b:	mov    rax,QWORD PTR [rbx-0x8]
  40964f:	test   rax,rax
  409652:	jne    4096c3 <xmlStrEqual@plt+0x5783>
  409654:	mov    r12,QWORD PTR [r12+0x8]
  409659:	cmp    QWORD PTR [rsp+0x8],r12
  40965e:	jne    409578 <xmlStrEqual@plt+0x5638>
  409664:	mov    rdi,QWORD PTR [rsp+0x8]
  409669:	call   42e2b0 <xmlStrEqual@plt+0x2a370>
  40966e:	mov    rsi,QWORD PTR [rsp+0x838]
  409676:	xor    rsi,QWORD PTR fs:0x28
  40967f:	mov    eax,DWORD PTR [rsp+0x10]
  409683:	jne    4096be <xmlStrEqual@plt+0x577e>
  409685:	add    rsp,0x848
  40968c:	pop    rbx
  40968d:	pop    rbp
  40968e:	pop    r12
  409690:	pop    r13
  409692:	pop    r14
  409694:	pop    r15
  409696:	ret    
  409697:	nop    WORD PTR [rax+rax*1+0x0]
  4096a0:	mov    rdi,rax
  4096a3:	call   425890 <xmlStrEqual@plt+0x21950>
  4096a8:	movzx  eax,ax
  4096ab:	cmp    eax,DWORD PTR [rsp+0x14]
  4096af:	sete   al
  4096b2:	movzx  eax,al
  4096b5:	add    DWORD PTR [rsp+0x10],eax
  4096b9:	jmp    409603 <xmlStrEqual@plt+0x56c3>
  4096be:	call   403c00 <__stack_chk_fail@plt>
  4096c3:	sub    rbx,0x8
  4096c7:	jmp    4095ad <xmlStrEqual@plt+0x566d>
  4096cc:	nop    DWORD PTR [rax+0x0]
  4096d0:	endbr64 
  4096d4:	mov    rax,QWORD PTR [rdi]
  4096d7:	mov    eax,DWORD PTR [rax+0x30]
  4096da:	ret    
  4096db:	nop    DWORD PTR [rax+rax*1+0x0]
  4096e0:	endbr64 
  4096e4:	push   r15
  4096e6:	push   r14
  4096e8:	push   r13
  4096ea:	push   r12
  4096ec:	mov    r12,rdi
  4096ef:	push   rbp
  4096f0:	push   rbx
  4096f1:	mov    ebx,esi
  4096f3:	sub    rsp,0x848
  4096fa:	mov    rax,QWORD PTR fs:0x28
  409703:	mov    QWORD PTR [rsp+0x838],rax
  40970b:	xor    eax,eax
  40970d:	cmp    esi,0x4
  409710:	jle    409931 <xmlStrEqual@plt+0x59f1>
  409716:	mov    rax,0x469e3c
  40971d:	mov    eax,DWORD PTR [rax]
  40971f:	add    eax,0x4
  409722:	cmp    esi,eax
  409724:	jle    409931 <xmlStrEqual@plt+0x59f1>
  40972a:	call   42dc90 <xmlStrEqual@plt+0x29d50>
  40972f:	mov    r15,rax
  409732:	mov    QWORD PTR [rsp+0x18],rax
  409737:	mov    rax,QWORD PTR [r12]
  40973b:	mov    rsi,r15
  40973e:	mov    rdi,QWORD PTR [rax]
  409741:	call   42dcf0 <xmlStrEqual@plt+0x29db0>
  409746:	mov    rax,QWORD PTR [r12]
  40974a:	mov    rsi,r15
  40974d:	mov    rdi,QWORD PTR [rax+0x8]
  409751:	call   42dcf0 <xmlStrEqual@plt+0x29db0>
  409756:	mov    rsi,QWORD PTR [r12]
  40975a:	mov    rax,QWORD PTR [rsi+0x10]
  40975e:	mov    rdi,QWORD PTR [rax]
  409761:	mov    edx,DWORD PTR [rdi]
  409763:	test   edx,edx
  409765:	je     4097bc <xmlStrEqual@plt+0x587c>
  409767:	xor    ebp,ebp
  409769:	jmp    409778 <xmlStrEqual@plt+0x5838>
  40976b:	mov    rax,QWORD PTR [rsi+0x10]
  40976f:	inc    ebp
  409771:	mov    rdi,QWORD PTR [rax]
  409774:	cmp    DWORD PTR [rdi],ebp
  409776:	je     4097bc <xmlStrEqual@plt+0x587c>
  409778:	mov    ecx,ebp
  40977a:	mov    r8,QWORD PTR [rdi+0x10]
  40977e:	lea    eax,[rbp+rbp*1+0x0]
  409782:	and    eax,0x1e
  409785:	shr    ecx,0x4
  409788:	mov    edx,eax
  40978a:	mov    eax,DWORD PTR [r8+rcx*4]
  40978e:	shrx   eax,eax,edx
  409793:	test   al,0x3
  409795:	jne    40976b <xmlStrEqual@plt+0x582b>
  409797:	mov    rdx,QWORD PTR [rdi+0x20]
  40979b:	mov    eax,ebp
  40979d:	mov    rdi,QWORD PTR [rdx+rax*8]
  4097a1:	mov    rsi,QWORD PTR [rsp+0x18]
  4097a6:	inc    ebp
  4097a8:	call   42dcf0 <xmlStrEqual@plt+0x29db0>
  4097ad:	mov    rsi,QWORD PTR [r12]
  4097b1:	mov    rax,QWORD PTR [rsi+0x10]
  4097b5:	mov    rdi,QWORD PTR [rax]
  4097b8:	cmp    DWORD PTR [rdi],ebp
  4097ba:	jne    409778 <xmlStrEqual@plt+0x5838>
  4097bc:	mov    rax,QWORD PTR [rsi+0x18]
  4097c0:	mov    rdi,QWORD PTR [rax]
  4097c3:	mov    eax,DWORD PTR [rdi]
  4097c5:	test   eax,eax
  4097c7:	je     40981e <xmlStrEqual@plt+0x58de>
  4097c9:	xor    ebp,ebp
  4097cb:	jmp    4097da <xmlStrEqual@plt+0x589a>
  4097cd:	mov    rax,QWORD PTR [rsi+0x18]
  4097d1:	inc    ebp
  4097d3:	mov    rdi,QWORD PTR [rax]
  4097d6:	cmp    DWORD PTR [rdi],ebp
  4097d8:	je     40981e <xmlStrEqual@plt+0x58de>
  4097da:	mov    ecx,ebp
  4097dc:	mov    r8,QWORD PTR [rdi+0x10]
  4097e0:	lea    eax,[rbp+rbp*1+0x0]
  4097e4:	and    eax,0x1e
  4097e7:	shr    ecx,0x4
  4097ea:	mov    edx,eax
  4097ec:	mov    eax,DWORD PTR [r8+rcx*4]
  4097f0:	shrx   eax,eax,edx
  4097f5:	test   al,0x3
  4097f7:	jne    4097cd <xmlStrEqual@plt+0x588d>
  4097f9:	mov    rdx,QWORD PTR [rdi+0x20]
  4097fd:	mov    eax,ebp
  4097ff:	mov    rdi,QWORD PTR [rdx+rax*8]
  409803:	mov    rsi,QWORD PTR [rsp+0x18]
  409808:	inc    ebp
  40980a:	call   42dcf0 <xmlStrEqual@plt+0x29db0>
  40980f:	mov    rsi,QWORD PTR [r12]
  409813:	mov    rax,QWORD PTR [rsi+0x18]
  409817:	mov    rdi,QWORD PTR [rax]
  40981a:	cmp    DWORD PTR [rdi],ebp
  40981c:	jne    4097da <xmlStrEqual@plt+0x589a>
  40981e:	mov    r15,QWORD PTR [rsp+0x18]
  409823:	mov    rdi,QWORD PTR [rsi+0x20]
  409827:	mov    rsi,r15
  40982a:	call   42dcf0 <xmlStrEqual@plt+0x29db0>
  40982f:	mov    rax,QWORD PTR [r12]
  409833:	mov    rsi,r15
  409836:	mov    rdi,QWORD PTR [rax+0x20]
  40983a:	lea    r12,[rsp+0x430]
  409842:	call   42dcf0 <xmlStrEqual@plt+0x29db0>
  409847:	mov    rcx,QWORD PTR [r15+0x8]
  40984b:	lea    rax,[rsp+0x20]
  409850:	mov    QWORD PTR [rsp+0x8],rcx
  409855:	mov    QWORD PTR [rsp+0x10],rax
  40985a:	cmp    r15,rcx
  40985d:	je     409999 <xmlStrEqual@plt+0x5a59>
  409863:	mov    rax,QWORD PTR [rsp+0x8]
  409868:	mov    rax,QWORD PTR [rax+0x10]
  40986c:	mov    r15,QWORD PTR [rax]
  40986f:	test   r15,r15
  409872:	je     409980 <xmlStrEqual@plt+0x5a40>
  409878:	mov    rbp,QWORD PTR [rsp+0x10]
  40987d:	jmp    4098a1 <xmlStrEqual@plt+0x5961>
  40987f:	nop
  409880:	mov    rax,QWORD PTR [r15+0x10]
  409884:	mov    rdx,QWORD PTR [r15+0x18]
  409888:	test   rax,rax
  40988b:	je     409960 <xmlStrEqual@plt+0x5a20>
  409891:	test   rdx,rdx
  409894:	je     40989e <xmlStrEqual@plt+0x595e>
  409896:	mov    QWORD PTR [rbp+0x0],rdx
  40989a:	add    rbp,0x8
  40989e:	mov    r15,rax
  4098a1:	cmp    QWORD PTR [r15+0x8],0x0
  4098a6:	je     409880 <xmlStrEqual@plt+0x5940>
  4098a8:	mov    rax,QWORD PTR [r15+0x28]
  4098ac:	mov    r13,QWORD PTR [rax]
  4098af:	test   r13,r13
  4098b2:	je     409880 <xmlStrEqual@plt+0x5940>
  4098b4:	mov    r14,r12
  4098b7:	nop    WORD PTR [rax+rax*1+0x0]
  4098c0:	cmp    QWORD PTR [r13+0x8],0x0
  4098c5:	je     4098d7 <xmlStrEqual@plt+0x5997>
  4098c7:	mov    rdi,QWORD PTR [r13+0x28]
  4098cb:	test   rdi,rdi
  4098ce:	je     4098d7 <xmlStrEqual@plt+0x5997>
  4098d0:	mov    esi,ebx
  4098d2:	call   434c90 <xmlStrEqual@plt+0x30d50>
  4098d7:	mov    rdx,QWORD PTR [r13+0x10]
  4098db:	mov    r13,QWORD PTR [r13+0x18]
  4098df:	test   rdx,rdx
  4098e2:	je     409910 <xmlStrEqual@plt+0x59d0>
  4098e4:	test   r13,r13
  4098e7:	je     409950 <xmlStrEqual@plt+0x5a10>
  4098e9:	mov    QWORD PTR [r14],r13
  4098ec:	mov    r13,rdx
  4098ef:	add    r14,0x8
  4098f3:	cmp    QWORD PTR [r13+0x8],0x0
  4098f8:	jne    4098c7 <xmlStrEqual@plt+0x5987>
  4098fa:	mov    rdx,QWORD PTR [r13+0x10]
  4098fe:	mov    r13,QWORD PTR [r13+0x18]
  409902:	test   rdx,rdx
  409905:	jne    4098e4 <xmlStrEqual@plt+0x59a4>
  409907:	nop    WORD PTR [rax+rax*1+0x0]
  409910:	test   r13,r13
  409913:	jne    4098c0 <xmlStrEqual@plt+0x5980>
  409915:	cmp    r14,r12
  409918:	je     409880 <xmlStrEqual@plt+0x5940>
  40991e:	mov    r13,QWORD PTR [r14-0x8]
  409922:	test   r13,r13
  409925:	je     409880 <xmlStrEqual@plt+0x5940>
  40992b:	sub    r14,0x8
  40992f:	jmp    4098c0 <xmlStrEqual@plt+0x5980>
  409931:	lea    rsi,[rip+0x3f1d0]        # 448b08 <xmlStrEqual@plt+0x44bc8>
  409938:	mov    edi,ebx
  40993a:	xor    eax,eax
  40993c:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  409941:	jmp    40972a <xmlStrEqual@plt+0x57ea>
  409946:	nop    WORD PTR cs:[rax+rax*1+0x0]
  409950:	mov    r13,rdx
  409953:	jmp    4098c0 <xmlStrEqual@plt+0x5980>
  409958:	nop    DWORD PTR [rax+rax*1+0x0]
  409960:	mov    rax,rdx
  409963:	test   rdx,rdx
  409966:	jne    40989e <xmlStrEqual@plt+0x595e>
  40996c:	cmp    rbp,QWORD PTR [rsp+0x10]
  409971:	je     409980 <xmlStrEqual@plt+0x5a40>
  409973:	mov    r15,QWORD PTR [rbp-0x8]
  409977:	test   r15,r15
  40997a:	jne    409a11 <xmlStrEqual@plt+0x5ad1>
  409980:	mov    rax,QWORD PTR [rsp+0x8]
  409985:	mov    rax,QWORD PTR [rax+0x8]
  409989:	mov    QWORD PTR [rsp+0x8],rax
  40998e:	cmp    QWORD PTR [rsp+0x18],rax
  409993:	jne    409863 <xmlStrEqual@plt+0x5923>
  409999:	mov    rdi,QWORD PTR [rsp+0x18]
  40999e:	call   42e2b0 <xmlStrEqual@plt+0x2a370>
  4099a3:	cmp    ebx,0x4
  4099a6:	jle    4099dd <xmlStrEqual@plt+0x5a9d>
  4099a8:	mov    rax,0x469e3c
  4099af:	mov    eax,DWORD PTR [rax]
  4099b1:	add    eax,0x4
  4099b4:	cmp    ebx,eax
  4099b6:	jle    4099dd <xmlStrEqual@plt+0x5a9d>
  4099b8:	mov    rax,QWORD PTR [rsp+0x838]
  4099c0:	xor    rax,QWORD PTR fs:0x28
  4099c9:	jne    409a1a <xmlStrEqual@plt+0x5ada>
  4099cb:	add    rsp,0x848
  4099d2:	pop    rbx
  4099d3:	pop    rbp
  4099d4:	pop    r12
  4099d6:	pop    r13
  4099d8:	pop    r14
  4099da:	pop    r15
  4099dc:	ret    
  4099dd:	mov    rax,QWORD PTR [rsp+0x838]
  4099e5:	xor    rax,QWORD PTR fs:0x28
  4099ee:	jne    409a1a <xmlStrEqual@plt+0x5ada>
  4099f0:	add    rsp,0x848
  4099f7:	mov    edi,ebx
  4099f9:	pop    rbx
  4099fa:	pop    rbp
  4099fb:	pop    r12
  4099fd:	pop    r13
  4099ff:	pop    r14
  409a01:	lea    rsi,[rip+0x3f140]        # 448b48 <xmlStrEqual@plt+0x44c08>
  409a08:	xor    eax,eax
  409a0a:	pop    r15
  409a0c:	jmp    430e20 <xmlStrEqual@plt+0x2cee0>
  409a11:	sub    rbp,0x8
  409a15:	jmp    4098a1 <xmlStrEqual@plt+0x5961>
  409a1a:	call   403c00 <__stack_chk_fail@plt>
  409a1f:	nop
  409a20:	endbr64 
  409a24:	push   rbx
  409a25:	mov    edi,0x8
  409a2a:	call   434fe0 <xmlStrEqual@plt+0x310a0>
  409a2f:	mov    rbx,rax
  409a32:	test   rax,rax
  409a35:	je     409a50 <xmlStrEqual@plt+0x5b10>
  409a37:	xor    eax,eax
  409a39:	call   431e70 <xmlStrEqual@plt+0x2df30>
  409a3e:	mov    QWORD PTR [rbx],rax
  409a41:	test   rax,rax
  409a44:	je     409a68 <xmlStrEqual@plt+0x5b28>
  409a46:	mov    rax,rbx
  409a49:	pop    rbx
  409a4a:	ret    
  409a4b:	nop    DWORD PTR [rax+rax*1+0x0]
  409a50:	lea    rsi,[rip+0x3f12a]        # 448b81 <xmlStrEqual@plt+0x44c41>
  409a57:	mov    edi,0x1
  409a5c:	xor    eax,eax
  409a5e:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  409a63:	jmp    409a46 <xmlStrEqual@plt+0x5b06>
  409a65:	nop    DWORD PTR [rax]
  409a68:	lea    rsi,[rip+0x3f12f]        # 448b9e <xmlStrEqual@plt+0x44c5e>
  409a6f:	mov    edi,0x1
  409a74:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  409a79:	xor    ebx,ebx
  409a7b:	jmp    409a46 <xmlStrEqual@plt+0x5b06>
  409a7d:	nop    DWORD PTR [rax]
  409a80:	endbr64 
  409a84:	push   rbx
  409a85:	mov    rsi,0x4336a0
  409a8c:	mov    rbx,rdi
  409a8f:	mov    rdi,QWORD PTR [rdi]
  409a92:	call   4319b0 <xmlStrEqual@plt+0x2da70>
  409a97:	mov    rdi,rbx
  409a9a:	pop    rbx
  409a9b:	jmp    4037b0 <free@plt>
  409aa0:	endbr64 
  409aa4:	mov    rdi,QWORD PTR [rdi]
  409aa7:	jmp    4321e0 <xmlStrEqual@plt+0x2e2a0>
  409aac:	nop    DWORD PTR [rax+0x0]
  409ab0:	endbr64 
  409ab4:	mov    rdi,QWORD PTR [rdi]
  409ab7:	jmp    432f40 <xmlStrEqual@plt+0x2f000>
  409abc:	nop    DWORD PTR [rax+0x0]
  409ac0:	endbr64 
  409ac4:	push   rbx
  409ac5:	mov    rdi,QWORD PTR [rdi]
  409ac8:	call   432d40 <xmlStrEqual@plt+0x2ee00>
  409acd:	test   rax,rax
  409ad0:	je     409afd <xmlStrEqual@plt+0x5bbd>
  409ad2:	mov    rdi,rax
  409ad5:	mov    rbx,rax
  409ad8:	call   433790 <xmlStrEqual@plt+0x2f850>
  409add:	cmp    DWORD PTR [rax+0x18],0x2
  409ae1:	je     409af0 <xmlStrEqual@plt+0x5bb0>
  409ae3:	mov    rax,rbx
  409ae6:	pop    rbx
  409ae7:	ret    
  409ae8:	nop    DWORD PTR [rax+rax*1+0x0]
  409af0:	mov    rdi,rax
  409af3:	call   4256d0 <xmlStrEqual@plt+0x21790>
  409af8:	test   ax,ax
  409afb:	jne    409ae3 <xmlStrEqual@plt+0x5ba3>
  409afd:	xor    ebx,ebx
  409aff:	mov    rax,rbx
  409b02:	pop    rbx
  409b03:	ret    
  409b04:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  409b0f:	nop
  409b10:	endbr64 
  409b14:	mov    rdi,QWORD PTR [rdi]
  409b17:	jmp    432d60 <xmlStrEqual@plt+0x2ee20>
  409b1c:	nop    DWORD PTR [rax+0x0]
  409b20:	endbr64 
  409b24:	push   rbp
  409b25:	push   rbx
  409b26:	mov    rbx,rdi
  409b29:	sub    rsp,0x38
  409b2d:	mov    rax,QWORD PTR fs:0x28
  409b36:	mov    QWORD PTR [rsp+0x28],rax
  409b3b:	xor    eax,eax
  409b3d:	cmp    esi,0x2
  409b40:	je     409b80 <xmlStrEqual@plt+0x5c40>
  409b42:	cmp    esi,0xa
  409b45:	jne    409b64 <xmlStrEqual@plt+0x5c24>
  409b47:	mov    rbp,rsp
  409b4a:	mov    rsi,rbp
  409b4d:	lea    rdi,[rip+0x3f065]        # 448bb9 <xmlStrEqual@plt+0x44c79>
  409b54:	call   425bf0 <xmlStrEqual@plt+0x21cb0>
  409b59:	mov    rsi,rbp
  409b5c:	mov    rdi,rbx
  409b5f:	call   409b10 <xmlStrEqual@plt+0x5bd0>
  409b64:	mov    rdx,QWORD PTR [rsp+0x28]
  409b69:	xor    rdx,QWORD PTR fs:0x28
  409b72:	jne    409b9f <xmlStrEqual@plt+0x5c5f>
  409b74:	add    rsp,0x38
  409b78:	pop    rbx
  409b79:	pop    rbp
  409b7a:	ret    
  409b7b:	nop    DWORD PTR [rax+rax*1+0x0]
  409b80:	mov    rbp,rsp
  409b83:	mov    rsi,rbp
  409b86:	lea    rdi,[rip+0x3eb26]        # 4486b3 <xmlStrEqual@plt+0x44773>
  409b8d:	call   425bf0 <xmlStrEqual@plt+0x21cb0>
  409b92:	mov    rsi,rbp
  409b95:	mov    rdi,rbx
  409b98:	call   409b10 <xmlStrEqual@plt+0x5bd0>
  409b9d:	jmp    409b64 <xmlStrEqual@plt+0x5c24>
  409b9f:	call   403c00 <__stack_chk_fail@plt>
  409ba4:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  409baf:	nop
  409bb0:	endbr64 
  409bb4:	push   r15
  409bb6:	push   r14
  409bb8:	push   r13
  409bba:	push   r12
  409bbc:	mov    r12,rdi
  409bbf:	push   rbp
  409bc0:	push   rbx
  409bc1:	mov    ebx,esi
  409bc3:	sub    rsp,0x848
  409bca:	mov    rax,QWORD PTR fs:0x28
  409bd3:	mov    QWORD PTR [rsp+0x838],rax
  409bdb:	xor    eax,eax
  409bdd:	cmp    esi,0x4
  409be0:	jle    409c1b <xmlStrEqual@plt+0x5cdb>
  409be2:	mov    rax,0x469e3c
  409be9:	mov    eax,DWORD PTR [rax]
  409beb:	add    eax,0x4
  409bee:	cmp    esi,eax
  409bf0:	jle    409c1b <xmlStrEqual@plt+0x5cdb>
  409bf2:	mov    rax,QWORD PTR [rsp+0x838]
  409bfa:	xor    rax,QWORD PTR fs:0x28
  409c03:	jne    409ed5 <xmlStrEqual@plt+0x5f95>
  409c09:	add    rsp,0x848
  409c10:	pop    rbx
  409c11:	pop    rbp
  409c12:	pop    r12
  409c14:	pop    r13
  409c16:	pop    r14
  409c18:	pop    r15
  409c1a:	ret    
  409c1b:	lea    rsi,[rip+0x3ef9e]        # 448bc0 <xmlStrEqual@plt+0x44c80>
  409c22:	mov    edi,ebx
  409c24:	xor    eax,eax
  409c26:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  409c2b:	call   42dc90 <xmlStrEqual@plt+0x29d50>
  409c30:	mov    r15,rax
  409c33:	mov    QWORD PTR [rsp+0x18],rax
  409c38:	mov    rax,QWORD PTR [r12]
  409c3c:	mov    rsi,r15
  409c3f:	mov    rdi,QWORD PTR [rax]
  409c42:	call   42dcf0 <xmlStrEqual@plt+0x29db0>
  409c47:	mov    rax,QWORD PTR [r12]
  409c4b:	mov    rsi,r15
  409c4e:	mov    rdi,QWORD PTR [rax+0x8]
  409c52:	call   42dcf0 <xmlStrEqual@plt+0x29db0>
  409c57:	mov    rsi,QWORD PTR [r12]
  409c5b:	mov    rax,QWORD PTR [rsi+0x10]
  409c5f:	mov    rdi,QWORD PTR [rax]
  409c62:	mov    edx,DWORD PTR [rdi]
  409c64:	test   edx,edx
  409c66:	je     409cbd <xmlStrEqual@plt+0x5d7d>
  409c68:	xor    ebp,ebp
  409c6a:	jmp    409c79 <xmlStrEqual@plt+0x5d39>
  409c6c:	mov    rax,QWORD PTR [rsi+0x10]
  409c70:	inc    ebp
  409c72:	mov    rdi,QWORD PTR [rax]
  409c75:	cmp    DWORD PTR [rdi],ebp
  409c77:	je     409cbd <xmlStrEqual@plt+0x5d7d>
  409c79:	mov    ecx,ebp
  409c7b:	mov    r8,QWORD PTR [rdi+0x10]
  409c7f:	lea    eax,[rbp+rbp*1+0x0]
  409c83:	and    eax,0x1e
  409c86:	shr    ecx,0x4
  409c89:	mov    edx,eax
  409c8b:	mov    eax,DWORD PTR [r8+rcx*4]
  409c8f:	shrx   eax,eax,edx
  409c94:	test   al,0x3
  409c96:	jne    409c6c <xmlStrEqual@plt+0x5d2c>
  409c98:	mov    rdx,QWORD PTR [rdi+0x20]
  409c9c:	mov    eax,ebp
  409c9e:	mov    rdi,QWORD PTR [rdx+rax*8]
  409ca2:	mov    rsi,QWORD PTR [rsp+0x18]
  409ca7:	inc    ebp
  409ca9:	call   42dcf0 <xmlStrEqual@plt+0x29db0>
  409cae:	mov    rsi,QWORD PTR [r12]
  409cb2:	mov    rax,QWORD PTR [rsi+0x10]
  409cb6:	mov    rdi,QWORD PTR [rax]
  409cb9:	cmp    DWORD PTR [rdi],ebp
  409cbb:	jne    409c79 <xmlStrEqual@plt+0x5d39>
  409cbd:	mov    rax,QWORD PTR [rsi+0x18]
  409cc1:	mov    rdi,QWORD PTR [rax]
  409cc4:	mov    eax,DWORD PTR [rdi]
  409cc6:	test   eax,eax
  409cc8:	je     409d1f <xmlStrEqual@plt+0x5ddf>
  409cca:	xor    ebp,ebp
  409ccc:	jmp    409cdb <xmlStrEqual@plt+0x5d9b>
  409cce:	mov    rax,QWORD PTR [rsi+0x18]
  409cd2:	inc    ebp
  409cd4:	mov    rdi,QWORD PTR [rax]
  409cd7:	cmp    DWORD PTR [rdi],ebp
  409cd9:	je     409d1f <xmlStrEqual@plt+0x5ddf>
  409cdb:	mov    ecx,ebp
  409cdd:	mov    r8,QWORD PTR [rdi+0x10]
  409ce1:	lea    eax,[rbp+rbp*1+0x0]
  409ce5:	and    eax,0x1e
  409ce8:	shr    ecx,0x4
  409ceb:	mov    edx,eax
  409ced:	mov    eax,DWORD PTR [r8+rcx*4]
  409cf1:	shrx   eax,eax,edx
  409cf6:	test   al,0x3
  409cf8:	jne    409cce <xmlStrEqual@plt+0x5d8e>
  409cfa:	mov    rdx,QWORD PTR [rdi+0x20]
  409cfe:	mov    eax,ebp
  409d00:	mov    rdi,QWORD PTR [rdx+rax*8]
  409d04:	mov    rsi,QWORD PTR [rsp+0x18]
  409d09:	inc    ebp
  409d0b:	call   42dcf0 <xmlStrEqual@plt+0x29db0>
  409d10:	mov    rsi,QWORD PTR [r12]
  409d14:	mov    rax,QWORD PTR [rsi+0x18]
  409d18:	mov    rdi,QWORD PTR [rax]
  409d1b:	cmp    DWORD PTR [rdi],ebp
  409d1d:	jne    409cdb <xmlStrEqual@plt+0x5d9b>
  409d1f:	mov    r15,QWORD PTR [rsp+0x18]
  409d24:	mov    rdi,QWORD PTR [rsi+0x20]
  409d28:	mov    rsi,r15
  409d2b:	call   42dcf0 <xmlStrEqual@plt+0x29db0>
  409d30:	mov    rax,QWORD PTR [r12]
  409d34:	mov    rsi,r15
  409d37:	mov    rdi,QWORD PTR [rax+0x20]
  409d3b:	lea    r12,[rsp+0x430]
  409d43:	call   42dcf0 <xmlStrEqual@plt+0x29db0>
  409d48:	mov    rcx,QWORD PTR [r15+0x8]
  409d4c:	lea    rax,[rsp+0x20]
  409d51:	mov    QWORD PTR [rsp+0x8],rcx
  409d56:	mov    QWORD PTR [rsp+0x10],rax
  409d5b:	cmp    r15,rcx
  409d5e:	je     409e75 <xmlStrEqual@plt+0x5f35>
  409d64:	mov    rax,QWORD PTR [rsp+0x8]
  409d69:	mov    rax,QWORD PTR [rax+0x10]
  409d6d:	mov    r15,QWORD PTR [rax]
  409d70:	test   r15,r15
  409d73:	je     409e5c <xmlStrEqual@plt+0x5f1c>
  409d79:	mov    rbp,QWORD PTR [rsp+0x10]
  409d7e:	jmp    409da1 <xmlStrEqual@plt+0x5e61>
  409d80:	mov    rax,QWORD PTR [r15+0x10]
  409d84:	mov    rdx,QWORD PTR [r15+0x18]
  409d88:	test   rax,rax
  409d8b:	je     409e40 <xmlStrEqual@plt+0x5f00>
  409d91:	test   rdx,rdx
  409d94:	je     409d9e <xmlStrEqual@plt+0x5e5e>
  409d96:	mov    QWORD PTR [rbp+0x0],rdx
  409d9a:	add    rbp,0x8
  409d9e:	mov    r15,rax
  409da1:	cmp    QWORD PTR [r15+0x8],0x0
  409da6:	je     409d80 <xmlStrEqual@plt+0x5e40>
  409da8:	mov    rax,QWORD PTR [r15+0x28]
  409dac:	mov    r13,QWORD PTR [rax]
  409daf:	test   r13,r13
  409db2:	je     409d80 <xmlStrEqual@plt+0x5e40>
  409db4:	mov    r14,r12
  409db7:	nop    WORD PTR [rax+rax*1+0x0]
  409dc0:	cmp    QWORD PTR [r13+0x8],0x0
  409dc5:	je     409dd7 <xmlStrEqual@plt+0x5e97>
  409dc7:	mov    rdi,QWORD PTR [r13+0x28]
  409dcb:	test   rdi,rdi
  409dce:	je     409dd7 <xmlStrEqual@plt+0x5e97>
  409dd0:	mov    esi,ebx
  409dd2:	call   4337c0 <xmlStrEqual@plt+0x2f880>
  409dd7:	mov    rdx,QWORD PTR [r13+0x10]
  409ddb:	mov    r13,QWORD PTR [r13+0x18]
  409ddf:	test   rdx,rdx
  409de2:	je     409e10 <xmlStrEqual@plt+0x5ed0>
  409de4:	test   r13,r13
  409de7:	je     409e38 <xmlStrEqual@plt+0x5ef8>
  409de9:	mov    QWORD PTR [r14],r13
  409dec:	mov    r13,rdx
  409def:	add    r14,0x8
  409df3:	cmp    QWORD PTR [r13+0x8],0x0
  409df8:	jne    409dc7 <xmlStrEqual@plt+0x5e87>
  409dfa:	mov    rdx,QWORD PTR [r13+0x10]
  409dfe:	mov    r13,QWORD PTR [r13+0x18]
  409e02:	test   rdx,rdx
  409e05:	jne    409de4 <xmlStrEqual@plt+0x5ea4>
  409e07:	nop    WORD PTR [rax+rax*1+0x0]
  409e10:	test   r13,r13
  409e13:	jne    409dc0 <xmlStrEqual@plt+0x5e80>
  409e15:	cmp    r14,r12
  409e18:	je     409d80 <xmlStrEqual@plt+0x5e40>
  409e1e:	mov    r13,QWORD PTR [r14-0x8]
  409e22:	test   r13,r13
  409e25:	je     409d80 <xmlStrEqual@plt+0x5e40>
  409e2b:	sub    r14,0x8
  409e2f:	jmp    409dc0 <xmlStrEqual@plt+0x5e80>
  409e31:	nop    DWORD PTR [rax+0x0]
  409e38:	mov    r13,rdx
  409e3b:	jmp    409dc0 <xmlStrEqual@plt+0x5e80>
  409e3d:	nop    DWORD PTR [rax]
  409e40:	mov    rax,rdx
  409e43:	test   rdx,rdx
  409e46:	jne    409d9e <xmlStrEqual@plt+0x5e5e>
  409e4c:	cmp    rbp,QWORD PTR [rsp+0x10]
  409e51:	je     409e5c <xmlStrEqual@plt+0x5f1c>
  409e53:	mov    r15,QWORD PTR [rbp-0x8]
  409e57:	test   r15,r15
  409e5a:	jne    409ecc <xmlStrEqual@plt+0x5f8c>
  409e5c:	mov    rax,QWORD PTR [rsp+0x8]
  409e61:	mov    rax,QWORD PTR [rax+0x8]
  409e65:	mov    QWORD PTR [rsp+0x8],rax
  409e6a:	cmp    QWORD PTR [rsp+0x18],rax
  409e6f:	jne    409d64 <xmlStrEqual@plt+0x5e24>
  409e75:	mov    rdi,QWORD PTR [rsp+0x18]
  409e7a:	call   42e2b0 <xmlStrEqual@plt+0x2a370>
  409e7f:	cmp    ebx,0x4
  409e82:	jle    409e98 <xmlStrEqual@plt+0x5f58>
  409e84:	mov    rax,0x469e3c
  409e8b:	mov    eax,DWORD PTR [rax]
  409e8d:	add    eax,0x4
  409e90:	cmp    ebx,eax
  409e92:	jg     409bf2 <xmlStrEqual@plt+0x5cb2>
  409e98:	mov    rax,QWORD PTR [rsp+0x838]
  409ea0:	xor    rax,QWORD PTR fs:0x28
  409ea9:	jne    409ed5 <xmlStrEqual@plt+0x5f95>
  409eab:	add    rsp,0x848
  409eb2:	mov    edi,ebx
  409eb4:	pop    rbx
  409eb5:	pop    rbp
  409eb6:	pop    r12
  409eb8:	pop    r13
  409eba:	pop    r14
  409ebc:	lea    rsi,[rip+0x3ec85]        # 448b48 <xmlStrEqual@plt+0x44c08>
  409ec3:	xor    eax,eax
  409ec5:	pop    r15
  409ec7:	jmp    430e20 <xmlStrEqual@plt+0x2cee0>
  409ecc:	sub    rbp,0x8
  409ed0:	jmp    409da1 <xmlStrEqual@plt+0x5e61>
  409ed5:	call   403c00 <__stack_chk_fail@plt>
  409eda:	nop    WORD PTR [rax+rax*1+0x0]
  409ee0:	endbr64 
  409ee4:	mov    eax,0x1
  409ee9:	ret    
  409eea:	nop    WORD PTR [rax+rax*1+0x0]
  409ef0:	endbr64 
  409ef4:	push   rbx
  409ef5:	mov    rbx,rdi
  409ef8:	mov    rdi,QWORD PTR [rdi+0x8]
  409efc:	call   424bf0 <xmlStrEqual@plt+0x20cb0>
  409f01:	mov    rdi,QWORD PTR [rbx]
  409f04:	call   424bf0 <xmlStrEqual@plt+0x20cb0>
  409f09:	mov    rdi,QWORD PTR [rbx+0x10]
  409f0d:	call   424bf0 <xmlStrEqual@plt+0x20cb0>
  409f12:	mov    rdi,QWORD PTR [rbx+0x18]
  409f16:	call   424bf0 <xmlStrEqual@plt+0x20cb0>
  409f1b:	mov    rdi,rbx
  409f1e:	pop    rbx
  409f1f:	jmp    4037b0 <free@plt>
  409f24:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  409f2f:	nop
  409f30:	endbr64 
  409f34:	jmp    4037b0 <free@plt>
  409f39:	nop    DWORD PTR [rax+0x0]
  409f40:	endbr64 
  409f44:	push   rbx
  409f45:	mov    rbx,rdi
  409f48:	mov    rdi,QWORD PTR [rdi]
  409f4b:	call   424bf0 <xmlStrEqual@plt+0x20cb0>
  409f50:	mov    rdi,QWORD PTR [rbx+0x8]
  409f54:	call   4037b0 <free@plt>
  409f59:	mov    rdi,rbx
  409f5c:	pop    rbx
  409f5d:	jmp    4037b0 <free@plt>
  409f62:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  409f6d:	nop    DWORD PTR [rax]
  409f70:	endbr64 
  409f74:	sub    rsp,0x8
  409f78:	mov    edi,0x78
  409f7d:	call   434fe0 <xmlStrEqual@plt+0x310a0>
  409f82:	add    rsp,0x8
  409f86:	ret    
  409f87:	nop    WORD PTR [rax+rax*1+0x0]
  409f90:	endbr64 
  409f94:	sub    rsp,0x8
  409f98:	call   43b440 <xmlStrEqual@plt+0x37500>
  409f9d:	mov    rdx,0x475860
  409fa4:	mov    rcx,0x475858
  409fab:	mov    rdx,QWORD PTR [rdx]
  409fae:	mov    rsi,QWORD PTR [rcx]
  409fb1:	mov    rdi,rax
  409fb4:	call   43b8d0 <xmlStrEqual@plt+0x37990>
  409fb9:	mov    eax,0x1
  409fbe:	add    rsp,0x8
  409fc2:	ret    
  409fc3:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  409fce:	xchg   ax,ax
  409fd0:	endbr64 
  409fd4:	test   rdi,rdi
  409fd7:	je     40a160 <xmlStrEqual@plt+0x6220>
  409fdd:	push   rbp
  409fde:	lea    rbp,[rip+0x6337b]        # 46d360 <xmlStrEqual@plt+0x69420>
  409fe5:	push   rbx
  409fe6:	mov    rbx,rdi
  409fe9:	sub    rsp,0x8
  409fed:	mov    BYTE PTR [rip+0x6336c],0x0        # 46d360 <xmlStrEqual@plt+0x69420>
  409ff4:	mov    rdi,QWORD PTR [rdi]
  409ff7:	call   424d40 <xmlStrEqual@plt+0x20e00>
  409ffc:	mov    r9,rax
  409fff:	mov    rdi,rbp
  40a002:	mov    rdx,rbp
  40a005:	mov    ecx,DWORD PTR [rdx]
  40a007:	add    rdx,0x4
  40a00b:	lea    esi,[rcx-0x1010101]
  40a011:	andn   esi,ecx,esi
  40a016:	and    esi,0x80808080
  40a01c:	je     40a005 <xmlStrEqual@plt+0x60c5>
  40a01e:	mov    ecx,esi
  40a020:	shr    ecx,0x10
  40a023:	test   esi,0x8080
  40a029:	cmove  esi,ecx
  40a02c:	lea    rcx,[rdx+0x2]
  40a030:	cmove  rdx,rcx
  40a034:	mov    eax,esi
  40a036:	add    al,sil
  40a039:	sbb    rdx,0x3
  40a03d:	sub    rdx,rbp
  40a040:	mov    esi,0x1f4
  40a045:	add    rdi,rdx
  40a048:	sub    rsi,rdx
  40a04b:	lea    rbp,[rip+0x6330e]        # 46d360 <xmlStrEqual@plt+0x69420>
  40a052:	lea    r8,[rip+0x3eba6]        # 448bff <xmlStrEqual@plt+0x44cbf>
  40a059:	mov    rcx,0xffffffffffffffff
  40a060:	mov    edx,0x1
  40a065:	xor    eax,eax
  40a067:	call   403a40 <__snprintf_chk@plt>
  40a06c:	mov    rdi,rbp
  40a06f:	mov    rax,rbp
  40a072:	mov    edx,DWORD PTR [rax]
  40a074:	add    rax,0x4
  40a078:	lea    esi,[rdx-0x1010101]
  40a07e:	andn   esi,edx,esi
  40a083:	and    esi,0x80808080
  40a089:	je     40a072 <xmlStrEqual@plt+0x6132>
  40a08b:	mov    edx,esi
  40a08d:	shr    edx,0x10
  40a090:	test   esi,0x8080
  40a096:	cmove  esi,edx
  40a099:	lea    rdx,[rax+0x2]
  40a09d:	mov    ecx,esi
  40a09f:	cmove  rax,rdx
  40a0a3:	add    cl,sil
  40a0a6:	sbb    rax,0x3
  40a0aa:	sub    rax,rbp
  40a0ad:	mov    esi,0x1f4
  40a0b2:	add    rdi,rax
  40a0b5:	sub    rsi,rax
  40a0b8:	lea    rdx,[rip+0x3eb4e]        # 448c0d <xmlStrEqual@plt+0x44ccd>
  40a0bf:	xor    eax,eax
  40a0c1:	call   403de0 <snprintf@plt>
  40a0c6:	mov    eax,DWORD PTR [rbx+0x14]
  40a0c9:	lea    r9,[rip+0x3eb28]        # 448bf8 <xmlStrEqual@plt+0x44cb8>
  40a0d0:	test   eax,eax
  40a0d2:	lea    rax,[rip+0x3eb23]        # 448bfc <xmlStrEqual@plt+0x44cbc>
  40a0d9:	lea    rdi,[rip+0x63280]        # 46d360 <xmlStrEqual@plt+0x69420>
  40a0e0:	cmovne r9,rax
  40a0e4:	mov    rdx,rdi
  40a0e7:	mov    rcx,rdi
  40a0ea:	mov    eax,DWORD PTR [rcx]
  40a0ec:	add    rcx,0x4
  40a0f0:	lea    esi,[rax-0x1010101]
  40a0f6:	andn   esi,eax,esi
  40a0fb:	and    esi,0x80808080
  40a101:	je     40a0ea <xmlStrEqual@plt+0x61aa>
  40a103:	mov    eax,esi
  40a105:	shr    eax,0x10
  40a108:	test   esi,0x8080
  40a10e:	cmove  esi,eax
  40a111:	lea    rax,[rcx+0x2]
  40a115:	cmove  rcx,rax
  40a119:	mov    eax,esi
  40a11b:	add    al,sil
  40a11e:	sbb    rcx,0x3
  40a122:	sub    rcx,rdx
  40a125:	mov    esi,0x1f4
  40a12a:	sub    rsi,rcx
  40a12d:	add    rdi,rcx
  40a130:	lea    r8,[rip+0x3eae4]        # 448c1b <xmlStrEqual@plt+0x44cdb>
  40a137:	mov    rcx,0xffffffffffffffff
  40a13e:	mov    edx,0x1
  40a143:	xor    eax,eax
  40a145:	call   403a40 <__snprintf_chk@plt>
  40a14a:	add    rsp,0x8
  40a14e:	pop    rbx
  40a14f:	lea    rax,[rip+0x6320a]        # 46d360 <xmlStrEqual@plt+0x69420>
  40a156:	pop    rbp
  40a157:	ret    
  40a158:	nop    DWORD PTR [rax+rax*1+0x0]
  40a160:	mov    edx,0x5f4c
  40a165:	mov    DWORD PTR [rip+0x631f1],0x4c554e5f        # 46d360 <xmlStrEqual@plt+0x69420>
  40a16f:	mov    WORD PTR [rip+0x631ee],dx        # 46d364 <xmlStrEqual@plt+0x69424>
  40a176:	mov    BYTE PTR [rip+0x631e9],0x0        # 46d366 <xmlStrEqual@plt+0x69426>
  40a17d:	lea    rax,[rip+0x631dc]        # 46d360 <xmlStrEqual@plt+0x69420>
  40a184:	ret    
  40a185:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40a190:	endbr64 
  40a194:	push   rbp
  40a195:	push   rbx
  40a196:	mov    rbx,rdi
  40a199:	sub    rsp,0x8
  40a19d:	call   43b430 <xmlStrEqual@plt+0x374f0>
  40a1a2:	mov    rdi,rbx
  40a1a5:	mov    rbp,rax
  40a1a8:	call   43b440 <xmlStrEqual@plt+0x37500>
  40a1ad:	mov    rbx,QWORD PTR [rax]
  40a1b0:	mov    rsi,QWORD PTR [rax+0x8]
  40a1b4:	mov    rdi,rbx
  40a1b7:	call   434860 <xmlStrEqual@plt+0x30920>
  40a1bc:	mov    rax,QWORD PTR [rbx+0x8]
  40a1c0:	cmp    WORD PTR [rax+0x20],0x0
  40a1c5:	jne    40a220 <xmlStrEqual@plt+0x62e0>
  40a1c7:	mov    rax,0x469e3c
  40a1ce:	mov    eax,DWORD PTR [rax]
  40a1d0:	test   eax,eax
  40a1d2:	jg     40a1f0 <xmlStrEqual@plt+0x62b0>
  40a1d4:	lea    rdi,[rbp+0x18]
  40a1d8:	mov    rsi,rbx
  40a1db:	call   40c7e0 <xmlStrEqual@plt+0x88a0>
  40a1e0:	add    rsp,0x8
  40a1e4:	pop    rbx
  40a1e5:	mov    eax,0x1
  40a1ea:	pop    rbp
  40a1eb:	ret    
  40a1ec:	nop    DWORD PTR [rax+0x0]
  40a1f0:	mov    rdi,rbx
  40a1f3:	call   433790 <xmlStrEqual@plt+0x2f850>
  40a1f8:	mov    rdi,rax
  40a1fb:	call   424d40 <xmlStrEqual@plt+0x20e00>
  40a200:	mov    rdx,rax
  40a203:	lea    rsi,[rip+0x3ea27]        # 448c31 <xmlStrEqual@plt+0x44cf1>
  40a20a:	mov    edi,0x5
  40a20f:	xor    eax,eax
  40a211:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  40a216:	jmp    40a1d4 <xmlStrEqual@plt+0x6294>
  40a218:	nop    DWORD PTR [rax+rax*1+0x0]
  40a220:	mov    rdi,rbx
  40a223:	call   433790 <xmlStrEqual@plt+0x2f850>
  40a228:	mov    rsi,rax
  40a22b:	mov    rdi,rbp
  40a22e:	xor    edx,edx
  40a230:	call   4089c0 <xmlStrEqual@plt+0x4a80>
  40a235:	add    rsp,0x8
  40a239:	pop    rbx
  40a23a:	mov    eax,0x1
  40a23f:	pop    rbp
  40a240:	ret    
  40a241:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40a24c:	nop    DWORD PTR [rax+0x0]
  40a250:	endbr64 
  40a254:	sub    rsp,0x8
  40a258:	mov    rax,0x4695a0
  40a25f:	cmp    QWORD PTR [rdi+0x8],rax
  40a263:	jne    40a2a0 <xmlStrEqual@plt+0x6360>
  40a265:	call   4037b0 <free@plt>
  40a26a:	mov    rax,0x469e3c
  40a271:	mov    eax,DWORD PTR [rax]
  40a273:	test   eax,eax
  40a275:	jg     40a280 <xmlStrEqual@plt+0x6340>
  40a277:	add    rsp,0x8
  40a27b:	ret    
  40a27c:	nop    DWORD PTR [rax+0x0]
  40a280:	lea    rsi,[rip+0x3e9db]        # 448c62 <xmlStrEqual@plt+0x44d22>
  40a287:	mov    edi,0x5
  40a28c:	xor    eax,eax
  40a28e:	add    rsp,0x8
  40a292:	jmp    430e20 <xmlStrEqual@plt+0x2cee0>
  40a297:	nop    WORD PTR [rax+rax*1+0x0]
  40a2a0:	lea    rdx,[rip+0x3ea91]        # 448d38 <xmlStrEqual@plt+0x44df8>
  40a2a7:	lea    rsi,[rip+0x3f39a]        # 449648 <xmlStrEqual@plt+0x45708>
  40a2ae:	lea    rdi,[rip+0x3e996]        # 448c4b <xmlStrEqual@plt+0x44d0b>
  40a2b5:	call   4350f0 <xmlStrEqual@plt+0x311b0>
  40a2ba:	nop    WORD PTR [rax+rax*1+0x0]
  40a2c0:	endbr64 
  40a2c4:	push   rbx
  40a2c5:	mov    rax,0x4695a0
  40a2cc:	cmp    QWORD PTR [rdi+0x8],rax
  40a2d0:	jne    40a318 <xmlStrEqual@plt+0x63d8>
  40a2d2:	mov    rbx,rdi
  40a2d5:	lea    rdi,[rdi+0x18]
  40a2d9:	call   40be60 <xmlStrEqual@plt+0x7f20>
  40a2de:	mov    rdi,QWORD PTR [rbx+0x68]
  40a2e2:	call   434b90 <xmlStrEqual@plt+0x30c50>
  40a2e7:	mov    rdi,QWORD PTR [rbx+0x70]
  40a2eb:	call   43add0 <xmlStrEqual@plt+0x36e90>
  40a2f0:	mov    rax,0x469e3c
  40a2f7:	mov    eax,DWORD PTR [rax]
  40a2f9:	test   eax,eax
  40a2fb:	jg     40a300 <xmlStrEqual@plt+0x63c0>
  40a2fd:	pop    rbx
  40a2fe:	ret    
  40a2ff:	nop
  40a300:	lea    rsi,[rip+0x3e969]        # 448c70 <xmlStrEqual@plt+0x44d30>
  40a307:	mov    edi,0x5
  40a30c:	xor    eax,eax
  40a30e:	pop    rbx
  40a30f:	jmp    430e20 <xmlStrEqual@plt+0x2cee0>
  40a314:	nop    DWORD PTR [rax+0x0]
  40a318:	lea    rdx,[rip+0x3ea19]        # 448d38 <xmlStrEqual@plt+0x44df8>
  40a31f:	lea    rsi,[rip+0x3f322]        # 449648 <xmlStrEqual@plt+0x45708>
  40a326:	lea    rdi,[rip+0x3e91e]        # 448c4b <xmlStrEqual@plt+0x44d0b>
  40a32d:	call   4350f0 <xmlStrEqual@plt+0x311b0>
  40a332:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40a33d:	nop    DWORD PTR [rax]
  40a340:	endbr64 
  40a344:	push   r12
  40a346:	push   rbp
  40a347:	push   rbx
  40a348:	sub    rsp,0x30
  40a34c:	mov    rax,QWORD PTR fs:0x28
  40a355:	mov    QWORD PTR [rsp+0x28],rax
  40a35a:	xor    eax,eax
  40a35c:	mov    rax,0x4695a0
  40a363:	cmp    QWORD PTR [rdi+0x8],rax
  40a367:	jne    40a470 <xmlStrEqual@plt+0x6530>
  40a36d:	mov    r12,rsp
  40a370:	mov    rbx,rdi
  40a373:	lea    rdi,[rdi+0x18]
  40a377:	call   40bde0 <xmlStrEqual@plt+0x7ea0>
  40a37c:	xor    esi,esi
  40a37e:	mov    rdi,r12
  40a381:	call   424dd0 <xmlStrEqual@plt+0x20e90>
  40a386:	xor    eax,eax
  40a388:	call   42aff0 <xmlStrEqual@plt+0x270b0>
  40a38d:	mov    rbp,rax
  40a390:	mov    rsi,r12
  40a393:	mov    rdi,rax
  40a396:	call   424fd0 <xmlStrEqual@plt+0x21090>
  40a39b:	test   rbp,rbp
  40a39e:	je     40a410 <xmlStrEqual@plt+0x64d0>
  40a3a0:	mov    rdi,rbp
  40a3a3:	call   434af0 <xmlStrEqual@plt+0x30bb0>
  40a3a8:	mov    QWORD PTR [rbx+0x68],rax
  40a3ac:	test   rax,rax
  40a3af:	je     40a428 <xmlStrEqual@plt+0x64e8>
  40a3b1:	mov    rdi,0x409f40
  40a3b8:	call   43a0a0 <xmlStrEqual@plt+0x36160>
  40a3bd:	mov    QWORD PTR [rbx+0x70],rax
  40a3c1:	mov    rax,0x469e3c
  40a3c8:	mov    ebx,0x1
  40a3cd:	mov    eax,DWORD PTR [rax]
  40a3cf:	test   eax,eax
  40a3d1:	jle    40a3f0 <xmlStrEqual@plt+0x64b0>
  40a3d3:	lea    rsi,[rip+0x3e8ab]        # 448c85 <xmlStrEqual@plt+0x44d45>
  40a3da:	mov    edi,0x5
  40a3df:	xor    eax,eax
  40a3e1:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  40a3e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40a3f0:	mov    rcx,QWORD PTR [rsp+0x28]
  40a3f5:	xor    rcx,QWORD PTR fs:0x28
  40a3fe:	mov    eax,ebx
  40a400:	jne    40a48a <xmlStrEqual@plt+0x654a>
  40a406:	add    rsp,0x30
  40a40a:	pop    rbx
  40a40b:	pop    rbp
  40a40c:	pop    r12
  40a40e:	ret    
  40a40f:	nop
  40a410:	mov    rax,0x469e3c
  40a417:	mov    ecx,DWORD PTR [rax]
  40a419:	test   ecx,ecx
  40a41b:	jg     40a450 <xmlStrEqual@plt+0x6510>
  40a41d:	xor    ebx,ebx
  40a41f:	jmp    40a3f0 <xmlStrEqual@plt+0x64b0>
  40a421:	nop    DWORD PTR [rax+0x0]
  40a428:	mov    rax,0x469e3c
  40a42f:	mov    edx,DWORD PTR [rax]
  40a431:	test   edx,edx
  40a433:	jle    40a41d <xmlStrEqual@plt+0x64dd>
  40a435:	lea    rsi,[rip+0x3e954]        # 448d90 <xmlStrEqual@plt+0x44e50>
  40a43c:	mov    edi,0x5
  40a441:	xor    eax,eax
  40a443:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  40a448:	xor    ebx,ebx
  40a44a:	jmp    40a3f0 <xmlStrEqual@plt+0x64b0>
  40a44c:	nop    DWORD PTR [rax+0x0]
  40a450:	lea    rsi,[rip+0x3e909]        # 448d60 <xmlStrEqual@plt+0x44e20>
  40a457:	mov    edi,0x5
  40a45c:	xor    eax,eax
  40a45e:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  40a463:	xor    ebx,ebx
  40a465:	jmp    40a3f0 <xmlStrEqual@plt+0x64b0>
  40a467:	nop    WORD PTR [rax+rax*1+0x0]
  40a470:	lea    rdx,[rip+0x3e8c1]        # 448d38 <xmlStrEqual@plt+0x44df8>
  40a477:	lea    rsi,[rip+0x3f1ca]        # 449648 <xmlStrEqual@plt+0x45708>
  40a47e:	lea    rdi,[rip+0x3e7c6]        # 448c4b <xmlStrEqual@plt+0x44d0b>
  40a485:	call   4350f0 <xmlStrEqual@plt+0x311b0>
  40a48a:	call   403c00 <__stack_chk_fail@plt>
  40a48f:	nop
  40a490:	endbr64 
  40a494:	push   rbp
  40a495:	push   rbx
  40a496:	sub    rsp,0x8
  40a49a:	mov    rax,0x4695a0
  40a4a1:	cmp    QWORD PTR [rdi+0x8],rax
  40a4a5:	jne    40a5a8 <xmlStrEqual@plt+0x6668>
  40a4ab:	mov    rbx,rdi
  40a4ae:	xor    eax,eax
  40a4b0:	lea    rsi,[rip+0x3e7e8]        # 448c9f <xmlStrEqual@plt+0x44d5f>
  40a4b7:	mov    edi,0x4
  40a4bc:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  40a4c1:	mov    rax,QWORD PTR [rbx+0x48]
  40a4c5:	mov    eax,DWORD PTR [rax+0x18]
  40a4c8:	test   eax,eax
  40a4ca:	je     40a580 <xmlStrEqual@plt+0x6640>
  40a4d0:	lea    rsi,[rip+0x3e949]        # 448e20 <xmlStrEqual@plt+0x44ee0>
  40a4d7:	mov    edi,0x4
  40a4dc:	xor    eax,eax
  40a4de:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  40a4e3:	mov    rdi,QWORD PTR [rbx+0x70]
  40a4e7:	call   43af10 <xmlStrEqual@plt+0x36fd0>
  40a4ec:	mov    rbp,rax
  40a4ef:	lea    rsi,[rip+0x3e95a]        # 448e50 <xmlStrEqual@plt+0x44f10>
  40a4f6:	xor    eax,eax
  40a4f8:	mov    edi,0x4
  40a4fd:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  40a502:	mov    rsi,0x409fd0
  40a509:	mov    edx,0x4
  40a50e:	mov    rdi,rbp
  40a511:	call   42dfc0 <xmlStrEqual@plt+0x2a080>
  40a516:	mov    rdi,rbp
  40a519:	call   42e2b0 <xmlStrEqual@plt+0x2a370>
  40a51e:	mov    rdi,QWORD PTR [rbx+0x30]
  40a522:	mov    esi,0x4
  40a527:	call   409bb0 <xmlStrEqual@plt+0x5c70>
  40a52c:	mov    rdi,QWORD PTR [rbx+0x68]
  40a530:	call   434a40 <xmlStrEqual@plt+0x30b00>
  40a535:	mov    rbp,rax
  40a538:	lea    rsi,[rip+0x3e773]        # 448cb2 <xmlStrEqual@plt+0x44d72>
  40a53f:	mov    edi,0x4
  40a544:	xor    eax,eax
  40a546:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  40a54b:	mov    rsi,QWORD PTR [rbx+0x68]
  40a54f:	mov    rdi,QWORD PTR [rbx+0x40]
  40a553:	mov    rax,QWORD PTR [rbx+0x38]
  40a557:	call   QWORD PTR [rax+0x30]
  40a55a:	mov    rdi,rbp
  40a55d:	call   42b300 <xmlStrEqual@plt+0x273c0>
  40a562:	add    rsp,0x8
  40a566:	pop    rbx
  40a567:	mov    rdx,rax
  40a56a:	lea    rsi,[rip+0x3e0f9]        # 44866a <xmlStrEqual@plt+0x4472a>
  40a571:	mov    edi,0x4
  40a576:	xor    eax,eax
  40a578:	pop    rbp
  40a579:	jmp    430e20 <xmlStrEqual@plt+0x2cee0>
  40a57e:	xchg   ax,ax
  40a580:	lea    rsi,[rip+0x3e841]        # 448dc8 <xmlStrEqual@plt+0x44e88>
  40a587:	mov    edi,0x1
  40a58c:	xor    eax,eax
  40a58e:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  40a593:	mov    edi,0x2
  40a598:	call   43b6a0 <xmlStrEqual@plt+0x37760>
  40a59d:	jmp    40a4d0 <xmlStrEqual@plt+0x6590>
  40a5a2:	nop    WORD PTR [rax+rax*1+0x0]
  40a5a8:	lea    rdx,[rip+0x3e789]        # 448d38 <xmlStrEqual@plt+0x44df8>
  40a5af:	lea    rsi,[rip+0x3f092]        # 449648 <xmlStrEqual@plt+0x45708>
  40a5b6:	lea    rdi,[rip+0x3e68e]        # 448c4b <xmlStrEqual@plt+0x44d0b>
  40a5bd:	call   4350f0 <xmlStrEqual@plt+0x311b0>
  40a5c2:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40a5cd:	nop    DWORD PTR [rax]
  40a5d0:	endbr64 
  40a5d4:	push   r13
  40a5d6:	push   r12
  40a5d8:	push   rbp
  40a5d9:	push   rbx
  40a5da:	sub    rsp,0x8
  40a5de:	mov    rax,0x4695a0
  40a5e5:	cmp    QWORD PTR [rdi+0x8],rax
  40a5e9:	jne    40a700 <xmlStrEqual@plt+0x67c0>
  40a5ef:	mov    rbp,rdi
  40a5f2:	mov    rdi,QWORD PTR [rdi+0x50]
  40a5f6:	mov    r12,rsi
  40a5f9:	mov    ebx,edx
  40a5fb:	call   43aca0 <xmlStrEqual@plt+0x36d60>
  40a600:	mov    r13,rax
  40a603:	test   rax,rax
  40a606:	je     40a6d0 <xmlStrEqual@plt+0x6790>
  40a60c:	mov    rcx,QWORD PTR [rax+0x10]
  40a610:	mov    rax,QWORD PTR [rcx+0x8]
  40a614:	cmp    rcx,rax
  40a617:	je     40a630 <xmlStrEqual@plt+0x66f0>
  40a619:	nop    DWORD PTR [rax+0x0]
  40a620:	mov    rdx,QWORD PTR [rax+0x10]
  40a624:	mov    BYTE PTR [rdx+0x8],bl
  40a627:	mov    rax,QWORD PTR [rax+0x8]
  40a62b:	cmp    rcx,rax
  40a62e:	jne    40a620 <xmlStrEqual@plt+0x66e0>
  40a630:	mov    rcx,QWORD PTR [r13+0x18]
  40a634:	mov    rax,QWORD PTR [rcx+0x8]
  40a638:	cmp    rcx,rax
  40a63b:	je     40a650 <xmlStrEqual@plt+0x6710>
  40a63d:	nop    DWORD PTR [rax]
  40a640:	mov    rdx,QWORD PTR [rax+0x10]
  40a644:	mov    BYTE PTR [rdx+0x8],bl
  40a647:	mov    rax,QWORD PTR [rax+0x8]
  40a64b:	cmp    rcx,rax
  40a64e:	jne    40a640 <xmlStrEqual@plt+0x6700>
  40a650:	cmp    BYTE PTR [r13+0x20],0x1
  40a655:	mov    rax,QWORD PTR [r13+0x8]
  40a659:	setne  BYTE PTR [r13+0x20]
  40a65e:	mov    rbx,QWORD PTR [rax+0x8]
  40a662:	cmp    rax,rbx
  40a665:	je     40a6a4 <xmlStrEqual@plt+0x6764>
  40a667:	nop    WORD PTR [rax+rax*1+0x0]
  40a670:	mov    r12,QWORD PTR [rbx+0x10]
  40a674:	mov    rdi,QWORD PTR [rbp+0x40]
  40a678:	mov    rax,QWORD PTR [rbp+0x38]
  40a67c:	mov    rsi,r12
  40a67f:	call   QWORD PTR [rax+0x30]
  40a682:	mov    rdi,r12
  40a685:	call   434ad0 <xmlStrEqual@plt+0x30b90>
  40a68a:	mov    rsi,rax
  40a68d:	mov    edx,0x1
  40a692:	mov    rdi,rbp
  40a695:	call   4089c0 <xmlStrEqual@plt+0x4a80>
  40a69a:	mov    rbx,QWORD PTR [rbx+0x8]
  40a69e:	cmp    QWORD PTR [r13+0x8],rbx
  40a6a2:	jne    40a670 <xmlStrEqual@plt+0x6730>
  40a6a4:	mov    rsi,QWORD PTR [rbp+0x68]
  40a6a8:	mov    rdi,QWORD PTR [rbp+0x40]
  40a6ac:	mov    rax,QWORD PTR [rbp+0x38]
  40a6b0:	mov    ebx,0x1
  40a6b5:	call   QWORD PTR [rax+0x30]
  40a6b8:	mov    rdi,rbp
  40a6bb:	call   4089d0 <xmlStrEqual@plt+0x4a90>
  40a6c0:	add    rsp,0x8
  40a6c4:	mov    eax,ebx
  40a6c6:	pop    rbx
  40a6c7:	pop    rbp
  40a6c8:	pop    r12
  40a6ca:	pop    r13
  40a6cc:	ret    
  40a6cd:	nop    DWORD PTR [rax]
  40a6d0:	mov    rax,0x469e3c
  40a6d7:	xor    ebx,ebx
  40a6d9:	cmp    DWORD PTR [rax],0x1
  40a6dc:	jle    40a6c0 <xmlStrEqual@plt+0x6780>
  40a6de:	mov    rdx,r12
  40a6e1:	lea    rsi,[rip+0x3e790]        # 448e78 <xmlStrEqual@plt+0x44f38>
  40a6e8:	mov    edi,0x6
  40a6ed:	xor    eax,eax
  40a6ef:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  40a6f4:	jmp    40a6c0 <xmlStrEqual@plt+0x6780>
  40a6f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40a700:	lea    rdx,[rip+0x3e631]        # 448d38 <xmlStrEqual@plt+0x44df8>
  40a707:	lea    rsi,[rip+0x3ef3a]        # 449648 <xmlStrEqual@plt+0x45708>
  40a70e:	lea    rdi,[rip+0x3e536]        # 448c4b <xmlStrEqual@plt+0x44d0b>
  40a715:	call   4350f0 <xmlStrEqual@plt+0x311b0>
  40a71a:	nop    WORD PTR [rax+rax*1+0x0]
  40a720:	endbr64 
  40a724:	push   r15
  40a726:	push   r14
  40a728:	push   r13
  40a72a:	push   r12
  40a72c:	push   rbp
  40a72d:	push   rbx
  40a72e:	sub    rsp,0x18
  40a732:	mov    rax,0x4695a0
  40a739:	cmp    QWORD PTR [rdi+0x8],rax
  40a73d:	jne    40a898 <xmlStrEqual@plt+0x6958>
  40a743:	mov    rbx,rdi
  40a746:	mov    rdi,QWORD PTR [rdi+0x50]
  40a74a:	mov    r13,rsi
  40a74d:	mov    r14,rdx
  40a750:	mov    rbp,rcx
  40a753:	call   43aca0 <xmlStrEqual@plt+0x36d60>
  40a758:	mov    r12,rax
  40a75b:	test   rax,rax
  40a75e:	je     40a7b0 <xmlStrEqual@plt+0x6870>
  40a760:	mov    rsi,rbp
  40a763:	mov    rdi,r14
  40a766:	call   425310 <xmlStrEqual@plt+0x213d0>
  40a76b:	mov    edx,0x1
  40a770:	test   eax,eax
  40a772:	je     40a796 <xmlStrEqual@plt+0x6856>
  40a774:	mov    eax,DWORD PTR [rbp+0x18]
  40a777:	test   eax,eax
  40a779:	je     40a7e0 <xmlStrEqual@plt+0x68a0>
  40a77b:	cmp    eax,0x1
  40a77e:	je     40a8b8 <xmlStrEqual@plt+0x6978>
  40a784:	mov    rax,0x469e3c
  40a78b:	cmp    DWORD PTR [rax],0x1
  40a78e:	jg     40aa48 <xmlStrEqual@plt+0x6b08>
  40a794:	xor    edx,edx
  40a796:	add    rsp,0x18
  40a79a:	pop    rbx
  40a79b:	pop    rbp
  40a79c:	pop    r12
  40a79e:	pop    r13
  40a7a0:	pop    r14
  40a7a2:	mov    eax,edx
  40a7a4:	pop    r15
  40a7a6:	ret    
  40a7a7:	nop    WORD PTR [rax+rax*1+0x0]
  40a7b0:	mov    rax,0x469e3c
  40a7b7:	cmp    DWORD PTR [rax],0x1
  40a7ba:	jle    40a794 <xmlStrEqual@plt+0x6854>
  40a7bc:	mov    rdx,r13
  40a7bf:	lea    rsi,[rip+0x3e702]        # 448ec8 <xmlStrEqual@plt+0x44f88>
  40a7c6:	mov    edi,0x6
  40a7cb:	xor    eax,eax
  40a7cd:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  40a7d2:	xor    edx,edx
  40a7d4:	jmp    40a796 <xmlStrEqual@plt+0x6856>
  40a7d6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40a7e0:	lea    rcx,[r12+0x30]
  40a7e5:	cmp    DWORD PTR [r14+0x18],0x2
  40a7ea:	mov    rax,QWORD PTR [r12+0x10]
  40a7ef:	mov    r13,QWORD PTR [r12+0x18]
  40a7f4:	mov    QWORD PTR [rsp],rcx
  40a7f8:	jne    40a806 <xmlStrEqual@plt+0x68c6>
  40a7fa:	lea    rcx,[r12+0x28]
  40a7ff:	mov    QWORD PTR [rsp],rcx
  40a803:	mov    r13,rax
  40a806:	mov    rax,QWORD PTR [r13+0x8]
  40a80a:	cmp    r13,rax
  40a80d:	je     40a863 <xmlStrEqual@plt+0x6923>
  40a80f:	nop
  40a810:	mov    rbp,QWORD PTR [rax+0x10]
  40a814:	mov    r12,QWORD PTR [rax+0x8]
  40a818:	mov    rax,QWORD PTR [rbp+0x0]
  40a81c:	cmp    DWORD PTR [rax+0x18],0x1
  40a820:	je     40a835 <xmlStrEqual@plt+0x68f5>
  40a822:	lea    rsi,[rip+0x3e6ef]        # 448f18 <xmlStrEqual@plt+0x44fd8>
  40a829:	mov    edi,0x2
  40a82e:	xor    eax,eax
  40a830:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  40a835:	mov    rdi,QWORD PTR [rbx+0x68]
  40a839:	call   434a40 <xmlStrEqual@plt+0x30b00>
  40a83e:	mov    rdi,rax
  40a841:	mov    rsi,rbp
  40a844:	mov    r15,rax
  40a847:	call   42b960 <xmlStrEqual@plt+0x27a20>
  40a84c:	test   al,al
  40a84e:	je     40a85b <xmlStrEqual@plt+0x691b>
  40a850:	mov    rsi,rbp
  40a853:	mov    rdi,r15
  40a856:	call   42bb30 <xmlStrEqual@plt+0x27bf0>
  40a85b:	mov    rax,r12
  40a85e:	cmp    r13,r12
  40a861:	jne    40a810 <xmlStrEqual@plt+0x68d0>
  40a863:	mov    rax,QWORD PTR [rsp]
  40a867:	cmp    QWORD PTR [rax],0x0
  40a86b:	je     40aaa0 <xmlStrEqual@plt+0x6b60>
  40a871:	mov    rsi,QWORD PTR [rbx+0x68]
  40a875:	mov    rdi,QWORD PTR [rbx+0x40]
  40a879:	mov    rax,QWORD PTR [rbx+0x38]
  40a87d:	call   QWORD PTR [rax+0x30]
  40a880:	mov    rdi,rbx
  40a883:	call   4089d0 <xmlStrEqual@plt+0x4a90>
  40a888:	mov    edx,0x1
  40a88d:	jmp    40a796 <xmlStrEqual@plt+0x6856>
  40a892:	nop    WORD PTR [rax+rax*1+0x0]
  40a898:	lea    rdx,[rip+0x3e499]        # 448d38 <xmlStrEqual@plt+0x44df8>
  40a89f:	lea    rsi,[rip+0x3eda2]        # 449648 <xmlStrEqual@plt+0x45708>
  40a8a6:	lea    rdi,[rip+0x3e39e]        # 448c4b <xmlStrEqual@plt+0x44d0b>
  40a8ad:	call   4350f0 <xmlStrEqual@plt+0x311b0>
  40a8b2:	nop    WORD PTR [rax+rax*1+0x0]
  40a8b8:	mov    rdi,rbp
  40a8bb:	call   425890 <xmlStrEqual@plt+0x21950>
  40a8c0:	cmp    ax,0x2
  40a8c4:	je     40aa00 <xmlStrEqual@plt+0x6ac0>
  40a8ca:	cmp    ax,0xa
  40a8ce:	jne    40a784 <xmlStrEqual@plt+0x6844>
  40a8d4:	lea    rax,[r12+0x30]
  40a8d9:	mov    QWORD PTR [rsp+0x8],rax
  40a8de:	mov    r13,QWORD PTR [r12+0x18]
  40a8e3:	mov    rax,QWORD PTR [r13+0x8]
  40a8e7:	cmp    r13,rax
  40a8ea:	jne    40a927 <xmlStrEqual@plt+0x69e7>
  40a8ec:	jmp    40a9c8 <xmlStrEqual@plt+0x6a88>
  40a8f1:	nop    DWORD PTR [rax+0x0]
  40a8f8:	cmp    eax,0x1
  40a8fb:	je     40a910 <xmlStrEqual@plt+0x69d0>
  40a8fd:	lea    rsi,[rip+0x3e614]        # 448f18 <xmlStrEqual@plt+0x44fd8>
  40a904:	mov    edi,0x2
  40a909:	xor    eax,eax
  40a90b:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  40a910:	mov    rsi,rbp
  40a913:	mov    rdi,r15
  40a916:	call   42afa0 <xmlStrEqual@plt+0x27060>
  40a91b:	mov    rax,r12
  40a91e:	cmp    r13,r12
  40a921:	je     40a9c8 <xmlStrEqual@plt+0x6a88>
  40a927:	mov    r15,QWORD PTR [rax+0x10]
  40a92b:	mov    r12,QWORD PTR [rax+0x8]
  40a92f:	mov    rax,QWORD PTR [r15]
  40a932:	mov    eax,DWORD PTR [rax+0x18]
  40a935:	test   eax,eax
  40a937:	jne    40a8f8 <xmlStrEqual@plt+0x69b8>
  40a939:	mov    rdi,QWORD PTR [rbx+0x68]
  40a93d:	call   434a40 <xmlStrEqual@plt+0x30b00>
  40a942:	mov    rdi,rax
  40a945:	mov    rsi,r15
  40a948:	mov    QWORD PTR [rsp],rax
  40a94c:	call   42b960 <xmlStrEqual@plt+0x27a20>
  40a951:	test   al,al
  40a953:	je     40a91b <xmlStrEqual@plt+0x69db>
  40a955:	mov    rdi,QWORD PTR [rsp]
  40a959:	mov    rsi,rbp
  40a95c:	call   42b790 <xmlStrEqual@plt+0x27850>
  40a961:	test   rax,rax
  40a964:	je     40aa30 <xmlStrEqual@plt+0x6af0>
  40a96a:	mov    rax,0x469e3c
  40a971:	cmp    DWORD PTR [rax],0x1
  40a974:	jle    40a989 <xmlStrEqual@plt+0x6a49>
  40a976:	lea    rsi,[rip+0x3e603]        # 448f80 <xmlStrEqual@plt+0x45040>
  40a97d:	mov    edi,0x6
  40a982:	xor    eax,eax
  40a984:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  40a989:	mov    rdi,QWORD PTR [rsp]
  40a98d:	xor    edx,edx
  40a98f:	xor    esi,esi
  40a991:	call   42b530 <xmlStrEqual@plt+0x275f0>
  40a996:	mov    rdi,QWORD PTR [rbx+0x50]
  40a99a:	mov    rsi,r15
  40a99d:	mov    QWORD PTR [rsp],rax
  40a9a1:	call   42f240 <xmlStrEqual@plt+0x2b300>
  40a9a6:	mov    rax,QWORD PTR [rsp]
  40a9aa:	mov    rdi,r15
  40a9ad:	mov    rsi,rax
  40a9b0:	call   42e210 <xmlStrEqual@plt+0x2a2d0>
  40a9b5:	mov    rax,r12
  40a9b8:	cmp    r13,r12
  40a9bb:	jne    40a927 <xmlStrEqual@plt+0x69e7>
  40a9c1:	nop    DWORD PTR [rax+0x0]
  40a9c8:	mov    rax,QWORD PTR [rsp+0x8]
  40a9cd:	mov    rdi,QWORD PTR [rax]
  40a9d0:	test   rdi,rdi
  40a9d3:	je     40aa18 <xmlStrEqual@plt+0x6ad8>
  40a9d5:	mov    rsi,rbp
  40a9d8:	call   425310 <xmlStrEqual@plt+0x213d0>
  40a9dd:	test   eax,eax
  40a9df:	je     40aa68 <xmlStrEqual@plt+0x6b28>
  40a9e5:	mov    rdi,QWORD PTR [rbx+0x68]
  40a9e9:	call   434a40 <xmlStrEqual@plt+0x30b00>
  40a9ee:	mov    rdi,rax
  40a9f1:	mov    rsi,rbp
  40a9f4:	call   42b9d0 <xmlStrEqual@plt+0x27a90>
  40a9f9:	jmp    40a871 <xmlStrEqual@plt+0x6931>
  40a9fe:	xchg   ax,ax
  40aa00:	lea    rax,[r12+0x28]
  40aa05:	mov    r13,QWORD PTR [r12+0x10]
  40aa0a:	mov    QWORD PTR [rsp+0x8],rax
  40aa0f:	jmp    40a8e3 <xmlStrEqual@plt+0x69a3>
  40aa14:	nop    DWORD PTR [rax+0x0]
  40aa18:	test   r14,r14
  40aa1b:	je     40aa88 <xmlStrEqual@plt+0x6b48>
  40aa1d:	mov    rdi,r14
  40aa20:	call   425060 <xmlStrEqual@plt+0x21120>
  40aa25:	mov    rcx,QWORD PTR [rsp+0x8]
  40aa2a:	mov    QWORD PTR [rcx],rax
  40aa2d:	jmp    40a9e5 <xmlStrEqual@plt+0x6aa5>
  40aa2f:	nop
  40aa30:	mov    rdi,QWORD PTR [rsp]
  40aa34:	mov    rdx,rbp
  40aa37:	mov    rsi,r15
  40aa3a:	call   42ba20 <xmlStrEqual@plt+0x27ae0>
  40aa3f:	jmp    40a91b <xmlStrEqual@plt+0x69db>
  40aa44:	nop    DWORD PTR [rax+0x0]
  40aa48:	lea    rsi,[rip+0x3e4f9]        # 448f48 <xmlStrEqual@plt+0x45008>
  40aa4f:	mov    edi,0x6
  40aa54:	xor    eax,eax
  40aa56:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  40aa5b:	xor    edx,edx
  40aa5d:	jmp    40a796 <xmlStrEqual@plt+0x6856>
  40aa62:	nop    WORD PTR [rax+rax*1+0x0]
  40aa68:	mov    r14,QWORD PTR [rsp+0x8]
  40aa6d:	mov    rdi,QWORD PTR [r14]
  40aa70:	call   424bf0 <xmlStrEqual@plt+0x20cb0>
  40aa75:	mov    QWORD PTR [r14],0x0
  40aa7c:	jmp    40a9e5 <xmlStrEqual@plt+0x6aa5>
  40aa81:	nop    DWORD PTR [rax+0x0]
  40aa88:	xor    edi,edi
  40aa8a:	call   424b10 <xmlStrEqual@plt+0x20bd0>
  40aa8f:	mov    rcx,QWORD PTR [rsp+0x8]
  40aa94:	mov    QWORD PTR [rcx],rax
  40aa97:	jmp    40a9e5 <xmlStrEqual@plt+0x6aa5>
  40aa9c:	nop    DWORD PTR [rax+0x0]
  40aaa0:	mov    rdi,r14
  40aaa3:	call   425060 <xmlStrEqual@plt+0x21120>
  40aaa8:	mov    rcx,QWORD PTR [rsp]
  40aaac:	mov    QWORD PTR [rcx],rax
  40aaaf:	jmp    40a871 <xmlStrEqual@plt+0x6931>
  40aab4:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40aabf:	nop
  40aac0:	endbr64 
  40aac4:	push   r15
  40aac6:	push   r14
  40aac8:	push   r13
  40aaca:	push   r12
  40aacc:	push   rbp
  40aacd:	push   rbx
  40aace:	sub    rsp,0x18
  40aad2:	mov    rax,0x4695a0
  40aad9:	cmp    QWORD PTR [rdi+0x8],rax
  40aadd:	jne    40ac78 <xmlStrEqual@plt+0x6d38>
  40aae3:	xor    eax,eax
  40aae5:	mov    rbx,rdi
  40aae8:	mov    r12,rsi
  40aaeb:	call   421ff0 <xmlStrEqual@plt+0x1e0b0>
  40aaf0:	mov    rbp,rax
  40aaf3:	test   rax,rax
  40aaf6:	je     40ac98 <xmlStrEqual@plt+0x6d58>
  40aafc:	mov    rax,QWORD PTR [rbx+0x68]
  40ab00:	mov    edi,DWORD PTR [r12+0x48]
  40ab05:	mov    QWORD PTR [rsp+0x8],rax
  40ab0a:	lea    r13,[r12+0x20]
  40ab0f:	test   edi,edi
  40ab11:	jne    40abb8 <xmlStrEqual@plt+0x6c78>
  40ab17:	mov    rdi,r12
  40ab1a:	call   425060 <xmlStrEqual@plt+0x21120>
  40ab1f:	mov    rdi,r13
  40ab22:	mov    r14,rax
  40ab25:	call   425060 <xmlStrEqual@plt+0x21120>
  40ab2a:	mov    r13,rax
  40ab2d:	mov    rdi,QWORD PTR [rbx+0x30]
  40ab31:	mov    rsi,r13
  40ab34:	call   409ac0 <xmlStrEqual@plt+0x5b80>
  40ab39:	mov    r15,rax
  40ab3c:	test   rax,rax
  40ab3f:	je     40abe8 <xmlStrEqual@plt+0x6ca8>
  40ab45:	mov    rdi,rax
  40ab48:	call   433790 <xmlStrEqual@plt+0x2f850>
  40ab4d:	mov    rdi,rax
  40ab50:	call   425060 <xmlStrEqual@plt+0x21120>
  40ab55:	mov    QWORD PTR [rbp+0x0],rax
  40ab59:	cmp    BYTE PTR [r15+0x10],0x0
  40ab5e:	jne    40ab70 <xmlStrEqual@plt+0x6c30>
  40ab60:	mov    rax,0x469e3c
  40ab67:	cmp    DWORD PTR [rax],0x1
  40ab6a:	jg     40ac50 <xmlStrEqual@plt+0x6d10>
  40ab70:	mov    rdi,QWORD PTR [rbx+0x40]
  40ab74:	mov    rsi,QWORD PTR [rsp+0x8]
  40ab79:	mov    rax,QWORD PTR [rbx+0x38]
  40ab7d:	mov    r9,rbp
  40ab80:	mov    r8,r12
  40ab83:	xor    ecx,ecx
  40ab85:	mov    rdx,r15
  40ab88:	call   QWORD PTR [rax+0x40]
  40ab8b:	mov    eax,DWORD PTR [rbx+0x58]
  40ab8e:	mov    rdi,r14
  40ab91:	mov    DWORD PTR [rbp+0x14],eax
  40ab94:	call   424bf0 <xmlStrEqual@plt+0x20cb0>
  40ab99:	mov    rdi,r13
  40ab9c:	call   424bf0 <xmlStrEqual@plt+0x20cb0>
  40aba1:	add    rsp,0x18
  40aba5:	pop    rbx
  40aba6:	mov    rax,rbp
  40aba9:	pop    rbp
  40abaa:	pop    r12
  40abac:	pop    r13
  40abae:	pop    r14
  40abb0:	pop    r15
  40abb2:	ret    
  40abb3:	nop    DWORD PTR [rax+rax*1+0x0]
  40abb8:	mov    edx,0x20
  40abbd:	mov    rsi,r12
  40abc0:	call   429ab0 <xmlStrEqual@plt+0x25b70>
  40abc5:	mov    edi,DWORD PTR [r12+0x48]
  40abca:	mov    rsi,r13
  40abcd:	mov    edx,0x20
  40abd2:	mov    r14,rax
  40abd5:	call   429ab0 <xmlStrEqual@plt+0x25b70>
  40abda:	mov    r13,rax
  40abdd:	jmp    40ab2d <xmlStrEqual@plt+0x6bed>
  40abe2:	nop    WORD PTR [rax+rax*1+0x0]
  40abe8:	mov    rax,0x469e3c
  40abef:	mov    eax,DWORD PTR [rax]
  40abf1:	test   eax,eax
  40abf3:	jle    40ac13 <xmlStrEqual@plt+0x6cd3>
  40abf5:	mov    rdi,r13
  40abf8:	call   424d40 <xmlStrEqual@plt+0x20e00>
  40abfd:	mov    rdx,rax
  40ac00:	lea    rsi,[rip+0x3e401]        # 449008 <xmlStrEqual@plt+0x450c8>
  40ac07:	mov    edi,0x5
  40ac0c:	xor    eax,eax
  40ac0e:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  40ac13:	mov    rdx,r14
  40ac16:	lea    rdi,[rbx+0x18]
  40ac1a:	mov    rsi,r13
  40ac1d:	call   40d250 <xmlStrEqual@plt+0x9310>
  40ac22:	mov    rdi,QWORD PTR [rbx+0x30]
  40ac26:	mov    rsi,r13
  40ac29:	call   409ac0 <xmlStrEqual@plt+0x5b80>
  40ac2e:	mov    rdi,rax
  40ac31:	mov    r15,rax
  40ac34:	call   433790 <xmlStrEqual@plt+0x2f850>
  40ac39:	mov    rdi,rax
  40ac3c:	call   425060 <xmlStrEqual@plt+0x21120>
  40ac41:	mov    QWORD PTR [rbp+0x0],rax
  40ac45:	jmp    40ab70 <xmlStrEqual@plt+0x6c30>
  40ac4a:	nop    WORD PTR [rax+rax*1+0x0]
  40ac50:	mov    rdi,r13
  40ac53:	call   424d40 <xmlStrEqual@plt+0x20e00>
  40ac58:	mov    rdx,rax
  40ac5b:	lea    rsi,[rip+0x3e3d6]        # 449038 <xmlStrEqual@plt+0x450f8>
  40ac62:	mov    edi,0x6
  40ac67:	xor    eax,eax
  40ac69:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  40ac6e:	jmp    40ab70 <xmlStrEqual@plt+0x6c30>
  40ac73:	nop    DWORD PTR [rax+rax*1+0x0]
  40ac78:	lea    rdx,[rip+0x3e0b9]        # 448d38 <xmlStrEqual@plt+0x44df8>
  40ac7f:	lea    rsi,[rip+0x3e9c2]        # 449648 <xmlStrEqual@plt+0x45708>
  40ac86:	lea    rdi,[rip+0x3dfbe]        # 448c4b <xmlStrEqual@plt+0x44d0b>
  40ac8d:	call   4350f0 <xmlStrEqual@plt+0x311b0>
  40ac92:	nop    WORD PTR [rax+rax*1+0x0]
  40ac98:	lea    rsi,[rip+0x3e329]        # 448fc8 <xmlStrEqual@plt+0x45088>
  40ac9f:	mov    edi,0x3
  40aca4:	xor    eax,eax
  40aca6:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  40acab:	jmp    40aba1 <xmlStrEqual@plt+0x6c61>
  40acb0:	endbr64 
  40acb4:	mov    rax,0x4695a0
  40acbb:	cmp    QWORD PTR [rdi+0x8],rax
  40acbf:	jne    40acc8 <xmlStrEqual@plt+0x6d88>
  40acc1:	mov    rax,rdi
  40acc4:	ret    
  40acc5:	nop    DWORD PTR [rax]
  40acc8:	sub    rsp,0x8
  40accc:	lea    rdx,[rip+0x3e065]        # 448d38 <xmlStrEqual@plt+0x44df8>
  40acd3:	lea    rsi,[rip+0x3e96e]        # 449648 <xmlStrEqual@plt+0x45708>
  40acda:	lea    rdi,[rip+0x3df6a]        # 448c4b <xmlStrEqual@plt+0x44d0b>
  40ace1:	call   4350f0 <xmlStrEqual@plt+0x311b0>
  40ace6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40acf0:	endbr64 
  40acf4:	push   r12
  40acf6:	mov    r12,rdx
  40acf9:	push   rbp
  40acfa:	mov    rbp,rdi
  40acfd:	mov    rdi,rdx
  40ad00:	push   rbx
  40ad01:	mov    rbx,rsi
  40ad04:	call   424d40 <xmlStrEqual@plt+0x20e00>
  40ad09:	mov    rdi,QWORD PTR [rbp+0x70]
  40ad0d:	mov    rsi,rax
  40ad10:	call   43aca0 <xmlStrEqual@plt+0x36d60>
  40ad15:	test   rax,rax
  40ad18:	je     40ad80 <xmlStrEqual@plt+0x6e40>
  40ad1a:	mov    rdi,rbx
  40ad1d:	mov    rbp,rax
  40ad20:	call   424200 <xmlStrEqual@plt+0x202c0>
  40ad25:	mov    rdi,rbx
  40ad28:	mov    r12,rax
  40ad2b:	call   422ce0 <xmlStrEqual@plt+0x1eda0>
  40ad30:	cmp    eax,0x1
  40ad33:	je     40ad40 <xmlStrEqual@plt+0x6e00>
  40ad35:	xor    eax,eax
  40ad37:	pop    rbx
  40ad38:	pop    rbp
  40ad39:	pop    r12
  40ad3b:	ret    
  40ad3c:	nop    DWORD PTR [rax+0x0]
  40ad40:	mov    rdx,QWORD PTR [rbp+0x8]
  40ad44:	mov    rsi,r12
  40ad47:	mov    rdi,rbx
  40ad4a:	call   424450 <xmlStrEqual@plt+0x20510>
  40ad4f:	cmp    eax,0x1
  40ad52:	je     40ad37 <xmlStrEqual@plt+0x6df7>
  40ad54:	mov    rax,0x469e3c
  40ad5b:	mov    eax,DWORD PTR [rax]
  40ad5d:	test   eax,eax
  40ad5f:	jle    40ad35 <xmlStrEqual@plt+0x6df5>
  40ad61:	lea    rsi,[rip+0x3e338]        # 4490a0 <xmlStrEqual@plt+0x45160>
  40ad68:	mov    edi,0x5
  40ad6d:	xor    eax,eax
  40ad6f:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  40ad74:	jmp    40ad35 <xmlStrEqual@plt+0x6df5>
  40ad76:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40ad80:	mov    rax,0x469e3c
  40ad87:	mov    edx,DWORD PTR [rax]
  40ad89:	test   edx,edx
  40ad8b:	jle    40ad35 <xmlStrEqual@plt+0x6df5>
  40ad8d:	mov    rdi,r12
  40ad90:	call   424d40 <xmlStrEqual@plt+0x20e00>
  40ad95:	mov    rdx,rax
  40ad98:	lea    rsi,[rip+0x3e2d1]        # 449070 <xmlStrEqual@plt+0x45130>
  40ad9f:	xor    eax,eax
  40ada1:	mov    edi,0x5
  40ada6:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  40adab:	pop    rbx
  40adac:	pop    rbp
  40adad:	xor    eax,eax
  40adaf:	pop    r12
  40adb1:	ret    
  40adb2:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40adbd:	nop    DWORD PTR [rax]
  40adc0:	endbr64 
  40adc4:	push   r15
  40adc6:	push   r14
  40adc8:	push   r13
  40adca:	push   r12
  40adcc:	push   rbp
  40adcd:	push   rbx
  40adce:	sub    rsp,0x168
  40add5:	mov    QWORD PTR [rsp+0x8],rdx
  40adda:	mov    rax,QWORD PTR fs:0x28
  40ade3:	mov    QWORD PTR [rsp+0x158],rax
  40adeb:	xor    eax,eax
  40aded:	mov    rax,0x4695a0
  40adf4:	cmp    QWORD PTR [rdi+0x8],rax
  40adf8:	jne    40b3c8 <xmlStrEqual@plt+0x7488>
  40adfe:	mov    r15,rdi
  40ae01:	mov    rdi,rsi
  40ae04:	mov    r13,rsi
  40ae07:	call   422c30 <xmlStrEqual@plt+0x1ecf0>
  40ae0c:	mov    r12d,eax
  40ae0f:	mov    QWORD PTR [rsp+0x10],0x0
  40ae18:	xor    ebp,ebp
  40ae1a:	cmp    eax,0x8
  40ae1d:	je     40b310 <xmlStrEqual@plt+0x73d0>
  40ae23:	cmp    r12d,0x7
  40ae27:	ja     40b2e0 <xmlStrEqual@plt+0x73a0>
  40ae2d:	lea    rcx,[rip+0x3e7d4]        # 449608 <xmlStrEqual@plt+0x456c8>
  40ae34:	mov    edx,r12d
  40ae37:	movsxd rax,DWORD PTR [rcx+rdx*4]
  40ae3b:	add    rax,rcx
  40ae3e:	notrack jmp rax
  40ae41:	mov    rbp,QWORD PTR [rsp+0x8]
  40ae46:	mov    QWORD PTR [rsp+0x8],rbx
  40ae4b:	nop    DWORD PTR [rax+rax*1+0x0]
  40ae50:	vmovdqu xmm0,XMMWORD PTR [r13+0x0]
  40ae56:	vmovdqu xmm1,XMMWORD PTR [r13+0x10]
  40ae5c:	vmovdqu xmm2,XMMWORD PTR [r13+0x20]
  40ae62:	vmovdqu xmm3,XMMWORD PTR [r13+0x30]
  40ae68:	xor    eax,eax
  40ae6a:	vmovaps XMMWORD PTR [rsp+0x60],xmm0
  40ae70:	vmovaps XMMWORD PTR [rsp+0x70],xmm1
  40ae76:	vmovaps XMMWORD PTR [rsp+0x80],xmm2
  40ae7f:	vmovaps XMMWORD PTR [rsp+0x90],xmm3
  40ae88:	call   424be0 <xmlStrEqual@plt+0x20ca0>
  40ae8d:	mov    r12,rax
  40ae90:	mov    QWORD PTR [rsp+0x20],rax
  40ae95:	xor    eax,eax
  40ae97:	call   424be0 <xmlStrEqual@plt+0x20ca0>
  40ae9c:	lea    rcx,[rsp+0x60]
  40aea1:	mov    r14,rcx
  40aea4:	mov    rdi,rcx
  40aea7:	mov    rbx,rax
  40aeaa:	mov    QWORD PTR [rsp+0x18],rcx
  40aeaf:	call   4235e0 <xmlStrEqual@plt+0x1f6a0>
  40aeb4:	mov    rsi,r12
  40aeb7:	mov    rdi,r14
  40aeba:	mov    r13,rax
  40aebd:	call   422eb0 <xmlStrEqual@plt+0x1ef70>
  40aec2:	cmp    eax,0x1
  40aec5:	je     40b3e8 <xmlStrEqual@plt+0x74a8>
  40aecb:	mov    r14,0x469e3c
  40aed2:	xor    edi,edi
  40aed4:	call   42e2b0 <xmlStrEqual@plt+0x2a370>
  40aed9:	mov    rdi,QWORD PTR [rsp+0x20]
  40aede:	call   424bf0 <xmlStrEqual@plt+0x20cb0>
  40aee3:	mov    rdi,rbx
  40aee6:	call   424bf0 <xmlStrEqual@plt+0x20cb0>
  40aeeb:	mov    eax,DWORD PTR [r14]
  40aeee:	test   eax,eax
  40aef0:	jle    40b2d2 <xmlStrEqual@plt+0x7392>
  40aef6:	lea    rsi,[rip+0x3e653]        # 449550 <xmlStrEqual@plt+0x45610>
  40aefd:	mov    edi,0x5
  40af02:	xor    eax,eax
  40af04:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  40af09:	xor    ebx,ebx
  40af0b:	mov    rcx,QWORD PTR [rsp+0x158]
  40af13:	xor    rcx,QWORD PTR fs:0x28
  40af1c:	mov    eax,ebx
  40af1e:	jne    40bd24 <xmlStrEqual@plt+0x7de4>
  40af24:	add    rsp,0x168
  40af2b:	pop    rbx
  40af2c:	pop    rbp
  40af2d:	pop    r12
  40af2f:	pop    r13
  40af31:	pop    r14
  40af33:	pop    r15
  40af35:	ret    
  40af36:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40af40:	mov    r14,0x469e3c
  40af47:	mov    rdx,QWORD PTR [rsp+0x8]
  40af4c:	lea    rdi,[r15+0x18]
  40af50:	mov    rsi,r13
  40af53:	call   40c980 <xmlStrEqual@plt+0x8a40>
  40af58:	cmp    eax,0x1
  40af5b:	jne    40aeeb <xmlStrEqual@plt+0x6fab>
  40af5d:	cmp    DWORD PTR [r14],0x2
  40af61:	mov    ebx,0x1
  40af66:	jle    40af0b <xmlStrEqual@plt+0x6fcb>
  40af68:	lea    rsi,[rip+0x3e611]        # 449580 <xmlStrEqual@plt+0x45640>
  40af6f:	mov    edi,0x7
  40af74:	xor    eax,eax
  40af76:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  40af7b:	jmp    40af0b <xmlStrEqual@plt+0x6fcb>
  40af7d:	nop    DWORD PTR [rax]
  40af80:	mov    r14,0x469e3c
  40af87:	lea    rax,[rsp+0x60]
  40af8c:	vmovdqu xmm4,XMMWORD PTR [r13+0x0]
  40af92:	vmovdqu xmm5,XMMWORD PTR [r13+0x10]
  40af98:	vmovdqu xmm6,XMMWORD PTR [r13+0x20]
  40af9e:	vmovdqu xmm7,XMMWORD PTR [r13+0x30]
  40afa4:	mov    rdi,rax
  40afa7:	vmovaps XMMWORD PTR [rsp+0x60],xmm4
  40afad:	vmovaps XMMWORD PTR [rsp+0x70],xmm5
  40afb3:	vmovaps XMMWORD PTR [rsp+0x80],xmm6
  40afbc:	vmovaps XMMWORD PTR [rsp+0x90],xmm7
  40afc5:	mov    QWORD PTR [rsp+0x18],rax
  40afca:	call   4235e0 <xmlStrEqual@plt+0x1f6a0>
  40afcf:	cmp    QWORD PTR [rsp+0x10],0x0
  40afd5:	mov    rbx,rax
  40afd8:	je     40b718 <xmlStrEqual@plt+0x77d8>
  40afde:	mov    rax,QWORD PTR [rsp+0x10]
  40afe3:	test   BYTE PTR [rax+0x1],0x40
  40afe7:	jne    40aff2 <xmlStrEqual@plt+0x70b2>
  40afe9:	test   BYTE PTR [rbx],0x1
  40afec:	je     40b608 <xmlStrEqual@plt+0x76c8>
  40aff2:	mov    rdi,QWORD PTR [rsp+0x8]
  40aff7:	call   424d40 <xmlStrEqual@plt+0x20e00>
  40affc:	mov    rdi,QWORD PTR [r15+0x70]
  40b000:	mov    rsi,rax
  40b003:	call   43aca0 <xmlStrEqual@plt+0x36d60>
  40b008:	test   rax,rax
  40b00b:	je     40b7c0 <xmlStrEqual@plt+0x7880>
  40b011:	mov    eax,DWORD PTR [rax+0x14]
  40b014:	test   eax,eax
  40b016:	je     40b5d0 <xmlStrEqual@plt+0x7690>
  40b01c:	mov    r12,QWORD PTR [rsp+0x18]
  40b021:	mov    rdi,r12
  40b024:	call   430bb0 <xmlStrEqual@plt+0x2cc70>
  40b029:	mov    rdi,r12
  40b02c:	call   423c60 <xmlStrEqual@plt+0x1fd20>
  40b031:	or     BYTE PTR [rax+0x1],0x20
  40b035:	mov    r13,QWORD PTR [rsp+0x8]
  40b03a:	lea    r12,[rsp+0x100]
  40b042:	mov    r8,r13
  40b045:	xor    ecx,ecx
  40b047:	mov    rdi,r12
  40b04a:	mov    edx,0x10f6
  40b04f:	mov    esi,0x10f6
  40b054:	call   439130 <xmlStrEqual@plt+0x351f0>
  40b059:	mov    rsi,QWORD PTR [rsp+0x18]
  40b05e:	mov    rdx,r12
  40b061:	mov    rdi,r15
  40b064:	call   4089b0 <xmlStrEqual@plt+0x4a70>
  40b069:	mov    edi,0x28
  40b06e:	call   434fe0 <xmlStrEqual@plt+0x310a0>
  40b073:	mov    r12,rax
  40b076:	test   rax,rax
  40b079:	je     40b0ba <xmlStrEqual@plt+0x717a>
  40b07b:	lea    rdi,[r13+0x20]
  40b07f:	call   425060 <xmlStrEqual@plt+0x21120>
  40b084:	mov    QWORD PTR [r12+0x8],rax
  40b089:	lea    rdi,[rbp+0x20]
  40b08d:	call   425060 <xmlStrEqual@plt+0x21120>
  40b092:	mov    QWORD PTR [r12],rax
  40b096:	mov    rdi,rbp
  40b099:	call   425060 <xmlStrEqual@plt+0x21120>
  40b09e:	mov    QWORD PTR [r12+0x10],rax
  40b0a3:	mov    rdi,r13
  40b0a6:	call   425060 <xmlStrEqual@plt+0x21120>
  40b0ab:	mov    QWORD PTR [r12+0x18],rax
  40b0b0:	movzx  eax,WORD PTR [rbp+0x42]
  40b0b4:	mov    WORD PTR [r12+0x20],ax
  40b0ba:	mov    rdx,0x409f90
  40b0c1:	lea    r8,[rip+0xffffffffffffee28]        # 409ef0 <xmlStrEqual@plt+0x5fb0>
  40b0c8:	mov    rcx,r12
  40b0cb:	mov    rsi,r15
  40b0ce:	mov    edi,0xe
  40b0d3:	call   43b760 <xmlStrEqual@plt+0x37820>
  40b0d8:	mov    rbp,rax
  40b0db:	mov    rdx,rax
  40b0de:	mov    rax,0x475858
  40b0e5:	mov    rsi,r12
  40b0e8:	mov    rdi,QWORD PTR [rax]
  40b0eb:	call   43b7c0 <xmlStrEqual@plt+0x37880>
  40b0f0:	mov    rdi,rbp
  40b0f3:	call   43b460 <xmlStrEqual@plt+0x37520>
  40b0f8:	mov    rdx,rax
  40b0fb:	mov    rax,0x475860
  40b102:	mov    rsi,QWORD PTR [rbx+0x4]
  40b106:	mov    rdi,QWORD PTR [rax]
  40b109:	call   4351f0 <xmlStrEqual@plt+0x312b0>
  40b10e:	mov    esi,0x2
  40b113:	mov    rdi,rbp
  40b116:	call   43b470 <xmlStrEqual@plt+0x37530>
  40b11b:	jmp    40af5d <xmlStrEqual@plt+0x701d>
  40b120:	mov    r14,0x469e3c
  40b127:	lea    rax,[rsp+0x60]
  40b12c:	vmovdqu xmm0,XMMWORD PTR [r13+0x0]
  40b132:	vmovdqu xmm1,XMMWORD PTR [r13+0x10]
  40b138:	vmovdqu xmm2,XMMWORD PTR [r13+0x20]
  40b13e:	vmovdqu xmm3,XMMWORD PTR [r13+0x30]
  40b144:	mov    rdi,rax
  40b147:	mov    QWORD PTR [rsp+0x50],0x0
  40b150:	vmovaps XMMWORD PTR [rsp+0x60],xmm0
  40b156:	vmovaps XMMWORD PTR [rsp+0x70],xmm1
  40b15c:	vmovaps XMMWORD PTR [rsp+0x80],xmm2
  40b165:	vmovaps XMMWORD PTR [rsp+0x90],xmm3
  40b16e:	mov    QWORD PTR [rsp+0x18],rax
  40b173:	call   4235e0 <xmlStrEqual@plt+0x1f6a0>
  40b178:	mov    r12,rax
  40b17b:	mov    rsi,QWORD PTR [rax+0x4]
  40b17f:	mov    rax,0x475860
  40b186:	mov    rdi,QWORD PTR [rax]
  40b189:	call   435a40 <xmlStrEqual@plt+0x31b00>
  40b18e:	test   rax,rax
  40b191:	je     40b6e0 <xmlStrEqual@plt+0x77a0>
  40b197:	mov    rdi,rax
  40b19a:	call   435ca0 <xmlStrEqual@plt+0x31d60>
  40b19f:	mov    rdi,rax
  40b1a2:	call   43b440 <xmlStrEqual@plt+0x37500>
  40b1a7:	mov    rdi,QWORD PTR [rax+0x18]
  40b1ab:	mov    rbp,rax
  40b1ae:	call   424d40 <xmlStrEqual@plt+0x20e00>
  40b1b3:	mov    rdi,QWORD PTR [r15+0x70]
  40b1b7:	mov    rsi,rax
  40b1ba:	call   43aca0 <xmlStrEqual@plt+0x36d60>
  40b1bf:	mov    QWORD PTR [rsp+0x28],rax
  40b1c4:	test   rax,rax
  40b1c7:	je     40b790 <xmlStrEqual@plt+0x7850>
  40b1cd:	movzx  eax,BYTE PTR [r12]
  40b1d2:	test   al,0x8
  40b1d4:	je     40b5e0 <xmlStrEqual@plt+0x76a0>
  40b1da:	cmp    QWORD PTR [rsp+0x10],0x0
  40b1e0:	je     40b7e8 <xmlStrEqual@plt+0x78a8>
  40b1e6:	mov    rax,QWORD PTR [rsp+0x10]
  40b1eb:	test   BYTE PTR [rax+0x1],0x40
  40b1ef:	je     40baa0 <xmlStrEqual@plt+0x7b60>
  40b1f5:	mov    rbx,QWORD PTR [rsp+0x18]
  40b1fa:	mov    rdi,rbx
  40b1fd:	call   4245e0 <xmlStrEqual@plt+0x206a0>
  40b202:	mov    rdi,0x42b110
  40b209:	call   42dca0 <xmlStrEqual@plt+0x29d60>
  40b20e:	cmp    BYTE PTR [r12+0x3],0x0
  40b214:	mov    QWORD PTR [rsp+0x20],rax
  40b219:	je     40b827 <xmlStrEqual@plt+0x78e7>
  40b21f:	lea    rcx,[rsp+0x50]
  40b224:	mov    QWORD PTR [rsp+0x38],rbp
  40b229:	mov    QWORD PTR [rsp+0x40],r15
  40b22e:	mov    QWORD PTR [rsp+0x30],r14
  40b233:	xor    r13d,r13d
  40b236:	mov    r14,rax
  40b239:	mov    rbp,rcx
  40b23c:	mov    r15,rbx
  40b23f:	jmp    40b26d <xmlStrEqual@plt+0x732d>
  40b241:	nop    DWORD PTR [rax+0x0]
  40b248:	mov    rdi,rbx
  40b24b:	call   437a50 <xmlStrEqual@plt+0x33b10>
  40b250:	mov    rsi,r14
  40b253:	mov    rdi,rbx
  40b256:	call   42dcf0 <xmlStrEqual@plt+0x29db0>
  40b25b:	movzx  eax,BYTE PTR [r12+0x3]
  40b261:	inc    r13d
  40b264:	cmp    r13d,eax
  40b267:	jge    40b818 <xmlStrEqual@plt+0x78d8>
  40b26d:	xor    eax,eax
  40b26f:	call   42aff0 <xmlStrEqual@plt+0x270b0>
  40b274:	mov    rsi,rax
  40b277:	mov    rdx,rbp
  40b27a:	mov    rdi,r15
  40b27d:	mov    rbx,rax
  40b280:	call   423280 <xmlStrEqual@plt+0x1f340>
  40b285:	cmp    eax,0x1
  40b288:	je     40b248 <xmlStrEqual@plt+0x7308>
  40b28a:	mov    r14,QWORD PTR [rsp+0x30]
  40b28f:	mov    rdi,QWORD PTR [rsp+0x20]
  40b294:	call   42e2b0 <xmlStrEqual@plt+0x2a370>
  40b299:	mov    r10d,DWORD PTR [r14]
  40b29c:	test   r10d,r10d
  40b29f:	jle    40b2d2 <xmlStrEqual@plt+0x7392>
  40b2a1:	lea    rsi,[rip+0x3e0e0]        # 449388 <xmlStrEqual@plt+0x45448>
  40b2a8:	mov    edi,0x5
  40b2ad:	xor    eax,eax
  40b2af:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  40b2b4:	jmp    40aeeb <xmlStrEqual@plt+0x6fab>
  40b2b9:	nop    DWORD PTR [rax+0x0]
  40b2c0:	mov    r14,0x469e3c
  40b2c7:	mov    ecx,DWORD PTR [r14]
  40b2ca:	test   ecx,ecx
  40b2cc:	jg     40b5b0 <xmlStrEqual@plt+0x7670>
  40b2d2:	xor    ebx,ebx
  40b2d4:	jmp    40af0b <xmlStrEqual@plt+0x6fcb>
  40b2d9:	nop    DWORD PTR [rax+0x0]
  40b2e0:	mov    r14,0x469e3c
  40b2e7:	mov    edx,DWORD PTR [r14]
  40b2ea:	test   edx,edx
  40b2ec:	jle    40b2d2 <xmlStrEqual@plt+0x7392>
  40b2ee:	mov    edx,r12d
  40b2f1:	lea    rsi,[rip+0x3e220]        # 449518 <xmlStrEqual@plt+0x455d8>
  40b2f8:	mov    edi,0x5
  40b2fd:	xor    eax,eax
  40b2ff:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  40b304:	jmp    40aeeb <xmlStrEqual@plt+0x6fab>
  40b309:	nop    DWORD PTR [rax+0x0]
  40b310:	mov    rdi,r13
  40b313:	call   422ca0 <xmlStrEqual@plt+0x1ed60>
  40b318:	test   BYTE PTR [rax],0x8
  40b31b:	jne    40b550 <xmlStrEqual@plt+0x7610>
  40b321:	movzx  eax,WORD PTR [r13+0x20]
  40b326:	cmp    ax,0xffff
  40b32a:	je     40b598 <xmlStrEqual@plt+0x7658>
  40b330:	add    rax,QWORD PTR [r13+0x30]
  40b334:	je     40b598 <xmlStrEqual@plt+0x7658>
  40b33a:	lea    rbp,[rsp+0x100]
  40b342:	mov    rsi,rbp
  40b345:	mov    rdi,r13
  40b348:	call   4366e0 <xmlStrEqual@plt+0x327a0>
  40b34d:	lea    rbx,[rsp+0xb0]
  40b355:	movzx  edx,WORD PTR [rsp+0x140]
  40b35d:	movzx  esi,WORD PTR [rsp+0x142]
  40b365:	lea    rcx,[rbp+0x20]
  40b369:	mov    r8,rbp
  40b36c:	mov    rdi,rbx
  40b36f:	call   439130 <xmlStrEqual@plt+0x351f0>
  40b374:	movzx  r14d,WORD PTR [r13+0x1e]
  40b379:	cmp    r14w,0xffff
  40b37e:	je     40b778 <xmlStrEqual@plt+0x7838>
  40b384:	add    r14,QWORD PTR [r13+0x30]
  40b388:	mov    QWORD PTR [rsp+0x10],r14
  40b38d:	mov    rdi,r13
  40b390:	call   422c30 <xmlStrEqual@plt+0x1ecf0>
  40b395:	mov    r14,0x469e3c
  40b39c:	mov    r12d,eax
  40b39f:	mov    eax,DWORD PTR [r14]
  40b3a2:	test   eax,eax
  40b3a4:	jg     40b660 <xmlStrEqual@plt+0x7720>
  40b3aa:	cmp    r12d,0x7
  40b3ae:	ja     40b2d2 <xmlStrEqual@plt+0x7392>
  40b3b4:	lea    rdx,[rip+0x3e26d]        # 449628 <xmlStrEqual@plt+0x456e8>
  40b3bb:	movsxd rax,DWORD PTR [rdx+r12*4]
  40b3bf:	add    rax,rdx
  40b3c2:	notrack jmp rax
  40b3c5:	nop    DWORD PTR [rax]
  40b3c8:	lea    rdx,[rip+0x3d969]        # 448d38 <xmlStrEqual@plt+0x44df8>
  40b3cf:	lea    rsi,[rip+0x3e272]        # 449648 <xmlStrEqual@plt+0x45708>
  40b3d6:	lea    rdi,[rip+0x3d86e]        # 448c4b <xmlStrEqual@plt+0x44d0b>
  40b3dd:	call   4350f0 <xmlStrEqual@plt+0x311b0>
  40b3e2:	nop    WORD PTR [rax+rax*1+0x0]
  40b3e8:	movzx  eax,BYTE PTR [r13+0x0]
  40b3ed:	test   al,0x3
  40b3ef:	je     40b630 <xmlStrEqual@plt+0x76f0>
  40b3f5:	test   al,0x2
  40b3f7:	je     40b740 <xmlStrEqual@plt+0x7800>
  40b3fd:	cmp    BYTE PTR [r13+0x3],0x1
  40b402:	ja     40bb6d <xmlStrEqual@plt+0x7c2d>
  40b408:	mov    rdi,0x424bf0
  40b40f:	call   42dca0 <xmlStrEqual@plt+0x29d60>
  40b414:	mov    rdi,QWORD PTR [rsp+0x18]
  40b419:	mov    rsi,rax
  40b41c:	mov    QWORD PTR [rsp+0x30],rax
  40b421:	call   422f40 <xmlStrEqual@plt+0x1f000>
  40b426:	xor    eax,eax
  40b428:	mov    edi,0x2
  40b42d:	call   423cc0 <xmlStrEqual@plt+0x1fd80>
  40b432:	cmp    BYTE PTR [r13+0x3],0x0
  40b437:	mov    QWORD PTR [rsp+0x10],rax
  40b43c:	je     40bad9 <xmlStrEqual@plt+0x7b99>
  40b442:	lea    rax,[r15+0x18]
  40b446:	mov    QWORD PTR [rsp+0x38],rbp
  40b44b:	mov    QWORD PTR [rsp+0x40],r15
  40b450:	xor    r12d,r12d
  40b453:	mov    r14,0x469e3c
  40b45a:	mov    QWORD PTR [rsp+0x28],rax
  40b45f:	mov    rbp,QWORD PTR [rsp+0x20]
  40b464:	mov    r15,QWORD PTR [rsp+0x18]
  40b469:	jmp    40b481 <xmlStrEqual@plt+0x7541>
  40b46b:	nop    DWORD PTR [rax+rax*1+0x0]
  40b470:	movzx  eax,BYTE PTR [r13+0x3]
  40b475:	inc    r12d
  40b478:	cmp    r12d,eax
  40b47b:	jge    40bacf <xmlStrEqual@plt+0x7b8f>
  40b481:	mov    rsi,rbx
  40b484:	mov    rdi,r15
  40b487:	call   422ef0 <xmlStrEqual@plt+0x1efb0>
  40b48c:	cmp    eax,0x1
  40b48f:	jne    40ba78 <xmlStrEqual@plt+0x7b38>
  40b495:	mov    r10d,DWORD PTR [r14]
  40b498:	test   r10d,r10d
  40b49b:	jle    40b4bb <xmlStrEqual@plt+0x757b>
  40b49d:	mov    rdi,rbx
  40b4a0:	call   424d40 <xmlStrEqual@plt+0x20e00>
  40b4a5:	mov    rdx,rax
  40b4a8:	lea    rsi,[rip+0x3d853]        # 448d02 <xmlStrEqual@plt+0x44dc2>
  40b4af:	mov    edi,0x5
  40b4b4:	xor    eax,eax
  40b4b6:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  40b4bb:	mov    rdi,QWORD PTR [rsp+0x10]
  40b4c0:	xor    r8d,r8d
  40b4c3:	xor    ecx,ecx
  40b4c5:	xor    edx,edx
  40b4c7:	mov    rsi,rbx
  40b4ca:	call   4238a0 <xmlStrEqual@plt+0x1f960>
  40b4cf:	mov    r9d,DWORD PTR [rbp+0x18]
  40b4d3:	test   r9d,r9d
  40b4d6:	je     40b470 <xmlStrEqual@plt+0x7530>
  40b4d8:	test   BYTE PTR [r13+0x0],0x1
  40b4dd:	je     40b470 <xmlStrEqual@plt+0x7530>
  40b4df:	mov    rdi,rbx
  40b4e2:	call   425670 <xmlStrEqual@plt+0x21730>
  40b4e7:	mov    rdi,rax
  40b4ea:	mov    esi,0x1
  40b4ef:	call   424dd0 <xmlStrEqual@plt+0x20e90>
  40b4f4:	mov    rdi,QWORD PTR [rsp+0x28]
  40b4f9:	mov    rdx,rbp
  40b4fc:	mov    rsi,rbx
  40b4ff:	call   40d720 <xmlStrEqual@plt+0x97e0>
  40b504:	cmp    eax,0x1
  40b507:	jne    40ba78 <xmlStrEqual@plt+0x7b38>
  40b50d:	test   BYTE PTR [r13+0x0],0x2
  40b512:	jne    40b470 <xmlStrEqual@plt+0x7530>
  40b518:	endbr64 
  40b51c:	mov    rdi,QWORD PTR [rsp+0x30]
  40b521:	call   42e2b0 <xmlStrEqual@plt+0x2a370>
  40b526:	cmp    QWORD PTR [rsp+0x10],0x0
  40b52c:	jne    40bc2a <xmlStrEqual@plt+0x7cea>
  40b532:	mov    rdi,QWORD PTR [rsp+0x20]
  40b537:	call   424bf0 <xmlStrEqual@plt+0x20cb0>
  40b53c:	mov    rdi,rbx
  40b53f:	call   424bf0 <xmlStrEqual@plt+0x20cb0>
  40b544:	jmp    40af5d <xmlStrEqual@plt+0x701d>
  40b549:	nop    DWORD PTR [rax+0x0]
  40b550:	mov    rdi,r13
  40b553:	call   424180 <xmlStrEqual@plt+0x20240>
  40b558:	cmp    eax,0x2
  40b55b:	je     40b690 <xmlStrEqual@plt+0x7750>
  40b561:	mov    rax,0x469e3c
  40b568:	cmp    DWORD PTR [rax],0x1
  40b56b:	jle    40b2d2 <xmlStrEqual@plt+0x7392>
  40b571:	mov    rdi,r13
  40b574:	call   424180 <xmlStrEqual@plt+0x20240>
  40b579:	mov    edx,eax
  40b57b:	lea    rsi,[rip+0x3d749]        # 448ccb <xmlStrEqual@plt+0x44d8b>
  40b582:	mov    edi,0x6
  40b587:	xor    eax,eax
  40b589:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  40b58e:	xor    ebx,ebx
  40b590:	jmp    40af0b <xmlStrEqual@plt+0x6fcb>
  40b595:	nop    DWORD PTR [rax]
  40b598:	mov    rdi,r13
  40b59b:	call   422ce0 <xmlStrEqual@plt+0x1eda0>
  40b5a0:	cmp    eax,0x1
  40b5a3:	je     40b33a <xmlStrEqual@plt+0x73fa>
  40b5a9:	xor    ebx,ebx
  40b5ab:	jmp    40af0b <xmlStrEqual@plt+0x6fcb>
  40b5b0:	lea    rsi,[rip+0x3df19]        # 4494d0 <xmlStrEqual@plt+0x45590>
  40b5b7:	mov    edi,0x5
  40b5bc:	xor    eax,eax
  40b5be:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  40b5c3:	jmp    40aeeb <xmlStrEqual@plt+0x6fab>
  40b5c8:	nop    DWORD PTR [rax+rax*1+0x0]
  40b5d0:	mov    rdi,QWORD PTR [rsp+0x18]
  40b5d5:	call   430c70 <xmlStrEqual@plt+0x2cd30>
  40b5da:	jmp    40b035 <xmlStrEqual@plt+0x70f5>
  40b5df:	nop
  40b5e0:	mov    r12d,DWORD PTR [r14]
  40b5e3:	test   r12d,r12d
  40b5e6:	jle    40b2d2 <xmlStrEqual@plt+0x7392>
  40b5ec:	lea    rsi,[rip+0x3dccd]        # 4492c0 <xmlStrEqual@plt+0x45380>
  40b5f3:	mov    edi,0x5
  40b5f8:	xor    eax,eax
  40b5fa:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  40b5ff:	jmp    40aeeb <xmlStrEqual@plt+0x6fab>
  40b604:	nop    DWORD PTR [rax+0x0]
  40b608:	mov    ecx,DWORD PTR [r14]
  40b60b:	test   ecx,ecx
  40b60d:	jle    40b2d2 <xmlStrEqual@plt+0x7392>
  40b613:	lea    rsi,[rip+0x3dbce]        # 4491e8 <xmlStrEqual@plt+0x452a8>
  40b61a:	mov    edi,0x5
  40b61f:	xor    eax,eax
  40b621:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  40b626:	jmp    40aeeb <xmlStrEqual@plt+0x6fab>
  40b62b:	nop    DWORD PTR [rax+rax*1+0x0]
  40b630:	mov    r14,0x469e3c
  40b637:	lea    rsi,[rip+0x3da8a]        # 4490c8 <xmlStrEqual@plt+0x45188>
  40b63e:	mov    r12d,DWORD PTR [r14]
  40b641:	test   r12d,r12d
  40b644:	jle    40aed2 <xmlStrEqual@plt+0x6f92>
  40b64a:	mov    edi,0x5
  40b64f:	xor    eax,eax
  40b651:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  40b656:	jmp    40aed2 <xmlStrEqual@plt+0x6f92>
  40b65b:	nop    DWORD PTR [rax+rax*1+0x0]
  40b660:	mov    rdi,r13
  40b663:	call   423f50 <xmlStrEqual@plt+0x20010>
  40b668:	mov    rdx,rax
  40b66b:	lea    rsi,[rip+0x3d672]        # 448ce4 <xmlStrEqual@plt+0x44da4>
  40b672:	mov    edi,0x5
  40b677:	xor    eax,eax
  40b679:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  40b67e:	mov    rbp,QWORD PTR [rsp+0x8]
  40b683:	mov    QWORD PTR [rsp+0x8],rbx
  40b688:	jmp    40ae23 <xmlStrEqual@plt+0x6ee3>
  40b68d:	nop    DWORD PTR [rax]
  40b690:	mov    rax,QWORD PTR [rsp+0x8]
  40b695:	mov    rsi,r13
  40b698:	lea    rdx,[rax+0x20]
  40b69c:	mov    rdi,r15
  40b69f:	call   40acf0 <xmlStrEqual@plt+0x6db0>
  40b6a4:	cmp    eax,0x1
  40b6a7:	je     40b321 <xmlStrEqual@plt+0x73e1>
  40b6ad:	xor    ebx,ebx
  40b6af:	jmp    40af0b <xmlStrEqual@plt+0x6fcb>
  40b6b4:	mov    QWORD PTR [rsp+0x8],rbx
  40b6b9:	jmp    40b127 <xmlStrEqual@plt+0x71e7>
  40b6be:	mov    rbp,QWORD PTR [rsp+0x8]
  40b6c3:	mov    QWORD PTR [rsp+0x8],rbx
  40b6c8:	jmp    40af87 <xmlStrEqual@plt+0x7047>
  40b6cd:	mov    QWORD PTR [rsp+0x8],rbx
  40b6d2:	jmp    40af47 <xmlStrEqual@plt+0x7007>
  40b6d7:	nop    WORD PTR [rax+rax*1+0x0]
  40b6e0:	mov    r15d,DWORD PTR [r14]
  40b6e3:	test   r15d,r15d
  40b6e6:	jle    40b2d2 <xmlStrEqual@plt+0x7392>
  40b6ec:	mov    rdi,QWORD PTR [r12+0x4]
  40b6f1:	call   435170 <xmlStrEqual@plt+0x31230>
  40b6f6:	mov    rdx,rax
  40b6f9:	lea    rsi,[rip+0x3db80]        # 449280 <xmlStrEqual@plt+0x45340>
  40b700:	mov    edi,0x5
  40b705:	xor    eax,eax
  40b707:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  40b70c:	jmp    40aeeb <xmlStrEqual@plt+0x6fab>
  40b711:	nop    DWORD PTR [rax+0x0]
  40b718:	mov    esi,DWORD PTR [r14]
  40b71b:	test   esi,esi
  40b71d:	jle    40b2d2 <xmlStrEqual@plt+0x7392>
  40b723:	lea    rsi,[rip+0x3da7e]        # 4491a8 <xmlStrEqual@plt+0x45268>
  40b72a:	mov    edi,0x5
  40b72f:	xor    eax,eax
  40b731:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  40b736:	jmp    40aeeb <xmlStrEqual@plt+0x6fab>
  40b73b:	nop    DWORD PTR [rax+rax*1+0x0]
  40b740:	test   al,0x1
  40b742:	je     40b408 <xmlStrEqual@plt+0x74c8>
  40b748:	cmp    BYTE PTR [r13+0x3],0x1
  40b74d:	jbe    40b408 <xmlStrEqual@plt+0x74c8>
  40b753:	mov    r14,0x469e3c
  40b75a:	lea    rsi,[rip+0x3d9df]        # 449140 <xmlStrEqual@plt+0x45200>
  40b761:	mov    r11d,DWORD PTR [r14]
  40b764:	test   r11d,r11d
  40b767:	jle    40aed2 <xmlStrEqual@plt+0x6f92>
  40b76d:	jmp    40b64a <xmlStrEqual@plt+0x770a>
  40b772:	nop    WORD PTR [rax+rax*1+0x0]
  40b778:	mov    QWORD PTR [rsp+0x10],0x0
  40b781:	jmp    40b38d <xmlStrEqual@plt+0x744d>
  40b786:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40b790:	mov    r13d,DWORD PTR [r14]
  40b793:	test   r13d,r13d
  40b796:	jle    40b2d2 <xmlStrEqual@plt+0x7392>
  40b79c:	mov    rdi,QWORD PTR [rbp+0x18]
  40b7a0:	call   424d40 <xmlStrEqual@plt+0x20e00>
  40b7a5:	mov    rdx,rax
  40b7a8:	lea    rsi,[rip+0x3d8c1]        # 449070 <xmlStrEqual@plt+0x45130>
  40b7af:	mov    edi,0x5
  40b7b4:	xor    eax,eax
  40b7b6:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  40b7bb:	jmp    40aeeb <xmlStrEqual@plt+0x6fab>
  40b7c0:	mov    edx,DWORD PTR [r14]
  40b7c3:	test   edx,edx
  40b7c5:	jle    40b2d2 <xmlStrEqual@plt+0x7392>
  40b7cb:	lea    rsi,[rip+0x3da5e]        # 449230 <xmlStrEqual@plt+0x452f0>
  40b7d2:	mov    edi,0x5
  40b7d7:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  40b7dc:	jmp    40aeeb <xmlStrEqual@plt+0x6fab>
  40b7e1:	nop    DWORD PTR [rax+0x0]
  40b7e8:	test   al,0x4
  40b7ea:	jne    40bb8b <xmlStrEqual@plt+0x7c4b>
  40b7f0:	mov    ebp,DWORD PTR [r14]
  40b7f3:	test   ebp,ebp
  40b7f5:	jle    40b2d2 <xmlStrEqual@plt+0x7392>
  40b7fb:	lea    rsi,[rip+0x3dafe]        # 449300 <xmlStrEqual@plt+0x453c0>
  40b802:	mov    edi,0x5
  40b807:	xor    eax,eax
  40b809:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  40b80e:	jmp    40aeeb <xmlStrEqual@plt+0x6fab>
  40b813:	nop    DWORD PTR [rax+rax*1+0x0]
  40b818:	mov    rbp,QWORD PTR [rsp+0x38]
  40b81d:	mov    r15,QWORD PTR [rsp+0x40]
  40b822:	mov    r14,QWORD PTR [rsp+0x30]
  40b827:	lea    rbx,[rsp+0xa0]
  40b82f:	mov    rdi,QWORD PTR [rsp+0x18]
  40b834:	lea    rdx,[rsp+0x58]
  40b839:	mov    rsi,rbx
  40b83c:	call   423580 <xmlStrEqual@plt+0x1f640>
  40b841:	mov    rax,QWORD PTR [rsp+0x20]
  40b846:	mov    r12,QWORD PTR [rax+0x8]
  40b84a:	cmp    rax,r12
  40b84d:	je     40b9cd <xmlStrEqual@plt+0x7a8d>
  40b853:	lea    rax,[r15+0x18]
  40b857:	mov    QWORD PTR [rsp+0x30],r14
  40b85c:	mov    QWORD PTR [rsp+0x38],rax
  40b861:	mov    r14,rbx
  40b864:	jmp    40b8bb <xmlStrEqual@plt+0x797b>
  40b866:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40b870:	mov    rsi,rax
  40b873:	mov    rax,0x475858
  40b87a:	mov    rdi,QWORD PTR [rax]
  40b87d:	call   43b830 <xmlStrEqual@plt+0x378f0>
  40b882:	test   rax,rax
  40b885:	je     40ba20 <xmlStrEqual@plt+0x7ae0>
  40b88b:	mov    esi,DWORD PTR [rax+0x18]
  40b88e:	test   esi,esi
  40b890:	je     40bac8 <xmlStrEqual@plt+0x7b88>
  40b896:	mov    rax,QWORD PTR [rax+0x8]
  40b89a:	mov    rbx,QWORD PTR [rax+0x10]
  40b89e:	mov    esi,0xd2
  40b8a3:	mov    rdi,rbx
  40b8a6:	call   43b470 <xmlStrEqual@plt+0x37530>
  40b8ab:	mov    r12,QWORD PTR [r12+0x8]
  40b8b0:	cmp    QWORD PTR [rsp+0x20],r12
  40b8b5:	je     40b9c8 <xmlStrEqual@plt+0x7a88>
  40b8bb:	mov    r13,QWORD PTR [r12+0x10]
  40b8c0:	mov    rdi,QWORD PTR [r15+0x30]
  40b8c4:	mov    rsi,r13
  40b8c7:	call   409b10 <xmlStrEqual@plt+0x5bd0>
  40b8cc:	mov    rbx,rax
  40b8cf:	test   rax,rax
  40b8d2:	je     40b9a0 <xmlStrEqual@plt+0x7a60>
  40b8d8:	mov    rdi,QWORD PTR [rax+0x30]
  40b8dc:	test   rdi,rdi
  40b8df:	je     40b985 <xmlStrEqual@plt+0x7a45>
  40b8e5:	cmp    QWORD PTR [rdi],0x0
  40b8e9:	je     40b980 <xmlStrEqual@plt+0x7a40>
  40b8ef:	sub    rsp,0x8
  40b8f3:	mov    r9,QWORD PTR [rbp+0x8]
  40b8f7:	movzx  r8d,WORD PTR [rbp+0x20]
  40b8fc:	mov    rdx,QWORD PTR [rbp+0x10]
  40b900:	push   r14
  40b902:	mov    rcx,QWORD PTR [rbp+0x0]
  40b906:	mov    rsi,r13
  40b909:	mov    rdi,rbx
  40b90c:	call   4345b0 <xmlStrEqual@plt+0x30670>
  40b911:	pop    r8
  40b913:	pop    r9
  40b915:	cmp    eax,0x2
  40b918:	jne    40b935 <xmlStrEqual@plt+0x79f5>
  40b91a:	mov    rdi,QWORD PTR [r15+0x40]
  40b91e:	mov    rax,QWORD PTR [r15+0x38]
  40b922:	mov    rsi,rbx
  40b925:	call   QWORD PTR [rax+0x38]
  40b928:	xor    edx,edx
  40b92a:	mov    rsi,r13
  40b92d:	mov    rdi,r15
  40b930:	call   4089c0 <xmlStrEqual@plt+0x4a80>
  40b935:	mov    rdx,QWORD PTR [rbp+0x8]
  40b939:	mov    rsi,r14
  40b93c:	mov    rdi,rbx
  40b93f:	call   434980 <xmlStrEqual@plt+0x30a40>
  40b944:	mov    r13,rax
  40b947:	test   rax,rax
  40b94a:	jne    40b870 <xmlStrEqual@plt+0x7930>
  40b950:	mov    rax,QWORD PTR [rsp+0x30]
  40b955:	mov    edi,DWORD PTR [rax]
  40b957:	test   edi,edi
  40b959:	jle    40b8ab <xmlStrEqual@plt+0x796b>
  40b95f:	lea    rsi,[rip+0x3da7a]        # 4493e0 <xmlStrEqual@plt+0x454a0>
  40b966:	mov    edi,0x5
  40b96b:	xor    eax,eax
  40b96d:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  40b972:	jmp    40b8ab <xmlStrEqual@plt+0x796b>
  40b977:	nop    WORD PTR [rax+rax*1+0x0]
  40b980:	call   434080 <xmlStrEqual@plt+0x30140>
  40b985:	xor    eax,eax
  40b987:	call   434010 <xmlStrEqual@plt+0x300d0>
  40b98c:	mov    QWORD PTR [rbx+0x30],rax
  40b990:	mov    rax,0x434080
  40b997:	mov    QWORD PTR [rbx+0x38],rax
  40b99b:	jmp    40b8ef <xmlStrEqual@plt+0x79af>
  40b9a0:	mov    rdi,r13
  40b9a3:	call   42b040 <xmlStrEqual@plt+0x27100>
  40b9a8:	mov    rdi,QWORD PTR [rsp+0x38]
  40b9ad:	mov    ecx,0x1
  40b9b2:	mov    edx,0x1
  40b9b7:	mov    rsi,rax
  40b9ba:	call   40c700 <xmlStrEqual@plt+0x87c0>
  40b9bf:	mov    rbx,rax
  40b9c2:	jmp    40b985 <xmlStrEqual@plt+0x7a45>
  40b9c4:	nop    DWORD PTR [rax+0x0]
  40b9c8:	mov    r14,QWORD PTR [rsp+0x30]
  40b9cd:	mov    rdi,QWORD PTR [rsp+0x20]
  40b9d2:	call   42e2b0 <xmlStrEqual@plt+0x2a370>
  40b9d7:	cmp    QWORD PTR [rsp+0x10],0x0
  40b9dd:	je     40bc9a <xmlStrEqual@plt+0x7d5a>
  40b9e3:	mov    rdi,QWORD PTR [rsp+0x18]
  40b9e8:	call   430bb0 <xmlStrEqual@plt+0x2cc70>
  40b9ed:	mov    eax,DWORD PTR [r15+0x58]
  40b9f1:	test   eax,eax
  40b9f3:	je     40bc89 <xmlStrEqual@plt+0x7d49>
  40b9f9:	cmp    eax,0x1
  40b9fc:	je     40bc39 <xmlStrEqual@plt+0x7cf9>
  40ba02:	lea    rsi,[rip+0x3da7f]        # 449488 <xmlStrEqual@plt+0x45548>
  40ba09:	mov    edi,0x2
  40ba0e:	xor    eax,eax
  40ba10:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  40ba15:	jmp    40aeeb <xmlStrEqual@plt+0x6fab>
  40ba1a:	nop    WORD PTR [rax+rax*1+0x0]
  40ba20:	mov    edi,0x10
  40ba25:	call   435000 <xmlStrEqual@plt+0x310c0>
  40ba2a:	mov    rcx,rax
  40ba2d:	test   rax,rax
  40ba30:	je     40bcf4 <xmlStrEqual@plt+0x7db4>
  40ba36:	mov    QWORD PTR [rax],rbx
  40ba39:	mov    QWORD PTR [rax+0x8],r13
  40ba3d:	mov    rdx,0x40a190
  40ba44:	mov    rsi,r15
  40ba47:	lea    r8,[rip+0xffffffffffffe4e2]        # 409f30 <xmlStrEqual@plt+0x5ff0>
  40ba4e:	mov    edi,0xd
  40ba53:	call   43b710 <xmlStrEqual@plt+0x377d0>
  40ba58:	mov    rbx,rax
  40ba5b:	mov    rdx,rax
  40ba5e:	mov    rax,0x475858
  40ba65:	mov    rsi,r13
  40ba68:	mov    rdi,QWORD PTR [rax]
  40ba6b:	call   43b7c0 <xmlStrEqual@plt+0x37880>
  40ba70:	jmp    40b89e <xmlStrEqual@plt+0x795e>
  40ba75:	nop    DWORD PTR [rax]
  40ba78:	mov    rdi,QWORD PTR [rsp+0x30]
  40ba7d:	call   42e2b0 <xmlStrEqual@plt+0x2a370>
  40ba82:	cmp    QWORD PTR [rsp+0x10],0x0
  40ba88:	je     40aed9 <xmlStrEqual@plt+0x6f99>
  40ba8e:	mov    rdi,QWORD PTR [rsp+0x10]
  40ba93:	call   430820 <xmlStrEqual@plt+0x2c8e0>
  40ba98:	jmp    40aed9 <xmlStrEqual@plt+0x6f99>
  40ba9d:	nop    DWORD PTR [rax]
  40baa0:	mov    r11d,DWORD PTR [r14]
  40baa3:	test   r11d,r11d
  40baa6:	jle    40b2d2 <xmlStrEqual@plt+0x7392>
  40baac:	lea    rsi,[rip+0x3d88d]        # 449340 <xmlStrEqual@plt+0x45400>
  40bab3:	mov    edi,0x5
  40bab8:	xor    eax,eax
  40baba:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  40babf:	jmp    40aeeb <xmlStrEqual@plt+0x6fab>
  40bac4:	nop    DWORD PTR [rax+0x0]
  40bac8:	xor    ebx,ebx
  40baca:	jmp    40b89e <xmlStrEqual@plt+0x795e>
  40bacf:	mov    rbp,QWORD PTR [rsp+0x38]
  40bad4:	mov    r15,QWORD PTR [rsp+0x40]
  40bad9:	mov    rcx,QWORD PTR [rsp+0x10]
  40bade:	movzx  eax,WORD PTR [rcx+0x24]
  40bae2:	cmp    ax,0xffff
  40bae6:	je     403f50 <xmlStrEqual@plt+0x10>
  40baec:	add    rax,QWORD PTR [rcx+0x30]
  40baf0:	movzx  ecx,BYTE PTR [r13+0x0]
  40baf5:	lea    r12,[rsp+0x100]
  40bafd:	lea    edx,[rcx*4+0x0]
  40bb04:	mov    ecx,edx
  40bb06:	movzx  edx,BYTE PTR [rax]
  40bb09:	and    ecx,0x8
  40bb0c:	and    edx,0xfffffff7
  40bb0f:	or     edx,ecx
  40bb11:	mov    BYTE PTR [rax],dl
  40bb13:	mov    rsi,QWORD PTR [rsp+0x30]
  40bb18:	mov    r8,r12
  40bb1b:	mov    rdx,QWORD PTR [r13+0x4]
  40bb1f:	mov    rcx,rbp
  40bb22:	mov    QWORD PTR [rax+0x4],rdx
  40bb26:	mov    rdx,QWORD PTR [rsp+0x8]
  40bb2b:	mov    rdi,r15
  40bb2e:	call   408bf0 <xmlStrEqual@plt+0x4cb0>
  40bb33:	mov    r14,0x469e3c
  40bb3a:	cmp    eax,0x1
  40bb3d:	je     40bbe9 <xmlStrEqual@plt+0x7ca9>
  40bb43:	mov    r8d,DWORD PTR [r14]
  40bb46:	test   r8d,r8d
  40bb49:	jle    40bb5e <xmlStrEqual@plt+0x7c1e>
  40bb4b:	lea    rsi,[rip+0x3d626]        # 449178 <xmlStrEqual@plt+0x45238>
  40bb52:	mov    edi,0x5
  40bb57:	xor    eax,eax
  40bb59:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  40bb5e:	mov    rdi,QWORD PTR [rsp+0x30]
  40bb63:	call   42e2b0 <xmlStrEqual@plt+0x2a370>
  40bb68:	jmp    40ba8e <xmlStrEqual@plt+0x7b4e>
  40bb6d:	mov    r14,0x469e3c
  40bb74:	mov    ebp,DWORD PTR [r14]
  40bb77:	test   ebp,ebp
  40bb79:	jle    40aed2 <xmlStrEqual@plt+0x6f92>
  40bb7f:	lea    rsi,[rip+0x3d582]        # 449108 <xmlStrEqual@plt+0x451c8>
  40bb86:	jmp    40b64a <xmlStrEqual@plt+0x770a>
  40bb8b:	mov    ebx,DWORD PTR [r13+0x14]
  40bb8f:	mov    edi,0x1
  40bb94:	call   42d9a0 <xmlStrEqual@plt+0x29a60>
  40bb99:	sub    rbx,0x4
  40bb9d:	movzx  eax,ax
  40bba0:	sub    rbx,rax
  40bba3:	mov    rax,QWORD PTR [rsp+0x28]
  40bba8:	lea    rsi,[r12+rbx*1]
  40bbac:	mov    rdx,QWORD PTR [rax+0x8]
  40bbb0:	mov    rdi,r13
  40bbb3:	mov    QWORD PTR [rsp+0x48],rsi
  40bbb8:	call   424360 <xmlStrEqual@plt+0x20420>
  40bbbd:	cmp    eax,0x1
  40bbc0:	je     40b1f5 <xmlStrEqual@plt+0x72b5>
  40bbc6:	mov    ebx,DWORD PTR [r14]
  40bbc9:	test   ebx,ebx
  40bbcb:	jle    40b2d2 <xmlStrEqual@plt+0x7392>
  40bbd1:	lea    rsi,[rip+0x3d142]        # 448d1a <xmlStrEqual@plt+0x44dda>
  40bbd8:	mov    edi,0x5
  40bbdd:	xor    eax,eax
  40bbdf:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  40bbe4:	jmp    40aeeb <xmlStrEqual@plt+0x6fab>
  40bbe9:	mov    edi,DWORD PTR [r14]
  40bbec:	test   edi,edi
  40bbee:	jle    40bc10 <xmlStrEqual@plt+0x7cd0>
  40bbf0:	mov    rdi,QWORD PTR [rsp+0x10]
  40bbf5:	call   423f50 <xmlStrEqual@plt+0x20010>
  40bbfa:	mov    rdx,rax
  40bbfd:	lea    rsi,[rip+0x3d10b]        # 448d0f <xmlStrEqual@plt+0x44dcf>
  40bc04:	mov    edi,0x5
  40bc09:	xor    eax,eax
  40bc0b:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  40bc10:	mov    rsi,QWORD PTR [rsp+0x10]
  40bc15:	mov    rdi,r15
  40bc18:	mov    rdx,r12
  40bc1b:	call   4089b0 <xmlStrEqual@plt+0x4a70>
  40bc20:	mov    rdi,QWORD PTR [rsp+0x30]
  40bc25:	call   42e2b0 <xmlStrEqual@plt+0x2a370>
  40bc2a:	mov    rdi,QWORD PTR [rsp+0x10]
  40bc2f:	call   430820 <xmlStrEqual@plt+0x2c8e0>
  40bc34:	jmp    40b532 <xmlStrEqual@plt+0x75f2>
  40bc39:	mov    rdi,QWORD PTR [rbp+0x0]
  40bc3d:	call   4199d0 <xmlStrEqual@plt+0x15a90>
  40bc42:	mov    rdi,QWORD PTR [rsp+0x18]
  40bc47:	mov    edx,eax
  40bc49:	mov    esi,0xffffff
  40bc4e:	call   419a30 <xmlStrEqual@plt+0x15af0>
  40bc53:	movzx  edx,WORD PTR [rbp+0x20]
  40bc57:	lea    rbx,[rsp+0x100]
  40bc5f:	mov    rcx,QWORD PTR [rbp+0x10]
  40bc63:	mov    r8,QWORD PTR [rbp+0x0]
  40bc67:	mov    rdi,rbx
  40bc6a:	mov    esi,0x10f6
  40bc6f:	call   439130 <xmlStrEqual@plt+0x351f0>
  40bc74:	mov    rsi,QWORD PTR [rsp+0x18]
  40bc79:	mov    rdx,rbx
  40bc7c:	mov    rdi,r15
  40bc7f:	call   4089b0 <xmlStrEqual@plt+0x4a70>
  40bc84:	jmp    40af58 <xmlStrEqual@plt+0x7018>
  40bc89:	mov    rdi,QWORD PTR [rsp+0x18]
  40bc8e:	mov    esi,0xffffff
  40bc93:	call   424800 <xmlStrEqual@plt+0x208c0>
  40bc98:	jmp    40bc53 <xmlStrEqual@plt+0x7d13>
  40bc9a:	mov    r12,QWORD PTR [rsp+0x18]
  40bc9f:	mov    rsi,QWORD PTR [rsp+0x48]
  40bca4:	xor    ecx,ecx
  40bca6:	xor    edx,edx
  40bca8:	mov    rdi,r12
  40bcab:	call   424260 <xmlStrEqual@plt+0x20320>
  40bcb0:	mov    rax,QWORD PTR [rsp+0x28]
  40bcb5:	mov    ebx,DWORD PTR [rsp+0x74]
  40bcb9:	mov    edi,DWORD PTR [rax+0x10]
  40bcbc:	call   42d9a0 <xmlStrEqual@plt+0x29a60>
  40bcc1:	movzx  eax,ax
  40bcc4:	sub    ebx,eax
  40bcc6:	mov    rdi,r12
  40bcc9:	mov    DWORD PTR [rsp+0x74],ebx
  40bccd:	call   430c70 <xmlStrEqual@plt+0x2cd30>
  40bcd2:	mov    rax,QWORD PTR [rsp+0x8]
  40bcd7:	mov    r8,QWORD PTR [rbp+0x8]
  40bcdb:	movzx  edx,WORD PTR [rax+0x42]
  40bcdf:	movzx  esi,WORD PTR [rax+0x40]
  40bce3:	lea    rcx,[rax+0x20]
  40bce7:	mov    rdi,r12
  40bcea:	call   4363a0 <xmlStrEqual@plt+0x32460>
  40bcef:	jmp    40b9e3 <xmlStrEqual@plt+0x7aa3>
  40bcf4:	mov    rax,QWORD PTR [rsp+0x30]
  40bcf9:	cmp    DWORD PTR [rax],0x1
  40bcfc:	jle    40ba3d <xmlStrEqual@plt+0x7afd>
  40bd02:	lea    rsi,[rip+0x3d71f]        # 449428 <xmlStrEqual@plt+0x454e8>
  40bd09:	mov    edi,0x6
  40bd0e:	xor    eax,eax
  40bd10:	mov    QWORD PTR [rsp+0x40],rcx
  40bd15:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  40bd1a:	mov    rcx,QWORD PTR [rsp+0x40]
  40bd1f:	jmp    40ba3d <xmlStrEqual@plt+0x7afd>
  40bd24:	call   403c00 <__stack_chk_fail@plt>
  40bd29:	nop    DWORD PTR [rax+0x0]
  40bd30:	endbr64 
  40bd34:	push   r13
  40bd36:	mov    r13,rdi
  40bd39:	mov    edi,0x18
  40bd3e:	push   r12
  40bd40:	mov    r12,rsi
  40bd43:	push   rbp
  40bd44:	mov    ebp,edx
  40bd46:	push   rbx
  40bd47:	sub    rsp,0x8
  40bd4b:	call   434fe0 <xmlStrEqual@plt+0x310a0>
  40bd50:	mov    rbx,rax
  40bd53:	test   rax,rax
  40bd56:	je     40bd90 <xmlStrEqual@plt+0x7e50>
  40bd58:	mov    rdi,r13
  40bd5b:	call   425060 <xmlStrEqual@plt+0x21120>
  40bd60:	mov    QWORD PTR [rbx],rax
  40bd63:	mov    rdi,r12
  40bd66:	call   403ed0 <strdup@plt>
  40bd6b:	mov    QWORD PTR [rbx+0x8],rax
  40bd6f:	mov    DWORD PTR [rbx+0x10],0x1
  40bd76:	mov    DWORD PTR [rbx+0x14],ebp
  40bd79:	add    rsp,0x8
  40bd7d:	mov    rax,rbx
  40bd80:	pop    rbx
  40bd81:	pop    rbp
  40bd82:	pop    r12
  40bd84:	pop    r13
  40bd86:	ret    
  40bd87:	nop    WORD PTR [rax+rax*1+0x0]
  40bd90:	lea    rsi,[rip+0x3d821]        # 4495b8 <xmlStrEqual@plt+0x45678>
  40bd97:	mov    edi,0x3
  40bd9c:	xor    eax,eax
  40bd9e:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  40bda3:	jmp    40bd79 <xmlStrEqual@plt+0x7e39>
  40bda5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40bdaf:	nop
  40bdb0:	endbr64 
  40bdb4:	jmp    4037b0 <free@plt>
  40bdb9:	nop    DWORD PTR [rax+0x0]
  40bdc0:	endbr64 
  40bdc4:	push   rbx
  40bdc5:	mov    rbx,rdi
  40bdc8:	mov    rdi,QWORD PTR [rdi+0x8]
  40bdcc:	call   424bf0 <xmlStrEqual@plt+0x20cb0>
  40bdd1:	mov    rdi,rbx
  40bdd4:	pop    rbx
  40bdd5:	jmp    4037b0 <free@plt>
  40bdda:	nop    WORD PTR [rax+rax*1+0x0]
  40bde0:	endbr64 
  40bde4:	push   rbp
  40bde5:	xor    eax,eax
  40bde7:	push   rbx
  40bde8:	mov    rbx,rdi
  40bdeb:	sub    rsp,0x8
  40bdef:	call   409a20 <xmlStrEqual@plt+0x5ae0>
  40bdf4:	mov    QWORD PTR [rbx+0x18],rax
  40bdf8:	mov    rbp,0x424bf0
  40bdff:	mov    rdi,rbp
  40be02:	call   42dca0 <xmlStrEqual@plt+0x29d60>
  40be07:	mov    QWORD PTR [rbx+0x30],rax
  40be0b:	mov    rdi,0x42f000
  40be12:	call   43a0a0 <xmlStrEqual@plt+0x36160>
  40be17:	cmp    QWORD PTR [rbx+0x18],0x0
  40be1c:	mov    QWORD PTR [rbx+0x38],rax
  40be20:	je     40be50 <xmlStrEqual@plt+0x7f10>
  40be22:	cmp    QWORD PTR [rbx+0x30],0x0
  40be27:	je     40be50 <xmlStrEqual@plt+0x7f10>
  40be29:	test   rax,rax
  40be2c:	je     40be50 <xmlStrEqual@plt+0x7f10>
  40be2e:	mov    rdi,rbp
  40be31:	call   42dca0 <xmlStrEqual@plt+0x29d60>
  40be36:	mov    QWORD PTR [rbx+0x48],rax
  40be3a:	add    rsp,0x8
  40be3e:	pop    rbx
  40be3f:	mov    eax,0x1
  40be44:	pop    rbp
  40be45:	ret    
  40be46:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40be50:	add    rsp,0x8
  40be54:	pop    rbx
  40be55:	xor    eax,eax
  40be57:	pop    rbp
  40be58:	ret    
  40be59:	nop    DWORD PTR [rax+0x0]
  40be60:	endbr64 
  40be64:	test   rdi,rdi
  40be67:	je     40bea8 <xmlStrEqual@plt+0x7f68>
  40be69:	push   rbx
  40be6a:	mov    rbx,rdi
  40be6d:	mov    rdi,QWORD PTR [rdi+0x38]
  40be71:	call   43add0 <xmlStrEqual@plt+0x36e90>
  40be76:	mov    rdi,QWORD PTR [rbx+0x18]
  40be7a:	call   409a80 <xmlStrEqual@plt+0x5b40>
  40be7f:	mov    rdi,QWORD PTR [rbx+0x30]
  40be83:	call   42e2b0 <xmlStrEqual@plt+0x2a370>
  40be88:	mov    rdi,QWORD PTR [rbx+0x28]
  40be8c:	test   rdi,rdi
  40be8f:	je     40be98 <xmlStrEqual@plt+0x7f58>
  40be91:	mov    rax,QWORD PTR [rbx+0x20]
  40be95:	call   QWORD PTR [rax+0x8]
  40be98:	mov    rdi,QWORD PTR [rbx+0x48]
  40be9c:	pop    rbx
  40be9d:	jmp    42e2b0 <xmlStrEqual@plt+0x2a370>
  40bea2:	nop    WORD PTR [rax+rax*1+0x0]
  40bea8:	ret    
  40bea9:	nop    DWORD PTR [rax+0x0]
  40beb0:	endbr64 
  40beb4:	mov    rax,rdi
  40beb7:	ret    
  40beb8:	nop    DWORD PTR [rax+rax*1+0x0]
  40bec0:	endbr64 
  40bec4:	push   r15
  40bec6:	mov    r15,rsi
  40bec9:	push   r14
  40becb:	push   r13
  40becd:	mov    r13,rcx
  40bed0:	push   r12
  40bed2:	mov    r12,rdx
  40bed5:	push   rbp
  40bed6:	lea    rbp,[rdi-0x18]
  40beda:	push   rbx
  40bedb:	mov    rbx,rdi
  40bede:	mov    rdi,rbp
  40bee1:	sub    rsp,0x88
  40bee8:	mov    rax,QWORD PTR fs:0x28
  40bef1:	mov    QWORD PTR [rsp+0x78],rax
  40bef6:	xor    eax,eax
  40bef8:	call   408950 <xmlStrEqual@plt+0x4a10>
  40befd:	mov    r14,rax
  40bf00:	mov    rax,QWORD PTR [rbx+0x20]
  40bf04:	mov    rdi,r14
  40bf07:	mov    rbx,QWORD PTR [rax+0x48]
  40bf0b:	call   408720 <xmlStrEqual@plt+0x47e0>
  40bf10:	mov    rdi,QWORD PTR [r12]
  40bf14:	mov    rsi,rax
  40bf17:	call   rbx
  40bf19:	lea    rbx,[rsp+0x10]
  40bf1e:	xor    esi,esi
  40bf20:	mov    rdi,rbx
  40bf23:	mov    r12,rax
  40bf26:	call   424dd0 <xmlStrEqual@plt+0x20e90>
  40bf2b:	mov    rdi,r14
  40bf2e:	call   4086b0 <xmlStrEqual@plt+0x4770>
  40bf33:	mov    rsi,rax
  40bf36:	mov    rdi,rbx
  40bf39:	mov    rdx,r15
  40bf3c:	mov    r14,rax
  40bf3f:	call   423de0 <xmlStrEqual@plt+0x1fea0>
  40bf44:	mov    rbx,rax
  40bf47:	mov    rdi,r14
  40bf4a:	call   42e2b0 <xmlStrEqual@plt+0x2a370>
  40bf4f:	test   rbx,rbx
  40bf52:	je     40bfd0 <xmlStrEqual@plt+0x8090>
  40bf54:	movzx  eax,WORD PTR [rbx+0x24]
  40bf58:	cmp    ax,0xffff
  40bf5c:	je     403f64 <xmlStrEqual@plt+0x24>
  40bf62:	add    rax,QWORD PTR [rbx+0x30]
  40bf66:	or     BYTE PTR [rax],0x2
  40bf69:	mov    QWORD PTR [rax+0x4],r13
  40bf6d:	lea    r13,[rsp+0x30]
  40bf72:	mov    r8,r12
  40bf75:	xor    ecx,ecx
  40bf77:	mov    edx,0x10f6
  40bf7c:	mov    esi,0x10f6
  40bf81:	mov    rdi,r13
  40bf84:	call   439130 <xmlStrEqual@plt+0x351f0>
  40bf89:	mov    rdx,r13
  40bf8c:	mov    rsi,rbx
  40bf8f:	mov    rdi,rbp
  40bf92:	call   4089b0 <xmlStrEqual@plt+0x4a70>
  40bf97:	mov    rdi,rbx
  40bf9a:	mov    DWORD PTR [rsp+0xc],eax
  40bf9e:	call   430820 <xmlStrEqual@plt+0x2c8e0>
  40bfa3:	mov    eax,DWORD PTR [rsp+0xc]
  40bfa7:	mov    rcx,QWORD PTR [rsp+0x78]
  40bfac:	xor    rcx,QWORD PTR fs:0x28
  40bfb5:	jne    40bfd4 <xmlStrEqual@plt+0x8094>
  40bfb7:	add    rsp,0x88
  40bfbe:	pop    rbx
  40bfbf:	pop    rbp
  40bfc0:	pop    r12
  40bfc2:	pop    r13
  40bfc4:	pop    r14
  40bfc6:	pop    r15
  40bfc8:	ret    
  40bfc9:	nop    DWORD PTR [rax+0x0]
  40bfd0:	xor    eax,eax
  40bfd2:	jmp    40bfa7 <xmlStrEqual@plt+0x8067>
  40bfd4:	call   403c00 <__stack_chk_fail@plt>
  40bfd9:	nop    DWORD PTR [rax+0x0]
  40bfe0:	endbr64 
  40bfe4:	push   r15
  40bfe6:	push   r14
  40bfe8:	push   r13
  40bfea:	push   r12
  40bfec:	push   rbp
  40bfed:	push   rbx
  40bfee:	mov    rbx,rdi
  40bff1:	sub    rsp,0x18
  40bff5:	call   43b440 <xmlStrEqual@plt+0x37500>
  40bffa:	mov    rdi,rbx
  40bffd:	mov    rbp,rax
  40c000:	call   43b460 <xmlStrEqual@plt+0x37520>
  40c005:	mov    rdi,rbx
  40c008:	mov    r12,rax
  40c00b:	call   43b430 <xmlStrEqual@plt+0x374f0>
  40c010:	mov    r13,rax
  40c013:	mov    rax,QWORD PTR [rbp+0x0]
  40c017:	mov    rdi,r13
  40c01a:	mov    rax,QWORD PTR [rax+0x8]
  40c01e:	mov    rbp,QWORD PTR [rbp+0x8]
  40c022:	mov    QWORD PTR [rsp],rax
  40c026:	mov    rax,QWORD PTR [r13+0x38]
  40c02a:	mov    r14,QWORD PTR [rax+0x48]
  40c02e:	call   408950 <xmlStrEqual@plt+0x4a10>
  40c033:	mov    rdi,rax
  40c036:	call   408720 <xmlStrEqual@plt+0x47e0>
  40c03b:	mov    rdi,QWORD PTR [rbp+0x0]
  40c03f:	mov    rsi,rax
  40c042:	call   r14
  40c045:	mov    rdi,r12
  40c048:	mov    r14,rax
  40c04b:	call   435dd0 <xmlStrEqual@plt+0x31e90>
  40c050:	cmp    eax,DWORD PTR [r13+0x28]
  40c054:	jle    40c160 <xmlStrEqual@plt+0x8220>
  40c05a:	cmp    BYTE PTR [rbp+0x8],0x1
  40c05e:	jne    40c210 <xmlStrEqual@plt+0x82d0>
  40c064:	mov    BYTE PTR [rbp+0x8],0x0
  40c068:	mov    rbp,0x469e3c
  40c06f:	mov    eax,DWORD PTR [rbp+0x0]
  40c072:	test   eax,eax
  40c074:	jg     40c128 <xmlStrEqual@plt+0x81e8>
  40c07a:	mov    rdi,QWORD PTR [r13+0x30]
  40c07e:	mov    rsi,QWORD PTR [rsp]
  40c082:	call   409b10 <xmlStrEqual@plt+0x5bd0>
  40c087:	mov    r15,rax
  40c08a:	test   rax,rax
  40c08d:	je     40c220 <xmlStrEqual@plt+0x82e0>
  40c093:	mov    rdi,QWORD PTR [r13+0x40]
  40c097:	mov    rax,QWORD PTR [r13+0x38]
  40c09b:	mov    rsi,r15
  40c09e:	call   QWORD PTR [rax+0x38]
  40c0a1:	mov    rdi,r15
  40c0a4:	call   433790 <xmlStrEqual@plt+0x2f850>
  40c0a9:	mov    rsi,rax
  40c0ac:	xor    edx,edx
  40c0ae:	mov    rdi,r13
  40c0b1:	call   4089c0 <xmlStrEqual@plt+0x4a80>
  40c0b6:	mov    rax,0x475860
  40c0bd:	mov    rsi,r12
  40c0c0:	mov    rdi,QWORD PTR [rax]
  40c0c3:	xor    r15d,r15d
  40c0c6:	call   435af0 <xmlStrEqual@plt+0x31bb0>
  40c0cb:	mov    esi,DWORD PTR [r13+0x24]
  40c0cf:	mov    rdi,rbx
  40c0d2:	call   43b470 <xmlStrEqual@plt+0x37530>
  40c0d7:	cmp    DWORD PTR [rbp+0x0],0x1
  40c0db:	jle    40c111 <xmlStrEqual@plt+0x81d1>
  40c0dd:	mov    rdi,QWORD PTR [rsp]
  40c0e1:	mov    ebp,DWORD PTR [r13+0x24]
  40c0e5:	call   424d40 <xmlStrEqual@plt+0x20e00>
  40c0ea:	mov    rdi,r14
  40c0ed:	mov    rbx,rax
  40c0f0:	call   424d40 <xmlStrEqual@plt+0x20e00>
  40c0f5:	mov    rdx,rax
  40c0f8:	mov    r8d,ebp
  40c0fb:	mov    rcx,rbx
  40c0fe:	lea    rsi,[rip+0x3d673]        # 449778 <xmlStrEqual@plt+0x45838>
  40c105:	mov    edi,0x6
  40c10a:	xor    eax,eax
  40c10c:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  40c111:	add    rsp,0x18
  40c115:	pop    rbx
  40c116:	pop    rbp
  40c117:	pop    r12
  40c119:	pop    r13
  40c11b:	pop    r14
  40c11d:	mov    eax,r15d
  40c120:	pop    r15
  40c122:	ret    
  40c123:	nop    DWORD PTR [rax+rax*1+0x0]
  40c128:	mov    rdi,QWORD PTR [rsp]
  40c12c:	call   424d40 <xmlStrEqual@plt+0x20e00>
  40c131:	mov    rdi,r14
  40c134:	mov    r15,rax
  40c137:	call   424d40 <xmlStrEqual@plt+0x20e00>
  40c13c:	mov    rdx,rax
  40c13f:	mov    rcx,r15
  40c142:	lea    rsi,[rip+0x3d57f]        # 4496c8 <xmlStrEqual@plt+0x45788>
  40c149:	mov    edi,0x5
  40c14e:	xor    eax,eax
  40c150:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  40c155:	jmp    40c07a <xmlStrEqual@plt+0x813a>
  40c15a:	nop    WORD PTR [rax+rax*1+0x0]
  40c160:	xor    eax,eax
  40c162:	call   435c70 <xmlStrEqual@plt+0x31d30>
  40c167:	mov    rsi,QWORD PTR [rsp]
  40c16b:	lea    rdi,[r13+0x18]
  40c16f:	mov    rcx,rax
  40c172:	mov    rdx,rbp
  40c175:	mov    QWORD PTR [rsp+0x8],rax
  40c17a:	call   40bec0 <xmlStrEqual@plt+0x7f80>
  40c17f:	mov    r15d,eax
  40c182:	cmp    eax,0x1
  40c185:	jne    40c05a <xmlStrEqual@plt+0x811a>
  40c18b:	mov    rdi,r12
  40c18e:	call   435dd0 <xmlStrEqual@plt+0x31e90>
  40c193:	test   eax,eax
  40c195:	mov    rax,0x469e3c
  40c19c:	jle    40c248 <xmlStrEqual@plt+0x8308>
  40c1a2:	mov    ecx,DWORD PTR [rax]
  40c1a4:	test   ecx,ecx
  40c1a6:	jle    40c1e4 <xmlStrEqual@plt+0x82a4>
  40c1a8:	mov    rdi,r12
  40c1ab:	call   435dd0 <xmlStrEqual@plt+0x31e90>
  40c1b0:	mov    rdi,QWORD PTR [rsp]
  40c1b4:	mov    ebp,eax
  40c1b6:	call   424d40 <xmlStrEqual@plt+0x20e00>
  40c1bb:	mov    rdi,r14
  40c1be:	mov    QWORD PTR [rsp],rax
  40c1c2:	call   424d40 <xmlStrEqual@plt+0x20e00>
  40c1c7:	mov    rcx,QWORD PTR [rsp]
  40c1cb:	mov    rdx,rax
  40c1ce:	mov    r8d,ebp
  40c1d1:	lea    rsi,[rip+0x3d480]        # 449658 <xmlStrEqual@plt+0x45718>
  40c1d8:	mov    edi,0x5
  40c1dd:	xor    eax,eax
  40c1df:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  40c1e4:	mov    rax,0x475860
  40c1eb:	mov    rsi,QWORD PTR [rsp+0x8]
  40c1f0:	mov    rdi,QWORD PTR [rax]
  40c1f3:	mov    rdx,r12
  40c1f6:	call   4351f0 <xmlStrEqual@plt+0x312b0>
  40c1fb:	mov    esi,DWORD PTR [r13+0x2c]
  40c1ff:	mov    rdi,rbx
  40c202:	call   43b470 <xmlStrEqual@plt+0x37530>
  40c207:	jmp    40c111 <xmlStrEqual@plt+0x81d1>
  40c20c:	nop    DWORD PTR [rax+0x0]
  40c210:	mov    rbp,0x469e3c
  40c217:	jmp    40c0b6 <xmlStrEqual@plt+0x8176>
  40c21c:	nop    DWORD PTR [rax+0x0]
  40c220:	mov    rdi,QWORD PTR [rsp]
  40c224:	call   424d40 <xmlStrEqual@plt+0x20e00>
  40c229:	mov    rdx,rax
  40c22c:	lea    rsi,[rip+0x3d4fd]        # 449730 <xmlStrEqual@plt+0x457f0>
  40c233:	mov    edi,0x2
  40c238:	xor    eax,eax
  40c23a:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  40c23f:	jmp    40c111 <xmlStrEqual@plt+0x81d1>
  40c244:	nop    DWORD PTR [rax+0x0]
  40c248:	mov    edx,DWORD PTR [rax]
  40c24a:	test   edx,edx
  40c24c:	jle    40c1e4 <xmlStrEqual@plt+0x82a4>
  40c24e:	mov    rdi,QWORD PTR [rsp]
  40c252:	call   424d40 <xmlStrEqual@plt+0x20e00>
  40c257:	mov    rdi,r14
  40c25a:	mov    rbp,rax
  40c25d:	call   424d40 <xmlStrEqual@plt+0x20e00>
  40c262:	mov    rdx,rax
  40c265:	mov    rcx,rbp
  40c268:	lea    rsi,[rip+0x3d429]        # 449698 <xmlStrEqual@plt+0x45758>
  40c26f:	mov    edi,0x5
  40c274:	xor    eax,eax
  40c276:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  40c27b:	jmp    40c1e4 <xmlStrEqual@plt+0x82a4>
  40c280:	endbr64 
  40c284:	push   r12
  40c286:	xor    r8d,r8d
  40c289:	push   rbp
  40c28a:	mov    rbp,rsi
  40c28d:	mov    rcx,rbp
  40c290:	push   rbx
  40c291:	mov    ebx,edx
  40c293:	mov    rdx,0x40c830
  40c29a:	lea    rsi,[rdi-0x18]
  40c29e:	mov    edi,0x1
  40c2a3:	call   43b710 <xmlStrEqual@plt+0x377d0>
  40c2a8:	mov    rdx,rax
  40c2ab:	mov    r12,rax
  40c2ae:	mov    rax,0x475858
  40c2b5:	mov    rsi,rbp
  40c2b8:	mov    rdi,QWORD PTR [rax]
  40c2bb:	call   43b7c0 <xmlStrEqual@plt+0x37880>
  40c2c0:	mov    esi,ebx
  40c2c2:	mov    rdi,r12
  40c2c5:	call   43b470 <xmlStrEqual@plt+0x37530>
  40c2ca:	mov    rax,0x469e3c
  40c2d1:	cmp    ebx,0x3c
  40c2d4:	jle    40c2e8 <xmlStrEqual@plt+0x83a8>
  40c2d6:	mov    edx,DWORD PTR [rax]
  40c2d8:	test   edx,edx
  40c2da:	jg     40c318 <xmlStrEqual@plt+0x83d8>
  40c2dc:	pop    rbx
  40c2dd:	pop    rbp
  40c2de:	pop    r12
  40c2e0:	ret    
  40c2e1:	nop    DWORD PTR [rax+0x0]
  40c2e8:	mov    eax,DWORD PTR [rax]
  40c2ea:	test   eax,eax
  40c2ec:	jle    40c2dc <xmlStrEqual@plt+0x839c>
  40c2ee:	mov    rdi,QWORD PTR [rbp+0x8]
  40c2f2:	call   424d40 <xmlStrEqual@plt+0x20e00>
  40c2f7:	mov    ecx,ebx
  40c2f9:	pop    rbx
  40c2fa:	pop    rbp
  40c2fb:	mov    rdx,rax
  40c2fe:	lea    rsi,[rip+0x3d4fb]        # 449800 <xmlStrEqual@plt+0x458c0>
  40c305:	mov    edi,0x5
  40c30a:	xor    eax,eax
  40c30c:	pop    r12
  40c30e:	jmp    430e20 <xmlStrEqual@plt+0x2cee0>
  40c313:	nop    DWORD PTR [rax+rax*1+0x0]
  40c318:	mov    rdi,QWORD PTR [rbp+0x8]
  40c31c:	call   424d40 <xmlStrEqual@plt+0x20e00>
  40c321:	mov    rsi,rax
  40c324:	mov    edx,0x88888889
  40c329:	mov    eax,ebx
  40c32b:	imul   edx
  40c32d:	mov    edi,0x5
  40c332:	xor    eax,eax
  40c334:	lea    ecx,[rdx+rbx*1]
  40c337:	sar    ecx,0x5
  40c33a:	sar    ebx,0x1f
  40c33d:	sub    ecx,ebx
  40c33f:	pop    rbx
  40c340:	pop    rbp
  40c341:	mov    rdx,rsi
  40c344:	pop    r12
  40c346:	lea    rsi,[rip+0x3d473]        # 4497c0 <xmlStrEqual@plt+0x45880>
  40c34d:	jmp    430e20 <xmlStrEqual@plt+0x2cee0>
  40c352:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40c35d:	nop    DWORD PTR [rax]
  40c360:	endbr64 
  40c364:	push   rbp
  40c365:	mov    rbp,rdi
  40c368:	push   rbx
  40c369:	mov    rbx,rsi
  40c36c:	mov    rdi,rbx
  40c36f:	sub    rsp,0x8
  40c373:	mov    rax,0x475860
  40c37a:	mov    esi,0x1
  40c37f:	mov    rcx,QWORD PTR [rax]
  40c382:	mov    rax,0x475858
  40c389:	mov    rdx,QWORD PTR [rax]
  40c38c:	call   43ba00 <xmlStrEqual@plt+0x37ac0>
  40c391:	mov    rax,QWORD PTR [rbx+0x8]
  40c395:	mov    rsi,rbx
  40c398:	imul   edx,DWORD PTR [rax+0x30],0x3c
  40c39c:	add    rsp,0x8
  40c3a0:	pop    rbx
  40c3a1:	mov    rdi,rbp
  40c3a4:	pop    rbp
  40c3a5:	jmp    40c280 <xmlStrEqual@plt+0x8340>
  40c3aa:	nop    WORD PTR [rax+rax*1+0x0]
  40c3b0:	endbr64 
  40c3b4:	push   rbp
  40c3b5:	mov    rbp,rdi
  40c3b8:	mov    edi,0x10
  40c3bd:	push   rbx
  40c3be:	mov    rbx,rsi
  40c3c1:	sub    rsp,0x8
  40c3c5:	call   435000 <xmlStrEqual@plt+0x310c0>
  40c3ca:	mov    QWORD PTR [rax],rbp
  40c3cd:	mov    QWORD PTR [rax+0x8],rbx
  40c3d1:	add    rsp,0x8
  40c3d5:	pop    rbx
  40c3d6:	pop    rbp
  40c3d7:	ret    
  40c3d8:	nop    DWORD PTR [rax+rax*1+0x0]
  40c3e0:	endbr64 
  40c3e4:	cmp    BYTE PTR [rdx+0xa],0x0
  40c3e8:	je     40c470 <xmlStrEqual@plt+0x8530>
  40c3ee:	cmp    BYTE PTR [rdx+0xb],0xff
  40c3f2:	je     40c470 <xmlStrEqual@plt+0x8530>
  40c3f4:	push   r13
  40c3f6:	mov    r13,rsi
  40c3f9:	mov    rsi,rdx
  40c3fc:	push   r12
  40c3fe:	mov    r12d,ecx
  40c401:	push   rbp
  40c402:	mov    rbp,rdx
  40c405:	push   rbx
  40c406:	mov    rbx,rdi
  40c409:	mov    rdi,r13
  40c40c:	sub    rsp,0x8
  40c410:	call   40c3b0 <xmlStrEqual@plt+0x8470>
  40c415:	mov    r8,0x40bdb0
  40c41c:	mov    rdx,0x40bfe0
  40c423:	lea    rsi,[rbx-0x18]
  40c427:	mov    rcx,rax
  40c42a:	mov    edi,0x5
  40c42f:	call   43b760 <xmlStrEqual@plt+0x37820>
  40c434:	mov    rdx,rax
  40c437:	mov    rbx,rax
  40c43a:	mov    rax,0x475858
  40c441:	mov    rsi,r13
  40c444:	mov    rdi,QWORD PTR [rax]
  40c447:	call   43b7c0 <xmlStrEqual@plt+0x37880>
  40c44c:	mov    esi,r12d
  40c44f:	mov    rdi,rbx
  40c452:	call   43b470 <xmlStrEqual@plt+0x37530>
  40c457:	mov    rax,0x469e3c
  40c45e:	cmp    DWORD PTR [rax],0x1
  40c461:	jg     40c478 <xmlStrEqual@plt+0x8538>
  40c463:	add    rsp,0x8
  40c467:	pop    rbx
  40c468:	pop    rbp
  40c469:	pop    r12
  40c46b:	pop    r13
  40c46d:	ret    
  40c46e:	xchg   ax,ax
  40c470:	ret    
  40c471:	nop    DWORD PTR [rax+0x0]
  40c478:	mov    rdi,QWORD PTR [rbp+0x0]
  40c47c:	call   424d40 <xmlStrEqual@plt+0x20e00>
  40c481:	mov    rdi,QWORD PTR [r13+0x8]
  40c485:	mov    rbx,rax
  40c488:	call   424d40 <xmlStrEqual@plt+0x20e00>
  40c48d:	add    rsp,0x8
  40c491:	mov    rcx,rbx
  40c494:	pop    rbx
  40c495:	pop    rbp
  40c496:	mov    r8d,r12d
  40c499:	pop    r12
  40c49b:	mov    rdx,rax
  40c49e:	lea    rsi,[rip+0x3d39b]        # 449840 <xmlStrEqual@plt+0x45900>
  40c4a5:	mov    edi,0x6
  40c4aa:	xor    eax,eax
  40c4ac:	pop    r13
  40c4ae:	jmp    430e20 <xmlStrEqual@plt+0x2cee0>
  40c4b3:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40c4be:	xchg   ax,ax
  40c4c0:	endbr64 
  40c4c4:	mov    ecx,DWORD PTR [rdi+0xc]
  40c4c7:	test   ecx,ecx
  40c4c9:	jne    40c4d0 <xmlStrEqual@plt+0x8590>
  40c4cb:	ret    
  40c4cc:	nop    DWORD PTR [rax+0x0]
  40c4d0:	push   r15
  40c4d2:	push   r14
  40c4d4:	push   r13
  40c4d6:	mov    r13,rsi
  40c4d9:	mov    esi,0x5
  40c4de:	push   r12
  40c4e0:	push   rbp
  40c4e1:	mov    rbp,rdi
  40c4e4:	mov    rdi,r13
  40c4e7:	push   rbx
  40c4e8:	sub    rsp,0x8
  40c4ec:	mov    rax,0x475860
  40c4f3:	mov    rcx,QWORD PTR [rax]
  40c4f6:	mov    rax,0x475858
  40c4fd:	mov    rdx,QWORD PTR [rax]
  40c500:	call   43ba00 <xmlStrEqual@plt+0x37ac0>
  40c505:	mov    r14,QWORD PTR [r13+0x8]
  40c509:	mov    rax,QWORD PTR [r14+0x28]
  40c50d:	mov    r12,QWORD PTR [rax+0x8]
  40c511:	cmp    rax,r12
  40c514:	jne    40c52b <xmlStrEqual@plt+0x85eb>
  40c516:	jmp    40c57e <xmlStrEqual@plt+0x863e>
  40c518:	nop    DWORD PTR [rax+rax*1+0x0]
  40c520:	mov    r12,QWORD PTR [r12+0x8]
  40c525:	cmp    r12,QWORD PTR [r14+0x28]
  40c529:	je     40c57e <xmlStrEqual@plt+0x863e>
  40c52b:	mov    r15,QWORD PTR [r12+0x10]
  40c530:	mov    edx,DWORD PTR [r15+0x18]
  40c534:	test   edx,edx
  40c536:	je     40c520 <xmlStrEqual@plt+0x85e0>
  40c538:	mov    rbx,QWORD PTR [r15+0x8]
  40c53c:	mov    rdx,QWORD PTR [rbx+0x10]
  40c540:	mov    rax,QWORD PTR [rdx]
  40c543:	mov    eax,DWORD PTR [rax+0x18]
  40c546:	test   eax,eax
  40c548:	je     40c520 <xmlStrEqual@plt+0x85e0>
  40c54a:	cmp    r15,rbx
  40c54d:	jne    40c55c <xmlStrEqual@plt+0x861c>
  40c54f:	jmp    40c520 <xmlStrEqual@plt+0x85e0>
  40c551:	nop    DWORD PTR [rax+0x0]
  40c558:	mov    rdx,QWORD PTR [rbx+0x10]
  40c55c:	mov    ecx,DWORD PTR [rbp+0xc]
  40c55f:	mov    rsi,r13
  40c562:	mov    rdi,rbp
  40c565:	call   40c3e0 <xmlStrEqual@plt+0x84a0>
  40c56a:	mov    rbx,QWORD PTR [rbx+0x8]
  40c56e:	cmp    r15,rbx
  40c571:	jne    40c558 <xmlStrEqual@plt+0x8618>
  40c573:	mov    r12,QWORD PTR [r12+0x8]
  40c578:	cmp    r12,QWORD PTR [r14+0x28]
  40c57c:	jne    40c52b <xmlStrEqual@plt+0x85eb>
  40c57e:	add    rsp,0x8
  40c582:	pop    rbx
  40c583:	pop    rbp
  40c584:	pop    r12
  40c586:	pop    r13
  40c588:	pop    r14
  40c58a:	pop    r15
  40c58c:	ret    
  40c58d:	nop    DWORD PTR [rax]
  40c590:	endbr64 
  40c594:	push   r15
  40c596:	push   r14
  40c598:	mov    r14,rdx
  40c59b:	push   r13
  40c59d:	push   r12
  40c59f:	mov    r12,rsi
  40c5a2:	push   rbp
  40c5a3:	mov    rbp,rdi
  40c5a6:	push   rbx
  40c5a7:	sub    rsp,0x8
  40c5ab:	mov    r13,QWORD PTR [rsi+0x8]
  40c5af:	mov    rsi,rdx
  40c5b2:	mov    rdi,r13
  40c5b5:	call   42b790 <xmlStrEqual@plt+0x27850>
  40c5ba:	test   rax,rax
  40c5bd:	je     40c672 <xmlStrEqual@plt+0x8732>
  40c5c3:	mov    r14,0x469e3c
  40c5ca:	mov    rbx,rax
  40c5cd:	mov    edx,DWORD PTR [r14]
  40c5d0:	test   edx,edx
  40c5d2:	jle    40c600 <xmlStrEqual@plt+0x86c0>
  40c5d4:	mov    rdi,r13
  40c5d7:	call   424d40 <xmlStrEqual@plt+0x20e00>
  40c5dc:	mov    rdi,QWORD PTR [rbx]
  40c5df:	mov    r15,rax
  40c5e2:	call   424d40 <xmlStrEqual@plt+0x20e00>
  40c5e7:	mov    rdx,rax
  40c5ea:	mov    rcx,r15
  40c5ed:	lea    rsi,[rip+0x3d2bc]        # 4498b0 <xmlStrEqual@plt+0x45970>
  40c5f4:	mov    edi,0x5
  40c5f9:	xor    eax,eax
  40c5fb:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  40c600:	cmp    BYTE PTR [rbx+0x8],0x0
  40c604:	jne    40c64b <xmlStrEqual@plt+0x870b>
  40c606:	mov    eax,DWORD PTR [r14]
  40c609:	mov    BYTE PTR [rbx+0x8],0x1
  40c60d:	test   eax,eax
  40c60f:	jle    40c62f <xmlStrEqual@plt+0x86ef>
  40c611:	mov    rdi,QWORD PTR [rbx]
  40c614:	call   424d40 <xmlStrEqual@plt+0x20e00>
  40c619:	mov    rdx,rax
  40c61c:	lea    rsi,[rip+0x3d2c5]        # 4498e8 <xmlStrEqual@plt+0x459a8>
  40c623:	mov    edi,0x5
  40c628:	xor    eax,eax
  40c62a:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  40c62f:	mov    rdi,QWORD PTR [rbp+0x28]
  40c633:	mov    rax,QWORD PTR [rbp+0x20]
  40c637:	mov    rsi,r12
  40c63a:	call   QWORD PTR [rax+0x38]
  40c63d:	lea    rdi,[rbp-0x18]
  40c641:	xor    edx,edx
  40c643:	mov    rsi,r13
  40c646:	call   4089c0 <xmlStrEqual@plt+0x4a80>
  40c64b:	mov    ecx,DWORD PTR [rbp+0xc]
  40c64e:	mov    rdx,rbx
  40c651:	mov    rsi,r12
  40c654:	mov    rdi,rbp
  40c657:	call   40c3e0 <xmlStrEqual@plt+0x84a0>
  40c65c:	mov    ebx,0x1
  40c661:	add    rsp,0x8
  40c665:	mov    eax,ebx
  40c667:	pop    rbx
  40c668:	pop    rbp
  40c669:	pop    r12
  40c66b:	pop    r13
  40c66d:	pop    r14
  40c66f:	pop    r15
  40c671:	ret    
  40c672:	mov    rax,0x469e3c
  40c679:	mov    ebx,0xfffffffa
  40c67e:	cmp    DWORD PTR [rax],0x1
  40c681:	jle    40c661 <xmlStrEqual@plt+0x8721>
  40c683:	mov    rdi,r13
  40c686:	call   424d40 <xmlStrEqual@plt+0x20e00>
  40c68b:	mov    rdi,r14
  40c68e:	mov    rbp,rax
  40c691:	call   424d40 <xmlStrEqual@plt+0x20e00>
  40c696:	mov    rdx,rax
  40c699:	mov    rcx,rbp
  40c69c:	lea    rsi,[rip+0x3d1d5]        # 449878 <xmlStrEqual@plt+0x45938>
  40c6a3:	mov    edi,0x6
  40c6a8:	xor    eax,eax
  40c6aa:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  40c6af:	jmp    40c661 <xmlStrEqual@plt+0x8721>
  40c6b1:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40c6bc:	nop    DWORD PTR [rax+0x0]
  40c6c0:	endbr64 
  40c6c4:	push   r12
  40c6c6:	mov    r12,rdi
  40c6c9:	mov    edi,0x10
  40c6ce:	push   rbp
  40c6cf:	mov    rbp,rsi
  40c6d2:	push   rbx
  40c6d3:	call   435000 <xmlStrEqual@plt+0x310c0>
  40c6d8:	mov    QWORD PTR [rax],r12
  40c6db:	mov    rdi,rbp
  40c6de:	mov    rbx,rax
  40c6e1:	call   425060 <xmlStrEqual@plt+0x21120>
  40c6e6:	mov    QWORD PTR [rbx+0x8],rax
  40c6ea:	mov    rax,rbx
  40c6ed:	pop    rbx
  40c6ee:	pop    rbp
  40c6ef:	pop    r12
  40c6f1:	ret    
  40c6f2:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40c6fd:	nop    DWORD PTR [rax]
  40c700:	endbr64 
  40c704:	push   r14
  40c706:	xor    eax,eax
  40c708:	mov    r14d,ecx
  40c70b:	push   r13
  40c70d:	mov    r13d,edx
  40c710:	push   r12
  40c712:	mov    r12,rsi
  40c715:	push   rbp
  40c716:	mov    rbp,rdi
  40c719:	push   rbx
  40c71a:	call   433650 <xmlStrEqual@plt+0x2f710>
  40c71f:	mov    rbx,rax
  40c722:	test   rax,rax
  40c725:	je     40c766 <xmlStrEqual@plt+0x8826>
  40c727:	mov    rsi,r12
  40c72a:	mov    rdi,rax
  40c72d:	cmp    r13d,0x1
  40c731:	je     40c778 <xmlStrEqual@plt+0x8838>
  40c733:	call   433690 <xmlStrEqual@plt+0x2f750>
  40c738:	mov    rdi,QWORD PTR [rbp+0x28]
  40c73c:	mov    rax,QWORD PTR [rbp+0x20]
  40c740:	mov    rsi,rbx
  40c743:	call   QWORD PTR [rax+0x20]
  40c746:	cmp    eax,0x1
  40c749:	jne    40c780 <xmlStrEqual@plt+0x8840>
  40c74b:	mov    rdi,QWORD PTR [rbp+0x18]
  40c74f:	mov    rdx,rbx
  40c752:	mov    rsi,r12
  40c755:	call   409aa0 <xmlStrEqual@plt+0x5b60>
  40c75a:	cmp    eax,0x1
  40c75d:	jne    40c7b8 <xmlStrEqual@plt+0x8878>
  40c75f:	test   r14b,r14b
  40c762:	setne  BYTE PTR [rbx+0x10]
  40c766:	mov    rax,rbx
  40c769:	pop    rbx
  40c76a:	pop    rbp
  40c76b:	pop    r12
  40c76d:	pop    r13
  40c76f:	pop    r14
  40c771:	ret    
  40c772:	nop    WORD PTR [rax+rax*1+0x0]
  40c778:	call   433680 <xmlStrEqual@plt+0x2f740>
  40c77d:	jmp    40c738 <xmlStrEqual@plt+0x87f8>
  40c77f:	nop
  40c780:	mov    rdi,r12
  40c783:	call   424d40 <xmlStrEqual@plt+0x20e00>
  40c788:	mov    rdx,rax
  40c78b:	lea    rsi,[rip+0x3d176]        # 449908 <xmlStrEqual@plt+0x459c8>
  40c792:	mov    edi,0x3
  40c797:	xor    eax,eax
  40c799:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  40c79e:	mov    rdi,rbx
  40c7a1:	xor    ebx,ebx
  40c7a3:	call   4336a0 <xmlStrEqual@plt+0x2f760>
  40c7a8:	mov    rax,rbx
  40c7ab:	pop    rbx
  40c7ac:	pop    rbp
  40c7ad:	pop    r12
  40c7af:	pop    r13
  40c7b1:	pop    r14
  40c7b3:	ret    
  40c7b4:	nop    DWORD PTR [rax+0x0]
  40c7b8:	mov    rax,0x469e3c
  40c7bf:	mov    eax,DWORD PTR [rax]
  40c7c1:	test   eax,eax
  40c7c3:	jle    40c79e <xmlStrEqual@plt+0x885e>
  40c7c5:	mov    rdi,r12
  40c7c8:	call   424d40 <xmlStrEqual@plt+0x20e00>
  40c7cd:	mov    rdx,rax
  40c7d0:	lea    rsi,[rip+0x3d191]        # 449968 <xmlStrEqual@plt+0x45a28>
  40c7d7:	mov    edi,0x5
  40c7dc:	jmp    40c797 <xmlStrEqual@plt+0x8857>
  40c7de:	xchg   ax,ax
  40c7e0:	endbr64 
  40c7e4:	push   rbp
  40c7e5:	xor    edx,edx
  40c7e7:	push   rbx
  40c7e8:	mov    rbx,rdi
  40c7eb:	lea    rdi,[rdi-0x18]
  40c7ef:	sub    rsp,0x8
  40c7f3:	mov    rbp,QWORD PTR [rsi+0x8]
  40c7f7:	mov    rsi,rbp
  40c7fa:	call   4089c0 <xmlStrEqual@plt+0x4a80>
  40c7ff:	mov    rdi,QWORD PTR [rbx+0x18]
  40c803:	mov    rsi,rbp
  40c806:	call   409ab0 <xmlStrEqual@plt+0x5b70>
  40c80b:	mov    rdi,rax
  40c80e:	call   4336a0 <xmlStrEqual@plt+0x2f760>
  40c813:	mov    rdi,QWORD PTR [rbx+0x18]
  40c817:	mov    esi,0x7
  40c81c:	call   409bb0 <xmlStrEqual@plt+0x5c70>
  40c821:	add    rsp,0x8
  40c825:	pop    rbx
  40c826:	mov    eax,0x1
  40c82b:	pop    rbp
  40c82c:	ret    
  40c82d:	nop    DWORD PTR [rax]
  40c830:	endbr64 
  40c834:	push   r12
  40c836:	push   rbp
  40c837:	push   rbx
  40c838:	mov    rbx,rdi
  40c83b:	call   43b440 <xmlStrEqual@plt+0x37500>
  40c840:	mov    rdi,rbx
  40c843:	mov    rbp,rax
  40c846:	mov    r12,QWORD PTR [rax+0x8]
  40c84a:	call   43b430 <xmlStrEqual@plt+0x374f0>
  40c84f:	mov    rbx,rax
  40c852:	mov    rax,0x469e3c
  40c859:	mov    eax,DWORD PTR [rax]
  40c85b:	test   eax,eax
  40c85d:	jle    40c87d <xmlStrEqual@plt+0x893d>
  40c85f:	mov    rdi,r12
  40c862:	call   424d40 <xmlStrEqual@plt+0x20e00>
  40c867:	mov    rdx,rax
  40c86a:	lea    rsi,[rip+0x3c3c0]        # 448c31 <xmlStrEqual@plt+0x44cf1>
  40c871:	mov    edi,0x5
  40c876:	xor    eax,eax
  40c878:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  40c87d:	lea    rdi,[rbx+0x18]
  40c881:	mov    rsi,rbp
  40c884:	call   40c7e0 <xmlStrEqual@plt+0x88a0>
  40c889:	pop    rbx
  40c88a:	pop    rbp
  40c88b:	mov    eax,0x1
  40c890:	pop    r12
  40c892:	ret    
  40c893:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40c89e:	xchg   ax,ax
  40c8a0:	endbr64 
  40c8a4:	push   r12
  40c8a6:	mov    r12,rsi
  40c8a9:	push   rbp
  40c8aa:	mov    rbp,rdi
  40c8ad:	push   rbx
  40c8ae:	mov    rdi,QWORD PTR [rdi+0x18]
  40c8b2:	call   409b10 <xmlStrEqual@plt+0x5bd0>
  40c8b7:	test   rax,rax
  40c8ba:	mov    rbx,rax
  40c8bd:	mov    rax,0x469e3c
  40c8c4:	je     40c918 <xmlStrEqual@plt+0x89d8>
  40c8c6:	cmp    DWORD PTR [rax],0x1
  40c8c9:	jle    40c8e9 <xmlStrEqual@plt+0x89a9>
  40c8cb:	mov    rdi,r12
  40c8ce:	call   424d40 <xmlStrEqual@plt+0x20e00>
  40c8d3:	mov    rdx,rax
  40c8d6:	lea    rsi,[rip+0x3d0e3]        # 4499c0 <xmlStrEqual@plt+0x45a80>
  40c8dd:	mov    edi,0x6
  40c8e2:	xor    eax,eax
  40c8e4:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  40c8e9:	mov    rdi,QWORD PTR [rbx+0x8]
  40c8ed:	mov    rsi,QWORD PTR [r12+0x28]
  40c8f2:	call   42b490 <xmlStrEqual@plt+0x27550>
  40c8f7:	mov    rdi,QWORD PTR [rbp+0x28]
  40c8fb:	mov    rax,QWORD PTR [rbp+0x20]
  40c8ff:	mov    rsi,rbx
  40c902:	call   QWORD PTR [rax+0x38]
  40c905:	mov    ebx,0x1
  40c90a:	mov    eax,ebx
  40c90c:	pop    rbx
  40c90d:	pop    rbp
  40c90e:	pop    r12
  40c910:	ret    
  40c911:	nop    DWORD PTR [rax+0x0]
  40c918:	cmp    DWORD PTR [rax],0x1
  40c91b:	jle    40c90a <xmlStrEqual@plt+0x89ca>
  40c91d:	mov    rdi,r12
  40c920:	call   424d40 <xmlStrEqual@plt+0x20e00>
  40c925:	mov    rdx,rax
  40c928:	lea    rsi,[rip+0x3d631]        # 449f60 <xmlStrEqual@plt+0x46020>
  40c92f:	mov    edi,0x6
  40c934:	xor    eax,eax
  40c936:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  40c93b:	jmp    40c90a <xmlStrEqual@plt+0x89ca>
  40c93d:	nop    DWORD PTR [rax]
  40c940:	endbr64 
  40c944:	push   rbp
  40c945:	mov    rbp,rdi
  40c948:	push   rbx
  40c949:	mov    rbx,rsi
  40c94c:	sub    rsp,0x8
  40c950:	cmp    BYTE PTR [rsi],0x1
  40c953:	je     40c970 <xmlStrEqual@plt+0x8a30>
  40c955:	add    rsp,0x8
  40c959:	mov    rsi,rbx
  40c95c:	pop    rbx
  40c95d:	mov    rdi,rbp
  40c960:	pop    rbp
  40c961:	jmp    40c4c0 <xmlStrEqual@plt+0x8580>
  40c966:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40c970:	call   40c360 <xmlStrEqual@plt+0x8420>
  40c975:	jmp    40c955 <xmlStrEqual@plt+0x8a15>
  40c977:	nop    WORD PTR [rax+rax*1+0x0]
  40c980:	endbr64 
  40c984:	push   r15
  40c986:	push   r14
  40c988:	push   r13
  40c98a:	push   r12
  40c98c:	mov    r12,rdi
  40c98f:	push   rbp
  40c990:	mov    rbp,rdx
  40c993:	push   rbx
  40c994:	sub    rsp,0x88
  40c99b:	vmovdqu xmm0,XMMWORD PTR [rsi]
  40c99f:	vmovdqu xmm1,XMMWORD PTR [rsi+0x10]
  40c9a4:	vmovdqu xmm2,XMMWORD PTR [rsi+0x20]
  40c9a9:	vmovdqu xmm3,XMMWORD PTR [rsi+0x30]
  40c9ae:	lea    r13,[rsp+0x30]
  40c9b3:	mov    rdi,r13
  40c9b6:	mov    rax,QWORD PTR fs:0x28
  40c9bf:	mov    QWORD PTR [rsp+0x78],rax
  40c9c4:	xor    eax,eax
  40c9c6:	vmovaps XMMWORD PTR [rsp+0x30],xmm0
  40c9cc:	vmovaps XMMWORD PTR [rsp+0x40],xmm1
  40c9d2:	vmovaps XMMWORD PTR [rsp+0x50],xmm2
  40c9d8:	vmovaps XMMWORD PTR [rsp+0x60],xmm3
  40c9de:	call   4235e0 <xmlStrEqual@plt+0x1f6a0>
  40c9e3:	mov    rbx,rax
  40c9e6:	mov    rsi,QWORD PTR [rax+0x4]
  40c9ea:	mov    rax,0x475860
  40c9f1:	mov    rdi,QWORD PTR [rax]
  40c9f4:	call   435a40 <xmlStrEqual@plt+0x31b00>
  40c9f9:	test   rax,rax
  40c9fc:	je     40cc40 <xmlStrEqual@plt+0x8d00>
  40ca02:	mov    rdi,rax
  40ca05:	call   435ca0 <xmlStrEqual@plt+0x31d60>
  40ca0a:	mov    QWORD PTR [rsp+0x10],rax
  40ca0f:	test   BYTE PTR [rbx],0x8
  40ca12:	je     40cae0 <xmlStrEqual@plt+0x8ba0>
  40ca18:	cmp    BYTE PTR [rbx+0x3],0x1
  40ca1c:	jbe    40ca2f <xmlStrEqual@plt+0x8aef>
  40ca1e:	mov    rax,0x469e3c
  40ca25:	mov    edx,DWORD PTR [rax]
  40ca27:	test   edx,edx
  40ca29:	jg     40cc70 <xmlStrEqual@plt+0x8d30>
  40ca2f:	xor    eax,eax
  40ca31:	call   42aff0 <xmlStrEqual@plt+0x270b0>
  40ca36:	mov    rsi,rax
  40ca39:	lea    rdx,[rsp+0x28]
  40ca3e:	mov    rdi,r13
  40ca41:	mov    rbx,rax
  40ca44:	call   423280 <xmlStrEqual@plt+0x1f340>
  40ca49:	cmp    eax,0x1
  40ca4c:	jne    40cc00 <xmlStrEqual@plt+0x8cc0>
  40ca52:	mov    rdi,rbx
  40ca55:	call   42bc30 <xmlStrEqual@plt+0x27cf0>
  40ca5a:	mov    r14d,eax
  40ca5d:	test   eax,eax
  40ca5f:	jne    40cbe0 <xmlStrEqual@plt+0x8ca0>
  40ca65:	mov    rax,QWORD PTR [rsp+0x28]
  40ca6a:	lea    r13,[rbp+0x20]
  40ca6e:	test   rax,rax
  40ca71:	je     40ca76 <xmlStrEqual@plt+0x8b36>
  40ca73:	mov    r13,QWORD PTR [rax]
  40ca76:	mov    rdi,QWORD PTR [r12+0x18]
  40ca7b:	mov    rsi,rbx
  40ca7e:	call   409b10 <xmlStrEqual@plt+0x5bd0>
  40ca83:	mov    rbp,rax
  40ca86:	test   rax,rax
  40ca89:	je     40cd60 <xmlStrEqual@plt+0x8e20>
  40ca8f:	mov    rdi,r12
  40ca92:	mov    rdx,r13
  40ca95:	mov    rsi,rax
  40ca98:	call   40c590 <xmlStrEqual@plt+0x8650>
  40ca9d:	mov    rdi,rbx
  40caa0:	call   42b110 <xmlStrEqual@plt+0x271d0>
  40caa5:	mov    rsi,QWORD PTR [rsp+0x10]
  40caaa:	test   rsi,rsi
  40caad:	je     40cacb <xmlStrEqual@plt+0x8b8b>
  40caaf:	mov    rax,0x475860
  40cab6:	mov    rdi,rbp
  40cab9:	mov    rcx,QWORD PTR [rax]
  40cabc:	mov    rax,0x475858
  40cac3:	mov    rdx,QWORD PTR [rax]
  40cac6:	call   43bab0 <xmlStrEqual@plt+0x37b70>
  40cacb:	mov    r14d,0x1
  40cad1:	jmp    40cc15 <xmlStrEqual@plt+0x8cd5>
  40cad6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40cae0:	mov    rdi,rax
  40cae3:	call   43b440 <xmlStrEqual@plt+0x37500>
  40cae8:	mov    rbp,QWORD PTR [rax]
  40caeb:	movzx  r15d,BYTE PTR [rbp+0x10]
  40caf0:	test   r15d,r15d
  40caf3:	je     40cc90 <xmlStrEqual@plt+0x8d50>
  40caf9:	cmp    BYTE PTR [rbx+0x3],0x1
  40cafd:	mov    DWORD PTR [rsp+0xc],0x1
  40cb05:	jbe    40cb1a <xmlStrEqual@plt+0x8bda>
  40cb07:	lea    rsi,[rip+0x3cf2a]        # 449a38 <xmlStrEqual@plt+0x45af8>
  40cb0e:	mov    edi,0x4
  40cb13:	xor    eax,eax
  40cb15:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  40cb1a:	lea    rax,[rsp+0x28]
  40cb1f:	mov    QWORD PTR [rsp],rax
  40cb23:	lea    rax,[r12-0x18]
  40cb28:	xor    r14d,r14d
  40cb2b:	mov    QWORD PTR [rsp+0x18],rax
  40cb30:	jmp    40cb86 <xmlStrEqual@plt+0x8c46>
  40cb32:	nop    WORD PTR [rax+rax*1+0x0]
  40cb38:	mov    rdi,QWORD PTR [r12+0x18]
  40cb3d:	mov    rsi,rbx
  40cb40:	call   409b10 <xmlStrEqual@plt+0x5bd0>
  40cb45:	mov    rbp,rax
  40cb48:	test   rax,rax
  40cb4b:	je     40ccc0 <xmlStrEqual@plt+0x8d80>
  40cb51:	mov    rax,0x469e3c
  40cb58:	cmp    DWORD PTR [rax],0x1
  40cb5b:	jle    40cb70 <xmlStrEqual@plt+0x8c30>
  40cb5d:	lea    rsi,[rip+0x3cf84]        # 449ae8 <xmlStrEqual@plt+0x45ba8>
  40cb64:	mov    edi,0x6
  40cb69:	xor    eax,eax
  40cb6b:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  40cb70:	mov    rdi,rbx
  40cb73:	call   42b110 <xmlStrEqual@plt+0x271d0>
  40cb78:	inc    r14d
  40cb7b:	cmp    r14d,DWORD PTR [rsp+0xc]
  40cb80:	jge    40caa5 <xmlStrEqual@plt+0x8b65>
  40cb86:	xor    eax,eax
  40cb88:	call   42aff0 <xmlStrEqual@plt+0x270b0>
  40cb8d:	mov    rdx,QWORD PTR [rsp]
  40cb91:	mov    rsi,rax
  40cb94:	mov    rdi,r13
  40cb97:	mov    rbx,rax
  40cb9a:	call   423280 <xmlStrEqual@plt+0x1f340>
  40cb9f:	cmp    eax,0x1
  40cba2:	jne    40cc00 <xmlStrEqual@plt+0x8cc0>
  40cba4:	mov    rdi,rbx
  40cba7:	call   42bc30 <xmlStrEqual@plt+0x27cf0>
  40cbac:	test   eax,eax
  40cbae:	jne    40cbe0 <xmlStrEqual@plt+0x8ca0>
  40cbb0:	test   r15d,r15d
  40cbb3:	je     40cb38 <xmlStrEqual@plt+0x8bf8>
  40cbb5:	mov    rsi,rbx
  40cbb8:	mov    rdi,r12
  40cbbb:	call   40c8a0 <xmlStrEqual@plt+0x8960>
  40cbc0:	cmp    eax,0x1
  40cbc3:	je     40cd20 <xmlStrEqual@plt+0x8de0>
  40cbc9:	mov    rdi,QWORD PTR [r12+0x18]
  40cbce:	mov    esi,0x7
  40cbd3:	call   409bb0 <xmlStrEqual@plt+0x5c70>
  40cbd8:	jmp    40cb78 <xmlStrEqual@plt+0x8c38>
  40cbda:	nop    WORD PTR [rax+rax*1+0x0]
  40cbe0:	mov    rax,0x469e3c
  40cbe7:	mov    eax,DWORD PTR [rax]
  40cbe9:	test   eax,eax
  40cbeb:	jle    40cc00 <xmlStrEqual@plt+0x8cc0>
  40cbed:	lea    rsi,[rip+0x3ce94]        # 449a88 <xmlStrEqual@plt+0x45b48>
  40cbf4:	mov    edi,0x5
  40cbf9:	xor    eax,eax
  40cbfb:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  40cc00:	mov    rdi,QWORD PTR [rsp+0x28]
  40cc05:	xor    r14d,r14d
  40cc08:	call   42a7f0 <xmlStrEqual@plt+0x268b0>
  40cc0d:	mov    rdi,rbx
  40cc10:	call   42b110 <xmlStrEqual@plt+0x271d0>
  40cc15:	mov    rcx,QWORD PTR [rsp+0x78]
  40cc1a:	xor    rcx,QWORD PTR fs:0x28
  40cc23:	mov    eax,r14d
  40cc26:	jne    40cdab <xmlStrEqual@plt+0x8e6b>
  40cc2c:	add    rsp,0x88
  40cc33:	pop    rbx
  40cc34:	pop    rbp
  40cc35:	pop    r12
  40cc37:	pop    r13
  40cc39:	pop    r14
  40cc3b:	pop    r15
  40cc3d:	ret    
  40cc3e:	xchg   ax,ax
  40cc40:	mov    rax,0x469e3c
  40cc47:	cmp    DWORD PTR [rax],0x1
  40cc4a:	jle    40cc6b <xmlStrEqual@plt+0x8d2b>
  40cc4c:	mov    rdi,QWORD PTR [rbx+0x4]
  40cc50:	call   435170 <xmlStrEqual@plt+0x31230>
  40cc55:	mov    rdx,rax
  40cc58:	lea    rsi,[rip+0x3cd91]        # 4499f0 <xmlStrEqual@plt+0x45ab0>
  40cc5f:	mov    edi,0x6
  40cc64:	xor    eax,eax
  40cc66:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  40cc6b:	xor    r14d,r14d
  40cc6e:	jmp    40cc15 <xmlStrEqual@plt+0x8cd5>
  40cc70:	lea    rsi,[rip+0x3cf41]        # 449bb8 <xmlStrEqual@plt+0x45c78>
  40cc77:	mov    edi,0x5
  40cc7c:	xor    eax,eax
  40cc7e:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  40cc83:	jmp    40ca2f <xmlStrEqual@plt+0x8aef>
  40cc88:	nop    DWORD PTR [rax+rax*1+0x0]
  40cc90:	movzx  eax,BYTE PTR [rbx+0x3]
  40cc94:	mov    rsi,rbp
  40cc97:	mov    ebx,eax
  40cc99:	mov    rdi,r12
  40cc9c:	mov    DWORD PTR [rsp+0xc],eax
  40cca0:	call   40c7e0 <xmlStrEqual@plt+0x88a0>
  40cca5:	mov    QWORD PTR [rsp+0x10],0x0
  40ccae:	test   ebx,ebx
  40ccb0:	jne    40cb1a <xmlStrEqual@plt+0x8bda>
  40ccb6:	jmp    40cacb <xmlStrEqual@plt+0x8b8b>
  40ccbb:	nop    DWORD PTR [rax+rax*1+0x0]
  40ccc0:	mov    ecx,0x1
  40ccc5:	mov    edx,0x1
  40ccca:	mov    rsi,rbx
  40cccd:	mov    rdi,r12
  40ccd0:	call   40c700 <xmlStrEqual@plt+0x87c0>
  40ccd5:	mov    rbp,rax
  40ccd8:	test   rax,rax
  40ccdb:	je     40cd90 <xmlStrEqual@plt+0x8e50>
  40cce1:	mov    rsi,rax
  40cce4:	mov    rdi,r12
  40cce7:	call   40c940 <xmlStrEqual@plt+0x8a00>
  40ccec:	mov    rax,0x469e3c
  40ccf3:	mov    ecx,DWORD PTR [rax]
  40ccf5:	test   ecx,ecx
  40ccf7:	jle    40cbc9 <xmlStrEqual@plt+0x8c89>
  40ccfd:	mov    rdi,rbx
  40cd00:	call   424d40 <xmlStrEqual@plt+0x20e00>
  40cd05:	mov    rdx,rax
  40cd08:	lea    rsi,[rip+0x3ce29]        # 449b38 <xmlStrEqual@plt+0x45bf8>
  40cd0f:	mov    edi,0x5
  40cd14:	xor    eax,eax
  40cd16:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  40cd1b:	jmp    40cbc9 <xmlStrEqual@plt+0x8c89>
  40cd20:	mov    rdi,QWORD PTR [r12+0x18]
  40cd25:	mov    rsi,rbx
  40cd28:	call   409b10 <xmlStrEqual@plt+0x5bd0>
  40cd2d:	mov    rsi,rax
  40cd30:	mov    rdi,r12
  40cd33:	mov    rbp,rax
  40cd36:	call   40c940 <xmlStrEqual@plt+0x8a00>
  40cd3b:	mov    rdi,QWORD PTR [rsp+0x18]
  40cd40:	xor    edx,edx
  40cd42:	mov    rsi,rbx
  40cd45:	call   4089c0 <xmlStrEqual@plt+0x4a80>
  40cd4a:	mov    rdi,rbx
  40cd4d:	call   42b110 <xmlStrEqual@plt+0x271d0>
  40cd52:	jmp    40cbc9 <xmlStrEqual@plt+0x8c89>
  40cd57:	nop    WORD PTR [rax+rax*1+0x0]
  40cd60:	mov    rax,0x469e3c
  40cd67:	cmp    DWORD PTR [rax],0x1
  40cd6a:	jle    40cc6b <xmlStrEqual@plt+0x8d2b>
  40cd70:	lea    rsi,[rip+0x3ce99]        # 449c10 <xmlStrEqual@plt+0x45cd0>
  40cd77:	mov    edi,0x6
  40cd7c:	xor    eax,eax
  40cd7e:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  40cd83:	jmp    40cc15 <xmlStrEqual@plt+0x8cd5>
  40cd88:	nop    DWORD PTR [rax+rax*1+0x0]
  40cd90:	mov    rdx,rbx
  40cd93:	lea    rsi,[rip+0x3cdde]        # 449b78 <xmlStrEqual@plt+0x45c38>
  40cd9a:	mov    edi,0x2
  40cd9f:	xor    eax,eax
  40cda1:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  40cda6:	jmp    40cb70 <xmlStrEqual@plt+0x8c30>
  40cdab:	call   403c00 <__stack_chk_fail@plt>
  40cdb0:	endbr64 
  40cdb4:	mov    rdi,QWORD PTR [rdi+0x18]
  40cdb8:	jmp    409b20 <xmlStrEqual@plt+0x5be0>
  40cdbd:	nop    DWORD PTR [rax]
  40cdc0:	endbr64 
  40cdc4:	push   r13
  40cdc6:	push   r12
  40cdc8:	mov    r12,rdi
  40cdcb:	sub    rdi,0x18
  40cdcf:	push   rbp
  40cdd0:	push   rbx
  40cdd1:	sub    rsp,0x8
  40cdd5:	call   408950 <xmlStrEqual@plt+0x4a10>
  40cdda:	mov    rdi,rax
  40cddd:	call   408760 <xmlStrEqual@plt+0x4820>
  40cde2:	mov    r13d,eax
  40cde5:	test   al,0x2
  40cde7:	je     40ce50 <xmlStrEqual@plt+0x8f10>
  40cde9:	mov    rax,QWORD PTR [r12+0x30]
  40cdee:	mov    rbx,QWORD PTR [rax+0x8]
  40cdf2:	cmp    rax,rbx
  40cdf5:	jne    40ce33 <xmlStrEqual@plt+0x8ef3>
  40cdf7:	nop    WORD PTR [rax+rax*1+0x0]
  40ce00:	mov    rax,0x469e3c
  40ce07:	xor    ebp,ebp
  40ce09:	mov    eax,DWORD PTR [rax]
  40ce0b:	test   eax,eax
  40ce0d:	jg     40cea0 <xmlStrEqual@plt+0x8f60>
  40ce13:	add    rsp,0x8
  40ce17:	pop    rbx
  40ce18:	mov    rax,rbp
  40ce1b:	pop    rbp
  40ce1c:	pop    r12
  40ce1e:	pop    r13
  40ce20:	ret    
  40ce21:	nop    DWORD PTR [rax+0x0]
  40ce28:	mov    rbx,QWORD PTR [rbx+0x8]
  40ce2c:	cmp    QWORD PTR [r12+0x30],rbx
  40ce31:	je     40ce50 <xmlStrEqual@plt+0x8f10>
  40ce33:	mov    rbp,QWORD PTR [rbx+0x10]
  40ce37:	mov    rdi,rbp
  40ce3a:	call   425890 <xmlStrEqual@plt+0x21950>
  40ce3f:	cmp    ax,0xa
  40ce43:	jne    40ce28 <xmlStrEqual@plt+0x8ee8>
  40ce45:	jmp    40ce13 <xmlStrEqual@plt+0x8ed3>
  40ce47:	nop    WORD PTR [rax+rax*1+0x0]
  40ce50:	and    r13d,0x1
  40ce54:	je     40ce00 <xmlStrEqual@plt+0x8ec0>
  40ce56:	mov    rax,QWORD PTR [r12+0x30]
  40ce5b:	mov    rbx,QWORD PTR [rax+0x8]
  40ce5f:	cmp    rax,rbx
  40ce62:	jne    40ce7b <xmlStrEqual@plt+0x8f3b>
  40ce64:	jmp    40ce00 <xmlStrEqual@plt+0x8ec0>
  40ce66:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40ce70:	mov    rbx,QWORD PTR [rbx+0x8]
  40ce74:	cmp    QWORD PTR [r12+0x30],rbx
  40ce79:	je     40ce00 <xmlStrEqual@plt+0x8ec0>
  40ce7b:	mov    rbp,QWORD PTR [rbx+0x10]
  40ce7f:	mov    rdi,rbp
  40ce82:	call   425890 <xmlStrEqual@plt+0x21950>
  40ce87:	cmp    ax,0x2
  40ce8b:	jne    40ce70 <xmlStrEqual@plt+0x8f30>
  40ce8d:	add    rsp,0x8
  40ce91:	pop    rbx
  40ce92:	mov    rax,rbp
  40ce95:	pop    rbp
  40ce96:	pop    r12
  40ce98:	pop    r13
  40ce9a:	ret    
  40ce9b:	nop    DWORD PTR [rax+rax*1+0x0]
  40cea0:	xor    eax,eax
  40cea2:	lea    rsi,[rip+0x3cd97]        # 449c40 <xmlStrEqual@plt+0x45d00>
  40cea9:	mov    edi,0x5
  40ceae:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  40ceb3:	add    rsp,0x8
  40ceb7:	pop    rbx
  40ceb8:	mov    rax,rbp
  40cebb:	pop    rbp
  40cebc:	pop    r12
  40cebe:	pop    r13
  40cec0:	ret    
  40cec1:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40cecc:	nop    DWORD PTR [rax+0x0]
  40ced0:	endbr64 
  40ced4:	push   r15
  40ced6:	push   r14
  40ced8:	push   r13
  40ceda:	push   r12
  40cedc:	push   rbp
  40cedd:	push   rbx
  40cede:	sub    rsp,0x78
  40cee2:	mov    rax,QWORD PTR fs:0x28
  40ceeb:	mov    QWORD PTR [rsp+0x68],rax
  40cef0:	xor    eax,eax
  40cef2:	mov    rax,QWORD PTR [rdi+0x30]
  40cef6:	mov    ebx,DWORD PTR [rax+0x18]
  40cef9:	test   ebx,ebx
  40cefb:	jne    40cf38 <xmlStrEqual@plt+0x8ff8>
  40cefd:	mov    rax,0x469e3c
  40cf04:	mov    esi,DWORD PTR [rax]
  40cf06:	test   esi,esi
  40cf08:	jg     40d090 <xmlStrEqual@plt+0x9150>
  40cf0e:	mov    rcx,QWORD PTR [rsp+0x68]
  40cf13:	xor    rcx,QWORD PTR fs:0x28
  40cf1c:	mov    eax,ebx
  40cf1e:	jne    40d0ef <xmlStrEqual@plt+0x91af>
  40cf24:	add    rsp,0x78
  40cf28:	pop    rbx
  40cf29:	pop    rbp
  40cf2a:	pop    r12
  40cf2c:	pop    r13
  40cf2e:	pop    r14
  40cf30:	pop    r15
  40cf32:	ret    
  40cf33:	nop    DWORD PTR [rax+rax*1+0x0]
  40cf38:	lea    rax,[rdi-0x18]
  40cf3c:	mov    r15,rdi
  40cf3f:	mov    rdi,rax
  40cf42:	mov    r14,rcx
  40cf45:	mov    rbp,rsi
  40cf48:	mov    r13,QWORD PTR [rdx+0x8]
  40cf4c:	mov    QWORD PTR [rsp+0x8],rax
  40cf51:	call   408950 <xmlStrEqual@plt+0x4a10>
  40cf56:	mov    rdi,rax
  40cf59:	call   4086b0 <xmlStrEqual@plt+0x4770>
  40cf5e:	mov    r12,rax
  40cf61:	mov    rax,0x469e3c
  40cf68:	mov    ecx,DWORD PTR [rax]
  40cf6a:	test   ecx,ecx
  40cf6c:	jle    40cf8c <xmlStrEqual@plt+0x904c>
  40cf6e:	mov    rdi,r12
  40cf71:	call   4249d0 <xmlStrEqual@plt+0x20a90>
  40cf76:	mov    rdx,rax
  40cf79:	lea    rsi,[rip+0x3cffa]        # 449f7a <xmlStrEqual@plt+0x4603a>
  40cf80:	mov    edi,0x5
  40cf85:	xor    eax,eax
  40cf87:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  40cf8c:	mov    rdx,r13
  40cf8f:	mov    rsi,r12
  40cf92:	mov    rdi,rbp
  40cf95:	call   423de0 <xmlStrEqual@plt+0x1fea0>
  40cf9a:	mov    rbx,rax
  40cf9d:	test   rax,rax
  40cfa0:	je     40d0b0 <xmlStrEqual@plt+0x9170>
  40cfa6:	movzx  eax,WORD PTR [rax+0x24]
  40cfaa:	cmp    ax,0xffff
  40cfae:	je     403f72 <xmlStrEqual@plt+0x32>
  40cfb4:	mov    rdx,QWORD PTR [rbx+0x30]
  40cfb8:	mov    QWORD PTR [rdx+rax*1+0x4],r14
  40cfbd:	mov    rax,0x469e3c
  40cfc4:	mov    eax,DWORD PTR [rax]
  40cfc6:	test   eax,eax
  40cfc8:	jle    40d01a <xmlStrEqual@plt+0x90da>
  40cfca:	mov    rdi,r13
  40cfcd:	call   424d40 <xmlStrEqual@plt+0x20e00>
  40cfd2:	mov    rdi,rbp
  40cfd5:	mov    r14,rax
  40cfd8:	call   424d40 <xmlStrEqual@plt+0x20e00>
  40cfdd:	mov    rdi,r12
  40cfe0:	mov    QWORD PTR [rsp+0x18],rax
  40cfe5:	call   4249d0 <xmlStrEqual@plt+0x20a90>
  40cfea:	mov    rdi,rbx
  40cfed:	mov    QWORD PTR [rsp+0x10],rax
  40cff2:	call   423f50 <xmlStrEqual@plt+0x20010>
  40cff7:	mov    r8,QWORD PTR [rsp+0x18]
  40cffc:	mov    rcx,QWORD PTR [rsp+0x10]
  40d001:	mov    rdx,rax
  40d004:	mov    r9,r14
  40d007:	lea    rsi,[rip+0x3ccf2]        # 449d00 <xmlStrEqual@plt+0x45dc0>
  40d00e:	mov    edi,0x5
  40d013:	xor    eax,eax
  40d015:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  40d01a:	mov    rdi,r12
  40d01d:	call   42e2b0 <xmlStrEqual@plt+0x2a370>
  40d022:	mov    r8,r13
  40d025:	mov    rcx,rbp
  40d028:	mov    edx,0x10f6
  40d02d:	mov    esi,0x10f6
  40d032:	mov    rdi,rbx
  40d035:	call   424080 <xmlStrEqual@plt+0x20140>
  40d03a:	mov    rdi,r15
  40d03d:	call   40cdc0 <xmlStrEqual@plt+0x8e80>
  40d042:	mov    r8,rax
  40d045:	test   rax,rax
  40d048:	je     40d0e0 <xmlStrEqual@plt+0x91a0>
  40d04e:	lea    rbp,[rsp+0x20]
  40d053:	xor    ecx,ecx
  40d055:	mov    edx,0x10f6
  40d05a:	mov    esi,0x10f6
  40d05f:	mov    rdi,rbp
  40d062:	call   439130 <xmlStrEqual@plt+0x351f0>
  40d067:	mov    rdi,QWORD PTR [rsp+0x8]
  40d06c:	mov    rsi,rbx
  40d06f:	mov    rdx,rbp
  40d072:	call   4089b0 <xmlStrEqual@plt+0x4a70>
  40d077:	mov    rdi,rbx
  40d07a:	call   430820 <xmlStrEqual@plt+0x2c8e0>
  40d07f:	mov    ebx,0x1
  40d084:	jmp    40cf0e <xmlStrEqual@plt+0x8fce>
  40d089:	nop    DWORD PTR [rax+0x0]
  40d090:	lea    rsi,[rip+0x3cbd9]        # 449c70 <xmlStrEqual@plt+0x45d30>
  40d097:	mov    edi,0x5
  40d09c:	xor    eax,eax
  40d09e:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  40d0a3:	jmp    40cf0e <xmlStrEqual@plt+0x8fce>
  40d0a8:	nop    DWORD PTR [rax+rax*1+0x0]
  40d0b0:	mov    rax,0x469e3c
  40d0b7:	mov    edx,DWORD PTR [rax]
  40d0b9:	test   edx,edx
  40d0bb:	jle    40d0d0 <xmlStrEqual@plt+0x9190>
  40d0bd:	lea    rsi,[rip+0x3cbec]        # 449cb0 <xmlStrEqual@plt+0x45d70>
  40d0c4:	mov    edi,0x5
  40d0c9:	xor    eax,eax
  40d0cb:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  40d0d0:	mov    rdi,r12
  40d0d3:	call   42e2b0 <xmlStrEqual@plt+0x2a370>
  40d0d8:	xor    ebx,ebx
  40d0da:	jmp    40cf0e <xmlStrEqual@plt+0x8fce>
  40d0df:	nop
  40d0e0:	mov    rdi,rbx
  40d0e3:	call   430820 <xmlStrEqual@plt+0x2c8e0>
  40d0e8:	xor    ebx,ebx
  40d0ea:	jmp    40cf0e <xmlStrEqual@plt+0x8fce>
  40d0ef:	call   403c00 <__stack_chk_fail@plt>
  40d0f4:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40d0ff:	nop
  40d100:	endbr64 
  40d104:	push   r15
  40d106:	push   r14
  40d108:	push   r13
  40d10a:	push   r12
  40d10c:	push   rbp
  40d10d:	push   rbx
  40d10e:	mov    rbx,rdi
  40d111:	sub    rsp,0x18
  40d115:	call   43b440 <xmlStrEqual@plt+0x37500>
  40d11a:	mov    rdi,rbx
  40d11d:	mov    rbp,rax
  40d120:	call   43b460 <xmlStrEqual@plt+0x37520>
  40d125:	mov    r13,rax
  40d128:	mov    rdi,rbx
  40d12b:	call   43b430 <xmlStrEqual@plt+0x374f0>
  40d130:	mov    rdi,r13
  40d133:	mov    r15,rax
  40d136:	lea    r14,[rax+0x18]
  40d13a:	call   435dd0 <xmlStrEqual@plt+0x31e90>
  40d13f:	mov    rsi,QWORD PTR [rbp+0x0]
  40d143:	mov    r12d,eax
  40d146:	mov    rdi,QWORD PTR [rsi+0x8]
  40d14a:	cmp    DWORD PTR [r15+0x20],eax
  40d14e:	jl     40d208 <xmlStrEqual@plt+0x92c8>
  40d154:	test   eax,eax
  40d156:	jle    40d165 <xmlStrEqual@plt+0x9225>
  40d158:	mov    rax,0x469e3c
  40d15f:	mov    edx,DWORD PTR [rax]
  40d161:	test   edx,edx
  40d163:	jg     40d1e0 <xmlStrEqual@plt+0x92a0>
  40d165:	xor    eax,eax
  40d167:	call   435c70 <xmlStrEqual@plt+0x31d30>
  40d16c:	mov    rsi,QWORD PTR [rbp+0x8]
  40d170:	mov    rdx,QWORD PTR [rbp+0x0]
  40d174:	mov    rcx,rax
  40d177:	mov    rdi,r14
  40d17a:	mov    r12,rax
  40d17d:	call   40ced0 <xmlStrEqual@plt+0x8f90>
  40d182:	cmp    eax,0x1
  40d185:	je     40d1a0 <xmlStrEqual@plt+0x9260>
  40d187:	xor    eax,eax
  40d189:	add    rsp,0x18
  40d18d:	pop    rbx
  40d18e:	pop    rbp
  40d18f:	pop    r12
  40d191:	pop    r13
  40d193:	pop    r14
  40d195:	pop    r15
  40d197:	ret    
  40d198:	nop    DWORD PTR [rax+rax*1+0x0]
  40d1a0:	mov    rcx,0x475860
  40d1a7:	mov    rdx,r13
  40d1aa:	mov    rdi,QWORD PTR [rcx]
  40d1ad:	mov    rsi,r12
  40d1b0:	mov    DWORD PTR [rsp+0xc],eax
  40d1b4:	call   4351f0 <xmlStrEqual@plt+0x312b0>
  40d1b9:	mov    rdi,rbx
  40d1bc:	mov    esi,0x2
  40d1c1:	call   43b470 <xmlStrEqual@plt+0x37530>
  40d1c6:	mov    eax,DWORD PTR [rsp+0xc]
  40d1ca:	add    rsp,0x18
  40d1ce:	pop    rbx
  40d1cf:	pop    rbp
  40d1d0:	pop    r12
  40d1d2:	pop    r13
  40d1d4:	pop    r14
  40d1d6:	pop    r15
  40d1d8:	ret    
  40d1d9:	nop    DWORD PTR [rax+0x0]
  40d1e0:	call   424d40 <xmlStrEqual@plt+0x20e00>
  40d1e5:	mov    rdx,rax
  40d1e8:	mov    ecx,r12d
  40d1eb:	lea    rsi,[rip+0x3cb3e]        # 449d30 <xmlStrEqual@plt+0x45df0>
  40d1f2:	mov    edi,0x5
  40d1f7:	xor    eax,eax
  40d1f9:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  40d1fe:	jmp    40d165 <xmlStrEqual@plt+0x9225>
  40d203:	nop    DWORD PTR [rax+rax*1+0x0]
  40d208:	mov    rax,0x469e3c
  40d20f:	mov    eax,DWORD PTR [rax]
  40d211:	test   eax,eax
  40d213:	jle    40d239 <xmlStrEqual@plt+0x92f9>
  40d215:	call   424d40 <xmlStrEqual@plt+0x20e00>
  40d21a:	mov    rdx,rax
  40d21d:	lea    rsi,[rip+0x3cb44]        # 449d68 <xmlStrEqual@plt+0x45e28>
  40d224:	lea    ecx,[r12-0x1]
  40d229:	mov    edi,0x5
  40d22e:	xor    eax,eax
  40d230:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  40d235:	mov    rsi,QWORD PTR [rbp+0x0]
  40d239:	mov    rdi,r14
  40d23c:	call   40c7e0 <xmlStrEqual@plt+0x88a0>
  40d241:	mov    eax,0xffffff9d
  40d246:	jmp    40d189 <xmlStrEqual@plt+0x9249>
  40d24b:	nop    DWORD PTR [rax+rax*1+0x0]
  40d250:	endbr64 
  40d254:	push   r13
  40d256:	mov    r13,rdx
  40d259:	push   r12
  40d25b:	mov    r12,rsi
  40d25e:	push   rbp
  40d25f:	mov    rbp,rdi
  40d262:	mov    rdi,rsi
  40d265:	push   rbx
  40d266:	sub    rsp,0x18
  40d26a:	call   42b040 <xmlStrEqual@plt+0x27100>
  40d26f:	mov    BYTE PTR [rax+0x34],0x1
  40d273:	xor    ecx,ecx
  40d275:	mov    edx,0x1
  40d27a:	mov    rsi,rax
  40d27d:	mov    rdi,rbp
  40d280:	call   40c700 <xmlStrEqual@plt+0x87c0>
  40d285:	test   rax,rax
  40d288:	je     40d338 <xmlStrEqual@plt+0x93f8>
  40d28e:	mov    rdi,r12
  40d291:	mov    rbx,rax
  40d294:	call   424d40 <xmlStrEqual@plt+0x20e00>
  40d299:	mov    rdx,rax
  40d29c:	lea    rsi,[rip+0x3cb35]        # 449dd8 <xmlStrEqual@plt+0x45e98>
  40d2a3:	mov    edi,0x1
  40d2a8:	xor    eax,eax
  40d2aa:	call   4037d0 <__printf_chk@plt>
  40d2af:	mov    rsi,r13
  40d2b2:	mov    rdi,rbx
  40d2b5:	call   40c6c0 <xmlStrEqual@plt+0x8780>
  40d2ba:	mov    r8,0x40bdc0
  40d2c1:	mov    rdx,0x40d100
  40d2c8:	lea    rsi,[rbp-0x18]
  40d2cc:	mov    rcx,rax
  40d2cf:	mov    edi,0x4
  40d2d4:	call   43b760 <xmlStrEqual@plt+0x37820>
  40d2d9:	mov    r12,rax
  40d2dc:	mov    rdx,rax
  40d2df:	mov    rax,0x475858
  40d2e6:	mov    rsi,rbx
  40d2e9:	mov    rdi,QWORD PTR [rax]
  40d2ec:	call   43b7c0 <xmlStrEqual@plt+0x37880>
  40d2f1:	mov    rdi,r12
  40d2f4:	call   40d100 <xmlStrEqual@plt+0x91c0>
  40d2f9:	test   eax,eax
  40d2fb:	je     40d310 <xmlStrEqual@plt+0x93d0>
  40d2fd:	add    rsp,0x18
  40d301:	pop    rbx
  40d302:	pop    rbp
  40d303:	pop    r12
  40d305:	pop    r13
  40d307:	ret    
  40d308:	nop    DWORD PTR [rax+rax*1+0x0]
  40d310:	mov    rsi,rbx
  40d313:	mov    rdi,rbp
  40d316:	mov    edx,0xa
  40d31b:	mov    DWORD PTR [rsp+0xc],eax
  40d31f:	call   40c280 <xmlStrEqual@plt+0x8340>
  40d324:	mov    eax,DWORD PTR [rsp+0xc]
  40d328:	add    rsp,0x18
  40d32c:	pop    rbx
  40d32d:	pop    rbp
  40d32e:	pop    r12
  40d330:	pop    r13
  40d332:	ret    
  40d333:	nop    DWORD PTR [rax+rax*1+0x0]
  40d338:	mov    rdi,r12
  40d33b:	call   424d40 <xmlStrEqual@plt+0x20e00>
  40d340:	mov    rdx,rax
  40d343:	lea    rsi,[rip+0x3ca56]        # 449da0 <xmlStrEqual@plt+0x45e60>
  40d34a:	xor    eax,eax
  40d34c:	mov    edi,0x3
  40d351:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  40d356:	xor    edi,edi
  40d358:	call   4336a0 <xmlStrEqual@plt+0x2f760>
  40d35d:	add    rsp,0x18
  40d361:	pop    rbx
  40d362:	pop    rbp
  40d363:	pop    r12
  40d365:	xor    eax,eax
  40d367:	pop    r13
  40d369:	ret    
  40d36a:	nop    WORD PTR [rax+rax*1+0x0]
  40d370:	endbr64 
  40d374:	push   r15
  40d376:	push   r14
  40d378:	push   r13
  40d37a:	push   r12
  40d37c:	push   rbp
  40d37d:	push   rbx
  40d37e:	mov    rbx,rdi
  40d381:	sub    rsp,0x88
  40d388:	mov    rax,QWORD PTR fs:0x28
  40d391:	mov    QWORD PTR [rsp+0x78],rax
  40d396:	xor    eax,eax
  40d398:	call   43b440 <xmlStrEqual@plt+0x37500>
  40d39d:	mov    rdi,rbx
  40d3a0:	mov    r12,rax
  40d3a3:	call   43b460 <xmlStrEqual@plt+0x37520>
  40d3a8:	mov    r14,rax
  40d3ab:	mov    rdi,rbx
  40d3ae:	call   43b430 <xmlStrEqual@plt+0x374f0>
  40d3b3:	mov    rdi,r14
  40d3b6:	mov    rbp,rax
  40d3b9:	call   435dd0 <xmlStrEqual@plt+0x31e90>
  40d3be:	cmp    eax,0x2
  40d3c1:	jle    40d410 <xmlStrEqual@plt+0x94d0>
  40d3c3:	mov    rax,0x469e3c
  40d3ca:	mov    rsi,QWORD PTR [r12]
  40d3ce:	mov    eax,DWORD PTR [rax]
  40d3d0:	test   eax,eax
  40d3d2:	jg     40d5f0 <xmlStrEqual@plt+0x96b0>
  40d3d8:	lea    rdi,[rbp+0x18]
  40d3dc:	call   40c7e0 <xmlStrEqual@plt+0x88a0>
  40d3e1:	xor    eax,eax
  40d3e3:	mov    rcx,QWORD PTR [rsp+0x78]
  40d3e8:	xor    rcx,QWORD PTR fs:0x28
  40d3f1:	jne    40d70c <xmlStrEqual@plt+0x97cc>
  40d3f7:	add    rsp,0x88
  40d3fe:	pop    rbx
  40d3ff:	pop    rbp
  40d400:	pop    r12
  40d402:	pop    r13
  40d404:	pop    r14
  40d406:	pop    r15
  40d408:	ret    
  40d409:	nop    DWORD PTR [rax+0x0]
  40d410:	xor    eax,eax
  40d412:	call   435c70 <xmlStrEqual@plt+0x31d30>
  40d417:	mov    QWORD PTR [rsp+0x20],rax
  40d41c:	mov    rax,QWORD PTR [r12]
  40d420:	mov    r15,QWORD PTR [r12+0x8]
  40d425:	mov    r13,QWORD PTR [rax+0x8]
  40d429:	mov    rdi,r13
  40d42c:	call   425890 <xmlStrEqual@plt+0x21950>
  40d431:	mov    WORD PTR [rsp+0x10],ax
  40d436:	mov    rax,0x469e3c
  40d43d:	mov    esi,DWORD PTR [rax]
  40d43f:	test   esi,esi
  40d441:	jle    40d461 <xmlStrEqual@plt+0x9521>
  40d443:	mov    rdi,r13
  40d446:	call   424d40 <xmlStrEqual@plt+0x20e00>
  40d44b:	mov    rdx,rax
  40d44e:	lea    rsi,[rip+0x3cb3a]        # 449f8f <xmlStrEqual@plt+0x4604f>
  40d455:	mov    edi,0x5
  40d45a:	xor    eax,eax
  40d45c:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  40d461:	mov    rdi,rbp
  40d464:	call   408950 <xmlStrEqual@plt+0x4a10>
  40d469:	mov    rdi,rax
  40d46c:	call   4086b0 <xmlStrEqual@plt+0x4770>
  40d471:	mov    rsi,rax
  40d474:	mov    rdx,r13
  40d477:	mov    rdi,r15
  40d47a:	mov    QWORD PTR [rsp+0x18],rax
  40d47f:	call   423de0 <xmlStrEqual@plt+0x1fea0>
  40d484:	mov    r12,rax
  40d487:	test   rax,rax
  40d48a:	je     40d6e8 <xmlStrEqual@plt+0x97a8>
  40d490:	movzx  eax,WORD PTR [rax+0x24]
  40d494:	cmp    ax,0xffff
  40d498:	je     403f80 <xmlStrEqual@plt+0x40>
  40d49e:	add    rax,QWORD PTR [r12+0x30]
  40d4a3:	mov    rdx,QWORD PTR [rsp+0x20]
  40d4a8:	or     BYTE PTR [rax+0x1],0x40
  40d4ac:	mov    QWORD PTR [rax+0x4],rdx
  40d4b0:	mov    rdi,r13
  40d4b3:	call   425670 <xmlStrEqual@plt+0x21730>
  40d4b8:	mov    rdi,rax
  40d4bb:	call   437610 <xmlStrEqual@plt+0x336d0>
  40d4c0:	mov    rdi,r15
  40d4c3:	mov    QWORD PTR [rsp+0x8],rax
  40d4c8:	call   425890 <xmlStrEqual@plt+0x21950>
  40d4cd:	cmp    WORD PTR [rsp+0x10],ax
  40d4d2:	je     40d658 <xmlStrEqual@plt+0x9718>
  40d4d8:	mov    rdi,rbp
  40d4db:	call   408950 <xmlStrEqual@plt+0x4a10>
  40d4e0:	movzx  esi,WORD PTR [rsp+0x10]
  40d4e5:	mov    rdi,rax
  40d4e8:	call   4086a0 <xmlStrEqual@plt+0x4760>
  40d4ed:	test   rax,rax
  40d4f0:	je     40d678 <xmlStrEqual@plt+0x9738>
  40d4f6:	mov    rdi,rax
  40d4f9:	call   425060 <xmlStrEqual@plt+0x21120>
  40d4fe:	mov    QWORD PTR [rsp+0x10],rax
  40d503:	mov    rax,0x469e3c
  40d50a:	mov    edx,DWORD PTR [rax]
  40d50c:	test   edx,edx
  40d50e:	jle    40d55e <xmlStrEqual@plt+0x961e>
  40d510:	mov    rdi,r13
  40d513:	call   424d40 <xmlStrEqual@plt+0x20e00>
  40d518:	mov    rdi,r15
  40d51b:	mov    r13,rax
  40d51e:	call   424d40 <xmlStrEqual@plt+0x20e00>
  40d523:	mov    rdi,QWORD PTR [rsp+0x18]
  40d528:	mov    r15,rax
  40d52b:	call   4249d0 <xmlStrEqual@plt+0x20a90>
  40d530:	mov    rdi,r12
  40d533:	mov    QWORD PTR [rsp+0x28],rax
  40d538:	call   423f50 <xmlStrEqual@plt+0x20010>
  40d53d:	mov    rcx,QWORD PTR [rsp+0x28]
  40d542:	mov    rdx,rax
  40d545:	mov    r9,r13
  40d548:	mov    r8,r15
  40d54b:	lea    rsi,[rip+0x3c956]        # 449ea8 <xmlStrEqual@plt+0x45f68>
  40d552:	mov    edi,0x5
  40d557:	xor    eax,eax
  40d559:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  40d55e:	mov    r8,QWORD PTR [rsp+0x8]
  40d563:	mov    rcx,QWORD PTR [rsp+0x10]
  40d568:	mov    edx,0x10f6
  40d56d:	mov    esi,0x10f6
  40d572:	mov    rdi,r12
  40d575:	call   424080 <xmlStrEqual@plt+0x20140>
  40d57a:	lea    rdi,[rbp+0x18]
  40d57e:	call   40cdc0 <xmlStrEqual@plt+0x8e80>
  40d583:	mov    r8,rax
  40d586:	test   rax,rax
  40d589:	je     40d6b8 <xmlStrEqual@plt+0x9778>
  40d58f:	lea    r13,[rsp+0x30]
  40d594:	xor    ecx,ecx
  40d596:	mov    edx,0x10f6
  40d59b:	mov    esi,0x10f6
  40d5a0:	mov    rdi,r13
  40d5a3:	call   439130 <xmlStrEqual@plt+0x351f0>
  40d5a8:	mov    rdx,r13
  40d5ab:	mov    rsi,r12
  40d5ae:	mov    rdi,rbp
  40d5b1:	call   4089b0 <xmlStrEqual@plt+0x4a70>
  40d5b6:	mov    rdi,QWORD PTR [rsp+0x18]
  40d5bb:	mov    DWORD PTR [rsp+0x28],eax
  40d5bf:	call   42e2b0 <xmlStrEqual@plt+0x2a370>
  40d5c4:	mov    rdi,r12
  40d5c7:	call   430820 <xmlStrEqual@plt+0x2c8e0>
  40d5cc:	mov    rdi,QWORD PTR [rsp+0x10]
  40d5d1:	call   424bf0 <xmlStrEqual@plt+0x20cb0>
  40d5d6:	mov    rdi,QWORD PTR [rsp+0x8]
  40d5db:	call   424bf0 <xmlStrEqual@plt+0x20cb0>
  40d5e0:	mov    eax,DWORD PTR [rsp+0x28]
  40d5e4:	cmp    eax,0x1
  40d5e7:	je     40d620 <xmlStrEqual@plt+0x96e0>
  40d5e9:	xor    eax,eax
  40d5eb:	jmp    40d3e3 <xmlStrEqual@plt+0x94a3>
  40d5f0:	mov    rdi,QWORD PTR [rsi+0x8]
  40d5f4:	call   424d40 <xmlStrEqual@plt+0x20e00>
  40d5f9:	mov    rdx,rax
  40d5fc:	lea    rsi,[rip+0x3c8d5]        # 449ed8 <xmlStrEqual@plt+0x45f98>
  40d603:	mov    edi,0x5
  40d608:	xor    eax,eax
  40d60a:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  40d60f:	mov    rsi,QWORD PTR [r12]
  40d613:	jmp    40d3d8 <xmlStrEqual@plt+0x9498>
  40d618:	nop    DWORD PTR [rax+rax*1+0x0]
  40d620:	mov    rcx,0x475860
  40d627:	mov    rsi,QWORD PTR [rsp+0x20]
  40d62c:	mov    rdi,QWORD PTR [rcx]
  40d62f:	mov    rdx,r14
  40d632:	mov    DWORD PTR [rsp+0x8],eax
  40d636:	call   4351f0 <xmlStrEqual@plt+0x312b0>
  40d63b:	mov    esi,0x3
  40d640:	mov    rdi,rbx
  40d643:	call   43b470 <xmlStrEqual@plt+0x37530>
  40d648:	mov    eax,DWORD PTR [rsp+0x8]
  40d64c:	jmp    40d3e3 <xmlStrEqual@plt+0x94a3>
  40d651:	nop    DWORD PTR [rax+0x0]
  40d658:	mov    rdi,r15
  40d65b:	call   4255a0 <xmlStrEqual@plt+0x21660>
  40d660:	mov    rdi,rax
  40d663:	call   425060 <xmlStrEqual@plt+0x21120>
  40d668:	mov    QWORD PTR [rsp+0x10],rax
  40d66d:	jmp    40d503 <xmlStrEqual@plt+0x95c3>
  40d672:	nop    WORD PTR [rax+rax*1+0x0]
  40d678:	mov    rax,0x469e3c
  40d67f:	mov    ecx,DWORD PTR [rax]
  40d681:	test   ecx,ecx
  40d683:	jle    40d6a3 <xmlStrEqual@plt+0x9763>
  40d685:	mov    rdi,r13
  40d688:	call   424d40 <xmlStrEqual@plt+0x20e00>
  40d68d:	mov    rdx,rax
  40d690:	lea    rsi,[rip+0x3c7b9]        # 449e50 <xmlStrEqual@plt+0x45f10>
  40d697:	mov    edi,0x5
  40d69c:	xor    eax,eax
  40d69e:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  40d6a3:	mov    rdi,QWORD PTR [rsp+0x8]
  40d6a8:	call   424bf0 <xmlStrEqual@plt+0x20cb0>
  40d6ad:	xor    eax,eax
  40d6af:	jmp    40d3e3 <xmlStrEqual@plt+0x94a3>
  40d6b4:	nop    DWORD PTR [rax+0x0]
  40d6b8:	mov    rdi,QWORD PTR [rsp+0x18]
  40d6bd:	call   42e2b0 <xmlStrEqual@plt+0x2a370>
  40d6c2:	mov    rdi,QWORD PTR [rsp+0x10]
  40d6c7:	call   424bf0 <xmlStrEqual@plt+0x20cb0>
  40d6cc:	mov    rdi,QWORD PTR [rsp+0x8]
  40d6d1:	call   424bf0 <xmlStrEqual@plt+0x20cb0>
  40d6d6:	mov    rdi,r12
  40d6d9:	call   430820 <xmlStrEqual@plt+0x2c8e0>
  40d6de:	xor    eax,eax
  40d6e0:	jmp    40d3e3 <xmlStrEqual@plt+0x94a3>
  40d6e5:	nop    DWORD PTR [rax]
  40d6e8:	xor    eax,eax
  40d6ea:	lea    rsi,[rip+0x3c717]        # 449e08 <xmlStrEqual@plt+0x45ec8>
  40d6f1:	mov    edi,0x3
  40d6f6:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  40d6fb:	mov    rdi,QWORD PTR [rsp+0x18]
  40d700:	call   42e2b0 <xmlStrEqual@plt+0x2a370>
  40d705:	xor    eax,eax
  40d707:	jmp    40d3e3 <xmlStrEqual@plt+0x94a3>
  40d70c:	call   403c00 <__stack_chk_fail@plt>
  40d711:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40d71c:	nop    DWORD PTR [rax+0x0]
  40d720:	endbr64 
  40d724:	push   r13
  40d726:	mov    r13,rsi
  40d729:	mov    rsi,rdx
  40d72c:	push   r12
  40d72e:	mov    r12,rdx
  40d731:	push   rbp
  40d732:	push   rbx
  40d733:	mov    rbx,rdi
  40d736:	sub    rsp,0x8
  40d73a:	mov    rdi,QWORD PTR [rdi+0x18]
  40d73e:	call   409ac0 <xmlStrEqual@plt+0x5b80>
  40d743:	test   rax,rax
  40d746:	je     40d7b0 <xmlStrEqual@plt+0x9870>
  40d748:	mov    rsi,r13
  40d74b:	mov    rdi,rax
  40d74e:	mov    rbp,rax
  40d751:	call   40c6c0 <xmlStrEqual@plt+0x8780>
  40d756:	mov    r8,0x40bdc0
  40d75d:	mov    rdx,0x40d370
  40d764:	lea    rsi,[rbx-0x18]
  40d768:	mov    rcx,rax
  40d76b:	mov    edi,0x7
  40d770:	call   43b760 <xmlStrEqual@plt+0x37820>
  40d775:	mov    rbx,rax
  40d778:	mov    rdx,rax
  40d77b:	mov    rax,0x475858
  40d782:	mov    rsi,rbp
  40d785:	mov    rdi,QWORD PTR [rax]
  40d788:	call   43b7c0 <xmlStrEqual@plt+0x37880>
  40d78d:	mov    rdi,rbx
  40d790:	call   40d370 <xmlStrEqual@plt+0x9430>
  40d795:	mov    ebx,0x1
  40d79a:	add    rsp,0x8
  40d79e:	mov    eax,ebx
  40d7a0:	pop    rbx
  40d7a1:	pop    rbp
  40d7a2:	pop    r12
  40d7a4:	pop    r13
  40d7a6:	ret    
  40d7a7:	nop    WORD PTR [rax+rax*1+0x0]
  40d7b0:	mov    rax,0x469e3c
  40d7b7:	xor    ebx,ebx
  40d7b9:	cmp    DWORD PTR [rax],0x1
  40d7bc:	jle    40d79a <xmlStrEqual@plt+0x985a>
  40d7be:	mov    rdi,r12
  40d7c1:	call   424d40 <xmlStrEqual@plt+0x20e00>
  40d7c6:	mov    rdx,rax
  40d7c9:	lea    rsi,[rip+0x3c740]        # 449f10 <xmlStrEqual@plt+0x45fd0>
  40d7d0:	xor    eax,eax
  40d7d2:	mov    edi,0x6
  40d7d7:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  40d7dc:	add    rsp,0x8
  40d7e0:	mov    eax,ebx
  40d7e2:	pop    rbx
  40d7e3:	pop    rbp
  40d7e4:	pop    r12
  40d7e6:	pop    r13
  40d7e8:	ret    
  40d7e9:	nop    DWORD PTR [rax+0x0]
  40d7f0:	push   r15
  40d7f2:	mov    r15,rdi
  40d7f5:	mov    edx,0x3
  40d7fa:	push   r14
  40d7fc:	push   r13
  40d7fe:	mov    r13,rsi
  40d801:	mov    rsi,rdi
  40d804:	push   r12
  40d806:	push   rbp
  40d807:	push   rbx
  40d808:	sub    rsp,0x8
  40d80c:	mov    r14,0x475858
  40d813:	mov    rdi,QWORD PTR [r14]
  40d816:	call   43b840 <xmlStrEqual@plt+0x37900>
  40d81b:	mov    rbx,QWORD PTR [rax+0x8]
  40d81f:	mov    r12,rax
  40d822:	cmp    rax,rbx
  40d825:	jne    40d839 <xmlStrEqual@plt+0x98f9>
  40d827:	jmp    40d86c <xmlStrEqual@plt+0x992c>
  40d829:	nop    DWORD PTR [rax+0x0]
  40d830:	mov    rbx,QWORD PTR [rbx+0x8]
  40d834:	cmp    r12,rbx
  40d837:	je     40d86c <xmlStrEqual@plt+0x992c>
  40d839:	mov    rbp,QWORD PTR [rbx+0x10]
  40d83d:	mov    rdi,rbp
  40d840:	call   43b440 <xmlStrEqual@plt+0x37500>
  40d845:	cmp    QWORD PTR [rax+0x10],r13
  40d849:	jne    40d830 <xmlStrEqual@plt+0x98f0>
  40d84b:	mov    rax,0x475860
  40d852:	mov    rdx,QWORD PTR [r14]
  40d855:	mov    rcx,QWORD PTR [rax]
  40d858:	mov    rsi,rbp
  40d85b:	mov    rdi,r15
  40d85e:	call   43bab0 <xmlStrEqual@plt+0x37b70>
  40d863:	mov    rbx,QWORD PTR [rbx+0x8]
  40d867:	cmp    r12,rbx
  40d86a:	jne    40d839 <xmlStrEqual@plt+0x98f9>
  40d86c:	add    rsp,0x8
  40d870:	pop    rbx
  40d871:	pop    rbp
  40d872:	mov    rdi,r12
  40d875:	pop    r12
  40d877:	pop    r13
  40d879:	pop    r14
  40d87b:	pop    r15
  40d87d:	jmp    42e2b0 <xmlStrEqual@plt+0x2a370>
  40d882:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40d88d:	nop    DWORD PTR [rax]
  40d890:	endbr64 
  40d894:	jmp    4037b0 <free@plt>
  40d899:	nop    DWORD PTR [rax+0x0]
  40d8a0:	endbr64 
  40d8a4:	push   rbx
  40d8a5:	mov    rbx,rdi
  40d8a8:	mov    rdi,QWORD PTR [rdi+0x18]
  40d8ac:	call   424bf0 <xmlStrEqual@plt+0x20cb0>
  40d8b1:	mov    rdi,rbx
  40d8b4:	pop    rbx
  40d8b5:	jmp    4037b0 <free@plt>
  40d8ba:	nop    WORD PTR [rax+rax*1+0x0]
  40d8c0:	endbr64 
  40d8c4:	jmp    4037b0 <free@plt>
  40d8c9:	nop    DWORD PTR [rax+0x0]
  40d8d0:	push   r15
  40d8d2:	push   r14
  40d8d4:	push   r13
  40d8d6:	push   r12
  40d8d8:	push   rbp
  40d8d9:	push   rbx
  40d8da:	mov    rbx,rdi
  40d8dd:	sub    rsp,0x868
  40d8e4:	mov    QWORD PTR [rsp+0x30],rdi
  40d8e9:	mov    rdi,QWORD PTR [rdi+0x30]
  40d8ed:	mov    rax,QWORD PTR fs:0x28
  40d8f6:	mov    QWORD PTR [rsp+0x858],rax
  40d8fe:	xor    eax,eax
  40d900:	call   409b20 <xmlStrEqual@plt+0x5be0>
  40d905:	mov    r12,QWORD PTR [rax+0x8]
  40d909:	mov    QWORD PTR [rsp+0x38],rax
  40d90e:	mov    rdi,r12
  40d911:	call   42b470 <xmlStrEqual@plt+0x27530>
  40d916:	call   42dc90 <xmlStrEqual@plt+0x29d50>
  40d91b:	mov    r14,rax
  40d91e:	mov    QWORD PTR [rsp+0x28],rax
  40d923:	mov    rax,QWORD PTR [rbx+0x70]
  40d927:	mov    rsi,r14
  40d92a:	mov    rax,QWORD PTR [rax]
  40d92d:	mov    rdi,QWORD PTR [rax]
  40d930:	call   42dcf0 <xmlStrEqual@plt+0x29db0>
  40d935:	mov    rax,QWORD PTR [rbx+0x70]
  40d939:	mov    rsi,r14
  40d93c:	mov    rax,QWORD PTR [rax]
  40d93f:	mov    rdi,QWORD PTR [rax+0x8]
  40d943:	call   42dcf0 <xmlStrEqual@plt+0x29db0>
  40d948:	mov    rsi,QWORD PTR [rbx+0x70]
  40d94c:	mov    rax,QWORD PTR [rsi]
  40d94f:	mov    rdx,QWORD PTR [rax+0x10]
  40d953:	mov    rdi,QWORD PTR [rdx]
  40d956:	mov    r8d,DWORD PTR [rdi]
  40d959:	test   r8d,r8d
  40d95c:	je     40d9bd <xmlStrEqual@plt+0x9a7d>
  40d95e:	xor    ebx,ebx
  40d960:	jmp    40d972 <xmlStrEqual@plt+0x9a32>
  40d962:	mov    rax,QWORD PTR [rsi]
  40d965:	inc    ebx
  40d967:	mov    rdx,QWORD PTR [rax+0x10]
  40d96b:	mov    rdi,QWORD PTR [rdx]
  40d96e:	cmp    DWORD PTR [rdi],ebx
  40d970:	je     40d9bd <xmlStrEqual@plt+0x9a7d>
  40d972:	mov    ecx,ebx
  40d974:	mov    r8,QWORD PTR [rdi+0x10]
  40d978:	lea    eax,[rbx+rbx*1]
  40d97b:	and    eax,0x1e
  40d97e:	shr    ecx,0x4
  40d981:	mov    edx,eax
  40d983:	mov    eax,DWORD PTR [r8+rcx*4]
  40d987:	shrx   eax,eax,edx
  40d98c:	test   al,0x3
  40d98e:	jne    40d962 <xmlStrEqual@plt+0x9a22>
  40d990:	mov    rdx,QWORD PTR [rdi+0x20]
  40d994:	mov    eax,ebx
  40d996:	mov    rdi,QWORD PTR [rdx+rax*8]
  40d99a:	mov    rsi,QWORD PTR [rsp+0x28]
  40d99f:	inc    ebx
  40d9a1:	call   42dcf0 <xmlStrEqual@plt+0x29db0>
  40d9a6:	mov    rax,QWORD PTR [rsp+0x30]
  40d9ab:	mov    rsi,QWORD PTR [rax+0x70]
  40d9af:	mov    rax,QWORD PTR [rsi]
  40d9b2:	mov    rdx,QWORD PTR [rax+0x10]
  40d9b6:	mov    rdi,QWORD PTR [rdx]
  40d9b9:	cmp    DWORD PTR [rdi],ebx
  40d9bb:	jne    40d972 <xmlStrEqual@plt+0x9a32>
  40d9bd:	mov    rdx,QWORD PTR [rax+0x18]
  40d9c1:	mov    rdi,QWORD PTR [rdx]
  40d9c4:	mov    ecx,DWORD PTR [rdi]
  40d9c6:	test   ecx,ecx
  40d9c8:	je     40da29 <xmlStrEqual@plt+0x9ae9>
  40d9ca:	xor    ebx,ebx
  40d9cc:	jmp    40d9de <xmlStrEqual@plt+0x9a9e>
  40d9ce:	mov    rax,QWORD PTR [rsi]
  40d9d1:	inc    ebx
  40d9d3:	mov    rdx,QWORD PTR [rax+0x18]
  40d9d7:	mov    rdi,QWORD PTR [rdx]
  40d9da:	cmp    DWORD PTR [rdi],ebx
  40d9dc:	je     40da29 <xmlStrEqual@plt+0x9ae9>
  40d9de:	mov    ecx,ebx
  40d9e0:	mov    r8,QWORD PTR [rdi+0x10]
  40d9e4:	lea    eax,[rbx+rbx*1]
  40d9e7:	and    eax,0x1e
  40d9ea:	shr    ecx,0x4
  40d9ed:	mov    edx,eax
  40d9ef:	mov    eax,DWORD PTR [r8+rcx*4]
  40d9f3:	shrx   eax,eax,edx
  40d9f8:	test   al,0x3
  40d9fa:	jne    40d9ce <xmlStrEqual@plt+0x9a8e>
  40d9fc:	mov    rdx,QWORD PTR [rdi+0x20]
  40da00:	mov    eax,ebx
  40da02:	mov    rdi,QWORD PTR [rdx+rax*8]
  40da06:	mov    rsi,QWORD PTR [rsp+0x28]
  40da0b:	inc    ebx
  40da0d:	call   42dcf0 <xmlStrEqual@plt+0x29db0>
  40da12:	mov    rax,QWORD PTR [rsp+0x30]
  40da17:	mov    rsi,QWORD PTR [rax+0x70]
  40da1b:	mov    rax,QWORD PTR [rsi]
  40da1e:	mov    rdx,QWORD PTR [rax+0x18]
  40da22:	mov    rdi,QWORD PTR [rdx]
  40da25:	cmp    DWORD PTR [rdi],ebx
  40da27:	jne    40d9de <xmlStrEqual@plt+0x9a9e>
  40da29:	mov    rbx,QWORD PTR [rsp+0x28]
  40da2e:	mov    rdi,QWORD PTR [rax+0x20]
  40da32:	mov    rsi,rbx
  40da35:	call   42dcf0 <xmlStrEqual@plt+0x29db0>
  40da3a:	mov    rax,QWORD PTR [rsp+0x30]
  40da3f:	mov    rsi,rbx
  40da42:	mov    rax,QWORD PTR [rax+0x70]
  40da46:	mov    rax,QWORD PTR [rax]
  40da49:	mov    rdi,QWORD PTR [rax+0x20]
  40da4d:	call   42dcf0 <xmlStrEqual@plt+0x29db0>
  40da52:	lea    rdx,[rsp+0x40]
  40da57:	mov    rax,QWORD PTR [rbx+0x8]
  40da5b:	mov    QWORD PTR [rsp+0x20],rdx
  40da60:	lea    rdx,[rsp+0x450]
  40da68:	mov    QWORD PTR [rsp+0x18],rax
  40da6d:	mov    QWORD PTR [rsp+0x10],rdx
  40da72:	cmp    rbx,rax
  40da75:	je     40dc1a <xmlStrEqual@plt+0x9cda>
  40da7b:	mov    rax,QWORD PTR [rsp+0x18]
  40da80:	mov    rax,QWORD PTR [rax+0x10]
  40da84:	mov    r13,QWORD PTR [rax]
  40da87:	test   r13,r13
  40da8a:	je     40dc01 <xmlStrEqual@plt+0x9cc1>
  40da90:	mov    rax,QWORD PTR [rsp+0x20]
  40da95:	mov    QWORD PTR [rsp+0x8],rax
  40da9a:	nop    WORD PTR [rax+rax*1+0x0]
  40daa0:	cmp    QWORD PTR [r13+0x8],0x0
  40daa5:	jne    40dadc <xmlStrEqual@plt+0x9b9c>
  40daa7:	mov    rax,QWORD PTR [r13+0x10]
  40daab:	mov    r13,QWORD PTR [r13+0x18]
  40daaf:	test   rax,rax
  40dab2:	je     40dbe0 <xmlStrEqual@plt+0x9ca0>
  40dab8:	test   r13,r13
  40dabb:	je     40dc70 <xmlStrEqual@plt+0x9d30>
  40dac1:	mov    rcx,QWORD PTR [rsp+0x8]
  40dac6:	mov    QWORD PTR [rcx],r13
  40dac9:	mov    r13,rax
  40dacc:	cmp    QWORD PTR [r13+0x8],0x0
  40dad1:	lea    rax,[rcx+0x8]
  40dad5:	mov    QWORD PTR [rsp+0x8],rax
  40dada:	je     40daa7 <xmlStrEqual@plt+0x9b67>
  40dadc:	mov    rax,QWORD PTR [r13+0x28]
  40dae0:	mov    r15,QWORD PTR [rax]
  40dae3:	test   r15,r15
  40dae6:	je     40daa7 <xmlStrEqual@plt+0x9b67>
  40dae8:	mov    r14,QWORD PTR [rsp+0x10]
  40daed:	nop    DWORD PTR [rax]
  40daf0:	cmp    QWORD PTR [r15+0x8],0x0
  40daf5:	je     40db00 <xmlStrEqual@plt+0x9bc0>
  40daf7:	mov    rdi,QWORD PTR [r15+0x28]
  40dafb:	test   rdi,rdi
  40dafe:	jne    40db34 <xmlStrEqual@plt+0x9bf4>
  40db00:	mov    rax,QWORD PTR [r15+0x10]
  40db04:	mov    r15,QWORD PTR [r15+0x18]
  40db08:	test   rax,rax
  40db0b:	je     40db9f <xmlStrEqual@plt+0x9c5f>
  40db11:	test   r15,r15
  40db14:	je     40dbd0 <xmlStrEqual@plt+0x9c90>
  40db1a:	mov    QWORD PTR [r14],r15
  40db1d:	mov    r15,rax
  40db20:	add    r14,0x8
  40db24:	cmp    QWORD PTR [r15+0x8],0x0
  40db29:	je     40db00 <xmlStrEqual@plt+0x9bc0>
  40db2b:	mov    rdi,QWORD PTR [r15+0x28]
  40db2f:	test   rdi,rdi
  40db32:	je     40db00 <xmlStrEqual@plt+0x9bc0>
  40db34:	call   434ed0 <xmlStrEqual@plt+0x30f90>
  40db39:	mov    rbx,QWORD PTR [rax+0x8]
  40db3d:	mov    rbp,rax
  40db40:	cmp    rax,rbx
  40db43:	je     40db86 <xmlStrEqual@plt+0x9c46>
  40db45:	nop    DWORD PTR [rax]
  40db48:	mov    rdi,QWORD PTR [rbx+0x10]
  40db4c:	push   0x0
  40db4e:	xor    edx,edx
  40db50:	mov    r9d,0x64
  40db56:	push   0xff
  40db5b:	mov    r8d,0x1
  40db61:	mov    ecx,0x1
  40db66:	mov    esi,0x1
  40db6b:	call   42a830 <xmlStrEqual@plt+0x268f0>
  40db70:	mov    rsi,rax
  40db73:	mov    rdi,r12
  40db76:	call   42b7b0 <xmlStrEqual@plt+0x27870>
  40db7b:	mov    rbx,QWORD PTR [rbx+0x8]
  40db7f:	pop    rax
  40db80:	pop    rdx
  40db81:	cmp    rbp,rbx
  40db84:	jne    40db48 <xmlStrEqual@plt+0x9c08>
  40db86:	mov    rdi,rbp
  40db89:	call   42e2b0 <xmlStrEqual@plt+0x2a370>
  40db8e:	mov    rax,QWORD PTR [r15+0x10]
  40db92:	mov    r15,QWORD PTR [r15+0x18]
  40db96:	test   rax,rax
  40db99:	jne    40db11 <xmlStrEqual@plt+0x9bd1>
  40db9f:	test   r15,r15
  40dba2:	jne    40daf0 <xmlStrEqual@plt+0x9bb0>
  40dba8:	cmp    r14,QWORD PTR [rsp+0x10]
  40dbad:	je     40daa7 <xmlStrEqual@plt+0x9b67>
  40dbb3:	mov    r15,QWORD PTR [r14-0x8]
  40dbb7:	test   r15,r15
  40dbba:	je     40daa7 <xmlStrEqual@plt+0x9b67>
  40dbc0:	sub    r14,0x8
  40dbc4:	jmp    40daf0 <xmlStrEqual@plt+0x9bb0>
  40dbc9:	nop    DWORD PTR [rax+0x0]
  40dbd0:	mov    r15,rax
  40dbd3:	jmp    40daf0 <xmlStrEqual@plt+0x9bb0>
  40dbd8:	nop    DWORD PTR [rax+rax*1+0x0]
  40dbe0:	test   r13,r13
  40dbe3:	jne    40daa0 <xmlStrEqual@plt+0x9b60>
  40dbe9:	mov    rax,QWORD PTR [rsp+0x8]
  40dbee:	mov    rdx,QWORD PTR [rsp+0x20]
  40dbf3:	cmp    rax,rdx
  40dbf6:	je     40dc01 <xmlStrEqual@plt+0x9cc1>
  40dbf8:	mov    r13,QWORD PTR [rax-0x8]
  40dbfc:	test   r13,r13
  40dbff:	jne    40dc78 <xmlStrEqual@plt+0x9d38>
  40dc01:	mov    rax,QWORD PTR [rsp+0x18]
  40dc06:	mov    rax,QWORD PTR [rax+0x8]
  40dc0a:	mov    QWORD PTR [rsp+0x18],rax
  40dc0f:	cmp    QWORD PTR [rsp+0x28],rax
  40dc14:	jne    40da7b <xmlStrEqual@plt+0x9b3b>
  40dc1a:	mov    rdi,QWORD PTR [rsp+0x28]
  40dc1f:	call   42e2b0 <xmlStrEqual@plt+0x2a370>
  40dc24:	mov    rax,QWORD PTR [rsp+0x30]
  40dc29:	mov    rsi,QWORD PTR [rsp+0x38]
  40dc2e:	mov    rdi,QWORD PTR [rax+0x40]
  40dc32:	mov    rax,QWORD PTR [rax+0x38]
  40dc36:	call   QWORD PTR [rax+0x38]
  40dc39:	mov    rax,QWORD PTR [rsp+0x858]
  40dc41:	xor    rax,QWORD PTR fs:0x28
  40dc4a:	jne    40dc83 <xmlStrEqual@plt+0x9d43>
  40dc4c:	mov    rdi,QWORD PTR [rsp+0x30]
  40dc51:	add    rsp,0x868
  40dc58:	pop    rbx
  40dc59:	pop    rbp
  40dc5a:	pop    r12
  40dc5c:	pop    r13
  40dc5e:	pop    r14
  40dc60:	pop    r15
  40dc62:	jmp    4089d0 <xmlStrEqual@plt+0x4a90>
  40dc67:	nop    WORD PTR [rax+rax*1+0x0]
  40dc70:	mov    r13,rax
  40dc73:	jmp    40daa0 <xmlStrEqual@plt+0x9b60>
  40dc78:	sub    QWORD PTR [rsp+0x8],0x8
  40dc7e:	jmp    40daa0 <xmlStrEqual@plt+0x9b60>
  40dc83:	call   403c00 <__stack_chk_fail@plt>
  40dc88:	nop    DWORD PTR [rax+rax*1+0x0]
  40dc90:	endbr64 
  40dc94:	sub    rsp,0x8
  40dc98:	mov    edi,0xa8
  40dc9d:	call   434fe0 <xmlStrEqual@plt+0x310a0>
  40dca2:	add    rsp,0x8
  40dca6:	ret    
  40dca7:	nop    WORD PTR [rax+rax*1+0x0]
  40dcb0:	endbr64 
  40dcb4:	test   rdi,rdi
  40dcb7:	je     40dce0 <xmlStrEqual@plt+0x9da0>
  40dcb9:	push   rbx
  40dcba:	mov    rbx,rdi
  40dcbd:	mov    rdi,QWORD PTR [rdi]
  40dcc0:	call   424bf0 <xmlStrEqual@plt+0x20cb0>
  40dcc5:	mov    rdi,QWORD PTR [rbx+0x10]
  40dcc9:	call   4037b0 <free@plt>
  40dcce:	mov    rdi,rbx
  40dcd1:	pop    rbx
  40dcd2:	jmp    4037b0 <free@plt>
  40dcd7:	nop    WORD PTR [rax+rax*1+0x0]
  40dce0:	ret    
  40dce1:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40dcec:	nop    DWORD PTR [rax+0x0]
  40dcf0:	push   rbp
  40dcf1:	mov    ebp,esi
  40dcf3:	push   rbx
  40dcf4:	mov    rbx,rdi
  40dcf7:	sub    rsp,0x8
  40dcfb:	mov    rax,0x469e3c
  40dd02:	mov    eax,DWORD PTR [rax]
  40dd04:	test   eax,eax
  40dd06:	jle    40dd1d <xmlStrEqual@plt+0x9ddd>
  40dd08:	mov    edx,esi
  40dd0a:	mov    edi,0x5
  40dd0f:	lea    rsi,[rip+0x3c29a]        # 449fb0 <xmlStrEqual@plt+0x46070>
  40dd16:	xor    eax,eax
  40dd18:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  40dd1d:	mov    rdi,QWORD PTR [rbx+0xa0]
  40dd24:	test   rdi,rdi
  40dd27:	je     40dd40 <xmlStrEqual@plt+0x9e00>
  40dd29:	mov    esi,ebp
  40dd2b:	call   43b470 <xmlStrEqual@plt+0x37530>
  40dd30:	add    rsp,0x8
  40dd34:	pop    rbx
  40dd35:	mov    eax,0x1
  40dd3a:	pop    rbp
  40dd3b:	ret    
  40dd3c:	nop    DWORD PTR [rax+0x0]
  40dd40:	mov    edi,0x6
  40dd45:	xor    r8d,r8d
  40dd48:	mov    rcx,rbx
  40dd4b:	lea    rdx,[rip+0x36ee]        # 411440 <xmlStrEqual@plt+0xd500>
  40dd52:	mov    rsi,rbx
  40dd55:	call   43b710 <xmlStrEqual@plt+0x377d0>
  40dd5a:	mov    rdi,rax
  40dd5d:	mov    QWORD PTR [rbx+0xa0],rax
  40dd64:	jmp    40dd29 <xmlStrEqual@plt+0x9de9>
  40dd66:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40dd70:	push   r15
  40dd72:	push   r14
  40dd74:	push   r13
  40dd76:	push   r12
  40dd78:	mov    r12,rdi
  40dd7b:	push   rbp
  40dd7c:	push   rbx
  40dd7d:	sub    rsp,0x38
  40dd81:	cmp    DWORD PTR [rdi+0x80],0x1
  40dd88:	mov    QWORD PTR [rsp+0x18],rsi
  40dd8d:	jne    40df70 <xmlStrEqual@plt+0xa030>
  40dd93:	mov    rax,QWORD PTR [rdx]
  40dd96:	mov    edi,DWORD PTR [rax+0x18]
  40dd99:	test   edi,edi
  40dd9b:	je     40df5c <xmlStrEqual@plt+0xa01c>
  40dda1:	mov    rax,QWORD PTR [rax+0x8]
  40dda5:	mov    rax,QWORD PTR [rax+0x10]
  40dda9:	mov    rax,QWORD PTR [rax]
  40ddac:	mov    ecx,DWORD PTR [rax+0x18]
  40ddaf:	mov    QWORD PTR [rsp+0x20],rax
  40ddb4:	test   ecx,ecx
  40ddb6:	je     40df5c <xmlStrEqual@plt+0xa01c>
  40ddbc:	mov    rax,QWORD PTR [rsi]
  40ddbf:	mov    rcx,QWORD PTR [rax+0x8]
  40ddc3:	mov    QWORD PTR [rsp+0x10],rcx
  40ddc8:	cmp    rax,rcx
  40ddcb:	je     40df5c <xmlStrEqual@plt+0xa01c>
  40ddd1:	mov    r14,0x475858
  40ddd8:	nop    DWORD PTR [rax+rax*1+0x0]
  40dde0:	mov    rax,QWORD PTR [rsp+0x10]
  40dde5:	mov    rbx,QWORD PTR [rax+0x10]
  40dde9:	mov    rdi,rbx
  40ddec:	call   434a40 <xmlStrEqual@plt+0x30b00>
  40ddf1:	mov    rsi,QWORD PTR [rsp+0x20]
  40ddf6:	mov    rdi,rax
  40ddf9:	mov    QWORD PTR [rsp+0x28],rax
  40ddfe:	call   42b790 <xmlStrEqual@plt+0x27850>
  40de03:	mov    rdi,QWORD PTR [r14]
  40de06:	mov    edx,0x8
  40de0b:	mov    rsi,rbx
  40de0e:	mov    rbp,rax
  40de11:	call   43b840 <xmlStrEqual@plt+0x37900>
  40de16:	mov    r15,QWORD PTR [rax+0x8]
  40de1a:	mov    r13,rax
  40de1d:	cmp    rax,r15
  40de20:	jne    40de31 <xmlStrEqual@plt+0x9ef1>
  40de22:	jmp    40de70 <xmlStrEqual@plt+0x9f30>
  40de24:	nop    DWORD PTR [rax+0x0]
  40de28:	mov    r15,QWORD PTR [r15+0x8]
  40de2c:	cmp    r13,r15
  40de2f:	je     40de70 <xmlStrEqual@plt+0x9f30>
  40de31:	mov    rsi,QWORD PTR [r15+0x10]
  40de35:	mov    rdi,rsi
  40de38:	mov    QWORD PTR [rsp+0x8],rsi
  40de3d:	call   43b440 <xmlStrEqual@plt+0x37500>
  40de42:	cmp    rbp,QWORD PTR [rax+0x8]
  40de46:	mov    rsi,QWORD PTR [rsp+0x8]
  40de4b:	jne    40de28 <xmlStrEqual@plt+0x9ee8>
  40de4d:	mov    rax,0x475860
  40de54:	mov    rdx,QWORD PTR [r14]
  40de57:	mov    rcx,QWORD PTR [rax]
  40de5a:	mov    rdi,rbx
  40de5d:	call   43bab0 <xmlStrEqual@plt+0x37b70>
  40de62:	mov    r15,QWORD PTR [r15+0x8]
  40de66:	cmp    r13,r15
  40de69:	jne    40de31 <xmlStrEqual@plt+0x9ef1>
  40de6b:	nop    DWORD PTR [rax+rax*1+0x0]
  40de70:	mov    rdi,r13
  40de73:	call   42e2b0 <xmlStrEqual@plt+0x2a370>
  40de78:	mov    rsi,rbp
  40de7b:	mov    rdi,rbx
  40de7e:	call   40d7f0 <xmlStrEqual@plt+0x98b0>
  40de83:	cmp    BYTE PTR [rbp+0x8],0x1
  40de87:	jne    40df80 <xmlStrEqual@plt+0xa040>
  40de8d:	mov    rax,0x469e3c
  40de94:	cmp    DWORD PTR [rax],0x1
  40de97:	jle    40dec9 <xmlStrEqual@plt+0x9f89>
  40de99:	mov    rdi,QWORD PTR [rsp+0x28]
  40de9e:	call   424d40 <xmlStrEqual@plt+0x20e00>
  40dea3:	mov    rdi,QWORD PTR [rsp+0x20]
  40dea8:	mov    r13,rax
  40deab:	call   424d40 <xmlStrEqual@plt+0x20e00>
  40deb0:	mov    rdx,rax
  40deb3:	mov    rcx,r13
  40deb6:	lea    rsi,[rip+0x3c113]        # 449fd0 <xmlStrEqual@plt+0x46090>
  40debd:	mov    edi,0x6
  40dec2:	xor    eax,eax
  40dec4:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  40dec9:	mov    rax,QWORD PTR [r12+0x78]
  40dece:	mov    edx,DWORD PTR [rax+0x18]
  40ded1:	test   edx,edx
  40ded3:	je     40df40 <xmlStrEqual@plt+0xa000>
  40ded5:	mov    r13,QWORD PTR [rax+0x8]
  40ded9:	cmp    rax,r13
  40dedc:	je     40df40 <xmlStrEqual@plt+0xa000>
  40dede:	xchg   ax,ax
  40dee0:	mov    r15,QWORD PTR [r13+0x10]
  40dee4:	mov    edi,0x18
  40dee9:	call   435000 <xmlStrEqual@plt+0x310c0>
  40deee:	mov    QWORD PTR [rax+0x10],r15
  40def2:	mov    QWORD PTR [rax],rbx
  40def5:	mov    QWORD PTR [rax+0x8],rbp
  40def9:	lea    r8,[rip+0xfffffffffffff990]        # 40d890 <xmlStrEqual@plt+0x9950>
  40df00:	mov    rcx,rax
  40df03:	lea    rdx,[rip+0x946]        # 40e850 <xmlStrEqual@plt+0xa910>
  40df0a:	mov    rsi,r12
  40df0d:	mov    edi,0x8
  40df12:	call   43b760 <xmlStrEqual@plt+0x37820>
  40df17:	mov    rdi,QWORD PTR [r14]
  40df1a:	mov    r15,rax
  40df1d:	mov    rdx,rax
  40df20:	mov    rsi,rbx
  40df23:	call   43b7c0 <xmlStrEqual@plt+0x37880>
  40df28:	mov    esi,0x2
  40df2d:	mov    rdi,r15
  40df30:	call   43b470 <xmlStrEqual@plt+0x37530>
  40df35:	mov    r13,QWORD PTR [r13+0x8]
  40df39:	cmp    r13,QWORD PTR [r12+0x78]
  40df3e:	jne    40dee0 <xmlStrEqual@plt+0x9fa0>
  40df40:	mov    rax,QWORD PTR [rsp+0x10]
  40df45:	mov    rcx,QWORD PTR [rsp+0x18]
  40df4a:	mov    rax,QWORD PTR [rax+0x8]
  40df4e:	mov    QWORD PTR [rsp+0x10],rax
  40df53:	cmp    rax,QWORD PTR [rcx]
  40df56:	jne    40dde0 <xmlStrEqual@plt+0x9ea0>
  40df5c:	add    rsp,0x38
  40df60:	pop    rbx
  40df61:	pop    rbp
  40df62:	pop    r12
  40df64:	pop    r13
  40df66:	pop    r14
  40df68:	mov    eax,0x1
  40df6d:	pop    r15
  40df6f:	ret    
  40df70:	mov    esi,0x4
  40df75:	call   40dcf0 <xmlStrEqual@plt+0x9db0>
  40df7a:	jmp    40df5c <xmlStrEqual@plt+0xa01c>
  40df7c:	nop    DWORD PTR [rax+0x0]
  40df80:	mov    rdi,QWORD PTR [r14]
  40df83:	mov    rsi,rbx
  40df86:	mov    edx,0x3
  40df8b:	call   43b840 <xmlStrEqual@plt+0x37900>
  40df90:	mov    rbp,QWORD PTR [rax+0x8]
  40df94:	mov    rbx,rax
  40df97:	cmp    rax,rbp
  40df9a:	je     40dfb7 <xmlStrEqual@plt+0xa077>
  40df9c:	nop    DWORD PTR [rax+0x0]
  40dfa0:	mov    rdi,QWORD PTR [rbp+0x10]
  40dfa4:	mov    esi,0x2
  40dfa9:	call   43b470 <xmlStrEqual@plt+0x37530>
  40dfae:	mov    rbp,QWORD PTR [rbp+0x8]
  40dfb2:	cmp    rbx,rbp
  40dfb5:	jne    40dfa0 <xmlStrEqual@plt+0xa060>
  40dfb7:	mov    rdi,rbx
  40dfba:	call   42e2b0 <xmlStrEqual@plt+0x2a370>
  40dfbf:	jmp    40df40 <xmlStrEqual@plt+0xa000>
  40dfc4:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40dfcf:	nop
  40dfd0:	endbr64 
  40dfd4:	sub    rsp,0x8
  40dfd8:	mov    rax,0x469600
  40dfdf:	cmp    QWORD PTR [rdi+0x8],rax
  40dfe3:	jne    40e020 <xmlStrEqual@plt+0xa0e0>
  40dfe5:	call   4037b0 <free@plt>
  40dfea:	mov    rax,0x469e3c
  40dff1:	mov    eax,DWORD PTR [rax]
  40dff3:	test   eax,eax
  40dff5:	jg     40e000 <xmlStrEqual@plt+0xa0c0>
  40dff7:	add    rsp,0x8
  40dffb:	ret    
  40dffc:	nop    DWORD PTR [rax+0x0]
  40e000:	lea    rsi,[rip+0x3d0a0]        # 44b0a7 <xmlStrEqual@plt+0x47167>
  40e007:	mov    edi,0x5
  40e00c:	xor    eax,eax
  40e00e:	add    rsp,0x8
  40e012:	jmp    430e20 <xmlStrEqual@plt+0x2cee0>
  40e017:	nop    WORD PTR [rax+rax*1+0x0]
  40e020:	lea    rdx,[rip+0x3c001]        # 44a028 <xmlStrEqual@plt+0x460e8>
  40e027:	lea    rsi,[rip+0x3d262]        # 44b290 <xmlStrEqual@plt+0x47350>
  40e02e:	lea    rdi,[rip+0x3d05b]        # 44b090 <xmlStrEqual@plt+0x47150>
  40e035:	call   4350f0 <xmlStrEqual@plt+0x311b0>
  40e03a:	nop    WORD PTR [rax+rax*1+0x0]
  40e040:	endbr64 
  40e044:	push   rbx
  40e045:	mov    rax,0x469600
  40e04c:	cmp    QWORD PTR [rdi+0x8],rax
  40e050:	jne    40e080 <xmlStrEqual@plt+0xa140>
  40e052:	mov    rbx,rdi
  40e055:	mov    rdi,QWORD PTR [rdi+0x50]
  40e059:	mov    rsi,rdx
  40e05c:	call   43aca0 <xmlStrEqual@plt+0x36d60>
  40e061:	lea    rdx,[rax+0x10]
  40e065:	mov    rdi,rbx
  40e068:	lea    rsi,[rax+0x8]
  40e06c:	call   40dd70 <xmlStrEqual@plt+0x9e30>
  40e071:	mov    eax,0x1
  40e076:	pop    rbx
  40e077:	ret    
  40e078:	nop    DWORD PTR [rax+rax*1+0x0]
  40e080:	lea    rdx,[rip+0x3bfa1]        # 44a028 <xmlStrEqual@plt+0x460e8>
  40e087:	lea    rsi,[rip+0x3d202]        # 44b290 <xmlStrEqual@plt+0x47350>
  40e08e:	lea    rdi,[rip+0x3cffb]        # 44b090 <xmlStrEqual@plt+0x47150>
  40e095:	call   4350f0 <xmlStrEqual@plt+0x311b0>
  40e09a:	nop    WORD PTR [rax+rax*1+0x0]
  40e0a0:	push   r15
  40e0a2:	push   r14
  40e0a4:	mov    r14,rdx
  40e0a7:	push   r13
  40e0a9:	mov    r13,rsi
  40e0ac:	push   r12
  40e0ae:	mov    r12,rcx
  40e0b1:	push   rbp
  40e0b2:	push   rbx
  40e0b3:	mov    rbx,rdi
  40e0b6:	sub    rsp,0x68
  40e0ba:	mov    rax,QWORD PTR fs:0x28
  40e0c3:	mov    QWORD PTR [rsp+0x58],rax
  40e0c8:	xor    eax,eax
  40e0ca:	call   408950 <xmlStrEqual@plt+0x4a10>
  40e0cf:	mov    rdi,rax
  40e0d2:	call   4086b0 <xmlStrEqual@plt+0x4770>
  40e0d7:	mov    rsi,rax
  40e0da:	mov    rdx,r14
  40e0dd:	mov    rdi,r13
  40e0e0:	mov    rbp,rax
  40e0e3:	call   423de0 <xmlStrEqual@plt+0x1fea0>
  40e0e8:	test   rax,rax
  40e0eb:	je     40e240 <xmlStrEqual@plt+0xa300>
  40e0f1:	mov    r15,rax
  40e0f4:	movzx  eax,WORD PTR [rax+0x24]
  40e0f8:	cmp    ax,0xffff
  40e0fc:	je     403f95 <xmlStrEqual@plt+0x55>
  40e102:	mov    rdx,QWORD PTR [r15+0x30]
  40e106:	or     BYTE PTR [rdx+rax*1],0x1
  40e10a:	mov    rax,0x469e3c
  40e111:	mov    eax,DWORD PTR [rax]
  40e113:	test   eax,eax
  40e115:	jg     40e1a0 <xmlStrEqual@plt+0xa260>
  40e11b:	mov    rdi,rbp
  40e11e:	call   42e2b0 <xmlStrEqual@plt+0x2a370>
  40e123:	mov    rdi,r12
  40e126:	call   425890 <xmlStrEqual@plt+0x21950>
  40e12b:	mov    rdi,QWORD PTR [rbx+0x10]
  40e12f:	movzx  esi,ax
  40e132:	call   4086a0 <xmlStrEqual@plt+0x4760>
  40e137:	test   rax,rax
  40e13a:	je     40e1f8 <xmlStrEqual@plt+0xa2b8>
  40e140:	lea    rbp,[rsp+0x10]
  40e145:	mov    r8,r12
  40e148:	mov    rcx,rax
  40e14b:	mov    edx,0x10f6
  40e150:	mov    esi,0x10f6
  40e155:	mov    rdi,rbp
  40e158:	call   439130 <xmlStrEqual@plt+0x351f0>
  40e15d:	mov    rdx,rbp
  40e160:	mov    rsi,r15
  40e163:	mov    rdi,rbx
  40e166:	call   4089b0 <xmlStrEqual@plt+0x4a70>
  40e16b:	mov    rdi,r15
  40e16e:	mov    DWORD PTR [rsp],eax
  40e171:	call   430820 <xmlStrEqual@plt+0x2c8e0>
  40e176:	mov    eax,DWORD PTR [rsp]
  40e179:	mov    rcx,QWORD PTR [rsp+0x58]
  40e17e:	xor    rcx,QWORD PTR fs:0x28
  40e187:	jne    40e247 <xmlStrEqual@plt+0xa307>
  40e18d:	add    rsp,0x68
  40e191:	pop    rbx
  40e192:	pop    rbp
  40e193:	pop    r12
  40e195:	pop    r13
  40e197:	pop    r14
  40e199:	pop    r15
  40e19b:	ret    
  40e19c:	nop    DWORD PTR [rax+0x0]
  40e1a0:	mov    rdi,r14
  40e1a3:	call   424d40 <xmlStrEqual@plt+0x20e00>
  40e1a8:	mov    rdi,r13
  40e1ab:	mov    r14,rax
  40e1ae:	call   424d40 <xmlStrEqual@plt+0x20e00>
  40e1b3:	mov    rdi,rbp
  40e1b6:	mov    QWORD PTR [rsp+0x8],rax
  40e1bb:	call   4249d0 <xmlStrEqual@plt+0x20a90>
  40e1c0:	mov    rdi,r15
  40e1c3:	mov    QWORD PTR [rsp],rax
  40e1c7:	call   423f50 <xmlStrEqual@plt+0x20010>
  40e1cc:	mov    r8,QWORD PTR [rsp+0x8]
  40e1d1:	mov    rcx,QWORD PTR [rsp]
  40e1d5:	mov    rdx,rax
  40e1d8:	mov    r9,r14
  40e1db:	lea    rsi,[rip+0x3be6e]        # 44a050 <xmlStrEqual@plt+0x46110>
  40e1e2:	mov    edi,0x5
  40e1e7:	xor    eax,eax
  40e1e9:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  40e1ee:	jmp    40e11b <xmlStrEqual@plt+0xa1db>
  40e1f3:	nop    DWORD PTR [rax+rax*1+0x0]
  40e1f8:	mov    rax,0x469e3c
  40e1ff:	cmp    DWORD PTR [rax],0x1
  40e202:	jg     40e218 <xmlStrEqual@plt+0xa2d8>
  40e204:	mov    rdi,r15
  40e207:	call   430820 <xmlStrEqual@plt+0x2c8e0>
  40e20c:	xor    eax,eax
  40e20e:	jmp    40e179 <xmlStrEqual@plt+0xa239>
  40e213:	nop    DWORD PTR [rax+rax*1+0x0]
  40e218:	mov    rdi,r13
  40e21b:	call   424d40 <xmlStrEqual@plt+0x20e00>
  40e220:	mov    rdx,rax
  40e223:	lea    rsi,[rip+0x3be56]        # 44a080 <xmlStrEqual@plt+0x46140>
  40e22a:	mov    edi,0x6
  40e22f:	xor    eax,eax
  40e231:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  40e236:	jmp    40e204 <xmlStrEqual@plt+0xa2c4>
  40e238:	nop    DWORD PTR [rax+rax*1+0x0]
  40e240:	xor    eax,eax
  40e242:	jmp    40e179 <xmlStrEqual@plt+0xa239>
  40e247:	call   403c00 <__stack_chk_fail@plt>
  40e24c:	nop    DWORD PTR [rax+0x0]
  40e250:	endbr64 
  40e254:	push   r13
  40e256:	push   r12
  40e258:	push   rbp
  40e259:	push   rbx
  40e25a:	sub    rsp,0x38
  40e25e:	mov    rax,QWORD PTR fs:0x28
  40e267:	mov    QWORD PTR [rsp+0x28],rax
  40e26c:	xor    eax,eax
  40e26e:	mov    rax,0x469600
  40e275:	cmp    QWORD PTR [rdi+0x8],rax
  40e279:	jne    40e3d0 <xmlStrEqual@plt+0xa490>
  40e27f:	mov    rbx,rdi
  40e282:	lea    rdi,[rdi+0x18]
  40e286:	call   40bde0 <xmlStrEqual@plt+0x7ea0>
  40e28b:	xor    eax,eax
  40e28d:	call   408d60 <xmlStrEqual@plt+0x4e20>
  40e292:	mov    QWORD PTR [rbx+0x70],rax
  40e296:	mov    rdi,0x40dcb0
  40e29d:	call   42dca0 <xmlStrEqual@plt+0x29d60>
  40e2a2:	mov    QWORD PTR [rbx+0x78],rax
  40e2a6:	mov    rdi,0x424bf0
  40e2ad:	call   42dca0 <xmlStrEqual@plt+0x29d60>
  40e2b2:	mov    QWORD PTR [rbx+0x68],rax
  40e2b6:	xor    eax,eax
  40e2b8:	call   433650 <xmlStrEqual@plt+0x2f710>
  40e2bd:	mov    rbp,rax
  40e2c0:	xor    eax,eax
  40e2c2:	call   433650 <xmlStrEqual@plt+0x2f710>
  40e2c7:	cmp    QWORD PTR [rbx+0x70],0x0
  40e2cc:	mov    r12,rax
  40e2cf:	je     40e3a8 <xmlStrEqual@plt+0xa468>
  40e2d5:	cmp    QWORD PTR [rbx+0x78],0x0
  40e2da:	je     40e3a8 <xmlStrEqual@plt+0xa468>
  40e2e0:	cmp    QWORD PTR [rbx+0x68],0x0
  40e2e5:	je     40e3a8 <xmlStrEqual@plt+0xa468>
  40e2eb:	test   rbp,rbp
  40e2ee:	je     40e3a8 <xmlStrEqual@plt+0xa468>
  40e2f4:	test   rax,rax
  40e2f7:	je     40e3a8 <xmlStrEqual@plt+0xa468>
  40e2fd:	mov    r13,rsp
  40e300:	mov    rsi,r13
  40e303:	lea    rdi,[rip+0x3a3a9]        # 4486b3 <xmlStrEqual@plt+0x44773>
  40e30a:	call   425bf0 <xmlStrEqual@plt+0x21cb0>
  40e30f:	mov    rdi,r13
  40e312:	call   42b040 <xmlStrEqual@plt+0x27100>
  40e317:	mov    BYTE PTR [rax+0x34],0x1
  40e31b:	mov    rsi,rax
  40e31e:	mov    rdi,rbp
  40e321:	call   433690 <xmlStrEqual@plt+0x2f750>
  40e326:	mov    rdi,rbp
  40e329:	call   433790 <xmlStrEqual@plt+0x2f850>
  40e32e:	mov    rdi,QWORD PTR [rbx+0x30]
  40e332:	mov    rdx,rbp
  40e335:	mov    rsi,rax
  40e338:	call   409aa0 <xmlStrEqual@plt+0x5b60>
  40e33d:	mov    rsi,r13
  40e340:	lea    rdi,[rip+0x3a872]        # 448bb9 <xmlStrEqual@plt+0x44c79>
  40e347:	call   425bf0 <xmlStrEqual@plt+0x21cb0>
  40e34c:	mov    rdi,r13
  40e34f:	call   42b040 <xmlStrEqual@plt+0x27100>
  40e354:	mov    BYTE PTR [rax+0x34],0x1
  40e358:	mov    rsi,rax
  40e35b:	mov    rdi,r12
  40e35e:	call   433690 <xmlStrEqual@plt+0x2f750>
  40e363:	mov    rdi,r12
  40e366:	call   433790 <xmlStrEqual@plt+0x2f850>
  40e36b:	mov    rdi,QWORD PTR [rbx+0x30]
  40e36f:	mov    rdx,r12
  40e372:	mov    rsi,rax
  40e375:	call   409aa0 <xmlStrEqual@plt+0x5b60>
  40e37a:	mov    rax,0x469e3c
  40e381:	mov    ebx,0x1
  40e386:	mov    eax,DWORD PTR [rax]
  40e388:	test   eax,eax
  40e38a:	jle    40e3aa <xmlStrEqual@plt+0xa46a>
  40e38c:	lea    rsi,[rip+0x3cd22]        # 44b0b5 <xmlStrEqual@plt+0x47175>
  40e393:	mov    edi,0x5
  40e398:	xor    eax,eax
  40e39a:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  40e39f:	jmp    40e3aa <xmlStrEqual@plt+0xa46a>
  40e3a1:	nop    DWORD PTR [rax+0x0]
  40e3a8:	xor    ebx,ebx
  40e3aa:	mov    rcx,QWORD PTR [rsp+0x28]
  40e3af:	xor    rcx,QWORD PTR fs:0x28
  40e3b8:	mov    eax,ebx
  40e3ba:	jne    40e3ea <xmlStrEqual@plt+0xa4aa>
  40e3bc:	add    rsp,0x38
  40e3c0:	pop    rbx
  40e3c1:	pop    rbp
  40e3c2:	pop    r12
  40e3c4:	pop    r13
  40e3c6:	ret    
  40e3c7:	nop    WORD PTR [rax+rax*1+0x0]
  40e3d0:	lea    rdx,[rip+0x3bc51]        # 44a028 <xmlStrEqual@plt+0x460e8>
  40e3d7:	lea    rsi,[rip+0x3ceb2]        # 44b290 <xmlStrEqual@plt+0x47350>
  40e3de:	lea    rdi,[rip+0x3ccab]        # 44b090 <xmlStrEqual@plt+0x47150>
  40e3e5:	call   4350f0 <xmlStrEqual@plt+0x311b0>
  40e3ea:	call   403c00 <__stack_chk_fail@plt>
  40e3ef:	nop
  40e3f0:	endbr64 
  40e3f4:	push   r13
  40e3f6:	push   r12
  40e3f8:	push   rbp
  40e3f9:	push   rbx
  40e3fa:	sub    rsp,0x8
  40e3fe:	mov    rax,0x469600
  40e405:	cmp    QWORD PTR [rdi+0x8],rax
  40e409:	jne    40e520 <xmlStrEqual@plt+0xa5e0>
  40e40f:	mov    rbp,rdi
  40e412:	mov    rdi,QWORD PTR [rdi+0x50]
  40e416:	mov    r12,rsi
  40e419:	mov    ebx,edx
  40e41b:	call   43aca0 <xmlStrEqual@plt+0x36d60>
  40e420:	mov    r13,rax
  40e423:	test   rax,rax
  40e426:	je     40e4f0 <xmlStrEqual@plt+0xa5b0>
  40e42c:	mov    rcx,QWORD PTR [rax+0x10]
  40e430:	mov    rax,QWORD PTR [rcx+0x8]
  40e434:	cmp    rcx,rax
  40e437:	je     40e450 <xmlStrEqual@plt+0xa510>
  40e439:	nop    DWORD PTR [rax+0x0]
  40e440:	mov    rdx,QWORD PTR [rax+0x10]
  40e444:	mov    BYTE PTR [rdx+0x8],bl
  40e447:	mov    rax,QWORD PTR [rax+0x8]
  40e44b:	cmp    rcx,rax
  40e44e:	jne    40e440 <xmlStrEqual@plt+0xa500>
  40e450:	mov    rcx,QWORD PTR [r13+0x18]
  40e454:	mov    rax,QWORD PTR [rcx+0x8]
  40e458:	cmp    rcx,rax
  40e45b:	je     40e470 <xmlStrEqual@plt+0xa530>
  40e45d:	nop    DWORD PTR [rax]
  40e460:	mov    rdx,QWORD PTR [rax+0x10]
  40e464:	mov    BYTE PTR [rdx+0x8],bl
  40e467:	mov    rax,QWORD PTR [rax+0x8]
  40e46b:	cmp    rcx,rax
  40e46e:	jne    40e460 <xmlStrEqual@plt+0xa520>
  40e470:	cmp    BYTE PTR [r13+0x20],0x1
  40e475:	mov    rax,QWORD PTR [r13+0x8]
  40e479:	setne  BYTE PTR [r13+0x20]
  40e47e:	mov    rbx,QWORD PTR [rax+0x8]
  40e482:	cmp    rax,rbx
  40e485:	je     40e4c4 <xmlStrEqual@plt+0xa584>
  40e487:	nop    WORD PTR [rax+rax*1+0x0]
  40e490:	mov    r12,QWORD PTR [rbx+0x10]
  40e494:	mov    rdi,QWORD PTR [rbp+0x40]
  40e498:	mov    rax,QWORD PTR [rbp+0x38]
  40e49c:	mov    rsi,r12
  40e49f:	call   QWORD PTR [rax+0x30]
  40e4a2:	mov    rdi,r12
  40e4a5:	call   434ad0 <xmlStrEqual@plt+0x30b90>
  40e4aa:	mov    rsi,rax
  40e4ad:	mov    edx,0x1
  40e4b2:	mov    rdi,rbp
  40e4b5:	call   4089c0 <xmlStrEqual@plt+0x4a80>
  40e4ba:	mov    rbx,QWORD PTR [rbx+0x8]
  40e4be:	cmp    QWORD PTR [r13+0x8],rbx
  40e4c2:	jne    40e490 <xmlStrEqual@plt+0xa550>
  40e4c4:	lea    rdx,[r13+0x10]
  40e4c8:	lea    rsi,[r13+0x8]
  40e4cc:	mov    rdi,rbp
  40e4cf:	call   40dd70 <xmlStrEqual@plt+0x9e30>
  40e4d4:	mov    ebx,0x1
  40e4d9:	add    rsp,0x8
  40e4dd:	mov    eax,ebx
  40e4df:	pop    rbx
  40e4e0:	pop    rbp
  40e4e1:	pop    r12
  40e4e3:	pop    r13
  40e4e5:	ret    
  40e4e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40e4f0:	mov    rax,0x469e3c
  40e4f7:	xor    ebx,ebx
  40e4f9:	cmp    DWORD PTR [rax],0x1
  40e4fc:	jle    40e4d9 <xmlStrEqual@plt+0xa599>
  40e4fe:	mov    rdx,r12
  40e501:	lea    rsi,[rip+0x3bbc0]        # 44a0c8 <xmlStrEqual@plt+0x46188>
  40e508:	mov    edi,0x6
  40e50d:	xor    eax,eax
  40e50f:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  40e514:	jmp    40e4d9 <xmlStrEqual@plt+0xa599>
  40e516:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40e520:	lea    rdx,[rip+0x3bb01]        # 44a028 <xmlStrEqual@plt+0x460e8>
  40e527:	lea    rsi,[rip+0x3cd62]        # 44b290 <xmlStrEqual@plt+0x47350>
  40e52e:	lea    rdi,[rip+0x3cb5b]        # 44b090 <xmlStrEqual@plt+0x47150>
  40e535:	call   4350f0 <xmlStrEqual@plt+0x311b0>
  40e53a:	nop    WORD PTR [rax+rax*1+0x0]
  40e540:	push   r15
  40e542:	push   r14
  40e544:	push   r13
  40e546:	push   r12
  40e548:	mov    r12,rdi
  40e54b:	push   rbp
  40e54c:	push   rbx
  40e54d:	mov    rbx,rsi
  40e550:	sub    rsp,0x848
  40e557:	mov    rax,QWORD PTR fs:0x28
  40e560:	mov    QWORD PTR [rsp+0x838],rax
  40e568:	xor    eax,eax
  40e56a:	call   42dc90 <xmlStrEqual@plt+0x29d50>
  40e56f:	mov    r14,rax
  40e572:	mov    QWORD PTR [rsp+0x10],rax
  40e577:	mov    rax,QWORD PTR [r12]
  40e57b:	mov    rsi,r14
  40e57e:	mov    rdi,QWORD PTR [rax]
  40e581:	call   42dcf0 <xmlStrEqual@plt+0x29db0>
  40e586:	mov    rax,QWORD PTR [r12]
  40e58a:	mov    rsi,r14
  40e58d:	mov    rdi,QWORD PTR [rax+0x8]
  40e591:	call   42dcf0 <xmlStrEqual@plt+0x29db0>
  40e596:	mov    rsi,QWORD PTR [r12]
  40e59a:	mov    rax,QWORD PTR [rsi+0x10]
  40e59e:	mov    rdi,QWORD PTR [rax]
  40e5a1:	mov    edx,DWORD PTR [rdi]
  40e5a3:	test   edx,edx
  40e5a5:	je     40e5fc <xmlStrEqual@plt+0xa6bc>
  40e5a7:	xor    ebp,ebp
  40e5a9:	jmp    40e5b8 <xmlStrEqual@plt+0xa678>
  40e5ab:	mov    rax,QWORD PTR [rsi+0x10]
  40e5af:	inc    ebp
  40e5b1:	mov    rdi,QWORD PTR [rax]
  40e5b4:	cmp    ebp,DWORD PTR [rdi]
  40e5b6:	je     40e5fc <xmlStrEqual@plt+0xa6bc>
  40e5b8:	mov    ecx,ebp
  40e5ba:	mov    r8,QWORD PTR [rdi+0x10]
  40e5be:	lea    eax,[rbp+rbp*1+0x0]
  40e5c2:	and    eax,0x1e
  40e5c5:	shr    ecx,0x4
  40e5c8:	mov    edx,eax
  40e5ca:	mov    eax,DWORD PTR [r8+rcx*4]
  40e5ce:	shrx   eax,eax,edx
  40e5d3:	test   al,0x3
  40e5d5:	jne    40e5ab <xmlStrEqual@plt+0xa66b>
  40e5d7:	mov    rdx,QWORD PTR [rdi+0x20]
  40e5db:	mov    eax,ebp
  40e5dd:	mov    rdi,QWORD PTR [rdx+rax*8]
  40e5e1:	mov    rsi,QWORD PTR [rsp+0x10]
  40e5e6:	inc    ebp
  40e5e8:	call   42dcf0 <xmlStrEqual@plt+0x29db0>
  40e5ed:	mov    rsi,QWORD PTR [r12]
  40e5f1:	mov    rax,QWORD PTR [rsi+0x10]
  40e5f5:	mov    rdi,QWORD PTR [rax]
  40e5f8:	cmp    ebp,DWORD PTR [rdi]
  40e5fa:	jne    40e5b8 <xmlStrEqual@plt+0xa678>
  40e5fc:	mov    rax,QWORD PTR [rsi+0x18]
  40e600:	mov    rdi,QWORD PTR [rax]
  40e603:	mov    eax,DWORD PTR [rdi]
  40e605:	test   eax,eax
  40e607:	je     40e65e <xmlStrEqual@plt+0xa71e>
  40e609:	xor    ebp,ebp
  40e60b:	jmp    40e61a <xmlStrEqual@plt+0xa6da>
  40e60d:	mov    rax,QWORD PTR [rsi+0x18]
  40e611:	inc    ebp
  40e613:	mov    rdi,QWORD PTR [rax]
  40e616:	cmp    ebp,DWORD PTR [rdi]
  40e618:	je     40e65e <xmlStrEqual@plt+0xa71e>
  40e61a:	mov    ecx,ebp
  40e61c:	mov    r8,QWORD PTR [rdi+0x10]
  40e620:	lea    eax,[rbp+rbp*1+0x0]
  40e624:	and    eax,0x1e
  40e627:	shr    ecx,0x4
  40e62a:	mov    edx,eax
  40e62c:	mov    eax,DWORD PTR [r8+rcx*4]
  40e630:	shrx   eax,eax,edx
  40e635:	test   al,0x3
  40e637:	jne    40e60d <xmlStrEqual@plt+0xa6cd>
  40e639:	mov    rdx,QWORD PTR [rdi+0x20]
  40e63d:	mov    eax,ebp
  40e63f:	mov    rdi,QWORD PTR [rdx+rax*8]
  40e643:	mov    rsi,QWORD PTR [rsp+0x10]
  40e648:	inc    ebp
  40e64a:	call   42dcf0 <xmlStrEqual@plt+0x29db0>
  40e64f:	mov    rsi,QWORD PTR [r12]
  40e653:	mov    rax,QWORD PTR [rsi+0x18]
  40e657:	mov    rdi,QWORD PTR [rax]
  40e65a:	cmp    ebp,DWORD PTR [rdi]
  40e65c:	jne    40e61a <xmlStrEqual@plt+0xa6da>
  40e65e:	mov    r14,QWORD PTR [rsp+0x10]
  40e663:	mov    rdi,QWORD PTR [rsi+0x20]
  40e667:	mov    rsi,r14
  40e66a:	call   42dcf0 <xmlStrEqual@plt+0x29db0>
  40e66f:	mov    rax,QWORD PTR [r12]
  40e673:	mov    rsi,r14
  40e676:	mov    rdi,QWORD PTR [rax+0x20]
  40e67a:	call   42dcf0 <xmlStrEqual@plt+0x29db0>
  40e67f:	mov    rcx,QWORD PTR [r14+0x8]
  40e683:	mov    QWORD PTR [rsp+0x8],rcx
  40e688:	cmp    r14,rcx
  40e68b:	je     40e7d9 <xmlStrEqual@plt+0xa899>
  40e691:	lea    rax,[rsp+0x20]
  40e696:	mov    QWORD PTR [rsp+0x18],rax
  40e69b:	lea    rax,[rsp+0x430]
  40e6a3:	mov    QWORD PTR [rsp],rax
  40e6a7:	nop    WORD PTR [rax+rax*1+0x0]
  40e6b0:	mov    rax,QWORD PTR [rsp+0x8]
  40e6b5:	mov    rax,QWORD PTR [rax+0x10]
  40e6b9:	mov    r14,QWORD PTR [rax]
  40e6bc:	test   r14,r14
  40e6bf:	je     40e7c0 <xmlStrEqual@plt+0xa880>
  40e6c5:	mov    rbp,QWORD PTR [rsp+0x18]
  40e6ca:	nop    WORD PTR [rax+rax*1+0x0]
  40e6d0:	cmp    QWORD PTR [r14+0x8],0x0
  40e6d5:	jne    40e703 <xmlStrEqual@plt+0xa7c3>
  40e6d7:	mov    rax,QWORD PTR [r14+0x10]
  40e6db:	mov    r14,QWORD PTR [r14+0x18]
  40e6df:	test   rax,rax
  40e6e2:	je     40e790 <xmlStrEqual@plt+0xa850>
  40e6e8:	test   r14,r14
  40e6eb:	je     40e7b8 <xmlStrEqual@plt+0xa878>
  40e6f1:	mov    QWORD PTR [rbp+0x0],r14
  40e6f5:	mov    r14,rax
  40e6f8:	add    rbp,0x8
  40e6fc:	cmp    QWORD PTR [r14+0x8],0x0
  40e701:	je     40e6d7 <xmlStrEqual@plt+0xa797>
  40e703:	mov    rax,QWORD PTR [r14+0x28]
  40e707:	mov    r12,QWORD PTR [rax]
  40e70a:	test   r12,r12
  40e70d:	je     40e6d7 <xmlStrEqual@plt+0xa797>
  40e70f:	mov    r13,QWORD PTR [rsp]
  40e713:	jmp    40e728 <xmlStrEqual@plt+0xa7e8>
  40e715:	nop    DWORD PTR [rax]
  40e718:	test   rdx,rdx
  40e71b:	je     40e725 <xmlStrEqual@plt+0xa7e5>
  40e71d:	mov    QWORD PTR [r13+0x0],rdx
  40e721:	add    r13,0x8
  40e725:	mov    r12,rax
  40e728:	cmp    QWORD PTR [r12+0x8],0x0
  40e72e:	je     40e755 <xmlStrEqual@plt+0xa815>
  40e730:	mov    r15,QWORD PTR [r12+0x28]
  40e735:	test   r15,r15
  40e738:	je     40e755 <xmlStrEqual@plt+0xa815>
  40e73a:	mov    rdi,r15
  40e73d:	call   434a40 <xmlStrEqual@plt+0x30b00>
  40e742:	mov    rdi,rax
  40e745:	mov    rsi,rbx
  40e748:	call   42b960 <xmlStrEqual@plt+0x27a20>
  40e74d:	cmp    al,0x1
  40e74f:	je     40e818 <xmlStrEqual@plt+0xa8d8>
  40e755:	mov    rax,QWORD PTR [r12+0x10]
  40e75a:	mov    rdx,QWORD PTR [r12+0x18]
  40e75f:	test   rax,rax
  40e762:	jne    40e718 <xmlStrEqual@plt+0xa7d8>
  40e764:	mov    rax,rdx
  40e767:	test   rdx,rdx
  40e76a:	jne    40e725 <xmlStrEqual@plt+0xa7e5>
  40e76c:	cmp    r13,QWORD PTR [rsp]
  40e770:	je     40e6d7 <xmlStrEqual@plt+0xa797>
  40e776:	mov    r12,QWORD PTR [r13-0x8]
  40e77a:	lea    rax,[r13-0x8]
  40e77e:	test   r12,r12
  40e781:	je     40e6d7 <xmlStrEqual@plt+0xa797>
  40e787:	mov    r13,rax
  40e78a:	jmp    40e728 <xmlStrEqual@plt+0xa7e8>
  40e78c:	nop    DWORD PTR [rax+0x0]
  40e790:	test   r14,r14
  40e793:	jne    40e6d0 <xmlStrEqual@plt+0xa790>
  40e799:	cmp    rbp,QWORD PTR [rsp+0x18]
  40e79e:	je     40e7c0 <xmlStrEqual@plt+0xa880>
  40e7a0:	mov    r14,QWORD PTR [rbp-0x8]
  40e7a4:	test   r14,r14
  40e7a7:	je     40e7c0 <xmlStrEqual@plt+0xa880>
  40e7a9:	sub    rbp,0x8
  40e7ad:	jmp    40e6d0 <xmlStrEqual@plt+0xa790>
  40e7b2:	nop    WORD PTR [rax+rax*1+0x0]
  40e7b8:	mov    r14,rax
  40e7bb:	jmp    40e6d0 <xmlStrEqual@plt+0xa790>
  40e7c0:	mov    rax,QWORD PTR [rsp+0x8]
  40e7c5:	mov    rax,QWORD PTR [rax+0x8]
  40e7c9:	mov    QWORD PTR [rsp+0x8],rax
  40e7ce:	cmp    QWORD PTR [rsp+0x10],rax
  40e7d3:	jne    40e6b0 <xmlStrEqual@plt+0xa770>
  40e7d9:	mov    rdi,QWORD PTR [rsp+0x10]
  40e7de:	xor    r15d,r15d
  40e7e1:	call   42e2b0 <xmlStrEqual@plt+0x2a370>
  40e7e6:	mov    rax,0x469e3c
  40e7ed:	cmp    DWORD PTR [rax],0x1
  40e7f0:	jle    40e822 <xmlStrEqual@plt+0xa8e2>
  40e7f2:	mov    rdi,QWORD PTR [rbx]
  40e7f5:	call   424d40 <xmlStrEqual@plt+0x20e00>
  40e7fa:	mov    rdx,rax
  40e7fd:	lea    rsi,[rip+0x3b914]        # 44a118 <xmlStrEqual@plt+0x461d8>
  40e804:	mov    edi,0x6
  40e809:	xor    eax,eax
  40e80b:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  40e810:	jmp    40e822 <xmlStrEqual@plt+0xa8e2>
  40e812:	nop    WORD PTR [rax+rax*1+0x0]
  40e818:	mov    rdi,QWORD PTR [rsp+0x10]
  40e81d:	call   42e2b0 <xmlStrEqual@plt+0x2a370>
  40e822:	mov    rcx,QWORD PTR [rsp+0x838]
  40e82a:	xor    rcx,QWORD PTR fs:0x28
  40e833:	mov    rax,r15
  40e836:	jne    40e84a <xmlStrEqual@plt+0xa90a>
  40e838:	add    rsp,0x848
  40e83f:	pop    rbx
  40e840:	pop    rbp
  40e841:	pop    r12
  40e843:	pop    r13
  40e845:	pop    r14
  40e847:	pop    r15
  40e849:	ret    
  40e84a:	call   403c00 <__stack_chk_fail@plt>
  40e84f:	nop
  40e850:	endbr64 
  40e854:	push   r15
  40e856:	push   r14
  40e858:	push   r13
  40e85a:	push   r12
  40e85c:	push   rbp
  40e85d:	push   rbx
  40e85e:	mov    rbx,rdi
  40e861:	sub    rsp,0x88
  40e868:	mov    rax,QWORD PTR fs:0x28
  40e871:	mov    QWORD PTR [rsp+0x78],rax
  40e876:	xor    eax,eax
  40e878:	call   43b440 <xmlStrEqual@plt+0x37500>
  40e87d:	mov    rdi,rbx
  40e880:	mov    rbp,rax
  40e883:	call   43b460 <xmlStrEqual@plt+0x37520>
  40e888:	mov    rdi,rbx
  40e88b:	mov    r12,rax
  40e88e:	call   43b430 <xmlStrEqual@plt+0x374f0>
  40e893:	mov    rdi,QWORD PTR [rbp+0x0]
  40e897:	mov    r15,rax
  40e89a:	call   434a40 <xmlStrEqual@plt+0x30b00>
  40e89f:	mov    QWORD PTR [rsp+0x8],rax
  40e8a4:	mov    rax,QWORD PTR [rbp+0x8]
  40e8a8:	mov    rdi,r12
  40e8ab:	mov    QWORD PTR [rsp+0x10],rax
  40e8b0:	mov    r13,QWORD PTR [rbp+0x10]
  40e8b4:	call   435dd0 <xmlStrEqual@plt+0x31e90>
  40e8b9:	cmp    eax,DWORD PTR [r15+0x20]
  40e8bd:	jg     40ea40 <xmlStrEqual@plt+0xab00>
  40e8c3:	xor    eax,eax
  40e8c5:	call   435c70 <xmlStrEqual@plt+0x31d30>
  40e8ca:	mov    rdi,r12
  40e8cd:	mov    QWORD PTR [rsp+0x18],rax
  40e8d2:	call   435dd0 <xmlStrEqual@plt+0x31e90>
  40e8d7:	test   eax,eax
  40e8d9:	jle    40eab0 <xmlStrEqual@plt+0xab70>
  40e8df:	mov    rbp,0x469e3c
  40e8e6:	mov    ecx,DWORD PTR [rbp+0x0]
  40e8e9:	test   ecx,ecx
  40e8eb:	jle    40e944 <xmlStrEqual@plt+0xaa04>
  40e8ed:	mov    rdi,r12
  40e8f0:	call   435dd0 <xmlStrEqual@plt+0x31e90>
  40e8f5:	mov    DWORD PTR [rsp+0x2c],eax
  40e8f9:	mov    rax,QWORD PTR [rsp+0x10]
  40e8fe:	mov    rdi,QWORD PTR [rax]
  40e901:	call   424d40 <xmlStrEqual@plt+0x20e00>
  40e906:	mov    rdi,QWORD PTR [r13+0x0]
  40e90a:	mov    QWORD PTR [rsp+0x20],rax
  40e90f:	call   424d40 <xmlStrEqual@plt+0x20e00>
  40e914:	mov    rdi,QWORD PTR [rsp+0x8]
  40e919:	mov    r14,rax
  40e91c:	call   424d40 <xmlStrEqual@plt+0x20e00>
  40e921:	mov    r9d,DWORD PTR [rsp+0x2c]
  40e926:	mov    r8,QWORD PTR [rsp+0x20]
  40e92b:	mov    rdx,rax
  40e92e:	mov    rcx,r14
  40e931:	lea    rsi,[rip+0x3b830]        # 44a168 <xmlStrEqual@plt+0x46228>
  40e938:	mov    edi,0x5
  40e93d:	xor    eax,eax
  40e93f:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  40e944:	movzx  esi,BYTE PTR [r13+0x8]
  40e949:	mov    rdi,QWORD PTR [rsp+0x8]
  40e94e:	call   4246b0 <xmlStrEqual@plt+0x20770>
  40e953:	mov    r14,rax
  40e956:	test   rax,rax
  40e959:	je     40eaa7 <xmlStrEqual@plt+0xab67>
  40e95f:	movzx  esi,WORD PTR [rax+0x24]
  40e963:	cmp    si,0xffff
  40e967:	je     403faa <xmlStrEqual@plt+0x6a>
  40e96d:	add    rsi,QWORD PTR [rax+0x30]
  40e971:	mov    rax,QWORD PTR [rsp+0x18]
  40e976:	mov    rcx,QWORD PTR [r13+0x10]
  40e97a:	mov    QWORD PTR [rsi+0x4],rax
  40e97e:	mov    rdi,r14
  40e981:	add    rsi,0xc
  40e985:	movzx  edx,BYTE PTR [r13+0x8]
  40e98a:	call   424260 <xmlStrEqual@plt+0x20320>
  40e98f:	mov    r10d,eax
  40e992:	cmp    eax,0x1
  40e995:	jne    40eaa7 <xmlStrEqual@plt+0xab67>
  40e99b:	mov    rax,QWORD PTR [rsp+0x10]
  40e9a0:	mov    r13,QWORD PTR [r13+0x0]
  40e9a4:	mov    r11,QWORD PTR [rax]
  40e9a7:	mov    eax,DWORD PTR [rbp+0x0]
  40e9aa:	test   eax,eax
  40e9ac:	jg     40eb20 <xmlStrEqual@plt+0xabe0>
  40e9b2:	lea    rbp,[rsp+0x30]
  40e9b7:	mov    r8,r13
  40e9ba:	mov    rcx,r11
  40e9bd:	mov    edx,0x10f6
  40e9c2:	mov    esi,0x10f6
  40e9c7:	mov    rdi,rbp
  40e9ca:	mov    DWORD PTR [rsp+0x8],r10d
  40e9cf:	call   439130 <xmlStrEqual@plt+0x351f0>
  40e9d4:	mov    rdx,rbp
  40e9d7:	mov    rsi,r14
  40e9da:	mov    rdi,r15
  40e9dd:	call   4089b0 <xmlStrEqual@plt+0x4a70>
  40e9e2:	mov    rdi,r14
  40e9e5:	call   430820 <xmlStrEqual@plt+0x2c8e0>
  40e9ea:	mov    rax,0x475860
  40e9f1:	mov    rsi,QWORD PTR [rsp+0x18]
  40e9f6:	mov    rdi,QWORD PTR [rax]
  40e9f9:	mov    rdx,r12
  40e9fc:	call   4351f0 <xmlStrEqual@plt+0x312b0>
  40ea01:	mov    esi,0x3
  40ea06:	mov    rdi,rbx
  40ea09:	call   43b470 <xmlStrEqual@plt+0x37530>
  40ea0e:	mov    r10d,DWORD PTR [rsp+0x8]
  40ea13:	mov    rcx,QWORD PTR [rsp+0x78]
  40ea18:	xor    rcx,QWORD PTR fs:0x28
  40ea21:	mov    eax,r10d
  40ea24:	jne    40eb79 <xmlStrEqual@plt+0xac39>
  40ea2a:	add    rsp,0x88
  40ea31:	pop    rbx
  40ea32:	pop    rbp
  40ea33:	pop    r12
  40ea35:	pop    r13
  40ea37:	pop    r14
  40ea39:	pop    r15
  40ea3b:	ret    
  40ea3c:	nop    DWORD PTR [rax+0x0]
  40ea40:	mov    rax,0x475860
  40ea47:	mov    rsi,r12
  40ea4a:	mov    rdi,QWORD PTR [rax]
  40ea4d:	call   435af0 <xmlStrEqual@plt+0x31bb0>
  40ea52:	mov    esi,0x3c
  40ea57:	mov    rdi,rbx
  40ea5a:	call   43b470 <xmlStrEqual@plt+0x37530>
  40ea5f:	mov    rax,QWORD PTR [rsp+0x10]
  40ea64:	mov    rdi,QWORD PTR [rax]
  40ea67:	call   424d40 <xmlStrEqual@plt+0x20e00>
  40ea6c:	mov    rdi,QWORD PTR [r13+0x0]
  40ea70:	mov    rbp,rax
  40ea73:	call   424d40 <xmlStrEqual@plt+0x20e00>
  40ea78:	mov    rdi,QWORD PTR [rsp+0x8]
  40ea7d:	mov    rbx,rax
  40ea80:	call   424d40 <xmlStrEqual@plt+0x20e00>
  40ea85:	mov    rdx,rax
  40ea88:	mov    r9d,0x3c
  40ea8e:	mov    r8,rbp
  40ea91:	mov    rcx,rbx
  40ea94:	lea    rsi,[rip+0x3b755]        # 44a1f0 <xmlStrEqual@plt+0x462b0>
  40ea9b:	mov    edi,0x3
  40eaa0:	xor    eax,eax
  40eaa2:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  40eaa7:	xor    r10d,r10d
  40eaaa:	jmp    40ea13 <xmlStrEqual@plt+0xaad3>
  40eaaf:	nop
  40eab0:	mov    rdi,QWORD PTR [rbp+0x0]
  40eab4:	mov    rsi,QWORD PTR [rsp+0x10]
  40eab9:	call   40d7f0 <xmlStrEqual@plt+0x98b0>
  40eabe:	mov    rbp,0x469e3c
  40eac5:	mov    edx,DWORD PTR [rbp+0x0]
  40eac8:	test   edx,edx
  40eaca:	jle    40e944 <xmlStrEqual@plt+0xaa04>
  40ead0:	mov    rax,QWORD PTR [rsp+0x10]
  40ead5:	mov    rdi,QWORD PTR [rax]
  40ead8:	call   424d40 <xmlStrEqual@plt+0x20e00>
  40eadd:	mov    rdi,QWORD PTR [r13+0x0]
  40eae1:	mov    QWORD PTR [rsp+0x20],rax
  40eae6:	call   424d40 <xmlStrEqual@plt+0x20e00>
  40eaeb:	mov    rdi,QWORD PTR [rsp+0x8]
  40eaf0:	mov    r14,rax
  40eaf3:	call   424d40 <xmlStrEqual@plt+0x20e00>
  40eaf8:	mov    r8,QWORD PTR [rsp+0x20]
  40eafd:	mov    rdx,rax
  40eb00:	mov    rcx,r14
  40eb03:	lea    rsi,[rip+0x3b6ae]        # 44a1b8 <xmlStrEqual@plt+0x46278>
  40eb0a:	mov    edi,0x5
  40eb0f:	xor    eax,eax
  40eb11:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  40eb16:	jmp    40e944 <xmlStrEqual@plt+0xaa04>
  40eb1b:	nop    DWORD PTR [rax+rax*1+0x0]
  40eb20:	mov    rdi,r13
  40eb23:	mov    DWORD PTR [rsp+0x20],r10d
  40eb28:	mov    QWORD PTR [rsp+0x10],r11
  40eb2d:	call   424d40 <xmlStrEqual@plt+0x20e00>
  40eb32:	mov    rdi,QWORD PTR [rsp+0x8]
  40eb37:	mov    rbp,rax
  40eb3a:	call   424d40 <xmlStrEqual@plt+0x20e00>
  40eb3f:	mov    rdi,r14
  40eb42:	mov    QWORD PTR [rsp+0x8],rax
  40eb47:	call   423f50 <xmlStrEqual@plt+0x20010>
  40eb4c:	mov    rcx,QWORD PTR [rsp+0x8]
  40eb51:	mov    rdx,rax
  40eb54:	mov    r8,rbp
  40eb57:	lea    rsi,[rip+0x3c571]        # 44b0cf <xmlStrEqual@plt+0x4718f>
  40eb5e:	mov    edi,0x5
  40eb63:	xor    eax,eax
  40eb65:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  40eb6a:	mov    r10d,DWORD PTR [rsp+0x20]
  40eb6f:	mov    r11,QWORD PTR [rsp+0x10]
  40eb74:	jmp    40e9b2 <xmlStrEqual@plt+0xaa72>
  40eb79:	call   403c00 <__stack_chk_fail@plt>
  40eb7e:	xchg   ax,ax
  40eb80:	endbr64 
  40eb84:	push   r15
  40eb86:	push   r14
  40eb88:	push   r13
  40eb8a:	push   r12
  40eb8c:	push   rbp
  40eb8d:	push   rbx
  40eb8e:	sub    rsp,0x848
  40eb95:	mov    rax,QWORD PTR fs:0x28
  40eb9e:	mov    QWORD PTR [rsp+0x838],rax
  40eba6:	xor    eax,eax
  40eba8:	mov    rax,0x469600
  40ebaf:	cmp    QWORD PTR [rdi+0x8],rax
  40ebb3:	jne    40eec8 <xmlStrEqual@plt+0xaf88>
  40ebb9:	mov    rbx,rdi
  40ebbc:	lea    rdi,[rdi+0x18]
  40ebc0:	call   40be60 <xmlStrEqual@plt+0x7f20>
  40ebc5:	call   42dc90 <xmlStrEqual@plt+0x29d50>
  40ebca:	mov    r15,rax
  40ebcd:	mov    QWORD PTR [rsp+0x18],rax
  40ebd2:	mov    rax,QWORD PTR [rbx+0x70]
  40ebd6:	mov    rsi,r15
  40ebd9:	mov    rax,QWORD PTR [rax]
  40ebdc:	mov    rdi,QWORD PTR [rax]
  40ebdf:	call   42dcf0 <xmlStrEqual@plt+0x29db0>
  40ebe4:	mov    rax,QWORD PTR [rbx+0x70]
  40ebe8:	mov    rsi,r15
  40ebeb:	mov    rax,QWORD PTR [rax]
  40ebee:	mov    rdi,QWORD PTR [rax+0x8]
  40ebf2:	call   42dcf0 <xmlStrEqual@plt+0x29db0>
  40ebf7:	mov    rsi,QWORD PTR [rbx+0x70]
  40ebfb:	mov    rax,QWORD PTR [rsi]
  40ebfe:	mov    rdx,QWORD PTR [rax+0x10]
  40ec02:	mov    rdi,QWORD PTR [rdx]
  40ec05:	mov    ecx,DWORD PTR [rdi]
  40ec07:	test   ecx,ecx
  40ec09:	je     40ec66 <xmlStrEqual@plt+0xad26>
  40ec0b:	xor    ebp,ebp
  40ec0d:	jmp    40ec1f <xmlStrEqual@plt+0xacdf>
  40ec0f:	mov    rax,QWORD PTR [rsi]
  40ec12:	inc    ebp
  40ec14:	mov    rdx,QWORD PTR [rax+0x10]
  40ec18:	mov    rdi,QWORD PTR [rdx]
  40ec1b:	cmp    DWORD PTR [rdi],ebp
  40ec1d:	je     40ec66 <xmlStrEqual@plt+0xad26>
  40ec1f:	mov    ecx,ebp
  40ec21:	mov    r8,QWORD PTR [rdi+0x10]
  40ec25:	lea    eax,[rbp+rbp*1+0x0]
  40ec29:	and    eax,0x1e
  40ec2c:	shr    ecx,0x4
  40ec2f:	mov    edx,eax
  40ec31:	mov    eax,DWORD PTR [r8+rcx*4]
  40ec35:	shrx   eax,eax,edx
  40ec3a:	test   al,0x3
  40ec3c:	jne    40ec0f <xmlStrEqual@plt+0xaccf>
  40ec3e:	mov    rdx,QWORD PTR [rdi+0x20]
  40ec42:	mov    eax,ebp
  40ec44:	mov    rdi,QWORD PTR [rdx+rax*8]
  40ec48:	mov    rsi,QWORD PTR [rsp+0x18]
  40ec4d:	inc    ebp
  40ec4f:	call   42dcf0 <xmlStrEqual@plt+0x29db0>
  40ec54:	mov    rsi,QWORD PTR [rbx+0x70]
  40ec58:	mov    rax,QWORD PTR [rsi]
  40ec5b:	mov    rdx,QWORD PTR [rax+0x10]
  40ec5f:	mov    rdi,QWORD PTR [rdx]
  40ec62:	cmp    DWORD PTR [rdi],ebp
  40ec64:	jne    40ec1f <xmlStrEqual@plt+0xacdf>
  40ec66:	mov    rdx,QWORD PTR [rax+0x18]
  40ec6a:	mov    rdi,QWORD PTR [rdx]
  40ec6d:	mov    edx,DWORD PTR [rdi]
  40ec6f:	test   edx,edx
  40ec71:	je     40ecce <xmlStrEqual@plt+0xad8e>
  40ec73:	xor    ebp,ebp
  40ec75:	jmp    40ec87 <xmlStrEqual@plt+0xad47>
  40ec77:	mov    rax,QWORD PTR [rsi]
  40ec7a:	inc    ebp
  40ec7c:	mov    rdx,QWORD PTR [rax+0x18]
  40ec80:	mov    rdi,QWORD PTR [rdx]
  40ec83:	cmp    DWORD PTR [rdi],ebp
  40ec85:	je     40ecce <xmlStrEqual@plt+0xad8e>
  40ec87:	mov    ecx,ebp
  40ec89:	mov    r8,QWORD PTR [rdi+0x10]
  40ec8d:	lea    eax,[rbp+rbp*1+0x0]
  40ec91:	and    eax,0x1e
  40ec94:	shr    ecx,0x4
  40ec97:	mov    edx,eax
  40ec99:	mov    eax,DWORD PTR [r8+rcx*4]
  40ec9d:	shrx   eax,eax,edx
  40eca2:	test   al,0x3
  40eca4:	jne    40ec77 <xmlStrEqual@plt+0xad37>
  40eca6:	mov    rdx,QWORD PTR [rdi+0x20]
  40ecaa:	mov    eax,ebp
  40ecac:	mov    rdi,QWORD PTR [rdx+rax*8]
  40ecb0:	mov    rsi,QWORD PTR [rsp+0x18]
  40ecb5:	inc    ebp
  40ecb7:	call   42dcf0 <xmlStrEqual@plt+0x29db0>
  40ecbc:	mov    rsi,QWORD PTR [rbx+0x70]
  40ecc0:	mov    rax,QWORD PTR [rsi]
  40ecc3:	mov    rdx,QWORD PTR [rax+0x18]
  40ecc7:	mov    rdi,QWORD PTR [rdx]
  40ecca:	cmp    DWORD PTR [rdi],ebp
  40eccc:	jne    40ec87 <xmlStrEqual@plt+0xad47>
  40ecce:	mov    r15,QWORD PTR [rsp+0x18]
  40ecd3:	mov    rdi,QWORD PTR [rax+0x20]
  40ecd7:	mov    rsi,r15
  40ecda:	call   42dcf0 <xmlStrEqual@plt+0x29db0>
  40ecdf:	mov    rax,QWORD PTR [rbx+0x70]
  40ece3:	mov    rsi,r15
  40ece6:	mov    rax,QWORD PTR [rax]
  40ece9:	lea    r12,[rsp+0x430]
  40ecf1:	mov    rdi,QWORD PTR [rax+0x20]
  40ecf5:	call   42dcf0 <xmlStrEqual@plt+0x29db0>
  40ecfa:	mov    rax,QWORD PTR [r15+0x8]
  40ecfe:	lea    rcx,[rsp+0x20]
  40ed03:	mov    QWORD PTR [rsp+0x8],rax
  40ed08:	mov    QWORD PTR [rsp+0x10],rcx
  40ed0d:	cmp    r15,rax
  40ed10:	je     40ee25 <xmlStrEqual@plt+0xaee5>
  40ed16:	mov    rax,QWORD PTR [rsp+0x8]
  40ed1b:	mov    rax,QWORD PTR [rax+0x10]
  40ed1f:	mov    r15,QWORD PTR [rax]
  40ed22:	test   r15,r15
  40ed25:	je     40ee0c <xmlStrEqual@plt+0xaecc>
  40ed2b:	mov    rbp,QWORD PTR [rsp+0x10]
  40ed30:	jmp    40ed59 <xmlStrEqual@plt+0xae19>
  40ed32:	nop    WORD PTR [rax+rax*1+0x0]
  40ed38:	mov    rax,QWORD PTR [r15+0x10]
  40ed3c:	mov    rdx,QWORD PTR [r15+0x18]
  40ed40:	test   rax,rax
  40ed43:	je     40edf0 <xmlStrEqual@plt+0xaeb0>
  40ed49:	test   rdx,rdx
  40ed4c:	je     40ed56 <xmlStrEqual@plt+0xae16>
  40ed4e:	mov    QWORD PTR [rbp+0x0],rdx
  40ed52:	add    rbp,0x8
  40ed56:	mov    r15,rax
  40ed59:	cmp    QWORD PTR [r15+0x8],0x0
  40ed5e:	je     40ed38 <xmlStrEqual@plt+0xadf8>
  40ed60:	mov    rax,QWORD PTR [r15+0x28]
  40ed64:	mov    r13,QWORD PTR [rax]
  40ed67:	test   r13,r13
  40ed6a:	je     40ed38 <xmlStrEqual@plt+0xadf8>
  40ed6c:	mov    r14,r12
  40ed6f:	nop
  40ed70:	cmp    QWORD PTR [r13+0x8],0x0
  40ed75:	je     40ed90 <xmlStrEqual@plt+0xae50>
  40ed77:	mov    rdi,QWORD PTR [r13+0x28]
  40ed7b:	test   rdi,rdi
  40ed7e:	je     40ed90 <xmlStrEqual@plt+0xae50>
  40ed80:	call   434a40 <xmlStrEqual@plt+0x30b00>
  40ed85:	mov    rsi,rax
  40ed88:	mov    rdi,rbx
  40ed8b:	call   408860 <xmlStrEqual@plt+0x4920>
  40ed90:	mov    rax,QWORD PTR [r13+0x10]
  40ed94:	mov    r13,QWORD PTR [r13+0x18]
  40ed98:	test   rax,rax
  40ed9b:	je     40edc0 <xmlStrEqual@plt+0xae80>
  40ed9d:	test   r13,r13
  40eda0:	je     40ede8 <xmlStrEqual@plt+0xaea8>
  40eda2:	mov    QWORD PTR [r14],r13
  40eda5:	mov    r13,rax
  40eda8:	add    r14,0x8
  40edac:	cmp    QWORD PTR [r13+0x8],0x0
  40edb1:	jne    40ed77 <xmlStrEqual@plt+0xae37>
  40edb3:	mov    rax,QWORD PTR [r13+0x10]
  40edb7:	mov    r13,QWORD PTR [r13+0x18]
  40edbb:	test   rax,rax
  40edbe:	jne    40ed9d <xmlStrEqual@plt+0xae5d>
  40edc0:	test   r13,r13
  40edc3:	jne    40ed70 <xmlStrEqual@plt+0xae30>
  40edc5:	cmp    r14,r12
  40edc8:	je     40ed38 <xmlStrEqual@plt+0xadf8>
  40edce:	mov    r13,QWORD PTR [r14-0x8]
  40edd2:	test   r13,r13
  40edd5:	je     40ed38 <xmlStrEqual@plt+0xadf8>
  40eddb:	sub    r14,0x8
  40eddf:	jmp    40ed70 <xmlStrEqual@plt+0xae30>
  40ede1:	nop    DWORD PTR [rax+0x0]
  40ede8:	mov    r13,rax
  40edeb:	jmp    40ed70 <xmlStrEqual@plt+0xae30>
  40edf0:	mov    rax,rdx
  40edf3:	test   rdx,rdx
  40edf6:	jne    40ed56 <xmlStrEqual@plt+0xae16>
  40edfc:	cmp    rbp,QWORD PTR [rsp+0x10]
  40ee01:	je     40ee0c <xmlStrEqual@plt+0xaecc>
  40ee03:	mov    r15,QWORD PTR [rbp-0x8]
  40ee07:	test   r15,r15
  40ee0a:	jne    40ee88 <xmlStrEqual@plt+0xaf48>
  40ee0c:	mov    rax,QWORD PTR [rsp+0x8]
  40ee11:	mov    rax,QWORD PTR [rax+0x8]
  40ee15:	mov    QWORD PTR [rsp+0x8],rax
  40ee1a:	cmp    QWORD PTR [rsp+0x18],rax
  40ee1f:	jne    40ed16 <xmlStrEqual@plt+0xadd6>
  40ee25:	mov    rdi,QWORD PTR [rsp+0x18]
  40ee2a:	call   42e2b0 <xmlStrEqual@plt+0x2a370>
  40ee2f:	mov    rdi,QWORD PTR [rbx+0x70]
  40ee33:	call   408db0 <xmlStrEqual@plt+0x4e70>
  40ee38:	mov    rdi,QWORD PTR [rbx+0x68]
  40ee3c:	call   42e2b0 <xmlStrEqual@plt+0x2a370>
  40ee41:	mov    rdi,QWORD PTR [rbx+0x78]
  40ee45:	call   42e2b0 <xmlStrEqual@plt+0x2a370>
  40ee4a:	mov    rdi,QWORD PTR [rbx+0xa0]
  40ee51:	call   43b4e0 <xmlStrEqual@plt+0x375a0>
  40ee56:	mov    rax,0x469e3c
  40ee5d:	mov    eax,DWORD PTR [rax]
  40ee5f:	test   eax,eax
  40ee61:	jg     40ee91 <xmlStrEqual@plt+0xaf51>
  40ee63:	mov    rax,QWORD PTR [rsp+0x838]
  40ee6b:	xor    rax,QWORD PTR fs:0x28
  40ee74:	jne    40eee2 <xmlStrEqual@plt+0xafa2>
  40ee76:	add    rsp,0x848
  40ee7d:	pop    rbx
  40ee7e:	pop    rbp
  40ee7f:	pop    r12
  40ee81:	pop    r13
  40ee83:	pop    r14
  40ee85:	pop    r15
  40ee87:	ret    
  40ee88:	sub    rbp,0x8
  40ee8c:	jmp    40ed59 <xmlStrEqual@plt+0xae19>
  40ee91:	mov    rax,QWORD PTR [rsp+0x838]
  40ee99:	xor    rax,QWORD PTR fs:0x28
  40eea2:	jne    40eee2 <xmlStrEqual@plt+0xafa2>
  40eea4:	add    rsp,0x848
  40eeab:	pop    rbx
  40eeac:	pop    rbp
  40eead:	pop    r12
  40eeaf:	pop    r13
  40eeb1:	pop    r14
  40eeb3:	lea    rsi,[rip+0x3c229]        # 44b0e3 <xmlStrEqual@plt+0x471a3>
  40eeba:	mov    edi,0x5
  40eebf:	xor    eax,eax
  40eec1:	pop    r15
  40eec3:	jmp    430e20 <xmlStrEqual@plt+0x2cee0>
  40eec8:	lea    rdx,[rip+0x3b159]        # 44a028 <xmlStrEqual@plt+0x460e8>
  40eecf:	lea    rsi,[rip+0x3c3ba]        # 44b290 <xmlStrEqual@plt+0x47350>
  40eed6:	lea    rdi,[rip+0x3c1b3]        # 44b090 <xmlStrEqual@plt+0x47150>
  40eedd:	call   4350f0 <xmlStrEqual@plt+0x311b0>
  40eee2:	call   403c00 <__stack_chk_fail@plt>
  40eee7:	nop    WORD PTR [rax+rax*1+0x0]
  40eef0:	endbr64 
  40eef4:	push   r15
  40eef6:	push   r14
  40eef8:	push   r13
  40eefa:	push   r12
  40eefc:	push   rbp
  40eefd:	push   rbx
  40eefe:	sub    rsp,0x28
  40ef02:	mov    rax,0x469600
  40ef09:	cmp    QWORD PTR [rdi+0x8],rax
  40ef0d:	jne    40f180 <xmlStrEqual@plt+0xb240>
  40ef13:	xor    eax,eax
  40ef15:	mov    rbx,rdi
  40ef18:	mov    rbp,rsi
  40ef1b:	call   421ff0 <xmlStrEqual@plt+0x1e0b0>
  40ef20:	mov    r12,rax
  40ef23:	test   rax,rax
  40ef26:	je     40f1a0 <xmlStrEqual@plt+0xb260>
  40ef2c:	mov    rdi,QWORD PTR [rbx+0x70]
  40ef30:	xor    edx,edx
  40ef32:	mov    rsi,rbp
  40ef35:	call   408e50 <xmlStrEqual@plt+0x4f10>
  40ef3a:	mov    r13,rax
  40ef3d:	test   rax,rax
  40ef40:	je     40f140 <xmlStrEqual@plt+0xb200>
  40ef46:	mov    rdi,rax
  40ef49:	call   434ad0 <xmlStrEqual@plt+0x30b90>
  40ef4e:	mov    r14,rax
  40ef51:	mov    rdi,rax
  40ef54:	call   425670 <xmlStrEqual@plt+0x21730>
  40ef59:	mov    rdi,r14
  40ef5c:	mov    QWORD PTR [rsp+0x10],rax
  40ef61:	call   429a30 <xmlStrEqual@plt+0x25af0>
  40ef66:	lea    r15,[rbp+0x20]
  40ef6a:	test   eax,eax
  40ef6c:	jne    40f070 <xmlStrEqual@plt+0xb130>
  40ef72:	mov    DWORD PTR [rbp+0x48],0x0
  40ef79:	mov    rdi,rbp
  40ef7c:	call   425060 <xmlStrEqual@plt+0x21120>
  40ef81:	mov    rdi,r15
  40ef84:	mov    QWORD PTR [rsp+0x8],rax
  40ef89:	call   425060 <xmlStrEqual@plt+0x21120>
  40ef8e:	mov    edx,DWORD PTR [rbx+0x80]
  40ef94:	mov    r14,rax
  40ef97:	test   edx,edx
  40ef99:	je     40f0b8 <xmlStrEqual@plt+0xb178>
  40ef9f:	mov    rdi,r15
  40efa2:	call   425890 <xmlStrEqual@plt+0x21950>
  40efa7:	mov    rdi,QWORD PTR [rbx+0x30]
  40efab:	movzx  esi,ax
  40efae:	call   409b20 <xmlStrEqual@plt+0x5be0>
  40efb3:	mov    r15,rax
  40efb6:	lea    rax,[rbx+0x18]
  40efba:	mov    QWORD PTR [rsp+0x18],rax
  40efbf:	test   r15,r15
  40efc2:	je     40f0d9 <xmlStrEqual@plt+0xb199>
  40efc8:	mov    rdi,r15
  40efcb:	call   433790 <xmlStrEqual@plt+0x2f850>
  40efd0:	mov    rdi,rax
  40efd3:	call   425060 <xmlStrEqual@plt+0x21120>
  40efd8:	mov    QWORD PTR [r12],rax
  40efdc:	cmp    BYTE PTR [r15+0x10],0x0
  40efe1:	jne    40f010 <xmlStrEqual@plt+0xb0d0>
  40efe3:	mov    rax,0x469e3c
  40efea:	cmp    DWORD PTR [rax],0x1
  40efed:	jle    40f010 <xmlStrEqual@plt+0xb0d0>
  40efef:	mov    rdi,r14
  40eff2:	call   424d40 <xmlStrEqual@plt+0x20e00>
  40eff7:	mov    rdx,rax
  40effa:	lea    rsi,[rip+0x3a037]        # 449038 <xmlStrEqual@plt+0x450f8>
  40f001:	mov    edi,0x6
  40f006:	xor    eax,eax
  40f008:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  40f00d:	nop    DWORD PTR [rax]
  40f010:	mov    rdi,QWORD PTR [rsp+0x10]
  40f015:	call   425890 <xmlStrEqual@plt+0x21950>
  40f01a:	movzx  esi,ax
  40f01d:	lea    rdi,[rbx+0x18]
  40f021:	call   40cdb0 <xmlStrEqual@plt+0x8e70>
  40f026:	mov    rdi,QWORD PTR [rbx+0x40]
  40f02a:	mov    r11,QWORD PTR [rbx+0x38]
  40f02e:	mov    r9,r12
  40f031:	mov    r8,rbp
  40f034:	mov    rcx,rax
  40f037:	mov    rdx,r15
  40f03a:	mov    rsi,r13
  40f03d:	call   QWORD PTR [r11+0x40]
  40f041:	mov    eax,DWORD PTR [rbx+0x58]
  40f044:	mov    rdi,QWORD PTR [rsp+0x8]
  40f049:	mov    DWORD PTR [r12+0x14],eax
  40f04e:	call   424bf0 <xmlStrEqual@plt+0x20cb0>
  40f053:	mov    rdi,r14
  40f056:	call   424bf0 <xmlStrEqual@plt+0x20cb0>
  40f05b:	add    rsp,0x28
  40f05f:	pop    rbx
  40f060:	pop    rbp
  40f061:	mov    rax,r12
  40f064:	pop    r12
  40f066:	pop    r13
  40f068:	pop    r14
  40f06a:	pop    r15
  40f06c:	ret    
  40f06d:	nop    DWORD PTR [rax]
  40f070:	mov    rdi,r14
  40f073:	call   429910 <xmlStrEqual@plt+0x259d0>
  40f078:	mov    DWORD PTR [rbp+0x48],eax
  40f07b:	test   eax,eax
  40f07d:	je     40ef79 <xmlStrEqual@plt+0xb039>
  40f083:	mov    edx,0x20
  40f088:	mov    rsi,rbp
  40f08b:	mov    edi,eax
  40f08d:	call   429ab0 <xmlStrEqual@plt+0x25b70>
  40f092:	mov    edi,DWORD PTR [rbp+0x48]
  40f095:	mov    edx,0x20
  40f09a:	mov    rsi,r15
  40f09d:	mov    QWORD PTR [rsp+0x8],rax
  40f0a2:	call   429ab0 <xmlStrEqual@plt+0x25b70>
  40f0a7:	mov    edx,DWORD PTR [rbx+0x80]
  40f0ad:	mov    r14,rax
  40f0b0:	test   edx,edx
  40f0b2:	jne    40ef9f <xmlStrEqual@plt+0xb05f>
  40f0b8:	mov    rdi,QWORD PTR [rbx+0x30]
  40f0bc:	mov    rsi,r14
  40f0bf:	call   409ac0 <xmlStrEqual@plt+0x5b80>
  40f0c4:	mov    r15,rax
  40f0c7:	lea    rax,[rbx+0x18]
  40f0cb:	mov    QWORD PTR [rsp+0x18],rax
  40f0d0:	test   r15,r15
  40f0d3:	jne    40efc8 <xmlStrEqual@plt+0xb088>
  40f0d9:	mov    rax,0x469e3c
  40f0e0:	mov    eax,DWORD PTR [rax]
  40f0e2:	test   eax,eax
  40f0e4:	jle    40f104 <xmlStrEqual@plt+0xb1c4>
  40f0e6:	mov    rdi,r14
  40f0e9:	call   424d40 <xmlStrEqual@plt+0x20e00>
  40f0ee:	mov    rdx,rax
  40f0f1:	lea    rsi,[rip+0x39f10]        # 449008 <xmlStrEqual@plt+0x450c8>
  40f0f8:	mov    edi,0x5
  40f0fd:	xor    eax,eax
  40f0ff:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  40f104:	mov    rdx,QWORD PTR [rsp+0x8]
  40f109:	mov    rsi,r14
  40f10c:	lea    rdi,[rbx+0x18]
  40f110:	call   40d250 <xmlStrEqual@plt+0x9310>
  40f115:	mov    rdi,QWORD PTR [rbx+0x30]
  40f119:	mov    rsi,r14
  40f11c:	call   409ac0 <xmlStrEqual@plt+0x5b80>
  40f121:	mov    rdi,rax
  40f124:	mov    r15,rax
  40f127:	call   433790 <xmlStrEqual@plt+0x2f850>
  40f12c:	mov    rdi,rax
  40f12f:	call   425060 <xmlStrEqual@plt+0x21120>
  40f134:	mov    QWORD PTR [r12],rax
  40f138:	jmp    40f010 <xmlStrEqual@plt+0xb0d0>
  40f13d:	nop    DWORD PTR [rax]
  40f140:	mov    rax,0x469e3c
  40f147:	xor    r12d,r12d
  40f14a:	cmp    DWORD PTR [rax],0x2
  40f14d:	jle    40f05b <xmlStrEqual@plt+0xb11b>
  40f153:	mov    rdi,rbp
  40f156:	call   424d40 <xmlStrEqual@plt+0x20e00>
  40f15b:	mov    rdx,rax
  40f15e:	lea    rsi,[rip+0x3b0e3]        # 44a248 <xmlStrEqual@plt+0x46308>
  40f165:	mov    edi,0x7
  40f16a:	xor    eax,eax
  40f16c:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  40f171:	jmp    40f05b <xmlStrEqual@plt+0xb11b>
  40f176:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40f180:	lea    rdx,[rip+0x3aea1]        # 44a028 <xmlStrEqual@plt+0x460e8>
  40f187:	lea    rsi,[rip+0x3c102]        # 44b290 <xmlStrEqual@plt+0x47350>
  40f18e:	lea    rdi,[rip+0x3befb]        # 44b090 <xmlStrEqual@plt+0x47150>
  40f195:	call   4350f0 <xmlStrEqual@plt+0x311b0>
  40f19a:	nop    WORD PTR [rax+rax*1+0x0]
  40f1a0:	lea    rsi,[rip+0x39e21]        # 448fc8 <xmlStrEqual@plt+0x45088>
  40f1a7:	mov    edi,0x3
  40f1ac:	xor    eax,eax
  40f1ae:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  40f1b3:	jmp    40f05b <xmlStrEqual@plt+0xb11b>
  40f1b8:	nop    DWORD PTR [rax+rax*1+0x0]
  40f1c0:	endbr64 
  40f1c4:	push   r15
  40f1c6:	push   r14
  40f1c8:	push   r13
  40f1ca:	push   r12
  40f1cc:	push   rbp
  40f1cd:	push   rbx
  40f1ce:	mov    rbx,rdi
  40f1d1:	sub    rsp,0x88
  40f1d8:	mov    rax,QWORD PTR fs:0x28
  40f1e1:	mov    QWORD PTR [rsp+0x78],rax
  40f1e6:	xor    eax,eax
  40f1e8:	call   43b440 <xmlStrEqual@plt+0x37500>
  40f1ed:	mov    rdi,rbx
  40f1f0:	mov    rbp,rax
  40f1f3:	call   43b460 <xmlStrEqual@plt+0x37520>
  40f1f8:	mov    rdi,rbx
  40f1fb:	mov    r12,rax
  40f1fe:	call   43b430 <xmlStrEqual@plt+0x374f0>
  40f203:	mov    rdi,QWORD PTR [rbp+0x0]
  40f207:	mov    QWORD PTR [rsp+0x8],rax
  40f20c:	call   434a40 <xmlStrEqual@plt+0x30b00>
  40f211:	mov    rdi,r12
  40f214:	mov    r13,rax
  40f217:	mov    rbp,QWORD PTR [rbp+0x8]
  40f21b:	call   435dd0 <xmlStrEqual@plt+0x31e90>
  40f220:	cmp    eax,0x2710
  40f225:	jg     40f3b0 <xmlStrEqual@plt+0xb470>
  40f22b:	xor    eax,eax
  40f22d:	call   435c70 <xmlStrEqual@plt+0x31d30>
  40f232:	movzx  esi,BYTE PTR [rbp+0x8]
  40f236:	mov    rdi,r13
  40f239:	mov    r15,rax
  40f23c:	call   424530 <xmlStrEqual@plt+0x205f0>
  40f241:	mov    r14,rax
  40f244:	test   rax,rax
  40f247:	je     40f293 <xmlStrEqual@plt+0xb353>
  40f249:	movzx  esi,WORD PTR [rax+0x24]
  40f24d:	cmp    si,0xffff
  40f251:	je     403fb8 <xmlStrEqual@plt+0x78>
  40f257:	add    rsi,QWORD PTR [rax+0x30]
  40f25b:	movzx  eax,BYTE PTR [rbp+0x18]
  40f25f:	mov    QWORD PTR [rsi+0x4],r15
  40f263:	and    eax,0x1
  40f266:	lea    edx,[rax*8+0x0]
  40f26d:	movzx  eax,BYTE PTR [rsi]
  40f270:	mov    rcx,QWORD PTR [rbp+0x10]
  40f274:	and    eax,0xfffffff7
  40f277:	or     eax,edx
  40f279:	mov    BYTE PTR [rsi],al
  40f27b:	mov    rdi,r14
  40f27e:	add    rsi,0xc
  40f282:	movzx  edx,BYTE PTR [rbp+0x8]
  40f286:	call   424260 <xmlStrEqual@plt+0x20320>
  40f28b:	mov    r10d,eax
  40f28e:	cmp    eax,0x1
  40f291:	je     40f2c0 <xmlStrEqual@plt+0xb380>
  40f293:	xor    r10d,r10d
  40f296:	mov    rcx,QWORD PTR [rsp+0x78]
  40f29b:	xor    rcx,QWORD PTR fs:0x28
  40f2a4:	mov    eax,r10d
  40f2a7:	jne    40f4bb <xmlStrEqual@plt+0xb57b>
  40f2ad:	add    rsp,0x88
  40f2b4:	pop    rbx
  40f2b5:	pop    rbp
  40f2b6:	pop    r12
  40f2b8:	pop    r13
  40f2ba:	pop    r14
  40f2bc:	pop    r15
  40f2be:	ret    
  40f2bf:	nop
  40f2c0:	mov    rax,0x469e3c
  40f2c7:	mov    r9,QWORD PTR [rbp+0x0]
  40f2cb:	mov    ecx,DWORD PTR [rax]
  40f2cd:	test   ecx,ecx
  40f2cf:	jg     40f460 <xmlStrEqual@plt+0xb520>
  40f2d5:	lea    r11,[rsp+0x30]
  40f2da:	xor    ecx,ecx
  40f2dc:	mov    r8,r9
  40f2df:	mov    rdi,r11
  40f2e2:	mov    edx,0x10f6
  40f2e7:	mov    esi,0x10f6
  40f2ec:	mov    DWORD PTR [rsp+0x18],r10d
  40f2f1:	mov    QWORD PTR [rsp+0x10],r11
  40f2f6:	call   439130 <xmlStrEqual@plt+0x351f0>
  40f2fb:	mov    r11,QWORD PTR [rsp+0x10]
  40f300:	mov    rdi,QWORD PTR [rsp+0x8]
  40f305:	mov    rdx,r11
  40f308:	mov    rsi,r14
  40f30b:	call   4089b0 <xmlStrEqual@plt+0x4a70>
  40f310:	mov    rdi,r14
  40f313:	call   430820 <xmlStrEqual@plt+0x2c8e0>
  40f318:	mov    rdi,r12
  40f31b:	call   435dd0 <xmlStrEqual@plt+0x31e90>
  40f320:	test   eax,eax
  40f322:	mov    r10d,DWORD PTR [rsp+0x18]
  40f327:	jle    40f410 <xmlStrEqual@plt+0xb4d0>
  40f32d:	mov    rax,0x469e3c
  40f334:	mov    edx,DWORD PTR [rax]
  40f336:	test   edx,edx
  40f338:	jle    40f37f <xmlStrEqual@plt+0xb43f>
  40f33a:	mov    rdi,r12
  40f33d:	mov    DWORD PTR [rsp+0x8],r10d
  40f342:	call   435dd0 <xmlStrEqual@plt+0x31e90>
  40f347:	mov    rdi,QWORD PTR [rbp+0x0]
  40f34b:	mov    r14d,eax
  40f34e:	call   424d40 <xmlStrEqual@plt+0x20e00>
  40f353:	mov    rdi,r13
  40f356:	mov    rbp,rax
  40f359:	call   424d40 <xmlStrEqual@plt+0x20e00>
  40f35e:	mov    rdx,rax
  40f361:	mov    r8d,r14d
  40f364:	mov    rcx,rbp
  40f367:	lea    rsi,[rip+0x3af22]        # 44a290 <xmlStrEqual@plt+0x46350>
  40f36e:	mov    edi,0x5
  40f373:	xor    eax,eax
  40f375:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  40f37a:	mov    r10d,DWORD PTR [rsp+0x8]
  40f37f:	mov    rax,0x475860
  40f386:	mov    rdx,r12
  40f389:	mov    rdi,QWORD PTR [rax]
  40f38c:	mov    rsi,r15
  40f38f:	mov    DWORD PTR [rsp+0x8],r10d
  40f394:	call   4351f0 <xmlStrEqual@plt+0x312b0>
  40f399:	mov    esi,0x3
  40f39e:	mov    rdi,rbx
  40f3a1:	call   43b470 <xmlStrEqual@plt+0x37530>
  40f3a6:	mov    r10d,DWORD PTR [rsp+0x8]
  40f3ab:	jmp    40f296 <xmlStrEqual@plt+0xb356>
  40f3b0:	mov    rax,0x475860
  40f3b7:	mov    rsi,r12
  40f3ba:	mov    rdi,QWORD PTR [rax]
  40f3bd:	call   435af0 <xmlStrEqual@plt+0x31bb0>
  40f3c2:	mov    esi,0x3c
  40f3c7:	mov    rdi,rbx
  40f3ca:	call   43b470 <xmlStrEqual@plt+0x37530>
  40f3cf:	mov    rdi,QWORD PTR [rbp+0x0]
  40f3d3:	call   424d40 <xmlStrEqual@plt+0x20e00>
  40f3d8:	mov    rdi,r13
  40f3db:	mov    rbx,rax
  40f3de:	call   424d40 <xmlStrEqual@plt+0x20e00>
  40f3e3:	mov    rdx,rax
  40f3e6:	mov    r8d,0x3c
  40f3ec:	mov    rcx,rbx
  40f3ef:	lea    rsi,[rip+0x3af02]        # 44a2f8 <xmlStrEqual@plt+0x463b8>
  40f3f6:	mov    edi,0x3
  40f3fb:	xor    eax,eax
  40f3fd:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  40f402:	jmp    40f293 <xmlStrEqual@plt+0xb353>
  40f407:	nop    WORD PTR [rax+rax*1+0x0]
  40f410:	mov    rax,0x469e3c
  40f417:	mov    eax,DWORD PTR [rax]
  40f419:	test   eax,eax
  40f41b:	jle    40f37f <xmlStrEqual@plt+0xb43f>
  40f421:	mov    rdi,QWORD PTR [rbp+0x0]
  40f425:	mov    DWORD PTR [rsp+0x8],r10d
  40f42a:	call   424d40 <xmlStrEqual@plt+0x20e00>
  40f42f:	mov    rdi,r13
  40f432:	mov    rbp,rax
  40f435:	call   424d40 <xmlStrEqual@plt+0x20e00>
  40f43a:	mov    rdx,rax
  40f43d:	mov    rcx,rbp
  40f440:	lea    rsi,[rip+0x3ae89]        # 44a2d0 <xmlStrEqual@plt+0x46390>
  40f447:	mov    edi,0x5
  40f44c:	xor    eax,eax
  40f44e:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  40f453:	mov    r10d,DWORD PTR [rsp+0x8]
  40f458:	jmp    40f37f <xmlStrEqual@plt+0xb43f>
  40f45d:	nop    DWORD PTR [rax]
  40f460:	mov    rdi,r9
  40f463:	mov    DWORD PTR [rsp+0x2c],r10d
  40f468:	mov    QWORD PTR [rsp+0x20],r9
  40f46d:	call   424d40 <xmlStrEqual@plt+0x20e00>
  40f472:	mov    rdi,r13
  40f475:	mov    QWORD PTR [rsp+0x18],rax
  40f47a:	call   424d40 <xmlStrEqual@plt+0x20e00>
  40f47f:	mov    rdi,r14
  40f482:	mov    QWORD PTR [rsp+0x10],rax
  40f487:	call   423f50 <xmlStrEqual@plt+0x20010>
  40f48c:	mov    r8,QWORD PTR [rsp+0x18]
  40f491:	mov    rcx,QWORD PTR [rsp+0x10]
  40f496:	mov    rdx,rax
  40f499:	lea    rsi,[rip+0x3bc2f]        # 44b0cf <xmlStrEqual@plt+0x4718f>
  40f4a0:	mov    edi,0x5
  40f4a5:	xor    eax,eax
  40f4a7:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  40f4ac:	mov    r10d,DWORD PTR [rsp+0x2c]
  40f4b1:	mov    r9,QWORD PTR [rsp+0x20]
  40f4b6:	jmp    40f2d5 <xmlStrEqual@plt+0xb395>
  40f4bb:	call   403c00 <__stack_chk_fail@plt>
  40f4c0:	endbr64 
  40f4c4:	push   r15
  40f4c6:	push   r14
  40f4c8:	push   r13
  40f4ca:	push   r12
  40f4cc:	push   rbp
  40f4cd:	push   rbx
  40f4ce:	sub    rsp,0x28
  40f4d2:	mov    rax,0x469600
  40f4d9:	mov    QWORD PTR [rsp],rdx
  40f4dd:	cmp    QWORD PTR [rdi+0x8],rax
  40f4e1:	jne    40f658 <xmlStrEqual@plt+0xb718>
  40f4e7:	mov    rbx,rdi
  40f4ea:	mov    rdi,QWORD PTR [rdi+0x50]
  40f4ee:	mov    r13,rsi
  40f4f1:	mov    r12,rcx
  40f4f4:	call   43aca0 <xmlStrEqual@plt+0x36d60>
  40f4f9:	mov    rbp,rax
  40f4fc:	test   rax,rax
  40f4ff:	je     40f550 <xmlStrEqual@plt+0xb610>
  40f501:	mov    rdi,QWORD PTR [rsp]
  40f505:	mov    rsi,r12
  40f508:	call   425310 <xmlStrEqual@plt+0x213d0>
  40f50d:	mov    edx,0x1
  40f512:	test   eax,eax
  40f514:	je     40f53a <xmlStrEqual@plt+0xb5fa>
  40f516:	mov    eax,DWORD PTR [r12+0x18]
  40f51b:	test   eax,eax
  40f51d:	je     40f580 <xmlStrEqual@plt+0xb640>
  40f51f:	cmp    eax,0x1
  40f522:	je     40f678 <xmlStrEqual@plt+0xb738>
  40f528:	mov    rax,0x469e3c
  40f52f:	cmp    DWORD PTR [rax],0x1
  40f532:	jg     40f870 <xmlStrEqual@plt+0xb930>
  40f538:	xor    edx,edx
  40f53a:	add    rsp,0x28
  40f53e:	pop    rbx
  40f53f:	pop    rbp
  40f540:	pop    r12
  40f542:	pop    r13
  40f544:	pop    r14
  40f546:	mov    eax,edx
  40f548:	pop    r15
  40f54a:	ret    
  40f54b:	nop    DWORD PTR [rax+rax*1+0x0]
  40f550:	mov    rax,0x469e3c
  40f557:	cmp    DWORD PTR [rax],0x1
  40f55a:	jle    40f538 <xmlStrEqual@plt+0xb5f8>
  40f55c:	mov    rdx,r13
  40f55f:	lea    rsi,[rip+0x3adda]        # 44a340 <xmlStrEqual@plt+0x46400>
  40f566:	mov    edi,0x6
  40f56b:	xor    eax,eax
  40f56d:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  40f572:	xor    edx,edx
  40f574:	jmp    40f53a <xmlStrEqual@plt+0xb5fa>
  40f576:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40f580:	lea    rcx,[rbp+0x30]
  40f584:	mov    QWORD PTR [rsp+0x8],rcx
  40f589:	mov    rcx,QWORD PTR [rsp]
  40f58d:	mov    rax,QWORD PTR [rbp+0x10]
  40f591:	cmp    DWORD PTR [rcx+0x18],0x2
  40f595:	mov    r13,QWORD PTR [rbp+0x18]
  40f599:	jne    40f5a7 <xmlStrEqual@plt+0xb667>
  40f59b:	lea    rcx,[rbp+0x28]
  40f59f:	mov    QWORD PTR [rsp+0x8],rcx
  40f5a4:	mov    r13,rax
  40f5a7:	mov    rax,QWORD PTR [r13+0x8]
  40f5ab:	cmp    r13,rax
  40f5ae:	je     40f629 <xmlStrEqual@plt+0xb6e9>
  40f5b0:	mov    r15,QWORD PTR [rax+0x10]
  40f5b4:	mov    r12,QWORD PTR [rax+0x8]
  40f5b8:	mov    rax,QWORD PTR [r15]
  40f5bb:	cmp    DWORD PTR [rax+0x18],0x1
  40f5bf:	je     40f5d4 <xmlStrEqual@plt+0xb694>
  40f5c1:	lea    rsi,[rip+0x39950]        # 448f18 <xmlStrEqual@plt+0x44fd8>
  40f5c8:	mov    edi,0x2
  40f5cd:	xor    eax,eax
  40f5cf:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  40f5d4:	mov    rdi,QWORD PTR [rbx+0x70]
  40f5d8:	mov    rsi,r15
  40f5db:	call   40e540 <xmlStrEqual@plt+0xa600>
  40f5e0:	mov    r14,rax
  40f5e3:	test   rax,rax
  40f5e6:	je     40f621 <xmlStrEqual@plt+0xb6e1>
  40f5e8:	mov    rdi,rax
  40f5eb:	call   434a40 <xmlStrEqual@plt+0x30b00>
  40f5f0:	mov    rdi,rax
  40f5f3:	mov    rsi,r15
  40f5f6:	call   42bb30 <xmlStrEqual@plt+0x27bf0>
  40f5fb:	mov    rdi,QWORD PTR [rbx+0x40]
  40f5ff:	mov    rax,QWORD PTR [rbx+0x38]
  40f603:	mov    rsi,r14
  40f606:	call   QWORD PTR [rax+0x30]
  40f609:	mov    rdi,r14
  40f60c:	call   434ad0 <xmlStrEqual@plt+0x30b90>
  40f611:	mov    rsi,rax
  40f614:	mov    edx,0x1
  40f619:	mov    rdi,rbx
  40f61c:	call   4089c0 <xmlStrEqual@plt+0x4a80>
  40f621:	mov    rax,r12
  40f624:	cmp    r13,r12
  40f627:	jne    40f5b0 <xmlStrEqual@plt+0xb670>
  40f629:	mov    rax,QWORD PTR [rsp+0x8]
  40f62e:	cmp    QWORD PTR [rax],0x0
  40f632:	je     40f8c8 <xmlStrEqual@plt+0xb988>
  40f638:	lea    rdx,[rbp+0x10]
  40f63c:	lea    rsi,[rbp+0x8]
  40f640:	mov    rdi,rbx
  40f643:	call   40dd70 <xmlStrEqual@plt+0x9e30>
  40f648:	mov    edx,0x1
  40f64d:	jmp    40f53a <xmlStrEqual@plt+0xb5fa>
  40f652:	nop    WORD PTR [rax+rax*1+0x0]
  40f658:	lea    rdx,[rip+0x3a9c9]        # 44a028 <xmlStrEqual@plt+0x460e8>
  40f65f:	lea    rsi,[rip+0x3bc2a]        # 44b290 <xmlStrEqual@plt+0x47350>
  40f666:	lea    rdi,[rip+0x3ba23]        # 44b090 <xmlStrEqual@plt+0x47150>
  40f66d:	call   4350f0 <xmlStrEqual@plt+0x311b0>
  40f672:	nop    WORD PTR [rax+rax*1+0x0]
  40f678:	mov    rdi,r12
  40f67b:	call   425890 <xmlStrEqual@plt+0x21950>
  40f680:	cmp    ax,0x2
  40f684:	je     40f7f0 <xmlStrEqual@plt+0xb8b0>
  40f68a:	cmp    ax,0xa
  40f68e:	jne    40f528 <xmlStrEqual@plt+0xb5e8>
  40f694:	lea    rax,[rbp+0x30]
  40f698:	mov    QWORD PTR [rsp+0x18],rax
  40f69d:	mov    r14,QWORD PTR [rbp+0x18]
  40f6a1:	mov    rax,QWORD PTR [r14+0x8]
  40f6a5:	cmp    r14,rax
  40f6a8:	jne    40f6df <xmlStrEqual@plt+0xb79f>
  40f6aa:	jmp    40f790 <xmlStrEqual@plt+0xb850>
  40f6af:	nop
  40f6b0:	cmp    eax,0x1
  40f6b3:	je     40f6c8 <xmlStrEqual@plt+0xb788>
  40f6b5:	lea    rsi,[rip+0x3985c]        # 448f18 <xmlStrEqual@plt+0x44fd8>
  40f6bc:	mov    edi,0x2
  40f6c1:	xor    eax,eax
  40f6c3:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  40f6c8:	mov    rsi,r12
  40f6cb:	mov    rdi,r15
  40f6ce:	call   42afa0 <xmlStrEqual@plt+0x27060>
  40f6d3:	mov    rax,r13
  40f6d6:	cmp    r14,r13
  40f6d9:	je     40f790 <xmlStrEqual@plt+0xb850>
  40f6df:	mov    r15,QWORD PTR [rax+0x10]
  40f6e3:	mov    r13,QWORD PTR [rax+0x8]
  40f6e7:	mov    rax,QWORD PTR [r15]
  40f6ea:	mov    eax,DWORD PTR [rax+0x18]
  40f6ed:	test   eax,eax
  40f6ef:	jne    40f6b0 <xmlStrEqual@plt+0xb770>
  40f6f1:	mov    rdi,QWORD PTR [rbx+0x70]
  40f6f5:	mov    rsi,r15
  40f6f8:	call   40e540 <xmlStrEqual@plt+0xa600>
  40f6fd:	test   rax,rax
  40f700:	je     40f6d3 <xmlStrEqual@plt+0xb793>
  40f702:	mov    rdi,rax
  40f705:	mov    QWORD PTR [rsp+0x10],rax
  40f70a:	call   434a40 <xmlStrEqual@plt+0x30b00>
  40f70f:	mov    rdi,rax
  40f712:	mov    rsi,r12
  40f715:	mov    QWORD PTR [rsp+0x8],rax
  40f71a:	call   42b790 <xmlStrEqual@plt+0x27850>
  40f71f:	test   rax,rax
  40f722:	mov    r9,QWORD PTR [rsp+0x8]
  40f727:	mov    r8,QWORD PTR [rsp+0x10]
  40f72c:	je     40f808 <xmlStrEqual@plt+0xb8c8>
  40f732:	mov    rax,0x469e3c
  40f739:	cmp    DWORD PTR [rax],0x1
  40f73c:	jle    40f756 <xmlStrEqual@plt+0xb816>
  40f73e:	lea    rsi,[rip+0x3ac83]        # 44a3c8 <xmlStrEqual@plt+0x46488>
  40f745:	mov    edi,0x6
  40f74a:	xor    eax,eax
  40f74c:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  40f751:	mov    r9,QWORD PTR [rsp+0x8]
  40f756:	mov    rdi,r9
  40f759:	xor    edx,edx
  40f75b:	xor    esi,esi
  40f75d:	call   42b530 <xmlStrEqual@plt+0x275f0>
  40f762:	mov    rdi,QWORD PTR [rbx+0x50]
  40f766:	mov    rsi,r15
  40f769:	mov    QWORD PTR [rsp+0x8],rax
  40f76e:	call   42f240 <xmlStrEqual@plt+0x2b300>
  40f773:	mov    rax,QWORD PTR [rsp+0x8]
  40f778:	mov    rdi,r15
  40f77b:	mov    rsi,rax
  40f77e:	call   42e210 <xmlStrEqual@plt+0x2a2d0>
  40f783:	mov    rax,r13
  40f786:	cmp    r14,r13
  40f789:	jne    40f6df <xmlStrEqual@plt+0xb79f>
  40f78f:	nop
  40f790:	mov    rax,QWORD PTR [rsp+0x18]
  40f795:	mov    rdi,QWORD PTR [rax]
  40f798:	test   rdi,rdi
  40f79b:	je     40f850 <xmlStrEqual@plt+0xb910>
  40f7a1:	mov    rsi,r12
  40f7a4:	call   425310 <xmlStrEqual@plt+0x213d0>
  40f7a9:	test   eax,eax
  40f7ab:	je     40f890 <xmlStrEqual@plt+0xb950>
  40f7b1:	mov    rax,QWORD PTR [rbp+0x8]
  40f7b5:	mov    r13,QWORD PTR [rax+0x8]
  40f7b9:	cmp    rax,r13
  40f7bc:	je     40f638 <xmlStrEqual@plt+0xb6f8>
  40f7c2:	nop    WORD PTR [rax+rax*1+0x0]
  40f7c8:	mov    rdi,QWORD PTR [r13+0x10]
  40f7cc:	call   434a40 <xmlStrEqual@plt+0x30b00>
  40f7d1:	mov    rdi,rax
  40f7d4:	mov    rsi,r12
  40f7d7:	call   42b9d0 <xmlStrEqual@plt+0x27a90>
  40f7dc:	mov    r13,QWORD PTR [r13+0x8]
  40f7e0:	cmp    QWORD PTR [rbp+0x8],r13
  40f7e4:	jne    40f7c8 <xmlStrEqual@plt+0xb888>
  40f7e6:	jmp    40f638 <xmlStrEqual@plt+0xb6f8>
  40f7eb:	nop    DWORD PTR [rax+rax*1+0x0]
  40f7f0:	lea    rax,[rbp+0x28]
  40f7f4:	mov    r14,QWORD PTR [rbp+0x10]
  40f7f8:	mov    QWORD PTR [rsp+0x18],rax
  40f7fd:	jmp    40f6a1 <xmlStrEqual@plt+0xb761>
  40f802:	nop    WORD PTR [rax+rax*1+0x0]
  40f808:	mov    rdx,r12
  40f80b:	mov    rdi,r9
  40f80e:	mov    rsi,r15
  40f811:	mov    QWORD PTR [rsp+0x8],r8
  40f816:	call   42ba20 <xmlStrEqual@plt+0x27ae0>
  40f81b:	mov    r8,QWORD PTR [rsp+0x8]
  40f820:	mov    rdi,QWORD PTR [rbx+0x40]
  40f824:	mov    rax,QWORD PTR [rbx+0x38]
  40f828:	mov    rsi,r8
  40f82b:	call   QWORD PTR [rax+0x30]
  40f82e:	mov    r8,QWORD PTR [rsp+0x8]
  40f833:	mov    rdi,r8
  40f836:	call   434ad0 <xmlStrEqual@plt+0x30b90>
  40f83b:	mov    rsi,rax
  40f83e:	mov    edx,0x1
  40f843:	mov    rdi,rbx
  40f846:	call   4089c0 <xmlStrEqual@plt+0x4a80>
  40f84b:	jmp    40f6d3 <xmlStrEqual@plt+0xb793>
  40f850:	mov    rdi,QWORD PTR [rsp]
  40f854:	test   rdi,rdi
  40f857:	je     40f8b0 <xmlStrEqual@plt+0xb970>
  40f859:	call   425060 <xmlStrEqual@plt+0x21120>
  40f85e:	mov    rcx,QWORD PTR [rsp+0x18]
  40f863:	mov    QWORD PTR [rcx],rax
  40f866:	jmp    40f7b1 <xmlStrEqual@plt+0xb871>
  40f86b:	nop    DWORD PTR [rax+rax*1+0x0]
  40f870:	lea    rsi,[rip+0x3ab19]        # 44a390 <xmlStrEqual@plt+0x46450>
  40f877:	mov    edi,0x6
  40f87c:	xor    eax,eax
  40f87e:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  40f883:	xor    edx,edx
  40f885:	jmp    40f53a <xmlStrEqual@plt+0xb5fa>
  40f88a:	nop    WORD PTR [rax+rax*1+0x0]
  40f890:	mov    r14,QWORD PTR [rsp+0x18]
  40f895:	mov    rdi,QWORD PTR [r14]
  40f898:	call   424bf0 <xmlStrEqual@plt+0x20cb0>
  40f89d:	mov    QWORD PTR [r14],0x0
  40f8a4:	jmp    40f7b1 <xmlStrEqual@plt+0xb871>
  40f8a9:	nop    DWORD PTR [rax+0x0]
  40f8b0:	xor    edi,edi
  40f8b2:	call   424b10 <xmlStrEqual@plt+0x20bd0>
  40f8b7:	mov    rcx,QWORD PTR [rsp+0x18]
  40f8bc:	mov    QWORD PTR [rcx],rax
  40f8bf:	jmp    40f7b1 <xmlStrEqual@plt+0xb871>
  40f8c4:	nop    DWORD PTR [rax+0x0]
  40f8c8:	mov    rdi,QWORD PTR [rsp]
  40f8cc:	call   425060 <xmlStrEqual@plt+0x21120>
  40f8d1:	mov    rcx,QWORD PTR [rsp+0x8]
  40f8d6:	mov    QWORD PTR [rcx],rax
  40f8d9:	jmp    40f638 <xmlStrEqual@plt+0xb6f8>
  40f8de:	xchg   ax,ax
  40f8e0:	endbr64 
  40f8e4:	push   r15
  40f8e6:	push   r14
  40f8e8:	push   r13
  40f8ea:	push   r12
  40f8ec:	push   rbp
  40f8ed:	push   rbx
  40f8ee:	mov    rbx,rdi
  40f8f1:	sub    rsp,0x98
  40f8f8:	mov    rax,QWORD PTR fs:0x28
  40f901:	mov    QWORD PTR [rsp+0x88],rax
  40f909:	xor    eax,eax
  40f90b:	call   43b440 <xmlStrEqual@plt+0x37500>
  40f910:	mov    rdi,rbx
  40f913:	mov    rbp,rax
  40f916:	call   43b460 <xmlStrEqual@plt+0x37520>
  40f91b:	mov    rdi,rbx
  40f91e:	mov    r14,rax
  40f921:	call   43b430 <xmlStrEqual@plt+0x374f0>
  40f926:	mov    rdi,QWORD PTR [rbp+0x0]
  40f92a:	mov    r12,rax
  40f92d:	call   434a40 <xmlStrEqual@plt+0x30b00>
  40f932:	mov    r15,rax
  40f935:	mov    QWORD PTR [rsp+0x18],rax
  40f93a:	mov    rax,QWORD PTR [rbp+0x10]
  40f93e:	mov    rcx,QWORD PTR [rbp+0x18]
  40f942:	mov    rax,QWORD PTR [rax]
  40f945:	mov    rdi,r14
  40f948:	mov    r13,QWORD PTR [rbp+0x8]
  40f94c:	mov    QWORD PTR [rsp],rax
  40f950:	mov    QWORD PTR [rsp+0x10],rcx
  40f955:	call   435dd0 <xmlStrEqual@plt+0x31e90>
  40f95a:	cmp    eax,DWORD PTR [r12+0x28]
  40f95f:	jg     40fa88 <xmlStrEqual@plt+0xbb48>
  40f965:	xor    eax,eax
  40f967:	call   435c70 <xmlStrEqual@plt+0x31d30>
  40f96c:	movzx  esi,BYTE PTR [r13+0x8]
  40f971:	mov    rdi,r15
  40f974:	mov    QWORD PTR [rsp+0x8],rax
  40f979:	call   424530 <xmlStrEqual@plt+0x205f0>
  40f97e:	mov    rbp,rax
  40f981:	lea    rsi,[r12+0x90]
  40f989:	lea    rdx,[r12+0x88]
  40f991:	mov    rdi,rax
  40f994:	call   423c20 <xmlStrEqual@plt+0x1fce0>
  40f999:	movzx  esi,WORD PTR [rbp+0x24]
  40f99d:	cmp    si,0xffff
  40f9a1:	je     403fe1 <xmlStrEqual@plt+0xa1>
  40f9a7:	add    rsi,QWORD PTR [rbp+0x30]
  40f9ab:	mov    rcx,QWORD PTR [rsp+0x8]
  40f9b0:	or     BYTE PTR [rsi],0xb
  40f9b3:	mov    QWORD PTR [rsi+0x4],rcx
  40f9b7:	mov    rdi,QWORD PTR [r13+0x0]
  40f9bb:	mov    QWORD PTR [rsp+0x20],rsi
  40f9c0:	call   425890 <xmlStrEqual@plt+0x21950>
  40f9c5:	mov    rdi,QWORD PTR [rsp]
  40f9c9:	mov    r15d,eax
  40f9cc:	call   425890 <xmlStrEqual@plt+0x21950>
  40f9d1:	cmp    r15w,ax
  40f9d5:	mov    rsi,QWORD PTR [rsp+0x20]
  40f9da:	je     40fa40 <xmlStrEqual@plt+0xbb00>
  40f9dc:	mov    rax,0x469e3c
  40f9e3:	mov    eax,DWORD PTR [rax]
  40f9e5:	test   eax,eax
  40f9e7:	jle    40fa08 <xmlStrEqual@plt+0xbac8>
  40f9e9:	mov    rdi,QWORD PTR [rsp]
  40f9ed:	call   424d40 <xmlStrEqual@plt+0x20e00>
  40f9f2:	mov    rdx,rax
  40f9f5:	lea    rsi,[rip+0x3aa14]        # 44a410 <xmlStrEqual@plt+0x464d0>
  40f9fc:	mov    edi,0x5
  40fa01:	xor    eax,eax
  40fa03:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  40fa08:	mov    rdi,rbp
  40fa0b:	call   430820 <xmlStrEqual@plt+0x2c8e0>
  40fa10:	xor    r15d,r15d
  40fa13:	mov    rdx,QWORD PTR [rsp+0x88]
  40fa1b:	xor    rdx,QWORD PTR fs:0x28
  40fa24:	mov    eax,r15d
  40fa27:	jne    40fd2a <xmlStrEqual@plt+0xbdea>
  40fa2d:	add    rsp,0x98
  40fa34:	pop    rbx
  40fa35:	pop    rbp
  40fa36:	pop    r12
  40fa38:	pop    r13
  40fa3a:	pop    r14
  40fa3c:	pop    r15
  40fa3e:	ret    
  40fa3f:	nop
  40fa40:	mov    rcx,QWORD PTR [r13+0x10]
  40fa44:	movzx  edx,BYTE PTR [r13+0x8]
  40fa49:	add    rsi,0xc
  40fa4d:	mov    rdi,rbp
  40fa50:	call   424260 <xmlStrEqual@plt+0x20320>
  40fa55:	mov    r15d,eax
  40fa58:	cmp    eax,0x1
  40fa5b:	je     40fb20 <xmlStrEqual@plt+0xbbe0>
  40fa61:	mov    rax,0x469e3c
  40fa68:	xor    r15d,r15d
  40fa6b:	cmp    DWORD PTR [rax],0x1
  40fa6e:	jle    40fa13 <xmlStrEqual@plt+0xbad3>
  40fa70:	lea    rsi,[rip+0x3a9f1]        # 44a468 <xmlStrEqual@plt+0x46528>
  40fa77:	mov    edi,0x6
  40fa7c:	xor    eax,eax
  40fa7e:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  40fa83:	jmp    40fa13 <xmlStrEqual@plt+0xbad3>
  40fa85:	nop    DWORD PTR [rax]
  40fa88:	mov    rax,0x475860
  40fa8f:	mov    rsi,r14
  40fa92:	mov    rdi,QWORD PTR [rax]
  40fa95:	xor    r15d,r15d
  40fa98:	call   435af0 <xmlStrEqual@plt+0x31bb0>
  40fa9d:	mov    esi,0x3c
  40faa2:	mov    rdi,rbx
  40faa5:	call   43b470 <xmlStrEqual@plt+0x37530>
  40faaa:	mov    rax,0x469e3c
  40fab1:	mov    ecx,DWORD PTR [rax]
  40fab3:	test   ecx,ecx
  40fab5:	jle    40fa13 <xmlStrEqual@plt+0xbad3>
  40fabb:	mov    rdi,QWORD PTR [rsp+0x10]
  40fac0:	call   424d40 <xmlStrEqual@plt+0x20e00>
  40fac5:	mov    rdi,QWORD PTR [rsp]
  40fac9:	mov    rbp,rax
  40facc:	call   424d40 <xmlStrEqual@plt+0x20e00>
  40fad1:	mov    rdi,QWORD PTR [r13+0x0]
  40fad5:	mov    r12,rax
  40fad8:	call   424d40 <xmlStrEqual@plt+0x20e00>
  40fadd:	mov    rdi,QWORD PTR [rsp+0x18]
  40fae2:	mov    rbx,rax
  40fae5:	call   424d40 <xmlStrEqual@plt+0x20e00>
  40faea:	sub    rsp,0x8
  40faee:	push   0x3c
  40faf0:	mov    rdx,rax
  40faf3:	mov    r9,rbp
  40faf6:	xor    eax,eax
  40faf8:	mov    r8,r12
  40fafb:	mov    rcx,rbx
  40fafe:	lea    rsi,[rip+0x3aa8b]        # 44a590 <xmlStrEqual@plt+0x46650>
  40fb05:	mov    edi,0x5
  40fb0a:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  40fb0f:	pop    rax
  40fb10:	pop    rdx
  40fb11:	jmp    40fa13 <xmlStrEqual@plt+0xbad3>
  40fb16:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40fb20:	mov    r8,QWORD PTR [r13+0x0]
  40fb24:	mov    rcx,QWORD PTR [rsp]
  40fb28:	mov    edx,0x10f6
  40fb2d:	mov    esi,0x10f6
  40fb32:	mov    rdi,rbp
  40fb35:	call   424080 <xmlStrEqual@plt+0x20140>
  40fb3a:	movzx  eax,WORD PTR [rbp+0x1e]
  40fb3e:	cmp    ax,0xffff
  40fb42:	je     403fcc <xmlStrEqual@plt+0x8c>
  40fb48:	mov    rdx,QWORD PTR [rbp+0x30]
  40fb4c:	or     BYTE PTR [rdx+rax*1+0x1],0x40
  40fb51:	mov    rax,0x469e3c
  40fb58:	mov    eax,DWORD PTR [rax]
  40fb5a:	test   eax,eax
  40fb5c:	jg     40fcb0 <xmlStrEqual@plt+0xbd70>
  40fb62:	lea    r9,[rsp+0x40]
  40fb67:	mov    r8,QWORD PTR [rsp+0x10]
  40fb6c:	mov    rcx,QWORD PTR [rsp]
  40fb70:	movzx  esi,WORD PTR [r12+0x5c]
  40fb76:	mov    rdi,r9
  40fb79:	mov    edx,0x10f6
  40fb7e:	mov    QWORD PTR [rsp+0x20],r9
  40fb83:	call   439130 <xmlStrEqual@plt+0x351f0>
  40fb88:	mov    r9,QWORD PTR [rsp+0x20]
  40fb8d:	mov    rsi,rbp
  40fb90:	mov    rdx,r9
  40fb93:	mov    rdi,r12
  40fb96:	call   4089b0 <xmlStrEqual@plt+0x4a70>
  40fb9b:	mov    rdi,rbp
  40fb9e:	call   430820 <xmlStrEqual@plt+0x2c8e0>
  40fba3:	mov    rdi,r14
  40fba6:	call   435dd0 <xmlStrEqual@plt+0x31e90>
  40fbab:	test   eax,eax
  40fbad:	mov    rax,0x469e3c
  40fbb4:	jle    40fc50 <xmlStrEqual@plt+0xbd10>
  40fbba:	mov    r9d,DWORD PTR [rax]
  40fbbd:	test   r9d,r9d
  40fbc0:	jle    40fc26 <xmlStrEqual@plt+0xbce6>
  40fbc2:	mov    rdi,r14
  40fbc5:	call   435dd0 <xmlStrEqual@plt+0x31e90>
  40fbca:	mov    rdi,QWORD PTR [rsp+0x10]
  40fbcf:	mov    ebp,eax
  40fbd1:	call   424d40 <xmlStrEqual@plt+0x20e00>
  40fbd6:	mov    rdi,QWORD PTR [rsp]
  40fbda:	mov    QWORD PTR [rsp+0x10],rax
  40fbdf:	call   424d40 <xmlStrEqual@plt+0x20e00>
  40fbe4:	mov    rdi,QWORD PTR [r13+0x0]
  40fbe8:	mov    r12,rax
  40fbeb:	call   424d40 <xmlStrEqual@plt+0x20e00>
  40fbf0:	mov    rdi,QWORD PTR [rsp+0x18]
  40fbf5:	mov    r13,rax
  40fbf8:	call   424d40 <xmlStrEqual@plt+0x20e00>
  40fbfd:	sub    rsp,0x8
  40fc01:	push   rbp
  40fc02:	mov    r8,r12
  40fc05:	mov    rdx,rax
  40fc08:	mov    r9,QWORD PTR [rsp+0x20]
  40fc0d:	mov    edi,0x5
  40fc12:	mov    rcx,r13
  40fc15:	lea    rsi,[rip+0x3a8c4]        # 44a4e0 <xmlStrEqual@plt+0x465a0>
  40fc1c:	xor    eax,eax
  40fc1e:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  40fc23:	pop    rdi
  40fc24:	pop    r8
  40fc26:	mov    rax,0x475860
  40fc2d:	mov    rsi,QWORD PTR [rsp+0x8]
  40fc32:	mov    rdi,QWORD PTR [rax]
  40fc35:	mov    rdx,r14
  40fc38:	call   4351f0 <xmlStrEqual@plt+0x312b0>
  40fc3d:	mov    esi,0x3
  40fc42:	mov    rdi,rbx
  40fc45:	call   43b470 <xmlStrEqual@plt+0x37530>
  40fc4a:	jmp    40fa13 <xmlStrEqual@plt+0xbad3>
  40fc4f:	nop
  40fc50:	mov    esi,DWORD PTR [rax]
  40fc52:	test   esi,esi
  40fc54:	jle    40fc26 <xmlStrEqual@plt+0xbce6>
  40fc56:	mov    rdi,QWORD PTR [rsp+0x10]
  40fc5b:	call   424d40 <xmlStrEqual@plt+0x20e00>
  40fc60:	mov    rdi,QWORD PTR [rsp]
  40fc64:	mov    rbp,rax
  40fc67:	call   424d40 <xmlStrEqual@plt+0x20e00>
  40fc6c:	mov    rdi,QWORD PTR [r13+0x0]
  40fc70:	mov    r12,rax
  40fc73:	call   424d40 <xmlStrEqual@plt+0x20e00>
  40fc78:	mov    rdi,QWORD PTR [rsp+0x18]
  40fc7d:	mov    r13,rax
  40fc80:	call   424d40 <xmlStrEqual@plt+0x20e00>
  40fc85:	mov    rdx,rax
  40fc88:	mov    r9,rbp
  40fc8b:	mov    r8,r12
  40fc8e:	mov    rcx,r13
  40fc91:	lea    rsi,[rip+0x3a8a8]        # 44a540 <xmlStrEqual@plt+0x46600>
  40fc98:	mov    edi,0x5
  40fc9d:	xor    eax,eax
  40fc9f:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  40fca4:	jmp    40fc26 <xmlStrEqual@plt+0xbce6>
  40fca9:	nop    DWORD PTR [rax+0x0]
  40fcb0:	mov    rdi,QWORD PTR [rsp+0x10]
  40fcb5:	call   424d40 <xmlStrEqual@plt+0x20e00>
  40fcba:	mov    rdi,QWORD PTR [rsp+0x18]
  40fcbf:	mov    QWORD PTR [rsp+0x38],rax
  40fcc4:	call   424d40 <xmlStrEqual@plt+0x20e00>
  40fcc9:	mov    rdi,QWORD PTR [r13+0x0]
  40fccd:	mov    QWORD PTR [rsp+0x30],rax
  40fcd2:	call   424d40 <xmlStrEqual@plt+0x20e00>
  40fcd7:	mov    rdi,QWORD PTR [rsp]
  40fcdb:	mov    QWORD PTR [rsp+0x28],rax
  40fce0:	call   424d40 <xmlStrEqual@plt+0x20e00>
  40fce5:	mov    rdi,rbp
  40fce8:	mov    QWORD PTR [rsp+0x20],rax
  40fced:	call   423f50 <xmlStrEqual@plt+0x20010>
  40fcf2:	sub    rsp,0x8
  40fcf6:	mov    rdx,QWORD PTR [rsp+0x40]
  40fcfb:	lea    rsi,[rip+0x3a7ae]        # 44a4b0 <xmlStrEqual@plt+0x46570>
  40fd02:	push   rdx
  40fd03:	mov    edi,0x5
  40fd08:	mov    rdx,rax
  40fd0b:	mov    r9,QWORD PTR [rsp+0x40]
  40fd10:	mov    r8,QWORD PTR [rsp+0x38]
  40fd15:	mov    rcx,QWORD PTR [rsp+0x30]
  40fd1a:	xor    eax,eax
  40fd1c:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  40fd21:	pop    r10
  40fd23:	pop    r11
  40fd25:	jmp    40fb62 <xmlStrEqual@plt+0xbc22>
  40fd2a:	call   403c00 <__stack_chk_fail@plt>
  40fd2f:	nop
  40fd30:	endbr64 
  40fd34:	push   r15
  40fd36:	push   r14
  40fd38:	push   r13
  40fd3a:	push   r12
  40fd3c:	push   rbp
  40fd3d:	push   rbx
  40fd3e:	sub    rsp,0x168
  40fd45:	mov    rax,QWORD PTR fs:0x28
  40fd4e:	mov    QWORD PTR [rsp+0x158],rax
  40fd56:	xor    eax,eax
  40fd58:	mov    rax,0x469600
  40fd5f:	cmp    QWORD PTR [rdi+0x8],rax
  40fd63:	jne    410210 <xmlStrEqual@plt+0xc2d0>
  40fd69:	mov    r15,rdi
  40fd6c:	mov    rdi,rsi
  40fd6f:	mov    r14,rsi
  40fd72:	mov    rbp,rdx
  40fd75:	call   422c30 <xmlStrEqual@plt+0x1ecf0>
  40fd7a:	mov    r12d,eax
  40fd7d:	mov    QWORD PTR [rsp+0x8],0x0
  40fd86:	cmp    eax,0x8
  40fd89:	je     410170 <xmlStrEqual@plt+0xc230>
  40fd8f:	cmp    r12d,0x7
  40fd93:	ja     410140 <xmlStrEqual@plt+0xc200>
  40fd99:	lea    rcx,[rip+0x3b490]        # 44b230 <xmlStrEqual@plt+0x472f0>
  40fda0:	mov    edx,r12d
  40fda3:	movsxd rax,DWORD PTR [rcx+rdx*4]
  40fda7:	add    rax,rcx
  40fdaa:	notrack jmp rax
  40fdad:	mov    QWORD PTR [rsp+0x8],rbp
  40fdb2:	mov    rbp,rbx
  40fdb5:	nop    DWORD PTR [rax]
  40fdb8:	vmovdqu xmm0,XMMWORD PTR [r14]
  40fdbd:	vmovdqu xmm1,XMMWORD PTR [r14+0x10]
  40fdc3:	vmovdqu xmm2,XMMWORD PTR [r14+0x20]
  40fdc9:	vmovdqu xmm3,XMMWORD PTR [r14+0x30]
  40fdcf:	xor    eax,eax
  40fdd1:	vmovaps XMMWORD PTR [rsp+0x70],xmm0
  40fdd7:	vmovaps XMMWORD PTR [rsp+0x80],xmm1
  40fde0:	vmovaps XMMWORD PTR [rsp+0x90],xmm2
  40fde9:	vmovaps XMMWORD PTR [rsp+0xa0],xmm3
  40fdf2:	call   424be0 <xmlStrEqual@plt+0x20ca0>
  40fdf7:	mov    r14,rax
  40fdfa:	mov    QWORD PTR [rsp+0x28],rax
  40fdff:	lea    rbx,[rsp+0x70]
  40fe04:	xor    eax,eax
  40fe06:	call   424be0 <xmlStrEqual@plt+0x20ca0>
  40fe0b:	mov    rdi,rbx
  40fe0e:	mov    r12,rax
  40fe11:	call   4235e0 <xmlStrEqual@plt+0x1f6a0>
  40fe16:	mov    rsi,r14
  40fe19:	mov    rdi,rbx
  40fe1c:	mov    r13,rax
  40fe1f:	call   422eb0 <xmlStrEqual@plt+0x1ef70>
  40fe24:	cmp    eax,0x1
  40fe27:	je     410230 <xmlStrEqual@plt+0xc2f0>
  40fe2d:	mov    rax,0x469e3c
  40fe34:	mov    QWORD PTR [rsp],rax
  40fe38:	xor    edi,edi
  40fe3a:	call   42e2b0 <xmlStrEqual@plt+0x2a370>
  40fe3f:	mov    rdi,QWORD PTR [rsp+0x28]
  40fe44:	call   424bf0 <xmlStrEqual@plt+0x20cb0>
  40fe49:	mov    rdi,r12
  40fe4c:	call   424bf0 <xmlStrEqual@plt+0x20cb0>
  40fe51:	mov    rax,QWORD PTR [rsp]
  40fe55:	mov    eax,DWORD PTR [rax]
  40fe57:	test   eax,eax
  40fe59:	jle    410130 <xmlStrEqual@plt+0xc1f0>
  40fe5f:	lea    rsi,[rip+0x3ab32]        # 44a998 <xmlStrEqual@plt+0x46a58>
  40fe66:	mov    edi,0x5
  40fe6b:	xor    eax,eax
  40fe6d:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  40fe72:	xor    ebx,ebx
  40fe74:	mov    rcx,QWORD PTR [rsp+0x158]
  40fe7c:	xor    rcx,QWORD PTR fs:0x28
  40fe85:	mov    eax,ebx
  40fe87:	jne    410cd7 <xmlStrEqual@plt+0xcd97>
  40fe8d:	add    rsp,0x168
  40fe94:	pop    rbx
  40fe95:	pop    rbp
  40fe96:	pop    r12
  40fe98:	pop    r13
  40fe9a:	pop    r14
  40fe9c:	pop    r15
  40fe9e:	ret    
  40fe9f:	nop
  40fea0:	mov    rax,0x469e3c
  40fea7:	mov    QWORD PTR [rsp],rax
  40feab:	lea    rdi,[r15+0x18]
  40feaf:	mov    rdx,rbp
  40feb2:	mov    rsi,r14
  40feb5:	call   40c980 <xmlStrEqual@plt+0x8a40>
  40feba:	cmp    eax,0x1
  40febd:	jne    40fe51 <xmlStrEqual@plt+0xbf11>
  40febf:	mov    rax,QWORD PTR [rsp]
  40fec3:	mov    ebx,0x1
  40fec8:	cmp    DWORD PTR [rax],0x2
  40fecb:	jle    40fe74 <xmlStrEqual@plt+0xbf34>
  40fecd:	lea    rsi,[rip+0x3aaf4]        # 44a9c8 <xmlStrEqual@plt+0x46a88>
  40fed4:	mov    edi,0x7
  40fed9:	xor    eax,eax
  40fedb:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  40fee0:	jmp    40fe74 <xmlStrEqual@plt+0xbf34>
  40fee2:	nop    WORD PTR [rax+rax*1+0x0]
  40fee8:	mov    rax,0x469e3c
  40feef:	mov    QWORD PTR [rsp],rax
  40fef3:	jmp    40fe51 <xmlStrEqual@plt+0xbf11>
  40fef8:	nop    DWORD PTR [rax+rax*1+0x0]
  40ff00:	mov    rax,0x469e3c
  40ff07:	mov    QWORD PTR [rsp],rax
  40ff0b:	vmovdqu xmm4,XMMWORD PTR [r14]
  40ff10:	vmovdqu xmm5,XMMWORD PTR [r14+0x10]
  40ff16:	vmovdqu xmm6,XMMWORD PTR [r14+0x20]
  40ff1c:	vmovdqu xmm7,XMMWORD PTR [r14+0x30]
  40ff22:	lea    rbx,[rsp+0x70]
  40ff27:	mov    rdi,rbx
  40ff2a:	vmovaps XMMWORD PTR [rsp+0x70],xmm4
  40ff30:	vmovaps XMMWORD PTR [rsp+0x80],xmm5
  40ff39:	vmovaps XMMWORD PTR [rsp+0x90],xmm6
  40ff42:	vmovaps XMMWORD PTR [rsp+0xa0],xmm7
  40ff4b:	call   4235e0 <xmlStrEqual@plt+0x1f6a0>
  40ff50:	mov    rsi,QWORD PTR [rax+0x4]
  40ff54:	mov    r13,rax
  40ff57:	mov    rax,0x475860
  40ff5e:	mov    rdi,QWORD PTR [rax]
  40ff61:	mov    QWORD PTR [rsp+0x10],rax
  40ff66:	call   435a40 <xmlStrEqual@plt+0x31b00>
  40ff6b:	mov    QWORD PTR [rsp+0x8],rax
  40ff70:	test   rax,rax
  40ff73:	je     410678 <xmlStrEqual@plt+0xc738>
  40ff79:	mov    rdi,QWORD PTR [rsp+0x8]
  40ff7e:	call   435ca0 <xmlStrEqual@plt+0x31d60>
  40ff83:	mov    QWORD PTR [rsp+0x18],rax
  40ff88:	test   BYTE PTR [r13+0x0],0x8
  40ff8d:	je     4106b0 <xmlStrEqual@plt+0xc770>
  40ff93:	mov    rax,QWORD PTR [rsp]
  40ff97:	mov    eax,DWORD PTR [rax]
  40ff99:	test   eax,eax
  40ff9b:	jg     4105b8 <xmlStrEqual@plt+0xc678>
  40ffa1:	mov    rdi,QWORD PTR [rsp+0x18]
  40ffa6:	call   43b440 <xmlStrEqual@plt+0x37500>
  40ffab:	mov    rbp,QWORD PTR [rax+0x8]
  40ffaf:	test   BYTE PTR [r13+0x0],0x4
  40ffb4:	je     40ffbb <xmlStrEqual@plt+0xc07b>
  40ffb6:	sub    DWORD PTR [r14+0x14],0x4
  40ffbb:	mov    rdi,rbx
  40ffbe:	call   4245e0 <xmlStrEqual@plt+0x206a0>
  40ffc3:	mov    rdx,QWORD PTR [rbp+0x10]
  40ffc7:	mov    rsi,rax
  40ffca:	mov    rdi,r14
  40ffcd:	call   424360 <xmlStrEqual@plt+0x20420>
  40ffd2:	cmp    eax,0x1
  40ffd5:	jne    410530 <xmlStrEqual@plt+0xc5f0>
  40ffdb:	xor    r12d,r12d
  40ffde:	cmp    BYTE PTR [r13+0x3],0x0
  40ffe3:	lea    r14,[rsp+0x68]
  40ffe8:	je     40febf <xmlStrEqual@plt+0xbf7f>
  40ffee:	mov    QWORD PTR [rsp+0x20],rbx
  40fff3:	mov    rbx,QWORD PTR [rsp]
  40fff7:	jmp    41003a <xmlStrEqual@plt+0xc0fa>
  40fff9:	nop    DWORD PTR [rax+0x0]
  410000:	mov    rdi,rbp
  410003:	call   42b110 <xmlStrEqual@plt+0x271d0>
  410008:	mov    rax,QWORD PTR [rsp+0x10]
  41000d:	mov    rsi,QWORD PTR [rsp+0x8]
  410012:	mov    rdi,QWORD PTR [rax]
  410015:	call   435af0 <xmlStrEqual@plt+0x31bb0>
  41001a:	mov    rdi,QWORD PTR [rsp+0x18]
  41001f:	mov    esi,0x3c
  410024:	call   43b470 <xmlStrEqual@plt+0x37530>
  410029:	movzx  eax,BYTE PTR [r13+0x3]
  41002e:	inc    r12d
  410031:	cmp    r12d,eax
  410034:	jge    40febf <xmlStrEqual@plt+0xbf7f>
  41003a:	xor    eax,eax
  41003c:	call   42aff0 <xmlStrEqual@plt+0x270b0>
  410041:	mov    rdi,QWORD PTR [rsp+0x20]
  410046:	mov    rdx,r14
  410049:	mov    rsi,rax
  41004c:	mov    rbp,rax
  41004f:	call   423280 <xmlStrEqual@plt+0x1f340>
  410054:	cmp    eax,0x1
  410057:	jne    410718 <xmlStrEqual@plt+0xc7d8>
  41005d:	mov    rdi,QWORD PTR [r15+0x70]
  410061:	mov    rsi,rbp
  410064:	call   408fe0 <xmlStrEqual@plt+0x50a0>
  410069:	test   rax,rax
  41006c:	je     410648 <xmlStrEqual@plt+0xc708>
  410072:	mov    eax,DWORD PTR [rbx]
  410074:	test   eax,eax
  410076:	jle    410000 <xmlStrEqual@plt+0xc0c0>
  410078:	mov    rdi,rbp
  41007b:	call   424d40 <xmlStrEqual@plt+0x20e00>
  410080:	mov    rdx,rax
  410083:	lea    rsi,[rip+0x3a66e]        # 44a6f8 <xmlStrEqual@plt+0x467b8>
  41008a:	mov    edi,0x5
  41008f:	xor    eax,eax
  410091:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  410096:	mov    r11d,DWORD PTR [rbx]
  410099:	test   r11d,r11d
  41009c:	jle    410000 <xmlStrEqual@plt+0xc0c0>
  4100a2:	mov    edx,0x3c
  4100a7:	lea    rsi,[rip+0x3a682]        # 44a730 <xmlStrEqual@plt+0x467f0>
  4100ae:	mov    edi,0x5
  4100b3:	xor    eax,eax
  4100b5:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  4100ba:	jmp    410000 <xmlStrEqual@plt+0xc0c0>
  4100bf:	nop
  4100c0:	mov    rax,0x469e3c
  4100c7:	mov    QWORD PTR [rsp],rax
  4100cb:	vmovdqu xmm0,XMMWORD PTR [r14]
  4100d0:	vmovdqu xmm1,XMMWORD PTR [r14+0x10]
  4100d6:	vmovdqu xmm2,XMMWORD PTR [r14+0x20]
  4100dc:	vmovdqu xmm3,XMMWORD PTR [r14+0x30]
  4100e2:	lea    rbx,[rsp+0x70]
  4100e7:	mov    rdi,rbx
  4100ea:	vmovaps XMMWORD PTR [rsp+0x70],xmm0
  4100f0:	vmovaps XMMWORD PTR [rsp+0x80],xmm1
  4100f9:	vmovaps XMMWORD PTR [rsp+0x90],xmm2
  410102:	vmovaps XMMWORD PTR [rsp+0xa0],xmm3
  41010b:	call   4235e0 <xmlStrEqual@plt+0x1f6a0>
  410110:	mov    rbp,rax
  410113:	test   BYTE PTR [rax],0x8
  410116:	jne    4103b8 <xmlStrEqual@plt+0xc478>
  41011c:	mov    rax,QWORD PTR [rsp]
  410120:	mov    r10d,DWORD PTR [rax]
  410123:	test   r10d,r10d
  410126:	jg     4105a8 <xmlStrEqual@plt+0xc668>
  41012c:	nop    DWORD PTR [rax+0x0]
  410130:	xor    ebx,ebx
  410132:	jmp    40fe74 <xmlStrEqual@plt+0xbf34>
  410137:	nop    WORD PTR [rax+rax*1+0x0]
  410140:	mov    rbx,0x469e3c
  410147:	mov    eax,DWORD PTR [rbx]
  410149:	test   eax,eax
  41014b:	jle    410130 <xmlStrEqual@plt+0xc1f0>
  41014d:	xor    eax,eax
  41014f:	mov    edx,r12d
  410152:	lea    rsi,[rip+0x3a807]        # 44a960 <xmlStrEqual@plt+0x46a20>
  410159:	mov    edi,0x5
  41015e:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  410163:	mov    eax,DWORD PTR [rbx]
  410165:	jmp    40fe57 <xmlStrEqual@plt+0xbf17>
  41016a:	nop    WORD PTR [rax+rax*1+0x0]
  410170:	mov    rdi,r14
  410173:	call   422ca0 <xmlStrEqual@plt+0x1ed60>
  410178:	mov    rdi,r14
  41017b:	test   BYTE PTR [rax],0x8
  41017e:	jne    4104f0 <xmlStrEqual@plt+0xc5b0>
  410184:	call   422ce0 <xmlStrEqual@plt+0x1eda0>
  410189:	cmp    eax,0x1
  41018c:	jne    410130 <xmlStrEqual@plt+0xc1f0>
  41018e:	lea    r12,[rsp+0x100]
  410196:	mov    rsi,r12
  410199:	mov    rdi,r14
  41019c:	call   4366e0 <xmlStrEqual@plt+0x327a0>
  4101a1:	lea    rbx,[rsp+0xb0]
  4101a9:	movzx  edx,WORD PTR [rsp+0x140]
  4101b1:	movzx  esi,WORD PTR [rsp+0x142]
  4101b9:	lea    rcx,[r12+0x20]
  4101be:	mov    r8,r12
  4101c1:	mov    rdi,rbx
  4101c4:	call   439130 <xmlStrEqual@plt+0x351f0>
  4101c9:	mov    rdi,r14
  4101cc:	call   422c30 <xmlStrEqual@plt+0x1ecf0>
  4101d1:	mov    r12d,eax
  4101d4:	mov    rax,0x469e3c
  4101db:	mov    r10d,DWORD PTR [rax]
  4101de:	mov    QWORD PTR [rsp],rax
  4101e2:	test   r10d,r10d
  4101e5:	jg     4105d0 <xmlStrEqual@plt+0xc690>
  4101eb:	cmp    r12d,0x7
  4101ef:	ja     410130 <xmlStrEqual@plt+0xc1f0>
  4101f5:	lea    rdx,[rip+0x3b054]        # 44b250 <xmlStrEqual@plt+0x47310>
  4101fc:	movsxd rax,DWORD PTR [rdx+r12*4]
  410200:	add    rax,rdx
  410203:	notrack jmp rax
  410206:	nop    WORD PTR cs:[rax+rax*1+0x0]
  410210:	lea    rdx,[rip+0x39e11]        # 44a028 <xmlStrEqual@plt+0x460e8>
  410217:	lea    rsi,[rip+0x3b072]        # 44b290 <xmlStrEqual@plt+0x47350>
  41021e:	lea    rdi,[rip+0x3ae6b]        # 44b090 <xmlStrEqual@plt+0x47150>
  410225:	call   4350f0 <xmlStrEqual@plt+0x311b0>
  41022a:	nop    WORD PTR [rax+rax*1+0x0]
  410230:	movzx  eax,BYTE PTR [r13+0x0]
  410235:	test   al,0x2
  410237:	je     410560 <xmlStrEqual@plt+0xc620>
  41023d:	cmp    BYTE PTR [r13+0x3],0x1
  410242:	ja     4107a0 <xmlStrEqual@plt+0xc860>
  410248:	mov    rdi,0x424bf0
  41024f:	call   42dca0 <xmlStrEqual@plt+0x29d60>
  410254:	mov    rsi,rax
  410257:	mov    rdi,rbx
  41025a:	mov    QWORD PTR [rsp+0x30],rax
  41025f:	call   422f40 <xmlStrEqual@plt+0x1f000>
  410264:	xor    eax,eax
  410266:	mov    edi,0x2
  41026b:	call   423cc0 <xmlStrEqual@plt+0x1fd80>
  410270:	cmp    BYTE PTR [r13+0x3],0x0
  410275:	mov    QWORD PTR [rsp+0x10],rax
  41027a:	je     4107cd <xmlStrEqual@plt+0xc88d>
  410280:	mov    rax,0x469e3c
  410287:	mov    QWORD PTR [rsp+0x20],rbp
  41028c:	mov    QWORD PTR [rsp+0x18],rbx
  410291:	xor    r14d,r14d
  410294:	mov    QWORD PTR [rsp],rax
  410298:	mov    rbp,QWORD PTR [rsp+0x28]
  41029d:	mov    rbx,rax
  4102a0:	jmp    4102b9 <xmlStrEqual@plt+0xc379>
  4102a2:	nop    WORD PTR [rax+rax*1+0x0]
  4102a8:	movzx  eax,BYTE PTR [r13+0x3]
  4102ad:	inc    r14d
  4102b0:	cmp    r14d,eax
  4102b3:	jge    4107c8 <xmlStrEqual@plt+0xc888>
  4102b9:	mov    rdi,QWORD PTR [rsp+0x18]
  4102be:	mov    rsi,r12
  4102c1:	call   422ef0 <xmlStrEqual@plt+0x1efb0>
  4102c6:	cmp    eax,0x1
  4102c9:	jne    4106f0 <xmlStrEqual@plt+0xc7b0>
  4102cf:	mov    edi,DWORD PTR [rbx]
  4102d1:	test   edi,edi
  4102d3:	jle    4102f3 <xmlStrEqual@plt+0xc3b3>
  4102d5:	mov    rdi,r12
  4102d8:	call   424d40 <xmlStrEqual@plt+0x20e00>
  4102dd:	mov    rdx,rax
  4102e0:	lea    rsi,[rip+0x38a1b]        # 448d02 <xmlStrEqual@plt+0x44dc2>
  4102e7:	mov    edi,0x5
  4102ec:	xor    eax,eax
  4102ee:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  4102f3:	mov    rdi,QWORD PTR [r15+0x70]
  4102f7:	mov    edx,0x1
  4102fc:	mov    rsi,r12
  4102ff:	call   408e50 <xmlStrEqual@plt+0x4f10>
  410304:	test   rax,rax
  410307:	je     4106c8 <xmlStrEqual@plt+0xc788>
  41030d:	mov    rdi,rax
  410310:	call   434a40 <xmlStrEqual@plt+0x30b00>
  410315:	test   BYTE PTR [r13+0x0],0x2
  41031a:	mov    edx,0x0
  41031f:	cmovne rdx,QWORD PTR [rsp+0x20]
  410325:	mov    rdi,QWORD PTR [rsp+0x10]
  41032a:	mov    rsi,rax
  41032d:	call   423740 <xmlStrEqual@plt+0x1f800>
  410332:	mov    ecx,DWORD PTR [rbp+0x18]
  410335:	test   ecx,ecx
  410337:	je     4102a8 <xmlStrEqual@plt+0xc368>
  41033d:	test   BYTE PTR [r13+0x0],0x1
  410342:	je     4102a8 <xmlStrEqual@plt+0xc368>
  410348:	mov    rdi,r12
  41034b:	call   425670 <xmlStrEqual@plt+0x21730>
  410350:	mov    rdi,rax
  410353:	mov    esi,0x1
  410358:	call   424dd0 <xmlStrEqual@plt+0x20e90>
  41035d:	lea    rdi,[r15+0x18]
  410361:	mov    rdx,rbp
  410364:	mov    rsi,r12
  410367:	call   40d720 <xmlStrEqual@plt+0x97e0>
  41036c:	cmp    eax,0x1
  41036f:	jne    4106f0 <xmlStrEqual@plt+0xc7b0>
  410375:	test   BYTE PTR [r13+0x0],0x2
  41037a:	jne    4102a8 <xmlStrEqual@plt+0xc368>
  410380:	endbr64 
  410384:	mov    rdi,QWORD PTR [rsp+0x30]
  410389:	call   42e2b0 <xmlStrEqual@plt+0x2a370>
  41038e:	cmp    QWORD PTR [rsp+0x10],0x0
  410394:	jne    410982 <xmlStrEqual@plt+0xca42>
  41039a:	mov    rdi,QWORD PTR [rsp+0x28]
  41039f:	call   424bf0 <xmlStrEqual@plt+0x20cb0>
  4103a4:	mov    rdi,r12
  4103a7:	call   424bf0 <xmlStrEqual@plt+0x20cb0>
  4103ac:	jmp    40febf <xmlStrEqual@plt+0xbf7f>
  4103b1:	nop    DWORD PTR [rax+0x0]
  4103b8:	mov    rsi,QWORD PTR [rax+0x4]
  4103bc:	mov    rax,0x475860
  4103c3:	mov    rdi,QWORD PTR [rax]
  4103c6:	mov    QWORD PTR [rsp+0x10],rax
  4103cb:	call   435a40 <xmlStrEqual@plt+0x31b00>
  4103d0:	mov    r13,rax
  4103d3:	test   rax,rax
  4103d6:	je     410600 <xmlStrEqual@plt+0xc6c0>
  4103dc:	mov    rdi,rax
  4103df:	call   435ca0 <xmlStrEqual@plt+0x31d60>
  4103e4:	mov    rdi,rax
  4103e7:	call   43b440 <xmlStrEqual@plt+0x37500>
  4103ec:	mov    rbp,rax
  4103ef:	mov    rax,QWORD PTR [rax]
  4103f2:	mov    rdi,rbx
  4103f5:	mov    QWORD PTR [rsp+0x8],rax
  4103fa:	call   4245e0 <xmlStrEqual@plt+0x206a0>
  4103ff:	mov    QWORD PTR [rsp+0x20],rax
  410404:	mov    eax,DWORD PTR [rsp+0x84]
  41040b:	cmp    eax,0x5
  41040e:	jbe    410868 <xmlStrEqual@plt+0xc928>
  410414:	mov    rcx,QWORD PTR [rsp+0xa8]
  41041c:	sub    eax,0x6
  41041f:	lea    rdx,[rcx+0x6]
  410423:	mov    QWORD PTR [rsp+0x18],rcx
  410428:	mov    QWORD PTR [rsp+0xa8],rdx
  410430:	mov    DWORD PTR [rsp+0x84],eax
  410437:	xor    eax,eax
  410439:	call   424be0 <xmlStrEqual@plt+0x20ca0>
  41043e:	mov    rdi,QWORD PTR [rsp+0xa8]
  410446:	mov    rsi,rax
  410449:	mov    rbx,rax
  41044c:	call   425230 <xmlStrEqual@plt+0x212f0>
  410451:	test   eax,eax
  410453:	jle    4104dd <xmlStrEqual@plt+0xc59d>
  410459:	mov    edx,DWORD PTR [rsp+0x84]
  410460:	cmp    eax,edx
  410462:	ja     410477 <xmlStrEqual@plt+0xc537>
  410464:	mov    ecx,eax
  410466:	sub    edx,eax
  410468:	add    QWORD PTR [rsp+0xa8],rcx
  410470:	mov    DWORD PTR [rsp+0x84],edx
  410477:	mov    rax,QWORD PTR [rsp+0x18]
  41047c:	mov    rdi,rbx
  41047f:	movzx  esi,BYTE PTR [rax+0x5]
  410483:	call   425730 <xmlStrEqual@plt+0x217f0>
  410488:	mov    rdi,QWORD PTR [rsp+0x8]
  41048d:	call   434ad0 <xmlStrEqual@plt+0x30b90>
  410492:	mov    rsi,rax
  410495:	mov    rdi,rbx
  410498:	mov    r12,rax
  41049b:	call   425310 <xmlStrEqual@plt+0x213d0>
  4104a0:	test   eax,eax
  4104a2:	je     410730 <xmlStrEqual@plt+0xc7f0>
  4104a8:	mov    rax,QWORD PTR [rsp]
  4104ac:	cmp    DWORD PTR [rax],0x1
  4104af:	jle    4104dd <xmlStrEqual@plt+0xc59d>
  4104b1:	mov    rdi,rbx
  4104b4:	call   424d40 <xmlStrEqual@plt+0x20e00>
  4104b9:	mov    rdi,r12
  4104bc:	mov    rbp,rax
  4104bf:	call   424d40 <xmlStrEqual@plt+0x20e00>
  4104c4:	mov    rdx,rax
  4104c7:	mov    rcx,rbp
  4104ca:	lea    rsi,[rip+0x3a30f]        # 44a7e0 <xmlStrEqual@plt+0x468a0>
  4104d1:	mov    edi,0x6
  4104d6:	xor    eax,eax
  4104d8:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  4104dd:	mov    rdi,rbx
  4104e0:	call   424bf0 <xmlStrEqual@plt+0x20cb0>
  4104e5:	jmp    40fe51 <xmlStrEqual@plt+0xbf11>
  4104ea:	nop    WORD PTR [rax+rax*1+0x0]
  4104f0:	call   424180 <xmlStrEqual@plt+0x20240>
  4104f5:	mov    rax,0x469e3c
  4104fc:	cmp    DWORD PTR [rax],0x1
  4104ff:	jle    410130 <xmlStrEqual@plt+0xc1f0>
  410505:	mov    rdi,r14
  410508:	call   424180 <xmlStrEqual@plt+0x20240>
  41050d:	mov    edx,eax
  41050f:	lea    rsi,[rip+0x3a0f2]        # 44a608 <xmlStrEqual@plt+0x466c8>
  410516:	mov    edi,0x6
  41051b:	xor    eax,eax
  41051d:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  410522:	xor    ebx,ebx
  410524:	jmp    40fe74 <xmlStrEqual@plt+0xbf34>
  410529:	nop    DWORD PTR [rax+0x0]
  410530:	mov    rax,QWORD PTR [rsp]
  410534:	lea    rsi,[rip+0x387df]        # 448d1a <xmlStrEqual@plt+0x44dda>
  41053b:	mov    eax,DWORD PTR [rax]
  41053d:	test   eax,eax
  41053f:	jle    410130 <xmlStrEqual@plt+0xc1f0>
  410545:	xor    eax,eax
  410547:	mov    edi,0x5
  41054c:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  410551:	mov    rax,QWORD PTR [rsp]
  410555:	mov    eax,DWORD PTR [rax]
  410557:	jmp    40fe57 <xmlStrEqual@plt+0xbf17>
  41055c:	nop    DWORD PTR [rax+0x0]
  410560:	test   al,0x1
  410562:	je     410248 <xmlStrEqual@plt+0xc308>
  410568:	cmp    BYTE PTR [r13+0x3],0x1
  41056d:	jbe    410248 <xmlStrEqual@plt+0xc308>
  410573:	mov    rax,0x469e3c
  41057a:	mov    r8d,DWORD PTR [rax]
  41057d:	mov    QWORD PTR [rsp],rax
  410581:	test   r8d,r8d
  410584:	jle    40fe38 <xmlStrEqual@plt+0xbef8>
  41058a:	lea    rsi,[rip+0x38baf]        # 449140 <xmlStrEqual@plt+0x45200>
  410591:	mov    edi,0x5
  410596:	xor    eax,eax
  410598:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  41059d:	jmp    40fe38 <xmlStrEqual@plt+0xbef8>
  4105a2:	nop    WORD PTR [rax+rax*1+0x0]
  4105a8:	lea    rsi,[rip+0x3a1b1]        # 44a760 <xmlStrEqual@plt+0x46820>
  4105af:	jmp    410545 <xmlStrEqual@plt+0xc605>
  4105b1:	nop    DWORD PTR [rax+0x0]
  4105b8:	lea    rsi,[rip+0x3ab57]        # 44b116 <xmlStrEqual@plt+0x471d6>
  4105bf:	mov    edi,0x5
  4105c4:	xor    eax,eax
  4105c6:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  4105cb:	jmp    40ffa1 <xmlStrEqual@plt+0xc061>
  4105d0:	mov    rdi,r14
  4105d3:	call   423f50 <xmlStrEqual@plt+0x20010>
  4105d8:	mov    rdx,rax
  4105db:	lea    rsi,[rip+0x3ab16]        # 44b0f8 <xmlStrEqual@plt+0x471b8>
  4105e2:	mov    edi,0x5
  4105e7:	xor    eax,eax
  4105e9:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  4105ee:	mov    QWORD PTR [rsp+0x8],rbp
  4105f3:	mov    rbp,rbx
  4105f6:	jmp    40fd8f <xmlStrEqual@plt+0xbe4f>
  4105fb:	nop    DWORD PTR [rax+rax*1+0x0]
  410600:	mov    rax,QWORD PTR [rsp]
  410604:	mov    eax,DWORD PTR [rax]
  410606:	cmp    eax,0x1
  410609:	jle    40fe57 <xmlStrEqual@plt+0xbf17>
  41060f:	mov    rdi,QWORD PTR [rbp+0x4]
  410613:	call   435170 <xmlStrEqual@plt+0x31230>
  410618:	mov    rdx,rax
  41061b:	lea    rsi,[rip+0x3a176]        # 44a798 <xmlStrEqual@plt+0x46858>
  410622:	xor    eax,eax
  410624:	mov    edi,0x6
  410629:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  41062e:	mov    rax,QWORD PTR [rsp]
  410632:	mov    eax,DWORD PTR [rax]
  410634:	jmp    40fe57 <xmlStrEqual@plt+0xbf17>
  410639:	mov    rbp,rbx
  41063c:	jmp    40feab <xmlStrEqual@plt+0xbf6b>
  410641:	nop    DWORD PTR [rax+0x0]
  410648:	mov    eax,DWORD PTR [rbx]
  41064a:	test   eax,eax
  41064c:	jle    410029 <xmlStrEqual@plt+0xc0e9>
  410652:	mov    rdi,rbp
  410655:	call   424d40 <xmlStrEqual@plt+0x20e00>
  41065a:	mov    rdx,rax
  41065d:	lea    rsi,[rip+0x3a054]        # 44a6b8 <xmlStrEqual@plt+0x46778>
  410664:	mov    edi,0x5
  410669:	xor    eax,eax
  41066b:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  410670:	jmp    410029 <xmlStrEqual@plt+0xc0e9>
  410675:	nop    DWORD PTR [rax]
  410678:	mov    rax,QWORD PTR [rsp]
  41067c:	mov    eax,DWORD PTR [rax]
  41067e:	test   eax,eax
  410680:	jle    410130 <xmlStrEqual@plt+0xc1f0>
  410686:	mov    rdi,QWORD PTR [r13+0x4]
  41068a:	call   435170 <xmlStrEqual@plt+0x31230>
  41068f:	mov    rdx,rax
  410692:	lea    rsi,[rip+0x39fdf]        # 44a678 <xmlStrEqual@plt+0x46738>
  410699:	xor    eax,eax
  41069b:	mov    edi,0x5
  4106a0:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  4106a5:	mov    rax,QWORD PTR [rsp]
  4106a9:	mov    eax,DWORD PTR [rax]
  4106ab:	jmp    40fe57 <xmlStrEqual@plt+0xbf17>
  4106b0:	mov    rdi,QWORD PTR [rsp+0x18]
  4106b5:	call   43b440 <xmlStrEqual@plt+0x37500>
  4106ba:	mov    rbp,QWORD PTR [rax+0x8]
  4106be:	jmp    40ffbb <xmlStrEqual@plt+0xc07b>
  4106c3:	nop    DWORD PTR [rax+rax*1+0x0]
  4106c8:	mov    rax,QWORD PTR [rsp]
  4106cc:	mov    esi,DWORD PTR [rax]
  4106ce:	test   esi,esi
  4106d0:	jle    4106f0 <xmlStrEqual@plt+0xc7b0>
  4106d2:	mov    rdi,r12
  4106d5:	call   424d40 <xmlStrEqual@plt+0x20e00>
  4106da:	mov    rdx,rax
  4106dd:	lea    rsi,[rip+0x39f44]        # 44a628 <xmlStrEqual@plt+0x466e8>
  4106e4:	mov    edi,0x5
  4106e9:	xor    eax,eax
  4106eb:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  4106f0:	mov    rdi,QWORD PTR [rsp+0x30]
  4106f5:	call   42e2b0 <xmlStrEqual@plt+0x2a370>
  4106fa:	cmp    QWORD PTR [rsp+0x10],0x0
  410700:	je     40fe3f <xmlStrEqual@plt+0xbeff>
  410706:	mov    rdi,QWORD PTR [rsp+0x10]
  41070b:	call   430820 <xmlStrEqual@plt+0x2c8e0>
  410710:	jmp    40fe3f <xmlStrEqual@plt+0xbeff>
  410715:	nop    DWORD PTR [rax]
  410718:	mov    rdi,rbp
  41071b:	call   42b110 <xmlStrEqual@plt+0x271d0>
  410720:	mov    rax,QWORD PTR [rsp]
  410724:	mov    eax,DWORD PTR [rax]
  410726:	jmp    40fe57 <xmlStrEqual@plt+0xbf17>
  41072b:	nop    DWORD PTR [rax+rax*1+0x0]
  410730:	mov    rdi,rbx
  410733:	call   424bf0 <xmlStrEqual@plt+0x20cb0>
  410738:	mov    rax,QWORD PTR [rbp+0x10]
  41073c:	mov    rsi,QWORD PTR [rsp+0x20]
  410741:	mov    rdx,QWORD PTR [rax+0x10]
  410745:	mov    rdi,r14
  410748:	call   424360 <xmlStrEqual@plt+0x20420>
  41074d:	cmp    eax,0x1
  410750:	je     410876 <xmlStrEqual@plt+0xc936>
  410756:	mov    rax,QWORD PTR [rsp]
  41075a:	mov    r9d,DWORD PTR [rax]
  41075d:	test   r9d,r9d
  410760:	jle    410130 <xmlStrEqual@plt+0xc1f0>
  410766:	mov    rax,QWORD PTR [rbp+0x10]
  41076a:	mov    rdi,r12
  41076d:	mov    rbx,QWORD PTR [rax+0x10]
  410771:	call   424d40 <xmlStrEqual@plt+0x20e00>
  410776:	mov    rdx,rax
  410779:	mov    rcx,rbx
  41077c:	xor    eax,eax
  41077e:	lea    rsi,[rip+0x3a09b]        # 44a820 <xmlStrEqual@plt+0x468e0>
  410785:	mov    edi,0x5
  41078a:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  41078f:	mov    rax,QWORD PTR [rsp]
  410793:	mov    eax,DWORD PTR [rax]
  410795:	jmp    40fe57 <xmlStrEqual@plt+0xbf17>
  41079a:	nop    WORD PTR [rax+rax*1+0x0]
  4107a0:	mov    rax,0x469e3c
  4107a7:	lea    rsi,[rip+0x3895a]        # 449108 <xmlStrEqual@plt+0x451c8>
  4107ae:	mov    r9d,DWORD PTR [rax]
  4107b1:	mov    QWORD PTR [rsp],rax
  4107b5:	test   r9d,r9d
  4107b8:	jle    40fe38 <xmlStrEqual@plt+0xbef8>
  4107be:	jmp    410591 <xmlStrEqual@plt+0xc651>
  4107c3:	nop    DWORD PTR [rax+rax*1+0x0]
  4107c8:	mov    rbp,QWORD PTR [rsp+0x20]
  4107cd:	mov    rax,QWORD PTR [rsp+0x10]
  4107d2:	movzx  eax,WORD PTR [rax+0x24]
  4107d6:	cmp    ax,0xffff
  4107da:	je     410cdc <xmlStrEqual@plt+0xcd9c>
  4107e0:	mov    rcx,QWORD PTR [rsp+0x10]
  4107e5:	lea    rbx,[rsp+0x100]
  4107ed:	add    rax,QWORD PTR [rcx+0x30]
  4107f1:	movzx  ecx,BYTE PTR [r13+0x0]
  4107f6:	mov    rsi,QWORD PTR [rsp+0x30]
  4107fb:	lea    edx,[rcx*4+0x0]
  410802:	mov    ecx,edx
  410804:	movzx  edx,BYTE PTR [rax]
  410807:	and    ecx,0x8
  41080a:	and    edx,0xfffffff7
  41080d:	or     edx,ecx
  41080f:	mov    BYTE PTR [rax],dl
  410811:	mov    rcx,QWORD PTR [rsp+0x8]
  410816:	mov    r8,rbx
  410819:	mov    rdx,QWORD PTR [r13+0x4]
  41081d:	mov    rdi,r15
  410820:	mov    QWORD PTR [rax+0x4],rdx
  410824:	mov    rdx,rbp
  410827:	call   408bf0 <xmlStrEqual@plt+0x4cb0>
  41082c:	cmp    eax,0x1
  41082f:	mov    rax,0x469e3c
  410836:	mov    QWORD PTR [rsp],rax
  41083a:	je     410942 <xmlStrEqual@plt+0xca02>
  410840:	mov    edx,DWORD PTR [rax]
  410842:	test   edx,edx
  410844:	jle    410859 <xmlStrEqual@plt+0xc919>
  410846:	lea    rsi,[rip+0x39dfb]        # 44a648 <xmlStrEqual@plt+0x46708>
  41084d:	mov    edi,0x5
  410852:	xor    eax,eax
  410854:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  410859:	mov    rdi,QWORD PTR [rsp+0x30]
  41085e:	call   42e2b0 <xmlStrEqual@plt+0x2a370>
  410863:	jmp    410706 <xmlStrEqual@plt+0xc7c6>
  410868:	mov    QWORD PTR [rsp+0x18],0x0
  410871:	jmp    410437 <xmlStrEqual@plt+0xc4f7>
  410876:	xor    eax,eax
  410878:	call   424be0 <xmlStrEqual@plt+0x20ca0>
  41087d:	mov    rdi,QWORD PTR [rsp+0xa8]
  410885:	mov    rsi,rax
  410888:	mov    QWORD PTR [rsp+0x28],rax
  41088d:	call   425230 <xmlStrEqual@plt+0x212f0>
  410892:	mov    rdi,QWORD PTR [rsp+0x28]
  410897:	test   eax,eax
  410899:	jle    410ac1 <xmlStrEqual@plt+0xcb81>
  41089f:	call   428da0 <xmlStrEqual@plt+0x24e60>
  4108a4:	mov    rdi,rax
  4108a7:	call   429f60 <xmlStrEqual@plt+0x26020>
  4108ac:	mov    rdi,0x424bf0
  4108b3:	mov    rbx,rax
  4108b6:	call   42dca0 <xmlStrEqual@plt+0x29d60>
  4108bb:	mov    esi,0x1
  4108c0:	mov    rdi,rbx
  4108c3:	mov    r14,rax
  4108c6:	mov    QWORD PTR [rsp+0x20],rax
  4108cb:	call   43bd00 <xmlStrEqual@plt+0x37dc0>
  4108d0:	mov    r8d,DWORD PTR [rbx+0x18]
  4108d4:	test   r8d,r8d
  4108d7:	je     4108f6 <xmlStrEqual@plt+0xc9b6>
  4108d9:	mov    rax,QWORD PTR [rbx+0x8]
  4108dd:	mov    rdi,QWORD PTR [rax+0x10]
  4108e1:	test   rdi,rdi
  4108e4:	je     4108f6 <xmlStrEqual@plt+0xc9b6>
  4108e6:	call   425060 <xmlStrEqual@plt+0x21120>
  4108eb:	mov    rdi,rax
  4108ee:	mov    rsi,r14
  4108f1:	call   42dcf0 <xmlStrEqual@plt+0x29db0>
  4108f6:	mov    rax,QWORD PTR [rsp+0x20]
  4108fb:	mov    edi,DWORD PTR [rax+0x18]
  4108fe:	test   edi,edi
  410900:	jne    410991 <xmlStrEqual@plt+0xca51>
  410906:	mov    rax,QWORD PTR [rsp]
  41090a:	mov    esi,DWORD PTR [rax]
  41090c:	test   esi,esi
  41090e:	jle    410923 <xmlStrEqual@plt+0xc9e3>
  410910:	lea    rsi,[rip+0x39f99]        # 44a8b0 <xmlStrEqual@plt+0x46970>
  410917:	mov    edi,0x5
  41091c:	xor    eax,eax
  41091e:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  410923:	mov    rdi,QWORD PTR [rsp+0x20]
  410928:	call   42e2b0 <xmlStrEqual@plt+0x2a370>
  41092d:	mov    rdi,QWORD PTR [rsp+0x28]
  410932:	call   424bf0 <xmlStrEqual@plt+0x20cb0>
  410937:	mov    rax,QWORD PTR [rsp]
  41093b:	mov    eax,DWORD PTR [rax]
  41093d:	jmp    40fe57 <xmlStrEqual@plt+0xbf17>
  410942:	mov    eax,DWORD PTR [rax]
  410944:	test   eax,eax
  410946:	jle    410968 <xmlStrEqual@plt+0xca28>
  410948:	mov    rdi,QWORD PTR [rsp+0x10]
  41094d:	call   423f50 <xmlStrEqual@plt+0x20010>
  410952:	mov    rdx,rax
  410955:	lea    rsi,[rip+0x383b3]        # 448d0f <xmlStrEqual@plt+0x44dcf>
  41095c:	mov    edi,0x5
  410961:	xor    eax,eax
  410963:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  410968:	mov    rsi,QWORD PTR [rsp+0x10]
  41096d:	mov    rdi,r15
  410970:	mov    rdx,rbx
  410973:	call   4089b0 <xmlStrEqual@plt+0x4a70>
  410978:	mov    rdi,QWORD PTR [rsp+0x30]
  41097d:	call   42e2b0 <xmlStrEqual@plt+0x2a370>
  410982:	mov    rdi,QWORD PTR [rsp+0x10]
  410987:	call   430820 <xmlStrEqual@plt+0x2c8e0>
  41098c:	jmp    41039a <xmlStrEqual@plt+0xc45a>
  410991:	mov    rdi,QWORD PTR [rsp+0x8]
  410996:	call   434a40 <xmlStrEqual@plt+0x30b00>
  41099b:	mov    rbx,rax
  41099e:	mov    rax,QWORD PTR [rsp+0x20]
  4109a3:	mov    r14,QWORD PTR [rsp+0x20]
  4109a8:	mov    r12,QWORD PTR [rax+0x8]
  4109ac:	cmp    r12,rax
  4109af:	jne    4109ce <xmlStrEqual@plt+0xca8e>
  4109b1:	jmp    410ccd <xmlStrEqual@plt+0xcd8d>
  4109b6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4109c0:	mov    r12,QWORD PTR [r12+0x8]
  4109c5:	cmp    r12,r14
  4109c8:	je     410ccd <xmlStrEqual@plt+0xcd8d>
  4109ce:	mov    rsi,QWORD PTR [r12+0x10]
  4109d3:	mov    rdi,rbx
  4109d6:	call   42b790 <xmlStrEqual@plt+0x27850>
  4109db:	test   rax,rax
  4109de:	jne    4109c0 <xmlStrEqual@plt+0xca80>
  4109e0:	mov    BYTE PTR [rsp+0x47],0x1
  4109e5:	mov    rbx,QWORD PTR [rsp+0x8]
  4109ea:	mov    rdx,QWORD PTR [rsp+0x20]
  4109ef:	mov    rsi,QWORD PTR [rbp+0x8]
  4109f3:	mov    rdi,rbx
  4109f6:	call   434ce0 <xmlStrEqual@plt+0x30da0>
  4109fb:	mov    rdi,QWORD PTR [r15+0x40]
  4109ff:	mov    rax,QWORD PTR [r15+0x38]
  410a03:	mov    rsi,rbx
  410a06:	call   QWORD PTR [rax+0x30]
  410a09:	mov    rdi,rbx
  410a0c:	call   434ad0 <xmlStrEqual@plt+0x30b90>
  410a11:	mov    rsi,rax
  410a14:	mov    edx,0x1
  410a19:	mov    rdi,r15
  410a1c:	call   4089c0 <xmlStrEqual@plt+0x4a80>
  410a21:	mov    esi,0x2
  410a26:	mov    rdi,r15
  410a29:	call   40d8d0 <xmlStrEqual@plt+0x9990>
  410a2e:	mov    esi,0xa
  410a33:	mov    rdi,r15
  410a36:	call   40d8d0 <xmlStrEqual@plt+0x9990>
  410a3b:	mov    rax,QWORD PTR [r15+0x78]
  410a3f:	mov    ecx,DWORD PTR [rax+0x18]
  410a42:	test   ecx,ecx
  410a44:	je     410bf6 <xmlStrEqual@plt+0xccb6>
  410a4a:	mov    rax,QWORD PTR [rbp+0x8]
  410a4e:	mov    rsi,QWORD PTR [rsp+0x8]
  410a53:	mov    QWORD PTR [rsp+0x30],rax
  410a58:	mov    rax,0x475858
  410a5f:	mov    edx,0x3
  410a64:	mov    rdi,QWORD PTR [rax]
  410a67:	call   43b840 <xmlStrEqual@plt+0x37900>
  410a6c:	mov    rbx,QWORD PTR [rax+0x8]
  410a70:	mov    r8,rax
  410a73:	mov    r14,rax
  410a76:	cmp    rax,rbx
  410a79:	jne    410a89 <xmlStrEqual@plt+0xcb49>
  410a7b:	jmp    410af6 <xmlStrEqual@plt+0xcbb6>
  410a7d:	nop    DWORD PTR [rax]
  410a80:	mov    rbx,QWORD PTR [rbx+0x8]
  410a84:	cmp    r14,rbx
  410a87:	je     410af3 <xmlStrEqual@plt+0xcbb3>
  410a89:	mov    r12,QWORD PTR [rbx+0x10]
  410a8d:	mov    rdi,r12
  410a90:	call   43b440 <xmlStrEqual@plt+0x37500>
  410a95:	mov    rcx,QWORD PTR [rsp+0x30]
  410a9a:	cmp    rcx,QWORD PTR [rax+0x10]
  410a9e:	jne    410a80 <xmlStrEqual@plt+0xcb40>
  410aa0:	mov    rax,QWORD PTR [rsp+0x10]
  410aa5:	mov    rdi,QWORD PTR [rsp+0x8]
  410aaa:	mov    rcx,QWORD PTR [rax]
  410aad:	mov    rax,0x475858
  410ab4:	mov    rsi,r12
  410ab7:	mov    rdx,QWORD PTR [rax]
  410aba:	call   43bab0 <xmlStrEqual@plt+0x37b70>
  410abf:	jmp    410a80 <xmlStrEqual@plt+0xcb40>
  410ac1:	call   424bf0 <xmlStrEqual@plt+0x20cb0>
  410ac6:	mov    rax,QWORD PTR [rsp]
  410aca:	mov    eax,DWORD PTR [rax]
  410acc:	cmp    eax,0x1
  410acf:	jle    40fe57 <xmlStrEqual@plt+0xbf17>
  410ad5:	xor    eax,eax
  410ad7:	lea    rsi,[rip+0x39d9a]        # 44a878 <xmlStrEqual@plt+0x46938>
  410ade:	mov    edi,0x6
  410ae3:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  410ae8:	mov    rax,QWORD PTR [rsp]
  410aec:	mov    eax,DWORD PTR [rax]
  410aee:	jmp    40fe57 <xmlStrEqual@plt+0xbf17>
  410af3:	mov    r8,r14
  410af6:	mov    rdi,r8
  410af9:	call   42e2b0 <xmlStrEqual@plt+0x2a370>
  410afe:	mov    rax,QWORD PTR [rsp+0x30]
  410b03:	mov    rdi,QWORD PTR [rsp+0x8]
  410b08:	mov    rsi,QWORD PTR [rax]
  410b0b:	call   434f60 <xmlStrEqual@plt+0x31020>
  410b10:	mov    rcx,QWORD PTR [rax+0x8]
  410b14:	mov    QWORD PTR [rsp+0x48],rax
  410b19:	mov    QWORD PTR [rsp+0x38],rcx
  410b1e:	cmp    rax,rcx
  410b21:	je     410bf6 <xmlStrEqual@plt+0xccb6>
  410b27:	mov    QWORD PTR [rsp+0x50],r13
  410b2c:	mov    QWORD PTR [rsp+0x58],rbp
  410b31:	mov    rbx,QWORD PTR [rsp+0x8]
  410b36:	mov    r14,QWORD PTR [rsp+0x30]
  410b3b:	mov    rax,QWORD PTR [rsp+0x38]
  410b40:	mov    rax,QWORD PTR [rax+0x10]
  410b44:	mov    QWORD PTR [rsp+0x30],rax
  410b49:	mov    rax,QWORD PTR [r15+0x78]
  410b4d:	mov    rbp,QWORD PTR [rax+0x8]
  410b51:	cmp    rax,rbp
  410b54:	je     410bd3 <xmlStrEqual@plt+0xcc93>
  410b56:	nop    WORD PTR cs:[rax+rax*1+0x0]
  410b60:	mov    r13,QWORD PTR [rbp+0x10]
  410b64:	mov    edi,0x20
  410b69:	call   435000 <xmlStrEqual@plt+0x310c0>
  410b6e:	mov    QWORD PTR [rax],rbx
  410b71:	mov    QWORD PTR [rax+0x8],r13
  410b75:	mov    QWORD PTR [rax+0x10],r14
  410b79:	mov    rdi,QWORD PTR [rsp+0x30]
  410b7e:	mov    r12,rax
  410b81:	call   425060 <xmlStrEqual@plt+0x21120>
  410b86:	mov    QWORD PTR [r12+0x18],rax
  410b8b:	mov    rcx,r12
  410b8e:	lea    r8,[rip+0xffffffffffffcd0b]        # 40d8a0 <xmlStrEqual@plt+0x9960>
  410b95:	lea    rdx,[rip+0xffffffffffffed44]        # 40f8e0 <xmlStrEqual@plt+0xb9a0>
  410b9c:	mov    rsi,r15
  410b9f:	mov    edi,0x3
  410ba4:	call   43b760 <xmlStrEqual@plt+0x37820>
  410ba9:	mov    rdx,rax
  410bac:	mov    r12,rax
  410baf:	mov    rax,0x475858
  410bb6:	mov    rsi,rbx
  410bb9:	mov    rdi,QWORD PTR [rax]
  410bbc:	call   43b7c0 <xmlStrEqual@plt+0x37880>
  410bc1:	mov    rdi,r12
  410bc4:	call   40f8e0 <xmlStrEqual@plt+0xb9a0>
  410bc9:	mov    rbp,QWORD PTR [rbp+0x8]
  410bcd:	cmp    rbp,QWORD PTR [r15+0x78]
  410bd1:	jne    410b60 <xmlStrEqual@plt+0xcc20>
  410bd3:	mov    rax,QWORD PTR [rsp+0x38]
  410bd8:	mov    rax,QWORD PTR [rax+0x8]
  410bdc:	mov    QWORD PTR [rsp+0x38],rax
  410be1:	cmp    QWORD PTR [rsp+0x48],rax
  410be6:	jne    410b3b <xmlStrEqual@plt+0xcbfb>
  410bec:	mov    r13,QWORD PTR [rsp+0x50]
  410bf1:	mov    rbp,QWORD PTR [rsp+0x58]
  410bf6:	mov    rax,QWORD PTR [rsp+0x10]
  410bfb:	mov    rsi,r13
  410bfe:	mov    rdi,QWORD PTR [rax]
  410c01:	call   435af0 <xmlStrEqual@plt+0x31bb0>
  410c06:	mov    rax,QWORD PTR [rsp+0x18]
  410c0b:	mov    rdi,QWORD PTR [r13+0x8]
  410c0f:	movbe  ebx,DWORD PTR [rax]
  410c13:	imul   esi,ebx,0x3c
  410c16:	call   43b470 <xmlStrEqual@plt+0x37530>
  410c1b:	mov    rax,QWORD PTR [rsp]
  410c1f:	mov    edx,DWORD PTR [rax]
  410c21:	test   edx,edx
  410c23:	jg     410c52 <xmlStrEqual@plt+0xcd12>
  410c25:	cmp    BYTE PTR [rsp+0x47],0x0
  410c2a:	je     410c39 <xmlStrEqual@plt+0xccf9>
  410c2c:	mov    esi,0x1
  410c31:	mov    rdi,r15
  410c34:	call   40dcf0 <xmlStrEqual@plt+0x9db0>
  410c39:	mov    rdi,QWORD PTR [rsp+0x28]
  410c3e:	call   424bf0 <xmlStrEqual@plt+0x20cb0>
  410c43:	mov    rdi,QWORD PTR [rsp+0x20]
  410c48:	call   42e2b0 <xmlStrEqual@plt+0x2a370>
  410c4d:	jmp    40febf <xmlStrEqual@plt+0xbf7f>
  410c52:	mov    rax,QWORD PTR [rbp+0x8]
  410c56:	mov    rdi,QWORD PTR [rax]
  410c59:	call   424d40 <xmlStrEqual@plt+0x20e00>
  410c5e:	mov    r13,rax
  410c61:	mov    rax,QWORD PTR [rbp+0x10]
  410c65:	mov    rdi,QWORD PTR [rax]
  410c68:	call   424d40 <xmlStrEqual@plt+0x20e00>
  410c6d:	mov    rdi,QWORD PTR [rsp+0x8]
  410c72:	mov    r12,rax
  410c75:	call   434ad0 <xmlStrEqual@plt+0x30b90>
  410c7a:	mov    rdi,rax
  410c7d:	call   424d40 <xmlStrEqual@plt+0x20e00>
  410c82:	mov    rdx,rax
  410c85:	mov    r9d,ebx
  410c88:	xor    eax,eax
  410c8a:	mov    r8,r13
  410c8d:	mov    rcx,r12
  410c90:	lea    rsi,[rip+0x39c51]        # 44a8e8 <xmlStrEqual@plt+0x469a8>
  410c97:	mov    edi,0x5
  410c9c:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  410ca1:	cmp    BYTE PTR [rsp+0x47],0x0
  410ca6:	je     410c39 <xmlStrEqual@plt+0xccf9>
  410ca8:	mov    rax,QWORD PTR [rsp]
  410cac:	cmp    DWORD PTR [rax],0x0
  410caf:	jle    410c2c <xmlStrEqual@plt+0xccec>
  410cb5:	lea    rsi,[rip+0x39c74]        # 44a930 <xmlStrEqual@plt+0x469f0>
  410cbc:	mov    edi,0x5
  410cc1:	xor    eax,eax
  410cc3:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  410cc8:	jmp    410c2c <xmlStrEqual@plt+0xccec>
  410ccd:	mov    BYTE PTR [rsp+0x47],0x0
  410cd2:	jmp    4109e5 <xmlStrEqual@plt+0xcaa5>
  410cd7:	call   403c00 <__stack_chk_fail@plt>
  410cdc:	jmp    403fef <xmlStrEqual@plt+0xaf>
  410ce1:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  410cec:	nop    DWORD PTR [rax+0x0]
  410cf0:	endbr64 
  410cf4:	mov    rax,0x469600
  410cfb:	cmp    QWORD PTR [rdi+0x8],rax
  410cff:	jne    410d08 <xmlStrEqual@plt+0xcdc8>
  410d01:	mov    rax,rdi
  410d04:	ret    
  410d05:	nop    DWORD PTR [rax]
  410d08:	sub    rsp,0x8
  410d0c:	lea    rdx,[rip+0x39315]        # 44a028 <xmlStrEqual@plt+0x460e8>
  410d13:	lea    rsi,[rip+0x3a576]        # 44b290 <xmlStrEqual@plt+0x47350>
  410d1a:	lea    rdi,[rip+0x3a36f]        # 44b090 <xmlStrEqual@plt+0x47150>
  410d21:	call   4350f0 <xmlStrEqual@plt+0x311b0>
  410d26:	nop    WORD PTR cs:[rax+rax*1+0x0]
  410d30:	endbr64 
  410d34:	push   r15
  410d36:	push   r14
  410d38:	push   r13
  410d3a:	push   r12
  410d3c:	push   rbp
  410d3d:	push   rbx
  410d3e:	sub    rsp,0x868
  410d45:	mov    rax,QWORD PTR fs:0x28
  410d4e:	mov    QWORD PTR [rsp+0x858],rax
  410d56:	xor    eax,eax
  410d58:	mov    rax,QWORD PTR [rdi+0x78]
  410d5c:	mov    eax,DWORD PTR [rax+0x18]
  410d5f:	test   eax,eax
  410d61:	jne    410d8c <xmlStrEqual@plt+0xce4c>
  410d63:	mov    rsi,QWORD PTR [rsp+0x858]
  410d6b:	xor    rsi,QWORD PTR fs:0x28
  410d74:	jne    411115 <xmlStrEqual@plt+0xd1d5>
  410d7a:	add    rsp,0x868
  410d81:	pop    rbx
  410d82:	pop    rbp
  410d83:	pop    r12
  410d85:	pop    r13
  410d87:	pop    r14
  410d89:	pop    r15
  410d8b:	ret    
  410d8c:	mov    r13,rdi
  410d8f:	call   42dc90 <xmlStrEqual@plt+0x29d50>
  410d94:	mov    rbx,rax
  410d97:	mov    QWORD PTR [rsp+0x38],rax
  410d9c:	mov    rax,QWORD PTR [r13+0x70]
  410da0:	mov    rsi,rbx
  410da3:	mov    rax,QWORD PTR [rax]
  410da6:	mov    rdi,QWORD PTR [rax]
  410da9:	call   42dcf0 <xmlStrEqual@plt+0x29db0>
  410dae:	mov    rax,QWORD PTR [r13+0x70]
  410db2:	mov    rsi,rbx
  410db5:	mov    rax,QWORD PTR [rax]
  410db8:	mov    rdi,QWORD PTR [rax+0x8]
  410dbc:	call   42dcf0 <xmlStrEqual@plt+0x29db0>
  410dc1:	mov    rsi,QWORD PTR [r13+0x70]
  410dc5:	mov    rax,QWORD PTR [rsi]
  410dc8:	mov    rdx,QWORD PTR [rax+0x10]
  410dcc:	mov    rdi,QWORD PTR [rdx]
  410dcf:	mov    ecx,DWORD PTR [rdi]
  410dd1:	test   ecx,ecx
  410dd3:	je     410e2f <xmlStrEqual@plt+0xceef>
  410dd5:	xor    ebx,ebx
  410dd7:	jmp    410de9 <xmlStrEqual@plt+0xcea9>
  410dd9:	mov    rax,QWORD PTR [rsi]
  410ddc:	inc    ebx
  410dde:	mov    rdx,QWORD PTR [rax+0x10]
  410de2:	mov    rdi,QWORD PTR [rdx]
  410de5:	cmp    DWORD PTR [rdi],ebx
  410de7:	je     410e2f <xmlStrEqual@plt+0xceef>
  410de9:	mov    ecx,ebx
  410deb:	mov    r8,QWORD PTR [rdi+0x10]
  410def:	lea    eax,[rbx+rbx*1]
  410df2:	and    eax,0x1e
  410df5:	shr    ecx,0x4
  410df8:	mov    edx,eax
  410dfa:	mov    eax,DWORD PTR [r8+rcx*4]
  410dfe:	shrx   eax,eax,edx
  410e03:	test   al,0x3
  410e05:	jne    410dd9 <xmlStrEqual@plt+0xce99>
  410e07:	mov    rdx,QWORD PTR [rdi+0x20]
  410e0b:	mov    eax,ebx
  410e0d:	mov    rdi,QWORD PTR [rdx+rax*8]
  410e11:	mov    rsi,QWORD PTR [rsp+0x38]
  410e16:	inc    ebx
  410e18:	call   42dcf0 <xmlStrEqual@plt+0x29db0>
  410e1d:	mov    rsi,QWORD PTR [r13+0x70]
  410e21:	mov    rax,QWORD PTR [rsi]
  410e24:	mov    rdx,QWORD PTR [rax+0x10]
  410e28:	mov    rdi,QWORD PTR [rdx]
  410e2b:	cmp    DWORD PTR [rdi],ebx
  410e2d:	jne    410de9 <xmlStrEqual@plt+0xcea9>
  410e2f:	mov    rdx,QWORD PTR [rax+0x18]
  410e33:	mov    rdi,QWORD PTR [rdx]
  410e36:	mov    edx,DWORD PTR [rdi]
  410e38:	test   edx,edx
  410e3a:	je     410e96 <xmlStrEqual@plt+0xcf56>
  410e3c:	xor    ebx,ebx
  410e3e:	jmp    410e50 <xmlStrEqual@plt+0xcf10>
  410e40:	mov    rax,QWORD PTR [rsi]
  410e43:	inc    ebx
  410e45:	mov    rdx,QWORD PTR [rax+0x18]
  410e49:	mov    rdi,QWORD PTR [rdx]
  410e4c:	cmp    DWORD PTR [rdi],ebx
  410e4e:	je     410e96 <xmlStrEqual@plt+0xcf56>
  410e50:	mov    ecx,ebx
  410e52:	mov    r8,QWORD PTR [rdi+0x10]
  410e56:	lea    eax,[rbx+rbx*1]
  410e59:	and    eax,0x1e
  410e5c:	shr    ecx,0x4
  410e5f:	mov    edx,eax
  410e61:	mov    eax,DWORD PTR [r8+rcx*4]
  410e65:	shrx   eax,eax,edx
  410e6a:	test   al,0x3
  410e6c:	jne    410e40 <xmlStrEqual@plt+0xcf00>
  410e6e:	mov    rdx,QWORD PTR [rdi+0x20]
  410e72:	mov    eax,ebx
  410e74:	mov    rdi,QWORD PTR [rdx+rax*8]
  410e78:	mov    rsi,QWORD PTR [rsp+0x38]
  410e7d:	inc    ebx
  410e7f:	call   42dcf0 <xmlStrEqual@plt+0x29db0>
  410e84:	mov    rsi,QWORD PTR [r13+0x70]
  410e88:	mov    rax,QWORD PTR [rsi]
  410e8b:	mov    rdx,QWORD PTR [rax+0x18]
  410e8f:	mov    rdi,QWORD PTR [rdx]
  410e92:	cmp    DWORD PTR [rdi],ebx
  410e94:	jne    410e50 <xmlStrEqual@plt+0xcf10>
  410e96:	mov    rbx,QWORD PTR [rsp+0x38]
  410e9b:	mov    rdi,QWORD PTR [rax+0x20]
  410e9f:	mov    rsi,rbx
  410ea2:	call   42dcf0 <xmlStrEqual@plt+0x29db0>
  410ea7:	mov    rax,QWORD PTR [r13+0x70]
  410eab:	mov    rsi,rbx
  410eae:	mov    rax,QWORD PTR [rax]
  410eb1:	mov    rdi,QWORD PTR [rax+0x20]
  410eb5:	call   42dcf0 <xmlStrEqual@plt+0x29db0>
  410eba:	mov    rax,QWORD PTR [rbx+0x8]
  410ebe:	mov    QWORD PTR [rsp+0x28],rax
  410ec3:	cmp    rbx,rax
  410ec6:	je     4110e2 <xmlStrEqual@plt+0xd1a2>
  410ecc:	mov    rax,QWORD PTR [rsp+0x28]
  410ed1:	mov    rax,QWORD PTR [rax+0x10]
  410ed5:	mov    rax,QWORD PTR [rax]
  410ed8:	mov    QWORD PTR [rsp+0x10],rax
  410edd:	test   rax,rax
  410ee0:	je     4110c9 <xmlStrEqual@plt+0xd189>
  410ee6:	lea    rax,[rsp+0x40]
  410eeb:	mov    QWORD PTR [rsp+0x30],rax
  410ef0:	mov    QWORD PTR [rsp+0x18],rax
  410ef5:	lea    rax,[rsp+0x450]
  410efd:	mov    QWORD PTR [rsp+0x20],rax
  410f02:	nop    WORD PTR [rax+rax*1+0x0]
  410f08:	mov    rax,QWORD PTR [rsp+0x10]
  410f0d:	cmp    QWORD PTR [rax+0x8],0x0
  410f12:	jne    410f5a <xmlStrEqual@plt+0xd01a>
  410f14:	mov    rdx,QWORD PTR [rsp+0x10]
  410f19:	mov    rsi,QWORD PTR [rdx+0x18]
  410f1d:	mov    rax,QWORD PTR [rdx+0x10]
  410f21:	mov    QWORD PTR [rsp+0x10],rsi
  410f26:	test   rax,rax
  410f29:	je     4110a0 <xmlStrEqual@plt+0xd160>
  410f2f:	test   rsi,rsi
  410f32:	je     411100 <xmlStrEqual@plt+0xd1c0>
  410f38:	mov    rdx,QWORD PTR [rsp+0x18]
  410f3d:	mov    QWORD PTR [rsp+0x10],rax
  410f42:	lea    rax,[rdx+0x8]
  410f46:	mov    QWORD PTR [rsp+0x18],rax
  410f4b:	mov    rax,QWORD PTR [rsp+0x10]
  410f50:	mov    QWORD PTR [rdx],rsi
  410f53:	cmp    QWORD PTR [rax+0x8],0x0
  410f58:	je     410f14 <xmlStrEqual@plt+0xcfd4>
  410f5a:	mov    rax,QWORD PTR [rax+0x28]
  410f5e:	mov    r15,QWORD PTR [rax]
  410f61:	test   r15,r15
  410f64:	je     410f14 <xmlStrEqual@plt+0xcfd4>
  410f66:	mov    rax,QWORD PTR [rsp+0x20]
  410f6b:	mov    QWORD PTR [rsp+0x8],rax
  410f70:	cmp    QWORD PTR [r15+0x8],0x0
  410f75:	je     410f80 <xmlStrEqual@plt+0xd040>
  410f77:	mov    rbp,QWORD PTR [r15+0x28]
  410f7b:	test   rbp,rbp
  410f7e:	jne    410fbe <xmlStrEqual@plt+0xd07e>
  410f80:	mov    rax,QWORD PTR [r15+0x10]
  410f84:	mov    r15,QWORD PTR [r15+0x18]
  410f88:	test   rax,rax
  410f8b:	je     411060 <xmlStrEqual@plt+0xd120>
  410f91:	test   r15,r15
  410f94:	je     411098 <xmlStrEqual@plt+0xd158>
  410f9a:	mov    rcx,QWORD PTR [rsp+0x8]
  410f9f:	mov    QWORD PTR [rcx],r15
  410fa2:	mov    r15,rax
  410fa5:	cmp    QWORD PTR [r15+0x8],0x0
  410faa:	lea    rax,[rcx+0x8]
  410fae:	mov    QWORD PTR [rsp+0x8],rax
  410fb3:	je     410f80 <xmlStrEqual@plt+0xd040>
  410fb5:	mov    rbp,QWORD PTR [r15+0x28]
  410fb9:	test   rbp,rbp
  410fbc:	je     410f80 <xmlStrEqual@plt+0xd040>
  410fbe:	mov    r12,0x475858
  410fc5:	mov    rax,0x475860
  410fcc:	mov    rdx,QWORD PTR [r12]
  410fd0:	mov    rcx,QWORD PTR [rax]
  410fd3:	mov    esi,0x2
  410fd8:	mov    rdi,rbp
  410fdb:	call   43ba00 <xmlStrEqual@plt+0x37ac0>
  410fe0:	mov    rax,QWORD PTR [r13+0x78]
  410fe4:	mov    rbx,QWORD PTR [rax+0x8]
  410fe8:	cmp    rax,rbx
  410feb:	je     410f80 <xmlStrEqual@plt+0xd040>
  410fed:	nop    DWORD PTR [rax]
  410ff0:	mov    r14,QWORD PTR [rbx+0x10]
  410ff4:	mov    edi,0x10
  410ff9:	call   435000 <xmlStrEqual@plt+0x310c0>
  410ffe:	mov    QWORD PTR [rax+0x8],r14
  411002:	mov    QWORD PTR [rax],rbp
  411005:	lea    r8,[rip+0xffffffffffffc8b4]        # 40d8c0 <xmlStrEqual@plt+0x9980>
  41100c:	mov    rcx,rax
  41100f:	lea    rdx,[rip+0xffffffffffffe1aa]        # 40f1c0 <xmlStrEqual@plt+0xb280>
  411016:	mov    rsi,r13
  411019:	mov    edi,0x2
  41101e:	call   43b760 <xmlStrEqual@plt+0x37820>
  411023:	mov    rdi,QWORD PTR [r12]
  411027:	mov    r14,rax
  41102a:	mov    rdx,rax
  41102d:	mov    rsi,rbp
  411030:	call   43b7c0 <xmlStrEqual@plt+0x37880>
  411035:	mov    rdi,r14
  411038:	call   40f1c0 <xmlStrEqual@plt+0xb280>
  41103d:	mov    rbx,QWORD PTR [rbx+0x8]
  411041:	cmp    QWORD PTR [r13+0x78],rbx
  411045:	jne    410ff0 <xmlStrEqual@plt+0xd0b0>
  411047:	mov    rax,QWORD PTR [r15+0x10]
  41104b:	mov    r15,QWORD PTR [r15+0x18]
  41104f:	test   rax,rax
  411052:	jne    410f91 <xmlStrEqual@plt+0xd051>
  411058:	nop    DWORD PTR [rax+rax*1+0x0]
  411060:	test   r15,r15
  411063:	jne    410f70 <xmlStrEqual@plt+0xd030>
  411069:	mov    rax,QWORD PTR [rsp+0x8]
  41106e:	mov    rsi,QWORD PTR [rsp+0x20]
  411073:	cmp    rax,rsi
  411076:	je     410f14 <xmlStrEqual@plt+0xcfd4>
  41107c:	mov    r15,QWORD PTR [rax-0x8]
  411080:	test   r15,r15
  411083:	je     410f14 <xmlStrEqual@plt+0xcfd4>
  411089:	sub    QWORD PTR [rsp+0x8],0x8
  41108f:	jmp    410f70 <xmlStrEqual@plt+0xd030>
  411094:	nop    DWORD PTR [rax+0x0]
  411098:	mov    r15,rax
  41109b:	jmp    410f70 <xmlStrEqual@plt+0xd030>
  4110a0:	cmp    QWORD PTR [rsp+0x10],0x0
  4110a6:	jne    410f08 <xmlStrEqual@plt+0xcfc8>
  4110ac:	mov    rax,QWORD PTR [rsp+0x18]
  4110b1:	mov    rsi,QWORD PTR [rsp+0x30]
  4110b6:	cmp    rax,rsi
  4110b9:	je     4110c9 <xmlStrEqual@plt+0xd189>
  4110bb:	mov    rax,QWORD PTR [rax-0x8]
  4110bf:	mov    QWORD PTR [rsp+0x10],rax
  4110c4:	test   rax,rax
  4110c7:	jne    41110a <xmlStrEqual@plt+0xd1ca>
  4110c9:	mov    rax,QWORD PTR [rsp+0x28]
  4110ce:	mov    rax,QWORD PTR [rax+0x8]
  4110d2:	mov    QWORD PTR [rsp+0x28],rax
  4110d7:	cmp    QWORD PTR [rsp+0x38],rax
  4110dc:	jne    410ecc <xmlStrEqual@plt+0xcf8c>
  4110e2:	mov    rdi,QWORD PTR [rsp+0x38]
  4110e7:	call   42e2b0 <xmlStrEqual@plt+0x2a370>
  4110ec:	mov    eax,0x1
  4110f1:	jmp    410d63 <xmlStrEqual@plt+0xce23>
  4110f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  411100:	mov    QWORD PTR [rsp+0x10],rax
  411105:	jmp    410f08 <xmlStrEqual@plt+0xcfc8>
  41110a:	sub    QWORD PTR [rsp+0x18],0x8
  411110:	jmp    410f08 <xmlStrEqual@plt+0xcfc8>
  411115:	call   403c00 <__stack_chk_fail@plt>
  41111a:	nop    WORD PTR [rax+rax*1+0x0]
  411120:	endbr64 
  411124:	push   r15
  411126:	push   r14
  411128:	push   r13
  41112a:	push   r12
  41112c:	push   rbp
  41112d:	push   rbx
  41112e:	sub    rsp,0x438
  411135:	mov    rax,QWORD PTR fs:0x28
  41113e:	mov    QWORD PTR [rsp+0x428],rax
  411146:	xor    eax,eax
  411148:	test   rsi,rsi
  41114b:	je     41141c <xmlStrEqual@plt+0xd4dc>
  411151:	mov    r12,rdi
  411154:	mov    rdi,rsi
  411157:	mov    rbx,rsi
  41115a:	call   434a40 <xmlStrEqual@plt+0x30b00>
  41115f:	mov    r8d,DWORD PTR [r12+0x80]
  411167:	mov    r13,rax
  41116a:	test   r8d,r8d
  41116d:	je     411378 <xmlStrEqual@plt+0xd438>
  411173:	mov    rax,0x469e3c
  41117a:	mov    edi,DWORD PTR [rax]
  41117c:	test   edi,edi
  41117e:	jle    41119e <xmlStrEqual@plt+0xd25e>
  411180:	mov    rdi,r13
  411183:	call   424d40 <xmlStrEqual@plt+0x20e00>
  411188:	mov    rdx,rax
  41118b:	lea    rsi,[rip+0x39fba]        # 44b14c <xmlStrEqual@plt+0x4720c>
  411192:	mov    edi,0x5
  411197:	xor    eax,eax
  411199:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  41119e:	mov    rax,QWORD PTR [r12+0x30]
  4111a3:	mov    rsi,r13
  4111a6:	mov    rdi,QWORD PTR [rax]
  4111a9:	call   431950 <xmlStrEqual@plt+0x2da10>
  4111ae:	test   rax,rax
  4111b1:	je     411239 <xmlStrEqual@plt+0xd2f9>
  4111b7:	mov    rbx,QWORD PTR [rax]
  4111ba:	test   rbx,rbx
  4111bd:	je     411239 <xmlStrEqual@plt+0xd2f9>
  4111bf:	lea    r14,[rsp+0x20]
  4111c4:	mov    QWORD PTR [rsp+0x18],r14
  4111c9:	nop    DWORD PTR [rax+0x0]
  4111d0:	cmp    QWORD PTR [rbx+0x8],0x0
  4111d5:	je     4111ea <xmlStrEqual@plt+0xd2aa>
  4111d7:	mov    rax,QWORD PTR [rbx+0x28]
  4111db:	test   rax,rax
  4111de:	je     4111ea <xmlStrEqual@plt+0xd2aa>
  4111e0:	cmp    BYTE PTR [rax+0x10],0x0
  4111e4:	jne    4112d0 <xmlStrEqual@plt+0xd390>
  4111ea:	mov    rax,QWORD PTR [rbx+0x10]
  4111ee:	mov    rbx,QWORD PTR [rbx+0x18]
  4111f2:	test   rax,rax
  4111f5:	je     411220 <xmlStrEqual@plt+0xd2e0>
  4111f7:	test   rbx,rbx
  4111fa:	je     4112c0 <xmlStrEqual@plt+0xd380>
  411200:	mov    QWORD PTR [r14],rbx
  411203:	mov    rbx,rax
  411206:	add    r14,0x8
  41120a:	cmp    QWORD PTR [rbx+0x8],0x0
  41120f:	jne    4111d7 <xmlStrEqual@plt+0xd297>
  411211:	mov    rax,QWORD PTR [rbx+0x10]
  411215:	mov    rbx,QWORD PTR [rbx+0x18]
  411219:	test   rax,rax
  41121c:	jne    4111f7 <xmlStrEqual@plt+0xd2b7>
  41121e:	xchg   ax,ax
  411220:	test   rbx,rbx
  411223:	jne    4111d0 <xmlStrEqual@plt+0xd290>
  411225:	cmp    r14,QWORD PTR [rsp+0x18]
  41122a:	je     411239 <xmlStrEqual@plt+0xd2f9>
  41122c:	mov    rbx,QWORD PTR [r14-0x8]
  411230:	test   rbx,rbx
  411233:	jne    411368 <xmlStrEqual@plt+0xd428>
  411239:	mov    rax,0x469e3c
  411240:	mov    eax,DWORD PTR [rax]
  411242:	test   eax,eax
  411244:	jle    411259 <xmlStrEqual@plt+0xd319>
  411246:	lea    rsi,[rip+0x39f1a]        # 44b167 <xmlStrEqual@plt+0x47227>
  41124d:	mov    edi,0x5
  411252:	xor    eax,eax
  411254:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  411259:	mov    rax,QWORD PTR [r12+0x68]
  41125e:	mov    rbx,QWORD PTR [rax+0x8]
  411262:	cmp    rax,rbx
  411265:	je     41128d <xmlStrEqual@plt+0xd34d>
  411267:	nop    WORD PTR [rax+rax*1+0x0]
  411270:	mov    rcx,QWORD PTR [rbx+0x10]
  411274:	mov    rdx,r13
  411277:	mov    rsi,r13
  41127a:	mov    rdi,r12
  41127d:	call   40e0a0 <xmlStrEqual@plt+0xa160>
  411282:	mov    rbx,QWORD PTR [rbx+0x8]
  411286:	cmp    QWORD PTR [r12+0x68],rbx
  41128b:	jne    411270 <xmlStrEqual@plt+0xd330>
  41128d:	mov    rax,QWORD PTR [rsp+0x428]
  411295:	xor    rax,QWORD PTR fs:0x28
  41129e:	jne    41143b <xmlStrEqual@plt+0xd4fb>
  4112a4:	add    rsp,0x438
  4112ab:	pop    rbx
  4112ac:	pop    rbp
  4112ad:	pop    r12
  4112af:	pop    r13
  4112b1:	pop    r14
  4112b3:	pop    r15
  4112b5:	ret    
  4112b6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4112c0:	mov    rbx,rax
  4112c3:	jmp    4111d0 <xmlStrEqual@plt+0xd290>
  4112c8:	nop    DWORD PTR [rax+rax*1+0x0]
  4112d0:	mov    r10,QWORD PTR [rax+0x8]
  4112d4:	mov    rax,QWORD PTR [r10+0x28]
  4112d8:	mov    r15,QWORD PTR [rax+0x8]
  4112dc:	cmp    rax,r15
  4112df:	jne    4112fe <xmlStrEqual@plt+0xd3be>
  4112e1:	jmp    4111ea <xmlStrEqual@plt+0xd2aa>
  4112e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4112f0:	mov    r15,QWORD PTR [r15+0x8]
  4112f4:	cmp    r15,QWORD PTR [r10+0x28]
  4112f8:	je     4111ea <xmlStrEqual@plt+0xd2aa>
  4112fe:	mov    r9,QWORD PTR [r15+0x10]
  411302:	mov    ecx,DWORD PTR [r9+0x18]
  411306:	test   ecx,ecx
  411308:	je     4112f0 <xmlStrEqual@plt+0xd3b0>
  41130a:	mov    rbp,QWORD PTR [r9+0x8]
  41130e:	mov    rax,QWORD PTR [rbp+0x10]
  411312:	mov    rdx,QWORD PTR [rax]
  411315:	mov    edx,DWORD PTR [rdx+0x18]
  411318:	test   edx,edx
  41131a:	je     4112f0 <xmlStrEqual@plt+0xd3b0>
  41131c:	cmp    r9,rbp
  41131f:	jne    411335 <xmlStrEqual@plt+0xd3f5>
  411321:	jmp    4112f0 <xmlStrEqual@plt+0xd3b0>
  411323:	nop    DWORD PTR [rax+rax*1+0x0]
  411328:	mov    rbp,QWORD PTR [rbp+0x8]
  41132c:	cmp    r9,rbp
  41132f:	je     4112f0 <xmlStrEqual@plt+0xd3b0>
  411331:	mov    rax,QWORD PTR [rbp+0x10]
  411335:	cmp    BYTE PTR [rax+0x8],0x1
  411339:	jne    411328 <xmlStrEqual@plt+0xd3e8>
  41133b:	mov    rcx,QWORD PTR [rax]
  41133e:	mov    rdx,r10
  411341:	mov    rsi,r13
  411344:	mov    rdi,r12
  411347:	mov    QWORD PTR [rsp+0x10],r9
  41134c:	mov    QWORD PTR [rsp+0x8],r10
  411351:	call   40e0a0 <xmlStrEqual@plt+0xa160>
  411356:	mov    r9,QWORD PTR [rsp+0x10]
  41135b:	mov    r10,QWORD PTR [rsp+0x8]
  411360:	jmp    411328 <xmlStrEqual@plt+0xd3e8>
  411362:	nop    WORD PTR [rax+rax*1+0x0]
  411368:	sub    r14,0x8
  41136c:	jmp    4111d0 <xmlStrEqual@plt+0xd290>
  411371:	nop    DWORD PTR [rax+0x0]
  411378:	mov    rax,QWORD PTR [r12+0x78]
  41137d:	mov    esi,DWORD PTR [rax+0x18]
  411380:	test   esi,esi
  411382:	je     411173 <xmlStrEqual@plt+0xd233>
  411388:	mov    r14,0x475858
  41138f:	mov    rax,0x475860
  411396:	mov    rdx,QWORD PTR [r14]
  411399:	mov    rcx,QWORD PTR [rax]
  41139c:	mov    esi,0x2
  4113a1:	mov    rdi,rbx
  4113a4:	call   43ba00 <xmlStrEqual@plt+0x37ac0>
  4113a9:	mov    rax,QWORD PTR [r12+0x78]
  4113ae:	mov    rbp,QWORD PTR [rax+0x8]
  4113b2:	cmp    rax,rbp
  4113b5:	je     411173 <xmlStrEqual@plt+0xd233>
  4113bb:	nop    DWORD PTR [rax+rax*1+0x0]
  4113c0:	mov    r15,QWORD PTR [rbp+0x10]
  4113c4:	mov    edi,0x10
  4113c9:	call   435000 <xmlStrEqual@plt+0x310c0>
  4113ce:	mov    QWORD PTR [rax+0x8],r15
  4113d2:	mov    QWORD PTR [rax],rbx
  4113d5:	lea    r8,[rip+0xffffffffffffc4e4]        # 40d8c0 <xmlStrEqual@plt+0x9980>
  4113dc:	mov    rcx,rax
  4113df:	lea    rdx,[rip+0xffffffffffffddda]        # 40f1c0 <xmlStrEqual@plt+0xb280>
  4113e6:	mov    rsi,r12
  4113e9:	mov    edi,0x2
  4113ee:	call   43b760 <xmlStrEqual@plt+0x37820>
  4113f3:	mov    rdi,QWORD PTR [r14]
  4113f6:	mov    r15,rax
  4113f9:	mov    rdx,rax
  4113fc:	mov    rsi,rbx
  4113ff:	call   43b7c0 <xmlStrEqual@plt+0x37880>
  411404:	mov    rdi,r15
  411407:	call   40f1c0 <xmlStrEqual@plt+0xb280>
  41140c:	mov    rbp,QWORD PTR [rbp+0x8]
  411410:	cmp    rbp,QWORD PTR [r12+0x78]
  411415:	jne    4113c0 <xmlStrEqual@plt+0xd480>
  411417:	jmp    411173 <xmlStrEqual@plt+0xd233>
  41141c:	lea    rcx,[rip+0x39e4d]        # 44b270 <xmlStrEqual@plt+0x47330>
  411423:	mov    edx,0x5ab
  411428:	lea    rsi,[rip+0x39d00]        # 44b12f <xmlStrEqual@plt+0x471ef>
  41142f:	lea    rdi,[rip+0x39d0c]        # 44b142 <xmlStrEqual@plt+0x47202>
  411436:	call   403a60 <__assert_fail@plt>
  41143b:	call   403c00 <__stack_chk_fail@plt>
  411440:	endbr64 
  411444:	push   r15
  411446:	push   r14
  411448:	push   r13
  41144a:	push   r12
  41144c:	push   rbp
  41144d:	push   rbx
  41144e:	sub    rsp,0x48
  411452:	mov    rax,QWORD PTR fs:0x28
  41145b:	mov    QWORD PTR [rsp+0x38],rax
  411460:	xor    eax,eax
  411462:	call   43b440 <xmlStrEqual@plt+0x37500>
  411467:	mov    r14,rax
  41146a:	mov    rax,0x469e3c
  411471:	mov    eax,DWORD PTR [rax]
  411473:	test   eax,eax
  411475:	jle    41148a <xmlStrEqual@plt+0xd54a>
  411477:	lea    rsi,[rip+0x39582]        # 44aa00 <xmlStrEqual@plt+0x46ac0>
  41147e:	mov    edi,0x5
  411483:	xor    eax,eax
  411485:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  41148a:	call   42dc90 <xmlStrEqual@plt+0x29d50>
  41148f:	mov    rdi,QWORD PTR [r14+0x50]
  411493:	mov    rbx,rax
  411496:	mov    QWORD PTR [rsp+0x20],0x0
  41149f:	mov    QWORD PTR [rsp+0x28],0x0
  4114a8:	call   43af10 <xmlStrEqual@plt+0x36fd0>
  4114ad:	mov    r12,rax
  4114b0:	mov    rbp,QWORD PTR [rax+0x8]
  4114b4:	lea    rax,[rsp+0x20]
  4114b9:	mov    QWORD PTR [rsp+0x10],rax
  4114be:	lea    rax,[rsp+0x30]
  4114c3:	mov    QWORD PTR [rsp+0x8],rax
  4114c8:	cmp    r12,rbp
  4114cb:	je     4115dd <xmlStrEqual@plt+0xd69d>
  4114d1:	nop    DWORD PTR [rax+0x0]
  4114d8:	mov    r13,QWORD PTR [rbp+0x10]
  4114dc:	cmp    BYTE PTR [r13+0x20],0x1
  4114e1:	mov    rdi,QWORD PTR [r13+0x28]
  4114e5:	je     4115b8 <xmlStrEqual@plt+0xd678>
  4114eb:	mov    r15,QWORD PTR [rsp+0x20]
  4114f0:	test   rdi,rdi
  4114f3:	je     4114fe <xmlStrEqual@plt+0xd5be>
  4114f5:	mov    r15,QWORD PTR [r13+0x10]
  4114f9:	mov    QWORD PTR [rsp+0x20],r15
  4114fe:	cmp    QWORD PTR [r13+0x30],0x0
  411503:	je     41150e <xmlStrEqual@plt+0xd5ce>
  411505:	mov    rax,QWORD PTR [r13+0x18]
  411509:	mov    QWORD PTR [rsp+0x28],rax
  41150e:	mov    BYTE PTR [r13+0x20],0x0
  411513:	call   424bf0 <xmlStrEqual@plt+0x20cb0>
  411518:	mov    rdi,QWORD PTR [r13+0x30]
  41151c:	call   424bf0 <xmlStrEqual@plt+0x20cb0>
  411521:	mov    rax,QWORD PTR [rsp+0x10]
  411526:	mov    QWORD PTR [r13+0x28],0x0
  41152e:	mov    QWORD PTR [r13+0x30],0x0
  411536:	mov    QWORD PTR [rsp],rax
  41153a:	test   r15,r15
  41153d:	jne    41155f <xmlStrEqual@plt+0xd61f>
  41153f:	add    QWORD PTR [rsp],0x8
  411544:	mov    rax,QWORD PTR [rsp]
  411548:	cmp    QWORD PTR [rsp+0x8],rax
  41154d:	je     4115d0 <xmlStrEqual@plt+0xd690>
  411553:	mov    rax,QWORD PTR [rsp]
  411557:	mov    r15,QWORD PTR [rax]
  41155a:	test   r15,r15
  41155d:	je     41153f <xmlStrEqual@plt+0xd5ff>
  41155f:	mov    r13,QWORD PTR [r15+0x8]
  411563:	cmp    r13,r15
  411566:	jne    411579 <xmlStrEqual@plt+0xd639>
  411568:	jmp    41153f <xmlStrEqual@plt+0xd5ff>
  41156a:	nop    WORD PTR [rax+rax*1+0x0]
  411570:	mov    r13,QWORD PTR [r13+0x8]
  411574:	cmp    r13,r15
  411577:	je     41153f <xmlStrEqual@plt+0xd5ff>
  411579:	mov    rsi,QWORD PTR [r13+0x10]
  41157d:	mov    rdi,QWORD PTR [r14+0x70]
  411581:	call   40e540 <xmlStrEqual@plt+0xa600>
  411586:	test   rax,rax
  411589:	je     411570 <xmlStrEqual@plt+0xd630>
  41158b:	mov    rsi,rbx
  41158e:	mov    rdi,rax
  411591:	mov    QWORD PTR [rsp+0x18],rax
  411596:	call   42ded0 <xmlStrEqual@plt+0x29f90>
  41159b:	test   al,al
  41159d:	mov    r8,QWORD PTR [rsp+0x18]
  4115a2:	jne    411570 <xmlStrEqual@plt+0xd630>
  4115a4:	mov    rsi,rbx
  4115a7:	mov    rdi,r8
  4115aa:	call   42dcf0 <xmlStrEqual@plt+0x29db0>
  4115af:	jmp    411570 <xmlStrEqual@plt+0xd630>
  4115b1:	nop    DWORD PTR [rax+0x0]
  4115b8:	mov    r15,QWORD PTR [r13+0x10]
  4115bc:	mov    rax,QWORD PTR [r13+0x18]
  4115c0:	mov    QWORD PTR [rsp+0x20],r15
  4115c5:	mov    QWORD PTR [rsp+0x28],rax
  4115ca:	jmp    41150e <xmlStrEqual@plt+0xd5ce>
  4115cf:	nop
  4115d0:	mov    rbp,QWORD PTR [rbp+0x8]
  4115d4:	cmp    r12,rbp
  4115d7:	jne    4114d8 <xmlStrEqual@plt+0xd598>
  4115dd:	mov    rdi,r12
  4115e0:	call   42e2b0 <xmlStrEqual@plt+0x2a370>
  4115e5:	mov    rbp,QWORD PTR [rbx+0x8]
  4115e9:	cmp    rbp,rbx
  4115ec:	je     411605 <xmlStrEqual@plt+0xd6c5>
  4115ee:	xchg   ax,ax
  4115f0:	mov    rsi,QWORD PTR [rbp+0x10]
  4115f4:	mov    rdi,r14
  4115f7:	call   411120 <xmlStrEqual@plt+0xd1e0>
  4115fc:	mov    rbp,QWORD PTR [rbp+0x8]
  411600:	cmp    rbp,rbx
  411603:	jne    4115f0 <xmlStrEqual@plt+0xd6b0>
  411605:	mov    rdi,rbx
  411608:	call   42e2b0 <xmlStrEqual@plt+0x2a370>
  41160d:	mov    rax,0x469e3c
  411614:	cmp    DWORD PTR [rax],0x1
  411617:	jle    41162c <xmlStrEqual@plt+0xd6ec>
  411619:	lea    rsi,[rip+0x39428]        # 44aa48 <xmlStrEqual@plt+0x46b08>
  411620:	mov    edi,0x6
  411625:	xor    eax,eax
  411627:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  41162c:	mov    rcx,QWORD PTR [rsp+0x38]
  411631:	xor    rcx,QWORD PTR fs:0x28
  41163a:	mov    eax,0x1
  41163f:	jne    411650 <xmlStrEqual@plt+0xd710>
  411641:	add    rsp,0x48
  411645:	pop    rbx
  411646:	pop    rbp
  411647:	pop    r12
  411649:	pop    r13
  41164b:	pop    r14
  41164d:	pop    r15
  41164f:	ret    
  411650:	call   403c00 <__stack_chk_fail@plt>
  411655:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  411660:	endbr64 
  411664:	push   r15
  411666:	push   r14
  411668:	push   r13
  41166a:	push   r12
  41166c:	push   rbp
  41166d:	mov    rbp,rdi
  411670:	push   rbx
  411671:	mov    ebx,esi
  411673:	mov    esi,0x2
  411678:	sub    rsp,0x18
  41167c:	mov    rdi,QWORD PTR [rdi+0x30]
  411680:	call   409b20 <xmlStrEqual@plt+0x5be0>
  411685:	mov    rdi,QWORD PTR [rbp+0x30]
  411689:	mov    esi,0xa
  41168e:	mov    QWORD PTR [rsp+0x8],rax
  411693:	call   409b20 <xmlStrEqual@plt+0x5be0>
  411698:	mov    QWORD PTR [rsp],rax
  41169c:	cmp    ebx,0x4
  41169f:	jle    4118c0 <xmlStrEqual@plt+0xd980>
  4116a5:	mov    r12,0x469e3c
  4116ac:	mov    eax,DWORD PTR [r12]
  4116b0:	add    eax,0x4
  4116b3:	cmp    ebx,eax
  4116b5:	jle    411868 <xmlStrEqual@plt+0xd928>
  4116bb:	mov    rax,QWORD PTR [rsp+0x8]
  4116c0:	mov    rax,QWORD PTR [rax+0x8]
  4116c4:	mov    rdx,QWORD PTR [rax+0x28]
  4116c8:	mov    r15,QWORD PTR [rdx+0x8]
  4116cc:	cmp    r15,rdx
  4116cf:	je     411778 <xmlStrEqual@plt+0xd838>
  4116d5:	lea    r14,[rip+0x36f8e]        # 44866a <xmlStrEqual@plt+0x4472a>
  4116dc:	jmp    4116ea <xmlStrEqual@plt+0xd7aa>
  4116de:	xchg   ax,ax
  4116e0:	mov    r15,QWORD PTR [r15+0x8]
  4116e4:	cmp    QWORD PTR [rax+0x28],r15
  4116e8:	je     411768 <xmlStrEqual@plt+0xd828>
  4116ea:	mov    r13,QWORD PTR [r15+0x10]
  4116ee:	mov    edi,DWORD PTR [r13+0x18]
  4116f2:	test   edi,edi
  4116f4:	je     4116e0 <xmlStrEqual@plt+0xd7a0>
  4116f6:	mov    rbp,QWORD PTR [r13+0x8]
  4116fa:	mov    rdi,QWORD PTR [rbp+0x10]
  4116fe:	mov    rdx,QWORD PTR [rdi]
  411701:	mov    esi,DWORD PTR [rdx+0x18]
  411704:	test   esi,esi
  411706:	je     4116e0 <xmlStrEqual@plt+0xd7a0>
  411708:	cmp    rbp,r13
  41170b:	jne    41172f <xmlStrEqual@plt+0xd7ef>
  41170d:	jmp    4116e0 <xmlStrEqual@plt+0xd7a0>
  41170f:	nop
  411710:	mov    r12,0x469e3c
  411717:	mov    eax,DWORD PTR [r12]
  41171b:	add    eax,0x4
  41171e:	cmp    ebx,eax
  411720:	jle    411734 <xmlStrEqual@plt+0xd7f4>
  411722:	mov    rbp,QWORD PTR [rbp+0x8]
  411726:	cmp    rbp,r13
  411729:	je     411751 <xmlStrEqual@plt+0xd811>
  41172b:	mov    rdi,QWORD PTR [rbp+0x10]
  41172f:	cmp    ebx,0x4
  411732:	jg     411710 <xmlStrEqual@plt+0xd7d0>
  411734:	call   42a8c0 <xmlStrEqual@plt+0x26980>
  411739:	mov    rdx,rax
  41173c:	mov    rsi,r14
  41173f:	mov    edi,ebx
  411741:	xor    eax,eax
  411743:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  411748:	mov    rbp,QWORD PTR [rbp+0x8]
  41174c:	cmp    rbp,r13
  41174f:	jne    41172b <xmlStrEqual@plt+0xd7eb>
  411751:	mov    rax,QWORD PTR [rsp+0x8]
  411756:	mov    r15,QWORD PTR [r15+0x8]
  41175a:	mov    rax,QWORD PTR [rax+0x8]
  41175e:	cmp    QWORD PTR [rax+0x28],r15
  411762:	jne    4116ea <xmlStrEqual@plt+0xd7aa>
  411768:	cmp    ebx,0x4
  41176b:	jle    411900 <xmlStrEqual@plt+0xd9c0>
  411771:	mov    r12,0x469e3c
  411778:	mov    eax,DWORD PTR [r12]
  41177c:	add    eax,0x4
  41177f:	cmp    ebx,eax
  411781:	jle    411970 <xmlStrEqual@plt+0xda30>
  411787:	mov    rax,QWORD PTR [rsp]
  41178b:	mov    rax,QWORD PTR [rax+0x8]
  41178f:	mov    rdx,QWORD PTR [rax+0x28]
  411793:	mov    r13,QWORD PTR [rdx+0x8]
  411797:	cmp    rdx,r13
  41179a:	je     411847 <xmlStrEqual@plt+0xd907>
  4117a0:	lea    r14,[rip+0x36ec3]        # 44866a <xmlStrEqual@plt+0x4472a>
  4117a7:	jmp    4117ba <xmlStrEqual@plt+0xd87a>
  4117a9:	nop    DWORD PTR [rax+0x0]
  4117b0:	mov    r13,QWORD PTR [r13+0x8]
  4117b4:	cmp    QWORD PTR [rax+0x28],r13
  4117b8:	je     411837 <xmlStrEqual@plt+0xd8f7>
  4117ba:	mov    r15,QWORD PTR [r13+0x10]
  4117be:	mov    ecx,DWORD PTR [r15+0x18]
  4117c2:	test   ecx,ecx
  4117c4:	je     4117b0 <xmlStrEqual@plt+0xd870>
  4117c6:	mov    rbp,QWORD PTR [r15+0x8]
  4117ca:	mov    rdi,QWORD PTR [rbp+0x10]
  4117ce:	mov    rdx,QWORD PTR [rdi]
  4117d1:	mov    edx,DWORD PTR [rdx+0x18]
  4117d4:	test   edx,edx
  4117d6:	je     4117b0 <xmlStrEqual@plt+0xd870>
  4117d8:	cmp    r15,rbp
  4117db:	jne    4117ff <xmlStrEqual@plt+0xd8bf>
  4117dd:	jmp    4117b0 <xmlStrEqual@plt+0xd870>
  4117df:	nop
  4117e0:	mov    r12,0x469e3c
  4117e7:	mov    eax,DWORD PTR [r12]
  4117eb:	add    eax,0x4
  4117ee:	cmp    ebx,eax
  4117f0:	jle    411804 <xmlStrEqual@plt+0xd8c4>
  4117f2:	mov    rbp,QWORD PTR [rbp+0x8]
  4117f6:	cmp    rbp,r15
  4117f9:	je     411821 <xmlStrEqual@plt+0xd8e1>
  4117fb:	mov    rdi,QWORD PTR [rbp+0x10]
  4117ff:	cmp    ebx,0x4
  411802:	jg     4117e0 <xmlStrEqual@plt+0xd8a0>
  411804:	call   42a8c0 <xmlStrEqual@plt+0x26980>
  411809:	mov    rdx,rax
  41180c:	mov    rsi,r14
  41180f:	mov    edi,ebx
  411811:	xor    eax,eax
  411813:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  411818:	mov    rbp,QWORD PTR [rbp+0x8]
  41181c:	cmp    rbp,r15
  41181f:	jne    4117fb <xmlStrEqual@plt+0xd8bb>
  411821:	mov    rax,QWORD PTR [rsp]
  411825:	mov    r13,QWORD PTR [r13+0x8]
  411829:	mov    rax,QWORD PTR [rax+0x8]
  41182d:	cmp    QWORD PTR [rax+0x28],r13
  411831:	jne    4117ba <xmlStrEqual@plt+0xd87a>
  411837:	cmp    ebx,0x4
  41183a:	jle    411949 <xmlStrEqual@plt+0xda09>
  411840:	mov    r12,0x469e3c
  411847:	mov    eax,DWORD PTR [r12]
  41184b:	add    eax,0x4
  41184e:	cmp    ebx,eax
  411850:	jle    411949 <xmlStrEqual@plt+0xda09>
  411856:	add    rsp,0x18
  41185a:	pop    rbx
  41185b:	pop    rbp
  41185c:	pop    r12
  41185e:	pop    r13
  411860:	pop    r14
  411862:	pop    r15
  411864:	ret    
  411865:	nop    DWORD PTR [rax]
  411868:	xor    eax,eax
  41186a:	lea    rsi,[rip+0x392d7]        # 44ab48 <xmlStrEqual@plt+0x46c08>
  411871:	mov    edi,ebx
  411873:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  411878:	mov    eax,DWORD PTR [r12]
  41187c:	add    eax,0x4
  41187f:	cmp    ebx,eax
  411881:	jg     4116bb <xmlStrEqual@plt+0xd77b>
  411887:	xor    eax,eax
  411889:	lea    rsi,[rip+0x39228]        # 44aab8 <xmlStrEqual@plt+0x46b78>
  411890:	mov    edi,ebx
  411892:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  411897:	mov    rax,QWORD PTR [rsp+0x8]
  41189c:	mov    rax,QWORD PTR [rax+0x8]
  4118a0:	mov    rdx,QWORD PTR [rax+0x28]
  4118a4:	mov    r15,QWORD PTR [rdx+0x8]
  4118a8:	cmp    rdx,r15
  4118ab:	jne    4116d5 <xmlStrEqual@plt+0xd795>
  4118b1:	jmp    411778 <xmlStrEqual@plt+0xd838>
  4118b6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4118c0:	lea    rsi,[rip+0x39281]        # 44ab48 <xmlStrEqual@plt+0x46c08>
  4118c7:	mov    edi,ebx
  4118c9:	xor    eax,eax
  4118cb:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  4118d0:	xor    eax,eax
  4118d2:	lea    rsi,[rip+0x391df]        # 44aab8 <xmlStrEqual@plt+0x46b78>
  4118d9:	mov    edi,ebx
  4118db:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  4118e0:	mov    rax,QWORD PTR [rsp+0x8]
  4118e5:	mov    rax,QWORD PTR [rax+0x8]
  4118e9:	mov    rdx,QWORD PTR [rax+0x28]
  4118ed:	mov    r15,QWORD PTR [rdx+0x8]
  4118f1:	cmp    rdx,r15
  4118f4:	jne    4116d5 <xmlStrEqual@plt+0xd795>
  4118fa:	nop    WORD PTR [rax+rax*1+0x0]
  411900:	lea    rsi,[rip+0x391f9]        # 44ab00 <xmlStrEqual@plt+0x46bc0>
  411907:	mov    edi,ebx
  411909:	xor    eax,eax
  41190b:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  411910:	lea    rsi,[rip+0x39159]        # 44aa70 <xmlStrEqual@plt+0x46b30>
  411917:	mov    edi,ebx
  411919:	xor    eax,eax
  41191b:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  411920:	xor    eax,eax
  411922:	lea    rsi,[rip+0x3918f]        # 44aab8 <xmlStrEqual@plt+0x46b78>
  411929:	mov    edi,ebx
  41192b:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  411930:	mov    rax,QWORD PTR [rsp]
  411934:	mov    rax,QWORD PTR [rax+0x8]
  411938:	mov    rdx,QWORD PTR [rax+0x28]
  41193c:	mov    r13,QWORD PTR [rdx+0x8]
  411940:	cmp    rdx,r13
  411943:	jne    4117a0 <xmlStrEqual@plt+0xd860>
  411949:	add    rsp,0x18
  41194d:	mov    edi,ebx
  41194f:	pop    rbx
  411950:	pop    rbp
  411951:	pop    r12
  411953:	pop    r13
  411955:	pop    r14
  411957:	lea    rsi,[rip+0x391a2]        # 44ab00 <xmlStrEqual@plt+0x46bc0>
  41195e:	xor    eax,eax
  411960:	pop    r15
  411962:	jmp    430e20 <xmlStrEqual@plt+0x2cee0>
  411967:	nop    WORD PTR [rax+rax*1+0x0]
  411970:	xor    eax,eax
  411972:	lea    rsi,[rip+0x39187]        # 44ab00 <xmlStrEqual@plt+0x46bc0>
  411979:	mov    edi,ebx
  41197b:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  411980:	mov    eax,DWORD PTR [r12]
  411984:	add    eax,0x4
  411987:	cmp    ebx,eax
  411989:	jg     411787 <xmlStrEqual@plt+0xd847>
  41198f:	xor    eax,eax
  411991:	lea    rsi,[rip+0x390d8]        # 44aa70 <xmlStrEqual@plt+0x46b30>
  411998:	mov    edi,ebx
  41199a:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  41199f:	mov    eax,DWORD PTR [r12]
  4119a3:	add    eax,0x4
  4119a6:	cmp    ebx,eax
  4119a8:	jg     411787 <xmlStrEqual@plt+0xd847>
  4119ae:	xor    eax,eax
  4119b0:	lea    rsi,[rip+0x39101]        # 44aab8 <xmlStrEqual@plt+0x46b78>
  4119b7:	mov    edi,ebx
  4119b9:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  4119be:	mov    rax,QWORD PTR [rsp]
  4119c2:	mov    rax,QWORD PTR [rax+0x8]
  4119c6:	mov    rdx,QWORD PTR [rax+0x28]
  4119ca:	mov    r13,QWORD PTR [rdx+0x8]
  4119ce:	cmp    rdx,r13
  4119d1:	jne    4117a0 <xmlStrEqual@plt+0xd860>
  4119d7:	jmp    411837 <xmlStrEqual@plt+0xd8f7>
  4119dc:	nop    DWORD PTR [rax+0x0]
  4119e0:	endbr64 
  4119e4:	push   r15
  4119e6:	push   r14
  4119e8:	push   r13
  4119ea:	push   r12
  4119ec:	push   rbp
  4119ed:	push   rbx
  4119ee:	sub    rsp,0x68
  4119f2:	mov    rax,QWORD PTR fs:0x28
  4119fb:	mov    QWORD PTR [rsp+0x58],rax
  411a00:	xor    eax,eax
  411a02:	mov    rax,QWORD PTR [rdi+0x78]
  411a06:	mov    eax,DWORD PTR [rax+0x18]
  411a09:	test   eax,eax
  411a0b:	je     411a2d <xmlStrEqual@plt+0xdaed>
  411a0d:	mov    r13,rdi
  411a10:	mov    r12d,esi
  411a13:	cmp    esi,0x4
  411a16:	jle    411a50 <xmlStrEqual@plt+0xdb10>
  411a18:	mov    r15,0x469e3c
  411a1f:	mov    eax,DWORD PTR [r15]
  411a22:	add    eax,0x4
  411a25:	cmp    esi,eax
  411a27:	jle    411c20 <xmlStrEqual@plt+0xdce0>
  411a2d:	mov    rax,QWORD PTR [rsp+0x58]
  411a32:	xor    rax,QWORD PTR fs:0x28
  411a3b:	jne    411c63 <xmlStrEqual@plt+0xdd23>
  411a41:	add    rsp,0x68
  411a45:	pop    rbx
  411a46:	pop    rbp
  411a47:	pop    r12
  411a49:	pop    r13
  411a4b:	pop    r14
  411a4d:	pop    r15
  411a4f:	ret    
  411a50:	lea    rsi,[rip+0x39139]        # 44ab90 <xmlStrEqual@plt+0x46c50>
  411a57:	mov    edi,r12d
  411a5a:	xor    eax,eax
  411a5c:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  411a61:	xor    eax,eax
  411a63:	lea    rsi,[rip+0x391b6]        # 44ac20 <xmlStrEqual@plt+0x46ce0>
  411a6a:	mov    edi,r12d
  411a6d:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  411a72:	mov    rax,QWORD PTR [r13+0x78]
  411a76:	mov    rbp,QWORD PTR [rax+0x8]
  411a7a:	cmp    rax,rbp
  411a7d:	je     411bae <xmlStrEqual@plt+0xdc6e>
  411a83:	mov    rbx,rsp
  411a86:	lea    r14,[rip+0x396f0]        # 44b17d <xmlStrEqual@plt+0x4723d>
  411a8d:	jmp    411acc <xmlStrEqual@plt+0xdb8c>
  411a8f:	nop
  411a90:	lea    rdx,[rip+0x39725]        # 44b1bc <xmlStrEqual@plt+0x4727c>
  411a97:	xor    eax,eax
  411a99:	call   403de0 <snprintf@plt>
  411a9e:	cmp    r12d,0x4
  411aa2:	jle    411b70 <xmlStrEqual@plt+0xdc30>
  411aa8:	mov    r15,0x469e3c
  411aaf:	mov    eax,DWORD PTR [r15]
  411ab2:	add    eax,0x4
  411ab5:	cmp    r12d,eax
  411ab8:	jle    411b70 <xmlStrEqual@plt+0xdc30>
  411abe:	mov    rbp,QWORD PTR [rbp+0x8]
  411ac2:	cmp    rbp,QWORD PTR [r13+0x78]
  411ac6:	je     411b92 <xmlStrEqual@plt+0xdc52>
  411acc:	mov    r15,QWORD PTR [rbp+0x10]
  411ad0:	mov    rdi,QWORD PTR [r15]
  411ad3:	call   424d40 <xmlStrEqual@plt+0x20e00>
  411ad8:	mov    r9,rax
  411adb:	mov    ecx,0x50
  411ae0:	mov    rdi,rbx
  411ae3:	mov    r8,r14
  411ae6:	mov    edx,0x1
  411aeb:	mov    esi,0x50
  411af0:	xor    eax,eax
  411af2:	call   403a40 <__snprintf_chk@plt>
  411af7:	movzx  ecx,BYTE PTR [r15+0x8]
  411afc:	mov    rdi,rbx
  411aff:	test   cl,cl
  411b01:	je     411bc8 <xmlStrEqual@plt+0xdc88>
  411b07:	mov    edx,DWORD PTR [rdi]
  411b09:	add    rdi,0x4
  411b0d:	lea    eax,[rdx-0x1010101]
  411b13:	andn   eax,edx,eax
  411b18:	and    eax,0x80808080
  411b1d:	je     411b07 <xmlStrEqual@plt+0xdbc7>
  411b1f:	mov    edx,eax
  411b21:	shr    edx,0x10
  411b24:	test   eax,0x8080
  411b29:	cmove  eax,edx
  411b2c:	lea    rdx,[rdi+0x2]
  411b30:	cmove  rdi,rdx
  411b34:	mov    esi,eax
  411b36:	add    sil,al
  411b39:	sbb    rdi,0x3
  411b3d:	sub    rdi,rbx
  411b40:	mov    esi,0x50
  411b45:	sub    rsi,rdi
  411b48:	add    rdi,rbx
  411b4b:	cmp    cl,0x1
  411b4e:	jne    411a90 <xmlStrEqual@plt+0xdb50>
  411b54:	xor    eax,eax
  411b56:	lea    rdx,[rip+0x39644]        # 44b1a1 <xmlStrEqual@plt+0x47261>
  411b5d:	call   403de0 <snprintf@plt>
  411b62:	cmp    r12d,0x4
  411b66:	jg     411aa8 <xmlStrEqual@plt+0xdb68>
  411b6c:	nop    DWORD PTR [rax+0x0]
  411b70:	mov    rdx,rbx
  411b73:	lea    rsi,[rip+0x36af0]        # 44866a <xmlStrEqual@plt+0x4472a>
  411b7a:	mov    edi,r12d
  411b7d:	xor    eax,eax
  411b7f:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  411b84:	mov    rbp,QWORD PTR [rbp+0x8]
  411b88:	cmp    rbp,QWORD PTR [r13+0x78]
  411b8c:	jne    411acc <xmlStrEqual@plt+0xdb8c>
  411b92:	cmp    r12d,0x4
  411b96:	jle    411bae <xmlStrEqual@plt+0xdc6e>
  411b98:	mov    r15,0x469e3c
  411b9f:	mov    eax,DWORD PTR [r15]
  411ba2:	add    eax,0x4
  411ba5:	cmp    r12d,eax
  411ba8:	jg     411a2d <xmlStrEqual@plt+0xdaed>
  411bae:	lea    rsi,[rip+0x39023]        # 44abd8 <xmlStrEqual@plt+0x46c98>
  411bb5:	mov    edi,r12d
  411bb8:	xor    eax,eax
  411bba:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  411bbf:	jmp    411a2d <xmlStrEqual@plt+0xdaed>
  411bc4:	nop    DWORD PTR [rax+0x0]
  411bc8:	mov    edx,DWORD PTR [rdi]
  411bca:	add    rdi,0x4
  411bce:	lea    eax,[rdx-0x1010101]
  411bd4:	andn   eax,edx,eax
  411bd9:	and    eax,0x80808080
  411bde:	je     411bc8 <xmlStrEqual@plt+0xdc88>
  411be0:	mov    edx,eax
  411be2:	shr    edx,0x10
  411be5:	test   eax,0x8080
  411bea:	cmove  eax,edx
  411bed:	lea    rdx,[rdi+0x2]
  411bf1:	cmove  rdi,rdx
  411bf5:	mov    ecx,eax
  411bf7:	add    cl,al
  411bf9:	sbb    rdi,0x3
  411bfd:	sub    rdi,rbx
  411c00:	mov    esi,0x50
  411c05:	sub    rsi,rdi
  411c08:	lea    rdx,[rip+0x39577]        # 44b186 <xmlStrEqual@plt+0x47246>
  411c0f:	add    rdi,rbx
  411c12:	xor    eax,eax
  411c14:	call   403de0 <snprintf@plt>
  411c19:	jmp    411a9e <xmlStrEqual@plt+0xdb5e>
  411c1e:	xchg   ax,ax
  411c20:	xor    eax,eax
  411c22:	lea    rsi,[rip+0x38f67]        # 44ab90 <xmlStrEqual@plt+0x46c50>
  411c29:	mov    edi,r12d
  411c2c:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  411c31:	mov    eax,DWORD PTR [r15]
  411c34:	add    eax,0x4
  411c37:	cmp    r12d,eax
  411c3a:	jg     411c4d <xmlStrEqual@plt+0xdd0d>
  411c3c:	lea    rsi,[rip+0x38fdd]        # 44ac20 <xmlStrEqual@plt+0x46ce0>
  411c43:	mov    edi,r12d
  411c46:	xor    eax,eax
  411c48:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  411c4d:	mov    rax,QWORD PTR [r13+0x78]
  411c51:	mov    rbp,QWORD PTR [rax+0x8]
  411c55:	cmp    rbp,rax
  411c58:	jne    411a83 <xmlStrEqual@plt+0xdb43>
  411c5e:	jmp    411b9f <xmlStrEqual@plt+0xdc5f>
  411c63:	call   403c00 <__stack_chk_fail@plt>
  411c68:	nop    DWORD PTR [rax+rax*1+0x0]
  411c70:	endbr64 
  411c74:	push   r15
  411c76:	push   r14
  411c78:	push   r13
  411c7a:	push   r12
  411c7c:	push   rbp
  411c7d:	push   rbx
  411c7e:	sub    rsp,0x8a8
  411c85:	mov    rax,QWORD PTR fs:0x28
  411c8e:	mov    QWORD PTR [rsp+0x898],rax
  411c96:	xor    eax,eax
  411c98:	mov    rax,0x469600
  411c9f:	cmp    QWORD PTR [rdi+0x8],rax
  411ca3:	jne    412c26 <xmlStrEqual@plt+0xece6>
  411ca9:	mov    eax,DWORD PTR [rdi]
  411cab:	mov    r15,rdi
  411cae:	cmp    eax,0x3
  411cb1:	je     412a91 <xmlStrEqual@plt+0xeb51>
  411cb7:	mov    rsi,0x469e3c
  411cbe:	mov    QWORD PTR [rsp+0x28],rsi
  411cc3:	test   eax,eax
  411cc5:	jne    411cd6 <xmlStrEqual@plt+0xdd96>
  411cc7:	mov    rax,QWORD PTR [rsp+0x28]
  411ccc:	mov    ebx,DWORD PTR [rax]
  411cce:	test   ebx,ebx
  411cd0:	jg     412b9d <xmlStrEqual@plt+0xec5d>
  411cd6:	mov    rax,QWORD PTR [r15+0x78]
  411cda:	mov    r11d,DWORD PTR [rax+0x18]
  411cde:	test   r11d,r11d
  411ce1:	je     412ac2 <xmlStrEqual@plt+0xeb82>
  411ce7:	mov    rax,QWORD PTR [r15+0x48]
  411ceb:	mov    r10d,DWORD PTR [rax+0x18]
  411cef:	test   r10d,r10d
  411cf2:	je     412a6f <xmlStrEqual@plt+0xeb2f>
  411cf8:	lea    rax,[r15+0x18]
  411cfc:	mov    esi,0x2
  411d01:	mov    rdi,rax
  411d04:	mov    rbx,rax
  411d07:	mov    QWORD PTR [rsp+0x70],rax
  411d0c:	call   40cdb0 <xmlStrEqual@plt+0x8e70>
  411d11:	mov    r14,rax
  411d14:	mov    rdi,rbx
  411d17:	mov    esi,0xa
  411d1c:	mov    QWORD PTR [rsp+0x58],rax
  411d21:	call   40cdb0 <xmlStrEqual@plt+0x8e70>
  411d26:	mov    rdi,r14
  411d29:	mov    QWORD PTR [rsp+0x50],rax
  411d2e:	call   4337a0 <xmlStrEqual@plt+0x2f860>
  411d33:	test   al,al
  411d35:	je     412a3d <xmlStrEqual@plt+0xeafd>
  411d3b:	mov    rbx,QWORD PTR [rsp+0x58]
  411d40:	mov    rdi,QWORD PTR [r15+0x40]
  411d44:	mov    rax,QWORD PTR [r15+0x38]
  411d48:	mov    rsi,rbx
  411d4b:	call   QWORD PTR [rax+0x38]
  411d4e:	mov    rdi,rbx
  411d51:	call   433790 <xmlStrEqual@plt+0x2f850>
  411d56:	mov    rsi,rax
  411d59:	xor    edx,edx
  411d5b:	mov    rdi,r15
  411d5e:	call   4089c0 <xmlStrEqual@plt+0x4a80>
  411d63:	mov    rbx,QWORD PTR [rsp+0x50]
  411d68:	mov    rdi,QWORD PTR [r15+0x40]
  411d6c:	mov    rax,QWORD PTR [r15+0x38]
  411d70:	mov    rsi,rbx
  411d73:	call   QWORD PTR [rax+0x38]
  411d76:	mov    rdi,rbx
  411d79:	call   433790 <xmlStrEqual@plt+0x2f850>
  411d7e:	mov    rsi,rax
  411d81:	xor    edx,edx
  411d83:	mov    rdi,r15
  411d86:	call   4089c0 <xmlStrEqual@plt+0x4a80>
  411d8b:	cmp    DWORD PTR [r15+0x80],0x1
  411d93:	je     412618 <xmlStrEqual@plt+0xe6d8>
  411d99:	cmp    DWORD PTR [r15],0x3
  411d9d:	je     4129da <xmlStrEqual@plt+0xea9a>
  411da3:	mov    rax,QWORD PTR [rsp+0x28]
  411da8:	mov    eax,DWORD PTR [rax]
  411daa:	test   eax,eax
  411dac:	jg     4125de <xmlStrEqual@plt+0xe69e>
  411db2:	mov    rdi,QWORD PTR [r15+0x70]
  411db6:	mov    esi,0x5
  411dbb:	call   4096e0 <xmlStrEqual@plt+0x57a0>
  411dc0:	mov    rdi,QWORD PTR [r15+0x30]
  411dc4:	mov    esi,0x5
  411dc9:	call   409bb0 <xmlStrEqual@plt+0x5c70>
  411dce:	mov    esi,0x5
  411dd3:	mov    rdi,r15
  411dd6:	call   4119e0 <xmlStrEqual@plt+0xdaa0>
  411ddb:	mov    rax,QWORD PTR [rsp+0x28]
  411de0:	mov    eax,DWORD PTR [rax]
  411de2:	test   eax,eax
  411de4:	jle    411e00 <xmlStrEqual@plt+0xdec0>
  411de6:	lea    rdx,[rip+0x39413]        # 44b200 <xmlStrEqual@plt+0x472c0>
  411ded:	lea    rsi,[rip+0x391d4]        # 44afc8 <xmlStrEqual@plt+0x47088>
  411df4:	mov    edi,0x5
  411df9:	xor    eax,eax
  411dfb:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  411e00:	mov    rbx,0x424d40
  411e07:	mov    rdi,QWORD PTR [r15+0x48]
  411e0b:	mov    edx,0x5
  411e10:	mov    rsi,rbx
  411e13:	call   42dfc0 <xmlStrEqual@plt+0x2a080>
  411e18:	mov    rax,QWORD PTR [rsp+0x28]
  411e1d:	mov    eax,DWORD PTR [rax]
  411e1f:	test   eax,eax
  411e21:	jle    411e36 <xmlStrEqual@plt+0xdef6>
  411e23:	lea    rsi,[rip+0x391c6]        # 44aff0 <xmlStrEqual@plt+0x470b0>
  411e2a:	mov    edi,0x5
  411e2f:	xor    eax,eax
  411e31:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  411e36:	mov    esi,0x5
  411e3b:	mov    rdi,r15
  411e3e:	call   411660 <xmlStrEqual@plt+0xd720>
  411e43:	mov    rax,QWORD PTR [rsp+0x28]
  411e48:	mov    eax,DWORD PTR [rax]
  411e4a:	test   eax,eax
  411e4c:	jle    411e68 <xmlStrEqual@plt+0xdf28>
  411e4e:	lea    rdx,[rip+0x393b9]        # 44b20e <xmlStrEqual@plt+0x472ce>
  411e55:	lea    rsi,[rip+0x3916c]        # 44afc8 <xmlStrEqual@plt+0x47088>
  411e5c:	mov    edi,0x5
  411e61:	xor    eax,eax
  411e63:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  411e68:	mov    rdi,QWORD PTR [r15+0x68]
  411e6c:	mov    edx,0x5
  411e71:	mov    rsi,rbx
  411e74:	call   42dfc0 <xmlStrEqual@plt+0x2a080>
  411e79:	mov    rax,QWORD PTR [rsp+0x28]
  411e7e:	mov    r14d,DWORD PTR [rax]
  411e81:	test   r14d,r14d
  411e84:	jg     41255b <xmlStrEqual@plt+0xe61b>
  411e8a:	mov    rdi,QWORD PTR [r15+0x60]
  411e8e:	mov    eax,DWORD PTR [rdi+0x18]
  411e91:	test   eax,eax
  411e93:	jne    4125aa <xmlStrEqual@plt+0xe66a>
  411e99:	call   42dc90 <xmlStrEqual@plt+0x29d50>
  411e9e:	mov    rbx,rax
  411ea1:	mov    QWORD PTR [rsp+0x20],rax
  411ea6:	mov    rax,QWORD PTR [r15+0x70]
  411eaa:	mov    rsi,rbx
  411ead:	mov    rax,QWORD PTR [rax]
  411eb0:	mov    rdi,QWORD PTR [rax]
  411eb3:	call   42dcf0 <xmlStrEqual@plt+0x29db0>
  411eb8:	mov    rax,QWORD PTR [r15+0x70]
  411ebc:	mov    rsi,rbx
  411ebf:	mov    rax,QWORD PTR [rax]
  411ec2:	mov    rdi,QWORD PTR [rax+0x8]
  411ec6:	call   42dcf0 <xmlStrEqual@plt+0x29db0>
  411ecb:	mov    rax,QWORD PTR [r15+0x70]
  411ecf:	mov    rdx,QWORD PTR [rax]
  411ed2:	mov    rcx,QWORD PTR [rdx+0x10]
  411ed6:	mov    rdi,QWORD PTR [rcx]
  411ed9:	mov    ebx,DWORD PTR [rdi]
  411edb:	test   ebx,ebx
  411edd:	je     411f3a <xmlStrEqual@plt+0xdffa>
  411edf:	xor    ebx,ebx
  411ee1:	jmp    411ef3 <xmlStrEqual@plt+0xdfb3>
  411ee3:	mov    rdx,QWORD PTR [rax]
  411ee6:	inc    ebx
  411ee8:	mov    rcx,QWORD PTR [rdx+0x10]
  411eec:	mov    rdi,QWORD PTR [rcx]
  411eef:	cmp    DWORD PTR [rdi],ebx
  411ef1:	je     411f3a <xmlStrEqual@plt+0xdffa>
  411ef3:	mov    esi,ebx
  411ef5:	mov    r8,QWORD PTR [rdi+0x10]
  411ef9:	lea    edx,[rbx+rbx*1]
  411efc:	and    edx,0x1e
  411eff:	shr    esi,0x4
  411f02:	mov    ecx,edx
  411f04:	mov    edx,DWORD PTR [r8+rsi*4]
  411f08:	shrx   edx,edx,ecx
  411f0d:	and    edx,0x3
  411f10:	jne    411ee3 <xmlStrEqual@plt+0xdfa3>
  411f12:	mov    rdx,QWORD PTR [rdi+0x20]
  411f16:	mov    eax,ebx
  411f18:	mov    rdi,QWORD PTR [rdx+rax*8]
  411f1c:	mov    rsi,QWORD PTR [rsp+0x20]
  411f21:	inc    ebx
  411f23:	call   42dcf0 <xmlStrEqual@plt+0x29db0>
  411f28:	mov    rax,QWORD PTR [r15+0x70]
  411f2c:	mov    rdx,QWORD PTR [rax]
  411f2f:	mov    rcx,QWORD PTR [rdx+0x10]
  411f33:	mov    rdi,QWORD PTR [rcx]
  411f36:	cmp    DWORD PTR [rdi],ebx
  411f38:	jne    411ef3 <xmlStrEqual@plt+0xdfb3>
  411f3a:	mov    rcx,QWORD PTR [rdx+0x18]
  411f3e:	mov    rdi,QWORD PTR [rcx]
  411f41:	mov    r11d,DWORD PTR [rdi]
  411f44:	test   r11d,r11d
  411f47:	je     411fa4 <xmlStrEqual@plt+0xe064>
  411f49:	xor    ebx,ebx
  411f4b:	jmp    411f5d <xmlStrEqual@plt+0xe01d>
  411f4d:	mov    rdx,QWORD PTR [rax]
  411f50:	inc    ebx
  411f52:	mov    rcx,QWORD PTR [rdx+0x18]
  411f56:	mov    rdi,QWORD PTR [rcx]
  411f59:	cmp    DWORD PTR [rdi],ebx
  411f5b:	je     411fa4 <xmlStrEqual@plt+0xe064>
  411f5d:	mov    esi,ebx
  411f5f:	mov    r8,QWORD PTR [rdi+0x10]
  411f63:	lea    edx,[rbx+rbx*1]
  411f66:	and    edx,0x1e
  411f69:	shr    esi,0x4
  411f6c:	mov    ecx,edx
  411f6e:	mov    edx,DWORD PTR [r8+rsi*4]
  411f72:	shrx   edx,edx,ecx
  411f77:	and    edx,0x3
  411f7a:	jne    411f4d <xmlStrEqual@plt+0xe00d>
  411f7c:	mov    rdx,QWORD PTR [rdi+0x20]
  411f80:	mov    eax,ebx
  411f82:	mov    rdi,QWORD PTR [rdx+rax*8]
  411f86:	mov    rsi,QWORD PTR [rsp+0x20]
  411f8b:	inc    ebx
  411f8d:	call   42dcf0 <xmlStrEqual@plt+0x29db0>
  411f92:	mov    rax,QWORD PTR [r15+0x70]
  411f96:	mov    rdx,QWORD PTR [rax]
  411f99:	mov    rcx,QWORD PTR [rdx+0x18]
  411f9d:	mov    rdi,QWORD PTR [rcx]
  411fa0:	cmp    DWORD PTR [rdi],ebx
  411fa2:	jne    411f5d <xmlStrEqual@plt+0xe01d>
  411fa4:	mov    rbx,QWORD PTR [rsp+0x20]
  411fa9:	mov    rdi,QWORD PTR [rdx+0x20]
  411fad:	mov    rsi,rbx
  411fb0:	call   42dcf0 <xmlStrEqual@plt+0x29db0>
  411fb5:	mov    rax,QWORD PTR [r15+0x70]
  411fb9:	mov    rsi,rbx
  411fbc:	mov    rax,QWORD PTR [rax]
  411fbf:	mov    rdi,QWORD PTR [rax+0x20]
  411fc3:	call   42dcf0 <xmlStrEqual@plt+0x29db0>
  411fc8:	mov    rax,QWORD PTR [rbx+0x8]
  411fcc:	mov    QWORD PTR [rsp+0x10],rax
  411fd1:	cmp    rbx,rax
  411fd4:	je     41213a <xmlStrEqual@plt+0xe1fa>
  411fda:	lea    rax,[rsp+0x80]
  411fe2:	mov    QWORD PTR [rsp+0x18],rax
  411fe7:	lea    rax,[rsp+0x490]
  411fef:	mov    QWORD PTR [rsp+0x8],rax
  411ff4:	mov    rax,QWORD PTR [rsp+0x10]
  411ff9:	mov    rax,QWORD PTR [rax+0x10]
  411ffd:	mov    rbp,QWORD PTR [rax]
  412000:	test   rbp,rbp
  412003:	je     412121 <xmlStrEqual@plt+0xe1e1>
  412009:	mov    r12,QWORD PTR [rsp+0x18]
  41200e:	jmp    412031 <xmlStrEqual@plt+0xe0f1>
  412010:	mov    rax,QWORD PTR [rbp+0x10]
  412014:	mov    rdx,QWORD PTR [rbp+0x18]
  412018:	test   rax,rax
  41201b:	je     412100 <xmlStrEqual@plt+0xe1c0>
  412021:	test   rdx,rdx
  412024:	je     41202e <xmlStrEqual@plt+0xe0ee>
  412026:	mov    QWORD PTR [r12],rdx
  41202a:	add    r12,0x8
  41202e:	mov    rbp,rax
  412031:	cmp    QWORD PTR [rbp+0x8],0x0
  412036:	je     412010 <xmlStrEqual@plt+0xe0d0>
  412038:	mov    rax,QWORD PTR [rbp+0x28]
  41203c:	mov    rbx,QWORD PTR [rax]
  41203f:	test   rbx,rbx
  412042:	je     412010 <xmlStrEqual@plt+0xe0d0>
  412044:	mov    r13,QWORD PTR [rsp+0x8]
  412049:	jmp    412060 <xmlStrEqual@plt+0xe120>
  41204b:	nop    DWORD PTR [rax+rax*1+0x0]
  412050:	test   rdx,rdx
  412053:	je     41205d <xmlStrEqual@plt+0xe11d>
  412055:	mov    QWORD PTR [r13+0x0],rdx
  412059:	add    r13,0x8
  41205d:	mov    rbx,rax
  412060:	cmp    QWORD PTR [rbx+0x8],0x0
  412065:	je     4120c3 <xmlStrEqual@plt+0xe183>
  412067:	mov    r14,QWORD PTR [rbx+0x28]
  41206b:	test   r14,r14
  41206e:	je     4120c3 <xmlStrEqual@plt+0xe183>
  412070:	mov    rdi,r14
  412073:	call   434a40 <xmlStrEqual@plt+0x30b00>
  412078:	mov    rsi,rax
  41207b:	mov    rdi,r15
  41207e:	call   408800 <xmlStrEqual@plt+0x48c0>
  412083:	cmp    eax,0x1
  412086:	je     4120b5 <xmlStrEqual@plt+0xe175>
  412088:	mov    rdi,r14
  41208b:	call   434ad0 <xmlStrEqual@plt+0x30b90>
  412090:	mov    rdi,rax
  412093:	call   424d40 <xmlStrEqual@plt+0x20e00>
  412098:	mov    rdx,rax
  41209b:	lea    rsi,[rip+0x38f7e]        # 44b020 <xmlStrEqual@plt+0x470e0>
  4120a2:	xor    eax,eax
  4120a4:	mov    edi,0x2
  4120a9:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  4120ae:	xor    eax,eax
  4120b0:	call   43f9f0 <xmlStrEqual@plt+0x3bab0>
  4120b5:	mov    rdi,QWORD PTR [r15+0x40]
  4120b9:	mov    rax,QWORD PTR [r15+0x38]
  4120bd:	mov    rsi,r14
  4120c0:	call   QWORD PTR [rax+0x30]
  4120c3:	mov    rax,QWORD PTR [rbx+0x10]
  4120c7:	mov    rdx,QWORD PTR [rbx+0x18]
  4120cb:	test   rax,rax
  4120ce:	jne    412050 <xmlStrEqual@plt+0xe110>
  4120d0:	mov    rax,rdx
  4120d3:	test   rdx,rdx
  4120d6:	jne    41205d <xmlStrEqual@plt+0xe11d>
  4120d8:	cmp    r13,QWORD PTR [rsp+0x8]
  4120dd:	je     412010 <xmlStrEqual@plt+0xe0d0>
  4120e3:	mov    rbx,QWORD PTR [r13-0x8]
  4120e7:	test   rbx,rbx
  4120ea:	je     412010 <xmlStrEqual@plt+0xe0d0>
  4120f0:	sub    r13,0x8
  4120f4:	jmp    412060 <xmlStrEqual@plt+0xe120>
  4120f9:	nop    DWORD PTR [rax+0x0]
  412100:	mov    rax,rdx
  412103:	test   rdx,rdx
  412106:	jne    41202e <xmlStrEqual@plt+0xe0ee>
  41210c:	cmp    r12,QWORD PTR [rsp+0x18]
  412111:	je     412121 <xmlStrEqual@plt+0xe1e1>
  412113:	mov    rbp,QWORD PTR [r12-0x8]
  412118:	test   rbp,rbp
  41211b:	jne    4121a3 <xmlStrEqual@plt+0xe263>
  412121:	mov    rax,QWORD PTR [rsp+0x10]
  412126:	mov    rax,QWORD PTR [rax+0x8]
  41212a:	mov    QWORD PTR [rsp+0x10],rax
  41212f:	cmp    QWORD PTR [rsp+0x20],rax
  412134:	jne    411ff4 <xmlStrEqual@plt+0xe0b4>
  41213a:	mov    rdi,QWORD PTR [rsp+0x20]
  41213f:	call   42e2b0 <xmlStrEqual@plt+0x2a370>
  412144:	mov    r10d,DWORD PTR [r15+0x80]
  41214b:	test   r10d,r10d
  41214e:	jne    4121ac <xmlStrEqual@plt+0xe26c>
  412150:	mov    esi,0x1
  412155:	mov    rdi,r15
  412158:	call   40dcf0 <xmlStrEqual@plt+0x9db0>
  41215d:	mov    rsi,QWORD PTR [rsp+0x58]
  412162:	mov    rdi,QWORD PTR [rsp+0x70]
  412167:	call   40c4c0 <xmlStrEqual@plt+0x8580>
  41216c:	mov    rax,QWORD PTR [rsp+0x898]
  412174:	xor    rax,QWORD PTR fs:0x28
  41217d:	jne    412c79 <xmlStrEqual@plt+0xed39>
  412183:	mov    rsi,QWORD PTR [rsp+0x50]
  412188:	mov    rdi,QWORD PTR [rsp+0x70]
  41218d:	add    rsp,0x8a8
  412194:	pop    rbx
  412195:	pop    rbp
  412196:	pop    r12
  412198:	pop    r13
  41219a:	pop    r14
  41219c:	pop    r15
  41219e:	jmp    40c4c0 <xmlStrEqual@plt+0x8580>
  4121a3:	sub    r12,0x8
  4121a7:	jmp    412031 <xmlStrEqual@plt+0xe0f1>
  4121ac:	mov    rax,QWORD PTR [r15+0x78]
  4121b0:	mov    r9d,DWORD PTR [rax+0x18]
  4121b4:	test   r9d,r9d
  4121b7:	je     41215d <xmlStrEqual@plt+0xe21d>
  4121b9:	call   42dc90 <xmlStrEqual@plt+0x29d50>
  4121be:	mov    rbx,rax
  4121c1:	mov    QWORD PTR [rsp+0x60],rax
  4121c6:	mov    rax,QWORD PTR [r15+0x70]
  4121ca:	mov    rsi,rbx
  4121cd:	mov    rax,QWORD PTR [rax]
  4121d0:	mov    rdi,QWORD PTR [rax]
  4121d3:	call   42dcf0 <xmlStrEqual@plt+0x29db0>
  4121d8:	mov    rax,QWORD PTR [r15+0x70]
  4121dc:	mov    rsi,rbx
  4121df:	mov    rax,QWORD PTR [rax]
  4121e2:	mov    rdi,QWORD PTR [rax+0x8]
  4121e6:	call   42dcf0 <xmlStrEqual@plt+0x29db0>
  4121eb:	mov    rax,QWORD PTR [r15+0x70]
  4121ef:	mov    rdx,QWORD PTR [rax]
  4121f2:	mov    rcx,QWORD PTR [rdx+0x10]
  4121f6:	mov    rcx,QWORD PTR [rcx]
  4121f9:	mov    r8d,DWORD PTR [rcx]
  4121fc:	test   r8d,r8d
  4121ff:	je     41225c <xmlStrEqual@plt+0xe31c>
  412201:	xor    ebx,ebx
  412203:	jmp    412215 <xmlStrEqual@plt+0xe2d5>
  412205:	mov    rdx,QWORD PTR [rax]
  412208:	inc    ebx
  41220a:	mov    rcx,QWORD PTR [rdx+0x10]
  41220e:	mov    rcx,QWORD PTR [rcx]
  412211:	cmp    ebx,DWORD PTR [rcx]
  412213:	je     41225c <xmlStrEqual@plt+0xe31c>
  412215:	mov    edi,ebx
  412217:	mov    r8,QWORD PTR [rcx+0x10]
  41221b:	lea    edx,[rbx+rbx*1]
  41221e:	and    edx,0x1e
  412221:	shr    edi,0x4
  412224:	mov    esi,edx
  412226:	mov    edx,DWORD PTR [r8+rdi*4]
  41222a:	shrx   edx,edx,esi
  41222f:	and    edx,0x3
  412232:	jne    412205 <xmlStrEqual@plt+0xe2c5>
  412234:	mov    rdx,QWORD PTR [rcx+0x20]
  412238:	mov    eax,ebx
  41223a:	mov    rdi,QWORD PTR [rdx+rax*8]
  41223e:	mov    rsi,QWORD PTR [rsp+0x60]
  412243:	inc    ebx
  412245:	call   42dcf0 <xmlStrEqual@plt+0x29db0>
  41224a:	mov    rax,QWORD PTR [r15+0x70]
  41224e:	mov    rdx,QWORD PTR [rax]
  412251:	mov    rcx,QWORD PTR [rdx+0x10]
  412255:	mov    rcx,QWORD PTR [rcx]
  412258:	cmp    ebx,DWORD PTR [rcx]
  41225a:	jne    412215 <xmlStrEqual@plt+0xe2d5>
  41225c:	mov    rcx,QWORD PTR [rdx+0x18]
  412260:	mov    rcx,QWORD PTR [rcx]
  412263:	mov    edi,DWORD PTR [rcx]
  412265:	test   edi,edi
  412267:	je     4122c4 <xmlStrEqual@plt+0xe384>
  412269:	xor    ebx,ebx
  41226b:	jmp    41227d <xmlStrEqual@plt+0xe33d>
  41226d:	mov    rdx,QWORD PTR [rax]
  412270:	inc    ebx
  412272:	mov    rcx,QWORD PTR [rdx+0x18]
  412276:	mov    rcx,QWORD PTR [rcx]
  412279:	cmp    ebx,DWORD PTR [rcx]
  41227b:	je     4122c4 <xmlStrEqual@plt+0xe384>
  41227d:	mov    edi,ebx
  41227f:	mov    r8,QWORD PTR [rcx+0x10]
  412283:	shr    edi,0x4
  412286:	lea    edx,[rbx+rbx*1]
  412289:	mov    esi,edx
  41228b:	mov    edx,DWORD PTR [r8+rdi*4]
  41228f:	and    esi,0x1e
  412292:	shrx   edx,edx,esi
  412297:	and    edx,0x3
  41229a:	jne    41226d <xmlStrEqual@plt+0xe32d>
  41229c:	mov    rdx,QWORD PTR [rcx+0x20]
  4122a0:	mov    eax,ebx
  4122a2:	mov    rdi,QWORD PTR [rdx+rax*8]
  4122a6:	mov    rsi,QWORD PTR [rsp+0x60]
  4122ab:	inc    ebx
  4122ad:	call   42dcf0 <xmlStrEqual@plt+0x29db0>
  4122b2:	mov    rax,QWORD PTR [r15+0x70]
  4122b6:	mov    rdx,QWORD PTR [rax]
  4122b9:	mov    rcx,QWORD PTR [rdx+0x18]
  4122bd:	mov    rcx,QWORD PTR [rcx]
  4122c0:	cmp    ebx,DWORD PTR [rcx]
  4122c2:	jne    41227d <xmlStrEqual@plt+0xe33d>
  4122c4:	mov    rbx,QWORD PTR [rsp+0x60]
  4122c9:	mov    rdi,QWORD PTR [rdx+0x20]
  4122cd:	mov    rsi,rbx
  4122d0:	call   42dcf0 <xmlStrEqual@plt+0x29db0>
  4122d5:	mov    rax,QWORD PTR [r15+0x70]
  4122d9:	mov    rsi,rbx
  4122dc:	mov    rax,QWORD PTR [rax]
  4122df:	mov    rdi,QWORD PTR [rax+0x20]
  4122e3:	call   42dcf0 <xmlStrEqual@plt+0x29db0>
  4122e8:	mov    rax,QWORD PTR [rbx+0x8]
  4122ec:	mov    QWORD PTR [rsp+0x68],rax
  4122f1:	cmp    rbx,rax
  4122f4:	je     412b74 <xmlStrEqual@plt+0xec34>
  4122fa:	mov    rax,QWORD PTR [rsp+0x68]
  4122ff:	mov    rax,QWORD PTR [rax+0x10]
  412303:	mov    rax,QWORD PTR [rax]
  412306:	mov    QWORD PTR [rsp+0x38],rax
  41230b:	test   rax,rax
  41230e:	je     412b5b <xmlStrEqual@plt+0xec1b>
  412314:	lea    rax,[rsp+0x80]
  41231c:	mov    QWORD PTR [rsp+0x78],rax
  412321:	mov    QWORD PTR [rsp+0x40],rax
  412326:	lea    rax,[rsp+0x490]
  41232e:	mov    QWORD PTR [rsp+0x48],rax
  412333:	nop    DWORD PTR [rax+rax*1+0x0]
  412338:	mov    rax,QWORD PTR [rsp+0x38]
  41233d:	cmp    QWORD PTR [rax+0x8],0x0
  412342:	jne    41238a <xmlStrEqual@plt+0xe44a>
  412344:	mov    rsi,QWORD PTR [rsp+0x38]
  412349:	mov    rdx,QWORD PTR [rsi+0x18]
  41234d:	mov    rax,QWORD PTR [rsi+0x10]
  412351:	mov    QWORD PTR [rsp+0x38],rdx
  412356:	test   rax,rax
  412359:	je     412b32 <xmlStrEqual@plt+0xebf2>
  41235f:	test   rdx,rdx
  412362:	je     412b88 <xmlStrEqual@plt+0xec48>
  412368:	mov    rcx,QWORD PTR [rsp+0x40]
  41236d:	mov    QWORD PTR [rsp+0x38],rax
  412372:	lea    rax,[rcx+0x8]
  412376:	mov    QWORD PTR [rsp+0x40],rax
  41237b:	mov    rax,QWORD PTR [rsp+0x38]
  412380:	mov    QWORD PTR [rcx],rdx
  412383:	cmp    QWORD PTR [rax+0x8],0x0
  412388:	je     412344 <xmlStrEqual@plt+0xe404>
  41238a:	mov    rax,QWORD PTR [rax+0x28]
  41238e:	mov    rax,QWORD PTR [rax]
  412391:	mov    QWORD PTR [rsp+0x10],rax
  412396:	test   rax,rax
  412399:	je     412344 <xmlStrEqual@plt+0xe404>
  41239b:	mov    rax,QWORD PTR [rsp+0x48]
  4123a0:	mov    QWORD PTR [rsp+0x30],rax
  4123a5:	nop    DWORD PTR [rax]
  4123a8:	mov    rax,QWORD PTR [rsp+0x10]
  4123ad:	cmp    QWORD PTR [rax+0x8],0x0
  4123b2:	je     4123c2 <xmlStrEqual@plt+0xe482>
  4123b4:	mov    rax,QWORD PTR [rsp+0x10]
  4123b9:	mov    rbx,QWORD PTR [rax+0x28]
  4123bd:	test   rbx,rbx
  4123c0:	jne    41241b <xmlStrEqual@plt+0xe4db>
  4123c2:	mov    rsi,QWORD PTR [rsp+0x10]
  4123c7:	mov    rdx,QWORD PTR [rsi+0x18]
  4123cb:	mov    rax,QWORD PTR [rsi+0x10]
  4123cf:	mov    QWORD PTR [rsp+0x10],rdx
  4123d4:	test   rax,rax
  4123d7:	je     412ae8 <xmlStrEqual@plt+0xeba8>
  4123dd:	mov    rdx,QWORD PTR [rsp+0x10]
  4123e2:	test   rdx,rdx
  4123e5:	je     412b28 <xmlStrEqual@plt+0xebe8>
  4123eb:	mov    rcx,QWORD PTR [rsp+0x30]
  4123f0:	mov    QWORD PTR [rsp+0x10],rax
  4123f5:	lea    rax,[rcx+0x8]
  4123f9:	mov    QWORD PTR [rsp+0x30],rax
  4123fe:	mov    rax,QWORD PTR [rsp+0x10]
  412403:	mov    QWORD PTR [rcx],rdx
  412406:	cmp    QWORD PTR [rax+0x8],0x0
  41240b:	je     4123c2 <xmlStrEqual@plt+0xe482>
  41240d:	mov    rax,QWORD PTR [rsp+0x10]
  412412:	mov    rbx,QWORD PTR [rax+0x28]
  412416:	test   rbx,rbx
  412419:	je     4123c2 <xmlStrEqual@plt+0xe482>
  41241b:	mov    rdi,rbx
  41241e:	call   434a40 <xmlStrEqual@plt+0x30b00>
  412423:	mov    r14,rax
  412426:	mov    QWORD PTR [rsp+0x28],rax
  41242b:	mov    rax,0x475860
  412432:	mov    esi,0x8
  412437:	mov    rcx,QWORD PTR [rax]
  41243a:	mov    rax,0x475858
  412441:	mov    rdi,rbx
  412444:	mov    rdx,QWORD PTR [rax]
  412447:	call   43ba00 <xmlStrEqual@plt+0x37ac0>
  41244c:	mov    rax,QWORD PTR [r14+0x28]
  412450:	mov    rsi,QWORD PTR [rax+0x8]
  412454:	mov    QWORD PTR [rsp+0x18],rsi
  412459:	cmp    rax,rsi
  41245c:	jne    412485 <xmlStrEqual@plt+0xe545>
  41245e:	jmp    4123c2 <xmlStrEqual@plt+0xe482>
  412463:	nop    DWORD PTR [rax+rax*1+0x0]
  412468:	mov    rax,QWORD PTR [rsp+0x18]
  41246d:	mov    rsi,QWORD PTR [rsp+0x28]
  412472:	mov    rax,QWORD PTR [rax+0x8]
  412476:	mov    QWORD PTR [rsp+0x18],rax
  41247b:	cmp    rax,QWORD PTR [rsi+0x28]
  41247f:	je     4123c2 <xmlStrEqual@plt+0xe482>
  412485:	mov    rax,QWORD PTR [rsp+0x18]
  41248a:	mov    rcx,QWORD PTR [rax+0x10]
  41248e:	mov    esi,DWORD PTR [rcx+0x18]
  412491:	mov    QWORD PTR [rsp+0x8],rcx
  412496:	test   esi,esi
  412498:	je     412468 <xmlStrEqual@plt+0xe528>
  41249a:	mov    r14,QWORD PTR [rcx+0x8]
  41249e:	mov    rbp,QWORD PTR [r14+0x10]
  4124a2:	mov    rax,QWORD PTR [rbp+0x0]
  4124a6:	mov    edx,DWORD PTR [rax+0x18]
  4124a9:	test   edx,edx
  4124ab:	je     412468 <xmlStrEqual@plt+0xe528>
  4124ad:	cmp    rcx,r14
  4124b0:	jne    4124c7 <xmlStrEqual@plt+0xe587>
  4124b2:	jmp    412468 <xmlStrEqual@plt+0xe528>
  4124b4:	nop    DWORD PTR [rax+0x0]
  4124b8:	mov    r14,QWORD PTR [r14+0x8]
  4124bc:	cmp    QWORD PTR [rsp+0x8],r14
  4124c1:	je     412468 <xmlStrEqual@plt+0xe528>
  4124c3:	mov    rbp,QWORD PTR [r14+0x10]
  4124c7:	cmp    BYTE PTR [rbp+0x9],0x0
  4124cb:	je     4124b8 <xmlStrEqual@plt+0xe578>
  4124cd:	mov    rax,QWORD PTR [r15+0x78]
  4124d1:	mov    r13,QWORD PTR [rax+0x8]
  4124d5:	cmp    rax,r13
  4124d8:	je     4124b8 <xmlStrEqual@plt+0xe578>
  4124da:	mov    QWORD PTR [rsp+0x20],r14
  4124df:	nop
  4124e0:	mov    r14,QWORD PTR [r13+0x10]
  4124e4:	mov    edi,0x18
  4124e9:	call   435000 <xmlStrEqual@plt+0x310c0>
  4124ee:	mov    QWORD PTR [rax],rbx
  4124f1:	mov    QWORD PTR [rax+0x8],rbp
  4124f5:	mov    QWORD PTR [rax+0x10],r14
  4124f9:	mov    r12,rax
  4124fc:	mov    esi,0x4
  412501:	mov    rdi,rbx
  412504:	call   434c90 <xmlStrEqual@plt+0x30d50>
  412509:	mov    rcx,r12
  41250c:	lea    r8,[rip+0xffffffffffffb37d]        # 40d890 <xmlStrEqual@plt+0x9950>
  412513:	lea    rdx,[rip+0xffffffffffffc336]        # 40e850 <xmlStrEqual@plt+0xa910>
  41251a:	mov    rsi,r15
  41251d:	mov    edi,0x8
  412522:	call   43b760 <xmlStrEqual@plt+0x37820>
  412527:	mov    rdx,rax
  41252a:	mov    r12,rax
  41252d:	mov    rax,0x475858
  412534:	mov    rsi,rbx
  412537:	mov    rdi,QWORD PTR [rax]
  41253a:	call   43b7c0 <xmlStrEqual@plt+0x37880>
  41253f:	mov    rdi,r12
  412542:	call   40e850 <xmlStrEqual@plt+0xa910>
  412547:	mov    r13,QWORD PTR [r13+0x8]
  41254b:	cmp    r13,QWORD PTR [r15+0x78]
  41254f:	jne    4124e0 <xmlStrEqual@plt+0xe5a0>
  412551:	mov    r14,QWORD PTR [rsp+0x20]
  412556:	jmp    4124b8 <xmlStrEqual@plt+0xe578>
  41255b:	mov    edi,0x5
  412560:	lea    rsi,[rip+0x38a89]        # 44aff0 <xmlStrEqual@plt+0x470b0>
  412567:	xor    eax,eax
  412569:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  41256e:	mov    rdi,QWORD PTR [r15+0x60]
  412572:	mov    r13d,DWORD PTR [rdi+0x18]
  412576:	test   r13d,r13d
  412579:	je     411e99 <xmlStrEqual@plt+0xdf59>
  41257f:	mov    rax,QWORD PTR [rsp+0x28]
  412584:	mov    r12d,DWORD PTR [rax]
  412587:	test   r12d,r12d
  41258a:	jle    4125aa <xmlStrEqual@plt+0xe66a>
  41258c:	mov    edi,0x5
  412591:	lea    rdx,[rip+0x38c81]        # 44b219 <xmlStrEqual@plt+0x472d9>
  412598:	lea    rsi,[rip+0x38a29]        # 44afc8 <xmlStrEqual@plt+0x47088>
  41259f:	xor    eax,eax
  4125a1:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  4125a6:	mov    rdi,QWORD PTR [r15+0x60]
  4125aa:	mov    edx,0x5
  4125af:	mov    rsi,rbx
  4125b2:	call   42dfc0 <xmlStrEqual@plt+0x2a080>
  4125b7:	mov    rax,QWORD PTR [rsp+0x28]
  4125bc:	mov    ebp,DWORD PTR [rax]
  4125be:	test   ebp,ebp
  4125c0:	jle    411e99 <xmlStrEqual@plt+0xdf59>
  4125c6:	lea    rsi,[rip+0x38a23]        # 44aff0 <xmlStrEqual@plt+0x470b0>
  4125cd:	mov    edi,0x5
  4125d2:	xor    eax,eax
  4125d4:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  4125d9:	jmp    411e99 <xmlStrEqual@plt+0xdf59>
  4125de:	xor    eax,eax
  4125e0:	lea    rsi,[rip+0x34a4c]        # 447033 <xmlStrEqual@plt+0x430f3>
  4125e7:	mov    edi,0x5
  4125ec:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  4125f1:	mov    rax,QWORD PTR [rsp+0x28]
  4125f6:	mov    eax,DWORD PTR [rax]
  4125f8:	test   eax,eax
  4125fa:	jle    411db2 <xmlStrEqual@plt+0xde72>
  412600:	lea    rsi,[rip+0x38989]        # 44af90 <xmlStrEqual@plt+0x47050>
  412607:	mov    edi,0x5
  41260c:	xor    eax,eax
  41260e:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  412613:	jmp    411db2 <xmlStrEqual@plt+0xde72>
  412618:	mov    rax,QWORD PTR [r15+0x78]
  41261c:	mov    edx,DWORD PTR [rax+0x18]
  41261f:	cmp    edx,0x1
  412622:	jg     412c00 <xmlStrEqual@plt+0xecc0>
  412628:	cmp    edx,0x1
  41262b:	je     412c40 <xmlStrEqual@plt+0xed00>
  412631:	mov    rax,QWORD PTR [r15+0x48]
  412635:	mov    r9d,DWORD PTR [rax+0x18]
  412639:	test   r9d,r9d
  41263c:	jg     412bd5 <xmlStrEqual@plt+0xec95>
  412642:	mov    r8d,DWORD PTR [r15+0x24]
  412646:	test   r8d,r8d
  412649:	jg     412bb5 <xmlStrEqual@plt+0xec75>
  41264f:	call   42dc90 <xmlStrEqual@plt+0x29d50>
  412654:	mov    rbx,rax
  412657:	mov    QWORD PTR [rsp+0x30],rax
  41265c:	mov    rax,QWORD PTR [r15+0x70]
  412660:	mov    rsi,rbx
  412663:	mov    rax,QWORD PTR [rax]
  412666:	mov    rdi,QWORD PTR [rax]
  412669:	call   42dcf0 <xmlStrEqual@plt+0x29db0>
  41266e:	mov    rax,QWORD PTR [r15+0x70]
  412672:	mov    rsi,rbx
  412675:	mov    rax,QWORD PTR [rax]
  412678:	mov    rdi,QWORD PTR [rax+0x8]
  41267c:	call   42dcf0 <xmlStrEqual@plt+0x29db0>
  412681:	mov    rax,QWORD PTR [r15+0x70]
  412685:	mov    rdx,QWORD PTR [rax]
  412688:	mov    rcx,QWORD PTR [rdx+0x10]
  41268c:	mov    rcx,QWORD PTR [rcx]
  41268f:	mov    edi,DWORD PTR [rcx]
  412691:	test   edi,edi
  412693:	je     4126f0 <xmlStrEqual@plt+0xe7b0>
  412695:	xor    ebx,ebx
  412697:	jmp    4126a9 <xmlStrEqual@plt+0xe769>
  412699:	mov    rdx,QWORD PTR [rax]
  41269c:	inc    ebx
  41269e:	mov    rcx,QWORD PTR [rdx+0x10]
  4126a2:	mov    rcx,QWORD PTR [rcx]
  4126a5:	cmp    DWORD PTR [rcx],ebx
  4126a7:	je     4126f0 <xmlStrEqual@plt+0xe7b0>
  4126a9:	mov    edi,ebx
  4126ab:	mov    r8,QWORD PTR [rcx+0x10]
  4126af:	shr    edi,0x4
  4126b2:	lea    edx,[rbx+rbx*1]
  4126b5:	mov    esi,edx
  4126b7:	mov    edx,DWORD PTR [r8+rdi*4]
  4126bb:	and    esi,0x1e
  4126be:	shrx   edx,edx,esi
  4126c3:	and    edx,0x3
  4126c6:	jne    412699 <xmlStrEqual@plt+0xe759>
  4126c8:	mov    rdx,QWORD PTR [rcx+0x20]
  4126cc:	mov    eax,ebx
  4126ce:	mov    rdi,QWORD PTR [rdx+rax*8]
  4126d2:	mov    rsi,QWORD PTR [rsp+0x30]
  4126d7:	inc    ebx
  4126d9:	call   42dcf0 <xmlStrEqual@plt+0x29db0>
  4126de:	mov    rax,QWORD PTR [r15+0x70]
  4126e2:	mov    rdx,QWORD PTR [rax]
  4126e5:	mov    rcx,QWORD PTR [rdx+0x10]
  4126e9:	mov    rcx,QWORD PTR [rcx]
  4126ec:	cmp    DWORD PTR [rcx],ebx
  4126ee:	jne    4126a9 <xmlStrEqual@plt+0xe769>
  4126f0:	mov    rcx,QWORD PTR [rdx+0x18]
  4126f4:	mov    rcx,QWORD PTR [rcx]
  4126f7:	mov    esi,DWORD PTR [rcx]
  4126f9:	test   esi,esi
  4126fb:	je     412758 <xmlStrEqual@plt+0xe818>
  4126fd:	xor    ebx,ebx
  4126ff:	jmp    412711 <xmlStrEqual@plt+0xe7d1>
  412701:	mov    rdx,QWORD PTR [rax]
  412704:	inc    ebx
  412706:	mov    rcx,QWORD PTR [rdx+0x18]
  41270a:	mov    rcx,QWORD PTR [rcx]
  41270d:	cmp    DWORD PTR [rcx],ebx
  41270f:	je     412758 <xmlStrEqual@plt+0xe818>
  412711:	mov    edi,ebx
  412713:	mov    r8,QWORD PTR [rcx+0x10]
  412717:	shr    edi,0x4
  41271a:	lea    edx,[rbx+rbx*1]
  41271d:	mov    esi,edx
  41271f:	mov    edx,DWORD PTR [r8+rdi*4]
  412723:	and    esi,0x1e
  412726:	shrx   edx,edx,esi
  41272b:	and    edx,0x3
  41272e:	jne    412701 <xmlStrEqual@plt+0xe7c1>
  412730:	mov    rdx,QWORD PTR [rcx+0x20]
  412734:	mov    eax,ebx
  412736:	mov    rdi,QWORD PTR [rdx+rax*8]
  41273a:	mov    rsi,QWORD PTR [rsp+0x30]
  41273f:	inc    ebx
  412741:	call   42dcf0 <xmlStrEqual@plt+0x29db0>
  412746:	mov    rax,QWORD PTR [r15+0x70]
  41274a:	mov    rdx,QWORD PTR [rax]
  41274d:	mov    rcx,QWORD PTR [rdx+0x18]
  412751:	mov    rcx,QWORD PTR [rcx]
  412754:	cmp    DWORD PTR [rcx],ebx
  412756:	jne    412711 <xmlStrEqual@plt+0xe7d1>
  412758:	mov    rbx,QWORD PTR [rsp+0x30]
  41275d:	mov    rdi,QWORD PTR [rdx+0x20]
  412761:	mov    rsi,rbx
  412764:	call   42dcf0 <xmlStrEqual@plt+0x29db0>
  412769:	mov    rax,QWORD PTR [r15+0x70]
  41276d:	mov    rsi,rbx
  412770:	mov    rax,QWORD PTR [rax]
  412773:	mov    rdi,QWORD PTR [rax+0x20]
  412777:	call   42dcf0 <xmlStrEqual@plt+0x29db0>
  41277c:	mov    rax,QWORD PTR [rbx+0x8]
  412780:	mov    DWORD PTR [rsp+0x8],0x0
  412788:	mov    QWORD PTR [rsp+0x38],rax
  41278d:	cmp    rbx,rax
  412790:	je     4129c6 <xmlStrEqual@plt+0xea86>
  412796:	mov    QWORD PTR [rsp+0x48],r15
  41279b:	mov    rax,QWORD PTR [rsp+0x38]
  4127a0:	mov    rax,QWORD PTR [rax+0x10]
  4127a4:	mov    rax,QWORD PTR [rax]
  4127a7:	mov    QWORD PTR [rsp+0x10],rax
  4127ac:	test   rax,rax
  4127af:	je     4129a8 <xmlStrEqual@plt+0xea68>
  4127b5:	lea    rax,[rsp+0x80]
  4127bd:	mov    QWORD PTR [rsp+0x40],rax
  4127c2:	mov    QWORD PTR [rsp+0x18],rax
  4127c7:	lea    rax,[rsp+0x490]
  4127cf:	mov    QWORD PTR [rsp+0x20],rax
  4127d4:	jmp    412811 <xmlStrEqual@plt+0xe8d1>
  4127d6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4127e0:	mov    rdx,QWORD PTR [rsp+0x10]
  4127e5:	mov    rax,QWORD PTR [rdx+0x10]
  4127e9:	mov    rdx,QWORD PTR [rdx+0x18]
  4127ed:	test   rax,rax
  4127f0:	je     412980 <xmlStrEqual@plt+0xea40>
  4127f6:	test   rdx,rdx
  4127f9:	je     41280c <xmlStrEqual@plt+0xe8cc>
  4127fb:	mov    rcx,QWORD PTR [rsp+0x18]
  412800:	lea    rsi,[rcx+0x8]
  412804:	mov    QWORD PTR [rcx],rdx
  412807:	mov    QWORD PTR [rsp+0x18],rsi
  41280c:	mov    QWORD PTR [rsp+0x10],rax
  412811:	mov    rax,QWORD PTR [rsp+0x10]
  412816:	cmp    QWORD PTR [rax+0x8],0x0
  41281b:	je     4127e0 <xmlStrEqual@plt+0xe8a0>
  41281d:	mov    rax,QWORD PTR [rax+0x28]
  412821:	mov    rbx,QWORD PTR [rax]
  412824:	test   rbx,rbx
  412827:	je     4127e0 <xmlStrEqual@plt+0xe8a0>
  412829:	mov    r12,QWORD PTR [rsp+0x20]
  41282e:	jmp    412851 <xmlStrEqual@plt+0xe911>
  412830:	mov    rax,QWORD PTR [rbx+0x10]
  412834:	mov    rdx,QWORD PTR [rbx+0x18]
  412838:	test   rax,rax
  41283b:	je     412950 <xmlStrEqual@plt+0xea10>
  412841:	test   rdx,rdx
  412844:	je     41284e <xmlStrEqual@plt+0xe90e>
  412846:	mov    QWORD PTR [r12],rdx
  41284a:	add    r12,0x8
  41284e:	mov    rbx,rax
  412851:	cmp    QWORD PTR [rbx+0x8],0x0
  412856:	je     412830 <xmlStrEqual@plt+0xe8f0>
  412858:	mov    rbp,QWORD PTR [rbx+0x28]
  41285c:	test   rbp,rbp
  41285f:	je     412830 <xmlStrEqual@plt+0xe8f0>
  412861:	inc    DWORD PTR [rsp+0x8]
  412865:	mov    eax,DWORD PTR [rsp+0x8]
  412869:	cmp    eax,0x1
  41286c:	je     412888 <xmlStrEqual@plt+0xe948>
  41286e:	xor    eax,eax
  412870:	lea    rsi,[rip+0x38621]        # 44ae98 <xmlStrEqual@plt+0x46f58>
  412877:	mov    edi,0x2
  41287c:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  412881:	xor    eax,eax
  412883:	call   43f9f0 <xmlStrEqual@plt+0x3bab0>
  412888:	mov    rdi,rbp
  41288b:	call   434a40 <xmlStrEqual@plt+0x30b00>
  412890:	mov    rax,QWORD PTR [rax+0x28]
  412894:	mov    r13,QWORD PTR [rax+0x8]
  412898:	jmp    4128a4 <xmlStrEqual@plt+0xe964>
  41289a:	nop    WORD PTR [rax+rax*1+0x0]
  4128a0:	mov    r13,QWORD PTR [r13+0x8]
  4128a4:	mov    rdi,rbp
  4128a7:	call   434a40 <xmlStrEqual@plt+0x30b00>
  4128ac:	cmp    QWORD PTR [rax+0x28],r13
  4128b0:	je     412910 <xmlStrEqual@plt+0xe9d0>
  4128b2:	mov    r15,QWORD PTR [r13+0x10]
  4128b6:	mov    eax,DWORD PTR [r15+0x18]
  4128ba:	test   eax,eax
  4128bc:	je     4128a0 <xmlStrEqual@plt+0xe960>
  4128be:	mov    r14,QWORD PTR [r15+0x8]
  4128c2:	cmp    r14,r15
  4128c5:	jne    4128d9 <xmlStrEqual@plt+0xe999>
  4128c7:	jmp    4128a0 <xmlStrEqual@plt+0xe960>
  4128c9:	nop    DWORD PTR [rax+0x0]
  4128d0:	mov    r14,QWORD PTR [r14+0x8]
  4128d4:	cmp    r14,r15
  4128d7:	je     4128a0 <xmlStrEqual@plt+0xe960>
  4128d9:	mov    rax,QWORD PTR [r14+0x10]
  4128dd:	mov    BYTE PTR [rax+0xa],0x0
  4128e1:	mov    rax,QWORD PTR [rax]
  4128e4:	cmp    DWORD PTR [rax+0x18],0x3
  4128e8:	jne    4128d0 <xmlStrEqual@plt+0xe990>
  4128ea:	xor    eax,eax
  4128ec:	lea    rsi,[rip+0x385d5]        # 44aec8 <xmlStrEqual@plt+0x46f88>
  4128f3:	mov    edi,0x2
  4128f8:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  4128fd:	xor    eax,eax
  4128ff:	call   43f9f0 <xmlStrEqual@plt+0x3bab0>
  412904:	jmp    4128d0 <xmlStrEqual@plt+0xe990>
  412906:	nop    WORD PTR cs:[rax+rax*1+0x0]
  412910:	lea    rsi,[rip+0x38601]        # 44af18 <xmlStrEqual@plt+0x46fd8>
  412917:	mov    edi,0x2
  41291c:	xor    eax,eax
  41291e:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  412923:	mov    rax,QWORD PTR [rsp+0x58]
  412928:	mov    rdi,QWORD PTR [rax+0x8]
  41292c:	call   42b470 <xmlStrEqual@plt+0x27530>
  412931:	mov    rax,QWORD PTR [rsp+0x50]
  412936:	mov    rdi,QWORD PTR [rax+0x8]
  41293a:	call   42b470 <xmlStrEqual@plt+0x27530>
  41293f:	mov    rax,QWORD PTR [rbx+0x10]
  412943:	mov    rdx,QWORD PTR [rbx+0x18]
  412947:	test   rax,rax
  41294a:	jne    412841 <xmlStrEqual@plt+0xe901>
  412950:	mov    rax,rdx
  412953:	test   rdx,rdx
  412956:	jne    41284e <xmlStrEqual@plt+0xe90e>
  41295c:	cmp    r12,QWORD PTR [rsp+0x20]
  412961:	je     4127e0 <xmlStrEqual@plt+0xe8a0>
  412967:	mov    rax,QWORD PTR [r12-0x8]
  41296c:	test   rax,rax
  41296f:	je     4127e0 <xmlStrEqual@plt+0xe8a0>
  412975:	sub    r12,0x8
  412979:	jmp    41284e <xmlStrEqual@plt+0xe90e>
  41297e:	xchg   ax,ax
  412980:	mov    rax,rdx
  412983:	test   rdx,rdx
  412986:	jne    41280c <xmlStrEqual@plt+0xe8cc>
  41298c:	mov    rax,QWORD PTR [rsp+0x18]
  412991:	mov    rcx,QWORD PTR [rsp+0x40]
  412996:	cmp    rax,rcx
  412999:	je     4129a8 <xmlStrEqual@plt+0xea68>
  41299b:	mov    rax,QWORD PTR [rax-0x8]
  41299f:	test   rax,rax
  4129a2:	jne    412c7e <xmlStrEqual@plt+0xed3e>
  4129a8:	mov    rax,QWORD PTR [rsp+0x38]
  4129ad:	mov    rax,QWORD PTR [rax+0x8]
  4129b1:	mov    QWORD PTR [rsp+0x38],rax
  4129b6:	cmp    QWORD PTR [rsp+0x30],rax
  4129bb:	jne    41279b <xmlStrEqual@plt+0xe85b>
  4129c1:	mov    r15,QWORD PTR [rsp+0x48]
  4129c6:	mov    rdi,QWORD PTR [rsp+0x30]
  4129cb:	call   42e2b0 <xmlStrEqual@plt+0x2a370>
  4129d0:	cmp    DWORD PTR [r15],0x3
  4129d4:	jne    411da3 <xmlStrEqual@plt+0xde63>
  4129da:	mov    rdi,QWORD PTR [r15+0x70]
  4129de:	mov    esi,0x2
  4129e3:	call   409420 <xmlStrEqual@plt+0x54e0>
  4129e8:	cmp    eax,0x1
  4129eb:	jle    412a07 <xmlStrEqual@plt+0xeac7>
  4129ed:	xor    eax,eax
  4129ef:	lea    rsi,[rip+0x38542]        # 44af38 <xmlStrEqual@plt+0x46ff8>
  4129f6:	mov    edi,0x2
  4129fb:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  412a00:	xor    eax,eax
  412a02:	call   43f9f0 <xmlStrEqual@plt+0x3bab0>
  412a07:	mov    rdi,QWORD PTR [r15+0x70]
  412a0b:	mov    esi,0xa
  412a10:	call   409420 <xmlStrEqual@plt+0x54e0>
  412a15:	cmp    eax,0x1
  412a18:	jle    411da3 <xmlStrEqual@plt+0xde63>
  412a1e:	xor    eax,eax
  412a20:	lea    rsi,[rip+0x38511]        # 44af38 <xmlStrEqual@plt+0x46ff8>
  412a27:	mov    edi,0x2
  412a2c:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  412a31:	xor    eax,eax
  412a33:	call   43f9f0 <xmlStrEqual@plt+0x3bab0>
  412a38:	jmp    411da3 <xmlStrEqual@plt+0xde63>
  412a3d:	mov    rdi,QWORD PTR [rsp+0x50]
  412a42:	call   4337a0 <xmlStrEqual@plt+0x2f860>
  412a47:	test   al,al
  412a49:	jne    411d3b <xmlStrEqual@plt+0xddfb>
  412a4f:	lea    rsi,[rip+0x382c2]        # 44ad18 <xmlStrEqual@plt+0x46dd8>
  412a56:	mov    edi,0x3
  412a5b:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  412a60:	mov    edi,0x2
  412a65:	call   43b6a0 <xmlStrEqual@plt+0x37760>
  412a6a:	jmp    411d8b <xmlStrEqual@plt+0xde4b>
  412a6f:	lea    rsi,[rip+0x3824a]        # 44acc0 <xmlStrEqual@plt+0x46d80>
  412a76:	mov    edi,0x1
  412a7b:	xor    eax,eax
  412a7d:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  412a82:	mov    edi,0x2
  412a87:	call   43b6a0 <xmlStrEqual@plt+0x37760>
  412a8c:	jmp    411cf8 <xmlStrEqual@plt+0xddb8>
  412a91:	mov    rax,0x469e3c
  412a98:	mov    ebp,DWORD PTR [rax]
  412a9a:	mov    QWORD PTR [rsp+0x28],rax
  412a9f:	test   ebp,ebp
  412aa1:	jle    411cd6 <xmlStrEqual@plt+0xdd96>
  412aa7:	xor    eax,eax
  412aa9:	lea    rsi,[rip+0x38727]        # 44b1d7 <xmlStrEqual@plt+0x47297>
  412ab0:	mov    edi,0x5
  412ab5:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  412aba:	mov    eax,DWORD PTR [r15]
  412abd:	jmp    411cc3 <xmlStrEqual@plt+0xdd83>
  412ac2:	lea    rsi,[rip+0x3819f]        # 44ac68 <xmlStrEqual@plt+0x46d28>
  412ac9:	mov    edi,0x3
  412ace:	xor    eax,eax
  412ad0:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  412ad5:	mov    edi,0x2
  412ada:	call   43b6a0 <xmlStrEqual@plt+0x37760>
  412adf:	jmp    411ce7 <xmlStrEqual@plt+0xdda7>
  412ae4:	nop    DWORD PTR [rax+0x0]
  412ae8:	cmp    QWORD PTR [rsp+0x10],0x0
  412aee:	jne    4123a8 <xmlStrEqual@plt+0xe468>
  412af4:	mov    rax,QWORD PTR [rsp+0x30]
  412af9:	mov    rsi,QWORD PTR [rsp+0x48]
  412afe:	cmp    rax,rsi
  412b01:	je     412344 <xmlStrEqual@plt+0xe404>
  412b07:	mov    rax,QWORD PTR [rax-0x8]
  412b0b:	mov    QWORD PTR [rsp+0x10],rax
  412b10:	test   rax,rax
  412b13:	je     412344 <xmlStrEqual@plt+0xe404>
  412b19:	sub    QWORD PTR [rsp+0x30],0x8
  412b1f:	jmp    4123a8 <xmlStrEqual@plt+0xe468>
  412b24:	nop    DWORD PTR [rax+0x0]
  412b28:	mov    QWORD PTR [rsp+0x10],rax
  412b2d:	jmp    4123a8 <xmlStrEqual@plt+0xe468>
  412b32:	cmp    QWORD PTR [rsp+0x38],0x0
  412b38:	jne    412338 <xmlStrEqual@plt+0xe3f8>
  412b3e:	mov    rax,QWORD PTR [rsp+0x40]
  412b43:	mov    rdx,QWORD PTR [rsp+0x78]
  412b48:	cmp    rax,rdx
  412b4b:	je     412b5b <xmlStrEqual@plt+0xec1b>
  412b4d:	mov    rax,QWORD PTR [rax-0x8]
  412b51:	mov    QWORD PTR [rsp+0x38],rax
  412b56:	test   rax,rax
  412b59:	jne    412b92 <xmlStrEqual@plt+0xec52>
  412b5b:	mov    rax,QWORD PTR [rsp+0x68]
  412b60:	mov    rax,QWORD PTR [rax+0x8]
  412b64:	mov    QWORD PTR [rsp+0x68],rax
  412b69:	cmp    QWORD PTR [rsp+0x60],rax
  412b6e:	jne    4122fa <xmlStrEqual@plt+0xe3ba>
  412b74:	mov    rdi,QWORD PTR [rsp+0x60]
  412b79:	call   42e2b0 <xmlStrEqual@plt+0x2a370>
  412b7e:	jmp    41215d <xmlStrEqual@plt+0xe21d>
  412b83:	nop    DWORD PTR [rax+rax*1+0x0]
  412b88:	mov    QWORD PTR [rsp+0x38],rax
  412b8d:	jmp    412338 <xmlStrEqual@plt+0xe3f8>
  412b92:	sub    QWORD PTR [rsp+0x40],0x8
  412b98:	jmp    412338 <xmlStrEqual@plt+0xe3f8>
  412b9d:	lea    rsi,[rip+0x38649]        # 44b1ed <xmlStrEqual@plt+0x472ad>
  412ba4:	mov    edi,0x5
  412ba9:	xor    eax,eax
  412bab:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  412bb0:	jmp    411cd6 <xmlStrEqual@plt+0xdd96>
  412bb5:	mov    DWORD PTR [r15+0x24],0x0
  412bbd:	lea    rsi,[rip+0x382ac]        # 44ae70 <xmlStrEqual@plt+0x46f30>
  412bc4:	mov    edi,0x4
  412bc9:	xor    eax,eax
  412bcb:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  412bd0:	jmp    41264f <xmlStrEqual@plt+0xe70f>
  412bd5:	lea    rsi,[rip+0x38264]        # 44ae40 <xmlStrEqual@plt+0x46f00>
  412bdc:	mov    edi,0x4
  412be1:	xor    eax,eax
  412be3:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  412be8:	mov    rdi,QWORD PTR [r15+0x48]
  412bec:	call   42e260 <xmlStrEqual@plt+0x2a320>
  412bf1:	mov    r8d,DWORD PTR [r15+0x24]
  412bf5:	test   r8d,r8d
  412bf8:	jle    41264f <xmlStrEqual@plt+0xe70f>
  412bfe:	jmp    412bb5 <xmlStrEqual@plt+0xec75>
  412c00:	lea    rsi,[rip+0x381a9]        # 44adb0 <xmlStrEqual@plt+0x46e70>
  412c07:	mov    edi,0x2
  412c0c:	xor    eax,eax
  412c0e:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  412c13:	xor    eax,eax
  412c15:	call   43f9f0 <xmlStrEqual@plt+0x3bab0>
  412c1a:	mov    rax,QWORD PTR [r15+0x78]
  412c1e:	mov    edx,DWORD PTR [rax+0x18]
  412c21:	jmp    412628 <xmlStrEqual@plt+0xe6e8>
  412c26:	lea    rdx,[rip+0x373fb]        # 44a028 <xmlStrEqual@plt+0x460e8>
  412c2d:	lea    rsi,[rip+0x3865c]        # 44b290 <xmlStrEqual@plt+0x47350>
  412c34:	lea    rdi,[rip+0x38455]        # 44b090 <xmlStrEqual@plt+0x47150>
  412c3b:	call   4350f0 <xmlStrEqual@plt+0x311b0>
  412c40:	mov    rax,QWORD PTR [rax+0x8]
  412c44:	mov    rax,QWORD PTR [rax+0x10]
  412c48:	mov    rdi,QWORD PTR [rax]
  412c4b:	call   425890 <xmlStrEqual@plt+0x21950>
  412c50:	cmp    ax,0x2
  412c54:	je     412631 <xmlStrEqual@plt+0xe6f1>
  412c5a:	xor    eax,eax
  412c5c:	lea    rsi,[rip+0x38195]        # 44adf8 <xmlStrEqual@plt+0x46eb8>
  412c63:	mov    edi,0x2
  412c68:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  412c6d:	xor    eax,eax
  412c6f:	call   43f9f0 <xmlStrEqual@plt+0x3bab0>
  412c74:	jmp    412631 <xmlStrEqual@plt+0xe6f1>
  412c79:	call   403c00 <__stack_chk_fail@plt>
  412c7e:	sub    QWORD PTR [rsp+0x18],0x8
  412c84:	jmp    41280c <xmlStrEqual@plt+0xe8cc>
  412c89:	nop    DWORD PTR [rax+0x0]
  412c90:	endbr64 
  412c94:	push   r14
  412c96:	mov    r14,rdi
  412c99:	mov    edi,0x20
  412c9e:	push   r13
  412ca0:	mov    r13d,esi
  412ca3:	push   r12
  412ca5:	mov    r12,rdx
  412ca8:	push   rbp
  412ca9:	mov    ebp,ecx
  412cab:	push   rbx
  412cac:	call   434fe0 <xmlStrEqual@plt+0x310a0>
  412cb1:	mov    rbx,rax
  412cb4:	test   rax,rax
  412cb7:	je     412ce8 <xmlStrEqual@plt+0xeda8>
  412cb9:	mov    rdi,r14
  412cbc:	call   425060 <xmlStrEqual@plt+0x21120>
  412cc1:	mov    QWORD PTR [rbx],rax
  412cc4:	mov    BYTE PTR [rbx+0x8],r13b
  412cc8:	mov    rdi,r12
  412ccb:	call   403ed0 <strdup@plt>
  412cd0:	mov    QWORD PTR [rbx+0x10],rax
  412cd4:	mov    BYTE PTR [rbx+0x18],bpl
  412cd8:	mov    rax,rbx
  412cdb:	pop    rbx
  412cdc:	pop    rbp
  412cdd:	pop    r12
  412cdf:	pop    r13
  412ce1:	pop    r14
  412ce3:	ret    
  412ce4:	nop    DWORD PTR [rax+0x0]
  412ce8:	lea    rsi,[rip+0x38369]        # 44b058 <xmlStrEqual@plt+0x47118>
  412cef:	mov    edi,0x3
  412cf4:	xor    eax,eax
  412cf6:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  412cfb:	jmp    412cd8 <xmlStrEqual@plt+0xed98>
  412cfd:	nop    DWORD PTR [rax]
  412d00:	endbr64 
  412d04:	mov    eax,0x1
  412d09:	ret    
  412d0a:	nop    WORD PTR [rax+rax*1+0x0]
  412d10:	endbr64 
  412d14:	mov    eax,0x1
  412d19:	ret    
  412d1a:	nop    WORD PTR [rax+rax*1+0x0]
  412d20:	endbr64 
  412d24:	mov    eax,0x1
  412d29:	ret    
  412d2a:	nop    WORD PTR [rax+rax*1+0x0]
  412d30:	endbr64 
  412d34:	xor    eax,eax
  412d36:	ret    
  412d37:	nop    WORD PTR [rax+rax*1+0x0]
  412d40:	endbr64 
  412d44:	sub    rsp,0x8
  412d48:	mov    edi,0x48
  412d4d:	call   434fe0 <xmlStrEqual@plt+0x310a0>
  412d52:	add    rsp,0x8
  412d56:	ret    
  412d57:	nop    WORD PTR [rax+rax*1+0x0]
  412d60:	endbr64 
  412d64:	push   rbx
  412d65:	mov    rbx,rdi
  412d68:	mov    rdi,QWORD PTR [rdi]
  412d6b:	call   4037b0 <free@plt>
  412d70:	mov    rdi,QWORD PTR [rbx+0x10]
  412d74:	call   42e2b0 <xmlStrEqual@plt+0x2a370>
  412d79:	mov    rdi,rbx
  412d7c:	pop    rbx
  412d7d:	jmp    4037b0 <free@plt>
  412d82:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  412d8d:	nop    DWORD PTR [rax]
  412d90:	endbr64 
  412d94:	push   rbx
  412d95:	mov    rbx,rdi
  412d98:	mov    rdi,QWORD PTR [rdi+0x8]
  412d9c:	call   424bf0 <xmlStrEqual@plt+0x20cb0>
  412da1:	mov    rdi,QWORD PTR [rbx]
  412da4:	call   4037b0 <free@plt>
  412da9:	mov    rdi,QWORD PTR [rbx+0x18]
  412dad:	call   4037b0 <free@plt>
  412db2:	mov    rdi,rbx
  412db5:	pop    rbx
  412db6:	jmp    4037b0 <free@plt>
  412dbb:	nop    DWORD PTR [rax+rax*1+0x0]
  412dc0:	push   r15
  412dc2:	push   r14
  412dc4:	push   r13
  412dc6:	push   r12
  412dc8:	push   rbp
  412dc9:	push   rbx
  412dca:	sub    rsp,0x28
  412dce:	mov    rax,QWORD PTR fs:0x28
  412dd7:	mov    QWORD PTR [rsp+0x18],rax
  412ddc:	xor    eax,eax
  412dde:	mov    rax,QWORD PTR [rdi+0x28]
  412de2:	mov    DWORD PTR [rsp+0x10],0x0
  412dea:	mov    rbp,QWORD PTR [rax+0x8]
  412dee:	mov    DWORD PTR [rsp+0x14],0x0
  412df6:	cmp    rbp,rax
  412df9:	je     412eb0 <xmlStrEqual@plt+0xef70>
  412dff:	lea    rax,[rsp+0x14]
  412e04:	mov    QWORD PTR [rsp+0x8],rax
  412e09:	lea    rax,[rsp+0x10]
  412e0e:	mov    r13,rdi
  412e11:	mov    r12d,esi
  412e14:	mov    QWORD PTR [rsp],rax
  412e18:	jmp    412e31 <xmlStrEqual@plt+0xeef1>
  412e1a:	nop    WORD PTR [rax+rax*1+0x0]
  412e20:	cmp    DWORD PTR [rsp+0x14],r12d
  412e25:	je     412e53 <xmlStrEqual@plt+0xef13>
  412e27:	mov    rbp,QWORD PTR [rbp+0x8]
  412e2b:	cmp    rbp,QWORD PTR [r13+0x28]
  412e2f:	je     412eb0 <xmlStrEqual@plt+0xef70>
  412e31:	mov    rbx,QWORD PTR [rbp+0x10]
  412e35:	mov    rdx,QWORD PTR [rsp+0x8]
  412e3a:	mov    rsi,QWORD PTR [rsp]
  412e3e:	mov    rdi,rbx
  412e41:	call   42acb0 <xmlStrEqual@plt+0x26d70>
  412e46:	mov    eax,DWORD PTR [rsp+0x10]
  412e4a:	test   eax,eax
  412e4c:	je     412e27 <xmlStrEqual@plt+0xeee7>
  412e4e:	cmp    eax,0x1
  412e51:	je     412e20 <xmlStrEqual@plt+0xeee0>
  412e53:	mov    r15,QWORD PTR [rbx+0x8]
  412e57:	cmp    r15,rbx
  412e5a:	jne    412e69 <xmlStrEqual@plt+0xef29>
  412e5c:	jmp    412e27 <xmlStrEqual@plt+0xeee7>
  412e5e:	xchg   ax,ax
  412e60:	mov    r15,QWORD PTR [r15+0x8]
  412e64:	cmp    r15,rbx
  412e67:	je     412e27 <xmlStrEqual@plt+0xeee7>
  412e69:	mov    r14,QWORD PTR [r15+0x10]
  412e6d:	cmp    BYTE PTR [r14+0x8],0x0
  412e72:	je     412e60 <xmlStrEqual@plt+0xef20>
  412e74:	mov    rdi,QWORD PTR [r14]
  412e77:	call   4255a0 <xmlStrEqual@plt+0x21660>
  412e7c:	mov    rdi,rax
  412e7f:	call   425890 <xmlStrEqual@plt+0x21950>
  412e84:	movzx  eax,ax
  412e87:	cmp    eax,r12d
  412e8a:	jne    412e60 <xmlStrEqual@plt+0xef20>
  412e8c:	mov    rcx,QWORD PTR [rsp+0x18]
  412e91:	xor    rcx,QWORD PTR fs:0x28
  412e9a:	mov    rax,r14
  412e9d:	jne    412eb5 <xmlStrEqual@plt+0xef75>
  412e9f:	add    rsp,0x28
  412ea3:	pop    rbx
  412ea4:	pop    rbp
  412ea5:	pop    r12
  412ea7:	pop    r13
  412ea9:	pop    r14
  412eab:	pop    r15
  412ead:	ret    
  412eae:	xchg   ax,ax
  412eb0:	xor    r14d,r14d
  412eb3:	jmp    412e8c <xmlStrEqual@plt+0xef4c>
  412eb5:	call   403c00 <__stack_chk_fail@plt>
  412eba:	nop    WORD PTR [rax+rax*1+0x0]
  412ec0:	endbr64 
  412ec4:	push   rbx
  412ec5:	mov    rax,0x469660
  412ecc:	cmp    QWORD PTR [rdi+0x8],rax
  412ed0:	jne    412f00 <xmlStrEqual@plt+0xefc0>
  412ed2:	mov    rax,0x469e3c
  412ed9:	mov    rbx,rdi
  412edc:	mov    eax,DWORD PTR [rax]
  412ede:	test   eax,eax
  412ee0:	jle    412ef5 <xmlStrEqual@plt+0xefb5>
  412ee2:	lea    rsi,[rip+0x38cb0]        # 44bb99 <xmlStrEqual@plt+0x47c59>
  412ee9:	mov    edi,0x5
  412eee:	xor    eax,eax
  412ef0:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  412ef5:	mov    rdi,rbx
  412ef8:	pop    rbx
  412ef9:	jmp    4037b0 <free@plt>
  412efe:	xchg   ax,ax
  412f00:	lea    rdx,[rip+0x38399]        # 44b2a0 <xmlStrEqual@plt+0x47360>
  412f07:	lea    rsi,[rip+0x38e3a]        # 44bd48 <xmlStrEqual@plt+0x47e08>
  412f0e:	lea    rdi,[rip+0x38c6e]        # 44bb83 <xmlStrEqual@plt+0x47c43>
  412f15:	call   4350f0 <xmlStrEqual@plt+0x311b0>
  412f1a:	nop    WORD PTR [rax+rax*1+0x0]
  412f20:	endbr64 
  412f24:	push   rbx
  412f25:	mov    rax,0x469660
  412f2c:	cmp    QWORD PTR [rdi+0x8],rax
  412f30:	jne    412f78 <xmlStrEqual@plt+0xf038>
  412f32:	mov    rbx,rdi
  412f35:	mov    rsi,0x430da0
  412f3c:	mov    rdi,QWORD PTR [rdi+0x18]
  412f40:	call   4319b0 <xmlStrEqual@plt+0x2da70>
  412f45:	mov    rdi,QWORD PTR [rbx+0x20]
  412f49:	mov    rsi,0x430de0
  412f50:	call   4319b0 <xmlStrEqual@plt+0x2da70>
  412f55:	mov    rdi,QWORD PTR [rbx+0x28]
  412f59:	call   43add0 <xmlStrEqual@plt+0x36e90>
  412f5e:	mov    rdi,QWORD PTR [rbx+0x30]
  412f62:	call   43add0 <xmlStrEqual@plt+0x36e90>
  412f67:	mov    rdi,QWORD PTR [rbx+0x38]
  412f6b:	pop    rbx
  412f6c:	jmp    43add0 <xmlStrEqual@plt+0x36e90>
  412f71:	nop    DWORD PTR [rax+0x0]
  412f78:	lea    rdx,[rip+0x38321]        # 44b2a0 <xmlStrEqual@plt+0x47360>
  412f7f:	lea    rsi,[rip+0x38dc2]        # 44bd48 <xmlStrEqual@plt+0x47e08>
  412f86:	lea    rdi,[rip+0x38bf6]        # 44bb83 <xmlStrEqual@plt+0x47c43>
  412f8d:	call   4350f0 <xmlStrEqual@plt+0x311b0>
  412f92:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  412f9d:	nop    DWORD PTR [rax]
  412fa0:	endbr64 
  412fa4:	push   rbx
  412fa5:	mov    rax,0x469660
  412fac:	cmp    QWORD PTR [rdi+0x8],rax
  412fb0:	jne    413060 <xmlStrEqual@plt+0xf120>
  412fb6:	xor    eax,eax
  412fb8:	mov    rbx,rdi
  412fbb:	call   431e70 <xmlStrEqual@plt+0x2df30>
  412fc0:	mov    QWORD PTR [rbx+0x20],rax
  412fc4:	xor    eax,eax
  412fc6:	call   431e70 <xmlStrEqual@plt+0x2df30>
  412fcb:	mov    QWORD PTR [rbx+0x18],rax
  412fcf:	mov    rdi,0x412d60
  412fd6:	call   43a0a0 <xmlStrEqual@plt+0x36160>
  412fdb:	mov    QWORD PTR [rbx+0x28],rax
  412fdf:	mov    rdi,0x412d90
  412fe6:	call   43a0a0 <xmlStrEqual@plt+0x36160>
  412feb:	mov    QWORD PTR [rbx+0x30],rax
  412fef:	xor    eax,eax
  412ff1:	call   43a070 <xmlStrEqual@plt+0x36130>
  412ff6:	cmp    QWORD PTR [rbx+0x20],0x0
  412ffb:	mov    QWORD PTR [rbx+0x38],rax
  412fff:	mov    QWORD PTR [rbx+0x40],0x0
  413007:	je     413050 <xmlStrEqual@plt+0xf110>
  413009:	cmp    QWORD PTR [rbx+0x18],0x0
  41300e:	je     413050 <xmlStrEqual@plt+0xf110>
  413010:	mov    rax,0x469e3c
  413017:	mov    ebx,0x1
  41301c:	mov    eax,DWORD PTR [rax]
  41301e:	test   eax,eax
  413020:	jg     413030 <xmlStrEqual@plt+0xf0f0>
  413022:	mov    eax,ebx
  413024:	pop    rbx
  413025:	ret    
  413026:	nop    WORD PTR cs:[rax+rax*1+0x0]
  413030:	xor    eax,eax
  413032:	lea    rsi,[rip+0x3828f]        # 44b2c8 <xmlStrEqual@plt+0x47388>
  413039:	mov    edi,0x5
  41303e:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  413043:	mov    eax,ebx
  413045:	pop    rbx
  413046:	ret    
  413047:	nop    WORD PTR [rax+rax*1+0x0]
  413050:	xor    ebx,ebx
  413052:	mov    eax,ebx
  413054:	pop    rbx
  413055:	ret    
  413056:	nop    WORD PTR cs:[rax+rax*1+0x0]
  413060:	lea    rdx,[rip+0x38239]        # 44b2a0 <xmlStrEqual@plt+0x47360>
  413067:	lea    rsi,[rip+0x38cda]        # 44bd48 <xmlStrEqual@plt+0x47e08>
  41306e:	lea    rdi,[rip+0x38b0e]        # 44bb83 <xmlStrEqual@plt+0x47c43>
  413075:	call   4350f0 <xmlStrEqual@plt+0x311b0>
  41307a:	nop    WORD PTR [rax+rax*1+0x0]
  413080:	endbr64 
  413084:	test   rsi,rsi
  413087:	je     4130b0 <xmlStrEqual@plt+0xf170>
  413089:	sub    rsp,0x8
  41308d:	mov    rdx,rsi
  413090:	mov    rdi,QWORD PTR [rdi+0x18]
  413094:	mov    rsi,QWORD PTR [rsi]
  413097:	call   4321e0 <xmlStrEqual@plt+0x2e2a0>
  41309c:	test   eax,eax
  41309e:	setne  al
  4130a1:	movzx  eax,al
  4130a4:	add    rsp,0x8
  4130a8:	ret    
  4130a9:	nop    DWORD PTR [rax+0x0]
  4130b0:	xor    eax,eax
  4130b2:	ret    
  4130b3:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4130be:	xchg   ax,ax
  4130c0:	endbr64 
  4130c4:	test   rsi,rsi
  4130c7:	je     413100 <xmlStrEqual@plt+0xf1c0>
  4130c9:	push   rbp
  4130ca:	mov    rbp,rdi
  4130cd:	mov    edi,0x10
  4130d2:	push   rbx
  4130d3:	mov    rbx,rsi
  4130d6:	sub    rsp,0x8
  4130da:	call   434fe0 <xmlStrEqual@plt+0x310a0>
  4130df:	mov    QWORD PTR [rax],rbx
  4130e2:	mov    rdi,QWORD PTR [rbp+0x20]
  4130e6:	mov    rsi,rbx
  4130e9:	mov    rdx,rax
  4130ec:	call   4321e0 <xmlStrEqual@plt+0x2e2a0>
  4130f1:	test   eax,eax
  4130f3:	setne  al
  4130f6:	add    rsp,0x8
  4130fa:	pop    rbx
  4130fb:	movzx  eax,al
  4130fe:	pop    rbp
  4130ff:	ret    
  413100:	xor    eax,eax
  413102:	ret    
  413103:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  41310e:	xchg   ax,ax
  413110:	endbr64 
  413114:	push   r15
  413116:	mov    r15d,esi
  413119:	push   r14
  41311b:	push   r13
  41311d:	push   r12
  41311f:	push   rbp
  413120:	mov    rbp,rdi
  413123:	push   rbx
  413124:	sub    rsp,0x878
  41312b:	mov    rax,QWORD PTR fs:0x28
  413134:	mov    QWORD PTR [rsp+0x868],rax
  41313c:	xor    eax,eax
  41313e:	cmp    esi,0x4
  413141:	jle    41317c <xmlStrEqual@plt+0xf23c>
  413143:	mov    rax,0x469e3c
  41314a:	mov    eax,DWORD PTR [rax]
  41314c:	add    eax,0x4
  41314f:	cmp    esi,eax
  413151:	jle    41317c <xmlStrEqual@plt+0xf23c>
  413153:	mov    rax,QWORD PTR [rsp+0x868]
  41315b:	xor    rax,QWORD PTR fs:0x28
  413164:	jne    4135ba <xmlStrEqual@plt+0xf67a>
  41316a:	add    rsp,0x878
  413171:	pop    rbx
  413172:	pop    rbp
  413173:	pop    r12
  413175:	pop    r13
  413177:	pop    r14
  413179:	pop    r15
  41317b:	ret    
  41317c:	lea    rsi,[rip+0x3816d]        # 44b2f0 <xmlStrEqual@plt+0x473b0>
  413183:	mov    edi,r15d
  413186:	xor    eax,eax
  413188:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  41318d:	call   42dc90 <xmlStrEqual@plt+0x29d50>
  413192:	mov    rbx,rax
  413195:	mov    QWORD PTR [rsp+0x48],rax
  41319a:	mov    rax,QWORD PTR [rbp+0x18]
  41319e:	mov    rsi,rbx
  4131a1:	mov    rdi,QWORD PTR [rax]
  4131a4:	call   42dcf0 <xmlStrEqual@plt+0x29db0>
  4131a9:	mov    rax,QWORD PTR [rbp+0x18]
  4131ad:	mov    rsi,rbx
  4131b0:	mov    rdi,QWORD PTR [rax+0x8]
  4131b4:	call   42dcf0 <xmlStrEqual@plt+0x29db0>
  4131b9:	mov    rsi,QWORD PTR [rbp+0x18]
  4131bd:	mov    rax,QWORD PTR [rsi+0x10]
  4131c1:	mov    rdi,QWORD PTR [rax]
  4131c4:	mov    r8d,DWORD PTR [rdi]
  4131c7:	test   r8d,r8d
  4131ca:	je     413220 <xmlStrEqual@plt+0xf2e0>
  4131cc:	xor    ebx,ebx
  4131ce:	jmp    4131dd <xmlStrEqual@plt+0xf29d>
  4131d0:	mov    rax,QWORD PTR [rsi+0x10]
  4131d4:	inc    ebx
  4131d6:	mov    rdi,QWORD PTR [rax]
  4131d9:	cmp    DWORD PTR [rdi],ebx
  4131db:	je     413220 <xmlStrEqual@plt+0xf2e0>
  4131dd:	mov    ecx,ebx
  4131df:	mov    r8,QWORD PTR [rdi+0x10]
  4131e3:	lea    eax,[rbx+rbx*1]
  4131e6:	and    eax,0x1e
  4131e9:	shr    ecx,0x4
  4131ec:	mov    edx,eax
  4131ee:	mov    eax,DWORD PTR [r8+rcx*4]
  4131f2:	shrx   eax,eax,edx
  4131f7:	test   al,0x3
  4131f9:	jne    4131d0 <xmlStrEqual@plt+0xf290>
  4131fb:	mov    rdx,QWORD PTR [rdi+0x20]
  4131ff:	mov    eax,ebx
  413201:	mov    rdi,QWORD PTR [rdx+rax*8]
  413205:	mov    rsi,QWORD PTR [rsp+0x48]
  41320a:	inc    ebx
  41320c:	call   42dcf0 <xmlStrEqual@plt+0x29db0>
  413211:	mov    rsi,QWORD PTR [rbp+0x18]
  413215:	mov    rax,QWORD PTR [rsi+0x10]
  413219:	mov    rdi,QWORD PTR [rax]
  41321c:	cmp    DWORD PTR [rdi],ebx
  41321e:	jne    4131dd <xmlStrEqual@plt+0xf29d>
  413220:	mov    rax,QWORD PTR [rsi+0x18]
  413224:	mov    rdi,QWORD PTR [rax]
  413227:	mov    ecx,DWORD PTR [rdi]
  413229:	test   ecx,ecx
  41322b:	je     413281 <xmlStrEqual@plt+0xf341>
  41322d:	xor    ebx,ebx
  41322f:	jmp    41323e <xmlStrEqual@plt+0xf2fe>
  413231:	mov    rax,QWORD PTR [rsi+0x18]
  413235:	inc    ebx
  413237:	mov    rdi,QWORD PTR [rax]
  41323a:	cmp    DWORD PTR [rdi],ebx
  41323c:	je     413281 <xmlStrEqual@plt+0xf341>
  41323e:	mov    ecx,ebx
  413240:	mov    r8,QWORD PTR [rdi+0x10]
  413244:	lea    eax,[rbx+rbx*1]
  413247:	and    eax,0x1e
  41324a:	shr    ecx,0x4
  41324d:	mov    edx,eax
  41324f:	mov    eax,DWORD PTR [r8+rcx*4]
  413253:	shrx   eax,eax,edx
  413258:	test   al,0x3
  41325a:	jne    413231 <xmlStrEqual@plt+0xf2f1>
  41325c:	mov    rdx,QWORD PTR [rdi+0x20]
  413260:	mov    eax,ebx
  413262:	mov    rdi,QWORD PTR [rdx+rax*8]
  413266:	mov    rsi,QWORD PTR [rsp+0x48]
  41326b:	inc    ebx
  41326d:	call   42dcf0 <xmlStrEqual@plt+0x29db0>
  413272:	mov    rsi,QWORD PTR [rbp+0x18]
  413276:	mov    rax,QWORD PTR [rsi+0x18]
  41327a:	mov    rdi,QWORD PTR [rax]
  41327d:	cmp    DWORD PTR [rdi],ebx
  41327f:	jne    41323e <xmlStrEqual@plt+0xf2fe>
  413281:	mov    rbx,QWORD PTR [rsp+0x48]
  413286:	mov    rdi,QWORD PTR [rsi+0x20]
  41328a:	mov    rsi,rbx
  41328d:	call   42dcf0 <xmlStrEqual@plt+0x29db0>
  413292:	mov    rax,QWORD PTR [rbp+0x18]
  413296:	mov    rsi,rbx
  413299:	mov    rdi,QWORD PTR [rax+0x20]
  41329d:	lea    r13,[rip+0x422a5]        # 455549 <xmlStrEqual@plt+0x51609>
  4132a4:	call   42dcf0 <xmlStrEqual@plt+0x29db0>
  4132a9:	mov    rdx,QWORD PTR [rbx+0x8]
  4132ad:	lea    r12,[rip+0x388fc]        # 44bbb0 <xmlStrEqual@plt+0x47c70>
  4132b4:	mov    QWORD PTR [rsp+0x38],rdx
  4132b9:	mov    r14d,r15d
  4132bc:	cmp    rbx,rdx
  4132bf:	je     413555 <xmlStrEqual@plt+0xf615>
  4132c5:	mov    rax,QWORD PTR [rsp+0x38]
  4132ca:	mov    rax,QWORD PTR [rax+0x10]
  4132ce:	mov    rax,QWORD PTR [rax]
  4132d1:	mov    QWORD PTR [rsp+0x20],rax
  4132d6:	test   rax,rax
  4132d9:	je     413539 <xmlStrEqual@plt+0xf5f9>
  4132df:	lea    rax,[rsp+0x50]
  4132e4:	mov    QWORD PTR [rsp+0x40],rax
  4132e9:	mov    QWORD PTR [rsp+0x28],rax
  4132ee:	jmp    413321 <xmlStrEqual@plt+0xf3e1>
  4132f0:	mov    rsi,QWORD PTR [rsp+0x20]
  4132f5:	mov    rax,QWORD PTR [rsi+0x10]
  4132f9:	mov    rdx,QWORD PTR [rsi+0x18]
  4132fd:	test   rax,rax
  413300:	je     413510 <xmlStrEqual@plt+0xf5d0>
  413306:	test   rdx,rdx
  413309:	je     41331c <xmlStrEqual@plt+0xf3dc>
  41330b:	mov    rsi,QWORD PTR [rsp+0x28]
  413310:	mov    QWORD PTR [rsi],rdx
  413313:	lea    rdx,[rsi+0x8]
  413317:	mov    QWORD PTR [rsp+0x28],rdx
  41331c:	mov    QWORD PTR [rsp+0x20],rax
  413321:	mov    rax,QWORD PTR [rsp+0x20]
  413326:	cmp    QWORD PTR [rax+0x8],0x0
  41332b:	je     4132f0 <xmlStrEqual@plt+0xf3b0>
  41332d:	mov    rax,QWORD PTR [rax+0x28]
  413331:	mov    rbx,QWORD PTR [rax]
  413334:	test   rbx,rbx
  413337:	je     4132f0 <xmlStrEqual@plt+0xf3b0>
  413339:	lea    rax,[rsp+0x460]
  413341:	mov    QWORD PTR [rsp+0x30],rax
  413346:	mov    rbp,rax
  413349:	nop    DWORD PTR [rax+0x0]
  413350:	cmp    QWORD PTR [rbx+0x8],0x0
  413355:	je     413399 <xmlStrEqual@plt+0xf459>
  413357:	mov    r15,QWORD PTR [rbx+0x28]
  41335b:	test   r15,r15
  41335e:	je     413399 <xmlStrEqual@plt+0xf459>
  413360:	cmp    r14d,0x4
  413364:	jle    413400 <xmlStrEqual@plt+0xf4c0>
  41336a:	mov    rax,0x469e3c
  413371:	mov    eax,DWORD PTR [rax]
  413373:	add    eax,0x4
  413376:	cmp    r14d,eax
  413379:	jle    413400 <xmlStrEqual@plt+0xf4c0>
  41337f:	mov    rdi,QWORD PTR [r15+0x20]
  413383:	mov    eax,DWORD PTR [rdi+0x18]
  413386:	test   eax,eax
  413388:	jle    413399 <xmlStrEqual@plt+0xf459>
  41338a:	mov    rsi,0x424d40
  413391:	mov    edx,r14d
  413394:	call   42dfc0 <xmlStrEqual@plt+0x2a080>
  413399:	mov    rax,QWORD PTR [rbx+0x10]
  41339d:	mov    rbx,QWORD PTR [rbx+0x18]
  4133a1:	test   rax,rax
  4133a4:	je     4133d0 <xmlStrEqual@plt+0xf490>
  4133a6:	test   rbx,rbx
  4133a9:	je     413498 <xmlStrEqual@plt+0xf558>
  4133af:	mov    QWORD PTR [rbp+0x0],rbx
  4133b3:	mov    rbx,rax
  4133b6:	add    rbp,0x8
  4133ba:	cmp    QWORD PTR [rbx+0x8],0x0
  4133bf:	jne    413357 <xmlStrEqual@plt+0xf417>
  4133c1:	mov    rax,QWORD PTR [rbx+0x10]
  4133c5:	mov    rbx,QWORD PTR [rbx+0x18]
  4133c9:	test   rax,rax
  4133cc:	jne    4133a6 <xmlStrEqual@plt+0xf466>
  4133ce:	xchg   ax,ax
  4133d0:	test   rbx,rbx
  4133d3:	jne    413350 <xmlStrEqual@plt+0xf410>
  4133d9:	cmp    rbp,QWORD PTR [rsp+0x30]
  4133de:	je     4132f0 <xmlStrEqual@plt+0xf3b0>
  4133e4:	mov    rbx,QWORD PTR [rbp-0x8]
  4133e8:	test   rbx,rbx
  4133eb:	je     4132f0 <xmlStrEqual@plt+0xf3b0>
  4133f1:	sub    rbp,0x8
  4133f5:	jmp    413350 <xmlStrEqual@plt+0xf410>
  4133fa:	nop    WORD PTR [rax+rax*1+0x0]
  413400:	cmp    BYTE PTR [r15+0x8],0x0
  413405:	mov    r9,r12
  413408:	cmovne r9,r13
  41340c:	mov    r8,r12
  41340f:	cmp    BYTE PTR [r15+0x18],0x0
  413414:	cmovne r8,r13
  413418:	mov    rcx,r12
  41341b:	cmp    BYTE PTR [r15+0x9],0x0
  413420:	cmovne rcx,r13
  413424:	mov    rdi,QWORD PTR [r15]
  413427:	mov    QWORD PTR [rsp+0x18],r9
  41342c:	mov    QWORD PTR [rsp+0x10],r8
  413431:	mov    QWORD PTR [rsp+0x8],rcx
  413436:	call   424d40 <xmlStrEqual@plt+0x20e00>
  41343b:	mov    r9,QWORD PTR [rsp+0x18]
  413440:	mov    r8,QWORD PTR [rsp+0x10]
  413445:	mov    rcx,QWORD PTR [rsp+0x8]
  41344a:	mov    rdx,rax
  41344d:	mov    edi,r14d
  413450:	lea    rsi,[rip+0x37ed9]        # 44b330 <xmlStrEqual@plt+0x473f0>
  413457:	xor    eax,eax
  413459:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  41345e:	mov    rdi,QWORD PTR [r15+0x20]
  413462:	mov    edx,DWORD PTR [rdi+0x18]
  413465:	test   edx,edx
  413467:	jle    4134a0 <xmlStrEqual@plt+0xf560>
  413469:	cmp    r14d,0x4
  41346d:	jg     4134d0 <xmlStrEqual@plt+0xf590>
  41346f:	mov    rdi,QWORD PTR [r15]
  413472:	call   424d40 <xmlStrEqual@plt+0x20e00>
  413477:	mov    rdx,rax
  41347a:	mov    edi,r14d
  41347d:	lea    rsi,[rip+0x38730]        # 44bbb4 <xmlStrEqual@plt+0x47c74>
  413484:	xor    eax,eax
  413486:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  41348b:	mov    rdi,QWORD PTR [r15+0x20]
  41348f:	jmp    41338a <xmlStrEqual@plt+0xf44a>
  413494:	nop    DWORD PTR [rax+0x0]
  413498:	mov    rbx,rax
  41349b:	jmp    413350 <xmlStrEqual@plt+0xf410>
  4134a0:	cmp    r14d,0x4
  4134a4:	jg     4134f0 <xmlStrEqual@plt+0xf5b0>
  4134a6:	mov    rdi,QWORD PTR [r15]
  4134a9:	call   424d40 <xmlStrEqual@plt+0x20e00>
  4134ae:	mov    rdx,rax
  4134b1:	lea    rsi,[rip+0x38715]        # 44bbcd <xmlStrEqual@plt+0x47c8d>
  4134b8:	mov    edi,r14d
  4134bb:	xor    eax,eax
  4134bd:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  4134c2:	jmp    413399 <xmlStrEqual@plt+0xf459>
  4134c7:	nop    WORD PTR [rax+rax*1+0x0]
  4134d0:	mov    rax,0x469e3c
  4134d7:	mov    eax,DWORD PTR [rax]
  4134d9:	add    eax,0x4
  4134dc:	cmp    r14d,eax
  4134df:	jle    41346f <xmlStrEqual@plt+0xf52f>
  4134e1:	jmp    41338a <xmlStrEqual@plt+0xf44a>
  4134e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4134f0:	mov    rax,0x469e3c
  4134f7:	mov    eax,DWORD PTR [rax]
  4134f9:	add    eax,0x4
  4134fc:	cmp    r14d,eax
  4134ff:	jle    4134a6 <xmlStrEqual@plt+0xf566>
  413501:	jmp    413399 <xmlStrEqual@plt+0xf459>
  413506:	nop    WORD PTR cs:[rax+rax*1+0x0]
  413510:	mov    rax,rdx
  413513:	test   rdx,rdx
  413516:	jne    41331c <xmlStrEqual@plt+0xf3dc>
  41351c:	mov    rax,QWORD PTR [rsp+0x28]
  413521:	mov    rdx,QWORD PTR [rsp+0x40]
  413526:	cmp    rax,rdx
  413529:	je     413539 <xmlStrEqual@plt+0xf5f9>
  41352b:	mov    rax,QWORD PTR [rax-0x8]
  41352f:	mov    QWORD PTR [rsp+0x20],rax
  413534:	test   rax,rax
  413537:	jne    4135af <xmlStrEqual@plt+0xf66f>
  413539:	mov    rax,QWORD PTR [rsp+0x38]
  41353e:	mov    rax,QWORD PTR [rax+0x8]
  413542:	mov    QWORD PTR [rsp+0x38],rax
  413547:	cmp    QWORD PTR [rsp+0x48],rax
  41354c:	jne    4132c5 <xmlStrEqual@plt+0xf385>
  413552:	mov    r15d,r14d
  413555:	mov    rdi,QWORD PTR [rsp+0x48]
  41355a:	call   42e2b0 <xmlStrEqual@plt+0x2a370>
  41355f:	cmp    r15d,0x4
  413563:	jle    41357a <xmlStrEqual@plt+0xf63a>
  413565:	mov    rax,0x469e3c
  41356c:	mov    eax,DWORD PTR [rax]
  41356e:	add    eax,0x4
  413571:	cmp    r15d,eax
  413574:	jg     413153 <xmlStrEqual@plt+0xf213>
  41357a:	mov    rax,QWORD PTR [rsp+0x868]
  413582:	xor    rax,QWORD PTR fs:0x28
  41358b:	jne    4135ba <xmlStrEqual@plt+0xf67a>
  41358d:	add    rsp,0x878
  413594:	pop    rbx
  413595:	pop    rbp
  413596:	pop    r12
  413598:	pop    r13
  41359a:	pop    r14
  41359c:	mov    edi,r15d
  41359f:	lea    rsi,[rip+0x355a2]        # 448b48 <xmlStrEqual@plt+0x44c08>
  4135a6:	xor    eax,eax
  4135a8:	pop    r15
  4135aa:	jmp    430e20 <xmlStrEqual@plt+0x2cee0>
  4135af:	sub    QWORD PTR [rsp+0x28],0x8
  4135b5:	jmp    413321 <xmlStrEqual@plt+0xf3e1>
  4135ba:	call   403c00 <__stack_chk_fail@plt>
  4135bf:	nop
  4135c0:	endbr64 
  4135c4:	push   r15
  4135c6:	push   r14
  4135c8:	push   r13
  4135ca:	push   r12
  4135cc:	mov    r12,rdi
  4135cf:	push   rbp
  4135d0:	push   rbx
  4135d1:	mov    ebx,esi
  4135d3:	sub    rsp,0x848
  4135da:	mov    rax,QWORD PTR fs:0x28
  4135e3:	mov    QWORD PTR [rsp+0x838],rax
  4135eb:	xor    eax,eax
  4135ed:	cmp    esi,0x4
  4135f0:	jle    41362b <xmlStrEqual@plt+0xf6eb>
  4135f2:	mov    rax,0x469e3c
  4135f9:	mov    eax,DWORD PTR [rax]
  4135fb:	add    eax,0x4
  4135fe:	cmp    esi,eax
  413600:	jle    41362b <xmlStrEqual@plt+0xf6eb>
  413602:	mov    rax,QWORD PTR [rsp+0x838]
  41360a:	xor    rax,QWORD PTR fs:0x28
  413613:	jne    413926 <xmlStrEqual@plt+0xf9e6>
  413619:	add    rsp,0x848
  413620:	pop    rbx
  413621:	pop    rbp
  413622:	pop    r12
  413624:	pop    r13
  413626:	pop    r14
  413628:	pop    r15
  41362a:	ret    
  41362b:	lea    rsi,[rip+0x37d36]        # 44b368 <xmlStrEqual@plt+0x47428>
  413632:	mov    edi,ebx
  413634:	xor    eax,eax
  413636:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  41363b:	call   42dc90 <xmlStrEqual@plt+0x29d50>
  413640:	mov    r15,rax
  413643:	mov    QWORD PTR [rsp+0x18],rax
  413648:	mov    rax,QWORD PTR [r12+0x20]
  41364d:	mov    rsi,r15
  413650:	mov    rdi,QWORD PTR [rax]
  413653:	call   42dcf0 <xmlStrEqual@plt+0x29db0>
  413658:	mov    rax,QWORD PTR [r12+0x20]
  41365d:	mov    rsi,r15
  413660:	mov    rdi,QWORD PTR [rax+0x8]
  413664:	call   42dcf0 <xmlStrEqual@plt+0x29db0>
  413669:	mov    rsi,QWORD PTR [r12+0x20]
  41366e:	mov    rax,QWORD PTR [rsi+0x10]
  413672:	mov    rdi,QWORD PTR [rax]
  413675:	mov    edx,DWORD PTR [rdi]
  413677:	test   edx,edx
  413679:	je     4136d1 <xmlStrEqual@plt+0xf791>
  41367b:	xor    ebp,ebp
  41367d:	jmp    41368c <xmlStrEqual@plt+0xf74c>
  41367f:	mov    rax,QWORD PTR [rsi+0x10]
  413683:	inc    ebp
  413685:	mov    rdi,QWORD PTR [rax]
  413688:	cmp    DWORD PTR [rdi],ebp
  41368a:	je     4136d1 <xmlStrEqual@plt+0xf791>
  41368c:	mov    ecx,ebp
  41368e:	mov    r8,QWORD PTR [rdi+0x10]
  413692:	lea    eax,[rbp+rbp*1+0x0]
  413696:	and    eax,0x1e
  413699:	shr    ecx,0x4
  41369c:	mov    edx,eax
  41369e:	mov    eax,DWORD PTR [r8+rcx*4]
  4136a2:	shrx   eax,eax,edx
  4136a7:	test   al,0x3
  4136a9:	jne    41367f <xmlStrEqual@plt+0xf73f>
  4136ab:	mov    rdx,QWORD PTR [rdi+0x20]
  4136af:	mov    eax,ebp
  4136b1:	mov    rdi,QWORD PTR [rdx+rax*8]
  4136b5:	mov    rsi,QWORD PTR [rsp+0x18]
  4136ba:	inc    ebp
  4136bc:	call   42dcf0 <xmlStrEqual@plt+0x29db0>
  4136c1:	mov    rsi,QWORD PTR [r12+0x20]
  4136c6:	mov    rax,QWORD PTR [rsi+0x10]
  4136ca:	mov    rdi,QWORD PTR [rax]
  4136cd:	cmp    DWORD PTR [rdi],ebp
  4136cf:	jne    41368c <xmlStrEqual@plt+0xf74c>
  4136d1:	mov    rax,QWORD PTR [rsi+0x18]
  4136d5:	mov    rdi,QWORD PTR [rax]
  4136d8:	mov    eax,DWORD PTR [rdi]
  4136da:	test   eax,eax
  4136dc:	je     413734 <xmlStrEqual@plt+0xf7f4>
  4136de:	xor    ebp,ebp
  4136e0:	jmp    4136ef <xmlStrEqual@plt+0xf7af>
  4136e2:	mov    rax,QWORD PTR [rsi+0x18]
  4136e6:	inc    ebp
  4136e8:	mov    rdi,QWORD PTR [rax]
  4136eb:	cmp    DWORD PTR [rdi],ebp
  4136ed:	je     413734 <xmlStrEqual@plt+0xf7f4>
  4136ef:	mov    ecx,ebp
  4136f1:	mov    r8,QWORD PTR [rdi+0x10]
  4136f5:	lea    eax,[rbp+rbp*1+0x0]
  4136f9:	and    eax,0x1e
  4136fc:	shr    ecx,0x4
  4136ff:	mov    edx,eax
  413701:	mov    eax,DWORD PTR [r8+rcx*4]
  413705:	shrx   eax,eax,edx
  41370a:	test   al,0x3
  41370c:	jne    4136e2 <xmlStrEqual@plt+0xf7a2>
  41370e:	mov    rdx,QWORD PTR [rdi+0x20]
  413712:	mov    eax,ebp
  413714:	mov    rdi,QWORD PTR [rdx+rax*8]
  413718:	mov    rsi,QWORD PTR [rsp+0x18]
  41371d:	inc    ebp
  41371f:	call   42dcf0 <xmlStrEqual@plt+0x29db0>
  413724:	mov    rsi,QWORD PTR [r12+0x20]
  413729:	mov    rax,QWORD PTR [rsi+0x18]
  41372d:	mov    rdi,QWORD PTR [rax]
  413730:	cmp    DWORD PTR [rdi],ebp
  413732:	jne    4136ef <xmlStrEqual@plt+0xf7af>
  413734:	mov    r15,QWORD PTR [rsp+0x18]
  413739:	mov    rdi,QWORD PTR [rsi+0x20]
  41373d:	mov    rsi,r15
  413740:	call   42dcf0 <xmlStrEqual@plt+0x29db0>
  413745:	mov    rax,QWORD PTR [r12+0x20]
  41374a:	mov    rsi,r15
  41374d:	mov    rdi,QWORD PTR [rax+0x20]
  413751:	call   42dcf0 <xmlStrEqual@plt+0x29db0>
  413756:	mov    rcx,QWORD PTR [r15+0x8]
  41375a:	mov    QWORD PTR [rsp+0x8],rcx
  41375f:	cmp    r15,rcx
  413762:	je     4138c6 <xmlStrEqual@plt+0xf986>
  413768:	lea    rax,[rsp+0x20]
  41376d:	mov    QWORD PTR [rsp+0x10],rax
  413772:	lea    rax,[rsp+0x430]
  41377a:	mov    QWORD PTR [rsp],rax
  41377e:	lea    rbp,[rip+0x34ee5]        # 44866a <xmlStrEqual@plt+0x4472a>
  413785:	mov    rax,QWORD PTR [rsp+0x8]
  41378a:	mov    rax,QWORD PTR [rax+0x10]
  41378e:	mov    r15,QWORD PTR [rax]
  413791:	test   r15,r15
  413794:	je     4138ad <xmlStrEqual@plt+0xf96d>
  41379a:	mov    r12,QWORD PTR [rsp+0x10]
  41379f:	jmp    4137c9 <xmlStrEqual@plt+0xf889>
  4137a1:	nop    DWORD PTR [rax+0x0]
  4137a8:	mov    rax,QWORD PTR [r15+0x10]
  4137ac:	mov    rdx,QWORD PTR [r15+0x18]
  4137b0:	test   rax,rax
  4137b3:	je     413890 <xmlStrEqual@plt+0xf950>
  4137b9:	test   rdx,rdx
  4137bc:	je     4137c6 <xmlStrEqual@plt+0xf886>
  4137be:	mov    QWORD PTR [r12],rdx
  4137c2:	add    r12,0x8
  4137c6:	mov    r15,rax
  4137c9:	cmp    QWORD PTR [r15+0x8],0x0
  4137ce:	je     4137a8 <xmlStrEqual@plt+0xf868>
  4137d0:	mov    rax,QWORD PTR [r15+0x28]
  4137d4:	mov    r13,QWORD PTR [rax]
  4137d7:	test   r13,r13
  4137da:	je     4137a8 <xmlStrEqual@plt+0xf868>
  4137dc:	mov    r14,QWORD PTR [rsp]
  4137e0:	cmp    QWORD PTR [r13+0x8],0x0
  4137e5:	je     413805 <xmlStrEqual@plt+0xf8c5>
  4137e7:	mov    rax,QWORD PTR [r13+0x28]
  4137eb:	test   rax,rax
  4137ee:	je     413805 <xmlStrEqual@plt+0xf8c5>
  4137f0:	cmp    ebx,0x4
  4137f3:	jle    413860 <xmlStrEqual@plt+0xf920>
  4137f5:	mov    rdx,0x469e3c
  4137fc:	mov    edx,DWORD PTR [rdx]
  4137fe:	add    edx,0x4
  413801:	cmp    ebx,edx
  413803:	jle    413860 <xmlStrEqual@plt+0xf920>
  413805:	mov    rax,QWORD PTR [r13+0x10]
  413809:	mov    r13,QWORD PTR [r13+0x18]
  41380d:	test   rax,rax
  413810:	je     413838 <xmlStrEqual@plt+0xf8f8>
  413812:	test   r13,r13
  413815:	je     413880 <xmlStrEqual@plt+0xf940>
  413817:	mov    QWORD PTR [r14],r13
  41381a:	mov    r13,rax
  41381d:	add    r14,0x8
  413821:	cmp    QWORD PTR [r13+0x8],0x0
  413826:	jne    4137e7 <xmlStrEqual@plt+0xf8a7>
  413828:	mov    rax,QWORD PTR [r13+0x10]
  41382c:	mov    r13,QWORD PTR [r13+0x18]
  413830:	test   rax,rax
  413833:	jne    413812 <xmlStrEqual@plt+0xf8d2>
  413835:	nop    DWORD PTR [rax]
  413838:	test   r13,r13
  41383b:	jne    4137e0 <xmlStrEqual@plt+0xf8a0>
  41383d:	cmp    r14,QWORD PTR [rsp]
  413841:	je     4137a8 <xmlStrEqual@plt+0xf868>
  413847:	mov    r13,QWORD PTR [r14-0x8]
  41384b:	test   r13,r13
  41384e:	je     4137a8 <xmlStrEqual@plt+0xf868>
  413854:	sub    r14,0x8
  413858:	jmp    4137e0 <xmlStrEqual@plt+0xf8a0>
  41385a:	nop    WORD PTR [rax+rax*1+0x0]
  413860:	mov    rdi,QWORD PTR [rax]
  413863:	call   42b300 <xmlStrEqual@plt+0x273c0>
  413868:	mov    rdx,rax
  41386b:	mov    rsi,rbp
  41386e:	mov    edi,ebx
  413870:	xor    eax,eax
  413872:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  413877:	jmp    413805 <xmlStrEqual@plt+0xf8c5>
  413879:	nop    DWORD PTR [rax+0x0]
  413880:	mov    r13,rax
  413883:	jmp    4137e0 <xmlStrEqual@plt+0xf8a0>
  413888:	nop    DWORD PTR [rax+rax*1+0x0]
  413890:	mov    rax,rdx
  413893:	test   rdx,rdx
  413896:	jne    4137c6 <xmlStrEqual@plt+0xf886>
  41389c:	cmp    r12,QWORD PTR [rsp+0x10]
  4138a1:	je     4138ad <xmlStrEqual@plt+0xf96d>
  4138a3:	mov    r15,QWORD PTR [r12-0x8]
  4138a8:	test   r15,r15
  4138ab:	jne    41391d <xmlStrEqual@plt+0xf9dd>
  4138ad:	mov    rax,QWORD PTR [rsp+0x8]
  4138b2:	mov    rax,QWORD PTR [rax+0x8]
  4138b6:	mov    QWORD PTR [rsp+0x8],rax
  4138bb:	cmp    QWORD PTR [rsp+0x18],rax
  4138c0:	jne    413785 <xmlStrEqual@plt+0xf845>
  4138c6:	mov    rdi,QWORD PTR [rsp+0x18]
  4138cb:	call   42e2b0 <xmlStrEqual@plt+0x2a370>
  4138d0:	cmp    ebx,0x4
  4138d3:	jle    4138e9 <xmlStrEqual@plt+0xf9a9>
  4138d5:	mov    rax,0x469e3c
  4138dc:	mov    eax,DWORD PTR [rax]
  4138de:	add    eax,0x4
  4138e1:	cmp    ebx,eax
  4138e3:	jg     413602 <xmlStrEqual@plt+0xf6c2>
  4138e9:	mov    rax,QWORD PTR [rsp+0x838]
  4138f1:	xor    rax,QWORD PTR fs:0x28
  4138fa:	jne    413926 <xmlStrEqual@plt+0xf9e6>
  4138fc:	add    rsp,0x848
  413903:	mov    edi,ebx
  413905:	pop    rbx
  413906:	pop    rbp
  413907:	pop    r12
  413909:	pop    r13
  41390b:	pop    r14
  41390d:	lea    rsi,[rip+0x35234]        # 448b48 <xmlStrEqual@plt+0x44c08>
  413914:	xor    eax,eax
  413916:	pop    r15
  413918:	jmp    430e20 <xmlStrEqual@plt+0x2cee0>
  41391d:	sub    r12,0x8
  413921:	jmp    4137c9 <xmlStrEqual@plt+0xf889>
  413926:	call   403c00 <__stack_chk_fail@plt>
  41392b:	nop    DWORD PTR [rax+rax*1+0x0]
  413930:	endbr64 
  413934:	push   r15
  413936:	push   r14
  413938:	push   r13
  41393a:	push   r12
  41393c:	push   rbp
  41393d:	push   rbx
  41393e:	sub    rsp,0x1c8
  413945:	mov    QWORD PTR [rsp+0x20],rdx
  41394a:	mov    rax,QWORD PTR fs:0x28
  413953:	mov    QWORD PTR [rsp+0x1b8],rax
  41395b:	xor    eax,eax
  41395d:	mov    rax,0x469660
  413964:	cmp    QWORD PTR [rdi+0x8],rax
  413968:	jne    4142e0 <xmlStrEqual@plt+0x103a0>
  41396e:	mov    r12,rdi
  413971:	mov    rdi,rsi
  413974:	mov    r15,rsi
  413977:	call   422c30 <xmlStrEqual@plt+0x1ecf0>
  41397c:	mov    ebx,eax
  41397e:	cmp    eax,0x8
  413981:	je     4141e0 <xmlStrEqual@plt+0x102a0>
  413987:	cmp    eax,0x7
  41398a:	ja     413f50 <xmlStrEqual@plt+0x10010>
  413990:	lea    rcx,[rip+0x38371]        # 44bd08 <xmlStrEqual@plt+0x47dc8>
  413997:	mov    edx,eax
  413999:	movsxd rax,DWORD PTR [rcx+rdx*4]
  41399d:	add    rax,rcx
  4139a0:	notrack jmp rax
  4139a3:	nop    DWORD PTR [rax+rax*1+0x0]
  4139a8:	mov    QWORD PTR [rsp+0x30],0x0
  4139b1:	mov    QWORD PTR [rsp+0x40],0x0
  4139ba:	lea    rax,[rsp+0x80]
  4139c2:	vmovdqu xmm4,XMMWORD PTR [r15]
  4139c7:	vmovdqu xmm5,XMMWORD PTR [r15+0x10]
  4139cd:	vmovdqu xmm6,XMMWORD PTR [r15+0x20]
  4139d3:	vmovdqu xmm7,XMMWORD PTR [r15+0x30]
  4139d9:	mov    rdi,rax
  4139dc:	mov    QWORD PTR [rsp+0x78],0x0
  4139e5:	vmovaps XMMWORD PTR [rsp+0x80],xmm4
  4139ee:	vmovaps XMMWORD PTR [rsp+0x90],xmm5
  4139f7:	vmovaps XMMWORD PTR [rsp+0xa0],xmm6
  413a00:	vmovaps XMMWORD PTR [rsp+0xb0],xmm7
  413a09:	mov    QWORD PTR [rsp+0x18],rax
  413a0e:	call   4235e0 <xmlStrEqual@plt+0x1f6a0>
  413a13:	mov    rcx,QWORD PTR [rsp+0x40]
  413a18:	cmp    QWORD PTR [rsp+0x30],0x0
  413a1e:	cmove  rcx,QWORD PTR [rsp+0x20]
  413a24:	mov    QWORD PTR [rsp+0x58],rax
  413a29:	mov    QWORD PTR [rsp+0x40],rcx
  413a2e:	mov    QWORD PTR [rsp+0x10],0x0
  413a37:	test   BYTE PTR [rax+0x2],0x1
  413a3b:	jne    414400 <xmlStrEqual@plt+0x104c0>
  413a41:	mov    rdi,QWORD PTR [rsp+0x18]
  413a46:	call   4245e0 <xmlStrEqual@plt+0x206a0>
  413a4b:	mov    QWORD PTR [rsp+0x48],rax
  413a50:	mov    rax,QWORD PTR [rsp+0x58]
  413a55:	cmp    BYTE PTR [rax+0x3],0x0
  413a59:	je     414bc9 <xmlStrEqual@plt+0x10c89>
  413a5f:	lea    rcx,[rsp+0x78]
  413a64:	mov    DWORD PTR [rsp+0x38],0x0
  413a6c:	mov    DWORD PTR [rsp],0x0
  413a73:	mov    QWORD PTR [rsp+0x8],0x0
  413a7c:	mov    QWORD PTR [rsp+0x28],rcx
  413a81:	mov    r14,0x469e3c
  413a88:	mov    QWORD PTR [rsp+0x50],r15
  413a8d:	mov    r15,rax
  413a90:	xor    eax,eax
  413a92:	call   42aff0 <xmlStrEqual@plt+0x270b0>
  413a97:	mov    rdx,QWORD PTR [rsp+0x28]
  413a9c:	mov    rdi,QWORD PTR [rsp+0x18]
  413aa1:	mov    rsi,rax
  413aa4:	mov    rbx,rax
  413aa7:	call   423280 <xmlStrEqual@plt+0x1f340>
  413aac:	cmp    eax,0x1
  413aaf:	jne    414330 <xmlStrEqual@plt+0x103f0>
  413ab5:	mov    rsi,QWORD PTR [rbx+0x28]
  413ab9:	mov    rax,QWORD PTR [rsi+0x8]
  413abd:	cmp    rsi,rax
  413ac0:	jne    413ad1 <xmlStrEqual@plt+0xfb91>
  413ac2:	jmp    413b11 <xmlStrEqual@plt+0xfbd1>
  413ac4:	nop    DWORD PTR [rax+0x0]
  413ac8:	mov    rax,QWORD PTR [rax+0x8]
  413acc:	cmp    rsi,rax
  413acf:	je     413b11 <xmlStrEqual@plt+0xfbd1>
  413ad1:	mov    rcx,QWORD PTR [rax+0x10]
  413ad5:	mov    r9d,DWORD PTR [rcx+0x18]
  413ad9:	test   r9d,r9d
  413adc:	je     413ac8 <xmlStrEqual@plt+0xfb88>
  413ade:	mov    rdx,QWORD PTR [rcx+0x8]
  413ae2:	cmp    rcx,rdx
  413ae5:	je     413ac8 <xmlStrEqual@plt+0xfb88>
  413ae7:	nop    WORD PTR [rax+rax*1+0x0]
  413af0:	mov    rdi,QWORD PTR [rdx+0x10]
  413af4:	mov    r8d,0x1
  413afa:	mov    WORD PTR [rdi+0x8],r8w
  413aff:	mov    rdx,QWORD PTR [rdx+0x8]
  413b03:	cmp    rcx,rdx
  413b06:	jne    413af0 <xmlStrEqual@plt+0xfbb0>
  413b08:	mov    rax,QWORD PTR [rax+0x8]
  413b0c:	cmp    rsi,rax
  413b0f:	jne    413ad1 <xmlStrEqual@plt+0xfb91>
  413b11:	cmp    BYTE PTR [rbx+0x35],0x0
  413b15:	je     413f80 <xmlStrEqual@plt+0x10040>
  413b1b:	mov    rdi,rbx
  413b1e:	call   437a50 <xmlStrEqual@plt+0x33b10>
  413b23:	mov    rdi,QWORD PTR [r12+0x18]
  413b28:	mov    rsi,rbx
  413b2b:	call   432d40 <xmlStrEqual@plt+0x2ee00>
  413b30:	mov    rbp,rax
  413b33:	test   rax,rax
  413b36:	je     414040 <xmlStrEqual@plt+0x10100>
  413b3c:	cmp    QWORD PTR [rsp+0x8],0x0
  413b42:	je     414140 <xmlStrEqual@plt+0x10200>
  413b48:	mov    r13,QWORD PTR [rsp+0x8]
  413b4d:	mov    rdi,r13
  413b50:	call   403970 <strlen@plt>
  413b55:	mov    rsi,QWORD PTR [rbp+0x10]
  413b59:	mov    rdx,rax
  413b5c:	mov    rdi,r13
  413b5f:	call   4039b0 <strncmp@plt>
  413b64:	test   eax,eax
  413b66:	jne    4145e0 <xmlStrEqual@plt+0x106a0>
  413b6c:	cmp    BYTE PTR [rbp+0x9],0x1
  413b70:	je     413fa8 <xmlStrEqual@plt+0x10068>
  413b76:	mov    rdi,QWORD PTR [rbp+0x0]
  413b7a:	mov    rsi,rbx
  413b7d:	call   425310 <xmlStrEqual@plt+0x213d0>
  413b82:	test   eax,eax
  413b84:	jne    414000 <xmlStrEqual@plt+0x100c0>
  413b8a:	mov    rdi,QWORD PTR [r12+0x20]
  413b8f:	mov    rsi,rbx
  413b92:	call   432d60 <xmlStrEqual@plt+0x2ee20>
  413b97:	mov    r13,rax
  413b9a:	test   rax,rax
  413b9d:	je     414070 <xmlStrEqual@plt+0x10130>
  413ba3:	mov    rdi,QWORD PTR [rax]
  413ba6:	mov    rsi,rbx
  413ba9:	call   42b150 <xmlStrEqual@plt+0x27210>
  413bae:	test   eax,eax
  413bb0:	je     413bfa <xmlStrEqual@plt+0xfcba>
  413bb2:	cmp    BYTE PTR [rbp+0x18],0x0
  413bb6:	jne    4142b8 <xmlStrEqual@plt+0x10378>
  413bbc:	cmp    DWORD PTR [r14],0x2
  413bc0:	jle    413be0 <xmlStrEqual@plt+0xfca0>
  413bc2:	mov    rdi,rbx
  413bc5:	call   424d40 <xmlStrEqual@plt+0x20e00>
  413bca:	mov    rdx,rax
  413bcd:	lea    rsi,[rip+0x37be4]        # 44b7b8 <xmlStrEqual@plt+0x47878>
  413bd4:	mov    edi,0x7
  413bd9:	xor    eax,eax
  413bdb:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  413be0:	mov    rsi,QWORD PTR [rbx+0x28]
  413be4:	mov    rdi,QWORD PTR [r13+0x0]
  413be8:	call   42b490 <xmlStrEqual@plt+0x27550>
  413bed:	mov    esi,0x7
  413bf2:	mov    rdi,r12
  413bf5:	call   4135c0 <xmlStrEqual@plt+0xf680>
  413bfa:	movzx  eax,BYTE PTR [r15]
  413bfe:	mov    edx,0xb
  413c03:	shr    al,0x3
  413c06:	and    eax,0x1
  413c09:	mov    BYTE PTR [r13+0x8],al
  413c0d:	mov    rax,0x475858
  413c14:	mov    rsi,r13
  413c17:	mov    rdi,QWORD PTR [rax]
  413c1a:	call   43b840 <xmlStrEqual@plt+0x37900>
  413c1f:	mov    edx,DWORD PTR [rax+0x18]
  413c22:	mov    rcx,rax
  413c25:	cmp    edx,0x1
  413c28:	je     414190 <xmlStrEqual@plt+0x10250>
  413c2e:	mov    eax,DWORD PTR [r14]
  413c31:	test   eax,eax
  413c33:	jle    413c52 <xmlStrEqual@plt+0xfd12>
  413c35:	lea    rsi,[rip+0x37bac]        # 44b7e8 <xmlStrEqual@plt+0x478a8>
  413c3c:	mov    edi,0x5
  413c41:	xor    eax,eax
  413c43:	mov    QWORD PTR [rsp+0x60],rcx
  413c48:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  413c4d:	mov    rcx,QWORD PTR [rsp+0x60]
  413c52:	mov    rdi,rcx
  413c55:	call   42e2b0 <xmlStrEqual@plt+0x2a370>
  413c5a:	cmp    QWORD PTR [rsp+0x10],0x0
  413c60:	je     413c80 <xmlStrEqual@plt+0xfd40>
  413c62:	mov    rdi,QWORD PTR [rsp+0x10]
  413c67:	xor    edx,edx
  413c69:	mov    rsi,rbx
  413c6c:	call   423740 <xmlStrEqual@plt+0x1f800>
  413c71:	mov    DWORD PTR [rsp+0x38],0x1
  413c79:	nop    DWORD PTR [rax+0x0]
  413c80:	mov    rdi,rbx
  413c83:	call   42b110 <xmlStrEqual@plt+0x271d0>
  413c88:	xor    ebx,ebx
  413c8a:	inc    DWORD PTR [rsp]
  413c8d:	movzx  eax,BYTE PTR [r15+0x3]
  413c92:	mov    ecx,DWORD PTR [rsp]
  413c95:	cmp    ecx,eax
  413c97:	jl     413a90 <xmlStrEqual@plt+0xfb50>
  413c9d:	mov    rax,QWORD PTR [rsp+0x58]
  413ca2:	test   BYTE PTR [rax],0x2
  413ca5:	jne    414540 <xmlStrEqual@plt+0x10600>
  413cab:	cmp    QWORD PTR [rsp+0x10],0x0
  413cb1:	je     414ab6 <xmlStrEqual@plt+0x10b76>
  413cb7:	cmp    QWORD PTR [rsp+0x8],0x0
  413cbd:	je     414940 <xmlStrEqual@plt+0x10a00>
  413cc3:	mov    r11d,DWORD PTR [rsp+0x38]
  413cc8:	test   r11d,r11d
  413ccb:	je     414940 <xmlStrEqual@plt+0x10a00>
  413cd1:	mov    rax,QWORD PTR [rsp+0x10]
  413cd6:	movzx  r13d,WORD PTR [rax+0x24]
  413cdb:	cmp    r13w,0xffff
  413ce0:	je     404003 <xmlStrEqual@plt+0xc3>
  413ce6:	mov    rdx,QWORD PTR [rsp+0x58]
  413ceb:	add    r13,QWORD PTR [rax+0x30]
  413cef:	movzx  ecx,BYTE PTR [rdx]
  413cf2:	mov    rax,QWORD PTR [rdx+0x4]
  413cf6:	mov    QWORD PTR [r13+0x4],rax
  413cfa:	lea    eax,[rcx*4+0x0]
  413d01:	and    eax,0x8
  413d04:	mov    edx,eax
  413d06:	movzx  eax,BYTE PTR [r13+0x0]
  413d0b:	and    eax,0xfffffff7
  413d0e:	or     eax,edx
  413d10:	cmp    QWORD PTR [rsp+0x30],0x0
  413d16:	mov    BYTE PTR [r13+0x0],al
  413d1a:	jne    413d2f <xmlStrEqual@plt+0xfdef>
  413d1c:	and    ecx,0x1
  413d1f:	lea    edx,[rcx*4+0x0]
  413d26:	and    eax,0xfffffffb
  413d29:	or     eax,edx
  413d2b:	mov    BYTE PTR [r13+0x0],al
  413d2f:	mov    rcx,QWORD PTR [rsp+0x8]
  413d34:	mov    rdi,QWORD PTR [rsp+0x10]
  413d39:	lea    rsi,[r13+0xc]
  413d3d:	mov    edx,0x1
  413d42:	call   424260 <xmlStrEqual@plt+0x20320>
  413d47:	mov    rax,QWORD PTR [rsp+0x58]
  413d4c:	test   BYTE PTR [rax],0x2
  413d4f:	je     413db0 <xmlStrEqual@plt+0xfe70>
  413d51:	cmp    QWORD PTR [r12+0x40],0x0
  413d57:	je     413db0 <xmlStrEqual@plt+0xfe70>
  413d59:	mov    rax,QWORD PTR [rsp+0x40]
  413d5e:	lea    rbp,[rax+0x20]
  413d62:	mov    rdi,rbp
  413d65:	call   424d40 <xmlStrEqual@plt+0x20e00>
  413d6a:	mov    rdi,QWORD PTR [r12+0x38]
  413d6f:	mov    rsi,rax
  413d72:	call   43aca0 <xmlStrEqual@plt+0x36d60>
  413d77:	mov    r14,rax
  413d7a:	test   rax,rax
  413d7d:	je     414d8f <xmlStrEqual@plt+0x10e4f>
  413d83:	cmp    QWORD PTR [rax+0x18],0x0
  413d88:	je     413db0 <xmlStrEqual@plt+0xfe70>
  413d8a:	mov    rax,QWORD PTR [rsp+0x30]
  413d8f:	test   rax,rax
  413d92:	je     413d9e <xmlStrEqual@plt+0xfe5e>
  413d94:	test   BYTE PTR [rax+0x1],0x20
  413d98:	jne    414ea7 <xmlStrEqual@plt+0x10f67>
  413d9e:	test   BYTE PTR [r13+0x0],0x4
  413da3:	jne    414e7d <xmlStrEqual@plt+0x10f3d>
  413da9:	nop    DWORD PTR [rax+0x0]
  413db0:	mov    r14,0x469e3c
  413db7:	mov    r9d,DWORD PTR [r14]
  413dba:	test   r9d,r9d
  413dbd:	jle    413e17 <xmlStrEqual@plt+0xfed7>
  413dbf:	mov    rbx,QWORD PTR [rsp+0x40]
  413dc4:	lea    rdi,[rbx+0x20]
  413dc8:	movzx  r15d,WORD PTR [rbx+0x42]
  413dcd:	movzx  r13d,WORD PTR [rbx+0x40]
  413dd2:	call   424d40 <xmlStrEqual@plt+0x20e00>
  413dd7:	mov    rdi,rbx
  413dda:	mov    rbp,rax
  413ddd:	call   424d40 <xmlStrEqual@plt+0x20e00>
  413de2:	mov    rdi,QWORD PTR [rsp+0x10]
  413de7:	mov    rbx,rax
  413dea:	call   423f50 <xmlStrEqual@plt+0x20010>
  413def:	sub    rsp,0x8
  413df3:	push   r15
  413df5:	mov    r8,rbp
  413df8:	mov    rdx,rax
  413dfb:	mov    edi,0x5
  413e00:	mov    r9d,r13d
  413e03:	mov    rcx,rbx
  413e06:	lea    rsi,[rip+0x37ac3]        # 44b8d0 <xmlStrEqual@plt+0x47990>
  413e0d:	xor    eax,eax
  413e0f:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  413e14:	pop    rdi
  413e15:	pop    r8
  413e17:	mov    rbx,QWORD PTR [rsp+0x10]
  413e1c:	mov    rdx,QWORD PTR [rsp+0x40]
  413e21:	mov    rdi,r12
  413e24:	mov    rsi,rbx
  413e27:	call   4089b0 <xmlStrEqual@plt+0x4a70>
  413e2c:	mov    rdi,rbx
  413e2f:	call   430820 <xmlStrEqual@plt+0x2c8e0>
  413e34:	cmp    DWORD PTR [r14],0x2
  413e38:	mov    ebx,0x1
  413e3d:	jle    413ed2 <xmlStrEqual@plt+0xff92>
  413e43:	lea    rsi,[rip+0x37c66]        # 44bab0 <xmlStrEqual@plt+0x47b70>
  413e4a:	mov    edi,0x7
  413e4f:	xor    eax,eax
  413e51:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  413e56:	jmp    413ed2 <xmlStrEqual@plt+0xff92>
  413e58:	nop    DWORD PTR [rax+rax*1+0x0]
  413e60:	vmovdqu xmm0,XMMWORD PTR [r15]
  413e65:	vmovdqu xmm1,XMMWORD PTR [r15+0x10]
  413e6b:	vmovdqu xmm2,XMMWORD PTR [r15+0x20]
  413e71:	vmovdqu xmm3,XMMWORD PTR [r15+0x30]
  413e77:	lea    r13,[rsp+0x80]
  413e7f:	mov    rdi,r13
  413e82:	vmovaps XMMWORD PTR [rsp+0x80],xmm0
  413e8b:	vmovaps XMMWORD PTR [rsp+0x90],xmm1
  413e94:	vmovaps XMMWORD PTR [rsp+0xa0],xmm2
  413e9d:	vmovaps XMMWORD PTR [rsp+0xb0],xmm3
  413ea6:	call   4235e0 <xmlStrEqual@plt+0x1f6a0>
  413eab:	mov    rbx,rax
  413eae:	test   BYTE PTR [rax],0x8
  413eb1:	je     414360 <xmlStrEqual@plt+0x10420>
  413eb7:	mov    rbx,0x469e3c
  413ebe:	mov    esi,DWORD PTR [rbx]
  413ec0:	test   esi,esi
  413ec2:	jg     414520 <xmlStrEqual@plt+0x105e0>
  413ec8:	nop    DWORD PTR [rax+rax*1+0x0]
  413ed0:	xor    ebx,ebx
  413ed2:	mov    rcx,QWORD PTR [rsp+0x1b8]
  413eda:	xor    rcx,QWORD PTR fs:0x28
  413ee3:	mov    eax,ebx
  413ee5:	jne    4150f8 <xmlStrEqual@plt+0x111b8>
  413eeb:	add    rsp,0x1c8
  413ef2:	pop    rbx
  413ef3:	pop    rbp
  413ef4:	pop    r12
  413ef6:	pop    r13
  413ef8:	pop    r14
  413efa:	pop    r15
  413efc:	ret    
  413efd:	nop    DWORD PTR [rax]
  413f00:	mov    r14,0x469e3c
  413f07:	mov    eax,DWORD PTR [r14]
  413f0a:	cmp    eax,0x2
  413f0d:	jle    413f30 <xmlStrEqual@plt+0xfff0>
  413f0f:	xor    eax,eax
  413f11:	mov    edx,ebx
  413f13:	lea    rsi,[rip+0x379d6]        # 44b8f0 <xmlStrEqual@plt+0x479b0>
  413f1a:	mov    edi,0x7
  413f1f:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  413f24:	mov    eax,DWORD PTR [r14]
  413f27:	nop    WORD PTR [rax+rax*1+0x0]
  413f30:	test   eax,eax
  413f32:	jle    413ed0 <xmlStrEqual@plt+0xff90>
  413f34:	lea    rsi,[rip+0x37b45]        # 44ba80 <xmlStrEqual@plt+0x47b40>
  413f3b:	mov    edi,0x5
  413f40:	xor    eax,eax
  413f42:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  413f47:	xor    ebx,ebx
  413f49:	jmp    413ed2 <xmlStrEqual@plt+0xff92>
  413f4b:	nop    DWORD PTR [rax+rax*1+0x0]
  413f50:	mov    r14,0x469e3c
  413f57:	mov    eax,DWORD PTR [r14]
  413f5a:	cmp    eax,0x2
  413f5d:	jle    413f30 <xmlStrEqual@plt+0xfff0>
  413f5f:	mov    edx,ebx
  413f61:	lea    rsi,[rip+0x37ad8]        # 44ba40 <xmlStrEqual@plt+0x47b00>
  413f68:	mov    edi,0x7
  413f6d:	xor    eax,eax
  413f6f:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  413f74:	mov    eax,DWORD PTR [r14]
  413f77:	jmp    413f30 <xmlStrEqual@plt+0xfff0>
  413f79:	nop    DWORD PTR [rax+0x0]
  413f80:	mov    rdi,rbx
  413f83:	call   424d40 <xmlStrEqual@plt+0x20e00>
  413f88:	mov    rdx,rax
  413f8b:	lea    rsi,[rip+0x37636]        # 44b5c8 <xmlStrEqual@plt+0x47688>
  413f92:	mov    edi,0x3
  413f97:	xor    eax,eax
  413f99:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  413f9e:	jmp    413b1b <xmlStrEqual@plt+0xfbdb>
  413fa3:	nop    DWORD PTR [rax+rax*1+0x0]
  413fa8:	mov    rdi,rbx
  413fab:	call   425670 <xmlStrEqual@plt+0x21730>
  413fb0:	mov    rdi,QWORD PTR [rbp+0x0]
  413fb4:	mov    r13,rax
  413fb7:	call   425670 <xmlStrEqual@plt+0x21730>
  413fbc:	mov    rdi,rax
  413fbf:	mov    rsi,r13
  413fc2:	call   437920 <xmlStrEqual@plt+0x339e0>
  413fc7:	test   eax,eax
  413fc9:	jne    413b8a <xmlStrEqual@plt+0xfc4a>
  413fcf:	mov    eax,DWORD PTR [r14]
  413fd2:	test   eax,eax
  413fd4:	jle    413c80 <xmlStrEqual@plt+0xfd40>
  413fda:	mov    rdi,rbx
  413fdd:	call   424d40 <xmlStrEqual@plt+0x20e00>
  413fe2:	mov    rdx,rax
  413fe5:	lea    rsi,[rip+0x37734]        # 44b720 <xmlStrEqual@plt+0x477e0>
  413fec:	mov    edi,0x5
  413ff1:	xor    eax,eax
  413ff3:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  413ff8:	jmp    413c80 <xmlStrEqual@plt+0xfd40>
  413ffd:	nop    DWORD PTR [rax]
  414000:	mov    eax,DWORD PTR [r14]
  414003:	test   eax,eax
  414005:	jle    413c80 <xmlStrEqual@plt+0xfd40>
  41400b:	mov    rdi,QWORD PTR [rbp+0x0]
  41400f:	call   424d40 <xmlStrEqual@plt+0x20e00>
  414014:	mov    rdi,rbx
  414017:	mov    rbp,rax
  41401a:	call   424d40 <xmlStrEqual@plt+0x20e00>
  41401f:	mov    rdx,rax
  414022:	mov    rcx,rbp
  414025:	lea    rsi,[rip+0x37734]        # 44b760 <xmlStrEqual@plt+0x47820>
  41402c:	mov    edi,0x5
  414031:	xor    eax,eax
  414033:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  414038:	jmp    413c80 <xmlStrEqual@plt+0xfd40>
  41403d:	nop    DWORD PTR [rax]
  414040:	mov    eax,DWORD PTR [r14]
  414043:	test   eax,eax
  414045:	jle    413c80 <xmlStrEqual@plt+0xfd40>
  41404b:	mov    rdi,rbx
  41404e:	call   424d40 <xmlStrEqual@plt+0x20e00>
  414053:	mov    rdx,rax
  414056:	lea    rsi,[rip+0x375c3]        # 44b620 <xmlStrEqual@plt+0x476e0>
  41405d:	mov    edi,0x5
  414062:	xor    eax,eax
  414064:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  414069:	jmp    413c80 <xmlStrEqual@plt+0xfd40>
  41406e:	xchg   ax,ax
  414070:	mov    edi,0x10
  414075:	call   434fe0 <xmlStrEqual@plt+0x310a0>
  41407a:	mov    QWORD PTR [rax],rbx
  41407d:	mov    rdi,QWORD PTR [r12+0x20]
  414082:	mov    rbp,rax
  414085:	mov    rdx,rax
  414088:	mov    rsi,rbx
  41408b:	call   4321e0 <xmlStrEqual@plt+0x2e2a0>
  414090:	xor    r8d,r8d
  414093:	mov    rcx,rbp
  414096:	lea    rdx,[rip+0x1123]        # 4151c0 <xmlStrEqual@plt+0x11280>
  41409d:	mov    rsi,r12
  4140a0:	mov    edi,0xb
  4140a5:	call   43b710 <xmlStrEqual@plt+0x377d0>
  4140aa:	mov    rdx,rax
  4140ad:	mov    r13,rax
  4140b0:	mov    rax,0x475858
  4140b7:	mov    rsi,rbp
  4140ba:	mov    rdi,QWORD PTR [rax]
  4140bd:	call   43b7c0 <xmlStrEqual@plt+0x37880>
  4140c2:	mov    esi,0xb6
  4140c7:	mov    rdi,r13
  4140ca:	call   43b470 <xmlStrEqual@plt+0x37530>
  4140cf:	cmp    DWORD PTR [r14],0x1
  4140d3:	jle    4140f9 <xmlStrEqual@plt+0x101b9>
  4140d5:	mov    rdi,QWORD PTR [rbp+0x0]
  4140d9:	call   424d40 <xmlStrEqual@plt+0x20e00>
  4140de:	mov    rdx,rax
  4140e1:	mov    ecx,0xb4
  4140e6:	lea    rsi,[rip+0x37753]        # 44b840 <xmlStrEqual@plt+0x47900>
  4140ed:	mov    edi,0x6
  4140f2:	xor    eax,eax
  4140f4:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  4140f9:	movzx  eax,BYTE PTR [r15]
  4140fd:	mov    esi,0x7
  414102:	shr    al,0x3
  414105:	and    eax,0x1
  414108:	mov    BYTE PTR [rbp+0x8],al
  41410b:	mov    rdi,r12
  41410e:	call   4135c0 <xmlStrEqual@plt+0xf680>
  414113:	cmp    QWORD PTR [rsp+0x10],0x0
  414119:	je     413c8a <xmlStrEqual@plt+0xfd4a>
  41411f:	mov    rdi,QWORD PTR [rsp+0x10]
  414124:	xor    edx,edx
  414126:	mov    rsi,rbx
  414129:	call   423740 <xmlStrEqual@plt+0x1f800>
  41412e:	mov    DWORD PTR [rsp+0x38],0x1
  414136:	jmp    413c8a <xmlStrEqual@plt+0xfd4a>
  41413b:	nop    DWORD PTR [rax+rax*1+0x0]
  414140:	mov    rdx,QWORD PTR [rax+0x10]
  414144:	mov    rsi,QWORD PTR [rsp+0x48]
  414149:	mov    rdi,QWORD PTR [rsp+0x50]
  41414e:	call   424360 <xmlStrEqual@plt+0x20420>
  414153:	cmp    eax,0x1
  414156:	jne    4142fa <xmlStrEqual@plt+0x103ba>
  41415c:	cmp    DWORD PTR [r14],0x1
  414160:	jle    414180 <xmlStrEqual@plt+0x10240>
  414162:	mov    rdi,rbx
  414165:	call   424d40 <xmlStrEqual@plt+0x20e00>
  41416a:	mov    rdx,rax
  41416d:	lea    rsi,[rip+0x37534]        # 44b6a8 <xmlStrEqual@plt+0x47768>
  414174:	mov    edi,0x6
  414179:	xor    eax,eax
  41417b:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  414180:	mov    rax,QWORD PTR [rbp+0x10]
  414184:	mov    QWORD PTR [rsp+0x8],rax
  414189:	jmp    413b6c <xmlStrEqual@plt+0xfc2c>
  41418e:	xchg   ax,ax
  414190:	mov    rax,QWORD PTR [rax+0x8]
  414194:	mov    rdi,rcx
  414197:	mov    rbp,QWORD PTR [rax+0x10]
  41419b:	call   42e2b0 <xmlStrEqual@plt+0x2a370>
  4141a0:	mov    esi,0xb6
  4141a5:	mov    rdi,rbp
  4141a8:	call   43b470 <xmlStrEqual@plt+0x37530>
  4141ad:	cmp    DWORD PTR [r14],0x1
  4141b1:	jle    413c5a <xmlStrEqual@plt+0xfd1a>
  4141b7:	mov    rdi,QWORD PTR [r13+0x0]
  4141bb:	call   424d40 <xmlStrEqual@plt+0x20e00>
  4141c0:	mov    rdx,rax
  4141c3:	mov    ecx,0xb4
  4141c8:	lea    rsi,[rip+0x37671]        # 44b840 <xmlStrEqual@plt+0x47900>
  4141cf:	mov    edi,0x6
  4141d4:	xor    eax,eax
  4141d6:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  4141db:	jmp    413c5a <xmlStrEqual@plt+0xfd1a>
  4141e0:	mov    rdi,r15
  4141e3:	call   422ca0 <xmlStrEqual@plt+0x1ed60>
  4141e8:	mov    rdi,r15
  4141eb:	test   BYTE PTR [rax],0x8
  4141ee:	jne    4143c0 <xmlStrEqual@plt+0x10480>
  4141f4:	call   422ce0 <xmlStrEqual@plt+0x1eda0>
  4141f9:	cmp    eax,0x1
  4141fc:	jne    413ed0 <xmlStrEqual@plt+0xff90>
  414202:	lea    r8,[rsp+0x160]
  41420a:	mov    rsi,r8
  41420d:	mov    rdi,r15
  414210:	mov    rbx,r8
  414213:	mov    QWORD PTR [rsp+0x28],r8
  414218:	call   4366e0 <xmlStrEqual@plt+0x327a0>
  41421d:	lea    rax,[rsp+0xc0]
  414225:	movzx  edx,WORD PTR [rsp+0x1a0]
  41422d:	movzx  esi,WORD PTR [rsp+0x1a2]
  414235:	mov    r8,rbx
  414238:	lea    rcx,[rbx+0x20]
  41423c:	mov    rdi,rax
  41423f:	mov    QWORD PTR [rsp+0x10],rax
  414244:	call   439130 <xmlStrEqual@plt+0x351f0>
  414249:	movzx  eax,WORD PTR [r15+0x1e]
  41424e:	cmp    ax,0xffff
  414252:	je     41498c <xmlStrEqual@plt+0x10a4c>
  414258:	add    rax,QWORD PTR [r15+0x30]
  41425c:	mov    QWORD PTR [rsp+0x30],rax
  414261:	mov    rdi,r15
  414264:	call   422c30 <xmlStrEqual@plt+0x1ecf0>
  414269:	mov    r14,0x469e3c
  414270:	mov    ebx,eax
  414272:	mov    eax,DWORD PTR [r14]
  414275:	test   eax,eax
  414277:	jle    414297 <xmlStrEqual@plt+0x10357>
  414279:	mov    rdi,r15
  41427c:	call   423f50 <xmlStrEqual@plt+0x20010>
  414281:	mov    rdx,rax
  414284:	lea    rsi,[rip+0x3711d]        # 44b3a8 <xmlStrEqual@plt+0x47468>
  41428b:	mov    edi,0x5
  414290:	xor    eax,eax
  414292:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  414297:	cmp    ebx,0x7
  41429a:	ja     413f57 <xmlStrEqual@plt+0x10017>
  4142a0:	lea    rcx,[rip+0x37a81]        # 44bd28 <xmlStrEqual@plt+0x47de8>
  4142a7:	mov    edx,ebx
  4142a9:	movsxd rax,DWORD PTR [rcx+rdx*4]
  4142ad:	add    rax,rcx
  4142b0:	notrack jmp rax
  4142b3:	nop    DWORD PTR [rax+rax*1+0x0]
  4142b8:	mov    rdi,rbx
  4142bb:	call   424d40 <xmlStrEqual@plt+0x20e00>
  4142c0:	mov    rdx,rax
  4142c3:	lea    rsi,[rip+0x379af]        # 44bc79 <xmlStrEqual@plt+0x47d39>
  4142ca:	mov    edi,0x3
  4142cf:	xor    eax,eax
  4142d1:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  4142d6:	jmp    413bed <xmlStrEqual@plt+0xfcad>
  4142db:	nop    DWORD PTR [rax+rax*1+0x0]
  4142e0:	lea    rdx,[rip+0x36fb9]        # 44b2a0 <xmlStrEqual@plt+0x47360>
  4142e7:	lea    rsi,[rip+0x37a5a]        # 44bd48 <xmlStrEqual@plt+0x47e08>
  4142ee:	lea    rdi,[rip+0x3788e]        # 44bb83 <xmlStrEqual@plt+0x47c43>
  4142f5:	call   4350f0 <xmlStrEqual@plt+0x311b0>
  4142fa:	mov    eax,DWORD PTR [r14]
  4142fd:	test   eax,eax
  4142ff:	jle    414330 <xmlStrEqual@plt+0x103f0>
  414301:	mov    rbp,QWORD PTR [rbp+0x10]
  414305:	mov    rdi,rbx
  414308:	call   424d40 <xmlStrEqual@plt+0x20e00>
  41430d:	mov    rdx,rax
  414310:	mov    rcx,rbp
  414313:	lea    rsi,[rip+0x37346]        # 44b660 <xmlStrEqual@plt+0x47720>
  41431a:	mov    edi,0x5
  41431f:	xor    eax,eax
  414321:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  414326:	nop    WORD PTR cs:[rax+rax*1+0x0]
  414330:	mov    rdi,rbx
  414333:	call   42b110 <xmlStrEqual@plt+0x271d0>
  414338:	cmp    QWORD PTR [rsp+0x10],0x0
  41433e:	je     413f74 <xmlStrEqual@plt+0x10034>
  414344:	mov    rdi,QWORD PTR [rsp+0x10]
  414349:	call   430820 <xmlStrEqual@plt+0x2c8e0>
  41434e:	mov    eax,DWORD PTR [r14]
  414351:	jmp    413f30 <xmlStrEqual@plt+0xfff0>
  414356:	nop    WORD PTR cs:[rax+rax*1+0x0]
  414360:	mov    rdi,r13
  414363:	call   4245e0 <xmlStrEqual@plt+0x206a0>
  414368:	mov    r14,rax
  41436b:	xor    eax,eax
  41436d:	call   424be0 <xmlStrEqual@plt+0x20ca0>
  414372:	mov    rsi,rax
  414375:	lea    rdx,[rsp+0x78]
  41437a:	mov    rdi,r13
  41437d:	mov    rbp,rax
  414380:	call   423540 <xmlStrEqual@plt+0x1f600>
  414385:	cmp    eax,0x1
  414388:	je     414610 <xmlStrEqual@plt+0x106d0>
  41438e:	mov    r14,0x469e3c
  414395:	xor    r15d,r15d
  414398:	xor    r13d,r13d
  41439b:	mov    rdi,r15
  41439e:	call   42e2b0 <xmlStrEqual@plt+0x2a370>
  4143a3:	mov    rdi,rbp
  4143a6:	call   424bf0 <xmlStrEqual@plt+0x20cb0>
  4143ab:	mov    rdi,r13
  4143ae:	call   424bf0 <xmlStrEqual@plt+0x20cb0>
  4143b3:	mov    eax,DWORD PTR [r14]
  4143b6:	jmp    413f30 <xmlStrEqual@plt+0xfff0>
  4143bb:	nop    DWORD PTR [rax+rax*1+0x0]
  4143c0:	call   424180 <xmlStrEqual@plt+0x20240>
  4143c5:	mov    rax,0x469e3c
  4143cc:	cmp    DWORD PTR [rax],0x1
  4143cf:	jle    413ed0 <xmlStrEqual@plt+0xff90>
  4143d5:	mov    rdi,r15
  4143d8:	call   424180 <xmlStrEqual@plt+0x20240>
  4143dd:	mov    edx,eax
  4143df:	lea    rsi,[rip+0x36222]        # 44a608 <xmlStrEqual@plt+0x466c8>
  4143e6:	mov    edi,0x6
  4143eb:	xor    eax,eax
  4143ed:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  4143f2:	jmp    413ed0 <xmlStrEqual@plt+0xff90>
  4143f7:	nop    WORD PTR [rax+rax*1+0x0]
  414400:	mov    edi,0x4
  414405:	xor    eax,eax
  414407:	call   423cc0 <xmlStrEqual@plt+0x1fd80>
  41440c:	mov    rdi,rax
  41440f:	mov    esi,0x1
  414414:	mov    QWORD PTR [rsp+0x10],rax
  414419:	call   4244e0 <xmlStrEqual@plt+0x205a0>
  41441e:	jmp    413a41 <xmlStrEqual@plt+0xfb01>
  414423:	nop    DWORD PTR [rax+rax*1+0x0]
  414428:	mov    r14,0x469e3c
  41442f:	mov    eax,DWORD PTR [r14]
  414432:	test   eax,eax
  414434:	jle    413ed0 <xmlStrEqual@plt+0xff90>
  41443a:	xor    eax,eax
  41443c:	lea    rsi,[rip+0x36f8d]        # 44b3d0 <xmlStrEqual@plt+0x47490>
  414443:	mov    edi,0x5
  414448:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  41444d:	mov    eax,DWORD PTR [r14]
  414450:	jmp    413f30 <xmlStrEqual@plt+0xfff0>
  414455:	nop    DWORD PTR [rax]
  414458:	cmp    QWORD PTR [rsp+0x30],0x0
  41445e:	je     41442f <xmlStrEqual@plt+0x104ef>
  414460:	mov    rax,QWORD PTR [rsp+0x30]
  414465:	vmovdqu xmm4,XMMWORD PTR [r15]
  41446a:	vmovdqu xmm5,XMMWORD PTR [r15+0x10]
  414470:	vmovdqu xmm6,XMMWORD PTR [r15+0x20]
  414476:	vmovdqu xmm7,XMMWORD PTR [r15+0x30]
  41447c:	movzx  ebx,BYTE PTR [rax]
  41447f:	xor    eax,eax
  414481:	vmovaps XMMWORD PTR [rsp+0x80],xmm4
  41448a:	vmovaps XMMWORD PTR [rsp+0x90],xmm5
  414493:	vmovaps XMMWORD PTR [rsp+0xa0],xmm6
  41449c:	vmovaps XMMWORD PTR [rsp+0xb0],xmm7
  4144a5:	call   424be0 <xmlStrEqual@plt+0x20ca0>
  4144aa:	lea    rcx,[rsp+0x80]
  4144b2:	mov    rdi,rcx
  4144b5:	mov    r13,rcx
  4144b8:	mov    QWORD PTR [rsp],rax
  4144bc:	mov    QWORD PTR [rsp+0x18],rcx
  4144c1:	call   4235e0 <xmlStrEqual@plt+0x1f6a0>
  4144c6:	mov    rsi,QWORD PTR [rsp]
  4144ca:	shr    bl,0x2
  4144cd:	mov    rdi,r13
  4144d0:	and    ebx,0x1
  4144d3:	mov    rbp,rax
  4144d6:	call   422eb0 <xmlStrEqual@plt+0x1ef70>
  4144db:	cmp    eax,0x1
  4144de:	jne    4145b8 <xmlStrEqual@plt+0x10678>
  4144e4:	movzx  eax,BYTE PTR [rbp+0x0]
  4144e8:	test   al,0x2
  4144ea:	jne    414688 <xmlStrEqual@plt+0x10748>
  4144f0:	test   al,0x1
  4144f2:	je     4146b0 <xmlStrEqual@plt+0x10770>
  4144f8:	mov    eax,DWORD PTR [r14]
  4144fb:	cmp    eax,0x1
  4144fe:	jle    413f30 <xmlStrEqual@plt+0xfff0>
  414504:	xor    eax,eax
  414506:	lea    rsi,[rip+0x376f5]        # 44bc02 <xmlStrEqual@plt+0x47cc2>
  41450d:	mov    edi,0x6
  414512:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  414517:	mov    eax,DWORD PTR [r14]
  41451a:	jmp    413f30 <xmlStrEqual@plt+0xfff0>
  41451f:	nop
  414520:	xor    eax,eax
  414522:	lea    rsi,[rip+0x37407]        # 44b930 <xmlStrEqual@plt+0x479f0>
  414529:	mov    edi,0x5
  41452e:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  414533:	mov    eax,DWORD PTR [rbx]
  414535:	jmp    413f30 <xmlStrEqual@plt+0xfff0>
  41453a:	nop    WORD PTR [rax+rax*1+0x0]
  414540:	lea    rax,[rsp+0x160]
  414548:	lea    rbp,[rsp+0x70]
  41454d:	mov    rdi,QWORD PTR [rsp+0x18]
  414552:	mov    rdx,rbp
  414555:	mov    rsi,rax
  414558:	mov    QWORD PTR [rsp+0x28],rax
  41455d:	call   423580 <xmlStrEqual@plt+0x1f640>
  414562:	mov    r14,0x469e3c
  414569:	mov    r13d,DWORD PTR [r14]
  41456c:	test   r13d,r13d
  41456f:	jle    414591 <xmlStrEqual@plt+0x10651>
  414571:	mov    rdi,QWORD PTR [rsp+0x28]
  414576:	call   43bc20 <xmlStrEqual@plt+0x37ce0>
  41457b:	mov    rdx,rax
  41457e:	lea    rsi,[rip+0x37712]        # 44bc97 <xmlStrEqual@plt+0x47d57>
  414585:	mov    edi,0x5
  41458a:	xor    eax,eax
  41458c:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  414591:	mov    rdi,QWORD PTR [rsp+0x10]
  414596:	test   rdi,rdi
  414599:	je     413e34 <xmlStrEqual@plt+0xfef4>
  41459f:	mov    rsi,QWORD PTR [rsp+0x28]
  4145a4:	mov    rdx,rbp
  4145a7:	call   423c20 <xmlStrEqual@plt+0x1fce0>
  4145ac:	jmp    413cb7 <xmlStrEqual@plt+0xfd77>
  4145b1:	nop    DWORD PTR [rax+0x0]
  4145b8:	xor    edi,edi
  4145ba:	call   42e2b0 <xmlStrEqual@plt+0x2a370>
  4145bf:	xor    r13d,r13d
  4145c2:	mov    rdi,r13
  4145c5:	call   424bf0 <xmlStrEqual@plt+0x20cb0>
  4145ca:	mov    rdi,QWORD PTR [rsp]
  4145ce:	call   424bf0 <xmlStrEqual@plt+0x20cb0>
  4145d3:	mov    eax,DWORD PTR [r14]
  4145d6:	jmp    413f30 <xmlStrEqual@plt+0xfff0>
  4145db:	nop    DWORD PTR [rax+rax*1+0x0]
  4145e0:	mov    eax,DWORD PTR [r14]
  4145e3:	test   eax,eax
  4145e5:	jle    414330 <xmlStrEqual@plt+0x103f0>
  4145eb:	mov    rdi,rbx
  4145ee:	call   424d40 <xmlStrEqual@plt+0x20e00>
  4145f3:	mov    rdx,rax
  4145f6:	lea    rsi,[rip+0x370db]        # 44b6d8 <xmlStrEqual@plt+0x47798>
  4145fd:	mov    edi,0x5
  414602:	xor    eax,eax
  414604:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  414609:	jmp    414330 <xmlStrEqual@plt+0x103f0>
  41460e:	xchg   ax,ax
  414610:	mov    rdi,QWORD PTR [r12+0x18]
  414615:	mov    rsi,rbp
  414618:	call   432d40 <xmlStrEqual@plt+0x2ee00>
  41461d:	mov    r13,rax
  414620:	test   rax,rax
  414623:	je     414954 <xmlStrEqual@plt+0x10a14>
  414629:	mov    rdx,QWORD PTR [rax+0x10]
  41462d:	mov    rsi,r14
  414630:	mov    rdi,r15
  414633:	call   424360 <xmlStrEqual@plt+0x20420>
  414638:	cmp    eax,0x1
  41463b:	je     41499a <xmlStrEqual@plt+0x10a5a>
  414641:	mov    r14,0x469e3c
  414648:	mov    edx,DWORD PTR [r14]
  41464b:	test   edx,edx
  41464d:	jle    414395 <xmlStrEqual@plt+0x10455>
  414653:	mov    rbx,QWORD PTR [r13+0x10]
  414657:	mov    rdi,rbp
  41465a:	call   424d40 <xmlStrEqual@plt+0x20e00>
  41465f:	mov    rdx,rax
  414662:	mov    rcx,rbx
  414665:	lea    rsi,[rip+0x37344]        # 44b9b0 <xmlStrEqual@plt+0x47a70>
  41466c:	mov    edi,0x5
  414671:	xor    eax,eax
  414673:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  414678:	xor    r15d,r15d
  41467b:	xor    r13d,r13d
  41467e:	jmp    41439b <xmlStrEqual@plt+0x1045b>
  414683:	nop    DWORD PTR [rax+rax*1+0x0]
  414688:	mov    eax,DWORD PTR [r14]
  41468b:	cmp    eax,0x1
  41468e:	jle    413f30 <xmlStrEqual@plt+0xfff0>
  414694:	xor    eax,eax
  414696:	lea    rsi,[rip+0x3754a]        # 44bbe7 <xmlStrEqual@plt+0x47ca7>
  41469d:	mov    edi,0x6
  4146a2:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  4146a7:	mov    eax,DWORD PTR [r14]
  4146aa:	jmp    413f30 <xmlStrEqual@plt+0xfff0>
  4146af:	nop
  4146b0:	mov    rdi,0x424bf0
  4146b7:	call   42dca0 <xmlStrEqual@plt+0x29d60>
  4146bc:	mov    rdi,QWORD PTR [rsp+0x18]
  4146c1:	mov    rsi,rax
  4146c4:	mov    QWORD PTR [rsp+0x30],rax
  4146c9:	call   422f40 <xmlStrEqual@plt+0x1f000>
  4146ce:	movzx  eax,bl
  4146d1:	mov    DWORD PTR [rsp+0x40],eax
  4146d5:	xor    ebx,ebx
  4146d7:	lea    rax,[rsp+0x110]
  4146df:	cmp    BYTE PTR [rbp+0x3],0x0
  4146e3:	mov    DWORD PTR [rsp+0x8],0x0
  4146eb:	mov    QWORD PTR [rsp+0x38],rax
  4146f0:	je     414921 <xmlStrEqual@plt+0x109e1>
  4146f6:	mov    QWORD PTR [rsp+0x50],r15
  4146fb:	xor    eax,eax
  4146fd:	call   424be0 <xmlStrEqual@plt+0x20ca0>
  414702:	mov    rdi,QWORD PTR [rsp+0x18]
  414707:	mov    rsi,rax
  41470a:	mov    r13,rax
  41470d:	call   422ef0 <xmlStrEqual@plt+0x1efb0>
  414712:	cmp    eax,0x1
  414715:	jne    4147d6 <xmlStrEqual@plt+0x10896>
  41471b:	mov    rdi,QWORD PTR [r12+0x18]
  414720:	mov    rsi,r13
  414723:	call   432d40 <xmlStrEqual@plt+0x2ee00>
  414728:	mov    rdi,QWORD PTR [r12+0x20]
  41472d:	mov    rsi,r13
  414730:	mov    r15,rax
  414733:	call   432d40 <xmlStrEqual@plt+0x2ee00>
  414738:	mov    r10,rax
  41473b:	mov    rax,r15
  41473e:	or     rax,r10
  414741:	jne    414800 <xmlStrEqual@plt+0x108c0>
  414747:	cmp    DWORD PTR [rsp+0x40],0x1
  41474c:	je     414be1 <xmlStrEqual@plt+0x10ca1>
  414752:	mov    rdi,QWORD PTR [r12+0x18]
  414757:	mov    rsi,r13
  41475a:	call   4330f0 <xmlStrEqual@plt+0x2f1b0>
  41475f:	mov    rdi,r13
  414762:	mov    r15,rax
  414765:	call   429a30 <xmlStrEqual@plt+0x25af0>
  41476a:	test   eax,eax
  41476c:	sete   dl
  41476f:	mov    r8,QWORD PTR [rbp+0x4]
  414773:	mov    ecx,0x1
  414778:	movzx  edx,dl
  41477b:	mov    esi,0xf
  414780:	mov    rdi,r15
  414783:	call   423e60 <xmlStrEqual@plt+0x1ff20>
  414788:	mov    r11d,DWORD PTR [r14]
  41478b:	mov    rbx,rax
  41478e:	test   r11d,r11d
  414791:	jg     414b6c <xmlStrEqual@plt+0x10c2c>
  414797:	mov    r8,QWORD PTR [rsp+0x38]
  41479c:	mov    rcx,QWORD PTR [rsp+0x20]
  4147a1:	mov    rdx,QWORD PTR [rsp+0x10]
  4147a6:	mov    rsi,QWORD PTR [rsp+0x30]
  4147ab:	mov    rdi,r12
  4147ae:	call   408bf0 <xmlStrEqual@plt+0x4cb0>
  4147b3:	cmp    eax,0x1
  4147b6:	je     414c30 <xmlStrEqual@plt+0x10cf0>
  4147bc:	mov    esi,DWORD PTR [r14]
  4147bf:	test   esi,esi
  4147c1:	jle    4147d6 <xmlStrEqual@plt+0x10896>
  4147c3:	lea    rsi,[rip+0x349ae]        # 449178 <xmlStrEqual@plt+0x45238>
  4147ca:	mov    edi,0x5
  4147cf:	xor    eax,eax
  4147d1:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  4147d6:	mov    rdi,QWORD PTR [rsp+0x30]
  4147db:	call   42e2b0 <xmlStrEqual@plt+0x2a370>
  4147e0:	test   rbx,rbx
  4147e3:	je     4145c2 <xmlStrEqual@plt+0x10682>
  4147e9:	mov    rdi,rbx
  4147ec:	call   430820 <xmlStrEqual@plt+0x2c8e0>
  4147f1:	jmp    4145c2 <xmlStrEqual@plt+0x10682>
  4147f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  414800:	test   r10,r10
  414803:	je     414ac2 <xmlStrEqual@plt+0x10b82>
  414809:	mov    rax,QWORD PTR [r10]
  41480c:	cmp    DWORD PTR [rsp+0x40],0x1
  414811:	mov    QWORD PTR [rsp+0x48],rax
  414816:	je     414c7a <xmlStrEqual@plt+0x10d3a>
  41481c:	test   r15,r15
  41481f:	je     414833 <xmlStrEqual@plt+0x108f3>
  414821:	cmp    BYTE PTR [r15+0x8],0x0
  414826:	jne    414833 <xmlStrEqual@plt+0x108f3>
  414828:	cmp    BYTE PTR [r10+0x8],0x0
  41482d:	je     414fe8 <xmlStrEqual@plt+0x110a8>
  414833:	mov    r11d,DWORD PTR [r14]
  414836:	test   r11d,r11d
  414839:	jle    414869 <xmlStrEqual@plt+0x10929>
  41483b:	mov    rdi,QWORD PTR [rsp+0x48]
  414840:	call   424d40 <xmlStrEqual@plt+0x20e00>
  414845:	mov    rdi,r13
  414848:	mov    rbx,rax
  41484b:	call   424d40 <xmlStrEqual@plt+0x20e00>
  414850:	mov    rdx,rax
  414853:	mov    rcx,rbx
  414856:	lea    rsi,[rip+0x36d1b]        # 44b578 <xmlStrEqual@plt+0x47638>
  41485d:	mov    edi,0x5
  414862:	xor    eax,eax
  414864:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  414869:	mov    edi,0x2
  41486e:	xor    eax,eax
  414870:	call   423cc0 <xmlStrEqual@plt+0x1fd80>
  414875:	mov    rsi,QWORD PTR [rsp+0x48]
  41487a:	xor    edx,edx
  41487c:	mov    rdi,rax
  41487f:	mov    rbx,rax
  414882:	call   423740 <xmlStrEqual@plt+0x1f800>
  414887:	and    BYTE PTR [rax+0x6],0xef
  41488b:	movzx  eax,WORD PTR [rbx+0x24]
  41488f:	cmp    ax,0xffff
  414893:	je     40401b <xmlStrEqual@plt+0xdb>
  414899:	add    rax,QWORD PTR [rbx+0x30]
  41489d:	and    BYTE PTR [rax],0xf7
  4148a0:	mov    r8,QWORD PTR [rsp+0x38]
  4148a5:	mov    rcx,QWORD PTR [rsp+0x20]
  4148aa:	mov    rsi,QWORD PTR [rsp+0x30]
  4148af:	mov    rdx,QWORD PTR [rbp+0x4]
  4148b3:	mov    rdi,r12
  4148b6:	mov    QWORD PTR [rax+0x4],rdx
  4148ba:	mov    rdx,QWORD PTR [rsp+0x10]
  4148bf:	call   408bf0 <xmlStrEqual@plt+0x4cb0>
  4148c4:	cmp    eax,0x1
  4148c7:	jne    415117 <xmlStrEqual@plt+0x111d7>
  4148cd:	mov    rdx,QWORD PTR [rsp+0x38]
  4148d2:	mov    rsi,rbx
  4148d5:	mov    rdi,r12
  4148d8:	call   4089b0 <xmlStrEqual@plt+0x4a70>
  4148dd:	cmp    eax,0x1
  4148e0:	je     4148fd <xmlStrEqual@plt+0x109bd>
  4148e2:	mov    r10d,DWORD PTR [r14]
  4148e5:	test   r10d,r10d
  4148e8:	jle    4148fd <xmlStrEqual@plt+0x109bd>
  4148ea:	lea    rsi,[rip+0x37340]        # 44bc31 <xmlStrEqual@plt+0x47cf1>
  4148f1:	mov    edi,0x5
  4148f6:	xor    eax,eax
  4148f8:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  4148fd:	mov    rdi,rbx
  414900:	call   430820 <xmlStrEqual@plt+0x2c8e0>
  414905:	mov    rdi,r13
  414908:	call   424bf0 <xmlStrEqual@plt+0x20cb0>
  41490d:	inc    DWORD PTR [rsp+0x8]
  414911:	movzx  eax,BYTE PTR [rbp+0x3]
  414915:	mov    edx,DWORD PTR [rsp+0x8]
  414919:	cmp    edx,eax
  41491b:	jl     4146fb <xmlStrEqual@plt+0x107bb>
  414921:	mov    rdi,QWORD PTR [rsp+0x30]
  414926:	call   42e2b0 <xmlStrEqual@plt+0x2a370>
  41492b:	mov    rdi,QWORD PTR [rsp]
  41492f:	call   424bf0 <xmlStrEqual@plt+0x20cb0>
  414934:	jmp    413e34 <xmlStrEqual@plt+0xfef4>
  414939:	nop    DWORD PTR [rax+0x0]
  414940:	mov    r14,0x469e3c
  414947:	mov    rdi,rbx
  41494a:	call   42b110 <xmlStrEqual@plt+0x271d0>
  41494f:	jmp    414344 <xmlStrEqual@plt+0x10404>
  414954:	mov    r14,0x469e3c
  41495b:	mov    ecx,DWORD PTR [r14]
  41495e:	test   ecx,ecx
  414960:	jle    414395 <xmlStrEqual@plt+0x10455>
  414966:	mov    rdi,rbp
  414969:	call   424d40 <xmlStrEqual@plt+0x20e00>
  41496e:	mov    rdx,rax
  414971:	lea    rsi,[rip+0x36ff0]        # 44b968 <xmlStrEqual@plt+0x47a28>
  414978:	mov    edi,0x5
  41497d:	xor    eax,eax
  41497f:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  414984:	xor    r15d,r15d
  414987:	jmp    41439b <xmlStrEqual@plt+0x1045b>
  41498c:	mov    QWORD PTR [rsp+0x30],0x0
  414995:	jmp    414261 <xmlStrEqual@plt+0x10321>
  41499a:	call   42dc90 <xmlStrEqual@plt+0x29d50>
  41499f:	mov    r15,rax
  4149a2:	mov    rax,QWORD PTR [r12+0x40]
  4149a7:	mov    rax,QWORD PTR [rax+0x10]
  4149ab:	mov    r14,QWORD PTR [rax+0x8]
  4149af:	cmp    rax,r14
  4149b2:	je     4149d7 <xmlStrEqual@plt+0x10a97>
  4149b4:	nop    DWORD PTR [rax+0x0]
  4149b8:	mov    rax,QWORD PTR [r14+0x10]
  4149bc:	mov    rsi,r15
  4149bf:	mov    rdi,QWORD PTR [rax+0x8]
  4149c3:	call   42dcf0 <xmlStrEqual@plt+0x29db0>
  4149c8:	mov    r14,QWORD PTR [r14+0x8]
  4149cc:	mov    rax,QWORD PTR [r12+0x40]
  4149d1:	cmp    r14,QWORD PTR [rax+0x10]
  4149d5:	jne    4149b8 <xmlStrEqual@plt+0x10a78>
  4149d7:	lea    r14,[rsp+0x110]
  4149df:	mov    rdi,r14
  4149e2:	xor    esi,esi
  4149e4:	call   424dd0 <xmlStrEqual@plt+0x20e90>
  4149e9:	mov    rax,QWORD PTR [rsp+0x20]
  4149ee:	mov    r8,r14
  4149f1:	movzx  edx,WORD PTR [rax+0x42]
  4149f5:	lea    rcx,[rax+0x20]
  4149f9:	mov    r9,r15
  4149fc:	mov    rsi,rax
  4149ff:	mov    edi,0x10f6
  414a04:	mov    QWORD PTR [rsp+0x8],rcx
  414a09:	call   42a0c0 <xmlStrEqual@plt+0x26180>
  414a0e:	mov    rsi,rax
  414a11:	mov    QWORD PTR [rsp],rax
  414a15:	mov    rax,QWORD PTR [r12+0x40]
  414a1a:	mov    edx,DWORD PTR [r13+0xc]
  414a1e:	mov    ecx,DWORD PTR [rax+0x8]
  414a21:	mov    rdi,rbp
  414a24:	call   424760 <xmlStrEqual@plt+0x20820>
  414a29:	mov    r14,rax
  414a2c:	test   rax,rax
  414a2f:	je     414d61 <xmlStrEqual@plt+0x10e21>
  414a35:	mov    rdi,r15
  414a38:	call   42e2b0 <xmlStrEqual@plt+0x2a370>
  414a3d:	mov    rdi,QWORD PTR [rsp]
  414a41:	call   424bf0 <xmlStrEqual@plt+0x20cb0>
  414a46:	mov    rdi,rbp
  414a49:	call   424bf0 <xmlStrEqual@plt+0x20cb0>
  414a4e:	movzx  eax,WORD PTR [r14+0x24]
  414a53:	cmp    ax,0xffff
  414a57:	je     404003 <xmlStrEqual@plt+0xc3>
  414a5d:	mov    rdx,QWORD PTR [rbx+0x4]
  414a61:	add    rax,QWORD PTR [r14+0x30]
  414a65:	mov    QWORD PTR [rax+0x4],rdx
  414a69:	mov    rcx,QWORD PTR [r13+0x10]
  414a6d:	mov    edx,DWORD PTR [r13+0xc]
  414a71:	lea    rsi,[rax+0xc]
  414a75:	mov    rdi,r14
  414a78:	call   424260 <xmlStrEqual@plt+0x20320>
  414a7d:	mov    rcx,QWORD PTR [rsp+0x20]
  414a82:	lea    rbx,[rsp+0x160]
  414a8a:	movzx  edx,WORD PTR [rcx+0x42]
  414a8e:	mov    r8,QWORD PTR [rsp+0x8]
  414a93:	mov    esi,0x10f6
  414a98:	mov    rdi,rbx
  414a9b:	call   439130 <xmlStrEqual@plt+0x351f0>
  414aa0:	mov    rdi,r12
  414aa3:	mov    rdx,rbx
  414aa6:	mov    rsi,r14
  414aa9:	call   4089b0 <xmlStrEqual@plt+0x4a70>
  414aae:	mov    rdi,r14
  414ab1:	call   430820 <xmlStrEqual@plt+0x2c8e0>
  414ab6:	mov    r14,0x469e3c
  414abd:	jmp    413e34 <xmlStrEqual@plt+0xfef4>
  414ac2:	cmp    BYTE PTR [r15+0x9],0x0
  414ac7:	mov    QWORD PTR [rsp+0x48],r13
  414acc:	jne    414ad6 <xmlStrEqual@plt+0x10b96>
  414ace:	mov    rax,QWORD PTR [r15]
  414ad1:	mov    QWORD PTR [rsp+0x48],rax
  414ad6:	cmp    DWORD PTR [rsp+0x40],0x1
  414adb:	je     414efb <xmlStrEqual@plt+0x10fbb>
  414ae1:	mov    rdi,QWORD PTR [rsp+0x48]
  414ae6:	mov    r8,QWORD PTR [rbp+0x4]
  414aea:	mov    ecx,0x1
  414aef:	mov    edx,0x1
  414af4:	mov    esi,0x1
  414af9:	call   423e60 <xmlStrEqual@plt+0x1ff20>
  414afe:	mov    edi,DWORD PTR [r14]
  414b01:	mov    rbx,rax
  414b04:	test   edi,edi
  414b06:	jg     414dc5 <xmlStrEqual@plt+0x10e85>
  414b0c:	mov    r8,QWORD PTR [rsp+0x38]
  414b11:	mov    rcx,QWORD PTR [rsp+0x20]
  414b16:	mov    rdx,QWORD PTR [rsp+0x10]
  414b1b:	mov    rsi,QWORD PTR [rsp+0x30]
  414b20:	mov    rdi,r12
  414b23:	call   408bf0 <xmlStrEqual@plt+0x4cb0>
  414b28:	cmp    eax,0x1
  414b2b:	jne    4147bc <xmlStrEqual@plt+0x1087c>
  414b31:	mov    rdx,QWORD PTR [rsp+0x38]
  414b36:	mov    rsi,rbx
  414b39:	mov    rdi,r12
  414b3c:	call   4089b0 <xmlStrEqual@plt+0x4a70>
  414b41:	dec    eax
  414b43:	je     414b5e <xmlStrEqual@plt+0x10c1e>
  414b45:	cmp    DWORD PTR [r14],0x0
  414b49:	jle    414b5e <xmlStrEqual@plt+0x10c1e>
  414b4b:	lea    rsi,[rip+0x370df]        # 44bc31 <xmlStrEqual@plt+0x47cf1>
  414b52:	mov    edi,0x5
  414b57:	xor    eax,eax
  414b59:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  414b5e:	test   rbx,rbx
  414b61:	jne    4148fd <xmlStrEqual@plt+0x109bd>
  414b67:	jmp    414905 <xmlStrEqual@plt+0x109c5>
  414b6c:	mov    rdi,r13
  414b6f:	call   424d40 <xmlStrEqual@plt+0x20e00>
  414b74:	mov    rdx,rax
  414b77:	lea    rsi,[rip+0x368ea]        # 44b468 <xmlStrEqual@plt+0x47528>
  414b7e:	xor    eax,eax
  414b80:	mov    edi,0x5
  414b85:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  414b8a:	cmp    DWORD PTR [r14],0x1
  414b8e:	jle    414797 <xmlStrEqual@plt+0x10857>
  414b94:	mov    rdi,r13
  414b97:	call   424d40 <xmlStrEqual@plt+0x20e00>
  414b9c:	mov    rdi,rbx
  414b9f:	mov    QWORD PTR [rsp+0x48],rax
  414ba4:	call   423f50 <xmlStrEqual@plt+0x20010>
  414ba9:	mov    rcx,QWORD PTR [rsp+0x48]
  414bae:	mov    rdx,rax
  414bb1:	lea    rsi,[rip+0x37063]        # 44bc1b <xmlStrEqual@plt+0x47cdb>
  414bb8:	mov    edi,0x6
  414bbd:	xor    eax,eax
  414bbf:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  414bc4:	jmp    414797 <xmlStrEqual@plt+0x10857>
  414bc9:	xor    ebx,ebx
  414bcb:	mov    DWORD PTR [rsp+0x38],0x0
  414bd3:	mov    QWORD PTR [rsp+0x8],0x0
  414bdc:	jmp    413c9d <xmlStrEqual@plt+0xfd5d>
  414be1:	mov    r9,QWORD PTR [rbp+0x4]
  414be5:	mov    r8d,0x1
  414beb:	xor    ecx,ecx
  414bed:	mov    edx,0x5
  414bf2:	xor    esi,esi
  414bf4:	mov    rdi,r13
  414bf7:	call   423ed0 <xmlStrEqual@plt+0x1ff90>
  414bfc:	mov    r15,rax
  414bff:	mov    eax,DWORD PTR [r14]
  414c02:	test   eax,eax
  414c04:	jg     414e20 <xmlStrEqual@plt+0x10ee0>
  414c0a:	mov    rdx,QWORD PTR [rsp+0x20]
  414c0f:	mov    rsi,r15
  414c12:	mov    rdi,r12
  414c15:	call   4089b0 <xmlStrEqual@plt+0x4a70>
  414c1a:	test   r15,r15
  414c1d:	je     414905 <xmlStrEqual@plt+0x109c5>
  414c23:	mov    rdi,r15
  414c26:	call   430820 <xmlStrEqual@plt+0x2c8e0>
  414c2b:	jmp    414905 <xmlStrEqual@plt+0x109c5>
  414c30:	mov    rdx,QWORD PTR [rsp+0x38]
  414c35:	mov    rsi,rbx
  414c38:	mov    rdi,r12
  414c3b:	call   4089b0 <xmlStrEqual@plt+0x4a70>
  414c40:	cmp    eax,0x1
  414c43:	je     414c60 <xmlStrEqual@plt+0x10d20>
  414c45:	mov    r10d,DWORD PTR [r14]
  414c48:	test   r10d,r10d
  414c4b:	jle    414c60 <xmlStrEqual@plt+0x10d20>
  414c4d:	lea    rsi,[rip+0x36fdd]        # 44bc31 <xmlStrEqual@plt+0x47cf1>
  414c54:	mov    edi,0x5
  414c59:	xor    eax,eax
  414c5b:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  414c60:	test   rbx,rbx
  414c63:	je     414c6d <xmlStrEqual@plt+0x10d2d>
  414c65:	mov    rdi,rbx
  414c68:	call   430820 <xmlStrEqual@plt+0x2c8e0>
  414c6d:	mov    rdi,r15
  414c70:	call   424bf0 <xmlStrEqual@plt+0x20cb0>
  414c75:	jmp    414905 <xmlStrEqual@plt+0x109c5>
  414c7a:	cmp    BYTE PTR [r15+0x19],0x0
  414c7f:	sete   BYTE PTR [rsp+0x60]
  414c84:	mov    edi,0x6
  414c89:	xor    eax,eax
  414c8b:	mov    QWORD PTR [rsp+0x68],r10
  414c90:	call   423cc0 <xmlStrEqual@plt+0x1fd80>
  414c95:	mov    QWORD PTR [rsp+0x58],rax
  414c9a:	mov    r9,QWORD PTR [r15+0x20]
  414c9e:	push   QWORD PTR [rsp+0x20]
  414ca2:	mov    ecx,0x1
  414ca7:	mov    edx,0x2
  414cac:	push   0x0
  414cae:	mov    esi,0x5a0
  414cb3:	movzx  r8d,BYTE PTR [rsp+0x70]
  414cb9:	mov    rdi,QWORD PTR [rsp+0x58]
  414cbe:	call   42c630 <xmlStrEqual@plt+0x286f0>
  414cc3:	mov    rdi,QWORD PTR [rsp+0x68]
  414cc8:	mov    rsi,rax
  414ccb:	mov    QWORD PTR [rsp+0x58],rax
  414cd0:	call   423950 <xmlStrEqual@plt+0x1fa10>
  414cd5:	mov    rsi,QWORD PTR [rsp+0x68]
  414cda:	pop    rdx
  414cdb:	movzx  eax,WORD PTR [rsi+0x24]
  414cdf:	pop    rcx
  414ce0:	cmp    ax,0xffff
  414ce4:	je     404003 <xmlStrEqual@plt+0xc3>
  414cea:	mov    rdx,QWORD PTR [rsi+0x30]
  414cee:	mov    rcx,QWORD PTR [rbp+0x4]
  414cf2:	mov    rdi,r12
  414cf5:	mov    QWORD PTR [rdx+rax*1+0x4],rcx
  414cfa:	mov    rdx,QWORD PTR [rsp+0x20]
  414cff:	call   4089b0 <xmlStrEqual@plt+0x4a70>
  414d04:	cmp    eax,0x1
  414d07:	mov    r10,QWORD PTR [rsp+0x68]
  414d0c:	je     414fbc <xmlStrEqual@plt+0x1107c>
  414d12:	mov    eax,DWORD PTR [r14]
  414d15:	test   eax,eax
  414d17:	jle    414d36 <xmlStrEqual@plt+0x10df6>
  414d19:	lea    rsi,[rip+0x36f2a]        # 44bc4a <xmlStrEqual@plt+0x47d0a>
  414d20:	mov    edi,0x5
  414d25:	xor    eax,eax
  414d27:	mov    QWORD PTR [rsp+0x60],r10
  414d2c:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  414d31:	mov    r10,QWORD PTR [rsp+0x60]
  414d36:	mov    rdi,QWORD PTR [rsp+0x48]
  414d3b:	mov    QWORD PTR [rsp+0x60],r10
  414d40:	call   42bde0 <xmlStrEqual@plt+0x27ea0>
  414d45:	mov    rdi,QWORD PTR [rsp+0x58]
  414d4a:	call   430820 <xmlStrEqual@plt+0x2c8e0>
  414d4f:	mov    r10,QWORD PTR [rsp+0x60]
  414d54:	mov    rax,QWORD PTR [r10]
  414d57:	mov    QWORD PTR [rsp+0x48],rax
  414d5c:	jmp    414821 <xmlStrEqual@plt+0x108e1>
  414d61:	mov    r14,0x469e3c
  414d68:	mov    r13,QWORD PTR [rsp]
  414d6c:	mov    eax,DWORD PTR [r14]
  414d6f:	test   eax,eax
  414d71:	jle    41439b <xmlStrEqual@plt+0x1045b>
  414d77:	lea    rsi,[rip+0x36c82]        # 44ba00 <xmlStrEqual@plt+0x47ac0>
  414d7e:	mov    edi,0x5
  414d83:	xor    eax,eax
  414d85:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  414d8a:	jmp    41439b <xmlStrEqual@plt+0x1045b>
  414d8f:	mov    r14,0x469e3c
  414d96:	mov    r10d,DWORD PTR [r14]
  414d99:	test   r10d,r10d
  414d9c:	jle    414947 <xmlStrEqual@plt+0x10a07>
  414da2:	mov    rdi,rbp
  414da5:	call   424d40 <xmlStrEqual@plt+0x20e00>
  414daa:	mov    rdx,rax
  414dad:	lea    rsi,[rip+0x36acc]        # 44b880 <xmlStrEqual@plt+0x47940>
  414db4:	mov    edi,0x5
  414db9:	xor    eax,eax
  414dbb:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  414dc0:	jmp    414947 <xmlStrEqual@plt+0x10a07>
  414dc5:	mov    rdi,r13
  414dc8:	call   424d40 <xmlStrEqual@plt+0x20e00>
  414dcd:	mov    rdx,rax
  414dd0:	lea    rsi,[rip+0x366c9]        # 44b4a0 <xmlStrEqual@plt+0x47560>
  414dd7:	xor    eax,eax
  414dd9:	mov    edi,0x5
  414dde:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  414de3:	cmp    DWORD PTR [r14],0x1
  414de7:	jle    414b0c <xmlStrEqual@plt+0x10bcc>
  414ded:	mov    rdi,QWORD PTR [rsp+0x48]
  414df2:	call   424d40 <xmlStrEqual@plt+0x20e00>
  414df7:	mov    rdi,rbx
  414dfa:	mov    r15,rax
  414dfd:	call   423f50 <xmlStrEqual@plt+0x20010>
  414e02:	mov    rdx,rax
  414e05:	mov    rcx,r15
  414e08:	lea    rsi,[rip+0x36e0c]        # 44bc1b <xmlStrEqual@plt+0x47cdb>
  414e0f:	mov    edi,0x6
  414e14:	xor    eax,eax
  414e16:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  414e1b:	jmp    414b0c <xmlStrEqual@plt+0x10bcc>
  414e20:	mov    rdi,r13
  414e23:	call   424d40 <xmlStrEqual@plt+0x20e00>
  414e28:	mov    rdx,rax
  414e2b:	lea    rsi,[rip+0x365d6]        # 44b408 <xmlStrEqual@plt+0x474c8>
  414e32:	xor    eax,eax
  414e34:	mov    edi,0x5
  414e39:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  414e3e:	cmp    DWORD PTR [r14],0x1
  414e42:	jle    414c0a <xmlStrEqual@plt+0x10cca>
  414e48:	mov    rdi,r13
  414e4b:	call   424d40 <xmlStrEqual@plt+0x20e00>
  414e50:	mov    rdi,r15
  414e53:	mov    QWORD PTR [rsp+0x48],rax
  414e58:	call   423f50 <xmlStrEqual@plt+0x20010>
  414e5d:	mov    rcx,QWORD PTR [rsp+0x48]
  414e62:	mov    rdx,rax
  414e65:	lea    rsi,[rip+0x36daf]        # 44bc1b <xmlStrEqual@plt+0x47cdb>
  414e6c:	mov    edi,0x6
  414e71:	xor    eax,eax
  414e73:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  414e78:	jmp    414c0a <xmlStrEqual@plt+0x10cca>
  414e7d:	mov    rbx,QWORD PTR [rsp+0x10]
  414e82:	mov    esi,0x1
  414e87:	mov    rdi,rbx
  414e8a:	call   4244e0 <xmlStrEqual@plt+0x205a0>
  414e8f:	mov    rcx,QWORD PTR [r14+0x18]
  414e93:	mov    edx,DWORD PTR [r14+0x10]
  414e97:	mov    rsi,rax
  414e9a:	mov    rdi,rbx
  414e9d:	call   424260 <xmlStrEqual@plt+0x20320>
  414ea2:	jmp    413db0 <xmlStrEqual@plt+0xfe70>
  414ea7:	mov    rbx,QWORD PTR [rsp+0x10]
  414eac:	mov    rax,QWORD PTR [rsp+0x20]
  414eb1:	mov    edx,0x10f6
  414eb6:	lea    r8,[rax+0x20]
  414eba:	mov    rcx,rax
  414ebd:	mov    esi,0x10f6
  414ec2:	mov    rdi,rbx
  414ec5:	call   4363a0 <xmlStrEqual@plt+0x32460>
  414eca:	mov    esi,DWORD PTR [r14+0x10]
  414ece:	mov    rdi,rbx
  414ed1:	call   4241b0 <xmlStrEqual@plt+0x20270>
  414ed6:	mov    rcx,QWORD PTR [r14+0x18]
  414eda:	mov    edx,DWORD PTR [r14+0x10]
  414ede:	mov    rsi,rax
  414ee1:	mov    rdi,rbx
  414ee4:	call   4242d0 <xmlStrEqual@plt+0x20390>
  414ee9:	mov    rdi,rbx
  414eec:	call   423c60 <xmlStrEqual@plt+0x1fd20>
  414ef1:	or     WORD PTR [rax],0x4008
  414ef6:	jmp    413db0 <xmlStrEqual@plt+0xfe70>
  414efb:	cmp    BYTE PTR [r15+0x19],0x0
  414f00:	sete   r8b
  414f04:	mov    edi,0x6
  414f09:	xor    eax,eax
  414f0b:	mov    BYTE PTR [rsp+0x60],r8b
  414f10:	call   423cc0 <xmlStrEqual@plt+0x1fd80>
  414f15:	mov    QWORD PTR [rsp+0x58],rax
  414f1a:	mov    r9,QWORD PTR [r15+0x20]
  414f1e:	push   QWORD PTR [rsp+0x20]
  414f22:	mov    ecx,0x1
  414f27:	mov    edx,0x3
  414f2c:	push   0x0
  414f2e:	mov    esi,0xf
  414f33:	movzx  r8d,BYTE PTR [rsp+0x70]
  414f39:	mov    rdi,QWORD PTR [rsp+0x58]
  414f3e:	call   42c630 <xmlStrEqual@plt+0x286f0>
  414f43:	mov    rdi,QWORD PTR [rsp+0x68]
  414f48:	mov    rsi,rax
  414f4b:	mov    r15,rax
  414f4e:	call   423950 <xmlStrEqual@plt+0x1fa10>
  414f53:	mov    rsi,QWORD PTR [rsp+0x68]
  414f58:	pop    r8
  414f5a:	movzx  eax,WORD PTR [rsi+0x24]
  414f5e:	pop    r9
  414f60:	cmp    ax,0xffff
  414f64:	je     404003 <xmlStrEqual@plt+0xc3>
  414f6a:	mov    rdx,QWORD PTR [rsi+0x30]
  414f6e:	mov    rcx,QWORD PTR [rbp+0x4]
  414f72:	mov    rdi,r12
  414f75:	mov    QWORD PTR [rdx+rax*1+0x4],rcx
  414f7a:	mov    rdx,QWORD PTR [rsp+0x20]
  414f7f:	call   4089b0 <xmlStrEqual@plt+0x4a70>
  414f84:	dec    eax
  414f86:	je     4150d6 <xmlStrEqual@plt+0x11196>
  414f8c:	cmp    DWORD PTR [r14],0x0
  414f90:	jle    414fa5 <xmlStrEqual@plt+0x11065>
  414f92:	lea    rsi,[rip+0x36cb1]        # 44bc4a <xmlStrEqual@plt+0x47d0a>
  414f99:	mov    edi,0x5
  414f9e:	xor    eax,eax
  414fa0:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  414fa5:	mov    rdi,r15
  414fa8:	call   42bde0 <xmlStrEqual@plt+0x27ea0>
  414fad:	mov    rdi,QWORD PTR [rsp+0x58]
  414fb2:	call   430820 <xmlStrEqual@plt+0x2c8e0>
  414fb7:	jmp    414905 <xmlStrEqual@plt+0x109c5>
  414fbc:	cmp    DWORD PTR [r14],0x0
  414fc0:	jle    414d36 <xmlStrEqual@plt+0x10df6>
  414fc6:	lea    rsi,[rip+0x36c99]        # 44bc66 <xmlStrEqual@plt+0x47d26>
  414fcd:	mov    edi,0x5
  414fd2:	xor    eax,eax
  414fd4:	mov    QWORD PTR [rsp+0x60],r10
  414fd9:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  414fde:	mov    r10,QWORD PTR [rsp+0x60]
  414fe3:	jmp    414d36 <xmlStrEqual@plt+0x10df6>
  414fe8:	mov    rdi,r12
  414feb:	call   408950 <xmlStrEqual@plt+0x4a10>
  414ff0:	mov    rdi,rax
  414ff3:	mov    r15,rax
  414ff6:	call   408760 <xmlStrEqual@plt+0x4820>
  414ffb:	test   al,0x1
  414ffd:	je     4150a8 <xmlStrEqual@plt+0x11168>
  415003:	mov    rdi,QWORD PTR [rsp+0x48]
  415008:	mov    esi,0x2
  41500d:	call   412dc0 <xmlStrEqual@plt+0xee80>
  415012:	test   rax,rax
  415015:	je     4150a8 <xmlStrEqual@plt+0x11168>
  41501b:	mov    rdi,QWORD PTR [rax]
  41501e:	call   4255a0 <xmlStrEqual@plt+0x21660>
  415023:	cmp    DWORD PTR [rax+0x18],0x3
  415027:	mov    r15,rax
  41502a:	je     41513f <xmlStrEqual@plt+0x111ff>
  415030:	cmp    DWORD PTR [r14],0x2
  415034:	jle    415054 <xmlStrEqual@plt+0x11114>
  415036:	mov    rdi,r15
  415039:	call   424d40 <xmlStrEqual@plt+0x20e00>
  41503e:	mov    rdx,rax
  415041:	lea    rsi,[rip+0x364f8]        # 44b540 <xmlStrEqual@plt+0x47600>
  415048:	mov    edi,0x7
  41504d:	xor    eax,eax
  41504f:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  415054:	mov    rcx,QWORD PTR [rsp+0x50]
  415059:	movzx  eax,WORD PTR [rcx+0x1e]
  41505d:	cmp    ax,0xffff
  415061:	je     40402f <xmlStrEqual@plt+0xef>
  415067:	mov    rdx,QWORD PTR [rcx+0x30]
  41506b:	mov    rdi,rcx
  41506e:	and    BYTE PTR [rdx+rax*1],0xfb
  415072:	call   430b50 <xmlStrEqual@plt+0x2cc10>
  415077:	mov    r8,r15
  41507a:	mov    r15,QWORD PTR [rsp+0x28]
  41507f:	xor    ecx,ecx
  415081:	mov    rdi,r15
  415084:	mov    edx,0x10f6
  415089:	mov    esi,0x10f6
  41508e:	call   439130 <xmlStrEqual@plt+0x351f0>
  415093:	mov    rsi,QWORD PTR [rsp+0x50]
  415098:	mov    rdx,r15
  41509b:	mov    rdi,r12
  41509e:	call   4089b0 <xmlStrEqual@plt+0x4a70>
  4150a3:	jmp    414b5e <xmlStrEqual@plt+0x10c1e>
  4150a8:	mov    rdi,r15
  4150ab:	call   408760 <xmlStrEqual@plt+0x4820>
  4150b0:	test   al,0x2
  4150b2:	jne    4150fd <xmlStrEqual@plt+0x111bd>
  4150b4:	cmp    DWORD PTR [r14],0x0
  4150b8:	jle    414b5e <xmlStrEqual@plt+0x10c1e>
  4150be:	lea    rsi,[rip+0x36403]        # 44b4c8 <xmlStrEqual@plt+0x47588>
  4150c5:	mov    edi,0x5
  4150ca:	xor    eax,eax
  4150cc:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  4150d1:	jmp    414b5e <xmlStrEqual@plt+0x10c1e>
  4150d6:	cmp    DWORD PTR [r14],0x0
  4150da:	jle    414fa5 <xmlStrEqual@plt+0x11065>
  4150e0:	lea    rsi,[rip+0x36b7f]        # 44bc66 <xmlStrEqual@plt+0x47d26>
  4150e7:	mov    edi,0x5
  4150ec:	xor    eax,eax
  4150ee:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  4150f3:	jmp    414fa5 <xmlStrEqual@plt+0x11065>
  4150f8:	call   403c00 <__stack_chk_fail@plt>
  4150fd:	mov    rdi,QWORD PTR [rsp+0x48]
  415102:	mov    esi,0xa
  415107:	call   412dc0 <xmlStrEqual@plt+0xee80>
  41510c:	test   rax,rax
  41510f:	jne    41501b <xmlStrEqual@plt+0x110db>
  415115:	jmp    4150b4 <xmlStrEqual@plt+0x11174>
  415117:	cmp    DWORD PTR [r14],0x0
  41511b:	jle    415130 <xmlStrEqual@plt+0x111f0>
  41511d:	lea    rsi,[rip+0x34054]        # 449178 <xmlStrEqual@plt+0x45238>
  415124:	mov    edi,0x5
  415129:	xor    eax,eax
  41512b:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  415130:	mov    rdi,QWORD PTR [rsp+0x30]
  415135:	call   42e2b0 <xmlStrEqual@plt+0x2a370>
  41513a:	jmp    4147e9 <xmlStrEqual@plt+0x108a9>
  41513f:	mov    rdi,rax
  415142:	call   428cf0 <xmlStrEqual@plt+0x24db0>
  415147:	cmp    eax,0xa
  41514a:	je     415198 <xmlStrEqual@plt+0x11258>
  41514c:	cmp    DWORD PTR [r14],0x0
  415150:	jg     415173 <xmlStrEqual@plt+0x11233>
  415152:	xor    r15d,r15d
  415155:	jmp    415030 <xmlStrEqual@plt+0x110f0>
  41515a:	mov    rax,QWORD PTR [rsp+0x20]
  41515f:	mov    QWORD PTR [rsp+0x40],rax
  415164:	mov    rax,QWORD PTR [rsp+0x10]
  415169:	mov    QWORD PTR [rsp+0x20],rax
  41516e:	jmp    4139ba <xmlStrEqual@plt+0xfa7a>
  415173:	mov    rdi,r15
  415176:	call   428cf0 <xmlStrEqual@plt+0x24db0>
  41517b:	mov    edx,eax
  41517d:	lea    rsi,[rip+0x3638c]        # 44b510 <xmlStrEqual@plt+0x475d0>
  415184:	mov    edi,0x5
  415189:	xor    eax,eax
  41518b:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  415190:	xor    r15d,r15d
  415193:	jmp    415030 <xmlStrEqual@plt+0x110f0>
  415198:	mov    rdi,r15
  41519b:	call   42a4a0 <xmlStrEqual@plt+0x26560>
  4151a0:	cmp    DWORD PTR [rax+0x18],0x0
  4151a4:	je     404011 <xmlStrEqual@plt+0xd1>
  4151aa:	mov    rax,QWORD PTR [rax]
  4151ad:	mov    rax,QWORD PTR [rax+0x10]
  4151b1:	mov    r15,QWORD PTR [rax+0x8]
  4151b5:	jmp    415030 <xmlStrEqual@plt+0x110f0>
  4151ba:	nop    WORD PTR [rax+rax*1+0x0]
  4151c0:	endbr64 
  4151c4:	push   r12
  4151c6:	push   rbp
  4151c7:	push   rbx
  4151c8:	mov    rbx,QWORD PTR [rdi+0x30]
  4151cc:	call   43b440 <xmlStrEqual@plt+0x37500>
  4151d1:	mov    rbp,rax
  4151d4:	mov    r12,QWORD PTR [rax]
  4151d7:	mov    rax,0x469e3c
  4151de:	mov    eax,DWORD PTR [rax]
  4151e0:	test   eax,eax
  4151e2:	jle    415202 <xmlStrEqual@plt+0x112c2>
  4151e4:	mov    rdi,r12
  4151e7:	call   424d40 <xmlStrEqual@plt+0x20e00>
  4151ec:	mov    rdx,rax
  4151ef:	lea    rsi,[rip+0x368f2]        # 44bae8 <xmlStrEqual@plt+0x47ba8>
  4151f6:	mov    edi,0x5
  4151fb:	xor    eax,eax
  4151fd:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  415202:	mov    rdi,QWORD PTR [rbx+0x20]
  415206:	mov    rsi,r12
  415209:	call   432f40 <xmlStrEqual@plt+0x2f000>
  41520e:	mov    rdi,rbp
  415211:	call   430de0 <xmlStrEqual@plt+0x2cea0>
  415216:	mov    rdi,rbx
  415219:	mov    esi,0x7
  41521e:	call   4135c0 <xmlStrEqual@plt+0xf680>
  415223:	pop    rbx
  415224:	pop    rbp
  415225:	mov    eax,0x1
  41522a:	pop    r12
  41522c:	ret    
  41522d:	nop    DWORD PTR [rax]
  415230:	endbr64 
  415234:	mov    rax,0x469660
  41523b:	cmp    QWORD PTR [rdi+0x8],rax
  41523f:	jne    415248 <xmlStrEqual@plt+0x11308>
  415241:	mov    rax,rdi
  415244:	ret    
  415245:	nop    DWORD PTR [rax]
  415248:	sub    rsp,0x8
  41524c:	lea    rdx,[rip+0x3604d]        # 44b2a0 <xmlStrEqual@plt+0x47360>
  415253:	lea    rsi,[rip+0x36aee]        # 44bd48 <xmlStrEqual@plt+0x47e08>
  41525a:	lea    rdi,[rip+0x36922]        # 44bb83 <xmlStrEqual@plt+0x47c43>
  415261:	call   4350f0 <xmlStrEqual@plt+0x311b0>
  415266:	nop    WORD PTR cs:[rax+rax*1+0x0]
  415270:	endbr64 
  415274:	push   r13
  415276:	mov    r13,rdi
  415279:	mov    edi,0x20
  41527e:	push   r12
  415280:	mov    r12,rsi
  415283:	push   rbp
  415284:	mov    rbp,rdx
  415287:	push   rbx
  415288:	sub    rsp,0x8
  41528c:	call   434fe0 <xmlStrEqual@plt+0x310a0>
  415291:	mov    rbx,rax
  415294:	test   rax,rax
  415297:	je     4152d8 <xmlStrEqual@plt+0x11398>
  415299:	mov    rdi,r13
  41529c:	call   403ed0 <strdup@plt>
  4152a1:	mov    QWORD PTR [rbx],rax
  4152a4:	mov    rdi,r12
  4152a7:	call   425060 <xmlStrEqual@plt+0x21120>
  4152ac:	mov    QWORD PTR [rbx+0x8],rax
  4152b0:	mov    rdi,rbp
  4152b3:	call   403ed0 <strdup@plt>
  4152b8:	mov    QWORD PTR [rbx+0x18],rax
  4152bc:	mov    DWORD PTR [rbx+0x10],0x1
  4152c3:	add    rsp,0x8
  4152c7:	mov    rax,rbx
  4152ca:	pop    rbx
  4152cb:	pop    rbp
  4152cc:	pop    r12
  4152ce:	pop    r13
  4152d0:	ret    
  4152d1:	nop    DWORD PTR [rax+0x0]
  4152d8:	mov    rax,0x469e3c
  4152df:	mov    eax,DWORD PTR [rax]
  4152e1:	test   eax,eax
  4152e3:	jle    4152c3 <xmlStrEqual@plt+0x11383>
  4152e5:	lea    rsi,[rip+0x3682c]        # 44bb18 <xmlStrEqual@plt+0x47bd8>
  4152ec:	mov    edi,0x5
  4152f1:	xor    eax,eax
  4152f3:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  4152f8:	jmp    4152c3 <xmlStrEqual@plt+0x11383>
  4152fa:	nop    WORD PTR [rax+rax*1+0x0]
  415300:	endbr64 
  415304:	push   r12
  415306:	mov    r12,rdi
  415309:	mov    edi,0x18
  41530e:	push   rbp
  41530f:	mov    ebp,esi
  415311:	push   rbx
  415312:	call   434fe0 <xmlStrEqual@plt+0x310a0>
  415317:	mov    rbx,rax
  41531a:	test   rax,rax
  41531d:	je     415340 <xmlStrEqual@plt+0x11400>
  41531f:	mov    rdi,r12
  415322:	call   403ed0 <strdup@plt>
  415327:	mov    QWORD PTR [rbx],rax
  41532a:	mov    DWORD PTR [rbx+0x8],ebp
  41532d:	call   42dc90 <xmlStrEqual@plt+0x29d50>
  415332:	mov    QWORD PTR [rbx+0x10],rax
  415336:	mov    rax,rbx
  415339:	pop    rbx
  41533a:	pop    rbp
  41533b:	pop    r12
  41533d:	ret    
  41533e:	xchg   ax,ax
  415340:	mov    rax,0x469e3c
  415347:	mov    eax,DWORD PTR [rax]
  415349:	test   eax,eax
  41534b:	jle    415336 <xmlStrEqual@plt+0x113f6>
  41534d:	lea    rsi,[rip+0x367e4]        # 44bb38 <xmlStrEqual@plt+0x47bf8>
  415354:	mov    edi,0x5
  415359:	xor    eax,eax
  41535b:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  415360:	jmp    415336 <xmlStrEqual@plt+0x113f6>
  415362:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  41536d:	nop    DWORD PTR [rax]
  415370:	endbr64 
  415374:	cmp    esi,0x4
  415377:	jle    415390 <xmlStrEqual@plt+0x11450>
  415379:	mov    rax,0x469e3c
  415380:	mov    eax,DWORD PTR [rax]
  415382:	add    eax,0x4
  415385:	cmp    esi,eax
  415387:	jle    415390 <xmlStrEqual@plt+0x11450>
  415389:	ret    
  41538a:	nop    WORD PTR [rax+rax*1+0x0]
  415390:	push   r14
  415392:	xor    eax,eax
  415394:	mov    r14,rdi
  415397:	push   r13
  415399:	push   r12
  41539b:	push   rbp
  41539c:	mov    ebp,esi
  41539e:	lea    rsi,[rip+0x368ff]        # 44bca4 <xmlStrEqual@plt+0x47d64>
  4153a5:	push   rbx
  4153a6:	mov    ecx,DWORD PTR [rdi+0x8]
  4153a9:	mov    rdx,QWORD PTR [rdi]
  4153ac:	mov    edi,ebp
  4153ae:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  4153b3:	mov    rax,QWORD PTR [r14+0x10]
  4153b7:	mov    rbx,QWORD PTR [rax+0x8]
  4153bb:	cmp    rax,rbx
  4153be:	je     41541b <xmlStrEqual@plt+0x114db>
  4153c0:	xor    r12d,r12d
  4153c3:	lea    r13,[rip+0x368f7]        # 44bcc1 <xmlStrEqual@plt+0x47d81>
  4153ca:	jmp    4153ea <xmlStrEqual@plt+0x114aa>
  4153cc:	nop    DWORD PTR [rax+0x0]
  4153d0:	mov    rax,0x469e3c
  4153d7:	mov    eax,DWORD PTR [rax]
  4153d9:	add    eax,0x4
  4153dc:	cmp    ebp,eax
  4153de:	jle    4153f2 <xmlStrEqual@plt+0x114b2>
  4153e0:	mov    rbx,QWORD PTR [rbx+0x8]
  4153e4:	cmp    QWORD PTR [r14+0x10],rbx
  4153e8:	je     41541b <xmlStrEqual@plt+0x114db>
  4153ea:	inc    r12d
  4153ed:	cmp    ebp,0x4
  4153f0:	jg     4153d0 <xmlStrEqual@plt+0x11490>
  4153f2:	mov    rax,QWORD PTR [rbx+0x10]
  4153f6:	mov    rdi,QWORD PTR [rax+0x8]
  4153fa:	call   424d40 <xmlStrEqual@plt+0x20e00>
  4153ff:	mov    rcx,rax
  415402:	mov    edx,r12d
  415405:	mov    rsi,r13
  415408:	mov    edi,ebp
  41540a:	xor    eax,eax
  41540c:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  415411:	mov    rbx,QWORD PTR [rbx+0x8]
  415415:	cmp    QWORD PTR [r14+0x10],rbx
  415419:	jne    4153ea <xmlStrEqual@plt+0x114aa>
  41541b:	pop    rbx
  41541c:	pop    rbp
  41541d:	pop    r12
  41541f:	pop    r13
  415421:	pop    r14
  415423:	ret    
  415424:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  41542f:	nop
  415430:	endbr64 
  415434:	push   rbp
  415435:	push   rbx
  415436:	sub    rsp,0x8
  41543a:	mov    rax,0x469660
  415441:	cmp    QWORD PTR [rdi+0x8],rax
  415445:	jne    4154f8 <xmlStrEqual@plt+0x115b8>
  41544b:	mov    rbp,0x469e3c
  415452:	mov    rbx,rdi
  415455:	mov    ecx,DWORD PTR [rbp+0x0]
  415458:	test   ecx,ecx
  41545a:	jle    41546f <xmlStrEqual@plt+0x1152f>
  41545c:	lea    rsi,[rip+0x366f5]        # 44bb58 <xmlStrEqual@plt+0x47c18>
  415463:	mov    edi,0x5
  415468:	xor    eax,eax
  41546a:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  41546f:	mov    esi,0x5
  415474:	mov    rdi,rbx
  415477:	call   413110 <xmlStrEqual@plt+0xf1d0>
  41547c:	mov    rdi,rbx
  41547f:	mov    esi,0x5
  415484:	call   4135c0 <xmlStrEqual@plt+0xf680>
  415489:	mov    rdi,QWORD PTR [rbx+0x40]
  41548d:	test   rdi,rdi
  415490:	je     4154a3 <xmlStrEqual@plt+0x11563>
  415492:	mov    edx,DWORD PTR [rbp+0x0]
  415495:	test   edx,edx
  415497:	jg     4154b8 <xmlStrEqual@plt+0x11578>
  415499:	mov    esi,0x5
  41549e:	call   415370 <xmlStrEqual@plt+0x11430>
  4154a3:	mov    eax,DWORD PTR [rbp+0x0]
  4154a6:	test   eax,eax
  4154a8:	jg     4154d8 <xmlStrEqual@plt+0x11598>
  4154aa:	add    rsp,0x8
  4154ae:	pop    rbx
  4154af:	pop    rbp
  4154b0:	ret    
  4154b1:	nop    DWORD PTR [rax+0x0]
  4154b8:	mov    edi,0x5
  4154bd:	lea    rsi,[rip+0x3680d]        # 44bcd1 <xmlStrEqual@plt+0x47d91>
  4154c4:	xor    eax,eax
  4154c6:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  4154cb:	mov    rdi,QWORD PTR [rbx+0x40]
  4154cf:	jmp    415499 <xmlStrEqual@plt+0x11559>
  4154d1:	nop    DWORD PTR [rax+0x0]
  4154d8:	add    rsp,0x8
  4154dc:	pop    rbx
  4154dd:	lea    rsi,[rip+0x36808]        # 44bcec <xmlStrEqual@plt+0x47dac>
  4154e4:	mov    edi,0x5
  4154e9:	xor    eax,eax
  4154eb:	pop    rbp
  4154ec:	jmp    430e20 <xmlStrEqual@plt+0x2cee0>
  4154f1:	nop    DWORD PTR [rax+0x0]
  4154f8:	lea    rdx,[rip+0x35da1]        # 44b2a0 <xmlStrEqual@plt+0x47360>
  4154ff:	lea    rsi,[rip+0x36842]        # 44bd48 <xmlStrEqual@plt+0x47e08>
  415506:	lea    rdi,[rip+0x36676]        # 44bb83 <xmlStrEqual@plt+0x47c43>
  41550d:	call   4350f0 <xmlStrEqual@plt+0x311b0>
  415512:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41551c:	nop    DWORD PTR [rax+0x0]
  415520:	endbr64 
  415524:	mov    eax,0x1
  415529:	ret    
  41552a:	nop    WORD PTR [rax+rax*1+0x0]
  415530:	endbr64 
  415534:	mov    eax,0x1
  415539:	ret    
  41553a:	nop    WORD PTR [rax+rax*1+0x0]
  415540:	endbr64 
  415544:	mov    eax,0x1
  415549:	ret    
  41554a:	nop    WORD PTR [rax+rax*1+0x0]
  415550:	endbr64 
  415554:	xor    eax,eax
  415556:	ret    
  415557:	nop    WORD PTR [rax+rax*1+0x0]
  415560:	endbr64 
  415564:	sub    rsp,0x8
  415568:	mov    edi,0x28
  41556d:	call   434fe0 <xmlStrEqual@plt+0x310a0>
  415572:	add    rsp,0x8
  415576:	ret    
  415577:	nop    WORD PTR [rax+rax*1+0x0]
  415580:	endbr64 
  415584:	test   rdi,rdi
  415587:	je     4155a0 <xmlStrEqual@plt+0x11660>
  415589:	push   rbx
  41558a:	mov    rbx,rdi
  41558d:	mov    rdi,QWORD PTR [rdi]
  415590:	call   424bf0 <xmlStrEqual@plt+0x20cb0>
  415595:	mov    rdi,rbx
  415598:	pop    rbx
  415599:	jmp    4037b0 <free@plt>
  41559e:	xchg   ax,ax
  4155a0:	ret    
  4155a1:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4155ac:	nop    DWORD PTR [rax+0x0]
  4155b0:	endbr64 
  4155b4:	test   rdi,rdi
  4155b7:	je     4155d0 <xmlStrEqual@plt+0x11690>
  4155b9:	push   rbx
  4155ba:	mov    rbx,rdi
  4155bd:	mov    rdi,QWORD PTR [rdi]
  4155c0:	call   42bde0 <xmlStrEqual@plt+0x27ea0>
  4155c5:	mov    rdi,rbx
  4155c8:	pop    rbx
  4155c9:	jmp    4037b0 <free@plt>
  4155ce:	xchg   ax,ax
  4155d0:	ret    
  4155d1:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4155dc:	nop    DWORD PTR [rax+0x0]
  4155e0:	endbr64 
  4155e4:	push   rbx
  4155e5:	mov    rax,0x4696c0
  4155ec:	cmp    QWORD PTR [rdi+0x8],rax
  4155f0:	jne    415620 <xmlStrEqual@plt+0x116e0>
  4155f2:	mov    rbx,rdi
  4155f5:	mov    rsi,0x4155b0
  4155fc:	mov    rdi,QWORD PTR [rdi+0x20]
  415600:	call   4319b0 <xmlStrEqual@plt+0x2da70>
  415605:	mov    rdi,QWORD PTR [rbx+0x18]
  415609:	mov    rsi,0x415580
  415610:	pop    rbx
  415611:	jmp    4319b0 <xmlStrEqual@plt+0x2da70>
  415616:	nop    WORD PTR cs:[rax+rax*1+0x0]
  415620:	lea    rdx,[rip+0x36731]        # 44bd58 <xmlStrEqual@plt+0x47e18>
  415627:	lea    rsi,[rip+0x36b22]        # 44c150 <xmlStrEqual@plt+0x48210>
  41562e:	lea    rdi,[rip+0x36a9a]        # 44c0cf <xmlStrEqual@plt+0x4818f>
  415635:	call   4350f0 <xmlStrEqual@plt+0x311b0>
  41563a:	nop    WORD PTR [rax+rax*1+0x0]
  415640:	endbr64 
  415644:	push   rbx
  415645:	mov    rax,0x4696c0
  41564c:	cmp    QWORD PTR [rdi+0x8],rax
  415650:	jne    415680 <xmlStrEqual@plt+0x11740>
  415652:	mov    rax,0x469e3c
  415659:	mov    rbx,rdi
  41565c:	mov    eax,DWORD PTR [rax]
  41565e:	test   eax,eax
  415660:	jle    415675 <xmlStrEqual@plt+0x11735>
  415662:	lea    rsi,[rip+0x36a82]        # 44c0eb <xmlStrEqual@plt+0x481ab>
  415669:	mov    edi,0x5
  41566e:	xor    eax,eax
  415670:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  415675:	mov    rdi,rbx
  415678:	pop    rbx
  415679:	jmp    4037b0 <free@plt>
  41567e:	xchg   ax,ax
  415680:	lea    rdx,[rip+0x366d1]        # 44bd58 <xmlStrEqual@plt+0x47e18>
  415687:	lea    rsi,[rip+0x36ac2]        # 44c150 <xmlStrEqual@plt+0x48210>
  41568e:	lea    rdi,[rip+0x36a3a]        # 44c0cf <xmlStrEqual@plt+0x4818f>
  415695:	call   4350f0 <xmlStrEqual@plt+0x311b0>
  41569a:	nop    WORD PTR [rax+rax*1+0x0]
  4156a0:	endbr64 
  4156a4:	push   rbx
  4156a5:	mov    rax,0x4696c0
  4156ac:	cmp    QWORD PTR [rdi+0x8],rax
  4156b0:	jne    415720 <xmlStrEqual@plt+0x117e0>
  4156b2:	xor    eax,eax
  4156b4:	mov    rbx,rdi
  4156b7:	call   431e70 <xmlStrEqual@plt+0x2df30>
  4156bc:	mov    QWORD PTR [rbx+0x18],rax
  4156c0:	xor    eax,eax
  4156c2:	call   431e70 <xmlStrEqual@plt+0x2df30>
  4156c7:	cmp    QWORD PTR [rbx+0x18],0x0
  4156cc:	mov    QWORD PTR [rbx+0x20],rax
  4156d0:	je     415710 <xmlStrEqual@plt+0x117d0>
  4156d2:	test   rax,rax
  4156d5:	je     415710 <xmlStrEqual@plt+0x117d0>
  4156d7:	mov    rax,0x469e3c
  4156de:	mov    ebx,0x1
  4156e3:	mov    eax,DWORD PTR [rax]
  4156e5:	test   eax,eax
  4156e7:	jg     4156f0 <xmlStrEqual@plt+0x117b0>
  4156e9:	mov    eax,ebx
  4156eb:	pop    rbx
  4156ec:	ret    
  4156ed:	nop    DWORD PTR [rax]
  4156f0:	xor    eax,eax
  4156f2:	lea    rsi,[rip+0x36687]        # 44bd80 <xmlStrEqual@plt+0x47e40>
  4156f9:	mov    edi,0x5
  4156fe:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  415703:	mov    eax,ebx
  415705:	pop    rbx
  415706:	ret    
  415707:	nop    WORD PTR [rax+rax*1+0x0]
  415710:	xor    ebx,ebx
  415712:	mov    eax,ebx
  415714:	pop    rbx
  415715:	ret    
  415716:	nop    WORD PTR cs:[rax+rax*1+0x0]
  415720:	lea    rdx,[rip+0x36631]        # 44bd58 <xmlStrEqual@plt+0x47e18>
  415727:	lea    rsi,[rip+0x36a22]        # 44c150 <xmlStrEqual@plt+0x48210>
  41572e:	lea    rdi,[rip+0x3699a]        # 44c0cf <xmlStrEqual@plt+0x4818f>
  415735:	call   4350f0 <xmlStrEqual@plt+0x311b0>
  41573a:	nop    WORD PTR [rax+rax*1+0x0]
  415740:	endbr64 
  415744:	push   r15
  415746:	push   r14
  415748:	push   r13
  41574a:	push   r12
  41574c:	push   rbp
  41574d:	push   rbx
  41574e:	sub    rsp,0x138
  415755:	mov    rax,QWORD PTR fs:0x28
  41575e:	mov    QWORD PTR [rsp+0x128],rax
  415766:	xor    eax,eax
  415768:	mov    rax,0x4696c0
  41576f:	cmp    QWORD PTR [rdi+0x8],rax
  415773:	jne    415990 <xmlStrEqual@plt+0x11a50>
  415779:	mov    rbx,rdi
  41577c:	mov    rdi,rsi
  41577f:	mov    r13,rsi
  415782:	mov    r15,rdx
  415785:	call   422c30 <xmlStrEqual@plt+0x1ecf0>
  41578a:	mov    r12d,eax
  41578d:	cmp    eax,0x8
  415790:	je     415968 <xmlStrEqual@plt+0x11a28>
  415796:	mov    rbp,0x469e3c
  41579d:	xor    r15d,r15d
  4157a0:	cmp    r12d,0x4
  4157a4:	ja     4158e0 <xmlStrEqual@plt+0x119a0>
  4157aa:	cmp    r12d,0x2
  4157ae:	jae    415910 <xmlStrEqual@plt+0x119d0>
  4157b4:	cmp    r12d,0x1
  4157b8:	jne    4158e6 <xmlStrEqual@plt+0x119a6>
  4157be:	vmovdqu xmm0,XMMWORD PTR [r13+0x0]
  4157c4:	vmovdqu xmm1,XMMWORD PTR [r13+0x10]
  4157ca:	vmovdqu xmm2,XMMWORD PTR [r13+0x20]
  4157d0:	vmovdqu xmm3,XMMWORD PTR [r13+0x30]
  4157d6:	xor    eax,eax
  4157d8:	vmovaps XMMWORD PTR [rsp+0x40],xmm0
  4157de:	vmovaps XMMWORD PTR [rsp+0x50],xmm1
  4157e4:	vmovaps XMMWORD PTR [rsp+0x60],xmm2
  4157ea:	vmovaps XMMWORD PTR [rsp+0x70],xmm3
  4157f0:	lea    r14,[rsp+0x40]
  4157f5:	call   424be0 <xmlStrEqual@plt+0x20ca0>
  4157fa:	mov    r13,rax
  4157fd:	mov    rdi,r14
  415800:	mov    QWORD PTR [rsp+0x10],rax
  415805:	mov    QWORD PTR [rsp+0x8],r14
  41580a:	call   4235e0 <xmlStrEqual@plt+0x1f6a0>
  41580f:	mov    rsi,r13
  415812:	mov    rdi,r14
  415815:	mov    QWORD PTR [rsp+0x18],rax
  41581a:	call   422eb0 <xmlStrEqual@plt+0x1ef70>
  41581f:	mov    r12d,eax
  415822:	cmp    eax,0x1
  415825:	jne    415940 <xmlStrEqual@plt+0x11a00>
  41582b:	mov    edi,DWORD PTR [rbp+0x0]
  41582e:	test   edi,edi
  415830:	jle    415852 <xmlStrEqual@plt+0x11912>
  415832:	mov    rdi,QWORD PTR [rsp+0x10]
  415837:	call   424d40 <xmlStrEqual@plt+0x20e00>
  41583c:	mov    rdx,rax
  41583f:	lea    rsi,[rip+0x368ba]        # 44c100 <xmlStrEqual@plt+0x481c0>
  415846:	mov    edi,0x5
  41584b:	xor    eax,eax
  41584d:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  415852:	mov    rax,QWORD PTR [rsp+0x18]
  415857:	movzx  eax,BYTE PTR [rax]
  41585a:	test   al,0x2
  41585c:	jne    415d08 <xmlStrEqual@plt+0x11dc8>
  415862:	test   al,0x1
  415864:	je     415a60 <xmlStrEqual@plt+0x11b20>
  41586a:	mov    eax,DWORD PTR [rbp+0x0]
  41586d:	cmp    eax,0x1
  415870:	jle    415890 <xmlStrEqual@plt+0x11950>
  415872:	xor    eax,eax
  415874:	lea    rsi,[rip+0x36387]        # 44bc02 <xmlStrEqual@plt+0x47cc2>
  41587b:	mov    edi,0x6
  415880:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  415885:	mov    eax,DWORD PTR [rbp+0x0]
  415888:	nop    DWORD PTR [rax+rax*1+0x0]
  415890:	xor    r12d,r12d
  415893:	test   eax,eax
  415895:	jle    4158aa <xmlStrEqual@plt+0x1196a>
  415897:	lea    rsi,[rip+0x3660a]        # 44bea8 <xmlStrEqual@plt+0x47f68>
  41589e:	mov    edi,0x5
  4158a3:	xor    eax,eax
  4158a5:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  4158aa:	mov    rcx,QWORD PTR [rsp+0x128]
  4158b2:	xor    rcx,QWORD PTR fs:0x28
  4158bb:	mov    eax,r12d
  4158be:	jne    415db0 <xmlStrEqual@plt+0x11e70>
  4158c4:	add    rsp,0x138
  4158cb:	pop    rbx
  4158cc:	pop    rbp
  4158cd:	pop    r12
  4158cf:	pop    r13
  4158d1:	pop    r14
  4158d3:	pop    r15
  4158d5:	ret    
  4158d6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4158e0:	cmp    r12d,0x7
  4158e4:	je     415910 <xmlStrEqual@plt+0x119d0>
  4158e6:	mov    eax,DWORD PTR [rbp+0x0]
  4158e9:	cmp    eax,0x2
  4158ec:	jle    415890 <xmlStrEqual@plt+0x11950>
  4158ee:	xor    eax,eax
  4158f0:	mov    edx,r12d
  4158f3:	lea    rsi,[rip+0x3656e]        # 44be68 <xmlStrEqual@plt+0x47f28>
  4158fa:	mov    edi,0x7
  4158ff:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  415904:	mov    eax,DWORD PTR [rbp+0x0]
  415907:	jmp    415890 <xmlStrEqual@plt+0x11950>
  415909:	nop    DWORD PTR [rax+0x0]
  415910:	mov    eax,DWORD PTR [rbp+0x0]
  415913:	cmp    eax,0x2
  415916:	jle    415890 <xmlStrEqual@plt+0x11950>
  41591c:	xor    eax,eax
  41591e:	mov    edx,r12d
  415921:	lea    rsi,[rip+0x36500]        # 44be28 <xmlStrEqual@plt+0x47ee8>
  415928:	mov    edi,0x7
  41592d:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  415932:	mov    eax,DWORD PTR [rbp+0x0]
  415935:	jmp    415890 <xmlStrEqual@plt+0x11950>
  41593a:	nop    WORD PTR [rax+rax*1+0x0]
  415940:	xor    edi,edi
  415942:	call   42e2b0 <xmlStrEqual@plt+0x2a370>
  415947:	xor    r13d,r13d
  41594a:	mov    rdi,r13
  41594d:	call   424bf0 <xmlStrEqual@plt+0x20cb0>
  415952:	mov    rdi,QWORD PTR [rsp+0x10]
  415957:	call   424bf0 <xmlStrEqual@plt+0x20cb0>
  41595c:	mov    eax,DWORD PTR [rbp+0x0]
  41595f:	jmp    415890 <xmlStrEqual@plt+0x11950>
  415964:	nop    DWORD PTR [rax+0x0]
  415968:	mov    rdi,r13
  41596b:	call   422ca0 <xmlStrEqual@plt+0x1ed60>
  415970:	mov    rdi,r13
  415973:	test   BYTE PTR [rax],0x8
  415976:	jne    4159b0 <xmlStrEqual@plt+0x11a70>
  415978:	call   422ce0 <xmlStrEqual@plt+0x1eda0>
  41597d:	cmp    eax,0x1
  415980:	je     4159e0 <xmlStrEqual@plt+0x11aa0>
  415982:	xor    r12d,r12d
  415985:	jmp    4158aa <xmlStrEqual@plt+0x1196a>
  41598a:	nop    WORD PTR [rax+rax*1+0x0]
  415990:	lea    rdx,[rip+0x363c1]        # 44bd58 <xmlStrEqual@plt+0x47e18>
  415997:	lea    rsi,[rip+0x367b2]        # 44c150 <xmlStrEqual@plt+0x48210>
  41599e:	lea    rdi,[rip+0x3672a]        # 44c0cf <xmlStrEqual@plt+0x4818f>
  4159a5:	call   4350f0 <xmlStrEqual@plt+0x311b0>
  4159aa:	nop    WORD PTR [rax+rax*1+0x0]
  4159b0:	call   424180 <xmlStrEqual@plt+0x20240>
  4159b5:	mov    rax,0x469e3c
  4159bc:	cmp    DWORD PTR [rax],0x1
  4159bf:	jle    415982 <xmlStrEqual@plt+0x11a42>
  4159c1:	mov    rdi,r13
  4159c4:	call   424180 <xmlStrEqual@plt+0x20240>
  4159c9:	mov    edx,eax
  4159cb:	lea    rsi,[rip+0x34c36]        # 44a608 <xmlStrEqual@plt+0x466c8>
  4159d2:	mov    edi,0x6
  4159d7:	xor    eax,eax
  4159d9:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  4159de:	jmp    415982 <xmlStrEqual@plt+0x11a42>
  4159e0:	lea    rbp,[rsp+0xd0]
  4159e8:	mov    rsi,rbp
  4159eb:	mov    rdi,r13
  4159ee:	call   4366e0 <xmlStrEqual@plt+0x327a0>
  4159f3:	movzx  edx,WORD PTR [rsp+0x110]
  4159fb:	movzx  esi,WORD PTR [rsp+0x112]
  415a03:	mov    r8,rbp
  415a06:	lea    rcx,[rbp+0x20]
  415a0a:	lea    rdi,[rsp+0x80]
  415a12:	call   439130 <xmlStrEqual@plt+0x351f0>
  415a17:	mov    rdi,r13
  415a1a:	call   422c30 <xmlStrEqual@plt+0x1ecf0>
  415a1f:	mov    rbp,0x469e3c
  415a26:	mov    r12d,eax
  415a29:	mov    r8d,DWORD PTR [rbp+0x0]
  415a2d:	test   r8d,r8d
  415a30:	jle    4157a0 <xmlStrEqual@plt+0x11860>
  415a36:	mov    rdi,r13
  415a39:	call   423f50 <xmlStrEqual@plt+0x20010>
  415a3e:	mov    rdx,rax
  415a41:	lea    rsi,[rip+0x36358]        # 44bda0 <xmlStrEqual@plt+0x47e60>
  415a48:	mov    edi,0x5
  415a4d:	xor    eax,eax
  415a4f:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  415a54:	jmp    4157a0 <xmlStrEqual@plt+0x11860>
  415a59:	nop    DWORD PTR [rax+0x0]
  415a60:	mov    rdi,0x424bf0
  415a67:	xor    r14d,r14d
  415a6a:	call   42dca0 <xmlStrEqual@plt+0x29d60>
  415a6f:	mov    rdi,QWORD PTR [rsp+0x8]
  415a74:	mov    rsi,rax
  415a77:	mov    QWORD PTR [rsp+0x28],rax
  415a7c:	call   422f40 <xmlStrEqual@plt+0x1f000>
  415a81:	mov    rax,QWORD PTR [rsp+0x18]
  415a86:	xor    edx,edx
  415a88:	cmp    BYTE PTR [rax+0x3],0x0
  415a8c:	je     415be5 <xmlStrEqual@plt+0x11ca5>
  415a92:	mov    DWORD PTR [rsp+0x3c],r12d
  415a97:	mov    QWORD PTR [rsp+0x20],r15
  415a9c:	mov    r12d,edx
  415a9f:	mov    r15,QWORD PTR [rsp+0x18]
  415aa4:	jmp    415b59 <xmlStrEqual@plt+0x11c19>
  415aa9:	nop    DWORD PTR [rax+0x0]
  415ab0:	mov    rdi,QWORD PTR [rbx+0x20]
  415ab4:	mov    rsi,r13
  415ab7:	call   432d40 <xmlStrEqual@plt+0x2ee00>
  415abc:	test   rax,rax
  415abf:	mov    QWORD PTR [rsp+0x18],rax
  415ac4:	je     415c20 <xmlStrEqual@plt+0x11ce0>
  415aca:	mov    edi,0x6
  415acf:	xor    eax,eax
  415ad1:	call   423cc0 <xmlStrEqual@plt+0x1fd80>
  415ad6:	mov    rcx,QWORD PTR [rsp+0x18]
  415adb:	mov    r14,rax
  415ade:	mov    rsi,QWORD PTR [rcx]
  415ae1:	mov    rdi,rax
  415ae4:	call   423950 <xmlStrEqual@plt+0x1fa10>
  415ae9:	movzx  eax,WORD PTR [r14+0x24]
  415aee:	cmp    ax,0xffff
  415af2:	je     404044 <xmlStrEqual@plt+0x104>
  415af8:	mov    rdx,QWORD PTR [r14+0x30]
  415afc:	mov    rcx,QWORD PTR [r15+0x4]
  415b00:	mov    rsi,r14
  415b03:	mov    QWORD PTR [rdx+rax*1+0x4],rcx
  415b08:	mov    rdx,QWORD PTR [rsp+0x20]
  415b0d:	mov    rdi,rbx
  415b10:	call   4089b0 <xmlStrEqual@plt+0x4a70>
  415b15:	cmp    eax,0x1
  415b18:	je     415ce0 <xmlStrEqual@plt+0x11da0>
  415b1e:	mov    ecx,DWORD PTR [rbp+0x0]
  415b21:	test   ecx,ecx
  415b23:	jle    415b38 <xmlStrEqual@plt+0x11bf8>
  415b25:	lea    rsi,[rip+0x3611e]        # 44bc4a <xmlStrEqual@plt+0x47d0a>
  415b2c:	mov    edi,0x5
  415b31:	xor    eax,eax
  415b33:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  415b38:	mov    rdi,r14
  415b3b:	call   430820 <xmlStrEqual@plt+0x2c8e0>
  415b40:	mov    rdi,r13
  415b43:	call   424bf0 <xmlStrEqual@plt+0x20cb0>
  415b48:	movzx  eax,BYTE PTR [r15+0x3]
  415b4d:	inc    r12d
  415b50:	cmp    r12d,eax
  415b53:	jge    415be0 <xmlStrEqual@plt+0x11ca0>
  415b59:	xor    eax,eax
  415b5b:	call   424be0 <xmlStrEqual@plt+0x20ca0>
  415b60:	mov    rdi,QWORD PTR [rsp+0x8]
  415b65:	mov    rsi,rax
  415b68:	mov    r13,rax
  415b6b:	call   422ef0 <xmlStrEqual@plt+0x1efb0>
  415b70:	cmp    eax,0x1
  415b73:	jne    415d90 <xmlStrEqual@plt+0x11e50>
  415b79:	mov    rdi,QWORD PTR [rbx+0x18]
  415b7d:	mov    rsi,r13
  415b80:	call   432d40 <xmlStrEqual@plt+0x2ee00>
  415b85:	mov    r14,rax
  415b88:	test   rax,rax
  415b8b:	jne    415ab0 <xmlStrEqual@plt+0x11b70>
  415b91:	mov    r9,QWORD PTR [r15+0x4]
  415b95:	xor    esi,esi
  415b97:	mov    r8d,0x1
  415b9d:	xor    ecx,ecx
  415b9f:	mov    edx,0x5
  415ba4:	mov    rdi,r13
  415ba7:	call   423ed0 <xmlStrEqual@plt+0x1ff90>
  415bac:	mov    esi,DWORD PTR [rbp+0x0]
  415baf:	mov    r14,rax
  415bb2:	test   esi,esi
  415bb4:	jg     415d30 <xmlStrEqual@plt+0x11df0>
  415bba:	mov    rdx,QWORD PTR [rsp+0x20]
  415bbf:	mov    rsi,r14
  415bc2:	mov    rdi,rbx
  415bc5:	call   4089b0 <xmlStrEqual@plt+0x4a70>
  415bca:	test   r14,r14
  415bcd:	je     415b40 <xmlStrEqual@plt+0x11c00>
  415bd3:	jmp    415b38 <xmlStrEqual@plt+0x11bf8>
  415bd8:	nop    DWORD PTR [rax+rax*1+0x0]
  415be0:	mov    r12d,DWORD PTR [rsp+0x3c]
  415be5:	mov    rdi,QWORD PTR [rsp+0x28]
  415bea:	call   42e2b0 <xmlStrEqual@plt+0x2a370>
  415bef:	mov    rdi,QWORD PTR [rsp+0x10]
  415bf4:	call   424bf0 <xmlStrEqual@plt+0x20cb0>
  415bf9:	cmp    DWORD PTR [rbp+0x0],0x2
  415bfd:	jle    4158aa <xmlStrEqual@plt+0x1196a>
  415c03:	lea    rsi,[rip+0x362ce]        # 44bed8 <xmlStrEqual@plt+0x47f98>
  415c0a:	mov    edi,0x7
  415c0f:	xor    eax,eax
  415c11:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  415c16:	jmp    4158aa <xmlStrEqual@plt+0x1196a>
  415c1b:	nop    DWORD PTR [rax+rax*1+0x0]
  415c20:	mov    rdi,QWORD PTR [rbx+0x20]
  415c24:	mov    rsi,r13
  415c27:	call   4330f0 <xmlStrEqual@plt+0x2f1b0>
  415c2c:	mov    rdi,rax
  415c2f:	mov    QWORD PTR [rsp+0x18],rax
  415c34:	call   4256d0 <xmlStrEqual@plt+0x21790>
  415c39:	mov    rdi,QWORD PTR [r14]
  415c3c:	mov    WORD PTR [rsp+0x30],ax
  415c41:	call   4256d0 <xmlStrEqual@plt+0x21790>
  415c46:	mov    r10,QWORD PTR [rsp+0x18]
  415c4b:	cmp    WORD PTR [rsp+0x30],ax
  415c50:	jae    415c55 <xmlStrEqual@plt+0x11d15>
  415c52:	mov    r10,QWORD PTR [r14]
  415c55:	mov    r9,QWORD PTR [r15+0x4]
  415c59:	xor    r8d,r8d
  415c5c:	mov    rdi,r10
  415c5f:	mov    ecx,0x1
  415c64:	mov    edx,0x4
  415c69:	mov    esi,0xf
  415c6e:	mov    QWORD PTR [rsp+0x30],r10
  415c73:	call   423ed0 <xmlStrEqual@plt+0x1ff90>
  415c78:	mov    r14,rax
  415c7b:	mov    eax,DWORD PTR [rbp+0x0]
  415c7e:	mov    r10,QWORD PTR [rsp+0x30]
  415c83:	test   eax,eax
  415c85:	jle    415cb7 <xmlStrEqual@plt+0x11d77>
  415c87:	mov    rdi,r10
  415c8a:	call   424d40 <xmlStrEqual@plt+0x20e00>
  415c8f:	mov    rdi,r13
  415c92:	mov    QWORD PTR [rsp+0x30],rax
  415c97:	call   424d40 <xmlStrEqual@plt+0x20e00>
  415c9c:	mov    rcx,QWORD PTR [rsp+0x30]
  415ca1:	mov    rdx,rax
  415ca4:	lea    rsi,[rip+0x3611d]        # 44bdc8 <xmlStrEqual@plt+0x47e88>
  415cab:	mov    edi,0x5
  415cb0:	xor    eax,eax
  415cb2:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  415cb7:	mov    rdx,QWORD PTR [rsp+0x20]
  415cbc:	mov    rdi,rbx
  415cbf:	mov    rsi,r14
  415cc2:	call   4089b0 <xmlStrEqual@plt+0x4a70>
  415cc7:	mov    rdi,QWORD PTR [rsp+0x18]
  415ccc:	call   424bf0 <xmlStrEqual@plt+0x20cb0>
  415cd1:	jmp    415bca <xmlStrEqual@plt+0x11c8a>
  415cd6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  415ce0:	mov    edx,DWORD PTR [rbp+0x0]
  415ce3:	test   edx,edx
  415ce5:	jle    415b38 <xmlStrEqual@plt+0x11bf8>
  415ceb:	lea    rsi,[rip+0x35f74]        # 44bc66 <xmlStrEqual@plt+0x47d26>
  415cf2:	mov    edi,0x5
  415cf7:	xor    eax,eax
  415cf9:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  415cfe:	jmp    415b38 <xmlStrEqual@plt+0x11bf8>
  415d03:	nop    DWORD PTR [rax+rax*1+0x0]
  415d08:	mov    eax,DWORD PTR [rbp+0x0]
  415d0b:	cmp    eax,0x1
  415d0e:	jle    415890 <xmlStrEqual@plt+0x11950>
  415d14:	xor    eax,eax
  415d16:	lea    rsi,[rip+0x35eca]        # 44bbe7 <xmlStrEqual@plt+0x47ca7>
  415d1d:	mov    edi,0x6
  415d22:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  415d27:	mov    eax,DWORD PTR [rbp+0x0]
  415d2a:	jmp    415890 <xmlStrEqual@plt+0x11950>
  415d2f:	nop
  415d30:	mov    rdi,r13
  415d33:	call   424d40 <xmlStrEqual@plt+0x20e00>
  415d38:	mov    rdx,rax
  415d3b:	lea    rsi,[rip+0x356c6]        # 44b408 <xmlStrEqual@plt+0x474c8>
  415d42:	xor    eax,eax
  415d44:	mov    edi,0x5
  415d49:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  415d4e:	cmp    DWORD PTR [rbp+0x0],0x1
  415d52:	jle    415bba <xmlStrEqual@plt+0x11c7a>
  415d58:	mov    rdi,r13
  415d5b:	call   424d40 <xmlStrEqual@plt+0x20e00>
  415d60:	mov    rdi,r14
  415d63:	mov    QWORD PTR [rsp+0x18],rax
  415d68:	call   423f50 <xmlStrEqual@plt+0x20010>
  415d6d:	mov    rcx,QWORD PTR [rsp+0x18]
  415d72:	mov    rdx,rax
  415d75:	lea    rsi,[rip+0x35e9f]        # 44bc1b <xmlStrEqual@plt+0x47cdb>
  415d7c:	mov    edi,0x6
  415d81:	xor    eax,eax
  415d83:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  415d88:	jmp    415bba <xmlStrEqual@plt+0x11c7a>
  415d8d:	nop    DWORD PTR [rax]
  415d90:	mov    rdi,QWORD PTR [rsp+0x28]
  415d95:	call   42e2b0 <xmlStrEqual@plt+0x2a370>
  415d9a:	test   r14,r14
  415d9d:	je     41594a <xmlStrEqual@plt+0x11a0a>
  415da3:	mov    rdi,r14
  415da6:	call   430820 <xmlStrEqual@plt+0x2c8e0>
  415dab:	jmp    41594a <xmlStrEqual@plt+0x11a0a>
  415db0:	call   403c00 <__stack_chk_fail@plt>
  415db5:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  415dc0:	endbr64 
  415dc4:	test   rsi,rsi
  415dc7:	je     415df0 <xmlStrEqual@plt+0x11eb0>
  415dc9:	sub    rsp,0x8
  415dcd:	mov    rdx,rsi
  415dd0:	mov    rdi,QWORD PTR [rdi+0x18]
  415dd4:	mov    rsi,QWORD PTR [rsi]
  415dd7:	call   4321e0 <xmlStrEqual@plt+0x2e2a0>
  415ddc:	test   eax,eax
  415dde:	setne  al
  415de1:	movzx  eax,al
  415de4:	add    rsp,0x8
  415de8:	ret    
  415de9:	nop    DWORD PTR [rax+0x0]
  415df0:	xor    eax,eax
  415df2:	ret    
  415df3:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  415dfe:	xchg   ax,ax
  415e00:	endbr64 
  415e04:	mov    rdi,QWORD PTR [rdi+0x18]
  415e08:	jmp    432f40 <xmlStrEqual@plt+0x2f000>
  415e0d:	nop    DWORD PTR [rax]
  415e10:	endbr64 
  415e14:	test   rsi,rsi
  415e17:	je     415e40 <xmlStrEqual@plt+0x11f00>
  415e19:	sub    rsp,0x8
  415e1d:	mov    rdx,rsi
  415e20:	mov    rdi,QWORD PTR [rdi+0x20]
  415e24:	mov    rsi,QWORD PTR [rsi]
  415e27:	call   4321e0 <xmlStrEqual@plt+0x2e2a0>
  415e2c:	test   eax,eax
  415e2e:	setne  al
  415e31:	movzx  eax,al
  415e34:	add    rsp,0x8
  415e38:	ret    
  415e39:	nop    DWORD PTR [rax+0x0]
  415e40:	xor    eax,eax
  415e42:	ret    
  415e43:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  415e4e:	xchg   ax,ax
  415e50:	endbr64 
  415e54:	mov    rdi,QWORD PTR [rdi+0x20]
  415e58:	jmp    432f40 <xmlStrEqual@plt+0x2f000>
  415e5d:	nop    DWORD PTR [rax]
  415e60:	endbr64 
  415e64:	push   r15
  415e66:	push   r14
  415e68:	push   r13
  415e6a:	push   r12
  415e6c:	mov    r12,rdi
  415e6f:	push   rbp
  415e70:	push   rbx
  415e71:	mov    ebx,esi
  415e73:	sub    rsp,0x848
  415e7a:	mov    rax,QWORD PTR fs:0x28
  415e83:	mov    QWORD PTR [rsp+0x838],rax
  415e8b:	xor    eax,eax
  415e8d:	cmp    esi,0x4
  415e90:	jle    415ecb <xmlStrEqual@plt+0x11f8b>
  415e92:	mov    rax,0x469e3c
  415e99:	mov    eax,DWORD PTR [rax]
  415e9b:	add    eax,0x4
  415e9e:	cmp    esi,eax
  415ea0:	jle    415ecb <xmlStrEqual@plt+0x11f8b>
  415ea2:	mov    rax,QWORD PTR [rsp+0x838]
  415eaa:	xor    rax,QWORD PTR fs:0x28
  415eb3:	jne    4161c6 <xmlStrEqual@plt+0x12286>
  415eb9:	add    rsp,0x848
  415ec0:	pop    rbx
  415ec1:	pop    rbp
  415ec2:	pop    r12
  415ec4:	pop    r13
  415ec6:	pop    r14
  415ec8:	pop    r15
  415eca:	ret    
  415ecb:	lea    rsi,[rip+0x3603e]        # 44bf10 <xmlStrEqual@plt+0x47fd0>
  415ed2:	mov    edi,ebx
  415ed4:	xor    eax,eax
  415ed6:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  415edb:	call   42dc90 <xmlStrEqual@plt+0x29d50>
  415ee0:	mov    r15,rax
  415ee3:	mov    QWORD PTR [rsp+0x18],rax
  415ee8:	mov    rax,QWORD PTR [r12+0x18]
  415eed:	mov    rsi,r15
  415ef0:	mov    rdi,QWORD PTR [rax]
  415ef3:	call   42dcf0 <xmlStrEqual@plt+0x29db0>
  415ef8:	mov    rax,QWORD PTR [r12+0x18]
  415efd:	mov    rsi,r15
  415f00:	mov    rdi,QWORD PTR [rax+0x8]
  415f04:	call   42dcf0 <xmlStrEqual@plt+0x29db0>
  415f09:	mov    rsi,QWORD PTR [r12+0x18]
  415f0e:	mov    rax,QWORD PTR [rsi+0x10]
  415f12:	mov    rdi,QWORD PTR [rax]
  415f15:	mov    edx,DWORD PTR [rdi]
  415f17:	test   edx,edx
  415f19:	je     415f71 <xmlStrEqual@plt+0x12031>
  415f1b:	xor    ebp,ebp
  415f1d:	jmp    415f2c <xmlStrEqual@plt+0x11fec>
  415f1f:	mov    rax,QWORD PTR [rsi+0x10]
  415f23:	inc    ebp
  415f25:	mov    rdi,QWORD PTR [rax]
  415f28:	cmp    DWORD PTR [rdi],ebp
  415f2a:	je     415f71 <xmlStrEqual@plt+0x12031>
  415f2c:	mov    ecx,ebp
  415f2e:	mov    r8,QWORD PTR [rdi+0x10]
  415f32:	lea    eax,[rbp+rbp*1+0x0]
  415f36:	and    eax,0x1e
  415f39:	shr    ecx,0x4
  415f3c:	mov    edx,eax
  415f3e:	mov    eax,DWORD PTR [r8+rcx*4]
  415f42:	shrx   eax,eax,edx
  415f47:	test   al,0x3
  415f49:	jne    415f1f <xmlStrEqual@plt+0x11fdf>
  415f4b:	mov    rdx,QWORD PTR [rdi+0x20]
  415f4f:	mov    eax,ebp
  415f51:	mov    rdi,QWORD PTR [rdx+rax*8]
  415f55:	mov    rsi,QWORD PTR [rsp+0x18]
  415f5a:	inc    ebp
  415f5c:	call   42dcf0 <xmlStrEqual@plt+0x29db0>
  415f61:	mov    rsi,QWORD PTR [r12+0x18]
  415f66:	mov    rax,QWORD PTR [rsi+0x10]
  415f6a:	mov    rdi,QWORD PTR [rax]
  415f6d:	cmp    DWORD PTR [rdi],ebp
  415f6f:	jne    415f2c <xmlStrEqual@plt+0x11fec>
  415f71:	mov    rax,QWORD PTR [rsi+0x18]
  415f75:	mov    rdi,QWORD PTR [rax]
  415f78:	mov    eax,DWORD PTR [rdi]
  415f7a:	test   eax,eax
  415f7c:	je     415fd4 <xmlStrEqual@plt+0x12094>
  415f7e:	xor    ebp,ebp
  415f80:	jmp    415f8f <xmlStrEqual@plt+0x1204f>
  415f82:	mov    rax,QWORD PTR [rsi+0x18]
  415f86:	inc    ebp
  415f88:	mov    rdi,QWORD PTR [rax]
  415f8b:	cmp    DWORD PTR [rdi],ebp
  415f8d:	je     415fd4 <xmlStrEqual@plt+0x12094>
  415f8f:	mov    ecx,ebp
  415f91:	mov    r8,QWORD PTR [rdi+0x10]
  415f95:	lea    eax,[rbp+rbp*1+0x0]
  415f99:	and    eax,0x1e
  415f9c:	shr    ecx,0x4
  415f9f:	mov    edx,eax
  415fa1:	mov    eax,DWORD PTR [r8+rcx*4]
  415fa5:	shrx   eax,eax,edx
  415faa:	test   al,0x3
  415fac:	jne    415f82 <xmlStrEqual@plt+0x12042>
  415fae:	mov    rdx,QWORD PTR [rdi+0x20]
  415fb2:	mov    eax,ebp
  415fb4:	mov    rdi,QWORD PTR [rdx+rax*8]
  415fb8:	mov    rsi,QWORD PTR [rsp+0x18]
  415fbd:	inc    ebp
  415fbf:	call   42dcf0 <xmlStrEqual@plt+0x29db0>
  415fc4:	mov    rsi,QWORD PTR [r12+0x18]
  415fc9:	mov    rax,QWORD PTR [rsi+0x18]
  415fcd:	mov    rdi,QWORD PTR [rax]
  415fd0:	cmp    DWORD PTR [rdi],ebp
  415fd2:	jne    415f8f <xmlStrEqual@plt+0x1204f>
  415fd4:	mov    r15,QWORD PTR [rsp+0x18]
  415fd9:	mov    rdi,QWORD PTR [rsi+0x20]
  415fdd:	mov    rsi,r15
  415fe0:	call   42dcf0 <xmlStrEqual@plt+0x29db0>
  415fe5:	mov    rax,QWORD PTR [r12+0x18]
  415fea:	mov    rsi,r15
  415fed:	mov    rdi,QWORD PTR [rax+0x20]
  415ff1:	call   42dcf0 <xmlStrEqual@plt+0x29db0>
  415ff6:	mov    rcx,QWORD PTR [r15+0x8]
  415ffa:	mov    QWORD PTR [rsp+0x8],rcx
  415fff:	cmp    r15,rcx
  416002:	je     416166 <xmlStrEqual@plt+0x12226>
  416008:	lea    rax,[rsp+0x20]
  41600d:	mov    QWORD PTR [rsp+0x10],rax
  416012:	lea    rax,[rsp+0x430]
  41601a:	mov    QWORD PTR [rsp],rax
  41601e:	lea    rbp,[rip+0x360e8]        # 44c10d <xmlStrEqual@plt+0x481cd>
  416025:	mov    rax,QWORD PTR [rsp+0x8]
  41602a:	mov    rax,QWORD PTR [rax+0x10]
  41602e:	mov    r15,QWORD PTR [rax]
  416031:	test   r15,r15
  416034:	je     41614d <xmlStrEqual@plt+0x1220d>
  41603a:	mov    r12,QWORD PTR [rsp+0x10]
  41603f:	jmp    416069 <xmlStrEqual@plt+0x12129>
  416041:	nop    DWORD PTR [rax+0x0]
  416048:	mov    rax,QWORD PTR [r15+0x10]
  41604c:	mov    rdx,QWORD PTR [r15+0x18]
  416050:	test   rax,rax
  416053:	je     416130 <xmlStrEqual@plt+0x121f0>
  416059:	test   rdx,rdx
  41605c:	je     416066 <xmlStrEqual@plt+0x12126>
  41605e:	mov    QWORD PTR [r12],rdx
  416062:	add    r12,0x8
  416066:	mov    r15,rax
  416069:	cmp    QWORD PTR [r15+0x8],0x0
  41606e:	je     416048 <xmlStrEqual@plt+0x12108>
  416070:	mov    rax,QWORD PTR [r15+0x28]
  416074:	mov    r13,QWORD PTR [rax]
  416077:	test   r13,r13
  41607a:	je     416048 <xmlStrEqual@plt+0x12108>
  41607c:	mov    r14,QWORD PTR [rsp]
  416080:	cmp    QWORD PTR [r13+0x8],0x0
  416085:	je     4160a5 <xmlStrEqual@plt+0x12165>
  416087:	mov    rax,QWORD PTR [r13+0x28]
  41608b:	test   rax,rax
  41608e:	je     4160a5 <xmlStrEqual@plt+0x12165>
  416090:	cmp    ebx,0x4
  416093:	jle    416100 <xmlStrEqual@plt+0x121c0>
  416095:	mov    rdx,0x469e3c
  41609c:	mov    edx,DWORD PTR [rdx]
  41609e:	add    edx,0x4
  4160a1:	cmp    ebx,edx
  4160a3:	jle    416100 <xmlStrEqual@plt+0x121c0>
  4160a5:	mov    rax,QWORD PTR [r13+0x10]
  4160a9:	mov    r13,QWORD PTR [r13+0x18]
  4160ad:	test   rax,rax
  4160b0:	je     4160d8 <xmlStrEqual@plt+0x12198>
  4160b2:	test   r13,r13
  4160b5:	je     416120 <xmlStrEqual@plt+0x121e0>
  4160b7:	mov    QWORD PTR [r14],r13
  4160ba:	mov    r13,rax
  4160bd:	add    r14,0x8
  4160c1:	cmp    QWORD PTR [r13+0x8],0x0
  4160c6:	jne    416087 <xmlStrEqual@plt+0x12147>
  4160c8:	mov    rax,QWORD PTR [r13+0x10]
  4160cc:	mov    r13,QWORD PTR [r13+0x18]
  4160d0:	test   rax,rax
  4160d3:	jne    4160b2 <xmlStrEqual@plt+0x12172>
  4160d5:	nop    DWORD PTR [rax]
  4160d8:	test   r13,r13
  4160db:	jne    416080 <xmlStrEqual@plt+0x12140>
  4160dd:	cmp    r14,QWORD PTR [rsp]
  4160e1:	je     416048 <xmlStrEqual@plt+0x12108>
  4160e7:	mov    r13,QWORD PTR [r14-0x8]
  4160eb:	test   r13,r13
  4160ee:	je     416048 <xmlStrEqual@plt+0x12108>
  4160f4:	sub    r14,0x8
  4160f8:	jmp    416080 <xmlStrEqual@plt+0x12140>
  4160fa:	nop    WORD PTR [rax+rax*1+0x0]
  416100:	mov    rdi,QWORD PTR [rax]
  416103:	call   424d40 <xmlStrEqual@plt+0x20e00>
  416108:	mov    rdx,rax
  41610b:	mov    rsi,rbp
  41610e:	mov    edi,ebx
  416110:	xor    eax,eax
  416112:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  416117:	jmp    4160a5 <xmlStrEqual@plt+0x12165>
  416119:	nop    DWORD PTR [rax+0x0]
  416120:	mov    r13,rax
  416123:	jmp    416080 <xmlStrEqual@plt+0x12140>
  416128:	nop    DWORD PTR [rax+rax*1+0x0]
  416130:	mov    rax,rdx
  416133:	test   rdx,rdx
  416136:	jne    416066 <xmlStrEqual@plt+0x12126>
  41613c:	cmp    r12,QWORD PTR [rsp+0x10]
  416141:	je     41614d <xmlStrEqual@plt+0x1220d>
  416143:	mov    r15,QWORD PTR [r12-0x8]
  416148:	test   r15,r15
  41614b:	jne    4161bd <xmlStrEqual@plt+0x1227d>
  41614d:	mov    rax,QWORD PTR [rsp+0x8]
  416152:	mov    rax,QWORD PTR [rax+0x8]
  416156:	mov    QWORD PTR [rsp+0x8],rax
  41615b:	cmp    QWORD PTR [rsp+0x18],rax
  416160:	jne    416025 <xmlStrEqual@plt+0x120e5>
  416166:	mov    rdi,QWORD PTR [rsp+0x18]
  41616b:	call   42e2b0 <xmlStrEqual@plt+0x2a370>
  416170:	cmp    ebx,0x4
  416173:	jle    416189 <xmlStrEqual@plt+0x12249>
  416175:	mov    rax,0x469e3c
  41617c:	mov    eax,DWORD PTR [rax]
  41617e:	add    eax,0x4
  416181:	cmp    ebx,eax
  416183:	jg     415ea2 <xmlStrEqual@plt+0x11f62>
  416189:	mov    rax,QWORD PTR [rsp+0x838]
  416191:	xor    rax,QWORD PTR fs:0x28
  41619a:	jne    4161c6 <xmlStrEqual@plt+0x12286>
  41619c:	add    rsp,0x848
  4161a3:	mov    edi,ebx
  4161a5:	pop    rbx
  4161a6:	pop    rbp
  4161a7:	pop    r12
  4161a9:	pop    r13
  4161ab:	pop    r14
  4161ad:	lea    rsi,[rip+0x32994]        # 448b48 <xmlStrEqual@plt+0x44c08>
  4161b4:	xor    eax,eax
  4161b6:	pop    r15
  4161b8:	jmp    430e20 <xmlStrEqual@plt+0x2cee0>
  4161bd:	sub    r12,0x8
  4161c1:	jmp    416069 <xmlStrEqual@plt+0x12129>
  4161c6:	call   403c00 <__stack_chk_fail@plt>
  4161cb:	nop    DWORD PTR [rax+rax*1+0x0]
  4161d0:	endbr64 
  4161d4:	push   r15
  4161d6:	push   r14
  4161d8:	push   r13
  4161da:	push   r12
  4161dc:	push   rbp
  4161dd:	mov    rbp,rdi
  4161e0:	push   rbx
  4161e1:	mov    ebx,esi
  4161e3:	sub    rsp,0x868
  4161ea:	mov    rax,QWORD PTR fs:0x28
  4161f3:	mov    QWORD PTR [rsp+0x858],rax
  4161fb:	xor    eax,eax
  4161fd:	cmp    esi,0x4
  416200:	jle    41623b <xmlStrEqual@plt+0x122fb>
  416202:	mov    rax,0x469e3c
  416209:	mov    eax,DWORD PTR [rax]
  41620b:	add    eax,0x4
  41620e:	cmp    esi,eax
  416210:	jle    41623b <xmlStrEqual@plt+0x122fb>
  416212:	mov    rax,QWORD PTR [rsp+0x858]
  41621a:	xor    rax,QWORD PTR fs:0x28
  416223:	jne    416676 <xmlStrEqual@plt+0x12736>
  416229:	add    rsp,0x868
  416230:	pop    rbx
  416231:	pop    rbp
  416232:	pop    r12
  416234:	pop    r13
  416236:	pop    r14
  416238:	pop    r15
  41623a:	ret    
  41623b:	lea    rsi,[rip+0x35d16]        # 44bf58 <xmlStrEqual@plt+0x48018>
  416242:	mov    edi,ebx
  416244:	xor    eax,eax
  416246:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  41624b:	call   42dc90 <xmlStrEqual@plt+0x29d50>
  416250:	mov    r15,rax
  416253:	mov    QWORD PTR [rsp+0x28],rax
  416258:	mov    rax,QWORD PTR [rbp+0x20]
  41625c:	mov    rsi,r15
  41625f:	mov    rdi,QWORD PTR [rax]
  416262:	call   42dcf0 <xmlStrEqual@plt+0x29db0>
  416267:	mov    rax,QWORD PTR [rbp+0x20]
  41626b:	mov    rsi,r15
  41626e:	mov    rdi,QWORD PTR [rax+0x8]
  416272:	call   42dcf0 <xmlStrEqual@plt+0x29db0>
  416277:	mov    rax,QWORD PTR [rbp+0x20]
  41627b:	mov    rdx,QWORD PTR [rax+0x10]
  41627f:	mov    rdx,QWORD PTR [rdx]
  416282:	mov    esi,DWORD PTR [rdx]
  416284:	test   esi,esi
  416286:	je     4162e5 <xmlStrEqual@plt+0x123a5>
  416288:	xor    r12d,r12d
  41628b:	jmp    41629c <xmlStrEqual@plt+0x1235c>
  41628d:	mov    rdx,QWORD PTR [rax+0x10]
  416291:	inc    r12d
  416294:	mov    rdx,QWORD PTR [rdx]
  416297:	cmp    DWORD PTR [rdx],r12d
  41629a:	je     4162e5 <xmlStrEqual@plt+0x123a5>
  41629c:	mov    edi,r12d
  41629f:	mov    r8,QWORD PTR [rdx+0x10]
  4162a3:	lea    ecx,[r12+r12*1]
  4162a7:	and    ecx,0x1e
  4162aa:	shr    edi,0x4
  4162ad:	mov    esi,ecx
  4162af:	mov    ecx,DWORD PTR [r8+rdi*4]
  4162b3:	shrx   ecx,ecx,esi
  4162b8:	and    ecx,0x3
  4162bb:	jne    41628d <xmlStrEqual@plt+0x1234d>
  4162bd:	mov    rdx,QWORD PTR [rdx+0x20]
  4162c1:	mov    eax,r12d
  4162c4:	mov    rdi,QWORD PTR [rdx+rax*8]
  4162c8:	mov    rsi,QWORD PTR [rsp+0x28]
  4162cd:	inc    r12d
  4162d0:	call   42dcf0 <xmlStrEqual@plt+0x29db0>
  4162d5:	mov    rax,QWORD PTR [rbp+0x20]
  4162d9:	mov    rdx,QWORD PTR [rax+0x10]
  4162dd:	mov    rdx,QWORD PTR [rdx]
  4162e0:	cmp    DWORD PTR [rdx],r12d
  4162e3:	jne    41629c <xmlStrEqual@plt+0x1235c>
  4162e5:	mov    rdx,QWORD PTR [rax+0x18]
  4162e9:	mov    rdx,QWORD PTR [rdx]
  4162ec:	mov    ecx,DWORD PTR [rdx]
  4162ee:	test   ecx,ecx
  4162f0:	je     41634f <xmlStrEqual@plt+0x1240f>
  4162f2:	xor    r12d,r12d
  4162f5:	jmp    416306 <xmlStrEqual@plt+0x123c6>
  4162f7:	mov    rdx,QWORD PTR [rax+0x18]
  4162fb:	inc    r12d
  4162fe:	mov    rdx,QWORD PTR [rdx]
  416301:	cmp    DWORD PTR [rdx],r12d
  416304:	je     41634f <xmlStrEqual@plt+0x1240f>
  416306:	mov    edi,r12d
  416309:	mov    r8,QWORD PTR [rdx+0x10]
  41630d:	lea    ecx,[r12+r12*1]
  416311:	and    ecx,0x1e
  416314:	shr    edi,0x4
  416317:	mov    esi,ecx
  416319:	mov    ecx,DWORD PTR [r8+rdi*4]
  41631d:	shrx   ecx,ecx,esi
  416322:	and    ecx,0x3
  416325:	jne    4162f7 <xmlStrEqual@plt+0x123b7>
  416327:	mov    rdx,QWORD PTR [rdx+0x20]
  41632b:	mov    eax,r12d
  41632e:	mov    rdi,QWORD PTR [rdx+rax*8]
  416332:	mov    rsi,QWORD PTR [rsp+0x28]
  416337:	inc    r12d
  41633a:	call   42dcf0 <xmlStrEqual@plt+0x29db0>
  41633f:	mov    rax,QWORD PTR [rbp+0x20]
  416343:	mov    rdx,QWORD PTR [rax+0x18]
  416347:	mov    rdx,QWORD PTR [rdx]
  41634a:	cmp    DWORD PTR [rdx],r12d
  41634d:	jne    416306 <xmlStrEqual@plt+0x123c6>
  41634f:	mov    r15,QWORD PTR [rsp+0x28]
  416354:	mov    rdi,QWORD PTR [rax+0x20]
  416358:	mov    rsi,r15
  41635b:	call   42dcf0 <xmlStrEqual@plt+0x29db0>
  416360:	mov    rax,QWORD PTR [rbp+0x20]
  416364:	mov    rsi,r15
  416367:	mov    rdi,QWORD PTR [rax+0x20]
  41636b:	call   42dcf0 <xmlStrEqual@plt+0x29db0>
  416370:	mov    rcx,QWORD PTR [r15+0x8]
  416374:	mov    rax,r15
  416377:	mov    QWORD PTR [rsp+0x30],rcx
  41637c:	lea    r15,[rip+0x35da9]        # 44c12c <xmlStrEqual@plt+0x481ec>
  416383:	cmp    rax,rcx
  416386:	je     41660a <xmlStrEqual@plt+0x126ca>
  41638c:	mov    rax,QWORD PTR [rsp+0x30]
  416391:	mov    rax,QWORD PTR [rax+0x10]
  416395:	mov    rax,QWORD PTR [rax]
  416398:	mov    QWORD PTR [rsp+0x10],rax
  41639d:	test   rax,rax
  4163a0:	je     4165f1 <xmlStrEqual@plt+0x126b1>
  4163a6:	lea    rax,[rsp+0x40]
  4163ab:	mov    QWORD PTR [rsp+0x38],rax
  4163b0:	mov    QWORD PTR [rsp+0x18],rax
  4163b5:	mov    rax,QWORD PTR [rsp+0x10]
  4163ba:	cmp    QWORD PTR [rax+0x8],0x0
  4163bf:	jne    416407 <xmlStrEqual@plt+0x124c7>
  4163c1:	mov    rcx,QWORD PTR [rsp+0x10]
  4163c6:	mov    rax,QWORD PTR [rcx+0x10]
  4163ca:	mov    rcx,QWORD PTR [rcx+0x18]
  4163ce:	mov    QWORD PTR [rsp+0x10],rcx
  4163d3:	test   rax,rax
  4163d6:	je     4165c8 <xmlStrEqual@plt+0x12688>
  4163dc:	test   rcx,rcx
  4163df:	je     416661 <xmlStrEqual@plt+0x12721>
  4163e5:	mov    rsi,QWORD PTR [rsp+0x18]
  4163ea:	mov    QWORD PTR [rsp+0x10],rax
  4163ef:	lea    rax,[rsi+0x8]
  4163f3:	mov    QWORD PTR [rsp+0x18],rax
  4163f8:	mov    rax,QWORD PTR [rsp+0x10]
  4163fd:	mov    QWORD PTR [rsi],rcx
  416400:	cmp    QWORD PTR [rax+0x8],0x0
  416405:	je     4163c1 <xmlStrEqual@plt+0x12481>
  416407:	mov    rax,QWORD PTR [rax+0x28]
  41640b:	mov    r12,QWORD PTR [rax]
  41640e:	test   r12,r12
  416411:	je     4163c1 <xmlStrEqual@plt+0x12481>
  416413:	lea    rax,[rsp+0x450]
  41641b:	mov    QWORD PTR [rsp+0x20],rax
  416420:	mov    QWORD PTR [rsp],rax
  416424:	nop    DWORD PTR [rax+0x0]
  416428:	cmp    QWORD PTR [r12+0x8],0x0
  41642e:	je     41643d <xmlStrEqual@plt+0x124fd>
  416430:	mov    rax,QWORD PTR [r12+0x28]
  416435:	mov    r14,rax
  416438:	test   rax,rax
  41643b:	jne    416480 <xmlStrEqual@plt+0x12540>
  41643d:	mov    rax,QWORD PTR [r12+0x10]
  416442:	mov    r12,QWORD PTR [r12+0x18]
  416447:	test   rax,rax
  41644a:	je     416547 <xmlStrEqual@plt+0x12607>
  416450:	test   r12,r12
  416453:	je     4165c0 <xmlStrEqual@plt+0x12680>
  416459:	mov    rcx,QWORD PTR [rsp]
  41645d:	mov    QWORD PTR [rcx],r12
  416460:	mov    r12,rax
  416463:	cmp    QWORD PTR [r12+0x8],0x0
  416469:	lea    rax,[rcx+0x8]
  41646d:	mov    QWORD PTR [rsp],rax
  416471:	je     41643d <xmlStrEqual@plt+0x124fd>
  416473:	mov    rax,QWORD PTR [r12+0x28]
  416478:	mov    r14,rax
  41647b:	test   rax,rax
  41647e:	je     41643d <xmlStrEqual@plt+0x124fd>
  416480:	cmp    ebx,0x4
  416483:	jle    416580 <xmlStrEqual@plt+0x12640>
  416489:	mov    rax,0x469e3c
  416490:	mov    eax,DWORD PTR [rax]
  416492:	add    eax,0x4
  416495:	cmp    ebx,eax
  416497:	jle    416580 <xmlStrEqual@plt+0x12640>
  41649d:	mov    rax,QWORD PTR [r14]
  4164a0:	mov    rdx,QWORD PTR [rax+0x28]
  4164a4:	mov    rbp,QWORD PTR [rdx+0x8]
  4164a8:	cmp    rdx,rbp
  4164ab:	je     41643d <xmlStrEqual@plt+0x124fd>
  4164ad:	mov    QWORD PTR [rsp+0x8],r12
  4164b2:	jmp    4164c2 <xmlStrEqual@plt+0x12582>
  4164b4:	nop    DWORD PTR [rax+0x0]
  4164b8:	mov    rbp,QWORD PTR [rbp+0x8]
  4164bc:	cmp    QWORD PTR [rax+0x28],rbp
  4164c0:	je     41652f <xmlStrEqual@plt+0x125ef>
  4164c2:	mov    r12,QWORD PTR [rbp+0x10]
  4164c6:	mov    edx,DWORD PTR [r12+0x18]
  4164cb:	test   edx,edx
  4164cd:	je     4164b8 <xmlStrEqual@plt+0x12578>
  4164cf:	mov    r13,QWORD PTR [r12+0x8]
  4164d4:	cmp    r13,r12
  4164d7:	jne    4164f9 <xmlStrEqual@plt+0x125b9>
  4164d9:	jmp    4164b8 <xmlStrEqual@plt+0x12578>
  4164db:	nop    DWORD PTR [rax+rax*1+0x0]
  4164e0:	mov    rax,0x469e3c
  4164e7:	mov    eax,DWORD PTR [rax]
  4164e9:	add    eax,0x4
  4164ec:	cmp    ebx,eax
  4164ee:	jle    4164fe <xmlStrEqual@plt+0x125be>
  4164f0:	mov    r13,QWORD PTR [r13+0x8]
  4164f4:	cmp    r13,r12
  4164f7:	je     416522 <xmlStrEqual@plt+0x125e2>
  4164f9:	cmp    ebx,0x4
  4164fc:	jg     4164e0 <xmlStrEqual@plt+0x125a0>
  4164fe:	mov    rax,QWORD PTR [r13+0x10]
  416502:	mov    rdi,QWORD PTR [rax]
  416505:	call   424d40 <xmlStrEqual@plt+0x20e00>
  41650a:	mov    rdx,rax
  41650d:	mov    rsi,r15
  416510:	mov    edi,ebx
  416512:	xor    eax,eax
  416514:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  416519:	mov    r13,QWORD PTR [r13+0x8]
  41651d:	cmp    r13,r12
  416520:	jne    4164f9 <xmlStrEqual@plt+0x125b9>
  416522:	mov    rax,QWORD PTR [r14]
  416525:	mov    rbp,QWORD PTR [rbp+0x8]
  416529:	cmp    QWORD PTR [rax+0x28],rbp
  41652d:	jne    4164c2 <xmlStrEqual@plt+0x12582>
  41652f:	mov    r12,QWORD PTR [rsp+0x8]
  416534:	mov    rax,QWORD PTR [r12+0x10]
  416539:	mov    r12,QWORD PTR [r12+0x18]
  41653e:	test   rax,rax
  416541:	jne    416450 <xmlStrEqual@plt+0x12510>
  416547:	test   r12,r12
  41654a:	jne    416428 <xmlStrEqual@plt+0x124e8>
  416550:	mov    rax,QWORD PTR [rsp]
  416554:	mov    rcx,QWORD PTR [rsp+0x20]
  416559:	cmp    rax,rcx
  41655c:	je     4163c1 <xmlStrEqual@plt+0x12481>
  416562:	mov    r12,QWORD PTR [rax-0x8]
  416566:	test   r12,r12
  416569:	je     4163c1 <xmlStrEqual@plt+0x12481>
  41656f:	sub    QWORD PTR [rsp],0x8
  416574:	jmp    416428 <xmlStrEqual@plt+0x124e8>
  416579:	nop    DWORD PTR [rax+0x0]
  416580:	mov    rdi,QWORD PTR [r14]
  416583:	lea    rax,[rip+0x35b8c]        # 44c116 <xmlStrEqual@plt+0x481d6>
  41658a:	cmp    BYTE PTR [rdi+0x3c],0x0
  41658e:	lea    rbp,[rip+0x35b8c]        # 44c121 <xmlStrEqual@plt+0x481e1>
  416595:	cmove  rbp,rax
  416599:	call   424d40 <xmlStrEqual@plt+0x20e00>
  41659e:	mov    rdx,rax
  4165a1:	mov    rcx,rbp
  4165a4:	lea    rsi,[rip+0x359ed]        # 44bf98 <xmlStrEqual@plt+0x48058>
  4165ab:	mov    edi,ebx
  4165ad:	xor    eax,eax
  4165af:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  4165b4:	jmp    41649d <xmlStrEqual@plt+0x1255d>
  4165b9:	nop    DWORD PTR [rax+0x0]
  4165c0:	mov    r12,rax
  4165c3:	jmp    416428 <xmlStrEqual@plt+0x124e8>
  4165c8:	cmp    QWORD PTR [rsp+0x10],0x0
  4165ce:	jne    4163b5 <xmlStrEqual@plt+0x12475>
  4165d4:	mov    rax,QWORD PTR [rsp+0x18]
  4165d9:	mov    rcx,QWORD PTR [rsp+0x38]
  4165de:	cmp    rax,rcx
  4165e1:	je     4165f1 <xmlStrEqual@plt+0x126b1>
  4165e3:	mov    rax,QWORD PTR [rax-0x8]
  4165e7:	mov    QWORD PTR [rsp+0x10],rax
  4165ec:	test   rax,rax
  4165ef:	jne    41666b <xmlStrEqual@plt+0x1272b>
  4165f1:	mov    rax,QWORD PTR [rsp+0x30]
  4165f6:	mov    rax,QWORD PTR [rax+0x8]
  4165fa:	mov    QWORD PTR [rsp+0x30],rax
  4165ff:	cmp    QWORD PTR [rsp+0x28],rax
  416604:	jne    41638c <xmlStrEqual@plt+0x1244c>
  41660a:	mov    rdi,QWORD PTR [rsp+0x28]
  41660f:	call   42e2b0 <xmlStrEqual@plt+0x2a370>
  416614:	cmp    ebx,0x4
  416617:	jle    41662d <xmlStrEqual@plt+0x126ed>
  416619:	mov    rax,0x469e3c
  416620:	mov    eax,DWORD PTR [rax]
  416622:	add    eax,0x4
  416625:	cmp    ebx,eax
  416627:	jg     416212 <xmlStrEqual@plt+0x122d2>
  41662d:	mov    rax,QWORD PTR [rsp+0x858]
  416635:	xor    rax,QWORD PTR fs:0x28
  41663e:	jne    416676 <xmlStrEqual@plt+0x12736>
  416640:	add    rsp,0x868
  416647:	mov    edi,ebx
  416649:	pop    rbx
  41664a:	pop    rbp
  41664b:	pop    r12
  41664d:	pop    r13
  41664f:	pop    r14
  416651:	lea    rsi,[rip+0x324f0]        # 448b48 <xmlStrEqual@plt+0x44c08>
  416658:	xor    eax,eax
  41665a:	pop    r15
  41665c:	jmp    430e20 <xmlStrEqual@plt+0x2cee0>
  416661:	mov    QWORD PTR [rsp+0x10],rax
  416666:	jmp    4163b5 <xmlStrEqual@plt+0x12475>
  41666b:	sub    QWORD PTR [rsp+0x18],0x8
  416671:	jmp    4163b5 <xmlStrEqual@plt+0x12475>
  416676:	call   403c00 <__stack_chk_fail@plt>
  41667b:	nop    DWORD PTR [rax+rax*1+0x0]
  416680:	endbr64 
  416684:	push   r15
  416686:	push   r14
  416688:	push   r13
  41668a:	push   r12
  41668c:	push   rbp
  41668d:	push   rbx
  41668e:	sub    rsp,0x878
  416695:	mov    QWORD PTR [rsp+0x18],rdi
  41669a:	mov    rsi,QWORD PTR fs:0x28
  4166a3:	mov    QWORD PTR [rsp+0x868],rsi
  4166ab:	xor    esi,esi
  4166ad:	mov    rsi,0x4696c0
  4166b4:	cmp    QWORD PTR [rdi+0x8],rsi
  4166b8:	jne    416eba <xmlStrEqual@plt+0x12f7a>
  4166be:	call   42dc90 <xmlStrEqual@plt+0x29d50>
  4166c3:	mov    r15,rax
  4166c6:	call   42dc90 <xmlStrEqual@plt+0x29d50>
  4166cb:	mov    QWORD PTR [rsp+0x20],rax
  4166d0:	call   42dc90 <xmlStrEqual@plt+0x29d50>
  4166d5:	mov    r12,QWORD PTR [rsp+0x18]
  4166da:	mov    rbp,rax
  4166dd:	mov    QWORD PTR [rsp+0x48],rax
  4166e2:	mov    rax,QWORD PTR [r12+0x18]
  4166e7:	mov    rsi,rbp
  4166ea:	mov    rdi,QWORD PTR [rax]
  4166ed:	call   42dcf0 <xmlStrEqual@plt+0x29db0>
  4166f2:	mov    rax,QWORD PTR [r12+0x18]
  4166f7:	mov    rsi,rbp
  4166fa:	mov    rdi,QWORD PTR [rax+0x8]
  4166fe:	call   42dcf0 <xmlStrEqual@plt+0x29db0>
  416703:	mov    rsi,QWORD PTR [r12+0x18]
  416708:	mov    rax,QWORD PTR [rsi+0x10]
  41670c:	mov    rdi,QWORD PTR [rax]
  41670f:	mov    r10d,DWORD PTR [rdi]
  416712:	test   r10d,r10d
  416715:	je     41676f <xmlStrEqual@plt+0x1282f>
  416717:	xor    ebx,ebx
  416719:	jmp    41672d <xmlStrEqual@plt+0x127ed>
  41671b:	nop    DWORD PTR [rax+rax*1+0x0]
  416720:	mov    rax,QWORD PTR [rsi+0x10]
  416724:	inc    ebx
  416726:	mov    rdi,QWORD PTR [rax]
  416729:	cmp    DWORD PTR [rdi],ebx
  41672b:	je     41676f <xmlStrEqual@plt+0x1282f>
  41672d:	mov    ecx,ebx
  41672f:	mov    r8,QWORD PTR [rdi+0x10]
  416733:	lea    eax,[rbx+rbx*1]
  416736:	and    eax,0x1e
  416739:	shr    ecx,0x4
  41673c:	mov    edx,eax
  41673e:	mov    eax,DWORD PTR [r8+rcx*4]
  416742:	shrx   eax,eax,edx
  416747:	test   al,0x3
  416749:	jne    416720 <xmlStrEqual@plt+0x127e0>
  41674b:	mov    rdx,QWORD PTR [rdi+0x20]
  41674f:	mov    eax,ebx
  416751:	mov    rdi,QWORD PTR [rdx+rax*8]
  416755:	mov    rsi,rbp
  416758:	call   42dcf0 <xmlStrEqual@plt+0x29db0>
  41675d:	mov    rsi,QWORD PTR [r12+0x18]
  416762:	inc    ebx
  416764:	mov    rax,QWORD PTR [rsi+0x10]
  416768:	mov    rdi,QWORD PTR [rax]
  41676b:	cmp    DWORD PTR [rdi],ebx
  41676d:	jne    41672d <xmlStrEqual@plt+0x127ed>
  41676f:	mov    rax,QWORD PTR [rsi+0x18]
  416773:	mov    rdi,QWORD PTR [rax]
  416776:	mov    r9d,DWORD PTR [rdi]
  416779:	test   r9d,r9d
  41677c:	je     4167df <xmlStrEqual@plt+0x1289f>
  41677e:	xor    ebx,ebx
  416780:	mov    rbp,QWORD PTR [rsp+0x48]
  416785:	mov    r12,QWORD PTR [rsp+0x18]
  41678a:	jmp    41679d <xmlStrEqual@plt+0x1285d>
  41678c:	nop    DWORD PTR [rax+0x0]
  416790:	mov    rax,QWORD PTR [rsi+0x18]
  416794:	inc    ebx
  416796:	mov    rdi,QWORD PTR [rax]
  416799:	cmp    DWORD PTR [rdi],ebx
  41679b:	je     4167df <xmlStrEqual@plt+0x1289f>
  41679d:	mov    ecx,ebx
  41679f:	mov    r8,QWORD PTR [rdi+0x10]
  4167a3:	lea    eax,[rbx+rbx*1]
  4167a6:	and    eax,0x1e
  4167a9:	shr    ecx,0x4
  4167ac:	mov    edx,eax
  4167ae:	mov    eax,DWORD PTR [r8+rcx*4]
  4167b2:	shrx   eax,eax,edx
  4167b7:	test   al,0x3
  4167b9:	jne    416790 <xmlStrEqual@plt+0x12850>
  4167bb:	mov    rdx,QWORD PTR [rdi+0x20]
  4167bf:	mov    eax,ebx
  4167c1:	mov    rdi,QWORD PTR [rdx+rax*8]
  4167c5:	mov    rsi,rbp
  4167c8:	call   42dcf0 <xmlStrEqual@plt+0x29db0>
  4167cd:	mov    rsi,QWORD PTR [r12+0x18]
  4167d2:	inc    ebx
  4167d4:	mov    rax,QWORD PTR [rsi+0x18]
  4167d8:	mov    rdi,QWORD PTR [rax]
  4167db:	cmp    DWORD PTR [rdi],ebx
  4167dd:	jne    41679d <xmlStrEqual@plt+0x1285d>
  4167df:	mov    rbx,QWORD PTR [rsp+0x48]
  4167e4:	mov    rdi,QWORD PTR [rsi+0x20]
  4167e8:	mov    rsi,rbx
  4167eb:	call   42dcf0 <xmlStrEqual@plt+0x29db0>
  4167f0:	mov    rax,QWORD PTR [rsp+0x18]
  4167f5:	mov    rsi,rbx
  4167f8:	mov    rax,QWORD PTR [rax+0x18]
  4167fc:	mov    rdi,QWORD PTR [rax+0x20]
  416800:	call   42dcf0 <xmlStrEqual@plt+0x29db0>
  416805:	mov    rax,QWORD PTR [rbx+0x8]
  416809:	mov    BYTE PTR [rsp+0x17],0x0
  41680e:	mov    QWORD PTR [rsp+0x38],rax
  416813:	cmp    rbx,rax
  416816:	je     416a01 <xmlStrEqual@plt+0x12ac1>
  41681c:	lea    rax,[rsp+0x50]
  416821:	mov    QWORD PTR [rsp+0x40],rax
  416826:	lea    rax,[rsp+0x460]
  41682e:	mov    QWORD PTR [rsp+0x30],rax
  416833:	nop    DWORD PTR [rax+rax*1+0x0]
  416838:	mov    rax,QWORD PTR [rsp+0x38]
  41683d:	mov    rax,QWORD PTR [rax+0x10]
  416841:	mov    rax,QWORD PTR [rax]
  416844:	mov    QWORD PTR [rsp+0x8],rax
  416849:	test   rax,rax
  41684c:	je     4169e8 <xmlStrEqual@plt+0x12aa8>
  416852:	mov    rax,QWORD PTR [rsp+0x40]
  416857:	mov    QWORD PTR [rsp+0x28],rax
  41685c:	jmp    416891 <xmlStrEqual@plt+0x12951>
  41685e:	xchg   ax,ax
  416860:	mov    rsi,QWORD PTR [rsp+0x8]
  416865:	mov    rax,QWORD PTR [rsi+0x10]
  416869:	mov    rdx,QWORD PTR [rsi+0x18]
  41686d:	test   rax,rax
  416870:	je     4169c0 <xmlStrEqual@plt+0x12a80>
  416876:	test   rdx,rdx
  416879:	je     41688c <xmlStrEqual@plt+0x1294c>
  41687b:	mov    rsi,QWORD PTR [rsp+0x28]
  416880:	mov    QWORD PTR [rsi],rdx
  416883:	lea    rdx,[rsi+0x8]
  416887:	mov    QWORD PTR [rsp+0x28],rdx
  41688c:	mov    QWORD PTR [rsp+0x8],rax
  416891:	mov    rax,QWORD PTR [rsp+0x8]
  416896:	cmp    QWORD PTR [rax+0x8],0x0
  41689b:	je     416860 <xmlStrEqual@plt+0x12920>
  41689d:	mov    rax,QWORD PTR [rax+0x28]
  4168a1:	mov    rbp,QWORD PTR [rax]
  4168a4:	test   rbp,rbp
  4168a7:	je     416860 <xmlStrEqual@plt+0x12920>
  4168a9:	mov    rax,QWORD PTR [rsp+0x30]
  4168ae:	mov    QWORD PTR [rsp],rax
  4168b2:	jmp    4168cf <xmlStrEqual@plt+0x1298f>
  4168b4:	nop    DWORD PTR [rax+0x0]
  4168b8:	test   rdx,rdx
  4168bb:	je     4168cc <xmlStrEqual@plt+0x1298c>
  4168bd:	mov    rcx,QWORD PTR [rsp]
  4168c1:	mov    QWORD PTR [rcx],rdx
  4168c4:	add    rcx,0x8
  4168c8:	mov    QWORD PTR [rsp],rcx
  4168cc:	mov    rbp,rax
  4168cf:	cmp    QWORD PTR [rbp+0x8],0x0
  4168d4:	je     4168df <xmlStrEqual@plt+0x1299f>
  4168d6:	mov    rax,QWORD PTR [rbp+0x28]
  4168da:	test   rax,rax
  4168dd:	jne    416920 <xmlStrEqual@plt+0x129e0>
  4168df:	mov    rax,QWORD PTR [rbp+0x10]
  4168e3:	mov    rdx,QWORD PTR [rbp+0x18]
  4168e7:	test   rax,rax
  4168ea:	jne    4168b8 <xmlStrEqual@plt+0x12978>
  4168ec:	mov    rax,rdx
  4168ef:	test   rdx,rdx
  4168f2:	jne    4168cc <xmlStrEqual@plt+0x1298c>
  4168f4:	mov    rax,QWORD PTR [rsp]
  4168f8:	mov    rsi,QWORD PTR [rsp+0x30]
  4168fd:	cmp    rax,rsi
  416900:	je     416860 <xmlStrEqual@plt+0x12920>
  416906:	mov    rax,QWORD PTR [rax-0x8]
  41690a:	test   rax,rax
  41690d:	je     416860 <xmlStrEqual@plt+0x12920>
  416913:	sub    QWORD PTR [rsp],0x8
  416918:	jmp    4168cc <xmlStrEqual@plt+0x1298c>
  41691a:	nop    WORD PTR [rax+rax*1+0x0]
  416920:	mov    r12,QWORD PTR [rax]
  416923:	mov    rdi,r12
  416926:	call   424ee0 <xmlStrEqual@plt+0x20fa0>
  41692b:	mov    r14,QWORD PTR [r15+0x8]
  41692f:	mov    r13d,eax
  416932:	cmp    r15,r14
  416935:	jne    416958 <xmlStrEqual@plt+0x12a18>
  416937:	jmp    4169b0 <xmlStrEqual@plt+0x12a70>
  416939:	nop    DWORD PTR [rax+0x0]
  416940:	mov    rsi,rbx
  416943:	mov    rdi,r12
  416946:	call   437920 <xmlStrEqual@plt+0x339e0>
  41694b:	cmp    al,0x1
  41694d:	je     416978 <xmlStrEqual@plt+0x12a38>
  41694f:	mov    r14,QWORD PTR [r14+0x8]
  416953:	cmp    r15,r14
  416956:	je     4169b0 <xmlStrEqual@plt+0x12a70>
  416958:	mov    rbx,QWORD PTR [r14+0x10]
  41695c:	mov    rdi,rbx
  41695f:	call   424ee0 <xmlStrEqual@plt+0x20fa0>
  416964:	cmp    r13b,al
  416967:	jb     416940 <xmlStrEqual@plt+0x12a00>
  416969:	mov    rsi,r12
  41696c:	mov    rdi,rbx
  41696f:	call   437920 <xmlStrEqual@plt+0x339e0>
  416974:	cmp    al,0x1
  416976:	jne    41694f <xmlStrEqual@plt+0x12a0f>
  416978:	mov    rdi,rbx
  41697b:	call   424d40 <xmlStrEqual@plt+0x20e00>
  416980:	mov    rdi,r12
  416983:	mov    rbx,rax
  416986:	call   424d40 <xmlStrEqual@plt+0x20e00>
  41698b:	mov    rdx,rax
  41698e:	mov    rcx,rbx
  416991:	lea    rsi,[rip+0x35630]        # 44bfc8 <xmlStrEqual@plt+0x48088>
  416998:	mov    edi,0x2
  41699d:	xor    eax,eax
  41699f:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  4169a4:	mov    BYTE PTR [rsp+0x17],0x1
  4169a9:	jmp    4168df <xmlStrEqual@plt+0x1299f>
  4169ae:	xchg   ax,ax
  4169b0:	mov    rsi,r15
  4169b3:	mov    rdi,r12
  4169b6:	call   42dcf0 <xmlStrEqual@plt+0x29db0>
  4169bb:	jmp    4168df <xmlStrEqual@plt+0x1299f>
  4169c0:	mov    rax,rdx
  4169c3:	test   rdx,rdx
  4169c6:	jne    41688c <xmlStrEqual@plt+0x1294c>
  4169cc:	mov    rax,QWORD PTR [rsp+0x28]
  4169d1:	mov    rdx,QWORD PTR [rsp+0x40]
  4169d6:	cmp    rax,rdx
  4169d9:	je     4169e8 <xmlStrEqual@plt+0x12aa8>
  4169db:	mov    rax,QWORD PTR [rax-0x8]
  4169df:	test   rax,rax
  4169e2:	jne    416ed4 <xmlStrEqual@plt+0x12f94>
  4169e8:	mov    rax,QWORD PTR [rsp+0x38]
  4169ed:	mov    rax,QWORD PTR [rax+0x8]
  4169f1:	mov    QWORD PTR [rsp+0x38],rax
  4169f6:	cmp    QWORD PTR [rsp+0x48],rax
  4169fb:	jne    416838 <xmlStrEqual@plt+0x128f8>
  416a01:	mov    rdi,QWORD PTR [rsp+0x48]
  416a06:	call   42e2b0 <xmlStrEqual@plt+0x2a370>
  416a0b:	mov    rdi,r15
  416a0e:	call   42e2b0 <xmlStrEqual@plt+0x2a370>
  416a13:	call   42dc90 <xmlStrEqual@plt+0x29d50>
  416a18:	mov    r12,QWORD PTR [rsp+0x18]
  416a1d:	mov    rbp,rax
  416a20:	mov    QWORD PTR [rsp+0x48],rax
  416a25:	mov    rax,QWORD PTR [r12+0x20]
  416a2a:	mov    rsi,rbp
  416a2d:	mov    rdi,QWORD PTR [rax]
  416a30:	call   42dcf0 <xmlStrEqual@plt+0x29db0>
  416a35:	mov    rax,QWORD PTR [r12+0x20]
  416a3a:	mov    rsi,rbp
  416a3d:	mov    rdi,QWORD PTR [rax+0x8]
  416a41:	call   42dcf0 <xmlStrEqual@plt+0x29db0>
  416a46:	mov    rsi,QWORD PTR [r12+0x20]
  416a4b:	mov    rax,QWORD PTR [rsi+0x10]
  416a4f:	mov    rdi,QWORD PTR [rax]
  416a52:	mov    r8d,DWORD PTR [rdi]
  416a55:	test   r8d,r8d
  416a58:	je     416aaf <xmlStrEqual@plt+0x12b6f>
  416a5a:	xor    ebx,ebx
  416a5c:	jmp    416a6d <xmlStrEqual@plt+0x12b2d>
  416a5e:	xchg   ax,ax
  416a60:	mov    rax,QWORD PTR [rsi+0x10]
  416a64:	inc    ebx
  416a66:	mov    rdi,QWORD PTR [rax]
  416a69:	cmp    DWORD PTR [rdi],ebx
  416a6b:	je     416aaf <xmlStrEqual@plt+0x12b6f>
  416a6d:	mov    ecx,ebx
  416a6f:	mov    r8,QWORD PTR [rdi+0x10]
  416a73:	lea    eax,[rbx+rbx*1]
  416a76:	and    eax,0x1e
  416a79:	shr    ecx,0x4
  416a7c:	mov    edx,eax
  416a7e:	mov    eax,DWORD PTR [r8+rcx*4]
  416a82:	shrx   eax,eax,edx
  416a87:	test   al,0x3
  416a89:	jne    416a60 <xmlStrEqual@plt+0x12b20>
  416a8b:	mov    rdx,QWORD PTR [rdi+0x20]
  416a8f:	mov    eax,ebx
  416a91:	mov    rdi,QWORD PTR [rdx+rax*8]
  416a95:	mov    rsi,rbp
  416a98:	call   42dcf0 <xmlStrEqual@plt+0x29db0>
  416a9d:	mov    rsi,QWORD PTR [r12+0x20]
  416aa2:	inc    ebx
  416aa4:	mov    rax,QWORD PTR [rsi+0x10]
  416aa8:	mov    rdi,QWORD PTR [rax]
  416aab:	cmp    DWORD PTR [rdi],ebx
  416aad:	jne    416a6d <xmlStrEqual@plt+0x12b2d>
  416aaf:	mov    rax,QWORD PTR [rsi+0x18]
  416ab3:	mov    rdi,QWORD PTR [rax]
  416ab6:	mov    ecx,DWORD PTR [rdi]
  416ab8:	test   ecx,ecx
  416aba:	je     416b1f <xmlStrEqual@plt+0x12bdf>
  416abc:	xor    ebx,ebx
  416abe:	mov    rbp,QWORD PTR [rsp+0x48]
  416ac3:	mov    r12,QWORD PTR [rsp+0x18]
  416ac8:	jmp    416add <xmlStrEqual@plt+0x12b9d>
  416aca:	nop    WORD PTR [rax+rax*1+0x0]
  416ad0:	mov    rax,QWORD PTR [rsi+0x18]
  416ad4:	inc    ebx
  416ad6:	mov    rdi,QWORD PTR [rax]
  416ad9:	cmp    DWORD PTR [rdi],ebx
  416adb:	je     416b1f <xmlStrEqual@plt+0x12bdf>
  416add:	mov    ecx,ebx
  416adf:	mov    r8,QWORD PTR [rdi+0x10]
  416ae3:	lea    eax,[rbx+rbx*1]
  416ae6:	and    eax,0x1e
  416ae9:	shr    ecx,0x4
  416aec:	mov    edx,eax
  416aee:	mov    eax,DWORD PTR [r8+rcx*4]
  416af2:	shrx   eax,eax,edx
  416af7:	test   al,0x3
  416af9:	jne    416ad0 <xmlStrEqual@plt+0x12b90>
  416afb:	mov    rdx,QWORD PTR [rdi+0x20]
  416aff:	mov    eax,ebx
  416b01:	mov    rdi,QWORD PTR [rdx+rax*8]
  416b05:	mov    rsi,rbp
  416b08:	call   42dcf0 <xmlStrEqual@plt+0x29db0>
  416b0d:	mov    rsi,QWORD PTR [r12+0x20]
  416b12:	inc    ebx
  416b14:	mov    rax,QWORD PTR [rsi+0x18]
  416b18:	mov    rdi,QWORD PTR [rax]
  416b1b:	cmp    DWORD PTR [rdi],ebx
  416b1d:	jne    416add <xmlStrEqual@plt+0x12b9d>
  416b1f:	mov    rbx,QWORD PTR [rsp+0x48]
  416b24:	mov    rdi,QWORD PTR [rsi+0x20]
  416b28:	mov    rsi,rbx
  416b2b:	call   42dcf0 <xmlStrEqual@plt+0x29db0>
  416b30:	mov    rax,QWORD PTR [rsp+0x18]
  416b35:	mov    rsi,rbx
  416b38:	mov    rax,QWORD PTR [rax+0x20]
  416b3c:	mov    rdi,QWORD PTR [rax+0x20]
  416b40:	call   42dcf0 <xmlStrEqual@plt+0x29db0>
  416b45:	mov    rax,QWORD PTR [rbx+0x8]
  416b49:	mov    QWORD PTR [rsp+0x38],rax
  416b4e:	cmp    rbx,rax
  416b51:	je     416da1 <xmlStrEqual@plt+0x12e61>
  416b57:	lea    rax,[rsp+0x50]
  416b5c:	mov    QWORD PTR [rsp+0x40],rax
  416b61:	lea    rax,[rsp+0x460]
  416b69:	mov    QWORD PTR [rsp+0x30],rax
  416b6e:	xchg   ax,ax
  416b70:	mov    rax,QWORD PTR [rsp+0x38]
  416b75:	mov    rax,QWORD PTR [rax+0x10]
  416b79:	mov    rax,QWORD PTR [rax]
  416b7c:	mov    QWORD PTR [rsp],rax
  416b80:	test   rax,rax
  416b83:	je     416d88 <xmlStrEqual@plt+0x12e48>
  416b89:	mov    rax,QWORD PTR [rsp+0x40]
  416b8e:	mov    QWORD PTR [rsp+0x8],rax
  416b93:	jmp    416bc7 <xmlStrEqual@plt+0x12c87>
  416b95:	nop    DWORD PTR [rax]
  416b98:	mov    rcx,QWORD PTR [rsp]
  416b9c:	mov    rax,QWORD PTR [rcx+0x10]
  416ba0:	mov    rdx,QWORD PTR [rcx+0x18]
  416ba4:	test   rax,rax
  416ba7:	je     416d60 <xmlStrEqual@plt+0x12e20>
  416bad:	test   rdx,rdx
  416bb0:	je     416bc3 <xmlStrEqual@plt+0x12c83>
  416bb2:	mov    rcx,QWORD PTR [rsp+0x8]
  416bb7:	mov    QWORD PTR [rcx],rdx
  416bba:	lea    rdx,[rcx+0x8]
  416bbe:	mov    QWORD PTR [rsp+0x8],rdx
  416bc3:	mov    QWORD PTR [rsp],rax
  416bc7:	mov    rax,QWORD PTR [rsp]
  416bcb:	cmp    QWORD PTR [rax+0x8],0x0
  416bd0:	je     416b98 <xmlStrEqual@plt+0x12c58>
  416bd2:	mov    rax,QWORD PTR [rax+0x28]
  416bd6:	mov    rbx,QWORD PTR [rax]
  416bd9:	test   rbx,rbx
  416bdc:	je     416b98 <xmlStrEqual@plt+0x12c58>
  416bde:	mov    r13,QWORD PTR [rsp+0x30]
  416be3:	jmp    416bf8 <xmlStrEqual@plt+0x12cb8>
  416be5:	nop    DWORD PTR [rax]
  416be8:	test   rdx,rdx
  416beb:	je     416bf5 <xmlStrEqual@plt+0x12cb5>
  416bed:	mov    QWORD PTR [r13+0x0],rdx
  416bf1:	add    r13,0x8
  416bf5:	mov    rbx,rax
  416bf8:	cmp    QWORD PTR [rbx+0x8],0x0
  416bfd:	je     416c70 <xmlStrEqual@plt+0x12d30>
  416bff:	mov    rax,QWORD PTR [rbx+0x28]
  416c03:	test   rax,rax
  416c06:	je     416c70 <xmlStrEqual@plt+0x12d30>
  416c08:	mov    r12,QWORD PTR [rax]
  416c0b:	mov    rax,QWORD PTR [rsp+0x18]
  416c10:	mov    rsi,r12
  416c13:	mov    rdi,QWORD PTR [rax+0x18]
  416c17:	call   432d40 <xmlStrEqual@plt+0x2ee00>
  416c1c:	test   rax,rax
  416c1f:	je     416e30 <xmlStrEqual@plt+0x12ef0>
  416c25:	mov    rbp,QWORD PTR [rax]
  416c28:	mov    rdi,r12
  416c2b:	mov    rsi,rbp
  416c2e:	call   425310 <xmlStrEqual@plt+0x213d0>
  416c33:	test   eax,eax
  416c35:	jne    416cb0 <xmlStrEqual@plt+0x12d70>
  416c37:	mov    rdi,rbp
  416c3a:	call   424d40 <xmlStrEqual@plt+0x20e00>
  416c3f:	mov    rdi,r12
  416c42:	mov    rbp,rax
  416c45:	call   424d40 <xmlStrEqual@plt+0x20e00>
  416c4a:	mov    rdx,rax
  416c4d:	mov    rcx,rbp
  416c50:	lea    rsi,[rip+0x353f9]        # 44c050 <xmlStrEqual@plt+0x48110>
  416c57:	mov    edi,0x2
  416c5c:	xor    eax,eax
  416c5e:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  416c63:	mov    BYTE PTR [rsp+0x17],0x1
  416c68:	nop    DWORD PTR [rax+rax*1+0x0]
  416c70:	mov    rax,QWORD PTR [rbx+0x10]
  416c74:	mov    rdx,QWORD PTR [rbx+0x18]
  416c78:	test   rax,rax
  416c7b:	jne    416be8 <xmlStrEqual@plt+0x12ca8>
  416c81:	mov    rax,rdx
  416c84:	test   rdx,rdx
  416c87:	jne    416bf5 <xmlStrEqual@plt+0x12cb5>
  416c8d:	cmp    r13,QWORD PTR [rsp+0x30]
  416c92:	je     416b98 <xmlStrEqual@plt+0x12c58>
  416c98:	mov    rax,QWORD PTR [r13-0x8]
  416c9c:	test   rax,rax
  416c9f:	je     416b98 <xmlStrEqual@plt+0x12c58>
  416ca5:	sub    r13,0x8
  416ca9:	jmp    416bf5 <xmlStrEqual@plt+0x12cb5>
  416cae:	xchg   ax,ax
  416cb0:	mov    rdi,r12
  416cb3:	call   424ee0 <xmlStrEqual@plt+0x20fa0>
  416cb8:	mov    r15d,eax
  416cbb:	mov    rax,QWORD PTR [rsp+0x20]
  416cc0:	mov    r14,QWORD PTR [rax+0x8]
  416cc4:	cmp    rax,r14
  416cc7:	je     416e65 <xmlStrEqual@plt+0x12f25>
  416ccd:	mov    QWORD PTR [rsp+0x28],rbx
  416cd2:	mov    rbx,QWORD PTR [rsp+0x20]
  416cd7:	jmp    416cfc <xmlStrEqual@plt+0x12dbc>
  416cd9:	nop    DWORD PTR [rax+0x0]
  416ce0:	mov    rsi,rbp
  416ce3:	mov    rdi,r12
  416ce6:	call   437920 <xmlStrEqual@plt+0x339e0>
  416ceb:	cmp    al,0x1
  416ced:	je     416d1c <xmlStrEqual@plt+0x12ddc>
  416cef:	mov    r14,QWORD PTR [r14+0x8]
  416cf3:	cmp    rbx,r14
  416cf6:	je     416e60 <xmlStrEqual@plt+0x12f20>
  416cfc:	mov    rbp,QWORD PTR [r14+0x10]
  416d00:	mov    rdi,rbp
  416d03:	call   424ee0 <xmlStrEqual@plt+0x20fa0>
  416d08:	cmp    r15b,al
  416d0b:	jb     416ce0 <xmlStrEqual@plt+0x12da0>
  416d0d:	mov    rsi,r12
  416d10:	mov    rdi,rbp
  416d13:	call   437920 <xmlStrEqual@plt+0x339e0>
  416d18:	cmp    al,0x1
  416d1a:	jne    416cef <xmlStrEqual@plt+0x12daf>
  416d1c:	mov    rdi,rbp
  416d1f:	mov    rbx,QWORD PTR [rsp+0x28]
  416d24:	call   424d40 <xmlStrEqual@plt+0x20e00>
  416d29:	mov    rdi,r12
  416d2c:	mov    rbp,rax
  416d2f:	call   424d40 <xmlStrEqual@plt+0x20e00>
  416d34:	mov    rdx,rax
  416d37:	mov    rcx,rbp
  416d3a:	lea    rsi,[rip+0x35357]        # 44c098 <xmlStrEqual@plt+0x48158>
  416d41:	mov    edi,0x2
  416d46:	xor    eax,eax
  416d48:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  416d4d:	mov    BYTE PTR [rsp+0x17],0x1
  416d52:	jmp    416c70 <xmlStrEqual@plt+0x12d30>
  416d57:	nop    WORD PTR [rax+rax*1+0x0]
  416d60:	mov    rax,rdx
  416d63:	test   rdx,rdx
  416d66:	jne    416bc3 <xmlStrEqual@plt+0x12c83>
  416d6c:	mov    rax,QWORD PTR [rsp+0x8]
  416d71:	mov    rdx,QWORD PTR [rsp+0x40]
  416d76:	cmp    rax,rdx
  416d79:	je     416d88 <xmlStrEqual@plt+0x12e48>
  416d7b:	mov    rax,QWORD PTR [rax-0x8]
  416d7f:	test   rax,rax
  416d82:	jne    416edf <xmlStrEqual@plt+0x12f9f>
  416d88:	mov    rax,QWORD PTR [rsp+0x38]
  416d8d:	mov    rax,QWORD PTR [rax+0x8]
  416d91:	mov    QWORD PTR [rsp+0x38],rax
  416d96:	cmp    QWORD PTR [rsp+0x48],rax
  416d9b:	jne    416b70 <xmlStrEqual@plt+0x12c30>
  416da1:	mov    rdi,QWORD PTR [rsp+0x48]
  416da6:	call   42e2b0 <xmlStrEqual@plt+0x2a370>
  416dab:	mov    rdi,QWORD PTR [rsp+0x20]
  416db0:	call   42e2b0 <xmlStrEqual@plt+0x2a370>
  416db5:	cmp    BYTE PTR [rsp+0x17],0x0
  416dba:	jne    416e77 <xmlStrEqual@plt+0x12f37>
  416dc0:	mov    rbx,0x469e3c
  416dc7:	mov    edx,DWORD PTR [rbx]
  416dc9:	test   edx,edx
  416dcb:	jle    416de0 <xmlStrEqual@plt+0x12ea0>
  416dcd:	lea    rsi,[rip+0x34d84]        # 44bb58 <xmlStrEqual@plt+0x47c18>
  416dd4:	mov    edi,0x5
  416dd9:	xor    eax,eax
  416ddb:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  416de0:	mov    r15,QWORD PTR [rsp+0x18]
  416de5:	mov    esi,0x5
  416dea:	mov    rdi,r15
  416ded:	call   415e60 <xmlStrEqual@plt+0x11f20>
  416df2:	mov    esi,0x5
  416df7:	mov    rdi,r15
  416dfa:	call   4161d0 <xmlStrEqual@plt+0x12290>
  416dff:	mov    eax,DWORD PTR [rbx]
  416e01:	test   eax,eax
  416e03:	jg     416e83 <xmlStrEqual@plt+0x12f43>
  416e05:	mov    rax,QWORD PTR [rsp+0x868]
  416e0d:	xor    rax,QWORD PTR fs:0x28
  416e16:	jne    416eea <xmlStrEqual@plt+0x12faa>
  416e1c:	add    rsp,0x878
  416e23:	pop    rbx
  416e24:	pop    rbp
  416e25:	pop    r12
  416e27:	pop    r13
  416e29:	pop    r14
  416e2b:	pop    r15
  416e2d:	ret    
  416e2e:	xchg   ax,ax
  416e30:	mov    rdi,r12
  416e33:	call   424d40 <xmlStrEqual@plt+0x20e00>
  416e38:	mov    rdx,rax
  416e3b:	lea    rsi,[rip+0x351c6]        # 44c008 <xmlStrEqual@plt+0x480c8>
  416e42:	mov    edi,0x2
  416e47:	xor    eax,eax
  416e49:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  416e4e:	mov    BYTE PTR [rsp+0x17],0x1
  416e53:	jmp    416c70 <xmlStrEqual@plt+0x12d30>
  416e58:	nop    DWORD PTR [rax+rax*1+0x0]
  416e60:	mov    rbx,QWORD PTR [rsp+0x28]
  416e65:	mov    rsi,QWORD PTR [rsp+0x20]
  416e6a:	mov    rdi,r12
  416e6d:	call   42dcf0 <xmlStrEqual@plt+0x29db0>
  416e72:	jmp    416c70 <xmlStrEqual@plt+0x12d30>
  416e77:	xor    eax,eax
  416e79:	call   43f9f0 <xmlStrEqual@plt+0x3bab0>
  416e7e:	jmp    416dc0 <xmlStrEqual@plt+0x12e80>
  416e83:	mov    rax,QWORD PTR [rsp+0x868]
  416e8b:	xor    rax,QWORD PTR fs:0x28
  416e94:	jne    416eea <xmlStrEqual@plt+0x12faa>
  416e96:	add    rsp,0x878
  416e9d:	pop    rbx
  416e9e:	pop    rbp
  416e9f:	pop    r12
  416ea1:	pop    r13
  416ea3:	pop    r14
  416ea5:	lea    rsi,[rip+0x35289]        # 44c135 <xmlStrEqual@plt+0x481f5>
  416eac:	mov    edi,0x5
  416eb1:	xor    eax,eax
  416eb3:	pop    r15
  416eb5:	jmp    430e20 <xmlStrEqual@plt+0x2cee0>
  416eba:	lea    rdx,[rip+0x34e97]        # 44bd58 <xmlStrEqual@plt+0x47e18>
  416ec1:	lea    rsi,[rip+0x35288]        # 44c150 <xmlStrEqual@plt+0x48210>
  416ec8:	lea    rdi,[rip+0x35200]        # 44c0cf <xmlStrEqual@plt+0x4818f>
  416ecf:	call   4350f0 <xmlStrEqual@plt+0x311b0>
  416ed4:	sub    QWORD PTR [rsp+0x28],0x8
  416eda:	jmp    41688c <xmlStrEqual@plt+0x1294c>
  416edf:	sub    QWORD PTR [rsp+0x8],0x8
  416ee5:	jmp    416bc3 <xmlStrEqual@plt+0x12c83>
  416eea:	call   403c00 <__stack_chk_fail@plt>
  416eef:	nop
  416ef0:	endbr64 
  416ef4:	push   r12
  416ef6:	mov    r12d,esi
  416ef9:	push   rbp
  416efa:	mov    rbp,rdi
  416efd:	mov    edi,0x8
  416f02:	push   rbx
  416f03:	call   434fe0 <xmlStrEqual@plt+0x310a0>
  416f08:	mov    rbx,rax
  416f0b:	mov    rdi,rbp
  416f0e:	test   r12d,r12d
  416f11:	je     416f40 <xmlStrEqual@plt+0x13000>
  416f13:	call   425890 <xmlStrEqual@plt+0x21950>
  416f18:	cmp    ax,0x2
  416f1c:	mov    edx,0x20
  416f21:	mov    eax,0x80
  416f26:	cmovne edx,eax
  416f29:	mov    rsi,rbp
  416f2c:	mov    edi,r12d
  416f2f:	call   429ab0 <xmlStrEqual@plt+0x25b70>
  416f34:	mov    QWORD PTR [rbx],rax
  416f37:	mov    rax,rbx
  416f3a:	pop    rbx
  416f3b:	pop    rbp
  416f3c:	pop    r12
  416f3e:	ret    
  416f3f:	nop
  416f40:	call   425060 <xmlStrEqual@plt+0x21120>
  416f45:	mov    QWORD PTR [rbx],rax
  416f48:	mov    rax,rbx
  416f4b:	pop    rbx
  416f4c:	pop    rbp
  416f4d:	pop    r12
  416f4f:	ret    
  416f50:	endbr64 
  416f54:	push   r14
  416f56:	mov    r14,rcx
  416f59:	push   r13
  416f5b:	mov    r13d,edx
  416f5e:	push   r12
  416f60:	mov    r12d,esi
  416f63:	push   rbp
  416f64:	mov    rbp,rdi
  416f67:	mov    edi,0x8
  416f6c:	push   rbx
  416f6d:	call   434fe0 <xmlStrEqual@plt+0x310a0>
  416f72:	mov    rbx,rax
  416f75:	mov    rdi,rbp
  416f78:	test   r12d,r12d
  416f7b:	je     416fe0 <xmlStrEqual@plt+0x130a0>
  416f7d:	call   425890 <xmlStrEqual@plt+0x21950>
  416f82:	cmp    ax,0x2
  416f86:	mov    edx,0x20
  416f8b:	mov    eax,0x80
  416f90:	cmovne edx,eax
  416f93:	mov    rsi,rbp
  416f96:	mov    edi,r12d
  416f99:	call   429ab0 <xmlStrEqual@plt+0x25b70>
  416f9e:	mov    rbp,rax
  416fa1:	push   0x0
  416fa3:	mov    edx,r13d
  416fa6:	mov    r9,r14
  416fa9:	push   0x0
  416fab:	mov    rdi,rbp
  416fae:	xor    r8d,r8d
  416fb1:	mov    ecx,0x1
  416fb6:	mov    esi,0x5a0
  416fbb:	call   42c630 <xmlStrEqual@plt+0x286f0>
  416fc0:	mov    QWORD PTR [rbx],rax
  416fc3:	mov    rdi,rbp
  416fc6:	call   424bf0 <xmlStrEqual@plt+0x20cb0>
  416fcb:	pop    rax
  416fcc:	pop    rdx
  416fcd:	mov    rax,rbx
  416fd0:	pop    rbx
  416fd1:	pop    rbp
  416fd2:	pop    r12
  416fd4:	pop    r13
  416fd6:	pop    r14
  416fd8:	ret    
  416fd9:	nop    DWORD PTR [rax+0x0]
  416fe0:	call   425060 <xmlStrEqual@plt+0x21120>
  416fe5:	mov    rbp,rax
  416fe8:	jmp    416fa1 <xmlStrEqual@plt+0x13061>
  416fea:	nop    WORD PTR [rax+rax*1+0x0]
  416ff0:	endbr64 
  416ff4:	mov    eax,0x1
  416ff9:	ret    
  416ffa:	nop    WORD PTR [rax+rax*1+0x0]
  417000:	endbr64 
  417004:	mov    eax,0x1
  417009:	ret    
  41700a:	nop    WORD PTR [rax+rax*1+0x0]
  417010:	endbr64 
  417014:	mov    eax,0x1
  417019:	ret    
  41701a:	nop    WORD PTR [rax+rax*1+0x0]
  417020:	endbr64 
  417024:	xor    eax,eax
  417026:	ret    
  417027:	nop    WORD PTR [rax+rax*1+0x0]
  417030:	endbr64 
  417034:	sub    rsp,0x8
  417038:	mov    edi,0x30
  41703d:	call   434fe0 <xmlStrEqual@plt+0x310a0>
  417042:	add    rsp,0x8
  417046:	ret    
  417047:	nop    WORD PTR [rax+rax*1+0x0]
  417050:	endbr64 
  417054:	test   rdi,rdi
  417057:	je     417060 <xmlStrEqual@plt+0x13120>
  417059:	jmp    433ac0 <xmlStrEqual@plt+0x2fb80>
  41705e:	xchg   ax,ax
  417060:	ret    
  417061:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  41706c:	nop    DWORD PTR [rax+0x0]
  417070:	endbr64 
  417074:	push   rbx
  417075:	mov    rbx,rdi
  417078:	mov    rdi,QWORD PTR [rdi+0x10]
  41707c:	call   424bf0 <xmlStrEqual@plt+0x20cb0>
  417081:	mov    rdi,rbx
  417084:	pop    rbx
  417085:	jmp    4037b0 <free@plt>
  41708a:	nop    WORD PTR [rax+rax*1+0x0]
  417090:	endbr64 
  417094:	push   rbx
  417095:	mov    rbx,rdi
  417098:	mov    rdi,QWORD PTR [rdi+0x8]
  41709c:	call   424bf0 <xmlStrEqual@plt+0x20cb0>
  4170a1:	mov    rdi,QWORD PTR [rbx+0x10]
  4170a5:	call   424bf0 <xmlStrEqual@plt+0x20cb0>
  4170aa:	mov    rdi,QWORD PTR [rbx+0x18]
  4170ae:	call   42e2b0 <xmlStrEqual@plt+0x2a370>
  4170b3:	mov    rdi,rbx
  4170b6:	pop    rbx
  4170b7:	jmp    4037b0 <free@plt>
  4170bc:	nop    DWORD PTR [rax+0x0]
  4170c0:	endbr64 
  4170c4:	test   rdi,rdi
  4170c7:	je     417118 <xmlStrEqual@plt+0x131d8>
  4170c9:	push   rbx
  4170ca:	mov    rax,0x475860
  4170d1:	mov    rbx,rdi
  4170d4:	mov    rdx,QWORD PTR [rax]
  4170d7:	mov    rax,0x475858
  4170de:	mov    rsi,QWORD PTR [rax]
  4170e1:	call   43b8d0 <xmlStrEqual@plt+0x37990>
  4170e6:	mov    rdi,QWORD PTR [rbx]
  4170e9:	call   424bf0 <xmlStrEqual@plt+0x20cb0>
  4170ee:	mov    rdi,QWORD PTR [rbx+0x8]
  4170f2:	call   42e2b0 <xmlStrEqual@plt+0x2a370>
  4170f7:	mov    rdi,QWORD PTR [rbx+0x18]
  4170fb:	call   433ac0 <xmlStrEqual@plt+0x2fb80>
  417100:	mov    rdi,QWORD PTR [rbx+0x28]
  417104:	call   42e2b0 <xmlStrEqual@plt+0x2a370>
  417109:	mov    rdi,rbx
  41710c:	pop    rbx
  41710d:	jmp    4037b0 <free@plt>
  417112:	nop    WORD PTR [rax+rax*1+0x0]
  417118:	ret    
  417119:	nop    DWORD PTR [rax+0x0]
  417120:	endbr64 
  417124:	push   rbx
  417125:	mov    rax,0x469720
  41712c:	cmp    QWORD PTR [rdi+0x8],rax
  417130:	jne    417160 <xmlStrEqual@plt+0x13220>
  417132:	mov    rax,0x469e3c
  417139:	mov    rbx,rdi
  41713c:	mov    eax,DWORD PTR [rax]
  41713e:	test   eax,eax
  417140:	jle    417155 <xmlStrEqual@plt+0x13215>
  417142:	lea    rsi,[rip+0x356db]        # 44c824 <xmlStrEqual@plt+0x488e4>
  417149:	mov    edi,0x5
  41714e:	xor    eax,eax
  417150:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  417155:	mov    rdi,rbx
  417158:	pop    rbx
  417159:	jmp    4037b0 <free@plt>
  41715e:	xchg   ax,ax
  417160:	lea    rdx,[rip+0x35001]        # 44c168 <xmlStrEqual@plt+0x48228>
  417167:	lea    rsi,[rip+0x35752]        # 44c8c0 <xmlStrEqual@plt+0x48980>
  41716e:	lea    rdi,[rip+0x35695]        # 44c80a <xmlStrEqual@plt+0x488ca>
  417175:	call   4350f0 <xmlStrEqual@plt+0x311b0>
  41717a:	nop    WORD PTR [rax+rax*1+0x0]
  417180:	endbr64 
  417184:	push   rbx
  417185:	mov    rax,0x469720
  41718c:	cmp    QWORD PTR [rdi+0x8],rax
  417190:	jne    4171c0 <xmlStrEqual@plt+0x13280>
  417192:	mov    rbx,rdi
  417195:	mov    rsi,0x417050
  41719c:	mov    rdi,QWORD PTR [rdi+0x18]
  4171a0:	call   4319b0 <xmlStrEqual@plt+0x2da70>
  4171a5:	mov    rdi,QWORD PTR [rbx+0x20]
  4171a9:	mov    rsi,0x4170c0
  4171b0:	call   4319b0 <xmlStrEqual@plt+0x2da70>
  4171b5:	mov    rdi,QWORD PTR [rbx+0x28]
  4171b9:	pop    rbx
  4171ba:	jmp    417050 <xmlStrEqual@plt+0x13110>
  4171bf:	nop
  4171c0:	lea    rdx,[rip+0x34fa1]        # 44c168 <xmlStrEqual@plt+0x48228>
  4171c7:	lea    rsi,[rip+0x356f2]        # 44c8c0 <xmlStrEqual@plt+0x48980>
  4171ce:	lea    rdi,[rip+0x35635]        # 44c80a <xmlStrEqual@plt+0x488ca>
  4171d5:	call   4350f0 <xmlStrEqual@plt+0x311b0>
  4171da:	nop    WORD PTR [rax+rax*1+0x0]
  4171e0:	endbr64 
  4171e4:	push   rbx
  4171e5:	mov    rax,0x469720
  4171ec:	cmp    QWORD PTR [rdi+0x8],rax
  4171f0:	jne    417260 <xmlStrEqual@plt+0x13320>
  4171f2:	xor    eax,eax
  4171f4:	mov    rbx,rdi
  4171f7:	call   431e70 <xmlStrEqual@plt+0x2df30>
  4171fc:	mov    QWORD PTR [rbx+0x18],rax
  417200:	xor    eax,eax
  417202:	call   431e70 <xmlStrEqual@plt+0x2df30>
  417207:	cmp    QWORD PTR [rbx+0x18],0x0
  41720c:	mov    QWORD PTR [rbx+0x20],rax
  417210:	je     417250 <xmlStrEqual@plt+0x13310>
  417212:	test   rax,rax
  417215:	je     417250 <xmlStrEqual@plt+0x13310>
  417217:	mov    rax,0x469e3c
  41721e:	mov    ebx,0x1
  417223:	mov    eax,DWORD PTR [rax]
  417225:	test   eax,eax
  417227:	jg     417230 <xmlStrEqual@plt+0x132f0>
  417229:	mov    eax,ebx
  41722b:	pop    rbx
  41722c:	ret    
  41722d:	nop    DWORD PTR [rax]
  417230:	xor    eax,eax
  417232:	lea    rsi,[rip+0x34f57]        # 44c190 <xmlStrEqual@plt+0x48250>
  417239:	mov    edi,0x5
  41723e:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  417243:	mov    eax,ebx
  417245:	pop    rbx
  417246:	ret    
  417247:	nop    WORD PTR [rax+rax*1+0x0]
  417250:	xor    ebx,ebx
  417252:	mov    eax,ebx
  417254:	pop    rbx
  417255:	ret    
  417256:	nop    WORD PTR cs:[rax+rax*1+0x0]
  417260:	lea    rdx,[rip+0x34f01]        # 44c168 <xmlStrEqual@plt+0x48228>
  417267:	lea    rsi,[rip+0x35652]        # 44c8c0 <xmlStrEqual@plt+0x48980>
  41726e:	lea    rdi,[rip+0x35595]        # 44c80a <xmlStrEqual@plt+0x488ca>
  417275:	call   4350f0 <xmlStrEqual@plt+0x311b0>
  41727a:	nop    WORD PTR [rax+rax*1+0x0]
  417280:	endbr64 
  417284:	test   rsi,rsi
  417287:	je     4172b0 <xmlStrEqual@plt+0x13370>
  417289:	sub    rsp,0x8
  41728d:	mov    rdx,rsi
  417290:	mov    rdi,QWORD PTR [rdi+0x20]
  417294:	mov    rsi,QWORD PTR [rsi]
  417297:	call   4321e0 <xmlStrEqual@plt+0x2e2a0>
  41729c:	test   eax,eax
  41729e:	setne  al
  4172a1:	movzx  eax,al
  4172a4:	add    rsp,0x8
  4172a8:	ret    
  4172a9:	nop    DWORD PTR [rax+0x0]
  4172b0:	xor    eax,eax
  4172b2:	ret    
  4172b3:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4172be:	xchg   ax,ax
  4172c0:	endbr64 
  4172c4:	mov    QWORD PTR [rdi+0x28],rsi
  4172c8:	mov    eax,0x1
  4172cd:	ret    
  4172ce:	xchg   ax,ax
  4172d0:	endbr64 
  4172d4:	push   r12
  4172d6:	mov    r12,rdi
  4172d9:	push   rbp
  4172da:	push   rbx
  4172db:	mov    ebx,esi
  4172dd:	cmp    esi,0x4
  4172e0:	jle    417348 <xmlStrEqual@plt+0x13408>
  4172e2:	mov    rbp,0x469e3c
  4172e9:	mov    eax,DWORD PTR [rbp+0x0]
  4172ec:	add    eax,0x4
  4172ef:	cmp    esi,eax
  4172f1:	jle    417300 <xmlStrEqual@plt+0x133c0>
  4172f3:	pop    rbx
  4172f4:	pop    rbp
  4172f5:	pop    r12
  4172f7:	ret    
  4172f8:	nop    DWORD PTR [rax+rax*1+0x0]
  417300:	xor    eax,eax
  417302:	lea    rsi,[rip+0x34eaf]        # 44c1b8 <xmlStrEqual@plt+0x48278>
  417309:	mov    edi,ebx
  41730b:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  417310:	mov    eax,DWORD PTR [rbp+0x0]
  417313:	add    eax,0x4
  417316:	cmp    ebx,eax
  417318:	jle    417380 <xmlStrEqual@plt+0x13440>
  41731a:	mov    rdi,QWORD PTR [r12+0x28]
  41731f:	mov    esi,ebx
  417321:	call   433bb0 <xmlStrEqual@plt+0x2fc70>
  417326:	mov    eax,DWORD PTR [rbp+0x0]
  417329:	add    eax,0x4
  41732c:	cmp    ebx,eax
  41732e:	jg     4172f3 <xmlStrEqual@plt+0x133b3>
  417330:	mov    edi,ebx
  417332:	pop    rbx
  417333:	pop    rbp
  417334:	lea    rsi,[rip+0x3180d]        # 448b48 <xmlStrEqual@plt+0x44c08>
  41733b:	xor    eax,eax
  41733d:	pop    r12
  41733f:	jmp    430e20 <xmlStrEqual@plt+0x2cee0>
  417344:	nop    DWORD PTR [rax+0x0]
  417348:	mov    edi,ebx
  41734a:	xor    eax,eax
  41734c:	lea    rsi,[rip+0x34e65]        # 44c1b8 <xmlStrEqual@plt+0x48278>
  417353:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  417358:	mov    edi,ebx
  41735a:	lea    rsi,[rip+0x34e97]        # 44c1f8 <xmlStrEqual@plt+0x482b8>
  417361:	xor    eax,eax
  417363:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  417368:	mov    rdi,QWORD PTR [r12+0x28]
  41736d:	mov    esi,ebx
  41736f:	call   433bb0 <xmlStrEqual@plt+0x2fc70>
  417374:	jmp    417330 <xmlStrEqual@plt+0x133f0>
  417376:	nop    WORD PTR cs:[rax+rax*1+0x0]
  417380:	lea    rsi,[rip+0x34e71]        # 44c1f8 <xmlStrEqual@plt+0x482b8>
  417387:	mov    edi,ebx
  417389:	xor    eax,eax
  41738b:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  417390:	jmp    41731a <xmlStrEqual@plt+0x133da>
  417392:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  41739d:	nop    DWORD PTR [rax]
  4173a0:	endbr64 
  4173a4:	push   rbp
  4173a5:	push   rbx
  4173a6:	sub    rsp,0x8
  4173aa:	mov    rax,0x469720
  4173b1:	cmp    QWORD PTR [rdi+0x8],rax
  4173b5:	jne    417420 <xmlStrEqual@plt+0x134e0>
  4173b7:	mov    rbp,0x469e3c
  4173be:	mov    rbx,rdi
  4173c1:	mov    edx,DWORD PTR [rbp+0x0]
  4173c4:	test   edx,edx
  4173c6:	jle    4173db <xmlStrEqual@plt+0x1349b>
  4173c8:	lea    rsi,[rip+0x34789]        # 44bb58 <xmlStrEqual@plt+0x47c18>
  4173cf:	mov    edi,0x5
  4173d4:	xor    eax,eax
  4173d6:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  4173db:	mov    esi,0x5
  4173e0:	mov    rdi,rbx
  4173e3:	call   4172d0 <xmlStrEqual@plt+0x13390>
  4173e8:	mov    eax,DWORD PTR [rbp+0x0]
  4173eb:	test   eax,eax
  4173ed:	jg     417400 <xmlStrEqual@plt+0x134c0>
  4173ef:	add    rsp,0x8
  4173f3:	pop    rbx
  4173f4:	pop    rbp
  4173f5:	ret    
  4173f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  417400:	add    rsp,0x8
  417404:	pop    rbx
  417405:	lea    rsi,[rip+0x35435]        # 44c841 <xmlStrEqual@plt+0x48901>
  41740c:	mov    edi,0x5
  417411:	xor    eax,eax
  417413:	pop    rbp
  417414:	jmp    430e20 <xmlStrEqual@plt+0x2cee0>
  417419:	nop    DWORD PTR [rax+0x0]
  417420:	lea    rdx,[rip+0x34d41]        # 44c168 <xmlStrEqual@plt+0x48228>
  417427:	lea    rsi,[rip+0x35492]        # 44c8c0 <xmlStrEqual@plt+0x48980>
  41742e:	lea    rdi,[rip+0x353d5]        # 44c80a <xmlStrEqual@plt+0x488ca>
  417435:	call   4350f0 <xmlStrEqual@plt+0x311b0>
  41743a:	nop    WORD PTR [rax+rax*1+0x0]
  417440:	endbr64 
  417444:	push   r15
  417446:	push   r14
  417448:	push   r13
  41744a:	push   r12
  41744c:	mov    r12,rdi
  41744f:	push   rbp
  417450:	push   rbx
  417451:	mov    ebx,esi
  417453:	sub    rsp,0x848
  41745a:	mov    rax,QWORD PTR fs:0x28
  417463:	mov    QWORD PTR [rsp+0x838],rax
  41746b:	xor    eax,eax
  41746d:	cmp    esi,0x4
  417470:	jle    4174ab <xmlStrEqual@plt+0x1356b>
  417472:	mov    rax,0x469e3c
  417479:	mov    eax,DWORD PTR [rax]
  41747b:	add    eax,0x4
  41747e:	cmp    esi,eax
  417480:	jle    4174ab <xmlStrEqual@plt+0x1356b>
  417482:	mov    rax,QWORD PTR [rsp+0x838]
  41748a:	xor    rax,QWORD PTR fs:0x28
  417493:	jne    417755 <xmlStrEqual@plt+0x13815>
  417499:	add    rsp,0x848
  4174a0:	pop    rbx
  4174a1:	pop    rbp
  4174a2:	pop    r12
  4174a4:	pop    r13
  4174a6:	pop    r14
  4174a8:	pop    r15
  4174aa:	ret    
  4174ab:	lea    rsi,[rip+0x34d8e]        # 44c240 <xmlStrEqual@plt+0x48300>
  4174b2:	mov    edi,ebx
  4174b4:	xor    eax,eax
  4174b6:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  4174bb:	call   42dc90 <xmlStrEqual@plt+0x29d50>
  4174c0:	mov    rdi,QWORD PTR [r12]
  4174c4:	mov    rsi,rax
  4174c7:	mov    r15,rax
  4174ca:	mov    QWORD PTR [rsp+0x18],rax
  4174cf:	call   42dcf0 <xmlStrEqual@plt+0x29db0>
  4174d4:	mov    rdi,QWORD PTR [r12+0x8]
  4174d9:	mov    rsi,r15
  4174dc:	call   42dcf0 <xmlStrEqual@plt+0x29db0>
  4174e1:	mov    r8,QWORD PTR [r12+0x10]
  4174e6:	xor    ebp,ebp
  4174e8:	mov    rsi,QWORD PTR [r8]
  4174eb:	mov    edx,DWORD PTR [rsi]
  4174ed:	test   edx,edx
  4174ef:	jne    417501 <xmlStrEqual@plt+0x135c1>
  4174f1:	jmp    417541 <xmlStrEqual@plt+0x13601>
  4174f3:	nop    DWORD PTR [rax+rax*1+0x0]
  4174f8:	mov    rsi,QWORD PTR [r8]
  4174fb:	inc    ebp
  4174fd:	cmp    DWORD PTR [rsi],ebp
  4174ff:	je     417541 <xmlStrEqual@plt+0x13601>
  417501:	mov    ecx,ebp
  417503:	mov    rdi,QWORD PTR [rsi+0x10]
  417507:	lea    eax,[rbp+rbp*1+0x0]
  41750b:	and    eax,0x1e
  41750e:	shr    ecx,0x4
  417511:	mov    edx,eax
  417513:	mov    eax,DWORD PTR [rdi+rcx*4]
  417516:	shrx   eax,eax,edx
  41751b:	test   al,0x3
  41751d:	jne    4174f8 <xmlStrEqual@plt+0x135b8>
  41751f:	mov    rdx,QWORD PTR [rsi+0x20]
  417523:	mov    eax,ebp
  417525:	mov    rsi,QWORD PTR [rsp+0x18]
  41752a:	mov    rdi,QWORD PTR [rdx+rax*8]
  41752e:	inc    ebp
  417530:	call   42dcf0 <xmlStrEqual@plt+0x29db0>
  417535:	mov    r8,QWORD PTR [r12+0x10]
  41753a:	mov    rsi,QWORD PTR [r8]
  41753d:	cmp    DWORD PTR [rsi],ebp
  41753f:	jne    417501 <xmlStrEqual@plt+0x135c1>
  417541:	mov    r8,QWORD PTR [r12+0x18]
  417546:	xor    ebp,ebp
  417548:	mov    rsi,QWORD PTR [r8]
  41754b:	mov    eax,DWORD PTR [rsi]
  41754d:	test   eax,eax
  41754f:	jne    417561 <xmlStrEqual@plt+0x13621>
  417551:	jmp    4175a1 <xmlStrEqual@plt+0x13661>
  417553:	nop    DWORD PTR [rax+rax*1+0x0]
  417558:	mov    rsi,QWORD PTR [r8]
  41755b:	inc    ebp
  41755d:	cmp    DWORD PTR [rsi],ebp
  41755f:	je     4175a1 <xmlStrEqual@plt+0x13661>
  417561:	mov    ecx,ebp
  417563:	mov    rdi,QWORD PTR [rsi+0x10]
  417567:	lea    eax,[rbp+rbp*1+0x0]
  41756b:	and    eax,0x1e
  41756e:	shr    ecx,0x4
  417571:	mov    edx,eax
  417573:	mov    eax,DWORD PTR [rdi+rcx*4]
  417576:	shrx   eax,eax,edx
  41757b:	test   al,0x3
  41757d:	jne    417558 <xmlStrEqual@plt+0x13618>
  41757f:	mov    rdx,QWORD PTR [rsi+0x20]
  417583:	mov    eax,ebp
  417585:	mov    rsi,QWORD PTR [rsp+0x18]
  41758a:	mov    rdi,QWORD PTR [rdx+rax*8]
  41758e:	inc    ebp
  417590:	call   42dcf0 <xmlStrEqual@plt+0x29db0>
  417595:	mov    r8,QWORD PTR [r12+0x18]
  41759a:	mov    rsi,QWORD PTR [r8]
  41759d:	cmp    DWORD PTR [rsi],ebp
  41759f:	jne    417561 <xmlStrEqual@plt+0x13621>
  4175a1:	mov    r15,QWORD PTR [rsp+0x18]
  4175a6:	mov    rdi,QWORD PTR [r12+0x20]
  4175ab:	mov    rsi,r15
  4175ae:	call   42dcf0 <xmlStrEqual@plt+0x29db0>
  4175b3:	mov    rdi,QWORD PTR [r12+0x20]
  4175b8:	mov    rsi,r15
  4175bb:	call   42dcf0 <xmlStrEqual@plt+0x29db0>
  4175c0:	mov    rcx,QWORD PTR [r15+0x8]
  4175c4:	lea    rax,[rsp+0x20]
  4175c9:	mov    QWORD PTR [rsp+0x8],rcx
  4175ce:	mov    QWORD PTR [rsp+0x10],rax
  4175d3:	lea    r12,[rsp+0x430]
  4175db:	cmp    r15,rcx
  4175de:	je     4176f5 <xmlStrEqual@plt+0x137b5>
  4175e4:	mov    rax,QWORD PTR [rsp+0x8]
  4175e9:	mov    rax,QWORD PTR [rax+0x10]
  4175ed:	mov    r15,QWORD PTR [rax]
  4175f0:	test   r15,r15
  4175f3:	je     4176dc <xmlStrEqual@plt+0x1379c>
  4175f9:	mov    rbp,QWORD PTR [rsp+0x10]
  4175fe:	jmp    417621 <xmlStrEqual@plt+0x136e1>
  417600:	mov    rax,QWORD PTR [r15+0x10]
  417604:	mov    rdx,QWORD PTR [r15+0x18]
  417608:	test   rax,rax
  41760b:	je     4176c0 <xmlStrEqual@plt+0x13780>
  417611:	test   rdx,rdx
  417614:	je     41761e <xmlStrEqual@plt+0x136de>
  417616:	mov    QWORD PTR [rbp+0x0],rdx
  41761a:	add    rbp,0x8
  41761e:	mov    r15,rax
  417621:	cmp    QWORD PTR [r15+0x8],0x0
  417626:	je     417600 <xmlStrEqual@plt+0x136c0>
  417628:	mov    rax,QWORD PTR [r15+0x28]
  41762c:	mov    r13,QWORD PTR [rax]
  41762f:	test   r13,r13
  417632:	je     417600 <xmlStrEqual@plt+0x136c0>
  417634:	mov    r14,r12
  417637:	nop    WORD PTR [rax+rax*1+0x0]
  417640:	cmp    QWORD PTR [r13+0x8],0x0
  417645:	je     417657 <xmlStrEqual@plt+0x13717>
  417647:	mov    rdi,QWORD PTR [r13+0x28]
  41764b:	test   rdi,rdi
  41764e:	je     417657 <xmlStrEqual@plt+0x13717>
  417650:	mov    esi,ebx
  417652:	call   433bb0 <xmlStrEqual@plt+0x2fc70>
  417657:	mov    rdx,QWORD PTR [r13+0x10]
  41765b:	mov    r13,QWORD PTR [r13+0x18]
  41765f:	test   rdx,rdx
  417662:	je     417690 <xmlStrEqual@plt+0x13750>
  417664:	test   r13,r13
  417667:	je     4176b8 <xmlStrEqual@plt+0x13778>
  417669:	mov    QWORD PTR [r14],r13
  41766c:	mov    r13,rdx
  41766f:	add    r14,0x8
  417673:	cmp    QWORD PTR [r13+0x8],0x0
  417678:	jne    417647 <xmlStrEqual@plt+0x13707>
  41767a:	mov    rdx,QWORD PTR [r13+0x10]
  41767e:	mov    r13,QWORD PTR [r13+0x18]
  417682:	test   rdx,rdx
  417685:	jne    417664 <xmlStrEqual@plt+0x13724>
  417687:	nop    WORD PTR [rax+rax*1+0x0]
  417690:	test   r13,r13
  417693:	jne    417640 <xmlStrEqual@plt+0x13700>
  417695:	cmp    r14,r12
  417698:	je     417600 <xmlStrEqual@plt+0x136c0>
  41769e:	mov    r13,QWORD PTR [r14-0x8]
  4176a2:	test   r13,r13
  4176a5:	je     417600 <xmlStrEqual@plt+0x136c0>
  4176ab:	sub    r14,0x8
  4176af:	jmp    417640 <xmlStrEqual@plt+0x13700>
  4176b1:	nop    DWORD PTR [rax+0x0]
  4176b8:	mov    r13,rdx
  4176bb:	jmp    417640 <xmlStrEqual@plt+0x13700>
  4176bd:	nop    DWORD PTR [rax]
  4176c0:	mov    rax,rdx
  4176c3:	test   rdx,rdx
  4176c6:	jne    41761e <xmlStrEqual@plt+0x136de>
  4176cc:	cmp    rbp,QWORD PTR [rsp+0x10]
  4176d1:	je     4176dc <xmlStrEqual@plt+0x1379c>
  4176d3:	mov    r15,QWORD PTR [rbp-0x8]
  4176d7:	test   r15,r15
  4176da:	jne    41774c <xmlStrEqual@plt+0x1380c>
  4176dc:	mov    rax,QWORD PTR [rsp+0x8]
  4176e1:	mov    rax,QWORD PTR [rax+0x8]
  4176e5:	mov    QWORD PTR [rsp+0x8],rax
  4176ea:	cmp    QWORD PTR [rsp+0x18],rax
  4176ef:	jne    4175e4 <xmlStrEqual@plt+0x136a4>
  4176f5:	mov    rdi,QWORD PTR [rsp+0x18]
  4176fa:	call   42e2b0 <xmlStrEqual@plt+0x2a370>
  4176ff:	cmp    ebx,0x4
  417702:	jle    417718 <xmlStrEqual@plt+0x137d8>
  417704:	mov    rax,0x469e3c
  41770b:	mov    eax,DWORD PTR [rax]
  41770d:	add    eax,0x4
  417710:	cmp    ebx,eax
  417712:	jg     417482 <xmlStrEqual@plt+0x13542>
  417718:	mov    rax,QWORD PTR [rsp+0x838]
  417720:	xor    rax,QWORD PTR fs:0x28
  417729:	jne    417755 <xmlStrEqual@plt+0x13815>
  41772b:	add    rsp,0x848
  417732:	mov    edi,ebx
  417734:	pop    rbx
  417735:	pop    rbp
  417736:	pop    r12
  417738:	pop    r13
  41773a:	pop    r14
  41773c:	lea    rsi,[rip+0x31405]        # 448b48 <xmlStrEqual@plt+0x44c08>
  417743:	xor    eax,eax
  417745:	pop    r15
  417747:	jmp    430e20 <xmlStrEqual@plt+0x2cee0>
  41774c:	sub    rbp,0x8
  417750:	jmp    417621 <xmlStrEqual@plt+0x136e1>
  417755:	call   403c00 <__stack_chk_fail@plt>
  41775a:	nop    WORD PTR [rax+rax*1+0x0]
  417760:	endbr64 
  417764:	test   rsi,rsi
  417767:	je     417860 <xmlStrEqual@plt+0x13920>
  41776d:	push   r13
  41776f:	push   r12
  417771:	push   rbp
  417772:	mov    rbp,rdi
  417775:	mov    rdi,rsi
  417778:	push   rbx
  417779:	mov    rbx,rsi
  41777c:	sub    rsp,0x8
  417780:	call   433b80 <xmlStrEqual@plt+0x2fc40>
  417785:	mov    rdi,QWORD PTR [rbp+0x18]
  417789:	mov    rdx,rbx
  41778c:	mov    rsi,rax
  41778f:	call   4321e0 <xmlStrEqual@plt+0x2e2a0>
  417794:	test   eax,eax
  417796:	jne    4177a8 <xmlStrEqual@plt+0x13868>
  417798:	add    rsp,0x8
  41779c:	pop    rbx
  41779d:	pop    rbp
  41779e:	pop    r12
  4177a0:	xor    eax,eax
  4177a2:	pop    r13
  4177a4:	ret    
  4177a5:	nop    DWORD PTR [rax]
  4177a8:	mov    rax,QWORD PTR [rbx+0x8]
  4177ac:	xor    edi,edi
  4177ae:	imul   r12d,DWORD PTR [rax+0x38],0x3c
  4177b3:	call   43b3e0 <xmlStrEqual@plt+0x374a0>
  4177b8:	mov    rdi,rax
  4177bb:	mov    rcx,rbx
  4177be:	xor    r9d,r9d
  4177c1:	xor    r8d,r8d
  4177c4:	lea    rdx,[rip+0xf5]        # 4178c0 <xmlStrEqual@plt+0x13980>
  4177cb:	mov    rsi,rbp
  4177ce:	mov    r13,rax
  4177d1:	call   43b410 <xmlStrEqual@plt+0x374d0>
  4177d6:	mov    rax,0x475858
  4177dd:	mov    rsi,rbx
  4177e0:	mov    rdi,QWORD PTR [rax]
  4177e3:	mov    rdx,r13
  4177e6:	call   43b7c0 <xmlStrEqual@plt+0x37880>
  4177eb:	mov    esi,r12d
  4177ee:	mov    rdi,r13
  4177f1:	call   43b470 <xmlStrEqual@plt+0x37530>
  4177f6:	mov    rbx,QWORD PTR [rbx+0x8]
  4177fa:	mov    rax,0x469e3c
  417801:	cmp    r12d,0x3c
  417805:	jg     417868 <xmlStrEqual@plt+0x13928>
  417807:	mov    eax,DWORD PTR [rax]
  417809:	test   eax,eax
  41780b:	jle    41783d <xmlStrEqual@plt+0x138fd>
  41780d:	movzx  edi,BYTE PTR [rbx+0x3c]
  417811:	call   42d570 <xmlStrEqual@plt+0x29630>
  417816:	mov    rdi,rbx
  417819:	mov    r13,rax
  41781c:	call   424d40 <xmlStrEqual@plt+0x20e00>
  417821:	mov    rdx,rax
  417824:	mov    r8d,r12d
  417827:	mov    rcx,r13
  41782a:	lea    rsi,[rip+0x34a97]        # 44c2c8 <xmlStrEqual@plt+0x48388>
  417831:	mov    edi,0x5
  417836:	xor    eax,eax
  417838:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  41783d:	mov    rdi,QWORD PTR [rbp+0x18]
  417841:	mov    esi,0x7
  417846:	call   417440 <xmlStrEqual@plt+0x13500>
  41784b:	add    rsp,0x8
  41784f:	pop    rbx
  417850:	pop    rbp
  417851:	pop    r12
  417853:	mov    eax,0x1
  417858:	pop    r13
  41785a:	ret    
  41785b:	nop    DWORD PTR [rax+rax*1+0x0]
  417860:	xor    eax,eax
  417862:	ret    
  417863:	nop    DWORD PTR [rax+rax*1+0x0]
  417868:	mov    edx,DWORD PTR [rax]
  41786a:	test   edx,edx
  41786c:	jle    41783d <xmlStrEqual@plt+0x138fd>
  41786e:	movzx  edi,BYTE PTR [rbx+0x3c]
  417872:	call   42d570 <xmlStrEqual@plt+0x29630>
  417877:	mov    rdi,rbx
  41787a:	mov    r13,rax
  41787d:	call   424d40 <xmlStrEqual@plt+0x20e00>
  417882:	mov    rsi,rax
  417885:	mov    edx,0x88888889
  41788a:	mov    eax,r12d
  41788d:	imul   edx
  41788f:	mov    rcx,r13
  417892:	mov    edi,0x5
  417897:	add    edx,r12d
  41789a:	sar    edx,0x5
  41789d:	mov    r8d,edx
  4178a0:	sar    r12d,0x1f
  4178a4:	mov    rdx,rsi
  4178a7:	sub    r8d,r12d
  4178aa:	lea    rsi,[rip+0x349cf]        # 44c280 <xmlStrEqual@plt+0x48340>
  4178b1:	xor    eax,eax
  4178b3:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  4178b8:	jmp    41783d <xmlStrEqual@plt+0x138fd>
  4178ba:	nop    WORD PTR [rax+rax*1+0x0]
  4178c0:	endbr64 
  4178c4:	push   r12
  4178c6:	push   rbp
  4178c7:	push   rbx
  4178c8:	mov    rbx,rdi
  4178cb:	call   43b440 <xmlStrEqual@plt+0x37500>
  4178d0:	mov    rdi,rbx
  4178d3:	mov    rbp,rax
  4178d6:	mov    r12,QWORD PTR [rax+0x8]
  4178da:	call   43b430 <xmlStrEqual@plt+0x374f0>
  4178df:	mov    rbx,rax
  4178e2:	mov    rax,0x469e3c
  4178e9:	mov    eax,DWORD PTR [rax]
  4178eb:	test   eax,eax
  4178ed:	jle    41790d <xmlStrEqual@plt+0x139cd>
  4178ef:	mov    rdi,r12
  4178f2:	call   424d40 <xmlStrEqual@plt+0x20e00>
  4178f7:	mov    rdx,rax
  4178fa:	lea    rsi,[rip+0x34a0f]        # 44c310 <xmlStrEqual@plt+0x483d0>
  417901:	mov    edi,0x5
  417906:	xor    eax,eax
  417908:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  41790d:	mov    rdi,rbp
  417910:	call   433b80 <xmlStrEqual@plt+0x2fc40>
  417915:	mov    rdi,QWORD PTR [rbx+0x18]
  417919:	mov    rdx,0x433ac0
  417920:	mov    rsi,rax
  417923:	call   432b40 <xmlStrEqual@plt+0x2ec00>
  417928:	mov    rdi,QWORD PTR [rbx+0x18]
  41792c:	mov    esi,0x7
  417931:	call   417440 <xmlStrEqual@plt+0x13500>
  417936:	pop    rbx
  417937:	pop    rbp
  417938:	mov    eax,0x1
  41793d:	pop    r12
  41793f:	ret    
  417940:	endbr64 
  417944:	test   rsi,rsi
  417947:	je     417980 <xmlStrEqual@plt+0x13a40>
  417949:	push   rbx
  41794a:	mov    rbx,rdi
  41794d:	mov    rdi,rsi
  417950:	call   433b80 <xmlStrEqual@plt+0x2fc40>
  417955:	mov    rdi,QWORD PTR [rbx+0x18]
  417959:	mov    rsi,rax
  41795c:	call   432f40 <xmlStrEqual@plt+0x2f000>
  417961:	mov    rdi,rax
  417964:	call   433ac0 <xmlStrEqual@plt+0x2fb80>
  417969:	mov    rdi,QWORD PTR [rbx+0x18]
  41796d:	mov    esi,0x7
  417972:	call   417440 <xmlStrEqual@plt+0x13500>
  417977:	mov    eax,0x1
  41797c:	pop    rbx
  41797d:	ret    
  41797e:	xchg   ax,ax
  417980:	xor    eax,eax
  417982:	ret    
  417983:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  41798e:	xchg   ax,ax
  417990:	endbr64 
  417994:	test   rsi,rsi
  417997:	je     417a20 <xmlStrEqual@plt+0x13ae0>
  41799d:	push   r12
  41799f:	push   rbp
  4179a0:	mov    rbp,rdi
  4179a3:	mov    rdi,rsi
  4179a6:	push   rbx
  4179a7:	mov    rbx,rsi
  4179aa:	call   433b80 <xmlStrEqual@plt+0x2fc40>
  4179af:	mov    rdi,QWORD PTR [rbp+0x18]
  4179b3:	mov    rsi,rax
  4179b6:	call   432d60 <xmlStrEqual@plt+0x2ee20>
  4179bb:	mov    r12,rax
  4179be:	test   rax,rax
  4179c1:	je     417a11 <xmlStrEqual@plt+0x13ad1>
  4179c3:	mov    rsi,QWORD PTR [rax+0x8]
  4179c7:	mov    rdi,QWORD PTR [rbx+0x8]
  4179cb:	call   42be20 <xmlStrEqual@plt+0x27ee0>
  4179d0:	test   eax,eax
  4179d2:	mov    rax,0x469e3c
  4179d9:	je     417a28 <xmlStrEqual@plt+0x13ae8>
  4179db:	cmp    DWORD PTR [rax],0x1
  4179de:	jle    417a06 <xmlStrEqual@plt+0x13ac6>
  4179e0:	mov    rdi,rbx
  4179e3:	call   433b80 <xmlStrEqual@plt+0x2fc40>
  4179e8:	mov    rdi,rax
  4179eb:	call   424d40 <xmlStrEqual@plt+0x20e00>
  4179f0:	mov    rdx,rax
  4179f3:	lea    rsi,[rip+0x349be]        # 44c3b8 <xmlStrEqual@plt+0x48478>
  4179fa:	mov    edi,0x6
  4179ff:	xor    eax,eax
  417a01:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  417a06:	mov    rsi,r12
  417a09:	mov    rdi,rbp
  417a0c:	call   417940 <xmlStrEqual@plt+0x13a00>
  417a11:	mov    rsi,rbx
  417a14:	pop    rbx
  417a15:	mov    rdi,rbp
  417a18:	pop    rbp
  417a19:	pop    r12
  417a1b:	jmp    417760 <xmlStrEqual@plt+0x13820>
  417a20:	xor    eax,eax
  417a22:	ret    
  417a23:	nop    DWORD PTR [rax+rax*1+0x0]
  417a28:	cmp    DWORD PTR [rax],0x1
  417a2b:	jle    417a53 <xmlStrEqual@plt+0x13b13>
  417a2d:	mov    rdi,rbx
  417a30:	call   433b80 <xmlStrEqual@plt+0x2fc40>
  417a35:	mov    rdi,rax
  417a38:	call   424d40 <xmlStrEqual@plt+0x20e00>
  417a3d:	mov    rdx,rax
  417a40:	lea    rsi,[rip+0x34921]        # 44c368 <xmlStrEqual@plt+0x48428>
  417a47:	mov    edi,0x6
  417a4c:	xor    eax,eax
  417a4e:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  417a53:	mov    rax,0x475858
  417a5a:	mov    rsi,r12
  417a5d:	mov    rdi,QWORD PTR [rax]
  417a60:	xor    edx,edx
  417a62:	call   43b960 <xmlStrEqual@plt+0x37a20>
  417a67:	mov    rbp,rax
  417a6a:	mov    rax,QWORD PTR [rbx+0x8]
  417a6e:	mov    esi,DWORD PTR [rax+0x38]
  417a71:	mov    eax,DWORD PTR [rbp+0x18]
  417a74:	test   eax,eax
  417a76:	je     417aa0 <xmlStrEqual@plt+0x13b60>
  417a78:	mov    rax,QWORD PTR [rbp+0x8]
  417a7c:	mov    rdi,QWORD PTR [rax+0x10]
  417a80:	call   43b470 <xmlStrEqual@plt+0x37530>
  417a85:	mov    rdi,rbp
  417a88:	call   42e2b0 <xmlStrEqual@plt+0x2a370>
  417a8d:	pop    rbx
  417a8e:	pop    rbp
  417a8f:	mov    eax,0x1
  417a94:	pop    r12
  417a96:	ret    
  417a97:	nop    WORD PTR [rax+rax*1+0x0]
  417aa0:	xor    edi,edi
  417aa2:	jmp    417a80 <xmlStrEqual@plt+0x13b40>
  417aa4:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  417aaf:	nop
  417ab0:	endbr64 
  417ab4:	push   rbp
  417ab5:	mov    rbp,rdi
  417ab8:	mov    edi,0x40
  417abd:	push   rbx
  417abe:	sub    rsp,0x8
  417ac2:	call   434fe0 <xmlStrEqual@plt+0x310a0>
  417ac7:	mov    rdi,rbp
  417aca:	mov    rbx,rax
  417acd:	call   425060 <xmlStrEqual@plt+0x21120>
  417ad2:	mov    QWORD PTR [rbx],rax
  417ad5:	mov    rdi,0x417090
  417adc:	call   42dca0 <xmlStrEqual@plt+0x29d60>
  417ae1:	mov    QWORD PTR [rbx+0x8],rax
  417ae5:	mov    DWORD PTR [rbx+0x10],0x0
  417aec:	add    rsp,0x8
  417af0:	mov    rax,rbx
  417af3:	pop    rbx
  417af4:	pop    rbp
  417af5:	ret    
  417af6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  417b00:	endbr64 
  417b04:	push   rbp
  417b05:	mov    rbp,rsi
  417b08:	push   rbx
  417b09:	mov    rbx,rdi
  417b0c:	sub    rsp,0x8
  417b10:	mov    rdi,QWORD PTR [rdi+0x28]
  417b14:	test   rdi,rdi
  417b17:	je     417b1e <xmlStrEqual@plt+0x13bde>
  417b19:	call   42e2b0 <xmlStrEqual@plt+0x2a370>
  417b1e:	mov    QWORD PTR [rbx+0x20],rbp
  417b22:	mov    rdi,QWORD PTR [rbp+0x8]
  417b26:	call   42c880 <xmlStrEqual@plt+0x28940>
  417b2b:	mov    QWORD PTR [rbx+0x28],rax
  417b2f:	mov    QWORD PTR [rbx+0x30],0x0
  417b37:	mov    DWORD PTR [rbx+0x14],0x0
  417b3e:	mov    QWORD PTR [rbx+0x18],0x0
  417b46:	mov    DWORD PTR [rbx+0x38],0x0
  417b4d:	add    rsp,0x8
  417b51:	pop    rbx
  417b52:	pop    rbp
  417b53:	ret    
  417b54:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  417b5f:	nop
  417b60:	endbr64 
  417b64:	push   rbx
  417b65:	mov    rbx,rdi
  417b68:	call   417b00 <xmlStrEqual@plt+0x13bc0>
  417b6d:	mov    DWORD PTR [rbx+0x10],0x1
  417b74:	pop    rbx
  417b75:	ret    
  417b76:	nop    WORD PTR cs:[rax+rax*1+0x0]
  417b80:	endbr64 
  417b84:	push   r13
  417b86:	push   r12
  417b88:	mov    r12,rsi
  417b8b:	push   rbp
  417b8c:	push   rbx
  417b8d:	sub    rsp,0x8
  417b91:	mov    rax,QWORD PTR [rdi+0x8]
  417b95:	mov    rbx,QWORD PTR [rax+0x8]
  417b99:	cmp    rax,rbx
  417b9c:	je     417bf0 <xmlStrEqual@plt+0x13cb0>
  417b9e:	mov    r13,rdi
  417ba1:	jmp    417bb2 <xmlStrEqual@plt+0x13c72>
  417ba3:	nop    DWORD PTR [rax+rax*1+0x0]
  417ba8:	mov    rbx,QWORD PTR [rbx+0x8]
  417bac:	cmp    QWORD PTR [r13+0x8],rbx
  417bb0:	je     417bf0 <xmlStrEqual@plt+0x13cb0>
  417bb2:	mov    rbp,QWORD PTR [rbx+0x10]
  417bb6:	mov    rsi,QWORD PTR [r12+0x8]
  417bbb:	mov    rdi,QWORD PTR [rbp+0x8]
  417bbf:	call   425310 <xmlStrEqual@plt+0x213d0>
  417bc4:	test   eax,eax
  417bc6:	jne    417ba8 <xmlStrEqual@plt+0x13c68>
  417bc8:	mov    rsi,QWORD PTR [r12+0x10]
  417bcd:	mov    rdi,QWORD PTR [rbp+0x10]
  417bd1:	call   425310 <xmlStrEqual@plt+0x213d0>
  417bd6:	test   eax,eax
  417bd8:	jne    417ba8 <xmlStrEqual@plt+0x13c68>
  417bda:	mov    rsi,QWORD PTR [r13+0x8]
  417bde:	mov    rdi,rbx
  417be1:	call   42e110 <xmlStrEqual@plt+0x2a1d0>
  417be6:	mov    rbx,QWORD PTR [rbx+0x8]
  417bea:	cmp    QWORD PTR [r13+0x8],rbx
  417bee:	jne    417bb2 <xmlStrEqual@plt+0x13c72>
  417bf0:	add    rsp,0x8
  417bf4:	mov    rsi,rbx
  417bf7:	pop    rbx
  417bf8:	pop    rbp
  417bf9:	mov    rdi,r12
  417bfc:	pop    r12
  417bfe:	pop    r13
  417c00:	jmp    42dcf0 <xmlStrEqual@plt+0x29db0>
  417c05:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  417c10:	endbr64 
  417c14:	test   rsi,rsi
  417c17:	je     417c38 <xmlStrEqual@plt+0x13cf8>
  417c19:	push   rbx
  417c1a:	mov    rbx,rsi
  417c1d:	mov    rdi,QWORD PTR [rdi+0x20]
  417c21:	mov    rsi,QWORD PTR [rsi]
  417c24:	call   432f40 <xmlStrEqual@plt+0x2f000>
  417c29:	mov    rdi,rbx
  417c2c:	pop    rbx
  417c2d:	jmp    4170c0 <xmlStrEqual@plt+0x13180>
  417c32:	nop    WORD PTR [rax+rax*1+0x0]
  417c38:	ret    
  417c39:	nop    DWORD PTR [rax+0x0]
  417c40:	endbr64 
  417c44:	push   r13
  417c46:	mov    r13,rdi
  417c49:	mov    edi,0x18
  417c4e:	push   r12
  417c50:	mov    r12,rsi
  417c53:	push   rbp
  417c54:	mov    rbp,rdx
  417c57:	push   rbx
  417c58:	sub    rsp,0x8
  417c5c:	call   435000 <xmlStrEqual@plt+0x310c0>
  417c61:	mov    QWORD PTR [rax],r13
  417c64:	mov    QWORD PTR [rax+0x8],r12
  417c68:	mov    rdi,rbp
  417c6b:	mov    rbx,rax
  417c6e:	call   425060 <xmlStrEqual@plt+0x21120>
  417c73:	mov    QWORD PTR [rbx+0x10],rax
  417c77:	add    rsp,0x8
  417c7b:	mov    rax,rbx
  417c7e:	pop    rbx
  417c7f:	pop    rbp
  417c80:	pop    r12
  417c82:	pop    r13
  417c84:	ret    
  417c85:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  417c90:	endbr64 
  417c94:	push   r15
  417c96:	push   r14
  417c98:	push   r13
  417c9a:	push   r12
  417c9c:	push   rbp
  417c9d:	push   rbx
  417c9e:	sub    rsp,0x68
  417ca2:	mov    QWORD PTR [rsp+0x8],rdi
  417ca7:	mov    rax,QWORD PTR fs:0x28
  417cb0:	mov    QWORD PTR [rsp+0x58],rax
  417cb5:	xor    eax,eax
  417cb7:	mov    rax,QWORD PTR [rsi+0x8]
  417cbb:	mov    rbx,QWORD PTR [rax+0x8]
  417cbf:	cmp    rax,rbx
  417cc2:	je     417d4d <xmlStrEqual@plt+0x13e0d>
  417cc8:	mov    r13,rsi
  417ccb:	mov    r14,rdx
  417cce:	lea    r12,[rsp+0x10]
  417cd3:	nop    DWORD PTR [rax+rax*1+0x0]
  417cd8:	mov    r15,QWORD PTR [rbx+0x10]
  417cdc:	xor    edx,edx
  417cde:	mov    r8,QWORD PTR [r15]
  417ce1:	xor    ecx,ecx
  417ce3:	mov    esi,0xf
  417ce8:	mov    rdi,r14
  417ceb:	call   423e60 <xmlStrEqual@plt+0x1ff20>
  417cf0:	mov    rbp,rax
  417cf3:	mov    rax,QWORD PTR [r15+0x18]
  417cf7:	mov    edx,DWORD PTR [rax+0x18]
  417cfa:	test   edx,edx
  417cfc:	je     404052 <xmlStrEqual@plt+0x112>
  417d02:	mov    rax,QWORD PTR [rax+0x8]
  417d06:	mov    rdi,QWORD PTR [rax+0x10]
  417d0a:	call   4255a0 <xmlStrEqual@plt+0x21660>
  417d0f:	mov    r8,rax
  417d12:	xor    ecx,ecx
  417d14:	mov    edx,0x10f6
  417d19:	mov    esi,0x10f6
  417d1e:	mov    rdi,r12
  417d21:	call   439130 <xmlStrEqual@plt+0x351f0>
  417d26:	mov    rdi,QWORD PTR [rsp+0x8]
  417d2b:	mov    rdx,r12
  417d2e:	mov    rsi,rbp
  417d31:	call   4089b0 <xmlStrEqual@plt+0x4a70>
  417d36:	test   rbp,rbp
  417d39:	je     417d43 <xmlStrEqual@plt+0x13e03>
  417d3b:	mov    rdi,rbp
  417d3e:	call   430820 <xmlStrEqual@plt+0x2c8e0>
  417d43:	mov    rbx,QWORD PTR [rbx+0x8]
  417d47:	cmp    QWORD PTR [r13+0x8],rbx
  417d4b:	jne    417cd8 <xmlStrEqual@plt+0x13d98>
  417d4d:	mov    rax,QWORD PTR [rsp+0x58]
  417d52:	xor    rax,QWORD PTR fs:0x28
  417d5b:	jne    417d6c <xmlStrEqual@plt+0x13e2c>
  417d5d:	add    rsp,0x68
  417d61:	pop    rbx
  417d62:	pop    rbp
  417d63:	pop    r12
  417d65:	pop    r13
  417d67:	pop    r14
  417d69:	pop    r15
  417d6b:	ret    
  417d6c:	call   403c00 <__stack_chk_fail@plt>
  417d71:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  417d7c:	nop    DWORD PTR [rax+0x0]
  417d80:	endbr64 
  417d84:	push   r15
  417d86:	push   r14
  417d88:	push   r13
  417d8a:	push   r12
  417d8c:	push   rbp
  417d8d:	mov    rbp,rdi
  417d90:	push   rbx
  417d91:	sub    rsp,0x68
  417d95:	mov    rax,QWORD PTR fs:0x28
  417d9e:	mov    QWORD PTR [rsp+0x58],rax
  417da3:	xor    eax,eax
  417da5:	call   43b440 <xmlStrEqual@plt+0x37500>
  417daa:	mov    r12,rax
  417dad:	mov    rdi,rbp
  417db0:	call   43b460 <xmlStrEqual@plt+0x37520>
  417db5:	mov    rbx,QWORD PTR [r12]
  417db9:	mov    r13,rax
  417dbc:	mov    rax,QWORD PTR [rbx+0x8]
  417dc0:	mov    esi,DWORD PTR [rax+0x18]
  417dc3:	test   esi,esi
  417dc5:	je     404071 <xmlStrEqual@plt+0x131>
  417dcb:	mov    rax,QWORD PTR [rax]
  417dce:	mov    rdx,QWORD PTR [rbx+0x28]
  417dd2:	mov    r14,QWORD PTR [rax+0x10]
  417dd6:	mov    rax,QWORD PTR [rbx+0x30]
  417dda:	mov    r12,QWORD PTR [r12+0x8]
  417ddf:	mov    ecx,DWORD PTR [rdx+0x18]
  417de2:	test   rax,rax
  417de5:	je     417fc8 <xmlStrEqual@plt+0x14088>
  417deb:	test   ecx,ecx
  417ded:	je     417df8 <xmlStrEqual@plt+0x13eb8>
  417def:	cmp    rax,QWORD PTR [rdx]
  417df2:	je     417e88 <xmlStrEqual@plt+0x13f48>
  417df8:	mov    rax,QWORD PTR [rax+0x8]
  417dfc:	mov    QWORD PTR [rbx+0x30],rax
  417e00:	mov    eax,DWORD PTR [rbx+0x38]
  417e03:	cmp    eax,0x2
  417e06:	jle    417eb0 <xmlStrEqual@plt+0x13f70>
  417e0c:	cmp    DWORD PTR [rbx+0x10],0x1
  417e10:	je     418078 <xmlStrEqual@plt+0x14138>
  417e16:	mov    rax,0x469e3c
  417e1d:	mov    edx,DWORD PTR [rax]
  417e1f:	test   edx,edx
  417e21:	jle    417e36 <xmlStrEqual@plt+0x13ef6>
  417e23:	lea    rsi,[rip+0x34636]        # 44c460 <xmlStrEqual@plt+0x48520>
  417e2a:	mov    edi,0x5
  417e2f:	xor    eax,eax
  417e31:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  417e36:	mov    rsi,QWORD PTR [r12+0x28]
  417e3b:	mov    rdi,rbx
  417e3e:	call   417b60 <xmlStrEqual@plt+0x13c20>
  417e43:	mov    rax,0x475860
  417e4a:	mov    rsi,r13
  417e4d:	mov    rdi,QWORD PTR [rax]
  417e50:	call   435af0 <xmlStrEqual@plt+0x31bb0>
  417e55:	mov    rdi,rbp
  417e58:	call   417d80 <xmlStrEqual@plt+0x13e40>
  417e5d:	mov    rcx,QWORD PTR [rsp+0x58]
  417e62:	xor    rcx,QWORD PTR fs:0x28
  417e6b:	mov    eax,0x1
  417e70:	jne    418096 <xmlStrEqual@plt+0x14156>
  417e76:	add    rsp,0x68
  417e7a:	pop    rbx
  417e7b:	pop    rbp
  417e7c:	pop    r12
  417e7e:	pop    r13
  417e80:	pop    r14
  417e82:	pop    r15
  417e84:	ret    
  417e85:	nop    DWORD PTR [rax]
  417e88:	mov    ecx,DWORD PTR [rbx+0x14]
  417e8b:	test   ecx,ecx
  417e8d:	jne    418008 <xmlStrEqual@plt+0x140c8>
  417e93:	mov    eax,DWORD PTR [rbx+0x38]
  417e96:	mov    rdx,QWORD PTR [rdx+0x8]
  417e9a:	inc    eax
  417e9c:	mov    DWORD PTR [rbx+0x38],eax
  417e9f:	mov    QWORD PTR [rbx+0x30],rdx
  417ea3:	cmp    eax,0x2
  417ea6:	jg     417e0c <xmlStrEqual@plt+0x13ecc>
  417eac:	nop    DWORD PTR [rax+0x0]
  417eb0:	mov    rsi,QWORD PTR [r14+0x18]
  417eb4:	mov    rdi,QWORD PTR [r14+0x8]
  417eb8:	mov    rdx,QWORD PTR [rbx]
  417ebb:	call   423de0 <xmlStrEqual@plt+0x1fea0>
  417ec0:	mov    r15,rax
  417ec3:	movzx  eax,WORD PTR [rax+0x24]
  417ec7:	cmp    ax,0xffff
  417ecb:	je     41809b <xmlStrEqual@plt+0x1415b>
  417ed1:	add    rax,QWORD PTR [r15+0x30]
  417ed5:	mov    QWORD PTR [rsp+0x8],rax
  417eda:	xor    eax,eax
  417edc:	call   435c70 <xmlStrEqual@plt+0x31d30>
  417ee1:	mov    rdx,QWORD PTR [rsp+0x8]
  417ee6:	mov    rcx,QWORD PTR [r14+0x10]
  417eea:	mov    QWORD PTR [rdx+0x4],rax
  417eee:	mov    rdi,QWORD PTR [rbx]
  417ef1:	mov    QWORD PTR [rsp+0x8],rcx
  417ef6:	mov    QWORD PTR [rsp],rax
  417efa:	call   425670 <xmlStrEqual@plt+0x21730>
  417eff:	mov    rdi,rax
  417f02:	call   425060 <xmlStrEqual@plt+0x21120>
  417f07:	mov    rdi,rax
  417f0a:	mov    esi,0x1
  417f0f:	mov    r14,rax
  417f12:	call   424dd0 <xmlStrEqual@plt+0x20e90>
  417f17:	mov    rcx,QWORD PTR [rsp+0x8]
  417f1c:	mov    r8,r14
  417f1f:	mov    edx,0x10f6
  417f24:	mov    esi,0x10f6
  417f29:	mov    rdi,r15
  417f2c:	call   424080 <xmlStrEqual@plt+0x20140>
  417f31:	movzx  eax,WORD PTR [r15+0x1e]
  417f36:	cmp    ax,0xffff
  417f3a:	je     40405c <xmlStrEqual@plt+0x11c>
  417f40:	mov    rdx,QWORD PTR [r15+0x30]
  417f44:	or     BYTE PTR [rdx+rax*1],0x4
  417f48:	mov    rax,QWORD PTR [rbx+0x30]
  417f4c:	lea    rbx,[rsp+0x10]
  417f51:	mov    rdi,QWORD PTR [rax+0x10]
  417f55:	call   4255a0 <xmlStrEqual@plt+0x21660>
  417f5a:	mov    r8,rax
  417f5d:	xor    ecx,ecx
  417f5f:	mov    edx,0x10f6
  417f64:	mov    esi,0x10f6
  417f69:	mov    rdi,rbx
  417f6c:	call   439130 <xmlStrEqual@plt+0x351f0>
  417f71:	mov    rax,0x469e3c
  417f78:	mov    eax,DWORD PTR [rax]
  417f7a:	test   eax,eax
  417f7c:	jg     417fe0 <xmlStrEqual@plt+0x140a0>
  417f7e:	mov    rdx,rbx
  417f81:	mov    rsi,r15
  417f84:	mov    rdi,r12
  417f87:	call   4089b0 <xmlStrEqual@plt+0x4a70>
  417f8c:	mov    rdi,r14
  417f8f:	call   424bf0 <xmlStrEqual@plt+0x20cb0>
  417f94:	mov    rax,0x475860
  417f9b:	mov    rsi,QWORD PTR [rsp]
  417f9f:	mov    rdi,QWORD PTR [rax]
  417fa2:	mov    rdx,r13
  417fa5:	call   4351f0 <xmlStrEqual@plt+0x312b0>
  417faa:	mov    rdi,rbp
  417fad:	mov    esi,0x2
  417fb2:	call   43b470 <xmlStrEqual@plt+0x37530>
  417fb7:	mov    rdi,r15
  417fba:	call   430820 <xmlStrEqual@plt+0x2c8e0>
  417fbf:	jmp    417e5d <xmlStrEqual@plt+0x13f1d>
  417fc4:	nop    DWORD PTR [rax+0x0]
  417fc8:	test   ecx,ecx
  417fca:	je     417dfc <xmlStrEqual@plt+0x13ebc>
  417fd0:	mov    rax,QWORD PTR [rdx+0x8]
  417fd4:	jmp    417dfc <xmlStrEqual@plt+0x13ebc>
  417fd9:	nop    DWORD PTR [rax+0x0]
  417fe0:	mov    rdi,r15
  417fe3:	call   423f50 <xmlStrEqual@plt+0x20010>
  417fe8:	mov    rdx,rax
  417feb:	lea    rsi,[rip+0x3486d]        # 44c85f <xmlStrEqual@plt+0x4891f>
  417ff2:	mov    edi,0x5
  417ff7:	xor    eax,eax
  417ff9:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  417ffe:	jmp    417f7e <xmlStrEqual@plt+0x1403e>
  418003:	nop    DWORD PTR [rax+rax*1+0x0]
  418008:	mov    rdi,QWORD PTR [rbx+0x18]
  41800c:	test   rdi,rdi
  41800f:	je     418048 <xmlStrEqual@plt+0x14108>
  418011:	mov    rax,QWORD PTR [rdi+0x8]
  418015:	mov    DWORD PTR [rax+0x38],0x1
  41801c:	call   433df0 <xmlStrEqual@plt+0x2feb0>
  418021:	mov    rsi,rax
  418024:	mov    rdi,r12
  418027:	call   417990 <xmlStrEqual@plt+0x13a50>
  41802c:	mov    rdi,QWORD PTR [rbx+0x18]
  418030:	call   433b80 <xmlStrEqual@plt+0x2fc40>
  418035:	mov    rdx,rax
  418038:	mov    rsi,rbx
  41803b:	mov    rdi,r12
  41803e:	call   417c90 <xmlStrEqual@plt+0x13d50>
  418043:	jmp    418086 <xmlStrEqual@plt+0x14146>
  418045:	nop    DWORD PTR [rax]
  418048:	mov    rax,0x469e3c
  41804f:	mov    rdx,QWORD PTR [rbx]
  418052:	cmp    DWORD PTR [rax],0x2
  418055:	jle    41807b <xmlStrEqual@plt+0x1413b>
  418057:	mov    rdi,rdx
  41805a:	call   424d40 <xmlStrEqual@plt+0x20e00>
  41805f:	mov    rdx,rax
  418062:	lea    rsi,[rip+0x343c7]        # 44c430 <xmlStrEqual@plt+0x484f0>
  418069:	mov    edi,0x7
  41806e:	xor    eax,eax
  418070:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  418075:	nop    DWORD PTR [rax]
  418078:	mov    rdx,QWORD PTR [rbx]
  41807b:	mov    rsi,rbx
  41807e:	mov    rdi,r12
  418081:	call   417c90 <xmlStrEqual@plt+0x13d50>
  418086:	mov    rsi,rbx
  418089:	mov    rdi,r12
  41808c:	call   417c10 <xmlStrEqual@plt+0x13cd0>
  418091:	jmp    417e5d <xmlStrEqual@plt+0x13f1d>
  418096:	call   403c00 <__stack_chk_fail@plt>
  41809b:	xor    eax,eax
  41809d:	call   435c70 <xmlStrEqual@plt+0x31d30>
  4180a2:	mov    QWORD PTR ds:0x4,0x0
  4180ae:	ud2    
  4180b0:	endbr64 
  4180b4:	mov    edi,0x20
  4180b9:	jmp    434fe0 <xmlStrEqual@plt+0x310a0>
  4180be:	xchg   ax,ax
  4180c0:	endbr64 
  4180c4:	push   r15
  4180c6:	push   r14
  4180c8:	push   r13
  4180ca:	push   r12
  4180cc:	push   rbp
  4180cd:	push   rbx
  4180ce:	sub    rsp,0x148
  4180d5:	mov    QWORD PTR [rsp+0x8],rdx
  4180da:	mov    rax,QWORD PTR fs:0x28
  4180e3:	mov    QWORD PTR [rsp+0x138],rax
  4180eb:	xor    eax,eax
  4180ed:	mov    rax,0x469720
  4180f4:	cmp    QWORD PTR [rdi+0x8],rax
  4180f8:	jne    418878 <xmlStrEqual@plt+0x14938>
  4180fe:	mov    r14,rdi
  418101:	mov    rdi,rsi
  418104:	mov    rbx,rsi
  418107:	call   422c30 <xmlStrEqual@plt+0x1ecf0>
  41810c:	mov    r12d,eax
  41810f:	mov    QWORD PTR [rsp],0x0
  418117:	cmp    eax,0x8
  41811a:	je     418798 <xmlStrEqual@plt+0x14858>
  418120:	cmp    r12d,0x7
  418124:	ja     418730 <xmlStrEqual@plt+0x147f0>
  41812a:	lea    rcx,[rip+0x3473f]        # 44c870 <xmlStrEqual@plt+0x48930>
  418131:	mov    edx,r12d
  418134:	movsxd rax,DWORD PTR [rcx+rdx*4]
  418138:	add    rax,rcx
  41813b:	notrack jmp rax
  41813e:	xchg   ax,ax
  418140:	vmovdqu xmm4,XMMWORD PTR [rbx]
  418144:	vmovdqu xmm5,XMMWORD PTR [rbx+0x10]
  418149:	vmovdqu xmm6,XMMWORD PTR [rbx+0x20]
  41814e:	vmovdqu xmm7,XMMWORD PTR [rbx+0x30]
  418153:	lea    rbx,[rsp+0x50]
  418158:	mov    rdi,rbx
  41815b:	vmovaps XMMWORD PTR [rsp+0x50],xmm4
  418161:	vmovaps XMMWORD PTR [rsp+0x60],xmm5
  418167:	vmovaps XMMWORD PTR [rsp+0x70],xmm6
  41816d:	vmovaps XMMWORD PTR [rsp+0x80],xmm7
  418176:	call   4235e0 <xmlStrEqual@plt+0x1f6a0>
  41817b:	mov    rsi,QWORD PTR [rax+0x4]
  41817f:	mov    rbp,rax
  418182:	mov    rax,0x475860
  418189:	mov    rdi,QWORD PTR [rax]
  41818c:	call   435a40 <xmlStrEqual@plt+0x31b00>
  418191:	mov    r13,rax
  418194:	test   rax,rax
  418197:	je     418bd0 <xmlStrEqual@plt+0x14c90>
  41819d:	cmp    BYTE PTR [rbp+0x3],0x1
  4181a1:	jbe    4181b6 <xmlStrEqual@plt+0x14276>
  4181a3:	lea    rsi,[rip+0x343c6]        # 44c570 <xmlStrEqual@plt+0x48630>
  4181aa:	mov    edi,0x4
  4181af:	xor    eax,eax
  4181b1:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  4181b6:	xor    eax,eax
  4181b8:	call   42bcc0 <xmlStrEqual@plt+0x27d80>
  4181bd:	mov    rsi,rax
  4181c0:	mov    rdi,rbx
  4181c3:	mov    rbp,rax
  4181c6:	call   423460 <xmlStrEqual@plt+0x1f520>
  4181cb:	cmp    eax,0x1
  4181ce:	jne    418910 <xmlStrEqual@plt+0x149d0>
  4181d4:	mov    rdi,r13
  4181d7:	call   435ca0 <xmlStrEqual@plt+0x31d60>
  4181dc:	mov    rdi,rax
  4181df:	mov    r12,rax
  4181e2:	call   43b440 <xmlStrEqual@plt+0x37500>
  4181e7:	mov    rbx,QWORD PTR [rax]
  4181ea:	mov    rdi,QWORD PTR [rbx+0x20]
  4181ee:	cmp    rdi,QWORD PTR [r14+0x28]
  4181f2:	je     418760 <xmlStrEqual@plt+0x14820>
  4181f8:	call   433b80 <xmlStrEqual@plt+0x2fc40>
  4181fd:	mov    rdi,rax
  418200:	mov    rsi,rbp
  418203:	call   437920 <xmlStrEqual@plt+0x339e0>
  418208:	test   eax,eax
  41820a:	je     418c30 <xmlStrEqual@plt+0x14cf0>
  418210:	cmp    BYTE PTR [rbp+0x3c],0x5
  418214:	ja     418780 <xmlStrEqual@plt+0x14840>
  41821a:	movzx  eax,BYTE PTR [rbp+0x3c]
  41821e:	lea    rdx,[rip+0x3466b]        # 44c890 <xmlStrEqual@plt+0x48950>
  418225:	movsxd rax,DWORD PTR [rdx+rax*4]
  418229:	add    rax,rdx
  41822c:	notrack jmp rax
  41822f:	nop
  418230:	mov    rdi,QWORD PTR [rbx+0x20]
  418234:	cmp    rdi,QWORD PTR [r14+0x28]
  418238:	je     418b78 <xmlStrEqual@plt+0x14c38>
  41823e:	call   433b80 <xmlStrEqual@plt+0x2fc40>
  418243:	mov    rsi,rax
  418246:	mov    rdi,rbp
  418249:	call   437920 <xmlStrEqual@plt+0x339e0>
  41824e:	test   eax,eax
  418250:	je     418b78 <xmlStrEqual@plt+0x14c38>
  418256:	mov    rdi,QWORD PTR [rbx]
  418259:	call   424d40 <xmlStrEqual@plt+0x20e00>
  41825e:	mov    rdx,rax
  418261:	lea    rsi,[rip+0x343d0]        # 44c638 <xmlStrEqual@plt+0x486f8>
  418268:	xor    eax,eax
  41826a:	mov    edi,0x3
  41826f:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  418274:	cmp    DWORD PTR [rbx+0x10],0x1
  418278:	je     418850 <xmlStrEqual@plt+0x14910>
  41827e:	mov    r15,0x469e3c
  418285:	mov    eax,DWORD PTR [r15]
  418288:	test   eax,eax
  41828a:	jle    41829f <xmlStrEqual@plt+0x1435f>
  41828c:	lea    rsi,[rip+0x341cd]        # 44c460 <xmlStrEqual@plt+0x48520>
  418293:	mov    edi,0x5
  418298:	xor    eax,eax
  41829a:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  41829f:	mov    rsi,QWORD PTR [r14+0x28]
  4182a3:	mov    rdi,rbx
  4182a6:	call   417b60 <xmlStrEqual@plt+0x13c20>
  4182ab:	mov    rax,0x475860
  4182b2:	mov    rsi,r13
  4182b5:	mov    rdi,QWORD PTR [rax]
  4182b8:	call   435af0 <xmlStrEqual@plt+0x31bb0>
  4182bd:	mov    rdi,r12
  4182c0:	call   417d80 <xmlStrEqual@plt+0x13e40>
  4182c5:	mov    rdi,rbp
  4182c8:	call   42bde0 <xmlStrEqual@plt+0x27ea0>
  4182cd:	cmp    DWORD PTR [r15],0x2
  4182d1:	mov    ebx,0x1
  4182d6:	jle    4182f0 <xmlStrEqual@plt+0x143b0>
  4182d8:	lea    rsi,[rip+0x344f1]        # 44c7d0 <xmlStrEqual@plt+0x48890>
  4182df:	mov    edi,0x7
  4182e4:	xor    eax,eax
  4182e6:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  4182eb:	nop    DWORD PTR [rax+rax*1+0x0]
  4182f0:	mov    rcx,QWORD PTR [rsp+0x138]
  4182f8:	xor    rcx,QWORD PTR fs:0x28
  418301:	mov    eax,ebx
  418303:	jne    418f0b <xmlStrEqual@plt+0x14fcb>
  418309:	add    rsp,0x148
  418310:	pop    rbx
  418311:	pop    rbp
  418312:	pop    r12
  418314:	pop    r13
  418316:	pop    r14
  418318:	pop    r15
  41831a:	ret    
  41831b:	nop    DWORD PTR [rax+rax*1+0x0]
  418320:	vmovdqu xmm0,XMMWORD PTR [rbx]
  418324:	vmovdqu xmm1,XMMWORD PTR [rbx+0x10]
  418329:	vmovdqu xmm2,XMMWORD PTR [rbx+0x20]
  41832e:	vmovdqu xmm3,XMMWORD PTR [rbx+0x30]
  418333:	xor    eax,eax
  418335:	vmovaps XMMWORD PTR [rsp+0x50],xmm0
  41833b:	vmovaps XMMWORD PTR [rsp+0x60],xmm1
  418341:	vmovaps XMMWORD PTR [rsp+0x70],xmm2
  418347:	vmovaps XMMWORD PTR [rsp+0x80],xmm3
  418350:	call   424be0 <xmlStrEqual@plt+0x20ca0>
  418355:	mov    r15,0x469e3c
  41835c:	mov    QWORD PTR [rsp+0x10],rax
  418361:	mov    edi,DWORD PTR [r15]
  418364:	test   edi,edi
  418366:	jle    4183bb <xmlStrEqual@plt+0x1447b>
  418368:	mov    rbx,QWORD PTR [rsp]
  41836c:	lea    rdi,[rbx+0x20]
  418370:	call   424d40 <xmlStrEqual@plt+0x20e00>
  418375:	mov    rdi,rbx
  418378:	mov    rbp,rax
  41837b:	call   424d40 <xmlStrEqual@plt+0x20e00>
  418380:	mov    r13,QWORD PTR [rsp+0x8]
  418385:	mov    r12,rax
  418388:	lea    rdi,[r13+0x20]
  41838c:	call   424d40 <xmlStrEqual@plt+0x20e00>
  418391:	mov    rdi,r13
  418394:	mov    rbx,rax
  418397:	call   424d40 <xmlStrEqual@plt+0x20e00>
  41839c:	mov    rdx,rax
  41839f:	mov    r9,rbp
  4183a2:	mov    r8,r12
  4183a5:	mov    rcx,rbx
  4183a8:	lea    rsi,[rip+0x34101]        # 44c4b0 <xmlStrEqual@plt+0x48570>
  4183af:	mov    edi,0x5
  4183b4:	xor    eax,eax
  4183b6:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  4183bb:	lea    rbx,[rsp+0x50]
  4183c0:	mov    rdi,rbx
  4183c3:	call   4235e0 <xmlStrEqual@plt+0x1f6a0>
  4183c8:	mov    rsi,QWORD PTR [rsp+0x10]
  4183cd:	mov    rdi,rbx
  4183d0:	mov    r12,rax
  4183d3:	call   422eb0 <xmlStrEqual@plt+0x1ef70>
  4183d8:	cmp    eax,0x1
  4183db:	jne    418898 <xmlStrEqual@plt+0x14958>
  4183e1:	mov    esi,DWORD PTR [r15]
  4183e4:	test   esi,esi
  4183e6:	jle    418408 <xmlStrEqual@plt+0x144c8>
  4183e8:	mov    rdi,QWORD PTR [rsp+0x10]
  4183ed:	call   424d40 <xmlStrEqual@plt+0x20e00>
  4183f2:	mov    rdx,rax
  4183f5:	lea    rsi,[rip+0x33d04]        # 44c100 <xmlStrEqual@plt+0x481c0>
  4183fc:	mov    edi,0x5
  418401:	xor    eax,eax
  418403:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  418408:	movzx  eax,BYTE PTR [r12]
  41840d:	test   al,0x2
  41840f:	jne    418c00 <xmlStrEqual@plt+0x14cc0>
  418415:	test   al,0x1
  418417:	je     418930 <xmlStrEqual@plt+0x149f0>
  41841d:	mov    eax,DWORD PTR [r15]
  418420:	cmp    eax,0x1
  418423:	jle    418470 <xmlStrEqual@plt+0x14530>
  418425:	xor    eax,eax
  418427:	lea    rsi,[rip+0x337d4]        # 44bc02 <xmlStrEqual@plt+0x47cc2>
  41842e:	mov    edi,0x6
  418433:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  418438:	mov    eax,DWORD PTR [r15]
  41843b:	jmp    418470 <xmlStrEqual@plt+0x14530>
  41843d:	nop    DWORD PTR [rax]
  418440:	mov    rbx,0x469e3c
  418447:	mov    eax,DWORD PTR [rbx]
  418449:	cmp    eax,0x2
  41844c:	jle    418470 <xmlStrEqual@plt+0x14530>
  41844e:	xor    eax,eax
  418450:	mov    edx,r12d
  418453:	lea    rsi,[rip+0x342ae]        # 44c708 <xmlStrEqual@plt+0x487c8>
  41845a:	mov    edi,0x7
  41845f:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  418464:	mov    eax,DWORD PTR [rbx]
  418466:	nop    WORD PTR cs:[rax+rax*1+0x0]
  418470:	xor    ebx,ebx
  418472:	test   eax,eax
  418474:	jle    4182f0 <xmlStrEqual@plt+0x143b0>
  41847a:	lea    rsi,[rip+0x34317]        # 44c798 <xmlStrEqual@plt+0x48858>
  418481:	mov    edi,0x5
  418486:	xor    eax,eax
  418488:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  41848d:	jmp    4182f0 <xmlStrEqual@plt+0x143b0>
  418492:	nop    WORD PTR [rax+rax*1+0x0]
  418498:	mov    rdi,QWORD PTR [rbx]
  41849b:	call   424d40 <xmlStrEqual@plt+0x20e00>
  4184a0:	mov    rdx,rax
  4184a3:	lea    rsi,[rip+0x341d6]        # 44c680 <xmlStrEqual@plt+0x48740>
  4184aa:	xor    eax,eax
  4184ac:	mov    edi,0x3
  4184b1:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  4184b6:	cmp    DWORD PTR [rbx+0x10],0x1
  4184ba:	jne    41827e <xmlStrEqual@plt+0x1433e>
  4184c0:	mov    rax,QWORD PTR [rbx+0x28]
  4184c4:	mov    rdx,QWORD PTR [rbx+0x30]
  4184c8:	mov    ecx,DWORD PTR [rax+0x18]
  4184cb:	test   ecx,ecx
  4184cd:	je     418ca0 <xmlStrEqual@plt+0x14d60>
  4184d3:	mov    rax,QWORD PTR [rax]
  4184d6:	cmp    rdx,rax
  4184d9:	je     418850 <xmlStrEqual@plt+0x14910>
  4184df:	mov    r15,0x469e3c
  4184e6:	cmp    DWORD PTR [r15],0x1
  4184ea:	jle    4182bd <xmlStrEqual@plt+0x1437d>
  4184f0:	lea    rsi,[rip+0x341d1]        # 44c6c8 <xmlStrEqual@plt+0x48788>
  4184f7:	mov    edi,0x6
  4184fc:	xor    eax,eax
  4184fe:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  418503:	jmp    4182bd <xmlStrEqual@plt+0x1437d>
  418508:	nop    DWORD PTR [rax+rax*1+0x0]
  418510:	xor    eax,eax
  418512:	call   433a70 <xmlStrEqual@plt+0x2fb30>
  418517:	mov    r12,rax
  41851a:	mov    rdi,rax
  41851d:	mov    rsi,rbp
  418520:	call   433aa0 <xmlStrEqual@plt+0x2fb60>
  418525:	mov    rsi,r12
  418528:	mov    rdi,r14
  41852b:	call   417990 <xmlStrEqual@plt+0x13a50>
  418530:	mov    rdi,r12
  418533:	call   433b80 <xmlStrEqual@plt+0x2fc40>
  418538:	mov    rdx,rax
  41853b:	mov    rsi,rbx
  41853e:	mov    rdi,r14
  418541:	call   417c90 <xmlStrEqual@plt+0x13d50>
  418546:	mov    rsi,rbx
  418549:	mov    rdi,r14
  41854c:	call   417c10 <xmlStrEqual@plt+0x13cd0>
  418551:	mov    r15,0x469e3c
  418558:	jmp    4182cd <xmlStrEqual@plt+0x1438d>
  41855d:	nop    DWORD PTR [rax]
  418560:	mov    DWORD PTR [rbx+0x14],0x1
  418567:	cmp    BYTE PTR [rbp+0x3e],0x0
  41856b:	jne    4185b0 <xmlStrEqual@plt+0x14670>
  41856d:	mov    rdi,QWORD PTR [rbx+0x18]
  418571:	test   rdi,rdi
  418574:	je     418597 <xmlStrEqual@plt+0x14657>
  418576:	call   433b80 <xmlStrEqual@plt+0x2fc40>
  41857b:	mov    rdi,rax
  41857e:	mov    rsi,rbp
  418581:	call   437920 <xmlStrEqual@plt+0x339e0>
  418586:	test   eax,eax
  418588:	je     4188c0 <xmlStrEqual@plt+0x14980>
  41858e:	mov    rdi,QWORD PTR [rbx+0x18]
  418592:	call   433ac0 <xmlStrEqual@plt+0x2fb80>
  418597:	xor    eax,eax
  418599:	call   433a70 <xmlStrEqual@plt+0x2fb30>
  41859e:	mov    r13,rax
  4185a1:	mov    rsi,rbp
  4185a4:	mov    rdi,rax
  4185a7:	call   433aa0 <xmlStrEqual@plt+0x2fb60>
  4185ac:	mov    QWORD PTR [rbx+0x18],r13
  4185b0:	mov    rdi,r12
  4185b3:	call   417d80 <xmlStrEqual@plt+0x13e40>
  4185b8:	mov    r15,0x469e3c
  4185bf:	jmp    4182cd <xmlStrEqual@plt+0x1438d>
  4185c4:	nop    DWORD PTR [rax+0x0]
  4185c8:	call   42dc90 <xmlStrEqual@plt+0x29d50>
  4185cd:	cmp    QWORD PTR [rsp],0x0
  4185d2:	mov    r15,rax
  4185d5:	je     418830 <xmlStrEqual@plt+0x148f0>
  4185db:	mov    rdi,QWORD PTR [rsp]
  4185df:	mov    rsi,rax
  4185e2:	add    rdi,0x20
  4185e6:	call   42dcf0 <xmlStrEqual@plt+0x29db0>
  4185eb:	mov    rax,QWORD PTR [rbx+0x8]
  4185ef:	lea    rcx,[rsp+0xe0]
  4185f7:	mov    r12,QWORD PTR [rax+0x8]
  4185fb:	mov    QWORD PTR [rsp],rcx
  4185ff:	cmp    rax,r12
  418602:	je     41870b <xmlStrEqual@plt+0x147cb>
  418608:	mov    QWORD PTR [rsp+0x18],r14
  41860d:	mov    QWORD PTR [rsp+0x20],rbp
  418612:	mov    rbp,r12
  418615:	mov    r12,r15
  418618:	nop    DWORD PTR [rax+rax*1+0x0]
  418620:	mov    r13,QWORD PTR [r12+0x8]
  418625:	mov    r14,QWORD PTR [rbp+0x10]
  418629:	cmp    r12,r13
  41862c:	je     4186f3 <xmlStrEqual@plt+0x147b3>
  418632:	nop    WORD PTR [rax+rax*1+0x0]
  418638:	mov    rsi,QWORD PTR [r14+0x18]
  41863c:	mov    rdi,QWORD PTR [r14+0x8]
  418640:	mov    rdx,QWORD PTR [rbx]
  418643:	call   423de0 <xmlStrEqual@plt+0x1fea0>
  418648:	mov    r15,rax
  41864b:	movzx  eax,WORD PTR [rax+0x24]
  41864f:	cmp    ax,0xffff
  418653:	je     40407b <xmlStrEqual@plt+0x13b>
  418659:	mov    rdx,QWORD PTR [r15+0x30]
  41865d:	mov    rcx,QWORD PTR [r14]
  418660:	mov    rdi,QWORD PTR [rbx]
  418663:	mov    QWORD PTR [rdx+rax*1+0x4],rcx
  418668:	mov    rcx,QWORD PTR [r14+0x10]
  41866c:	mov    QWORD PTR [rsp+0x10],rcx
  418671:	call   425670 <xmlStrEqual@plt+0x21730>
  418676:	mov    rdi,rax
  418679:	call   425060 <xmlStrEqual@plt+0x21120>
  41867e:	mov    rdi,rax
  418681:	mov    esi,0x1
  418686:	mov    QWORD PTR [rsp+0x8],rax
  41868b:	call   424dd0 <xmlStrEqual@plt+0x20e90>
  418690:	mov    r8,QWORD PTR [rsp+0x8]
  418695:	mov    rcx,QWORD PTR [rsp+0x10]
  41869a:	mov    edx,0x10f6
  41869f:	mov    esi,0x10f6
  4186a4:	mov    rdi,r15
  4186a7:	call   424080 <xmlStrEqual@plt+0x20140>
  4186ac:	mov    rdi,QWORD PTR [r13+0x10]
  4186b0:	call   4255a0 <xmlStrEqual@plt+0x21660>
  4186b5:	mov    rdi,QWORD PTR [rsp]
  4186b9:	mov    r8,rax
  4186bc:	xor    ecx,ecx
  4186be:	mov    edx,0x10f6
  4186c3:	mov    esi,0x10f6
  4186c8:	call   439130 <xmlStrEqual@plt+0x351f0>
  4186cd:	mov    rdx,QWORD PTR [rsp]
  4186d1:	mov    rdi,QWORD PTR [rsp+0x18]
  4186d6:	mov    rsi,r15
  4186d9:	call   4089b0 <xmlStrEqual@plt+0x4a70>
  4186de:	mov    rdi,r15
  4186e1:	call   430820 <xmlStrEqual@plt+0x2c8e0>
  4186e6:	mov    r13,QWORD PTR [r13+0x8]
  4186ea:	cmp    r12,r13
  4186ed:	jne    418638 <xmlStrEqual@plt+0x146f8>
  4186f3:	mov    rbp,QWORD PTR [rbp+0x8]
  4186f7:	cmp    rbp,QWORD PTR [rbx+0x8]
  4186fb:	jne    418620 <xmlStrEqual@plt+0x146e0>
  418701:	mov    rbp,QWORD PTR [rsp+0x20]
  418706:	mov    r14,QWORD PTR [rsp+0x18]
  41870b:	mov    rsi,rbx
  41870e:	mov    rdi,r14
  418711:	call   417c10 <xmlStrEqual@plt+0x13cd0>
  418716:	mov    rdi,rbp
  418719:	call   42bde0 <xmlStrEqual@plt+0x27ea0>
  41871e:	mov    r15,0x469e3c
  418725:	jmp    4182cd <xmlStrEqual@plt+0x1438d>
  41872a:	nop    WORD PTR [rax+rax*1+0x0]
  418730:	mov    rbx,0x469e3c
  418737:	mov    eax,DWORD PTR [rbx]
  418739:	cmp    eax,0x2
  41873c:	jle    418470 <xmlStrEqual@plt+0x14530>
  418742:	xor    eax,eax
  418744:	mov    edx,r12d
  418747:	lea    rsi,[rip+0x34002]        # 44c750 <xmlStrEqual@plt+0x48810>
  41874e:	mov    edi,0x7
  418753:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  418758:	mov    eax,DWORD PTR [rbx]
  41875a:	jmp    418470 <xmlStrEqual@plt+0x14530>
  41875f:	nop
  418760:	cmp    BYTE PTR [rbp+0x3c],0x5
  418764:	ja     418780 <xmlStrEqual@plt+0x14840>
  418766:	movzx  eax,BYTE PTR [rbp+0x3c]
  41876a:	lea    rdx,[rip+0x34137]        # 44c8a8 <xmlStrEqual@plt+0x48968>
  418771:	movsxd rax,DWORD PTR [rdx+rax*4]
  418775:	add    rax,rdx
  418778:	notrack jmp rax
  41877b:	nop    DWORD PTR [rax+rax*1+0x0]
  418780:	mov    rdi,rbp
  418783:	call   42bde0 <xmlStrEqual@plt+0x27ea0>
  418788:	mov    r15,0x469e3c
  41878f:	jmp    4182cd <xmlStrEqual@plt+0x1438d>
  418794:	nop    DWORD PTR [rax+0x0]
  418798:	mov    rdi,rbx
  41879b:	call   422ca0 <xmlStrEqual@plt+0x1ed60>
  4187a0:	mov    rdi,rbx
  4187a3:	test   BYTE PTR [rax],0x8
  4187a6:	jne    4188d0 <xmlStrEqual@plt+0x14990>
  4187ac:	call   422ce0 <xmlStrEqual@plt+0x1eda0>
  4187b1:	cmp    eax,0x1
  4187b4:	je     4187c0 <xmlStrEqual@plt+0x14880>
  4187b6:	xor    ebx,ebx
  4187b8:	jmp    4182f0 <xmlStrEqual@plt+0x143b0>
  4187bd:	nop    DWORD PTR [rax]
  4187c0:	lea    r12,[rsp+0xe0]
  4187c8:	mov    rsi,r12
  4187cb:	mov    rdi,rbx
  4187ce:	call   4366e0 <xmlStrEqual@plt+0x327a0>
  4187d3:	lea    rbp,[rsp+0x90]
  4187db:	movzx  edx,WORD PTR [rsp+0x120]
  4187e3:	movzx  esi,WORD PTR [rsp+0x122]
  4187eb:	mov    r8,r12
  4187ee:	lea    rcx,[r12+0x20]
  4187f3:	mov    rdi,rbp
  4187f6:	call   439130 <xmlStrEqual@plt+0x351f0>
  4187fb:	mov    rdi,rbx
  4187fe:	call   422c30 <xmlStrEqual@plt+0x1ecf0>
  418803:	mov    r15,0x469e3c
  41880a:	mov    r12d,eax
  41880d:	mov    r8d,DWORD PTR [r15]
  418810:	test   r8d,r8d
  418813:	jg     418b40 <xmlStrEqual@plt+0x14c00>
  418819:	mov    rax,QWORD PTR [rsp+0x8]
  41881e:	mov    QWORD PTR [rsp+0x8],rbp
  418823:	mov    QWORD PTR [rsp],rax
  418827:	jmp    418120 <xmlStrEqual@plt+0x141e0>
  41882c:	nop    DWORD PTR [rax+0x0]
  418830:	mov    rdi,QWORD PTR [rsp+0x8]
  418835:	mov    rsi,rax
  418838:	add    rdi,0x20
  41883c:	call   42dcf0 <xmlStrEqual@plt+0x29db0>
  418841:	jmp    4185eb <xmlStrEqual@plt+0x146ab>
  418846:	nop    WORD PTR cs:[rax+rax*1+0x0]
  418850:	mov    rdx,QWORD PTR [rbx]
  418853:	mov    rsi,rbx
  418856:	mov    rdi,r14
  418859:	call   417c90 <xmlStrEqual@plt+0x13d50>
  41885e:	mov    rsi,rbx
  418861:	mov    rdi,r14
  418864:	call   417c10 <xmlStrEqual@plt+0x13cd0>
  418869:	mov    r15,0x469e3c
  418870:	jmp    4182c5 <xmlStrEqual@plt+0x14385>
  418875:	nop    DWORD PTR [rax]
  418878:	lea    rdx,[rip+0x338e9]        # 44c168 <xmlStrEqual@plt+0x48228>
  41887f:	lea    rsi,[rip+0x3403a]        # 44c8c0 <xmlStrEqual@plt+0x48980>
  418886:	lea    rdi,[rip+0x33f7d]        # 44c80a <xmlStrEqual@plt+0x488ca>
  41888d:	call   4350f0 <xmlStrEqual@plt+0x311b0>
  418892:	nop    WORD PTR [rax+rax*1+0x0]
  418898:	xor    edi,edi
  41889a:	call   42e2b0 <xmlStrEqual@plt+0x2a370>
  41889f:	xor    r13d,r13d
  4188a2:	mov    rdi,r13
  4188a5:	call   424bf0 <xmlStrEqual@plt+0x20cb0>
  4188aa:	mov    rdi,QWORD PTR [rsp+0x10]
  4188af:	call   424bf0 <xmlStrEqual@plt+0x20cb0>
  4188b4:	mov    eax,DWORD PTR [r15]
  4188b7:	jmp    418470 <xmlStrEqual@plt+0x14530>
  4188bc:	nop    DWORD PTR [rax+0x0]
  4188c0:	mov    rdi,rbp
  4188c3:	call   42bde0 <xmlStrEqual@plt+0x27ea0>
  4188c8:	jmp    4185b0 <xmlStrEqual@plt+0x14670>
  4188cd:	nop    DWORD PTR [rax]
  4188d0:	call   424180 <xmlStrEqual@plt+0x20240>
  4188d5:	mov    rax,0x469e3c
  4188dc:	cmp    DWORD PTR [rax],0x1
  4188df:	jle    4187b6 <xmlStrEqual@plt+0x14876>
  4188e5:	mov    rdi,rbx
  4188e8:	call   424180 <xmlStrEqual@plt+0x20240>
  4188ed:	mov    edx,eax
  4188ef:	lea    rsi,[rip+0x31d12]        # 44a608 <xmlStrEqual@plt+0x466c8>
  4188f6:	mov    edi,0x6
  4188fb:	xor    eax,eax
  4188fd:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  418902:	xor    ebx,ebx
  418904:	jmp    4182f0 <xmlStrEqual@plt+0x143b0>
  418909:	nop    DWORD PTR [rax+0x0]
  418910:	mov    rdi,rbp
  418913:	call   42bde0 <xmlStrEqual@plt+0x27ea0>
  418918:	mov    rax,0x469e3c
  41891f:	mov    eax,DWORD PTR [rax]
  418921:	jmp    418470 <xmlStrEqual@plt+0x14530>
  418926:	nop    WORD PTR cs:[rax+rax*1+0x0]
  418930:	mov    rdi,0x424bf0
  418937:	call   42dca0 <xmlStrEqual@plt+0x29d60>
  41893c:	mov    rsi,rax
  41893f:	mov    rdi,rbx
  418942:	mov    QWORD PTR [rsp+0x20],rax
  418947:	call   422f40 <xmlStrEqual@plt+0x1f000>
  41894c:	cmp    BYTE PTR [r12+0x3],0x0
  418952:	je     418f06 <xmlStrEqual@plt+0x14fc6>
  418958:	lea    rax,[rsp+0xe0]
  418960:	mov    DWORD PTR [rsp+0x40],0x0
  418968:	mov    QWORD PTR [rsp+0x28],0x0
  418971:	xor    ebp,ebp
  418973:	mov    QWORD PTR [rsp+0x38],rax
  418978:	mov    QWORD PTR [rsp+0x30],r15
  41897d:	jmp    4189e7 <xmlStrEqual@plt+0x14aa7>
  41897f:	nop
  418980:	xor    eax,eax
  418982:	call   4180b0 <xmlStrEqual@plt+0x14170>
  418987:	mov    r15,rax
  41898a:	mov    rax,QWORD PTR [r12+0x4]
  41898f:	mov    rdi,QWORD PTR [rsp+0x10]
  418994:	mov    QWORD PTR [r15],rax
  418997:	call   425060 <xmlStrEqual@plt+0x21120>
  41899c:	mov    QWORD PTR [r15+0x8],rax
  4189a0:	mov    rax,QWORD PTR [rsp+0x8]
  4189a5:	lea    rdi,[rax+0x20]
  4189a9:	call   425060 <xmlStrEqual@plt+0x21120>
  4189ae:	mov    QWORD PTR [r15+0x10],rax
  4189b2:	mov    rsi,0x425060
  4189b9:	mov    rdi,QWORD PTR [rsp+0x20]
  4189be:	call   42de20 <xmlStrEqual@plt+0x29ee0>
  4189c3:	mov    QWORD PTR [r15+0x18],rax
  4189c7:	mov    rdx,QWORD PTR [rsp+0x18]
  4189cc:	mov    rsi,r15
  4189cf:	mov    rdi,rdx
  4189d2:	call   417b80 <xmlStrEqual@plt+0x13c40>
  4189d7:	movzx  eax,BYTE PTR [r12+0x3]
  4189dd:	inc    ebp
  4189df:	cmp    ebp,eax
  4189e1:	jge    418ee0 <xmlStrEqual@plt+0x14fa0>
  4189e7:	xor    eax,eax
  4189e9:	call   424be0 <xmlStrEqual@plt+0x20ca0>
  4189ee:	mov    rsi,rax
  4189f1:	mov    rdi,rbx
  4189f4:	mov    r13,rax
  4189f7:	call   422ef0 <xmlStrEqual@plt+0x1efb0>
  4189fc:	cmp    eax,0x1
  4189ff:	jne    418eb0 <xmlStrEqual@plt+0x14f70>
  418a05:	mov    rdi,QWORD PTR [r14+0x20]
  418a09:	mov    rsi,r13
  418a0c:	call   432d60 <xmlStrEqual@plt+0x2ee20>
  418a11:	test   rax,rax
  418a14:	mov    QWORD PTR [rsp+0x18],rax
  418a19:	jne    418980 <xmlStrEqual@plt+0x14a40>
  418a1f:	mov    rdi,QWORD PTR [r14+0x18]
  418a23:	mov    rsi,r13
  418a26:	call   432d40 <xmlStrEqual@plt+0x2ee00>
  418a2b:	mov    r15,rax
  418a2e:	test   rax,rax
  418a31:	je     418cb0 <xmlStrEqual@plt+0x14d70>
  418a37:	mov    rdi,QWORD PTR [rax+0x8]
  418a3b:	movzx  eax,BYTE PTR [rdi+0x3c]
  418a3f:	cmp    al,0x3
  418a41:	je     418d00 <xmlStrEqual@plt+0x14dc0>
  418a47:	cmp    al,0x4
  418a49:	je     418e29 <xmlStrEqual@plt+0x14ee9>
  418a4f:	cmp    al,0x2
  418a51:	je     418d97 <xmlStrEqual@plt+0x14e57>
  418a57:	mov    rdi,r13
  418a5a:	call   417ab0 <xmlStrEqual@plt+0x13b70>
  418a5f:	cmp    DWORD PTR [rsp+0x40],0x1
  418a64:	mov    QWORD PTR [rsp+0x18],rax
  418a69:	je     418cdd <xmlStrEqual@plt+0x14d9d>
  418a6f:	mov    rdi,QWORD PTR [rsp+0x18]
  418a74:	mov    rsi,r15
  418a77:	call   417b00 <xmlStrEqual@plt+0x13bc0>
  418a7c:	mov    edi,0x20
  418a81:	call   434fe0 <xmlStrEqual@plt+0x310a0>
  418a86:	mov    r15,rax
  418a89:	mov    rax,QWORD PTR [r12+0x4]
  418a8e:	mov    rdi,QWORD PTR [rsp+0x10]
  418a93:	mov    QWORD PTR [r15],rax
  418a96:	call   425060 <xmlStrEqual@plt+0x21120>
  418a9b:	mov    QWORD PTR [r15+0x8],rax
  418a9f:	mov    rax,QWORD PTR [rsp+0x8]
  418aa4:	lea    rdi,[rax+0x20]
  418aa8:	call   425060 <xmlStrEqual@plt+0x21120>
  418aad:	mov    QWORD PTR [r15+0x10],rax
  418ab1:	mov    rdi,QWORD PTR [rsp+0x20]
  418ab6:	mov    rsi,0x425060
  418abd:	call   42de20 <xmlStrEqual@plt+0x29ee0>
  418ac2:	mov    QWORD PTR [r15+0x18],rax
  418ac6:	mov    rsi,r15
  418ac9:	mov    r15,QWORD PTR [rsp+0x18]
  418ace:	mov    rdi,r15
  418ad1:	call   417b80 <xmlStrEqual@plt+0x13c40>
  418ad6:	mov    rsi,r15
  418ad9:	mov    rdi,r14
  418adc:	call   417280 <xmlStrEqual@plt+0x13340>
  418ae1:	mov    rdx,QWORD PTR [rsp]
  418ae5:	mov    rsi,r14
  418ae8:	mov    rdi,r15
  418aeb:	call   417c40 <xmlStrEqual@plt+0x13d00>
  418af0:	mov    r8,0x417070
  418af7:	mov    rcx,rax
  418afa:	mov    rsi,r14
  418afd:	lea    rdx,[rip+0xfffffffffffff27c]        # 417d80 <xmlStrEqual@plt+0x13e40>
  418b04:	mov    edi,0xc
  418b09:	call   43b760 <xmlStrEqual@plt+0x37820>
  418b0e:	mov    rdx,rax
  418b11:	mov    QWORD PTR [rsp+0x18],rax
  418b16:	mov    rax,0x475858
  418b1d:	mov    rsi,r15
  418b20:	mov    rdi,QWORD PTR [rax]
  418b23:	call   43b7c0 <xmlStrEqual@plt+0x37880>
  418b28:	mov    rcx,QWORD PTR [rsp+0x18]
  418b2d:	mov    rdi,rcx
  418b30:	call   417d80 <xmlStrEqual@plt+0x13e40>
  418b35:	jmp    4189d7 <xmlStrEqual@plt+0x14a97>
  418b3a:	nop    WORD PTR [rax+rax*1+0x0]
  418b40:	mov    rdi,rbx
  418b43:	call   423f50 <xmlStrEqual@plt+0x20010>
  418b48:	mov    rdx,rax
  418b4b:	lea    rsi,[rip+0x33936]        # 44c488 <xmlStrEqual@plt+0x48548>
  418b52:	xor    eax,eax
  418b54:	mov    edi,0x5
  418b59:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  418b5e:	mov    rax,QWORD PTR [rsp+0x8]
  418b63:	mov    QWORD PTR [rsp+0x8],rbp
  418b68:	mov    QWORD PTR [rsp],rax
  418b6c:	jmp    418120 <xmlStrEqual@plt+0x141e0>
  418b71:	nop    DWORD PTR [rax+0x0]
  418b78:	xor    eax,eax
  418b7a:	call   433a70 <xmlStrEqual@plt+0x2fb30>
  418b7f:	mov    r15,rax
  418b82:	mov    rdi,rax
  418b85:	mov    rsi,rbp
  418b88:	call   433aa0 <xmlStrEqual@plt+0x2fb60>
  418b8d:	mov    rsi,r15
  418b90:	mov    rdi,r14
  418b93:	call   417990 <xmlStrEqual@plt+0x13a50>
  418b98:	mov    rsi,r15
  418b9b:	mov    rdi,rbx
  418b9e:	call   417b00 <xmlStrEqual@plt+0x13bc0>
  418ba3:	mov    rax,0x475860
  418baa:	mov    rsi,r13
  418bad:	mov    rdi,QWORD PTR [rax]
  418bb0:	call   435af0 <xmlStrEqual@plt+0x31bb0>
  418bb5:	mov    rdi,r12
  418bb8:	call   417d80 <xmlStrEqual@plt+0x13e40>
  418bbd:	mov    r15,0x469e3c
  418bc4:	jmp    4182cd <xmlStrEqual@plt+0x1438d>
  418bc9:	nop    DWORD PTR [rax+0x0]
  418bd0:	mov    rbx,0x469e3c
  418bd7:	mov    eax,DWORD PTR [rbx]
  418bd9:	cmp    eax,0x1
  418bdc:	jle    418470 <xmlStrEqual@plt+0x14530>
  418be2:	mov    rdx,QWORD PTR [rbp+0x4]
  418be6:	xor    eax,eax
  418be8:	lea    rsi,[rip+0x33939]        # 44c528 <xmlStrEqual@plt+0x485e8>
  418bef:	mov    edi,0x6
  418bf4:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  418bf9:	mov    eax,DWORD PTR [rbx]
  418bfb:	jmp    418470 <xmlStrEqual@plt+0x14530>
  418c00:	mov    eax,DWORD PTR [r15]
  418c03:	cmp    eax,0x1
  418c06:	jle    418470 <xmlStrEqual@plt+0x14530>
  418c0c:	xor    eax,eax
  418c0e:	lea    rsi,[rip+0x32fd2]        # 44bbe7 <xmlStrEqual@plt+0x47ca7>
  418c15:	mov    edi,0x6
  418c1a:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  418c1f:	mov    eax,DWORD PTR [r15]
  418c22:	jmp    418470 <xmlStrEqual@plt+0x14530>
  418c27:	nop    WORD PTR [rax+rax*1+0x0]
  418c30:	mov    r15,0x469e3c
  418c37:	cmp    DWORD PTR [r15],0x1
  418c3b:	jle    418c72 <xmlStrEqual@plt+0x14d32>
  418c3d:	mov    rdi,QWORD PTR [rbx+0x20]
  418c41:	call   433b80 <xmlStrEqual@plt+0x2fc40>
  418c46:	mov    rdi,rax
  418c49:	call   424d40 <xmlStrEqual@plt+0x20e00>
  418c4e:	mov    rdi,rbp
  418c51:	mov    r12,rax
  418c54:	call   424d40 <xmlStrEqual@plt+0x20e00>
  418c59:	mov    rdx,rax
  418c5c:	mov    rcx,r12
  418c5f:	lea    rsi,[rip+0x3395a]        # 44c5c0 <xmlStrEqual@plt+0x48680>
  418c66:	mov    edi,0x6
  418c6b:	xor    eax,eax
  418c6d:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  418c72:	mov    rdi,QWORD PTR [rbx]
  418c75:	call   424d40 <xmlStrEqual@plt+0x20e00>
  418c7a:	mov    rdx,rax
  418c7d:	lea    rsi,[rip+0x3398c]        # 44c610 <xmlStrEqual@plt+0x486d0>
  418c84:	xor    eax,eax
  418c86:	mov    edi,0x3
  418c8b:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  418c90:	mov    rdi,rbp
  418c93:	call   42bde0 <xmlStrEqual@plt+0x27ea0>
  418c98:	mov    eax,DWORD PTR [r15]
  418c9b:	jmp    418470 <xmlStrEqual@plt+0x14530>
  418ca0:	xor    eax,eax
  418ca2:	jmp    4184d6 <xmlStrEqual@plt+0x14596>
  418ca7:	nop    WORD PTR [rax+rax*1+0x0]
  418cb0:	mov    r15,QWORD PTR [r14+0x28]
  418cb4:	mov    rdi,QWORD PTR [r15+0x8]
  418cb8:	movzx  eax,BYTE PTR [rdi+0x3c]
  418cbc:	cmp    al,0x3
  418cbe:	je     418cf8 <xmlStrEqual@plt+0x14db8>
  418cc0:	cmp    al,0x4
  418cc2:	je     418e21 <xmlStrEqual@plt+0x14ee1>
  418cc8:	cmp    al,0x2
  418cca:	je     418d8f <xmlStrEqual@plt+0x14e4f>
  418cd0:	mov    rdi,r13
  418cd3:	call   417ab0 <xmlStrEqual@plt+0x13b70>
  418cd8:	mov    QWORD PTR [rsp+0x18],rax
  418cdd:	mov    rsi,QWORD PTR [r14+0x28]
  418ce1:	mov    rdi,QWORD PTR [rsp+0x18]
  418ce6:	call   417b60 <xmlStrEqual@plt+0x13c20>
  418ceb:	mov    DWORD PTR [rsp+0x40],0x1
  418cf3:	jmp    418a7c <xmlStrEqual@plt+0x14b3c>
  418cf8:	mov    DWORD PTR [rsp+0x40],0x1
  418d00:	mov    r8,QWORD PTR [r12+0x4]
  418d05:	mov    rdi,r15
  418d08:	mov    QWORD PTR [rsp+0x18],r8
  418d0d:	call   433b80 <xmlStrEqual@plt+0x2fc40>
  418d12:	mov    r8,QWORD PTR [rsp+0x18]
  418d17:	xor    edx,edx
  418d19:	mov    ecx,0x1
  418d1e:	mov    esi,0x1
  418d23:	mov    rdi,rax
  418d26:	call   423e60 <xmlStrEqual@plt+0x1ff20>
  418d2b:	mov    QWORD PTR [rsp+0x28],rax
  418d30:	mov    rax,QWORD PTR [rsp+0x30]
  418d35:	cmp    DWORD PTR [rax],0x1
  418d38:	jle    418d65 <xmlStrEqual@plt+0x14e25>
  418d3a:	mov    rdi,r15
  418d3d:	call   433b80 <xmlStrEqual@plt+0x2fc40>
  418d42:	mov    rdi,rax
  418d45:	call   424d40 <xmlStrEqual@plt+0x20e00>
  418d4a:	mov    rdx,rax
  418d4d:	mov    ecx,0x1
  418d52:	lea    rsi,[rip+0x3379f]        # 44c4f8 <xmlStrEqual@plt+0x485b8>
  418d59:	mov    edi,0x6
  418d5e:	xor    eax,eax
  418d60:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  418d65:	mov    r15,QWORD PTR [rsp+0x28]
  418d6a:	mov    rdx,QWORD PTR [rsp]
  418d6e:	mov    rdi,r14
  418d71:	mov    rsi,r15
  418d74:	call   4089b0 <xmlStrEqual@plt+0x4a70>
  418d79:	mov    rdi,r15
  418d7c:	test   r15,r15
  418d7f:	je     4189d7 <xmlStrEqual@plt+0x14a97>
  418d85:	call   430820 <xmlStrEqual@plt+0x2c8e0>
  418d8a:	jmp    4189d7 <xmlStrEqual@plt+0x14a97>
  418d8f:	mov    DWORD PTR [rsp+0x40],0x1
  418d97:	call   42c880 <xmlStrEqual@plt+0x28940>
  418d9c:	mov    r15,rax
  418d9f:	mov    rdi,rbx
  418da2:	mov    QWORD PTR [rsp+0x18],rax
  418da7:	call   430b50 <xmlStrEqual@plt+0x2cc10>
  418dac:	mov    rax,r15
  418daf:	mov    r15,QWORD PTR [r15+0x8]
  418db3:	cmp    rax,r15
  418db6:	je     418e12 <xmlStrEqual@plt+0x14ed2>
  418db8:	mov    DWORD PTR [rsp+0x44],ebp
  418dbc:	mov    QWORD PTR [rsp+0x48],r12
  418dc1:	mov    rbp,QWORD PTR [rsp+0x18]
  418dc6:	mov    r12,r15
  418dc9:	mov    r15,QWORD PTR [rsp+0x38]
  418dce:	xchg   ax,ax
  418dd0:	mov    rdi,QWORD PTR [r12+0x10]
  418dd5:	call   4255a0 <xmlStrEqual@plt+0x21660>
  418dda:	mov    r8,rax
  418ddd:	xor    ecx,ecx
  418ddf:	mov    edx,0x10f6
  418de4:	mov    esi,0x10f6
  418de9:	mov    rdi,r15
  418dec:	call   439130 <xmlStrEqual@plt+0x351f0>
  418df1:	mov    rdx,r15
  418df4:	mov    rsi,rbx
  418df7:	mov    rdi,r14
  418dfa:	call   4089b0 <xmlStrEqual@plt+0x4a70>
  418dff:	mov    r12,QWORD PTR [r12+0x8]
  418e04:	cmp    rbp,r12
  418e07:	jne    418dd0 <xmlStrEqual@plt+0x14e90>
  418e09:	mov    ebp,DWORD PTR [rsp+0x44]
  418e0d:	mov    r12,QWORD PTR [rsp+0x48]
  418e12:	mov    rdi,QWORD PTR [rsp+0x18]
  418e17:	call   42e2b0 <xmlStrEqual@plt+0x2a370>
  418e1c:	jmp    4189d7 <xmlStrEqual@plt+0x14a97>
  418e21:	mov    DWORD PTR [rsp+0x40],0x1
  418e29:	mov    r8,QWORD PTR [r12+0x4]
  418e2e:	mov    rdi,r15
  418e31:	mov    QWORD PTR [rsp+0x18],r8
  418e36:	call   433b80 <xmlStrEqual@plt+0x2fc40>
  418e3b:	mov    r8,QWORD PTR [rsp+0x18]
  418e40:	xor    edx,edx
  418e42:	mov    ecx,0x1
  418e47:	mov    esi,0xf
  418e4c:	mov    rdi,rax
  418e4f:	call   423e60 <xmlStrEqual@plt+0x1ff20>
  418e54:	mov    QWORD PTR [rsp+0x28],rax
  418e59:	mov    rax,QWORD PTR [rsp+0x30]
  418e5e:	cmp    DWORD PTR [rax],0x1
  418e61:	jle    418e86 <xmlStrEqual@plt+0x14f46>
  418e63:	mov    rdi,r15
  418e66:	call   433b80 <xmlStrEqual@plt+0x2fc40>
  418e6b:	mov    rdx,rax
  418e6e:	mov    ecx,0xf
  418e73:	lea    rsi,[rip+0x3367e]        # 44c4f8 <xmlStrEqual@plt+0x485b8>
  418e7a:	mov    edi,0x6
  418e7f:	xor    eax,eax
  418e81:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  418e86:	mov    r15,QWORD PTR [rsp+0x28]
  418e8b:	mov    rdx,QWORD PTR [rsp]
  418e8f:	mov    rsi,r15
  418e92:	mov    rdi,r14
  418e95:	call   4089b0 <xmlStrEqual@plt+0x4a70>
  418e9a:	test   r15,r15
  418e9d:	je     4189d7 <xmlStrEqual@plt+0x14a97>
  418ea3:	mov    rdi,r15
  418ea6:	call   430820 <xmlStrEqual@plt+0x2c8e0>
  418eab:	jmp    4189d7 <xmlStrEqual@plt+0x14a97>
  418eb0:	mov    rdi,QWORD PTR [rsp+0x20]
  418eb5:	mov    r15,QWORD PTR [rsp+0x30]
  418eba:	call   42e2b0 <xmlStrEqual@plt+0x2a370>
  418ebf:	mov    rdi,QWORD PTR [rsp+0x28]
  418ec4:	test   rdi,rdi
  418ec7:	je     4188a2 <xmlStrEqual@plt+0x14962>
  418ecd:	call   430820 <xmlStrEqual@plt+0x2c8e0>
  418ed2:	jmp    4188a2 <xmlStrEqual@plt+0x14962>
  418ed7:	nop    WORD PTR [rax+rax*1+0x0]
  418ee0:	mov    r15,QWORD PTR [rsp+0x30]
  418ee5:	mov    rdi,QWORD PTR [rsp+0x20]
  418eea:	call   42e2b0 <xmlStrEqual@plt+0x2a370>
  418eef:	mov    rdi,QWORD PTR [rsp+0x10]
  418ef4:	call   424bf0 <xmlStrEqual@plt+0x20cb0>
  418ef9:	mov    rdi,r13
  418efc:	call   424bf0 <xmlStrEqual@plt+0x20cb0>
  418f01:	jmp    4182cd <xmlStrEqual@plt+0x1438d>
  418f06:	xor    r13d,r13d
  418f09:	jmp    418ee5 <xmlStrEqual@plt+0x14fa5>
  418f0b:	call   403c00 <__stack_chk_fail@plt>
  418f10:	endbr64 
  418f14:	mov    rax,0x469780
  418f1b:	ret    
  418f1c:	nop    DWORD PTR [rax+0x0]
  418f20:	endbr64 
  418f24:	mov    eax,0x1
  418f29:	ret    
  418f2a:	nop    WORD PTR [rax+rax*1+0x0]
  418f30:	endbr64 
  418f34:	mov    eax,0x1
  418f39:	ret    
  418f3a:	nop    WORD PTR [rax+rax*1+0x0]
  418f40:	endbr64 
  418f44:	mov    rax,QWORD PTR [rdi+0x28]
  418f48:	mov    rdi,QWORD PTR [rax+0x50]
  418f4c:	jmp    4037b0 <free@plt>
  418f51:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  418f5c:	nop    DWORD PTR [rax+0x0]
  418f60:	endbr64 
  418f64:	push   r15
  418f66:	push   r14
  418f68:	push   r13
  418f6a:	push   r12
  418f6c:	push   rbp
  418f6d:	mov    rbp,rdi
  418f70:	push   rbx
  418f71:	sub    rsp,0x68
  418f75:	mov    rax,QWORD PTR fs:0x28
  418f7e:	mov    QWORD PTR [rsp+0x58],rax
  418f83:	xor    eax,eax
  418f85:	mov    rax,QWORD PTR [rdi+0x10]
  418f89:	mov    rax,QWORD PTR [rax]
  418f8c:	mov    edi,DWORD PTR [rax+0x18]
  418f8f:	test   edi,edi
  418f91:	je     4190c0 <xmlStrEqual@plt+0x15180>
  418f97:	mov    rax,QWORD PTR [rax+0x8]
  418f9b:	mov    r13,QWORD PTR [rax+0x10]
  418f9f:	mov    esi,0x10f6
  418fa4:	xor    eax,eax
  418fa6:	mov    WORD PTR [rsp+0x50],si
  418fab:	lea    r12,[rsp+0x10]
  418fb0:	call   423c90 <xmlStrEqual@plt+0x1fd50>
  418fb5:	mov    edi,DWORD PTR [rbp+0x18]
  418fb8:	mov    rdx,r12
  418fbb:	mov    rsi,rax
  418fbe:	mov    rbx,rax
  418fc1:	call   438c70 <xmlStrEqual@plt+0x34d30>
  418fc6:	mov    ebp,eax
  418fc8:	mov    rax,0x469e3c
  418fcf:	cmp    ebp,0x1
  418fd2:	je     419010 <xmlStrEqual@plt+0x150d0>
  418fd4:	mov    ecx,DWORD PTR [rax]
  418fd6:	test   ecx,ecx
  418fd8:	jg     4190a8 <xmlStrEqual@plt+0x15168>
  418fde:	mov    rdi,rbx
  418fe1:	call   430820 <xmlStrEqual@plt+0x2c8e0>
  418fe6:	xor    ebp,ebp
  418fe8:	mov    rcx,QWORD PTR [rsp+0x58]
  418fed:	xor    rcx,QWORD PTR fs:0x28
  418ff6:	mov    eax,ebp
  418ff8:	jne    4190f3 <xmlStrEqual@plt+0x151b3>
  418ffe:	add    rsp,0x68
  419002:	pop    rbx
  419003:	pop    rbp
  419004:	pop    r12
  419006:	pop    r13
  419008:	pop    r14
  41900a:	pop    r15
  41900c:	ret    
  41900d:	nop    DWORD PTR [rax]
  419010:	cmp    DWORD PTR [rbx+0x14],0x3
  419014:	mov    edx,DWORD PTR [rax]
  419016:	jbe    4190d0 <xmlStrEqual@plt+0x15190>
  41901c:	mov    rax,QWORD PTR [rbx+0x38]
  419020:	sub    rax,QWORD PTR [rbx+0x30]
  419024:	mov    WORD PTR [rbx+0x24],ax
  419028:	test   edx,edx
  41902a:	jle    419089 <xmlStrEqual@plt+0x15149>
  41902c:	movzx  r9d,WORD PTR [rsp+0x52]
  419032:	mov    rdi,r12
  419035:	mov    DWORD PTR [rsp+0xc],r9d
  41903a:	movzx  r14d,WORD PTR [rsp+0x50]
  419040:	call   424d40 <xmlStrEqual@plt+0x20e00>
  419045:	lea    rdi,[r12+0x20]
  41904a:	mov    r15,rax
  41904d:	call   424d40 <xmlStrEqual@plt+0x20e00>
  419052:	mov    rdi,rbx
  419055:	mov    QWORD PTR [rsp],rax
  419059:	call   423f50 <xmlStrEqual@plt+0x20010>
  41905e:	sub    rsp,0x8
  419062:	push   r14
  419064:	mov    rdx,rax
  419067:	mov    r8,r15
  41906a:	mov    r9d,DWORD PTR [rsp+0x1c]
  41906f:	mov    rcx,QWORD PTR [rsp+0x10]
  419074:	xor    eax,eax
  419076:	lea    rsi,[rip+0x338f3]        # 44c970 <xmlStrEqual@plt+0x48a30>
  41907d:	mov    edi,0x5
  419082:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  419087:	pop    rax
  419088:	pop    rdx
  419089:	mov    rdi,r13
  41908c:	mov    rdx,r12
  41908f:	mov    rsi,rbx
  419092:	call   408960 <xmlStrEqual@plt+0x4a20>
  419097:	mov    rdi,rbx
  41909a:	call   430820 <xmlStrEqual@plt+0x2c8e0>
  41909f:	jmp    418fe8 <xmlStrEqual@plt+0x150a8>
  4190a4:	nop    DWORD PTR [rax+0x0]
  4190a8:	lea    rsi,[rip+0x33829]        # 44c8d8 <xmlStrEqual@plt+0x48998>
  4190af:	mov    edi,0x5
  4190b4:	xor    eax,eax
  4190b6:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  4190bb:	jmp    418fde <xmlStrEqual@plt+0x1509e>
  4190c0:	xor    r13d,r13d
  4190c3:	jmp    418f9f <xmlStrEqual@plt+0x1505f>
  4190c8:	nop    DWORD PTR [rax+rax*1+0x0]
  4190d0:	xor    ebp,ebp
  4190d2:	cmp    edx,0x2
  4190d5:	jle    418fe8 <xmlStrEqual@plt+0x150a8>
  4190db:	lea    rsi,[rip+0x33846]        # 44c928 <xmlStrEqual@plt+0x489e8>
  4190e2:	mov    edi,0x7
  4190e7:	xor    eax,eax
  4190e9:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  4190ee:	jmp    418fe8 <xmlStrEqual@plt+0x150a8>
  4190f3:	call   403c00 <__stack_chk_fail@plt>
  4190f8:	nop    DWORD PTR [rax+rax*1+0x0]
  419100:	endbr64 
  419104:	push   rbx
  419105:	mov    rax,QWORD PTR [rdi+0x28]
  419109:	mov    rax,QWORD PTR [rax+0x50]
  41910d:	cmp    esi,0x2
  419110:	je     419130 <xmlStrEqual@plt+0x151f0>
  419112:	cmp    esi,0xa
  419115:	je     419148 <xmlStrEqual@plt+0x15208>
  419117:	mov    rax,0x469e3c
  41911e:	xor    ebx,ebx
  419120:	cmp    DWORD PTR [rax],0x1
  419123:	jg     419160 <xmlStrEqual@plt+0x15220>
  419125:	mov    rax,rbx
  419128:	pop    rbx
  419129:	ret    
  41912a:	nop    WORD PTR [rax+rax*1+0x0]
  419130:	mov    rbx,QWORD PTR [rax]
  419133:	test   rbx,rbx
  419136:	je     419125 <xmlStrEqual@plt+0x151e5>
  419138:	mov    rbx,QWORD PTR [rbx+0x10]
  41913c:	mov    rax,rbx
  41913f:	pop    rbx
  419140:	ret    
  419141:	nop    DWORD PTR [rax+0x0]
  419148:	mov    rbx,QWORD PTR [rax+0x8]
  41914c:	test   rbx,rbx
  41914f:	je     419125 <xmlStrEqual@plt+0x151e5>
  419151:	mov    rbx,QWORD PTR [rbx+0x18]
  419155:	mov    rax,rbx
  419158:	pop    rbx
  419159:	ret    
  41915a:	nop    WORD PTR [rax+rax*1+0x0]
  419160:	mov    edx,esi
  419162:	xor    eax,eax
  419164:	lea    rsi,[rip+0x33835]        # 44c9a0 <xmlStrEqual@plt+0x48a60>
  41916b:	mov    edi,0x6
  419170:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  419175:	mov    rax,rbx
  419178:	pop    rbx
  419179:	ret    
  41917a:	nop    WORD PTR [rax+rax*1+0x0]
  419180:	endbr64 
  419184:	push   rbx
  419185:	mov    rbx,rdi
  419188:	mov    edi,0x2
  41918d:	call   43f350 <xmlStrEqual@plt+0x3b410>
  419192:	mov    QWORD PTR [rbx],rax
  419195:	test   rax,rax
  419198:	je     4191a6 <xmlStrEqual@plt+0x15266>
  41919a:	mov    rdx,0x469e3c
  4191a1:	cmp    DWORD PTR [rdx],0x1
  4191a4:	jg     419220 <xmlStrEqual@plt+0x152e0>
  4191a6:	mov    edi,0xa
  4191ab:	call   43f350 <xmlStrEqual@plt+0x3b410>
  4191b0:	mov    QWORD PTR [rbx+0x8],rax
  4191b4:	test   rax,rax
  4191b7:	je     419250 <xmlStrEqual@plt+0x15310>
  4191bd:	mov    rdx,0x469e3c
  4191c4:	cmp    DWORD PTR [rdx],0x1
  4191c7:	jg     4191d0 <xmlStrEqual@plt+0x15290>
  4191c9:	pop    rbx
  4191ca:	ret    
  4191cb:	nop    DWORD PTR [rax+rax*1+0x0]
  4191d0:	mov    rdi,QWORD PTR [rax+0x18]
  4191d4:	call   424d40 <xmlStrEqual@plt+0x20e00>
  4191d9:	mov    rdx,QWORD PTR [rbx+0x8]
  4191dd:	mov    rcx,rax
  4191e0:	mov    rdx,QWORD PTR [rdx]
  4191e3:	xor    eax,eax
  4191e5:	lea    rsi,[rip+0x3381c]        # 44ca08 <xmlStrEqual@plt+0x48ac8>
  4191ec:	mov    edi,0x6
  4191f1:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  4191f6:	cmp    QWORD PTR [rbx],0x0
  4191fa:	jne    4191c9 <xmlStrEqual@plt+0x15289>
  4191fc:	cmp    QWORD PTR [rbx+0x8],0x0
  419201:	jne    4191c9 <xmlStrEqual@plt+0x15289>
  419203:	lea    rsi,[rip+0x33826]        # 44ca30 <xmlStrEqual@plt+0x48af0>
  41920a:	mov    edi,0x2
  41920f:	xor    eax,eax
  419211:	pop    rbx
  419212:	jmp    430e20 <xmlStrEqual@plt+0x2cee0>
  419217:	nop    WORD PTR [rax+rax*1+0x0]
  419220:	mov    rdi,QWORD PTR [rax+0x10]
  419224:	call   424d40 <xmlStrEqual@plt+0x20e00>
  419229:	mov    rdx,QWORD PTR [rbx]
  41922c:	mov    rcx,rax
  41922f:	mov    rdx,QWORD PTR [rdx]
  419232:	lea    rsi,[rip+0x337a7]        # 44c9e0 <xmlStrEqual@plt+0x48aa0>
  419239:	mov    edi,0x6
  41923e:	xor    eax,eax
  419240:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  419245:	jmp    4191a6 <xmlStrEqual@plt+0x15266>
  41924a:	nop    WORD PTR [rax+rax*1+0x0]
  419250:	cmp    QWORD PTR [rbx],0x0
  419254:	je     419203 <xmlStrEqual@plt+0x152c3>
  419256:	pop    rbx
  419257:	ret    
  419258:	nop    DWORD PTR [rax+rax*1+0x0]
  419260:	endbr64 
  419264:	push   r13
  419266:	push   r12
  419268:	push   rbp
  419269:	push   rbx
  41926a:	mov    rbx,rdi
  41926d:	sub    rsp,0x8
  419271:	mov    rbp,0x4757c0
  419278:	cmp    DWORD PTR [rbp+0x0],0xa
  41927c:	jne    4192d8 <xmlStrEqual@plt+0x15398>
  41927e:	mov    r12,0x4757a8
  419285:	mov    r13,0x418f60
  41928c:	mov    edi,0xa
  419291:	call   4389a0 <xmlStrEqual@plt+0x34a60>
  419296:	mov    rdi,QWORD PTR [r12]
  41929a:	mov    ecx,eax
  41929c:	mov    rdx,rbx
  41929f:	mov    rsi,r13
  4192a2:	call   4386e0 <xmlStrEqual@plt+0x347a0>
  4192a7:	mov    edi,0x10
  4192ac:	call   435000 <xmlStrEqual@plt+0x310c0>
  4192b1:	mov    rdx,QWORD PTR [rbx+0x28]
  4192b5:	mov    rdi,rax
  4192b8:	mov    QWORD PTR [rdx+0x50],rax
  4192bc:	call   419180 <xmlStrEqual@plt+0x15240>
  4192c1:	add    rsp,0x8
  4192c5:	pop    rbx
  4192c6:	pop    rbp
  4192c7:	pop    r12
  4192c9:	mov    eax,0x1
  4192ce:	pop    r13
  4192d0:	ret    
  4192d1:	nop    DWORD PTR [rax+0x0]
  4192d8:	mov    edi,0x2
  4192dd:	call   4389a0 <xmlStrEqual@plt+0x34a60>
  4192e2:	mov    r12,0x4757a8
  4192e9:	mov    r13,0x418f60
  4192f0:	mov    rdi,QWORD PTR [r12]
  4192f4:	mov    ecx,eax
  4192f6:	mov    rdx,rbx
  4192f9:	mov    rsi,r13
  4192fc:	call   4386e0 <xmlStrEqual@plt+0x347a0>
  419301:	cmp    DWORD PTR [rbp+0x0],0x2
  419305:	je     4192a7 <xmlStrEqual@plt+0x15367>
  419307:	jmp    41928c <xmlStrEqual@plt+0x1534c>
  419309:	nop    DWORD PTR [rax+0x0]
  419310:	endbr64 
  419314:	sub    rsp,0x8
  419318:	mov    rax,0x469780
  41931f:	mov    rdi,QWORD PTR [rax+0x50]
  419323:	cmp    edx,0x2
  419326:	je     419348 <xmlStrEqual@plt+0x15408>
  419328:	cmp    edx,0xa
  41932b:	jne    419339 <xmlStrEqual@plt+0x153f9>
  41932d:	test   rdi,rdi
  419330:	je     419339 <xmlStrEqual@plt+0x153f9>
  419332:	cmp    QWORD PTR [rdi+0x8],0x0
  419337:	je     419353 <xmlStrEqual@plt+0x15413>
  419339:	mov    eax,0x1
  41933e:	add    rsp,0x8
  419342:	ret    
  419343:	nop    DWORD PTR [rax+rax*1+0x0]
  419348:	test   rdi,rdi
  41934b:	je     419339 <xmlStrEqual@plt+0x153f9>
  41934d:	cmp    QWORD PTR [rdi],0x0
  419351:	jne    419339 <xmlStrEqual@plt+0x153f9>
  419353:	call   419180 <xmlStrEqual@plt+0x15240>
  419358:	jmp    419339 <xmlStrEqual@plt+0x153f9>
  41935a:	nop    WORD PTR [rax+rax*1+0x0]
  419360:	endbr64 
  419364:	push   rbx
  419365:	sub    rsp,0x10
  419369:	mov    rax,QWORD PTR [rdi+0x28]
  41936d:	mov    rbx,QWORD PTR [rax+0x50]
  419371:	mov    eax,DWORD PTR [rcx+0x18]
  419374:	test   eax,eax
  419376:	je     419390 <xmlStrEqual@plt+0x15450>
  419378:	cmp    BYTE PTR [rsi+0xc],0x1
  41937c:	je     4193d0 <xmlStrEqual@plt+0x15490>
  41937e:	add    rsp,0x10
  419382:	mov    eax,0x1
  419387:	pop    rbx
  419388:	ret    
  419389:	nop    DWORD PTR [rax+0x0]
  419390:	mov    rdi,rdx
  419393:	mov    QWORD PTR [rsp+0x8],rsi
  419398:	call   425890 <xmlStrEqual@plt+0x21950>
  41939d:	mov    rdx,QWORD PTR [rbx+0x8]
  4193a1:	cmp    ax,0x2
  4193a5:	cmove  rdx,QWORD PTR [rbx]
  4193a9:	mov    rsi,QWORD PTR [rsp+0x8]
  4193ae:	cmp    rdx,rsi
  4193b1:	jne    41937e <xmlStrEqual@plt+0x1543e>
  4193b3:	mov    rax,0x469e3c
  4193ba:	cmp    DWORD PTR [rax],0x1
  4193bd:	jg     419418 <xmlStrEqual@plt+0x154d8>
  4193bf:	mov    rdi,rbx
  4193c2:	call   419180 <xmlStrEqual@plt+0x15240>
  4193c7:	jmp    41937e <xmlStrEqual@plt+0x1543e>
  4193c9:	nop    DWORD PTR [rax+0x0]
  4193d0:	mov    rdi,rcx
  4193d3:	call   425890 <xmlStrEqual@plt+0x21950>
  4193d8:	cmp    QWORD PTR [rbx],0x0
  4193dc:	movzx  eax,ax
  4193df:	jne    4193e6 <xmlStrEqual@plt+0x154a6>
  4193e1:	cmp    eax,0x2
  4193e4:	je     4193f2 <xmlStrEqual@plt+0x154b2>
  4193e6:	cmp    QWORD PTR [rbx+0x8],0x0
  4193eb:	jne    41937e <xmlStrEqual@plt+0x1543e>
  4193ed:	cmp    eax,0xa
  4193f0:	jne    41937e <xmlStrEqual@plt+0x1543e>
  4193f2:	mov    rax,0x469e3c
  4193f9:	cmp    DWORD PTR [rax],0x1
  4193fc:	jle    4193bf <xmlStrEqual@plt+0x1547f>
  4193fe:	lea    rsi,[rip+0x336b3]        # 44cab8 <xmlStrEqual@plt+0x48b78>
  419405:	mov    edi,0x6
  41940a:	xor    eax,eax
  41940c:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  419411:	jmp    4193bf <xmlStrEqual@plt+0x1547f>
  419413:	nop    DWORD PTR [rax+rax*1+0x0]
  419418:	lea    rsi,[rip+0x33641]        # 44ca60 <xmlStrEqual@plt+0x48b20>
  41941f:	mov    edi,0x6
  419424:	xor    eax,eax
  419426:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  41942b:	jmp    4193bf <xmlStrEqual@plt+0x1547f>
  41942d:	nop    DWORD PTR [rax]
  419430:	endbr64 
  419434:	push   rbx
  419435:	mov    rax,QWORD PTR [rdi+0x28]
  419439:	mov    rbx,QWORD PTR [rax+0x50]
  41943d:	mov    rax,QWORD PTR [rbx]
  419440:	cmp    rax,rsi
  419443:	je     41945e <xmlStrEqual@plt+0x1551e>
  419445:	mov    rdx,QWORD PTR [rbx+0x8]
  419449:	test   rax,rax
  41944c:	sete   cl
  41944f:	cmp    rdx,rsi
  419452:	sete   al
  419455:	or     cl,al
  419457:	jne    41945e <xmlStrEqual@plt+0x1551e>
  419459:	test   rdx,rdx
  41945c:	jne    419485 <xmlStrEqual@plt+0x15545>
  41945e:	mov    rax,0x469e3c
  419465:	cmp    DWORD PTR [rax],0x1
  419468:	jle    41947d <xmlStrEqual@plt+0x1553d>
  41946a:	lea    rsi,[rip+0x33687]        # 44caf8 <xmlStrEqual@plt+0x48bb8>
  419471:	mov    edi,0x6
  419476:	xor    eax,eax
  419478:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  41947d:	mov    rdi,rbx
  419480:	call   419180 <xmlStrEqual@plt+0x15240>
  419485:	mov    eax,0x1
  41948a:	pop    rbx
  41948b:	ret    
  41948c:	nop    DWORD PTR [rax+0x0]
  419490:	endbr64 
  419494:	cmp    esi,0x2
  419497:	je     4194b0 <xmlStrEqual@plt+0x15570>
  419499:	cmp    esi,0xa
  41949c:	jne    4194a8 <xmlStrEqual@plt+0x15568>
  41949e:	mov    rax,QWORD PTR [rdi+0x8]
  4194a2:	ret    
  4194a3:	nop    DWORD PTR [rax+rax*1+0x0]
  4194a8:	xor    eax,eax
  4194aa:	ret    
  4194ab:	nop    DWORD PTR [rax+rax*1+0x0]
  4194b0:	mov    rax,QWORD PTR [rdi]
  4194b3:	ret    
  4194b4:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4194bf:	nop
  4194c0:	endbr64 
  4194c4:	push   rbx
  4194c5:	cmp    esi,0x2
  4194c8:	je     4194e8 <xmlStrEqual@plt+0x155a8>
  4194ca:	cmp    esi,0xa
  4194cd:	je     419500 <xmlStrEqual@plt+0x155c0>
  4194cf:	mov    rax,0x469e3c
  4194d6:	xor    ebx,ebx
  4194d8:	cmp    DWORD PTR [rax],0x1
  4194db:	jg     419518 <xmlStrEqual@plt+0x155d8>
  4194dd:	mov    rax,rbx
  4194e0:	pop    rbx
  4194e1:	ret    
  4194e2:	nop    WORD PTR [rax+rax*1+0x0]
  4194e8:	mov    rbx,QWORD PTR [rdi]
  4194eb:	test   rbx,rbx
  4194ee:	je     4194dd <xmlStrEqual@plt+0x1559d>
  4194f0:	mov    rbx,QWORD PTR [rbx+0x10]
  4194f4:	mov    rax,rbx
  4194f7:	pop    rbx
  4194f8:	ret    
  4194f9:	nop    DWORD PTR [rax+0x0]
  419500:	mov    rbx,QWORD PTR [rdi+0x8]
  419504:	test   rbx,rbx
  419507:	je     4194dd <xmlStrEqual@plt+0x1559d>
  419509:	mov    rbx,QWORD PTR [rbx+0x18]
  41950d:	mov    rax,rbx
  419510:	pop    rbx
  419511:	ret    
  419512:	nop    WORD PTR [rax+rax*1+0x0]
  419518:	mov    edx,esi
  41951a:	xor    eax,eax
  41951c:	lea    rsi,[rip+0x3347d]        # 44c9a0 <xmlStrEqual@plt+0x48a60>
  419523:	mov    edi,0x6
  419528:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  41952d:	mov    rax,rbx
  419530:	pop    rbx
  419531:	ret    
  419532:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  41953d:	nop    DWORD PTR [rax]
  419540:	endbr64 
  419544:	cmp    esi,0x2
  419547:	je     419570 <xmlStrEqual@plt+0x15630>
  419549:	cmp    esi,0xa
  41954c:	jne    419560 <xmlStrEqual@plt+0x15620>
  41954e:	mov    rax,QWORD PTR [rdi+0x8]
  419552:	test   rax,rax
  419555:	je     41957c <xmlStrEqual@plt+0x1563c>
  419557:	mov    eax,DWORD PTR [rax+0x34]
  41955a:	ret    
  41955b:	nop    DWORD PTR [rax+rax*1+0x0]
  419560:	mov    eax,0xffffffff
  419565:	ret    
  419566:	nop    WORD PTR cs:[rax+rax*1+0x0]
  419570:	mov    rax,QWORD PTR [rdi]
  419573:	test   rax,rax
  419576:	je     41957c <xmlStrEqual@plt+0x1563c>
  419578:	mov    eax,DWORD PTR [rax+0x30]
  41957b:	ret    
  41957c:	mov    eax,0xfffffff7
  419581:	ret    
  419582:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  41958d:	nop    DWORD PTR [rax]
  419590:	endbr64 
  419594:	push   r14
  419596:	push   r13
  419598:	push   r12
  41959a:	mov    r12,rdi
  41959d:	lea    rdi,[rsi+0x20]
  4195a1:	push   rbp
  4195a2:	push   rbx
  4195a3:	mov    rbx,rsi
  4195a6:	call   425890 <xmlStrEqual@plt+0x21950>
  4195ab:	movzx  r13d,ax
  4195af:	mov    eax,DWORD PTR [rbx+0x18]
  4195b2:	mov    ebp,r13d
  4195b5:	test   eax,eax
  4195b7:	jne    41962a <xmlStrEqual@plt+0x156ea>
  4195b9:	cmp    r13w,0x2
  4195be:	je     419610 <xmlStrEqual@plt+0x156d0>
  4195c0:	cmp    r13w,0xa
  4195c5:	je     4196b0 <xmlStrEqual@plt+0x15770>
  4195cb:	mov    rax,0x469e3c
  4195d2:	cmp    DWORD PTR [rax],0x1
  4195d5:	jle    4195ee <xmlStrEqual@plt+0x156ae>
  4195d7:	movzx  edx,r13w
  4195db:	lea    rsi,[rip+0x333be]        # 44c9a0 <xmlStrEqual@plt+0x48a60>
  4195e2:	mov    edi,0x6
  4195e7:	xor    eax,eax
  4195e9:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  4195ee:	cmp    r13d,0x2
  4195f2:	jne    4196d0 <xmlStrEqual@plt+0x15790>
  4195f8:	nop    DWORD PTR [rax+rax*1+0x0]
  419600:	lea    rdx,[rip+0x2f2b9]        # 4488c0 <xmlStrEqual@plt+0x44980>
  419607:	jmp    4196d7 <xmlStrEqual@plt+0x15797>
  41960c:	nop    DWORD PTR [rax+0x0]
  419610:	mov    rax,QWORD PTR [r12]
  419614:	test   rax,rax
  419617:	je     419600 <xmlStrEqual@plt+0x156c0>
  419619:	mov    rsi,QWORD PTR [rax+0x10]
  41961d:	test   rsi,rsi
  419620:	je     419600 <xmlStrEqual@plt+0x156c0>
  419622:	mov    rdi,rbx
  419625:	call   424fd0 <xmlStrEqual@plt+0x21090>
  41962a:	mov    rdi,rbx
  41962d:	call   43f000 <xmlStrEqual@plt+0x3b0c0>
  419632:	test   rax,rax
  419635:	je     419658 <xmlStrEqual@plt+0x15718>
  419637:	mov    esi,r13d
  41963a:	mov    rdi,rax
  41963d:	call   43f820 <xmlStrEqual@plt+0x3b8e0>
  419642:	test   eax,eax
  419644:	js     419799 <xmlStrEqual@plt+0x15859>
  41964a:	pop    rbx
  41964b:	pop    rbp
  41964c:	pop    r12
  41964e:	pop    r13
  419650:	pop    r14
  419652:	ret    
  419653:	nop    DWORD PTR [rax+rax*1+0x0]
  419658:	mov    r14,0x469e3c
  41965f:	cmp    DWORD PTR [r14],0x1
  419663:	jg     4196f8 <xmlStrEqual@plt+0x157b8>
  419669:	cmp    bp,0x2
  41966d:	je     419778 <xmlStrEqual@plt+0x15838>
  419673:	cmp    bp,0xa
  419677:	jne    419742 <xmlStrEqual@plt+0x15802>
  41967d:	mov    rax,QWORD PTR [r12+0x8]
  419682:	test   rax,rax
  419685:	je     419750 <xmlStrEqual@plt+0x15810>
  41968b:	mov    rsi,QWORD PTR [rax+0x18]
  41968f:	test   rsi,rsi
  419692:	je     419750 <xmlStrEqual@plt+0x15810>
  419698:	mov    rdi,rbx
  41969b:	call   424fd0 <xmlStrEqual@plt+0x21090>
  4196a0:	mov    esi,r13d
  4196a3:	mov    rdi,r12
  4196a6:	call   419540 <xmlStrEqual@plt+0x15600>
  4196ab:	jmp    419642 <xmlStrEqual@plt+0x15702>
  4196ad:	nop    DWORD PTR [rax]
  4196b0:	mov    rax,QWORD PTR [r12+0x8]
  4196b5:	test   rax,rax
  4196b8:	je     4196d0 <xmlStrEqual@plt+0x15790>
  4196ba:	mov    rsi,QWORD PTR [rax+0x18]
  4196be:	test   rsi,rsi
  4196c1:	jne    419622 <xmlStrEqual@plt+0x156e2>
  4196c7:	nop    WORD PTR [rax+rax*1+0x0]
  4196d0:	lea    rdx,[rip+0x2f1ee]        # 4488c5 <xmlStrEqual@plt+0x44985>
  4196d7:	xor    eax,eax
  4196d9:	lea    rsi,[rip+0x33460]        # 44cb40 <xmlStrEqual@plt+0x48c00>
  4196e0:	mov    edi,0x2
  4196e5:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  4196ea:	mov    eax,0xfffffff7
  4196ef:	jmp    41964a <xmlStrEqual@plt+0x1570a>
  4196f4:	nop    DWORD PTR [rax+0x0]
  4196f8:	mov    rdi,rbx
  4196fb:	call   424d40 <xmlStrEqual@plt+0x20e00>
  419700:	mov    rdx,rax
  419703:	lea    rsi,[rip+0x33486]        # 44cb90 <xmlStrEqual@plt+0x48c50>
  41970a:	xor    eax,eax
  41970c:	mov    edi,0x6
  419711:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  419716:	cmp    bp,0x2
  41971a:	je     419778 <xmlStrEqual@plt+0x15838>
  41971c:	cmp    bp,0xa
  419720:	je     41967d <xmlStrEqual@plt+0x1573d>
  419726:	cmp    DWORD PTR [r14],0x1
  41972a:	jle    419742 <xmlStrEqual@plt+0x15802>
  41972c:	mov    edx,r13d
  41972f:	lea    rsi,[rip+0x3326a]        # 44c9a0 <xmlStrEqual@plt+0x48a60>
  419736:	mov    edi,0x6
  41973b:	xor    eax,eax
  41973d:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  419742:	cmp    r13d,0x2
  419746:	je     419790 <xmlStrEqual@plt+0x15850>
  419748:	nop    DWORD PTR [rax+rax*1+0x0]
  419750:	lea    rdx,[rip+0x2f16e]        # 4488c5 <xmlStrEqual@plt+0x44985>
  419757:	xor    eax,eax
  419759:	lea    rsi,[rip+0x33498]        # 44cbf8 <xmlStrEqual@plt+0x48cb8>
  419760:	mov    edi,0x2
  419765:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  41976a:	mov    eax,0xfffffff7
  41976f:	jmp    41964a <xmlStrEqual@plt+0x1570a>
  419774:	nop    DWORD PTR [rax+0x0]
  419778:	mov    rax,QWORD PTR [r12]
  41977c:	test   rax,rax
  41977f:	je     419790 <xmlStrEqual@plt+0x15850>
  419781:	mov    rsi,QWORD PTR [rax+0x10]
  419785:	test   rsi,rsi
  419788:	jne    419698 <xmlStrEqual@plt+0x15758>
  41978e:	xchg   ax,ax
  419790:	lea    rdx,[rip+0x2f129]        # 4488c0 <xmlStrEqual@plt+0x44980>
  419797:	jmp    419757 <xmlStrEqual@plt+0x15817>
  419799:	xor    eax,eax
  41979b:	lea    rsi,[rip+0x334ae]        # 44cc50 <xmlStrEqual@plt+0x48d10>
  4197a2:	mov    edi,0x2
  4197a7:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  4197ac:	mov    eax,0xfffffff7
  4197b1:	jmp    41964a <xmlStrEqual@plt+0x1570a>
  4197b6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4197c0:	endbr64 
  4197c4:	push   r14
  4197c6:	push   r13
  4197c8:	push   r12
  4197ca:	push   rbp
  4197cb:	push   rbx
  4197cc:	mov    rbx,rdx
  4197cf:	cmp    DWORD PTR [rdx+0x38],0x1
  4197d3:	je     4197f8 <xmlStrEqual@plt+0x158b8>
  4197d5:	mov    rax,0x469e3c
  4197dc:	cmp    DWORD PTR [rax],0x1
  4197df:	jg     4198b0 <xmlStrEqual@plt+0x15970>
  4197e5:	xor    ebp,ebp
  4197e7:	pop    rbx
  4197e8:	mov    eax,ebp
  4197ea:	pop    rbp
  4197eb:	pop    r12
  4197ed:	pop    r13
  4197ef:	pop    r14
  4197f1:	ret    
  4197f2:	nop    WORD PTR [rax+rax*1+0x0]
  4197f8:	cmp    DWORD PTR [rdx+0x18],0x1
  4197fc:	mov    r12,rdi
  4197ff:	mov    r13,rsi
  419802:	je     419837 <xmlStrEqual@plt+0x158f7>
  419804:	mov    rax,0x474da8
  41980b:	lea    r14,[rdx+0x20]
  41980f:	mov    rax,QWORD PTR [rax]
  419812:	mov    rdi,r14
  419815:	call   QWORD PTR [rax+0x20]
  419818:	mov    rbp,rax
  41981b:	test   rax,rax
  41981e:	je     41999b <xmlStrEqual@plt+0x15a5b>
  419824:	mov    rdi,rbx
  419827:	mov    rsi,rax
  41982a:	call   424fd0 <xmlStrEqual@plt+0x21090>
  41982f:	mov    rdi,rbp
  419832:	call   424bf0 <xmlStrEqual@plt+0x20cb0>
  419837:	mov    rax,QWORD PTR [r12+0x28]
  41983c:	mov    rsi,rbx
  41983f:	mov    rdi,QWORD PTR [rax+0x50]
  419843:	call   419590 <xmlStrEqual@plt+0x15650>
  419848:	mov    ebp,eax
  41984a:	cmp    eax,0xfffffff7
  41984d:	je     4197e5 <xmlStrEqual@plt+0x158a5>
  41984f:	mov    rdi,rbx
  419852:	lea    r12,[rbx+0x20]
  419856:	call   425cc0 <xmlStrEqual@plt+0x21d80>
  41985b:	mov    rdi,r12
  41985e:	mov    r14d,eax
  419861:	call   425cc0 <xmlStrEqual@plt+0x21d80>
  419866:	cmp    r14d,eax
  419869:	je     4198d8 <xmlStrEqual@plt+0x15998>
  41986b:	mov    rax,0x469e3c
  419872:	cmp    DWORD PTR [rax],0x1
  419875:	jle    4197e5 <xmlStrEqual@plt+0x158a5>
  41987b:	mov    rdi,r12
  41987e:	call   426440 <xmlStrEqual@plt+0x22500>
  419883:	mov    rdi,rbx
  419886:	mov    rbp,rax
  419889:	call   426440 <xmlStrEqual@plt+0x22500>
  41988e:	mov    rdx,rax
  419891:	mov    rcx,rbp
  419894:	lea    rsi,[rip+0x3347d]        # 44cd18 <xmlStrEqual@plt+0x48dd8>
  41989b:	mov    edi,0x6
  4198a0:	xor    eax,eax
  4198a2:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  4198a7:	xor    ebp,ebp
  4198a9:	jmp    4197e7 <xmlStrEqual@plt+0x158a7>
  4198ae:	xchg   ax,ax
  4198b0:	lea    rdi,[rdx+0x20]
  4198b4:	call   424d40 <xmlStrEqual@plt+0x20e00>
  4198b9:	mov    rdx,rax
  4198bc:	lea    rsi,[rip+0x333b5]        # 44cc78 <xmlStrEqual@plt+0x48d38>
  4198c3:	mov    edi,0x6
  4198c8:	xor    eax,eax
  4198ca:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  4198cf:	jmp    4197e5 <xmlStrEqual@plt+0x158a5>
  4198d4:	nop    DWORD PTR [rax+0x0]
  4198d8:	movzx  edx,WORD PTR [rbx+0x42]
  4198dc:	movzx  esi,WORD PTR [rbx+0x40]
  4198e0:	mov    r8,r12
  4198e3:	mov    rcx,rbx
  4198e6:	mov    rdi,r13
  4198e9:	call   436260 <xmlStrEqual@plt+0x32320>
  4198ee:	mov    edx,DWORD PTR [r13+0x14]
  4198f2:	mov    rsi,QWORD PTR [r13+0x38]
  4198f6:	mov    edi,ebp
  4198f8:	mov    rcx,r12
  4198fb:	call   439c00 <xmlStrEqual@plt+0x35cc0>
  419900:	mov    ebp,eax
  419902:	mov    rax,0x469e3c
  419909:	cmp    ebp,0x1
  41990c:	je     419950 <xmlStrEqual@plt+0x15a10>
  41990e:	mov    edx,DWORD PTR [rax]
  419910:	test   edx,edx
  419912:	jle    4197e5 <xmlStrEqual@plt+0x158a5>
  419918:	mov    rdi,r12
  41991b:	call   424d40 <xmlStrEqual@plt+0x20e00>
  419920:	mov    rdi,rbx
  419923:	mov    rbp,rax
  419926:	call   424d40 <xmlStrEqual@plt+0x20e00>
  41992b:	mov    rdx,rax
  41992e:	mov    rcx,rbp
  419931:	lea    rsi,[rip+0x33440]        # 44cd78 <xmlStrEqual@plt+0x48e38>
  419938:	mov    edi,0x5
  41993d:	xor    eax,eax
  41993f:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  419944:	xor    ebp,ebp
  419946:	jmp    4197e7 <xmlStrEqual@plt+0x158a7>
  41994b:	nop    DWORD PTR [rax+rax*1+0x0]
  419950:	mov    eax,DWORD PTR [rax]
  419952:	test   eax,eax
  419954:	jle    4197e7 <xmlStrEqual@plt+0x158a7>
  41995a:	mov    rdi,r12
  41995d:	movzx  r14d,WORD PTR [rbx+0x42]
  419962:	movzx  r13d,WORD PTR [rbx+0x40]
  419967:	call   424d40 <xmlStrEqual@plt+0x20e00>
  41996c:	mov    rdi,rbx
  41996f:	mov    r12,rax
  419972:	call   424d40 <xmlStrEqual@plt+0x20e00>
  419977:	mov    rdx,rax
  41997a:	mov    r9d,r14d
  41997d:	mov    r8d,r13d
  419980:	mov    rcx,r12
  419983:	lea    rsi,[rip+0x33426]        # 44cdb0 <xmlStrEqual@plt+0x48e70>
  41998a:	mov    edi,0x5
  41998f:	xor    eax,eax
  419991:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  419996:	jmp    4197e7 <xmlStrEqual@plt+0x158a7>
  41999b:	mov    rdi,r14
  41999e:	call   424d40 <xmlStrEqual@plt+0x20e00>
  4199a3:	mov    rdx,rax
  4199a6:	lea    rsi,[rip+0x3332b]        # 44ccd8 <xmlStrEqual@plt+0x48d98>
  4199ad:	mov    edi,0x2
  4199b2:	xor    eax,eax
  4199b4:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  4199b9:	mov    ebp,0xfffffff7
  4199be:	jmp    4197e7 <xmlStrEqual@plt+0x158a7>
  4199c3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4199cd:	nop    DWORD PTR [rax]
  4199d0:	endbr64 
  4199d4:	sub    rsp,0x8
  4199d8:	call   425890 <xmlStrEqual@plt+0x21950>
  4199dd:	cmp    ax,0x2
  4199e1:	setne  al
  4199e4:	movzx  eax,al
  4199e7:	inc    eax
  4199e9:	add    rsp,0x8
  4199ed:	ret    
  4199ee:	xchg   ax,ax
  4199f0:	endbr64 
  4199f4:	push   rbp
  4199f5:	mov    ebp,edx
  4199f7:	push   rbx
  4199f8:	mov    rbx,rdi
  4199fb:	lea    rdi,[rdi+0x4]
  4199ff:	sub    rsp,0x8
  419a03:	mov    QWORD PTR [rdi-0x4],0x0
  419a0b:	mov    BYTE PTR [rdi-0x4],0x8
  419a0f:	call   4375d0 <xmlStrEqual@plt+0x33690>
  419a14:	mov    BYTE PTR [rbx+0x3],bpl
  419a18:	or     BYTE PTR [rbx],0x4
  419a1b:	add    rsp,0x8
  419a1f:	pop    rbx
  419a20:	pop    rbp
  419a21:	ret    
  419a22:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  419a2d:	nop    DWORD PTR [rax]
  419a30:	endbr64 
  419a34:	push   r12
  419a36:	mov    r12d,edx
  419a39:	push   rbp
  419a3a:	mov    ebp,esi
  419a3c:	mov    esi,0x8
  419a41:	push   rbx
  419a42:	call   430930 <xmlStrEqual@plt+0x2c9f0>
  419a47:	mov    rbx,rax
  419a4a:	mov    edx,r12d
  419a4d:	mov    esi,ebp
  419a4f:	mov    rdi,rax
  419a52:	call   4199f0 <xmlStrEqual@plt+0x15ab0>
  419a57:	mov    rax,rbx
  419a5a:	pop    rbx
  419a5b:	pop    rbp
  419a5c:	pop    r12
  419a5e:	ret    
  419a5f:	nop
  419a60:	endbr64 
  419a64:	push   r15
  419a66:	mov    r15,r8
  419a69:	push   r14
  419a6b:	mov    r14,rcx
  419a6e:	push   r13
  419a70:	mov    r13d,edx
  419a73:	push   r12
  419a75:	mov    r12d,esi
  419a78:	push   rbp
  419a79:	push   rbx
  419a7a:	mov    rbx,rdi
  419a7d:	sub    rsp,0x28
  419a81:	mov    DWORD PTR [rsp+0xc],r9d
  419a86:	mov    rbp,QWORD PTR [rsp+0x60]
  419a8b:	mov    rdi,QWORD PTR [rdi+0x38]
  419a8f:	lea    rdx,[rsp+0x14]
  419a94:	lea    rsi,[rsp+0x10]
  419a99:	mov    rax,QWORD PTR fs:0x28
  419aa2:	mov    QWORD PTR [rsp+0x18],rax
  419aa7:	xor    eax,eax
  419aa9:	mov    DWORD PTR [rsp+0x10],0x0
  419ab1:	mov    DWORD PTR [rsp+0x14],0x0
  419ab9:	call   437140 <xmlStrEqual@plt+0x33200>
  419abe:	mov    rdi,rbp
  419ac1:	call   425890 <xmlStrEqual@plt+0x21950>
  419ac6:	cmp    ax,0x2
  419aca:	mov    r9d,DWORD PTR [rsp+0xc]
  419acf:	je     419b60 <xmlStrEqual@plt+0x15c20>
  419ad5:	cmp    ax,0xa
  419ad9:	je     419b18 <xmlStrEqual@plt+0x15bd8>
  419adb:	mov    rax,0x469e3c
  419ae2:	xor    ebx,ebx
  419ae4:	mov    eax,DWORD PTR [rax]
  419ae6:	test   eax,eax
  419ae8:	jg     419b70 <xmlStrEqual@plt+0x15c30>
  419aee:	mov    rcx,QWORD PTR [rsp+0x18]
  419af3:	xor    rcx,QWORD PTR fs:0x28
  419afc:	mov    rax,rbx
  419aff:	jne    419b94 <xmlStrEqual@plt+0x15c54>
  419b05:	add    rsp,0x28
  419b09:	pop    rbx
  419b0a:	pop    rbp
  419b0b:	pop    r12
  419b0d:	pop    r13
  419b0f:	pop    r14
  419b11:	pop    r15
  419b13:	ret    
  419b14:	nop    DWORD PTR [rax+0x0]
  419b18:	mov    edx,0x2
  419b1d:	mov    esi,r9d
  419b20:	mov    rdi,rbx
  419b23:	call   419a30 <xmlStrEqual@plt+0x15af0>
  419b28:	movzx  edx,r13w
  419b2c:	movzx  esi,r12w
  419b30:	mov    rdi,rbx
  419b33:	mov    r8,r15
  419b36:	mov    rcx,r14
  419b39:	call   436260 <xmlStrEqual@plt+0x32320>
  419b3e:	movzx  edi,WORD PTR [rbx+0x1a]
  419b42:	mov    edx,DWORD PTR [rsp+0x14]
  419b46:	mov    esi,DWORD PTR [rsp+0x10]
  419b4a:	cmp    di,0xffff
  419b4e:	je     419b90 <xmlStrEqual@plt+0x15c50>
  419b50:	add    rdi,QWORD PTR [rbx+0x30]
  419b54:	call   4370c0 <xmlStrEqual@plt+0x33180>
  419b59:	mov    rbx,QWORD PTR [rbx+0x38]
  419b5d:	jmp    419aee <xmlStrEqual@plt+0x15bae>
  419b5f:	nop
  419b60:	mov    edx,0x1
  419b65:	jmp    419b1d <xmlStrEqual@plt+0x15bdd>
  419b67:	nop    WORD PTR [rax+rax*1+0x0]
  419b70:	lea    rsi,[rip+0x33269]        # 44cde0 <xmlStrEqual@plt+0x48ea0>
  419b77:	mov    edi,0x5
  419b7c:	xor    eax,eax
  419b7e:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  419b83:	jmp    419aee <xmlStrEqual@plt+0x15bae>
  419b88:	nop    DWORD PTR [rax+rax*1+0x0]
  419b90:	xor    edi,edi
  419b92:	jmp    419b54 <xmlStrEqual@plt+0x15c14>
  419b94:	call   403c00 <__stack_chk_fail@plt>
  419b99:	nop    DWORD PTR [rax+0x0]
  419ba0:	endbr64 
  419ba4:	mov    edx,DWORD PTR [rdi+0x14]
  419ba7:	cmp    edx,0x7
  419baa:	jbe    419bc0 <xmlStrEqual@plt+0x15c80>
  419bac:	mov    rax,QWORD PTR [rdi+0x38]
  419bb0:	sub    edx,0x8
  419bb3:	lea    rcx,[rax+0x8]
  419bb7:	mov    QWORD PTR [rdi+0x38],rcx
  419bbb:	mov    DWORD PTR [rdi+0x14],edx
  419bbe:	ret    
  419bbf:	nop
  419bc0:	xor    eax,eax
  419bc2:	ret    
  419bc3:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  419bce:	xchg   ax,ax
  419bd0:	endbr64 
  419bd4:	add    rdi,0x4
  419bd8:	jmp    4375f0 <xmlStrEqual@plt+0x336b0>
  419bdd:	nop    DWORD PTR [rax]
  419be0:	endbr64 
  419be4:	mov    rax,0x46d558
  419beb:	mov    rdx,0x4697e0
  419bf2:	mov    QWORD PTR [rax],rdx
  419bf5:	ret    
  419bf6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  419c00:	endbr64 
  419c04:	push   rbx
  419c05:	mov    esi,0x28
  419c0a:	mov    rbx,rdi
  419c0d:	mov    edi,0x1
  419c12:	call   403a80 <calloc@plt>
  419c17:	mov    QWORD PTR [rbx],rax
  419c1a:	lea    rax,[rbx+0x8]
  419c1e:	mov    QWORD PTR [rbx+0x8],rax
  419c22:	mov    QWORD PTR [rbx+0x10],rax
  419c26:	pop    rbx
  419c27:	ret    
  419c28:	nop    DWORD PTR [rax+rax*1+0x0]
  419c30:	endbr64 
  419c34:	push   r12
  419c36:	push   rbp
  419c37:	push   rbx
  419c38:	mov    r12,QWORD PTR [rdi]
  419c3b:	mov    eax,DWORD PTR [r12]
  419c3f:	test   eax,eax
  419c41:	je     419c92 <xmlStrEqual@plt+0x15d52>
  419c43:	mov    rbp,rdi
  419c46:	xor    ebx,ebx
  419c48:	jmp    419c58 <xmlStrEqual@plt+0x15d18>
  419c4a:	nop    WORD PTR [rax+rax*1+0x0]
  419c50:	inc    ebx
  419c52:	cmp    DWORD PTR [r12],ebx
  419c56:	je     419c92 <xmlStrEqual@plt+0x15d52>
  419c58:	mov    ecx,ebx
  419c5a:	mov    rsi,QWORD PTR [r12+0x10]
  419c5f:	lea    eax,[rbx+rbx*1]
  419c62:	and    eax,0x1e
  419c65:	shr    ecx,0x4
  419c68:	mov    edx,eax
  419c6a:	mov    eax,DWORD PTR [rsi+rcx*4]
  419c6d:	shrx   eax,eax,edx
  419c72:	test   al,0x3
  419c74:	jne    419c50 <xmlStrEqual@plt+0x15d10>
  419c76:	mov    rdx,QWORD PTR [r12+0x20]
  419c7b:	mov    eax,ebx
  419c7d:	mov    rdi,QWORD PTR [rdx+rax*8]
  419c81:	inc    ebx
  419c83:	call   422000 <xmlStrEqual@plt+0x1e0c0>
  419c88:	mov    r12,QWORD PTR [rbp+0x0]
  419c8c:	cmp    DWORD PTR [r12],ebx
  419c90:	jne    419c58 <xmlStrEqual@plt+0x15d18>
  419c92:	mov    rdi,QWORD PTR [r12+0x18]
  419c97:	call   4037b0 <free@plt>
  419c9c:	mov    rdi,QWORD PTR [r12+0x10]
  419ca1:	call   4037b0 <free@plt>
  419ca6:	mov    rdi,QWORD PTR [r12+0x20]
  419cab:	call   4037b0 <free@plt>
  419cb0:	pop    rbx
  419cb1:	pop    rbp
  419cb2:	mov    rdi,r12
  419cb5:	pop    r12
  419cb7:	jmp    4037b0 <free@plt>
  419cbc:	nop    DWORD PTR [rax+0x0]
  419cc0:	endbr64 
  419cc4:	push   rbx
  419cc5:	mov    edi,0x18
  419cca:	call   434fe0 <xmlStrEqual@plt+0x310a0>
  419ccf:	mov    rbx,rax
  419cd2:	mov    rdi,rax
  419cd5:	call   419c00 <xmlStrEqual@plt+0x15cc0>
  419cda:	mov    rax,rbx
  419cdd:	pop    rbx
  419cde:	ret    
  419cdf:	nop
  419ce0:	endbr64 
  419ce4:	push   rbx
  419ce5:	mov    rbx,rdi
  419ce8:	call   419c30 <xmlStrEqual@plt+0x15cf0>
  419ced:	mov    rdi,rbx
  419cf0:	pop    rbx
  419cf1:	jmp    4037b0 <free@plt>
  419cf6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  419d00:	endbr64 
  419d04:	push   r15
  419d06:	push   r14
  419d08:	push   r13
  419d0a:	push   r12
  419d0c:	push   rbp
  419d0d:	push   rbx
  419d0e:	sub    rsp,0x38
  419d12:	mov    rbx,QWORD PTR [rdi]
  419d15:	mov    QWORD PTR [rsp+0x10],rdi
  419d1a:	mov    eax,DWORD PTR [rbx+0x4]
  419d1d:	mov    QWORD PTR [rsp+0x18],rdx
  419d22:	cmp    eax,0x270f
  419d27:	jbe    419d50 <xmlStrEqual@plt+0x15e10>
  419d29:	mov    rax,0x469e3c
  419d30:	xor    ebx,ebx
  419d32:	mov    edx,DWORD PTR [rax]
  419d34:	test   edx,edx
  419d36:	jg     419f28 <xmlStrEqual@plt+0x15fe8>
  419d3c:	add    rsp,0x38
  419d40:	mov    eax,ebx
  419d42:	pop    rbx
  419d43:	pop    rbp
  419d44:	pop    r12
  419d46:	pop    r13
  419d48:	pop    r14
  419d4a:	pop    r15
  419d4c:	ret    
  419d4d:	nop    DWORD PTR [rax]
  419d50:	mov    ecx,DWORD PTR [rbx]
  419d52:	mov    edi,DWORD PTR [rbx+0xc]
  419d55:	mov    r12,rsi
  419d58:	mov    DWORD PTR [rsp+0xc],ecx
  419d5c:	lea    ebp,[rcx-0x1]
  419d5f:	cmp    DWORD PTR [rbx+0x8],edi
  419d62:	jb     419db0 <xmlStrEqual@plt+0x15e70>
  419d64:	mov    edi,DWORD PTR [rsp+0xc]
  419d68:	lea    edx,[rax+rax*1]
  419d6b:	cmp    edx,edi
  419d6d:	jae    419f40 <xmlStrEqual@plt+0x16000>
  419d73:	lea    ebp,[rdi-0x2]
  419d76:	mov    edx,ebp
  419d78:	shr    edx,1
  419d7a:	or     ebp,edx
  419d7c:	mov    edx,ebp
  419d7e:	shr    edx,0x2
  419d81:	or     ebp,edx
  419d83:	mov    edx,ebp
  419d85:	shr    edx,0x4
  419d88:	or     ebp,edx
  419d8a:	mov    edx,ebp
  419d8c:	shr    edx,0x8
  419d8f:	or     ebp,edx
  419d91:	mov    edx,ebp
  419d93:	shr    edx,0x10
  419d96:	or     ebp,edx
  419d98:	lea    ecx,[rbp+0x1]
  419d9b:	cmp    ecx,0x3
  419d9e:	ja     41a210 <xmlStrEqual@plt+0x162d0>
  419da4:	cmp    eax,0x2
  419da7:	jbe    41a3a0 <xmlStrEqual@plt+0x16460>
  419dad:	lea    ebp,[rdi-0x1]
  419db0:	mov    rdi,r12
  419db3:	call   436930 <xmlStrEqual@plt+0x329f0>
  419db8:	mov    r9d,eax
  419dbb:	and    r9d,ebp
  419dbe:	mov    ecx,r9d
  419dc1:	shr    ecx,0x4
  419dc4:	mov    rdx,QWORD PTR [rbx+0x10]
  419dc8:	shl    rcx,0x2
  419dcc:	lea    r10,[rdx+rcx*1]
  419dd0:	mov    edi,DWORD PTR [r10]
  419dd3:	lea    r14d,[r9+r9*1]
  419dd7:	and    r14d,0x1e
  419ddb:	shrx   esi,edi,r14d
  419de0:	test   sil,0x2
  419de4:	jne    419eb0 <xmlStrEqual@plt+0x15f70>
  419dea:	mov    r13d,eax
  419ded:	shr    r13d,0x3
  419df1:	shl    eax,0x3
  419df4:	xor    r13d,eax
  419df7:	or     r13d,0x1
  419dfb:	and    r13d,ebp
  419dfe:	mov    DWORD PTR [rsp+0x20],r13d
  419e03:	mov    r13d,DWORD PTR [rsp+0xc]
  419e08:	mov    DWORD PTR [rsp+0x2c],ebp
  419e0c:	mov    r15d,r9d
  419e0f:	mov    ebp,r13d
  419e12:	mov    DWORD PTR [rsp+0x28],r9d
  419e17:	mov    r13d,r14d
  419e1a:	mov    r14,rbx
  419e1d:	mov    rbx,rcx
  419e20:	jmp    419e6b <xmlStrEqual@plt+0x15f2b>
  419e22:	nop    WORD PTR [rax+rax*1+0x0]
  419e28:	mov    rax,rdx
  419e2b:	mov    ebp,r15d
  419e2e:	add    r15d,DWORD PTR [rsp+0x20]
  419e33:	and    r15d,DWORD PTR [rsp+0x2c]
  419e38:	cmp    DWORD PTR [rsp+0x28],r15d
  419e3d:	je     41a010 <xmlStrEqual@plt+0x160d0>
  419e43:	mov    esi,r15d
  419e46:	shr    esi,0x4
  419e49:	lea    rbx,[rsi*4+0x0]
  419e51:	lea    r13d,[r15+r15*1]
  419e55:	mov    esi,DWORD PTR [rdx+rsi*4]
  419e58:	and    r13d,0x1e
  419e5c:	shrx   esi,esi,r13d
  419e61:	test   sil,0x2
  419e65:	jne    419f98 <xmlStrEqual@plt+0x16058>
  419e6b:	and    esi,0x1
  419e6e:	jne    419e28 <xmlStrEqual@plt+0x15ee8>
  419e70:	mov    rdx,QWORD PTR [r14+0x18]
  419e74:	mov    eax,r15d
  419e77:	mov    rdi,QWORD PTR [rdx+rax*8]
  419e7b:	mov    rsi,r12
  419e7e:	call   436ab0 <xmlStrEqual@plt+0x32b70>
  419e83:	test   eax,eax
  419e85:	jne    41a448 <xmlStrEqual@plt+0x16508>
  419e8b:	mov    rdx,QWORD PTR [r14+0x10]
  419e8f:	mov    ecx,DWORD PTR [rdx+rbx*1]
  419e92:	mov    rax,rdx
  419e95:	shrx   r13d,ecx,r13d
  419e9a:	and    r13d,0x1
  419e9e:	cmovne ebp,r15d
  419ea2:	jmp    419e2e <xmlStrEqual@plt+0x15eee>
  419ea4:	mov    r9d,r13d
  419ea7:	nop    WORD PTR [rax+rax*1+0x0]
  419eb0:	mov    rax,QWORD PTR [rbx+0x18]
  419eb4:	lea    rdx,[r9*8+0x0]
  419ebc:	mov    QWORD PTR [rax+r9*8],r12
  419ec0:	mov    eax,0x3
  419ec5:	shlx   r14,rax,r14
  419eca:	andn   edi,r14d,edi
  419ecf:	mov    DWORD PTR [r10],edi
  419ed2:	inc    DWORD PTR [rbx+0x4]
  419ed5:	inc    DWORD PTR [rbx+0x8]
  419ed8:	mov    rax,QWORD PTR [rsp+0x10]
  419edd:	mov    rbx,QWORD PTR [rsp+0x18]
  419ee2:	mov    rax,QWORD PTR [rax]
  419ee5:	mov    rax,QWORD PTR [rax+0x20]
  419ee9:	mov    QWORD PTR [rax+rdx*1],rbx
  419eed:	mov    rax,0x469e3c
  419ef4:	mov    ebx,0x1
  419ef9:	cmp    DWORD PTR [rax],0x2
  419efc:	jle    419d3c <xmlStrEqual@plt+0x15dfc>
  419f02:	mov    rdi,r12
  419f05:	call   436b90 <xmlStrEqual@plt+0x32c50>
  419f0a:	mov    rdx,rax
  419f0d:	lea    rsi,[rip+0x32f3c]        # 44ce50 <xmlStrEqual@plt+0x48f10>
  419f14:	mov    edi,0x7
  419f19:	xor    eax,eax
  419f1b:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  419f20:	jmp    419d3c <xmlStrEqual@plt+0x15dfc>
  419f25:	nop    DWORD PTR [rax]
  419f28:	lea    rsi,[rip+0x32ee9]        # 44ce18 <xmlStrEqual@plt+0x48ed8>
  419f2f:	mov    edi,0x5
  419f34:	xor    eax,eax
  419f36:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  419f3b:	jmp    419d3c <xmlStrEqual@plt+0x15dfc>
  419f40:	mov    edi,DWORD PTR [rsp+0xc]
  419f44:	mov    ebp,edi
  419f46:	shr    ebp,1
  419f48:	or     ebp,edi
  419f4a:	mov    edx,ebp
  419f4c:	shr    edx,0x2
  419f4f:	or     ebp,edx
  419f51:	mov    edx,ebp
  419f53:	shr    edx,0x4
  419f56:	or     ebp,edx
  419f58:	mov    edx,ebp
  419f5a:	shr    edx,0x8
  419f5d:	or     ebp,edx
  419f5f:	lea    ecx,[rbp+0x1]
  419f62:	cmp    ecx,0x3
  419f65:	ja     41a080 <xmlStrEqual@plt+0x16140>
  419f6b:	cmp    eax,0x2
  419f6e:	ja     419dad <xmlStrEqual@plt+0x15e6d>
  419f74:	mov    ebp,0x3
  419f79:	mov    DWORD PTR [rsp+0x28],0x3
  419f81:	mov    DWORD PTR [rsp+0xc],0x4
  419f89:	mov    r13d,0x4
  419f8f:	jmp    41a0c2 <xmlStrEqual@plt+0x16182>
  419f94:	nop    DWORD PTR [rax+0x0]
  419f98:	mov    rbx,r14
  419f9b:	mov    r13d,ebp
  419f9e:	mov    ecx,DWORD PTR [rsp+0xc]
  419fa2:	cmp    DWORD PTR [rbx],ecx
  419fa4:	je     41a048 <xmlStrEqual@plt+0x16108>
  419faa:	mov    r13d,ecx
  419fad:	mov    edx,r13d
  419fb0:	shr    edx,0x4
  419fb3:	lea    r10,[rax+rdx*4]
  419fb7:	mov    edi,DWORD PTR [r10]
  419fba:	lea    r14d,[r13+r13*1+0x0]
  419fbf:	and    r14d,0x1e
  419fc3:	shrx   ecx,edi,r14d
  419fc8:	mov    esi,ecx
  419fca:	and    esi,0x2
  419fcd:	mov    eax,r13d
  419fd0:	lea    rdx,[rax*8+0x0]
  419fd8:	test   esi,esi
  419fda:	jne    419ea4 <xmlStrEqual@plt+0x15f64>
  419fe0:	and    ecx,0x1
  419fe3:	je     419ed8 <xmlStrEqual@plt+0x15f98>
  419fe9:	mov    rcx,QWORD PTR [rbx+0x18]
  419fed:	mov    QWORD PTR [rcx+rax*8],r12
  419ff1:	mov    eax,0x3
  419ff6:	shlx   r14,rax,r14
  419ffb:	andn   edi,r14d,edi
  41a000:	mov    DWORD PTR [r10],edi
  41a003:	inc    DWORD PTR [rbx+0x4]
  41a006:	jmp    419ed8 <xmlStrEqual@plt+0x15f98>
  41a00b:	nop    DWORD PTR [rax+rax*1+0x0]
  41a010:	mov    rbx,r14
  41a013:	mov    r9d,DWORD PTR [rsp+0x28]
  41a018:	mov    r13d,ebp
  41a01b:	cmp    ebp,DWORD PTR [r14]
  41a01e:	jne    419fad <xmlStrEqual@plt+0x1606d>
  41a020:	mov    eax,r9d
  41a023:	shr    eax,0x4
  41a026:	lea    r10,[rdx+rax*4]
  41a02a:	mov    edi,DWORD PTR [r10]
  41a02d:	lea    r14d,[r9+r9*1]
  41a031:	and    r14d,0x1e
  41a035:	shrx   ecx,edi,r14d
  41a03a:	mov    esi,ecx
  41a03c:	and    esi,0x2
  41a03f:	mov    r13d,r9d
  41a042:	jmp    419fcd <xmlStrEqual@plt+0x1608d>
  41a044:	nop    DWORD PTR [rax+0x0]
  41a048:	mov    edx,r15d
  41a04b:	shr    edx,0x4
  41a04e:	lea    r10,[rax+rdx*4]
  41a052:	mov    edi,DWORD PTR [r10]
  41a055:	lea    r14d,[r15+r15*1]
  41a059:	and    r14d,0x1e
  41a05d:	shrx   ecx,edi,r14d
  41a062:	mov    esi,ecx
  41a064:	and    esi,0x2
  41a067:	cmp    r13d,DWORD PTR [rsp+0xc]
  41a06c:	je     41a076 <xmlStrEqual@plt+0x16136>
  41a06e:	test   esi,esi
  41a070:	jne    419fad <xmlStrEqual@plt+0x1606d>
  41a076:	mov    r13d,r15d
  41a079:	jmp    419fcd <xmlStrEqual@plt+0x1608d>
  41a07e:	xchg   ax,ax
  41a080:	vxorpd xmm0,xmm0,xmm0
  41a084:	vcvtsi2sd xmm0,xmm0,ecx
  41a088:	vmovsd xmm2,QWORD PTR [rip+0x32e48]        # 44ced8 <xmlStrEqual@plt+0x48f98>
  41a090:	vfmadd132sd xmm0,xmm2,QWORD PTR [rip+0x32e37]        # 44ced0 <xmlStrEqual@plt+0x48f90>
  41a099:	vcvttsd2si rdx,xmm0
  41a09e:	mov    DWORD PTR [rsp+0x28],edx
  41a0a2:	cmp    eax,edx
  41a0a4:	jae    41a239 <xmlStrEqual@plt+0x162f9>
  41a0aa:	cmp    ecx,0xf
  41a0ad:	jbe    41a4ce <xmlStrEqual@plt+0x1658e>
  41a0b3:	mov    r13d,ecx
  41a0b6:	mov    DWORD PTR [rsp+0xc],ecx
  41a0ba:	shr    r13d,0x4
  41a0be:	shl    r13,0x2
  41a0c2:	mov    rdi,r13
  41a0c5:	call   403cd0 <malloc@plt>
  41a0ca:	mov    rdi,rax
  41a0cd:	mov    rdx,r13
  41a0d0:	mov    esi,0xaa
  41a0d5:	mov    r15,rax
  41a0d8:	call   4039f0 <memset@plt>
  41a0dd:	mov    r10d,DWORD PTR [rbx]
  41a0e0:	cmp    DWORD PTR [rsp+0xc],r10d
  41a0e5:	ja     41a460 <xmlStrEqual@plt+0x16520>
  41a0eb:	xor    r13d,r13d
  41a0ee:	test   r10d,r10d
  41a0f1:	je     41a41e <xmlStrEqual@plt+0x164de>
  41a0f7:	mov    QWORD PTR [rsp+0x20],r12
  41a0fc:	mov    r12,r15
  41a0ff:	mov    r15d,r13d
  41a102:	mov    r13d,ebp
  41a105:	jmp    41a11c <xmlStrEqual@plt+0x161dc>
  41a107:	nop    WORD PTR [rax+rax*1+0x0]
  41a110:	inc    r15d
  41a113:	cmp    r15d,r10d
  41a116:	je     41a3e0 <xmlStrEqual@plt+0x164a0>
  41a11c:	mov    rdx,QWORD PTR [rbx+0x10]
  41a120:	mov    eax,r15d
  41a123:	shr    eax,0x4
  41a126:	lea    rsi,[rdx+rax*4]
  41a12a:	mov    ecx,DWORD PTR [rsi]
  41a12c:	lea    eax,[r15+r15*1]
  41a130:	and    eax,0x1e
  41a133:	shrx   edx,ecx,eax
  41a138:	and    edx,0x3
  41a13b:	jne    41a110 <xmlStrEqual@plt+0x161d0>
  41a13d:	mov    rdi,QWORD PTR [rbx+0x18]
  41a141:	mov    edx,r15d
  41a144:	mov    rbp,QWORD PTR [rdi+rdx*8]
  41a148:	mov    rdi,QWORD PTR [rbx+0x20]
  41a14c:	bts    ecx,eax
  41a14f:	mov    r14,QWORD PTR [rdi+rdx*8]
  41a153:	mov    DWORD PTR [rsi],ecx
  41a155:	nop    DWORD PTR [rax]
  41a158:	mov    rdi,rbp
  41a15b:	call   436930 <xmlStrEqual@plt+0x329f0>
  41a160:	mov    edx,eax
  41a162:	mov    r8d,eax
  41a165:	shr    edx,0x3
  41a168:	shl    eax,0x3
  41a16b:	xor    edx,eax
  41a16d:	or     edx,0x1
  41a170:	mov    eax,edx
  41a172:	and    r8d,r13d
  41a175:	and    eax,r13d
  41a178:	jmp    41a186 <xmlStrEqual@plt+0x16246>
  41a17a:	nop    WORD PTR [rax+rax*1+0x0]
  41a180:	add    r8d,eax
  41a183:	and    r8d,r13d
  41a186:	mov    edx,r8d
  41a189:	shr    edx,0x4
  41a18c:	shl    rdx,0x2
  41a190:	lea    rsi,[r12+rdx*1]
  41a194:	mov    edi,DWORD PTR [rsi]
  41a196:	lea    ecx,[r8+r8*1]
  41a19a:	and    ecx,0x1e
  41a19d:	shrx   r9d,edi,ecx
  41a1a2:	and    r9d,0x2
  41a1a6:	je     41a180 <xmlStrEqual@plt+0x16240>
  41a1a8:	mov    eax,0x2
  41a1ad:	shlx   rax,rax,rcx
  41a1b2:	andn   edi,eax,edi
  41a1b7:	mov    DWORD PTR [rsi],edi
  41a1b9:	mov    esi,r8d
  41a1bc:	mov    rdi,QWORD PTR [rbx+0x18]
  41a1c0:	mov    r10d,DWORD PTR [rbx]
  41a1c3:	shl    rsi,0x3
  41a1c7:	add    rdi,rsi
  41a1ca:	add    rsi,QWORD PTR [rbx+0x20]
  41a1ce:	cmp    r10d,r8d
  41a1d1:	jbe    41a3d0 <xmlStrEqual@plt+0x16490>
  41a1d7:	add    rdx,QWORD PTR [rbx+0x10]
  41a1db:	mov    eax,DWORD PTR [rdx]
  41a1dd:	shrx   r8d,eax,ecx
  41a1e2:	and    r8d,0x3
  41a1e6:	jne    41a3d0 <xmlStrEqual@plt+0x16490>
  41a1ec:	mov    r8,QWORD PTR [rdi]
  41a1ef:	mov    QWORD PTR [rdi],rbp
  41a1f2:	mov    rdi,QWORD PTR [rsi]
  41a1f5:	bts    eax,ecx
  41a1f8:	mov    QWORD PTR [rsi],r14
  41a1fb:	mov    rbp,r8
  41a1fe:	mov    DWORD PTR [rdx],eax
  41a200:	mov    r14,rdi
  41a203:	jmp    41a158 <xmlStrEqual@plt+0x16218>
  41a208:	nop    DWORD PTR [rax+rax*1+0x0]
  41a210:	mov    edx,ecx
  41a212:	vxorpd xmm0,xmm0,xmm0
  41a216:	vcvtsi2sd xmm0,xmm0,rdx
  41a21b:	vmovsd xmm1,QWORD PTR [rip+0x32cb5]        # 44ced8 <xmlStrEqual@plt+0x48f98>
  41a223:	vfmadd132sd xmm0,xmm1,QWORD PTR [rip+0x32ca4]        # 44ced0 <xmlStrEqual@plt+0x48f90>
  41a22c:	vcvttsd2si rdx,xmm0
  41a231:	mov    DWORD PTR [rsp+0x28],edx
  41a235:	cmp    eax,edx
  41a237:	jb     41a248 <xmlStrEqual@plt+0x16308>
  41a239:	mov    eax,DWORD PTR [rsp+0xc]
  41a23d:	lea    ebp,[rax-0x1]
  41a240:	jmp    419db0 <xmlStrEqual@plt+0x15e70>
  41a245:	nop    DWORD PTR [rax]
  41a248:	cmp    ecx,0xf
  41a24b:	jbe    41a4dd <xmlStrEqual@plt+0x1659d>
  41a251:	mov    r13d,ecx
  41a254:	mov    DWORD PTR [rsp+0xc],ecx
  41a258:	shr    r13d,0x4
  41a25c:	shl    r13,0x2
  41a260:	mov    rdi,r13
  41a263:	call   403cd0 <malloc@plt>
  41a268:	mov    rdi,rax
  41a26b:	mov    rdx,r13
  41a26e:	mov    esi,0xaa
  41a273:	mov    r15,rax
  41a276:	call   4039f0 <memset@plt>
  41a27b:	mov    eax,DWORD PTR [rsp+0xc]
  41a27f:	cmp    DWORD PTR [rbx],eax
  41a281:	jb     41a498 <xmlStrEqual@plt+0x16558>
  41a287:	xor    r13d,r13d
  41a28a:	mov    QWORD PTR [rsp+0x20],r12
  41a28f:	mov    r12,r15
  41a292:	mov    r15d,r13d
  41a295:	mov    r13d,ebp
  41a298:	jmp    41a2af <xmlStrEqual@plt+0x1636f>
  41a29a:	nop    WORD PTR [rax+rax*1+0x0]
  41a2a0:	mov    r10d,DWORD PTR [rbx]
  41a2a3:	inc    r15d
  41a2a6:	cmp    r15d,r10d
  41a2a9:	je     41a3e0 <xmlStrEqual@plt+0x164a0>
  41a2af:	mov    rdx,QWORD PTR [rbx+0x10]
  41a2b3:	mov    eax,r15d
  41a2b6:	shr    eax,0x4
  41a2b9:	lea    rcx,[rdx+rax*4]
  41a2bd:	mov    edx,DWORD PTR [rcx]
  41a2bf:	lea    eax,[r15+r15*1]
  41a2c3:	and    eax,0x1e
  41a2c6:	shrx   esi,edx,eax
  41a2cb:	and    esi,0x3
  41a2ce:	jne    41a2a0 <xmlStrEqual@plt+0x16360>
  41a2d0:	mov    rdi,QWORD PTR [rbx+0x18]
  41a2d4:	mov    esi,r15d
  41a2d7:	mov    rbp,QWORD PTR [rdi+rsi*8]
  41a2db:	mov    rdi,QWORD PTR [rbx+0x20]
  41a2df:	bts    edx,eax
  41a2e2:	mov    r14,QWORD PTR [rdi+rsi*8]
  41a2e6:	mov    DWORD PTR [rcx],edx
  41a2e8:	nop    DWORD PTR [rax+rax*1+0x0]
  41a2f0:	mov    rdi,rbp
  41a2f3:	call   436930 <xmlStrEqual@plt+0x329f0>
  41a2f8:	mov    edx,eax
  41a2fa:	mov    r8d,eax
  41a2fd:	shr    edx,0x3
  41a300:	shl    eax,0x3
  41a303:	xor    edx,eax
  41a305:	or     edx,0x1
  41a308:	mov    eax,edx
  41a30a:	and    r8d,r13d
  41a30d:	and    eax,r13d
  41a310:	jmp    41a31e <xmlStrEqual@plt+0x163de>
  41a312:	nop    WORD PTR [rax+rax*1+0x0]
  41a318:	add    r8d,eax
  41a31b:	and    r8d,r13d
  41a31e:	mov    edx,r8d
  41a321:	shr    edx,0x4
  41a324:	shl    rdx,0x2
  41a328:	lea    rsi,[r12+rdx*1]
  41a32c:	mov    edi,DWORD PTR [rsi]
  41a32e:	lea    ecx,[r8+r8*1]
  41a332:	and    ecx,0x1e
  41a335:	shrx   r9d,edi,ecx
  41a33a:	and    r9d,0x2
  41a33e:	je     41a318 <xmlStrEqual@plt+0x163d8>
  41a340:	mov    eax,0x2
  41a345:	shlx   rax,rax,rcx
  41a34a:	andn   edi,eax,edi
  41a34f:	mov    DWORD PTR [rsi],edi
  41a351:	mov    esi,r8d
  41a354:	mov    rdi,QWORD PTR [rbx+0x18]
  41a358:	mov    r10d,DWORD PTR [rbx]
  41a35b:	shl    rsi,0x3
  41a35f:	add    rdi,rsi
  41a362:	add    rsi,QWORD PTR [rbx+0x20]
  41a366:	cmp    r10d,r8d
  41a369:	jbe    41a3c0 <xmlStrEqual@plt+0x16480>
  41a36b:	add    rdx,QWORD PTR [rbx+0x10]
  41a36f:	mov    eax,DWORD PTR [rdx]
  41a371:	shrx   r8d,eax,ecx
  41a376:	and    r8d,0x3
  41a37a:	jne    41a3c0 <xmlStrEqual@plt+0x16480>
  41a37c:	mov    r8,QWORD PTR [rdi]
  41a37f:	mov    QWORD PTR [rdi],rbp
  41a382:	mov    rdi,QWORD PTR [rsi]
  41a385:	bts    eax,ecx
  41a388:	mov    QWORD PTR [rsi],r14
  41a38b:	mov    rbp,r8
  41a38e:	mov    DWORD PTR [rdx],eax
  41a390:	mov    r14,rdi
  41a393:	jmp    41a2f0 <xmlStrEqual@plt+0x163b0>
  41a398:	nop    DWORD PTR [rax+rax*1+0x0]
  41a3a0:	mov    ebp,0x3
  41a3a5:	mov    DWORD PTR [rsp+0x28],0x3
  41a3ad:	mov    DWORD PTR [rsp+0xc],0x4
  41a3b5:	mov    r13d,0x4
  41a3bb:	jmp    41a260 <xmlStrEqual@plt+0x16320>
  41a3c0:	mov    QWORD PTR [rdi],rbp
  41a3c3:	mov    QWORD PTR [rsi],r14
  41a3c6:	jmp    41a2a3 <xmlStrEqual@plt+0x16363>
  41a3cb:	nop    DWORD PTR [rax+rax*1+0x0]
  41a3d0:	mov    QWORD PTR [rdi],rbp
  41a3d3:	mov    QWORD PTR [rsi],r14
  41a3d6:	jmp    41a110 <xmlStrEqual@plt+0x161d0>
  41a3db:	nop    DWORD PTR [rax+rax*1+0x0]
  41a3e0:	mov    ebp,r13d
  41a3e3:	mov    r13d,r15d
  41a3e6:	mov    r15,r12
  41a3e9:	mov    r12,QWORD PTR [rsp+0x20]
  41a3ee:	cmp    DWORD PTR [rsp+0xc],r13d
  41a3f3:	jae    41a41e <xmlStrEqual@plt+0x164de>
  41a3f5:	mov    r13d,DWORD PTR [rsp+0xc]
  41a3fa:	mov    rdi,QWORD PTR [rbx+0x18]
  41a3fe:	shl    r13,0x3
  41a402:	mov    rsi,r13
  41a405:	call   403e10 <realloc@plt>
  41a40a:	mov    QWORD PTR [rbx+0x18],rax
  41a40e:	mov    rdi,QWORD PTR [rbx+0x20]
  41a412:	mov    rsi,r13
  41a415:	call   403e10 <realloc@plt>
  41a41a:	mov    QWORD PTR [rbx+0x20],rax
  41a41e:	mov    rdi,QWORD PTR [rbx+0x10]
  41a422:	call   4037b0 <free@plt>
  41a427:	mov    eax,DWORD PTR [rsp+0xc]
  41a42b:	mov    QWORD PTR [rbx+0x10],r15
  41a42f:	mov    DWORD PTR [rbx],eax
  41a431:	mov    eax,DWORD PTR [rbx+0x4]
  41a434:	mov    DWORD PTR [rbx+0x8],eax
  41a437:	mov    eax,DWORD PTR [rsp+0x28]
  41a43b:	mov    DWORD PTR [rbx+0xc],eax
  41a43e:	jmp    419db0 <xmlStrEqual@plt+0x15e70>
  41a443:	nop    DWORD PTR [rax+rax*1+0x0]
  41a448:	mov    rbx,r14
  41a44b:	mov    r13d,ebp
  41a44e:	mov    rax,QWORD PTR [r14+0x10]
  41a452:	jmp    419f9e <xmlStrEqual@plt+0x1605e>
  41a457:	nop    WORD PTR [rax+rax*1+0x0]
  41a460:	mov    r13d,DWORD PTR [rsp+0xc]
  41a465:	mov    rdi,QWORD PTR [rbx+0x18]
  41a469:	shl    r13,0x3
  41a46d:	mov    rsi,r13
  41a470:	call   403e10 <realloc@plt>
  41a475:	mov    QWORD PTR [rbx+0x18],rax
  41a479:	mov    rdi,QWORD PTR [rbx+0x20]
  41a47d:	mov    rsi,r13
  41a480:	call   403e10 <realloc@plt>
  41a485:	mov    QWORD PTR [rbx+0x20],rax
  41a489:	mov    r10d,DWORD PTR [rbx]
  41a48c:	jmp    41a0eb <xmlStrEqual@plt+0x161ab>
  41a491:	nop    DWORD PTR [rax+0x0]
  41a498:	mov    r13d,eax
  41a49b:	shl    r13,0x3
  41a49f:	mov    rdi,QWORD PTR [rbx+0x18]
  41a4a3:	mov    rsi,r13
  41a4a6:	call   403e10 <realloc@plt>
  41a4ab:	mov    QWORD PTR [rbx+0x18],rax
  41a4af:	mov    rdi,QWORD PTR [rbx+0x20]
  41a4b3:	mov    rsi,r13
  41a4b6:	call   403e10 <realloc@plt>
  41a4bb:	mov    QWORD PTR [rbx+0x20],rax
  41a4bf:	mov    eax,DWORD PTR [rbx]
  41a4c1:	test   eax,eax
  41a4c3:	jne    41a287 <xmlStrEqual@plt+0x16347>
  41a4c9:	jmp    41a41e <xmlStrEqual@plt+0x164de>
  41a4ce:	mov    DWORD PTR [rsp+0xc],ecx
  41a4d2:	mov    r13d,0x4
  41a4d8:	jmp    41a0c2 <xmlStrEqual@plt+0x16182>
  41a4dd:	mov    DWORD PTR [rsp+0xc],ecx
  41a4e1:	mov    r13d,0x4
  41a4e7:	jmp    41a260 <xmlStrEqual@plt+0x16320>
  41a4ec:	nop    DWORD PTR [rax+0x0]
  41a4f0:	endbr64 
  41a4f4:	push   r15
  41a4f6:	push   r14
  41a4f8:	push   r13
  41a4fa:	push   r12
  41a4fc:	push   rbp
  41a4fd:	push   rbx
  41a4fe:	sub    rsp,0x18
  41a502:	mov    r14,QWORD PTR [rdi]
  41a505:	mov    ebx,DWORD PTR [r14]
  41a508:	test   ebx,ebx
  41a50a:	jne    41a520 <xmlStrEqual@plt+0x165e0>
  41a50c:	add    rsp,0x18
  41a510:	pop    rbx
  41a511:	pop    rbp
  41a512:	pop    r12
  41a514:	pop    r13
  41a516:	pop    r14
  41a518:	pop    r15
  41a51a:	ret    
  41a51b:	nop    DWORD PTR [rax+rax*1+0x0]
  41a520:	mov    rbp,rdi
  41a523:	mov    rdi,rsi
  41a526:	dec    ebx
  41a528:	mov    r13,rsi
  41a52b:	call   436930 <xmlStrEqual@plt+0x329f0>
  41a530:	mov    r12d,eax
  41a533:	mov    r15d,ebx
  41a536:	and    r15d,eax
  41a539:	shr    r12d,0x3
  41a53d:	shl    eax,0x3
  41a540:	xor    r12d,eax
  41a543:	or     r12d,0x1
  41a547:	and    r12d,ebx
  41a54a:	mov    DWORD PTR [rsp],r15d
  41a54e:	mov    DWORD PTR [rsp+0x4],r12d
  41a553:	jmp    41a56a <xmlStrEqual@plt+0x1662a>
  41a555:	nop    DWORD PTR [rax]
  41a558:	mov    eax,DWORD PTR [rsp+0x4]
  41a55c:	lea    ecx,[rax+r15*1]
  41a560:	and    ecx,ebx
  41a562:	mov    r15d,ecx
  41a565:	cmp    DWORD PTR [rsp],ecx
  41a568:	je     41a5c8 <xmlStrEqual@plt+0x16688>
  41a56a:	mov    eax,r15d
  41a56d:	mov    rsi,QWORD PTR [r14+0x10]
  41a571:	shr    eax,0x4
  41a574:	lea    rcx,[rax*4+0x0]
  41a57c:	lea    r8d,[r15+r15*1]
  41a580:	mov    eax,DWORD PTR [rsi+rax*4]
  41a583:	and    r8d,0x1e
  41a587:	mov    QWORD PTR [rsp+0x8],rcx
  41a58c:	mov    r12d,r8d
  41a58f:	shrx   eax,eax,r8d
  41a594:	test   al,0x2
  41a596:	jne    41a5c4 <xmlStrEqual@plt+0x16684>
  41a598:	test   al,0x1
  41a59a:	jne    41a558 <xmlStrEqual@plt+0x16618>
  41a59c:	mov    rsi,QWORD PTR [r14+0x18]
  41a5a0:	mov    eax,r15d
  41a5a3:	mov    rdi,QWORD PTR [rsi+rax*8]
  41a5a7:	mov    rsi,r13
  41a5aa:	call   436ab0 <xmlStrEqual@plt+0x32b70>
  41a5af:	test   eax,eax
  41a5b1:	je     41a558 <xmlStrEqual@plt+0x16618>
  41a5b3:	mov    rax,QWORD PTR [r14+0x10]
  41a5b7:	mov    rbx,QWORD PTR [rsp+0x8]
  41a5bc:	mov    eax,DWORD PTR [rax+rbx*1]
  41a5bf:	shrx   eax,eax,r12d
  41a5c4:	test   al,0x3
  41a5c6:	je     41a5cb <xmlStrEqual@plt+0x1668b>
  41a5c8:	mov    r15d,DWORD PTR [r14]
  41a5cb:	mov    rdx,QWORD PTR [rbp+0x0]
  41a5cf:	cmp    DWORD PTR [rdx],r15d
  41a5d2:	je     41a50c <xmlStrEqual@plt+0x165cc>
  41a5d8:	mov    rdx,QWORD PTR [rdx+0x20]
  41a5dc:	mov    eax,r15d
  41a5df:	mov    rbx,QWORD PTR [rdx+rax*8]
  41a5e3:	mov    rax,0x469e3c
  41a5ea:	cmp    DWORD PTR [rax],0x2
  41a5ed:	jle    41a60d <xmlStrEqual@plt+0x166cd>
  41a5ef:	mov    rdi,r13
  41a5f2:	call   436b90 <xmlStrEqual@plt+0x32c50>
  41a5f7:	mov    rdx,rax
  41a5fa:	lea    rsi,[rip+0x32877]        # 44ce78 <xmlStrEqual@plt+0x48f38>
  41a601:	mov    edi,0x7
  41a606:	xor    eax,eax
  41a608:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  41a60d:	mov    rdi,rbx
  41a610:	call   422000 <xmlStrEqual@plt+0x1e0c0>
  41a615:	mov    rax,QWORD PTR [rbp+0x0]
  41a619:	cmp    DWORD PTR [rax],r15d
  41a61c:	je     41a50c <xmlStrEqual@plt+0x165cc>
  41a622:	mov    edx,r15d
  41a625:	mov    rsi,QWORD PTR [rax+0x10]
  41a629:	shr    edx,0x4
  41a62c:	lea    rsi,[rsi+rdx*4]
  41a630:	mov    edx,DWORD PTR [rsi]
  41a632:	lea    ecx,[r15+r15*1]
  41a636:	and    ecx,0x1e
  41a639:	shrx   edi,edx,ecx
  41a63e:	and    edi,0x3
  41a641:	jne    41a50c <xmlStrEqual@plt+0x165cc>
  41a647:	bts    edx,ecx
  41a64a:	mov    DWORD PTR [rsi],edx
  41a64c:	dec    DWORD PTR [rax+0x4]
  41a64f:	add    rsp,0x18
  41a653:	pop    rbx
  41a654:	pop    rbp
  41a655:	pop    r12
  41a657:	pop    r13
  41a659:	pop    r14
  41a65b:	pop    r15
  41a65d:	ret    
  41a65e:	xchg   ax,ax
  41a660:	endbr64 
  41a664:	push   r12
  41a666:	mov    edx,esi
  41a668:	push   rbp
  41a669:	mov    rbp,rdi
  41a66c:	push   rbx
  41a66d:	mov    rbx,rdx
  41a670:	mov    rax,QWORD PTR [rdi]
  41a673:	mov    rax,QWORD PTR [rax+0x20]
  41a677:	mov    r12,QWORD PTR [rax+rdx*8]
  41a67b:	mov    rax,0x469e3c
  41a682:	cmp    DWORD PTR [rax],0x2
  41a685:	jle    41a6a7 <xmlStrEqual@plt+0x16767>
  41a687:	mov    rdi,QWORD PTR [r12+0x8]
  41a68c:	call   436b90 <xmlStrEqual@plt+0x32c50>
  41a691:	mov    rdx,rax
  41a694:	lea    rsi,[rip+0x32805]        # 44cea0 <xmlStrEqual@plt+0x48f60>
  41a69b:	mov    edi,0x7
  41a6a0:	xor    eax,eax
  41a6a2:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  41a6a7:	mov    rdi,r12
  41a6aa:	call   422000 <xmlStrEqual@plt+0x1e0c0>
  41a6af:	mov    rax,QWORD PTR [rbp+0x0]
  41a6b3:	cmp    ebx,DWORD PTR [rax]
  41a6b5:	je     41a6dd <xmlStrEqual@plt+0x1679d>
  41a6b7:	mov    edx,ebx
  41a6b9:	mov    rcx,QWORD PTR [rax+0x10]
  41a6bd:	shr    edx,0x4
  41a6c0:	lea    rcx,[rcx+rdx*4]
  41a6c4:	add    ebx,ebx
  41a6c6:	mov    edx,DWORD PTR [rcx]
  41a6c8:	and    ebx,0x1e
  41a6cb:	shrx   esi,edx,ebx
  41a6d0:	and    esi,0x3
  41a6d3:	jne    41a6dd <xmlStrEqual@plt+0x1679d>
  41a6d5:	bts    edx,ebx
  41a6d8:	mov    DWORD PTR [rcx],edx
  41a6da:	dec    DWORD PTR [rax+0x4]
  41a6dd:	pop    rbx
  41a6de:	pop    rbp
  41a6df:	pop    r12
  41a6e1:	ret    
  41a6e2:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  41a6ed:	nop    DWORD PTR [rax]
  41a6f0:	endbr64 
  41a6f4:	push   r15
  41a6f6:	push   r14
  41a6f8:	push   r13
  41a6fa:	push   r12
  41a6fc:	push   rbp
  41a6fd:	push   rbx
  41a6fe:	sub    rsp,0x28
  41a702:	mov    r12,QWORD PTR [rdi]
  41a705:	mov    ebx,DWORD PTR [r12]
  41a709:	test   ebx,ebx
  41a70b:	jne    41a720 <xmlStrEqual@plt+0x167e0>
  41a70d:	add    rsp,0x28
  41a711:	pop    rbx
  41a712:	pop    rbp
  41a713:	pop    r12
  41a715:	pop    r13
  41a717:	pop    r14
  41a719:	xor    eax,eax
  41a71b:	pop    r15
  41a71d:	ret    
  41a71e:	xchg   ax,ax
  41a720:	mov    QWORD PTR [rsp+0x10],rdi
  41a725:	mov    rdi,rsi
  41a728:	dec    ebx
  41a72a:	mov    r13,rsi
  41a72d:	call   436930 <xmlStrEqual@plt+0x329f0>
  41a732:	mov    ebp,eax
  41a734:	mov    r14d,ebx
  41a737:	and    r14d,eax
  41a73a:	shr    ebp,0x3
  41a73d:	shl    eax,0x3
  41a740:	xor    ebp,eax
  41a742:	or     ebp,0x1
  41a745:	and    ebp,ebx
  41a747:	mov    DWORD PTR [rsp+0xc],ebp
  41a74b:	mov    r15d,r14d
  41a74e:	jmp    41a762 <xmlStrEqual@plt+0x16822>
  41a750:	mov    eax,DWORD PTR [rsp+0xc]
  41a754:	lea    edx,[rax+r15*1]
  41a758:	and    edx,ebx
  41a75a:	mov    r15d,edx
  41a75d:	cmp    r14d,edx
  41a760:	je     41a7c3 <xmlStrEqual@plt+0x16883>
  41a762:	mov    eax,r15d
  41a765:	mov    rsi,QWORD PTR [r12+0x10]
  41a76a:	shr    eax,0x4
  41a76d:	lea    rcx,[rax*4+0x0]
  41a775:	lea    r8d,[r15+r15*1]
  41a779:	mov    eax,DWORD PTR [rsi+rax*4]
  41a77c:	and    r8d,0x1e
  41a780:	mov    QWORD PTR [rsp+0x18],rcx
  41a785:	mov    ebp,r8d
  41a788:	shrx   eax,eax,r8d
  41a78d:	test   al,0x2
  41a78f:	jne    41a7bf <xmlStrEqual@plt+0x1687f>
  41a791:	test   al,0x1
  41a793:	jne    41a750 <xmlStrEqual@plt+0x16810>
  41a795:	mov    rsi,QWORD PTR [r12+0x18]
  41a79a:	mov    eax,r15d
  41a79d:	mov    rdi,QWORD PTR [rsi+rax*8]
  41a7a1:	mov    rsi,r13
  41a7a4:	call   436ab0 <xmlStrEqual@plt+0x32b70>
  41a7a9:	test   eax,eax
  41a7ab:	je     41a750 <xmlStrEqual@plt+0x16810>
  41a7ad:	mov    rax,QWORD PTR [r12+0x10]
  41a7b2:	mov    rcx,QWORD PTR [rsp+0x18]
  41a7b7:	mov    eax,DWORD PTR [rax+rcx*1]
  41a7ba:	shrx   eax,eax,ebp
  41a7bf:	test   al,0x3
  41a7c1:	je     41a7c7 <xmlStrEqual@plt+0x16887>
  41a7c3:	mov    r15d,DWORD PTR [r12]
  41a7c7:	mov    rax,QWORD PTR [rsp+0x10]
  41a7cc:	mov    rax,QWORD PTR [rax]
  41a7cf:	cmp    DWORD PTR [rax],r15d
  41a7d2:	je     41a70d <xmlStrEqual@plt+0x167cd>
  41a7d8:	mov    rax,QWORD PTR [rax+0x20]
  41a7dc:	mov    edx,r15d
  41a7df:	mov    rax,QWORD PTR [rax+rdx*8]
  41a7e3:	add    rsp,0x28
  41a7e7:	pop    rbx
  41a7e8:	pop    rbp
  41a7e9:	pop    r12
  41a7eb:	pop    r13
  41a7ed:	pop    r14
  41a7ef:	pop    r15
  41a7f1:	ret    
  41a7f2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41a7fc:	nop    DWORD PTR [rax+0x0]
  41a800:	endbr64 
  41a804:	push   r13
  41a806:	push   r12
  41a808:	mov    r12,rdx
  41a80b:	push   rbp
  41a80c:	xor    ebp,ebp
  41a80e:	push   rbx
  41a80f:	mov    rbx,rsi
  41a812:	sub    rsp,0x18
  41a816:	lea    rcx,[rsp+0x2]
  41a81b:	lea    rdx,[rsp+0x4]
  41a820:	lea    r8,[rsp+0x3]
  41a825:	mov    rax,QWORD PTR fs:0x28
  41a82e:	mov    QWORD PTR [rsp+0x8],rax
  41a833:	xor    eax,eax
  41a835:	mov    BYTE PTR [rsp+0x2],0x0
  41a83a:	mov    BYTE PTR [rsp+0x3],0x0
  41a83f:	call   438ef0 <xmlStrEqual@plt+0x34fb0>
  41a844:	cmp    eax,0x1
  41a847:	jne    41a8d8 <xmlStrEqual@plt+0x16998>
  41a84d:	mov    ebp,eax
  41a84f:	mov    rax,QWORD PTR [rbx+0x38]
  41a853:	sub    rax,QWORD PTR [rbx+0x30]
  41a857:	cmp    DWORD PTR [rsp+0x4],0x2
  41a85c:	je     41a950 <xmlStrEqual@plt+0x16a10>
  41a862:	mov    WORD PTR [rbx+0x1c],ax
  41a866:	mov    rdi,rbx
  41a869:	call   435fc0 <xmlStrEqual@plt+0x32080>
  41a86e:	movbe  dx,WORD PTR [rax+0x4]
  41a874:	cmp    dx,0xf
  41a878:	jbe    41a900 <xmlStrEqual@plt+0x169c0>
  41a87e:	movbe  ax,WORD PTR [rax+0x2]
  41a884:	cmp    ax,0x10f5
  41a888:	je     41a988 <xmlStrEqual@plt+0x16a48>
  41a88e:	cmp    ax,0x12b6
  41a892:	jne    41a900 <xmlStrEqual@plt+0x169c0>
  41a894:	mov    rdi,rbx
  41a897:	call   419ba0 <xmlStrEqual@plt+0x15c60>
  41a89c:	mov    r13d,0x12b6
  41a8a2:	test   BYTE PTR [rax],0x8
  41a8a5:	jne    41a970 <xmlStrEqual@plt+0x16a30>
  41a8ab:	mov    rdi,QWORD PTR [rbx+0x38]
  41a8af:	movzx  edx,BYTE PTR [rsp+0x3]
  41a8b4:	mov    rax,rdi
  41a8b7:	sub    rax,QWORD PTR [rbx+0x30]
  41a8bb:	mov    WORD PTR [rbx+0x20],ax
  41a8bf:	movzx  esi,BYTE PTR [rsp+0x2]
  41a8c4:	call   4370c0 <xmlStrEqual@plt+0x33180>
  41a8c9:	mov    rax,0x469e3c
  41a8d0:	cmp    DWORD PTR [rax],0x2
  41a8d3:	jg     41a910 <xmlStrEqual@plt+0x169d0>
  41a8d5:	nop    DWORD PTR [rax]
  41a8d8:	mov    rcx,QWORD PTR [rsp+0x8]
  41a8dd:	xor    rcx,QWORD PTR fs:0x28
  41a8e6:	mov    eax,ebp
  41a8e8:	jne    41a9d7 <xmlStrEqual@plt+0x16a97>
  41a8ee:	add    rsp,0x18
  41a8f2:	pop    rbx
  41a8f3:	pop    rbp
  41a8f4:	pop    r12
  41a8f6:	pop    r13
  41a8f8:	ret    
  41a8f9:	nop    DWORD PTR [rax+0x0]
  41a900:	mov    ebp,0xfffffff8
  41a905:	jmp    41a8d8 <xmlStrEqual@plt+0x16998>
  41a907:	nop    WORD PTR [rax+rax*1+0x0]
  41a910:	movzx  edi,WORD PTR [rbx+0x20]
  41a914:	cmp    di,0xffff
  41a918:	je     41a9d0 <xmlStrEqual@plt+0x16a90>
  41a91e:	add    rdi,QWORD PTR [rbx+0x30]
  41a922:	lea    rsi,[rip+0x325b7]        # 44cee0 <xmlStrEqual@plt+0x48fa0>
  41a929:	call   437520 <xmlStrEqual@plt+0x335e0>
  41a92e:	mov    rcx,rax
  41a931:	mov    edx,r13d
  41a934:	lea    rsi,[rip+0x325b8]        # 44cef3 <xmlStrEqual@plt+0x48fb3>
  41a93b:	mov    edi,0x7
  41a940:	xor    eax,eax
  41a942:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  41a947:	jmp    41a8d8 <xmlStrEqual@plt+0x16998>
  41a949:	nop    DWORD PTR [rax+0x0]
  41a950:	mov    WORD PTR [rbx+0x1a],ax
  41a954:	mov    rdi,rbx
  41a957:	call   435f70 <xmlStrEqual@plt+0x32030>
  41a95c:	mov    rax,QWORD PTR [rbx+0x38]
  41a960:	sub    rax,QWORD PTR [rbx+0x30]
  41a964:	mov    WORD PTR [rbx+0x1c],ax
  41a968:	jmp    41a866 <xmlStrEqual@plt+0x16926>
  41a96d:	nop    DWORD PTR [rax]
  41a970:	mov    rdi,rax
  41a973:	call   419bd0 <xmlStrEqual@plt+0x15c90>
  41a978:	mov    DWORD PTR [r12],eax
  41a97c:	jmp    41a8ab <xmlStrEqual@plt+0x1696b>
  41a981:	nop    DWORD PTR [rax+0x0]
  41a988:	mov    rdi,rbx
  41a98b:	call   4248e0 <xmlStrEqual@plt+0x209a0>
  41a990:	test   BYTE PTR [rax],0x8
  41a993:	jne    41a9b0 <xmlStrEqual@plt+0x16a70>
  41a995:	mov    DWORD PTR [r12],0x0
  41a99d:	mov    r13d,0x10f5
  41a9a3:	jmp    41a8ab <xmlStrEqual@plt+0x1696b>
  41a9a8:	nop    DWORD PTR [rax+rax*1+0x0]
  41a9b0:	mov    rdi,rax
  41a9b3:	call   425c40 <xmlStrEqual@plt+0x21d00>
  41a9b8:	mov    DWORD PTR [r12],eax
  41a9bc:	mov    r13d,0x10f5
  41a9c2:	jmp    41a8ab <xmlStrEqual@plt+0x1696b>
  41a9c7:	nop    WORD PTR [rax+rax*1+0x0]
  41a9d0:	xor    edi,edi
  41a9d2:	jmp    41a922 <xmlStrEqual@plt+0x169e2>
  41a9d7:	call   403c00 <__stack_chk_fail@plt>
  41a9dc:	nop    DWORD PTR [rax+0x0]
  41a9e0:	endbr64 
  41a9e4:	push   rbx
  41a9e5:	mov    edx,0x1000
  41a9ea:	mov    rbx,rdi
  41a9ed:	sub    rsp,0x10
  41a9f1:	lea    rsi,[rip+0x52ba8]        # 46d5a0 <xmlStrEqual@plt+0x69660>
  41a9f8:	lea    rdi,[rip+0x52b61]        # 46d560 <xmlStrEqual@plt+0x69620>
  41a9ff:	mov    rax,QWORD PTR fs:0x28
  41aa08:	mov    QWORD PTR [rsp+0x8],rax
  41aa0d:	xor    eax,eax
  41aa0f:	call   430740 <xmlStrEqual@plt+0x2c800>
  41aa14:	mov    edi,DWORD PTR [rbx+0x18]
  41aa17:	lea    rdx,[rsp+0x4]
  41aa1c:	lea    rsi,[rip+0x52b3d]        # 46d560 <xmlStrEqual@plt+0x69620>
  41aa23:	call   41a800 <xmlStrEqual@plt+0x168c0>
  41aa28:	xor    ebx,ebx
  41aa2a:	cmp    eax,0x1
  41aa2d:	jne    41aa70 <xmlStrEqual@plt+0x16b30>
  41aa2f:	movzx  esi,WORD PTR [rip+0x52b4a]        # 46d580 <xmlStrEqual@plt+0x69640>
  41aa36:	mov    ebx,eax
  41aa38:	mov    edx,DWORD PTR [rip+0x52b36]        # 46d574 <xmlStrEqual@plt+0x69634>
  41aa3e:	cmp    si,0xffff
  41aa42:	je     41aa90 <xmlStrEqual@plt+0x16b50>
  41aa44:	add    rsi,QWORD PTR [rip+0x52b45]        # 46d590 <xmlStrEqual@plt+0x69650>
  41aa4b:	mov    rax,0x4757dc
  41aa52:	mov    edi,DWORD PTR [rax]
  41aa54:	call   403920 <write@plt>
  41aa59:	test   rax,rax
  41aa5c:	jns    41aa70 <xmlStrEqual@plt+0x16b30>
  41aa5e:	mov    rax,0x469e3c
  41aa65:	cmp    DWORD PTR [rax],0x1
  41aa68:	jg     41aa98 <xmlStrEqual@plt+0x16b58>
  41aa6a:	nop    WORD PTR [rax+rax*1+0x0]
  41aa70:	mov    rcx,QWORD PTR [rsp+0x8]
  41aa75:	xor    rcx,QWORD PTR fs:0x28
  41aa7e:	mov    eax,ebx
  41aa80:	jne    41aabc <xmlStrEqual@plt+0x16b7c>
  41aa82:	add    rsp,0x10
  41aa86:	pop    rbx
  41aa87:	ret    
  41aa88:	nop    DWORD PTR [rax+rax*1+0x0]
  41aa90:	xor    esi,esi
  41aa92:	jmp    41aa4b <xmlStrEqual@plt+0x16b0b>
  41aa94:	nop    DWORD PTR [rax+0x0]
  41aa98:	call   4037f0 <__errno_location@plt>
  41aa9d:	mov    edi,DWORD PTR [rax]
  41aa9f:	call   403910 <strerror@plt>
  41aaa4:	mov    rdx,rax
  41aaa7:	lea    rsi,[rip+0x32454]        # 44cf02 <xmlStrEqual@plt+0x48fc2>
  41aaae:	mov    edi,0x6
  41aab3:	xor    eax,eax
  41aab5:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  41aaba:	jmp    41aa70 <xmlStrEqual@plt+0x16b30>
  41aabc:	call   403c00 <__stack_chk_fail@plt>
  41aac1:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  41aacc:	nop    DWORD PTR [rax+0x0]
  41aad0:	endbr64 
  41aad4:	push   rbp
  41aad5:	mov    edx,0x1000
  41aada:	lea    rsi,[rip+0x52abf]        # 46d5a0 <xmlStrEqual@plt+0x69660>
  41aae1:	push   rbx
  41aae2:	mov    rbx,rdi
  41aae5:	lea    rdi,[rip+0x52a74]        # 46d560 <xmlStrEqual@plt+0x69620>
  41aaec:	sub    rsp,0x68
  41aaf0:	mov    rax,QWORD PTR fs:0x28
  41aaf9:	mov    QWORD PTR [rsp+0x58],rax
  41aafe:	xor    eax,eax
  41ab00:	call   430740 <xmlStrEqual@plt+0x2c800>
  41ab05:	mov    esi,0x64
  41ab0a:	lea    rdi,[rip+0x52a4f]        # 46d560 <xmlStrEqual@plt+0x69620>
  41ab11:	call   430990 <xmlStrEqual@plt+0x2ca50>
  41ab16:	mov    rbp,rsp
  41ab19:	mov    edi,DWORD PTR [rbx+0x18]
  41ab1c:	lea    rdx,[rbp+0x48]
  41ab20:	lea    rsi,[rip+0x52a39]        # 46d560 <xmlStrEqual@plt+0x69620>
  41ab27:	call   41a800 <xmlStrEqual@plt+0x168c0>
  41ab2c:	cmp    eax,0x1
  41ab2f:	jne    41ab74 <xmlStrEqual@plt+0x16c34>
  41ab31:	mov    rax,0x469e3c
  41ab38:	cmp    DWORD PTR [rax],0x2
  41ab3b:	jg     41ab90 <xmlStrEqual@plt+0x16c50>
  41ab3d:	lea    rdi,[rip+0x52a1c]        # 46d560 <xmlStrEqual@plt+0x69620>
  41ab44:	call   430bb0 <xmlStrEqual@plt+0x2cc70>
  41ab49:	mov    rax,QWORD PTR [rip+0x52a48]        # 46d598 <xmlStrEqual@plt+0x69658>
  41ab50:	mov    rsi,rbp
  41ab53:	sub    rax,QWORD PTR [rip+0x52a36]        # 46d590 <xmlStrEqual@plt+0x69650>
  41ab5a:	lea    rdi,[rip+0x529ff]        # 46d560 <xmlStrEqual@plt+0x69620>
  41ab61:	mov    WORD PTR [rip+0x52a12],ax        # 46d57a <xmlStrEqual@plt+0x6963a>
  41ab68:	call   4364e0 <xmlStrEqual@plt+0x325a0>
  41ab6d:	mov    ebx,eax
  41ab6f:	cmp    eax,0x1
  41ab72:	je     41aba8 <xmlStrEqual@plt+0x16c68>
  41ab74:	xor    ebx,ebx
  41ab76:	mov    rcx,QWORD PTR [rsp+0x58]
  41ab7b:	xor    rcx,QWORD PTR fs:0x28
  41ab84:	mov    eax,ebx
  41ab86:	jne    41abb9 <xmlStrEqual@plt+0x16c79>
  41ab88:	add    rsp,0x68
  41ab8c:	pop    rbx
  41ab8d:	pop    rbp
  41ab8e:	ret    
  41ab8f:	nop
  41ab90:	lea    rsi,[rip+0x32389]        # 44cf20 <xmlStrEqual@plt+0x48fe0>
  41ab97:	mov    edi,0x7
  41ab9c:	xor    eax,eax
  41ab9e:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  41aba3:	jmp    41ab3d <xmlStrEqual@plt+0x16bfd>
  41aba5:	nop    DWORD PTR [rax]
  41aba8:	mov    rsi,rbp
  41abab:	lea    rdi,[rip+0x529ae]        # 46d560 <xmlStrEqual@plt+0x69620>
  41abb2:	call   41ac90 <xmlStrEqual@plt+0x16d50>
  41abb7:	jmp    41ab76 <xmlStrEqual@plt+0x16c36>
  41abb9:	call   403c00 <__stack_chk_fail@plt>
  41abbe:	xchg   ax,ax
  41abc0:	endbr64 
  41abc4:	push   rbx
  41abc5:	xor    eax,eax
  41abc7:	mov    rbx,rdi
  41abca:	call   41b5c0 <xmlStrEqual@plt+0x17680>
  41abcf:	lea    rdi,[rax+0x20]
  41abd3:	mov    rsi,rbx
  41abd6:	pop    rbx
  41abd7:	jmp    41a4f0 <xmlStrEqual@plt+0x165b0>
  41abdc:	nop    DWORD PTR [rax+0x0]
  41abe0:	push   r13
  41abe2:	push   r12
  41abe4:	mov    r12,rdi
  41abe7:	push   rbp
  41abe8:	push   rbx
  41abe9:	mov    rbx,rsi
  41abec:	sub    rsp,0x8
  41abf0:	mov    rbp,0x469e3c
  41abf7:	cmp    DWORD PTR [rbp+0x0],0x2
  41abfb:	jle    41ac1b <xmlStrEqual@plt+0x16cdb>
  41abfd:	mov    rdi,rsi
  41ac00:	call   424d40 <xmlStrEqual@plt+0x20e00>
  41ac05:	mov    rdx,rax
  41ac08:	lea    rsi,[rip+0x32341]        # 44cf50 <xmlStrEqual@plt+0x49010>
  41ac0f:	mov    edi,0x7
  41ac14:	xor    eax,eax
  41ac16:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  41ac1b:	mov    rdi,rbx
  41ac1e:	call   425890 <xmlStrEqual@plt+0x21950>
  41ac23:	movzx  edi,ax
  41ac26:	mov    r13d,edi
  41ac29:	call   41c520 <xmlStrEqual@plt+0x185e0>
  41ac2e:	cmp    eax,0xfffffff7
  41ac31:	je     41ac58 <xmlStrEqual@plt+0x16d18>
  41ac33:	mov    edx,DWORD PTR [r12+0x14]
  41ac38:	mov    rsi,QWORD PTR [r12+0x38]
  41ac3d:	add    rsp,0x8
  41ac41:	mov    rcx,rbx
  41ac44:	pop    rbx
  41ac45:	pop    rbp
  41ac46:	pop    r12
  41ac48:	mov    edi,eax
  41ac4a:	pop    r13
  41ac4c:	jmp    439c00 <xmlStrEqual@plt+0x35cc0>
  41ac51:	nop    DWORD PTR [rax+0x0]
  41ac58:	cmp    DWORD PTR [rbp+0x0],0x1
  41ac5c:	jle    41ac75 <xmlStrEqual@plt+0x16d35>
  41ac5e:	movzx  edx,r13w
  41ac62:	lea    rsi,[rip+0x3230f]        # 44cf78 <xmlStrEqual@plt+0x49038>
  41ac69:	mov    edi,0x6
  41ac6e:	xor    eax,eax
  41ac70:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  41ac75:	add    rsp,0x8
  41ac79:	pop    rbx
  41ac7a:	pop    rbp
  41ac7b:	pop    r12
  41ac7d:	xor    eax,eax
  41ac7f:	pop    r13
  41ac81:	ret    
  41ac82:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  41ac8d:	nop    DWORD PTR [rax]
  41ac90:	endbr64 
  41ac94:	push   r15
  41ac96:	push   r14
  41ac98:	push   r13
  41ac9a:	mov    r13,rdi
  41ac9d:	push   r12
  41ac9f:	lea    r12,[rsi+0x20]
  41aca3:	push   rbp
  41aca4:	push   rbx
  41aca5:	mov    rbx,rsi
  41aca8:	sub    rsp,0x28
  41acac:	mov    rbp,0x469e3c
  41acb3:	cmp    DWORD PTR [rbp+0x0],0x2
  41acb7:	jle    41ad0d <xmlStrEqual@plt+0x16dcd>
  41acb9:	movzx  r9d,WORD PTR [rsi+0x40]
  41acbe:	mov    rdi,r12
  41acc1:	mov    DWORD PTR [rsp+0x10],r9d
  41acc6:	movzx  r14d,WORD PTR [rsi+0x42]
  41accb:	movzx  r15d,BYTE PTR [rsi+0x44]
  41acd0:	call   424d40 <xmlStrEqual@plt+0x20e00>
  41acd5:	mov    rdi,rbx
  41acd8:	mov    QWORD PTR [rsp+0x8],rax
  41acdd:	call   424d40 <xmlStrEqual@plt+0x20e00>
  41ace2:	sub    rsp,0x8
  41ace6:	push   r14
  41ace8:	mov    rdx,rax
  41aceb:	lea    rsi,[rip+0x322be]        # 44cfb0 <xmlStrEqual@plt+0x49070>
  41acf2:	mov    r9d,DWORD PTR [rsp+0x20]
  41acf7:	mov    rcx,QWORD PTR [rsp+0x18]
  41acfc:	mov    edi,0x7
  41ad01:	mov    r8d,r15d
  41ad04:	xor    eax,eax
  41ad06:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  41ad0b:	pop    rsi
  41ad0c:	pop    rdi
  41ad0d:	mov    rdi,rbx
  41ad10:	call   437080 <xmlStrEqual@plt+0x33140>
  41ad15:	test   eax,eax
  41ad17:	je     41ad40 <xmlStrEqual@plt+0x16e00>
  41ad19:	cmp    DWORD PTR [rbp+0x0],0x2
  41ad1d:	jg     41ae50 <xmlStrEqual@plt+0x16f10>
  41ad23:	add    rsp,0x28
  41ad27:	pop    rbx
  41ad28:	pop    rbp
  41ad29:	mov    rsi,r12
  41ad2c:	pop    r12
  41ad2e:	mov    rdi,r13
  41ad31:	pop    r13
  41ad33:	pop    r14
  41ad35:	pop    r15
  41ad37:	jmp    41abe0 <xmlStrEqual@plt+0x16ca0>
  41ad3c:	nop    DWORD PTR [rax+0x0]
  41ad40:	mov    rdi,r12
  41ad43:	call   426760 <xmlStrEqual@plt+0x22820>
  41ad48:	test   al,al
  41ad4a:	je     41ad70 <xmlStrEqual@plt+0x16e30>
  41ad4c:	mov    ecx,DWORD PTR [rbp+0x0]
  41ad4f:	test   ecx,ecx
  41ad51:	jg     41ae70 <xmlStrEqual@plt+0x16f30>
  41ad57:	add    rsp,0x28
  41ad5b:	pop    rbx
  41ad5c:	pop    rbp
  41ad5d:	pop    r12
  41ad5f:	pop    r13
  41ad61:	pop    r14
  41ad63:	mov    eax,0x1
  41ad68:	pop    r15
  41ad6a:	ret    
  41ad6b:	nop    DWORD PTR [rax+rax*1+0x0]
  41ad70:	mov    eax,DWORD PTR [rbx+0x48]
  41ad73:	mov    DWORD PTR [rsp+0x10],eax
  41ad77:	xor    eax,eax
  41ad79:	call   41b5c0 <xmlStrEqual@plt+0x17680>
  41ad7e:	mov    r15,rax
  41ad81:	lea    rax,[rax+0x20]
  41ad85:	mov    rsi,rbx
  41ad88:	mov    rdi,rax
  41ad8b:	mov    QWORD PTR [rsp+0x8],rax
  41ad90:	call   41a6f0 <xmlStrEqual@plt+0x167b0>
  41ad95:	mov    r9,rax
  41ad98:	test   rax,rax
  41ad9b:	je     41aee8 <xmlStrEqual@plt+0x16fa8>
  41ada1:	mov    r14,QWORD PTR [rax+0x8]
  41ada5:	cmp    QWORD PTR [r14+0x8],0x0
  41adaa:	je     41ae90 <xmlStrEqual@plt+0x16f50>
  41adb0:	mov    r8,QWORD PTR [r14+0x10]
  41adb4:	test   r8,r8
  41adb7:	je     41ae90 <xmlStrEqual@plt+0x16f50>
  41adbd:	cmp    DWORD PTR [rbp+0x0],0x2
  41adc1:	jle    41adfe <xmlStrEqual@plt+0x16ebe>
  41adc3:	mov    rdi,r8
  41adc6:	mov    QWORD PTR [rsp+0x8],r9
  41adcb:	call   424d40 <xmlStrEqual@plt+0x20e00>
  41add0:	mov    rdi,QWORD PTR [r14+0x8]
  41add4:	mov    rbx,rax
  41add7:	call   424d40 <xmlStrEqual@plt+0x20e00>
  41addc:	mov    rdx,rax
  41addf:	mov    rcx,rbx
  41ade2:	lea    rsi,[rip+0x32337]        # 44d120 <xmlStrEqual@plt+0x491e0>
  41ade9:	mov    edi,0x7
  41adee:	xor    eax,eax
  41adf0:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  41adf5:	mov    r8,QWORD PTR [r14+0x10]
  41adf9:	mov    r9,QWORD PTR [rsp+0x8]
  41adfe:	mov    eax,DWORD PTR [r9+0x14]
  41ae02:	test   eax,eax
  41ae04:	je     41aec0 <xmlStrEqual@plt+0x16f80>
  41ae0a:	cmp    eax,0x1
  41ae0d:	jne    41ae35 <xmlStrEqual@plt+0x16ef5>
  41ae0f:	sub    rsp,0x8
  41ae13:	mov    r9d,DWORD PTR [r14+0x28]
  41ae17:	mov    rcx,QWORD PTR [r14+0x8]
  41ae1b:	push   r12
  41ae1d:	mov    edx,0x12b6
  41ae22:	mov    esi,0x12b6
  41ae27:	mov    rdi,r13
  41ae2a:	call   419a60 <xmlStrEqual@plt+0x15b20>
  41ae2f:	pop    rax
  41ae30:	mov    r8,QWORD PTR [r14+0x10]
  41ae34:	pop    rdx
  41ae35:	mov    rax,QWORD PTR [r14+0x20]
  41ae39:	mov    edx,DWORD PTR [r13+0x14]
  41ae3d:	mov    rsi,QWORD PTR [r13+0x38]
  41ae41:	mov    edi,DWORD PTR [rax]
  41ae43:	mov    rcx,r8
  41ae46:	call   439c00 <xmlStrEqual@plt+0x35cc0>
  41ae4b:	jmp    41ad57 <xmlStrEqual@plt+0x16e17>
  41ae50:	lea    rsi,[rip+0x32199]        # 44cff0 <xmlStrEqual@plt+0x490b0>
  41ae57:	mov    edi,0x7
  41ae5c:	xor    eax,eax
  41ae5e:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  41ae63:	jmp    41ad23 <xmlStrEqual@plt+0x16de3>
  41ae68:	nop    DWORD PTR [rax+rax*1+0x0]
  41ae70:	lea    rsi,[rip+0x321b1]        # 44d028 <xmlStrEqual@plt+0x490e8>
  41ae77:	mov    edi,0x5
  41ae7c:	xor    eax,eax
  41ae7e:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  41ae83:	jmp    41ad57 <xmlStrEqual@plt+0x16e17>
  41ae88:	nop    DWORD PTR [rax+rax*1+0x0]
  41ae90:	mov    eax,DWORD PTR [r9+0x10]
  41ae94:	cmp    eax,0x1
  41ae97:	je     41b070 <xmlStrEqual@plt+0x17130>
  41ae9d:	test   eax,eax
  41ae9f:	je     41b048 <xmlStrEqual@plt+0x17108>
  41aea5:	cmp    eax,0x3
  41aea8:	jbe    41b048 <xmlStrEqual@plt+0x17108>
  41aeae:	mov    r8,QWORD PTR [r14+0x10]
  41aeb2:	jmp    41adbd <xmlStrEqual@plt+0x16e7d>
  41aeb7:	nop    WORD PTR [rax+rax*1+0x0]
  41aec0:	mov    rcx,QWORD PTR [r14+0x8]
  41aec4:	movzx  edx,WORD PTR [r14+0x1a]
  41aec9:	movzx  esi,WORD PTR [r14+0x18]
  41aece:	mov    r9d,DWORD PTR [r14+0x28]
  41aed2:	mov    rdi,r13
  41aed5:	call   424830 <xmlStrEqual@plt+0x208f0>
  41aeda:	mov    r8,QWORD PTR [r14+0x10]
  41aede:	jmp    41ae35 <xmlStrEqual@plt+0x16ef5>
  41aee3:	nop    DWORD PTR [rax+rax*1+0x0]
  41aee8:	mov    rdi,rbx
  41aeeb:	call   408770 <xmlStrEqual@plt+0x4830>
  41aef0:	mov    r9,rax
  41aef3:	test   rax,rax
  41aef6:	je     41ad57 <xmlStrEqual@plt+0x16e17>
  41aefc:	mov    r14,QWORD PTR [rax+0x8]
  41af00:	test   r14,r14
  41af03:	je     41ad57 <xmlStrEqual@plt+0x16e17>
  41af09:	mov    rdi,QWORD PTR [r14+0x8]
  41af0d:	test   rdi,rdi
  41af10:	je     41af2c <xmlStrEqual@plt+0x16fec>
  41af12:	cmp    QWORD PTR [r14+0x10],0x0
  41af17:	je     41af2c <xmlStrEqual@plt+0x16fec>
  41af19:	mov    QWORD PTR [rsp+0x18],rax
  41af1e:	call   43f870 <xmlStrEqual@plt+0x3b930>
  41af23:	mov    QWORD PTR [r14+0x20],rax
  41af27:	mov    r9,QWORD PTR [rsp+0x18]
  41af2c:	mov    eax,DWORD PTR [rsp+0x10]
  41af30:	mov    rsi,QWORD PTR [r14]
  41af33:	mov    rdi,QWORD PTR [rsp+0x8]
  41af38:	mov    DWORD PTR [rsi+0x48],eax
  41af3b:	mov    rdx,r9
  41af3e:	mov    QWORD PTR [rsp+0x10],r9
  41af43:	call   419d00 <xmlStrEqual@plt+0x15dc0>
  41af48:	cmp    eax,0x1
  41af4b:	mov    r9,QWORD PTR [rsp+0x10]
  41af50:	je     41af73 <xmlStrEqual@plt+0x17033>
  41af52:	xor    eax,eax
  41af54:	call   41b2f0 <xmlStrEqual@plt+0x173b0>
  41af59:	mov    r9,QWORD PTR [rsp+0x10]
  41af5e:	mov    rsi,QWORD PTR [r14]
  41af61:	mov    rdi,QWORD PTR [rsp+0x8]
  41af66:	mov    rdx,r9
  41af69:	call   419d00 <xmlStrEqual@plt+0x15dc0>
  41af6e:	mov    r9,QWORD PTR [rsp+0x10]
  41af73:	mov    rdi,QWORD PTR [r9]
  41af76:	mov    QWORD PTR [rsp+0x8],r9
  41af7b:	call   424d40 <xmlStrEqual@plt+0x20e00>
  41af80:	mov    rdi,QWORD PTR [r15+0x18]
  41af84:	mov    rsi,rax
  41af87:	call   43aca0 <xmlStrEqual@plt+0x36d60>
  41af8c:	test   rax,rax
  41af8f:	mov    rcx,rax
  41af92:	mov    r9,QWORD PTR [rsp+0x8]
  41af97:	je     41b080 <xmlStrEqual@plt+0x17140>
  41af9d:	mov    rdi,QWORD PTR [r14]
  41afa0:	mov    rsi,rcx
  41afa3:	mov    QWORD PTR [rsp+0x8],r9
  41afa8:	call   42dcf0 <xmlStrEqual@plt+0x29db0>
  41afad:	cmp    DWORD PTR [rbp+0x0],0x2
  41afb1:	mov    r9,QWORD PTR [rsp+0x8]
  41afb6:	jle    41aff2 <xmlStrEqual@plt+0x170b2>
  41afb8:	mov    rdi,QWORD PTR [r9]
  41afbb:	mov    QWORD PTR [rsp+0x10],r9
  41afc0:	call   424d40 <xmlStrEqual@plt+0x20e00>
  41afc5:	mov    rdi,rbx
  41afc8:	mov    QWORD PTR [rsp+0x8],rax
  41afcd:	call   436b90 <xmlStrEqual@plt+0x32c50>
  41afd2:	mov    rcx,QWORD PTR [rsp+0x8]
  41afd7:	mov    rdx,rax
  41afda:	lea    rsi,[rip+0x32077]        # 44d058 <xmlStrEqual@plt+0x49118>
  41afe1:	mov    edi,0x7
  41afe6:	xor    eax,eax
  41afe8:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  41afed:	mov    r9,QWORD PTR [rsp+0x10]
  41aff2:	cmp    DWORD PTR [r9+0x10],0x1
  41aff7:	jne    41ada5 <xmlStrEqual@plt+0x16e65>
  41affd:	mov    rdi,QWORD PTR [r9]
  41b000:	mov    QWORD PTR [rsp+0x8],r9
  41b005:	call   425890 <xmlStrEqual@plt+0x21950>
  41b00a:	cmp    ax,0x2
  41b00e:	mov    r9,QWORD PTR [rsp+0x8]
  41b013:	je     41b130 <xmlStrEqual@plt+0x171f0>
  41b019:	cmp    ax,0xa
  41b01d:	je     41b0ce <xmlStrEqual@plt+0x1718e>
  41b023:	cmp    DWORD PTR [rbp+0x0],0x2
  41b027:	jle    41ad57 <xmlStrEqual@plt+0x16e17>
  41b02d:	lea    rsi,[rip+0x3206c]        # 44d0a0 <xmlStrEqual@plt+0x49160>
  41b034:	mov    edi,0x7
  41b039:	xor    eax,eax
  41b03b:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  41b040:	jmp    41ad57 <xmlStrEqual@plt+0x16e17>
  41b045:	nop    DWORD PTR [rax]
  41b048:	cmp    DWORD PTR [rbp+0x0],0x2
  41b04c:	jle    41ad57 <xmlStrEqual@plt+0x16e17>
  41b052:	lea    rsi,[rip+0x3209f]        # 44d0f8 <xmlStrEqual@plt+0x491b8>
  41b059:	mov    edi,0x7
  41b05e:	xor    eax,eax
  41b060:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  41b065:	jmp    41ad57 <xmlStrEqual@plt+0x16e17>
  41b06a:	nop    WORD PTR [rax+rax*1+0x0]
  41b070:	mov    rsi,r12
  41b073:	mov    rdi,r13
  41b076:	call   41abe0 <xmlStrEqual@plt+0x16ca0>
  41b07b:	jmp    41ad57 <xmlStrEqual@plt+0x16e17>
  41b080:	mov    rdi,0x41abc0
  41b087:	mov    QWORD PTR [rsp+0x10],r9
  41b08c:	call   42dca0 <xmlStrEqual@plt+0x29d60>
  41b091:	mov    r9,QWORD PTR [rsp+0x10]
  41b096:	mov    QWORD PTR [rsp+0x8],rax
  41b09b:	mov    rdi,QWORD PTR [r9]
  41b09e:	call   424d40 <xmlStrEqual@plt+0x20e00>
  41b0a3:	mov    rdi,rax
  41b0a6:	call   403ed0 <strdup@plt>
  41b0ab:	mov    rcx,QWORD PTR [rsp+0x8]
  41b0b0:	mov    rdi,QWORD PTR [r15+0x18]
  41b0b4:	mov    rdx,rcx
  41b0b7:	mov    rsi,rax
  41b0ba:	call   43a0e0 <xmlStrEqual@plt+0x361a0>
  41b0bf:	mov    r9,QWORD PTR [rsp+0x10]
  41b0c4:	mov    rcx,QWORD PTR [rsp+0x8]
  41b0c9:	jmp    41af9d <xmlStrEqual@plt+0x1705d>
  41b0ce:	mov    rdi,QWORD PTR [r15+0x18]
  41b0d2:	lea    rsi,[rip+0x2dae0]        # 448bb9 <xmlStrEqual@plt+0x44c79>
  41b0d9:	mov    QWORD PTR [rsp+0x8],r9
  41b0de:	call   43aca0 <xmlStrEqual@plt+0x36d60>
  41b0e3:	test   rax,rax
  41b0e6:	mov    rbx,rax
  41b0e9:	mov    r9,QWORD PTR [rsp+0x8]
  41b0ee:	je     41b17f <xmlStrEqual@plt+0x1723f>
  41b0f4:	mov    rdi,QWORD PTR [r14]
  41b0f7:	mov    rsi,rbx
  41b0fa:	mov    QWORD PTR [rsp+0x8],r9
  41b0ff:	call   42dcf0 <xmlStrEqual@plt+0x29db0>
  41b104:	cmp    DWORD PTR [rbp+0x0],0x2
  41b108:	mov    r9,QWORD PTR [rsp+0x8]
  41b10d:	jle    41ada5 <xmlStrEqual@plt+0x16e65>
  41b113:	lea    rsi,[rip+0x32064]        # 44d17e <xmlStrEqual@plt+0x4923e>
  41b11a:	mov    edi,0x7
  41b11f:	xor    eax,eax
  41b121:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  41b126:	mov    r9,QWORD PTR [rsp+0x8]
  41b12b:	jmp    41ada5 <xmlStrEqual@plt+0x16e65>
  41b130:	mov    rdi,QWORD PTR [r15+0x18]
  41b134:	lea    rsi,[rip+0x2d578]        # 4486b3 <xmlStrEqual@plt+0x44773>
  41b13b:	mov    QWORD PTR [rsp+0x8],r9
  41b140:	call   43aca0 <xmlStrEqual@plt+0x36d60>
  41b145:	test   rax,rax
  41b148:	mov    rbx,rax
  41b14b:	mov    r9,QWORD PTR [rsp+0x8]
  41b150:	jne    41b0f4 <xmlStrEqual@plt+0x171b4>
  41b152:	call   42dc90 <xmlStrEqual@plt+0x29d50>
  41b157:	mov    rbx,rax
  41b15a:	lea    rdi,[rip+0x2d552]        # 4486b3 <xmlStrEqual@plt+0x44773>
  41b161:	call   403ed0 <strdup@plt>
  41b166:	mov    rdi,QWORD PTR [r15+0x18]
  41b16a:	mov    rdx,rbx
  41b16d:	mov    rsi,rax
  41b170:	call   43a0e0 <xmlStrEqual@plt+0x361a0>
  41b175:	mov    r9,QWORD PTR [rsp+0x8]
  41b17a:	jmp    41b0f4 <xmlStrEqual@plt+0x171b4>
  41b17f:	call   42dc90 <xmlStrEqual@plt+0x29d50>
  41b184:	mov    rbx,rax
  41b187:	lea    rdi,[rip+0x2da2b]        # 448bb9 <xmlStrEqual@plt+0x44c79>
  41b18e:	jmp    41b161 <xmlStrEqual@plt+0x17221>
  41b190:	endbr64 
  41b194:	push   rbp
  41b195:	mov    edx,0x800
  41b19a:	lea    rsi,[rip+0x5345f]        # 46e600 <xmlStrEqual@plt+0x6a6c0>
  41b1a1:	push   rbx
  41b1a2:	mov    rbx,rdi
  41b1a5:	lea    rdi,[rip+0x53414]        # 46e5c0 <xmlStrEqual@plt+0x6a680>
  41b1ac:	sub    rsp,0x68
  41b1b0:	mov    rax,QWORD PTR fs:0x28
  41b1b9:	mov    QWORD PTR [rsp+0x58],rax
  41b1be:	xor    eax,eax
  41b1c0:	call   430740 <xmlStrEqual@plt+0x2c800>
  41b1c5:	mov    esi,0x64
  41b1ca:	lea    rdi,[rip+0x533ef]        # 46e5c0 <xmlStrEqual@plt+0x6a680>
  41b1d1:	call   430990 <xmlStrEqual@plt+0x2ca50>
  41b1d6:	mov    edi,DWORD PTR [rbx+0x18]
  41b1d9:	lea    rsi,[rip+0x533e0]        # 46e5c0 <xmlStrEqual@plt+0x6a680>
  41b1e0:	call   438c00 <xmlStrEqual@plt+0x34cc0>
  41b1e5:	cmp    eax,0x1
  41b1e8:	je     41b220 <xmlStrEqual@plt+0x172e0>
  41b1ea:	lea    rsi,[rip+0x31f67]        # 44d158 <xmlStrEqual@plt+0x49218>
  41b1f1:	mov    edi,0x3
  41b1f6:	xor    eax,eax
  41b1f8:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  41b1fd:	xor    ebx,ebx
  41b1ff:	mov    rcx,QWORD PTR [rsp+0x58]
  41b204:	xor    rcx,QWORD PTR fs:0x28
  41b20d:	mov    eax,ebx
  41b20f:	jne    41b271 <xmlStrEqual@plt+0x17331>
  41b211:	add    rsp,0x68
  41b215:	pop    rbx
  41b216:	pop    rbp
  41b217:	ret    
  41b218:	nop    DWORD PTR [rax+rax*1+0x0]
  41b220:	mov    rax,QWORD PTR [rip+0x533d1]        # 46e5f8 <xmlStrEqual@plt+0x6a6b8>
  41b227:	mov    rbp,rsp
  41b22a:	sub    rax,QWORD PTR [rip+0x533bf]        # 46e5f0 <xmlStrEqual@plt+0x6a6b0>
  41b231:	mov    rsi,rbp
  41b234:	lea    rdi,[rip+0x53385]        # 46e5c0 <xmlStrEqual@plt+0x6a680>
  41b23b:	mov    WORD PTR [rip+0x53398],ax        # 46e5da <xmlStrEqual@plt+0x6a69a>
  41b242:	call   4364e0 <xmlStrEqual@plt+0x325a0>
  41b247:	mov    ebx,eax
  41b249:	cmp    eax,0x1
  41b24c:	je     41b258 <xmlStrEqual@plt+0x17318>
  41b24e:	xor    ebx,ebx
  41b250:	jmp    41b1ff <xmlStrEqual@plt+0x172bf>
  41b252:	nop    WORD PTR [rax+rax*1+0x0]
  41b258:	mov    rsi,rbp
  41b25b:	lea    rdi,[rip+0x5335e]        # 46e5c0 <xmlStrEqual@plt+0x6a680>
  41b262:	mov    DWORD PTR [rsp+0x48],0x0
  41b26a:	call   41ac90 <xmlStrEqual@plt+0x16d50>
  41b26f:	jmp    41b1ff <xmlStrEqual@plt+0x172bf>
  41b271:	call   403c00 <__stack_chk_fail@plt>
  41b276:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41b280:	endbr64 
  41b284:	push   r12
  41b286:	push   rbp
  41b287:	mov    ebp,esi
  41b289:	push   rbx
  41b28a:	mov    rbx,rdi
  41b28d:	mov    r12d,DWORD PTR [rdi+0x8]
  41b291:	call   43f460 <xmlStrEqual@plt+0x3b520>
  41b296:	test   rax,rax
  41b299:	je     41b2e0 <xmlStrEqual@plt+0x173a0>
  41b29b:	mov    r8,rax
  41b29e:	mov    ecx,DWORD PTR [r8+0x18]
  41b2a2:	xor    eax,eax
  41b2a4:	test   ecx,ecx
  41b2a6:	jne    41b2b0 <xmlStrEqual@plt+0x17370>
  41b2a8:	pop    rbx
  41b2a9:	pop    rbp
  41b2aa:	pop    r12
  41b2ac:	ret    
  41b2ad:	nop    DWORD PTR [rax]
  41b2b0:	sub    rsp,0x8
  41b2b4:	add    r12d,0xa
  41b2b8:	push   r12
  41b2ba:	mov    esi,DWORD PTR [rbx+0x8]
  41b2bd:	xor    edx,edx
  41b2bf:	mov    edi,ebp
  41b2c1:	mov    r9d,0x64
  41b2c7:	xor    ecx,ecx
  41b2c9:	call   4383c0 <xmlStrEqual@plt+0x34480>
  41b2ce:	pop    rax
  41b2cf:	pop    rdx
  41b2d0:	pop    rbx
  41b2d1:	pop    rbp
  41b2d2:	mov    eax,0x1
  41b2d7:	pop    r12
  41b2d9:	ret    
  41b2da:	nop    WORD PTR [rax+rax*1+0x0]
  41b2e0:	pop    rbx
  41b2e1:	pop    rbp
  41b2e2:	xor    eax,eax
  41b2e4:	pop    r12
  41b2e6:	ret    
  41b2e7:	nop    WORD PTR [rax+rax*1+0x0]
  41b2f0:	endbr64 
  41b2f4:	push   rbx
  41b2f5:	mov    rax,0x4697e0
  41b2fc:	mov    rbx,QWORD PTR [rax+0x70]
  41b300:	mov    rdi,QWORD PTR [rbx+0x18]
  41b304:	call   43add0 <xmlStrEqual@plt+0x36e90>
  41b309:	mov    rdi,0x42e2b0
  41b310:	call   43a0a0 <xmlStrEqual@plt+0x36160>
  41b315:	mov    QWORD PTR [rbx+0x18],rax
  41b319:	mov    eax,0x1
  41b31e:	pop    rbx
  41b31f:	ret    
  41b320:	endbr64 
  41b324:	push   r14
  41b326:	push   r13
  41b328:	push   r12
  41b32a:	push   rbp
  41b32b:	push   rbx
  41b32c:	mov    ebx,esi
  41b32e:	call   424d40 <xmlStrEqual@plt+0x20e00>
  41b333:	test   bl,bl
  41b335:	jne    41b470 <xmlStrEqual@plt+0x17530>
  41b33b:	mov    rbp,rax
  41b33e:	mov    ecx,0xa
  41b343:	lea    rdi,[rip+0x2d369]        # 4486b3 <xmlStrEqual@plt+0x44773>
  41b34a:	mov    rsi,rbp
  41b34d:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  41b34f:	mov    rax,0x4697e0
  41b356:	mov    r12,0x469e3c
  41b35d:	mov    rbx,QWORD PTR [rax+0x70]
  41b361:	mov    edx,DWORD PTR [r12]
  41b365:	seta   al
  41b368:	sbb    al,0x0
  41b36a:	test   al,al
  41b36c:	jne    41b3e0 <xmlStrEqual@plt+0x174a0>
  41b36e:	cmp    edx,0x2
  41b371:	jle    41b384 <xmlStrEqual@plt+0x17444>
  41b373:	lea    rsi,[rip+0x31e1e]        # 44d198 <xmlStrEqual@plt+0x49258>
  41b37a:	mov    edi,0x7
  41b37f:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  41b384:	mov    rdi,QWORD PTR [rbx+0x18]
  41b388:	lea    rsi,[rip+0x2d324]        # 4486b3 <xmlStrEqual@plt+0x44773>
  41b38f:	call   43aca0 <xmlStrEqual@plt+0x36d60>
  41b394:	mov    rbp,rax
  41b397:	test   rax,rax
  41b39a:	je     41b3ca <xmlStrEqual@plt+0x1748a>
  41b39c:	mov    r8d,DWORD PTR [rax+0x18]
  41b3a0:	test   r8d,r8d
  41b3a3:	jle    41b3ca <xmlStrEqual@plt+0x1748a>
  41b3a5:	add    rbx,0x20
  41b3a9:	mov    rax,QWORD PTR [rbp+0x8]
  41b3ad:	mov    rdi,rbx
  41b3b0:	mov    rsi,QWORD PTR [rax+0x10]
  41b3b4:	call   41a6f0 <xmlStrEqual@plt+0x167b0>
  41b3b9:	mov    rdi,QWORD PTR [rax]
  41b3bc:	xor    esi,esi
  41b3be:	call   41b320 <xmlStrEqual@plt+0x173e0>
  41b3c3:	mov    edi,DWORD PTR [rbp+0x18]
  41b3c6:	test   edi,edi
  41b3c8:	jg     41b3a9 <xmlStrEqual@plt+0x17469>
  41b3ca:	mov    eax,0x1
  41b3cf:	pop    rbx
  41b3d0:	pop    rbp
  41b3d1:	pop    r12
  41b3d3:	pop    r13
  41b3d5:	pop    r14
  41b3d7:	ret    
  41b3d8:	nop    DWORD PTR [rax+rax*1+0x0]
  41b3e0:	mov    ecx,0x5
  41b3e5:	lea    rdi,[rip+0x2d7cd]        # 448bb9 <xmlStrEqual@plt+0x44c79>
  41b3ec:	mov    rsi,rbp
  41b3ef:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  41b3f1:	seta   al
  41b3f4:	sbb    al,0x0
  41b3f6:	test   al,al
  41b3f8:	je     41b480 <xmlStrEqual@plt+0x17540>
  41b3fe:	cmp    edx,0x2
  41b401:	jle    41b419 <xmlStrEqual@plt+0x174d9>
  41b403:	mov    rdx,rbp
  41b406:	lea    rsi,[rip+0x31e5b]        # 44d268 <xmlStrEqual@plt+0x49328>
  41b40d:	mov    edi,0x7
  41b412:	xor    eax,eax
  41b414:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  41b419:	mov    rdi,QWORD PTR [rbx+0x18]
  41b41d:	mov    rsi,rbp
  41b420:	call   43aca0 <xmlStrEqual@plt+0x36d60>
  41b425:	mov    r13,rax
  41b428:	test   rax,rax
  41b42b:	je     41b590 <xmlStrEqual@plt+0x17650>
  41b431:	mov    edx,DWORD PTR [rax+0x18]
  41b434:	test   edx,edx
  41b436:	je     41b5b8 <xmlStrEqual@plt+0x17678>
  41b43c:	mov    rax,QWORD PTR [rax+0x8]
  41b440:	mov    rsi,QWORD PTR [rax+0x10]
  41b444:	lea    rdi,[rbx+0x20]
  41b448:	call   41a6f0 <xmlStrEqual@plt+0x167b0>
  41b44d:	cmp    DWORD PTR [rax+0x10],0x1
  41b451:	je     41b4f0 <xmlStrEqual@plt+0x175b0>
  41b457:	mov    rdi,QWORD PTR [rbx+0x18]
  41b45b:	mov    rsi,rbp
  41b45e:	call   43ab20 <xmlStrEqual@plt+0x36be0>
  41b463:	jmp    41b3ca <xmlStrEqual@plt+0x1748a>
  41b468:	nop    DWORD PTR [rax+rax*1+0x0]
  41b470:	pop    rbx
  41b471:	pop    rbp
  41b472:	pop    r12
  41b474:	pop    r13
  41b476:	xor    eax,eax
  41b478:	pop    r14
  41b47a:	jmp    41b2f0 <xmlStrEqual@plt+0x173b0>
  41b47f:	nop
  41b480:	cmp    edx,0x2
  41b483:	jle    41b496 <xmlStrEqual@plt+0x17556>
  41b485:	lea    rsi,[rip+0x31d74]        # 44d200 <xmlStrEqual@plt+0x492c0>
  41b48c:	mov    edi,0x7
  41b491:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  41b496:	mov    rdi,QWORD PTR [rbx+0x18]
  41b49a:	lea    rsi,[rip+0x2d718]        # 448bb9 <xmlStrEqual@plt+0x44c79>
  41b4a1:	call   43aca0 <xmlStrEqual@plt+0x36d60>
  41b4a6:	mov    rbp,rax
  41b4a9:	test   rax,rax
  41b4ac:	je     41b3ca <xmlStrEqual@plt+0x1748a>
  41b4b2:	mov    esi,DWORD PTR [rax+0x18]
  41b4b5:	test   esi,esi
  41b4b7:	jle    41b3ca <xmlStrEqual@plt+0x1748a>
  41b4bd:	add    rbx,0x20
  41b4c1:	mov    rax,QWORD PTR [rbp+0x8]
  41b4c5:	mov    rdi,rbx
  41b4c8:	mov    rsi,QWORD PTR [rax+0x10]
  41b4cc:	call   41a6f0 <xmlStrEqual@plt+0x167b0>
  41b4d1:	mov    rdi,QWORD PTR [rax]
  41b4d4:	xor    esi,esi
  41b4d6:	call   41b320 <xmlStrEqual@plt+0x173e0>
  41b4db:	mov    ecx,DWORD PTR [rbp+0x18]
  41b4de:	test   ecx,ecx
  41b4e0:	jg     41b4c1 <xmlStrEqual@plt+0x17581>
  41b4e2:	jmp    41b3ca <xmlStrEqual@plt+0x1748a>
  41b4e7:	nop    WORD PTR [rax+rax*1+0x0]
  41b4f0:	mov    rdi,QWORD PTR [rax]
  41b4f3:	call   425890 <xmlStrEqual@plt+0x21950>
  41b4f8:	cmp    ax,0x2
  41b4fc:	je     41b560 <xmlStrEqual@plt+0x17620>
  41b4fe:	cmp    ax,0xa
  41b502:	jne    41b548 <xmlStrEqual@plt+0x17608>
  41b504:	mov    rdi,QWORD PTR [rbx+0x18]
  41b508:	lea    rsi,[rip+0x2d6aa]        # 448bb9 <xmlStrEqual@plt+0x44c79>
  41b50f:	call   43aca0 <xmlStrEqual@plt+0x36d60>
  41b514:	mov    r14,rax
  41b517:	mov    r12,QWORD PTR [r13+0x8]
  41b51b:	cmp    r13,r12
  41b51e:	je     41b457 <xmlStrEqual@plt+0x17517>
  41b524:	nop    DWORD PTR [rax+0x0]
  41b528:	mov    rdi,QWORD PTR [r12+0x10]
  41b52d:	mov    rsi,r14
  41b530:	call   42e170 <xmlStrEqual@plt+0x2a230>
  41b535:	mov    r12,QWORD PTR [r12+0x8]
  41b53a:	cmp    r13,r12
  41b53d:	jne    41b528 <xmlStrEqual@plt+0x175e8>
  41b53f:	jmp    41b457 <xmlStrEqual@plt+0x17517>
  41b544:	nop    DWORD PTR [rax+0x0]
  41b548:	mov    eax,DWORD PTR [r12]
  41b54c:	test   eax,eax
  41b54e:	jg     41b575 <xmlStrEqual@plt+0x17635>
  41b550:	xor    eax,eax
  41b552:	jmp    41b3cf <xmlStrEqual@plt+0x1748f>
  41b557:	nop    WORD PTR [rax+rax*1+0x0]
  41b560:	mov    rdi,QWORD PTR [rbx+0x18]
  41b564:	lea    rsi,[rip+0x2d148]        # 4486b3 <xmlStrEqual@plt+0x44773>
  41b56b:	call   43aca0 <xmlStrEqual@plt+0x36d60>
  41b570:	mov    r14,rax
  41b573:	jmp    41b517 <xmlStrEqual@plt+0x175d7>
  41b575:	xor    eax,eax
  41b577:	lea    rsi,[rip+0x31d82]        # 44d300 <xmlStrEqual@plt+0x493c0>
  41b57e:	mov    edi,0x5
  41b583:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  41b588:	xor    eax,eax
  41b58a:	jmp    41b3cf <xmlStrEqual@plt+0x1748f>
  41b58f:	nop
  41b590:	cmp    DWORD PTR [r12],0x1
  41b595:	jle    41b550 <xmlStrEqual@plt+0x17610>
  41b597:	xor    eax,eax
  41b599:	mov    rdx,rbp
  41b59c:	lea    rsi,[rip+0x31d1d]        # 44d2c0 <xmlStrEqual@plt+0x49380>
  41b5a3:	mov    edi,0x6
  41b5a8:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  41b5ad:	xor    eax,eax
  41b5af:	jmp    41b3cf <xmlStrEqual@plt+0x1748f>
  41b5b4:	nop    DWORD PTR [rax+0x0]
  41b5b8:	xor    esi,esi
  41b5ba:	jmp    41b444 <xmlStrEqual@plt+0x17504>
  41b5bf:	nop
  41b5c0:	endbr64 
  41b5c4:	mov    rax,0x4697e0
  41b5cb:	mov    rax,QWORD PTR [rax+0x70]
  41b5cf:	ret    
  41b5d0:	endbr64 
  41b5d4:	push   r15
  41b5d6:	push   r14
  41b5d8:	push   r13
  41b5da:	push   r12
  41b5dc:	push   rbp
  41b5dd:	push   rbx
  41b5de:	mov    rbx,rdi
  41b5e1:	sub    rsp,0x18
  41b5e5:	mov    rax,0x4697e0
  41b5ec:	mov    QWORD PTR [rsp+0x8],rdi
  41b5f1:	mov    r12,QWORD PTR [rax+0x70]
  41b5f5:	call   425890 <xmlStrEqual@plt+0x21950>
  41b5fa:	movzx  r13d,ax
  41b5fe:	test   r13d,r13d
  41b601:	jne    41b620 <xmlStrEqual@plt+0x176e0>
  41b603:	xor    r14d,r14d
  41b606:	add    rsp,0x18
  41b60a:	pop    rbx
  41b60b:	pop    rbp
  41b60c:	pop    r12
  41b60e:	pop    r13
  41b610:	mov    eax,r14d
  41b613:	pop    r14
  41b615:	pop    r15
  41b617:	ret    
  41b618:	nop    DWORD PTR [rax+rax*1+0x0]
  41b620:	mov    rsi,rbx
  41b623:	lea    rdi,[rip+0x31b65]        # 44d18f <xmlStrEqual@plt+0x4924f>
  41b62a:	call   430410 <xmlStrEqual@plt+0x2c4d0>
  41b62f:	mov    r14d,eax
  41b632:	cmp    eax,0x1
  41b635:	jne    41b603 <xmlStrEqual@plt+0x176c3>
  41b637:	mov    rax,QWORD PTR [r12+0x38]
  41b63c:	mov    ebp,r13d
  41b63f:	mov    rbx,QWORD PTR [rax+0x8]
  41b643:	cmp    rax,rbx
  41b646:	jne    41b65b <xmlStrEqual@plt+0x1771b>
  41b648:	jmp    41b606 <xmlStrEqual@plt+0x176c6>
  41b64a:	nop    WORD PTR [rax+rax*1+0x0]
  41b650:	mov    rbx,QWORD PTR [rbx+0x8]
  41b654:	cmp    QWORD PTR [r12+0x38],rbx
  41b659:	je     41b606 <xmlStrEqual@plt+0x176c6>
  41b65b:	mov    r15,QWORD PTR [rbx+0x10]
  41b65f:	mov    rdi,r15
  41b662:	call   425890 <xmlStrEqual@plt+0x21950>
  41b667:	cmp    bp,ax
  41b66a:	jne    41b650 <xmlStrEqual@plt+0x17710>
  41b66c:	sub    rsp,0x8
  41b670:	push   0xfe
  41b675:	mov    rax,0x4757d8
  41b67c:	xor    ecx,ecx
  41b67e:	mov    esi,DWORD PTR [rax]
  41b680:	mov    rdx,r15
  41b683:	xor    r9d,r9d
  41b686:	xor    r8d,r8d
  41b689:	mov    edi,r13d
  41b68c:	call   438490 <xmlStrEqual@plt+0x34550>
  41b691:	pop    rdx
  41b692:	pop    rcx
  41b693:	cmp    eax,0x1
  41b696:	je     41b650 <xmlStrEqual@plt+0x17710>
  41b698:	mov    rdi,QWORD PTR [rsp+0x8]
  41b69d:	xor    r14d,r14d
  41b6a0:	call   41b5d0 <xmlStrEqual@plt+0x17690>
  41b6a5:	jmp    41b606 <xmlStrEqual@plt+0x176c6>
  41b6aa:	nop    WORD PTR [rax+rax*1+0x0]
  41b6b0:	endbr64 
  41b6b4:	push   r15
  41b6b6:	push   r14
  41b6b8:	push   r13
  41b6ba:	push   r12
  41b6bc:	push   rbp
  41b6bd:	push   rbx
  41b6be:	mov    ebx,edi
  41b6c0:	mov    rdi,rsi
  41b6c3:	sub    rsp,0x8
  41b6c7:	call   425670 <xmlStrEqual@plt+0x21730>
  41b6cc:	mov    rdi,rax
  41b6cf:	mov    r13,rax
  41b6d2:	call   425890 <xmlStrEqual@plt+0x21950>
  41b6d7:	movzx  r14d,ax
  41b6db:	test   r14d,r14d
  41b6de:	je     41b78b <xmlStrEqual@plt+0x1784b>
  41b6e4:	test   ebx,ebx
  41b6e6:	je     41b718 <xmlStrEqual@plt+0x177d8>
  41b6e8:	cmp    ebx,0x3
  41b6eb:	je     41b708 <xmlStrEqual@plt+0x177c8>
  41b6ed:	add    rsp,0x8
  41b6f1:	pop    rbx
  41b6f2:	pop    rbp
  41b6f3:	pop    r12
  41b6f5:	pop    r13
  41b6f7:	pop    r14
  41b6f9:	mov    eax,0x1
  41b6fe:	pop    r15
  41b700:	ret    
  41b701:	nop    DWORD PTR [rax+0x0]
  41b708:	mov    rdi,r13
  41b70b:	call   41b5d0 <xmlStrEqual@plt+0x17690>
  41b710:	jmp    41b6ed <xmlStrEqual@plt+0x177ad>
  41b712:	nop    WORD PTR [rax+rax*1+0x0]
  41b718:	mov    rax,0x4697e0
  41b71f:	mov    r12d,r14d
  41b722:	mov    r15,QWORD PTR [rax+0x70]
  41b726:	mov    rax,QWORD PTR [r15+0x38]
  41b72a:	mov    r10d,DWORD PTR [rax+0x18]
  41b72e:	test   r10d,r10d
  41b731:	je     41b7a0 <xmlStrEqual@plt+0x17860>
  41b733:	mov    rbx,QWORD PTR [rax+0x8]
  41b737:	cmp    rax,rbx
  41b73a:	jne    41b752 <xmlStrEqual@plt+0x17812>
  41b73c:	jmp    41b7cb <xmlStrEqual@plt+0x1788b>
  41b741:	nop    DWORD PTR [rax+0x0]
  41b748:	mov    rbx,QWORD PTR [rbx+0x8]
  41b74c:	cmp    QWORD PTR [r15+0x38],rbx
  41b750:	je     41b7cb <xmlStrEqual@plt+0x1788b>
  41b752:	mov    rbp,QWORD PTR [rbx+0x10]
  41b756:	mov    rdi,rbp
  41b759:	call   425890 <xmlStrEqual@plt+0x21950>
  41b75e:	cmp    r12w,ax
  41b762:	jne    41b748 <xmlStrEqual@plt+0x17808>
  41b764:	push   0x0
  41b766:	xor    esi,esi
  41b768:	mov    edi,r14d
  41b76b:	push   rbp
  41b76c:	mov    r9,r13
  41b76f:	mov    r8d,0x1
  41b775:	mov    ecx,0x64
  41b77a:	mov    edx,0x64
  41b77f:	call   437f70 <xmlStrEqual@plt+0x34030>
  41b784:	pop    rsi
  41b785:	pop    rdi
  41b786:	cmp    eax,0x1
  41b789:	je     41b748 <xmlStrEqual@plt+0x17808>
  41b78b:	add    rsp,0x8
  41b78f:	pop    rbx
  41b790:	pop    rbp
  41b791:	pop    r12
  41b793:	pop    r13
  41b795:	pop    r14
  41b797:	xor    eax,eax
  41b799:	pop    r15
  41b79b:	ret    
  41b79c:	nop    DWORD PTR [rax+0x0]
  41b7a0:	push   0x0
  41b7a2:	mov    r9,r13
  41b7a5:	mov    r8d,0x1
  41b7ab:	push   0x0
  41b7ad:	mov    ecx,0x64
  41b7b2:	mov    edx,0x64
  41b7b7:	xor    esi,esi
  41b7b9:	movzx  edi,r14w
  41b7bd:	call   437f70 <xmlStrEqual@plt+0x34030>
  41b7c2:	pop    r8
  41b7c4:	pop    r9
  41b7c6:	cmp    eax,0x1
  41b7c9:	jne    41b78b <xmlStrEqual@plt+0x1784b>
  41b7cb:	push   0x0
  41b7cd:	xor    r9d,r9d
  41b7d0:	mov    ecx,0x63
  41b7d5:	push   r13
  41b7d7:	mov    edx,0xfe
  41b7dc:	xor    esi,esi
  41b7de:	mov    edi,r14d
  41b7e1:	mov    r8d,0x1
  41b7e7:	call   437f70 <xmlStrEqual@plt+0x34030>
  41b7ec:	pop    rdx
  41b7ed:	cmp    eax,0x1
  41b7f0:	pop    rcx
  41b7f1:	sete   al
  41b7f4:	add    rsp,0x8
  41b7f8:	pop    rbx
  41b7f9:	pop    rbp
  41b7fa:	pop    r12
  41b7fc:	pop    r13
  41b7fe:	pop    r14
  41b800:	movzx  eax,al
  41b803:	pop    r15
  41b805:	ret    
  41b806:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41b810:	endbr64 
  41b814:	push   r15
  41b816:	push   r14
  41b818:	push   r13
  41b81a:	push   r12
  41b81c:	push   rbp
  41b81d:	push   rbx
  41b81e:	mov    rbx,rdi
  41b821:	sub    rsp,0x18
  41b825:	mov    rax,0x4697e0
  41b82c:	mov    QWORD PTR [rsp+0x8],rdi
  41b831:	mov    r12,QWORD PTR [rax+0x70]
  41b835:	call   425890 <xmlStrEqual@plt+0x21950>
  41b83a:	movzx  r13d,ax
  41b83e:	test   r13d,r13d
  41b841:	jne    41b860 <xmlStrEqual@plt+0x17920>
  41b843:	xor    r14d,r14d
  41b846:	add    rsp,0x18
  41b84a:	pop    rbx
  41b84b:	pop    rbp
  41b84c:	pop    r12
  41b84e:	pop    r13
  41b850:	mov    eax,r14d
  41b853:	pop    r14
  41b855:	pop    r15
  41b857:	ret    
  41b858:	nop    DWORD PTR [rax+rax*1+0x0]
  41b860:	mov    rsi,rbx
  41b863:	lea    rdi,[rip+0x31925]        # 44d18f <xmlStrEqual@plt+0x4924f>
  41b86a:	call   430200 <xmlStrEqual@plt+0x2c2c0>
  41b86f:	mov    r14d,eax
  41b872:	cmp    eax,0x1
  41b875:	jne    41b843 <xmlStrEqual@plt+0x17903>
  41b877:	mov    rax,QWORD PTR [r12+0x38]
  41b87c:	mov    ebp,r13d
  41b87f:	mov    rbx,QWORD PTR [rax+0x8]
  41b883:	cmp    rax,rbx
  41b886:	jne    41b89b <xmlStrEqual@plt+0x1795b>
  41b888:	jmp    41b846 <xmlStrEqual@plt+0x17906>
  41b88a:	nop    WORD PTR [rax+rax*1+0x0]
  41b890:	mov    rbx,QWORD PTR [rbx+0x8]
  41b894:	cmp    QWORD PTR [r12+0x38],rbx
  41b899:	je     41b846 <xmlStrEqual@plt+0x17906>
  41b89b:	mov    r15,QWORD PTR [rbx+0x10]
  41b89f:	mov    rdi,r15
  41b8a2:	call   425890 <xmlStrEqual@plt+0x21950>
  41b8a7:	cmp    bp,ax
  41b8aa:	jne    41b890 <xmlStrEqual@plt+0x17950>
  41b8ac:	sub    rsp,0x8
  41b8b0:	push   0xfe
  41b8b5:	mov    rax,0x4757d8
  41b8bc:	xor    ecx,ecx
  41b8be:	mov    esi,DWORD PTR [rax]
  41b8c0:	mov    rdx,r15
  41b8c3:	xor    r9d,r9d
  41b8c6:	xor    r8d,r8d
  41b8c9:	mov    edi,r13d
  41b8cc:	call   4383c0 <xmlStrEqual@plt+0x34480>
  41b8d1:	pop    rdx
  41b8d2:	pop    rcx
  41b8d3:	cmp    eax,0x1
  41b8d6:	je     41b890 <xmlStrEqual@plt+0x17950>
  41b8d8:	mov    rdi,QWORD PTR [rsp+0x8]
  41b8dd:	xor    r14d,r14d
  41b8e0:	call   41b5d0 <xmlStrEqual@plt+0x17690>
  41b8e5:	jmp    41b846 <xmlStrEqual@plt+0x17906>
  41b8ea:	nop    WORD PTR [rax+rax*1+0x0]
  41b8f0:	endbr64 
  41b8f4:	push   r15
  41b8f6:	push   r14
  41b8f8:	push   r13
  41b8fa:	push   r12
  41b8fc:	push   rbp
  41b8fd:	push   rbx
  41b8fe:	mov    ebx,edi
  41b900:	mov    rdi,rsi
  41b903:	sub    rsp,0x8
  41b907:	call   425670 <xmlStrEqual@plt+0x21730>
  41b90c:	mov    rdi,rax
  41b90f:	mov    r13,rax
  41b912:	call   425890 <xmlStrEqual@plt+0x21950>
  41b917:	movzx  r14d,ax
  41b91b:	test   r14d,r14d
  41b91e:	je     41b9cb <xmlStrEqual@plt+0x17a8b>
  41b924:	test   ebx,ebx
  41b926:	je     41b958 <xmlStrEqual@plt+0x17a18>
  41b928:	cmp    ebx,0x3
  41b92b:	je     41b948 <xmlStrEqual@plt+0x17a08>
  41b92d:	add    rsp,0x8
  41b931:	pop    rbx
  41b932:	pop    rbp
  41b933:	pop    r12
  41b935:	pop    r13
  41b937:	pop    r14
  41b939:	mov    eax,0x1
  41b93e:	pop    r15
  41b940:	ret    
  41b941:	nop    DWORD PTR [rax+0x0]
  41b948:	mov    rdi,r13
  41b94b:	call   41b810 <xmlStrEqual@plt+0x178d0>
  41b950:	jmp    41b92d <xmlStrEqual@plt+0x179ed>
  41b952:	nop    WORD PTR [rax+rax*1+0x0]
  41b958:	mov    rax,0x4697e0
  41b95f:	mov    r12d,r14d
  41b962:	mov    r15,QWORD PTR [rax+0x70]
  41b966:	mov    rax,QWORD PTR [r15+0x38]
  41b96a:	mov    r10d,DWORD PTR [rax+0x18]
  41b96e:	test   r10d,r10d
  41b971:	je     41b9e0 <xmlStrEqual@plt+0x17aa0>
  41b973:	mov    rbx,QWORD PTR [rax+0x8]
  41b977:	cmp    rax,rbx
  41b97a:	jne    41b992 <xmlStrEqual@plt+0x17a52>
  41b97c:	jmp    41ba0b <xmlStrEqual@plt+0x17acb>
  41b981:	nop    DWORD PTR [rax+0x0]
  41b988:	mov    rbx,QWORD PTR [rbx+0x8]
  41b98c:	cmp    QWORD PTR [r15+0x38],rbx
  41b990:	je     41ba0b <xmlStrEqual@plt+0x17acb>
  41b992:	mov    rbp,QWORD PTR [rbx+0x10]
  41b996:	mov    rdi,rbp
  41b999:	call   425890 <xmlStrEqual@plt+0x21950>
  41b99e:	cmp    r12w,ax
  41b9a2:	jne    41b988 <xmlStrEqual@plt+0x17a48>
  41b9a4:	push   0x0
  41b9a6:	xor    esi,esi
  41b9a8:	mov    edi,r14d
  41b9ab:	push   rbp
  41b9ac:	mov    r9,r13
  41b9af:	mov    r8d,0x1
  41b9b5:	mov    ecx,0x64
  41b9ba:	mov    edx,0x64
  41b9bf:	call   437ed0 <xmlStrEqual@plt+0x33f90>
  41b9c4:	pop    rsi
  41b9c5:	pop    rdi
  41b9c6:	cmp    eax,0x1
  41b9c9:	je     41b988 <xmlStrEqual@plt+0x17a48>
  41b9cb:	add    rsp,0x8
  41b9cf:	pop    rbx
  41b9d0:	pop    rbp
  41b9d1:	pop    r12
  41b9d3:	pop    r13
  41b9d5:	pop    r14
  41b9d7:	xor    eax,eax
  41b9d9:	pop    r15
  41b9db:	ret    
  41b9dc:	nop    DWORD PTR [rax+0x0]
  41b9e0:	push   0x0
  41b9e2:	mov    r9,r13
  41b9e5:	mov    r8d,0x1
  41b9eb:	push   0x0
  41b9ed:	mov    ecx,0x64
  41b9f2:	mov    edx,0x64
  41b9f7:	xor    esi,esi
  41b9f9:	movzx  edi,r14w
  41b9fd:	call   437ed0 <xmlStrEqual@plt+0x33f90>
  41ba02:	pop    r8
  41ba04:	pop    r9
  41ba06:	cmp    eax,0x1
  41ba09:	jne    41b9cb <xmlStrEqual@plt+0x17a8b>
  41ba0b:	push   0x0
  41ba0d:	xor    r9d,r9d
  41ba10:	mov    ecx,0x63
  41ba15:	push   r13
  41ba17:	mov    edx,0xfe
  41ba1c:	xor    esi,esi
  41ba1e:	mov    edi,r14d
  41ba21:	mov    r8d,0x1
  41ba27:	call   437ed0 <xmlStrEqual@plt+0x33f90>
  41ba2c:	pop    rdx
  41ba2d:	cmp    eax,0x1
  41ba30:	pop    rcx
  41ba31:	sete   al
  41ba34:	add    rsp,0x8
  41ba38:	pop    rbx
  41ba39:	pop    rbp
  41ba3a:	pop    r12
  41ba3c:	pop    r13
  41ba3e:	pop    r14
  41ba40:	movzx  eax,al
  41ba43:	pop    r15
  41ba45:	ret    
  41ba46:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41ba50:	endbr64 
  41ba54:	push   rbx
  41ba55:	mov    ebx,edi
  41ba57:	lea    rdi,[rip+0x31731]        # 44d18f <xmlStrEqual@plt+0x4924f>
  41ba5e:	call   403850 <if_nametoindex@plt>
  41ba63:	sub    rsp,0x8
  41ba67:	push   0x64
  41ba69:	xor    ecx,ecx
  41ba6b:	xor    edx,edx
  41ba6d:	mov    edi,ebx
  41ba6f:	mov    r9d,0x64
  41ba75:	xor    r8d,r8d
  41ba78:	mov    esi,eax
  41ba7a:	call   4383c0 <xmlStrEqual@plt+0x34480>
  41ba7f:	pop    rdx
  41ba80:	pop    rcx
  41ba81:	pop    rbx
  41ba82:	ret    
  41ba83:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  41ba8e:	xchg   ax,ax
  41ba90:	endbr64 
  41ba94:	push   r14
  41ba96:	push   r13
  41ba98:	push   r12
  41ba9a:	push   rbp
  41ba9b:	mov    rbp,rsi
  41ba9e:	push   rbx
  41ba9f:	mov    rbx,rdi
  41baa2:	mov    r12d,DWORD PTR [rdi+0x8]
  41baa6:	mov    rdi,rsi
  41baa9:	call   425890 <xmlStrEqual@plt+0x21950>
  41baae:	cmp    ax,0x2
  41bab2:	je     41bb20 <xmlStrEqual@plt+0x17be0>
  41bab4:	cmp    ax,0xa
  41bab8:	jne    41bb12 <xmlStrEqual@plt+0x17bd2>
  41baba:	mov    rdi,QWORD PTR [rbx+0x28]
  41babe:	lea    r14,[rbx+0x28]
  41bac2:	mov    r13d,0xa
  41bac8:	test   rdi,rdi
  41bacb:	je     41bad4 <xmlStrEqual@plt+0x17b94>
  41bacd:	mov    ecx,DWORD PTR [rdi+0x18]
  41bad0:	test   ecx,ecx
  41bad2:	jne    41bb30 <xmlStrEqual@plt+0x17bf0>
  41bad4:	call   424bf0 <xmlStrEqual@plt+0x20cb0>
  41bad9:	xor    eax,eax
  41badb:	call   424be0 <xmlStrEqual@plt+0x20ca0>
  41bae0:	mov    QWORD PTR [r14],rax
  41bae3:	mov    rsi,rbp
  41bae6:	mov    rdi,rax
  41bae9:	call   424fd0 <xmlStrEqual@plt+0x21090>
  41baee:	sub    rsp,0x8
  41baf2:	add    r12d,0xa
  41baf6:	push   r12
  41baf8:	mov    esi,DWORD PTR [rbx+0x8]
  41bafb:	xor    edx,edx
  41bafd:	mov    r9d,0x64
  41bb03:	mov    r8,rbp
  41bb06:	xor    ecx,ecx
  41bb08:	mov    edi,r13d
  41bb0b:	call   4383c0 <xmlStrEqual@plt+0x34480>
  41bb10:	pop    rax
  41bb11:	pop    rdx
  41bb12:	pop    rbx
  41bb13:	pop    rbp
  41bb14:	pop    r12
  41bb16:	pop    r13
  41bb18:	pop    r14
  41bb1a:	ret    
  41bb1b:	nop    DWORD PTR [rax+rax*1+0x0]
  41bb20:	lea    r14,[rbx+0x20]
  41bb24:	mov    rdi,QWORD PTR [rbx+0x20]
  41bb28:	mov    r13d,0x2
  41bb2e:	jmp    41bac8 <xmlStrEqual@plt+0x17b88>
  41bb30:	mov    rsi,rbp
  41bb33:	call   425310 <xmlStrEqual@plt+0x213d0>
  41bb38:	test   eax,eax
  41bb3a:	jne    41bb70 <xmlStrEqual@plt+0x17c30>
  41bb3c:	mov    rax,0x469e3c
  41bb43:	cmp    DWORD PTR [rax],0x2
  41bb46:	jle    41baee <xmlStrEqual@plt+0x17bae>
  41bb48:	mov    rdi,rbp
  41bb4b:	call   424d40 <xmlStrEqual@plt+0x20e00>
  41bb50:	mov    rdx,rax
  41bb53:	lea    rsi,[rip+0x317de]        # 44d338 <xmlStrEqual@plt+0x493f8>
  41bb5a:	mov    edi,0x7
  41bb5f:	xor    eax,eax
  41bb61:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  41bb66:	jmp    41baee <xmlStrEqual@plt+0x17bae>
  41bb68:	nop    DWORD PTR [rax+rax*1+0x0]
  41bb70:	mov    rdi,QWORD PTR [r14]
  41bb73:	mov    rsi,rbp
  41bb76:	call   424fd0 <xmlStrEqual@plt+0x21090>
  41bb7b:	jmp    41baee <xmlStrEqual@plt+0x17bae>
  41bb80:	endbr64 
  41bb84:	push   r13
  41bb86:	push   r12
  41bb88:	push   rbp
  41bb89:	mov    rbp,rsi
  41bb8c:	push   rbx
  41bb8d:	mov    rbx,rdi
  41bb90:	sub    rsp,0x8
  41bb94:	mov    r12d,DWORD PTR [rdi+0x8]
  41bb98:	mov    rdi,rsi
  41bb9b:	call   425890 <xmlStrEqual@plt+0x21950>
  41bba0:	cmp    ax,0x2
  41bba4:	je     41bc10 <xmlStrEqual@plt+0x17cd0>
  41bba6:	cmp    ax,0xa
  41bbaa:	jne    41bbc5 <xmlStrEqual@plt+0x17c85>
  41bbac:	mov    rax,QWORD PTR [rbx+0x28]
  41bbb0:	lea    r13,[rbx+0x28]
  41bbb4:	mov    edi,0xa
  41bbb9:	test   rax,rax
  41bbbc:	je     41bbc5 <xmlStrEqual@plt+0x17c85>
  41bbbe:	mov    ecx,DWORD PTR [rax+0x18]
  41bbc1:	test   ecx,ecx
  41bbc3:	jne    41bbd0 <xmlStrEqual@plt+0x17c90>
  41bbc5:	add    rsp,0x8
  41bbc9:	pop    rbx
  41bbca:	pop    rbp
  41bbcb:	pop    r12
  41bbcd:	pop    r13
  41bbcf:	ret    
  41bbd0:	sub    rsp,0x8
  41bbd4:	add    r12d,0xa
  41bbd8:	push   r12
  41bbda:	mov    esi,DWORD PTR [rbx+0x8]
  41bbdd:	mov    r8,rbp
  41bbe0:	xor    edx,edx
  41bbe2:	mov    r9d,0x64
  41bbe8:	xor    ecx,ecx
  41bbea:	call   438490 <xmlStrEqual@plt+0x34550>
  41bbef:	mov    rdi,QWORD PTR [r13+0x0]
  41bbf3:	call   424bf0 <xmlStrEqual@plt+0x20cb0>
  41bbf8:	xor    edi,edi
  41bbfa:	call   424b10 <xmlStrEqual@plt+0x20bd0>
  41bbff:	mov    QWORD PTR [r13+0x0],rax
  41bc03:	pop    rax
  41bc04:	pop    rdx
  41bc05:	add    rsp,0x8
  41bc09:	pop    rbx
  41bc0a:	pop    rbp
  41bc0b:	pop    r12
  41bc0d:	pop    r13
  41bc0f:	ret    
  41bc10:	lea    r13,[rbx+0x20]
  41bc14:	mov    rax,QWORD PTR [rbx+0x20]
  41bc18:	mov    edi,0x2
  41bc1d:	jmp    41bbb9 <xmlStrEqual@plt+0x17c79>
  41bc1f:	nop
  41bc20:	endbr64 
  41bc24:	push   r12
  41bc26:	cmp    edi,0x1
  41bc29:	mov    r12,rsi
  41bc2c:	push   rbp
  41bc2d:	mov    rdi,r8
  41bc30:	mov    rbp,rcx
  41bc33:	push   rbx
  41bc34:	mov    rbx,r8
  41bc37:	je     41bc90 <xmlStrEqual@plt+0x17d50>
  41bc39:	call   425890 <xmlStrEqual@plt+0x21950>
  41bc3e:	test   ax,ax
  41bc41:	jne    41bc50 <xmlStrEqual@plt+0x17d10>
  41bc43:	pop    rbx
  41bc44:	pop    rbp
  41bc45:	mov    eax,0x1
  41bc4a:	pop    r12
  41bc4c:	ret    
  41bc4d:	nop    DWORD PTR [rax]
  41bc50:	mov    rdi,rbp
  41bc53:	call   425890 <xmlStrEqual@plt+0x21950>
  41bc58:	test   ax,ax
  41bc5b:	jne    41bc43 <xmlStrEqual@plt+0x17d03>
  41bc5d:	mov    rdi,rbx
  41bc60:	call   426890 <xmlStrEqual@plt+0x22950>
  41bc65:	cmp    eax,0x1
  41bc68:	mov    rax,0x469e3c
  41bc6f:	je     41bd20 <xmlStrEqual@plt+0x17de0>
  41bc75:	mov    eax,DWORD PTR [rax]
  41bc77:	test   eax,eax
  41bc79:	jg     41bcf8 <xmlStrEqual@plt+0x17db8>
  41bc7b:	mov    rsi,rbx
  41bc7e:	mov    rdi,r12
  41bc81:	call   41bb80 <xmlStrEqual@plt+0x17c40>
  41bc86:	jmp    41bc43 <xmlStrEqual@plt+0x17d03>
  41bc88:	nop    DWORD PTR [rax+rax*1+0x0]
  41bc90:	call   425890 <xmlStrEqual@plt+0x21950>
  41bc95:	test   ax,ax
  41bc98:	je     41bc43 <xmlStrEqual@plt+0x17d03>
  41bc9a:	mov    rdi,rbp
  41bc9d:	call   425890 <xmlStrEqual@plt+0x21950>
  41bca2:	test   ax,ax
  41bca5:	jne    41bc43 <xmlStrEqual@plt+0x17d03>
  41bca7:	mov    rdi,rbx
  41bcaa:	call   426890 <xmlStrEqual@plt+0x22950>
  41bcaf:	cmp    eax,0x1
  41bcb2:	mov    rax,0x469e3c
  41bcb9:	je     41bd20 <xmlStrEqual@plt+0x17de0>
  41bcbb:	mov    edx,DWORD PTR [rax]
  41bcbd:	test   edx,edx
  41bcbf:	jle    41bce3 <xmlStrEqual@plt+0x17da3>
  41bcc1:	mov    rdi,rbx
  41bcc4:	call   424d40 <xmlStrEqual@plt+0x20e00>
  41bcc9:	mov    rdx,QWORD PTR [r12]
  41bccd:	mov    rcx,rax
  41bcd0:	lea    rsi,[rip+0x31721]        # 44d3f8 <xmlStrEqual@plt+0x494b8>
  41bcd7:	mov    edi,0x5
  41bcdc:	xor    eax,eax
  41bcde:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  41bce3:	mov    rsi,rbx
  41bce6:	mov    rdi,r12
  41bce9:	call   41ba90 <xmlStrEqual@plt+0x17b50>
  41bcee:	jmp    41bc43 <xmlStrEqual@plt+0x17d03>
  41bcf3:	nop    DWORD PTR [rax+rax*1+0x0]
  41bcf8:	mov    rdi,rbx
  41bcfb:	call   424d40 <xmlStrEqual@plt+0x20e00>
  41bd00:	mov    rdx,QWORD PTR [r12]
  41bd04:	mov    rcx,rax
  41bd07:	lea    rsi,[rip+0x3173a]        # 44d448 <xmlStrEqual@plt+0x49508>
  41bd0e:	mov    edi,0x5
  41bd13:	xor    eax,eax
  41bd15:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  41bd1a:	jmp    41bc7b <xmlStrEqual@plt+0x17d3b>
  41bd1f:	nop
  41bd20:	cmp    DWORD PTR [rax],0x2
  41bd23:	jle    41bc43 <xmlStrEqual@plt+0x17d03>
  41bd29:	mov    rdi,rbx
  41bd2c:	call   424d40 <xmlStrEqual@plt+0x20e00>
  41bd31:	mov    rdx,rax
  41bd34:	lea    rsi,[rip+0x31655]        # 44d390 <xmlStrEqual@plt+0x49450>
  41bd3b:	mov    edi,0x7
  41bd40:	xor    eax,eax
  41bd42:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  41bd47:	jmp    41bc43 <xmlStrEqual@plt+0x17d03>
  41bd4c:	nop    DWORD PTR [rax+0x0]
  41bd50:	endbr64 
  41bd54:	push   rbx
  41bd55:	mov    rax,0x4697e0
  41bd5c:	mov    edi,0x2
  41bd61:	mov    rbx,QWORD PTR [rax+0x70]
  41bd65:	call   43f350 <xmlStrEqual@plt+0x3b410>
  41bd6a:	mov    QWORD PTR [rbx+0x8],rax
  41bd6e:	test   rax,rax
  41bd71:	je     41bd7f <xmlStrEqual@plt+0x17e3f>
  41bd73:	mov    rdx,0x469e3c
  41bd7a:	cmp    DWORD PTR [rdx],0x1
  41bd7d:	jg     41bdf0 <xmlStrEqual@plt+0x17eb0>
  41bd7f:	mov    edi,0xa
  41bd84:	call   43f350 <xmlStrEqual@plt+0x3b410>
  41bd89:	mov    QWORD PTR [rbx+0x10],rax
  41bd8d:	test   rax,rax
  41bd90:	je     41be20 <xmlStrEqual@plt+0x17ee0>
  41bd96:	mov    rdx,0x469e3c
  41bd9d:	cmp    DWORD PTR [rdx],0x1
  41bda0:	jg     41bda8 <xmlStrEqual@plt+0x17e68>
  41bda2:	pop    rbx
  41bda3:	ret    
  41bda4:	nop    DWORD PTR [rax+0x0]
  41bda8:	mov    rdi,QWORD PTR [rax+0x18]
  41bdac:	call   424d40 <xmlStrEqual@plt+0x20e00>
  41bdb1:	mov    rdx,QWORD PTR [rbx+0x10]
  41bdb5:	mov    rcx,rax
  41bdb8:	mov    rdx,QWORD PTR [rdx]
  41bdbb:	xor    eax,eax
  41bdbd:	lea    rsi,[rip+0x316f4]        # 44d4b8 <xmlStrEqual@plt+0x49578>
  41bdc4:	mov    edi,0x6
  41bdc9:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  41bdce:	cmp    QWORD PTR [rbx+0x8],0x0
  41bdd3:	jne    41bda2 <xmlStrEqual@plt+0x17e62>
  41bdd5:	cmp    QWORD PTR [rbx+0x10],0x0
  41bdda:	jne    41bda2 <xmlStrEqual@plt+0x17e62>
  41bddc:	lea    rsi,[rip+0x316f5]        # 44d4d8 <xmlStrEqual@plt+0x49598>
  41bde3:	mov    edi,0x1
  41bde8:	xor    eax,eax
  41bdea:	pop    rbx
  41bdeb:	jmp    430e20 <xmlStrEqual@plt+0x2cee0>
  41bdf0:	mov    rdi,QWORD PTR [rax+0x10]
  41bdf4:	call   424d40 <xmlStrEqual@plt+0x20e00>
  41bdf9:	mov    rdx,QWORD PTR [rbx+0x8]
  41bdfd:	mov    rcx,rax
  41be00:	mov    rdx,QWORD PTR [rdx]
  41be03:	lea    rsi,[rip+0x3168e]        # 44d498 <xmlStrEqual@plt+0x49558>
  41be0a:	mov    edi,0x6
  41be0f:	xor    eax,eax
  41be11:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  41be16:	jmp    41bd7f <xmlStrEqual@plt+0x17e3f>
  41be1b:	nop    DWORD PTR [rax+rax*1+0x0]
  41be20:	cmp    QWORD PTR [rbx+0x8],0x0
  41be25:	je     41bddc <xmlStrEqual@plt+0x17e9c>
  41be27:	pop    rbx
  41be28:	ret    
  41be29:	nop    DWORD PTR [rax+0x0]
  41be30:	endbr64 
  41be34:	push   r15
  41be36:	push   r14
  41be38:	push   r13
  41be3a:	push   r12
  41be3c:	mov    r12,rdi
  41be3f:	push   rbp
  41be40:	push   rbx
  41be41:	mov    ebx,esi
  41be43:	sub    rsp,0x8
  41be47:	mov    rax,0x4697e0
  41be4e:	mov    r13d,DWORD PTR [rdi+0x8]
  41be52:	mov    r14,QWORD PTR [rax+0x70]
  41be56:	call   43f430 <xmlStrEqual@plt+0x3b4f0>
  41be5b:	test   rax,rax
  41be5e:	je     41bef0 <xmlStrEqual@plt+0x17fb0>
  41be64:	mov    rbp,rax
  41be67:	mov    ecx,DWORD PTR [rbp+0x18]
  41be6a:	xor    eax,eax
  41be6c:	test   ecx,ecx
  41be6e:	jne    41be80 <xmlStrEqual@plt+0x17f40>
  41be70:	add    rsp,0x8
  41be74:	pop    rbx
  41be75:	pop    rbp
  41be76:	pop    r12
  41be78:	pop    r13
  41be7a:	pop    r14
  41be7c:	pop    r15
  41be7e:	ret    
  41be7f:	nop
  41be80:	mov    edi,ebx
  41be82:	call   439280 <xmlStrEqual@plt+0x35340>
  41be87:	mov    edi,eax
  41be89:	xor    ecx,ecx
  41be8b:	mov    rdx,rbp
  41be8e:	mov    esi,ebx
  41be90:	mov    r15d,eax
  41be93:	call   439a30 <xmlStrEqual@plt+0x35af0>
  41be98:	push   0x0
  41be9a:	add    r13d,0xa
  41be9e:	movzx  edx,r13b
  41bea2:	push   0x0
  41bea4:	mov    r9,rbp
  41bea7:	mov    r8d,0x1
  41bead:	mov    ecx,r13d
  41beb0:	xor    esi,esi
  41beb2:	mov    edi,ebx
  41beb4:	call   437ed0 <xmlStrEqual@plt+0x33f90>
  41beb9:	pop    rax
  41beba:	pop    rdx
  41bebb:	cmp    ebx,0x2
  41bebe:	je     41bf08 <xmlStrEqual@plt+0x17fc8>
  41bec0:	cmp    ebx,0xa
  41bec3:	jne    41bed6 <xmlStrEqual@plt+0x17f96>
  41bec5:	mov    DWORD PTR [r12+0x34],r15d
  41beca:	test   r14,r14
  41becd:	je     41bed6 <xmlStrEqual@plt+0x17f96>
  41becf:	cmp    QWORD PTR [r14+0x10],0x0
  41bed4:	je     41bf19 <xmlStrEqual@plt+0x17fd9>
  41bed6:	add    rsp,0x8
  41beda:	pop    rbx
  41bedb:	pop    rbp
  41bedc:	pop    r12
  41bede:	pop    r13
  41bee0:	pop    r14
  41bee2:	mov    eax,0x1
  41bee7:	pop    r15
  41bee9:	ret    
  41beea:	nop    WORD PTR [rax+rax*1+0x0]
  41bef0:	add    rsp,0x8
  41bef4:	pop    rbx
  41bef5:	pop    rbp
  41bef6:	pop    r12
  41bef8:	pop    r13
  41befa:	pop    r14
  41befc:	xor    eax,eax
  41befe:	pop    r15
  41bf00:	ret    
  41bf01:	nop    DWORD PTR [rax+0x0]
  41bf08:	mov    DWORD PTR [r12+0x30],r15d
  41bf0d:	test   r14,r14
  41bf10:	je     41bed6 <xmlStrEqual@plt+0x17f96>
  41bf12:	cmp    QWORD PTR [r14+0x8],0x0
  41bf17:	jne    41bed6 <xmlStrEqual@plt+0x17f96>
  41bf19:	xor    eax,eax
  41bf1b:	call   41bd50 <xmlStrEqual@plt+0x17e10>
  41bf20:	jmp    41bed6 <xmlStrEqual@plt+0x17f96>
  41bf22:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  41bf2d:	nop    DWORD PTR [rax]
  41bf30:	endbr64 
  41bf34:	push   r15
  41bf36:	push   r14
  41bf38:	push   r13
  41bf3a:	mov    r13,rdi
  41bf3d:	push   r12
  41bf3f:	mov    r12,rsi
  41bf42:	push   rbp
  41bf43:	push   rbx
  41bf44:	sub    rsp,0x18
  41bf48:	mov    rax,0x4697e0
  41bf4f:	mov    r9d,DWORD PTR [rdx+0x18]
  41bf53:	mov    rax,QWORD PTR [rax+0x70]
  41bf57:	mov    QWORD PTR [rsp],rax
  41bf5b:	mov    eax,DWORD PTR [rdi+0x8]
  41bf5e:	lea    ebx,[rax+0xa]
  41bf61:	test   r9d,r9d
  41bf64:	je     41c018 <xmlStrEqual@plt+0x180d8>
  41bf6a:	mov    rbp,rdx
  41bf6d:	mov    rdi,rdx
  41bf70:	mov    r15d,DWORD PTR [rsi+0x18]
  41bf74:	call   425890 <xmlStrEqual@plt+0x21950>
  41bf79:	mov    rsi,rbp
  41bf7c:	mov    rdi,r12
  41bf7f:	mov    r14d,eax
  41bf82:	call   425310 <xmlStrEqual@plt+0x213d0>
  41bf87:	test   eax,eax
  41bf89:	je     41bfd8 <xmlStrEqual@plt+0x18098>
  41bf8b:	movzx  eax,r14w
  41bf8f:	mov    DWORD PTR [rsp+0xc],eax
  41bf93:	test   r15d,r15d
  41bf96:	jne    41c078 <xmlStrEqual@plt+0x18138>
  41bf9c:	mov    r12,0x469e3c
  41bfa3:	cmp    DWORD PTR [r12],0x1
  41bfa8:	jg     41c1f0 <xmlStrEqual@plt+0x182b0>
  41bfae:	cmp    r14w,0x2
  41bfb3:	je     41c218 <xmlStrEqual@plt+0x182d8>
  41bfb9:	cmp    r14w,0xa
  41bfbe:	je     41c168 <xmlStrEqual@plt+0x18228>
  41bfc4:	add    rsp,0x18
  41bfc8:	pop    rbx
  41bfc9:	pop    rbp
  41bfca:	pop    r12
  41bfcc:	pop    r13
  41bfce:	pop    r14
  41bfd0:	xor    eax,eax
  41bfd2:	pop    r15
  41bfd4:	ret    
  41bfd5:	nop    DWORD PTR [rax]
  41bfd8:	mov    rax,0x469e3c
  41bfdf:	cmp    DWORD PTR [rax],0x1
  41bfe2:	jg     41c1a0 <xmlStrEqual@plt+0x18260>
  41bfe8:	cmp    r14w,0x2
  41bfed:	je     41c1d0 <xmlStrEqual@plt+0x18290>
  41bff3:	cmp    r14w,0xa
  41bff8:	je     41c148 <xmlStrEqual@plt+0x18208>
  41bffe:	mov    eax,0x1
  41c003:	add    rsp,0x18
  41c007:	pop    rbx
  41c008:	pop    rbp
  41c009:	pop    r12
  41c00b:	pop    r13
  41c00d:	pop    r14
  41c00f:	pop    r15
  41c011:	ret    
  41c012:	nop    WORD PTR [rax+rax*1+0x0]
  41c018:	mov    rdi,rsi
  41c01b:	call   425890 <xmlStrEqual@plt+0x21950>
  41c020:	movzx  ebp,ax
  41c023:	cmp    ax,0x2
  41c027:	je     41c290 <xmlStrEqual@plt+0x18350>
  41c02d:	cmp    ax,0xa
  41c031:	je     41c0f8 <xmlStrEqual@plt+0x181b8>
  41c037:	cmp    r14,r13
  41c03a:	je     41c11a <xmlStrEqual@plt+0x181da>
  41c040:	push   0x0
  41c042:	mov    edi,ebp
  41c044:	mov    r9,r12
  41c047:	push   0x0
  41c049:	mov    r8d,0x1
  41c04f:	mov    ecx,ebx
  41c051:	movzx  edx,bl
  41c054:	xor    esi,esi
  41c056:	call   437f70 <xmlStrEqual@plt+0x34030>
  41c05b:	pop    rdi
  41c05c:	pop    r8
  41c05e:	add    rsp,0x18
  41c062:	pop    rbx
  41c063:	pop    rbp
  41c064:	pop    r12
  41c066:	pop    r13
  41c068:	pop    r14
  41c06a:	mov    eax,0x1
  41c06f:	pop    r15
  41c071:	ret    
  41c072:	nop    WORD PTR [rax+rax*1+0x0]
  41c078:	cmp    r14w,0x2
  41c07d:	je     41c280 <xmlStrEqual@plt+0x18340>
  41c083:	cmp    r14w,0xa
  41c088:	jne    41bfc4 <xmlStrEqual@plt+0x18084>
  41c08e:	mov    r15d,DWORD PTR [r13+0x34]
  41c092:	movzx  r10d,bl
  41c096:	mov    DWORD PTR [rsp],r10d
  41c09a:	push   0x0
  41c09c:	mov    ecx,ebx
  41c09e:	xor    esi,esi
  41c0a0:	push   0x0
  41c0a2:	mov    r9,r12
  41c0a5:	mov    r8d,0x1
  41c0ab:	mov    edi,DWORD PTR [rsp+0x1c]
  41c0af:	movzx  edx,bl
  41c0b2:	call   437f70 <xmlStrEqual@plt+0x34030>
  41c0b7:	pop    rcx
  41c0b8:	pop    rsi
  41c0b9:	mov    r10d,DWORD PTR [rsp]
  41c0bd:	push   0x0
  41c0bf:	mov    ecx,ebx
  41c0c1:	mov    edx,r10d
  41c0c4:	push   0x0
  41c0c6:	mov    r9,rbp
  41c0c9:	mov    r8d,0x1
  41c0cf:	mov    ebx,DWORD PTR [rsp+0x1c]
  41c0d3:	xor    esi,esi
  41c0d5:	mov    edi,ebx
  41c0d7:	call   437ed0 <xmlStrEqual@plt+0x33f90>
  41c0dc:	mov    rdx,rbp
  41c0df:	xor    ecx,ecx
  41c0e1:	mov    esi,ebx
  41c0e3:	mov    edi,r15d
  41c0e6:	call   439a30 <xmlStrEqual@plt+0x35af0>
  41c0eb:	pop    rax
  41c0ec:	pop    rdx
  41c0ed:	jmp    41bffe <xmlStrEqual@plt+0x180be>
  41c0f2:	nop    WORD PTR [rax+rax*1+0x0]
  41c0f8:	mov    edi,DWORD PTR [r13+0x34]
  41c0fc:	call   403f30 <close@plt>
  41c101:	mov    rax,QWORD PTR [rsp]
  41c105:	mov    DWORD PTR [r13+0x34],0x0
  41c10d:	mov    r14,QWORD PTR [rax+0x10]
  41c111:	cmp    r14,r13
  41c114:	jne    41c040 <xmlStrEqual@plt+0x18100>
  41c11a:	mov    rax,0x469e3c
  41c121:	cmp    DWORD PTR [rax],0x1
  41c124:	jle    41c139 <xmlStrEqual@plt+0x181f9>
  41c126:	lea    rsi,[rip+0x313db]        # 44d508 <xmlStrEqual@plt+0x495c8>
  41c12d:	mov    edi,0x6
  41c132:	xor    eax,eax
  41c134:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  41c139:	xor    eax,eax
  41c13b:	call   41bd50 <xmlStrEqual@plt+0x17e10>
  41c140:	jmp    41c040 <xmlStrEqual@plt+0x18100>
  41c145:	nop    DWORD PTR [rax]
  41c148:	mov    edi,DWORD PTR [r13+0x34]
  41c14c:	xor    ecx,ecx
  41c14e:	mov    rdx,rbp
  41c151:	mov    esi,0xa
  41c156:	call   439a30 <xmlStrEqual@plt+0x35af0>
  41c15b:	mov    eax,0x1
  41c160:	jmp    41c003 <xmlStrEqual@plt+0x180c3>
  41c165:	nop    DWORD PTR [rax]
  41c168:	mov    edi,0xa
  41c16d:	call   439280 <xmlStrEqual@plt+0x35340>
  41c172:	cmp    BYTE PTR [r13+0xc],0x1
  41c177:	mov    r15d,eax
  41c17a:	mov    DWORD PTR [r13+0x34],eax
  41c17e:	movzx  r10d,bl
  41c182:	jne    41c0bd <xmlStrEqual@plt+0x1817d>
  41c188:	mov    rax,QWORD PTR [rsp]
  41c18c:	cmp    QWORD PTR [rax+0x10],0x0
  41c191:	jne    41c0bd <xmlStrEqual@plt+0x1817d>
  41c197:	jmp    41c247 <xmlStrEqual@plt+0x18307>
  41c19c:	nop    DWORD PTR [rax+0x0]
  41c1a0:	mov    rdi,rbp
  41c1a3:	call   424d40 <xmlStrEqual@plt+0x20e00>
  41c1a8:	mov    rdx,QWORD PTR [r13+0x0]
  41c1ac:	mov    rcx,rax
  41c1af:	lea    rsi,[rip+0x313a2]        # 44d558 <xmlStrEqual@plt+0x49618>
  41c1b6:	mov    edi,0x6
  41c1bb:	xor    eax,eax
  41c1bd:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  41c1c2:	jmp    41bfe8 <xmlStrEqual@plt+0x180a8>
  41c1c7:	nop    WORD PTR [rax+rax*1+0x0]
  41c1d0:	mov    edi,DWORD PTR [r13+0x30]
  41c1d4:	xor    ecx,ecx
  41c1d6:	mov    rdx,rbp
  41c1d9:	mov    esi,0x2
  41c1de:	call   439a30 <xmlStrEqual@plt+0x35af0>
  41c1e3:	mov    eax,0x1
  41c1e8:	jmp    41c003 <xmlStrEqual@plt+0x180c3>
  41c1ed:	nop    DWORD PTR [rax]
  41c1f0:	mov    rdi,rbp
  41c1f3:	call   424d40 <xmlStrEqual@plt+0x20e00>
  41c1f8:	mov    rdx,rax
  41c1fb:	lea    rsi,[rip+0x313ae]        # 44d5b0 <xmlStrEqual@plt+0x49670>
  41c202:	mov    edi,0x6
  41c207:	xor    eax,eax
  41c209:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  41c20e:	jmp    41bfae <xmlStrEqual@plt+0x1806e>
  41c213:	nop    DWORD PTR [rax+rax*1+0x0]
  41c218:	mov    edi,0x2
  41c21d:	call   439280 <xmlStrEqual@plt+0x35340>
  41c222:	cmp    BYTE PTR [r13+0xc],0x1
  41c227:	mov    r15d,eax
  41c22a:	mov    DWORD PTR [r13+0x30],eax
  41c22e:	movzx  r10d,bl
  41c232:	jne    41c0bd <xmlStrEqual@plt+0x1817d>
  41c238:	mov    rax,QWORD PTR [rsp]
  41c23c:	cmp    QWORD PTR [rax+0x8],0x0
  41c241:	jne    41c0bd <xmlStrEqual@plt+0x1817d>
  41c247:	cmp    DWORD PTR [r12],0x1
  41c24c:	jle    41c269 <xmlStrEqual@plt+0x18329>
  41c24e:	lea    rsi,[rip+0x313a3]        # 44d5f8 <xmlStrEqual@plt+0x496b8>
  41c255:	mov    edi,0x6
  41c25a:	xor    eax,eax
  41c25c:	mov    DWORD PTR [rsp],r10d
  41c260:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  41c265:	mov    r10d,DWORD PTR [rsp]
  41c269:	xor    eax,eax
  41c26b:	mov    DWORD PTR [rsp],r10d
  41c26f:	call   41bd50 <xmlStrEqual@plt+0x17e10>
  41c274:	mov    r10d,DWORD PTR [rsp]
  41c278:	jmp    41c0bd <xmlStrEqual@plt+0x1817d>
  41c27d:	nop    DWORD PTR [rax]
  41c280:	mov    r15d,DWORD PTR [r13+0x30]
  41c284:	jmp    41c092 <xmlStrEqual@plt+0x18152>
  41c289:	nop    DWORD PTR [rax+0x0]
  41c290:	mov    edi,DWORD PTR [r13+0x30]
  41c294:	call   403f30 <close@plt>
  41c299:	mov    rax,QWORD PTR [rsp]
  41c29d:	mov    DWORD PTR [r13+0x30],0x0
  41c2a5:	mov    r14,QWORD PTR [rax+0x8]
  41c2a9:	jmp    41c037 <xmlStrEqual@plt+0x180f7>
  41c2ae:	xchg   ax,ax
  41c2b0:	endbr64 
  41c2b4:	push   r13
  41c2b6:	push   r12
  41c2b8:	push   rbp
  41c2b9:	push   rbx
  41c2ba:	mov    rbx,rdi
  41c2bd:	sub    rsp,0x8
  41c2c1:	mov    rax,0x4697e0
  41c2c8:	mov    r13,QWORD PTR [rax+0x70]
  41c2cc:	cmp    esi,edx
  41c2ce:	je     41c316 <xmlStrEqual@plt+0x183d6>
  41c2d0:	mov    rax,0x469e3c
  41c2d7:	mov    r12d,esi
  41c2da:	cmp    DWORD PTR [rax],0x1
  41c2dd:	mov    ebp,edx
  41c2df:	jg     41c370 <xmlStrEqual@plt+0x18430>
  41c2e5:	mov    r9,QWORD PTR [rbx+0x10]
  41c2e9:	add    r12d,0xa
  41c2ed:	add    ebp,0xa
  41c2f0:	test   r9,r9
  41c2f3:	je     41c301 <xmlStrEqual@plt+0x183c1>
  41c2f5:	mov    edx,DWORD PTR [r9+0x18]
  41c2f9:	test   edx,edx
  41c2fb:	jne    41c3a8 <xmlStrEqual@plt+0x18468>
  41c301:	mov    r9,QWORD PTR [rbx+0x18]
  41c305:	test   r9,r9
  41c308:	je     41c316 <xmlStrEqual@plt+0x183d6>
  41c30a:	mov    eax,DWORD PTR [r9+0x18]
  41c30e:	test   eax,eax
  41c310:	jne    41c428 <xmlStrEqual@plt+0x184e8>
  41c316:	mov    rax,QWORD PTR [r13+0x8]
  41c31a:	cmp    rax,rbx
  41c31d:	je     41c338 <xmlStrEqual@plt+0x183f8>
  41c31f:	mov    rdx,QWORD PTR [r13+0x10]
  41c323:	test   rax,rax
  41c326:	sete   cl
  41c329:	test   rdx,rdx
  41c32c:	sete   al
  41c32f:	or     cl,al
  41c331:	jne    41c338 <xmlStrEqual@plt+0x183f8>
  41c333:	cmp    rdx,rbx
  41c336:	jne    41c35e <xmlStrEqual@plt+0x1841e>
  41c338:	mov    rax,0x469e3c
  41c33f:	cmp    DWORD PTR [rax],0x1
  41c342:	jle    41c357 <xmlStrEqual@plt+0x18417>
  41c344:	lea    rsi,[rip+0x3133d]        # 44d688 <xmlStrEqual@plt+0x49748>
  41c34b:	mov    edi,0x6
  41c350:	xor    eax,eax
  41c352:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  41c357:	xor    eax,eax
  41c359:	call   41bd50 <xmlStrEqual@plt+0x17e10>
  41c35e:	add    rsp,0x8
  41c362:	pop    rbx
  41c363:	pop    rbp
  41c364:	pop    r12
  41c366:	mov    eax,0x1
  41c36b:	pop    r13
  41c36d:	ret    
  41c36e:	xchg   ax,ax
  41c370:	mov    ecx,DWORD PTR [rdi+0x8]
  41c373:	mov    rdx,QWORD PTR [rdi]
  41c376:	lea    rsi,[rip+0x312bb]        # 44d638 <xmlStrEqual@plt+0x496f8>
  41c37d:	mov    edi,0x6
  41c382:	xor    eax,eax
  41c384:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  41c389:	mov    r9,QWORD PTR [rbx+0x10]
  41c38d:	add    r12d,0xa
  41c391:	add    ebp,0xa
  41c394:	test   r9,r9
  41c397:	jne    41c2f5 <xmlStrEqual@plt+0x183b5>
  41c39d:	jmp    41c301 <xmlStrEqual@plt+0x183c1>
  41c3a2:	nop    WORD PTR [rax+rax*1+0x0]
  41c3a8:	push   0x0
  41c3aa:	mov    r8d,0x1
  41c3b0:	mov    ecx,r12d
  41c3b3:	push   0x0
  41c3b5:	movzx  edx,r12b
  41c3b9:	xor    esi,esi
  41c3bb:	mov    edi,0x2
  41c3c0:	call   437f70 <xmlStrEqual@plt+0x34030>
  41c3c5:	push   0x0
  41c3c7:	mov    r9,QWORD PTR [rbx+0x10]
  41c3cb:	mov    r8d,0x1
  41c3d1:	push   0x0
  41c3d3:	mov    ecx,ebp
  41c3d5:	movzx  edx,bpl
  41c3d9:	xor    esi,esi
  41c3db:	mov    edi,0x2
  41c3e0:	call   437ed0 <xmlStrEqual@plt+0x33f90>
  41c3e5:	mov    edi,DWORD PTR [rbx+0x30]
  41c3e8:	add    rsp,0x20
  41c3ec:	call   403f30 <close@plt>
  41c3f1:	mov    edi,0x2
  41c3f6:	call   439280 <xmlStrEqual@plt+0x35340>
  41c3fb:	mov    DWORD PTR [rbx+0x30],eax
  41c3fe:	mov    rdx,QWORD PTR [rbx+0x10]
  41c402:	xor    ecx,ecx
  41c404:	mov    esi,0x2
  41c409:	mov    edi,eax
  41c40b:	call   439a30 <xmlStrEqual@plt+0x35af0>
  41c410:	mov    r9,QWORD PTR [rbx+0x18]
  41c414:	test   r9,r9
  41c417:	jne    41c30a <xmlStrEqual@plt+0x183ca>
  41c41d:	jmp    41c316 <xmlStrEqual@plt+0x183d6>
  41c422:	nop    WORD PTR [rax+rax*1+0x0]
  41c428:	push   0x0
  41c42a:	mov    ecx,r12d
  41c42d:	movzx  edx,r12b
  41c431:	push   0x0
  41c433:	xor    esi,esi
  41c435:	mov    r8d,0x1
  41c43b:	mov    edi,0xa
  41c440:	call   437f70 <xmlStrEqual@plt+0x34030>
  41c445:	push   0x0
  41c447:	mov    r9,QWORD PTR [rbx+0x18]
  41c44b:	mov    ecx,ebp
  41c44d:	push   0x0
  41c44f:	movzx  edx,bpl
  41c453:	xor    esi,esi
  41c455:	mov    r8d,0x1
  41c45b:	mov    edi,0xa
  41c460:	call   437ed0 <xmlStrEqual@plt+0x33f90>
  41c465:	mov    edi,DWORD PTR [rbx+0x34]
  41c468:	add    rsp,0x20
  41c46c:	call   403f30 <close@plt>
  41c471:	mov    edi,0xa
  41c476:	call   439280 <xmlStrEqual@plt+0x35340>
  41c47b:	mov    DWORD PTR [rbx+0x34],eax
  41c47e:	mov    rdx,QWORD PTR [rbx+0x18]
  41c482:	xor    ecx,ecx
  41c484:	mov    esi,0xa
  41c489:	mov    edi,eax
  41c48b:	call   439a30 <xmlStrEqual@plt+0x35af0>
  41c490:	jmp    41c316 <xmlStrEqual@plt+0x183d6>
  41c495:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  41c4a0:	endbr64 
  41c4a4:	push   rbx
  41c4a5:	mov    rax,0x4697e0
  41c4ac:	mov    rax,QWORD PTR [rax+0x70]
  41c4b0:	cmp    edi,0x2
  41c4b3:	je     41c4d0 <xmlStrEqual@plt+0x18590>
  41c4b5:	cmp    edi,0xa
  41c4b8:	je     41c4e8 <xmlStrEqual@plt+0x185a8>
  41c4ba:	mov    rax,0x469e3c
  41c4c1:	xor    ebx,ebx
  41c4c3:	cmp    DWORD PTR [rax],0x1
  41c4c6:	jg     41c500 <xmlStrEqual@plt+0x185c0>
  41c4c8:	mov    rax,rbx
  41c4cb:	pop    rbx
  41c4cc:	ret    
  41c4cd:	nop    DWORD PTR [rax]
  41c4d0:	mov    rbx,QWORD PTR [rax+0x8]
  41c4d4:	test   rbx,rbx
  41c4d7:	je     41c4c8 <xmlStrEqual@plt+0x18588>
  41c4d9:	mov    rbx,QWORD PTR [rbx+0x10]
  41c4dd:	mov    rax,rbx
  41c4e0:	pop    rbx
  41c4e1:	ret    
  41c4e2:	nop    WORD PTR [rax+rax*1+0x0]
  41c4e8:	mov    rbx,QWORD PTR [rax+0x10]
  41c4ec:	test   rbx,rbx
  41c4ef:	je     41c4c8 <xmlStrEqual@plt+0x18588>
  41c4f1:	mov    rbx,QWORD PTR [rbx+0x18]
  41c4f5:	mov    rax,rbx
  41c4f8:	pop    rbx
  41c4f9:	ret    
  41c4fa:	nop    WORD PTR [rax+rax*1+0x0]
  41c500:	mov    edx,edi
  41c502:	xor    eax,eax
  41c504:	lea    rsi,[rip+0x311bd]        # 44d6c8 <xmlStrEqual@plt+0x49788>
  41c50b:	mov    edi,0x6
  41c510:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  41c515:	mov    rax,rbx
  41c518:	pop    rbx
  41c519:	ret    
  41c51a:	nop    WORD PTR [rax+rax*1+0x0]
  41c520:	endbr64 
  41c524:	push   rbx
  41c525:	mov    rax,0x4697e0
  41c52c:	mov    rax,QWORD PTR [rax+0x70]
  41c530:	cmp    edi,0x2
  41c533:	je     41c550 <xmlStrEqual@plt+0x18610>
  41c535:	cmp    edi,0xa
  41c538:	je     41c560 <xmlStrEqual@plt+0x18620>
  41c53a:	mov    rax,0x469e3c
  41c541:	mov    ebx,0xfffffff7
  41c546:	cmp    DWORD PTR [rax],0x1
  41c549:	jg     41c570 <xmlStrEqual@plt+0x18630>
  41c54b:	mov    eax,ebx
  41c54d:	pop    rbx
  41c54e:	ret    
  41c54f:	nop
  41c550:	mov    rax,QWORD PTR [rax+0x8]
  41c554:	test   rax,rax
  41c557:	je     41c589 <xmlStrEqual@plt+0x18649>
  41c559:	mov    ebx,DWORD PTR [rax+0x30]
  41c55c:	mov    eax,ebx
  41c55e:	pop    rbx
  41c55f:	ret    
  41c560:	mov    rax,QWORD PTR [rax+0x10]
  41c564:	test   rax,rax
  41c567:	je     41c589 <xmlStrEqual@plt+0x18649>
  41c569:	mov    ebx,DWORD PTR [rax+0x34]
  41c56c:	mov    eax,ebx
  41c56e:	pop    rbx
  41c56f:	ret    
  41c570:	mov    edx,edi
  41c572:	xor    eax,eax
  41c574:	lea    rsi,[rip+0x31185]        # 44d700 <xmlStrEqual@plt+0x497c0>
  41c57b:	mov    edi,0x6
  41c580:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  41c585:	mov    eax,ebx
  41c587:	pop    rbx
  41c588:	ret    
  41c589:	mov    ebx,0xfffffff7
  41c58e:	jmp    41c54b <xmlStrEqual@plt+0x1860b>
  41c590:	endbr64 
  41c594:	push   rbp
  41c595:	push   rbx
  41c596:	mov    rbx,rdi
  41c599:	sub    rsp,0x8
  41c59d:	mov    esi,DWORD PTR [rdi+0x8]
  41c5a0:	mov    r9,QWORD PTR [rdi+0x10]
  41c5a4:	lea    ebp,[rsi+0xa]
  41c5a7:	test   r9,r9
  41c5aa:	je     41c5e5 <xmlStrEqual@plt+0x186a5>
  41c5ac:	mov    eax,DWORD PTR [r9+0x18]
  41c5b0:	test   eax,eax
  41c5b2:	je     41c5e5 <xmlStrEqual@plt+0x186a5>
  41c5b4:	mov    r8,QWORD PTR [rdi+0x20]
  41c5b8:	test   r8,r8
  41c5bb:	je     41c5c5 <xmlStrEqual@plt+0x18685>
  41c5bd:	mov    eax,DWORD PTR [r8+0x18]
  41c5c1:	test   eax,eax
  41c5c3:	jne    41c630 <xmlStrEqual@plt+0x186f0>
  41c5c5:	push   0x0
  41c5c7:	mov    r8d,0x1
  41c5cd:	mov    ecx,ebp
  41c5cf:	push   0x0
  41c5d1:	movzx  edx,bpl
  41c5d5:	xor    esi,esi
  41c5d7:	mov    edi,0x2
  41c5dc:	call   437f70 <xmlStrEqual@plt+0x34030>
  41c5e1:	pop    r9
  41c5e3:	pop    r10
  41c5e5:	mov    r9,QWORD PTR [rbx+0x18]
  41c5e9:	test   r9,r9
  41c5ec:	je     41c626 <xmlStrEqual@plt+0x186e6>
  41c5ee:	mov    r8d,DWORD PTR [r9+0x18]
  41c5f2:	test   r8d,r8d
  41c5f5:	je     41c626 <xmlStrEqual@plt+0x186e6>
  41c5f7:	mov    r8,QWORD PTR [rbx+0x28]
  41c5fb:	test   r8,r8
  41c5fe:	je     41c608 <xmlStrEqual@plt+0x186c8>
  41c600:	mov    edi,DWORD PTR [r8+0x18]
  41c604:	test   edi,edi
  41c606:	jne    41c658 <xmlStrEqual@plt+0x18718>
  41c608:	push   0x0
  41c60a:	movzx  edx,bpl
  41c60e:	mov    r8d,0x1
  41c614:	push   0x0
  41c616:	mov    ecx,ebp
  41c618:	xor    esi,esi
  41c61a:	mov    edi,0xa
  41c61f:	call   437f70 <xmlStrEqual@plt+0x34030>
  41c624:	pop    rax
  41c625:	pop    rdx
  41c626:	add    rsp,0x8
  41c62a:	pop    rbx
  41c62b:	pop    rbp
  41c62c:	ret    
  41c62d:	nop    DWORD PTR [rax]
  41c630:	sub    rsp,0x8
  41c634:	push   rbp
  41c635:	xor    r9d,r9d
  41c638:	xor    ecx,ecx
  41c63a:	xor    edx,edx
  41c63c:	mov    edi,0x2
  41c641:	call   438490 <xmlStrEqual@plt+0x34550>
  41c646:	pop    r11
  41c648:	mov    r9,QWORD PTR [rbx+0x10]
  41c64c:	pop    rax
  41c64d:	jmp    41c5c5 <xmlStrEqual@plt+0x18685>
  41c652:	nop    WORD PTR [rax+rax*1+0x0]
  41c658:	sub    rsp,0x8
  41c65c:	push   rbp
  41c65d:	mov    esi,DWORD PTR [rbx+0x8]
  41c660:	xor    r9d,r9d
  41c663:	xor    ecx,ecx
  41c665:	xor    edx,edx
  41c667:	mov    edi,0xa
  41c66c:	call   438490 <xmlStrEqual@plt+0x34550>
  41c671:	pop    rcx
  41c672:	mov    r9,QWORD PTR [rbx+0x18]
  41c676:	pop    rsi
  41c677:	jmp    41c608 <xmlStrEqual@plt+0x186c8>
  41c679:	nop    DWORD PTR [rax+0x0]
  41c680:	endbr64 
  41c684:	push   r12
  41c686:	mov    r12d,edi
  41c689:	mov    edi,0x40
  41c68e:	push   rbp
  41c68f:	mov    rbp,rsi
  41c692:	push   rbx
  41c693:	call   435000 <xmlStrEqual@plt+0x310c0>
  41c698:	mov    rbx,rax
  41c69b:	test   rax,rax
  41c69e:	je     41c6cf <xmlStrEqual@plt+0x1878f>
  41c6a0:	mov    DWORD PTR [rax],r12d
  41c6a3:	mov    rdi,0x42e2b0
  41c6aa:	call   43a0a0 <xmlStrEqual@plt+0x36160>
  41c6af:	mov    QWORD PTR [rbx+0x18],rax
  41c6b3:	mov    rsi,0x425060
  41c6ba:	mov    rdi,rbp
  41c6bd:	call   42de20 <xmlStrEqual@plt+0x29ee0>
  41c6c2:	mov    QWORD PTR [rbx+0x38],rax
  41c6c6:	lea    rdi,[rbx+0x20]
  41c6ca:	call   419c00 <xmlStrEqual@plt+0x15cc0>
  41c6cf:	mov    rax,rbx
  41c6d2:	pop    rbx
  41c6d3:	pop    rbp
  41c6d4:	pop    r12
  41c6d6:	ret    
  41c6d7:	nop    WORD PTR [rax+rax*1+0x0]
  41c6e0:	endbr64 
  41c6e4:	push   r15
  41c6e6:	push   r14
  41c6e8:	push   r13
  41c6ea:	mov    r13,rdx
  41c6ed:	push   r12
  41c6ef:	mov    r12d,esi
  41c6f2:	lea    rsi,[rip+0x30a96]        # 44d18f <xmlStrEqual@plt+0x4924f>
  41c6f9:	push   rbp
  41c6fa:	push   rbx
  41c6fb:	mov    ebx,edi
  41c6fd:	xor    edi,edi
  41c6ff:	sub    rsp,0x58
  41c703:	mov    QWORD PTR [rsp+0x30],rdx
  41c708:	mov    edx,0x5a0
  41c70d:	mov    rax,QWORD PTR fs:0x28
  41c716:	mov    QWORD PTR [rsp+0x18],rax
  41c71b:	xor    eax,eax
  41c71d:	lea    rax,[rsp+0x90]
  41c725:	mov    QWORD PTR [rsp+0x8],rax
  41c72a:	lea    rax,[rsp+0x20]
  41c72f:	mov    DWORD PTR [rsp],0x10
  41c736:	mov    QWORD PTR [rsp+0x10],rax
  41c73b:	call   42ff50 <xmlStrEqual@plt+0x2c010>
  41c740:	mov    rbp,0x4757dc
  41c747:	mov    edx,eax
  41c749:	mov    DWORD PTR [rbp+0x0],eax
  41c74c:	xor    eax,eax
  41c74e:	test   edx,edx
  41c750:	jle    41c77b <xmlStrEqual@plt+0x1883b>
  41c752:	lea    rdi,[rip+0x30a36]        # 44d18f <xmlStrEqual@plt+0x4924f>
  41c759:	call   403850 <if_nametoindex@plt>
  41c75e:	mov    rdx,0x4757d8
  41c765:	mov    DWORD PTR [rdx],eax
  41c767:	cmp    ebx,0x2
  41c76a:	je     41c840 <xmlStrEqual@plt+0x18900>
  41c770:	cmp    ebx,0x3
  41c773:	je     41c7b4 <xmlStrEqual@plt+0x18874>
  41c775:	test   ebx,ebx
  41c777:	je     41c7a0 <xmlStrEqual@plt+0x18860>
  41c779:	xor    eax,eax
  41c77b:	mov    rcx,QWORD PTR [rsp+0x18]
  41c780:	xor    rcx,QWORD PTR fs:0x28
  41c789:	jne    41c88d <xmlStrEqual@plt+0x1894d>
  41c78f:	add    rsp,0x58
  41c793:	pop    rbx
  41c794:	pop    rbp
  41c795:	pop    r12
  41c797:	pop    r13
  41c799:	pop    r14
  41c79b:	pop    r15
  41c79d:	ret    
  41c79e:	xchg   ax,ax
  41c7a0:	mov    edi,0x2
  41c7a5:	call   41ba50 <xmlStrEqual@plt+0x17b10>
  41c7aa:	mov    edi,0xa
  41c7af:	call   41ba50 <xmlStrEqual@plt+0x17b10>
  41c7b4:	mov    rbx,0x4757a8
  41c7bb:	mov    ecx,DWORD PTR [rbp+0x0]
  41c7be:	mov    rsi,0x41b190
  41c7c5:	mov    rdi,QWORD PTR [rbx]
  41c7c8:	xor    edx,edx
  41c7ca:	call   4386e0 <xmlStrEqual@plt+0x347a0>
  41c7cf:	mov    rbp,0x41a9e0
  41c7d6:	test   r12d,r12d
  41c7d9:	je     41c84c <xmlStrEqual@plt+0x1890c>
  41c7db:	mov    r15d,0x12b6
  41c7e1:	cmp    r12d,0x1
  41c7e5:	jne    41c779 <xmlStrEqual@plt+0x18839>
  41c7e7:	mov    r14,0x4757c0
  41c7ee:	cmp    DWORD PTR [r14],0xa
  41c7f2:	jne    41c85f <xmlStrEqual@plt+0x1891f>
  41c7f4:	mov    rbx,0x4757a8
  41c7fb:	mov    esi,r15d
  41c7fe:	mov    edi,0xa
  41c803:	call   438ab0 <xmlStrEqual@plt+0x34b70>
  41c808:	mov    rdi,QWORD PTR [rbx]
  41c80b:	mov    ecx,eax
  41c80d:	xor    edx,edx
  41c80f:	mov    rsi,rbp
  41c812:	call   4386e0 <xmlStrEqual@plt+0x347a0>
  41c817:	mov    rsi,r13
  41c81a:	mov    edi,r12d
  41c81d:	call   41c680 <xmlStrEqual@plt+0x18740>
  41c822:	mov    rdx,0x4697e0
  41c829:	mov    QWORD PTR [rdx+0x70],rax
  41c82d:	xor    eax,eax
  41c82f:	call   41bd50 <xmlStrEqual@plt+0x17e10>
  41c834:	mov    eax,0x1
  41c839:	jmp    41c77b <xmlStrEqual@plt+0x1883b>
  41c83e:	xchg   ax,ax
  41c840:	mov    rbp,0x41aad0
  41c847:	test   r12d,r12d
  41c84a:	jne    41c7db <xmlStrEqual@plt+0x1889b>
  41c84c:	mov    r14,0x4757c0
  41c853:	mov    r15d,0x10f5
  41c859:	cmp    DWORD PTR [r14],0xa
  41c85d:	je     41c7f4 <xmlStrEqual@plt+0x188b4>
  41c85f:	mov    esi,r15d
  41c862:	mov    edi,0x2
  41c867:	call   438ab0 <xmlStrEqual@plt+0x34b70>
  41c86c:	mov    rbx,0x4757a8
  41c873:	xor    edx,edx
  41c875:	mov    rdi,QWORD PTR [rbx]
  41c878:	mov    ecx,eax
  41c87a:	mov    rsi,rbp
  41c87d:	call   4386e0 <xmlStrEqual@plt+0x347a0>
  41c882:	cmp    DWORD PTR [r14],0x2
  41c886:	je     41c817 <xmlStrEqual@plt+0x188d7>
  41c888:	jmp    41c7fb <xmlStrEqual@plt+0x188bb>
  41c88d:	call   403c00 <__stack_chk_fail@plt>
  41c892:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  41c89d:	nop    DWORD PTR [rax]
  41c8a0:	endbr64 
  41c8a4:	test   rdi,rdi
  41c8a7:	je     41c8d8 <xmlStrEqual@plt+0x18998>
  41c8a9:	push   rbx
  41c8aa:	mov    rbx,rdi
  41c8ad:	mov    rdi,QWORD PTR [rdi+0x18]
  41c8b1:	call   43add0 <xmlStrEqual@plt+0x36e90>
  41c8b6:	mov    rdi,QWORD PTR [rbx+0x38]
  41c8ba:	call   42e2b0 <xmlStrEqual@plt+0x2a370>
  41c8bf:	lea    rdi,[rbx+0x20]
  41c8c3:	call   419c30 <xmlStrEqual@plt+0x15cf0>
  41c8c8:	mov    rdi,rbx
  41c8cb:	pop    rbx
  41c8cc:	jmp    4037b0 <free@plt>
  41c8d1:	nop    DWORD PTR [rax+0x0]
  41c8d8:	ret    
  41c8d9:	nop    DWORD PTR [rax+0x0]
  41c8e0:	endbr64 
  41c8e4:	push   r12
  41c8e6:	mov    rax,0x4697e0
  41c8ed:	push   rbp
  41c8ee:	push   rbx
  41c8ef:	mov    r12,QWORD PTR [rax+0x70]
  41c8f3:	test   r12,r12
  41c8f6:	je     41c930 <xmlStrEqual@plt+0x189f0>
  41c8f8:	mov    rbp,0x474dd0
  41c8ff:	mov    rax,QWORD PTR [rbp+0x0]
  41c903:	mov    rbx,QWORD PTR [rax+0x8]
  41c907:	cmp    rax,rbx
  41c90a:	je     41c923 <xmlStrEqual@plt+0x189e3>
  41c90c:	nop    DWORD PTR [rax+0x0]
  41c910:	mov    rdi,QWORD PTR [rbx+0x10]
  41c914:	call   41c590 <xmlStrEqual@plt+0x18650>
  41c919:	mov    rbx,QWORD PTR [rbx+0x8]
  41c91d:	cmp    QWORD PTR [rbp+0x0],rbx
  41c921:	jne    41c910 <xmlStrEqual@plt+0x189d0>
  41c923:	pop    rbx
  41c924:	pop    rbp
  41c925:	mov    rdi,r12
  41c928:	pop    r12
  41c92a:	jmp    41c8a0 <xmlStrEqual@plt+0x18960>
  41c92f:	nop
  41c930:	pop    rbx
  41c931:	pop    rbp
  41c932:	pop    r12
  41c934:	ret    
  41c935:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41c93f:	nop
  41c940:	endbr64 
  41c944:	lea    rax,[rip+0x30e05]        # 44d750 <xmlStrEqual@plt+0x49810>
  41c94b:	ret    
  41c94c:	nop    DWORD PTR [rax+0x0]
  41c950:	endbr64 
  41c954:	cmp    edi,0x5
  41c957:	je     41c990 <xmlStrEqual@plt+0x18a50>
  41c959:	cmp    edi,0x6
  41c95c:	je     41c970 <xmlStrEqual@plt+0x18a30>
  41c95e:	cmp    edi,0x4
  41c961:	je     41c980 <xmlStrEqual@plt+0x18a40>
  41c963:	xor    eax,eax
  41c965:	ret    
  41c966:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41c970:	mov    rax,0x468c40
  41c977:	ret    
  41c978:	nop    DWORD PTR [rax+rax*1+0x0]
  41c980:	mov    rax,0x468d40
  41c987:	ret    
  41c988:	nop    DWORD PTR [rax+rax*1+0x0]
  41c990:	mov    rax,0x468ca0
  41c997:	ret    
  41c998:	nop    DWORD PTR [rax+rax*1+0x0]
  41c9a0:	endbr64 
  41c9a4:	mov    rax,rdi
  41c9a7:	test   rdi,rdi
  41c9aa:	je     41ca14 <xmlStrEqual@plt+0x18ad4>
  41c9ac:	mov    ecx,0x5
  41c9b1:	lea    rsi,[rip+0x30d78]        # 44d730 <xmlStrEqual@plt+0x497f0>
  41c9b8:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  41c9ba:	seta   dl
  41c9bd:	sbb    dl,0x0
  41c9c0:	test   dl,dl
  41c9c2:	je     41ca20 <xmlStrEqual@plt+0x18ae0>
  41c9c4:	mov    ecx,0x4
  41c9c9:	lea    rsi,[rip+0x30d65]        # 44d735 <xmlStrEqual@plt+0x497f5>
  41c9d0:	mov    rdi,rax
  41c9d3:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  41c9d5:	seta   dl
  41c9d8:	sbb    dl,0x0
  41c9db:	test   dl,dl
  41c9dd:	je     41ca20 <xmlStrEqual@plt+0x18ae0>
  41c9df:	mov    ecx,0x7
  41c9e4:	lea    rsi,[rip+0x30d4e]        # 44d739 <xmlStrEqual@plt+0x497f9>
  41c9eb:	mov    rdi,rax
  41c9ee:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  41c9f0:	seta   dl
  41c9f3:	sbb    dl,0x0
  41c9f6:	test   dl,dl
  41c9f8:	je     41ca40 <xmlStrEqual@plt+0x18b00>
  41c9fa:	mov    rdi,rax
  41c9fd:	mov    ecx,0x7
  41ca02:	lea    rsi,[rip+0x30d37]        # 44d740 <xmlStrEqual@plt+0x49800>
  41ca09:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  41ca0b:	seta   al
  41ca0e:	sbb    al,0x0
  41ca10:	test   al,al
  41ca12:	je     41ca30 <xmlStrEqual@plt+0x18af0>
  41ca14:	xor    eax,eax
  41ca16:	ret    
  41ca17:	nop    WORD PTR [rax+rax*1+0x0]
  41ca20:	mov    edi,0x4
  41ca25:	jmp    41c950 <xmlStrEqual@plt+0x18a10>
  41ca2a:	nop    WORD PTR [rax+rax*1+0x0]
  41ca30:	mov    edi,0x6
  41ca35:	jmp    41c950 <xmlStrEqual@plt+0x18a10>
  41ca3a:	nop    WORD PTR [rax+rax*1+0x0]
  41ca40:	mov    edi,0x5
  41ca45:	jmp    41c950 <xmlStrEqual@plt+0x18a10>
  41ca4a:	nop    WORD PTR [rax+rax*1+0x0]
  41ca50:	endbr64 
  41ca54:	vpxor  xmm0,xmm0,xmm0
  41ca58:	vmovups XMMWORD PTR [rdi],xmm0
  41ca5c:	mov    QWORD PTR [rdi+0x10],0x0
  41ca64:	ret    
  41ca65:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  41ca70:	endbr64 
  41ca74:	test   rdi,rdi
  41ca77:	je     41cae0 <xmlStrEqual@plt+0x18ba0>
  41ca79:	push   rbx
  41ca7a:	mov    rbx,rdi
  41ca7d:	mov    rax,QWORD PTR [rdi]
  41ca80:	test   rax,rax
  41ca83:	je     41cadb <xmlStrEqual@plt+0x18b9b>
  41ca85:	mov    rdi,QWORD PTR [rdi+0x8]
  41ca89:	test   rdi,rdi
  41ca8c:	je     41ca91 <xmlStrEqual@plt+0x18b51>
  41ca8e:	call   QWORD PTR [rax+0x40]
  41ca91:	mov    rdi,QWORD PTR [rbx+0x10]
  41ca95:	test   rdi,rdi
  41ca98:	je     41cac4 <xmlStrEqual@plt+0x18b84>
  41ca9a:	mov    rax,QWORD PTR [rbx]
  41ca9d:	mov    eax,DWORD PTR [rax+0x14]
  41caa0:	add    eax,eax
  41caa2:	cdqe   
  41caa4:	test   rax,rax
  41caa7:	je     41cabf <xmlStrEqual@plt+0x18b7f>
  41caa9:	add    rax,rdi
  41caac:	nop    DWORD PTR [rax+0x0]
  41cab0:	mov    BYTE PTR [rdi],0x0
  41cab3:	inc    rdi
  41cab6:	cmp    rdi,rax
  41cab9:	jne    41cab0 <xmlStrEqual@plt+0x18b70>
  41cabb:	mov    rdi,QWORD PTR [rbx+0x10]
  41cabf:	call   4037b0 <free@plt>
  41cac4:	lea    rax,[rbx+0x18]
  41cac8:	nop    DWORD PTR [rax+rax*1+0x0]
  41cad0:	mov    BYTE PTR [rbx],0x0
  41cad3:	inc    rbx
  41cad6:	cmp    rax,rbx
  41cad9:	jne    41cad0 <xmlStrEqual@plt+0x18b90>
  41cadb:	pop    rbx
  41cadc:	ret    
  41cadd:	nop    DWORD PTR [rax]
  41cae0:	ret    
  41cae1:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  41caec:	nop    DWORD PTR [rax+0x0]
  41caf0:	endbr64 
  41caf4:	test   rdi,rdi
  41caf7:	je     41cb30 <xmlStrEqual@plt+0x18bf0>
  41caf9:	mov    rax,QWORD PTR [rdi]
  41cafc:	test   rsi,rsi
  41caff:	je     41cb30 <xmlStrEqual@plt+0x18bf0>
  41cb01:	test   rax,rax
  41cb04:	je     41cb30 <xmlStrEqual@plt+0x18bf0>
  41cb06:	mov    rdx,QWORD PTR [rsi]
  41cb09:	cmp    rax,rdx
  41cb0c:	jne    41cb30 <xmlStrEqual@plt+0x18bf0>
  41cb0e:	test   rdx,rdx
  41cb11:	je     41cb30 <xmlStrEqual@plt+0x18bf0>
  41cb13:	sub    rsp,0x8
  41cb17:	mov    rsi,QWORD PTR [rsi+0x8]
  41cb1b:	mov    rdi,QWORD PTR [rdi+0x8]
  41cb1f:	call   QWORD PTR [rax+0x48]
  41cb22:	xor    eax,eax
  41cb24:	add    rsp,0x8
  41cb28:	ret    
  41cb29:	nop    DWORD PTR [rax+0x0]
  41cb30:	mov    eax,0xffffaf00
  41cb35:	ret    
  41cb36:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41cb40:	endbr64 
  41cb44:	test   rsi,rsi
  41cb47:	je     41cbb8 <xmlStrEqual@plt+0x18c78>
  41cb49:	test   rdi,rdi
  41cb4c:	je     41cbb8 <xmlStrEqual@plt+0x18c78>
  41cb4e:	push   r13
  41cb50:	push   r12
  41cb52:	mov    r12d,edx
  41cb55:	push   rbp
  41cb56:	mov    rbp,rdi
  41cb59:	push   rbx
  41cb5a:	mov    rbx,rsi
  41cb5d:	sub    rsp,0x8
  41cb61:	call   QWORD PTR [rsi+0x38]
  41cb64:	mov    r13,rax
  41cb67:	mov    QWORD PTR [rbp+0x8],rax
  41cb6b:	test   rax,rax
  41cb6e:	je     41cbbe <xmlStrEqual@plt+0x18c7e>
  41cb70:	test   r12d,r12d
  41cb73:	jne    41cb90 <xmlStrEqual@plt+0x18c50>
  41cb75:	mov    QWORD PTR [rbp+0x0],rbx
  41cb79:	xor    eax,eax
  41cb7b:	add    rsp,0x8
  41cb7f:	pop    rbx
  41cb80:	pop    rbp
  41cb81:	pop    r12
  41cb83:	pop    r13
  41cb85:	ret    
  41cb86:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41cb90:	movsxd rsi,DWORD PTR [rbx+0x14]
  41cb94:	mov    edi,0x2
  41cb99:	call   403a80 <calloc@plt>
  41cb9e:	mov    QWORD PTR [rbp+0x10],rax
  41cba2:	test   rax,rax
  41cba5:	jne    41cb75 <xmlStrEqual@plt+0x18c35>
  41cba7:	mov    rdi,r13
  41cbaa:	call   QWORD PTR [rbx+0x40]
  41cbad:	mov    eax,0xffffae80
  41cbb2:	jmp    41cb7b <xmlStrEqual@plt+0x18c3b>
  41cbb4:	nop    DWORD PTR [rax+0x0]
  41cbb8:	mov    eax,0xffffaf00
  41cbbd:	ret    
  41cbbe:	mov    eax,0xffffae80
  41cbc3:	jmp    41cb7b <xmlStrEqual@plt+0x18c3b>
  41cbc5:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  41cbd0:	endbr64 
  41cbd4:	mov    edx,0x1
  41cbd9:	jmp    41cb40 <xmlStrEqual@plt+0x18c00>
  41cbde:	xchg   ax,ax
  41cbe0:	endbr64 
  41cbe4:	test   rdi,rdi
  41cbe7:	je     41cc03 <xmlStrEqual@plt+0x18cc3>
  41cbe9:	mov    rax,QWORD PTR [rdi]
  41cbec:	test   rax,rax
  41cbef:	je     41cc03 <xmlStrEqual@plt+0x18cc3>
  41cbf1:	sub    rsp,0x8
  41cbf5:	mov    rdi,QWORD PTR [rdi+0x8]
  41cbf9:	call   QWORD PTR [rax+0x18]
  41cbfc:	xor    eax,eax
  41cbfe:	add    rsp,0x8
  41cc02:	ret    
  41cc03:	mov    eax,0xffffaf00
  41cc08:	ret    
  41cc09:	nop    DWORD PTR [rax+0x0]
  41cc10:	endbr64 
  41cc14:	test   rdi,rdi
  41cc17:	je     41cc33 <xmlStrEqual@plt+0x18cf3>
  41cc19:	mov    rax,QWORD PTR [rdi]
  41cc1c:	test   rax,rax
  41cc1f:	je     41cc33 <xmlStrEqual@plt+0x18cf3>
  41cc21:	sub    rsp,0x8
  41cc25:	mov    rdi,QWORD PTR [rdi+0x8]
  41cc29:	call   QWORD PTR [rax+0x20]
  41cc2c:	xor    eax,eax
  41cc2e:	add    rsp,0x8
  41cc32:	ret    
  41cc33:	mov    eax,0xffffaf00
  41cc38:	ret    
  41cc39:	nop    DWORD PTR [rax+0x0]
  41cc40:	endbr64 
  41cc44:	test   rdi,rdi
  41cc47:	je     41cc63 <xmlStrEqual@plt+0x18d23>
  41cc49:	mov    rax,QWORD PTR [rdi]
  41cc4c:	test   rax,rax
  41cc4f:	je     41cc63 <xmlStrEqual@plt+0x18d23>
  41cc51:	sub    rsp,0x8
  41cc55:	mov    rdi,QWORD PTR [rdi+0x8]
  41cc59:	call   QWORD PTR [rax+0x28]
  41cc5c:	xor    eax,eax
  41cc5e:	add    rsp,0x8
  41cc62:	ret    
  41cc63:	mov    eax,0xffffaf00
  41cc68:	ret    
  41cc69:	nop    DWORD PTR [rax+0x0]
  41cc70:	endbr64 
  41cc74:	mov    rax,rdi
  41cc77:	test   rdi,rdi
  41cc7a:	je     41cc93 <xmlStrEqual@plt+0x18d53>
  41cc7c:	sub    rsp,0x8
  41cc80:	mov    rdi,rsi
  41cc83:	mov    rsi,rdx
  41cc86:	mov    rdx,rcx
  41cc89:	call   QWORD PTR [rax+0x30]
  41cc8c:	xor    eax,eax
  41cc8e:	add    rsp,0x8
  41cc92:	ret    
  41cc93:	mov    eax,0xffffaf00
  41cc98:	ret    
  41cc99:	nop    DWORD PTR [rax+0x0]
  41cca0:	endbr64 
  41cca4:	push   r15
  41cca6:	push   r14
  41cca8:	push   r13
  41ccaa:	push   r12
  41ccac:	push   rbp
  41ccad:	push   rbx
  41ccae:	sub    rsp,0x38
  41ccb2:	mov    rax,QWORD PTR fs:0x28
  41ccbb:	mov    QWORD PTR [rsp+0x28],rax
  41ccc0:	xor    eax,eax
  41ccc2:	test   rdi,rdi
  41ccc5:	je     41cddb <xmlStrEqual@plt+0x18e9b>
  41cccb:	mov    rax,QWORD PTR [rdi]
  41ccce:	mov    r14,rdi
  41ccd1:	test   rax,rax
  41ccd4:	je     41cddb <xmlStrEqual@plt+0x18e9b>
  41ccda:	mov    rbp,QWORD PTR [rdi+0x10]
  41ccde:	test   rbp,rbp
  41cce1:	je     41cddb <xmlStrEqual@plt+0x18e9b>
  41cce7:	mov    r15,rdx
  41ccea:	movsxd rdx,DWORD PTR [rax+0x14]
  41ccee:	mov    r12,rsi
  41ccf1:	mov    rbx,rsp
  41ccf4:	cmp    rdx,r15
  41ccf7:	jb     41cda0 <xmlStrEqual@plt+0x18e60>
  41ccfd:	mov    esi,0x36
  41cd02:	mov    rdi,rbp
  41cd05:	lea    r13,[rbp+rdx*1+0x0]
  41cd0a:	call   4039f0 <memset@plt>
  41cd0f:	mov    rax,QWORD PTR [r14]
  41cd12:	mov    esi,0x5c
  41cd17:	movsxd rdx,DWORD PTR [rax+0x14]
  41cd1b:	mov    rdi,r13
  41cd1e:	call   4039f0 <memset@plt>
  41cd23:	xor    eax,eax
  41cd25:	test   r15,r15
  41cd28:	je     41cd4b <xmlStrEqual@plt+0x18e0b>
  41cd2a:	nop    WORD PTR [rax+rax*1+0x0]
  41cd30:	movzx  edx,BYTE PTR [r12+rax*1]
  41cd35:	xor    BYTE PTR [rbp+rax*1+0x0],dl
  41cd39:	movzx  edx,BYTE PTR [r12+rax*1]
  41cd3e:	xor    BYTE PTR [r13+rax*1+0x0],dl
  41cd43:	inc    rax
  41cd46:	cmp    r15,rax
  41cd49:	jne    41cd30 <xmlStrEqual@plt+0x18df0>
  41cd4b:	mov    rsi,rbx
  41cd4e:	lea    rax,[rbx+0x20]
  41cd52:	nop    WORD PTR [rax+rax*1+0x0]
  41cd58:	mov    BYTE PTR [rsi],0x0
  41cd5b:	inc    rsi
  41cd5e:	cmp    rsi,rax
  41cd61:	jne    41cd58 <xmlStrEqual@plt+0x18e18>
  41cd63:	mov    rdi,QWORD PTR [r14+0x8]
  41cd67:	mov    rax,QWORD PTR [r14]
  41cd6a:	call   QWORD PTR [rax+0x18]
  41cd6d:	mov    rax,QWORD PTR [r14]
  41cd70:	mov    rdi,QWORD PTR [r14+0x8]
  41cd74:	movsxd rdx,DWORD PTR [rax+0x14]
  41cd78:	mov    rsi,rbp
  41cd7b:	call   QWORD PTR [rax+0x20]
  41cd7e:	xor    eax,eax
  41cd80:	mov    rcx,QWORD PTR [rsp+0x28]
  41cd85:	xor    rcx,QWORD PTR fs:0x28
  41cd8e:	jne    41cde2 <xmlStrEqual@plt+0x18ea2>
  41cd90:	add    rsp,0x38
  41cd94:	pop    rbx
  41cd95:	pop    rbp
  41cd96:	pop    r12
  41cd98:	pop    r13
  41cd9a:	pop    r14
  41cd9c:	pop    r15
  41cd9e:	ret    
  41cd9f:	nop
  41cda0:	mov    rdi,QWORD PTR [rdi+0x8]
  41cda4:	call   QWORD PTR [rax+0x18]
  41cda7:	mov    rdi,QWORD PTR [r14+0x8]
  41cdab:	mov    rax,QWORD PTR [r14]
  41cdae:	mov    rdx,r15
  41cdb1:	mov    rsi,r12
  41cdb4:	call   QWORD PTR [rax+0x20]
  41cdb7:	mov    rax,QWORD PTR [r14]
  41cdba:	mov    rdi,QWORD PTR [r14+0x8]
  41cdbe:	mov    rsi,rbx
  41cdc1:	call   QWORD PTR [rax+0x28]
  41cdc4:	mov    rax,QWORD PTR [r14]
  41cdc7:	mov    rbp,QWORD PTR [r14+0x10]
  41cdcb:	movsxd r15,DWORD PTR [rax+0x10]
  41cdcf:	movsxd rdx,DWORD PTR [rax+0x14]
  41cdd3:	mov    r12,rbx
  41cdd6:	jmp    41ccfd <xmlStrEqual@plt+0x18dbd>
  41cddb:	mov    eax,0xffffaf00
  41cde0:	jmp    41cd80 <xmlStrEqual@plt+0x18e40>
  41cde2:	call   403c00 <__stack_chk_fail@plt>
  41cde7:	nop    WORD PTR [rax+rax*1+0x0]
  41cdf0:	endbr64 
  41cdf4:	test   rdi,rdi
  41cdf7:	je     41ce20 <xmlStrEqual@plt+0x18ee0>
  41cdf9:	mov    rax,QWORD PTR [rdi]
  41cdfc:	test   rax,rax
  41cdff:	je     41ce20 <xmlStrEqual@plt+0x18ee0>
  41ce01:	cmp    QWORD PTR [rdi+0x10],0x0
  41ce06:	je     41ce20 <xmlStrEqual@plt+0x18ee0>
  41ce08:	sub    rsp,0x8
  41ce0c:	mov    rdi,QWORD PTR [rdi+0x8]
  41ce10:	call   QWORD PTR [rax+0x20]
  41ce13:	xor    eax,eax
  41ce15:	add    rsp,0x8
  41ce19:	ret    
  41ce1a:	nop    WORD PTR [rax+rax*1+0x0]
  41ce20:	mov    eax,0xffffaf00
  41ce25:	ret    
  41ce26:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41ce30:	endbr64 
  41ce34:	push   r13
  41ce36:	push   r12
  41ce38:	push   rbp
  41ce39:	push   rbx
  41ce3a:	sub    rsp,0x38
  41ce3e:	mov    rax,QWORD PTR fs:0x28
  41ce47:	mov    QWORD PTR [rsp+0x28],rax
  41ce4c:	xor    eax,eax
  41ce4e:	test   rdi,rdi
  41ce51:	je     41cee0 <xmlStrEqual@plt+0x18fa0>
  41ce57:	mov    rax,QWORD PTR [rdi]
  41ce5a:	mov    rbx,rdi
  41ce5d:	test   rax,rax
  41ce60:	je     41cee0 <xmlStrEqual@plt+0x18fa0>
  41ce62:	mov    rdx,QWORD PTR [rdi+0x10]
  41ce66:	test   rdx,rdx
  41ce69:	je     41cee0 <xmlStrEqual@plt+0x18fa0>
  41ce6b:	movsxd rbp,DWORD PTR [rax+0x14]
  41ce6f:	mov    r13,rsp
  41ce72:	mov    rdi,QWORD PTR [rdi+0x8]
  41ce76:	mov    r12,rsi
  41ce79:	mov    rsi,r13
  41ce7c:	add    rbp,rdx
  41ce7f:	call   QWORD PTR [rax+0x28]
  41ce82:	mov    rdi,QWORD PTR [rbx+0x8]
  41ce86:	mov    rax,QWORD PTR [rbx]
  41ce89:	call   QWORD PTR [rax+0x18]
  41ce8c:	mov    rax,QWORD PTR [rbx]
  41ce8f:	mov    rdi,QWORD PTR [rbx+0x8]
  41ce93:	movsxd rdx,DWORD PTR [rax+0x14]
  41ce97:	mov    rsi,rbp
  41ce9a:	call   QWORD PTR [rax+0x20]
  41ce9d:	mov    rax,QWORD PTR [rbx]
  41cea0:	mov    rdi,QWORD PTR [rbx+0x8]
  41cea4:	movsxd rdx,DWORD PTR [rax+0x10]
  41cea8:	mov    rsi,r13
  41ceab:	call   QWORD PTR [rax+0x20]
  41ceae:	mov    rax,QWORD PTR [rbx]
  41ceb1:	mov    rdi,QWORD PTR [rbx+0x8]
  41ceb5:	mov    rsi,r12
  41ceb8:	call   QWORD PTR [rax+0x28]
  41cebb:	xor    eax,eax
  41cebd:	mov    rcx,QWORD PTR [rsp+0x28]
  41cec2:	xor    rcx,QWORD PTR fs:0x28
  41cecb:	jne    41cee7 <xmlStrEqual@plt+0x18fa7>
  41cecd:	add    rsp,0x38
  41ced1:	pop    rbx
  41ced2:	pop    rbp
  41ced3:	pop    r12
  41ced5:	pop    r13
  41ced7:	ret    
  41ced8:	nop    DWORD PTR [rax+rax*1+0x0]
  41cee0:	mov    eax,0xffffaf00
  41cee5:	jmp    41cebd <xmlStrEqual@plt+0x18f7d>
  41cee7:	call   403c00 <__stack_chk_fail@plt>
  41ceec:	nop    DWORD PTR [rax+0x0]
  41cef0:	endbr64 
  41cef4:	test   rdi,rdi
  41cef7:	je     41cf34 <xmlStrEqual@plt+0x18ff4>
  41cef9:	mov    rax,QWORD PTR [rdi]
  41cefc:	test   rax,rax
  41ceff:	je     41cf34 <xmlStrEqual@plt+0x18ff4>
  41cf01:	push   rbp
  41cf02:	push   rbx
  41cf03:	sub    rsp,0x8
  41cf07:	mov    rbp,QWORD PTR [rdi+0x10]
  41cf0b:	test   rbp,rbp
  41cf0e:	je     41cf3a <xmlStrEqual@plt+0x18ffa>
  41cf10:	mov    rbx,rdi
  41cf13:	mov    rdi,QWORD PTR [rdi+0x8]
  41cf17:	call   QWORD PTR [rax+0x18]
  41cf1a:	mov    rax,QWORD PTR [rbx]
  41cf1d:	mov    rdi,QWORD PTR [rbx+0x8]
  41cf21:	movsxd rdx,DWORD PTR [rax+0x14]
  41cf25:	mov    rsi,rbp
  41cf28:	call   QWORD PTR [rax+0x20]
  41cf2b:	xor    eax,eax
  41cf2d:	add    rsp,0x8
  41cf31:	pop    rbx
  41cf32:	pop    rbp
  41cf33:	ret    
  41cf34:	mov    eax,0xffffaf00
  41cf39:	ret    
  41cf3a:	mov    eax,0xffffaf00
  41cf3f:	jmp    41cf2d <xmlStrEqual@plt+0x18fed>
  41cf41:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  41cf4c:	nop    DWORD PTR [rax+0x0]
  41cf50:	endbr64 
  41cf54:	push   r15
  41cf56:	push   r14
  41cf58:	push   r13
  41cf5a:	push   r12
  41cf5c:	push   rbp
  41cf5d:	push   rbx
  41cf5e:	sub    rsp,0x38
  41cf62:	mov    QWORD PTR [rsp],r9
  41cf66:	mov    rax,QWORD PTR fs:0x28
  41cf6f:	mov    QWORD PTR [rsp+0x28],rax
  41cf74:	xor    eax,eax
  41cf76:	test   rdi,rdi
  41cf79:	je     41d00a <xmlStrEqual@plt+0x190ca>
  41cf7f:	lea    rbx,[rsp+0x10]
  41cf84:	mov    rbp,rdi
  41cf87:	mov    rdi,rbx
  41cf8a:	mov    r12,rcx
  41cf8d:	mov    r14,rsi
  41cf90:	mov    r15,rdx
  41cf93:	mov    r13,r8
  41cf96:	call   41ca50 <xmlStrEqual@plt+0x18b10>
  41cf9b:	mov    edx,0x1
  41cfa0:	mov    rsi,rbp
  41cfa3:	mov    rdi,rbx
  41cfa6:	call   41cb40 <xmlStrEqual@plt+0x18c00>
  41cfab:	mov    ecx,eax
  41cfad:	test   eax,eax
  41cfaf:	jne    41cfe9 <xmlStrEqual@plt+0x190a9>
  41cfb1:	mov    rdx,r15
  41cfb4:	mov    rsi,r14
  41cfb7:	mov    rdi,rbx
  41cfba:	mov    DWORD PTR [rsp+0xc],eax
  41cfbe:	call   41cca0 <xmlStrEqual@plt+0x18d60>
  41cfc3:	mov    rdx,r13
  41cfc6:	mov    rsi,r12
  41cfc9:	mov    rdi,rbx
  41cfcc:	call   41cdf0 <xmlStrEqual@plt+0x18eb0>
  41cfd1:	mov    rsi,QWORD PTR [rsp]
  41cfd5:	mov    rdi,rbx
  41cfd8:	call   41ce30 <xmlStrEqual@plt+0x18ef0>
  41cfdd:	mov    rdi,rbx
  41cfe0:	call   41ca70 <xmlStrEqual@plt+0x18b30>
  41cfe5:	mov    ecx,DWORD PTR [rsp+0xc]
  41cfe9:	mov    rdx,QWORD PTR [rsp+0x28]
  41cfee:	xor    rdx,QWORD PTR fs:0x28
  41cff7:	mov    eax,ecx
  41cff9:	jne    41d011 <xmlStrEqual@plt+0x190d1>
  41cffb:	add    rsp,0x38
  41cfff:	pop    rbx
  41d000:	pop    rbp
  41d001:	pop    r12
  41d003:	pop    r13
  41d005:	pop    r14
  41d007:	pop    r15
  41d009:	ret    
  41d00a:	mov    ecx,0xffffaf00
  41d00f:	jmp    41cfe9 <xmlStrEqual@plt+0x190a9>
  41d011:	call   403c00 <__stack_chk_fail@plt>
  41d016:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41d020:	endbr64 
  41d024:	test   rdi,rdi
  41d027:	je     41d043 <xmlStrEqual@plt+0x19103>
  41d029:	mov    rax,QWORD PTR [rdi]
  41d02c:	test   rax,rax
  41d02f:	je     41d043 <xmlStrEqual@plt+0x19103>
  41d031:	sub    rsp,0x8
  41d035:	mov    rdi,QWORD PTR [rdi+0x8]
  41d039:	call   QWORD PTR [rax+0x50]
  41d03c:	xor    eax,eax
  41d03e:	add    rsp,0x8
  41d042:	ret    
  41d043:	mov    eax,0xffffaf00
  41d048:	ret    
  41d049:	nop    DWORD PTR [rax+0x0]
  41d050:	endbr64 
  41d054:	test   rdi,rdi
  41d057:	je     41d060 <xmlStrEqual@plt+0x19120>
  41d059:	movzx  eax,BYTE PTR [rdi+0x10]
  41d05d:	ret    
  41d05e:	xchg   ax,ax
  41d060:	xor    eax,eax
  41d062:	ret    
  41d063:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  41d06e:	xchg   ax,ax
  41d070:	endbr64 
  41d074:	test   rdi,rdi
  41d077:	je     41d080 <xmlStrEqual@plt+0x19140>
  41d079:	mov    eax,DWORD PTR [rdi]
  41d07b:	ret    
  41d07c:	nop    DWORD PTR [rax+0x0]
  41d080:	xor    eax,eax
  41d082:	ret    
  41d083:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  41d08e:	xchg   ax,ax
  41d090:	endbr64 
  41d094:	test   rdi,rdi
  41d097:	je     41d0a0 <xmlStrEqual@plt+0x19160>
  41d099:	mov    rax,QWORD PTR [rdi+0x8]
  41d09d:	ret    
  41d09e:	xchg   ax,ax
  41d0a0:	xor    eax,eax
  41d0a2:	ret    
  41d0a3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41d0ad:	nop    DWORD PTR [rax]
  41d0b0:	endbr64 
  41d0b4:	mov    QWORD PTR [rdi],0x0
  41d0bb:	mov    QWORD PTR [rdi+0x54],0x0
  41d0c3:	mov    rcx,rdi
  41d0c6:	lea    rdi,[rdi+0x8]
  41d0ca:	and    rdi,0xfffffffffffffff8
  41d0ce:	sub    rcx,rdi
  41d0d1:	add    ecx,0x5c
  41d0d4:	shr    ecx,0x3
  41d0d7:	xor    eax,eax
  41d0d9:	rep stos QWORD PTR es:[rdi],rax
  41d0dc:	ret    
  41d0dd:	nop    DWORD PTR [rax]
  41d0e0:	endbr64 
  41d0e4:	test   rdi,rdi
  41d0e7:	je     41d0fb <xmlStrEqual@plt+0x191bb>
  41d0e9:	lea    rax,[rdi+0x5c]
  41d0ed:	nop    DWORD PTR [rax]
  41d0f0:	mov    BYTE PTR [rdi],0x0
  41d0f3:	inc    rdi
  41d0f6:	cmp    rax,rdi
  41d0f9:	jne    41d0f0 <xmlStrEqual@plt+0x191b0>
  41d0fb:	ret    
  41d0fc:	nop    DWORD PTR [rax+0x0]
  41d100:	endbr64 
  41d104:	vmovdqu xmm0,XMMWORD PTR [rsi]
  41d108:	vmovups XMMWORD PTR [rdi],xmm0
  41d10c:	vmovdqu xmm1,XMMWORD PTR [rsi+0x10]
  41d111:	vmovups XMMWORD PTR [rdi+0x10],xmm1
  41d116:	vmovdqu xmm2,XMMWORD PTR [rsi+0x20]
  41d11b:	vmovups XMMWORD PTR [rdi+0x20],xmm2
  41d120:	vmovdqu xmm3,XMMWORD PTR [rsi+0x30]
  41d125:	vmovups XMMWORD PTR [rdi+0x30],xmm3
  41d12a:	vmovdqu xmm4,XMMWORD PTR [rsi+0x40]
  41d12f:	vmovups XMMWORD PTR [rdi+0x40],xmm4
  41d134:	mov    rax,QWORD PTR [rsi+0x50]
  41d138:	mov    QWORD PTR [rdi+0x50],rax
  41d13c:	mov    eax,DWORD PTR [rsi+0x58]
  41d13f:	mov    DWORD PTR [rdi+0x58],eax
  41d142:	ret    
  41d143:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  41d14e:	xchg   ax,ax
  41d150:	endbr64 
  41d154:	movabs rax,0xefcdab8967452301
  41d15e:	mov    QWORD PTR [rdi+0x8],rax
  41d162:	movabs rax,0x1032547698badcfe
  41d16c:	mov    QWORD PTR [rdi],0x0
  41d173:	mov    QWORD PTR [rdi+0x10],rax
  41d177:	mov    DWORD PTR [rdi+0x18],0xc3d2e1f0
  41d17e:	ret    
  41d17f:	nop
  41d180:	endbr64 
  41d184:	push   r15
  41d186:	push   r14
  41d188:	push   r13
  41d18a:	push   r12
  41d18c:	push   rbp
  41d18d:	push   rbx
  41d18e:	movbe  eax,DWORD PTR [rsi]
  41d192:	movbe  edx,DWORD PTR [rsi+0x28]
  41d197:	mov    DWORD PTR [rsp-0x38],eax
  41d19b:	movbe  eax,DWORD PTR [rsi+0x2c]
  41d1a0:	movbe  ecx,DWORD PTR [rsi+0x30]
  41d1a5:	mov    DWORD PTR [rsp-0x40],eax
  41d1a9:	movbe  eax,DWORD PTR [rsi+0x34]
  41d1ae:	movbe  ebx,DWORD PTR [rsi+0x4]
  41d1b3:	mov    DWORD PTR [rsp-0x44],edx
  41d1b7:	mov    DWORD PTR [rsp-0x3c],ecx
  41d1bb:	movbe  edx,DWORD PTR [rsi+0x3c]
  41d1c0:	movbe  ecx,DWORD PTR [rsi+0x38]
  41d1c5:	movbe  r15d,DWORD PTR [rsi+0x24]
  41d1cb:	movbe  r12d,DWORD PTR [rsi+0x20]
  41d1d1:	movbe  r10d,DWORD PTR [rsi+0x8]
  41d1d7:	movbe  r9d,DWORD PTR [rsi+0xc]
  41d1dd:	movbe  r8d,DWORD PTR [rsi+0x10]
  41d1e3:	movbe  ebp,DWORD PTR [rsi+0x14]
  41d1e8:	movbe  r14d,DWORD PTR [rsi+0x18]
  41d1ee:	movbe  r13d,DWORD PTR [rsi+0x1c]
  41d1f4:	mov    DWORD PTR [rsp-0x50],eax
  41d1f8:	mov    esi,DWORD PTR [rdi+0x8]
  41d1fb:	mov    rax,rdi
  41d1fe:	mov    edi,DWORD PTR [rdi+0xc]
  41d201:	mov    DWORD PTR [rsp-0x4c],ecx
  41d205:	mov    DWORD PTR [rsp-0x48],edx
  41d209:	mov    DWORD PTR [rsp-0x34],ebx
  41d20d:	mov    ebx,DWORD PTR [rax+0x10]
  41d210:	mov    ecx,DWORD PTR [rax+0x18]
  41d213:	mov    r11d,edi
  41d216:	mov    edi,DWORD PTR [rax+0x14]
  41d219:	mov    DWORD PTR [rsp-0x1c],ecx
  41d21d:	mov    ecx,ebx
  41d21f:	xor    ecx,edi
  41d221:	mov    QWORD PTR [rsp-0x8],rax
  41d226:	mov    eax,ecx
  41d228:	and    eax,r11d
  41d22b:	mov    ecx,r11d
  41d22e:	xor    eax,edi
  41d230:	mov    r11d,edi
  41d233:	rorx   edx,esi,0x1b
  41d239:	mov    edi,esi
  41d23b:	mov    esi,DWORD PTR [rsp-0x1c]
  41d23f:	mov    DWORD PTR [rsp-0x14],ecx
  41d243:	lea    edx,[rsi+rdx*1+0x5a827999]
  41d24a:	add    eax,edx
  41d24c:	mov    edx,ebx
  41d24e:	rorx   ecx,ecx,0x2
  41d254:	xor    edx,ecx
  41d256:	and    edx,edi
  41d258:	xor    edx,ebx
  41d25a:	mov    esi,ebx
  41d25c:	lea    ebx,[r11+rdx*1+0x5a827999]
  41d264:	add    eax,DWORD PTR [rsp-0x38]
  41d268:	add    ebx,DWORD PTR [rsp-0x34]
  41d26c:	mov    DWORD PTR [rsp-0xc],r11d
  41d271:	mov    r11d,ecx
  41d274:	rorx   edx,eax,0x1b
  41d27a:	add    ebx,edx
  41d27c:	rorx   edx,edi,0x2
  41d282:	xor    r11d,edx
  41d285:	and    r11d,eax
  41d288:	mov    DWORD PTR [rsp-0x18],edi
  41d28c:	xor    r11d,ecx
  41d28f:	mov    DWORD PTR [rsp-0x10],esi
  41d293:	mov    edi,edx
  41d295:	lea    esi,[r10+rsi*1+0x5a827999]
  41d29d:	rorx   eax,eax,0x2
  41d2a3:	add    r11d,esi
  41d2a6:	xor    edi,eax
  41d2a8:	rorx   esi,ebx,0x1b
  41d2ae:	and    edi,ebx
  41d2b0:	add    r11d,esi
  41d2b3:	mov    esi,eax
  41d2b5:	rorx   ebx,ebx,0x2
  41d2bb:	xor    edi,edx
  41d2bd:	lea    ecx,[r9+rcx*1+0x5a827999]
  41d2c5:	xor    esi,ebx
  41d2c7:	add    edi,ecx
  41d2c9:	and    esi,r11d
  41d2cc:	rorx   ecx,r11d,0x1b
  41d2d2:	xor    esi,eax
  41d2d4:	add    edi,ecx
  41d2d6:	lea    edx,[r8+rdx*1+0x5a827999]
  41d2de:	mov    ecx,ebx
  41d2e0:	rorx   r11d,r11d,0x2
  41d2e6:	add    esi,edx
  41d2e8:	xor    ecx,r11d
  41d2eb:	rorx   edx,edi,0x1b
  41d2f1:	and    ecx,edi
  41d2f3:	add    esi,edx
  41d2f5:	mov    edx,r11d
  41d2f8:	rorx   edi,edi,0x2
  41d2fe:	xor    ecx,ebx
  41d300:	lea    eax,[rbp+rax*1+0x5a827999]
  41d307:	xor    edx,edi
  41d309:	add    ecx,eax
  41d30b:	and    edx,esi
  41d30d:	rorx   eax,esi,0x1b
  41d313:	add    ecx,eax
  41d315:	xor    edx,r11d
  41d318:	lea    eax,[r14+rbx*1+0x5a827999]
  41d320:	mov    ebx,edi
  41d322:	rorx   esi,esi,0x2
  41d328:	add    edx,eax
  41d32a:	xor    ebx,esi
  41d32c:	rorx   eax,ecx,0x1b
  41d332:	add    edx,eax
  41d334:	mov    eax,ebx
  41d336:	and    eax,ecx
  41d338:	xor    eax,edi
  41d33a:	lea    r11d,[r13+r11*1+0x5a827999]
  41d342:	add    eax,r11d
  41d345:	rorx   r11d,edx,0x1b
  41d34b:	add    eax,r11d
  41d34e:	mov    r11d,esi
  41d351:	rorx   ecx,ecx,0x2
  41d357:	xor    r11d,ecx
  41d35a:	and    r11d,edx
  41d35d:	xor    r11d,esi
  41d360:	lea    edi,[r12+rdi*1+0x5a827999]
  41d368:	add    r11d,edi
  41d36b:	rorx   edi,eax,0x1b
  41d371:	add    r11d,edi
  41d374:	mov    edi,ecx
  41d376:	rorx   edx,edx,0x2
  41d37c:	xor    edi,edx
  41d37e:	and    edi,eax
  41d380:	xor    edi,ecx
  41d382:	lea    esi,[r15+rsi*1+0x5a827999]
  41d38a:	mov    ebx,edx
  41d38c:	rorx   eax,eax,0x2
  41d392:	add    edi,esi
  41d394:	xor    ebx,eax
  41d396:	rorx   esi,r11d,0x1b
  41d39c:	add    edi,esi
  41d39e:	mov    esi,ebx
  41d3a0:	mov    ebx,DWORD PTR [rsp-0x44]
  41d3a4:	and    esi,r11d
  41d3a7:	xor    esi,edx
  41d3a9:	lea    ecx,[rbx+rcx*1+0x5a827999]
  41d3b0:	mov    ebx,eax
  41d3b2:	rorx   r11d,r11d,0x2
  41d3b8:	add    esi,ecx
  41d3ba:	xor    ebx,r11d
  41d3bd:	rorx   ecx,edi,0x1b
  41d3c3:	add    esi,ecx
  41d3c5:	mov    ecx,ebx
  41d3c7:	mov    ebx,DWORD PTR [rsp-0x40]
  41d3cb:	and    ecx,edi
  41d3cd:	xor    ecx,eax
  41d3cf:	lea    edx,[rbx+rdx*1+0x5a827999]
  41d3d6:	add    ecx,edx
  41d3d8:	rorx   edx,esi,0x1b
  41d3de:	add    ecx,edx
  41d3e0:	mov    edx,r11d
  41d3e3:	rorx   edi,edi,0x2
  41d3e9:	mov    ebx,DWORD PTR [rsp-0x3c]
  41d3ed:	xor    edx,edi
  41d3ef:	and    edx,esi
  41d3f1:	xor    edx,r11d
  41d3f4:	lea    eax,[rbx+rax*1+0x5a827999]
  41d3fb:	add    edx,eax
  41d3fd:	rorx   eax,ecx,0x1b
  41d403:	add    edx,eax
  41d405:	mov    eax,edi
  41d407:	rorx   esi,esi,0x2
  41d40d:	mov    ebx,DWORD PTR [rsp-0x50]
  41d411:	xor    eax,esi
  41d413:	and    eax,ecx
  41d415:	xor    eax,edi
  41d417:	lea    r11d,[rbx+r11*1+0x5a827999]
  41d41f:	add    eax,r11d
  41d422:	rorx   r11d,edx,0x1b
  41d428:	add    eax,r11d
  41d42b:	mov    r11d,esi
  41d42e:	rorx   ecx,ecx,0x2
  41d434:	xor    r11d,ecx
  41d437:	mov    ebx,r11d
  41d43a:	mov    r11d,DWORD PTR [rsp-0x4c]
  41d43f:	and    ebx,edx
  41d441:	xor    ebx,esi
  41d443:	lea    edi,[r11+rdi*1+0x5a827999]
  41d44b:	add    ebx,edi
  41d44d:	rorx   edi,eax,0x1b
  41d453:	add    ebx,edi
  41d455:	mov    edi,ecx
  41d457:	rorx   edx,edx,0x2
  41d45d:	mov    r11d,DWORD PTR [rsp-0x48]
  41d462:	xor    edi,edx
  41d464:	and    edi,eax
  41d466:	xor    edi,ecx
  41d468:	lea    esi,[r11+rsi*1+0x5a827999]
  41d470:	add    edi,esi
  41d472:	rorx   esi,ebx,0x1b
  41d478:	add    edi,esi
  41d47a:	mov    esi,DWORD PTR [rsp-0x38]
  41d47e:	rorx   eax,eax,0x2
  41d484:	xor    esi,r10d
  41d487:	mov    r11d,esi
  41d48a:	mov    esi,edx
  41d48c:	xor    r11d,r12d
  41d48f:	xor    esi,eax
  41d491:	xor    r11d,DWORD PTR [rsp-0x50]
  41d496:	and    esi,ebx
  41d498:	rorx   r11d,r11d,0x1f
  41d49e:	xor    esi,edx
  41d4a0:	lea    ecx,[r11+rcx*1+0x5a827999]
  41d4a8:	add    esi,ecx
  41d4aa:	rorx   ecx,edi,0x1b
  41d4b0:	add    esi,ecx
  41d4b2:	mov    ecx,DWORD PTR [rsp-0x34]
  41d4b6:	mov    DWORD PTR [rsp-0x38],r11d
  41d4bb:	xor    ecx,r9d
  41d4be:	xor    ecx,r15d
  41d4c1:	xor    ecx,DWORD PTR [rsp-0x4c]
  41d4c5:	rorx   ecx,ecx,0x1f
  41d4cb:	mov    r11d,ecx
  41d4ce:	mov    ecx,eax
  41d4d0:	rorx   ebx,ebx,0x2
  41d4d6:	xor    ecx,ebx
  41d4d8:	and    ecx,edi
  41d4da:	xor    ecx,eax
  41d4dc:	lea    edx,[r11+rdx*1+0x5a827999]
  41d4e4:	add    ecx,edx
  41d4e6:	rorx   edx,esi,0x1b
  41d4ec:	add    ecx,edx
  41d4ee:	xor    r10d,r8d
  41d4f1:	mov    edx,ebx
  41d4f3:	rorx   edi,edi,0x2
  41d4f9:	xor    r10d,DWORD PTR [rsp-0x44]
  41d4fe:	xor    edx,edi
  41d500:	xor    r10d,DWORD PTR [rsp-0x48]
  41d505:	and    edx,esi
  41d507:	rorx   r10d,r10d,0x1f
  41d50d:	xor    edx,ebx
  41d50f:	lea    eax,[r10+rax*1+0x5a827999]
  41d517:	add    edx,eax
  41d519:	xor    r9d,ebp
  41d51c:	rorx   eax,ecx,0x1b
  41d522:	add    edx,eax
  41d524:	mov    eax,edi
  41d526:	xor    r9d,DWORD PTR [rsp-0x40]
  41d52b:	rorx   esi,esi,0x2
  41d531:	xor    eax,esi
  41d533:	xor    r9d,DWORD PTR [rsp-0x38]
  41d538:	and    eax,ecx
  41d53a:	rorx   r9d,r9d,0x1f
  41d540:	xor    eax,edi
  41d542:	lea    ebx,[r9+rbx*1+0x5a827999]
  41d54a:	add    eax,ebx
  41d54c:	xor    r8d,r14d
  41d54f:	xor    r8d,DWORD PTR [rsp-0x3c]
  41d554:	rorx   ebx,edx,0x1b
  41d55a:	add    eax,ebx
  41d55c:	mov    ebx,esi
  41d55e:	rorx   ecx,ecx,0x2
  41d564:	xor    r8d,r11d
  41d567:	xor    ebx,ecx
  41d569:	rorx   r8d,r8d,0x1f
  41d56f:	xor    ebx,edx
  41d571:	lea    edi,[r8+rdi*1+0x6ed9eba1]
  41d579:	add    ebx,edi
  41d57b:	rorx   edi,eax,0x1b
  41d581:	add    ebx,edi
  41d583:	mov    edi,DWORD PTR [rsp-0x50]
  41d587:	xor    ebp,r13d
  41d58a:	xor    edi,ebp
  41d58c:	mov    ebp,ecx
  41d58e:	rorx   edx,edx,0x2
  41d594:	xor    edi,r10d
  41d597:	xor    ebp,edx
  41d599:	rorx   edi,edi,0x1f
  41d59f:	xor    ebp,eax
  41d5a1:	lea    esi,[rdi+rsi*1+0x6ed9eba1]
  41d5a8:	add    ebp,esi
  41d5aa:	rorx   esi,ebx,0x1b
  41d5b0:	add    ebp,esi
  41d5b2:	mov    esi,DWORD PTR [rsp-0x4c]
  41d5b6:	xor    r14d,r12d
  41d5b9:	xor    esi,r14d
  41d5bc:	mov    r14d,edx
  41d5bf:	xor    esi,r9d
  41d5c2:	rorx   eax,eax,0x2
  41d5c8:	xor    r14d,eax
  41d5cb:	rorx   esi,esi,0x1f
  41d5d1:	xor    r14d,ebx
  41d5d4:	lea    ecx,[rsi+rcx*1+0x6ed9eba1]
  41d5db:	add    r14d,ecx
  41d5de:	rorx   ecx,ebp,0x1b
  41d5e4:	add    r14d,ecx
  41d5e7:	mov    ecx,DWORD PTR [rsp-0x48]
  41d5eb:	xor    r13d,r15d
  41d5ee:	xor    ecx,r13d
  41d5f1:	mov    r13d,eax
  41d5f4:	rorx   ebx,ebx,0x2
  41d5fa:	xor    ecx,r8d
  41d5fd:	xor    r13d,ebx
  41d600:	rorx   ecx,ecx,0x1f
  41d606:	xor    r13d,ebp
  41d609:	lea    edx,[rcx+rdx*1+0x6ed9eba1]
  41d610:	add    r13d,edx
  41d613:	mov    DWORD PTR [rsp-0x34],r11d
  41d618:	rorx   edx,r14d,0x1b
  41d61e:	xor    r12d,DWORD PTR [rsp-0x44]
  41d623:	add    r13d,edx
  41d626:	mov    edx,DWORD PTR [rsp-0x38]
  41d62a:	rorx   ebp,ebp,0x2
  41d630:	xor    edx,r12d
  41d633:	mov    r12d,ebx
  41d636:	xor    edx,edi
  41d638:	xor    r12d,ebp
  41d63b:	rorx   edx,edx,0x1f
  41d641:	xor    r12d,r14d
  41d644:	lea    eax,[rdx+rax*1+0x6ed9eba1]
  41d64b:	add    r12d,eax
  41d64e:	rorx   eax,r13d,0x1b
  41d654:	add    r12d,eax
  41d657:	mov    eax,DWORD PTR [rsp-0x40]
  41d65b:	mov    DWORD PTR [rsp-0x30],edx
  41d65f:	xor    eax,r15d
  41d662:	xor    eax,r11d
  41d665:	mov    r15d,ebp
  41d668:	mov    edx,DWORD PTR [rsp-0x44]
  41d66c:	rorx   r14d,r14d,0x2
  41d672:	xor    eax,esi
  41d674:	xor    r15d,r14d
  41d677:	rorx   eax,eax,0x1f
  41d67d:	xor    r15d,r13d
  41d680:	lea    ebx,[rax+rbx*1+0x6ed9eba1]
  41d687:	xor    edx,DWORD PTR [rsp-0x3c]
  41d68b:	add    r15d,ebx
  41d68e:	rorx   ebx,r12d,0x1b
  41d694:	add    r15d,ebx
  41d697:	mov    ebx,edx
  41d699:	xor    ebx,r10d
  41d69c:	xor    ebx,ecx
  41d69e:	rorx   r11d,ebx,0x1f
  41d6a4:	mov    ebx,r14d
  41d6a7:	rorx   r13d,r13d,0x2
  41d6ad:	xor    ebx,r13d
  41d6b0:	mov    edx,DWORD PTR [rsp-0x40]
  41d6b4:	xor    ebx,r12d
  41d6b7:	lea    ebp,[r11+rbp*1+0x6ed9eba1]
  41d6bf:	add    ebx,ebp
  41d6c1:	rorx   ebp,r15d,0x1b
  41d6c7:	add    ebx,ebp
  41d6c9:	xor    edx,DWORD PTR [rsp-0x50]
  41d6cd:	mov    ebp,edx
  41d6cf:	xor    ebp,r9d
  41d6d2:	xor    ebp,DWORD PTR [rsp-0x30]
  41d6d6:	rorx   ebp,ebp,0x1f
  41d6dc:	mov    DWORD PTR [rsp-0x44],ebp
  41d6e0:	mov    edx,r13d
  41d6e3:	rorx   r12d,r12d,0x2
  41d6e9:	xor    edx,r12d
  41d6ec:	mov    ebp,edx
  41d6ee:	mov    edx,DWORD PTR [rsp-0x44]
  41d6f2:	xor    ebp,r15d
  41d6f5:	lea    r14d,[rdx+r14*1+0x6ed9eba1]
  41d6fd:	mov    edx,DWORD PTR [rsp-0x3c]
  41d701:	add    r14d,ebp
  41d704:	xor    edx,DWORD PTR [rsp-0x4c]
  41d708:	rorx   ebp,ebx,0x1b
  41d70e:	add    r14d,ebp
  41d711:	mov    ebp,edx
  41d713:	xor    ebp,r8d
  41d716:	xor    ebp,eax
  41d718:	rorx   edx,ebp,0x1f
  41d71e:	mov    ebp,r12d
  41d721:	rorx   r15d,r15d,0x2
  41d727:	xor    ebp,r15d
  41d72a:	xor    ebp,ebx
  41d72c:	lea    r13d,[rdx+r13*1+0x6ed9eba1]
  41d734:	add    r13d,ebp
  41d737:	rorx   ebp,r14d,0x1b
  41d73d:	add    r13d,ebp
  41d740:	mov    ebp,DWORD PTR [rsp-0x50]
  41d744:	mov    DWORD PTR [rsp-0x40],edx
  41d748:	xor    ebp,DWORD PTR [rsp-0x48]
  41d74c:	xor    ebp,edi
  41d74e:	xor    ebp,r11d
  41d751:	rorx   ebp,ebp,0x1f
  41d757:	mov    edx,ebp
  41d759:	mov    ebp,r15d
  41d75c:	rorx   ebx,ebx,0x2
  41d762:	xor    ebp,ebx
  41d764:	xor    ebp,r14d
  41d767:	lea    r12d,[rdx+r12*1+0x6ed9eba1]
  41d76f:	add    ebp,r12d
  41d772:	rorx   r12d,r13d,0x1b
  41d778:	add    r12d,ebp
  41d77b:	mov    ebp,DWORD PTR [rsp-0x4c]
  41d77f:	mov    DWORD PTR [rsp-0x28],r11d
  41d784:	xor    ebp,DWORD PTR [rsp-0x38]
  41d788:	xor    ebp,esi
  41d78a:	xor    ebp,DWORD PTR [rsp-0x44]
  41d78e:	rorx   ebp,ebp,0x1f
  41d794:	mov    r11d,ebp
  41d797:	mov    ebp,ebx
  41d799:	rorx   r14d,r14d,0x2
  41d79f:	xor    ebp,r14d
  41d7a2:	xor    ebp,r13d
  41d7a5:	lea    r15d,[r11+r15*1+0x6ed9eba1]
  41d7ad:	add    ebp,r15d
  41d7b0:	rorx   r15d,r12d,0x1b
  41d7b6:	add    ebp,r15d
  41d7b9:	mov    r15d,DWORD PTR [rsp-0x48]
  41d7be:	mov    DWORD PTR [rsp-0x3c],r11d
  41d7c3:	xor    r15d,DWORD PTR [rsp-0x34]
  41d7c8:	xor    r15d,ecx
  41d7cb:	xor    r15d,DWORD PTR [rsp-0x40]
  41d7d0:	mov    r11d,DWORD PTR [rsp-0x38]
  41d7d5:	mov    DWORD PTR [rsp-0x50],edx
  41d7d9:	rorx   r15d,r15d,0x1f
  41d7df:	mov    edx,r15d
  41d7e2:	mov    r15d,r14d
  41d7e5:	rorx   r13d,r13d,0x2
  41d7eb:	xor    r15d,r13d
  41d7ee:	xor    r11d,r10d
  41d7f1:	xor    r15d,r12d
  41d7f4:	xor    r11d,DWORD PTR [rsp-0x30]
  41d7f9:	mov    DWORD PTR [rsp-0x2c],edx
  41d7fd:	lea    ebx,[rdx+rbx*1+0x6ed9eba1]
  41d804:	mov    edx,r13d
  41d807:	xor    r11d,DWORD PTR [rsp-0x50]
  41d80c:	add    ebx,r15d
  41d80f:	rorx   r12d,r12d,0x2
  41d815:	xor    edx,r12d
  41d818:	rorx   r15d,ebp,0x1b
  41d81e:	add    ebx,r15d
  41d821:	rorx   r15d,r11d,0x1f
  41d827:	mov    r11d,edx
  41d82a:	xor    r11d,ebp
  41d82d:	lea    r14d,[r15+r14*1+0x6ed9eba1]
  41d835:	add    r11d,r14d
  41d838:	rorx   r14d,ebx,0x1b
  41d83e:	add    r11d,r14d
  41d841:	mov    r14d,DWORD PTR [rsp-0x34]
  41d846:	rorx   ebp,ebp,0x2
  41d84c:	xor    r14d,r9d
  41d84f:	xor    r14d,eax
  41d852:	xor    r14d,DWORD PTR [rsp-0x3c]
  41d857:	rorx   r14d,r14d,0x1f
  41d85d:	mov    edx,r14d
  41d860:	mov    r14d,r12d
  41d863:	xor    r14d,ebp
  41d866:	xor    r10d,r8d
  41d869:	xor    r14d,ebx
  41d86c:	xor    r10d,DWORD PTR [rsp-0x28]
  41d871:	lea    r13d,[rdx+r13*1+0x6ed9eba1]
  41d879:	xor    r10d,DWORD PTR [rsp-0x2c]
  41d87e:	add    r13d,r14d
  41d881:	rorx   r14d,r11d,0x1b
  41d887:	add    r13d,r14d
  41d88a:	rorx   r14d,r10d,0x1f
  41d890:	mov    r10d,ebp
  41d893:	rorx   ebx,ebx,0x2
  41d899:	xor    r9d,edi
  41d89c:	xor    r10d,ebx
  41d89f:	xor    r9d,DWORD PTR [rsp-0x44]
  41d8a4:	xor    r10d,r11d
  41d8a7:	lea    r12d,[r14+r12*1+0x6ed9eba1]
  41d8af:	xor    r9d,r15d
  41d8b2:	add    r10d,r12d
  41d8b5:	rorx   r12d,r13d,0x1b
  41d8bb:	add    r10d,r12d
  41d8be:	rorx   r12d,r9d,0x1f
  41d8c4:	mov    r9d,ebx
  41d8c7:	rorx   r11d,r11d,0x2
  41d8cd:	xor    r9d,r11d
  41d8d0:	xor    r9d,r13d
  41d8d3:	lea    ebp,[r12+rbp*1+0x6ed9eba1]
  41d8db:	add    r9d,ebp
  41d8de:	rorx   ebp,r10d,0x1b
  41d8e4:	add    r9d,ebp
  41d8e7:	xor    r8d,esi
  41d8ea:	xor    r8d,DWORD PTR [rsp-0x40]
  41d8ef:	xor    r8d,edx
  41d8f2:	rorx   ebp,r8d,0x1f
  41d8f8:	mov    r8d,r11d
  41d8fb:	rorx   r13d,r13d,0x2
  41d901:	xor    edi,ecx
  41d903:	xor    r8d,r13d
  41d906:	xor    edi,DWORD PTR [rsp-0x50]
  41d90a:	xor    r8d,r10d
  41d90d:	lea    ebx,[rbp+rbx*1+0x6ed9eba1]
  41d914:	mov    DWORD PTR [rsp-0x24],edx
  41d918:	add    r8d,ebx
  41d91b:	mov    edx,DWORD PTR [rsp-0x30]
  41d91f:	xor    edi,r14d
  41d922:	rorx   ebx,r9d,0x1b
  41d928:	rorx   edi,edi,0x1f
  41d92e:	add    r8d,ebx
  41d931:	mov    ebx,edi
  41d933:	mov    edi,r13d
  41d936:	rorx   r10d,r10d,0x2
  41d93c:	xor    esi,edx
  41d93e:	xor    edi,r10d
  41d941:	xor    esi,DWORD PTR [rsp-0x3c]
  41d945:	xor    edi,r9d
  41d948:	lea    r11d,[rbx+r11*1+0x6ed9eba1]
  41d950:	add    edi,r11d
  41d953:	xor    esi,r12d
  41d956:	rorx   r11d,r8d,0x1b
  41d95c:	rorx   esi,esi,0x1f
  41d962:	add    edi,r11d
  41d965:	mov    r11d,esi
  41d968:	mov    esi,r10d
  41d96b:	rorx   r9d,r9d,0x2
  41d971:	xor    esi,r9d
  41d974:	mov    DWORD PTR [rsp-0x38],r11d
  41d979:	xor    esi,r8d
  41d97c:	lea    r11d,[r11+r13*1+0x6ed9eba1]
  41d984:	xor    ecx,eax
  41d986:	xor    ecx,DWORD PTR [rsp-0x2c]
  41d98a:	add    esi,r11d
  41d98d:	xor    ecx,ebp
  41d98f:	rorx   r11d,edi,0x1b
  41d995:	add    esi,r11d
  41d998:	mov    r11d,DWORD PTR [rsp-0x28]
  41d99d:	rorx   ecx,ecx,0x1f
  41d9a3:	mov    r13d,ecx
  41d9a6:	mov    ecx,r9d
  41d9a9:	rorx   r8d,r8d,0x2
  41d9af:	xor    edx,r11d
  41d9b2:	xor    ecx,r8d
  41d9b5:	xor    ecx,edi
  41d9b7:	lea    r10d,[r13+r10*1+0x6ed9eba1]
  41d9bf:	xor    edx,r15d
  41d9c2:	xor    edx,ebx
  41d9c4:	add    ecx,r10d
  41d9c7:	rorx   r10d,esi,0x1b
  41d9cd:	add    ecx,r10d
  41d9d0:	rorx   r10d,edx,0x1f
  41d9d6:	mov    DWORD PTR [rsp-0x4c],r10d
  41d9db:	lea    r9d,[r10+r9*1-0x70e44324]
  41d9e3:	mov    r10d,DWORD PTR [rsp-0x44]
  41d9e8:	mov    DWORD PTR [rsp-0x20],ebx
  41d9ec:	mov    ebx,esi
  41d9ee:	rorx   edi,edi,0x2
  41d9f4:	rorx   edx,ecx,0x1b
  41d9fa:	add    r9d,edx
  41d9fd:	or     ebx,edi
  41d9ff:	xor    eax,r10d
  41da02:	xor    eax,DWORD PTR [rsp-0x24]
  41da06:	mov    edx,ebx
  41da08:	mov    ebx,esi
  41da0a:	xor    eax,DWORD PTR [rsp-0x38]
  41da0e:	and    ebx,edi
  41da10:	and    edx,r8d
  41da13:	or     edx,ebx
  41da15:	rorx   ebx,eax,0x1f
  41da1b:	mov    eax,ecx
  41da1d:	rorx   esi,esi,0x2
  41da23:	mov    DWORD PTR [rsp-0x34],r13d
  41da28:	or     eax,esi
  41da2a:	mov    r13d,DWORD PTR [rsp-0x40]
  41da2f:	add    r9d,edx
  41da32:	mov    edx,eax
  41da34:	mov    eax,ecx
  41da36:	and    edx,edi
  41da38:	and    eax,esi
  41da3a:	xor    r11d,r13d
  41da3d:	mov    DWORD PTR [rsp-0x30],ebx
  41da41:	or     eax,edx
  41da43:	lea    edx,[rbx+r8*1-0x70e44324]
  41da4b:	mov    ebx,r11d
  41da4e:	xor    ebx,r14d
  41da51:	xor    ebx,DWORD PTR [rsp-0x34]
  41da55:	add    eax,edx
  41da57:	mov    r8d,r9d
  41da5a:	rorx   ecx,ecx,0x2
  41da60:	rorx   edx,r9d,0x1b
  41da66:	or     r8d,ecx
  41da69:	add    eax,edx
  41da6b:	rorx   edx,ebx,0x1f
  41da71:	lea    edi,[rdx+rdi*1-0x70e44324]
  41da78:	mov    DWORD PTR [rsp-0x48],edx
  41da7c:	rorx   edx,eax,0x1b
  41da82:	add    edx,edi
  41da84:	mov    edi,r8d
  41da87:	mov    r8d,r9d
  41da8a:	and    r8d,ecx
  41da8d:	and    edi,esi
  41da8f:	or     edi,r8d
  41da92:	mov    r8d,DWORD PTR [rsp-0x50]
  41da97:	add    edx,edi
  41da99:	xor    r8d,r10d
  41da9c:	xor    r8d,r12d
  41da9f:	xor    r8d,DWORD PTR [rsp-0x4c]
  41daa4:	rorx   edi,r8d,0x1f
  41daaa:	mov    r10d,eax
  41daad:	mov    r8d,eax
  41dab0:	rorx   r9d,r9d,0x2
  41dab6:	and    r10d,r9d
  41dab9:	or     r8d,r9d
  41dabc:	and    r8d,ecx
  41dabf:	mov    r11d,edi
  41dac2:	mov    edi,r10d
  41dac5:	or     edi,r8d
  41dac8:	mov    DWORD PTR [rsp-0x44],r11d
  41dacd:	mov    r8d,DWORD PTR [rsp-0x3c]
  41dad2:	lea    r11d,[r11+rsi*1-0x70e44324]
  41dada:	add    edi,r11d
  41dadd:	rorx   r11d,edx,0x1b
  41dae3:	add    r11d,edi
  41dae6:	xor    r13d,r8d
  41dae9:	mov    edi,r13d
  41daec:	xor    edi,ebp
  41daee:	xor    edi,DWORD PTR [rsp-0x30]
  41daf2:	rorx   edi,edi,0x1f
  41daf8:	lea    r10d,[rdi+rcx*1-0x70e44324]
  41db00:	rorx   ebx,eax,0x2
  41db06:	rorx   eax,r11d,0x1b
  41db0c:	add    eax,r10d
  41db0f:	mov    r10d,edx
  41db12:	or     r10d,ebx
  41db15:	mov    ecx,edx
  41db17:	and    ecx,ebx
  41db19:	and    r10d,r9d
  41db1c:	mov    r13d,DWORD PTR [rsp-0x2c]
  41db21:	or     r10d,ecx
  41db24:	mov    ecx,DWORD PTR [rsp-0x50]
  41db28:	mov    esi,DWORD PTR [rsp-0x20]
  41db2c:	xor    ecx,r13d
  41db2f:	add    r10d,eax
  41db32:	xor    esi,ecx
  41db34:	mov    eax,r11d
  41db37:	rorx   edx,edx,0x2
  41db3d:	xor    esi,DWORD PTR [rsp-0x48]
  41db41:	or     eax,edx
  41db43:	rorx   ecx,esi,0x1f
  41db49:	mov    esi,eax
  41db4b:	mov    eax,r11d
  41db4e:	and    esi,ebx
  41db50:	and    eax,edx
  41db52:	or     eax,esi
  41db54:	mov    DWORD PTR [rsp-0x50],ecx
  41db58:	lea    esi,[rcx+r9*1-0x70e44324]
  41db60:	mov    ecx,r8d
  41db63:	xor    ecx,r15d
  41db66:	xor    ecx,DWORD PTR [rsp-0x38]
  41db6a:	add    eax,esi
  41db6c:	mov    DWORD PTR [rsp-0x40],edi
  41db70:	xor    ecx,DWORD PTR [rsp-0x44]
  41db74:	rorx   edi,r11d,0x2
  41db7a:	rorx   r9d,ecx,0x1f
  41db80:	rorx   esi,r10d,0x1b
  41db86:	mov    r11d,r9d
  41db89:	add    esi,eax
  41db8b:	lea    r9d,[r9+rbx*1-0x70e44324]
  41db93:	rorx   eax,esi,0x1b
  41db99:	add    eax,r9d
  41db9c:	mov    r9d,r10d
  41db9f:	or     r9d,edi
  41dba2:	mov    ecx,r9d
  41dba5:	mov    r9d,r10d
  41dba8:	and    ecx,edx
  41dbaa:	and    r9d,edi
  41dbad:	mov    r8d,DWORD PTR [rsp-0x24]
  41dbb2:	or     r9d,ecx
  41dbb5:	add    r9d,eax
  41dbb8:	mov    eax,DWORD PTR [rsp-0x34]
  41dbbc:	xor    r13d,r8d
  41dbbf:	xor    eax,r13d
  41dbc2:	xor    eax,DWORD PTR [rsp-0x40]
  41dbc6:	rorx   ebx,eax,0x1f
  41dbcc:	mov    eax,esi
  41dbce:	rorx   r10d,r10d,0x2
  41dbd4:	mov    ecx,DWORD PTR [rsp-0x4c]
  41dbd8:	or     eax,r10d
  41dbdb:	mov    r13d,esi
  41dbde:	and    eax,edi
  41dbe0:	and    r13d,r10d
  41dbe3:	xor    r15d,r14d
  41dbe6:	or     r13d,eax
  41dbe9:	xor    ecx,r15d
  41dbec:	lea    eax,[rbx+rdx*1-0x70e44324]
  41dbf3:	xor    ecx,DWORD PTR [rsp-0x50]
  41dbf7:	add    r13d,eax
  41dbfa:	rorx   r15d,ecx,0x1f
  41dc00:	rorx   eax,r9d,0x1b
  41dc06:	add    r13d,eax
  41dc09:	rorx   eax,esi,0x2
  41dc0f:	lea    esi,[r15+rdi*1-0x70e44324]
  41dc17:	mov    DWORD PTR [rsp-0x3c],r15d
  41dc1c:	rorx   edx,r13d,0x1b
  41dc22:	mov    r15d,r9d
  41dc25:	lea    ecx,[rsi+rdx*1]
  41dc28:	mov    edx,r9d
  41dc2b:	and    r15d,eax
  41dc2e:	or     edx,eax
  41dc30:	and    edx,r10d
  41dc33:	mov    esi,r15d
  41dc36:	or     esi,edx
  41dc38:	mov    edx,r8d
  41dc3b:	xor    edx,r12d
  41dc3e:	xor    edx,DWORD PTR [rsp-0x30]
  41dc42:	mov    r8d,r13d
  41dc45:	add    esi,ecx
  41dc47:	xor    edx,r11d
  41dc4a:	rorx   ecx,r9d,0x2
  41dc50:	or     r8d,ecx
  41dc53:	mov    DWORD PTR [rsp-0x28],ebx
  41dc57:	rorx   ebx,edx,0x1f
  41dc5d:	mov    edx,r8d
  41dc60:	mov    r8d,r13d
  41dc63:	and    r8d,ecx
  41dc66:	mov    r9d,DWORD PTR [rsp-0x48]
  41dc6b:	mov    DWORD PTR [rsp-0x2c],r11d
  41dc70:	and    edx,eax
  41dc72:	xor    r14d,ebp
  41dc75:	mov    r11d,r8d
  41dc78:	or     r11d,edx
  41dc7b:	xor    r9d,r14d
  41dc7e:	lea    edx,[rbx+r10*1-0x70e44324]
  41dc86:	xor    r9d,DWORD PTR [rsp-0x28]
  41dc8b:	add    r11d,edx
  41dc8e:	mov    r14d,esi
  41dc91:	rorx   r13d,r13d,0x2
  41dc97:	rorx   r10d,r9d,0x1f
  41dc9d:	or     r14d,r13d
  41dca0:	rorx   edx,esi,0x1b
  41dca6:	add    r11d,edx
  41dca9:	lea    edx,[r10+rax*1-0x70e44324]
  41dcb1:	rorx   eax,r11d,0x1b
  41dcb7:	add    edx,eax
  41dcb9:	mov    eax,r14d
  41dcbc:	mov    r14d,esi
  41dcbf:	and    r14d,r13d
  41dcc2:	and    eax,ecx
  41dcc4:	or     eax,r14d
  41dcc7:	mov    r14d,DWORD PTR [rsp-0x20]
  41dccc:	mov    r8d,DWORD PTR [rsp-0x44]
  41dcd1:	xor    r12d,r14d
  41dcd4:	xor    r8d,r12d
  41dcd7:	mov    r9d,r11d
  41dcda:	add    eax,edx
  41dcdc:	xor    r8d,DWORD PTR [rsp-0x3c]
  41dce1:	rorx   edx,esi,0x2
  41dce7:	or     r9d,edx
  41dcea:	mov    esi,r9d
  41dced:	mov    r9d,r11d
  41dcf0:	and    r9d,edx
  41dcf3:	mov    DWORD PTR [rsp-0x24],r10d
  41dcf8:	and    esi,r13d
  41dcfb:	mov    r10d,r9d
  41dcfe:	rorx   r12d,r8d,0x1f
  41dd04:	or     r10d,esi
  41dd07:	mov    DWORD PTR [rsp-0x20],r12d
  41dd0c:	lea    esi,[r12+rcx*1-0x70e44324]
  41dd14:	mov    r12d,DWORD PTR [rsp-0x38]
  41dd19:	mov    edi,DWORD PTR [rsp-0x40]
  41dd1d:	xor    ebp,r12d
  41dd20:	xor    edi,ebp
  41dd22:	xor    edi,ebx
  41dd24:	add    r10d,esi
  41dd27:	rorx   r15d,edi,0x1f
  41dd2d:	rorx   ecx,eax,0x1b
  41dd33:	lea    r9d,[r15+r13*1-0x70e44324]
  41dd3b:	add    r10d,ecx
  41dd3e:	mov    ebp,DWORD PTR [rsp-0x34]
  41dd42:	rorx   ecx,r10d,0x1b
  41dd48:	add    ecx,r9d
  41dd4b:	mov    r9d,eax
  41dd4e:	rorx   r11d,r11d,0x2
  41dd54:	mov    esi,DWORD PTR [rsp-0x50]
  41dd58:	or     r9d,r11d
  41dd5b:	xor    r14d,ebp
  41dd5e:	mov    edi,r9d
  41dd61:	mov    r9d,eax
  41dd64:	and    edi,edx
  41dd66:	and    r9d,r11d
  41dd69:	xor    esi,r14d
  41dd6c:	mov    r14d,r10d
  41dd6f:	rorx   eax,eax,0x2
  41dd75:	or     r9d,edi
  41dd78:	or     r14d,eax
  41dd7b:	add    r9d,ecx
  41dd7e:	mov    ecx,r14d
  41dd81:	mov    r14d,r10d
  41dd84:	and    r14d,eax
  41dd87:	xor    esi,DWORD PTR [rsp-0x24]
  41dd8b:	and    ecx,r11d
  41dd8e:	mov    r8d,r14d
  41dd91:	rorx   r13d,esi,0x1f
  41dd97:	or     r8d,ecx
  41dd9a:	lea    ecx,[r13+rdx*1-0x70e44324]
  41dda2:	add    r8d,ecx
  41dda5:	mov    ecx,DWORD PTR [rsp-0x4c]
  41dda9:	rorx   edx,r9d,0x1b
  41ddaf:	xor    ecx,r12d
  41ddb2:	xor    ecx,DWORD PTR [rsp-0x2c]
  41ddb6:	xor    ecx,DWORD PTR [rsp-0x20]
  41ddba:	rorx   r14d,ecx,0x1f
  41ddc0:	add    r8d,edx
  41ddc3:	lea    esi,[r14+r11*1-0x70e44324]
  41ddcb:	rorx   edx,r8d,0x1b
  41ddd1:	add    edx,esi
  41ddd3:	mov    esi,r9d
  41ddd6:	rorx   r10d,r10d,0x2
  41dddc:	mov    ecx,r9d
  41dddf:	or     esi,r10d
  41dde2:	and    ecx,r10d
  41dde5:	and    esi,eax
  41dde7:	or     esi,ecx
  41dde9:	add    esi,edx
  41ddeb:	mov    edx,ebp
  41dded:	mov    ebp,DWORD PTR [rsp-0x30]
  41ddf1:	rorx   edi,r9d,0x2
  41ddf7:	xor    edx,ebp
  41ddf9:	xor    edx,DWORD PTR [rsp-0x28]
  41ddfd:	xor    edx,r15d
  41de00:	rorx   r12d,edx,0x1f
  41de06:	mov    r9d,r8d
  41de09:	mov    edx,r8d
  41de0c:	and    edx,edi
  41de0e:	or     r9d,edi
  41de11:	and    r9d,r10d
  41de14:	mov    r11d,edx
  41de17:	or     r11d,r9d
  41de1a:	lea    r9d,[r12+rax*1-0x70e44324]
  41de22:	add    r11d,r9d
  41de25:	rorx   r9d,esi,0x1b
  41de2b:	add    r9d,r11d
  41de2e:	mov    r11d,DWORD PTR [rsp-0x4c]
  41de33:	rorx   r8d,r8d,0x2
  41de39:	xor    r11d,DWORD PTR [rsp-0x48]
  41de3e:	xor    r11d,DWORD PTR [rsp-0x3c]
  41de43:	xor    r11d,r13d
  41de46:	rorx   edx,r11d,0x1f
  41de4c:	lea    ecx,[rdx+r10*1-0x70e44324]
  41de54:	mov    r10d,esi
  41de57:	or     r10d,r8d
  41de5a:	rorx   eax,r9d,0x1b
  41de60:	add    eax,ecx
  41de62:	mov    ecx,r10d
  41de65:	mov    r10d,esi
  41de68:	and    r10d,r8d
  41de6b:	and    ecx,edi
  41de6d:	or     ecx,r10d
  41de70:	mov    r10d,DWORD PTR [rsp-0x44]
  41de75:	rorx   esi,esi,0x2
  41de7b:	xor    r10d,ebp
  41de7e:	xor    r10d,ebx
  41de81:	xor    r10d,r14d
  41de84:	rorx   ebp,r10d,0x1f
  41de8a:	mov    r10d,r9d
  41de8d:	or     r10d,esi
  41de90:	rorx   r11d,r9d,0x2
  41de96:	mov    DWORD PTR [rsp-0x4c],edx
  41de9a:	mov    edx,r10d
  41de9d:	mov    r10d,r9d
  41dea0:	mov    r9d,DWORD PTR [rsp-0x48]
  41dea5:	and    r10d,esi
  41dea8:	add    ecx,eax
  41deaa:	xor    r9d,DWORD PTR [rsp-0x40]
  41deaf:	and    edx,r8d
  41deb2:	mov    eax,r10d
  41deb5:	xor    r9d,DWORD PTR [rsp-0x24]
  41deba:	or     eax,edx
  41debc:	lea    edx,[rbp+rdi*1-0x70e44324]
  41dec3:	add    eax,edx
  41dec5:	xor    r9d,r12d
  41dec8:	rorx   edx,ecx,0x1b
  41dece:	rorx   r9d,r9d,0x1f
  41ded4:	add    eax,edx
  41ded6:	lea    r10d,[r9+r8*1-0x70e44324]
  41dede:	rorx   edx,eax,0x1b
  41dee4:	add    edx,r10d
  41dee7:	mov    r10d,ecx
  41deea:	or     r10d,r11d
  41deed:	mov    r8d,ecx
  41def0:	and    r8d,r11d
  41def3:	and    r10d,esi
  41def6:	or     r10d,r8d
  41def9:	mov    r8d,DWORD PTR [rsp-0x44]
  41defe:	add    r10d,edx
  41df01:	mov    edx,eax
  41df03:	xor    r8d,DWORD PTR [rsp-0x50]
  41df08:	rorx   ecx,ecx,0x2
  41df0e:	or     edx,ecx
  41df10:	xor    r8d,DWORD PTR [rsp-0x20]
  41df15:	mov    edi,edx
  41df17:	mov    edx,eax
  41df19:	xor    r8d,DWORD PTR [rsp-0x4c]
  41df1e:	and    edi,r11d
  41df21:	and    edx,ecx
  41df23:	rorx   r8d,r8d,0x1f
  41df29:	or     edx,edi
  41df2b:	lea    edi,[r8+rsi*1-0x70e44324]
  41df33:	add    edx,edi
  41df35:	mov    edi,DWORD PTR [rsp-0x40]
  41df39:	mov    DWORD PTR [rsp-0x44],r8d
  41df3e:	xor    edi,DWORD PTR [rsp-0x2c]
  41df42:	xor    edi,r15d
  41df45:	mov    r8d,ecx
  41df48:	rorx   eax,eax,0x2
  41df4e:	xor    edi,ebp
  41df50:	xor    r8d,eax
  41df53:	mov    DWORD PTR [rsp-0x48],r9d
  41df58:	rorx   esi,r10d,0x1b
  41df5e:	rorx   edi,edi,0x1f
  41df64:	add    edx,esi
  41df66:	mov    r9d,r8d
  41df69:	lea    esi,[rdi+r11*1-0x359d3e2a]
  41df71:	mov    r8d,DWORD PTR [rsp-0x50]
  41df76:	mov    r11d,DWORD PTR [rsp-0x28]
  41df7b:	xor    r9d,r10d
  41df7e:	xor    r8d,r11d
  41df81:	add    r9d,esi
  41df84:	rorx   esi,edx,0x1b
  41df8a:	add    r9d,esi
  41df8d:	mov    esi,r8d
  41df90:	xor    esi,r13d
  41df93:	mov    r8d,eax
  41df96:	rorx   r10d,r10d,0x2
  41df9c:	xor    esi,DWORD PTR [rsp-0x48]
  41dfa0:	xor    r8d,r10d
  41dfa3:	rorx   esi,esi,0x1f
  41dfa9:	xor    r8d,edx
  41dfac:	lea    ecx,[rsi+rcx*1-0x359d3e2a]
  41dfb3:	add    r8d,ecx
  41dfb6:	rorx   ecx,r9d,0x1b
  41dfbc:	add    r8d,ecx
  41dfbf:	mov    ecx,DWORD PTR [rsp-0x2c]
  41dfc3:	mov    DWORD PTR [rsp-0x50],esi
  41dfc7:	xor    ecx,DWORD PTR [rsp-0x3c]
  41dfcb:	xor    ecx,r14d
  41dfce:	mov    esi,r10d
  41dfd1:	xor    ecx,DWORD PTR [rsp-0x44]
  41dfd5:	rorx   edx,edx,0x2
  41dfdb:	xor    esi,edx
  41dfdd:	mov    DWORD PTR [rsp-0x40],edi
  41dfe1:	mov    edi,esi
  41dfe3:	rorx   ecx,ecx,0x1f
  41dfe9:	xor    edi,r9d
  41dfec:	lea    eax,[rcx+rax*1-0x359d3e2a]
  41dff3:	xor    r11d,ebx
  41dff6:	add    edi,eax
  41dff8:	rorx   eax,r8d,0x1b
  41dffe:	add    edi,eax
  41e000:	mov    eax,r11d
  41e003:	xor    eax,r12d
  41e006:	mov    esi,edx
  41e008:	xor    eax,DWORD PTR [rsp-0x40]
  41e00c:	rorx   r9d,r9d,0x2
  41e012:	xor    esi,r9d
  41e015:	rorx   eax,eax,0x1f
  41e01b:	mov    DWORD PTR [rsp-0x38],ecx
  41e01f:	xor    esi,r8d
  41e022:	lea    ecx,[rax+r10*1-0x359d3e2a]
  41e02a:	add    esi,ecx
  41e02c:	mov    r10d,DWORD PTR [rsp-0x24]
  41e031:	rorx   ecx,edi,0x1b
  41e037:	add    esi,ecx
  41e039:	mov    ecx,DWORD PTR [rsp-0x3c]
  41e03d:	rorx   r8d,r8d,0x2
  41e043:	xor    ecx,r10d
  41e046:	xor    ecx,DWORD PTR [rsp-0x4c]
  41e04a:	xor    ecx,DWORD PTR [rsp-0x50]
  41e04e:	rorx   ecx,ecx,0x1f
  41e054:	mov    r11d,ecx
  41e057:	mov    ecx,r9d
  41e05a:	xor    ecx,r8d
  41e05d:	xor    ecx,edi
  41e05f:	lea    edx,[r11+rdx*1-0x359d3e2a]
  41e067:	add    ecx,edx
  41e069:	rorx   edx,esi,0x1b
  41e06f:	add    ecx,edx
  41e071:	mov    edx,ebx
  41e073:	mov    ebx,DWORD PTR [rsp-0x20]
  41e077:	mov    DWORD PTR [rsp-0x3c],r11d
  41e07c:	xor    edx,ebx
  41e07e:	xor    edx,ebp
  41e080:	xor    edx,DWORD PTR [rsp-0x38]
  41e084:	rorx   edx,edx,0x1f
  41e08a:	mov    r11d,edx
  41e08d:	mov    edx,r8d
  41e090:	rorx   edi,edi,0x2
  41e096:	xor    edx,edi
  41e098:	xor    edx,esi
  41e09a:	lea    r9d,[r11+r9*1-0x359d3e2a]
  41e0a2:	add    edx,r9d
  41e0a5:	rorx   r9d,ecx,0x1b
  41e0ab:	add    edx,r9d
  41e0ae:	mov    r9d,r10d
  41e0b1:	xor    r9d,r15d
  41e0b4:	mov    r10d,edi
  41e0b7:	xor    r9d,DWORD PTR [rsp-0x48]
  41e0bc:	rorx   esi,esi,0x2
  41e0c2:	xor    r10d,esi
  41e0c5:	mov    DWORD PTR [rsp-0x34],r11d
  41e0ca:	xor    r9d,eax
  41e0cd:	mov    r11d,r10d
  41e0d0:	rorx   r9d,r9d,0x1f
  41e0d6:	xor    r11d,ecx
  41e0d9:	lea    r8d,[r9+r8*1-0x359d3e2a]
  41e0e1:	add    r11d,r8d
  41e0e4:	rorx   r8d,edx,0x1b
  41e0ea:	add    r11d,r8d
  41e0ed:	mov    r8d,ebx
  41e0f0:	xor    r8d,r13d
  41e0f3:	xor    r8d,DWORD PTR [rsp-0x44]
  41e0f8:	mov    r10d,esi
  41e0fb:	xor    r8d,DWORD PTR [rsp-0x3c]
  41e100:	rorx   ecx,ecx,0x2
  41e106:	xor    r10d,ecx
  41e109:	rorx   r8d,r8d,0x1f
  41e10f:	xor    r10d,edx
  41e112:	lea    edi,[r8+rdi*1-0x359d3e2a]
  41e11a:	add    r10d,edi
  41e11d:	rorx   edi,r11d,0x1b
  41e123:	add    r10d,edi
  41e126:	mov    edi,DWORD PTR [rsp-0x40]
  41e12a:	xor    r15d,r14d
  41e12d:	xor    edi,r15d
  41e130:	mov    ebx,ecx
  41e132:	xor    edi,DWORD PTR [rsp-0x34]
  41e136:	rorx   edx,edx,0x2
  41e13c:	xor    ebx,edx
  41e13e:	rorx   edi,edi,0x1f
  41e144:	xor    ebx,r11d
  41e147:	lea    esi,[rdi+rsi*1-0x359d3e2a]
  41e14e:	add    ebx,esi
  41e150:	rorx   esi,r10d,0x1b
  41e156:	add    ebx,esi
  41e158:	mov    esi,DWORD PTR [rsp-0x50]
  41e15c:	xor    r13d,r12d
  41e15f:	xor    esi,r13d
  41e162:	mov    r13d,edx
  41e165:	rorx   r11d,r11d,0x2
  41e16b:	xor    r13d,r11d
  41e16e:	xor    esi,r9d
  41e171:	mov    r15d,r13d
  41e174:	rorx   esi,esi,0x1f
  41e17a:	xor    r15d,r10d
  41e17d:	lea    ecx,[rsi+rcx*1-0x359d3e2a]
  41e184:	add    r15d,ecx
  41e187:	rorx   ecx,ebx,0x1b
  41e18d:	add    r15d,ecx
  41e190:	mov    ecx,DWORD PTR [rsp-0x38]
  41e194:	xor    r14d,DWORD PTR [rsp-0x4c]
  41e199:	xor    ecx,r14d
  41e19c:	mov    r14d,r11d
  41e19f:	rorx   r10d,r10d,0x2
  41e1a5:	xor    ecx,r8d
  41e1a8:	xor    r14d,r10d
  41e1ab:	rorx   ecx,ecx,0x1f
  41e1b1:	xor    r14d,ebx
  41e1b4:	lea    edx,[rcx+rdx*1-0x359d3e2a]
  41e1bb:	xor    r12d,ebp
  41e1be:	add    r14d,edx
  41e1c1:	rorx   edx,r15d,0x1b
  41e1c7:	add    r14d,edx
  41e1ca:	mov    edx,r12d
  41e1cd:	mov    r12d,r10d
  41e1d0:	rorx   ebx,ebx,0x2
  41e1d6:	xor    edx,eax
  41e1d8:	xor    r12d,ebx
  41e1db:	xor    edx,edi
  41e1dd:	mov    r13d,r12d
  41e1e0:	xor    r13d,r15d
  41e1e3:	rorx   edx,edx,0x1f
  41e1e9:	lea    r11d,[rdx+r11*1-0x359d3e2a]
  41e1f1:	add    r13d,r11d
  41e1f4:	rorx   r11d,r14d,0x1b
  41e1fa:	add    r13d,r11d
  41e1fd:	mov    r11d,DWORD PTR [rsp-0x4c]
  41e202:	mov    r12d,ebx
  41e205:	xor    r11d,DWORD PTR [rsp-0x48]
  41e20a:	xor    r11d,DWORD PTR [rsp-0x3c]
  41e20f:	rorx   r15d,r15d,0x2
  41e215:	xor    r11d,esi
  41e218:	xor    r12d,r15d
  41e21b:	xor    r12d,r14d
  41e21e:	rorx   r11d,r11d,0x1f
  41e224:	lea    r10d,[r11+r10*1-0x359d3e2a]
  41e22c:	add    r10d,r12d
  41e22f:	rorx   r12d,r13d,0x1b
  41e235:	add    r12d,r10d
  41e238:	mov    r10d,DWORD PTR [rsp-0x34]
  41e23d:	xor    ebp,DWORD PTR [rsp-0x44]
  41e241:	xor    r10d,ebp
  41e244:	mov    ebp,r15d
  41e247:	rorx   r14d,r14d,0x2
  41e24d:	xor    r10d,ecx
  41e250:	xor    ebp,r14d
  41e253:	xor    ebp,r13d
  41e256:	rorx   r10d,r10d,0x1f
  41e25c:	lea    ebx,[r10+rbx*1-0x359d3e2a]
  41e264:	add    ebx,ebp
  41e266:	rorx   ebp,r12d,0x1b
  41e26c:	add    ebp,ebx
  41e26e:	mov    ebx,DWORD PTR [rsp-0x48]
  41e272:	rorx   r13d,r13d,0x2
  41e278:	xor    ebx,DWORD PTR [rsp-0x40]
  41e27c:	xor    r9d,ebx
  41e27f:	mov    ebx,r14d
  41e282:	xor    r9d,edx
  41e285:	xor    ebx,r13d
  41e288:	rorx   r9d,r9d,0x1f
  41e28e:	xor    ebx,r12d
  41e291:	lea    r15d,[r9+r15*1-0x359d3e2a]
  41e299:	add    ebx,r15d
  41e29c:	rorx   r15d,ebp,0x1b
  41e2a2:	add    ebx,r15d
  41e2a5:	mov    r15d,DWORD PTR [rsp-0x44]
  41e2aa:	rorx   r12d,r12d,0x2
  41e2b0:	xor    r15d,DWORD PTR [rsp-0x50]
  41e2b5:	xor    r8d,r15d
  41e2b8:	mov    r15d,r13d
  41e2bb:	xor    r15d,r12d
  41e2be:	xor    r8d,r11d
  41e2c1:	mov    r11d,r15d
  41e2c4:	xor    r11d,ebp
  41e2c7:	rorx   r8d,r8d,0x1f
  41e2cd:	lea    r14d,[r8+r14*1-0x359d3e2a]
  41e2d5:	add    r14d,r11d
  41e2d8:	mov    r15d,DWORD PTR [rsp-0x38]
  41e2dd:	rorx   r11d,ebx,0x1b
  41e2e3:	add    r14d,r11d
  41e2e6:	mov    r11d,DWORD PTR [rsp-0x40]
  41e2eb:	rorx   ebp,ebp,0x2
  41e2f1:	xor    r11d,r15d
  41e2f4:	xor    edi,r11d
  41e2f7:	xor    edi,r10d
  41e2fa:	mov    r10d,r12d
  41e2fd:	xor    r10d,ebp
  41e300:	xor    r10d,ebx
  41e303:	rorx   edi,edi,0x1f
  41e309:	lea    r13d,[rdi+r13*1-0x359d3e2a]
  41e311:	add    r13d,r10d
  41e314:	rorx   r10d,r14d,0x1b
  41e31a:	add    r13d,r10d
  41e31d:	mov    r10d,DWORD PTR [rsp-0x50]
  41e322:	rorx   ebx,ebx,0x2
  41e328:	xor    r10d,eax
  41e32b:	xor    esi,r10d
  41e32e:	xor    eax,DWORD PTR [rsp-0x34]
  41e332:	mov    r10d,ebp
  41e335:	xor    r15d,DWORD PTR [rsp-0x3c]
  41e33a:	xor    edx,eax
  41e33c:	xor    esi,r9d
  41e33f:	xor    r10d,ebx
  41e342:	rorx   esi,esi,0x1f
  41e348:	xor    ecx,r15d
  41e34b:	lea    r9d,[r12+rsi*1-0x359d3e2a]
  41e353:	mov    r15d,ebx
  41e356:	xor    edi,edx
  41e358:	mov    esi,r10d
  41e35b:	mov    edx,DWORD PTR [rsp-0x18]
  41e35f:	xor    esi,r14d
  41e362:	xor    ecx,r8d
  41e365:	rorx   r14d,r14d,0x2
  41e36b:	xor    r15d,r14d
  41e36e:	rorx   ecx,ecx,0x1f
  41e374:	rorx   edi,edi,0x1f
  41e37a:	lea    r8d,[rbp+rcx*1-0x359d3e2a]
  41e382:	mov    ecx,r15d
  41e385:	lea    r15d,[rdx+rdi*1-0x359d3e2a]
  41e38d:	mov    edx,r14d
  41e390:	add    esi,r9d
  41e393:	xor    ecx,r13d
  41e396:	rorx   r9d,r13d,0x1b
  41e39c:	rorx   r13d,r13d,0x2
  41e3a2:	xor    edx,r13d
  41e3a5:	add    esi,r9d
  41e3a8:	add    r15d,ebx
  41e3ab:	mov    ebx,edx
  41e3ad:	add    ecx,r8d
  41e3b0:	xor    ebx,esi
  41e3b2:	rorx   r8d,esi,0x1b
  41e3b8:	add    ebx,r15d
  41e3bb:	add    ecx,r8d
  41e3be:	rorx   eax,ecx,0x1b
  41e3c4:	add    ebx,eax
  41e3c6:	mov    rax,QWORD PTR [rsp-0x8]
  41e3cb:	add    r13d,DWORD PTR [rsp-0xc]
  41e3d0:	add    r14d,DWORD PTR [rsp-0x1c]
  41e3d5:	add    ecx,DWORD PTR [rsp-0x14]
  41e3d9:	rorx   esi,esi,0x2
  41e3df:	add    esi,DWORD PTR [rsp-0x10]
  41e3e3:	mov    DWORD PTR [rax+0x14],r13d
  41e3e7:	mov    DWORD PTR [rax+0x18],r14d
  41e3eb:	mov    DWORD PTR [rax+0x8],ebx
  41e3ee:	mov    DWORD PTR [rax+0xc],ecx
  41e3f1:	mov    DWORD PTR [rax+0x10],esi
  41e3f4:	pop    rbx
  41e3f5:	pop    rbp
  41e3f6:	pop    r12
  41e3f8:	pop    r13
  41e3fa:	pop    r14
  41e3fc:	pop    r15
  41e3fe:	ret    
  41e3ff:	nop
  41e400:	endbr64 
  41e404:	test   rdx,rdx
  41e407:	je     41e4f0 <xmlStrEqual@plt+0x1a5b0>
  41e40d:	push   r14
  41e40f:	push   r13
  41e411:	push   r12
  41e413:	mov    r12,rdx
  41e416:	mov    edx,0x40
  41e41b:	push   rbp
  41e41c:	mov    rbp,rdi
  41e41f:	push   rbx
  41e420:	mov    rbx,rsi
  41e423:	mov    eax,DWORD PTR [rdi]
  41e425:	mov    r14d,eax
  41e428:	and    r14d,0x3f
  41e42c:	sub    edx,r14d
  41e42f:	add    eax,r12d
  41e432:	mov    r13d,edx
  41e435:	mov    DWORD PTR [rdi],eax
  41e437:	jae    41e43c <xmlStrEqual@plt+0x1a4fc>
  41e439:	inc    DWORD PTR [rdi+0x4]
  41e43c:	test   r14d,r14d
  41e43f:	je     41e4a8 <xmlStrEqual@plt+0x1a568>
  41e441:	cmp    r12,r13
  41e444:	jb     41e4a8 <xmlStrEqual@plt+0x1a568>
  41e446:	lea    rax,[rbp+0x1c]
  41e44a:	mov    ecx,r14d
  41e44d:	add    rcx,rax
  41e450:	cmp    edx,0x8
  41e453:	jb     41e570 <xmlStrEqual@plt+0x1a630>
  41e459:	mov    rsi,QWORD PTR [rbx]
  41e45c:	lea    rdi,[rcx+0x8]
  41e460:	mov    QWORD PTR [rcx],rsi
  41e463:	and    rdi,0xfffffffffffffff8
  41e467:	mov    rsi,QWORD PTR [rbx+r13*1-0x8]
  41e46c:	mov    QWORD PTR [rcx+r13*1-0x8],rsi
  41e471:	sub    rcx,rdi
  41e474:	mov    rsi,rbx
  41e477:	sub    rsi,rcx
  41e47a:	add    ecx,edx
  41e47c:	shr    ecx,0x3
  41e47f:	rep movs QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
  41e482:	mov    rsi,rax
  41e485:	mov    rdi,rbp
  41e488:	sub    r12,r13
  41e48b:	call   41d180 <xmlStrEqual@plt+0x19240>
  41e490:	add    rbx,r13
  41e493:	cmp    r12,0x3f
  41e497:	jbe    41e59d <xmlStrEqual@plt+0x1a65d>
  41e49d:	xor    r14d,r14d
  41e4a0:	jmp    41e4b1 <xmlStrEqual@plt+0x1a571>
  41e4a2:	nop    WORD PTR [rax+rax*1+0x0]
  41e4a8:	mov    r13,rbx
  41e4ab:	cmp    r12,0x3f
  41e4af:	jbe    41e4f8 <xmlStrEqual@plt+0x1a5b8>
  41e4b1:	lea    rax,[r12-0x40]
  41e4b6:	and    rax,0xffffffffffffffc0
  41e4ba:	lea    r13,[rbx+rax*1+0x40]
  41e4bf:	nop
  41e4c0:	mov    rsi,rbx
  41e4c3:	mov    rdi,rbp
  41e4c6:	add    rbx,0x40
  41e4ca:	call   41d180 <xmlStrEqual@plt+0x19240>
  41e4cf:	cmp    rbx,r13
  41e4d2:	jne    41e4c0 <xmlStrEqual@plt+0x1a580>
  41e4d4:	and    r12d,0x3f
  41e4d8:	test   r12,r12
  41e4db:	jne    41e4f8 <xmlStrEqual@plt+0x1a5b8>
  41e4dd:	pop    rbx
  41e4de:	pop    rbp
  41e4df:	pop    r12
  41e4e1:	pop    r13
  41e4e3:	pop    r14
  41e4e5:	ret    
  41e4e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41e4f0:	ret    
  41e4f1:	nop    DWORD PTR [rax+0x0]
  41e4f8:	lea    rcx,[rbp+r14*1+0x1c]
  41e4fd:	mov    eax,r12d
  41e500:	cmp    r12d,0x8
  41e504:	jae    41e530 <xmlStrEqual@plt+0x1a5f0>
  41e506:	and    r12d,0x4
  41e50a:	jne    41e5bb <xmlStrEqual@plt+0x1a67b>
  41e510:	test   eax,eax
  41e512:	je     41e4dd <xmlStrEqual@plt+0x1a59d>
  41e514:	movzx  edx,BYTE PTR [r13+0x0]
  41e519:	mov    BYTE PTR [rcx],dl
  41e51b:	test   al,0x2
  41e51d:	je     41e4dd <xmlStrEqual@plt+0x1a59d>
  41e51f:	mov    edx,eax
  41e521:	movzx  eax,WORD PTR [r13+rdx*1-0x2]
  41e527:	mov    WORD PTR [rcx+rdx*1-0x2],ax
  41e52c:	jmp    41e4dd <xmlStrEqual@plt+0x1a59d>
  41e52e:	xchg   ax,ax
  41e530:	mov    rax,QWORD PTR [r13+0x0]
  41e534:	lea    rdi,[rcx+0x8]
  41e538:	mov    QWORD PTR [rcx],rax
  41e53b:	mov    eax,r12d
  41e53e:	and    rdi,0xfffffffffffffff8
  41e542:	mov    rdx,QWORD PTR [r13+rax*1-0x8]
  41e547:	mov    rsi,r13
  41e54a:	mov    QWORD PTR [rcx+rax*1-0x8],rdx
  41e54f:	sub    rcx,rdi
  41e552:	lea    eax,[r12+rcx*1]
  41e556:	shr    eax,0x3
  41e559:	sub    rsi,rcx
  41e55c:	mov    ecx,eax
  41e55e:	rep movs QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
  41e561:	pop    rbx
  41e562:	pop    rbp
  41e563:	pop    r12
  41e565:	pop    r13
  41e567:	pop    r14
  41e569:	ret    
  41e56a:	nop    WORD PTR [rax+rax*1+0x0]
  41e570:	test   dl,0x4
  41e573:	jne    41e5a8 <xmlStrEqual@plt+0x1a668>
  41e575:	test   edx,edx
  41e577:	je     41e482 <xmlStrEqual@plt+0x1a542>
  41e57d:	movzx  esi,BYTE PTR [rbx]
  41e580:	and    edx,0x2
  41e583:	mov    BYTE PTR [rcx],sil
  41e586:	je     41e482 <xmlStrEqual@plt+0x1a542>
  41e58c:	movzx  edx,WORD PTR [rbx+r13*1-0x2]
  41e592:	mov    WORD PTR [rcx+r13*1-0x2],dx
  41e598:	jmp    41e482 <xmlStrEqual@plt+0x1a542>
  41e59d:	mov    r13,rbx
  41e5a0:	xor    r14d,r14d
  41e5a3:	jmp    41e4d8 <xmlStrEqual@plt+0x1a598>
  41e5a8:	mov    edx,DWORD PTR [rbx]
  41e5aa:	mov    DWORD PTR [rcx],edx
  41e5ac:	mov    edx,DWORD PTR [rbx+r13*1-0x4]
  41e5b1:	mov    DWORD PTR [rcx+r13*1-0x4],edx
  41e5b6:	jmp    41e482 <xmlStrEqual@plt+0x1a542>
  41e5bb:	mov    edx,DWORD PTR [r13+0x0]
  41e5bf:	mov    DWORD PTR [rcx],edx
  41e5c1:	mov    edx,eax
  41e5c3:	mov    eax,DWORD PTR [r13+rdx*1-0x4]
  41e5c8:	mov    DWORD PTR [rcx+rdx*1-0x4],eax
  41e5cc:	jmp    41e4dd <xmlStrEqual@plt+0x1a59d>
  41e5d1:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  41e5dc:	nop    DWORD PTR [rax+0x0]
  41e5e0:	endbr64 
  41e5e4:	push   rbp
  41e5e5:	mov    rbp,rsi
  41e5e8:	push   rbx
  41e5e9:	mov    rbx,rdi
  41e5ec:	sub    rsp,0x18
  41e5f0:	mov    rax,QWORD PTR fs:0x28
  41e5f9:	mov    QWORD PTR [rsp+0x8],rax
  41e5fe:	xor    eax,eax
  41e600:	mov    eax,DWORD PTR [rdi]
  41e602:	mov    edi,DWORD PTR [rdi+0x4]
  41e605:	mov    ecx,eax
  41e607:	lea    edx,[rdi*8+0x0]
  41e60e:	shr    ecx,0x1d
  41e611:	or     edx,ecx
  41e613:	movbe  DWORD PTR [rsp],edx
  41e618:	lea    edx,[rax*8+0x0]
  41e61f:	and    eax,0x3f
  41e622:	movbe  DWORD PTR [rsp+0x4],edx
  41e628:	cmp    eax,0x37
  41e62b:	ja     41e6f0 <xmlStrEqual@plt+0x1a7b0>
  41e631:	mov    edx,0x38
  41e636:	sub    edx,eax
  41e638:	lea    rsi,[rip+0x2f121]        # 44d760 <xmlStrEqual@plt+0x49820>
  41e63f:	mov    rdi,rbx
  41e642:	call   41e400 <xmlStrEqual@plt+0x1a4c0>
  41e647:	mov    rsi,rsp
  41e64a:	mov    edx,0x8
  41e64f:	mov    rdi,rbx
  41e652:	call   41e400 <xmlStrEqual@plt+0x1a4c0>
  41e657:	movzx  eax,BYTE PTR [rbx+0xb]
  41e65b:	mov    BYTE PTR [rbp+0x0],al
  41e65e:	movzx  eax,WORD PTR [rbx+0xa]
  41e662:	mov    BYTE PTR [rbp+0x1],al
  41e665:	mov    eax,DWORD PTR [rbx+0x8]
  41e668:	mov    BYTE PTR [rbp+0x2],ah
  41e66b:	mov    eax,DWORD PTR [rbx+0x8]
  41e66e:	mov    BYTE PTR [rbp+0x3],al
  41e671:	movzx  eax,BYTE PTR [rbx+0xf]
  41e675:	mov    BYTE PTR [rbp+0x4],al
  41e678:	movzx  eax,WORD PTR [rbx+0xe]
  41e67c:	mov    BYTE PTR [rbp+0x5],al
  41e67f:	mov    eax,DWORD PTR [rbx+0xc]
  41e682:	mov    BYTE PTR [rbp+0x6],ah
  41e685:	mov    eax,DWORD PTR [rbx+0xc]
  41e688:	mov    BYTE PTR [rbp+0x7],al
  41e68b:	movzx  eax,BYTE PTR [rbx+0x13]
  41e68f:	mov    BYTE PTR [rbp+0x8],al
  41e692:	movzx  eax,WORD PTR [rbx+0x12]
  41e696:	mov    BYTE PTR [rbp+0x9],al
  41e699:	mov    eax,DWORD PTR [rbx+0x10]
  41e69c:	mov    BYTE PTR [rbp+0xa],ah
  41e69f:	mov    eax,DWORD PTR [rbx+0x10]
  41e6a2:	mov    BYTE PTR [rbp+0xb],al
  41e6a5:	movzx  eax,BYTE PTR [rbx+0x17]
  41e6a9:	mov    BYTE PTR [rbp+0xc],al
  41e6ac:	movzx  eax,WORD PTR [rbx+0x16]
  41e6b0:	mov    BYTE PTR [rbp+0xd],al
  41e6b3:	mov    eax,DWORD PTR [rbx+0x14]
  41e6b6:	mov    BYTE PTR [rbp+0xe],ah
  41e6b9:	mov    eax,DWORD PTR [rbx+0x14]
  41e6bc:	mov    BYTE PTR [rbp+0xf],al
  41e6bf:	movzx  eax,BYTE PTR [rbx+0x1b]
  41e6c3:	mov    BYTE PTR [rbp+0x10],al
  41e6c6:	movzx  eax,WORD PTR [rbx+0x1a]
  41e6ca:	mov    BYTE PTR [rbp+0x11],al
  41e6cd:	mov    eax,DWORD PTR [rbx+0x18]
  41e6d0:	mov    BYTE PTR [rbp+0x12],ah
  41e6d3:	mov    eax,DWORD PTR [rbx+0x18]
  41e6d6:	mov    BYTE PTR [rbp+0x13],al
  41e6d9:	mov    rax,QWORD PTR [rsp+0x8]
  41e6de:	xor    rax,QWORD PTR fs:0x28
  41e6e7:	jne    41e6fc <xmlStrEqual@plt+0x1a7bc>
  41e6e9:	add    rsp,0x18
  41e6ed:	pop    rbx
  41e6ee:	pop    rbp
  41e6ef:	ret    
  41e6f0:	mov    edx,0x78
  41e6f5:	sub    edx,eax
  41e6f7:	jmp    41e638 <xmlStrEqual@plt+0x1a6f8>
  41e6fc:	call   403c00 <__stack_chk_fail@plt>
  41e701:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  41e70c:	nop    DWORD PTR [rax+0x0]
  41e710:	endbr64 
  41e714:	push   r13
  41e716:	mov    r13,rsi
  41e719:	push   r12
  41e71b:	mov    r12,rdi
  41e71e:	push   rbp
  41e71f:	mov    rbp,rdx
  41e722:	push   rbx
  41e723:	sub    rsp,0x78
  41e727:	mov    rbx,rsp
  41e72a:	mov    rdi,rbx
  41e72d:	mov    rax,QWORD PTR fs:0x28
  41e736:	mov    QWORD PTR [rsp+0x68],rax
  41e73b:	xor    eax,eax
  41e73d:	call   41d0b0 <xmlStrEqual@plt+0x19170>
  41e742:	mov    rdi,rbx
  41e745:	call   41d150 <xmlStrEqual@plt+0x19210>
  41e74a:	mov    rdx,r13
  41e74d:	mov    rsi,r12
  41e750:	mov    rdi,rbx
  41e753:	call   41e400 <xmlStrEqual@plt+0x1a4c0>
  41e758:	mov    rsi,rbp
  41e75b:	mov    rdi,rbx
  41e75e:	call   41e5e0 <xmlStrEqual@plt+0x1a6a0>
  41e763:	mov    rdi,rbx
  41e766:	call   41d0e0 <xmlStrEqual@plt+0x191a0>
  41e76b:	mov    rax,QWORD PTR [rsp+0x68]
  41e770:	xor    rax,QWORD PTR fs:0x28
  41e779:	jne    41e786 <xmlStrEqual@plt+0x1a846>
  41e77b:	add    rsp,0x78
  41e77f:	pop    rbx
  41e780:	pop    rbp
  41e781:	pop    r12
  41e783:	pop    r13
  41e785:	ret    
  41e786:	call   403c00 <__stack_chk_fail@plt>
  41e78b:	nop    DWORD PTR [rax+rax*1+0x0]
  41e790:	endbr64 
  41e794:	mov    QWORD PTR [rdi],0x0
  41e79b:	mov    QWORD PTR [rdi+0x64],0x0
  41e7a3:	mov    rcx,rdi
  41e7a6:	lea    rdi,[rdi+0x8]
  41e7aa:	and    rdi,0xfffffffffffffff8
  41e7ae:	sub    rcx,rdi
  41e7b1:	add    ecx,0x6c
  41e7b4:	shr    ecx,0x3
  41e7b7:	xor    eax,eax
  41e7b9:	rep stos QWORD PTR es:[rdi],rax
  41e7bc:	ret    
  41e7bd:	nop    DWORD PTR [rax]
  41e7c0:	endbr64 
  41e7c4:	test   rdi,rdi
  41e7c7:	je     41e7db <xmlStrEqual@plt+0x1a89b>
  41e7c9:	lea    rax,[rdi+0x6c]
  41e7cd:	nop    DWORD PTR [rax]
  41e7d0:	mov    BYTE PTR [rdi],0x0
  41e7d3:	inc    rdi
  41e7d6:	cmp    rax,rdi
  41e7d9:	jne    41e7d0 <xmlStrEqual@plt+0x1a890>
  41e7db:	ret    
  41e7dc:	nop    DWORD PTR [rax+0x0]
  41e7e0:	endbr64 
  41e7e4:	vmovdqu xmm0,XMMWORD PTR [rsi]
  41e7e8:	vmovups XMMWORD PTR [rdi],xmm0
  41e7ec:	vmovdqu xmm1,XMMWORD PTR [rsi+0x10]
  41e7f1:	vmovups XMMWORD PTR [rdi+0x10],xmm1
  41e7f6:	vmovdqu xmm2,XMMWORD PTR [rsi+0x20]
  41e7fb:	vmovups XMMWORD PTR [rdi+0x20],xmm2
  41e800:	vmovdqu xmm3,XMMWORD PTR [rsi+0x30]
  41e805:	vmovups XMMWORD PTR [rdi+0x30],xmm3
  41e80a:	vmovdqu xmm4,XMMWORD PTR [rsi+0x40]
  41e80f:	vmovups XMMWORD PTR [rdi+0x40],xmm4
  41e814:	vmovdqu xmm5,XMMWORD PTR [rsi+0x50]
  41e819:	vmovups XMMWORD PTR [rdi+0x50],xmm5
  41e81e:	mov    rax,QWORD PTR [rsi+0x60]
  41e822:	mov    QWORD PTR [rdi+0x60],rax
  41e826:	mov    eax,DWORD PTR [rsi+0x68]
  41e829:	mov    DWORD PTR [rdi+0x68],eax
  41e82c:	ret    
  41e82d:	nop    DWORD PTR [rax]
  41e830:	endbr64 
  41e834:	mov    QWORD PTR [rdi],0x0
  41e83b:	test   esi,esi
  41e83d:	jne    41e880 <xmlStrEqual@plt+0x1a940>
  41e83f:	movabs rax,0xbb67ae856a09e667
  41e849:	mov    QWORD PTR [rdi+0x8],rax
  41e84d:	movabs rax,0xa54ff53a3c6ef372
  41e857:	mov    QWORD PTR [rdi+0x10],rax
  41e85b:	movabs rax,0x9b05688c510e527f
  41e865:	mov    QWORD PTR [rdi+0x18],rax
  41e869:	movabs rax,0x5be0cd191f83d9ab
  41e873:	mov    QWORD PTR [rdi+0x20],rax
  41e877:	mov    DWORD PTR [rdi+0x68],esi
  41e87a:	ret    
  41e87b:	nop    DWORD PTR [rax+rax*1+0x0]
  41e880:	movabs rax,0x367cd507c1059ed8
  41e88a:	mov    QWORD PTR [rdi+0x8],rax
  41e88e:	movabs rax,0xf70e59393070dd17
  41e898:	mov    QWORD PTR [rdi+0x10],rax
  41e89c:	movabs rax,0x68581511ffc00b31
  41e8a6:	mov    QWORD PTR [rdi+0x18],rax
  41e8aa:	movabs rax,0xbefa4fa464f98fa7
  41e8b4:	mov    QWORD PTR [rdi+0x20],rax
  41e8b8:	mov    DWORD PTR [rdi+0x68],esi
  41e8bb:	ret    
  41e8bc:	nop    DWORD PTR [rax+0x0]
  41e8c0:	endbr64 
  41e8c4:	push   r15
  41e8c6:	mov    rcx,rdi
  41e8c9:	push   r14
  41e8cb:	push   r13
  41e8cd:	push   r12
  41e8cf:	push   rbp
  41e8d0:	push   rbx
  41e8d1:	sub    rsp,0x188
  41e8d8:	mov    QWORD PTR [rsp+0x40],rdi
  41e8dd:	lea    rbx,[rsp+0x50]
  41e8e2:	mov    rdi,rbx
  41e8e5:	mov    rax,QWORD PTR fs:0x28
  41e8ee:	mov    QWORD PTR [rsp+0x178],rax
  41e8f6:	xor    eax,eax
  41e8f8:	mov    QWORD PTR [rsp+0x48],rbx
  41e8fd:	nop    DWORD PTR [rax]
  41e900:	mov    edx,DWORD PTR [rcx+rax*1+0x8]
  41e904:	add    rax,0x4
  41e908:	mov    DWORD PTR [rax+rdi*1-0x4],edx
  41e90c:	cmp    rax,0x20
  41e910:	jne    41e900 <xmlStrEqual@plt+0x1a9c0>
  41e912:	lea    r12,[rsp+0x70]
  41e917:	lea    r8,[r12+0x40]
  41e91c:	mov    rdx,r12
  41e91f:	nop
  41e920:	movzx  eax,BYTE PTR [rsi]
  41e923:	movzx  ecx,BYTE PTR [rsi+0x1]
  41e927:	shl    eax,0x18
  41e92a:	shl    ecx,0x10
  41e92d:	or     eax,ecx
  41e92f:	movzx  ecx,BYTE PTR [rsi+0x3]
  41e933:	add    rdx,0x4
  41e937:	or     eax,ecx
  41e939:	movzx  ecx,BYTE PTR [rsi+0x2]
  41e93d:	add    rsi,0x4
  41e941:	shl    ecx,0x8
  41e944:	or     eax,ecx
  41e946:	mov    DWORD PTR [rdx-0x4],eax
  41e949:	cmp    r8,rdx
  41e94c:	jne    41e920 <xmlStrEqual@plt+0x1a9e0>
  41e94e:	lea    rbx,[rip+0x2ee8b]        # 44d7e0 <xmlStrEqual@plt+0x498a0>
  41e955:	mov    edx,DWORD PTR [rsp+0x6c]
  41e959:	mov    QWORD PTR [rsp+0x10],rbx
  41e95e:	mov    DWORD PTR [rsp+0x24],0xab1c5ed5
  41e966:	mov    DWORD PTR [rsp+0x20],0x923f82a4
  41e96e:	mov    DWORD PTR [rsp+0x1c],0x59f111f1
  41e976:	mov    DWORD PTR [rsp+0x18],0x3956c25b
  41e97e:	mov    DWORD PTR [rsp+0xc],0xe9b5dba5
  41e986:	mov    QWORD PTR [rsp+0x30],r12
  41e98b:	mov    eax,DWORD PTR [rsp+0x60]
  41e98f:	mov    r15d,DWORD PTR [rsp+0x68]
  41e994:	mov    r14d,DWORD PTR [rsp+0x64]
  41e999:	mov    r13d,DWORD PTR [rsp+0x50]
  41e99e:	mov    r10d,DWORD PTR [rsp+0x54]
  41e9a3:	mov    r11d,DWORD PTR [rsp+0x58]
  41e9a8:	mov    esi,DWORD PTR [rsp+0x5c]
  41e9ac:	mov    QWORD PTR [rsp+0x28],r8
  41e9b1:	mov    rdi,r12
  41e9b4:	mov    ebp,0xb5c0fbcf
  41e9b9:	mov    r9d,0x71374491
  41e9bf:	mov    ecx,0x428a2f98
  41e9c4:	mov    r8d,edx
  41e9c7:	rorx   r12d,eax,0x6
  41e9cd:	rorx   edx,eax,0xb
  41e9d3:	xor    edx,r12d
  41e9d6:	rorx   r12d,eax,0x19
  41e9dc:	xor    edx,r12d
  41e9df:	mov    r12d,r15d
  41e9e2:	xor    r12d,r14d
  41e9e5:	and    r12d,eax
  41e9e8:	xor    r12d,r15d
  41e9eb:	add    edx,r12d
  41e9ee:	add    edx,DWORD PTR [rdi]
  41e9f0:	add    r8d,edx
  41e9f3:	add    ecx,r8d
  41e9f6:	rorx   edx,r13d,0xd
  41e9fc:	rorx   r8d,r13d,0x2
  41ea02:	xor    edx,r8d
  41ea05:	rorx   r8d,r13d,0x16
  41ea0b:	xor    edx,r8d
  41ea0e:	mov    r8d,r13d
  41ea11:	or     r8d,r10d
  41ea14:	mov    r12d,r13d
  41ea17:	and    r12d,r10d
  41ea1a:	and    r8d,r11d
  41ea1d:	or     r8d,r12d
  41ea20:	add    r8d,edx
  41ea23:	add    r8d,ecx
  41ea26:	add    esi,ecx
  41ea28:	mov    ecx,eax
  41ea2a:	xor    ecx,r14d
  41ea2d:	and    ecx,esi
  41ea2f:	xor    ecx,r14d
  41ea32:	add    r15d,DWORD PTR [rdi+0x4]
  41ea36:	add    r15d,ecx
  41ea39:	rorx   edx,esi,0xb
  41ea3f:	rorx   ecx,esi,0x6
  41ea45:	xor    edx,ecx
  41ea47:	rorx   ecx,esi,0x19
  41ea4d:	xor    edx,ecx
  41ea4f:	add    edx,r15d
  41ea52:	add    r9d,edx
  41ea55:	rorx   ecx,r8d,0xd
  41ea5b:	rorx   edx,r8d,0x2
  41ea61:	xor    ecx,edx
  41ea63:	rorx   edx,r8d,0x16
  41ea69:	xor    ecx,edx
  41ea6b:	mov    edx,r8d
  41ea6e:	or     edx,r13d
  41ea71:	mov    r12d,r8d
  41ea74:	add    r11d,r9d
  41ea77:	and    edx,r10d
  41ea7a:	and    r12d,r13d
  41ea7d:	or     edx,r12d
  41ea80:	add    edx,ecx
  41ea82:	add    edx,r9d
  41ea85:	mov    r9d,esi
  41ea88:	xor    r9d,eax
  41ea8b:	and    r9d,r11d
  41ea8e:	xor    r9d,eax
  41ea91:	add    r14d,DWORD PTR [rdi+0x8]
  41ea95:	add    r14d,r9d
  41ea98:	rorx   ecx,r11d,0xb
  41ea9e:	rorx   r9d,r11d,0x6
  41eaa4:	xor    ecx,r9d
  41eaa7:	rorx   r9d,r11d,0x19
  41eaad:	xor    ecx,r9d
  41eab0:	add    ecx,r14d
  41eab3:	add    ebp,ecx
  41eab5:	rorx   r9d,edx,0xd
  41eabb:	rorx   ecx,edx,0x2
  41eac1:	xor    r9d,ecx
  41eac4:	rorx   ecx,edx,0x16
  41eaca:	xor    r9d,ecx
  41eacd:	mov    ecx,r8d
  41ead0:	or     ecx,edx
  41ead2:	mov    r12d,r8d
  41ead5:	and    r12d,edx
  41ead8:	and    ecx,r13d
  41eadb:	or     ecx,r12d
  41eade:	add    ecx,r9d
  41eae1:	add    ecx,ebp
  41eae3:	add    r10d,ebp
  41eae6:	mov    ebp,esi
  41eae8:	xor    ebp,r11d
  41eaeb:	and    ebp,r10d
  41eaee:	add    eax,DWORD PTR [rdi+0xc]
  41eaf1:	xor    ebp,esi
  41eaf3:	add    ebp,eax
  41eaf5:	rorx   r9d,r10d,0x6
  41eafb:	rorx   eax,r10d,0xb
  41eb01:	xor    eax,r9d
  41eb04:	rorx   r9d,r10d,0x19
  41eb0a:	xor    eax,r9d
  41eb0d:	mov    r9d,DWORD PTR [rsp+0xc]
  41eb12:	add    eax,ebp
  41eb14:	add    r9d,eax
  41eb17:	add    r13d,r9d
  41eb1a:	rorx   eax,ecx,0x2
  41eb20:	rorx   ebp,ecx,0xd
  41eb26:	xor    ebp,eax
  41eb28:	rorx   eax,ecx,0x16
  41eb2e:	xor    ebp,eax
  41eb30:	mov    eax,edx
  41eb32:	or     eax,ecx
  41eb34:	mov    r12d,edx
  41eb37:	and    r12d,ecx
  41eb3a:	and    eax,r8d
  41eb3d:	or     eax,r12d
  41eb40:	add    eax,ebp
  41eb42:	mov    ebp,r11d
  41eb45:	xor    ebp,r10d
  41eb48:	and    ebp,r13d
  41eb4b:	add    esi,DWORD PTR [rdi+0x10]
  41eb4e:	xor    ebp,r11d
  41eb51:	add    eax,r9d
  41eb54:	add    ebp,esi
  41eb56:	rorx   r9d,r13d,0x6
  41eb5c:	rorx   esi,r13d,0xb
  41eb62:	xor    esi,r9d
  41eb65:	rorx   r9d,r13d,0x19
  41eb6b:	xor    esi,r9d
  41eb6e:	mov    r9d,DWORD PTR [rsp+0x18]
  41eb73:	add    esi,ebp
  41eb75:	add    r9d,esi
  41eb78:	rorx   ebp,eax,0xd
  41eb7e:	rorx   esi,eax,0x2
  41eb84:	xor    ebp,esi
  41eb86:	rorx   esi,eax,0x16
  41eb8c:	xor    ebp,esi
  41eb8e:	mov    esi,ecx
  41eb90:	or     esi,eax
  41eb92:	mov    r12d,ecx
  41eb95:	and    esi,edx
  41eb97:	and    r12d,eax
  41eb9a:	or     esi,r12d
  41eb9d:	add    esi,ebp
  41eb9f:	mov    ebp,r10d
  41eba2:	add    r8d,r9d
  41eba5:	xor    ebp,r13d
  41eba8:	and    ebp,r8d
  41ebab:	add    r11d,DWORD PTR [rdi+0x14]
  41ebaf:	xor    ebp,r10d
  41ebb2:	add    esi,r9d
  41ebb5:	add    ebp,r11d
  41ebb8:	rorx   r9d,r8d,0xb
  41ebbe:	rorx   r11d,r8d,0x6
  41ebc4:	xor    r9d,r11d
  41ebc7:	rorx   r11d,r8d,0x19
  41ebcd:	xor    r9d,r11d
  41ebd0:	add    r9d,ebp
  41ebd3:	add    r9d,DWORD PTR [rsp+0x1c]
  41ebd8:	lea    r15d,[rdx+r9*1]
  41ebdc:	rorx   r11d,esi,0x2
  41ebe2:	rorx   edx,esi,0xd
  41ebe8:	xor    edx,r11d
  41ebeb:	rorx   r11d,esi,0x16
  41ebf1:	xor    edx,r11d
  41ebf4:	mov    r11d,eax
  41ebf7:	or     r11d,esi
  41ebfa:	mov    ebp,eax
  41ebfc:	and    r11d,ecx
  41ebff:	and    ebp,esi
  41ec01:	or     r11d,ebp
  41ec04:	add    r11d,edx
  41ec07:	add    r11d,r9d
  41ec0a:	mov    r9d,r13d
  41ec0d:	xor    r9d,r8d
  41ec10:	and    r9d,r15d
  41ec13:	add    r10d,DWORD PTR [rdi+0x18]
  41ec17:	xor    r9d,r13d
  41ec1a:	add    r9d,r10d
  41ec1d:	rorx   edx,r15d,0xb
  41ec23:	rorx   r10d,r15d,0x6
  41ec29:	xor    edx,r10d
  41ec2c:	rorx   r10d,r15d,0x19
  41ec32:	xor    edx,r10d
  41ec35:	lea    r10d,[r9+rdx*1]
  41ec39:	mov    edx,DWORD PTR [rsp+0x20]
  41ec3d:	mov    r9d,esi
  41ec40:	add    edx,r10d
  41ec43:	lea    r14d,[rcx+rdx*1]
  41ec47:	rorx   r10d,r11d,0xd
  41ec4d:	rorx   ecx,r11d,0x2
  41ec53:	xor    ecx,r10d
  41ec56:	rorx   r10d,r11d,0x16
  41ec5c:	xor    ecx,r10d
  41ec5f:	mov    r10d,esi
  41ec62:	or     r10d,r11d
  41ec65:	and    r10d,eax
  41ec68:	and    r9d,r11d
  41ec6b:	or     r10d,r9d
  41ec6e:	add    r10d,ecx
  41ec71:	add    r10d,edx
  41ec74:	mov    edx,r8d
  41ec77:	xor    edx,r15d
  41ec7a:	and    edx,r14d
  41ec7d:	xor    edx,r8d
  41ec80:	add    r13d,DWORD PTR [rdi+0x1c]
  41ec84:	add    r13d,edx
  41ec87:	rorx   ecx,r14d,0xb
  41ec8d:	rorx   edx,r14d,0x6
  41ec93:	xor    edx,ecx
  41ec95:	rorx   ecx,r14d,0x19
  41ec9b:	xor    edx,ecx
  41ec9d:	add    r13d,edx
  41eca0:	mov    edx,DWORD PTR [rsp+0x24]
  41eca4:	rorx   ecx,r10d,0x2
  41ecaa:	add    edx,r13d
  41ecad:	rorx   r13d,r10d,0xd
  41ecb3:	xor    ecx,r13d
  41ecb6:	rorx   r13d,r10d,0x16
  41ecbc:	xor    ecx,r13d
  41ecbf:	mov    r13d,r11d
  41ecc2:	or     r13d,r10d
  41ecc5:	mov    r9d,r11d
  41ecc8:	and    r13d,esi
  41eccb:	and    r9d,r10d
  41ecce:	or     r13d,r9d
  41ecd1:	add    r13d,ecx
  41ecd4:	add    rdi,0x20
  41ecd8:	add    eax,edx
  41ecda:	add    r13d,edx
  41ecdd:	add    rbx,0x20
  41ece1:	cmp    QWORD PTR [rsp+0x28],rdi
  41ece6:	je     41ed20 <xmlStrEqual@plt+0x1ade0>
  41ece8:	mov    edx,DWORD PTR [rbx+0xc]
  41eceb:	mov    ecx,DWORD PTR [rbx]
  41eced:	mov    DWORD PTR [rsp+0xc],edx
  41ecf1:	mov    edx,DWORD PTR [rbx+0x10]
  41ecf4:	mov    r9d,DWORD PTR [rbx+0x4]
  41ecf8:	mov    DWORD PTR [rsp+0x18],edx
  41ecfc:	mov    edx,DWORD PTR [rbx+0x14]
  41ecff:	mov    ebp,DWORD PTR [rbx+0x8]
  41ed02:	mov    DWORD PTR [rsp+0x1c],edx
  41ed06:	mov    edx,DWORD PTR [rbx+0x18]
  41ed09:	mov    DWORD PTR [rsp+0x20],edx
  41ed0d:	mov    edx,DWORD PTR [rbx+0x1c]
  41ed10:	mov    DWORD PTR [rsp+0x24],edx
  41ed14:	jmp    41e9c7 <xmlStrEqual@plt+0x1aa87>
  41ed19:	nop    DWORD PTR [rax+0x0]
  41ed20:	mov    r12,QWORD PTR [rsp+0x30]
  41ed25:	mov    r9d,esi
  41ed28:	lea    rbx,[r12+0xc0]
  41ed30:	mov    ebp,0xefbe4786
  41ed35:	mov    esi,r8d
  41ed38:	mov    DWORD PTR [rsp+0x6c],r8d
  41ed3d:	mov    QWORD PTR [rsp+0x38],rbx
  41ed42:	mov    DWORD PTR [rsp+0x60],eax
  41ed46:	mov    ebx,ebp
  41ed48:	mov    DWORD PTR [rsp+0x68],r15d
  41ed4d:	mov    DWORD PTR [rsp+0x64],r14d
  41ed52:	mov    DWORD PTR [rsp+0x50],r13d
  41ed57:	mov    DWORD PTR [rsp+0x54],r10d
  41ed5c:	mov    DWORD PTR [rsp+0x58],r11d
  41ed61:	mov    DWORD PTR [rsp+0x5c],r9d
  41ed66:	mov    DWORD PTR [rsp+0x30],0x76f988da
  41ed6e:	mov    DWORD PTR [rsp+0x28],0x5cb0a9dc
  41ed76:	mov    DWORD PTR [rsp+0x24],0x4a7484aa
  41ed7e:	mov    DWORD PTR [rsp+0x20],0x2de92c6f
  41ed86:	mov    DWORD PTR [rsp+0x1c],0x240ca1cc
  41ed8e:	mov    DWORD PTR [rsp+0x18],0xfc19dc6
  41ed96:	mov    r8d,0xe49b69c1
  41ed9c:	mov    ebp,eax
  41ed9e:	jmp    41edd1 <xmlStrEqual@plt+0x1ae91>
  41eda0:	mov    edi,DWORD PTR [rax+0x48]
  41eda3:	mov    r8d,DWORD PTR [rax+0x40]
  41eda7:	mov    DWORD PTR [rsp+0x18],edi
  41edab:	mov    edi,DWORD PTR [rax+0x4c]
  41edae:	mov    ebx,DWORD PTR [rax+0x44]
  41edb1:	mov    DWORD PTR [rsp+0x1c],edi
  41edb5:	mov    edi,DWORD PTR [rax+0x50]
  41edb8:	mov    DWORD PTR [rsp+0x20],edi
  41edbc:	mov    edi,DWORD PTR [rax+0x54]
  41edbf:	mov    DWORD PTR [rsp+0x24],edi
  41edc3:	mov    edi,DWORD PTR [rax+0x58]
  41edc6:	mov    eax,DWORD PTR [rax+0x5c]
  41edc9:	mov    DWORD PTR [rsp+0x28],edi
  41edcd:	mov    DWORD PTR [rsp+0x30],eax
  41edd1:	mov    edi,0xa
  41edd6:	rorx   edx,DWORD PTR [r12+0x38],0x13
  41edde:	rorx   eax,DWORD PTR [r12+0x38],0x11
  41ede6:	xor    eax,edx
  41ede8:	shrx   edx,DWORD PTR [r12+0x38],edi
  41edef:	mov    edi,DWORD PTR [r12]
  41edf3:	mov    ecx,DWORD PTR [r12+0x4]
  41edf8:	add    edi,DWORD PTR [r12+0x24]
  41edfd:	xor    edx,eax
  41edff:	add    edx,edi
  41ee01:	rorx   eax,ecx,0x12
  41ee07:	rorx   edi,ecx,0x7
  41ee0d:	xor    eax,edi
  41ee0f:	mov    edi,ecx
  41ee11:	shr    edi,0x3
  41ee14:	xor    eax,edi
  41ee16:	lea    edi,[rdx+rax*1]
  41ee19:	rorx   edx,ebp,0x6
  41ee1f:	rorx   eax,ebp,0xb
  41ee25:	xor    eax,edx
  41ee27:	rorx   edx,ebp,0x19
  41ee2d:	xor    eax,edx
  41ee2f:	mov    edx,r15d
  41ee32:	xor    edx,r14d
  41ee35:	and    edx,ebp
  41ee37:	xor    edx,r15d
  41ee3a:	add    eax,edx
  41ee3c:	add    eax,edi
  41ee3e:	add    esi,eax
  41ee40:	add    r8d,esi
  41ee43:	rorx   eax,r13d,0xd
  41ee49:	rorx   esi,r13d,0x2
  41ee4f:	xor    eax,esi
  41ee51:	rorx   esi,r13d,0x16
  41ee57:	xor    eax,esi
  41ee59:	mov    esi,r13d
  41ee5c:	or     esi,r10d
  41ee5f:	mov    edx,r13d
  41ee62:	and    edx,r10d
  41ee65:	and    esi,r11d
  41ee68:	or     esi,edx
  41ee6a:	add    esi,eax
  41ee6c:	add    esi,r8d
  41ee6f:	add    r9d,r8d
  41ee72:	mov    edx,DWORD PTR [r12+0x8]
  41ee77:	rorx   r8d,DWORD PTR [r12+0x3c],0x11
  41ee7f:	rorx   eax,DWORD PTR [r12+0x3c],0x13
  41ee87:	xor    eax,r8d
  41ee8a:	mov    r8d,0xa
  41ee90:	add    ecx,DWORD PTR [r12+0x28]
  41ee95:	shrx   r8d,DWORD PTR [r12+0x3c],r8d
  41ee9c:	xor    r8d,eax
  41ee9f:	add    ecx,r8d
  41eea2:	rorx   eax,edx,0x7
  41eea8:	rorx   r8d,edx,0x12
  41eeae:	xor    r8d,eax
  41eeb1:	mov    eax,edx
  41eeb3:	shr    eax,0x3
  41eeb6:	xor    r8d,eax
  41eeb9:	add    r8d,ecx
  41eebc:	mov    ecx,ebp
  41eebe:	xor    ecx,r14d
  41eec1:	and    ecx,r9d
  41eec4:	xor    ecx,r14d
  41eec7:	add    r15d,r8d
  41eeca:	add    r15d,ecx
  41eecd:	rorx   eax,r9d,0xb
  41eed3:	rorx   ecx,r9d,0x6
  41eed9:	xor    eax,ecx
  41eedb:	rorx   ecx,r9d,0x19
  41eee1:	xor    eax,ecx
  41eee3:	add    eax,r15d
  41eee6:	add    ebx,eax
  41eee8:	rorx   ecx,esi,0xd
  41eeee:	rorx   eax,esi,0x2
  41eef4:	xor    ecx,eax
  41eef6:	mov    DWORD PTR [rsp+0xc],edi
  41eefa:	rorx   eax,esi,0x16
  41ef00:	xor    ecx,eax
  41ef02:	mov    eax,r13d
  41ef05:	or     eax,esi
  41ef07:	mov    r15d,r13d
  41ef0a:	and    r15d,esi
  41ef0d:	and    eax,r10d
  41ef10:	mov    DWORD PTR [r12+0x40],edi
  41ef15:	or     eax,r15d
  41ef18:	mov    edi,DWORD PTR [rsp+0xc]
  41ef1c:	add    eax,ecx
  41ef1e:	add    eax,ebx
  41ef20:	add    r11d,ebx
  41ef23:	rorx   ecx,edi,0x13
  41ef29:	rorx   ebx,edi,0x11
  41ef2f:	xor    ecx,ebx
  41ef31:	mov    ebx,edi
  41ef33:	mov    r15d,DWORD PTR [r12+0xc]
  41ef38:	shr    ebx,0xa
  41ef3b:	xor    ebx,ecx
  41ef3d:	add    edx,DWORD PTR [r12+0x2c]
  41ef42:	add    edx,ebx
  41ef44:	rorx   ecx,r15d,0x7
  41ef4a:	rorx   ebx,r15d,0x12
  41ef50:	xor    ebx,ecx
  41ef52:	mov    ecx,r15d
  41ef55:	shr    ecx,0x3
  41ef58:	xor    ebx,ecx
  41ef5a:	mov    ecx,ebp
  41ef5c:	xor    ecx,r9d
  41ef5f:	mov    edi,ecx
  41ef61:	and    edi,r11d
  41ef64:	add    ebx,edx
  41ef66:	mov    edx,edi
  41ef68:	xor    edx,ebp
  41ef6a:	lea    edi,[r14+rbx*1]
  41ef6e:	add    edi,edx
  41ef70:	rorx   r14d,r11d,0xb
  41ef76:	rorx   edx,r11d,0x6
  41ef7c:	xor    r14d,edx
  41ef7f:	mov    ecx,esi
  41ef81:	rorx   edx,r11d,0x19
  41ef87:	xor    r14d,edx
  41ef8a:	or     ecx,eax
  41ef8c:	add    r14d,edi
  41ef8f:	rorx   edx,eax,0xd
  41ef95:	rorx   edi,eax,0x2
  41ef9b:	xor    edx,edi
  41ef9d:	rorx   edi,eax,0x16
  41efa3:	xor    edx,edi
  41efa5:	mov    edi,ecx
  41efa7:	mov    ecx,esi
  41efa9:	and    ecx,eax
  41efab:	and    edi,r13d
  41efae:	or     edi,ecx
  41efb0:	add    edi,edx
  41efb2:	rorx   ecx,r8d,0x13
  41efb8:	rorx   edx,r8d,0x11
  41efbe:	xor    ecx,edx
  41efc0:	mov    edx,r8d
  41efc3:	shr    edx,0xa
  41efc6:	add    r14d,DWORD PTR [rsp+0x18]
  41efcb:	xor    ecx,edx
  41efcd:	mov    edx,DWORD PTR [r12+0x30]
  41efd2:	add    edi,r14d
  41efd5:	add    r10d,r14d
  41efd8:	mov    r14d,DWORD PTR [r12+0x10]
  41efdd:	add    edx,r15d
  41efe0:	add    edx,ecx
  41efe2:	mov    DWORD PTR [r12+0x44],r8d
  41efe7:	rorx   ecx,r14d,0x12
  41efed:	rorx   r8d,r14d,0x7
  41eff3:	xor    ecx,r8d
  41eff6:	mov    r8d,r14d
  41eff9:	shr    r8d,0x3
  41effd:	mov    r15d,r9d
  41f000:	xor    ecx,r8d
  41f003:	xor    r15d,r11d
  41f006:	add    ecx,edx
  41f008:	rorx   r8d,r10d,0x6
  41f00e:	and    r15d,r10d
  41f011:	rorx   edx,r10d,0xb
  41f017:	xor    edx,r8d
  41f01a:	xor    r15d,r9d
  41f01d:	rorx   r8d,r10d,0x19
  41f023:	xor    edx,r8d
  41f026:	lea    r8d,[rbp+rcx*1+0x0]
  41f02b:	lea    ebp,[r15+r8*1]
  41f02f:	add    ebp,edx
  41f031:	rorx   r8d,edi,0x2
  41f037:	rorx   edx,edi,0xd
  41f03d:	xor    edx,r8d
  41f040:	add    ebp,DWORD PTR [rsp+0x1c]
  41f044:	rorx   r8d,edi,0x16
  41f04a:	xor    edx,r8d
  41f04d:	mov    r8d,eax
  41f050:	add    r13d,ebp
  41f053:	mov    r15d,eax
  41f056:	or     r8d,edi
  41f059:	and    r8d,esi
  41f05c:	and    r15d,edi
  41f05f:	or     r8d,r15d
  41f062:	add    r8d,edx
  41f065:	rorx   r15d,ebx,0x11
  41f06b:	rorx   edx,ebx,0x13
  41f071:	xor    edx,r15d
  41f074:	mov    r15d,ebx
  41f077:	add    r8d,ebp
  41f07a:	add    r14d,DWORD PTR [r12+0x34]
  41f07f:	mov    ebp,DWORD PTR [r12+0x14]
  41f084:	shr    r15d,0xa
  41f088:	xor    edx,r15d
  41f08b:	mov    r15d,r14d
  41f08e:	add    r15d,edx
  41f091:	mov    DWORD PTR [r12+0x48],ebx
  41f096:	rorx   edx,ebp,0x12
  41f09c:	rorx   ebx,ebp,0x7
  41f0a2:	xor    edx,ebx
  41f0a4:	mov    ebx,ebp
  41f0a6:	shr    ebx,0x3
  41f0a9:	xor    edx,ebx
  41f0ab:	mov    ebx,r11d
  41f0ae:	xor    ebx,r10d
  41f0b1:	add    edx,r15d
  41f0b4:	and    ebx,r13d
  41f0b7:	xor    ebx,r11d
  41f0ba:	add    r9d,edx
  41f0bd:	add    r9d,ebx
  41f0c0:	rorx   r14d,r13d,0x6
  41f0c6:	rorx   ebx,r13d,0xb
  41f0cc:	xor    ebx,r14d
  41f0cf:	rorx   r14d,r13d,0x19
  41f0d5:	xor    ebx,r14d
  41f0d8:	add    ebx,r9d
  41f0db:	rorx   r14d,r8d,0xd
  41f0e1:	rorx   r9d,r8d,0x2
  41f0e7:	xor    r14d,r9d
  41f0ea:	rorx   r9d,r8d,0x16
  41f0f0:	xor    r14d,r9d
  41f0f3:	mov    r9d,edi
  41f0f6:	or     r9d,r8d
  41f0f9:	mov    r15d,edi
  41f0fc:	and    r9d,eax
  41f0ff:	and    r15d,r8d
  41f102:	or     r9d,r15d
  41f105:	add    ebx,DWORD PTR [rsp+0x20]
  41f109:	add    r9d,r14d
  41f10c:	add    esi,ebx
  41f10e:	rorx   r15d,ecx,0x11
  41f114:	add    r9d,ebx
  41f117:	rorx   r14d,ecx,0x13
  41f11d:	mov    ebx,DWORD PTR [r12+0x18]
  41f122:	xor    r14d,r15d
  41f125:	mov    r15d,DWORD PTR [r12+0x38]
  41f12a:	mov    DWORD PTR [r12+0x4c],ecx
  41f12f:	shr    ecx,0xa
  41f132:	xor    r14d,ecx
  41f135:	add    r15d,ebp
  41f138:	rorx   ecx,ebx,0x12
  41f13e:	rorx   ebp,ebx,0x7
  41f144:	xor    ecx,ebp
  41f146:	mov    ebp,ebx
  41f148:	shr    ebp,0x3
  41f14b:	xor    ecx,ebp
  41f14d:	mov    ebp,r10d
  41f150:	add    r15d,r14d
  41f153:	xor    ebp,r13d
  41f156:	add    ecx,r15d
  41f159:	and    ebp,esi
  41f15b:	xor    ebp,r10d
  41f15e:	add    r11d,ecx
  41f161:	add    r11d,ebp
  41f164:	rorx   r14d,esi,0x6
  41f16a:	rorx   ebp,esi,0xb
  41f170:	xor    ebp,r14d
  41f173:	rorx   r14d,esi,0x19
  41f179:	xor    ebp,r14d
  41f17c:	add    ebp,r11d
  41f17f:	add    ebp,DWORD PTR [rsp+0x24]
  41f183:	lea    r15d,[rax+rbp*1]
  41f187:	rorx   r11d,r9d,0x2
  41f18d:	rorx   eax,r9d,0xd
  41f193:	xor    eax,r11d
  41f196:	rorx   r11d,r9d,0x16
  41f19c:	xor    eax,r11d
  41f19f:	mov    r11d,r8d
  41f1a2:	or     r11d,r9d
  41f1a5:	mov    r14d,r8d
  41f1a8:	and    r11d,edi
  41f1ab:	and    r14d,r9d
  41f1ae:	or     r11d,r14d
  41f1b1:	add    r11d,eax
  41f1b4:	add    r11d,ebp
  41f1b7:	mov    eax,DWORD PTR [r12+0x1c]
  41f1bc:	mov    DWORD PTR [r12+0x50],edx
  41f1c1:	rorx   r14d,edx,0x11
  41f1c7:	rorx   ebp,edx,0x13
  41f1cd:	shr    edx,0xa
  41f1d0:	xor    ebp,r14d
  41f1d3:	mov    DWORD PTR [r12+0x54],ecx
  41f1d8:	xor    ebp,edx
  41f1da:	add    ebx,DWORD PTR [r12+0x3c]
  41f1df:	add    ebp,ebx
  41f1e1:	rorx   edx,eax,0x7
  41f1e7:	rorx   ebx,eax,0x12
  41f1ed:	xor    ebx,edx
  41f1ef:	mov    edx,eax
  41f1f1:	shr    edx,0x3
  41f1f4:	xor    ebx,edx
  41f1f6:	add    ebx,ebp
  41f1f8:	rorx   edx,r15d,0xb
  41f1fe:	rorx   ebp,r15d,0x6
  41f204:	xor    edx,ebp
  41f206:	rorx   ebp,r15d,0x19
  41f20c:	xor    edx,ebp
  41f20e:	mov    ebp,r13d
  41f211:	xor    ebp,esi
  41f213:	and    ebp,r15d
  41f216:	xor    ebp,r13d
  41f219:	add    r10d,ebx
  41f21c:	add    r10d,ebp
  41f21f:	add    r10d,edx
  41f222:	mov    edx,DWORD PTR [rsp+0x28]
  41f226:	mov    DWORD PTR [r12+0x58],ebx
  41f22b:	add    edx,r10d
  41f22e:	lea    r14d,[rdi+rdx*1]
  41f232:	rorx   r10d,r11d,0x2
  41f238:	rorx   edi,r11d,0xd
  41f23e:	xor    edi,r10d
  41f241:	rorx   r10d,r11d,0x16
  41f247:	xor    edi,r10d
  41f24a:	mov    r10d,r9d
  41f24d:	or     r10d,r11d
  41f250:	mov    ebx,r9d
  41f253:	and    ebx,r11d
  41f256:	and    r10d,r8d
  41f259:	or     r10d,ebx
  41f25c:	add    r10d,edi
  41f25f:	add    r10d,edx
  41f262:	mov    ebx,DWORD PTR [r12+0x20]
  41f267:	rorx   edi,ecx,0x11
  41f26d:	rorx   edx,ecx,0x13
  41f273:	shr    ecx,0xa
  41f276:	xor    edx,edi
  41f278:	xor    edx,ecx
  41f27a:	add    eax,DWORD PTR [rsp+0xc]
  41f27e:	lea    edi,[rdx+rax*1]
  41f281:	rorx   edx,ebx,0x7
  41f287:	rorx   eax,ebx,0x12
  41f28d:	shr    ebx,0x3
  41f290:	xor    eax,edx
  41f292:	xor    eax,ebx
  41f294:	mov    ecx,esi
  41f296:	add    edi,eax
  41f298:	rorx   ebp,r14d,0x6
  41f29e:	rorx   eax,r14d,0xb
  41f2a4:	xor    ecx,r15d
  41f2a7:	xor    ebp,eax
  41f2a9:	rorx   eax,r14d,0x19
  41f2af:	xor    ebp,eax
  41f2b1:	and    ecx,r14d
  41f2b4:	xor    ecx,esi
  41f2b6:	add    r13d,edi
  41f2b9:	add    r13d,ecx
  41f2bc:	mov    eax,DWORD PTR [rsp+0x30]
  41f2c0:	add    r13d,ebp
  41f2c3:	add    eax,r13d
  41f2c6:	rorx   edx,r10d,0xd
  41f2cc:	rorx   r13d,r10d,0x2
  41f2d2:	xor    r13d,edx
  41f2d5:	rorx   edx,r10d,0x16
  41f2db:	xor    r13d,edx
  41f2de:	mov    edx,r11d
  41f2e1:	or     edx,r10d
  41f2e4:	mov    ecx,r11d
  41f2e7:	add    QWORD PTR [rsp+0x10],0x20
  41f2ed:	and    edx,r9d
  41f2f0:	and    ecx,r10d
  41f2f3:	or     edx,ecx
  41f2f5:	mov    DWORD PTR [r12+0x5c],edi
  41f2fa:	add    r13d,edx
  41f2fd:	add    r12,0x20
  41f301:	lea    ebp,[r8+rax*1]
  41f305:	add    r13d,eax
  41f308:	mov    rax,QWORD PTR [rsp+0x10]
  41f30d:	cmp    QWORD PTR [rsp+0x38],r12
  41f312:	jne    41eda0 <xmlStrEqual@plt+0x1ae60>
  41f318:	mov    DWORD PTR [rsp+0x6c],esi
  41f31c:	mov    rsi,QWORD PTR [rsp+0x40]
  41f321:	mov    DWORD PTR [rsp+0x60],ebp
  41f325:	mov    DWORD PTR [rsp+0x68],r15d
  41f32a:	mov    DWORD PTR [rsp+0x64],r14d
  41f32f:	mov    DWORD PTR [rsp+0x50],r13d
  41f334:	mov    DWORD PTR [rsp+0x54],r10d
  41f339:	mov    DWORD PTR [rsp+0x58],r11d
  41f33e:	mov    DWORD PTR [rsp+0x5c],r9d
  41f343:	lea    rax,[rsi+0x8]
  41f347:	mov    rdx,QWORD PTR [rsp+0x48]
  41f34c:	lea    rdi,[rsi+0x28]
  41f350:	jmp    41f35b <xmlStrEqual@plt+0x1b41b>
  41f352:	nop    WORD PTR [rax+rax*1+0x0]
  41f358:	mov    r13d,DWORD PTR [rdx]
  41f35b:	add    DWORD PTR [rax],r13d
  41f35e:	add    rax,0x4
  41f362:	add    rdx,0x4
  41f366:	cmp    rdi,rax
  41f369:	jne    41f358 <xmlStrEqual@plt+0x1b418>
  41f36b:	mov    rax,QWORD PTR [rsp+0x178]
  41f373:	xor    rax,QWORD PTR fs:0x28
  41f37c:	jne    41f390 <xmlStrEqual@plt+0x1b450>
  41f37e:	add    rsp,0x188
  41f385:	pop    rbx
  41f386:	pop    rbp
  41f387:	pop    r12
  41f389:	pop    r13
  41f38b:	pop    r14
  41f38d:	pop    r15
  41f38f:	ret    
  41f390:	call   403c00 <__stack_chk_fail@plt>
  41f395:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  41f3a0:	endbr64 
  41f3a4:	test   rdx,rdx
  41f3a7:	je     41f490 <xmlStrEqual@plt+0x1b550>
  41f3ad:	push   r14
  41f3af:	push   r13
  41f3b1:	push   r12
  41f3b3:	mov    r12,rdx
  41f3b6:	mov    edx,0x40
  41f3bb:	push   rbp
  41f3bc:	mov    rbp,rdi
  41f3bf:	push   rbx
  41f3c0:	mov    rbx,rsi
  41f3c3:	mov    eax,DWORD PTR [rdi]
  41f3c5:	mov    r14d,eax
  41f3c8:	and    r14d,0x3f
  41f3cc:	sub    edx,r14d
  41f3cf:	add    eax,r12d
  41f3d2:	mov    r13d,edx
  41f3d5:	mov    DWORD PTR [rdi],eax
  41f3d7:	jae    41f3dc <xmlStrEqual@plt+0x1b49c>
  41f3d9:	inc    DWORD PTR [rdi+0x4]
  41f3dc:	test   r14d,r14d
  41f3df:	je     41f448 <xmlStrEqual@plt+0x1b508>
  41f3e1:	cmp    r12,r13
  41f3e4:	jb     41f448 <xmlStrEqual@plt+0x1b508>
  41f3e6:	lea    rax,[rbp+0x28]
  41f3ea:	mov    ecx,r14d
  41f3ed:	add    rcx,rax
  41f3f0:	cmp    edx,0x8
  41f3f3:	jb     41f510 <xmlStrEqual@plt+0x1b5d0>
  41f3f9:	mov    rsi,QWORD PTR [rbx]
  41f3fc:	lea    rdi,[rcx+0x8]
  41f400:	mov    QWORD PTR [rcx],rsi
  41f403:	and    rdi,0xfffffffffffffff8
  41f407:	mov    rsi,QWORD PTR [rbx+r13*1-0x8]
  41f40c:	mov    QWORD PTR [rcx+r13*1-0x8],rsi
  41f411:	sub    rcx,rdi
  41f414:	mov    rsi,rbx
  41f417:	sub    rsi,rcx
  41f41a:	add    ecx,edx
  41f41c:	shr    ecx,0x3
  41f41f:	rep movs QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
  41f422:	mov    rsi,rax
  41f425:	mov    rdi,rbp
  41f428:	sub    r12,r13
  41f42b:	call   41e8c0 <xmlStrEqual@plt+0x1a980>
  41f430:	add    rbx,r13
  41f433:	cmp    r12,0x3f
  41f437:	jbe    41f53d <xmlStrEqual@plt+0x1b5fd>
  41f43d:	xor    r14d,r14d
  41f440:	jmp    41f451 <xmlStrEqual@plt+0x1b511>
  41f442:	nop    WORD PTR [rax+rax*1+0x0]
  41f448:	mov    r13,rbx
  41f44b:	cmp    r12,0x3f
  41f44f:	jbe    41f498 <xmlStrEqual@plt+0x1b558>
  41f451:	lea    rax,[r12-0x40]
  41f456:	and    rax,0xffffffffffffffc0
  41f45a:	lea    r13,[rbx+rax*1+0x40]
  41f45f:	nop
  41f460:	mov    rsi,rbx
  41f463:	mov    rdi,rbp
  41f466:	add    rbx,0x40
  41f46a:	call   41e8c0 <xmlStrEqual@plt+0x1a980>
  41f46f:	cmp    rbx,r13
  41f472:	jne    41f460 <xmlStrEqual@plt+0x1b520>
  41f474:	and    r12d,0x3f
  41f478:	test   r12,r12
  41f47b:	jne    41f498 <xmlStrEqual@plt+0x1b558>
  41f47d:	pop    rbx
  41f47e:	pop    rbp
  41f47f:	pop    r12
  41f481:	pop    r13
  41f483:	pop    r14
  41f485:	ret    
  41f486:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41f490:	ret    
  41f491:	nop    DWORD PTR [rax+0x0]
  41f498:	lea    rcx,[rbp+r14*1+0x28]
  41f49d:	mov    eax,r12d
  41f4a0:	cmp    r12d,0x8
  41f4a4:	jae    41f4d0 <xmlStrEqual@plt+0x1b590>
  41f4a6:	and    r12d,0x4
  41f4aa:	jne    41f55b <xmlStrEqual@plt+0x1b61b>
  41f4b0:	test   eax,eax
  41f4b2:	je     41f47d <xmlStrEqual@plt+0x1b53d>
  41f4b4:	movzx  edx,BYTE PTR [r13+0x0]
  41f4b9:	mov    BYTE PTR [rcx],dl
  41f4bb:	test   al,0x2
  41f4bd:	je     41f47d <xmlStrEqual@plt+0x1b53d>
  41f4bf:	mov    edx,eax
  41f4c1:	movzx  eax,WORD PTR [r13+rdx*1-0x2]
  41f4c7:	mov    WORD PTR [rcx+rdx*1-0x2],ax
  41f4cc:	jmp    41f47d <xmlStrEqual@plt+0x1b53d>
  41f4ce:	xchg   ax,ax
  41f4d0:	mov    rax,QWORD PTR [r13+0x0]
  41f4d4:	lea    rdi,[rcx+0x8]
  41f4d8:	mov    QWORD PTR [rcx],rax
  41f4db:	mov    eax,r12d
  41f4de:	and    rdi,0xfffffffffffffff8
  41f4e2:	mov    rdx,QWORD PTR [r13+rax*1-0x8]
  41f4e7:	mov    rsi,r13
  41f4ea:	mov    QWORD PTR [rcx+rax*1-0x8],rdx
  41f4ef:	sub    rcx,rdi
  41f4f2:	lea    eax,[r12+rcx*1]
  41f4f6:	shr    eax,0x3
  41f4f9:	sub    rsi,rcx
  41f4fc:	mov    ecx,eax
  41f4fe:	rep movs QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
  41f501:	pop    rbx
  41f502:	pop    rbp
  41f503:	pop    r12
  41f505:	pop    r13
  41f507:	pop    r14
  41f509:	ret    
  41f50a:	nop    WORD PTR [rax+rax*1+0x0]
  41f510:	test   dl,0x4
  41f513:	jne    41f548 <xmlStrEqual@plt+0x1b608>
  41f515:	test   edx,edx
  41f517:	je     41f422 <xmlStrEqual@plt+0x1b4e2>
  41f51d:	movzx  esi,BYTE PTR [rbx]
  41f520:	and    edx,0x2
  41f523:	mov    BYTE PTR [rcx],sil
  41f526:	je     41f422 <xmlStrEqual@plt+0x1b4e2>
  41f52c:	movzx  edx,WORD PTR [rbx+r13*1-0x2]
  41f532:	mov    WORD PTR [rcx+r13*1-0x2],dx
  41f538:	jmp    41f422 <xmlStrEqual@plt+0x1b4e2>
  41f53d:	mov    r13,rbx
  41f540:	xor    r14d,r14d
  41f543:	jmp    41f478 <xmlStrEqual@plt+0x1b538>
  41f548:	mov    edx,DWORD PTR [rbx]
  41f54a:	mov    DWORD PTR [rcx],edx
  41f54c:	mov    edx,DWORD PTR [rbx+r13*1-0x4]
  41f551:	mov    DWORD PTR [rcx+r13*1-0x4],edx
  41f556:	jmp    41f422 <xmlStrEqual@plt+0x1b4e2>
  41f55b:	mov    edx,DWORD PTR [r13+0x0]
  41f55f:	mov    DWORD PTR [rcx],edx
  41f561:	mov    edx,eax
  41f563:	mov    eax,DWORD PTR [r13+rdx*1-0x4]
  41f568:	mov    DWORD PTR [rcx+rdx*1-0x4],eax
  41f56c:	jmp    41f47d <xmlStrEqual@plt+0x1b53d>
  41f571:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  41f57c:	nop    DWORD PTR [rax+0x0]
  41f580:	endbr64 
  41f584:	push   rbp
  41f585:	mov    rbp,rsi
  41f588:	push   rbx
  41f589:	mov    rbx,rdi
  41f58c:	sub    rsp,0x18
  41f590:	mov    rax,QWORD PTR fs:0x28
  41f599:	mov    QWORD PTR [rsp+0x8],rax
  41f59e:	xor    eax,eax
  41f5a0:	mov    eax,DWORD PTR [rdi]
  41f5a2:	mov    edi,DWORD PTR [rdi+0x4]
  41f5a5:	mov    ecx,eax
  41f5a7:	lea    edx,[rdi*8+0x0]
  41f5ae:	shr    ecx,0x1d
  41f5b1:	or     edx,ecx
  41f5b3:	movbe  DWORD PTR [rsp],edx
  41f5b8:	lea    edx,[rax*8+0x0]
  41f5bf:	and    eax,0x3f
  41f5c2:	movbe  DWORD PTR [rsp+0x4],edx
  41f5c8:	cmp    eax,0x37
  41f5cb:	ja     41f6e8 <xmlStrEqual@plt+0x1b7a8>
  41f5d1:	mov    edx,0x38
  41f5d6:	sub    edx,eax
  41f5d8:	lea    rsi,[rip+0x2e1c1]        # 44d7a0 <xmlStrEqual@plt+0x49860>
  41f5df:	mov    rdi,rbx
  41f5e2:	call   41f3a0 <xmlStrEqual@plt+0x1b460>
  41f5e7:	mov    rsi,rsp
  41f5ea:	mov    edx,0x8
  41f5ef:	mov    rdi,rbx
  41f5f2:	call   41f3a0 <xmlStrEqual@plt+0x1b460>
  41f5f7:	movzx  eax,BYTE PTR [rbx+0xb]
  41f5fb:	mov    BYTE PTR [rbp+0x0],al
  41f5fe:	movzx  eax,WORD PTR [rbx+0xa]
  41f602:	mov    BYTE PTR [rbp+0x1],al
  41f605:	mov    eax,DWORD PTR [rbx+0x8]
  41f608:	mov    BYTE PTR [rbp+0x2],ah
  41f60b:	mov    eax,DWORD PTR [rbx+0x8]
  41f60e:	mov    BYTE PTR [rbp+0x3],al
  41f611:	movzx  eax,BYTE PTR [rbx+0xf]
  41f615:	mov    BYTE PTR [rbp+0x4],al
  41f618:	movzx  eax,WORD PTR [rbx+0xe]
  41f61c:	mov    BYTE PTR [rbp+0x5],al
  41f61f:	mov    eax,DWORD PTR [rbx+0xc]
  41f622:	mov    BYTE PTR [rbp+0x6],ah
  41f625:	mov    eax,DWORD PTR [rbx+0xc]
  41f628:	mov    BYTE PTR [rbp+0x7],al
  41f62b:	movzx  eax,BYTE PTR [rbx+0x13]
  41f62f:	mov    BYTE PTR [rbp+0x8],al
  41f632:	movzx  eax,WORD PTR [rbx+0x12]
  41f636:	mov    BYTE PTR [rbp+0x9],al
  41f639:	mov    eax,DWORD PTR [rbx+0x10]
  41f63c:	mov    BYTE PTR [rbp+0xa],ah
  41f63f:	mov    eax,DWORD PTR [rbx+0x10]
  41f642:	mov    BYTE PTR [rbp+0xb],al
  41f645:	movzx  eax,BYTE PTR [rbx+0x17]
  41f649:	mov    BYTE PTR [rbp+0xc],al
  41f64c:	movzx  eax,WORD PTR [rbx+0x16]
  41f650:	mov    BYTE PTR [rbp+0xd],al
  41f653:	mov    eax,DWORD PTR [rbx+0x14]
  41f656:	mov    BYTE PTR [rbp+0xe],ah
  41f659:	mov    eax,DWORD PTR [rbx+0x14]
  41f65c:	mov    BYTE PTR [rbp+0xf],al
  41f65f:	movzx  eax,BYTE PTR [rbx+0x1b]
  41f663:	mov    BYTE PTR [rbp+0x10],al
  41f666:	movzx  eax,WORD PTR [rbx+0x1a]
  41f66a:	mov    BYTE PTR [rbp+0x11],al
  41f66d:	mov    eax,DWORD PTR [rbx+0x18]
  41f670:	mov    BYTE PTR [rbp+0x12],ah
  41f673:	mov    eax,DWORD PTR [rbx+0x18]
  41f676:	mov    BYTE PTR [rbp+0x13],al
  41f679:	movzx  eax,BYTE PTR [rbx+0x1f]
  41f67d:	mov    BYTE PTR [rbp+0x14],al
  41f680:	movzx  eax,WORD PTR [rbx+0x1e]
  41f684:	mov    BYTE PTR [rbp+0x15],al
  41f687:	mov    eax,DWORD PTR [rbx+0x1c]
  41f68a:	mov    BYTE PTR [rbp+0x16],ah
  41f68d:	mov    eax,DWORD PTR [rbx+0x1c]
  41f690:	mov    BYTE PTR [rbp+0x17],al
  41f693:	movzx  eax,BYTE PTR [rbx+0x23]
  41f697:	mov    BYTE PTR [rbp+0x18],al
  41f69a:	movzx  eax,WORD PTR [rbx+0x22]
  41f69e:	mov    BYTE PTR [rbp+0x19],al
  41f6a1:	mov    eax,DWORD PTR [rbx+0x20]
  41f6a4:	mov    BYTE PTR [rbp+0x1a],ah
  41f6a7:	mov    eax,DWORD PTR [rbx+0x20]
  41f6aa:	mov    BYTE PTR [rbp+0x1b],al
  41f6ad:	mov    eax,DWORD PTR [rbx+0x68]
  41f6b0:	test   eax,eax
  41f6b2:	jne    41f6ce <xmlStrEqual@plt+0x1b78e>
  41f6b4:	movzx  eax,BYTE PTR [rbx+0x27]
  41f6b8:	mov    BYTE PTR [rbp+0x1c],al
  41f6bb:	movzx  eax,WORD PTR [rbx+0x26]
  41f6bf:	mov    BYTE PTR [rbp+0x1d],al
  41f6c2:	mov    eax,DWORD PTR [rbx+0x24]
  41f6c5:	mov    BYTE PTR [rbp+0x1e],ah
  41f6c8:	mov    eax,DWORD PTR [rbx+0x24]
  41f6cb:	mov    BYTE PTR [rbp+0x1f],al
  41f6ce:	mov    rax,QWORD PTR [rsp+0x8]
  41f6d3:	xor    rax,QWORD PTR fs:0x28
  41f6dc:	jne    41f6f4 <xmlStrEqual@plt+0x1b7b4>
  41f6de:	add    rsp,0x18
  41f6e2:	pop    rbx
  41f6e3:	pop    rbp
  41f6e4:	ret    
  41f6e5:	nop    DWORD PTR [rax]
  41f6e8:	mov    edx,0x78
  41f6ed:	sub    edx,eax
  41f6ef:	jmp    41f5d8 <xmlStrEqual@plt+0x1b698>
  41f6f4:	call   403c00 <__stack_chk_fail@plt>
  41f6f9:	nop    DWORD PTR [rax+0x0]
  41f700:	endbr64 
  41f704:	push   r14
  41f706:	mov    r14d,ecx
  41f709:	push   r13
  41f70b:	mov    r13,rsi
  41f70e:	push   r12
  41f710:	mov    r12,rdi
  41f713:	push   rbp
  41f714:	mov    rbp,rdx
  41f717:	push   rbx
  41f718:	add    rsp,0xffffffffffffff80
  41f71c:	mov    rbx,rsp
  41f71f:	mov    rdi,rbx
  41f722:	mov    rax,QWORD PTR fs:0x28
  41f72b:	mov    QWORD PTR [rsp+0x78],rax
  41f730:	xor    eax,eax
  41f732:	call   41e790 <xmlStrEqual@plt+0x1a850>
  41f737:	mov    esi,r14d
  41f73a:	mov    rdi,rbx
  41f73d:	call   41e830 <xmlStrEqual@plt+0x1a8f0>
  41f742:	mov    rdx,r13
  41f745:	mov    rsi,r12
  41f748:	mov    rdi,rbx
  41f74b:	call   41f3a0 <xmlStrEqual@plt+0x1b460>
  41f750:	mov    rsi,rbp
  41f753:	mov    rdi,rbx
  41f756:	call   41f580 <xmlStrEqual@plt+0x1b640>
  41f75b:	mov    rdi,rbx
  41f75e:	call   41e7c0 <xmlStrEqual@plt+0x1a880>
  41f763:	mov    rax,QWORD PTR [rsp+0x78]
  41f768:	xor    rax,QWORD PTR fs:0x28
  41f771:	jne    41f780 <xmlStrEqual@plt+0x1b840>
  41f773:	sub    rsp,0xffffffffffffff80
  41f777:	pop    rbx
  41f778:	pop    rbp
  41f779:	pop    r12
  41f77b:	pop    r13
  41f77d:	pop    r14
  41f77f:	ret    
  41f780:	call   403c00 <__stack_chk_fail@plt>
  41f785:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41f78f:	nop
  41f790:	endbr64 
  41f794:	jmp    41d180 <xmlStrEqual@plt+0x19240>
  41f799:	nop    DWORD PTR [rax+0x0]
  41f7a0:	endbr64 
  41f7a4:	jmp    41d100 <xmlStrEqual@plt+0x191c0>
  41f7a9:	nop    DWORD PTR [rax+0x0]
  41f7b0:	endbr64 
  41f7b4:	push   rbx
  41f7b5:	mov    rbx,rdi
  41f7b8:	call   41d0e0 <xmlStrEqual@plt+0x191a0>
  41f7bd:	mov    rdi,rbx
  41f7c0:	pop    rbx
  41f7c1:	jmp    4037b0 <free@plt>
  41f7c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41f7d0:	endbr64 
  41f7d4:	sub    rsp,0x18
  41f7d8:	mov    esi,0x5c
  41f7dd:	mov    edi,0x1
  41f7e2:	call   403a80 <calloc@plt>
  41f7e7:	test   rax,rax
  41f7ea:	je     41f7fe <xmlStrEqual@plt+0x1b8be>
  41f7ec:	mov    rdi,rax
  41f7ef:	mov    QWORD PTR [rsp+0x8],rax
  41f7f4:	call   41d0b0 <xmlStrEqual@plt+0x19170>
  41f7f9:	mov    rax,QWORD PTR [rsp+0x8]
  41f7fe:	add    rsp,0x18
  41f802:	ret    
  41f803:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  41f80e:	xchg   ax,ax
  41f810:	endbr64 
  41f814:	jmp    41e5e0 <xmlStrEqual@plt+0x1a6a0>
  41f819:	nop    DWORD PTR [rax+0x0]
  41f820:	endbr64 
  41f824:	jmp    41e400 <xmlStrEqual@plt+0x1a4c0>
  41f829:	nop    DWORD PTR [rax+0x0]
  41f830:	endbr64 
  41f834:	jmp    41d150 <xmlStrEqual@plt+0x19210>
  41f839:	nop    DWORD PTR [rax+0x0]
  41f840:	endbr64 
  41f844:	jmp    41e8c0 <xmlStrEqual@plt+0x1a980>
  41f849:	nop    DWORD PTR [rax+0x0]
  41f850:	endbr64 
  41f854:	jmp    41e7e0 <xmlStrEqual@plt+0x1a8a0>
  41f859:	nop    DWORD PTR [rax+0x0]
  41f860:	endbr64 
  41f864:	push   rbx
  41f865:	mov    rbx,rdi
  41f868:	call   41e7c0 <xmlStrEqual@plt+0x1a880>
  41f86d:	mov    rdi,rbx
  41f870:	pop    rbx
  41f871:	jmp    4037b0 <free@plt>
  41f876:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41f880:	endbr64 
  41f884:	sub    rsp,0x18
  41f888:	mov    esi,0x6c
  41f88d:	mov    edi,0x1
  41f892:	call   403a80 <calloc@plt>
  41f897:	test   rax,rax
  41f89a:	je     41f8ae <xmlStrEqual@plt+0x1b96e>
  41f89c:	mov    rdi,rax
  41f89f:	mov    QWORD PTR [rsp+0x8],rax
  41f8a4:	call   41e790 <xmlStrEqual@plt+0x1a850>
  41f8a9:	mov    rax,QWORD PTR [rsp+0x8]
  41f8ae:	add    rsp,0x18
  41f8b2:	ret    
  41f8b3:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  41f8be:	xchg   ax,ax
  41f8c0:	endbr64 
  41f8c4:	mov    ecx,0x1
  41f8c9:	jmp    41f700 <xmlStrEqual@plt+0x1b7c0>
  41f8ce:	xchg   ax,ax
  41f8d0:	endbr64 
  41f8d4:	xor    ecx,ecx
  41f8d6:	jmp    41f700 <xmlStrEqual@plt+0x1b7c0>
  41f8db:	nop    DWORD PTR [rax+rax*1+0x0]
  41f8e0:	endbr64 
  41f8e4:	jmp    41f580 <xmlStrEqual@plt+0x1b640>
  41f8e9:	nop    DWORD PTR [rax+0x0]
  41f8f0:	endbr64 
  41f8f4:	jmp    41f3a0 <xmlStrEqual@plt+0x1b460>
  41f8f9:	nop    DWORD PTR [rax+0x0]
  41f900:	endbr64 
  41f904:	mov    esi,0x1
  41f909:	jmp    41e830 <xmlStrEqual@plt+0x1a8f0>
  41f90e:	xchg   ax,ax
  41f910:	endbr64 
  41f914:	xor    esi,esi
  41f916:	jmp    41e830 <xmlStrEqual@plt+0x1a8f0>
  41f91b:	nop    DWORD PTR [rax+rax*1+0x0]
  41f920:	endbr64 
  41f924:	lea    rax,[rdi+0x8]
  41f928:	test   rdi,rdi
  41f92b:	mov    edx,0x0
  41f930:	cmove  rax,rdx
  41f934:	ret    
  41f935:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  41f940:	endbr64 
  41f944:	push   r13
  41f946:	mov    r13,rdi
  41f949:	push   r12
  41f94b:	mov    r12,rsi
  41f94e:	push   rbp
  41f94f:	mov    ebp,edx
  41f951:	push   rbx
  41f952:	mov    ebx,edx
  41f954:	shr    ebx,0x3
  41f957:	mov    rdx,rbx
  41f95a:	sub    rsp,0x8
  41f95e:	call   403990 <memcmp@plt>
  41f963:	xor    edx,edx
  41f965:	test   eax,eax
  41f967:	jne    41f99b <xmlStrEqual@plt+0x1ba5b>
  41f969:	mov    edx,0x1
  41f96e:	and    ebp,0x7
  41f971:	je     41f99b <xmlStrEqual@plt+0x1ba5b>
  41f973:	movzx  eax,BYTE PTR [r13+rbx*1+0x0]
  41f979:	mov    edx,0x8
  41f97e:	xor    al,BYTE PTR [r12+rbx*1]
  41f982:	mov    ecx,edx
  41f984:	sub    ecx,ebp
  41f986:	movzx  eax,al
  41f989:	mov    edx,0xffffffff
  41f98e:	shlx   edx,edx,ecx
  41f993:	test   eax,edx
  41f995:	sete   dl
  41f998:	movzx  edx,dl
  41f99b:	add    rsp,0x8
  41f99f:	pop    rbx
  41f9a0:	pop    rbp
  41f9a1:	pop    r12
  41f9a3:	mov    eax,edx
  41f9a5:	pop    r13
  41f9a7:	ret    
  41f9a8:	nop    DWORD PTR [rax+rax*1+0x0]
  41f9b0:	endbr64 
  41f9b4:	sub    rsp,0x28
  41f9b8:	mov    rax,QWORD PTR fs:0x28
  41f9c1:	mov    QWORD PTR [rsp+0x18],rax
  41f9c6:	xor    eax,eax
  41f9c8:	cmp    edi,0x2
  41f9cb:	je     41fa00 <xmlStrEqual@plt+0x1bac0>
  41f9cd:	cmp    edi,0xa
  41f9d0:	jne    41faa0 <xmlStrEqual@plt+0x1bb60>
  41f9d6:	mov    rax,QWORD PTR [rsp+0x18]
  41f9db:	xor    rax,QWORD PTR fs:0x28
  41f9e4:	jne    41fac2 <xmlStrEqual@plt+0x1bb82>
  41f9ea:	mov    edi,0xa
  41f9ef:	add    rsp,0x28
  41f9f3:	jmp    403f20 <inet_pton@plt>
  41f9f8:	nop    DWORD PTR [rax+rax*1+0x0]
  41fa00:	mov    QWORD PTR [rsp+0x8],rdx
  41fa05:	mov    QWORD PTR [rsp],rsi
  41fa09:	mov    DWORD PTR [rsp+0x14],0x0
  41fa11:	call   403bc0 <__ctype_b_loc@plt>
  41fa16:	mov    r8,QWORD PTR [rax]
  41fa19:	mov    rdx,QWORD PTR [rsp+0x8]
  41fa1e:	mov    rsi,QWORD PTR [rsp]
  41fa22:	xor    r9d,r9d
  41fa25:	movsx  rcx,BYTE PTR [rsi]
  41fa29:	movsxd r10,r9d
  41fa2c:	lea    rdi,[rsi+0x1]
  41fa30:	test   BYTE PTR [r8+rcx*2+0x1],0x8
  41fa36:	je     41faa0 <xmlStrEqual@plt+0x1bb60>
  41fa38:	sub    ecx,0x30
  41fa3b:	nop    DWORD PTR [rax+rax*1+0x0]
  41fa40:	inc    rdi
  41fa43:	movsx  rsi,BYTE PTR [rdi-0x1]
  41fa48:	test   esi,esi
  41fa4a:	je     41fab0 <xmlStrEqual@plt+0x1bb70>
  41fa4c:	test   BYTE PTR [r8+rsi*2+0x1],0x8
  41fa52:	je     41fa80 <xmlStrEqual@plt+0x1bb40>
  41fa54:	lea    eax,[rcx+rcx*4]
  41fa57:	lea    ecx,[rsi+rax*2-0x30]
  41fa5b:	cmp    ecx,0xff
  41fa61:	jle    41fa40 <xmlStrEqual@plt+0x1bb00>
  41fa63:	xor    eax,eax
  41fa65:	mov    rdx,QWORD PTR [rsp+0x18]
  41fa6a:	xor    rdx,QWORD PTR fs:0x28
  41fa73:	jne    41fac2 <xmlStrEqual@plt+0x1bb82>
  41fa75:	add    rsp,0x28
  41fa79:	ret    
  41fa7a:	nop    WORD PTR [rax+rax*1+0x0]
  41fa80:	cmp    esi,0x2e
  41fa83:	mov    BYTE PTR [rsp+r9*1+0x14],cl
  41fa88:	setne  cl
  41fa8b:	cmp    r9d,0x3
  41fa8f:	sete   al
  41fa92:	inc    r9
  41fa95:	or     cl,al
  41fa97:	jne    41fa63 <xmlStrEqual@plt+0x1bb23>
  41fa99:	mov    rsi,rdi
  41fa9c:	jmp    41fa25 <xmlStrEqual@plt+0x1bae5>
  41fa9e:	xchg   ax,ax
  41faa0:	mov    eax,0xffffffff
  41faa5:	jmp    41fa65 <xmlStrEqual@plt+0x1bb25>
  41faa7:	nop    WORD PTR [rax+rax*1+0x0]
  41fab0:	mov    BYTE PTR [rsp+r10*1+0x14],cl
  41fab5:	mov    eax,DWORD PTR [rsp+0x14]
  41fab9:	mov    DWORD PTR [rdx],eax
  41fabb:	mov    eax,0x1
  41fac0:	jmp    41fa65 <xmlStrEqual@plt+0x1bb25>
  41fac2:	call   403c00 <__stack_chk_fail@plt>
  41fac7:	nop    WORD PTR [rax+rax*1+0x0]
  41fad0:	endbr64 
  41fad4:	test   rdi,rdi
  41fad7:	je     41fc50 <xmlStrEqual@plt+0x1bd10>
  41fadd:	push   r12
  41fadf:	push   rbp
  41fae0:	mov    rbp,rdi
  41fae3:	push   rbx
  41fae4:	mov    ecx,DWORD PTR [rdi+0x4]
  41fae7:	test   ecx,ecx
  41fae9:	js     41fc58 <xmlStrEqual@plt+0x1bd18>
  41faef:	mov    rbx,rsi
  41faf2:	mov    r12d,edx
  41faf5:	test   rsi,rsi
  41faf8:	je     41fbe8 <xmlStrEqual@plt+0x1bca8>
  41fafe:	movzx  eax,WORD PTR [rbp+0x0]
  41fb02:	cmp    ax,0x2
  41fb06:	je     41fb90 <xmlStrEqual@plt+0x1bc50>
  41fb0c:	cmp    ax,0xa
  41fb10:	jne    41fb80 <xmlStrEqual@plt+0x1bc40>
  41fb12:	lea    rsi,[rbp+0x8]
  41fb16:	mov    ecx,0x30
  41fb1b:	mov    rdx,rbx
  41fb1e:	mov    edi,0xa
  41fb23:	call   403b90 <inet_ntop@plt>
  41fb28:	test   rax,rax
  41fb2b:	je     41fc40 <xmlStrEqual@plt+0x1bd00>
  41fb31:	test   r12d,r12d
  41fb34:	je     41fc40 <xmlStrEqual@plt+0x1bd00>
  41fb3a:	movzx  ebp,WORD PTR [rbp+0x2]
  41fb3e:	cmp    bp,0x80
  41fb43:	ja     41fc77 <xmlStrEqual@plt+0x1bd37>
  41fb49:	mov    rdi,rbx
  41fb4c:	call   403970 <strlen@plt>
  41fb51:	lea    rdi,[rbx+rax*1]
  41fb55:	movzx  r8d,bp
  41fb59:	lea    rcx,[rip+0x2fc51]        # 44f7b1 <xmlStrEqual@plt+0x4b871>
  41fb60:	mov    rdx,0xffffffffffffffff
  41fb67:	mov    esi,0x1
  41fb6c:	xor    eax,eax
  41fb6e:	call   403a30 <__sprintf_chk@plt>
  41fb73:	mov    rax,rbx
  41fb76:	pop    rbx
  41fb77:	pop    rbp
  41fb78:	pop    r12
  41fb7a:	ret    
  41fb7b:	nop    DWORD PTR [rax+rax*1+0x0]
  41fb80:	pop    rbx
  41fb81:	pop    rbp
  41fb82:	xor    eax,eax
  41fb84:	pop    r12
  41fb86:	ret    
  41fb87:	nop    WORD PTR [rax+rax*1+0x0]
  41fb90:	movzx  eax,WORD PTR [rbp+0x2]
  41fb94:	cmp    ax,0x20
  41fb98:	ja     41fc96 <xmlStrEqual@plt+0x1bd56>
  41fb9e:	movzx  ecx,BYTE PTR [rbp+0xb]
  41fba2:	movzx  edx,BYTE PTR [rbp+0xa]
  41fba6:	movzx  r9d,BYTE PTR [rbp+0x9]
  41fbab:	movzx  r8d,BYTE PTR [rbp+0x8]
  41fbb0:	test   r12d,r12d
  41fbb3:	je     41fc10 <xmlStrEqual@plt+0x1bcd0>
  41fbb5:	sub    rsp,0x8
  41fbb9:	push   rax
  41fbba:	mov    rdi,rbx
  41fbbd:	mov    esi,0x1
  41fbc2:	push   rcx
  41fbc3:	xor    eax,eax
  41fbc5:	lea    rcx,[rip+0x2dd4c]        # 44d918 <xmlStrEqual@plt+0x499d8>
  41fbcc:	push   rdx
  41fbcd:	mov    rdx,0xffffffffffffffff
  41fbd4:	call   403a30 <__sprintf_chk@plt>
  41fbd9:	add    rsp,0x20
  41fbdd:	mov    rax,rbx
  41fbe0:	pop    rbx
  41fbe1:	pop    rbp
  41fbe2:	pop    r12
  41fbe4:	ret    
  41fbe5:	nop    DWORD PTR [rax]
  41fbe8:	mov    ebx,DWORD PTR [rip+0x4f562]        # 46f150 <xmlStrEqual@plt+0x6b210>
  41fbee:	lea    eax,[rbx+0x1]
  41fbf1:	and    ebx,0xf
  41fbf4:	imul   rbx,rbx,0x35
  41fbf8:	mov    DWORD PTR [rip+0x4f552],eax        # 46f150 <xmlStrEqual@plt+0x6b210>
  41fbfe:	lea    rax,[rip+0x4f1fb]        # 46ee00 <xmlStrEqual@plt+0x6aec0>
  41fc05:	add    rbx,rax
  41fc08:	jmp    41fafe <xmlStrEqual@plt+0x1bbbe>
  41fc0d:	nop    DWORD PTR [rax]
  41fc10:	push   rcx
  41fc11:	mov    rdi,rbx
  41fc14:	lea    rcx,[rip+0x2dd0c]        # 44d927 <xmlStrEqual@plt+0x499e7>
  41fc1b:	push   rdx
  41fc1c:	mov    esi,0x1
  41fc21:	mov    rdx,0xffffffffffffffff
  41fc28:	xor    eax,eax
  41fc2a:	call   403a30 <__sprintf_chk@plt>
  41fc2f:	pop    rax
  41fc30:	pop    rdx
  41fc31:	mov    rax,rbx
  41fc34:	pop    rbx
  41fc35:	pop    rbp
  41fc36:	pop    r12
  41fc38:	ret    
  41fc39:	nop    DWORD PTR [rax+0x0]
  41fc40:	mov    rax,rbx
  41fc43:	pop    rbx
  41fc44:	pop    rbp
  41fc45:	pop    r12
  41fc47:	ret    
  41fc48:	nop    DWORD PTR [rax+rax*1+0x0]
  41fc50:	lea    rax,[rip+0x2dc89]        # 44d8e0 <xmlStrEqual@plt+0x499a0>
  41fc57:	ret    
  41fc58:	lea    rcx,[rip+0x2e029]        # 44dc88 <xmlStrEqual@plt+0x49d48>
  41fc5f:	mov    edx,0x71
  41fc64:	lea    rsi,[rip+0x2dc7c]        # 44d8e7 <xmlStrEqual@plt+0x499a7>
  41fc6b:	lea    rdi,[rip+0x2dc8f]        # 44d901 <xmlStrEqual@plt+0x499c1>
  41fc72:	call   403a60 <__assert_fail@plt>
  41fc77:	lea    rcx,[rip+0x2e00a]        # 44dc88 <xmlStrEqual@plt+0x49d48>
  41fc7e:	mov    edx,0x9b
  41fc83:	lea    rsi,[rip+0x2dc5d]        # 44d8e7 <xmlStrEqual@plt+0x499a7>
  41fc8a:	lea    rdi,[rip+0x2de57]        # 44dae8 <xmlStrEqual@plt+0x49ba8>
  41fc91:	call   403a60 <__assert_fail@plt>
  41fc96:	lea    rcx,[rip+0x2dfeb]        # 44dc88 <xmlStrEqual@plt+0x49d48>
  41fc9d:	mov    edx,0x8b
  41fca2:	lea    rsi,[rip+0x2dc3e]        # 44d8e7 <xmlStrEqual@plt+0x499a7>
  41fca9:	lea    rdi,[rip+0x2de08]        # 44dab8 <xmlStrEqual@plt+0x49b78>
  41fcb0:	call   403a60 <__assert_fail@plt>
  41fcb5:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  41fcc0:	endbr64 
  41fcc4:	mov    edx,0x1
  41fcc9:	jmp    41fad0 <xmlStrEqual@plt+0x1bb90>
  41fcce:	xchg   ax,ax
  41fcd0:	endbr64 
  41fcd4:	xor    esi,esi
  41fcd6:	jmp    41fcc0 <xmlStrEqual@plt+0x1bd80>
  41fcdb:	nop    DWORD PTR [rax+rax*1+0x0]
  41fce0:	endbr64 
  41fce4:	push   rbx
  41fce5:	mov    ebx,edi
  41fce7:	xor    edi,edi
  41fce9:	sub    rsp,0x10
  41fced:	test   rcx,rcx
  41fcf0:	je     41fd60 <xmlStrEqual@plt+0x1be20>
  41fcf2:	cmp    ebx,0x2
  41fcf5:	je     41fd50 <xmlStrEqual@plt+0x1be10>
  41fcf7:	cmp    ebx,0xa
  41fcfa:	jne    41fd30 <xmlStrEqual@plt+0x1bdf0>
  41fcfc:	vmovdqu xmm1,XMMWORD PTR [rsi]
  41fd00:	mov    eax,0x80
  41fd05:	vmovups XMMWORD PTR [rcx+0x8],xmm1
  41fd0a:	test   edx,edx
  41fd0c:	cmovs  edx,eax
  41fd0f:	mov    WORD PTR [rcx],bx
  41fd12:	mov    WORD PTR [rcx+0x2],dx
  41fd16:	test   edi,edi
  41fd18:	jne    41fd40 <xmlStrEqual@plt+0x1be00>
  41fd1a:	mov    DWORD PTR [rcx+0x4],0x0
  41fd21:	mov    rax,rcx
  41fd24:	add    rsp,0x10
  41fd28:	pop    rbx
  41fd29:	ret    
  41fd2a:	nop    WORD PTR [rax+rax*1+0x0]
  41fd30:	mov    rdi,rcx
  41fd33:	call   4037b0 <free@plt>
  41fd38:	add    rsp,0x10
  41fd3c:	xor    eax,eax
  41fd3e:	pop    rbx
  41fd3f:	ret    
  41fd40:	mov    DWORD PTR [rcx+0x4],0x1
  41fd47:	add    rsp,0x10
  41fd4b:	mov    rax,rcx
  41fd4e:	pop    rbx
  41fd4f:	ret    
  41fd50:	mov    eax,DWORD PTR [rsi]
  41fd52:	mov    DWORD PTR [rcx+0x8],eax
  41fd55:	mov    eax,0x20
  41fd5a:	jmp    41fd0a <xmlStrEqual@plt+0x1bdca>
  41fd5c:	nop    DWORD PTR [rax+0x0]
  41fd60:	mov    edi,0x18
  41fd65:	mov    DWORD PTR [rsp+0xc],edx
  41fd69:	mov    QWORD PTR [rsp],rsi
  41fd6d:	call   435000 <xmlStrEqual@plt+0x310c0>
  41fd72:	test   rax,rax
  41fd75:	mov    rcx,rax
  41fd78:	mov    rsi,QWORD PTR [rsp]
  41fd7c:	mov    edx,DWORD PTR [rsp+0xc]
  41fd80:	je     41fda0 <xmlStrEqual@plt+0x1be60>
  41fd82:	vpxor  xmm0,xmm0,xmm0
  41fd86:	vmovups XMMWORD PTR [rax],xmm0
  41fd8a:	mov    QWORD PTR [rax+0x10],0x0
  41fd92:	mov    edi,0x1
  41fd97:	jmp    41fcf2 <xmlStrEqual@plt+0x1bdb2>
  41fd9c:	nop    DWORD PTR [rax+0x0]
  41fda0:	xor    eax,eax
  41fda2:	lea    rdx,[rip+0x2dd6f]        # 44db18 <xmlStrEqual@plt+0x49bd8>
  41fda9:	mov    esi,0x1
  41fdae:	mov    edi,0x18
  41fdb3:	call   403bf0 <__syslog_chk@plt>
  41fdb8:	xor    eax,eax
  41fdba:	jmp    41fd24 <xmlStrEqual@plt+0x1bde4>
  41fdbf:	nop
  41fdc0:	endbr64 
  41fdc4:	xor    ecx,ecx
  41fdc6:	jmp    41fce0 <xmlStrEqual@plt+0x1bda0>
  41fdcb:	nop    DWORD PTR [rax+rax*1+0x0]
  41fdd0:	endbr64 
  41fdd4:	push   r14
  41fdd6:	push   r13
  41fdd8:	push   r12
  41fdda:	push   rbp
  41fddb:	push   rbx
  41fddc:	sub    rsp,0x430
  41fde3:	mov    rax,QWORD PTR fs:0x28
  41fdec:	mov    QWORD PTR [rsp+0x428],rax
  41fdf4:	xor    eax,eax
  41fdf6:	test   rsi,rsi
  41fdf9:	je     41feda <xmlStrEqual@plt+0x1bf9a>
  41fdff:	mov    ebp,edi
  41fe01:	mov    rbx,rsi
  41fe04:	cmp    edi,0x2
  41fe07:	je     41fee8 <xmlStrEqual@plt+0x1bfa8>
  41fe0d:	cmp    edi,0xa
  41fe10:	je     41fe60 <xmlStrEqual@plt+0x1bf20>
  41fe12:	mov    rax,QWORD PTR [rip+0x491af]        # 468fc8 <xmlStrEqual@plt+0x65088>
  41fe19:	mov    ecx,edi
  41fe1b:	mov    rdi,QWORD PTR [rax]
  41fe1e:	lea    rdx,[rip+0x2db0e]        # 44d933 <xmlStrEqual@plt+0x499f3>
  41fe25:	mov    esi,0x1
  41fe2a:	xor    eax,eax
  41fe2c:	call   403e20 <__fprintf_chk@plt>
  41fe31:	xor    eax,eax
  41fe33:	mov    rcx,QWORD PTR [rsp+0x428]
  41fe3b:	xor    rcx,QWORD PTR fs:0x28
  41fe44:	jne    41ff90 <xmlStrEqual@plt+0x1c050>
  41fe4a:	add    rsp,0x430
  41fe51:	pop    rbx
  41fe52:	pop    rbp
  41fe53:	pop    r12
  41fe55:	pop    r13
  41fe57:	pop    r14
  41fe59:	ret    
  41fe5a:	nop    WORD PTR [rax+rax*1+0x0]
  41fe60:	mov    esi,0x2f
  41fe65:	mov    rdi,rbx
  41fe68:	call   403930 <strchr@plt>
  41fe6d:	mov    r12,rax
  41fe70:	test   rax,rax
  41fe73:	je     41ff40 <xmlStrEqual@plt+0x1c000>
  41fe79:	mov    r14d,0x80
  41fe7f:	lea    rdi,[r12+0x1]
  41fe84:	mov    edx,0xa
  41fe89:	xor    esi,esi
  41fe8b:	call   403d20 <strtol@plt>
  41fe90:	sub    r12,rbx
  41fe93:	mov    r13,rax
  41fe96:	cmp    r12,0x3ff
  41fe9d:	jg     41ff95 <xmlStrEqual@plt+0x1c055>
  41fea3:	lea    r8,[rsp+0x20]
  41fea8:	mov    ecx,0x400
  41fead:	mov    rdx,r12
  41feb0:	mov    rsi,rbx
  41feb3:	mov    rdi,r8
  41feb6:	call   403e70 <__memcpy_chk@plt>
  41febb:	cmp    r13,r14
  41febe:	mov    BYTE PTR [rsp+r12*1+0x20],0x0
  41fec4:	cmova  r13,r14
  41fec8:	cmp    ebp,0x2
  41fecb:	je     41ff88 <xmlStrEqual@plt+0x1c048>
  41fed1:	cmp    ebp,0xa
  41fed4:	je     41ff80 <xmlStrEqual@plt+0x1c040>
  41feda:	xor    eax,eax
  41fedc:	jmp    41fe33 <xmlStrEqual@plt+0x1bef3>
  41fee1:	nop    DWORD PTR [rax+0x0]
  41fee8:	mov    esi,0x2f
  41feed:	mov    rdi,rbx
  41fef0:	call   403930 <strchr@plt>
  41fef5:	mov    r12,rax
  41fef8:	mov    r14d,0x20
  41fefe:	mov    r13d,0x20
  41ff04:	test   rax,rax
  41ff07:	jne    41fe7f <xmlStrEqual@plt+0x1bf3f>
  41ff0d:	lea    rbp,[rsp+0xc]
  41ff12:	mov    rdx,rbp
  41ff15:	mov    rsi,rbx
  41ff18:	mov    edi,0x2
  41ff1d:	call   41f9b0 <xmlStrEqual@plt+0x1ba70>
  41ff22:	test   eax,eax
  41ff24:	jle    41feda <xmlStrEqual@plt+0x1bf9a>
  41ff26:	mov    edx,r13d
  41ff29:	mov    rsi,rbp
  41ff2c:	mov    edi,0x2
  41ff31:	call   41fdc0 <xmlStrEqual@plt+0x1be80>
  41ff36:	jmp    41fe33 <xmlStrEqual@plt+0x1bef3>
  41ff3b:	nop    DWORD PTR [rax+rax*1+0x0]
  41ff40:	mov    r13d,0x80
  41ff46:	lea    rbp,[rsp+0x10]
  41ff4b:	mov    rdx,rbp
  41ff4e:	mov    rsi,rbx
  41ff51:	mov    edi,0xa
  41ff56:	call   403f20 <inet_pton@plt>
  41ff5b:	test   eax,eax
  41ff5d:	jle    41feda <xmlStrEqual@plt+0x1bf9a>
  41ff63:	mov    edx,r13d
  41ff66:	mov    rsi,rbp
  41ff69:	mov    edi,0xa
  41ff6e:	call   41fdc0 <xmlStrEqual@plt+0x1be80>
  41ff73:	jmp    41fe33 <xmlStrEqual@plt+0x1bef3>
  41ff78:	nop    DWORD PTR [rax+rax*1+0x0]
  41ff80:	mov    rbx,rax
  41ff83:	jmp    41ff46 <xmlStrEqual@plt+0x1c006>
  41ff85:	nop    DWORD PTR [rax]
  41ff88:	mov    rbx,rax
  41ff8b:	jmp    41ff0d <xmlStrEqual@plt+0x1bfcd>
  41ff90:	call   403c00 <__stack_chk_fail@plt>
  41ff95:	lea    rcx,[rip+0x2dcdc]        # 44dc78 <xmlStrEqual@plt+0x49d38>
  41ff9c:	mov    edx,0xfe
  41ffa1:	lea    rsi,[rip+0x2d93f]        # 44d8e7 <xmlStrEqual@plt+0x499a7>
  41ffa8:	lea    rdi,[rip+0x2d996]        # 44d945 <xmlStrEqual@plt+0x49a05>
  41ffaf:	call   403a60 <__assert_fail@plt>
  41ffb4:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  41ffbf:	nop
  41ffc0:	endbr64 
  41ffc4:	test   rdi,rdi
  41ffc7:	je     41fff8 <xmlStrEqual@plt+0x1c0b8>
  41ffc9:	mov    eax,DWORD PTR [rdi+0x4]
  41ffcc:	test   eax,eax
  41ffce:	je     41ffe0 <xmlStrEqual@plt+0x1c0a0>
  41ffd0:	inc    eax
  41ffd2:	mov    DWORD PTR [rdi+0x4],eax
  41ffd5:	mov    rax,rdi
  41ffd8:	ret    
  41ffd9:	nop    DWORD PTR [rax+0x0]
  41ffe0:	movzx  edx,WORD PTR [rdi+0x2]
  41ffe4:	lea    rsi,[rdi+0x8]
  41ffe8:	movzx  edi,WORD PTR [rdi]
  41ffeb:	xor    ecx,ecx
  41ffed:	jmp    41fce0 <xmlStrEqual@plt+0x1bda0>
  41fff2:	nop    WORD PTR [rax+rax*1+0x0]
  41fff8:	xor    eax,eax
  41fffa:	ret    
  41fffb:	nop    DWORD PTR [rax+rax*1+0x0]
  420000:	endbr64 
  420004:	test   rdi,rdi
  420007:	je     420017 <xmlStrEqual@plt+0x1c0d7>
  420009:	mov    eax,DWORD PTR [rdi+0x4]
  42000c:	test   eax,eax
  42000e:	jle    420025 <xmlStrEqual@plt+0x1c0e5>
  420010:	dec    eax
  420012:	mov    DWORD PTR [rdi+0x4],eax
  420015:	je     420020 <xmlStrEqual@plt+0x1c0e0>
  420017:	ret    
  420018:	nop    DWORD PTR [rax+rax*1+0x0]
  420020:	jmp    4037b0 <free@plt>
  420025:	push   rax
  420026:	lea    rcx,[rip+0x2dc3b]        # 44dc68 <xmlStrEqual@plt+0x49d28>
  42002d:	mov    edx,0x12d
  420032:	lea    rsi,[rip+0x2d8ae]        # 44d8e7 <xmlStrEqual@plt+0x499a7>
  420039:	lea    rdi,[rip+0x2d91b]        # 44d95b <xmlStrEqual@plt+0x49a1b>
  420040:	call   403a60 <__assert_fail@plt>
  420045:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  420050:	endbr64 
  420054:	push   rbx
  420055:	mov    esi,0x10
  42005a:	mov    ebx,edi
  42005c:	mov    edi,0x1
  420061:	call   434fa0 <xmlStrEqual@plt+0x31060>
  420066:	mov    DWORD PTR [rax+0x8],ebx
  420069:	mov    QWORD PTR [rax],0x0
  420070:	mov    DWORD PTR [rax+0xc],0x0
  420077:	cmp    ebx,0x80
  42007d:	ja     420087 <xmlStrEqual@plt+0x1c147>
  42007f:	inc    DWORD PTR [rip+0x4f0cf]        # 46f154 <xmlStrEqual@plt+0x6b214>
  420085:	pop    rbx
  420086:	ret    
  420087:	lea    rcx,[rip+0x2dbca]        # 44dc58 <xmlStrEqual@plt+0x49d18>
  42008e:	mov    edx,0x147
  420093:	lea    rsi,[rip+0x2d84d]        # 44d8e7 <xmlStrEqual@plt+0x499a7>
  42009a:	lea    rdi,[rip+0x2d8d0]        # 44d971 <xmlStrEqual@plt+0x49a31>
  4200a1:	call   403a60 <__assert_fail@plt>
  4200a6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4200b0:	endbr64 
  4200b4:	push   r15
  4200b6:	push   r14
  4200b8:	push   r13
  4200ba:	push   r12
  4200bc:	push   rbp
  4200bd:	push   rbx
  4200be:	sub    rsp,0x428
  4200c5:	mov    rax,QWORD PTR fs:0x28
  4200ce:	mov    QWORD PTR [rsp+0x418],rax
  4200d6:	xor    eax,eax
  4200d8:	test   rdi,rdi
  4200db:	je     4201cc <xmlStrEqual@plt+0x1c28c>
  4200e1:	mov    rbx,QWORD PTR [rdi]
  4200e4:	mov    r15,rdi
  4200e7:	test   rbx,rbx
  4200ea:	je     4201a0 <xmlStrEqual@plt+0x1c260>
  4200f0:	lea    r13,[rsp+0x10]
  4200f5:	mov    r14,rsi
  4200f8:	mov    QWORD PTR [rsp+0x8],r13
  4200fd:	jmp    42013f <xmlStrEqual@plt+0x1c1ff>
  4200ff:	nop
  420100:	call   420000 <xmlStrEqual@plt+0x1c0c0>
  420105:	mov    rdi,QWORD PTR [rbx+0x28]
  420109:	test   r14,r14
  42010c:	je     420118 <xmlStrEqual@plt+0x1c1d8>
  42010e:	test   rdi,rdi
  420111:	je     420118 <xmlStrEqual@plt+0x1c1d8>
  420113:	xor    eax,eax
  420115:	call   r14
  420118:	mov    rdi,rbx
  42011b:	call   4037b0 <free@plt>
  420120:	mov    eax,DWORD PTR [r15+0xc]
  420124:	dec    eax
  420126:	mov    DWORD PTR [r15+0xc],eax
  42012a:	test   rbp,rbp
  42012d:	je     420180 <xmlStrEqual@plt+0x1c240>
  42012f:	test   r12,r12
  420132:	je     42013c <xmlStrEqual@plt+0x1c1fc>
  420134:	mov    QWORD PTR [r13+0x0],r12
  420138:	add    r13,0x8
  42013c:	mov    rbx,rbp
  42013f:	mov    rdi,QWORD PTR [rbx+0x8]
  420143:	mov    rbp,QWORD PTR [rbx+0x10]
  420147:	mov    r12,QWORD PTR [rbx+0x18]
  42014b:	test   rdi,rdi
  42014e:	jne    420100 <xmlStrEqual@plt+0x1c1c0>
  420150:	cmp    QWORD PTR [rbx+0x28],0x0
  420155:	je     420118 <xmlStrEqual@plt+0x1c1d8>
  420157:	lea    rcx,[rip+0x2daea]        # 44dc48 <xmlStrEqual@plt+0x49d08>
  42015e:	mov    edx,0x164
  420163:	lea    rsi,[rip+0x2d77d]        # 44d8e7 <xmlStrEqual@plt+0x499a7>
  42016a:	lea    rdi,[rip+0x2d825]        # 44d996 <xmlStrEqual@plt+0x49a56>
  420171:	call   403a60 <__assert_fail@plt>
  420176:	nop    WORD PTR cs:[rax+rax*1+0x0]
  420180:	mov    rbp,r12
  420183:	test   r12,r12
  420186:	jne    42013c <xmlStrEqual@plt+0x1c1fc>
  420188:	cmp    r13,QWORD PTR [rsp+0x8]
  42018d:	je     4201a3 <xmlStrEqual@plt+0x1c263>
  42018f:	mov    rbx,QWORD PTR [r13-0x8]
  420193:	test   rbx,rbx
  420196:	je     4201a3 <xmlStrEqual@plt+0x1c263>
  420198:	sub    r13,0x8
  42019c:	jmp    42013f <xmlStrEqual@plt+0x1c1ff>
  42019e:	xchg   ax,ax
  4201a0:	mov    eax,DWORD PTR [rdi+0xc]
  4201a3:	test   eax,eax
  4201a5:	jne    4201f0 <xmlStrEqual@plt+0x1c2b0>
  4201a7:	mov    rax,QWORD PTR [rsp+0x418]
  4201af:	xor    rax,QWORD PTR fs:0x28
  4201b8:	jne    4201eb <xmlStrEqual@plt+0x1c2ab>
  4201ba:	add    rsp,0x428
  4201c1:	pop    rbx
  4201c2:	pop    rbp
  4201c3:	pop    r12
  4201c5:	pop    r13
  4201c7:	pop    r14
  4201c9:	pop    r15
  4201cb:	ret    
  4201cc:	lea    rcx,[rip+0x2da75]        # 44dc48 <xmlStrEqual@plt+0x49d08>
  4201d3:	mov    edx,0x154
  4201d8:	lea    rsi,[rip+0x2d708]        # 44d8e7 <xmlStrEqual@plt+0x499a7>
  4201df:	lea    rdi,[rip+0x2d7a7]        # 44d98d <xmlStrEqual@plt+0x49a4d>
  4201e6:	call   403a60 <__assert_fail@plt>
  4201eb:	call   403c00 <__stack_chk_fail@plt>
  4201f0:	lea    rcx,[rip+0x2da51]        # 44dc48 <xmlStrEqual@plt+0x49d08>
  4201f7:	mov    edx,0x177
  4201fc:	lea    rsi,[rip+0x2d6e4]        # 44d8e7 <xmlStrEqual@plt+0x499a7>
  420203:	lea    rdi,[rip+0x2d936]        # 44db40 <xmlStrEqual@plt+0x49c00>
  42020a:	call   403a60 <__assert_fail@plt>
  42020f:	nop
  420210:	endbr64 
  420214:	push   rbx
  420215:	mov    rbx,rdi
  420218:	call   4200b0 <xmlStrEqual@plt+0x1c170>
  42021d:	mov    rdi,rbx
  420220:	call   4037b0 <free@plt>
  420225:	dec    DWORD PTR [rip+0x4ef29]        # 46f154 <xmlStrEqual@plt+0x6b214>
  42022b:	pop    rbx
  42022c:	ret    
  42022d:	nop    DWORD PTR [rax]
  420230:	endbr64 
  420234:	push   r13
  420236:	push   r12
  420238:	push   rbp
  420239:	push   rbx
  42023a:	sub    rsp,0x418
  420241:	mov    rax,QWORD PTR fs:0x28
  42024a:	mov    QWORD PTR [rsp+0x408],rax
  420252:	xor    eax,eax
  420254:	test   rsi,rsi
  420257:	je     420309 <xmlStrEqual@plt+0x1c3c9>
  42025d:	mov    rbx,QWORD PTR [rdi]
  420260:	test   rbx,rbx
  420263:	je     4202cb <xmlStrEqual@plt+0x1c38b>
  420265:	mov    r13,rsp
  420268:	mov    r12,rsi
  42026b:	mov    rbp,r13
  42026e:	xchg   ax,ax
  420270:	mov    rdi,QWORD PTR [rbx+0x8]
  420274:	test   rdi,rdi
  420277:	je     420282 <xmlStrEqual@plt+0x1c342>
  420279:	mov    rsi,QWORD PTR [rbx+0x28]
  42027d:	xor    eax,eax
  42027f:	call   r12
  420282:	mov    rax,QWORD PTR [rbx+0x10]
  420286:	mov    rbx,QWORD PTR [rbx+0x18]
  42028a:	test   rax,rax
  42028d:	je     4202b8 <xmlStrEqual@plt+0x1c378>
  42028f:	test   rbx,rbx
  420292:	je     4202f0 <xmlStrEqual@plt+0x1c3b0>
  420294:	mov    QWORD PTR [rbp+0x0],rbx
  420298:	mov    rbx,rax
  42029b:	mov    rdi,QWORD PTR [rbx+0x8]
  42029f:	add    rbp,0x8
  4202a3:	test   rdi,rdi
  4202a6:	jne    420279 <xmlStrEqual@plt+0x1c339>
  4202a8:	mov    rax,QWORD PTR [rbx+0x10]
  4202ac:	mov    rbx,QWORD PTR [rbx+0x18]
  4202b0:	test   rax,rax
  4202b3:	jne    42028f <xmlStrEqual@plt+0x1c34f>
  4202b5:	nop    DWORD PTR [rax]
  4202b8:	test   rbx,rbx
  4202bb:	jne    420270 <xmlStrEqual@plt+0x1c330>
  4202bd:	cmp    rbp,r13
  4202c0:	je     4202cb <xmlStrEqual@plt+0x1c38b>
  4202c2:	mov    rbx,QWORD PTR [rbp-0x8]
  4202c6:	test   rbx,rbx
  4202c9:	jne    420300 <xmlStrEqual@plt+0x1c3c0>
  4202cb:	mov    rax,QWORD PTR [rsp+0x408]
  4202d3:	xor    rax,QWORD PTR fs:0x28
  4202dc:	jne    420328 <xmlStrEqual@plt+0x1c3e8>
  4202de:	add    rsp,0x418
  4202e5:	pop    rbx
  4202e6:	pop    rbp
  4202e7:	pop    r12
  4202e9:	pop    r13
  4202eb:	ret    
  4202ec:	nop    DWORD PTR [rax+0x0]
  4202f0:	mov    rbx,rax
  4202f3:	jmp    420270 <xmlStrEqual@plt+0x1c330>
  4202f8:	nop    DWORD PTR [rax+rax*1+0x0]
  420300:	sub    rbp,0x8
  420304:	jmp    420270 <xmlStrEqual@plt+0x1c330>
  420309:	lea    rcx,[rip+0x2d920]        # 44dc30 <xmlStrEqual@plt+0x49cf0>
  420310:	mov    edx,0x18d
  420315:	lea    rsi,[rip+0x2d5cb]        # 44d8e7 <xmlStrEqual@plt+0x499a7>
  42031c:	lea    rdi,[rip+0x2d685]        # 44d9a8 <xmlStrEqual@plt+0x49a68>
  420323:	call   403a60 <__assert_fail@plt>
  420328:	call   403c00 <__stack_chk_fail@plt>
  42032d:	nop    DWORD PTR [rax]
  420330:	endbr64 
  420334:	push   r13
  420336:	push   r12
  420338:	push   rbp
  420339:	push   rbx
  42033a:	sub    rsp,0x8
  42033e:	test   rsi,rsi
  420341:	je     420395 <xmlStrEqual@plt+0x1c455>
  420343:	mov    rbx,rdi
  420346:	mov    r13,rsi
  420349:	xor    r12d,r12d
  42034c:	nop    DWORD PTR [rax+0x0]
  420350:	mov    rdi,QWORD PTR [rbx+0x10]
  420354:	xor    ebp,ebp
  420356:	test   rdi,rdi
  420359:	je     420366 <xmlStrEqual@plt+0x1c426>
  42035b:	mov    rsi,r13
  42035e:	call   420330 <xmlStrEqual@plt+0x1c3f0>
  420363:	mov    rbp,rax
  420366:	mov    rdi,QWORD PTR [rbx+0x8]
  42036a:	test   rdi,rdi
  42036d:	je     42037b <xmlStrEqual@plt+0x1c43b>
  42036f:	mov    rsi,QWORD PTR [rbx+0x28]
  420373:	xor    eax,eax
  420375:	call   r13
  420378:	inc    rbp
  42037b:	mov    rbx,QWORD PTR [rbx+0x18]
  42037f:	add    r12,rbp
  420382:	test   rbx,rbx
  420385:	jne    420350 <xmlStrEqual@plt+0x1c410>
  420387:	add    rsp,0x8
  42038b:	pop    rbx
  42038c:	pop    rbp
  42038d:	mov    rax,r12
  420390:	pop    r12
  420392:	pop    r13
  420394:	ret    
  420395:	lea    rcx,[rip+0x2d874]        # 44dc10 <xmlStrEqual@plt+0x49cd0>
  42039c:	mov    edx,0x198
  4203a1:	lea    rsi,[rip+0x2d53f]        # 44d8e7 <xmlStrEqual@plt+0x499a7>
  4203a8:	lea    rdi,[rip+0x2d5f9]        # 44d9a8 <xmlStrEqual@plt+0x49a68>
  4203af:	call   403a60 <__assert_fail@plt>
  4203b4:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4203bf:	nop
  4203c0:	endbr64 
  4203c4:	push   r12
  4203c6:	push   rbp
  4203c7:	push   rbx
  4203c8:	test   rdi,rdi
  4203cb:	je     4204f6 <xmlStrEqual@plt+0x1c5b6>
  4203d1:	test   rsi,rsi
  4203d4:	je     4204d7 <xmlStrEqual@plt+0x1c597>
  4203da:	movzx  ebp,WORD PTR [rsi+0x2]
  4203de:	cmp    ebp,DWORD PTR [rdi+0x8]
  4203e1:	ja     4204b8 <xmlStrEqual@plt+0x1c578>
  4203e7:	mov    rbx,QWORD PTR [rdi]
  4203ea:	lea    r9,[rsi+0x8]
  4203ee:	mov    edx,0x80
  4203f3:	test   rbx,rbx
  4203f6:	jne    420425 <xmlStrEqual@plt+0x1c4e5>
  4203f8:	jmp    420470 <xmlStrEqual@plt+0x1c530>
  4203fa:	nop    WORD PTR [rax+rax*1+0x0]
  420400:	mov    ecx,eax
  420402:	shr    ecx,0x3
  420405:	movzx  ecx,BYTE PTR [r9+rcx*1]
  42040a:	mov    r8,QWORD PTR [rbx+0x10]
  42040e:	and    eax,0x7
  420411:	sarx   eax,edx,eax
  420416:	test   ecx,eax
  420418:	cmovne r8,QWORD PTR [rbx+0x18]
  42041d:	mov    rbx,r8
  420420:	test   r8,r8
  420423:	je     420470 <xmlStrEqual@plt+0x1c530>
  420425:	mov    eax,DWORD PTR [rbx]
  420427:	cmp    ebp,eax
  420429:	ja     420400 <xmlStrEqual@plt+0x1c4c0>
  42042b:	jb     420470 <xmlStrEqual@plt+0x1c530>
  42042d:	mov    rdx,QWORD PTR [rbx+0x8]
  420431:	test   rdx,rdx
  420434:	je     420470 <xmlStrEqual@plt+0x1c530>
  420436:	cmp    ebp,eax
  420438:	jne    42047a <xmlStrEqual@plt+0x1c53a>
  42043a:	movzx  eax,WORD PTR [rdx+0x2]
  42043e:	cmp    ebp,eax
  420440:	jne    420499 <xmlStrEqual@plt+0x1c559>
  420442:	mov    rdi,rsi
  420445:	call   41f920 <xmlStrEqual@plt+0x1b9e0>
  42044a:	mov    rdi,QWORD PTR [rbx+0x8]
  42044e:	mov    r12,rax
  420451:	call   41f920 <xmlStrEqual@plt+0x1b9e0>
  420456:	mov    rdi,rax
  420459:	mov    edx,ebp
  42045b:	mov    rsi,r12
  42045e:	call   41f940 <xmlStrEqual@plt+0x1ba00>
  420463:	test   eax,eax
  420465:	jne    420472 <xmlStrEqual@plt+0x1c532>
  420467:	nop    WORD PTR [rax+rax*1+0x0]
  420470:	xor    ebx,ebx
  420472:	mov    rax,rbx
  420475:	pop    rbx
  420476:	pop    rbp
  420477:	pop    r12
  420479:	ret    
  42047a:	lea    rcx,[rip+0x2d76f]        # 44dbf0 <xmlStrEqual@plt+0x49cb0>
  420481:	mov    edx,0x1e1
  420486:	lea    rsi,[rip+0x2d45a]        # 44d8e7 <xmlStrEqual@plt+0x499a7>
  42048d:	lea    rdi,[rip+0x2d519]        # 44d9ad <xmlStrEqual@plt+0x49a6d>
  420494:	call   403a60 <__assert_fail@plt>
  420499:	lea    rcx,[rip+0x2d750]        # 44dbf0 <xmlStrEqual@plt+0x49cb0>
  4204a0:	mov    edx,0x1e2
  4204a5:	lea    rsi,[rip+0x2d43b]        # 44d8e7 <xmlStrEqual@plt+0x499a7>
  4204ac:	lea    rdi,[rip+0x2d6d5]        # 44db88 <xmlStrEqual@plt+0x49c48>
  4204b3:	call   403a60 <__assert_fail@plt>
  4204b8:	lea    rcx,[rip+0x2d731]        # 44dbf0 <xmlStrEqual@plt+0x49cb0>
  4204bf:	mov    edx,0x1b3
  4204c4:	lea    rsi,[rip+0x2d41c]        # 44d8e7 <xmlStrEqual@plt+0x499a7>
  4204cb:	lea    rdi,[rip+0x2d68e]        # 44db60 <xmlStrEqual@plt+0x49c20>
  4204d2:	call   403a60 <__assert_fail@plt>
  4204d7:	lea    rcx,[rip+0x2d712]        # 44dbf0 <xmlStrEqual@plt+0x49cb0>
  4204de:	mov    edx,0x1b2
  4204e3:	lea    rsi,[rip+0x2d3fd]        # 44d8e7 <xmlStrEqual@plt+0x499a7>
  4204ea:	lea    rdi,[rip+0x34e90]        # 455381 <xmlStrEqual@plt+0x51441>
  4204f1:	call   403a60 <__assert_fail@plt>
  4204f6:	lea    rcx,[rip+0x2d6f3]        # 44dbf0 <xmlStrEqual@plt+0x49cb0>
  4204fd:	mov    edx,0x1b1
  420502:	lea    rsi,[rip+0x2d3de]        # 44d8e7 <xmlStrEqual@plt+0x499a7>
  420509:	lea    rdi,[rip+0x2d47d]        # 44d98d <xmlStrEqual@plt+0x49a4d>
  420510:	call   403a60 <__assert_fail@plt>
  420515:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  420520:	endbr64 
  420524:	push   r15
  420526:	push   r14
  420528:	push   r13
  42052a:	push   r12
  42052c:	push   rbp
  42052d:	push   rbx
  42052e:	sub    rsp,0x418
  420535:	mov    rax,QWORD PTR fs:0x28
  42053e:	mov    QWORD PTR [rsp+0x408],rax
  420546:	xor    eax,eax
  420548:	test   rdi,rdi
  42054b:	je     4206b8 <xmlStrEqual@plt+0x1c778>
  420551:	mov    rbp,rsi
  420554:	test   rsi,rsi
  420557:	je     420699 <xmlStrEqual@plt+0x1c759>
  42055d:	movzx  r8d,WORD PTR [rsi+0x2]
  420562:	mov    r12d,r8d
  420565:	cmp    r8d,DWORD PTR [rdi+0x8]
  420569:	ja     42067a <xmlStrEqual@plt+0x1c73a>
  42056f:	mov    rcx,QWORD PTR [rdi]
  420572:	lea    r10,[rsi+0x8]
  420576:	xor    ebx,ebx
  420578:	mov    r9d,0x80
  42057e:	test   rcx,rcx
  420581:	jne    4205c9 <xmlStrEqual@plt+0x1c689>
  420583:	jmp    42063e <xmlStrEqual@plt+0x1c6fe>
  420588:	nop    DWORD PTR [rax+rax*1+0x0]
  420590:	cmp    QWORD PTR [rcx+0x8],0x0
  420595:	je     4205a0 <xmlStrEqual@plt+0x1c660>
  420597:	movsxd rsi,ebx
  42059a:	mov    QWORD PTR [rsp+rsi*8],rcx
  42059e:	inc    ebx
  4205a0:	mov    esi,eax
  4205a2:	shr    esi,0x3
  4205a5:	movzx  esi,BYTE PTR [r10+rsi*1]
  4205aa:	mov    rdi,QWORD PTR [rcx+0x10]
  4205ae:	and    eax,0x7
  4205b1:	sarx   eax,r9d,eax
  4205b6:	test   esi,eax
  4205b8:	cmovne rdi,QWORD PTR [rcx+0x18]
  4205bd:	mov    rcx,rdi
  4205c0:	test   rdi,rdi
  4205c3:	je     420670 <xmlStrEqual@plt+0x1c730>
  4205c9:	mov    eax,DWORD PTR [rcx]
  4205cb:	cmp    r8d,eax
  4205ce:	ja     420590 <xmlStrEqual@plt+0x1c650>
  4205d0:	test   edx,edx
  4205d2:	je     420670 <xmlStrEqual@plt+0x1c730>
  4205d8:	cmp    QWORD PTR [rcx+0x8],0x0
  4205dd:	je     420670 <xmlStrEqual@plt+0x1c730>
  4205e3:	movsxd rax,ebx
  4205e6:	mov    QWORD PTR [rsp+rax*8],rcx
  4205ea:	inc    ebx
  4205ec:	dec    ebx
  4205ee:	movsxd rbx,ebx
  4205f1:	jmp    420639 <xmlStrEqual@plt+0x1c6f9>
  4205f3:	nop    DWORD PTR [rax+rax*1+0x0]
  4205f8:	mov    r13,QWORD PTR [rsp+rbx*8]
  4205fc:	mov    rdi,rbp
  4205ff:	mov    rax,QWORD PTR [r13+0x8]
  420603:	movzx  r15d,WORD PTR [rax+0x2]
  420608:	call   41f920 <xmlStrEqual@plt+0x1b9e0>
  42060d:	mov    rdi,QWORD PTR [r13+0x8]
  420611:	mov    r14,rax
  420614:	call   41f920 <xmlStrEqual@plt+0x1b9e0>
  420619:	mov    rdi,rax
  42061c:	mov    edx,r15d
  42061f:	mov    rsi,r14
  420622:	call   41f940 <xmlStrEqual@plt+0x1ba00>
  420627:	test   eax,eax
  420629:	je     420636 <xmlStrEqual@plt+0x1c6f6>
  42062b:	mov    rax,QWORD PTR [r13+0x8]
  42062f:	cmp    r12w,WORD PTR [rax+0x2]
  420634:	jae    420641 <xmlStrEqual@plt+0x1c701>
  420636:	dec    rbx
  420639:	cmp    ebx,0xffffffff
  42063c:	jne    4205f8 <xmlStrEqual@plt+0x1c6b8>
  42063e:	xor    r13d,r13d
  420641:	mov    rdx,QWORD PTR [rsp+0x408]
  420649:	xor    rdx,QWORD PTR fs:0x28
  420652:	mov    rax,r13
  420655:	jne    4206d7 <xmlStrEqual@plt+0x1c797>
  42065b:	add    rsp,0x418
  420662:	pop    rbx
  420663:	pop    rbp
  420664:	pop    r12
  420666:	pop    r13
  420668:	pop    r14
  42066a:	pop    r15
  42066c:	ret    
  42066d:	nop    DWORD PTR [rax]
  420670:	test   ebx,ebx
  420672:	jne    4205ec <xmlStrEqual@plt+0x1c6ac>
  420678:	jmp    42063e <xmlStrEqual@plt+0x1c6fe>
  42067a:	lea    rcx,[rip+0x2d54f]        # 44dbd0 <xmlStrEqual@plt+0x49c90>
  420681:	mov    edx,0x1fb
  420686:	lea    rsi,[rip+0x2d25a]        # 44d8e7 <xmlStrEqual@plt+0x499a7>
  42068d:	lea    rdi,[rip+0x2d4cc]        # 44db60 <xmlStrEqual@plt+0x49c20>
  420694:	call   403a60 <__assert_fail@plt>
  420699:	lea    rcx,[rip+0x2d530]        # 44dbd0 <xmlStrEqual@plt+0x49c90>
  4206a0:	mov    edx,0x1fa
  4206a5:	lea    rsi,[rip+0x2d23b]        # 44d8e7 <xmlStrEqual@plt+0x499a7>
  4206ac:	lea    rdi,[rip+0x34cce]        # 455381 <xmlStrEqual@plt+0x51441>
  4206b3:	call   403a60 <__assert_fail@plt>
  4206b8:	lea    rcx,[rip+0x2d511]        # 44dbd0 <xmlStrEqual@plt+0x49c90>
  4206bf:	mov    edx,0x1f9
  4206c4:	lea    rsi,[rip+0x2d21c]        # 44d8e7 <xmlStrEqual@plt+0x499a7>
  4206cb:	lea    rdi,[rip+0x2d2bb]        # 44d98d <xmlStrEqual@plt+0x49a4d>
  4206d2:	call   403a60 <__assert_fail@plt>
  4206d7:	call   403c00 <__stack_chk_fail@plt>
  4206dc:	nop    DWORD PTR [rax+0x0]
  4206e0:	endbr64 
  4206e4:	mov    edx,0x1
  4206e9:	jmp    420520 <xmlStrEqual@plt+0x1c5e0>
  4206ee:	xchg   ax,ax
  4206f0:	endbr64 
  4206f4:	push   r15
  4206f6:	push   r14
  4206f8:	push   r13
  4206fa:	push   r12
  4206fc:	push   rbp
  4206fd:	push   rbx
  4206fe:	sub    rsp,0x18
  420702:	test   rdi,rdi
  420705:	je     420b94 <xmlStrEqual@plt+0x1cc54>
  42070b:	mov    r12,rsi
  42070e:	test   rsi,rsi
  420711:	je     420bb3 <xmlStrEqual@plt+0x1cc73>
  420717:	movzx  ebx,WORD PTR [rsi+0x2]
  42071b:	mov    esi,DWORD PTR [rdi+0x8]
  42071e:	mov    rbp,rdi
  420721:	mov    r13d,ebx
  420724:	cmp    ebx,esi
  420726:	ja     420c2f <xmlStrEqual@plt+0x1ccef>
  42072c:	mov    rdx,QWORD PTR [rdi]
  42072f:	lea    r8,[r12+0x8]
  420734:	mov    edi,0x80
  420739:	test   rdx,rdx
  42073c:	jne    42076d <xmlStrEqual@plt+0x1c82d>
  42073e:	jmp    420af8 <xmlStrEqual@plt+0x1cbb8>
  420743:	nop    DWORD PTR [rax+rax*1+0x0]
  420748:	mov    ecx,eax
  42074a:	shr    ecx,0x3
  42074d:	movzx  r9d,BYTE PTR [r8+rcx*1]
  420752:	mov    ecx,eax
  420754:	and    ecx,0x7
  420757:	sarx   ecx,edi,ecx
  42075c:	test   r9d,ecx
  42075f:	je     420780 <xmlStrEqual@plt+0x1c840>
  420761:	mov    rcx,QWORD PTR [rdx+0x18]
  420765:	test   rcx,rcx
  420768:	je     420789 <xmlStrEqual@plt+0x1c849>
  42076a:	mov    rdx,rcx
  42076d:	mov    eax,DWORD PTR [rdx]
  42076f:	cmp    ebx,eax
  420771:	ja     42077c <xmlStrEqual@plt+0x1c83c>
  420773:	mov    rcx,QWORD PTR [rdx+0x8]
  420777:	test   rcx,rcx
  42077a:	jne    420796 <xmlStrEqual@plt+0x1c856>
  42077c:	cmp    esi,eax
  42077e:	ja     420748 <xmlStrEqual@plt+0x1c808>
  420780:	mov    rcx,QWORD PTR [rdx+0x10]
  420784:	test   rcx,rcx
  420787:	jne    42076a <xmlStrEqual@plt+0x1c82a>
  420789:	mov    rcx,QWORD PTR [rdx+0x8]
  42078d:	test   rcx,rcx
  420790:	je     420c10 <xmlStrEqual@plt+0x1ccd0>
  420796:	cmp    ebx,eax
  420798:	cmovbe eax,ebx
  42079b:	lea    r8,[rcx+0x8]
  42079f:	mov    r15d,eax
  4207a2:	test   eax,eax
  4207a4:	je     420b4b <xmlStrEqual@plt+0x1cc0b>
  4207aa:	movzx  eax,BYTE PTR [r12+0x8]
  4207b0:	movzx  esi,BYTE PTR [rcx+0x8]
  4207b4:	cmp    al,sil
  4207b7:	je     4209c0 <xmlStrEqual@plt+0x1ca80>
  4207bd:	xor    eax,esi
  4207bf:	movzx  ecx,al
  4207c2:	xor    edi,edi
  4207c4:	xor    eax,eax
  4207c6:	mov    r9d,0x80
  4207cc:	nop    DWORD PTR [rax+0x0]
  4207d0:	sarx   esi,r9d,eax
  4207d5:	test   esi,ecx
  4207d7:	jne    420800 <xmlStrEqual@plt+0x1c8c0>
  4207d9:	inc    eax
  4207db:	cmp    eax,0x8
  4207de:	jne    4207d0 <xmlStrEqual@plt+0x1c890>
  4207e0:	lea    rcx,[rip+0x2d3d9]        # 44dbc0 <xmlStrEqual@plt+0x49c80>
  4207e7:	mov    edx,0x2a8
  4207ec:	lea    rsi,[rip+0x2d0f4]        # 44d8e7 <xmlStrEqual@plt+0x499a7>
  4207f3:	lea    rdi,[rip+0x2d21e]        # 44da18 <xmlStrEqual@plt+0x49ad8>
  4207fa:	call   403a60 <__assert_fail@plt>
  4207ff:	nop
  420800:	add    eax,edi
  420802:	mov    r14,QWORD PTR [rdx+0x20]
  420806:	cmp    r15d,eax
  420809:	cmova  r15d,eax
  42080d:	test   r14,r14
  420810:	je     420b58 <xmlStrEqual@plt+0x1cc18>
  420816:	cmp    DWORD PTR [r14],r15d
  420819:	jae    420828 <xmlStrEqual@plt+0x1c8e8>
  42081b:	jmp    420b58 <xmlStrEqual@plt+0x1cc18>
  420820:	cmp    DWORD PTR [rax],r15d
  420823:	jb     420831 <xmlStrEqual@plt+0x1c8f1>
  420825:	mov    r14,rax
  420828:	mov    rax,QWORD PTR [r14+0x20]
  42082c:	test   rax,rax
  42082f:	jne    420820 <xmlStrEqual@plt+0x1c8e0>
  420831:	cmp    ebx,r15d
  420834:	jne    4208e8 <xmlStrEqual@plt+0x1c9a8>
  42083a:	cmp    DWORD PTR [r14],ebx
  42083d:	je     420ab8 <xmlStrEqual@plt+0x1cb78>
  420843:	mov    esi,0x38
  420848:	mov    edi,0x1
  42084d:	mov    QWORD PTR [rsp+0x8],r8
  420852:	call   434fa0 <xmlStrEqual@plt+0x31060>
  420857:	mov    rdx,rax
  42085a:	movzx  eax,WORD PTR [r12+0x2]
  420860:	mov    rdi,r12
  420863:	mov    DWORD PTR [rdx],eax
  420865:	mov    QWORD PTR [rsp],rdx
  420869:	call   41ffc0 <xmlStrEqual@plt+0x1c080>
  42086e:	mov    rdx,QWORD PTR [rsp]
  420872:	mov    r8,QWORD PTR [rsp+0x8]
  420877:	mov    QWORD PTR [rdx+0x8],rax
  42087b:	mov    QWORD PTR [rdx+0x20],0x0
  420883:	mov    QWORD PTR [rdx+0x18],0x0
  42088b:	mov    QWORD PTR [rdx+0x10],0x0
  420893:	mov    QWORD PTR [rdx+0x28],0x0
  42089b:	inc    DWORD PTR [rbp+0xc]
  42089e:	cmp    DWORD PTR [r14],ebx
  4208a1:	je     420a00 <xmlStrEqual@plt+0x1cac0>
  4208a7:	cmp    DWORD PTR [rbp+0x8],ebx
  4208aa:	ja     420a5d <xmlStrEqual@plt+0x1cb1d>
  4208b0:	mov    QWORD PTR [rdx+0x10],r14
  4208b4:	mov    rax,QWORD PTR [r14+0x20]
  4208b8:	mov    QWORD PTR [rdx+0x20],rax
  4208bc:	mov    rax,QWORD PTR [r14+0x20]
  4208c0:	test   rax,rax
  4208c3:	je     420b60 <xmlStrEqual@plt+0x1cc20>
  4208c9:	cmp    QWORD PTR [rax+0x18],r14
  4208cd:	je     420b82 <xmlStrEqual@plt+0x1cc42>
  4208d3:	mov    QWORD PTR [rax+0x10],rdx
  4208d7:	mov    QWORD PTR [r14+0x20],rdx
  4208db:	mov    r14,rdx
  4208de:	jmp    420a4b <xmlStrEqual@plt+0x1cb0b>
  4208e3:	nop    DWORD PTR [rax+rax*1+0x0]
  4208e8:	mov    esi,0x38
  4208ed:	mov    edi,0x1
  4208f2:	call   434fa0 <xmlStrEqual@plt+0x31060>
  4208f7:	mov    rdx,rax
  4208fa:	movzx  eax,WORD PTR [r12+0x2]
  420900:	mov    rdi,r12
  420903:	mov    DWORD PTR [rdx],eax
  420905:	mov    QWORD PTR [rsp],rdx
  420909:	call   41ffc0 <xmlStrEqual@plt+0x1c080>
  42090e:	mov    rdx,QWORD PTR [rsp]
  420912:	mov    ebx,DWORD PTR [r14]
  420915:	mov    QWORD PTR [rdx+0x8],rax
  420919:	mov    QWORD PTR [rdx+0x20],0x0
  420921:	mov    QWORD PTR [rdx+0x18],0x0
  420929:	mov    QWORD PTR [rdx+0x10],0x0
  420931:	mov    QWORD PTR [rdx+0x28],0x0
  420939:	inc    DWORD PTR [rbp+0xc]
  42093c:	cmp    r15d,ebx
  42093f:	je     420a00 <xmlStrEqual@plt+0x1cac0>
  420945:	mov    esi,0x38
  42094a:	mov    edi,0x1
  42094f:	mov    QWORD PTR [rsp],rdx
  420953:	call   434fa0 <xmlStrEqual@plt+0x31060>
  420958:	mov    rcx,QWORD PTR [r14+0x20]
  42095c:	mov    DWORD PTR [rax],r15d
  42095f:	mov    QWORD PTR [rax+0x8],0x0
  420967:	mov    QWORD PTR [rax+0x20],rcx
  42096b:	mov    QWORD PTR [rax+0x28],0x0
  420973:	inc    DWORD PTR [rbp+0xc]
  420976:	cmp    DWORD PTR [rbp+0x8],r15d
  42097a:	mov    rdx,QWORD PTR [rsp]
  42097e:	ja     420a86 <xmlStrEqual@plt+0x1cb46>
  420984:	mov    QWORD PTR [rax+0x18],r14
  420988:	mov    QWORD PTR [rax+0x10],rdx
  42098c:	mov    QWORD PTR [rdx+0x20],rax
  420990:	mov    rcx,QWORD PTR [r14+0x20]
  420994:	test   rcx,rcx
  420997:	je     420b73 <xmlStrEqual@plt+0x1cc33>
  42099d:	cmp    QWORD PTR [rcx+0x18],r14
  4209a1:	je     420b8b <xmlStrEqual@plt+0x1cc4b>
  4209a7:	mov    QWORD PTR [rcx+0x10],rax
  4209ab:	mov    QWORD PTR [r14+0x20],rax
  4209af:	mov    r14,rdx
  4209b2:	jmp    420a4b <xmlStrEqual@plt+0x1cb0b>
  4209b7:	nop    WORD PTR [rax+rax*1+0x0]
  4209c0:	mov    r9d,0x9
  4209c6:	mov    eax,0x8
  4209cb:	mov    edi,eax
  4209cd:	cmp    r15d,eax
  4209d0:	jbe    420802 <xmlStrEqual@plt+0x1c8c2>
  4209d6:	movzx  esi,BYTE PTR [r12+r9*1]
  4209db:	movzx  r10d,BYTE PTR [rcx+r9*1]
  4209e0:	lea    eax,[rdi+0x8]
  4209e3:	inc    r9
  4209e6:	cmp    sil,r10b
  4209e9:	je     4209cb <xmlStrEqual@plt+0x1ca8b>
  4209eb:	xor    esi,r10d
  4209ee:	movzx  ecx,sil
  4209f2:	jmp    4207c4 <xmlStrEqual@plt+0x1c884>
  4209f7:	nop    WORD PTR [rax+rax*1+0x0]
  420a00:	mov    QWORD PTR [rdx+0x20],r14
  420a04:	cmp    DWORD PTR [rbp+0x8],ebx
  420a07:	jbe    420a39 <xmlStrEqual@plt+0x1caf9>
  420a09:	mov    eax,ebx
  420a0b:	shr    eax,0x3
  420a0e:	movzx  ecx,BYTE PTR [r12+rax*1+0x8]
  420a14:	and    ebx,0x7
  420a17:	mov    eax,0x80
  420a1c:	sarx   ebx,eax,ebx
  420a21:	test   ecx,ebx
  420a23:	je     420a39 <xmlStrEqual@plt+0x1caf9>
  420a25:	cmp    QWORD PTR [r14+0x18],0x0
  420a2a:	jne    420c4e <xmlStrEqual@plt+0x1cd0e>
  420a30:	mov    QWORD PTR [r14+0x18],rdx
  420a34:	mov    r14,rdx
  420a37:	jmp    420a4b <xmlStrEqual@plt+0x1cb0b>
  420a39:	cmp    QWORD PTR [r14+0x10],0x0
  420a3e:	jne    420c6d <xmlStrEqual@plt+0x1cd2d>
  420a44:	mov    QWORD PTR [r14+0x10],rdx
  420a48:	mov    r14,rdx
  420a4b:	add    rsp,0x18
  420a4f:	pop    rbx
  420a50:	pop    rbp
  420a51:	pop    r12
  420a53:	pop    r13
  420a55:	mov    rax,r14
  420a58:	pop    r14
  420a5a:	pop    r15
  420a5c:	ret    
  420a5d:	mov    eax,ebx
  420a5f:	shr    eax,0x3
  420a62:	movzx  ecx,BYTE PTR [r8+rax*1]
  420a67:	and    r13d,0x7
  420a6b:	mov    eax,0x80
  420a70:	sarx   eax,eax,r13d
  420a75:	test   ecx,eax
  420a77:	je     4208b0 <xmlStrEqual@plt+0x1c970>
  420a7d:	mov    QWORD PTR [rdx+0x18],r14
  420a81:	jmp    4208b4 <xmlStrEqual@plt+0x1c974>
  420a86:	mov    ecx,r15d
  420a89:	shr    ecx,0x3
  420a8c:	movzx  esi,BYTE PTR [r12+rcx*1+0x8]
  420a92:	mov    r8d,r15d
  420a95:	and    r8d,0x7
  420a99:	mov    ecx,0x80
  420a9e:	sarx   ecx,ecx,r8d
  420aa3:	test   esi,ecx
  420aa5:	je     420984 <xmlStrEqual@plt+0x1ca44>
  420aab:	mov    QWORD PTR [rax+0x18],rdx
  420aaf:	mov    QWORD PTR [rax+0x10],r14
  420ab3:	jmp    42098c <xmlStrEqual@plt+0x1ca4c>
  420ab8:	cmp    QWORD PTR [r14+0x8],0x0
  420abd:	jne    420a4b <xmlStrEqual@plt+0x1cb0b>
  420abf:	mov    rdi,r12
  420ac2:	call   41ffc0 <xmlStrEqual@plt+0x1c080>
  420ac7:	cmp    QWORD PTR [r14+0x28],0x0
  420acc:	mov    QWORD PTR [r14+0x8],rax
  420ad0:	je     420a4b <xmlStrEqual@plt+0x1cb0b>
  420ad6:	lea    rcx,[rip+0x2d0e3]        # 44dbc0 <xmlStrEqual@plt+0x49c80>
  420add:	mov    edx,0x2cc
  420ae2:	lea    rsi,[rip+0x2cdfe]        # 44d8e7 <xmlStrEqual@plt+0x499a7>
  420ae9:	lea    rdi,[rip+0x2cede]        # 44d9ce <xmlStrEqual@plt+0x49a8e>
  420af0:	call   403a60 <__assert_fail@plt>
  420af5:	nop    DWORD PTR [rax]
  420af8:	mov    esi,0x38
  420afd:	mov    edi,0x1
  420b02:	call   434fa0 <xmlStrEqual@plt+0x31060>
  420b07:	mov    r14,rax
  420b0a:	movzx  eax,WORD PTR [r12+0x2]
  420b10:	mov    rdi,r12
  420b13:	mov    DWORD PTR [r14],eax
  420b16:	call   41ffc0 <xmlStrEqual@plt+0x1c080>
  420b1b:	mov    QWORD PTR [r14+0x8],rax
  420b1f:	mov    QWORD PTR [r14+0x20],0x0
  420b27:	mov    QWORD PTR [r14+0x18],0x0
  420b2f:	mov    QWORD PTR [r14+0x10],0x0
  420b37:	mov    QWORD PTR [r14+0x28],0x0
  420b3f:	mov    QWORD PTR [rbp+0x0],r14
  420b43:	inc    DWORD PTR [rbp+0xc]
  420b46:	jmp    420a4b <xmlStrEqual@plt+0x1cb0b>
  420b4b:	mov    r14,QWORD PTR [rdx+0x20]
  420b4f:	test   r14,r14
  420b52:	jne    420828 <xmlStrEqual@plt+0x1c8e8>
  420b58:	mov    r14,rdx
  420b5b:	jmp    420831 <xmlStrEqual@plt+0x1c8f1>
  420b60:	cmp    QWORD PTR [rbp+0x0],r14
  420b64:	jne    420bf1 <xmlStrEqual@plt+0x1ccb1>
  420b6a:	mov    QWORD PTR [rbp+0x0],rdx
  420b6e:	jmp    4208d7 <xmlStrEqual@plt+0x1c997>
  420b73:	cmp    QWORD PTR [rbp+0x0],r14
  420b77:	jne    420bd2 <xmlStrEqual@plt+0x1cc92>
  420b79:	mov    QWORD PTR [rbp+0x0],rax
  420b7d:	jmp    4209ab <xmlStrEqual@plt+0x1ca6b>
  420b82:	mov    QWORD PTR [rax+0x18],rdx
  420b86:	jmp    4208d7 <xmlStrEqual@plt+0x1c997>
  420b8b:	mov    QWORD PTR [rcx+0x18],rax
  420b8f:	jmp    4209ab <xmlStrEqual@plt+0x1ca6b>
  420b94:	lea    rcx,[rip+0x2d025]        # 44dbc0 <xmlStrEqual@plt+0x49c80>
  420b9b:	mov    edx,0x25c
  420ba0:	lea    rsi,[rip+0x2cd40]        # 44d8e7 <xmlStrEqual@plt+0x499a7>
  420ba7:	lea    rdi,[rip+0x2cddf]        # 44d98d <xmlStrEqual@plt+0x49a4d>
  420bae:	call   403a60 <__assert_fail@plt>
  420bb3:	lea    rcx,[rip+0x2d006]        # 44dbc0 <xmlStrEqual@plt+0x49c80>
  420bba:	mov    edx,0x25d
  420bbf:	lea    rsi,[rip+0x2cd21]        # 44d8e7 <xmlStrEqual@plt+0x499a7>
  420bc6:	lea    rdi,[rip+0x347b4]        # 455381 <xmlStrEqual@plt+0x51441>
  420bcd:	call   403a60 <__assert_fail@plt>
  420bd2:	lea    rcx,[rip+0x2cfe7]        # 44dbc0 <xmlStrEqual@plt+0x49c80>
  420bd9:	mov    edx,0x316
  420bde:	lea    rsi,[rip+0x2cd02]        # 44d8e7 <xmlStrEqual@plt+0x499a7>
  420be5:	lea    rdi,[rip+0x2ce15]        # 44da01 <xmlStrEqual@plt+0x49ac1>
  420bec:	call   403a60 <__assert_fail@plt>
  420bf1:	lea    rcx,[rip+0x2cfc8]        # 44dbc0 <xmlStrEqual@plt+0x49c80>
  420bf8:	mov    edx,0x2f4
  420bfd:	lea    rsi,[rip+0x2cce3]        # 44d8e7 <xmlStrEqual@plt+0x499a7>
  420c04:	lea    rdi,[rip+0x2cdf6]        # 44da01 <xmlStrEqual@plt+0x49ac1>
  420c0b:	call   403a60 <__assert_fail@plt>
  420c10:	lea    rcx,[rip+0x2cfa9]        # 44dbc0 <xmlStrEqual@plt+0x49c80>
  420c17:	mov    edx,0x293
  420c1c:	lea    rsi,[rip+0x2ccc4]        # 44d8e7 <xmlStrEqual@plt+0x499a7>
  420c23:	lea    rdi,[rip+0x2cd97]        # 44d9c1 <xmlStrEqual@plt+0x49a81>
  420c2a:	call   403a60 <__assert_fail@plt>
  420c2f:	lea    rcx,[rip+0x2cf8a]        # 44dbc0 <xmlStrEqual@plt+0x49c80>
  420c36:	mov    edx,0x25e
  420c3b:	lea    rsi,[rip+0x2cca5]        # 44d8e7 <xmlStrEqual@plt+0x499a7>
  420c42:	lea    rdi,[rip+0x2cf17]        # 44db60 <xmlStrEqual@plt+0x49c20>
  420c49:	call   403a60 <__assert_fail@plt>
  420c4e:	lea    rcx,[rip+0x2cf6b]        # 44dbc0 <xmlStrEqual@plt+0x49c80>
  420c55:	mov    edx,0x2dc
  420c5a:	lea    rsi,[rip+0x2cc86]        # 44d8e7 <xmlStrEqual@plt+0x499a7>
  420c61:	lea    rdi,[rip+0x2cd79]        # 44d9e1 <xmlStrEqual@plt+0x49aa1>
  420c68:	call   403a60 <__assert_fail@plt>
  420c6d:	lea    rcx,[rip+0x2cf4c]        # 44dbc0 <xmlStrEqual@plt+0x49c80>
  420c74:	mov    edx,0x2e0
  420c79:	lea    rsi,[rip+0x2cc67]        # 44d8e7 <xmlStrEqual@plt+0x499a7>
  420c80:	lea    rdi,[rip+0x2cd6a]        # 44d9f1 <xmlStrEqual@plt+0x49ab1>
  420c87:	call   403a60 <__assert_fail@plt>
  420c8c:	nop    DWORD PTR [rax+0x0]
  420c90:	endbr64 
  420c94:	push   r13
  420c96:	push   r12
  420c98:	push   rbp
  420c99:	push   rbx
  420c9a:	sub    rsp,0x8
  420c9e:	test   rdi,rdi
  420ca1:	je     420e42 <xmlStrEqual@plt+0x1cf02>
  420ca7:	mov    rbx,rsi
  420caa:	test   rsi,rsi
  420cad:	je     420e61 <xmlStrEqual@plt+0x1cf21>
  420cb3:	mov    r12,QWORD PTR [rsi+0x18]
  420cb7:	mov    rbp,rdi
  420cba:	mov    rax,QWORD PTR [rsi+0x10]
  420cbe:	mov    rdi,QWORD PTR [rsi+0x8]
  420cc2:	test   r12,r12
  420cc5:	je     420d40 <xmlStrEqual@plt+0x1ce00>
  420cc7:	test   rax,rax
  420cca:	je     420cf8 <xmlStrEqual@plt+0x1cdb8>
  420ccc:	test   rdi,rdi
  420ccf:	je     420cd6 <xmlStrEqual@plt+0x1cd96>
  420cd1:	call   420000 <xmlStrEqual@plt+0x1c0c0>
  420cd6:	mov    QWORD PTR [rbx+0x8],0x0
  420cde:	mov    QWORD PTR [rbx+0x28],0x0
  420ce6:	add    rsp,0x8
  420cea:	pop    rbx
  420ceb:	pop    rbp
  420cec:	pop    r12
  420cee:	pop    r13
  420cf0:	ret    
  420cf1:	nop    DWORD PTR [rax+0x0]
  420cf8:	mov    r13,QWORD PTR [rsi+0x20]
  420cfc:	mov    QWORD PTR [r12+0x20],r13
  420d01:	call   420000 <xmlStrEqual@plt+0x1c0c0>
  420d06:	mov    rdi,rbx
  420d09:	call   4037b0 <free@plt>
  420d0e:	dec    DWORD PTR [rbp+0xc]
  420d11:	test   r13,r13
  420d14:	je     420dd0 <xmlStrEqual@plt+0x1ce90>
  420d1a:	cmp    QWORD PTR [r13+0x18],rbx
  420d1e:	je     420df0 <xmlStrEqual@plt+0x1ceb0>
  420d24:	cmp    QWORD PTR [r13+0x10],rbx
  420d28:	jne    420e80 <xmlStrEqual@plt+0x1cf40>
  420d2e:	mov    QWORD PTR [r13+0x10],r12
  420d32:	add    rsp,0x8
  420d36:	pop    rbx
  420d37:	pop    rbp
  420d38:	pop    r12
  420d3a:	pop    r13
  420d3c:	ret    
  420d3d:	nop    DWORD PTR [rax]
  420d40:	mov    r13,QWORD PTR [rsi+0x20]
  420d44:	mov    r12,rax
  420d47:	test   rax,rax
  420d4a:	jne    420cfc <xmlStrEqual@plt+0x1cdbc>
  420d4c:	call   420000 <xmlStrEqual@plt+0x1c0c0>
  420d51:	mov    rdi,rbx
  420d54:	call   4037b0 <free@plt>
  420d59:	dec    DWORD PTR [rbp+0xc]
  420d5c:	test   r13,r13
  420d5f:	je     420dff <xmlStrEqual@plt+0x1cebf>
  420d65:	mov    rax,QWORD PTR [r13+0x18]
  420d69:	mov    rdx,QWORD PTR [r13+0x10]
  420d6d:	cmp    rax,rbx
  420d70:	je     420e16 <xmlStrEqual@plt+0x1ced6>
  420d76:	cmp    rbx,rdx
  420d79:	jne    420ebe <xmlStrEqual@plt+0x1cf7e>
  420d7f:	mov    QWORD PTR [r13+0x10],0x0
  420d87:	cmp    QWORD PTR [r13+0x8],0x0
  420d8c:	jne    420ce6 <xmlStrEqual@plt+0x1cda6>
  420d92:	mov    rdx,QWORD PTR [r13+0x20]
  420d96:	test   rdx,rdx
  420d99:	je     420e26 <xmlStrEqual@plt+0x1cee6>
  420d9f:	cmp    QWORD PTR [rdx+0x18],r13
  420da3:	je     420e39 <xmlStrEqual@plt+0x1cef9>
  420da9:	cmp    QWORD PTR [rdx+0x10],r13
  420dad:	jne    420efc <xmlStrEqual@plt+0x1cfbc>
  420db3:	mov    QWORD PTR [rdx+0x10],rax
  420db7:	mov    QWORD PTR [rax+0x20],rdx
  420dbb:	mov    rdi,r13
  420dbe:	call   4037b0 <free@plt>
  420dc3:	dec    DWORD PTR [rbp+0xc]
  420dc6:	jmp    420ce6 <xmlStrEqual@plt+0x1cda6>
  420dcb:	nop    DWORD PTR [rax+rax*1+0x0]
  420dd0:	cmp    QWORD PTR [rbp+0x0],rbx
  420dd4:	jne    420e9f <xmlStrEqual@plt+0x1cf5f>
  420dda:	mov    QWORD PTR [rbp+0x0],r12
  420dde:	add    rsp,0x8
  420de2:	pop    rbx
  420de3:	pop    rbp
  420de4:	pop    r12
  420de6:	pop    r13
  420de8:	ret    
  420de9:	nop    DWORD PTR [rax+0x0]
  420df0:	mov    QWORD PTR [r13+0x18],r12
  420df4:	add    rsp,0x8
  420df8:	pop    rbx
  420df9:	pop    rbp
  420dfa:	pop    r12
  420dfc:	pop    r13
  420dfe:	ret    
  420dff:	cmp    QWORD PTR [rbp+0x0],rbx
  420e03:	jne    420edd <xmlStrEqual@plt+0x1cf9d>
  420e09:	mov    QWORD PTR [rbp+0x0],0x0
  420e11:	jmp    420ce6 <xmlStrEqual@plt+0x1cda6>
  420e16:	mov    QWORD PTR [r13+0x18],0x0
  420e1e:	mov    rax,rdx
  420e21:	jmp    420d87 <xmlStrEqual@plt+0x1ce47>
  420e26:	cmp    QWORD PTR [rbp+0x0],r13
  420e2a:	jne    420f1b <xmlStrEqual@plt+0x1cfdb>
  420e30:	mov    QWORD PTR [rbp+0x0],rax
  420e34:	jmp    420db7 <xmlStrEqual@plt+0x1ce77>
  420e39:	mov    QWORD PTR [rdx+0x18],rax
  420e3d:	jmp    420db7 <xmlStrEqual@plt+0x1ce77>
  420e42:	lea    rcx,[rip+0x2cd67]        # 44dbb0 <xmlStrEqual@plt+0x49c70>
  420e49:	mov    edx,0x32e
  420e4e:	lea    rsi,[rip+0x2ca92]        # 44d8e7 <xmlStrEqual@plt+0x499a7>
  420e55:	lea    rdi,[rip+0x2cb31]        # 44d98d <xmlStrEqual@plt+0x49a4d>
  420e5c:	call   403a60 <__assert_fail@plt>
  420e61:	lea    rcx,[rip+0x2cd48]        # 44dbb0 <xmlStrEqual@plt+0x49c70>
  420e68:	mov    edx,0x32f
  420e6d:	lea    rsi,[rip+0x2ca73]        # 44d8e7 <xmlStrEqual@plt+0x499a7>
  420e74:	lea    rdi,[rip+0x2cb98]        # 44da13 <xmlStrEqual@plt+0x49ad3>
  420e7b:	call   403a60 <__assert_fail@plt>
  420e80:	lea    rcx,[rip+0x2cd29]        # 44dbb0 <xmlStrEqual@plt+0x49c70>
  420e87:	mov    edx,0x38d
  420e8c:	lea    rsi,[rip+0x2ca54]        # 44d8e7 <xmlStrEqual@plt+0x499a7>
  420e93:	lea    rdi,[rip+0x2cb84]        # 44da1e <xmlStrEqual@plt+0x49ade>
  420e9a:	call   403a60 <__assert_fail@plt>
  420e9f:	lea    rcx,[rip+0x2cd0a]        # 44dbb0 <xmlStrEqual@plt+0x49c70>
  420ea6:	mov    edx,0x384
  420eab:	lea    rsi,[rip+0x2ca35]        # 44d8e7 <xmlStrEqual@plt+0x499a7>
  420eb2:	lea    rdi,[rip+0x2cb48]        # 44da01 <xmlStrEqual@plt+0x49ac1>
  420eb9:	call   403a60 <__assert_fail@plt>
  420ebe:	lea    rcx,[rip+0x2cceb]        # 44dbb0 <xmlStrEqual@plt+0x49c70>
  420ec5:	mov    edx,0x356
  420eca:	lea    rsi,[rip+0x2ca16]        # 44d8e7 <xmlStrEqual@plt+0x499a7>
  420ed1:	lea    rdi,[rip+0x2cb46]        # 44da1e <xmlStrEqual@plt+0x49ade>
  420ed8:	call   403a60 <__assert_fail@plt>
  420edd:	lea    rcx,[rip+0x2cccc]        # 44dbb0 <xmlStrEqual@plt+0x49c70>
  420ee4:	mov    edx,0x34c
  420ee9:	lea    rsi,[rip+0x2c9f7]        # 44d8e7 <xmlStrEqual@plt+0x499a7>
  420ef0:	lea    rdi,[rip+0x2cb0a]        # 44da01 <xmlStrEqual@plt+0x49ac1>
  420ef7:	call   403a60 <__assert_fail@plt>
  420efc:	lea    rcx,[rip+0x2ccad]        # 44dbb0 <xmlStrEqual@plt+0x49c70>
  420f03:	mov    edx,0x368
  420f08:	lea    rsi,[rip+0x2c9d8]        # 44d8e7 <xmlStrEqual@plt+0x499a7>
  420f0f:	lea    rdi,[rip+0x2cb33]        # 44da49 <xmlStrEqual@plt+0x49b09>
  420f16:	call   403a60 <__assert_fail@plt>
  420f1b:	lea    rcx,[rip+0x2cc8e]        # 44dbb0 <xmlStrEqual@plt+0x49c70>
  420f22:	mov    edx,0x361
  420f27:	lea    rsi,[rip+0x2c9b9]        # 44d8e7 <xmlStrEqual@plt+0x499a7>
  420f2e:	lea    rdi,[rip+0x2cafb]        # 44da30 <xmlStrEqual@plt+0x49af0>
  420f35:	call   403a60 <__assert_fail@plt>
  420f3a:	nop    WORD PTR [rax+rax*1+0x0]
  420f40:	endbr64 
  420f44:	push   rbp
  420f45:	mov    rbp,rdi
  420f48:	mov    edi,esi
  420f4a:	push   rbx
  420f4b:	mov    rsi,rdx
  420f4e:	sub    rsp,0x8
  420f52:	call   41fdd0 <xmlStrEqual@plt+0x1be90>
  420f57:	mov    rbx,rax
  420f5a:	mov    rdi,rbp
  420f5d:	mov    rsi,rax
  420f60:	call   4206f0 <xmlStrEqual@plt+0x1c7b0>
  420f65:	mov    rdi,rbx
  420f68:	mov    rbp,rax
  420f6b:	call   420000 <xmlStrEqual@plt+0x1c0c0>
  420f70:	add    rsp,0x8
  420f74:	pop    rbx
  420f75:	mov    rax,rbp
  420f78:	pop    rbp
  420f79:	ret    
  420f7a:	nop    WORD PTR [rax+rax*1+0x0]
  420f80:	endbr64 
  420f84:	push   rbp
  420f85:	mov    rbp,rdi
  420f88:	mov    edi,esi
  420f8a:	push   rbx
  420f8b:	mov    rsi,rdx
  420f8e:	sub    rsp,0x8
  420f92:	call   41fdd0 <xmlStrEqual@plt+0x1be90>
  420f97:	mov    rbx,rax
  420f9a:	mov    rdi,rbp
  420f9d:	mov    rsi,rax
  420fa0:	call   4203c0 <xmlStrEqual@plt+0x1c480>
  420fa5:	mov    rdi,rbx
  420fa8:	mov    rbp,rax
  420fab:	call   420000 <xmlStrEqual@plt+0x1c0c0>
  420fb0:	add    rsp,0x8
  420fb4:	pop    rbx
  420fb5:	mov    rax,rbp
  420fb8:	pop    rbp
  420fb9:	ret    
  420fba:	nop    WORD PTR [rax+rax*1+0x0]
  420fc0:	endbr64 
  420fc4:	push   rbx
  420fc5:	mov    rbx,rdi
  420fc8:	call   420f80 <xmlStrEqual@plt+0x1d040>
  420fcd:	test   rax,rax
  420fd0:	je     420fe0 <xmlStrEqual@plt+0x1d0a0>
  420fd2:	mov    rdi,rbx
  420fd5:	mov    rsi,rax
  420fd8:	pop    rbx
  420fd9:	jmp    420c90 <xmlStrEqual@plt+0x1cd50>
  420fde:	xchg   ax,ax
  420fe0:	pop    rbx
  420fe1:	ret    
  420fe2:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  420fed:	nop    DWORD PTR [rax]
  420ff0:	endbr64 
  420ff4:	push   r12
  420ff6:	push   rbp
  420ff7:	mov    rbp,rdi
  420ffa:	mov    edi,esi
  420ffc:	push   rbx
  420ffd:	mov    rsi,rdx
  421000:	call   41fdd0 <xmlStrEqual@plt+0x1be90>
  421005:	movzx  r12d,WORD PTR [rax+0x2]
  42100a:	mov    rdi,rax
  42100d:	mov    rbx,rax
  421010:	call   41fcd0 <xmlStrEqual@plt+0x1bd90>
  421015:	mov    rdx,rax
  421018:	mov    ecx,r12d
  42101b:	lea    rsi,[rip+0x2ca43]        # 44da65 <xmlStrEqual@plt+0x49b25>
  421022:	mov    edi,0x1
  421027:	xor    eax,eax
  421029:	call   4037d0 <__printf_chk@plt>
  42102e:	mov    rdi,rbp
  421031:	mov    rsi,rbx
  421034:	call   4206e0 <xmlStrEqual@plt+0x1c7a0>
  421039:	mov    rbp,rax
  42103c:	test   rax,rax
  42103f:	je     421080 <xmlStrEqual@plt+0x1d140>
  421041:	mov    rdi,QWORD PTR [rax+0x8]
  421045:	movzx  r12d,WORD PTR [rdi+0x2]
  42104a:	call   41fcd0 <xmlStrEqual@plt+0x1bd90>
  42104f:	mov    rdx,rax
  421052:	mov    ecx,r12d
  421055:	lea    rsi,[rip+0x2ca3c]        # 44da98 <xmlStrEqual@plt+0x49b58>
  42105c:	mov    edi,0x1
  421061:	xor    eax,eax
  421063:	call   4037d0 <__printf_chk@plt>
  421068:	mov    rdi,rbx
  42106b:	call   420000 <xmlStrEqual@plt+0x1c0c0>
  421070:	pop    rbx
  421071:	mov    rax,rbp
  421074:	pop    rbp
  421075:	pop    r12
  421077:	ret    
  421078:	nop    DWORD PTR [rax+rax*1+0x0]
  421080:	lea    rdi,[rip+0x2c9f6]        # 44da7d <xmlStrEqual@plt+0x49b3d>
  421087:	call   403da0 <puts@plt>
  42108c:	mov    rdi,rbx
  42108f:	call   420000 <xmlStrEqual@plt+0x1c0c0>
  421094:	pop    rbx
  421095:	mov    rax,rbp
  421098:	pop    rbp
  421099:	pop    r12
  42109b:	ret    
  42109c:	nop    DWORD PTR [rax+0x0]
  4210a0:	push   rbx
  4210a1:	mov    rbx,rdi
  4210a4:	mov    rax,QWORD PTR [rdi+0x10]
  4210a8:	mov    rdi,QWORD PTR [rdi]
  4210ab:	test   rax,rax
  4210ae:	je     4210c6 <xmlStrEqual@plt+0x1d186>
  4210b0:	cmp    rax,rdi
  4210b3:	je     4210cb <xmlStrEqual@plt+0x1d18b>
  4210b5:	cmp    rax,QWORD PTR [rbx+0x8]
  4210b9:	je     4210c6 <xmlStrEqual@plt+0x1d186>
  4210bb:	mov    rdi,rax
  4210be:	call   4037b0 <free@plt>
  4210c3:	mov    rdi,QWORD PTR [rbx]
  4210c6:	test   rdi,rdi
  4210c9:	je     4210d0 <xmlStrEqual@plt+0x1d190>
  4210cb:	call   4037b0 <free@plt>
  4210d0:	mov    rdi,QWORD PTR [rbx+0x8]
  4210d4:	test   rdi,rdi
  4210d7:	je     4210de <xmlStrEqual@plt+0x1d19e>
  4210d9:	call   4037b0 <free@plt>
  4210de:	mov    QWORD PTR [rbx],0x0
  4210e5:	mov    QWORD PTR [rbx+0x8],0x0
  4210ed:	mov    QWORD PTR [rbx+0x10],0x0
  4210f5:	mov    QWORD PTR [rbx+0x18],0x0
  4210fd:	mov    DWORD PTR [rbx+0x20],0x0
  421104:	pop    rbx
  421105:	ret    
  421106:	nop    WORD PTR cs:[rax+rax*1+0x0]
  421110:	push   r14
  421112:	mov    r14,rcx
  421115:	push   r13
  421117:	push   r12
  421119:	mov    r12d,edx
  42111c:	push   rbp
  42111d:	mov    ebp,esi
  42111f:	push   rbx
  421120:	mov    rbx,rdi
  421123:	test   esi,esi
  421125:	jne    4211e3 <xmlStrEqual@plt+0x1d2a3>
  42112b:	xor    r13d,r13d
  42112e:	xor    edi,edi
  421130:	cmp    QWORD PTR [rbx],0x0
  421134:	mov    eax,0x1
  421139:	je     421156 <xmlStrEqual@plt+0x1d216>
  42113b:	nop    DWORD PTR [rax+rax*1+0x0]
  421140:	mov    r13d,eax
  421143:	lea    rdi,[rax*8+0x0]
  42114b:	inc    rax
  42114e:	cmp    QWORD PTR [rbx+rax*8-0x8],0x0
  421154:	jne    421140 <xmlStrEqual@plt+0x1d200>
  421156:	call   435000 <xmlStrEqual@plt+0x310c0>
  42115b:	mov    rsi,rax
  42115e:	mov    rax,QWORD PTR [rbx]
  421161:	mov    DWORD PTR [r14],r13d
  421164:	xor    r9d,r9d
  421167:	lea    r10,[rsi+0x8]
  42116b:	test   rax,rax
  42116e:	jne    421191 <xmlStrEqual@plt+0x1d251>
  421170:	jmp    4211d7 <xmlStrEqual@plt+0x1d297>
  421172:	nop    WORD PTR [rax+rax*1+0x0]
  421178:	mov    rdx,QWORD PTR [rbx]
  42117b:	movsxd rax,r9d
  42117e:	mov    QWORD PTR [rsi+rax*8],rdx
  421182:	inc    r9d
  421185:	add    rbx,0x8
  421189:	mov    rax,QWORD PTR [rbx]
  42118c:	test   rax,rax
  42118f:	je     4211d7 <xmlStrEqual@plt+0x1d297>
  421191:	test   ebp,ebp
  421193:	je     421178 <xmlStrEqual@plt+0x1d238>
  421195:	movzx  eax,BYTE PTR [rax+0xc]
  421199:	cdq    
  42119a:	idiv   r12d
  42119d:	test   eax,eax
  42119f:	jle    421185 <xmlStrEqual@plt+0x1d245>
  4211a1:	movsxd rdi,r9d
  4211a4:	lea    edx,[rax-0x1]
  4211a7:	add    rdx,rdi
  4211aa:	lea    rcx,[rsi+rdi*8]
  4211ae:	lea    r8,[r10+rdx*8]
  4211b2:	nop    WORD PTR [rax+rax*1+0x0]
  4211b8:	mov    rdi,QWORD PTR [rbx]
  4211bb:	add    rcx,0x8
  4211bf:	mov    QWORD PTR [rcx-0x8],rdi
  4211c3:	cmp    r8,rcx
  4211c6:	jne    4211b8 <xmlStrEqual@plt+0x1d278>
  4211c8:	add    rbx,0x8
  4211cc:	add    r9d,eax
  4211cf:	mov    rax,QWORD PTR [rbx]
  4211d2:	test   rax,rax
  4211d5:	jne    421191 <xmlStrEqual@plt+0x1d251>
  4211d7:	pop    rbx
  4211d8:	pop    rbp
  4211d9:	pop    r12
  4211db:	pop    r13
  4211dd:	mov    rax,rsi
  4211e0:	pop    r14
  4211e2:	ret    
  4211e3:	mov    eax,esi
  4211e5:	cdq    
  4211e6:	idiv   r12d
  4211e9:	movsxd rdi,eax
  4211ec:	mov    r13,rdi
  4211ef:	shl    rdi,0x3
  4211f3:	jmp    421156 <xmlStrEqual@plt+0x1d216>
  4211f8:	nop    DWORD PTR [rax+rax*1+0x0]
  421200:	mov    rcx,QWORD PTR [rdi+0x8]
  421204:	cmp    rdi,rcx
  421207:	je     421298 <xmlStrEqual@plt+0x1d358>
  42120d:	xor    r10d,r10d
  421210:	mov    eax,0xff
  421215:	jmp    421266 <xmlStrEqual@plt+0x1d326>
  421217:	nop    WORD PTR [rax+rax*1+0x0]
  421220:	cmp    BYTE PTR [r8+0xa],0x0
  421225:	je     42125d <xmlStrEqual@plt+0x1d31d>
  421227:	cmp    r9d,eax
  42122a:	jne    421244 <xmlStrEqual@plt+0x1d304>
  42122c:	movsxd r9,r10d
  42122f:	mov    QWORD PTR [rsi+r9*8],r8
  421233:	mov    QWORD PTR [rsi+r9*8+0x8],0x0
  42123c:	inc    r10d
  42123f:	movzx  r9d,BYTE PTR [r8+0xb]
  421244:	cmp    eax,r9d
  421247:	jle    42125d <xmlStrEqual@plt+0x1d31d>
  421249:	mov    QWORD PTR [rsi],r8
  42124c:	mov    QWORD PTR [rsi+0x8],0x0
  421254:	mov    eax,r9d
  421257:	mov    r10d,0x1
  42125d:	mov    rcx,QWORD PTR [rcx+0x8]
  421261:	cmp    rdi,rcx
  421264:	je     421290 <xmlStrEqual@plt+0x1d350>
  421266:	mov    r8,QWORD PTR [rcx+0x10]
  42126a:	cmp    BYTE PTR [r8+0x8],0x0
  42126f:	je     42125d <xmlStrEqual@plt+0x1d31d>
  421271:	movzx  r9d,BYTE PTR [r8+0xb]
  421276:	cmp    r9b,0xff
  42127a:	je     42125d <xmlStrEqual@plt+0x1d31d>
  42127c:	test   dl,dl
  42127e:	jne    421220 <xmlStrEqual@plt+0x1d2e0>
  421280:	cmp    BYTE PTR [r8+0x9],0x0
  421285:	jne    421227 <xmlStrEqual@plt+0x1d2e7>
  421287:	mov    rcx,QWORD PTR [rcx+0x8]
  42128b:	cmp    rdi,rcx
  42128e:	jne    421266 <xmlStrEqual@plt+0x1d326>
  421290:	ret    
  421291:	nop    DWORD PTR [rax+0x0]
  421298:	mov    eax,0xff
  42129d:	ret    
  42129e:	xchg   ax,ax
  4212a0:	endbr64 
  4212a4:	push   rbx
  4212a5:	mov    rbx,rdi
  4212a8:	call   4210a0 <xmlStrEqual@plt+0x1d160>
  4212ad:	mov    rdi,rbx
  4212b0:	pop    rbx
  4212b1:	jmp    4037b0 <free@plt>
  4212b6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4212c0:	endbr64 
  4212c4:	push   r15
  4212c6:	push   r14
  4212c8:	mov    r14d,esi
  4212cb:	push   r13
  4212cd:	push   r12
  4212cf:	push   rbp
  4212d0:	push   rbx
  4212d1:	sub    rsp,0xbc8
  4212d8:	mov    rax,QWORD PTR fs:0x28
  4212e1:	mov    QWORD PTR [rsp+0xbb8],rax
  4212e9:	xor    eax,eax
  4212eb:	cmp    esi,0x4
  4212ee:	jle    421330 <xmlStrEqual@plt+0x1d3f0>
  4212f0:	mov    rbp,0x469e3c
  4212f7:	mov    eax,DWORD PTR [rbp+0x0]
  4212fa:	add    eax,0x4
  4212fd:	cmp    esi,eax
  4212ff:	jle    421330 <xmlStrEqual@plt+0x1d3f0>
  421301:	mov    rax,QWORD PTR [rsp+0xbb8]
  421309:	xor    rax,QWORD PTR fs:0x28
  421312:	jne    421760 <xmlStrEqual@plt+0x1d820>
  421318:	add    rsp,0xbc8
  42131f:	pop    rbx
  421320:	pop    rbp
  421321:	pop    r12
  421323:	pop    r13
  421325:	pop    r14
  421327:	pop    r15
  421329:	ret    
  42132a:	nop    WORD PTR [rax+rax*1+0x0]
  421330:	mov    ebp,DWORD PTR [rsp+0xc18]
  421337:	mov    r13d,DWORD PTR [rsp+0xc1c]
  42133f:	mov    r12d,DWORD PTR [rsp+0xc20]
  421347:	call   424d40 <xmlStrEqual@plt+0x20e00>
  42134c:	mov    rdx,rax
  42134f:	lea    rsi,[rip+0x2c942]        # 44dc98 <xmlStrEqual@plt+0x49d58>
  421356:	xor    eax,eax
  421358:	mov    edi,r14d
  42135b:	mov    rbx,rsp
  42135e:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  421363:	xor    eax,eax
  421365:	mov    r8d,ebp
  421368:	lea    rcx,[rip+0x2c951]        # 44dcc0 <xmlStrEqual@plt+0x49d80>
  42136f:	mov    edx,0xbb8
  421374:	mov    esi,0x1
  421379:	mov    rdi,rbx
  42137c:	call   403a30 <__sprintf_chk@plt>
  421381:	test   ebp,ebp
  421383:	jle    42146a <xmlStrEqual@plt+0x1d52a>
  421389:	lea    eax,[rbp-0x1]
  42138c:	lea    r15,[rax*8+0x8]
  421394:	xor    ebp,ebp
  421396:	jmp    421414 <xmlStrEqual@plt+0x1d4d4>
  421398:	nop    DWORD PTR [rax+rax*1+0x0]
  4213a0:	mov    rax,QWORD PTR [rsp+0xc00]
  4213a8:	mov    rax,QWORD PTR [rax+rbp*1]
  4213ac:	mov    rdi,QWORD PTR [rax]
  4213af:	call   424d40 <xmlStrEqual@plt+0x20e00>
  4213b4:	mov    r8,rax
  4213b7:	mov    rdi,rbx
  4213ba:	mov    ecx,DWORD PTR [rdi]
  4213bc:	add    rdi,0x4
  4213c0:	lea    edx,[rcx-0x1010101]
  4213c6:	andn   edx,ecx,edx
  4213cb:	and    edx,0x80808080
  4213d1:	je     4213ba <xmlStrEqual@plt+0x1d47a>
  4213d3:	mov    ecx,edx
  4213d5:	shr    ecx,0x10
  4213d8:	test   edx,0x8080
  4213de:	cmove  edx,ecx
  4213e1:	lea    rcx,[rdi+0x2]
  4213e5:	cmove  rdi,rcx
  4213e9:	mov    eax,edx
  4213eb:	add    al,dl
  4213ed:	sbb    rdi,0x3
  4213f1:	lea    rcx,[rip+0x2c9e6]        # 44ddde <xmlStrEqual@plt+0x49e9e>
  4213f8:	mov    rdx,0xffffffffffffffff
  4213ff:	mov    esi,0x1
  421404:	xor    eax,eax
  421406:	add    rbp,0x8
  42140a:	call   403a30 <__sprintf_chk@plt>
  42140f:	cmp    r15,rbp
  421412:	je     42146a <xmlStrEqual@plt+0x1d52a>
  421414:	mov    rdx,rbx
  421417:	mov    ecx,DWORD PTR [rdx]
  421419:	add    rdx,0x4
  42141d:	lea    eax,[rcx-0x1010101]
  421423:	andn   eax,ecx,eax
  421428:	and    eax,0x80808080
  42142d:	je     421417 <xmlStrEqual@plt+0x1d4d7>
  42142f:	mov    ecx,eax
  421431:	shr    ecx,0x10
  421434:	test   eax,0x8080
  421439:	cmove  eax,ecx
  42143c:	lea    rcx,[rdx+0x2]
  421440:	cmove  rdx,rcx
  421444:	mov    esi,eax
  421446:	add    sil,al
  421449:	sbb    rdx,0x3
  42144d:	sub    rdx,rbx
  421450:	cmp    rdx,0xb22
  421457:	jbe    4213a0 <xmlStrEqual@plt+0x1d460>
  42145d:	add    rdx,rbx
  421460:	mov    DWORD PTR [rdx],0x2e2e2e20
  421466:	mov    BYTE PTR [rdx+0x4],0x0
  42146a:	cmp    r14d,0x4
  42146e:	jle    4216e0 <xmlStrEqual@plt+0x1d7a0>
  421474:	mov    rbp,0x469e3c
  42147b:	mov    eax,DWORD PTR [rbp+0x0]
  42147e:	add    eax,0x4
  421481:	cmp    r14d,eax
  421484:	jle    4216e0 <xmlStrEqual@plt+0x1d7a0>
  42148a:	xor    eax,eax
  42148c:	mov    r8d,r13d
  42148f:	lea    rcx,[rip+0x2c852]        # 44dce8 <xmlStrEqual@plt+0x49da8>
  421496:	mov    edx,0xbb8
  42149b:	mov    esi,0x1
  4214a0:	mov    rdi,rbx
  4214a3:	call   403a30 <__sprintf_chk@plt>
  4214a8:	test   r13d,r13d
  4214ab:	jle    421596 <xmlStrEqual@plt+0x1d656>
  4214b1:	xor    ebp,ebp
  4214b3:	lea    r15,[rip+0x2c924]        # 44ddde <xmlStrEqual@plt+0x49e9e>
  4214ba:	jmp    42152f <xmlStrEqual@plt+0x1d5ef>
  4214bc:	nop    DWORD PTR [rax+0x0]
  4214c0:	mov    rax,QWORD PTR [rsp+0xc08]
  4214c8:	mov    rax,QWORD PTR [rax+rbp*8]
  4214cc:	mov    rdi,QWORD PTR [rax]
  4214cf:	call   424d40 <xmlStrEqual@plt+0x20e00>
  4214d4:	mov    r8,rax
  4214d7:	mov    rdi,rbx
  4214da:	mov    ecx,DWORD PTR [rdi]
  4214dc:	add    rdi,0x4
  4214e0:	lea    edx,[rcx-0x1010101]
  4214e6:	andn   edx,ecx,edx
  4214eb:	and    edx,0x80808080
  4214f1:	je     4214da <xmlStrEqual@plt+0x1d59a>
  4214f3:	mov    ecx,edx
  4214f5:	shr    ecx,0x10
  4214f8:	test   edx,0x8080
  4214fe:	cmove  edx,ecx
  421501:	lea    rcx,[rdi+0x2]
  421505:	cmove  rdi,rcx
  421509:	mov    eax,edx
  42150b:	add    al,dl
  42150d:	sbb    rdi,0x3
  421511:	mov    rcx,r15
  421514:	mov    rdx,0xffffffffffffffff
  42151b:	mov    esi,0x1
  421520:	xor    eax,eax
  421522:	inc    rbp
  421525:	call   403a30 <__sprintf_chk@plt>
  42152a:	cmp    r13d,ebp
  42152d:	jle    421585 <xmlStrEqual@plt+0x1d645>
  42152f:	mov    rdx,rbx
  421532:	mov    ecx,DWORD PTR [rdx]
  421534:	add    rdx,0x4
  421538:	lea    eax,[rcx-0x1010101]
  42153e:	andn   eax,ecx,eax
  421543:	and    eax,0x80808080
  421548:	je     421532 <xmlStrEqual@plt+0x1d5f2>
  42154a:	mov    ecx,eax
  42154c:	shr    ecx,0x10
  42154f:	test   eax,0x8080
  421554:	cmove  eax,ecx
  421557:	lea    rcx,[rdx+0x2]
  42155b:	cmove  rdx,rcx
  42155f:	mov    esi,eax
  421561:	add    sil,al
  421564:	sbb    rdx,0x3
  421568:	sub    rdx,rbx
  42156b:	cmp    rdx,0xb54
  421572:	jbe    4214c0 <xmlStrEqual@plt+0x1d580>
  421578:	add    rdx,rbx
  42157b:	mov    DWORD PTR [rdx],0x2e2e2e20
  421581:	mov    BYTE PTR [rdx+0x4],0x0
  421585:	cmp    r14d,0x4
  421589:	jle    421720 <xmlStrEqual@plt+0x1d7e0>
  42158f:	mov    rbp,0x469e3c
  421596:	mov    eax,DWORD PTR [rbp+0x0]
  421599:	add    eax,0x4
  42159c:	cmp    r14d,eax
  42159f:	jle    421720 <xmlStrEqual@plt+0x1d7e0>
  4215a5:	xor    eax,eax
  4215a7:	mov    r8d,r12d
  4215aa:	lea    rcx,[rip+0x2c75f]        # 44dd10 <xmlStrEqual@plt+0x49dd0>
  4215b1:	mov    edx,0xbb8
  4215b6:	mov    esi,0x1
  4215bb:	mov    rdi,rbx
  4215be:	call   403a30 <__sprintf_chk@plt>
  4215c3:	test   r12d,r12d
  4215c6:	jle    4216b2 <xmlStrEqual@plt+0x1d772>
  4215cc:	xor    ebp,ebp
  4215ce:	lea    r13,[rip+0x2c809]        # 44ddde <xmlStrEqual@plt+0x49e9e>
  4215d5:	jmp    42164f <xmlStrEqual@plt+0x1d70f>
  4215d7:	nop    WORD PTR [rax+rax*1+0x0]
  4215e0:	mov    rax,QWORD PTR [rsp+0xc10]
  4215e8:	mov    rax,QWORD PTR [rax+rbp*8]
  4215ec:	mov    rdi,QWORD PTR [rax]
  4215ef:	call   424d40 <xmlStrEqual@plt+0x20e00>
  4215f4:	mov    r8,rax
  4215f7:	mov    rdi,rbx
  4215fa:	mov    ecx,DWORD PTR [rdi]
  4215fc:	add    rdi,0x4
  421600:	lea    edx,[rcx-0x1010101]
  421606:	andn   edx,ecx,edx
  42160b:	and    edx,0x80808080
  421611:	je     4215fa <xmlStrEqual@plt+0x1d6ba>
  421613:	mov    ecx,edx
  421615:	shr    ecx,0x10
  421618:	test   edx,0x8080
  42161e:	cmove  edx,ecx
  421621:	lea    rcx,[rdi+0x2]
  421625:	cmove  rdi,rcx
  421629:	mov    eax,edx
  42162b:	add    al,dl
  42162d:	sbb    rdi,0x3
  421631:	mov    rcx,r13
  421634:	mov    rdx,0xffffffffffffffff
  42163b:	mov    esi,0x1
  421640:	xor    eax,eax
  421642:	inc    rbp
  421645:	call   403a30 <__sprintf_chk@plt>
  42164a:	cmp    r12d,ebp
  42164d:	jle    4216a5 <xmlStrEqual@plt+0x1d765>
  42164f:	mov    rdx,rbx
  421652:	mov    ecx,DWORD PTR [rdx]
  421654:	add    rdx,0x4
  421658:	lea    eax,[rcx-0x1010101]
  42165e:	andn   eax,ecx,eax
  421663:	and    eax,0x80808080
  421668:	je     421652 <xmlStrEqual@plt+0x1d712>
  42166a:	mov    ecx,eax
  42166c:	shr    ecx,0x10
  42166f:	test   eax,0x8080
  421674:	cmove  eax,ecx
  421677:	lea    rcx,[rdx+0x2]
  42167b:	cmove  rdx,rcx
  42167f:	mov    esi,eax
  421681:	add    sil,al
  421684:	sbb    rdx,0x3
  421688:	sub    rdx,rbx
  42168b:	cmp    rdx,0xb86
  421692:	jbe    4215e0 <xmlStrEqual@plt+0x1d6a0>
  421698:	add    rdx,rbx
  42169b:	mov    DWORD PTR [rdx],0x2e2e2e20
  4216a1:	mov    BYTE PTR [rdx+0x4],0x0
  4216a5:	cmp    r14d,0x4
  4216a9:	jle    4216c1 <xmlStrEqual@plt+0x1d781>
  4216ab:	mov    rbp,0x469e3c
  4216b2:	mov    eax,DWORD PTR [rbp+0x0]
  4216b5:	add    eax,0x4
  4216b8:	cmp    r14d,eax
  4216bb:	jg     421301 <xmlStrEqual@plt+0x1d3c1>
  4216c1:	mov    rdx,rbx
  4216c4:	lea    rsi,[rip+0x26f9f]        # 44866a <xmlStrEqual@plt+0x4472a>
  4216cb:	mov    edi,r14d
  4216ce:	xor    eax,eax
  4216d0:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  4216d5:	jmp    421301 <xmlStrEqual@plt+0x1d3c1>
  4216da:	nop    WORD PTR [rax+rax*1+0x0]
  4216e0:	xor    eax,eax
  4216e2:	mov    rdx,rbx
  4216e5:	lea    rsi,[rip+0x26f7e]        # 44866a <xmlStrEqual@plt+0x4472a>
  4216ec:	mov    edi,r14d
  4216ef:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  4216f4:	xor    eax,eax
  4216f6:	mov    r8d,r13d
  4216f9:	lea    rcx,[rip+0x2c5e8]        # 44dce8 <xmlStrEqual@plt+0x49da8>
  421700:	mov    edx,0xbb8
  421705:	mov    esi,0x1
  42170a:	mov    rdi,rbx
  42170d:	call   403a30 <__sprintf_chk@plt>
  421712:	test   r13d,r13d
  421715:	jg     4214b1 <xmlStrEqual@plt+0x1d571>
  42171b:	jmp    421585 <xmlStrEqual@plt+0x1d645>
  421720:	xor    eax,eax
  421722:	mov    rdx,rbx
  421725:	lea    rsi,[rip+0x26f3e]        # 44866a <xmlStrEqual@plt+0x4472a>
  42172c:	mov    edi,r14d
  42172f:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  421734:	xor    eax,eax
  421736:	mov    r8d,r12d
  421739:	lea    rcx,[rip+0x2c5d0]        # 44dd10 <xmlStrEqual@plt+0x49dd0>
  421740:	mov    edx,0xbb8
  421745:	mov    esi,0x1
  42174a:	mov    rdi,rbx
  42174d:	call   403a30 <__sprintf_chk@plt>
  421752:	test   r12d,r12d
  421755:	jg     4215cc <xmlStrEqual@plt+0x1d68c>
  42175b:	jmp    4216a5 <xmlStrEqual@plt+0x1d765>
  421760:	call   403c00 <__stack_chk_fail@plt>
  421765:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  421770:	endbr64 
  421774:	push   r15
  421776:	mov    r15,rsi
  421779:	push   r14
  42177b:	push   r13
  42177d:	push   r12
  42177f:	mov    r12,rdi
  421782:	push   rbp
  421783:	mov    rbp,rdx
  421786:	push   rbx
  421787:	mov    ebx,ecx
  421789:	sub    rsp,0x338
  421790:	mov    rax,QWORD PTR fs:0x28
  421799:	mov    QWORD PTR [rsp+0x328],rax
  4217a1:	xor    eax,eax
  4217a3:	call   42dc90 <xmlStrEqual@plt+0x29d50>
  4217a8:	mov    r14,rax
  4217ab:	call   42dc90 <xmlStrEqual@plt+0x29d50>
  4217b0:	mov    rdi,r12
  4217b3:	mov    r13,rax
  4217b6:	mov    QWORD PTR [rsp+0x10],0x0
  4217bf:	mov    QWORD PTR [rsp+0x118],0x0
  4217cb:	call   4210a0 <xmlStrEqual@plt+0x1d160>
  4217d0:	mov    r8,0x421d00
  4217d7:	mov    rdx,r14
  4217da:	mov    rcx,r13
  4217dd:	mov    rsi,rbp
  4217e0:	mov    rdi,r15
  4217e3:	call   422030 <xmlStrEqual@plt+0x1e0f0>
  4217e8:	mov    edx,DWORD PTR [r14+0x18]
  4217ec:	test   edx,edx
  4217ee:	jne    421940 <xmlStrEqual@plt+0x1da00>
  4217f4:	mov    DWORD PTR [rsp],0xff
  4217fb:	xor    ebp,ebp
  4217fd:	xor    r8d,r8d
  421800:	mov    eax,DWORD PTR [r13+0x18]
  421804:	test   eax,eax
  421806:	jne    4218b0 <xmlStrEqual@plt+0x1d970>
  42180c:	xor    ebx,ebx
  42180e:	xor    r10d,r10d
  421811:	mov    r9d,0xff
  421817:	mov    rax,QWORD PTR [r12]
  42181b:	test   rax,rax
  42181e:	je     421843 <xmlStrEqual@plt+0x1d903>
  421820:	mov    rdx,QWORD PTR [r12+0x8]
  421825:	test   rdx,rdx
  421828:	je     421843 <xmlStrEqual@plt+0x1d903>
  42182a:	cmp    DWORD PTR [rsp],r9d
  42182e:	jge    4219c0 <xmlStrEqual@plt+0x1da80>
  421834:	mov    QWORD PTR [r12+0x10],rax
  421839:	mov    eax,DWORD PTR [r12+0x18]
  42183e:	mov    DWORD PTR [r12+0x20],eax
  421843:	sub    rsp,0x8
  421847:	push   QWORD PTR [r12+0x20]
  42184c:	mov    esi,0x5
  421851:	mov    rdi,r15
  421854:	push   QWORD PTR [r12+0x18]
  421859:	push   QWORD PTR [r12+0x10]
  42185e:	push   QWORD PTR [r12+0x8]
  421863:	push   QWORD PTR [r12]
  421867:	call   4212c0 <xmlStrEqual@plt+0x1d380>
  42186c:	add    rsp,0x30
  421870:	mov    rdi,r14
  421873:	call   42e2b0 <xmlStrEqual@plt+0x2a370>
  421878:	mov    rdi,r13
  42187b:	call   42e2b0 <xmlStrEqual@plt+0x2a370>
  421880:	mov    rdi,QWORD PTR [rsp+0x328]
  421888:	xor    rdi,QWORD PTR fs:0x28
  421891:	mov    eax,0x1
  421896:	jne    421b63 <xmlStrEqual@plt+0x1dc23>
  42189c:	add    rsp,0x338
  4218a3:	pop    rbx
  4218a4:	pop    rbp
  4218a5:	pop    r12
  4218a7:	pop    r13
  4218a9:	pop    r14
  4218ab:	pop    r15
  4218ad:	ret    
  4218ae:	xchg   ax,ax
  4218b0:	lea    r11,[rsp+0x10]
  4218b5:	lea    rsi,[r11+0x108]
  4218bc:	movzx  edx,bl
  4218bf:	mov    rdi,r13
  4218c2:	mov    DWORD PTR [rsp+0x4],r8d
  4218c7:	call   421200 <xmlStrEqual@plt+0x1d2c0>
  4218cc:	cmp    eax,0xff
  4218d1:	mov    r9d,eax
  4218d4:	mov    r8d,DWORD PTR [rsp+0x4]
  4218d9:	je     42180c <xmlStrEqual@plt+0x1d8cc>
  4218df:	mov    rax,QWORD PTR [rsp+0x118]
  4218e7:	test   rax,rax
  4218ea:	je     421b40 <xmlStrEqual@plt+0x1dc00>
  4218f0:	movzx  edx,BYTE PTR [rax+0xc]
  4218f4:	lea    rsi,[r11+0x110]
  4218fb:	mov    ebx,edx
  4218fd:	xor    r10d,r10d
  421900:	mov    ecx,edx
  421902:	add    r10d,edx
  421905:	test   edx,edx
  421907:	je     421925 <xmlStrEqual@plt+0x1d9e5>
  421909:	test   ebx,ebx
  42190b:	jne    42191a <xmlStrEqual@plt+0x1d9da>
  42190d:	jmp    421ad8 <xmlStrEqual@plt+0x1db98>
  421912:	nop    WORD PTR [rax+rax*1+0x0]
  421918:	mov    ecx,edx
  42191a:	mov    eax,ebx
  42191c:	cdq    
  42191d:	idiv   ecx
  42191f:	mov    ebx,ecx
  421921:	test   edx,edx
  421923:	jne    421918 <xmlStrEqual@plt+0x1d9d8>
  421925:	add    rsi,0x8
  421929:	mov    rax,QWORD PTR [rsi-0x8]
  42192d:	test   rax,rax
  421930:	je     421af0 <xmlStrEqual@plt+0x1dbb0>
  421936:	movzx  edx,BYTE PTR [rax+0xc]
  42193a:	jmp    421900 <xmlStrEqual@plt+0x1d9c0>
  42193c:	nop    DWORD PTR [rax+0x0]
  421940:	lea    r11,[rsp+0x10]
  421945:	movzx  edx,bl
  421948:	mov    rsi,r11
  42194b:	mov    rdi,r14
  42194e:	call   421200 <xmlStrEqual@plt+0x1d2c0>
  421953:	mov    DWORD PTR [rsp],eax
  421956:	cmp    eax,0xff
  42195b:	je     4217f4 <xmlStrEqual@plt+0x1d8b4>
  421961:	mov    rax,QWORD PTR [rsp+0x10]
  421966:	test   rax,rax
  421969:	je     421b30 <xmlStrEqual@plt+0x1dbf0>
  42196f:	movzx  edx,BYTE PTR [rax+0xc]
  421973:	lea    rsi,[r11+0x8]
  421977:	mov    ebp,edx
  421979:	xor    r8d,r8d
  42197c:	nop    DWORD PTR [rax+0x0]
  421980:	mov    ecx,edx
  421982:	add    r8d,edx
  421985:	test   edx,edx
  421987:	je     4219a5 <xmlStrEqual@plt+0x1da65>
  421989:	test   ebp,ebp
  42198b:	jne    42199a <xmlStrEqual@plt+0x1da5a>
  42198d:	jmp    421a98 <xmlStrEqual@plt+0x1db58>
  421992:	nop    WORD PTR [rax+rax*1+0x0]
  421998:	mov    ecx,edx
  42199a:	mov    eax,ebp
  42199c:	cdq    
  42199d:	idiv   ecx
  42199f:	mov    ebp,ecx
  4219a1:	test   edx,edx
  4219a3:	jne    421998 <xmlStrEqual@plt+0x1da58>
  4219a5:	add    rsi,0x8
  4219a9:	mov    rax,QWORD PTR [rsi-0x8]
  4219ad:	test   rax,rax
  4219b0:	je     421ab0 <xmlStrEqual@plt+0x1db70>
  4219b6:	movzx  edx,BYTE PTR [rax+0xc]
  4219ba:	jmp    421980 <xmlStrEqual@plt+0x1da40>
  4219bc:	nop    DWORD PTR [rax+0x0]
  4219c0:	jg     421a80 <xmlStrEqual@plt+0x1db40>
  4219c6:	test   ebx,ebx
  4219c8:	je     421b50 <xmlStrEqual@plt+0x1dc10>
  4219ce:	test   ebp,ebp
  4219d0:	jne    4219da <xmlStrEqual@plt+0x1da9a>
  4219d2:	jmp    4219e5 <xmlStrEqual@plt+0x1daa5>
  4219d4:	nop    DWORD PTR [rax+0x0]
  4219d8:	mov    ebx,edx
  4219da:	mov    eax,ebp
  4219dc:	cdq    
  4219dd:	idiv   ebx
  4219df:	mov    ebp,ebx
  4219e1:	test   edx,edx
  4219e3:	jne    4219d8 <xmlStrEqual@plt+0x1da98>
  4219e5:	mov    rcx,QWORD PTR [rsp+0x10]
  4219ea:	lea    r11,[rsp+0x10]
  4219ef:	lea    esi,[r8+r10*1]
  4219f3:	lea    rdx,[r11+0x8]
  4219f7:	xor    eax,eax
  4219f9:	test   rcx,rcx
  4219fc:	je     421b57 <xmlStrEqual@plt+0x1dc17>
  421a02:	nop    WORD PTR [rax+rax*1+0x0]
  421a08:	mov    QWORD PTR [rdx+0x208],rcx
  421a0f:	add    rdx,0x8
  421a13:	inc    eax
  421a15:	mov    rcx,QWORD PTR [rdx-0x8]
  421a19:	test   rcx,rcx
  421a1c:	jne    421a08 <xmlStrEqual@plt+0x1dac8>
  421a1e:	mov    rcx,QWORD PTR [rsp+0x118]
  421a26:	lea    rdx,[r11+0x110]
  421a2d:	movsxd rdi,eax
  421a30:	test   rcx,rcx
  421a33:	je     421a4f <xmlStrEqual@plt+0x1db0f>
  421a35:	nop    DWORD PTR [rax]
  421a38:	mov    QWORD PTR [rdx+rdi*8+0x100],rcx
  421a40:	add    rdx,0x8
  421a44:	inc    eax
  421a46:	mov    rcx,QWORD PTR [rdx-0x8]
  421a4a:	test   rcx,rcx
  421a4d:	jne    421a38 <xmlStrEqual@plt+0x1daf8>
  421a4f:	cdqe   
  421a51:	lea    rcx,[r12+0x20]
  421a56:	lea    rdi,[r11+0x210]
  421a5d:	mov    edx,ebx
  421a5f:	mov    QWORD PTR [rsp+rax*8+0x220],0x0
  421a6b:	call   421110 <xmlStrEqual@plt+0x1d1d0>
  421a70:	mov    QWORD PTR [r12+0x10],rax
  421a75:	jmp    421843 <xmlStrEqual@plt+0x1d903>
  421a7a:	nop    WORD PTR [rax+rax*1+0x0]
  421a80:	mov    eax,DWORD PTR [r12+0x1c]
  421a85:	mov    QWORD PTR [r12+0x10],rdx
  421a8a:	mov    DWORD PTR [r12+0x20],eax
  421a8f:	jmp    421843 <xmlStrEqual@plt+0x1d903>
  421a94:	nop    DWORD PTR [rax+0x0]
  421a98:	add    rsi,0x8
  421a9c:	mov    rax,QWORD PTR [rsi-0x8]
  421aa0:	mov    ebp,edx
  421aa2:	test   rax,rax
  421aa5:	jne    4219b6 <xmlStrEqual@plt+0x1da76>
  421aab:	nop    DWORD PTR [rax+rax*1+0x0]
  421ab0:	mov    esi,r8d
  421ab3:	lea    rcx,[r12+0x18]
  421ab8:	mov    edx,ebp
  421aba:	mov    rdi,r11
  421abd:	mov    DWORD PTR [rsp+0x4],r8d
  421ac2:	call   421110 <xmlStrEqual@plt+0x1d1d0>
  421ac7:	mov    QWORD PTR [r12],rax
  421acb:	mov    r8d,DWORD PTR [rsp+0x4]
  421ad0:	jmp    421800 <xmlStrEqual@plt+0x1d8c0>
  421ad5:	nop    DWORD PTR [rax]
  421ad8:	add    rsi,0x8
  421adc:	mov    rax,QWORD PTR [rsi-0x8]
  421ae0:	mov    ebx,edx
  421ae2:	test   rax,rax
  421ae5:	jne    421936 <xmlStrEqual@plt+0x1d9f6>
  421aeb:	nop    DWORD PTR [rax+rax*1+0x0]
  421af0:	mov    esi,r10d
  421af3:	lea    rcx,[r12+0x1c]
  421af8:	lea    rdi,[r11+0x108]
  421aff:	mov    edx,ebx
  421b01:	mov    DWORD PTR [rsp+0xc],r8d
  421b06:	mov    DWORD PTR [rsp+0x8],r9d
  421b0b:	mov    DWORD PTR [rsp+0x4],r10d
  421b10:	call   421110 <xmlStrEqual@plt+0x1d1d0>
  421b15:	mov    QWORD PTR [r12+0x8],rax
  421b1a:	mov    r8d,DWORD PTR [rsp+0xc]
  421b1f:	mov    r9d,DWORD PTR [rsp+0x8]
  421b24:	mov    r10d,DWORD PTR [rsp+0x4]
  421b29:	jmp    421817 <xmlStrEqual@plt+0x1d8d7>
  421b2e:	xchg   ax,ax
  421b30:	xor    ebp,ebp
  421b32:	xor    r8d,r8d
  421b35:	jmp    421ab0 <xmlStrEqual@plt+0x1db70>
  421b3a:	nop    WORD PTR [rax+rax*1+0x0]
  421b40:	xor    ebx,ebx
  421b42:	xor    r10d,r10d
  421b45:	jmp    421af0 <xmlStrEqual@plt+0x1dbb0>
  421b47:	nop    WORD PTR [rax+rax*1+0x0]
  421b50:	mov    ebx,ebp
  421b52:	jmp    4219e5 <xmlStrEqual@plt+0x1daa5>
  421b57:	xor    eax,eax
  421b59:	lea    r11,[rsp+0x10]
  421b5e:	jmp    421a1e <xmlStrEqual@plt+0x1dade>
  421b63:	call   403c00 <__stack_chk_fail@plt>
  421b68:	nop    DWORD PTR [rax+rax*1+0x0]
  421b70:	endbr64 
  421b74:	push   r13
  421b76:	mov    r13d,edx
  421b79:	push   r12
  421b7b:	mov    r12,rsi
  421b7e:	push   rbp
  421b7f:	mov    rbp,rdi
  421b82:	mov    edi,0x28
  421b87:	push   rbx
  421b88:	sub    rsp,0x8
  421b8c:	call   434fe0 <xmlStrEqual@plt+0x310a0>
  421b91:	mov    rbx,rax
  421b94:	test   rax,rax
  421b97:	je     421bc0 <xmlStrEqual@plt+0x1dc80>
  421b99:	movzx  ecx,r13b
  421b9d:	mov    rdx,r12
  421ba0:	mov    rsi,rbp
  421ba3:	mov    rdi,rax
  421ba6:	call   421770 <xmlStrEqual@plt+0x1d830>
  421bab:	cmp    eax,0x1
  421bae:	jne    421be8 <xmlStrEqual@plt+0x1dca8>
  421bb0:	add    rsp,0x8
  421bb4:	mov    rax,rbx
  421bb7:	pop    rbx
  421bb8:	pop    rbp
  421bb9:	pop    r12
  421bbb:	pop    r13
  421bbd:	ret    
  421bbe:	xchg   ax,ax
  421bc0:	xor    eax,eax
  421bc2:	lea    rsi,[rip+0x2c177]        # 44dd40 <xmlStrEqual@plt+0x49e00>
  421bc9:	mov    edi,0x3
  421bce:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  421bd3:	add    rsp,0x8
  421bd7:	mov    rax,rbx
  421bda:	pop    rbx
  421bdb:	pop    rbp
  421bdc:	pop    r12
  421bde:	pop    r13
  421be0:	ret    
  421be1:	nop    DWORD PTR [rax+0x0]
  421be8:	mov    rdi,rbx
  421beb:	call   4212a0 <xmlStrEqual@plt+0x1d360>
  421bf0:	mov    rax,0x469e3c
  421bf7:	xor    ebx,ebx
  421bf9:	cmp    DWORD PTR [rax],0x1
  421bfc:	jle    421bb0 <xmlStrEqual@plt+0x1dc70>
  421bfe:	lea    rsi,[rip+0x2c193]        # 44dd98 <xmlStrEqual@plt+0x49e58>
  421c05:	mov    edi,0x6
  421c0a:	xor    eax,eax
  421c0c:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  421c11:	jmp    421bb0 <xmlStrEqual@plt+0x1dc70>
  421c13:	nop    WORD PTR cs:[rax+rax*1+0x0]
  421c1d:	nop    DWORD PTR [rax]
  421c20:	endbr64 
  421c24:	mov    r8,QWORD PTR [rdi]
  421c27:	mov    rdx,QWORD PTR [r8+0x8]
  421c2b:	cmp    r8,rdx
  421c2e:	je     421c60 <xmlStrEqual@plt+0x1dd20>
  421c30:	mov    edi,0xffffffff
  421c35:	xor    eax,eax
  421c37:	nop    WORD PTR [rax+rax*1+0x0]
  421c40:	mov    rsi,QWORD PTR [rdx+0x10]
  421c44:	movzx  ecx,BYTE PTR [rsi+0x8]
  421c48:	cmp    ecx,edi
  421c4a:	jle    421c51 <xmlStrEqual@plt+0x1dd11>
  421c4c:	mov    rax,QWORD PTR [rsi]
  421c4f:	mov    edi,ecx
  421c51:	mov    rdx,QWORD PTR [rdx+0x8]
  421c55:	cmp    r8,rdx
  421c58:	jne    421c40 <xmlStrEqual@plt+0x1dd00>
  421c5a:	ret    
  421c5b:	nop    DWORD PTR [rax+rax*1+0x0]
  421c60:	xor    eax,eax
  421c62:	ret    
  421c63:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  421c6e:	xchg   ax,ax
  421c70:	endbr64 
  421c74:	push   r12
  421c76:	mov    r12,rsi
  421c79:	push   rbp
  421c7a:	push   rbx
  421c7b:	mov    rbx,rdi
  421c7e:	call   428cf0 <xmlStrEqual@plt+0x24db0>
  421c83:	mov    rbp,0x469860
  421c8a:	mov    eax,eax
  421c8c:	cmp    QWORD PTR [rbp+rax*8+0x0],0x0
  421c92:	je     421cc0 <xmlStrEqual@plt+0x1dd80>
  421c94:	mov    rdi,rbx
  421c97:	call   428cf0 <xmlStrEqual@plt+0x24db0>
  421c9c:	mov    eax,eax
  421c9e:	mov    rbp,QWORD PTR [rbp+rax*8+0x0]
  421ca3:	mov    rdi,rbx
  421ca6:	call   428dd0 <xmlStrEqual@plt+0x24e90>
  421cab:	pop    rbx
  421cac:	mov    rdi,rax
  421caf:	mov    rax,rbp
  421cb2:	pop    rbp
  421cb3:	mov    rsi,r12
  421cb6:	pop    r12
  421cb8:	jmp    rax
  421cba:	nop    WORD PTR [rax+rax*1+0x0]
  421cc0:	mov    rax,0x469e3c
  421cc7:	mov    eax,DWORD PTR [rax]
  421cc9:	test   eax,eax
  421ccb:	jle    421cea <xmlStrEqual@plt+0x1ddaa>
  421ccd:	mov    rdi,rbx
  421cd0:	call   428cf0 <xmlStrEqual@plt+0x24db0>
  421cd5:	mov    edx,eax
  421cd7:	lea    rsi,[rip+0x2c10a]        # 44dde8 <xmlStrEqual@plt+0x49ea8>
  421cde:	mov    edi,0x5
  421ce3:	xor    eax,eax
  421ce5:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  421cea:	pop    rbx
  421ceb:	pop    rbp
  421cec:	xor    eax,eax
  421cee:	pop    r12
  421cf0:	ret    
  421cf1:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  421cfc:	nop    DWORD PTR [rax+0x0]
  421d00:	endbr64 
  421d04:	mov    eax,DWORD PTR [rdi+0x18]
  421d07:	cmp    eax,0x2
  421d0a:	je     421d20 <xmlStrEqual@plt+0x1dde0>
  421d0c:	cmp    eax,0x3
  421d0f:	je     421d40 <xmlStrEqual@plt+0x1de00>
  421d11:	cmp    eax,0x1
  421d14:	mov    eax,0x0
  421d19:	cmove  rax,rdi
  421d1d:	ret    
  421d1e:	xchg   ax,ax
  421d20:	sub    rsp,0x8
  421d24:	xor    eax,eax
  421d26:	lea    rsi,[rip+0x2c0f3]        # 44de20 <xmlStrEqual@plt+0x49ee0>
  421d2d:	mov    edi,0x3
  421d32:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  421d37:	xor    eax,eax
  421d39:	add    rsp,0x8
  421d3d:	ret    
  421d3e:	xchg   ax,ax
  421d40:	jmp    421c70 <xmlStrEqual@plt+0x1dd30>
  421d45:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  421d50:	endbr64 
  421d54:	push   r15
  421d56:	push   r14
  421d58:	push   r13
  421d5a:	push   r12
  421d5c:	push   rbp
  421d5d:	push   rbx
  421d5e:	sub    rsp,0x8
  421d62:	mov    r13,QWORD PTR [rdi]
  421d65:	mov    rbx,QWORD PTR [r13+0x8]
  421d69:	mov    r15d,DWORD PTR [r13+0x18]
  421d6d:	cmp    r13,rbx
  421d70:	je     421dfc <xmlStrEqual@plt+0x1debc>
  421d76:	mov    r14,rsi
  421d79:	xor    r12d,r12d
  421d7c:	jmp    421dae <xmlStrEqual@plt+0x1de6e>
  421d7e:	xchg   ax,ax
  421d80:	mov    rdi,rbp
  421d83:	call   4255a0 <xmlStrEqual@plt+0x21660>
  421d88:	mov    rdx,0x425310
  421d8f:	mov    rsi,r14
  421d92:	mov    rdi,rax
  421d95:	mov    rbp,rax
  421d98:	call   42df40 <xmlStrEqual@plt+0x2a000>
  421d9d:	cmp    al,0x1
  421d9f:	je     421e28 <xmlStrEqual@plt+0x1dee8>
  421da5:	mov    rbx,QWORD PTR [rbx+0x8]
  421da9:	cmp    r13,rbx
  421dac:	je     421df8 <xmlStrEqual@plt+0x1deb8>
  421dae:	mov    rdi,QWORD PTR [rbx+0x10]
  421db2:	inc    r12d
  421db5:	call   42a440 <xmlStrEqual@plt+0x26500>
  421dba:	cmp    DWORD PTR [rax+0x18],0x3
  421dbe:	mov    rbp,rax
  421dc1:	jne    421d80 <xmlStrEqual@plt+0x1de40>
  421dc3:	mov    rdi,rax
  421dc6:	call   425460 <xmlStrEqual@plt+0x21520>
  421dcb:	cmp    eax,0xa
  421dce:	jne    421d80 <xmlStrEqual@plt+0x1de40>
  421dd0:	mov    rdi,rbp
  421dd3:	mov    rsi,r14
  421dd6:	call   421d00 <xmlStrEqual@plt+0x1ddc0>
  421ddb:	mov    rbp,rax
  421dde:	test   rax,rax
  421de1:	je     421da5 <xmlStrEqual@plt+0x1de65>
  421de3:	add    rsp,0x8
  421de7:	pop    rbx
  421de8:	mov    rax,rbp
  421deb:	pop    rbp
  421dec:	pop    r12
  421dee:	pop    r13
  421df0:	pop    r14
  421df2:	pop    r15
  421df4:	ret    
  421df5:	nop    DWORD PTR [rax]
  421df8:	mov    r15d,DWORD PTR [r13+0x18]
  421dfc:	test   r15d,r15d
  421dff:	je     421e37 <xmlStrEqual@plt+0x1def7>
  421e01:	mov    rax,QWORD PTR [r13+0x8]
  421e05:	mov    rdi,QWORD PTR [rax+0x10]
  421e09:	call   42a440 <xmlStrEqual@plt+0x26500>
  421e0e:	add    rsp,0x8
  421e12:	pop    rbx
  421e13:	pop    rbp
  421e14:	pop    r12
  421e16:	pop    r13
  421e18:	pop    r14
  421e1a:	mov    rdi,rax
  421e1d:	pop    r15
  421e1f:	jmp    4255a0 <xmlStrEqual@plt+0x21660>
  421e24:	nop    DWORD PTR [rax+0x0]
  421e28:	cmp    r12d,r15d
  421e2b:	je     421de3 <xmlStrEqual@plt+0x1dea3>
  421e2d:	mov    rax,QWORD PTR [rbx+0x8]
  421e31:	mov    rdi,QWORD PTR [rax+0x10]
  421e35:	jmp    421e09 <xmlStrEqual@plt+0x1dec9>
  421e37:	xor    edi,edi
  421e39:	jmp    421e09 <xmlStrEqual@plt+0x1dec9>
  421e3b:	nop    DWORD PTR [rax+rax*1+0x0]
  421e40:	endbr64 
  421e44:	push   rbx
  421e45:	mov    rbx,rdi
  421e48:	mov    rdi,QWORD PTR [rdi]
  421e4b:	call   424bf0 <xmlStrEqual@plt+0x20cb0>
  421e50:	mov    rdi,QWORD PTR [rbx+0x8]
  421e54:	call   43add0 <xmlStrEqual@plt+0x36e90>
  421e59:	mov    rdi,rbx
  421e5c:	pop    rbx
  421e5d:	jmp    4037b0 <free@plt>
  421e62:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  421e6d:	nop    DWORD PTR [rax]
  421e70:	endbr64 
  421e74:	mov    rdx,rdi
  421e77:	mov    ecx,0xf
  421e7c:	lea    rdi,[rip+0x2bfcf]        # 44de52 <xmlStrEqual@plt+0x49f12>
  421e83:	mov    rsi,rdx
  421e86:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  421e88:	seta   al
  421e8b:	sbb    al,0x0
  421e8d:	test   al,al
  421e8f:	je     421eb8 <xmlStrEqual@plt+0x1df78>
  421e91:	mov    ecx,0xe
  421e96:	lea    rdi,[rip+0x2bfc4]        # 44de61 <xmlStrEqual@plt+0x49f21>
  421e9d:	mov    rsi,rdx
  421ea0:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  421ea2:	seta   al
  421ea5:	sbb    al,0x0
  421ea7:	test   al,al
  421ea9:	jne    421ec0 <xmlStrEqual@plt+0x1df80>
  421eab:	mov    rax,0x4757e0
  421eb2:	ret    
  421eb3:	nop    DWORD PTR [rax+rax*1+0x0]
  421eb8:	mov    rax,0x4698e0
  421ebf:	ret    
  421ec0:	sub    rsp,0x8
  421ec4:	xor    eax,eax
  421ec6:	lea    rsi,[rip+0x2bfa3]        # 44de70 <xmlStrEqual@plt+0x49f30>
  421ecd:	mov    edi,0x2
  421ed2:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  421ed7:	xor    eax,eax
  421ed9:	add    rsp,0x8
  421edd:	ret    
  421ede:	xchg   ax,ax
  421ee0:	endbr64 
  421ee4:	push   rbx
  421ee5:	mov    edi,0x8
  421eea:	call   434fe0 <xmlStrEqual@plt+0x310a0>
  421eef:	mov    rdi,QWORD PTR [rip+0x470ca]        # 468fc0 <xmlStrEqual@plt+0x65080>
  421ef6:	mov    rbx,rax
  421ef9:	call   43a0a0 <xmlStrEqual@plt+0x36160>
  421efe:	mov    QWORD PTR [rbx],rax
  421f01:	mov    rax,rbx
  421f04:	pop    rbx
  421f05:	ret    
  421f06:	nop    WORD PTR cs:[rax+rax*1+0x0]
  421f10:	endbr64 
  421f14:	push   rbx
  421f15:	mov    rbx,rdi
  421f18:	mov    rdi,QWORD PTR [rdi]
  421f1b:	call   43add0 <xmlStrEqual@plt+0x36e90>
  421f20:	mov    rdi,rbx
  421f23:	pop    rbx
  421f24:	jmp    4037b0 <free@plt>
  421f29:	nop    DWORD PTR [rax+0x0]
  421f30:	endbr64 
  421f34:	push   rbp
  421f35:	mov    rbp,rdi
  421f38:	mov    edi,0x18
  421f3d:	push   rbx
  421f3e:	sub    rsp,0x8
  421f42:	call   434fe0 <xmlStrEqual@plt+0x310a0>
  421f47:	mov    rdi,rbp
  421f4a:	mov    rbx,rax
  421f4d:	call   425060 <xmlStrEqual@plt+0x21120>
  421f52:	mov    QWORD PTR [rbx],rax
  421f55:	xor    eax,eax
  421f57:	call   43a070 <xmlStrEqual@plt+0x36130>
  421f5c:	mov    QWORD PTR [rbx+0x8],rax
  421f60:	mov    rdi,0x421e40
  421f67:	call   42dca0 <xmlStrEqual@plt+0x29d60>
  421f6c:	mov    QWORD PTR [rbx+0x10],rax
  421f70:	add    rsp,0x8
  421f74:	mov    rax,rbx
  421f77:	pop    rbx
  421f78:	pop    rbp
  421f79:	ret    
  421f7a:	nop    WORD PTR [rax+rax*1+0x0]
  421f80:	endbr64 
  421f84:	push   rbx
  421f85:	mov    rbx,rdi
  421f88:	mov    rdi,QWORD PTR [rdi]
  421f8b:	call   424bf0 <xmlStrEqual@plt+0x20cb0>
  421f90:	mov    rdi,QWORD PTR [rbx+0x8]
  421f94:	call   43add0 <xmlStrEqual@plt+0x36e90>
  421f99:	mov    rdi,QWORD PTR [rbx+0x10]
  421f9d:	call   42e2b0 <xmlStrEqual@plt+0x2a370>
  421fa2:	mov    rdi,rbx
  421fa5:	pop    rbx
  421fa6:	jmp    4037b0 <free@plt>
  421fab:	nop    DWORD PTR [rax+rax*1+0x0]
  421fb0:	endbr64 
  421fb4:	push   rbp
  421fb5:	mov    rbp,rdi
  421fb8:	mov    edi,0x10
  421fbd:	push   rbx
  421fbe:	sub    rsp,0x8
  421fc2:	call   434fe0 <xmlStrEqual@plt+0x310a0>
  421fc7:	mov    rdi,rbp
  421fca:	mov    rbx,rax
  421fcd:	call   425060 <xmlStrEqual@plt+0x21120>
  421fd2:	mov    QWORD PTR [rbx],rax
  421fd5:	xor    eax,eax
  421fd7:	call   43a070 <xmlStrEqual@plt+0x36130>
  421fdc:	mov    QWORD PTR [rbx+0x8],rax
  421fe0:	add    rsp,0x8
  421fe4:	mov    rax,rbx
  421fe7:	pop    rbx
  421fe8:	pop    rbp
  421fe9:	ret    
  421fea:	nop    WORD PTR [rax+rax*1+0x0]
  421ff0:	endbr64 
  421ff4:	mov    edi,0x20
  421ff9:	jmp    434fe0 <xmlStrEqual@plt+0x310a0>
  421ffe:	xchg   ax,ax
  422000:	endbr64 
  422004:	push   rbx
  422005:	mov    rbx,rdi
  422008:	mov    rax,QWORD PTR [rdi+0x18]
  42200c:	test   rax,rax
  42200f:	je     422017 <xmlStrEqual@plt+0x1e0d7>
  422011:	mov    rdi,QWORD PTR [rdi+0x8]
  422015:	call   rax
  422017:	mov    rdi,QWORD PTR [rbx]
  42201a:	test   rdi,rdi
  42201d:	je     422024 <xmlStrEqual@plt+0x1e0e4>
  42201f:	call   424bf0 <xmlStrEqual@plt+0x20cb0>
  422024:	mov    rdi,rbx
  422027:	pop    rbx
  422028:	jmp    4037b0 <free@plt>
  42202d:	nop    DWORD PTR [rax]
  422030:	endbr64 
  422034:	push   r15
  422036:	push   r14
  422038:	push   r13
  42203a:	push   r12
  42203c:	push   rbp
  42203d:	push   rbx
  42203e:	sub    rsp,0x28
  422042:	mov    rax,QWORD PTR [rdi+0x28]
  422046:	mov    QWORD PTR [rsp+0x8],rcx
  42204b:	mov    ecx,DWORD PTR [rax+0x18]
  42204e:	mov    QWORD PTR [rsp+0x10],rdi
  422053:	mov    QWORD PTR [rsp],rsi
  422057:	mov    QWORD PTR [rsp+0x18],rdx
  42205c:	test   ecx,ecx
  42205e:	je     422130 <xmlStrEqual@plt+0x1e1f0>
  422064:	mov    r13,QWORD PTR [rax+0x8]
  422068:	mov    r15,r8
  42206b:	cmp    rax,r13
  42206e:	jne    42208b <xmlStrEqual@plt+0x1e14b>
  422070:	jmp    42213c <xmlStrEqual@plt+0x1e1fc>
  422075:	nop    DWORD PTR [rax]
  422078:	mov    r13,QWORD PTR [r13+0x8]
  42207c:	mov    rax,QWORD PTR [rsp+0x10]
  422081:	cmp    QWORD PTR [rax+0x28],r13
  422085:	je     42213c <xmlStrEqual@plt+0x1e1fc>
  42208b:	mov    r12,QWORD PTR [r13+0x10]
  42208f:	mov    edx,DWORD PTR [r12+0x18]
  422094:	test   edx,edx
  422096:	je     422078 <xmlStrEqual@plt+0x1e138>
  422098:	mov    rbx,QWORD PTR [r12+0x8]
  42209d:	mov    rbp,QWORD PTR [rbx+0x10]
  4220a1:	mov    r14,QWORD PTR [rbp+0x0]
  4220a5:	mov    eax,DWORD PTR [r14+0x18]
  4220a9:	test   eax,eax
  4220ab:	je     422078 <xmlStrEqual@plt+0x1e138>
  4220ad:	cmp    r12,rbx
  4220b0:	jne    4220e4 <xmlStrEqual@plt+0x1e1a4>
  4220b2:	jmp    422078 <xmlStrEqual@plt+0x1e138>
  4220b4:	nop    DWORD PTR [rax+0x0]
  4220b8:	mov    rdi,rax
  4220bb:	call   425890 <xmlStrEqual@plt+0x21950>
  4220c0:	cmp    ax,0x2
  4220c4:	je     422120 <xmlStrEqual@plt+0x1e1e0>
  4220c6:	mov    rsi,QWORD PTR [rsp+0x8]
  4220cb:	mov    rdi,rbp
  4220ce:	call   42dcf0 <xmlStrEqual@plt+0x29db0>
  4220d3:	mov    rbx,QWORD PTR [rbx+0x8]
  4220d7:	cmp    rbx,r12
  4220da:	je     422078 <xmlStrEqual@plt+0x1e138>
  4220dc:	mov    rbp,QWORD PTR [rbx+0x10]
  4220e0:	mov    r14,QWORD PTR [rbp+0x0]
  4220e4:	mov    rsi,QWORD PTR [rsp]
  4220e8:	mov    rdi,r14
  4220eb:	call   r15
  4220ee:	test   rax,rax
  4220f1:	jne    4220b8 <xmlStrEqual@plt+0x1e178>
  4220f3:	mov    rax,0x469e3c
  4220fa:	cmp    DWORD PTR [rax],0x1
  4220fd:	jle    4220d3 <xmlStrEqual@plt+0x1e193>
  4220ff:	mov    rdi,r14
  422102:	call   424d40 <xmlStrEqual@plt+0x20e00>
  422107:	mov    rdx,rax
  42210a:	lea    rsi,[rip+0x2bde7]        # 44def8 <xmlStrEqual@plt+0x49fb8>
  422111:	mov    edi,0x6
  422116:	xor    eax,eax
  422118:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  42211d:	jmp    4220d3 <xmlStrEqual@plt+0x1e193>
  42211f:	nop
  422120:	mov    rsi,QWORD PTR [rsp+0x18]
  422125:	mov    rdi,rbp
  422128:	call   42dcf0 <xmlStrEqual@plt+0x29db0>
  42212d:	jmp    4220d3 <xmlStrEqual@plt+0x1e193>
  42212f:	nop
  422130:	mov    rax,0x469e3c
  422137:	cmp    DWORD PTR [rax],0x2
  42213a:	jg     42214b <xmlStrEqual@plt+0x1e20b>
  42213c:	add    rsp,0x28
  422140:	pop    rbx
  422141:	pop    rbp
  422142:	pop    r12
  422144:	pop    r13
  422146:	pop    r14
  422148:	pop    r15
  42214a:	ret    
  42214b:	call   424d40 <xmlStrEqual@plt+0x20e00>
  422150:	add    rsp,0x28
  422154:	pop    rbx
  422155:	pop    rbp
  422156:	pop    r12
  422158:	pop    r13
  42215a:	pop    r14
  42215c:	mov    rdx,rax
  42215f:	lea    rsi,[rip+0x2bd42]        # 44dea8 <xmlStrEqual@plt+0x49f68>
  422166:	mov    edi,0x7
  42216b:	xor    eax,eax
  42216d:	pop    r15
  42216f:	jmp    430e20 <xmlStrEqual@plt+0x2cee0>
  422174:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42217e:	xchg   ax,ax
  422180:	endbr64 
  422184:	jmp    4037b0 <free@plt>
  422189:	nop    DWORD PTR [rax+0x0]
  422190:	endbr64 
  422194:	push   rbx
  422195:	mov    rbx,rsi
  422198:	mov    edx,0x1
  42219d:	mov    rsi,QWORD PTR [rdi+0x8]
  4221a1:	mov    rdi,QWORD PTR [rbx+0x8]
  4221a5:	call   421b70 <xmlStrEqual@plt+0x1dc30>
  4221aa:	test   rax,rax
  4221ad:	je     4221c8 <xmlStrEqual@plt+0x1e288>
  4221af:	mov    QWORD PTR [rbx+0x20],rax
  4221b3:	mov    rax,0x4212a0
  4221ba:	mov    QWORD PTR [rbx+0x28],rax
  4221be:	mov    eax,0x1
  4221c3:	pop    rbx
  4221c4:	ret    
  4221c5:	nop    DWORD PTR [rax]
  4221c8:	xor    eax,eax
  4221ca:	pop    rbx
  4221cb:	ret    
  4221cc:	nop    DWORD PTR [rax+0x0]
  4221d0:	endbr64 
  4221d4:	push   rbp
  4221d5:	push   rbx
  4221d6:	mov    rbx,rsi
  4221d9:	sub    rsp,0x8
  4221dd:	mov    rbp,QWORD PTR [rdi+0x8]
  4221e1:	mov    rdi,rsi
  4221e4:	call   434a40 <xmlStrEqual@plt+0x30b00>
  4221e9:	mov    rdi,rax
  4221ec:	mov    rsi,rbp
  4221ef:	xor    edx,edx
  4221f1:	call   421b70 <xmlStrEqual@plt+0x1dc30>
  4221f6:	mov    rsi,rax
  4221f9:	xor    eax,eax
  4221fb:	test   rsi,rsi
  4221fe:	je     422214 <xmlStrEqual@plt+0x1e2d4>
  422200:	mov    rdx,0x4212a0
  422207:	mov    rdi,rbx
  42220a:	call   434a70 <xmlStrEqual@plt+0x30b30>
  42220f:	mov    eax,0x1
  422214:	add    rsp,0x8
  422218:	pop    rbx
  422219:	pop    rbp
  42221a:	ret    
  42221b:	nop    DWORD PTR [rax+rax*1+0x0]
  422220:	endbr64 
  422224:	push   r12
  422226:	push   rbp
  422227:	push   rbx
  422228:	mov    rbx,rsi
  42222b:	mov    r12,QWORD PTR [rdi+0x8]
  42222f:	mov    rdi,rsi
  422232:	call   434a40 <xmlStrEqual@plt+0x30b00>
  422237:	mov    rdi,rbx
  42223a:	mov    rbp,rax
  42223d:	call   434a60 <xmlStrEqual@plt+0x30b20>
  422242:	pop    rbx
  422243:	mov    rsi,rbp
  422246:	pop    rbp
  422247:	mov    rdx,r12
  42224a:	xor    ecx,ecx
  42224c:	mov    rdi,rax
  42224f:	pop    r12
  422251:	jmp    421770 <xmlStrEqual@plt+0x1d830>
  422256:	nop    WORD PTR cs:[rax+rax*1+0x0]
  422260:	endbr64 
  422264:	mov    rax,rsi
  422267:	mov    rdx,QWORD PTR [rdi+0x8]
  42226b:	mov    rsi,QWORD PTR [rsi+0x8]
  42226f:	mov    rdi,QWORD PTR [rax+0x20]
  422273:	mov    ecx,0x1
  422278:	jmp    421770 <xmlStrEqual@plt+0x1d830>
  42227d:	nop    DWORD PTR [rax]
  422280:	endbr64 
  422284:	push   rbx
  422285:	mov    edi,0x10
  42228a:	call   434fe0 <xmlStrEqual@plt+0x310a0>
  42228f:	mov    rbx,rax
  422292:	test   rax,rax
  422295:	je     4222a0 <xmlStrEqual@plt+0x1e360>
  422297:	mov    rax,rbx
  42229a:	pop    rbx
  42229b:	ret    
  42229c:	nop    DWORD PTR [rax+0x0]
  4222a0:	xor    eax,eax
  4222a2:	lea    rsi,[rip+0x2bc7f]        # 44df28 <xmlStrEqual@plt+0x49fe8>
  4222a9:	mov    edi,0x3
  4222ae:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  4222b3:	mov    rax,rbx
  4222b6:	pop    rbx
  4222b7:	ret    
  4222b8:	nop    DWORD PTR [rax+rax*1+0x0]
  4222c0:	endbr64 
  4222c4:	push   rbp
  4222c5:	xor    eax,eax
  4222c7:	mov    rbp,rdi
  4222ca:	push   rbx
  4222cb:	sub    rsp,0x8
  4222cf:	call   422280 <xmlStrEqual@plt+0x1e340>
  4222d4:	mov    rbx,rax
  4222d7:	test   rax,rax
  4222da:	je     4222fa <xmlStrEqual@plt+0x1e3ba>
  4222dc:	mov    rdi,rbp
  4222df:	call   408940 <xmlStrEqual@plt+0x4a00>
  4222e4:	mov    DWORD PTR [rbx],eax
  4222e6:	mov    rdi,rbp
  4222e9:	call   408950 <xmlStrEqual@plt+0x4a10>
  4222ee:	mov    rdi,rax
  4222f1:	call   408720 <xmlStrEqual@plt+0x47e0>
  4222f6:	mov    QWORD PTR [rbx+0x8],rax
  4222fa:	add    rsp,0x8
  4222fe:	mov    rax,rbx
  422301:	pop    rbx
  422302:	pop    rbp
  422303:	ret    
  422304:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  42230f:	nop
  422310:	endbr64 
  422314:	push   r15
  422316:	mov    r15,rdi
  422319:	mov    rdi,rsi
  42231c:	push   r14
  42231e:	push   r13
  422320:	push   r12
  422322:	mov    r12,r8
  422325:	push   rbp
  422326:	mov    rbp,rcx
  422329:	push   rbx
  42232a:	mov    rbx,rdx
  42232d:	sub    rsp,0x28
  422331:	call   434a60 <xmlStrEqual@plt+0x30b20>
  422336:	mov    rdx,QWORD PTR [rbx+0x8]
  42233a:	mov    r13,QWORD PTR [rbx+0x20]
  42233e:	cmp    WORD PTR [rdx+0x20],0x0
  422343:	je     4225d0 <xmlStrEqual@plt+0x1e690>
  422349:	mov    rbx,QWORD PTR [rax+0x10]
  42234d:	test   rbx,rbx
  422350:	je     422428 <xmlStrEqual@plt+0x1e4e8>
  422356:	cmp    QWORD PTR [r13+0x10],0x0
  42235b:	je     422428 <xmlStrEqual@plt+0x1e4e8>
  422361:	mov    r14d,DWORD PTR [rax+0x20]
  422365:	mov    rdi,rbp
  422368:	call   436930 <xmlStrEqual@plt+0x329f0>
  42236d:	test   eax,eax
  42236f:	je     4225b0 <xmlStrEqual@plt+0x1e670>
  422375:	xor    edx,edx
  422377:	mov    DWORD PTR [rsp],eax
  42237a:	div    r14d
  42237d:	mov    rsi,QWORD PTR [r15+0x8]
  422381:	mov    rax,QWORD PTR [rbx+rdx*8]
  422385:	mov    r14,QWORD PTR [rax]
  422388:	mov    rdi,r14
  42238b:	call   421d00 <xmlStrEqual@plt+0x1ddc0>
  422390:	mov    rdi,rax
  422393:	mov    rbx,rax
  422396:	call   425890 <xmlStrEqual@plt+0x21950>
  42239b:	cmp    ax,0x2
  42239f:	mov    ecx,DWORD PTR [rsp]
  4223a2:	je     422510 <xmlStrEqual@plt+0x1e5d0>
  4223a8:	cmp    ax,0xa
  4223ac:	je     422450 <xmlStrEqual@plt+0x1e510>
  4223b2:	mov    rax,0x469e3c
  4223b9:	cmp    DWORD PTR [rax],0x1
  4223bc:	jg     422540 <xmlStrEqual@plt+0x1e600>
  4223c2:	mov    r13d,0xfffffff6
  4223c8:	xor    r14d,r14d
  4223cb:	xor    ebx,ebx
  4223cd:	mov    rdi,QWORD PTR [r12+0x8]
  4223d2:	test   rdi,rdi
  4223d5:	je     4223dc <xmlStrEqual@plt+0x1e49c>
  4223d7:	call   422bf0 <xmlStrEqual@plt+0x1ecb0>
  4223dc:	sub    rsp,0x8
  4223e0:	push   0x0
  4223e2:	mov    r9d,DWORD PTR [rbp+0x48]
  4223e6:	mov    rdx,r14
  4223e9:	mov    rsi,rbx
  4223ec:	mov    rdi,rbp
  4223ef:	mov    r8d,0x10f5
  4223f5:	mov    ecx,0x10f5
  4223fa:	call   422b60 <xmlStrEqual@plt+0x1ec20>
  4223ff:	mov    QWORD PTR [r12+0x8],rax
  422404:	mov    rax,0x422bf0
  42240b:	mov    QWORD PTR [r12+0x18],rax
  422410:	add    rsp,0x38
  422414:	pop    rbx
  422415:	pop    rbp
  422416:	pop    r12
  422418:	mov    eax,r13d
  42241b:	pop    r13
  42241d:	pop    r14
  42241f:	pop    r15
  422421:	ret    
  422422:	nop    WORD PTR [rax+rax*1+0x0]
  422428:	mov    rbx,QWORD PTR [rax+0x8]
  42242c:	test   rbx,rbx
  42242f:	je     422520 <xmlStrEqual@plt+0x1e5e0>
  422435:	cmp    QWORD PTR [r13+0x8],0x0
  42243a:	je     422570 <xmlStrEqual@plt+0x1e630>
  422440:	mov    r14d,DWORD PTR [rax+0x1c]
  422444:	jmp    422365 <xmlStrEqual@plt+0x1e425>
  422449:	nop    DWORD PTR [rax+0x0]
  422450:	mov    r8,QWORD PTR [r13+0x8]
  422454:	mov    edi,DWORD PTR [r13+0x1c]
  422458:	mov    eax,ecx
  42245a:	xor    edx,edx
  42245c:	div    edi
  42245e:	mov    rsi,QWORD PTR [r15+0x8]
  422462:	mov    r13d,0x1
  422468:	mov    rax,QWORD PTR [r8+rdx*8]
  42246c:	mov    rdi,QWORD PTR [rax]
  42246f:	call   421d00 <xmlStrEqual@plt+0x1ddc0>
  422474:	mov    r14,rax
  422477:	mov    rax,0x469e3c
  42247e:	cmp    DWORD PTR [rax],0x2
  422481:	jle    4223cd <xmlStrEqual@plt+0x1e48d>
  422487:	mov    rdi,r14
  42248a:	call   424d40 <xmlStrEqual@plt+0x20e00>
  42248f:	mov    rdi,rbx
  422492:	mov    QWORD PTR [rsp+0x18],rax
  422497:	call   424d40 <xmlStrEqual@plt+0x20e00>
  42249c:	movzx  r9d,WORD PTR [rbp+0x40]
  4224a1:	movzx  r8d,BYTE PTR [rbp+0x44]
  4224a6:	lea    rdi,[rbp+0x20]
  4224aa:	mov    DWORD PTR [rsp+0xc],r9d
  4224af:	mov    DWORD PTR [rsp+0x8],r8d
  4224b4:	mov    QWORD PTR [rsp+0x10],rax
  4224b9:	movzx  r15d,WORD PTR [rbp+0x42]
  4224be:	call   424d40 <xmlStrEqual@plt+0x20e00>
  4224c3:	mov    rdi,rbp
  4224c6:	mov    QWORD PTR [rsp],rax
  4224ca:	call   424d40 <xmlStrEqual@plt+0x20e00>
  4224cf:	sub    rsp,0x8
  4224d3:	mov    rsi,QWORD PTR [rsp+0x20]
  4224d8:	mov    edi,0x7
  4224dd:	push   rsi
  4224de:	lea    rsi,[rip+0x2bbe3]        # 44e0c8 <xmlStrEqual@plt+0x4a188>
  4224e5:	mov    rdx,QWORD PTR [rsp+0x20]
  4224ea:	push   rdx
  4224eb:	mov    rdx,rax
  4224ee:	xor    eax,eax
  4224f0:	push   r15
  4224f2:	mov    r9d,DWORD PTR [rsp+0x2c]
  4224f7:	mov    r8d,DWORD PTR [rsp+0x28]
  4224fc:	mov    rcx,QWORD PTR [rsp+0x20]
  422501:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  422506:	add    rsp,0x20
  42250a:	jmp    4223cd <xmlStrEqual@plt+0x1e48d>
  42250f:	nop
  422510:	mov    r8,QWORD PTR [r13+0x0]
  422514:	mov    edi,DWORD PTR [r13+0x18]
  422518:	jmp    422458 <xmlStrEqual@plt+0x1e518>
  42251d:	nop    DWORD PTR [rax]
  422520:	mov    rbx,QWORD PTR [rax]
  422523:	test   rbx,rbx
  422526:	je     42261c <xmlStrEqual@plt+0x1e6dc>
  42252c:	cmp    QWORD PTR [r13+0x0],0x0
  422531:	je     422610 <xmlStrEqual@plt+0x1e6d0>
  422537:	mov    r14d,DWORD PTR [rax+0x18]
  42253b:	jmp    422365 <xmlStrEqual@plt+0x1e425>
  422540:	mov    rdi,r14
  422543:	call   425890 <xmlStrEqual@plt+0x21950>
  422548:	movzx  edx,ax
  42254b:	lea    rsi,[rip+0x2bb46]        # 44e098 <xmlStrEqual@plt+0x4a158>
  422552:	mov    edi,0x6
  422557:	xor    eax,eax
  422559:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  42255e:	mov    r13d,0xfffffff6
  422564:	xor    r14d,r14d
  422567:	xor    ebx,ebx
  422569:	jmp    4223cd <xmlStrEqual@plt+0x1e48d>
  42256e:	xchg   ax,ax
  422570:	mov    rbx,QWORD PTR [rax]
  422573:	mov    rdx,QWORD PTR [r13+0x0]
  422577:	test   rbx,rbx
  42257a:	je     4225f2 <xmlStrEqual@plt+0x1e6b2>
  42257c:	test   rdx,rdx
  42257f:	jne    422537 <xmlStrEqual@plt+0x1e5f7>
  422581:	mov    rax,0x469e3c
  422588:	lea    rsi,[rip+0x2ba29]        # 44dfb8 <xmlStrEqual@plt+0x4a078>
  42258f:	cmp    DWORD PTR [rax],0x2
  422592:	jle    4223c2 <xmlStrEqual@plt+0x1e482>
  422598:	mov    edi,0x7
  42259d:	xor    eax,eax
  42259f:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  4225a4:	jmp    4223c2 <xmlStrEqual@plt+0x1e482>
  4225a9:	nop    DWORD PTR [rax+0x0]
  4225b0:	mov    rax,0x469e3c
  4225b7:	lea    rsi,[rip+0x2ba72]        # 44e030 <xmlStrEqual@plt+0x4a0f0>
  4225be:	mov    eax,DWORD PTR [rax]
  4225c0:	mov    edi,0x5
  4225c5:	test   eax,eax
  4225c7:	jle    4223c2 <xmlStrEqual@plt+0x1e482>
  4225cd:	jmp    42259d <xmlStrEqual@plt+0x1e65d>
  4225cf:	nop
  4225d0:	movzx  eax,BYTE PTR [rdx+0x34]
  4225d4:	mov    DWORD PTR [r12+0x10],eax
  4225d9:	mov    rax,0x469e3c
  4225e0:	cmp    DWORD PTR [rax],0x2
  4225e3:	jle    4223c2 <xmlStrEqual@plt+0x1e482>
  4225e9:	lea    rsi,[rip+0x2b978]        # 44df68 <xmlStrEqual@plt+0x4a028>
  4225f0:	jmp    422598 <xmlStrEqual@plt+0x1e658>
  4225f2:	test   rdx,rdx
  4225f5:	je     422581 <xmlStrEqual@plt+0x1e641>
  4225f7:	mov    rax,0x469e3c
  4225fe:	cmp    DWORD PTR [rax],0x2
  422601:	jle    4223c2 <xmlStrEqual@plt+0x1e482>
  422607:	lea    rsi,[rip+0x2b9da]        # 44dfe8 <xmlStrEqual@plt+0x4a0a8>
  42260e:	jmp    422598 <xmlStrEqual@plt+0x1e658>
  422610:	cmp    QWORD PTR [r13+0x8],0x0
  422615:	jne    4225f7 <xmlStrEqual@plt+0x1e6b7>
  422617:	jmp    422581 <xmlStrEqual@plt+0x1e641>
  42261c:	mov    rax,0x469e3c
  422623:	cmp    DWORD PTR [rax],0x2
  422626:	jle    4223c2 <xmlStrEqual@plt+0x1e482>
  42262c:	lea    rsi,[rip+0x2b955]        # 44df88 <xmlStrEqual@plt+0x4a048>
  422633:	mov    edi,0x7
  422638:	xor    eax,eax
  42263a:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  42263f:	xor    r14d,r14d
  422642:	mov    r13d,0xfffffff6
  422648:	jmp    4223cd <xmlStrEqual@plt+0x1e48d>
  42264d:	nop    DWORD PTR [rax]
  422650:	endbr64 
  422654:	push   r15
  422656:	mov    rdi,rsi
  422659:	push   r14
  42265b:	mov    r14,rdx
  42265e:	push   r13
  422660:	push   r12
  422662:	push   rbp
  422663:	mov    rbp,r8
  422666:	push   rbx
  422667:	mov    rbx,rcx
  42266a:	sub    rsp,0x38
  42266e:	mov    rax,QWORD PTR [rdx+0x30]
  422672:	mov    r13,QWORD PTR [rax]
  422675:	call   434a60 <xmlStrEqual@plt+0x30b20>
  42267a:	mov    rcx,QWORD PTR [r14+0x8]
  42267e:	mov    rdx,QWORD PTR [r14+0x20]
  422682:	cmp    WORD PTR [rcx+0x20],0x0
  422687:	je     422860 <xmlStrEqual@plt+0x1e920>
  42268d:	cmp    QWORD PTR [rax+0x10],0x0
  422692:	je     4227e8 <xmlStrEqual@plt+0x1e8a8>
  422698:	mov    r15,QWORD PTR [rdx+0x10]
  42269c:	test   r15,r15
  42269f:	je     4227e8 <xmlStrEqual@plt+0x1e8a8>
  4226a5:	mov    r12d,DWORD PTR [rdx+0x20]
  4226a9:	mov    rdi,rbx
  4226ac:	call   436930 <xmlStrEqual@plt+0x329f0>
  4226b1:	test   eax,eax
  4226b3:	je     422830 <xmlStrEqual@plt+0x1e8f0>
  4226b9:	xor    edx,edx
  4226bb:	div    r12d
  4226be:	mov    rdi,QWORD PTR [r13+0x8]
  4226c2:	mov    r12,QWORD PTR [r15+rdx*8]
  4226c6:	mov    rsi,r12
  4226c9:	call   42ed70 <xmlStrEqual@plt+0x2ae30>
  4226ce:	mov    rdx,rax
  4226d1:	test   rax,rax
  4226d4:	je     422881 <xmlStrEqual@plt+0x1e941>
  4226da:	mov    r12,QWORD PTR [rax+0x18]
  4226de:	mov    r13,QWORD PTR [rax]
  4226e1:	movzx  r15d,WORD PTR [rax+0x8]
  4226e6:	mov    rax,0x469e3c
  4226ed:	mov    r14d,0x1
  4226f3:	cmp    DWORD PTR [rax],0x2
  4226f6:	jle    422792 <xmlStrEqual@plt+0x1e852>
  4226fc:	mov    rdi,r13
  4226ff:	mov    QWORD PTR [rsp+0x8],rdx
  422704:	call   424d40 <xmlStrEqual@plt+0x20e00>
  422709:	mov    rdx,QWORD PTR [rsp+0x8]
  42270e:	mov    QWORD PTR [rsp+0x28],rax
  422713:	mov    rdi,QWORD PTR [rdx+0x18]
  422717:	call   424d40 <xmlStrEqual@plt+0x20e00>
  42271c:	movzx  edx,WORD PTR [rbx+0x42]
  422720:	movzx  r9d,WORD PTR [rbx+0x40]
  422725:	movzx  r8d,BYTE PTR [rbx+0x44]
  42272a:	lea    rdi,[rbx+0x20]
  42272e:	mov    DWORD PTR [rsp+0x1c],edx
  422732:	mov    DWORD PTR [rsp+0x18],r9d
  422737:	mov    DWORD PTR [rsp+0x14],r8d
  42273c:	mov    QWORD PTR [rsp+0x20],rax
  422741:	call   424d40 <xmlStrEqual@plt+0x20e00>
  422746:	mov    rdi,rbx
  422749:	mov    QWORD PTR [rsp+0x8],rax
  42274e:	call   424d40 <xmlStrEqual@plt+0x20e00>
  422753:	sub    rsp,0x8
  422757:	mov    rsi,QWORD PTR [rsp+0x30]
  42275c:	mov    edi,0x7
  422761:	push   rsi
  422762:	lea    rsi,[rip+0x2b95f]        # 44e0c8 <xmlStrEqual@plt+0x4a188>
  422769:	mov    r10,QWORD PTR [rsp+0x30]
  42276e:	push   r10
  422770:	mov    edx,DWORD PTR [rsp+0x34]
  422774:	push   rdx
  422775:	mov    rdx,rax
  422778:	xor    eax,eax
  42277a:	mov    r9d,DWORD PTR [rsp+0x38]
  42277f:	mov    r8d,DWORD PTR [rsp+0x34]
  422784:	mov    rcx,QWORD PTR [rsp+0x28]
  422789:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  42278e:	add    rsp,0x20
  422792:	mov    rdi,QWORD PTR [rbp+0x8]
  422796:	test   rdi,rdi
  422799:	je     4227a0 <xmlStrEqual@plt+0x1e860>
  42279b:	call   422bf0 <xmlStrEqual@plt+0x1ecb0>
  4227a0:	sub    rsp,0x8
  4227a4:	push   0x0
  4227a6:	mov    r9d,DWORD PTR [rbx+0x48]
  4227aa:	mov    r8d,r15d
  4227ad:	mov    rdx,r13
  4227b0:	mov    rsi,r12
  4227b3:	mov    rdi,rbx
  4227b6:	mov    ecx,0x10f6
  4227bb:	call   422b60 <xmlStrEqual@plt+0x1ec20>
  4227c0:	mov    QWORD PTR [rbp+0x8],rax
  4227c4:	mov    rax,0x422bf0
  4227cb:	mov    QWORD PTR [rbp+0x18],rax
  4227cf:	add    rsp,0x48
  4227d3:	pop    rbx
  4227d4:	pop    rbp
  4227d5:	pop    r12
  4227d7:	pop    r13
  4227d9:	mov    eax,r14d
  4227dc:	pop    r14
  4227de:	pop    r15
  4227e0:	ret    
  4227e1:	nop    DWORD PTR [rax+0x0]
  4227e8:	mov    r12,QWORD PTR [rax+0x8]
  4227ec:	test   r12,r12
  4227ef:	je     422808 <xmlStrEqual@plt+0x1e8c8>
  4227f1:	mov    r15,QWORD PTR [rdx+0x8]
  4227f5:	test   r15,r15
  4227f8:	je     422808 <xmlStrEqual@plt+0x1e8c8>
  4227fa:	mov    r12d,DWORD PTR [rdx+0x1c]
  4227fe:	jmp    4226a9 <xmlStrEqual@plt+0x1e769>
  422803:	nop    DWORD PTR [rax+rax*1+0x0]
  422808:	cmp    QWORD PTR [rax],0x0
  42280c:	mov    r15,QWORD PTR [rdx]
  42280f:	je     4228d0 <xmlStrEqual@plt+0x1e990>
  422815:	test   r15,r15
  422818:	je     4228ee <xmlStrEqual@plt+0x1e9ae>
  42281e:	mov    r12d,DWORD PTR [rdx+0x18]
  422822:	jmp    4226a9 <xmlStrEqual@plt+0x1e769>
  422827:	nop    WORD PTR [rax+rax*1+0x0]
  422830:	mov    rax,0x469e3c
  422837:	lea    rsi,[rip+0x2b9e2]        # 44e220 <xmlStrEqual@plt+0x4a2e0>
  42283e:	mov    edx,DWORD PTR [rax]
  422840:	mov    edi,0x5
  422845:	test   edx,edx
  422847:	jg     422878 <xmlStrEqual@plt+0x1e938>
  422849:	xor    r15d,r15d
  42284c:	mov    r14d,0xfffffff6
  422852:	xor    r13d,r13d
  422855:	xor    r12d,r12d
  422858:	jmp    422792 <xmlStrEqual@plt+0x1e852>
  42285d:	nop    DWORD PTR [rax]
  422860:	mov    rax,0x469e3c
  422867:	cmp    DWORD PTR [rax],0x2
  42286a:	jle    422849 <xmlStrEqual@plt+0x1e909>
  42286c:	lea    rsi,[rip+0x2b8ad]        # 44e120 <xmlStrEqual@plt+0x4a1e0>
  422873:	mov    edi,0x7
  422878:	xor    eax,eax
  42287a:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  42287f:	jmp    422849 <xmlStrEqual@plt+0x1e909>
  422881:	mov    rax,0x469e3c
  422888:	mov    eax,DWORD PTR [rax]
  42288a:	test   eax,eax
  42288c:	jle    422849 <xmlStrEqual@plt+0x1e909>
  42288e:	mov    rdi,QWORD PTR [r14+0x8]
  422892:	xor    r15d,r15d
  422895:	call   42b300 <xmlStrEqual@plt+0x273c0>
  42289a:	mov    rdi,QWORD PTR [r12]
  42289e:	mov    r13,rax
  4228a1:	call   424d40 <xmlStrEqual@plt+0x20e00>
  4228a6:	mov    rdx,rax
  4228a9:	mov    rcx,r13
  4228ac:	lea    rsi,[rip+0x2b9d5]        # 44e288 <xmlStrEqual@plt+0x4a348>
  4228b3:	mov    edi,0x5
  4228b8:	xor    eax,eax
  4228ba:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  4228bf:	xor    r13d,r13d
  4228c2:	xor    r12d,r12d
  4228c5:	mov    r14d,0xfffffff6
  4228cb:	jmp    422792 <xmlStrEqual@plt+0x1e852>
  4228d0:	test   r15,r15
  4228d3:	je     4228ee <xmlStrEqual@plt+0x1e9ae>
  4228d5:	mov    rax,0x469e3c
  4228dc:	cmp    DWORD PTR [rax],0x2
  4228df:	jle    422849 <xmlStrEqual@plt+0x1e909>
  4228e5:	lea    rsi,[rip+0x2b8e4]        # 44e1d0 <xmlStrEqual@plt+0x4a290>
  4228ec:	jmp    422873 <xmlStrEqual@plt+0x1e933>
  4228ee:	mov    rax,0x469e3c
  4228f5:	mov    ecx,DWORD PTR [rax]
  4228f7:	test   r12,r12
  4228fa:	je     422932 <xmlStrEqual@plt+0x1e9f2>
  4228fc:	mov    r12,QWORD PTR [rdx+0x8]
  422900:	test   r12,r12
  422903:	jne    4228dc <xmlStrEqual@plt+0x1e99c>
  422905:	cmp    ecx,0x2
  422908:	jle    422849 <xmlStrEqual@plt+0x1e909>
  42290e:	lea    rsi,[rip+0x2b883]        # 44e198 <xmlStrEqual@plt+0x4a258>
  422915:	mov    edi,0x7
  42291a:	xor    eax,eax
  42291c:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  422921:	xor    r13d,r13d
  422924:	xor    r15d,r15d
  422927:	mov    r14d,0xfffffff6
  42292d:	jmp    422792 <xmlStrEqual@plt+0x1e852>
  422932:	lea    rsi,[rip+0x2b827]        # 44e160 <xmlStrEqual@plt+0x4a220>
  422939:	cmp    ecx,0x2
  42293c:	jle    422849 <xmlStrEqual@plt+0x1e909>
  422942:	jmp    422915 <xmlStrEqual@plt+0x1e9d5>
  422944:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  42294f:	nop
  422950:	endbr64 
  422954:	push   r15
  422956:	push   r14
  422958:	mov    r14,r9
  42295b:	push   r13
  42295d:	push   r12
  42295f:	mov    r12,rdi
  422962:	mov    rdi,rsi
  422965:	push   rbp
  422966:	mov    rbp,rsi
  422969:	push   rbx
  42296a:	mov    rbx,rdx
  42296d:	sub    rsp,0x18
  422971:	mov    QWORD PTR [rsp+0x8],rcx
  422976:	mov    QWORD PTR [rsp],r8
  42297a:	call   434ad0 <xmlStrEqual@plt+0x30b90>
  42297f:	mov    rdi,rbx
  422982:	mov    r13,rax
  422985:	call   433790 <xmlStrEqual@plt+0x2f850>
  42298a:	mov    rsi,rax
  42298d:	mov    rdi,r13
  422990:	mov    r15,rax
  422993:	call   425950 <xmlStrEqual@plt+0x21a10>
  422998:	test   eax,eax
  42299a:	je     4229a8 <xmlStrEqual@plt+0x1ea68>
  42299c:	mov    eax,DWORD PTR [r13+0x18]
  4229a0:	test   eax,eax
  4229a2:	jne    422aa0 <xmlStrEqual@plt+0x1eb60>
  4229a8:	cmp    DWORD PTR [r12],0x2
  4229ad:	jne    4229f8 <xmlStrEqual@plt+0x1eab8>
  4229af:	mov    rax,QWORD PTR [rbx+0x30]
  4229b3:	test   rax,rax
  4229b6:	je     4229f8 <xmlStrEqual@plt+0x1eab8>
  4229b8:	cmp    QWORD PTR [rax],0x0
  4229bc:	je     4229f8 <xmlStrEqual@plt+0x1eab8>
  4229be:	mov    rcx,QWORD PTR [rsp]
  4229c2:	mov    r8,r14
  4229c5:	mov    rdx,rbx
  4229c8:	mov    rsi,rbp
  4229cb:	mov    rdi,r12
  4229ce:	call   422650 <xmlStrEqual@plt+0x1e710>
  4229d3:	cmp    eax,0xfffffff6
  4229d6:	jne    422a12 <xmlStrEqual@plt+0x1ead2>
  4229d8:	mov    DWORD PTR [r14+0x10],0x3
  4229e0:	add    rsp,0x18
  4229e4:	pop    rbx
  4229e5:	pop    rbp
  4229e6:	pop    r12
  4229e8:	pop    r13
  4229ea:	pop    r14
  4229ec:	mov    eax,0x1
  4229f1:	pop    r15
  4229f3:	ret    
  4229f4:	nop    DWORD PTR [rax+0x0]
  4229f8:	mov    rcx,QWORD PTR [rsp]
  4229fc:	mov    r8,r14
  4229ff:	mov    rdx,rbx
  422a02:	mov    rsi,rbp
  422a05:	mov    rdi,r12
  422a08:	call   422310 <xmlStrEqual@plt+0x1e3d0>
  422a0d:	cmp    eax,0xfffffff6
  422a10:	je     422a30 <xmlStrEqual@plt+0x1eaf0>
  422a12:	mov    eax,0x1
  422a17:	add    rsp,0x18
  422a1b:	pop    rbx
  422a1c:	pop    rbp
  422a1d:	pop    r12
  422a1f:	pop    r13
  422a21:	pop    r14
  422a23:	pop    r15
  422a25:	ret    
  422a26:	nop    WORD PTR cs:[rax+rax*1+0x0]
  422a30:	mov    rax,QWORD PTR [rbx+0x8]
  422a34:	cmp    DWORD PTR [rax+0x18],0x3
  422a38:	je     4229d8 <xmlStrEqual@plt+0x1ea98>
  422a3a:	cmp    BYTE PTR [rax+0x34],0x1
  422a3e:	jne    422a12 <xmlStrEqual@plt+0x1ead2>
  422a40:	mov    rax,QWORD PTR [rsp+0x8]
  422a45:	test   rax,rax
  422a48:	je     422b30 <xmlStrEqual@plt+0x1ebf0>
  422a4e:	mov    rcx,QWORD PTR [rsp]
  422a52:	mov    r8,r14
  422a55:	mov    rdx,rax
  422a58:	mov    rsi,rbp
  422a5b:	mov    rdi,r12
  422a5e:	call   422310 <xmlStrEqual@plt+0x1e3d0>
  422a63:	cmp    eax,0xfffffff6
  422a66:	je     422afa <xmlStrEqual@plt+0x1ebba>
  422a6c:	mov    rax,0x469e3c
  422a73:	mov    DWORD PTR [r14+0x10],0x1
  422a7b:	cmp    DWORD PTR [rax],0x2
  422a7e:	jle    422a12 <xmlStrEqual@plt+0x1ead2>
  422a80:	lea    rsi,[rip+0x2b948]        # 44e3cf <xmlStrEqual@plt+0x4a48f>
  422a87:	mov    edi,0x7
  422a8c:	xor    eax,eax
  422a8e:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  422a93:	jmp    422a12 <xmlStrEqual@plt+0x1ead2>
  422a98:	nop    DWORD PTR [rax+rax*1+0x0]
  422aa0:	mov    rdi,r15
  422aa3:	call   43c020 <xmlStrEqual@plt+0x380e0>
  422aa8:	test   al,al
  422aaa:	jne    4229a8 <xmlStrEqual@plt+0x1ea68>
  422ab0:	mov    rax,0x469e3c
  422ab7:	cmp    DWORD PTR [rax],0x2
  422aba:	jle    422ae8 <xmlStrEqual@plt+0x1eba8>
  422abc:	mov    rdi,r15
  422abf:	call   424d40 <xmlStrEqual@plt+0x20e00>
  422ac4:	mov    rdi,r13
  422ac7:	mov    rbx,rax
  422aca:	call   424d40 <xmlStrEqual@plt+0x20e00>
  422acf:	mov    rdx,rax
  422ad2:	mov    rcx,rbx
  422ad5:	lea    rsi,[rip+0x2b824]        # 44e300 <xmlStrEqual@plt+0x4a3c0>
  422adc:	mov    edi,0x7
  422ae1:	xor    eax,eax
  422ae3:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  422ae8:	mov    DWORD PTR [r14+0x10],0x0
  422af0:	mov    eax,0xfffffff6
  422af5:	jmp    422a17 <xmlStrEqual@plt+0x1ead7>
  422afa:	mov    rdi,QWORD PTR [rsp+0x8]
  422aff:	call   4337a0 <xmlStrEqual@plt+0x2f860>
  422b04:	cmp    al,0x1
  422b06:	mov    rax,0x469e3c
  422b0d:	je     422b42 <xmlStrEqual@plt+0x1ec02>
  422b0f:	cmp    DWORD PTR [rax],0x2
  422b12:	jle    422b30 <xmlStrEqual@plt+0x1ebf0>
  422b14:	lea    rsi,[rip+0x2b86d]        # 44e388 <xmlStrEqual@plt+0x4a448>
  422b1b:	mov    edi,0x7
  422b20:	xor    eax,eax
  422b22:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  422b27:	nop    WORD PTR [rax+rax*1+0x0]
  422b30:	mov    DWORD PTR [r14+0x10],0x0
  422b38:	mov    eax,0x1
  422b3d:	jmp    422a17 <xmlStrEqual@plt+0x1ead7>
  422b42:	cmp    DWORD PTR [rax],0x2
  422b45:	jle    422b30 <xmlStrEqual@plt+0x1ebf0>
  422b47:	lea    rsi,[rip+0x2b7fa]        # 44e348 <xmlStrEqual@plt+0x4a408>
  422b4e:	mov    edi,0x7
  422b53:	xor    eax,eax
  422b55:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  422b5a:	jmp    422b30 <xmlStrEqual@plt+0x1ebf0>
  422b5c:	nop    DWORD PTR [rax+0x0]
  422b60:	endbr64 
  422b64:	push   r15
  422b66:	mov    r15,rdi
  422b69:	mov    edi,0x30
  422b6e:	push   r14
  422b70:	mov    r14,rsi
  422b73:	push   r13
  422b75:	push   r12
  422b77:	mov    r12d,ecx
  422b7a:	push   rbp
  422b7b:	mov    ebp,r8d
  422b7e:	push   rbx
  422b7f:	mov    ebx,r9d
  422b82:	sub    rsp,0x18
  422b86:	mov    QWORD PTR [rsp+0x8],rdx
  422b8b:	call   434fe0 <xmlStrEqual@plt+0x310a0>
  422b90:	mov    r13,rax
  422b93:	test   rax,rax
  422b96:	je     422bd5 <xmlStrEqual@plt+0x1ec95>
  422b98:	mov    rdi,r15
  422b9b:	call   436b00 <xmlStrEqual@plt+0x32bc0>
  422ba0:	mov    QWORD PTR [r13+0x0],rax
  422ba4:	mov    rdi,r14
  422ba7:	call   425060 <xmlStrEqual@plt+0x21120>
  422bac:	mov    QWORD PTR [r13+0x8],rax
  422bb0:	mov    rdi,QWORD PTR [rsp+0x8]
  422bb5:	call   425060 <xmlStrEqual@plt+0x21120>
  422bba:	mov    QWORD PTR [r13+0x10],rax
  422bbe:	mov    rax,QWORD PTR [rsp+0x50]
  422bc3:	mov    WORD PTR [r13+0x18],r12w
  422bc8:	mov    WORD PTR [r13+0x1a],bp
  422bcd:	mov    DWORD PTR [r13+0x28],ebx
  422bd1:	mov    QWORD PTR [r13+0x20],rax
  422bd5:	add    rsp,0x18
  422bd9:	pop    rbx
  422bda:	pop    rbp
  422bdb:	pop    r12
  422bdd:	mov    rax,r13
  422be0:	pop    r13
  422be2:	pop    r14
  422be4:	pop    r15
  422be6:	ret    
  422be7:	nop    WORD PTR [rax+rax*1+0x0]
  422bf0:	endbr64 
  422bf4:	test   rdi,rdi
  422bf7:	je     422c20 <xmlStrEqual@plt+0x1ece0>
  422bf9:	push   rbx
  422bfa:	mov    rbx,rdi
  422bfd:	mov    rdi,QWORD PTR [rdi]
  422c00:	call   436b60 <xmlStrEqual@plt+0x32c20>
  422c05:	mov    rdi,QWORD PTR [rbx+0x8]
  422c09:	call   424bf0 <xmlStrEqual@plt+0x20cb0>
  422c0e:	mov    rdi,QWORD PTR [rbx+0x10]
  422c12:	call   424bf0 <xmlStrEqual@plt+0x20cb0>
  422c17:	mov    rdi,rbx
  422c1a:	pop    rbx
  422c1b:	jmp    4037b0 <free@plt>
  422c20:	ret    
  422c21:	nop    WORD PTR cs:[rax+rax*1+0x0]
  422c2b:	nop    DWORD PTR [rax+rax*1+0x0]
  422c30:	endbr64 
  422c34:	movzx  eax,WORD PTR [rdi+0x24]
  422c38:	cmp    ax,0xffff
  422c3c:	je     422c50 <xmlStrEqual@plt+0x1ed10>
  422c3e:	add    rax,QWORD PTR [rdi+0x30]
  422c42:	je     422c50 <xmlStrEqual@plt+0x1ed10>
  422c44:	movzx  eax,BYTE PTR [rax]
  422c47:	shr    al,0x4
  422c4a:	movzx  eax,al
  422c4d:	ret    
  422c4e:	xchg   ax,ax
  422c50:	xor    eax,eax
  422c52:	ret    
  422c53:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  422c5e:	xchg   ax,ax
  422c60:	movzx  eax,WORD PTR [rdi+0x24]
  422c64:	push   rbx
  422c65:	cmp    ax,0xffff
  422c69:	je     422c98 <xmlStrEqual@plt+0x1ed58>
  422c6b:	add    rax,QWORD PTR [rdi+0x30]
  422c6f:	mov    rbx,rax
  422c72:	call   422c30 <xmlStrEqual@plt+0x1ecf0>
  422c77:	cmp    eax,0x6
  422c7a:	ja     422c93 <xmlStrEqual@plt+0x1ed53>
  422c7c:	lea    rdx,[rip+0x2b769]        # 44e3ec <xmlStrEqual@plt+0x4a4ac>
  422c83:	mov    eax,eax
  422c85:	movsxd rax,DWORD PTR [rdx+rax*4]
  422c89:	add    rax,rdx
  422c8c:	notrack jmp rax
  422c8f:	nop
  422c90:	inc    BYTE PTR [rbx+0x3]
  422c93:	pop    rbx
  422c94:	ret    
  422c95:	nop    DWORD PTR [rax]
  422c98:	xor    ebx,ebx
  422c9a:	jmp    422c72 <xmlStrEqual@plt+0x1ed32>
  422c9c:	nop    DWORD PTR [rax+0x0]
  422ca0:	endbr64 
  422ca4:	mov    rax,QWORD PTR [rdi+0x38]
  422ca8:	mov    rdx,rax
  422cab:	sub    rdx,QWORD PTR [rdi+0x30]
  422caf:	mov    WORD PTR [rdi+0x1e],dx
  422cb3:	mov    edx,DWORD PTR [rdi+0x14]
  422cb6:	cmp    edx,0x3
  422cb9:	jbe    422cd0 <xmlStrEqual@plt+0x1ed90>
  422cbb:	lea    rcx,[rax+0x4]
  422cbf:	sub    edx,0x4
  422cc2:	mov    QWORD PTR [rdi+0x38],rcx
  422cc6:	mov    DWORD PTR [rdi+0x14],edx
  422cc9:	ret    
  422cca:	nop    WORD PTR [rax+rax*1+0x0]
  422cd0:	xor    eax,eax
  422cd2:	ret    
  422cd3:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  422cde:	xchg   ax,ax
  422ce0:	endbr64 
  422ce4:	push   r13
  422ce6:	push   r12
  422ce8:	push   rbp
  422ce9:	push   rbx
  422cea:	mov    rbx,rdi
  422ced:	sub    rsp,0x18
  422cf1:	mov    rax,QWORD PTR [rdi+0x38]
  422cf5:	sub    rax,QWORD PTR [rdi+0x30]
  422cf9:	mov    WORD PTR [rdi+0x20],ax
  422cfd:	call   435f70 <xmlStrEqual@plt+0x32030>
  422d02:	test   rax,rax
  422d05:	je     422de8 <xmlStrEqual@plt+0x1eea8>
  422d0b:	mov    rbp,rax
  422d0e:	mov    rax,QWORD PTR [rbx+0x38]
  422d12:	mov    rdi,rbx
  422d15:	sub    rax,QWORD PTR [rbx+0x30]
  422d19:	mov    WORD PTR [rbx+0x22],ax
  422d1d:	call   435fc0 <xmlStrEqual@plt+0x32080>
  422d22:	mov    r12,rax
  422d25:	mov    rax,QWORD PTR [rbx+0x38]
  422d29:	movzx  r13d,WORD PTR [r12+0x4]
  422d2f:	sub    rax,QWORD PTR [rbx+0x30]
  422d33:	mov    WORD PTR [rbx+0x24],ax
  422d37:	movzx  eax,BYTE PTR [rbp+0x0]
  422d3b:	and    eax,0xfffffff0
  422d3e:	cmp    al,0x40
  422d40:	je     422d70 <xmlStrEqual@plt+0x1ee30>
  422d42:	mov    rbx,0x469e3c
  422d49:	cmp    WORD PTR [r12+0x6],0x0
  422d50:	jne    422da0 <xmlStrEqual@plt+0x1ee60>
  422d52:	cmp    DWORD PTR [rbx],0x1
  422d55:	jg     422df8 <xmlStrEqual@plt+0x1eeb8>
  422d5b:	add    rsp,0x18
  422d5f:	pop    rbx
  422d60:	pop    rbp
  422d61:	pop    r12
  422d63:	mov    eax,0x1
  422d68:	pop    r13
  422d6a:	ret    
  422d6b:	nop    DWORD PTR [rax+rax*1+0x0]
  422d70:	mov    esi,0x14
  422d75:	mov    rdi,rbp
  422d78:	call   42d9c0 <xmlStrEqual@plt+0x29a80>
  422d7d:	mov    rbx,0x469e3c
  422d84:	test   ax,ax
  422d87:	je     422d49 <xmlStrEqual@plt+0x1ee09>
  422d89:	cmp    DWORD PTR [rbx],0x1
  422d8c:	jg     422e90 <xmlStrEqual@plt+0x1ef50>
  422d92:	cmp    WORD PTR [r12+0x6],0x0
  422d99:	je     422d5b <xmlStrEqual@plt+0x1ee1b>
  422d9b:	nop    DWORD PTR [rax+rax*1+0x0]
  422da0:	movzx  edi,BYTE PTR [rbp+0x0]
  422da4:	shr    dil,0x4
  422da8:	movzx  edi,dil
  422dac:	call   426780 <xmlStrEqual@plt+0x22840>
  422db1:	mov    WORD PTR [rsp+0xe],r13w
  422db7:	movzx  ecx,al
  422dba:	mov    rdx,rbp
  422dbd:	movbe  si,WORD PTR [rsp+0xe]
  422dc4:	mov    rdi,r12
  422dc7:	movzx  esi,si
  422dca:	call   42dba0 <xmlStrEqual@plt+0x29c60>
  422dcf:	test   ax,ax
  422dd2:	je     422d52 <xmlStrEqual@plt+0x1ee12>
  422dd8:	cmp    DWORD PTR [rbx],0x1
  422ddb:	jg     422e70 <xmlStrEqual@plt+0x1ef30>
  422de1:	nop    DWORD PTR [rax+0x0]
  422de8:	xor    eax,eax
  422dea:	add    rsp,0x18
  422dee:	pop    rbx
  422def:	pop    rbp
  422df0:	pop    r12
  422df2:	pop    r13
  422df4:	ret    
  422df5:	nop    DWORD PTR [rax]
  422df8:	movzx  edi,BYTE PTR [rbp+0x0]
  422dfc:	movbe  bx,WORD PTR [r12+0x2]
  422e04:	shr    dil,0x4
  422e08:	movzx  edi,dil
  422e0c:	movbe  r12w,WORD PTR [r12]
  422e13:	call   426780 <xmlStrEqual@plt+0x22840>
  422e18:	movzx  esi,al
  422e1b:	lea    rdi,[rbp+0x10]
  422e1f:	call   4263b0 <xmlStrEqual@plt+0x22470>
  422e24:	movzx  edi,BYTE PTR [rbp+0x0]
  422e28:	mov    r13,rax
  422e2b:	shr    dil,0x4
  422e2f:	movzx  edi,dil
  422e33:	call   426780 <xmlStrEqual@plt+0x22840>
  422e38:	movzx  esi,al
  422e3b:	lea    rdi,[rbp+0xc]
  422e3f:	call   4263b0 <xmlStrEqual@plt+0x22470>
  422e44:	mov    rdx,rax
  422e47:	movzx  r9d,bx
  422e4b:	movzx  r8d,r12w
  422e4f:	mov    rcx,r13
  422e52:	lea    rsi,[rip+0x2b687]        # 44e4e0 <xmlStrEqual@plt+0x4a5a0>
  422e59:	mov    edi,0x6
  422e5e:	xor    eax,eax
  422e60:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  422e65:	jmp    422d5b <xmlStrEqual@plt+0x1ee1b>
  422e6a:	nop    WORD PTR [rax+rax*1+0x0]
  422e70:	xor    eax,eax
  422e72:	lea    rsi,[rip+0x2b5eb]        # 44e464 <xmlStrEqual@plt+0x4a524>
  422e79:	mov    edi,0x6
  422e7e:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  422e83:	xor    eax,eax
  422e85:	jmp    422dea <xmlStrEqual@plt+0x1eeaa>
  422e8a:	nop    WORD PTR [rax+rax*1+0x0]
  422e90:	lea    rsi,[rip+0x2b5b9]        # 44e450 <xmlStrEqual@plt+0x4a510>
  422e97:	mov    edi,0x6
  422e9c:	xor    eax,eax
  422e9e:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  422ea3:	jmp    422d49 <xmlStrEqual@plt+0x1ee09>
  422ea8:	nop    DWORD PTR [rax+rax*1+0x0]
  422eb0:	endbr64 
  422eb4:	push   rbx
  422eb5:	mov    rbx,rdi
  422eb8:	mov    rdi,QWORD PTR [rdi+0x38]
  422ebc:	call   425230 <xmlStrEqual@plt+0x212f0>
  422ec1:	mov    edx,eax
  422ec3:	xor    eax,eax
  422ec5:	test   edx,edx
  422ec7:	js     422ee0 <xmlStrEqual@plt+0x1efa0>
  422ec9:	mov    eax,DWORD PTR [rbx+0x14]
  422ecc:	cmp    edx,eax
  422ece:	ja     422ee8 <xmlStrEqual@plt+0x1efa8>
  422ed0:	mov    ecx,edx
  422ed2:	add    QWORD PTR [rbx+0x38],rcx
  422ed6:	sub    eax,edx
  422ed8:	mov    DWORD PTR [rbx+0x14],eax
  422edb:	mov    eax,0x1
  422ee0:	pop    rbx
  422ee1:	ret    
  422ee2:	nop    WORD PTR [rax+rax*1+0x0]
  422ee8:	mov    eax,0x1
  422eed:	pop    rbx
  422eee:	ret    
  422eef:	nop
  422ef0:	endbr64 
  422ef4:	push   r12
  422ef6:	push   rbp
  422ef7:	mov    rbp,rsi
  422efa:	push   rbx
  422efb:	mov    rbx,rdi
  422efe:	mov    r12,QWORD PTR [rdi+0x38]
  422f02:	lea    rdi,[r12+0x2]
  422f07:	call   425230 <xmlStrEqual@plt+0x212f0>
  422f0c:	mov    edx,DWORD PTR [rbx+0x14]
  422f0f:	cmp    eax,edx
  422f11:	ja     422f1e <xmlStrEqual@plt+0x1efde>
  422f13:	mov    ecx,eax
  422f15:	sub    edx,eax
  422f17:	add    QWORD PTR [rbx+0x38],rcx
  422f1b:	mov    DWORD PTR [rbx+0x14],edx
  422f1e:	movzx  esi,BYTE PTR [r12+0x1]
  422f24:	mov    rdi,rbp
  422f27:	call   425730 <xmlStrEqual@plt+0x217f0>
  422f2c:	pop    rbx
  422f2d:	pop    rbp
  422f2e:	mov    eax,0x1
  422f33:	pop    r12
  422f35:	ret    
  422f36:	nop    WORD PTR cs:[rax+rax*1+0x0]
  422f40:	endbr64 
  422f44:	push   r15
  422f46:	push   r14
  422f48:	push   r13
  422f4a:	push   r12
  422f4c:	push   rbp
  422f4d:	push   rbx
  422f4e:	sub    rsp,0x8
  422f52:	movzx  r13d,WORD PTR [rdi+0x24]
  422f57:	cmp    r13w,0xffff
  422f5c:	je     423002 <xmlStrEqual@plt+0x1f0c2>
  422f62:	xor    eax,eax
  422f64:	mov    r14,rdi
  422f67:	mov    r15,rsi
  422f6a:	add    r13,QWORD PTR [rdi+0x30]
  422f6e:	call   424be0 <xmlStrEqual@plt+0x20ca0>
  422f73:	mov    rbp,rax
  422f76:	xor    ebx,ebx
  422f78:	jmp    422fcc <xmlStrEqual@plt+0x1f08c>
  422f7a:	nop    WORD PTR [rax+rax*1+0x0]
  422f80:	mov    rdi,rbp
  422f83:	call   425060 <xmlStrEqual@plt+0x21120>
  422f88:	mov    rdi,rax
  422f8b:	mov    rsi,r15
  422f8e:	call   42dcf0 <xmlStrEqual@plt+0x29db0>
  422f93:	mov    rax,0x469e3c
  422f9a:	mov    eax,DWORD PTR [rax]
  422f9c:	test   eax,eax
  422f9e:	jle    422fbe <xmlStrEqual@plt+0x1f07e>
  422fa0:	mov    rdi,rbp
  422fa3:	call   424d40 <xmlStrEqual@plt+0x20e00>
  422fa8:	mov    rdx,rax
  422fab:	lea    rsi,[rip+0x2b4c7]        # 44e479 <xmlStrEqual@plt+0x4a539>
  422fb2:	mov    edi,0x5
  422fb7:	xor    eax,eax
  422fb9:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  422fbe:	movzx  eax,BYTE PTR [r13+0x2]
  422fc3:	inc    ebx
  422fc5:	and    eax,0x1f
  422fc8:	cmp    eax,ebx
  422fca:	jl     422fe8 <xmlStrEqual@plt+0x1f0a8>
  422fcc:	mov    rsi,rbp
  422fcf:	mov    rdi,r14
  422fd2:	call   422eb0 <xmlStrEqual@plt+0x1ef70>
  422fd7:	mov    r12d,eax
  422fda:	cmp    eax,0x1
  422fdd:	je     422f80 <xmlStrEqual@plt+0x1f040>
  422fdf:	xor    r12d,r12d
  422fe2:	jmp    422ff0 <xmlStrEqual@plt+0x1f0b0>
  422fe4:	nop    DWORD PTR [rax+0x0]
  422fe8:	mov    rdi,rbp
  422feb:	call   424bf0 <xmlStrEqual@plt+0x20cb0>
  422ff0:	add    rsp,0x8
  422ff4:	pop    rbx
  422ff5:	pop    rbp
  422ff6:	mov    eax,r12d
  422ff9:	pop    r12
  422ffb:	pop    r13
  422ffd:	pop    r14
  422fff:	pop    r15
  423001:	ret    
  423002:	xor    eax,eax
  423004:	call   424be0 <xmlStrEqual@plt+0x20ca0>
  423009:	mov    rax,QWORD PTR ds:0x0
  423011:	ud2    
  423013:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  42301e:	xchg   ax,ax
  423020:	endbr64 
  423024:	push   r13
  423026:	mov    r13,rsi
  423029:	push   r12
  42302b:	push   rbp
  42302c:	xor    ebp,ebp
  42302e:	push   rbx
  42302f:	mov    rbx,rdi
  423032:	sub    rsp,0x8
  423036:	mov    r12,QWORD PTR [rdi+0x38]
  42303a:	mov    rdi,r12
  42303d:	call   42ab80 <xmlStrEqual@plt+0x26c40>
  423042:	test   eax,eax
  423044:	jle    42306a <xmlStrEqual@plt+0x1f12a>
  423046:	mov    edx,DWORD PTR [rbx+0x14]
  423049:	cmp    eax,edx
  42304b:	ja     423058 <xmlStrEqual@plt+0x1f118>
  42304d:	mov    ecx,eax
  42304f:	sub    edx,eax
  423051:	add    QWORD PTR [rbx+0x38],rcx
  423055:	mov    DWORD PTR [rbx+0x14],edx
  423058:	mov    rax,0x469e3c
  42305f:	mov    ebp,0x1
  423064:	mov    eax,DWORD PTR [rax]
  423066:	test   eax,eax
  423068:	jg     423080 <xmlStrEqual@plt+0x1f140>
  42306a:	add    rsp,0x8
  42306e:	pop    rbx
  42306f:	mov    eax,ebp
  423071:	pop    rbp
  423072:	pop    r12
  423074:	pop    r13
  423076:	ret    
  423077:	nop    WORD PTR [rax+rax*1+0x0]
  423080:	mov    rdi,QWORD PTR [r13+0x0]
  423084:	call   424d40 <xmlStrEqual@plt+0x20e00>
  423089:	mov    rdi,r12
  42308c:	mov    rbx,rax
  42308f:	call   42d920 <xmlStrEqual@plt+0x299e0>
  423094:	mov    rdx,rax
  423097:	mov    rcx,rbx
  42309a:	xor    eax,eax
  42309c:	lea    rsi,[rip+0x2b3e4]        # 44e487 <xmlStrEqual@plt+0x4a547>
  4230a3:	mov    edi,0x5
  4230a8:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  4230ad:	add    rsp,0x8
  4230b1:	pop    rbx
  4230b2:	mov    eax,ebp
  4230b4:	pop    rbp
  4230b5:	pop    r12
  4230b7:	pop    r13
  4230b9:	ret    
  4230ba:	nop    WORD PTR [rax+rax*1+0x0]
  4230c0:	endbr64 
  4230c4:	push   r15
  4230c6:	mov    r15,rdx
  4230c9:	push   r14
  4230cb:	push   r13
  4230cd:	push   r12
  4230cf:	push   rbp
  4230d0:	mov    rbp,rdi
  4230d3:	push   rbx
  4230d4:	mov    rbx,rsi
  4230d7:	sub    rsp,0x18
  4230db:	mov    eax,DWORD PTR [rdi+0x14]
  4230de:	mov    QWORD PTR [rsp+0x8],rcx
  4230e3:	mov    r14,QWORD PTR [rdi+0x38]
  4230e7:	cmp    eax,0x9
  4230ea:	jbe    423260 <xmlStrEqual@plt+0x1f320>
  4230f0:	lea    rdi,[r14+0xa]
  4230f4:	sub    eax,0xa
  4230f7:	mov    QWORD PTR [rbp+0x38],rdi
  4230fb:	mov    DWORD PTR [rbp+0x14],eax
  4230fe:	mov    rsi,rbx
  423101:	call   425230 <xmlStrEqual@plt+0x212f0>
  423106:	test   eax,eax
  423108:	jle    423210 <xmlStrEqual@plt+0x1f2d0>
  42310e:	mov    edx,DWORD PTR [rbp+0x14]
  423111:	cmp    eax,edx
  423113:	ja     423120 <xmlStrEqual@plt+0x1f1e0>
  423115:	mov    ecx,eax
  423117:	sub    edx,eax
  423119:	add    QWORD PTR [rbp+0x38],rcx
  42311d:	mov    DWORD PTR [rbp+0x14],edx
  423120:	movzx  esi,BYTE PTR [r14+0x5]
  423125:	mov    rdi,rbx
  423128:	call   425730 <xmlStrEqual@plt+0x217f0>
  42312d:	mov    rax,0x469e3c
  423134:	mov    edx,DWORD PTR [rax]
  423136:	test   edx,edx
  423138:	jg     423228 <xmlStrEqual@plt+0x1f2e8>
  42313e:	cmp    BYTE PTR [r14+0x4],0x0
  423143:	je     423268 <xmlStrEqual@plt+0x1f328>
  423149:	xor    r12d,r12d
  42314c:	mov    QWORD PTR [rsp],0x0
  423154:	jmp    42319d <xmlStrEqual@plt+0x1f25d>
  423156:	nop    WORD PTR cs:[rax+rax*1+0x0]
  423160:	mov    rax,0x469e3c
  423167:	mov    eax,DWORD PTR [rax]
  423169:	test   eax,eax
  42316b:	jle    423190 <xmlStrEqual@plt+0x1f250>
  42316d:	mov    rdi,QWORD PTR [rbx]
  423170:	call   424d40 <xmlStrEqual@plt+0x20e00>
  423175:	mov    rdx,rax
  423178:	lea    rsi,[rip+0x2b389]        # 44e508 <xmlStrEqual@plt+0x4a5c8>
  42317f:	mov    edi,0x5
  423184:	xor    eax,eax
  423186:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  42318b:	nop    DWORD PTR [rax+rax*1+0x0]
  423190:	movzx  eax,BYTE PTR [r14+0x4]
  423195:	inc    r12d
  423198:	cmp    eax,r12d
  42319b:	jle    4231e8 <xmlStrEqual@plt+0x1f2a8>
  42319d:	xor    eax,eax
  42319f:	mov    r13,QWORD PTR [rbp+0x38]
  4231a3:	call   42a820 <xmlStrEqual@plt+0x268e0>
  4231a8:	mov    rsi,rax
  4231ab:	mov    rdi,rbp
  4231ae:	mov    rbx,rax
  4231b1:	call   423020 <xmlStrEqual@plt+0x1f0e0>
  4231b6:	cmp    eax,0x1
  4231b9:	jne    423210 <xmlStrEqual@plt+0x1f2d0>
  4231bb:	mov    rsi,r15
  4231be:	mov    rdi,rbx
  4231c1:	call   42dcf0 <xmlStrEqual@plt+0x29db0>
  4231c6:	test   BYTE PTR [r13+0x5],0x2
  4231cb:	je     423190 <xmlStrEqual@plt+0x1f250>
  4231cd:	cmp    QWORD PTR [rsp],0x0
  4231d2:	jne    423160 <xmlStrEqual@plt+0x1f220>
  4231d4:	movzx  eax,BYTE PTR [r14+0x4]
  4231d9:	inc    r12d
  4231dc:	mov    QWORD PTR [rsp],rbx
  4231e0:	cmp    eax,r12d
  4231e3:	jg     42319d <xmlStrEqual@plt+0x1f25d>
  4231e5:	nop    DWORD PTR [rax]
  4231e8:	mov    rcx,QWORD PTR [rsp+0x8]
  4231ed:	mov    eax,0x1
  4231f2:	test   rcx,rcx
  4231f5:	je     423212 <xmlStrEqual@plt+0x1f2d2>
  4231f7:	mov    rdx,QWORD PTR [rsp]
  4231fb:	mov    QWORD PTR [rcx],rdx
  4231fe:	add    rsp,0x18
  423202:	pop    rbx
  423203:	pop    rbp
  423204:	pop    r12
  423206:	pop    r13
  423208:	pop    r14
  42320a:	pop    r15
  42320c:	ret    
  42320d:	nop    DWORD PTR [rax]
  423210:	xor    eax,eax
  423212:	add    rsp,0x18
  423216:	pop    rbx
  423217:	pop    rbp
  423218:	pop    r12
  42321a:	pop    r13
  42321c:	pop    r14
  42321e:	pop    r15
  423220:	ret    
  423221:	nop    DWORD PTR [rax+0x0]
  423228:	mov    rdi,rbx
  42322b:	call   424d40 <xmlStrEqual@plt+0x20e00>
  423230:	mov    rdi,r14
  423233:	mov    rbx,rax
  423236:	call   42d6c0 <xmlStrEqual@plt+0x29780>
  42323b:	mov    rdx,rax
  42323e:	mov    rcx,rbx
  423241:	lea    rsi,[rip+0x2b250]        # 44e498 <xmlStrEqual@plt+0x4a558>
  423248:	mov    edi,0x5
  42324d:	xor    eax,eax
  42324f:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  423254:	jmp    42313e <xmlStrEqual@plt+0x1f1fe>
  423259:	nop    DWORD PTR [rax+0x0]
  423260:	mov    rdi,r14
  423263:	jmp    4230fe <xmlStrEqual@plt+0x1f1be>
  423268:	mov    QWORD PTR [rsp],0x0
  423270:	jmp    4231e8 <xmlStrEqual@plt+0x1f2a8>
  423275:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  423280:	endbr64 
  423284:	push   r15
  423286:	xor    r15d,r15d
  423289:	push   r14
  42328b:	push   r13
  42328d:	push   r12
  42328f:	push   rbp
  423290:	push   rbx
  423291:	sub    rsp,0x8
  423295:	test   rsi,rsi
  423298:	je     42332e <xmlStrEqual@plt+0x1f3ee>
  42329e:	mov    rax,QWORD PTR [rdi+0x38]
  4232a2:	mov    r12,rdx
  4232a5:	movbe  edx,DWORD PTR [rax]
  4232a9:	mov    rbp,rsi
  4232ac:	mov    DWORD PTR [rsi+0x30],edx
  4232af:	mov    rbx,rdi
  4232b2:	movzx  edx,BYTE PTR [rax+0x6]
  4232b6:	shr    dl,0x5
  4232b9:	mov    BYTE PTR [rsi+0x34],dl
  4232bc:	movzx  eax,BYTE PTR [rax+0x6]
  4232c0:	shr    al,0x4
  4232c3:	and    eax,0x1
  4232c6:	mov    BYTE PTR [rsi+0x35],al
  4232c9:	call   42dc90 <xmlStrEqual@plt+0x29d50>
  4232ce:	mov    rdx,rax
  4232d1:	mov    rcx,r12
  4232d4:	mov    rsi,rbp
  4232d7:	mov    rdi,rbx
  4232da:	mov    r14,rax
  4232dd:	call   4230c0 <xmlStrEqual@plt+0x1f180>
  4232e2:	mov    r15d,eax
  4232e5:	cmp    eax,0x1
  4232e8:	jne    423340 <xmlStrEqual@plt+0x1f400>
  4232ea:	mov    rbx,QWORD PTR [r14+0x8]
  4232ee:	cmp    r14,rbx
  4232f1:	je     423326 <xmlStrEqual@plt+0x1f3e6>
  4232f3:	nop    DWORD PTR [rax+rax*1+0x0]
  4232f8:	mov    r13,QWORD PTR [rbx+0x10]
  4232fc:	mov    rdi,rbp
  4232ff:	mov    rsi,r13
  423302:	call   42b7b0 <xmlStrEqual@plt+0x27870>
  423307:	mov    r12d,eax
  42330a:	cmp    eax,0x1
  42330d:	je     42331d <xmlStrEqual@plt+0x1f3dd>
  42330f:	mov    rdi,r13
  423312:	call   42a7f0 <xmlStrEqual@plt+0x268b0>
  423317:	cmp    r12d,0xfffffffb
  42331b:	jne    423340 <xmlStrEqual@plt+0x1f400>
  42331d:	mov    rbx,QWORD PTR [rbx+0x8]
  423321:	cmp    r14,rbx
  423324:	jne    4232f8 <xmlStrEqual@plt+0x1f3b8>
  423326:	mov    rdi,r14
  423329:	call   42e2b0 <xmlStrEqual@plt+0x2a370>
  42332e:	add    rsp,0x8
  423332:	pop    rbx
  423333:	pop    rbp
  423334:	pop    r12
  423336:	pop    r13
  423338:	pop    r14
  42333a:	mov    eax,r15d
  42333d:	pop    r15
  42333f:	ret    
  423340:	mov    rdi,r14
  423343:	call   42e2b0 <xmlStrEqual@plt+0x2a370>
  423348:	xor    r15d,r15d
  42334b:	jmp    42332e <xmlStrEqual@plt+0x1f3ee>
  42334d:	nop    DWORD PTR [rax]
  423350:	endbr64 
  423354:	push   r14
  423356:	mov    r14,rdx
  423359:	push   r13
  42335b:	push   r12
  42335d:	mov    r12,rdi
  423360:	push   rbp
  423361:	push   rbx
  423362:	mov    rbx,rsi
  423365:	mov    eax,DWORD PTR [rdi+0x14]
  423368:	mov    r13,QWORD PTR [rdi+0x38]
  42336c:	cmp    eax,0x9
  42336f:	jbe    423450 <xmlStrEqual@plt+0x1f510>
  423375:	lea    rdi,[r13+0xa]
  423379:	sub    eax,0xa
  42337c:	mov    QWORD PTR [r12+0x38],rdi
  423381:	mov    DWORD PTR [r12+0x14],eax
  423386:	mov    rsi,rbx
  423389:	call   425230 <xmlStrEqual@plt+0x212f0>
  42338e:	test   eax,eax
  423390:	jle    423400 <xmlStrEqual@plt+0x1f4c0>
  423392:	mov    edx,DWORD PTR [r12+0x14]
  423397:	cmp    eax,edx
  423399:	ja     4233a9 <xmlStrEqual@plt+0x1f469>
  42339b:	mov    ecx,eax
  42339d:	sub    edx,eax
  42339f:	add    QWORD PTR [r12+0x38],rcx
  4233a4:	mov    DWORD PTR [r12+0x14],edx
  4233a9:	movzx  esi,BYTE PTR [r13+0x5]
  4233ae:	mov    rdi,rbx
  4233b1:	call   425730 <xmlStrEqual@plt+0x217f0>
  4233b6:	mov    rax,0x469e3c
  4233bd:	mov    eax,DWORD PTR [rax]
  4233bf:	test   eax,eax
  4233c1:	jg     423410 <xmlStrEqual@plt+0x1f4d0>
  4233c3:	xor    ebx,ebx
  4233c5:	cmp    BYTE PTR [r13+0x4],0x0
  4233ca:	jne    4233e6 <xmlStrEqual@plt+0x1f4a6>
  4233cc:	jmp    423440 <xmlStrEqual@plt+0x1f500>
  4233ce:	xchg   ax,ax
  4233d0:	mov    rsi,r14
  4233d3:	mov    rdi,rbp
  4233d6:	call   42dcf0 <xmlStrEqual@plt+0x29db0>
  4233db:	movzx  eax,BYTE PTR [r13+0x4]
  4233e0:	inc    ebx
  4233e2:	cmp    eax,ebx
  4233e4:	jle    423440 <xmlStrEqual@plt+0x1f500>
  4233e6:	xor    eax,eax
  4233e8:	call   42a820 <xmlStrEqual@plt+0x268e0>
  4233ed:	mov    rsi,rax
  4233f0:	mov    rdi,r12
  4233f3:	mov    rbp,rax
  4233f6:	call   423020 <xmlStrEqual@plt+0x1f0e0>
  4233fb:	cmp    eax,0x1
  4233fe:	je     4233d0 <xmlStrEqual@plt+0x1f490>
  423400:	pop    rbx
  423401:	pop    rbp
  423402:	pop    r12
  423404:	pop    r13
  423406:	xor    eax,eax
  423408:	pop    r14
  42340a:	ret    
  42340b:	nop    DWORD PTR [rax+rax*1+0x0]
  423410:	mov    rdi,rbx
  423413:	call   424d40 <xmlStrEqual@plt+0x20e00>
  423418:	mov    rdi,r13
  42341b:	mov    rbx,rax
  42341e:	call   42d750 <xmlStrEqual@plt+0x29810>
  423423:	mov    rdx,rax
  423426:	mov    rcx,rbx
  423429:	lea    rsi,[rip+0x2b068]        # 44e498 <xmlStrEqual@plt+0x4a558>
  423430:	mov    edi,0x5
  423435:	xor    eax,eax
  423437:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  42343c:	jmp    4233c3 <xmlStrEqual@plt+0x1f483>
  42343e:	xchg   ax,ax
  423440:	pop    rbx
  423441:	pop    rbp
  423442:	pop    r12
  423444:	pop    r13
  423446:	mov    eax,0x1
  42344b:	pop    r14
  42344d:	ret    
  42344e:	xchg   ax,ax
  423450:	mov    rdi,r13
  423453:	jmp    423386 <xmlStrEqual@plt+0x1f446>
  423458:	nop    DWORD PTR [rax+rax*1+0x0]
  423460:	endbr64 
  423464:	push   r15
  423466:	xor    r15d,r15d
  423469:	push   r14
  42346b:	push   r13
  42346d:	push   r12
  42346f:	push   rbp
  423470:	push   rbx
  423471:	sub    rsp,0x8
  423475:	test   rsi,rsi
  423478:	je     423516 <xmlStrEqual@plt+0x1f5d6>
  42347e:	mov    rdx,QWORD PTR [rdi+0x38]
  423482:	mov    rbp,rsi
  423485:	movbe  eax,DWORD PTR [rdx]
  423489:	mov    rbx,rdi
  42348c:	mov    DWORD PTR [rsi+0x38],eax
  42348f:	movzx  eax,BYTE PTR [rdx+0x6]
  423493:	shr    al,0x5
  423496:	mov    BYTE PTR [rsi+0x3c],al
  423499:	movzx  eax,BYTE PTR [rdx+0x6]
  42349d:	shr    al,0x4
  4234a0:	and    eax,0x1
  4234a3:	mov    BYTE PTR [rsi+0x3d],al
  4234a6:	movzx  eax,BYTE PTR [rdx+0x6]
  4234aa:	shr    al,0x3
  4234ad:	and    eax,0x1
  4234b0:	mov    BYTE PTR [rsi+0x3e],al
  4234b3:	call   42dc90 <xmlStrEqual@plt+0x29d50>
  4234b8:	mov    rdx,rax
  4234bb:	mov    rsi,rbp
  4234be:	mov    rdi,rbx
  4234c1:	mov    r14,rax
  4234c4:	call   423350 <xmlStrEqual@plt+0x1f410>
  4234c9:	mov    r15d,eax
  4234cc:	cmp    eax,0x1
  4234cf:	jne    423530 <xmlStrEqual@plt+0x1f5f0>
  4234d1:	mov    rbx,QWORD PTR [r14+0x8]
  4234d5:	cmp    r14,rbx
  4234d8:	je     42350e <xmlStrEqual@plt+0x1f5ce>
  4234da:	nop    WORD PTR [rax+rax*1+0x0]
  4234e0:	mov    r13,QWORD PTR [rbx+0x10]
  4234e4:	mov    rdi,rbp
  4234e7:	mov    rsi,r13
  4234ea:	call   42c480 <xmlStrEqual@plt+0x28540>
  4234ef:	mov    r12d,eax
  4234f2:	cmp    eax,0x1
  4234f5:	je     423505 <xmlStrEqual@plt+0x1f5c5>
  4234f7:	mov    rdi,r13
  4234fa:	call   42a7f0 <xmlStrEqual@plt+0x268b0>
  4234ff:	cmp    r12d,0xfffffffb
  423503:	jne    423530 <xmlStrEqual@plt+0x1f5f0>
  423505:	mov    rbx,QWORD PTR [rbx+0x8]
  423509:	cmp    r14,rbx
  42350c:	jne    4234e0 <xmlStrEqual@plt+0x1f5a0>
  42350e:	mov    rdi,r14
  423511:	call   42e2b0 <xmlStrEqual@plt+0x2a370>
  423516:	add    rsp,0x8
  42351a:	pop    rbx
  42351b:	pop    rbp
  42351c:	pop    r12
  42351e:	pop    r13
  423520:	pop    r14
  423522:	mov    eax,r15d
  423525:	pop    r15
  423527:	ret    
  423528:	nop    DWORD PTR [rax+rax*1+0x0]
  423530:	mov    rdi,r14
  423533:	call   42e2b0 <xmlStrEqual@plt+0x2a370>
  423538:	xor    r15d,r15d
  42353b:	jmp    423516 <xmlStrEqual@plt+0x1f5d6>
  42353d:	nop    DWORD PTR [rax]
  423540:	endbr64 
  423544:	sub    rsp,0x8
  423548:	mov    rcx,QWORD PTR [rdi+0x38]
  42354c:	movbe  eax,DWORD PTR [rcx]
  423550:	mov    DWORD PTR [rdx],eax
  423552:	mov    eax,DWORD PTR [rdi+0x14]
  423555:	cmp    eax,0x3
  423558:	jbe    423568 <xmlStrEqual@plt+0x1f628>
  42355a:	add    rcx,0x4
  42355e:	sub    eax,0x4
  423561:	mov    QWORD PTR [rdi+0x38],rcx
  423565:	mov    DWORD PTR [rdi+0x14],eax
  423568:	call   422ef0 <xmlStrEqual@plt+0x1efb0>
  42356d:	cmp    eax,0x1
  423570:	sete   al
  423573:	movzx  eax,al
  423576:	add    rsp,0x8
  42357a:	ret    
  42357b:	nop    DWORD PTR [rax+rax*1+0x0]
  423580:	endbr64 
  423584:	mov    eax,DWORD PTR [rdi+0x14]
  423587:	cmp    eax,0xf
  42358a:	jbe    404089 <xmlStrEqual@plt+0x149>
  423590:	mov    rcx,QWORD PTR [rdi+0x38]
  423594:	sub    eax,0x10
  423597:	lea    r8,[rcx+0x10]
  42359b:	mov    DWORD PTR [rdi+0x14],eax
  42359e:	mov    QWORD PTR [rdi+0x38],r8
  4235a2:	vmovdqu xmm1,XMMWORD PTR [rcx]
  4235a6:	vmovups XMMWORD PTR [rsi],xmm1
  4235aa:	mov    eax,DWORD PTR [rdi+0x14]
  4235ad:	cmp    eax,0x7
  4235b0:	jbe    404094 <xmlStrEqual@plt+0x154>
  4235b6:	mov    rcx,QWORD PTR [rdi+0x38]
  4235ba:	sub    eax,0x8
  4235bd:	lea    rsi,[rcx+0x8]
  4235c1:	mov    QWORD PTR [rdi+0x38],rsi
  4235c5:	mov    DWORD PTR [rdi+0x14],eax
  4235c8:	mov    rax,QWORD PTR [rcx]
  4235cb:	mov    QWORD PTR [rdx],rax
  4235ce:	mov    eax,0x1
  4235d3:	ret    
  4235d4:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4235df:	nop
  4235e0:	endbr64 
  4235e4:	push   rbx
  4235e5:	mov    rbx,rdi
  4235e8:	call   422c30 <xmlStrEqual@plt+0x1ecf0>
  4235ed:	mov    ecx,DWORD PTR [rbx+0x14]
  4235f0:	cmp    eax,0x7
  4235f3:	ja     423603 <xmlStrEqual@plt+0x1f6c3>
  4235f5:	mov    edx,0x1
  4235fa:	shlx   rax,rdx,rax
  4235ff:	test   al,0xde
  423601:	jne    423618 <xmlStrEqual@plt+0x1f6d8>
  423603:	xor    edx,edx
  423605:	mov    rax,QWORD PTR [rbx+0x38]
  423609:	mov    DWORD PTR [rbx+0x14],ecx
  42360c:	add    rdx,rax
  42360f:	mov    QWORD PTR [rbx+0x38],rdx
  423613:	pop    rbx
  423614:	ret    
  423615:	nop    DWORD PTR [rax]
  423618:	cmp    ecx,0xb
  42361b:	ja     423621 <xmlStrEqual@plt+0x1f6e1>
  42361d:	xor    eax,eax
  42361f:	pop    rbx
  423620:	ret    
  423621:	sub    ecx,0xc
  423624:	mov    edx,0xc
  423629:	jmp    423605 <xmlStrEqual@plt+0x1f6c5>
  42362b:	nop    DWORD PTR [rax+rax*1+0x0]
  423630:	endbr64 
  423634:	push   rbp
  423635:	mov    rbp,rsi
  423638:	push   rbx
  423639:	mov    rbx,rdi
  42363c:	mov    rdi,rsi
  42363f:	sub    rsp,0x8
  423643:	call   424cc0 <xmlStrEqual@plt+0x20d80>
  423648:	mov    esi,eax
  42364a:	mov    rdi,rbx
  42364d:	call   4308d0 <xmlStrEqual@plt+0x2c990>
  423652:	mov    rdi,rax
  423655:	mov    rsi,rbp
  423658:	mov    rbx,rax
  42365b:	call   425190 <xmlStrEqual@plt+0x21250>
  423660:	test   eax,eax
  423662:	jle    423670 <xmlStrEqual@plt+0x1f730>
  423664:	add    rsp,0x8
  423668:	mov    rax,rbx
  42366b:	pop    rbx
  42366c:	pop    rbp
  42366d:	ret    
  42366e:	xchg   ax,ax
  423670:	mov    rax,0x469e3c
  423677:	xor    ebx,ebx
  423679:	cmp    DWORD PTR [rax],0x2
  42367c:	jle    423664 <xmlStrEqual@plt+0x1f724>
  42367e:	mov    rdi,rbp
  423681:	call   424d40 <xmlStrEqual@plt+0x20e00>
  423686:	mov    rdx,rax
  423689:	lea    rsi,[rip+0x2aeb8]        # 44e548 <xmlStrEqual@plt+0x4a608>
  423690:	mov    edi,0x7
  423695:	xor    eax,eax
  423697:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  42369c:	jmp    423664 <xmlStrEqual@plt+0x1f724>
  42369e:	xchg   ax,ax
  4236a0:	endbr64 
  4236a4:	push   r12
  4236a6:	mov    r12,rdi
  4236a9:	push   rbp
  4236aa:	mov    rbp,rsi
  4236ad:	mov    esi,0x6
  4236b2:	push   rbx
  4236b3:	call   4308d0 <xmlStrEqual@plt+0x2c990>
  4236b8:	mov    rbx,rax
  4236bb:	movzx  eax,BYTE PTR [rbp+0xb]
  4236bf:	mov    rdi,r12
  4236c2:	mov    BYTE PTR [rbx],al
  4236c4:	movzx  eax,BYTE PTR [rbp+0xc]
  4236c8:	mov    BYTE PTR [rbx+0x1],al
  4236cb:	movzx  eax,BYTE PTR [rbp+0xd]
  4236cf:	mov    BYTE PTR [rbx+0x2],al
  4236d2:	movzx  eax,BYTE PTR [rbp+0xe]
  4236d6:	mov    BYTE PTR [rbx+0x3],al
  4236d9:	movzx  eax,BYTE PTR [rbp+0x9]
  4236dd:	mov    rsi,QWORD PTR [rbp+0x0]
  4236e1:	and    eax,0x1
  4236e4:	lea    edx,[rax*4+0x0]
  4236eb:	movzx  eax,BYTE PTR [rbx+0x5]
  4236ef:	and    eax,0xfffffffb
  4236f2:	or     eax,edx
  4236f4:	mov    BYTE PTR [rbx+0x5],al
  4236f7:	and    eax,0xfffffffe
  4236fa:	movzx  edx,BYTE PTR [rbp+0xa]
  4236fe:	and    edx,0x1
  423701:	or     eax,edx
  423703:	mov    BYTE PTR [rbx+0x5],al
  423706:	call   423630 <xmlStrEqual@plt+0x1f6f0>
  42370b:	mov    rax,rbx
  42370e:	pop    rbx
  42370f:	pop    rbp
  423710:	pop    r12
  423712:	ret    
  423713:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  42371e:	xchg   ax,ax
  423720:	endbr64 
  423724:	push   rbx
  423725:	mov    esi,0xa
  42372a:	call   4308d0 <xmlStrEqual@plt+0x2c990>
  42372f:	mov    rbx,rax
  423732:	mov    rdi,rax
  423735:	call   42d420 <xmlStrEqual@plt+0x294e0>
  42373a:	mov    rax,rbx
  42373d:	pop    rbx
  42373e:	ret    
  42373f:	nop
  423740:	endbr64 
  423744:	push   r15
  423746:	mov    r15,rdi
  423749:	push   r14
  42374b:	push   r13
  42374d:	mov    r13,rsi
  423750:	push   r12
  423752:	push   rbp
  423753:	push   rbx
  423754:	sub    rsp,0x28
  423758:	mov    QWORD PTR [rsp],rdx
  42375c:	mov    QWORD PTR [rsp+0x10],rdi
  423761:	call   423720 <xmlStrEqual@plt+0x1f7e0>
  423766:	mov    rdi,r13
  423769:	mov    rbx,rax
  42376c:	mov    QWORD PTR [rsp+0x18],rax
  423771:	call   4256d0 <xmlStrEqual@plt+0x21790>
  423776:	mov    BYTE PTR [rbx+0x5],al
  423779:	mov    rsi,r13
  42377c:	mov    rdi,r15
  42377f:	movbe  eax,DWORD PTR [r13+0x30]
  423785:	mov    DWORD PTR [rbx],eax
  423787:	movzx  eax,BYTE PTR [r13+0x35]
  42378c:	and    eax,0x1
  42378f:	shl    eax,0x4
  423792:	mov    edx,eax
  423794:	movzx  eax,BYTE PTR [rbx+0x6]
  423798:	mov    BYTE PTR [rsp+0x8],al
  42379c:	and    eax,0xffffffef
  42379f:	or     eax,edx
  4237a1:	mov    BYTE PTR [rbx+0x6],al
  4237a4:	call   423630 <xmlStrEqual@plt+0x1f6f0>
  4237a9:	test   rax,rax
  4237ac:	je     42388f <xmlStrEqual@plt+0x1f94f>
  4237b2:	mov    rax,QWORD PTR [r13+0x28]
  4237b6:	mov    r15,QWORD PTR [rax+0x8]
  4237ba:	cmp    rax,r15
  4237bd:	je     423861 <xmlStrEqual@plt+0x1f921>
  4237c3:	xor    ebp,ebp
  4237c5:	jmp    4237de <xmlStrEqual@plt+0x1f89e>
  4237c7:	nop    WORD PTR [rax+rax*1+0x0]
  4237d0:	mov    r15,QWORD PTR [r15+0x8]
  4237d4:	cmp    QWORD PTR [r13+0x28],r15
  4237d8:	je     423868 <xmlStrEqual@plt+0x1f928>
  4237de:	mov    r14,QWORD PTR [r15+0x10]
  4237e2:	mov    edx,DWORD PTR [r14+0x18]
  4237e6:	test   edx,edx
  4237e8:	je     4237d0 <xmlStrEqual@plt+0x1f890>
  4237ea:	mov    rbx,QWORD PTR [r14+0x8]
  4237ee:	mov    r12,QWORD PTR [rbx+0x10]
  4237f2:	mov    rax,QWORD PTR [r12]
  4237f6:	mov    eax,DWORD PTR [rax+0x18]
  4237f9:	test   eax,eax
  4237fb:	je     4237d0 <xmlStrEqual@plt+0x1f890>
  4237fd:	cmp    r14,rbx
  423800:	je     4237d0 <xmlStrEqual@plt+0x1f890>
  423802:	nop    WORD PTR [rax+rax*1+0x0]
  423808:	cmp    BYTE PTR [r12+0x8],0x0
  42380e:	je     42384e <xmlStrEqual@plt+0x1f90e>
  423810:	mov    rdi,QWORD PTR [rsp+0x10]
  423815:	mov    rsi,r12
  423818:	call   4236a0 <xmlStrEqual@plt+0x1f760>
  42381d:	cmp    QWORD PTR [rsp],0x0
  423822:	mov    QWORD PTR [rsp+0x8],rax
  423827:	je     42384c <xmlStrEqual@plt+0x1f90c>
  423829:	mov    rdi,QWORD PTR [r12]
  42382d:	call   4255a0 <xmlStrEqual@plt+0x21660>
  423832:	mov    rsi,QWORD PTR [rsp]
  423836:	mov    rdi,rax
  423839:	call   425310 <xmlStrEqual@plt+0x213d0>
  42383e:	test   eax,eax
  423840:	jne    42384c <xmlStrEqual@plt+0x1f90c>
  423842:	mov    r9,QWORD PTR [rsp+0x8]
  423847:	or     BYTE PTR [r9+0x5],0x2
  42384c:	inc    ebp
  42384e:	mov    rbx,QWORD PTR [rbx+0x8]
  423852:	cmp    rbx,r14
  423855:	je     4237d0 <xmlStrEqual@plt+0x1f890>
  42385b:	mov    r12,QWORD PTR [rbx+0x10]
  42385f:	jmp    423808 <xmlStrEqual@plt+0x1f8c8>
  423861:	xor    ebp,ebp
  423863:	nop    DWORD PTR [rax+rax*1+0x0]
  423868:	mov    rax,QWORD PTR [rsp+0x18]
  42386d:	mov    rdi,QWORD PTR [rsp+0x10]
  423872:	mov    BYTE PTR [rax+0x4],bpl
  423876:	call   422c60 <xmlStrEqual@plt+0x1ed20>
  42387b:	mov    rax,QWORD PTR [rsp+0x18]
  423880:	add    rsp,0x28
  423884:	pop    rbx
  423885:	pop    rbp
  423886:	pop    r12
  423888:	pop    r13
  42388a:	pop    r14
  42388c:	pop    r15
  42388e:	ret    
  42388f:	mov    QWORD PTR [rsp+0x18],0x0
  423898:	jmp    42387b <xmlStrEqual@plt+0x1f93b>
  42389a:	nop    WORD PTR [rax+rax*1+0x0]
  4238a0:	endbr64 
  4238a4:	push   r15
  4238a6:	mov    r15d,edx
  4238a9:	push   r14
  4238ab:	mov    r14d,ecx
  4238ae:	shl    r14d,0x5
  4238b2:	push   r13
  4238b4:	mov    r13,rsi
  4238b7:	push   r12
  4238b9:	mov    r12,rdi
  4238bc:	push   rbp
  4238bd:	mov    ebp,r8d
  4238c0:	and    ebp,0x1
  4238c3:	push   rbx
  4238c4:	shl    ebp,0x4
  4238c7:	sub    rsp,0x8
  4238cb:	call   423720 <xmlStrEqual@plt+0x1f7e0>
  4238d0:	mov    rdi,r13
  4238d3:	mov    rbx,rax
  4238d6:	call   4256d0 <xmlStrEqual@plt+0x21790>
  4238db:	mov    BYTE PTR [rbx+0x5],al
  4238de:	movzx  eax,BYTE PTR [rbx+0x6]
  4238e2:	mov    BYTE PTR [rbx+0x4],0x0
  4238e6:	and    eax,0xf
  4238e9:	or     eax,r14d
  4238ec:	or     eax,ebp
  4238ee:	movbe  DWORD PTR [rbx],r15d
  4238f3:	mov    BYTE PTR [rbx+0x6],al
  4238f6:	mov    rsi,r13
  4238f9:	mov    rdi,r12
  4238fc:	call   423630 <xmlStrEqual@plt+0x1f6f0>
  423901:	test   rax,rax
  423904:	je     423920 <xmlStrEqual@plt+0x1f9e0>
  423906:	mov    rdi,r12
  423909:	call   422c60 <xmlStrEqual@plt+0x1ed20>
  42390e:	add    rsp,0x8
  423912:	mov    rax,rbx
  423915:	pop    rbx
  423916:	pop    rbp
  423917:	pop    r12
  423919:	pop    r13
  42391b:	pop    r14
  42391d:	pop    r15
  42391f:	ret    
  423920:	xor    ebx,ebx
  423922:	jmp    42390e <xmlStrEqual@plt+0x1f9ce>
  423924:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  42392f:	nop
  423930:	endbr64 
  423934:	push   rbx
  423935:	mov    esi,0xa
  42393a:	call   4308d0 <xmlStrEqual@plt+0x2c990>
  42393f:	mov    rbx,rax
  423942:	mov    rdi,rax
  423945:	call   42d440 <xmlStrEqual@plt+0x29500>
  42394a:	mov    rax,rbx
  42394d:	pop    rbx
  42394e:	ret    
  42394f:	nop
  423950:	endbr64 
  423954:	push   r15
  423956:	push   r14
  423958:	push   r13
  42395a:	mov    r13,rsi
  42395d:	push   r12
  42395f:	mov    r12,rdi
  423962:	push   rbp
  423963:	push   rbx
  423964:	sub    rsp,0x18
  423968:	call   423930 <xmlStrEqual@plt+0x1f9f0>
  42396d:	mov    rdi,r13
  423970:	mov    rbx,rax
  423973:	mov    QWORD PTR [rsp],rax
  423977:	call   4256d0 <xmlStrEqual@plt+0x21790>
  42397c:	mov    BYTE PTR [rbx+0x5],al
  42397f:	movzx  edx,BYTE PTR [rbx+0x6]
  423983:	mov    rsi,r13
  423986:	movbe  eax,DWORD PTR [r13+0x38]
  42398c:	mov    BYTE PTR [rsp+0xf],dl
  423990:	mov    DWORD PTR [rbx],eax
  423992:	and    edx,0x1f
  423995:	mov    rdi,r12
  423998:	movzx  eax,BYTE PTR [r13+0x3c]
  42399d:	shl    eax,0x5
  4239a0:	or     edx,eax
  4239a2:	mov    BYTE PTR [rbx+0x6],dl
  4239a5:	and    edx,0xffffffef
  4239a8:	movzx  eax,BYTE PTR [r13+0x3d]
  4239ad:	and    eax,0x1
  4239b0:	shl    eax,0x4
  4239b3:	or     eax,edx
  4239b5:	mov    BYTE PTR [rbx+0x6],al
  4239b8:	and    eax,0xfffffff7
  4239bb:	movzx  edx,BYTE PTR [r13+0x3e]
  4239c0:	and    edx,0x1
  4239c3:	shl    edx,0x3
  4239c6:	or     eax,edx
  4239c8:	mov    BYTE PTR [rbx+0x6],al
  4239cb:	call   423630 <xmlStrEqual@plt+0x1f6f0>
  4239d0:	test   rax,rax
  4239d3:	je     423a62 <xmlStrEqual@plt+0x1fb22>
  4239d9:	mov    rax,QWORD PTR [r13+0x28]
  4239dd:	mov    r14,QWORD PTR [rax+0x8]
  4239e1:	cmp    rax,r14
  4239e4:	je     423a5e <xmlStrEqual@plt+0x1fb1e>
  4239e6:	xor    ebp,ebp
  4239e8:	jmp    4239fa <xmlStrEqual@plt+0x1faba>
  4239ea:	nop    WORD PTR [rax+rax*1+0x0]
  4239f0:	mov    r14,QWORD PTR [r14+0x8]
  4239f4:	cmp    QWORD PTR [r13+0x28],r14
  4239f8:	je     423a37 <xmlStrEqual@plt+0x1faf7>
  4239fa:	mov    r15,QWORD PTR [r14+0x10]
  4239fe:	mov    eax,DWORD PTR [r15+0x18]
  423a02:	test   eax,eax
  423a04:	je     4239f0 <xmlStrEqual@plt+0x1fab0>
  423a06:	mov    rbx,QWORD PTR [r15+0x8]
  423a0a:	cmp    rbx,r15
  423a0d:	je     4239f0 <xmlStrEqual@plt+0x1fab0>
  423a0f:	nop
  423a10:	mov    rsi,QWORD PTR [rbx+0x10]
  423a14:	cmp    BYTE PTR [rsi+0x8],0x0
  423a18:	je     423a24 <xmlStrEqual@plt+0x1fae4>
  423a1a:	mov    rdi,r12
  423a1d:	call   4236a0 <xmlStrEqual@plt+0x1f760>
  423a22:	inc    ebp
  423a24:	mov    rbx,QWORD PTR [rbx+0x8]
  423a28:	cmp    rbx,r15
  423a2b:	jne    423a10 <xmlStrEqual@plt+0x1fad0>
  423a2d:	mov    r14,QWORD PTR [r14+0x8]
  423a31:	cmp    QWORD PTR [r13+0x28],r14
  423a35:	jne    4239fa <xmlStrEqual@plt+0x1faba>
  423a37:	mov    rax,QWORD PTR [rsp]
  423a3b:	mov    rdi,r12
  423a3e:	and    BYTE PTR [rax+0x8],0xf
  423a42:	mov    BYTE PTR [rax+0x4],bpl
  423a46:	call   422c60 <xmlStrEqual@plt+0x1ed20>
  423a4b:	mov    rax,QWORD PTR [rsp]
  423a4f:	add    rsp,0x18
  423a53:	pop    rbx
  423a54:	pop    rbp
  423a55:	pop    r12
  423a57:	pop    r13
  423a59:	pop    r14
  423a5b:	pop    r15
  423a5d:	ret    
  423a5e:	xor    ebp,ebp
  423a60:	jmp    423a37 <xmlStrEqual@plt+0x1faf7>
  423a62:	mov    QWORD PTR [rsp],0x0
  423a6a:	jmp    423a4b <xmlStrEqual@plt+0x1fb0b>
  423a6c:	nop    DWORD PTR [rax+0x0]
  423a70:	endbr64 
  423a74:	push   r15
  423a76:	mov    r15d,ecx
  423a79:	shl    r15d,0x5
  423a7d:	push   r14
  423a7f:	mov    r14d,r8d
  423a82:	and    r14d,0x1
  423a86:	push   r13
  423a88:	mov    r13d,r9d
  423a8b:	shl    r14d,0x4
  423a8f:	push   r12
  423a91:	and    r13d,0x1
  423a95:	shl    r13d,0x3
  423a99:	push   rbp
  423a9a:	mov    rbp,rsi
  423a9d:	push   rbx
  423a9e:	mov    rbx,rdi
  423aa1:	sub    rsp,0x18
  423aa5:	mov    DWORD PTR [rsp+0xc],edx
  423aa9:	call   423930 <xmlStrEqual@plt+0x1f9f0>
  423aae:	mov    rdi,rbp
  423ab1:	mov    r12,rax
  423ab4:	call   4256d0 <xmlStrEqual@plt+0x21790>
  423ab9:	mov    BYTE PTR [r12+0x5],al
  423abe:	movzx  eax,BYTE PTR [r12+0x6]
  423ac4:	mov    edx,DWORD PTR [rsp+0xc]
  423ac8:	and    eax,0xf
  423acb:	or     eax,r15d
  423ace:	or     eax,r14d
  423ad1:	and    eax,0xfffffff7
  423ad4:	or     eax,r13d
  423ad7:	and    BYTE PTR [r12+0x8],0xf
  423add:	mov    BYTE PTR [r12+0x4],0x0
  423ae3:	movbe  DWORD PTR [r12],edx
  423ae9:	mov    BYTE PTR [r12+0x6],al
  423aee:	mov    rsi,rbp
  423af1:	mov    rdi,rbx
  423af4:	call   423630 <xmlStrEqual@plt+0x1f6f0>
  423af9:	test   rax,rax
  423afc:	je     423b20 <xmlStrEqual@plt+0x1fbe0>
  423afe:	mov    rdi,rbx
  423b01:	call   422c60 <xmlStrEqual@plt+0x1ed20>
  423b06:	add    rsp,0x18
  423b0a:	pop    rbx
  423b0b:	pop    rbp
  423b0c:	mov    rax,r12
  423b0f:	pop    r12
  423b11:	pop    r13
  423b13:	pop    r14
  423b15:	pop    r15
  423b17:	ret    
  423b18:	nop    DWORD PTR [rax+rax*1+0x0]
  423b20:	xor    r12d,r12d
  423b23:	jmp    423b06 <xmlStrEqual@plt+0x1fbc6>
  423b25:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  423b30:	endbr64 
  423b34:	push   r13
  423b36:	push   r12
  423b38:	push   rbp
  423b39:	push   rbx
  423b3a:	sub    rsp,0x8
  423b3e:	mov    eax,DWORD PTR [rsi+0x18]
  423b41:	mov    r13,QWORD PTR [rdi+0x38]
  423b45:	test   eax,eax
  423b47:	je     423b7a <xmlStrEqual@plt+0x1fc3a>
  423b49:	mov    rbx,QWORD PTR [rsi+0x8]
  423b4d:	mov    rbp,rsi
  423b50:	mov    r12,rdi
  423b53:	cmp    rsi,rbx
  423b56:	jne    423b69 <xmlStrEqual@plt+0x1fc29>
  423b58:	jmp    423b90 <xmlStrEqual@plt+0x1fc50>
  423b5a:	nop    WORD PTR [rax+rax*1+0x0]
  423b60:	mov    rbx,QWORD PTR [rbx+0x8]
  423b64:	cmp    rbp,rbx
  423b67:	je     423b90 <xmlStrEqual@plt+0x1fc50>
  423b69:	mov    rsi,QWORD PTR [rbx+0x10]
  423b6d:	mov    rdi,r12
  423b70:	call   423630 <xmlStrEqual@plt+0x1f6f0>
  423b75:	test   rax,rax
  423b78:	jne    423b60 <xmlStrEqual@plt+0x1fc20>
  423b7a:	add    rsp,0x8
  423b7e:	pop    rbx
  423b7f:	pop    rbp
  423b80:	xor    r13d,r13d
  423b83:	pop    r12
  423b85:	mov    rax,r13
  423b88:	pop    r13
  423b8a:	ret    
  423b8b:	nop    DWORD PTR [rax+rax*1+0x0]
  423b90:	movzx  eax,WORD PTR [r12+0x24]
  423b96:	cmp    ax,0xffff
  423b9a:	je     40409e <xmlStrEqual@plt+0x15e>
  423ba0:	mov    edx,DWORD PTR [rbp+0x18]
  423ba3:	mov    rsi,QWORD PTR [r12+0x30]
  423ba8:	dec    edx
  423baa:	mov    ecx,edx
  423bac:	movzx  edx,BYTE PTR [rsi+rax*1+0x2]
  423bb1:	and    ecx,0x1f
  423bb4:	and    edx,0xffffffe0
  423bb7:	or     edx,ecx
  423bb9:	mov    BYTE PTR [rsi+rax*1+0x2],dl
  423bbd:	add    rsp,0x8
  423bc1:	mov    rax,r13
  423bc4:	pop    rbx
  423bc5:	pop    rbp
  423bc6:	pop    r12
  423bc8:	pop    r13
  423bca:	ret    
  423bcb:	nop    DWORD PTR [rax+rax*1+0x0]
  423bd0:	endbr64 
  423bd4:	push   r12
  423bd6:	mov    r12,rsi
  423bd9:	mov    esi,0x2
  423bde:	push   rbp
  423bdf:	mov    rbp,rdi
  423be2:	push   rbx
  423be3:	call   4308d0 <xmlStrEqual@plt+0x2c990>
  423be8:	mov    rdi,rax
  423beb:	mov    rbx,rax
  423bee:	call   42d9b0 <xmlStrEqual@plt+0x29a70>
  423bf3:	mov    rdi,r12
  423bf6:	call   4256d0 <xmlStrEqual@plt+0x21790>
  423bfb:	mov    BYTE PTR [rbx+0x1],al
  423bfe:	mov    rsi,r12
  423c01:	mov    rdi,rbp
  423c04:	call   423630 <xmlStrEqual@plt+0x1f6f0>
  423c09:	mov    rdi,rbp
  423c0c:	call   422c60 <xmlStrEqual@plt+0x1ed20>
  423c11:	mov    rax,rbx
  423c14:	pop    rbx
  423c15:	pop    rbp
  423c16:	pop    r12
  423c18:	ret    
  423c19:	nop    DWORD PTR [rax+0x0]
  423c20:	endbr64 
  423c24:	push   r12
  423c26:	mov    r12,rdx
  423c29:	mov    edx,0x10
  423c2e:	push   rbp
  423c2f:	push   rbx
  423c30:	mov    rbx,rdi
  423c33:	call   430900 <xmlStrEqual@plt+0x2c9c0>
  423c38:	mov    rsi,r12
  423c3b:	mov    rdi,rbx
  423c3e:	mov    edx,0x8
  423c43:	mov    rbp,rax
  423c46:	call   430900 <xmlStrEqual@plt+0x2c9c0>
  423c4b:	pop    rbx
  423c4c:	mov    rax,rbp
  423c4f:	pop    rbp
  423c50:	pop    r12
  423c52:	ret    
  423c53:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  423c5e:	xchg   ax,ax
  423c60:	endbr64 
  423c64:	push   rbx
  423c65:	mov    esi,0x4
  423c6a:	mov    rbx,rdi
  423c6d:	call   430930 <xmlStrEqual@plt+0x2c9f0>
  423c72:	mov    rdi,rax
  423c75:	call   42c990 <xmlStrEqual@plt+0x28a50>
  423c7a:	mov    rax,QWORD PTR [rbx+0x38]
  423c7e:	mov    rdx,rax
  423c81:	sub    rdx,QWORD PTR [rbx+0x30]
  423c85:	mov    WORD PTR [rbx+0x1e],dx
  423c89:	pop    rbx
  423c8a:	ret    
  423c8b:	nop    DWORD PTR [rax+rax*1+0x0]
  423c90:	endbr64 
  423c94:	sub    rsp,0x8
  423c98:	mov    esi,0x64
  423c9d:	mov    edi,0x1000
  423ca2:	call   4309c0 <xmlStrEqual@plt+0x2ca80>
  423ca7:	mov    rdx,QWORD PTR [rax+0x38]
  423cab:	sub    rdx,QWORD PTR [rax+0x30]
  423caf:	mov    WORD PTR [rax+0x24],dx
  423cb3:	add    rsp,0x8
  423cb7:	ret    
  423cb8:	nop    DWORD PTR [rax+rax*1+0x0]
  423cc0:	endbr64 
  423cc4:	push   rbp
  423cc5:	xor    eax,eax
  423cc7:	push   rbx
  423cc8:	mov    ebx,edi
  423cca:	sub    rsp,0x8
  423cce:	call   423c90 <xmlStrEqual@plt+0x1fd50>
  423cd3:	mov    rbp,rax
  423cd6:	cmp    ebx,0x8
  423cd9:	ja     423cf0 <xmlStrEqual@plt+0x1fdb0>
  423cdb:	lea    rdx,[rip+0x2a726]        # 44e408 <xmlStrEqual@plt+0x4a4c8>
  423ce2:	mov    ecx,ebx
  423ce4:	movsxd rax,DWORD PTR [rdx+rcx*4]
  423ce8:	add    rax,rdx
  423ceb:	notrack jmp rax
  423cee:	xchg   ax,ax
  423cf0:	mov    rax,0x469e3c
  423cf7:	cmp    DWORD PTR [rax],0x2
  423cfa:	jle    423d11 <xmlStrEqual@plt+0x1fdd1>
  423cfc:	mov    edx,ebx
  423cfe:	lea    rsi,[rip+0x2a873]        # 44e578 <xmlStrEqual@plt+0x4a638>
  423d05:	mov    edi,0x7
  423d0a:	xor    eax,eax
  423d0c:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  423d11:	add    rsp,0x8
  423d15:	pop    rbx
  423d16:	mov    rax,rbp
  423d19:	pop    rbp
  423d1a:	ret    
  423d1b:	nop    DWORD PTR [rax+rax*1+0x0]
  423d20:	mov    rdi,rbp
  423d23:	mov    esi,0xc
  423d28:	call   4308d0 <xmlStrEqual@plt+0x2c990>
  423d2d:	mov    rdi,rax
  423d30:	call   42c9a0 <xmlStrEqual@plt+0x28a60>
  423d35:	add    rsp,0x8
  423d39:	pop    rbx
  423d3a:	mov    rax,rbp
  423d3d:	pop    rbp
  423d3e:	ret    
  423d3f:	nop
  423d40:	mov    rdi,rbp
  423d43:	mov    esi,0xc
  423d48:	call   4308d0 <xmlStrEqual@plt+0x2c990>
  423d4d:	mov    rdi,rax
  423d50:	call   42c910 <xmlStrEqual@plt+0x289d0>
  423d55:	add    rsp,0x8
  423d59:	pop    rbx
  423d5a:	mov    rax,rbp
  423d5d:	pop    rbp
  423d5e:	ret    
  423d5f:	nop
  423d60:	mov    rdi,rbp
  423d63:	mov    esi,0xc
  423d68:	call   4308d0 <xmlStrEqual@plt+0x2c990>
  423d6d:	mov    rdi,rax
  423d70:	call   42c930 <xmlStrEqual@plt+0x289f0>
  423d75:	add    rsp,0x8
  423d79:	pop    rbx
  423d7a:	mov    rax,rbp
  423d7d:	pop    rbp
  423d7e:	ret    
  423d7f:	nop
  423d80:	mov    rdi,rbp
  423d83:	mov    esi,0xc
  423d88:	call   4308d0 <xmlStrEqual@plt+0x2c990>
  423d8d:	mov    rdi,rax
  423d90:	call   42c950 <xmlStrEqual@plt+0x28a10>
  423d95:	add    rsp,0x8
  423d99:	pop    rbx
  423d9a:	mov    rax,rbp
  423d9d:	pop    rbp
  423d9e:	ret    
  423d9f:	nop
  423da0:	mov    rdi,rbp
  423da3:	mov    esi,0xc
  423da8:	call   4308d0 <xmlStrEqual@plt+0x2c990>
  423dad:	mov    rdi,rax
  423db0:	call   42c970 <xmlStrEqual@plt+0x28a30>
  423db5:	add    rsp,0x8
  423db9:	pop    rbx
  423dba:	mov    rax,rbp
  423dbd:	pop    rbp
  423dbe:	ret    
  423dbf:	nop
  423dc0:	mov    rdi,rbp
  423dc3:	mov    esi,0xc
  423dc8:	call   4308d0 <xmlStrEqual@plt+0x2c990>
  423dcd:	mov    rdi,rax
  423dd0:	call   42c9e0 <xmlStrEqual@plt+0x28aa0>
  423dd5:	add    rsp,0x8
  423dd9:	pop    rbx
  423dda:	mov    rax,rbp
  423ddd:	pop    rbp
  423dde:	ret    
  423ddf:	nop
  423de0:	endbr64 
  423de4:	push   r13
  423de6:	mov    r13,rdx
  423de9:	push   r12
  423deb:	mov    r12,rsi
  423dee:	push   rbp
  423def:	mov    rbp,rdi
  423df2:	mov    edi,0x1
  423df7:	push   rbx
  423df8:	sub    rsp,0x8
  423dfc:	call   423cc0 <xmlStrEqual@plt+0x1fd80>
  423e01:	mov    rdi,rax
  423e04:	mov    rsi,rbp
  423e07:	mov    rbx,rax
  423e0a:	call   423630 <xmlStrEqual@plt+0x1f6f0>
  423e0f:	test   rax,rax
  423e12:	je     423e48 <xmlStrEqual@plt+0x1ff08>
  423e14:	mov    rsi,r12
  423e17:	mov    rdi,rbx
  423e1a:	call   423b30 <xmlStrEqual@plt+0x1fbf0>
  423e1f:	test   rax,rax
  423e22:	je     423e48 <xmlStrEqual@plt+0x1ff08>
  423e24:	mov    rsi,r13
  423e27:	mov    rdi,rbx
  423e2a:	call   423bd0 <xmlStrEqual@plt+0x1fc90>
  423e2f:	test   rax,rax
  423e32:	je     423e48 <xmlStrEqual@plt+0x1ff08>
  423e34:	add    rsp,0x8
  423e38:	mov    rax,rbx
  423e3b:	pop    rbx
  423e3c:	pop    rbp
  423e3d:	pop    r12
  423e3f:	pop    r13
  423e41:	ret    
  423e42:	nop    WORD PTR [rax+rax*1+0x0]
  423e48:	mov    rdi,rbx
  423e4b:	call   430820 <xmlStrEqual@plt+0x2c8e0>
  423e50:	xor    ebx,ebx
  423e52:	add    rsp,0x8
  423e56:	mov    rax,rbx
  423e59:	pop    rbx
  423e5a:	pop    rbp
  423e5b:	pop    r12
  423e5d:	pop    r13
  423e5f:	ret    
  423e60:	endbr64 
  423e64:	push   r15
  423e66:	mov    r15d,ecx
  423e69:	push   r14
  423e6b:	mov    r14d,edx
  423e6e:	push   r13
  423e70:	mov    r13,r8
  423e73:	push   r12
  423e75:	mov    r12d,esi
  423e78:	push   rbp
  423e79:	mov    rbp,rdi
  423e7c:	mov    edi,0x2
  423e81:	push   rbx
  423e82:	sub    rsp,0x8
  423e86:	call   423cc0 <xmlStrEqual@plt+0x1fd80>
  423e8b:	mov    rbx,rax
  423e8e:	mov    r8d,r15d
  423e91:	mov    ecx,r14d
  423e94:	mov    edx,r12d
  423e97:	mov    rsi,rbp
  423e9a:	mov    rdi,rax
  423e9d:	call   4238a0 <xmlStrEqual@plt+0x1f960>
  423ea2:	movzx  eax,WORD PTR [rbx+0x24]
  423ea6:	cmp    ax,0xffff
  423eaa:	je     4040b2 <xmlStrEqual@plt+0x172>
  423eb0:	mov    rdx,QWORD PTR [rbx+0x30]
  423eb4:	mov    QWORD PTR [rdx+rax*1+0x4],r13
  423eb9:	add    rsp,0x8
  423ebd:	mov    rax,rbx
  423ec0:	pop    rbx
  423ec1:	pop    rbp
  423ec2:	pop    r12
  423ec4:	pop    r13
  423ec6:	pop    r14
  423ec8:	pop    r15
  423eca:	ret    
  423ecb:	nop    DWORD PTR [rax+rax*1+0x0]
  423ed0:	endbr64 
  423ed4:	push   r15
  423ed6:	mov    r15d,ecx
  423ed9:	push   r14
  423edb:	mov    r14d,edx
  423ede:	push   r13
  423ee0:	mov    r13,r9
  423ee3:	push   r12
  423ee5:	mov    r12d,esi
  423ee8:	push   rbp
  423ee9:	mov    rbp,rdi
  423eec:	mov    edi,0x6
  423ef1:	push   rbx
  423ef2:	sub    rsp,0x18
  423ef6:	mov    DWORD PTR [rsp+0xc],r8d
  423efb:	call   423cc0 <xmlStrEqual@plt+0x1fd80>
  423f00:	mov    r8d,DWORD PTR [rsp+0xc]
  423f05:	mov    rbx,rax
  423f08:	mov    r9d,r8d
  423f0b:	mov    ecx,r14d
  423f0e:	mov    r8d,r15d
  423f11:	mov    edx,r12d
  423f14:	mov    rsi,rbp
  423f17:	mov    rdi,rax
  423f1a:	call   423a70 <xmlStrEqual@plt+0x1fb30>
  423f1f:	movzx  eax,WORD PTR [rbx+0x24]
  423f23:	cmp    ax,0xffff
  423f27:	je     4040c0 <xmlStrEqual@plt+0x180>
  423f2d:	mov    rdx,QWORD PTR [rbx+0x30]
  423f31:	mov    QWORD PTR [rdx+rax*1+0x4],r13
  423f36:	add    rsp,0x18
  423f3a:	mov    rax,rbx
  423f3d:	pop    rbx
  423f3e:	pop    rbp
  423f3f:	pop    r12
  423f41:	pop    r13
  423f43:	pop    r14
  423f45:	pop    r15
  423f47:	ret    
  423f48:	nop    DWORD PTR [rax+rax*1+0x0]
  423f50:	endbr64 
  423f54:	movzx  eax,WORD PTR [rdi+0x24]
  423f58:	cmp    ax,0xffff
  423f5c:	je     424040 <xmlStrEqual@plt+0x20100>
  423f62:	push   rbp
  423f63:	push   rbx
  423f64:	sub    rsp,0x8
  423f68:	add    rax,QWORD PTR [rdi+0x30]
  423f6c:	mov    rbx,rax
  423f6f:	je     423fc1 <xmlStrEqual@plt+0x20081>
  423f71:	mov    rbp,rdi
  423f74:	call   422c30 <xmlStrEqual@plt+0x1ecf0>
  423f79:	cmp    eax,0x8
  423f7c:	ja     423f98 <xmlStrEqual@plt+0x20058>
  423f7e:	lea    rdx,[rip+0x2a4a7]        # 44e42c <xmlStrEqual@plt+0x4a4ec>
  423f85:	mov    eax,eax
  423f87:	movsxd rax,DWORD PTR [rdx+rax*4]
  423f8b:	add    rax,rdx
  423f8e:	notrack jmp rax
  423f91:	nop    DWORD PTR [rax+0x0]
  423f98:	mov    rax,0x469e3c
  423f9f:	cmp    DWORD PTR [rax],0x2
  423fa2:	jle    423fc1 <xmlStrEqual@plt+0x20081>
  423fa4:	mov    rdi,rbp
  423fa7:	call   422c30 <xmlStrEqual@plt+0x1ecf0>
  423fac:	mov    edx,eax
  423fae:	lea    rsi,[rip+0x2a4f0]        # 44e4a5 <xmlStrEqual@plt+0x4a565>
  423fb5:	mov    edi,0x7
  423fba:	xor    eax,eax
  423fbc:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  423fc1:	add    rsp,0x8
  423fc5:	pop    rbx
  423fc6:	xor    eax,eax
  423fc8:	pop    rbp
  423fc9:	ret    
  423fca:	nop    WORD PTR [rax+rax*1+0x0]
  423fd0:	add    rsp,0x8
  423fd4:	mov    rdi,rbx
  423fd7:	pop    rbx
  423fd8:	pop    rbp
  423fd9:	jmp    42d2a0 <xmlStrEqual@plt+0x29360>
  423fde:	xchg   ax,ax
  423fe0:	add    rsp,0x8
  423fe4:	mov    rdi,rbx
  423fe7:	pop    rbx
  423fe8:	pop    rbp
  423fe9:	jmp    42cc90 <xmlStrEqual@plt+0x28d50>
  423fee:	xchg   ax,ax
  423ff0:	add    rsp,0x8
  423ff4:	mov    rdi,rbx
  423ff7:	pop    rbx
  423ff8:	pop    rbp
  423ff9:	jmp    42ce40 <xmlStrEqual@plt+0x28f00>
  423ffe:	xchg   ax,ax
  424000:	add    rsp,0x8
  424004:	mov    rdi,rbx
  424007:	pop    rbx
  424008:	pop    rbp
  424009:	jmp    42cfd0 <xmlStrEqual@plt+0x29090>
  42400e:	xchg   ax,ax
  424010:	add    rsp,0x8
  424014:	mov    rdi,rbx
  424017:	pop    rbx
  424018:	pop    rbp
  424019:	jmp    42d0a0 <xmlStrEqual@plt+0x29160>
  42401e:	xchg   ax,ax
  424020:	add    rsp,0x8
  424024:	mov    rdi,rbx
  424027:	pop    rbx
  424028:	pop    rbp
  424029:	jmp    42d2f0 <xmlStrEqual@plt+0x293b0>
  42402e:	xchg   ax,ax
  424030:	add    rsp,0x8
  424034:	mov    rdi,rbx
  424037:	pop    rbx
  424038:	pop    rbp
  424039:	jmp    42ceb0 <xmlStrEqual@plt+0x28f70>
  42403e:	xchg   ax,ax
  424040:	xor    eax,eax
  424042:	ret    
  424043:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  42404e:	xchg   ax,ax
  424050:	endbr64 
  424054:	movzx  eax,WORD PTR [rdi+0x1e]
  424058:	cmp    ax,0xffff
  42405c:	je     424070 <xmlStrEqual@plt+0x20130>
  42405e:	add    rax,QWORD PTR [rdi+0x30]
  424062:	mov    rdi,rax
  424065:	je     424070 <xmlStrEqual@plt+0x20130>
  424067:	jmp    42d2a0 <xmlStrEqual@plt+0x29360>
  42406c:	nop    DWORD PTR [rax+0x0]
  424070:	xor    eax,eax
  424072:	ret    
  424073:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  42407e:	xchg   ax,ax
  424080:	endbr64 
  424084:	push   r15
  424086:	push   r14
  424088:	mov    r14d,edx
  42408b:	push   r13
  42408d:	mov    r13d,esi
  424090:	push   r12
  424092:	mov    r12,r8
  424095:	push   rbp
  424096:	mov    rbp,rcx
  424099:	push   rbx
  42409a:	mov    rbx,rdi
  42409d:	sub    rsp,0x8
  4240a1:	mov    rax,QWORD PTR [rdi+0x38]
  4240a5:	sub    rax,QWORD PTR [rdi+0x30]
  4240a9:	mov    WORD PTR [rdi+0x24],ax
  4240ad:	mov    rdi,rcx
  4240b0:	call   4255a0 <xmlStrEqual@plt+0x21660>
  4240b5:	mov    r15,rax
  4240b8:	test   rax,rax
  4240bb:	je     424170 <xmlStrEqual@plt+0x20230>
  4240c1:	mov    rdi,r12
  4240c4:	call   4255a0 <xmlStrEqual@plt+0x21660>
  4240c9:	mov    r8,rax
  4240cc:	test   rax,rax
  4240cf:	je     424160 <xmlStrEqual@plt+0x20220>
  4240d5:	mov    rcx,r15
  4240d8:	movzx  edx,r14w
  4240dc:	movzx  esi,r13w
  4240e0:	mov    rdi,rbx
  4240e3:	call   4363a0 <xmlStrEqual@plt+0x32460>
  4240e8:	mov    rdi,rbx
  4240eb:	call   423c60 <xmlStrEqual@plt+0x1fd20>
  4240f0:	mov    rax,0x469e3c
  4240f7:	mov    ecx,DWORD PTR [rax]
  4240f9:	test   ecx,ecx
  4240fb:	jle    424148 <xmlStrEqual@plt+0x20208>
  4240fd:	mov    rdi,r12
  424100:	call   424d40 <xmlStrEqual@plt+0x20e00>
  424105:	mov    rdi,rbp
  424108:	mov    r12,rax
  42410b:	call   424d40 <xmlStrEqual@plt+0x20e00>
  424110:	mov    rdi,rbx
  424113:	mov    rbp,rax
  424116:	call   424050 <xmlStrEqual@plt+0x20110>
  42411b:	sub    rsp,0x8
  42411f:	push   0x10f6
  424124:	mov    rdx,rax
  424127:	mov    r9d,0x10f6
  42412d:	xor    eax,eax
  42412f:	mov    r8,r12
  424132:	mov    rcx,rbp
  424135:	lea    rsi,[rip+0x2a46c]        # 44e5a8 <xmlStrEqual@plt+0x4a668>
  42413c:	mov    edi,0x5
  424141:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  424146:	pop    rax
  424147:	pop    rdx
  424148:	mov    rax,QWORD PTR [rbx+0x38]
  42414c:	add    rsp,0x8
  424150:	pop    rbx
  424151:	pop    rbp
  424152:	pop    r12
  424154:	pop    r13
  424156:	pop    r14
  424158:	pop    r15
  42415a:	ret    
  42415b:	nop    DWORD PTR [rax+rax*1+0x0]
  424160:	mov    rdi,r12
  424163:	call   425670 <xmlStrEqual@plt+0x21730>
  424168:	mov    r8,rax
  42416b:	jmp    4240d5 <xmlStrEqual@plt+0x20195>
  424170:	mov    rdi,rbp
  424173:	call   425670 <xmlStrEqual@plt+0x21730>
  424178:	mov    r15,rax
  42417b:	jmp    4240c1 <xmlStrEqual@plt+0x20181>
  424180:	endbr64 
  424184:	movzx  eax,WORD PTR [rdi+0x1e]
  424188:	cmp    ax,0xffff
  42418c:	je     4040ce <xmlStrEqual@plt+0x18e>
  424192:	add    rax,QWORD PTR [rdi+0x30]
  424196:	test   BYTE PTR [rax],0x8
  424199:	je     4241a0 <xmlStrEqual@plt+0x20260>
  42419b:	movzx  eax,BYTE PTR [rax+0x4]
  42419f:	ret    
  4241a0:	mov    eax,0xffffffff
  4241a5:	ret    
  4241a6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4241b0:	endbr64 
  4241b4:	push   r12
  4241b6:	mov    r12,rdi
  4241b9:	mov    edi,esi
  4241bb:	push   rbp
  4241bc:	mov    ebp,esi
  4241be:	push   rbx
  4241bf:	call   42d9a0 <xmlStrEqual@plt+0x29a60>
  4241c4:	movzx  esi,ax
  4241c7:	mov    ebx,esi
  4241c9:	mov    rdi,r12
  4241cc:	add    esi,0x8
  4241cf:	call   430930 <xmlStrEqual@plt+0x2c9f0>
  4241d4:	movzx  edx,bx
  4241d7:	add    rdx,0x8
  4241db:	xor    esi,esi
  4241dd:	mov    rdi,rax
  4241e0:	call   4039f0 <memset@plt>
  4241e5:	mov    BYTE PTR [rax],0x2
  4241e8:	movbe  WORD PTR [rax+0x4],bp
  4241ee:	movbe  WORD PTR [rax+0x6],bx
  4241f4:	pop    rbx
  4241f5:	pop    rbp
  4241f6:	pop    r12
  4241f8:	ret    
  4241f9:	nop    DWORD PTR [rax+0x0]
  424200:	endbr64 
  424204:	mov    eax,DWORD PTR [rdi+0x14]
  424207:	cmp    eax,0x7
  42420a:	jbe    4040d8 <xmlStrEqual@plt+0x198>
  424210:	push   rbp
  424211:	sub    eax,0x8
  424214:	push   rbx
  424215:	mov    rbx,rdi
  424218:	sub    rsp,0x8
  42421c:	mov    rbp,QWORD PTR [rdi+0x38]
  424220:	mov    DWORD PTR [rdi+0x14],eax
  424223:	lea    rdx,[rbp+0x8]
  424227:	mov    QWORD PTR [rdi+0x38],rdx
  42422b:	movbe  di,WORD PTR [rbp+0x4]
  424231:	movzx  edi,di
  424234:	call   42d9a0 <xmlStrEqual@plt+0x29a60>
  424239:	mov    edx,DWORD PTR [rbx+0x14]
  42423c:	movzx  ecx,ax
  42423f:	cmp    ecx,edx
  424241:	ja     42424f <xmlStrEqual@plt+0x2030f>
  424243:	movzx  eax,ax
  424246:	sub    edx,ecx
  424248:	add    QWORD PTR [rbx+0x38],rax
  42424c:	mov    DWORD PTR [rbx+0x14],edx
  42424f:	add    rsp,0x8
  424253:	pop    rbx
  424254:	mov    rax,rbp
  424257:	pop    rbp
  424258:	ret    
  424259:	nop    DWORD PTR [rax+0x0]
  424260:	endbr64 
  424264:	push   r13
  424266:	mov    r13,rdi
  424269:	mov    edi,edx
  42426b:	push   r12
  42426d:	mov    r12,rcx
  424270:	push   rbp
  424271:	mov    ebp,edx
  424273:	push   rbx
  424274:	mov    rbx,rsi
  424277:	sub    rsp,0x8
  42427b:	movbe  WORD PTR [rsi],dx
  424280:	call   42d9a0 <xmlStrEqual@plt+0x29a60>
  424285:	movzx  edx,WORD PTR [r13+0x24]
  42428a:	movbe  WORD PTR [rbx+0x2],ax
  424290:	lea    r8,[rbx+0x4]
  424294:	mov    ecx,DWORD PTR [r13+0x14]
  424298:	cmp    dx,0xffff
  42429c:	je     4242c8 <xmlStrEqual@plt+0x20388>
  42429e:	add    rdx,QWORD PTR [r13+0x30]
  4242a2:	mov    rsi,r12
  4242a5:	movzx  edi,bpl
  4242a9:	call   42e2e0 <xmlStrEqual@plt+0x2a3a0>
  4242ae:	cmp    eax,0x1
  4242b1:	sete   al
  4242b4:	add    rsp,0x8
  4242b8:	pop    rbx
  4242b9:	pop    rbp
  4242ba:	pop    r12
  4242bc:	movzx  eax,al
  4242bf:	pop    r13
  4242c1:	ret    
  4242c2:	nop    WORD PTR [rax+rax*1+0x0]
  4242c8:	xor    edx,edx
  4242ca:	jmp    4242a2 <xmlStrEqual@plt+0x20362>
  4242cc:	nop    DWORD PTR [rax+0x0]
  4242d0:	endbr64 
  4242d4:	push   r13
  4242d6:	mov    r13,rcx
  4242d9:	push   r12
  4242db:	mov    r12d,edx
  4242de:	push   rbp
  4242df:	push   rbx
  4242e0:	mov    rbx,rsi
  4242e3:	sub    rsp,0x58
  4242e7:	vmovdqu xmm0,XMMWORD PTR [rdi]
  4242eb:	vmovdqu xmm1,XMMWORD PTR [rdi+0x10]
  4242f0:	vmovdqu xmm2,XMMWORD PTR [rdi+0x20]
  4242f5:	vmovdqu xmm3,XMMWORD PTR [rdi+0x30]
  4242fa:	mov    rbp,rsp
  4242fd:	mov    rdi,rbp
  424300:	mov    rax,QWORD PTR fs:0x28
  424309:	mov    QWORD PTR [rsp+0x48],rax
  42430e:	xor    eax,eax
  424310:	vmovaps XMMWORD PTR [rsp],xmm0
  424315:	vmovaps XMMWORD PTR [rsp+0x10],xmm1
  42431b:	vmovaps XMMWORD PTR [rsp+0x20],xmm2
  424321:	vmovaps XMMWORD PTR [rsp+0x30],xmm3
  424327:	call   430c70 <xmlStrEqual@plt+0x2cd30>
  42432c:	mov    edx,r12d
  42432f:	lea    rsi,[rbx+0x4]
  424333:	mov    rcx,r13
  424336:	mov    rdi,rbp
  424339:	call   424260 <xmlStrEqual@plt+0x20320>
  42433e:	mov    rdx,QWORD PTR [rsp+0x48]
  424343:	xor    rdx,QWORD PTR fs:0x28
  42434c:	jne    424359 <xmlStrEqual@plt+0x20419>
  42434e:	add    rsp,0x58
  424352:	pop    rbx
  424353:	pop    rbp
  424354:	pop    r12
  424356:	pop    r13
  424358:	ret    
  424359:	call   403c00 <__stack_chk_fail@plt>
  42435e:	xchg   ax,ax
  424360:	endbr64 
  424364:	push   r13
  424366:	mov    r13,rdi
  424369:	push   r12
  42436b:	push   rbp
  42436c:	mov    rbp,rdx
  42436f:	push   rbx
  424370:	mov    rbx,rsi
  424373:	sub    rsp,0x8
  424377:	movbe  r12w,WORD PTR [rsi]
  42437d:	movzx  edi,r12w
  424381:	call   42d9a0 <xmlStrEqual@plt+0x29a60>
  424386:	movbe  dx,WORD PTR [rbx+0x2]
  42438c:	cmp    ax,dx
  42438f:	je     4243b0 <xmlStrEqual@plt+0x20470>
  424391:	mov    rcx,0x469e3c
  424398:	xor    ebx,ebx
  42439a:	cmp    DWORD PTR [rcx],0x2
  42439d:	jg     424410 <xmlStrEqual@plt+0x204d0>
  42439f:	add    rsp,0x8
  4243a3:	mov    eax,ebx
  4243a5:	pop    rbx
  4243a6:	pop    rbp
  4243a7:	pop    r12
  4243a9:	pop    r13
  4243ab:	ret    
  4243ac:	nop    DWORD PTR [rax+0x0]
  4243b0:	movzx  edx,WORD PTR [r13+0x24]
  4243b5:	lea    r8,[rbx+0x4]
  4243b9:	mov    ecx,DWORD PTR [r13+0x14]
  4243bd:	cmp    dx,0xffff
  4243c1:	je     424440 <xmlStrEqual@plt+0x20500>
  4243c3:	add    rdx,QWORD PTR [r13+0x30]
  4243c7:	mov    rsi,rbp
  4243ca:	movzx  edi,r12b
  4243ce:	call   42e3c0 <xmlStrEqual@plt+0x2a480>
  4243d3:	mov    ebx,eax
  4243d5:	cmp    eax,0x1
  4243d8:	je     42439f <xmlStrEqual@plt+0x2045f>
  4243da:	mov    rax,0x469e3c
  4243e1:	cmp    DWORD PTR [rax],0x2
  4243e4:	jle    42439f <xmlStrEqual@plt+0x2045f>
  4243e6:	xor    eax,eax
  4243e8:	lea    rsi,[rip+0x2a0d3]        # 44e4c2 <xmlStrEqual@plt+0x4a582>
  4243ef:	mov    edi,0x7
  4243f4:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  4243f9:	add    rsp,0x8
  4243fd:	mov    eax,ebx
  4243ff:	pop    rbx
  424400:	pop    rbp
  424401:	pop    r12
  424403:	pop    r13
  424405:	ret    
  424406:	nop    WORD PTR cs:[rax+rax*1+0x0]
  424410:	movzx  ecx,ax
  424413:	movzx  edx,dx
  424416:	xor    eax,eax
  424418:	lea    rsi,[rip+0x2a1b9]        # 44e5d8 <xmlStrEqual@plt+0x4a698>
  42441f:	mov    edi,0x7
  424424:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  424429:	add    rsp,0x8
  42442d:	mov    eax,ebx
  42442f:	pop    rbx
  424430:	pop    rbp
  424431:	pop    r12
  424433:	pop    r13
  424435:	ret    
  424436:	nop    WORD PTR cs:[rax+rax*1+0x0]
  424440:	xor    edx,edx
  424442:	jmp    4243c7 <xmlStrEqual@plt+0x20487>
  424444:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  42444f:	nop
  424450:	endbr64 
  424454:	push   r12
  424456:	mov    r12,rdx
  424459:	push   rbp
  42445a:	push   rbx
  42445b:	mov    rbx,rsi
  42445e:	sub    rsp,0x50
  424462:	vmovdqu xmm0,XMMWORD PTR [rdi]
  424466:	vmovdqu xmm1,XMMWORD PTR [rdi+0x10]
  42446b:	vmovdqu xmm2,XMMWORD PTR [rdi+0x20]
  424470:	vmovdqu xmm3,XMMWORD PTR [rdi+0x30]
  424475:	mov    rbp,rsp
  424478:	mov    rdi,rbp
  42447b:	mov    rax,QWORD PTR fs:0x28
  424484:	mov    QWORD PTR [rsp+0x48],rax
  424489:	xor    eax,eax
  42448b:	vmovaps XMMWORD PTR [rsp],xmm0
  424490:	vmovaps XMMWORD PTR [rsp+0x10],xmm1
  424496:	vmovaps XMMWORD PTR [rsp+0x20],xmm2
  42449c:	vmovaps XMMWORD PTR [rsp+0x30],xmm3
  4244a2:	call   430c70 <xmlStrEqual@plt+0x2cd30>
  4244a7:	lea    rsi,[rbx+0x4]
  4244ab:	mov    rdx,r12
  4244ae:	mov    rdi,rbp
  4244b1:	call   424360 <xmlStrEqual@plt+0x20420>
  4244b6:	mov    rcx,QWORD PTR [rsp+0x48]
  4244bb:	xor    rcx,QWORD PTR fs:0x28
  4244c4:	jne    4244cf <xmlStrEqual@plt+0x2058f>
  4244c6:	add    rsp,0x50
  4244ca:	pop    rbx
  4244cb:	pop    rbp
  4244cc:	pop    r12
  4244ce:	ret    
  4244cf:	call   403c00 <__stack_chk_fail@plt>
  4244d4:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4244df:	nop
  4244e0:	endbr64 
  4244e4:	push   r12
  4244e6:	mov    r12d,esi
  4244e9:	push   rbp
  4244ea:	push   rbx
  4244eb:	mov    rbx,rdi
  4244ee:	mov    edi,esi
  4244f0:	call   42d9a0 <xmlStrEqual@plt+0x29a60>
  4244f5:	movzx  esi,ax
  4244f8:	mov    ebp,esi
  4244fa:	mov    rdi,rbx
  4244fd:	add    esi,0x4
  424500:	call   4308d0 <xmlStrEqual@plt+0x2c990>
  424505:	movbe  WORD PTR [rax],r12w
  42450b:	movbe  WORD PTR [rax+0x2],bp
  424511:	mov    rbx,rax
  424514:	movzx  edx,bp
  424517:	lea    rdi,[rax+0x4]
  42451b:	xor    esi,esi
  42451d:	call   4039f0 <memset@plt>
  424522:	mov    rax,rbx
  424525:	pop    rbx
  424526:	pop    rbp
  424527:	pop    r12
  424529:	ret    
  42452a:	nop    WORD PTR [rax+rax*1+0x0]
  424530:	endbr64 
  424534:	push   r12
  424536:	mov    r12,rdi
  424539:	mov    edi,0x3
  42453e:	push   rbp
  42453f:	mov    ebp,esi
  424541:	push   rbx
  424542:	call   423cc0 <xmlStrEqual@plt+0x1fd80>
  424547:	mov    rdi,rax
  42454a:	mov    esi,ebp
  42454c:	mov    rbx,rax
  42454f:	call   4244e0 <xmlStrEqual@plt+0x205a0>
  424554:	test   rax,rax
  424557:	je     424578 <xmlStrEqual@plt+0x20638>
  424559:	xor    edx,edx
  42455b:	mov    rsi,r12
  42455e:	mov    rdi,rbx
  424561:	call   423740 <xmlStrEqual@plt+0x1f800>
  424566:	test   rax,rax
  424569:	je     424578 <xmlStrEqual@plt+0x20638>
  42456b:	mov    rax,rbx
  42456e:	pop    rbx
  42456f:	pop    rbp
  424570:	pop    r12
  424572:	ret    
  424573:	nop    DWORD PTR [rax+rax*1+0x0]
  424578:	mov    rdi,rbx
  42457b:	xor    ebx,ebx
  42457d:	call   430820 <xmlStrEqual@plt+0x2c8e0>
  424582:	mov    rax,rbx
  424585:	pop    rbx
  424586:	pop    rbp
  424587:	pop    r12
  424589:	ret    
  42458a:	nop    WORD PTR [rax+rax*1+0x0]
  424590:	endbr64 
  424594:	push   r12
  424596:	mov    r12d,esi
  424599:	push   rbp
  42459a:	push   rbx
  42459b:	mov    rbx,rdi
  42459e:	mov    edi,esi
  4245a0:	call   42d9a0 <xmlStrEqual@plt+0x29a60>
  4245a5:	movzx  esi,ax
  4245a8:	mov    ebp,esi
  4245aa:	mov    rdi,rbx
  4245ad:	add    esi,0x4
  4245b0:	call   430930 <xmlStrEqual@plt+0x2c9f0>
  4245b5:	movbe  WORD PTR [rax],r12w
  4245bb:	movbe  WORD PTR [rax+0x2],bp
  4245c1:	mov    rbx,rax
  4245c4:	movzx  edx,bp
  4245c7:	lea    rdi,[rax+0x4]
  4245cb:	xor    esi,esi
  4245cd:	call   4039f0 <memset@plt>
  4245d2:	mov    rax,rbx
  4245d5:	pop    rbx
  4245d6:	pop    rbp
  4245d7:	pop    r12
  4245d9:	ret    
  4245da:	nop    WORD PTR [rax+rax*1+0x0]
  4245e0:	endbr64 
  4245e4:	mov    eax,DWORD PTR [rdi+0x14]
  4245e7:	cmp    eax,0x3
  4245ea:	jbe    4040e2 <xmlStrEqual@plt+0x1a2>
  4245f0:	push   rbp
  4245f1:	sub    eax,0x4
  4245f4:	push   rbx
  4245f5:	mov    rbx,rdi
  4245f8:	sub    rsp,0x8
  4245fc:	mov    rbp,QWORD PTR [rdi+0x38]
  424600:	mov    DWORD PTR [rdi+0x14],eax
  424603:	lea    rdx,[rbp+0x4]
  424607:	mov    QWORD PTR [rdi+0x38],rdx
  42460b:	movbe  di,WORD PTR [rbp+0x0]
  424611:	movzx  edi,di
  424614:	call   42d9a0 <xmlStrEqual@plt+0x29a60>
  424619:	mov    edx,DWORD PTR [rbx+0x14]
  42461c:	movzx  ecx,ax
  42461f:	cmp    ecx,edx
  424621:	ja     42462f <xmlStrEqual@plt+0x206ef>
  424623:	movzx  eax,ax
  424626:	sub    edx,ecx
  424628:	add    QWORD PTR [rbx+0x38],rax
  42462c:	mov    DWORD PTR [rbx+0x14],edx
  42462f:	add    rsp,0x8
  424633:	pop    rbx
  424634:	mov    rax,rbp
  424637:	pop    rbp
  424638:	ret    
  424639:	nop    DWORD PTR [rax+0x0]
  424640:	endbr64 
  424644:	push   r13
  424646:	mov    r13,rsi
  424649:	mov    esi,0x6
  42464e:	push   r12
  424650:	mov    r12,rdi
  424653:	push   rbp
  424654:	mov    ebp,edx
  424656:	movzx  ebp,bpl
  42465a:	push   rbx
  42465b:	sub    rsp,0x8
  42465f:	call   4308d0 <xmlStrEqual@plt+0x2c990>
  424664:	movbe  DWORD PTR [rax],ebp
  424668:	mov    rdi,r13
  42466b:	mov    rbx,rax
  42466e:	call   425670 <xmlStrEqual@plt+0x21730>
  424673:	mov    rdi,rax
  424676:	call   424ee0 <xmlStrEqual@plt+0x20fa0>
  42467b:	mov    BYTE PTR [rbx+0x5],al
  42467e:	mov    rsi,r13
  424681:	mov    rdi,r12
  424684:	call   423630 <xmlStrEqual@plt+0x1f6f0>
  424689:	test   rax,rax
  42468c:	mov    eax,0x0
  424691:	cmove  rbx,rax
  424695:	add    rsp,0x8
  424699:	mov    rax,rbx
  42469c:	pop    rbx
  42469d:	pop    rbp
  42469e:	pop    r12
  4246a0:	pop    r13
  4246a2:	ret    
  4246a3:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4246ae:	xchg   ax,ax
  4246b0:	endbr64 
  4246b4:	push   r12
  4246b6:	mov    r12,rdi
  4246b9:	mov    edi,0x7
  4246be:	push   rbp
  4246bf:	mov    ebp,esi
  4246c1:	push   rbx
  4246c2:	sub    rsp,0x30
  4246c6:	mov    rax,QWORD PTR fs:0x28
  4246cf:	mov    QWORD PTR [rsp+0x28],rax
  4246d4:	xor    eax,eax
  4246d6:	call   423cc0 <xmlStrEqual@plt+0x1fd80>
  4246db:	mov    rdi,rax
  4246de:	mov    esi,ebp
  4246e0:	mov    rbx,rax
  4246e3:	call   4244e0 <xmlStrEqual@plt+0x205a0>
  4246e8:	test   rax,rax
  4246eb:	je     424740 <xmlStrEqual@plt+0x20800>
  4246ed:	xor    edx,edx
  4246ef:	mov    rsi,r12
  4246f2:	mov    rdi,rbx
  4246f5:	call   424640 <xmlStrEqual@plt+0x20700>
  4246fa:	test   rax,rax
  4246fd:	je     424740 <xmlStrEqual@plt+0x20800>
  4246ff:	mov    rbp,rsp
  424702:	xor    esi,esi
  424704:	mov    rdi,rbp
  424707:	call   424dd0 <xmlStrEqual@plt+0x20e90>
  42470c:	mov    rsi,rbp
  42470f:	mov    rdi,rbx
  424712:	call   423630 <xmlStrEqual@plt+0x1f6f0>
  424717:	test   rax,rax
  42471a:	je     424740 <xmlStrEqual@plt+0x20800>
  42471c:	mov    rcx,QWORD PTR [rsp+0x28]
  424721:	xor    rcx,QWORD PTR fs:0x28
  42472a:	mov    rax,rbx
  42472d:	jne    42474c <xmlStrEqual@plt+0x2080c>
  42472f:	add    rsp,0x30
  424733:	pop    rbx
  424734:	pop    rbp
  424735:	pop    r12
  424737:	ret    
  424738:	nop    DWORD PTR [rax+rax*1+0x0]
  424740:	mov    rdi,rbx
  424743:	call   430820 <xmlStrEqual@plt+0x2c8e0>
  424748:	xor    ebx,ebx
  42474a:	jmp    42471c <xmlStrEqual@plt+0x207dc>
  42474c:	call   403c00 <__stack_chk_fail@plt>
  424751:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  42475c:	nop    DWORD PTR [rax+0x0]
  424760:	endbr64 
  424764:	push   r14
  424766:	mov    r14,rsi
  424769:	push   r13
  42476b:	mov    r13d,ecx
  42476e:	push   r12
  424770:	mov    r12,rdi
  424773:	mov    edi,0x7
  424778:	push   rbp
  424779:	mov    ebp,edx
  42477b:	push   rbx
  42477c:	call   423cc0 <xmlStrEqual@plt+0x1fd80>
  424781:	mov    rdi,rax
  424784:	mov    esi,ebp
  424786:	mov    rbx,rax
  424789:	call   4244e0 <xmlStrEqual@plt+0x205a0>
  42478e:	test   rax,rax
  424791:	je     4247e0 <xmlStrEqual@plt+0x208a0>
  424793:	movzx  edx,r13b
  424797:	mov    rsi,r12
  42479a:	mov    rdi,rbx
  42479d:	call   424640 <xmlStrEqual@plt+0x20700>
  4247a2:	test   rax,rax
  4247a5:	je     4247e0 <xmlStrEqual@plt+0x208a0>
  4247a7:	mov    rsi,r14
  4247aa:	mov    rdi,rbx
  4247ad:	call   423630 <xmlStrEqual@plt+0x1f6f0>
  4247b2:	test   rax,rax
  4247b5:	je     4247e0 <xmlStrEqual@plt+0x208a0>
  4247b7:	movzx  eax,WORD PTR [rbx+0x24]
  4247bb:	cmp    ax,0xffff
  4247bf:	je     4040ec <xmlStrEqual@plt+0x1ac>
  4247c5:	mov    rdx,QWORD PTR [rbx+0x30]
  4247c9:	or     BYTE PTR [rdx+rax*1],0x8
  4247cd:	mov    rax,rbx
  4247d0:	pop    rbx
  4247d1:	pop    rbp
  4247d2:	pop    r12
  4247d4:	pop    r13
  4247d6:	pop    r14
  4247d8:	ret    
  4247d9:	nop    DWORD PTR [rax+0x0]
  4247e0:	mov    rdi,rbx
  4247e3:	xor    ebx,ebx
  4247e5:	call   430820 <xmlStrEqual@plt+0x2c8e0>
  4247ea:	mov    rax,rbx
  4247ed:	pop    rbx
  4247ee:	pop    rbp
  4247ef:	pop    r12
  4247f1:	pop    r13
  4247f3:	pop    r14
  4247f5:	ret    
  4247f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  424800:	endbr64 
  424804:	push   rbp
  424805:	mov    ebp,esi
  424807:	mov    esi,0x8
  42480c:	push   rbx
  42480d:	sub    rsp,0x8
  424811:	call   430930 <xmlStrEqual@plt+0x2c9f0>
  424816:	mov    rdi,rax
  424819:	mov    esi,ebp
  42481b:	mov    rbx,rax
  42481e:	call   425c50 <xmlStrEqual@plt+0x21d10>
  424823:	add    rsp,0x8
  424827:	mov    rax,rbx
  42482a:	pop    rbx
  42482b:	pop    rbp
  42482c:	ret    
  42482d:	nop    DWORD PTR [rax]
  424830:	endbr64 
  424834:	push   r14
  424836:	mov    r14d,r9d
  424839:	push   r13
  42483b:	mov    r13,rcx
  42483e:	push   r12
  424840:	mov    r12d,edx
  424843:	push   rbp
  424844:	mov    ebp,esi
  424846:	push   rbx
  424847:	mov    rbx,rdi
  42484a:	sub    rsp,0x20
  42484e:	mov    QWORD PTR [rsp+0x8],r8
  424853:	mov    rdi,QWORD PTR [rdi+0x38]
  424857:	lea    rdx,[rsp+0x14]
  42485c:	lea    rsi,[rsp+0x10]
  424861:	mov    rax,QWORD PTR fs:0x28
  42486a:	mov    QWORD PTR [rsp+0x18],rax
  42486f:	xor    eax,eax
  424871:	mov    DWORD PTR [rsp+0x10],0x0
  424879:	mov    DWORD PTR [rsp+0x14],0x0
  424881:	call   437140 <xmlStrEqual@plt+0x33200>
  424886:	mov    esi,r14d
  424889:	mov    rdi,rbx
  42488c:	call   424800 <xmlStrEqual@plt+0x208c0>
  424891:	mov    r8,QWORD PTR [rsp+0x8]
  424896:	mov    rcx,r13
  424899:	movzx  edx,r12w
  42489d:	movzx  esi,bp
  4248a0:	mov    rdi,rbx
  4248a3:	call   436260 <xmlStrEqual@plt+0x32320>
  4248a8:	mov    rdi,QWORD PTR [rbx+0x38]
  4248ac:	mov    edx,DWORD PTR [rsp+0x14]
  4248b0:	mov    esi,DWORD PTR [rsp+0x10]
  4248b4:	call   4370c0 <xmlStrEqual@plt+0x33180>
  4248b9:	mov    rcx,QWORD PTR [rsp+0x18]
  4248be:	xor    rcx,QWORD PTR fs:0x28
  4248c7:	mov    rax,QWORD PTR [rbx+0x38]
  4248cb:	jne    4248da <xmlStrEqual@plt+0x2099a>
  4248cd:	add    rsp,0x20
  4248d1:	pop    rbx
  4248d2:	pop    rbp
  4248d3:	pop    r12
  4248d5:	pop    r13
  4248d7:	pop    r14
  4248d9:	ret    
  4248da:	call   403c00 <__stack_chk_fail@plt>
  4248df:	nop
  4248e0:	endbr64 
  4248e4:	mov    edx,DWORD PTR [rdi+0x14]
  4248e7:	cmp    edx,0x7
  4248ea:	jbe    424900 <xmlStrEqual@plt+0x209c0>
  4248ec:	mov    rax,QWORD PTR [rdi+0x38]
  4248f0:	sub    edx,0x8
  4248f3:	lea    rcx,[rax+0x8]
  4248f7:	mov    QWORD PTR [rdi+0x38],rcx
  4248fb:	mov    DWORD PTR [rdi+0x14],edx
  4248fe:	ret    
  4248ff:	nop
  424900:	xor    eax,eax
  424902:	ret    
  424903:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  42490e:	xchg   ax,ax
  424910:	endbr64 
  424914:	test   rsi,rsi
  424917:	je     424960 <xmlStrEqual@plt+0x20a20>
  424919:	push   r12
  42491b:	mov    r12,rsi
  42491e:	push   rbp
  42491f:	mov    rbp,rdi
  424922:	push   rbx
  424923:	mov    rbx,QWORD PTR [rdi+0x8]
  424927:	cmp    rdi,rbx
  42492a:	jne    424939 <xmlStrEqual@plt+0x209f9>
  42492c:	jmp    424958 <xmlStrEqual@plt+0x20a18>
  42492e:	xchg   ax,ax
  424930:	mov    rbx,QWORD PTR [rbx+0x8]
  424934:	cmp    rbp,rbx
  424937:	je     424958 <xmlStrEqual@plt+0x20a18>
  424939:	mov    rsi,QWORD PTR [rbx+0x10]
  42493d:	mov    rdi,r12
  424940:	call   425310 <xmlStrEqual@plt+0x213d0>
  424945:	test   eax,eax
  424947:	jne    424930 <xmlStrEqual@plt+0x209f0>
  424949:	pop    rbx
  42494a:	pop    rbp
  42494b:	mov    eax,0x1
  424950:	pop    r12
  424952:	ret    
  424953:	nop    DWORD PTR [rax+rax*1+0x0]
  424958:	pop    rbx
  424959:	pop    rbp
  42495a:	xor    eax,eax
  42495c:	pop    r12
  42495e:	ret    
  42495f:	nop
  424960:	xor    eax,eax
  424962:	ret    
  424963:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  42496e:	xchg   ax,ax
  424970:	endbr64 
  424974:	push   r13
  424976:	push   r12
  424978:	push   rbp
  424979:	push   rbx
  42497a:	sub    rsp,0x8
  42497e:	mov    rbx,QWORD PTR [rdi+0x8]
  424982:	cmp    rdi,rbx
  424985:	je     4249c0 <xmlStrEqual@plt+0x20a80>
  424987:	mov    r12,rdi
  42498a:	mov    r13d,esi
  42498d:	jmp    424999 <xmlStrEqual@plt+0x20a59>
  42498f:	nop
  424990:	mov    rbx,QWORD PTR [rbx+0x8]
  424994:	cmp    r12,rbx
  424997:	je     4249c0 <xmlStrEqual@plt+0x20a80>
  424999:	mov    rbp,QWORD PTR [rbx+0x10]
  42499d:	mov    rdi,rbp
  4249a0:	call   425890 <xmlStrEqual@plt+0x21950>
  4249a5:	movzx  eax,ax
  4249a8:	cmp    eax,r13d
  4249ab:	jne    424990 <xmlStrEqual@plt+0x20a50>
  4249ad:	add    rsp,0x8
  4249b1:	pop    rbx
  4249b2:	mov    rax,rbp
  4249b5:	pop    rbp
  4249b6:	pop    r12
  4249b8:	pop    r13
  4249ba:	ret    
  4249bb:	nop    DWORD PTR [rax+rax*1+0x0]
  4249c0:	add    rsp,0x8
  4249c4:	pop    rbx
  4249c5:	xor    ebp,ebp
  4249c7:	mov    rax,rbp
  4249ca:	pop    rbp
  4249cb:	pop    r12
  4249cd:	pop    r13
  4249cf:	ret    
  4249d0:	endbr64 
  4249d4:	push   r14
  4249d6:	push   r13
  4249d8:	push   r12
  4249da:	push   rbp
  4249db:	push   rbx
  4249dc:	mov    r14d,DWORD PTR [rdi+0x18]
  4249e0:	mov    BYTE PTR [rip+0x4a779],0x0        # 46f160 <xmlStrEqual@plt+0x6b220>
  4249e7:	mov    rbx,QWORD PTR [rdi+0x8]
  4249eb:	cmp    rdi,rbx
  4249ee:	je     424afb <xmlStrEqual@plt+0x20bbb>
  4249f4:	mov    r13,rdi
  4249f7:	mov    ebp,0x1
  4249fc:	lea    r12,[rip+0x4a75d]        # 46f160 <xmlStrEqual@plt+0x6b220>
  424a03:	jmp    424a81 <xmlStrEqual@plt+0x20b41>
  424a05:	nop    DWORD PTR [rax]
  424a08:	call   424d40 <xmlStrEqual@plt+0x20e00>
  424a0d:	mov    r9,rax
  424a10:	lea    rdi,[rip+0x4a749]        # 46f160 <xmlStrEqual@plt+0x6b220>
  424a17:	mov    ecx,DWORD PTR [rdi]
  424a19:	add    rdi,0x4
  424a1d:	lea    edx,[rcx-0x1010101]
  424a23:	andn   edx,ecx,edx
  424a28:	and    edx,0x80808080
  424a2e:	je     424a17 <xmlStrEqual@plt+0x20ad7>
  424a30:	mov    ecx,edx
  424a32:	shr    ecx,0x10
  424a35:	test   edx,0x8080
  424a3b:	cmove  edx,ecx
  424a3e:	lea    rcx,[rdi+0x2]
  424a42:	cmove  rdi,rcx
  424a46:	mov    eax,edx
  424a48:	add    al,dl
  424a4a:	sbb    rdi,0x3
  424a4e:	sub    rdi,r12
  424a51:	mov    esi,0x8fc
  424a56:	sub    rsi,rdi
  424a59:	lea    r8,[rip+0x241a8]        # 448c08 <xmlStrEqual@plt+0x44cc8>
  424a60:	add    rdi,r12
  424a63:	mov    rcx,0xffffffffffffffff
  424a6a:	mov    edx,0x1
  424a6f:	xor    eax,eax
  424a71:	call   403a40 <__snprintf_chk@plt>
  424a76:	mov    rbx,QWORD PTR [rbx+0x8]
  424a7a:	inc    ebp
  424a7c:	cmp    r13,rbx
  424a7f:	je     424afb <xmlStrEqual@plt+0x20bbb>
  424a81:	mov    rdi,QWORD PTR [rbx+0x10]
  424a85:	cmp    r14d,ebp
  424a88:	jg     424a08 <xmlStrEqual@plt+0x20ac8>
  424a8e:	call   424d40 <xmlStrEqual@plt+0x20e00>
  424a93:	mov    rcx,rax
  424a96:	lea    rdi,[rip+0x4a6c3]        # 46f160 <xmlStrEqual@plt+0x6b220>
  424a9d:	mov    esi,DWORD PTR [rdi]
  424a9f:	add    rdi,0x4
  424aa3:	lea    edx,[rsi-0x1010101]
  424aa9:	andn   edx,esi,edx
  424aae:	and    edx,0x80808080
  424ab4:	je     424a9d <xmlStrEqual@plt+0x20b5d>
  424ab6:	mov    esi,edx
  424ab8:	shr    esi,0x10
  424abb:	test   edx,0x8080
  424ac1:	cmove  edx,esi
  424ac4:	lea    rsi,[rdi+0x2]
  424ac8:	cmove  rdi,rsi
  424acc:	mov    eax,edx
  424ace:	add    al,dl
  424ad0:	sbb    rdi,0x3
  424ad4:	sub    rdi,r12
  424ad7:	mov    esi,0x8fc
  424adc:	sub    rsi,rdi
  424adf:	lea    rdx,[rip+0x23b84]        # 44866a <xmlStrEqual@plt+0x4472a>
  424ae6:	add    rdi,r12
  424ae9:	xor    eax,eax
  424aeb:	call   403de0 <snprintf@plt>
  424af0:	mov    rbx,QWORD PTR [rbx+0x8]
  424af4:	inc    ebp
  424af6:	cmp    r13,rbx
  424af9:	jne    424a81 <xmlStrEqual@plt+0x20b41>
  424afb:	pop    rbx
  424afc:	pop    rbp
  424afd:	pop    r12
  424aff:	pop    r13
  424b01:	lea    rax,[rip+0x4a658]        # 46f160 <xmlStrEqual@plt+0x6b220>
  424b08:	pop    r14
  424b0a:	ret    
  424b0b:	nop    DWORD PTR [rax+rax*1+0x0]
  424b10:	endbr64 
  424b14:	push   rbx
  424b15:	cmp    dil,0x1
  424b19:	je     424b50 <xmlStrEqual@plt+0x20c10>
  424b1b:	test   dil,dil
  424b1e:	je     424bb8 <xmlStrEqual@plt+0x20c78>
  424b24:	cmp    dil,0x2
  424b28:	je     424b98 <xmlStrEqual@plt+0x20c58>
  424b2a:	cmp    dil,0x3
  424b2e:	je     424b78 <xmlStrEqual@plt+0x20c38>
  424b30:	movzx  edx,dil
  424b34:	xor    eax,eax
  424b36:	xor    ebx,ebx
  424b38:	lea    rsi,[rip+0x29ad1]        # 44e610 <xmlStrEqual@plt+0x4a6d0>
  424b3f:	mov    edi,0x3
  424b44:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  424b49:	mov    rax,rbx
  424b4c:	pop    rbx
  424b4d:	ret    
  424b4e:	xchg   ax,ax
  424b50:	mov    edi,0x20
  424b55:	call   434fe0 <xmlStrEqual@plt+0x310a0>
  424b5a:	mov    DWORD PTR [rax+0x18],0x1
  424b61:	mov    rbx,rax
  424b64:	xor    esi,esi
  424b66:	mov    rdi,rax
  424b69:	call   425df0 <xmlStrEqual@plt+0x21eb0>
  424b6e:	mov    rax,rbx
  424b71:	pop    rbx
  424b72:	ret    
  424b73:	nop    DWORD PTR [rax+rax*1+0x0]
  424b78:	mov    edi,0x20
  424b7d:	call   434fe0 <xmlStrEqual@plt+0x310a0>
  424b82:	mov    DWORD PTR [rax+0x18],0x3
  424b89:	mov    rbx,rax
  424b8c:	mov    rax,rbx
  424b8f:	pop    rbx
  424b90:	ret    
  424b91:	nop    DWORD PTR [rax+0x0]
  424b98:	mov    edi,0x20
  424b9d:	call   434fe0 <xmlStrEqual@plt+0x310a0>
  424ba2:	mov    DWORD PTR [rax+0x18],0x2
  424ba9:	mov    rbx,rax
  424bac:	mov    rax,rbx
  424baf:	pop    rbx
  424bb0:	ret    
  424bb1:	nop    DWORD PTR [rax+0x0]
  424bb8:	mov    edi,0x20
  424bbd:	call   434fe0 <xmlStrEqual@plt+0x310a0>
  424bc2:	mov    DWORD PTR [rax+0x18],0x0
  424bc9:	mov    rbx,rax
  424bcc:	mov    rax,rbx
  424bcf:	pop    rbx
  424bd0:	ret    
  424bd1:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  424bdc:	nop    DWORD PTR [rax+0x0]
  424be0:	endbr64 
  424be4:	mov    edi,0x20
  424be9:	jmp    434fe0 <xmlStrEqual@plt+0x310a0>
  424bee:	xchg   ax,ax
  424bf0:	endbr64 
  424bf4:	test   rdi,rdi
  424bf7:	je     424c38 <xmlStrEqual@plt+0x20cf8>
  424bf9:	mov    edx,DWORD PTR [rdi+0x18]
  424bfc:	cmp    edx,0x2
  424bff:	jbe    424c2d <xmlStrEqual@plt+0x20ced>
  424c01:	cmp    edx,0x3
  424c04:	je     424c20 <xmlStrEqual@plt+0x20ce0>
  424c06:	lea    rsi,[rip+0x29a33]        # 44e640 <xmlStrEqual@plt+0x4a700>
  424c0d:	mov    edi,0x3
  424c12:	xor    eax,eax
  424c14:	jmp    430e20 <xmlStrEqual@plt+0x2cee0>
  424c19:	nop    DWORD PTR [rax+0x0]
  424c20:	push   rbx
  424c21:	mov    rbx,rdi
  424c24:	call   428b50 <xmlStrEqual@plt+0x24c10>
  424c29:	mov    rdi,rbx
  424c2c:	pop    rbx
  424c2d:	jmp    4037b0 <free@plt>
  424c32:	nop    WORD PTR [rax+rax*1+0x0]
  424c38:	ret    
  424c39:	nop    DWORD PTR [rax+0x0]
  424c40:	endbr64 
  424c44:	mov    edx,DWORD PTR [rdi+0x18]
  424c47:	cmp    edx,0x1
  424c4a:	je     424c81 <xmlStrEqual@plt+0x20d41>
  424c4c:	push   rbx
  424c4d:	test   edx,edx
  424c4f:	je     424c90 <xmlStrEqual@plt+0x20d50>
  424c51:	cmp    edx,0x2
  424c54:	je     424c78 <xmlStrEqual@plt+0x20d38>
  424c56:	mov    ebx,0x4003
  424c5b:	cmp    edx,0x3
  424c5e:	je     424c6e <xmlStrEqual@plt+0x20d2e>
  424c60:	mov    rax,0x469e3c
  424c67:	xor    ebx,ebx
  424c69:	cmp    DWORD PTR [rax],0x1
  424c6c:	jg     424ca0 <xmlStrEqual@plt+0x20d60>
  424c6e:	mov    eax,ebx
  424c70:	pop    rbx
  424c71:	ret    
  424c72:	nop    WORD PTR [rax+rax*1+0x0]
  424c78:	call   426310 <xmlStrEqual@plt+0x223d0>
  424c7d:	mov    rdi,rax
  424c80:	pop    rbx
  424c81:	jmp    425da0 <xmlStrEqual@plt+0x21e60>
  424c86:	nop    WORD PTR cs:[rax+rax*1+0x0]
  424c90:	xor    ebx,ebx
  424c92:	mov    eax,ebx
  424c94:	pop    rbx
  424c95:	ret    
  424c96:	nop    WORD PTR cs:[rax+rax*1+0x0]
  424ca0:	lea    rsi,[rip+0x299c9]        # 44e670 <xmlStrEqual@plt+0x4a730>
  424ca7:	mov    edi,0x6
  424cac:	xor    eax,eax
  424cae:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  424cb3:	jmp    424c6e <xmlStrEqual@plt+0x20d2e>
  424cb5:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  424cc0:	endbr64 
  424cc4:	push   rbx
  424cc5:	mov    edx,DWORD PTR [rdi+0x18]
  424cc8:	cmp    edx,0x1
  424ccb:	je     424cf8 <xmlStrEqual@plt+0x20db8>
  424ccd:	test   edx,edx
  424ccf:	je     424d08 <xmlStrEqual@plt+0x20dc8>
  424cd1:	cmp    edx,0x2
  424cd4:	je     424cf0 <xmlStrEqual@plt+0x20db0>
  424cd6:	cmp    edx,0x3
  424cd9:	je     424d18 <xmlStrEqual@plt+0x20dd8>
  424cdb:	mov    rax,0x469e3c
  424ce2:	xor    ebx,ebx
  424ce4:	cmp    DWORD PTR [rax],0x2
  424ce7:	jg     424d20 <xmlStrEqual@plt+0x20de0>
  424ce9:	mov    eax,ebx
  424ceb:	pop    rbx
  424cec:	ret    
  424ced:	nop    DWORD PTR [rax]
  424cf0:	call   426310 <xmlStrEqual@plt+0x223d0>
  424cf5:	mov    rdi,rax
  424cf8:	call   425d50 <xmlStrEqual@plt+0x21e10>
  424cfd:	movzx  ebx,al
  424d00:	mov    eax,ebx
  424d02:	pop    rbx
  424d03:	ret    
  424d04:	nop    DWORD PTR [rax+0x0]
  424d08:	mov    ebx,0x2
  424d0d:	mov    eax,ebx
  424d0f:	pop    rbx
  424d10:	ret    
  424d11:	nop    DWORD PTR [rax+0x0]
  424d18:	pop    rbx
  424d19:	jmp    428ee0 <xmlStrEqual@plt+0x24fa0>
  424d1e:	xchg   ax,ax
  424d20:	lea    rsi,[rip+0x29979]        # 44e6a0 <xmlStrEqual@plt+0x4a760>
  424d27:	mov    edi,0x7
  424d2c:	xor    eax,eax
  424d2e:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  424d33:	jmp    424ce9 <xmlStrEqual@plt+0x20da9>
  424d35:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  424d40:	endbr64 
  424d44:	push   rbx
  424d45:	test   rdi,rdi
  424d48:	je     424da0 <xmlStrEqual@plt+0x20e60>
  424d4a:	mov    edx,DWORD PTR [rdi+0x18]
  424d4d:	cmp    edx,0x1
  424d50:	je     424db0 <xmlStrEqual@plt+0x20e70>
  424d52:	test   edx,edx
  424d54:	je     424d88 <xmlStrEqual@plt+0x20e48>
  424d56:	cmp    edx,0x2
  424d59:	je     424dc0 <xmlStrEqual@plt+0x20e80>
  424d5b:	cmp    edx,0x3
  424d5e:	je     424d98 <xmlStrEqual@plt+0x20e58>
  424d60:	mov    rax,0x469e3c
  424d67:	xor    ebx,ebx
  424d69:	cmp    DWORD PTR [rax],0x2
  424d6c:	jle    424d8f <xmlStrEqual@plt+0x20e4f>
  424d6e:	lea    rsi,[rip+0x29963]        # 44e6d8 <xmlStrEqual@plt+0x4a798>
  424d75:	mov    edi,0x7
  424d7a:	xor    eax,eax
  424d7c:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  424d81:	jmp    424d8f <xmlStrEqual@plt+0x20e4f>
  424d83:	nop    DWORD PTR [rax+rax*1+0x0]
  424d88:	lea    rbx,[rip+0x29e94]        # 44ec23 <xmlStrEqual@plt+0x4ace3>
  424d8f:	mov    rax,rbx
  424d92:	pop    rbx
  424d93:	ret    
  424d94:	nop    DWORD PTR [rax+0x0]
  424d98:	pop    rbx
  424d99:	jmp    428ca0 <xmlStrEqual@plt+0x24d60>
  424d9e:	xchg   ax,ax
  424da0:	lea    rbx,[rip+0x29e86]        # 44ec2d <xmlStrEqual@plt+0x4aced>
  424da7:	mov    rax,rbx
  424daa:	pop    rbx
  424dab:	ret    
  424dac:	nop    DWORD PTR [rax+0x0]
  424db0:	pop    rbx
  424db1:	jmp    426440 <xmlStrEqual@plt+0x22500>
  424db6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  424dc0:	pop    rbx
  424dc1:	jmp    426460 <xmlStrEqual@plt+0x22520>
  424dc6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  424dd0:	endbr64 
  424dd4:	mov    DWORD PTR [rdi+0x18],esi
  424dd7:	ret    
  424dd8:	nop    DWORD PTR [rax+rax*1+0x0]
  424de0:	endbr64 
  424de4:	mov    edx,DWORD PTR [rdi+0x18]
  424de7:	lea    eax,[rdx-0x1]
  424dea:	cmp    eax,0x1
  424ded:	ja     424e10 <xmlStrEqual@plt+0x20ed0>
  424def:	push   rbx
  424df0:	mov    DWORD PTR [rdi+0x18],0x2
  424df7:	mov    rbx,rdi
  424dfa:	call   4267d0 <xmlStrEqual@plt+0x22890>
  424dff:	movzx  esi,al
  424e02:	mov    rdi,rbx
  424e05:	pop    rbx
  424e06:	jmp    426350 <xmlStrEqual@plt+0x22410>
  424e0b:	nop    DWORD PTR [rax+rax*1+0x0]
  424e10:	mov    rax,0x469e3c
  424e17:	cmp    DWORD PTR [rax],0x2
  424e1a:	jg     424e20 <xmlStrEqual@plt+0x20ee0>
  424e1c:	ret    
  424e1d:	nop    DWORD PTR [rax]
  424e20:	lea    rsi,[rip+0x298f9]        # 44e720 <xmlStrEqual@plt+0x4a7e0>
  424e27:	mov    edi,0x7
  424e2c:	xor    eax,eax
  424e2e:	jmp    430e20 <xmlStrEqual@plt+0x2cee0>
  424e33:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  424e3e:	xchg   ax,ax
  424e40:	endbr64 
  424e44:	mov    edx,DWORD PTR [rdi+0x18]
  424e47:	cmp    edx,0x1
  424e4a:	je     424e68 <xmlStrEqual@plt+0x20f28>
  424e4c:	cmp    edx,0x2
  424e4f:	je     424e70 <xmlStrEqual@plt+0x20f30>
  424e51:	lea    rsi,[rip+0x29900]        # 44e758 <xmlStrEqual@plt+0x4a818>
  424e58:	mov    edi,0x3
  424e5d:	xor    eax,eax
  424e5f:	jmp    430e20 <xmlStrEqual@plt+0x2cee0>
  424e64:	nop    DWORD PTR [rax+0x0]
  424e68:	jmp    425df0 <xmlStrEqual@plt+0x21eb0>
  424e6d:	nop    DWORD PTR [rax]
  424e70:	jmp    426360 <xmlStrEqual@plt+0x22420>
  424e75:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  424e80:	endbr64 
  424e84:	push   rbx
  424e85:	mov    edx,DWORD PTR [rdi+0x18]
  424e88:	cmp    edx,0x1
  424e8b:	je     424ea0 <xmlStrEqual@plt+0x20f60>
  424e8d:	cmp    edx,0x2
  424e90:	jne    424eb0 <xmlStrEqual@plt+0x20f70>
  424e92:	pop    rbx
  424e93:	jmp    426310 <xmlStrEqual@plt+0x223d0>
  424e98:	nop    DWORD PTR [rax+rax*1+0x0]
  424ea0:	mov    rbx,rdi
  424ea3:	mov    rax,rbx
  424ea6:	pop    rbx
  424ea7:	ret    
  424ea8:	nop    DWORD PTR [rax+rax*1+0x0]
  424eb0:	mov    rax,0x469e3c
  424eb7:	xor    ebx,ebx
  424eb9:	cmp    DWORD PTR [rax],0x2
  424ebc:	jle    424ea3 <xmlStrEqual@plt+0x20f63>
  424ebe:	lea    rsi,[rip+0x298c3]        # 44e788 <xmlStrEqual@plt+0x4a848>
  424ec5:	mov    edi,0x7
  424eca:	xor    eax,eax
  424ecc:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  424ed1:	jmp    424ea3 <xmlStrEqual@plt+0x20f63>
  424ed3:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  424ede:	xchg   ax,ax
  424ee0:	endbr64 
  424ee4:	push   rbx
  424ee5:	mov    rbx,rdi
  424ee8:	mov    eax,DWORD PTR [rdi+0x18]
  424eeb:	cmp    eax,0x1
  424eee:	je     424f10 <xmlStrEqual@plt+0x20fd0>
  424ef0:	cmp    eax,0x2
  424ef3:	je     424f38 <xmlStrEqual@plt+0x20ff8>
  424ef5:	mov    rax,0x469e3c
  424efc:	xor    ebx,ebx
  424efe:	cmp    DWORD PTR [rax],0x2
  424f01:	jg     424f40 <xmlStrEqual@plt+0x21000>
  424f03:	mov    eax,ebx
  424f05:	pop    rbx
  424f06:	ret    
  424f07:	nop    WORD PTR [rax+rax*1+0x0]
  424f10:	call   425cc0 <xmlStrEqual@plt+0x21d80>
  424f15:	test   eax,eax
  424f17:	je     424f60 <xmlStrEqual@plt+0x21020>
  424f19:	mov    rdi,rbx
  424f1c:	call   425cc0 <xmlStrEqual@plt+0x21d80>
  424f21:	cmp    eax,0x2
  424f24:	mov    ebx,0x20
  424f29:	mov    eax,0xffffff80
  424f2e:	cmovne ebx,eax
  424f31:	mov    eax,ebx
  424f33:	pop    rbx
  424f34:	ret    
  424f35:	nop    DWORD PTR [rax]
  424f38:	pop    rbx
  424f39:	jmp    426300 <xmlStrEqual@plt+0x223c0>
  424f3e:	xchg   ax,ax
  424f40:	xor    eax,eax
  424f42:	lea    rsi,[rip+0x298a7]        # 44e7f0 <xmlStrEqual@plt+0x4a8b0>
  424f49:	mov    edi,0x7
  424f4e:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  424f53:	mov    eax,ebx
  424f55:	pop    rbx
  424f56:	ret    
  424f57:	nop    WORD PTR [rax+rax*1+0x0]
  424f60:	xor    ebx,ebx
  424f62:	lea    rsi,[rip+0x29857]        # 44e7c0 <xmlStrEqual@plt+0x4a880>
  424f69:	mov    edi,0x3
  424f6e:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  424f73:	mov    eax,ebx
  424f75:	pop    rbx
  424f76:	ret    
  424f77:	nop    WORD PTR [rax+rax*1+0x0]
  424f80:	endbr64 
  424f84:	mov    edx,DWORD PTR [rdi+0x18]
  424f87:	cmp    edx,0x1
  424f8a:	je     424fa0 <xmlStrEqual@plt+0x21060>
  424f8c:	cmp    edx,0x2
  424f8f:	je     424fa8 <xmlStrEqual@plt+0x21068>
  424f91:	mov    rax,0x469e3c
  424f98:	cmp    DWORD PTR [rax],0x2
  424f9b:	jg     424fb0 <xmlStrEqual@plt+0x21070>
  424f9d:	ret    
  424f9e:	xchg   ax,ax
  424fa0:	jmp    425df0 <xmlStrEqual@plt+0x21eb0>
  424fa5:	nop    DWORD PTR [rax]
  424fa8:	jmp    426360 <xmlStrEqual@plt+0x22420>
  424fad:	nop    DWORD PTR [rax]
  424fb0:	lea    rsi,[rip+0x29871]        # 44e828 <xmlStrEqual@plt+0x4a8e8>
  424fb7:	mov    edi,0x7
  424fbc:	xor    eax,eax
  424fbe:	jmp    430e20 <xmlStrEqual@plt+0x2cee0>
  424fc3:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  424fce:	xchg   ax,ax
  424fd0:	endbr64 
  424fd4:	mov    edx,DWORD PTR [rsi+0x18]
  424fd7:	mov    DWORD PTR [rdi+0x18],edx
  424fda:	cmp    edx,0x1
  424fdd:	je     425030 <xmlStrEqual@plt+0x210f0>
  424fdf:	test   edx,edx
  424fe1:	je     425008 <xmlStrEqual@plt+0x210c8>
  424fe3:	cmp    edx,0x2
  424fe6:	je     425000 <xmlStrEqual@plt+0x210c0>
  424fe8:	cmp    edx,0x3
  424feb:	je     425038 <xmlStrEqual@plt+0x210f8>
  424fed:	mov    rax,0x469e3c
  424ff4:	cmp    DWORD PTR [rax],0x1
  424ff7:	jg     425040 <xmlStrEqual@plt+0x21100>
  424ff9:	ret    
  424ffa:	nop    WORD PTR [rax+rax*1+0x0]
  425000:	jmp    426390 <xmlStrEqual@plt+0x22450>
  425005:	nop    DWORD PTR [rax]
  425008:	mov    rax,0x469e3c
  42500f:	cmp    DWORD PTR [rax],0x2
  425012:	jle    424ff9 <xmlStrEqual@plt+0x210b9>
  425014:	lea    rsi,[rip+0x2983d]        # 44e858 <xmlStrEqual@plt+0x4a918>
  42501b:	mov    edi,0x7
  425020:	xor    eax,eax
  425022:	jmp    430e20 <xmlStrEqual@plt+0x2cee0>
  425027:	nop    WORD PTR [rax+rax*1+0x0]
  425030:	jmp    425ea0 <xmlStrEqual@plt+0x21f60>
  425035:	nop    DWORD PTR [rax]
  425038:	jmp    428f30 <xmlStrEqual@plt+0x24ff0>
  42503d:	nop    DWORD PTR [rax]
  425040:	lea    rsi,[rip+0x29841]        # 44e888 <xmlStrEqual@plt+0x4a948>
  425047:	mov    edi,0x6
  42504c:	xor    eax,eax
  42504e:	jmp    430e20 <xmlStrEqual@plt+0x2cee0>
  425053:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  42505e:	xchg   ax,ax
  425060:	endbr64 
  425064:	push   rbp
  425065:	push   rbx
  425066:	sub    rsp,0x8
  42506a:	test   rdi,rdi
  42506d:	je     425098 <xmlStrEqual@plt+0x21158>
  42506f:	mov    rbx,rdi
  425072:	mov    edi,0x20
  425077:	call   434fe0 <xmlStrEqual@plt+0x310a0>
  42507c:	mov    rdi,rax
  42507f:	mov    rsi,rbx
  425082:	mov    rbp,rax
  425085:	call   424fd0 <xmlStrEqual@plt+0x21090>
  42508a:	add    rsp,0x8
  42508e:	pop    rbx
  42508f:	mov    rax,rbp
  425092:	pop    rbp
  425093:	ret    
  425094:	nop    DWORD PTR [rax+0x0]
  425098:	add    rsp,0x8
  42509c:	xor    ebp,ebp
  42509e:	pop    rbx
  42509f:	mov    rax,rbp
  4250a2:	pop    rbp
  4250a3:	ret    
  4250a4:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4250af:	nop
  4250b0:	endbr64 
  4250b4:	push   rbp
  4250b5:	mov    rbp,rdi
  4250b8:	push   rbx
  4250b9:	mov    rbx,rsi
  4250bc:	sub    rsp,0x8
  4250c0:	mov    edx,DWORD PTR [rsi+0x18]
  4250c3:	cmp    edx,0x2
  4250c6:	je     425140 <xmlStrEqual@plt+0x21200>
  4250c8:	cmp    edx,0x3
  4250cb:	je     425110 <xmlStrEqual@plt+0x211d0>
  4250cd:	cmp    edx,0x1
  4250d0:	je     4250f0 <xmlStrEqual@plt+0x211b0>
  4250d2:	mov    rax,0x469e3c
  4250d9:	xor    ebp,ebp
  4250db:	cmp    DWORD PTR [rax],0x2
  4250de:	jg     425170 <xmlStrEqual@plt+0x21230>
  4250e4:	add    rsp,0x8
  4250e8:	pop    rbx
  4250e9:	mov    eax,ebp
  4250eb:	pop    rbp
  4250ec:	ret    
  4250ed:	nop    DWORD PTR [rax]
  4250f0:	call   425ec0 <xmlStrEqual@plt+0x21f80>
  4250f5:	mov    rdi,rbx
  4250f8:	call   425d00 <xmlStrEqual@plt+0x21dc0>
  4250fd:	add    rsp,0x8
  425101:	movzx  ebp,al
  425104:	pop    rbx
  425105:	mov    eax,ebp
  425107:	pop    rbp
  425108:	ret    
  425109:	nop    DWORD PTR [rax+0x0]
  425110:	mov    rax,0x469e3c
  425117:	xor    ebp,ebp
  425119:	cmp    DWORD PTR [rax],0x2
  42511c:	jle    4250e4 <xmlStrEqual@plt+0x211a4>
  42511e:	mov    rdi,rsi
  425121:	call   424d40 <xmlStrEqual@plt+0x20e00>
  425126:	mov    rdx,rax
  425129:	lea    rsi,[rip+0x29788]        # 44e8b8 <xmlStrEqual@plt+0x4a978>
  425130:	mov    edi,0x7
  425135:	xor    eax,eax
  425137:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  42513c:	jmp    4250e4 <xmlStrEqual@plt+0x211a4>
  42513e:	xchg   ax,ax
  425140:	mov    rdi,rsi
  425143:	call   426310 <xmlStrEqual@plt+0x223d0>
  425148:	mov    rsi,rax
  42514b:	mov    rdi,rbp
  42514e:	call   425ec0 <xmlStrEqual@plt+0x21f80>
  425153:	mov    rdi,rbx
  425156:	call   426310 <xmlStrEqual@plt+0x223d0>
  42515b:	mov    rdi,rax
  42515e:	call   425d00 <xmlStrEqual@plt+0x21dc0>
  425163:	add    rsp,0x8
  425167:	movzx  ebp,al
  42516a:	pop    rbx
  42516b:	mov    eax,ebp
  42516d:	pop    rbp
  42516e:	ret    
  42516f:	nop
  425170:	lea    rsi,[rip+0x29781]        # 44e8f8 <xmlStrEqual@plt+0x4a9b8>
  425177:	mov    edi,0x7
  42517c:	xor    eax,eax
  42517e:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  425183:	jmp    4250e4 <xmlStrEqual@plt+0x211a4>
  425188:	nop    DWORD PTR [rax+rax*1+0x0]
  425190:	endbr64 
  425194:	mov    edx,DWORD PTR [rsi+0x18]
  425197:	cmp    edx,0x1
  42519a:	je     4251f0 <xmlStrEqual@plt+0x212b0>
  42519c:	push   rbx
  42519d:	test   edx,edx
  42519f:	je     4251e0 <xmlStrEqual@plt+0x212a0>
  4251a1:	mov    rbx,rdi
  4251a4:	cmp    edx,0x2
  4251a7:	je     4251c0 <xmlStrEqual@plt+0x21280>
  4251a9:	cmp    edx,0x3
  4251ac:	je     425200 <xmlStrEqual@plt+0x212c0>
  4251ae:	mov    rax,0x469e3c
  4251b5:	xor    ebx,ebx
  4251b7:	cmp    DWORD PTR [rax],0x2
  4251ba:	jg     425210 <xmlStrEqual@plt+0x212d0>
  4251bc:	mov    eax,ebx
  4251be:	pop    rbx
  4251bf:	ret    
  4251c0:	mov    rdi,rsi
  4251c3:	call   426310 <xmlStrEqual@plt+0x223d0>
  4251c8:	mov    rsi,rax
  4251cb:	mov    rdi,rbx
  4251ce:	xor    edx,edx
  4251d0:	pop    rbx
  4251d1:	jmp    425fc0 <xmlStrEqual@plt+0x22080>
  4251d6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4251e0:	xor    eax,eax
  4251e2:	mov    WORD PTR [rdi],ax
  4251e5:	mov    ebx,0x2
  4251ea:	mov    eax,ebx
  4251ec:	pop    rbx
  4251ed:	ret    
  4251ee:	xchg   ax,ax
  4251f0:	xor    edx,edx
  4251f2:	jmp    425fc0 <xmlStrEqual@plt+0x22080>
  4251f7:	nop    WORD PTR [rax+rax*1+0x0]
  425200:	pop    rbx
  425201:	jmp    428fd0 <xmlStrEqual@plt+0x25090>
  425206:	nop    WORD PTR cs:[rax+rax*1+0x0]
  425210:	lea    rsi,[rip+0x29711]        # 44e928 <xmlStrEqual@plt+0x4a9e8>
  425217:	mov    edi,0x7
  42521c:	xor    eax,eax
  42521e:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  425223:	jmp    4251bc <xmlStrEqual@plt+0x2127c>
  425225:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  425230:	endbr64 
  425234:	push   rbp
  425235:	push   rbx
  425236:	sub    rsp,0x8
  42523a:	test   rsi,rsi
  42523d:	je     4252e0 <xmlStrEqual@plt+0x213a0>
  425243:	mov    rbx,rsi
  425246:	movbe  si,WORD PTR [rdi]
  42524b:	cmp    si,0x2
  42524f:	ja     425270 <xmlStrEqual@plt+0x21330>
  425251:	test   si,si
  425254:	jne    425298 <xmlStrEqual@plt+0x21358>
  425256:	mov    DWORD PTR [rbx+0x18],0x0
  42525d:	mov    ebp,0x2
  425262:	add    rsp,0x8
  425266:	pop    rbx
  425267:	mov    eax,ebp
  425269:	pop    rbp
  42526a:	ret    
  42526b:	nop    DWORD PTR [rax+rax*1+0x0]
  425270:	cmp    si,0x4003
  425275:	jne    4252b8 <xmlStrEqual@plt+0x21378>
  425277:	mov    rsi,rbx
  42527a:	call   428be0 <xmlStrEqual@plt+0x24ca0>
  42527f:	mov    DWORD PTR [rbx+0x18],0x3
  425286:	add    rsp,0x8
  42528a:	mov    ebp,eax
  42528c:	pop    rbx
  42528d:	mov    eax,ebp
  42528f:	pop    rbp
  425290:	ret    
  425291:	nop    DWORD PTR [rax+0x0]
  425298:	mov    rdx,rbx
  42529b:	movzx  esi,si
  42529e:	call   426220 <xmlStrEqual@plt+0x222e0>
  4252a3:	mov    DWORD PTR [rbx+0x18],0x1
  4252aa:	add    rsp,0x8
  4252ae:	mov    ebp,eax
  4252b0:	pop    rbx
  4252b1:	mov    eax,ebp
  4252b3:	pop    rbp
  4252b4:	ret    
  4252b5:	nop    DWORD PTR [rax]
  4252b8:	mov    rax,0x469e3c
  4252bf:	xor    ebp,ebp
  4252c1:	cmp    DWORD PTR [rax],0x1
  4252c4:	jle    425262 <xmlStrEqual@plt+0x21322>
  4252c6:	movzx  edx,si
  4252c9:	mov    edi,0x6
  4252ce:	lea    rsi,[rip+0x296b3]        # 44e988 <xmlStrEqual@plt+0x4aa48>
  4252d5:	xor    eax,eax
  4252d7:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  4252dc:	jmp    425262 <xmlStrEqual@plt+0x21322>
  4252de:	xchg   ax,ax
  4252e0:	mov    rax,0x469e3c
  4252e7:	xor    ebp,ebp
  4252e9:	cmp    DWORD PTR [rax],0x2
  4252ec:	jle    425262 <xmlStrEqual@plt+0x21322>
  4252f2:	lea    rsi,[rip+0x29657]        # 44e950 <xmlStrEqual@plt+0x4aa10>
  4252f9:	mov    edi,0x7
  4252fe:	xor    eax,eax
  425300:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  425305:	jmp    425262 <xmlStrEqual@plt+0x21322>
  42530a:	nop    WORD PTR [rax+rax*1+0x0]
  425310:	endbr64 
  425314:	push   r12
  425316:	push   rbp
  425317:	push   rbx
  425318:	test   rdi,rdi
  42531b:	je     425360 <xmlStrEqual@plt+0x21420>
  42531d:	mov    rbp,rsi
  425320:	test   rsi,rsi
  425323:	je     425360 <xmlStrEqual@plt+0x21420>
  425325:	mov    edx,DWORD PTR [rdi+0x18]
  425328:	mov    ecx,DWORD PTR [rsi+0x18]
  42532b:	mov    rbx,rdi
  42532e:	cmp    edx,ecx
  425330:	jne    425410 <xmlStrEqual@plt+0x214d0>
  425336:	cmp    edx,0x1
  425339:	je     425390 <xmlStrEqual@plt+0x21450>
  42533b:	test   edx,edx
  42533d:	je     4253a0 <xmlStrEqual@plt+0x21460>
  42533f:	cmp    edx,0x2
  425342:	je     4253b8 <xmlStrEqual@plt+0x21478>
  425344:	mov    r12d,0xffffffff
  42534a:	cmp    edx,0x3
  42534d:	jne    425385 <xmlStrEqual@plt+0x21445>
  42534f:	pop    rbx
  425350:	pop    rbp
  425351:	pop    r12
  425353:	jmp    429040 <xmlStrEqual@plt+0x25100>
  425358:	nop    DWORD PTR [rax+rax*1+0x0]
  425360:	mov    rax,0x469e3c
  425367:	mov    r12d,0xffffffff
  42536d:	cmp    DWORD PTR [rax],0x2
  425370:	jle    425385 <xmlStrEqual@plt+0x21445>
  425372:	lea    rsi,[rip+0x29647]        # 44e9c0 <xmlStrEqual@plt+0x4aa80>
  425379:	mov    edi,0x7
  42537e:	xor    eax,eax
  425380:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  425385:	pop    rbx
  425386:	pop    rbp
  425387:	mov    eax,r12d
  42538a:	pop    r12
  42538c:	ret    
  42538d:	nop    DWORD PTR [rax]
  425390:	pop    rbx
  425391:	pop    rbp
  425392:	pop    r12
  425394:	jmp    426180 <xmlStrEqual@plt+0x22240>
  425399:	nop    DWORD PTR [rax+0x0]
  4253a0:	cmp    rdi,rsi
  4253a3:	je     4253ff <xmlStrEqual@plt+0x214bf>
  4253a5:	pop    rbx
  4253a6:	mov    r12d,0x2
  4253ac:	pop    rbp
  4253ad:	mov    eax,r12d
  4253b0:	pop    r12
  4253b2:	ret    
  4253b3:	nop    DWORD PTR [rax+rax*1+0x0]
  4253b8:	mov    rdi,rsi
  4253bb:	call   426310 <xmlStrEqual@plt+0x223d0>
  4253c0:	mov    rdi,rbx
  4253c3:	mov    r12,rax
  4253c6:	call   426310 <xmlStrEqual@plt+0x223d0>
  4253cb:	mov    rdi,rax
  4253ce:	mov    rsi,r12
  4253d1:	call   426180 <xmlStrEqual@plt+0x22240>
  4253d6:	mov    r12d,eax
  4253d9:	test   eax,eax
  4253db:	jne    425385 <xmlStrEqual@plt+0x21445>
  4253dd:	mov    rdi,rbx
  4253e0:	call   426300 <xmlStrEqual@plt+0x223c0>
  4253e5:	mov    rdi,rbp
  4253e8:	movzx  ebx,al
  4253eb:	call   426300 <xmlStrEqual@plt+0x223c0>
  4253f0:	movzx  eax,al
  4253f3:	mov    r12d,0x1
  4253f9:	cmp    ebx,eax
  4253fb:	jl     425385 <xmlStrEqual@plt+0x21445>
  4253fd:	jg     4253a5 <xmlStrEqual@plt+0x21465>
  4253ff:	pop    rbx
  425400:	xor    r12d,r12d
  425403:	pop    rbp
  425404:	mov    eax,r12d
  425407:	pop    r12
  425409:	ret    
  42540a:	nop    WORD PTR [rax+rax*1+0x0]
  425410:	mov    rax,0x469e3c
  425417:	mov    r12d,0xffffffff
  42541d:	cmp    DWORD PTR [rax],0x2
  425420:	jle    425385 <xmlStrEqual@plt+0x21445>
  425426:	lea    rsi,[rip+0x295cb]        # 44e9f8 <xmlStrEqual@plt+0x4aab8>
  42542d:	mov    edi,0x7
  425432:	xor    eax,eax
  425434:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  425439:	jmp    425385 <xmlStrEqual@plt+0x21445>
  42543e:	xchg   ax,ax
  425440:	endbr64 
  425444:	mov    QWORD PTR [rdi+0x8],rsi
  425448:	ret    
  425449:	nop    DWORD PTR [rax+0x0]
  425450:	endbr64 
  425454:	mov    rax,QWORD PTR [rdi+0x8]
  425458:	ret    
  425459:	nop    DWORD PTR [rax+0x0]
  425460:	endbr64 
  425464:	mov    eax,DWORD PTR [rdi]
  425466:	ret    
  425467:	nop    WORD PTR [rax+rax*1+0x0]
  425470:	endbr64 
  425474:	mov    DWORD PTR [rdi],esi
  425476:	ret    
  425477:	nop    WORD PTR [rax+rax*1+0x0]
  425480:	endbr64 
  425484:	mov    DWORD PTR [rdi+0x18],0x1
  42548b:	movzx  edx,dl
  42548e:	jmp    425e60 <xmlStrEqual@plt+0x21f20>
  425493:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  42549e:	xchg   ax,ax
  4254a0:	endbr64 
  4254a4:	sub    rsp,0x8
  4254a8:	mov    DWORD PTR [rdi+0x18],0x1
  4254af:	call   425ea0 <xmlStrEqual@plt+0x21f60>
  4254b4:	mov    eax,0x1
  4254b9:	add    rsp,0x8
  4254bd:	ret    
  4254be:	xchg   ax,ax
  4254c0:	endbr64 
  4254c4:	sub    rsp,0x8
  4254c8:	mov    DWORD PTR [rdi+0x18],0x2
  4254cf:	movzx  edx,dl
  4254d2:	call   426330 <xmlStrEqual@plt+0x223f0>
  4254d7:	mov    eax,0x1
  4254dc:	add    rsp,0x8
  4254e0:	ret    
  4254e1:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4254ec:	nop    DWORD PTR [rax+0x0]
  4254f0:	endbr64 
  4254f4:	sub    rsp,0x8
  4254f8:	mov    DWORD PTR [rdi+0x18],0x3
  4254ff:	call   428f30 <xmlStrEqual@plt+0x24ff0>
  425504:	mov    eax,0x1
  425509:	add    rsp,0x8
  42550d:	ret    
  42550e:	xchg   ax,ax
  425510:	endbr64 
  425514:	test   di,di
  425517:	je     425538 <xmlStrEqual@plt+0x215f8>
  425519:	mov    eax,0x1
  42551e:	cmp    di,0x2
  425522:	jbe    425530 <xmlStrEqual@plt+0x215f0>
  425524:	mov    eax,0x3
  425529:	cmp    di,0x4003
  42552e:	jne    425538 <xmlStrEqual@plt+0x215f8>
  425530:	ret    
  425531:	nop    DWORD PTR [rax+0x0]
  425538:	sub    rsp,0x8
  42553c:	movzx  edx,di
  42553f:	xor    eax,eax
  425541:	lea    rsi,[rip+0x294e8]        # 44ea30 <xmlStrEqual@plt+0x4aaf0>
  425548:	mov    edi,0x3
  42554d:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  425552:	xor    eax,eax
  425554:	add    rsp,0x8
  425558:	ret    
  425559:	nop    DWORD PTR [rax+0x0]
  425560:	endbr64 
  425564:	xor    eax,eax
  425566:	test   rdi,rdi
  425569:	je     425590 <xmlStrEqual@plt+0x21650>
  42556b:	cmp    DWORD PTR [rdi+0x18],0x3
  42556f:	je     425578 <xmlStrEqual@plt+0x21638>
  425571:	ret    
  425572:	nop    WORD PTR [rax+rax*1+0x0]
  425578:	sub    rsp,0x8
  42557c:	call   428df0 <xmlStrEqual@plt+0x24eb0>
  425581:	test   eax,eax
  425583:	setne  al
  425586:	movzx  eax,al
  425589:	add    rsp,0x8
  42558d:	ret    
  42558e:	xchg   ax,ax
  425590:	ret    
  425591:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  42559c:	nop    DWORD PTR [rax+0x0]
  4255a0:	endbr64 
  4255a4:	push   rbx
  4255a5:	mov    eax,DWORD PTR [rdi+0x18]
  4255a8:	cmp    eax,0x2
  4255ab:	je     4255c8 <xmlStrEqual@plt+0x21688>
  4255ad:	cmp    eax,0x3
  4255b0:	je     4255f0 <xmlStrEqual@plt+0x216b0>
  4255b2:	cmp    eax,0x1
  4255b5:	mov    ebx,0x0
  4255ba:	cmove  rbx,rdi
  4255be:	mov    rax,rbx
  4255c1:	pop    rbx
  4255c2:	ret    
  4255c3:	nop    DWORD PTR [rax+rax*1+0x0]
  4255c8:	mov    rax,0x469e3c
  4255cf:	xor    ebx,ebx
  4255d1:	cmp    DWORD PTR [rax],0x2
  4255d4:	jle    4255be <xmlStrEqual@plt+0x2167e>
  4255d6:	lea    rsi,[rip+0x2948b]        # 44ea68 <xmlStrEqual@plt+0x4ab28>
  4255dd:	mov    edi,0x7
  4255e2:	xor    eax,eax
  4255e4:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  4255e9:	jmp    4255be <xmlStrEqual@plt+0x2167e>
  4255eb:	nop    DWORD PTR [rax+rax*1+0x0]
  4255f0:	pop    rbx
  4255f1:	jmp    42a630 <xmlStrEqual@plt+0x266f0>
  4255f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  425600:	endbr64 
  425604:	sub    rsp,0x18
  425608:	cmp    DWORD PTR [rsi+0x18],0x1
  42560c:	je     425640 <xmlStrEqual@plt+0x21700>
  42560e:	mov    rax,0x469e3c
  425615:	cmp    DWORD PTR [rax],0x1
  425618:	jg     425628 <xmlStrEqual@plt+0x216e8>
  42561a:	xor    eax,eax
  42561c:	add    rsp,0x18
  425620:	ret    
  425621:	nop    DWORD PTR [rax+0x0]
  425628:	lea    rsi,[rip+0x29471]        # 44eaa0 <xmlStrEqual@plt+0x4ab60>
  42562f:	mov    edi,0x6
  425634:	xor    eax,eax
  425636:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  42563b:	jmp    42561a <xmlStrEqual@plt+0x216da>
  42563d:	nop    DWORD PTR [rax]
  425640:	mov    QWORD PTR [rsp+0x8],rsi
  425645:	call   4255a0 <xmlStrEqual@plt+0x21660>
  42564a:	test   rax,rax
  42564d:	je     42561a <xmlStrEqual@plt+0x216da>
  42564f:	mov    rsi,QWORD PTR [rsp+0x8]
  425654:	mov    rdi,rax
  425657:	call   425ea0 <xmlStrEqual@plt+0x21f60>
  42565c:	mov    eax,0x1
  425661:	add    rsp,0x18
  425665:	ret    
  425666:	nop    WORD PTR cs:[rax+rax*1+0x0]
  425670:	endbr64 
  425674:	push   rbx
  425675:	mov    eax,DWORD PTR [rdi+0x18]
  425678:	cmp    eax,0x2
  42567b:	je     425690 <xmlStrEqual@plt+0x21750>
  42567d:	cmp    eax,0x3
  425680:	je     4256c8 <xmlStrEqual@plt+0x21788>
  425682:	xor    ebx,ebx
  425684:	cmp    eax,0x1
  425687:	je     4256a0 <xmlStrEqual@plt+0x21760>
  425689:	mov    rax,rbx
  42568c:	pop    rbx
  42568d:	ret    
  42568e:	xchg   ax,ax
  425690:	mov    rbx,rdi
  425693:	mov    rax,rbx
  425696:	pop    rbx
  425697:	ret    
  425698:	nop    DWORD PTR [rax+rax*1+0x0]
  4256a0:	mov    rax,0x469e3c
  4256a7:	cmp    DWORD PTR [rax],0x2
  4256aa:	jle    425689 <xmlStrEqual@plt+0x21749>
  4256ac:	lea    rsi,[rip+0x29425]        # 44ead8 <xmlStrEqual@plt+0x4ab98>
  4256b3:	mov    edi,0x7
  4256b8:	xor    eax,eax
  4256ba:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  4256bf:	jmp    425689 <xmlStrEqual@plt+0x21749>
  4256c1:	nop    DWORD PTR [rax+0x0]
  4256c8:	pop    rbx
  4256c9:	jmp    42a690 <xmlStrEqual@plt+0x26750>
  4256ce:	xchg   ax,ax
  4256d0:	endbr64 
  4256d4:	sub    rsp,0x8
  4256d8:	mov    edx,DWORD PTR [rdi+0x18]
  4256db:	cmp    edx,0x2
  4256de:	je     425707 <xmlStrEqual@plt+0x217c7>
  4256e0:	cmp    edx,0x3
  4256e3:	je     4256f8 <xmlStrEqual@plt+0x217b8>
  4256e5:	xor    eax,eax
  4256e7:	cmp    edx,0x1
  4256ea:	je     425718 <xmlStrEqual@plt+0x217d8>
  4256ec:	add    rsp,0x8
  4256f0:	ret    
  4256f1:	nop    DWORD PTR [rax+0x0]
  4256f8:	call   425670 <xmlStrEqual@plt+0x21730>
  4256fd:	mov    rdi,rax
  425700:	xor    eax,eax
  425702:	test   rdi,rdi
  425705:	je     4256ec <xmlStrEqual@plt+0x217ac>
  425707:	call   426300 <xmlStrEqual@plt+0x223c0>
  42570c:	movzx  eax,al
  42570f:	add    rsp,0x8
  425713:	ret    
  425714:	nop    DWORD PTR [rax+0x0]
  425718:	call   4267d0 <xmlStrEqual@plt+0x22890>
  42571d:	movzx  eax,al
  425720:	add    rsp,0x8
  425724:	ret    
  425725:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  425730:	endbr64 
  425734:	mov    edx,DWORD PTR [rdi+0x18]
  425737:	cmp    edx,0x2
  42573a:	je     425798 <xmlStrEqual@plt+0x21858>
  42573c:	cmp    edx,0x3
  42573f:	je     425770 <xmlStrEqual@plt+0x21830>
  425741:	cmp    edx,0x1
  425744:	je     425758 <xmlStrEqual@plt+0x21818>
  425746:	mov    rax,0x469e3c
  42574d:	cmp    DWORD PTR [rax],0x1
  425750:	jg     4257a8 <xmlStrEqual@plt+0x21868>
  425752:	ret    
  425753:	nop    DWORD PTR [rax+rax*1+0x0]
  425758:	mov    DWORD PTR [rdi+0x18],0x2
  42575f:	movzx  esi,sil
  425763:	jmp    426350 <xmlStrEqual@plt+0x22410>
  425768:	nop    DWORD PTR [rax+rax*1+0x0]
  425770:	push   rbp
  425771:	mov    ebp,esi
  425773:	push   rbx
  425774:	mov    rbx,rdi
  425777:	sub    rsp,0x8
  42577b:	call   425670 <xmlStrEqual@plt+0x21730>
  425780:	test   rax,rax
  425783:	je     4257c0 <xmlStrEqual@plt+0x21880>
  425785:	add    rsp,0x8
  425789:	pop    rbx
  42578a:	movzx  esi,bpl
  42578e:	mov    rdi,rax
  425791:	pop    rbp
  425792:	jmp    425730 <xmlStrEqual@plt+0x217f0>
  425794:	nop    DWORD PTR [rax+0x0]
  425798:	movzx  esi,sil
  42579c:	jmp    426350 <xmlStrEqual@plt+0x22410>
  4257a1:	nop    DWORD PTR [rax+0x0]
  4257a8:	lea    rsi,[rip+0x293a1]        # 44eb50 <xmlStrEqual@plt+0x4ac10>
  4257af:	mov    edi,0x6
  4257b4:	xor    eax,eax
  4257b6:	jmp    430e20 <xmlStrEqual@plt+0x2cee0>
  4257bb:	nop    DWORD PTR [rax+rax*1+0x0]
  4257c0:	mov    rdi,rbx
  4257c3:	call   4255a0 <xmlStrEqual@plt+0x21660>
  4257c8:	test   rax,rax
  4257cb:	jne    425785 <xmlStrEqual@plt+0x21845>
  4257cd:	mov    rax,0x469e3c
  4257d4:	cmp    DWORD PTR [rax],0x1
  4257d7:	jg     4257e0 <xmlStrEqual@plt+0x218a0>
  4257d9:	add    rsp,0x8
  4257dd:	pop    rbx
  4257de:	pop    rbp
  4257df:	ret    
  4257e0:	add    rsp,0x8
  4257e4:	pop    rbx
  4257e5:	lea    rsi,[rip+0x2932c]        # 44eb18 <xmlStrEqual@plt+0x4abd8>
  4257ec:	mov    edi,0x6
  4257f1:	xor    eax,eax
  4257f3:	pop    rbp
  4257f4:	jmp    430e20 <xmlStrEqual@plt+0x2cee0>
  4257f9:	nop    DWORD PTR [rax+0x0]
  425800:	endbr64 
  425804:	push   rbx
  425805:	sub    rsp,0x10
  425809:	cmp    DWORD PTR [rsi+0x18],0x2
  42580d:	je     425840 <xmlStrEqual@plt+0x21900>
  42580f:	mov    rax,0x469e3c
  425816:	cmp    DWORD PTR [rax],0x1
  425819:	jg     425828 <xmlStrEqual@plt+0x218e8>
  42581b:	add    rsp,0x10
  42581f:	xor    eax,eax
  425821:	pop    rbx
  425822:	ret    
  425823:	nop    DWORD PTR [rax+rax*1+0x0]
  425828:	lea    rsi,[rip+0x29351]        # 44eb80 <xmlStrEqual@plt+0x4ac40>
  42582f:	mov    edi,0x6
  425834:	xor    eax,eax
  425836:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  42583b:	jmp    42581b <xmlStrEqual@plt+0x218db>
  42583d:	nop    DWORD PTR [rax]
  425840:	mov    QWORD PTR [rsp+0x8],rsi
  425845:	mov    rbx,rdi
  425848:	call   425670 <xmlStrEqual@plt+0x21730>
  42584d:	test   rax,rax
  425850:	mov    rsi,QWORD PTR [rsp+0x8]
  425855:	je     425870 <xmlStrEqual@plt+0x21930>
  425857:	mov    rdi,rax
  42585a:	call   426390 <xmlStrEqual@plt+0x22450>
  42585f:	add    rsp,0x10
  425863:	mov    eax,0x1
  425868:	pop    rbx
  425869:	ret    
  42586a:	nop    WORD PTR [rax+rax*1+0x0]
  425870:	mov    rdi,rbx
  425873:	call   4255a0 <xmlStrEqual@plt+0x21660>
  425878:	test   rax,rax
  42587b:	je     42581b <xmlStrEqual@plt+0x218db>
  42587d:	mov    DWORD PTR [rax+0x18],0x2
  425884:	mov    rsi,QWORD PTR [rsp+0x8]
  425889:	jmp    425857 <xmlStrEqual@plt+0x21917>
  42588b:	nop    DWORD PTR [rax+rax*1+0x0]
  425890:	endbr64 
  425894:	push   rbx
  425895:	mov    rbx,rdi
  425898:	mov    edx,DWORD PTR [rbx+0x18]
  42589b:	cmp    edx,0x1
  42589e:	je     4258d0 <xmlStrEqual@plt+0x21990>
  4258a0:	test   edx,edx
  4258a2:	je     4258bb <xmlStrEqual@plt+0x2197b>
  4258a4:	cmp    edx,0x2
  4258a7:	je     4258c0 <xmlStrEqual@plt+0x21980>
  4258a9:	cmp    edx,0x3
  4258ac:	je     4258e0 <xmlStrEqual@plt+0x219a0>
  4258ae:	mov    rax,0x469e3c
  4258b5:	mov    eax,DWORD PTR [rax]
  4258b7:	test   eax,eax
  4258b9:	jg     4258f8 <xmlStrEqual@plt+0x219b8>
  4258bb:	xor    eax,eax
  4258bd:	pop    rbx
  4258be:	ret    
  4258bf:	nop
  4258c0:	mov    rdi,rbx
  4258c3:	call   426320 <xmlStrEqual@plt+0x223e0>
  4258c8:	movzx  eax,al
  4258cb:	pop    rbx
  4258cc:	ret    
  4258cd:	nop    DWORD PTR [rax]
  4258d0:	mov    rdi,rbx
  4258d3:	call   425cc0 <xmlStrEqual@plt+0x21d80>
  4258d8:	pop    rbx
  4258d9:	ret    
  4258da:	nop    WORD PTR [rax+rax*1+0x0]
  4258e0:	mov    rdi,rbx
  4258e3:	call   425670 <xmlStrEqual@plt+0x21730>
  4258e8:	test   rax,rax
  4258eb:	je     425910 <xmlStrEqual@plt+0x219d0>
  4258ed:	mov    rbx,rax
  4258f0:	jmp    425898 <xmlStrEqual@plt+0x21958>
  4258f2:	nop    WORD PTR [rax+rax*1+0x0]
  4258f8:	xor    eax,eax
  4258fa:	lea    rsi,[rip+0x292f7]        # 44ebf8 <xmlStrEqual@plt+0x4acb8>
  425901:	mov    edi,0x5
  425906:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  42590b:	xor    eax,eax
  42590d:	pop    rbx
  42590e:	ret    
  42590f:	nop
  425910:	mov    rdi,rbx
  425913:	call   4255a0 <xmlStrEqual@plt+0x21660>
  425918:	test   rax,rax
  42591b:	jne    4258ed <xmlStrEqual@plt+0x219ad>
  42591d:	mov    rax,0x469e3c
  425924:	mov    edx,DWORD PTR [rax]
  425926:	test   edx,edx
  425928:	jle    4258bb <xmlStrEqual@plt+0x2197b>
  42592a:	mov    edx,DWORD PTR [rbx]
  42592c:	xor    eax,eax
  42592e:	lea    rsi,[rip+0x2928b]        # 44ebc0 <xmlStrEqual@plt+0x4ac80>
  425935:	mov    edi,0x5
  42593a:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  42593f:	xor    eax,eax
  425941:	pop    rbx
  425942:	ret    
  425943:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  42594e:	xchg   ax,ax
  425950:	endbr64 
  425954:	push   rbp
  425955:	push   rbx
  425956:	sub    rsp,0x8
  42595a:	test   rdi,rdi
  42595d:	je     425b20 <xmlStrEqual@plt+0x21be0>
  425963:	mov    rbx,rsi
  425966:	test   rsi,rsi
  425969:	je     425b20 <xmlStrEqual@plt+0x21be0>
  42596f:	mov    edx,DWORD PTR [rdi+0x18]
  425972:	mov    rbp,rdi
  425975:	cmp    edx,DWORD PTR [rsi+0x18]
  425978:	jg     4259b8 <xmlStrEqual@plt+0x21a78>
  42597a:	jl     4259a7 <xmlStrEqual@plt+0x21a67>
  42597c:	cmp    edx,0x2
  42597f:	ja     425998 <xmlStrEqual@plt+0x21a58>
  425981:	test   edx,edx
  425983:	jne    425a20 <xmlStrEqual@plt+0x21ae0>
  425989:	xor    ebx,ebx
  42598b:	add    rsp,0x8
  42598f:	mov    eax,ebx
  425991:	pop    rbx
  425992:	pop    rbp
  425993:	ret    
  425994:	nop    DWORD PTR [rax+0x0]
  425998:	cmp    edx,0x3
  42599b:	jne    4259d0 <xmlStrEqual@plt+0x21a90>
  42599d:	mov    ebp,DWORD PTR [rdi]
  42599f:	mov    eax,DWORD PTR [rsi]
  4259a1:	cmp    ebp,eax
  4259a3:	jg     4259b8 <xmlStrEqual@plt+0x21a78>
  4259a5:	jge    425989 <xmlStrEqual@plt+0x21a49>
  4259a7:	mov    ebx,0x2
  4259ac:	add    rsp,0x8
  4259b0:	mov    eax,ebx
  4259b2:	pop    rbx
  4259b3:	pop    rbp
  4259b4:	ret    
  4259b5:	nop    DWORD PTR [rax]
  4259b8:	mov    ebx,0x1
  4259bd:	add    rsp,0x8
  4259c1:	mov    eax,ebx
  4259c3:	pop    rbx
  4259c4:	pop    rbp
  4259c5:	ret    
  4259c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4259d0:	mov    rax,0x469e3c
  4259d7:	mov    ebx,0xfffffffe
  4259dc:	mov    eax,DWORD PTR [rax]
  4259de:	test   eax,eax
  4259e0:	jle    42598b <xmlStrEqual@plt+0x21a4b>
  4259e2:	lea    rsi,[rip+0x2924b]        # 44ec34 <xmlStrEqual@plt+0x4acf4>
  4259e9:	mov    edi,0x5
  4259ee:	xor    eax,eax
  4259f0:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  4259f5:	jmp    42598b <xmlStrEqual@plt+0x21a4b>
  4259f7:	nop    WORD PTR [rax+rax*1+0x0]
  425a00:	mov    rdi,rbp
  425a03:	call   425670 <xmlStrEqual@plt+0x21730>
  425a08:	test   rax,rax
  425a0b:	je     425b68 <xmlStrEqual@plt+0x21c28>
  425a11:	mov    edx,DWORD PTR [rax+0x18]
  425a14:	mov    rbp,rax
  425a17:	nop    WORD PTR [rax+rax*1+0x0]
  425a20:	cmp    edx,0x1
  425a23:	je     425ac0 <xmlStrEqual@plt+0x21b80>
  425a29:	test   edx,edx
  425a2b:	je     425a48 <xmlStrEqual@plt+0x21b08>
  425a2d:	cmp    edx,0x2
  425a30:	je     425b08 <xmlStrEqual@plt+0x21bc8>
  425a36:	cmp    edx,0x3
  425a39:	je     425a00 <xmlStrEqual@plt+0x21ac0>
  425a3b:	mov    rax,0x469e3c
  425a42:	mov    esi,DWORD PTR [rax]
  425a44:	test   esi,esi
  425a46:	jg     425aa0 <xmlStrEqual@plt+0x21b60>
  425a48:	xor    ebp,ebp
  425a4a:	mov    edx,DWORD PTR [rbx+0x18]
  425a4d:	cmp    edx,0x1
  425a50:	je     425ad0 <xmlStrEqual@plt+0x21b90>
  425a52:	test   edx,edx
  425a54:	je     425a75 <xmlStrEqual@plt+0x21b35>
  425a56:	cmp    edx,0x2
  425a59:	je     425ae0 <xmlStrEqual@plt+0x21ba0>
  425a5f:	cmp    edx,0x3
  425a62:	je     425af0 <xmlStrEqual@plt+0x21bb0>
  425a68:	mov    rax,0x469e3c
  425a6f:	mov    ecx,DWORD PTR [rax]
  425a71:	test   ecx,ecx
  425a73:	jg     425a80 <xmlStrEqual@plt+0x21b40>
  425a75:	xor    eax,eax
  425a77:	jmp    4259a1 <xmlStrEqual@plt+0x21a61>
  425a7c:	nop    DWORD PTR [rax+0x0]
  425a80:	xor    eax,eax
  425a82:	lea    rsi,[rip+0x2916f]        # 44ebf8 <xmlStrEqual@plt+0x4acb8>
  425a89:	mov    edi,0x5
  425a8e:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  425a93:	xor    eax,eax
  425a95:	jmp    4259a1 <xmlStrEqual@plt+0x21a61>
  425a9a:	nop    WORD PTR [rax+rax*1+0x0]
  425aa0:	lea    rsi,[rip+0x29151]        # 44ebf8 <xmlStrEqual@plt+0x4acb8>
  425aa7:	mov    edi,0x5
  425aac:	xor    eax,eax
  425aae:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  425ab3:	xor    ebp,ebp
  425ab5:	jmp    425a4a <xmlStrEqual@plt+0x21b0a>
  425ab7:	nop    WORD PTR [rax+rax*1+0x0]
  425ac0:	mov    rdi,rbp
  425ac3:	call   425cc0 <xmlStrEqual@plt+0x21d80>
  425ac8:	movzx  ebp,ax
  425acb:	jmp    425a4a <xmlStrEqual@plt+0x21b0a>
  425ad0:	mov    rdi,rbx
  425ad3:	call   425cc0 <xmlStrEqual@plt+0x21d80>
  425ad8:	movzx  eax,ax
  425adb:	jmp    4259a1 <xmlStrEqual@plt+0x21a61>
  425ae0:	mov    rdi,rbx
  425ae3:	call   426320 <xmlStrEqual@plt+0x223e0>
  425ae8:	movzx  eax,al
  425aeb:	jmp    4259a1 <xmlStrEqual@plt+0x21a61>
  425af0:	mov    rdi,rbx
  425af3:	call   425670 <xmlStrEqual@plt+0x21730>
  425af8:	test   rax,rax
  425afb:	je     425b2a <xmlStrEqual@plt+0x21bea>
  425afd:	mov    rbx,rax
  425b00:	jmp    425a4a <xmlStrEqual@plt+0x21b0a>
  425b05:	nop    DWORD PTR [rax]
  425b08:	mov    rdi,rbp
  425b0b:	call   426320 <xmlStrEqual@plt+0x223e0>
  425b10:	movzx  ebp,al
  425b13:	jmp    425a4a <xmlStrEqual@plt+0x21b0a>
  425b18:	nop    DWORD PTR [rax+rax*1+0x0]
  425b20:	mov    ebx,0xfffffffe
  425b25:	jmp    42598b <xmlStrEqual@plt+0x21a4b>
  425b2a:	mov    rdi,rbx
  425b2d:	call   4255a0 <xmlStrEqual@plt+0x21660>
  425b32:	test   rax,rax
  425b35:	jne    425afd <xmlStrEqual@plt+0x21bbd>
  425b37:	mov    rax,0x469e3c
  425b3e:	cmp    DWORD PTR [rax],0x0
  425b41:	jle    425a75 <xmlStrEqual@plt+0x21b35>
  425b47:	mov    edx,DWORD PTR [rbx]
  425b49:	xor    eax,eax
  425b4b:	lea    rsi,[rip+0x2906e]        # 44ebc0 <xmlStrEqual@plt+0x4ac80>
  425b52:	mov    edi,0x5
  425b57:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  425b5c:	xor    eax,eax
  425b5e:	jmp    4259a1 <xmlStrEqual@plt+0x21a61>
  425b63:	nop    DWORD PTR [rax+rax*1+0x0]
  425b68:	mov    rdi,rbp
  425b6b:	call   4255a0 <xmlStrEqual@plt+0x21660>
  425b70:	test   rax,rax
  425b73:	jne    425a11 <xmlStrEqual@plt+0x21ad1>
  425b79:	mov    rax,0x469e3c
  425b80:	cmp    DWORD PTR [rax],0x0
  425b83:	jle    425a48 <xmlStrEqual@plt+0x21b08>
  425b89:	mov    edx,DWORD PTR [rbp+0x0]
  425b8c:	lea    rsi,[rip+0x2902d]        # 44ebc0 <xmlStrEqual@plt+0x4ac80>
  425b93:	mov    edi,0x5
  425b98:	xor    eax,eax
  425b9a:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  425b9f:	xor    ebp,ebp
  425ba1:	jmp    425a4a <xmlStrEqual@plt+0x21b0a>
  425ba6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  425bb0:	endbr64 
  425bb4:	cmp    DWORD PTR [rdi+0x18],0x3
  425bb8:	je     425bc0 <xmlStrEqual@plt+0x21c80>
  425bba:	ret    
  425bbb:	nop    DWORD PTR [rax+rax*1+0x0]
  425bc0:	jmp    428b50 <xmlStrEqual@plt+0x24c10>
  425bc5:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  425bd0:	endbr64 
  425bd4:	push   rbx
  425bd5:	mov    rbx,rsi
  425bd8:	call   426930 <xmlStrEqual@plt+0x229f0>
  425bdd:	mov    edx,0x1
  425be2:	cmp    eax,0x1
  425be5:	je     425beb <xmlStrEqual@plt+0x21cab>
  425be7:	xor    edx,edx
  425be9:	xor    eax,eax
  425beb:	mov    DWORD PTR [rbx+0x18],edx
  425bee:	pop    rbx
  425bef:	ret    
  425bf0:	endbr64 
  425bf4:	push   rbx
  425bf5:	mov    rbx,rsi
  425bf8:	call   4269a0 <xmlStrEqual@plt+0x22a60>
  425bfd:	mov    edx,0x2
  425c02:	cmp    eax,0x1
  425c05:	je     425c0b <xmlStrEqual@plt+0x21ccb>
  425c07:	xor    edx,edx
  425c09:	xor    eax,eax
  425c0b:	mov    DWORD PTR [rbx+0x18],edx
  425c0e:	pop    rbx
  425c0f:	ret    
  425c10:	endbr64 
  425c14:	mov    edx,DWORD PTR [rdi+0x18]
  425c17:	cmp    edx,0x1
  425c1a:	je     425c38 <xmlStrEqual@plt+0x21cf8>
  425c1c:	xor    eax,eax
  425c1e:	test   edx,edx
  425c20:	je     425c3a <xmlStrEqual@plt+0x21cfa>
  425c22:	cmp    edx,0x2
  425c25:	je     425c38 <xmlStrEqual@plt+0x21cf8>
  425c27:	cmp    edx,0x3
  425c2a:	je     425c38 <xmlStrEqual@plt+0x21cf8>
  425c2c:	mov    eax,0xffffffff
  425c31:	ret    
  425c32:	nop    WORD PTR [rax+rax*1+0x0]
  425c38:	mov    eax,DWORD PTR [rdi]
  425c3a:	ret    
  425c3b:	nop    DWORD PTR [rax+rax*1+0x0]
  425c40:	endbr64 
  425c44:	add    rdi,0x4
  425c48:	jmp    4375f0 <xmlStrEqual@plt+0x336b0>
  425c4d:	nop    DWORD PTR [rax]
  425c50:	endbr64 
  425c54:	push   rbx
  425c55:	mov    rbx,rdi
  425c58:	mov    BYTE PTR [rdi+0x7],0x0
  425c5c:	and    DWORD PTR [rdi],0x8f
  425c62:	test   esi,esi
  425c64:	jne    425c80 <xmlStrEqual@plt+0x21d40>
  425c66:	and    BYTE PTR [rdi],0xf7
  425c69:	xor    eax,eax
  425c6b:	mov    WORD PTR [rdi+0x4],ax
  425c6f:	mov    BYTE PTR [rdi+0x6],0x0
  425c73:	and    BYTE PTR [rbx],0x78
  425c76:	pop    rbx
  425c77:	ret    
  425c78:	nop    DWORD PTR [rax+rax*1+0x0]
  425c80:	or     BYTE PTR [rdi],0x8
  425c83:	lea    rdi,[rdi+0x4]
  425c87:	call   4375d0 <xmlStrEqual@plt+0x33690>
  425c8c:	and    BYTE PTR [rbx],0x78
  425c8f:	pop    rbx
  425c90:	ret    
  425c91:	nop    WORD PTR cs:[rax+rax*1+0x0]
  425c9b:	nop    DWORD PTR [rax+rax*1+0x0]
  425ca0:	endbr64 
  425ca4:	mov    edi,0x14
  425ca9:	jmp    434fe0 <xmlStrEqual@plt+0x310a0>
  425cae:	xchg   ax,ax
  425cb0:	endbr64 
  425cb4:	jmp    4037b0 <free@plt>
  425cb9:	nop    DWORD PTR [rax+0x0]
  425cc0:	endbr64 
  425cc4:	mov    eax,DWORD PTR [rdi]
  425cc6:	ret    
  425cc7:	nop    WORD PTR [rax+rax*1+0x0]
  425cd0:	endbr64 
  425cd4:	lea    rax,[rdi+0x4]
  425cd8:	ret    
  425cd9:	nop    DWORD PTR [rax+0x0]
  425ce0:	endbr64 
  425ce4:	lea    rax,[rdi+0x4]
  425ce8:	ret    
  425ce9:	nop    DWORD PTR [rax+0x0]
  425cf0:	endbr64 
  425cf4:	lea    rax,[rdi+0x4]
  425cf8:	ret    
  425cf9:	nop    DWORD PTR [rax+0x0]
  425d00:	endbr64 
  425d04:	mov    edx,DWORD PTR [rdi]
  425d06:	mov    eax,0x4
  425d0b:	cmp    dx,0x2
  425d0f:	je     425d40 <xmlStrEqual@plt+0x21e00>
  425d11:	mov    eax,0x10
  425d16:	cmp    dx,0xa
  425d1a:	je     425d40 <xmlStrEqual@plt+0x21e00>
  425d1c:	sub    rsp,0x8
  425d20:	xor    eax,eax
  425d22:	movzx  edx,dx
  425d25:	lea    rsi,[rip+0x28f2c]        # 44ec58 <xmlStrEqual@plt+0x4ad18>
  425d2c:	mov    edi,0x3
  425d31:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  425d36:	xor    eax,eax
  425d38:	add    rsp,0x8
  425d3c:	ret    
  425d3d:	nop    DWORD PTR [rax]
  425d40:	ret    
  425d41:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  425d4c:	nop    DWORD PTR [rax+0x0]
  425d50:	endbr64 
  425d54:	mov    edx,DWORD PTR [rdi]
  425d56:	mov    eax,0x6
  425d5b:	cmp    dx,0x2
  425d5f:	je     425d90 <xmlStrEqual@plt+0x21e50>
  425d61:	mov    eax,0x12
  425d66:	cmp    dx,0xa
  425d6a:	je     425d90 <xmlStrEqual@plt+0x21e50>
  425d6c:	sub    rsp,0x8
  425d70:	xor    eax,eax
  425d72:	movzx  edx,dx
  425d75:	lea    rsi,[rip+0x28edc]        # 44ec58 <xmlStrEqual@plt+0x4ad18>
  425d7c:	mov    edi,0x3
  425d81:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  425d86:	mov    eax,0x2
  425d8b:	add    rsp,0x8
  425d8f:	ret    
  425d90:	ret    
  425d91:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  425d9c:	nop    DWORD PTR [rax+0x0]
  425da0:	endbr64 
  425da4:	mov    edx,DWORD PTR [rdi]
  425da6:	mov    eax,0x1
  425dab:	cmp    dx,0x2
  425daf:	je     425de0 <xmlStrEqual@plt+0x21ea0>
  425db1:	mov    eax,0x2
  425db6:	cmp    dx,0xa
  425dba:	je     425de0 <xmlStrEqual@plt+0x21ea0>
  425dbc:	sub    rsp,0x8
  425dc0:	xor    eax,eax
  425dc2:	movzx  edx,dx
  425dc5:	lea    rsi,[rip+0x28ebc]        # 44ec88 <xmlStrEqual@plt+0x4ad48>
  425dcc:	mov    edi,0x3
  425dd1:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  425dd6:	xor    eax,eax
  425dd8:	add    rsp,0x8
  425ddc:	ret    
  425ddd:	nop    DWORD PTR [rax]
  425de0:	ret    
  425de1:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  425dec:	nop    DWORD PTR [rax+0x0]
  425df0:	endbr64 
  425df4:	test   esi,0xfffffffd
  425dfa:	je     425e01 <xmlStrEqual@plt+0x21ec1>
  425dfc:	cmp    esi,0xa
  425dff:	jne    425e10 <xmlStrEqual@plt+0x21ed0>
  425e01:	mov    DWORD PTR [rdi],esi
  425e03:	mov    eax,0x1
  425e08:	ret    
  425e09:	nop    DWORD PTR [rax+0x0]
  425e10:	sub    rsp,0x8
  425e14:	mov    edx,esi
  425e16:	xor    eax,eax
  425e18:	lea    rsi,[rip+0x28e99]        # 44ecb8 <xmlStrEqual@plt+0x4ad78>
  425e1f:	mov    edi,0x3
  425e24:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  425e29:	xor    eax,eax
  425e2b:	add    rsp,0x8
  425e2f:	ret    
  425e30:	endbr64 
  425e34:	mov    DWORD PTR [rdi],0x2
  425e3a:	mov    eax,DWORD PTR [rsi]
  425e3c:	mov    DWORD PTR [rdi+0x4],eax
  425e3f:	ret    
  425e40:	endbr64 
  425e44:	mov    DWORD PTR [rdi],0xa
  425e4a:	vmovdqu xmm0,XMMWORD PTR [rsi]
  425e4e:	vmovups XMMWORD PTR [rdi+0x4],xmm0
  425e53:	ret    
  425e54:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  425e5f:	nop
  425e60:	endbr64 
  425e64:	cmp    dl,0x2
  425e67:	je     425e88 <xmlStrEqual@plt+0x21f48>
  425e69:	cmp    dl,0xa
  425e6c:	je     425e90 <xmlStrEqual@plt+0x21f50>
  425e6e:	movzx  edx,dl
  425e71:	lea    rsi,[rip+0x28e68]        # 44ece0 <xmlStrEqual@plt+0x4ada0>
  425e78:	mov    edi,0x3
  425e7d:	xor    eax,eax
  425e7f:	jmp    430e20 <xmlStrEqual@plt+0x2cee0>
  425e84:	nop    DWORD PTR [rax+0x0]
  425e88:	jmp    425e30 <xmlStrEqual@plt+0x21ef0>
  425e8d:	nop    DWORD PTR [rax]
  425e90:	mov    DWORD PTR [rdi],0xa
  425e96:	vmovdqu xmm0,XMMWORD PTR [rsi]
  425e9a:	vmovups XMMWORD PTR [rdi+0x4],xmm0
  425e9f:	ret    
  425ea0:	endbr64 
  425ea4:	test   rdi,rdi
  425ea7:	je     425ebc <xmlStrEqual@plt+0x21f7c>
  425ea9:	test   rsi,rsi
  425eac:	je     425ebc <xmlStrEqual@plt+0x21f7c>
  425eae:	vmovdqu xmm0,XMMWORD PTR [rsi]
  425eb2:	vmovups XMMWORD PTR [rdi],xmm0
  425eb6:	mov    eax,DWORD PTR [rsi+0x10]
  425eb9:	mov    DWORD PTR [rdi+0x10],eax
  425ebc:	ret    
  425ebd:	nop    DWORD PTR [rax]
  425ec0:	endbr64 
  425ec4:	test   rdi,rdi
  425ec7:	je     425f30 <xmlStrEqual@plt+0x21ff0>
  425ec9:	test   rsi,rsi
  425ecc:	je     425f30 <xmlStrEqual@plt+0x21ff0>
  425ece:	push   rbp
  425ecf:	mov    ecx,0x4
  425ed4:	mov    rbp,rdi
  425ed7:	push   rbx
  425ed8:	mov    rbx,rsi
  425edb:	sub    rsp,0x8
  425edf:	mov    edx,DWORD PTR [rsi]
  425ee1:	cmp    dx,0x2
  425ee5:	je     425f0a <xmlStrEqual@plt+0x21fca>
  425ee7:	mov    ecx,0x10
  425eec:	cmp    dx,0xa
  425ef0:	je     425f0a <xmlStrEqual@plt+0x21fca>
  425ef2:	movzx  edx,dx
  425ef5:	lea    rsi,[rip+0x28d5c]        # 44ec58 <xmlStrEqual@plt+0x4ad18>
  425efc:	mov    edi,0x3
  425f01:	xor    eax,eax
  425f03:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  425f08:	xor    ecx,ecx
  425f0a:	lea    rsi,[rbx+0x4]
  425f0e:	mov    eax,ecx
  425f10:	cmp    ecx,0x8
  425f13:	jae    425f38 <xmlStrEqual@plt+0x21ff8>
  425f15:	and    ecx,0x4
  425f18:	jne    425fa8 <xmlStrEqual@plt+0x22068>
  425f1e:	test   eax,eax
  425f20:	jne    425f88 <xmlStrEqual@plt+0x22048>
  425f22:	add    rsp,0x8
  425f26:	pop    rbx
  425f27:	pop    rbp
  425f28:	ret    
  425f29:	nop    DWORD PTR [rax+0x0]
  425f30:	ret    
  425f31:	nop    DWORD PTR [rax+0x0]
  425f38:	mov    rax,QWORD PTR [rbx+0x4]
  425f3c:	lea    r8,[rbp+0x8]
  425f40:	mov    QWORD PTR [rbp+0x0],rax
  425f44:	mov    eax,ecx
  425f46:	and    r8,0xfffffffffffffff8
  425f4a:	mov    rdx,QWORD PTR [rsi+rax*1-0x8]
  425f4f:	mov    rdi,rbp
  425f52:	sub    rdi,r8
  425f55:	mov    QWORD PTR [rbp+rax*1-0x8],rdx
  425f5a:	lea    eax,[rcx+rdi*1]
  425f5d:	and    eax,0xfffffff8
  425f60:	sub    rsi,rdi
  425f63:	cmp    eax,0x8
  425f66:	jb     425f22 <xmlStrEqual@plt+0x21fe2>
  425f68:	and    eax,0xfffffff8
  425f6b:	xor    edx,edx
  425f6d:	mov    ecx,edx
  425f6f:	mov    rdi,QWORD PTR [rsi+rcx*1]
  425f73:	add    edx,0x8
  425f76:	mov    QWORD PTR [r8+rcx*1],rdi
  425f7a:	cmp    edx,eax
  425f7c:	jb     425f6d <xmlStrEqual@plt+0x2202d>
  425f7e:	add    rsp,0x8
  425f82:	pop    rbx
  425f83:	pop    rbp
  425f84:	ret    
  425f85:	nop    DWORD PTR [rax]
  425f88:	movzx  edx,BYTE PTR [rbx+0x4]
  425f8c:	mov    BYTE PTR [rbp+0x0],dl
  425f8f:	test   al,0x2
  425f91:	je     425f22 <xmlStrEqual@plt+0x21fe2>
  425f93:	mov    edx,eax
  425f95:	movzx  eax,WORD PTR [rsi+rdx*1-0x2]
  425f9a:	mov    WORD PTR [rbp+rdx*1-0x2],ax
  425f9f:	jmp    425f22 <xmlStrEqual@plt+0x21fe2>
  425fa1:	nop    DWORD PTR [rax+0x0]
  425fa8:	mov    edx,DWORD PTR [rbx+0x4]
  425fab:	mov    DWORD PTR [rbp+0x0],edx
  425fae:	mov    edx,DWORD PTR [rsi+rax*1-0x4]
  425fb2:	mov    DWORD PTR [rbp+rax*1-0x4],edx
  425fb6:	jmp    425f22 <xmlStrEqual@plt+0x21fe2>
  425fbb:	nop    DWORD PTR [rax+rax*1+0x0]
  425fc0:	endbr64 
  425fc4:	push   r13
  425fc6:	mov    r13d,edx
  425fc9:	push   r12
  425fcb:	push   rbp
  425fcc:	mov    rbp,rdi
  425fcf:	push   rbx
  425fd0:	mov    rbx,rsi
  425fd3:	sub    rsp,0x8
  425fd7:	mov    edx,DWORD PTR [rsi]
  425fd9:	cmp    dx,0x2
  425fdd:	je     426130 <xmlStrEqual@plt+0x221f0>
  425fe3:	cmp    dx,0xa
  425fe7:	je     426060 <xmlStrEqual@plt+0x22120>
  425fe9:	movzx  edx,dx
  425fec:	lea    rsi,[rip+0x28c95]        # 44ec88 <xmlStrEqual@plt+0x4ad48>
  425ff3:	mov    edi,0x3
  425ff8:	xor    eax,eax
  425ffa:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  425fff:	xor    esi,esi
  426001:	mov    edx,DWORD PTR [rbx]
  426003:	lea    r12,[rbp+0x2]
  426007:	mov    WORD PTR [rbp+0x0],si
  42600b:	test   r13b,r13b
  42600e:	je     42606c <xmlStrEqual@plt+0x2212c>
  426010:	cmp    edx,0x2
  426013:	jne    42606c <xmlStrEqual@plt+0x2212c>
  426015:	movbe  eax,DWORD PTR [rbx+0x4]
  42601a:	mov    DWORD PTR [rbp+0x2],eax
  42601d:	mov    edx,DWORD PTR [rbx]
  42601f:	mov    eax,0x6
  426024:	cmp    dx,0x2
  426028:	je     426050 <xmlStrEqual@plt+0x22110>
  42602a:	mov    eax,0x12
  42602f:	cmp    dx,0xa
  426033:	je     426050 <xmlStrEqual@plt+0x22110>
  426035:	xor    eax,eax
  426037:	movzx  edx,dx
  42603a:	lea    rsi,[rip+0x28c17]        # 44ec58 <xmlStrEqual@plt+0x4ad18>
  426041:	mov    edi,0x3
  426046:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  42604b:	mov    eax,0x2
  426050:	add    rsp,0x8
  426054:	pop    rbx
  426055:	pop    rbp
  426056:	pop    r12
  426058:	pop    r13
  42605a:	ret    
  42605b:	nop    DWORD PTR [rax+rax*1+0x0]
  426060:	mov    eax,0x200
  426065:	mov    WORD PTR [rdi],ax
  426068:	lea    r12,[rdi+0x2]
  42606c:	cmp    dx,0x2
  426070:	je     426145 <xmlStrEqual@plt+0x22205>
  426076:	mov    ecx,0x10
  42607b:	cmp    dx,0xa
  42607f:	je     426099 <xmlStrEqual@plt+0x22159>
  426081:	movzx  edx,dx
  426084:	lea    rsi,[rip+0x28bcd]        # 44ec58 <xmlStrEqual@plt+0x4ad18>
  42608b:	mov    edi,0x3
  426090:	xor    eax,eax
  426092:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  426097:	xor    ecx,ecx
  426099:	lea    rdx,[rbx+0x4]
  42609d:	mov    eax,ecx
  42609f:	cmp    ecx,0x8
  4260a2:	jb     426100 <xmlStrEqual@plt+0x221c0>
  4260a4:	mov    rax,QWORD PTR [rbx+0x4]
  4260a8:	lea    rdi,[r12+0x8]
  4260ad:	mov    QWORD PTR [r12],rax
  4260b1:	mov    eax,ecx
  4260b3:	and    rdi,0xfffffffffffffff8
  4260b7:	mov    rsi,QWORD PTR [rdx+rax*1-0x8]
  4260bc:	mov    QWORD PTR [r12+rax*1-0x8],rsi
  4260c1:	mov    rax,r12
  4260c4:	sub    rax,rdi
  4260c7:	mov    rsi,rdx
  4260ca:	sub    rsi,rax
  4260cd:	add    eax,ecx
  4260cf:	and    eax,0xfffffff8
  4260d2:	cmp    eax,0x8
  4260d5:	jb     42601d <xmlStrEqual@plt+0x220dd>
  4260db:	and    eax,0xfffffff8
  4260de:	xor    edx,edx
  4260e0:	mov    ecx,edx
  4260e2:	mov    r8,QWORD PTR [rsi+rcx*1]
  4260e6:	add    edx,0x8
  4260e9:	mov    QWORD PTR [rdi+rcx*1],r8
  4260ed:	cmp    edx,eax
  4260ef:	jb     4260e0 <xmlStrEqual@plt+0x221a0>
  4260f1:	jmp    42601d <xmlStrEqual@plt+0x220dd>
  4260f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  426100:	and    ecx,0x4
  426103:	jne    426160 <xmlStrEqual@plt+0x22220>
  426105:	test   eax,eax
  426107:	je     42601d <xmlStrEqual@plt+0x220dd>
  42610d:	movzx  ecx,BYTE PTR [rbx+0x4]
  426111:	mov    BYTE PTR [r12],cl
  426115:	test   al,0x2
  426117:	je     42601d <xmlStrEqual@plt+0x220dd>
  42611d:	movzx  edx,WORD PTR [rdx+rax*1-0x2]
  426122:	mov    WORD PTR [r12+rax*1-0x2],dx
  426128:	jmp    42601d <xmlStrEqual@plt+0x220dd>
  42612d:	nop    DWORD PTR [rax]
  426130:	mov    ecx,0x100
  426135:	mov    WORD PTR [rdi],cx
  426138:	lea    r12,[rdi+0x2]
  42613c:	test   r13b,r13b
  42613f:	jne    426010 <xmlStrEqual@plt+0x220d0>
  426145:	mov    ecx,0x4
  42614a:	lea    rdx,[rbx+0x4]
  42614e:	mov    eax,ecx
  426150:	cmp    ecx,0x8
  426153:	jae    4260a4 <xmlStrEqual@plt+0x22164>
  426159:	jmp    426100 <xmlStrEqual@plt+0x221c0>
  42615b:	nop    DWORD PTR [rax+rax*1+0x0]
  426160:	mov    ecx,DWORD PTR [rbx+0x4]
  426163:	mov    DWORD PTR [r12],ecx
  426167:	mov    edx,DWORD PTR [rdx+rax*1-0x4]
  42616b:	mov    DWORD PTR [r12+rax*1-0x4],edx
  426170:	jmp    42601d <xmlStrEqual@plt+0x220dd>
  426175:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  426180:	endbr64 
  426184:	push   rbx
  426185:	mov    edx,DWORD PTR [rdi]
  426187:	mov    ecx,DWORD PTR [rsi]
  426189:	cmp    edx,ecx
  42618b:	jne    4261f0 <xmlStrEqual@plt+0x222b0>
  42618d:	cmp    dx,0x2
  426191:	je     4261e0 <xmlStrEqual@plt+0x222a0>
  426193:	cmp    dx,0xa
  426197:	jne    4261c0 <xmlStrEqual@plt+0x22280>
  426199:	mov    edx,0x10
  42619e:	add    rsi,0x4
  4261a2:	add    rdi,0x4
  4261a6:	call   403990 <memcmp@plt>
  4261ab:	xor    ebx,ebx
  4261ad:	test   eax,eax
  4261af:	setne  bl
  4261b2:	mov    eax,0x2
  4261b7:	cmovs  ebx,eax
  4261ba:	mov    eax,ebx
  4261bc:	pop    rbx
  4261bd:	ret    
  4261be:	xchg   ax,ax
  4261c0:	xor    eax,eax
  4261c2:	xor    ebx,ebx
  4261c4:	movzx  edx,dx
  4261c7:	lea    rsi,[rip+0x28a8a]        # 44ec58 <xmlStrEqual@plt+0x4ad18>
  4261ce:	mov    edi,0x3
  4261d3:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  4261d8:	mov    eax,ebx
  4261da:	pop    rbx
  4261db:	ret    
  4261dc:	nop    DWORD PTR [rax+0x0]
  4261e0:	mov    edx,0x4
  4261e5:	jmp    42619e <xmlStrEqual@plt+0x2225e>
  4261e7:	nop    WORD PTR [rax+rax*1+0x0]
  4261f0:	mov    rax,0x469e3c
  4261f7:	mov    ebx,0xffffffff
  4261fc:	cmp    DWORD PTR [rax],0x2
  4261ff:	jle    4261ba <xmlStrEqual@plt+0x2227a>
  426201:	lea    rsi,[rip+0x28b00]        # 44ed08 <xmlStrEqual@plt+0x4adc8>
  426208:	mov    edi,0x7
  42620d:	xor    eax,eax
  42620f:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  426214:	jmp    4261ba <xmlStrEqual@plt+0x2227a>
  426216:	nop    WORD PTR cs:[rax+rax*1+0x0]
  426220:	endbr64 
  426224:	push   rbp
  426225:	movzx  ebp,si
  426228:	push   rbx
  426229:	mov    rbx,rdx
  42622c:	sub    rsp,0x8
  426230:	cmp    si,0x1
  426234:	je     4262b0 <xmlStrEqual@plt+0x22370>
  426236:	cmp    si,0x2
  42623a:	je     426270 <xmlStrEqual@plt+0x22330>
  42623c:	movzx  edx,si
  42623f:	mov    edi,0x3
  426244:	lea    rsi,[rip+0x28af5]        # 44ed40 <xmlStrEqual@plt+0x4ae00>
  42624b:	xor    eax,eax
  42624d:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  426252:	mov    DWORD PTR [rbx],0x0
  426258:	mov    rbx,0x469e3c
  42625f:	cmp    DWORD PTR [rbx],0x2
  426262:	jg     4262c0 <xmlStrEqual@plt+0x22380>
  426264:	add    rsp,0x8
  426268:	pop    rbx
  426269:	mov    eax,0x2
  42626e:	pop    rbp
  42626f:	ret    
  426270:	mov    eax,0xa
  426275:	mov    DWORD PTR [rbx],eax
  426277:	cmp    si,0x1
  42627b:	jne    426290 <xmlStrEqual@plt+0x22350>
  42627d:	mov    eax,DWORD PTR [rdi+0x2]
  426280:	mov    DWORD PTR [rbx+0x4],eax
  426283:	add    rsp,0x8
  426287:	mov    eax,0x6
  42628c:	pop    rbx
  42628d:	pop    rbp
  42628e:	ret    
  42628f:	nop
  426290:	cmp    si,0x2
  426294:	jne    426258 <xmlStrEqual@plt+0x22318>
  426296:	vmovdqu xmm0,XMMWORD PTR [rdi+0x2]
  42629b:	mov    eax,0x12
  4262a0:	vmovups XMMWORD PTR [rbx+0x4],xmm0
  4262a5:	add    rsp,0x8
  4262a9:	pop    rbx
  4262aa:	pop    rbp
  4262ab:	ret    
  4262ac:	nop    DWORD PTR [rax+0x0]
  4262b0:	mov    eax,0x2
  4262b5:	jmp    426275 <xmlStrEqual@plt+0x22335>
  4262b7:	nop    WORD PTR [rax+rax*1+0x0]
  4262c0:	xor    eax,eax
  4262c2:	mov    edx,ebp
  4262c4:	lea    rsi,[rip+0x28aa5]        # 44ed70 <xmlStrEqual@plt+0x4ae30>
  4262cb:	mov    edi,0x7
  4262d0:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  4262d5:	cmp    DWORD PTR [rbx],0x2
  4262d8:	jle    426264 <xmlStrEqual@plt+0x22324>
  4262da:	mov    edx,ebp
  4262dc:	lea    rsi,[rip+0x28a8d]        # 44ed70 <xmlStrEqual@plt+0x4ae30>
  4262e3:	mov    edi,0x7
  4262e8:	xor    eax,eax
  4262ea:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  4262ef:	jmp    426264 <xmlStrEqual@plt+0x22324>
  4262f4:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4262ff:	nop
  426300:	endbr64 
  426304:	movzx  eax,BYTE PTR [rdi+0x14]
  426308:	ret    
  426309:	nop    DWORD PTR [rax+0x0]
  426310:	endbr64 
  426314:	mov    rax,rdi
  426317:	ret    
  426318:	nop    DWORD PTR [rax+rax*1+0x0]
  426320:	endbr64 
  426324:	mov    eax,DWORD PTR [rdi]
  426326:	ret    
  426327:	nop    WORD PTR [rax+rax*1+0x0]
  426330:	endbr64 
  426334:	test   rdi,rdi
  426337:	je     42634c <xmlStrEqual@plt+0x2240c>
  426339:	test   rsi,rsi
  42633c:	je     42634c <xmlStrEqual@plt+0x2240c>
  42633e:	vmovdqu xmm0,XMMWORD PTR [rsi]
  426342:	vmovups XMMWORD PTR [rdi],xmm0
  426346:	mov    eax,DWORD PTR [rsi+0x10]
  426349:	mov    DWORD PTR [rdi+0x10],eax
  42634c:	mov    BYTE PTR [rdi+0x14],dl
  42634f:	ret    
  426350:	endbr64 
  426354:	mov    BYTE PTR [rdi+0x14],sil
  426358:	ret    
  426359:	nop    DWORD PTR [rax+0x0]
  426360:	endbr64 
  426364:	test   esi,0xfffffffd
  42636a:	je     426371 <xmlStrEqual@plt+0x22431>
  42636c:	cmp    esi,0xa
  42636f:	jne    426378 <xmlStrEqual@plt+0x22438>
  426371:	mov    DWORD PTR [rdi],esi
  426373:	ret    
  426374:	nop    DWORD PTR [rax+0x0]
  426378:	mov    edx,esi
  42637a:	mov    edi,0x3
  42637f:	lea    rsi,[rip+0x28932]        # 44ecb8 <xmlStrEqual@plt+0x4ad78>
  426386:	xor    eax,eax
  426388:	jmp    430e20 <xmlStrEqual@plt+0x2cee0>
  42638d:	nop    DWORD PTR [rax]
  426390:	endbr64 
  426394:	movzx  eax,BYTE PTR [rsi+0x14]
  426398:	mov    BYTE PTR [rdi+0x14],al
  42639b:	vmovdqu xmm0,XMMWORD PTR [rsi]
  42639f:	vmovups XMMWORD PTR [rdi],xmm0
  4263a3:	mov    eax,DWORD PTR [rsi+0x10]
  4263a6:	mov    DWORD PTR [rdi+0x10],eax
  4263a9:	ret    
  4263aa:	nop    WORD PTR [rax+rax*1+0x0]
  4263b0:	endbr64 
  4263b4:	mov    eax,DWORD PTR [rip+0x4987e]        # 46fc38 <xmlStrEqual@plt+0x6bcf8>
  4263ba:	mov    edx,0xcccccccd
  4263bf:	lea    ecx,[rax+0x1]
  4263c2:	mov    eax,ecx
  4263c4:	mul    edx
  4263c6:	push   rbx
  4263c7:	lea    rbx,[rip+0x49692]        # 46fa60 <xmlStrEqual@plt+0x6bb20>
  4263ce:	shr    edx,0x3
  4263d1:	lea    eax,[rdx+rdx*4]
  4263d4:	add    eax,eax
  4263d6:	sub    ecx,eax
  4263d8:	mov    edx,ecx
  4263da:	mov    DWORD PTR [rip+0x49858],edx        # 46fc38 <xmlStrEqual@plt+0x6bcf8>
  4263e0:	imul   rdx,rdx,0x2f
  4263e4:	add    rbx,rdx
  4263e7:	mov    BYTE PTR [rbx],0x0
  4263ea:	cmp    esi,0x2
  4263ed:	je     426420 <xmlStrEqual@plt+0x224e0>
  4263ef:	cmp    esi,0xa
  4263f2:	jne    426410 <xmlStrEqual@plt+0x224d0>
  4263f4:	mov    rdx,rbx
  4263f7:	mov    rsi,rdi
  4263fa:	mov    ecx,0x2e
  4263ff:	mov    edi,0xa
  426404:	call   403b90 <inet_ntop@plt>
  426409:	mov    rax,rbx
  42640c:	pop    rbx
  42640d:	ret    
  42640e:	xchg   ax,ax
  426410:	xor    ebx,ebx
  426412:	mov    rax,rbx
  426415:	pop    rbx
  426416:	ret    
  426417:	nop    WORD PTR [rax+rax*1+0x0]
  426420:	mov    rdx,rbx
  426423:	mov    rsi,rdi
  426426:	mov    ecx,0x10
  42642b:	mov    edi,0x2
  426430:	call   403b90 <inet_ntop@plt>
  426435:	mov    rax,rbx
  426438:	pop    rbx
  426439:	ret    
  42643a:	nop    WORD PTR [rax+rax*1+0x0]
  426440:	endbr64 
  426444:	mov    rax,rdi
  426447:	mov    esi,DWORD PTR [rax]
  426449:	lea    rdi,[rdi+0x4]
  42644d:	jmp    4263b0 <xmlStrEqual@plt+0x22470>
  426452:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  42645d:	nop    DWORD PTR [rax]
  426460:	endbr64 
  426464:	push   rbp
  426465:	mov    edx,0xcccccccd
  42646a:	push   rbx
  42646b:	lea    rbx,[rip+0x497ce]        # 46fc40 <xmlStrEqual@plt+0x6bd00>
  426472:	sub    rsp,0x8
  426476:	mov    eax,DWORD PTR [rip+0x499c4]        # 46fe40 <xmlStrEqual@plt+0x6bf00>
  42647c:	lea    ecx,[rax+0x1]
  42647f:	mov    eax,ecx
  426481:	mul    edx
  426483:	shr    edx,0x3
  426486:	lea    eax,[rdx+rdx*4]
  426489:	add    eax,eax
  42648b:	sub    ecx,eax
  42648d:	mov    edx,ecx
  42648f:	mov    DWORD PTR [rip+0x499ab],edx        # 46fe40 <xmlStrEqual@plt+0x6bf00>
  426495:	imul   rdx,rdx,0x33
  426499:	mov    BYTE PTR [rbx+rdx*1],0x0
  42649d:	movzx  ebp,BYTE PTR [rdi+0x14]
  4264a1:	call   426440 <xmlStrEqual@plt+0x22500>
  4264a6:	mov    edi,DWORD PTR [rip+0x49994]        # 46fe40 <xmlStrEqual@plt+0x6bf00>
  4264ac:	mov    r8,rax
  4264af:	imul   rdi,rdi,0x33
  4264b3:	mov    r9d,ebp
  4264b6:	lea    rcx,[rip+0x289e2]        # 44ee9f <xmlStrEqual@plt+0x4af5f>
  4264bd:	add    rdi,rbx
  4264c0:	mov    rdx,0xffffffffffffffff
  4264c7:	mov    esi,0x1
  4264cc:	xor    eax,eax
  4264ce:	call   403a30 <__sprintf_chk@plt>
  4264d3:	mov    eax,DWORD PTR [rip+0x49967]        # 46fe40 <xmlStrEqual@plt+0x6bf00>
  4264d9:	add    rsp,0x8
  4264dd:	imul   rax,rax,0x33
  4264e1:	add    rax,rbx
  4264e4:	pop    rbx
  4264e5:	pop    rbp
  4264e6:	ret    
  4264e7:	nop    WORD PTR [rax+rax*1+0x0]
  4264f0:	endbr64 
  4264f4:	mov    eax,0x1
  4264f9:	cmp    di,0x2
  4264fd:	je     426530 <xmlStrEqual@plt+0x225f0>
  4264ff:	mov    eax,0x2
  426504:	cmp    di,0xa
  426508:	je     426530 <xmlStrEqual@plt+0x225f0>
  42650a:	sub    rsp,0x8
  42650e:	movzx  edx,di
  426511:	xor    eax,eax
  426513:	lea    rsi,[rip+0x2876e]        # 44ec88 <xmlStrEqual@plt+0x4ad48>
  42651a:	mov    edi,0x3
  42651f:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  426524:	xor    eax,eax
  426526:	add    rsp,0x8
  42652a:	ret    
  42652b:	nop    DWORD PTR [rax+rax*1+0x0]
  426530:	ret    
  426531:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  42653c:	nop    DWORD PTR [rax+0x0]
  426540:	endbr64 
  426544:	mov    eax,0x2
  426549:	cmp    di,0x1
  42654d:	je     426580 <xmlStrEqual@plt+0x22640>
  42654f:	mov    eax,0xa
  426554:	cmp    di,0x2
  426558:	je     426580 <xmlStrEqual@plt+0x22640>
  42655a:	sub    rsp,0x8
  42655e:	movzx  edx,di
  426561:	xor    eax,eax
  426563:	lea    rsi,[rip+0x287d6]        # 44ed40 <xmlStrEqual@plt+0x4ae00>
  42656a:	mov    edi,0x3
  42656f:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  426574:	xor    eax,eax
  426576:	add    rsp,0x8
  42657a:	ret    
  42657b:	nop    DWORD PTR [rax+rax*1+0x0]
  426580:	ret    
  426581:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  42658c:	nop    DWORD PTR [rax+0x0]
  426590:	endbr64 
  426594:	mov    eax,0x4
  426599:	cmp    di,0x2
  42659d:	je     4265d0 <xmlStrEqual@plt+0x22690>
  42659f:	mov    eax,0x10
  4265a4:	cmp    di,0xa
  4265a8:	je     4265d0 <xmlStrEqual@plt+0x22690>
  4265aa:	sub    rsp,0x8
  4265ae:	movzx  edx,di
  4265b1:	xor    eax,eax
  4265b3:	lea    rsi,[rip+0x2869e]        # 44ec58 <xmlStrEqual@plt+0x4ad18>
  4265ba:	mov    edi,0x3
  4265bf:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  4265c4:	xor    eax,eax
  4265c6:	add    rsp,0x8
  4265ca:	ret    
  4265cb:	nop    DWORD PTR [rax+rax*1+0x0]
  4265d0:	ret    
  4265d1:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4265dc:	nop    DWORD PTR [rax+0x0]
  4265e0:	endbr64 
  4265e4:	push   rbx
  4265e5:	mov    ebx,0x14
  4265ea:	cmp    edi,0x2
  4265ed:	je     42660a <xmlStrEqual@plt+0x226ca>
  4265ef:	mov    ebx,0x28
  4265f4:	cmp    edi,0xa
  4265f7:	je     42660a <xmlStrEqual@plt+0x226ca>
  4265f9:	mov    rax,0x469e3c
  426600:	mov    ebx,0xfffffffe
  426605:	cmp    DWORD PTR [rax],0x1
  426608:	jg     426610 <xmlStrEqual@plt+0x226d0>
  42660a:	mov    eax,ebx
  42660c:	pop    rbx
  42660d:	ret    
  42660e:	xchg   ax,ax
  426610:	mov    edx,edi
  426612:	xor    eax,eax
  426614:	lea    rsi,[rip+0x2877d]        # 44ed98 <xmlStrEqual@plt+0x4ae58>
  42661b:	mov    edi,0x6
  426620:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  426625:	mov    eax,ebx
  426627:	pop    rbx
  426628:	ret    
  426629:	nop    DWORD PTR [rax+0x0]
  426630:	endbr64 
  426634:	push   rbx
  426635:	mov    ebx,0x4
  42663a:	cmp    di,0x1
  42663e:	je     426659 <xmlStrEqual@plt+0x22719>
  426640:	mov    ebx,0x10
  426645:	cmp    di,0x2
  426649:	je     426659 <xmlStrEqual@plt+0x22719>
  42664b:	mov    rax,0x469e3c
  426652:	xor    ebx,ebx
  426654:	cmp    DWORD PTR [rax],0x2
  426657:	jg     426660 <xmlStrEqual@plt+0x22720>
  426659:	mov    eax,ebx
  42665b:	pop    rbx
  42665c:	ret    
  42665d:	nop    DWORD PTR [rax]
  426660:	movzx  edx,di
  426663:	xor    eax,eax
  426665:	lea    rsi,[rip+0x28704]        # 44ed70 <xmlStrEqual@plt+0x4ae30>
  42666c:	mov    edi,0x7
  426671:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  426676:	mov    eax,ebx
  426678:	pop    rbx
  426679:	ret    
  42667a:	nop    WORD PTR [rax+rax*1+0x0]
  426680:	endbr64 
  426684:	mov    eax,DWORD PTR [rdi]
  426686:	cmp    eax,0x2
  426689:	je     4266c8 <xmlStrEqual@plt+0x22788>
  42668b:	cmp    eax,0xa
  42668e:	mov    eax,0x0
  426693:	jne    4266c0 <xmlStrEqual@plt+0x22780>
  426695:	mov    r8d,DWORD PTR [rdi+0x4]
  426699:	test   r8d,r8d
  42669c:	jne    4266b6 <xmlStrEqual@plt+0x22776>
  42669e:	mov    esi,DWORD PTR [rdi+0x8]
  4266a1:	test   esi,esi
  4266a3:	jne    4266b6 <xmlStrEqual@plt+0x22776>
  4266a5:	mov    ecx,DWORD PTR [rdi+0xc]
  4266a8:	test   ecx,ecx
  4266aa:	jne    4266b6 <xmlStrEqual@plt+0x22776>
  4266ac:	mov    edx,DWORD PTR [rdi+0x10]
  4266af:	xor    eax,eax
  4266b1:	test   edx,edx
  4266b3:	sete   al
  4266b6:	ret    
  4266b7:	nop    WORD PTR [rax+rax*1+0x0]
  4266c0:	ret    
  4266c1:	nop    DWORD PTR [rax+0x0]
  4266c8:	mov    r9d,DWORD PTR [rdi+0x4]
  4266cc:	xor    eax,eax
  4266ce:	test   r9d,r9d
  4266d1:	sete   al
  4266d4:	ret    
  4266d5:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4266e0:	endbr64 
  4266e4:	movbe  eax,DWORD PTR [rdi]
  4266e8:	add    eax,0x20000000
  4266ed:	cmp    eax,0xfffffff
  4266f2:	setbe  al
  4266f5:	ret    
  4266f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  426700:	endbr64 
  426704:	cmp    BYTE PTR [rdi],0xff
  426707:	sete   al
  42670a:	ret    
  42670b:	nop    DWORD PTR [rax+rax*1+0x0]
  426710:	endbr64 
  426714:	cmp    esi,0x2
  426717:	je     426750 <xmlStrEqual@plt+0x22810>
  426719:	cmp    esi,0xa
  42671c:	jne    426728 <xmlStrEqual@plt+0x227e8>
  42671e:	jmp    426700 <xmlStrEqual@plt+0x227c0>
  426723:	nop    DWORD PTR [rax+rax*1+0x0]
  426728:	sub    rsp,0x8
  42672c:	mov    edx,esi
  42672e:	xor    eax,eax
  426730:	lea    rsi,[rip+0x28689]        # 44edc0 <xmlStrEqual@plt+0x4ae80>
  426737:	mov    edi,0x3
  42673c:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  426741:	xor    eax,eax
  426743:	add    rsp,0x8
  426747:	ret    
  426748:	nop    DWORD PTR [rax+rax*1+0x0]
  426750:	jmp    4266e0 <xmlStrEqual@plt+0x227a0>
  426755:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  426760:	endbr64 
  426764:	mov    rax,rdi
  426767:	mov    esi,DWORD PTR [rax]
  426769:	lea    rdi,[rdi+0x4]
  42676d:	jmp    426710 <xmlStrEqual@plt+0x227d0>
  426772:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  42677d:	nop    DWORD PTR [rax]
  426780:	endbr64 
  426784:	mov    eax,0x2
  426789:	cmp    dil,0x4
  42678d:	je     4267a0 <xmlStrEqual@plt+0x22860>
  42678f:	cmp    dil,0x6
  426793:	mov    eax,0xa
  426798:	mov    edx,0x0
  42679d:	cmovne eax,edx
  4267a0:	ret    
  4267a1:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4267ac:	nop    DWORD PTR [rax+0x0]
  4267b0:	endbr64 
  4267b4:	mov    eax,0x20
  4267b9:	cmp    edi,0x2
  4267bc:	je     4267c9 <xmlStrEqual@plt+0x22889>
  4267be:	xor    eax,eax
  4267c0:	cmp    edi,0xa
  4267c3:	sete   al
  4267c6:	shl    eax,0x7
  4267c9:	ret    
  4267ca:	nop    WORD PTR [rax+rax*1+0x0]
  4267d0:	endbr64 
  4267d4:	sub    rsp,0x8
  4267d8:	mov    edi,DWORD PTR [rdi]
  4267da:	call   4267b0 <xmlStrEqual@plt+0x22870>
  4267df:	add    rsp,0x8
  4267e3:	ret    
  4267e4:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4267ef:	nop
  4267f0:	endbr64 
  4267f4:	push   rbx
  4267f5:	mov    rbx,rdi
  4267f8:	sub    rsp,0x10
  4267fc:	mov    rax,QWORD PTR fs:0x28
  426805:	mov    QWORD PTR [rsp+0x8],rax
  42680a:	xor    eax,eax
  42680c:	mov    DWORD PTR [rsp],0x0
  426813:	mov    DWORD PTR [rsp+0x4],0x0
  42681b:	cmp    esi,0x2
  42681e:	je     426850 <xmlStrEqual@plt+0x22910>
  426820:	cmp    esi,0xa
  426823:	jne    426834 <xmlStrEqual@plt+0x228f4>
  426825:	mov    eax,DWORD PTR [rdi]
  426827:	and    eax,0xc0ff
  42682c:	cmp    eax,0x80fe
  426831:	sete   al
  426834:	mov    rcx,QWORD PTR [rsp+0x8]
  426839:	xor    rcx,QWORD PTR fs:0x28
  426842:	jne    426888 <xmlStrEqual@plt+0x22948>
  426844:	add    rsp,0x10
  426848:	pop    rbx
  426849:	ret    
  42684a:	nop    WORD PTR [rax+rax*1+0x0]
  426850:	mov    rdx,rsp
  426853:	lea    rsi,[rip+0x2864b]        # 44eea5 <xmlStrEqual@plt+0x4af65>
  42685a:	mov    edi,0x2
  42685f:	call   403f20 <inet_pton@plt>
  426864:	lea    rdx,[rsp+0x4]
  426869:	lea    rsi,[rip+0x28641]        # 44eeb1 <xmlStrEqual@plt+0x4af71>
  426870:	mov    edi,0x2
  426875:	call   403f20 <inet_pton@plt>
  42687a:	mov    eax,DWORD PTR [rbx]
  42687c:	and    eax,DWORD PTR [rsp+0x4]
  426880:	cmp    eax,DWORD PTR [rsp]
  426883:	sete   al
  426886:	jmp    426834 <xmlStrEqual@plt+0x228f4>
  426888:	call   403c00 <__stack_chk_fail@plt>
  42688d:	nop    DWORD PTR [rax]
  426890:	endbr64 
  426894:	sub    rsp,0x8
  426898:	mov    rax,rdi
  42689b:	mov    esi,DWORD PTR [rax]
  42689d:	lea    rdi,[rdi+0x4]
  4268a1:	call   4267f0 <xmlStrEqual@plt+0x228b0>
  4268a6:	movzx  eax,al
  4268a9:	add    rsp,0x8
  4268ad:	ret    
  4268ae:	xchg   ax,ax
  4268b0:	endbr64 
  4268b4:	push   rbx
  4268b5:	mov    ebx,0x14
  4268ba:	cmp    edi,0x4
  4268bd:	je     4268d7 <xmlStrEqual@plt+0x22997>
  4268bf:	mov    ebx,0x28
  4268c4:	cmp    edi,0x6
  4268c7:	je     4268d7 <xmlStrEqual@plt+0x22997>
  4268c9:	mov    rax,0x469e3c
  4268d0:	xor    ebx,ebx
  4268d2:	cmp    DWORD PTR [rax],0x1
  4268d5:	jg     4268e0 <xmlStrEqual@plt+0x229a0>
  4268d7:	mov    eax,ebx
  4268d9:	pop    rbx
  4268da:	ret    
  4268db:	nop    DWORD PTR [rax+rax*1+0x0]
  4268e0:	mov    edx,edi
  4268e2:	xor    eax,eax
  4268e4:	lea    rsi,[rip+0x284fd]        # 44ede8 <xmlStrEqual@plt+0x4aea8>
  4268eb:	mov    edi,0x6
  4268f0:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  4268f5:	mov    eax,ebx
  4268f7:	pop    rbx
  4268f8:	ret    
  4268f9:	nop    DWORD PTR [rax+0x0]
  426900:	endbr64 
  426904:	sub    rsp,0x8
  426908:	mov    esi,0x3a
  42690d:	call   403930 <strchr@plt>
  426912:	cmp    rax,0x1
  426916:	sbb    eax,eax
  426918:	and    eax,0xfffffff8
  42691b:	add    eax,0xa
  42691e:	add    rsp,0x8
  426922:	ret    
  426923:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  42692e:	xchg   ax,ax
  426930:	endbr64 
  426934:	push   r12
  426936:	mov    r12,rsi
  426939:	push   rbp
  42693a:	push   rbx
  42693b:	mov    rbx,rdi
  42693e:	call   426900 <xmlStrEqual@plt+0x229c0>
  426943:	mov    edi,eax
  426945:	mov    rsi,rbx
  426948:	lea    rdx,[r12+0x4]
  42694d:	mov    ebp,eax
  42694f:	call   403f20 <inet_pton@plt>
  426954:	xor    ebx,ebx
  426956:	cmp    eax,0x1
  426959:	je     426968 <xmlStrEqual@plt+0x22a28>
  42695b:	mov    eax,ebx
  42695d:	pop    rbx
  42695e:	pop    rbp
  42695f:	pop    r12
  426961:	ret    
  426962:	nop    WORD PTR [rax+rax*1+0x0]
  426968:	mov    ebx,eax
  42696a:	test   ebp,0xfffffffd
  426970:	je     426977 <xmlStrEqual@plt+0x22a37>
  426972:	cmp    ebp,0xa
  426975:	jne    426988 <xmlStrEqual@plt+0x22a48>
  426977:	mov    eax,ebx
  426979:	pop    rbx
  42697a:	mov    DWORD PTR [r12],ebp
  42697e:	pop    rbp
  42697f:	pop    r12
  426981:	ret    
  426982:	nop    WORD PTR [rax+rax*1+0x0]
  426988:	mov    edx,ebp
  42698a:	lea    rsi,[rip+0x28327]        # 44ecb8 <xmlStrEqual@plt+0x4ad78>
  426991:	mov    edi,0x3
  426996:	xor    eax,eax
  426998:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  42699d:	jmp    42695b <xmlStrEqual@plt+0x22a1b>
  42699f:	nop
  4269a0:	endbr64 
  4269a4:	push   r13
  4269a6:	mov    r13,rdi
  4269a9:	push   r12
  4269ab:	mov    r12,rsi
  4269ae:	push   rbp
  4269af:	push   rbx
  4269b0:	sub    rsp,0x8
  4269b4:	call   403ed0 <strdup@plt>
  4269b9:	mov    rdi,rax
  4269bc:	lea    rsi,[rip+0x284fa]        # 44eebd <xmlStrEqual@plt+0x4af7d>
  4269c3:	mov    rbp,rax
  4269c6:	call   403db0 <strtok@plt>
  4269cb:	test   rax,rax
  4269ce:	je     426a58 <xmlStrEqual@plt+0x22b18>
  4269d4:	mov    rsi,r12
  4269d7:	mov    rdi,rax
  4269da:	call   426930 <xmlStrEqual@plt+0x229f0>
  4269df:	mov    ebx,eax
  4269e1:	test   eax,eax
  4269e3:	je     426a40 <xmlStrEqual@plt+0x22b00>
  4269e5:	xor    edi,edi
  4269e7:	lea    rsi,[rip+0x284cf]        # 44eebd <xmlStrEqual@plt+0x4af7d>
  4269ee:	call   403db0 <strtok@plt>
  4269f3:	test   rax,rax
  4269f6:	je     426ac8 <xmlStrEqual@plt+0x22b88>
  4269fc:	xor    esi,esi
  4269fe:	mov    edx,0xa
  426a03:	mov    rdi,rax
  426a06:	call   403d20 <strtol@plt>
  426a0b:	mov    rdi,rbp
  426a0e:	mov    rbx,rax
  426a11:	call   4037b0 <free@plt>
  426a16:	cmp    DWORD PTR [r12],0x2
  426a1b:	je     426a98 <xmlStrEqual@plt+0x22b58>
  426a1d:	cmp    ebx,0x80
  426a23:	ja     426a9d <xmlStrEqual@plt+0x22b5d>
  426a25:	mov    BYTE PTR [r12+0x14],bl
  426a2a:	add    rsp,0x8
  426a2e:	mov    ebx,0x1
  426a33:	mov    eax,ebx
  426a35:	pop    rbx
  426a36:	pop    rbp
  426a37:	pop    r12
  426a39:	pop    r13
  426a3b:	ret    
  426a3c:	nop    DWORD PTR [rax+0x0]
  426a40:	mov    rdi,rbp
  426a43:	call   4037b0 <free@plt>
  426a48:	add    rsp,0x8
  426a4c:	mov    eax,ebx
  426a4e:	pop    rbx
  426a4f:	pop    rbp
  426a50:	pop    r12
  426a52:	pop    r13
  426a54:	ret    
  426a55:	nop    DWORD PTR [rax]
  426a58:	mov    rax,0x469e3c
  426a5f:	mov    edx,DWORD PTR [rax]
  426a61:	test   edx,edx
  426a63:	jle    426a7b <xmlStrEqual@plt+0x22b3b>
  426a65:	mov    rdx,r13
  426a68:	lea    rsi,[rip+0x283a9]        # 44ee18 <xmlStrEqual@plt+0x4aed8>
  426a6f:	mov    edi,0x5
  426a74:	xor    eax,eax
  426a76:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  426a7b:	mov    rdi,rbp
  426a7e:	call   4037b0 <free@plt>
  426a83:	xor    ebx,ebx
  426a85:	add    rsp,0x8
  426a89:	mov    eax,ebx
  426a8b:	pop    rbx
  426a8c:	pop    rbp
  426a8d:	pop    r12
  426a8f:	pop    r13
  426a91:	ret    
  426a92:	nop    WORD PTR [rax+rax*1+0x0]
  426a98:	cmp    ebx,0x20
  426a9b:	jbe    426a25 <xmlStrEqual@plt+0x22ae5>
  426a9d:	mov    rax,0x469e3c
  426aa4:	xor    ebx,ebx
  426aa6:	cmp    DWORD PTR [rax],0x1
  426aa9:	jle    426a48 <xmlStrEqual@plt+0x22b08>
  426aab:	mov    rdx,r13
  426aae:	lea    rsi,[rip+0x283c3]        # 44ee78 <xmlStrEqual@plt+0x4af38>
  426ab5:	mov    edi,0x6
  426aba:	xor    eax,eax
  426abc:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  426ac1:	jmp    426a48 <xmlStrEqual@plt+0x22b08>
  426ac3:	nop    DWORD PTR [rax+rax*1+0x0]
  426ac8:	mov    rax,0x469e3c
  426acf:	mov    eax,DWORD PTR [rax]
  426ad1:	test   eax,eax
  426ad3:	jle    426a7b <xmlStrEqual@plt+0x22b3b>
  426ad5:	call   4037f0 <__errno_location@plt>
  426ada:	mov    edi,DWORD PTR [rax]
  426adc:	call   403910 <strerror@plt>
  426ae1:	mov    rdx,rax
  426ae4:	lea    rsi,[rip+0x2836d]        # 44ee58 <xmlStrEqual@plt+0x4af18>
  426aeb:	mov    edi,0x5
  426af0:	xor    eax,eax
  426af2:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  426af7:	jmp    426a7b <xmlStrEqual@plt+0x22b3b>
  426af9:	nop    DWORD PTR [rax+0x0]
  426b00:	endbr64 
  426b04:	push   rbx
  426b05:	mov    rbx,rdi
  426b08:	mov    rdi,QWORD PTR [rdi+0x8]
  426b0c:	call   424bf0 <xmlStrEqual@plt+0x20cb0>
  426b11:	mov    rdi,rbx
  426b14:	pop    rbx
  426b15:	jmp    4037b0 <free@plt>
  426b1a:	nop    WORD PTR [rax+rax*1+0x0]
  426b20:	endbr64 
  426b24:	push   rbx
  426b25:	mov    rbx,rdi
  426b28:	mov    rdi,QWORD PTR [rdi]
  426b2b:	call   424bf0 <xmlStrEqual@plt+0x20cb0>
  426b30:	mov    rdi,rbx
  426b33:	pop    rbx
  426b34:	jmp    4037b0 <free@plt>
  426b39:	nop    DWORD PTR [rax+0x0]
  426b40:	endbr64 
  426b44:	push   rbx
  426b45:	mov    rbx,rdi
  426b48:	mov    rdi,QWORD PTR [rdi+0x10]
  426b4c:	call   424bf0 <xmlStrEqual@plt+0x20cb0>
  426b51:	mov    rdi,rbx
  426b54:	pop    rbx
  426b55:	jmp    4037b0 <free@plt>
  426b5a:	nop    WORD PTR [rax+rax*1+0x0]
  426b60:	endbr64 
  426b64:	push   r13
  426b66:	push   r12
  426b68:	push   rbp
  426b69:	push   rbx
  426b6a:	sub    rsp,0x8
  426b6e:	mov    rax,QWORD PTR [rdi]
  426b71:	mov    r8d,DWORD PTR [rax+0x18]
  426b75:	test   r8d,r8d
  426b78:	je     426c10 <xmlStrEqual@plt+0x22cd0>
  426b7e:	mov    rdx,QWORD PTR [rsi]
  426b81:	mov    rbx,QWORD PTR [rax+0x8]
  426b85:	mov    ecx,DWORD PTR [rdx+0x18]
  426b88:	test   ecx,ecx
  426b8a:	je     426bf8 <xmlStrEqual@plt+0x22cb8>
  426b8c:	mov    rbp,QWORD PTR [rdx+0x8]
  426b90:	cmp    rbx,rax
  426b93:	je     426bff <xmlStrEqual@plt+0x22cbf>
  426b95:	cmp    rdx,rbp
  426b98:	je     426bff <xmlStrEqual@plt+0x22cbf>
  426b9a:	mov    r13,rsi
  426b9d:	mov    r12,rdi
  426ba0:	jmp    426bcb <xmlStrEqual@plt+0x22c8b>
  426ba2:	nop    WORD PTR [rax+rax*1+0x0]
  426ba8:	mov    rsi,QWORD PTR [rax]
  426bab:	mov    rdi,QWORD PTR [rdx]
  426bae:	call   425310 <xmlStrEqual@plt+0x213d0>
  426bb3:	test   eax,eax
  426bb5:	jne    426bea <xmlStrEqual@plt+0x22caa>
  426bb7:	mov    rbx,QWORD PTR [rbx+0x8]
  426bbb:	mov    rbp,QWORD PTR [rbp+0x8]
  426bbf:	cmp    rbx,QWORD PTR [r12]
  426bc3:	je     426bff <xmlStrEqual@plt+0x22cbf>
  426bc5:	cmp    rbp,QWORD PTR [r13+0x0]
  426bc9:	je     426bff <xmlStrEqual@plt+0x22cbf>
  426bcb:	mov    rdx,QWORD PTR [rbx+0x10]
  426bcf:	mov    rax,QWORD PTR [rbp+0x10]
  426bd3:	movzx  esi,BYTE PTR [rdx+0x8]
  426bd7:	movzx  ecx,BYTE PTR [rax+0x8]
  426bdb:	cmp    sil,cl
  426bde:	je     426ba8 <xmlStrEqual@plt+0x22c68>
  426be0:	xor    eax,eax
  426be2:	cmp    sil,cl
  426be5:	setae  al
  426be8:	inc    eax
  426bea:	add    rsp,0x8
  426bee:	pop    rbx
  426bef:	pop    rbp
  426bf0:	pop    r12
  426bf2:	pop    r13
  426bf4:	ret    
  426bf5:	nop    DWORD PTR [rax]
  426bf8:	xor    ebp,ebp
  426bfa:	cmp    rbx,rax
  426bfd:	jne    426b9a <xmlStrEqual@plt+0x22c5a>
  426bff:	add    rsp,0x8
  426c03:	pop    rbx
  426c04:	pop    rbp
  426c05:	pop    r12
  426c07:	xor    eax,eax
  426c09:	pop    r13
  426c0b:	ret    
  426c0c:	nop    DWORD PTR [rax+0x0]
  426c10:	mov    rdx,QWORD PTR [rsi]
  426c13:	mov    eax,DWORD PTR [rdx+0x18]
  426c16:	test   eax,eax
  426c18:	je     426c25 <xmlStrEqual@plt+0x22ce5>
  426c1a:	mov    rbp,QWORD PTR [rdx+0x8]
  426c1e:	xor    ebx,ebx
  426c20:	jmp    426b95 <xmlStrEqual@plt+0x22c55>
  426c25:	xor    ebx,ebx
  426c27:	xor    ebp,ebp
  426c29:	jmp    426b9a <xmlStrEqual@plt+0x22c5a>
  426c2e:	xchg   ax,ax
  426c30:	endbr64 
  426c34:	mov    rsi,QWORD PTR [rsi]
  426c37:	mov    rdx,QWORD PTR [rdi]
  426c3a:	mov    ecx,DWORD PTR [rsi+0x18]
  426c3d:	mov    eax,0x1
  426c42:	cmp    DWORD PTR [rdx+0x18],ecx
  426c45:	jg     426ca0 <xmlStrEqual@plt+0x22d60>
  426c47:	mov    eax,0x2
  426c4c:	jl     426ca0 <xmlStrEqual@plt+0x22d60>
  426c4e:	push   r12
  426c50:	push   rbp
  426c51:	push   rbx
  426c52:	test   ecx,ecx
  426c54:	je     426ca8 <xmlStrEqual@plt+0x22d68>
  426c56:	mov    rbp,QWORD PTR [rsi+0x8]
  426c5a:	mov    rbx,QWORD PTR [rdx+0x8]
  426c5e:	mov    r12,rdi
  426c61:	cmp    rdx,rbx
  426c64:	jne    426c7e <xmlStrEqual@plt+0x22d3e>
  426c66:	jmp    426c98 <xmlStrEqual@plt+0x22d58>
  426c68:	nop    DWORD PTR [rax+rax*1+0x0]
  426c70:	mov    rbx,QWORD PTR [rbx+0x8]
  426c74:	mov    rbp,QWORD PTR [rbp+0x8]
  426c78:	cmp    QWORD PTR [r12],rbx
  426c7c:	je     426c98 <xmlStrEqual@plt+0x22d58>
  426c7e:	mov    rsi,QWORD PTR [rbp+0x10]
  426c82:	mov    rdi,QWORD PTR [rbx+0x10]
  426c86:	call   425310 <xmlStrEqual@plt+0x213d0>
  426c8b:	test   eax,eax
  426c8d:	je     426c70 <xmlStrEqual@plt+0x22d30>
  426c8f:	pop    rbx
  426c90:	pop    rbp
  426c91:	pop    r12
  426c93:	ret    
  426c94:	nop    DWORD PTR [rax+0x0]
  426c98:	pop    rbx
  426c99:	pop    rbp
  426c9a:	xor    eax,eax
  426c9c:	pop    r12
  426c9e:	ret    
  426c9f:	nop
  426ca0:	ret    
  426ca1:	nop    DWORD PTR [rax+0x0]
  426ca8:	xor    ebp,ebp
  426caa:	jmp    426c5a <xmlStrEqual@plt+0x22d1a>
  426cac:	nop    DWORD PTR [rax+0x0]
  426cb0:	endbr64 
  426cb4:	push   r12
  426cb6:	mov    r12,rdi
  426cb9:	push   rbp
  426cba:	push   rbx
  426cbb:	mov    rdi,QWORD PTR [rdi+0x8]
  426cbf:	call   424cc0 <xmlStrEqual@plt+0x20d80>
  426cc4:	mov    rdi,QWORD PTR [r12+0x18]
  426cc9:	mov    ebx,eax
  426ccb:	call   424cc0 <xmlStrEqual@plt+0x20d80>
  426cd0:	mov    rdi,QWORD PTR [r12+0x20]
  426cd5:	lea    ebp,[rbx+rax*1+0xc]
  426cd9:	call   424cc0 <xmlStrEqual@plt+0x20d80>
  426cde:	add    ebp,eax
  426ce0:	mov    rax,QWORD PTR [r12+0x28]
  426ce5:	mov    rbx,QWORD PTR [rax+0x8]
  426ce9:	cmp    rax,rbx
  426cec:	je     426d06 <xmlStrEqual@plt+0x22dc6>
  426cee:	xchg   ax,ax
  426cf0:	mov    rdi,QWORD PTR [rbx+0x10]
  426cf4:	call   424cc0 <xmlStrEqual@plt+0x20d80>
  426cf9:	mov    rbx,QWORD PTR [rbx+0x8]
  426cfd:	add    ebp,eax
  426cff:	cmp    QWORD PTR [r12+0x28],rbx
  426d04:	jne    426cf0 <xmlStrEqual@plt+0x22db0>
  426d06:	pop    rbx
  426d07:	mov    eax,ebp
  426d09:	pop    rbp
  426d0a:	pop    r12
  426d0c:	ret    
  426d0d:	nop    DWORD PTR [rax]
  426d10:	endbr64 
  426d14:	push   r12
  426d16:	push   rbp
  426d17:	push   rbx
  426d18:	mov    rax,QWORD PTR [rdi]
  426d1b:	mov    rbx,QWORD PTR [rax+0x8]
  426d1f:	cmp    rax,rbx
  426d22:	je     426d58 <xmlStrEqual@plt+0x22e18>
  426d24:	mov    r12,rdi
  426d27:	mov    ebp,0x8
  426d2c:	nop    DWORD PTR [rax+0x0]
  426d30:	mov    rax,QWORD PTR [rbx+0x10]
  426d34:	mov    rdi,QWORD PTR [rax+0x8]
  426d38:	call   424cc0 <xmlStrEqual@plt+0x20d80>
  426d3d:	mov    rbx,QWORD PTR [rbx+0x8]
  426d41:	lea    ebp,[rax+rbp*1+0x2]
  426d45:	cmp    QWORD PTR [r12],rbx
  426d49:	jne    426d30 <xmlStrEqual@plt+0x22df0>
  426d4b:	pop    rbx
  426d4c:	mov    eax,ebp
  426d4e:	pop    rbp
  426d4f:	pop    r12
  426d51:	ret    
  426d52:	nop    WORD PTR [rax+rax*1+0x0]
  426d58:	pop    rbx
  426d59:	pop    rbp
  426d5a:	mov    eax,0x8
  426d5f:	pop    r12
  426d61:	ret    
  426d62:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  426d6d:	nop    DWORD PTR [rax]
  426d70:	endbr64 
  426d74:	push   r12
  426d76:	push   rbp
  426d77:	push   rbx
  426d78:	mov    rax,QWORD PTR [rdi]
  426d7b:	mov    rbx,QWORD PTR [rax+0x8]
  426d7f:	cmp    rax,rbx
  426d82:	je     426db8 <xmlStrEqual@plt+0x22e78>
  426d84:	mov    r12,rdi
  426d87:	mov    ebp,0x8
  426d8c:	nop    DWORD PTR [rax+0x0]
  426d90:	mov    rax,QWORD PTR [rbx+0x10]
  426d94:	mov    rdi,QWORD PTR [rax]
  426d97:	call   424cc0 <xmlStrEqual@plt+0x20d80>
  426d9c:	mov    rbx,QWORD PTR [rbx+0x8]
  426da0:	lea    ebp,[rax+rbp*1+0x4]
  426da4:	cmp    QWORD PTR [r12],rbx
  426da8:	jne    426d90 <xmlStrEqual@plt+0x22e50>
  426daa:	pop    rbx
  426dab:	mov    eax,ebp
  426dad:	pop    rbp
  426dae:	pop    r12
  426db0:	ret    
  426db1:	nop    DWORD PTR [rax+0x0]
  426db8:	pop    rbx
  426db9:	pop    rbp
  426dba:	mov    eax,0x8
  426dbf:	pop    r12
  426dc1:	ret    
  426dc2:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  426dcd:	nop    DWORD PTR [rax]
  426dd0:	endbr64 
  426dd4:	push   r12
  426dd6:	push   rbp
  426dd7:	push   rbx
  426dd8:	mov    rax,QWORD PTR [rdi]
  426ddb:	mov    rbx,QWORD PTR [rax+0x8]
  426ddf:	cmp    rax,rbx
  426de2:	je     426e10 <xmlStrEqual@plt+0x22ed0>
  426de4:	mov    r12,rdi
  426de7:	mov    ebp,0x8
  426dec:	nop    DWORD PTR [rax+0x0]
  426df0:	mov    rdi,QWORD PTR [rbx+0x10]
  426df4:	call   424cc0 <xmlStrEqual@plt+0x20d80>
  426df9:	mov    rbx,QWORD PTR [rbx+0x8]
  426dfd:	add    ebp,eax
  426dff:	cmp    QWORD PTR [r12],rbx
  426e03:	jne    426df0 <xmlStrEqual@plt+0x22eb0>
  426e05:	pop    rbx
  426e06:	mov    eax,ebp
  426e08:	pop    rbp
  426e09:	pop    r12
  426e0b:	ret    
  426e0c:	nop    DWORD PTR [rax+0x0]
  426e10:	mov    ebp,0x8
  426e15:	pop    rbx
  426e16:	mov    eax,ebp
  426e18:	pop    rbp
  426e19:	pop    r12
  426e1b:	ret    
  426e1c:	nop    DWORD PTR [rax+0x0]
  426e20:	endbr64 
  426e24:	push   r14
  426e26:	mov    eax,0x7
  426e2b:	mov    r14,rdi
  426e2e:	push   r13
  426e30:	mov    r13,rsi
  426e33:	push   r12
  426e35:	push   rbp
  426e36:	lea    rbp,[rdi+0xc]
  426e3a:	push   rbx
  426e3b:	mov    DWORD PTR [rdi],0x340
  426e41:	mov    WORD PTR [rdi+0x4],ax
  426e45:	movbe  ax,WORD PTR [rsi+0x10]
  426e4b:	mov    WORD PTR [rdi+0x8],ax
  426e4f:	movbe  ax,WORD PTR [rsi]
  426e54:	mov    rsi,QWORD PTR [rsi+0x8]
  426e58:	mov    WORD PTR [rdi+0xa],ax
  426e5c:	mov    rdi,rbp
  426e5f:	call   425190 <xmlStrEqual@plt+0x21250>
  426e64:	test   eax,eax
  426e66:	jne    426e78 <xmlStrEqual@plt+0x22f38>
  426e68:	xor    eax,eax
  426e6a:	pop    rbx
  426e6b:	pop    rbp
  426e6c:	pop    r12
  426e6e:	pop    r13
  426e70:	pop    r14
  426e72:	ret    
  426e73:	nop    DWORD PTR [rax+rax*1+0x0]
  426e78:	mov    ebx,eax
  426e7a:	mov    eax,eax
  426e7c:	add    rbp,rax
  426e7f:	mov    rsi,QWORD PTR [r13+0x18]
  426e83:	mov    rdi,rbp
  426e86:	call   425190 <xmlStrEqual@plt+0x21250>
  426e8b:	mov    r12d,eax
  426e8e:	test   eax,eax
  426e90:	je     426e68 <xmlStrEqual@plt+0x22f28>
  426e92:	mov    eax,eax
  426e94:	add    rbp,rax
  426e97:	mov    rsi,QWORD PTR [r13+0x20]
  426e9b:	mov    rdi,rbp
  426e9e:	call   425190 <xmlStrEqual@plt+0x21250>
  426ea3:	test   eax,eax
  426ea5:	je     426e68 <xmlStrEqual@plt+0x22f28>
  426ea7:	lea    r12d,[rbx+r12*1+0xc]
  426eac:	add    r12d,eax
  426eaf:	mov    eax,eax
  426eb1:	add    rbp,rax
  426eb4:	mov    rax,QWORD PTR [r13+0x28]
  426eb8:	mov    rbx,QWORD PTR [rax+0x8]
  426ebc:	cmp    rax,rbx
  426ebf:	jne    426eda <xmlStrEqual@plt+0x22f9a>
  426ec1:	jmp    426ef0 <xmlStrEqual@plt+0x22fb0>
  426ec3:	nop    DWORD PTR [rax+rax*1+0x0]
  426ec8:	mov    rbx,QWORD PTR [rbx+0x8]
  426ecc:	add    r12d,eax
  426ecf:	mov    eax,eax
  426ed1:	add    rbp,rax
  426ed4:	cmp    QWORD PTR [r13+0x28],rbx
  426ed8:	je     426ef0 <xmlStrEqual@plt+0x22fb0>
  426eda:	mov    rsi,QWORD PTR [rbx+0x10]
  426ede:	mov    rdi,rbp
  426ee1:	call   425190 <xmlStrEqual@plt+0x21250>
  426ee6:	test   eax,eax
  426ee8:	jne    426ec8 <xmlStrEqual@plt+0x22f88>
  426eea:	jmp    426e68 <xmlStrEqual@plt+0x22f28>
  426eef:	nop
  426ef0:	lea    eax,[r12-0x8]
  426ef5:	movbe  WORD PTR [r14+0x6],ax
  426efc:	mov    eax,r12d
  426eff:	jmp    426e6a <xmlStrEqual@plt+0x22f2a>
  426f04:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  426f0f:	nop
  426f10:	endbr64 
  426f14:	push   r14
  426f16:	mov    eax,0xa
  426f1b:	push   r13
  426f1d:	push   r12
  426f1f:	push   rbp
  426f20:	mov    rbp,rdi
  426f23:	push   rbx
  426f24:	mov    DWORD PTR [rdi],0x340
  426f2a:	mov    WORD PTR [rdi+0x4],ax
  426f2e:	mov    rax,QWORD PTR [rsi]
  426f31:	mov    r13,QWORD PTR [rax+0x8]
  426f35:	cmp    rax,r13
  426f38:	je     426fc8 <xmlStrEqual@plt+0x23088>
  426f3e:	mov    rbx,rsi
  426f41:	add    rdi,0x8
  426f45:	mov    r14d,0x8
  426f4b:	jmp    426f63 <xmlStrEqual@plt+0x23023>
  426f4d:	nop    DWORD PTR [rax]
  426f50:	mov    r13,QWORD PTR [r13+0x8]
  426f54:	mov    edi,eax
  426f56:	add    rdi,r12
  426f59:	lea    r14d,[rax+r14*1+0x2]
  426f5e:	cmp    QWORD PTR [rbx],r13
  426f61:	je     426fb0 <xmlStrEqual@plt+0x23070>
  426f63:	mov    rax,QWORD PTR [r13+0x10]
  426f67:	lea    r12,[rdi+0x2]
  426f6b:	movzx  edx,BYTE PTR [rax]
  426f6e:	movzx  esi,BYTE PTR [rax]
  426f71:	movzx  ecx,BYTE PTR [rax]
  426f74:	and    edx,0x1
  426f77:	and    esi,0x2
  426f7a:	shl    edx,0x2
  426f7d:	shr    cl,0x2
  426f80:	or     edx,esi
  426f82:	and    ecx,0x1
  426f85:	mov    BYTE PTR [rdi],0x0
  426f88:	or     edx,ecx
  426f8a:	mov    BYTE PTR [rdi+0x1],dl
  426f8d:	mov    rsi,QWORD PTR [rax+0x8]
  426f91:	mov    rdi,r12
  426f94:	call   425190 <xmlStrEqual@plt+0x21250>
  426f99:	test   eax,eax
  426f9b:	jne    426f50 <xmlStrEqual@plt+0x23010>
  426f9d:	pop    rbx
  426f9e:	pop    rbp
  426f9f:	pop    r12
  426fa1:	pop    r13
  426fa3:	xor    eax,eax
  426fa5:	pop    r14
  426fa7:	ret    
  426fa8:	nop    DWORD PTR [rax+rax*1+0x0]
  426fb0:	lea    edx,[r14-0x8]
  426fb4:	mov    eax,r14d
  426fb7:	rol    dx,0x8
  426fbb:	pop    rbx
  426fbc:	mov    WORD PTR [rbp+0x6],dx
  426fc0:	pop    rbp
  426fc1:	pop    r12
  426fc3:	pop    r13
  426fc5:	pop    r14
  426fc7:	ret    
  426fc8:	xor    edx,edx
  426fca:	mov    eax,0x8
  426fcf:	jmp    426fbb <xmlStrEqual@plt+0x2307b>
  426fd1:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  426fdc:	nop    DWORD PTR [rax+0x0]
  426fe0:	endbr64 
  426fe4:	push   r13
  426fe6:	mov    eax,0x1
  426feb:	push   r12
  426fed:	push   rbp
  426fee:	lea    rbp,[rdi+0x8]
  426ff2:	push   rbx
  426ff3:	sub    rsp,0x8
  426ff7:	mov    DWORD PTR [rdi],0x340
  426ffd:	mov    WORD PTR [rdi+0x4],ax
  427001:	mov    rax,QWORD PTR [rsi]
  427004:	mov    rbx,QWORD PTR [rax+0x8]
  427008:	cmp    rax,rbx
  42700b:	je     427066 <xmlStrEqual@plt+0x23126>
  42700d:	mov    r13,rdi
  427010:	mov    r12,rsi
  427013:	jmp    427027 <xmlStrEqual@plt+0x230e7>
  427015:	nop    DWORD PTR [rax]
  427018:	mov    rbx,QWORD PTR [rbx+0x8]
  42701c:	cdqe   
  42701e:	add    rbp,rax
  427021:	cmp    QWORD PTR [r12],rbx
  427025:	je     427048 <xmlStrEqual@plt+0x23108>
  427027:	mov    rsi,QWORD PTR [rbx+0x10]
  42702b:	mov    rdi,rbp
  42702e:	call   425190 <xmlStrEqual@plt+0x21250>
  427033:	test   eax,eax
  427035:	jg     427018 <xmlStrEqual@plt+0x230d8>
  427037:	add    rsp,0x8
  42703b:	pop    rbx
  42703c:	pop    rbp
  42703d:	pop    r12
  42703f:	xor    eax,eax
  427041:	pop    r13
  427043:	ret    
  427044:	nop    DWORD PTR [rax+0x0]
  427048:	mov    rdx,rbp
  42704b:	sub    rdx,r13
  42704e:	mov    eax,edx
  427050:	sub    edx,0x8
  427053:	rol    dx,0x8
  427057:	mov    WORD PTR [rbp+0x6],dx
  42705b:	add    rsp,0x8
  42705f:	pop    rbx
  427060:	pop    rbp
  427061:	pop    r12
  427063:	pop    r13
  427065:	ret    
  427066:	xor    edx,edx
  427068:	mov    eax,0x8
  42706d:	jmp    427057 <xmlStrEqual@plt+0x23117>
  42706f:	nop
  427070:	endbr64 
  427074:	mov    rdi,QWORD PTR [rdi+0x8]
  427078:	jmp    4255a0 <xmlStrEqual@plt+0x21660>
  42707d:	nop    DWORD PTR [rax]
  427080:	endbr64 
  427084:	mov    rdi,QWORD PTR [rdi+0x20]
  427088:	jmp    4255a0 <xmlStrEqual@plt+0x21660>
  42708d:	nop    DWORD PTR [rax]
  427090:	endbr64 
  427094:	mov    rax,QWORD PTR [rdi]
  427097:	mov    edx,DWORD PTR [rax+0x18]
  42709a:	test   edx,edx
  42709c:	je     404100 <xmlStrEqual@plt+0x1c0>
  4270a2:	mov    rax,QWORD PTR [rax]
  4270a5:	mov    rax,QWORD PTR [rax+0x10]
  4270a9:	test   rax,rax
  4270ac:	je     4270c0 <xmlStrEqual@plt+0x23180>
  4270ae:	mov    rdi,QWORD PTR [rax+0x8]
  4270b2:	jmp    4255a0 <xmlStrEqual@plt+0x21660>
  4270b7:	nop    WORD PTR [rax+rax*1+0x0]
  4270c0:	xor    eax,eax
  4270c2:	ret    
  4270c3:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4270ce:	xchg   ax,ax
  4270d0:	endbr64 
  4270d4:	push   rbp
  4270d5:	push   rbx
  4270d6:	sub    rsp,0x8
  4270da:	mov    rax,QWORD PTR [rdi]
  4270dd:	mov    rbx,QWORD PTR [rax+0x8]
  4270e1:	cmp    rax,rbx
  4270e4:	je     427110 <xmlStrEqual@plt+0x231d0>
  4270e6:	mov    rbp,rdi
  4270e9:	jmp    4270fa <xmlStrEqual@plt+0x231ba>
  4270eb:	nop    DWORD PTR [rax+rax*1+0x0]
  4270f0:	mov    rbx,QWORD PTR [rbx+0x8]
  4270f4:	cmp    QWORD PTR [rbp+0x0],rbx
  4270f8:	je     427110 <xmlStrEqual@plt+0x231d0>
  4270fa:	mov    rdi,QWORD PTR [rbx+0x10]
  4270fe:	call   4255a0 <xmlStrEqual@plt+0x21660>
  427103:	test   rax,rax
  427106:	je     4270f0 <xmlStrEqual@plt+0x231b0>
  427108:	add    rsp,0x8
  42710c:	pop    rbx
  42710d:	pop    rbp
  42710e:	ret    
  42710f:	nop
  427110:	add    rsp,0x8
  427114:	pop    rbx
  427115:	xor    eax,eax
  427117:	pop    rbp
  427118:	ret    
  427119:	nop    DWORD PTR [rax+0x0]
  427120:	endbr64 
  427124:	mov    rdi,QWORD PTR [rdi+0x8]
  427128:	jmp    425670 <xmlStrEqual@plt+0x21730>
  42712d:	nop    DWORD PTR [rax]
  427130:	endbr64 
  427134:	mov    rdi,QWORD PTR [rdi+0x20]
  427138:	jmp    425670 <xmlStrEqual@plt+0x21730>
  42713d:	nop    DWORD PTR [rax]
  427140:	endbr64 
  427144:	push   rbp
  427145:	push   rbx
  427146:	sub    rsp,0x8
  42714a:	mov    rax,QWORD PTR [rdi]
  42714d:	mov    rbx,QWORD PTR [rax+0x8]
  427151:	cmp    rax,rbx
  427154:	je     427180 <xmlStrEqual@plt+0x23240>
  427156:	mov    rbp,rdi
  427159:	jmp    42716a <xmlStrEqual@plt+0x2322a>
  42715b:	nop    DWORD PTR [rax+rax*1+0x0]
  427160:	mov    rbx,QWORD PTR [rbx+0x8]
  427164:	cmp    QWORD PTR [rbp+0x0],rbx
  427168:	je     427180 <xmlStrEqual@plt+0x23240>
  42716a:	mov    rdi,QWORD PTR [rbx+0x10]
  42716e:	call   425670 <xmlStrEqual@plt+0x21730>
  427173:	test   rax,rax
  427176:	je     427160 <xmlStrEqual@plt+0x23220>
  427178:	add    rsp,0x8
  42717c:	pop    rbx
  42717d:	pop    rbp
  42717e:	ret    
  42717f:	nop
  427180:	add    rsp,0x8
  427184:	pop    rbx
  427185:	xor    eax,eax
  427187:	pop    rbp
  427188:	ret    
  427189:	nop    DWORD PTR [rax+0x0]
  427190:	endbr64 
  427194:	push   rbx
  427195:	mov    rbx,rdi
  427198:	mov    rdi,QWORD PTR [rdi+0x18]
  42719c:	call   424bf0 <xmlStrEqual@plt+0x20cb0>
  4271a1:	mov    rdi,QWORD PTR [rbx+0x8]
  4271a5:	call   424bf0 <xmlStrEqual@plt+0x20cb0>
  4271aa:	mov    rdi,QWORD PTR [rbx+0x20]
  4271ae:	call   424bf0 <xmlStrEqual@plt+0x20cb0>
  4271b3:	mov    rdi,QWORD PTR [rbx+0x28]
  4271b7:	call   42e2b0 <xmlStrEqual@plt+0x2a370>
  4271bc:	mov    rdi,rbx
  4271bf:	pop    rbx
  4271c0:	jmp    4037b0 <free@plt>
  4271c5:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4271d0:	endbr64 
  4271d4:	push   rbx
  4271d5:	mov    rbx,rdi
  4271d8:	mov    rdi,QWORD PTR [rdi]
  4271db:	call   42e2b0 <xmlStrEqual@plt+0x2a370>
  4271e0:	mov    rdi,rbx
  4271e3:	pop    rbx
  4271e4:	jmp    4037b0 <free@plt>
  4271e9:	nop    DWORD PTR [rax+0x0]
  4271f0:	endbr64 
  4271f4:	mov    rdi,QWORD PTR [rdi]
  4271f7:	jmp    42e2b0 <xmlStrEqual@plt+0x2a370>
  4271fc:	nop    DWORD PTR [rax+0x0]
  427200:	endbr64 
  427204:	push   r15
  427206:	mov    edx,0xcccccccd
  42720b:	push   r14
  42720d:	push   r13
  42720f:	push   r12
  427211:	lea    r12,[rip+0x4a1e8]        # 471400 <xmlStrEqual@plt+0x6d4c0>
  427218:	push   rbp
  427219:	mov    rbp,rdi
  42721c:	push   rbx
  42721d:	sub    rsp,0x8
  427221:	mov    eax,DWORD PTR [rip+0x4ab9d]        # 471dc4 <xmlStrEqual@plt+0x6de84>
  427227:	lea    ecx,[rax+0x1]
  42722a:	mov    eax,ecx
  42722c:	mul    edx
  42722e:	shr    edx,0x2
  427231:	lea    eax,[rdx+rdx*4]
  427234:	sub    ecx,eax
  427236:	mov    edx,ecx
  427238:	mov    DWORD PTR [rip+0x4ab86],edx        # 471dc4 <xmlStrEqual@plt+0x6de84>
  42723e:	imul   rdx,rdx,0x1f4
  427245:	mov    BYTE PTR [r12+rdx*1],0x0
  42724a:	movzx  r15d,WORD PTR [rdi+0x10]
  42724f:	mov    rdi,QWORD PTR [rdi+0x18]
  427253:	call   424d40 <xmlStrEqual@plt+0x20e00>
  427258:	mov    rdi,QWORD PTR [rbp+0x20]
  42725c:	mov    r14,rax
  42725f:	call   424d40 <xmlStrEqual@plt+0x20e00>
  427264:	mov    rdi,QWORD PTR [rbp+0x8]
  427268:	mov    r13,rax
  42726b:	movzx  ebx,WORD PTR [rbp+0x0]
  42726f:	call   424d40 <xmlStrEqual@plt+0x20e00>
  427274:	push   r15
  427276:	mov    edi,DWORD PTR [rip+0x4ab48]        # 471dc4 <xmlStrEqual@plt+0x6de84>
  42727c:	mov    r9,rax
  42727f:	push   r14
  427281:	imul   rdi,rdi,0x1f4
  427288:	lea    r8,[rip+0x27c31]        # 44eec0 <xmlStrEqual@plt+0x4af80>
  42728f:	push   r13
  427291:	add    rdi,r12
  427294:	mov    rcx,0xffffffffffffffff
  42729b:	push   rbx
  42729c:	mov    edx,0x1
  4272a1:	mov    esi,0x1f4
  4272a6:	xor    eax,eax
  4272a8:	call   403a40 <__snprintf_chk@plt>
  4272ad:	mov    rax,QWORD PTR [rbp+0x28]
  4272b1:	add    rsp,0x20
  4272b5:	mov    r14,QWORD PTR [rax+0x8]
  4272b9:	cmp    rax,r14
  4272bc:	je     427364 <xmlStrEqual@plt+0x23424>
  4272c2:	xor    ebx,ebx
  4272c4:	mov    r13d,0x1f4
  4272ca:	nop    WORD PTR [rax+rax*1+0x0]
  4272d0:	mov    rdi,QWORD PTR [r14+0x10]
  4272d4:	inc    ebx
  4272d6:	call   424d40 <xmlStrEqual@plt+0x20e00>
  4272db:	mov    ecx,DWORD PTR [rip+0x4aae3]        # 471dc4 <xmlStrEqual@plt+0x6de84>
  4272e1:	imul   rcx,rcx,0x1f4
  4272e8:	add    rcx,r12
  4272eb:	mov    rdi,rcx
  4272ee:	mov    esi,DWORD PTR [rdi]
  4272f0:	add    rdi,0x4
  4272f4:	lea    edx,[rsi-0x1010101]
  4272fa:	andn   edx,esi,edx
  4272ff:	and    edx,0x80808080
  427305:	je     4272ee <xmlStrEqual@plt+0x233ae>
  427307:	mov    esi,edx
  427309:	shr    esi,0x10
  42730c:	test   edx,0x8080
  427312:	cmove  edx,esi
  427315:	lea    rsi,[rdi+0x2]
  427319:	cmove  rdi,rsi
  42731d:	mov    esi,edx
  42731f:	add    sil,dl
  427322:	sbb    rdi,0x3
  427326:	sub    rsp,0x8
  42732a:	push   rax
  42732b:	sub    rdi,rcx
  42732e:	mov    rsi,r13
  427331:	sub    rsi,rdi
  427334:	mov    edx,0x1
  427339:	add    rdi,rcx
  42733c:	mov    r9d,ebx
  42733f:	lea    r8,[rip+0x27ebc]        # 44f202 <xmlStrEqual@plt+0x4b2c2>
  427346:	mov    rcx,0xffffffffffffffff
  42734d:	xor    eax,eax
  42734f:	call   403a40 <__snprintf_chk@plt>
  427354:	mov    r14,QWORD PTR [r14+0x8]
  427358:	pop    rax
  427359:	pop    rdx
  42735a:	cmp    QWORD PTR [rbp+0x28],r14
  42735e:	jne    4272d0 <xmlStrEqual@plt+0x23390>
  427364:	mov    eax,DWORD PTR [rip+0x4aa5a]        # 471dc4 <xmlStrEqual@plt+0x6de84>
  42736a:	add    rsp,0x8
  42736e:	imul   rax,rax,0x1f4
  427375:	pop    rbx
  427376:	pop    rbp
  427377:	add    rax,r12
  42737a:	pop    r12
  42737c:	pop    r13
  42737e:	pop    r14
  427380:	pop    r15
  427382:	ret    
  427383:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  42738e:	xchg   ax,ax
  427390:	endbr64 
  427394:	mov    eax,DWORD PTR [rip+0x490a2]        # 47043c <xmlStrEqual@plt+0x6c4fc>
  42739a:	mov    edx,0x66666667
  42739f:	lea    ecx,[rax+0x1]
  4273a2:	mov    eax,ecx
  4273a4:	push   r14
  4273a6:	imul   edx
  4273a8:	mov    eax,ecx
  4273aa:	push   r13
  4273ac:	sar    eax,0x1f
  4273af:	sar    edx,0x2
  4273b2:	sub    edx,eax
  4273b4:	lea    eax,[rdx+rdx*4]
  4273b7:	push   r12
  4273b9:	add    eax,eax
  4273bb:	sub    ecx,eax
  4273bd:	movsxd rdx,ecx
  4273c0:	push   rbp
  4273c1:	imul   rax,rdx,0x1f4
  4273c8:	lea    rbp,[rip+0x48a91]        # 46fe60 <xmlStrEqual@plt+0x6bf20>
  4273cf:	push   rbx
  4273d0:	mov    BYTE PTR [rbp+rax*1+0x0],0x0
  4273d5:	mov    DWORD PTR [rip+0x49061],edx        # 47043c <xmlStrEqual@plt+0x6c4fc>
  4273db:	mov    rax,QWORD PTR [rdi]
  4273de:	mov    r14,QWORD PTR [rax+0x8]
  4273e2:	cmp    rax,r14
  4273e5:	je     42749c <xmlStrEqual@plt+0x2355c>
  4273eb:	mov    r12,rdi
  4273ee:	xor    ebx,ebx
  4273f0:	mov    r13d,0x1f4
  4273f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  427400:	mov    rdi,QWORD PTR [r14+0x10]
  427404:	call   424d40 <xmlStrEqual@plt+0x20e00>
  427409:	movsxd rcx,DWORD PTR [rip+0x4902c]        # 47043c <xmlStrEqual@plt+0x6c4fc>
  427410:	imul   rcx,rcx,0x1f4
  427417:	add    rcx,rbp
  42741a:	mov    rdi,rcx
  42741d:	mov    esi,DWORD PTR [rdi]
  42741f:	add    rdi,0x4
  427423:	lea    edx,[rsi-0x1010101]
  427429:	andn   edx,esi,edx
  42742e:	and    edx,0x80808080
  427434:	je     42741d <xmlStrEqual@plt+0x234dd>
  427436:	mov    esi,edx
  427438:	shr    esi,0x10
  42743b:	test   edx,0x8080
  427441:	cmove  edx,esi
  427444:	lea    rsi,[rdi+0x2]
  427448:	cmove  rdi,rsi
  42744c:	mov    esi,edx
  42744e:	add    sil,dl
  427451:	sbb    rdi,0x3
  427455:	sub    rsp,0x8
  427459:	push   rax
  42745a:	sub    rdi,rcx
  42745d:	mov    rsi,r13
  427460:	sub    rsi,rdi
  427463:	mov    r9d,ebx
  427466:	add    rdi,rcx
  427469:	mov    edx,0x1
  42746e:	lea    r8,[rip+0x27d96]        # 44f20b <xmlStrEqual@plt+0x4b2cb>
  427475:	mov    rcx,0xffffffffffffffff
  42747c:	xor    eax,eax
  42747e:	call   403a40 <__snprintf_chk@plt>
  427483:	mov    r14,QWORD PTR [r14+0x8]
  427487:	pop    rax
  427488:	inc    ebx
  42748a:	pop    rdx
  42748b:	cmp    QWORD PTR [r12],r14
  42748f:	jne    427400 <xmlStrEqual@plt+0x234c0>
  427495:	movsxd rdx,DWORD PTR [rip+0x48fa0]        # 47043c <xmlStrEqual@plt+0x6c4fc>
  42749c:	imul   rdx,rdx,0x1f4
  4274a3:	pop    rbx
  4274a4:	lea    rax,[rbp+rdx*1+0x0]
  4274a9:	pop    rbp
  4274aa:	pop    r12
  4274ac:	pop    r13
  4274ae:	pop    r14
  4274b0:	ret    
  4274b1:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4274bc:	nop    DWORD PTR [rax+0x0]
  4274c0:	endbr64 
  4274c4:	mov    eax,DWORD PTR [rip+0x49f1a]        # 4713e4 <xmlStrEqual@plt+0x6d4a4>
  4274ca:	push   r14
  4274cc:	lea    ecx,[rax+0x1]
  4274cf:	mov    eax,ecx
  4274d1:	mov    edx,0xcccccccd
  4274d6:	mul    edx
  4274d8:	push   r13
  4274da:	shr    edx,0x2
  4274dd:	lea    eax,[rdx+rdx*4]
  4274e0:	push   r12
  4274e2:	sub    ecx,eax
  4274e4:	mov    edx,ecx
  4274e6:	mov    DWORD PTR [rip+0x49ef8],edx        # 4713e4 <xmlStrEqual@plt+0x6d4a4>
  4274ec:	imul   rdx,rdx,0x1f4
  4274f3:	push   rbp
  4274f4:	lea    rbp,[rip+0x49525]        # 470a20 <xmlStrEqual@plt+0x6cae0>
  4274fb:	add    rdx,rbp
  4274fe:	push   rbx
  4274ff:	mov    DWORD PTR [rdx],0x3a504c45
  427505:	mov    BYTE PTR [rdx+0x4],0x0
  427509:	mov    rax,QWORD PTR [rdi]
  42750c:	mov    r14,QWORD PTR [rax+0x8]
  427510:	cmp    rax,r14
  427513:	je     4275c0 <xmlStrEqual@plt+0x23680>
  427519:	mov    r12,rdi
  42751c:	xor    ebx,ebx
  42751e:	mov    r13d,0x1f4
  427524:	nop    DWORD PTR [rax+0x0]
  427528:	mov    rax,QWORD PTR [r14+0x10]
  42752c:	inc    ebx
  42752e:	mov    rdi,QWORD PTR [rax+0x8]
  427532:	call   424d40 <xmlStrEqual@plt+0x20e00>
  427537:	mov    ecx,DWORD PTR [rip+0x49ea7]        # 4713e4 <xmlStrEqual@plt+0x6d4a4>
  42753d:	imul   rcx,rcx,0x1f4
  427544:	add    rcx,rbp
  427547:	mov    rdi,rcx
  42754a:	mov    esi,DWORD PTR [rdi]
  42754c:	add    rdi,0x4
  427550:	lea    edx,[rsi-0x1010101]
  427556:	andn   edx,esi,edx
  42755b:	and    edx,0x80808080
  427561:	je     42754a <xmlStrEqual@plt+0x2360a>
  427563:	mov    esi,edx
  427565:	shr    esi,0x10
  427568:	test   edx,0x8080
  42756e:	cmove  edx,esi
  427571:	lea    rsi,[rdi+0x2]
  427575:	cmove  rdi,rsi
  427579:	mov    esi,edx
  42757b:	add    sil,dl
  42757e:	sbb    rdi,0x3
  427582:	sub    rsp,0x8
  427586:	push   rax
  427587:	sub    rdi,rcx
  42758a:	mov    rsi,r13
  42758d:	sub    rsi,rdi
  427590:	mov    edx,0x1
  427595:	add    rdi,rcx
  427598:	mov    r9d,ebx
  42759b:	lea    r8,[rip+0x27c60]        # 44f202 <xmlStrEqual@plt+0x4b2c2>
  4275a2:	mov    rcx,0xffffffffffffffff
  4275a9:	xor    eax,eax
  4275ab:	call   403a40 <__snprintf_chk@plt>
  4275b0:	mov    r14,QWORD PTR [r14+0x8]
  4275b4:	pop    rax
  4275b5:	pop    rdx
  4275b6:	cmp    QWORD PTR [r12],r14
  4275ba:	jne    427528 <xmlStrEqual@plt+0x235e8>
  4275c0:	mov    eax,DWORD PTR [rip+0x49e1e]        # 4713e4 <xmlStrEqual@plt+0x6d4a4>
  4275c6:	pop    rbx
  4275c7:	imul   rax,rax,0x1f4
  4275ce:	add    rax,rbp
  4275d1:	pop    rbp
  4275d2:	pop    r12
  4275d4:	pop    r13
  4275d6:	pop    r14
  4275d8:	ret    
  4275d9:	nop    DWORD PTR [rax+0x0]
  4275e0:	endbr64 
  4275e4:	mov    eax,DWORD PTR [rip+0x49432]        # 470a1c <xmlStrEqual@plt+0x6cadc>
  4275ea:	push   r14
  4275ec:	lea    ecx,[rax+0x1]
  4275ef:	mov    eax,ecx
  4275f1:	mov    edx,0xcccccccd
  4275f6:	mul    edx
  4275f8:	push   r13
  4275fa:	shr    edx,0x3
  4275fd:	push   r12
  4275ff:	lea    eax,[rdx+rdx*4]
  427602:	add    eax,eax
  427604:	sub    ecx,eax
  427606:	push   rbp
  427607:	mov    edx,ecx
  427609:	mov    DWORD PTR [rip+0x4940d],edx        # 470a1c <xmlStrEqual@plt+0x6cadc>
  42760f:	imul   rdx,rdx,0x1f4
  427616:	push   rbx
  427617:	lea    rbx,[rip+0x48e22]        # 470440 <xmlStrEqual@plt+0x6c500>
  42761e:	add    rdx,rbx
  427621:	mov    DWORD PTR [rdx],0x3a454c52
  427627:	mov    BYTE PTR [rdx+0x4],0x0
  42762b:	mov    rax,QWORD PTR [rdi]
  42762e:	mov    r13,QWORD PTR [rax+0x8]
  427632:	cmp    rax,r13
  427635:	je     4276df <xmlStrEqual@plt+0x2379f>
  42763b:	mov    rbp,rdi
  42763e:	mov    r12d,0x1f4
  427644:	nop    DWORD PTR [rax+0x0]
  427648:	mov    r14,QWORD PTR [r13+0x10]
  42764c:	mov    rdi,QWORD PTR [r14]
  42764f:	call   424d40 <xmlStrEqual@plt+0x20e00>
  427654:	mov    ecx,DWORD PTR [rip+0x493c2]        # 470a1c <xmlStrEqual@plt+0x6cadc>
  42765a:	imul   rcx,rcx,0x1f4
  427661:	add    rcx,rbx
  427664:	mov    rdi,rcx
  427667:	mov    esi,DWORD PTR [rdi]
  427669:	add    rdi,0x4
  42766d:	lea    edx,[rsi-0x1010101]
  427673:	andn   edx,esi,edx
  427678:	and    edx,0x80808080
  42767e:	je     427667 <xmlStrEqual@plt+0x23727>
  427680:	mov    esi,edx
  427682:	shr    esi,0x10
  427685:	test   edx,0x8080
  42768b:	cmove  edx,esi
  42768e:	lea    rsi,[rdi+0x2]
  427692:	cmove  rdi,rsi
  427696:	mov    esi,edx
  427698:	add    sil,dl
  42769b:	sbb    rdi,0x3
  42769f:	sub    rsp,0x8
  4276a3:	movzx  r9d,BYTE PTR [r14+0x8]
  4276a8:	push   rax
  4276a9:	sub    rdi,rcx
  4276ac:	mov    rsi,r12
  4276af:	sub    rsi,rdi
  4276b2:	mov    edx,0x1
  4276b7:	add    rdi,rcx
  4276ba:	lea    r8,[rip+0x27b41]        # 44f202 <xmlStrEqual@plt+0x4b2c2>
  4276c1:	mov    rcx,0xffffffffffffffff
  4276c8:	xor    eax,eax
  4276ca:	call   403a40 <__snprintf_chk@plt>
  4276cf:	mov    r13,QWORD PTR [r13+0x8]
  4276d3:	pop    rax
  4276d4:	pop    rdx
  4276d5:	cmp    QWORD PTR [rbp+0x0],r13
  4276d9:	jne    427648 <xmlStrEqual@plt+0x23708>
  4276df:	mov    eax,DWORD PTR [rip+0x49337]        # 470a1c <xmlStrEqual@plt+0x6cadc>
  4276e5:	imul   rax,rax,0x1f4
  4276ec:	add    rax,rbx
  4276ef:	pop    rbx
  4276f0:	pop    rbp
  4276f1:	pop    r12
  4276f3:	pop    r13
  4276f5:	pop    r14
  4276f7:	ret    
  4276f8:	nop    DWORD PTR [rax+rax*1+0x0]
  427700:	endbr64 
  427704:	push   r15
  427706:	push   r14
  427708:	push   r13
  42770a:	mov    r13,rsi
  42770d:	push   r12
  42770f:	mov    r12,rdi
  427712:	push   rbp
  427713:	push   rbx
  427714:	sub    rsp,0x8
  427718:	mov    rax,QWORD PTR [rdi]
  42771b:	mov    esi,DWORD PTR [rax+0x18]
  42771e:	test   esi,esi
  427720:	je     4277e0 <xmlStrEqual@plt+0x238a0>
  427726:	mov    rdx,QWORD PTR [r13+0x0]
  42772a:	mov    rbx,QWORD PTR [rax+0x8]
  42772e:	mov    ecx,DWORD PTR [rdx+0x18]
  427731:	test   ecx,ecx
  427733:	je     4277a0 <xmlStrEqual@plt+0x23860>
  427735:	mov    rbp,QWORD PTR [rdx+0x8]
  427739:	cmp    rax,rbx
  42773c:	je     4277b0 <xmlStrEqual@plt+0x23870>
  42773e:	cmp    rdx,rbp
  427741:	jne    427766 <xmlStrEqual@plt+0x23826>
  427743:	jmp    4277b0 <xmlStrEqual@plt+0x23870>
  427745:	nop    DWORD PTR [rax]
  427748:	movzx  eax,BYTE PTR [r14]
  42774c:	xor    al,BYTE PTR [r15]
  42774f:	test   al,0x7
  427751:	jne    4277c8 <xmlStrEqual@plt+0x23888>
  427753:	mov    rbx,QWORD PTR [rbx]
  427756:	mov    rbp,QWORD PTR [rbp+0x0]
  42775a:	cmp    rbx,QWORD PTR [r12]
  42775e:	je     4277b0 <xmlStrEqual@plt+0x23870>
  427760:	cmp    rbp,QWORD PTR [r13+0x0]
  427764:	je     4277b0 <xmlStrEqual@plt+0x23870>
  427766:	mov    r14,QWORD PTR [rbx+0x10]
  42776a:	mov    r15,QWORD PTR [rbp+0x10]
  42776e:	mov    rdi,QWORD PTR [r14+0x8]
  427772:	mov    rsi,QWORD PTR [r15+0x8]
  427776:	call   425310 <xmlStrEqual@plt+0x213d0>
  42777b:	test   eax,eax
  42777d:	je     427748 <xmlStrEqual@plt+0x23808>
  42777f:	jns    4277b2 <xmlStrEqual@plt+0x23872>
  427781:	mov    rsi,QWORD PTR [r15+0x8]
  427785:	mov    rdi,QWORD PTR [r14+0x8]
  427789:	add    rsp,0x8
  42778d:	pop    rbx
  42778e:	pop    rbp
  42778f:	pop    r12
  427791:	pop    r13
  427793:	pop    r14
  427795:	pop    r15
  427797:	jmp    425950 <xmlStrEqual@plt+0x21a10>
  42779c:	nop    DWORD PTR [rax+0x0]
  4277a0:	xor    ebp,ebp
  4277a2:	cmp    rax,rbx
  4277a5:	jne    427766 <xmlStrEqual@plt+0x23826>
  4277a7:	nop    WORD PTR [rax+rax*1+0x0]
  4277b0:	xor    eax,eax
  4277b2:	add    rsp,0x8
  4277b6:	pop    rbx
  4277b7:	pop    rbp
  4277b8:	pop    r12
  4277ba:	pop    r13
  4277bc:	pop    r14
  4277be:	pop    r15
  4277c0:	ret    
  4277c1:	nop    DWORD PTR [rax+0x0]
  4277c8:	add    rsp,0x8
  4277cc:	pop    rbx
  4277cd:	pop    rbp
  4277ce:	pop    r12
  4277d0:	pop    r13
  4277d2:	pop    r14
  4277d4:	mov    eax,0x1
  4277d9:	pop    r15
  4277db:	ret    
  4277dc:	nop    DWORD PTR [rax+0x0]
  4277e0:	mov    rdx,QWORD PTR [r13+0x0]
  4277e4:	mov    eax,DWORD PTR [rdx+0x18]
  4277e7:	test   eax,eax
  4277e9:	je     4277f6 <xmlStrEqual@plt+0x238b6>
  4277eb:	mov    rbp,QWORD PTR [rdx+0x8]
  4277ef:	xor    ebx,ebx
  4277f1:	jmp    42773e <xmlStrEqual@plt+0x237fe>
  4277f6:	xor    ebx,ebx
  4277f8:	xor    ebp,ebp
  4277fa:	jmp    427766 <xmlStrEqual@plt+0x23826>
  4277ff:	nop
  427800:	endbr64 
  427804:	push   r14
  427806:	mov    edx,0xd
  42780b:	push   r13
  42780d:	mov    r13,rdi
  427810:	push   r12
  427812:	push   rbp
  427813:	push   rbx
  427814:	mov    DWORD PTR [rdi],0x340
  42781a:	mov    WORD PTR [rdi+0x4],dx
  42781e:	mov    rax,QWORD PTR [rsi]
  427821:	mov    rbp,QWORD PTR [rax+0x8]
  427825:	cmp    rax,rbp
  427828:	je     4278a9 <xmlStrEqual@plt+0x23969>
  42782a:	mov    r12,rsi
  42782d:	add    rdi,0x8
  427831:	mov    r14d,0x8
  427837:	jmp    427854 <xmlStrEqual@plt+0x23914>
  427839:	nop    DWORD PTR [rax+0x0]
  427840:	mov    rbp,QWORD PTR [rbp+0x8]
  427844:	mov    edi,eax
  427846:	add    rdi,rbx
  427849:	lea    r14d,[rax+r14*1+0x4]
  42784e:	cmp    QWORD PTR [r12],rbp
  427852:	je     427890 <xmlStrEqual@plt+0x23950>
  427854:	mov    rdx,QWORD PTR [rbp+0x10]
  427858:	lea    rbx,[rdi+0x4]
  42785c:	movzx  eax,BYTE PTR [rdx+0x8]
  427860:	mov    BYTE PTR [rdi+0x2],0x0
  427864:	mov    BYTE PTR [rdi+0x3],al
  427867:	xor    eax,eax
  427869:	mov    WORD PTR [rdi],ax
  42786c:	mov    rdi,rbx
  42786f:	mov    rsi,QWORD PTR [rdx]
  427872:	call   425190 <xmlStrEqual@plt+0x21250>
  427877:	test   eax,eax
  427879:	jne    427840 <xmlStrEqual@plt+0x23900>
  42787b:	pop    rbx
  42787c:	pop    rbp
  42787d:	pop    r12
  42787f:	pop    r13
  427881:	xor    eax,eax
  427883:	pop    r14
  427885:	ret    
  427886:	nop    WORD PTR cs:[rax+rax*1+0x0]
  427890:	lea    edx,[r14-0x8]
  427894:	mov    eax,r14d
  427897:	rol    dx,0x8
  42789b:	pop    rbx
  42789c:	pop    rbp
  42789d:	pop    r12
  42789f:	mov    WORD PTR [r13+0x6],dx
  4278a4:	pop    r13
  4278a6:	pop    r14
  4278a8:	ret    
  4278a9:	xor    edx,edx
  4278ab:	mov    eax,0x8
  4278b0:	jmp    42789b <xmlStrEqual@plt+0x2395b>
  4278b2:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4278bd:	nop    DWORD PTR [rax]
  4278c0:	push   rax
  4278c1:	pop    rax
  4278c2:	lea    rcx,[rip+0x27ebf]        # 44f788 <xmlStrEqual@plt+0x4b848>
  4278c9:	mov    edx,0x6a
  4278ce:	lea    rsi,[rip+0x27941]        # 44f216 <xmlStrEqual@plt+0x4b2d6>
  4278d5:	lea    rdi,[rip+0x2794e]        # 44f22a <xmlStrEqual@plt+0x4b2ea>
  4278dc:	sub    rsp,0x8
  4278e0:	call   403a60 <__assert_fail@plt>
  4278e5:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4278f0:	push   rax
  4278f1:	pop    rax
  4278f2:	lea    rcx,[rip+0x27e7f]        # 44f778 <xmlStrEqual@plt+0x4b838>
  4278f9:	mov    edx,0x6f
  4278fe:	lea    rsi,[rip+0x27911]        # 44f216 <xmlStrEqual@plt+0x4b2d6>
  427905:	lea    rdi,[rip+0x2791e]        # 44f22a <xmlStrEqual@plt+0x4b2ea>
  42790c:	sub    rsp,0x8
  427910:	call   403a60 <__assert_fail@plt>
  427915:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  427920:	endbr64 
  427924:	test   rdi,rdi
  427927:	je     427940 <xmlStrEqual@plt+0x23a00>
  427929:	push   rbx
  42792a:	mov    rbx,rdi
  42792d:	mov    rdi,QWORD PTR [rdi]
  427930:	call   42e2b0 <xmlStrEqual@plt+0x2a370>
  427935:	mov    rdi,rbx
  427938:	pop    rbx
  427939:	jmp    4037b0 <free@plt>
  42793e:	xchg   ax,ax
  427940:	ret    
  427941:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  42794c:	nop    DWORD PTR [rax+0x0]
  427950:	endbr64 
  427954:	push   r14
  427956:	push   r13
  427958:	push   r12
  42795a:	mov    r12,rsi
  42795d:	push   rbp
  42795e:	mov    rbp,rdi
  427961:	push   rbx
  427962:	mov    rsi,QWORD PTR [rsi+0x8]
  427966:	mov    rdi,QWORD PTR [rdi+0x8]
  42796a:	call   425310 <xmlStrEqual@plt+0x213d0>
  42796f:	mov    ebx,eax
  427971:	test   eax,eax
  427973:	je     427980 <xmlStrEqual@plt+0x23a40>
  427975:	mov    eax,ebx
  427977:	pop    rbx
  427978:	pop    rbp
  427979:	pop    r12
  42797b:	pop    r13
  42797d:	pop    r14
  42797f:	ret    
  427980:	mov    rsi,QWORD PTR [r12+0x20]
  427985:	mov    rdi,QWORD PTR [rbp+0x20]
  427989:	call   425310 <xmlStrEqual@plt+0x213d0>
  42798e:	mov    ebx,eax
  427990:	test   eax,eax
  427992:	jne    427975 <xmlStrEqual@plt+0x23a35>
  427994:	mov    rsi,QWORD PTR [r12+0x18]
  427999:	mov    rdi,QWORD PTR [rbp+0x18]
  42799d:	call   425310 <xmlStrEqual@plt+0x213d0>
  4279a2:	mov    ebx,eax
  4279a4:	test   eax,eax
  4279a6:	jne    427975 <xmlStrEqual@plt+0x23a35>
  4279a8:	movzx  eax,WORD PTR [r12]
  4279ad:	cmp    WORD PTR [rbp+0x0],ax
  4279b1:	jne    427a20 <xmlStrEqual@plt+0x23ae0>
  4279b3:	mov    rax,QWORD PTR [r12+0x28]
  4279b8:	mov    rsi,QWORD PTR [rbp+0x28]
  4279bc:	mov    eax,DWORD PTR [rax+0x18]
  4279bf:	cmp    DWORD PTR [rsi+0x18],eax
  4279c2:	jne    427a30 <xmlStrEqual@plt+0x23af0>
  4279c4:	mov    r13,QWORD PTR [rsi+0x8]
  4279c8:	cmp    rsi,r13
  4279cb:	je     427a10 <xmlStrEqual@plt+0x23ad0>
  4279cd:	mov    r14,0x425310
  4279d4:	jmp    4279ed <xmlStrEqual@plt+0x23aad>
  4279d6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4279e0:	mov    r13,QWORD PTR [r13+0x8]
  4279e4:	mov    rsi,QWORD PTR [rbp+0x28]
  4279e8:	cmp    rsi,r13
  4279eb:	je     427a10 <xmlStrEqual@plt+0x23ad0>
  4279ed:	mov    rdi,QWORD PTR [r13+0x10]
  4279f1:	mov    rdx,r14
  4279f4:	call   42df40 <xmlStrEqual@plt+0x2a000>
  4279f9:	test   al,al
  4279fb:	je     4279e0 <xmlStrEqual@plt+0x23aa0>
  4279fd:	mov    ebx,0x1
  427a02:	jmp    427975 <xmlStrEqual@plt+0x23a35>
  427a07:	nop    WORD PTR [rax+rax*1+0x0]
  427a10:	movzx  eax,WORD PTR [r12+0x10]
  427a16:	cmp    WORD PTR [rbp+0x10],ax
  427a1a:	je     427975 <xmlStrEqual@plt+0x23a35>
  427a20:	ja     4279fd <xmlStrEqual@plt+0x23abd>
  427a22:	mov    ebx,0x2
  427a27:	jmp    427975 <xmlStrEqual@plt+0x23a35>
  427a2c:	nop    DWORD PTR [rax+0x0]
  427a30:	jg     4279fd <xmlStrEqual@plt+0x23abd>
  427a32:	jmp    427a22 <xmlStrEqual@plt+0x23ae2>
  427a34:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  427a3f:	nop
  427a40:	push   rax
  427a41:	pop    rax
  427a42:	lea    rcx,[rip+0x27ce7]        # 44f730 <xmlStrEqual@plt+0x4b7f0>
  427a49:	mov    edx,0xdb
  427a4e:	lea    rsi,[rip+0x277c1]        # 44f216 <xmlStrEqual@plt+0x4b2d6>
  427a55:	lea    rdi,[rip+0x277ce]        # 44f22a <xmlStrEqual@plt+0x4b2ea>
  427a5c:	sub    rsp,0x8
  427a60:	call   403a60 <__assert_fail@plt>
  427a65:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  427a70:	push   rax
  427a71:	pop    rax
  427a72:	lea    rcx,[rip+0x27c17]        # 44f690 <xmlStrEqual@plt+0x4b750>
  427a79:	mov    edx,0xfe
  427a7e:	lea    rsi,[rip+0x27791]        # 44f216 <xmlStrEqual@plt+0x4b2d6>
  427a85:	lea    rdi,[rip+0x2779e]        # 44f22a <xmlStrEqual@plt+0x4b2ea>
  427a8c:	sub    rsp,0x8
  427a90:	call   403a60 <__assert_fail@plt>
  427a95:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  427aa0:	push   rax
  427aa1:	pop    rax
  427aa2:	lea    rcx,[rip+0x27bc7]        # 44f670 <xmlStrEqual@plt+0x4b730>
  427aa9:	mov    edx,0x124
  427aae:	lea    rsi,[rip+0x27761]        # 44f216 <xmlStrEqual@plt+0x4b2d6>
  427ab5:	lea    rdi,[rip+0x277c7]        # 44f283 <xmlStrEqual@plt+0x4b343>
  427abc:	sub    rsp,0x8
  427ac0:	call   403a60 <__assert_fail@plt>
  427ac5:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  427ad0:	push   rax
  427ad1:	pop    rax
  427ad2:	lea    rcx,[rip+0x27b77]        # 44f650 <xmlStrEqual@plt+0x4b710>
  427ad9:	mov    edx,0x12a
  427ade:	lea    rsi,[rip+0x27731]        # 44f216 <xmlStrEqual@plt+0x4b2d6>
  427ae5:	lea    rdi,[rip+0x2773e]        # 44f22a <xmlStrEqual@plt+0x4b2ea>
  427aec:	sub    rsp,0x8
  427af0:	call   403a60 <__assert_fail@plt>
  427af5:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  427b00:	push   rax
  427b01:	pop    rax
  427b02:	lea    rcx,[rip+0x27a67]        # 44f570 <xmlStrEqual@plt+0x4b630>
  427b09:	mov    edx,0x1d0
  427b0e:	lea    rsi,[rip+0x27701]        # 44f216 <xmlStrEqual@plt+0x4b2d6>
  427b15:	lea    rdi,[rip+0x27713]        # 44f22f <xmlStrEqual@plt+0x4b2ef>
  427b1c:	sub    rsp,0x8
  427b20:	call   403a60 <__assert_fail@plt>
  427b25:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  427b30:	push   rax
  427b31:	pop    rax
  427b32:	lea    rcx,[rip+0x27a27]        # 44f560 <xmlStrEqual@plt+0x4b620>
  427b39:	mov    edx,0x1d7
  427b3e:	lea    rsi,[rip+0x276d1]        # 44f216 <xmlStrEqual@plt+0x4b2d6>
  427b45:	lea    rdi,[rip+0x276e3]        # 44f22f <xmlStrEqual@plt+0x4b2ef>
  427b4c:	sub    rsp,0x8
  427b50:	call   403a60 <__assert_fail@plt>
  427b55:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  427b60:	push   rax
  427b61:	pop    rax
  427b62:	lea    rcx,[rip+0x279a7]        # 44f510 <xmlStrEqual@plt+0x4b5d0>
  427b69:	mov    edx,0x235
  427b6e:	lea    rsi,[rip+0x276a1]        # 44f216 <xmlStrEqual@plt+0x4b2d6>
  427b75:	lea    rdi,[rip+0x276b3]        # 44f22f <xmlStrEqual@plt+0x4b2ef>
  427b7c:	sub    rsp,0x8
  427b80:	call   403a60 <__assert_fail@plt>
  427b85:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  427b90:	endbr64 
  427b94:	test   rdi,rdi
  427b97:	je     427ba2 <xmlStrEqual@plt+0x23c62>
  427b99:	mov    rdi,QWORD PTR [rdi+0x8]
  427b9d:	jmp    425670 <xmlStrEqual@plt+0x21730>
  427ba2:	push   rax
  427ba3:	call   427b60 <xmlStrEqual@plt+0x23c20>
  427ba8:	nop    DWORD PTR [rax+rax*1+0x0]
  427bb0:	endbr64 
  427bb4:	test   rdi,rdi
  427bb7:	je     427bc2 <xmlStrEqual@plt+0x23c82>
  427bb9:	mov    rdi,QWORD PTR [rdi+0x8]
  427bbd:	jmp    4255a0 <xmlStrEqual@plt+0x21660>
  427bc2:	push   rax
  427bc3:	call   427b60 <xmlStrEqual@plt+0x23c20>
  427bc8:	nop    DWORD PTR [rax+rax*1+0x0]
  427bd0:	endbr64 
  427bd4:	push   rbp
  427bd5:	push   rbx
  427bd6:	sub    rsp,0x8
  427bda:	test   rdi,rdi
  427bdd:	je     427c01 <xmlStrEqual@plt+0x23cc1>
  427bdf:	mov    rbx,rdi
  427be2:	mov    rdi,QWORD PTR [rdi+0x8]
  427be6:	call   424cc0 <xmlStrEqual@plt+0x20d80>
  427beb:	mov    rdi,QWORD PTR [rbx+0x10]
  427bef:	mov    ebp,eax
  427bf1:	call   424cc0 <xmlStrEqual@plt+0x20d80>
  427bf6:	add    rsp,0x8
  427bfa:	pop    rbx
  427bfb:	lea    eax,[rbp+rax*1+0x10]
  427bff:	pop    rbp
  427c00:	ret    
  427c01:	call   427b60 <xmlStrEqual@plt+0x23c20>
  427c06:	nop    WORD PTR cs:[rax+rax*1+0x0]
  427c10:	endbr64 
  427c14:	push   rbx
  427c15:	test   rdi,rdi
  427c18:	je     427c38 <xmlStrEqual@plt+0x23cf8>
  427c1a:	mov    rbx,rdi
  427c1d:	mov    rdi,QWORD PTR [rdi+0x8]
  427c21:	call   424bf0 <xmlStrEqual@plt+0x20cb0>
  427c26:	mov    rdi,QWORD PTR [rbx+0x10]
  427c2a:	call   424bf0 <xmlStrEqual@plt+0x20cb0>
  427c2f:	mov    rdi,rbx
  427c32:	pop    rbx
  427c33:	jmp    4037b0 <free@plt>
  427c38:	call   427b60 <xmlStrEqual@plt+0x23c20>
  427c3d:	nop    DWORD PTR [rax]
  427c40:	push   rax
  427c41:	pop    rax
  427c42:	lea    rcx,[rip+0x27907]        # 44f550 <xmlStrEqual@plt+0x4b610>
  427c49:	mov    edx,0x1df
  427c4e:	lea    rsi,[rip+0x275c1]        # 44f216 <xmlStrEqual@plt+0x4b2d6>
  427c55:	lea    rdi,[rip+0x275d6]        # 44f232 <xmlStrEqual@plt+0x4b2f2>
  427c5c:	sub    rsp,0x8
  427c60:	call   403a60 <__assert_fail@plt>
  427c65:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  427c70:	push   rax
  427c71:	pop    rax
  427c72:	lea    rcx,[rip+0x27887]        # 44f500 <xmlStrEqual@plt+0x4b5c0>
  427c79:	mov    edx,0x23c
  427c7e:	lea    rsi,[rip+0x27591]        # 44f216 <xmlStrEqual@plt+0x4b2d6>
  427c85:	lea    rdi,[rip+0x275a3]        # 44f22f <xmlStrEqual@plt+0x4b2ef>
  427c8c:	sub    rsp,0x8
  427c90:	call   403a60 <__assert_fail@plt>
  427c95:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  427ca0:	push   rax
  427ca1:	pop    rax
  427ca2:	lea    rcx,[rip+0x27897]        # 44f540 <xmlStrEqual@plt+0x4b600>
  427ca9:	mov    edx,0x1e7
  427cae:	lea    rsi,[rip+0x27561]        # 44f216 <xmlStrEqual@plt+0x4b2d6>
  427cb5:	lea    rdi,[rip+0x2757a]        # 44f236 <xmlStrEqual@plt+0x4b2f6>
  427cbc:	sub    rsp,0x8
  427cc0:	call   403a60 <__assert_fail@plt>
  427cc5:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  427cd0:	push   rax
  427cd1:	pop    rax
  427cd2:	lea    rcx,[rip+0x27817]        # 44f4f0 <xmlStrEqual@plt+0x4b5b0>
  427cd9:	mov    edx,0x243
  427cde:	lea    rsi,[rip+0x27531]        # 44f216 <xmlStrEqual@plt+0x4b2d6>
  427ce5:	lea    rdi,[rip+0x27543]        # 44f22f <xmlStrEqual@plt+0x4b2ef>
  427cec:	sub    rsp,0x8
  427cf0:	call   403a60 <__assert_fail@plt>
  427cf5:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  427d00:	push   rax
  427d01:	pop    rax
  427d02:	lea    rcx,[rip+0x277d7]        # 44f4e0 <xmlStrEqual@plt+0x4b5a0>
  427d09:	mov    edx,0x24a
  427d0e:	lea    rsi,[rip+0x27501]        # 44f216 <xmlStrEqual@plt+0x4b2d6>
  427d15:	lea    rdi,[rip+0x27513]        # 44f22f <xmlStrEqual@plt+0x4b2ef>
  427d1c:	sub    rsp,0x8
  427d20:	call   403a60 <__assert_fail@plt>
  427d25:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  427d30:	endbr64 
  427d34:	push   r13
  427d36:	mov    edx,0x9
  427d3b:	push   r12
  427d3d:	push   rbp
  427d3e:	push   rbx
  427d3f:	sub    rsp,0x8
  427d43:	mov    DWORD PTR [rdi],0x340
  427d49:	mov    WORD PTR [rdi+0x4],dx
  427d4d:	test   rsi,rsi
  427d50:	je     427db0 <xmlStrEqual@plt+0x23e70>
  427d52:	movbe  eax,DWORD PTR [rsi+0x4]
  427d57:	mov    rbp,rsi
  427d5a:	mov    DWORD PTR [rdi+0x8],eax
  427d5d:	xor    eax,eax
  427d5f:	mov    WORD PTR [rdi+0xc],ax
  427d63:	lea    r12,[rdi+0x10]
  427d67:	mov    rbx,rdi
  427d6a:	movzx  eax,BYTE PTR [rsi]
  427d6d:	mov    BYTE PTR [rdi+0xe],al
  427d70:	movzx  eax,BYTE PTR [rsi+0x1]
  427d74:	mov    BYTE PTR [rdi+0xf],al
  427d77:	mov    rdi,r12
  427d7a:	mov    rsi,QWORD PTR [rsi+0x8]
  427d7e:	call   425190 <xmlStrEqual@plt+0x21250>
  427d83:	movsxd rdi,eax
  427d86:	mov    rsi,QWORD PTR [rbp+0x10]
  427d8a:	mov    r13,rdi
  427d8d:	add    rdi,r12
  427d90:	call   425190 <xmlStrEqual@plt+0x21250>
  427d95:	lea    edx,[r13+rax*1+0x8]
  427d9a:	movbe  WORD PTR [rbx+0x6],dx
  427da0:	add    rsp,0x8
  427da4:	lea    eax,[r13+rax*1+0x10]
  427da9:	pop    rbx
  427daa:	pop    rbp
  427dab:	pop    r12
  427dad:	pop    r13
  427daf:	ret    
  427db0:	call   427d00 <xmlStrEqual@plt+0x23dc0>
  427db5:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  427dc0:	push   rax
  427dc1:	pop    rax
  427dc2:	lea    rcx,[rip+0x276f7]        # 44f4c0 <xmlStrEqual@plt+0x4b580>
  427dc9:	mov    edx,0x251
  427dce:	lea    rsi,[rip+0x27441]        # 44f216 <xmlStrEqual@plt+0x4b2d6>
  427dd5:	lea    rdi,[rip+0x27453]        # 44f22f <xmlStrEqual@plt+0x4b2ef>
  427ddc:	sub    rsp,0x8
  427de0:	call   403a60 <__assert_fail@plt>
  427de5:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  427df0:	endbr64 
  427df4:	mov    eax,DWORD PTR [rip+0x4abc6]        # 4729c0 <xmlStrEqual@plt+0x6ea80>
  427dfa:	push   r14
  427dfc:	lea    ecx,[rax+0x1]
  427dff:	mov    eax,ecx
  427e01:	mov    edx,0xcccccccd
  427e06:	mul    edx
  427e08:	push   r13
  427e0a:	shr    edx,0x3
  427e0d:	push   r12
  427e0f:	lea    eax,[rdx+rdx*4]
  427e12:	add    eax,eax
  427e14:	sub    ecx,eax
  427e16:	push   rbp
  427e17:	mov    edx,ecx
  427e19:	lea    rax,[rdx+rdx*2]
  427e1d:	lea    rbp,[rip+0x4a7dc]        # 472600 <xmlStrEqual@plt+0x6e6c0>
  427e24:	shl    rax,0x5
  427e28:	push   rbx
  427e29:	mov    DWORD PTR [rip+0x4ab91],edx        # 4729c0 <xmlStrEqual@plt+0x6ea80>
  427e2f:	mov    BYTE PTR [rbp+rax*1+0x0],0x0
  427e34:	test   rdi,rdi
  427e37:	je     427eb4 <xmlStrEqual@plt+0x23f74>
  427e39:	mov    rbx,rdi
  427e3c:	movzx  r14d,BYTE PTR [rdi]
  427e40:	mov    rdi,QWORD PTR [rdi+0x10]
  427e44:	call   424d40 <xmlStrEqual@plt+0x20e00>
  427e49:	mov    rdi,QWORD PTR [rbx+0x8]
  427e4d:	movzx  r12d,BYTE PTR [rbx]
  427e51:	mov    r13,rax
  427e54:	call   424d40 <xmlStrEqual@plt+0x20e00>
  427e59:	sub    rsp,0x8
  427e5d:	push   r14
  427e5f:	mov    edx,DWORD PTR [rip+0x4ab5b]        # 4729c0 <xmlStrEqual@plt+0x6ea80>
  427e65:	mov    r9,rax
  427e68:	push   r13
  427e6a:	lea    rdi,[rdx+rdx*2]
  427e6e:	shl    rdi,0x5
  427e72:	push   r12
  427e74:	add    rdi,rbp
  427e77:	lea    r8,[rip+0x273bc]        # 44f23a <xmlStrEqual@plt+0x4b2fa>
  427e7e:	mov    rcx,0xffffffffffffffff
  427e85:	mov    edx,0x1
  427e8a:	mov    esi,0x60
  427e8f:	xor    eax,eax
  427e91:	call   403a40 <__snprintf_chk@plt>
  427e96:	mov    eax,DWORD PTR [rip+0x4ab24]        # 4729c0 <xmlStrEqual@plt+0x6ea80>
  427e9c:	add    rsp,0x20
  427ea0:	lea    rax,[rax+rax*2]
  427ea4:	pop    rbx
  427ea5:	shl    rax,0x5
  427ea9:	add    rax,rbp
  427eac:	pop    rbp
  427ead:	pop    r12
  427eaf:	pop    r13
  427eb1:	pop    r14
  427eb3:	ret    
  427eb4:	call   427dc0 <xmlStrEqual@plt+0x23e80>
  427eb9:	nop    DWORD PTR [rax+0x0]
  427ec0:	push   rax
  427ec1:	pop    rax
  427ec2:	lea    rcx,[rip+0x275d7]        # 44f4a0 <xmlStrEqual@plt+0x4b560>
  427ec9:	mov    edx,0x258
  427ece:	lea    rsi,[rip+0x27341]        # 44f216 <xmlStrEqual@plt+0x4b2d6>
  427ed5:	lea    rdi,[rip+0x27353]        # 44f22f <xmlStrEqual@plt+0x4b2ef>
  427edc:	sub    rsp,0x8
  427ee0:	call   403a60 <__assert_fail@plt>
  427ee5:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  427ef0:	endbr64 
  427ef4:	push   rbp
  427ef5:	push   rbx
  427ef6:	sub    rsp,0x8
  427efa:	test   rdi,rdi
  427efd:	je     427f5f <xmlStrEqual@plt+0x2401f>
  427eff:	mov    rbx,rdi
  427f02:	mov    rbp,rsi
  427f05:	mov    eax,DWORD PTR [rdi+0x4]
  427f08:	test   rsi,rsi
  427f0b:	je     427f5f <xmlStrEqual@plt+0x2401f>
  427f0d:	cmp    eax,DWORD PTR [rsi+0x4]
  427f10:	jne    427f58 <xmlStrEqual@plt+0x24018>
  427f12:	movzx  eax,BYTE PTR [rsi]
  427f15:	cmp    BYTE PTR [rdi],al
  427f17:	jne    427f58 <xmlStrEqual@plt+0x24018>
  427f19:	movzx  eax,BYTE PTR [rsi+0x1]
  427f1d:	cmp    BYTE PTR [rdi+0x1],al
  427f20:	jne    427f58 <xmlStrEqual@plt+0x24018>
  427f22:	mov    rsi,QWORD PTR [rsi+0x8]
  427f26:	mov    rdi,QWORD PTR [rdi+0x8]
  427f2a:	call   425310 <xmlStrEqual@plt+0x213d0>
  427f2f:	test   eax,eax
  427f31:	je     427f40 <xmlStrEqual@plt+0x24000>
  427f33:	add    rsp,0x8
  427f37:	pop    rbx
  427f38:	pop    rbp
  427f39:	ret    
  427f3a:	nop    WORD PTR [rax+rax*1+0x0]
  427f40:	mov    rsi,QWORD PTR [rbp+0x10]
  427f44:	mov    rdi,QWORD PTR [rbx+0x10]
  427f48:	add    rsp,0x8
  427f4c:	pop    rbx
  427f4d:	pop    rbp
  427f4e:	jmp    425310 <xmlStrEqual@plt+0x213d0>
  427f53:	nop    DWORD PTR [rax+rax*1+0x0]
  427f58:	mov    eax,0xffffffff
  427f5d:	jmp    427f33 <xmlStrEqual@plt+0x23ff3>
  427f5f:	call   427d00 <xmlStrEqual@plt+0x23dc0>
  427f64:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  427f6f:	nop
  427f70:	push   rax
  427f71:	pop    rax
  427f72:	lea    rcx,[rip+0x27507]        # 44f480 <xmlStrEqual@plt+0x4b540>
  427f79:	mov    edx,0x2f6
  427f7e:	lea    rsi,[rip+0x27291]        # 44f216 <xmlStrEqual@plt+0x4b2d6>
  427f85:	lea    rdi,[rip+0x272bc]        # 44f248 <xmlStrEqual@plt+0x4b308>
  427f8c:	sub    rsp,0x8
  427f90:	call   403a60 <__assert_fail@plt>
  427f95:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  427fa0:	endbr64 
  427fa4:	push   rbx
  427fa5:	mov    DWORD PTR [rdi],0x340
  427fab:	mov    BYTE PTR [rdi+0x4],0x2
  427faf:	test   rsi,rsi
  427fb2:	je     427fe0 <xmlStrEqual@plt+0x240a0>
  427fb4:	movzx  eax,BYTE PTR [rsi+0x4]
  427fb8:	mov    rbx,rdi
  427fbb:	mov    BYTE PTR [rdi+0x5],al
  427fbe:	lea    rdi,[rdi+0xc]
  427fc2:	movbe  eax,DWORD PTR [rsi]
  427fc6:	mov    rsi,QWORD PTR [rsi+0x8]
  427fca:	mov    DWORD PTR [rdi-0x4],eax
  427fcd:	call   425190 <xmlStrEqual@plt+0x21250>
  427fd2:	lea    edx,[rax+0x4]
  427fd5:	movbe  WORD PTR [rbx+0x6],dx
  427fdb:	add    eax,0xc
  427fde:	pop    rbx
  427fdf:	ret    
  427fe0:	call   427f70 <xmlStrEqual@plt+0x24030>
  427fe5:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  427ff0:	push   rax
  427ff1:	pop    rax
  427ff2:	lea    rcx,[rip+0x27467]        # 44f460 <xmlStrEqual@plt+0x4b520>
  427ff9:	mov    edx,0x303
  427ffe:	lea    rsi,[rip+0x27211]        # 44f216 <xmlStrEqual@plt+0x4b2d6>
  428005:	lea    rdi,[rip+0x2723c]        # 44f248 <xmlStrEqual@plt+0x4b308>
  42800c:	sub    rsp,0x8
  428010:	call   403a60 <__assert_fail@plt>
  428015:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  428020:	push   rax
  428021:	pop    rax
  428022:	lea    rcx,[rip+0x27417]        # 44f440 <xmlStrEqual@plt+0x4b500>
  428029:	mov    edx,0x30a
  42802e:	lea    rsi,[rip+0x271e1]        # 44f216 <xmlStrEqual@plt+0x4b2d6>
  428035:	lea    rdi,[rip+0x2720c]        # 44f248 <xmlStrEqual@plt+0x4b308>
  42803c:	sub    rsp,0x8
  428040:	call   403a60 <__assert_fail@plt>
  428045:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  428050:	endbr64 
  428054:	push   rbp
  428055:	mov    edx,0xcccccccd
  42805a:	push   rbx
  42805b:	lea    rbx,[rip+0x4a1be]        # 472220 <xmlStrEqual@plt+0x6e2e0>
  428062:	sub    rsp,0x8
  428066:	mov    eax,DWORD PTR [rip+0x4a574]        # 4725e0 <xmlStrEqual@plt+0x6e6a0>
  42806c:	lea    ecx,[rax+0x1]
  42806f:	mov    eax,ecx
  428071:	mul    edx
  428073:	shr    edx,0x3
  428076:	lea    eax,[rdx+rdx*4]
  428079:	add    eax,eax
  42807b:	sub    ecx,eax
  42807d:	mov    edx,ecx
  42807f:	lea    rax,[rdx+rdx*2]
  428083:	shl    rax,0x5
  428087:	mov    DWORD PTR [rip+0x4a553],edx        # 4725e0 <xmlStrEqual@plt+0x6e6a0>
  42808d:	mov    BYTE PTR [rbx+rax*1],0x0
  428091:	test   rdi,rdi
  428094:	je     4280f4 <xmlStrEqual@plt+0x241b4>
  428096:	mov    rbp,rdi
  428099:	mov    rdi,QWORD PTR [rdi+0x8]
  42809d:	call   424d40 <xmlStrEqual@plt+0x20e00>
  4280a2:	push   rax
  4280a3:	mov    edx,DWORD PTR [rip+0x4a537]        # 4725e0 <xmlStrEqual@plt+0x6e6a0>
  4280a9:	lea    r8,[rip+0x2719c]        # 44f24c <xmlStrEqual@plt+0x4b30c>
  4280b0:	movzx  eax,BYTE PTR [rbp+0x4]
  4280b4:	lea    rdi,[rdx+rdx*2]
  4280b8:	push   rax
  4280b9:	shl    rdi,0x5
  4280bd:	add    rdi,rbx
  4280c0:	mov    r9d,DWORD PTR [rbp+0x0]
  4280c4:	mov    rcx,0xffffffffffffffff
  4280cb:	mov    edx,0x1
  4280d0:	mov    esi,0x60
  4280d5:	xor    eax,eax
  4280d7:	call   403a40 <__snprintf_chk@plt>
  4280dc:	mov    eax,DWORD PTR [rip+0x4a4fe]        # 4725e0 <xmlStrEqual@plt+0x6e6a0>
  4280e2:	add    rsp,0x18
  4280e6:	lea    rax,[rax+rax*2]
  4280ea:	shl    rax,0x5
  4280ee:	add    rax,rbx
  4280f1:	pop    rbx
  4280f2:	pop    rbp
  4280f3:	ret    
  4280f4:	call   428020 <xmlStrEqual@plt+0x240e0>
  4280f9:	nop    DWORD PTR [rax+0x0]
  428100:	endbr64 
  428104:	sub    rsp,0x8
  428108:	test   rdi,rdi
  42810b:	je     42811e <xmlStrEqual@plt+0x241de>
  42810d:	mov    rdi,QWORD PTR [rdi+0x8]
  428111:	call   424cc0 <xmlStrEqual@plt+0x20d80>
  428116:	add    eax,0xc
  428119:	add    rsp,0x8
  42811d:	ret    
  42811e:	call   428020 <xmlStrEqual@plt+0x240e0>
  428123:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  42812e:	xchg   ax,ax
  428130:	endbr64 
  428134:	push   rbx
  428135:	test   rdi,rdi
  428138:	je     42814f <xmlStrEqual@plt+0x2420f>
  42813a:	mov    rbx,rdi
  42813d:	mov    rdi,QWORD PTR [rdi+0x8]
  428141:	call   424bf0 <xmlStrEqual@plt+0x20cb0>
  428146:	mov    rdi,rbx
  428149:	pop    rbx
  42814a:	jmp    4037b0 <free@plt>
  42814f:	call   428020 <xmlStrEqual@plt+0x240e0>
  428154:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  42815f:	nop
  428160:	endbr64 
  428164:	test   rdi,rdi
  428167:	je     428196 <xmlStrEqual@plt+0x24256>
  428169:	mov    eax,DWORD PTR [rdi]
  42816b:	test   rsi,rsi
  42816e:	je     428196 <xmlStrEqual@plt+0x24256>
  428170:	cmp    eax,DWORD PTR [rsi]
  428172:	je     428180 <xmlStrEqual@plt+0x24240>
  428174:	setbe  al
  428177:	movzx  eax,al
  42817a:	inc    eax
  42817c:	ret    
  42817d:	nop    DWORD PTR [rax]
  428180:	movzx  eax,BYTE PTR [rsi+0x4]
  428184:	cmp    BYTE PTR [rdi+0x4],al
  428187:	jne    428174 <xmlStrEqual@plt+0x24234>
  428189:	mov    rsi,QWORD PTR [rsi+0x8]
  42818d:	mov    rdi,QWORD PTR [rdi+0x8]
  428191:	jmp    425310 <xmlStrEqual@plt+0x213d0>
  428196:	push   rax
  428197:	call   427ff0 <xmlStrEqual@plt+0x240b0>
  42819c:	nop    DWORD PTR [rax+0x0]
  4281a0:	push   rax
  4281a1:	pop    rax
  4281a2:	lea    rcx,[rip+0x27277]        # 44f420 <xmlStrEqual@plt+0x4b4e0>
  4281a9:	mov    edx,0x311
  4281ae:	lea    rsi,[rip+0x27061]        # 44f216 <xmlStrEqual@plt+0x4b2d6>
  4281b5:	lea    rdi,[rip+0x270a4]        # 44f260 <xmlStrEqual@plt+0x4b320>
  4281bc:	sub    rsp,0x8
  4281c0:	call   403a60 <__assert_fail@plt>
  4281c5:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4281d0:	endbr64 
  4281d4:	push   r12
  4281d6:	mov    r12,rsi
  4281d9:	push   rbp
  4281da:	push   rbx
  4281db:	mov    rbx,rdi
  4281de:	mov    edi,0x10
  4281e3:	call   434fe0 <xmlStrEqual@plt+0x310a0>
  4281e8:	mov    rbp,rax
  4281eb:	xor    eax,eax
  4281ed:	call   424be0 <xmlStrEqual@plt+0x20ca0>
  4281f2:	mov    QWORD PTR [rbp+0x8],rax
  4281f6:	mov    QWORD PTR [r12],rbp
  4281fa:	movzx  eax,BYTE PTR [rbx+0x5]
  4281fe:	mov    BYTE PTR [rbp+0x4],al
  428201:	mov    rax,QWORD PTR [r12]
  428205:	movbe  edx,DWORD PTR [rbx+0x8]
  42820a:	test   rax,rax
  42820d:	je     428226 <xmlStrEqual@plt+0x242e6>
  42820f:	mov    DWORD PTR [rax],edx
  428211:	mov    rsi,QWORD PTR [rax+0x8]
  428215:	lea    rdi,[rbx+0xc]
  428219:	call   425230 <xmlStrEqual@plt+0x212f0>
  42821e:	pop    rbx
  42821f:	pop    rbp
  428220:	add    eax,0xc
  428223:	pop    r12
  428225:	ret    
  428226:	call   4281a0 <xmlStrEqual@plt+0x24260>
  42822b:	nop    DWORD PTR [rax+rax*1+0x0]
  428230:	push   rax
  428231:	pop    rax
  428232:	lea    rcx,[rip+0x27167]        # 44f3a0 <xmlStrEqual@plt+0x4b460>
  428239:	mov    edx,0x3c2
  42823e:	lea    rsi,[rip+0x26fd1]        # 44f216 <xmlStrEqual@plt+0x4b2d6>
  428245:	lea    rdi,[rip+0x27019]        # 44f265 <xmlStrEqual@plt+0x4b325>
  42824c:	sub    rsp,0x8
  428250:	call   403a60 <__assert_fail@plt>
  428255:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  428260:	push   rax
  428261:	pop    rax
  428262:	lea    rcx,[rip+0x27117]        # 44f380 <xmlStrEqual@plt+0x4b440>
  428269:	mov    edx,0x3cd
  42826e:	lea    rsi,[rip+0x26fa1]        # 44f216 <xmlStrEqual@plt+0x4b2d6>
  428275:	lea    rdi,[rip+0x26fe9]        # 44f265 <xmlStrEqual@plt+0x4b325>
  42827c:	sub    rsp,0x8
  428280:	call   403a60 <__assert_fail@plt>
  428285:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  428290:	push   rax
  428291:	pop    rax
  428292:	lea    rcx,[rip+0x270c7]        # 44f360 <xmlStrEqual@plt+0x4b420>
  428299:	mov    edx,0x3d7
  42829e:	lea    rsi,[rip+0x26f71]        # 44f216 <xmlStrEqual@plt+0x4b2d6>
  4282a5:	lea    rdi,[rip+0x26fb9]        # 44f265 <xmlStrEqual@plt+0x4b325>
  4282ac:	sub    rsp,0x8
  4282b0:	call   403a60 <__assert_fail@plt>
  4282b5:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4282c0:	push   rax
  4282c1:	pop    rax
  4282c2:	lea    rcx,[rip+0x27077]        # 44f340 <xmlStrEqual@plt+0x4b400>
  4282c9:	mov    edx,0x3e1
  4282ce:	lea    rsi,[rip+0x26f41]        # 44f216 <xmlStrEqual@plt+0x4b2d6>
  4282d5:	lea    rdi,[rip+0x26f89]        # 44f265 <xmlStrEqual@plt+0x4b325>
  4282dc:	sub    rsp,0x8
  4282e0:	call   403a60 <__assert_fail@plt>
  4282e5:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4282f0:	push   rax
  4282f1:	pop    rax
  4282f2:	lea    rcx,[rip+0x27027]        # 44f320 <xmlStrEqual@plt+0x4b3e0>
  4282f9:	mov    edx,0x3eb
  4282fe:	lea    rsi,[rip+0x26f11]        # 44f216 <xmlStrEqual@plt+0x4b2d6>
  428305:	lea    rdi,[rip+0x26f59]        # 44f265 <xmlStrEqual@plt+0x4b325>
  42830c:	sub    rsp,0x8
  428310:	call   403a60 <__assert_fail@plt>
  428315:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  428320:	endbr64 
  428324:	push   r12
  428326:	mov    r12,rsi
  428329:	mov    esi,0x18
  42832e:	push   rbp
  42832f:	push   rbx
  428330:	mov    rbx,rdi
  428333:	mov    edi,0x1
  428338:	call   403a80 <calloc@plt>
  42833d:	mov    rbp,rax
  428340:	xor    eax,eax
  428342:	call   424be0 <xmlStrEqual@plt+0x20ca0>
  428347:	movzx  edx,BYTE PTR [rbx+0x9]
  42834b:	movzx  ecx,BYTE PTR [rbx+0x8]
  42834f:	and    edx,0x7f
  428352:	shl    rdx,0x8
  428356:	mov    QWORD PTR [r12],rbp
  42835a:	or     rdx,rcx
  42835d:	movzx  ecx,BYTE PTR [rbx+0x9]
  428361:	mov    WORD PTR [rbp+0x2],dx
  428365:	movzx  edx,BYTE PTR [rbx+0xd]
  428369:	shr    cl,0x7
  42836c:	movzx  esi,WORD PTR [rbx+0xa]
  428370:	mov    BYTE PTR [rbp+0x0],cl
  428373:	and    edx,0x7f
  428376:	movzx  ecx,BYTE PTR [rbx+0xc]
  42837a:	shl    rdx,0x8
  42837e:	mov    WORD PTR [rbp+0x4],si
  428382:	or     rdx,rcx
  428385:	movzx  esi,WORD PTR [rbx+0xe]
  428389:	movzx  ecx,BYTE PTR [rbx+0xd]
  42838d:	mov    WORD PTR [rbp+0x8],dx
  428391:	mov    edx,DWORD PTR [rbx+0x10]
  428394:	mov    WORD PTR [rbp+0xa],si
  428398:	shr    cl,0x7
  42839b:	lea    rdi,[rbx+0x14]
  42839f:	mov    rsi,rax
  4283a2:	mov    QWORD PTR [rbp+0x10],rax
  4283a6:	mov    BYTE PTR [rbp+0x6],cl
  4283a9:	mov    DWORD PTR [rbp+0xc],edx
  4283ac:	call   425230 <xmlStrEqual@plt+0x212f0>
  4283b1:	pop    rbx
  4283b2:	pop    rbp
  4283b3:	add    eax,0x14
  4283b6:	pop    r12
  4283b8:	ret    
  4283b9:	nop    DWORD PTR [rax+0x0]
  4283c0:	endbr64 
  4283c4:	push   r14
  4283c6:	push   r13
  4283c8:	mov    r13d,0x8
  4283ce:	push   r12
  4283d0:	push   rbp
  4283d1:	mov    rbp,rsi
  4283d4:	push   rbx
  4283d5:	mov    rbx,rdi
  4283d8:	mov    edi,0x8
  4283dd:	call   434fe0 <xmlStrEqual@plt+0x310a0>
  4283e2:	mov    rdi,0x426b20
  4283e9:	mov    r14,rax
  4283ec:	call   42dca0 <xmlStrEqual@plt+0x29d60>
  4283f1:	mov    QWORD PTR [r14],rax
  4283f4:	mov    QWORD PTR [rbp+0x0],r14
  4283f8:	movbe  bp,WORD PTR [rbx+0x6]
  4283fe:	add    rbx,0x8
  428402:	movzx  ebp,bp
  428405:	test   ebp,ebp
  428407:	jne    42842f <xmlStrEqual@plt+0x244ef>
  428409:	jmp    42846e <xmlStrEqual@plt+0x2452e>
  42840b:	nop    DWORD PTR [rax+rax*1+0x0]
  428410:	sub    ebp,0x4
  428413:	mov    rsi,QWORD PTR [r14]
  428416:	movsxd rdx,eax
  428419:	sub    ebp,eax
  42841b:	mov    rdi,r12
  42841e:	add    rbx,rdx
  428421:	lea    r13d,[rax+r13*1+0x4]
  428426:	call   42de80 <xmlStrEqual@plt+0x29f40>
  42842b:	test   ebp,ebp
  42842d:	jle    428480 <xmlStrEqual@plt+0x24540>
  42842f:	mov    edi,0x10
  428434:	call   434fe0 <xmlStrEqual@plt+0x310a0>
  428439:	mov    r12,rax
  42843c:	movzx  eax,BYTE PTR [rbx+0x3]
  428440:	add    rbx,0x4
  428444:	mov    BYTE PTR [r12+0x8],al
  428449:	xor    eax,eax
  42844b:	call   424be0 <xmlStrEqual@plt+0x20ca0>
  428450:	mov    QWORD PTR [r12],rax
  428454:	mov    rsi,rax
  428457:	mov    rdi,rbx
  42845a:	call   425230 <xmlStrEqual@plt+0x212f0>
  42845f:	test   eax,eax
  428461:	jg     428410 <xmlStrEqual@plt+0x244d0>
  428463:	mov    rdi,QWORD PTR [r14]
  428466:	xor    r13d,r13d
  428469:	call   42e2b0 <xmlStrEqual@plt+0x2a370>
  42846e:	pop    rbx
  42846f:	pop    rbp
  428470:	pop    r12
  428472:	mov    eax,r13d
  428475:	pop    r13
  428477:	pop    r14
  428479:	ret    
  42847a:	nop    WORD PTR [rax+rax*1+0x0]
  428480:	je     42846e <xmlStrEqual@plt+0x2452e>
  428482:	mov    rax,0x469e3c
  428489:	mov    eax,DWORD PTR [rax]
  42848b:	test   eax,eax
  42848d:	jle    42846e <xmlStrEqual@plt+0x2452e>
  42848f:	lea    rsi,[rip+0x26a62]        # 44eef8 <xmlStrEqual@plt+0x4afb8>
  428496:	mov    edi,0x5
  42849b:	xor    eax,eax
  42849d:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  4284a2:	jmp    42846e <xmlStrEqual@plt+0x2452e>
  4284a4:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4284af:	nop
  4284b0:	endbr64 
  4284b4:	push   r12
  4284b6:	mov    r12,rsi
  4284b9:	push   rbp
  4284ba:	mov    rbp,rdi
  4284bd:	push   rbx
  4284be:	cmp    QWORD PTR [rdi],0x0
  4284c2:	je     428500 <xmlStrEqual@plt+0x245c0>
  4284c4:	mov    rax,QWORD PTR [r12]
  4284c8:	mov    rbx,QWORD PTR [rax+0x8]
  4284cc:	cmp    rax,rbx
  4284cf:	je     4284fa <xmlStrEqual@plt+0x245ba>
  4284d1:	nop    DWORD PTR [rax+0x0]
  4284d8:	mov    rdi,QWORD PTR [rbx+0x10]
  4284dc:	call   425060 <xmlStrEqual@plt+0x21120>
  4284e1:	mov    rdx,QWORD PTR [rbp+0x0]
  4284e5:	mov    rdi,rax
  4284e8:	mov    rsi,QWORD PTR [rdx]
  4284eb:	call   42de80 <xmlStrEqual@plt+0x29f40>
  4284f0:	mov    rbx,QWORD PTR [rbx+0x8]
  4284f4:	cmp    QWORD PTR [r12],rbx
  4284f8:	jne    4284d8 <xmlStrEqual@plt+0x24598>
  4284fa:	pop    rbx
  4284fb:	pop    rbp
  4284fc:	pop    r12
  4284fe:	ret    
  4284ff:	nop
  428500:	mov    edi,0x8
  428505:	call   434fe0 <xmlStrEqual@plt+0x310a0>
  42850a:	mov    rdi,0x424bf0
  428511:	mov    rbx,rax
  428514:	call   42dca0 <xmlStrEqual@plt+0x29d60>
  428519:	mov    QWORD PTR [rbx],rax
  42851c:	mov    QWORD PTR [rbp+0x0],rbx
  428520:	jmp    4284c4 <xmlStrEqual@plt+0x24584>
  428522:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  42852d:	nop    DWORD PTR [rax]
  428530:	endbr64 
  428534:	push   r15
  428536:	mov    r15,rdi
  428539:	push   r14
  42853b:	push   r13
  42853d:	push   r12
  42853f:	push   rbp
  428540:	push   rbx
  428541:	sub    rsp,0x8
  428545:	mov    r14,QWORD PTR [rsi]
  428548:	test   r14,r14
  42854b:	je     4285e0 <xmlStrEqual@plt+0x246a0>
  428551:	movbe  r12w,WORD PTR [r15+0x6]
  428558:	lea    r13,[r15+0x8]
  42855c:	movzx  r12d,r12w
  428560:	test   r12d,r12d
  428563:	jne    42859a <xmlStrEqual@plt+0x2465a>
  428565:	jmp    428601 <xmlStrEqual@plt+0x246c1>
  42856a:	nop    WORD PTR [rax+rax*1+0x0]
  428570:	mov    rsi,rax
  428573:	mov    rdi,r13
  428576:	call   425230 <xmlStrEqual@plt+0x212f0>
  42857b:	mov    rsi,QWORD PTR [r14]
  42857e:	mov    ebp,eax
  428580:	mov    rdi,rbx
  428583:	call   42de80 <xmlStrEqual@plt+0x29f40>
  428588:	test   ebp,ebp
  42858a:	jle    4285a9 <xmlStrEqual@plt+0x24669>
  42858c:	movsxd rax,ebp
  42858f:	sub    r12d,ebp
  428592:	add    r13,rax
  428595:	test   r12d,r12d
  428598:	jle    4285c8 <xmlStrEqual@plt+0x24688>
  42859a:	xor    eax,eax
  42859c:	call   424be0 <xmlStrEqual@plt+0x20ca0>
  4285a1:	mov    rbx,rax
  4285a4:	test   rax,rax
  4285a7:	jne    428570 <xmlStrEqual@plt+0x24630>
  4285a9:	mov    rdi,r14
  4285ac:	call   4271f0 <xmlStrEqual@plt+0x232b0>
  4285b1:	xor    eax,eax
  4285b3:	add    rsp,0x8
  4285b7:	pop    rbx
  4285b8:	pop    rbp
  4285b9:	pop    r12
  4285bb:	pop    r13
  4285bd:	pop    r14
  4285bf:	pop    r15
  4285c1:	ret    
  4285c2:	nop    WORD PTR [rax+rax*1+0x0]
  4285c8:	add    rsp,0x8
  4285cc:	pop    rbx
  4285cd:	pop    rbp
  4285ce:	pop    r12
  4285d0:	mov    eax,r13d
  4285d3:	pop    r13
  4285d5:	pop    r14
  4285d7:	sub    eax,r15d
  4285da:	pop    r15
  4285dc:	ret    
  4285dd:	nop    DWORD PTR [rax]
  4285e0:	mov    edi,0x8
  4285e5:	call   434fe0 <xmlStrEqual@plt+0x310a0>
  4285ea:	mov    rdi,0x424bf0
  4285f1:	mov    r14,rax
  4285f4:	call   42dca0 <xmlStrEqual@plt+0x29d60>
  4285f9:	mov    QWORD PTR [r14],rax
  4285fc:	jmp    428551 <xmlStrEqual@plt+0x24611>
  428601:	mov    eax,0x8
  428606:	jmp    4285b3 <xmlStrEqual@plt+0x24673>
  428608:	nop    DWORD PTR [rax+rax*1+0x0]
  428610:	endbr64 
  428614:	push   r12
  428616:	push   rbp
  428617:	push   rbx
  428618:	test   rsi,rsi
  42861b:	je     4286c3 <xmlStrEqual@plt+0x24783>
  428621:	mov    rbp,QWORD PTR [rdi]
  428624:	mov    r12,rdi
  428627:	mov    rbx,rsi
  42862a:	test   rbp,rbp
  42862d:	je     428698 <xmlStrEqual@plt+0x24758>
  42862f:	movzx  eax,BYTE PTR [rbx]
  428632:	mov    BYTE PTR [rbp+0x0],al
  428635:	movzx  eax,WORD PTR [rbx+0x2]
  428639:	mov    WORD PTR [rbp+0x2],ax
  42863d:	movzx  eax,BYTE PTR [rbx+0x4]
  428641:	mov    BYTE PTR [rbp+0x4],al
  428644:	movzx  eax,BYTE PTR [rbx+0x5]
  428648:	mov    BYTE PTR [rbp+0x5],al
  42864b:	mov    rax,QWORD PTR [r12]
  42864f:	test   rax,rax
  428652:	je     4286be <xmlStrEqual@plt+0x2477e>
  428654:	movzx  edx,BYTE PTR [rbx+0x6]
  428658:	mov    BYTE PTR [rax+0x6],dl
  42865b:	movzx  edx,WORD PTR [rbx+0x8]
  42865f:	mov    WORD PTR [rax+0x8],dx
  428663:	movzx  edx,BYTE PTR [rbx+0xa]
  428667:	mov    BYTE PTR [rax+0xa],dl
  42866a:	movzx  edx,BYTE PTR [rbx+0xb]
  42866e:	mov    BYTE PTR [rax+0xb],dl
  428671:	mov    rax,QWORD PTR [r12]
  428675:	mov    edx,DWORD PTR [rbx+0xc]
  428678:	test   rax,rax
  42867b:	je     4286e2 <xmlStrEqual@plt+0x247a2>
  42867d:	mov    DWORD PTR [rax+0xc],edx
  428680:	mov    rsi,QWORD PTR [rbx+0x10]
  428684:	mov    rdi,QWORD PTR [rax+0x10]
  428688:	pop    rbx
  428689:	pop    rbp
  42868a:	pop    r12
  42868c:	jmp    424fd0 <xmlStrEqual@plt+0x21090>
  428691:	nop    DWORD PTR [rax+0x0]
  428698:	mov    esi,0x18
  42869d:	mov    edi,0x1
  4286a2:	call   403a80 <calloc@plt>
  4286a7:	mov    rbp,rax
  4286aa:	xor    eax,eax
  4286ac:	call   424be0 <xmlStrEqual@plt+0x20ca0>
  4286b1:	mov    QWORD PTR [rbp+0x10],rax
  4286b5:	mov    QWORD PTR [r12],rbp
  4286b9:	jmp    42862f <xmlStrEqual@plt+0x246ef>
  4286be:	call   4282c0 <xmlStrEqual@plt+0x24380>
  4286c3:	lea    rcx,[rip+0x26be6]        # 44f2b0 <xmlStrEqual@plt+0x4b370>
  4286ca:	mov    edx,0x43e
  4286cf:	lea    rsi,[rip+0x26b40]        # 44f216 <xmlStrEqual@plt+0x4b2d6>
  4286d6:	lea    rdi,[rip+0x26b55]        # 44f232 <xmlStrEqual@plt+0x4b2f2>
  4286dd:	call   403a60 <__assert_fail@plt>
  4286e2:	call   4282f0 <xmlStrEqual@plt+0x243b0>
  4286e7:	nop    WORD PTR [rax+rax*1+0x0]
  4286f0:	endbr64 
  4286f4:	push   r12
  4286f6:	mov    r12,rsi
  4286f9:	mov    esi,0x18
  4286fe:	push   rbp
  4286ff:	push   rbx
  428700:	mov    rbx,rdi
  428703:	mov    edi,0x1
  428708:	call   403a80 <calloc@plt>
  42870d:	mov    rbp,rax
  428710:	xor    eax,eax
  428712:	call   424be0 <xmlStrEqual@plt+0x20ca0>
  428717:	mov    QWORD PTR [rbp+0x8],rax
  42871b:	xor    eax,eax
  42871d:	add    rbx,0x10
  428721:	call   424be0 <xmlStrEqual@plt+0x20ca0>
  428726:	mov    QWORD PTR [r12],rbp
  42872a:	mov    QWORD PTR [rbp+0x10],rax
  42872e:	movbe  eax,DWORD PTR [rbx-0x8]
  428733:	mov    rsi,QWORD PTR [rbp+0x8]
  428737:	mov    DWORD PTR [rbp+0x4],eax
  42873a:	movzx  eax,WORD PTR [rbx-0x2]
  42873e:	mov    rdi,rbx
  428741:	mov    WORD PTR [rbp+0x0],ax
  428745:	call   425230 <xmlStrEqual@plt+0x212f0>
  42874a:	movsxd rdi,eax
  42874d:	mov    rax,QWORD PTR [r12]
  428751:	mov    rbp,rdi
  428754:	add    rdi,rbx
  428757:	test   rax,rax
  42875a:	je     42876e <xmlStrEqual@plt+0x2482e>
  42875c:	mov    rsi,QWORD PTR [rax+0x10]
  428760:	call   425230 <xmlStrEqual@plt+0x212f0>
  428765:	pop    rbx
  428766:	lea    eax,[rbp+rax*1+0x10]
  42876a:	pop    rbp
  42876b:	pop    r12
  42876d:	ret    
  42876e:	call   427c70 <xmlStrEqual@plt+0x23d30>
  428773:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  42877e:	xchg   ax,ax
  428780:	endbr64 
  428784:	push   r14
  428786:	push   r13
  428788:	push   r12
  42878a:	mov    r12,rsi
  42878d:	push   rbp
  42878e:	push   rbx
  42878f:	mov    rbx,rdi
  428792:	mov    edi,0x30
  428797:	sub    rsp,0x10
  42879b:	call   434fe0 <xmlStrEqual@plt+0x310a0>
  4287a0:	mov    rbp,rax
  4287a3:	xor    eax,eax
  4287a5:	call   424be0 <xmlStrEqual@plt+0x20ca0>
  4287aa:	mov    QWORD PTR [rbp+0x18],rax
  4287ae:	xor    eax,eax
  4287b0:	add    rbx,0xc
  4287b4:	call   424be0 <xmlStrEqual@plt+0x20ca0>
  4287b9:	mov    QWORD PTR [rbp+0x8],rax
  4287bd:	xor    eax,eax
  4287bf:	call   424be0 <xmlStrEqual@plt+0x20ca0>
  4287c4:	mov    QWORD PTR [rbp+0x20],rax
  4287c8:	mov    rdi,0x424bf0
  4287cf:	call   42dca0 <xmlStrEqual@plt+0x29d60>
  4287d4:	mov    QWORD PTR [rbp+0x28],rax
  4287d8:	movzx  eax,WORD PTR [rbx-0x4]
  4287dc:	movzx  r13d,WORD PTR [rbx-0x6]
  4287e1:	mov    QWORD PTR [r12],rbp
  4287e5:	mov    WORD PTR [rbp+0x10],ax
  4287e9:	movzx  eax,WORD PTR [rbx-0x2]
  4287ed:	mov    rsi,QWORD PTR [rbp+0x8]
  4287f1:	mov    WORD PTR [rbp+0x0],ax
  4287f5:	mov    rdi,rbx
  4287f8:	call   425230 <xmlStrEqual@plt+0x212f0>
  4287fd:	test   eax,eax
  4287ff:	jle    428898 <xmlStrEqual@plt+0x24958>
  428805:	mov    r12d,eax
  428808:	cdqe   
  42880a:	add    rbx,rax
  42880d:	mov    rsi,QWORD PTR [rbp+0x18]
  428811:	mov    rdi,rbx
  428814:	call   425230 <xmlStrEqual@plt+0x212f0>
  428819:	mov    r14d,eax
  42881c:	test   eax,eax
  42881e:	jle    428898 <xmlStrEqual@plt+0x24958>
  428820:	cdqe   
  428822:	add    rbx,rax
  428825:	mov    rsi,QWORD PTR [rbp+0x20]
  428829:	mov    rdi,rbx
  42882c:	call   425230 <xmlStrEqual@plt+0x212f0>
  428831:	test   eax,eax
  428833:	jle    428898 <xmlStrEqual@plt+0x24958>
  428835:	mov    WORD PTR [rsp+0xe],r13w
  42883b:	lea    r12d,[r12+r14*1+0xc]
  428840:	add    r12d,eax
  428843:	movbe  r13w,WORD PTR [rsp+0xe]
  42884b:	cdqe   
  42884d:	movzx  r13d,r13w
  428851:	add    r13d,0x8
  428855:	add    rbx,rax
  428858:	cmp    r13d,r12d
  42885b:	jg     428879 <xmlStrEqual@plt+0x24939>
  42885d:	jmp    4288c7 <xmlStrEqual@plt+0x24987>
  42885f:	nop
  428860:	mov    rsi,QWORD PTR [rbp+0x28]
  428864:	add    r12d,eax
  428867:	mov    rdi,r14
  42886a:	cdqe   
  42886c:	add    rbx,rax
  42886f:	call   42de80 <xmlStrEqual@plt+0x29f40>
  428874:	cmp    r13d,r12d
  428877:	jle    4288c7 <xmlStrEqual@plt+0x24987>
  428879:	xor    eax,eax
  42887b:	call   424be0 <xmlStrEqual@plt+0x20ca0>
  428880:	mov    rsi,rax
  428883:	mov    rdi,rbx
  428886:	mov    r14,rax
  428889:	call   425230 <xmlStrEqual@plt+0x212f0>
  42888e:	test   eax,eax
  428890:	jg     428860 <xmlStrEqual@plt+0x24920>
  428892:	nop    WORD PTR [rax+rax*1+0x0]
  428898:	mov    rdi,QWORD PTR [rbp+0x18]
  42889c:	xor    r12d,r12d
  42889f:	call   424bf0 <xmlStrEqual@plt+0x20cb0>
  4288a4:	mov    rdi,QWORD PTR [rbp+0x8]
  4288a8:	call   424bf0 <xmlStrEqual@plt+0x20cb0>
  4288ad:	mov    rdi,QWORD PTR [rbp+0x20]
  4288b1:	call   424bf0 <xmlStrEqual@plt+0x20cb0>
  4288b6:	mov    rdi,QWORD PTR [rbp+0x28]
  4288ba:	call   42e2b0 <xmlStrEqual@plt+0x2a370>
  4288bf:	mov    rdi,rbp
  4288c2:	call   4037b0 <free@plt>
  4288c7:	add    rsp,0x10
  4288cb:	pop    rbx
  4288cc:	pop    rbp
  4288cd:	mov    eax,r12d
  4288d0:	pop    r12
  4288d2:	pop    r13
  4288d4:	pop    r14
  4288d6:	ret    
  4288d7:	nop    WORD PTR [rax+rax*1+0x0]
  4288e0:	endbr64 
  4288e4:	push   r12
  4288e6:	push   rbp
  4288e7:	mov    rbp,rdi
  4288ea:	push   rbx
  4288eb:	mov    rbx,rsi
  4288ee:	cmp    QWORD PTR [rdi],0x0
  4288f2:	je     428950 <xmlStrEqual@plt+0x24a10>
  4288f4:	test   rbx,rbx
  4288f7:	je     428983 <xmlStrEqual@plt+0x24a43>
  4288fd:	mov    edx,DWORD PTR [rbx+0x4]
  428900:	mov    rax,QWORD PTR [rbp+0x0]
  428904:	mov    DWORD PTR [rax+0x4],edx
  428907:	movzx  edx,BYTE PTR [rbx]
  42890a:	mov    BYTE PTR [rax],dl
  42890c:	mov    rax,QWORD PTR [rbp+0x0]
  428910:	movzx  edx,BYTE PTR [rbx+0x1]
  428914:	test   rax,rax
  428917:	je     428992 <xmlStrEqual@plt+0x24a52>
  428919:	mov    BYTE PTR [rax+0x1],dl
  42891c:	mov    rax,QWORD PTR [rbp+0x0]
  428920:	mov    rsi,QWORD PTR [rbx+0x8]
  428924:	test   rax,rax
  428927:	je     42898d <xmlStrEqual@plt+0x24a4d>
  428929:	mov    rdi,QWORD PTR [rax+0x8]
  42892d:	call   424fd0 <xmlStrEqual@plt+0x21090>
  428932:	mov    rax,QWORD PTR [rbp+0x0]
  428936:	mov    rsi,QWORD PTR [rbx+0x10]
  42893a:	test   rax,rax
  42893d:	je     428988 <xmlStrEqual@plt+0x24a48>
  42893f:	pop    rbx
  428940:	pop    rbp
  428941:	mov    rdi,QWORD PTR [rax+0x10]
  428945:	pop    r12
  428947:	jmp    424fd0 <xmlStrEqual@plt+0x21090>
  42894c:	nop    DWORD PTR [rax+0x0]
  428950:	mov    esi,0x18
  428955:	mov    edi,0x1
  42895a:	call   403a80 <calloc@plt>
  42895f:	mov    r12,rax
  428962:	xor    eax,eax
  428964:	call   424be0 <xmlStrEqual@plt+0x20ca0>
  428969:	mov    QWORD PTR [r12+0x8],rax
  42896e:	xor    eax,eax
  428970:	call   424be0 <xmlStrEqual@plt+0x20ca0>
  428975:	mov    QWORD PTR [r12+0x10],rax
  42897a:	mov    QWORD PTR [rbp+0x0],r12
  42897e:	jmp    4288f4 <xmlStrEqual@plt+0x249b4>
  428983:	call   427d00 <xmlStrEqual@plt+0x23dc0>
  428988:	call   427c70 <xmlStrEqual@plt+0x23d30>
  42898d:	call   427b60 <xmlStrEqual@plt+0x23c20>
  428992:	call   427b00 <xmlStrEqual@plt+0x23bc0>
  428997:	nop    WORD PTR [rax+rax*1+0x0]
  4289a0:	endbr64 
  4289a4:	push   r12
  4289a6:	mov    r12,rsi
  4289a9:	push   rbp
  4289aa:	push   rbx
  4289ab:	mov    rbp,QWORD PTR [rdi]
  4289ae:	test   rbp,rbp
  4289b1:	je     428a38 <xmlStrEqual@plt+0x24af8>
  4289b7:	movzx  eax,WORD PTR [r12]
  4289bc:	mov    rsi,QWORD PTR [r12+0x8]
  4289c1:	mov    WORD PTR [rbp+0x0],ax
  4289c5:	movzx  eax,WORD PTR [r12+0x10]
  4289cb:	mov    rdi,QWORD PTR [rbp+0x8]
  4289cf:	mov    WORD PTR [rbp+0x10],ax
  4289d3:	call   424fd0 <xmlStrEqual@plt+0x21090>
  4289d8:	mov    rsi,QWORD PTR [r12+0x18]
  4289dd:	mov    rdi,QWORD PTR [rbp+0x18]
  4289e1:	call   424fd0 <xmlStrEqual@plt+0x21090>
  4289e6:	mov    rsi,QWORD PTR [r12+0x20]
  4289eb:	mov    rdi,QWORD PTR [rbp+0x20]
  4289ef:	call   424fd0 <xmlStrEqual@plt+0x21090>
  4289f4:	mov    rdi,QWORD PTR [rbp+0x28]
  4289f8:	call   42e260 <xmlStrEqual@plt+0x2a320>
  4289fd:	mov    rax,QWORD PTR [r12+0x28]
  428a02:	mov    rbx,QWORD PTR [rax+0x8]
  428a06:	cmp    rax,rbx
  428a09:	je     428a30 <xmlStrEqual@plt+0x24af0>
  428a0b:	nop    DWORD PTR [rax+rax*1+0x0]
  428a10:	mov    rdi,QWORD PTR [rbx+0x10]
  428a14:	call   425060 <xmlStrEqual@plt+0x21120>
  428a19:	mov    rsi,QWORD PTR [rbp+0x28]
  428a1d:	mov    rdi,rax
  428a20:	call   42dcf0 <xmlStrEqual@plt+0x29db0>
  428a25:	mov    rbx,QWORD PTR [rbx+0x8]
  428a29:	cmp    QWORD PTR [r12+0x28],rbx
  428a2e:	jne    428a10 <xmlStrEqual@plt+0x24ad0>
  428a30:	pop    rbx
  428a31:	pop    rbp
  428a32:	pop    r12
  428a34:	ret    
  428a35:	nop    DWORD PTR [rax]
  428a38:	mov    rbx,rdi
  428a3b:	mov    edi,0x30
  428a40:	call   434fe0 <xmlStrEqual@plt+0x310a0>
  428a45:	mov    rbp,rax
  428a48:	xor    eax,eax
  428a4a:	call   424be0 <xmlStrEqual@plt+0x20ca0>
  428a4f:	mov    QWORD PTR [rbp+0x18],rax
  428a53:	xor    eax,eax
  428a55:	call   424be0 <xmlStrEqual@plt+0x20ca0>
  428a5a:	mov    QWORD PTR [rbp+0x8],rax
  428a5e:	xor    eax,eax
  428a60:	call   424be0 <xmlStrEqual@plt+0x20ca0>
  428a65:	mov    QWORD PTR [rbp+0x20],rax
  428a69:	mov    rdi,0x424bf0
  428a70:	call   42dca0 <xmlStrEqual@plt+0x29d60>
  428a75:	mov    QWORD PTR [rbp+0x28],rax
  428a79:	mov    QWORD PTR [rbx],rbp
  428a7c:	jmp    4289b7 <xmlStrEqual@plt+0x24a77>
  428a81:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  428a8c:	nop    DWORD PTR [rax+0x0]
  428a90:	endbr64 
  428a94:	mov    edi,0x10
  428a99:	jmp    434fe0 <xmlStrEqual@plt+0x310a0>
  428a9e:	xchg   ax,ax
  428aa0:	endbr64 
  428aa4:	push   rbp
  428aa5:	mov    ebp,edi
  428aa7:	mov    edi,0x10
  428aac:	push   rbx
  428aad:	sub    rsp,0x8
  428ab1:	call   434fe0 <xmlStrEqual@plt+0x310a0>
  428ab6:	test   rax,rax
  428ab9:	je     428b46 <xmlStrEqual@plt+0x24c06>
  428abf:	mov    rbx,rax
  428ac2:	movzx  eax,bpl
  428ac6:	mov    DWORD PTR [rbx],eax
  428ac8:	cmp    bpl,0x2
  428acc:	je     428b20 <xmlStrEqual@plt+0x24be0>
  428ace:	cmp    bpl,0x9
  428ad2:	je     428ae0 <xmlStrEqual@plt+0x24ba0>
  428ad4:	add    rsp,0x8
  428ad8:	mov    rax,rbx
  428adb:	pop    rbx
  428adc:	pop    rbp
  428add:	ret    
  428ade:	xchg   ax,ax
  428ae0:	mov    esi,0x18
  428ae5:	mov    edi,0x1
  428aea:	call   403a80 <calloc@plt>
  428aef:	mov    rbp,rax
  428af2:	xor    eax,eax
  428af4:	call   424be0 <xmlStrEqual@plt+0x20ca0>
  428af9:	mov    QWORD PTR [rbp+0x8],rax
  428afd:	xor    eax,eax
  428aff:	call   424be0 <xmlStrEqual@plt+0x20ca0>
  428b04:	mov    QWORD PTR [rbp+0x10],rax
  428b08:	mov    QWORD PTR [rbx+0x8],rbp
  428b0c:	add    rsp,0x8
  428b10:	mov    rax,rbx
  428b13:	pop    rbx
  428b14:	pop    rbp
  428b15:	ret    
  428b16:	nop    WORD PTR cs:[rax+rax*1+0x0]
  428b20:	mov    edi,0x10
  428b25:	call   434fe0 <xmlStrEqual@plt+0x310a0>
  428b2a:	mov    rbp,rax
  428b2d:	xor    eax,eax
  428b2f:	call   424be0 <xmlStrEqual@plt+0x20ca0>
  428b34:	mov    QWORD PTR [rbp+0x8],rax
  428b38:	mov    QWORD PTR [rbx+0x8],rbp
  428b3c:	add    rsp,0x8
  428b40:	mov    rax,rbx
  428b43:	pop    rbx
  428b44:	pop    rbp
  428b45:	ret    
  428b46:	call   427ad0 <xmlStrEqual@plt+0x23b90>
  428b4b:	nop    DWORD PTR [rax+rax*1+0x0]
  428b50:	endbr64 
  428b54:	mov    rax,rdi
  428b57:	mov    rdi,QWORD PTR [rdi+0x8]
  428b5b:	test   rdi,rdi
  428b5e:	je     428b78 <xmlStrEqual@plt+0x24c38>
  428b60:	mov    edx,DWORD PTR [rax]
  428b62:	mov    rax,0x469d40
  428b69:	mov    rax,QWORD PTR [rax+rdx*8]
  428b6d:	test   rax,rax
  428b70:	je     428b78 <xmlStrEqual@plt+0x24c38>
  428b72:	jmp    rax
  428b74:	nop    DWORD PTR [rax+0x0]
  428b78:	ret    
  428b79:	nop    DWORD PTR [rax+0x0]
  428b80:	endbr64 
  428b84:	push   rbx
  428b85:	test   rdi,rdi
  428b88:	je     428bb2 <xmlStrEqual@plt+0x24c72>
  428b8a:	mov    edx,DWORD PTR [rdi]
  428b8c:	mov    rax,0x469d40
  428b93:	mov    rbx,rdi
  428b96:	mov    rax,QWORD PTR [rax+rdx*8]
  428b9a:	test   rax,rax
  428b9d:	je     428bb0 <xmlStrEqual@plt+0x24c70>
  428b9f:	mov    rdi,QWORD PTR [rdi+0x8]
  428ba3:	call   rax
  428ba5:	mov    rdi,rbx
  428ba8:	pop    rbx
  428ba9:	jmp    4037b0 <free@plt>
  428bae:	xchg   ax,ax
  428bb0:	pop    rbx
  428bb1:	ret    
  428bb2:	lea    rcx,[rip+0x26baf]        # 44f768 <xmlStrEqual@plt+0x4b828>
  428bb9:	mov    edx,0xa4
  428bbe:	lea    rsi,[rip+0x26651]        # 44f216 <xmlStrEqual@plt+0x4b2d6>
  428bc5:	lea    rdi,[rip+0x2665e]        # 44f22a <xmlStrEqual@plt+0x4b2ea>
  428bcc:	call   403a60 <__assert_fail@plt>
  428bd1:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  428bdc:	nop    DWORD PTR [rax+0x0]
  428be0:	endbr64 
  428be4:	push   rbp
  428be5:	push   rbx
  428be6:	sub    rsp,0x8
  428bea:	test   rsi,rsi
  428bed:	je     428c9b <xmlStrEqual@plt+0x24d5b>
  428bf3:	cmp    QWORD PTR [rsi+0x8],0x0
  428bf8:	mov    rbp,rdi
  428bfb:	mov    rbx,rsi
  428bfe:	je     428c08 <xmlStrEqual@plt+0x24cc8>
  428c00:	mov    rdi,rsi
  428c03:	call   428b50 <xmlStrEqual@plt+0x24c10>
  428c08:	movzx  ecx,BYTE PTR [rbp+0x4]
  428c0c:	mov    rax,0x469cc0
  428c13:	mov    rdx,rcx
  428c16:	mov    rax,QWORD PTR [rax+rcx*8]
  428c1a:	mov    DWORD PTR [rbx],ecx
  428c1c:	test   rax,rax
  428c1f:	je     428c78 <xmlStrEqual@plt+0x24d38>
  428c21:	lea    rsi,[rbx+0x8]
  428c25:	mov    rdi,rbp
  428c28:	call   rax
  428c2a:	movbe  dx,WORD PTR [rbp+0x6]
  428c30:	movsxd rsi,eax
  428c33:	movzx  ecx,dx
  428c36:	add    rcx,0x8
  428c3a:	cmp    rsi,rcx
  428c3d:	je     428c4d <xmlStrEqual@plt+0x24d0d>
  428c3f:	mov    rcx,0x469e3c
  428c46:	cmp    DWORD PTR [rcx],0x2
  428c49:	jg     428c58 <xmlStrEqual@plt+0x24d18>
  428c4b:	xor    eax,eax
  428c4d:	add    rsp,0x8
  428c51:	pop    rbx
  428c52:	pop    rbp
  428c53:	ret    
  428c54:	nop    DWORD PTR [rax+0x0]
  428c58:	mov    ecx,eax
  428c5a:	movzx  edx,dx
  428c5d:	xor    eax,eax
  428c5f:	lea    rsi,[rip+0x262fa]        # 44ef60 <xmlStrEqual@plt+0x4b020>
  428c66:	mov    edi,0x7
  428c6b:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  428c70:	xor    eax,eax
  428c72:	jmp    428c4d <xmlStrEqual@plt+0x24d0d>
  428c74:	nop    DWORD PTR [rax+0x0]
  428c78:	mov    rax,0x469e3c
  428c7f:	cmp    DWORD PTR [rax],0x2
  428c82:	jle    428c4b <xmlStrEqual@plt+0x24d0b>
  428c84:	xor    eax,eax
  428c86:	lea    rsi,[rip+0x2629b]        # 44ef28 <xmlStrEqual@plt+0x4afe8>
  428c8d:	mov    edi,0x7
  428c92:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  428c97:	xor    eax,eax
  428c99:	jmp    428c4d <xmlStrEqual@plt+0x24d0d>
  428c9b:	call   4278f0 <xmlStrEqual@plt+0x239b0>
  428ca0:	endbr64 
  428ca4:	test   rdi,rdi
  428ca7:	je     428cd0 <xmlStrEqual@plt+0x24d90>
  428ca9:	mov    edx,DWORD PTR [rdi]
  428cab:	mov    rax,0x469c40
  428cb2:	mov    rax,QWORD PTR [rax+rdx*8]
  428cb6:	test   rax,rax
  428cb9:	je     428cc8 <xmlStrEqual@plt+0x24d88>
  428cbb:	mov    rdi,QWORD PTR [rdi+0x8]
  428cbf:	jmp    rax
  428cc1:	nop    DWORD PTR [rax+0x0]
  428cc8:	lea    rax,[rip+0x2659a]        # 44f269 <xmlStrEqual@plt+0x4b329>
  428ccf:	ret    
  428cd0:	push   rax
  428cd1:	lea    rcx,[rip+0x26a78]        # 44f750 <xmlStrEqual@plt+0x4b810>
  428cd8:	mov    edx,0xd0
  428cdd:	lea    rsi,[rip+0x26532]        # 44f216 <xmlStrEqual@plt+0x4b2d6>
  428ce4:	lea    rdi,[rip+0x2653f]        # 44f22a <xmlStrEqual@plt+0x4b2ea>
  428ceb:	call   403a60 <__assert_fail@plt>
  428cf0:	endbr64 
  428cf4:	test   rdi,rdi
  428cf7:	je     428cfc <xmlStrEqual@plt+0x24dbc>
  428cf9:	mov    eax,DWORD PTR [rdi]
  428cfb:	ret    
  428cfc:	push   rax
  428cfd:	call   427a40 <xmlStrEqual@plt+0x23b00>
  428d02:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  428d0d:	nop    DWORD PTR [rax]
  428d10:	endbr64 
  428d14:	test   rdi,rdi
  428d17:	je     428d1e <xmlStrEqual@plt+0x24dde>
  428d19:	mov    rax,QWORD PTR [rdi+0x8]
  428d1d:	ret    
  428d1e:	push   rax
  428d1f:	lea    rcx,[rip+0x269ea]        # 44f710 <xmlStrEqual@plt+0x4b7d0>
  428d26:	mov    edx,0xe2
  428d2b:	lea    rsi,[rip+0x264e4]        # 44f216 <xmlStrEqual@plt+0x4b2d6>
  428d32:	lea    rdi,[rip+0x264f1]        # 44f22a <xmlStrEqual@plt+0x4b2ea>
  428d39:	call   403a60 <__assert_fail@plt>
  428d3e:	xchg   ax,ax
  428d40:	endbr64 
  428d44:	test   rdi,rdi
  428d47:	je     428d4e <xmlStrEqual@plt+0x24e0e>
  428d49:	mov    rax,QWORD PTR [rdi+0x8]
  428d4d:	ret    
  428d4e:	push   rax
  428d4f:	lea    rcx,[rip+0x2699a]        # 44f6f0 <xmlStrEqual@plt+0x4b7b0>
  428d56:	mov    edx,0xe9
  428d5b:	lea    rsi,[rip+0x264b4]        # 44f216 <xmlStrEqual@plt+0x4b2d6>
  428d62:	lea    rdi,[rip+0x264c1]        # 44f22a <xmlStrEqual@plt+0x4b2ea>
  428d69:	call   403a60 <__assert_fail@plt>
  428d6e:	xchg   ax,ax
  428d70:	endbr64 
  428d74:	test   rdi,rdi
  428d77:	je     428d7e <xmlStrEqual@plt+0x24e3e>
  428d79:	mov    rax,QWORD PTR [rdi+0x8]
  428d7d:	ret    
  428d7e:	push   rax
  428d7f:	lea    rcx,[rip+0x2694a]        # 44f6d0 <xmlStrEqual@plt+0x4b790>
  428d86:	mov    edx,0xf0
  428d8b:	lea    rsi,[rip+0x26484]        # 44f216 <xmlStrEqual@plt+0x4b2d6>
  428d92:	lea    rdi,[rip+0x26491]        # 44f22a <xmlStrEqual@plt+0x4b2ea>
  428d99:	call   403a60 <__assert_fail@plt>
  428d9e:	xchg   ax,ax
  428da0:	endbr64 
  428da4:	test   rdi,rdi
  428da7:	je     428dae <xmlStrEqual@plt+0x24e6e>
  428da9:	mov    rax,QWORD PTR [rdi+0x8]
  428dad:	ret    
  428dae:	push   rax
  428daf:	lea    rcx,[rip+0x268fa]        # 44f6b0 <xmlStrEqual@plt+0x4b770>
  428db6:	mov    edx,0xf7
  428dbb:	lea    rsi,[rip+0x26454]        # 44f216 <xmlStrEqual@plt+0x4b2d6>
  428dc2:	lea    rdi,[rip+0x26461]        # 44f22a <xmlStrEqual@plt+0x4b2ea>
  428dc9:	call   403a60 <__assert_fail@plt>
  428dce:	xchg   ax,ax
  428dd0:	endbr64 
  428dd4:	test   rdi,rdi
  428dd7:	je     428dde <xmlStrEqual@plt+0x24e9e>
  428dd9:	mov    rax,QWORD PTR [rdi+0x8]
  428ddd:	ret    
  428dde:	push   rax
  428ddf:	call   427a70 <xmlStrEqual@plt+0x23b30>
  428de4:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  428def:	nop
  428df0:	endbr64 
  428df4:	test   rdi,rdi
  428df7:	je     428e02 <xmlStrEqual@plt+0x24ec2>
  428df9:	xor    eax,eax
  428dfb:	cmp    DWORD PTR [rdi],0x9
  428dfe:	sete   al
  428e01:	ret    
  428e02:	push   rax
  428e03:	call   427a40 <xmlStrEqual@plt+0x23b00>
  428e08:	nop    DWORD PTR [rax+rax*1+0x0]
  428e10:	endbr64 
  428e14:	test   rdi,rdi
  428e17:	je     428e22 <xmlStrEqual@plt+0x24ee2>
  428e19:	xor    eax,eax
  428e1b:	cmp    DWORD PTR [rdi],0x2
  428e1e:	sete   al
  428e21:	ret    
  428e22:	push   rax
  428e23:	call   427a40 <xmlStrEqual@plt+0x23b00>
  428e28:	nop    DWORD PTR [rax+rax*1+0x0]
  428e30:	endbr64 
  428e34:	push   r12
  428e36:	push   rbp
  428e37:	push   rbx
  428e38:	test   rdi,rdi
  428e3b:	je     428e67 <xmlStrEqual@plt+0x24f27>
  428e3d:	mov    rbx,rdi
  428e40:	mov    rdi,QWORD PTR [rdi+0x8]
  428e44:	mov    r12,rsi
  428e47:	mov    ebp,edx
  428e49:	test   rdi,rdi
  428e4c:	je     428e53 <xmlStrEqual@plt+0x24f13>
  428e4e:	call   428b50 <xmlStrEqual@plt+0x24c10>
  428e53:	movzx  ebp,bpl
  428e57:	mov    DWORD PTR [rbx],ebp
  428e59:	test   r12,r12
  428e5c:	je     428e6c <xmlStrEqual@plt+0x24f2c>
  428e5e:	mov    QWORD PTR [rbx+0x8],r12
  428e62:	pop    rbx
  428e63:	pop    rbp
  428e64:	pop    r12
  428e66:	ret    
  428e67:	call   427a70 <xmlStrEqual@plt+0x23b30>
  428e6c:	call   427aa0 <xmlStrEqual@plt+0x23b60>
  428e71:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  428e7c:	nop    DWORD PTR [rax+0x0]
  428e80:	endbr64 
  428e84:	sub    rsp,0x8
  428e88:	test   rdi,rdi
  428e8b:	je     428e9b <xmlStrEqual@plt+0x24f5b>
  428e8d:	test   rsi,rsi
  428e90:	je     428eba <xmlStrEqual@plt+0x24f7a>
  428e92:	mov    QWORD PTR [rdi+0x8],rsi
  428e96:	add    rsp,0x8
  428e9a:	ret    
  428e9b:	lea    rcx,[rip+0x267ce]        # 44f670 <xmlStrEqual@plt+0x4b730>
  428ea2:	mov    edx,0x123
  428ea7:	lea    rsi,[rip+0x26368]        # 44f216 <xmlStrEqual@plt+0x4b2d6>
  428eae:	lea    rdi,[rip+0x26375]        # 44f22a <xmlStrEqual@plt+0x4b2ea>
  428eb5:	call   403a60 <__assert_fail@plt>
  428eba:	call   427aa0 <xmlStrEqual@plt+0x23b60>
  428ebf:	nop
  428ec0:	endbr64 
  428ec4:	test   rdi,rdi
  428ec7:	je     428ed0 <xmlStrEqual@plt+0x24f90>
  428ec9:	movzx  esi,sil
  428ecd:	mov    DWORD PTR [rdi],esi
  428ecf:	ret    
  428ed0:	push   rax
  428ed1:	call   427ad0 <xmlStrEqual@plt+0x23b90>
  428ed6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  428ee0:	endbr64 
  428ee4:	sub    rsp,0x8
  428ee8:	test   rdi,rdi
  428eeb:	je     428f2a <xmlStrEqual@plt+0x24fea>
  428eed:	mov    ecx,DWORD PTR [rdi]
  428eef:	mov    rax,0x469a40
  428ef6:	mov    rdx,rcx
  428ef9:	mov    rax,QWORD PTR [rax+rcx*8]
  428efd:	test   rax,rax
  428f00:	je     428f10 <xmlStrEqual@plt+0x24fd0>
  428f02:	mov    rdi,QWORD PTR [rdi+0x8]
  428f06:	add    rsp,0x8
  428f0a:	jmp    rax
  428f0c:	nop    DWORD PTR [rax+0x0]
  428f10:	xor    eax,eax
  428f12:	lea    rsi,[rip+0x260b7]        # 44efd0 <xmlStrEqual@plt+0x4b090>
  428f19:	mov    edi,0x3
  428f1e:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  428f23:	xor    eax,eax
  428f25:	add    rsp,0x8
  428f29:	ret    
  428f2a:	call   4278c0 <xmlStrEqual@plt+0x23980>
  428f2f:	nop
  428f30:	endbr64 
  428f34:	push   r12
  428f36:	push   rbp
  428f37:	push   rbx
  428f38:	test   rsi,rsi
  428f3b:	je     428fa7 <xmlStrEqual@plt+0x25067>
  428f3d:	mov    eax,DWORD PTR [rsi]
  428f3f:	mov    r12,0x469b40
  428f46:	mov    rbp,rsi
  428f49:	cmp    QWORD PTR [r12+rax*8],0x0
  428f4e:	mov    rdx,rax
  428f51:	je     428f90 <xmlStrEqual@plt+0x25050>
  428f53:	mov    rbx,rdi
  428f56:	test   rdi,rdi
  428f59:	je     428fc6 <xmlStrEqual@plt+0x25086>
  428f5b:	cmp    QWORD PTR [rdi+0x8],0x0
  428f60:	je     428f6a <xmlStrEqual@plt+0x2502a>
  428f62:	call   428b50 <xmlStrEqual@plt+0x24c10>
  428f67:	mov    edx,DWORD PTR [rbp+0x0]
  428f6a:	and    edx,0xff
  428f70:	mov    DWORD PTR [rbx],edx
  428f72:	mov    rsi,QWORD PTR [rbp+0x8]
  428f76:	lea    rdi,[rbx+0x8]
  428f7a:	mov    eax,DWORD PTR [rbp+0x0]
  428f7d:	call   QWORD PTR [r12+rax*8]
  428f81:	mov    eax,0x1
  428f86:	pop    rbx
  428f87:	pop    rbp
  428f88:	pop    r12
  428f8a:	ret    
  428f8b:	nop    DWORD PTR [rax+rax*1+0x0]
  428f90:	xor    eax,eax
  428f92:	lea    rsi,[rip+0x2607f]        # 44f018 <xmlStrEqual@plt+0x4b0d8>
  428f99:	mov    edi,0x3
  428f9e:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  428fa3:	xor    eax,eax
  428fa5:	jmp    428f86 <xmlStrEqual@plt+0x25046>
  428fa7:	lea    rcx,[rip+0x26692]        # 44f640 <xmlStrEqual@plt+0x4b700>
  428fae:	mov    edx,0x13f
  428fb3:	lea    rsi,[rip+0x2625c]        # 44f216 <xmlStrEqual@plt+0x4b2d6>
  428fba:	lea    rdi,[rip+0x26271]        # 44f232 <xmlStrEqual@plt+0x4b2f2>
  428fc1:	call   403a60 <__assert_fail@plt>
  428fc6:	call   4278f0 <xmlStrEqual@plt+0x239b0>
  428fcb:	nop    DWORD PTR [rax+rax*1+0x0]
  428fd0:	endbr64 
  428fd4:	sub    rsp,0x8
  428fd8:	test   rsi,rsi
  428fdb:	je     42901a <xmlStrEqual@plt+0x250da>
  428fdd:	mov    ecx,DWORD PTR [rsi]
  428fdf:	mov    rax,0x469bc0
  428fe6:	mov    rdx,rcx
  428fe9:	mov    rax,QWORD PTR [rax+rcx*8]
  428fed:	test   rax,rax
  428ff0:	je     429000 <xmlStrEqual@plt+0x250c0>
  428ff2:	mov    rsi,QWORD PTR [rsi+0x8]
  428ff6:	add    rsp,0x8
  428ffa:	jmp    rax
  428ffc:	nop    DWORD PTR [rax+0x0]
  429000:	xor    eax,eax
  429002:	lea    rsi,[rip+0x26047]        # 44f050 <xmlStrEqual@plt+0x4b110>
  429009:	mov    edi,0x3
  42900e:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  429013:	xor    eax,eax
  429015:	add    rsp,0x8
  429019:	ret    
  42901a:	lea    rcx,[rip+0x2660f]        # 44f630 <xmlStrEqual@plt+0x4b6f0>
  429021:	mov    edx,0x153
  429026:	lea    rsi,[rip+0x261e9]        # 44f216 <xmlStrEqual@plt+0x4b2d6>
  42902d:	lea    rdi,[rip+0x261f6]        # 44f22a <xmlStrEqual@plt+0x4b2ea>
  429034:	call   403a60 <__assert_fail@plt>
  429039:	nop    DWORD PTR [rax+0x0]
  429040:	endbr64 
  429044:	push   rbx
  429045:	test   rdi,rdi
  429048:	je     4290c8 <xmlStrEqual@plt+0x25188>
  42904a:	mov    edx,DWORD PTR [rdi]
  42904c:	test   rsi,rsi
  42904f:	je     4290c8 <xmlStrEqual@plt+0x25188>
  429051:	mov    ecx,DWORD PTR [rsi]
  429053:	cmp    edx,ecx
  429055:	jne    429078 <xmlStrEqual@plt+0x25138>
  429057:	mov    rcx,0x469ac0
  42905e:	mov    eax,edx
  429060:	mov    rax,QWORD PTR [rcx+rax*8]
  429064:	test   rax,rax
  429067:	je     4290a1 <xmlStrEqual@plt+0x25161>
  429069:	mov    rsi,QWORD PTR [rsi+0x8]
  42906d:	mov    rdi,QWORD PTR [rdi+0x8]
  429071:	pop    rbx
  429072:	jmp    rax
  429074:	nop    DWORD PTR [rax+0x0]
  429078:	mov    rax,0x469e3c
  42907f:	mov    ebx,0xffffffff
  429084:	mov    esi,DWORD PTR [rax]
  429086:	test   esi,esi
  429088:	jle    42909d <xmlStrEqual@plt+0x2515d>
  42908a:	lea    rsi,[rip+0x25fff]        # 44f090 <xmlStrEqual@plt+0x4b150>
  429091:	mov    edi,0x5
  429096:	xor    eax,eax
  429098:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  42909d:	mov    eax,ebx
  42909f:	pop    rbx
  4290a0:	ret    
  4290a1:	mov    rax,0x469e3c
  4290a8:	mov    ebx,0xffffffff
  4290ad:	mov    eax,DWORD PTR [rax]
  4290af:	test   eax,eax
  4290b1:	jle    42909d <xmlStrEqual@plt+0x2515d>
  4290b3:	lea    rsi,[rip+0x26016]        # 44f0d0 <xmlStrEqual@plt+0x4b190>
  4290ba:	mov    edi,0x5
  4290bf:	xor    eax,eax
  4290c1:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  4290c6:	jmp    42909d <xmlStrEqual@plt+0x2515d>
  4290c8:	call   427a40 <xmlStrEqual@plt+0x23b00>
  4290cd:	nop    DWORD PTR [rax]
  4290d0:	endbr64 
  4290d4:	sub    rsp,0x8
  4290d8:	test   rdi,rdi
  4290db:	je     429143 <xmlStrEqual@plt+0x25203>
  4290dd:	mov    eax,DWORD PTR [rdi]
  4290df:	test   rsi,rsi
  4290e2:	je     429143 <xmlStrEqual@plt+0x25203>
  4290e4:	cmp    eax,DWORD PTR [rsi]
  4290e6:	jne    429110 <xmlStrEqual@plt+0x251d0>
  4290e8:	cmp    eax,0x2
  4290eb:	je     429120 <xmlStrEqual@plt+0x251e0>
  4290ed:	cmp    eax,0x9
  4290f0:	jne    429110 <xmlStrEqual@plt+0x251d0>
  4290f2:	mov    rax,QWORD PTR [rdi+0x8]
  4290f6:	test   rax,rax
  4290f9:	je     42913e <xmlStrEqual@plt+0x251fe>
  4290fb:	mov    ecx,DWORD PTR [rsi+0x4]
  4290fe:	cmp    DWORD PTR [rax+0x4],ecx
  429101:	sete   al
  429104:	add    rsp,0x8
  429108:	ret    
  429109:	nop    DWORD PTR [rax+0x0]
  429110:	xor    eax,eax
  429112:	add    rsp,0x8
  429116:	ret    
  429117:	nop    WORD PTR [rax+rax*1+0x0]
  429120:	mov    rax,QWORD PTR [rdi+0x8]
  429124:	test   rax,rax
  429127:	je     429148 <xmlStrEqual@plt+0x25208>
  429129:	mov    edx,DWORD PTR [rax]
  42912b:	mov    rax,QWORD PTR [rsi+0x8]
  42912f:	test   rax,rax
  429132:	je     429148 <xmlStrEqual@plt+0x25208>
  429134:	cmp    DWORD PTR [rax],edx
  429136:	sete   al
  429139:	add    rsp,0x8
  42913d:	ret    
  42913e:	call   427d00 <xmlStrEqual@plt+0x23dc0>
  429143:	call   4278c0 <xmlStrEqual@plt+0x23980>
  429148:	call   427ff0 <xmlStrEqual@plt+0x240b0>
  42914d:	nop    DWORD PTR [rax]
  429150:	endbr64 
  429154:	sub    rsp,0x8
  429158:	test   rdi,rdi
  42915b:	je     42917f <xmlStrEqual@plt+0x2523f>
  42915d:	cmp    DWORD PTR [rdi],0x9
  429160:	jne    429178 <xmlStrEqual@plt+0x25238>
  429162:	mov    rax,QWORD PTR [rdi+0x8]
  429166:	test   rax,rax
  429169:	je     42919e <xmlStrEqual@plt+0x2525e>
  42916b:	mov    rax,QWORD PTR [rax+0x8]
  42916f:	add    rsp,0x8
  429173:	ret    
  429174:	nop    DWORD PTR [rax+0x0]
  429178:	xor    eax,eax
  42917a:	add    rsp,0x8
  42917e:	ret    
  42917f:	lea    rcx,[rip+0x2649a]        # 44f620 <xmlStrEqual@plt+0x4b6e0>
  429186:	mov    edx,0x185
  42918b:	lea    rsi,[rip+0x26084]        # 44f216 <xmlStrEqual@plt+0x4b2d6>
  429192:	lea    rdi,[rip+0x26096]        # 44f22f <xmlStrEqual@plt+0x4b2ef>
  429199:	call   403a60 <__assert_fail@plt>
  42919e:	call   427b60 <xmlStrEqual@plt+0x23c20>
  4291a3:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4291ae:	xchg   ax,ax
  4291b0:	endbr64 
  4291b4:	sub    rsp,0x8
  4291b8:	test   rdi,rdi
  4291bb:	je     4291df <xmlStrEqual@plt+0x2529f>
  4291bd:	cmp    DWORD PTR [rdi],0x9
  4291c0:	jne    4291d8 <xmlStrEqual@plt+0x25298>
  4291c2:	mov    rax,QWORD PTR [rdi+0x8]
  4291c6:	test   rax,rax
  4291c9:	je     4291fe <xmlStrEqual@plt+0x252be>
  4291cb:	mov    rax,QWORD PTR [rax+0x10]
  4291cf:	add    rsp,0x8
  4291d3:	ret    
  4291d4:	nop    DWORD PTR [rax+0x0]
  4291d8:	xor    eax,eax
  4291da:	add    rsp,0x8
  4291de:	ret    
  4291df:	lea    rcx,[rip+0x2642a]        # 44f610 <xmlStrEqual@plt+0x4b6d0>
  4291e6:	mov    edx,0x18e
  4291eb:	lea    rsi,[rip+0x26024]        # 44f216 <xmlStrEqual@plt+0x4b2d6>
  4291f2:	lea    rdi,[rip+0x26036]        # 44f22f <xmlStrEqual@plt+0x4b2ef>
  4291f9:	call   403a60 <__assert_fail@plt>
  4291fe:	call   427c70 <xmlStrEqual@plt+0x23d30>
  429203:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  42920e:	xchg   ax,ax
  429210:	endbr64 
  429214:	sub    rsp,0x8
  429218:	test   rdi,rdi
  42921b:	je     42922e <xmlStrEqual@plt+0x252ee>
  42921d:	mov    rax,QWORD PTR [rdi+0x8]
  429221:	test   rax,rax
  429224:	je     42924d <xmlStrEqual@plt+0x2530d>
  429226:	mov    eax,DWORD PTR [rax+0x4]
  429229:	add    rsp,0x8
  42922d:	ret    
  42922e:	lea    rcx,[rip+0x263cb]        # 44f600 <xmlStrEqual@plt+0x4b6c0>
  429235:	mov    edx,0x197
  42923a:	lea    rsi,[rip+0x25fd5]        # 44f216 <xmlStrEqual@plt+0x4b2d6>
  429241:	lea    rdi,[rip+0x25fe7]        # 44f22f <xmlStrEqual@plt+0x4b2ef>
  429248:	call   403a60 <__assert_fail@plt>
  42924d:	call   427d00 <xmlStrEqual@plt+0x23dc0>
  429252:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  42925d:	nop    DWORD PTR [rax]
  429260:	endbr64 
  429264:	sub    rsp,0x8
  429268:	test   rdi,rdi
  42926b:	je     42927e <xmlStrEqual@plt+0x2533e>
  42926d:	mov    rax,QWORD PTR [rdi+0x8]
  429271:	test   rax,rax
  429274:	je     42929d <xmlStrEqual@plt+0x2535d>
  429276:	movzx  eax,BYTE PTR [rax]
  429279:	add    rsp,0x8
  42927d:	ret    
  42927e:	lea    rcx,[rip+0x2635b]        # 44f5e0 <xmlStrEqual@plt+0x4b6a0>
  429285:	mov    edx,0x19e
  42928a:	lea    rsi,[rip+0x25f85]        # 44f216 <xmlStrEqual@plt+0x4b2d6>
  429291:	lea    rdi,[rip+0x25f97]        # 44f22f <xmlStrEqual@plt+0x4b2ef>
  429298:	call   403a60 <__assert_fail@plt>
  42929d:	call   427dc0 <xmlStrEqual@plt+0x23e80>
  4292a2:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4292ad:	nop    DWORD PTR [rax]
  4292b0:	endbr64 
  4292b4:	sub    rsp,0x8
  4292b8:	test   rdi,rdi
  4292bb:	je     4292cf <xmlStrEqual@plt+0x2538f>
  4292bd:	mov    rax,QWORD PTR [rdi+0x8]
  4292c1:	test   rax,rax
  4292c4:	je     4292ee <xmlStrEqual@plt+0x253ae>
  4292c6:	movzx  eax,BYTE PTR [rax+0x1]
  4292ca:	add    rsp,0x8
  4292ce:	ret    
  4292cf:	lea    rcx,[rip+0x262ea]        # 44f5c0 <xmlStrEqual@plt+0x4b680>
  4292d6:	mov    edx,0x1a5
  4292db:	lea    rsi,[rip+0x25f34]        # 44f216 <xmlStrEqual@plt+0x4b2d6>
  4292e2:	lea    rdi,[rip+0x25f46]        # 44f22f <xmlStrEqual@plt+0x4b2ef>
  4292e9:	call   403a60 <__assert_fail@plt>
  4292ee:	call   427ec0 <xmlStrEqual@plt+0x23f80>
  4292f3:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4292fe:	xchg   ax,ax
  429300:	endbr64 
  429304:	sub    rsp,0x8
  429308:	test   rdi,rdi
  42930b:	je     429324 <xmlStrEqual@plt+0x253e4>
  42930d:	mov    rax,QWORD PTR [rdi+0x8]
  429311:	test   rax,rax
  429314:	je     429343 <xmlStrEqual@plt+0x25403>
  429316:	mov    rdi,QWORD PTR [rax+0x10]
  42931a:	call   425890 <xmlStrEqual@plt+0x21950>
  42931f:	add    rsp,0x8
  429323:	ret    
  429324:	lea    rcx,[rip+0x26285]        # 44f5b0 <xmlStrEqual@plt+0x4b670>
  42932b:	mov    edx,0x1ac
  429330:	lea    rsi,[rip+0x25edf]        # 44f216 <xmlStrEqual@plt+0x4b2d6>
  429337:	lea    rdi,[rip+0x25ef1]        # 44f22f <xmlStrEqual@plt+0x4b2ef>
  42933e:	call   403a60 <__assert_fail@plt>
  429343:	call   427cd0 <xmlStrEqual@plt+0x23d90>
  429348:	nop    DWORD PTR [rax+rax*1+0x0]
  429350:	endbr64 
  429354:	push   rbx
  429355:	mov    esi,0x18
  42935a:	mov    edi,0x1
  42935f:	call   403a80 <calloc@plt>
  429364:	mov    rbx,rax
  429367:	xor    eax,eax
  429369:	call   424be0 <xmlStrEqual@plt+0x20ca0>
  42936e:	mov    QWORD PTR [rbx+0x8],rax
  429372:	xor    eax,eax
  429374:	call   424be0 <xmlStrEqual@plt+0x20ca0>
  429379:	mov    QWORD PTR [rbx+0x10],rax
  42937d:	mov    rax,rbx
  429380:	pop    rbx
  429381:	ret    
  429382:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  42938d:	nop    DWORD PTR [rax]
  429390:	endbr64 
  429394:	test   rdi,rdi
  429397:	je     42939d <xmlStrEqual@plt+0x2545d>
  429399:	mov    BYTE PTR [rdi],sil
  42939c:	ret    
  42939d:	push   rax
  42939e:	lea    rcx,[rip+0x261eb]        # 44f590 <xmlStrEqual@plt+0x4b650>
  4293a5:	mov    edx,0x1c9
  4293aa:	lea    rsi,[rip+0x25e65]        # 44f216 <xmlStrEqual@plt+0x4b2d6>
  4293b1:	lea    rdi,[rip+0x25e77]        # 44f22f <xmlStrEqual@plt+0x4b2ef>
  4293b8:	call   403a60 <__assert_fail@plt>
  4293bd:	nop    DWORD PTR [rax]
  4293c0:	endbr64 
  4293c4:	test   rdi,rdi
  4293c7:	je     4293ce <xmlStrEqual@plt+0x2548e>
  4293c9:	mov    BYTE PTR [rdi+0x1],sil
  4293cd:	ret    
  4293ce:	push   rax
  4293cf:	call   427b00 <xmlStrEqual@plt+0x23bc0>
  4293d4:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4293df:	nop
  4293e0:	endbr64 
  4293e4:	test   rdi,rdi
  4293e7:	je     4293ed <xmlStrEqual@plt+0x254ad>
  4293e9:	mov    DWORD PTR [rdi+0x4],esi
  4293ec:	ret    
  4293ed:	push   rax
  4293ee:	call   427b30 <xmlStrEqual@plt+0x23bf0>
  4293f3:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4293fe:	xchg   ax,ax
  429400:	endbr64 
  429404:	sub    rsp,0x8
  429408:	test   rdi,rdi
  42940b:	je     42941f <xmlStrEqual@plt+0x254df>
  42940d:	test   rsi,rsi
  429410:	je     42943e <xmlStrEqual@plt+0x254fe>
  429412:	mov    rdi,QWORD PTR [rdi+0x8]
  429416:	add    rsp,0x8
  42941a:	jmp    424fd0 <xmlStrEqual@plt+0x21090>
  42941f:	lea    rcx,[rip+0x2612a]        # 44f550 <xmlStrEqual@plt+0x4b610>
  429426:	mov    edx,0x1de
  42942b:	lea    rsi,[rip+0x25de4]        # 44f216 <xmlStrEqual@plt+0x4b2d6>
  429432:	lea    rdi,[rip+0x25df6]        # 44f22f <xmlStrEqual@plt+0x4b2ef>
  429439:	call   403a60 <__assert_fail@plt>
  42943e:	call   427c40 <xmlStrEqual@plt+0x23d00>
  429443:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  42944e:	xchg   ax,ax
  429450:	endbr64 
  429454:	sub    rsp,0x8
  429458:	test   rdi,rdi
  42945b:	je     42946f <xmlStrEqual@plt+0x2552f>
  42945d:	test   rsi,rsi
  429460:	je     42948e <xmlStrEqual@plt+0x2554e>
  429462:	mov    rdi,QWORD PTR [rdi+0x10]
  429466:	add    rsp,0x8
  42946a:	jmp    424fd0 <xmlStrEqual@plt+0x21090>
  42946f:	lea    rcx,[rip+0x260ca]        # 44f540 <xmlStrEqual@plt+0x4b600>
  429476:	mov    edx,0x1e6
  42947b:	lea    rsi,[rip+0x25d94]        # 44f216 <xmlStrEqual@plt+0x4b2d6>
  429482:	lea    rdi,[rip+0x25da6]        # 44f22f <xmlStrEqual@plt+0x4b2ef>
  429489:	call   403a60 <__assert_fail@plt>
  42948e:	call   427ca0 <xmlStrEqual@plt+0x23d60>
  429493:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  42949e:	xchg   ax,ax
  4294a0:	endbr64 
  4294a4:	push   r14
  4294a6:	push   r13
  4294a8:	push   r12
  4294aa:	push   rbp
  4294ab:	push   rbx
  4294ac:	test   rsi,rsi
  4294af:	je     4294f3 <xmlStrEqual@plt+0x255b3>
  4294b1:	mov    rbx,rdi
  4294b4:	test   rdi,rdi
  4294b7:	je     429531 <xmlStrEqual@plt+0x255f1>
  4294b9:	mov    rbp,rdx
  4294bc:	test   rdx,rdx
  4294bf:	je     429512 <xmlStrEqual@plt+0x255d2>
  4294c1:	mov    rdi,QWORD PTR [rdi+0x8]
  4294c5:	mov    r14d,ecx
  4294c8:	mov    r13d,r8d
  4294cb:	mov    r12d,r9d
  4294ce:	call   424fd0 <xmlStrEqual@plt+0x21090>
  4294d3:	mov    rdi,QWORD PTR [rbx+0x10]
  4294d7:	mov    rsi,rbp
  4294da:	call   424fd0 <xmlStrEqual@plt+0x21090>
  4294df:	mov    BYTE PTR [rbx],r14b
  4294e2:	mov    BYTE PTR [rbx+0x1],r13b
  4294e6:	mov    DWORD PTR [rbx+0x4],r12d
  4294ea:	pop    rbx
  4294eb:	pop    rbp
  4294ec:	pop    r12
  4294ee:	pop    r13
  4294f0:	pop    r14
  4294f2:	ret    
  4294f3:	lea    rcx,[rip+0x26036]        # 44f530 <xmlStrEqual@plt+0x4b5f0>
  4294fa:	mov    edx,0x20e
  4294ff:	lea    rsi,[rip+0x25d10]        # 44f216 <xmlStrEqual@plt+0x4b2d6>
  429506:	lea    rdi,[rip+0x25d25]        # 44f232 <xmlStrEqual@plt+0x4b2f2>
  42950d:	call   403a60 <__assert_fail@plt>
  429512:	lea    rcx,[rip+0x26017]        # 44f530 <xmlStrEqual@plt+0x4b5f0>
  429519:	mov    edx,0x210
  42951e:	lea    rsi,[rip+0x25cf1]        # 44f216 <xmlStrEqual@plt+0x4b2d6>
  429525:	lea    rdi,[rip+0x25d0a]        # 44f236 <xmlStrEqual@plt+0x4b2f6>
  42952c:	call   403a60 <__assert_fail@plt>
  429531:	lea    rcx,[rip+0x25ff8]        # 44f530 <xmlStrEqual@plt+0x4b5f0>
  429538:	mov    edx,0x20f
  42953d:	lea    rsi,[rip+0x25cd2]        # 44f216 <xmlStrEqual@plt+0x4b2d6>
  429544:	lea    rdi,[rip+0x25d31]        # 44f27c <xmlStrEqual@plt+0x4b33c>
  42954b:	call   403a60 <__assert_fail@plt>
  429550:	endbr64 
  429554:	push   r15
  429556:	push   r14
  429558:	push   r13
  42955a:	push   r12
  42955c:	push   rbp
  42955d:	push   rbx
  42955e:	sub    rsp,0x8
  429562:	test   rdi,rdi
  429565:	je     4295dc <xmlStrEqual@plt+0x2569c>
  429567:	mov    r12,rsi
  42956a:	test   rsi,rsi
  42956d:	je     4295fb <xmlStrEqual@plt+0x256bb>
  429573:	mov    esi,0x18
  429578:	mov    rbp,rdi
  42957b:	mov    edi,0x1
  429580:	mov    r15d,edx
  429583:	mov    r14d,ecx
  429586:	mov    r13d,r8d
  429589:	call   403a80 <calloc@plt>
  42958e:	mov    rbx,rax
  429591:	xor    eax,eax
  429593:	call   424be0 <xmlStrEqual@plt+0x20ca0>
  429598:	mov    QWORD PTR [rbx+0x8],rax
  42959c:	xor    eax,eax
  42959e:	call   424be0 <xmlStrEqual@plt+0x20ca0>
  4295a3:	mov    rdi,QWORD PTR [rbx+0x8]
  4295a7:	mov    rsi,rbp
  4295aa:	mov    QWORD PTR [rbx+0x10],rax
  4295ae:	call   424fd0 <xmlStrEqual@plt+0x21090>
  4295b3:	mov    rdi,QWORD PTR [rbx+0x10]
  4295b7:	mov    rsi,r12
  4295ba:	call   424fd0 <xmlStrEqual@plt+0x21090>
  4295bf:	mov    BYTE PTR [rbx],r15b
  4295c2:	mov    BYTE PTR [rbx+0x1],r14b
  4295c6:	mov    DWORD PTR [rbx+0x4],r13d
  4295ca:	add    rsp,0x8
  4295ce:	mov    rax,rbx
  4295d1:	pop    rbx
  4295d2:	pop    rbp
  4295d3:	pop    r12
  4295d5:	pop    r13
  4295d7:	pop    r14
  4295d9:	pop    r15
  4295db:	ret    
  4295dc:	lea    rcx,[rip+0x25f3d]        # 44f520 <xmlStrEqual@plt+0x4b5e0>
  4295e3:	mov    edx,0x226
  4295e8:	lea    rsi,[rip+0x25c27]        # 44f216 <xmlStrEqual@plt+0x4b2d6>
  4295ef:	lea    rdi,[rip+0x25c3c]        # 44f232 <xmlStrEqual@plt+0x4b2f2>
  4295f6:	call   403a60 <__assert_fail@plt>
  4295fb:	lea    rcx,[rip+0x25f1e]        # 44f520 <xmlStrEqual@plt+0x4b5e0>
  429602:	mov    edx,0x227
  429607:	lea    rsi,[rip+0x25c08]        # 44f216 <xmlStrEqual@plt+0x4b2d6>
  42960e:	lea    rdi,[rip+0x25c21]        # 44f236 <xmlStrEqual@plt+0x4b2f6>
  429615:	call   403a60 <__assert_fail@plt>
  42961a:	nop    WORD PTR [rax+rax*1+0x0]
  429620:	endbr64 
  429624:	test   rdi,rdi
  429627:	je     42962e <xmlStrEqual@plt+0x256ee>
  429629:	mov    rax,QWORD PTR [rdi+0x8]
  42962d:	ret    
  42962e:	push   rax
  42962f:	call   427b60 <xmlStrEqual@plt+0x23c20>
  429634:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  42963f:	nop
  429640:	endbr64 
  429644:	test   rdi,rdi
  429647:	je     42964e <xmlStrEqual@plt+0x2570e>
  429649:	mov    rax,QWORD PTR [rdi+0x10]
  42964d:	ret    
  42964e:	push   rax
  42964f:	call   427c70 <xmlStrEqual@plt+0x23d30>
  429654:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  42965f:	nop
  429660:	endbr64 
  429664:	sub    rsp,0x8
  429668:	test   rdi,rdi
  42966b:	je     42967b <xmlStrEqual@plt+0x2573b>
  42966d:	mov    rdi,QWORD PTR [rdi+0x10]
  429671:	call   425890 <xmlStrEqual@plt+0x21950>
  429676:	add    rsp,0x8
  42967a:	ret    
  42967b:	call   427cd0 <xmlStrEqual@plt+0x23d90>
  429680:	endbr64 
  429684:	test   rdi,rdi
  429687:	je     42968d <xmlStrEqual@plt+0x2574d>
  429689:	mov    eax,DWORD PTR [rdi+0x4]
  42968c:	ret    
  42968d:	push   rax
  42968e:	call   427d00 <xmlStrEqual@plt+0x23dc0>
  429693:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  42969e:	xchg   ax,ax
  4296a0:	endbr64 
  4296a4:	test   rdi,rdi
  4296a7:	je     4296ad <xmlStrEqual@plt+0x2576d>
  4296a9:	movzx  eax,BYTE PTR [rdi]
  4296ac:	ret    
  4296ad:	push   rax
  4296ae:	call   427dc0 <xmlStrEqual@plt+0x23e80>
  4296b3:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4296be:	xchg   ax,ax
  4296c0:	endbr64 
  4296c4:	test   rdi,rdi
  4296c7:	je     4296ce <xmlStrEqual@plt+0x2578e>
  4296c9:	movzx  eax,BYTE PTR [rdi+0x1]
  4296cd:	ret    
  4296ce:	push   rax
  4296cf:	call   427ec0 <xmlStrEqual@plt+0x23f80>
  4296d4:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4296df:	nop
  4296e0:	endbr64 
  4296e4:	push   r14
  4296e6:	push   r13
  4296e8:	push   r12
  4296ea:	push   rbp
  4296eb:	push   rbx
  4296ec:	sub    rsp,0x10
  4296f0:	test   rdi,rdi
  4296f3:	je     429751 <xmlStrEqual@plt+0x25811>
  4296f5:	cmp    QWORD PTR [rdi+0x8],0x0
  4296fa:	mov    rbx,rdi
  4296fd:	mov    rbp,rsi
  429700:	mov    r12,rdx
  429703:	mov    r13d,ecx
  429706:	mov    r14d,r8d
  429709:	je     42971a <xmlStrEqual@plt+0x257da>
  42970b:	mov    DWORD PTR [rsp+0xc],r9d
  429710:	call   428b50 <xmlStrEqual@plt+0x24c10>
  429715:	mov    r9d,DWORD PTR [rsp+0xc]
  42971a:	mov    r8d,r9d
  42971d:	movzx  ecx,r14b
  429721:	movzx  edx,r13b
  429725:	mov    rsi,r12
  429728:	mov    rdi,rbp
  42972b:	call   429550 <xmlStrEqual@plt+0x25610>
  429730:	mov    DWORD PTR [rbx],0x9
  429736:	test   rax,rax
  429739:	je     429756 <xmlStrEqual@plt+0x25816>
  42973b:	mov    QWORD PTR [rbx+0x8],rax
  42973f:	add    rsp,0x10
  429743:	mov    eax,0x1
  429748:	pop    rbx
  429749:	pop    rbp
  42974a:	pop    r12
  42974c:	pop    r13
  42974e:	pop    r14
  429750:	ret    
  429751:	call   4278f0 <xmlStrEqual@plt+0x239b0>
  429756:	call   427aa0 <xmlStrEqual@plt+0x23b60>
  42975b:	nop    DWORD PTR [rax+rax*1+0x0]
  429760:	endbr64 
  429764:	push   r13
  429766:	mov    r13,rsi
  429769:	push   r12
  42976b:	mov    r12,rdi
  42976e:	push   rbp
  42976f:	push   rbx
  429770:	mov    ebx,0x20
  429775:	sub    rsp,0x8
  429779:	call   425890 <xmlStrEqual@plt+0x21950>
  42977e:	cmp    ax,0x2
  429782:	mov    ecx,0x80
  429787:	cmovne ebx,ecx
  42978a:	mov    edi,0x3
  42978f:	call   424b10 <xmlStrEqual@plt+0x20bd0>
  429794:	mov    rdi,rax
  429797:	mov    r8d,ebx
  42979a:	mov    ecx,ebx
  42979c:	mov    rdx,r13
  42979f:	mov    rsi,r12
  4297a2:	xor    r9d,r9d
  4297a5:	mov    rbp,rax
  4297a8:	call   4296e0 <xmlStrEqual@plt+0x257a0>
  4297ad:	add    rsp,0x8
  4297b1:	pop    rbx
  4297b2:	mov    rax,rbp
  4297b5:	pop    rbp
  4297b6:	pop    r12
  4297b8:	pop    r13
  4297ba:	ret    
  4297bb:	nop    DWORD PTR [rax+rax*1+0x0]
  4297c0:	endbr64 
  4297c4:	cmp    DWORD PTR [rdi+0x18],0x3
  4297c8:	je     4297d0 <xmlStrEqual@plt+0x25890>
  4297ca:	xor    eax,eax
  4297cc:	ret    
  4297cd:	nop    DWORD PTR [rax]
  4297d0:	sub    rsp,0x8
  4297d4:	call   425460 <xmlStrEqual@plt+0x21520>
  4297d9:	cmp    eax,0x9
  4297dc:	sete   al
  4297df:	movzx  eax,al
  4297e2:	add    rsp,0x8
  4297e6:	ret    
  4297e7:	nop    WORD PTR [rax+rax*1+0x0]
  4297f0:	endbr64 
  4297f4:	push   rbx
  4297f5:	mov    edi,0x10
  4297fa:	call   434fe0 <xmlStrEqual@plt+0x310a0>
  4297ff:	mov    rbx,rax
  429802:	xor    eax,eax
  429804:	call   424be0 <xmlStrEqual@plt+0x20ca0>
  429809:	mov    QWORD PTR [rbx+0x8],rax
  42980d:	mov    rax,rbx
  429810:	pop    rbx
  429811:	ret    
  429812:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  42981d:	nop    DWORD PTR [rax]
  429820:	endbr64 
  429824:	push   r13
  429826:	mov    r13d,edi
  429829:	mov    edi,0x10
  42982e:	push   r12
  429830:	mov    r12,rsi
  429833:	push   rbp
  429834:	mov    ebp,edx
  429836:	push   rbx
  429837:	sub    rsp,0x8
  42983b:	call   434fe0 <xmlStrEqual@plt+0x310a0>
  429840:	mov    rbx,rax
  429843:	xor    eax,eax
  429845:	call   424be0 <xmlStrEqual@plt+0x20ca0>
  42984a:	mov    QWORD PTR [rbx+0x8],rax
  42984e:	mov    DWORD PTR [rbx],r13d
  429851:	mov    rsi,r12
  429854:	mov    rdi,rax
  429857:	call   424fd0 <xmlStrEqual@plt+0x21090>
  42985c:	mov    BYTE PTR [rbx+0x4],bpl
  429860:	add    rsp,0x8
  429864:	mov    rax,rbx
  429867:	pop    rbx
  429868:	pop    rbp
  429869:	pop    r12
  42986b:	pop    r13
  42986d:	ret    
  42986e:	xchg   ax,ax
  429870:	endbr64 
  429874:	push   rbp
  429875:	mov    rbp,rdi
  429878:	push   rbx
  429879:	mov    rbx,rsi
  42987c:	sub    rsp,0x8
  429880:	mov    rax,QWORD PTR [rdi]
  429883:	test   rax,rax
  429886:	je     4298b8 <xmlStrEqual@plt+0x25978>
  429888:	test   rsi,rsi
  42988b:	je     4298dc <xmlStrEqual@plt+0x2599c>
  42988d:	mov    rdi,QWORD PTR [rax+0x8]
  429891:	mov    rsi,QWORD PTR [rsi+0x8]
  429895:	call   424fd0 <xmlStrEqual@plt+0x21090>
  42989a:	mov    rax,QWORD PTR [rbp+0x0]
  42989e:	mov    edx,DWORD PTR [rbx]
  4298a0:	test   rax,rax
  4298a3:	je     4298d7 <xmlStrEqual@plt+0x25997>
  4298a5:	mov    DWORD PTR [rax],edx
  4298a7:	movzx  edx,BYTE PTR [rbx+0x4]
  4298ab:	mov    BYTE PTR [rax+0x4],dl
  4298ae:	add    rsp,0x8
  4298b2:	pop    rbx
  4298b3:	pop    rbp
  4298b4:	ret    
  4298b5:	nop    DWORD PTR [rax]
  4298b8:	test   rsi,rsi
  4298bb:	je     4298e1 <xmlStrEqual@plt+0x259a1>
  4298bd:	movzx  edx,BYTE PTR [rsi+0x4]
  4298c1:	mov    edi,DWORD PTR [rbx]
  4298c3:	mov    rsi,QWORD PTR [rsi+0x8]
  4298c7:	call   429820 <xmlStrEqual@plt+0x258e0>
  4298cc:	mov    QWORD PTR [rbp+0x0],rax
  4298d0:	add    rsp,0x8
  4298d4:	pop    rbx
  4298d5:	pop    rbp
  4298d6:	ret    
  4298d7:	call   4281a0 <xmlStrEqual@plt+0x24260>
  4298dc:	call   428020 <xmlStrEqual@plt+0x240e0>
  4298e1:	call   427f70 <xmlStrEqual@plt+0x24030>
  4298e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4298f0:	endbr64 
  4298f4:	test   rdi,rdi
  4298f7:	je     4298fe <xmlStrEqual@plt+0x259be>
  4298f9:	movzx  eax,BYTE PTR [rdi+0x4]
  4298fd:	ret    
  4298fe:	push   rax
  4298ff:	call   427f70 <xmlStrEqual@plt+0x24030>
  429904:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  42990f:	nop
  429910:	endbr64 
  429914:	sub    rsp,0x8
  429918:	test   rdi,rdi
  42991b:	je     42992d <xmlStrEqual@plt+0x259ed>
  42991d:	mov    rax,QWORD PTR [rdi+0x8]
  429921:	test   rax,rax
  429924:	je     429932 <xmlStrEqual@plt+0x259f2>
  429926:	mov    eax,DWORD PTR [rax]
  429928:	add    rsp,0x8
  42992c:	ret    
  42992d:	call   4278f0 <xmlStrEqual@plt+0x239b0>
  429932:	call   427ff0 <xmlStrEqual@plt+0x240b0>
  429937:	nop    WORD PTR [rax+rax*1+0x0]
  429940:	endbr64 
  429944:	test   rdi,rdi
  429947:	je     42994c <xmlStrEqual@plt+0x25a0c>
  429949:	mov    eax,DWORD PTR [rdi]
  42994b:	ret    
  42994c:	push   rax
  42994d:	call   427ff0 <xmlStrEqual@plt+0x240b0>
  429952:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  42995d:	nop    DWORD PTR [rax]
  429960:	endbr64 
  429964:	test   rdi,rdi
  429967:	je     42996e <xmlStrEqual@plt+0x25a2e>
  429969:	mov    rax,QWORD PTR [rdi+0x8]
  42996d:	ret    
  42996e:	push   rax
  42996f:	call   428020 <xmlStrEqual@plt+0x240e0>
  429974:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  42997f:	nop
  429980:	endbr64 
  429984:	test   rdi,rdi
  429987:	je     42998c <xmlStrEqual@plt+0x25a4c>
  429989:	mov    DWORD PTR [rdi],esi
  42998b:	ret    
  42998c:	push   rax
  42998d:	call   4281a0 <xmlStrEqual@plt+0x24260>
  429992:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  42999d:	nop    DWORD PTR [rax]
  4299a0:	endbr64 
  4299a4:	sub    rsp,0x8
  4299a8:	test   rdi,rdi
  4299ab:	je     4299bf <xmlStrEqual@plt+0x25a7f>
  4299ad:	test   rsi,rsi
  4299b0:	je     4299de <xmlStrEqual@plt+0x25a9e>
  4299b2:	mov    rdi,QWORD PTR [rdi+0x8]
  4299b6:	add    rsp,0x8
  4299ba:	jmp    424fd0 <xmlStrEqual@plt+0x21090>
  4299bf:	lea    rcx,[rip+0x25a3a]        # 44f400 <xmlStrEqual@plt+0x4b4c0>
  4299c6:	mov    edx,0x318
  4299cb:	lea    rsi,[rip+0x25844]        # 44f216 <xmlStrEqual@plt+0x4b2d6>
  4299d2:	lea    rdi,[rip+0x25887]        # 44f260 <xmlStrEqual@plt+0x4b320>
  4299d9:	call   403a60 <__assert_fail@plt>
  4299de:	lea    rcx,[rip+0x25a1b]        # 44f400 <xmlStrEqual@plt+0x4b4c0>
  4299e5:	mov    edx,0x319
  4299ea:	lea    rsi,[rip+0x25825]        # 44f216 <xmlStrEqual@plt+0x4b2d6>
  4299f1:	lea    rdi,[rip+0x25888]        # 44f280 <xmlStrEqual@plt+0x4b340>
  4299f8:	call   403a60 <__assert_fail@plt>
  4299fd:	nop    DWORD PTR [rax]
  429a00:	endbr64 
  429a04:	test   rdi,rdi
  429a07:	je     429a0e <xmlStrEqual@plt+0x25ace>
  429a09:	mov    BYTE PTR [rdi+0x4],sil
  429a0d:	ret    
  429a0e:	push   rax
  429a0f:	lea    rcx,[rip+0x259ca]        # 44f3e0 <xmlStrEqual@plt+0x4b4a0>
  429a16:	mov    edx,0x320
  429a1b:	lea    rsi,[rip+0x257f4]        # 44f216 <xmlStrEqual@plt+0x4b2d6>
  429a22:	lea    rdi,[rip+0x2581f]        # 44f248 <xmlStrEqual@plt+0x4b308>
  429a29:	call   403a60 <__assert_fail@plt>
  429a2e:	xchg   ax,ax
  429a30:	endbr64 
  429a34:	cmp    DWORD PTR [rdi+0x18],0x3
  429a38:	je     429a40 <xmlStrEqual@plt+0x25b00>
  429a3a:	xor    eax,eax
  429a3c:	ret    
  429a3d:	nop    DWORD PTR [rax]
  429a40:	sub    rsp,0x8
  429a44:	call   425460 <xmlStrEqual@plt+0x21520>
  429a49:	cmp    eax,0x2
  429a4c:	sete   al
  429a4f:	movzx  eax,al
  429a52:	add    rsp,0x8
  429a56:	ret    
  429a57:	nop    WORD PTR [rax+rax*1+0x0]
  429a60:	endbr64 
  429a64:	push   rbp
  429a65:	mov    ebp,esi
  429a67:	mov    rsi,rdx
  429a6a:	push   rbx
  429a6b:	mov    rbx,rdi
  429a6e:	sub    rsp,0x18
  429a72:	cmp    QWORD PTR [rdi+0x8],0x0
  429a77:	je     429a98 <xmlStrEqual@plt+0x25b58>
  429a79:	mov    DWORD PTR [rbx],0x2
  429a7f:	mov    edi,ebp
  429a81:	movzx  edx,cl
  429a84:	call   429820 <xmlStrEqual@plt+0x258e0>
  429a89:	mov    QWORD PTR [rbx+0x8],rax
  429a8d:	add    rsp,0x18
  429a91:	pop    rbx
  429a92:	pop    rbp
  429a93:	ret    
  429a94:	nop    DWORD PTR [rax+0x0]
  429a98:	mov    DWORD PTR [rsp+0xc],ecx
  429a9c:	mov    QWORD PTR [rsp],rdx
  429aa0:	call   428b50 <xmlStrEqual@plt+0x24c10>
  429aa5:	mov    ecx,DWORD PTR [rsp+0xc]
  429aa9:	mov    rsi,QWORD PTR [rsp]
  429aad:	jmp    429a79 <xmlStrEqual@plt+0x25b39>
  429aaf:	nop
  429ab0:	endbr64 
  429ab4:	push   r13
  429ab6:	mov    r13d,edx
  429ab9:	push   r12
  429abb:	mov    r12,rsi
  429abe:	push   rbp
  429abf:	mov    ebp,edi
  429ac1:	mov    edi,0x3
  429ac6:	push   rbx
  429ac7:	sub    rsp,0x8
  429acb:	call   424b10 <xmlStrEqual@plt+0x20bd0>
  429ad0:	mov    rdi,rax
  429ad3:	movzx  ecx,r13b
  429ad7:	mov    rdx,r12
  429ada:	mov    esi,ebp
  429adc:	mov    rbx,rax
  429adf:	call   429a60 <xmlStrEqual@plt+0x25b20>
  429ae4:	add    rsp,0x8
  429ae8:	mov    rax,rbx
  429aeb:	pop    rbx
  429aec:	pop    rbp
  429aed:	pop    r12
  429aef:	pop    r13
  429af1:	ret    
  429af2:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  429afd:	nop    DWORD PTR [rax]
  429b00:	endbr64 
  429b04:	push   rbx
  429b05:	mov    esi,0x18
  429b0a:	mov    edi,0x1
  429b0f:	call   403a80 <calloc@plt>
  429b14:	mov    rbx,rax
  429b17:	xor    eax,eax
  429b19:	call   424be0 <xmlStrEqual@plt+0x20ca0>
  429b1e:	mov    QWORD PTR [rbx+0x10],rax
  429b22:	mov    rax,rbx
  429b25:	pop    rbx
  429b26:	ret    
  429b27:	nop    WORD PTR [rax+rax*1+0x0]
  429b30:	endbr64 
  429b34:	sub    rsp,0x8
  429b38:	test   rsi,rsi
  429b3b:	je     429b4f <xmlStrEqual@plt+0x25c0f>
  429b3d:	test   rdi,rdi
  429b40:	je     429b6e <xmlStrEqual@plt+0x25c2e>
  429b42:	mov    rdi,QWORD PTR [rdi+0x10]
  429b46:	add    rsp,0x8
  429b4a:	jmp    424fd0 <xmlStrEqual@plt+0x21090>
  429b4f:	lea    rcx,[rip+0x2586a]        # 44f3c0 <xmlStrEqual@plt+0x4b480>
  429b56:	mov    edx,0x3b9
  429b5b:	lea    rsi,[rip+0x256b4]        # 44f216 <xmlStrEqual@plt+0x4b2d6>
  429b62:	lea    rdi,[rip+0x2571a]        # 44f283 <xmlStrEqual@plt+0x4b343>
  429b69:	call   403a60 <__assert_fail@plt>
  429b6e:	lea    rcx,[rip+0x2584b]        # 44f3c0 <xmlStrEqual@plt+0x4b480>
  429b75:	mov    edx,0x3ba
  429b7a:	lea    rsi,[rip+0x25695]        # 44f216 <xmlStrEqual@plt+0x4b2d6>
  429b81:	lea    rdi,[rip+0x256dd]        # 44f265 <xmlStrEqual@plt+0x4b325>
  429b88:	call   403a60 <__assert_fail@plt>
  429b8d:	nop    DWORD PTR [rax]
  429b90:	endbr64 
  429b94:	test   rdi,rdi
  429b97:	je     429ba8 <xmlStrEqual@plt+0x25c68>
  429b99:	mov    BYTE PTR [rdi],sil
  429b9c:	mov    WORD PTR [rdi+0x2],dx
  429ba0:	mov    BYTE PTR [rdi+0x4],cl
  429ba3:	mov    BYTE PTR [rdi+0x5],r8b
  429ba7:	ret    
  429ba8:	push   rax
  429ba9:	call   428230 <xmlStrEqual@plt+0x242f0>
  429bae:	xchg   ax,ax
  429bb0:	endbr64 
  429bb4:	test   rdi,rdi
  429bb7:	je     429bc9 <xmlStrEqual@plt+0x25c89>
  429bb9:	mov    BYTE PTR [rdi+0x6],sil
  429bbd:	mov    WORD PTR [rdi+0x8],dx
  429bc1:	mov    BYTE PTR [rdi+0xa],cl
  429bc4:	mov    BYTE PTR [rdi+0xb],r8b
  429bc8:	ret    
  429bc9:	push   rax
  429bca:	call   428260 <xmlStrEqual@plt+0x24320>
  429bcf:	nop
  429bd0:	endbr64 
  429bd4:	test   rdi,rdi
  429bd7:	je     429bf5 <xmlStrEqual@plt+0x25cb5>
  429bd9:	movzx  eax,BYTE PTR [rsi]
  429bdc:	mov    BYTE PTR [rdi],al
  429bde:	movzx  eax,WORD PTR [rsi+0x2]
  429be2:	mov    WORD PTR [rdi+0x2],ax
  429be6:	movzx  eax,BYTE PTR [rsi+0x4]
  429bea:	mov    BYTE PTR [rdi+0x4],al
  429bed:	movzx  eax,BYTE PTR [rsi+0x5]
  429bf1:	mov    BYTE PTR [rdi+0x5],al
  429bf4:	ret    
  429bf5:	push   rax
  429bf6:	call   428290 <xmlStrEqual@plt+0x24350>
  429bfb:	nop    DWORD PTR [rax+rax*1+0x0]
  429c00:	endbr64 
  429c04:	test   rdi,rdi
  429c07:	je     429c26 <xmlStrEqual@plt+0x25ce6>
  429c09:	movzx  eax,BYTE PTR [rsi]
  429c0c:	mov    BYTE PTR [rdi+0x6],al
  429c0f:	movzx  eax,WORD PTR [rsi+0x2]
  429c13:	mov    WORD PTR [rdi+0x8],ax
  429c17:	movzx  eax,BYTE PTR [rsi+0x4]
  429c1b:	mov    BYTE PTR [rdi+0xa],al
  429c1e:	movzx  eax,BYTE PTR [rsi+0x5]
  429c22:	mov    BYTE PTR [rdi+0xb],al
  429c25:	ret    
  429c26:	push   rax
  429c27:	call   4282c0 <xmlStrEqual@plt+0x24380>
  429c2c:	nop    DWORD PTR [rax+0x0]
  429c30:	endbr64 
  429c34:	test   rdi,rdi
  429c37:	je     429c3d <xmlStrEqual@plt+0x25cfd>
  429c39:	mov    DWORD PTR [rdi+0xc],esi
  429c3c:	ret    
  429c3d:	push   rax
  429c3e:	call   4282f0 <xmlStrEqual@plt+0x243b0>
  429c43:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  429c4e:	xchg   ax,ax
  429c50:	endbr64 
  429c54:	test   rdi,rdi
  429c57:	je     429c5d <xmlStrEqual@plt+0x25d1d>
  429c59:	mov    rax,rdi
  429c5c:	ret    
  429c5d:	push   rax
  429c5e:	lea    rcx,[rip+0x2569b]        # 44f300 <xmlStrEqual@plt+0x4b3c0>
  429c65:	mov    edx,0x3f2
  429c6a:	lea    rsi,[rip+0x255a5]        # 44f216 <xmlStrEqual@plt+0x4b2d6>
  429c71:	lea    rdi,[rip+0x255ed]        # 44f265 <xmlStrEqual@plt+0x4b325>
  429c78:	call   403a60 <__assert_fail@plt>
  429c7d:	nop    DWORD PTR [rax]
  429c80:	endbr64 
  429c84:	test   rdi,rdi
  429c87:	je     429c8e <xmlStrEqual@plt+0x25d4e>
  429c89:	lea    rax,[rdi+0x6]
  429c8d:	ret    
  429c8e:	push   rax
  429c8f:	lea    rcx,[rip+0x2564a]        # 44f2e0 <xmlStrEqual@plt+0x4b3a0>
  429c96:	mov    edx,0x3f9
  429c9b:	lea    rsi,[rip+0x25574]        # 44f216 <xmlStrEqual@plt+0x4b2d6>
  429ca2:	lea    rdi,[rip+0x255bc]        # 44f265 <xmlStrEqual@plt+0x4b325>
  429ca9:	call   403a60 <__assert_fail@plt>
  429cae:	xchg   ax,ax
  429cb0:	endbr64 
  429cb4:	test   rdi,rdi
  429cb7:	je     429cbd <xmlStrEqual@plt+0x25d7d>
  429cb9:	mov    eax,DWORD PTR [rdi+0xc]
  429cbc:	ret    
  429cbd:	push   rax
  429cbe:	lea    rcx,[rip+0x255fb]        # 44f2c0 <xmlStrEqual@plt+0x4b380>
  429cc5:	mov    edx,0x400
  429cca:	lea    rsi,[rip+0x25545]        # 44f216 <xmlStrEqual@plt+0x4b2d6>
  429cd1:	lea    rdi,[rip+0x2558d]        # 44f265 <xmlStrEqual@plt+0x4b325>
  429cd8:	call   403a60 <__assert_fail@plt>
  429cdd:	nop    DWORD PTR [rax]
  429ce0:	endbr64 
  429ce4:	mov    rax,QWORD PTR [rdi+0x10]
  429ce8:	ret    
  429ce9:	nop    DWORD PTR [rax+0x0]
  429cf0:	endbr64 
  429cf4:	push   rbx
  429cf5:	mov    BYTE PTR [rip+0x480e4],0x0        # 471de0 <xmlStrEqual@plt+0x6dea0>
  429cfc:	lea    rbx,[rip+0x480dd]        # 471de0 <xmlStrEqual@plt+0x6dea0>
  429d03:	sub    rsp,0x8
  429d07:	movzx  eax,BYTE PTR [rdi+0x5]
  429d0b:	lea    r8,[rip+0x25576]        # 44f288 <xmlStrEqual@plt+0x4b348>
  429d12:	push   rax
  429d13:	mov    ecx,0x60
  429d18:	mov    edx,0x1
  429d1d:	movzx  eax,BYTE PTR [rdi+0x4]
  429d21:	mov    esi,0x60
  429d26:	push   rax
  429d27:	movzx  eax,WORD PTR [rdi+0x2]
  429d2b:	push   rax
  429d2c:	xor    eax,eax
  429d2e:	movzx  r9d,BYTE PTR [rdi]
  429d32:	mov    rdi,rbx
  429d35:	call   403a40 <__snprintf_chk@plt>
  429d3a:	add    rsp,0x20
  429d3e:	mov    rax,rbx
  429d41:	pop    rbx
  429d42:	ret    
  429d43:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  429d4e:	xchg   ax,ax
  429d50:	endbr64 
  429d54:	mov    eax,DWORD PTR [rip+0x484a6]        # 472200 <xmlStrEqual@plt+0x6e2c0>
  429d5a:	push   r14
  429d5c:	lea    ecx,[rax+0x1]
  429d5f:	mov    eax,ecx
  429d61:	mov    edx,0xcccccccd
  429d66:	push   r13
  429d68:	mul    edx
  429d6a:	push   r12
  429d6c:	shr    edx,0x3
  429d6f:	lea    eax,[rdx+rdx*4]
  429d72:	add    eax,eax
  429d74:	push   rbp
  429d75:	sub    ecx,eax
  429d77:	mov    edx,ecx
  429d79:	lea    rax,[rdx+rdx*2]
  429d7d:	push   rbx
  429d7e:	shl    rax,0x5
  429d82:	lea    rbx,[rip+0x480b7]        # 471e40 <xmlStrEqual@plt+0x6df00>
  429d89:	mov    BYTE PTR [rbx+rax*1],0x0
  429d8d:	mov    rbp,rdi
  429d90:	mov    DWORD PTR [rip+0x4846a],edx        # 472200 <xmlStrEqual@plt+0x6e2c0>
  429d96:	mov    rdi,QWORD PTR [rdi+0x10]
  429d9a:	call   424d40 <xmlStrEqual@plt+0x20e00>
  429d9f:	lea    rdi,[rbp+0x6]
  429da3:	mov    r13d,DWORD PTR [rbp+0xc]
  429da7:	mov    r14,rax
  429daa:	call   429cf0 <xmlStrEqual@plt+0x25db0>
  429daf:	mov    rdi,rbp
  429db2:	mov    r12,rax
  429db5:	call   429cf0 <xmlStrEqual@plt+0x25db0>
  429dba:	sub    rsp,0x8
  429dbe:	push   r14
  429dc0:	mov    edx,DWORD PTR [rip+0x4843a]        # 472200 <xmlStrEqual@plt+0x6e2c0>
  429dc6:	mov    r9,rax
  429dc9:	push   r13
  429dcb:	lea    rdi,[rdx+rdx*2]
  429dcf:	shl    rdi,0x5
  429dd3:	push   r12
  429dd5:	add    rdi,rbx
  429dd8:	lea    r8,[rip+0x25321]        # 44f100 <xmlStrEqual@plt+0x4b1c0>
  429ddf:	mov    rcx,0xffffffffffffffff
  429de6:	mov    edx,0x1
  429deb:	mov    esi,0x60
  429df0:	xor    eax,eax
  429df2:	call   403a40 <__snprintf_chk@plt>
  429df7:	mov    eax,DWORD PTR [rip+0x48403]        # 472200 <xmlStrEqual@plt+0x6e2c0>
  429dfd:	add    rsp,0x20
  429e01:	lea    rax,[rax+rax*2]
  429e05:	shl    rax,0x5
  429e09:	add    rax,rbx
  429e0c:	pop    rbx
  429e0d:	pop    rbp
  429e0e:	pop    r12
  429e10:	pop    r13
  429e12:	pop    r14
  429e14:	ret    
  429e15:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  429e20:	endbr64 
  429e24:	push   rbx
  429e25:	mov    edi,0x30
  429e2a:	call   434fe0 <xmlStrEqual@plt+0x310a0>
  429e2f:	mov    rbx,rax
  429e32:	xor    eax,eax
  429e34:	call   424be0 <xmlStrEqual@plt+0x20ca0>
  429e39:	mov    QWORD PTR [rbx+0x18],rax
  429e3d:	xor    eax,eax
  429e3f:	call   424be0 <xmlStrEqual@plt+0x20ca0>
  429e44:	mov    QWORD PTR [rbx+0x8],rax
  429e48:	xor    eax,eax
  429e4a:	call   424be0 <xmlStrEqual@plt+0x20ca0>
  429e4f:	mov    QWORD PTR [rbx+0x20],rax
  429e53:	mov    rdi,0x424bf0
  429e5a:	call   42dca0 <xmlStrEqual@plt+0x29d60>
  429e5f:	mov    QWORD PTR [rbx+0x28],rax
  429e63:	mov    rax,rbx
  429e66:	pop    rbx
  429e67:	ret    
  429e68:	nop    DWORD PTR [rax+rax*1+0x0]
  429e70:	endbr64 
  429e74:	push   r15
  429e76:	mov    r15d,edx
  429e79:	push   r14
  429e7b:	mov    r14,rsi
  429e7e:	push   r13
  429e80:	mov    r13,rcx
  429e83:	push   r12
  429e85:	mov    r12,r8
  429e88:	push   rbp
  429e89:	mov    ebp,edi
  429e8b:	mov    edi,0x30
  429e90:	push   rbx
  429e91:	sub    rsp,0x18
  429e95:	mov    QWORD PTR [rsp+0x8],r9
  429e9a:	call   434fe0 <xmlStrEqual@plt+0x310a0>
  429e9f:	mov    WORD PTR [rax+0x10],bp
  429ea3:	mov    WORD PTR [rax],r15w
  429ea7:	mov    rdi,r14
  429eaa:	mov    rbx,rax
  429ead:	call   425060 <xmlStrEqual@plt+0x21120>
  429eb2:	mov    QWORD PTR [rbx+0x18],rax
  429eb6:	mov    rdi,r13
  429eb9:	call   425060 <xmlStrEqual@plt+0x21120>
  429ebe:	mov    QWORD PTR [rbx+0x8],rax
  429ec2:	mov    rdi,r12
  429ec5:	call   425060 <xmlStrEqual@plt+0x21120>
  429eca:	mov    QWORD PTR [rbx+0x20],rax
  429ece:	mov    r9,QWORD PTR [rsp+0x8]
  429ed3:	mov    rsi,0x425060
  429eda:	mov    rdi,r9
  429edd:	call   42de20 <xmlStrEqual@plt+0x29ee0>
  429ee2:	mov    QWORD PTR [rbx+0x28],rax
  429ee6:	mov    rsi,0x424bf0
  429eed:	mov    rdi,rax
  429ef0:	call   42dce0 <xmlStrEqual@plt+0x29da0>
  429ef5:	add    rsp,0x18
  429ef9:	mov    rax,rbx
  429efc:	pop    rbx
  429efd:	pop    rbp
  429efe:	pop    r12
  429f00:	pop    r13
  429f02:	pop    r14
  429f04:	pop    r15
  429f06:	ret    
  429f07:	nop    WORD PTR [rax+rax*1+0x0]
  429f10:	endbr64 
  429f14:	movzx  eax,WORD PTR [rdi+0x10]
  429f18:	ret    
  429f19:	nop    DWORD PTR [rax+0x0]
  429f20:	endbr64 
  429f24:	movzx  eax,WORD PTR [rdi]
  429f27:	ret    
  429f28:	nop    DWORD PTR [rax+rax*1+0x0]
  429f30:	endbr64 
  429f34:	mov    rax,QWORD PTR [rdi+0x18]
  429f38:	ret    
  429f39:	nop    DWORD PTR [rax+0x0]
  429f40:	endbr64 
  429f44:	mov    rax,QWORD PTR [rdi+0x8]
  429f48:	ret    
  429f49:	nop    DWORD PTR [rax+0x0]
  429f50:	endbr64 
  429f54:	mov    rax,QWORD PTR [rdi+0x20]
  429f58:	ret    
  429f59:	nop    DWORD PTR [rax+0x0]
  429f60:	endbr64 
  429f64:	mov    rax,QWORD PTR [rdi+0x28]
  429f68:	ret    
  429f69:	nop    DWORD PTR [rax+0x0]
  429f70:	endbr64 
  429f74:	mov    WORD PTR [rdi+0x10],si
  429f78:	ret    
  429f79:	nop    DWORD PTR [rax+0x0]
  429f80:	endbr64 
  429f84:	mov    WORD PTR [rdi],si
  429f87:	ret    
  429f88:	nop    DWORD PTR [rax+rax*1+0x0]
  429f90:	endbr64 
  429f94:	mov    rdi,QWORD PTR [rdi+0x18]
  429f98:	jmp    424fd0 <xmlStrEqual@plt+0x21090>
  429f9d:	nop    DWORD PTR [rax]
  429fa0:	endbr64 
  429fa4:	mov    rdi,QWORD PTR [rdi+0x8]
  429fa8:	jmp    424fd0 <xmlStrEqual@plt+0x21090>
  429fad:	nop    DWORD PTR [rax]
  429fb0:	endbr64 
  429fb4:	mov    rdi,QWORD PTR [rdi+0x20]
  429fb8:	jmp    424fd0 <xmlStrEqual@plt+0x21090>
  429fbd:	nop    DWORD PTR [rax]
  429fc0:	endbr64 
  429fc4:	push   rbp
  429fc5:	mov    rbp,rsi
  429fc8:	push   rbx
  429fc9:	mov    rbx,rdi
  429fcc:	sub    rsp,0x8
  429fd0:	mov    rdi,QWORD PTR [rdi+0x28]
  429fd4:	call   42e2b0 <xmlStrEqual@plt+0x2a370>
  429fd9:	mov    rsi,0x425060
  429fe0:	mov    rdi,rbp
  429fe3:	call   42de20 <xmlStrEqual@plt+0x29ee0>
  429fe8:	mov    QWORD PTR [rbx+0x28],rax
  429fec:	mov    rsi,0x424bf0
  429ff3:	add    rsp,0x8
  429ff7:	pop    rbx
  429ff8:	mov    rdi,rax
  429ffb:	pop    rbp
  429ffc:	jmp    42dce0 <xmlStrEqual@plt+0x29da0>
  42a001:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  42a00c:	nop    DWORD PTR [rax+0x0]
  42a010:	endbr64 
  42a014:	push   r12
  42a016:	mov    r12d,ecx
  42a019:	mov    rcx,r8
  42a01c:	push   rbp
  42a01d:	mov    r8,r9
  42a020:	mov    ebp,esi
  42a022:	push   rbx
  42a023:	mov    rsi,rdx
  42a026:	mov    rbx,rdi
  42a029:	sub    rsp,0x20
  42a02d:	cmp    QWORD PTR [rdi+0x8],0x0
  42a032:	je     42a060 <xmlStrEqual@plt+0x26120>
  42a034:	mov    DWORD PTR [rbx],0x7
  42a03a:	mov    r9,QWORD PTR [rsp+0x40]
  42a03f:	movzx  edx,r12w
  42a043:	movzx  edi,bp
  42a046:	call   429e70 <xmlStrEqual@plt+0x25f30>
  42a04b:	mov    QWORD PTR [rbx+0x8],rax
  42a04f:	add    rsp,0x20
  42a053:	pop    rbx
  42a054:	pop    rbp
  42a055:	pop    r12
  42a057:	ret    
  42a058:	nop    DWORD PTR [rax+rax*1+0x0]
  42a060:	mov    QWORD PTR [rsp+0x10],rcx
  42a065:	mov    QWORD PTR [rsp+0x18],r9
  42a06a:	mov    QWORD PTR [rsp+0x8],rdx
  42a06f:	call   428b50 <xmlStrEqual@plt+0x24c10>
  42a074:	mov    r8,QWORD PTR [rsp+0x18]
  42a079:	mov    rcx,QWORD PTR [rsp+0x10]
  42a07e:	mov    rsi,QWORD PTR [rsp+0x8]
  42a083:	jmp    42a034 <xmlStrEqual@plt+0x260f4>
  42a085:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  42a090:	endbr64 
  42a094:	cmp    DWORD PTR [rdi+0x18],0x3
  42a098:	je     42a0a0 <xmlStrEqual@plt+0x26160>
  42a09a:	xor    eax,eax
  42a09c:	ret    
  42a09d:	nop    DWORD PTR [rax]
  42a0a0:	sub    rsp,0x8
  42a0a4:	call   425460 <xmlStrEqual@plt+0x21520>
  42a0a9:	cmp    eax,0x7
  42a0ac:	sete   al
  42a0af:	movzx  eax,al
  42a0b2:	add    rsp,0x8
  42a0b6:	ret    
  42a0b7:	nop    WORD PTR [rax+rax*1+0x0]
  42a0c0:	endbr64 
  42a0c4:	push   r15
  42a0c6:	mov    r15,r8
  42a0c9:	push   r14
  42a0cb:	mov    r14,rcx
  42a0ce:	push   r13
  42a0d0:	mov    r13d,edx
  42a0d3:	push   r12
  42a0d5:	mov    r12,rsi
  42a0d8:	push   rbp
  42a0d9:	mov    ebp,edi
  42a0db:	mov    edi,0x3
  42a0e0:	push   rbx
  42a0e1:	sub    rsp,0x18
  42a0e5:	mov    QWORD PTR [rsp+0x8],r9
  42a0ea:	call   424b10 <xmlStrEqual@plt+0x20bd0>
  42a0ef:	sub    rsp,0x8
  42a0f3:	mov    r9,QWORD PTR [rsp+0x10]
  42a0f8:	mov    r8,r14
  42a0fb:	push   r9
  42a0fd:	movzx  ecx,r13w
  42a101:	mov    r9,r15
  42a104:	mov    rdx,r12
  42a107:	movzx  esi,bp
  42a10a:	mov    rdi,rax
  42a10d:	mov    rbx,rax
  42a110:	call   42a010 <xmlStrEqual@plt+0x260d0>
  42a115:	add    rsp,0x28
  42a119:	mov    rax,rbx
  42a11c:	pop    rbx
  42a11d:	pop    rbp
  42a11e:	pop    r12
  42a120:	pop    r13
  42a122:	pop    r14
  42a124:	pop    r15
  42a126:	ret    
  42a127:	nop    WORD PTR [rax+rax*1+0x0]
  42a130:	endbr64 
  42a134:	test   rdi,rdi
  42a137:	je     42a13e <xmlStrEqual@plt+0x261fe>
  42a139:	mov    rax,QWORD PTR [rdi+0x8]
  42a13d:	ret    
  42a13e:	push   rax
  42a13f:	call   4278f0 <xmlStrEqual@plt+0x239b0>
  42a144:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  42a14f:	nop
  42a150:	endbr64 
  42a154:	push   rbx
  42a155:	mov    edi,0x8
  42a15a:	call   434fe0 <xmlStrEqual@plt+0x310a0>
  42a15f:	mov    rdi,0x426b00
  42a166:	mov    rbx,rax
  42a169:	call   42dca0 <xmlStrEqual@plt+0x29d60>
  42a16e:	mov    QWORD PTR [rbx],rax
  42a171:	mov    rax,rbx
  42a174:	pop    rbx
  42a175:	ret    
  42a176:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42a180:	endbr64 
  42a184:	push   rbp
  42a185:	xor    eax,eax
  42a187:	push   rbx
  42a188:	sub    rsp,0x8
  42a18c:	call   42a150 <xmlStrEqual@plt+0x26210>
  42a191:	test   rax,rax
  42a194:	je     42a1d0 <xmlStrEqual@plt+0x26290>
  42a196:	mov    edi,0x3
  42a19b:	mov    rbp,rax
  42a19e:	call   424b10 <xmlStrEqual@plt+0x20bd0>
  42a1a3:	mov    rbx,rax
  42a1a6:	test   rax,rax
  42a1a9:	je     42a1e0 <xmlStrEqual@plt+0x262a0>
  42a1ab:	mov    esi,0xa
  42a1b0:	mov    rdi,rax
  42a1b3:	call   425470 <xmlStrEqual@plt+0x21530>
  42a1b8:	mov    rsi,rbp
  42a1bb:	mov    rdi,rbx
  42a1be:	call   425440 <xmlStrEqual@plt+0x21500>
  42a1c3:	add    rsp,0x8
  42a1c7:	mov    rax,rbx
  42a1ca:	pop    rbx
  42a1cb:	pop    rbp
  42a1cc:	ret    
  42a1cd:	nop    DWORD PTR [rax]
  42a1d0:	xor    ebx,ebx
  42a1d2:	add    rsp,0x8
  42a1d6:	mov    rax,rbx
  42a1d9:	pop    rbx
  42a1da:	pop    rbp
  42a1db:	ret    
  42a1dc:	nop    DWORD PTR [rax+0x0]
  42a1e0:	mov    rdi,rbp
  42a1e3:	call   4271d0 <xmlStrEqual@plt+0x23290>
  42a1e8:	jmp    42a1c3 <xmlStrEqual@plt+0x26283>
  42a1ea:	nop    WORD PTR [rax+rax*1+0x0]
  42a1f0:	endbr64 
  42a1f4:	push   r14
  42a1f6:	xor    eax,eax
  42a1f8:	push   r13
  42a1fa:	push   r12
  42a1fc:	push   rbp
  42a1fd:	mov    rbp,rsi
  42a200:	push   rbx
  42a201:	mov    rbx,rdi
  42a204:	add    rbx,0x8
  42a208:	call   42a150 <xmlStrEqual@plt+0x26210>
  42a20d:	mov    QWORD PTR [rbp+0x0],rax
  42a211:	movbe  bp,WORD PTR [rbx-0x2]
  42a217:	movzx  ebp,bp
  42a21a:	test   ebp,ebp
  42a21c:	je     42a2ec <xmlStrEqual@plt+0x263ac>
  42a222:	mov    r13,rax
  42a225:	mov    r12d,0x8
  42a22b:	jmp    42a250 <xmlStrEqual@plt+0x26310>
  42a22d:	nop    DWORD PTR [rax]
  42a230:	movsxd rdi,eax
  42a233:	sub    ebp,0x2
  42a236:	mov    rsi,QWORD PTR [r13+0x0]
  42a23a:	add    rbx,rdi
  42a23d:	sub    ebp,eax
  42a23f:	mov    rdi,r14
  42a242:	lea    r12d,[rax+r12*1+0x2]
  42a247:	call   42de80 <xmlStrEqual@plt+0x29f40>
  42a24c:	test   ebp,ebp
  42a24e:	jle    42a2c8 <xmlStrEqual@plt+0x26388>
  42a250:	mov    edi,0x1
  42a255:	mov    esi,0x10
  42a25a:	call   403a80 <calloc@plt>
  42a25f:	movzx  edx,BYTE PTR [rbx+0x1]
  42a263:	mov    r14,rax
  42a266:	mov    eax,edx
  42a268:	shr    al,0x2
  42a26b:	and    eax,0x1
  42a26e:	mov    ecx,eax
  42a270:	movzx  eax,BYTE PTR [r14]
  42a274:	mov    esi,edx
  42a276:	and    eax,0xfffffffc
  42a279:	and    esi,0x2
  42a27c:	or     eax,ecx
  42a27e:	or     eax,esi
  42a280:	and    edx,0x1
  42a283:	shl    edx,0x2
  42a286:	and    eax,0xfffffffb
  42a289:	or     eax,edx
  42a28b:	mov    BYTE PTR [r14],al
  42a28e:	xor    eax,eax
  42a290:	call   424be0 <xmlStrEqual@plt+0x20ca0>
  42a295:	add    rbx,0x2
  42a299:	mov    rsi,rax
  42a29c:	mov    rdi,rbx
  42a29f:	mov    QWORD PTR [r14+0x8],rax
  42a2a3:	call   425230 <xmlStrEqual@plt+0x212f0>
  42a2a8:	test   eax,eax
  42a2aa:	jg     42a230 <xmlStrEqual@plt+0x262f0>
  42a2ac:	mov    rdi,QWORD PTR [r13+0x0]
  42a2b0:	xor    r12d,r12d
  42a2b3:	call   42e2b0 <xmlStrEqual@plt+0x2a370>
  42a2b8:	pop    rbx
  42a2b9:	pop    rbp
  42a2ba:	mov    eax,r12d
  42a2bd:	pop    r12
  42a2bf:	pop    r13
  42a2c1:	pop    r14
  42a2c3:	ret    
  42a2c4:	nop    DWORD PTR [rax+0x0]
  42a2c8:	je     42a2b8 <xmlStrEqual@plt+0x26378>
  42a2ca:	mov    rax,0x469e3c
  42a2d1:	mov    eax,DWORD PTR [rax]
  42a2d3:	test   eax,eax
  42a2d5:	jle    42a2b8 <xmlStrEqual@plt+0x26378>
  42a2d7:	lea    rsi,[rip+0x24e5a]        # 44f138 <xmlStrEqual@plt+0x4b1f8>
  42a2de:	mov    edi,0x5
  42a2e3:	xor    eax,eax
  42a2e5:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  42a2ea:	jmp    42a2b8 <xmlStrEqual@plt+0x26378>
  42a2ec:	mov    r12d,0x8
  42a2f2:	jmp    42a2b8 <xmlStrEqual@plt+0x26378>
  42a2f4:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  42a2ff:	nop
  42a300:	endbr64 
  42a304:	push   rbp
  42a305:	mov    rbp,rdi
  42a308:	mov    edi,0x10
  42a30d:	push   rbx
  42a30e:	sub    rsp,0x8
  42a312:	call   434fe0 <xmlStrEqual@plt+0x310a0>
  42a317:	mov    rbx,rax
  42a31a:	movzx  edx,BYTE PTR [rbp+0x0]
  42a31e:	movzx  eax,BYTE PTR [rax]
  42a321:	and    edx,0x1
  42a324:	and    eax,0xfffffffe
  42a327:	or     eax,edx
  42a329:	mov    BYTE PTR [rbx],al
  42a32b:	and    eax,0xfffffffd
  42a32e:	movzx  edx,BYTE PTR [rbp+0x0]
  42a332:	and    edx,0x2
  42a335:	or     eax,edx
  42a337:	mov    BYTE PTR [rbx],al
  42a339:	and    eax,0xfffffffb
  42a33c:	movzx  edx,BYTE PTR [rbp+0x0]
  42a340:	and    edx,0x4
  42a343:	or     eax,edx
  42a345:	mov    BYTE PTR [rbx],al
  42a347:	mov    rdi,QWORD PTR [rbp+0x8]
  42a34b:	call   425060 <xmlStrEqual@plt+0x21120>
  42a350:	mov    QWORD PTR [rbx+0x8],rax
  42a354:	add    rsp,0x8
  42a358:	mov    rax,rbx
  42a35b:	pop    rbx
  42a35c:	pop    rbp
  42a35d:	ret    
  42a35e:	xchg   ax,ax
  42a360:	endbr64 
  42a364:	push   r12
  42a366:	mov    r12,rsi
  42a369:	push   rbp
  42a36a:	push   rbx
  42a36b:	sub    rsp,0x10
  42a36f:	mov    rbp,QWORD PTR [rdi]
  42a372:	test   rbp,rbp
  42a375:	je     42a3b0 <xmlStrEqual@plt+0x26470>
  42a377:	mov    rax,QWORD PTR [r12]
  42a37b:	mov    rbx,QWORD PTR [rax+0x8]
  42a37f:	cmp    rax,rbx
  42a382:	je     42a3a7 <xmlStrEqual@plt+0x26467>
  42a384:	nop    DWORD PTR [rax+0x0]
  42a388:	mov    rdi,QWORD PTR [rbx+0x10]
  42a38c:	call   42a300 <xmlStrEqual@plt+0x263c0>
  42a391:	mov    rsi,QWORD PTR [rbp+0x0]
  42a395:	mov    rdi,rax
  42a398:	call   42de80 <xmlStrEqual@plt+0x29f40>
  42a39d:	mov    rbx,QWORD PTR [rbx+0x8]
  42a3a1:	cmp    QWORD PTR [r12],rbx
  42a3a5:	jne    42a388 <xmlStrEqual@plt+0x26448>
  42a3a7:	add    rsp,0x10
  42a3ab:	pop    rbx
  42a3ac:	pop    rbp
  42a3ad:	pop    r12
  42a3af:	ret    
  42a3b0:	xor    eax,eax
  42a3b2:	mov    QWORD PTR [rsp+0x8],rdi
  42a3b7:	call   42a150 <xmlStrEqual@plt+0x26210>
  42a3bc:	mov    rdi,QWORD PTR [rsp+0x8]
  42a3c1:	mov    rbp,rax
  42a3c4:	mov    QWORD PTR [rdi],rax
  42a3c7:	jmp    42a377 <xmlStrEqual@plt+0x26437>
  42a3c9:	nop    DWORD PTR [rax+0x0]
  42a3d0:	endbr64 
  42a3d4:	push   r14
  42a3d6:	mov    r14,rdi
  42a3d9:	mov    edi,0x10
  42a3de:	push   r13
  42a3e0:	mov    r13d,esi
  42a3e3:	push   r12
  42a3e5:	mov    r12d,edx
  42a3e8:	push   rbp
  42a3e9:	mov    ebp,ecx
  42a3eb:	push   rbx
  42a3ec:	call   434fe0 <xmlStrEqual@plt+0x310a0>
  42a3f1:	mov    rbx,rax
  42a3f4:	test   rax,rax
  42a3f7:	je     42a429 <xmlStrEqual@plt+0x264e9>
  42a3f9:	mov    rdi,r14
  42a3fc:	call   425060 <xmlStrEqual@plt+0x21120>
  42a401:	movzx  ecx,BYTE PTR [rbx]
  42a404:	and    r13d,0x1
  42a408:	and    ecx,0xfffffffc
  42a40b:	and    r12d,0x1
  42a40f:	add    r12d,r12d
  42a412:	or     ecx,r13d
  42a415:	or     ecx,r12d
  42a418:	and    ebp,0x1
  42a41b:	shl    ebp,0x2
  42a41e:	and    ecx,0xfffffffb
  42a421:	or     ecx,ebp
  42a423:	mov    QWORD PTR [rbx+0x8],rax
  42a427:	mov    BYTE PTR [rbx],cl
  42a429:	mov    rax,rbx
  42a42c:	pop    rbx
  42a42d:	pop    rbp
  42a42e:	pop    r12
  42a430:	pop    r13
  42a432:	pop    r14
  42a434:	ret    
  42a435:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  42a440:	endbr64 
  42a444:	mov    rax,QWORD PTR [rdi+0x8]
  42a448:	ret    
  42a449:	nop    DWORD PTR [rax+0x0]
  42a450:	endbr64 
  42a454:	push   rbp
  42a455:	mov    rbp,rsi
  42a458:	push   rbx
  42a459:	sub    rsp,0x8
  42a45d:	mov    rsi,QWORD PTR [rdi]
  42a460:	test   rsi,rsi
  42a463:	je     42a478 <xmlStrEqual@plt+0x26538>
  42a465:	add    rsp,0x8
  42a469:	pop    rbx
  42a46a:	mov    rdi,rbp
  42a46d:	pop    rbp
  42a46e:	jmp    42de80 <xmlStrEqual@plt+0x29f40>
  42a473:	nop    DWORD PTR [rax+rax*1+0x0]
  42a478:	mov    rbx,rdi
  42a47b:	mov    rdi,0x426b00
  42a482:	call   42dca0 <xmlStrEqual@plt+0x29d60>
  42a487:	mov    QWORD PTR [rbx],rax
  42a48a:	add    rsp,0x8
  42a48e:	mov    rdi,rbp
  42a491:	pop    rbx
  42a492:	mov    rsi,rax
  42a495:	pop    rbp
  42a496:	jmp    42de80 <xmlStrEqual@plt+0x29f40>
  42a49b:	nop    DWORD PTR [rax+rax*1+0x0]
  42a4a0:	endbr64 
  42a4a4:	mov    rax,QWORD PTR [rdi+0x8]
  42a4a8:	mov    rax,QWORD PTR [rax]
  42a4ab:	ret    
  42a4ac:	nop    DWORD PTR [rax+0x0]
  42a4b0:	endbr64 
  42a4b4:	cmp    DWORD PTR [rdi+0x18],0x3
  42a4b8:	je     42a4c0 <xmlStrEqual@plt+0x26580>
  42a4ba:	xor    eax,eax
  42a4bc:	ret    
  42a4bd:	nop    DWORD PTR [rax]
  42a4c0:	sub    rsp,0x8
  42a4c4:	call   425460 <xmlStrEqual@plt+0x21520>
  42a4c9:	cmp    eax,0xa
  42a4cc:	sete   al
  42a4cf:	movzx  eax,al
  42a4d2:	add    rsp,0x8
  42a4d6:	ret    
  42a4d7:	nop    WORD PTR [rax+rax*1+0x0]
  42a4e0:	endbr64 
  42a4e4:	push   rbx
  42a4e5:	mov    edi,0x8
  42a4ea:	call   434fe0 <xmlStrEqual@plt+0x310a0>
  42a4ef:	mov    rdi,0x426b20
  42a4f6:	mov    rbx,rax
  42a4f9:	call   42dca0 <xmlStrEqual@plt+0x29d60>
  42a4fe:	mov    QWORD PTR [rbx],rax
  42a501:	mov    rax,rbx
  42a504:	pop    rbx
  42a505:	ret    
  42a506:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42a510:	endbr64 
  42a514:	push   rbp
  42a515:	mov    rbp,rdi
  42a518:	mov    edi,0x10
  42a51d:	push   rbx
  42a51e:	sub    rsp,0x8
  42a522:	call   434fe0 <xmlStrEqual@plt+0x310a0>
  42a527:	mov    rbx,rax
  42a52a:	movzx  eax,BYTE PTR [rbp+0x8]
  42a52e:	mov    BYTE PTR [rbx+0x8],al
  42a531:	mov    rdi,QWORD PTR [rbp+0x0]
  42a535:	call   425060 <xmlStrEqual@plt+0x21120>
  42a53a:	mov    QWORD PTR [rbx],rax
  42a53d:	add    rsp,0x8
  42a541:	mov    rax,rbx
  42a544:	pop    rbx
  42a545:	pop    rbp
  42a546:	ret    
  42a547:	nop    WORD PTR [rax+rax*1+0x0]
  42a550:	endbr64 
  42a554:	push   r12
  42a556:	mov    r12,rsi
  42a559:	push   rbp
  42a55a:	push   rbx
  42a55b:	mov    rbp,QWORD PTR [rdi]
  42a55e:	test   rbp,rbp
  42a561:	je     42a598 <xmlStrEqual@plt+0x26658>
  42a563:	mov    rax,QWORD PTR [r12]
  42a567:	mov    rbx,QWORD PTR [rax+0x8]
  42a56b:	cmp    rax,rbx
  42a56e:	je     42a58f <xmlStrEqual@plt+0x2664f>
  42a570:	mov    rdi,QWORD PTR [rbx+0x10]
  42a574:	call   42a510 <xmlStrEqual@plt+0x265d0>
  42a579:	mov    rsi,QWORD PTR [rbp+0x0]
  42a57d:	mov    rdi,rax
  42a580:	call   42de80 <xmlStrEqual@plt+0x29f40>
  42a585:	mov    rbx,QWORD PTR [rbx+0x8]
  42a589:	cmp    QWORD PTR [r12],rbx
  42a58d:	jne    42a570 <xmlStrEqual@plt+0x26630>
  42a58f:	pop    rbx
  42a590:	pop    rbp
  42a591:	pop    r12
  42a593:	ret    
  42a594:	nop    DWORD PTR [rax+0x0]
  42a598:	mov    rbx,rdi
  42a59b:	mov    edi,0x8
  42a5a0:	call   434fe0 <xmlStrEqual@plt+0x310a0>
  42a5a5:	mov    rdi,0x426b20
  42a5ac:	mov    rbp,rax
  42a5af:	call   42dca0 <xmlStrEqual@plt+0x29d60>
  42a5b4:	mov    QWORD PTR [rbp+0x0],rax
  42a5b8:	mov    QWORD PTR [rbx],rbp
  42a5bb:	jmp    42a563 <xmlStrEqual@plt+0x26623>
  42a5bd:	nop    DWORD PTR [rax]
  42a5c0:	endbr64 
  42a5c4:	push   rbx
  42a5c5:	mov    edi,0x10
  42a5ca:	call   434fe0 <xmlStrEqual@plt+0x310a0>
  42a5cf:	mov    rbx,rax
  42a5d2:	xor    eax,eax
  42a5d4:	call   424be0 <xmlStrEqual@plt+0x20ca0>
  42a5d9:	mov    QWORD PTR [rbx],rax
  42a5dc:	mov    rax,rbx
  42a5df:	pop    rbx
  42a5e0:	ret    
  42a5e1:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  42a5ec:	nop    DWORD PTR [rax+0x0]
  42a5f0:	endbr64 
  42a5f4:	mov    rax,QWORD PTR [rdi+0x8]
  42a5f8:	mov    rax,QWORD PTR [rax]
  42a5fb:	ret    
  42a5fc:	nop    DWORD PTR [rax+0x0]
  42a600:	endbr64 
  42a604:	push   rbx
  42a605:	mov    edi,0x8
  42a60a:	call   434fe0 <xmlStrEqual@plt+0x310a0>
  42a60f:	mov    rdi,0x424bf0
  42a616:	mov    rbx,rax
  42a619:	call   42dca0 <xmlStrEqual@plt+0x29d60>
  42a61e:	mov    QWORD PTR [rbx],rax
  42a621:	mov    rax,rbx
  42a624:	pop    rbx
  42a625:	ret    
  42a626:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42a630:	endbr64 
  42a634:	sub    rsp,0x8
  42a638:	test   rdi,rdi
  42a63b:	je     42a687 <xmlStrEqual@plt+0x26747>
  42a63d:	mov    ecx,DWORD PTR [rdi]
  42a63f:	mov    rax,0x4699c0
  42a646:	mov    rdx,rcx
  42a649:	mov    rax,QWORD PTR [rax+rcx*8]
  42a64d:	test   rax,rax
  42a650:	je     42a660 <xmlStrEqual@plt+0x26720>
  42a652:	mov    rdi,QWORD PTR [rdi+0x8]
  42a656:	add    rsp,0x8
  42a65a:	jmp    rax
  42a65c:	nop    DWORD PTR [rax+0x0]
  42a660:	mov    rax,0x469e3c
  42a667:	mov    eax,DWORD PTR [rax]
  42a669:	test   eax,eax
  42a66b:	jle    42a680 <xmlStrEqual@plt+0x26740>
  42a66d:	lea    rsi,[rip+0x24af4]        # 44f168 <xmlStrEqual@plt+0x4b228>
  42a674:	mov    edi,0x5
  42a679:	xor    eax,eax
  42a67b:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  42a680:	xor    eax,eax
  42a682:	add    rsp,0x8
  42a686:	ret    
  42a687:	call   4278c0 <xmlStrEqual@plt+0x23980>
  42a68c:	nop    DWORD PTR [rax+0x0]
  42a690:	endbr64 
  42a694:	sub    rsp,0x8
  42a698:	test   rdi,rdi
  42a69b:	je     42a6e7 <xmlStrEqual@plt+0x267a7>
  42a69d:	mov    ecx,DWORD PTR [rdi]
  42a69f:	mov    rax,0x469940
  42a6a6:	mov    rdx,rcx
  42a6a9:	mov    rax,QWORD PTR [rax+rcx*8]
  42a6ad:	test   rax,rax
  42a6b0:	je     42a6c0 <xmlStrEqual@plt+0x26780>
  42a6b2:	mov    rdi,QWORD PTR [rdi+0x8]
  42a6b6:	add    rsp,0x8
  42a6ba:	jmp    rax
  42a6bc:	nop    DWORD PTR [rax+0x0]
  42a6c0:	mov    rax,0x469e3c
  42a6c7:	mov    eax,DWORD PTR [rax]
  42a6c9:	test   eax,eax
  42a6cb:	jle    42a6e0 <xmlStrEqual@plt+0x267a0>
  42a6cd:	lea    rsi,[rip+0x24ac4]        # 44f198 <xmlStrEqual@plt+0x4b258>
  42a6d4:	mov    edi,0x5
  42a6d9:	xor    eax,eax
  42a6db:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  42a6e0:	xor    eax,eax
  42a6e2:	add    rsp,0x8
  42a6e6:	ret    
  42a6e7:	call   4278c0 <xmlStrEqual@plt+0x23980>
  42a6ec:	nop    DWORD PTR [rax+0x0]
  42a6f0:	endbr64 
  42a6f4:	push   r13
  42a6f6:	push   r12
  42a6f8:	push   rbp
  42a6f9:	push   rbx
  42a6fa:	sub    rsp,0x8
  42a6fe:	test   rdi,rdi
  42a701:	je     42a7d0 <xmlStrEqual@plt+0x26890>
  42a707:	mov    edx,DWORD PTR [rdi]
  42a709:	mov    r12,rdi
  42a70c:	mov    r13,rsi
  42a70f:	cmp    edx,0xa
  42a712:	je     42a798 <xmlStrEqual@plt+0x26858>
  42a718:	cmp    edx,0xd
  42a71b:	je     42a750 <xmlStrEqual@plt+0x26810>
  42a71d:	mov    rax,0x469e3c
  42a724:	xor    ebx,ebx
  42a726:	mov    eax,DWORD PTR [rax]
  42a728:	test   eax,eax
  42a72a:	jle    42a73f <xmlStrEqual@plt+0x267ff>
  42a72c:	lea    rsi,[rip+0x24a9d]        # 44f1d0 <xmlStrEqual@plt+0x4b290>
  42a733:	mov    edi,0x5
  42a738:	xor    eax,eax
  42a73a:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  42a73f:	add    rsp,0x8
  42a743:	mov    eax,ebx
  42a745:	pop    rbx
  42a746:	pop    rbp
  42a747:	pop    r12
  42a749:	pop    r13
  42a74b:	ret    
  42a74c:	nop    DWORD PTR [rax+0x0]
  42a750:	mov    rax,QWORD PTR [rdi+0x8]
  42a754:	mov    rax,QWORD PTR [rax]
  42a757:	mov    rbx,QWORD PTR [rax+0x8]
  42a75b:	cmp    rbx,rax
  42a75e:	je     42a77f <xmlStrEqual@plt+0x2683f>
  42a760:	mov    rbp,QWORD PTR [rbx+0x10]
  42a764:	mov    rdi,QWORD PTR [rbp+0x0]
  42a768:	call   424bf0 <xmlStrEqual@plt+0x20cb0>
  42a76d:	mov    rbx,QWORD PTR [rbx+0x8]
  42a771:	mov    rax,QWORD PTR [r12+0x8]
  42a776:	mov    QWORD PTR [rbp+0x0],r13
  42a77a:	cmp    rbx,QWORD PTR [rax]
  42a77d:	jne    42a760 <xmlStrEqual@plt+0x26820>
  42a77f:	add    rsp,0x8
  42a783:	mov    ebx,0x1
  42a788:	mov    eax,ebx
  42a78a:	pop    rbx
  42a78b:	pop    rbp
  42a78c:	pop    r12
  42a78e:	pop    r13
  42a790:	ret    
  42a791:	nop    DWORD PTR [rax+0x0]
  42a798:	mov    rax,QWORD PTR [rdi+0x8]
  42a79c:	mov    rax,QWORD PTR [rax]
  42a79f:	mov    edx,DWORD PTR [rax+0x18]
  42a7a2:	test   edx,edx
  42a7a4:	je     40410a <xmlStrEqual@plt+0x1ca>
  42a7aa:	mov    rax,QWORD PTR [rax]
  42a7ad:	mov    rbx,QWORD PTR [rax+0x10]
  42a7b1:	mov    rdi,QWORD PTR [rbx+0x8]
  42a7b5:	call   424bf0 <xmlStrEqual@plt+0x20cb0>
  42a7ba:	mov    QWORD PTR [rbx+0x8],r13
  42a7be:	add    rsp,0x8
  42a7c2:	mov    ebx,0x1
  42a7c7:	mov    eax,ebx
  42a7c9:	pop    rbx
  42a7ca:	pop    rbp
  42a7cb:	pop    r12
  42a7cd:	pop    r13
  42a7cf:	ret    
  42a7d0:	call   427a40 <xmlStrEqual@plt+0x23b00>
  42a7d5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42a7df:	nop
  42a7e0:	endbr64 
  42a7e4:	mov    rsi,QWORD PTR [rsi]
  42a7e7:	mov    rdi,QWORD PTR [rdi]
  42a7ea:	jmp    425310 <xmlStrEqual@plt+0x213d0>
  42a7ef:	nop
  42a7f0:	endbr64 
  42a7f4:	test   rdi,rdi
  42a7f7:	je     42a810 <xmlStrEqual@plt+0x268d0>
  42a7f9:	push   rbx
  42a7fa:	mov    rbx,rdi
  42a7fd:	mov    rdi,QWORD PTR [rdi]
  42a800:	call   424bf0 <xmlStrEqual@plt+0x20cb0>
  42a805:	mov    rdi,rbx
  42a808:	pop    rbx
  42a809:	jmp    4037b0 <free@plt>
  42a80e:	xchg   ax,ax
  42a810:	ret    
  42a811:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  42a81c:	nop    DWORD PTR [rax+0x0]
  42a820:	endbr64 
  42a824:	mov    edi,0x10
  42a829:	jmp    434fe0 <xmlStrEqual@plt+0x310a0>
  42a82e:	xchg   ax,ax
  42a830:	endbr64 
  42a834:	push   r15
  42a836:	mov    r15d,esi
  42a839:	push   r14
  42a83b:	mov    r14d,edx
  42a83e:	push   r13
  42a840:	mov    r13d,ecx
  42a843:	push   r12
  42a845:	mov    r12d,r8d
  42a848:	push   rbp
  42a849:	mov    ebp,r9d
  42a84c:	push   rbx
  42a84d:	sub    rsp,0x28
  42a851:	mov    eax,DWORD PTR [rsp+0x68]
  42a855:	mov    QWORD PTR [rsp+0x10],rdi
  42a85a:	mov    DWORD PTR [rsp+0xc],eax
  42a85e:	xor    eax,eax
  42a860:	mov    ebx,DWORD PTR [rsp+0x60]
  42a864:	call   42a820 <xmlStrEqual@plt+0x268e0>
  42a869:	mov    rdx,rax
  42a86c:	test   rax,rax
  42a86f:	je     42a8a7 <xmlStrEqual@plt+0x26967>
  42a871:	mov    rdi,QWORD PTR [rsp+0x10]
  42a876:	mov    QWORD PTR [rsp+0x18],rax
  42a87b:	call   425060 <xmlStrEqual@plt+0x21120>
  42a880:	mov    rdx,QWORD PTR [rsp+0x18]
  42a885:	mov    QWORD PTR [rdx],rax
  42a888:	movzx  eax,BYTE PTR [rsp+0xc]
  42a88d:	mov    BYTE PTR [rdx+0x8],r15b
  42a891:	mov    BYTE PTR [rdx+0x9],r14b
  42a895:	mov    BYTE PTR [rdx+0xa],r13b
  42a899:	mov    BYTE PTR [rdx+0xb],r12b
  42a89d:	mov    BYTE PTR [rdx+0xc],bpl
  42a8a1:	mov    BYTE PTR [rdx+0xd],bl
  42a8a4:	mov    BYTE PTR [rdx+0xe],al
  42a8a7:	add    rsp,0x28
  42a8ab:	pop    rbx
  42a8ac:	pop    rbp
  42a8ad:	pop    r12
  42a8af:	pop    r13
  42a8b1:	pop    r14
  42a8b3:	mov    rax,rdx
  42a8b6:	pop    r15
  42a8b8:	ret    
  42a8b9:	nop    DWORD PTR [rax+0x0]
  42a8c0:	endbr64 
  42a8c4:	push   rbp
  42a8c5:	mov    ecx,DWORD PTR [rip+0x48ad9]        # 4733a4 <xmlStrEqual@plt+0x6f464>
  42a8cb:	mov    rbp,rsp
  42a8ce:	push   r14
  42a8d0:	push   rbx
  42a8d1:	test   rdi,rdi
  42a8d4:	je     42ab48 <xmlStrEqual@plt+0x26c08>
  42a8da:	inc    ecx
  42a8dc:	mov    eax,ecx
  42a8de:	mov    edx,0x66666667
  42a8e3:	imul   edx
  42a8e5:	mov    eax,ecx
  42a8e7:	sar    eax,0x1f
  42a8ea:	sar    edx,1
  42a8ec:	sub    edx,eax
  42a8ee:	lea    eax,[rdx+rdx*4]
  42a8f1:	mov    edx,ecx
  42a8f3:	sub    edx,eax
  42a8f5:	mov    DWORD PTR [rip+0x48aa9],edx        # 4733a4 <xmlStrEqual@plt+0x6f464>
  42a8fb:	movsxd rdx,edx
  42a8fe:	imul   rdx,rdx,0x1f4
  42a905:	lea    rbx,[rip+0x480d4]        # 4729e0 <xmlStrEqual@plt+0x6eaa0>
  42a90c:	mov    r14,rdi
  42a90f:	mov    BYTE PTR [rbx+rdx*1],0x0
  42a913:	mov    rdi,QWORD PTR [rdi]
  42a916:	call   424d40 <xmlStrEqual@plt+0x20e00>
  42a91b:	movsxd rcx,DWORD PTR [rip+0x48a82]        # 4733a4 <xmlStrEqual@plt+0x6f464>
  42a922:	mov    r9,rax
  42a925:	imul   rcx,rcx,0x1f4
  42a92c:	add    rcx,rbx
  42a92f:	mov    rdi,rcx
  42a932:	mov    esi,DWORD PTR [rdi]
  42a934:	add    rdi,0x4
  42a938:	lea    edx,[rsi-0x1010101]
  42a93e:	andn   edx,esi,edx
  42a943:	and    edx,0x80808080
  42a949:	je     42a932 <xmlStrEqual@plt+0x269f2>
  42a94b:	mov    esi,edx
  42a94d:	shr    esi,0x10
  42a950:	test   edx,0x8080
  42a956:	cmove  edx,esi
  42a959:	lea    rsi,[rdi+0x2]
  42a95d:	cmove  rdi,rsi
  42a961:	mov    eax,edx
  42a963:	add    al,dl
  42a965:	sbb    rdi,0x3
  42a969:	sub    rdi,rcx
  42a96c:	mov    esi,0x1f4
  42a971:	sub    rsi,rdi
  42a974:	mov    edx,0x1
  42a979:	add    rdi,rcx
  42a97c:	xor    eax,eax
  42a97e:	lea    r8,[rip+0x1e283]        # 448c08 <xmlStrEqual@plt+0x44cc8>
  42a985:	mov    rcx,0xffffffffffffffff
  42a98c:	call   403a40 <__snprintf_chk@plt>
  42a991:	movsxd rdx,DWORD PTR [rip+0x48a0c]        # 4733a4 <xmlStrEqual@plt+0x6f464>
  42a998:	cmp    BYTE PTR [r14+0x8],0x0
  42a99d:	lea    r9,[rip+0x24dee]        # 44f792 <xmlStrEqual@plt+0x4b852>
  42a9a4:	lea    rax,[rip+0x24dea]        # 44f795 <xmlStrEqual@plt+0x4b855>
  42a9ab:	cmove  r9,rax
  42a9af:	imul   rdx,rdx,0x1f4
  42a9b6:	add    rdx,rbx
  42a9b9:	mov    rdi,rdx
  42a9bc:	mov    ecx,DWORD PTR [rdi]
  42a9be:	add    rdi,0x4
  42a9c2:	lea    eax,[rcx-0x1010101]
  42a9c8:	andn   eax,ecx,eax
  42a9cd:	and    eax,0x80808080
  42a9d2:	je     42a9bc <xmlStrEqual@plt+0x26a7c>
  42a9d4:	mov    ecx,eax
  42a9d6:	shr    ecx,0x10
  42a9d9:	test   eax,0x8080
  42a9de:	cmove  eax,ecx
  42a9e1:	lea    rcx,[rdi+0x2]
  42a9e5:	cmove  rdi,rcx
  42a9e9:	mov    esi,eax
  42a9eb:	add    sil,al
  42a9ee:	sbb    rdi,0x3
  42a9f2:	sub    rdi,rdx
  42a9f5:	mov    esi,0x1f4
  42a9fa:	sub    rsi,rdi
  42a9fd:	lea    r8,[rip+0x1e204]        # 448c08 <xmlStrEqual@plt+0x44cc8>
  42aa04:	add    rdi,rdx
  42aa07:	mov    rcx,0xffffffffffffffff
  42aa0e:	mov    edx,0x1
  42aa13:	xor    eax,eax
  42aa15:	call   403a40 <__snprintf_chk@plt>
  42aa1a:	movsxd rdx,DWORD PTR [rip+0x48983]        # 4733a4 <xmlStrEqual@plt+0x6f464>
  42aa21:	imul   rdx,rdx,0x1f4
  42aa28:	add    rdx,rbx
  42aa2b:	mov    rdi,rdx
  42aa2e:	mov    ecx,DWORD PTR [rdi]
  42aa30:	add    rdi,0x4
  42aa34:	lea    eax,[rcx-0x1010101]
  42aa3a:	andn   eax,ecx,eax
  42aa3f:	and    eax,0x80808080
  42aa44:	je     42aa2e <xmlStrEqual@plt+0x26aee>
  42aa46:	mov    ecx,eax
  42aa48:	shr    ecx,0x10
  42aa4b:	test   eax,0x8080
  42aa50:	cmove  eax,ecx
  42aa53:	lea    rcx,[rdi+0x2]
  42aa57:	cmove  rdi,rcx
  42aa5b:	mov    esi,eax
  42aa5d:	add    sil,al
  42aa60:	movzx  eax,BYTE PTR [r14+0xa]
  42aa65:	sbb    rdi,0x3
  42aa69:	sub    rsp,0x8
  42aa6d:	push   rax
  42aa6e:	sub    rdi,rdx
  42aa71:	mov    esi,0x1f4
  42aa76:	movzx  r9d,BYTE PTR [r14+0x9]
  42aa7b:	sub    rsi,rdi
  42aa7e:	lea    r8,[rip+0x24d15]        # 44f79a <xmlStrEqual@plt+0x4b85a>
  42aa85:	add    rdi,rdx
  42aa88:	mov    rcx,0xffffffffffffffff
  42aa8f:	mov    edx,0x1
  42aa94:	xor    eax,eax
  42aa96:	call   403a40 <__snprintf_chk@plt>
  42aa9b:	movsxd rdx,DWORD PTR [rip+0x48902]        # 4733a4 <xmlStrEqual@plt+0x6f464>
  42aaa2:	imul   rdx,rdx,0x1f4
  42aaa9:	add    rdx,rbx
  42aaac:	mov    rdi,rdx
  42aaaf:	mov    ecx,DWORD PTR [rdi]
  42aab1:	add    rdi,0x4
  42aab5:	lea    eax,[rcx-0x1010101]
  42aabb:	andn   eax,ecx,eax
  42aac0:	and    eax,0x80808080
  42aac5:	je     42aaaf <xmlStrEqual@plt+0x26b6f>
  42aac7:	mov    ecx,eax
  42aac9:	shr    ecx,0x10
  42aacc:	test   eax,0x8080
  42aad1:	cmove  eax,ecx
  42aad4:	lea    rcx,[rdi+0x2]
  42aad8:	mov    esi,eax
  42aada:	cmove  rdi,rcx
  42aade:	add    sil,al
  42aae1:	movzx  eax,BYTE PTR [r14+0xe]
  42aae6:	sbb    rdi,0x3
  42aaea:	mov    DWORD PTR [rsp],eax
  42aaed:	sub    rdi,rdx
  42aaf0:	mov    esi,0x1f4
  42aaf5:	movzx  eax,BYTE PTR [r14+0xd]
  42aafa:	sub    rsi,rdi
  42aafd:	push   rax
  42aafe:	add    rdi,rdx
  42ab01:	lea    r8,[rip+0x24c9f]        # 44f7a7 <xmlStrEqual@plt+0x4b867>
  42ab08:	movzx  eax,BYTE PTR [r14+0xc]
  42ab0d:	mov    rcx,0xffffffffffffffff
  42ab14:	push   rax
  42ab15:	mov    edx,0x1
  42ab1a:	xor    eax,eax
  42ab1c:	movzx  r9d,BYTE PTR [r14+0xb]
  42ab21:	call   403a40 <__snprintf_chk@plt>
  42ab26:	movsxd rax,DWORD PTR [rip+0x48877]        # 4733a4 <xmlStrEqual@plt+0x6f464>
  42ab2d:	add    rsp,0x20
  42ab31:	imul   rax,rax,0x1f4
  42ab38:	lea    rsp,[rbp-0x10]
  42ab3c:	add    rax,rbx
  42ab3f:	pop    rbx
  42ab40:	pop    r14
  42ab42:	pop    rbp
  42ab43:	ret    
  42ab44:	nop    DWORD PTR [rax+0x0]
  42ab48:	movsxd rax,ecx
  42ab4b:	imul   rax,rax,0x1f4
  42ab52:	lea    rbx,[rip+0x47e87]        # 4729e0 <xmlStrEqual@plt+0x6eaa0>
  42ab59:	mov    edx,0x5f4c
  42ab5e:	add    rax,rbx
  42ab61:	mov    DWORD PTR [rax],0x4c554e5f
  42ab67:	mov    WORD PTR [rax+0x4],dx
  42ab6b:	mov    BYTE PTR [rax+0x6],0x0
  42ab6f:	lea    rsp,[rbp-0x10]
  42ab73:	pop    rbx
  42ab74:	pop    r14
  42ab76:	pop    rbp
  42ab77:	ret    
  42ab78:	nop    DWORD PTR [rax+rax*1+0x0]
  42ab80:	endbr64 
  42ab84:	push   r12
  42ab86:	push   rbp
  42ab87:	mov    rbp,rsi
  42ab8a:	push   rbx
  42ab8b:	mov    rbx,rdi
  42ab8e:	mov    rsi,QWORD PTR [rsi]
  42ab91:	movzx  r12d,BYTE PTR [rdi+0x5]
  42ab96:	test   rsi,rsi
  42ab99:	je     42abf8 <xmlStrEqual@plt+0x26cb8>
  42ab9b:	lea    rdi,[rbx+0x6]
  42ab9f:	call   425230 <xmlStrEqual@plt+0x212f0>
  42aba4:	xor    edx,edx
  42aba6:	test   eax,eax
  42aba8:	jle    42abeb <xmlStrEqual@plt+0x26cab>
  42abaa:	and    r12d,0x5
  42abae:	cmp    r12b,0x4
  42abb2:	setne  BYTE PTR [rbp+0x8]
  42abb6:	movzx  edx,BYTE PTR [rbx+0x5]
  42abba:	shr    dl,0x2
  42abbd:	and    edx,0x1
  42abc0:	mov    BYTE PTR [rbp+0x9],dl
  42abc3:	movzx  edx,BYTE PTR [rbx+0x5]
  42abc7:	and    edx,0x1
  42abca:	mov    BYTE PTR [rbp+0xa],dl
  42abcd:	movzx  edx,BYTE PTR [rbx]
  42abd0:	mov    BYTE PTR [rbp+0xb],dl
  42abd3:	movzx  edx,BYTE PTR [rbx+0x1]
  42abd7:	mov    BYTE PTR [rbp+0xc],dl
  42abda:	movzx  edx,BYTE PTR [rbx+0x2]
  42abde:	mov    BYTE PTR [rbp+0xd],dl
  42abe1:	movzx  edx,BYTE PTR [rbx+0x3]
  42abe5:	mov    BYTE PTR [rbp+0xe],dl
  42abe8:	lea    edx,[rax+0x6]
  42abeb:	pop    rbx
  42abec:	pop    rbp
  42abed:	mov    eax,edx
  42abef:	pop    r12
  42abf1:	ret    
  42abf2:	nop    WORD PTR [rax+rax*1+0x0]
  42abf8:	xor    eax,eax
  42abfa:	call   424be0 <xmlStrEqual@plt+0x20ca0>
  42abff:	mov    rsi,rax
  42ac02:	mov    QWORD PTR [rbp+0x0],rax
  42ac06:	jmp    42ab9b <xmlStrEqual@plt+0x26c5b>
  42ac08:	nop    DWORD PTR [rax+rax*1+0x0]
  42ac10:	endbr64 
  42ac14:	push   rbp
  42ac15:	mov    rbp,rdi
  42ac18:	push   rbx
  42ac19:	mov    rbx,rsi
  42ac1c:	sub    rsp,0x8
  42ac20:	mov    rsi,QWORD PTR [rsi]
  42ac23:	mov    rdi,QWORD PTR [rdi]
  42ac26:	call   425310 <xmlStrEqual@plt+0x213d0>
  42ac2b:	mov    edx,0x1
  42ac30:	test   eax,eax
  42ac32:	jne    42ac3d <xmlStrEqual@plt+0x26cfd>
  42ac34:	movzx  eax,BYTE PTR [rbx+0xb]
  42ac38:	cmp    BYTE PTR [rbp+0xb],al
  42ac3b:	je     42ac50 <xmlStrEqual@plt+0x26d10>
  42ac3d:	add    rsp,0x8
  42ac41:	pop    rbx
  42ac42:	mov    eax,edx
  42ac44:	pop    rbp
  42ac45:	ret    
  42ac46:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42ac50:	movzx  eax,BYTE PTR [rbx+0xc]
  42ac54:	cmp    BYTE PTR [rbp+0xc],al
  42ac57:	jne    42ac3d <xmlStrEqual@plt+0x26cfd>
  42ac59:	movzx  eax,BYTE PTR [rbx+0xd]
  42ac5d:	cmp    BYTE PTR [rbp+0xd],al
  42ac60:	jne    42ac3d <xmlStrEqual@plt+0x26cfd>
  42ac62:	movzx  eax,BYTE PTR [rbx+0xe]
  42ac66:	xor    edx,edx
  42ac68:	cmp    BYTE PTR [rbp+0xe],al
  42ac6b:	setne  dl
  42ac6e:	jmp    42ac3d <xmlStrEqual@plt+0x26cfd>
  42ac70:	endbr64 
  42ac74:	sub    rsp,0x8
  42ac78:	movzx  eax,BYTE PTR [rdi+0xe]
  42ac7c:	movzx  ecx,BYTE PTR [rdi+0xa]
  42ac80:	movzx  edx,BYTE PTR [rdi+0x9]
  42ac84:	movzx  esi,BYTE PTR [rdi+0x8]
  42ac88:	push   rax
  42ac89:	movzx  eax,BYTE PTR [rdi+0xd]
  42ac8d:	push   rax
  42ac8e:	movzx  r9d,BYTE PTR [rdi+0xc]
  42ac93:	movzx  r8d,BYTE PTR [rdi+0xb]
  42ac98:	mov    rdi,QWORD PTR [rdi]
  42ac9b:	call   42a830 <xmlStrEqual@plt+0x268f0>
  42aca0:	add    rsp,0x18
  42aca4:	ret    
  42aca5:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  42acb0:	endbr64 
  42acb4:	mov    DWORD PTR [rsi],0x0
  42acba:	mov    DWORD PTR [rdx],0x0
  42acc0:	test   rdi,rdi
  42acc3:	je     42acf8 <xmlStrEqual@plt+0x26db8>
  42acc5:	mov    eax,DWORD PTR [rdi+0x18]
  42acc8:	test   eax,eax
  42acca:	je     42acf8 <xmlStrEqual@plt+0x26db8>
  42accc:	push   rbx
  42accd:	mov    rbx,rdx
  42acd0:	mov    rax,QWORD PTR [rdi+0x8]
  42acd4:	mov    rax,QWORD PTR [rax+0x10]
  42acd8:	mov    rdi,QWORD PTR [rax]
  42acdb:	mov    eax,DWORD PTR [rdi+0x18]
  42acde:	mov    DWORD PTR [rsi],eax
  42ace0:	cmp    eax,0x1
  42ace3:	je     42ad40 <xmlStrEqual@plt+0x26e00>
  42ace5:	test   eax,eax
  42ace7:	je     42ad30 <xmlStrEqual@plt+0x26df0>
  42ace9:	cmp    eax,0x2
  42acec:	je     42ad10 <xmlStrEqual@plt+0x26dd0>
  42acee:	cmp    eax,0x3
  42acf1:	je     42ad00 <xmlStrEqual@plt+0x26dc0>
  42acf3:	pop    rbx
  42acf4:	ret    
  42acf5:	nop    DWORD PTR [rax]
  42acf8:	ret    
  42acf9:	nop    DWORD PTR [rax+0x0]
  42ad00:	call   425460 <xmlStrEqual@plt+0x21520>
  42ad05:	mov    DWORD PTR [rbx],eax
  42ad07:	pop    rbx
  42ad08:	ret    
  42ad09:	nop    DWORD PTR [rax+0x0]
  42ad10:	mov    rax,0x469e3c
  42ad17:	cmp    DWORD PTR [rax],0x1
  42ad1a:	jle    42acf3 <xmlStrEqual@plt+0x26db3>
  42ad1c:	lea    rsi,[rip+0x24a95]        # 44f7b8 <xmlStrEqual@plt+0x4b878>
  42ad23:	mov    edi,0x6
  42ad28:	xor    eax,eax
  42ad2a:	pop    rbx
  42ad2b:	jmp    430e20 <xmlStrEqual@plt+0x2cee0>
  42ad30:	mov    DWORD PTR [rdx],0x0
  42ad36:	pop    rbx
  42ad37:	ret    
  42ad38:	nop    DWORD PTR [rax+rax*1+0x0]
  42ad40:	call   425890 <xmlStrEqual@plt+0x21950>
  42ad45:	movzx  eax,ax
  42ad48:	mov    DWORD PTR [rbx],eax
  42ad4a:	pop    rbx
  42ad4b:	ret    
  42ad4c:	nop    DWORD PTR [rax+0x0]
  42ad50:	endbr64 
  42ad54:	push   r13
  42ad56:	push   r12
  42ad58:	push   rbp
  42ad59:	push   rbx
  42ad5a:	sub    rsp,0x8
  42ad5e:	test   rdi,rdi
  42ad61:	je     42adb0 <xmlStrEqual@plt+0x26e70>
  42ad63:	mov    eax,DWORD PTR [rdi+0x18]
  42ad66:	test   eax,eax
  42ad68:	je     42adb0 <xmlStrEqual@plt+0x26e70>
  42ad6a:	test   rsi,rsi
  42ad6d:	je     42adb0 <xmlStrEqual@plt+0x26e70>
  42ad6f:	mov    rbx,QWORD PTR [rdi+0x8]
  42ad73:	mov    r13,rsi
  42ad76:	mov    r12,rdi
  42ad79:	cmp    rdi,rbx
  42ad7c:	jne    42ad89 <xmlStrEqual@plt+0x26e49>
  42ad7e:	jmp    42adb0 <xmlStrEqual@plt+0x26e70>
  42ad80:	mov    rbx,QWORD PTR [rbx+0x8]
  42ad84:	cmp    r12,rbx
  42ad87:	je     42adb0 <xmlStrEqual@plt+0x26e70>
  42ad89:	mov    rbp,QWORD PTR [rbx+0x10]
  42ad8d:	mov    rsi,r13
  42ad90:	mov    rdi,QWORD PTR [rbp+0x0]
  42ad94:	call   425310 <xmlStrEqual@plt+0x213d0>
  42ad99:	test   eax,eax
  42ad9b:	jne    42ad80 <xmlStrEqual@plt+0x26e40>
  42ad9d:	add    rsp,0x8
  42ada1:	pop    rbx
  42ada2:	mov    rax,rbp
  42ada5:	pop    rbp
  42ada6:	pop    r12
  42ada8:	pop    r13
  42adaa:	ret    
  42adab:	nop    DWORD PTR [rax+rax*1+0x0]
  42adb0:	add    rsp,0x8
  42adb4:	pop    rbx
  42adb5:	xor    ebp,ebp
  42adb7:	mov    rax,rbp
  42adba:	pop    rbp
  42adbb:	pop    r12
  42adbd:	pop    r13
  42adbf:	ret    
  42adc0:	endbr64 
  42adc4:	push   r13
  42adc6:	push   r12
  42adc8:	push   rbp
  42adc9:	push   rbx
  42adca:	sub    rsp,0x8
  42adce:	test   rdi,rdi
  42add1:	je     42ae30 <xmlStrEqual@plt+0x26ef0>
  42add3:	mov    eax,DWORD PTR [rdi+0x18]
  42add6:	test   eax,eax
  42add8:	je     42ae30 <xmlStrEqual@plt+0x26ef0>
  42adda:	test   rsi,rsi
  42addd:	je     42ae30 <xmlStrEqual@plt+0x26ef0>
  42addf:	mov    rbx,QWORD PTR [rdi+0x8]
  42ade3:	mov    r13,rsi
  42ade6:	mov    r12,rdi
  42ade9:	cmp    rdi,rbx
  42adec:	jne    42adf9 <xmlStrEqual@plt+0x26eb9>
  42adee:	jmp    42ae30 <xmlStrEqual@plt+0x26ef0>
  42adf0:	mov    rbx,QWORD PTR [rbx+0x8]
  42adf4:	cmp    r12,rbx
  42adf7:	je     42ae30 <xmlStrEqual@plt+0x26ef0>
  42adf9:	mov    rbp,QWORD PTR [rbx+0x10]
  42adfd:	mov    rsi,r13
  42ae00:	mov    rdi,QWORD PTR [rbp+0x0]
  42ae04:	call   425310 <xmlStrEqual@plt+0x213d0>
  42ae09:	test   eax,eax
  42ae0b:	jne    42adf0 <xmlStrEqual@plt+0x26eb0>
  42ae0d:	mov    rsi,r12
  42ae10:	mov    rdi,rbx
  42ae13:	call   42e050 <xmlStrEqual@plt+0x2a110>
  42ae18:	add    rsp,0x8
  42ae1c:	pop    rbx
  42ae1d:	mov    rax,rbp
  42ae20:	pop    rbp
  42ae21:	pop    r12
  42ae23:	pop    r13
  42ae25:	ret    
  42ae26:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42ae30:	add    rsp,0x8
  42ae34:	pop    rbx
  42ae35:	xor    ebp,ebp
  42ae37:	mov    rax,rbp
  42ae3a:	pop    rbp
  42ae3b:	pop    r12
  42ae3d:	pop    r13
  42ae3f:	ret    
  42ae40:	endbr64 
  42ae44:	test   rdi,rdi
  42ae47:	je     42ae90 <xmlStrEqual@plt+0x26f50>
  42ae49:	mov    eax,DWORD PTR [rdi+0x18]
  42ae4c:	test   eax,eax
  42ae4e:	je     42ae90 <xmlStrEqual@plt+0x26f50>
  42ae50:	test   rsi,rsi
  42ae53:	je     42ae90 <xmlStrEqual@plt+0x26f50>
  42ae55:	mov    rdx,QWORD PTR [rdi+0x8]
  42ae59:	mov    eax,0xfffffffa
  42ae5e:	cmp    rdi,rdx
  42ae61:	jne    42ae71 <xmlStrEqual@plt+0x26f31>
  42ae63:	jmp    42ae93 <xmlStrEqual@plt+0x26f53>
  42ae65:	nop    DWORD PTR [rax]
  42ae68:	mov    rdx,QWORD PTR [rdx+0x8]
  42ae6c:	cmp    rdi,rdx
  42ae6f:	je     42ae98 <xmlStrEqual@plt+0x26f58>
  42ae71:	cmp    rsi,QWORD PTR [rdx+0x10]
  42ae75:	jne    42ae68 <xmlStrEqual@plt+0x26f28>
  42ae77:	sub    rsp,0x8
  42ae7b:	mov    rsi,rdi
  42ae7e:	mov    rdi,rdx
  42ae81:	call   42e050 <xmlStrEqual@plt+0x2a110>
  42ae86:	mov    eax,0x1
  42ae8b:	add    rsp,0x8
  42ae8f:	ret    
  42ae90:	xor    eax,eax
  42ae92:	ret    
  42ae93:	ret    
  42ae94:	nop    DWORD PTR [rax+0x0]
  42ae98:	mov    eax,0xfffffffa
  42ae9d:	ret    
  42ae9e:	xchg   ax,ax
  42aea0:	endbr64 
  42aea4:	push   r12
  42aea6:	xor    r12d,r12d
  42aea9:	push   rbp
  42aeaa:	push   rbx
  42aeab:	test   rdi,rdi
  42aeae:	je     42aefd <xmlStrEqual@plt+0x26fbd>
  42aeb0:	mov    eax,DWORD PTR [rdi+0x18]
  42aeb3:	test   eax,eax
  42aeb5:	je     42aefd <xmlStrEqual@plt+0x26fbd>
  42aeb7:	mov    rbp,rdi
  42aeba:	mov    rsi,0x42a7f0
  42aec1:	mov    rdi,0x42a7e0
  42aec8:	call   42dc50 <xmlStrEqual@plt+0x29d10>
  42aecd:	mov    rbx,QWORD PTR [rbp+0x8]
  42aed1:	mov    r12,rax
  42aed4:	cmp    rbp,rbx
  42aed7:	je     42aefd <xmlStrEqual@plt+0x26fbd>
  42aed9:	nop    DWORD PTR [rax+0x0]
  42aee0:	mov    rdi,QWORD PTR [rbx+0x10]
  42aee4:	call   42ac70 <xmlStrEqual@plt+0x26d30>
  42aee9:	mov    rdi,rax
  42aeec:	mov    rsi,r12
  42aeef:	call   42dcf0 <xmlStrEqual@plt+0x29db0>
  42aef4:	mov    rbx,QWORD PTR [rbx+0x8]
  42aef8:	cmp    rbp,rbx
  42aefb:	jne    42aee0 <xmlStrEqual@plt+0x26fa0>
  42aefd:	pop    rbx
  42aefe:	pop    rbp
  42aeff:	mov    rax,r12
  42af02:	pop    r12
  42af04:	ret    
  42af05:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  42af10:	endbr64 
  42af14:	push   rbx
  42af15:	test   rdi,rdi
  42af18:	je     42af80 <xmlStrEqual@plt+0x27040>
  42af1a:	test   rsi,rsi
  42af1d:	je     42af80 <xmlStrEqual@plt+0x27040>
  42af1f:	mov    edx,DWORD PTR [rdi+0x18]
  42af22:	test   edx,edx
  42af24:	je     42af50 <xmlStrEqual@plt+0x27010>
  42af26:	mov    eax,DWORD PTR [rsi+0x18]
  42af29:	test   eax,eax
  42af2b:	je     42af50 <xmlStrEqual@plt+0x27010>
  42af2d:	mov    rax,QWORD PTR [rsi+0x8]
  42af31:	pop    rbx
  42af32:	mov    rdx,QWORD PTR [rax+0x10]
  42af36:	mov    rax,QWORD PTR [rdi+0x8]
  42af3a:	mov    rsi,QWORD PTR [rdx]
  42af3d:	mov    rax,QWORD PTR [rax+0x10]
  42af41:	mov    rdi,QWORD PTR [rax]
  42af44:	jmp    425950 <xmlStrEqual@plt+0x21a10>
  42af49:	nop    DWORD PTR [rax+0x0]
  42af50:	mov    rax,0x469e3c
  42af57:	mov    ebx,0xfffffffe
  42af5c:	cmp    DWORD PTR [rax],0x1
  42af5f:	jle    42af74 <xmlStrEqual@plt+0x27034>
  42af61:	lea    rsi,[rip+0x24898]        # 44f800 <xmlStrEqual@plt+0x4b8c0>
  42af68:	mov    edi,0x6
  42af6d:	xor    eax,eax
  42af6f:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  42af74:	mov    eax,ebx
  42af76:	pop    rbx
  42af77:	ret    
  42af78:	nop    DWORD PTR [rax+rax*1+0x0]
  42af80:	mov    ebx,0xfffffffe
  42af85:	jmp    42af74 <xmlStrEqual@plt+0x27034>
  42af87:	nop    WORD PTR [rax+rax*1+0x0]
  42af90:	endbr64 
  42af94:	jmp    42af10 <xmlStrEqual@plt+0x26fd0>
  42af99:	nop    DWORD PTR [rax+0x0]
  42afa0:	endbr64 
  42afa4:	mov    rax,QWORD PTR [rdi]
  42afa7:	test   rax,rax
  42afaa:	je     42afb8 <xmlStrEqual@plt+0x27078>
  42afac:	mov    rdi,rax
  42afaf:	jmp    424fd0 <xmlStrEqual@plt+0x21090>
  42afb4:	nop    DWORD PTR [rax+0x0]
  42afb8:	sub    rsp,0x18
  42afbc:	mov    QWORD PTR [rsp+0x8],rsi
  42afc1:	mov    QWORD PTR [rsp],rdi
  42afc5:	call   424be0 <xmlStrEqual@plt+0x20ca0>
  42afca:	mov    rdi,QWORD PTR [rsp]
  42afce:	mov    rsi,QWORD PTR [rsp+0x8]
  42afd3:	mov    QWORD PTR [rdi],rax
  42afd6:	mov    rdi,rax
  42afd9:	add    rsp,0x18
  42afdd:	jmp    424fd0 <xmlStrEqual@plt+0x21090>
  42afe2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42afec:	nop    DWORD PTR [rax+0x0]
  42aff0:	endbr64 
  42aff4:	push   rbx
  42aff5:	mov    edi,0x40
  42affa:	call   434fe0 <xmlStrEqual@plt+0x310a0>
  42afff:	mov    rbx,rax
  42b002:	test   rax,rax
  42b005:	je     42b023 <xmlStrEqual@plt+0x270e3>
  42b007:	mov    rsi,0x42e2b0
  42b00e:	mov    rdi,0x42af10
  42b015:	call   42dc50 <xmlStrEqual@plt+0x29d10>
  42b01a:	mov    QWORD PTR [rbx+0x28],rax
  42b01e:	test   rax,rax
  42b021:	je     42b030 <xmlStrEqual@plt+0x270f0>
  42b023:	mov    rax,rbx
  42b026:	pop    rbx
  42b027:	ret    
  42b028:	nop    DWORD PTR [rax+rax*1+0x0]
  42b030:	mov    rdi,rbx
  42b033:	call   4037b0 <free@plt>
  42b038:	xor    ebx,ebx
  42b03a:	jmp    42b023 <xmlStrEqual@plt+0x270e3>
  42b03c:	nop    DWORD PTR [rax+0x0]
  42b040:	endbr64 
  42b044:	push   rbp
  42b045:	mov    rbp,rdi
  42b048:	push   rbx
  42b049:	sub    rsp,0x8
  42b04d:	call   425670 <xmlStrEqual@plt+0x21730>
  42b052:	test   rax,rax
  42b055:	je     42b0a0 <xmlStrEqual@plt+0x27160>
  42b057:	mov    edi,0x40
  42b05c:	call   434fe0 <xmlStrEqual@plt+0x310a0>
  42b061:	mov    rbx,rax
  42b064:	test   rax,rax
  42b067:	je     42b0d0 <xmlStrEqual@plt+0x27190>
  42b069:	mov    rsi,0x42e2b0
  42b070:	mov    rdi,0x42af10
  42b077:	call   42dc50 <xmlStrEqual@plt+0x29d10>
  42b07c:	mov    QWORD PTR [rbx+0x28],rax
  42b080:	test   rax,rax
  42b083:	je     42b0c0 <xmlStrEqual@plt+0x27180>
  42b085:	mov    rsi,rbp
  42b088:	mov    rdi,rbx
  42b08b:	call   424fd0 <xmlStrEqual@plt+0x21090>
  42b090:	add    rsp,0x8
  42b094:	mov    rax,rbx
  42b097:	pop    rbx
  42b098:	pop    rbp
  42b099:	ret    
  42b09a:	nop    WORD PTR [rax+rax*1+0x0]
  42b0a0:	mov    rdi,rbp
  42b0a3:	call   4255a0 <xmlStrEqual@plt+0x21660>
  42b0a8:	mov    rbx,rax
  42b0ab:	test   rax,rax
  42b0ae:	je     42b0f0 <xmlStrEqual@plt+0x271b0>
  42b0b0:	mov    rdi,rax
  42b0b3:	call   424de0 <xmlStrEqual@plt+0x20ea0>
  42b0b8:	jmp    42b057 <xmlStrEqual@plt+0x27117>
  42b0ba:	nop    WORD PTR [rax+rax*1+0x0]
  42b0c0:	mov    rdi,rbx
  42b0c3:	call   4037b0 <free@plt>
  42b0c8:	nop    DWORD PTR [rax+rax*1+0x0]
  42b0d0:	lea    rsi,[rip+0x24799]        # 44f870 <xmlStrEqual@plt+0x4b930>
  42b0d7:	mov    edi,0x3
  42b0dc:	xor    eax,eax
  42b0de:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  42b0e3:	xor    ebx,ebx
  42b0e5:	jmp    42b090 <xmlStrEqual@plt+0x27150>
  42b0e7:	nop    WORD PTR [rax+rax*1+0x0]
  42b0f0:	mov    rdi,rbp
  42b0f3:	call   424d40 <xmlStrEqual@plt+0x20e00>
  42b0f8:	mov    rdx,rax
  42b0fb:	lea    rsi,[rip+0x24736]        # 44f838 <xmlStrEqual@plt+0x4b8f8>
  42b102:	mov    edi,0x3
  42b107:	xor    eax,eax
  42b109:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  42b10e:	jmp    42b090 <xmlStrEqual@plt+0x27150>
  42b110:	endbr64 
  42b114:	test   rdi,rdi
  42b117:	je     42b140 <xmlStrEqual@plt+0x27200>
  42b119:	push   rbx
  42b11a:	mov    rbx,rdi
  42b11d:	mov    rdi,QWORD PTR [rdi+0x28]
  42b121:	call   42e2b0 <xmlStrEqual@plt+0x2a370>
  42b126:	mov    rdi,rbx
  42b129:	call   425bb0 <xmlStrEqual@plt+0x21c70>
  42b12e:	mov    rdi,rbx
  42b131:	pop    rbx
  42b132:	jmp    4037b0 <free@plt>
  42b137:	nop    WORD PTR [rax+rax*1+0x0]
  42b140:	ret    
  42b141:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  42b14c:	nop    DWORD PTR [rax+0x0]
  42b150:	endbr64 
  42b154:	push   r15
  42b156:	push   r14
  42b158:	push   r13
  42b15a:	mov    r13,rdi
  42b15d:	push   r12
  42b15f:	push   rbp
  42b160:	push   rbx
  42b161:	mov    rbx,rsi
  42b164:	sub    rsp,0x18
  42b168:	call   425310 <xmlStrEqual@plt+0x213d0>
  42b16d:	test   eax,eax
  42b16f:	jne    42b17e <xmlStrEqual@plt+0x2723e>
  42b171:	mov    ebp,eax
  42b173:	movzx  eax,WORD PTR [rbx+0x20]
  42b177:	cmp    WORD PTR [r13+0x20],ax
  42b17c:	je     42b198 <xmlStrEqual@plt+0x27258>
  42b17e:	mov    ebp,0x1
  42b183:	add    rsp,0x18
  42b187:	pop    rbx
  42b188:	mov    eax,ebp
  42b18a:	pop    rbp
  42b18b:	pop    r12
  42b18d:	pop    r13
  42b18f:	pop    r14
  42b191:	pop    r15
  42b193:	ret    
  42b194:	nop    DWORD PTR [rax+0x0]
  42b198:	mov    rcx,QWORD PTR [rbx+0x28]
  42b19c:	mov    rax,QWORD PTR [r13+0x28]
  42b1a0:	mov    edx,DWORD PTR [rcx+0x18]
  42b1a3:	cmp    DWORD PTR [rax+0x18],edx
  42b1a6:	jne    42b17e <xmlStrEqual@plt+0x2723e>
  42b1a8:	test   edx,edx
  42b1aa:	je     42b258 <xmlStrEqual@plt+0x27318>
  42b1b0:	mov    rcx,QWORD PTR [rcx+0x8]
  42b1b4:	mov    QWORD PTR [rsp+0x8],rcx
  42b1b9:	mov    r14,QWORD PTR [rax+0x8]
  42b1bd:	cmp    rax,r14
  42b1c0:	je     42b183 <xmlStrEqual@plt+0x27243>
  42b1c2:	mov    rax,QWORD PTR [rsp+0x8]
  42b1c7:	mov    r12,QWORD PTR [r14+0x10]
  42b1cb:	mov    rdx,QWORD PTR [rax+0x10]
  42b1cf:	mov    eax,DWORD PTR [rdx+0x18]
  42b1d2:	cmp    eax,DWORD PTR [r12+0x18]
  42b1d7:	jne    42b17e <xmlStrEqual@plt+0x2723e>
  42b1d9:	test   eax,eax
  42b1db:	je     42b250 <xmlStrEqual@plt+0x27310>
  42b1dd:	mov    r15,QWORD PTR [rdx+0x8]
  42b1e1:	mov    rbx,QWORD PTR [r12+0x8]
  42b1e6:	cmp    rbx,r12
  42b1e9:	jne    42b1fd <xmlStrEqual@plt+0x272bd>
  42b1eb:	jmp    42b218 <xmlStrEqual@plt+0x272d8>
  42b1ed:	nop    DWORD PTR [rax]
  42b1f0:	mov    rbx,QWORD PTR [rbx+0x8]
  42b1f4:	mov    r15,QWORD PTR [r15+0x8]
  42b1f8:	cmp    rbx,r12
  42b1fb:	je     42b218 <xmlStrEqual@plt+0x272d8>
  42b1fd:	mov    rsi,QWORD PTR [r15+0x10]
  42b201:	mov    rdi,QWORD PTR [rbx+0x10]
  42b205:	call   42ac10 <xmlStrEqual@plt+0x26cd0>
  42b20a:	test   eax,eax
  42b20c:	je     42b1f0 <xmlStrEqual@plt+0x272b0>
  42b20e:	jmp    42b17e <xmlStrEqual@plt+0x2723e>
  42b213:	nop    DWORD PTR [rax+rax*1+0x0]
  42b218:	mov    rax,QWORD PTR [rsp+0x8]
  42b21d:	mov    r14,QWORD PTR [r14+0x8]
  42b221:	mov    rax,QWORD PTR [rax+0x8]
  42b225:	mov    QWORD PTR [rsp+0x8],rax
  42b22a:	cmp    QWORD PTR [r13+0x28],r14
  42b22e:	je     42b183 <xmlStrEqual@plt+0x27243>
  42b234:	mov    rax,QWORD PTR [rsp+0x8]
  42b239:	mov    r12,QWORD PTR [r14+0x10]
  42b23d:	mov    rdx,QWORD PTR [rax+0x10]
  42b241:	mov    eax,DWORD PTR [rdx+0x18]
  42b244:	cmp    DWORD PTR [r12+0x18],eax
  42b249:	je     42b1d9 <xmlStrEqual@plt+0x27299>
  42b24b:	jmp    42b17e <xmlStrEqual@plt+0x2723e>
  42b250:	xor    r15d,r15d
  42b253:	jmp    42b1e1 <xmlStrEqual@plt+0x272a1>
  42b255:	nop    DWORD PTR [rax]
  42b258:	mov    QWORD PTR [rsp+0x8],0x0
  42b261:	jmp    42b1b9 <xmlStrEqual@plt+0x27279>
  42b266:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42b270:	endbr64 
  42b274:	push   rbp
  42b275:	mov    rbp,rdi
  42b278:	mov    edi,0x40
  42b27d:	push   rbx
  42b27e:	sub    rsp,0x8
  42b282:	call   434fe0 <xmlStrEqual@plt+0x310a0>
  42b287:	test   rax,rax
  42b28a:	je     42b2e2 <xmlStrEqual@plt+0x273a2>
  42b28c:	mov    rsi,0x42e2b0
  42b293:	mov    rdi,0x42af10
  42b29a:	mov    rbx,rax
  42b29d:	call   42dc50 <xmlStrEqual@plt+0x29d10>
  42b2a2:	mov    QWORD PTR [rbx+0x28],rax
  42b2a6:	test   rax,rax
  42b2a9:	je     42b2da <xmlStrEqual@plt+0x2739a>
  42b2ab:	mov    rsi,rbp
  42b2ae:	mov    rdi,rbx
  42b2b1:	call   424fd0 <xmlStrEqual@plt+0x21090>
  42b2b6:	movzx  eax,BYTE PTR [rbp+0x34]
  42b2ba:	mov    BYTE PTR [rbx+0x34],al
  42b2bd:	movzx  eax,BYTE PTR [rbp+0x35]
  42b2c1:	mov    BYTE PTR [rbx+0x35],al
  42b2c4:	mov    eax,DWORD PTR [rbp+0x30]
  42b2c7:	mov    DWORD PTR [rbx+0x30],eax
  42b2ca:	xor    eax,eax
  42b2cc:	mov    WORD PTR [rbx+0x20],ax
  42b2d0:	add    rsp,0x8
  42b2d4:	mov    rax,rbx
  42b2d7:	pop    rbx
  42b2d8:	pop    rbp
  42b2d9:	ret    
  42b2da:	mov    rdi,rbx
  42b2dd:	call   4037b0 <free@plt>
  42b2e2:	mov    rsi,rbp
  42b2e5:	xor    edi,edi
  42b2e7:	call   424fd0 <xmlStrEqual@plt+0x21090>
  42b2ec:	mov    BYTE PTR ds:0x34,0x0
  42b2f4:	ud2    
  42b2f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42b300:	endbr64 
  42b304:	push   r14
  42b306:	mov    BYTE PTR [rip+0x480b3],0x0        # 4733c0 <xmlStrEqual@plt+0x6f480>
  42b30d:	push   r13
  42b30f:	mov    r13,rdi
  42b312:	push   r12
  42b314:	push   rbp
  42b315:	push   rbx
  42b316:	movzx  r14d,BYTE PTR [rdi+0x35]
  42b31b:	movzx  edi,BYTE PTR [rdi+0x34]
  42b31f:	call   42d460 <xmlStrEqual@plt+0x29520>
  42b324:	mov    rdi,r13
  42b327:	mov    r12,rax
  42b32a:	movzx  ebp,WORD PTR [r13+0x20]
  42b32f:	mov    ebx,DWORD PTR [r13+0x30]
  42b333:	call   424d40 <xmlStrEqual@plt+0x20e00>
  42b338:	push   r14
  42b33a:	mov    r9,rax
  42b33d:	lea    r8,[rip+0x24564]        # 44f8a8 <xmlStrEqual@plt+0x4b968>
  42b344:	push   r12
  42b346:	xor    eax,eax
  42b348:	mov    ecx,0x3e8
  42b34d:	push   rbp
  42b34e:	mov    edx,0x1
  42b353:	mov    esi,0x3e8
  42b358:	push   rbx
  42b359:	lea    rdi,[rip+0x48060]        # 4733c0 <xmlStrEqual@plt+0x6f480>
  42b360:	call   403a40 <__snprintf_chk@plt>
  42b365:	add    rsp,0x20
  42b369:	cmp    WORD PTR [r13+0x20],0x0
  42b36f:	je     42b452 <xmlStrEqual@plt+0x27512>
  42b375:	mov    rax,QWORD PTR [r13+0x28]
  42b379:	mov    r12,QWORD PTR [rax+0x8]
  42b37d:	cmp    rax,r12
  42b380:	je     42b452 <xmlStrEqual@plt+0x27512>
  42b386:	lea    rbp,[rip+0x48033]        # 4733c0 <xmlStrEqual@plt+0x6f480>
  42b38d:	jmp    42b39f <xmlStrEqual@plt+0x2745f>
  42b38f:	nop
  42b390:	mov    r12,QWORD PTR [r12+0x8]
  42b395:	cmp    r12,QWORD PTR [r13+0x28]
  42b399:	je     42b452 <xmlStrEqual@plt+0x27512>
  42b39f:	mov    rbx,QWORD PTR [r12+0x10]
  42b3a4:	mov    edx,DWORD PTR [rbx+0x18]
  42b3a7:	test   edx,edx
  42b3a9:	je     42b390 <xmlStrEqual@plt+0x27450>
  42b3ab:	mov    r14,QWORD PTR [rbx+0x8]
  42b3af:	mov    rdi,QWORD PTR [r14+0x10]
  42b3b3:	mov    rax,QWORD PTR [rdi]
  42b3b6:	mov    eax,DWORD PTR [rax+0x18]
  42b3b9:	test   eax,eax
  42b3bb:	je     42b390 <xmlStrEqual@plt+0x27450>
  42b3bd:	cmp    rbx,r14
  42b3c0:	jne    42b3cc <xmlStrEqual@plt+0x2748c>
  42b3c2:	jmp    42b390 <xmlStrEqual@plt+0x27450>
  42b3c4:	nop    DWORD PTR [rax+0x0]
  42b3c8:	mov    rdi,QWORD PTR [r14+0x10]
  42b3cc:	call   42a8c0 <xmlStrEqual@plt+0x26980>
  42b3d1:	mov    r9,rax
  42b3d4:	lea    rdi,[rip+0x47fe5]        # 4733c0 <xmlStrEqual@plt+0x6f480>
  42b3db:	mov    ecx,DWORD PTR [rdi]
  42b3dd:	add    rdi,0x4
  42b3e1:	lea    edx,[rcx-0x1010101]
  42b3e7:	andn   edx,ecx,edx
  42b3ec:	and    edx,0x80808080
  42b3f2:	je     42b3db <xmlStrEqual@plt+0x2749b>
  42b3f4:	mov    ecx,edx
  42b3f6:	shr    ecx,0x10
  42b3f9:	test   edx,0x8080
  42b3ff:	cmove  edx,ecx
  42b402:	lea    rcx,[rdi+0x2]
  42b406:	cmove  rdi,rcx
  42b40a:	mov    eax,edx
  42b40c:	add    al,dl
  42b40e:	sbb    rdi,0x3
  42b412:	sub    rdi,rbp
  42b415:	mov    esi,0x3e8
  42b41a:	sub    rsi,rdi
  42b41d:	lea    r8,[rip+0x24895]        # 44fcb9 <xmlStrEqual@plt+0x4bd79>
  42b424:	add    rdi,rbp
  42b427:	mov    rcx,0xffffffffffffffff
  42b42e:	mov    edx,0x1
  42b433:	xor    eax,eax
  42b435:	call   403a40 <__snprintf_chk@plt>
  42b43a:	mov    r14,QWORD PTR [r14+0x8]
  42b43e:	cmp    rbx,r14
  42b441:	jne    42b3c8 <xmlStrEqual@plt+0x27488>
  42b443:	mov    r12,QWORD PTR [r12+0x8]
  42b448:	cmp    r12,QWORD PTR [r13+0x28]
  42b44c:	jne    42b39f <xmlStrEqual@plt+0x2745f>
  42b452:	pop    rbx
  42b453:	pop    rbp
  42b454:	pop    r12
  42b456:	pop    r13
  42b458:	lea    rax,[rip+0x47f61]        # 4733c0 <xmlStrEqual@plt+0x6f480>
  42b45f:	pop    r14
  42b461:	ret    
  42b462:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  42b46d:	nop    DWORD PTR [rax]
  42b470:	endbr64 
  42b474:	push   rbx
  42b475:	mov    rbx,rdi
  42b478:	mov    rdi,QWORD PTR [rdi+0x28]
  42b47c:	call   42e260 <xmlStrEqual@plt+0x2a320>
  42b481:	xor    eax,eax
  42b483:	mov    WORD PTR [rbx+0x20],ax
  42b487:	pop    rbx
  42b488:	ret    
  42b489:	nop    DWORD PTR [rax+0x0]
  42b490:	endbr64 
  42b494:	test   rdi,rdi
  42b497:	je     42b520 <xmlStrEqual@plt+0x275e0>
  42b49d:	test   rsi,rsi
  42b4a0:	je     42b520 <xmlStrEqual@plt+0x275e0>
  42b4a2:	push   r14
  42b4a4:	push   r13
  42b4a6:	mov    r13,rsi
  42b4a9:	push   r12
  42b4ab:	mov    r12,rdi
  42b4ae:	push   rbp
  42b4af:	push   rbx
  42b4b0:	mov    rdi,QWORD PTR [rdi+0x28]
  42b4b4:	call   42e260 <xmlStrEqual@plt+0x2a320>
  42b4b9:	mov    rbx,QWORD PTR [r13+0x8]
  42b4bd:	cmp    r13,rbx
  42b4c0:	je     42b528 <xmlStrEqual@plt+0x275e8>
  42b4c2:	xor    r14d,r14d
  42b4c5:	nop    DWORD PTR [rax]
  42b4c8:	mov    rdi,QWORD PTR [rbx+0x10]
  42b4cc:	call   42aea0 <xmlStrEqual@plt+0x26f60>
  42b4d1:	mov    rsi,QWORD PTR [r12+0x28]
  42b4d6:	mov    rbp,rax
  42b4d9:	mov    rdi,rax
  42b4dc:	call   42dcf0 <xmlStrEqual@plt+0x29db0>
  42b4e1:	mov    eax,DWORD PTR [rbp+0x18]
  42b4e4:	test   eax,eax
  42b4e6:	je     404114 <xmlStrEqual@plt+0x1d4>
  42b4ec:	mov    rdx,QWORD PTR [rbp+0x8]
  42b4f0:	mov    rdx,QWORD PTR [rdx+0x10]
  42b4f4:	mov    rdx,QWORD PTR [rdx]
  42b4f7:	mov    edx,DWORD PTR [rdx+0x18]
  42b4fa:	test   edx,edx
  42b4fc:	je     42b501 <xmlStrEqual@plt+0x275c1>
  42b4fe:	add    r14d,eax
  42b501:	mov    rbx,QWORD PTR [rbx+0x8]
  42b505:	cmp    r13,rbx
  42b508:	jne    42b4c8 <xmlStrEqual@plt+0x27588>
  42b50a:	mov    WORD PTR [r12+0x20],r14w
  42b510:	pop    rbx
  42b511:	pop    rbp
  42b512:	pop    r12
  42b514:	pop    r13
  42b516:	pop    r14
  42b518:	ret    
  42b519:	nop    DWORD PTR [rax+0x0]
  42b520:	ret    
  42b521:	nop    DWORD PTR [rax+0x0]
  42b528:	xor    r14d,r14d
  42b52b:	jmp    42b50a <xmlStrEqual@plt+0x275ca>
  42b52d:	nop    DWORD PTR [rax]
  42b530:	endbr64 
  42b534:	push   r14
  42b536:	push   r13
  42b538:	mov    r13d,edx
  42b53b:	push   r12
  42b53d:	mov    r12d,esi
  42b540:	push   rbp
  42b541:	push   rbx
  42b542:	mov    rax,QWORD PTR [rdi+0x28]
  42b546:	mov    rbx,QWORD PTR [rax+0x8]
  42b54a:	cmp    rax,rbx
  42b54d:	je     42b5e0 <xmlStrEqual@plt+0x276a0>
  42b553:	mov    r14,rdi
  42b556:	jmp    42b56a <xmlStrEqual@plt+0x2762a>
  42b558:	nop    DWORD PTR [rax+rax*1+0x0]
  42b560:	mov    rbx,QWORD PTR [rbx+0x8]
  42b564:	cmp    QWORD PTR [r14+0x28],rbx
  42b568:	je     42b5e0 <xmlStrEqual@plt+0x276a0>
  42b56a:	mov    rbp,QWORD PTR [rbx+0x10]
  42b56e:	mov    edx,DWORD PTR [rbp+0x18]
  42b571:	test   edx,edx
  42b573:	je     40411e <xmlStrEqual@plt+0x1de>
  42b579:	mov    rax,QWORD PTR [rbp+0x8]
  42b57d:	mov    rax,QWORD PTR [rax+0x10]
  42b581:	mov    rdi,QWORD PTR [rax]
  42b584:	cmp    r12d,DWORD PTR [rdi+0x18]
  42b588:	jne    42b560 <xmlStrEqual@plt+0x27620>
  42b58a:	cmp    r12d,0x1
  42b58e:	je     42b5c0 <xmlStrEqual@plt+0x27680>
  42b590:	test   r12d,r12d
  42b593:	je     42b5ab <xmlStrEqual@plt+0x2766b>
  42b595:	cmp    r12d,0x2
  42b599:	je     42b600 <xmlStrEqual@plt+0x276c0>
  42b59b:	cmp    r12d,0x3
  42b59f:	jne    42b560 <xmlStrEqual@plt+0x27620>
  42b5a1:	call   425460 <xmlStrEqual@plt+0x21520>
  42b5a6:	cmp    eax,r13d
  42b5a9:	jne    42b560 <xmlStrEqual@plt+0x27620>
  42b5ab:	pop    rbx
  42b5ac:	mov    rax,rbp
  42b5af:	pop    rbp
  42b5b0:	pop    r12
  42b5b2:	pop    r13
  42b5b4:	pop    r14
  42b5b6:	ret    
  42b5b7:	nop    WORD PTR [rax+rax*1+0x0]
  42b5c0:	call   425890 <xmlStrEqual@plt+0x21950>
  42b5c5:	movzx  eax,ax
  42b5c8:	cmp    eax,r13d
  42b5cb:	je     42b5ab <xmlStrEqual@plt+0x2766b>
  42b5cd:	mov    rbx,QWORD PTR [rbx+0x8]
  42b5d1:	cmp    QWORD PTR [r14+0x28],rbx
  42b5d5:	jne    42b56a <xmlStrEqual@plt+0x2762a>
  42b5d7:	nop    WORD PTR [rax+rax*1+0x0]
  42b5e0:	mov    rax,0x469e3c
  42b5e7:	cmp    DWORD PTR [rax],0x2
  42b5ea:	jg     42b62e <xmlStrEqual@plt+0x276ee>
  42b5ec:	xor    ebp,ebp
  42b5ee:	pop    rbx
  42b5ef:	mov    rax,rbp
  42b5f2:	pop    rbp
  42b5f3:	pop    r12
  42b5f5:	pop    r13
  42b5f7:	pop    r14
  42b5f9:	ret    
  42b5fa:	nop    WORD PTR [rax+rax*1+0x0]
  42b600:	mov    rax,0x469e3c
  42b607:	mov    eax,DWORD PTR [rax]
  42b609:	test   eax,eax
  42b60b:	jle    42b5ec <xmlStrEqual@plt+0x276ac>
  42b60d:	xor    eax,eax
  42b60f:	lea    rsi,[rip+0x242ca]        # 44f8e0 <xmlStrEqual@plt+0x4b9a0>
  42b616:	mov    edi,0x5
  42b61b:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  42b620:	xor    ebp,ebp
  42b622:	pop    rbx
  42b623:	mov    rax,rbp
  42b626:	pop    rbp
  42b627:	pop    r12
  42b629:	pop    r13
  42b62b:	pop    r14
  42b62d:	ret    
  42b62e:	mov    ecx,r13d
  42b631:	mov    edx,r12d
  42b634:	lea    rsi,[rip+0x242e5]        # 44f920 <xmlStrEqual@plt+0x4b9e0>
  42b63b:	mov    edi,0x7
  42b640:	xor    eax,eax
  42b642:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  42b647:	xor    ebp,ebp
  42b649:	jmp    42b5ee <xmlStrEqual@plt+0x276ae>
  42b64b:	nop    DWORD PTR [rax+rax*1+0x0]
  42b650:	endbr64 
  42b654:	push   rbp
  42b655:	push   rbx
  42b656:	mov    rbx,rdi
  42b659:	mov    rdi,rsi
  42b65c:	sub    rsp,0x8
  42b660:	mov    ebp,DWORD PTR [rsi+0x18]
  42b663:	call   425c10 <xmlStrEqual@plt+0x21cd0>
  42b668:	add    rsp,0x8
  42b66c:	mov    rdi,rbx
  42b66f:	pop    rbx
  42b670:	mov    esi,ebp
  42b672:	mov    edx,eax
  42b674:	pop    rbp
  42b675:	jmp    42b530 <xmlStrEqual@plt+0x275f0>
  42b67a:	nop    WORD PTR [rax+rax*1+0x0]
  42b680:	endbr64 
  42b684:	push   r13
  42b686:	push   r12
  42b688:	mov    r12,rdi
  42b68b:	push   rbp
  42b68c:	mov    rbp,rsi
  42b68f:	push   rbx
  42b690:	sub    rsp,0x8
  42b694:	mov    r13,QWORD PTR [rsi]
  42b697:	mov    rsi,r13
  42b69a:	call   42b650 <xmlStrEqual@plt+0x27710>
  42b69f:	test   rax,rax
  42b6a2:	je     42b6f0 <xmlStrEqual@plt+0x277b0>
  42b6a4:	mov    rsi,rbp
  42b6a7:	mov    rdi,rax
  42b6aa:	mov    rbx,rax
  42b6ad:	call   42ae40 <xmlStrEqual@plt+0x26f00>
  42b6b2:	cmp    eax,0x1
  42b6b5:	jne    42b6f0 <xmlStrEqual@plt+0x277b0>
  42b6b7:	mov    edx,DWORD PTR [rbx+0x18]
  42b6ba:	test   edx,edx
  42b6bc:	je     42b770 <xmlStrEqual@plt+0x27830>
  42b6c2:	mov    eax,DWORD PTR [r13+0x18]
  42b6c6:	test   eax,eax
  42b6c8:	je     42b6d0 <xmlStrEqual@plt+0x27790>
  42b6ca:	dec    WORD PTR [r12+0x20]
  42b6d0:	mov    rax,0x469e3c
  42b6d7:	cmp    DWORD PTR [rax],0x1
  42b6da:	jg     42b730 <xmlStrEqual@plt+0x277f0>
  42b6dc:	add    rsp,0x8
  42b6e0:	pop    rbx
  42b6e1:	pop    rbp
  42b6e2:	pop    r12
  42b6e4:	mov    eax,0x1
  42b6e9:	pop    r13
  42b6eb:	ret    
  42b6ec:	nop    DWORD PTR [rax+0x0]
  42b6f0:	mov    rax,0x469e3c
  42b6f7:	cmp    DWORD PTR [rax],0x1
  42b6fa:	jle    42b6dc <xmlStrEqual@plt+0x2779c>
  42b6fc:	mov    rdi,QWORD PTR [rbp+0x0]
  42b700:	call   424d40 <xmlStrEqual@plt+0x20e00>
  42b705:	mov    rdx,rax
  42b708:	lea    rsi,[rip+0x24261]        # 44f970 <xmlStrEqual@plt+0x4ba30>
  42b70f:	xor    eax,eax
  42b711:	mov    edi,0x6
  42b716:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  42b71b:	add    rsp,0x8
  42b71f:	pop    rbx
  42b720:	pop    rbp
  42b721:	pop    r12
  42b723:	mov    eax,0x1
  42b728:	pop    r13
  42b72a:	ret    
  42b72b:	nop    DWORD PTR [rax+rax*1+0x0]
  42b730:	mov    rdi,r12
  42b733:	call   424d40 <xmlStrEqual@plt+0x20e00>
  42b738:	mov    rdi,QWORD PTR [rbp+0x0]
  42b73c:	mov    rbx,rax
  42b73f:	call   424d40 <xmlStrEqual@plt+0x20e00>
  42b744:	mov    rdx,rax
  42b747:	mov    rcx,rbx
  42b74a:	xor    eax,eax
  42b74c:	lea    rsi,[rip+0x2426d]        # 44f9c0 <xmlStrEqual@plt+0x4ba80>
  42b753:	mov    edi,0x6
  42b758:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  42b75d:	add    rsp,0x8
  42b761:	pop    rbx
  42b762:	pop    rbp
  42b763:	pop    r12
  42b765:	mov    eax,0x1
  42b76a:	pop    r13
  42b76c:	ret    
  42b76d:	nop    DWORD PTR [rax]
  42b770:	mov    rsi,QWORD PTR [r12+0x28]
  42b775:	mov    rdi,rbx
  42b778:	call   42e210 <xmlStrEqual@plt+0x2a2d0>
  42b77d:	jmp    42b6c2 <xmlStrEqual@plt+0x27782>
  42b782:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  42b78d:	nop    DWORD PTR [rax]
  42b790:	endbr64 
  42b794:	push   rbx
  42b795:	mov    rbx,rsi
  42b798:	call   42b650 <xmlStrEqual@plt+0x27710>
  42b79d:	mov    rdi,rax
  42b7a0:	mov    rsi,rbx
  42b7a3:	pop    rbx
  42b7a4:	jmp    42ad50 <xmlStrEqual@plt+0x26e10>
  42b7a9:	nop    DWORD PTR [rax+0x0]
  42b7b0:	endbr64 
  42b7b4:	push   r14
  42b7b6:	push   r13
  42b7b8:	push   r12
  42b7ba:	mov    r12,rdi
  42b7bd:	push   rbp
  42b7be:	mov    rbp,rsi
  42b7c1:	push   rbx
  42b7c2:	mov    r14,QWORD PTR [rsi]
  42b7c5:	mov    rsi,r14
  42b7c8:	call   42b650 <xmlStrEqual@plt+0x27710>
  42b7cd:	test   rax,rax
  42b7d0:	je     42b8a0 <xmlStrEqual@plt+0x27960>
  42b7d6:	mov    rsi,rax
  42b7d9:	mov    rdi,rbp
  42b7dc:	mov    rbx,rax
  42b7df:	call   42ded0 <xmlStrEqual@plt+0x29f90>
  42b7e4:	cmp    al,0x1
  42b7e6:	jne    42b860 <xmlStrEqual@plt+0x27920>
  42b7e8:	mov    rax,0x469e3c
  42b7ef:	cmp    DWORD PTR [rax],0x1
  42b7f2:	jle    42b821 <xmlStrEqual@plt+0x278e1>
  42b7f4:	mov    rdi,r12
  42b7f7:	call   424d40 <xmlStrEqual@plt+0x20e00>
  42b7fc:	mov    rdi,QWORD PTR [rbp+0x0]
  42b800:	mov    r13,rax
  42b803:	call   424d40 <xmlStrEqual@plt+0x20e00>
  42b808:	mov    rdx,rax
  42b80b:	mov    rcx,r13
  42b80e:	lea    rsi,[rip+0x241fb]        # 44fa10 <xmlStrEqual@plt+0x4bad0>
  42b815:	mov    edi,0x6
  42b81a:	xor    eax,eax
  42b81c:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  42b821:	mov    rsi,QWORD PTR [rbp+0x0]
  42b825:	mov    rdi,r12
  42b828:	call   42b790 <xmlStrEqual@plt+0x27850>
  42b82d:	movzx  edx,BYTE PTR [rbp+0xb]
  42b831:	cmp    BYTE PTR [rax+0xb],dl
  42b834:	jbe    42b950 <xmlStrEqual@plt+0x27a10>
  42b83a:	mov    rsi,rbx
  42b83d:	mov    rdi,rax
  42b840:	call   42e210 <xmlStrEqual@plt+0x2a2d0>
  42b845:	mov    rsi,rbx
  42b848:	pop    rbx
  42b849:	mov    rdi,rbp
  42b84c:	pop    rbp
  42b84d:	pop    r12
  42b84f:	pop    r13
  42b851:	pop    r14
  42b853:	jmp    42dcf0 <xmlStrEqual@plt+0x29db0>
  42b858:	nop    DWORD PTR [rax+rax*1+0x0]
  42b860:	mov    rsi,rbx
  42b863:	mov    rdi,rbp
  42b866:	call   42dcf0 <xmlStrEqual@plt+0x29db0>
  42b86b:	mov    r13d,eax
  42b86e:	cmp    r13d,0x1
  42b872:	jne    42b8c6 <xmlStrEqual@plt+0x27986>
  42b874:	mov    rax,0x469e3c
  42b87b:	cmp    DWORD PTR [rax],0x1
  42b87e:	jg     42b8e0 <xmlStrEqual@plt+0x279a0>
  42b880:	mov    eax,DWORD PTR [r14+0x18]
  42b884:	test   eax,eax
  42b886:	je     42b88e <xmlStrEqual@plt+0x2794e>
  42b888:	inc    WORD PTR [r12+0x20]
  42b88e:	pop    rbx
  42b88f:	pop    rbp
  42b890:	pop    r12
  42b892:	mov    eax,r13d
  42b895:	pop    r13
  42b897:	pop    r14
  42b899:	ret    
  42b89a:	nop    WORD PTR [rax+rax*1+0x0]
  42b8a0:	mov    rsi,0x42a7f0
  42b8a7:	mov    rdi,0x42a7e0
  42b8ae:	call   42dc50 <xmlStrEqual@plt+0x29d10>
  42b8b3:	mov    rsi,rax
  42b8b6:	mov    rdi,rbp
  42b8b9:	mov    rbx,rax
  42b8bc:	call   42dcf0 <xmlStrEqual@plt+0x29db0>
  42b8c1:	cmp    eax,0x1
  42b8c4:	je     42b918 <xmlStrEqual@plt+0x279d8>
  42b8c6:	mov    r13d,DWORD PTR [rbx+0x18]
  42b8ca:	test   r13d,r13d
  42b8cd:	je     42b930 <xmlStrEqual@plt+0x279f0>
  42b8cf:	pop    rbx
  42b8d0:	pop    rbp
  42b8d1:	xor    r13d,r13d
  42b8d4:	pop    r12
  42b8d6:	mov    eax,r13d
  42b8d9:	pop    r13
  42b8db:	pop    r14
  42b8dd:	ret    
  42b8de:	xchg   ax,ax
  42b8e0:	mov    rdi,r12
  42b8e3:	call   424d40 <xmlStrEqual@plt+0x20e00>
  42b8e8:	mov    rdi,rbp
  42b8eb:	mov    rbx,rax
  42b8ee:	call   42a8c0 <xmlStrEqual@plt+0x26980>
  42b8f3:	mov    rdx,rax
  42b8f6:	mov    rcx,rbx
  42b8f9:	lea    rsi,[rip+0x24180]        # 44fa80 <xmlStrEqual@plt+0x4bb40>
  42b900:	mov    edi,0x6
  42b905:	xor    eax,eax
  42b907:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  42b90c:	jmp    42b880 <xmlStrEqual@plt+0x27940>
  42b911:	nop    DWORD PTR [rax+0x0]
  42b918:	mov    rsi,QWORD PTR [r12+0x28]
  42b91d:	mov    rdi,rbx
  42b920:	call   42dcf0 <xmlStrEqual@plt+0x29db0>
  42b925:	mov    r13d,eax
  42b928:	jmp    42b86e <xmlStrEqual@plt+0x2792e>
  42b92d:	nop    DWORD PTR [rax]
  42b930:	mov    rsi,QWORD PTR [r12+0x28]
  42b935:	mov    rdi,rbx
  42b938:	call   42e210 <xmlStrEqual@plt+0x2a2d0>
  42b93d:	pop    rbx
  42b93e:	pop    rbp
  42b93f:	pop    r12
  42b941:	mov    eax,r13d
  42b944:	pop    r13
  42b946:	pop    r14
  42b948:	ret    
  42b949:	nop    DWORD PTR [rax+0x0]
  42b950:	mov    r13d,0xfffffffb
  42b956:	jmp    42b88e <xmlStrEqual@plt+0x2794e>
  42b95b:	nop    DWORD PTR [rax+rax*1+0x0]
  42b960:	endbr64 
  42b964:	push   rbp
  42b965:	push   rbx
  42b966:	mov    rbx,rsi
  42b969:	sub    rsp,0x8
  42b96d:	mov    rbp,QWORD PTR [rsi]
  42b970:	mov    rsi,rbp
  42b973:	call   42b650 <xmlStrEqual@plt+0x27710>
  42b978:	test   rax,rax
  42b97b:	je     42b9b8 <xmlStrEqual@plt+0x27a78>
  42b97d:	mov    edx,DWORD PTR [rax+0x18]
  42b980:	test   edx,edx
  42b982:	je     42b9b8 <xmlStrEqual@plt+0x27a78>
  42b984:	test   rbp,rbp
  42b987:	je     42b9b8 <xmlStrEqual@plt+0x27a78>
  42b989:	mov    rdx,QWORD PTR [rax+0x8]
  42b98d:	cmp    rax,rdx
  42b990:	jne    42b9a1 <xmlStrEqual@plt+0x27a61>
  42b992:	jmp    42b9b8 <xmlStrEqual@plt+0x27a78>
  42b994:	nop    DWORD PTR [rax+0x0]
  42b998:	mov    rdx,QWORD PTR [rdx+0x8]
  42b99c:	cmp    rax,rdx
  42b99f:	je     42b9b8 <xmlStrEqual@plt+0x27a78>
  42b9a1:	cmp    rbx,QWORD PTR [rdx+0x10]
  42b9a5:	jne    42b998 <xmlStrEqual@plt+0x27a58>
  42b9a7:	add    rsp,0x8
  42b9ab:	pop    rbx
  42b9ac:	mov    eax,0x1
  42b9b1:	pop    rbp
  42b9b2:	ret    
  42b9b3:	nop    DWORD PTR [rax+rax*1+0x0]
  42b9b8:	add    rsp,0x8
  42b9bc:	pop    rbx
  42b9bd:	xor    eax,eax
  42b9bf:	pop    rbp
  42b9c0:	ret    
  42b9c1:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  42b9cc:	nop    DWORD PTR [rax+0x0]
  42b9d0:	endbr64 
  42b9d4:	push   rbp
  42b9d5:	push   rbx
  42b9d6:	mov    rbx,rsi
  42b9d9:	sub    rsp,0x8
  42b9dd:	call   42b650 <xmlStrEqual@plt+0x27710>
  42b9e2:	mov    rdi,rax
  42b9e5:	mov    rsi,rbx
  42b9e8:	mov    rbp,rax
  42b9eb:	call   42adc0 <xmlStrEqual@plt+0x26e80>
  42b9f0:	test   rax,rax
  42b9f3:	je     42ba10 <xmlStrEqual@plt+0x27ad0>
  42b9f5:	add    rsp,0x8
  42b9f9:	pop    rbx
  42b9fa:	mov    rsi,rbp
  42b9fd:	mov    rdi,rax
  42ba00:	pop    rbp
  42ba01:	jmp    42dcf0 <xmlStrEqual@plt+0x29db0>
  42ba06:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42ba10:	add    rsp,0x8
  42ba14:	pop    rbx
  42ba15:	xor    eax,eax
  42ba17:	pop    rbp
  42ba18:	ret    
  42ba19:	nop    DWORD PTR [rax+0x0]
  42ba20:	endbr64 
  42ba24:	push   r14
  42ba26:	push   r13
  42ba28:	push   r12
  42ba2a:	mov    r12,rdx
  42ba2d:	push   rbp
  42ba2e:	mov    rbp,rdi
  42ba31:	push   rbx
  42ba32:	mov    rbx,rsi
  42ba35:	call   42b680 <xmlStrEqual@plt+0x27740>
  42ba3a:	mov    rsi,r12
  42ba3d:	mov    rdi,rbx
  42ba40:	call   42afa0 <xmlStrEqual@plt+0x27060>
  42ba45:	mov    rsi,rbx
  42ba48:	mov    rdi,rbp
  42ba4b:	call   42b7b0 <xmlStrEqual@plt+0x27870>
  42ba50:	mov    r12d,eax
  42ba53:	cmp    eax,0x1
  42ba56:	jne    42ba78 <xmlStrEqual@plt+0x27b38>
  42ba58:	mov    r13,0x469e3c
  42ba5f:	mov    edx,DWORD PTR [r13+0x0]
  42ba63:	test   edx,edx
  42ba65:	jg     42bac8 <xmlStrEqual@plt+0x27b88>
  42ba67:	pop    rbx
  42ba68:	pop    rbp
  42ba69:	mov    eax,r12d
  42ba6c:	pop    r12
  42ba6e:	pop    r13
  42ba70:	pop    r14
  42ba72:	ret    
  42ba73:	nop    DWORD PTR [rax+rax*1+0x0]
  42ba78:	mov    rdi,rbx
  42ba7b:	call   42a7f0 <xmlStrEqual@plt+0x268b0>
  42ba80:	mov    rax,0x469e3c
  42ba87:	mov    eax,DWORD PTR [rax]
  42ba89:	test   eax,eax
  42ba8b:	jle    42ba67 <xmlStrEqual@plt+0x27b27>
  42ba8d:	mov    rdi,rbp
  42ba90:	call   424d40 <xmlStrEqual@plt+0x20e00>
  42ba95:	mov    rdi,QWORD PTR [rbx]
  42ba98:	mov    rbp,rax
  42ba9b:	call   424d40 <xmlStrEqual@plt+0x20e00>
  42baa0:	mov    rdx,rax
  42baa3:	mov    rcx,rbp
  42baa6:	xor    eax,eax
  42baa8:	lea    rsi,[rip+0x24099]        # 44fb48 <xmlStrEqual@plt+0x4bc08>
  42baaf:	mov    edi,0x5
  42bab4:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  42bab9:	pop    rbx
  42baba:	pop    rbp
  42babb:	mov    eax,r12d
  42babe:	pop    r12
  42bac0:	pop    r13
  42bac2:	pop    r14
  42bac4:	ret    
  42bac5:	nop    DWORD PTR [rax]
  42bac8:	mov    rdi,rbp
  42bacb:	call   424d40 <xmlStrEqual@plt+0x20e00>
  42bad0:	mov    rdi,QWORD PTR [rbx]
  42bad3:	mov    r14,rax
  42bad6:	call   424d40 <xmlStrEqual@plt+0x20e00>
  42badb:	mov    rdx,rax
  42bade:	mov    rcx,r14
  42bae1:	xor    eax,eax
  42bae3:	lea    rsi,[rip+0x23fde]        # 44fac8 <xmlStrEqual@plt+0x4bb88>
  42baea:	mov    edi,0x5
  42baef:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  42baf4:	cmp    DWORD PTR [r13+0x0],0x1
  42baf9:	jle    42ba67 <xmlStrEqual@plt+0x27b27>
  42baff:	mov    rdi,rbp
  42bb02:	call   42b300 <xmlStrEqual@plt+0x273c0>
  42bb07:	mov    rdx,rax
  42bb0a:	lea    rsi,[rip+0x24007]        # 44fb18 <xmlStrEqual@plt+0x4bbd8>
  42bb11:	xor    eax,eax
  42bb13:	mov    edi,0x6
  42bb18:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  42bb1d:	pop    rbx
  42bb1e:	pop    rbp
  42bb1f:	mov    eax,r12d
  42bb22:	pop    r12
  42bb24:	pop    r13
  42bb26:	pop    r14
  42bb28:	ret    
  42bb29:	nop    DWORD PTR [rax+0x0]
  42bb30:	endbr64 
  42bb34:	push   r14
  42bb36:	push   r13
  42bb38:	push   r12
  42bb3a:	push   rbp
  42bb3b:	mov    rbp,rdi
  42bb3e:	push   rbx
  42bb3f:	mov    rbx,rsi
  42bb42:	call   42b680 <xmlStrEqual@plt+0x27740>
  42bb47:	xor    edi,edi
  42bb49:	mov    r13,QWORD PTR [rbx]
  42bb4c:	call   424b10 <xmlStrEqual@plt+0x20bd0>
  42bb51:	mov    QWORD PTR [rbx],rax
  42bb54:	mov    rsi,rbx
  42bb57:	mov    rdi,rbp
  42bb5a:	call   42b7b0 <xmlStrEqual@plt+0x27870>
  42bb5f:	mov    r12d,eax
  42bb62:	cmp    eax,0x1
  42bb65:	jne    42bb90 <xmlStrEqual@plt+0x27c50>
  42bb67:	mov    rbx,0x469e3c
  42bb6e:	mov    edx,DWORD PTR [rbx]
  42bb70:	test   edx,edx
  42bb72:	jg     42bbd8 <xmlStrEqual@plt+0x27c98>
  42bb74:	mov    rdi,r13
  42bb77:	call   424bf0 <xmlStrEqual@plt+0x20cb0>
  42bb7c:	pop    rbx
  42bb7d:	pop    rbp
  42bb7e:	mov    eax,r12d
  42bb81:	pop    r12
  42bb83:	pop    r13
  42bb85:	pop    r14
  42bb87:	ret    
  42bb88:	nop    DWORD PTR [rax+rax*1+0x0]
  42bb90:	mov    rdi,rbx
  42bb93:	call   42a7f0 <xmlStrEqual@plt+0x268b0>
  42bb98:	mov    rax,0x469e3c
  42bb9f:	mov    eax,DWORD PTR [rax]
  42bba1:	test   eax,eax
  42bba3:	jle    42bb74 <xmlStrEqual@plt+0x27c34>
  42bba5:	mov    rdi,rbp
  42bba8:	call   424d40 <xmlStrEqual@plt+0x20e00>
  42bbad:	mov    rdi,r13
  42bbb0:	mov    rbx,rax
  42bbb3:	call   424d40 <xmlStrEqual@plt+0x20e00>
  42bbb8:	mov    rdx,rax
  42bbbb:	mov    rcx,rbx
  42bbbe:	lea    rsi,[rip+0x24083]        # 44fc48 <xmlStrEqual@plt+0x4bd08>
  42bbc5:	mov    edi,0x5
  42bbca:	xor    eax,eax
  42bbcc:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  42bbd1:	jmp    42bb74 <xmlStrEqual@plt+0x27c34>
  42bbd3:	nop    DWORD PTR [rax+rax*1+0x0]
  42bbd8:	mov    rdi,rbp
  42bbdb:	call   424d40 <xmlStrEqual@plt+0x20e00>
  42bbe0:	mov    rdi,r13
  42bbe3:	mov    r14,rax
  42bbe6:	call   424d40 <xmlStrEqual@plt+0x20e00>
  42bbeb:	mov    rdx,rax
  42bbee:	mov    rcx,r14
  42bbf1:	xor    eax,eax
  42bbf3:	lea    rsi,[rip+0x23fbe]        # 44fbb8 <xmlStrEqual@plt+0x4bc78>
  42bbfa:	mov    edi,0x5
  42bbff:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  42bc04:	cmp    DWORD PTR [rbx],0x1
  42bc07:	jle    42bb74 <xmlStrEqual@plt+0x27c34>
  42bc0d:	mov    rdi,rbp
  42bc10:	call   42b300 <xmlStrEqual@plt+0x273c0>
  42bc15:	mov    rdx,rax
  42bc18:	lea    rsi,[rip+0x23ff1]        # 44fc10 <xmlStrEqual@plt+0x4bcd0>
  42bc1f:	mov    edi,0x6
  42bc24:	xor    eax,eax
  42bc26:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  42bc2b:	jmp    42bb74 <xmlStrEqual@plt+0x27c34>
  42bc30:	endbr64 
  42bc34:	push   rbp
  42bc35:	mov    edx,0xa
  42bc3a:	mov    esi,0x3
  42bc3f:	push   rbx
  42bc40:	sub    rsp,0x8
  42bc44:	call   42b530 <xmlStrEqual@plt+0x275f0>
  42bc49:	test   rax,rax
  42bc4c:	je     42bca9 <xmlStrEqual@plt+0x27d69>
  42bc4e:	mov    rbx,QWORD PTR [rax+0x8]
  42bc52:	mov    rbp,rax
  42bc55:	cmp    rax,rbx
  42bc58:	je     42bca9 <xmlStrEqual@plt+0x27d69>
  42bc5a:	mov    rax,QWORD PTR [rbx+0x10]
  42bc5e:	mov    rdi,QWORD PTR [rax]
  42bc61:	call   425450 <xmlStrEqual@plt+0x21510>
  42bc66:	mov    rcx,QWORD PTR [rax]
  42bc69:	mov    rax,QWORD PTR [rcx+0x8]
  42bc6d:	cmp    rcx,rax
  42bc70:	jne    42bc81 <xmlStrEqual@plt+0x27d41>
  42bc72:	jmp    42bca0 <xmlStrEqual@plt+0x27d60>
  42bc74:	nop    DWORD PTR [rax+0x0]
  42bc78:	mov    rax,QWORD PTR [rax+0x8]
  42bc7c:	cmp    rcx,rax
  42bc7f:	je     42bca0 <xmlStrEqual@plt+0x27d60>
  42bc81:	mov    rdx,QWORD PTR [rax+0x10]
  42bc85:	test   BYTE PTR [rdx],0x1
  42bc88:	je     42bc78 <xmlStrEqual@plt+0x27d38>
  42bc8a:	add    rsp,0x8
  42bc8e:	pop    rbx
  42bc8f:	mov    eax,0x1
  42bc94:	pop    rbp
  42bc95:	ret    
  42bc96:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42bca0:	mov    rbx,QWORD PTR [rbx+0x8]
  42bca4:	cmp    rbp,rbx
  42bca7:	jne    42bc5a <xmlStrEqual@plt+0x27d1a>
  42bca9:	add    rsp,0x8
  42bcad:	pop    rbx
  42bcae:	xor    eax,eax
  42bcb0:	pop    rbp
  42bcb1:	ret    
  42bcb2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42bcbc:	nop    DWORD PTR [rax+0x0]
  42bcc0:	endbr64 
  42bcc4:	push   rbx
  42bcc5:	mov    edi,0x48
  42bcca:	call   434fe0 <xmlStrEqual@plt+0x310a0>
  42bccf:	mov    rbx,rax
  42bcd2:	test   rax,rax
  42bcd5:	je     42bcf3 <xmlStrEqual@plt+0x27db3>
  42bcd7:	mov    rsi,0x42e2b0
  42bcde:	mov    rdi,0x42af10
  42bce5:	call   42dc50 <xmlStrEqual@plt+0x29d10>
  42bcea:	mov    QWORD PTR [rbx+0x28],rax
  42bcee:	test   rax,rax
  42bcf1:	je     42bd00 <xmlStrEqual@plt+0x27dc0>
  42bcf3:	mov    rax,rbx
  42bcf6:	pop    rbx
  42bcf7:	ret    
  42bcf8:	nop    DWORD PTR [rax+rax*1+0x0]
  42bd00:	mov    rdi,rbx
  42bd03:	call   4037b0 <free@plt>
  42bd08:	xor    ebx,ebx
  42bd0a:	jmp    42bcf3 <xmlStrEqual@plt+0x27db3>
  42bd0c:	nop    DWORD PTR [rax+0x0]
  42bd10:	endbr64 
  42bd14:	push   rbp
  42bd15:	mov    rbp,rdi
  42bd18:	push   rbx
  42bd19:	sub    rsp,0x8
  42bd1d:	call   425670 <xmlStrEqual@plt+0x21730>
  42bd22:	test   rax,rax
  42bd25:	je     42bd70 <xmlStrEqual@plt+0x27e30>
  42bd27:	mov    edi,0x48
  42bd2c:	call   434fe0 <xmlStrEqual@plt+0x310a0>
  42bd31:	mov    rbx,rax
  42bd34:	test   rax,rax
  42bd37:	je     42bda0 <xmlStrEqual@plt+0x27e60>
  42bd39:	mov    rsi,0x42e2b0
  42bd40:	mov    rdi,0x42af10
  42bd47:	call   42dc50 <xmlStrEqual@plt+0x29d10>
  42bd4c:	mov    QWORD PTR [rbx+0x28],rax
  42bd50:	test   rax,rax
  42bd53:	je     42bd90 <xmlStrEqual@plt+0x27e50>
  42bd55:	mov    rsi,rbp
  42bd58:	mov    rdi,rbx
  42bd5b:	call   424fd0 <xmlStrEqual@plt+0x21090>
  42bd60:	add    rsp,0x8
  42bd64:	mov    rax,rbx
  42bd67:	pop    rbx
  42bd68:	pop    rbp
  42bd69:	ret    
  42bd6a:	nop    WORD PTR [rax+rax*1+0x0]
  42bd70:	mov    rdi,rbp
  42bd73:	call   4255a0 <xmlStrEqual@plt+0x21660>
  42bd78:	mov    rbx,rax
  42bd7b:	test   rax,rax
  42bd7e:	je     42bdc0 <xmlStrEqual@plt+0x27e80>
  42bd80:	mov    rdi,rax
  42bd83:	call   424de0 <xmlStrEqual@plt+0x20ea0>
  42bd88:	jmp    42bd27 <xmlStrEqual@plt+0x27de7>
  42bd8a:	nop    WORD PTR [rax+rax*1+0x0]
  42bd90:	mov    rdi,rbx
  42bd93:	call   4037b0 <free@plt>
  42bd98:	nop    DWORD PTR [rax+rax*1+0x0]
  42bda0:	lea    rsi,[rip+0x23f59]        # 44fd00 <xmlStrEqual@plt+0x4bdc0>
  42bda7:	mov    edi,0x3
  42bdac:	xor    eax,eax
  42bdae:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  42bdb3:	xor    ebx,ebx
  42bdb5:	jmp    42bd60 <xmlStrEqual@plt+0x27e20>
  42bdb7:	nop    WORD PTR [rax+rax*1+0x0]
  42bdc0:	mov    rdi,rbp
  42bdc3:	call   424d40 <xmlStrEqual@plt+0x20e00>
  42bdc8:	mov    rdx,rax
  42bdcb:	lea    rsi,[rip+0x23ef6]        # 44fcc8 <xmlStrEqual@plt+0x4bd88>
  42bdd2:	mov    edi,0x3
  42bdd7:	xor    eax,eax
  42bdd9:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  42bdde:	jmp    42bd60 <xmlStrEqual@plt+0x27e20>
  42bde0:	endbr64 
  42bde4:	test   rdi,rdi
  42bde7:	je     42be10 <xmlStrEqual@plt+0x27ed0>
  42bde9:	push   rbx
  42bdea:	mov    rbx,rdi
  42bded:	mov    rdi,QWORD PTR [rdi+0x28]
  42bdf1:	call   42e2b0 <xmlStrEqual@plt+0x2a370>
  42bdf6:	mov    rdi,QWORD PTR [rbx+0x30]
  42bdfa:	call   42e2b0 <xmlStrEqual@plt+0x2a370>
  42bdff:	mov    rdi,rbx
  42be02:	call   425bb0 <xmlStrEqual@plt+0x21c70>
  42be07:	mov    rdi,rbx
  42be0a:	pop    rbx
  42be0b:	jmp    4037b0 <free@plt>
  42be10:	ret    
  42be11:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  42be1c:	nop    DWORD PTR [rax+0x0]
  42be20:	endbr64 
  42be24:	push   r15
  42be26:	push   r14
  42be28:	push   r13
  42be2a:	mov    r13,rdi
  42be2d:	push   r12
  42be2f:	push   rbp
  42be30:	push   rbx
  42be31:	mov    rbx,rsi
  42be34:	sub    rsp,0x18
  42be38:	call   425310 <xmlStrEqual@plt+0x213d0>
  42be3d:	test   eax,eax
  42be3f:	jne    42be4e <xmlStrEqual@plt+0x27f0e>
  42be41:	mov    ebp,eax
  42be43:	movzx  eax,WORD PTR [rbx+0x20]
  42be47:	cmp    WORD PTR [r13+0x20],ax
  42be4c:	je     42be68 <xmlStrEqual@plt+0x27f28>
  42be4e:	mov    ebp,0x1
  42be53:	add    rsp,0x18
  42be57:	pop    rbx
  42be58:	mov    eax,ebp
  42be5a:	pop    rbp
  42be5b:	pop    r12
  42be5d:	pop    r13
  42be5f:	pop    r14
  42be61:	pop    r15
  42be63:	ret    
  42be64:	nop    DWORD PTR [rax+0x0]
  42be68:	mov    rcx,QWORD PTR [rbx+0x28]
  42be6c:	mov    rax,QWORD PTR [r13+0x28]
  42be70:	mov    edx,DWORD PTR [rcx+0x18]
  42be73:	cmp    DWORD PTR [rax+0x18],edx
  42be76:	jne    42be4e <xmlStrEqual@plt+0x27f0e>
  42be78:	test   edx,edx
  42be7a:	je     42bf28 <xmlStrEqual@plt+0x27fe8>
  42be80:	mov    rcx,QWORD PTR [rcx+0x8]
  42be84:	mov    QWORD PTR [rsp+0x8],rcx
  42be89:	mov    r14,QWORD PTR [rax+0x8]
  42be8d:	cmp    rax,r14
  42be90:	je     42be53 <xmlStrEqual@plt+0x27f13>
  42be92:	mov    rax,QWORD PTR [rsp+0x8]
  42be97:	mov    r12,QWORD PTR [r14+0x10]
  42be9b:	mov    rdx,QWORD PTR [rax+0x10]
  42be9f:	mov    eax,DWORD PTR [rdx+0x18]
  42bea2:	cmp    eax,DWORD PTR [r12+0x18]
  42bea7:	jne    42be4e <xmlStrEqual@plt+0x27f0e>
  42bea9:	test   eax,eax
  42beab:	je     42bf20 <xmlStrEqual@plt+0x27fe0>
  42bead:	mov    r15,QWORD PTR [rdx+0x8]
  42beb1:	mov    rbx,QWORD PTR [r12+0x8]
  42beb6:	cmp    rbx,r12
  42beb9:	jne    42becd <xmlStrEqual@plt+0x27f8d>
  42bebb:	jmp    42bee8 <xmlStrEqual@plt+0x27fa8>
  42bebd:	nop    DWORD PTR [rax]
  42bec0:	mov    rbx,QWORD PTR [rbx+0x8]
  42bec4:	mov    r15,QWORD PTR [r15+0x8]
  42bec8:	cmp    rbx,r12
  42becb:	je     42bee8 <xmlStrEqual@plt+0x27fa8>
  42becd:	mov    rsi,QWORD PTR [r15+0x10]
  42bed1:	mov    rdi,QWORD PTR [rbx+0x10]
  42bed5:	call   42ac10 <xmlStrEqual@plt+0x26cd0>
  42beda:	test   eax,eax
  42bedc:	je     42bec0 <xmlStrEqual@plt+0x27f80>
  42bede:	jmp    42be4e <xmlStrEqual@plt+0x27f0e>
  42bee3:	nop    DWORD PTR [rax+rax*1+0x0]
  42bee8:	mov    rax,QWORD PTR [rsp+0x8]
  42beed:	mov    r14,QWORD PTR [r14+0x8]
  42bef1:	mov    rax,QWORD PTR [rax+0x8]
  42bef5:	mov    QWORD PTR [rsp+0x8],rax
  42befa:	cmp    QWORD PTR [r13+0x28],r14
  42befe:	je     42be53 <xmlStrEqual@plt+0x27f13>
  42bf04:	mov    rax,QWORD PTR [rsp+0x8]
  42bf09:	mov    r12,QWORD PTR [r14+0x10]
  42bf0d:	mov    rdx,QWORD PTR [rax+0x10]
  42bf11:	mov    eax,DWORD PTR [rdx+0x18]
  42bf14:	cmp    DWORD PTR [r12+0x18],eax
  42bf19:	je     42bea9 <xmlStrEqual@plt+0x27f69>
  42bf1b:	jmp    42be4e <xmlStrEqual@plt+0x27f0e>
  42bf20:	xor    r15d,r15d
  42bf23:	jmp    42beb1 <xmlStrEqual@plt+0x27f71>
  42bf25:	nop    DWORD PTR [rax]
  42bf28:	mov    QWORD PTR [rsp+0x8],0x0
  42bf31:	jmp    42be89 <xmlStrEqual@plt+0x27f49>
  42bf36:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42bf40:	endbr64 
  42bf44:	push   rbp
  42bf45:	mov    rbp,rdi
  42bf48:	mov    edi,0x48
  42bf4d:	push   rbx
  42bf4e:	sub    rsp,0x8
  42bf52:	call   434fe0 <xmlStrEqual@plt+0x310a0>
  42bf57:	test   rax,rax
  42bf5a:	je     42bfbb <xmlStrEqual@plt+0x2807b>
  42bf5c:	mov    rsi,0x42e2b0
  42bf63:	mov    rdi,0x42af10
  42bf6a:	mov    rbx,rax
  42bf6d:	call   42dc50 <xmlStrEqual@plt+0x29d10>
  42bf72:	mov    QWORD PTR [rbx+0x28],rax
  42bf76:	test   rax,rax
  42bf79:	je     42bfb3 <xmlStrEqual@plt+0x28073>
  42bf7b:	mov    rsi,rbp
  42bf7e:	mov    rdi,rbx
  42bf81:	call   424fd0 <xmlStrEqual@plt+0x21090>
  42bf86:	movzx  eax,BYTE PTR [rbp+0x3c]
  42bf8a:	mov    BYTE PTR [rbx+0x3c],al
  42bf8d:	movzx  eax,BYTE PTR [rbp+0x3d]
  42bf91:	mov    BYTE PTR [rbx+0x3d],al
  42bf94:	movzx  eax,BYTE PTR [rbp+0x3e]
  42bf98:	mov    BYTE PTR [rbx+0x3e],al
  42bf9b:	movzx  eax,WORD PTR [rbp+0x20]
  42bf9f:	mov    WORD PTR [rbx+0x20],ax
  42bfa3:	mov    eax,DWORD PTR [rbp+0x38]
  42bfa6:	mov    DWORD PTR [rbx+0x38],eax
  42bfa9:	add    rsp,0x8
  42bfad:	mov    rax,rbx
  42bfb0:	pop    rbx
  42bfb1:	pop    rbp
  42bfb2:	ret    
  42bfb3:	mov    rdi,rbx
  42bfb6:	call   4037b0 <free@plt>
  42bfbb:	mov    rsi,rbp
  42bfbe:	xor    edi,edi
  42bfc0:	call   424fd0 <xmlStrEqual@plt+0x21090>
  42bfc5:	mov    BYTE PTR ds:0x3c,0x0
  42bfcd:	ud2    
  42bfcf:	nop
  42bfd0:	endbr64 
  42bfd4:	push   r15
  42bfd6:	push   r14
  42bfd8:	push   r13
  42bfda:	mov    r13,rdi
  42bfdd:	push   r12
  42bfdf:	push   rbp
  42bfe0:	push   rbx
  42bfe1:	sub    rsp,0x8
  42bfe5:	mov    BYTE PTR [rip+0x477d4],0x0        # 4737c0 <xmlStrEqual@plt+0x6f880>
  42bfec:	movzx  r15d,BYTE PTR [rdi+0x3e]
  42bff1:	movzx  r14d,BYTE PTR [rdi+0x3d]
  42bff6:	movzx  edi,BYTE PTR [rdi+0x3c]
  42bffa:	call   42d570 <xmlStrEqual@plt+0x29630>
  42bfff:	mov    rdi,r13
  42c002:	mov    r12,rax
  42c005:	movzx  ebp,WORD PTR [r13+0x20]
  42c00a:	mov    ebx,DWORD PTR [r13+0x38]
  42c00e:	call   424d40 <xmlStrEqual@plt+0x20e00>
  42c013:	sub    rsp,0x8
  42c017:	push   r15
  42c019:	mov    r9,rax
  42c01c:	lea    r8,[rip+0x23d25]        # 44fd48 <xmlStrEqual@plt+0x4be08>
  42c023:	push   r14
  42c025:	xor    eax,eax
  42c027:	mov    ecx,0x1f4
  42c02c:	push   r12
  42c02e:	mov    edx,0x1
  42c033:	mov    esi,0x1f4
  42c038:	push   rbp
  42c039:	lea    rdi,[rip+0x47780]        # 4737c0 <xmlStrEqual@plt+0x6f880>
  42c040:	push   rbx
  42c041:	call   403a40 <__snprintf_chk@plt>
  42c046:	add    rsp,0x30
  42c04a:	cmp    WORD PTR [r13+0x20],0x0
  42c050:	je     42c122 <xmlStrEqual@plt+0x281e2>
  42c056:	mov    rax,QWORD PTR [r13+0x28]
  42c05a:	mov    r12,QWORD PTR [rax+0x8]
  42c05e:	cmp    rax,r12
  42c061:	je     42c122 <xmlStrEqual@plt+0x281e2>
  42c067:	lea    rbx,[rip+0x47752]        # 4737c0 <xmlStrEqual@plt+0x6f880>
  42c06e:	jmp    42c07f <xmlStrEqual@plt+0x2813f>
  42c070:	mov    r12,QWORD PTR [r12+0x8]
  42c075:	cmp    QWORD PTR [r13+0x28],r12
  42c079:	je     42c122 <xmlStrEqual@plt+0x281e2>
  42c07f:	mov    rbp,QWORD PTR [r12+0x10]
  42c084:	mov    eax,DWORD PTR [rbp+0x18]
  42c087:	test   eax,eax
  42c089:	je     42c070 <xmlStrEqual@plt+0x28130>
  42c08b:	mov    r14,QWORD PTR [rbp+0x8]
  42c08f:	cmp    r14,rbp
  42c092:	je     42c070 <xmlStrEqual@plt+0x28130>
  42c094:	nop    DWORD PTR [rax+0x0]
  42c098:	mov    rdi,QWORD PTR [r14+0x10]
  42c09c:	call   42a8c0 <xmlStrEqual@plt+0x26980>
  42c0a1:	mov    r9,rax
  42c0a4:	lea    rdi,[rip+0x47715]        # 4737c0 <xmlStrEqual@plt+0x6f880>
  42c0ab:	mov    ecx,DWORD PTR [rdi]
  42c0ad:	add    rdi,0x4
  42c0b1:	lea    edx,[rcx-0x1010101]
  42c0b7:	andn   edx,ecx,edx
  42c0bc:	and    edx,0x80808080
  42c0c2:	je     42c0ab <xmlStrEqual@plt+0x2816b>
  42c0c4:	mov    ecx,edx
  42c0c6:	shr    ecx,0x10
  42c0c9:	test   edx,0x8080
  42c0cf:	cmove  edx,ecx
  42c0d2:	lea    rcx,[rdi+0x2]
  42c0d6:	cmove  rdi,rcx
  42c0da:	mov    eax,edx
  42c0dc:	add    al,dl
  42c0de:	sbb    rdi,0x3
  42c0e2:	sub    rdi,rbx
  42c0e5:	mov    esi,0x1f4
  42c0ea:	sub    rsi,rdi
  42c0ed:	lea    r8,[rip+0x23bc5]        # 44fcb9 <xmlStrEqual@plt+0x4bd79>
  42c0f4:	add    rdi,rbx
  42c0f7:	mov    rcx,0xffffffffffffffff
  42c0fe:	mov    edx,0x1
  42c103:	xor    eax,eax
  42c105:	call   403a40 <__snprintf_chk@plt>
  42c10a:	mov    r14,QWORD PTR [r14+0x8]
  42c10e:	cmp    r14,rbp
  42c111:	jne    42c098 <xmlStrEqual@plt+0x28158>
  42c113:	mov    r12,QWORD PTR [r12+0x8]
  42c118:	cmp    QWORD PTR [r13+0x28],r12
  42c11c:	jne    42c07f <xmlStrEqual@plt+0x2813f>
  42c122:	add    rsp,0x8
  42c126:	pop    rbx
  42c127:	pop    rbp
  42c128:	pop    r12
  42c12a:	pop    r13
  42c12c:	pop    r14
  42c12e:	lea    rax,[rip+0x4768b]        # 4737c0 <xmlStrEqual@plt+0x6f880>
  42c135:	pop    r15
  42c137:	ret    
  42c138:	nop    DWORD PTR [rax+rax*1+0x0]
  42c140:	endbr64 
  42c144:	push   rbx
  42c145:	mov    rbx,rdi
  42c148:	mov    rdi,QWORD PTR [rdi+0x28]
  42c14c:	call   42e260 <xmlStrEqual@plt+0x2a320>
  42c151:	xor    eax,eax
  42c153:	mov    WORD PTR [rbx+0x20],ax
  42c157:	pop    rbx
  42c158:	ret    
  42c159:	nop    DWORD PTR [rax+0x0]
  42c160:	endbr64 
  42c164:	test   rdi,rdi
  42c167:	je     42c1f0 <xmlStrEqual@plt+0x282b0>
  42c16d:	test   rsi,rsi
  42c170:	je     42c1f0 <xmlStrEqual@plt+0x282b0>
  42c172:	push   r14
  42c174:	push   r13
  42c176:	mov    r13,rsi
  42c179:	push   r12
  42c17b:	mov    r12,rdi
  42c17e:	push   rbp
  42c17f:	push   rbx
  42c180:	mov    rdi,QWORD PTR [rdi+0x28]
  42c184:	call   42e260 <xmlStrEqual@plt+0x2a320>
  42c189:	mov    rbx,QWORD PTR [r13+0x8]
  42c18d:	cmp    r13,rbx
  42c190:	je     42c1f8 <xmlStrEqual@plt+0x282b8>
  42c192:	xor    r14d,r14d
  42c195:	nop    DWORD PTR [rax]
  42c198:	mov    rdi,QWORD PTR [rbx+0x10]
  42c19c:	call   42aea0 <xmlStrEqual@plt+0x26f60>
  42c1a1:	mov    rsi,QWORD PTR [r12+0x28]
  42c1a6:	mov    rbp,rax
  42c1a9:	mov    rdi,rax
  42c1ac:	call   42dcf0 <xmlStrEqual@plt+0x29db0>
  42c1b1:	mov    eax,DWORD PTR [rbp+0x18]
  42c1b4:	test   eax,eax
  42c1b6:	je     404128 <xmlStrEqual@plt+0x1e8>
  42c1bc:	mov    rdx,QWORD PTR [rbp+0x8]
  42c1c0:	mov    rdx,QWORD PTR [rdx+0x10]
  42c1c4:	mov    rdx,QWORD PTR [rdx]
  42c1c7:	mov    edx,DWORD PTR [rdx+0x18]
  42c1ca:	test   edx,edx
  42c1cc:	je     42c1d1 <xmlStrEqual@plt+0x28291>
  42c1ce:	add    r14d,eax
  42c1d1:	mov    rbx,QWORD PTR [rbx+0x8]
  42c1d5:	cmp    r13,rbx
  42c1d8:	jne    42c198 <xmlStrEqual@plt+0x28258>
  42c1da:	mov    WORD PTR [r12+0x20],r14w
  42c1e0:	pop    rbx
  42c1e1:	pop    rbp
  42c1e2:	pop    r12
  42c1e4:	pop    r13
  42c1e6:	pop    r14
  42c1e8:	ret    
  42c1e9:	nop    DWORD PTR [rax+0x0]
  42c1f0:	ret    
  42c1f1:	nop    DWORD PTR [rax+0x0]
  42c1f8:	xor    r14d,r14d
  42c1fb:	jmp    42c1da <xmlStrEqual@plt+0x2829a>
  42c1fd:	nop    DWORD PTR [rax]
  42c200:	endbr64 
  42c204:	push   r14
  42c206:	push   r13
  42c208:	mov    r13d,edx
  42c20b:	push   r12
  42c20d:	mov    r12d,esi
  42c210:	push   rbp
  42c211:	push   rbx
  42c212:	mov    rax,QWORD PTR [rdi+0x28]
  42c216:	mov    rbx,QWORD PTR [rax+0x8]
  42c21a:	cmp    rax,rbx
  42c21d:	je     42c2b0 <xmlStrEqual@plt+0x28370>
  42c223:	mov    r14,rdi
  42c226:	jmp    42c23a <xmlStrEqual@plt+0x282fa>
  42c228:	nop    DWORD PTR [rax+rax*1+0x0]
  42c230:	mov    rbx,QWORD PTR [rbx+0x8]
  42c234:	cmp    QWORD PTR [r14+0x28],rbx
  42c238:	je     42c2b0 <xmlStrEqual@plt+0x28370>
  42c23a:	mov    rbp,QWORD PTR [rbx+0x10]
  42c23e:	mov    edx,DWORD PTR [rbp+0x18]
  42c241:	test   edx,edx
  42c243:	je     404132 <xmlStrEqual@plt+0x1f2>
  42c249:	mov    rax,QWORD PTR [rbp+0x8]
  42c24d:	mov    rax,QWORD PTR [rax+0x10]
  42c251:	mov    rdi,QWORD PTR [rax]
  42c254:	cmp    r12d,DWORD PTR [rdi+0x18]
  42c258:	jne    42c230 <xmlStrEqual@plt+0x282f0>
  42c25a:	cmp    r12d,0x1
  42c25e:	je     42c290 <xmlStrEqual@plt+0x28350>
  42c260:	test   r12d,r12d
  42c263:	je     42c27b <xmlStrEqual@plt+0x2833b>
  42c265:	cmp    r12d,0x2
  42c269:	je     42c2d0 <xmlStrEqual@plt+0x28390>
  42c26b:	cmp    r12d,0x3
  42c26f:	jne    42c230 <xmlStrEqual@plt+0x282f0>
  42c271:	call   425460 <xmlStrEqual@plt+0x21520>
  42c276:	cmp    eax,r13d
  42c279:	jne    42c230 <xmlStrEqual@plt+0x282f0>
  42c27b:	pop    rbx
  42c27c:	mov    rax,rbp
  42c27f:	pop    rbp
  42c280:	pop    r12
  42c282:	pop    r13
  42c284:	pop    r14
  42c286:	ret    
  42c287:	nop    WORD PTR [rax+rax*1+0x0]
  42c290:	call   425890 <xmlStrEqual@plt+0x21950>
  42c295:	movzx  eax,ax
  42c298:	cmp    eax,r13d
  42c29b:	je     42c27b <xmlStrEqual@plt+0x2833b>
  42c29d:	mov    rbx,QWORD PTR [rbx+0x8]
  42c2a1:	cmp    QWORD PTR [r14+0x28],rbx
  42c2a5:	jne    42c23a <xmlStrEqual@plt+0x282fa>
  42c2a7:	nop    WORD PTR [rax+rax*1+0x0]
  42c2b0:	mov    rax,0x469e3c
  42c2b7:	cmp    DWORD PTR [rax],0x2
  42c2ba:	jg     42c2fe <xmlStrEqual@plt+0x283be>
  42c2bc:	xor    ebp,ebp
  42c2be:	pop    rbx
  42c2bf:	mov    rax,rbp
  42c2c2:	pop    rbp
  42c2c3:	pop    r12
  42c2c5:	pop    r13
  42c2c7:	pop    r14
  42c2c9:	ret    
  42c2ca:	nop    WORD PTR [rax+rax*1+0x0]
  42c2d0:	mov    rax,0x469e3c
  42c2d7:	mov    eax,DWORD PTR [rax]
  42c2d9:	test   eax,eax
  42c2db:	jle    42c2bc <xmlStrEqual@plt+0x2837c>
  42c2dd:	xor    eax,eax
  42c2df:	lea    rsi,[rip+0x23aaa]        # 44fd90 <xmlStrEqual@plt+0x4be50>
  42c2e6:	mov    edi,0x5
  42c2eb:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  42c2f0:	xor    ebp,ebp
  42c2f2:	pop    rbx
  42c2f3:	mov    rax,rbp
  42c2f6:	pop    rbp
  42c2f7:	pop    r12
  42c2f9:	pop    r13
  42c2fb:	pop    r14
  42c2fd:	ret    
  42c2fe:	mov    ecx,r13d
  42c301:	mov    edx,r12d
  42c304:	lea    rsi,[rip+0x23615]        # 44f920 <xmlStrEqual@plt+0x4b9e0>
  42c30b:	mov    edi,0x7
  42c310:	xor    eax,eax
  42c312:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  42c317:	xor    ebp,ebp
  42c319:	jmp    42c2be <xmlStrEqual@plt+0x2837e>
  42c31b:	nop    DWORD PTR [rax+rax*1+0x0]
  42c320:	endbr64 
  42c324:	push   rbp
  42c325:	push   rbx
  42c326:	mov    rbx,rdi
  42c329:	mov    rdi,rsi
  42c32c:	sub    rsp,0x8
  42c330:	mov    ebp,DWORD PTR [rsi+0x18]
  42c333:	call   425c10 <xmlStrEqual@plt+0x21cd0>
  42c338:	add    rsp,0x8
  42c33c:	mov    rdi,rbx
  42c33f:	pop    rbx
  42c340:	mov    esi,ebp
  42c342:	mov    edx,eax
  42c344:	pop    rbp
  42c345:	jmp    42c200 <xmlStrEqual@plt+0x282c0>
  42c34a:	nop    WORD PTR [rax+rax*1+0x0]
  42c350:	endbr64 
  42c354:	push   r13
  42c356:	push   r12
  42c358:	mov    r12,rdi
  42c35b:	push   rbp
  42c35c:	mov    rbp,rsi
  42c35f:	push   rbx
  42c360:	sub    rsp,0x8
  42c364:	mov    r13,QWORD PTR [rsi]
  42c367:	mov    rsi,r13
  42c36a:	call   42c320 <xmlStrEqual@plt+0x283e0>
  42c36f:	test   rax,rax
  42c372:	je     42c3c0 <xmlStrEqual@plt+0x28480>
  42c374:	mov    rsi,rbp
  42c377:	mov    rdi,rax
  42c37a:	mov    rbx,rax
  42c37d:	call   42ae40 <xmlStrEqual@plt+0x26f00>
  42c382:	cmp    eax,0x1
  42c385:	jne    42c3c0 <xmlStrEqual@plt+0x28480>
  42c387:	mov    edx,DWORD PTR [rbx+0x18]
  42c38a:	test   edx,edx
  42c38c:	je     42c440 <xmlStrEqual@plt+0x28500>
  42c392:	mov    eax,DWORD PTR [r13+0x18]
  42c396:	test   eax,eax
  42c398:	je     42c3a0 <xmlStrEqual@plt+0x28460>
  42c39a:	dec    WORD PTR [r12+0x20]
  42c3a0:	mov    rax,0x469e3c
  42c3a7:	cmp    DWORD PTR [rax],0x1
  42c3aa:	jg     42c400 <xmlStrEqual@plt+0x284c0>
  42c3ac:	add    rsp,0x8
  42c3b0:	pop    rbx
  42c3b1:	pop    rbp
  42c3b2:	pop    r12
  42c3b4:	mov    eax,0x1
  42c3b9:	pop    r13
  42c3bb:	ret    
  42c3bc:	nop    DWORD PTR [rax+0x0]
  42c3c0:	mov    rax,0x469e3c
  42c3c7:	cmp    DWORD PTR [rax],0x1
  42c3ca:	jle    42c3ac <xmlStrEqual@plt+0x2846c>
  42c3cc:	mov    rdi,QWORD PTR [rbp+0x0]
  42c3d0:	call   424d40 <xmlStrEqual@plt+0x20e00>
  42c3d5:	mov    rdx,rax
  42c3d8:	lea    rsi,[rip+0x239f1]        # 44fdd0 <xmlStrEqual@plt+0x4be90>
  42c3df:	xor    eax,eax
  42c3e1:	mov    edi,0x6
  42c3e6:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  42c3eb:	add    rsp,0x8
  42c3ef:	pop    rbx
  42c3f0:	pop    rbp
  42c3f1:	pop    r12
  42c3f3:	mov    eax,0x1
  42c3f8:	pop    r13
  42c3fa:	ret    
  42c3fb:	nop    DWORD PTR [rax+rax*1+0x0]
  42c400:	mov    rdi,r12
  42c403:	call   424d40 <xmlStrEqual@plt+0x20e00>
  42c408:	mov    rdi,QWORD PTR [rbp+0x0]
  42c40c:	mov    rbx,rax
  42c40f:	call   424d40 <xmlStrEqual@plt+0x20e00>
  42c414:	mov    rdx,rax
  42c417:	mov    rcx,rbx
  42c41a:	xor    eax,eax
  42c41c:	lea    rsi,[rip+0x23a05]        # 44fe28 <xmlStrEqual@plt+0x4bee8>
  42c423:	mov    edi,0x6
  42c428:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  42c42d:	add    rsp,0x8
  42c431:	pop    rbx
  42c432:	pop    rbp
  42c433:	pop    r12
  42c435:	mov    eax,0x1
  42c43a:	pop    r13
  42c43c:	ret    
  42c43d:	nop    DWORD PTR [rax]
  42c440:	mov    rsi,QWORD PTR [r12+0x28]
  42c445:	mov    rdi,rbx
  42c448:	call   42e210 <xmlStrEqual@plt+0x2a2d0>
  42c44d:	jmp    42c392 <xmlStrEqual@plt+0x28452>
  42c452:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  42c45d:	nop    DWORD PTR [rax]
  42c460:	endbr64 
  42c464:	push   rbx
  42c465:	mov    rbx,rsi
  42c468:	call   42c320 <xmlStrEqual@plt+0x283e0>
  42c46d:	mov    rdi,rax
  42c470:	mov    rsi,rbx
  42c473:	pop    rbx
  42c474:	jmp    42ad50 <xmlStrEqual@plt+0x26e10>
  42c479:	nop    DWORD PTR [rax+0x0]
  42c480:	endbr64 
  42c484:	push   r14
  42c486:	push   r13
  42c488:	push   r12
  42c48a:	mov    r12,rdi
  42c48d:	push   rbp
  42c48e:	mov    rbp,rsi
  42c491:	push   rbx
  42c492:	mov    r14,QWORD PTR [rsi]
  42c495:	mov    rsi,r14
  42c498:	call   42c320 <xmlStrEqual@plt+0x283e0>
  42c49d:	test   rax,rax
  42c4a0:	je     42c570 <xmlStrEqual@plt+0x28630>
  42c4a6:	mov    rsi,rax
  42c4a9:	mov    rdi,rbp
  42c4ac:	mov    rbx,rax
  42c4af:	call   42ded0 <xmlStrEqual@plt+0x29f90>
  42c4b4:	cmp    al,0x1
  42c4b6:	jne    42c530 <xmlStrEqual@plt+0x285f0>
  42c4b8:	mov    rax,0x469e3c
  42c4bf:	cmp    DWORD PTR [rax],0x1
  42c4c2:	jle    42c4f1 <xmlStrEqual@plt+0x285b1>
  42c4c4:	mov    rdi,r12
  42c4c7:	call   424d40 <xmlStrEqual@plt+0x20e00>
  42c4cc:	mov    rdi,QWORD PTR [rbp+0x0]
  42c4d0:	mov    r13,rax
  42c4d3:	call   424d40 <xmlStrEqual@plt+0x20e00>
  42c4d8:	mov    rdx,rax
  42c4db:	mov    rcx,r13
  42c4de:	lea    rsi,[rip+0x2399b]        # 44fe80 <xmlStrEqual@plt+0x4bf40>
  42c4e5:	mov    edi,0x6
  42c4ea:	xor    eax,eax
  42c4ec:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  42c4f1:	mov    rsi,QWORD PTR [rbp+0x0]
  42c4f5:	mov    rdi,r12
  42c4f8:	call   42c460 <xmlStrEqual@plt+0x28520>
  42c4fd:	movzx  edx,BYTE PTR [rbp+0xb]
  42c501:	cmp    BYTE PTR [rax+0xb],dl
  42c504:	jbe    42c620 <xmlStrEqual@plt+0x286e0>
  42c50a:	mov    rsi,rbx
  42c50d:	mov    rdi,rax
  42c510:	call   42e210 <xmlStrEqual@plt+0x2a2d0>
  42c515:	mov    rsi,rbx
  42c518:	pop    rbx
  42c519:	mov    rdi,rbp
  42c51c:	pop    rbp
  42c51d:	pop    r12
  42c51f:	pop    r13
  42c521:	pop    r14
  42c523:	jmp    42dcf0 <xmlStrEqual@plt+0x29db0>
  42c528:	nop    DWORD PTR [rax+rax*1+0x0]
  42c530:	mov    rsi,rbx
  42c533:	mov    rdi,rbp
  42c536:	call   42dcf0 <xmlStrEqual@plt+0x29db0>
  42c53b:	mov    r13d,eax
  42c53e:	cmp    r13d,0x1
  42c542:	jne    42c596 <xmlStrEqual@plt+0x28656>
  42c544:	mov    rax,0x469e3c
  42c54b:	cmp    DWORD PTR [rax],0x1
  42c54e:	jg     42c5b0 <xmlStrEqual@plt+0x28670>
  42c550:	mov    eax,DWORD PTR [r14+0x18]
  42c554:	test   eax,eax
  42c556:	je     42c55e <xmlStrEqual@plt+0x2861e>
  42c558:	inc    WORD PTR [r12+0x20]
  42c55e:	pop    rbx
  42c55f:	pop    rbp
  42c560:	pop    r12
  42c562:	mov    eax,r13d
  42c565:	pop    r13
  42c567:	pop    r14
  42c569:	ret    
  42c56a:	nop    WORD PTR [rax+rax*1+0x0]
  42c570:	mov    rsi,0x42a7f0
  42c577:	mov    rdi,0x42a7e0
  42c57e:	call   42dc50 <xmlStrEqual@plt+0x29d10>
  42c583:	mov    rsi,rax
  42c586:	mov    rdi,rbp
  42c589:	mov    rbx,rax
  42c58c:	call   42dcf0 <xmlStrEqual@plt+0x29db0>
  42c591:	cmp    eax,0x1
  42c594:	je     42c5e8 <xmlStrEqual@plt+0x286a8>
  42c596:	mov    r13d,DWORD PTR [rbx+0x18]
  42c59a:	test   r13d,r13d
  42c59d:	je     42c600 <xmlStrEqual@plt+0x286c0>
  42c59f:	pop    rbx
  42c5a0:	pop    rbp
  42c5a1:	xor    r13d,r13d
  42c5a4:	pop    r12
  42c5a6:	mov    eax,r13d
  42c5a9:	pop    r13
  42c5ab:	pop    r14
  42c5ad:	ret    
  42c5ae:	xchg   ax,ax
  42c5b0:	mov    rdi,r12
  42c5b3:	call   424d40 <xmlStrEqual@plt+0x20e00>
  42c5b8:	mov    rdi,QWORD PTR [rbp+0x0]
  42c5bc:	mov    rbx,rax
  42c5bf:	call   424d40 <xmlStrEqual@plt+0x20e00>
  42c5c4:	mov    rdx,rax
  42c5c7:	mov    rcx,rbx
  42c5ca:	lea    rsi,[rip+0x2391f]        # 44fef0 <xmlStrEqual@plt+0x4bfb0>
  42c5d1:	mov    edi,0x6
  42c5d6:	xor    eax,eax
  42c5d8:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  42c5dd:	jmp    42c550 <xmlStrEqual@plt+0x28610>
  42c5e2:	nop    WORD PTR [rax+rax*1+0x0]
  42c5e8:	mov    rsi,QWORD PTR [r12+0x28]
  42c5ed:	mov    rdi,rbx
  42c5f0:	call   42dcf0 <xmlStrEqual@plt+0x29db0>
  42c5f5:	mov    r13d,eax
  42c5f8:	jmp    42c53e <xmlStrEqual@plt+0x285fe>
  42c5fd:	nop    DWORD PTR [rax]
  42c600:	mov    rsi,QWORD PTR [r12+0x28]
  42c605:	mov    rdi,rbx
  42c608:	call   42e210 <xmlStrEqual@plt+0x2a2d0>
  42c60d:	pop    rbx
  42c60e:	pop    rbp
  42c60f:	pop    r12
  42c611:	mov    eax,r13d
  42c614:	pop    r13
  42c616:	pop    r14
  42c618:	ret    
  42c619:	nop    DWORD PTR [rax+0x0]
  42c620:	mov    r13d,0xfffffffb
  42c626:	jmp    42c55e <xmlStrEqual@plt+0x2861e>
  42c62b:	nop    DWORD PTR [rax+rax*1+0x0]
  42c630:	endbr64 
  42c634:	push   r15
  42c636:	mov    r15d,ecx
  42c639:	push   r14
  42c63b:	mov    r14d,r8d
  42c63e:	push   r13
  42c640:	mov    r13,rdi
  42c643:	push   r12
  42c645:	mov    r12d,edx
  42c648:	push   rbp
  42c649:	mov    rbp,r9
  42c64c:	push   rbx
  42c64d:	sub    rsp,0x18
  42c651:	mov    DWORD PTR [rsp+0xc],esi
  42c655:	call   425670 <xmlStrEqual@plt+0x21730>
  42c65a:	test   rax,rax
  42c65d:	je     42c720 <xmlStrEqual@plt+0x287e0>
  42c663:	mov    edi,0x48
  42c668:	call   434fe0 <xmlStrEqual@plt+0x310a0>
  42c66d:	mov    rbx,rax
  42c670:	test   rax,rax
  42c673:	je     42c780 <xmlStrEqual@plt+0x28840>
  42c679:	mov    rsi,0x42e2b0
  42c680:	mov    rdi,0x42af10
  42c687:	call   42dc50 <xmlStrEqual@plt+0x29d10>
  42c68c:	mov    QWORD PTR [rbx+0x28],rax
  42c690:	test   rax,rax
  42c693:	je     42c775 <xmlStrEqual@plt+0x28835>
  42c699:	mov    rsi,r13
  42c69c:	mov    rdi,rbx
  42c69f:	call   424fd0 <xmlStrEqual@plt+0x21090>
  42c6a4:	mov    eax,DWORD PTR [rsp+0xc]
  42c6a8:	mov    BYTE PTR [rbx+0x3c],r12b
  42c6ac:	sub    r12d,0x2
  42c6b0:	mov    DWORD PTR [rbx+0x38],eax
  42c6b3:	mov    BYTE PTR [rbx+0x3d],r15b
  42c6b7:	mov    BYTE PTR [rbx+0x3e],r14b
  42c6bb:	cmp    r12d,0x1
  42c6bf:	jbe    42c740 <xmlStrEqual@plt+0x28800>
  42c6c1:	mov    r12,QWORD PTR [rbp+0x8]
  42c6c5:	cmp    rbp,r12
  42c6c8:	je     42c707 <xmlStrEqual@plt+0x287c7>
  42c6ca:	nop    WORD PTR [rax+rax*1+0x0]
  42c6d0:	mov    rdi,QWORD PTR [r12+0x10]
  42c6d5:	push   0x0
  42c6d7:	xor    edx,edx
  42c6d9:	xor    r9d,r9d
  42c6dc:	push   0x0
  42c6de:	xor    r8d,r8d
  42c6e1:	mov    ecx,0x1
  42c6e6:	mov    esi,0x1
  42c6eb:	call   42a830 <xmlStrEqual@plt+0x268f0>
  42c6f0:	mov    rsi,rax
  42c6f3:	mov    rdi,rbx
  42c6f6:	call   42c480 <xmlStrEqual@plt+0x28540>
  42c6fb:	mov    r12,QWORD PTR [r12+0x8]
  42c700:	pop    rax
  42c701:	pop    rdx
  42c702:	cmp    rbp,r12
  42c705:	jne    42c6d0 <xmlStrEqual@plt+0x28790>
  42c707:	add    rsp,0x18
  42c70b:	mov    rax,rbx
  42c70e:	pop    rbx
  42c70f:	pop    rbp
  42c710:	pop    r12
  42c712:	pop    r13
  42c714:	pop    r14
  42c716:	pop    r15
  42c718:	ret    
  42c719:	nop    DWORD PTR [rax+0x0]
  42c720:	mov    rdi,r13
  42c723:	call   4255a0 <xmlStrEqual@plt+0x21660>
  42c728:	mov    rbx,rax
  42c72b:	test   rax,rax
  42c72e:	je     42c79a <xmlStrEqual@plt+0x2885a>
  42c730:	mov    rdi,rax
  42c733:	call   424de0 <xmlStrEqual@plt+0x20ea0>
  42c738:	jmp    42c663 <xmlStrEqual@plt+0x28723>
  42c73d:	nop    DWORD PTR [rax]
  42c740:	push   0x0
  42c742:	mov    ecx,0x1
  42c747:	xor    r9d,r9d
  42c74a:	push   0x0
  42c74c:	xor    r8d,r8d
  42c74f:	mov    edx,0x1
  42c754:	mov    rdi,QWORD PTR [rsp+0x68]
  42c759:	mov    esi,0x1
  42c75e:	call   42a830 <xmlStrEqual@plt+0x268f0>
  42c763:	mov    rsi,rax
  42c766:	mov    rdi,rbx
  42c769:	call   42c480 <xmlStrEqual@plt+0x28540>
  42c76e:	pop    rcx
  42c76f:	pop    rsi
  42c770:	jmp    42c6c1 <xmlStrEqual@plt+0x28781>
  42c775:	mov    rdi,rbx
  42c778:	call   4037b0 <free@plt>
  42c77d:	nop    DWORD PTR [rax]
  42c780:	lea    rsi,[rip+0x237f9]        # 44ff80 <xmlStrEqual@plt+0x4c040>
  42c787:	mov    edi,0x3
  42c78c:	xor    eax,eax
  42c78e:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  42c793:	xor    ebx,ebx
  42c795:	jmp    42c707 <xmlStrEqual@plt+0x287c7>
  42c79a:	mov    rdi,r13
  42c79d:	call   424d40 <xmlStrEqual@plt+0x20e00>
  42c7a2:	mov    rdx,rax
  42c7a5:	lea    rsi,[rip+0x23794]        # 44ff40 <xmlStrEqual@plt+0x4c000>
  42c7ac:	mov    edi,0x3
  42c7b1:	xor    eax,eax
  42c7b3:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  42c7b8:	jmp    42c707 <xmlStrEqual@plt+0x287c7>
  42c7bd:	nop    DWORD PTR [rax]
  42c7c0:	endbr64 
  42c7c4:	push   rbp
  42c7c5:	push   rbx
  42c7c6:	mov    rbx,rsi
  42c7c9:	sub    rsp,0x8
  42c7cd:	mov    rbp,QWORD PTR [rsi]
  42c7d0:	mov    rsi,rbp
  42c7d3:	call   42c320 <xmlStrEqual@plt+0x283e0>
  42c7d8:	test   rax,rax
  42c7db:	je     42c818 <xmlStrEqual@plt+0x288d8>
  42c7dd:	mov    edx,DWORD PTR [rax+0x18]
  42c7e0:	test   edx,edx
  42c7e2:	je     42c818 <xmlStrEqual@plt+0x288d8>
  42c7e4:	test   rbp,rbp
  42c7e7:	je     42c818 <xmlStrEqual@plt+0x288d8>
  42c7e9:	mov    rdx,QWORD PTR [rax+0x8]
  42c7ed:	cmp    rax,rdx
  42c7f0:	jne    42c801 <xmlStrEqual@plt+0x288c1>
  42c7f2:	jmp    42c818 <xmlStrEqual@plt+0x288d8>
  42c7f4:	nop    DWORD PTR [rax+0x0]
  42c7f8:	mov    rdx,QWORD PTR [rdx+0x8]
  42c7fc:	cmp    rax,rdx
  42c7ff:	je     42c818 <xmlStrEqual@plt+0x288d8>
  42c801:	cmp    rbx,QWORD PTR [rdx+0x10]
  42c805:	jne    42c7f8 <xmlStrEqual@plt+0x288b8>
  42c807:	add    rsp,0x8
  42c80b:	pop    rbx
  42c80c:	mov    eax,0x1
  42c811:	pop    rbp
  42c812:	ret    
  42c813:	nop    DWORD PTR [rax+rax*1+0x0]
  42c818:	add    rsp,0x8
  42c81c:	pop    rbx
  42c81d:	xor    eax,eax
  42c81f:	pop    rbp
  42c820:	ret    
  42c821:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  42c82c:	nop    DWORD PTR [rax+0x0]
  42c830:	endbr64 
  42c834:	push   rbp
  42c835:	push   rbx
  42c836:	mov    rbx,rsi
  42c839:	sub    rsp,0x8
  42c83d:	call   42c320 <xmlStrEqual@plt+0x283e0>
  42c842:	mov    rdi,rax
  42c845:	mov    rsi,rbx
  42c848:	mov    rbp,rax
  42c84b:	call   42adc0 <xmlStrEqual@plt+0x26e80>
  42c850:	test   rax,rax
  42c853:	je     42c870 <xmlStrEqual@plt+0x28930>
  42c855:	add    rsp,0x8
  42c859:	pop    rbx
  42c85a:	mov    rsi,rbp
  42c85d:	mov    rdi,rax
  42c860:	pop    rbp
  42c861:	jmp    42dcf0 <xmlStrEqual@plt+0x29db0>
  42c866:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42c870:	add    rsp,0x8
  42c874:	pop    rbx
  42c875:	xor    eax,eax
  42c877:	pop    rbp
  42c878:	ret    
  42c879:	nop    DWORD PTR [rax+0x0]
  42c880:	endbr64 
  42c884:	push   r14
  42c886:	mov    r14,rdi
  42c889:	mov    rdi,0x424bf0
  42c890:	push   r13
  42c892:	push   r12
  42c894:	push   rbp
  42c895:	push   rbx
  42c896:	call   42dca0 <xmlStrEqual@plt+0x29d60>
  42c89b:	mov    r13,rax
  42c89e:	mov    rax,QWORD PTR [r14+0x28]
  42c8a2:	mov    r12,QWORD PTR [rax+0x8]
  42c8a6:	cmp    rax,r12
  42c8a9:	jne    42c8bb <xmlStrEqual@plt+0x2897b>
  42c8ab:	jmp    42c8fb <xmlStrEqual@plt+0x289bb>
  42c8ad:	nop    DWORD PTR [rax]
  42c8b0:	mov    r12,QWORD PTR [r12+0x8]
  42c8b5:	cmp    QWORD PTR [r14+0x28],r12
  42c8b9:	je     42c8fb <xmlStrEqual@plt+0x289bb>
  42c8bb:	mov    rbp,QWORD PTR [r12+0x10]
  42c8c0:	mov    eax,DWORD PTR [rbp+0x18]
  42c8c3:	test   eax,eax
  42c8c5:	je     42c8b0 <xmlStrEqual@plt+0x28970>
  42c8c7:	mov    rbx,QWORD PTR [rbp+0x8]
  42c8cb:	cmp    rbx,rbp
  42c8ce:	je     42c8b0 <xmlStrEqual@plt+0x28970>
  42c8d0:	mov    rax,QWORD PTR [rbx+0x10]
  42c8d4:	mov    rdi,QWORD PTR [rax]
  42c8d7:	call   425060 <xmlStrEqual@plt+0x21120>
  42c8dc:	mov    rdi,rax
  42c8df:	mov    rsi,r13
  42c8e2:	call   42de80 <xmlStrEqual@plt+0x29f40>
  42c8e7:	mov    rbx,QWORD PTR [rbx+0x8]
  42c8eb:	cmp    rbx,rbp
  42c8ee:	jne    42c8d0 <xmlStrEqual@plt+0x28990>
  42c8f0:	mov    r12,QWORD PTR [r12+0x8]
  42c8f5:	cmp    QWORD PTR [r14+0x28],r12
  42c8f9:	jne    42c8bb <xmlStrEqual@plt+0x2897b>
  42c8fb:	pop    rbx
  42c8fc:	pop    rbp
  42c8fd:	pop    r12
  42c8ff:	mov    rax,r13
  42c902:	pop    r13
  42c904:	pop    r14
  42c906:	ret    
  42c907:	nop    WORD PTR [rax+rax*1+0x0]
  42c910:	endbr64 
  42c914:	mov    QWORD PTR [rdi],0x10
  42c91b:	mov    DWORD PTR [rdi+0x8],0x0
  42c922:	ret    
  42c923:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  42c92e:	xchg   ax,ax
  42c930:	endbr64 
  42c934:	mov    QWORD PTR [rdi],0x20
  42c93b:	mov    DWORD PTR [rdi+0x8],0x0
  42c942:	ret    
  42c943:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  42c94e:	xchg   ax,ax
  42c950:	endbr64 
  42c954:	mov    rax,QWORD PTR [rdi]
  42c957:	mov    DWORD PTR [rdi+0x8],0x0
  42c95e:	and    eax,0x20000
  42c963:	or     rax,0x10030
  42c969:	mov    QWORD PTR [rdi],rax
  42c96c:	ret    
  42c96d:	nop    DWORD PTR [rax]
  42c970:	endbr64 
  42c974:	mov    QWORD PTR [rdi],0x40
  42c97b:	mov    DWORD PTR [rdi+0x8],0x0
  42c982:	ret    
  42c983:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  42c98e:	xchg   ax,ax
  42c990:	endbr64 
  42c994:	mov    DWORD PTR [rdi],0x0
  42c99a:	mov    BYTE PTR [rdi],0x80
  42c99d:	ret    
  42c99e:	xchg   ax,ax
  42c9a0:	endbr64 
  42c9a4:	mov    QWORD PTR [rdi],0x70
  42c9ab:	mov    DWORD PTR [rdi+0x8],0x0
  42c9b2:	ret    
  42c9b3:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  42c9be:	xchg   ax,ax
  42c9c0:	endbr64 
  42c9c4:	xor    eax,eax
  42c9c6:	mov    DWORD PTR [rdi],0x0
  42c9cc:	mov    WORD PTR [rdi+0x4],ax
  42c9d0:	ret    
  42c9d1:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  42c9dc:	nop    DWORD PTR [rax+0x0]
  42c9e0:	endbr64 
  42c9e4:	mov    QWORD PTR [rdi],0x60
  42c9eb:	mov    DWORD PTR [rdi+0x8],0x0
  42c9f2:	ret    
  42c9f3:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  42c9fe:	xchg   ax,ax
  42ca00:	endbr64 
  42ca04:	mov    BYTE PTR [rip+0x47315],0x0        # 473d20 <xmlStrEqual@plt+0x6fde0>
  42ca0b:	test   BYTE PTR [rdi],0x8
  42ca0e:	je     42cc50 <xmlStrEqual@plt+0x28d10>
  42ca14:	mov    DWORD PTR [rip+0x47302],0x2c313d61        # 473d20 <xmlStrEqual@plt+0x6fde0>
  42ca1e:	mov    BYTE PTR [rip+0x472ff],0x0        # 473d24 <xmlStrEqual@plt+0x6fde4>
  42ca25:	lea    rax,[rip+0x472f4]        # 473d20 <xmlStrEqual@plt+0x6fde0>
  42ca2c:	mov    r10,rax
  42ca2f:	mov    rsi,rax
  42ca32:	mov    edx,DWORD PTR [rsi]
  42ca34:	add    rsi,0x4
  42ca38:	lea    r8d,[rdx-0x1010101]
  42ca3f:	andn   r8d,edx,r8d
  42ca44:	and    r8d,0x80808080
  42ca4b:	je     42ca32 <xmlStrEqual@plt+0x28af2>
  42ca4d:	mov    edx,r8d
  42ca50:	shr    edx,0x10
  42ca53:	test   r8d,0x8080
  42ca5a:	cmove  r8d,edx
  42ca5e:	lea    rdx,[rsi+0x2]
  42ca62:	cmove  rsi,rdx
  42ca66:	mov    ecx,r8d
  42ca69:	add    cl,r8b
  42ca6c:	sbb    rsi,0x3
  42ca70:	sub    rsi,rax
  42ca73:	add    rsi,r10
  42ca76:	test   BYTE PTR [rdi],0x4
  42ca79:	je     42cc70 <xmlStrEqual@plt+0x28d30>
  42ca7f:	mov    DWORD PTR [rsi],0x2c313d6d
  42ca85:	mov    BYTE PTR [rsi+0x4],0x0
  42ca89:	lea    rax,[rip+0x47290]        # 473d20 <xmlStrEqual@plt+0x6fde0>
  42ca90:	mov    r10,rax
  42ca93:	mov    rcx,rax
  42ca96:	mov    edx,DWORD PTR [rcx]
  42ca98:	add    rcx,0x4
  42ca9c:	lea    r8d,[rdx-0x1010101]
  42caa3:	andn   r8d,edx,r8d
  42caa8:	and    r8d,0x80808080
  42caaf:	je     42ca96 <xmlStrEqual@plt+0x28b56>
  42cab1:	mov    edx,r8d
  42cab4:	shr    edx,0x10
  42cab7:	test   r8d,0x8080
  42cabe:	cmove  r8d,edx
  42cac2:	lea    rdx,[rcx+0x2]
  42cac6:	cmove  rcx,rdx
  42caca:	mov    esi,r8d
  42cacd:	add    sil,r8b
  42cad0:	sbb    rcx,0x3
  42cad4:	sub    rcx,rax
  42cad7:	add    rcx,r10
  42cada:	test   BYTE PTR [rdi],0x2
  42cadd:	je     42cc40 <xmlStrEqual@plt+0x28d00>
  42cae3:	mov    DWORD PTR [rcx],0x2c313d70
  42cae9:	mov    BYTE PTR [rcx+0x4],0x0
  42caed:	lea    rax,[rip+0x4722c]        # 473d20 <xmlStrEqual@plt+0x6fde0>
  42caf4:	mov    r10,rax
  42caf7:	mov    rdx,rax
  42cafa:	mov    ecx,DWORD PTR [rdx]
  42cafc:	add    rdx,0x4
  42cb00:	lea    r8d,[rcx-0x1010101]
  42cb07:	andn   r8d,ecx,r8d
  42cb0c:	and    r8d,0x80808080
  42cb13:	je     42cafa <xmlStrEqual@plt+0x28bba>
  42cb15:	mov    ecx,r8d
  42cb18:	shr    ecx,0x10
  42cb1b:	test   r8d,0x8080
  42cb22:	cmove  r8d,ecx
  42cb26:	lea    rcx,[rdx+0x2]
  42cb2a:	cmove  rdx,rcx
  42cb2e:	mov    esi,r8d
  42cb31:	add    sil,r8b
  42cb34:	sbb    rdx,0x3
  42cb38:	sub    rdx,rax
  42cb3b:	add    rdx,r10
  42cb3e:	test   BYTE PTR [rdi],0x1
  42cb41:	je     42cc28 <xmlStrEqual@plt+0x28ce8>
  42cb47:	mov    DWORD PTR [rdx],0x2c313d73
  42cb4d:	mov    BYTE PTR [rdx+0x4],0x0
  42cb51:	lea    rdx,[rip+0x471c8]        # 473d20 <xmlStrEqual@plt+0x6fde0>
  42cb58:	mov    r10,rdx
  42cb5b:	mov    rax,rdx
  42cb5e:	mov    ecx,DWORD PTR [rax]
  42cb60:	add    rax,0x4
  42cb64:	lea    r8d,[rcx-0x1010101]
  42cb6b:	andn   r8d,ecx,r8d
  42cb70:	and    r8d,0x80808080
  42cb77:	je     42cb5e <xmlStrEqual@plt+0x28c1e>
  42cb79:	mov    ecx,r8d
  42cb7c:	shr    ecx,0x10
  42cb7f:	test   r8d,0x8080
  42cb86:	cmove  r8d,ecx
  42cb8a:	lea    rcx,[rax+0x2]
  42cb8e:	cmove  rax,rcx
  42cb92:	mov    esi,r8d
  42cb95:	add    sil,r8b
  42cb98:	sbb    rax,0x3
  42cb9c:	sub    rax,rdx
  42cb9f:	add    rax,r10
  42cba2:	cmp    BYTE PTR [rdi+0x1],0x0
  42cba6:	js     42cc80 <xmlStrEqual@plt+0x28d40>
  42cbac:	mov    DWORD PTR [rax],0x2c303d50
  42cbb2:	mov    BYTE PTR [rax+0x4],0x0
  42cbb6:	lea    rax,[rip+0x47163]        # 473d20 <xmlStrEqual@plt+0x6fde0>
  42cbbd:	mov    r10,rax
  42cbc0:	mov    r9,rax
  42cbc3:	mov    edx,DWORD PTR [r9]
  42cbc6:	add    r9,0x4
  42cbca:	lea    r8d,[rdx-0x1010101]
  42cbd1:	andn   r8d,edx,r8d
  42cbd6:	and    r8d,0x80808080
  42cbdd:	je     42cbc3 <xmlStrEqual@plt+0x28c83>
  42cbdf:	mov    edx,r8d
  42cbe2:	shr    edx,0x10
  42cbe5:	test   r8d,0x8080
  42cbec:	cmove  r8d,edx
  42cbf0:	lea    rdx,[r9+0x2]
  42cbf4:	cmove  r9,rdx
  42cbf8:	mov    esi,r8d
  42cbfb:	add    sil,r8b
  42cbfe:	sbb    r9,0x3
  42cc02:	sub    r9,rax
  42cc05:	movzx  eax,BYTE PTR [rdi+0x1]
  42cc09:	and    eax,0x40
  42cc0c:	cmp    al,0x1
  42cc0e:	sbb    eax,eax
  42cc10:	xor    ax,ax
  42cc13:	add    eax,0x313d53
  42cc18:	mov    DWORD PTR [r10+r9*1],eax
  42cc1c:	lea    rax,[rip+0x470fd]        # 473d20 <xmlStrEqual@plt+0x6fde0>
  42cc23:	ret    
  42cc24:	nop    DWORD PTR [rax+0x0]
  42cc28:	mov    DWORD PTR [rdx],0x2c303d73
  42cc2e:	mov    BYTE PTR [rdx+0x4],0x0
  42cc32:	jmp    42cb51 <xmlStrEqual@plt+0x28c11>
  42cc37:	nop    WORD PTR [rax+rax*1+0x0]
  42cc40:	mov    DWORD PTR [rcx],0x2c303d70
  42cc46:	mov    BYTE PTR [rcx+0x4],0x0
  42cc4a:	jmp    42caed <xmlStrEqual@plt+0x28bad>
  42cc4f:	nop
  42cc50:	mov    DWORD PTR [rip+0x470c6],0x2c303d61        # 473d20 <xmlStrEqual@plt+0x6fde0>
  42cc5a:	mov    BYTE PTR [rip+0x470c3],0x0        # 473d24 <xmlStrEqual@plt+0x6fde4>
  42cc61:	jmp    42ca25 <xmlStrEqual@plt+0x28ae5>
  42cc66:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42cc70:	mov    DWORD PTR [rsi],0x2c303d6d
  42cc76:	mov    BYTE PTR [rsi+0x4],0x0
  42cc7a:	jmp    42ca89 <xmlStrEqual@plt+0x28b49>
  42cc7f:	nop
  42cc80:	mov    DWORD PTR [rax],0x2c313d50
  42cc86:	mov    BYTE PTR [rax+0x4],0x0
  42cc8a:	jmp    42cbb6 <xmlStrEqual@plt+0x28c76>
  42cc8f:	nop
  42cc90:	endbr64 
  42cc94:	test   rdi,rdi
  42cc97:	je     42cd10 <xmlStrEqual@plt+0x28dd0>
  42cc99:	push   r13
  42cc9b:	push   r12
  42cc9d:	push   rbp
  42cc9e:	push   rbx
  42cc9f:	mov    rbx,rdi
  42cca2:	sub    rsp,0x8
  42cca6:	mov    BYTE PTR [rip+0x46ff3],0x0        # 473ca0 <xmlStrEqual@plt+0x6fd60>
  42ccad:	mov    rdi,QWORD PTR [rdi+0x4]
  42ccb1:	call   435170 <xmlStrEqual@plt+0x31230>
  42ccb6:	mov    rdi,rbx
  42ccb9:	movzx  r12d,BYTE PTR [rbx+0x3]
  42ccbe:	mov    r13,rax
  42ccc1:	movzx  ebp,BYTE PTR [rbx+0x2]
  42ccc5:	call   42ca00 <xmlStrEqual@plt+0x28ac0>
  42ccca:	sub    rsp,0x8
  42ccce:	push   r13
  42ccd0:	and    ebp,0x1f
  42ccd3:	mov    r9,rax
  42ccd6:	push   r12
  42ccd8:	lea    r8,[rip+0x232e9]        # 44ffc8 <xmlStrEqual@plt+0x4c088>
  42ccdf:	mov    ecx,0x78
  42cce4:	push   rbp
  42cce5:	mov    edx,0x1
  42ccea:	mov    esi,0x78
  42ccef:	lea    rdi,[rip+0x46faa]        # 473ca0 <xmlStrEqual@plt+0x6fd60>
  42ccf6:	xor    eax,eax
  42ccf8:	call   403a40 <__snprintf_chk@plt>
  42ccfd:	add    rsp,0x28
  42cd01:	pop    rbx
  42cd02:	pop    rbp
  42cd03:	pop    r12
  42cd05:	lea    rax,[rip+0x46f94]        # 473ca0 <xmlStrEqual@plt+0x6fd60>
  42cd0c:	pop    r13
  42cd0e:	ret    
  42cd0f:	nop
  42cd10:	xor    eax,eax
  42cd12:	ret    
  42cd13:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  42cd1e:	xchg   ax,ax
  42cd20:	endbr64 
  42cd24:	mov    BYTE PTR [rip+0x46f5d],0x0        # 473c88 <xmlStrEqual@plt+0x6fd48>
  42cd2b:	test   BYTE PTR [rdi],0x8
  42cd2e:	je     42ce28 <xmlStrEqual@plt+0x28ee8>
  42cd34:	mov    DWORD PTR [rip+0x46f4a],0x2c313d50        # 473c88 <xmlStrEqual@plt+0x6fd48>
  42cd3e:	mov    BYTE PTR [rip+0x46f47],0x0        # 473c8c <xmlStrEqual@plt+0x6fd4c>
  42cd45:	lea    rcx,[rip+0x46f3c]        # 473c88 <xmlStrEqual@plt+0x6fd48>
  42cd4c:	mov    rsi,rcx
  42cd4f:	mov    rax,rcx
  42cd52:	mov    r8d,DWORD PTR [rax]
  42cd55:	add    rax,0x4
  42cd59:	lea    edx,[r8-0x1010101]
  42cd60:	andn   edx,r8d,edx
  42cd65:	and    edx,0x80808080
  42cd6b:	je     42cd52 <xmlStrEqual@plt+0x28e12>
  42cd6d:	mov    r8d,edx
  42cd70:	shr    r8d,0x10
  42cd74:	test   edx,0x8080
  42cd7a:	cmove  edx,r8d
  42cd7e:	lea    r8,[rax+0x2]
  42cd82:	cmove  rax,r8
  42cd86:	mov    r9d,edx
  42cd89:	add    r9b,dl
  42cd8c:	sbb    rax,0x3
  42cd90:	sub    rax,rcx
  42cd93:	add    rax,rsi
  42cd96:	test   BYTE PTR [rdi],0x4
  42cd99:	je     42ce18 <xmlStrEqual@plt+0x28ed8>
  42cd9b:	mov    DWORD PTR [rax],0x2c313d45
  42cda1:	mov    BYTE PTR [rax+0x4],0x0
  42cda5:	lea    rax,[rip+0x46edc]        # 473c88 <xmlStrEqual@plt+0x6fd48>
  42cdac:	mov    rsi,rax
  42cdaf:	mov    rcx,rax
  42cdb2:	mov    r8d,DWORD PTR [rcx]
  42cdb5:	add    rcx,0x4
  42cdb9:	lea    edx,[r8-0x1010101]
  42cdc0:	andn   edx,r8d,edx
  42cdc5:	and    edx,0x80808080
  42cdcb:	je     42cdb2 <xmlStrEqual@plt+0x28e72>
  42cdcd:	mov    r8d,edx
  42cdd0:	shr    r8d,0x10
  42cdd4:	test   edx,0x8080
  42cdda:	cmove  edx,r8d
  42cdde:	lea    r8,[rcx+0x2]
  42cde2:	cmove  rcx,r8
  42cde6:	mov    r10d,edx
  42cde9:	add    r10b,dl
  42cdec:	sbb    rcx,0x3
  42cdf0:	sub    rcx,rax
  42cdf3:	movzx  eax,BYTE PTR [rdi]
  42cdf6:	and    eax,0x2
  42cdf9:	cmp    al,0x1
  42cdfb:	sbb    edx,edx
  42cdfd:	xor    dx,dx
  42ce00:	add    edx,0x313d53
  42ce06:	mov    DWORD PTR [rsi+rcx*1],edx
  42ce09:	lea    rax,[rip+0x46e78]        # 473c88 <xmlStrEqual@plt+0x6fd48>
  42ce10:	ret    
  42ce11:	nop    DWORD PTR [rax+0x0]
  42ce18:	mov    DWORD PTR [rax],0x2c303d45
  42ce1e:	mov    BYTE PTR [rax+0x4],0x0
  42ce22:	jmp    42cda5 <xmlStrEqual@plt+0x28e65>
  42ce24:	nop    DWORD PTR [rax+0x0]
  42ce28:	mov    DWORD PTR [rip+0x46e56],0x2c303d50        # 473c88 <xmlStrEqual@plt+0x6fd48>
  42ce32:	mov    BYTE PTR [rip+0x46e53],0x0        # 473c8c <xmlStrEqual@plt+0x6fd4c>
  42ce39:	jmp    42cd45 <xmlStrEqual@plt+0x28e05>
  42ce3e:	xchg   ax,ax
  42ce40:	endbr64 
  42ce44:	test   rdi,rdi
  42ce47:	je     42cea0 <xmlStrEqual@plt+0x28f60>
  42ce49:	push   r12
  42ce4b:	push   rbp
  42ce4c:	push   rbx
  42ce4d:	mov    rbx,rdi
  42ce50:	mov    rdi,QWORD PTR [rdi+0x4]
  42ce54:	call   435170 <xmlStrEqual@plt+0x31230>
  42ce59:	mov    r12,rax
  42ce5c:	mov    rdi,rbx
  42ce5f:	movzx  ebp,BYTE PTR [rbx+0x3]
  42ce63:	call   42cd20 <xmlStrEqual@plt+0x28de0>
  42ce68:	push   r12
  42ce6a:	mov    r9,rax
  42ce6d:	mov    edx,0x1
  42ce72:	push   rbp
  42ce73:	lea    r8,[rip+0x2319e]        # 450018 <xmlStrEqual@plt+0x4c0d8>
  42ce7a:	mov    ecx,0x64
  42ce7f:	mov    esi,0x64
  42ce84:	lea    rdi,[rip+0x46d95]        # 473c20 <xmlStrEqual@plt+0x6fce0>
  42ce8b:	xor    eax,eax
  42ce8d:	call   403a40 <__snprintf_chk@plt>
  42ce92:	pop    rax
  42ce93:	pop    rdx
  42ce94:	pop    rbx
  42ce95:	pop    rbp
  42ce96:	lea    rax,[rip+0x46d83]        # 473c20 <xmlStrEqual@plt+0x6fce0>
  42ce9d:	pop    r12
  42ce9f:	ret    
  42cea0:	xor    eax,eax
  42cea2:	ret    
  42cea3:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  42ceae:	xchg   ax,ax
  42ceb0:	endbr64 
  42ceb4:	test   rdi,rdi
  42ceb7:	je     42cf20 <xmlStrEqual@plt+0x28fe0>
  42ceb9:	sub    rsp,0x8
  42cebd:	mov    BYTE PTR [rip+0x46cdc],0x0        # 473ba0 <xmlStrEqual@plt+0x6fc60>
  42cec4:	mov    rax,rdi
  42cec7:	mov    rdi,QWORD PTR [rdi+0x4]
  42cecb:	test   BYTE PTR [rax],0x8
  42cece:	je     42cf08 <xmlStrEqual@plt+0x28fc8>
  42ced0:	call   435170 <xmlStrEqual@plt+0x31230>
  42ced5:	mov    r8,rax
  42ced8:	lea    rcx,[rip+0x231a1]        # 450080 <xmlStrEqual@plt+0x4c140>
  42cedf:	mov    edx,0x64
  42cee4:	mov    esi,0x1
  42cee9:	lea    rdi,[rip+0x46cb0]        # 473ba0 <xmlStrEqual@plt+0x6fc60>
  42cef0:	xor    eax,eax
  42cef2:	call   403a30 <__sprintf_chk@plt>
  42cef7:	lea    rax,[rip+0x46ca2]        # 473ba0 <xmlStrEqual@plt+0x6fc60>
  42cefe:	add    rsp,0x8
  42cf02:	ret    
  42cf03:	nop    DWORD PTR [rax+rax*1+0x0]
  42cf08:	call   435170 <xmlStrEqual@plt+0x31230>
  42cf0d:	mov    r8,rax
  42cf10:	lea    rcx,[rip+0x23141]        # 450058 <xmlStrEqual@plt+0x4c118>
  42cf17:	jmp    42cedf <xmlStrEqual@plt+0x28f9f>
  42cf19:	nop    DWORD PTR [rax+0x0]
  42cf20:	xor    eax,eax
  42cf22:	ret    
  42cf23:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  42cf2e:	xchg   ax,ax
  42cf30:	endbr64 
  42cf34:	push   rbp
  42cf35:	mov    rbp,rdi
  42cf38:	push   rbx
  42cf39:	lea    rbx,[rip+0x46c44]        # 473b84 <xmlStrEqual@plt+0x6fc44>
  42cf40:	sub    rsp,0x8
  42cf44:	mov    BYTE PTR [rip+0x46c39],0x0        # 473b84 <xmlStrEqual@plt+0x6fc44>
  42cf4b:	movzx  eax,BYTE PTR [rdi]
  42cf4e:	lea    rdi,[rip+0x46c2f]        # 473b84 <xmlStrEqual@plt+0x6fc44>
  42cf55:	and    eax,0x8
  42cf58:	cmp    al,0x1
  42cf5a:	sbb    eax,eax
  42cf5c:	and    eax,0x20
  42cf5f:	add    eax,0x50
  42cf62:	mov    WORD PTR [rip+0x46c1b],ax        # 473b84 <xmlStrEqual@plt+0x6fc44>
  42cf69:	call   403970 <strlen@plt>
  42cf6e:	movzx  edx,BYTE PTR [rbp+0x0]
  42cf72:	mov    rdi,rbx
  42cf75:	and    edx,0x2
  42cf78:	cmp    dl,0x1
  42cf7b:	sbb    edx,edx
  42cf7d:	and    edx,0x20
  42cf80:	add    edx,0x49
  42cf83:	mov    WORD PTR [rbx+rax*1],dx
  42cf87:	call   403970 <strlen@plt>
  42cf8c:	movzx  edx,BYTE PTR [rbp+0x0]
  42cf90:	mov    rdi,rbx
  42cf93:	and    edx,0x1
  42cf96:	cmp    dl,0x1
  42cf99:	sbb    edx,edx
  42cf9b:	and    edx,0x20
  42cf9e:	add    edx,0x52
  42cfa1:	mov    WORD PTR [rbx+rax*1],dx
  42cfa5:	call   403970 <strlen@plt>
  42cfaa:	movzx  edx,BYTE PTR [rbp+0x2]
  42cfae:	and    edx,0x1
  42cfb1:	cmp    dl,0x1
  42cfb4:	sbb    edx,edx
  42cfb6:	and    edx,0x20
  42cfb9:	add    edx,0x4d
  42cfbc:	mov    WORD PTR [rbx+rax*1],dx
  42cfc0:	add    rsp,0x8
  42cfc4:	mov    rax,rbx
  42cfc7:	pop    rbx
  42cfc8:	pop    rbp
  42cfc9:	ret    
  42cfca:	nop    WORD PTR [rax+rax*1+0x0]
  42cfd0:	endbr64 
  42cfd4:	test   rdi,rdi
  42cfd7:	je     42d040 <xmlStrEqual@plt+0x29100>
  42cfd9:	push   r12
  42cfdb:	mov    BYTE PTR [rip+0x46b3e],0x0        # 473b20 <xmlStrEqual@plt+0x6fbe0>
  42cfe2:	push   rbp
  42cfe3:	push   rbx
  42cfe4:	mov    rbx,rdi
  42cfe7:	mov    rdi,QWORD PTR [rdi+0x4]
  42cfeb:	call   435170 <xmlStrEqual@plt+0x31230>
  42cff0:	mov    r12,rax
  42cff3:	mov    rdi,rbx
  42cff6:	movzx  ebp,BYTE PTR [rbx+0x3]
  42cffa:	call   42cf30 <xmlStrEqual@plt+0x28ff0>
  42cfff:	push   r12
  42d001:	mov    r9,rax
  42d004:	mov    edx,0x1
  42d009:	push   rbp
  42d00a:	lea    r8,[rip+0x2308f]        # 4500a0 <xmlStrEqual@plt+0x4c160>
  42d011:	mov    ecx,0x64
  42d016:	mov    esi,0x64
  42d01b:	lea    rdi,[rip+0x46afe]        # 473b20 <xmlStrEqual@plt+0x6fbe0>
  42d022:	xor    eax,eax
  42d024:	call   403a40 <__snprintf_chk@plt>
  42d029:	pop    rax
  42d02a:	pop    rdx
  42d02b:	pop    rbx
  42d02c:	pop    rbp
  42d02d:	lea    rax,[rip+0x46aec]        # 473b20 <xmlStrEqual@plt+0x6fbe0>
  42d034:	pop    r12
  42d036:	ret    
  42d037:	nop    WORD PTR [rax+rax*1+0x0]
  42d040:	xor    eax,eax
  42d042:	ret    
  42d043:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  42d04e:	xchg   ax,ax
  42d050:	endbr64 
  42d054:	push   rbx
  42d055:	mov    rbx,rdi
  42d058:	movzx  eax,BYTE PTR [rdi]
  42d05b:	lea    rdi,[rip+0x46aa2]        # 473b04 <xmlStrEqual@plt+0x6fbc4>
  42d062:	and    eax,0x8
  42d065:	cmp    al,0x1
  42d067:	sbb    eax,eax
  42d069:	and    eax,0x20
  42d06c:	add    eax,0x49
  42d06f:	mov    WORD PTR [rip+0x46a8e],ax        # 473b04 <xmlStrEqual@plt+0x6fbc4>
  42d076:	call   403970 <strlen@plt>
  42d07b:	movzx  edx,BYTE PTR [rbx]
  42d07e:	lea    rcx,[rip+0x46a7f]        # 473b04 <xmlStrEqual@plt+0x6fbc4>
  42d085:	and    edx,0x4
  42d088:	cmp    dl,0x1
  42d08b:	sbb    edx,edx
  42d08d:	and    edx,0x20
  42d090:	add    edx,0x52
  42d093:	mov    WORD PTR [rcx+rax*1],dx
  42d097:	mov    rax,rcx
  42d09a:	pop    rbx
  42d09b:	ret    
  42d09c:	nop    DWORD PTR [rax+0x0]
  42d0a0:	endbr64 
  42d0a4:	test   rdi,rdi
  42d0a7:	je     42d110 <xmlStrEqual@plt+0x291d0>
  42d0a9:	push   r12
  42d0ab:	mov    BYTE PTR [rip+0x469ee],0x0        # 473aa0 <xmlStrEqual@plt+0x6fb60>
  42d0b2:	push   rbp
  42d0b3:	push   rbx
  42d0b4:	mov    rbx,rdi
  42d0b7:	mov    rdi,QWORD PTR [rdi+0x4]
  42d0bb:	call   435170 <xmlStrEqual@plt+0x31230>
  42d0c0:	mov    r12,rax
  42d0c3:	mov    rdi,rbx
  42d0c6:	movzx  ebp,BYTE PTR [rbx+0x3]
  42d0ca:	call   42d050 <xmlStrEqual@plt+0x29110>
  42d0cf:	push   r12
  42d0d1:	mov    r9,rax
  42d0d4:	mov    edx,0x1
  42d0d9:	push   rbp
  42d0da:	lea    r8,[rip+0x22fff]        # 4500e0 <xmlStrEqual@plt+0x4c1a0>
  42d0e1:	mov    ecx,0x64
  42d0e6:	mov    esi,0x64
  42d0eb:	lea    rdi,[rip+0x469ae]        # 473aa0 <xmlStrEqual@plt+0x6fb60>
  42d0f2:	xor    eax,eax
  42d0f4:	call   403a40 <__snprintf_chk@plt>
  42d0f9:	pop    rax
  42d0fa:	pop    rdx
  42d0fb:	pop    rbx
  42d0fc:	pop    rbp
  42d0fd:	lea    rax,[rip+0x4699c]        # 473aa0 <xmlStrEqual@plt+0x6fb60>
  42d104:	pop    r12
  42d106:	ret    
  42d107:	nop    WORD PTR [rax+rax*1+0x0]
  42d110:	xor    eax,eax
  42d112:	ret    
  42d113:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  42d11e:	xchg   ax,ax
  42d120:	endbr64 
  42d124:	mov    BYTE PTR [rip+0x46955],0x0        # 473a80 <xmlStrEqual@plt+0x6fb40>
  42d12b:	test   BYTE PTR [rdi],0x8
  42d12e:	je     42d278 <xmlStrEqual@plt+0x29338>
  42d134:	mov    DWORD PTR [rip+0x46942],0x2c313d53        # 473a80 <xmlStrEqual@plt+0x6fb40>
  42d13e:	mov    BYTE PTR [rip+0x4693f],0x0        # 473a84 <xmlStrEqual@plt+0x6fb44>
  42d145:	lea    rax,[rip+0x46934]        # 473a80 <xmlStrEqual@plt+0x6fb40>
  42d14c:	mov    r8,rax
  42d14f:	mov    rdx,rax
  42d152:	mov    esi,DWORD PTR [rdx]
  42d154:	add    rdx,0x4
  42d158:	lea    ecx,[rsi-0x1010101]
  42d15e:	andn   ecx,esi,ecx
  42d163:	and    ecx,0x80808080
  42d169:	je     42d152 <xmlStrEqual@plt+0x29212>
  42d16b:	mov    esi,ecx
  42d16d:	shr    esi,0x10
  42d170:	test   ecx,0x8080
  42d176:	cmove  ecx,esi
  42d179:	lea    rsi,[rdx+0x2]
  42d17d:	cmove  rdx,rsi
  42d181:	mov    esi,ecx
  42d183:	add    sil,cl
  42d186:	sbb    rdx,0x3
  42d18a:	sub    rdx,rax
  42d18d:	add    rdx,r8
  42d190:	test   BYTE PTR [rdi],0x4
  42d193:	je     42d290 <xmlStrEqual@plt+0x29350>
  42d199:	mov    DWORD PTR [rdx],0x2c313d44
  42d19f:	mov    BYTE PTR [rdx+0x4],0x0
  42d1a3:	lea    rdx,[rip+0x468d6]        # 473a80 <xmlStrEqual@plt+0x6fb40>
  42d1aa:	mov    r8,rdx
  42d1ad:	mov    rax,rdx
  42d1b0:	mov    esi,DWORD PTR [rax]
  42d1b2:	add    rax,0x4
  42d1b6:	lea    ecx,[rsi-0x1010101]
  42d1bc:	andn   ecx,esi,ecx
  42d1c1:	and    ecx,0x80808080
  42d1c7:	je     42d1b0 <xmlStrEqual@plt+0x29270>
  42d1c9:	mov    esi,ecx
  42d1cb:	shr    esi,0x10
  42d1ce:	test   ecx,0x8080
  42d1d4:	cmove  ecx,esi
  42d1d7:	lea    rsi,[rax+0x2]
  42d1db:	cmove  rax,rsi
  42d1df:	mov    esi,ecx
  42d1e1:	add    sil,cl
  42d1e4:	sbb    rax,0x3
  42d1e8:	sub    rax,rdx
  42d1eb:	add    rax,r8
  42d1ee:	test   BYTE PTR [rdi+0x1],0x40
  42d1f2:	je     42d268 <xmlStrEqual@plt+0x29328>
  42d1f4:	mov    DWORD PTR [rax],0x2c313d52
  42d1fa:	mov    BYTE PTR [rax+0x4],0x0
  42d1fe:	lea    rax,[rip+0x4687b]        # 473a80 <xmlStrEqual@plt+0x6fb40>
  42d205:	mov    r8,rax
  42d208:	mov    rsi,rax
  42d20b:	mov    edx,DWORD PTR [rsi]
  42d20d:	add    rsi,0x4
  42d211:	lea    ecx,[rdx-0x1010101]
  42d217:	andn   ecx,edx,ecx
  42d21c:	and    ecx,0x80808080
  42d222:	je     42d20b <xmlStrEqual@plt+0x292cb>
  42d224:	mov    edx,ecx
  42d226:	shr    edx,0x10
  42d229:	test   ecx,0x8080
  42d22f:	cmove  ecx,edx
  42d232:	lea    rdx,[rsi+0x2]
  42d236:	cmove  rsi,rdx
  42d23a:	mov    edx,ecx
  42d23c:	add    dl,cl
  42d23e:	sbb    rsi,0x3
  42d242:	sub    rsi,rax
  42d245:	movzx  eax,BYTE PTR [rdi+0x1]
  42d249:	and    eax,0x20
  42d24c:	cmp    al,0x1
  42d24e:	sbb    eax,eax
  42d250:	xor    ax,ax
  42d253:	add    eax,0x313d4e
  42d258:	mov    DWORD PTR [r8+rsi*1],eax
  42d25c:	lea    rax,[rip+0x4681d]        # 473a80 <xmlStrEqual@plt+0x6fb40>
  42d263:	ret    
  42d264:	nop    DWORD PTR [rax+0x0]
  42d268:	mov    DWORD PTR [rax],0x2c303d52
  42d26e:	mov    BYTE PTR [rax+0x4],0x0
  42d272:	jmp    42d1fe <xmlStrEqual@plt+0x292be>
  42d274:	nop    DWORD PTR [rax+0x0]
  42d278:	mov    DWORD PTR [rip+0x467fe],0x2c303d53        # 473a80 <xmlStrEqual@plt+0x6fb40>
  42d282:	mov    BYTE PTR [rip+0x467fb],0x0        # 473a84 <xmlStrEqual@plt+0x6fb44>
  42d289:	jmp    42d145 <xmlStrEqual@plt+0x29205>
  42d28e:	xchg   ax,ax
  42d290:	mov    DWORD PTR [rdx],0x2c303d44
  42d296:	mov    BYTE PTR [rdx+0x4],0x0
  42d29a:	jmp    42d1a3 <xmlStrEqual@plt+0x29263>
  42d29f:	nop
  42d2a0:	endbr64 
  42d2a4:	test   rdi,rdi
  42d2a7:	je     42d2e8 <xmlStrEqual@plt+0x293a8>
  42d2a9:	sub    rsp,0x8
  42d2ad:	call   42d120 <xmlStrEqual@plt+0x291e0>
  42d2b2:	mov    r9,rax
  42d2b5:	lea    r8,[rip+0x22e98]        # 450154 <xmlStrEqual@plt+0x4c214>
  42d2bc:	mov    ecx,0x32
  42d2c1:	mov    edx,0x1
  42d2c6:	mov    esi,0x32
  42d2cb:	lea    rdi,[rip+0x4676e]        # 473a40 <xmlStrEqual@plt+0x6fb00>
  42d2d2:	xor    eax,eax
  42d2d4:	call   403a40 <__snprintf_chk@plt>
  42d2d9:	lea    rax,[rip+0x46760]        # 473a40 <xmlStrEqual@plt+0x6fb00>
  42d2e0:	add    rsp,0x8
  42d2e4:	ret    
  42d2e5:	nop    DWORD PTR [rax]
  42d2e8:	xor    eax,eax
  42d2ea:	ret    
  42d2eb:	nop    DWORD PTR [rax+rax*1+0x0]
  42d2f0:	endbr64 
  42d2f4:	test   rdi,rdi
  42d2f7:	je     42d340 <xmlStrEqual@plt+0x29400>
  42d2f9:	sub    rsp,0x10
  42d2fd:	mov    BYTE PTR [rip+0x466bc],0x0        # 4739c0 <xmlStrEqual@plt+0x6fa80>
  42d304:	lea    r8,[rip+0x22e15]        # 450120 <xmlStrEqual@plt+0x4c1e0>
  42d30b:	mov    ecx,0x64
  42d310:	push   QWORD PTR [rdi+0x4]
  42d313:	mov    edx,0x1
  42d318:	mov    esi,0x64
  42d31d:	movzx  r9d,BYTE PTR [rdi+0x3]
  42d322:	xor    eax,eax
  42d324:	lea    rdi,[rip+0x46695]        # 4739c0 <xmlStrEqual@plt+0x6fa80>
  42d32b:	call   403a40 <__snprintf_chk@plt>
  42d330:	lea    rax,[rip+0x46689]        # 4739c0 <xmlStrEqual@plt+0x6fa80>
  42d337:	add    rsp,0x18
  42d33b:	ret    
  42d33c:	nop    DWORD PTR [rax+0x0]
  42d340:	xor    eax,eax
  42d342:	ret    
  42d343:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  42d34e:	xchg   ax,ax
  42d350:	endbr64 
  42d354:	xor    eax,eax
  42d356:	cmp    WORD PTR [rdi],0x340
  42d35b:	je     42d360 <xmlStrEqual@plt+0x29420>
  42d35d:	ret    
  42d35e:	xchg   ax,ax
  42d360:	cmp    BYTE PTR [rdi+0x4],0x9
  42d364:	jne    42d35d <xmlStrEqual@plt+0x2941d>
  42d366:	test   BYTE PTR [rdi+0x5],0x3
  42d36a:	setne  al
  42d36d:	ret    
  42d36e:	xchg   ax,ax
  42d370:	endbr64 
  42d374:	push   rbx
  42d375:	mov    rbx,rdi
  42d378:	sub    rsp,0x10
  42d37c:	call   42d350 <xmlStrEqual@plt+0x29410>
  42d381:	test   al,al
  42d383:	je     42d3d0 <xmlStrEqual@plt+0x29490>
  42d385:	movzx  eax,BYTE PTR [rbx+0x5]
  42d389:	mov    edx,eax
  42d38b:	and    edx,0x3
  42d38e:	cmp    dl,0x3
  42d391:	je     42d3d0 <xmlStrEqual@plt+0x29490>
  42d393:	mov    edx,eax
  42d395:	mov    ecx,eax
  42d397:	shr    dl,1
  42d399:	shr    al,0x2
  42d39c:	and    ecx,0x1
  42d39f:	and    edx,0x1
  42d3a2:	and    eax,0x1
  42d3a5:	mov    BYTE PTR [rsp+0xd],al
  42d3a9:	mov    BYTE PTR [rsp+0xe],cl
  42d3ad:	mov    BYTE PTR [rsp+0xf],dl
  42d3b1:	movzx  edx,BYTE PTR [rsp+0xe]
  42d3b6:	movzx  eax,BYTE PTR [rsp+0xd]
  42d3bb:	mov    ah,dl
  42d3bd:	movzx  edx,BYTE PTR [rsp+0xf]
  42d3c2:	add    rsp,0x10
  42d3c6:	shl    rdx,0x10
  42d3ca:	or     rax,rdx
  42d3cd:	pop    rbx
  42d3ce:	ret    
  42d3cf:	nop
  42d3d0:	xor    eax,eax
  42d3d2:	mov    WORD PTR [rsp+0xd],ax
  42d3d7:	mov    BYTE PTR [rsp+0xf],0x0
  42d3dc:	jmp    42d3b1 <xmlStrEqual@plt+0x29471>
  42d3de:	xchg   ax,ax
  42d3e0:	endbr64 
  42d3e4:	movzx  edx,BYTE PTR [rsi+0x1]
  42d3e8:	movzx  eax,BYTE PTR [rdi+0x5]
  42d3ec:	and    edx,0x1
  42d3ef:	and    eax,0xfffffffe
  42d3f2:	or     eax,edx
  42d3f4:	mov    BYTE PTR [rdi+0x5],al
  42d3f7:	and    eax,0xfffffffd
  42d3fa:	movzx  edx,BYTE PTR [rsi+0x2]
  42d3fe:	and    edx,0x1
  42d401:	add    edx,edx
  42d403:	or     eax,edx
  42d405:	mov    BYTE PTR [rdi+0x5],al
  42d408:	and    eax,0xfffffffb
  42d40b:	movzx  edx,BYTE PTR [rsi]
  42d40e:	and    edx,0x1
  42d411:	shl    edx,0x2
  42d414:	or     eax,edx
  42d416:	mov    BYTE PTR [rdi+0x5],al
  42d419:	ret    
  42d41a:	nop    WORD PTR [rax+rax*1+0x0]
  42d420:	endbr64 
  42d424:	movabs rax,0x1000010a000000
  42d42e:	mov    QWORD PTR [rdi],rax
  42d431:	xor    eax,eax
  42d433:	mov    WORD PTR [rdi+0x8],ax
  42d437:	ret    
  42d438:	nop    DWORD PTR [rax+rax*1+0x0]
  42d440:	endbr64 
  42d444:	movabs rax,0x1000010a000000
  42d44e:	mov    QWORD PTR [rdi],rax
  42d451:	xor    eax,eax
  42d453:	mov    WORD PTR [rdi+0x8],ax
  42d457:	ret    
  42d458:	nop    DWORD PTR [rax+rax*1+0x0]
  42d460:	endbr64 
  42d464:	cmp    edi,0x1
  42d467:	je     42d4d0 <xmlStrEqual@plt+0x29590>
  42d469:	jle    42d4a0 <xmlStrEqual@plt+0x29560>
  42d46b:	cmp    edi,0x2
  42d46e:	je     42d550 <xmlStrEqual@plt+0x29610>
  42d474:	cmp    edi,0x3
  42d477:	jne    42d510 <xmlStrEqual@plt+0x295d0>
  42d47d:	mov    DWORD PTR [rip+0x46a49],0x706f7264        # 473ed0 <xmlStrEqual@plt+0x6ff90>
  42d487:	mov    BYTE PTR [rip+0x46a46],0x0        # 473ed4 <xmlStrEqual@plt+0x6ff94>
  42d48e:	lea    rax,[rip+0x46a3b]        # 473ed0 <xmlStrEqual@plt+0x6ff90>
  42d495:	ret    
  42d496:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42d4a0:	test   edi,edi
  42d4a2:	jne    42d510 <xmlStrEqual@plt+0x295d0>
  42d4a4:	movabs rax,0x6f697463612d6f6e
  42d4ae:	mov    ecx,0x6e
  42d4b3:	mov    QWORD PTR [rip+0x46a16],rax        # 473ed0 <xmlStrEqual@plt+0x6ff90>
  42d4ba:	mov    WORD PTR [rip+0x46a17],cx        # 473ed8 <xmlStrEqual@plt+0x6ff98>
  42d4c1:	lea    rax,[rip+0x46a08]        # 473ed0 <xmlStrEqual@plt+0x6ff90>
  42d4c8:	ret    
  42d4c9:	nop    DWORD PTR [rax+0x0]
  42d4d0:	movabs rax,0x662d65766974616e
  42d4da:	mov    edx,0x6472
  42d4df:	mov    QWORD PTR [rip+0x469ea],rax        # 473ed0 <xmlStrEqual@plt+0x6ff90>
  42d4e6:	mov    DWORD PTR [rip+0x469e8],0x6177726f        # 473ed8 <xmlStrEqual@plt+0x6ff98>
  42d4f0:	mov    WORD PTR [rip+0x469e5],dx        # 473edc <xmlStrEqual@plt+0x6ff9c>
  42d4f7:	mov    BYTE PTR [rip+0x469e0],0x0        # 473ede <xmlStrEqual@plt+0x6ff9e>
  42d4fe:	lea    rax,[rip+0x469cb]        # 473ed0 <xmlStrEqual@plt+0x6ff90>
  42d505:	ret    
  42d506:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42d510:	movabs rax,0x2d6e776f6e6b6e75
  42d51a:	mov    QWORD PTR [rip+0x469af],rax        # 473ed0 <xmlStrEqual@plt+0x6ff90>
  42d521:	mov    eax,0x6e6f
  42d526:	mov    WORD PTR [rip+0x469af],ax        # 473edc <xmlStrEqual@plt+0x6ff9c>
  42d52d:	mov    DWORD PTR [rip+0x469a1],0x69746361        # 473ed8 <xmlStrEqual@plt+0x6ff98>
  42d537:	mov    BYTE PTR [rip+0x469a0],0x0        # 473ede <xmlStrEqual@plt+0x6ff9e>
  42d53e:	lea    rax,[rip+0x4698b]        # 473ed0 <xmlStrEqual@plt+0x6ff90>
  42d545:	ret    
  42d546:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42d550:	vmovdqa xmm0,XMMWORD PTR [rip+0x22d18]        # 450270 <xmlStrEqual@plt+0x4c330>
  42d558:	mov    BYTE PTR [rip+0x46981],0x0        # 473ee0 <xmlStrEqual@plt+0x6ffa0>
  42d55f:	vmovaps XMMWORD PTR [rip+0x46969],xmm0        # 473ed0 <xmlStrEqual@plt+0x6ff90>
  42d567:	lea    rax,[rip+0x46962]        # 473ed0 <xmlStrEqual@plt+0x6ff90>
  42d56e:	ret    
  42d56f:	nop
  42d570:	endbr64 
  42d574:	cmp    edi,0x5
  42d577:	ja     42d688 <xmlStrEqual@plt+0x29748>
  42d57d:	lea    rdx,[rip+0x22be8]        # 45016c <xmlStrEqual@plt+0x4c22c>
  42d584:	mov    edi,edi
  42d586:	movsxd rax,DWORD PTR [rdx+rdi*4]
  42d58a:	add    rax,rdx
  42d58d:	notrack jmp rax
  42d590:	vmovdqa xmm0,XMMWORD PTR [rip+0x22cf8]        # 450290 <xmlStrEqual@plt+0x4c350>
  42d598:	lea    rax,[rip+0x46911]        # 473eb0 <xmlStrEqual@plt+0x6ff70>
  42d59f:	vmovaps XMMWORD PTR [rip+0x46909],xmm0        # 473eb0 <xmlStrEqual@plt+0x6ff70>
  42d5a7:	ret    
  42d5a8:	nop    DWORD PTR [rax+rax*1+0x0]
  42d5b0:	vmovdqa xmm0,XMMWORD PTR [rip+0x22ce8]        # 4502a0 <xmlStrEqual@plt+0x4c360>
  42d5b8:	mov    edx,0x65
  42d5bd:	vmovaps XMMWORD PTR [rip+0x468eb],xmm0        # 473eb0 <xmlStrEqual@plt+0x6ff70>
  42d5c5:	mov    WORD PTR [rip+0x468f4],dx        # 473ec0 <xmlStrEqual@plt+0x6ff80>
  42d5cc:	lea    rax,[rip+0x468dd]        # 473eb0 <xmlStrEqual@plt+0x6ff70>
  42d5d3:	ret    
  42d5d4:	nop    DWORD PTR [rax+0x0]
  42d5d8:	movabs rax,0x6665722d65646f6e
  42d5e2:	mov    edi,0x6c
  42d5e7:	mov    QWORD PTR [rip+0x468c2],rax        # 473eb0 <xmlStrEqual@plt+0x6ff70>
  42d5ee:	mov    DWORD PTR [rip+0x468c0],0x61727265        # 473eb8 <xmlStrEqual@plt+0x6ff78>
  42d5f8:	mov    WORD PTR [rip+0x468bd],di        # 473ebc <xmlStrEqual@plt+0x6ff7c>
  42d5ff:	lea    rax,[rip+0x468aa]        # 473eb0 <xmlStrEqual@plt+0x6ff70>
  42d606:	ret    
  42d607:	nop    WORD PTR [rax+rax*1+0x0]
  42d610:	movabs rax,0x72656665722d736d
  42d61a:	mov    QWORD PTR [rip+0x4688f],rax        # 473eb0 <xmlStrEqual@plt+0x6ff70>
  42d621:	mov    DWORD PTR [rip+0x4688d],0x6c6172        # 473eb8 <xmlStrEqual@plt+0x6ff78>
  42d62b:	lea    rax,[rip+0x4687e]        # 473eb0 <xmlStrEqual@plt+0x6ff70>
  42d632:	ret    
  42d633:	nop    DWORD PTR [rax+rax*1+0x0]
  42d638:	mov    esi,0x6b63
  42d63d:	mov    DWORD PTR [rip+0x46869],0x612d736d        # 473eb0 <xmlStrEqual@plt+0x6ff70>
  42d647:	mov    WORD PTR [rip+0x46866],si        # 473eb4 <xmlStrEqual@plt+0x6ff74>
  42d64e:	mov    BYTE PTR [rip+0x46861],0x0        # 473eb6 <xmlStrEqual@plt+0x6ff76>
  42d655:	lea    rax,[rip+0x46854]        # 473eb0 <xmlStrEqual@plt+0x6ff70>
  42d65c:	ret    
  42d65d:	nop    DWORD PTR [rax]
  42d660:	vmovdqa xmm0,XMMWORD PTR [rip+0x22c18]        # 450280 <xmlStrEqual@plt+0x4c340>
  42d668:	mov    ecx,0x64
  42d66d:	vmovaps XMMWORD PTR [rip+0x4683b],xmm0        # 473eb0 <xmlStrEqual@plt+0x6ff70>
  42d675:	mov    WORD PTR [rip+0x46844],cx        # 473ec0 <xmlStrEqual@plt+0x6ff80>
  42d67c:	lea    rax,[rip+0x4682d]        # 473eb0 <xmlStrEqual@plt+0x6ff70>
  42d683:	ret    
  42d684:	nop    DWORD PTR [rax+0x0]
  42d688:	movabs rax,0x2d6e776f6e6b6e75
  42d692:	mov    QWORD PTR [rip+0x46817],rax        # 473eb0 <xmlStrEqual@plt+0x6ff70>
  42d699:	mov    eax,0x6e6f
  42d69e:	mov    WORD PTR [rip+0x46817],ax        # 473ebc <xmlStrEqual@plt+0x6ff7c>
  42d6a5:	mov    DWORD PTR [rip+0x46809],0x69746361        # 473eb8 <xmlStrEqual@plt+0x6ff78>
  42d6af:	mov    BYTE PTR [rip+0x46808],0x0        # 473ebe <xmlStrEqual@plt+0x6ff7e>
  42d6b6:	lea    rax,[rip+0x467f3]        # 473eb0 <xmlStrEqual@plt+0x6ff70>
  42d6bd:	ret    
  42d6be:	xchg   ax,ax
  42d6c0:	endbr64 
  42d6c4:	test   rdi,rdi
  42d6c7:	je     42d748 <xmlStrEqual@plt+0x29808>
  42d6c9:	push   r12
  42d6cb:	mov    BYTE PTR [rip+0x4676e],0x0        # 473e40 <xmlStrEqual@plt+0x6ff00>
  42d6d2:	push   rbp
  42d6d3:	push   rbx
  42d6d4:	mov    rbx,rdi
  42d6d7:	movzx  ebp,BYTE PTR [rdi+0x8]
  42d6db:	movzx  eax,BYTE PTR [rdi+0x9]
  42d6df:	movzx  edi,BYTE PTR [rdi+0x6]
  42d6e3:	and    ebp,0xf
  42d6e6:	mov    r12d,edi
  42d6e9:	shl    ebp,0x8
  42d6ec:	shr    dil,0x5
  42d6f0:	or     ebp,eax
  42d6f2:	movzx  edi,dil
  42d6f6:	call   42d460 <xmlStrEqual@plt+0x29520>
  42d6fb:	push   rbp
  42d6fc:	shr    r12b,0x4
  42d700:	and    r12d,0x1
  42d704:	push   r12
  42d706:	lea    r8,[rip+0x22a7b]        # 450188 <xmlStrEqual@plt+0x4c248>
  42d70d:	mov    ecx,0x64
  42d712:	push   rax
  42d713:	mov    edx,0x1
  42d718:	mov    esi,0x64
  42d71d:	movzx  eax,BYTE PTR [rbx+0x4]
  42d721:	lea    rdi,[rip+0x46718]        # 473e40 <xmlStrEqual@plt+0x6ff00>
  42d728:	push   rax
  42d729:	xor    eax,eax
  42d72b:	movbe  r9d,DWORD PTR [rbx]
  42d730:	call   403a40 <__snprintf_chk@plt>
  42d735:	add    rsp,0x20
  42d739:	pop    rbx
  42d73a:	pop    rbp
  42d73b:	lea    rax,[rip+0x466fe]        # 473e40 <xmlStrEqual@plt+0x6ff00>
  42d742:	pop    r12
  42d744:	ret    
  42d745:	nop    DWORD PTR [rax]
  42d748:	xor    eax,eax
  42d74a:	ret    
  42d74b:	nop    DWORD PTR [rax+rax*1+0x0]
  42d750:	endbr64 
  42d754:	test   rdi,rdi
  42d757:	je     42d7f8 <xmlStrEqual@plt+0x298b8>
  42d75d:	push   r13
  42d75f:	push   r12
  42d761:	push   rbp
  42d762:	push   rbx
  42d763:	mov    rbx,rdi
  42d766:	sub    rsp,0x8
  42d76a:	mov    BYTE PTR [rip+0x4664f],0x0        # 473dc0 <xmlStrEqual@plt+0x6fe80>
  42d771:	movzx  eax,BYTE PTR [rdi+0x8]
  42d775:	movzx  ebp,BYTE PTR [rdi+0x9]
  42d779:	movzx  edi,BYTE PTR [rdi+0x6]
  42d77d:	and    eax,0xf
  42d780:	mov    r13d,edi
  42d783:	mov    r12d,edi
  42d786:	shr    dil,0x5
  42d78a:	shl    eax,0x8
  42d78d:	movzx  edi,dil
  42d791:	or     ebp,eax
  42d793:	call   42d570 <xmlStrEqual@plt+0x29630>
  42d798:	sub    rsp,0x8
  42d79c:	push   rbp
  42d79d:	shr    r13b,0x3
  42d7a1:	and    r13d,0x1
  42d7a5:	push   r13
  42d7a7:	shr    r12b,0x4
  42d7ab:	and    r12d,0x1
  42d7af:	push   r12
  42d7b1:	lea    r8,[rip+0x22a20]        # 4501d8 <xmlStrEqual@plt+0x4c298>
  42d7b8:	mov    ecx,0x64
  42d7bd:	push   rax
  42d7be:	mov    edx,0x1
  42d7c3:	mov    esi,0x64
  42d7c8:	movzx  eax,BYTE PTR [rbx+0x4]
  42d7cc:	lea    rdi,[rip+0x465ed]        # 473dc0 <xmlStrEqual@plt+0x6fe80>
  42d7d3:	push   rax
  42d7d4:	xor    eax,eax
  42d7d6:	movbe  r9d,DWORD PTR [rbx]
  42d7db:	call   403a40 <__snprintf_chk@plt>
  42d7e0:	add    rsp,0x38
  42d7e4:	pop    rbx
  42d7e5:	pop    rbp
  42d7e6:	pop    r12
  42d7e8:	lea    rax,[rip+0x465d1]        # 473dc0 <xmlStrEqual@plt+0x6fe80>
  42d7ef:	pop    r13
  42d7f1:	ret    
  42d7f2:	nop    WORD PTR [rax+rax*1+0x0]
  42d7f8:	xor    eax,eax
  42d7fa:	ret    
  42d7fb:	nop    DWORD PTR [rax+rax*1+0x0]
  42d800:	endbr64 
  42d804:	mov    BYTE PTR [rip+0x4659d],0x0        # 473da8 <xmlStrEqual@plt+0x6fe68>
  42d80b:	test   BYTE PTR [rdi+0x5],0x4
  42d80f:	je     42d908 <xmlStrEqual@plt+0x299c8>
  42d815:	mov    DWORD PTR [rip+0x46589],0x2c313d4c        # 473da8 <xmlStrEqual@plt+0x6fe68>
  42d81f:	mov    BYTE PTR [rip+0x46586],0x0        # 473dac <xmlStrEqual@plt+0x6fe6c>
  42d826:	lea    rcx,[rip+0x4657b]        # 473da8 <xmlStrEqual@plt+0x6fe68>
  42d82d:	mov    rsi,rcx
  42d830:	mov    rax,rcx
  42d833:	mov    r8d,DWORD PTR [rax]
  42d836:	add    rax,0x4
  42d83a:	lea    edx,[r8-0x1010101]
  42d841:	andn   edx,r8d,edx
  42d846:	and    edx,0x80808080
  42d84c:	je     42d833 <xmlStrEqual@plt+0x298f3>
  42d84e:	mov    r8d,edx
  42d851:	shr    r8d,0x10
  42d855:	test   edx,0x8080
  42d85b:	cmove  edx,r8d
  42d85f:	lea    r8,[rax+0x2]
  42d863:	cmove  rax,r8
  42d867:	mov    r9d,edx
  42d86a:	add    r9b,dl
  42d86d:	sbb    rax,0x3
  42d871:	sub    rax,rcx
  42d874:	add    rax,rsi
  42d877:	test   BYTE PTR [rdi+0x5],0x2
  42d87b:	je     42d8f8 <xmlStrEqual@plt+0x299b8>
  42d87d:	mov    DWORD PTR [rax],0x2c313d70
  42d883:	mov    BYTE PTR [rax+0x4],0x0
  42d887:	lea    rax,[rip+0x4651a]        # 473da8 <xmlStrEqual@plt+0x6fe68>
  42d88e:	mov    rsi,rax
  42d891:	mov    rcx,rax
  42d894:	mov    r8d,DWORD PTR [rcx]
  42d897:	add    rcx,0x4
  42d89b:	lea    edx,[r8-0x1010101]
  42d8a2:	andn   edx,r8d,edx
  42d8a7:	and    edx,0x80808080
  42d8ad:	je     42d894 <xmlStrEqual@plt+0x29954>
  42d8af:	mov    r8d,edx
  42d8b2:	shr    r8d,0x10
  42d8b6:	test   edx,0x8080
  42d8bc:	cmove  edx,r8d
  42d8c0:	lea    r8,[rcx+0x2]
  42d8c4:	cmove  rcx,r8
  42d8c8:	mov    r10d,edx
  42d8cb:	add    r10b,dl
  42d8ce:	sbb    rcx,0x3
  42d8d2:	sub    rcx,rax
  42d8d5:	movzx  eax,BYTE PTR [rdi+0x5]
  42d8d9:	and    eax,0x1
  42d8dc:	cmp    al,0x1
  42d8de:	sbb    edx,edx
  42d8e0:	xor    dx,dx
  42d8e3:	add    edx,0x313d52
  42d8e9:	mov    DWORD PTR [rsi+rcx*1],edx
  42d8ec:	lea    rax,[rip+0x464b5]        # 473da8 <xmlStrEqual@plt+0x6fe68>
  42d8f3:	ret    
  42d8f4:	nop    DWORD PTR [rax+0x0]
  42d8f8:	mov    DWORD PTR [rax],0x2c303d70
  42d8fe:	mov    BYTE PTR [rax+0x4],0x0
  42d902:	jmp    42d887 <xmlStrEqual@plt+0x29947>
  42d904:	nop    DWORD PTR [rax+0x0]
  42d908:	mov    DWORD PTR [rip+0x46496],0x2c303d4c        # 473da8 <xmlStrEqual@plt+0x6fe68>
  42d912:	mov    BYTE PTR [rip+0x46493],0x0        # 473dac <xmlStrEqual@plt+0x6fe6c>
  42d919:	jmp    42d826 <xmlStrEqual@plt+0x298e6>
  42d91e:	xchg   ax,ax
  42d920:	endbr64 
  42d924:	test   rdi,rdi
  42d927:	je     42d990 <xmlStrEqual@plt+0x29a50>
  42d929:	push   r13
  42d92b:	push   r12
  42d92d:	push   rbp
  42d92e:	push   rbx
  42d92f:	sub    rsp,0x8
  42d933:	mov    BYTE PTR [rip+0x46406],0x0        # 473d40 <xmlStrEqual@plt+0x6fe00>
  42d93a:	movzx  r13d,BYTE PTR [rdi+0x3]
  42d93f:	movzx  r12d,BYTE PTR [rdi+0x2]
  42d944:	movzx  ebp,BYTE PTR [rdi+0x1]
  42d948:	movzx  ebx,BYTE PTR [rdi]
  42d94b:	call   42d800 <xmlStrEqual@plt+0x298c0>
  42d950:	push   r13
  42d952:	mov    r9,rax
  42d955:	lea    r8,[rip+0x228dc]        # 450238 <xmlStrEqual@plt+0x4c2f8>
  42d95c:	push   r12
  42d95e:	mov    ecx,0x64
  42d963:	mov    edx,0x1
  42d968:	push   rbp
  42d969:	mov    esi,0x64
  42d96e:	lea    rdi,[rip+0x463cb]        # 473d40 <xmlStrEqual@plt+0x6fe00>
  42d975:	push   rbx
  42d976:	xor    eax,eax
  42d978:	call   403a40 <__snprintf_chk@plt>
  42d97d:	add    rsp,0x28
  42d981:	pop    rbx
  42d982:	pop    rbp
  42d983:	pop    r12
  42d985:	lea    rax,[rip+0x463b4]        # 473d40 <xmlStrEqual@plt+0x6fe00>
  42d98c:	pop    r13
  42d98e:	ret    
  42d98f:	nop
  42d990:	xor    eax,eax
  42d992:	ret    
  42d993:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  42d99e:	xchg   ax,ax
  42d9a0:	endbr64 
  42d9a4:	cmp    edi,0x1
  42d9a7:	sbb    eax,eax
  42d9a9:	not    eax
  42d9ab:	and    eax,0x14
  42d9ae:	ret    
  42d9af:	nop
  42d9b0:	endbr64 
  42d9b4:	xor    eax,eax
  42d9b6:	mov    WORD PTR [rdi],ax
  42d9b9:	ret    
  42d9ba:	nop    WORD PTR [rax+rax*1+0x0]
  42d9c0:	endbr64 
  42d9c4:	cmp    esi,0x1
  42d9c7:	jle    42da18 <xmlStrEqual@plt+0x29ad8>
  42d9c9:	lea    r8d,[rsi-0x2]
  42d9cd:	shr    r8d,1
  42d9d0:	mov    eax,r8d
  42d9d3:	lea    rcx,[rdi+rax*2+0x2]
  42d9d8:	xor    eax,eax
  42d9da:	nop    WORD PTR [rax+rax*1+0x0]
  42d9e0:	add    rdi,0x2
  42d9e4:	movzx  edx,WORD PTR [rdi-0x2]
  42d9e8:	add    eax,edx
  42d9ea:	cmp    rdi,rcx
  42d9ed:	jne    42d9e0 <xmlStrEqual@plt+0x29aa0>
  42d9ef:	neg    r8d
  42d9f2:	lea    esi,[rsi+r8*2-0x2]
  42d9f7:	test   esi,esi
  42d9f9:	je     42da00 <xmlStrEqual@plt+0x29ac0>
  42d9fb:	movzx  edx,BYTE PTR [rcx]
  42d9fe:	add    eax,edx
  42da00:	mov    edx,eax
  42da02:	shr    edx,0x10
  42da05:	movzx  eax,ax
  42da08:	add    edx,eax
  42da0a:	mov    eax,edx
  42da0c:	shr    eax,0x10
  42da0f:	add    eax,edx
  42da11:	not    eax
  42da13:	ret    
  42da14:	nop    DWORD PTR [rax+0x0]
  42da18:	mov    rcx,rdi
  42da1b:	xor    eax,eax
  42da1d:	jmp    42d9f7 <xmlStrEqual@plt+0x29ab7>
  42da1f:	nop
  42da20:	endbr64 
  42da24:	mov    eax,esi
  42da26:	xor    r8d,r8d
  42da29:	cmp    esi,0x1
  42da2c:	jbe    42da7a <xmlStrEqual@plt+0x29b3a>
  42da2e:	lea    r10d,[rsi-0x2]
  42da32:	lea    r11,[rdi+0x2]
  42da36:	shr    r10d,1
  42da39:	movzx  r8d,WORD PTR [rdi]
  42da3d:	lea    r9,[rdi+r10*2+0x2]
  42da42:	mov    rax,r11
  42da45:	jmp    42da6c <xmlStrEqual@plt+0x29b2c>
  42da47:	nop    WORD PTR [rax+rax*1+0x0]
  42da50:	add    rax,0x2
  42da54:	movzx  edi,WORD PTR [rax-0x2]
  42da58:	add    r8d,edi
  42da5b:	movzx  edi,r8w
  42da5f:	add    edi,0x8000
  42da65:	test   r8d,r8d
  42da68:	cmovs  r8d,edi
  42da6c:	cmp    rax,r9
  42da6f:	jne    42da50 <xmlStrEqual@plt+0x29b10>
  42da71:	mov    eax,esi
  42da73:	and    eax,0x1
  42da76:	lea    rdi,[r11+r10*2]
  42da7a:	test   eax,eax
  42da7c:	je     42da84 <xmlStrEqual@plt+0x29b44>
  42da7e:	movzx  eax,BYTE PTR [rdi]
  42da81:	add    r8d,eax
  42da84:	movzx  edi,cx
  42da87:	movzx  eax,dx
  42da8a:	shr    ecx,0x10
  42da8d:	lea    eax,[rdi+rax*1+0x1100]
  42da94:	shr    edx,0x10
  42da97:	add    eax,ecx
  42da99:	add    eax,edx
  42da9b:	add    r8d,eax
  42da9e:	mov    eax,esi
  42daa0:	rol    ax,0x8
  42daa4:	movzx  eax,ax
  42daa7:	add    eax,r8d
  42daaa:	mov    edx,eax
  42daac:	shr    edx,0x10
  42daaf:	je     42dac4 <xmlStrEqual@plt+0x29b84>
  42dab1:	nop    DWORD PTR [rax+0x0]
  42dab8:	movzx  eax,ax
  42dabb:	add    eax,edx
  42dabd:	mov    edx,eax
  42dabf:	shr    edx,0x10
  42dac2:	jne    42dab8 <xmlStrEqual@plt+0x29b78>
  42dac4:	not    eax
  42dac6:	ret    
  42dac7:	nop    WORD PTR [rax+rax*1+0x0]
  42dad0:	endbr64 
  42dad4:	sub    rsp,0x38
  42dad8:	mov    rax,QWORD PTR fs:0x28
  42dae1:	mov    QWORD PTR [rsp+0x28],rax
  42dae6:	xor    eax,eax
  42dae8:	vmovdqu xmm0,XMMWORD PTR [rdi+0x8]
  42daed:	mov    DWORD PTR [rsp+0x24],0x0
  42daf5:	vmovdqu xmm1,XMMWORD PTR [rdi+0x18]
  42dafa:	movbe  DWORD PTR [rsp+0x20],edx
  42db00:	mov    BYTE PTR [rsp+0x27],0x11
  42db05:	mov    rcx,rsp
  42db08:	vmovaps XMMWORD PTR [rsp],xmm0
  42db0d:	vmovaps XMMWORD PTR [rsp+0x10],xmm1
  42db13:	lea    r8,[rcx+0x28]
  42db17:	nop    WORD PTR [rax+rax*1+0x0]
  42db20:	movzx  edi,WORD PTR [rcx]
  42db23:	add    rcx,0x2
  42db27:	add    eax,edi
  42db29:	cmp    rcx,r8
  42db2c:	jne    42db20 <xmlStrEqual@plt+0x29be0>
  42db2e:	mov    ecx,edx
  42db30:	and    ecx,0xfffffffe
  42db33:	mov    edi,ecx
  42db35:	je     42db96 <xmlStrEqual@plt+0x29c56>
  42db37:	add    rdi,rsi
  42db3a:	nop    WORD PTR [rax+rax*1+0x0]
  42db40:	add    rsi,0x2
  42db44:	movzx  ecx,WORD PTR [rsi-0x2]
  42db48:	add    eax,ecx
  42db4a:	cmp    rdi,rsi
  42db4d:	jne    42db40 <xmlStrEqual@plt+0x29c00>
  42db4f:	and    edx,0x1
  42db52:	je     42db78 <xmlStrEqual@plt+0x29c38>
  42db54:	movzx  edx,BYTE PTR [rdi]
  42db57:	shl    edx,0x8
  42db5a:	rol    dx,0x8
  42db5e:	movzx  edx,dx
  42db61:	add    eax,edx
  42db63:	cmp    eax,0xffff
  42db68:	jbe    42db7f <xmlStrEqual@plt+0x29c3f>
  42db6a:	nop    WORD PTR [rax+rax*1+0x0]
  42db70:	movzx  edx,ax
  42db73:	shr    eax,0x10
  42db76:	add    eax,edx
  42db78:	cmp    eax,0xffff
  42db7d:	ja     42db70 <xmlStrEqual@plt+0x29c30>
  42db7f:	mov    rdx,QWORD PTR [rsp+0x28]
  42db84:	xor    rdx,QWORD PTR fs:0x28
  42db8d:	not    eax
  42db8f:	jne    42db9b <xmlStrEqual@plt+0x29c5b>
  42db91:	add    rsp,0x38
  42db95:	ret    
  42db96:	mov    rdi,rsi
  42db99:	jmp    42db4f <xmlStrEqual@plt+0x29c0f>
  42db9b:	call   403c00 <__stack_chk_fail@plt>
  42dba0:	endbr64 
  42dba4:	mov    rax,rdx
  42dba7:	cmp    ecx,0x2
  42dbaa:	je     42dbc8 <xmlStrEqual@plt+0x29c88>
  42dbac:	cmp    ecx,0xa
  42dbaf:	je     42dbd8 <xmlStrEqual@plt+0x29c98>
  42dbb1:	mov    rax,0x469e3c
  42dbb8:	cmp    DWORD PTR [rax],0x1
  42dbbb:	jg     42dbe8 <xmlStrEqual@plt+0x29ca8>
  42dbbd:	mov    eax,0xffffffff
  42dbc2:	ret    
  42dbc3:	nop    DWORD PTR [rax+rax*1+0x0]
  42dbc8:	mov    ecx,DWORD PTR [rdx+0x10]
  42dbcb:	mov    edx,DWORD PTR [rdx+0xc]
  42dbce:	jmp    42da20 <xmlStrEqual@plt+0x29ae0>
  42dbd3:	nop    DWORD PTR [rax+rax*1+0x0]
  42dbd8:	mov    edx,esi
  42dbda:	mov    rsi,rdi
  42dbdd:	mov    rdi,rax
  42dbe0:	jmp    42dad0 <xmlStrEqual@plt+0x29b90>
  42dbe5:	nop    DWORD PTR [rax]
  42dbe8:	sub    rsp,0x8
  42dbec:	xor    eax,eax
  42dbee:	lea    rsi,[rip+0x226bb]        # 4502b0 <xmlStrEqual@plt+0x4c370>
  42dbf5:	mov    edi,0x6
  42dbfa:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  42dbff:	mov    eax,0xffffffff
  42dc04:	add    rsp,0x8
  42dc08:	ret    
  42dc09:	nop    DWORD PTR [rax+0x0]
  42dc10:	endbr64 
  42dc14:	mov    QWORD PTR [rdi+0x20],rsi
  42dc18:	mov    QWORD PTR [rdi+0x28],rdx
  42dc1c:	mov    DWORD PTR [rdi+0x18],0x0
  42dc23:	mov    QWORD PTR [rdi],rdi
  42dc26:	mov    QWORD PTR [rdi+0x8],rdi
  42dc2a:	ret    
  42dc2b:	nop    DWORD PTR [rax+rax*1+0x0]
  42dc30:	endbr64 
  42dc34:	xor    edx,edx
  42dc36:	xor    esi,esi
  42dc38:	jmp    42dc10 <xmlStrEqual@plt+0x29cd0>
  42dc3d:	nop    DWORD PTR [rax]
  42dc40:	endbr64 
  42dc44:	mov    rdx,rsi
  42dc47:	xor    esi,esi
  42dc49:	jmp    42dc10 <xmlStrEqual@plt+0x29cd0>
  42dc4e:	xchg   ax,ax
  42dc50:	endbr64 
  42dc54:	push   r12
  42dc56:	mov    r12,rsi
  42dc59:	push   rbp
  42dc5a:	mov    rbp,rdi
  42dc5d:	mov    edi,0x30
  42dc62:	push   rbx
  42dc63:	call   434fe0 <xmlStrEqual@plt+0x310a0>
  42dc68:	mov    rbx,rax
  42dc6b:	mov    rdx,r12
  42dc6e:	mov    rsi,rbp
  42dc71:	mov    rdi,rax
  42dc74:	call   42dc10 <xmlStrEqual@plt+0x29cd0>
  42dc79:	mov    rax,rbx
  42dc7c:	pop    rbx
  42dc7d:	pop    rbp
  42dc7e:	pop    r12
  42dc80:	ret    
  42dc81:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  42dc8c:	nop    DWORD PTR [rax+0x0]
  42dc90:	endbr64 
  42dc94:	xor    esi,esi
  42dc96:	xor    edi,edi
  42dc98:	jmp    42dc50 <xmlStrEqual@plt+0x29d10>
  42dc9d:	nop    DWORD PTR [rax]
  42dca0:	endbr64 
  42dca4:	mov    rsi,rdi
  42dca7:	xor    edi,edi
  42dca9:	jmp    42dc50 <xmlStrEqual@plt+0x29d10>
  42dcae:	xchg   ax,ax
  42dcb0:	endbr64 
  42dcb4:	mov    rax,QWORD PTR [rdi+0x20]
  42dcb8:	ret    
  42dcb9:	nop    DWORD PTR [rax+0x0]
  42dcc0:	endbr64 
  42dcc4:	mov    rax,QWORD PTR [rdi+0x28]
  42dcc8:	ret    
  42dcc9:	nop    DWORD PTR [rax+0x0]
  42dcd0:	endbr64 
  42dcd4:	mov    QWORD PTR [rdi+0x20],rsi
  42dcd8:	ret    
  42dcd9:	nop    DWORD PTR [rax+0x0]
  42dce0:	endbr64 
  42dce4:	mov    QWORD PTR [rdi+0x28],rsi
  42dce8:	ret    
  42dce9:	nop    DWORD PTR [rax+0x0]
  42dcf0:	endbr64 
  42dcf4:	push   r14
  42dcf6:	mov    r14,rdi
  42dcf9:	mov    edi,0x18
  42dcfe:	push   r13
  42dd00:	push   r12
  42dd02:	push   rbp
  42dd03:	mov    rbp,rsi
  42dd06:	push   rbx
  42dd07:	call   434fe0 <xmlStrEqual@plt+0x310a0>
  42dd0c:	cmp    QWORD PTR [rbp+0x20],0x0
  42dd11:	mov    r12,rax
  42dd14:	mov    QWORD PTR [rax+0x10],r14
  42dd18:	mov    QWORD PTR [rax],rax
  42dd1b:	mov    QWORD PTR [rax+0x8],rax
  42dd1f:	je     42ddc0 <xmlStrEqual@plt+0x29e80>
  42dd25:	mov    eax,DWORD PTR [rbp+0x18]
  42dd28:	mov    rbx,QWORD PTR [rbp+0x8]
  42dd2c:	test   eax,eax
  42dd2e:	je     42dd90 <xmlStrEqual@plt+0x29e50>
  42dd30:	cmp    rbx,rbp
  42dd33:	je     42dd6b <xmlStrEqual@plt+0x29e2b>
  42dd35:	xor    r13d,r13d
  42dd38:	jmp    42dd54 <xmlStrEqual@plt+0x29e14>
  42dd3a:	nop    WORD PTR [rax+rax*1+0x0]
  42dd40:	test   eax,eax
  42dd42:	js     42de00 <xmlStrEqual@plt+0x29ec0>
  42dd48:	mov    rbx,QWORD PTR [rbx+0x8]
  42dd4c:	inc    r13d
  42dd4f:	cmp    rbp,rbx
  42dd52:	je     42dd63 <xmlStrEqual@plt+0x29e23>
  42dd54:	mov    rsi,QWORD PTR [rbx+0x10]
  42dd58:	mov    rdi,r14
  42dd5b:	call   QWORD PTR [rbp+0x20]
  42dd5e:	cmp    eax,0x2
  42dd61:	jne    42dd40 <xmlStrEqual@plt+0x29e00>
  42dd63:	mov    eax,DWORD PTR [rbp+0x18]
  42dd66:	cmp    eax,r13d
  42dd69:	je     42dde0 <xmlStrEqual@plt+0x29ea0>
  42dd6b:	mov    rdx,QWORD PTR [rbx]
  42dd6e:	mov    rdx,QWORD PTR [rdx+0x8]
  42dd72:	mov    rcx,QWORD PTR [rdx]
  42dd75:	mov    QWORD PTR [r12+0x8],rdx
  42dd7a:	mov    QWORD PTR [r12],rcx
  42dd7e:	mov    QWORD PTR [rcx+0x8],r12
  42dd82:	mov    QWORD PTR [rdx],r12
  42dd85:	jmp    42dda3 <xmlStrEqual@plt+0x29e63>
  42dd87:	nop    WORD PTR [rax+rax*1+0x0]
  42dd90:	mov    rdx,QWORD PTR [rbx]
  42dd93:	mov    QWORD PTR [r12+0x8],rbx
  42dd98:	mov    QWORD PTR [r12],rdx
  42dd9c:	mov    QWORD PTR [rdx+0x8],r12
  42dda0:	mov    QWORD PTR [rbx],r12
  42dda3:	pop    rbx
  42dda4:	inc    eax
  42dda6:	mov    DWORD PTR [rbp+0x18],eax
  42dda9:	pop    rbp
  42ddaa:	pop    r12
  42ddac:	pop    r13
  42ddae:	mov    eax,0x1
  42ddb3:	pop    r14
  42ddb5:	ret    
  42ddb6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42ddc0:	mov    rax,QWORD PTR [rbp+0x8]
  42ddc4:	mov    rdx,QWORD PTR [rax]
  42ddc7:	mov    QWORD PTR [r12+0x8],rax
  42ddcc:	mov    QWORD PTR [r12],rdx
  42ddd0:	mov    QWORD PTR [rdx+0x8],r12
  42ddd4:	mov    QWORD PTR [rax],r12
  42ddd7:	mov    eax,DWORD PTR [rbp+0x18]
  42ddda:	jmp    42dda3 <xmlStrEqual@plt+0x29e63>
  42dddc:	nop    DWORD PTR [rax+0x0]
  42dde0:	mov    rdx,QWORD PTR [rbp+0x0]
  42dde4:	mov    QWORD PTR [r12+0x8],rbp
  42dde9:	mov    QWORD PTR [r12],rdx
  42dded:	mov    QWORD PTR [rdx+0x8],r12
  42ddf1:	mov    QWORD PTR [rbp+0x0],r12
  42ddf5:	jmp    42dda3 <xmlStrEqual@plt+0x29e63>
  42ddf7:	nop    WORD PTR [rax+rax*1+0x0]
  42de00:	mov    rdi,r12
  42de03:	call   4037b0 <free@plt>
  42de08:	pop    rbx
  42de09:	pop    rbp
  42de0a:	pop    r12
  42de0c:	pop    r13
  42de0e:	xor    eax,eax
  42de10:	pop    r14
  42de12:	ret    
  42de13:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  42de1e:	xchg   ax,ax
  42de20:	endbr64 
  42de24:	push   r13
  42de26:	mov    r13,rsi
  42de29:	push   r12
  42de2b:	push   rbp
  42de2c:	mov    rbp,rdi
  42de2f:	push   rbx
  42de30:	sub    rsp,0x8
  42de34:	mov    rsi,QWORD PTR [rdi+0x28]
  42de38:	mov    rdi,QWORD PTR [rdi+0x20]
  42de3c:	call   42dc50 <xmlStrEqual@plt+0x29d10>
  42de41:	mov    rbx,QWORD PTR [rbp+0x8]
  42de45:	mov    r12,rax
  42de48:	cmp    rbp,rbx
  42de4b:	je     42de6b <xmlStrEqual@plt+0x29f2b>
  42de4d:	nop    DWORD PTR [rax]
  42de50:	mov    rdi,QWORD PTR [rbx+0x10]
  42de54:	call   r13
  42de57:	mov    rdi,rax
  42de5a:	mov    rsi,r12
  42de5d:	call   42dcf0 <xmlStrEqual@plt+0x29db0>
  42de62:	mov    rbx,QWORD PTR [rbx+0x8]
  42de66:	cmp    rbp,rbx
  42de69:	jne    42de50 <xmlStrEqual@plt+0x29f10>
  42de6b:	add    rsp,0x8
  42de6f:	pop    rbx
  42de70:	pop    rbp
  42de71:	mov    rax,r12
  42de74:	pop    r12
  42de76:	pop    r13
  42de78:	ret    
  42de79:	nop    DWORD PTR [rax+0x0]
  42de80:	endbr64 
  42de84:	cmp    QWORD PTR [rsi+0x20],0x0
  42de89:	je     42de90 <xmlStrEqual@plt+0x29f50>
  42de8b:	xor    eax,eax
  42de8d:	ret    
  42de8e:	xchg   ax,ax
  42de90:	push   rbp
  42de91:	mov    rbp,rdi
  42de94:	mov    edi,0x18
  42de99:	push   rbx
  42de9a:	mov    rbx,rsi
  42de9d:	sub    rsp,0x8
  42dea1:	call   434fe0 <xmlStrEqual@plt+0x310a0>
  42dea6:	mov    QWORD PTR [rax],rax
  42dea9:	mov    QWORD PTR [rax+0x10],rbp
  42dead:	mov    rdx,QWORD PTR [rbx]
  42deb0:	mov    QWORD PTR [rax+0x8],rbx
  42deb4:	mov    QWORD PTR [rax],rdx
  42deb7:	mov    QWORD PTR [rdx+0x8],rax
  42debb:	inc    DWORD PTR [rbx+0x18]
  42debe:	mov    QWORD PTR [rbx],rax
  42dec1:	add    rsp,0x8
  42dec5:	mov    eax,0x1
  42deca:	pop    rbx
  42decb:	pop    rbp
  42decc:	ret    
  42decd:	nop    DWORD PTR [rax]
  42ded0:	endbr64 
  42ded4:	mov    eax,DWORD PTR [rsi+0x18]
  42ded7:	test   eax,eax
  42ded9:	je     42df30 <xmlStrEqual@plt+0x29ff0>
  42dedb:	push   r12
  42dedd:	mov    r12,rdi
  42dee0:	push   rbp
  42dee1:	mov    rbp,rsi
  42dee4:	push   rbx
  42dee5:	mov    rbx,QWORD PTR [rsi+0x8]
  42dee9:	cmp    rsi,rbx
  42deec:	jne    42df02 <xmlStrEqual@plt+0x29fc2>
  42deee:	jmp    42df20 <xmlStrEqual@plt+0x29fe0>
  42def0:	mov    rdi,r12
  42def3:	call   rax
  42def5:	test   eax,eax
  42def7:	je     42df14 <xmlStrEqual@plt+0x29fd4>
  42def9:	mov    rbx,QWORD PTR [rbx+0x8]
  42defd:	cmp    rbp,rbx
  42df00:	je     42df20 <xmlStrEqual@plt+0x29fe0>
  42df02:	mov    rax,QWORD PTR [rbp+0x20]
  42df06:	mov    rsi,QWORD PTR [rbx+0x10]
  42df0a:	test   rax,rax
  42df0d:	jne    42def0 <xmlStrEqual@plt+0x29fb0>
  42df0f:	cmp    rsi,r12
  42df12:	jne    42def9 <xmlStrEqual@plt+0x29fb9>
  42df14:	pop    rbx
  42df15:	pop    rbp
  42df16:	mov    eax,0x1
  42df1b:	pop    r12
  42df1d:	ret    
  42df1e:	xchg   ax,ax
  42df20:	pop    rbx
  42df21:	pop    rbp
  42df22:	xor    eax,eax
  42df24:	pop    r12
  42df26:	ret    
  42df27:	nop    WORD PTR [rax+rax*1+0x0]
  42df30:	xor    eax,eax
  42df32:	ret    
  42df33:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  42df3e:	xchg   ax,ax
  42df40:	endbr64 
  42df44:	mov    eax,DWORD PTR [rsi+0x18]
  42df47:	test   eax,eax
  42df49:	je     42dfb0 <xmlStrEqual@plt+0x2a070>
  42df4b:	push   r13
  42df4d:	mov    r13,rdi
  42df50:	push   r12
  42df52:	mov    r12,rsi
  42df55:	push   rbp
  42df56:	mov    rbp,rdx
  42df59:	push   rbx
  42df5a:	sub    rsp,0x8
  42df5e:	mov    rbx,QWORD PTR [rsi+0x8]
  42df62:	cmp    rsi,rbx
  42df65:	jne    42df82 <xmlStrEqual@plt+0x2a042>
  42df67:	jmp    42dfa0 <xmlStrEqual@plt+0x2a060>
  42df69:	nop    DWORD PTR [rax+0x0]
  42df70:	mov    rdi,r13
  42df73:	call   rbp
  42df75:	test   eax,eax
  42df77:	je     42df90 <xmlStrEqual@plt+0x2a050>
  42df79:	mov    rbx,QWORD PTR [rbx+0x8]
  42df7d:	cmp    r12,rbx
  42df80:	je     42dfa0 <xmlStrEqual@plt+0x2a060>
  42df82:	mov    rsi,QWORD PTR [rbx+0x10]
  42df86:	test   rbp,rbp
  42df89:	jne    42df70 <xmlStrEqual@plt+0x2a030>
  42df8b:	cmp    rsi,r13
  42df8e:	jne    42df79 <xmlStrEqual@plt+0x2a039>
  42df90:	add    rsp,0x8
  42df94:	pop    rbx
  42df95:	pop    rbp
  42df96:	pop    r12
  42df98:	mov    eax,0x1
  42df9d:	pop    r13
  42df9f:	ret    
  42dfa0:	add    rsp,0x8
  42dfa4:	pop    rbx
  42dfa5:	pop    rbp
  42dfa6:	pop    r12
  42dfa8:	xor    eax,eax
  42dfaa:	pop    r13
  42dfac:	ret    
  42dfad:	nop    DWORD PTR [rax]
  42dfb0:	xor    eax,eax
  42dfb2:	ret    
  42dfb3:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  42dfbe:	xchg   ax,ax
  42dfc0:	endbr64 
  42dfc4:	push   r15
  42dfc6:	push   r14
  42dfc8:	push   r13
  42dfca:	push   r12
  42dfcc:	push   rbp
  42dfcd:	push   rbx
  42dfce:	sub    rsp,0x8
  42dfd2:	mov    rbx,QWORD PTR [rdi+0x8]
  42dfd6:	cmp    rdi,rbx
  42dfd9:	je     42e034 <xmlStrEqual@plt+0x2a0f4>
  42dfdb:	mov    r12d,edx
  42dfde:	mov    r14,rsi
  42dfe1:	mov    r13,rdi
  42dfe4:	xor    ebp,ebp
  42dfe6:	lea    r15,[rip+0x1dcd8]        # 44bcc5 <xmlStrEqual@plt+0x47d85>
  42dfed:	jmp    42e00a <xmlStrEqual@plt+0x2a0ca>
  42dfef:	nop
  42dff0:	mov    rax,0x469e3c
  42dff7:	mov    eax,DWORD PTR [rax]
  42dff9:	add    eax,0x4
  42dffc:	cmp    eax,r12d
  42dfff:	jge    42e012 <xmlStrEqual@plt+0x2a0d2>
  42e001:	mov    rbx,QWORD PTR [rbx+0x8]
  42e005:	cmp    r13,rbx
  42e008:	je     42e034 <xmlStrEqual@plt+0x2a0f4>
  42e00a:	inc    ebp
  42e00c:	cmp    r12d,0x4
  42e010:	jg     42dff0 <xmlStrEqual@plt+0x2a0b0>
  42e012:	mov    rdi,QWORD PTR [rbx+0x10]
  42e016:	call   r14
  42e019:	mov    rcx,rax
  42e01c:	mov    edx,ebp
  42e01e:	mov    rsi,r15
  42e021:	mov    edi,r12d
  42e024:	xor    eax,eax
  42e026:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  42e02b:	mov    rbx,QWORD PTR [rbx+0x8]
  42e02f:	cmp    r13,rbx
  42e032:	jne    42e00a <xmlStrEqual@plt+0x2a0ca>
  42e034:	add    rsp,0x8
  42e038:	pop    rbx
  42e039:	pop    rbp
  42e03a:	pop    r12
  42e03c:	pop    r13
  42e03e:	pop    r14
  42e040:	pop    r15
  42e042:	ret    
  42e043:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  42e04e:	xchg   ax,ax
  42e050:	endbr64 
  42e054:	test   rdi,rdi
  42e057:	je     42e080 <xmlStrEqual@plt+0x2a140>
  42e059:	test   rsi,rsi
  42e05c:	je     42e080 <xmlStrEqual@plt+0x2a140>
  42e05e:	mov    rdx,QWORD PTR [rdi]
  42e061:	mov    rax,QWORD PTR [rdi+0x8]
  42e065:	push   rbx
  42e066:	mov    QWORD PTR [rdx+0x8],rax
  42e06a:	mov    QWORD PTR [rax],rdx
  42e06d:	mov    rbx,rsi
  42e070:	call   4037b0 <free@plt>
  42e075:	dec    DWORD PTR [rbx+0x18]
  42e078:	pop    rbx
  42e079:	ret    
  42e07a:	nop    WORD PTR [rax+rax*1+0x0]
  42e080:	ret    
  42e081:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  42e08c:	nop    DWORD PTR [rax+0x0]
  42e090:	endbr64 
  42e094:	push   rbp
  42e095:	xor    ebp,ebp
  42e097:	push   rbx
  42e098:	sub    rsp,0x8
  42e09c:	mov    eax,DWORD PTR [rdi+0x18]
  42e09f:	test   eax,eax
  42e0a1:	je     42e0c4 <xmlStrEqual@plt+0x2a184>
  42e0a3:	mov    rbx,rdi
  42e0a6:	mov    rdi,QWORD PTR [rdi+0x8]
  42e0aa:	mov    rdx,QWORD PTR [rdi]
  42e0ad:	mov    rax,QWORD PTR [rdi+0x8]
  42e0b1:	mov    rbp,QWORD PTR [rdi+0x10]
  42e0b5:	mov    QWORD PTR [rdx+0x8],rax
  42e0b9:	mov    QWORD PTR [rax],rdx
  42e0bc:	call   4037b0 <free@plt>
  42e0c1:	dec    DWORD PTR [rbx+0x18]
  42e0c4:	add    rsp,0x8
  42e0c8:	pop    rbx
  42e0c9:	mov    rax,rbp
  42e0cc:	pop    rbp
  42e0cd:	ret    
  42e0ce:	xchg   ax,ax
  42e0d0:	endbr64 
  42e0d4:	push   rbp
  42e0d5:	xor    ebp,ebp
  42e0d7:	push   rbx
  42e0d8:	sub    rsp,0x8
  42e0dc:	mov    eax,DWORD PTR [rdi+0x18]
  42e0df:	test   eax,eax
  42e0e1:	je     42e103 <xmlStrEqual@plt+0x2a1c3>
  42e0e3:	mov    rbx,rdi
  42e0e6:	mov    rdi,QWORD PTR [rdi]
  42e0e9:	mov    rdx,QWORD PTR [rdi]
  42e0ec:	mov    rax,QWORD PTR [rdi+0x8]
  42e0f0:	mov    rbp,QWORD PTR [rdi+0x10]
  42e0f4:	mov    QWORD PTR [rdx+0x8],rax
  42e0f8:	mov    QWORD PTR [rax],rdx
  42e0fb:	call   4037b0 <free@plt>
  42e100:	dec    DWORD PTR [rbx+0x18]
  42e103:	add    rsp,0x8
  42e107:	pop    rbx
  42e108:	mov    rax,rbp
  42e10b:	pop    rbp
  42e10c:	ret    
  42e10d:	nop    DWORD PTR [rax]
  42e110:	endbr64 
  42e114:	test   rdi,rdi
  42e117:	je     42e160 <xmlStrEqual@plt+0x2a220>
  42e119:	test   rsi,rsi
  42e11c:	je     42e160 <xmlStrEqual@plt+0x2a220>
  42e11e:	push   rbp
  42e11f:	mov    rbp,rsi
  42e122:	push   rbx
  42e123:	mov    rbx,rdi
  42e126:	sub    rsp,0x8
  42e12a:	mov    rax,QWORD PTR [rdi+0x8]
  42e12e:	mov    rdx,QWORD PTR [rdi]
  42e131:	mov    QWORD PTR [rdx+0x8],rax
  42e135:	mov    QWORD PTR [rax],rdx
  42e138:	mov    rax,QWORD PTR [rsi+0x28]
  42e13c:	test   rax,rax
  42e13f:	je     42e147 <xmlStrEqual@plt+0x2a207>
  42e141:	mov    rdi,QWORD PTR [rdi+0x10]
  42e145:	call   rax
  42e147:	mov    rdi,rbx
  42e14a:	call   4037b0 <free@plt>
  42e14f:	dec    DWORD PTR [rbp+0x18]
  42e152:	add    rsp,0x8
  42e156:	pop    rbx
  42e157:	pop    rbp
  42e158:	ret    
  42e159:	nop    DWORD PTR [rax+0x0]
  42e160:	ret    
  42e161:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  42e16c:	nop    DWORD PTR [rax+0x0]
  42e170:	endbr64 
  42e174:	test   rsi,rsi
  42e177:	je     42e1d8 <xmlStrEqual@plt+0x2a298>
  42e179:	mov    eax,DWORD PTR [rsi+0x18]
  42e17c:	test   eax,eax
  42e17e:	je     42e1d8 <xmlStrEqual@plt+0x2a298>
  42e180:	push   r12
  42e182:	mov    r12,rdi
  42e185:	push   rbp
  42e186:	mov    rbp,rsi
  42e189:	push   rbx
  42e18a:	mov    rax,QWORD PTR [rsi+0x20]
  42e18e:	mov    rbx,QWORD PTR [rsi+0x8]
  42e192:	test   rax,rax
  42e195:	je     42e1e0 <xmlStrEqual@plt+0x2a2a0>
  42e197:	cmp    rbx,rsi
  42e19a:	jne    42e1ad <xmlStrEqual@plt+0x2a26d>
  42e19c:	jmp    42e1d0 <xmlStrEqual@plt+0x2a290>
  42e19e:	xchg   ax,ax
  42e1a0:	mov    rbx,QWORD PTR [rbx+0x8]
  42e1a4:	cmp    rbp,rbx
  42e1a7:	je     42e1d0 <xmlStrEqual@plt+0x2a290>
  42e1a9:	mov    rax,QWORD PTR [rbp+0x20]
  42e1ad:	mov    rsi,QWORD PTR [rbx+0x10]
  42e1b1:	mov    rdi,r12
  42e1b4:	call   rax
  42e1b6:	test   eax,eax
  42e1b8:	jne    42e1a0 <xmlStrEqual@plt+0x2a260>
  42e1ba:	mov    rdi,rbx
  42e1bd:	pop    rbx
  42e1be:	mov    rsi,rbp
  42e1c1:	pop    rbp
  42e1c2:	pop    r12
  42e1c4:	jmp    42e110 <xmlStrEqual@plt+0x2a1d0>
  42e1c9:	nop    DWORD PTR [rax+0x0]
  42e1d0:	pop    rbx
  42e1d1:	pop    rbp
  42e1d2:	pop    r12
  42e1d4:	ret    
  42e1d5:	nop    DWORD PTR [rax]
  42e1d8:	ret    
  42e1d9:	nop    DWORD PTR [rax+0x0]
  42e1e0:	cmp    rbx,rsi
  42e1e3:	jne    42e1f9 <xmlStrEqual@plt+0x2a2b9>
  42e1e5:	jmp    42e1d0 <xmlStrEqual@plt+0x2a290>
  42e1e7:	nop    WORD PTR [rax+rax*1+0x0]
  42e1f0:	mov    rbx,QWORD PTR [rbx+0x8]
  42e1f4:	cmp    rbp,rbx
  42e1f7:	je     42e1d0 <xmlStrEqual@plt+0x2a290>
  42e1f9:	cmp    QWORD PTR [rbx+0x10],r12
  42e1fd:	jne    42e1f0 <xmlStrEqual@plt+0x2a2b0>
  42e1ff:	jmp    42e1ba <xmlStrEqual@plt+0x2a27a>
  42e201:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  42e20c:	nop    DWORD PTR [rax+0x0]
  42e210:	endbr64 
  42e214:	test   rsi,rsi
  42e217:	je     42e250 <xmlStrEqual@plt+0x2a310>
  42e219:	mov    eax,DWORD PTR [rsi+0x18]
  42e21c:	test   eax,eax
  42e21e:	je     42e250 <xmlStrEqual@plt+0x2a310>
  42e220:	mov    rax,QWORD PTR [rsi+0x8]
  42e224:	cmp    rsi,rax
  42e227:	je     42e250 <xmlStrEqual@plt+0x2a310>
  42e229:	cmp    rdi,QWORD PTR [rax+0x10]
  42e22d:	jne    42e246 <xmlStrEqual@plt+0x2a306>
  42e22f:	mov    rdi,rax
  42e232:	jmp    42e110 <xmlStrEqual@plt+0x2a1d0>
  42e237:	nop    WORD PTR [rax+rax*1+0x0]
  42e240:	cmp    QWORD PTR [rax+0x10],rdi
  42e244:	je     42e22f <xmlStrEqual@plt+0x2a2ef>
  42e246:	mov    rax,QWORD PTR [rax+0x8]
  42e24a:	cmp    rsi,rax
  42e24d:	jne    42e240 <xmlStrEqual@plt+0x2a300>
  42e24f:	ret    
  42e250:	ret    
  42e251:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  42e25c:	nop    DWORD PTR [rax+0x0]
  42e260:	endbr64 
  42e264:	test   rdi,rdi
  42e267:	je     42e2a8 <xmlStrEqual@plt+0x2a368>
  42e269:	mov    eax,DWORD PTR [rdi+0x18]
  42e26c:	test   eax,eax
  42e26e:	je     42e2a8 <xmlStrEqual@plt+0x2a368>
  42e270:	push   rbp
  42e271:	push   rbx
  42e272:	mov    rbx,rdi
  42e275:	sub    rsp,0x8
  42e279:	mov    rdi,QWORD PTR [rdi+0x8]
  42e27d:	cmp    rbx,rdi
  42e280:	je     42e29c <xmlStrEqual@plt+0x2a35c>
  42e282:	nop    WORD PTR [rax+rax*1+0x0]
  42e288:	mov    rbp,QWORD PTR [rdi+0x8]
  42e28c:	mov    rsi,rbx
  42e28f:	call   42e110 <xmlStrEqual@plt+0x2a1d0>
  42e294:	mov    rdi,rbp
  42e297:	cmp    rbx,rbp
  42e29a:	jne    42e288 <xmlStrEqual@plt+0x2a348>
  42e29c:	add    rsp,0x8
  42e2a0:	pop    rbx
  42e2a1:	pop    rbp
  42e2a2:	ret    
  42e2a3:	nop    DWORD PTR [rax+rax*1+0x0]
  42e2a8:	ret    
  42e2a9:	nop    DWORD PTR [rax+0x0]
  42e2b0:	endbr64 
  42e2b4:	test   rdi,rdi
  42e2b7:	je     42e2d0 <xmlStrEqual@plt+0x2a390>
  42e2b9:	push   rbx
  42e2ba:	mov    rbx,rdi
  42e2bd:	call   42e260 <xmlStrEqual@plt+0x2a320>
  42e2c2:	mov    rdi,rbx
  42e2c5:	pop    rbx
  42e2c6:	jmp    4037b0 <free@plt>
  42e2cb:	nop    DWORD PTR [rax+rax*1+0x0]
  42e2d0:	ret    
  42e2d1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42e2db:	nop    DWORD PTR [rax+rax*1+0x0]
  42e2e0:	endbr64 
  42e2e4:	push   r15
  42e2e6:	push   r14
  42e2e8:	push   r13
  42e2ea:	push   r12
  42e2ec:	mov    r12d,0x1
  42e2f2:	push   rbp
  42e2f3:	push   rbx
  42e2f4:	sub    rsp,0x8
  42e2f8:	test   dil,dil
  42e2fb:	je     42e34e <xmlStrEqual@plt+0x2a40e>
  42e2fd:	mov    rbx,r8
  42e300:	mov    r15,rcx
  42e303:	mov    r13,rdx
  42e306:	mov    rbp,rsi
  42e309:	cmp    dil,0x1
  42e30d:	jne    42e360 <xmlStrEqual@plt+0x2a420>
  42e30f:	mov    edi,0x4
  42e314:	call   41c950 <xmlStrEqual@plt+0x18a10>
  42e319:	mov    DWORD PTR [rbx+0x10],0x0
  42e320:	vpxor  xmm0,xmm0,xmm0
  42e324:	mov    rdi,rbp
  42e327:	vmovups XMMWORD PTR [rbx],xmm0
  42e32b:	mov    r14,rax
  42e32e:	call   403970 <strlen@plt>
  42e333:	mov    rdx,rax
  42e336:	mov    r9,rbx
  42e339:	mov    r8,r15
  42e33c:	mov    rcx,r13
  42e33f:	mov    rsi,rbp
  42e342:	mov    rdi,r14
  42e345:	call   41cf50 <xmlStrEqual@plt+0x19010>
  42e34a:	test   eax,eax
  42e34c:	jne    42e378 <xmlStrEqual@plt+0x2a438>
  42e34e:	add    rsp,0x8
  42e352:	pop    rbx
  42e353:	pop    rbp
  42e354:	mov    eax,r12d
  42e357:	pop    r12
  42e359:	pop    r13
  42e35b:	pop    r14
  42e35d:	pop    r15
  42e35f:	ret    
  42e360:	mov    rax,0x469e3c
  42e367:	cmp    DWORD PTR [rax],0x1
  42e36a:	jg     42e3a0 <xmlStrEqual@plt+0x2a460>
  42e36c:	xor    r12d,r12d
  42e36f:	jmp    42e34e <xmlStrEqual@plt+0x2a40e>
  42e371:	nop    DWORD PTR [rax+0x0]
  42e378:	mov    rax,0x469e3c
  42e37f:	cmp    DWORD PTR [rax],0x1
  42e382:	jle    42e36c <xmlStrEqual@plt+0x2a42c>
  42e384:	lea    rsi,[rip+0x21f75]        # 450300 <xmlStrEqual@plt+0x4c3c0>
  42e38b:	mov    edi,0x6
  42e390:	xor    eax,eax
  42e392:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  42e397:	jmp    42e36c <xmlStrEqual@plt+0x2a42c>
  42e399:	nop    DWORD PTR [rax+0x0]
  42e3a0:	movzx  edx,dil
  42e3a4:	lea    rsi,[rip+0x21f25]        # 4502d0 <xmlStrEqual@plt+0x4c390>
  42e3ab:	mov    edi,0x6
  42e3b0:	xor    eax,eax
  42e3b2:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  42e3b7:	xor    r12d,r12d
  42e3ba:	jmp    42e34e <xmlStrEqual@plt+0x2a40e>
  42e3bc:	nop    DWORD PTR [rax+0x0]
  42e3c0:	endbr64 
  42e3c4:	push   r14
  42e3c6:	push   r13
  42e3c8:	push   rbp
  42e3c9:	push   rbx
  42e3ca:	sub    rsp,0x18
  42e3ce:	cmp    dil,0x1
  42e3d2:	je     42e410 <xmlStrEqual@plt+0x2a4d0>
  42e3d4:	mov    rax,0x469e3c
  42e3db:	cmp    DWORD PTR [rax],0x1
  42e3de:	jg     42e3f0 <xmlStrEqual@plt+0x2a4b0>
  42e3e0:	xor    ebx,ebx
  42e3e2:	add    rsp,0x18
  42e3e6:	mov    eax,ebx
  42e3e8:	pop    rbx
  42e3e9:	pop    rbp
  42e3ea:	pop    r13
  42e3ec:	pop    r14
  42e3ee:	ret    
  42e3ef:	nop
  42e3f0:	movzx  edx,dil
  42e3f4:	lea    rsi,[rip+0x21ed5]        # 4502d0 <xmlStrEqual@plt+0x4c390>
  42e3fb:	mov    edi,0x6
  42e400:	xor    eax,eax
  42e402:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  42e407:	jmp    42e3e0 <xmlStrEqual@plt+0x2a4a0>
  42e409:	nop    DWORD PTR [rax+0x0]
  42e410:	mov    edi,0x14
  42e415:	mov    QWORD PTR [rsp+0x8],rcx
  42e41a:	mov    QWORD PTR [rsp],rdx
  42e41e:	mov    rbx,rsi
  42e421:	mov    rbp,r8
  42e424:	call   435000 <xmlStrEqual@plt+0x310c0>
  42e429:	test   rax,rax
  42e42c:	mov    r13,rax
  42e42f:	mov    rdx,QWORD PTR [rsp]
  42e433:	mov    rcx,QWORD PTR [rsp+0x8]
  42e438:	je     42e50a <xmlStrEqual@plt+0x2a5ca>
  42e43e:	vmovdqu xmm1,XMMWORD PTR [rbp+0x0]
  42e443:	vpxor  xmm0,xmm0,xmm0
  42e447:	vmovups XMMWORD PTR [rax],xmm1
  42e44b:	mov    eax,DWORD PTR [rbp+0x10]
  42e44e:	mov    edi,0x4
  42e453:	mov    DWORD PTR [r13+0x10],eax
  42e457:	mov    DWORD PTR [rbp+0x10],0x0
  42e45e:	vmovups XMMWORD PTR [rbp+0x0],xmm0
  42e463:	mov    QWORD PTR [rsp+0x8],rcx
  42e468:	mov    QWORD PTR [rsp],rdx
  42e46c:	call   41c950 <xmlStrEqual@plt+0x18a10>
  42e471:	mov    rdi,rbx
  42e474:	mov    r14,rax
  42e477:	call   403970 <strlen@plt>
  42e47c:	mov    rcx,QWORD PTR [rsp+0x8]
  42e481:	mov    rdx,QWORD PTR [rsp]
  42e485:	mov    r8,rcx
  42e488:	mov    rsi,rbx
  42e48b:	mov    rcx,rdx
  42e48e:	mov    r9,rbp
  42e491:	mov    rdx,rax
  42e494:	mov    rdi,r14
  42e497:	call   41cf50 <xmlStrEqual@plt+0x19010>
  42e49c:	mov    ebx,eax
  42e49e:	test   eax,eax
  42e4a0:	jne    42e4d0 <xmlStrEqual@plt+0x2a590>
  42e4a2:	mov    rdi,rbp
  42e4a5:	mov    edx,0x14
  42e4aa:	mov    rsi,r13
  42e4ad:	call   4039b0 <strncmp@plt>
  42e4b2:	mov    rdi,r13
  42e4b5:	test   eax,eax
  42e4b7:	jne    42e500 <xmlStrEqual@plt+0x2a5c0>
  42e4b9:	call   4037b0 <free@plt>
  42e4be:	mov    ebx,0x1
  42e4c3:	jmp    42e3e2 <xmlStrEqual@plt+0x2a4a2>
  42e4c8:	nop    DWORD PTR [rax+rax*1+0x0]
  42e4d0:	mov    rax,0x469e3c
  42e4d7:	cmp    DWORD PTR [rax],0x1
  42e4da:	jle    42e3e0 <xmlStrEqual@plt+0x2a4a0>
  42e4e0:	lea    rsi,[rip+0x21e71]        # 450358 <xmlStrEqual@plt+0x4c418>
  42e4e7:	mov    edi,0x6
  42e4ec:	xor    eax,eax
  42e4ee:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  42e4f3:	xor    ebx,ebx
  42e4f5:	jmp    42e3e2 <xmlStrEqual@plt+0x2a4a2>
  42e4fa:	nop    WORD PTR [rax+rax*1+0x0]
  42e500:	call   4037b0 <free@plt>
  42e505:	jmp    42e3e2 <xmlStrEqual@plt+0x2a4a2>
  42e50a:	lea    rsi,[rip+0x21e1f]        # 450330 <xmlStrEqual@plt+0x4c3f0>
  42e511:	mov    edi,0x2
  42e516:	xor    eax,eax
  42e518:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  42e51d:	mov    ebx,0xfffffffc
  42e522:	jmp    42e3e2 <xmlStrEqual@plt+0x2a4a2>
  42e527:	nop    WORD PTR [rax+rax*1+0x0]
  42e530:	endbr64 
  42e534:	push   rbx
  42e535:	mov    edi,0x10
  42e53a:	call   434fe0 <xmlStrEqual@plt+0x310a0>
  42e53f:	mov    esi,0x28
  42e544:	mov    edi,0x1
  42e549:	mov    rbx,rax
  42e54c:	call   403a80 <calloc@plt>
  42e551:	mov    QWORD PTR [rbx],rax
  42e554:	mov    rax,rbx
  42e557:	pop    rbx
  42e558:	ret    
  42e559:	nop    DWORD PTR [rax+0x0]
  42e560:	endbr64 
  42e564:	push   rbp
  42e565:	mov    rbp,rdi
  42e568:	mov    edi,0x10
  42e56d:	push   rbx
  42e56e:	sub    rsp,0x8
  42e572:	call   434fe0 <xmlStrEqual@plt+0x310a0>
  42e577:	mov    esi,0x28
  42e57c:	mov    edi,0x1
  42e581:	mov    rbx,rax
  42e584:	call   403a80 <calloc@plt>
  42e589:	mov    QWORD PTR [rbx],rax
  42e58c:	mov    QWORD PTR [rbx+0x8],rbp
  42e590:	add    rsp,0x8
  42e594:	mov    rax,rbx
  42e597:	pop    rbx
  42e598:	pop    rbp
  42e599:	ret    
  42e59a:	nop    WORD PTR [rax+rax*1+0x0]
  42e5a0:	endbr64 
  42e5a4:	push   r15
  42e5a6:	push   r14
  42e5a8:	mov    r14,rsi
  42e5ab:	push   r13
  42e5ad:	push   r12
  42e5af:	push   rbp
  42e5b0:	push   rbx
  42e5b1:	sub    rsp,0x28
  42e5b5:	mov    rbx,QWORD PTR [rdi]
  42e5b8:	mov    QWORD PTR [rsp],rdi
  42e5bc:	mov    eax,DWORD PTR [rbx]
  42e5be:	mov    edi,DWORD PTR [rbx+0xc]
  42e5c1:	mov    QWORD PTR [rsp+0x8],rdx
  42e5c6:	mov    DWORD PTR [rsp+0x10],eax
  42e5ca:	cmp    DWORD PTR [rbx+0x8],edi
  42e5cd:	jae    42e6e0 <xmlStrEqual@plt+0x2a7a0>
  42e5d3:	mov    r12,QWORD PTR [rbx+0x10]
  42e5d7:	lea    ebp,[rax-0x1]
  42e5da:	mov    rax,r14
  42e5dd:	mov    edx,r14d
  42e5e0:	shr    rax,0x21
  42e5e4:	shl    edx,0xb
  42e5e7:	xor    edx,eax
  42e5e9:	xor    edx,r14d
  42e5ec:	mov    esi,edx
  42e5ee:	and    esi,ebp
  42e5f0:	mov    ecx,esi
  42e5f2:	shr    ecx,0x4
  42e5f5:	lea    eax,[rsi+rsi*1]
  42e5f8:	mov    r8d,DWORD PTR [r12+rcx*4]
  42e5fc:	and    eax,0x1e
  42e5ff:	lea    rdi,[rcx*4+0x0]
  42e607:	shrx   r8d,r8d,eax
  42e60c:	test   r8b,0x2
  42e610:	jne    42e890 <xmlStrEqual@plt+0x2a950>
  42e616:	mov    ecx,edx
  42e618:	shr    ecx,0x3
  42e61b:	shl    edx,0x3
  42e61e:	xor    edx,ecx
  42e620:	mov    ecx,edx
  42e622:	or     ecx,0x1
  42e625:	and    ecx,ebp
  42e627:	mov    r9d,DWORD PTR [rsp+0x10]
  42e62c:	mov    edx,esi
  42e62e:	jmp    42e66b <xmlStrEqual@plt+0x2a72b>
  42e630:	mov    rdi,QWORD PTR [rbx+0x18]
  42e634:	mov    eax,edx
  42e636:	lea    r8,[rax*8+0x0]
  42e63e:	cmp    r14,QWORD PTR [rdi+rax*8]
  42e642:	je     42ec90 <xmlStrEqual@plt+0x2ad50>
  42e648:	add    edx,ecx
  42e64a:	and    edx,ebp
  42e64c:	cmp    esi,edx
  42e64e:	je     42e67c <xmlStrEqual@plt+0x2a73c>
  42e650:	mov    edi,edx
  42e652:	lea    eax,[rdx+rdx*1]
  42e655:	shr    edi,0x4
  42e658:	and    eax,0x1e
  42e65b:	shrx   r8d,DWORD PTR [r12+rdi*4],eax
  42e661:	test   r8b,0x2
  42e665:	jne    42ebb0 <xmlStrEqual@plt+0x2ac70>
  42e66b:	and    r8d,0x1
  42e66f:	je     42e630 <xmlStrEqual@plt+0x2a6f0>
  42e671:	mov    r9d,edx
  42e674:	add    edx,ecx
  42e676:	and    edx,ebp
  42e678:	cmp    esi,edx
  42e67a:	jne    42e650 <xmlStrEqual@plt+0x2a710>
  42e67c:	cmp    r9d,DWORD PTR [rsp+0x10]
  42e681:	je     42ec81 <xmlStrEqual@plt+0x2ad41>
  42e687:	mov    r8d,r9d
  42e68a:	shl    r8,0x3
  42e68e:	mov    edx,r9d
  42e691:	shr    edx,0x4
  42e694:	lea    rdi,[rdx*4+0x0]
  42e69c:	lea    eax,[r9+r9*1]
  42e6a0:	mov    edx,DWORD PTR [r12+rdx*4]
  42e6a4:	and    eax,0x1e
  42e6a7:	shrx   edx,edx,eax
  42e6ac:	test   dl,0x2
  42e6af:	jne    42e88d <xmlStrEqual@plt+0x2a94d>
  42e6b5:	and    edx,0x1
  42e6b8:	je     42e8ba <xmlStrEqual@plt+0x2a97a>
  42e6be:	mov    rdx,QWORD PTR [rbx+0x18]
  42e6c2:	mov    QWORD PTR [rdx+r8*1],r14
  42e6c6:	mov    edx,0x3
  42e6cb:	shlx   rax,rdx,rax
  42e6d0:	add    rdi,QWORD PTR [rbx+0x10]
  42e6d4:	not    eax
  42e6d6:	and    DWORD PTR [rdi],eax
  42e6d8:	inc    DWORD PTR [rbx+0x4]
  42e6db:	jmp    42e8ba <xmlStrEqual@plt+0x2a97a>
  42e6e0:	mov    eax,DWORD PTR [rbx+0x4]
  42e6e3:	mov    edi,DWORD PTR [rsp+0x10]
  42e6e7:	lea    edx,[rax+rax*1]
  42e6ea:	cmp    edx,edi
  42e6ec:	jae    42e8e0 <xmlStrEqual@plt+0x2a9a0>
  42e6f2:	lea    ebp,[rdi-0x2]
  42e6f5:	mov    edx,ebp
  42e6f7:	shr    edx,1
  42e6f9:	or     ebp,edx
  42e6fb:	mov    edx,ebp
  42e6fd:	shr    edx,0x2
  42e700:	or     ebp,edx
  42e702:	mov    edx,ebp
  42e704:	shr    edx,0x4
  42e707:	or     ebp,edx
  42e709:	mov    edx,ebp
  42e70b:	shr    edx,0x8
  42e70e:	or     ebp,edx
  42e710:	mov    edx,ebp
  42e712:	shr    edx,0x10
  42e715:	or     ebp,edx
  42e717:	lea    ecx,[rbp+0x1]
  42e71a:	cmp    ecx,0x3
  42e71d:	ja     42ea80 <xmlStrEqual@plt+0x2ab40>
  42e723:	cmp    eax,0x2
  42e726:	ja     42ebe0 <xmlStrEqual@plt+0x2aca0>
  42e72c:	mov    DWORD PTR [rsp+0x14],0x3
  42e734:	mov    DWORD PTR [rsp+0x10],0x4
  42e73c:	mov    ebp,0x3
  42e741:	mov    r13d,0x4
  42e747:	mov    rdi,r13
  42e74a:	call   403cd0 <malloc@plt>
  42e74f:	mov    rdi,rax
  42e752:	mov    rdx,r13
  42e755:	mov    esi,0xaa
  42e75a:	mov    r12,rax
  42e75d:	call   4039f0 <memset@plt>
  42e762:	mov    eax,DWORD PTR [rsp+0x10]
  42e766:	cmp    DWORD PTR [rbx],eax
  42e768:	jb     42ec10 <xmlStrEqual@plt+0x2acd0>
  42e76e:	xor    r10d,r10d
  42e771:	mov    QWORD PTR [rsp+0x18],r14
  42e776:	jmp    42e78f <xmlStrEqual@plt+0x2a84f>
  42e778:	nop    DWORD PTR [rax+rax*1+0x0]
  42e780:	mov    r11d,DWORD PTR [rbx]
  42e783:	inc    r10d
  42e786:	cmp    r10d,r11d
  42e789:	je     42eb40 <xmlStrEqual@plt+0x2ac00>
  42e78f:	mov    eax,r10d
  42e792:	mov    rdi,QWORD PTR [rbx+0x10]
  42e796:	shr    eax,0x4
  42e799:	lea    rcx,[rdi+rax*4]
  42e79d:	mov    edx,DWORD PTR [rcx]
  42e79f:	lea    eax,[r10+r10*1]
  42e7a3:	and    eax,0x1e
  42e7a6:	shrx   esi,edx,eax
  42e7ab:	and    esi,0x3
  42e7ae:	jne    42e780 <xmlStrEqual@plt+0x2a840>
  42e7b0:	mov    r8,QWORD PTR [rbx+0x18]
  42e7b4:	mov    r11,QWORD PTR [rbx+0x20]
  42e7b8:	mov    esi,r10d
  42e7bb:	bts    edx,eax
  42e7be:	mov    r9,QWORD PTR [r8+rsi*8]
  42e7c2:	mov    r14,QWORD PTR [r11+rsi*8]
  42e7c6:	mov    DWORD PTR [rcx],edx
  42e7c8:	nop    DWORD PTR [rax+rax*1+0x0]
  42e7d0:	mov    rdx,r9
  42e7d3:	mov    eax,r9d
  42e7d6:	shr    rdx,0x21
  42e7da:	shl    eax,0xb
  42e7dd:	xor    eax,edx
  42e7df:	xor    eax,r9d
  42e7e2:	mov    esi,eax
  42e7e4:	mov    ecx,eax
  42e7e6:	shr    esi,0x3
  42e7e9:	shl    eax,0x3
  42e7ec:	xor    eax,esi
  42e7ee:	or     eax,0x1
  42e7f1:	mov    esi,eax
  42e7f3:	and    ecx,ebp
  42e7f5:	and    esi,ebp
  42e7f7:	jmp    42e804 <xmlStrEqual@plt+0x2a8c4>
  42e7f9:	nop    DWORD PTR [rax+0x0]
  42e800:	add    ecx,esi
  42e802:	and    ecx,ebp
  42e804:	mov    eax,ecx
  42e806:	shr    eax,0x4
  42e809:	shl    rax,0x2
  42e80d:	lea    r11,[r12+rax*1]
  42e811:	mov    r13d,DWORD PTR [r11]
  42e814:	lea    edx,[rcx+rcx*1]
  42e817:	and    edx,0x1e
  42e81a:	shrx   r15d,r13d,edx
  42e81f:	and    r15d,0x2
  42e823:	je     42e800 <xmlStrEqual@plt+0x2a8c0>
  42e825:	mov    esi,0x2
  42e82a:	shlx   rsi,rsi,rdx
  42e82f:	andn   r13d,esi,r13d
  42e834:	mov    DWORD PTR [r11],r13d
  42e837:	mov    esi,ecx
  42e839:	shl    rsi,0x3
  42e83d:	mov    r11d,DWORD PTR [rbx]
  42e840:	add    r8,rsi
  42e843:	cmp    r11d,ecx
  42e846:	jbe    42eb20 <xmlStrEqual@plt+0x2abe0>
  42e84c:	mov    ecx,DWORD PTR [rdi+rax*1]
  42e84f:	shrx   ecx,ecx,edx
  42e854:	and    ecx,0x3
  42e857:	jne    42eb20 <xmlStrEqual@plt+0x2abe0>
  42e85d:	mov    rcx,QWORD PTR [r8]
  42e860:	mov    QWORD PTR [r8],r9
  42e863:	mov    r9,rcx
  42e866:	add    rsi,QWORD PTR [rbx+0x20]
  42e86a:	mov    r11,QWORD PTR [rsi]
  42e86d:	mov    QWORD PTR [rsi],r14
  42e870:	mov    esi,0x1
  42e875:	shlx   rdx,rsi,rdx
  42e87a:	mov    rdi,QWORD PTR [rbx+0x10]
  42e87e:	mov    r8,QWORD PTR [rbx+0x18]
  42e882:	or     DWORD PTR [rdi+rax*1],edx
  42e885:	mov    r14,r11
  42e888:	jmp    42e7d0 <xmlStrEqual@plt+0x2a890>
  42e88d:	mov    esi,r9d
  42e890:	mov    rcx,QWORD PTR [rbx+0x18]
  42e894:	mov    edx,esi
  42e896:	mov    QWORD PTR [rcx+rdx*8],r14
  42e89a:	lea    r8,[rdx*8+0x0]
  42e8a2:	mov    edx,0x3
  42e8a7:	add    rdi,QWORD PTR [rbx+0x10]
  42e8ab:	shlx   rax,rdx,rax
  42e8b0:	not    eax
  42e8b2:	and    DWORD PTR [rdi],eax
  42e8b4:	inc    DWORD PTR [rbx+0x4]
  42e8b7:	inc    DWORD PTR [rbx+0x8]
  42e8ba:	mov    rax,QWORD PTR [rsp]
  42e8be:	mov    rbx,QWORD PTR [rsp+0x8]
  42e8c3:	mov    rax,QWORD PTR [rax]
  42e8c6:	mov    rax,QWORD PTR [rax+0x20]
  42e8ca:	mov    QWORD PTR [rax+r8*1],rbx
  42e8ce:	add    rsp,0x28
  42e8d2:	pop    rbx
  42e8d3:	pop    rbp
  42e8d4:	pop    r12
  42e8d6:	pop    r13
  42e8d8:	pop    r14
  42e8da:	pop    r15
  42e8dc:	ret    
  42e8dd:	nop    DWORD PTR [rax]
  42e8e0:	mov    edi,DWORD PTR [rsp+0x10]
  42e8e4:	mov    ebp,edi
  42e8e6:	shr    ebp,1
  42e8e8:	or     ebp,edi
  42e8ea:	mov    edx,ebp
  42e8ec:	shr    edx,0x2
  42e8ef:	or     ebp,edx
  42e8f1:	mov    edx,ebp
  42e8f3:	shr    edx,0x4
  42e8f6:	or     ebp,edx
  42e8f8:	mov    edx,ebp
  42e8fa:	shr    edx,0x8
  42e8fd:	or     ebp,edx
  42e8ff:	mov    edx,ebp
  42e901:	shr    edx,0x10
  42e904:	or     ebp,edx
  42e906:	lea    ecx,[rbp+0x1]
  42e909:	cmp    ecx,0x3
  42e90c:	ja     42ead0 <xmlStrEqual@plt+0x2ab90>
  42e912:	cmp    eax,0x2
  42e915:	ja     42ebe0 <xmlStrEqual@plt+0x2aca0>
  42e91b:	mov    DWORD PTR [rsp+0x14],0x3
  42e923:	mov    DWORD PTR [rsp+0x10],0x4
  42e92b:	mov    ebp,0x3
  42e930:	mov    r13d,0x4
  42e936:	mov    rdi,r13
  42e939:	call   403cd0 <malloc@plt>
  42e93e:	mov    rdi,rax
  42e941:	mov    rdx,r13
  42e944:	mov    esi,0xaa
  42e949:	mov    r12,rax
  42e94c:	call   4039f0 <memset@plt>
  42e951:	mov    r11d,DWORD PTR [rbx]
  42e954:	cmp    DWORD PTR [rsp+0x10],r11d
  42e959:	ja     42ec50 <xmlStrEqual@plt+0x2ad10>
  42e95f:	xor    r10d,r10d
  42e962:	test   r11d,r11d
  42e965:	je     42eb75 <xmlStrEqual@plt+0x2ac35>
  42e96b:	mov    QWORD PTR [rsp+0x18],r14
  42e970:	jmp    42e984 <xmlStrEqual@plt+0x2aa44>
  42e972:	nop    WORD PTR [rax+rax*1+0x0]
  42e978:	inc    r10d
  42e97b:	cmp    r10d,r11d
  42e97e:	je     42eb40 <xmlStrEqual@plt+0x2ac00>
  42e984:	mov    eax,r10d
  42e987:	mov    rdi,QWORD PTR [rbx+0x10]
  42e98b:	shr    eax,0x4
  42e98e:	lea    rcx,[rdi+rax*4]
  42e992:	mov    esi,DWORD PTR [rcx]
  42e994:	lea    eax,[r10+r10*1]
  42e998:	and    eax,0x1e
  42e99b:	shrx   edx,esi,eax
  42e9a0:	and    edx,0x3
  42e9a3:	jne    42e978 <xmlStrEqual@plt+0x2aa38>
  42e9a5:	mov    r8,QWORD PTR [rbx+0x18]
  42e9a9:	mov    r11,QWORD PTR [rbx+0x20]
  42e9ad:	mov    edx,r10d
  42e9b0:	bts    esi,eax
  42e9b3:	mov    r9,QWORD PTR [r8+rdx*8]
  42e9b7:	mov    r14,QWORD PTR [r11+rdx*8]
  42e9bb:	mov    DWORD PTR [rcx],esi
  42e9bd:	nop    DWORD PTR [rax]
  42e9c0:	mov    rdx,r9
  42e9c3:	mov    eax,r9d
  42e9c6:	shr    rdx,0x21
  42e9ca:	shl    eax,0xb
  42e9cd:	xor    eax,edx
  42e9cf:	xor    eax,r9d
  42e9d2:	mov    esi,eax
  42e9d4:	mov    ecx,eax
  42e9d6:	shr    esi,0x3
  42e9d9:	shl    eax,0x3
  42e9dc:	xor    eax,esi
  42e9de:	or     eax,0x1
  42e9e1:	mov    esi,eax
  42e9e3:	and    ecx,ebp
  42e9e5:	and    esi,ebp
  42e9e7:	jmp    42e9f4 <xmlStrEqual@plt+0x2aab4>
  42e9e9:	nop    DWORD PTR [rax+0x0]
  42e9f0:	add    ecx,esi
  42e9f2:	and    ecx,ebp
  42e9f4:	mov    eax,ecx
  42e9f6:	shr    eax,0x4
  42e9f9:	shl    rax,0x2
  42e9fd:	lea    r11,[r12+rax*1]
  42ea01:	mov    r13d,DWORD PTR [r11]
  42ea04:	lea    edx,[rcx+rcx*1]
  42ea07:	and    edx,0x1e
  42ea0a:	shrx   r15d,r13d,edx
  42ea0f:	and    r15d,0x2
  42ea13:	je     42e9f0 <xmlStrEqual@plt+0x2aab0>
  42ea15:	mov    esi,0x2
  42ea1a:	shlx   rsi,rsi,rdx
  42ea1f:	andn   r13d,esi,r13d
  42ea24:	mov    DWORD PTR [r11],r13d
  42ea27:	mov    esi,ecx
  42ea29:	shl    rsi,0x3
  42ea2d:	mov    r11d,DWORD PTR [rbx]
  42ea30:	add    r8,rsi
  42ea33:	cmp    r11d,ecx
  42ea36:	jbe    42eba0 <xmlStrEqual@plt+0x2ac60>
  42ea3c:	mov    ecx,DWORD PTR [rdi+rax*1]
  42ea3f:	shrx   ecx,ecx,edx
  42ea44:	and    ecx,0x3
  42ea47:	jne    42eba0 <xmlStrEqual@plt+0x2ac60>
  42ea4d:	mov    rcx,QWORD PTR [r8]
  42ea50:	mov    QWORD PTR [r8],r9
  42ea53:	mov    r9,rcx
  42ea56:	add    rsi,QWORD PTR [rbx+0x20]
  42ea5a:	mov    r11,QWORD PTR [rsi]
  42ea5d:	mov    QWORD PTR [rsi],r14
  42ea60:	mov    esi,0x1
  42ea65:	shlx   rdx,rsi,rdx
  42ea6a:	mov    rdi,QWORD PTR [rbx+0x10]
  42ea6e:	mov    r8,QWORD PTR [rbx+0x18]
  42ea72:	or     DWORD PTR [rdi+rax*1],edx
  42ea75:	mov    r14,r11
  42ea78:	jmp    42e9c0 <xmlStrEqual@plt+0x2aa80>
  42ea7d:	nop    DWORD PTR [rax]
  42ea80:	mov    edx,ecx
  42ea82:	vxorpd xmm0,xmm0,xmm0
  42ea86:	vcvtsi2sd xmm0,xmm0,rdx
  42ea8b:	vmovsd xmm1,QWORD PTR [rip+0x1e445]        # 44ced8 <xmlStrEqual@plt+0x48f98>
  42ea93:	vfmadd132sd xmm0,xmm1,QWORD PTR [rip+0x1e434]        # 44ced0 <xmlStrEqual@plt+0x48f90>
  42ea9c:	vcvttsd2si rdx,xmm0
  42eaa1:	mov    DWORD PTR [rsp+0x14],edx
  42eaa5:	cmp    eax,edx
  42eaa7:	jae    42ebd0 <xmlStrEqual@plt+0x2ac90>
  42eaad:	cmp    ecx,0xf
  42eab0:	jbe    42ec00 <xmlStrEqual@plt+0x2acc0>
  42eab6:	mov    r13d,ecx
  42eab9:	shr    r13d,0x4
  42eabd:	shl    r13,0x2
  42eac1:	mov    DWORD PTR [rsp+0x10],ecx
  42eac5:	jmp    42e747 <xmlStrEqual@plt+0x2a807>
  42eaca:	nop    WORD PTR [rax+rax*1+0x0]
  42ead0:	mov    edx,ecx
  42ead2:	vxorpd xmm0,xmm0,xmm0
  42ead6:	vcvtsi2sd xmm0,xmm0,rdx
  42eadb:	vmovsd xmm2,QWORD PTR [rip+0x1e3f5]        # 44ced8 <xmlStrEqual@plt+0x48f98>
  42eae3:	vfmadd132sd xmm0,xmm2,QWORD PTR [rip+0x1e3e4]        # 44ced0 <xmlStrEqual@plt+0x48f90>
  42eaec:	vcvttsd2si rdx,xmm0
  42eaf1:	mov    DWORD PTR [rsp+0x14],edx
  42eaf5:	cmp    eax,edx
  42eaf7:	jae    42ebd0 <xmlStrEqual@plt+0x2ac90>
  42eafd:	cmp    ecx,0xf
  42eb00:	jbe    42ebf0 <xmlStrEqual@plt+0x2acb0>
  42eb06:	mov    r13d,ecx
  42eb09:	shr    r13d,0x4
  42eb0d:	shl    r13,0x2
  42eb11:	mov    DWORD PTR [rsp+0x10],ecx
  42eb15:	jmp    42e936 <xmlStrEqual@plt+0x2a9f6>
  42eb1a:	nop    WORD PTR [rax+rax*1+0x0]
  42eb20:	mov    QWORD PTR [r8],r9
  42eb23:	inc    r10d
  42eb26:	mov    rax,QWORD PTR [rbx+0x20]
  42eb2a:	mov    QWORD PTR [rax+rsi*1],r14
  42eb2e:	cmp    r10d,r11d
  42eb31:	jne    42e78f <xmlStrEqual@plt+0x2a84f>
  42eb37:	nop    WORD PTR [rax+rax*1+0x0]
  42eb40:	mov    r14,QWORD PTR [rsp+0x18]
  42eb45:	cmp    DWORD PTR [rsp+0x10],r10d
  42eb4a:	jae    42eb75 <xmlStrEqual@plt+0x2ac35>
  42eb4c:	mov    r13d,DWORD PTR [rsp+0x10]
  42eb51:	mov    rdi,QWORD PTR [rbx+0x18]
  42eb55:	shl    r13,0x3
  42eb59:	mov    rsi,r13
  42eb5c:	call   403e10 <realloc@plt>
  42eb61:	mov    QWORD PTR [rbx+0x18],rax
  42eb65:	mov    rdi,QWORD PTR [rbx+0x20]
  42eb69:	mov    rsi,r13
  42eb6c:	call   403e10 <realloc@plt>
  42eb71:	mov    QWORD PTR [rbx+0x20],rax
  42eb75:	mov    rdi,QWORD PTR [rbx+0x10]
  42eb79:	call   4037b0 <free@plt>
  42eb7e:	mov    eax,DWORD PTR [rsp+0x10]
  42eb82:	mov    QWORD PTR [rbx+0x10],r12
  42eb86:	mov    DWORD PTR [rbx],eax
  42eb88:	mov    eax,DWORD PTR [rbx+0x4]
  42eb8b:	mov    DWORD PTR [rbx+0x8],eax
  42eb8e:	mov    eax,DWORD PTR [rsp+0x14]
  42eb92:	mov    DWORD PTR [rbx+0xc],eax
  42eb95:	jmp    42e5da <xmlStrEqual@plt+0x2a69a>
  42eb9a:	nop    WORD PTR [rax+rax*1+0x0]
  42eba0:	mov    QWORD PTR [r8],r9
  42eba3:	mov    rax,QWORD PTR [rbx+0x20]
  42eba7:	mov    QWORD PTR [rax+rsi*1],r14
  42ebab:	jmp    42e978 <xmlStrEqual@plt+0x2aa38>
  42ebb0:	cmp    r9d,DWORD PTR [rsp+0x10]
  42ebb5:	jne    42e687 <xmlStrEqual@plt+0x2a747>
  42ebbb:	shl    rdi,0x2
  42ebbf:	mov    esi,edx
  42ebc1:	jmp    42e890 <xmlStrEqual@plt+0x2a950>
  42ebc6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42ebd0:	mov    eax,DWORD PTR [rsp+0x10]
  42ebd4:	mov    r12,QWORD PTR [rbx+0x10]
  42ebd8:	lea    ebp,[rax-0x1]
  42ebdb:	jmp    42e5da <xmlStrEqual@plt+0x2a69a>
  42ebe0:	mov    r12,QWORD PTR [rbx+0x10]
  42ebe4:	lea    ebp,[rdi-0x1]
  42ebe7:	jmp    42e5da <xmlStrEqual@plt+0x2a69a>
  42ebec:	nop    DWORD PTR [rax+0x0]
  42ebf0:	mov    DWORD PTR [rsp+0x10],ecx
  42ebf4:	mov    r13d,0x4
  42ebfa:	jmp    42e936 <xmlStrEqual@plt+0x2a9f6>
  42ebff:	nop
  42ec00:	mov    DWORD PTR [rsp+0x10],ecx
  42ec04:	mov    r13d,0x4
  42ec0a:	jmp    42e747 <xmlStrEqual@plt+0x2a807>
  42ec0f:	nop
  42ec10:	mov    r13d,eax
  42ec13:	shl    r13,0x3
  42ec17:	mov    rdi,QWORD PTR [rbx+0x18]
  42ec1b:	mov    rsi,r13
  42ec1e:	call   403e10 <realloc@plt>
  42ec23:	mov    QWORD PTR [rbx+0x18],rax
  42ec27:	mov    rdi,QWORD PTR [rbx+0x20]
  42ec2b:	mov    rsi,r13
  42ec2e:	call   403e10 <realloc@plt>
  42ec33:	mov    QWORD PTR [rbx+0x20],rax
  42ec37:	mov    eax,DWORD PTR [rbx]
  42ec39:	test   eax,eax
  42ec3b:	jne    42e76e <xmlStrEqual@plt+0x2a82e>
  42ec41:	jmp    42eb75 <xmlStrEqual@plt+0x2ac35>
  42ec46:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42ec50:	mov    r13d,DWORD PTR [rsp+0x10]
  42ec55:	mov    rdi,QWORD PTR [rbx+0x18]
  42ec59:	shl    r13,0x3
  42ec5d:	mov    rsi,r13
  42ec60:	call   403e10 <realloc@plt>
  42ec65:	mov    QWORD PTR [rbx+0x18],rax
  42ec69:	mov    rdi,QWORD PTR [rbx+0x20]
  42ec6d:	mov    rsi,r13
  42ec70:	call   403e10 <realloc@plt>
  42ec75:	mov    QWORD PTR [rbx+0x20],rax
  42ec79:	mov    r11d,DWORD PTR [rbx]
  42ec7c:	jmp    42e95f <xmlStrEqual@plt+0x2aa1f>
  42ec81:	mov    r8d,edx
  42ec84:	shl    r8,0x3
  42ec88:	nop    DWORD PTR [rax+rax*1+0x0]
  42ec90:	mov    r9d,edx
  42ec93:	jmp    42e68e <xmlStrEqual@plt+0x2a74e>
  42ec98:	nop    DWORD PTR [rax+rax*1+0x0]
  42eca0:	endbr64 
  42eca4:	mov    rdx,QWORD PTR [rdi]
  42eca7:	xor    eax,eax
  42eca9:	mov    r11d,DWORD PTR [rdx]
  42ecac:	test   r11d,r11d
  42ecaf:	je     42ed68 <xmlStrEqual@plt+0x2ae28>
  42ecb5:	push   r14
  42ecb7:	mov    rcx,rsi
  42ecba:	mov    eax,esi
  42ecbc:	push   r13
  42ecbe:	shr    rcx,0x21
  42ecc2:	shl    eax,0xb
  42ecc5:	push   r12
  42ecc7:	xor    eax,ecx
  42ecc9:	xor    eax,esi
  42eccb:	push   rbp
  42eccc:	lea    r10d,[r11-0x1]
  42ecd0:	mov    ecx,eax
  42ecd2:	push   rbx
  42ecd3:	mov    ebx,r10d
  42ecd6:	and    ebx,eax
  42ecd8:	shr    ecx,0x3
  42ecdb:	shl    eax,0x3
  42ecde:	xor    eax,ecx
  42ece0:	or     eax,0x1
  42ece3:	mov    ecx,eax
  42ece5:	and    ecx,r10d
  42ece8:	mov    r12,QWORD PTR [rdx+0x10]
  42ecec:	mov    eax,ebx
  42ecee:	jmp    42ed0c <xmlStrEqual@plt+0x2adcc>
  42ecf0:	test   r13b,0x1
  42ecf4:	jne    42ed03 <xmlStrEqual@plt+0x2adc3>
  42ecf6:	mov    r14,QWORD PTR [rdx+0x18]
  42ecfa:	mov    r9d,eax
  42ecfd:	cmp    rsi,QWORD PTR [r14+r9*8]
  42ed01:	je     42ed2a <xmlStrEqual@plt+0x2adea>
  42ed03:	add    eax,ecx
  42ed05:	and    eax,r10d
  42ed08:	cmp    ebx,eax
  42ed0a:	je     42ed58 <xmlStrEqual@plt+0x2ae18>
  42ed0c:	mov    edi,eax
  42ed0e:	shr    edi,0x4
  42ed11:	lea    rbp,[r12+rdi*4]
  42ed15:	mov    r8d,DWORD PTR [rbp+0x0]
  42ed19:	lea    edi,[rax+rax*1]
  42ed1c:	and    edi,0x1e
  42ed1f:	shrx   r13d,r8d,edi
  42ed24:	test   r13b,0x2
  42ed28:	je     42ecf0 <xmlStrEqual@plt+0x2adb0>
  42ed2a:	and    r13d,0x3
  42ed2e:	jne    42ed58 <xmlStrEqual@plt+0x2ae18>
  42ed30:	cmp    r11d,eax
  42ed33:	je     42ed58 <xmlStrEqual@plt+0x2ae18>
  42ed35:	mov    rcx,QWORD PTR [rdx+0x20]
  42ed39:	bts    r8d,edi
  42ed3d:	mov    rax,QWORD PTR [rcx+rax*8]
  42ed41:	mov    DWORD PTR [rbp+0x0],r8d
  42ed45:	dec    DWORD PTR [rdx+0x4]
  42ed48:	pop    rbx
  42ed49:	pop    rbp
  42ed4a:	pop    r12
  42ed4c:	pop    r13
  42ed4e:	pop    r14
  42ed50:	ret    
  42ed51:	nop    DWORD PTR [rax+0x0]
  42ed58:	pop    rbx
  42ed59:	pop    rbp
  42ed5a:	pop    r12
  42ed5c:	pop    r13
  42ed5e:	xor    eax,eax
  42ed60:	pop    r14
  42ed62:	ret    
  42ed63:	nop    DWORD PTR [rax+rax*1+0x0]
  42ed68:	ret    
  42ed69:	nop    DWORD PTR [rax+0x0]
  42ed70:	endbr64 
  42ed74:	mov    rdi,QWORD PTR [rdi]
  42ed77:	xor    eax,eax
  42ed79:	mov    r10d,DWORD PTR [rdi]
  42ed7c:	test   r10d,r10d
  42ed7f:	je     42ee18 <xmlStrEqual@plt+0x2aed8>
  42ed85:	mov    rdx,rsi
  42ed88:	mov    eax,esi
  42ed8a:	shr    rdx,0x21
  42ed8e:	shl    eax,0xb
  42ed91:	xor    eax,edx
  42ed93:	xor    eax,esi
  42ed95:	push   rbp
  42ed96:	lea    r9d,[r10-0x1]
  42ed9a:	mov    edx,eax
  42ed9c:	mov    r11d,r9d
  42ed9f:	and    r11d,eax
  42eda2:	shr    edx,0x3
  42eda5:	shl    eax,0x3
  42eda8:	xor    eax,edx
  42edaa:	push   rbx
  42edab:	or     eax,0x1
  42edae:	mov    edx,eax
  42edb0:	and    edx,r9d
  42edb3:	mov    rbp,QWORD PTR [rdi+0x10]
  42edb7:	mov    eax,r11d
  42edba:	jmp    42eddc <xmlStrEqual@plt+0x2ae9c>
  42edbc:	nop    DWORD PTR [rax+0x0]
  42edc0:	test   cl,0x1
  42edc3:	jne    42edd2 <xmlStrEqual@plt+0x2ae92>
  42edc5:	mov    rbx,QWORD PTR [rdi+0x18]
  42edc9:	mov    r8d,eax
  42edcc:	cmp    rsi,QWORD PTR [rbx+r8*8]
  42edd0:	je     42edf8 <xmlStrEqual@plt+0x2aeb8>
  42edd2:	add    eax,edx
  42edd4:	and    eax,r9d
  42edd7:	cmp    r11d,eax
  42edda:	je     42ee10 <xmlStrEqual@plt+0x2aed0>
  42eddc:	mov    ebx,eax
  42edde:	lea    ecx,[rax+rax*1]
  42ede1:	and    ecx,0x1e
  42ede4:	shr    ebx,0x4
  42ede7:	mov    r8d,ecx
  42edea:	mov    ecx,DWORD PTR [rbp+rbx*4+0x0]
  42edee:	shrx   ecx,ecx,r8d
  42edf3:	test   cl,0x2
  42edf6:	je     42edc0 <xmlStrEqual@plt+0x2ae80>
  42edf8:	and    ecx,0x3
  42edfb:	jne    42ee10 <xmlStrEqual@plt+0x2aed0>
  42edfd:	cmp    r10d,eax
  42ee00:	je     42ee10 <xmlStrEqual@plt+0x2aed0>
  42ee02:	mov    rdx,QWORD PTR [rdi+0x20]
  42ee06:	pop    rbx
  42ee07:	mov    rax,QWORD PTR [rdx+rax*8]
  42ee0b:	pop    rbp
  42ee0c:	ret    
  42ee0d:	nop    DWORD PTR [rax]
  42ee10:	pop    rbx
  42ee11:	xor    eax,eax
  42ee13:	pop    rbp
  42ee14:	ret    
  42ee15:	nop    DWORD PTR [rax]
  42ee18:	ret    
  42ee19:	nop    DWORD PTR [rax+0x0]
  42ee20:	endbr64 
  42ee24:	test   rdi,rdi
  42ee27:	je     42eeb0 <xmlStrEqual@plt+0x2af70>
  42ee2d:	push   r12
  42ee2f:	mov    r12,rdi
  42ee32:	push   rbp
  42ee33:	push   rbx
  42ee34:	mov    rbp,QWORD PTR [rdi]
  42ee37:	mov    eax,DWORD PTR [rbp+0x0]
  42ee3a:	test   eax,eax
  42ee3c:	je     42ee7e <xmlStrEqual@plt+0x2af3e>
  42ee3e:	xor    ebx,ebx
  42ee40:	mov    ecx,ebx
  42ee42:	mov    rsi,QWORD PTR [rbp+0x10]
  42ee46:	lea    eax,[rbx+rbx*1]
  42ee49:	and    eax,0x1e
  42ee4c:	shr    ecx,0x4
  42ee4f:	mov    edx,eax
  42ee51:	mov    eax,DWORD PTR [rsi+rcx*4]
  42ee54:	shrx   eax,eax,edx
  42ee59:	test   al,0x3
  42ee5b:	jne    42ee77 <xmlStrEqual@plt+0x2af37>
  42ee5d:	mov    rdx,QWORD PTR [r12+0x8]
  42ee62:	test   rdx,rdx
  42ee65:	je     42ee77 <xmlStrEqual@plt+0x2af37>
  42ee67:	mov    rcx,QWORD PTR [rbp+0x20]
  42ee6b:	mov    eax,ebx
  42ee6d:	mov    rdi,QWORD PTR [rcx+rax*8]
  42ee71:	call   rdx
  42ee73:	mov    rbp,QWORD PTR [r12]
  42ee77:	inc    ebx
  42ee79:	cmp    DWORD PTR [rbp+0x0],ebx
  42ee7c:	jne    42ee40 <xmlStrEqual@plt+0x2af00>
  42ee7e:	mov    rdi,QWORD PTR [rbp+0x18]
  42ee82:	call   4037b0 <free@plt>
  42ee87:	mov    rdi,QWORD PTR [rbp+0x10]
  42ee8b:	call   4037b0 <free@plt>
  42ee90:	mov    rdi,QWORD PTR [rbp+0x20]
  42ee94:	call   4037b0 <free@plt>
  42ee99:	mov    rdi,rbp
  42ee9c:	call   4037b0 <free@plt>
  42eea1:	pop    rbx
  42eea2:	pop    rbp
  42eea3:	mov    rdi,r12
  42eea6:	pop    r12
  42eea8:	jmp    4037b0 <free@plt>
  42eead:	nop    DWORD PTR [rax]
  42eeb0:	ret    
  42eeb1:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  42eebc:	nop    DWORD PTR [rax+0x0]
  42eec0:	endbr64 
  42eec4:	push   r12
  42eec6:	mov    r12,rdi
  42eec9:	push   rbp
  42eeca:	push   rbx
  42eecb:	call   42dc90 <xmlStrEqual@plt+0x29d50>
  42eed0:	mov    rsi,QWORD PTR [r12]
  42eed4:	mov    rbp,rax
  42eed7:	mov    eax,DWORD PTR [rsi]
  42eed9:	test   eax,eax
  42eedb:	je     42ef27 <xmlStrEqual@plt+0x2afe7>
  42eedd:	xor    ebx,ebx
  42eedf:	jmp    42eeee <xmlStrEqual@plt+0x2afae>
  42eee1:	nop    DWORD PTR [rax+0x0]
  42eee8:	inc    ebx
  42eeea:	cmp    DWORD PTR [rsi],ebx
  42eeec:	je     42ef27 <xmlStrEqual@plt+0x2afe7>
  42eeee:	mov    ecx,ebx
  42eef0:	mov    rdi,QWORD PTR [rsi+0x10]
  42eef4:	lea    eax,[rbx+rbx*1]
  42eef7:	and    eax,0x1e
  42eefa:	shr    ecx,0x4
  42eefd:	mov    edx,eax
  42eeff:	mov    eax,DWORD PTR [rdi+rcx*4]
  42ef02:	shrx   eax,eax,edx
  42ef07:	test   al,0x3
  42ef09:	jne    42eee8 <xmlStrEqual@plt+0x2afa8>
  42ef0b:	mov    rdx,QWORD PTR [rsi+0x18]
  42ef0f:	mov    eax,ebx
  42ef11:	mov    rdi,QWORD PTR [rdx+rax*8]
  42ef15:	mov    rsi,rbp
  42ef18:	call   42dcf0 <xmlStrEqual@plt+0x29db0>
  42ef1d:	mov    rsi,QWORD PTR [r12]
  42ef21:	inc    ebx
  42ef23:	cmp    DWORD PTR [rsi],ebx
  42ef25:	jne    42eeee <xmlStrEqual@plt+0x2afae>
  42ef27:	pop    rbx
  42ef28:	mov    rax,rbp
  42ef2b:	pop    rbp
  42ef2c:	pop    r12
  42ef2e:	ret    
  42ef2f:	nop
  42ef30:	endbr64 
  42ef34:	push   r12
  42ef36:	mov    r12,rdi
  42ef39:	push   rbp
  42ef3a:	push   rbx
  42ef3b:	call   42dc90 <xmlStrEqual@plt+0x29d50>
  42ef40:	mov    rsi,QWORD PTR [r12]
  42ef44:	mov    rbp,rax
  42ef47:	mov    eax,DWORD PTR [rsi]
  42ef49:	test   eax,eax
  42ef4b:	je     42ef97 <xmlStrEqual@plt+0x2b057>
  42ef4d:	xor    ebx,ebx
  42ef4f:	jmp    42ef5e <xmlStrEqual@plt+0x2b01e>
  42ef51:	nop    DWORD PTR [rax+0x0]
  42ef58:	inc    ebx
  42ef5a:	cmp    DWORD PTR [rsi],ebx
  42ef5c:	je     42ef97 <xmlStrEqual@plt+0x2b057>
  42ef5e:	mov    ecx,ebx
  42ef60:	mov    rdi,QWORD PTR [rsi+0x10]
  42ef64:	lea    eax,[rbx+rbx*1]
  42ef67:	and    eax,0x1e
  42ef6a:	shr    ecx,0x4
  42ef6d:	mov    edx,eax
  42ef6f:	mov    eax,DWORD PTR [rdi+rcx*4]
  42ef72:	shrx   eax,eax,edx
  42ef77:	test   al,0x3
  42ef79:	jne    42ef58 <xmlStrEqual@plt+0x2b018>
  42ef7b:	mov    rdx,QWORD PTR [rsi+0x20]
  42ef7f:	mov    eax,ebx
  42ef81:	mov    rdi,QWORD PTR [rdx+rax*8]
  42ef85:	mov    rsi,rbp
  42ef88:	call   42dcf0 <xmlStrEqual@plt+0x29db0>
  42ef8d:	mov    rsi,QWORD PTR [r12]
  42ef91:	inc    ebx
  42ef93:	cmp    DWORD PTR [rsi],ebx
  42ef95:	jne    42ef5e <xmlStrEqual@plt+0x2b01e>
  42ef97:	pop    rbx
  42ef98:	mov    rax,rbp
  42ef9b:	pop    rbp
  42ef9c:	pop    r12
  42ef9e:	ret    
  42ef9f:	nop
  42efa0:	endbr64 
  42efa4:	push   rbp
  42efa5:	mov    rbp,rdi
  42efa8:	mov    edi,0x38
  42efad:	push   rbx
  42efae:	sub    rsp,0x8
  42efb2:	call   434fe0 <xmlStrEqual@plt+0x310a0>
  42efb7:	mov    rdi,rbp
  42efba:	mov    rbx,rax
  42efbd:	call   4350d0 <xmlStrEqual@plt+0x31190>
  42efc2:	mov    QWORD PTR [rbx],rax
  42efc5:	call   42dc90 <xmlStrEqual@plt+0x29d50>
  42efca:	mov    QWORD PTR [rbx+0x8],rax
  42efce:	call   42dc90 <xmlStrEqual@plt+0x29d50>
  42efd3:	mov    QWORD PTR [rbx+0x10],rax
  42efd7:	call   42dc90 <xmlStrEqual@plt+0x29d50>
  42efdc:	mov    QWORD PTR [rbx+0x18],rax
  42efe0:	mov    BYTE PTR [rbx+0x20],0x1
  42efe4:	mov    QWORD PTR [rbx+0x28],0x0
  42efec:	mov    QWORD PTR [rbx+0x30],0x0
  42eff4:	add    rsp,0x8
  42eff8:	mov    rax,rbx
  42effb:	pop    rbx
  42effc:	pop    rbp
  42effd:	ret    
  42effe:	xchg   ax,ax
  42f000:	endbr64 
  42f004:	push   rbx
  42f005:	mov    rbx,rdi
  42f008:	mov    rdi,QWORD PTR [rdi]
  42f00b:	call   4037b0 <free@plt>
  42f010:	mov    rdi,QWORD PTR [rbx+0x8]
  42f014:	call   42e2b0 <xmlStrEqual@plt+0x2a370>
  42f019:	mov    rdi,QWORD PTR [rbx+0x10]
  42f01d:	call   42e2b0 <xmlStrEqual@plt+0x2a370>
  42f022:	mov    rdi,QWORD PTR [rbx+0x18]
  42f026:	call   42e2b0 <xmlStrEqual@plt+0x2a370>
  42f02b:	mov    rdi,QWORD PTR [rbx+0x28]
  42f02f:	test   rdi,rdi
  42f032:	je     42f039 <xmlStrEqual@plt+0x2b0f9>
  42f034:	call   424bf0 <xmlStrEqual@plt+0x20cb0>
  42f039:	mov    rdi,QWORD PTR [rbx+0x30]
  42f03d:	test   rdi,rdi
  42f040:	je     42f047 <xmlStrEqual@plt+0x2b107>
  42f042:	call   424bf0 <xmlStrEqual@plt+0x20cb0>
  42f047:	mov    rdi,rbx
  42f04a:	pop    rbx
  42f04b:	jmp    4037b0 <free@plt>
  42f050:	endbr64 
  42f054:	push   r13
  42f056:	mov    r13,rdi
  42f059:	push   r12
  42f05b:	push   rbp
  42f05c:	push   rbx
  42f05d:	sub    rsp,0x8
  42f061:	mov    r12,QWORD PTR [rsi]
  42f064:	mov    eax,DWORD PTR [r12+0x18]
  42f069:	test   eax,eax
  42f06b:	je     42f0b0 <xmlStrEqual@plt+0x2b170>
  42f06d:	mov    rdi,r12
  42f070:	call   4255a0 <xmlStrEqual@plt+0x21660>
  42f075:	mov    rbp,rax
  42f078:	test   rax,rax
  42f07b:	je     42f16a <xmlStrEqual@plt+0x2b22a>
  42f081:	mov    rdi,rax
  42f084:	call   43f8c0 <xmlStrEqual@plt+0x3b980>
  42f089:	mov    rbp,rax
  42f08c:	test   rax,rax
  42f08f:	je     42f14a <xmlStrEqual@plt+0x2b20a>
  42f095:	add    rsp,0x8
  42f099:	pop    rbx
  42f09a:	pop    rbp
  42f09b:	pop    r12
  42f09d:	mov    rdi,r13
  42f0a0:	mov    rsi,rax
  42f0a3:	pop    r13
  42f0a5:	jmp    43aca0 <xmlStrEqual@plt+0x36d60>
  42f0aa:	nop    WORD PTR [rax+rax*1+0x0]
  42f0b0:	mov    rbx,rsi
  42f0b3:	call   43af10 <xmlStrEqual@plt+0x36fd0>
  42f0b8:	mov    rsi,QWORD PTR [rax+0x8]
  42f0bc:	mov    rdi,rax
  42f0bf:	cmp    rax,rsi
  42f0c2:	je     42f141 <xmlStrEqual@plt+0x2b201>
  42f0c4:	mov    rbp,QWORD PTR [rsi+0x10]
  42f0c8:	mov    rcx,QWORD PTR [rbp+0x10]
  42f0cc:	mov    rdx,QWORD PTR [rcx+0x8]
  42f0d0:	cmp    rdx,rcx
  42f0d3:	jne    42f0e9 <xmlStrEqual@plt+0x2b1a9>
  42f0d5:	jmp    42f108 <xmlStrEqual@plt+0x2b1c8>
  42f0d7:	nop    WORD PTR [rax+rax*1+0x0]
  42f0e0:	mov    rdx,QWORD PTR [rdx+0x8]
  42f0e4:	cmp    rcx,rdx
  42f0e7:	je     42f108 <xmlStrEqual@plt+0x2b1c8>
  42f0e9:	cmp    rbx,QWORD PTR [rdx+0x10]
  42f0ed:	jne    42f0e0 <xmlStrEqual@plt+0x2b1a0>
  42f0ef:	call   42e2b0 <xmlStrEqual@plt+0x2a370>
  42f0f4:	add    rsp,0x8
  42f0f8:	pop    rbx
  42f0f9:	mov    rax,rbp
  42f0fc:	pop    rbp
  42f0fd:	pop    r12
  42f0ff:	pop    r13
  42f101:	ret    
  42f102:	nop    WORD PTR [rax+rax*1+0x0]
  42f108:	mov    rcx,QWORD PTR [rbp+0x18]
  42f10c:	mov    rdx,QWORD PTR [rcx+0x8]
  42f110:	cmp    rcx,rdx
  42f113:	jne    42f129 <xmlStrEqual@plt+0x2b1e9>
  42f115:	jmp    42f138 <xmlStrEqual@plt+0x2b1f8>
  42f117:	nop    WORD PTR [rax+rax*1+0x0]
  42f120:	mov    rdx,QWORD PTR [rdx+0x8]
  42f124:	cmp    rcx,rdx
  42f127:	je     42f138 <xmlStrEqual@plt+0x2b1f8>
  42f129:	cmp    rbx,QWORD PTR [rdx+0x10]
  42f12d:	jne    42f120 <xmlStrEqual@plt+0x2b1e0>
  42f12f:	jmp    42f0ef <xmlStrEqual@plt+0x2b1af>
  42f131:	nop    DWORD PTR [rax+0x0]
  42f138:	mov    rsi,QWORD PTR [rsi+0x8]
  42f13c:	cmp    rdi,rsi
  42f13f:	jne    42f0c4 <xmlStrEqual@plt+0x2b184>
  42f141:	call   42e2b0 <xmlStrEqual@plt+0x2a370>
  42f146:	xor    ebp,ebp
  42f148:	jmp    42f0f4 <xmlStrEqual@plt+0x2b1b4>
  42f14a:	mov    rdi,r12
  42f14d:	call   424d40 <xmlStrEqual@plt+0x20e00>
  42f152:	mov    rdx,rax
  42f155:	lea    rsi,[rip+0x21274]        # 4503d0 <xmlStrEqual@plt+0x4c490>
  42f15c:	mov    edi,0x2
  42f161:	xor    eax,eax
  42f163:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  42f168:	jmp    42f0f4 <xmlStrEqual@plt+0x2b1b4>
  42f16a:	mov    rdi,r12
  42f16d:	call   424d40 <xmlStrEqual@plt+0x20e00>
  42f172:	mov    rdx,rax
  42f175:	lea    rsi,[rip+0x21204]        # 450380 <xmlStrEqual@plt+0x4c440>
  42f17c:	mov    edi,0x2
  42f181:	xor    eax,eax
  42f183:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  42f188:	jmp    42f0f4 <xmlStrEqual@plt+0x2b1b4>
  42f18d:	nop    DWORD PTR [rax]
  42f190:	endbr64 
  42f194:	push   r15
  42f196:	push   r14
  42f198:	mov    r14,rsi
  42f19b:	push   r13
  42f19d:	mov    r13,rdi
  42f1a0:	mov    rdi,rsi
  42f1a3:	push   r12
  42f1a5:	push   rbp
  42f1a6:	push   rbx
  42f1a7:	sub    rsp,0x18
  42f1ab:	call   434a40 <xmlStrEqual@plt+0x30b00>
  42f1b0:	mov    QWORD PTR [rsp+0x8],rax
  42f1b5:	mov    rax,QWORD PTR [rax+0x28]
  42f1b9:	mov    r12,QWORD PTR [rax+0x8]
  42f1bd:	cmp    rax,r12
  42f1c0:	jne    42f1d8 <xmlStrEqual@plt+0x2b298>
  42f1c2:	jmp    42f230 <xmlStrEqual@plt+0x2b2f0>
  42f1c4:	nop    DWORD PTR [rax+0x0]
  42f1c8:	mov    r12,QWORD PTR [r12+0x8]
  42f1cd:	mov    rax,QWORD PTR [rsp+0x8]
  42f1d2:	cmp    QWORD PTR [rax+0x28],r12
  42f1d6:	je     42f230 <xmlStrEqual@plt+0x2b2f0>
  42f1d8:	mov    rbp,QWORD PTR [r12+0x10]
  42f1dd:	mov    eax,DWORD PTR [rbp+0x18]
  42f1e0:	test   eax,eax
  42f1e2:	je     42f1c8 <xmlStrEqual@plt+0x2b288>
  42f1e4:	mov    rbx,QWORD PTR [rbp+0x8]
  42f1e8:	cmp    rbx,rbp
  42f1eb:	jne    42f1f9 <xmlStrEqual@plt+0x2b2b9>
  42f1ed:	jmp    42f1c8 <xmlStrEqual@plt+0x2b288>
  42f1ef:	nop
  42f1f0:	mov    rbx,QWORD PTR [rbx+0x8]
  42f1f4:	cmp    rbx,rbp
  42f1f7:	je     42f1c8 <xmlStrEqual@plt+0x2b288>
  42f1f9:	mov    rsi,QWORD PTR [rbx+0x10]
  42f1fd:	mov    rdi,r13
  42f200:	call   42f050 <xmlStrEqual@plt+0x2b110>
  42f205:	mov    r15,rax
  42f208:	test   rax,rax
  42f20b:	je     42f1f0 <xmlStrEqual@plt+0x2b2b0>
  42f20d:	mov    rsi,QWORD PTR [rax+0x8]
  42f211:	mov    rdi,r14
  42f214:	call   42ded0 <xmlStrEqual@plt+0x29f90>
  42f219:	test   al,al
  42f21b:	jne    42f1f0 <xmlStrEqual@plt+0x2b2b0>
  42f21d:	mov    rsi,QWORD PTR [r15+0x8]
  42f221:	mov    rdi,r14
  42f224:	call   42dcf0 <xmlStrEqual@plt+0x29db0>
  42f229:	jmp    42f1f0 <xmlStrEqual@plt+0x2b2b0>
  42f22b:	nop    DWORD PTR [rax+rax*1+0x0]
  42f230:	add    rsp,0x18
  42f234:	pop    rbx
  42f235:	pop    rbp
  42f236:	pop    r12
  42f238:	pop    r13
  42f23a:	pop    r14
  42f23c:	pop    r15
  42f23e:	ret    
  42f23f:	nop
  42f240:	endbr64 
  42f244:	push   r12
  42f246:	push   rbp
  42f247:	push   rbx
  42f248:	mov    rbx,rsi
  42f24b:	mov    r12,QWORD PTR [rsi]
  42f24e:	call   42f050 <xmlStrEqual@plt+0x2b110>
  42f253:	test   rax,rax
  42f256:	je     42f2b9 <xmlStrEqual@plt+0x2b379>
  42f258:	mov    rbp,rax
  42f25b:	mov    eax,DWORD PTR [r12+0x18]
  42f260:	test   eax,eax
  42f262:	jne    42f298 <xmlStrEqual@plt+0x2b358>
  42f264:	mov    rsi,QWORD PTR [rbp+0x10]
  42f268:	mov    rax,QWORD PTR [rsi+0x8]
  42f26c:	cmp    rsi,rax
  42f26f:	jne    42f281 <xmlStrEqual@plt+0x2b341>
  42f271:	jmp    42f2c0 <xmlStrEqual@plt+0x2b380>
  42f273:	nop    DWORD PTR [rax+rax*1+0x0]
  42f278:	mov    rax,QWORD PTR [rax+0x8]
  42f27c:	cmp    rsi,rax
  42f27f:	je     42f2c0 <xmlStrEqual@plt+0x2b380>
  42f281:	cmp    rbx,QWORD PTR [rax+0x10]
  42f285:	jne    42f278 <xmlStrEqual@plt+0x2b338>
  42f287:	mov    rdi,rbx
  42f28a:	pop    rbx
  42f28b:	pop    rbp
  42f28c:	pop    r12
  42f28e:	jmp    42e170 <xmlStrEqual@plt+0x2a230>
  42f293:	nop    DWORD PTR [rax+rax*1+0x0]
  42f298:	mov    rdi,r12
  42f29b:	call   4255a0 <xmlStrEqual@plt+0x21660>
  42f2a0:	mov    rdi,rax
  42f2a3:	test   rax,rax
  42f2a6:	je     42f310 <xmlStrEqual@plt+0x2b3d0>
  42f2a8:	call   425890 <xmlStrEqual@plt+0x21950>
  42f2ad:	cmp    ax,0x2
  42f2b1:	je     42f300 <xmlStrEqual@plt+0x2b3c0>
  42f2b3:	cmp    ax,0xa
  42f2b7:	je     42f2f0 <xmlStrEqual@plt+0x2b3b0>
  42f2b9:	pop    rbx
  42f2ba:	pop    rbp
  42f2bb:	pop    r12
  42f2bd:	ret    
  42f2be:	xchg   ax,ax
  42f2c0:	mov    rsi,QWORD PTR [rbp+0x18]
  42f2c4:	mov    rax,QWORD PTR [rsi+0x8]
  42f2c8:	cmp    rsi,rax
  42f2cb:	jne    42f2d9 <xmlStrEqual@plt+0x2b399>
  42f2cd:	jmp    42f2b9 <xmlStrEqual@plt+0x2b379>
  42f2cf:	nop
  42f2d0:	mov    rax,QWORD PTR [rax+0x8]
  42f2d4:	cmp    rsi,rax
  42f2d7:	je     42f2b9 <xmlStrEqual@plt+0x2b379>
  42f2d9:	cmp    rbx,QWORD PTR [rax+0x10]
  42f2dd:	jne    42f2d0 <xmlStrEqual@plt+0x2b390>
  42f2df:	mov    rdi,rbx
  42f2e2:	pop    rbx
  42f2e3:	pop    rbp
  42f2e4:	pop    r12
  42f2e6:	jmp    42e170 <xmlStrEqual@plt+0x2a230>
  42f2eb:	nop    DWORD PTR [rax+rax*1+0x0]
  42f2f0:	mov    rdi,rbx
  42f2f3:	pop    rbx
  42f2f4:	mov    rsi,QWORD PTR [rbp+0x18]
  42f2f8:	pop    rbp
  42f2f9:	pop    r12
  42f2fb:	jmp    42e170 <xmlStrEqual@plt+0x2a230>
  42f300:	mov    rdi,rbx
  42f303:	pop    rbx
  42f304:	mov    rsi,QWORD PTR [rbp+0x10]
  42f308:	pop    rbp
  42f309:	pop    r12
  42f30b:	jmp    42e170 <xmlStrEqual@plt+0x2a230>
  42f310:	mov    rdi,r12
  42f313:	call   424d40 <xmlStrEqual@plt+0x20e00>
  42f318:	pop    rbx
  42f319:	pop    rbp
  42f31a:	mov    rdx,rax
  42f31d:	lea    rsi,[rip+0x210fc]        # 450420 <xmlStrEqual@plt+0x4c4e0>
  42f324:	mov    edi,0x2
  42f329:	xor    eax,eax
  42f32b:	pop    r12
  42f32d:	jmp    430e20 <xmlStrEqual@plt+0x2cee0>
  42f332:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  42f33d:	nop    DWORD PTR [rax]
  42f340:	endbr64 
  42f344:	push   r15
  42f346:	push   r14
  42f348:	mov    r14,rsi
  42f34b:	push   r13
  42f34d:	mov    r13,rdi
  42f350:	mov    rdi,rsi
  42f353:	push   r12
  42f355:	push   rbp
  42f356:	push   rbx
  42f357:	sub    rsp,0x8
  42f35b:	call   434a40 <xmlStrEqual@plt+0x30b00>
  42f360:	mov    r15,rax
  42f363:	mov    rax,QWORD PTR [rax+0x28]
  42f367:	mov    r12,QWORD PTR [rax+0x8]
  42f36b:	cmp    rax,r12
  42f36e:	jne    42f383 <xmlStrEqual@plt+0x2b443>
  42f370:	jmp    42f3c0 <xmlStrEqual@plt+0x2b480>
  42f372:	nop    WORD PTR [rax+rax*1+0x0]
  42f378:	mov    r12,QWORD PTR [r12+0x8]
  42f37d:	cmp    QWORD PTR [r15+0x28],r12
  42f381:	je     42f3c0 <xmlStrEqual@plt+0x2b480>
  42f383:	mov    rbp,QWORD PTR [r12+0x10]
  42f388:	mov    eax,DWORD PTR [rbp+0x18]
  42f38b:	test   eax,eax
  42f38d:	je     42f378 <xmlStrEqual@plt+0x2b438>
  42f38f:	mov    rbx,QWORD PTR [rbp+0x8]
  42f393:	cmp    rbx,rbp
  42f396:	je     42f378 <xmlStrEqual@plt+0x2b438>
  42f398:	nop    DWORD PTR [rax+rax*1+0x0]
  42f3a0:	mov    rsi,QWORD PTR [rbx+0x10]
  42f3a4:	mov    rdi,r13
  42f3a7:	call   42f240 <xmlStrEqual@plt+0x2b300>
  42f3ac:	mov    rbx,QWORD PTR [rbx+0x8]
  42f3b0:	cmp    rbx,rbp
  42f3b3:	jne    42f3a0 <xmlStrEqual@plt+0x2b460>
  42f3b5:	mov    r12,QWORD PTR [r12+0x8]
  42f3ba:	cmp    QWORD PTR [r15+0x28],r12
  42f3be:	jne    42f383 <xmlStrEqual@plt+0x2b443>
  42f3c0:	mov    rdi,r13
  42f3c3:	call   43af10 <xmlStrEqual@plt+0x36fd0>
  42f3c8:	mov    rbx,QWORD PTR [rax+0x8]
  42f3cc:	mov    rbp,rax
  42f3cf:	cmp    rax,rbx
  42f3d2:	je     42f3f1 <xmlStrEqual@plt+0x2b4b1>
  42f3d4:	nop    DWORD PTR [rax+0x0]
  42f3d8:	mov    rax,QWORD PTR [rbx+0x10]
  42f3dc:	mov    rdi,r14
  42f3df:	mov    rsi,QWORD PTR [rax+0x8]
  42f3e3:	call   42e170 <xmlStrEqual@plt+0x2a230>
  42f3e8:	mov    rbx,QWORD PTR [rbx+0x8]
  42f3ec:	cmp    rbp,rbx
  42f3ef:	jne    42f3d8 <xmlStrEqual@plt+0x2b498>
  42f3f1:	add    rsp,0x8
  42f3f5:	pop    rbx
  42f3f6:	pop    rbp
  42f3f7:	pop    r12
  42f3f9:	pop    r13
  42f3fb:	pop    r14
  42f3fd:	pop    r15
  42f3ff:	ret    
  42f400:	endbr64 
  42f404:	push   rbx
  42f405:	mov    esi,0x10
  42f40a:	mov    edi,0x1
  42f40f:	call   434fa0 <xmlStrEqual@plt+0x31060>
  42f414:	mov    esi,0x28
  42f419:	mov    edi,0x1
  42f41e:	mov    rbx,rax
  42f421:	call   403a80 <calloc@plt>
  42f426:	mov    QWORD PTR [rbx],rax
  42f429:	mov    rax,rbx
  42f42c:	pop    rbx
  42f42d:	ret    
  42f42e:	xchg   ax,ax
  42f430:	endbr64 
  42f434:	push   rbp
  42f435:	mov    esi,0x10
  42f43a:	mov    rbp,rdi
  42f43d:	push   rbx
  42f43e:	mov    edi,0x1
  42f443:	sub    rsp,0x8
  42f447:	call   434fa0 <xmlStrEqual@plt+0x31060>
  42f44c:	mov    esi,0x28
  42f451:	mov    edi,0x1
  42f456:	mov    rbx,rax
  42f459:	call   403a80 <calloc@plt>
  42f45e:	mov    QWORD PTR [rbx],rax
  42f461:	mov    QWORD PTR [rbx+0x8],rbp
  42f465:	add    rsp,0x8
  42f469:	mov    rax,rbx
  42f46c:	pop    rbx
  42f46d:	pop    rbp
  42f46e:	ret    
  42f46f:	nop
  42f470:	endbr64 
  42f474:	push   r15
  42f476:	push   r14
  42f478:	push   r13
  42f47a:	push   r12
  42f47c:	push   rbp
  42f47d:	push   rbx
  42f47e:	sub    rsp,0x28
  42f482:	mov    rbx,QWORD PTR [rdi]
  42f485:	mov    QWORD PTR [rsp+0x10],rdi
  42f48a:	mov    eax,DWORD PTR [rbx]
  42f48c:	mov    edi,DWORD PTR [rbx+0xc]
  42f48f:	mov    DWORD PTR [rsp+0x4],esi
  42f493:	mov    QWORD PTR [rsp+0x8],rdx
  42f498:	mov    DWORD PTR [rsp],eax
  42f49b:	cmp    DWORD PTR [rbx+0x8],edi
  42f49e:	jae    42f5a0 <xmlStrEqual@plt+0x2b660>
  42f4a4:	mov    rbp,QWORD PTR [rbx+0x10]
  42f4a8:	lea    r13d,[rax-0x1]
  42f4ac:	mov    r8,rbx
  42f4af:	mov    r11d,DWORD PTR [rsp+0x4]
  42f4b4:	mov    esi,r11d
  42f4b7:	and    esi,r13d
  42f4ba:	mov    eax,esi
  42f4bc:	shr    eax,0x4
  42f4bf:	lea    r9,[rbp+rax*4+0x0]
  42f4c4:	lea    eax,[rsi+rsi*1]
  42f4c7:	and    eax,0x1e
  42f4ca:	shrx   ecx,DWORD PTR [r9],eax
  42f4cf:	test   cl,0x2
  42f4d2:	jne    42f740 <xmlStrEqual@plt+0x2b800>
  42f4d8:	mov    r9d,r11d
  42f4db:	shr    r9d,0x3
  42f4df:	lea    eax,[r11*8+0x0]
  42f4e7:	xor    r9d,eax
  42f4ea:	or     r9d,0x1
  42f4ee:	and    r9d,r13d
  42f4f1:	mov    edi,DWORD PTR [rsp]
  42f4f4:	mov    edx,esi
  42f4f6:	jmp    42f537 <xmlStrEqual@plt+0x2b5f7>
  42f4f8:	nop    DWORD PTR [rax+rax*1+0x0]
  42f500:	mov    rax,QWORD PTR [rbx+0x18]
  42f504:	mov    ecx,edx
  42f506:	cmp    r11d,DWORD PTR [rax+rcx*4]
  42f50a:	je     42fb30 <xmlStrEqual@plt+0x2bbf0>
  42f510:	add    edx,r9d
  42f513:	and    edx,r13d
  42f516:	cmp    esi,edx
  42f518:	je     42f548 <xmlStrEqual@plt+0x2b608>
  42f51a:	mov    r10d,edx
  42f51d:	lea    eax,[rdx+rdx*1]
  42f520:	shr    r10d,0x4
  42f524:	and    eax,0x1e
  42f527:	shrx   ecx,DWORD PTR [rbp+r10*4+0x0],eax
  42f52e:	test   cl,0x2
  42f531:	jne    42fa50 <xmlStrEqual@plt+0x2bb10>
  42f537:	and    ecx,0x1
  42f53a:	je     42f500 <xmlStrEqual@plt+0x2b5c0>
  42f53c:	mov    edi,edx
  42f53e:	add    edx,r9d
  42f541:	and    edx,r13d
  42f544:	cmp    esi,edx
  42f546:	jne    42f51a <xmlStrEqual@plt+0x2b5da>
  42f548:	cmp    edi,DWORD PTR [rsp]
  42f54b:	je     42fb26 <xmlStrEqual@plt+0x2bbe6>
  42f551:	mov    ecx,edi
  42f553:	mov    eax,edi
  42f555:	shr    eax,0x4
  42f558:	lea    r9,[rbp+rax*4+0x0]
  42f55d:	lea    eax,[rdi+rdi*1]
  42f560:	and    eax,0x1e
  42f563:	shrx   edx,DWORD PTR [r9],eax
  42f568:	test   dl,0x2
  42f56b:	jne    42f73c <xmlStrEqual@plt+0x2b7fc>
  42f571:	and    edx,0x1
  42f574:	je     42f762 <xmlStrEqual@plt+0x2b822>
  42f57a:	mov    rdx,QWORD PTR [rbx+0x18]
  42f57e:	mov    edi,DWORD PTR [rsp+0x4]
  42f582:	mov    DWORD PTR [rdx+rcx*4],edi
  42f585:	mov    edx,0x3
  42f58a:	shlx   rax,rdx,rax
  42f58f:	not    eax
  42f591:	and    DWORD PTR [r9],eax
  42f594:	inc    DWORD PTR [rbx+0x4]
  42f597:	jmp    42f762 <xmlStrEqual@plt+0x2b822>
  42f59c:	nop    DWORD PTR [rax+0x0]
  42f5a0:	mov    edx,DWORD PTR [rbx+0x4]
  42f5a3:	mov    edi,DWORD PTR [rsp]
  42f5a6:	lea    eax,[rdx+rdx*1]
  42f5a9:	cmp    eax,edi
  42f5ab:	jae    42f780 <xmlStrEqual@plt+0x2b840>
  42f5b1:	lea    eax,[rdi-0x2]
  42f5b4:	mov    ecx,eax
  42f5b6:	shr    ecx,1
  42f5b8:	or     eax,ecx
  42f5ba:	mov    ecx,eax
  42f5bc:	shr    ecx,0x2
  42f5bf:	or     eax,ecx
  42f5c1:	mov    ecx,eax
  42f5c3:	shr    ecx,0x4
  42f5c6:	or     eax,ecx
  42f5c8:	mov    ecx,eax
  42f5ca:	shr    ecx,0x8
  42f5cd:	or     eax,ecx
  42f5cf:	mov    ecx,eax
  42f5d1:	shr    ecx,0x10
  42f5d4:	or     eax,ecx
  42f5d6:	lea    ecx,[rax+0x1]
  42f5d9:	mov    r13d,eax
  42f5dc:	cmp    ecx,0x3
  42f5df:	ja     42f910 <xmlStrEqual@plt+0x2b9d0>
  42f5e5:	cmp    edx,0x2
  42f5e8:	ja     42fa80 <xmlStrEqual@plt+0x2bb40>
  42f5ee:	mov    DWORD PTR [rsp+0x1c],0x3
  42f5f6:	mov    DWORD PTR [rsp],0x4
  42f5fd:	mov    r13d,0x3
  42f603:	mov    r12d,0x4
  42f609:	mov    rdi,r12
  42f60c:	call   403cd0 <malloc@plt>
  42f611:	mov    rdi,rax
  42f614:	mov    rdx,r12
  42f617:	mov    esi,0xaa
  42f61c:	mov    rbp,rax
  42f61f:	call   4039f0 <memset@plt>
  42f624:	mov    eax,DWORD PTR [rsp]
  42f627:	cmp    DWORD PTR [rbx],eax
  42f629:	jb     42fab0 <xmlStrEqual@plt+0x2bb70>
  42f62f:	xor    r9d,r9d
  42f632:	jmp    42f644 <xmlStrEqual@plt+0x2b704>
  42f634:	nop    DWORD PTR [rax+0x0]
  42f638:	inc    r9d
  42f63b:	cmp    r9d,DWORD PTR [rbx]
  42f63e:	je     42f9d0 <xmlStrEqual@plt+0x2ba90>
  42f644:	mov    eax,r9d
  42f647:	mov    rdi,QWORD PTR [rbx+0x10]
  42f64b:	shr    eax,0x4
  42f64e:	lea    rcx,[rdi+rax*4]
  42f652:	mov    edx,DWORD PTR [rcx]
  42f654:	lea    eax,[r9+r9*1]
  42f658:	and    eax,0x1e
  42f65b:	shrx   esi,edx,eax
  42f660:	and    esi,0x3
  42f663:	jne    42f638 <xmlStrEqual@plt+0x2b6f8>
  42f665:	mov    r14,QWORD PTR [rbx+0x18]
  42f669:	mov    r12,QWORD PTR [rbx+0x20]
  42f66d:	mov    esi,r9d
  42f670:	bts    edx,eax
  42f673:	mov    r8d,DWORD PTR [r14+rsi*4]
  42f677:	mov    rsi,QWORD PTR [r12+rsi*8]
  42f67b:	mov    DWORD PTR [rcx],edx
  42f67d:	mov    DWORD PTR [rsp+0x18],r9d
  42f682:	mov    r9,rsi
  42f685:	nop    DWORD PTR [rax]
  42f688:	mov    esi,r8d
  42f68b:	shr    esi,0x3
  42f68e:	lea    eax,[r8*8+0x0]
  42f696:	xor    esi,eax
  42f698:	mov    ecx,r8d
  42f69b:	or     esi,0x1
  42f69e:	and    ecx,r13d
  42f6a1:	and    esi,r13d
  42f6a4:	jmp    42f6b5 <xmlStrEqual@plt+0x2b775>
  42f6a6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42f6b0:	add    ecx,esi
  42f6b2:	and    ecx,r13d
  42f6b5:	mov    eax,ecx
  42f6b7:	shr    eax,0x4
  42f6ba:	shl    rax,0x2
  42f6be:	lea    r10,[rbp+rax*1+0x0]
  42f6c3:	mov    r11d,DWORD PTR [r10]
  42f6c6:	lea    edx,[rcx+rcx*1]
  42f6c9:	and    edx,0x1e
  42f6cc:	shrx   r15d,r11d,edx
  42f6d1:	and    r15d,0x2
  42f6d5:	je     42f6b0 <xmlStrEqual@plt+0x2b770>
  42f6d7:	mov    esi,0x2
  42f6dc:	shlx   rsi,rsi,rdx
  42f6e1:	andn   r11d,esi,r11d
  42f6e6:	mov    DWORD PTR [r10],r11d
  42f6e9:	mov    esi,ecx
  42f6eb:	lea    r10,[r14+rsi*4]
  42f6ef:	lea    rsi,[r12+rsi*8]
  42f6f3:	cmp    DWORD PTR [rbx],ecx
  42f6f5:	jbe    42f9b0 <xmlStrEqual@plt+0x2ba70>
  42f6fb:	mov    ecx,DWORD PTR [rdi+rax*1]
  42f6fe:	shrx   ecx,ecx,edx
  42f703:	and    ecx,0x3
  42f706:	jne    42f9b0 <xmlStrEqual@plt+0x2ba70>
  42f70c:	mov    ecx,DWORD PTR [r10]
  42f70f:	mov    DWORD PTR [r10],r8d
  42f712:	mov    r10,QWORD PTR [rsi]
  42f715:	mov    QWORD PTR [rsi],r9
  42f718:	mov    esi,0x1
  42f71d:	shlx   rdx,rsi,rdx
  42f722:	mov    rdi,QWORD PTR [rbx+0x10]
  42f726:	mov    r14,QWORD PTR [rbx+0x18]
  42f72a:	or     DWORD PTR [rdi+rax*1],edx
  42f72d:	mov    r12,QWORD PTR [rbx+0x20]
  42f731:	mov    r8d,ecx
  42f734:	mov    r9,r10
  42f737:	jmp    42f688 <xmlStrEqual@plt+0x2b748>
  42f73c:	mov    esi,edi
  42f73e:	xchg   ax,ax
  42f740:	mov    rdx,QWORD PTR [rbx+0x18]
  42f744:	mov    edi,DWORD PTR [rsp+0x4]
  42f748:	mov    ecx,esi
  42f74a:	mov    DWORD PTR [rdx+rcx*4],edi
  42f74d:	mov    edx,0x3
  42f752:	shlx   rax,rdx,rax
  42f757:	not    eax
  42f759:	and    DWORD PTR [r9],eax
  42f75c:	inc    DWORD PTR [rbx+0x4]
  42f75f:	inc    DWORD PTR [rbx+0x8]
  42f762:	mov    rax,QWORD PTR [r8+0x20]
  42f766:	mov    rdi,QWORD PTR [rsp+0x8]
  42f76b:	mov    QWORD PTR [rax+rcx*8],rdi
  42f76f:	add    rsp,0x28
  42f773:	pop    rbx
  42f774:	pop    rbp
  42f775:	pop    r12
  42f777:	pop    r13
  42f779:	pop    r14
  42f77b:	pop    r15
  42f77d:	ret    
  42f77e:	xchg   ax,ax
  42f780:	mov    edi,DWORD PTR [rsp]
  42f783:	mov    eax,edi
  42f785:	shr    eax,1
  42f787:	or     eax,edi
  42f789:	mov    ecx,eax
  42f78b:	shr    ecx,0x2
  42f78e:	or     eax,ecx
  42f790:	mov    ecx,eax
  42f792:	shr    ecx,0x4
  42f795:	or     eax,ecx
  42f797:	mov    ecx,eax
  42f799:	shr    ecx,0x8
  42f79c:	or     eax,ecx
  42f79e:	mov    ecx,eax
  42f7a0:	shr    ecx,0x10
  42f7a3:	or     eax,ecx
  42f7a5:	lea    ecx,[rax+0x1]
  42f7a8:	mov    r13d,eax
  42f7ab:	cmp    ecx,0x3
  42f7ae:	ja     42f960 <xmlStrEqual@plt+0x2ba20>
  42f7b4:	cmp    edx,0x2
  42f7b7:	ja     42fa80 <xmlStrEqual@plt+0x2bb40>
  42f7bd:	mov    DWORD PTR [rsp+0x1c],0x3
  42f7c5:	mov    DWORD PTR [rsp],0x4
  42f7cc:	mov    r13d,0x3
  42f7d2:	mov    r12d,0x4
  42f7d8:	mov    rdi,r12
  42f7db:	call   403cd0 <malloc@plt>
  42f7e0:	mov    rdi,rax
  42f7e3:	mov    rdx,r12
  42f7e6:	mov    esi,0xaa
  42f7eb:	mov    rbp,rax
  42f7ee:	call   4039f0 <memset@plt>
  42f7f3:	mov    r8d,DWORD PTR [rbx]
  42f7f6:	cmp    DWORD PTR [rsp],r8d
  42f7fa:	ja     42faf0 <xmlStrEqual@plt+0x2bbb0>
  42f800:	xor    r9d,r9d
  42f803:	test   r8d,r8d
  42f806:	jne    42f81c <xmlStrEqual@plt+0x2b8dc>
  42f808:	jmp    42fa04 <xmlStrEqual@plt+0x2bac4>
  42f80d:	nop    DWORD PTR [rax]
  42f810:	inc    r9d
  42f813:	cmp    r9d,r8d
  42f816:	je     42f9d0 <xmlStrEqual@plt+0x2ba90>
  42f81c:	mov    eax,r9d
  42f81f:	mov    rdi,QWORD PTR [rbx+0x10]
  42f823:	shr    eax,0x4
  42f826:	lea    rcx,[rdi+rax*4]
  42f82a:	mov    edx,DWORD PTR [rcx]
  42f82c:	lea    eax,[r9+r9*1]
  42f830:	and    eax,0x1e
  42f833:	shrx   esi,edx,eax
  42f838:	and    esi,0x3
  42f83b:	jne    42f810 <xmlStrEqual@plt+0x2b8d0>
  42f83d:	mov    r14,QWORD PTR [rbx+0x18]
  42f841:	mov    r12,QWORD PTR [rbx+0x20]
  42f845:	mov    esi,r9d
  42f848:	bts    edx,eax
  42f84b:	mov    r8d,DWORD PTR [r14+rsi*4]
  42f84f:	mov    rsi,QWORD PTR [r12+rsi*8]
  42f853:	mov    DWORD PTR [rcx],edx
  42f855:	mov    DWORD PTR [rsp+0x18],r9d
  42f85a:	mov    r9,rsi
  42f85d:	nop    DWORD PTR [rax]
  42f860:	mov    esi,r8d
  42f863:	shr    esi,0x3
  42f866:	lea    eax,[r8*8+0x0]
  42f86e:	xor    esi,eax
  42f870:	mov    ecx,r8d
  42f873:	or     esi,0x1
  42f876:	and    ecx,r13d
  42f879:	and    esi,r13d
  42f87c:	jmp    42f885 <xmlStrEqual@plt+0x2b945>
  42f87e:	xchg   ax,ax
  42f880:	add    ecx,esi
  42f882:	and    ecx,r13d
  42f885:	mov    eax,ecx
  42f887:	shr    eax,0x4
  42f88a:	shl    rax,0x2
  42f88e:	lea    r10,[rbp+rax*1+0x0]
  42f893:	mov    r11d,DWORD PTR [r10]
  42f896:	lea    edx,[rcx+rcx*1]
  42f899:	and    edx,0x1e
  42f89c:	shrx   r15d,r11d,edx
  42f8a1:	and    r15d,0x2
  42f8a5:	je     42f880 <xmlStrEqual@plt+0x2b940>
  42f8a7:	mov    esi,0x2
  42f8ac:	shlx   rsi,rsi,rdx
  42f8b1:	andn   r11d,esi,r11d
  42f8b6:	mov    DWORD PTR [r10],r11d
  42f8b9:	mov    esi,ecx
  42f8bb:	lea    r10,[r14+rsi*4]
  42f8bf:	lea    rsi,[r12+rsi*8]
  42f8c3:	cmp    DWORD PTR [rbx],ecx
  42f8c5:	jbe    42fa30 <xmlStrEqual@plt+0x2baf0>
  42f8cb:	mov    ecx,DWORD PTR [rdi+rax*1]
  42f8ce:	shrx   ecx,ecx,edx
  42f8d3:	and    ecx,0x3
  42f8d6:	jne    42fa30 <xmlStrEqual@plt+0x2baf0>
  42f8dc:	mov    ecx,DWORD PTR [r10]
  42f8df:	mov    DWORD PTR [r10],r8d
  42f8e2:	mov    r10,QWORD PTR [rsi]
  42f8e5:	mov    QWORD PTR [rsi],r9
  42f8e8:	mov    esi,0x1
  42f8ed:	shlx   rdx,rsi,rdx
  42f8f2:	mov    rdi,QWORD PTR [rbx+0x10]
  42f8f6:	mov    r14,QWORD PTR [rbx+0x18]
  42f8fa:	or     DWORD PTR [rdi+rax*1],edx
  42f8fd:	mov    r12,QWORD PTR [rbx+0x20]
  42f901:	mov    r8d,ecx
  42f904:	mov    r9,r10
  42f907:	jmp    42f860 <xmlStrEqual@plt+0x2b920>
  42f90c:	nop    DWORD PTR [rax+0x0]
  42f910:	mov    eax,ecx
  42f912:	vxorpd xmm0,xmm0,xmm0
  42f916:	vcvtsi2sd xmm0,xmm0,rax
  42f91b:	vmovsd xmm1,QWORD PTR [rip+0x1d5b5]        # 44ced8 <xmlStrEqual@plt+0x48f98>
  42f923:	vfmadd132sd xmm0,xmm1,QWORD PTR [rip+0x1d5a4]        # 44ced0 <xmlStrEqual@plt+0x48f90>
  42f92c:	vcvttsd2si rax,xmm0
  42f931:	mov    DWORD PTR [rsp+0x1c],eax
  42f935:	cmp    edx,eax
  42f937:	jae    42fa68 <xmlStrEqual@plt+0x2bb28>
  42f93d:	cmp    ecx,0xf
  42f940:	jbe    42faa0 <xmlStrEqual@plt+0x2bb60>
  42f946:	mov    r12d,ecx
  42f949:	shr    r12d,0x4
  42f94d:	shl    r12,0x2
  42f951:	mov    DWORD PTR [rsp],ecx
  42f954:	jmp    42f609 <xmlStrEqual@plt+0x2b6c9>
  42f959:	nop    DWORD PTR [rax+0x0]
  42f960:	mov    eax,ecx
  42f962:	vxorpd xmm0,xmm0,xmm0
  42f966:	vcvtsi2sd xmm0,xmm0,rax
  42f96b:	vmovsd xmm2,QWORD PTR [rip+0x1d565]        # 44ced8 <xmlStrEqual@plt+0x48f98>
  42f973:	vfmadd132sd xmm0,xmm2,QWORD PTR [rip+0x1d554]        # 44ced0 <xmlStrEqual@plt+0x48f90>
  42f97c:	vcvttsd2si rax,xmm0
  42f981:	mov    DWORD PTR [rsp+0x1c],eax
  42f985:	cmp    edx,eax
  42f987:	jae    42fa68 <xmlStrEqual@plt+0x2bb28>
  42f98d:	cmp    ecx,0xf
  42f990:	jbe    42fa90 <xmlStrEqual@plt+0x2bb50>
  42f996:	mov    r12d,ecx
  42f999:	shr    r12d,0x4
  42f99d:	shl    r12,0x2
  42f9a1:	mov    DWORD PTR [rsp],ecx
  42f9a4:	jmp    42f7d8 <xmlStrEqual@plt+0x2b898>
  42f9a9:	nop    DWORD PTR [rax+0x0]
  42f9b0:	mov    rax,r9
  42f9b3:	mov    DWORD PTR [r10],r8d
  42f9b6:	mov    r9d,DWORD PTR [rsp+0x18]
  42f9bb:	mov    QWORD PTR [rsi],rax
  42f9be:	inc    r9d
  42f9c1:	cmp    r9d,DWORD PTR [rbx]
  42f9c4:	jne    42f644 <xmlStrEqual@plt+0x2b704>
  42f9ca:	nop    WORD PTR [rax+rax*1+0x0]
  42f9d0:	cmp    DWORD PTR [rsp],r9d
  42f9d4:	jae    42fa04 <xmlStrEqual@plt+0x2bac4>
  42f9d6:	mov    r12d,DWORD PTR [rsp]
  42f9da:	mov    rdi,QWORD PTR [rbx+0x18]
  42f9de:	lea    rsi,[r12*4+0x0]
  42f9e6:	call   403e10 <realloc@plt>
  42f9eb:	mov    QWORD PTR [rbx+0x18],rax
  42f9ef:	mov    rdi,QWORD PTR [rbx+0x20]
  42f9f3:	lea    rsi,[r12*8+0x0]
  42f9fb:	call   403e10 <realloc@plt>
  42fa00:	mov    QWORD PTR [rbx+0x20],rax
  42fa04:	mov    rdi,QWORD PTR [rbx+0x10]
  42fa08:	call   4037b0 <free@plt>
  42fa0d:	mov    eax,DWORD PTR [rsp]
  42fa10:	mov    QWORD PTR [rbx+0x10],rbp
  42fa14:	mov    DWORD PTR [rbx],eax
  42fa16:	mov    eax,DWORD PTR [rbx+0x4]
  42fa19:	mov    DWORD PTR [rbx+0x8],eax
  42fa1c:	mov    eax,DWORD PTR [rsp+0x1c]
  42fa20:	mov    DWORD PTR [rbx+0xc],eax
  42fa23:	mov    rax,QWORD PTR [rsp+0x10]
  42fa28:	mov    r8,QWORD PTR [rax]
  42fa2b:	jmp    42f4af <xmlStrEqual@plt+0x2b56f>
  42fa30:	mov    DWORD PTR [r10],r8d
  42fa33:	mov    rax,r9
  42fa36:	mov    QWORD PTR [rsi],rax
  42fa39:	mov    r9d,DWORD PTR [rsp+0x18]
  42fa3e:	mov    r8d,DWORD PTR [rbx]
  42fa41:	jmp    42f810 <xmlStrEqual@plt+0x2b8d0>
  42fa46:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42fa50:	cmp    edi,DWORD PTR [rsp]
  42fa53:	jne    42f551 <xmlStrEqual@plt+0x2b611>
  42fa59:	lea    r9,[rbp+r10*4+0x0]
  42fa5e:	mov    esi,edx
  42fa60:	jmp    42f740 <xmlStrEqual@plt+0x2b800>
  42fa65:	nop    DWORD PTR [rax]
  42fa68:	mov    eax,DWORD PTR [rsp]
  42fa6b:	mov    rbp,QWORD PTR [rbx+0x10]
  42fa6f:	lea    r13d,[rax-0x1]
  42fa73:	mov    r8,rbx
  42fa76:	jmp    42f4af <xmlStrEqual@plt+0x2b56f>
  42fa7b:	nop    DWORD PTR [rax+rax*1+0x0]
  42fa80:	mov    rbp,QWORD PTR [rbx+0x10]
  42fa84:	lea    r13d,[rdi-0x1]
  42fa88:	mov    r8,rbx
  42fa8b:	jmp    42f4af <xmlStrEqual@plt+0x2b56f>
  42fa90:	mov    DWORD PTR [rsp],ecx
  42fa93:	mov    r12d,0x4
  42fa99:	jmp    42f7d8 <xmlStrEqual@plt+0x2b898>
  42fa9e:	xchg   ax,ax
  42faa0:	mov    DWORD PTR [rsp],ecx
  42faa3:	mov    r12d,0x4
  42faa9:	jmp    42f609 <xmlStrEqual@plt+0x2b6c9>
  42faae:	xchg   ax,ax
  42fab0:	mov    r12d,eax
  42fab3:	mov    rdi,QWORD PTR [rbx+0x18]
  42fab7:	lea    rsi,[r12*4+0x0]
  42fabf:	call   403e10 <realloc@plt>
  42fac4:	mov    QWORD PTR [rbx+0x18],rax
  42fac8:	mov    rdi,QWORD PTR [rbx+0x20]
  42facc:	lea    rsi,[r12*8+0x0]
  42fad4:	call   403e10 <realloc@plt>
  42fad9:	mov    QWORD PTR [rbx+0x20],rax
  42fadd:	mov    eax,DWORD PTR [rbx]
  42fadf:	test   eax,eax
  42fae1:	jne    42f62f <xmlStrEqual@plt+0x2b6ef>
  42fae7:	jmp    42fa04 <xmlStrEqual@plt+0x2bac4>
  42faec:	nop    DWORD PTR [rax+0x0]
  42faf0:	mov    r12d,DWORD PTR [rsp]
  42faf4:	mov    rdi,QWORD PTR [rbx+0x18]
  42faf8:	lea    rsi,[r12*4+0x0]
  42fb00:	call   403e10 <realloc@plt>
  42fb05:	mov    QWORD PTR [rbx+0x18],rax
  42fb09:	mov    rdi,QWORD PTR [rbx+0x20]
  42fb0d:	lea    rsi,[r12*8+0x0]
  42fb15:	call   403e10 <realloc@plt>
  42fb1a:	mov    QWORD PTR [rbx+0x20],rax
  42fb1e:	mov    r8d,DWORD PTR [rbx]
  42fb21:	jmp    42f800 <xmlStrEqual@plt+0x2b8c0>
  42fb26:	mov    ecx,edx
  42fb28:	nop    DWORD PTR [rax+rax*1+0x0]
  42fb30:	mov    edi,edx
  42fb32:	jmp    42f553 <xmlStrEqual@plt+0x2b613>
  42fb37:	nop    WORD PTR [rax+rax*1+0x0]
  42fb40:	endbr64 
  42fb44:	mov    rax,QWORD PTR [rdi]
  42fb47:	mov    r11d,DWORD PTR [rax]
  42fb4a:	test   r11d,r11d
  42fb4d:	je     42fc48 <xmlStrEqual@plt+0x2bd08>
  42fb53:	push   r15
  42fb55:	mov    edx,esi
  42fb57:	lea    r10d,[r11-0x1]
  42fb5b:	push   r14
  42fb5d:	shr    edx,0x3
  42fb60:	lea    ecx,[rsi*8+0x0]
  42fb67:	push   r13
  42fb69:	mov    r14d,r10d
  42fb6c:	xor    edx,ecx
  42fb6e:	push   r12
  42fb70:	and    r14d,esi
  42fb73:	or     edx,0x1
  42fb76:	push   rbp
  42fb77:	and    edx,r10d
  42fb7a:	push   rbx
  42fb7b:	mov    ebx,r14d
  42fb7e:	sub    rsp,0x18
  42fb82:	mov    r15,QWORD PTR [rax+0x10]
  42fb86:	mov    QWORD PTR [rsp+0x8],rdi
  42fb8b:	jmp    42fbab <xmlStrEqual@plt+0x2bc6b>
  42fb8d:	nop    DWORD PTR [rax]
  42fb90:	test   r8b,0x1
  42fb94:	jne    42fba1 <xmlStrEqual@plt+0x2bc61>
  42fb96:	mov    rdi,QWORD PTR [rax+0x18]
  42fb9a:	mov    ecx,ebx
  42fb9c:	cmp    esi,DWORD PTR [rdi+rcx*4]
  42fb9f:	je     42fbcf <xmlStrEqual@plt+0x2bc8f>
  42fba1:	add    ebx,edx
  42fba3:	and    ebx,r10d
  42fba6:	cmp    r14d,ebx
  42fba9:	je     42fc14 <xmlStrEqual@plt+0x2bcd4>
  42fbab:	mov    ebp,ebx
  42fbad:	shr    ebp,0x4
  42fbb0:	shl    rbp,0x2
  42fbb4:	lea    r13,[r15+rbp*1]
  42fbb8:	mov    r9d,DWORD PTR [r13+0x0]
  42fbbc:	lea    r12d,[rbx+rbx*1]
  42fbc0:	and    r12d,0x1e
  42fbc4:	shrx   r8d,r9d,r12d
  42fbc9:	test   r8b,0x2
  42fbcd:	je     42fb90 <xmlStrEqual@plt+0x2bc50>
  42fbcf:	and    r8d,0x3
  42fbd3:	mov    rdi,QWORD PTR [rsp+0x8]
  42fbd8:	jne    42fc14 <xmlStrEqual@plt+0x2bcd4>
  42fbda:	cmp    r11d,ebx
  42fbdd:	je     42fc14 <xmlStrEqual@plt+0x2bcd4>
  42fbdf:	mov    rdx,QWORD PTR [rdi+0x8]
  42fbe3:	test   rdx,rdx
  42fbe6:	je     42fc28 <xmlStrEqual@plt+0x2bce8>
  42fbe8:	mov    rax,QWORD PTR [rax+0x20]
  42fbec:	mov    ecx,ebx
  42fbee:	mov    r13,rdi
  42fbf1:	mov    rdi,QWORD PTR [rax+rcx*8]
  42fbf5:	call   rdx
  42fbf7:	mov    rax,QWORD PTR [r13+0x0]
  42fbfb:	cmp    ebx,DWORD PTR [rax]
  42fbfd:	je     42fc14 <xmlStrEqual@plt+0x2bcd4>
  42fbff:	add    rbp,QWORD PTR [rax+0x10]
  42fc03:	mov    r9d,DWORD PTR [rbp+0x0]
  42fc07:	mov    r13,rbp
  42fc0a:	shrx   edx,r9d,r12d
  42fc0f:	and    edx,0x3
  42fc12:	je     42fc28 <xmlStrEqual@plt+0x2bce8>
  42fc14:	add    rsp,0x18
  42fc18:	pop    rbx
  42fc19:	pop    rbp
  42fc1a:	pop    r12
  42fc1c:	pop    r13
  42fc1e:	pop    r14
  42fc20:	pop    r15
  42fc22:	ret    
  42fc23:	nop    DWORD PTR [rax+rax*1+0x0]
  42fc28:	bts    r9d,r12d
  42fc2c:	mov    DWORD PTR [r13+0x0],r9d
  42fc30:	dec    DWORD PTR [rax+0x4]
  42fc33:	add    rsp,0x18
  42fc37:	pop    rbx
  42fc38:	pop    rbp
  42fc39:	pop    r12
  42fc3b:	pop    r13
  42fc3d:	pop    r14
  42fc3f:	pop    r15
  42fc41:	ret    
  42fc42:	nop    WORD PTR [rax+rax*1+0x0]
  42fc48:	ret    
  42fc49:	nop    DWORD PTR [rax+0x0]
  42fc50:	endbr64 
  42fc54:	mov    rdi,QWORD PTR [rdi]
  42fc57:	xor    eax,eax
  42fc59:	mov    r11d,DWORD PTR [rdi]
  42fc5c:	test   r11d,r11d
  42fc5f:	je     42fce8 <xmlStrEqual@plt+0x2bda8>
  42fc65:	push   rbp
  42fc66:	mov    edx,esi
  42fc68:	lea    r10d,[r11-0x1]
  42fc6c:	push   rbx
  42fc6d:	lea    eax,[rsi*8+0x0]
  42fc74:	shr    edx,0x3
  42fc77:	xor    edx,eax
  42fc79:	mov    ebx,r10d
  42fc7c:	and    ebx,esi
  42fc7e:	or     edx,0x1
  42fc81:	and    edx,r10d
  42fc84:	mov    rbp,QWORD PTR [rdi+0x10]
  42fc88:	mov    eax,ebx
  42fc8a:	jmp    42fcab <xmlStrEqual@plt+0x2bd6b>
  42fc8c:	nop    DWORD PTR [rax+0x0]
  42fc90:	test   cl,0x1
  42fc93:	jne    42fca2 <xmlStrEqual@plt+0x2bd62>
  42fc95:	mov    r9,QWORD PTR [rdi+0x18]
  42fc99:	mov    r8d,eax
  42fc9c:	cmp    esi,DWORD PTR [r9+r8*4]
  42fca0:	je     42fcca <xmlStrEqual@plt+0x2bd8a>
  42fca2:	add    eax,edx
  42fca4:	and    eax,r10d
  42fca7:	cmp    ebx,eax
  42fca9:	je     42fce0 <xmlStrEqual@plt+0x2bda0>
  42fcab:	mov    r9d,eax
  42fcae:	lea    ecx,[rax+rax*1]
  42fcb1:	and    ecx,0x1e
  42fcb4:	shr    r9d,0x4
  42fcb8:	mov    r8d,ecx
  42fcbb:	mov    ecx,DWORD PTR [rbp+r9*4+0x0]
  42fcc0:	shrx   ecx,ecx,r8d
  42fcc5:	test   cl,0x2
  42fcc8:	je     42fc90 <xmlStrEqual@plt+0x2bd50>
  42fcca:	and    ecx,0x3
  42fccd:	jne    42fce0 <xmlStrEqual@plt+0x2bda0>
  42fccf:	cmp    r11d,eax
  42fcd2:	je     42fce0 <xmlStrEqual@plt+0x2bda0>
  42fcd4:	mov    rdx,QWORD PTR [rdi+0x20]
  42fcd8:	pop    rbx
  42fcd9:	mov    rax,QWORD PTR [rdx+rax*8]
  42fcdd:	pop    rbp
  42fcde:	ret    
  42fcdf:	nop
  42fce0:	pop    rbx
  42fce1:	xor    eax,eax
  42fce3:	pop    rbp
  42fce4:	ret    
  42fce5:	nop    DWORD PTR [rax]
  42fce8:	ret    
  42fce9:	nop    DWORD PTR [rax+0x0]
  42fcf0:	endbr64 
  42fcf4:	test   rdi,rdi
  42fcf7:	je     42fd80 <xmlStrEqual@plt+0x2be40>
  42fcfd:	push   r12
  42fcff:	mov    r12,rdi
  42fd02:	push   rbp
  42fd03:	push   rbx
  42fd04:	mov    rbp,QWORD PTR [rdi]
  42fd07:	mov    eax,DWORD PTR [rbp+0x0]
  42fd0a:	test   eax,eax
  42fd0c:	je     42fd4e <xmlStrEqual@plt+0x2be0e>
  42fd0e:	xor    ebx,ebx
  42fd10:	mov    ecx,ebx
  42fd12:	mov    rsi,QWORD PTR [rbp+0x10]
  42fd16:	lea    eax,[rbx+rbx*1]
  42fd19:	and    eax,0x1e
  42fd1c:	shr    ecx,0x4
  42fd1f:	mov    edx,eax
  42fd21:	mov    eax,DWORD PTR [rsi+rcx*4]
  42fd24:	shrx   eax,eax,edx
  42fd29:	test   al,0x3
  42fd2b:	jne    42fd47 <xmlStrEqual@plt+0x2be07>
  42fd2d:	mov    rdx,QWORD PTR [r12+0x8]
  42fd32:	test   rdx,rdx
  42fd35:	je     42fd47 <xmlStrEqual@plt+0x2be07>
  42fd37:	mov    rcx,QWORD PTR [rbp+0x20]
  42fd3b:	mov    eax,ebx
  42fd3d:	mov    rdi,QWORD PTR [rcx+rax*8]
  42fd41:	call   rdx
  42fd43:	mov    rbp,QWORD PTR [r12]
  42fd47:	inc    ebx
  42fd49:	cmp    DWORD PTR [rbp+0x0],ebx
  42fd4c:	jne    42fd10 <xmlStrEqual@plt+0x2bdd0>
  42fd4e:	mov    rdi,QWORD PTR [rbp+0x18]
  42fd52:	call   4037b0 <free@plt>
  42fd57:	mov    rdi,QWORD PTR [rbp+0x10]
  42fd5b:	call   4037b0 <free@plt>
  42fd60:	mov    rdi,QWORD PTR [rbp+0x20]
  42fd64:	call   4037b0 <free@plt>
  42fd69:	mov    rdi,rbp
  42fd6c:	call   4037b0 <free@plt>
  42fd71:	pop    rbx
  42fd72:	pop    rbp
  42fd73:	mov    rdi,r12
  42fd76:	pop    r12
  42fd78:	jmp    4037b0 <free@plt>
  42fd7d:	nop    DWORD PTR [rax]
  42fd80:	ret    
  42fd81:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  42fd8c:	nop    DWORD PTR [rax+0x0]
  42fd90:	endbr64 
  42fd94:	push   r12
  42fd96:	mov    r12,rdi
  42fd99:	push   rbp
  42fd9a:	push   rbx
  42fd9b:	call   42dc90 <xmlStrEqual@plt+0x29d50>
  42fda0:	mov    rsi,QWORD PTR [r12]
  42fda4:	mov    rbp,rax
  42fda7:	mov    eax,DWORD PTR [rsi]
  42fda9:	test   eax,eax
  42fdab:	je     42fdf7 <xmlStrEqual@plt+0x2beb7>
  42fdad:	xor    ebx,ebx
  42fdaf:	jmp    42fdbe <xmlStrEqual@plt+0x2be7e>
  42fdb1:	nop    DWORD PTR [rax+0x0]
  42fdb8:	inc    ebx
  42fdba:	cmp    DWORD PTR [rsi],ebx
  42fdbc:	je     42fdf7 <xmlStrEqual@plt+0x2beb7>
  42fdbe:	mov    ecx,ebx
  42fdc0:	mov    rdi,QWORD PTR [rsi+0x10]
  42fdc4:	lea    eax,[rbx+rbx*1]
  42fdc7:	and    eax,0x1e
  42fdca:	shr    ecx,0x4
  42fdcd:	mov    edx,eax
  42fdcf:	mov    eax,DWORD PTR [rdi+rcx*4]
  42fdd2:	shrx   eax,eax,edx
  42fdd7:	test   al,0x3
  42fdd9:	jne    42fdb8 <xmlStrEqual@plt+0x2be78>
  42fddb:	mov    rdx,QWORD PTR [rsi+0x20]
  42fddf:	mov    eax,ebx
  42fde1:	mov    rdi,QWORD PTR [rdx+rax*8]
  42fde5:	mov    rsi,rbp
  42fde8:	call   42dcf0 <xmlStrEqual@plt+0x29db0>
  42fded:	mov    rsi,QWORD PTR [r12]
  42fdf1:	inc    ebx
  42fdf3:	cmp    DWORD PTR [rsi],ebx
  42fdf5:	jne    42fdbe <xmlStrEqual@plt+0x2be7e>
  42fdf7:	pop    rbx
  42fdf8:	mov    rax,rbp
  42fdfb:	pop    rbp
  42fdfc:	pop    r12
  42fdfe:	ret    
  42fdff:	nop
  42fe00:	endbr64 
  42fe04:	push   r12
  42fe06:	push   rbp
  42fe07:	push   rbx
  42fe08:	sub    rsp,0x1000
  42fe0f:	or     QWORD PTR [rsp],0x0
  42fe14:	sub    rsp,0x10
  42fe18:	mov    rbp,rdi
  42fe1b:	mov    rax,QWORD PTR fs:0x28
  42fe24:	mov    QWORD PTR [rsp+0x1008],rax
  42fe2c:	xor    eax,eax
  42fe2e:	call   403850 <if_nametoindex@plt>
  42fe33:	xor    edx,edx
  42fe35:	mov    esi,0x2
  42fe3a:	mov    edi,0x10
  42fe3f:	mov    r12d,eax
  42fe42:	call   403880 <socket@plt>
  42fe47:	test   eax,eax
  42fe49:	js     42fef0 <xmlStrEqual@plt+0x2bfb0>
  42fe4f:	mov    r8,rsp
  42fe52:	xor    esi,esi
  42fe54:	mov    rdi,r8
  42fe57:	mov    edx,0x1000
  42fe5c:	mov    ebx,eax
  42fe5e:	call   4039f0 <memset@plt>
  42fe63:	mov    r8,rax
  42fe66:	movabs rax,0x501001300000020
  42fe70:	mov    QWORD PTR [rsp],rax
  42fe74:	xor    ecx,ecx
  42fe76:	movabs rax,0xffffffff00000041
  42fe80:	mov    edx,0x20
  42fe85:	mov    rsi,r8
  42fe88:	mov    edi,ebx
  42fe8a:	mov    DWORD PTR [rsp+0x14],r12d
  42fe8f:	mov    QWORD PTR [rsp+0x18],rax
  42fe94:	call   4039c0 <send@plt>
  42fe99:	test   eax,eax
  42fe9b:	js     42ff10 <xmlStrEqual@plt+0x2bfd0>
  42fe9d:	mov    rax,0x469e3c
  42fea4:	mov    eax,DWORD PTR [rax]
  42fea6:	test   eax,eax
  42fea8:	jg     42fed8 <xmlStrEqual@plt+0x2bf98>
  42feaa:	mov    edi,ebx
  42feac:	call   403f30 <close@plt>
  42feb1:	mov    eax,0x1
  42feb6:	mov    rcx,QWORD PTR [rsp+0x1008]
  42febe:	xor    rcx,QWORD PTR fs:0x28
  42fec7:	jne    42ff40 <xmlStrEqual@plt+0x2c000>
  42fec9:	add    rsp,0x1010
  42fed0:	pop    rbx
  42fed1:	pop    rbp
  42fed2:	pop    r12
  42fed4:	ret    
  42fed5:	nop    DWORD PTR [rax]
  42fed8:	mov    rdx,rbp
  42fedb:	lea    rsi,[rip+0x20844]        # 450726 <xmlStrEqual@plt+0x4c7e6>
  42fee2:	mov    edi,0x5
  42fee7:	xor    eax,eax
  42fee9:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  42feee:	jmp    42feaa <xmlStrEqual@plt+0x2bf6a>
  42fef0:	xor    eax,eax
  42fef2:	lea    rsi,[rip+0x2056f]        # 450468 <xmlStrEqual@plt+0x4c528>
  42fef9:	mov    edi,0x2
  42fefe:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  42ff03:	xor    eax,eax
  42ff05:	jmp    42feb6 <xmlStrEqual@plt+0x2bf76>
  42ff07:	nop    WORD PTR [rax+rax*1+0x0]
  42ff10:	call   4037f0 <__errno_location@plt>
  42ff15:	mov    edi,DWORD PTR [rax]
  42ff17:	call   403910 <strerror@plt>
  42ff1c:	mov    rdx,rax
  42ff1f:	lea    rsi,[rip+0x2057a]        # 4504a0 <xmlStrEqual@plt+0x4c560>
  42ff26:	mov    edi,0x2
  42ff2b:	xor    eax,eax
  42ff2d:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  42ff32:	mov    edi,ebx
  42ff34:	call   403f30 <close@plt>
  42ff39:	xor    eax,eax
  42ff3b:	jmp    42feb6 <xmlStrEqual@plt+0x2bf76>
  42ff40:	call   403c00 <__stack_chk_fail@plt>
  42ff45:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  42ff50:	endbr64 
  42ff54:	push   r15
  42ff56:	push   r14
  42ff58:	push   r13
  42ff5a:	mov    r13d,edx
  42ff5d:	push   r12
  42ff5f:	mov    r12,rsi
  42ff62:	push   rbp
  42ff63:	push   rbx
  42ff64:	sub    rsp,0x38
  42ff68:	mov    rax,QWORD PTR fs:0x28
  42ff71:	mov    QWORD PTR [rsp+0x28],rax
  42ff76:	xor    eax,eax
  42ff78:	test   edi,edi
  42ff7a:	je     4300d0 <xmlStrEqual@plt+0x2c190>
  42ff80:	cmp    edi,0x1
  42ff83:	je     42ffc0 <xmlStrEqual@plt+0x2c080>
  42ff85:	lea    rsi,[rip+0x2053c]        # 4504c8 <xmlStrEqual@plt+0x4c588>
  42ff8c:	mov    edi,0x1
  42ff91:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  42ff96:	xor    ebx,ebx
  42ff98:	mov    rcx,QWORD PTR [rsp+0x28]
  42ff9d:	xor    rcx,QWORD PTR fs:0x28
  42ffa6:	mov    eax,ebx
  42ffa8:	jne    4301ec <xmlStrEqual@plt+0x2c2ac>
  42ffae:	add    rsp,0x38
  42ffb2:	pop    rbx
  42ffb3:	pop    rbp
  42ffb4:	pop    r12
  42ffb6:	pop    r13
  42ffb8:	pop    r14
  42ffba:	pop    r15
  42ffbc:	ret    
  42ffbd:	nop    DWORD PTR [rax]
  42ffc0:	mov    r14d,0x1002
  42ffc6:	mov    esi,0x2
  42ffcb:	lea    rdi,[rip+0x20765]        # 450737 <xmlStrEqual@plt+0x4c7f7>
  42ffd2:	xor    eax,eax
  42ffd4:	call   403aa0 <open@plt>
  42ffd9:	mov    ebx,eax
  42ffdb:	test   eax,eax
  42ffdd:	js     4300e0 <xmlStrEqual@plt+0x2c1a0>
  42ffe3:	mov    rbp,rsp
  42ffe6:	vpxor  xmm0,xmm0,xmm0
  42ffea:	mov    edx,0xf
  42ffef:	mov    rsi,r12
  42fff2:	mov    rdi,rbp
  42fff5:	vmovaps XMMWORD PTR [rsp+0x10],xmm0
  42fffb:	vmovaps XMMWORD PTR [rsp],xmm0
  430000:	mov    QWORD PTR [rsp+0x20],0x0
  430009:	mov    WORD PTR [rsp+0x10],r14w
  43000f:	call   4039e0 <strncpy@plt>
  430014:	xor    eax,eax
  430016:	mov    rdx,rbp
  430019:	mov    esi,0x400454ca
  43001e:	mov    edi,ebx
  430020:	call   403d30 <ioctl@plt>
  430025:	test   eax,eax
  430027:	js     430140 <xmlStrEqual@plt+0x2c200>
  43002d:	xor    edx,edx
  43002f:	mov    esi,0x2
  430034:	mov    edi,0x2
  430039:	call   403880 <socket@plt>
  43003e:	mov    r14d,eax
  430041:	mov    edi,eax
  430043:	mov    rdx,rbp
  430046:	xor    eax,eax
  430048:	mov    esi,0x8933
  43004d:	call   403d30 <ioctl@plt>
  430052:	test   eax,eax
  430054:	js     430190 <xmlStrEqual@plt+0x2c250>
  43005a:	mov    r15,0x469e3c
  430061:	cmp    DWORD PTR [r15],0x2
  430065:	jle    43007e <xmlStrEqual@plt+0x2c13e>
  430067:	mov    edx,DWORD PTR [rsp+0x10]
  43006b:	lea    rsi,[rip+0x206d2]        # 450744 <xmlStrEqual@plt+0x4c804>
  430072:	mov    edi,0x7
  430077:	xor    eax,eax
  430079:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  43007e:	xor    eax,eax
  430080:	mov    rdx,rbp
  430083:	mov    esi,0x8922
  430088:	mov    edi,r14d
  43008b:	mov    DWORD PTR [rsp+0x10],r13d
  430090:	call   403d30 <ioctl@plt>
  430095:	test   eax,eax
  430097:	js     4301c0 <xmlStrEqual@plt+0x2c280>
  43009d:	mov    eax,DWORD PTR [r15]
  4300a0:	test   eax,eax
  4300a2:	jg     430100 <xmlStrEqual@plt+0x2c1c0>
  4300a4:	mov    edi,r14d
  4300a7:	call   403f30 <close@plt>
  4300ac:	cmp    DWORD PTR [r15],0x1
  4300b0:	jg     430120 <xmlStrEqual@plt+0x2c1e0>
  4300b2:	mov    rdi,r12
  4300b5:	call   42fe00 <xmlStrEqual@plt+0x2bec0>
  4300ba:	cmp    eax,0x1
  4300bd:	je     42ff98 <xmlStrEqual@plt+0x2c058>
  4300c3:	xor    ebx,ebx
  4300c5:	jmp    42ff98 <xmlStrEqual@plt+0x2c058>
  4300ca:	nop    WORD PTR [rax+rax*1+0x0]
  4300d0:	mov    r14d,0x1003
  4300d6:	jmp    42ffc6 <xmlStrEqual@plt+0x2c086>
  4300db:	nop    DWORD PTR [rax+rax*1+0x0]
  4300e0:	lea    rsi,[rip+0x20409]        # 4504f0 <xmlStrEqual@plt+0x4c5b0>
  4300e7:	mov    edi,0x1
  4300ec:	xor    eax,eax
  4300ee:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  4300f3:	xor    ebx,ebx
  4300f5:	jmp    42ff98 <xmlStrEqual@plt+0x2c058>
  4300fa:	nop    WORD PTR [rax+rax*1+0x0]
  430100:	mov    edx,r13d
  430103:	lea    rsi,[rip+0x20651]        # 45075b <xmlStrEqual@plt+0x4c81b>
  43010a:	mov    edi,0x5
  43010f:	xor    eax,eax
  430111:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  430116:	jmp    4300a4 <xmlStrEqual@plt+0x2c164>
  430118:	nop    DWORD PTR [rax+rax*1+0x0]
  430120:	mov    edx,ebx
  430122:	lea    rsi,[rip+0x20648]        # 450771 <xmlStrEqual@plt+0x4c831>
  430129:	mov    edi,0x6
  43012e:	xor    eax,eax
  430130:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  430135:	jmp    4300b2 <xmlStrEqual@plt+0x2c172>
  43013a:	nop    WORD PTR [rax+rax*1+0x0]
  430140:	mov    edi,ebx
  430142:	call   403f30 <close@plt>
  430147:	call   4037f0 <__errno_location@plt>
  43014c:	mov    edi,DWORD PTR [rax]
  43014e:	mov    rbx,rax
  430151:	call   403910 <strerror@plt>
  430156:	mov    rdx,rax
  430159:	lea    rsi,[rip+0x203b8]        # 450518 <xmlStrEqual@plt+0x4c5d8>
  430160:	xor    eax,eax
  430162:	mov    edi,0x1
  430167:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  43016c:	cmp    DWORD PTR [rbx],0x10
  43016f:	jne    4300c3 <xmlStrEqual@plt+0x2c183>
  430175:	lea    rsi,[rip+0x203cc]        # 450548 <xmlStrEqual@plt+0x4c608>
  43017c:	mov    edi,0x1
  430181:	xor    eax,eax
  430183:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  430188:	xor    ebx,ebx
  43018a:	jmp    42ff98 <xmlStrEqual@plt+0x2c058>
  43018f:	nop
  430190:	mov    edi,ebx
  430192:	call   403f30 <close@plt>
  430197:	mov    edi,r14d
  43019a:	call   403f30 <close@plt>
  43019f:	call   4037f0 <__errno_location@plt>
  4301a4:	mov    edx,DWORD PTR [rax]
  4301a6:	lea    rsi,[rip+0x203d3]        # 450580 <xmlStrEqual@plt+0x4c640>
  4301ad:	mov    edi,0x1
  4301b2:	xor    eax,eax
  4301b4:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  4301b9:	xor    ebx,ebx
  4301bb:	jmp    42ff98 <xmlStrEqual@plt+0x2c058>
  4301c0:	mov    edi,r14d
  4301c3:	call   403f30 <close@plt>
  4301c8:	call   4037f0 <__errno_location@plt>
  4301cd:	mov    ecx,DWORD PTR [rax]
  4301cf:	mov    edx,r13d
  4301d2:	lea    rsi,[rip+0x203ef]        # 4505c8 <xmlStrEqual@plt+0x4c688>
  4301d9:	mov    edi,0x1
  4301de:	xor    eax,eax
  4301e0:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  4301e5:	xor    ebx,ebx
  4301e7:	jmp    42ff98 <xmlStrEqual@plt+0x2c058>
  4301ec:	call   403c00 <__stack_chk_fail@plt>
  4301f1:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4301fc:	nop    DWORD PTR [rax+0x0]
  430200:	endbr64 
  430204:	push   r15
  430206:	push   r14
  430208:	push   r13
  43020a:	push   r12
  43020c:	push   rbp
  43020d:	push   rbx
  43020e:	sub    rsp,0x1000
  430215:	or     QWORD PTR [rsp],0x0
  43021a:	sub    rsp,0x28
  43021e:	mov    r12,rdi
  430221:	mov    rbx,rsi
  430224:	mov    rax,QWORD PTR fs:0x28
  43022d:	mov    QWORD PTR [rsp+0x1018],rax
  430235:	xor    eax,eax
  430237:	call   403850 <if_nametoindex@plt>
  43023c:	xor    edx,edx
  43023e:	mov    esi,0x2
  430243:	mov    edi,0x10
  430248:	mov    DWORD PTR [rsp+0x8],eax
  43024c:	call   403880 <socket@plt>
  430251:	test   eax,eax
  430253:	js     4303b0 <xmlStrEqual@plt+0x2c470>
  430259:	mov    rdi,rbx
  43025c:	mov    ebp,eax
  43025e:	call   425890 <xmlStrEqual@plt+0x21950>
  430263:	cmp    ax,0x2
  430267:	je     430398 <xmlStrEqual@plt+0x2c458>
  43026d:	cmp    ax,0xa
  430271:	jne    430370 <xmlStrEqual@plt+0x2c430>
  430277:	mov    r15d,0x14
  43027d:	mov    r14d,0xffffff80
  430283:	mov    r8d,0x2c
  430289:	lea    r13,[rsp+0x10]
  43028e:	xor    esi,esi
  430290:	mov    edx,0x1000
  430295:	mov    rdi,r13
  430298:	mov    DWORD PTR [rsp+0xc],r8d
  43029d:	call   4039f0 <memset@plt>
  4302a2:	mov    r8d,DWORD PTR [rsp+0xc]
  4302a7:	mov    rdi,rbx
  4302aa:	mov    DWORD PTR [rsp+0x10],r8d
  4302af:	mov    DWORD PTR [rsp+0x14],0x5010014
  4302b7:	mov    BYTE PTR [rsp+0x21],r14b
  4302bc:	call   425890 <xmlStrEqual@plt+0x21950>
  4302c1:	mov    BYTE PTR [rsp+0x20],al
  4302c5:	mov    eax,DWORD PTR [rsp+0x8]
  4302c9:	xor    edx,edx
  4302cb:	mov    ecx,0x2
  4302d0:	lea    rdi,[r13+0x1c]
  4302d4:	mov    rsi,rbx
  4302d7:	mov    WORD PTR [rsp+0x22],dx
  4302dc:	mov    WORD PTR [rsp+0x2a],cx
  4302e1:	mov    DWORD PTR [rsp+0x24],eax
  4302e5:	mov    WORD PTR [rsp+0x28],r15w
  4302eb:	call   4250b0 <xmlStrEqual@plt+0x21170>
  4302f0:	mov    edx,DWORD PTR [rsp+0x10]
  4302f4:	xor    ecx,ecx
  4302f6:	mov    rsi,r13
  4302f9:	mov    edi,ebp
  4302fb:	call   4039c0 <send@plt>
  430300:	test   eax,eax
  430302:	js     4303d0 <xmlStrEqual@plt+0x2c490>
  430308:	mov    rax,0x469e3c
  43030f:	mov    eax,DWORD PTR [rax]
  430311:	test   eax,eax
  430313:	jle    430336 <xmlStrEqual@plt+0x2c3f6>
  430315:	mov    rdi,rbx
  430318:	call   424d40 <xmlStrEqual@plt+0x20e00>
  43031d:	mov    rdx,rax
  430320:	mov    rcx,r12
  430323:	lea    rsi,[rip+0x20463]        # 45078d <xmlStrEqual@plt+0x4c84d>
  43032a:	mov    edi,0x5
  43032f:	xor    eax,eax
  430331:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  430336:	mov    edi,ebp
  430338:	call   403f30 <close@plt>
  43033d:	mov    eax,0x1
  430342:	mov    rcx,QWORD PTR [rsp+0x1018]
  43034a:	xor    rcx,QWORD PTR fs:0x28
  430353:	jne    430400 <xmlStrEqual@plt+0x2c4c0>
  430359:	add    rsp,0x1028
  430360:	pop    rbx
  430361:	pop    rbp
  430362:	pop    r12
  430364:	pop    r13
  430366:	pop    r14
  430368:	pop    r15
  43036a:	ret    
  43036b:	nop    DWORD PTR [rax+rax*1+0x0]
  430370:	mov    rdi,rbx
  430373:	call   424d40 <xmlStrEqual@plt+0x20e00>
  430378:	mov    rdx,rax
  43037b:	lea    rsi,[rip+0x202b6]        # 450638 <xmlStrEqual@plt+0x4c6f8>
  430382:	xor    eax,eax
  430384:	mov    edi,0x2
  430389:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  43038e:	xor    eax,eax
  430390:	jmp    430342 <xmlStrEqual@plt+0x2c402>
  430392:	nop    WORD PTR [rax+rax*1+0x0]
  430398:	mov    r15d,0x8
  43039e:	mov    r14d,0x20
  4303a4:	mov    r8d,0x20
  4303aa:	jmp    430289 <xmlStrEqual@plt+0x2c349>
  4303af:	nop
  4303b0:	xor    eax,eax
  4303b2:	lea    rsi,[rip+0x20247]        # 450600 <xmlStrEqual@plt+0x4c6c0>
  4303b9:	mov    edi,0x2
  4303be:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  4303c3:	xor    eax,eax
  4303c5:	jmp    430342 <xmlStrEqual@plt+0x2c402>
  4303ca:	nop    WORD PTR [rax+rax*1+0x0]
  4303d0:	call   4037f0 <__errno_location@plt>
  4303d5:	mov    edi,DWORD PTR [rax]
  4303d7:	call   403910 <strerror@plt>
  4303dc:	mov    rdx,rax
  4303df:	lea    rsi,[rip+0x20282]        # 450668 <xmlStrEqual@plt+0x4c728>
  4303e6:	mov    edi,0x2
  4303eb:	xor    eax,eax
  4303ed:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  4303f2:	mov    edi,ebp
  4303f4:	call   403f30 <close@plt>
  4303f9:	xor    eax,eax
  4303fb:	jmp    430342 <xmlStrEqual@plt+0x2c402>
  430400:	call   403c00 <__stack_chk_fail@plt>
  430405:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  430410:	endbr64 
  430414:	push   r15
  430416:	push   r14
  430418:	push   r13
  43041a:	push   r12
  43041c:	push   rbp
  43041d:	push   rbx
  43041e:	sub    rsp,0x1000
  430425:	or     QWORD PTR [rsp],0x0
  43042a:	sub    rsp,0x28
  43042e:	mov    r12,rdi
  430431:	mov    rbx,rsi
  430434:	mov    rax,QWORD PTR fs:0x28
  43043d:	mov    QWORD PTR [rsp+0x1018],rax
  430445:	xor    eax,eax
  430447:	call   403850 <if_nametoindex@plt>
  43044c:	xor    edx,edx
  43044e:	mov    esi,0x2
  430453:	mov    edi,0x10
  430458:	mov    DWORD PTR [rsp+0x8],eax
  43045c:	call   403880 <socket@plt>
  430461:	test   eax,eax
  430463:	js     4305c0 <xmlStrEqual@plt+0x2c680>
  430469:	mov    rdi,rbx
  43046c:	mov    ebp,eax
  43046e:	call   425890 <xmlStrEqual@plt+0x21950>
  430473:	cmp    ax,0x2
  430477:	je     4305a8 <xmlStrEqual@plt+0x2c668>
  43047d:	cmp    ax,0xa
  430481:	jne    430580 <xmlStrEqual@plt+0x2c640>
  430487:	mov    r15d,0x14
  43048d:	mov    r14d,0xffffff80
  430493:	mov    r8d,0x2c
  430499:	lea    r13,[rsp+0x10]
  43049e:	xor    esi,esi
  4304a0:	mov    edx,0x1000
  4304a5:	mov    rdi,r13
  4304a8:	mov    DWORD PTR [rsp+0xc],r8d
  4304ad:	call   4039f0 <memset@plt>
  4304b2:	mov    r8d,DWORD PTR [rsp+0xc]
  4304b7:	mov    rdi,rbx
  4304ba:	mov    DWORD PTR [rsp+0x10],r8d
  4304bf:	mov    DWORD PTR [rsp+0x14],0x5010015
  4304c7:	mov    BYTE PTR [rsp+0x21],r14b
  4304cc:	call   425890 <xmlStrEqual@plt+0x21950>
  4304d1:	mov    BYTE PTR [rsp+0x20],al
  4304d5:	mov    eax,DWORD PTR [rsp+0x8]
  4304d9:	xor    edx,edx
  4304db:	mov    ecx,0x2
  4304e0:	lea    rdi,[r13+0x1c]
  4304e4:	mov    rsi,rbx
  4304e7:	mov    WORD PTR [rsp+0x22],dx
  4304ec:	mov    WORD PTR [rsp+0x2a],cx
  4304f1:	mov    DWORD PTR [rsp+0x24],eax
  4304f5:	mov    WORD PTR [rsp+0x28],r15w
  4304fb:	call   4250b0 <xmlStrEqual@plt+0x21170>
  430500:	mov    edx,DWORD PTR [rsp+0x10]
  430504:	xor    ecx,ecx
  430506:	mov    rsi,r13
  430509:	mov    edi,ebp
  43050b:	call   4039c0 <send@plt>
  430510:	test   eax,eax
  430512:	js     4305e0 <xmlStrEqual@plt+0x2c6a0>
  430518:	mov    rax,0x469e3c
  43051f:	mov    eax,DWORD PTR [rax]
  430521:	test   eax,eax
  430523:	jle    430546 <xmlStrEqual@plt+0x2c606>
  430525:	mov    rdi,rbx
  430528:	call   424d40 <xmlStrEqual@plt+0x20e00>
  43052d:	mov    rdx,rax
  430530:	mov    rcx,r12
  430533:	lea    rsi,[rip+0x2026d]        # 4507a7 <xmlStrEqual@plt+0x4c867>
  43053a:	mov    edi,0x5
  43053f:	xor    eax,eax
  430541:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  430546:	mov    edi,ebp
  430548:	call   403f30 <close@plt>
  43054d:	mov    eax,0x1
  430552:	mov    rcx,QWORD PTR [rsp+0x1018]
  43055a:	xor    rcx,QWORD PTR fs:0x28
  430563:	jne    430610 <xmlStrEqual@plt+0x2c6d0>
  430569:	add    rsp,0x1028
  430570:	pop    rbx
  430571:	pop    rbp
  430572:	pop    r12
  430574:	pop    r13
  430576:	pop    r14
  430578:	pop    r15
  43057a:	ret    
  43057b:	nop    DWORD PTR [rax+rax*1+0x0]
  430580:	mov    rdi,rbx
  430583:	call   424d40 <xmlStrEqual@plt+0x20e00>
  430588:	mov    rdx,rax
  43058b:	lea    rsi,[rip+0x2013e]        # 4506d0 <xmlStrEqual@plt+0x4c790>
  430592:	xor    eax,eax
  430594:	mov    edi,0x2
  430599:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  43059e:	xor    eax,eax
  4305a0:	jmp    430552 <xmlStrEqual@plt+0x2c612>
  4305a2:	nop    WORD PTR [rax+rax*1+0x0]
  4305a8:	mov    r15d,0x8
  4305ae:	mov    r14d,0x20
  4305b4:	mov    r8d,0x20
  4305ba:	jmp    430499 <xmlStrEqual@plt+0x2c559>
  4305bf:	nop
  4305c0:	xor    eax,eax
  4305c2:	lea    rsi,[rip+0x200c7]        # 450690 <xmlStrEqual@plt+0x4c750>
  4305c9:	mov    edi,0x2
  4305ce:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  4305d3:	xor    eax,eax
  4305d5:	jmp    430552 <xmlStrEqual@plt+0x2c612>
  4305da:	nop    WORD PTR [rax+rax*1+0x0]
  4305e0:	call   4037f0 <__errno_location@plt>
  4305e5:	mov    edi,DWORD PTR [rax]
  4305e7:	call   403910 <strerror@plt>
  4305ec:	mov    rdx,rax
  4305ef:	lea    rsi,[rip+0x2010a]        # 450700 <xmlStrEqual@plt+0x4c7c0>
  4305f6:	mov    edi,0x2
  4305fb:	xor    eax,eax
  4305fd:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  430602:	mov    edi,ebp
  430604:	call   403f30 <close@plt>
  430609:	xor    eax,eax
  43060b:	jmp    430552 <xmlStrEqual@plt+0x2c612>
  430610:	call   403c00 <__stack_chk_fail@plt>
  430615:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43061f:	nop
  430620:	push   r14
  430622:	push   r13
  430624:	mov    r13d,esi
  430627:	push   r12
  430629:	lea    r12d,[rsi+rdx*1]
  43062d:	push   rbp
  43062e:	push   rbx
  43062f:	mov    rbx,rdi
  430632:	mov    rax,QWORD PTR [rdi+0x30]
  430636:	mov    rdx,QWORD PTR [rdi+0x38]
  43063a:	add    r12d,DWORD PTR [rdi+0x14]
  43063e:	sub    rdx,rax
  430641:	mov    edi,r12d
  430644:	cmp    esi,edx
  430646:	je     4306f0 <xmlStrEqual@plt+0x2c7b0>
  43064c:	sub    esi,edx
  43064e:	mov    ebp,esi
  430650:	call   435000 <xmlStrEqual@plt+0x310c0>
  430655:	add    r13,rax
  430658:	mov    edx,DWORD PTR [rbx+0x14]
  43065b:	mov    rsi,QWORD PTR [rbx+0x38]
  43065f:	mov    rdi,r13
  430662:	mov    r14,rax
  430665:	call   403ae0 <memcpy@plt>
  43066a:	mov    rdi,QWORD PTR [rbx+0x30]
  43066e:	call   4037b0 <free@plt>
  430673:	movzx  eax,WORD PTR [rbx+0x1a]
  430677:	mov    QWORD PTR [rbx+0x30],r14
  43067b:	cmp    ax,0xffff
  43067f:	je     430687 <xmlStrEqual@plt+0x2c747>
  430681:	add    eax,ebp
  430683:	mov    WORD PTR [rbx+0x1a],ax
  430687:	movzx  eax,WORD PTR [rbx+0x1c]
  43068b:	cmp    ax,0xffff
  43068f:	je     430697 <xmlStrEqual@plt+0x2c757>
  430691:	add    eax,ebp
  430693:	mov    WORD PTR [rbx+0x1c],ax
  430697:	movzx  eax,WORD PTR [rbx+0x1e]
  43069b:	cmp    ax,0xffff
  43069f:	je     4306a7 <xmlStrEqual@plt+0x2c767>
  4306a1:	add    eax,ebp
  4306a3:	mov    WORD PTR [rbx+0x1e],ax
  4306a7:	movzx  eax,WORD PTR [rbx+0x20]
  4306ab:	cmp    ax,0xffff
  4306af:	je     4306b7 <xmlStrEqual@plt+0x2c777>
  4306b1:	add    eax,ebp
  4306b3:	mov    WORD PTR [rbx+0x20],ax
  4306b7:	movzx  eax,WORD PTR [rbx+0x22]
  4306bb:	cmp    ax,0xffff
  4306bf:	je     4306c7 <xmlStrEqual@plt+0x2c787>
  4306c1:	add    eax,ebp
  4306c3:	mov    WORD PTR [rbx+0x22],ax
  4306c7:	movzx  esi,WORD PTR [rbx+0x24]
  4306cb:	cmp    si,0xffff
  4306cf:	je     4306d7 <xmlStrEqual@plt+0x2c797>
  4306d1:	add    esi,ebp
  4306d3:	mov    WORD PTR [rbx+0x24],si
  4306d7:	mov    DWORD PTR [rbx+0x10],r12d
  4306db:	mov    QWORD PTR [rbx+0x38],r13
  4306df:	pop    rbx
  4306e0:	pop    rbp
  4306e1:	pop    r12
  4306e3:	pop    r13
  4306e5:	pop    r14
  4306e7:	ret    
  4306e8:	nop    DWORD PTR [rax+rax*1+0x0]
  4306f0:	mov    rsi,rdi
  4306f3:	mov    rdi,rax
  4306f6:	call   435030 <xmlStrEqual@plt+0x310f0>
  4306fb:	mov    QWORD PTR [rbx+0x30],rax
  4306ff:	add    r13,rax
  430702:	jmp    4306d7 <xmlStrEqual@plt+0x2c797>
  430704:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  43070f:	nop
  430710:	endbr64 
  430714:	mov    rax,0xffffffffffffffff
  43071b:	mov    QWORD PTR [rdi+0x30],rsi
  43071f:	mov    QWORD PTR [rdi+0x38],rsi
  430723:	mov    DWORD PTR [rdi+0x10],edx
  430726:	mov    DWORD PTR [rdi+0x28],0x0
  43072d:	mov    DWORD PTR [rdi+0x14],0x0
  430734:	mov    QWORD PTR [rdi+0x1a],rax
  430738:	mov    DWORD PTR [rdi+0x22],eax
  43073b:	ret    
  43073c:	nop    DWORD PTR [rax+0x0]
  430740:	endbr64 
  430744:	mov    rax,0xffffffffffffffff
  43074b:	mov    QWORD PTR [rdi+0x30],rsi
  43074f:	mov    QWORD PTR [rdi+0x38],rsi
  430753:	mov    DWORD PTR [rdi+0x10],edx
  430756:	mov    DWORD PTR [rdi+0x28],0x1
  43075d:	mov    DWORD PTR [rdi+0x14],0x0
  430764:	mov    QWORD PTR [rdi+0x1a],rax
  430768:	mov    DWORD PTR [rdi+0x22],eax
  43076b:	ret    
  43076c:	nop    DWORD PTR [rax+0x0]
  430770:	endbr64 
  430774:	push   rbx
  430775:	mov    edx,esi
  430777:	mov    rbx,rdi
  43077a:	sub    rsp,0x10
  43077e:	xor    esi,esi
  430780:	test   edx,edx
  430782:	jne    430798 <xmlStrEqual@plt+0x2c858>
  430784:	add    rsp,0x10
  430788:	mov    rdi,rbx
  43078b:	pop    rbx
  43078c:	jmp    430710 <xmlStrEqual@plt+0x2c7d0>
  430791:	nop    DWORD PTR [rax+0x0]
  430798:	mov    edi,edx
  43079a:	mov    DWORD PTR [rsp+0xc],edx
  43079e:	call   434fe0 <xmlStrEqual@plt+0x310a0>
  4307a3:	mov    edx,DWORD PTR [rsp+0xc]
  4307a7:	add    rsp,0x10
  4307ab:	mov    rdi,rbx
  4307ae:	mov    rsi,rax
  4307b1:	pop    rbx
  4307b2:	jmp    430710 <xmlStrEqual@plt+0x2c7d0>
  4307b7:	nop    WORD PTR [rax+rax*1+0x0]
  4307c0:	endbr64 
  4307c4:	test   rdi,rdi
  4307c7:	je     4307d0 <xmlStrEqual@plt+0x2c890>
  4307c9:	mov    eax,DWORD PTR [rdi+0x28]
  4307cc:	test   eax,eax
  4307ce:	je     4307d8 <xmlStrEqual@plt+0x2c898>
  4307d0:	ret    
  4307d1:	nop    DWORD PTR [rax+0x0]
  4307d8:	mov    rdi,QWORD PTR [rdi+0x30]
  4307dc:	jmp    4037b0 <free@plt>
  4307e1:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4307ec:	nop    DWORD PTR [rax+0x0]
  4307f0:	endbr64 
  4307f4:	push   rbp
  4307f5:	mov    ebp,edi
  4307f7:	mov    edi,0x40
  4307fc:	push   rbx
  4307fd:	sub    rsp,0x8
  430801:	call   434fe0 <xmlStrEqual@plt+0x310a0>
  430806:	mov    rdi,rax
  430809:	mov    esi,ebp
  43080b:	mov    rbx,rax
  43080e:	call   430770 <xmlStrEqual@plt+0x2c830>
  430813:	add    rsp,0x8
  430817:	mov    rax,rbx
  43081a:	pop    rbx
  43081b:	pop    rbp
  43081c:	ret    
  43081d:	nop    DWORD PTR [rax]
  430820:	endbr64 
  430824:	test   rdi,rdi
  430827:	je     430840 <xmlStrEqual@plt+0x2c900>
  430829:	push   rbx
  43082a:	mov    rbx,rdi
  43082d:	call   4307c0 <xmlStrEqual@plt+0x2c880>
  430832:	mov    rdi,rbx
  430835:	pop    rbx
  430836:	jmp    4037b0 <free@plt>
  43083b:	nop    DWORD PTR [rax+rax*1+0x0]
  430840:	ret    
  430841:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  43084c:	nop    DWORD PTR [rax+0x0]
  430850:	endbr64 
  430854:	mov    r9,QWORD PTR [rdi+0x30]
  430858:	mov    r8,QWORD PTR [rdi+0x38]
  43085c:	mov    eax,DWORD PTR [rdi+0x10]
  43085f:	mov    ecx,DWORD PTR [rdi+0x14]
  430862:	add    rax,r9
  430865:	add    rcx,r8
  430868:	sub    rax,rcx
  43086b:	cmp    esi,eax
  43086d:	ja     430870 <xmlStrEqual@plt+0x2c930>
  43086f:	ret    
  430870:	cmp    esi,0x40
  430873:	mov    edx,0x40
  430878:	cmovae edx,esi
  43087b:	mov    rsi,r8
  43087e:	mov    edx,edx
  430880:	sub    rsi,r9
  430883:	jmp    430620 <xmlStrEqual@plt+0x2c6e0>
  430888:	nop    DWORD PTR [rax+rax*1+0x0]
  430890:	endbr64 
  430894:	mov    rax,QWORD PTR [rdi+0x38]
  430898:	mov    rdx,QWORD PTR [rdi+0x30]
  43089c:	mov    rcx,rax
  43089f:	sub    rcx,rdx
  4308a2:	cmp    esi,ecx
  4308a4:	ja     4308b0 <xmlStrEqual@plt+0x2c970>
  4308a6:	ret    
  4308a7:	nop    WORD PTR [rax+rax*1+0x0]
  4308b0:	mov    ecx,DWORD PTR [rdi+0x10]
  4308b3:	add    rdx,rcx
  4308b6:	sub    edx,DWORD PTR [rdi+0x14]
  4308b9:	sub    edx,eax
  4308bb:	cmp    esi,0x40
  4308be:	mov    eax,0x40
  4308c3:	cmovb  esi,eax
  4308c6:	jmp    430620 <xmlStrEqual@plt+0x2c6e0>
  4308cb:	nop    DWORD PTR [rax+rax*1+0x0]
  4308d0:	endbr64 
  4308d4:	push   rbp
  4308d5:	mov    ebp,esi
  4308d7:	push   rbx
  4308d8:	mov    rbx,rdi
  4308db:	sub    rsp,0x8
  4308df:	call   430850 <xmlStrEqual@plt+0x2c910>
  4308e4:	mov    eax,DWORD PTR [rbx+0x14]
  4308e7:	mov    rdx,rax
  4308ea:	add    ebp,edx
  4308ec:	add    rax,QWORD PTR [rbx+0x38]
  4308f0:	mov    DWORD PTR [rbx+0x14],ebp
  4308f3:	add    rsp,0x8
  4308f7:	pop    rbx
  4308f8:	pop    rbp
  4308f9:	ret    
  4308fa:	nop    WORD PTR [rax+rax*1+0x0]
  430900:	endbr64 
  430904:	push   rbp
  430905:	mov    rbp,rsi
  430908:	mov    esi,edx
  43090a:	push   rbx
  43090b:	mov    ebx,edx
  43090d:	sub    rsp,0x8
  430911:	call   4308d0 <xmlStrEqual@plt+0x2c990>
  430916:	mov    rdi,rax
  430919:	mov    edx,ebx
  43091b:	mov    rsi,rbp
  43091e:	call   403ae0 <memcpy@plt>
  430923:	add    rsp,0x8
  430927:	pop    rbx
  430928:	pop    rbp
  430929:	ret    
  43092a:	nop    WORD PTR [rax+rax*1+0x0]
  430930:	endbr64 
  430934:	push   rbp
  430935:	mov    ebp,esi
  430937:	push   rbx
  430938:	mov    rbx,rdi
  43093b:	sub    rsp,0x8
  43093f:	call   430890 <xmlStrEqual@plt+0x2c950>
  430944:	mov    rdx,QWORD PTR [rbx+0x38]
  430948:	mov    eax,ebp
  43094a:	sub    rdx,rax
  43094d:	add    DWORD PTR [rbx+0x14],ebp
  430950:	mov    QWORD PTR [rbx+0x38],rdx
  430954:	add    rsp,0x8
  430958:	pop    rbx
  430959:	mov    rax,rdx
  43095c:	pop    rbp
  43095d:	ret    
  43095e:	xchg   ax,ax
  430960:	endbr64 
  430964:	push   rbp
  430965:	mov    rbp,rsi
  430968:	mov    esi,edx
  43096a:	push   rbx
  43096b:	mov    ebx,edx
  43096d:	sub    rsp,0x8
  430971:	call   430930 <xmlStrEqual@plt+0x2c9f0>
  430976:	mov    rdi,rax
  430979:	mov    edx,ebx
  43097b:	mov    rsi,rbp
  43097e:	call   403ae0 <memcpy@plt>
  430983:	add    rsp,0x8
  430987:	pop    rbx
  430988:	pop    rbp
  430989:	ret    
  43098a:	nop    WORD PTR [rax+rax*1+0x0]
  430990:	endbr64 
  430994:	push   rbp
  430995:	mov    rbp,rdi
  430998:	push   rbx
  430999:	mov    ebx,esi
  43099b:	mov    esi,ebx
  43099d:	sub    rsp,0x8
  4309a1:	call   430850 <xmlStrEqual@plt+0x2c910>
  4309a6:	add    rbx,QWORD PTR [rbp+0x30]
  4309aa:	mov    QWORD PTR [rbp+0x38],rbx
  4309ae:	add    rsp,0x8
  4309b2:	pop    rbx
  4309b3:	pop    rbp
  4309b4:	ret    
  4309b5:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4309c0:	endbr64 
  4309c4:	push   rbp
  4309c5:	add    edi,esi
  4309c7:	mov    ebp,esi
  4309c9:	push   rbx
  4309ca:	sub    rsp,0x8
  4309ce:	call   4307f0 <xmlStrEqual@plt+0x2c8b0>
  4309d3:	mov    rdi,rax
  4309d6:	mov    esi,ebp
  4309d8:	mov    rbx,rax
  4309db:	call   430990 <xmlStrEqual@plt+0x2ca50>
  4309e0:	add    rsp,0x8
  4309e4:	mov    rax,rbx
  4309e7:	pop    rbx
  4309e8:	pop    rbp
  4309e9:	ret    
  4309ea:	nop    WORD PTR [rax+rax*1+0x0]
  4309f0:	endbr64 
  4309f4:	push   rbp
  4309f5:	push   rbx
  4309f6:	mov    rbx,rdi
  4309f9:	sub    rsp,0x8
  4309fd:	mov    edi,DWORD PTR [rdi+0x14]
  430a00:	call   4307f0 <xmlStrEqual@plt+0x2c8b0>
  430a05:	mov    rdi,QWORD PTR [rax+0x38]
  430a09:	mov    edx,DWORD PTR [rbx+0x14]
  430a0c:	mov    rsi,QWORD PTR [rbx+0x38]
  430a10:	mov    rbp,rax
  430a13:	call   430900 <xmlStrEqual@plt+0x2c9c0>
  430a18:	movzx  eax,WORD PTR [rbx+0x24]
  430a1c:	mov    WORD PTR [rbp+0x24],ax
  430a20:	add    rsp,0x8
  430a24:	mov    rax,rbp
  430a27:	pop    rbx
  430a28:	pop    rbp
  430a29:	ret    
  430a2a:	nop    WORD PTR [rax+rax*1+0x0]
  430a30:	endbr64 
  430a34:	push   rbx
  430a35:	movzx  eax,WORD PTR [rdi+0x18]
  430a39:	cmp    ax,0xffff
  430a3d:	je     430a60 <xmlStrEqual@plt+0x2cb20>
  430a3f:	mov    edx,DWORD PTR [rdi+0x14]
  430a42:	add    rax,QWORD PTR [rdi+0x30]
  430a46:	add    rdx,QWORD PTR [rdi+0x38]
  430a4a:	sub    rdx,rax
  430a4d:	mov    DWORD PTR [rdi+0x14],edx
  430a50:	mov    QWORD PTR [rdi+0x38],rax
  430a54:	mov    ebx,0x1
  430a59:	mov    eax,ebx
  430a5b:	pop    rbx
  430a5c:	ret    
  430a5d:	nop    DWORD PTR [rax]
  430a60:	mov    rax,0x469e3c
  430a67:	xor    ebx,ebx
  430a69:	cmp    DWORD PTR [rax],0x1
  430a6c:	jle    430a59 <xmlStrEqual@plt+0x2cb19>
  430a6e:	lea    rsi,[rip+0x1fd53]        # 4507c8 <xmlStrEqual@plt+0x4c888>
  430a75:	mov    edi,0x6
  430a7a:	xor    eax,eax
  430a7c:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  430a81:	jmp    430a59 <xmlStrEqual@plt+0x2cb19>
  430a83:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  430a8e:	xchg   ax,ax
  430a90:	endbr64 
  430a94:	push   rbx
  430a95:	movzx  eax,WORD PTR [rdi+0x1a]
  430a99:	cmp    ax,0xffff
  430a9d:	je     430ac0 <xmlStrEqual@plt+0x2cb80>
  430a9f:	mov    edx,DWORD PTR [rdi+0x14]
  430aa2:	add    rax,QWORD PTR [rdi+0x30]
  430aa6:	add    rdx,QWORD PTR [rdi+0x38]
  430aaa:	sub    rdx,rax
  430aad:	mov    DWORD PTR [rdi+0x14],edx
  430ab0:	mov    QWORD PTR [rdi+0x38],rax
  430ab4:	mov    ebx,0x1
  430ab9:	mov    eax,ebx
  430abb:	pop    rbx
  430abc:	ret    
  430abd:	nop    DWORD PTR [rax]
  430ac0:	mov    rax,0x469e3c
  430ac7:	xor    ebx,ebx
  430ac9:	cmp    DWORD PTR [rax],0x1
  430acc:	jle    430ab9 <xmlStrEqual@plt+0x2cb79>
  430ace:	lea    rsi,[rip+0x1fd33]        # 450808 <xmlStrEqual@plt+0x4c8c8>
  430ad5:	mov    edi,0x6
  430ada:	xor    eax,eax
  430adc:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  430ae1:	jmp    430ab9 <xmlStrEqual@plt+0x2cb79>
  430ae3:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  430aee:	xchg   ax,ax
  430af0:	endbr64 
  430af4:	push   rbx
  430af5:	movzx  eax,WORD PTR [rdi+0x1c]
  430af9:	cmp    ax,0xffff
  430afd:	je     430b20 <xmlStrEqual@plt+0x2cbe0>
  430aff:	mov    edx,DWORD PTR [rdi+0x14]
  430b02:	add    rax,QWORD PTR [rdi+0x30]
  430b06:	add    rdx,QWORD PTR [rdi+0x38]
  430b0a:	sub    rdx,rax
  430b0d:	mov    DWORD PTR [rdi+0x14],edx
  430b10:	mov    QWORD PTR [rdi+0x38],rax
  430b14:	mov    ebx,0x1
  430b19:	mov    eax,ebx
  430b1b:	pop    rbx
  430b1c:	ret    
  430b1d:	nop    DWORD PTR [rax]
  430b20:	mov    rax,0x469e3c
  430b27:	xor    ebx,ebx
  430b29:	cmp    DWORD PTR [rax],0x1
  430b2c:	jle    430b19 <xmlStrEqual@plt+0x2cbd9>
  430b2e:	lea    rsi,[rip+0x1fd0b]        # 450840 <xmlStrEqual@plt+0x4c900>
  430b35:	mov    edi,0x6
  430b3a:	xor    eax,eax
  430b3c:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  430b41:	jmp    430b19 <xmlStrEqual@plt+0x2cbd9>
  430b43:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  430b4e:	xchg   ax,ax
  430b50:	endbr64 
  430b54:	push   rbx
  430b55:	movzx  eax,WORD PTR [rdi+0x1e]
  430b59:	cmp    ax,0xffff
  430b5d:	je     430b80 <xmlStrEqual@plt+0x2cc40>
  430b5f:	mov    edx,DWORD PTR [rdi+0x14]
  430b62:	add    rax,QWORD PTR [rdi+0x30]
  430b66:	add    rdx,QWORD PTR [rdi+0x38]
  430b6a:	sub    rdx,rax
  430b6d:	mov    DWORD PTR [rdi+0x14],edx
  430b70:	mov    QWORD PTR [rdi+0x38],rax
  430b74:	mov    ebx,0x1
  430b79:	mov    eax,ebx
  430b7b:	pop    rbx
  430b7c:	ret    
  430b7d:	nop    DWORD PTR [rax]
  430b80:	mov    rax,0x469e3c
  430b87:	xor    ebx,ebx
  430b89:	cmp    DWORD PTR [rax],0x1
  430b8c:	jle    430b79 <xmlStrEqual@plt+0x2cc39>
  430b8e:	lea    rsi,[rip+0x1fce3]        # 450878 <xmlStrEqual@plt+0x4c938>
  430b95:	mov    edi,0x6
  430b9a:	xor    eax,eax
  430b9c:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  430ba1:	jmp    430b79 <xmlStrEqual@plt+0x2cc39>
  430ba3:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  430bae:	xchg   ax,ax
  430bb0:	endbr64 
  430bb4:	push   rbx
  430bb5:	movzx  eax,WORD PTR [rdi+0x20]
  430bb9:	cmp    ax,0xffff
  430bbd:	je     430be0 <xmlStrEqual@plt+0x2cca0>
  430bbf:	mov    edx,DWORD PTR [rdi+0x14]
  430bc2:	add    rax,QWORD PTR [rdi+0x30]
  430bc6:	add    rdx,QWORD PTR [rdi+0x38]
  430bca:	sub    rdx,rax
  430bcd:	mov    DWORD PTR [rdi+0x14],edx
  430bd0:	mov    QWORD PTR [rdi+0x38],rax
  430bd4:	mov    ebx,0x1
  430bd9:	mov    eax,ebx
  430bdb:	pop    rbx
  430bdc:	ret    
  430bdd:	nop    DWORD PTR [rax]
  430be0:	mov    rax,0x469e3c
  430be7:	xor    ebx,ebx
  430be9:	cmp    DWORD PTR [rax],0x1
  430bec:	jle    430bd9 <xmlStrEqual@plt+0x2cc99>
  430bee:	lea    rsi,[rip+0x1fccb]        # 4508c0 <xmlStrEqual@plt+0x4c980>
  430bf5:	mov    edi,0x6
  430bfa:	xor    eax,eax
  430bfc:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  430c01:	jmp    430bd9 <xmlStrEqual@plt+0x2cc99>
  430c03:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  430c0e:	xchg   ax,ax
  430c10:	endbr64 
  430c14:	push   rbx
  430c15:	movzx  eax,WORD PTR [rdi+0x22]
  430c19:	cmp    ax,0xffff
  430c1d:	je     430c40 <xmlStrEqual@plt+0x2cd00>
  430c1f:	mov    edx,DWORD PTR [rdi+0x14]
  430c22:	add    rax,QWORD PTR [rdi+0x30]
  430c26:	add    rdx,QWORD PTR [rdi+0x38]
  430c2a:	sub    rdx,rax
  430c2d:	mov    DWORD PTR [rdi+0x14],edx
  430c30:	mov    QWORD PTR [rdi+0x38],rax
  430c34:	mov    ebx,0x1
  430c39:	mov    eax,ebx
  430c3b:	pop    rbx
  430c3c:	ret    
  430c3d:	nop    DWORD PTR [rax]
  430c40:	mov    rax,0x469e3c
  430c47:	xor    ebx,ebx
  430c49:	cmp    DWORD PTR [rax],0x1
  430c4c:	jle    430c39 <xmlStrEqual@plt+0x2ccf9>
  430c4e:	lea    rsi,[rip+0x1fcab]        # 450900 <xmlStrEqual@plt+0x4c9c0>
  430c55:	mov    edi,0x6
  430c5a:	xor    eax,eax
  430c5c:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  430c61:	jmp    430c39 <xmlStrEqual@plt+0x2ccf9>
  430c63:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  430c6e:	xchg   ax,ax
  430c70:	endbr64 
  430c74:	push   rbx
  430c75:	movzx  eax,WORD PTR [rdi+0x24]
  430c79:	cmp    ax,0xffff
  430c7d:	je     430ca0 <xmlStrEqual@plt+0x2cd60>
  430c7f:	mov    edx,DWORD PTR [rdi+0x14]
  430c82:	add    rax,QWORD PTR [rdi+0x30]
  430c86:	add    rdx,QWORD PTR [rdi+0x38]
  430c8a:	sub    rdx,rax
  430c8d:	mov    DWORD PTR [rdi+0x14],edx
  430c90:	mov    QWORD PTR [rdi+0x38],rax
  430c94:	mov    ebx,0x1
  430c99:	mov    eax,ebx
  430c9b:	pop    rbx
  430c9c:	ret    
  430c9d:	nop    DWORD PTR [rax]
  430ca0:	mov    rax,0x469e3c
  430ca7:	xor    ebx,ebx
  430ca9:	cmp    DWORD PTR [rax],0x1
  430cac:	jle    430c99 <xmlStrEqual@plt+0x2cd59>
  430cae:	lea    rsi,[rip+0x1fc8b]        # 450940 <xmlStrEqual@plt+0x4ca00>
  430cb5:	mov    edi,0x6
  430cba:	xor    eax,eax
  430cbc:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  430cc1:	jmp    430c99 <xmlStrEqual@plt+0x2cd59>
  430cc3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  430ccd:	nop    DWORD PTR [rax]
  430cd0:	endbr64 
  430cd4:	push   r15
  430cd6:	mov    r15d,esi
  430cd9:	push   r14
  430cdb:	mov    r14d,edx
  430cde:	push   r13
  430ce0:	push   r12
  430ce2:	mov    r12d,r8d
  430ce5:	push   rbp
  430ce6:	mov    ebp,r9d
  430ce9:	push   rbx
  430cea:	sub    rsp,0x18
  430cee:	mov    QWORD PTR [rsp],rdi
  430cf2:	mov    edi,0x28
  430cf7:	mov    QWORD PTR [rsp+0x8],rcx
  430cfc:	mov    ebx,DWORD PTR [rsp+0x50]
  430d00:	call   434fe0 <xmlStrEqual@plt+0x310a0>
  430d05:	mov    r13,rax
  430d08:	test   r15d,r15d
  430d0b:	je     430d70 <xmlStrEqual@plt+0x2ce30>
  430d0d:	mov    rsi,QWORD PTR [rsp]
  430d11:	mov    edx,0x20
  430d16:	mov    edi,r15d
  430d19:	call   429ab0 <xmlStrEqual@plt+0x25b70>
  430d1e:	mov    QWORD PTR [r13+0x0],rax
  430d22:	mov    DWORD PTR [r13+0xc],r14d
  430d26:	mov    rdi,QWORD PTR [rsp+0x8]
  430d2b:	call   403ed0 <strdup@plt>
  430d30:	mov    QWORD PTR [r13+0x10],rax
  430d34:	mov    BYTE PTR [r13+0x9],r12b
  430d38:	mov    BYTE PTR [r13+0x8],bpl
  430d3c:	mov    BYTE PTR [r13+0x18],bl
  430d40:	mov    BYTE PTR [r13+0x19],0x1
  430d45:	mov    rdi,0x424bf0
  430d4c:	call   42dca0 <xmlStrEqual@plt+0x29d60>
  430d51:	mov    QWORD PTR [r13+0x20],rax
  430d55:	add    rsp,0x18
  430d59:	mov    rax,r13
  430d5c:	pop    rbx
  430d5d:	pop    rbp
  430d5e:	pop    r12
  430d60:	pop    r13
  430d62:	pop    r14
  430d64:	pop    r15
  430d66:	ret    
  430d67:	nop    WORD PTR [rax+rax*1+0x0]
  430d70:	mov    rdi,QWORD PTR [rsp]
  430d74:	call   425060 <xmlStrEqual@plt+0x21120>
  430d79:	mov    QWORD PTR [r13+0x0],rax
  430d7d:	jmp    430d22 <xmlStrEqual@plt+0x2cde2>
  430d7f:	nop
  430d80:	endbr64 
  430d84:	push   rbx
  430d85:	mov    rbx,QWORD PTR [rdi+0x20]
  430d89:	mov    rdi,rsi
  430d8c:	call   425060 <xmlStrEqual@plt+0x21120>
  430d91:	mov    rdi,rax
  430d94:	mov    rsi,rbx
  430d97:	pop    rbx
  430d98:	jmp    42dcf0 <xmlStrEqual@plt+0x29db0>
  430d9d:	nop    DWORD PTR [rax]
  430da0:	endbr64 
  430da4:	test   rdi,rdi
  430da7:	je     430dd8 <xmlStrEqual@plt+0x2ce98>
  430da9:	push   rbx
  430daa:	mov    rbx,rdi
  430dad:	mov    rdi,QWORD PTR [rdi]
  430db0:	call   424bf0 <xmlStrEqual@plt+0x20cb0>
  430db5:	mov    rdi,QWORD PTR [rbx+0x10]
  430db9:	test   rdi,rdi
  430dbc:	je     430dc3 <xmlStrEqual@plt+0x2ce83>
  430dbe:	call   4037b0 <free@plt>
  430dc3:	mov    rdi,QWORD PTR [rbx+0x20]
  430dc7:	call   42e2b0 <xmlStrEqual@plt+0x2a370>
  430dcc:	mov    rdi,rbx
  430dcf:	pop    rbx
  430dd0:	jmp    4037b0 <free@plt>
  430dd5:	nop    DWORD PTR [rax]
  430dd8:	ret    
  430dd9:	nop    DWORD PTR [rax+0x0]
  430de0:	endbr64 
  430de4:	push   rbx
  430de5:	mov    rax,0x475860
  430dec:	mov    rbx,rdi
  430def:	mov    rdx,QWORD PTR [rax]
  430df2:	mov    rax,0x475858
  430df9:	mov    rsi,QWORD PTR [rax]
  430dfc:	call   43b8d0 <xmlStrEqual@plt+0x37990>
  430e01:	mov    rdi,QWORD PTR [rbx]
  430e04:	call   42b110 <xmlStrEqual@plt+0x271d0>
  430e09:	mov    rdi,rbx
  430e0c:	pop    rbx
  430e0d:	jmp    4037b0 <free@plt>
  430e12:	nop    WORD PTR cs:[rax+rax*1+0x0]
  430e1c:	nop    DWORD PTR [rax+0x0]
  430e20:	endbr64 
  430e24:	push   rbp
  430e25:	push   rbx
  430e26:	mov    rbx,rsi
  430e29:	sub    rsp,0xe8
  430e30:	mov    QWORD PTR [rsp+0x40],rdx
  430e35:	mov    QWORD PTR [rsp+0x48],rcx
  430e3a:	mov    QWORD PTR [rsp+0x50],r8
  430e3f:	mov    QWORD PTR [rsp+0x58],r9
  430e44:	test   al,al
  430e46:	je     430e8a <xmlStrEqual@plt+0x2cf4a>
  430e48:	vmovaps XMMWORD PTR [rsp+0x60],xmm0
  430e4e:	vmovaps XMMWORD PTR [rsp+0x70],xmm1
  430e54:	vmovaps XMMWORD PTR [rsp+0x80],xmm2
  430e5d:	vmovaps XMMWORD PTR [rsp+0x90],xmm3
  430e66:	vmovaps XMMWORD PTR [rsp+0xa0],xmm4
  430e6f:	vmovaps XMMWORD PTR [rsp+0xb0],xmm5
  430e78:	vmovaps XMMWORD PTR [rsp+0xc0],xmm6
  430e81:	vmovaps XMMWORD PTR [rsp+0xd0],xmm7
  430e8a:	mov    rax,QWORD PTR fs:0x28
  430e93:	mov    QWORD PTR [rsp+0x28],rax
  430e98:	xor    eax,eax
  430e9a:	lea    rax,[rsp+0x100]
  430ea2:	mov    QWORD PTR [rsp+0x18],rax
  430ea7:	lea    rax,[rsp+0x30]
  430eac:	mov    DWORD PTR [rsp+0x10],0x10
  430eb4:	mov    DWORD PTR [rsp+0x14],0x30
  430ebc:	mov    QWORD PTR [rsp+0x20],rax
  430ec1:	cmp    edi,0x7
  430ec4:	ja     4311f8 <xmlStrEqual@plt+0x2d2b8>
  430eca:	lea    rdx,[rip+0x1faef]        # 4509c0 <xmlStrEqual@plt+0x4ca80>
  430ed1:	mov    edi,edi
  430ed3:	movsxd rax,DWORD PTR [rdx+rdi*4]
  430ed7:	add    rax,rdx
  430eda:	notrack jmp rax
  430edd:	nop    DWORD PTR [rax]
  430ee0:	mov    rax,0x469e3c
  430ee7:	cmp    DWORD PTR [rax],0x2
  430eea:	jg     431320 <xmlStrEqual@plt+0x2d3e0>
  430ef0:	mov    rax,QWORD PTR [rsp+0x28]
  430ef5:	xor    rax,QWORD PTR fs:0x28
  430efe:	jne    4314ad <xmlStrEqual@plt+0x2d56d>
  430f04:	add    rsp,0xe8
  430f0b:	pop    rbx
  430f0c:	pop    rbp
  430f0d:	ret    
  430f0e:	xchg   ax,ax
  430f10:	xor    edi,edi
  430f12:	call   403b20 <time@plt>
  430f17:	lea    rdi,[rsp+0x8]
  430f1c:	mov    QWORD PTR [rsp+0x8],rax
  430f21:	call   403ab0 <localtime@plt>
  430f26:	mov    r11d,DWORD PTR [rax]
  430f29:	mov    r10d,DWORD PTR [rax+0x4]
  430f2d:	mov    r9d,DWORD PTR [rax+0x8]
  430f31:	mov    r8d,DWORD PTR [rax+0xc]
  430f35:	mov    esi,DWORD PTR [rax+0x10]
  430f38:	mov    edx,DWORD PTR [rax+0x14]
  430f3b:	mov    rax,0x4757bc
  430f42:	mov    eax,DWORD PTR [rax]
  430f44:	test   eax,eax
  430f46:	je     4313d0 <xmlStrEqual@plt+0x2d490>
  430f4c:	mov    rbp,0x473ef0
  430f53:	mov    rdi,QWORD PTR [rbp+0x0]
  430f57:	test   rdi,rdi
  430f5a:	je     431430 <xmlStrEqual@plt+0x2d4f0>
  430f60:	lea    ecx,[rdx+0x76c]
  430f66:	lea    rax,[rip+0x1fa23]        # 450990 <xmlStrEqual@plt+0x4ca50>
  430f6d:	nop    DWORD PTR [rax]
  430f70:	push   rax
  430f71:	push   r11
  430f73:	push   r10
  430f75:	push   r9
  430f77:	mov    r9d,r8d
  430f7a:	lea    r8d,[rsi+0x1]
  430f7e:	lea    rdx,[rip+0x1f9f2]        # 450977 <xmlStrEqual@plt+0x4ca37>
  430f85:	mov    esi,0x1
  430f8a:	xor    eax,eax
  430f8c:	call   403e20 <__fprintf_chk@plt>
  430f91:	add    rsp,0x20
  430f95:	mov    rdi,QWORD PTR [rbp+0x0]
  430f99:	lea    rcx,[rsp+0x10]
  430f9e:	mov    rdx,rbx
  430fa1:	mov    esi,0x1
  430fa6:	call   4038c0 <__vfprintf_chk@plt>
  430fab:	mov    rsi,QWORD PTR [rbp+0x0]
  430faf:	mov    edi,0xa
  430fb4:	call   403c80 <fputc@plt>
  430fb9:	mov    rdi,QWORD PTR [rbp+0x0]
  430fbd:	call   403c20 <fflush@plt>
  430fc2:	jmp    430ef0 <xmlStrEqual@plt+0x2cfb0>
  430fc7:	nop    WORD PTR [rax+rax*1+0x0]
  430fd0:	xor    edi,edi
  430fd2:	call   403b20 <time@plt>
  430fd7:	lea    rdi,[rsp+0x8]
  430fdc:	mov    QWORD PTR [rsp+0x8],rax
  430fe1:	call   403ab0 <localtime@plt>
  430fe6:	mov    r11d,DWORD PTR [rax]
  430fe9:	mov    r10d,DWORD PTR [rax+0x4]
  430fed:	mov    r9d,DWORD PTR [rax+0x8]
  430ff1:	mov    r8d,DWORD PTR [rax+0xc]
  430ff5:	mov    esi,DWORD PTR [rax+0x10]
  430ff8:	mov    edx,DWORD PTR [rax+0x14]
  430ffb:	mov    rax,0x4757bc
  431002:	mov    eax,DWORD PTR [rax]
  431004:	test   eax,eax
  431006:	je     4313b0 <xmlStrEqual@plt+0x2d470>
  43100c:	mov    rbp,0x473ef0
  431013:	mov    rdi,QWORD PTR [rbp+0x0]
  431017:	test   rdi,rdi
  43101a:	je     431450 <xmlStrEqual@plt+0x2d510>
  431020:	lea    ecx,[rdx+0x76c]
  431026:	lea    rax,[rip+0x1f968]        # 450995 <xmlStrEqual@plt+0x4ca55>
  43102d:	jmp    430f70 <xmlStrEqual@plt+0x2d030>
  431032:	nop    WORD PTR [rax+rax*1+0x0]
  431038:	xor    edi,edi
  43103a:	call   403b20 <time@plt>
  43103f:	lea    rdi,[rsp+0x8]
  431044:	mov    QWORD PTR [rsp+0x8],rax
  431049:	call   403ab0 <localtime@plt>
  43104e:	mov    r11d,DWORD PTR [rax]
  431051:	mov    r10d,DWORD PTR [rax+0x4]
  431055:	mov    r9d,DWORD PTR [rax+0x8]
  431059:	mov    r8d,DWORD PTR [rax+0xc]
  43105d:	mov    esi,DWORD PTR [rax+0x10]
  431060:	mov    edx,DWORD PTR [rax+0x14]
  431063:	mov    rax,0x4757bc
  43106a:	mov    eax,DWORD PTR [rax]
  43106c:	test   eax,eax
  43106e:	je     431390 <xmlStrEqual@plt+0x2d450>
  431074:	mov    rbp,0x473ef0
  43107b:	mov    rdi,QWORD PTR [rbp+0x0]
  43107f:	test   rdi,rdi
  431082:	je     431470 <xmlStrEqual@plt+0x2d530>
  431088:	lea    ecx,[rdx+0x76c]
  43108e:	lea    rax,[rip+0x1f904]        # 450999 <xmlStrEqual@plt+0x4ca59>
  431095:	jmp    430f70 <xmlStrEqual@plt+0x2d030>
  43109a:	nop    WORD PTR [rax+rax*1+0x0]
  4310a0:	xor    edi,edi
  4310a2:	call   403b20 <time@plt>
  4310a7:	lea    rdi,[rsp+0x8]
  4310ac:	mov    QWORD PTR [rsp+0x8],rax
  4310b1:	call   403ab0 <localtime@plt>
  4310b6:	mov    r11d,DWORD PTR [rax]
  4310b9:	mov    r10d,DWORD PTR [rax+0x4]
  4310bd:	mov    r9d,DWORD PTR [rax+0x8]
  4310c1:	mov    r8d,DWORD PTR [rax+0xc]
  4310c5:	mov    esi,DWORD PTR [rax+0x10]
  4310c8:	mov    edx,DWORD PTR [rax+0x14]
  4310cb:	mov    rax,0x4757bc
  4310d2:	mov    eax,DWORD PTR [rax]
  4310d4:	test   eax,eax
  4310d6:	je     4313f0 <xmlStrEqual@plt+0x2d4b0>
  4310dc:	mov    rbp,0x473ef0
  4310e3:	mov    rdi,QWORD PTR [rbp+0x0]
  4310e7:	test   rdi,rdi
  4310ea:	je     431260 <xmlStrEqual@plt+0x2d320>
  4310f0:	lea    ecx,[rdx+0x76c]
  4310f6:	lea    rax,[rip+0x1f8a4]        # 4509a1 <xmlStrEqual@plt+0x4ca61>
  4310fd:	jmp    430f70 <xmlStrEqual@plt+0x2d030>
  431102:	nop    WORD PTR [rax+rax*1+0x0]
  431108:	mov    rax,0x469e3c
  43110f:	mov    eax,DWORD PTR [rax]
  431111:	test   eax,eax
  431113:	jle    430ef0 <xmlStrEqual@plt+0x2cfb0>
  431119:	xor    edi,edi
  43111b:	call   403b20 <time@plt>
  431120:	lea    rdi,[rsp+0x8]
  431125:	mov    QWORD PTR [rsp+0x8],rax
  43112a:	call   403ab0 <localtime@plt>
  43112f:	mov    r11d,DWORD PTR [rax]
  431132:	mov    r10d,DWORD PTR [rax+0x4]
  431136:	mov    r9d,DWORD PTR [rax+0x8]
  43113a:	mov    r8d,DWORD PTR [rax+0xc]
  43113e:	mov    esi,DWORD PTR [rax+0x10]
  431141:	mov    edx,DWORD PTR [rax+0x14]
  431144:	mov    rax,0x4757bc
  43114b:	mov    ebp,DWORD PTR [rax]
  43114d:	test   ebp,ebp
  43114f:	je     431280 <xmlStrEqual@plt+0x2d340>
  431155:	mov    rbp,0x473ef0
  43115c:	mov    rdi,QWORD PTR [rbp+0x0]
  431160:	test   rdi,rdi
  431163:	je     431410 <xmlStrEqual@plt+0x2d4d0>
  431169:	lea    ecx,[rdx+0x76c]
  43116f:	lea    rax,[rip+0x1f830]        # 4509a6 <xmlStrEqual@plt+0x4ca66>
  431176:	jmp    430f70 <xmlStrEqual@plt+0x2d030>
  43117b:	nop    DWORD PTR [rax+rax*1+0x0]
  431180:	mov    rax,0x469e3c
  431187:	cmp    DWORD PTR [rax],0x1
  43118a:	jle    430ef0 <xmlStrEqual@plt+0x2cfb0>
  431190:	xor    edi,edi
  431192:	call   403b20 <time@plt>
  431197:	lea    rdi,[rsp+0x8]
  43119c:	mov    QWORD PTR [rsp+0x8],rax
  4311a1:	call   403ab0 <localtime@plt>
  4311a6:	mov    r11d,DWORD PTR [rax]
  4311a9:	mov    r10d,DWORD PTR [rax+0x4]
  4311ad:	mov    r9d,DWORD PTR [rax+0x8]
  4311b1:	mov    r8d,DWORD PTR [rax+0xc]
  4311b5:	mov    esi,DWORD PTR [rax+0x10]
  4311b8:	mov    edx,DWORD PTR [rax+0x14]
  4311bb:	mov    rax,0x4757bc
  4311c2:	mov    edi,DWORD PTR [rax]
  4311c4:	test   edi,edi
  4311c6:	je     4312e0 <xmlStrEqual@plt+0x2d3a0>
  4311cc:	mov    rbp,0x473ef0
  4311d3:	mov    rdi,QWORD PTR [rbp+0x0]
  4311d7:	test   rdi,rdi
  4311da:	je     431410 <xmlStrEqual@plt+0x2d4d0>
  4311e0:	lea    ecx,[rdx+0x76c]
  4311e6:	lea    rax,[rip+0x1f7bf]        # 4509ac <xmlStrEqual@plt+0x4ca6c>
  4311ed:	jmp    430f70 <xmlStrEqual@plt+0x2d030>
  4311f2:	nop    WORD PTR [rax+rax*1+0x0]
  4311f8:	xor    edi,edi
  4311fa:	call   403b20 <time@plt>
  4311ff:	lea    rdi,[rsp+0x8]
  431204:	mov    QWORD PTR [rsp+0x8],rax
  431209:	call   403ab0 <localtime@plt>
  43120e:	mov    r11d,DWORD PTR [rax]
  431211:	mov    r10d,DWORD PTR [rax+0x4]
  431215:	mov    r9d,DWORD PTR [rax+0x8]
  431219:	mov    r8d,DWORD PTR [rax+0xc]
  43121d:	mov    esi,DWORD PTR [rax+0x10]
  431220:	mov    edx,DWORD PTR [rax+0x14]
  431223:	mov    rax,0x4757bc
  43122a:	mov    eax,DWORD PTR [rax]
  43122c:	test   eax,eax
  43122e:	je     431300 <xmlStrEqual@plt+0x2d3c0>
  431234:	mov    rbp,0x473ef0
  43123b:	mov    rdi,QWORD PTR [rbp+0x0]
  43123f:	test   rdi,rdi
  431242:	je     431260 <xmlStrEqual@plt+0x2d320>
  431244:	lea    ecx,[rdx+0x76c]
  43124a:	lea    rax,[rip+0x1f76b]        # 4509bc <xmlStrEqual@plt+0x4ca7c>
  431251:	jmp    430f70 <xmlStrEqual@plt+0x2d030>
  431256:	nop    WORD PTR cs:[rax+rax*1+0x0]
  431260:	lea    rcx,[rsp+0x10]
  431265:	mov    rdx,rbx
  431268:	mov    esi,0x1
  43126d:	mov    edi,0x6
  431272:	call   403840 <__vsyslog_chk@plt>
  431277:	jmp    430ef0 <xmlStrEqual@plt+0x2cfb0>
  43127c:	nop    DWORD PTR [rax+0x0]
  431280:	lea    ecx,[rsi+0x1]
  431283:	add    edx,0x76c
  431289:	sub    rsp,0x8
  43128d:	lea    rax,[rip+0x1f712]        # 4509a6 <xmlStrEqual@plt+0x4ca66>
  431294:	nop    DWORD PTR [rax+0x0]
  431298:	push   rax
  431299:	push   r11
  43129b:	push   r10
  43129d:	lea    rsi,[rip+0x1f6d3]        # 450977 <xmlStrEqual@plt+0x4ca37>
  4312a4:	mov    edi,0x1
  4312a9:	xor    eax,eax
  4312ab:	call   4037d0 <__printf_chk@plt>
  4312b0:	mov    rax,QWORD PTR [rip+0x37cf1]        # 468fa8 <xmlStrEqual@plt+0x65068>
  4312b7:	add    rsp,0x20
  4312bb:	mov    rdi,QWORD PTR [rax]
  4312be:	lea    rcx,[rsp+0x10]
  4312c3:	mov    rdx,rbx
  4312c6:	mov    esi,0x1
  4312cb:	call   4038c0 <__vfprintf_chk@plt>
  4312d0:	mov    edi,0xa
  4312d5:	call   403d10 <putchar@plt>
  4312da:	jmp    430ef0 <xmlStrEqual@plt+0x2cfb0>
  4312df:	nop
  4312e0:	lea    ecx,[rsi+0x1]
  4312e3:	add    edx,0x76c
  4312e9:	sub    rsp,0x8
  4312ed:	lea    rax,[rip+0x1f6b8]        # 4509ac <xmlStrEqual@plt+0x4ca6c>
  4312f4:	jmp    431298 <xmlStrEqual@plt+0x2d358>
  4312f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  431300:	lea    ecx,[rsi+0x1]
  431303:	add    edx,0x76c
  431309:	sub    rsp,0x8
  43130d:	lea    rax,[rip+0x1f6a8]        # 4509bc <xmlStrEqual@plt+0x4ca7c>
  431314:	jmp    431298 <xmlStrEqual@plt+0x2d358>
  431316:	nop    WORD PTR cs:[rax+rax*1+0x0]
  431320:	xor    edi,edi
  431322:	call   403b20 <time@plt>
  431327:	lea    rdi,[rsp+0x8]
  43132c:	mov    QWORD PTR [rsp+0x8],rax
  431331:	call   403ab0 <localtime@plt>
  431336:	mov    rcx,0x4757bc
  43133d:	mov    r10d,DWORD PTR [rax]
  431340:	mov    ecx,DWORD PTR [rcx]
  431342:	mov    esi,DWORD PTR [rax+0x4]
  431345:	mov    r9d,DWORD PTR [rax+0x8]
  431349:	mov    r8d,DWORD PTR [rax+0xc]
  43134d:	mov    edx,DWORD PTR [rax+0x10]
  431350:	mov    eax,DWORD PTR [rax+0x14]
  431353:	test   ecx,ecx
  431355:	je     431490 <xmlStrEqual@plt+0x2d550>
  43135b:	mov    rbp,0x473ef0
  431362:	mov    rdi,QWORD PTR [rbp+0x0]
  431366:	test   rdi,rdi
  431369:	je     431410 <xmlStrEqual@plt+0x2d4d0>
  43136f:	lea    ecx,[rax+0x76c]
  431375:	lea    rax,[rip+0x1f638]        # 4509b4 <xmlStrEqual@plt+0x4ca74>
  43137c:	push   rax
  43137d:	push   r10
  43137f:	push   rsi
  431380:	push   r9
  431382:	mov    r9d,r8d
  431385:	lea    r8d,[rdx+0x1]
  431389:	jmp    430f7e <xmlStrEqual@plt+0x2d03e>
  43138e:	xchg   ax,ax
  431390:	lea    ecx,[rsi+0x1]
  431393:	add    edx,0x76c
  431399:	sub    rsp,0x8
  43139d:	lea    rax,[rip+0x1f5f5]        # 450999 <xmlStrEqual@plt+0x4ca59>
  4313a4:	jmp    431298 <xmlStrEqual@plt+0x2d358>
  4313a9:	nop    DWORD PTR [rax+0x0]
  4313b0:	lea    ecx,[rsi+0x1]
  4313b3:	add    edx,0x76c
  4313b9:	sub    rsp,0x8
  4313bd:	lea    rax,[rip+0x1f5d1]        # 450995 <xmlStrEqual@plt+0x4ca55>
  4313c4:	jmp    431298 <xmlStrEqual@plt+0x2d358>
  4313c9:	nop    DWORD PTR [rax+0x0]
  4313d0:	lea    ecx,[rsi+0x1]
  4313d3:	add    edx,0x76c
  4313d9:	sub    rsp,0x8
  4313dd:	lea    rax,[rip+0x1f5ac]        # 450990 <xmlStrEqual@plt+0x4ca50>
  4313e4:	jmp    431298 <xmlStrEqual@plt+0x2d358>
  4313e9:	nop    DWORD PTR [rax+0x0]
  4313f0:	lea    ecx,[rsi+0x1]
  4313f3:	add    edx,0x76c
  4313f9:	sub    rsp,0x8
  4313fd:	lea    rax,[rip+0x1f59d]        # 4509a1 <xmlStrEqual@plt+0x4ca61>
  431404:	jmp    431298 <xmlStrEqual@plt+0x2d358>
  431409:	nop    DWORD PTR [rax+0x0]
  431410:	lea    rcx,[rsp+0x10]
  431415:	mov    rdx,rbx
  431418:	mov    esi,0x1
  43141d:	mov    edi,0x7
  431422:	call   403840 <__vsyslog_chk@plt>
  431427:	jmp    430ef0 <xmlStrEqual@plt+0x2cfb0>
  43142c:	nop    DWORD PTR [rax+0x0]
  431430:	lea    rcx,[rsp+0x10]
  431435:	mov    rdx,rbx
  431438:	mov    esi,0x1
  43143d:	mov    edi,0x2
  431442:	call   403840 <__vsyslog_chk@plt>
  431447:	jmp    430ef0 <xmlStrEqual@plt+0x2cfb0>
  43144c:	nop    DWORD PTR [rax+0x0]
  431450:	lea    rcx,[rsp+0x10]
  431455:	mov    rdx,rbx
  431458:	mov    esi,0x1
  43145d:	mov    edi,0x3
  431462:	call   403840 <__vsyslog_chk@plt>
  431467:	jmp    430ef0 <xmlStrEqual@plt+0x2cfb0>
  43146c:	nop    DWORD PTR [rax+0x0]
  431470:	lea    rcx,[rsp+0x10]
  431475:	mov    rdx,rbx
  431478:	mov    esi,0x1
  43147d:	mov    edi,0x4
  431482:	call   403840 <__vsyslog_chk@plt>
  431487:	jmp    430ef0 <xmlStrEqual@plt+0x2cfb0>
  43148c:	nop    DWORD PTR [rax+0x0]
  431490:	sub    rsp,0x8
  431494:	lea    ecx,[rdx+0x1]
  431497:	lea    edx,[rax+0x76c]
  43149d:	lea    rax,[rip+0x1f510]        # 4509b4 <xmlStrEqual@plt+0x4ca74>
  4314a4:	push   rax
  4314a5:	push   r10
  4314a7:	push   rsi
  4314a8:	jmp    43129d <xmlStrEqual@plt+0x2d35d>
  4314ad:	call   403c00 <__stack_chk_fail@plt>
  4314b2:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4314bd:	nop    DWORD PTR [rax]
  4314c0:	endbr64 
  4314c4:	push   r14
  4314c6:	mov    r14,rsi
  4314c9:	push   r13
  4314cb:	mov    r13d,edi
  4314ce:	xor    edi,edi
  4314d0:	push   r12
  4314d2:	mov    r12,rcx
  4314d5:	push   rbp
  4314d6:	mov    rbp,rdx
  4314d9:	push   rbx
  4314da:	sub    rsp,0x10
  4314de:	mov    rax,QWORD PTR fs:0x28
  4314e7:	mov    QWORD PTR [rsp+0x8],rax
  4314ec:	xor    eax,eax
  4314ee:	call   403b20 <time@plt>
  4314f3:	mov    rdi,rsp
  4314f6:	mov    QWORD PTR [rsp],rax
  4314fa:	call   403ab0 <localtime@plt>
  4314ff:	mov    r11d,DWORD PTR [rax]
  431502:	mov    r10d,DWORD PTR [rax+0x4]
  431506:	mov    r9d,DWORD PTR [rax+0x8]
  43150a:	mov    r8d,DWORD PTR [rax+0xc]
  43150e:	mov    esi,DWORD PTR [rax+0x10]
  431511:	mov    edx,DWORD PTR [rax+0x14]
  431514:	mov    rax,0x4757bc
  43151b:	mov    eax,DWORD PTR [rax]
  43151d:	test   eax,eax
  43151f:	je     4315c0 <xmlStrEqual@plt+0x2d680>
  431525:	mov    rbx,0x473ef0
  43152c:	mov    rdi,QWORD PTR [rbx]
  43152f:	test   rdi,rdi
  431532:	je     4315a8 <xmlStrEqual@plt+0x2d668>
  431534:	push   r14
  431536:	lea    ecx,[rdx+0x76c]
  43153c:	xor    eax,eax
  43153e:	push   r11
  431540:	lea    rdx,[rip+0x1f430]        # 450977 <xmlStrEqual@plt+0x4ca37>
  431547:	push   r10
  431549:	push   r9
  43154b:	mov    r9d,r8d
  43154e:	lea    r8d,[rsi+0x1]
  431552:	mov    esi,0x1
  431557:	call   403e20 <__fprintf_chk@plt>
  43155c:	mov    rdi,QWORD PTR [rbx]
  43155f:	add    rsp,0x20
  431563:	mov    rcx,r12
  431566:	mov    rdx,rbp
  431569:	mov    esi,0x1
  43156e:	call   4038c0 <__vfprintf_chk@plt>
  431573:	mov    rsi,QWORD PTR [rbx]
  431576:	mov    edi,0xa
  43157b:	call   403c80 <fputc@plt>
  431580:	mov    rdi,QWORD PTR [rbx]
  431583:	call   403c20 <fflush@plt>
  431588:	mov    rax,QWORD PTR [rsp+0x8]
  43158d:	xor    rax,QWORD PTR fs:0x28
  431596:	jne    431613 <xmlStrEqual@plt+0x2d6d3>
  431598:	add    rsp,0x10
  43159c:	pop    rbx
  43159d:	pop    rbp
  43159e:	pop    r12
  4315a0:	pop    r13
  4315a2:	pop    r14
  4315a4:	ret    
  4315a5:	nop    DWORD PTR [rax]
  4315a8:	mov    rcx,r12
  4315ab:	mov    rdx,rbp
  4315ae:	mov    esi,0x1
  4315b3:	mov    edi,r13d
  4315b6:	call   403840 <__vsyslog_chk@plt>
  4315bb:	jmp    431588 <xmlStrEqual@plt+0x2d648>
  4315bd:	nop    DWORD PTR [rax]
  4315c0:	sub    rsp,0x8
  4315c4:	push   r14
  4315c6:	lea    ecx,[rsi+0x1]
  4315c9:	add    edx,0x76c
  4315cf:	push   r11
  4315d1:	lea    rsi,[rip+0x1f39f]        # 450977 <xmlStrEqual@plt+0x4ca37>
  4315d8:	mov    edi,0x1
  4315dd:	push   r10
  4315df:	xor    eax,eax
  4315e1:	call   4037d0 <__printf_chk@plt>
  4315e6:	mov    rax,QWORD PTR [rip+0x379bb]        # 468fa8 <xmlStrEqual@plt+0x65068>
  4315ed:	add    rsp,0x20
  4315f1:	mov    rdi,QWORD PTR [rax]
  4315f4:	mov    rcx,r12
  4315f7:	mov    rdx,rbp
  4315fa:	mov    esi,0x1
  4315ff:	call   4038c0 <__vfprintf_chk@plt>
  431604:	mov    edi,0xa
  431609:	call   403d10 <putchar@plt>
  43160e:	jmp    431588 <xmlStrEqual@plt+0x2d648>
  431613:	call   403c00 <__stack_chk_fail@plt>
  431618:	nop    DWORD PTR [rax+rax*1+0x0]
  431620:	endbr64 
  431624:	test   rdi,rdi
  431627:	je     431658 <xmlStrEqual@plt+0x2d718>
  431629:	push   rbx
  43162a:	mov    rax,QWORD PTR [rip+0x37997]        # 468fc8 <xmlStrEqual@plt+0x65088>
  431631:	lea    rsi,[rip+0x15a1c]        # 447054 <xmlStrEqual@plt+0x43114>
  431638:	mov    rdx,QWORD PTR [rax]
  43163b:	mov    rbx,rdi
  43163e:	call   403bb0 <freopen@plt>
  431643:	mov    rdx,0x473ef0
  43164a:	mov    QWORD PTR [rdx],rax
  43164d:	test   rax,rax
  431650:	je     431660 <xmlStrEqual@plt+0x2d720>
  431652:	pop    rbx
  431653:	ret    
  431654:	nop    DWORD PTR [rax+0x0]
  431658:	ret    
  431659:	nop    DWORD PTR [rax+0x0]
  431660:	call   4037f0 <__errno_location@plt>
  431665:	mov    edi,DWORD PTR [rax]
  431667:	call   403910 <strerror@plt>
  43166c:	mov    rcx,rax
  43166f:	mov    rdx,rbx
  431672:	lea    rsi,[rip+0x1f367]        # 4509e0 <xmlStrEqual@plt+0x4caa0>
  431679:	mov    edi,0x2
  43167e:	xor    eax,eax
  431680:	pop    rbx
  431681:	jmp    430e20 <xmlStrEqual@plt+0x2cee0>
  431686:	nop    WORD PTR cs:[rax+rax*1+0x0]
  431690:	endbr64 
  431694:	mov    rax,0x473ef0
  43169b:	mov    rdi,QWORD PTR [rax]
  43169e:	test   rdi,rdi
  4316a1:	je     4316b0 <xmlStrEqual@plt+0x2d770>
  4316a3:	jmp    403b80 <fclose@plt>
  4316a8:	nop    DWORD PTR [rax+rax*1+0x0]
  4316b0:	ret    
  4316b1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4316bb:	nop    DWORD PTR [rax+rax*1+0x0]
  4316c0:	push   rbp
  4316c1:	mov    rbp,rdi
  4316c4:	mov    rdi,rdx
  4316c7:	push   rbx
  4316c8:	mov    rbx,rsi
  4316cb:	sub    rsp,0x8
  4316cf:	call   429300 <xmlStrEqual@plt+0x253c0>
  4316d4:	cmp    al,0x2
  4316d6:	je     4316f8 <xmlStrEqual@plt+0x2d7b8>
  4316d8:	cmp    al,0xa
  4316da:	je     431710 <xmlStrEqual@plt+0x2d7d0>
  4316dc:	mov    rdx,0x469e3c
  4316e3:	xor    ebx,ebx
  4316e5:	mov    edx,DWORD PTR [rdx]
  4316e7:	test   edx,edx
  4316e9:	jg     431720 <xmlStrEqual@plt+0x2d7e0>
  4316eb:	add    rsp,0x8
  4316ef:	mov    rax,rbx
  4316f2:	pop    rbx
  4316f3:	pop    rbp
  4316f4:	ret    
  4316f5:	nop    DWORD PTR [rax]
  4316f8:	mov    rbx,QWORD PTR [rbp+0x0]
  4316fc:	add    rsp,0x8
  431700:	mov    rax,rbx
  431703:	pop    rbx
  431704:	pop    rbp
  431705:	ret    
  431706:	nop    WORD PTR cs:[rax+rax*1+0x0]
  431710:	mov    rbx,QWORD PTR [rbx]
  431713:	add    rsp,0x8
  431717:	mov    rax,rbx
  43171a:	pop    rbx
  43171b:	pop    rbp
  43171c:	ret    
  43171d:	nop    DWORD PTR [rax]
  431720:	movzx  edx,al
  431723:	lea    rsi,[rip+0x1f2ee]        # 450a18 <xmlStrEqual@plt+0x4cad8>
  43172a:	xor    eax,eax
  43172c:	mov    edi,0x5
  431731:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  431736:	add    rsp,0x8
  43173a:	mov    rax,rbx
  43173d:	pop    rbx
  43173e:	pop    rbp
  43173f:	ret    
  431740:	push   rbx
  431741:	cmp    si,0x2
  431745:	je     431768 <xmlStrEqual@plt+0x2d828>
  431747:	cmp    si,0xa
  43174b:	je     431780 <xmlStrEqual@plt+0x2d840>
  43174d:	mov    rax,0x469e3c
  431754:	xor    ebx,ebx
  431756:	mov    eax,DWORD PTR [rax]
  431758:	test   eax,eax
  43175a:	jg     431790 <xmlStrEqual@plt+0x2d850>
  43175c:	mov    rax,rbx
  43175f:	pop    rbx
  431760:	ret    
  431761:	nop    DWORD PTR [rax+0x0]
  431768:	mov    rax,QWORD PTR [rdi]
  43176b:	mov    rax,QWORD PTR [rax]
  43176e:	mov    rbx,QWORD PTR [rax+0x28]
  431772:	mov    rax,rbx
  431775:	pop    rbx
  431776:	ret    
  431777:	nop    WORD PTR [rax+rax*1+0x0]
  431780:	mov    rax,QWORD PTR [rdi+0x8]
  431784:	mov    rax,QWORD PTR [rax]
  431787:	mov    rbx,QWORD PTR [rax+0x28]
  43178b:	mov    rax,rbx
  43178e:	pop    rbx
  43178f:	ret    
  431790:	movzx  edx,si
  431793:	xor    eax,eax
  431795:	lea    rsi,[rip+0x1f2ac]        # 450a48 <xmlStrEqual@plt+0x4cb08>
  43179c:	mov    edi,0x5
  4317a1:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  4317a6:	mov    rax,rbx
  4317a9:	pop    rbx
  4317aa:	ret    
  4317ab:	nop    DWORD PTR [rax+rax*1+0x0]
  4317b0:	push   r13
  4317b2:	mov    r13,rdi
  4317b5:	mov    rdi,rdx
  4317b8:	push   r12
  4317ba:	mov    r12,rsi
  4317bd:	push   rbp
  4317be:	push   rbx
  4317bf:	mov    rbx,rdx
  4317c2:	sub    rsp,0x8
  4317c6:	call   428d70 <xmlStrEqual@plt+0x24e30>
  4317cb:	mov    rdi,rax
  4317ce:	call   429940 <xmlStrEqual@plt+0x25a00>
  4317d3:	mov    rdi,rbx
  4317d6:	mov    ebp,eax
  4317d8:	call   428d70 <xmlStrEqual@plt+0x24e30>
  4317dd:	mov    rdi,rax
  4317e0:	call   429960 <xmlStrEqual@plt+0x25a20>
  4317e5:	cmp    DWORD PTR [rax+0x18],0x3
  4317e9:	je     431870 <xmlStrEqual@plt+0x2d930>
  4317ef:	mov    rdi,rax
  4317f2:	call   425890 <xmlStrEqual@plt+0x21950>
  4317f7:	cmp    ax,0x2
  4317fb:	je     431848 <xmlStrEqual@plt+0x2d908>
  4317fd:	cmp    ax,0xa
  431801:	jne    431828 <xmlStrEqual@plt+0x2d8e8>
  431803:	mov    rdi,QWORD PTR [r12]
  431807:	mov    esi,ebp
  431809:	call   42fc50 <xmlStrEqual@plt+0x2bd10>
  43180e:	test   rax,rax
  431811:	je     431835 <xmlStrEqual@plt+0x2d8f5>
  431813:	mov    rax,QWORD PTR [rax]
  431816:	mov    rax,QWORD PTR [rax+0x28]
  43181a:	add    rsp,0x8
  43181e:	pop    rbx
  43181f:	pop    rbp
  431820:	pop    r12
  431822:	pop    r13
  431824:	ret    
  431825:	nop    DWORD PTR [rax]
  431828:	mov    rdx,0x469e3c
  43182f:	mov    edx,DWORD PTR [rdx]
  431831:	test   edx,edx
  431833:	jg     431850 <xmlStrEqual@plt+0x2d910>
  431835:	xor    eax,eax
  431837:	add    rsp,0x8
  43183b:	pop    rbx
  43183c:	pop    rbp
  43183d:	pop    r12
  43183f:	pop    r13
  431841:	ret    
  431842:	nop    WORD PTR [rax+rax*1+0x0]
  431848:	mov    rdi,QWORD PTR [r13+0x0]
  43184c:	jmp    431807 <xmlStrEqual@plt+0x2d8c7>
  43184e:	xchg   ax,ax
  431850:	movzx  edx,ax
  431853:	lea    rsi,[rip+0x1f25e]        # 450ab8 <xmlStrEqual@plt+0x4cb78>
  43185a:	xor    eax,eax
  43185c:	mov    edi,0x5
  431861:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  431866:	xor    eax,eax
  431868:	jmp    43181a <xmlStrEqual@plt+0x2d8da>
  43186a:	nop    WORD PTR [rax+rax*1+0x0]
  431870:	mov    rax,0x469e3c
  431877:	mov    ecx,DWORD PTR [rax]
  431879:	test   ecx,ecx
  43187b:	jle    431835 <xmlStrEqual@plt+0x2d8f5>
  43187d:	xor    eax,eax
  43187f:	lea    rsi,[rip+0x1f1f2]        # 450a78 <xmlStrEqual@plt+0x4cb38>
  431886:	mov    edi,0x5
  43188b:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  431890:	xor    eax,eax
  431892:	jmp    431837 <xmlStrEqual@plt+0x2d8f7>
  431894:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  43189f:	nop
  4318a0:	endbr64 
  4318a4:	push   rbp
  4318a5:	mov    rbp,rsi
  4318a8:	push   rbx
  4318a9:	mov    rbx,rdi
  4318ac:	mov    rdi,rsi
  4318af:	sub    rsp,0x8
  4318b3:	call   428cf0 <xmlStrEqual@plt+0x24db0>
  4318b8:	cmp    eax,0x2
  4318bb:	je     4318e0 <xmlStrEqual@plt+0x2d9a0>
  4318bd:	cmp    eax,0x9
  4318c0:	je     431900 <xmlStrEqual@plt+0x2d9c0>
  4318c2:	mov    rax,0x469e3c
  4318c9:	cmp    DWORD PTR [rax],0x2
  4318cc:	jg     431920 <xmlStrEqual@plt+0x2d9e0>
  4318ce:	add    rsp,0x8
  4318d2:	pop    rbx
  4318d3:	xor    eax,eax
  4318d5:	pop    rbp
  4318d6:	ret    
  4318d7:	nop    WORD PTR [rax+rax*1+0x0]
  4318e0:	add    rsp,0x8
  4318e4:	lea    rsi,[rbx+0x18]
  4318e8:	lea    rdi,[rbx+0x10]
  4318ec:	pop    rbx
  4318ed:	mov    rdx,rbp
  4318f0:	pop    rbp
  4318f1:	jmp    4317b0 <xmlStrEqual@plt+0x2d870>
  4318f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  431900:	add    rsp,0x8
  431904:	lea    rsi,[rbx+0x28]
  431908:	lea    rdi,[rbx+0x20]
  43190c:	pop    rbx
  43190d:	mov    rdx,rbp
  431910:	pop    rbp
  431911:	jmp    4316c0 <xmlStrEqual@plt+0x2d780>
  431916:	nop    WORD PTR cs:[rax+rax*1+0x0]
  431920:	mov    rdi,rbp
  431923:	call   428cf0 <xmlStrEqual@plt+0x24db0>
  431928:	mov    edx,eax
  43192a:	lea    rsi,[rip+0x1f1b7]        # 450ae8 <xmlStrEqual@plt+0x4cba8>
  431931:	xor    eax,eax
  431933:	mov    edi,0x7
  431938:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  43193d:	add    rsp,0x8
  431941:	pop    rbx
  431942:	xor    eax,eax
  431944:	pop    rbp
  431945:	ret    
  431946:	nop    WORD PTR cs:[rax+rax*1+0x0]
  431950:	endbr64 
  431954:	push   rbx
  431955:	mov    edx,DWORD PTR [rsi+0x18]
  431958:	test   edx,edx
  43195a:	je     431970 <xmlStrEqual@plt+0x2da30>
  43195c:	mov    rbx,rdi
  43195f:	cmp    edx,0x2
  431962:	jbe    431998 <xmlStrEqual@plt+0x2da58>
  431964:	cmp    edx,0x3
  431967:	jne    431970 <xmlStrEqual@plt+0x2da30>
  431969:	pop    rbx
  43196a:	jmp    4318a0 <xmlStrEqual@plt+0x2d960>
  43196f:	nop
  431970:	mov    rax,0x469e3c
  431977:	cmp    DWORD PTR [rax],0x2
  43197a:	jle    43198f <xmlStrEqual@plt+0x2da4f>
  43197c:	lea    rsi,[rip+0x1f1a5]        # 450b28 <xmlStrEqual@plt+0x4cbe8>
  431983:	mov    edi,0x7
  431988:	xor    eax,eax
  43198a:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  43198f:	xor    eax,eax
  431991:	pop    rbx
  431992:	ret    
  431993:	nop    DWORD PTR [rax+rax*1+0x0]
  431998:	mov    rdi,rsi
  43199b:	call   425890 <xmlStrEqual@plt+0x21950>
  4319a0:	movzx  esi,ax
  4319a3:	mov    rdi,rbx
  4319a6:	pop    rbx
  4319a7:	jmp    431740 <xmlStrEqual@plt+0x2d800>
  4319ac:	nop    DWORD PTR [rax+0x0]
  4319b0:	endbr64 
  4319b4:	push   r14
  4319b6:	push   r13
  4319b8:	push   r12
  4319ba:	mov    r12,rdi
  4319bd:	push   rbp
  4319be:	mov    rbp,rsi
  4319c1:	push   rbx
  4319c2:	sub    rsp,0x410
  4319c9:	mov    rax,QWORD PTR fs:0x28
  4319d2:	mov    QWORD PTR [rsp+0x408],rax
  4319da:	xor    eax,eax
  4319dc:	mov    rax,QWORD PTR [rdi]
  4319df:	mov    rax,QWORD PTR [rax]
  4319e2:	mov    rdi,QWORD PTR [rax+0x28]
  4319e6:	call   420210 <xmlStrEqual@plt+0x1c2d0>
  4319eb:	mov    rdi,QWORD PTR [r12]
  4319ef:	xor    esi,esi
  4319f1:	call   420210 <xmlStrEqual@plt+0x1c2d0>
  4319f6:	mov    rax,QWORD PTR [r12+0x8]
  4319fb:	mov    rsi,rbp
  4319fe:	mov    rax,QWORD PTR [rax]
  431a01:	mov    rdi,QWORD PTR [rax+0x28]
  431a05:	call   420210 <xmlStrEqual@plt+0x1c2d0>
  431a0a:	mov    rdi,QWORD PTR [r12+0x8]
  431a0f:	xor    esi,esi
  431a11:	call   420210 <xmlStrEqual@plt+0x1c2d0>
  431a16:	mov    rdi,QWORD PTR [r12+0x10]
  431a1b:	mov    rsi,QWORD PTR [rdi]
  431a1e:	mov    edx,DWORD PTR [rsi]
  431a20:	test   edx,edx
  431a22:	je     431a89 <xmlStrEqual@plt+0x2db49>
  431a24:	xor    ebx,ebx
  431a26:	jmp    431a39 <xmlStrEqual@plt+0x2daf9>
  431a28:	nop    DWORD PTR [rax+rax*1+0x0]
  431a30:	mov    rsi,QWORD PTR [rdi]
  431a33:	inc    ebx
  431a35:	cmp    DWORD PTR [rsi],ebx
  431a37:	je     431a89 <xmlStrEqual@plt+0x2db49>
  431a39:	mov    ecx,ebx
  431a3b:	mov    r8,QWORD PTR [rsi+0x10]
  431a3f:	lea    eax,[rbx+rbx*1]
  431a42:	and    eax,0x1e
  431a45:	shr    ecx,0x4
  431a48:	mov    edx,eax
  431a4a:	mov    eax,DWORD PTR [r8+rcx*4]
  431a4e:	shrx   eax,eax,edx
  431a53:	test   al,0x3
  431a55:	jne    431a30 <xmlStrEqual@plt+0x2daf0>
  431a57:	mov    rdx,QWORD PTR [rsi+0x20]
  431a5b:	mov    eax,ebx
  431a5d:	mov    r13,QWORD PTR [rdx+rax*8]
  431a61:	mov    rsi,rbp
  431a64:	mov    rax,QWORD PTR [r13+0x0]
  431a68:	inc    ebx
  431a6a:	mov    rdi,QWORD PTR [rax+0x28]
  431a6e:	call   420210 <xmlStrEqual@plt+0x1c2d0>
  431a73:	xor    esi,esi
  431a75:	mov    rdi,r13
  431a78:	call   420210 <xmlStrEqual@plt+0x1c2d0>
  431a7d:	mov    rdi,QWORD PTR [r12+0x10]
  431a82:	mov    rsi,QWORD PTR [rdi]
  431a85:	cmp    DWORD PTR [rsi],ebx
  431a87:	jne    431a39 <xmlStrEqual@plt+0x2daf9>
  431a89:	call   42fcf0 <xmlStrEqual@plt+0x2bdb0>
  431a8e:	mov    rdi,QWORD PTR [r12+0x18]
  431a93:	mov    rsi,QWORD PTR [rdi]
  431a96:	mov    eax,DWORD PTR [rsi]
  431a98:	test   eax,eax
  431a9a:	je     431af9 <xmlStrEqual@plt+0x2dbb9>
  431a9c:	xor    ebx,ebx
  431a9e:	jmp    431aa9 <xmlStrEqual@plt+0x2db69>
  431aa0:	mov    rsi,QWORD PTR [rdi]
  431aa3:	inc    ebx
  431aa5:	cmp    DWORD PTR [rsi],ebx
  431aa7:	je     431af9 <xmlStrEqual@plt+0x2dbb9>
  431aa9:	mov    ecx,ebx
  431aab:	mov    r8,QWORD PTR [rsi+0x10]
  431aaf:	lea    eax,[rbx+rbx*1]
  431ab2:	and    eax,0x1e
  431ab5:	shr    ecx,0x4
  431ab8:	mov    edx,eax
  431aba:	mov    eax,DWORD PTR [r8+rcx*4]
  431abe:	shrx   eax,eax,edx
  431ac3:	test   al,0x3
  431ac5:	jne    431aa0 <xmlStrEqual@plt+0x2db60>
  431ac7:	mov    rdx,QWORD PTR [rsi+0x20]
  431acb:	mov    eax,ebx
  431acd:	mov    r13,QWORD PTR [rdx+rax*8]
  431ad1:	mov    rsi,rbp
  431ad4:	mov    rax,QWORD PTR [r13+0x0]
  431ad8:	inc    ebx
  431ada:	mov    rdi,QWORD PTR [rax+0x28]
  431ade:	call   420210 <xmlStrEqual@plt+0x1c2d0>
  431ae3:	xor    esi,esi
  431ae5:	mov    rdi,r13
  431ae8:	call   420210 <xmlStrEqual@plt+0x1c2d0>
  431aed:	mov    rdi,QWORD PTR [r12+0x18]
  431af2:	mov    rsi,QWORD PTR [rdi]
  431af5:	cmp    DWORD PTR [rsi],ebx
  431af7:	jne    431aa9 <xmlStrEqual@plt+0x2db69>
  431af9:	call   42fcf0 <xmlStrEqual@plt+0x2bdb0>
  431afe:	mov    rdi,QWORD PTR [r12+0x20]
  431b03:	mov    rbx,QWORD PTR [rdi]
  431b06:	test   rbx,rbx
  431b09:	je     431b7b <xmlStrEqual@plt+0x2dc3b>
  431b0b:	mov    r13,rsp
  431b0e:	mov    r14,r13
  431b11:	nop    DWORD PTR [rax+0x0]
  431b18:	cmp    QWORD PTR [rbx+0x8],0x0
  431b1d:	je     431b2b <xmlStrEqual@plt+0x2dbeb>
  431b1f:	mov    rdi,QWORD PTR [rbx+0x28]
  431b23:	mov    rsi,rbp
  431b26:	call   420210 <xmlStrEqual@plt+0x1c2d0>
  431b2b:	mov    rax,QWORD PTR [rbx+0x10]
  431b2f:	mov    rbx,QWORD PTR [rbx+0x18]
  431b33:	test   rax,rax
  431b36:	je     431b5f <xmlStrEqual@plt+0x2dc1f>
  431b38:	test   rbx,rbx
  431b3b:	je     431c28 <xmlStrEqual@plt+0x2dce8>
  431b41:	mov    QWORD PTR [r14],rbx
  431b44:	mov    rbx,rax
  431b47:	add    r14,0x8
  431b4b:	cmp    QWORD PTR [rbx+0x8],0x0
  431b50:	jne    431b1f <xmlStrEqual@plt+0x2dbdf>
  431b52:	mov    rax,QWORD PTR [rbx+0x10]
  431b56:	mov    rbx,QWORD PTR [rbx+0x18]
  431b5a:	test   rax,rax
  431b5d:	jne    431b38 <xmlStrEqual@plt+0x2dbf8>
  431b5f:	test   rbx,rbx
  431b62:	jne    431b18 <xmlStrEqual@plt+0x2dbd8>
  431b64:	cmp    r14,r13
  431b67:	je     431b76 <xmlStrEqual@plt+0x2dc36>
  431b69:	mov    rbx,QWORD PTR [r14-0x8]
  431b6d:	test   rbx,rbx
  431b70:	jne    431c40 <xmlStrEqual@plt+0x2dd00>
  431b76:	mov    rdi,QWORD PTR [r12+0x20]
  431b7b:	xor    esi,esi
  431b7d:	call   420210 <xmlStrEqual@plt+0x1c2d0>
  431b82:	mov    rdi,QWORD PTR [r12+0x28]
  431b87:	mov    rbx,QWORD PTR [rdi]
  431b8a:	test   rbx,rbx
  431b8d:	je     431bf3 <xmlStrEqual@plt+0x2dcb3>
  431b8f:	mov    r13,rsp
  431b92:	mov    r14,r13
  431b95:	nop    DWORD PTR [rax]
  431b98:	cmp    QWORD PTR [rbx+0x8],0x0
  431b9d:	je     431bab <xmlStrEqual@plt+0x2dc6b>
  431b9f:	mov    rdi,QWORD PTR [rbx+0x28]
  431ba3:	mov    rsi,rbp
  431ba6:	call   420210 <xmlStrEqual@plt+0x1c2d0>
  431bab:	mov    rax,QWORD PTR [rbx+0x10]
  431baf:	mov    rbx,QWORD PTR [rbx+0x18]
  431bb3:	test   rax,rax
  431bb6:	je     431bdb <xmlStrEqual@plt+0x2dc9b>
  431bb8:	test   rbx,rbx
  431bbb:	je     431c30 <xmlStrEqual@plt+0x2dcf0>
  431bbd:	mov    QWORD PTR [r14],rbx
  431bc0:	mov    rbx,rax
  431bc3:	add    r14,0x8
  431bc7:	cmp    QWORD PTR [rbx+0x8],0x0
  431bcc:	jne    431b9f <xmlStrEqual@plt+0x2dc5f>
  431bce:	mov    rax,QWORD PTR [rbx+0x10]
  431bd2:	mov    rbx,QWORD PTR [rbx+0x18]
  431bd6:	test   rax,rax
  431bd9:	jne    431bb8 <xmlStrEqual@plt+0x2dc78>
  431bdb:	test   rbx,rbx
  431bde:	jne    431b98 <xmlStrEqual@plt+0x2dc58>
  431be0:	cmp    r14,r13
  431be3:	je     431bee <xmlStrEqual@plt+0x2dcae>
  431be5:	mov    rbx,QWORD PTR [r14-0x8]
  431be9:	test   rbx,rbx
  431bec:	jne    431c50 <xmlStrEqual@plt+0x2dd10>
  431bee:	mov    rdi,QWORD PTR [r12+0x28]
  431bf3:	xor    esi,esi
  431bf5:	call   420210 <xmlStrEqual@plt+0x1c2d0>
  431bfa:	mov    rax,QWORD PTR [rsp+0x408]
  431c02:	xor    rax,QWORD PTR fs:0x28
  431c0b:	jne    431c59 <xmlStrEqual@plt+0x2dd19>
  431c0d:	add    rsp,0x410
  431c14:	pop    rbx
  431c15:	pop    rbp
  431c16:	mov    rdi,r12
  431c19:	pop    r12
  431c1b:	pop    r13
  431c1d:	pop    r14
  431c1f:	jmp    4037b0 <free@plt>
  431c24:	nop    DWORD PTR [rax+0x0]
  431c28:	mov    rbx,rax
  431c2b:	jmp    431b18 <xmlStrEqual@plt+0x2dbd8>
  431c30:	mov    rbx,rax
  431c33:	jmp    431b98 <xmlStrEqual@plt+0x2dc58>
  431c38:	nop    DWORD PTR [rax+rax*1+0x0]
  431c40:	sub    r14,0x8
  431c44:	jmp    431b18 <xmlStrEqual@plt+0x2dbd8>
  431c49:	nop    DWORD PTR [rax+0x0]
  431c50:	sub    r14,0x8
  431c54:	jmp    431b98 <xmlStrEqual@plt+0x2dc58>
  431c59:	call   403c00 <__stack_chk_fail@plt>
  431c5e:	xchg   ax,ax
  431c60:	endbr64 
  431c64:	mov    eax,DWORD PTR [rdi+0x30]
  431c67:	ret    
  431c68:	nop    DWORD PTR [rax+rax*1+0x0]
  431c70:	endbr64 
  431c74:	jmp    420c90 <xmlStrEqual@plt+0x1cd50>
  431c79:	nop    DWORD PTR [rax+0x0]
  431c80:	endbr64 
  431c84:	mov    eax,DWORD PTR [rdi+0xc]
  431c87:	test   eax,eax
  431c89:	setle  al
  431c8c:	ret    
  431c8d:	nop    DWORD PTR [rax]
  431c90:	endbr64 
  431c94:	push   r12
  431c96:	mov    r12d,esi
  431c99:	push   rbp
  431c9a:	mov    rbp,rdi
  431c9d:	push   rbx
  431c9e:	call   425cc0 <xmlStrEqual@plt+0x21d80>
  431ca3:	mov    ebx,eax
  431ca5:	and    eax,0xfffffff7
  431ca8:	cmp    eax,0x2
  431cab:	jne    431d10 <xmlStrEqual@plt+0x2ddd0>
  431cad:	cmp    ebx,0x2
  431cb0:	je     431ce8 <xmlStrEqual@plt+0x2dda8>
  431cb2:	cmp    r12b,0x80
  431cb6:	ja     431d65 <xmlStrEqual@plt+0x2de25>
  431cbc:	mov    rdi,rbp
  431cbf:	call   425cd0 <xmlStrEqual@plt+0x21d90>
  431cc4:	mov    rsi,rax
  431cc7:	mov    edi,ebx
  431cc9:	movzx  edx,r12b
  431ccd:	call   41fdc0 <xmlStrEqual@plt+0x1be80>
  431cd2:	mov    rbx,rax
  431cd5:	test   rax,rax
  431cd8:	je     431d30 <xmlStrEqual@plt+0x2ddf0>
  431cda:	mov    rax,rbx
  431cdd:	pop    rbx
  431cde:	pop    rbp
  431cdf:	pop    r12
  431ce1:	ret    
  431ce2:	nop    WORD PTR [rax+rax*1+0x0]
  431ce8:	cmp    r12b,0x20
  431cec:	jbe    431cbc <xmlStrEqual@plt+0x2dd7c>
  431cee:	lea    rcx,[rip+0x1f75b]        # 451450 <xmlStrEqual@plt+0x4d510>
  431cf5:	mov    edx,0x3e8
  431cfa:	lea    rsi,[rip+0x1f6e9]        # 4513ea <xmlStrEqual@plt+0x4d4aa>
  431d01:	lea    rdi,[rip+0x1f6f3]        # 4513fb <xmlStrEqual@plt+0x4d4bb>
  431d08:	call   403a60 <__assert_fail@plt>
  431d0d:	nop    DWORD PTR [rax]
  431d10:	mov    edx,ebx
  431d12:	lea    rsi,[rip+0x1ee47]        # 450b60 <xmlStrEqual@plt+0x4cc20>
  431d19:	mov    edi,0x3
  431d1e:	xor    eax,eax
  431d20:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  431d25:	xor    ebx,ebx
  431d27:	jmp    431cda <xmlStrEqual@plt+0x2dd9a>
  431d29:	nop    DWORD PTR [rax+0x0]
  431d30:	call   4037f0 <__errno_location@plt>
  431d35:	mov    edi,DWORD PTR [rax]
  431d37:	call   403910 <strerror@plt>
  431d3c:	mov    rdi,rbp
  431d3f:	mov    r12,rax
  431d42:	call   426440 <xmlStrEqual@plt+0x22500>
  431d47:	mov    rdx,rax
  431d4a:	mov    rcx,r12
  431d4d:	lea    rsi,[rip+0x1ee3c]        # 450b90 <xmlStrEqual@plt+0x4cc50>
  431d54:	mov    edi,0x3
  431d59:	xor    eax,eax
  431d5b:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  431d60:	jmp    431cda <xmlStrEqual@plt+0x2dd9a>
  431d65:	lea    rcx,[rip+0x1f6e4]        # 451450 <xmlStrEqual@plt+0x4d510>
  431d6c:	mov    edx,0x3e8
  431d71:	lea    rsi,[rip+0x1f672]        # 4513ea <xmlStrEqual@plt+0x4d4aa>
  431d78:	lea    rdi,[rip+0x1f68c]        # 45140b <xmlStrEqual@plt+0x4d4cb>
  431d7f:	call   403a60 <__assert_fail@plt>
  431d84:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  431d8f:	nop
  431d90:	endbr64 
  431d94:	push   r13
  431d96:	mov    r13,rcx
  431d99:	push   r12
  431d9b:	mov    r12,rsi
  431d9e:	movzx  esi,dl
  431da1:	push   rbp
  431da2:	push   rbx
  431da3:	mov    rbx,rdi
  431da6:	mov    rdi,r12
  431da9:	sub    rsp,0x8
  431dad:	call   431c90 <xmlStrEqual@plt+0x2dd50>
  431db2:	mov    rsi,rax
  431db5:	mov    rdi,rbx
  431db8:	mov    rbp,rax
  431dbb:	call   4206f0 <xmlStrEqual@plt+0x1c7b0>
  431dc0:	mov    rbx,rax
  431dc3:	mov    rdi,rbp
  431dc6:	call   420000 <xmlStrEqual@plt+0x1c0c0>
  431dcb:	test   rbx,rbx
  431dce:	je     431e40 <xmlStrEqual@plt+0x2df00>
  431dd0:	cmp    QWORD PTR [rbx+0x28],0x0
  431dd5:	je     431df8 <xmlStrEqual@plt+0x2deb8>
  431dd7:	mov    rax,0x469e3c
  431dde:	cmp    DWORD PTR [rax],0x2
  431de1:	jg     431e10 <xmlStrEqual@plt+0x2ded0>
  431de3:	add    rsp,0x8
  431de7:	mov    rax,rbx
  431dea:	pop    rbx
  431deb:	pop    rbp
  431dec:	pop    r12
  431dee:	pop    r13
  431df0:	ret    
  431df1:	nop    DWORD PTR [rax+0x0]
  431df8:	mov    QWORD PTR [rbx+0x28],r13
  431dfc:	add    rsp,0x8
  431e00:	mov    rax,rbx
  431e03:	pop    rbx
  431e04:	pop    rbp
  431e05:	pop    r12
  431e07:	pop    r13
  431e09:	ret    
  431e0a:	nop    WORD PTR [rax+rax*1+0x0]
  431e10:	mov    rdi,r12
  431e13:	call   426440 <xmlStrEqual@plt+0x22500>
  431e18:	mov    rdx,rax
  431e1b:	lea    rsi,[rip+0x1edee]        # 450c10 <xmlStrEqual@plt+0x4ccd0>
  431e22:	xor    eax,eax
  431e24:	mov    edi,0x7
  431e29:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  431e2e:	add    rsp,0x8
  431e32:	mov    rax,rbx
  431e35:	pop    rbx
  431e36:	pop    rbp
  431e37:	pop    r12
  431e39:	pop    r13
  431e3b:	ret    
  431e3c:	nop    DWORD PTR [rax+0x0]
  431e40:	mov    rax,0x469e3c
  431e47:	cmp    DWORD PTR [rax],0x2
  431e4a:	jle    431de3 <xmlStrEqual@plt+0x2dea3>
  431e4c:	lea    rsi,[rip+0x1ed85]        # 450bd8 <xmlStrEqual@plt+0x4cc98>
  431e53:	mov    edi,0x7
  431e58:	xor    eax,eax
  431e5a:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  431e5f:	jmp    431de3 <xmlStrEqual@plt+0x2dea3>
  431e61:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  431e6c:	nop    DWORD PTR [rax+0x0]
  431e70:	endbr64 
  431e74:	push   r12
  431e76:	mov    edi,0x38
  431e7b:	push   rbp
  431e7c:	push   rbx
  431e7d:	sub    rsp,0x40
  431e81:	mov    rax,QWORD PTR fs:0x28
  431e8a:	mov    QWORD PTR [rsp+0x38],rax
  431e8f:	xor    eax,eax
  431e91:	call   434fe0 <xmlStrEqual@plt+0x310a0>
  431e96:	mov    rbx,rax
  431e99:	mov    rax,0x469e3c
  431ea0:	cmp    DWORD PTR [rax],0x2
  431ea3:	jle    431eb8 <xmlStrEqual@plt+0x2df78>
  431ea5:	lea    rsi,[rip+0x1f570]        # 45141c <xmlStrEqual@plt+0x4d4dc>
  431eac:	mov    edi,0x7
  431eb1:	xor    eax,eax
  431eb3:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  431eb8:	mov    edi,0x20
  431ebd:	call   420050 <xmlStrEqual@plt+0x1c110>
  431ec2:	mov    QWORD PTR [rbx],rax
  431ec5:	mov    edi,0x80
  431eca:	mov    r12,rsp
  431ecd:	call   420050 <xmlStrEqual@plt+0x1c110>
  431ed2:	mov    QWORD PTR [rbx+0x8],rax
  431ed6:	xor    eax,eax
  431ed8:	lea    rbp,[rsp+0x20]
  431edd:	call   42f400 <xmlStrEqual@plt+0x2b4c0>
  431ee2:	mov    QWORD PTR [rbx+0x10],rax
  431ee6:	xor    eax,eax
  431ee8:	call   42f400 <xmlStrEqual@plt+0x2b4c0>
  431eed:	mov    QWORD PTR [rbx+0x18],rax
  431ef1:	vpxor  xmm0,xmm0,xmm0
  431ef5:	mov    esi,0x2
  431efa:	mov    rdi,r12
  431efd:	vmovaps XMMWORD PTR [rsp],xmm0
  431f02:	mov    DWORD PTR [rsp+0x10],0x0
  431f0a:	call   425df0 <xmlStrEqual@plt+0x21eb0>
  431f0f:	vpxor  xmm0,xmm0,xmm0
  431f13:	mov    esi,0xa
  431f18:	mov    rdi,rbp
  431f1b:	vmovaps XMMWORD PTR [rsp+0x20],xmm0
  431f21:	mov    DWORD PTR [rsp+0x30],0x0
  431f29:	call   425df0 <xmlStrEqual@plt+0x21eb0>
  431f2e:	mov    edi,0x20
  431f33:	call   420050 <xmlStrEqual@plt+0x1c110>
  431f38:	mov    rdi,QWORD PTR [rbx]
  431f3b:	xor    edx,edx
  431f3d:	mov    rcx,rax
  431f40:	mov    rsi,r12
  431f43:	call   431d90 <xmlStrEqual@plt+0x2de50>
  431f48:	mov    edi,0x80
  431f4d:	call   420050 <xmlStrEqual@plt+0x1c110>
  431f52:	mov    rdi,QWORD PTR [rbx+0x8]
  431f56:	xor    edx,edx
  431f58:	mov    rcx,rax
  431f5b:	mov    rsi,rbp
  431f5e:	call   431d90 <xmlStrEqual@plt+0x2de50>
  431f63:	mov    edi,0x20
  431f68:	call   420050 <xmlStrEqual@plt+0x1c110>
  431f6d:	mov    QWORD PTR [rbx+0x20],rax
  431f71:	mov    edi,0x80
  431f76:	call   420050 <xmlStrEqual@plt+0x1c110>
  431f7b:	mov    rdx,QWORD PTR [rbx]
  431f7e:	mov    QWORD PTR [rbx+0x28],rax
  431f82:	mov    rdx,QWORD PTR [rdx]
  431f85:	cmp    QWORD PTR [rdx+0x28],0x0
  431f8a:	je     431fd0 <xmlStrEqual@plt+0x2e090>
  431f8c:	mov    rdx,QWORD PTR [rbx+0x8]
  431f90:	mov    rdx,QWORD PTR [rdx]
  431f93:	cmp    QWORD PTR [rdx+0x28],0x0
  431f98:	je     431fd0 <xmlStrEqual@plt+0x2e090>
  431f9a:	cmp    QWORD PTR [rbx+0x20],0x0
  431f9f:	je     431fd0 <xmlStrEqual@plt+0x2e090>
  431fa1:	test   rax,rax
  431fa4:	je     431fd0 <xmlStrEqual@plt+0x2e090>
  431fa6:	mov    DWORD PTR [rbx+0x30],0x0
  431fad:	mov    rcx,QWORD PTR [rsp+0x38]
  431fb2:	xor    rcx,QWORD PTR fs:0x28
  431fbb:	mov    rax,rbx
  431fbe:	jne    431fe7 <xmlStrEqual@plt+0x2e0a7>
  431fc0:	add    rsp,0x40
  431fc4:	pop    rbx
  431fc5:	pop    rbp
  431fc6:	pop    r12
  431fc8:	ret    
  431fc9:	nop    DWORD PTR [rax+0x0]
  431fd0:	lea    rsi,[rip+0x1ec79]        # 450c50 <xmlStrEqual@plt+0x4cd10>
  431fd7:	mov    edi,0x1
  431fdc:	xor    eax,eax
  431fde:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  431fe3:	xor    ebx,ebx
  431fe5:	jmp    431fad <xmlStrEqual@plt+0x2e06d>
  431fe7:	call   403c00 <__stack_chk_fail@plt>
  431fec:	nop    DWORD PTR [rax+0x0]
  431ff0:	endbr64 
  431ff4:	push   r13
  431ff6:	mov    r13,rdx
  431ff9:	push   r12
  431ffb:	push   rbp
  431ffc:	mov    rbp,rdi
  431fff:	mov    rdi,rsi
  432002:	push   rbx
  432003:	mov    rbx,rsi
  432006:	sub    rsp,0x8
  43200a:	call   426300 <xmlStrEqual@plt+0x223c0>
  43200f:	mov    rdi,rbx
  432012:	mov    r12d,eax
  432015:	call   426310 <xmlStrEqual@plt+0x223d0>
  43201a:	mov    rsi,rax
  43201d:	mov    rcx,r13
  432020:	movzx  edx,r12b
  432024:	mov    rdi,rbp
  432027:	call   431d90 <xmlStrEqual@plt+0x2de50>
  43202c:	test   rax,rax
  43202f:	setne  al
  432032:	add    rsp,0x8
  432036:	pop    rbx
  432037:	pop    rbp
  432038:	pop    r12
  43203a:	movzx  eax,al
  43203d:	pop    r13
  43203f:	ret    
  432040:	endbr64 
  432044:	push   r15
  432046:	push   r14
  432048:	mov    r14,rdx
  43204b:	push   r13
  43204d:	mov    r13,rdi
  432050:	mov    rdi,rsi
  432053:	push   r12
  432055:	push   rbp
  432056:	push   rbx
  432057:	mov    rbx,rsi
  43205a:	sub    rsp,0x8
  43205e:	call   429150 <xmlStrEqual@plt+0x25210>
  432063:	mov    rbp,rax
  432066:	mov    rdi,rbx
  432069:	call   4291b0 <xmlStrEqual@plt+0x25270>
  43206e:	cmp    DWORD PTR [rbp+0x18],0x1
  432072:	mov    r12,rax
  432075:	jne    43207d <xmlStrEqual@plt+0x2e13d>
  432077:	cmp    DWORD PTR [rax+0x18],0x1
  43207b:	je     4320c0 <xmlStrEqual@plt+0x2e180>
  43207d:	mov    rdi,r12
  432080:	call   424d40 <xmlStrEqual@plt+0x20e00>
  432085:	mov    rdi,rbp
  432088:	mov    rbx,rax
  43208b:	call   424d40 <xmlStrEqual@plt+0x20e00>
  432090:	mov    rdx,rax
  432093:	mov    rcx,rbx
  432096:	xor    eax,eax
  432098:	lea    rsi,[rip+0x1ebe1]        # 450c80 <xmlStrEqual@plt+0x4cd40>
  43209f:	mov    edi,0x3
  4320a4:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  4320a9:	xor    eax,eax
  4320ab:	add    rsp,0x8
  4320af:	pop    rbx
  4320b0:	pop    rbp
  4320b1:	pop    r12
  4320b3:	pop    r13
  4320b5:	pop    r14
  4320b7:	pop    r15
  4320b9:	ret    
  4320ba:	nop    WORD PTR [rax+rax*1+0x0]
  4320c0:	mov    rdi,rbx
  4320c3:	call   429260 <xmlStrEqual@plt+0x25320>
  4320c8:	mov    r15d,eax
  4320cb:	mov    rdi,rbx
  4320ce:	call   4292b0 <xmlStrEqual@plt+0x25370>
  4320d3:	mov    rdi,r13
  4320d6:	xor    ecx,ecx
  4320d8:	movzx  edx,r15b
  4320dc:	mov    rsi,rbp
  4320df:	mov    ebx,eax
  4320e1:	call   431d90 <xmlStrEqual@plt+0x2de50>
  4320e6:	mov    r13,rax
  4320e9:	test   rax,rax
  4320ec:	je     432178 <xmlStrEqual@plt+0x2e238>
  4320f2:	mov    rdi,QWORD PTR [rax+0x28]
  4320f6:	test   rdi,rdi
  4320f9:	je     432130 <xmlStrEqual@plt+0x2e1f0>
  4320fb:	movzx  edx,bl
  4320fe:	mov    rcx,r14
  432101:	mov    rsi,r12
  432104:	call   431d90 <xmlStrEqual@plt+0x2de50>
  432109:	mov    rdx,rax
  43210c:	mov    eax,0x1
  432111:	test   rdx,rdx
  432114:	jne    4320ab <xmlStrEqual@plt+0x2e16b>
  432116:	mov    rax,0x469e3c
  43211d:	cmp    DWORD PTR [rax],0x2
  432120:	jg     4321b0 <xmlStrEqual@plt+0x2e270>
  432126:	xor    eax,eax
  432128:	jmp    4320ab <xmlStrEqual@plt+0x2e16b>
  43212a:	nop    WORD PTR [rax+rax*1+0x0]
  432130:	mov    rdi,r12
  432133:	call   425d00 <xmlStrEqual@plt+0x21dc0>
  432138:	movzx  edi,al
  43213b:	shl    edi,0x3
  43213e:	call   420050 <xmlStrEqual@plt+0x1c110>
  432143:	mov    rdi,rax
  432146:	mov    QWORD PTR [r13+0x28],rax
  43214a:	test   rax,rax
  43214d:	jne    4320fb <xmlStrEqual@plt+0x2e1bb>
  43214f:	mov    rax,0x469e3c
  432156:	cmp    DWORD PTR [rax],0x2
  432159:	jle    432126 <xmlStrEqual@plt+0x2e1e6>
  43215b:	xor    eax,eax
  43215d:	lea    rsi,[rip+0x1ebac]        # 450d10 <xmlStrEqual@plt+0x4cdd0>
  432164:	mov    edi,0x7
  432169:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  43216e:	xor    eax,eax
  432170:	jmp    4320ab <xmlStrEqual@plt+0x2e16b>
  432175:	nop    DWORD PTR [rax]
  432178:	mov    rax,0x469e3c
  43217f:	cmp    DWORD PTR [rax],0x2
  432182:	jle    432126 <xmlStrEqual@plt+0x2e1e6>
  432184:	mov    rdi,rbp
  432187:	call   426440 <xmlStrEqual@plt+0x22500>
  43218c:	mov    rdx,rax
  43218f:	movzx  ecx,r15b
  432193:	xor    eax,eax
  432195:	lea    rsi,[rip+0x1eb2c]        # 450cc8 <xmlStrEqual@plt+0x4cd88>
  43219c:	mov    edi,0x7
  4321a1:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  4321a6:	xor    eax,eax
  4321a8:	jmp    4320ab <xmlStrEqual@plt+0x2e16b>
  4321ad:	nop    DWORD PTR [rax]
  4321b0:	mov    rdi,r12
  4321b3:	call   426440 <xmlStrEqual@plt+0x22500>
  4321b8:	mov    rdx,rax
  4321bb:	movzx  ecx,bl
  4321be:	xor    eax,eax
  4321c0:	lea    rsi,[rip+0x1eb71]        # 450d38 <xmlStrEqual@plt+0x4cdf8>
  4321c7:	mov    edi,0x7
  4321cc:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  4321d1:	xor    eax,eax
  4321d3:	jmp    4320ab <xmlStrEqual@plt+0x2e16b>
  4321d8:	nop    DWORD PTR [rax+rax*1+0x0]
  4321e0:	endbr64 
  4321e4:	push   r15
  4321e6:	push   r14
  4321e8:	push   r13
  4321ea:	push   r12
  4321ec:	mov    r12,rdx
  4321ef:	push   rbp
  4321f0:	mov    rbp,rdi
  4321f3:	push   rbx
  4321f4:	mov    rbx,rsi
  4321f7:	sub    rsp,0x48
  4321fb:	mov    edx,DWORD PTR [rsi+0x18]
  4321fe:	mov    rax,QWORD PTR fs:0x28
  432207:	mov    QWORD PTR [rsp+0x38],rax
  43220c:	xor    eax,eax
  43220e:	cmp    edx,0x2
  432211:	je     432310 <xmlStrEqual@plt+0x2e3d0>
  432217:	cmp    edx,0x3
  43221a:	je     4322c0 <xmlStrEqual@plt+0x2e380>
  432220:	cmp    edx,0x1
  432223:	je     432298 <xmlStrEqual@plt+0x2e358>
  432225:	lea    rsi,[rip+0x1ed94]        # 450fc0 <xmlStrEqual@plt+0x4d080>
  43222c:	mov    edi,0x3
  432231:	xor    eax,eax
  432233:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  432238:	mov    rax,0x469e3c
  43223f:	mov    eax,DWORD PTR [rax]
  432241:	cmp    eax,0x2
  432244:	jg     432270 <xmlStrEqual@plt+0x2e330>
  432246:	xor    eax,eax
  432248:	mov    rcx,QWORD PTR [rsp+0x38]
  43224d:	xor    rcx,QWORD PTR fs:0x28
  432256:	jne    432648 <xmlStrEqual@plt+0x2e708>
  43225c:	add    rsp,0x48
  432260:	pop    rbx
  432261:	pop    rbp
  432262:	pop    r12
  432264:	pop    r13
  432266:	pop    r14
  432268:	pop    r15
  43226a:	ret    
  43226b:	nop    DWORD PTR [rax+rax*1+0x0]
  432270:	mov    rdi,rbx
  432273:	call   424d40 <xmlStrEqual@plt+0x20e00>
  432278:	mov    rdx,rax
  43227b:	lea    rsi,[rip+0x1ed6e]        # 450ff0 <xmlStrEqual@plt+0x4d0b0>
  432282:	xor    eax,eax
  432284:	mov    edi,0x7
  432289:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  43228e:	xor    eax,eax
  432290:	jmp    432248 <xmlStrEqual@plt+0x2e308>
  432292:	nop    WORD PTR [rax+rax*1+0x0]
  432298:	lea    rsi,[rip+0x1eae9]        # 450d88 <xmlStrEqual@plt+0x4ce48>
  43229f:	mov    edi,0x3
  4322a4:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  4322a9:	mov    rax,0x469e3c
  4322b0:	mov    eax,DWORD PTR [rax]
  4322b2:	cmp    eax,0x2
  4322b5:	jle    432246 <xmlStrEqual@plt+0x2e306>
  4322b7:	jmp    432270 <xmlStrEqual@plt+0x2e330>
  4322b9:	nop    DWORD PTR [rax+0x0]
  4322c0:	mov    rdi,rsi
  4322c3:	call   428cf0 <xmlStrEqual@plt+0x24db0>
  4322c8:	cmp    eax,0x2
  4322cb:	je     432418 <xmlStrEqual@plt+0x2e4d8>
  4322d1:	cmp    eax,0x9
  4322d4:	je     432390 <xmlStrEqual@plt+0x2e450>
  4322da:	mov    rbp,0x469e3c
  4322e1:	cmp    DWORD PTR [rbp+0x0],0x2
  4322e5:	jle    432246 <xmlStrEqual@plt+0x2e306>
  4322eb:	mov    rdi,rbx
  4322ee:	call   428cf0 <xmlStrEqual@plt+0x24db0>
  4322f3:	mov    edx,eax
  4322f5:	lea    rsi,[rip+0x1ec94]        # 450f90 <xmlStrEqual@plt+0x4d050>
  4322fc:	xor    eax,eax
  4322fe:	mov    edi,0x7
  432303:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  432308:	mov    eax,DWORD PTR [rbp+0x0]
  43230b:	jmp    432241 <xmlStrEqual@plt+0x2e301>
  432310:	mov    rdi,rsi
  432313:	call   426320 <xmlStrEqual@plt+0x223e0>
  432318:	movzx  esi,al
  43231b:	mov    rdi,rbp
  43231e:	call   431740 <xmlStrEqual@plt+0x2d800>
  432323:	mov    rdi,rax
  432326:	mov    rdx,r12
  432329:	mov    rsi,rbx
  43232c:	call   431ff0 <xmlStrEqual@plt+0x2e0b0>
  432331:	cmp    eax,0x1
  432334:	jne    432358 <xmlStrEqual@plt+0x2e418>
  432336:	mov    r12,0x469e3c
  43233d:	cmp    DWORD PTR [r12],0x2
  432342:	jg     432558 <xmlStrEqual@plt+0x2e618>
  432348:	inc    DWORD PTR [rbp+0x30]
  43234b:	mov    eax,0x1
  432350:	jmp    432248 <xmlStrEqual@plt+0x2e308>
  432355:	nop    DWORD PTR [rax]
  432358:	mov    rbp,0x469e3c
  43235f:	cmp    DWORD PTR [rbp+0x0],0x2
  432363:	jle    432246 <xmlStrEqual@plt+0x2e306>
  432369:	mov    rdi,rbx
  43236c:	call   426460 <xmlStrEqual@plt+0x22520>
  432371:	mov    rdx,rax
  432374:	lea    rsi,[rip+0x1ea45]        # 450dc0 <xmlStrEqual@plt+0x4ce80>
  43237b:	xor    eax,eax
  43237d:	mov    edi,0x7
  432382:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  432387:	mov    eax,DWORD PTR [rbp+0x0]
  43238a:	jmp    432241 <xmlStrEqual@plt+0x2e301>
  43238f:	nop
  432390:	lea    rsi,[rbp+0x28]
  432394:	lea    rdi,[rbp+0x20]
  432398:	mov    rdx,rbx
  43239b:	call   4316c0 <xmlStrEqual@plt+0x2d780>
  4323a0:	mov    rdi,rax
  4323a3:	mov    rdx,r12
  4323a6:	mov    rsi,rbx
  4323a9:	call   432040 <xmlStrEqual@plt+0x2e100>
  4323ae:	cmp    eax,0x1
  4323b1:	jne    4324b8 <xmlStrEqual@plt+0x2e578>
  4323b7:	mov    r12,0x469e3c
  4323be:	cmp    DWORD PTR [r12],0x2
  4323c3:	jle    432348 <xmlStrEqual@plt+0x2e408>
  4323c5:	mov    rdi,rbx
  4323c8:	call   428ca0 <xmlStrEqual@plt+0x24d60>
  4323cd:	mov    rdx,rax
  4323d0:	lea    rsi,[rip+0x1eb91]        # 450f68 <xmlStrEqual@plt+0x4d028>
  4323d7:	mov    edi,0x7
  4323dc:	xor    eax,eax
  4323de:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  4323e3:	cmp    DWORD PTR [r12],0x2
  4323e8:	jle    432348 <xmlStrEqual@plt+0x2e408>
  4323ee:	mov    rdi,rbx
  4323f1:	call   424d40 <xmlStrEqual@plt+0x20e00>
  4323f6:	mov    rdx,rax
  4323f9:	lea    rsi,[rip+0x1f02d]        # 45142d <xmlStrEqual@plt+0x4d4ed>
  432400:	mov    edi,0x7
  432405:	xor    eax,eax
  432407:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  43240c:	jmp    432348 <xmlStrEqual@plt+0x2e408>
  432411:	nop    DWORD PTR [rax+0x0]
  432418:	mov    rdi,rbx
  43241b:	call   429910 <xmlStrEqual@plt+0x259d0>
  432420:	mov    rdi,rbx
  432423:	mov    DWORD PTR [rsp+0x4],eax
  432427:	call   42a690 <xmlStrEqual@plt+0x26750>
  43242c:	mov    r13,rax
  43242f:	test   rax,rax
  432432:	je     432238 <xmlStrEqual@plt+0x2e2f8>
  432438:	mov    rdi,rax
  43243b:	call   425890 <xmlStrEqual@plt+0x21950>
  432440:	mov    r15d,eax
  432443:	lea    r14,[rbp+0x18]
  432447:	lea    rax,[rbp+0x10]
  43244b:	mov    rdx,rbx
  43244e:	mov    rsi,r14
  432451:	mov    rdi,rax
  432454:	mov    QWORD PTR [rsp+0x8],rax
  432459:	call   4317b0 <xmlStrEqual@plt+0x2d870>
  43245e:	test   rax,rax
  432461:	je     4324f0 <xmlStrEqual@plt+0x2e5b0>
  432467:	mov    rdx,r12
  43246a:	mov    rsi,r13
  43246d:	mov    rdi,rax
  432470:	call   431ff0 <xmlStrEqual@plt+0x2e0b0>
  432475:	cmp    eax,0x1
  432478:	je     432580 <xmlStrEqual@plt+0x2e640>
  43247e:	mov    rbp,0x469e3c
  432485:	cmp    DWORD PTR [rbp+0x0],0x2
  432489:	jle    432246 <xmlStrEqual@plt+0x2e306>
  43248f:	mov    rdi,rbx
  432492:	call   428ca0 <xmlStrEqual@plt+0x24d60>
  432497:	mov    rdx,rax
  43249a:	lea    rsi,[rip+0x1e9df]        # 450e80 <xmlStrEqual@plt+0x4cf40>
  4324a1:	xor    eax,eax
  4324a3:	mov    edi,0x7
  4324a8:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  4324ad:	mov    eax,DWORD PTR [rbp+0x0]
  4324b0:	jmp    432241 <xmlStrEqual@plt+0x2e301>
  4324b5:	nop    DWORD PTR [rax]
  4324b8:	mov    rbp,0x469e3c
  4324bf:	cmp    DWORD PTR [rbp+0x0],0x1
  4324c3:	jle    432246 <xmlStrEqual@plt+0x2e306>
  4324c9:	mov    rdi,rbx
  4324cc:	call   427df0 <xmlStrEqual@plt+0x23eb0>
  4324d1:	mov    rdx,rax
  4324d4:	lea    rsi,[rip+0x1ea45]        # 450f20 <xmlStrEqual@plt+0x4cfe0>
  4324db:	xor    eax,eax
  4324dd:	mov    edi,0x6
  4324e2:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  4324e7:	mov    eax,DWORD PTR [rbp+0x0]
  4324ea:	jmp    432241 <xmlStrEqual@plt+0x2e301>
  4324ef:	nop
  4324f0:	lea    rax,[rsp+0x20]
  4324f5:	vpxor  xmm0,xmm0,xmm0
  4324f9:	mov    QWORD PTR [rsp+0x10],rax
  4324fe:	vmovaps XMMWORD PTR [rsp+0x20],xmm0
  432504:	mov    DWORD PTR [rsp+0x30],0x0
  43250c:	cmp    r15w,0x2
  432511:	je     43261c <xmlStrEqual@plt+0x2e6dc>
  432517:	cmp    r15w,0xa
  43251c:	je     4325b5 <xmlStrEqual@plt+0x2e675>
  432522:	mov    rbp,0x469e3c
  432529:	mov    eax,DWORD PTR [rbp+0x0]
  43252c:	test   eax,eax
  43252e:	jle    432246 <xmlStrEqual@plt+0x2e306>
  432534:	xor    eax,eax
  432536:	movzx  edx,r15w
  43253a:	lea    rsi,[rip+0x1e917]        # 450e58 <xmlStrEqual@plt+0x4cf18>
  432541:	mov    edi,0x5
  432546:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  43254b:	mov    eax,DWORD PTR [rbp+0x0]
  43254e:	jmp    432241 <xmlStrEqual@plt+0x2e301>
  432553:	nop    DWORD PTR [rax+rax*1+0x0]
  432558:	mov    rdi,rbx
  43255b:	call   426460 <xmlStrEqual@plt+0x22520>
  432560:	mov    rdx,rax
  432563:	lea    rsi,[rip+0x1e8be]        # 450e28 <xmlStrEqual@plt+0x4cee8>
  43256a:	mov    edi,0x7
  43256f:	xor    eax,eax
  432571:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  432576:	jmp    4323e3 <xmlStrEqual@plt+0x2e4a3>
  43257b:	nop    DWORD PTR [rax+rax*1+0x0]
  432580:	mov    r12,0x469e3c
  432587:	cmp    DWORD PTR [r12],0x2
  43258c:	jle    432348 <xmlStrEqual@plt+0x2e408>
  432592:	mov    rdi,rbx
  432595:	call   428ca0 <xmlStrEqual@plt+0x24d60>
  43259a:	mov    rdx,rax
  43259d:	lea    rsi,[rip+0x1e94c]        # 450ef0 <xmlStrEqual@plt+0x4cfb0>
  4325a4:	mov    edi,0x7
  4325a9:	xor    eax,eax
  4325ab:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  4325b0:	jmp    4323e3 <xmlStrEqual@plt+0x2e4a3>
  4325b5:	mov    rdi,QWORD PTR [rsp+0x10]
  4325ba:	mov    esi,0xa
  4325bf:	call   425df0 <xmlStrEqual@plt+0x21eb0>
  4325c4:	mov    edi,0x80
  4325c9:	call   420050 <xmlStrEqual@plt+0x1c110>
  4325ce:	mov    r15,rax
  4325d1:	mov    rax,QWORD PTR [rbp+0x18]
  4325d5:	mov    edi,0x80
  4325da:	mov    QWORD PTR [rsp+0x18],rax
  4325df:	call   420050 <xmlStrEqual@plt+0x1c110>
  4325e4:	mov    rsi,QWORD PTR [rsp+0x10]
  4325e9:	mov    rcx,rax
  4325ec:	xor    edx,edx
  4325ee:	mov    rdi,r15
  4325f1:	call   431d90 <xmlStrEqual@plt+0x2de50>
  4325f6:	mov    esi,DWORD PTR [rsp+0x4]
  4325fa:	mov    rdi,QWORD PTR [rsp+0x18]
  4325ff:	mov    rdx,r15
  432602:	call   42f470 <xmlStrEqual@plt+0x2b530>
  432607:	mov    rdi,QWORD PTR [rsp+0x8]
  43260c:	mov    rdx,rbx
  43260f:	mov    rsi,r14
  432612:	call   4317b0 <xmlStrEqual@plt+0x2d870>
  432617:	jmp    432467 <xmlStrEqual@plt+0x2e527>
  43261c:	mov    rdi,QWORD PTR [rsp+0x10]
  432621:	mov    esi,0x2
  432626:	call   425df0 <xmlStrEqual@plt+0x21eb0>
  43262b:	mov    edi,0x20
  432630:	call   420050 <xmlStrEqual@plt+0x1c110>
  432635:	mov    r15,rax
  432638:	mov    rax,QWORD PTR [rbp+0x10]
  43263c:	mov    edi,0x20
  432641:	mov    QWORD PTR [rsp+0x18],rax
  432646:	jmp    4325df <xmlStrEqual@plt+0x2e69f>
  432648:	call   403c00 <__stack_chk_fail@plt>
  43264d:	nop    DWORD PTR [rax]
  432650:	endbr64 
  432654:	push   rbp
  432655:	mov    rbp,rdi
  432658:	mov    rdi,rsi
  43265b:	push   rbx
  43265c:	mov    rbx,rsi
  43265f:	sub    rsp,0x8
  432663:	call   425cc0 <xmlStrEqual@plt+0x21d80>
  432668:	cmp    eax,0x2
  43266b:	mov    esi,0x20
  432670:	mov    eax,0x80
  432675:	cmovne esi,eax
  432678:	mov    rdi,rbx
  43267b:	call   431c90 <xmlStrEqual@plt+0x2dd50>
  432680:	mov    rbx,rax
  432683:	mov    rdi,rbp
  432686:	mov    rsi,rax
  432689:	call   4206e0 <xmlStrEqual@plt+0x1c7a0>
  43268e:	mov    rdi,rbx
  432691:	mov    rbp,rax
  432694:	call   420000 <xmlStrEqual@plt+0x1c0c0>
  432699:	add    rsp,0x8
  43269d:	pop    rbx
  43269e:	mov    rax,rbp
  4326a1:	pop    rbp
  4326a2:	ret    
  4326a3:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4326ae:	xchg   ax,ax
  4326b0:	endbr64 
  4326b4:	push   rbp
  4326b5:	mov    rbp,rdi
  4326b8:	mov    rdi,rsi
  4326bb:	push   rbx
  4326bc:	movzx  esi,dl
  4326bf:	sub    rsp,0x8
  4326c3:	call   431c90 <xmlStrEqual@plt+0x2dd50>
  4326c8:	mov    rbx,rax
  4326cb:	mov    rdi,rbp
  4326ce:	mov    rsi,rax
  4326d1:	call   4203c0 <xmlStrEqual@plt+0x1c480>
  4326d6:	mov    rdi,rbx
  4326d9:	mov    rbp,rax
  4326dc:	call   420000 <xmlStrEqual@plt+0x1c0c0>
  4326e1:	add    rsp,0x8
  4326e5:	pop    rbx
  4326e6:	mov    rax,rbp
  4326e9:	pop    rbp
  4326ea:	ret    
  4326eb:	nop    DWORD PTR [rax+rax*1+0x0]
  4326f0:	endbr64 
  4326f4:	push   r13
  4326f6:	push   r12
  4326f8:	mov    r12,rdi
  4326fb:	mov    rdi,rsi
  4326fe:	push   rbp
  4326ff:	mov    rbp,rsi
  432702:	push   rbx
  432703:	sub    rsp,0x8
  432707:	call   426300 <xmlStrEqual@plt+0x223c0>
  43270c:	mov    rdi,rbp
  43270f:	mov    ebx,eax
  432711:	call   426310 <xmlStrEqual@plt+0x223d0>
  432716:	mov    rsi,rax
  432719:	movzx  edx,bl
  43271c:	mov    rdi,r12
  43271f:	call   4326b0 <xmlStrEqual@plt+0x2e770>
  432724:	test   rax,rax
  432727:	je     432778 <xmlStrEqual@plt+0x2e838>
  432729:	mov    rbx,rax
  43272c:	mov    rax,0x469e3c
  432733:	cmp    DWORD PTR [rax],0x2
  432736:	jle    432756 <xmlStrEqual@plt+0x2e816>
  432738:	mov    rdi,rbp
  43273b:	call   426460 <xmlStrEqual@plt+0x22520>
  432740:	mov    rdx,rax
  432743:	lea    rsi,[rip+0x1e916]        # 451060 <xmlStrEqual@plt+0x4d120>
  43274a:	mov    edi,0x7
  43274f:	xor    eax,eax
  432751:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  432756:	mov    rsi,rbx
  432759:	mov    rdi,r12
  43275c:	mov    r13,QWORD PTR [rbx+0x28]
  432760:	call   420c90 <xmlStrEqual@plt+0x1cd50>
  432765:	add    rsp,0x8
  432769:	pop    rbx
  43276a:	pop    rbp
  43276b:	pop    r12
  43276d:	mov    rax,r13
  432770:	pop    r13
  432772:	ret    
  432773:	nop    DWORD PTR [rax+rax*1+0x0]
  432778:	mov    rax,0x469e3c
  43277f:	xor    r13d,r13d
  432782:	cmp    DWORD PTR [rax],0x2
  432785:	jle    432765 <xmlStrEqual@plt+0x2e825>
  432787:	mov    rdi,rbp
  43278a:	call   426460 <xmlStrEqual@plt+0x22520>
  43278f:	mov    rdx,rax
  432792:	lea    rsi,[rip+0x1e887]        # 451020 <xmlStrEqual@plt+0x4d0e0>
  432799:	mov    edi,0x7
  43279e:	xor    eax,eax
  4327a0:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  4327a5:	jmp    432765 <xmlStrEqual@plt+0x2e825>
  4327a7:	nop    WORD PTR [rax+rax*1+0x0]
  4327b0:	push   r14
  4327b2:	push   r13
  4327b4:	mov    r13d,edx
  4327b7:	push   r12
  4327b9:	mov    r12,rdi
  4327bc:	mov    rdi,rsi
  4327bf:	push   rbp
  4327c0:	push   rbx
  4327c1:	mov    rbx,rsi
  4327c4:	call   429150 <xmlStrEqual@plt+0x25210>
  4327c9:	cmp    DWORD PTR [rax+0x18],0x1
  4327cd:	jne    432820 <xmlStrEqual@plt+0x2e8e0>
  4327cf:	mov    rdi,rbx
  4327d2:	mov    rbp,rax
  4327d5:	call   429260 <xmlStrEqual@plt+0x25320>
  4327da:	mov    r14d,eax
  4327dd:	test   r13b,r13b
  4327e0:	jne    432808 <xmlStrEqual@plt+0x2e8c8>
  4327e2:	mov    rsi,rbp
  4327e5:	mov    rdi,r12
  4327e8:	call   432650 <xmlStrEqual@plt+0x2e710>
  4327ed:	mov    rbx,rax
  4327f0:	test   rbx,rbx
  4327f3:	je     432860 <xmlStrEqual@plt+0x2e920>
  4327f5:	mov    rbx,QWORD PTR [rbx+0x28]
  4327f9:	mov    rax,rbx
  4327fc:	pop    rbx
  4327fd:	pop    rbp
  4327fe:	pop    r12
  432800:	pop    r13
  432802:	pop    r14
  432804:	ret    
  432805:	nop    DWORD PTR [rax]
  432808:	movzx  edx,al
  43280b:	mov    rsi,rbp
  43280e:	mov    rdi,r12
  432811:	call   4326b0 <xmlStrEqual@plt+0x2e770>
  432816:	mov    rbx,rax
  432819:	jmp    4327f0 <xmlStrEqual@plt+0x2e8b0>
  43281b:	nop    DWORD PTR [rax+rax*1+0x0]
  432820:	mov    rax,0x469e3c
  432827:	cmp    DWORD PTR [rax],0x2
  43282a:	jg     432840 <xmlStrEqual@plt+0x2e900>
  43282c:	xor    ebx,ebx
  43282e:	mov    rax,rbx
  432831:	pop    rbx
  432832:	pop    rbp
  432833:	pop    r12
  432835:	pop    r13
  432837:	pop    r14
  432839:	ret    
  43283a:	nop    WORD PTR [rax+rax*1+0x0]
  432840:	lea    rsi,[rip+0x1e849]        # 451090 <xmlStrEqual@plt+0x4d150>
  432847:	mov    edi,0x7
  43284c:	xor    eax,eax
  43284e:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  432853:	xor    ebx,ebx
  432855:	jmp    43282e <xmlStrEqual@plt+0x2e8ee>
  432857:	nop    WORD PTR [rax+rax*1+0x0]
  432860:	mov    rax,0x469e3c
  432867:	cmp    DWORD PTR [rax],0x2
  43286a:	jle    43282c <xmlStrEqual@plt+0x2e8ec>
  43286c:	mov    rdi,rbp
  43286f:	call   426440 <xmlStrEqual@plt+0x22500>
  432874:	mov    rdx,rax
  432877:	movzx  ecx,r14b
  43287b:	lea    rsi,[rip+0x1e846]        # 4510c8 <xmlStrEqual@plt+0x4d188>
  432882:	mov    edi,0x7
  432887:	xor    eax,eax
  432889:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  43288e:	jmp    4327f9 <xmlStrEqual@plt+0x2e8b9>
  432893:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  43289e:	xchg   ax,ax
  4328a0:	endbr64 
  4328a4:	push   r14
  4328a6:	push   r13
  4328a8:	push   r12
  4328aa:	push   rbp
  4328ab:	push   rbx
  4328ac:	test   rdi,rdi
  4328af:	je     432950 <xmlStrEqual@plt+0x2ea10>
  4328b5:	mov    rbp,rdi
  4328b8:	mov    rdi,rsi
  4328bb:	mov    rbx,rsi
  4328be:	mov    r14d,edx
  4328c1:	call   429150 <xmlStrEqual@plt+0x25210>
  4328c6:	mov    r13,rax
  4328c9:	mov    rdi,rbx
  4328cc:	call   4291b0 <xmlStrEqual@plt+0x25270>
  4328d1:	cmp    DWORD PTR [r13+0x18],0x1
  4328d6:	mov    r12,rax
  4328d9:	jne    432910 <xmlStrEqual@plt+0x2e9d0>
  4328db:	cmp    DWORD PTR [rax+0x18],0x1
  4328df:	jne    432910 <xmlStrEqual@plt+0x2e9d0>
  4328e1:	movzx  edx,r14b
  4328e5:	mov    rsi,rbx
  4328e8:	mov    rdi,rbp
  4328eb:	call   4327b0 <xmlStrEqual@plt+0x2e870>
  4328f0:	test   rax,rax
  4328f3:	je     432978 <xmlStrEqual@plt+0x2ea38>
  4328f9:	pop    rbx
  4328fa:	pop    rbp
  4328fb:	mov    rsi,r12
  4328fe:	pop    r12
  432900:	pop    r13
  432902:	mov    rdi,rax
  432905:	pop    r14
  432907:	jmp    432650 <xmlStrEqual@plt+0x2e710>
  43290c:	nop    DWORD PTR [rax+0x0]
  432910:	mov    rax,0x469e3c
  432917:	cmp    DWORD PTR [rax],0x2
  43291a:	jg     432930 <xmlStrEqual@plt+0x2e9f0>
  43291c:	pop    rbx
  43291d:	pop    rbp
  43291e:	pop    r12
  432920:	pop    r13
  432922:	xor    eax,eax
  432924:	pop    r14
  432926:	ret    
  432927:	nop    WORD PTR [rax+rax*1+0x0]
  432930:	xor    eax,eax
  432932:	lea    rsi,[rip+0x1e757]        # 451090 <xmlStrEqual@plt+0x4d150>
  432939:	mov    edi,0x7
  43293e:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  432943:	pop    rbx
  432944:	pop    rbp
  432945:	pop    r12
  432947:	pop    r13
  432949:	xor    eax,eax
  43294b:	pop    r14
  43294d:	ret    
  43294e:	xchg   ax,ax
  432950:	mov    rax,0x469e3c
  432957:	cmp    DWORD PTR [rax],0x2
  43295a:	jle    43291c <xmlStrEqual@plt+0x2e9dc>
  43295c:	lea    rsi,[rip+0x1e7b5]        # 451118 <xmlStrEqual@plt+0x4d1d8>
  432963:	mov    edi,0x7
  432968:	xor    eax,eax
  43296a:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  43296f:	jmp    43291c <xmlStrEqual@plt+0x2e9dc>
  432971:	nop    DWORD PTR [rax+0x0]
  432978:	mov    rax,0x469e3c
  43297f:	cmp    DWORD PTR [rax],0x2
  432982:	jle    43291c <xmlStrEqual@plt+0x2e9dc>
  432984:	mov    rdi,rbx
  432987:	call   428ca0 <xmlStrEqual@plt+0x24d60>
  43298c:	mov    rdx,rax
  43298f:	lea    rsi,[rip+0x1e7aa]        # 451140 <xmlStrEqual@plt+0x4d200>
  432996:	mov    edi,0x7
  43299b:	xor    eax,eax
  43299d:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  4329a2:	jmp    43291c <xmlStrEqual@plt+0x2e9dc>
  4329a7:	nop    WORD PTR [rax+rax*1+0x0]
  4329b0:	push   r12
  4329b2:	mov    r12d,edx
  4329b5:	push   rbp
  4329b6:	push   rbx
  4329b7:	mov    edx,DWORD PTR [rsi+0x18]
  4329ba:	test   edx,edx
  4329bc:	je     432a90 <xmlStrEqual@plt+0x2eb50>
  4329c2:	mov    rbp,rdi
  4329c5:	mov    rbx,rsi
  4329c8:	cmp    edx,0x2
  4329cb:	jbe    432a18 <xmlStrEqual@plt+0x2ead8>
  4329cd:	cmp    edx,0x3
  4329d0:	jne    432a90 <xmlStrEqual@plt+0x2eb50>
  4329d6:	mov    rdi,rsi
  4329d9:	call   428cf0 <xmlStrEqual@plt+0x24db0>
  4329de:	cmp    eax,0x2
  4329e1:	je     432ad8 <xmlStrEqual@plt+0x2eb98>
  4329e7:	cmp    eax,0x9
  4329ea:	je     432ab0 <xmlStrEqual@plt+0x2eb70>
  4329f0:	mov    rdi,rbx
  4329f3:	call   428cf0 <xmlStrEqual@plt+0x24db0>
  4329f8:	mov    edx,eax
  4329fa:	lea    rsi,[rip+0x1e7bf]        # 4511c0 <xmlStrEqual@plt+0x4d280>
  432a01:	xor    eax,eax
  432a03:	mov    edi,0x3
  432a08:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  432a0d:	pop    rbx
  432a0e:	pop    rbp
  432a0f:	xor    eax,eax
  432a11:	pop    r12
  432a13:	ret    
  432a14:	nop    DWORD PTR [rax+0x0]
  432a18:	mov    rdi,rsi
  432a1b:	call   425890 <xmlStrEqual@plt+0x21950>
  432a20:	movzx  esi,ax
  432a23:	mov    rdi,rbp
  432a26:	call   431740 <xmlStrEqual@plt+0x2d800>
  432a2b:	mov    rbp,rax
  432a2e:	mov    rdi,rbx
  432a31:	test   r12b,r12b
  432a34:	je     432a7a <xmlStrEqual@plt+0x2eb3a>
  432a36:	call   424ee0 <xmlStrEqual@plt+0x20fa0>
  432a3b:	mov    rdi,rbx
  432a3e:	mov    r12d,eax
  432a41:	call   424e80 <xmlStrEqual@plt+0x20f40>
  432a46:	pop    rbx
  432a47:	mov    rdi,rbp
  432a4a:	pop    rbp
  432a4b:	movzx  edx,r12b
  432a4f:	mov    rsi,rax
  432a52:	pop    r12
  432a54:	jmp    4326b0 <xmlStrEqual@plt+0x2e770>
  432a59:	nop    DWORD PTR [rax+0x0]
  432a60:	call   42a630 <xmlStrEqual@plt+0x266f0>
  432a65:	test   rax,rax
  432a68:	jne    432a77 <xmlStrEqual@plt+0x2eb37>
  432a6a:	mov    rdi,rbx
  432a6d:	call   42a690 <xmlStrEqual@plt+0x26750>
  432a72:	test   rax,rax
  432a75:	je     432aa3 <xmlStrEqual@plt+0x2eb63>
  432a77:	mov    rdi,rax
  432a7a:	call   424e80 <xmlStrEqual@plt+0x20f40>
  432a7f:	pop    rbx
  432a80:	mov    rdi,rbp
  432a83:	pop    rbp
  432a84:	mov    rsi,rax
  432a87:	pop    r12
  432a89:	jmp    432650 <xmlStrEqual@plt+0x2e710>
  432a8e:	xchg   ax,ax
  432a90:	lea    rsi,[rip+0x1e751]        # 4511e8 <xmlStrEqual@plt+0x4d2a8>
  432a97:	mov    edi,0x3
  432a9c:	xor    eax,eax
  432a9e:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  432aa3:	pop    rbx
  432aa4:	pop    rbp
  432aa5:	xor    eax,eax
  432aa7:	pop    r12
  432aa9:	ret    
  432aaa:	nop    WORD PTR [rax+rax*1+0x0]
  432ab0:	lea    rsi,[rbp+0x28]
  432ab4:	lea    rdi,[rbp+0x20]
  432ab8:	mov    rdx,rbx
  432abb:	call   4316c0 <xmlStrEqual@plt+0x2d780>
  432ac0:	mov    rsi,rbx
  432ac3:	pop    rbx
  432ac4:	pop    rbp
  432ac5:	movzx  edx,r12b
  432ac9:	mov    rdi,rax
  432acc:	pop    r12
  432ace:	jmp    4328a0 <xmlStrEqual@plt+0x2e960>
  432ad3:	nop    DWORD PTR [rax+rax*1+0x0]
  432ad8:	lea    rsi,[rbp+0x18]
  432adc:	lea    rdi,[rbp+0x10]
  432ae0:	mov    rdx,rbx
  432ae3:	call   4317b0 <xmlStrEqual@plt+0x2d870>
  432ae8:	mov    rbp,rax
  432aeb:	test   rax,rax
  432aee:	je     432b11 <xmlStrEqual@plt+0x2ebd1>
  432af0:	mov    rdi,rbx
  432af3:	test   r12b,r12b
  432af6:	je     432a60 <xmlStrEqual@plt+0x2eb20>
  432afc:	call   42a690 <xmlStrEqual@plt+0x26750>
  432b01:	mov    rbx,rax
  432b04:	test   rax,rax
  432b07:	je     432aa3 <xmlStrEqual@plt+0x2eb63>
  432b09:	mov    rdi,rax
  432b0c:	jmp    432a36 <xmlStrEqual@plt+0x2eaf6>
  432b11:	mov    rax,0x469e3c
  432b18:	cmp    DWORD PTR [rax],0x2
  432b1b:	jle    432aa3 <xmlStrEqual@plt+0x2eb63>
  432b1d:	mov    rdi,rbx
  432b20:	call   428ca0 <xmlStrEqual@plt+0x24d60>
  432b25:	mov    rdx,rax
  432b28:	lea    rsi,[rip+0x1e651]        # 451180 <xmlStrEqual@plt+0x4d240>
  432b2f:	mov    edi,0x7
  432b34:	xor    eax,eax
  432b36:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  432b3b:	jmp    432aa3 <xmlStrEqual@plt+0x2eb63>
  432b40:	endbr64 
  432b44:	push   r15
  432b46:	push   r14
  432b48:	mov    r14,rdi
  432b4b:	push   r13
  432b4d:	mov    r13,rsi
  432b50:	push   r12
  432b52:	mov    r12,rdx
  432b55:	push   rbp
  432b56:	push   rbx
  432b57:	sub    rsp,0x428
  432b5e:	mov    rax,QWORD PTR fs:0x28
  432b67:	mov    QWORD PTR [rsp+0x418],rax
  432b6f:	xor    eax,eax
  432b71:	call   42dc90 <xmlStrEqual@plt+0x29d50>
  432b76:	mov    edx,0x1
  432b7b:	mov    rsi,r13
  432b7e:	mov    rdi,r14
  432b81:	mov    rbp,rax
  432b84:	call   4329b0 <xmlStrEqual@plt+0x2ea70>
  432b89:	test   rax,rax
  432b8c:	je     432cb0 <xmlStrEqual@plt+0x2ed70>
  432b92:	mov    rsi,r13
  432b95:	mov    rdi,r14
  432b98:	mov    rbx,rax
  432b9b:	lea    r14,[rsp+0x10]
  432ba0:	call   431950 <xmlStrEqual@plt+0x2da10>
  432ba5:	mov    r13,rax
  432ba8:	mov    r15,r14
  432bab:	nop    DWORD PTR [rax+rax*1+0x0]
  432bb0:	cmp    QWORD PTR [rbx+0x8],0x0
  432bb5:	je     432bc2 <xmlStrEqual@plt+0x2ec82>
  432bb7:	mov    rsi,rbp
  432bba:	mov    rdi,rbx
  432bbd:	call   42dcf0 <xmlStrEqual@plt+0x29db0>
  432bc2:	mov    rax,QWORD PTR [rbx+0x10]
  432bc6:	mov    rbx,QWORD PTR [rbx+0x18]
  432bca:	test   rax,rax
  432bcd:	je     432bf6 <xmlStrEqual@plt+0x2ecb6>
  432bcf:	test   rbx,rbx
  432bd2:	je     432ca8 <xmlStrEqual@plt+0x2ed68>
  432bd8:	mov    QWORD PTR [r15],rbx
  432bdb:	mov    rbx,rax
  432bde:	add    r15,0x8
  432be2:	cmp    QWORD PTR [rbx+0x8],0x0
  432be7:	jne    432bb7 <xmlStrEqual@plt+0x2ec77>
  432be9:	mov    rax,QWORD PTR [rbx+0x10]
  432bed:	mov    rbx,QWORD PTR [rbx+0x18]
  432bf1:	test   rax,rax
  432bf4:	jne    432bcf <xmlStrEqual@plt+0x2ec8f>
  432bf6:	test   rbx,rbx
  432bf9:	jne    432bb0 <xmlStrEqual@plt+0x2ec70>
  432bfb:	cmp    r15,r14
  432bfe:	je     432c0d <xmlStrEqual@plt+0x2eccd>
  432c00:	mov    rbx,QWORD PTR [r15-0x8]
  432c04:	test   rbx,rbx
  432c07:	jne    432ce8 <xmlStrEqual@plt+0x2eda8>
  432c0d:	mov    r15,QWORD PTR [rbp+0x8]
  432c11:	cmp    rbp,r15
  432c14:	je     432c71 <xmlStrEqual@plt+0x2ed31>
  432c16:	mov    r14,0x469e3c
  432c1d:	nop    DWORD PTR [rax]
  432c20:	cmp    DWORD PTR [r14],0x1
  432c24:	mov    r8,QWORD PTR [r15+0x10]
  432c28:	jle    432c53 <xmlStrEqual@plt+0x2ed13>
  432c2a:	mov    rdi,QWORD PTR [r8+0x8]
  432c2e:	mov    QWORD PTR [rsp+0x8],r8
  432c33:	call   41fcd0 <xmlStrEqual@plt+0x1bd90>
  432c38:	mov    rdx,rax
  432c3b:	lea    rsi,[rip+0x1e606]        # 451248 <xmlStrEqual@plt+0x4d308>
  432c42:	mov    edi,0x6
  432c47:	xor    eax,eax
  432c49:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  432c4e:	mov    r8,QWORD PTR [rsp+0x8]
  432c53:	mov    rbx,QWORD PTR [r8+0x28]
  432c57:	mov    rsi,r8
  432c5a:	mov    rdi,r13
  432c5d:	call   420c90 <xmlStrEqual@plt+0x1cd50>
  432c62:	mov    rdi,rbx
  432c65:	call   r12
  432c68:	mov    r15,QWORD PTR [r15+0x8]
  432c6c:	cmp    rbp,r15
  432c6f:	jne    432c20 <xmlStrEqual@plt+0x2ece0>
  432c71:	mov    rax,QWORD PTR [rsp+0x418]
  432c79:	xor    rax,QWORD PTR fs:0x28
  432c82:	jne    432d33 <xmlStrEqual@plt+0x2edf3>
  432c88:	add    rsp,0x428
  432c8f:	pop    rbx
  432c90:	mov    rdi,rbp
  432c93:	pop    rbp
  432c94:	pop    r12
  432c96:	pop    r13
  432c98:	pop    r14
  432c9a:	pop    r15
  432c9c:	jmp    42e2b0 <xmlStrEqual@plt+0x2a370>
  432ca1:	nop    DWORD PTR [rax+0x0]
  432ca8:	mov    rbx,rax
  432cab:	jmp    432bb0 <xmlStrEqual@plt+0x2ec70>
  432cb0:	mov    rax,0x469e3c
  432cb7:	cmp    DWORD PTR [rax],0x1
  432cba:	jg     432cf1 <xmlStrEqual@plt+0x2edb1>
  432cbc:	mov    rax,QWORD PTR [rsp+0x418]
  432cc4:	xor    rax,QWORD PTR fs:0x28
  432ccd:	jne    432d33 <xmlStrEqual@plt+0x2edf3>
  432ccf:	add    rsp,0x428
  432cd6:	pop    rbx
  432cd7:	pop    rbp
  432cd8:	pop    r12
  432cda:	pop    r13
  432cdc:	pop    r14
  432cde:	pop    r15
  432ce0:	ret    
  432ce1:	nop    DWORD PTR [rax+0x0]
  432ce8:	sub    r15,0x8
  432cec:	jmp    432bb0 <xmlStrEqual@plt+0x2ec70>
  432cf1:	mov    rdi,r13
  432cf4:	call   424d40 <xmlStrEqual@plt+0x20e00>
  432cf9:	mov    rcx,QWORD PTR [rsp+0x418]
  432d01:	xor    rcx,QWORD PTR fs:0x28
  432d0a:	jne    432d33 <xmlStrEqual@plt+0x2edf3>
  432d0c:	add    rsp,0x428
  432d13:	pop    rbx
  432d14:	pop    rbp
  432d15:	pop    r12
  432d17:	pop    r13
  432d19:	pop    r14
  432d1b:	mov    rdx,rax
  432d1e:	lea    rsi,[rip+0x1e4e3]        # 451208 <xmlStrEqual@plt+0x4d2c8>
  432d25:	mov    edi,0x6
  432d2a:	xor    eax,eax
  432d2c:	pop    r15
  432d2e:	jmp    430e20 <xmlStrEqual@plt+0x2cee0>
  432d33:	call   403c00 <__stack_chk_fail@plt>
  432d38:	nop    DWORD PTR [rax+rax*1+0x0]
  432d40:	endbr64 
  432d44:	sub    rsp,0x8
  432d48:	xor    edx,edx
  432d4a:	call   4329b0 <xmlStrEqual@plt+0x2ea70>
  432d4f:	test   rax,rax
  432d52:	je     432d58 <xmlStrEqual@plt+0x2ee18>
  432d54:	mov    rax,QWORD PTR [rax+0x28]
  432d58:	add    rsp,0x8
  432d5c:	ret    
  432d5d:	nop    DWORD PTR [rax]
  432d60:	endbr64 
  432d64:	sub    rsp,0x8
  432d68:	mov    edx,0x1
  432d6d:	call   4329b0 <xmlStrEqual@plt+0x2ea70>
  432d72:	test   rax,rax
  432d75:	je     432d7b <xmlStrEqual@plt+0x2ee3b>
  432d77:	mov    rax,QWORD PTR [rax+0x28]
  432d7b:	add    rsp,0x8
  432d7f:	ret    
  432d80:	endbr64 
  432d84:	push   r14
  432d86:	push   r13
  432d88:	push   r12
  432d8a:	push   rbp
  432d8b:	push   rbx
  432d8c:	mov    rbx,rsi
  432d8f:	test   rdi,rdi
  432d92:	je     432e98 <xmlStrEqual@plt+0x2ef58>
  432d98:	mov    rbp,rdi
  432d9b:	mov    rdi,rsi
  432d9e:	call   429150 <xmlStrEqual@plt+0x25210>
  432da3:	mov    r13,rax
  432da6:	mov    rdi,rbx
  432da9:	call   4291b0 <xmlStrEqual@plt+0x25270>
  432dae:	cmp    DWORD PTR [r13+0x18],0x1
  432db3:	mov    r12,rax
  432db6:	jne    432e50 <xmlStrEqual@plt+0x2ef10>
  432dbc:	cmp    DWORD PTR [rax+0x18],0x1
  432dc0:	jne    432e50 <xmlStrEqual@plt+0x2ef10>
  432dc6:	mov    edx,0x1
  432dcb:	mov    rsi,rbx
  432dce:	mov    rdi,rbp
  432dd1:	call   4327b0 <xmlStrEqual@plt+0x2e870>
  432dd6:	mov    r14,rax
  432dd9:	test   rax,rax
  432ddc:	je     432ec8 <xmlStrEqual@plt+0x2ef88>
  432de2:	mov    rdi,rbx
  432de5:	call   4292b0 <xmlStrEqual@plt+0x25370>
  432dea:	movzx  edx,al
  432ded:	mov    rsi,r12
  432df0:	mov    rdi,r14
  432df3:	call   4326b0 <xmlStrEqual@plt+0x2e770>
  432df8:	test   rax,rax
  432dfb:	je     432f00 <xmlStrEqual@plt+0x2efc0>
  432e01:	mov    rdi,r14
  432e04:	mov    rsi,rax
  432e07:	mov    r12,QWORD PTR [rax+0x28]
  432e0b:	call   420c90 <xmlStrEqual@plt+0x1cd50>
  432e10:	mov    rdi,r14
  432e13:	call   431c80 <xmlStrEqual@plt+0x2dd40>
  432e18:	test   al,al
  432e1a:	je     432e5f <xmlStrEqual@plt+0x2ef1f>
  432e1c:	xor    esi,esi
  432e1e:	mov    rdi,r14
  432e21:	call   420210 <xmlStrEqual@plt+0x1c2d0>
  432e26:	mov    rdi,rbx
  432e29:	call   429260 <xmlStrEqual@plt+0x25320>
  432e2e:	movzx  edx,al
  432e31:	mov    rsi,r13
  432e34:	mov    rdi,rbp
  432e37:	call   4326b0 <xmlStrEqual@plt+0x2e770>
  432e3c:	mov    rsi,rax
  432e3f:	mov    rdi,rbp
  432e42:	call   420c90 <xmlStrEqual@plt+0x1cd50>
  432e47:	jmp    432e5f <xmlStrEqual@plt+0x2ef1f>
  432e49:	nop    DWORD PTR [rax+0x0]
  432e50:	mov    rax,0x469e3c
  432e57:	cmp    DWORD PTR [rax],0x2
  432e5a:	jg     432e70 <xmlStrEqual@plt+0x2ef30>
  432e5c:	xor    r12d,r12d
  432e5f:	pop    rbx
  432e60:	pop    rbp
  432e61:	mov    rax,r12
  432e64:	pop    r12
  432e66:	pop    r13
  432e68:	pop    r14
  432e6a:	ret    
  432e6b:	nop    DWORD PTR [rax+rax*1+0x0]
  432e70:	xor    eax,eax
  432e72:	lea    rsi,[rip+0x1e217]        # 451090 <xmlStrEqual@plt+0x4d150>
  432e79:	mov    edi,0x7
  432e7e:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  432e83:	pop    rbx
  432e84:	pop    rbp
  432e85:	xor    r12d,r12d
  432e88:	mov    rax,r12
  432e8b:	pop    r12
  432e8d:	pop    r13
  432e8f:	pop    r14
  432e91:	ret    
  432e92:	nop    WORD PTR [rax+rax*1+0x0]
  432e98:	mov    rax,0x469e3c
  432e9f:	cmp    DWORD PTR [rax],0x2
  432ea2:	jle    432e5c <xmlStrEqual@plt+0x2ef1c>
  432ea4:	mov    rdi,rsi
  432ea7:	call   428ca0 <xmlStrEqual@plt+0x24d60>
  432eac:	mov    rdx,rax
  432eaf:	lea    rsi,[rip+0x1e3c2]        # 451278 <xmlStrEqual@plt+0x4d338>
  432eb6:	mov    edi,0x7
  432ebb:	xor    eax,eax
  432ebd:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  432ec2:	jmp    432e5c <xmlStrEqual@plt+0x2ef1c>
  432ec4:	nop    DWORD PTR [rax+0x0]
  432ec8:	mov    rax,0x469e3c
  432ecf:	cmp    DWORD PTR [rax],0x2
  432ed2:	jle    432e5c <xmlStrEqual@plt+0x2ef1c>
  432ed4:	mov    rdi,rbx
  432ed7:	call   428ca0 <xmlStrEqual@plt+0x24d60>
  432edc:	mov    rdx,rax
  432edf:	lea    rsi,[rip+0x1e3d2]        # 4512b8 <xmlStrEqual@plt+0x4d378>
  432ee6:	mov    edi,0x7
  432eeb:	xor    eax,eax
  432eed:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  432ef2:	xor    r12d,r12d
  432ef5:	jmp    432e5f <xmlStrEqual@plt+0x2ef1f>
  432efa:	nop    WORD PTR [rax+rax*1+0x0]
  432f00:	mov    rax,0x469e3c
  432f07:	cmp    DWORD PTR [rax],0x2
  432f0a:	jle    432e5c <xmlStrEqual@plt+0x2ef1c>
  432f10:	mov    rdi,rbx
  432f13:	call   428ca0 <xmlStrEqual@plt+0x24d60>
  432f18:	mov    rdx,rax
  432f1b:	lea    rsi,[rip+0x1e3d6]        # 4512f8 <xmlStrEqual@plt+0x4d3b8>
  432f22:	mov    edi,0x7
  432f27:	xor    eax,eax
  432f29:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  432f2e:	xor    r12d,r12d
  432f31:	jmp    432e5f <xmlStrEqual@plt+0x2ef1f>
  432f36:	nop    WORD PTR cs:[rax+rax*1+0x0]
  432f40:	endbr64 
  432f44:	push   r12
  432f46:	push   rbp
  432f47:	mov    rbp,rdi
  432f4a:	push   rbx
  432f4b:	mov    rbx,rsi
  432f4e:	mov    edx,DWORD PTR [rsi+0x18]
  432f51:	cmp    edx,0x2
  432f54:	je     432f88 <xmlStrEqual@plt+0x2f048>
  432f56:	cmp    edx,0x3
  432f59:	je     433000 <xmlStrEqual@plt+0x2f0c0>
  432f5f:	cmp    edx,0x1
  432f62:	je     432fc0 <xmlStrEqual@plt+0x2f080>
  432f64:	lea    rsi,[rip+0x1e455]        # 4513c0 <xmlStrEqual@plt+0x4d480>
  432f6b:	mov    edi,0x3
  432f70:	xor    eax,eax
  432f72:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  432f77:	xor    r12d,r12d
  432f7a:	pop    rbx
  432f7b:	pop    rbp
  432f7c:	mov    rax,r12
  432f7f:	pop    r12
  432f81:	ret    
  432f82:	nop    WORD PTR [rax+rax*1+0x0]
  432f88:	mov    rdi,rsi
  432f8b:	call   426320 <xmlStrEqual@plt+0x223e0>
  432f90:	movzx  esi,al
  432f93:	mov    rdi,rbp
  432f96:	call   431740 <xmlStrEqual@plt+0x2d800>
  432f9b:	mov    rdi,rax
  432f9e:	mov    rsi,rbx
  432fa1:	call   4326f0 <xmlStrEqual@plt+0x2e7b0>
  432fa6:	mov    r12,rax
  432fa9:	test   r12,r12
  432fac:	je     432f7a <xmlStrEqual@plt+0x2f03a>
  432fae:	pop    rbx
  432faf:	dec    DWORD PTR [rbp+0x30]
  432fb2:	pop    rbp
  432fb3:	mov    rax,r12
  432fb6:	pop    r12
  432fb8:	ret    
  432fb9:	nop    DWORD PTR [rax+0x0]
  432fc0:	mov    rdi,rsi
  432fc3:	call   425060 <xmlStrEqual@plt+0x21120>
  432fc8:	mov    rbx,rax
  432fcb:	mov    rdi,rax
  432fce:	call   424de0 <xmlStrEqual@plt+0x20ea0>
  432fd3:	mov    rdi,rbx
  432fd6:	call   426320 <xmlStrEqual@plt+0x223e0>
  432fdb:	movzx  esi,al
  432fde:	mov    rdi,rbp
  432fe1:	call   431740 <xmlStrEqual@plt+0x2d800>
  432fe6:	mov    rdi,rax
  432fe9:	mov    rsi,rbx
  432fec:	call   4326f0 <xmlStrEqual@plt+0x2e7b0>
  432ff1:	mov    rdi,rbx
  432ff4:	mov    r12,rax
  432ff7:	call   424bf0 <xmlStrEqual@plt+0x20cb0>
  432ffc:	jmp    432fa9 <xmlStrEqual@plt+0x2f069>
  432ffe:	xchg   ax,ax
  433000:	mov    rdi,rsi
  433003:	call   428cf0 <xmlStrEqual@plt+0x24db0>
  433008:	cmp    eax,0x2
  43300b:	je     433078 <xmlStrEqual@plt+0x2f138>
  43300d:	cmp    eax,0x9
  433010:	je     433050 <xmlStrEqual@plt+0x2f110>
  433012:	mov    rax,0x469e3c
  433019:	cmp    DWORD PTR [rax],0x2
  43301c:	jle    43303b <xmlStrEqual@plt+0x2f0fb>
  43301e:	mov    rdi,rbx
  433021:	call   428cf0 <xmlStrEqual@plt+0x24db0>
  433026:	mov    edx,eax
  433028:	lea    rsi,[rip+0x1e359]        # 451388 <xmlStrEqual@plt+0x4d448>
  43302f:	mov    edi,0x7
  433034:	xor    eax,eax
  433036:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  43303b:	pop    rbx
  43303c:	xor    r12d,r12d
  43303f:	pop    rbp
  433040:	mov    rax,r12
  433043:	pop    r12
  433045:	ret    
  433046:	nop    WORD PTR cs:[rax+rax*1+0x0]
  433050:	lea    rsi,[rbp+0x28]
  433054:	lea    rdi,[rbp+0x20]
  433058:	mov    rdx,rbx
  43305b:	call   4316c0 <xmlStrEqual@plt+0x2d780>
  433060:	mov    rdi,rax
  433063:	mov    rsi,rbx
  433066:	call   432d80 <xmlStrEqual@plt+0x2ee40>
  43306b:	mov    r12,rax
  43306e:	jmp    432fa9 <xmlStrEqual@plt+0x2f069>
  433073:	nop    DWORD PTR [rax+rax*1+0x0]
  433078:	lea    rsi,[rbp+0x18]
  43307c:	lea    rdi,[rbp+0x10]
  433080:	mov    rdx,rbx
  433083:	call   4317b0 <xmlStrEqual@plt+0x2d870>
  433088:	mov    r12,rax
  43308b:	test   rax,rax
  43308e:	je     4330b0 <xmlStrEqual@plt+0x2f170>
  433090:	mov    rdi,rbx
  433093:	call   42a690 <xmlStrEqual@plt+0x26750>
  433098:	test   rax,rax
  43309b:	je     43303b <xmlStrEqual@plt+0x2f0fb>
  43309d:	mov    rdi,r12
  4330a0:	mov    rsi,rax
  4330a3:	call   4326f0 <xmlStrEqual@plt+0x2e7b0>
  4330a8:	mov    r12,rax
  4330ab:	jmp    432fa9 <xmlStrEqual@plt+0x2f069>
  4330b0:	mov    rax,0x469e3c
  4330b7:	cmp    DWORD PTR [rax],0x2
  4330ba:	jle    43303b <xmlStrEqual@plt+0x2f0fb>
  4330c0:	mov    rdi,rbx
  4330c3:	call   428ca0 <xmlStrEqual@plt+0x24d60>
  4330c8:	mov    rdx,rax
  4330cb:	lea    rsi,[rip+0x1e266]        # 451338 <xmlStrEqual@plt+0x4d3f8>
  4330d2:	mov    edi,0x7
  4330d7:	xor    eax,eax
  4330d9:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  4330de:	jmp    432f7a <xmlStrEqual@plt+0x2f03a>
  4330e3:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4330ee:	xchg   ax,ax
  4330f0:	endbr64 
  4330f4:	push   r14
  4330f6:	push   r13
  4330f8:	push   r12
  4330fa:	mov    r12,rdi
  4330fd:	mov    edi,0x2
  433102:	push   rbp
  433103:	push   rbx
  433104:	mov    rbx,rsi
  433107:	sub    rsp,0x20
  43310b:	mov    rax,QWORD PTR fs:0x28
  433114:	mov    QWORD PTR [rsp+0x18],rax
  433119:	xor    eax,eax
  43311b:	call   424b10 <xmlStrEqual@plt+0x20bd0>
  433120:	mov    rdi,rbx
  433123:	mov    rbp,rax
  433126:	call   425890 <xmlStrEqual@plt+0x21950>
  43312b:	xor    edx,edx
  43312d:	mov    rsi,rbx
  433130:	mov    rdi,r12
  433133:	mov    r13d,eax
  433136:	call   4321e0 <xmlStrEqual@plt+0x2e2a0>
  43313b:	cmp    eax,0x1
  43313e:	jne    433230 <xmlStrEqual@plt+0x2f2f0>
  433144:	mov    edx,0x1
  433149:	mov    rsi,rbx
  43314c:	mov    rdi,r12
  43314f:	movzx  r14d,r13w
  433153:	call   4329b0 <xmlStrEqual@plt+0x2ea70>
  433158:	test   rax,rax
  43315b:	je     4331e0 <xmlStrEqual@plt+0x2f2a0>
  433161:	mov    rdx,QWORD PTR [rax+0x20]
  433165:	test   rdx,rdx
  433168:	je     4331e0 <xmlStrEqual@plt+0x2f2a0>
  43316a:	mov    rcx,QWORD PTR [rax+0x8]
  43316e:	mov    rsi,rsp
  433171:	vmovdqu xmm0,XMMWORD PTR [rcx]
  433175:	vmovaps XMMWORD PTR [rsp],xmm0
  43317a:	mov    rcx,QWORD PTR [rcx+0x10]
  43317e:	mov    QWORD PTR [rsp+0x10],rcx
  433183:	mov    r14d,DWORD PTR [rdx]
  433186:	inc    r14d
  433189:	cmp    QWORD PTR [rdx+0x18],rax
  43318d:	je     433238 <xmlStrEqual@plt+0x2f2f8>
  433193:	add    rsi,0x8
  433197:	movzx  edx,r13b
  43319b:	mov    rdi,rbp
  43319e:	call   425e60 <xmlStrEqual@plt+0x21f20>
  4331a3:	movzx  esi,r14b
  4331a7:	mov    rdi,rbp
  4331aa:	call   425730 <xmlStrEqual@plt+0x217f0>
  4331af:	mov    rdi,rbp
  4331b2:	call   437a50 <xmlStrEqual@plt+0x33b10>
  4331b7:	cmp    DWORD PTR [rbx+0x18],0x3
  4331bb:	jne    4331fb <xmlStrEqual@plt+0x2f2bb>
  4331bd:	mov    rdi,rbx
  4331c0:	call   425060 <xmlStrEqual@plt+0x21120>
  4331c5:	mov    rdi,rax
  4331c8:	mov    rsi,rbp
  4331cb:	mov    r13,rax
  4331ce:	call   425800 <xmlStrEqual@plt+0x218c0>
  4331d3:	mov    rdi,rbp
  4331d6:	call   424bf0 <xmlStrEqual@plt+0x20cb0>
  4331db:	mov    rbp,r13
  4331de:	jmp    4331fb <xmlStrEqual@plt+0x2f2bb>
  4331e0:	mov    rsi,rbp
  4331e3:	cmp    r14d,0x2
  4331e7:	je     433260 <xmlStrEqual@plt+0x2f320>
  4331e9:	lea    rdi,[rip+0x159c9]        # 448bb9 <xmlStrEqual@plt+0x44c79>
  4331f0:	call   425bf0 <xmlStrEqual@plt+0x21cb0>
  4331f5:	cmp    DWORD PTR [rbx+0x18],0x3
  4331f9:	je     4331bd <xmlStrEqual@plt+0x2f27d>
  4331fb:	mov    rsi,rbx
  4331fe:	mov    rdi,r12
  433201:	call   432f40 <xmlStrEqual@plt+0x2f000>
  433206:	mov    rcx,QWORD PTR [rsp+0x18]
  43320b:	xor    rcx,QWORD PTR fs:0x28
  433214:	mov    rax,rbp
  433217:	jne    43326e <xmlStrEqual@plt+0x2f32e>
  433219:	add    rsp,0x20
  43321d:	pop    rbx
  43321e:	pop    rbp
  43321f:	pop    r12
  433221:	pop    r13
  433223:	pop    r14
  433225:	ret    
  433226:	nop    WORD PTR cs:[rax+rax*1+0x0]
  433230:	xor    ebp,ebp
  433232:	jmp    433206 <xmlStrEqual@plt+0x2f2c6>
  433234:	nop    DWORD PTR [rax+0x0]
  433238:	mov    ecx,r14d
  43323b:	and    ecx,0x1f
  43323e:	mov    edx,0x20
  433243:	sub    edx,ecx
  433245:	mov    eax,r14d
  433248:	shr    al,0x5
  43324b:	cmp    edx,0x1
  43324e:	seta   dl
  433251:	movzx  eax,al
  433254:	movzx  edx,dl
  433257:	or     DWORD PTR [rsi+rax*4+0x8],edx
  43325b:	jmp    433193 <xmlStrEqual@plt+0x2f253>
  433260:	lea    rdi,[rip+0x1544c]        # 4486b3 <xmlStrEqual@plt+0x44773>
  433267:	call   425bf0 <xmlStrEqual@plt+0x21cb0>
  43326c:	jmp    4331f5 <xmlStrEqual@plt+0x2f2b5>
  43326e:	call   403c00 <__stack_chk_fail@plt>
  433273:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  43327e:	xchg   ax,ax
  433280:	endbr64 
  433284:	push   r15
  433286:	push   r14
  433288:	push   r13
  43328a:	push   r12
  43328c:	mov    r12,rdx
  43328f:	push   rbp
  433290:	mov    rbp,rsi
  433293:	push   rbx
  433294:	mov    rbx,rdi
  433297:	sub    rsp,0x868
  43329e:	mov    QWORD PTR [rsp+0x28],rdi
  4332a3:	mov    rax,QWORD PTR fs:0x28
  4332ac:	mov    QWORD PTR [rsp+0x858],rax
  4332b4:	xor    eax,eax
  4332b6:	call   42dc90 <xmlStrEqual@plt+0x29d50>
  4332bb:	mov    rdi,QWORD PTR [rbx]
  4332be:	mov    rsi,rax
  4332c1:	mov    r15,rax
  4332c4:	mov    QWORD PTR [rsp+0x20],rax
  4332c9:	call   42dcf0 <xmlStrEqual@plt+0x29db0>
  4332ce:	mov    rdi,QWORD PTR [rbx+0x8]
  4332d2:	mov    rsi,r15
  4332d5:	call   42dcf0 <xmlStrEqual@plt+0x29db0>
  4332da:	mov    r8,QWORD PTR [rbx+0x10]
  4332de:	xor    ebx,ebx
  4332e0:	mov    rsi,QWORD PTR [r8]
  4332e3:	mov    edx,DWORD PTR [rsi]
  4332e5:	test   edx,edx
  4332e7:	jne    4332f9 <xmlStrEqual@plt+0x2f3b9>
  4332e9:	jmp    43333c <xmlStrEqual@plt+0x2f3fc>
  4332eb:	nop    DWORD PTR [rax+rax*1+0x0]
  4332f0:	mov    rsi,QWORD PTR [r8]
  4332f3:	inc    ebx
  4332f5:	cmp    DWORD PTR [rsi],ebx
  4332f7:	je     43333c <xmlStrEqual@plt+0x2f3fc>
  4332f9:	mov    ecx,ebx
  4332fb:	mov    rdi,QWORD PTR [rsi+0x10]
  4332ff:	lea    eax,[rbx+rbx*1]
  433302:	and    eax,0x1e
  433305:	shr    ecx,0x4
  433308:	mov    edx,eax
  43330a:	mov    eax,DWORD PTR [rdi+rcx*4]
  43330d:	shrx   eax,eax,edx
  433312:	test   al,0x3
  433314:	jne    4332f0 <xmlStrEqual@plt+0x2f3b0>
  433316:	mov    rdx,QWORD PTR [rsi+0x20]
  43331a:	mov    eax,ebx
  43331c:	mov    rsi,QWORD PTR [rsp+0x20]
  433321:	mov    rdi,QWORD PTR [rdx+rax*8]
  433325:	inc    ebx
  433327:	call   42dcf0 <xmlStrEqual@plt+0x29db0>
  43332c:	mov    rax,QWORD PTR [rsp+0x28]
  433331:	mov    r8,QWORD PTR [rax+0x10]
  433335:	mov    rsi,QWORD PTR [r8]
  433338:	cmp    DWORD PTR [rsi],ebx
  43333a:	jne    4332f9 <xmlStrEqual@plt+0x2f3b9>
  43333c:	mov    rax,QWORD PTR [rsp+0x28]
  433341:	xor    ebx,ebx
  433343:	mov    r8,QWORD PTR [rax+0x18]
  433347:	mov    rsi,QWORD PTR [r8]
  43334a:	mov    eax,DWORD PTR [rsi]
  43334c:	test   eax,eax
  43334e:	jne    433361 <xmlStrEqual@plt+0x2f421>
  433350:	jmp    4333a4 <xmlStrEqual@plt+0x2f464>
  433352:	nop    WORD PTR [rax+rax*1+0x0]
  433358:	mov    rsi,QWORD PTR [r8]
  43335b:	inc    ebx
  43335d:	cmp    DWORD PTR [rsi],ebx
  43335f:	je     4333a4 <xmlStrEqual@plt+0x2f464>
  433361:	mov    ecx,ebx
  433363:	mov    rdi,QWORD PTR [rsi+0x10]
  433367:	lea    eax,[rbx+rbx*1]
  43336a:	and    eax,0x1e
  43336d:	shr    ecx,0x4
  433370:	mov    edx,eax
  433372:	mov    eax,DWORD PTR [rdi+rcx*4]
  433375:	shrx   eax,eax,edx
  43337a:	test   al,0x3
  43337c:	jne    433358 <xmlStrEqual@plt+0x2f418>
  43337e:	mov    rdx,QWORD PTR [rsi+0x20]
  433382:	mov    eax,ebx
  433384:	mov    rsi,QWORD PTR [rsp+0x20]
  433389:	mov    rdi,QWORD PTR [rdx+rax*8]
  43338d:	inc    ebx
  43338f:	call   42dcf0 <xmlStrEqual@plt+0x29db0>
  433394:	mov    rax,QWORD PTR [rsp+0x28]
  433399:	mov    r8,QWORD PTR [rax+0x18]
  43339d:	mov    rsi,QWORD PTR [r8]
  4333a0:	cmp    DWORD PTR [rsi],ebx
  4333a2:	jne    433361 <xmlStrEqual@plt+0x2f421>
  4333a4:	mov    rax,QWORD PTR [rsp+0x20]
  4333a9:	lea    rsi,[rsp+0x40]
  4333ae:	mov    rcx,QWORD PTR [rax+0x8]
  4333b2:	mov    QWORD PTR [rsp+0x18],rsi
  4333b7:	lea    rsi,[rsp+0x450]
  4333bf:	mov    QWORD PTR [rsp+0x10],rcx
  4333c4:	mov    QWORD PTR [rsp+0x8],rsi
  4333c9:	cmp    rax,rcx
  4333cc:	je     4334e1 <xmlStrEqual@plt+0x2f5a1>
  4333d2:	mov    rax,QWORD PTR [rsp+0x10]
  4333d7:	mov    rax,QWORD PTR [rax+0x10]
  4333db:	mov    rbx,QWORD PTR [rax]
  4333de:	test   rbx,rbx
  4333e1:	je     4334c8 <xmlStrEqual@plt+0x2f588>
  4333e7:	mov    r13,QWORD PTR [rsp+0x18]
  4333ec:	jmp    433411 <xmlStrEqual@plt+0x2f4d1>
  4333ee:	xchg   ax,ax
  4333f0:	mov    rax,QWORD PTR [rbx+0x10]
  4333f4:	mov    rdx,QWORD PTR [rbx+0x18]
  4333f8:	test   rax,rax
  4333fb:	je     4334a8 <xmlStrEqual@plt+0x2f568>
  433401:	test   rdx,rdx
  433404:	je     43340e <xmlStrEqual@plt+0x2f4ce>
  433406:	mov    QWORD PTR [r13+0x0],rdx
  43340a:	add    r13,0x8
  43340e:	mov    rbx,rax
  433411:	cmp    QWORD PTR [rbx+0x8],0x0
  433416:	je     4333f0 <xmlStrEqual@plt+0x2f4b0>
  433418:	mov    rax,QWORD PTR [rbx+0x28]
  43341c:	mov    r14,QWORD PTR [rax]
  43341f:	test   r14,r14
  433422:	je     4333f0 <xmlStrEqual@plt+0x2f4b0>
  433424:	mov    r15,QWORD PTR [rsp+0x8]
  433429:	nop    DWORD PTR [rax+0x0]
  433430:	cmp    QWORD PTR [r14+0x8],0x0
  433435:	je     433445 <xmlStrEqual@plt+0x2f505>
  433437:	mov    rdi,QWORD PTR [r14+0x28]
  43343b:	test   rdi,rdi
  43343e:	je     433445 <xmlStrEqual@plt+0x2f505>
  433440:	mov    rsi,r12
  433443:	call   rbp
  433445:	mov    rdx,QWORD PTR [r14+0x10]
  433449:	mov    r14,QWORD PTR [r14+0x18]
  43344d:	test   rdx,rdx
  433450:	je     433478 <xmlStrEqual@plt+0x2f538>
  433452:	test   r14,r14
  433455:	je     4334a0 <xmlStrEqual@plt+0x2f560>
  433457:	mov    QWORD PTR [r15],r14
  43345a:	mov    r14,rdx
  43345d:	add    r15,0x8
  433461:	cmp    QWORD PTR [r14+0x8],0x0
  433466:	jne    433437 <xmlStrEqual@plt+0x2f4f7>
  433468:	mov    rdx,QWORD PTR [r14+0x10]
  43346c:	mov    r14,QWORD PTR [r14+0x18]
  433470:	test   rdx,rdx
  433473:	jne    433452 <xmlStrEqual@plt+0x2f512>
  433475:	nop    DWORD PTR [rax]
  433478:	test   r14,r14
  43347b:	jne    433430 <xmlStrEqual@plt+0x2f4f0>
  43347d:	cmp    r15,QWORD PTR [rsp+0x8]
  433482:	je     4333f0 <xmlStrEqual@plt+0x2f4b0>
  433488:	mov    r14,QWORD PTR [r15-0x8]
  43348c:	test   r14,r14
  43348f:	je     4333f0 <xmlStrEqual@plt+0x2f4b0>
  433495:	sub    r15,0x8
  433499:	jmp    433430 <xmlStrEqual@plt+0x2f4f0>
  43349b:	nop    DWORD PTR [rax+rax*1+0x0]
  4334a0:	mov    r14,rdx
  4334a3:	jmp    433430 <xmlStrEqual@plt+0x2f4f0>
  4334a5:	nop    DWORD PTR [rax]
  4334a8:	mov    rax,rdx
  4334ab:	test   rdx,rdx
  4334ae:	jne    43340e <xmlStrEqual@plt+0x2f4ce>
  4334b4:	cmp    r13,QWORD PTR [rsp+0x18]
  4334b9:	je     4334c8 <xmlStrEqual@plt+0x2f588>
  4334bb:	mov    rbx,QWORD PTR [r13-0x8]
  4334bf:	test   rbx,rbx
  4334c2:	jne    433613 <xmlStrEqual@plt+0x2f6d3>
  4334c8:	mov    rax,QWORD PTR [rsp+0x10]
  4334cd:	mov    rax,QWORD PTR [rax+0x8]
  4334d1:	mov    QWORD PTR [rsp+0x10],rax
  4334d6:	cmp    QWORD PTR [rsp+0x20],rax
  4334db:	jne    4333d2 <xmlStrEqual@plt+0x2f492>
  4334e1:	mov    rdi,QWORD PTR [rsp+0x20]
  4334e6:	call   42e2b0 <xmlStrEqual@plt+0x2a370>
  4334eb:	mov    rcx,QWORD PTR [rsp+0x28]
  4334f0:	mov    QWORD PTR [rsp+0x10],0x0
  4334f9:	mov    rax,QWORD PTR [rcx+0x20]
  4334fd:	mov    rdx,QWORD PTR [rcx+0x28]
  433501:	lea    rcx,[rsp+0x40]
  433506:	mov    QWORD PTR [rsp+0x18],rcx
  43350b:	lea    rcx,[rsp+0x450]
  433513:	mov    QWORD PTR [rsp+0x30],rax
  433518:	mov    QWORD PTR [rsp+0x38],rdx
  43351d:	mov    QWORD PTR [rsp+0x8],rcx
  433522:	mov    r15,QWORD PTR [rax]
  433525:	test   r15,r15
  433528:	je     4335f0 <xmlStrEqual@plt+0x2f6b0>
  43352e:	mov    rbx,QWORD PTR [rsp+0x18]
  433533:	nop    DWORD PTR [rax+rax*1+0x0]
  433538:	cmp    QWORD PTR [r15+0x8],0x0
  43353d:	jne    43356a <xmlStrEqual@plt+0x2f62a>
  43353f:	mov    rax,QWORD PTR [r15+0x10]
  433543:	mov    r15,QWORD PTR [r15+0x18]
  433547:	test   rax,rax
  43354a:	je     4335d7 <xmlStrEqual@plt+0x2f697>
  433550:	test   r15,r15
  433553:	je     43360b <xmlStrEqual@plt+0x2f6cb>
  433559:	mov    QWORD PTR [rbx],r15
  43355c:	mov    r15,rax
  43355f:	add    rbx,0x8
  433563:	cmp    QWORD PTR [r15+0x8],0x0
  433568:	je     43353f <xmlStrEqual@plt+0x2f5ff>
  43356a:	mov    rax,QWORD PTR [r15+0x28]
  43356e:	mov    r13,QWORD PTR [rax]
  433571:	test   r13,r13
  433574:	je     43353f <xmlStrEqual@plt+0x2f5ff>
  433576:	mov    r14,QWORD PTR [rsp+0x8]
  43357b:	jmp    43358f <xmlStrEqual@plt+0x2f64f>
  43357d:	nop    DWORD PTR [rax]
  433580:	test   rax,rax
  433583:	je     43358c <xmlStrEqual@plt+0x2f64c>
  433585:	mov    QWORD PTR [r14],rax
  433588:	add    r14,0x8
  43358c:	mov    r13,rdx
  43358f:	cmp    QWORD PTR [r13+0x8],0x0
  433594:	je     4335a4 <xmlStrEqual@plt+0x2f664>
  433596:	mov    rdi,QWORD PTR [r13+0x28]
  43359a:	test   rdi,rdi
  43359d:	je     4335a4 <xmlStrEqual@plt+0x2f664>
  43359f:	mov    rsi,r12
  4335a2:	call   rbp
  4335a4:	mov    rdx,QWORD PTR [r13+0x10]
  4335a8:	mov    rax,QWORD PTR [r13+0x18]
  4335ac:	test   rdx,rdx
  4335af:	jne    433580 <xmlStrEqual@plt+0x2f640>
  4335b1:	mov    rdx,rax
  4335b4:	test   rax,rax
  4335b7:	jne    43358c <xmlStrEqual@plt+0x2f64c>
  4335b9:	cmp    r14,QWORD PTR [rsp+0x8]
  4335be:	je     43353f <xmlStrEqual@plt+0x2f5ff>
  4335c4:	mov    r13,QWORD PTR [r14-0x8]
  4335c8:	test   r13,r13
  4335cb:	je     43353f <xmlStrEqual@plt+0x2f5ff>
  4335d1:	sub    r14,0x8
  4335d5:	jmp    43358f <xmlStrEqual@plt+0x2f64f>
  4335d7:	test   r15,r15
  4335da:	jne    433538 <xmlStrEqual@plt+0x2f5f8>
  4335e0:	cmp    rbx,QWORD PTR [rsp+0x18]
  4335e5:	je     4335f0 <xmlStrEqual@plt+0x2f6b0>
  4335e7:	mov    r15,QWORD PTR [rbx-0x8]
  4335eb:	test   r15,r15
  4335ee:	jne    43361c <xmlStrEqual@plt+0x2f6dc>
  4335f0:	add    QWORD PTR [rsp+0x10],0x8
  4335f6:	mov    rax,QWORD PTR [rsp+0x10]
  4335fb:	cmp    rax,0x10
  4335ff:	je     433625 <xmlStrEqual@plt+0x2f6e5>
  433601:	mov    rax,QWORD PTR [rsp+rax*1+0x30]
  433606:	jmp    433522 <xmlStrEqual@plt+0x2f5e2>
  43360b:	mov    r15,rax
  43360e:	jmp    433538 <xmlStrEqual@plt+0x2f5f8>
  433613:	sub    r13,0x8
  433617:	jmp    433411 <xmlStrEqual@plt+0x2f4d1>
  43361c:	sub    rbx,0x8
  433620:	jmp    433538 <xmlStrEqual@plt+0x2f5f8>
  433625:	mov    rax,QWORD PTR [rsp+0x858]
  43362d:	xor    rax,QWORD PTR fs:0x28
  433636:	jne    43364a <xmlStrEqual@plt+0x2f70a>
  433638:	add    rsp,0x868
  43363f:	pop    rbx
  433640:	pop    rbp
  433641:	pop    r12
  433643:	pop    r13
  433645:	pop    r14
  433647:	pop    r15
  433649:	ret    
  43364a:	call   403c00 <__stack_chk_fail@plt>
  43364f:	nop
  433650:	endbr64 
  433654:	push   rbx
  433655:	mov    edi,0x48
  43365a:	call   434fe0 <xmlStrEqual@plt+0x310a0>
  43365f:	mov    BYTE PTR [rax+0x10],0x0
  433663:	xor    edi,edi
  433665:	mov    rbx,rax
  433668:	call   403b20 <time@plt>
  43366d:	mov    QWORD PTR [rbx+0x18],rax
  433671:	mov    rax,rbx
  433674:	pop    rbx
  433675:	ret    
  433676:	nop    WORD PTR cs:[rax+rax*1+0x0]
  433680:	endbr64 
  433684:	mov    QWORD PTR [rdi+0x8],rsi
  433688:	mov    BYTE PTR [rdi],0x1
  43368b:	ret    
  43368c:	nop    DWORD PTR [rax+0x0]
  433690:	endbr64 
  433694:	mov    BYTE PTR [rdi+0x10],0x1
  433698:	mov    QWORD PTR [rdi+0x8],rsi
  43369c:	mov    BYTE PTR [rdi],0x2
  43369f:	ret    
  4336a0:	endbr64 
  4336a4:	push   r15
  4336a6:	push   r14
  4336a8:	push   r13
  4336aa:	push   r12
  4336ac:	push   rbp
  4336ad:	push   rbx
  4336ae:	sub    rsp,0x8
  4336b2:	test   rdi,rdi
  4336b5:	je     433770 <xmlStrEqual@plt+0x2f830>
  4336bb:	mov    rax,QWORD PTR [rdi+0x8]
  4336bf:	mov    r15,rdi
  4336c2:	mov    rdx,QWORD PTR [rax+0x28]
  4336c6:	mov    r14,0x475860
  4336cd:	mov    r12,QWORD PTR [rdx+0x8]
  4336d1:	mov    r13,0x475858
  4336d8:	cmp    rdx,r12
  4336db:	jne    4336eb <xmlStrEqual@plt+0x2f7ab>
  4336dd:	jmp    433728 <xmlStrEqual@plt+0x2f7e8>
  4336df:	nop
  4336e0:	mov    r12,QWORD PTR [r12+0x8]
  4336e5:	cmp    QWORD PTR [rax+0x28],r12
  4336e9:	je     433728 <xmlStrEqual@plt+0x2f7e8>
  4336eb:	mov    rbp,QWORD PTR [r12+0x10]
  4336f0:	mov    edx,DWORD PTR [rbp+0x18]
  4336f3:	test   edx,edx
  4336f5:	je     4336e0 <xmlStrEqual@plt+0x2f7a0>
  4336f7:	mov    rbx,QWORD PTR [rbp+0x8]
  4336fb:	cmp    rbx,rbp
  4336fe:	je     4336e0 <xmlStrEqual@plt+0x2f7a0>
  433700:	mov    rdi,QWORD PTR [rbx+0x10]
  433704:	mov    rdx,QWORD PTR [r14]
  433707:	mov    rsi,QWORD PTR [r13+0x0]
  43370b:	call   43b8d0 <xmlStrEqual@plt+0x37990>
  433710:	mov    rbx,QWORD PTR [rbx+0x8]
  433714:	cmp    rbx,rbp
  433717:	jne    433700 <xmlStrEqual@plt+0x2f7c0>
  433719:	mov    rax,QWORD PTR [r15+0x8]
  43371d:	mov    r12,QWORD PTR [r12+0x8]
  433722:	cmp    QWORD PTR [rax+0x28],r12
  433726:	jne    4336eb <xmlStrEqual@plt+0x2f7ab>
  433728:	mov    rdx,QWORD PTR [r14]
  43372b:	mov    rsi,QWORD PTR [r13+0x0]
  43372f:	mov    rdi,r15
  433732:	call   43b8d0 <xmlStrEqual@plt+0x37990>
  433737:	mov    rdi,QWORD PTR [r15+0x8]
  43373b:	call   42b110 <xmlStrEqual@plt+0x271d0>
  433740:	mov    rdi,QWORD PTR [r15+0x20]
  433744:	test   rdi,rdi
  433747:	je     43374d <xmlStrEqual@plt+0x2f80d>
  433749:	call   QWORD PTR [r15+0x28]
  43374d:	mov    rdi,QWORD PTR [r15+0x30]
  433751:	test   rdi,rdi
  433754:	je     43375a <xmlStrEqual@plt+0x2f81a>
  433756:	call   QWORD PTR [r15+0x38]
  43375a:	add    rsp,0x8
  43375e:	pop    rbx
  43375f:	pop    rbp
  433760:	pop    r12
  433762:	pop    r13
  433764:	pop    r14
  433766:	mov    rdi,r15
  433769:	pop    r15
  43376b:	jmp    4037b0 <free@plt>
  433770:	lea    rcx,[rip+0x1dd69]        # 4514e0 <xmlStrEqual@plt+0x4d5a0>
  433777:	mov    edx,0x40
  43377c:	lea    rsi,[rip+0x1dcdf]        # 451462 <xmlStrEqual@plt+0x4d522>
  433783:	lea    rdi,[rip+0x1dcee]        # 451478 <xmlStrEqual@plt+0x4d538>
  43378a:	call   403a60 <__assert_fail@plt>
  43378f:	nop
  433790:	endbr64 
  433794:	mov    rax,QWORD PTR [rdi+0x8]
  433798:	ret    
  433799:	nop    DWORD PTR [rax+0x0]
  4337a0:	endbr64 
  4337a4:	mov    rax,QWORD PTR [rdi+0x8]
  4337a8:	cmp    WORD PTR [rax+0x20],0x0
  4337ad:	setne  al
  4337b0:	ret    
  4337b1:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4337bc:	nop    DWORD PTR [rax+0x0]
  4337c0:	endbr64 
  4337c4:	push   r15
  4337c6:	push   r14
  4337c8:	push   r13
  4337ca:	mov    r13,rdi
  4337cd:	push   r12
  4337cf:	push   rbp
  4337d0:	push   rbx
  4337d1:	mov    ebx,esi
  4337d3:	sub    rsp,0x2f8
  4337da:	mov    rax,QWORD PTR fs:0x28
  4337e3:	mov    QWORD PTR [rsp+0x2e8],rax
  4337eb:	xor    eax,eax
  4337ed:	cmp    esi,0x4
  4337f0:	jle    433830 <xmlStrEqual@plt+0x2f8f0>
  4337f2:	mov    rax,0x469e3c
  4337f9:	mov    eax,DWORD PTR [rax]
  4337fb:	add    eax,0x4
  4337fe:	cmp    esi,eax
  433800:	jle    433830 <xmlStrEqual@plt+0x2f8f0>
  433802:	mov    rax,QWORD PTR [rsp+0x2e8]
  43380a:	xor    rax,QWORD PTR fs:0x28
  433813:	jne    433a64 <xmlStrEqual@plt+0x2fb24>
  433819:	add    rsp,0x2f8
  433820:	pop    rbx
  433821:	pop    rbp
  433822:	pop    r12
  433824:	pop    r13
  433826:	pop    r14
  433828:	pop    r15
  43382a:	ret    
  43382b:	nop    DWORD PTR [rax+rax*1+0x0]
  433830:	xor    edi,edi
  433832:	mov    BYTE PTR [rsp+0x50],0x0
  433837:	mov    BYTE PTR [rsp+0x10],0x0
  43383c:	mov    BYTE PTR [rsp+0x150],0x0
  433844:	mov    rbp,QWORD PTR [r13+0x8]
  433848:	call   403b20 <time@plt>
  43384d:	sub    rax,QWORD PTR [r13+0x18]
  433851:	lea    rdi,[rsp+0x8]
  433856:	mov    QWORD PTR [rsp+0x8],rax
  43385b:	lea    r14,[rsp+0x50]
  433860:	call   403ab0 <localtime@plt>
  433865:	mov    rcx,rax
  433868:	lea    rdx,[rip+0x1dc16]        # 451485 <xmlStrEqual@plt+0x4d545>
  43386f:	mov    esi,0x14
  433874:	mov    rdi,r14
  433877:	call   403ad0 <strftime@plt>
  43387c:	mov    rax,QWORD PTR [r13+0x8]
  433880:	lea    r15,[rsp+0x10]
  433885:	imul   eax,DWORD PTR [rax+0x30],0x3c
  433889:	sub    rax,QWORD PTR [rsp+0x8]
  43388e:	mov    QWORD PTR [rsp],rax
  433892:	test   rax,rax
  433895:	jg     433a40 <xmlStrEqual@plt+0x2fb00>
  43389b:	lea    r12,[rsp+0x150]
  4338a3:	sub    rsp,0x8
  4338a7:	push   r15
  4338a9:	mov    edx,0x1
  4338ae:	mov    rdi,r12
  4338b1:	xor    eax,eax
  4338b3:	mov    r9,r14
  4338b6:	lea    r8,[rip+0x1dc03]        # 4514c0 <xmlStrEqual@plt+0x4d580>
  4338bd:	mov    ecx,0x190
  4338c2:	mov    esi,0x190
  4338c7:	call   403a40 <__snprintf_chk@plt>
  4338cc:	pop    rax
  4338cd:	cmp    BYTE PTR [r13+0x0],0x2
  4338d2:	pop    rdx
  4338d3:	mov    rdi,r12
  4338d6:	je     4339e0 <xmlStrEqual@plt+0x2faa0>
  4338dc:	mov    edx,DWORD PTR [rdi]
  4338de:	add    rdi,0x4
  4338e2:	lea    eax,[rdx-0x1010101]
  4338e8:	andn   eax,edx,eax
  4338ed:	and    eax,0x80808080
  4338f2:	je     4338dc <xmlStrEqual@plt+0x2f99c>
  4338f4:	mov    edx,eax
  4338f6:	shr    edx,0x10
  4338f9:	test   eax,0x8080
  4338fe:	cmove  eax,edx
  433901:	lea    rdx,[rdi+0x2]
  433905:	cmove  rdi,rdx
  433909:	mov    ecx,eax
  43390b:	add    cl,al
  43390d:	sbb    rdi,0x3
  433911:	sub    rdi,r12
  433914:	mov    esi,0x190
  433919:	sub    rsi,rdi
  43391c:	lea    rdx,[rip+0x1db7a]        # 45149d <xmlStrEqual@plt+0x4d55d>
  433923:	add    rdi,r12
  433926:	xor    eax,eax
  433928:	call   403de0 <snprintf@plt>
  43392d:	cmp    BYTE PTR [r13+0x10],0x1
  433932:	lea    r9,[rip+0x1db45]        # 45147e <xmlStrEqual@plt+0x4d53e>
  433939:	lea    rax,[rip+0x1db42]        # 451482 <xmlStrEqual@plt+0x4d542>
  433940:	cmovne r9,rax
  433944:	mov    rdi,r12
  433947:	mov    edx,DWORD PTR [rdi]
  433949:	add    rdi,0x4
  43394d:	lea    eax,[rdx-0x1010101]
  433953:	andn   eax,edx,eax
  433958:	and    eax,0x80808080
  43395d:	je     433947 <xmlStrEqual@plt+0x2fa07>
  43395f:	mov    edx,eax
  433961:	shr    edx,0x10
  433964:	test   eax,0x8080
  433969:	cmove  eax,edx
  43396c:	lea    rdx,[rdi+0x2]
  433970:	cmove  rdi,rdx
  433974:	mov    ecx,eax
  433976:	add    cl,al
  433978:	sbb    rdi,0x3
  43397c:	sub    rdi,r12
  43397f:	mov    esi,0x190
  433984:	sub    rsi,rdi
  433987:	xor    eax,eax
  433989:	add    rdi,r12
  43398c:	lea    r8,[rip+0x1db1a]        # 4514ad <xmlStrEqual@plt+0x4d56d>
  433993:	mov    rcx,0xffffffffffffffff
  43399a:	mov    edx,0x1
  43399f:	call   403a40 <__snprintf_chk@plt>
  4339a4:	cmp    ebx,0x4
  4339a7:	jle    4339bd <xmlStrEqual@plt+0x2fa7d>
  4339a9:	mov    rax,0x469e3c
  4339b0:	mov    eax,DWORD PTR [rax]
  4339b2:	add    eax,0x4
  4339b5:	cmp    ebx,eax
  4339b7:	jg     433802 <xmlStrEqual@plt+0x2f8c2>
  4339bd:	mov    rdi,rbp
  4339c0:	call   42b300 <xmlStrEqual@plt+0x273c0>
  4339c5:	mov    rcx,rax
  4339c8:	mov    rdx,r12
  4339cb:	lea    rsi,[rip+0x1dae6]        # 4514b8 <xmlStrEqual@plt+0x4d578>
  4339d2:	mov    edi,ebx
  4339d4:	xor    eax,eax
  4339d6:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  4339db:	jmp    433802 <xmlStrEqual@plt+0x2f8c2>
  4339e0:	mov    edx,DWORD PTR [rdi]
  4339e2:	add    rdi,0x4
  4339e6:	lea    eax,[rdx-0x1010101]
  4339ec:	andn   eax,edx,eax
  4339f1:	and    eax,0x80808080
  4339f6:	je     4339e0 <xmlStrEqual@plt+0x2faa0>
  4339f8:	mov    edx,eax
  4339fa:	shr    edx,0x10
  4339fd:	test   eax,0x8080
  433a02:	cmove  eax,edx
  433a05:	lea    rdx,[rdi+0x2]
  433a09:	cmove  rdi,rdx
  433a0d:	mov    ecx,eax
  433a0f:	add    cl,al
  433a11:	sbb    rdi,0x3
  433a15:	sub    rdi,r12
  433a18:	mov    esi,0x190
  433a1d:	sub    rsi,rdi
  433a20:	lea    rdx,[rip+0x1da67]        # 45148e <xmlStrEqual@plt+0x4d54e>
  433a27:	add    rdi,r12
  433a2a:	xor    eax,eax
  433a2c:	call   403de0 <snprintf@plt>
  433a31:	jmp    43392d <xmlStrEqual@plt+0x2f9ed>
  433a36:	nop    WORD PTR cs:[rax+rax*1+0x0]
  433a40:	mov    rdi,rsp
  433a43:	call   403ab0 <localtime@plt>
  433a48:	mov    rcx,rax
  433a4b:	lea    rdx,[rip+0x1da33]        # 451485 <xmlStrEqual@plt+0x4d545>
  433a52:	mov    esi,0x14
  433a57:	mov    rdi,r15
  433a5a:	call   403ad0 <strftime@plt>
  433a5f:	jmp    43389b <xmlStrEqual@plt+0x2f95b>
  433a64:	call   403c00 <__stack_chk_fail@plt>
  433a69:	nop    DWORD PTR [rax+0x0]
  433a70:	endbr64 
  433a74:	push   rbx
  433a75:	mov    edi,0x18
  433a7a:	call   434fe0 <xmlStrEqual@plt+0x310a0>
  433a7f:	xor    edi,edi
  433a81:	mov    rbx,rax
  433a84:	call   403b20 <time@plt>
  433a89:	mov    QWORD PTR [rbx+0x10],rax
  433a8d:	mov    rax,rbx
  433a90:	pop    rbx
  433a91:	ret    
  433a92:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  433a9d:	nop    DWORD PTR [rax]
  433aa0:	endbr64 
  433aa4:	mov    QWORD PTR [rdi+0x8],rsi
  433aa8:	mov    BYTE PTR [rdi],0x1
  433aab:	ret    
  433aac:	nop    DWORD PTR [rax+0x0]
  433ab0:	endbr64 
  433ab4:	mov    QWORD PTR [rdi+0x8],rsi
  433ab8:	mov    BYTE PTR [rdi],0x2
  433abb:	ret    
  433abc:	nop    DWORD PTR [rax+0x0]
  433ac0:	endbr64 
  433ac4:	test   rdi,rdi
  433ac7:	je     433b76 <xmlStrEqual@plt+0x2fc36>
  433acd:	push   r15
  433acf:	mov    r15,rdi
  433ad2:	push   r14
  433ad4:	push   r13
  433ad6:	push   r12
  433ad8:	push   rbp
  433ad9:	push   rbx
  433ada:	sub    rsp,0x8
  433ade:	mov    rax,QWORD PTR [rdi+0x8]
  433ae2:	mov    r14,0x475860
  433ae9:	mov    rdx,QWORD PTR [rax+0x28]
  433aed:	mov    r13,0x475858
  433af4:	mov    r12,QWORD PTR [rdx+0x8]
  433af8:	cmp    rdx,r12
  433afb:	jne    433b0b <xmlStrEqual@plt+0x2fbcb>
  433afd:	jmp    433b48 <xmlStrEqual@plt+0x2fc08>
  433aff:	nop
  433b00:	mov    r12,QWORD PTR [r12+0x8]
  433b05:	cmp    QWORD PTR [rax+0x28],r12
  433b09:	je     433b48 <xmlStrEqual@plt+0x2fc08>
  433b0b:	mov    rbp,QWORD PTR [r12+0x10]
  433b10:	mov    edx,DWORD PTR [rbp+0x18]
  433b13:	test   edx,edx
  433b15:	je     433b00 <xmlStrEqual@plt+0x2fbc0>
  433b17:	mov    rbx,QWORD PTR [rbp+0x8]
  433b1b:	cmp    rbx,rbp
  433b1e:	je     433b00 <xmlStrEqual@plt+0x2fbc0>
  433b20:	mov    rdi,QWORD PTR [rbx+0x10]
  433b24:	mov    rdx,QWORD PTR [r14]
  433b27:	mov    rsi,QWORD PTR [r13+0x0]
  433b2b:	call   43b8d0 <xmlStrEqual@plt+0x37990>
  433b30:	mov    rbx,QWORD PTR [rbx+0x8]
  433b34:	cmp    rbx,rbp
  433b37:	jne    433b20 <xmlStrEqual@plt+0x2fbe0>
  433b39:	mov    rax,QWORD PTR [r15+0x8]
  433b3d:	mov    r12,QWORD PTR [r12+0x8]
  433b42:	cmp    QWORD PTR [rax+0x28],r12
  433b46:	jne    433b0b <xmlStrEqual@plt+0x2fbcb>
  433b48:	mov    rdx,QWORD PTR [r14]
  433b4b:	mov    rsi,QWORD PTR [r13+0x0]
  433b4f:	mov    rdi,r15
  433b52:	call   43b8d0 <xmlStrEqual@plt+0x37990>
  433b57:	mov    rdi,QWORD PTR [r15+0x8]
  433b5b:	call   42bde0 <xmlStrEqual@plt+0x27ea0>
  433b60:	add    rsp,0x8
  433b64:	pop    rbx
  433b65:	pop    rbp
  433b66:	pop    r12
  433b68:	pop    r13
  433b6a:	pop    r14
  433b6c:	mov    rdi,r15
  433b6f:	pop    r15
  433b71:	jmp    4037b0 <free@plt>
  433b76:	ret    
  433b77:	nop    WORD PTR [rax+rax*1+0x0]
  433b80:	endbr64 
  433b84:	mov    rax,QWORD PTR [rdi+0x8]
  433b88:	ret    
  433b89:	nop    DWORD PTR [rax+0x0]
  433b90:	endbr64 
  433b94:	mov    rax,QWORD PTR [rdi+0x8]
  433b98:	cmp    WORD PTR [rax+0x20],0x0
  433b9d:	setne  al
  433ba0:	ret    
  433ba1:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  433bac:	nop    DWORD PTR [rax+0x0]
  433bb0:	endbr64 
  433bb4:	push   r15
  433bb6:	push   r14
  433bb8:	push   r13
  433bba:	mov    r13,rdi
  433bbd:	push   r12
  433bbf:	push   rbp
  433bc0:	mov    ebp,esi
  433bc2:	push   rbx
  433bc3:	sub    rsp,0x2f8
  433bca:	mov    rax,QWORD PTR fs:0x28
  433bd3:	mov    QWORD PTR [rsp+0x2e8],rax
  433bdb:	xor    eax,eax
  433bdd:	cmp    esi,0x4
  433be0:	jle    433c20 <xmlStrEqual@plt+0x2fce0>
  433be2:	mov    rax,0x469e3c
  433be9:	mov    eax,DWORD PTR [rax]
  433beb:	add    eax,0x4
  433bee:	cmp    esi,eax
  433bf0:	jle    433c20 <xmlStrEqual@plt+0x2fce0>
  433bf2:	mov    rax,QWORD PTR [rsp+0x2e8]
  433bfa:	xor    rax,QWORD PTR fs:0x28
  433c03:	jne    433de4 <xmlStrEqual@plt+0x2fea4>
  433c09:	add    rsp,0x2f8
  433c10:	pop    rbx
  433c11:	pop    rbp
  433c12:	pop    r12
  433c14:	pop    r13
  433c16:	pop    r14
  433c18:	pop    r15
  433c1a:	ret    
  433c1b:	nop    DWORD PTR [rax+rax*1+0x0]
  433c20:	xor    edi,edi
  433c22:	mov    BYTE PTR [rsp+0x50],0x0
  433c27:	mov    BYTE PTR [rsp+0x10],0x0
  433c2c:	mov    BYTE PTR [rsp+0x150],0x0
  433c34:	mov    r12,QWORD PTR [r13+0x8]
  433c38:	call   403b20 <time@plt>
  433c3d:	sub    rax,QWORD PTR [r13+0x10]
  433c41:	lea    rdi,[rsp+0x8]
  433c46:	mov    QWORD PTR [rsp+0x8],rax
  433c4b:	lea    r14,[rsp+0x50]
  433c50:	call   403ab0 <localtime@plt>
  433c55:	mov    rcx,rax
  433c58:	lea    rdx,[rip+0x1d826]        # 451485 <xmlStrEqual@plt+0x4d545>
  433c5f:	mov    esi,0x14
  433c64:	mov    rdi,r14
  433c67:	call   403ad0 <strftime@plt>
  433c6c:	mov    rax,QWORD PTR [r13+0x8]
  433c70:	lea    r15,[rsp+0x10]
  433c75:	imul   eax,DWORD PTR [rax+0x38],0x3c
  433c79:	sub    rax,QWORD PTR [rsp+0x8]
  433c7e:	mov    QWORD PTR [rsp],rax
  433c82:	test   rax,rax
  433c85:	jg     433dc0 <xmlStrEqual@plt+0x2fe80>
  433c8b:	lea    rbx,[rsp+0x150]
  433c93:	sub    rsp,0x8
  433c97:	push   r15
  433c99:	mov    edx,0x1
  433c9e:	mov    rdi,rbx
  433ca1:	xor    eax,eax
  433ca3:	mov    r9,r14
  433ca6:	lea    r8,[rip+0x1d813]        # 4514c0 <xmlStrEqual@plt+0x4d580>
  433cad:	mov    ecx,0x190
  433cb2:	mov    esi,0x190
  433cb7:	call   403a40 <__snprintf_chk@plt>
  433cbc:	pop    rax
  433cbd:	cmp    BYTE PTR [r13+0x0],0x2
  433cc2:	pop    rdx
  433cc3:	mov    rdi,rbx
  433cc6:	je     433d60 <xmlStrEqual@plt+0x2fe20>
  433ccc:	mov    edx,DWORD PTR [rdi]
  433cce:	add    rdi,0x4
  433cd2:	lea    eax,[rdx-0x1010101]
  433cd8:	andn   eax,edx,eax
  433cdd:	and    eax,0x80808080
  433ce2:	je     433ccc <xmlStrEqual@plt+0x2fd8c>
  433ce4:	mov    edx,eax
  433ce6:	shr    edx,0x10
  433ce9:	test   eax,0x8080
  433cee:	cmove  eax,edx
  433cf1:	lea    rdx,[rdi+0x2]
  433cf5:	cmove  rdi,rdx
  433cf9:	mov    ecx,eax
  433cfb:	add    cl,al
  433cfd:	sbb    rdi,0x3
  433d01:	sub    rdi,rbx
  433d04:	mov    esi,0x190
  433d09:	sub    rsi,rdi
  433d0c:	lea    rdx,[rip+0x1d78a]        # 45149d <xmlStrEqual@plt+0x4d55d>
  433d13:	add    rdi,rbx
  433d16:	xor    eax,eax
  433d18:	call   403de0 <snprintf@plt>
  433d1d:	cmp    ebp,0x4
  433d20:	jle    433d36 <xmlStrEqual@plt+0x2fdf6>
  433d22:	mov    rax,0x469e3c
  433d29:	mov    eax,DWORD PTR [rax]
  433d2b:	add    eax,0x4
  433d2e:	cmp    ebp,eax
  433d30:	jg     433bf2 <xmlStrEqual@plt+0x2fcb2>
  433d36:	mov    rdi,r12
  433d39:	call   42bfd0 <xmlStrEqual@plt+0x28090>
  433d3e:	mov    rcx,rax
  433d41:	mov    rdx,rbx
  433d44:	lea    rsi,[rip+0x1d76d]        # 4514b8 <xmlStrEqual@plt+0x4d578>
  433d4b:	mov    edi,ebp
  433d4d:	xor    eax,eax
  433d4f:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  433d54:	jmp    433bf2 <xmlStrEqual@plt+0x2fcb2>
  433d59:	nop    DWORD PTR [rax+0x0]
  433d60:	mov    edx,DWORD PTR [rdi]
  433d62:	add    rdi,0x4
  433d66:	lea    eax,[rdx-0x1010101]
  433d6c:	andn   eax,edx,eax
  433d71:	and    eax,0x80808080
  433d76:	je     433d60 <xmlStrEqual@plt+0x2fe20>
  433d78:	mov    edx,eax
  433d7a:	shr    edx,0x10
  433d7d:	test   eax,0x8080
  433d82:	cmove  eax,edx
  433d85:	lea    rdx,[rdi+0x2]
  433d89:	cmove  rdi,rdx
  433d8d:	mov    ecx,eax
  433d8f:	add    cl,al
  433d91:	sbb    rdi,0x3
  433d95:	sub    rdi,rbx
  433d98:	mov    esi,0x190
  433d9d:	sub    rsi,rdi
  433da0:	lea    rdx,[rip+0x1d6e7]        # 45148e <xmlStrEqual@plt+0x4d54e>
  433da7:	add    rdi,rbx
  433daa:	xor    eax,eax
  433dac:	call   403de0 <snprintf@plt>
  433db1:	jmp    433d1d <xmlStrEqual@plt+0x2fddd>
  433db6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  433dc0:	mov    rdi,rsp
  433dc3:	call   403ab0 <localtime@plt>
  433dc8:	mov    rcx,rax
  433dcb:	lea    rdx,[rip+0x1d6b3]        # 451485 <xmlStrEqual@plt+0x4d545>
  433dd2:	mov    esi,0x14
  433dd7:	mov    rdi,r15
  433dda:	call   403ad0 <strftime@plt>
  433ddf:	jmp    433c8b <xmlStrEqual@plt+0x2fd4b>
  433de4:	call   403c00 <__stack_chk_fail@plt>
  433de9:	nop    DWORD PTR [rax+0x0]
  433df0:	endbr64 
  433df4:	push   rbp
  433df5:	mov    rbp,rdi
  433df8:	mov    edi,0x18
  433dfd:	push   rbx
  433dfe:	sub    rsp,0x8
  433e02:	call   434fe0 <xmlStrEqual@plt+0x310a0>
  433e07:	xor    edi,edi
  433e09:	mov    rbx,rax
  433e0c:	call   403b20 <time@plt>
  433e11:	mov    QWORD PTR [rbx+0x10],rax
  433e15:	movzx  eax,BYTE PTR [rbp+0x0]
  433e19:	mov    BYTE PTR [rbx],al
  433e1b:	mov    rdi,QWORD PTR [rbp+0x8]
  433e1f:	call   42bf40 <xmlStrEqual@plt+0x28000>
  433e24:	mov    QWORD PTR [rbx+0x8],rax
  433e28:	mov    rax,QWORD PTR [rbp+0x10]
  433e2c:	mov    QWORD PTR [rbx+0x10],rax
  433e30:	add    rsp,0x8
  433e34:	mov    rax,rbx
  433e37:	pop    rbx
  433e38:	pop    rbp
  433e39:	ret    
  433e3a:	nop    WORD PTR [rax+rax*1+0x0]
  433e40:	endbr64 
  433e44:	push   rbx
  433e45:	mov    rax,0x475860
  433e4c:	mov    rbx,rdi
  433e4f:	mov    rdx,QWORD PTR [rax]
  433e52:	mov    rax,0x475858
  433e59:	mov    rsi,QWORD PTR [rax]
  433e5c:	call   43b8d0 <xmlStrEqual@plt+0x37990>
  433e61:	mov    rdi,QWORD PTR [rbx+0x10]
  433e65:	call   424bf0 <xmlStrEqual@plt+0x20cb0>
  433e6a:	mov    rdi,QWORD PTR [rbx]
  433e6d:	call   424bf0 <xmlStrEqual@plt+0x20cb0>
  433e72:	mov    rdi,QWORD PTR [rbx+0x18]
  433e76:	call   424bf0 <xmlStrEqual@plt+0x20cb0>
  433e7b:	mov    rdi,rbx
  433e7e:	pop    rbx
  433e7f:	jmp    4037b0 <free@plt>
  433e84:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  433e8f:	nop
  433e90:	endbr64 
  433e94:	push   r15
  433e96:	mov    edx,0x55555556
  433e9b:	push   r14
  433e9d:	push   r13
  433e9f:	push   r12
  433ea1:	push   rbp
  433ea2:	push   rbx
  433ea3:	lea    rbx,[rip+0x40056]        # 473f00 <xmlStrEqual@plt+0x6ffc0>
  433eaa:	sub    rsp,0x18
  433eae:	mov    eax,DWORD PTR [rip+0x40c04]        # 474ab8 <xmlStrEqual@plt+0x70b78>
  433eb4:	lea    ecx,[rax+0x1]
  433eb7:	mov    eax,ecx
  433eb9:	imul   edx
  433ebb:	mov    eax,ecx
  433ebd:	sar    eax,0x1f
  433ec0:	sub    edx,eax
  433ec2:	lea    eax,[rdx+rdx*2]
  433ec5:	sub    ecx,eax
  433ec7:	movsxd rax,ecx
  433eca:	mov    DWORD PTR [rip+0x40be8],eax        # 474ab8 <xmlStrEqual@plt+0x70b78>
  433ed0:	imul   rax,rax,0x3e8
  433ed7:	add    rax,rbx
  433eda:	mov    BYTE PTR [rax],0x0
  433edd:	test   rdi,rdi
  433ee0:	je     433fd0 <xmlStrEqual@plt+0x30090>
  433ee6:	movzx  r8d,BYTE PTR [rdi+0x31]
  433eeb:	mov    rbp,rdi
  433eee:	movzx  r15d,BYTE PTR [rdi+0x30]
  433ef3:	mov    rdi,QWORD PTR [rdi+0x18]
  433ef7:	mov    DWORD PTR [rsp+0xc],r8d
  433efc:	call   424d40 <xmlStrEqual@plt+0x20e00>
  433f01:	mov    rdi,QWORD PTR [rbp+0x0]
  433f05:	mov    r14,rax
  433f08:	movzx  r13d,WORD PTR [rbp+0x8]
  433f0d:	call   424d40 <xmlStrEqual@plt+0x20e00>
  433f12:	mov    rdi,QWORD PTR [rbp+0x10]
  433f16:	mov    r12,rax
  433f19:	call   424d40 <xmlStrEqual@plt+0x20e00>
  433f1e:	movsxd rcx,DWORD PTR [rip+0x40b93]        # 474ab8 <xmlStrEqual@plt+0x70b78>
  433f25:	mov    r8d,DWORD PTR [rsp+0xc]
  433f2a:	imul   rcx,rcx,0x3e8
  433f31:	mov    r9,rax
  433f34:	add    rcx,rbx
  433f37:	mov    rdi,rcx
  433f3a:	mov    eax,DWORD PTR [rdi]
  433f3c:	add    rdi,0x4
  433f40:	lea    edx,[rax-0x1010101]
  433f46:	andn   edx,eax,edx
  433f4b:	and    edx,0x80808080
  433f51:	je     433f3a <xmlStrEqual@plt+0x2fffa>
  433f53:	mov    eax,edx
  433f55:	shr    eax,0x10
  433f58:	test   edx,0x8080
  433f5e:	cmove  edx,eax
  433f61:	lea    rax,[rdi+0x2]
  433f65:	cmove  rdi,rax
  433f69:	mov    eax,edx
  433f6b:	add    al,dl
  433f6d:	sbb    rdi,0x3
  433f71:	sub    rsp,0x8
  433f75:	push   r8
  433f77:	sub    rdi,rcx
  433f7a:	mov    esi,0x3e8
  433f7f:	push   r15
  433f81:	sub    rsi,rdi
  433f84:	lea    r8,[rip+0x1d56d]        # 4514f8 <xmlStrEqual@plt+0x4d5b8>
  433f8b:	push   r14
  433f8d:	add    rdi,rcx
  433f90:	mov    edx,0x1
  433f95:	push   r13
  433f97:	mov    rcx,0xffffffffffffffff
  433f9e:	xor    eax,eax
  433fa0:	push   r12
  433fa2:	call   403a40 <__snprintf_chk@plt>
  433fa7:	movsxd rax,DWORD PTR [rip+0x40b0a]        # 474ab8 <xmlStrEqual@plt+0x70b78>
  433fae:	add    rsp,0x30
  433fb2:	imul   rax,rax,0x3e8
  433fb9:	add    rsp,0x18
  433fbd:	add    rax,rbx
  433fc0:	pop    rbx
  433fc1:	pop    rbp
  433fc2:	pop    r12
  433fc4:	pop    r13
  433fc6:	pop    r14
  433fc8:	pop    r15
  433fca:	ret    
  433fcb:	nop    DWORD PTR [rax+rax*1+0x0]
  433fd0:	mov    edx,0x5f4c
  433fd5:	mov    DWORD PTR [rax],0x4c554e5f
  433fdb:	mov    WORD PTR [rax+0x4],dx
  433fdf:	mov    BYTE PTR [rax+0x6],0x0
  433fe3:	add    rsp,0x18
  433fe7:	pop    rbx
  433fe8:	pop    rbp
  433fe9:	pop    r12
  433feb:	pop    r13
  433fed:	pop    r14
  433fef:	pop    r15
  433ff1:	ret    
  433ff2:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  433ffd:	nop    DWORD PTR [rax]
  434000:	endbr64 
  434004:	mov    edi,0x8
  434009:	jmp    434fe0 <xmlStrEqual@plt+0x310a0>
  43400e:	xchg   ax,ax
  434010:	endbr64 
  434014:	push   rbp
  434015:	mov    edi,0x8
  43401a:	push   rbx
  43401b:	sub    rsp,0x8
  43401f:	call   434fe0 <xmlStrEqual@plt+0x310a0>
  434024:	test   rax,rax
  434027:	je     434070 <xmlStrEqual@plt+0x30130>
  434029:	mov    edi,0x10
  43402e:	mov    rbx,rax
  434031:	call   434fe0 <xmlStrEqual@plt+0x310a0>
  434036:	mov    rbp,rax
  434039:	test   rax,rax
  43403c:	je     434070 <xmlStrEqual@plt+0x30130>
  43403e:	mov    QWORD PTR [rbx],rax
  434041:	mov    rdi,0x42e2b0
  434048:	call   43a0a0 <xmlStrEqual@plt+0x36160>
  43404d:	mov    QWORD PTR [rbp+0x0],rax
  434051:	xor    eax,eax
  434053:	call   42e530 <xmlStrEqual@plt+0x2a5f0>
  434058:	mov    QWORD PTR [rbp+0x8],rax
  43405c:	add    rsp,0x8
  434060:	mov    rax,rbx
  434063:	pop    rbx
  434064:	pop    rbp
  434065:	ret    
  434066:	nop    WORD PTR cs:[rax+rax*1+0x0]
  434070:	xor    ebx,ebx
  434072:	add    rsp,0x8
  434076:	mov    rax,rbx
  434079:	pop    rbx
  43407a:	pop    rbp
  43407b:	ret    
  43407c:	nop    DWORD PTR [rax+0x0]
  434080:	endbr64 
  434084:	test   rdi,rdi
  434087:	je     4340c0 <xmlStrEqual@plt+0x30180>
  434089:	push   rbx
  43408a:	mov    rbx,rdi
  43408d:	mov    rax,QWORD PTR [rdi]
  434090:	test   rax,rax
  434093:	je     4340b1 <xmlStrEqual@plt+0x30171>
  434095:	mov    rdi,QWORD PTR [rax]
  434098:	call   43add0 <xmlStrEqual@plt+0x36e90>
  43409d:	mov    rax,QWORD PTR [rbx]
  4340a0:	mov    rdi,QWORD PTR [rax+0x8]
  4340a4:	call   42ee20 <xmlStrEqual@plt+0x2aee0>
  4340a9:	mov    rdi,QWORD PTR [rbx]
  4340ac:	call   4037b0 <free@plt>
  4340b1:	mov    rdi,rbx
  4340b4:	pop    rbx
  4340b5:	jmp    4037b0 <free@plt>
  4340ba:	nop    WORD PTR [rax+rax*1+0x0]
  4340c0:	ret    
  4340c1:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4340cc:	nop    DWORD PTR [rax+0x0]
  4340d0:	endbr64 
  4340d4:	push   r15
  4340d6:	mov    r15,rcx
  4340d9:	push   r14
  4340db:	push   r13
  4340dd:	mov    r13d,edx
  4340e0:	push   r12
  4340e2:	mov    r12,r8
  4340e5:	push   rbp
  4340e6:	mov    ebp,r9d
  4340e9:	push   rbx
  4340ea:	sub    rsp,0x18
  4340ee:	mov    QWORD PTR [rsp],rdi
  4340f2:	mov    edi,0x38
  4340f7:	mov    QWORD PTR [rsp+0x8],rsi
  4340fc:	mov    ebx,DWORD PTR [rsp+0x50]
  434100:	call   434fe0 <xmlStrEqual@plt+0x310a0>
  434105:	mov    r14,rax
  434108:	test   rax,rax
  43410b:	je     43414f <xmlStrEqual@plt+0x3020f>
  43410d:	mov    rsi,QWORD PTR [rsp+0x8]
  434112:	mov    rdi,rsi
  434115:	call   425060 <xmlStrEqual@plt+0x21120>
  43411a:	mov    QWORD PTR [r14],rax
  43411d:	mov    rdi,r15
  434120:	call   425060 <xmlStrEqual@plt+0x21120>
  434125:	mov    QWORD PTR [r14+0x10],rax
  434129:	mov    rdi,QWORD PTR [rsp]
  43412d:	call   425060 <xmlStrEqual@plt+0x21120>
  434132:	mov    QWORD PTR [r14+0x18],rax
  434136:	mov    WORD PTR [r14+0x8],r13w
  43413b:	vmovdqu xmm0,XMMWORD PTR [r12]
  434141:	mov    BYTE PTR [r14+0x30],bpl
  434145:	mov    BYTE PTR [r14+0x31],bl
  434149:	vmovups XMMWORD PTR [r14+0x20],xmm0
  43414f:	add    rsp,0x18
  434153:	pop    rbx
  434154:	pop    rbp
  434155:	pop    r12
  434157:	pop    r13
  434159:	mov    rax,r14
  43415c:	pop    r14
  43415e:	pop    r15
  434160:	ret    
  434161:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  43416c:	nop    DWORD PTR [rax+0x0]
  434170:	endbr64 
  434174:	push   r15
  434176:	push   r14
  434178:	push   r13
  43417a:	push   r12
  43417c:	push   rbp
  43417d:	push   rbx
  43417e:	sub    rsp,0x58
  434182:	mov    rbp,QWORD PTR [rdi+0x30]
  434186:	mov    rdi,QWORD PTR [rsp+0x90]
  43418e:	mov    QWORD PTR [rsp],rsi
  434192:	mov    QWORD PTR [rsp+0x38],rdx
  434197:	mov    QWORD PTR [rsp+0x40],rcx
  43419c:	mov    DWORD PTR [rsp+0x4c],r8d
  4341a1:	mov    QWORD PTR [rsp+0x10],r9
  4341a6:	mov    WORD PTR [rsp+0x4a],r8w
  4341ac:	call   43bc20 <xmlStrEqual@plt+0x37ce0>
  4341b1:	mov    rdx,QWORD PTR [rbp+0x0]
  4341b5:	mov    rsi,rax
  4341b8:	mov    rdi,QWORD PTR [rdx]
  4341bb:	call   43aca0 <xmlStrEqual@plt+0x36d60>
  4341c0:	mov    rbx,rax
  4341c3:	test   rax,rax
  4341c6:	je     434490 <xmlStrEqual@plt+0x30550>
  4341cc:	call   42dc90 <xmlStrEqual@plt+0x29d50>
  4341d1:	mov    QWORD PTR [rsp+0x8],rax
  4341d6:	mov    rax,QWORD PTR [rsp]
  4341da:	mov    rax,QWORD PTR [rax+0x28]
  4341de:	mov    r12,QWORD PTR [rax+0x8]
  4341e2:	cmp    rax,r12
  4341e5:	je     434325 <xmlStrEqual@plt+0x303e5>
  4341eb:	mov    QWORD PTR [rsp+0x30],0x0
  4341f4:	mov    QWORD PTR [rsp+0x28],rbx
  4341f9:	jmp    434213 <xmlStrEqual@plt+0x302d3>
  4341fb:	nop    DWORD PTR [rax+rax*1+0x0]
  434200:	mov    r12,QWORD PTR [r12+0x8]
  434205:	mov    rax,QWORD PTR [rsp]
  434209:	cmp    QWORD PTR [rax+0x28],r12
  43420d:	je     43430b <xmlStrEqual@plt+0x303cb>
  434213:	mov    rbp,QWORD PTR [r12+0x10]
  434218:	mov    r10d,DWORD PTR [rbp+0x18]
  43421c:	test   r10d,r10d
  43421f:	je     434200 <xmlStrEqual@plt+0x302c0>
  434221:	mov    r15,QWORD PTR [rbp+0x8]
  434225:	mov    rax,QWORD PTR [r15+0x10]
  434229:	mov    rdx,QWORD PTR [rax]
  43422c:	mov    r9d,DWORD PTR [rdx+0x18]
  434230:	test   r9d,r9d
  434233:	je     434200 <xmlStrEqual@plt+0x302c0>
  434235:	cmp    r15,rbp
  434238:	je     434200 <xmlStrEqual@plt+0x302c0>
  43423a:	mov    QWORD PTR [rsp+0x20],r12
  43423f:	mov    r13,QWORD PTR [rsp+0x28]
  434244:	mov    r12,rax
  434247:	jmp    434261 <xmlStrEqual@plt+0x30321>
  434249:	nop    DWORD PTR [rax+0x0]
  434250:	mov    r15,QWORD PTR [r15+0x8]
  434254:	cmp    r15,rbp
  434257:	je     4342f0 <xmlStrEqual@plt+0x303b0>
  43425d:	mov    r12,QWORD PTR [r15+0x10]
  434261:	cmp    BYTE PTR [r12+0xa],0x0
  434267:	jne    434250 <xmlStrEqual@plt+0x30310>
  434269:	mov    rsi,QWORD PTR [rsp+0x10]
  43426e:	mov    rdi,QWORD PTR [r12]
  434272:	call   425310 <xmlStrEqual@plt+0x213d0>
  434277:	test   eax,eax
  434279:	jne    4343a0 <xmlStrEqual@plt+0x30460>
  43427f:	mov    rbx,QWORD PTR [r13+0x8]
  434283:	mov    QWORD PTR [rsp+0x18],r12
  434288:	cmp    r13,rbx
  43428b:	jne    4342a5 <xmlStrEqual@plt+0x30365>
  43428d:	jmp    4343cc <xmlStrEqual@plt+0x3048c>
  434292:	nop    WORD PTR [rax+rax*1+0x0]
  434298:	mov    rbx,QWORD PTR [rbx+0x8]
  43429c:	cmp    r13,rbx
  43429f:	je     4343c0 <xmlStrEqual@plt+0x30480>
  4342a5:	mov    r14,QWORD PTR [rbx+0x10]
  4342a9:	mov    rdi,QWORD PTR [r12]
  4342ad:	mov    rsi,QWORD PTR [r14+0x10]
  4342b1:	call   425310 <xmlStrEqual@plt+0x213d0>
  4342b6:	test   eax,eax
  4342b8:	jne    434298 <xmlStrEqual@plt+0x30358>
  4342ba:	movzx  eax,BYTE PTR [r12+0xb]
  4342c0:	mov    rsi,QWORD PTR [rsp+0x8]
  4342c5:	mov    BYTE PTR [r14+0x30],al
  4342c9:	mov    rdi,r14
  4342cc:	movzx  eax,BYTE PTR [r12+0xc]
  4342d2:	mov    BYTE PTR [r14+0x31],al
  4342d6:	call   42dcf0 <xmlStrEqual@plt+0x29db0>
  4342db:	mov    r15,QWORD PTR [r15+0x8]
  4342df:	cmp    r15,rbp
  4342e2:	jne    43425d <xmlStrEqual@plt+0x3031d>
  4342e8:	nop    DWORD PTR [rax+rax*1+0x0]
  4342f0:	mov    r14,r12
  4342f3:	mov    r12,QWORD PTR [rsp+0x20]
  4342f8:	mov    rax,QWORD PTR [rsp]
  4342fc:	mov    r12,QWORD PTR [r12+0x8]
  434301:	cmp    QWORD PTR [rax+0x28],r12
  434305:	jne    434213 <xmlStrEqual@plt+0x302d3>
  43430b:	mov    rax,QWORD PTR [rsp+0x30]
  434310:	mov    rbx,QWORD PTR [rsp+0x28]
  434315:	test   rax,rax
  434318:	je     434325 <xmlStrEqual@plt+0x303e5>
  43431a:	mov    rsi,rbx
  43431d:	mov    rdi,rax
  434320:	call   42dcf0 <xmlStrEqual@plt+0x29db0>
  434325:	mov    rax,QWORD PTR [rsp+0x8]
  43432a:	mov    rbp,QWORD PTR [rbx+0x8]
  43432e:	mov    esi,DWORD PTR [rax+0x18]
  434331:	test   esi,esi
  434333:	jne    434450 <xmlStrEqual@plt+0x30510>
  434339:	mov    r13,QWORD PTR [rsp+0x10]
  43433e:	cmp    rbx,rbp
  434341:	jne    43435d <xmlStrEqual@plt+0x3041d>
  434343:	jmp    4344fa <xmlStrEqual@plt+0x305ba>
  434348:	nop    DWORD PTR [rax+rax*1+0x0]
  434350:	mov    rbp,QWORD PTR [rbp+0x8]
  434354:	cmp    rbx,rbp
  434357:	je     4344fa <xmlStrEqual@plt+0x305ba>
  43435d:	mov    r12,QWORD PTR [rbp+0x10]
  434361:	mov    rdi,r13
  434364:	mov    rsi,QWORD PTR [r12+0x10]
  434369:	call   425310 <xmlStrEqual@plt+0x213d0>
  43436e:	test   eax,eax
  434370:	jne    434350 <xmlStrEqual@plt+0x30410>
  434372:	mov    eax,0x6401
  434377:	mov    WORD PTR [r12+0x30],ax
  43437d:	mov    rdi,QWORD PTR [rsp+0x8]
  434382:	call   42e2b0 <xmlStrEqual@plt+0x2a370>
  434387:	add    rsp,0x58
  43438b:	pop    rbx
  43438c:	pop    rbp
  43438d:	pop    r12
  43438f:	pop    r13
  434391:	pop    r14
  434393:	mov    eax,0x1
  434398:	pop    r15
  43439a:	ret    
  43439b:	nop    DWORD PTR [rax+rax*1+0x0]
  4343a0:	mov    rbx,QWORD PTR [r13+0x8]
  4343a4:	mov    QWORD PTR [rsp+0x18],0x0
  4343ad:	cmp    r13,rbx
  4343b0:	jne    4342a5 <xmlStrEqual@plt+0x30365>
  4343b6:	jmp    434250 <xmlStrEqual@plt+0x30310>
  4343bb:	nop    DWORD PTR [rax+rax*1+0x0]
  4343c0:	cmp    QWORD PTR [rsp+0x18],0x0
  4343c6:	je     434250 <xmlStrEqual@plt+0x30310>
  4343cc:	movzx  eax,BYTE PTR [r12+0xc]
  4343d2:	sub    rsp,0x8
  4343d6:	movzx  r9d,BYTE PTR [r12+0xb]
  4343dc:	push   rax
  4343dd:	mov    r8,QWORD PTR [rsp+0xa0]
  4343e5:	mov    rcx,QWORD PTR [rsp+0x20]
  4343ea:	movzx  edx,WORD PTR [rsp+0x5a]
  4343ef:	mov    rsi,QWORD PTR [rsp+0x50]
  4343f4:	mov    rdi,QWORD PTR [rsp+0x48]
  4343f9:	call   4340d0 <xmlStrEqual@plt+0x30190>
  4343fe:	mov    rsi,QWORD PTR [rsp+0x18]
  434403:	mov    rdi,rax
  434406:	mov    QWORD PTR [rsp+0x40],rax
  43440b:	call   42dcf0 <xmlStrEqual@plt+0x29db0>
  434410:	mov    rax,0x469e3c
  434417:	pop    rdi
  434418:	cmp    DWORD PTR [rax],0x1
  43441b:	pop    r8
  43441d:	jle    434250 <xmlStrEqual@plt+0x30310>
  434423:	mov    rdi,QWORD PTR [rsp+0x30]
  434428:	call   433e90 <xmlStrEqual@plt+0x2ff50>
  43442d:	mov    rdx,rax
  434430:	lea    rsi,[rip+0x1d151]        # 451588 <xmlStrEqual@plt+0x4d648>
  434437:	mov    edi,0x6
  43443c:	xor    eax,eax
  43443e:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  434443:	jmp    434250 <xmlStrEqual@plt+0x30310>
  434448:	nop    DWORD PTR [rax+rax*1+0x0]
  434450:	mov    r13,QWORD PTR [rsp+0x8]
  434455:	cmp    rbx,rbp
  434458:	jne    43446c <xmlStrEqual@plt+0x3052c>
  43445a:	jmp    43437d <xmlStrEqual@plt+0x3043d>
  43445f:	nop
  434460:	mov    rbp,r12
  434463:	cmp    rbx,r12
  434466:	je     43437d <xmlStrEqual@plt+0x3043d>
  43446c:	mov    r12,QWORD PTR [rbp+0x8]
  434470:	mov    rbp,QWORD PTR [rbp+0x10]
  434474:	mov    rsi,r13
  434477:	mov    rdi,rbp
  43447a:	call   42ded0 <xmlStrEqual@plt+0x29f90>
  43447f:	test   al,al
  434481:	jne    434460 <xmlStrEqual@plt+0x30520>
  434483:	mov    rsi,rbx
  434486:	mov    rdi,rbp
  434489:	call   42e170 <xmlStrEqual@plt+0x2a230>
  43448e:	jmp    434460 <xmlStrEqual@plt+0x30520>
  434490:	mov    rax,0x469e3c
  434497:	cmp    DWORD PTR [rax],0x2
  43449a:	jg     43456d <xmlStrEqual@plt+0x3062d>
  4344a0:	mov    rdi,0x433e40
  4344a7:	call   42dca0 <xmlStrEqual@plt+0x29d60>
  4344ac:	mov    rdi,QWORD PTR [rsp+0x90]
  4344b4:	mov    rbx,rax
  4344b7:	call   43bc20 <xmlStrEqual@plt+0x37ce0>
  4344bc:	mov    rdi,rax
  4344bf:	call   403ed0 <strdup@plt>
  4344c4:	mov    rcx,QWORD PTR [rbp+0x0]
  4344c8:	mov    rdx,rbx
  4344cb:	mov    rdi,QWORD PTR [rcx]
  4344ce:	mov    rsi,rax
  4344d1:	call   43a0e0 <xmlStrEqual@plt+0x361a0>
  4344d6:	mov    rdi,QWORD PTR [rsp+0x90]
  4344de:	call   43bc20 <xmlStrEqual@plt+0x37ce0>
  4344e3:	mov    rdx,QWORD PTR [rbp+0x0]
  4344e7:	mov    rsi,rax
  4344ea:	mov    rdi,QWORD PTR [rdx]
  4344ed:	call   43aca0 <xmlStrEqual@plt+0x36d60>
  4344f2:	mov    rbx,rax
  4344f5:	jmp    4341cc <xmlStrEqual@plt+0x3028c>
  4344fa:	movzx  eax,BYTE PTR [r14+0xc]
  4344ff:	sub    rsp,0x8
  434503:	movzx  r9d,BYTE PTR [r14+0xb]
  434508:	push   rax
  434509:	mov    r8,QWORD PTR [rsp+0xa0]
  434511:	mov    rcx,QWORD PTR [rsp+0x20]
  434516:	movzx  edx,WORD PTR [rsp+0x5c]
  43451b:	mov    rsi,QWORD PTR [rsp+0x50]
  434520:	mov    rdi,QWORD PTR [rsp+0x48]
  434525:	call   4340d0 <xmlStrEqual@plt+0x30190>
  43452a:	mov    rdi,rax
  43452d:	mov    rsi,rbx
  434530:	mov    rbp,rax
  434533:	call   42dcf0 <xmlStrEqual@plt+0x29db0>
  434538:	mov    rax,0x469e3c
  43453f:	pop    rdx
  434540:	cmp    DWORD PTR [rax],0x1
  434543:	pop    rcx
  434544:	jle    43437d <xmlStrEqual@plt+0x3043d>
  43454a:	mov    rdi,rbp
  43454d:	call   433e90 <xmlStrEqual@plt+0x2ff50>
  434552:	mov    rdx,rax
  434555:	lea    rsi,[rip+0x1d05c]        # 4515b8 <xmlStrEqual@plt+0x4d678>
  43455c:	mov    edi,0x6
  434561:	xor    eax,eax
  434563:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  434568:	jmp    43437d <xmlStrEqual@plt+0x3043d>
  43456d:	mov    rdi,QWORD PTR [rsp]
  434571:	call   424d40 <xmlStrEqual@plt+0x20e00>
  434576:	mov    rdi,QWORD PTR [rsp+0x90]
  43457e:	mov    rbx,rax
  434581:	call   43bc20 <xmlStrEqual@plt+0x37ce0>
  434586:	mov    rdx,rax
  434589:	mov    rcx,rbx
  43458c:	lea    rsi,[rip+0x1cfb5]        # 451548 <xmlStrEqual@plt+0x4d608>
  434593:	mov    edi,0x7
  434598:	xor    eax,eax
  43459a:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  43459f:	jmp    4344a0 <xmlStrEqual@plt+0x30560>
  4345a4:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4345af:	nop
  4345b0:	endbr64 
  4345b4:	push   r15
  4345b6:	mov    r15,rdx
  4345b9:	push   r14
  4345bb:	mov    r14,rdi
  4345be:	push   r13
  4345c0:	mov    r13d,r8d
  4345c3:	push   r12
  4345c5:	push   rbp
  4345c6:	push   rbx
  4345c7:	mov    rbx,rcx
  4345ca:	sub    rsp,0x38
  4345ce:	mov    rax,QWORD PTR [rdi+0x30]
  4345d2:	mov    QWORD PTR [rsp+0x28],rdi
  4345d7:	mov    QWORD PTR [rsp+0x18],rax
  4345dc:	mov    rax,QWORD PTR [rdi+0x8]
  4345e0:	mov    QWORD PTR [rsp+0x8],rsi
  4345e5:	mov    rdi,rax
  4345e8:	mov    QWORD PTR [rsp],r9
  4345ec:	mov    QWORD PTR [rsp+0x20],rax
  4345f1:	call   42b270 <xmlStrEqual@plt+0x27330>
  4345f6:	mov    rbp,rax
  4345f9:	xor    eax,eax
  4345fb:	call   42e530 <xmlStrEqual@plt+0x2a5f0>
  434600:	sub    rsp,0x8
  434604:	push   QWORD PTR [rsp+0x78]
  434608:	mov    rcx,rbx
  43460b:	movzx  r8d,r13w
  43460f:	mov    r9,QWORD PTR [rsp+0x10]
  434614:	mov    rsi,QWORD PTR [rsp+0x18]
  434619:	mov    rdx,r15
  43461c:	mov    rdi,r14
  43461f:	mov    r12,rax
  434622:	call   434170 <xmlStrEqual@plt+0x30230>
  434627:	mov    DWORD PTR [rsp+0x24],eax
  43462b:	pop    rcx
  43462c:	pop    rsi
  43462d:	cmp    eax,0x1
  434630:	je     434650 <xmlStrEqual@plt+0x30710>
  434632:	mov    DWORD PTR [rsp+0x14],0x0
  43463a:	mov    eax,DWORD PTR [rsp+0x14]
  43463e:	add    rsp,0x38
  434642:	pop    rbx
  434643:	pop    rbp
  434644:	pop    r12
  434646:	pop    r13
  434648:	pop    r14
  43464a:	pop    r15
  43464c:	ret    
  43464d:	nop    DWORD PTR [rax]
  434650:	mov    rax,QWORD PTR [rsp+0x18]
  434655:	mov    rax,QWORD PTR [rax]
  434658:	mov    rdi,QWORD PTR [rax]
  43465b:	call   43af10 <xmlStrEqual@plt+0x36fd0>
  434660:	mov    rcx,QWORD PTR [rax+0x8]
  434664:	mov    QWORD PTR [rsp+0x8],rax
  434669:	mov    QWORD PTR [rsp],rcx
  43466d:	cmp    rax,rcx
  434670:	je     4346fc <xmlStrEqual@plt+0x307bc>
  434676:	nop    WORD PTR cs:[rax+rax*1+0x0]
  434680:	mov    rax,QWORD PTR [rsp]
  434684:	mov    r13,QWORD PTR [rax+0x10]
  434688:	mov    r15,QWORD PTR [r13+0x8]
  43468c:	cmp    r15,r13
  43468f:	je     4346e9 <xmlStrEqual@plt+0x307a9>
  434691:	nop    DWORD PTR [rax+0x0]
  434698:	mov    rbx,QWORD PTR [r15+0x10]
  43469c:	mov    ecx,0x1
  4346a1:	movzx  r9d,BYTE PTR [rbx+0x31]
  4346a6:	movzx  r8d,BYTE PTR [rbx+0x30]
  4346ab:	mov    rdi,QWORD PTR [rbx+0x10]
  4346af:	push   0x0
  4346b1:	xor    edx,edx
  4346b3:	mov    esi,0x1
  4346b8:	push   0xff
  4346bd:	call   42a830 <xmlStrEqual@plt+0x268f0>
  4346c2:	mov    r14,rax
  4346c5:	mov    rsi,rax
  4346c8:	mov    rdi,rbp
  4346cb:	call   42b7b0 <xmlStrEqual@plt+0x27870>
  4346d0:	mov    rdx,rbx
  4346d3:	mov    rsi,r14
  4346d6:	mov    rdi,r12
  4346d9:	call   42e5a0 <xmlStrEqual@plt+0x2a660>
  4346de:	mov    r15,QWORD PTR [r15+0x8]
  4346e2:	pop    rax
  4346e3:	pop    rdx
  4346e4:	cmp    r15,r13
  4346e7:	jne    434698 <xmlStrEqual@plt+0x30758>
  4346e9:	mov    rax,QWORD PTR [rsp]
  4346ed:	mov    rax,QWORD PTR [rax+0x8]
  4346f1:	mov    QWORD PTR [rsp],rax
  4346f5:	cmp    QWORD PTR [rsp+0x8],rax
  4346fa:	jne    434680 <xmlStrEqual@plt+0x30740>
  4346fc:	mov    rdi,QWORD PTR [rsp+0x8]
  434701:	call   42e2b0 <xmlStrEqual@plt+0x2a370>
  434706:	mov    rsi,QWORD PTR [rsp+0x20]
  43470b:	mov    rdi,rbp
  43470e:	call   42b150 <xmlStrEqual@plt+0x27210>
  434713:	test   eax,eax
  434715:	jne    43474d <xmlStrEqual@plt+0x3080d>
  434717:	mov    rax,0x469e3c
  43471e:	cmp    DWORD PTR [rax],0x1
  434721:	jg     434738 <xmlStrEqual@plt+0x307f8>
  434723:	mov    rdi,rbp
  434726:	call   42b110 <xmlStrEqual@plt+0x271d0>
  43472b:	mov    rdi,r12
  43472e:	call   42ee20 <xmlStrEqual@plt+0x2aee0>
  434733:	jmp    43463a <xmlStrEqual@plt+0x306fa>
  434738:	lea    rsi,[rip+0x1cf41]        # 451680 <xmlStrEqual@plt+0x4d740>
  43473f:	mov    edi,0x6
  434744:	xor    eax,eax
  434746:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  43474b:	jmp    434723 <xmlStrEqual@plt+0x307e3>
  43474d:	mov    rbx,QWORD PTR [rsp+0x18]
  434752:	mov    rax,QWORD PTR [rbx]
  434755:	mov    rdi,QWORD PTR [rax+0x8]
  434759:	call   42ee20 <xmlStrEqual@plt+0x2aee0>
  43475e:	mov    rdi,QWORD PTR [rsp+0x20]
  434763:	call   42b110 <xmlStrEqual@plt+0x271d0>
  434768:	mov    rax,QWORD PTR [rsp+0x28]
  43476d:	mov    QWORD PTR [rax+0x8],rbp
  434771:	mov    rax,QWORD PTR [rbx]
  434774:	mov    QWORD PTR [rax+0x8],r12
  434778:	mov    r12,0x469e3c
  43477f:	cmp    DWORD PTR [r12],0x1
  434784:	jle    4347ac <xmlStrEqual@plt+0x3086c>
  434786:	mov    rdi,rbp
  434789:	call   424d40 <xmlStrEqual@plt+0x20e00>
  43478e:	mov    rdx,rax
  434791:	lea    rsi,[rip+0x1ce50]        # 4515e8 <xmlStrEqual@plt+0x4d6a8>
  434798:	xor    eax,eax
  43479a:	mov    edi,0x6
  43479f:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  4347a4:	mov    rax,QWORD PTR [rsp+0x18]
  4347a9:	mov    rax,QWORD PTR [rax]
  4347ac:	mov    rdi,QWORD PTR [rax]
  4347af:	call   43aea0 <xmlStrEqual@plt+0x36f60>
  4347b4:	mov    r15,QWORD PTR [rax+0x8]
  4347b8:	mov    rbx,rax
  4347bb:	cmp    rax,r15
  4347be:	je     43481c <xmlStrEqual@plt+0x308dc>
  4347c0:	mov    QWORD PTR [rsp],rbp
  4347c4:	mov    r13,0x433e90
  4347cb:	mov    r14,QWORD PTR [rsp+0x18]
  4347d0:	cmp    DWORD PTR [r12],0x1
  4347d5:	mov    rbp,QWORD PTR [r15+0x10]
  4347d9:	jle    4347f1 <xmlStrEqual@plt+0x308b1>
  4347db:	mov    rdx,rbp
  4347de:	lea    rsi,[rip+0x1ce3b]        # 451620 <xmlStrEqual@plt+0x4d6e0>
  4347e5:	mov    edi,0x6
  4347ea:	xor    eax,eax
  4347ec:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  4347f1:	mov    rax,QWORD PTR [r14]
  4347f4:	mov    rsi,rbp
  4347f7:	mov    rdi,QWORD PTR [rax]
  4347fa:	call   43aca0 <xmlStrEqual@plt+0x36d60>
  4347ff:	mov    rdi,rax
  434802:	mov    edx,0x6
  434807:	mov    rsi,r13
  43480a:	call   42dfc0 <xmlStrEqual@plt+0x2a080>
  43480f:	mov    r15,QWORD PTR [r15+0x8]
  434813:	cmp    rbx,r15
  434816:	jne    4347d0 <xmlStrEqual@plt+0x30890>
  434818:	mov    rbp,QWORD PTR [rsp]
  43481c:	mov    rdi,rbx
  43481f:	call   42e2b0 <xmlStrEqual@plt+0x2a370>
  434824:	cmp    DWORD PTR [r12],0x1
  434829:	jle    434849 <xmlStrEqual@plt+0x30909>
  43482b:	mov    rdi,rbp
  43482e:	call   42b300 <xmlStrEqual@plt+0x273c0>
  434833:	mov    rdx,rax
  434836:	lea    rsi,[rip+0x1ce0b]        # 451648 <xmlStrEqual@plt+0x4d708>
  43483d:	mov    edi,0x6
  434842:	xor    eax,eax
  434844:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  434849:	mov    DWORD PTR [rsp+0x14],0x2
  434851:	jmp    43463a <xmlStrEqual@plt+0x306fa>
  434856:	nop    WORD PTR cs:[rax+rax*1+0x0]
  434860:	endbr64 
  434864:	push   r15
  434866:	push   r14
  434868:	lea    r14,[rsi+0x20]
  43486c:	push   r13
  43486e:	mov    r13,rsi
  434871:	push   r12
  434873:	push   rbp
  434874:	push   rbx
  434875:	sub    rsp,0x18
  434879:	mov    rax,QWORD PTR [rdi+0x8]
  43487d:	mov    r15,QWORD PTR [rdi+0x30]
  434881:	mov    QWORD PTR [rsp+0x8],rax
  434886:	mov    rax,0x469e3c
  43488d:	cmp    DWORD PTR [rax],0x1
  434890:	jle    4348cf <xmlStrEqual@plt+0x3098f>
  434892:	mov    rdi,QWORD PTR [rsp+0x8]
  434897:	call   424d40 <xmlStrEqual@plt+0x20e00>
  43489c:	mov    rdi,QWORD PTR [r13+0x10]
  4348a0:	mov    rbp,rax
  4348a3:	call   424d40 <xmlStrEqual@plt+0x20e00>
  4348a8:	mov    rdi,r14
  4348ab:	mov    rbx,rax
  4348ae:	call   43bc20 <xmlStrEqual@plt+0x37ce0>
  4348b3:	mov    rdx,rax
  4348b6:	mov    r8,rbp
  4348b9:	mov    rcx,rbx
  4348bc:	lea    rsi,[rip+0x1cdf5]        # 4516b8 <xmlStrEqual@plt+0x4d778>
  4348c3:	mov    edi,0x6
  4348c8:	xor    eax,eax
  4348ca:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  4348cf:	mov    rax,QWORD PTR [r15]
  4348d2:	mov    rdi,QWORD PTR [rax+0x8]
  4348d6:	call   42eec0 <xmlStrEqual@plt+0x2af80>
  4348db:	mov    rbx,QWORD PTR [rax+0x8]
  4348df:	mov    r12,rax
  4348e2:	cmp    rax,rbx
  4348e5:	jne    4348f9 <xmlStrEqual@plt+0x309b9>
  4348e7:	jmp    434935 <xmlStrEqual@plt+0x309f5>
  4348e9:	nop    DWORD PTR [rax+0x0]
  4348f0:	mov    rbx,QWORD PTR [rbx+0x8]
  4348f4:	cmp    r12,rbx
  4348f7:	je     434935 <xmlStrEqual@plt+0x309f5>
  4348f9:	mov    rax,QWORD PTR [r15]
  4348fc:	mov    rbp,QWORD PTR [rbx+0x10]
  434900:	mov    rdi,QWORD PTR [rax+0x8]
  434904:	mov    rsi,rbp
  434907:	call   42ed70 <xmlStrEqual@plt+0x2ae30>
  43490c:	cmp    rax,r13
  43490f:	jne    4348f0 <xmlStrEqual@plt+0x309b0>
  434911:	mov    rax,QWORD PTR [r15]
  434914:	mov    rsi,rbp
  434917:	mov    rdi,QWORD PTR [rax+0x8]
  43491b:	call   42eca0 <xmlStrEqual@plt+0x2ad60>
  434920:	mov    rdi,QWORD PTR [rsp+0x8]
  434925:	mov    rsi,rbp
  434928:	call   42b680 <xmlStrEqual@plt+0x27740>
  43492d:	mov    rdi,rbp
  434930:	call   42a7f0 <xmlStrEqual@plt+0x268b0>
  434935:	mov    rdi,r12
  434938:	call   42e2b0 <xmlStrEqual@plt+0x2a370>
  43493d:	mov    rdi,r14
  434940:	call   43bc20 <xmlStrEqual@plt+0x37ce0>
  434945:	mov    rdx,QWORD PTR [r15]
  434948:	mov    rsi,rax
  43494b:	mov    rdi,QWORD PTR [rdx]
  43494e:	call   43aca0 <xmlStrEqual@plt+0x36d60>
  434953:	mov    rsi,rax
  434956:	mov    rdi,r13
  434959:	call   42e210 <xmlStrEqual@plt+0x2a2d0>
  43495e:	add    rsp,0x18
  434962:	pop    rbx
  434963:	pop    rbp
  434964:	pop    r12
  434966:	pop    r13
  434968:	pop    r14
  43496a:	mov    eax,0x1
  43496f:	pop    r15
  434971:	ret    
  434972:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  43497d:	nop    DWORD PTR [rax]
  434980:	endbr64 
  434984:	push   r14
  434986:	mov    r14,rsi
  434989:	push   r13
  43498b:	mov    r13,rdx
  43498e:	push   r12
  434990:	push   rbp
  434991:	push   rbx
  434992:	mov    rbx,QWORD PTR [rdi+0x30]
  434996:	mov    rdi,rsi
  434999:	call   43bc20 <xmlStrEqual@plt+0x37ce0>
  43499e:	mov    rdx,QWORD PTR [rbx]
  4349a1:	mov    rsi,rax
  4349a4:	mov    rdi,QWORD PTR [rdx]
  4349a7:	call   43aca0 <xmlStrEqual@plt+0x36d60>
  4349ac:	test   rax,rax
  4349af:	je     4349f0 <xmlStrEqual@plt+0x30ab0>
  4349b1:	mov    rbx,QWORD PTR [rax+0x8]
  4349b5:	mov    r12,rax
  4349b8:	cmp    rax,rbx
  4349bb:	jne    4349c9 <xmlStrEqual@plt+0x30a89>
  4349bd:	jmp    4349f0 <xmlStrEqual@plt+0x30ab0>
  4349bf:	nop
  4349c0:	mov    rbx,QWORD PTR [rbx+0x8]
  4349c4:	cmp    r12,rbx
  4349c7:	je     4349f0 <xmlStrEqual@plt+0x30ab0>
  4349c9:	mov    rbp,QWORD PTR [rbx+0x10]
  4349cd:	mov    rsi,r13
  4349d0:	mov    rdi,QWORD PTR [rbp+0x10]
  4349d4:	call   425310 <xmlStrEqual@plt+0x213d0>
  4349d9:	test   eax,eax
  4349db:	jne    4349c0 <xmlStrEqual@plt+0x30a80>
  4349dd:	pop    rbx
  4349de:	mov    rax,rbp
  4349e1:	pop    rbp
  4349e2:	pop    r12
  4349e4:	pop    r13
  4349e6:	pop    r14
  4349e8:	ret    
  4349e9:	nop    DWORD PTR [rax+0x0]
  4349f0:	mov    rax,0x469e3c
  4349f7:	xor    ebp,ebp
  4349f9:	cmp    DWORD PTR [rax],0x1
  4349fc:	jle    4349dd <xmlStrEqual@plt+0x30a9d>
  4349fe:	mov    rdi,r14
  434a01:	call   43bc20 <xmlStrEqual@plt+0x37ce0>
  434a06:	mov    rdi,r13
  434a09:	mov    rbx,rax
  434a0c:	call   424d40 <xmlStrEqual@plt+0x20e00>
  434a11:	mov    rdx,rax
  434a14:	mov    rcx,rbx
  434a17:	xor    eax,eax
  434a19:	lea    rsi,[rip+0x1ccf8]        # 451718 <xmlStrEqual@plt+0x4d7d8>
  434a20:	mov    edi,0x6
  434a25:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  434a2a:	pop    rbx
  434a2b:	mov    rax,rbp
  434a2e:	pop    rbp
  434a2f:	pop    r12
  434a31:	pop    r13
  434a33:	pop    r14
  434a35:	ret    
  434a36:	nop    WORD PTR cs:[rax+rax*1+0x0]
  434a40:	endbr64 
  434a44:	mov    rax,QWORD PTR [rdi]
  434a47:	ret    
  434a48:	nop    DWORD PTR [rax+rax*1+0x0]
  434a50:	endbr64 
  434a54:	mov    QWORD PTR [rdi],rsi
  434a57:	ret    
  434a58:	nop    DWORD PTR [rax+rax*1+0x0]
  434a60:	endbr64 
  434a64:	mov    rax,QWORD PTR [rdi+0x8]
  434a68:	ret    
  434a69:	nop    DWORD PTR [rax+0x0]
  434a70:	endbr64 
  434a74:	push   rbx
  434a75:	mov    rbx,rdi
  434a78:	sub    rsp,0x10
  434a7c:	mov    QWORD PTR [rdi+0x8],rsi
  434a80:	test   rdx,rdx
  434a83:	je     434a90 <xmlStrEqual@plt+0x30b50>
  434a85:	mov    QWORD PTR [rbx+0x10],rdx
  434a89:	add    rsp,0x10
  434a8d:	pop    rbx
  434a8e:	ret    
  434a8f:	nop
  434a90:	mov    rax,0x469e3c
  434a97:	mov    eax,DWORD PTR [rax]
  434a99:	test   eax,eax
  434a9b:	jle    434a85 <xmlStrEqual@plt+0x30b45>
  434a9d:	lea    rsi,[rip+0x1ccac]        # 451750 <xmlStrEqual@plt+0x4d810>
  434aa4:	mov    edi,0x5
  434aa9:	xor    eax,eax
  434aab:	mov    QWORD PTR [rsp+0x8],rdx
  434ab0:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  434ab5:	mov    rdx,QWORD PTR [rsp+0x8]
  434aba:	mov    QWORD PTR [rbx+0x10],rdx
  434abe:	add    rsp,0x10
  434ac2:	pop    rbx
  434ac3:	ret    
  434ac4:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  434acf:	nop
  434ad0:	endbr64 
  434ad4:	mov    rax,QWORD PTR [rdi]
  434ad7:	ret    
  434ad8:	nop    DWORD PTR [rax+rax*1+0x0]
  434ae0:	endbr64 
  434ae4:	mov    edi,0x20
  434ae9:	jmp    434fe0 <xmlStrEqual@plt+0x310a0>
  434aee:	xchg   ax,ax
  434af0:	endbr64 
  434af4:	push   r12
  434af6:	push   rbp
  434af7:	mov    rbp,rdi
  434afa:	mov    edi,0x20
  434aff:	push   rbx
  434b00:	call   434fe0 <xmlStrEqual@plt+0x310a0>
  434b05:	mov    rbx,rax
  434b08:	test   rax,rax
  434b0b:	je     434b50 <xmlStrEqual@plt+0x30c10>
  434b0d:	mov    QWORD PTR [rax],rbp
  434b10:	mov    edi,0x10
  434b15:	call   435000 <xmlStrEqual@plt+0x310c0>
  434b1a:	mov    rbp,rax
  434b1d:	test   rax,rax
  434b20:	je     434b41 <xmlStrEqual@plt+0x30c01>
  434b22:	mov    r12,0x42e2b0
  434b29:	mov    rdi,r12
  434b2c:	call   43a0a0 <xmlStrEqual@plt+0x36160>
  434b31:	mov    QWORD PTR [rbp+0x0],rax
  434b35:	mov    rdi,r12
  434b38:	call   43a0a0 <xmlStrEqual@plt+0x36160>
  434b3d:	mov    QWORD PTR [rbp+0x8],rax
  434b41:	mov    QWORD PTR [rbx+0x18],rbp
  434b45:	mov    rax,rbx
  434b48:	pop    rbx
  434b49:	pop    rbp
  434b4a:	pop    r12
  434b4c:	ret    
  434b4d:	nop    DWORD PTR [rax]
  434b50:	mov    rax,0x469e3c
  434b57:	mov    eax,DWORD PTR [rax]
  434b59:	test   eax,eax
  434b5b:	jle    434b45 <xmlStrEqual@plt+0x30c05>
  434b5d:	mov    rdi,rbp
  434b60:	call   424d40 <xmlStrEqual@plt+0x20e00>
  434b65:	mov    rdx,rax
  434b68:	lea    rsi,[rip+0x1cc29]        # 451798 <xmlStrEqual@plt+0x4d858>
  434b6f:	mov    edi,0x5
  434b74:	xor    eax,eax
  434b76:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  434b7b:	jmp    434b45 <xmlStrEqual@plt+0x30c05>
  434b7d:	nop    DWORD PTR [rax]
  434b80:	endbr64 
  434b84:	mov    QWORD PTR [rdi],rsi
  434b87:	ret    
  434b88:	nop    DWORD PTR [rax+rax*1+0x0]
  434b90:	endbr64 
  434b94:	push   r15
  434b96:	push   r14
  434b98:	push   r13
  434b9a:	push   r12
  434b9c:	push   rbp
  434b9d:	push   rbx
  434b9e:	sub    rsp,0x8
  434ba2:	test   rdi,rdi
  434ba5:	je     434c6e <xmlStrEqual@plt+0x30d2e>
  434bab:	mov    rax,QWORD PTR [rdi]
  434bae:	mov    r15,rdi
  434bb1:	mov    rdx,QWORD PTR [rax+0x28]
  434bb5:	mov    r14,0x475860
  434bbc:	mov    r12,QWORD PTR [rdx+0x8]
  434bc0:	mov    r13,0x475858
  434bc7:	cmp    rdx,r12
  434bca:	jne    434bdb <xmlStrEqual@plt+0x30c9b>
  434bcc:	jmp    434c17 <xmlStrEqual@plt+0x30cd7>
  434bce:	xchg   ax,ax
  434bd0:	mov    r12,QWORD PTR [r12+0x8]
  434bd5:	cmp    QWORD PTR [rax+0x28],r12
  434bd9:	je     434c17 <xmlStrEqual@plt+0x30cd7>
  434bdb:	mov    rbp,QWORD PTR [r12+0x10]
  434be0:	mov    edx,DWORD PTR [rbp+0x18]
  434be3:	test   edx,edx
  434be5:	je     434bd0 <xmlStrEqual@plt+0x30c90>
  434be7:	mov    rbx,QWORD PTR [rbp+0x8]
  434beb:	cmp    rbx,rbp
  434bee:	je     434bd0 <xmlStrEqual@plt+0x30c90>
  434bf0:	mov    rdi,QWORD PTR [rbx+0x10]
  434bf4:	mov    rdx,QWORD PTR [r14]
  434bf7:	mov    rsi,QWORD PTR [r13+0x0]
  434bfb:	call   43b8d0 <xmlStrEqual@plt+0x37990>
  434c00:	mov    rbx,QWORD PTR [rbx+0x8]
  434c04:	cmp    rbx,rbp
  434c07:	jne    434bf0 <xmlStrEqual@plt+0x30cb0>
  434c09:	mov    rax,QWORD PTR [r15]
  434c0c:	mov    r12,QWORD PTR [r12+0x8]
  434c11:	cmp    QWORD PTR [rax+0x28],r12
  434c15:	jne    434bdb <xmlStrEqual@plt+0x30c9b>
  434c17:	mov    rdx,QWORD PTR [r14]
  434c1a:	mov    rsi,QWORD PTR [r13+0x0]
  434c1e:	mov    rdi,r15
  434c21:	call   43b8d0 <xmlStrEqual@plt+0x37990>
  434c26:	mov    rdi,QWORD PTR [r15]
  434c29:	call   42b110 <xmlStrEqual@plt+0x271d0>
  434c2e:	mov    rdi,QWORD PTR [r15+0x8]
  434c32:	test   rdi,rdi
  434c35:	je     434c3b <xmlStrEqual@plt+0x30cfb>
  434c37:	call   QWORD PTR [r15+0x10]
  434c3b:	mov    rbx,QWORD PTR [r15+0x18]
  434c3f:	mov    rdi,QWORD PTR [rbx]
  434c42:	call   43add0 <xmlStrEqual@plt+0x36e90>
  434c47:	mov    rdi,QWORD PTR [rbx+0x8]
  434c4b:	call   43add0 <xmlStrEqual@plt+0x36e90>
  434c50:	mov    rdi,rbx
  434c53:	call   4037b0 <free@plt>
  434c58:	add    rsp,0x8
  434c5c:	pop    rbx
  434c5d:	pop    rbp
  434c5e:	pop    r12
  434c60:	pop    r13
  434c62:	pop    r14
  434c64:	mov    rdi,r15
  434c67:	pop    r15
  434c69:	jmp    4037b0 <free@plt>
  434c6e:	lea    rcx,[rip+0x1cb9b]        # 451810 <xmlStrEqual@plt+0x4d8d0>
  434c75:	mov    edx,0x66
  434c7a:	lea    rsi,[rip+0x1cb69]        # 4517ea <xmlStrEqual@plt+0x4d8aa>
  434c81:	lea    rdi,[rip+0x1cb78]        # 451800 <xmlStrEqual@plt+0x4d8c0>
  434c88:	call   403a60 <__assert_fail@plt>
  434c8d:	nop    DWORD PTR [rax]
  434c90:	endbr64 
  434c94:	cmp    esi,0x4
  434c97:	jle    434cb0 <xmlStrEqual@plt+0x30d70>
  434c99:	mov    rax,0x469e3c
  434ca0:	mov    eax,DWORD PTR [rax]
  434ca2:	add    eax,0x4
  434ca5:	cmp    esi,eax
  434ca7:	jle    434cb0 <xmlStrEqual@plt+0x30d70>
  434ca9:	ret    
  434caa:	nop    WORD PTR [rax+rax*1+0x0]
  434cb0:	push   rbx
  434cb1:	mov    ebx,esi
  434cb3:	mov    rdi,QWORD PTR [rdi]
  434cb6:	call   42b300 <xmlStrEqual@plt+0x273c0>
  434cbb:	mov    rsi,rax
  434cbe:	mov    edi,ebx
  434cc0:	xor    eax,eax
  434cc2:	pop    rbx
  434cc3:	jmp    430e20 <xmlStrEqual@plt+0x2cee0>
  434cc8:	nop    DWORD PTR [rax+rax*1+0x0]
  434cd0:	endbr64 
  434cd4:	mov    rdi,QWORD PTR [rdi]
  434cd7:	jmp    42b300 <xmlStrEqual@plt+0x273c0>
  434cdc:	nop    DWORD PTR [rax+0x0]
  434ce0:	endbr64 
  434ce4:	push   r15
  434ce6:	push   r14
  434ce8:	push   r13
  434cea:	push   r12
  434cec:	push   rbp
  434ced:	mov    rbp,rsi
  434cf0:	push   rbx
  434cf1:	sub    rsp,0x28
  434cf5:	mov    rax,QWORD PTR [rdi]
  434cf8:	mov    rbx,QWORD PTR [rdi+0x18]
  434cfc:	mov    QWORD PTR [rsp+0x8],rax
  434d01:	mov    rax,QWORD PTR [rsi]
  434d04:	mov    QWORD PTR [rsp+0x18],rdx
  434d09:	mov    rdi,rax
  434d0c:	mov    QWORD PTR [rsp+0x10],rax
  434d11:	call   424d40 <xmlStrEqual@plt+0x20e00>
  434d16:	mov    rdi,QWORD PTR [rbx]
  434d19:	mov    rsi,rax
  434d1c:	call   43aca0 <xmlStrEqual@plt+0x36d60>
  434d21:	test   rax,rax
  434d24:	je     434dcf <xmlStrEqual@plt+0x30e8f>
  434d2a:	mov    r15,QWORD PTR [rax+0x8]
  434d2e:	mov    r13,rax
  434d31:	cmp    rax,r15
  434d34:	jne    434d49 <xmlStrEqual@plt+0x30e09>
  434d36:	jmp    434dba <xmlStrEqual@plt+0x30e7a>
  434d3b:	nop    DWORD PTR [rax+rax*1+0x0]
  434d40:	mov    r15,QWORD PTR [r15+0x8]
  434d44:	cmp    r13,r15
  434d47:	je     434dba <xmlStrEqual@plt+0x30e7a>
  434d49:	mov    r12,QWORD PTR [r15+0x10]
  434d4d:	mov    rdi,r12
  434d50:	call   424d40 <xmlStrEqual@plt+0x20e00>
  434d55:	mov    rdi,QWORD PTR [rbx+0x8]
  434d59:	mov    rsi,rax
  434d5c:	call   43aca0 <xmlStrEqual@plt+0x36d60>
  434d61:	mov    r14,rax
  434d64:	mov    rsi,rax
  434d67:	mov    rdi,rbp
  434d6a:	call   42e210 <xmlStrEqual@plt+0x2a2d0>
  434d6f:	mov    ecx,DWORD PTR [r14+0x18]
  434d73:	test   ecx,ecx
  434d75:	jne    434d40 <xmlStrEqual@plt+0x30e00>
  434d77:	mov    rdi,r12
  434d7a:	call   424d40 <xmlStrEqual@plt+0x20e00>
  434d7f:	mov    rdi,QWORD PTR [rbx+0x8]
  434d83:	mov    rsi,rax
  434d86:	call   43ab20 <xmlStrEqual@plt+0x36be0>
  434d8b:	mov    r14,QWORD PTR [rsp+0x8]
  434d90:	mov    rsi,r12
  434d93:	mov    rdi,r14
  434d96:	call   42b790 <xmlStrEqual@plt+0x27850>
  434d9b:	mov    r12,rax
  434d9e:	mov    rsi,rax
  434da1:	mov    rdi,r14
  434da4:	call   42b680 <xmlStrEqual@plt+0x27740>
  434da9:	mov    rdi,r12
  434dac:	call   42a7f0 <xmlStrEqual@plt+0x268b0>
  434db1:	mov    r15,QWORD PTR [r15+0x8]
  434db5:	cmp    r13,r15
  434db8:	jne    434d49 <xmlStrEqual@plt+0x30e09>
  434dba:	mov    rdi,QWORD PTR [rsp+0x10]
  434dbf:	call   424d40 <xmlStrEqual@plt+0x20e00>
  434dc4:	mov    rdi,QWORD PTR [rbx]
  434dc7:	mov    rsi,rax
  434dca:	call   43ab20 <xmlStrEqual@plt+0x36be0>
  434dcf:	mov    rsi,0x425060
  434dd6:	mov    rdi,QWORD PTR [rsp+0x18]
  434ddb:	call   42de20 <xmlStrEqual@plt+0x29ee0>
  434de0:	mov    rdi,QWORD PTR [rsp+0x10]
  434de5:	mov    r13,rax
  434de8:	call   424d40 <xmlStrEqual@plt+0x20e00>
  434ded:	mov    rdi,rax
  434df0:	call   403ed0 <strdup@plt>
  434df5:	mov    rdi,QWORD PTR [rbx]
  434df8:	mov    rdx,r13
  434dfb:	mov    rsi,rax
  434dfe:	call   43a0e0 <xmlStrEqual@plt+0x361a0>
  434e03:	mov    r12,QWORD PTR [r13+0x8]
  434e07:	cmp    r13,r12
  434e0a:	jne    434e31 <xmlStrEqual@plt+0x30ef1>
  434e0c:	jmp    434eb8 <xmlStrEqual@plt+0x30f78>
  434e11:	nop    DWORD PTR [rax+0x0]
  434e18:	mov    rsi,r14
  434e1b:	mov    rdi,rbp
  434e1e:	call   42dcf0 <xmlStrEqual@plt+0x29db0>
  434e23:	mov    r12,QWORD PTR [r12+0x8]
  434e28:	cmp    r13,r12
  434e2b:	je     434eb8 <xmlStrEqual@plt+0x30f78>
  434e31:	mov    r15,QWORD PTR [r12+0x10]
  434e36:	mov    rdi,r15
  434e39:	call   424d40 <xmlStrEqual@plt+0x20e00>
  434e3e:	mov    rdi,QWORD PTR [rbx+0x8]
  434e42:	mov    rsi,rax
  434e45:	call   43aca0 <xmlStrEqual@plt+0x36d60>
  434e4a:	mov    r14,rax
  434e4d:	test   rax,rax
  434e50:	jne    434e18 <xmlStrEqual@plt+0x30ed8>
  434e52:	call   42dc90 <xmlStrEqual@plt+0x29d50>
  434e57:	mov    rdi,r15
  434e5a:	mov    r14,rax
  434e5d:	call   424d40 <xmlStrEqual@plt+0x20e00>
  434e62:	mov    rdi,rax
  434e65:	call   403ed0 <strdup@plt>
  434e6a:	mov    rdi,QWORD PTR [rbx+0x8]
  434e6e:	mov    rsi,rax
  434e71:	mov    rdx,r14
  434e74:	call   43a0e0 <xmlStrEqual@plt+0x361a0>
  434e79:	push   0x0
  434e7b:	xor    edx,edx
  434e7d:	mov    r9d,0x64
  434e83:	push   0xff
  434e88:	mov    r8d,0x1
  434e8e:	mov    ecx,0x1
  434e93:	mov    esi,0x1
  434e98:	mov    rdi,r15
  434e9b:	call   42a830 <xmlStrEqual@plt+0x268f0>
  434ea0:	mov    rdi,QWORD PTR [rsp+0x18]
  434ea5:	mov    rsi,rax
  434ea8:	call   42b7b0 <xmlStrEqual@plt+0x27870>
  434ead:	pop    rax
  434eae:	pop    rdx
  434eaf:	jmp    434e18 <xmlStrEqual@plt+0x30ed8>
  434eb4:	nop    DWORD PTR [rax+0x0]
  434eb8:	add    rsp,0x28
  434ebc:	pop    rbx
  434ebd:	pop    rbp
  434ebe:	pop    r12
  434ec0:	pop    r13
  434ec2:	pop    r14
  434ec4:	pop    r15
  434ec6:	ret    
  434ec7:	nop    WORD PTR [rax+rax*1+0x0]
  434ed0:	endbr64 
  434ed4:	push   r14
  434ed6:	push   r13
  434ed8:	push   r12
  434eda:	push   rbp
  434edb:	push   rbx
  434edc:	mov    rbx,rdi
  434edf:	mov    rdi,0x424bf0
  434ee6:	call   42dca0 <xmlStrEqual@plt+0x29d60>
  434eeb:	mov    r14,rax
  434eee:	mov    rax,QWORD PTR [rbx+0x18]
  434ef2:	mov    rdi,QWORD PTR [rax+0x8]
  434ef6:	call   43aea0 <xmlStrEqual@plt+0x36f60>
  434efb:	mov    rbx,QWORD PTR [rax+0x8]
  434eff:	mov    r13,rax
  434f02:	cmp    rax,rbx
  434f05:	je     434f3d <xmlStrEqual@plt+0x30ffd>
  434f07:	nop    WORD PTR [rax+rax*1+0x0]
  434f10:	mov    r12,QWORD PTR [rbx+0x10]
  434f14:	xor    eax,eax
  434f16:	call   424be0 <xmlStrEqual@plt+0x20ca0>
  434f1b:	mov    rbp,rax
  434f1e:	mov    rsi,rax
  434f21:	mov    rdi,r12
  434f24:	call   425bd0 <xmlStrEqual@plt+0x21c90>
  434f29:	mov    rsi,r14
  434f2c:	mov    rdi,rbp
  434f2f:	call   42dcf0 <xmlStrEqual@plt+0x29db0>
  434f34:	mov    rbx,QWORD PTR [rbx+0x8]
  434f38:	cmp    r13,rbx
  434f3b:	jne    434f10 <xmlStrEqual@plt+0x30fd0>
  434f3d:	mov    rdi,r13
  434f40:	call   42e2b0 <xmlStrEqual@plt+0x2a370>
  434f45:	pop    rbx
  434f46:	pop    rbp
  434f47:	pop    r12
  434f49:	pop    r13
  434f4b:	mov    rax,r14
  434f4e:	pop    r14
  434f50:	ret    
  434f51:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  434f5c:	nop    DWORD PTR [rax+0x0]
  434f60:	endbr64 
  434f64:	push   rbx
  434f65:	mov    rbx,rdi
  434f68:	mov    rdi,rsi
  434f6b:	call   424d40 <xmlStrEqual@plt+0x20e00>
  434f70:	mov    rdx,QWORD PTR [rbx+0x18]
  434f74:	mov    rsi,rax
  434f77:	mov    rdi,QWORD PTR [rdx]
  434f7a:	pop    rbx
  434f7b:	jmp    43aca0 <xmlStrEqual@plt+0x36d60>
  434f80:	push   rax
  434f81:	pop    rax
  434f82:	lea    rsi,[rip+0x1c89b]        # 451824 <xmlStrEqual@plt+0x4d8e4>
  434f89:	mov    edi,0x1
  434f8e:	xor    eax,eax
  434f90:	sub    rsp,0x8
  434f94:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  434f99:	call   403a00 <abort@plt>
  434f9e:	xchg   ax,ax
  434fa0:	endbr64 
  434fa4:	sub    rsp,0x8
  434fa8:	test   rdi,rdi
  434fab:	je     434fc8 <xmlStrEqual@plt+0x31088>
  434fad:	test   rsi,rsi
  434fb0:	je     434fc8 <xmlStrEqual@plt+0x31088>
  434fb2:	call   403a80 <calloc@plt>
  434fb7:	test   rax,rax
  434fba:	je     434fd4 <xmlStrEqual@plt+0x31094>
  434fbc:	add    rsp,0x8
  434fc0:	ret    
  434fc1:	nop    DWORD PTR [rax+0x0]
  434fc8:	mov    edi,0x1
  434fcd:	call   403cd0 <malloc@plt>
  434fd2:	jmp    434fb7 <xmlStrEqual@plt+0x31077>
  434fd4:	call   434f80 <xmlStrEqual@plt+0x31040>
  434fd9:	nop    DWORD PTR [rax+0x0]
  434fe0:	endbr64 
  434fe4:	mov    rsi,rdi
  434fe7:	mov    edi,0x1
  434fec:	jmp    434fa0 <xmlStrEqual@plt+0x31060>
  434ff1:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  434ffc:	nop    DWORD PTR [rax+0x0]
  435000:	endbr64 
  435004:	sub    rsp,0x8
  435008:	mov    eax,0x1
  43500d:	test   rdi,rdi
  435010:	cmove  rdi,rax
  435014:	call   403cd0 <malloc@plt>
  435019:	test   rax,rax
  43501c:	je     435023 <xmlStrEqual@plt+0x310e3>
  43501e:	add    rsp,0x8
  435022:	ret    
  435023:	call   434f80 <xmlStrEqual@plt+0x31040>
  435028:	nop    DWORD PTR [rax+rax*1+0x0]
  435030:	endbr64 
  435034:	sub    rsp,0x8
  435038:	mov    eax,0x1
  43503d:	test   rsi,rsi
  435040:	cmove  rsi,rax
  435044:	call   403e10 <realloc@plt>
  435049:	test   rax,rax
  43504c:	je     435053 <xmlStrEqual@plt+0x31113>
  43504e:	add    rsp,0x8
  435052:	ret    
  435053:	call   434f80 <xmlStrEqual@plt+0x31040>
  435058:	nop    DWORD PTR [rax+rax*1+0x0]
  435060:	endbr64 
  435064:	push   rbp
  435065:	mov    rbp,rdi
  435068:	mov    rdi,rsi
  43506b:	push   rbx
  43506c:	mov    rbx,rsi
  43506f:	sub    rsp,0x8
  435073:	call   435000 <xmlStrEqual@plt+0x310c0>
  435078:	mov    rdi,rax
  43507b:	mov    rdx,rbx
  43507e:	mov    rsi,rbp
  435081:	call   403ae0 <memcpy@plt>
  435086:	add    rsp,0x8
  43508a:	pop    rbx
  43508b:	pop    rbp
  43508c:	ret    
  43508d:	nop    DWORD PTR [rax]
  435090:	endbr64 
  435094:	push   rbp
  435095:	mov    rbp,rdi
  435098:	lea    rdi,[rsi+0x1]
  43509c:	push   rbx
  43509d:	mov    rbx,rsi
  4350a0:	sub    rsp,0x8
  4350a4:	call   435000 <xmlStrEqual@plt+0x310c0>
  4350a9:	mov    rdi,rax
  4350ac:	mov    rdx,rbx
  4350af:	mov    rsi,rbp
  4350b2:	call   403ae0 <memcpy@plt>
  4350b7:	mov    BYTE PTR [rax+rbx*1],0x0
  4350bb:	add    rsp,0x8
  4350bf:	pop    rbx
  4350c0:	pop    rbp
  4350c1:	ret    
  4350c2:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4350cd:	nop    DWORD PTR [rax]
  4350d0:	endbr64 
  4350d4:	push   rbx
  4350d5:	mov    rbx,rdi
  4350d8:	call   403970 <strlen@plt>
  4350dd:	mov    rsi,rax
  4350e0:	mov    rdi,rbx
  4350e3:	pop    rbx
  4350e4:	jmp    435090 <xmlStrEqual@plt+0x31150>
  4350e9:	nop    DWORD PTR [rax+0x0]
  4350f0:	endbr64 
  4350f4:	push   rax
  4350f5:	pop    rax
  4350f6:	sub    rsp,0x8
  4350fa:	mov    eax,DWORD PTR [rip+0x3f9bc]        # 474abc <xmlStrEqual@plt+0x70b7c>
  435100:	lea    r10d,[rax+0x1]
  435104:	mov    DWORD PTR [rip+0x3f9b1],r10d        # 474abc <xmlStrEqual@plt+0x70b7c>
  43510b:	test   eax,eax
  43510d:	jne    435130 <xmlStrEqual@plt+0x311f0>
  43510f:	mov    r8,rsi
  435112:	mov    rcx,rdx
  435115:	lea    rsi,[rip+0x1c724]        # 451840 <xmlStrEqual@plt+0x4d900>
  43511c:	mov    rdx,rdi
  43511f:	xor    eax,eax
  435121:	mov    edi,0x1
  435126:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  43512b:	call   403a00 <abort@plt>
  435130:	cmp    eax,0x1
  435133:	jne    435160 <xmlStrEqual@plt+0x31220>
  435135:	mov    rax,QWORD PTR [rip+0x33e8c]        # 468fc8 <xmlStrEqual@plt+0x65088>
  43513c:	mov    rcx,rdi
  43513f:	mov    rdi,QWORD PTR [rax]
  435142:	mov    r9,rsi
  435145:	mov    r8,rdx
  435148:	mov    esi,0x1
  43514d:	lea    rdx,[rip+0x1c6ec]        # 451840 <xmlStrEqual@plt+0x4d900>
  435154:	xor    eax,eax
  435156:	call   403e20 <__fprintf_chk@plt>
  43515b:	call   403a00 <abort@plt>
  435160:	call   403a00 <abort@plt>
  435165:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  435170:	endbr64 
  435174:	mov    rax,rdi
  435177:	mov    edx,edi
  435179:	shr    rax,0x20
  43517d:	bswap  edx
  43517f:	bswap  eax
  435181:	shl    rdx,0x20
  435185:	mov    eax,eax
  435187:	add    rax,rdx
  43518a:	ret    
  43518b:	nop    DWORD PTR [rax+rax*1+0x0]
  435190:	endbr64 
  435194:	mov    rax,QWORD PTR [rsi]
  435197:	cmp    QWORD PTR [rdi],rax
  43519a:	sete   al
  43519d:	movzx  eax,al
  4351a0:	ret    
  4351a1:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4351ac:	nop    DWORD PTR [rax+0x0]
  4351b0:	endbr64 
  4351b4:	jmp    4037b0 <free@plt>
  4351b9:	nop    DWORD PTR [rax+0x0]
  4351c0:	endbr64 
  4351c4:	push   rbx
  4351c5:	mov    edi,0x8
  4351ca:	call   403cd0 <malloc@plt>
  4351cf:	mov    esi,0x28
  4351d4:	mov    edi,0x1
  4351d9:	mov    rbx,rax
  4351dc:	call   403a80 <calloc@plt>
  4351e1:	mov    QWORD PTR [rbx],rax
  4351e4:	mov    rax,rbx
  4351e7:	pop    rbx
  4351e8:	ret    
  4351e9:	nop    DWORD PTR [rax+0x0]
  4351f0:	endbr64 
  4351f4:	push   r15
  4351f6:	mov    r15,rdi
  4351f9:	push   r14
  4351fb:	push   r13
  4351fd:	mov    r13,rsi
  435200:	push   r12
  435202:	push   rbp
  435203:	push   rbx
  435204:	mov    rbx,rdx
  435207:	sub    rsp,0x38
  43520b:	mov    QWORD PTR [rsp+0x18],rdi
  435210:	mov    edi,0x8
  435215:	mov    QWORD PTR [rsp+0x8],rdx
  43521a:	call   435000 <xmlStrEqual@plt+0x310c0>
  43521f:	mov    QWORD PTR [rax],r13
  435222:	mov    rsi,QWORD PTR [rbx]
  435225:	mov    rdi,rax
  435228:	call   42dcf0 <xmlStrEqual@plt+0x29db0>
  43522d:	mov    rbp,QWORD PTR [r15]
  435230:	mov    eax,DWORD PTR [rbp+0xc]
  435233:	cmp    DWORD PTR [rbp+0x8],eax
  435236:	jae    435350 <xmlStrEqual@plt+0x31410>
  43523c:	mov    eax,DWORD PTR [rbp+0x0]
  43523f:	mov    r12,QWORD PTR [rbp+0x10]
  435243:	mov    DWORD PTR [rsp+0x20],eax
  435247:	lea    ebx,[rax-0x1]
  43524a:	mov    r9,rbp
  43524d:	mov    rax,r13
  435250:	mov    edx,r13d
  435253:	shr    rax,0x21
  435257:	shl    edx,0xb
  43525a:	xor    edx,eax
  43525c:	xor    edx,r13d
  43525f:	mov    esi,edx
  435261:	and    esi,ebx
  435263:	mov    eax,esi
  435265:	shr    eax,0x4
  435268:	lea    rdi,[r12+rax*4]
  43526c:	mov    r8d,DWORD PTR [rdi]
  43526f:	lea    eax,[rsi+rsi*1]
  435272:	and    eax,0x1e
  435275:	shrx   ecx,r8d,eax
  43527a:	test   cl,0x2
  43527d:	jne    435500 <xmlStrEqual@plt+0x315c0>
  435283:	mov    edi,edx
  435285:	shr    edi,0x3
  435288:	shl    edx,0x3
  43528b:	xor    edx,edi
  43528d:	mov    edi,edx
  43528f:	or     edi,0x1
  435292:	and    edi,ebx
  435294:	mov    r10d,DWORD PTR [rsp+0x20]
  435299:	mov    edx,esi
  43529b:	jmp    4352dc <xmlStrEqual@plt+0x3139c>
  43529d:	nop    DWORD PTR [rax]
  4352a0:	mov    r8,QWORD PTR [rbp+0x18]
  4352a4:	mov    eax,edx
  4352a6:	lea    rcx,[rax*8+0x0]
  4352ae:	cmp    r13,QWORD PTR [r8+rax*8]
  4352b2:	je     435910 <xmlStrEqual@plt+0x319d0>
  4352b8:	add    edx,edi
  4352ba:	and    edx,ebx
  4352bc:	cmp    esi,edx
  4352be:	je     4352ec <xmlStrEqual@plt+0x313ac>
  4352c0:	mov    r8d,edx
  4352c3:	lea    eax,[rdx+rdx*1]
  4352c6:	shr    r8d,0x4
  4352ca:	and    eax,0x1e
  4352cd:	shrx   ecx,DWORD PTR [r12+r8*4],eax
  4352d3:	test   cl,0x2
  4352d6:	jne    435820 <xmlStrEqual@plt+0x318e0>
  4352dc:	and    ecx,0x1
  4352df:	je     4352a0 <xmlStrEqual@plt+0x31360>
  4352e1:	mov    r10d,edx
  4352e4:	add    edx,edi
  4352e6:	and    edx,ebx
  4352e8:	cmp    esi,edx
  4352ea:	jne    4352c0 <xmlStrEqual@plt+0x31380>
  4352ec:	cmp    r10d,DWORD PTR [rsp+0x20]
  4352f1:	je     435905 <xmlStrEqual@plt+0x319c5>
  4352f7:	mov    ecx,r10d
  4352fa:	shl    rcx,0x3
  4352fe:	mov    eax,r10d
  435301:	shr    eax,0x4
  435304:	lea    rdi,[r12+rax*4]
  435308:	mov    r8d,DWORD PTR [rdi]
  43530b:	lea    eax,[r10+r10*1]
  43530f:	and    eax,0x1e
  435312:	shrx   edx,r8d,eax
  435317:	test   dl,0x2
  43531a:	jne    4354f4 <xmlStrEqual@plt+0x315b4>
  435320:	and    edx,0x1
  435323:	je     435528 <xmlStrEqual@plt+0x315e8>
  435329:	mov    rdx,QWORD PTR [rbp+0x18]
  43532d:	mov    QWORD PTR [rdx+rcx*1],r13
  435331:	mov    edx,0x3
  435336:	shlx   rax,rdx,rax
  43533b:	andn   r8d,eax,r8d
  435340:	mov    DWORD PTR [rdi],r8d
  435343:	inc    DWORD PTR [rbp+0x4]
  435346:	jmp    435528 <xmlStrEqual@plt+0x315e8>
  43534b:	nop    DWORD PTR [rax+rax*1+0x0]
  435350:	mov    eax,DWORD PTR [rbp+0x4]
  435353:	mov    edi,DWORD PTR [rbp+0x0]
  435356:	lea    edx,[rax+rax*1]
  435359:	mov    DWORD PTR [rsp+0x20],edi
  43535d:	cmp    edi,edx
  43535f:	jbe    435548 <xmlStrEqual@plt+0x31608>
  435365:	lea    ebx,[rdi-0x2]
  435368:	mov    edx,ebx
  43536a:	shr    edx,1
  43536c:	or     ebx,edx
  43536e:	mov    edx,ebx
  435370:	shr    edx,0x2
  435373:	or     ebx,edx
  435375:	mov    edx,ebx
  435377:	shr    edx,0x4
  43537a:	or     ebx,edx
  43537c:	mov    edx,ebx
  43537e:	shr    edx,0x8
  435381:	or     ebx,edx
  435383:	mov    edx,ebx
  435385:	shr    edx,0x10
  435388:	or     ebx,edx
  43538a:	lea    ecx,[rbx+0x1]
  43538d:	cmp    ecx,0x3
  435390:	ja     4356e8 <xmlStrEqual@plt+0x317a8>
  435396:	cmp    eax,0x2
  435399:	ja     435858 <xmlStrEqual@plt+0x31918>
  43539f:	mov    DWORD PTR [rsp+0x24],0x3
  4353a7:	mov    DWORD PTR [rsp+0x20],0x4
  4353af:	mov    ebx,0x3
  4353b4:	mov    r14d,0x4
  4353ba:	mov    rdi,r14
  4353bd:	call   403cd0 <malloc@plt>
  4353c2:	mov    rdi,rax
  4353c5:	mov    rdx,r14
  4353c8:	mov    esi,0xaa
  4353cd:	mov    r12,rax
  4353d0:	call   4039f0 <memset@plt>
  4353d5:	mov    eax,DWORD PTR [rsp+0x20]
  4353d9:	cmp    DWORD PTR [rbp+0x0],eax
  4353dc:	jb     435890 <xmlStrEqual@plt+0x31950>
  4353e2:	mov    r11,QWORD PTR [rbp+0x10]
  4353e6:	xor    r8d,r8d
  4353e9:	mov    QWORD PTR [rsp+0x28],r13
  4353ee:	jmp    435400 <xmlStrEqual@plt+0x314c0>
  4353f0:	mov    r9d,DWORD PTR [rbp+0x0]
  4353f4:	inc    r8d
  4353f7:	cmp    r8d,r9d
  4353fa:	je     4357a0 <xmlStrEqual@plt+0x31860>
  435400:	mov    eax,r8d
  435403:	shr    eax,0x4
  435406:	lea    rcx,[r11+rax*4]
  43540a:	mov    edx,DWORD PTR [rcx]
  43540c:	lea    eax,[r8+r8*1]
  435410:	and    eax,0x1e
  435413:	shrx   esi,edx,eax
  435418:	and    esi,0x3
  43541b:	jne    4353f0 <xmlStrEqual@plt+0x314b0>
  43541d:	mov    r15,QWORD PTR [rbp+0x20]
  435421:	mov    r13,QWORD PTR [rbp+0x18]
  435425:	mov    esi,r8d
  435428:	bts    edx,eax
  43542b:	mov    rdi,QWORD PTR [r13+rsi*8+0x0]
  435430:	mov    r10,QWORD PTR [r15+rsi*8]
  435434:	mov    QWORD PTR [rsp+0x10],r15
  435439:	mov    DWORD PTR [rcx],edx
  43543b:	nop    DWORD PTR [rax+rax*1+0x0]
  435440:	mov    rsi,rdi
  435443:	mov    eax,edi
  435445:	shr    rsi,0x21
  435449:	shl    eax,0xb
  43544c:	xor    eax,esi
  43544e:	xor    eax,edi
  435450:	mov    esi,eax
  435452:	mov    ecx,eax
  435454:	shr    esi,0x3
  435457:	shl    eax,0x3
  43545a:	xor    eax,esi
  43545c:	or     eax,0x1
  43545f:	mov    esi,eax
  435461:	and    ecx,ebx
  435463:	and    esi,ebx
  435465:	jmp    435474 <xmlStrEqual@plt+0x31534>
  435467:	nop    WORD PTR [rax+rax*1+0x0]
  435470:	add    ecx,esi
  435472:	and    ecx,ebx
  435474:	mov    eax,ecx
  435476:	shr    eax,0x4
  435479:	shl    rax,0x2
  43547d:	lea    r9,[r12+rax*1]
  435481:	mov    r14d,DWORD PTR [r9]
  435484:	lea    edx,[rcx+rcx*1]
  435487:	and    edx,0x1e
  43548a:	shrx   r15d,r14d,edx
  43548f:	and    r15d,0x2
  435493:	je     435470 <xmlStrEqual@plt+0x31530>
  435495:	mov    esi,0x2
  43549a:	shlx   rsi,rsi,rdx
  43549f:	andn   r14d,esi,r14d
  4354a4:	mov    DWORD PTR [r9],r14d
  4354a7:	mov    esi,ecx
  4354a9:	shl    rsi,0x3
  4354ad:	mov    r9d,DWORD PTR [rbp+0x0]
  4354b1:	lea    r14,[r13+rsi*1+0x0]
  4354b6:	add    rsi,QWORD PTR [rsp+0x10]
  4354bb:	cmp    r9d,ecx
  4354be:	jbe    435788 <xmlStrEqual@plt+0x31848>
  4354c4:	add    rax,r11
  4354c7:	mov    ecx,DWORD PTR [rax]
  4354c9:	shrx   r15d,ecx,edx
  4354ce:	and    r15d,0x3
  4354d2:	jne    435788 <xmlStrEqual@plt+0x31848>
  4354d8:	mov    r9,QWORD PTR [r14]
  4354db:	mov    QWORD PTR [r14],rdi
  4354de:	mov    r14,QWORD PTR [rsi]
  4354e1:	bts    ecx,edx
  4354e4:	mov    QWORD PTR [rsi],r10
  4354e7:	mov    rdi,r9
  4354ea:	mov    DWORD PTR [rax],ecx
  4354ec:	mov    r10,r14
  4354ef:	jmp    435440 <xmlStrEqual@plt+0x31500>
  4354f4:	mov    esi,r10d
  4354f7:	nop    WORD PTR [rax+rax*1+0x0]
  435500:	mov    rdx,QWORD PTR [rbp+0x18]
  435504:	lea    rcx,[rsi*8+0x0]
  43550c:	mov    QWORD PTR [rdx+rsi*8],r13
  435510:	mov    edx,0x3
  435515:	shlx   rax,rdx,rax
  43551a:	andn   r8d,eax,r8d
  43551f:	mov    DWORD PTR [rdi],r8d
  435522:	inc    DWORD PTR [rbp+0x4]
  435525:	inc    DWORD PTR [rbp+0x8]
  435528:	mov    rax,QWORD PTR [r9+0x20]
  43552c:	mov    rdi,QWORD PTR [rsp+0x8]
  435531:	mov    QWORD PTR [rax+rcx*1],rdi
  435535:	add    rsp,0x38
  435539:	pop    rbx
  43553a:	pop    rbp
  43553b:	pop    r12
  43553d:	pop    r13
  43553f:	pop    r14
  435541:	pop    r15
  435543:	ret    
  435544:	nop    DWORD PTR [rax+0x0]
  435548:	mov    edi,DWORD PTR [rsp+0x20]
  43554c:	mov    ebx,edi
  43554e:	shr    ebx,1
  435550:	or     ebx,edi
  435552:	mov    edx,ebx
  435554:	shr    edx,0x2
  435557:	or     ebx,edx
  435559:	mov    edx,ebx
  43555b:	shr    edx,0x4
  43555e:	or     ebx,edx
  435560:	mov    edx,ebx
  435562:	shr    edx,0x8
  435565:	or     ebx,edx
  435567:	mov    edx,ebx
  435569:	shr    edx,0x10
  43556c:	or     ebx,edx
  43556e:	lea    ecx,[rbx+0x1]
  435571:	cmp    ecx,0x3
  435574:	ja     435738 <xmlStrEqual@plt+0x317f8>
  43557a:	cmp    eax,0x2
  43557d:	ja     435858 <xmlStrEqual@plt+0x31918>
  435583:	mov    DWORD PTR [rsp+0x24],0x3
  43558b:	mov    DWORD PTR [rsp+0x20],0x4
  435593:	mov    ebx,0x3
  435598:	mov    r14d,0x4
  43559e:	mov    rdi,r14
  4355a1:	call   403cd0 <malloc@plt>
  4355a6:	mov    rdi,rax
  4355a9:	mov    rdx,r14
  4355ac:	mov    esi,0xaa
  4355b1:	mov    r12,rax
  4355b4:	call   4039f0 <memset@plt>
  4355b9:	mov    r9d,DWORD PTR [rbp+0x0]
  4355bd:	cmp    DWORD PTR [rsp+0x20],r9d
  4355c2:	ja     4358d0 <xmlStrEqual@plt+0x31990>
  4355c8:	mov    r11,QWORD PTR [rbp+0x10]
  4355cc:	test   r9d,r9d
  4355cf:	je     4357dc <xmlStrEqual@plt+0x3189c>
  4355d5:	xor    r8d,r8d
  4355d8:	mov    QWORD PTR [rsp+0x28],r13
  4355dd:	jmp    4355ec <xmlStrEqual@plt+0x316ac>
  4355df:	nop
  4355e0:	inc    r8d
  4355e3:	cmp    r8d,r9d
  4355e6:	je     4357a0 <xmlStrEqual@plt+0x31860>
  4355ec:	mov    eax,r8d
  4355ef:	shr    eax,0x4
  4355f2:	lea    rcx,[r11+rax*4]
  4355f6:	mov    edx,DWORD PTR [rcx]
  4355f8:	lea    eax,[r8+r8*1]
  4355fc:	and    eax,0x1e
  4355ff:	shrx   esi,edx,eax
  435604:	and    esi,0x3
  435607:	jne    4355e0 <xmlStrEqual@plt+0x316a0>
  435609:	mov    r15,QWORD PTR [rbp+0x20]
  43560d:	mov    r14,QWORD PTR [rbp+0x18]
  435611:	mov    esi,r8d
  435614:	bts    edx,eax
  435617:	mov    rdi,QWORD PTR [r14+rsi*8]
  43561b:	mov    r13,QWORD PTR [r15+rsi*8]
  43561f:	mov    QWORD PTR [rsp+0x10],r15
  435624:	mov    DWORD PTR [rcx],edx
  435626:	nop    WORD PTR cs:[rax+rax*1+0x0]
  435630:	mov    rsi,rdi
  435633:	mov    eax,edi
  435635:	shr    rsi,0x21
  435639:	shl    eax,0xb
  43563c:	xor    eax,esi
  43563e:	xor    eax,edi
  435640:	mov    esi,eax
  435642:	mov    ecx,eax
  435644:	shr    esi,0x3
  435647:	shl    eax,0x3
  43564a:	xor    eax,esi
  43564c:	or     eax,0x1
  43564f:	mov    esi,eax
  435651:	and    ecx,ebx
  435653:	and    esi,ebx
  435655:	jmp    435664 <xmlStrEqual@plt+0x31724>
  435657:	nop    WORD PTR [rax+rax*1+0x0]
  435660:	add    ecx,esi
  435662:	and    ecx,ebx
  435664:	mov    eax,ecx
  435666:	shr    eax,0x4
  435669:	shl    rax,0x2
  43566d:	lea    r9,[r12+rax*1]
  435671:	mov    r10d,DWORD PTR [r9]
  435674:	lea    edx,[rcx+rcx*1]
  435677:	and    edx,0x1e
  43567a:	shrx   r15d,r10d,edx
  43567f:	and    r15d,0x2
  435683:	je     435660 <xmlStrEqual@plt+0x31720>
  435685:	mov    esi,0x2
  43568a:	shlx   rsi,rsi,rdx
  43568f:	andn   r10d,esi,r10d
  435694:	mov    DWORD PTR [r9],r10d
  435697:	mov    esi,ecx
  435699:	shl    rsi,0x3
  43569d:	mov    r9d,DWORD PTR [rbp+0x0]
  4356a1:	lea    r10,[r14+rsi*1]
  4356a5:	add    rsi,QWORD PTR [rsp+0x10]
  4356aa:	cmp    r9d,ecx
  4356ad:	jbe    435810 <xmlStrEqual@plt+0x318d0>
  4356b3:	add    rax,r11
  4356b6:	mov    ecx,DWORD PTR [rax]
  4356b8:	shrx   r15d,ecx,edx
  4356bd:	and    r15d,0x3
  4356c1:	jne    435810 <xmlStrEqual@plt+0x318d0>
  4356c7:	mov    r9,QWORD PTR [r10]
  4356ca:	mov    QWORD PTR [r10],rdi
  4356cd:	mov    r10,QWORD PTR [rsi]
  4356d0:	bts    ecx,edx
  4356d3:	mov    QWORD PTR [rsi],r13
  4356d6:	mov    rdi,r9
  4356d9:	mov    DWORD PTR [rax],ecx
  4356db:	mov    r13,r10
  4356de:	jmp    435630 <xmlStrEqual@plt+0x316f0>
  4356e3:	nop    DWORD PTR [rax+rax*1+0x0]
  4356e8:	mov    edx,ecx
  4356ea:	vxorpd xmm0,xmm0,xmm0
  4356ee:	vcvtsi2sd xmm0,xmm0,rdx
  4356f3:	vmovsd xmm1,QWORD PTR [rip+0x177dd]        # 44ced8 <xmlStrEqual@plt+0x48f98>
  4356fb:	vfmadd132sd xmm0,xmm1,QWORD PTR [rip+0x177cc]        # 44ced0 <xmlStrEqual@plt+0x48f90>
  435704:	vcvttsd2si rdx,xmm0
  435709:	mov    DWORD PTR [rsp+0x24],edx
  43570d:	cmp    eax,edx
  43570f:	jae    435840 <xmlStrEqual@plt+0x31900>
  435715:	cmp    ecx,0xf
  435718:	jbe    435880 <xmlStrEqual@plt+0x31940>
  43571e:	mov    eax,ecx
  435720:	shr    eax,0x4
  435723:	lea    r14,[rax*4+0x0]
  43572b:	mov    DWORD PTR [rsp+0x20],ecx
  43572f:	jmp    4353ba <xmlStrEqual@plt+0x3147a>
  435734:	nop    DWORD PTR [rax+0x0]
  435738:	mov    edx,ecx
  43573a:	vxorpd xmm0,xmm0,xmm0
  43573e:	vcvtsi2sd xmm0,xmm0,rdx
  435743:	vmovsd xmm2,QWORD PTR [rip+0x1778d]        # 44ced8 <xmlStrEqual@plt+0x48f98>
  43574b:	vfmadd132sd xmm0,xmm2,QWORD PTR [rip+0x1777c]        # 44ced0 <xmlStrEqual@plt+0x48f90>
  435754:	vcvttsd2si rdx,xmm0
  435759:	mov    DWORD PTR [rsp+0x24],edx
  43575d:	cmp    eax,edx
  43575f:	jae    435840 <xmlStrEqual@plt+0x31900>
  435765:	cmp    ecx,0xf
  435768:	jbe    435870 <xmlStrEqual@plt+0x31930>
  43576e:	mov    eax,ecx
  435770:	shr    eax,0x4
  435773:	lea    r14,[rax*4+0x0]
  43577b:	mov    DWORD PTR [rsp+0x20],ecx
  43577f:	jmp    43559e <xmlStrEqual@plt+0x3165e>
  435784:	nop    DWORD PTR [rax+0x0]
  435788:	inc    r8d
  43578b:	mov    QWORD PTR [r14],rdi
  43578e:	mov    QWORD PTR [rsi],r10
  435791:	cmp    r8d,r9d
  435794:	jne    435400 <xmlStrEqual@plt+0x314c0>
  43579a:	nop    WORD PTR [rax+rax*1+0x0]
  4357a0:	mov    r13,QWORD PTR [rsp+0x28]
  4357a5:	cmp    DWORD PTR [rsp+0x20],r8d
  4357aa:	jae    4357dc <xmlStrEqual@plt+0x3189c>
  4357ac:	mov    eax,DWORD PTR [rsp+0x20]
  4357b0:	mov    rdi,QWORD PTR [rbp+0x18]
  4357b4:	lea    r14,[rax*8+0x0]
  4357bc:	mov    rsi,r14
  4357bf:	call   403e10 <realloc@plt>
  4357c4:	mov    QWORD PTR [rbp+0x18],rax
  4357c8:	mov    rdi,QWORD PTR [rbp+0x20]
  4357cc:	mov    rsi,r14
  4357cf:	call   403e10 <realloc@plt>
  4357d4:	mov    QWORD PTR [rbp+0x20],rax
  4357d8:	mov    r11,QWORD PTR [rbp+0x10]
  4357dc:	mov    rdi,r11
  4357df:	call   4037b0 <free@plt>
  4357e4:	mov    eax,DWORD PTR [rsp+0x20]
  4357e8:	mov    QWORD PTR [rbp+0x10],r12
  4357ec:	mov    DWORD PTR [rbp+0x0],eax
  4357ef:	mov    eax,DWORD PTR [rbp+0x4]
  4357f2:	mov    DWORD PTR [rbp+0x8],eax
  4357f5:	mov    eax,DWORD PTR [rsp+0x24]
  4357f9:	mov    DWORD PTR [rbp+0xc],eax
  4357fc:	mov    rax,QWORD PTR [rsp+0x18]
  435801:	mov    r9,QWORD PTR [rax]
  435804:	jmp    43524d <xmlStrEqual@plt+0x3130d>
  435809:	nop    DWORD PTR [rax+0x0]
  435810:	mov    QWORD PTR [r10],rdi
  435813:	mov    QWORD PTR [rsi],r13
  435816:	jmp    4355e0 <xmlStrEqual@plt+0x316a0>
  43581b:	nop    DWORD PTR [rax+rax*1+0x0]
  435820:	cmp    r10d,DWORD PTR [rsp+0x20]
  435825:	jne    4352f7 <xmlStrEqual@plt+0x313b7>
  43582b:	lea    rdi,[r12+r8*4]
  43582f:	mov    r8d,DWORD PTR [rdi]
  435832:	mov    esi,edx
  435834:	jmp    435500 <xmlStrEqual@plt+0x315c0>
  435839:	nop    DWORD PTR [rax+0x0]
  435840:	mov    eax,DWORD PTR [rsp+0x20]
  435844:	mov    r12,QWORD PTR [rbp+0x10]
  435848:	lea    ebx,[rax-0x1]
  43584b:	mov    r9,rbp
  43584e:	jmp    43524d <xmlStrEqual@plt+0x3130d>
  435853:	nop    DWORD PTR [rax+rax*1+0x0]
  435858:	mov    r12,QWORD PTR [rbp+0x10]
  43585c:	lea    ebx,[rdi-0x1]
  43585f:	mov    r9,rbp
  435862:	jmp    43524d <xmlStrEqual@plt+0x3130d>
  435867:	nop    WORD PTR [rax+rax*1+0x0]
  435870:	mov    DWORD PTR [rsp+0x20],ecx
  435874:	mov    r14d,0x4
  43587a:	jmp    43559e <xmlStrEqual@plt+0x3165e>
  43587f:	nop
  435880:	mov    DWORD PTR [rsp+0x20],ecx
  435884:	mov    r14d,0x4
  43588a:	jmp    4353ba <xmlStrEqual@plt+0x3147a>
  43588f:	nop
  435890:	lea    r14,[rax*8+0x0]
  435898:	mov    rdi,QWORD PTR [rbp+0x18]
  43589c:	mov    rsi,r14
  43589f:	call   403e10 <realloc@plt>
  4358a4:	mov    QWORD PTR [rbp+0x18],rax
  4358a8:	mov    rdi,QWORD PTR [rbp+0x20]
  4358ac:	mov    rsi,r14
  4358af:	call   403e10 <realloc@plt>
  4358b4:	mov    QWORD PTR [rbp+0x20],rax
  4358b8:	mov    eax,DWORD PTR [rbp+0x0]
  4358bb:	mov    r11,QWORD PTR [rbp+0x10]
  4358bf:	test   eax,eax
  4358c1:	jne    4353e6 <xmlStrEqual@plt+0x314a6>
  4358c7:	jmp    4357dc <xmlStrEqual@plt+0x3189c>
  4358cc:	nop    DWORD PTR [rax+0x0]
  4358d0:	mov    eax,DWORD PTR [rsp+0x20]
  4358d4:	mov    rdi,QWORD PTR [rbp+0x18]
  4358d8:	lea    r14,[rax*8+0x0]
  4358e0:	mov    rsi,r14
  4358e3:	call   403e10 <realloc@plt>
  4358e8:	mov    QWORD PTR [rbp+0x18],rax
  4358ec:	mov    rdi,QWORD PTR [rbp+0x20]
  4358f0:	mov    rsi,r14
  4358f3:	call   403e10 <realloc@plt>
  4358f8:	mov    QWORD PTR [rbp+0x20],rax
  4358fc:	mov    r9d,DWORD PTR [rbp+0x0]
  435900:	jmp    4355c8 <xmlStrEqual@plt+0x31688>
  435905:	mov    ecx,edx
  435907:	shl    rcx,0x3
  43590b:	nop    DWORD PTR [rax+rax*1+0x0]
  435910:	mov    r10d,edx
  435913:	jmp    4352fe <xmlStrEqual@plt+0x313be>
  435918:	nop    DWORD PTR [rax+rax*1+0x0]
  435920:	endbr64 
  435924:	push   r14
  435926:	xor    r14d,r14d
  435929:	push   r13
  43592b:	push   r12
  43592d:	push   rbp
  43592e:	push   rbx
  43592f:	sub    rsp,0x10
  435933:	mov    rcx,QWORD PTR [rdi]
  435936:	mov    QWORD PTR [rsp+0x8],rsi
  43593b:	mov    r9d,DWORD PTR [rcx]
  43593e:	test   r9d,r9d
  435941:	je     435a0a <xmlStrEqual@plt+0x31aca>
  435947:	mov    rdx,rsi
  43594a:	mov    eax,esi
  43594c:	shr    rdx,0x21
  435950:	shl    eax,0xb
  435953:	xor    eax,edx
  435955:	xor    eax,esi
  435957:	lea    r8d,[r9-0x1]
  43595b:	mov    edx,eax
  43595d:	mov    r10d,r8d
  435960:	and    r10d,eax
  435963:	shr    edx,0x3
  435966:	shl    eax,0x3
  435969:	xor    eax,edx
  43596b:	or     eax,0x1
  43596e:	and    eax,r8d
  435971:	mov    r11,QWORD PTR [rcx+0x10]
  435975:	mov    ebx,r10d
  435978:	jmp    4359a0 <xmlStrEqual@plt+0x31a60>
  43597a:	nop    WORD PTR [rax+rax*1+0x0]
  435980:	test   dl,0x1
  435983:	jne    435992 <xmlStrEqual@plt+0x31a52>
  435985:	mov    r14,QWORD PTR [rcx+0x18]
  435989:	mov    r13d,ebx
  43598c:	cmp    rsi,QWORD PTR [r14+r13*8]
  435990:	je     4359c3 <xmlStrEqual@plt+0x31a83>
  435992:	add    ebx,eax
  435994:	and    ebx,r8d
  435997:	cmp    r10d,ebx
  43599a:	je     435a20 <xmlStrEqual@plt+0x31ae0>
  4359a0:	mov    edx,ebx
  4359a2:	shr    edx,0x4
  4359a5:	lea    rbp,[rdx*4+0x0]
  4359ad:	lea    r12d,[rbx+rbx*1]
  4359b1:	mov    edx,DWORD PTR [r11+rdx*4]
  4359b5:	and    r12d,0x1e
  4359b9:	shrx   edx,edx,r12d
  4359be:	test   dl,0x2
  4359c1:	je     435980 <xmlStrEqual@plt+0x31a40>
  4359c3:	and    edx,0x3
  4359c6:	jne    435a20 <xmlStrEqual@plt+0x31ae0>
  4359c8:	cmp    r9d,ebx
  4359cb:	je     435a20 <xmlStrEqual@plt+0x31ae0>
  4359cd:	mov    rax,QWORD PTR [rcx+0x20]
  4359d1:	mov    edx,ebx
  4359d3:	mov    r14,QWORD PTR [rax+rdx*8]
  4359d7:	mov    r13,rdi
  4359da:	mov    rsi,QWORD PTR [r14]
  4359dd:	lea    rdi,[rsp+0x8]
  4359e2:	call   42e170 <xmlStrEqual@plt+0x2a230>
  4359e7:	mov    rax,QWORD PTR [r13+0x0]
  4359eb:	cmp    DWORD PTR [rax],ebx
  4359ed:	je     435a0a <xmlStrEqual@plt+0x31aca>
  4359ef:	add    rbp,QWORD PTR [rax+0x10]
  4359f3:	mov    edx,DWORD PTR [rbp+0x0]
  4359f6:	shrx   ecx,edx,r12d
  4359fb:	and    ecx,0x3
  4359fe:	jne    435a0a <xmlStrEqual@plt+0x31aca>
  435a00:	bts    edx,r12d
  435a04:	mov    DWORD PTR [rbp+0x0],edx
  435a07:	dec    DWORD PTR [rax+0x4]
  435a0a:	add    rsp,0x10
  435a0e:	pop    rbx
  435a0f:	pop    rbp
  435a10:	pop    r12
  435a12:	pop    r13
  435a14:	mov    rax,r14
  435a17:	pop    r14
  435a19:	ret    
  435a1a:	nop    WORD PTR [rax+rax*1+0x0]
  435a20:	add    rsp,0x10
  435a24:	pop    rbx
  435a25:	pop    rbp
  435a26:	pop    r12
  435a28:	xor    r14d,r14d
  435a2b:	pop    r13
  435a2d:	mov    rax,r14
  435a30:	pop    r14
  435a32:	ret    
  435a33:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  435a3e:	xchg   ax,ax
  435a40:	endbr64 
  435a44:	mov    rdi,QWORD PTR [rdi]
  435a47:	xor    eax,eax
  435a49:	mov    r10d,DWORD PTR [rdi]
  435a4c:	test   r10d,r10d
  435a4f:	je     435ae8 <xmlStrEqual@plt+0x31ba8>
  435a55:	mov    rdx,rsi
  435a58:	mov    eax,esi
  435a5a:	shr    rdx,0x21
  435a5e:	shl    eax,0xb
  435a61:	xor    eax,edx
  435a63:	xor    eax,esi
  435a65:	push   rbp
  435a66:	lea    r9d,[r10-0x1]
  435a6a:	mov    edx,eax
  435a6c:	mov    r11d,r9d
  435a6f:	and    r11d,eax
  435a72:	shr    edx,0x3
  435a75:	shl    eax,0x3
  435a78:	xor    eax,edx
  435a7a:	push   rbx
  435a7b:	or     eax,0x1
  435a7e:	mov    edx,eax
  435a80:	and    edx,r9d
  435a83:	mov    rbp,QWORD PTR [rdi+0x10]
  435a87:	mov    eax,r11d
  435a8a:	jmp    435aac <xmlStrEqual@plt+0x31b6c>
  435a8c:	nop    DWORD PTR [rax+0x0]
  435a90:	test   cl,0x1
  435a93:	jne    435aa2 <xmlStrEqual@plt+0x31b62>
  435a95:	mov    rbx,QWORD PTR [rdi+0x18]
  435a99:	mov    r8d,eax
  435a9c:	cmp    rsi,QWORD PTR [rbx+r8*8]
  435aa0:	je     435ac8 <xmlStrEqual@plt+0x31b88>
  435aa2:	add    eax,edx
  435aa4:	and    eax,r9d
  435aa7:	cmp    r11d,eax
  435aaa:	je     435ae0 <xmlStrEqual@plt+0x31ba0>
  435aac:	mov    ebx,eax
  435aae:	lea    ecx,[rax+rax*1]
  435ab1:	and    ecx,0x1e
  435ab4:	shr    ebx,0x4
  435ab7:	mov    r8d,ecx
  435aba:	mov    ecx,DWORD PTR [rbp+rbx*4+0x0]
  435abe:	shrx   ecx,ecx,r8d
  435ac3:	test   cl,0x2
  435ac6:	je     435a90 <xmlStrEqual@plt+0x31b50>
  435ac8:	and    ecx,0x3
  435acb:	jne    435ae0 <xmlStrEqual@plt+0x31ba0>
  435acd:	cmp    r10d,eax
  435ad0:	je     435ae0 <xmlStrEqual@plt+0x31ba0>
  435ad2:	mov    rdx,QWORD PTR [rdi+0x20]
  435ad6:	pop    rbx
  435ad7:	mov    rax,QWORD PTR [rdx+rax*8]
  435adb:	pop    rbp
  435adc:	ret    
  435add:	nop    DWORD PTR [rax]
  435ae0:	pop    rbx
  435ae1:	xor    eax,eax
  435ae3:	pop    rbp
  435ae4:	ret    
  435ae5:	nop    DWORD PTR [rax]
  435ae8:	ret    
  435ae9:	nop    DWORD PTR [rax+0x0]
  435af0:	endbr64 
  435af4:	push   r15
  435af6:	mov    rax,rdi
  435af9:	push   r14
  435afb:	push   r13
  435afd:	push   r12
  435aff:	push   rbp
  435b00:	push   rbx
  435b01:	sub    rsp,0x18
  435b05:	mov    r13,QWORD PTR [rsi]
  435b08:	mov    rdi,QWORD PTR [r13+0x8]
  435b0c:	cmp    r13,rdi
  435b0f:	je     435bfc <xmlStrEqual@plt+0x31cbc>
  435b15:	mov    QWORD PTR [rsp+0x8],rax
  435b1a:	mov    rcx,QWORD PTR [rax]
  435b1d:	nop    DWORD PTR [rax]
  435b20:	mov    r10d,DWORD PTR [rcx]
  435b23:	mov    r14,QWORD PTR [rdi+0x8]
  435b27:	test   r10d,r10d
  435b2a:	je     435bf0 <xmlStrEqual@plt+0x31cb0>
  435b30:	mov    rax,QWORD PTR [rdi+0x10]
  435b34:	lea    r9d,[r10-0x1]
  435b38:	mov    r8,QWORD PTR [rax]
  435b3b:	mov    r11d,r9d
  435b3e:	mov    rdx,r8
  435b41:	mov    eax,r8d
  435b44:	shr    rdx,0x21
  435b48:	shl    eax,0xb
  435b4b:	xor    eax,edx
  435b4d:	xor    eax,r8d
  435b50:	mov    edx,eax
  435b52:	and    r11d,eax
  435b55:	shr    edx,0x3
  435b58:	shl    eax,0x3
  435b5b:	xor    eax,edx
  435b5d:	or     eax,0x1
  435b60:	mov    edx,eax
  435b62:	and    edx,r9d
  435b65:	mov    r15,QWORD PTR [rcx+0x10]
  435b69:	mov    ebx,r11d
  435b6c:	mov    QWORD PTR [rsp],rdi
  435b70:	jmp    435b92 <xmlStrEqual@plt+0x31c52>
  435b72:	nop    WORD PTR [rax+rax*1+0x0]
  435b78:	test   al,0x1
  435b7a:	jne    435b88 <xmlStrEqual@plt+0x31c48>
  435b7c:	mov    rdi,QWORD PTR [rcx+0x18]
  435b80:	mov    esi,ebx
  435b82:	cmp    r8,QWORD PTR [rdi+rsi*8]
  435b86:	je     435bb2 <xmlStrEqual@plt+0x31c72>
  435b88:	add    ebx,edx
  435b8a:	and    ebx,r9d
  435b8d:	cmp    r11d,ebx
  435b90:	je     435bf0 <xmlStrEqual@plt+0x31cb0>
  435b92:	mov    eax,ebx
  435b94:	shr    eax,0x4
  435b97:	lea    r12,[rax*4+0x0]
  435b9f:	lea    ebp,[rbx+rbx*1]
  435ba2:	mov    eax,DWORD PTR [r15+rax*4]
  435ba6:	and    ebp,0x1e
  435ba9:	shrx   eax,eax,ebp
  435bae:	test   al,0x2
  435bb0:	je     435b78 <xmlStrEqual@plt+0x31c38>
  435bb2:	mov    rdi,QWORD PTR [rsp]
  435bb6:	test   al,0x3
  435bb8:	jne    435bf0 <xmlStrEqual@plt+0x31cb0>
  435bba:	cmp    r10d,ebx
  435bbd:	je     435bf0 <xmlStrEqual@plt+0x31cb0>
  435bbf:	mov    rsi,r13
  435bc2:	call   42e110 <xmlStrEqual@plt+0x2a1d0>
  435bc7:	mov    rax,QWORD PTR [rsp+0x8]
  435bcc:	mov    rcx,QWORD PTR [rax]
  435bcf:	cmp    DWORD PTR [rcx],ebx
  435bd1:	je     435bf0 <xmlStrEqual@plt+0x31cb0>
  435bd3:	add    r12,QWORD PTR [rcx+0x10]
  435bd7:	mov    eax,DWORD PTR [r12]
  435bdb:	shrx   edx,eax,ebp
  435be0:	and    edx,0x3
  435be3:	jne    435bf0 <xmlStrEqual@plt+0x31cb0>
  435be5:	bts    eax,ebp
  435be8:	mov    DWORD PTR [r12],eax
  435bec:	dec    DWORD PTR [rcx+0x4]
  435bef:	nop
  435bf0:	mov    rdi,r14
  435bf3:	cmp    r13,r14
  435bf6:	jne    435b20 <xmlStrEqual@plt+0x31be0>
  435bfc:	add    rsp,0x18
  435c00:	pop    rbx
  435c01:	pop    rbp
  435c02:	pop    r12
  435c04:	pop    r13
  435c06:	pop    r14
  435c08:	pop    r15
  435c0a:	ret    
  435c0b:	nop    DWORD PTR [rax+rax*1+0x0]
  435c10:	endbr64 
  435c14:	push   rbx
  435c15:	mov    ebx,edi
  435c17:	mov    edi,0x1
  435c1c:	sub    rsp,0x20
  435c20:	mov    rsi,rsp
  435c23:	mov    rax,QWORD PTR fs:0x28
  435c2c:	mov    QWORD PTR [rsp+0x18],rax
  435c31:	xor    eax,eax
  435c33:	call   403b10 <clock_gettime@plt>
  435c38:	mov    rcx,QWORD PTR [rsp+0x8]
  435c3d:	mov    eax,ecx
  435c3f:	bswap  eax
  435c41:	mov    edx,eax
  435c43:	xor    edx,DWORD PTR [rsp]
  435c46:	mov    rax,rdx
  435c49:	shl    rax,0x20
  435c4d:	or     ebx,ecx
  435c4f:	or     rax,rbx
  435c52:	mov    rdi,QWORD PTR [rsp+0x18]
  435c57:	xor    rdi,QWORD PTR fs:0x28
  435c60:	jne    435c68 <xmlStrEqual@plt+0x31d28>
  435c62:	add    rsp,0x20
  435c66:	pop    rbx
  435c67:	ret    
  435c68:	call   403c00 <__stack_chk_fail@plt>
  435c6d:	nop    DWORD PTR [rax]
  435c70:	endbr64 
  435c74:	sub    rsp,0x8
  435c78:	xor    edi,edi
  435c7a:	call   403b20 <time@plt>
  435c7f:	mov    edi,eax
  435c81:	add    rsp,0x8
  435c85:	jmp    435c10 <xmlStrEqual@plt+0x31cd0>
  435c8a:	nop    WORD PTR [rax+rax*1+0x0]
  435c90:	endbr64 
  435c94:	mov    rax,QWORD PTR [rdi]
  435c97:	ret    
  435c98:	nop    DWORD PTR [rax+rax*1+0x0]
  435ca0:	endbr64 
  435ca4:	mov    rax,QWORD PTR [rdi+0x8]
  435ca8:	ret    
  435ca9:	nop    DWORD PTR [rax+0x0]
  435cb0:	endbr64 
  435cb4:	push   rbp
  435cb5:	mov    rbp,rdi
  435cb8:	mov    edi,0x10
  435cbd:	push   rbx
  435cbe:	sub    rsp,0x8
  435cc2:	call   434fe0 <xmlStrEqual@plt+0x310a0>
  435cc7:	mov    rbx,rax
  435cca:	test   rax,rax
  435ccd:	je     435ce9 <xmlStrEqual@plt+0x31da9>
  435ccf:	mov    QWORD PTR [rax+0x8],rbp
  435cd3:	mov    rsi,0x4351b0
  435cda:	mov    rdi,0x435190
  435ce1:	call   42dc50 <xmlStrEqual@plt+0x29d10>
  435ce6:	mov    QWORD PTR [rbx],rax
  435ce9:	add    rsp,0x8
  435ced:	mov    rax,rbx
  435cf0:	pop    rbx
  435cf1:	pop    rbp
  435cf2:	ret    
  435cf3:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  435cfe:	xchg   ax,ax
  435d00:	endbr64 
  435d04:	push   rbx
  435d05:	mov    rbx,rdi
  435d08:	mov    rdi,QWORD PTR [rdi]
  435d0b:	call   42e2b0 <xmlStrEqual@plt+0x2a370>
  435d10:	mov    rdi,rbx
  435d13:	pop    rbx
  435d14:	jmp    4037b0 <free@plt>
  435d19:	nop    DWORD PTR [rax+0x0]
  435d20:	endbr64 
  435d24:	test   rdi,rdi
  435d27:	je     435dc0 <xmlStrEqual@plt+0x31e80>
  435d2d:	push   r12
  435d2f:	push   rbp
  435d30:	mov    rbp,rdi
  435d33:	push   rbx
  435d34:	mov    r12,QWORD PTR [rdi]
  435d37:	mov    eax,DWORD PTR [r12]
  435d3b:	test   eax,eax
  435d3d:	je     435d8a <xmlStrEqual@plt+0x31e4a>
  435d3f:	xor    ebx,ebx
  435d41:	jmp    435d50 <xmlStrEqual@plt+0x31e10>
  435d43:	nop    DWORD PTR [rax+rax*1+0x0]
  435d48:	inc    ebx
  435d4a:	cmp    DWORD PTR [r12],ebx
  435d4e:	je     435d8a <xmlStrEqual@plt+0x31e4a>
  435d50:	mov    ecx,ebx
  435d52:	mov    rsi,QWORD PTR [r12+0x10]
  435d57:	lea    eax,[rbx+rbx*1]
  435d5a:	and    eax,0x1e
  435d5d:	shr    ecx,0x4
  435d60:	mov    edx,eax
  435d62:	mov    eax,DWORD PTR [rsi+rcx*4]
  435d65:	shrx   eax,eax,edx
  435d6a:	test   al,0x3
  435d6c:	jne    435d48 <xmlStrEqual@plt+0x31e08>
  435d6e:	mov    rdx,QWORD PTR [r12+0x20]
  435d73:	mov    eax,ebx
  435d75:	mov    rdi,QWORD PTR [rdx+rax*8]
  435d79:	inc    ebx
  435d7b:	call   435d00 <xmlStrEqual@plt+0x31dc0>
  435d80:	mov    r12,QWORD PTR [rbp+0x0]
  435d84:	cmp    DWORD PTR [r12],ebx
  435d88:	jne    435d50 <xmlStrEqual@plt+0x31e10>
  435d8a:	mov    rdi,QWORD PTR [r12+0x18]
  435d8f:	call   4037b0 <free@plt>
  435d94:	mov    rdi,QWORD PTR [r12+0x10]
  435d99:	call   4037b0 <free@plt>
  435d9e:	mov    rdi,QWORD PTR [r12+0x20]
  435da3:	call   4037b0 <free@plt>
  435da8:	mov    rdi,r12
  435dab:	call   4037b0 <free@plt>
  435db0:	pop    rbx
  435db1:	mov    rdi,rbp
  435db4:	pop    rbp
  435db5:	pop    r12
  435db7:	jmp    4037b0 <free@plt>
  435dbc:	nop    DWORD PTR [rax+0x0]
  435dc0:	ret    
  435dc1:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  435dcc:	nop    DWORD PTR [rax+0x0]
  435dd0:	endbr64 
  435dd4:	mov    rax,QWORD PTR [rdi]
  435dd7:	mov    eax,DWORD PTR [rax+0x18]
  435dda:	ret    
  435ddb:	nop    DWORD PTR [rax+rax*1+0x0]
  435de0:	endbr64 
  435de4:	lea    r8d,[rdx+rsi*4-0x21524111]
  435dec:	mov    eax,r8d
  435def:	mov    edx,r8d
  435df2:	cmp    rsi,0x3
  435df6:	jbe    435e6e <xmlStrEqual@plt+0x31f2e>
  435df8:	nop    DWORD PTR [rax+rax*1+0x0]
  435e00:	mov    ecx,DWORD PTR [rdi]
  435e02:	add    eax,DWORD PTR [rdi+0x8]
  435e05:	sub    ecx,eax
  435e07:	add    ecx,r8d
  435e0a:	add    edx,DWORD PTR [rdi+0x4]
  435e0d:	rorx   r8d,eax,0x1c
  435e13:	xor    r8d,ecx
  435e16:	add    eax,edx
  435e18:	sub    edx,r8d
  435e1b:	rorx   ecx,r8d,0x1a
  435e21:	xor    edx,ecx
  435e23:	add    r8d,eax
  435e26:	sub    eax,edx
  435e28:	rorx   ecx,edx,0x18
  435e2e:	xor    eax,ecx
  435e30:	add    edx,r8d
  435e33:	sub    r8d,eax
  435e36:	rorx   ecx,eax,0x10
  435e3c:	xor    r8d,ecx
  435e3f:	mov    ecx,edx
  435e41:	sub    ecx,r8d
  435e44:	add    eax,edx
  435e46:	rorx   edx,r8d,0xd
  435e4c:	xor    edx,ecx
  435e4e:	add    r8d,eax
  435e51:	sub    eax,edx
  435e53:	mov    ecx,eax
  435e55:	sub    rsi,0x3
  435e59:	rorx   eax,edx,0x1c
  435e5f:	add    rdi,0xc
  435e63:	xor    eax,ecx
  435e65:	add    edx,r8d
  435e68:	cmp    rsi,0x3
  435e6c:	ja     435e00 <xmlStrEqual@plt+0x31ec0>
  435e6e:	cmp    rsi,0x2
  435e72:	je     435e8b <xmlStrEqual@plt+0x31f4b>
  435e74:	cmp    rsi,0x3
  435e78:	je     435e88 <xmlStrEqual@plt+0x31f48>
  435e7a:	cmp    rsi,0x1
  435e7e:	je     435e8e <xmlStrEqual@plt+0x31f4e>
  435e80:	ret    
  435e81:	nop    DWORD PTR [rax+0x0]
  435e88:	add    eax,DWORD PTR [rdi+0x8]
  435e8b:	add    edx,DWORD PTR [rdi+0x4]
  435e8e:	xor    eax,edx
  435e90:	rorx   ecx,edx,0x12
  435e96:	add    r8d,DWORD PTR [rdi]
  435e99:	sub    eax,ecx
  435e9b:	xor    r8d,eax
  435e9e:	rorx   ecx,eax,0x15
  435ea4:	sub    r8d,ecx
  435ea7:	xor    edx,r8d
  435eaa:	rorx   ecx,r8d,0x7
  435eb0:	sub    edx,ecx
  435eb2:	xor    eax,edx
  435eb4:	rorx   ecx,edx,0x10
  435eba:	sub    eax,ecx
  435ebc:	xor    r8d,eax
  435ebf:	rorx   ecx,eax,0x1c
  435ec5:	sub    r8d,ecx
  435ec8:	xor    edx,r8d
  435ecb:	rorx   r8d,r8d,0x12
  435ed1:	sub    edx,r8d
  435ed4:	xor    eax,edx
  435ed6:	rorx   edx,edx,0x8
  435edc:	sub    eax,edx
  435ede:	ret    
  435edf:	nop
  435ee0:	endbr64 
  435ee4:	mov    edx,DWORD PTR [rdi+0x14]
  435ee7:	cmp    edx,0xd
  435eea:	jbe    435f00 <xmlStrEqual@plt+0x31fc0>
  435eec:	mov    rax,QWORD PTR [rdi+0x38]
  435ef0:	sub    edx,0xe
  435ef3:	lea    rcx,[rax+0xe]
  435ef7:	mov    QWORD PTR [rdi+0x38],rcx
  435efb:	mov    DWORD PTR [rdi+0x14],edx
  435efe:	ret    
  435eff:	nop
  435f00:	xor    eax,eax
  435f02:	ret    
  435f03:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  435f0e:	xchg   ax,ax
  435f10:	endbr64 
  435f14:	mov    edx,DWORD PTR [rdi+0x14]
  435f17:	cmp    edx,0x13
  435f1a:	jbe    435f30 <xmlStrEqual@plt+0x31ff0>
  435f1c:	mov    rax,QWORD PTR [rdi+0x38]
  435f20:	sub    edx,0x14
  435f23:	lea    rcx,[rax+0x14]
  435f27:	mov    QWORD PTR [rdi+0x38],rcx
  435f2b:	mov    DWORD PTR [rdi+0x14],edx
  435f2e:	ret    
  435f2f:	nop
  435f30:	xor    eax,eax
  435f32:	ret    
  435f33:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  435f3e:	xchg   ax,ax
  435f40:	endbr64 
  435f44:	mov    edx,DWORD PTR [rdi+0x14]
  435f47:	cmp    edx,0x27
  435f4a:	jbe    435f60 <xmlStrEqual@plt+0x32020>
  435f4c:	mov    rax,QWORD PTR [rdi+0x38]
  435f50:	sub    edx,0x28
  435f53:	lea    rcx,[rax+0x28]
  435f57:	mov    QWORD PTR [rdi+0x38],rcx
  435f5b:	mov    DWORD PTR [rdi+0x14],edx
  435f5e:	ret    
  435f5f:	nop
  435f60:	xor    eax,eax
  435f62:	ret    
  435f63:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  435f6e:	xchg   ax,ax
  435f70:	endbr64 
  435f74:	push   rbx
  435f75:	mov    rbx,rdi
  435f78:	mov    rax,QWORD PTR [rdi+0x38]
  435f7c:	movzx  edi,BYTE PTR [rax]
  435f7f:	shr    dil,0x4
  435f83:	movzx  edi,dil
  435f87:	call   4268b0 <xmlStrEqual@plt+0x22970>
  435f8c:	test   eax,eax
  435f8e:	jle    435fb0 <xmlStrEqual@plt+0x32070>
  435f90:	mov    ecx,DWORD PTR [rbx+0x14]
  435f93:	mov    edx,eax
  435f95:	cmp    eax,ecx
  435f97:	ja     435fb0 <xmlStrEqual@plt+0x32070>
  435f99:	mov    rax,QWORD PTR [rbx+0x38]
  435f9d:	mov    esi,edx
  435f9f:	add    rsi,rax
  435fa2:	sub    ecx,edx
  435fa4:	mov    QWORD PTR [rbx+0x38],rsi
  435fa8:	mov    DWORD PTR [rbx+0x14],ecx
  435fab:	pop    rbx
  435fac:	ret    
  435fad:	nop    DWORD PTR [rax]
  435fb0:	xor    eax,eax
  435fb2:	pop    rbx
  435fb3:	ret    
  435fb4:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  435fbf:	nop
  435fc0:	endbr64 
  435fc4:	mov    edx,DWORD PTR [rdi+0x14]
  435fc7:	mov    rax,QWORD PTR [rdi+0x38]
  435fcb:	cmp    edx,0x7
  435fce:	jbe    435fde <xmlStrEqual@plt+0x3209e>
  435fd0:	lea    rcx,[rax+0x8]
  435fd4:	sub    edx,0x8
  435fd7:	mov    QWORD PTR [rdi+0x38],rcx
  435fdb:	mov    DWORD PTR [rdi+0x14],edx
  435fde:	ret    
  435fdf:	nop
  435fe0:	endbr64 
  435fe4:	push   r12
  435fe6:	mov    eax,DWORD PTR [rdi+0x14]
  435fe9:	mov    r12d,esi
  435fec:	push   rbp
  435fed:	mov    esi,0x8
  435ff2:	mov    ebp,edx
  435ff4:	push   rbx
  435ff5:	lea    ebx,[rax+0x8]
  435ff8:	call   430930 <xmlStrEqual@plt+0x2c9f0>
  435ffd:	xor    edx,edx
  435fff:	movbe  WORD PTR [rax],r12w
  436005:	movbe  WORD PTR [rax+0x2],bp
  43600b:	movbe  WORD PTR [rax+0x4],bx
  436011:	mov    WORD PTR [rax+0x6],dx
  436015:	pop    rbx
  436016:	pop    rbp
  436017:	pop    r12
  436019:	ret    
  43601a:	nop    WORD PTR [rax+rax*1+0x0]
  436020:	endbr64 
  436024:	push   r12
  436026:	mov    r12d,ecx
  436029:	push   rbp
  43602a:	mov    rbp,rsi
  43602d:	mov    esi,0xe
  436032:	push   rbx
  436033:	mov    rbx,rdx
  436036:	call   430930 <xmlStrEqual@plt+0x2c9f0>
  43603b:	movbe  WORD PTR [rax+0xc],r12w
  436042:	mov    edx,DWORD PTR [rbp+0x0]
  436045:	mov    DWORD PTR [rax],edx
  436047:	movzx  edx,WORD PTR [rbp+0x4]
  43604b:	mov    WORD PTR [rax+0x4],dx
  43604f:	mov    edx,DWORD PTR [rbx]
  436051:	mov    DWORD PTR [rax+0x6],edx
  436054:	movzx  edx,WORD PTR [rbx+0x4]
  436058:	mov    WORD PTR [rax+0xa],dx
  43605c:	pop    rbx
  43605d:	pop    rbp
  43605e:	pop    r12
  436060:	ret    
  436061:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  43606c:	nop    DWORD PTR [rax+0x0]
  436070:	endbr64 
  436074:	push   r14
  436076:	mov    r14d,ecx
  436079:	push   r13
  43607b:	mov    r13,rsi
  43607e:	mov    esi,0x14
  436083:	push   r12
  436085:	mov    r12,rdx
  436088:	push   rbp
  436089:	mov    rbp,rdi
  43608c:	push   rbx
  43608d:	call   430930 <xmlStrEqual@plt+0x2c9f0>
  436092:	mov    rbx,rax
  436095:	mov    eax,0x45
  43609a:	mov    WORD PTR [rbx],ax
  43609d:	mov    rsi,0x474ac0
  4360a4:	mov    edx,0x40
  4360a9:	movbe  ax,WORD PTR [rbp+0x14]
  4360af:	mov    BYTE PTR [rbx+0x9],r14b
  4360b3:	mov    BYTE PTR [rbx+0x8],0xff
  4360b7:	mov    WORD PTR [rbx+0x2],ax
  4360bb:	movzx  eax,WORD PTR [rsi]
  4360be:	mov    WORD PTR [rbx+0x6],dx
  4360c2:	inc    eax
  4360c4:	mov    WORD PTR [rsi],ax
  4360c7:	movbe  WORD PTR [rbx+0x4],ax
  4360cd:	mov    eax,DWORD PTR [r13+0x0]
  4360d1:	mov    rdi,rbx
  4360d4:	mov    DWORD PTR [rbx+0xc],eax
  4360d7:	mov    esi,0x14
  4360dc:	mov    eax,DWORD PTR [r12]
  4360e0:	mov    DWORD PTR [rbx+0x10],eax
  4360e3:	call   42d9c0 <xmlStrEqual@plt+0x29a80>
  4360e8:	mov    WORD PTR [rbx+0xa],ax
  4360ec:	mov    rax,rbx
  4360ef:	pop    rbx
  4360f0:	pop    rbp
  4360f1:	pop    r12
  4360f3:	pop    r13
  4360f5:	pop    r14
  4360f7:	ret    
  4360f8:	nop    DWORD PTR [rax+rax*1+0x0]
  436100:	endbr64 
  436104:	push   r13
  436106:	mov    r13d,ecx
  436109:	push   r12
  43610b:	push   rbp
  43610c:	mov    rbp,rsi
  43610f:	mov    esi,0x28
  436114:	push   rbx
  436115:	mov    rbx,rdx
  436118:	sub    rsp,0x8
  43611c:	mov    r12d,DWORD PTR [rdi+0x14]
  436120:	call   430930 <xmlStrEqual@plt+0x2c9f0>
  436125:	mov    BYTE PTR [rax+0x7],0xff
  436129:	mov    BYTE PTR [rax],0x60
  43612c:	mov    BYTE PTR [rax+0x6],r13b
  436130:	movbe  WORD PTR [rax+0x4],r12w
  436137:	vmovdqu xmm0,XMMWORD PTR [rbp+0x0]
  43613c:	vmovups XMMWORD PTR [rax+0x8],xmm0
  436141:	vmovdqu xmm1,XMMWORD PTR [rbx]
  436145:	vmovups XMMWORD PTR [rax+0x18],xmm1
  43614a:	add    rsp,0x8
  43614e:	pop    rbx
  43614f:	pop    rbp
  436150:	pop    r12
  436152:	pop    r13
  436154:	ret    
  436155:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  436160:	endbr64 
  436164:	push   r14
  436166:	mov    r14d,ecx
  436169:	push   r13
  43616b:	mov    r13,rdi
  43616e:	mov    rdi,rsi
  436171:	push   r12
  436173:	push   rbp
  436174:	mov    rbp,rdx
  436177:	push   rbx
  436178:	mov    rbx,rsi
  43617b:	call   425cc0 <xmlStrEqual@plt+0x21d80>
  436180:	mov    rdi,rbp
  436183:	mov    r12d,eax
  436186:	call   425cc0 <xmlStrEqual@plt+0x21d80>
  43618b:	cmp    r12d,eax
  43618e:	jne    4361b8 <xmlStrEqual@plt+0x32278>
  436190:	mov    rdi,rbx
  436193:	call   425cc0 <xmlStrEqual@plt+0x21d80>
  436198:	cmp    eax,0x2
  43619b:	je     436230 <xmlStrEqual@plt+0x322f0>
  4361a1:	cmp    eax,0xa
  4361a4:	je     436200 <xmlStrEqual@plt+0x322c0>
  4361a6:	pop    rbx
  4361a7:	pop    rbp
  4361a8:	pop    r12
  4361aa:	pop    r13
  4361ac:	xor    eax,eax
  4361ae:	pop    r14
  4361b0:	ret    
  4361b1:	nop    DWORD PTR [rax+0x0]
  4361b8:	mov    rax,0x469e3c
  4361bf:	mov    eax,DWORD PTR [rax]
  4361c1:	test   eax,eax
  4361c3:	jle    4361a6 <xmlStrEqual@plt+0x32266>
  4361c5:	mov    rdi,rbp
  4361c8:	call   426440 <xmlStrEqual@plt+0x22500>
  4361cd:	mov    rdi,rbx
  4361d0:	mov    rbp,rax
  4361d3:	call   426440 <xmlStrEqual@plt+0x22500>
  4361d8:	mov    rdx,rax
  4361db:	mov    rcx,rbp
  4361de:	xor    eax,eax
  4361e0:	lea    rsi,[rip+0x1b679]        # 451860 <xmlStrEqual@plt+0x4d920>
  4361e7:	mov    edi,0x5
  4361ec:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  4361f1:	pop    rbx
  4361f2:	pop    rbp
  4361f3:	pop    r12
  4361f5:	pop    r13
  4361f7:	xor    eax,eax
  4361f9:	pop    r14
  4361fb:	ret    
  4361fc:	nop    DWORD PTR [rax+0x0]
  436200:	mov    rdi,rbp
  436203:	call   425cd0 <xmlStrEqual@plt+0x21d90>
  436208:	mov    rdi,rbx
  43620b:	mov    rbp,rax
  43620e:	call   425cd0 <xmlStrEqual@plt+0x21d90>
  436213:	pop    rbx
  436214:	mov    rdx,rbp
  436217:	pop    rbp
  436218:	pop    r12
  43621a:	mov    rdi,r13
  43621d:	pop    r13
  43621f:	mov    ecx,r14d
  436222:	mov    rsi,rax
  436225:	pop    r14
  436227:	jmp    436100 <xmlStrEqual@plt+0x321c0>
  43622c:	nop    DWORD PTR [rax+0x0]
  436230:	mov    rdi,rbp
  436233:	call   425cd0 <xmlStrEqual@plt+0x21d90>
  436238:	mov    rdi,rbx
  43623b:	mov    rbp,rax
  43623e:	call   425cd0 <xmlStrEqual@plt+0x21d90>
  436243:	pop    rbx
  436244:	mov    rdx,rbp
  436247:	pop    rbp
  436248:	pop    r12
  43624a:	mov    rdi,r13
  43624d:	pop    r13
  43624f:	mov    ecx,r14d
  436252:	mov    rsi,rax
  436255:	pop    r14
  436257:	jmp    436070 <xmlStrEqual@plt+0x32130>
  43625c:	nop    DWORD PTR [rax+0x0]
  436260:	endbr64 
  436264:	push   r12
  436266:	movzx  edx,dx
  436269:	movzx  esi,si
  43626c:	push   rbp
  43626d:	mov    r12,rcx
  436270:	mov    rbp,r8
  436273:	push   rbx
  436274:	mov    rbx,rdi
  436277:	call   435fe0 <xmlStrEqual@plt+0x320a0>
  43627c:	test   rax,rax
  43627f:	je     436310 <xmlStrEqual@plt+0x323d0>
  436285:	mov    rax,QWORD PTR [rbx+0x38]
  436289:	mov    ecx,0x11
  43628e:	sub    rax,QWORD PTR [rbx+0x30]
  436292:	mov    WORD PTR [rbx+0x1c],ax
  436296:	mov    rdx,rbp
  436299:	mov    rsi,r12
  43629c:	mov    rdi,rbx
  43629f:	call   436160 <xmlStrEqual@plt+0x32220>
  4362a4:	test   rax,rax
  4362a7:	je     436348 <xmlStrEqual@plt+0x32408>
  4362ad:	mov    rbp,QWORD PTR [rbx+0x30]
  4362b1:	mov    rax,QWORD PTR [rbx+0x38]
  4362b5:	movzx  edx,WORD PTR [rbx+0x1c]
  4362b9:	sub    rax,rbp
  4362bc:	mov    WORD PTR [rbx+0x1a],ax
  4362c0:	add    rbp,rdx
  4362c3:	mov    eax,0x0
  4362c8:	cmp    dx,0xffff
  4362cc:	mov    rdi,r12
  4362cf:	cmove  rbp,rax
  4362d3:	call   425cc0 <xmlStrEqual@plt+0x21d80>
  4362d8:	movzx  edx,WORD PTR [rbx+0x1a]
  4362dc:	cmp    dx,0xffff
  4362e0:	je     436340 <xmlStrEqual@plt+0x32400>
  4362e2:	add    rdx,QWORD PTR [rbx+0x30]
  4362e6:	movbe  si,WORD PTR [rbp+0x4]
  4362ec:	mov    ecx,eax
  4362ee:	movzx  esi,si
  4362f1:	mov    rdi,rbp
  4362f4:	call   42dba0 <xmlStrEqual@plt+0x29c60>
  4362f9:	cmp    ax,0xffff
  4362fd:	je     436370 <xmlStrEqual@plt+0x32430>
  4362ff:	mov    WORD PTR [rbp+0x6],ax
  436303:	mov    eax,0x1
  436308:	pop    rbx
  436309:	pop    rbp
  43630a:	pop    r12
  43630c:	ret    
  43630d:	nop    DWORD PTR [rax]
  436310:	mov    rax,0x469e3c
  436317:	mov    ecx,DWORD PTR [rax]
  436319:	test   ecx,ecx
  43631b:	jg     436328 <xmlStrEqual@plt+0x323e8>
  43631d:	xor    eax,eax
  43631f:	pop    rbx
  436320:	pop    rbp
  436321:	pop    r12
  436323:	ret    
  436324:	nop    DWORD PTR [rax+0x0]
  436328:	xor    eax,eax
  43632a:	lea    rsi,[rip+0x1b567]        # 451898 <xmlStrEqual@plt+0x4d958>
  436331:	mov    edi,0x5
  436336:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  43633b:	xor    eax,eax
  43633d:	jmp    43631f <xmlStrEqual@plt+0x323df>
  43633f:	nop
  436340:	xor    edx,edx
  436342:	jmp    4362e6 <xmlStrEqual@plt+0x323a6>
  436344:	nop    DWORD PTR [rax+0x0]
  436348:	mov    rax,0x469e3c
  43634f:	mov    edx,DWORD PTR [rax]
  436351:	test   edx,edx
  436353:	jle    43631d <xmlStrEqual@plt+0x323dd>
  436355:	xor    eax,eax
  436357:	lea    rsi,[rip+0x1b562]        # 4518c0 <xmlStrEqual@plt+0x4d980>
  43635e:	mov    edi,0x5
  436363:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  436368:	xor    eax,eax
  43636a:	jmp    436308 <xmlStrEqual@plt+0x323c8>
  43636c:	nop    DWORD PTR [rax+0x0]
  436370:	mov    rax,0x469e3c
  436377:	mov    eax,DWORD PTR [rax]
  436379:	test   eax,eax
  43637b:	jle    43631d <xmlStrEqual@plt+0x323dd>
  43637d:	xor    eax,eax
  43637f:	lea    rsi,[rip+0x1b562]        # 4518e8 <xmlStrEqual@plt+0x4d9a8>
  436386:	mov    edi,0x5
  43638b:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  436390:	xor    eax,eax
  436392:	jmp    436308 <xmlStrEqual@plt+0x323c8>
  436397:	nop    WORD PTR [rax+rax*1+0x0]
  4363a0:	endbr64 
  4363a4:	push   r12
  4363a6:	movzx  edx,dx
  4363a9:	movzx  esi,si
  4363ac:	push   rbp
  4363ad:	mov    r12,rcx
  4363b0:	mov    rbp,r8
  4363b3:	push   rbx
  4363b4:	mov    rbx,rdi
  4363b7:	call   435fe0 <xmlStrEqual@plt+0x320a0>
  4363bc:	test   rax,rax
  4363bf:	je     436450 <xmlStrEqual@plt+0x32510>
  4363c5:	mov    rax,QWORD PTR [rbx+0x38]
  4363c9:	mov    ecx,0x11
  4363ce:	sub    rax,QWORD PTR [rbx+0x30]
  4363d2:	mov    WORD PTR [rbx+0x22],ax
  4363d6:	mov    rdx,rbp
  4363d9:	mov    rsi,r12
  4363dc:	mov    rdi,rbx
  4363df:	call   436160 <xmlStrEqual@plt+0x32220>
  4363e4:	test   rax,rax
  4363e7:	je     436488 <xmlStrEqual@plt+0x32548>
  4363ed:	mov    rbp,QWORD PTR [rbx+0x30]
  4363f1:	mov    rax,QWORD PTR [rbx+0x38]
  4363f5:	movzx  edx,WORD PTR [rbx+0x22]
  4363f9:	sub    rax,rbp
  4363fc:	mov    WORD PTR [rbx+0x20],ax
  436400:	add    rbp,rdx
  436403:	mov    eax,0x0
  436408:	cmp    dx,0xffff
  43640c:	mov    rdi,r12
  43640f:	cmove  rbp,rax
  436413:	call   425cc0 <xmlStrEqual@plt+0x21d80>
  436418:	movzx  edx,WORD PTR [rbx+0x20]
  43641c:	cmp    dx,0xffff
  436420:	je     436480 <xmlStrEqual@plt+0x32540>
  436422:	add    rdx,QWORD PTR [rbx+0x30]
  436426:	movbe  si,WORD PTR [rbp+0x4]
  43642c:	mov    ecx,eax
  43642e:	movzx  esi,si
  436431:	mov    rdi,rbp
  436434:	call   42dba0 <xmlStrEqual@plt+0x29c60>
  436439:	cmp    ax,0xffff
  43643d:	je     4364b0 <xmlStrEqual@plt+0x32570>
  43643f:	mov    WORD PTR [rbp+0x6],ax
  436443:	mov    eax,0x1
  436448:	pop    rbx
  436449:	pop    rbp
  43644a:	pop    r12
  43644c:	ret    
  43644d:	nop    DWORD PTR [rax]
  436450:	mov    rax,0x469e3c
  436457:	mov    ecx,DWORD PTR [rax]
  436459:	test   ecx,ecx
  43645b:	jg     436468 <xmlStrEqual@plt+0x32528>
  43645d:	xor    eax,eax
  43645f:	pop    rbx
  436460:	pop    rbp
  436461:	pop    r12
  436463:	ret    
  436464:	nop    DWORD PTR [rax+0x0]
  436468:	xor    eax,eax
  43646a:	lea    rsi,[rip+0x1b427]        # 451898 <xmlStrEqual@plt+0x4d958>
  436471:	mov    edi,0x5
  436476:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  43647b:	xor    eax,eax
  43647d:	jmp    43645f <xmlStrEqual@plt+0x3251f>
  43647f:	nop
  436480:	xor    edx,edx
  436482:	jmp    436426 <xmlStrEqual@plt+0x324e6>
  436484:	nop    DWORD PTR [rax+0x0]
  436488:	mov    rax,0x469e3c
  43648f:	mov    edx,DWORD PTR [rax]
  436491:	test   edx,edx
  436493:	jle    43645d <xmlStrEqual@plt+0x3251d>
  436495:	xor    eax,eax
  436497:	lea    rsi,[rip+0x1b422]        # 4518c0 <xmlStrEqual@plt+0x4d980>
  43649e:	mov    edi,0x5
  4364a3:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  4364a8:	xor    eax,eax
  4364aa:	jmp    436448 <xmlStrEqual@plt+0x32508>
  4364ac:	nop    DWORD PTR [rax+0x0]
  4364b0:	mov    rax,0x469e3c
  4364b7:	mov    eax,DWORD PTR [rax]
  4364b9:	test   eax,eax
  4364bb:	jle    43645d <xmlStrEqual@plt+0x3251d>
  4364bd:	xor    eax,eax
  4364bf:	lea    rsi,[rip+0x1b422]        # 4518e8 <xmlStrEqual@plt+0x4d9a8>
  4364c6:	mov    edi,0x5
  4364cb:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  4364d0:	xor    eax,eax
  4364d2:	jmp    436448 <xmlStrEqual@plt+0x32508>
  4364d7:	nop    WORD PTR [rax+rax*1+0x0]
  4364e0:	endbr64 
  4364e4:	push   r12
  4364e6:	push   rbp
  4364e7:	mov    rbp,rsi
  4364ea:	push   rbx
  4364eb:	sub    rsp,0x60
  4364ef:	vmovdqu xmm0,XMMWORD PTR [rdi]
  4364f3:	vmovdqu xmm1,XMMWORD PTR [rdi+0x10]
  4364f8:	vmovdqu xmm2,XMMWORD PTR [rdi+0x20]
  4364fd:	vmovdqu xmm3,XMMWORD PTR [rdi+0x30]
  436502:	lea    rdi,[rsp+0x10]
  436507:	mov    rax,QWORD PTR fs:0x28
  436510:	mov    QWORD PTR [rsp+0x58],rax
  436515:	xor    eax,eax
  436517:	vmovaps XMMWORD PTR [rsp+0x10],xmm0
  43651d:	vmovaps XMMWORD PTR [rsp+0x20],xmm1
  436523:	vmovaps XMMWORD PTR [rsp+0x30],xmm2
  436529:	vmovaps XMMWORD PTR [rsp+0x40],xmm3
  43652f:	call   430a90 <xmlStrEqual@plt+0x2cb50>
  436534:	cmp    eax,0x1
  436537:	jne    436598 <xmlStrEqual@plt+0x32658>
  436539:	movzx  ebx,WORD PTR [rsp+0x2a]
  43653e:	mov    DWORD PTR [rsp+0xc],eax
  436542:	lea    r12,[rbp+0x20]
  436546:	cmp    bx,0xffff
  43654a:	je     4366b1 <xmlStrEqual@plt+0x32771>
  436550:	mov    esi,0x1
  436555:	mov    rdi,rbp
  436558:	add    rbx,QWORD PTR [rsp+0x40]
  43655d:	call   424dd0 <xmlStrEqual@plt+0x20e90>
  436562:	mov    esi,0x1
  436567:	mov    rdi,r12
  43656a:	call   424dd0 <xmlStrEqual@plt+0x20e90>
  43656f:	movzx  edx,BYTE PTR [rbx]
  436572:	mov    eax,DWORD PTR [rsp+0xc]
  436576:	shr    dl,0x4
  436579:	cmp    dl,0x4
  43657c:	je     4365d8 <xmlStrEqual@plt+0x32698>
  43657e:	cmp    dl,0x6
  436581:	je     436660 <xmlStrEqual@plt+0x32720>
  436587:	mov    rax,0x469e3c
  43658e:	cmp    DWORD PTR [rax],0x1
  436591:	jg     4365c0 <xmlStrEqual@plt+0x32680>
  436593:	nop    DWORD PTR [rax+rax*1+0x0]
  436598:	xor    eax,eax
  43659a:	mov    rcx,QWORD PTR [rsp+0x58]
  43659f:	xor    rcx,QWORD PTR fs:0x28
  4365a8:	jne    4366ac <xmlStrEqual@plt+0x3276c>
  4365ae:	add    rsp,0x60
  4365b2:	pop    rbx
  4365b3:	pop    rbp
  4365b4:	pop    r12
  4365b6:	ret    
  4365b7:	nop    WORD PTR [rax+rax*1+0x0]
  4365c0:	lea    rsi,[rip+0x1b341]        # 451908 <xmlStrEqual@plt+0x4d9c8>
  4365c7:	mov    edi,0x6
  4365cc:	xor    eax,eax
  4365ce:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  4365d3:	jmp    436598 <xmlStrEqual@plt+0x32658>
  4365d5:	nop    DWORD PTR [rax]
  4365d8:	lea    rsi,[rbx+0xc]
  4365dc:	mov    edx,0x2
  4365e1:	mov    rdi,rbp
  4365e4:	mov    DWORD PTR [rsp+0xc],eax
  4365e8:	call   425480 <xmlStrEqual@plt+0x21540>
  4365ed:	lea    rsi,[rbx+0x10]
  4365f1:	mov    edx,0x2
  4365f6:	mov    rdi,r12
  4365f9:	call   425480 <xmlStrEqual@plt+0x21540>
  4365fe:	movzx  ecx,BYTE PTR [rbx+0x9]
  436602:	mov    esi,DWORD PTR [rsp+0x24]
  436606:	mov    BYTE PTR [rbp+0x44],cl
  436609:	mov    eax,DWORD PTR [rsp+0xc]
  43660d:	movzx  edx,BYTE PTR [rbx]
  436610:	and    edx,0xf
  436613:	shl    edx,0x2
  436616:	cmp    edx,esi
  436618:	ja     436627 <xmlStrEqual@plt+0x326e7>
  43661a:	mov    edi,edx
  43661c:	sub    esi,edx
  43661e:	add    QWORD PTR [rsp+0x48],rdi
  436623:	mov    DWORD PTR [rsp+0x24],esi
  436627:	cmp    cl,0x11
  43662a:	je     436640 <xmlStrEqual@plt+0x32700>
  43662c:	cmp    cl,0x6
  43662f:	je     436640 <xmlStrEqual@plt+0x32700>
  436631:	mov    DWORD PTR [rbp+0x40],0x0
  436638:	jmp    43659a <xmlStrEqual@plt+0x3265a>
  43663d:	nop    DWORD PTR [rax]
  436640:	mov    rdx,QWORD PTR [rsp+0x48]
  436645:	movbe  cx,WORD PTR [rdx]
  43664a:	mov    WORD PTR [rbp+0x40],cx
  43664e:	movbe  dx,WORD PTR [rdx+0x2]
  436654:	mov    WORD PTR [rbp+0x42],dx
  436658:	jmp    43659a <xmlStrEqual@plt+0x3265a>
  43665d:	nop    DWORD PTR [rax]
  436660:	lea    rsi,[rbx+0x8]
  436664:	mov    edx,0xa
  436669:	mov    rdi,rbp
  43666c:	mov    DWORD PTR [rsp+0xc],eax
  436670:	call   425480 <xmlStrEqual@plt+0x21540>
  436675:	mov    edx,0xa
  43667a:	lea    rsi,[rbx+0x18]
  43667e:	mov    rdi,r12
  436681:	call   425480 <xmlStrEqual@plt+0x21540>
  436686:	mov    edx,DWORD PTR [rsp+0x24]
  43668a:	movzx  ecx,BYTE PTR [rbx+0x6]
  43668e:	cmp    edx,0x27
  436691:	mov    BYTE PTR [rbp+0x44],cl
  436694:	mov    eax,DWORD PTR [rsp+0xc]
  436698:	jbe    436627 <xmlStrEqual@plt+0x326e7>
  43669a:	sub    edx,0x28
  43669d:	add    QWORD PTR [rsp+0x48],0x28
  4366a3:	mov    DWORD PTR [rsp+0x24],edx
  4366a7:	jmp    436627 <xmlStrEqual@plt+0x326e7>
  4366ac:	call   403c00 <__stack_chk_fail@plt>
  4366b1:	mov    rdi,rbp
  4366b4:	mov    esi,0x1
  4366b9:	call   424dd0 <xmlStrEqual@plt+0x20e90>
  4366be:	mov    esi,0x1
  4366c3:	mov    rdi,r12
  4366c6:	call   424dd0 <xmlStrEqual@plt+0x20e90>
  4366cb:	mov    rax,QWORD PTR ds:0x0
  4366d3:	ud2    
  4366d5:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4366e0:	endbr64 
  4366e4:	push   r12
  4366e6:	push   rbp
  4366e7:	mov    rbp,rsi
  4366ea:	push   rbx
  4366eb:	sub    rsp,0x60
  4366ef:	vmovdqu xmm0,XMMWORD PTR [rdi]
  4366f3:	vmovdqu xmm1,XMMWORD PTR [rdi+0x10]
  4366f8:	vmovdqu xmm2,XMMWORD PTR [rdi+0x20]
  4366fd:	vmovdqu xmm3,XMMWORD PTR [rdi+0x30]
  436702:	lea    rdi,[rsp+0x10]
  436707:	mov    rax,QWORD PTR fs:0x28
  436710:	mov    QWORD PTR [rsp+0x58],rax
  436715:	xor    eax,eax
  436717:	vmovaps XMMWORD PTR [rsp+0x10],xmm0
  43671d:	vmovaps XMMWORD PTR [rsp+0x20],xmm1
  436723:	vmovaps XMMWORD PTR [rsp+0x30],xmm2
  436729:	vmovaps XMMWORD PTR [rsp+0x40],xmm3
  43672f:	call   430bb0 <xmlStrEqual@plt+0x2cc70>
  436734:	cmp    eax,0x1
  436737:	jne    436798 <xmlStrEqual@plt+0x32858>
  436739:	movzx  ebx,WORD PTR [rsp+0x30]
  43673e:	mov    DWORD PTR [rsp+0xc],eax
  436742:	lea    r12,[rbp+0x20]
  436746:	cmp    bx,0xffff
  43674a:	je     4368b1 <xmlStrEqual@plt+0x32971>
  436750:	mov    esi,0x1
  436755:	mov    rdi,rbp
  436758:	add    rbx,QWORD PTR [rsp+0x40]
  43675d:	call   424dd0 <xmlStrEqual@plt+0x20e90>
  436762:	mov    esi,0x1
  436767:	mov    rdi,r12
  43676a:	call   424dd0 <xmlStrEqual@plt+0x20e90>
  43676f:	movzx  edx,BYTE PTR [rbx]
  436772:	mov    eax,DWORD PTR [rsp+0xc]
  436776:	shr    dl,0x4
  436779:	cmp    dl,0x4
  43677c:	je     4367d8 <xmlStrEqual@plt+0x32898>
  43677e:	cmp    dl,0x6
  436781:	je     436860 <xmlStrEqual@plt+0x32920>
  436787:	mov    rax,0x469e3c
  43678e:	cmp    DWORD PTR [rax],0x1
  436791:	jg     4367c0 <xmlStrEqual@plt+0x32880>
  436793:	nop    DWORD PTR [rax+rax*1+0x0]
  436798:	xor    eax,eax
  43679a:	mov    rcx,QWORD PTR [rsp+0x58]
  43679f:	xor    rcx,QWORD PTR fs:0x28
  4367a8:	jne    4368ac <xmlStrEqual@plt+0x3296c>
  4367ae:	add    rsp,0x60
  4367b2:	pop    rbx
  4367b3:	pop    rbp
  4367b4:	pop    r12
  4367b6:	ret    
  4367b7:	nop    WORD PTR [rax+rax*1+0x0]
  4367c0:	lea    rsi,[rip+0x1b169]        # 451930 <xmlStrEqual@plt+0x4d9f0>
  4367c7:	mov    edi,0x6
  4367cc:	xor    eax,eax
  4367ce:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  4367d3:	jmp    436798 <xmlStrEqual@plt+0x32858>
  4367d5:	nop    DWORD PTR [rax]
  4367d8:	lea    rsi,[rbx+0xc]
  4367dc:	mov    edx,0x2
  4367e1:	mov    rdi,rbp
  4367e4:	mov    DWORD PTR [rsp+0xc],eax
  4367e8:	call   425480 <xmlStrEqual@plt+0x21540>
  4367ed:	lea    rsi,[rbx+0x10]
  4367f1:	mov    edx,0x2
  4367f6:	mov    rdi,r12
  4367f9:	call   425480 <xmlStrEqual@plt+0x21540>
  4367fe:	movzx  ecx,BYTE PTR [rbx+0x9]
  436802:	mov    esi,DWORD PTR [rsp+0x24]
  436806:	mov    BYTE PTR [rbp+0x44],cl
  436809:	mov    eax,DWORD PTR [rsp+0xc]
  43680d:	movzx  edx,BYTE PTR [rbx]
  436810:	and    edx,0xf
  436813:	shl    edx,0x2
  436816:	cmp    edx,esi
  436818:	ja     436827 <xmlStrEqual@plt+0x328e7>
  43681a:	mov    edi,edx
  43681c:	sub    esi,edx
  43681e:	add    QWORD PTR [rsp+0x48],rdi
  436823:	mov    DWORD PTR [rsp+0x24],esi
  436827:	cmp    cl,0x11
  43682a:	je     436840 <xmlStrEqual@plt+0x32900>
  43682c:	cmp    cl,0x6
  43682f:	je     436840 <xmlStrEqual@plt+0x32900>
  436831:	mov    DWORD PTR [rbp+0x40],0x0
  436838:	jmp    43679a <xmlStrEqual@plt+0x3285a>
  43683d:	nop    DWORD PTR [rax]
  436840:	mov    rdx,QWORD PTR [rsp+0x48]
  436845:	movbe  cx,WORD PTR [rdx]
  43684a:	mov    WORD PTR [rbp+0x40],cx
  43684e:	movbe  dx,WORD PTR [rdx+0x2]
  436854:	mov    WORD PTR [rbp+0x42],dx
  436858:	jmp    43679a <xmlStrEqual@plt+0x3285a>
  43685d:	nop    DWORD PTR [rax]
  436860:	lea    rsi,[rbx+0x8]
  436864:	mov    edx,0xa
  436869:	mov    rdi,rbp
  43686c:	mov    DWORD PTR [rsp+0xc],eax
  436870:	call   425480 <xmlStrEqual@plt+0x21540>
  436875:	mov    edx,0xa
  43687a:	lea    rsi,[rbx+0x18]
  43687e:	mov    rdi,r12
  436881:	call   425480 <xmlStrEqual@plt+0x21540>
  436886:	mov    edx,DWORD PTR [rsp+0x24]
  43688a:	movzx  ecx,BYTE PTR [rbx+0x6]
  43688e:	cmp    edx,0x27
  436891:	mov    BYTE PTR [rbp+0x44],cl
  436894:	mov    eax,DWORD PTR [rsp+0xc]
  436898:	jbe    436827 <xmlStrEqual@plt+0x328e7>
  43689a:	sub    edx,0x28
  43689d:	add    QWORD PTR [rsp+0x48],0x28
  4368a3:	mov    DWORD PTR [rsp+0x24],edx
  4368a7:	jmp    436827 <xmlStrEqual@plt+0x328e7>
  4368ac:	call   403c00 <__stack_chk_fail@plt>
  4368b1:	mov    rdi,rbp
  4368b4:	mov    esi,0x1
  4368b9:	call   424dd0 <xmlStrEqual@plt+0x20e90>
  4368be:	mov    esi,0x1
  4368c3:	mov    rdi,r12
  4368c6:	call   424dd0 <xmlStrEqual@plt+0x20e90>
  4368cb:	mov    rax,QWORD PTR ds:0x0
  4368d3:	ud2    
  4368d5:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4368e0:	endbr64 
  4368e4:	push   rbx
  4368e5:	mov    ebx,0x2
  4368ea:	movzx  eax,BYTE PTR [rdi]
  4368ed:	shr    al,0x4
  4368f0:	cmp    al,0x4
  4368f2:	je     43690b <xmlStrEqual@plt+0x329cb>
  4368f4:	mov    ebx,0xa
  4368f9:	cmp    al,0x6
  4368fb:	je     43690b <xmlStrEqual@plt+0x329cb>
  4368fd:	mov    rax,0x469e3c
  436904:	xor    ebx,ebx
  436906:	cmp    DWORD PTR [rax],0x1
  436909:	jg     436910 <xmlStrEqual@plt+0x329d0>
  43690b:	mov    eax,ebx
  43690d:	pop    rbx
  43690e:	ret    
  43690f:	nop
  436910:	xor    eax,eax
  436912:	lea    rsi,[rip+0x1b16d]        # 451a86 <xmlStrEqual@plt+0x4db46>
  436919:	mov    edi,0x6
  43691e:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  436923:	mov    eax,ebx
  436925:	pop    rbx
  436926:	ret    
  436927:	nop    WORD PTR [rax+rax*1+0x0]
  436930:	endbr64 
  436934:	push   r12
  436936:	push   rbp
  436937:	push   rbx
  436938:	mov    rbx,rdi
  43693b:	movzx  eax,WORD PTR [rdi+0x42]
  43693f:	movzx  r12d,WORD PTR [rdi+0x40]
  436944:	shl    eax,0x10
  436947:	add    r12d,eax
  43694a:	call   425890 <xmlStrEqual@plt+0x21950>
  43694f:	cmp    ax,0x2
  436953:	je     4369c0 <xmlStrEqual@plt+0x32a80>
  436955:	cmp    ax,0xa
  436959:	jne    4369b8 <xmlStrEqual@plt+0x32a78>
  43695b:	mov    edi,0x2c
  436960:	call   435000 <xmlStrEqual@plt+0x310c0>
  436965:	mov    rbp,rax
  436968:	mov    rsi,rbx
  43696b:	mov    rdi,rax
  43696e:	call   4250b0 <xmlStrEqual@plt+0x21170>
  436973:	lea    rsi,[rbx+0x20]
  436977:	lea    rdi,[rbp+0x10]
  43697b:	call   4250b0 <xmlStrEqual@plt+0x21170>
  436980:	mov    DWORD PTR [rbp+0x20],r12d
  436984:	mov    esi,0xb
  436989:	movzx  eax,BYTE PTR [rbx+0x44]
  43698d:	mov    DWORD PTR [rbp+0x24],eax
  436990:	mov    eax,DWORD PTR [rbx+0x48]
  436993:	mov    DWORD PTR [rbp+0x28],eax
  436996:	mov    rdi,rbp
  436999:	mov    edx,0x7dd
  43699e:	call   435de0 <xmlStrEqual@plt+0x31ea0>
  4369a3:	mov    ebx,eax
  4369a5:	mov    rdi,rbp
  4369a8:	call   4037b0 <free@plt>
  4369ad:	mov    eax,ebx
  4369af:	pop    rbx
  4369b0:	pop    rbp
  4369b1:	pop    r12
  4369b3:	ret    
  4369b4:	nop    DWORD PTR [rax+0x0]
  4369b8:	xor    esi,esi
  4369ba:	xor    ebp,ebp
  4369bc:	jmp    436996 <xmlStrEqual@plt+0x32a56>
  4369be:	xchg   ax,ax
  4369c0:	mov    edi,0x14
  4369c5:	call   435000 <xmlStrEqual@plt+0x310c0>
  4369ca:	mov    rbp,rax
  4369cd:	mov    rsi,rbx
  4369d0:	mov    rdi,rax
  4369d3:	call   4250b0 <xmlStrEqual@plt+0x21170>
  4369d8:	lea    rsi,[rbx+0x20]
  4369dc:	lea    rdi,[rbp+0x4]
  4369e0:	call   4250b0 <xmlStrEqual@plt+0x21170>
  4369e5:	mov    DWORD PTR [rbp+0x8],r12d
  4369e9:	mov    esi,0x5
  4369ee:	movzx  eax,BYTE PTR [rbx+0x44]
  4369f2:	mov    DWORD PTR [rbp+0xc],eax
  4369f5:	mov    eax,DWORD PTR [rbx+0x48]
  4369f8:	mov    DWORD PTR [rbp+0x10],eax
  4369fb:	jmp    436996 <xmlStrEqual@plt+0x32a56>
  4369fd:	nop    DWORD PTR [rax]
  436a00:	endbr64 
  436a04:	push   r12
  436a06:	mov    r12,rsi
  436a09:	push   rbp
  436a0a:	mov    rbp,rdi
  436a0d:	push   rbx
  436a0e:	call   425890 <xmlStrEqual@plt+0x21950>
  436a13:	cmp    ax,0x2
  436a17:	je     436a80 <xmlStrEqual@plt+0x32b40>
  436a19:	cmp    ax,0xa
  436a1d:	jne    436a70 <xmlStrEqual@plt+0x32b30>
  436a1f:	mov    edi,0x20
  436a24:	call   435000 <xmlStrEqual@plt+0x310c0>
  436a29:	mov    rbx,rax
  436a2c:	mov    rsi,rbp
  436a2f:	mov    rdi,rax
  436a32:	call   4250b0 <xmlStrEqual@plt+0x21170>
  436a37:	mov    rsi,r12
  436a3a:	lea    rdi,[rbx+0x10]
  436a3e:	call   4250b0 <xmlStrEqual@plt+0x21170>
  436a43:	mov    esi,0x8
  436a48:	mov    rdi,rbx
  436a4b:	mov    edx,0x7dd
  436a50:	call   435de0 <xmlStrEqual@plt+0x31ea0>
  436a55:	mov    rdi,rbx
  436a58:	mov    ebp,eax
  436a5a:	call   4037b0 <free@plt>
  436a5f:	pop    rbx
  436a60:	mov    eax,ebp
  436a62:	pop    rbp
  436a63:	pop    r12
  436a65:	ret    
  436a66:	nop    WORD PTR cs:[rax+rax*1+0x0]
  436a70:	xor    esi,esi
  436a72:	xor    ebx,ebx
  436a74:	jmp    436a48 <xmlStrEqual@plt+0x32b08>
  436a76:	nop    WORD PTR cs:[rax+rax*1+0x0]
  436a80:	mov    edi,0x8
  436a85:	call   435000 <xmlStrEqual@plt+0x310c0>
  436a8a:	mov    rbx,rax
  436a8d:	mov    rsi,rbp
  436a90:	mov    rdi,rax
  436a93:	call   4250b0 <xmlStrEqual@plt+0x21170>
  436a98:	mov    rsi,r12
  436a9b:	lea    rdi,[rbx+0x4]
  436a9f:	call   4250b0 <xmlStrEqual@plt+0x21170>
  436aa4:	mov    esi,0x2
  436aa9:	jmp    436a48 <xmlStrEqual@plt+0x32b08>
  436aab:	nop    DWORD PTR [rax+rax*1+0x0]
  436ab0:	endbr64 
  436ab4:	mov    eax,DWORD PTR [rsi+0x40]
  436ab7:	cmp    DWORD PTR [rdi+0x40],eax
  436aba:	je     436ac0 <xmlStrEqual@plt+0x32b80>
  436abc:	xor    eax,eax
  436abe:	ret    
  436abf:	nop
  436ac0:	push   rbp
  436ac1:	mov    rbp,rsi
  436ac4:	push   rbx
  436ac5:	mov    rbx,rdi
  436ac8:	sub    rsp,0x8
  436acc:	call   425310 <xmlStrEqual@plt+0x213d0>
  436ad1:	test   eax,eax
  436ad3:	je     436ae0 <xmlStrEqual@plt+0x32ba0>
  436ad5:	xor    eax,eax
  436ad7:	add    rsp,0x8
  436adb:	pop    rbx
  436adc:	pop    rbp
  436add:	ret    
  436ade:	xchg   ax,ax
  436ae0:	lea    rsi,[rbp+0x20]
  436ae4:	lea    rdi,[rbx+0x20]
  436ae8:	call   425310 <xmlStrEqual@plt+0x213d0>
  436aed:	test   eax,eax
  436aef:	jne    436ad5 <xmlStrEqual@plt+0x32b95>
  436af1:	mov    eax,DWORD PTR [rbp+0x48]
  436af4:	cmp    DWORD PTR [rbx+0x48],eax
  436af7:	sete   al
  436afa:	movzx  eax,al
  436afd:	jmp    436ad7 <xmlStrEqual@plt+0x32b97>
  436aff:	nop
  436b00:	endbr64 
  436b04:	push   rbp
  436b05:	mov    rbp,rdi
  436b08:	mov    edi,0x50
  436b0d:	push   rbx
  436b0e:	sub    rsp,0x8
  436b12:	call   434fe0 <xmlStrEqual@plt+0x310a0>
  436b17:	mov    rbx,rax
  436b1a:	movzx  eax,WORD PTR [rbp+0x40]
  436b1e:	mov    rsi,rbp
  436b21:	mov    WORD PTR [rbx+0x40],ax
  436b25:	movzx  eax,WORD PTR [rbp+0x42]
  436b29:	mov    rdi,rbx
  436b2c:	mov    WORD PTR [rbx+0x42],ax
  436b30:	movzx  eax,BYTE PTR [rbp+0x44]
  436b34:	mov    BYTE PTR [rbx+0x44],al
  436b37:	call   424fd0 <xmlStrEqual@plt+0x21090>
  436b3c:	lea    rsi,[rbp+0x20]
  436b40:	lea    rdi,[rbx+0x20]
  436b44:	call   424fd0 <xmlStrEqual@plt+0x21090>
  436b49:	mov    eax,DWORD PTR [rbp+0x48]
  436b4c:	mov    DWORD PTR [rbx+0x48],eax
  436b4f:	add    rsp,0x8
  436b53:	mov    rax,rbx
  436b56:	pop    rbx
  436b57:	pop    rbp
  436b58:	ret    
  436b59:	nop    DWORD PTR [rax+0x0]
  436b60:	endbr64 
  436b64:	push   rbx
  436b65:	mov    rbx,rdi
  436b68:	lea    rdi,[rdi+0x20]
  436b6c:	call   425bb0 <xmlStrEqual@plt+0x21c70>
  436b71:	mov    rdi,rbx
  436b74:	call   425bb0 <xmlStrEqual@plt+0x21c70>
  436b79:	mov    rdi,rbx
  436b7c:	pop    rbx
  436b7d:	jmp    4037b0 <free@plt>
  436b82:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  436b8d:	nop    DWORD PTR [rax]
  436b90:	endbr64 
  436b94:	push   rbp
  436b95:	push   rbx
  436b96:	lea    rbx,[rip+0x3dfe3]        # 474b80 <xmlStrEqual@plt+0x70c40>
  436b9d:	sub    rsp,0x8
  436ba1:	mov    eax,DWORD PTR [rip+0x3e169]        # 474d10 <xmlStrEqual@plt+0x70dd0>
  436ba7:	lea    edx,[rax+0x1]
  436baa:	mov    eax,edx
  436bac:	shr    eax,0x1f
  436baf:	add    edx,eax
  436bb1:	and    edx,0x1
  436bb4:	sub    edx,eax
  436bb6:	movsxd rax,edx
  436bb9:	imul   rax,rax,0xc8
  436bc0:	mov    DWORD PTR [rip+0x3e14a],edx        # 474d10 <xmlStrEqual@plt+0x70dd0>
  436bc6:	add    rax,rbx
  436bc9:	mov    BYTE PTR [rax],0x0
  436bcc:	test   rdi,rdi
  436bcf:	je     437060 <xmlStrEqual@plt+0x33120>
  436bd5:	mov    rbp,rdi
  436bd8:	call   424d40 <xmlStrEqual@plt+0x20e00>
  436bdd:	movsxd rdi,DWORD PTR [rip+0x3e12c]        # 474d10 <xmlStrEqual@plt+0x70dd0>
  436be4:	mov    r9,rax
  436be7:	imul   rdi,rdi,0xc8
  436bee:	mov    rcx,0xffffffffffffffff
  436bf5:	lea    r8,[rip+0x1aea5]        # 451aa1 <xmlStrEqual@plt+0x4db61>
  436bfc:	add    rdi,rbx
  436bff:	mov    edx,0x1
  436c04:	mov    esi,0xc8
  436c09:	xor    eax,eax
  436c0b:	call   403a40 <__snprintf_chk@plt>
  436c10:	lea    rdi,[rbp+0x20]
  436c14:	call   424d40 <xmlStrEqual@plt+0x20e00>
  436c19:	movsxd rcx,DWORD PTR [rip+0x3e0f0]        # 474d10 <xmlStrEqual@plt+0x70dd0>
  436c20:	mov    r9,rax
  436c23:	imul   rcx,rcx,0xc8
  436c2a:	add    rcx,rbx
  436c2d:	mov    rdi,rcx
  436c30:	mov    esi,DWORD PTR [rdi]
  436c32:	add    rdi,0x4
  436c36:	lea    edx,[rsi-0x1010101]
  436c3c:	andn   edx,esi,edx
  436c41:	and    edx,0x80808080
  436c47:	je     436c30 <xmlStrEqual@plt+0x32cf0>
  436c49:	mov    esi,edx
  436c4b:	shr    esi,0x10
  436c4e:	test   edx,0x8080
  436c54:	cmove  edx,esi
  436c57:	lea    rsi,[rdi+0x2]
  436c5b:	cmove  rdi,rsi
  436c5f:	mov    eax,edx
  436c61:	add    al,dl
  436c63:	sbb    rdi,0x3
  436c67:	sub    rdi,rcx
  436c6a:	mov    esi,0xc8
  436c6f:	sub    rsi,rdi
  436c72:	mov    edx,0x1
  436c77:	add    rdi,rcx
  436c7a:	lea    r8,[rip+0x1ae2f]        # 451ab0 <xmlStrEqual@plt+0x4db70>
  436c81:	mov    rcx,0xffffffffffffffff
  436c88:	xor    eax,eax
  436c8a:	call   403a40 <__snprintf_chk@plt>
  436c8f:	movsxd rdx,DWORD PTR [rip+0x3e07a]        # 474d10 <xmlStrEqual@plt+0x70dd0>
  436c96:	imul   rdx,rdx,0xc8
  436c9d:	add    rdx,rbx
  436ca0:	mov    rdi,rdx
  436ca3:	mov    ecx,DWORD PTR [rdi]
  436ca5:	add    rdi,0x4
  436ca9:	lea    eax,[rcx-0x1010101]
  436caf:	andn   eax,ecx,eax
  436cb4:	and    eax,0x80808080
  436cb9:	je     436ca3 <xmlStrEqual@plt+0x32d63>
  436cbb:	mov    ecx,eax
  436cbd:	shr    ecx,0x10
  436cc0:	test   eax,0x8080
  436cc5:	cmove  eax,ecx
  436cc8:	lea    rcx,[rdi+0x2]
  436ccc:	cmove  rdi,rcx
  436cd0:	mov    esi,eax
  436cd2:	add    sil,al
  436cd5:	sbb    rdi,0x3
  436cd9:	sub    rdi,rdx
  436cdc:	mov    esi,0xc8
  436ce1:	sub    rsi,rdi
  436ce4:	xor    eax,eax
  436ce6:	add    rdi,rdx
  436ce9:	lea    rdx,[rip+0x1adcf]        # 451abf <xmlStrEqual@plt+0x4db7f>
  436cf0:	call   403de0 <snprintf@plt>
  436cf5:	movzx  r9d,BYTE PTR [rbp+0x44]
  436cfa:	cmp    r9b,0x6
  436cfe:	je     436ff0 <xmlStrEqual@plt+0x330b0>
  436d04:	cmp    r9b,0x11
  436d08:	je     436f80 <xmlStrEqual@plt+0x33040>
  436d0e:	cmp    r9b,0x1
  436d12:	je     436f10 <xmlStrEqual@plt+0x32fd0>
  436d18:	movsxd rdx,DWORD PTR [rip+0x3dff1]        # 474d10 <xmlStrEqual@plt+0x70dd0>
  436d1f:	imul   rdx,rdx,0xc8
  436d26:	add    rdx,rbx
  436d29:	mov    rdi,rdx
  436d2c:	mov    ecx,DWORD PTR [rdi]
  436d2e:	add    rdi,0x4
  436d32:	lea    eax,[rcx-0x1010101]
  436d38:	andn   eax,ecx,eax
  436d3d:	and    eax,0x80808080
  436d42:	je     436d2c <xmlStrEqual@plt+0x32dec>
  436d44:	mov    ecx,eax
  436d46:	shr    ecx,0x10
  436d49:	test   eax,0x8080
  436d4e:	cmove  eax,ecx
  436d51:	lea    rcx,[rdi+0x2]
  436d55:	cmove  rdi,rcx
  436d59:	mov    esi,eax
  436d5b:	add    sil,al
  436d5e:	sbb    rdi,0x3
  436d62:	sub    rdi,rdx
  436d65:	mov    esi,0xc8
  436d6a:	sub    rsi,rdi
  436d6d:	lea    r8,[rip+0x1ad70]        # 451ae4 <xmlStrEqual@plt+0x4dba4>
  436d74:	add    rdi,rdx
  436d77:	mov    rcx,0xffffffffffffffff
  436d7e:	mov    edx,0x1
  436d83:	xor    eax,eax
  436d85:	call   403a40 <__snprintf_chk@plt>
  436d8a:	movsxd rdx,DWORD PTR [rip+0x3df7f]        # 474d10 <xmlStrEqual@plt+0x70dd0>
  436d91:	imul   rdx,rdx,0xc8
  436d98:	add    rdx,rbx
  436d9b:	mov    rdi,rdx
  436d9e:	mov    ecx,DWORD PTR [rdi]
  436da0:	add    rdi,0x4
  436da4:	lea    eax,[rcx-0x1010101]
  436daa:	andn   eax,ecx,eax
  436daf:	and    eax,0x80808080
  436db4:	je     436d9e <xmlStrEqual@plt+0x32e5e>
  436db6:	mov    ecx,eax
  436db8:	shr    ecx,0x10
  436dbb:	test   eax,0x8080
  436dc0:	cmove  eax,ecx
  436dc3:	lea    rcx,[rdi+0x2]
  436dc7:	cmove  rdi,rcx
  436dcb:	mov    esi,eax
  436dcd:	add    sil,al
  436dd0:	sbb    rdi,0x3
  436dd4:	sub    rdi,rdx
  436dd7:	mov    esi,0xc8
  436ddc:	movzx  r9d,WORD PTR [rbp+0x40]
  436de1:	sub    rsi,rdi
  436de4:	lea    r8,[rip+0x1acef]        # 451ada <xmlStrEqual@plt+0x4db9a>
  436deb:	add    rdi,rdx
  436dee:	mov    rcx,0xffffffffffffffff
  436df5:	mov    edx,0x1
  436dfa:	xor    eax,eax
  436dfc:	call   403a40 <__snprintf_chk@plt>
  436e01:	movsxd rdi,DWORD PTR [rip+0x3df08]        # 474d10 <xmlStrEqual@plt+0x70dd0>
  436e08:	imul   rdi,rdi,0xc8
  436e0f:	add    rdi,rbx
  436e12:	mov    rax,rdi
  436e15:	mov    ecx,DWORD PTR [rax]
  436e17:	add    rax,0x4
  436e1b:	lea    edx,[rcx-0x1010101]
  436e21:	andn   edx,ecx,edx
  436e26:	and    edx,0x80808080
  436e2c:	je     436e15 <xmlStrEqual@plt+0x32ed5>
  436e2e:	mov    ecx,edx
  436e30:	shr    ecx,0x10
  436e33:	test   edx,0x8080
  436e39:	cmove  edx,ecx
  436e3c:	lea    rcx,[rax+0x2]
  436e40:	cmove  rax,rcx
  436e44:	mov    esi,edx
  436e46:	add    sil,dl
  436e49:	sbb    rax,0x3
  436e4d:	sub    rax,rdi
  436e50:	mov    esi,0xc8
  436e55:	movzx  r9d,WORD PTR [rbp+0x42]
  436e5a:	add    rdi,rax
  436e5d:	sub    rsi,rax
  436e60:	lea    r8,[rip+0x1ac82]        # 451ae9 <xmlStrEqual@plt+0x4dba9>
  436e67:	mov    rcx,0xffffffffffffffff
  436e6e:	mov    edx,0x1
  436e73:	xor    eax,eax
  436e75:	call   403a40 <__snprintf_chk@plt>
  436e7a:	movsxd rdi,DWORD PTR [rip+0x3de8f]        # 474d10 <xmlStrEqual@plt+0x70dd0>
  436e81:	imul   rdi,rdi,0xc8
  436e88:	add    rdi,rbx
  436e8b:	mov    rax,rdi
  436e8e:	mov    ecx,DWORD PTR [rax]
  436e90:	add    rax,0x4
  436e94:	lea    edx,[rcx-0x1010101]
  436e9a:	andn   edx,ecx,edx
  436e9f:	and    edx,0x80808080
  436ea5:	je     436e8e <xmlStrEqual@plt+0x32f4e>
  436ea7:	mov    ecx,edx
  436ea9:	shr    ecx,0x10
  436eac:	test   edx,0x8080
  436eb2:	cmove  edx,ecx
  436eb5:	lea    rcx,[rax+0x2]
  436eb9:	cmove  rax,rcx
  436ebd:	mov    esi,edx
  436ebf:	add    sil,dl
  436ec2:	sbb    rax,0x3
  436ec6:	sub    rax,rdi
  436ec9:	mov    r9d,DWORD PTR [rbp+0x48]
  436ecd:	mov    esi,0xc8
  436ed2:	sub    rsi,rax
  436ed5:	add    rdi,rax
  436ed8:	lea    r8,[rip+0x1ac18]        # 451af7 <xmlStrEqual@plt+0x4dbb7>
  436edf:	mov    rcx,0xffffffffffffffff
  436ee6:	mov    edx,0x1
  436eeb:	xor    eax,eax
  436eed:	call   403a40 <__snprintf_chk@plt>
  436ef2:	movsxd rax,DWORD PTR [rip+0x3de17]        # 474d10 <xmlStrEqual@plt+0x70dd0>
  436ef9:	add    rsp,0x8
  436efd:	imul   rax,rax,0xc8
  436f04:	add    rax,rbx
  436f07:	pop    rbx
  436f08:	pop    rbp
  436f09:	ret    
  436f0a:	nop    WORD PTR [rax+rax*1+0x0]
  436f10:	movsxd rdx,DWORD PTR [rip+0x3ddf9]        # 474d10 <xmlStrEqual@plt+0x70dd0>
  436f17:	imul   rdx,rdx,0xc8
  436f1e:	add    rdx,rbx
  436f21:	mov    rdi,rdx
  436f24:	mov    ecx,DWORD PTR [rdi]
  436f26:	add    rdi,0x4
  436f2a:	lea    eax,[rcx-0x1010101]
  436f30:	andn   eax,ecx,eax
  436f35:	and    eax,0x80808080
  436f3a:	je     436f24 <xmlStrEqual@plt+0x32fe4>
  436f3c:	mov    ecx,eax
  436f3e:	shr    ecx,0x10
  436f41:	test   eax,0x8080
  436f46:	cmove  eax,ecx
  436f49:	lea    rcx,[rdi+0x2]
  436f4d:	cmove  rdi,rcx
  436f51:	mov    esi,eax
  436f53:	add    sil,al
  436f56:	sbb    rdi,0x3
  436f5a:	sub    rdi,rdx
  436f5d:	mov    esi,0xc8
  436f62:	sub    rsi,rdi
  436f65:	xor    eax,eax
  436f67:	add    rdi,rdx
  436f6a:	lea    rdx,[rip+0x1ab62]        # 451ad3 <xmlStrEqual@plt+0x4db93>
  436f71:	call   403de0 <snprintf@plt>
  436f76:	jmp    436d8a <xmlStrEqual@plt+0x32e4a>
  436f7b:	nop    DWORD PTR [rax+rax*1+0x0]
  436f80:	movsxd rdx,DWORD PTR [rip+0x3dd89]        # 474d10 <xmlStrEqual@plt+0x70dd0>
  436f87:	imul   rdx,rdx,0xc8
  436f8e:	add    rdx,rbx
  436f91:	mov    rdi,rdx
  436f94:	mov    ecx,DWORD PTR [rdi]
  436f96:	add    rdi,0x4
  436f9a:	lea    eax,[rcx-0x1010101]
  436fa0:	andn   eax,ecx,eax
  436fa5:	and    eax,0x80808080
  436faa:	je     436f94 <xmlStrEqual@plt+0x33054>
  436fac:	mov    ecx,eax
  436fae:	shr    ecx,0x10
  436fb1:	test   eax,0x8080
  436fb6:	cmove  eax,ecx
  436fb9:	lea    rcx,[rdi+0x2]
  436fbd:	cmove  rdi,rcx
  436fc1:	mov    esi,eax
  436fc3:	add    sil,al
  436fc6:	sbb    rdi,0x3
  436fca:	sub    rdi,rdx
  436fcd:	mov    esi,0xc8
  436fd2:	sub    rsi,rdi
  436fd5:	xor    eax,eax
  436fd7:	add    rdi,rdx
  436fda:	lea    rdx,[rip+0x1aae6]        # 451ac7 <xmlStrEqual@plt+0x4db87>
  436fe1:	call   403de0 <snprintf@plt>
  436fe6:	jmp    436d8a <xmlStrEqual@plt+0x32e4a>
  436feb:	nop    DWORD PTR [rax+rax*1+0x0]
  436ff0:	movsxd rdx,DWORD PTR [rip+0x3dd19]        # 474d10 <xmlStrEqual@plt+0x70dd0>
  436ff7:	imul   rdx,rdx,0xc8
  436ffe:	add    rdx,rbx
  437001:	mov    rdi,rdx
  437004:	mov    ecx,DWORD PTR [rdi]
  437006:	add    rdi,0x4
  43700a:	lea    eax,[rcx-0x1010101]
  437010:	andn   eax,ecx,eax
  437015:	and    eax,0x80808080
  43701a:	je     437004 <xmlStrEqual@plt+0x330c4>
  43701c:	mov    ecx,eax
  43701e:	shr    ecx,0x10
  437021:	test   eax,0x8080
  437026:	cmove  eax,ecx
  437029:	lea    rcx,[rdi+0x2]
  43702d:	cmove  rdi,rcx
  437031:	mov    esi,eax
  437033:	add    sil,al
  437036:	sbb    rdi,0x3
  43703a:	sub    rdi,rdx
  43703d:	mov    esi,0xc8
  437042:	sub    rsi,rdi
  437045:	xor    eax,eax
  437047:	add    rdi,rdx
  43704a:	lea    rdx,[rip+0x1aa7c]        # 451acd <xmlStrEqual@plt+0x4db8d>
  437051:	call   403de0 <snprintf@plt>
  437056:	jmp    436d8a <xmlStrEqual@plt+0x32e4a>
  43705b:	nop    DWORD PTR [rax+rax*1+0x0]
  437060:	mov    edx,0x5f4c
  437065:	mov    DWORD PTR [rax],0x4c554e5f
  43706b:	mov    WORD PTR [rax+0x4],dx
  43706f:	mov    BYTE PTR [rax+0x6],0x0
  437073:	add    rsp,0x8
  437077:	pop    rbx
  437078:	pop    rbp
  437079:	ret    
  43707a:	nop    WORD PTR [rax+rax*1+0x0]
  437080:	endbr64 
  437084:	xor    eax,eax
  437086:	cmp    BYTE PTR [rdi+0x44],0x11
  43708a:	jne    4370bb <xmlStrEqual@plt+0x3317b>
  43708c:	movzx  edx,WORD PTR [rdi+0x42]
  437090:	mov    eax,0x1
  437095:	cmp    dx,0x10f6
  43709a:	je     4370bb <xmlStrEqual@plt+0x3317b>
  43709c:	movzx  eax,WORD PTR [rdi+0x40]
  4370a0:	sub    ax,0x10f5
  4370a4:	cmp    ax,0x1
  4370a8:	seta   al
  4370ab:	cmp    dx,0x10f5
  4370b0:	setne  dl
  4370b3:	and    eax,edx
  4370b5:	xor    eax,0x1
  4370b8:	movzx  eax,al
  4370bb:	ret    
  4370bc:	nop    DWORD PTR [rax+0x0]
  4370c0:	endbr64 
  4370c4:	movzx  ecx,BYTE PTR [rdi]
  4370c7:	and    ecx,0xfffffff0
  4370ca:	cmp    cl,0x40
  4370cd:	je     437108 <xmlStrEqual@plt+0x331c8>
  4370cf:	xor    eax,eax
  4370d1:	cmp    cl,0x60
  4370d4:	jne    437100 <xmlStrEqual@plt+0x331c0>
  4370d6:	test   esi,esi
  4370d8:	je     4370de <xmlStrEqual@plt+0x3319e>
  4370da:	mov    BYTE PTR [rdi+0x7],sil
  4370de:	mov    eax,DWORD PTR [rdi]
  4370e0:	shl    edx,0x14
  4370e3:	and    eax,0xffff0ff0
  4370e8:	and    edx,0xff00000
  4370ee:	bswap  edx
  4370f0:	or     edx,eax
  4370f2:	mov    DWORD PTR [rdi],edx
  4370f4:	mov    eax,0x1
  4370f9:	ret    
  4370fa:	nop    WORD PTR [rax+rax*1+0x0]
  437100:	ret    
  437101:	nop    DWORD PTR [rax+0x0]
  437108:	push   rbx
  437109:	test   esi,esi
  43710b:	je     437111 <xmlStrEqual@plt+0x331d1>
  43710d:	mov    BYTE PTR [rdi+0x8],sil
  437111:	xor    eax,eax
  437113:	mov    BYTE PTR [rdi+0x1],dl
  437116:	mov    WORD PTR [rdi+0xa],ax
  43711a:	mov    esi,0x14
  43711f:	mov    rbx,rdi
  437122:	call   42d9c0 <xmlStrEqual@plt+0x29a80>
  437127:	mov    WORD PTR [rbx+0xa],ax
  43712b:	mov    eax,0x1
  437130:	pop    rbx
  437131:	ret    
  437132:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  43713d:	nop    DWORD PTR [rax]
  437140:	endbr64 
  437144:	movzx  eax,BYTE PTR [rdi]
  437147:	shr    al,0x4
  43714a:	cmp    al,0x4
  43714c:	je     437178 <xmlStrEqual@plt+0x33238>
  43714e:	cmp    al,0x6
  437150:	jne    437170 <xmlStrEqual@plt+0x33230>
  437152:	movzx  eax,BYTE PTR [rdi+0x7]
  437156:	mov    DWORD PTR [rsi],eax
  437158:	movbe  eax,DWORD PTR [rdi]
  43715c:	shr    eax,0x14
  43715f:	and    eax,0xff
  437164:	mov    DWORD PTR [rdx],eax
  437166:	mov    eax,0x1
  43716b:	ret    
  43716c:	nop    DWORD PTR [rax+0x0]
  437170:	xor    eax,eax
  437172:	ret    
  437173:	nop    DWORD PTR [rax+rax*1+0x0]
  437178:	movzx  eax,BYTE PTR [rdi+0x1]
  43717c:	mov    DWORD PTR [rdx],eax
  43717e:	movzx  eax,BYTE PTR [rdi+0x8]
  437182:	mov    DWORD PTR [rsi],eax
  437184:	mov    eax,0x1
  437189:	ret    
  43718a:	nop    WORD PTR [rax+rax*1+0x0]
  437190:	endbr64 
  437194:	push   r13
  437196:	mov    r13,rdx
  437199:	push   r12
  43719b:	mov    r12d,ecx
  43719e:	push   rbp
  43719f:	mov    rbp,rsi
  4371a2:	push   rbx
  4371a3:	mov    rbx,rdi
  4371a6:	mov    rdi,rsi
  4371a9:	sub    rsp,0x8
  4371ad:	call   425890 <xmlStrEqual@plt+0x21950>
  4371b2:	cmp    ax,0x2
  4371b6:	je     4371e8 <xmlStrEqual@plt+0x332a8>
  4371b8:	cmp    ax,0xa
  4371bc:	je     437260 <xmlStrEqual@plt+0x33320>
  4371c2:	mov    rax,0x469e3c
  4371c9:	xor    ebx,ebx
  4371cb:	cmp    DWORD PTR [rax],0x1
  4371ce:	jg     4372b0 <xmlStrEqual@plt+0x33370>
  4371d4:	add    rsp,0x8
  4371d8:	mov    rax,rbx
  4371db:	pop    rbx
  4371dc:	pop    rbp
  4371dd:	pop    r12
  4371df:	pop    r13
  4371e1:	ret    
  4371e2:	nop    WORD PTR [rax+rax*1+0x0]
  4371e8:	mov    edx,0x45
  4371ed:	mov    WORD PTR [rbx],dx
  4371f0:	mov    rdx,0x474ac0
  4371f7:	add    r12d,0x14
  4371fb:	movzx  eax,WORD PTR [rdx]
  4371fe:	movbe  WORD PTR [rbx+0x2],r12w
  437205:	inc    eax
  437207:	movbe  WORD PTR [rbx+0x4],ax
  43720d:	mov    DWORD PTR [rbx+0x6],0x11ff0000
  437214:	mov    rdi,rbp
  437217:	mov    WORD PTR [rdx],ax
  43721a:	call   425ce0 <xmlStrEqual@plt+0x21da0>
  43721f:	mov    eax,DWORD PTR [rax]
  437221:	mov    rdi,r13
  437224:	mov    DWORD PTR [rbx+0xc],eax
  437227:	call   425ce0 <xmlStrEqual@plt+0x21da0>
  43722c:	mov    eax,DWORD PTR [rax]
  43722e:	xor    ecx,ecx
  437230:	mov    DWORD PTR [rbx+0x10],eax
  437233:	mov    WORD PTR [rbx+0xa],cx
  437237:	mov    rdi,rbx
  43723a:	mov    esi,0x14
  43723f:	call   42d9c0 <xmlStrEqual@plt+0x29a80>
  437244:	mov    WORD PTR [rbx+0xa],ax
  437248:	add    rsp,0x8
  43724c:	add    rbx,0x14
  437250:	mov    rax,rbx
  437253:	pop    rbx
  437254:	pop    rbp
  437255:	pop    r12
  437257:	pop    r13
  437259:	ret    
  43725a:	nop    WORD PTR [rax+rax*1+0x0]
  437260:	mov    eax,0xffffff11
  437265:	movbe  WORD PTR [rbx+0x4],r12w
  43726c:	mov    BYTE PTR [rbx],0x60
  43726f:	mov    WORD PTR [rbx+0x6],ax
  437273:	mov    rdi,rbp
  437276:	add    rbx,0x28
  43727a:	call   425cf0 <xmlStrEqual@plt+0x21db0>
  43727f:	vmovdqu xmm0,XMMWORD PTR [rax]
  437283:	mov    rdi,r13
  437286:	vmovups XMMWORD PTR [rbx-0x20],xmm0
  43728b:	call   425cf0 <xmlStrEqual@plt+0x21db0>
  437290:	vmovdqu xmm1,XMMWORD PTR [rax]
  437294:	vmovups XMMWORD PTR [rbx-0x10],xmm1
  437299:	add    rsp,0x8
  43729d:	mov    rax,rbx
  4372a0:	pop    rbx
  4372a1:	pop    rbp
  4372a2:	pop    r12
  4372a4:	pop    r13
  4372a6:	ret    
  4372a7:	nop    WORD PTR [rax+rax*1+0x0]
  4372b0:	mov    rdi,rbp
  4372b3:	call   425890 <xmlStrEqual@plt+0x21950>
  4372b8:	movzx  edx,ax
  4372bb:	lea    rsi,[rip+0x1a69e]        # 451960 <xmlStrEqual@plt+0x4da20>
  4372c2:	xor    eax,eax
  4372c4:	mov    edi,0x6
  4372c9:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  4372ce:	add    rsp,0x8
  4372d2:	mov    rax,rbx
  4372d5:	pop    rbx
  4372d6:	pop    rbp
  4372d7:	pop    r12
  4372d9:	pop    r13
  4372db:	ret    
  4372dc:	nop    DWORD PTR [rax+0x0]
  4372e0:	endbr64 
  4372e4:	push   r15
  4372e6:	mov    r15d,r8d
  4372e9:	push   r14
  4372eb:	push   r13
  4372ed:	push   r12
  4372ef:	mov    r12,rcx
  4372f2:	push   rbp
  4372f3:	mov    ebp,esi
  4372f5:	push   rbx
  4372f6:	mov    rbx,rdx
  4372f9:	sub    rsp,0x18
  4372fd:	mov    QWORD PTR [rsp],rdi
  437301:	mov    rdi,rdx
  437304:	mov    DWORD PTR [rsp+0xc],r9d
  437309:	call   425890 <xmlStrEqual@plt+0x21950>
  43730e:	mov    rdi,r12
  437311:	mov    r13d,eax
  437314:	call   425890 <xmlStrEqual@plt+0x21950>
  437319:	cmp    r13w,ax
  43731d:	jne    437418 <xmlStrEqual@plt+0x334d8>
  437323:	mov    rdi,rbx
  437326:	call   425890 <xmlStrEqual@plt+0x21950>
  43732b:	cmp    ax,0x2
  43732f:	je     437343 <xmlStrEqual@plt+0x33403>
  437331:	mov    rdi,rbx
  437334:	call   425890 <xmlStrEqual@plt+0x21950>
  437339:	cmp    ax,0xa
  43733d:	jne    437478 <xmlStrEqual@plt+0x33538>
  437343:	mov    rdi,rbx
  437346:	call   425890 <xmlStrEqual@plt+0x21950>
  43734b:	movzx  edi,ax
  43734e:	call   4265e0 <xmlStrEqual@plt+0x226a0>
  437353:	lea    edi,[rax+rbp*1+0x8]
  437357:	mov    rax,QWORD PTR [rsp+0x50]
  43735c:	lea    r13d,[rbp+0x8]
  437360:	mov    DWORD PTR [rax],edi
  437362:	movsxd rdi,edi
  437365:	call   403cd0 <malloc@plt>
  43736a:	mov    r14,rax
  43736d:	test   rax,rax
  437370:	je     4374e0 <xmlStrEqual@plt+0x335a0>
  437376:	mov    rax,QWORD PTR [rsp+0x50]
  43737b:	xor    esi,esi
  43737d:	movsxd rdx,DWORD PTR [rax]
  437380:	mov    rdi,r14
  437383:	call   4039f0 <memset@plt>
  437388:	mov    rdx,r12
  43738b:	mov    ecx,r13d
  43738e:	mov    rsi,rbx
  437391:	mov    rdi,r14
  437394:	call   437190 <xmlStrEqual@plt+0x33250>
  437399:	mov    r12,rax
  43739c:	test   rax,rax
  43739f:	je     4374b0 <xmlStrEqual@plt+0x33570>
  4373a5:	movbe  WORD PTR [rax],r15w
  4373ab:	movzx  eax,WORD PTR [rsp+0xc]
  4373b0:	movbe  WORD PTR [r12+0x4],r13w
  4373b8:	movbe  WORD PTR [r12+0x2],ax
  4373c0:	xor    eax,eax
  4373c2:	mov    WORD PTR [r12+0x6],ax
  4373c8:	mov    rsi,QWORD PTR [rsp]
  4373cc:	movsxd rdx,ebp
  4373cf:	lea    rdi,[r12+0x8]
  4373d4:	call   403ae0 <memcpy@plt>
  4373d9:	mov    rdi,rbx
  4373dc:	call   425890 <xmlStrEqual@plt+0x21950>
  4373e1:	movzx  ecx,ax
  4373e4:	mov    rdx,r14
  4373e7:	mov    esi,r13d
  4373ea:	mov    rdi,r12
  4373ed:	call   42dba0 <xmlStrEqual@plt+0x29c60>
  4373f2:	cmp    ax,0xffff
  4373f6:	je     4374cf <xmlStrEqual@plt+0x3358f>
  4373fc:	mov    WORD PTR [r12+0x6],ax
  437402:	add    rsp,0x18
  437406:	pop    rbx
  437407:	pop    rbp
  437408:	pop    r12
  43740a:	pop    r13
  43740c:	mov    rax,r14
  43740f:	pop    r14
  437411:	pop    r15
  437413:	ret    
  437414:	nop    DWORD PTR [rax+0x0]
  437418:	mov    rax,0x469e3c
  43741f:	cmp    DWORD PTR [rax],0x1
  437422:	jle    43746d <xmlStrEqual@plt+0x3352d>
  437424:	mov    rdi,r12
  437427:	call   424d40 <xmlStrEqual@plt+0x20e00>
  43742c:	mov    rdi,r12
  43742f:	mov    r13,rax
  437432:	call   425890 <xmlStrEqual@plt+0x21950>
  437437:	mov    rdi,rbx
  43743a:	mov    r12d,eax
  43743d:	call   424d40 <xmlStrEqual@plt+0x20e00>
  437442:	mov    rdi,rbx
  437445:	mov    rbp,rax
  437448:	call   425890 <xmlStrEqual@plt+0x21950>
  43744d:	movzx  edx,ax
  437450:	mov    r9,r13
  437453:	movzx  r8d,r12w
  437457:	mov    rcx,rbp
  43745a:	lea    rsi,[rip+0x1a537]        # 451998 <xmlStrEqual@plt+0x4da58>
  437461:	mov    edi,0x6
  437466:	xor    eax,eax
  437468:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  43746d:	xor    r14d,r14d
  437470:	jmp    437402 <xmlStrEqual@plt+0x334c2>
  437472:	nop    WORD PTR [rax+rax*1+0x0]
  437478:	mov    rax,0x469e3c
  43747f:	cmp    DWORD PTR [rax],0x1
  437482:	jle    43746d <xmlStrEqual@plt+0x3352d>
  437484:	mov    rdi,rbx
  437487:	call   425890 <xmlStrEqual@plt+0x21950>
  43748c:	movzx  edx,ax
  43748f:	lea    rsi,[rip+0x1a542]        # 4519d8 <xmlStrEqual@plt+0x4da98>
  437496:	mov    edi,0x6
  43749b:	xor    eax,eax
  43749d:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  4374a2:	xor    r14d,r14d
  4374a5:	jmp    437402 <xmlStrEqual@plt+0x334c2>
  4374aa:	nop    WORD PTR [rax+rax*1+0x0]
  4374b0:	mov    rax,0x469e3c
  4374b7:	cmp    DWORD PTR [rax],0x1
  4374ba:	jle    4374cf <xmlStrEqual@plt+0x3358f>
  4374bc:	lea    rsi,[rip+0x1a58d]        # 451a50 <xmlStrEqual@plt+0x4db10>
  4374c3:	mov    edi,0x6
  4374c8:	xor    eax,eax
  4374ca:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  4374cf:	mov    rdi,r14
  4374d2:	call   4037b0 <free@plt>
  4374d7:	xor    r14d,r14d
  4374da:	jmp    437402 <xmlStrEqual@plt+0x334c2>
  4374df:	nop
  4374e0:	mov    rax,0x469e3c
  4374e7:	cmp    DWORD PTR [rax],0x1
  4374ea:	jle    43746d <xmlStrEqual@plt+0x3352d>
  4374ec:	call   4037f0 <__errno_location@plt>
  4374f1:	mov    edi,DWORD PTR [rax]
  4374f3:	call   403910 <strerror@plt>
  4374f8:	mov    rdx,rax
  4374fb:	lea    rsi,[rip+0x1a4fe]        # 451a00 <xmlStrEqual@plt+0x4dac0>
  437502:	mov    edi,0x6
  437507:	xor    eax,eax
  437509:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  43750e:	jmp    437402 <xmlStrEqual@plt+0x334c2>
  437513:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  43751e:	xchg   ax,ax
  437520:	endbr64 
  437524:	push   r12
  437526:	mov    BYTE PTR [rip+0x3d5b3],0x0        # 474ae0 <xmlStrEqual@plt+0x70ba0>
  43752d:	push   rbp
  43752e:	mov    rbp,rsi
  437531:	push   rbx
  437532:	mov    rbx,rdi
  437535:	movzx  eax,BYTE PTR [rdi]
  437538:	shr    al,0x4
  43753b:	cmp    al,0x4
  43753d:	je     437578 <xmlStrEqual@plt+0x33638>
  43753f:	cmp    al,0x6
  437541:	je     4375a0 <xmlStrEqual@plt+0x33660>
  437543:	lea    r9,[rip+0x1a5ba]        # 451b04 <xmlStrEqual@plt+0x4dbc4>
  43754a:	mov    r8,r9
  43754d:	mov    rcx,rbp
  437550:	mov    edx,0x96
  437555:	mov    esi,0x1
  43755a:	lea    rdi,[rip+0x3d57f]        # 474ae0 <xmlStrEqual@plt+0x70ba0>
  437561:	xor    eax,eax
  437563:	call   403a30 <__sprintf_chk@plt>
  437568:	pop    rbx
  437569:	pop    rbp
  43756a:	lea    rax,[rip+0x3d56f]        # 474ae0 <xmlStrEqual@plt+0x70ba0>
  437571:	pop    r12
  437573:	ret    
  437574:	nop    DWORD PTR [rax+0x0]
  437578:	lea    rdi,[rdi+0x10]
  43757c:	mov    esi,0x2
  437581:	call   4263b0 <xmlStrEqual@plt+0x22470>
  437586:	lea    rdi,[rbx+0xc]
  43758a:	mov    esi,0x2
  43758f:	mov    r12,rax
  437592:	call   4263b0 <xmlStrEqual@plt+0x22470>
  437597:	mov    r8,rax
  43759a:	mov    r9,r12
  43759d:	jmp    43754d <xmlStrEqual@plt+0x3360d>
  43759f:	nop
  4375a0:	lea    rdi,[rdi+0x18]
  4375a4:	mov    esi,0xa
  4375a9:	call   4263b0 <xmlStrEqual@plt+0x22470>
  4375ae:	lea    rdi,[rbx+0x8]
  4375b2:	mov    esi,0xa
  4375b7:	mov    r12,rax
  4375ba:	call   4263b0 <xmlStrEqual@plt+0x22470>
  4375bf:	mov    r8,rax
  4375c2:	mov    r9,r12
  4375c5:	jmp    43754d <xmlStrEqual@plt+0x3360d>
  4375c7:	nop    WORD PTR [rax+rax*1+0x0]
  4375d0:	endbr64 
  4375d4:	mov    eax,esi
  4375d6:	bswap  eax
  4375d8:	mov    edx,eax
  4375da:	mov    BYTE PTR [rdi],ah
  4375dc:	shr    edx,0x10
  4375df:	shr    eax,0x18
  4375e2:	mov    BYTE PTR [rdi+0x1],dl
  4375e5:	mov    BYTE PTR [rdi+0x2],al
  4375e8:	ret    
  4375e9:	nop    DWORD PTR [rax+0x0]
  4375f0:	endbr64 
  4375f4:	movzx  eax,BYTE PTR [rdi]
  4375f7:	movzx  edx,BYTE PTR [rdi+0x1]
  4375fb:	shl    eax,0x10
  4375fe:	shl    edx,0x8
  437601:	or     eax,edx
  437603:	movzx  edx,BYTE PTR [rdi+0x2]
  437607:	or     eax,edx
  437609:	ret    
  43760a:	nop    WORD PTR [rax+rax*1+0x0]
  437610:	endbr64 
  437614:	push   r12
  437616:	push   rbp
  437617:	push   rbx
  437618:	mov    rbx,rdi
  43761b:	sub    rsp,0x40
  43761f:	mov    rax,QWORD PTR fs:0x28
  437628:	mov    QWORD PTR [rsp+0x38],rax
  43762d:	xor    eax,eax
  43762f:	cmp    DWORD PTR [rdi+0x18],0x2
  437633:	jne    437710 <xmlStrEqual@plt+0x337d0>
  437639:	call   425890 <xmlStrEqual@plt+0x21950>
  43763e:	cmp    ax,0x2
  437642:	je     437778 <xmlStrEqual@plt+0x33838>
  437648:	cmp    ax,0xa
  43764c:	jne    437748 <xmlStrEqual@plt+0x33808>
  437652:	vpxor  xmm0,xmm0,xmm0
  437656:	mov    rdi,rbx
  437659:	vmovaps XMMWORD PTR [rsp+0x20],xmm0
  43765f:	call   4256d0 <xmlStrEqual@plt+0x21790>
  437664:	movzx  edx,ax
  437667:	mov    edi,edx
  437669:	and    eax,0x7
  43766c:	sar    edi,0x3
  43766f:	lea    rbp,[rsp+0x20]
  437674:	je     437696 <xmlStrEqual@plt+0x33756>
  437676:	lea    rdx,[rbp+0x1]
  43767a:	lea    esi,[rdi-0x1]
  43767d:	mov    rcx,rbp
  437680:	add    rsi,rdx
  437683:	jmp    43768b <xmlStrEqual@plt+0x3374b>
  437685:	nop    DWORD PTR [rax]
  437688:	inc    rdx
  43768b:	mov    BYTE PTR [rcx],0xff
  43768e:	mov    rcx,rdx
  437691:	cmp    rdx,rsi
  437694:	jne    437688 <xmlStrEqual@plt+0x33748>
  437696:	test   ax,ax
  437699:	je     4376b6 <xmlStrEqual@plt+0x33776>
  43769b:	movzx  eax,ax
  43769e:	mov    ecx,0x8
  4376a3:	sub    ecx,eax
  4376a5:	movsxd rdx,edi
  4376a8:	mov    eax,0xff
  4376ad:	shlx   eax,eax,ecx
  4376b2:	mov    BYTE PTR [rsp+rdx*1+0x20],al
  4376b6:	mov    rdi,rbx
  4376b9:	call   424e80 <xmlStrEqual@plt+0x20f40>
  4376be:	mov    rdi,rax
  4376c1:	call   425cf0 <xmlStrEqual@plt+0x21db0>
  4376c6:	lea    r12,[rsp+0x10]
  4376cb:	xor    edx,edx
  4376cd:	nop    DWORD PTR [rax]
  4376d0:	movzx  ecx,BYTE PTR [rax+rdx*1]
  4376d4:	and    cl,BYTE PTR [rbp+rdx*1+0x0]
  4376d8:	mov    BYTE PTR [r12+rdx*1],cl
  4376dc:	inc    rdx
  4376df:	cmp    rdx,0x10
  4376e3:	jne    4376d0 <xmlStrEqual@plt+0x33790>
  4376e5:	mov    edi,0x1
  4376ea:	call   424b10 <xmlStrEqual@plt+0x20bd0>
  4376ef:	mov    rdi,rax
  4376f2:	mov    rbx,rax
  4376f5:	call   424e80 <xmlStrEqual@plt+0x20f40>
  4376fa:	mov    rdi,rax
  4376fd:	mov    rsi,r12
  437700:	call   425e40 <xmlStrEqual@plt+0x21f00>
  437705:	jmp    437722 <xmlStrEqual@plt+0x337e2>
  437707:	nop    WORD PTR [rax+rax*1+0x0]
  437710:	mov    rax,0x469e3c
  437717:	cmp    DWORD PTR [rax],0x1
  43771a:	jg     4377f0 <xmlStrEqual@plt+0x338b0>
  437720:	xor    ebx,ebx
  437722:	mov    rsi,QWORD PTR [rsp+0x38]
  437727:	xor    rsi,QWORD PTR fs:0x28
  437730:	mov    rax,rbx
  437733:	jne    437812 <xmlStrEqual@plt+0x338d2>
  437739:	add    rsp,0x40
  43773d:	pop    rbx
  43773e:	pop    rbp
  43773f:	pop    r12
  437741:	ret    
  437742:	nop    WORD PTR [rax+rax*1+0x0]
  437748:	mov    rax,0x469e3c
  43774f:	cmp    DWORD PTR [rax],0x1
  437752:	jle    437720 <xmlStrEqual@plt+0x337e0>
  437754:	mov    rdi,rbx
  437757:	call   425890 <xmlStrEqual@plt+0x21950>
  43775c:	movzx  edx,ax
  43775f:	lea    rsi,[rip+0x1a3e2]        # 451b48 <xmlStrEqual@plt+0x4dc08>
  437766:	mov    edi,0x6
  43776b:	xor    eax,eax
  43776d:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  437772:	jmp    437720 <xmlStrEqual@plt+0x337e0>
  437774:	nop    DWORD PTR [rax+0x0]
  437778:	mov    rdi,rbx
  43777b:	call   4256d0 <xmlStrEqual@plt+0x21790>
  437780:	mov    rdi,rbx
  437783:	movzx  ebp,ax
  437786:	call   424e80 <xmlStrEqual@plt+0x20f40>
  43778b:	mov    rdi,rax
  43778e:	call   425ce0 <xmlStrEqual@plt+0x21da0>
  437793:	mov    eax,DWORD PTR [rax]
  437795:	xor    edx,edx
  437797:	test   ebp,ebp
  437799:	je     4377b2 <xmlStrEqual@plt+0x33872>
  43779b:	mov    edx,0x20
  4377a0:	bswap  eax
  4377a2:	sub    edx,ebp
  4377a4:	mov    ecx,eax
  4377a6:	mov    eax,0xffffffff
  4377ab:	shlx   edx,eax,edx
  4377b0:	and    edx,ecx
  4377b2:	mov    edi,0x1
  4377b7:	mov    DWORD PTR [rsp+0xc],edx
  4377bb:	call   424b10 <xmlStrEqual@plt+0x20bd0>
  4377c0:	mov    rbx,rax
  4377c3:	movbe  eax,DWORD PTR [rsp+0xc]
  4377c9:	mov    rdi,rbx
  4377cc:	mov    DWORD PTR [rsp+0xc],eax
  4377d0:	call   424e80 <xmlStrEqual@plt+0x20f40>
  4377d5:	mov    rdi,rax
  4377d8:	lea    rsi,[rsp+0xc]
  4377dd:	call   425e30 <xmlStrEqual@plt+0x21ef0>
  4377e2:	jmp    437722 <xmlStrEqual@plt+0x337e2>
  4377e7:	nop    WORD PTR [rax+rax*1+0x0]
  4377f0:	call   424d40 <xmlStrEqual@plt+0x20e00>
  4377f5:	mov    rdx,rax
  4377f8:	lea    rsi,[rip+0x1a311]        # 451b10 <xmlStrEqual@plt+0x4dbd0>
  4377ff:	mov    edi,0x6
  437804:	xor    eax,eax
  437806:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  43780b:	xor    ebx,ebx
  43780d:	jmp    437722 <xmlStrEqual@plt+0x337e2>
  437812:	call   403c00 <__stack_chk_fail@plt>
  437817:	nop    WORD PTR [rax+rax*1+0x0]
  437820:	endbr64 
  437824:	push   r13
  437826:	push   r12
  437828:	push   rbp
  437829:	push   rbx
  43782a:	sub    rsp,0x48
  43782e:	mov    rax,QWORD PTR fs:0x28
  437837:	mov    QWORD PTR [rsp+0x38],rax
  43783c:	xor    eax,eax
  43783e:	cmp    DWORD PTR [rsi+0x18],0x2
  437842:	jne    43784d <xmlStrEqual@plt+0x3390d>
  437844:	cmp    DWORD PTR [rdi+0x18],0x1
  437848:	mov    rbx,rdi
  43784b:	je     437870 <xmlStrEqual@plt+0x33930>
  43784d:	xor    eax,eax
  43784f:	mov    rdx,QWORD PTR [rsp+0x38]
  437854:	xor    rdx,QWORD PTR fs:0x28
  43785d:	jne    43790d <xmlStrEqual@plt+0x339cd>
  437863:	add    rsp,0x48
  437867:	pop    rbx
  437868:	pop    rbp
  437869:	pop    r12
  43786b:	pop    r13
  43786d:	ret    
  43786e:	xchg   ax,ax
  437870:	mov    QWORD PTR [rsp+0x8],rsi
  437875:	call   425890 <xmlStrEqual@plt+0x21950>
  43787a:	mov    rsi,QWORD PTR [rsp+0x8]
  43787f:	mov    ebp,eax
  437881:	mov    rdi,rsi
  437884:	call   425890 <xmlStrEqual@plt+0x21950>
  437889:	cmp    bp,ax
  43788c:	mov    rsi,QWORD PTR [rsp+0x8]
  437891:	jne    43784d <xmlStrEqual@plt+0x3390d>
  437893:	mov    rdi,rsi
  437896:	call   437610 <xmlStrEqual@plt+0x336d0>
  43789b:	mov    rsi,QWORD PTR [rsp+0x8]
  4378a0:	lea    rbp,[rsp+0x10]
  4378a5:	mov    rdi,rsi
  4378a8:	mov    r12,rax
  4378ab:	call   4256d0 <xmlStrEqual@plt+0x21790>
  4378b0:	mov    rsi,rbx
  4378b3:	mov    rdi,rbp
  4378b6:	mov    r13d,eax
  4378b9:	call   424fd0 <xmlStrEqual@plt+0x21090>
  4378be:	mov    rdi,rbp
  4378c1:	call   424de0 <xmlStrEqual@plt+0x20ea0>
  4378c6:	movzx  esi,r13b
  4378ca:	mov    rdi,rbp
  4378cd:	call   425730 <xmlStrEqual@plt+0x217f0>
  4378d2:	mov    rdi,rbp
  4378d5:	call   437610 <xmlStrEqual@plt+0x336d0>
  4378da:	mov    rdi,rax
  4378dd:	mov    rsi,r12
  4378e0:	mov    rbx,rax
  4378e3:	call   425310 <xmlStrEqual@plt+0x213d0>
  4378e8:	test   eax,eax
  4378ea:	sete   al
  4378ed:	movzx  eax,al
  4378f0:	mov    rdi,r12
  4378f3:	mov    DWORD PTR [rsp+0x8],eax
  4378f7:	call   424bf0 <xmlStrEqual@plt+0x20cb0>
  4378fc:	mov    rdi,rbx
  4378ff:	call   424bf0 <xmlStrEqual@plt+0x20cb0>
  437904:	mov    eax,DWORD PTR [rsp+0x8]
  437908:	jmp    43784f <xmlStrEqual@plt+0x3390f>
  43790d:	call   403c00 <__stack_chk_fail@plt>
  437912:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  43791d:	nop    DWORD PTR [rax]
  437920:	endbr64 
  437924:	mov    eax,DWORD PTR [rsi+0x18]
  437927:	cmp    DWORD PTR [rdi+0x18],eax
  43792a:	je     437930 <xmlStrEqual@plt+0x339f0>
  43792c:	xor    eax,eax
  43792e:	ret    
  43792f:	nop
  437930:	push   r14
  437932:	push   r13
  437934:	push   r12
  437936:	push   rbp
  437937:	push   rbx
  437938:	mov    rbx,rsi
  43793b:	sub    rsp,0x10
  43793f:	call   425670 <xmlStrEqual@plt+0x21730>
  437944:	mov    rdi,rbx
  437947:	mov    rbp,rax
  43794a:	call   425670 <xmlStrEqual@plt+0x21730>
  43794f:	mov    rbx,rax
  437952:	test   rbp,rbp
  437955:	je     437998 <xmlStrEqual@plt+0x33a58>
  437957:	test   rax,rax
  43795a:	je     437998 <xmlStrEqual@plt+0x33a58>
  43795c:	mov    rdi,rbp
  43795f:	call   425890 <xmlStrEqual@plt+0x21950>
  437964:	mov    rdi,rbx
  437967:	mov    r12d,eax
  43796a:	call   425890 <xmlStrEqual@plt+0x21950>
  43796f:	cmp    r12w,ax
  437973:	jne    437998 <xmlStrEqual@plt+0x33a58>
  437975:	mov    rdi,rbp
  437978:	call   4256d0 <xmlStrEqual@plt+0x21790>
  43797d:	mov    rdi,rbx
  437980:	mov    r13d,eax
  437983:	call   4256d0 <xmlStrEqual@plt+0x21790>
  437988:	mov    r12d,eax
  43798b:	cmp    r13w,ax
  43798f:	jbe    4379b0 <xmlStrEqual@plt+0x33a70>
  437991:	nop    DWORD PTR [rax+0x0]
  437998:	xor    eax,eax
  43799a:	add    rsp,0x10
  43799e:	pop    rbx
  43799f:	pop    rbp
  4379a0:	pop    r12
  4379a2:	pop    r13
  4379a4:	pop    r14
  4379a6:	ret    
  4379a7:	nop    WORD PTR [rax+rax*1+0x0]
  4379b0:	mov    rdi,rbp
  4379b3:	call   437610 <xmlStrEqual@plt+0x336d0>
  4379b8:	movzx  esi,r13b
  4379bc:	mov    rdi,rbx
  4379bf:	mov    r14,rax
  4379c2:	call   425730 <xmlStrEqual@plt+0x217f0>
  4379c7:	mov    rdi,rbx
  4379ca:	call   437610 <xmlStrEqual@plt+0x336d0>
  4379cf:	mov    rbp,rax
  4379d2:	movzx  esi,r12b
  4379d6:	mov    rdi,rbx
  4379d9:	call   425730 <xmlStrEqual@plt+0x217f0>
  4379de:	mov    rsi,rbp
  4379e1:	mov    rdi,r14
  4379e4:	call   425310 <xmlStrEqual@plt+0x213d0>
  4379e9:	test   eax,eax
  4379eb:	sete   al
  4379ee:	movzx  eax,al
  4379f1:	mov    rdi,r14
  4379f4:	mov    DWORD PTR [rsp+0xc],eax
  4379f8:	call   424bf0 <xmlStrEqual@plt+0x20cb0>
  4379fd:	mov    rdi,rbp
  437a00:	call   424bf0 <xmlStrEqual@plt+0x20cb0>
  437a05:	mov    eax,DWORD PTR [rsp+0xc]
  437a09:	jmp    43799a <xmlStrEqual@plt+0x33a5a>
  437a0b:	nop    DWORD PTR [rax+rax*1+0x0]
  437a10:	endbr64 
  437a14:	push   rbp
  437a15:	mov    rbp,rdi
  437a18:	push   rbx
  437a19:	sub    rsp,0x8
  437a1d:	call   437610 <xmlStrEqual@plt+0x336d0>
  437a22:	mov    rbx,rax
  437a25:	test   rax,rax
  437a28:	je     437a3d <xmlStrEqual@plt+0x33afd>
  437a2a:	mov    rdi,rbp
  437a2d:	call   4256d0 <xmlStrEqual@plt+0x21790>
  437a32:	movzx  esi,al
  437a35:	mov    rdi,rbx
  437a38:	call   425730 <xmlStrEqual@plt+0x217f0>
  437a3d:	add    rsp,0x8
  437a41:	mov    rax,rbx
  437a44:	pop    rbx
  437a45:	pop    rbp
  437a46:	ret    
  437a47:	nop    WORD PTR [rax+rax*1+0x0]
  437a50:	endbr64 
  437a54:	push   rbp
  437a55:	push   rbx
  437a56:	sub    rsp,0x8
  437a5a:	call   425670 <xmlStrEqual@plt+0x21730>
  437a5f:	mov    rbx,rax
  437a62:	xor    eax,eax
  437a64:	test   rbx,rbx
  437a67:	je     437a8c <xmlStrEqual@plt+0x33b4c>
  437a69:	mov    rdi,rbx
  437a6c:	call   437a10 <xmlStrEqual@plt+0x33ad0>
  437a71:	mov    rbp,rax
  437a74:	mov    rsi,rax
  437a77:	mov    rdi,rbx
  437a7a:	call   424fd0 <xmlStrEqual@plt+0x21090>
  437a7f:	mov    rdi,rbp
  437a82:	call   424bf0 <xmlStrEqual@plt+0x20cb0>
  437a87:	mov    eax,0x1
  437a8c:	add    rsp,0x8
  437a90:	pop    rbx
  437a91:	pop    rbp
  437a92:	ret    
  437a93:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  437a9e:	xchg   ax,ax
  437aa0:	endbr64 
  437aa4:	push   rbp
  437aa5:	mov    rbp,rdi
  437aa8:	push   rbx
  437aa9:	sub    rsp,0x8
  437aad:	call   425890 <xmlStrEqual@plt+0x21950>
  437ab2:	movzx  eax,ax
  437ab5:	cmp    eax,0x2
  437ab8:	je     437b00 <xmlStrEqual@plt+0x33bc0>
  437aba:	mov    ebx,0xffffffff
  437abf:	cmp    eax,0xa
  437ac2:	jne    437aed <xmlStrEqual@plt+0x33bad>
  437ac4:	mov    rdi,rbp
  437ac7:	call   424e80 <xmlStrEqual@plt+0x20f40>
  437acc:	mov    rdi,rax
  437acf:	call   425cf0 <xmlStrEqual@plt+0x21db0>
  437ad4:	lea    rcx,[rax+0x10]
  437ad8:	nop    DWORD PTR [rax+rax*1+0x0]
  437ae0:	movzx  edx,BYTE PTR [rax]
  437ae3:	inc    rax
  437ae6:	add    ebx,edx
  437ae8:	cmp    rax,rcx
  437aeb:	jne    437ae0 <xmlStrEqual@plt+0x33ba0>
  437aed:	add    rsp,0x8
  437af1:	mov    eax,ebx
  437af3:	pop    rbx
  437af4:	pop    rbp
  437af5:	ret    
  437af6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  437b00:	mov    rdi,rbp
  437b03:	call   425ce0 <xmlStrEqual@plt+0x21da0>
  437b08:	mov    ebx,DWORD PTR [rax]
  437b0a:	add    rsp,0x8
  437b0e:	mov    eax,ebx
  437b10:	pop    rbx
  437b11:	pop    rbp
  437b12:	ret    
  437b13:	nop    WORD PTR cs:[rax+rax*1+0x0]
  437b1d:	nop    DWORD PTR [rax]
  437b20:	endbr64 
  437b24:	push   r15
  437b26:	push   r14
  437b28:	push   r13
  437b2a:	push   r12
  437b2c:	push   rbp
  437b2d:	push   rbx
  437b2e:	sub    rsp,0x1000
  437b35:	or     QWORD PTR [rsp],0x0
  437b3a:	sub    rsp,0x48
  437b3e:	mov    rax,QWORD PTR [rsp+0x1080]
  437b46:	mov    DWORD PTR [rsp+0x1c],esi
  437b4a:	mov    QWORD PTR [rsp+0x10],rax
  437b4f:	mov    rax,QWORD PTR [rsp+0x1088]
  437b57:	mov    DWORD PTR [rsp+0x24],edx
  437b5b:	mov    DWORD PTR [rsp+0x20],r8d
  437b60:	mov    DWORD PTR [rsp+0x28],r9d
  437b65:	mov    QWORD PTR [rsp+0x8],rax
  437b6a:	mov    r14d,edi
  437b6d:	xor    edx,edx
  437b6f:	mov    esi,0x2
  437b74:	mov    edi,0x10
  437b79:	mov    r15d,ecx
  437b7c:	mov    r13d,ecx
  437b7f:	mov    rax,QWORD PTR fs:0x28
  437b88:	mov    QWORD PTR [rsp+0x1038],rax
  437b90:	xor    eax,eax
  437b92:	call   403880 <socket@plt>
  437b97:	mov    r12d,eax
  437b9a:	test   eax,eax
  437b9c:	js     437db0 <xmlStrEqual@plt+0x33e70>
  437ba2:	cmp    r14d,0x2
  437ba6:	mov    eax,0x10
  437bab:	mov    ebx,0x4
  437bb0:	lea    rbp,[rsp+0x30]
  437bb5:	cmovne ebx,eax
  437bb8:	mov    edx,0x1000
  437bbd:	xor    esi,esi
  437bbf:	mov    rdi,rbp
  437bc2:	call   4039f0 <memset@plt>
  437bc7:	mov    rax,QWORD PTR [rsp+0x10]
  437bcc:	test   rax,rax
  437bcf:	je     437d60 <xmlStrEqual@plt+0x33e20>
  437bd5:	mov    edx,0x2
  437bda:	mov    WORD PTR [rsp+0x4e],dx
  437bdf:	lea    rdi,[rbp+0x20]
  437be3:	lea    edx,[rbx+0x4]
  437be6:	mov    rsi,rax
  437be9:	mov    WORD PTR [rsp+0x4c],dx
  437bee:	mov    DWORD PTR [rsp+0x2c],edx
  437bf2:	call   4250b0 <xmlStrEqual@plt+0x21170>
  437bf7:	movzx  ebx,WORD PTR [rsp+0x4c]
  437bfc:	mov    rdi,QWORD PTR [rsp+0x10]
  437c01:	add    ebx,0xc
  437c04:	call   424ee0 <xmlStrEqual@plt+0x20fa0>
  437c09:	cmp    QWORD PTR [rsp+0x8],0x0
  437c0f:	mov    r8d,eax
  437c12:	je     437e48 <xmlStrEqual@plt+0x33f08>
  437c18:	cmp    ebx,0xc
  437c1b:	mov    edx,DWORD PTR [rsp+0x2c]
  437c1f:	je     437ec0 <xmlStrEqual@plt+0x33f80>
  437c25:	movzx  eax,WORD PTR [rsp+0x4c]
  437c2a:	lea    rcx,[rbp+rax*1+0x1c]
  437c2f:	mov    r11d,0x1
  437c35:	mov    WORD PTR [rcx+0x2],r11w
  437c3a:	mov    WORD PTR [rcx],dx
  437c3d:	mov    rsi,QWORD PTR [rsp+0x8]
  437c42:	lea    rdi,[rcx+0x4]
  437c46:	mov    BYTE PTR [rsp+0x2c],r8b
  437c4b:	mov    QWORD PTR [rsp+0x10],rcx
  437c50:	call   4250b0 <xmlStrEqual@plt+0x21170>
  437c55:	mov    rcx,QWORD PTR [rsp+0x10]
  437c5a:	mov    rdi,QWORD PTR [rsp+0x8]
  437c5f:	movzx  eax,WORD PTR [rcx]
  437c62:	add    ebx,eax
  437c64:	call   424ee0 <xmlStrEqual@plt+0x20fa0>
  437c69:	mov    rcx,QWORD PTR [rsp+0x10]
  437c6e:	movzx  r8d,BYTE PTR [rsp+0x2c]
  437c74:	mov    r10d,DWORD PTR [rsp+0x20]
  437c79:	test   r10d,r10d
  437c7c:	je     437d80 <xmlStrEqual@plt+0x33e40>
  437c82:	lea    esi,[rbx+0x8]
  437c85:	cmp    ebx,0xc
  437c88:	je     437e58 <xmlStrEqual@plt+0x33f18>
  437c8e:	movzx  edx,WORD PTR [rcx]
  437c91:	add    rcx,rdx
  437c94:	mov    ebx,DWORD PTR [rsp+0x20]
  437c98:	mov    r9d,DWORD PTR [rsp+0x1c]
  437c9d:	mov    DWORD PTR [rcx],0x60008
  437ca3:	mov    DWORD PTR [rcx+0x4],ebx
  437ca6:	test   r9d,r9d
  437ca9:	jne    437e10 <xmlStrEqual@plt+0x33ed0>
  437caf:	add    esi,0x10
  437cb2:	movsxd rdx,esi
  437cb5:	mov    DWORD PTR [rsp+0x30],esi
  437cb9:	cmp    DWORD PTR [rsp+0x24],0x20
  437cbe:	mov    esi,0x5
  437cc3:	mov    WORD PTR [rsp+0x36],si
  437cc8:	je     437da0 <xmlStrEqual@plt+0x33e60>
  437cce:	mov    ecx,0x21
  437cd3:	mov    WORD PTR [rsp+0x34],cx
  437cd8:	test   r15b,r15b
  437cdb:	mov    BYTE PTR [rsp+0x41],al
  437cdf:	mov    eax,0xfffffffe
  437ce4:	cmove  r13d,eax
  437ce8:	movzx  eax,BYTE PTR [rsp+0x28]
  437ced:	xor    ecx,ecx
  437cef:	mov    BYTE PTR [rsp+0x47],al
  437cf3:	mov    eax,DWORD PTR [rsp+0x1090]
  437cfa:	mov    rsi,rbp
  437cfd:	mov    edi,r12d
  437d00:	mov    BYTE PTR [rsp+0x40],r14b
  437d05:	mov    BYTE PTR [rsp+0x42],r8b
  437d0a:	mov    BYTE PTR [rsp+0x44],r13b
  437d0f:	mov    BYTE PTR [rsp+0x46],0x0
  437d14:	mov    DWORD PTR [rsp+0x48],eax
  437d18:	call   4039c0 <send@plt>
  437d1d:	test   eax,eax
  437d1f:	js     437dd0 <xmlStrEqual@plt+0x33e90>
  437d25:	mov    edi,r12d
  437d28:	call   403f30 <close@plt>
  437d2d:	mov    rsi,QWORD PTR [rsp+0x1038]
  437d35:	xor    rsi,QWORD PTR fs:0x28
  437d3e:	mov    eax,0x1
  437d43:	jne    437ec9 <xmlStrEqual@plt+0x33f89>
  437d49:	add    rsp,0x1048
  437d50:	pop    rbx
  437d51:	pop    rbp
  437d52:	pop    r12
  437d54:	pop    r13
  437d56:	pop    r14
  437d58:	pop    r15
  437d5a:	ret    
  437d5b:	nop    DWORD PTR [rax+rax*1+0x0]
  437d60:	cmp    QWORD PTR [rsp+0x8],0x0
  437d66:	je     437e68 <xmlStrEqual@plt+0x33f28>
  437d6c:	lea    edx,[rbx+0x4]
  437d6f:	xor    r8d,r8d
  437d72:	mov    ebx,0xc
  437d77:	lea    rcx,[rbp+0x1c]
  437d7b:	jmp    437c2f <xmlStrEqual@plt+0x33cef>
  437d80:	mov    edi,DWORD PTR [rsp+0x1c]
  437d84:	test   edi,edi
  437d86:	jne    437e30 <xmlStrEqual@plt+0x33ef0>
  437d8c:	lea    esi,[rbx+0x10]
  437d8f:	movsxd rdx,esi
  437d92:	jmp    437cb5 <xmlStrEqual@plt+0x33d75>
  437d97:	nop    WORD PTR [rax+rax*1+0x0]
  437da0:	mov    DWORD PTR [rsp+0x34],0x5050020
  437da8:	jmp    437cd8 <xmlStrEqual@plt+0x33d98>
  437dad:	nop    DWORD PTR [rax]
  437db0:	xor    eax,eax
  437db2:	lea    rsi,[rip+0x19ddf]        # 451b98 <xmlStrEqual@plt+0x4dc58>
  437db9:	mov    edi,0x1
  437dbe:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  437dc3:	xor    eax,eax
  437dc5:	call   43f9f0 <xmlStrEqual@plt+0x3bab0>
  437dca:	jmp    437ba2 <xmlStrEqual@plt+0x33c62>
  437dcf:	nop
  437dd0:	call   4037f0 <__errno_location@plt>
  437dd5:	mov    edi,DWORD PTR [rax]
  437dd7:	call   403910 <strerror@plt>
  437ddc:	mov    rdx,rax
  437ddf:	lea    rsi,[rip+0x19dea]        # 451bd0 <xmlStrEqual@plt+0x4dc90>
  437de6:	xor    eax,eax
  437de8:	mov    edi,0x1
  437ded:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  437df2:	mov    edi,r12d
  437df5:	call   403f30 <close@plt>
  437dfa:	xor    eax,eax
  437dfc:	call   43f9f0 <xmlStrEqual@plt+0x3bab0>
  437e01:	jmp    437d25 <xmlStrEqual@plt+0x33de5>
  437e06:	nop    WORD PTR cs:[rax+rax*1+0x0]
  437e10:	mov    edx,0x8
  437e15:	add    esi,0x18
  437e18:	add    rcx,rdx
  437e1b:	movsxd rdx,esi
  437e1e:	mov    ebx,DWORD PTR [rsp+0x1c]
  437e22:	mov    DWORD PTR [rcx],0x30008
  437e28:	mov    DWORD PTR [rcx+0x4],ebx
  437e2b:	jmp    437cb5 <xmlStrEqual@plt+0x33d75>
  437e30:	lea    esi,[rbx+0x18]
  437e33:	movsxd rdx,esi
  437e36:	cmp    ebx,0xc
  437e39:	je     437e1e <xmlStrEqual@plt+0x33ede>
  437e3b:	movzx  edx,WORD PTR [rcx]
  437e3e:	mov    esi,ebx
  437e40:	jmp    437e15 <xmlStrEqual@plt+0x33ed5>
  437e42:	nop    WORD PTR [rax+rax*1+0x0]
  437e48:	xor    eax,eax
  437e4a:	lea    rcx,[rbp+0x1c]
  437e4e:	jmp    437c74 <xmlStrEqual@plt+0x33d34>
  437e53:	nop    DWORD PTR [rax+rax*1+0x0]
  437e58:	mov    esi,0x14
  437e5d:	jmp    437c94 <xmlStrEqual@plt+0x33d54>
  437e62:	nop    WORD PTR [rax+rax*1+0x0]
  437e68:	mov    edx,DWORD PTR [rsp+0x20]
  437e6c:	test   edx,edx
  437e6e:	jne    437e90 <xmlStrEqual@plt+0x33f50>
  437e70:	mov    eax,DWORD PTR [rsp+0x1c]
  437e74:	test   eax,eax
  437e76:	jne    437ea8 <xmlStrEqual@plt+0x33f68>
  437e78:	mov    edx,0x1c
  437e7d:	xor    r8d,r8d
  437e80:	xor    eax,eax
  437e82:	mov    esi,0x1c
  437e87:	jmp    437cb5 <xmlStrEqual@plt+0x33d75>
  437e8c:	nop    DWORD PTR [rax+0x0]
  437e90:	xor    r8d,r8d
  437e93:	xor    eax,eax
  437e95:	mov    esi,0x14
  437e9a:	lea    rcx,[rbp+0x1c]
  437e9e:	jmp    437c94 <xmlStrEqual@plt+0x33d54>
  437ea3:	nop    DWORD PTR [rax+rax*1+0x0]
  437ea8:	mov    edx,0x24
  437ead:	xor    r8d,r8d
  437eb0:	xor    eax,eax
  437eb2:	mov    esi,0x24
  437eb7:	lea    rcx,[rbp+0x1c]
  437ebb:	jmp    437e1e <xmlStrEqual@plt+0x33ede>
  437ec0:	lea    rcx,[rbp+0x1c]
  437ec4:	jmp    437c2f <xmlStrEqual@plt+0x33cef>
  437ec9:	call   403c00 <__stack_chk_fail@plt>
  437ece:	xchg   ax,ax
  437ed0:	endbr64 
  437ed4:	push   r14
  437ed6:	push   r13
  437ed8:	mov    r13,r9
  437edb:	push   r12
  437edd:	mov    r12d,ecx
  437ee0:	push   rbp
  437ee1:	mov    ebp,edx
  437ee3:	push   rbx
  437ee4:	mov    r14,QWORD PTR [rsp+0x30]
  437ee9:	sub    rsp,0x8
  437eed:	mov    eax,DWORD PTR [rsp+0x40]
  437ef1:	push   rax
  437ef2:	push   r14
  437ef4:	push   r9
  437ef6:	movzx  r9d,r8b
  437efa:	mov    r8d,ecx
  437efd:	movzx  ecx,dl
  437f00:	mov    edx,0x20
  437f05:	call   437b20 <xmlStrEqual@plt+0x33be0>
  437f0a:	mov    ebx,eax
  437f0c:	add    rsp,0x20
  437f10:	cmp    eax,0x1
  437f13:	je     437f20 <xmlStrEqual@plt+0x33fe0>
  437f15:	mov    eax,ebx
  437f17:	pop    rbx
  437f18:	pop    rbp
  437f19:	pop    r12
  437f1b:	pop    r13
  437f1d:	pop    r14
  437f1f:	ret    
  437f20:	mov    rax,0x469e3c
  437f27:	mov    eax,DWORD PTR [rax]
  437f29:	test   eax,eax
  437f2b:	jle    437f15 <xmlStrEqual@plt+0x33fd5>
  437f2d:	mov    rdi,r14
  437f30:	call   424d40 <xmlStrEqual@plt+0x20e00>
  437f35:	mov    rdi,r13
  437f38:	mov    r14,rax
  437f3b:	call   424d40 <xmlStrEqual@plt+0x20e00>
  437f40:	mov    rdx,rax
  437f43:	mov    r9d,r12d
  437f46:	movzx  r8d,bpl
  437f4a:	mov    rcx,r14
  437f4d:	xor    eax,eax
  437f4f:	lea    rsi,[rip+0x19caa]        # 451c00 <xmlStrEqual@plt+0x4dcc0>
  437f56:	mov    edi,0x5
  437f5b:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  437f60:	mov    eax,ebx
  437f62:	pop    rbx
  437f63:	pop    rbp
  437f64:	pop    r12
  437f66:	pop    r13
  437f68:	pop    r14
  437f6a:	ret    
  437f6b:	nop    DWORD PTR [rax+rax*1+0x0]
  437f70:	endbr64 
  437f74:	push   rbp
  437f75:	mov    rbp,r9
  437f78:	push   rbx
  437f79:	sub    rsp,0x10
  437f7d:	mov    eax,DWORD PTR [rsp+0x30]
  437f81:	push   rax
  437f82:	push   QWORD PTR [rsp+0x30]
  437f86:	push   r9
  437f88:	movzx  r9d,r8b
  437f8c:	mov    r8d,ecx
  437f8f:	movzx  ecx,dl
  437f92:	mov    edx,0x21
  437f97:	call   437b20 <xmlStrEqual@plt+0x33be0>
  437f9c:	mov    ebx,eax
  437f9e:	add    rsp,0x20
  437fa2:	cmp    eax,0x1
  437fa5:	je     437fb0 <xmlStrEqual@plt+0x34070>
  437fa7:	add    rsp,0x8
  437fab:	mov    eax,ebx
  437fad:	pop    rbx
  437fae:	pop    rbp
  437faf:	ret    
  437fb0:	mov    rax,0x469e3c
  437fb7:	mov    eax,DWORD PTR [rax]
  437fb9:	test   eax,eax
  437fbb:	jle    437fa7 <xmlStrEqual@plt+0x34067>
  437fbd:	mov    rdi,rbp
  437fc0:	call   424d40 <xmlStrEqual@plt+0x20e00>
  437fc5:	mov    rdx,rax
  437fc8:	lea    rsi,[rip+0x19ca9]        # 451c78 <xmlStrEqual@plt+0x4dd38>
  437fcf:	xor    eax,eax
  437fd1:	mov    edi,0x5
  437fd6:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  437fdb:	add    rsp,0x8
  437fdf:	mov    eax,ebx
  437fe1:	pop    rbx
  437fe2:	pop    rbp
  437fe3:	ret    
  437fe4:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  437fef:	nop
  437ff0:	endbr64 
  437ff4:	push   r15
  437ff6:	push   r14
  437ff8:	push   r13
  437ffa:	push   r12
  437ffc:	push   rbp
  437ffd:	push   rbx
  437ffe:	sub    rsp,0x1000
  438005:	or     QWORD PTR [rsp],0x0
  43800a:	sub    rsp,0x48
  43800e:	mov    DWORD PTR [rsp+0x20],edi
  438012:	mov    DWORD PTR [rsp+0x24],esi
  438016:	mov    DWORD PTR [rsp+0x1c],edx
  43801a:	mov    QWORD PTR [rsp+0x8],r8
  43801f:	mov    QWORD PTR [rsp+0x10],r9
  438024:	movzx  edi,si
  438027:	mov    r13,rcx
  43802a:	mov    rax,QWORD PTR fs:0x28
  438033:	mov    QWORD PTR [rsp+0x1038],rax
  43803b:	xor    eax,eax
  43803d:	call   426590 <xmlStrEqual@plt+0x22650>
  438042:	xor    edx,edx
  438044:	mov    esi,0x2
  438049:	mov    edi,0x10
  43804e:	mov    r15d,eax
  438051:	call   403880 <socket@plt>
  438056:	mov    r12d,eax
  438059:	test   eax,eax
  43805b:	js     4382a8 <xmlStrEqual@plt+0x34368>
  438061:	lea    rbp,[rsp+0x30]
  438066:	xor    esi,esi
  438068:	mov    edx,0x1000
  43806d:	mov    rdi,rbp
  438070:	call   4039f0 <memset@plt>
  438075:	test   r13,r13
  438078:	je     438280 <xmlStrEqual@plt+0x34340>
  43807e:	movzx  r14d,r15b
  438082:	lea    r9d,[r14+0x4]
  438086:	mov    rsi,r13
  438089:	mov    eax,0x1
  43808e:	lea    rdi,[rbp+0x20]
  438092:	mov    WORD PTR [rsp+0x4c],r9w
  438098:	mov    DWORD PTR [rsp+0x28],r9d
  43809d:	mov    WORD PTR [rsp+0x4e],ax
  4380a2:	call   4250b0 <xmlStrEqual@plt+0x21170>
  4380a7:	movzx  edx,WORD PTR [rsp+0x4c]
  4380ac:	mov    rdi,r13
  4380af:	lea    ebx,[rdx+0xc]
  4380b2:	call   424ee0 <xmlStrEqual@plt+0x20fa0>
  4380b7:	cmp    QWORD PTR [rsp+0x8],0x0
  4380bd:	mov    r13d,eax
  4380c0:	lea    rcx,[rbp+0x1c]
  4380c4:	je     438102 <xmlStrEqual@plt+0x341c2>
  4380c6:	cmp    ebx,0xc
  4380c9:	mov    r9d,DWORD PTR [rsp+0x28]
  4380ce:	je     4380d8 <xmlStrEqual@plt+0x34198>
  4380d0:	movzx  eax,WORD PTR [rsp+0x4c]
  4380d5:	add    rcx,rax
  4380d8:	mov    eax,0x7
  4380dd:	mov    WORD PTR [rcx+0x2],ax
  4380e1:	mov    WORD PTR [rcx],r9w
  4380e5:	mov    rsi,QWORD PTR [rsp+0x8]
  4380ea:	lea    rdi,[rcx+0x4]
  4380ee:	mov    QWORD PTR [rsp+0x28],rcx
  4380f3:	call   4250b0 <xmlStrEqual@plt+0x21170>
  4380f8:	mov    rcx,QWORD PTR [rsp+0x28]
  4380fd:	movzx  eax,WORD PTR [rcx]
  438100:	add    ebx,eax
  438102:	mov    r11d,DWORD PTR [rsp+0x1c]
  438107:	test   r11d,r11d
  43810a:	jne    438238 <xmlStrEqual@plt+0x342f8>
  438110:	cmp    QWORD PTR [rsp+0x10],0x0
  438116:	je     438151 <xmlStrEqual@plt+0x34211>
  438118:	cmp    ebx,0xc
  43811b:	jne    4383b6 <xmlStrEqual@plt+0x34476>
  438121:	mov    r10d,0x5
  438127:	lea    r8d,[r14+0x4]
  43812b:	mov    WORD PTR [rcx+0x2],r10w
  438130:	mov    WORD PTR [rcx],r8w
  438134:	mov    rsi,QWORD PTR [rsp+0x10]
  438139:	lea    rdi,[rcx+0x4]
  43813d:	mov    QWORD PTR [rsp+0x8],rcx
  438142:	call   4250b0 <xmlStrEqual@plt+0x21170>
  438147:	mov    rcx,QWORD PTR [rsp+0x8]
  43814c:	movzx  eax,WORD PTR [rcx]
  43814f:	add    ebx,eax
  438151:	mov    r9d,DWORD PTR [rsp+0x1080]
  438159:	test   r9d,r9d
  43815c:	je     43817a <xmlStrEqual@plt+0x3423a>
  43815e:	cmp    ebx,0xc
  438161:	jne    43831f <xmlStrEqual@plt+0x343df>
  438167:	mov    eax,DWORD PTR [rsp+0x1080]
  43816e:	mov    DWORD PTR [rcx],0x60008
  438174:	mov    DWORD PTR [rcx+0x4],eax
  438177:	add    ebx,0x8
  43817a:	cmp    DWORD PTR [rsp+0x20],0x18
  43817f:	mov    ecx,0x5010018
  438184:	mov    eax,0x10019
  438189:	cmove  eax,ecx
  43818c:	mov    esi,DWORD PTR [rsp+0x1088]
  438193:	mov    DWORD PTR [rsp+0x34],eax
  438197:	movzx  eax,BYTE PTR [rsp+0x24]
  43819c:	test   esi,esi
  43819e:	mov    BYTE PTR [rsp+0x40],al
  4381a2:	mov    eax,0xfe
  4381a7:	cmovne eax,DWORD PTR [rsp+0x1088]
  4381af:	lea    edx,[rbx+0x10]
  4381b2:	mov    DWORD PTR [rsp+0x1088],eax
  4381b9:	mov    edi,0x100
  4381be:	xor    r8d,r8d
  4381c1:	movzx  eax,BYTE PTR [rsp+0x1088]
  4381c9:	mov    DWORD PTR [rsp+0x30],edx
  4381cd:	mov    WORD PTR [rsp+0x46],di
  4381d2:	xor    ecx,ecx
  4381d4:	movsxd rdx,edx
  4381d7:	mov    rsi,rbp
  4381da:	mov    edi,r12d
  4381dd:	mov    BYTE PTR [rsp+0x44],al
  4381e1:	mov    BYTE PTR [rsp+0x45],0x4
  4381e6:	mov    WORD PTR [rsp+0x42],r8w
  4381ec:	mov    BYTE PTR [rsp+0x41],r13b
  4381f1:	call   4039c0 <send@plt>
  4381f6:	test   eax,eax
  4381f8:	js     4382d0 <xmlStrEqual@plt+0x34390>
  4381fe:	mov    edi,r12d
  438201:	call   403f30 <close@plt>
  438206:	mov    rbx,QWORD PTR [rsp+0x1038]
  43820e:	xor    rbx,QWORD PTR fs:0x28
  438217:	mov    eax,0x1
  43821c:	jne    4383b1 <xmlStrEqual@plt+0x34471>
  438222:	add    rsp,0x1048
  438229:	pop    rbx
  43822a:	pop    rbp
  43822b:	pop    r12
  43822d:	pop    r13
  43822f:	pop    r14
  438231:	pop    r15
  438233:	ret    
  438234:	nop    DWORD PTR [rax+0x0]
  438238:	lea    eax,[rbx+0x8]
  43823b:	cmp    ebx,0xc
  43823e:	je     438330 <xmlStrEqual@plt+0x343f0>
  438244:	movzx  edx,WORD PTR [rcx]
  438247:	mov    ebx,eax
  438249:	add    rcx,rdx
  43824c:	mov    eax,DWORD PTR [rsp+0x1c]
  438250:	cmp    QWORD PTR [rsp+0x10],0x0
  438256:	mov    DWORD PTR [rcx+0x4],eax
  438259:	mov    DWORD PTR [rcx],0x40008
  43825f:	mov    eax,0x8
  438264:	movzx  r14d,r15b
  438268:	je     438310 <xmlStrEqual@plt+0x343d0>
  43826e:	add    rcx,rax
  438271:	jmp    438121 <xmlStrEqual@plt+0x341e1>
  438276:	nop    WORD PTR cs:[rax+rax*1+0x0]
  438280:	cmp    QWORD PTR [rsp+0x8],0x0
  438286:	je     438340 <xmlStrEqual@plt+0x34400>
  43828c:	movzx  r14d,r15b
  438290:	lea    r9d,[r14+0x4]
  438294:	xor    r13d,r13d
  438297:	mov    ebx,0xc
  43829c:	lea    rcx,[rbp+0x1c]
  4382a0:	jmp    4380d8 <xmlStrEqual@plt+0x34198>
  4382a5:	nop    DWORD PTR [rax]
  4382a8:	xor    eax,eax
  4382aa:	lea    rsi,[rip+0x19a07]        # 451cb8 <xmlStrEqual@plt+0x4dd78>
  4382b1:	mov    edi,0x1
  4382b6:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  4382bb:	xor    eax,eax
  4382bd:	call   43f9f0 <xmlStrEqual@plt+0x3bab0>
  4382c2:	jmp    438061 <xmlStrEqual@plt+0x34121>
  4382c7:	nop    WORD PTR [rax+rax*1+0x0]
  4382d0:	call   4037f0 <__errno_location@plt>
  4382d5:	mov    edi,DWORD PTR [rax]
  4382d7:	call   403910 <strerror@plt>
  4382dc:	mov    rdx,rax
  4382df:	lea    rsi,[rip+0x19a0a]        # 451cf0 <xmlStrEqual@plt+0x4ddb0>
  4382e6:	xor    eax,eax
  4382e8:	mov    edi,0x1
  4382ed:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  4382f2:	mov    edi,r12d
  4382f5:	call   403f30 <close@plt>
  4382fa:	xor    eax,eax
  4382fc:	call   43f9f0 <xmlStrEqual@plt+0x3bab0>
  438301:	jmp    4381fe <xmlStrEqual@plt+0x342be>
  438306:	nop    WORD PTR cs:[rax+rax*1+0x0]
  438310:	mov    eax,DWORD PTR [rsp+0x1080]
  438317:	test   eax,eax
  438319:	je     43817a <xmlStrEqual@plt+0x3423a>
  43831f:	movzx  eax,WORD PTR [rcx]
  438322:	add    rcx,rax
  438325:	jmp    438167 <xmlStrEqual@plt+0x34227>
  43832a:	nop    WORD PTR [rax+rax*1+0x0]
  438330:	mov    ebx,0x14
  438335:	jmp    43824c <xmlStrEqual@plt+0x3430c>
  43833a:	nop    WORD PTR [rax+rax*1+0x0]
  438340:	mov    ecx,DWORD PTR [rsp+0x1c]
  438344:	test   ecx,ecx
  438346:	jne    438368 <xmlStrEqual@plt+0x34428>
  438348:	cmp    QWORD PTR [rsp+0x10],0x0
  43834e:	je     438380 <xmlStrEqual@plt+0x34440>
  438350:	xor    r13d,r13d
  438353:	mov    ebx,0xc
  438358:	lea    rcx,[rbp+0x1c]
  43835c:	movzx  r14d,r15b
  438360:	jmp    438121 <xmlStrEqual@plt+0x341e1>
  438365:	nop    DWORD PTR [rax]
  438368:	xor    r13d,r13d
  43836b:	mov    ebx,0x14
  438370:	lea    rcx,[rbp+0x1c]
  438374:	jmp    43824c <xmlStrEqual@plt+0x3430c>
  438379:	nop    DWORD PTR [rax+0x0]
  438380:	mov    edx,DWORD PTR [rsp+0x1080]
  438387:	test   edx,edx
  438389:	jne    4383a0 <xmlStrEqual@plt+0x34460>
  43838b:	xor    r13d,r13d
  43838e:	mov    ebx,0xc
  438393:	jmp    43817a <xmlStrEqual@plt+0x3423a>
  438398:	nop    DWORD PTR [rax+rax*1+0x0]
  4383a0:	mov    ebx,0xc
  4383a5:	xor    r13d,r13d
  4383a8:	lea    rcx,[rbp+0x1c]
  4383ac:	jmp    438167 <xmlStrEqual@plt+0x34227>
  4383b1:	call   403c00 <__stack_chk_fail@plt>
  4383b6:	movzx  eax,WORD PTR [rcx]
  4383b9:	jmp    43826e <xmlStrEqual@plt+0x3432e>
  4383be:	xchg   ax,ax
  4383c0:	endbr64 
  4383c4:	push   r15
  4383c6:	push   r14
  4383c8:	push   r13
  4383ca:	mov    r13,r8
  4383cd:	push   r12
  4383cf:	mov    r12,rdx
  4383d2:	push   rbp
  4383d3:	mov    rbp,rcx
  4383d6:	push   rbx
  4383d7:	sub    rsp,0x8
  4383db:	mov    r14d,DWORD PTR [rsp+0x40]
  4383e0:	push   r14
  4383e2:	push   r9
  4383e4:	mov    r9,r8
  4383e7:	mov    r8,rcx
  4383ea:	mov    rcx,rdx
  4383ed:	mov    edx,esi
  4383ef:	mov    esi,edi
  4383f1:	mov    edi,0x18
  4383f6:	call   437ff0 <xmlStrEqual@plt+0x340b0>
  4383fb:	pop    rdx
  4383fc:	mov    ebx,eax
  4383fe:	pop    rcx
  4383ff:	cmp    eax,0x1
  438402:	je     438418 <xmlStrEqual@plt+0x344d8>
  438404:	add    rsp,0x8
  438408:	mov    eax,ebx
  43840a:	pop    rbx
  43840b:	pop    rbp
  43840c:	pop    r12
  43840e:	pop    r13
  438410:	pop    r14
  438412:	pop    r15
  438414:	ret    
  438415:	nop    DWORD PTR [rax]
  438418:	mov    rax,0x469e3c
  43841f:	mov    eax,DWORD PTR [rax]
  438421:	test   eax,eax
  438423:	jle    438404 <xmlStrEqual@plt+0x344c4>
  438425:	lea    r15,[rip+0x199a5]        # 451dd1 <xmlStrEqual@plt+0x4de91>
  43842c:	test   r13,r13
  43842f:	je     43843c <xmlStrEqual@plt+0x344fc>
  438431:	mov    rdi,r13
  438434:	call   424d40 <xmlStrEqual@plt+0x20e00>
  438439:	mov    r15,rax
  43843c:	lea    r13,[rip+0x1998e]        # 451dd1 <xmlStrEqual@plt+0x4de91>
  438443:	test   r12,r12
  438446:	je     438453 <xmlStrEqual@plt+0x34513>
  438448:	mov    rdi,r12
  43844b:	call   424d40 <xmlStrEqual@plt+0x20e00>
  438450:	mov    r13,rax
  438453:	lea    rdx,[rip+0x19977]        # 451dd1 <xmlStrEqual@plt+0x4de91>
  43845a:	test   rbp,rbp
  43845d:	je     43846a <xmlStrEqual@plt+0x3452a>
  43845f:	mov    rdi,rbp
  438462:	call   424d40 <xmlStrEqual@plt+0x20e00>
  438467:	mov    rdx,rax
  43846a:	mov    r9d,r14d
  43846d:	mov    r8,r15
  438470:	mov    rcx,r13
  438473:	lea    rsi,[rip+0x198a6]        # 451d20 <xmlStrEqual@plt+0x4dde0>
  43847a:	mov    edi,0x5
  43847f:	xor    eax,eax
  438481:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  438486:	jmp    438404 <xmlStrEqual@plt+0x344c4>
  43848b:	nop    DWORD PTR [rax+rax*1+0x0]
  438490:	endbr64 
  438494:	push   r15
  438496:	push   r14
  438498:	push   r13
  43849a:	mov    r13,r8
  43849d:	push   r12
  43849f:	mov    r12,rdx
  4384a2:	push   rbp
  4384a3:	mov    rbp,rcx
  4384a6:	push   rbx
  4384a7:	sub    rsp,0x8
  4384ab:	mov    r14d,DWORD PTR [rsp+0x40]
  4384b0:	push   r14
  4384b2:	push   r9
  4384b4:	mov    r9,r8
  4384b7:	mov    r8,rcx
  4384ba:	mov    rcx,rdx
  4384bd:	mov    edx,esi
  4384bf:	mov    esi,edi
  4384c1:	mov    edi,0x19
  4384c6:	call   437ff0 <xmlStrEqual@plt+0x340b0>
  4384cb:	pop    rdx
  4384cc:	mov    ebx,eax
  4384ce:	pop    rcx
  4384cf:	cmp    eax,0x1
  4384d2:	je     4384e8 <xmlStrEqual@plt+0x345a8>
  4384d4:	add    rsp,0x8
  4384d8:	mov    eax,ebx
  4384da:	pop    rbx
  4384db:	pop    rbp
  4384dc:	pop    r12
  4384de:	pop    r13
  4384e0:	pop    r14
  4384e2:	pop    r15
  4384e4:	ret    
  4384e5:	nop    DWORD PTR [rax]
  4384e8:	mov    rax,0x469e3c
  4384ef:	mov    eax,DWORD PTR [rax]
  4384f1:	test   eax,eax
  4384f3:	jle    4384d4 <xmlStrEqual@plt+0x34594>
  4384f5:	lea    r15,[rip+0x198d5]        # 451dd1 <xmlStrEqual@plt+0x4de91>
  4384fc:	test   r13,r13
  4384ff:	je     43850c <xmlStrEqual@plt+0x345cc>
  438501:	mov    rdi,r13
  438504:	call   424d40 <xmlStrEqual@plt+0x20e00>
  438509:	mov    r15,rax
  43850c:	lea    r13,[rip+0x198be]        # 451dd1 <xmlStrEqual@plt+0x4de91>
  438513:	test   r12,r12
  438516:	je     438523 <xmlStrEqual@plt+0x345e3>
  438518:	mov    rdi,r12
  43851b:	call   424d40 <xmlStrEqual@plt+0x20e00>
  438520:	mov    r13,rax
  438523:	lea    rdx,[rip+0x198a7]        # 451dd1 <xmlStrEqual@plt+0x4de91>
  43852a:	test   rbp,rbp
  43852d:	je     43853a <xmlStrEqual@plt+0x345fa>
  43852f:	mov    rdi,rbp
  438532:	call   424d40 <xmlStrEqual@plt+0x20e00>
  438537:	mov    rdx,rax
  43853a:	mov    r9d,r14d
  43853d:	mov    r8,r15
  438540:	mov    rcx,r13
  438543:	lea    rsi,[rip+0x1982e]        # 451d78 <xmlStrEqual@plt+0x4de38>
  43854a:	mov    edi,0x5
  43854f:	xor    eax,eax
  438551:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  438556:	jmp    4384d4 <xmlStrEqual@plt+0x34594>
  43855b:	nop    DWORD PTR [rax+rax*1+0x0]
  438560:	endbr64 
  438564:	mov    edi,0x98
  438569:	jmp    434fe0 <xmlStrEqual@plt+0x310a0>
  43856e:	xchg   ax,ax
  438570:	endbr64 
  438574:	test   rdi,rdi
  438577:	je     4385f0 <xmlStrEqual@plt+0x346b0>
  438579:	push   r12
  43857b:	push   rbp
  43857c:	mov    rbp,rdi
  43857f:	push   rbx
  438580:	mov    rbx,QWORD PTR [rdi]
  438583:	test   rbx,rbx
  438586:	je     4385ac <xmlStrEqual@plt+0x3466c>
  438588:	nop    DWORD PTR [rax+rax*1+0x0]
  438590:	mov    edi,DWORD PTR [rbx+0x18]
  438593:	mov    r12,QWORD PTR [rbx+0x20]
  438597:	call   403f30 <close@plt>
  43859c:	mov    rdi,rbx
  43859f:	call   4037b0 <free@plt>
  4385a4:	mov    rbx,r12
  4385a7:	test   r12,r12
  4385aa:	jne    438590 <xmlStrEqual@plt+0x34650>
  4385ac:	mov    rdi,rbp
  4385af:	call   4037b0 <free@plt>
  4385b4:	mov    rax,0x469e3c
  4385bb:	mov    eax,DWORD PTR [rax]
  4385bd:	test   eax,eax
  4385bf:	jg     4385d0 <xmlStrEqual@plt+0x34690>
  4385c1:	pop    rbx
  4385c2:	pop    rbp
  4385c3:	pop    r12
  4385c5:	ret    
  4385c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4385d0:	pop    rbx
  4385d1:	pop    rbp
  4385d2:	lea    rsi,[rip+0x197fa]        # 451dd3 <xmlStrEqual@plt+0x4de93>
  4385d9:	mov    edi,0x5
  4385de:	xor    eax,eax
  4385e0:	pop    r12
  4385e2:	jmp    430e20 <xmlStrEqual@plt+0x2cee0>
  4385e7:	nop    WORD PTR [rax+rax*1+0x0]
  4385f0:	ret    
  4385f1:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4385fc:	nop    DWORD PTR [rax+0x0]
  438600:	endbr64 
  438604:	mov    rax,QWORD PTR [rdi]
  438607:	test   rax,rax
  43860a:	je     43861e <xmlStrEqual@plt+0x346de>
  43860c:	nop    DWORD PTR [rax+0x0]
  438610:	cmp    DWORD PTR [rax+0x18],esi
  438613:	je     43861e <xmlStrEqual@plt+0x346de>
  438615:	mov    rax,QWORD PTR [rax+0x20]
  438619:	test   rax,rax
  43861c:	jne    438610 <xmlStrEqual@plt+0x346d0>
  43861e:	ret    
  43861f:	nop
  438620:	endbr64 
  438624:	push   r14
  438626:	push   r13
  438628:	push   r12
  43862a:	push   rbp
  43862b:	push   rbx
  43862c:	sub    rsp,0x30
  438630:	mov    rbx,QWORD PTR [rdi]
  438633:	mov    rax,QWORD PTR fs:0x28
  43863c:	mov    QWORD PTR [rsp+0x28],rax
  438641:	xor    eax,eax
  438643:	mov    DWORD PTR [rsp+0xc],0x10
  43864b:	test   rbx,rbx
  43864e:	je     4386d0 <xmlStrEqual@plt+0x34790>
  438654:	mov    r13d,esi
  438657:	mov    r14d,edx
  43865a:	lea    r12,[rsp+0x10]
  43865f:	lea    rbp,[rsp+0xc]
  438664:	jmp    43867f <xmlStrEqual@plt+0x3473f>
  438666:	nop    WORD PTR cs:[rax+rax*1+0x0]
  438670:	cmp    r13d,0xa
  438674:	je     43869f <xmlStrEqual@plt+0x3475f>
  438676:	mov    rbx,QWORD PTR [rbx+0x20]
  43867a:	test   rbx,rbx
  43867d:	je     4386d0 <xmlStrEqual@plt+0x34790>
  43867f:	mov    edi,DWORD PTR [rbx+0x18]
  438682:	mov    rdx,rbp
  438685:	mov    rsi,r12
  438688:	call   403b30 <getsockname@plt>
  43868d:	cmp    eax,0xffffffff
  438690:	je     438676 <xmlStrEqual@plt+0x34736>
  438692:	cmp    DWORD PTR [rsp+0xc],0x10
  438697:	jne    438670 <xmlStrEqual@plt+0x34730>
  438699:	cmp    r13d,0x2
  43869d:	jne    438676 <xmlStrEqual@plt+0x34736>
  43869f:	movbe  ax,WORD PTR [rsp+0x12]
  4386a6:	cmp    r14w,ax
  4386aa:	jne    438676 <xmlStrEqual@plt+0x34736>
  4386ac:	nop    DWORD PTR [rax+0x0]
  4386b0:	mov    rcx,QWORD PTR [rsp+0x28]
  4386b5:	xor    rcx,QWORD PTR fs:0x28
  4386be:	mov    rax,rbx
  4386c1:	jne    4386d4 <xmlStrEqual@plt+0x34794>
  4386c3:	add    rsp,0x30
  4386c7:	pop    rbx
  4386c8:	pop    rbp
  4386c9:	pop    r12
  4386cb:	pop    r13
  4386cd:	pop    r14
  4386cf:	ret    
  4386d0:	xor    ebx,ebx
  4386d2:	jmp    4386b0 <xmlStrEqual@plt+0x34770>
  4386d4:	call   403c00 <__stack_chk_fail@plt>
  4386d9:	nop    DWORD PTR [rax+0x0]
  4386e0:	endbr64 
  4386e4:	push   r13
  4386e6:	mov    r13,rsi
  4386e9:	push   r12
  4386eb:	mov    r12,rdx
  4386ee:	push   rbp
  4386ef:	mov    ebp,ecx
  4386f1:	push   rbx
  4386f2:	mov    rbx,rdi
  4386f5:	mov    edi,0x30
  4386fa:	sub    rsp,0x8
  4386fe:	call   434fe0 <xmlStrEqual@plt+0x310a0>
  438703:	mov    rdx,QWORD PTR [rbx+0x8]
  438707:	mov    QWORD PTR [rax+0x8],r13
  43870b:	mov    DWORD PTR [rax],0x0
  438711:	mov    QWORD PTR [rax+0x10],r12
  438715:	mov    DWORD PTR [rax+0x18],ebp
  438718:	mov    QWORD PTR [rax+0x20],0x0
  438720:	mov    QWORD PTR [rax+0x28],rdx
  438724:	test   rdx,rdx
  438727:	je     438750 <xmlStrEqual@plt+0x34810>
  438729:	mov    QWORD PTR [rdx+0x20],rax
  43872d:	mov    QWORD PTR [rbx+0x8],rax
  438731:	inc    DWORD PTR [rbx+0x10]
  438734:	cmp    ebp,DWORD PTR [rbx+0x14]
  438737:	jle    43873c <xmlStrEqual@plt+0x347fc>
  438739:	mov    DWORD PTR [rbx+0x14],ebp
  43873c:	add    rsp,0x8
  438740:	pop    rbx
  438741:	pop    rbp
  438742:	pop    r12
  438744:	pop    r13
  438746:	ret    
  438747:	nop    WORD PTR [rax+rax*1+0x0]
  438750:	mov    QWORD PTR [rbx],rax
  438753:	jmp    43872d <xmlStrEqual@plt+0x347ed>
  438755:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  438760:	endbr64 
  438764:	mov    eax,DWORD PTR [rdi+0x18]
  438767:	ret    
  438768:	nop    DWORD PTR [rax+rax*1+0x0]
  438770:	endbr64 
  438774:	push   r12
  438776:	mov    rdx,QWORD PTR [rsi+0x28]
  43877a:	mov    rax,QWORD PTR [rsi+0x20]
  43877e:	push   rbp
  43877f:	mov    rbp,rsi
  438782:	push   rbx
  438783:	mov    rbx,rdi
  438786:	test   rdx,rdx
  438789:	je     438810 <xmlStrEqual@plt+0x348d0>
  43878f:	mov    QWORD PTR [rdx+0x20],rax
  438793:	test   rax,rax
  438796:	je     43879c <xmlStrEqual@plt+0x3485c>
  438798:	mov    QWORD PTR [rax+0x28],rdx
  43879c:	cmp    QWORD PTR [rbp+0x20],0x0
  4387a1:	je     4387d0 <xmlStrEqual@plt+0x34890>
  4387a3:	mov    r12d,DWORD PTR [rbp+0x18]
  4387a7:	mov    edi,r12d
  4387aa:	call   403f30 <close@plt>
  4387af:	mov    rdi,rbp
  4387b2:	call   4037b0 <free@plt>
  4387b7:	mov    edx,DWORD PTR [rbx+0x14]
  4387ba:	dec    DWORD PTR [rbx+0x10]
  4387bd:	cmp    r12d,edx
  4387c0:	je     4387e0 <xmlStrEqual@plt+0x348a0>
  4387c2:	pop    rbx
  4387c3:	pop    rbp
  4387c4:	mov    eax,0x1
  4387c9:	pop    r12
  4387cb:	ret    
  4387cc:	nop    DWORD PTR [rax+0x0]
  4387d0:	mov    rax,QWORD PTR [rbp+0x28]
  4387d4:	mov    QWORD PTR [rbx+0x8],rax
  4387d8:	jmp    4387a3 <xmlStrEqual@plt+0x34863>
  4387da:	nop    WORD PTR [rax+rax*1+0x0]
  4387e0:	mov    rax,QWORD PTR [rbx]
  4387e3:	test   rax,rax
  4387e6:	jne    4387f3 <xmlStrEqual@plt+0x348b3>
  4387e8:	jmp    438828 <xmlStrEqual@plt+0x348e8>
  4387ea:	nop    WORD PTR [rax+rax*1+0x0]
  4387f0:	mov    edx,DWORD PTR [rbx+0x14]
  4387f3:	mov    ecx,DWORD PTR [rax+0x18]
  4387f6:	cmp    ecx,edx
  4387f8:	jle    4387fd <xmlStrEqual@plt+0x348bd>
  4387fa:	mov    DWORD PTR [rbx+0x14],ecx
  4387fd:	mov    rax,QWORD PTR [rax+0x20]
  438801:	test   rax,rax
  438804:	jne    4387f0 <xmlStrEqual@plt+0x348b0>
  438806:	pop    rbx
  438807:	pop    rbp
  438808:	mov    eax,0x1
  43880d:	pop    r12
  43880f:	ret    
  438810:	mov    QWORD PTR [rdi],rax
  438813:	test   rax,rax
  438816:	je     4387d4 <xmlStrEqual@plt+0x34894>
  438818:	mov    QWORD PTR [rax+0x28],0x0
  438820:	jmp    4387a3 <xmlStrEqual@plt+0x34863>
  438822:	nop    WORD PTR [rax+rax*1+0x0]
  438828:	mov    DWORD PTR [rbx+0x14],0x0
  43882f:	pop    rbx
  438830:	pop    rbp
  438831:	mov    eax,0x1
  438836:	pop    r12
  438838:	ret    
  438839:	nop    DWORD PTR [rax+0x0]
  438840:	endbr64 
  438844:	push   r12
  438846:	lea    r12,[rdi+0x18]
  43884a:	push   rbp
  43884b:	push   rbx
  43884c:	mov    rbx,rdi
  43884f:	sub    rsp,0x20
  438853:	mov    rax,QWORD PTR fs:0x28
  43885c:	mov    QWORD PTR [rsp+0x18],rax
  438861:	xor    eax,eax
  438863:	mov    QWORD PTR [rsp],0x0
  43886b:	mov    QWORD PTR [rsp+0x8],0x3e8
  438874:	mov    rbp,rsp
  438877:	mov    eax,DWORD PTR [rbx+0x14]
  43887a:	xor    ecx,ecx
  43887c:	xor    edx,edx
  43887e:	lea    edi,[rax+0x1]
  438881:	mov    r8,rbp
  438884:	mov    rsi,r12
  438887:	call   403b50 <select@plt>
  43888c:	cmp    eax,0xffffffff
  43888f:	jne    4388e0 <xmlStrEqual@plt+0x349a0>
  438891:	call   4037f0 <__errno_location@plt>
  438896:	mov    edi,DWORD PTR [rax]
  438898:	cmp    edi,0x4
  43889b:	je     438877 <xmlStrEqual@plt+0x34937>
  43889d:	mov    rax,0x469e3c
  4388a4:	cmp    DWORD PTR [rax],0x1
  4388a7:	jle    4388c4 <xmlStrEqual@plt+0x34984>
  4388a9:	call   403910 <strerror@plt>
  4388ae:	mov    rdx,rax
  4388b1:	lea    rsi,[rip+0x19568]        # 451e20 <xmlStrEqual@plt+0x4dee0>
  4388b8:	mov    edi,0x6
  4388bd:	xor    eax,eax
  4388bf:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  4388c4:	mov    rax,QWORD PTR [rsp+0x18]
  4388c9:	xor    rax,QWORD PTR fs:0x28
  4388d2:	jne    43892e <xmlStrEqual@plt+0x349ee>
  4388d4:	add    rsp,0x20
  4388d8:	pop    rbx
  4388d9:	pop    rbp
  4388da:	pop    r12
  4388dc:	ret    
  4388dd:	nop    DWORD PTR [rax]
  4388e0:	mov    r12,QWORD PTR [rbx]
  4388e3:	test   r12,r12
  4388e6:	je     4388c4 <xmlStrEqual@plt+0x34984>
  4388e8:	mov    ebp,0x1
  4388ed:	nop    DWORD PTR [rax]
  4388f0:	movsxd rdi,DWORD PTR [r12+0x18]
  4388f5:	call   403dd0 <__fdelt_chk@plt>
  4388fa:	mov    edx,DWORD PTR [r12+0x18]
  4388ff:	mov    ecx,edx
  438901:	sar    ecx,0x1f
  438904:	shr    ecx,0x1a
  438907:	add    edx,ecx
  438909:	and    edx,0x3f
  43890c:	sub    edx,ecx
  43890e:	shlx   rdx,rbp,rdx
  438913:	test   QWORD PTR [rbx+rax*8+0x18],rdx
  438918:	je     438922 <xmlStrEqual@plt+0x349e2>
  43891a:	mov    rdi,r12
  43891d:	call   QWORD PTR [r12+0x8]
  438922:	mov    r12,QWORD PTR [r12+0x20]
  438927:	test   r12,r12
  43892a:	jne    4388f0 <xmlStrEqual@plt+0x349b0>
  43892c:	jmp    4388c4 <xmlStrEqual@plt+0x34984>
  43892e:	call   403c00 <__stack_chk_fail@plt>
  438933:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  43893e:	xchg   ax,ax
  438940:	endbr64 
  438944:	push   r12
  438946:	push   rbp
  438947:	push   rbx
  438948:	mov    rbp,QWORD PTR [rdi]
  43894b:	test   rbp,rbp
  43894e:	je     43898e <xmlStrEqual@plt+0x34a4e>
  438950:	mov    r12,rdi
  438953:	mov    ebx,0x1
  438958:	nop    DWORD PTR [rax+rax*1+0x0]
  438960:	movsxd rdi,DWORD PTR [rbp+0x18]
  438964:	call   403dd0 <__fdelt_chk@plt>
  438969:	mov    edx,DWORD PTR [rbp+0x18]
  43896c:	mov    rbp,QWORD PTR [rbp+0x20]
  438970:	mov    ecx,edx
  438972:	sar    ecx,0x1f
  438975:	shr    ecx,0x1a
  438978:	add    edx,ecx
  43897a:	and    edx,0x3f
  43897d:	sub    edx,ecx
  43897f:	shlx   rdx,rbx,rdx
  438984:	or     QWORD PTR [r12+rax*8+0x18],rdx
  438989:	test   rbp,rbp
  43898c:	jne    438960 <xmlStrEqual@plt+0x34a20>
  43898e:	pop    rbx
  43898f:	pop    rbp
  438990:	pop    r12
  438992:	ret    
  438993:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  43899e:	xchg   ax,ax
  4389a0:	endbr64 
  4389a4:	push   rbp
  4389a5:	mov    ebp,edi
  4389a7:	push   rbx
  4389a8:	sub    rsp,0x18
  4389ac:	mov    rax,QWORD PTR fs:0x28
  4389b5:	mov    QWORD PTR [rsp+0x8],rax
  4389ba:	xor    eax,eax
  4389bc:	mov    DWORD PTR [rsp+0x4],0x1
  4389c4:	call   4394d0 <xmlStrEqual@plt+0x35590>
  4389c9:	mov    ebx,eax
  4389cb:	cmp    eax,0xfffffff7
  4389ce:	je     4389ef <xmlStrEqual@plt+0x34aaf>
  4389d0:	xor    edx,edx
  4389d2:	mov    ecx,0x10f6
  4389d7:	mov    esi,ebp
  4389d9:	mov    edi,eax
  4389db:	call   439a30 <xmlStrEqual@plt+0x35af0>
  4389e0:	cmp    ebp,0x2
  4389e3:	je     438a58 <xmlStrEqual@plt+0x34b18>
  4389e5:	cmp    ebp,0xa
  4389e8:	je     438a10 <xmlStrEqual@plt+0x34ad0>
  4389ea:	mov    ebx,0xfffffff7
  4389ef:	mov    rdx,QWORD PTR [rsp+0x8]
  4389f4:	xor    rdx,QWORD PTR fs:0x28
  4389fd:	mov    eax,ebx
  4389ff:	jne    438aa0 <xmlStrEqual@plt+0x34b60>
  438a05:	add    rsp,0x18
  438a09:	pop    rbx
  438a0a:	pop    rbp
  438a0b:	ret    
  438a0c:	nop    DWORD PTR [rax+0x0]
  438a10:	lea    rcx,[rsp+0x4]
  438a15:	mov    r8d,0x4
  438a1b:	mov    edx,0x31
  438a20:	mov    esi,0x29
  438a25:	mov    edi,ebx
  438a27:	call   403ec0 <setsockopt@plt>
  438a2c:	test   eax,eax
  438a2e:	jns    4389ef <xmlStrEqual@plt+0x34aaf>
  438a30:	call   4037f0 <__errno_location@plt>
  438a35:	mov    edi,DWORD PTR [rax]
  438a37:	call   403910 <strerror@plt>
  438a3c:	mov    rdx,rax
  438a3f:	lea    rsi,[rip+0x19402]        # 451e48 <xmlStrEqual@plt+0x4df08>
  438a46:	mov    edi,0x3
  438a4b:	xor    eax,eax
  438a4d:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  438a52:	jmp    4389ef <xmlStrEqual@plt+0x34aaf>
  438a54:	nop    DWORD PTR [rax+0x0]
  438a58:	xor    esi,esi
  438a5a:	lea    rcx,[rsp+0x4]
  438a5f:	mov    r8d,0x4
  438a65:	mov    edx,0x8
  438a6a:	mov    edi,ebx
  438a6c:	call   403ec0 <setsockopt@plt>
  438a71:	test   eax,eax
  438a73:	jns    4389ef <xmlStrEqual@plt+0x34aaf>
  438a79:	call   4037f0 <__errno_location@plt>
  438a7e:	mov    edi,DWORD PTR [rax]
  438a80:	call   403910 <strerror@plt>
  438a85:	mov    rdx,rax
  438a88:	lea    rsi,[rip+0x19353]        # 451de2 <xmlStrEqual@plt+0x4dea2>
  438a8f:	mov    edi,0x3
  438a94:	xor    eax,eax
  438a96:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  438a9b:	jmp    4389ef <xmlStrEqual@plt+0x34aaf>
  438aa0:	call   403c00 <__stack_chk_fail@plt>
  438aa5:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  438ab0:	endbr64 
  438ab4:	push   r12
  438ab6:	mov    r12d,esi
  438ab9:	push   rbp
  438aba:	push   rbx
  438abb:	mov    ebx,edi
  438abd:	call   439380 <xmlStrEqual@plt+0x35440>
  438ac2:	mov    ebp,eax
  438ac4:	cmp    eax,0xfffffff7
  438ac7:	je     438af0 <xmlStrEqual@plt+0x34bb0>
  438ac9:	mov    edi,ebx
  438acb:	call   4394d0 <xmlStrEqual@plt+0x35590>
  438ad0:	mov    edi,eax
  438ad2:	movzx  ecx,r12w
  438ad6:	xor    edx,edx
  438ad8:	mov    esi,ebx
  438ada:	call   439a30 <xmlStrEqual@plt+0x35af0>
  438adf:	mov    esi,ebx
  438ae1:	mov    edi,ebp
  438ae3:	mov    r12d,eax
  438ae6:	call   439740 <xmlStrEqual@plt+0x35800>
  438aeb:	cmp    eax,0x1
  438aee:	jne    438af7 <xmlStrEqual@plt+0x34bb7>
  438af0:	pop    rbx
  438af1:	mov    eax,ebp
  438af3:	pop    rbp
  438af4:	pop    r12
  438af6:	ret    
  438af7:	mov    edi,ebp
  438af9:	call   403f30 <close@plt>
  438afe:	mov    edi,r12d
  438b01:	call   403f30 <close@plt>
  438b06:	mov    ebp,0xfffffff7
  438b0b:	jmp    438af0 <xmlStrEqual@plt+0x34bb0>
  438b0d:	nop    DWORD PTR [rax]
  438b10:	endbr64 
  438b14:	push   r12
  438b16:	mov    r12d,esi
  438b19:	push   rbp
  438b1a:	mov    ebp,edi
  438b1c:	push   rbx
  438b1d:	sub    rsp,0x10
  438b21:	mov    rax,QWORD PTR fs:0x28
  438b2a:	mov    QWORD PTR [rsp+0x8],rax
  438b2f:	xor    eax,eax
  438b31:	call   4394d0 <xmlStrEqual@plt+0x35590>
  438b36:	test   eax,eax
  438b38:	js     438bee <xmlStrEqual@plt+0x34cae>
  438b3e:	mov    ebx,eax
  438b40:	mov    DWORD PTR [rsp+0x4],0x1
  438b48:	cmp    ebp,0xa
  438b4b:	je     438b90 <xmlStrEqual@plt+0x34c50>
  438b4d:	xor    edx,edx
  438b4f:	mov    ecx,r12d
  438b52:	mov    esi,ebp
  438b54:	mov    edi,ebx
  438b56:	call   439a30 <xmlStrEqual@plt+0x35af0>
  438b5b:	cmp    eax,0x1
  438b5e:	jne    438be0 <xmlStrEqual@plt+0x34ca0>
  438b64:	mov    esi,ebp
  438b66:	mov    edi,ebx
  438b68:	call   439740 <xmlStrEqual@plt+0x35800>
  438b6d:	cmp    eax,0x1
  438b70:	jne    438be0 <xmlStrEqual@plt+0x34ca0>
  438b72:	mov    rdx,QWORD PTR [rsp+0x8]
  438b77:	xor    rdx,QWORD PTR fs:0x28
  438b80:	mov    eax,ebx
  438b82:	jne    438bf8 <xmlStrEqual@plt+0x34cb8>
  438b84:	add    rsp,0x10
  438b88:	pop    rbx
  438b89:	pop    rbp
  438b8a:	pop    r12
  438b8c:	ret    
  438b8d:	nop    DWORD PTR [rax]
  438b90:	lea    rcx,[rsp+0x4]
  438b95:	mov    r8d,0x4
  438b9b:	mov    edx,0x66
  438ba0:	mov    esi,0x11
  438ba5:	mov    edi,eax
  438ba7:	call   403ec0 <setsockopt@plt>
  438bac:	test   eax,eax
  438bae:	jns    438b4d <xmlStrEqual@plt+0x34c0d>
  438bb0:	call   4037f0 <__errno_location@plt>
  438bb5:	mov    edi,DWORD PTR [rax]
  438bb7:	call   403910 <strerror@plt>
  438bbc:	mov    rdx,rax
  438bbf:	lea    rsi,[rip+0x192a2]        # 451e68 <xmlStrEqual@plt+0x4df28>
  438bc6:	mov    edi,0x3
  438bcb:	xor    eax,eax
  438bcd:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  438bd2:	jmp    438b4d <xmlStrEqual@plt+0x34c0d>
  438bd7:	nop    WORD PTR [rax+rax*1+0x0]
  438be0:	mov    edi,ebx
  438be2:	call   403f30 <close@plt>
  438be7:	mov    ebx,0xfffffff7
  438bec:	jmp    438b72 <xmlStrEqual@plt+0x34c32>
  438bee:	mov    ebx,0xfffffff7
  438bf3:	jmp    438b72 <xmlStrEqual@plt+0x34c32>
  438bf8:	call   403c00 <__stack_chk_fail@plt>
  438bfd:	nop    DWORD PTR [rax]
  438c00:	endbr64 
  438c04:	push   rbp
  438c05:	push   rbx
  438c06:	mov    rbx,rsi
  438c09:	sub    rsp,0x8
  438c0d:	mov    edx,DWORD PTR [rbx+0x10]
  438c10:	mov    rsi,QWORD PTR [rsi+0x38]
  438c14:	add    rdx,QWORD PTR [rbx+0x30]
  438c18:	sub    edx,DWORD PTR [rbx+0x14]
  438c1b:	sub    edx,esi
  438c1d:	call   403d40 <read@plt>
  438c22:	test   eax,eax
  438c24:	je     438c40 <xmlStrEqual@plt+0x34d00>
  438c26:	add    DWORD PTR [rbx+0x14],eax
  438c29:	add    rsp,0x8
  438c2d:	mov    ebp,0x1
  438c32:	pop    rbx
  438c33:	mov    eax,ebp
  438c35:	pop    rbp
  438c36:	ret    
  438c37:	nop    WORD PTR [rax+rax*1+0x0]
  438c40:	mov    ebp,eax
  438c42:	call   4037f0 <__errno_location@plt>
  438c47:	mov    edi,DWORD PTR [rax]
  438c49:	call   403910 <strerror@plt>
  438c4e:	mov    rdx,rax
  438c51:	lea    rsi,[rip+0x191a4]        # 451dfc <xmlStrEqual@plt+0x4debc>
  438c58:	xor    eax,eax
  438c5a:	mov    edi,0x3
  438c5f:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  438c64:	add    rsp,0x8
  438c68:	pop    rbx
  438c69:	mov    eax,ebp
  438c6b:	pop    rbp
  438c6c:	ret    
  438c6d:	nop    DWORD PTR [rax]
  438c70:	endbr64 
  438c74:	push   r12
  438c76:	vpxor  xmm0,xmm0,xmm0
  438c7a:	push   rbp
  438c7b:	mov    rbp,rdx
  438c7e:	push   rbx
  438c7f:	mov    rbx,rsi
  438c82:	sub    rsp,0xa0
  438c89:	mov    rax,QWORD PTR fs:0x28
  438c92:	mov    QWORD PTR [rsp+0x98],rax
  438c9a:	xor    eax,eax
  438c9c:	mov    eax,DWORD PTR [rsi+0x10]
  438c9f:	mov    rdx,QWORD PTR [rsi+0x38]
  438ca3:	add    rax,QWORD PTR [rsi+0x30]
  438ca7:	sub    eax,DWORD PTR [rsi+0x14]
  438caa:	mov    rsi,rsp
  438cad:	sub    eax,edx
  438caf:	vmovups XMMWORD PTR [rsp+0xc],xmm0
  438cb5:	mov    QWORD PTR [rsi+0x2c],0x0
  438cbd:	mov    DWORD PTR [rsi+0x34],0x0
  438cc4:	mov    QWORD PTR [rsp+0x48],rax
  438cc9:	lea    rax,[rsp+0x40]
  438cce:	mov    QWORD PTR [rsp+0x40],rdx
  438cd3:	mov    QWORD PTR [rsp+0x10],rax
  438cd8:	lea    r12,[rsp+0x50]
  438cdd:	lea    rax,[rsp+0x70]
  438ce2:	xor    edx,edx
  438ce4:	mov    QWORD PTR [rsp+0x18],0x1
  438ced:	mov    QWORD PTR [rsp+0x20],rax
  438cf2:	mov    QWORD PTR [rsp+0x28],0x28
  438cfb:	mov    QWORD PTR [rsp],r12
  438cff:	mov    DWORD PTR [rsp+0x8],0x1c
  438d07:	call   4038d0 <recvmsg@plt>
  438d0c:	cmp    eax,0xffffffff
  438d0f:	je     438e90 <xmlStrEqual@plt+0x34f50>
  438d15:	add    DWORD PTR [rbx+0x14],eax
  438d18:	cmp    WORD PTR [rsp+0x50],0x2
  438d1e:	mov    rdx,QWORD PTR [rsp+0x28]
  438d23:	je     438df0 <xmlStrEqual@plt+0x34eb0>
  438d29:	cmp    rdx,0xf
  438d2d:	jbe    438da0 <xmlStrEqual@plt+0x34e60>
  438d2f:	mov    rcx,QWORD PTR [rsp+0x20]
  438d34:	test   rcx,rcx
  438d37:	je     438da0 <xmlStrEqual@plt+0x34e60>
  438d39:	movabs rdi,0x3200000029
  438d43:	cmp    QWORD PTR [rcx+0x8],rdi
  438d47:	je     438eb9 <xmlStrEqual@plt+0x34f79>
  438d4d:	mov    rax,QWORD PTR [rcx]
  438d50:	cmp    rax,0xf
  438d54:	jbe    438da0 <xmlStrEqual@plt+0x34e60>
  438d56:	add    rax,0x7
  438d5a:	and    rax,0xfffffffffffffff8
  438d5e:	add    rax,rcx
  438d61:	add    rcx,rdx
  438d64:	lea    rdx,[rax+0x10]
  438d68:	cmp    rcx,rdx
  438d6b:	jb     438da0 <xmlStrEqual@plt+0x34e60>
  438d6d:	mov    rsi,QWORD PTR [rax]
  438d70:	lea    rdx,[rsi+0x7]
  438d74:	and    rdx,0xfffffffffffffff8
  438d78:	add    rdx,rax
  438d7b:	cmp    rdx,rcx
  438d7e:	ja     438da0 <xmlStrEqual@plt+0x34e60>
  438d80:	cmp    QWORD PTR [rax+0x8],rdi
  438d84:	je     438ebc <xmlStrEqual@plt+0x34f7c>
  438d8a:	cmp    rsi,0xf
  438d8e:	jbe    438da0 <xmlStrEqual@plt+0x34e60>
  438d90:	mov    rax,rdx
  438d93:	lea    rdx,[rdx+0x10]
  438d97:	cmp    rcx,rdx
  438d9a:	jae    438d6d <xmlStrEqual@plt+0x34e2d>
  438d9c:	nop    DWORD PTR [rax+0x0]
  438da0:	lea    rsi,[r12+0x8]
  438da5:	lea    rdi,[rbp+0x20]
  438da9:	mov    edx,0xa
  438dae:	call   425480 <xmlStrEqual@plt+0x21540>
  438db3:	movbe  ax,WORD PTR [rsp+0x52]
  438dba:	mov    WORD PTR [rbp+0x42],ax
  438dbe:	mov    eax,0x1
  438dc3:	mov    rcx,QWORD PTR [rsp+0x98]
  438dcb:	xor    rcx,QWORD PTR fs:0x28
  438dd4:	jne    438eeb <xmlStrEqual@plt+0x34fab>
  438dda:	add    rsp,0xa0
  438de1:	pop    rbx
  438de2:	pop    rbp
  438de3:	pop    r12
  438de5:	ret    
  438de6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  438df0:	cmp    rdx,0xf
  438df4:	jbe    438e68 <xmlStrEqual@plt+0x34f28>
  438df6:	mov    rcx,QWORD PTR [rsp+0x20]
  438dfb:	test   rcx,rcx
  438dfe:	je     438e68 <xmlStrEqual@plt+0x34f28>
  438e00:	movabs rdi,0x800000000
  438e0a:	cmp    QWORD PTR [rcx+0x8],rdi
  438e0e:	je     438ed2 <xmlStrEqual@plt+0x34f92>
  438e14:	mov    rax,QWORD PTR [rcx]
  438e17:	cmp    rax,0xf
  438e1b:	jbe    438e68 <xmlStrEqual@plt+0x34f28>
  438e1d:	add    rax,0x7
  438e21:	and    rax,0xfffffffffffffff8
  438e25:	add    rax,rcx
  438e28:	add    rcx,rdx
  438e2b:	lea    rdx,[rax+0x10]
  438e2f:	cmp    rcx,rdx
  438e32:	jb     438e68 <xmlStrEqual@plt+0x34f28>
  438e34:	mov    rsi,QWORD PTR [rax]
  438e37:	lea    rdx,[rsi+0x7]
  438e3b:	and    rdx,0xfffffffffffffff8
  438e3f:	add    rdx,rax
  438e42:	cmp    rdx,rcx
  438e45:	ja     438e68 <xmlStrEqual@plt+0x34f28>
  438e47:	cmp    QWORD PTR [rax+0x8],rdi
  438e4b:	je     438ed5 <xmlStrEqual@plt+0x34f95>
  438e51:	cmp    rsi,0xf
  438e55:	jbe    438e68 <xmlStrEqual@plt+0x34f28>
  438e57:	mov    rax,rdx
  438e5a:	lea    rdx,[rdx+0x10]
  438e5e:	cmp    rcx,rdx
  438e61:	jae    438e34 <xmlStrEqual@plt+0x34ef4>
  438e63:	nop    DWORD PTR [rax+rax*1+0x0]
  438e68:	lea    rsi,[r12+0x4]
  438e6d:	lea    rdi,[rbp+0x20]
  438e71:	mov    edx,0x2
  438e76:	call   425480 <xmlStrEqual@plt+0x21540>
  438e7b:	movbe  ax,WORD PTR [rsp+0x52]
  438e82:	mov    WORD PTR [rbp+0x42],ax
  438e86:	mov    eax,0x1
  438e8b:	jmp    438dc3 <xmlStrEqual@plt+0x34e83>
  438e90:	call   4037f0 <__errno_location@plt>
  438e95:	mov    edi,DWORD PTR [rax]
  438e97:	call   403910 <strerror@plt>
  438e9c:	mov    rdx,rax
  438e9f:	lea    rsi,[rip+0x1900a]        # 451eb0 <xmlStrEqual@plt+0x4df70>
  438ea6:	xor    eax,eax
  438ea8:	mov    edi,0x3
  438ead:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  438eb2:	xor    eax,eax
  438eb4:	jmp    438dc3 <xmlStrEqual@plt+0x34e83>
  438eb9:	mov    rax,rcx
  438ebc:	lea    rsi,[rax+0x10]
  438ec0:	mov    edx,0xa
  438ec5:	mov    rdi,rbp
  438ec8:	call   425480 <xmlStrEqual@plt+0x21540>
  438ecd:	jmp    438da0 <xmlStrEqual@plt+0x34e60>
  438ed2:	mov    rax,rcx
  438ed5:	lea    rsi,[rax+0x18]
  438ed9:	mov    edx,0x2
  438ede:	mov    rdi,rbp
  438ee1:	call   425480 <xmlStrEqual@plt+0x21540>
  438ee6:	jmp    438e68 <xmlStrEqual@plt+0x34f28>
  438eeb:	call   403c00 <__stack_chk_fail@plt>
  438ef0:	endbr64 
  438ef4:	push   r13
  438ef6:	vpxor  xmm0,xmm0,xmm0
  438efa:	mov    r13,rsi
  438efd:	push   r12
  438eff:	mov    r12,rdx
  438f02:	push   rbp
  438f03:	mov    rbp,r8
  438f06:	push   rbx
  438f07:	mov    rbx,rcx
  438f0a:	sub    rsp,0xb8
  438f11:	mov    rax,QWORD PTR fs:0x28
  438f1a:	mov    QWORD PTR [rsp+0xa8],rax
  438f22:	xor    eax,eax
  438f24:	mov    eax,DWORD PTR [rsi+0x10]
  438f27:	mov    rdx,QWORD PTR [rsi+0x38]
  438f2b:	add    rax,QWORD PTR [rsi+0x30]
  438f2f:	sub    eax,DWORD PTR [rsi+0x14]
  438f32:	sub    eax,edx
  438f34:	mov    rsi,rsp
  438f37:	vmovups XMMWORD PTR [rsp+0xc],xmm0
  438f3d:	mov    QWORD PTR [rsp+0x48],rax
  438f42:	mov    QWORD PTR [rsi+0x2c],0x0
  438f4a:	lea    rax,[rsp+0x40]
  438f4f:	mov    DWORD PTR [rsi+0x34],0x0
  438f56:	mov    QWORD PTR [rsp+0x10],rax
  438f5b:	lea    rax,[rsp+0x70]
  438f60:	mov    QWORD PTR [rsp+0x40],rdx
  438f65:	mov    QWORD PTR [rsp+0x20],rax
  438f6a:	xor    edx,edx
  438f6c:	lea    rax,[rsp+0x50]
  438f71:	mov    QWORD PTR [rsp+0x18],0x1
  438f7a:	mov    QWORD PTR [rsp+0x28],0x30
  438f83:	mov    QWORD PTR [rsp],rax
  438f87:	mov    DWORD PTR [rsp+0x8],0x1c
  438f8f:	call   4038d0 <recvmsg@plt>
  438f94:	cmp    eax,0xffffffff
  438f97:	je     4390f8 <xmlStrEqual@plt+0x351b8>
  438f9d:	add    DWORD PTR [r13+0x14],eax
  438fa1:	cmp    WORD PTR [rsp+0x50],0x2
  438fa7:	mov    rdx,QWORD PTR [rsp+0x28]
  438fac:	je     439068 <xmlStrEqual@plt+0x35128>
  438fb2:	cmp    rdx,0xf
  438fb6:	jbe    439030 <xmlStrEqual@plt+0x350f0>
  438fb8:	mov    rax,QWORD PTR [rsp+0x20]
  438fbd:	test   rax,rax
  438fc0:	je     439030 <xmlStrEqual@plt+0x350f0>
  438fc2:	movabs rdi,0x3400000029
  438fcc:	movabs rsi,0x4300000029
  438fd6:	lea    rcx,[rax+rdx*1]
  438fda:	mov    rdx,QWORD PTR [rax+0x8]
  438fde:	cmp    rdx,rdi
  438fe1:	jne    438fed <xmlStrEqual@plt+0x350ad>
  438fe3:	movzx  edx,BYTE PTR [rax+0x10]
  438fe7:	mov    BYTE PTR [rbx],dl
  438fe9:	mov    rdx,QWORD PTR [rax+0x8]
  438fed:	cmp    rdx,rsi
  438ff0:	jne    438ff9 <xmlStrEqual@plt+0x350b9>
  438ff2:	movzx  edx,BYTE PTR [rax+0x10]
  438ff6:	mov    BYTE PTR [rbp+0x0],dl
  438ff9:	mov    rdx,QWORD PTR [rax]
  438ffc:	cmp    rdx,0xf
  439000:	jbe    439030 <xmlStrEqual@plt+0x350f0>
  439002:	add    rdx,0x7
  439006:	and    rdx,0xfffffffffffffff8
  43900a:	add    rax,rdx
  43900d:	lea    rdx,[rax+0x10]
  439011:	cmp    rcx,rdx
  439014:	jb     439030 <xmlStrEqual@plt+0x350f0>
  439016:	mov    rdx,QWORD PTR [rax]
  439019:	add    rdx,0x7
  43901d:	and    rdx,0xfffffffffffffff8
  439021:	add    rdx,rax
  439024:	cmp    rcx,rdx
  439027:	jae    438fda <xmlStrEqual@plt+0x3509a>
  439029:	nop    DWORD PTR [rax+0x0]
  439030:	mov    DWORD PTR [r12],0xa
  439038:	mov    eax,0x1
  43903d:	mov    rbx,QWORD PTR [rsp+0xa8]
  439045:	xor    rbx,QWORD PTR fs:0x28
  43904e:	jne    439121 <xmlStrEqual@plt+0x351e1>
  439054:	add    rsp,0xb8
  43905b:	pop    rbx
  43905c:	pop    rbp
  43905d:	pop    r12
  43905f:	pop    r13
  439061:	ret    
  439062:	nop    WORD PTR [rax+rax*1+0x0]
  439068:	cmp    rdx,0xf
  43906c:	jbe    4390e0 <xmlStrEqual@plt+0x351a0>
  43906e:	mov    rcx,QWORD PTR [rsp+0x20]
  439073:	test   rcx,rcx
  439076:	je     4390e0 <xmlStrEqual@plt+0x351a0>
  439078:	movabs rdi,0x200000000
  439082:	movabs rsi,0x100000000
  43908c:	add    rdx,rcx
  43908f:	mov    rax,QWORD PTR [rcx+0x8]
  439093:	cmp    rax,rdi
  439096:	jne    4390a2 <xmlStrEqual@plt+0x35162>
  439098:	movzx  eax,BYTE PTR [rcx+0x10]
  43909c:	mov    BYTE PTR [rbx],al
  43909e:	mov    rax,QWORD PTR [rcx+0x8]
  4390a2:	cmp    rax,rsi
  4390a5:	jne    4390ae <xmlStrEqual@plt+0x3516e>
  4390a7:	movzx  eax,BYTE PTR [rcx+0x10]
  4390ab:	mov    BYTE PTR [rbp+0x0],al
  4390ae:	mov    rax,QWORD PTR [rcx]
  4390b1:	cmp    rax,0xf
  4390b5:	jbe    4390e0 <xmlStrEqual@plt+0x351a0>
  4390b7:	add    rax,0x7
  4390bb:	and    rax,0xfffffffffffffff8
  4390bf:	add    rcx,rax
  4390c2:	lea    rax,[rcx+0x10]
  4390c6:	cmp    rdx,rax
  4390c9:	jb     4390e0 <xmlStrEqual@plt+0x351a0>
  4390cb:	mov    rax,QWORD PTR [rcx]
  4390ce:	add    rax,0x7
  4390d2:	and    rax,0xfffffffffffffff8
  4390d6:	add    rax,rcx
  4390d9:	cmp    rdx,rax
  4390dc:	jae    43908f <xmlStrEqual@plt+0x3514f>
  4390de:	xchg   ax,ax
  4390e0:	mov    DWORD PTR [r12],0x2
  4390e8:	mov    eax,0x1
  4390ed:	jmp    43903d <xmlStrEqual@plt+0x350fd>
  4390f2:	nop    WORD PTR [rax+rax*1+0x0]
  4390f8:	call   4037f0 <__errno_location@plt>
  4390fd:	mov    edi,DWORD PTR [rax]
  4390ff:	call   403910 <strerror@plt>
  439104:	mov    rdx,rax
  439107:	lea    rsi,[rip+0x18dca]        # 451ed8 <xmlStrEqual@plt+0x4df98>
  43910e:	xor    eax,eax
  439110:	mov    edi,0x3
  439115:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  43911a:	xor    eax,eax
  43911c:	jmp    43903d <xmlStrEqual@plt+0x350fd>
  439121:	call   403c00 <__stack_chk_fail@plt>
  439126:	nop    WORD PTR cs:[rax+rax*1+0x0]
  439130:	endbr64 
  439134:	push   rbp
  439135:	mov    rbp,r8
  439138:	push   rbx
  439139:	mov    rbx,rdi
  43913c:	sub    rsp,0x8
  439140:	mov    WORD PTR [rdi+0x40],si
  439144:	mov    WORD PTR [rdi+0x42],dx
  439148:	test   rcx,rcx
  43914b:	je     439178 <xmlStrEqual@plt+0x35238>
  43914d:	mov    rsi,rcx
  439150:	call   424fd0 <xmlStrEqual@plt+0x21090>
  439155:	lea    rdi,[rbx+0x20]
  439159:	test   rbp,rbp
  43915c:	je     439188 <xmlStrEqual@plt+0x35248>
  43915e:	mov    rsi,rbp
  439161:	call   424fd0 <xmlStrEqual@plt+0x21090>
  439166:	add    rsp,0x8
  43916a:	pop    rbx
  43916b:	mov    eax,0x1
  439170:	pop    rbp
  439171:	ret    
  439172:	nop    WORD PTR [rax+rax*1+0x0]
  439178:	xor    esi,esi
  43917a:	call   424dd0 <xmlStrEqual@plt+0x20e90>
  43917f:	lea    rdi,[rbx+0x20]
  439183:	test   rbp,rbp
  439186:	jne    43915e <xmlStrEqual@plt+0x3521e>
  439188:	xor    esi,esi
  43918a:	call   424dd0 <xmlStrEqual@plt+0x20e90>
  43918f:	add    rsp,0x8
  439193:	pop    rbx
  439194:	mov    eax,0x1
  439199:	pop    rbp
  43919a:	ret    
  43919b:	nop    DWORD PTR [rax+rax*1+0x0]
  4391a0:	endbr64 
  4391a4:	push   rbx
  4391a5:	mov    rbx,rdi
  4391a8:	mov    edi,0x48
  4391ad:	call   435000 <xmlStrEqual@plt+0x310c0>
  4391b2:	vmovdqu xmm0,XMMWORD PTR [rbx]
  4391b6:	vmovups XMMWORD PTR [rax],xmm0
  4391ba:	vmovdqu xmm1,XMMWORD PTR [rbx+0x10]
  4391bf:	vmovups XMMWORD PTR [rax+0x10],xmm1
  4391c4:	vmovdqu xmm2,XMMWORD PTR [rbx+0x20]
  4391c9:	vmovups XMMWORD PTR [rax+0x20],xmm2
  4391ce:	vmovdqu xmm3,XMMWORD PTR [rbx+0x30]
  4391d3:	vmovups XMMWORD PTR [rax+0x30],xmm3
  4391d8:	mov    rdx,QWORD PTR [rbx+0x40]
  4391dc:	mov    QWORD PTR [rax+0x40],rdx
  4391e0:	pop    rbx
  4391e1:	ret    
  4391e2:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4391ed:	nop    DWORD PTR [rax]
  4391f0:	endbr64 
  4391f4:	push   r13
  4391f6:	lea    r13,[rdi+0x20]
  4391fa:	push   r12
  4391fc:	lea    r12,[rsi+0x20]
  439200:	push   rbp
  439201:	mov    rbp,rdi
  439204:	push   rbx
  439205:	mov    rbx,rsi
  439208:	sub    rsp,0x8
  43920c:	test   dl,dl
  43920e:	je     439248 <xmlStrEqual@plt+0x35308>
  439210:	mov    rsi,r13
  439213:	mov    rdi,rbx
  439216:	call   424fd0 <xmlStrEqual@plt+0x21090>
  43921b:	mov    rsi,rbp
  43921e:	mov    rdi,r12
  439221:	call   424fd0 <xmlStrEqual@plt+0x21090>
  439226:	movzx  eax,WORD PTR [rbp+0x42]
  43922a:	mov    WORD PTR [rbx+0x40],ax
  43922e:	movzx  eax,WORD PTR [rbp+0x40]
  439232:	mov    WORD PTR [rbx+0x42],ax
  439236:	add    rsp,0x8
  43923a:	pop    rbx
  43923b:	pop    rbp
  43923c:	pop    r12
  43923e:	pop    r13
  439240:	ret    
  439241:	nop    DWORD PTR [rax+0x0]
  439248:	mov    rsi,rdi
  43924b:	mov    rdi,rbx
  43924e:	call   424fd0 <xmlStrEqual@plt+0x21090>
  439253:	mov    rsi,r13
  439256:	mov    rdi,r12
  439259:	call   424fd0 <xmlStrEqual@plt+0x21090>
  43925e:	movzx  eax,WORD PTR [rbp+0x40]
  439262:	mov    WORD PTR [rbx+0x40],ax
  439266:	movzx  eax,WORD PTR [rbp+0x42]
  43926a:	mov    WORD PTR [rbx+0x42],ax
  43926e:	add    rsp,0x8
  439272:	pop    rbx
  439273:	pop    rbp
  439274:	pop    r12
  439276:	pop    r13
  439278:	ret    
  439279:	nop    DWORD PTR [rax+0x0]
  439280:	endbr64 
  439284:	push   rbp
  439285:	mov    edx,0xff
  43928a:	mov    esi,0x3
  43928f:	push   rbx
  439290:	mov    ebp,edi
  439292:	sub    rsp,0x18
  439296:	mov    rax,QWORD PTR fs:0x28
  43929f:	mov    QWORD PTR [rsp+0x8],rax
  4392a4:	xor    eax,eax
  4392a6:	mov    DWORD PTR [rsp+0x4],0x1
  4392ae:	call   403880 <socket@plt>
  4392b3:	test   eax,eax
  4392b5:	js     439316 <xmlStrEqual@plt+0x353d6>
  4392b7:	lea    rcx,[rsp+0x4]
  4392bc:	mov    r8d,0x4
  4392c2:	mov    edx,0x2
  4392c7:	mov    esi,0x1
  4392cc:	mov    edi,eax
  4392ce:	mov    ebx,eax
  4392d0:	call   403ec0 <setsockopt@plt>
  4392d5:	cmp    eax,0xffffffff
  4392d8:	je     43933f <xmlStrEqual@plt+0x353ff>
  4392da:	mov    rax,0x469e3c
  4392e1:	cmp    DWORD PTR [rax],0x2
  4392e4:	jle    4392fd <xmlStrEqual@plt+0x353bd>
  4392e6:	mov    ecx,ebp
  4392e8:	mov    edx,ebx
  4392ea:	lea    rsi,[rip+0x18c67]        # 451f58 <xmlStrEqual@plt+0x4e018>
  4392f1:	mov    edi,0x7
  4392f6:	xor    eax,eax
  4392f8:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  4392fd:	mov    rdx,QWORD PTR [rsp+0x8]
  439302:	xor    rdx,QWORD PTR fs:0x28
  43930b:	mov    eax,ebx
  43930d:	jne    43936f <xmlStrEqual@plt+0x3542f>
  43930f:	add    rsp,0x18
  439313:	pop    rbx
  439314:	pop    rbp
  439315:	ret    
  439316:	call   4037f0 <__errno_location@plt>
  43931b:	mov    edi,DWORD PTR [rax]
  43931d:	mov    ebx,0xfffffff7
  439322:	call   403910 <strerror@plt>
  439327:	mov    rdx,rax
  43932a:	lea    rsi,[rip+0x18bc7]        # 451ef8 <xmlStrEqual@plt+0x4dfb8>
  439331:	mov    edi,0x2
  439336:	xor    eax,eax
  439338:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  43933d:	jmp    4392fd <xmlStrEqual@plt+0x353bd>
  43933f:	call   4037f0 <__errno_location@plt>
  439344:	mov    edi,DWORD PTR [rax]
  439346:	call   403910 <strerror@plt>
  43934b:	mov    rdx,rax
  43934e:	lea    rsi,[rip+0x18bd3]        # 451f28 <xmlStrEqual@plt+0x4dfe8>
  439355:	mov    edi,0x3
  43935a:	xor    eax,eax
  43935c:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  439361:	mov    edi,ebx
  439363:	call   403f30 <close@plt>
  439368:	mov    ebx,0xfffffff7
  43936d:	jmp    4392fd <xmlStrEqual@plt+0x353bd>
  43936f:	call   403c00 <__stack_chk_fail@plt>
  439374:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  43937f:	nop
  439380:	endbr64 
  439384:	push   rbp
  439385:	mov    ebp,edi
  439387:	lea    rdi,[rip+0x19166]        # 4524f4 <xmlStrEqual@plt+0x4e5b4>
  43938e:	push   rbx
  43938f:	sub    rsp,0x18
  439393:	mov    rax,QWORD PTR fs:0x28
  43939c:	mov    QWORD PTR [rsp+0x8],rax
  4393a1:	xor    eax,eax
  4393a3:	mov    DWORD PTR [rsp+0x4],0x1
  4393ab:	call   403950 <getprotobyname@plt>
  4393b0:	test   rax,rax
  4393b3:	je     439446 <xmlStrEqual@plt+0x35506>
  4393b9:	mov    edx,DWORD PTR [rax+0x10]
  4393bc:	mov    esi,0x3
  4393c1:	mov    edi,ebp
  4393c3:	call   403880 <socket@plt>
  4393c8:	mov    ebx,eax
  4393ca:	test   eax,eax
  4393cc:	js     43946f <xmlStrEqual@plt+0x3552f>
  4393d2:	mov    rax,0x469e3c
  4393d9:	cmp    DWORD PTR [rax],0x2
  4393dc:	jle    439408 <xmlStrEqual@plt+0x354c8>
  4393de:	cmp    ebp,0x2
  4393e1:	lea    rax,[rip+0xf4dd]        # 4488c5 <xmlStrEqual@plt+0x44985>
  4393e8:	lea    rcx,[rip+0xf4d1]        # 4488c0 <xmlStrEqual@plt+0x44980>
  4393ef:	cmovne rcx,rax
  4393f3:	mov    edx,ebx
  4393f5:	lea    rsi,[rip+0x18bd4]        # 451fd0 <xmlStrEqual@plt+0x4e090>
  4393fc:	mov    edi,0x7
  439401:	xor    eax,eax
  439403:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  439408:	lea    rcx,[rsp+0x4]
  43940d:	mov    r8d,0x4
  439413:	mov    edx,0x2
  439418:	mov    esi,0x1
  43941d:	mov    edi,ebx
  43941f:	call   403ec0 <setsockopt@plt>
  439424:	cmp    eax,0xffffffff
  439427:	je     439498 <xmlStrEqual@plt+0x35558>
  439429:	mov    rsi,QWORD PTR [rsp+0x8]
  43942e:	xor    rsi,QWORD PTR fs:0x28
  439437:	mov    eax,ebx
  439439:	jne    4394cb <xmlStrEqual@plt+0x3558b>
  43943f:	add    rsp,0x18
  439443:	pop    rbx
  439444:	pop    rbp
  439445:	ret    
  439446:	call   4037f0 <__errno_location@plt>
  43944b:	mov    edi,DWORD PTR [rax]
  43944d:	mov    ebx,0xffffffff
  439452:	call   403910 <strerror@plt>
  439457:	mov    rdx,rax
  43945a:	lea    rsi,[rip+0x18b27]        # 451f88 <xmlStrEqual@plt+0x4e048>
  439461:	mov    edi,0x2
  439466:	xor    eax,eax
  439468:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  43946d:	jmp    439429 <xmlStrEqual@plt+0x354e9>
  43946f:	call   4037f0 <__errno_location@plt>
  439474:	mov    edi,DWORD PTR [rax]
  439476:	mov    ebx,0xfffffff7
  43947b:	call   403910 <strerror@plt>
  439480:	mov    rdx,rax
  439483:	lea    rsi,[rip+0x18b26]        # 451fb0 <xmlStrEqual@plt+0x4e070>
  43948a:	mov    edi,0x2
  43948f:	xor    eax,eax
  439491:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  439496:	jmp    439429 <xmlStrEqual@plt+0x354e9>
  439498:	call   4037f0 <__errno_location@plt>
  43949d:	mov    edi,DWORD PTR [rax]
  43949f:	call   403910 <strerror@plt>
  4394a4:	mov    rdx,rax
  4394a7:	lea    rsi,[rip+0x18b6a]        # 452018 <xmlStrEqual@plt+0x4e0d8>
  4394ae:	mov    edi,0x3
  4394b3:	xor    eax,eax
  4394b5:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  4394ba:	mov    edi,ebx
  4394bc:	call   403f30 <close@plt>
  4394c1:	mov    ebx,0xfffffff7
  4394c6:	jmp    439429 <xmlStrEqual@plt+0x354e9>
  4394cb:	call   403c00 <__stack_chk_fail@plt>
  4394d0:	endbr64 
  4394d4:	push   rbp
  4394d5:	mov    ebp,edi
  4394d7:	lea    rdi,[rip+0x19016]        # 4524f4 <xmlStrEqual@plt+0x4e5b4>
  4394de:	push   rbx
  4394df:	sub    rsp,0x18
  4394e3:	mov    rax,QWORD PTR fs:0x28
  4394ec:	mov    QWORD PTR [rsp+0x8],rax
  4394f1:	xor    eax,eax
  4394f3:	mov    DWORD PTR [rsp+0x4],0x1
  4394fb:	call   403950 <getprotobyname@plt>
  439500:	test   rax,rax
  439503:	je     439596 <xmlStrEqual@plt+0x35656>
  439509:	mov    edx,DWORD PTR [rax+0x10]
  43950c:	mov    esi,0x2
  439511:	mov    edi,ebp
  439513:	call   403880 <socket@plt>
  439518:	mov    ebx,eax
  43951a:	test   eax,eax
  43951c:	js     4395bf <xmlStrEqual@plt+0x3567f>
  439522:	mov    rax,0x469e3c
  439529:	cmp    DWORD PTR [rax],0x2
  43952c:	jle    439558 <xmlStrEqual@plt+0x35618>
  43952e:	cmp    ebp,0x2
  439531:	lea    rax,[rip+0xf38d]        # 4488c5 <xmlStrEqual@plt+0x44985>
  439538:	lea    rcx,[rip+0xf381]        # 4488c0 <xmlStrEqual@plt+0x44980>
  43953f:	cmovne rcx,rax
  439543:	mov    edx,ebx
  439545:	lea    rsi,[rip+0x18b5c]        # 4520a8 <xmlStrEqual@plt+0x4e168>
  43954c:	mov    edi,0x7
  439551:	xor    eax,eax
  439553:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  439558:	lea    rcx,[rsp+0x4]
  43955d:	mov    r8d,0x4
  439563:	mov    edx,0x2
  439568:	mov    esi,0x1
  43956d:	mov    edi,ebx
  43956f:	call   403ec0 <setsockopt@plt>
  439574:	cmp    eax,0xffffffff
  439577:	je     4395e8 <xmlStrEqual@plt+0x356a8>
  439579:	mov    rsi,QWORD PTR [rsp+0x8]
  43957e:	xor    rsi,QWORD PTR fs:0x28
  439587:	mov    eax,ebx
  439589:	jne    439614 <xmlStrEqual@plt+0x356d4>
  43958f:	add    rsp,0x18
  439593:	pop    rbx
  439594:	pop    rbp
  439595:	ret    
  439596:	call   4037f0 <__errno_location@plt>
  43959b:	mov    edi,DWORD PTR [rax]
  43959d:	mov    ebx,0xfffffff7
  4395a2:	call   403910 <strerror@plt>
  4395a7:	mov    rdx,rax
  4395aa:	lea    rsi,[rip+0x18a9f]        # 452050 <xmlStrEqual@plt+0x4e110>
  4395b1:	mov    edi,0x2
  4395b6:	xor    eax,eax
  4395b8:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  4395bd:	jmp    439579 <xmlStrEqual@plt+0x35639>
  4395bf:	call   4037f0 <__errno_location@plt>
  4395c4:	mov    edi,DWORD PTR [rax]
  4395c6:	mov    ebx,0xfffffff7
  4395cb:	call   403910 <strerror@plt>
  4395d0:	mov    rdx,rax
  4395d3:	lea    rsi,[rip+0x18aa6]        # 452080 <xmlStrEqual@plt+0x4e140>
  4395da:	mov    edi,0x2
  4395df:	xor    eax,eax
  4395e1:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  4395e6:	jmp    439579 <xmlStrEqual@plt+0x35639>
  4395e8:	call   4037f0 <__errno_location@plt>
  4395ed:	mov    edi,DWORD PTR [rax]
  4395ef:	mov    ebx,0xfffffff7
  4395f4:	call   403910 <strerror@plt>
  4395f9:	mov    rdx,rax
  4395fc:	lea    rsi,[rip+0x18aed]        # 4520f0 <xmlStrEqual@plt+0x4e1b0>
  439603:	mov    edi,0x3
  439608:	xor    eax,eax
  43960a:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  43960f:	jmp    439579 <xmlStrEqual@plt+0x35639>
  439614:	call   403c00 <__stack_chk_fail@plt>
  439619:	nop    DWORD PTR [rax+0x0]
  439620:	endbr64 
  439624:	push   rbp
  439625:	mov    edx,0x10
  43962a:	mov    esi,0x3
  43962f:	push   rbx
  439630:	mov    edi,0x10
  439635:	sub    rsp,0x28
  439639:	mov    rax,QWORD PTR fs:0x28
  439642:	mov    QWORD PTR [rsp+0x18],rax
  439647:	xor    eax,eax
  439649:	lea    rbp,[rsp+0xc]
  43964e:	xor    eax,eax
  439650:	mov    WORD PTR [rsp+0xc],dx
  439655:	xor    edx,edx
  439657:	mov    DWORD PTR [rsp+0xe],0x0
  43965f:	mov    WORD PTR [rbp+0x6],ax
  439663:	mov    DWORD PTR [rsp+0x14],0x771
  43966b:	call   403880 <socket@plt>
  439670:	test   eax,eax
  439672:	js     43969e <xmlStrEqual@plt+0x3575e>
  439674:	mov    edx,0xc
  439679:	mov    rsi,rbp
  43967c:	mov    edi,eax
  43967e:	mov    ebx,eax
  439680:	call   403820 <bind@plt>
  439685:	mov    rcx,QWORD PTR [rsp+0x18]
  43968a:	xor    rcx,QWORD PTR fs:0x28
  439693:	mov    eax,ebx
  439695:	jne    4396b8 <xmlStrEqual@plt+0x35778>
  439697:	add    rsp,0x28
  43969b:	pop    rbx
  43969c:	pop    rbp
  43969d:	ret    
  43969e:	lea    rsi,[rip+0x18a83]        # 452128 <xmlStrEqual@plt+0x4e1e8>
  4396a5:	mov    edi,0x2
  4396aa:	xor    eax,eax
  4396ac:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  4396b1:	mov    ebx,0xfffffff7
  4396b6:	jmp    439685 <xmlStrEqual@plt+0x35745>
  4396b8:	call   403c00 <__stack_chk_fail@plt>
  4396bd:	nop    DWORD PTR [rax]
  4396c0:	endbr64 
  4396c4:	push   rbp
  4396c5:	mov    ebp,edi
  4396c7:	mov    rdi,rsi
  4396ca:	push   rbx
  4396cb:	mov    rbx,rsi
  4396ce:	sub    rsp,0x8
  4396d2:	call   403970 <strlen@plt>
  4396d7:	mov    r8d,eax
  4396da:	mov    edx,0x19
  4396df:	mov    rcx,rbx
  4396e2:	mov    esi,0x1
  4396e7:	mov    edi,ebp
  4396e9:	call   403ec0 <setsockopt@plt>
  4396ee:	mov    edx,0x1
  4396f3:	cmp    eax,0xffffffff
  4396f6:	je     439708 <xmlStrEqual@plt+0x357c8>
  4396f8:	add    rsp,0x8
  4396fc:	pop    rbx
  4396fd:	mov    eax,edx
  4396ff:	pop    rbp
  439700:	ret    
  439701:	nop    DWORD PTR [rax+0x0]
  439708:	call   4037f0 <__errno_location@plt>
  43970d:	mov    edi,DWORD PTR [rax]
  43970f:	call   403910 <strerror@plt>
  439714:	mov    rdx,rax
  439717:	lea    rsi,[rip+0x18a4a]        # 452168 <xmlStrEqual@plt+0x4e228>
  43971e:	xor    eax,eax
  439720:	mov    edi,0x3
  439725:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  43972a:	add    rsp,0x8
  43972e:	xor    edx,edx
  439730:	pop    rbx
  439731:	mov    eax,edx
  439733:	pop    rbp
  439734:	ret    
  439735:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  439740:	endbr64 
  439744:	push   rbp
  439745:	push   rbx
  439746:	mov    ebx,edi
  439748:	sub    rsp,0x18
  43974c:	mov    rax,QWORD PTR fs:0x28
  439755:	mov    QWORD PTR [rsp+0x8],rax
  43975a:	xor    eax,eax
  43975c:	mov    DWORD PTR [rsp+0x4],0x1
  439764:	cmp    esi,0x2
  439767:	je     4397d8 <xmlStrEqual@plt+0x35898>
  439769:	cmp    esi,0xa
  43976c:	jne    4397ba <xmlStrEqual@plt+0x3587a>
  43976e:	lea    rbp,[rsp+0x4]
  439773:	mov    r8d,0x4
  439779:	mov    rcx,rbp
  43977c:	mov    edx,0x42
  439781:	mov    esi,0x29
  439786:	call   403ec0 <setsockopt@plt>
  43978b:	test   eax,eax
  43978d:	js     439840 <xmlStrEqual@plt+0x35900>
  439793:	mov    r8d,0x4
  439799:	mov    rcx,rbp
  43979c:	mov    edx,0x33
  4397a1:	mov    esi,0x29
  4397a6:	mov    edi,ebx
  4397a8:	call   403ec0 <setsockopt@plt>
  4397ad:	test   eax,eax
  4397af:	js     4398a0 <xmlStrEqual@plt+0x35960>
  4397b5:	mov    eax,0x1
  4397ba:	mov    rcx,QWORD PTR [rsp+0x8]
  4397bf:	xor    rcx,QWORD PTR fs:0x28
  4397c8:	jne    4398c9 <xmlStrEqual@plt+0x35989>
  4397ce:	add    rsp,0x18
  4397d2:	pop    rbx
  4397d3:	pop    rbp
  4397d4:	ret    
  4397d5:	nop    DWORD PTR [rax]
  4397d8:	lea    rbp,[rsp+0x4]
  4397dd:	xor    esi,esi
  4397df:	mov    r8d,0x4
  4397e5:	mov    rcx,rbp
  4397e8:	mov    edx,0xd
  4397ed:	call   403ec0 <setsockopt@plt>
  4397f2:	test   eax,eax
  4397f4:	js     439870 <xmlStrEqual@plt+0x35930>
  4397f6:	xor    esi,esi
  4397f8:	mov    r8d,0x4
  4397fe:	mov    rcx,rbp
  439801:	mov    edx,0xc
  439806:	mov    edi,ebx
  439808:	call   403ec0 <setsockopt@plt>
  43980d:	test   eax,eax
  43980f:	jns    4397b5 <xmlStrEqual@plt+0x35875>
  439811:	call   4037f0 <__errno_location@plt>
  439816:	mov    edi,DWORD PTR [rax]
  439818:	call   403910 <strerror@plt>
  43981d:	mov    rdx,rax
  439820:	lea    rsi,[rip+0x189b1]        # 4521d8 <xmlStrEqual@plt+0x4e298>
  439827:	xor    eax,eax
  439829:	mov    edi,0x3
  43982e:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  439833:	xor    eax,eax
  439835:	jmp    4397ba <xmlStrEqual@plt+0x3587a>
  439837:	nop    WORD PTR [rax+rax*1+0x0]
  439840:	call   4037f0 <__errno_location@plt>
  439845:	mov    edi,DWORD PTR [rax]
  439847:	call   403910 <strerror@plt>
  43984c:	mov    rdx,rax
  43984f:	lea    rsi,[rip+0x189ba]        # 452210 <xmlStrEqual@plt+0x4e2d0>
  439856:	xor    eax,eax
  439858:	mov    edi,0x3
  43985d:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  439862:	xor    eax,eax
  439864:	jmp    4397ba <xmlStrEqual@plt+0x3587a>
  439869:	nop    DWORD PTR [rax+0x0]
  439870:	call   4037f0 <__errno_location@plt>
  439875:	mov    edi,DWORD PTR [rax]
  439877:	call   403910 <strerror@plt>
  43987c:	mov    rdx,rax
  43987f:	lea    rsi,[rip+0x1891a]        # 4521a0 <xmlStrEqual@plt+0x4e260>
  439886:	xor    eax,eax
  439888:	mov    edi,0x3
  43988d:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  439892:	xor    eax,eax
  439894:	jmp    4397ba <xmlStrEqual@plt+0x3587a>
  439899:	nop    DWORD PTR [rax+0x0]
  4398a0:	call   4037f0 <__errno_location@plt>
  4398a5:	mov    edi,DWORD PTR [rax]
  4398a7:	call   403910 <strerror@plt>
  4398ac:	mov    rdx,rax
  4398af:	lea    rsi,[rip+0x18992]        # 452248 <xmlStrEqual@plt+0x4e308>
  4398b6:	xor    eax,eax
  4398b8:	mov    edi,0x3
  4398bd:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  4398c2:	xor    eax,eax
  4398c4:	jmp    4397ba <xmlStrEqual@plt+0x3587a>
  4398c9:	call   403c00 <__stack_chk_fail@plt>
  4398ce:	xchg   ax,ax
  4398d0:	endbr64 
  4398d4:	push   rbx
  4398d5:	mov    ebx,edi
  4398d7:	sub    rsp,0x10
  4398db:	mov    DWORD PTR [rsp+0xc],edx
  4398df:	mov    DWORD PTR [rsp+0x8],ecx
  4398e3:	cmp    esi,0x2
  4398e6:	je     439970 <xmlStrEqual@plt+0x35a30>
  4398ec:	cmp    esi,0xa
  4398ef:	jne    439968 <xmlStrEqual@plt+0x35a28>
  4398f1:	lea    rcx,[rsp+0x8]
  4398f6:	mov    r8d,0x4
  4398fc:	mov    edx,0x43
  439901:	mov    esi,0x29
  439906:	call   403ec0 <setsockopt@plt>
  43990b:	test   eax,eax
  43990d:	js     4399d0 <xmlStrEqual@plt+0x35a90>
  439913:	lea    rcx,[rsp+0xc]
  439918:	mov    r8d,0x4
  43991e:	mov    edx,0x34
  439923:	mov    esi,0x29
  439928:	mov    edi,ebx
  43992a:	call   403ec0 <setsockopt@plt>
  43992f:	test   eax,eax
  439931:	js     439940 <xmlStrEqual@plt+0x35a00>
  439933:	add    rsp,0x10
  439937:	mov    eax,0x1
  43993c:	pop    rbx
  43993d:	ret    
  43993e:	xchg   ax,ax
  439940:	call   4037f0 <__errno_location@plt>
  439945:	mov    edi,DWORD PTR [rax]
  439947:	call   403910 <strerror@plt>
  43994c:	mov    rdx,rax
  43994f:	lea    rsi,[rip+0x189d2]        # 452328 <xmlStrEqual@plt+0x4e3e8>
  439956:	mov    edi,0x3
  43995b:	xor    eax,eax
  43995d:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  439962:	nop    WORD PTR [rax+rax*1+0x0]
  439968:	xor    eax,eax
  43996a:	add    rsp,0x10
  43996e:	pop    rbx
  43996f:	ret    
  439970:	xor    esi,esi
  439972:	lea    rcx,[rsp+0x8]
  439977:	mov    r8d,0x4
  43997d:	mov    edx,0x1
  439982:	call   403ec0 <setsockopt@plt>
  439987:	test   eax,eax
  439989:	js     439a00 <xmlStrEqual@plt+0x35ac0>
  43998b:	xor    esi,esi
  43998d:	lea    rcx,[rsp+0xc]
  439992:	mov    r8d,0x4
  439998:	mov    edx,0x2
  43999d:	mov    edi,ebx
  43999f:	call   403ec0 <setsockopt@plt>
  4399a4:	test   eax,eax
  4399a6:	jns    439933 <xmlStrEqual@plt+0x359f3>
  4399a8:	call   4037f0 <__errno_location@plt>
  4399ad:	mov    edi,DWORD PTR [rax]
  4399af:	call   403910 <strerror@plt>
  4399b4:	mov    rdx,rax
  4399b7:	lea    rsi,[rip+0x188fa]        # 4522b8 <xmlStrEqual@plt+0x4e378>
  4399be:	xor    eax,eax
  4399c0:	mov    edi,0x3
  4399c5:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  4399ca:	xor    eax,eax
  4399cc:	jmp    43996a <xmlStrEqual@plt+0x35a2a>
  4399ce:	xchg   ax,ax
  4399d0:	call   4037f0 <__errno_location@plt>
  4399d5:	mov    edi,DWORD PTR [rax]
  4399d7:	call   403910 <strerror@plt>
  4399dc:	mov    rdx,rax
  4399df:	lea    rsi,[rip+0x1890a]        # 4522f0 <xmlStrEqual@plt+0x4e3b0>
  4399e6:	xor    eax,eax
  4399e8:	mov    edi,0x3
  4399ed:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  4399f2:	xor    eax,eax
  4399f4:	jmp    43996a <xmlStrEqual@plt+0x35a2a>
  4399f9:	nop    DWORD PTR [rax+0x0]
  439a00:	call   4037f0 <__errno_location@plt>
  439a05:	mov    edi,DWORD PTR [rax]
  439a07:	call   403910 <strerror@plt>
  439a0c:	mov    rdx,rax
  439a0f:	lea    rsi,[rip+0x18872]        # 452288 <xmlStrEqual@plt+0x4e348>
  439a16:	xor    eax,eax
  439a18:	mov    edi,0x3
  439a1d:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  439a22:	xor    eax,eax
  439a24:	jmp    43996a <xmlStrEqual@plt+0x35a2a>
  439a29:	nop    DWORD PTR [rax+0x0]
  439a30:	endbr64 
  439a34:	push   r14
  439a36:	mov    r14d,ecx
  439a39:	push   r13
  439a3b:	mov    r13d,edi
  439a3e:	push   r12
  439a40:	mov    r12,rdx
  439a43:	push   rbp
  439a44:	mov    ebp,esi
  439a46:	push   rbx
  439a47:	sub    rsp,0x40
  439a4b:	mov    rax,QWORD PTR fs:0x28
  439a54:	mov    QWORD PTR [rsp+0x38],rax
  439a59:	xor    eax,eax
  439a5b:	cmp    esi,0x2
  439a5e:	je     439b38 <xmlStrEqual@plt+0x35bf8>
  439a64:	xor    ebx,ebx
  439a66:	cmp    esi,0xa
  439a69:	jne    439b10 <xmlStrEqual@plt+0x35bd0>
  439a6f:	lea    rbx,[rsp+0x10]
  439a74:	vpxor  xmm0,xmm0,xmm0
  439a78:	xor    ecx,ecx
  439a7a:	mov    esi,0xa
  439a7f:	vmovups XMMWORD PTR [rsp+0x12],xmm0
  439a85:	mov    WORD PTR [rsp+0x10],si
  439a8a:	mov    QWORD PTR [rbx+0x12],0x0
  439a92:	mov    WORD PTR [rbx+0x1a],cx
  439a96:	test   r14d,r14d
  439a99:	je     439aa3 <xmlStrEqual@plt+0x35b63>
  439a9b:	movbe  WORD PTR [rsp+0x12],r14w
  439aa3:	test   r12,r12
  439aa6:	je     439be0 <xmlStrEqual@plt+0x35ca0>
  439aac:	mov    rdi,r12
  439aaf:	call   425cf0 <xmlStrEqual@plt+0x21db0>
  439ab4:	vmovdqu xmm1,XMMWORD PTR [rax]
  439ab8:	mov    edx,0x1c
  439abd:	mov    rsi,rbx
  439ac0:	mov    edi,r13d
  439ac3:	vmovups XMMWORD PTR [rsp+0x18],xmm1
  439ac9:	call   403820 <bind@plt>
  439ace:	test   eax,eax
  439ad0:	jne    439b92 <xmlStrEqual@plt+0x35c52>
  439ad6:	mov    rax,0x469e3c
  439add:	mov    ebx,0x1
  439ae2:	mov    eax,DWORD PTR [rax]
  439ae4:	test   eax,eax
  439ae6:	jle    439b10 <xmlStrEqual@plt+0x35bd0>
  439ae8:	mov    rdi,r12
  439aeb:	call   424d40 <xmlStrEqual@plt+0x20e00>
  439af0:	mov    rcx,rax
  439af3:	mov    r9d,ebp
  439af6:	mov    r8d,r14d
  439af9:	mov    edx,r13d
  439afc:	lea    rsi,[rip+0x1885d]        # 452360 <xmlStrEqual@plt+0x4e420>
  439b03:	mov    edi,0x5
  439b08:	xor    eax,eax
  439b0a:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  439b0f:	nop
  439b10:	mov    rcx,QWORD PTR [rsp+0x38]
  439b15:	xor    rcx,QWORD PTR fs:0x28
  439b1e:	mov    eax,ebx
  439b20:	jne    439bfb <xmlStrEqual@plt+0x35cbb>
  439b26:	add    rsp,0x40
  439b2a:	pop    rbx
  439b2b:	pop    rbp
  439b2c:	pop    r12
  439b2e:	pop    r13
  439b30:	pop    r14
  439b32:	ret    
  439b33:	nop    DWORD PTR [rax+rax*1+0x0]
  439b38:	mov    rbx,rsp
  439b3b:	xor    edi,edi
  439b3d:	mov    r8d,0x2
  439b43:	mov    QWORD PTR [rsp+0x2],0x0
  439b4c:	mov    WORD PTR [rsp],r8w
  439b51:	mov    DWORD PTR [rbx+0xa],0x0
  439b58:	mov    WORD PTR [rbx+0xe],di
  439b5c:	test   ecx,ecx
  439b5e:	je     439b67 <xmlStrEqual@plt+0x35c27>
  439b60:	movbe  WORD PTR [rsp+0x2],cx
  439b67:	test   r12,r12
  439b6a:	je     439bd0 <xmlStrEqual@plt+0x35c90>
  439b6c:	mov    rdi,r12
  439b6f:	call   425ce0 <xmlStrEqual@plt+0x21da0>
  439b74:	mov    eax,DWORD PTR [rax]
  439b76:	mov    edx,0x10
  439b7b:	mov    DWORD PTR [rsp+0x4],eax
  439b7f:	mov    rsi,rbx
  439b82:	mov    edi,r13d
  439b85:	call   403820 <bind@plt>
  439b8a:	test   eax,eax
  439b8c:	je     439ad6 <xmlStrEqual@plt+0x35b96>
  439b92:	mov    rax,0x469e3c
  439b99:	xor    ebx,ebx
  439b9b:	mov    edx,DWORD PTR [rax]
  439b9d:	test   edx,edx
  439b9f:	jle    439b10 <xmlStrEqual@plt+0x35bd0>
  439ba5:	call   4037f0 <__errno_location@plt>
  439baa:	mov    edi,DWORD PTR [rax]
  439bac:	call   403910 <strerror@plt>
  439bb1:	mov    rdx,rax
  439bb4:	lea    rsi,[rip+0x1893d]        # 4524f8 <xmlStrEqual@plt+0x4e5b8>
  439bbb:	mov    edi,0x5
  439bc0:	xor    eax,eax
  439bc2:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  439bc7:	jmp    439b10 <xmlStrEqual@plt+0x35bd0>
  439bcc:	nop    DWORD PTR [rax+0x0]
  439bd0:	mov    edx,0x10
  439bd5:	mov    rsi,rbx
  439bd8:	jmp    439b82 <xmlStrEqual@plt+0x35c42>
  439bda:	nop    WORD PTR [rax+rax*1+0x0]
  439be0:	mov    rax,QWORD PTR [rip+0x2f3f9]        # 468fe0 <xmlStrEqual@plt+0x650a0>
  439be7:	mov    edx,0x1c
  439bec:	vmovdqu xmm2,XMMWORD PTR [rax]
  439bf0:	mov    rsi,rbx
  439bf3:	vmovups XMMWORD PTR [rsp+0x18],xmm2
  439bf9:	jmp    439b82 <xmlStrEqual@plt+0x35c42>
  439bfb:	call   403c00 <__stack_chk_fail@plt>
  439c00:	endbr64 
  439c04:	push   r14
  439c06:	mov    r14,rsi
  439c09:	push   r13
  439c0b:	mov    r13d,edi
  439c0e:	mov    rdi,rcx
  439c11:	push   r12
  439c13:	mov    r12d,edx
  439c16:	push   rbp
  439c17:	mov    rbp,rcx
  439c1a:	push   rbx
  439c1b:	sub    rsp,0x40
  439c1f:	mov    rax,QWORD PTR fs:0x28
  439c28:	mov    QWORD PTR [rsp+0x38],rax
  439c2d:	xor    eax,eax
  439c2f:	call   425cc0 <xmlStrEqual@plt+0x21d80>
  439c34:	cmp    eax,0x2
  439c37:	je     439d08 <xmlStrEqual@plt+0x35dc8>
  439c3d:	xor    ebx,ebx
  439c3f:	cmp    eax,0xa
  439c42:	jne    439c9d <xmlStrEqual@plt+0x35d5d>
  439c44:	vpxor  xmm0,xmm0,xmm0
  439c48:	xor    eax,eax
  439c4a:	mov    edx,0xa
  439c4f:	lea    rbx,[rsp+0x10]
  439c54:	lea    rdi,[rsp+0x18]
  439c59:	mov    rsi,rbp
  439c5c:	vmovups XMMWORD PTR [rsp+0x12],xmm0
  439c62:	mov    QWORD PTR [rsp+0x22],0x0
  439c6b:	mov    WORD PTR [rsp+0x2a],ax
  439c70:	mov    WORD PTR [rsp+0x10],dx
  439c75:	call   425ec0 <xmlStrEqual@plt+0x21f80>
  439c7a:	mov    r9d,0x1c
  439c80:	mov    r8,rbx
  439c83:	movsxd rdx,r12d
  439c86:	xor    ecx,ecx
  439c88:	mov    rsi,r14
  439c8b:	mov    edi,r13d
  439c8e:	call   403800 <sendto@plt>
  439c93:	mov    ebx,0x1
  439c98:	cmp    r12d,eax
  439c9b:	jne    439cc0 <xmlStrEqual@plt+0x35d80>
  439c9d:	mov    rcx,QWORD PTR [rsp+0x38]
  439ca2:	xor    rcx,QWORD PTR fs:0x28
  439cab:	mov    eax,ebx
  439cad:	jne    439d44 <xmlStrEqual@plt+0x35e04>
  439cb3:	add    rsp,0x40
  439cb7:	pop    rbx
  439cb8:	pop    rbp
  439cb9:	pop    r12
  439cbb:	pop    r13
  439cbd:	pop    r14
  439cbf:	ret    
  439cc0:	mov    rax,0x469e3c
  439cc7:	xor    ebx,ebx
  439cc9:	cmp    DWORD PTR [rax],0x1
  439ccc:	jle    439c9d <xmlStrEqual@plt+0x35d5d>
  439cce:	call   4037f0 <__errno_location@plt>
  439cd3:	mov    edi,DWORD PTR [rax]
  439cd5:	call   403910 <strerror@plt>
  439cda:	mov    rdi,rbp
  439cdd:	mov    r12,rax
  439ce0:	call   426440 <xmlStrEqual@plt+0x22500>
  439ce5:	mov    rdx,rax
  439ce8:	mov    r8,r12
  439ceb:	mov    ecx,r13d
  439cee:	lea    rsi,[rip+0x186bb]        # 4523b0 <xmlStrEqual@plt+0x4e470>
  439cf5:	mov    edi,0x6
  439cfa:	xor    eax,eax
  439cfc:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  439d01:	jmp    439c9d <xmlStrEqual@plt+0x35d5d>
  439d03:	nop    DWORD PTR [rax+rax*1+0x0]
  439d08:	mov    rbx,rsp
  439d0b:	xor    ecx,ecx
  439d0d:	mov    QWORD PTR [rsp+0x2],0x0
  439d16:	mov    DWORD PTR [rbx+0xa],0x0
  439d1d:	mov    WORD PTR [rbx+0xe],cx
  439d21:	mov    esi,0x2
  439d26:	mov    WORD PTR [rsp],si
  439d2a:	lea    rdi,[rbx+0x4]
  439d2e:	mov    rsi,rbp
  439d31:	call   425ec0 <xmlStrEqual@plt+0x21f80>
  439d36:	mov    r9d,0x10
  439d3c:	mov    r8,rbx
  439d3f:	jmp    439c83 <xmlStrEqual@plt+0x35d43>
  439d44:	call   403c00 <__stack_chk_fail@plt>
  439d49:	nop    DWORD PTR [rax+0x0]
  439d50:	endbr64 
  439d54:	push   r15
  439d56:	mov    r15,rcx
  439d59:	push   r14
  439d5b:	mov    r14d,r8d
  439d5e:	push   r13
  439d60:	mov    r13,rsi
  439d63:	push   r12
  439d65:	mov    r12d,edi
  439d68:	mov    rdi,rcx
  439d6b:	push   rbp
  439d6c:	mov    ebp,edx
  439d6e:	push   rbx
  439d6f:	sub    rsp,0x48
  439d73:	mov    rax,QWORD PTR fs:0x28
  439d7c:	mov    QWORD PTR [rsp+0x38],rax
  439d81:	xor    eax,eax
  439d83:	call   425890 <xmlStrEqual@plt+0x21950>
  439d88:	cmp    ax,0x2
  439d8c:	je     439dd0 <xmlStrEqual@plt+0x35e90>
  439d8e:	cmp    ax,0xa
  439d92:	je     439e60 <xmlStrEqual@plt+0x35f20>
  439d98:	mov    rax,0x469e3c
  439d9f:	cmp    DWORD PTR [rax],0x1
  439da2:	jg     439eb0 <xmlStrEqual@plt+0x35f70>
  439da8:	xor    edx,edx
  439daa:	mov    rcx,QWORD PTR [rsp+0x38]
  439daf:	xor    rcx,QWORD PTR fs:0x28
  439db8:	mov    eax,edx
  439dba:	jne    439ed5 <xmlStrEqual@plt+0x35f95>
  439dc0:	add    rsp,0x48
  439dc4:	pop    rbx
  439dc5:	pop    rbp
  439dc6:	pop    r12
  439dc8:	pop    r13
  439dca:	pop    r14
  439dcc:	pop    r15
  439dce:	ret    
  439dcf:	nop
  439dd0:	mov    rbx,rsp
  439dd3:	mov    edx,0x2
  439dd8:	mov    rdi,r15
  439ddb:	mov    QWORD PTR [rsp+0x4],0x0
  439de4:	movbe  WORD PTR [rsp+0x2],r14w
  439dec:	mov    DWORD PTR [rbx+0xc],0x0
  439df3:	mov    WORD PTR [rsp],dx
  439df7:	call   425ce0 <xmlStrEqual@plt+0x21da0>
  439dfc:	mov    eax,DWORD PTR [rax]
  439dfe:	mov    r9d,0x10
  439e04:	mov    DWORD PTR [rsp+0x4],eax
  439e08:	mov    r8,rbx
  439e0b:	movsxd rdx,ebp
  439e0e:	xor    ecx,ecx
  439e10:	mov    rsi,r13
  439e13:	mov    edi,r12d
  439e16:	call   403800 <sendto@plt>
  439e1b:	mov    edx,0x1
  439e20:	test   rax,rax
  439e23:	jns    439daa <xmlStrEqual@plt+0x35e6a>
  439e25:	mov    rax,0x469e3c
  439e2c:	cmp    DWORD PTR [rax],0x1
  439e2f:	jle    439da8 <xmlStrEqual@plt+0x35e68>
  439e35:	call   4037f0 <__errno_location@plt>
  439e3a:	mov    edi,DWORD PTR [rax]
  439e3c:	call   403910 <strerror@plt>
  439e41:	mov    rdx,rax
  439e44:	mov    ecx,r12d
  439e47:	lea    rsi,[rip+0x185da]        # 452428 <xmlStrEqual@plt+0x4e4e8>
  439e4e:	mov    edi,0x6
  439e53:	xor    eax,eax
  439e55:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  439e5a:	jmp    439da8 <xmlStrEqual@plt+0x35e68>
  439e5f:	nop
  439e60:	vpxor  xmm0,xmm0,xmm0
  439e64:	mov    eax,0xa
  439e69:	mov    rdi,r15
  439e6c:	vmovups XMMWORD PTR [rsp+0x14],xmm0
  439e72:	mov    QWORD PTR [rsp+0x24],0x0
  439e7b:	mov    WORD PTR [rsp+0x10],ax
  439e80:	movbe  WORD PTR [rsp+0x12],r14w
  439e88:	call   425cf0 <xmlStrEqual@plt+0x21db0>
  439e8d:	vmovdqu xmm1,XMMWORD PTR [rax]
  439e91:	lea    rbx,[rsp+0x10]
  439e96:	vmovups XMMWORD PTR [rsp+0x18],xmm1
  439e9c:	mov    r9d,0x1c
  439ea2:	mov    r8,rbx
  439ea5:	jmp    439e0b <xmlStrEqual@plt+0x35ecb>
  439eaa:	nop    WORD PTR [rax+rax*1+0x0]
  439eb0:	mov    rdi,r15
  439eb3:	call   425890 <xmlStrEqual@plt+0x21950>
  439eb8:	movzx  edx,ax
  439ebb:	lea    rsi,[rip+0x1853e]        # 452400 <xmlStrEqual@plt+0x4e4c0>
  439ec2:	mov    edi,0x6
  439ec7:	xor    eax,eax
  439ec9:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  439ece:	xor    edx,edx
  439ed0:	jmp    439daa <xmlStrEqual@plt+0x35e6a>
  439ed5:	call   403c00 <__stack_chk_fail@plt>
  439eda:	nop    WORD PTR [rax+rax*1+0x0]
  439ee0:	endbr64 
  439ee4:	push   rbx
  439ee5:	mov    rbx,rsi
  439ee8:	movzx  edx,WORD PTR [rdi]
  439eeb:	cmp    dx,0x2
  439eef:	je     439f40 <xmlStrEqual@plt+0x36000>
  439ef1:	cmp    dx,0xa
  439ef5:	je     439f10 <xmlStrEqual@plt+0x35fd0>
  439ef7:	mov    rax,0x469e3c
  439efe:	xor    ebx,ebx
  439f00:	cmp    DWORD PTR [rax],0x2
  439f03:	jg     439f58 <xmlStrEqual@plt+0x36018>
  439f05:	mov    eax,ebx
  439f07:	pop    rbx
  439f08:	ret    
  439f09:	nop    DWORD PTR [rax+0x0]
  439f10:	lea    rsi,[rdi+0x8]
  439f14:	mov    edx,0xa
  439f19:	mov    rdi,rbx
  439f1c:	call   425480 <xmlStrEqual@plt+0x21540>
  439f21:	mov    rdi,rbx
  439f24:	mov    esi,0x1
  439f29:	mov    ebx,0x1
  439f2e:	call   424dd0 <xmlStrEqual@plt+0x20e90>
  439f33:	mov    eax,ebx
  439f35:	pop    rbx
  439f36:	ret    
  439f37:	nop    WORD PTR [rax+rax*1+0x0]
  439f40:	lea    rsi,[rdi+0x4]
  439f44:	mov    edx,0x2
  439f49:	mov    rdi,rbx
  439f4c:	call   425480 <xmlStrEqual@plt+0x21540>
  439f51:	jmp    439f21 <xmlStrEqual@plt+0x35fe1>
  439f53:	nop    DWORD PTR [rax+rax*1+0x0]
  439f58:	xor    eax,eax
  439f5a:	lea    rsi,[rip+0x184f7]        # 452458 <xmlStrEqual@plt+0x4e518>
  439f61:	mov    edi,0x7
  439f66:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  439f6b:	mov    eax,ebx
  439f6d:	pop    rbx
  439f6e:	ret    
  439f6f:	nop
  439f70:	endbr64 
  439f74:	push   rbp
  439f75:	push   rbx
  439f76:	mov    rbx,rdi
  439f79:	sub    rsp,0x8
  439f7d:	cmp    DWORD PTR [rdi+0x18],0x1
  439f81:	jne    439fd0 <xmlStrEqual@plt+0x36090>
  439f83:	call   425890 <xmlStrEqual@plt+0x21950>
  439f88:	cmp    ax,0x2
  439f8c:	je     43a040 <xmlStrEqual@plt+0x36100>
  439f92:	cmp    ax,0xa
  439f96:	je     43a008 <xmlStrEqual@plt+0x360c8>
  439f98:	mov    rax,0x469e3c
  439f9f:	mov    eax,DWORD PTR [rax]
  439fa1:	test   eax,eax
  439fa3:	jle    439fc3 <xmlStrEqual@plt+0x36083>
  439fa5:	mov    rdi,rbx
  439fa8:	call   424d40 <xmlStrEqual@plt+0x20e00>
  439fad:	mov    rdx,rax
  439fb0:	lea    rsi,[rip+0x18509]        # 4524c0 <xmlStrEqual@plt+0x4e580>
  439fb7:	mov    edi,0x5
  439fbc:	xor    eax,eax
  439fbe:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  439fc3:	add    rsp,0x8
  439fc7:	xor    ebp,ebp
  439fc9:	pop    rbx
  439fca:	mov    rax,rbp
  439fcd:	pop    rbp
  439fce:	ret    
  439fcf:	nop
  439fd0:	mov    rax,0x469e3c
  439fd7:	cmp    DWORD PTR [rax],0x1
  439fda:	jle    439fc3 <xmlStrEqual@plt+0x36083>
  439fdc:	call   424d40 <xmlStrEqual@plt+0x20e00>
  439fe1:	mov    rdx,rax
  439fe4:	lea    rsi,[rip+0x18495]        # 452480 <xmlStrEqual@plt+0x4e540>
  439feb:	xor    eax,eax
  439fed:	mov    edi,0x6
  439ff2:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  439ff7:	add    rsp,0x8
  439ffb:	xor    ebp,ebp
  439ffd:	pop    rbx
  439ffe:	mov    rax,rbp
  43a001:	pop    rbp
  43a002:	ret    
  43a003:	nop    DWORD PTR [rax+rax*1+0x0]
  43a008:	mov    edi,0x1c
  43a00d:	call   435000 <xmlStrEqual@plt+0x310c0>
  43a012:	mov    edx,0xa
  43a017:	mov    WORD PTR [rax],dx
  43a01a:	mov    rdi,rbx
  43a01d:	mov    rbp,rax
  43a020:	call   425cf0 <xmlStrEqual@plt+0x21db0>
  43a025:	vmovdqu xmm0,XMMWORD PTR [rax]
  43a029:	mov    rax,rbp
  43a02c:	vmovups XMMWORD PTR [rbp+0x8],xmm0
  43a031:	add    rsp,0x8
  43a035:	pop    rbx
  43a036:	pop    rbp
  43a037:	ret    
  43a038:	nop    DWORD PTR [rax+rax*1+0x0]
  43a040:	mov    edi,0x10
  43a045:	call   435000 <xmlStrEqual@plt+0x310c0>
  43a04a:	mov    ecx,0x2
  43a04f:	mov    WORD PTR [rax],cx
  43a052:	mov    rdi,rbx
  43a055:	mov    rbp,rax
  43a058:	call   425ce0 <xmlStrEqual@plt+0x21da0>
  43a05d:	mov    eax,DWORD PTR [rax]
  43a05f:	mov    DWORD PTR [rbp+0x4],eax
  43a062:	add    rsp,0x8
  43a066:	mov    rax,rbp
  43a069:	pop    rbx
  43a06a:	pop    rbp
  43a06b:	ret    
  43a06c:	nop    DWORD PTR [rax+0x0]
  43a070:	endbr64 
  43a074:	push   rbx
  43a075:	mov    esi,0x10
  43a07a:	mov    edi,0x1
  43a07f:	call   434fa0 <xmlStrEqual@plt+0x31060>
  43a084:	mov    esi,0x28
  43a089:	mov    edi,0x1
  43a08e:	mov    rbx,rax
  43a091:	call   403a80 <calloc@plt>
  43a096:	mov    QWORD PTR [rbx],rax
  43a099:	mov    rax,rbx
  43a09c:	pop    rbx
  43a09d:	ret    
  43a09e:	xchg   ax,ax
  43a0a0:	endbr64 
  43a0a4:	push   rbp
  43a0a5:	mov    esi,0x10
  43a0aa:	mov    rbp,rdi
  43a0ad:	push   rbx
  43a0ae:	mov    edi,0x1
  43a0b3:	sub    rsp,0x8
  43a0b7:	call   434fa0 <xmlStrEqual@plt+0x31060>
  43a0bc:	mov    esi,0x28
  43a0c1:	mov    edi,0x1
  43a0c6:	mov    rbx,rax
  43a0c9:	call   403a80 <calloc@plt>
  43a0ce:	mov    QWORD PTR [rbx],rax
  43a0d1:	mov    QWORD PTR [rbx+0x8],rbp
  43a0d5:	add    rsp,0x8
  43a0d9:	mov    rax,rbx
  43a0dc:	pop    rbx
  43a0dd:	pop    rbp
  43a0de:	ret    
  43a0df:	nop
  43a0e0:	endbr64 
  43a0e4:	push   r15
  43a0e6:	push   r14
  43a0e8:	push   r13
  43a0ea:	push   r12
  43a0ec:	push   rbp
  43a0ed:	push   rbx
  43a0ee:	sub    rsp,0x48
  43a0f2:	mov    rbx,QWORD PTR [rdi]
  43a0f5:	mov    QWORD PTR [rsp+0x10],rdi
  43a0fa:	mov    eax,DWORD PTR [rbx]
  43a0fc:	mov    QWORD PTR [rsp+0x8],rsi
  43a101:	mov    QWORD PTR [rsp+0x20],rdx
  43a106:	mov    DWORD PTR [rsp+0x1c],eax
  43a10a:	test   eax,eax
  43a10c:	je     43a280 <xmlStrEqual@plt+0x36340>
  43a112:	movsx  r14d,BYTE PTR [rsi]
  43a116:	lea    r8d,[rax-0x1]
  43a11a:	mov    ebp,r8d
  43a11d:	mov    rax,rsi
  43a120:	mov    edx,r14d
  43a123:	test   r14d,r14d
  43a126:	jne    43a230 <xmlStrEqual@plt+0x362f0>
  43a12c:	mov    DWORD PTR [rsp+0x18],0x0
  43a134:	mov    r13d,0x1
  43a13a:	and    r13d,r8d
  43a13d:	mov    DWORD PTR [rsp+0x28],r13d
  43a142:	mov    r13,QWORD PTR [rbx+0x10]
  43a146:	mov    DWORD PTR [rsp+0x30],ebp
  43a14a:	mov    r12,r13
  43a14d:	mov    r15d,DWORD PTR [rsp+0x18]
  43a152:	mov    DWORD PTR [rsp+0x34],edx
  43a156:	mov    QWORD PTR [rsp+0x38],r13
  43a15b:	mov    ebp,r8d
  43a15e:	jmp    43a192 <xmlStrEqual@plt+0x36252>
  43a160:	test   r13b,0x1
  43a164:	jne    43a17f <xmlStrEqual@plt+0x3623f>
  43a166:	mov    rsi,QWORD PTR [rbx+0x18]
  43a16a:	mov    eax,r15d
  43a16d:	mov    rdi,QWORD PTR [rsi+rax*8]
  43a171:	mov    rsi,QWORD PTR [rsp+0x8]
  43a176:	call   4037c0 <strcmp@plt>
  43a17b:	test   eax,eax
  43a17d:	je     43a1af <xmlStrEqual@plt+0x3626f>
  43a17f:	add    r15d,DWORD PTR [rsp+0x28]
  43a184:	and    r15d,ebp
  43a187:	cmp    r15d,DWORD PTR [rsp+0x18]
  43a18c:	je     43a360 <xmlStrEqual@plt+0x36420>
  43a192:	mov    eax,r15d
  43a195:	shr    eax,0x4
  43a198:	lea    r13d,[r15+r15*1]
  43a19c:	mov    eax,DWORD PTR [r12+rax*4]
  43a1a0:	and    r13d,0x1e
  43a1a4:	shrx   r13d,eax,r13d
  43a1a9:	test   r13b,0x2
  43a1ad:	je     43a160 <xmlStrEqual@plt+0x36220>
  43a1af:	mov    ecx,r13d
  43a1b2:	and    ecx,0x3
  43a1b5:	mov    r8d,ebp
  43a1b8:	mov    r13,r12
  43a1bb:	mov    edx,DWORD PTR [rsp+0x34]
  43a1bf:	mov    ebp,DWORD PTR [rsp+0x30]
  43a1c3:	mov    r12,QWORD PTR [rsp+0x38]
  43a1c8:	jne    43a373 <xmlStrEqual@plt+0x36433>
  43a1ce:	cmp    DWORD PTR [rsp+0x1c],r15d
  43a1d3:	je     43a373 <xmlStrEqual@plt+0x36433>
  43a1d9:	mov    rdi,QWORD PTR [rsp+0x8]
  43a1de:	lea    r14,[r15*8+0x0]
  43a1e6:	call   4037b0 <free@plt>
  43a1eb:	mov    rax,QWORD PTR [rsp+0x10]
  43a1f0:	mov    rax,QWORD PTR [rax+0x8]
  43a1f4:	test   rax,rax
  43a1f7:	je     43a640 <xmlStrEqual@plt+0x36700>
  43a1fd:	mov    rbx,QWORD PTR [rsp+0x10]
  43a202:	mov    rdx,QWORD PTR [rbx]
  43a205:	mov    rdx,QWORD PTR [rdx+0x20]
  43a209:	mov    rdi,QWORD PTR [rdx+r15*8]
  43a20d:	call   rax
  43a20f:	mov    r15,QWORD PTR [rbx]
  43a212:	mov    rax,QWORD PTR [r15+0x20]
  43a216:	mov    rbx,QWORD PTR [rsp+0x20]
  43a21b:	mov    QWORD PTR [rax+r14*1],rbx
  43a21f:	add    rsp,0x48
  43a223:	pop    rbx
  43a224:	pop    rbp
  43a225:	pop    r12
  43a227:	pop    r13
  43a229:	pop    r14
  43a22b:	pop    r15
  43a22d:	ret    
  43a22e:	xchg   ax,ax
  43a230:	movsx  ecx,BYTE PTR [rax+0x1]
  43a234:	lea    rsi,[rsi+0x1]
  43a238:	mov    edi,r14d
  43a23b:	test   cl,cl
  43a23d:	je     43aa00 <xmlStrEqual@plt+0x36ac0>
  43a243:	nop    DWORD PTR [rax+rax*1+0x0]
  43a248:	mov    eax,edi
  43a24a:	shl    eax,0x5
  43a24d:	sub    eax,edi
  43a24f:	inc    rsi
  43a252:	lea    edi,[rcx+rax*1]
  43a255:	movsx  ecx,BYTE PTR [rsi]
  43a258:	test   cl,cl
  43a25a:	jne    43a248 <xmlStrEqual@plt+0x36308>
  43a25c:	mov    eax,edi
  43a25e:	mov    r13d,edi
  43a261:	shr    r13d,0x3
  43a265:	shl    eax,0x3
  43a268:	xor    eax,r13d
  43a26b:	mov    ecx,r8d
  43a26e:	and    ecx,edi
  43a270:	or     eax,0x1
  43a273:	mov    DWORD PTR [rsp+0x18],ecx
  43a277:	mov    r13d,eax
  43a27a:	jmp    43a13a <xmlStrEqual@plt+0x361fa>
  43a27f:	nop
  43a280:	mov    eax,DWORD PTR [rbx+0xc]
  43a283:	cmp    DWORD PTR [rbx+0x8],eax
  43a286:	jae    43a6d0 <xmlStrEqual@plt+0x36790>
  43a28c:	mov    rax,QWORD PTR [rsp+0x8]
  43a291:	mov    r12,QWORD PTR [rbx+0x10]
  43a295:	movsx  edx,BYTE PTR [rax]
  43a298:	mov    r15,rbx
  43a29b:	mov    ebp,0xffffffff
  43a2a0:	test   edx,edx
  43a2a2:	jne    43a5a8 <xmlStrEqual@plt+0x36668>
  43a2a8:	mov    rdi,r12
  43a2ab:	mov    r9d,DWORD PTR [rdi]
  43a2ae:	xor    eax,eax
  43a2b0:	xor    r13d,r13d
  43a2b3:	shrx   esi,r9d,eax
  43a2b8:	test   sil,0x2
  43a2bc:	jne    43a608 <xmlStrEqual@plt+0x366c8>
  43a2c2:	mov    r14d,edx
  43a2c5:	shr    r14d,0x3
  43a2c9:	shl    edx,0x3
  43a2cc:	xor    r14d,edx
  43a2cf:	or     r14d,0x1
  43a2d3:	mov    eax,DWORD PTR [rsp+0x1c]
  43a2d7:	and    r14d,ebp
  43a2da:	mov    DWORD PTR [rsp+0x18],r14d
  43a2df:	mov    QWORD PTR [rsp+0x28],r15
  43a2e4:	mov    DWORD PTR [rsp+0x10],eax
  43a2e8:	mov    r15,rbx
  43a2eb:	mov    r14,r12
  43a2ee:	mov    ebx,r13d
  43a2f1:	jmp    43a34b <xmlStrEqual@plt+0x3640b>
  43a2f3:	nop    DWORD PTR [rax+rax*1+0x0]
  43a2f8:	mov    rsi,QWORD PTR [r15+0x18]
  43a2fc:	mov    eax,ebx
  43a2fe:	mov    rdi,QWORD PTR [rsi+rax*8]
  43a302:	mov    rsi,QWORD PTR [rsp+0x8]
  43a307:	lea    r12,[rax*8+0x0]
  43a30f:	call   4037c0 <strcmp@plt>
  43a314:	test   eax,eax
  43a316:	je     43aa28 <xmlStrEqual@plt+0x36ae8>
  43a31c:	mov    eax,DWORD PTR [rsp+0x18]
  43a320:	lea    edx,[rax+rbx*1]
  43a323:	mov    ebx,edx
  43a325:	and    ebx,ebp
  43a327:	cmp    ebx,r13d
  43a32a:	je     43a650 <xmlStrEqual@plt+0x36710>
  43a330:	mov    edi,ebx
  43a332:	lea    eax,[rbx+rbx*1]
  43a335:	shr    edi,0x4
  43a338:	and    eax,0x1e
  43a33b:	shrx   esi,DWORD PTR [r14+rdi*4],eax
  43a341:	test   sil,0x2
  43a345:	jne    43a968 <xmlStrEqual@plt+0x36a28>
  43a34b:	and    esi,0x1
  43a34e:	je     43a2f8 <xmlStrEqual@plt+0x363b8>
  43a350:	mov    DWORD PTR [rsp+0x10],ebx
  43a354:	jmp    43a31c <xmlStrEqual@plt+0x363dc>
  43a356:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43a360:	mov    r8d,ebp
  43a363:	mov    r13,r12
  43a366:	mov    edx,DWORD PTR [rsp+0x34]
  43a36a:	mov    ebp,DWORD PTR [rsp+0x30]
  43a36e:	mov    r12,QWORD PTR [rsp+0x38]
  43a373:	mov    eax,DWORD PTR [rbx+0xc]
  43a376:	mov    r15,rbx
  43a379:	cmp    DWORD PTR [rbx+0x8],eax
  43a37c:	jb     43a2a0 <xmlStrEqual@plt+0x36360>
  43a382:	mov    esi,DWORD PTR [rbx+0x4]
  43a385:	mov    ecx,DWORD PTR [rsp+0x1c]
  43a389:	lea    eax,[rsi+rsi*1]
  43a38c:	cmp    ecx,eax
  43a38e:	jbe    43a995 <xmlStrEqual@plt+0x36a55>
  43a394:	lea    eax,[rcx-0x2]
  43a397:	mov    ecx,eax
  43a399:	shr    ecx,1
  43a39b:	or     eax,ecx
  43a39d:	mov    ecx,eax
  43a39f:	shr    ecx,0x2
  43a3a2:	or     eax,ecx
  43a3a4:	mov    ecx,eax
  43a3a6:	shr    ecx,0x4
  43a3a9:	or     eax,ecx
  43a3ab:	mov    ecx,eax
  43a3ad:	shr    ecx,0x8
  43a3b0:	or     eax,ecx
  43a3b2:	mov    ecx,eax
  43a3b4:	shr    ecx,0x10
  43a3b7:	or     eax,ecx
  43a3b9:	lea    r8d,[rax+0x1]
  43a3bd:	cmp    r8d,0x3
  43a3c1:	jbe    43a888 <xmlStrEqual@plt+0x36948>
  43a3c7:	mov    ecx,r8d
  43a3ca:	vxorpd xmm0,xmm0,xmm0
  43a3ce:	vcvtsi2sd xmm0,xmm0,rcx
  43a3d3:	vmovsd xmm1,QWORD PTR [rip+0x12afd]        # 44ced8 <xmlStrEqual@plt+0x48f98>
  43a3db:	vfmadd132sd xmm0,xmm1,QWORD PTR [rip+0x12aec]        # 44ced0 <xmlStrEqual@plt+0x48f90>
  43a3e4:	vcvttsd2si rdi,xmm0
  43a3e9:	mov    DWORD PTR [rsp+0x18],edi
  43a3ed:	cmp    esi,edi
  43a3ef:	jae    43a2a0 <xmlStrEqual@plt+0x36360>
  43a3f5:	cmp    r8d,0xf
  43a3f9:	jbe    43aad6 <xmlStrEqual@plt+0x36b96>
  43a3ff:	mov    r13d,r8d
  43a402:	mov    DWORD PTR [rsp+0x1c],r8d
  43a407:	shr    r13d,0x4
  43a40b:	shl    r13,0x2
  43a40f:	mov    ebp,eax
  43a411:	mov    rdi,r13
  43a414:	call   403cd0 <malloc@plt>
  43a419:	mov    rdi,rax
  43a41c:	mov    rdx,r13
  43a41f:	mov    esi,0xaa
  43a424:	mov    r12,rax
  43a427:	call   4039f0 <memset@plt>
  43a42c:	mov    eax,DWORD PTR [rsp+0x1c]
  43a430:	cmp    DWORD PTR [rbx],eax
  43a432:	jb     43aa68 <xmlStrEqual@plt+0x36b28>
  43a438:	xor    r15d,r15d
  43a43b:	jmp    43a44e <xmlStrEqual@plt+0x3650e>
  43a43d:	nop    DWORD PTR [rax]
  43a440:	mov    edi,DWORD PTR [rbx]
  43a442:	inc    r15d
  43a445:	cmp    r15d,edi
  43a448:	je     43a900 <xmlStrEqual@plt+0x369c0>
  43a44e:	mov    eax,r15d
  43a451:	mov    r10,QWORD PTR [rbx+0x10]
  43a455:	shr    eax,0x4
  43a458:	lea    rcx,[r10+rax*4]
  43a45c:	mov    edx,DWORD PTR [rcx]
  43a45e:	lea    eax,[r15+r15*1]
  43a462:	and    eax,0x1e
  43a465:	shrx   esi,edx,eax
  43a46a:	and    esi,0x3
  43a46d:	jne    43a440 <xmlStrEqual@plt+0x36500>
  43a46f:	mov    r9,QWORD PTR [rbx+0x18]
  43a473:	mov    rdi,QWORD PTR [rbx+0x20]
  43a477:	mov    esi,r15d
  43a47a:	bts    edx,eax
  43a47d:	mov    r11,QWORD PTR [r9+rsi*8]
  43a481:	mov    r14,QWORD PTR [rdi+rsi*8]
  43a485:	mov    DWORD PTR [rcx],edx
  43a487:	movsx  eax,BYTE PTR [r11]
  43a48b:	test   eax,eax
  43a48d:	je     43a593 <xmlStrEqual@plt+0x36653>
  43a493:	nop    DWORD PTR [rax+rax*1+0x0]
  43a498:	movsx  edx,BYTE PTR [r11+0x1]
  43a49d:	lea    rsi,[r11+0x1]
  43a4a1:	mov    ecx,eax
  43a4a3:	test   dl,dl
  43a4a5:	je     43a4c6 <xmlStrEqual@plt+0x36586>
  43a4a7:	nop    WORD PTR [rax+rax*1+0x0]
  43a4b0:	mov    eax,ecx
  43a4b2:	shl    eax,0x5
  43a4b5:	sub    eax,ecx
  43a4b7:	inc    rsi
  43a4ba:	lea    ecx,[rdx+rax*1]
  43a4bd:	movsx  edx,BYTE PTR [rsi]
  43a4c0:	test   dl,dl
  43a4c2:	jne    43a4b0 <xmlStrEqual@plt+0x36570>
  43a4c4:	mov    eax,ecx
  43a4c6:	mov    edi,eax
  43a4c8:	and    edi,ebp
  43a4ca:	mov    esi,eax
  43a4cc:	mov    edx,edi
  43a4ce:	shl    eax,0x3
  43a4d1:	shr    esi,0x3
  43a4d4:	shr    edx,0x4
  43a4d7:	xor    esi,eax
  43a4d9:	shl    rdx,0x2
  43a4dd:	lea    ecx,[rdi+rdi*1]
  43a4e0:	or     esi,0x1
  43a4e3:	lea    r8,[r12+rdx*1]
  43a4e7:	and    ecx,0x1e
  43a4ea:	mov    eax,edi
  43a4ec:	mov    edi,DWORD PTR [r8]
  43a4ef:	and    esi,ebp
  43a4f1:	shrx   r13d,edi,ecx
  43a4f6:	and    r13d,0x2
  43a4fa:	jne    43a525 <xmlStrEqual@plt+0x365e5>
  43a4fc:	nop    DWORD PTR [rax+0x0]
  43a500:	add    eax,esi
  43a502:	and    eax,ebp
  43a504:	mov    edx,eax
  43a506:	shr    edx,0x4
  43a509:	shl    rdx,0x2
  43a50d:	lea    r8,[r12+rdx*1]
  43a511:	mov    edi,DWORD PTR [r8]
  43a514:	lea    ecx,[rax+rax*1]
  43a517:	and    ecx,0x1e
  43a51a:	shrx   r13d,edi,ecx
  43a51f:	and    r13d,0x2
  43a523:	je     43a500 <xmlStrEqual@plt+0x365c0>
  43a525:	mov    esi,0x2
  43a52a:	shlx   rsi,rsi,rcx
  43a52f:	andn   edi,esi,edi
  43a534:	mov    DWORD PTR [r8],edi
  43a537:	mov    esi,eax
  43a539:	shl    rsi,0x3
  43a53d:	mov    edi,DWORD PTR [rbx]
  43a53f:	add    r9,rsi
  43a542:	cmp    edi,eax
  43a544:	jbe    43a8d8 <xmlStrEqual@plt+0x36998>
  43a54a:	mov    eax,DWORD PTR [r10+rdx*1]
  43a54e:	shrx   eax,eax,ecx
  43a553:	test   al,0x3
  43a555:	jne    43a8d8 <xmlStrEqual@plt+0x36998>
  43a55b:	mov    rax,QWORD PTR [r9]
  43a55e:	mov    QWORD PTR [r9],r11
  43a561:	mov    r11,rax
  43a564:	add    rsi,QWORD PTR [rbx+0x20]
  43a568:	mov    rdi,QWORD PTR [rsi]
  43a56b:	mov    QWORD PTR [rsi],r14
  43a56e:	mov    esi,0x1
  43a573:	shlx   rcx,rsi,rcx
  43a578:	mov    r10,QWORD PTR [rbx+0x10]
  43a57c:	mov    r9,QWORD PTR [rbx+0x18]
  43a580:	or     DWORD PTR [r10+rdx*1],ecx
  43a584:	mov    r14,rdi
  43a587:	movsx  eax,BYTE PTR [r11]
  43a58b:	test   eax,eax
  43a58d:	jne    43a498 <xmlStrEqual@plt+0x36558>
  43a593:	xor    ecx,ecx
  43a595:	mov    r8,r12
  43a598:	xor    edx,edx
  43a59a:	mov    esi,0x1
  43a59f:	jmp    43a4ec <xmlStrEqual@plt+0x365ac>
  43a5a4:	nop    DWORD PTR [rax+0x0]
  43a5a8:	mov    rax,QWORD PTR [rsp+0x8]
  43a5ad:	mov    r13d,ebp
  43a5b0:	lea    rdi,[rax+0x1]
  43a5b4:	movsx  eax,BYTE PTR [rax+0x1]
  43a5b8:	and    r13d,edx
  43a5bb:	test   al,al
  43a5bd:	je     43a5e4 <xmlStrEqual@plt+0x366a4>
  43a5bf:	mov    ecx,edx
  43a5c1:	nop    DWORD PTR [rax+0x0]
  43a5c8:	mov    edx,ecx
  43a5ca:	shl    edx,0x5
  43a5cd:	sub    edx,ecx
  43a5cf:	inc    rdi
  43a5d2:	lea    ecx,[rax+rdx*1]
  43a5d5:	movsx  eax,BYTE PTR [rdi]
  43a5d8:	test   al,al
  43a5da:	jne    43a5c8 <xmlStrEqual@plt+0x36688>
  43a5dc:	mov    r13d,ecx
  43a5df:	mov    edx,ecx
  43a5e1:	and    r13d,ebp
  43a5e4:	mov    esi,r13d
  43a5e7:	shr    esi,0x4
  43a5ea:	lea    rdi,[r12+rsi*4]
  43a5ee:	lea    eax,[r13+r13*1+0x0]
  43a5f3:	mov    r9d,DWORD PTR [rdi]
  43a5f6:	and    eax,0x1e
  43a5f9:	shrx   esi,r9d,eax
  43a5fe:	test   sil,0x2
  43a602:	je     43a2c2 <xmlStrEqual@plt+0x36382>
  43a608:	mov    rdx,QWORD PTR [rbx+0x18]
  43a60c:	mov    rcx,QWORD PTR [rsp+0x8]
  43a611:	lea    r14,[r13*8+0x0]
  43a619:	mov    QWORD PTR [rdx+r13*8],rcx
  43a61d:	mov    edx,0x3
  43a622:	shlx   rax,rdx,rax
  43a627:	andn   r9d,eax,r9d
  43a62c:	mov    DWORD PTR [rdi],r9d
  43a62f:	inc    DWORD PTR [rbx+0x4]
  43a632:	inc    DWORD PTR [rbx+0x8]
  43a635:	jmp    43a212 <xmlStrEqual@plt+0x362d2>
  43a63a:	nop    WORD PTR [rax+rax*1+0x0]
  43a640:	mov    rax,QWORD PTR [rsp+0x10]
  43a645:	mov    r15,QWORD PTR [rax]
  43a648:	jmp    43a212 <xmlStrEqual@plt+0x362d2>
  43a64d:	nop    DWORD PTR [rax]
  43a650:	mov    eax,DWORD PTR [rsp+0x10]
  43a654:	mov    ecx,DWORD PTR [rsp+0x1c]
  43a658:	mov    edx,ebx
  43a65a:	mov    r12,r14
  43a65d:	mov    rbx,r15
  43a660:	mov    r15,QWORD PTR [rsp+0x28]
  43a665:	cmp    eax,ecx
  43a667:	je     43ab0e <xmlStrEqual@plt+0x36bce>
  43a66d:	mov    r8d,eax
  43a670:	lea    r14,[r8*8+0x0]
  43a678:	mov    ecx,DWORD PTR [rsp+0x10]
  43a67c:	mov    eax,ecx
  43a67e:	shr    eax,0x4
  43a681:	lea    rdi,[r12+rax*4]
  43a685:	mov    r9d,DWORD PTR [rdi]
  43a688:	lea    eax,[rcx+rcx*1]
  43a68b:	and    eax,0x1e
  43a68e:	shrx   edx,r9d,eax
  43a693:	test   dl,0x2
  43a696:	jne    43ab06 <xmlStrEqual@plt+0x36bc6>
  43a69c:	and    edx,0x1
  43a69f:	je     43a212 <xmlStrEqual@plt+0x362d2>
  43a6a5:	mov    rdx,QWORD PTR [rbx+0x18]
  43a6a9:	mov    rcx,QWORD PTR [rsp+0x8]
  43a6ae:	mov    QWORD PTR [rdx+r14*1],rcx
  43a6b2:	mov    edx,0x3
  43a6b7:	shlx   rax,rdx,rax
  43a6bc:	andn   r9d,eax,r9d
  43a6c1:	mov    DWORD PTR [rdi],r9d
  43a6c4:	inc    DWORD PTR [rbx+0x4]
  43a6c7:	jmp    43a212 <xmlStrEqual@plt+0x362d2>
  43a6cc:	nop    DWORD PTR [rax+0x0]
  43a6d0:	mov    esi,DWORD PTR [rbx+0x4]
  43a6d3:	cmp    esi,0x2
  43a6d6:	ja     43a8b8 <xmlStrEqual@plt+0x36978>
  43a6dc:	mov    DWORD PTR [rsp+0x18],0x3
  43a6e4:	mov    DWORD PTR [rsp+0x1c],0x4
  43a6ec:	mov    ebp,0x3
  43a6f1:	mov    r13d,0x4
  43a6f7:	mov    rdi,r13
  43a6fa:	call   403cd0 <malloc@plt>
  43a6ff:	mov    rdi,rax
  43a702:	mov    rdx,r13
  43a705:	mov    esi,0xaa
  43a70a:	mov    r12,rax
  43a70d:	call   4039f0 <memset@plt>
  43a712:	mov    eax,DWORD PTR [rsp+0x1c]
  43a716:	cmp    DWORD PTR [rbx],eax
  43a718:	jb     43aaa0 <xmlStrEqual@plt+0x36b60>
  43a71e:	xor    r15d,r15d
  43a721:	jmp    43a736 <xmlStrEqual@plt+0x367f6>
  43a723:	nop    DWORD PTR [rax+rax*1+0x0]
  43a728:	mov    edi,DWORD PTR [rbx]
  43a72a:	inc    r15d
  43a72d:	cmp    r15d,edi
  43a730:	je     43a900 <xmlStrEqual@plt+0x369c0>
  43a736:	mov    eax,r15d
  43a739:	mov    r10,QWORD PTR [rbx+0x10]
  43a73d:	shr    eax,0x4
  43a740:	lea    rcx,[r10+rax*4]
  43a744:	mov    edx,DWORD PTR [rcx]
  43a746:	lea    eax,[r15+r15*1]
  43a74a:	and    eax,0x1e
  43a74d:	shrx   esi,edx,eax
  43a752:	and    esi,0x3
  43a755:	jne    43a728 <xmlStrEqual@plt+0x367e8>
  43a757:	mov    r9,QWORD PTR [rbx+0x18]
  43a75b:	mov    rdi,QWORD PTR [rbx+0x20]
  43a75f:	mov    esi,r15d
  43a762:	bts    edx,eax
  43a765:	mov    r11,QWORD PTR [r9+rsi*8]
  43a769:	mov    r14,QWORD PTR [rdi+rsi*8]
  43a76d:	mov    DWORD PTR [rcx],edx
  43a76f:	movsx  eax,BYTE PTR [r11]
  43a773:	test   eax,eax
  43a775:	je     43a873 <xmlStrEqual@plt+0x36933>
  43a77b:	nop    DWORD PTR [rax+rax*1+0x0]
  43a780:	movsx  edx,BYTE PTR [r11+0x1]
  43a785:	lea    rsi,[r11+0x1]
  43a789:	mov    ecx,eax
  43a78b:	test   dl,dl
  43a78d:	je     43a7a6 <xmlStrEqual@plt+0x36866>
  43a78f:	nop
  43a790:	mov    eax,ecx
  43a792:	shl    eax,0x5
  43a795:	sub    eax,ecx
  43a797:	inc    rsi
  43a79a:	lea    ecx,[rdx+rax*1]
  43a79d:	movsx  edx,BYTE PTR [rsi]
  43a7a0:	test   dl,dl
  43a7a2:	jne    43a790 <xmlStrEqual@plt+0x36850>
  43a7a4:	mov    eax,ecx
  43a7a6:	mov    edi,eax
  43a7a8:	and    edi,ebp
  43a7aa:	mov    esi,eax
  43a7ac:	mov    edx,edi
  43a7ae:	shl    eax,0x3
  43a7b1:	shr    edx,0x4
  43a7b4:	shr    esi,0x3
  43a7b7:	xor    esi,eax
  43a7b9:	shl    rdx,0x2
  43a7bd:	lea    ecx,[rdi+rdi*1]
  43a7c0:	lea    r8,[r12+rdx*1]
  43a7c4:	or     esi,0x1
  43a7c7:	and    ecx,0x1e
  43a7ca:	mov    eax,edi
  43a7cc:	mov    edi,DWORD PTR [r8]
  43a7cf:	and    esi,ebp
  43a7d1:	shrx   r13d,edi,ecx
  43a7d6:	and    r13d,0x2
  43a7da:	jne    43a805 <xmlStrEqual@plt+0x368c5>
  43a7dc:	nop    DWORD PTR [rax+0x0]
  43a7e0:	add    eax,esi
  43a7e2:	and    eax,ebp
  43a7e4:	mov    edx,eax
  43a7e6:	shr    edx,0x4
  43a7e9:	shl    rdx,0x2
  43a7ed:	lea    r8,[r12+rdx*1]
  43a7f1:	mov    edi,DWORD PTR [r8]
  43a7f4:	lea    ecx,[rax+rax*1]
  43a7f7:	and    ecx,0x1e
  43a7fa:	shrx   r13d,edi,ecx
  43a7ff:	and    r13d,0x2
  43a803:	je     43a7e0 <xmlStrEqual@plt+0x368a0>
  43a805:	mov    esi,0x2
  43a80a:	shlx   rsi,rsi,rcx
  43a80f:	andn   edi,esi,edi
  43a814:	mov    DWORD PTR [r8],edi
  43a817:	mov    esi,eax
  43a819:	shl    rsi,0x3
  43a81d:	mov    edi,DWORD PTR [rbx]
  43a81f:	add    r9,rsi
  43a822:	cmp    edi,eax
  43a824:	jbe    43a8f0 <xmlStrEqual@plt+0x369b0>
  43a82a:	mov    eax,DWORD PTR [r10+rdx*1]
  43a82e:	shrx   eax,eax,ecx
  43a833:	test   al,0x3
  43a835:	jne    43a8f0 <xmlStrEqual@plt+0x369b0>
  43a83b:	mov    rax,QWORD PTR [r9]
  43a83e:	mov    QWORD PTR [r9],r11
  43a841:	mov    r11,rax
  43a844:	add    rsi,QWORD PTR [rbx+0x20]
  43a848:	mov    rdi,QWORD PTR [rsi]
  43a84b:	mov    QWORD PTR [rsi],r14
  43a84e:	mov    esi,0x1
  43a853:	shlx   rcx,rsi,rcx
  43a858:	mov    r10,QWORD PTR [rbx+0x10]
  43a85c:	mov    r9,QWORD PTR [rbx+0x18]
  43a860:	or     DWORD PTR [r10+rdx*1],ecx
  43a864:	mov    r14,rdi
  43a867:	movsx  eax,BYTE PTR [r11]
  43a86b:	test   eax,eax
  43a86d:	jne    43a780 <xmlStrEqual@plt+0x36840>
  43a873:	xor    ecx,ecx
  43a875:	mov    r8,r12
  43a878:	mov    esi,0x1
  43a87d:	xor    edx,edx
  43a87f:	jmp    43a7cc <xmlStrEqual@plt+0x3688c>
  43a884:	nop    DWORD PTR [rax+0x0]
  43a888:	cmp    esi,0x2
  43a88b:	ja     43a2a0 <xmlStrEqual@plt+0x36360>
  43a891:	mov    ebp,0x3
  43a896:	mov    DWORD PTR [rsp+0x18],0x3
  43a89e:	mov    DWORD PTR [rsp+0x1c],0x4
  43a8a6:	mov    r13d,0x4
  43a8ac:	jmp    43a411 <xmlStrEqual@plt+0x364d1>
  43a8b1:	nop    DWORD PTR [rax+0x0]
  43a8b8:	mov    eax,DWORD PTR [rsp+0x1c]
  43a8bc:	mov    r12,QWORD PTR [rbx+0x10]
  43a8c0:	lea    ebp,[rax-0x1]
  43a8c3:	mov    rax,QWORD PTR [rsp+0x8]
  43a8c8:	mov    r15,rbx
  43a8cb:	movsx  edx,BYTE PTR [rax]
  43a8ce:	jmp    43a2a0 <xmlStrEqual@plt+0x36360>
  43a8d3:	nop    DWORD PTR [rax+rax*1+0x0]
  43a8d8:	mov    QWORD PTR [r9],r11
  43a8db:	mov    rax,QWORD PTR [rbx+0x20]
  43a8df:	mov    QWORD PTR [rax+rsi*1],r14
  43a8e3:	jmp    43a442 <xmlStrEqual@plt+0x36502>
  43a8e8:	nop    DWORD PTR [rax+rax*1+0x0]
  43a8f0:	mov    QWORD PTR [r9],r11
  43a8f3:	mov    rax,QWORD PTR [rbx+0x20]
  43a8f7:	mov    QWORD PTR [rax+rsi*1],r14
  43a8fb:	jmp    43a72a <xmlStrEqual@plt+0x367ea>
  43a900:	cmp    DWORD PTR [rsp+0x1c],r15d
  43a905:	jae    43a930 <xmlStrEqual@plt+0x369f0>
  43a907:	mov    r13d,DWORD PTR [rsp+0x1c]
  43a90c:	mov    rdi,QWORD PTR [rbx+0x18]
  43a910:	shl    r13,0x3
  43a914:	mov    rsi,r13
  43a917:	call   403e10 <realloc@plt>
  43a91c:	mov    QWORD PTR [rbx+0x18],rax
  43a920:	mov    rdi,QWORD PTR [rbx+0x20]
  43a924:	mov    rsi,r13
  43a927:	call   403e10 <realloc@plt>
  43a92c:	mov    QWORD PTR [rbx+0x20],rax
  43a930:	mov    rdi,QWORD PTR [rbx+0x10]
  43a934:	call   4037b0 <free@plt>
  43a939:	mov    eax,DWORD PTR [rsp+0x1c]
  43a93d:	mov    QWORD PTR [rbx+0x10],r12
  43a941:	mov    DWORD PTR [rbx],eax
  43a943:	mov    eax,DWORD PTR [rbx+0x4]
  43a946:	mov    DWORD PTR [rbx+0x8],eax
  43a949:	mov    eax,DWORD PTR [rsp+0x18]
  43a94d:	mov    DWORD PTR [rbx+0xc],eax
  43a950:	mov    rax,QWORD PTR [rsp+0x8]
  43a955:	movsx  edx,BYTE PTR [rax]
  43a958:	mov    rax,QWORD PTR [rsp+0x10]
  43a95d:	mov    r15,QWORD PTR [rax]
  43a960:	jmp    43a2a0 <xmlStrEqual@plt+0x36360>
  43a965:	nop    DWORD PTR [rax]
  43a968:	mov    ecx,DWORD PTR [rsp+0x10]
  43a96c:	mov    esi,DWORD PTR [rsp+0x1c]
  43a970:	mov    edx,ebx
  43a972:	mov    r12,r14
  43a975:	mov    rbx,r15
  43a978:	mov    r15,QWORD PTR [rsp+0x28]
  43a97d:	cmp    ecx,esi
  43a97f:	je     43aaf7 <xmlStrEqual@plt+0x36bb7>
  43a985:	mov    r8d,ecx
  43a988:	lea    r14,[r8*8+0x0]
  43a990:	jmp    43a678 <xmlStrEqual@plt+0x36738>
  43a995:	mov    eax,DWORD PTR [rsp+0x1c]
  43a999:	mov    ebp,eax
  43a99b:	shr    ebp,1
  43a99d:	or     ebp,eax
  43a99f:	mov    eax,ebp
  43a9a1:	shr    eax,0x2
  43a9a4:	or     ebp,eax
  43a9a6:	mov    eax,ebp
  43a9a8:	shr    eax,0x4
  43a9ab:	or     ebp,eax
  43a9ad:	mov    eax,ebp
  43a9af:	shr    eax,0x8
  43a9b2:	or     ebp,eax
  43a9b4:	mov    eax,ebp
  43a9b6:	shr    eax,0x10
  43a9b9:	or     ebp,eax
  43a9bb:	lea    edx,[rbp+0x1]
  43a9be:	cmp    edx,0x3
  43a9c1:	jbe    43a6d3 <xmlStrEqual@plt+0x36793>
  43a9c7:	mov    eax,edx
  43a9c9:	vxorpd xmm0,xmm0,xmm0
  43a9cd:	vcvtsi2sd xmm0,xmm0,rax
  43a9d2:	vmovsd xmm2,QWORD PTR [rip+0x124fe]        # 44ced8 <xmlStrEqual@plt+0x48f98>
  43a9da:	vfmadd132sd xmm0,xmm2,QWORD PTR [rip+0x124ed]        # 44ced0 <xmlStrEqual@plt+0x48f90>
  43a9e3:	vcvttsd2si rax,xmm0
  43a9e8:	mov    DWORD PTR [rsp+0x18],eax
  43a9ec:	cmp    esi,eax
  43a9ee:	jb     43aa48 <xmlStrEqual@plt+0x36b08>
  43a9f0:	mov    ebp,r8d
  43a9f3:	mov    edx,r14d
  43a9f6:	mov    r12,r13
  43a9f9:	jmp    43a2a0 <xmlStrEqual@plt+0x36360>
  43a9fe:	xchg   ax,ax
  43aa00:	mov    eax,r8d
  43aa03:	and    eax,r14d
  43aa06:	mov    r13d,r14d
  43aa09:	mov    DWORD PTR [rsp+0x18],eax
  43aa0d:	shr    r13d,0x3
  43aa11:	lea    eax,[r14*8+0x0]
  43aa19:	xor    r13d,eax
  43aa1c:	or     r13d,0x1
  43aa20:	jmp    43a13a <xmlStrEqual@plt+0x361fa>
  43aa25:	nop    DWORD PTR [rax]
  43aa28:	mov    rax,r14
  43aa2b:	mov    edx,ebx
  43aa2d:	mov    rbx,r15
  43aa30:	mov    r15,QWORD PTR [rsp+0x28]
  43aa35:	mov    r14,r12
  43aa38:	mov    r12,rax
  43aa3b:	mov    DWORD PTR [rsp+0x10],edx
  43aa3f:	jmp    43a678 <xmlStrEqual@plt+0x36738>
  43aa44:	nop    DWORD PTR [rax+0x0]
  43aa48:	cmp    edx,0xf
  43aa4b:	jbe    43aae8 <xmlStrEqual@plt+0x36ba8>
  43aa51:	mov    r13d,edx
  43aa54:	shr    r13d,0x4
  43aa58:	shl    r13,0x2
  43aa5c:	mov    DWORD PTR [rsp+0x1c],edx
  43aa60:	jmp    43a6f7 <xmlStrEqual@plt+0x367b7>
  43aa65:	nop    DWORD PTR [rax]
  43aa68:	mov    r13d,eax
  43aa6b:	shl    r13,0x3
  43aa6f:	mov    rdi,QWORD PTR [rbx+0x18]
  43aa73:	mov    rsi,r13
  43aa76:	call   403e10 <realloc@plt>
  43aa7b:	mov    QWORD PTR [rbx+0x18],rax
  43aa7f:	mov    rdi,QWORD PTR [rbx+0x20]
  43aa83:	mov    rsi,r13
  43aa86:	call   403e10 <realloc@plt>
  43aa8b:	mov    edx,DWORD PTR [rbx]
  43aa8d:	mov    QWORD PTR [rbx+0x20],rax
  43aa91:	test   edx,edx
  43aa93:	jne    43a438 <xmlStrEqual@plt+0x364f8>
  43aa99:	jmp    43a930 <xmlStrEqual@plt+0x369f0>
  43aa9e:	xchg   ax,ax
  43aaa0:	mov    r13d,eax
  43aaa3:	shl    r13,0x3
  43aaa7:	mov    rdi,QWORD PTR [rbx+0x18]
  43aaab:	mov    rsi,r13
  43aaae:	call   403e10 <realloc@plt>
  43aab3:	mov    QWORD PTR [rbx+0x18],rax
  43aab7:	mov    rdi,QWORD PTR [rbx+0x20]
  43aabb:	mov    rsi,r13
  43aabe:	call   403e10 <realloc@plt>
  43aac3:	mov    QWORD PTR [rbx+0x20],rax
  43aac7:	mov    eax,DWORD PTR [rbx]
  43aac9:	test   eax,eax
  43aacb:	jne    43a71e <xmlStrEqual@plt+0x367de>
  43aad1:	jmp    43a930 <xmlStrEqual@plt+0x369f0>
  43aad6:	mov    ebp,eax
  43aad8:	mov    DWORD PTR [rsp+0x1c],r8d
  43aadd:	mov    r13d,0x4
  43aae3:	jmp    43a411 <xmlStrEqual@plt+0x364d1>
  43aae8:	mov    DWORD PTR [rsp+0x1c],edx
  43aaec:	mov    r13d,0x4
  43aaf2:	jmp    43a6f7 <xmlStrEqual@plt+0x367b7>
  43aaf7:	lea    rdi,[r14+rdi*4]
  43aafb:	mov    r9d,DWORD PTR [rdi]
  43aafe:	mov    r13d,edx
  43ab01:	jmp    43a608 <xmlStrEqual@plt+0x366c8>
  43ab06:	mov    r13d,ecx
  43ab09:	jmp    43a608 <xmlStrEqual@plt+0x366c8>
  43ab0e:	mov    r8d,edx
  43ab11:	lea    r14,[r8*8+0x0]
  43ab19:	jmp    43aa3b <xmlStrEqual@plt+0x36afb>
  43ab1e:	xchg   ax,ax
  43ab20:	endbr64 
  43ab24:	push   r15
  43ab26:	push   r14
  43ab28:	push   r13
  43ab2a:	push   r12
  43ab2c:	push   rbp
  43ab2d:	push   rbx
  43ab2e:	sub    rsp,0x38
  43ab32:	mov    r15,QWORD PTR [rdi]
  43ab35:	mov    r12d,DWORD PTR [r15]
  43ab38:	test   r12d,r12d
  43ab3b:	je     43ac45 <xmlStrEqual@plt+0x36d05>
  43ab41:	movsx  ecx,BYTE PTR [rsi]
  43ab44:	lea    r10d,[r12-0x1]
  43ab49:	mov    r13d,0x1
  43ab4f:	test   ecx,ecx
  43ab51:	jne    43ac58 <xmlStrEqual@plt+0x36d18>
  43ab57:	mov    rax,QWORD PTR [r15+0x10]
  43ab5b:	and    r13d,r10d
  43ab5e:	mov    QWORD PTR [rsp+0x20],rsi
  43ab63:	mov    rbx,rdi
  43ab66:	mov    DWORD PTR [rsp+0x14],r13d
  43ab6b:	mov    QWORD PTR [rsp+0x18],rax
  43ab70:	mov    r14d,ecx
  43ab73:	jmp    43abbf <xmlStrEqual@plt+0x36c7f>
  43ab75:	nop    DWORD PTR [rax]
  43ab78:	test   r13b,0x1
  43ab7c:	jne    43aba9 <xmlStrEqual@plt+0x36c69>
  43ab7e:	mov    rsi,QWORD PTR [r15+0x18]
  43ab82:	mov    eax,r14d
  43ab85:	mov    rdi,QWORD PTR [rsi+rax*8]
  43ab89:	mov    rsi,QWORD PTR [rsp+0x20]
  43ab8e:	mov    DWORD PTR [rsp+0x10],ecx
  43ab92:	mov    DWORD PTR [rsp+0xc],r10d
  43ab97:	call   4037c0 <strcmp@plt>
  43ab9c:	test   eax,eax
  43ab9e:	mov    r10d,DWORD PTR [rsp+0xc]
  43aba3:	mov    ecx,DWORD PTR [rsp+0x10]
  43aba7:	je     43abed <xmlStrEqual@plt+0x36cad>
  43aba9:	mov    eax,DWORD PTR [rsp+0x14]
  43abad:	lea    edx,[rax+r14*1]
  43abb1:	and    edx,r10d
  43abb4:	mov    r14d,edx
  43abb7:	cmp    edx,ecx
  43abb9:	je     43ac45 <xmlStrEqual@plt+0x36d05>
  43abbf:	mov    eax,r14d
  43abc2:	shr    eax,0x4
  43abc5:	lea    rsi,[rax*4+0x0]
  43abcd:	mov    QWORD PTR [rsp+0x28],rsi
  43abd2:	mov    rsi,QWORD PTR [rsp+0x18]
  43abd7:	lea    ebp,[r14+r14*1]
  43abdb:	mov    r11d,DWORD PTR [rsi+rax*4]
  43abdf:	and    ebp,0x1e
  43abe2:	shrx   r13d,r11d,ebp
  43abe7:	test   r13b,0x2
  43abeb:	je     43ab78 <xmlStrEqual@plt+0x36c38>
  43abed:	and    r13d,0x3
  43abf1:	jne    43ac45 <xmlStrEqual@plt+0x36d05>
  43abf3:	cmp    r12d,r14d
  43abf6:	je     43ac45 <xmlStrEqual@plt+0x36d05>
  43abf8:	mov    rax,QWORD PTR [r15+0x18]
  43abfc:	mov    r12d,r14d
  43abff:	mov    rdi,QWORD PTR [rax+r12*8]
  43ac03:	call   4037b0 <free@plt>
  43ac08:	mov    rax,QWORD PTR [rbx+0x8]
  43ac0c:	test   rax,rax
  43ac0f:	je     43ac1e <xmlStrEqual@plt+0x36cde>
  43ac11:	mov    rcx,QWORD PTR [rbx]
  43ac14:	mov    rcx,QWORD PTR [rcx+0x20]
  43ac18:	mov    rdi,QWORD PTR [rcx+r12*8]
  43ac1c:	call   rax
  43ac1e:	mov    rax,QWORD PTR [rbx]
  43ac21:	cmp    r14d,DWORD PTR [rax]
  43ac24:	je     43ac45 <xmlStrEqual@plt+0x36d05>
  43ac26:	mov    r14,QWORD PTR [rsp+0x28]
  43ac2b:	add    r14,QWORD PTR [rax+0x10]
  43ac2f:	mov    edx,DWORD PTR [r14]
  43ac32:	shrx   ecx,edx,ebp
  43ac37:	and    ecx,0x3
  43ac3a:	jne    43ac45 <xmlStrEqual@plt+0x36d05>
  43ac3c:	bts    edx,ebp
  43ac3f:	mov    DWORD PTR [r14],edx
  43ac42:	dec    DWORD PTR [rax+0x4]
  43ac45:	add    rsp,0x38
  43ac49:	pop    rbx
  43ac4a:	pop    rbp
  43ac4b:	pop    r12
  43ac4d:	pop    r13
  43ac4f:	pop    r14
  43ac51:	pop    r15
  43ac53:	ret    
  43ac54:	nop    DWORD PTR [rax+0x0]
  43ac58:	movsx  eax,BYTE PTR [rsi+0x1]
  43ac5c:	lea    r11,[rsi+0x1]
  43ac60:	test   al,al
  43ac62:	je     43ac7e <xmlStrEqual@plt+0x36d3e>
  43ac64:	nop    DWORD PTR [rax+0x0]
  43ac68:	mov    edx,ecx
  43ac6a:	shl    edx,0x5
  43ac6d:	sub    edx,ecx
  43ac6f:	mov    ecx,edx
  43ac71:	inc    r11
  43ac74:	add    ecx,eax
  43ac76:	movsx  eax,BYTE PTR [r11]
  43ac7a:	test   al,al
  43ac7c:	jne    43ac68 <xmlStrEqual@plt+0x36d28>
  43ac7e:	mov    r13d,ecx
  43ac81:	lea    eax,[rcx*8+0x0]
  43ac88:	shr    r13d,0x3
  43ac8c:	xor    r13d,eax
  43ac8f:	or     r13d,0x1
  43ac93:	and    ecx,r10d
  43ac96:	jmp    43ab57 <xmlStrEqual@plt+0x36c17>
  43ac9b:	nop    DWORD PTR [rax+rax*1+0x0]
  43aca0:	endbr64 
  43aca4:	push   r15
  43aca6:	xor    eax,eax
  43aca8:	push   r14
  43acaa:	push   r13
  43acac:	push   r12
  43acae:	push   rbp
  43acaf:	push   rbx
  43acb0:	sub    rsp,0x18
  43acb4:	mov    r13,QWORD PTR [rdi]
  43acb7:	mov    r15d,DWORD PTR [r13+0x0]
  43acbb:	test   r15d,r15d
  43acbe:	je     43ad54 <xmlStrEqual@plt+0x36e14>
  43acc4:	movsx  ebp,BYTE PTR [rsi]
  43acc7:	lea    r8d,[r15-0x1]
  43accb:	mov    r14d,0x1
  43acd1:	test   ebp,ebp
  43acd3:	jne    43ad68 <xmlStrEqual@plt+0x36e28>
  43acd9:	and    r14d,r8d
  43acdc:	mov    DWORD PTR [rsp+0x4],r14d
  43ace1:	mov    QWORD PTR [rsp+0x8],rsi
  43ace6:	mov    r14,QWORD PTR [r13+0x10]
  43acea:	mov    ebx,ebp
  43acec:	jmp    43ad25 <xmlStrEqual@plt+0x36de5>
  43acee:	xchg   ax,ax
  43acf0:	test   r12b,0x1
  43acf4:	jne    43ad16 <xmlStrEqual@plt+0x36dd6>
  43acf6:	mov    rsi,QWORD PTR [r13+0x18]
  43acfa:	mov    eax,ebx
  43acfc:	mov    rdi,QWORD PTR [rsi+rax*8]
  43ad00:	mov    rsi,QWORD PTR [rsp+0x8]
  43ad05:	mov    DWORD PTR [rsp],r8d
  43ad09:	call   4037c0 <strcmp@plt>
  43ad0e:	test   eax,eax
  43ad10:	mov    r8d,DWORD PTR [rsp]
  43ad14:	je     43ad41 <xmlStrEqual@plt+0x36e01>
  43ad16:	add    ebx,DWORD PTR [rsp+0x4]
  43ad1a:	and    ebx,r8d
  43ad1d:	cmp    ebx,ebp
  43ad1f:	je     43adb0 <xmlStrEqual@plt+0x36e70>
  43ad25:	mov    eax,ebx
  43ad27:	shr    eax,0x4
  43ad2a:	lea    r12d,[rbx+rbx*1]
  43ad2e:	mov    eax,DWORD PTR [r14+rax*4]
  43ad32:	and    r12d,0x1e
  43ad36:	shrx   r12d,eax,r12d
  43ad3b:	test   r12b,0x2
  43ad3f:	je     43acf0 <xmlStrEqual@plt+0x36db0>
  43ad41:	and    r12d,0x3
  43ad45:	jne    43adb0 <xmlStrEqual@plt+0x36e70>
  43ad47:	cmp    r15d,ebx
  43ad4a:	je     43adb0 <xmlStrEqual@plt+0x36e70>
  43ad4c:	mov    rax,QWORD PTR [r13+0x20]
  43ad50:	mov    rax,QWORD PTR [rax+rbx*8]
  43ad54:	add    rsp,0x18
  43ad58:	pop    rbx
  43ad59:	pop    rbp
  43ad5a:	pop    r12
  43ad5c:	pop    r13
  43ad5e:	pop    r14
  43ad60:	pop    r15
  43ad62:	ret    
  43ad63:	nop    DWORD PTR [rax+rax*1+0x0]
  43ad68:	movsx  eax,BYTE PTR [rsi+0x1]
  43ad6c:	lea    r9,[rsi+0x1]
  43ad70:	test   al,al
  43ad72:	je     43ad8e <xmlStrEqual@plt+0x36e4e>
  43ad74:	nop    DWORD PTR [rax+0x0]
  43ad78:	mov    edi,ebp
  43ad7a:	shl    edi,0x5
  43ad7d:	sub    edi,ebp
  43ad7f:	mov    ebp,edi
  43ad81:	inc    r9
  43ad84:	add    ebp,eax
  43ad86:	movsx  eax,BYTE PTR [r9]
  43ad8a:	test   al,al
  43ad8c:	jne    43ad78 <xmlStrEqual@plt+0x36e38>
  43ad8e:	mov    r14d,ebp
  43ad91:	lea    eax,[rbp*8+0x0]
  43ad98:	shr    r14d,0x3
  43ad9c:	xor    r14d,eax
  43ad9f:	or     r14d,0x1
  43ada3:	and    ebp,r8d
  43ada6:	jmp    43acd9 <xmlStrEqual@plt+0x36d99>
  43adab:	nop    DWORD PTR [rax+rax*1+0x0]
  43adb0:	add    rsp,0x18
  43adb4:	pop    rbx
  43adb5:	pop    rbp
  43adb6:	pop    r12
  43adb8:	pop    r13
  43adba:	pop    r14
  43adbc:	xor    eax,eax
  43adbe:	pop    r15
  43adc0:	ret    
  43adc1:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  43adcc:	nop    DWORD PTR [rax+0x0]
  43add0:	endbr64 
  43add4:	test   rdi,rdi
  43add7:	je     43ae90 <xmlStrEqual@plt+0x36f50>
  43addd:	push   r13
  43addf:	push   r12
  43ade1:	mov    r12,rdi
  43ade4:	push   rbp
  43ade5:	push   rbx
  43ade6:	sub    rsp,0x8
  43adea:	mov    rbp,QWORD PTR [rdi]
  43aded:	mov    eax,DWORD PTR [rbp+0x0]
  43adf0:	test   eax,eax
  43adf2:	je     43ae57 <xmlStrEqual@plt+0x36f17>
  43adf4:	xor    ebx,ebx
  43adf6:	jmp    43ae07 <xmlStrEqual@plt+0x36ec7>
  43adf8:	nop    DWORD PTR [rax+rax*1+0x0]
  43ae00:	inc    ebx
  43ae02:	cmp    DWORD PTR [rbp+0x0],ebx
  43ae05:	je     43ae57 <xmlStrEqual@plt+0x36f17>
  43ae07:	mov    ecx,ebx
  43ae09:	mov    rsi,QWORD PTR [rbp+0x10]
  43ae0d:	lea    eax,[rbx+rbx*1]
  43ae10:	and    eax,0x1e
  43ae13:	shr    ecx,0x4
  43ae16:	mov    edx,eax
  43ae18:	mov    eax,DWORD PTR [rsi+rcx*4]
  43ae1b:	shrx   eax,eax,edx
  43ae20:	test   al,0x3
  43ae22:	jne    43ae00 <xmlStrEqual@plt+0x36ec0>
  43ae24:	mov    rax,QWORD PTR [rbp+0x18]
  43ae28:	mov    r13d,ebx
  43ae2b:	mov    rdi,QWORD PTR [rax+r13*8]
  43ae2f:	call   4037b0 <free@plt>
  43ae34:	mov    rax,QWORD PTR [r12+0x8]
  43ae39:	test   rax,rax
  43ae3c:	je     43ae4c <xmlStrEqual@plt+0x36f0c>
  43ae3e:	mov    rdx,QWORD PTR [r12]
  43ae42:	mov    rdx,QWORD PTR [rdx+0x20]
  43ae46:	mov    rdi,QWORD PTR [rdx+r13*8]
  43ae4a:	call   rax
  43ae4c:	mov    rbp,QWORD PTR [r12]
  43ae50:	inc    ebx
  43ae52:	cmp    DWORD PTR [rbp+0x0],ebx
  43ae55:	jne    43ae07 <xmlStrEqual@plt+0x36ec7>
  43ae57:	mov    rdi,QWORD PTR [rbp+0x18]
  43ae5b:	call   4037b0 <free@plt>
  43ae60:	mov    rdi,QWORD PTR [rbp+0x10]
  43ae64:	call   4037b0 <free@plt>
  43ae69:	mov    rdi,QWORD PTR [rbp+0x20]
  43ae6d:	call   4037b0 <free@plt>
  43ae72:	mov    rdi,rbp
  43ae75:	call   4037b0 <free@plt>
  43ae7a:	add    rsp,0x8
  43ae7e:	pop    rbx
  43ae7f:	pop    rbp
  43ae80:	mov    rdi,r12
  43ae83:	pop    r12
  43ae85:	pop    r13
  43ae87:	jmp    4037b0 <free@plt>
  43ae8c:	nop    DWORD PTR [rax+0x0]
  43ae90:	ret    
  43ae91:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  43ae9c:	nop    DWORD PTR [rax+0x0]
  43aea0:	endbr64 
  43aea4:	push   r12
  43aea6:	mov    r12,rdi
  43aea9:	push   rbp
  43aeaa:	push   rbx
  43aeab:	call   42dc90 <xmlStrEqual@plt+0x29d50>
  43aeb0:	mov    rsi,QWORD PTR [r12]
  43aeb4:	mov    rbp,rax
  43aeb7:	mov    eax,DWORD PTR [rsi]
  43aeb9:	test   eax,eax
  43aebb:	je     43af07 <xmlStrEqual@plt+0x36fc7>
  43aebd:	xor    ebx,ebx
  43aebf:	jmp    43aece <xmlStrEqual@plt+0x36f8e>
  43aec1:	nop    DWORD PTR [rax+0x0]
  43aec8:	inc    ebx
  43aeca:	cmp    DWORD PTR [rsi],ebx
  43aecc:	je     43af07 <xmlStrEqual@plt+0x36fc7>
  43aece:	mov    ecx,ebx
  43aed0:	mov    rdi,QWORD PTR [rsi+0x10]
  43aed4:	lea    eax,[rbx+rbx*1]
  43aed7:	and    eax,0x1e
  43aeda:	shr    ecx,0x4
  43aedd:	mov    edx,eax
  43aedf:	mov    eax,DWORD PTR [rdi+rcx*4]
  43aee2:	shrx   eax,eax,edx
  43aee7:	test   al,0x3
  43aee9:	jne    43aec8 <xmlStrEqual@plt+0x36f88>
  43aeeb:	mov    rdx,QWORD PTR [rsi+0x18]
  43aeef:	mov    eax,ebx
  43aef1:	mov    rdi,QWORD PTR [rdx+rax*8]
  43aef5:	mov    rsi,rbp
  43aef8:	call   42dcf0 <xmlStrEqual@plt+0x29db0>
  43aefd:	mov    rsi,QWORD PTR [r12]
  43af01:	inc    ebx
  43af03:	cmp    DWORD PTR [rsi],ebx
  43af05:	jne    43aece <xmlStrEqual@plt+0x36f8e>
  43af07:	pop    rbx
  43af08:	mov    rax,rbp
  43af0b:	pop    rbp
  43af0c:	pop    r12
  43af0e:	ret    
  43af0f:	nop
  43af10:	endbr64 
  43af14:	push   r12
  43af16:	mov    r12,rdi
  43af19:	push   rbp
  43af1a:	push   rbx
  43af1b:	call   42dc90 <xmlStrEqual@plt+0x29d50>
  43af20:	mov    rsi,QWORD PTR [r12]
  43af24:	mov    rbp,rax
  43af27:	mov    eax,DWORD PTR [rsi]
  43af29:	test   eax,eax
  43af2b:	je     43af77 <xmlStrEqual@plt+0x37037>
  43af2d:	xor    ebx,ebx
  43af2f:	jmp    43af3e <xmlStrEqual@plt+0x36ffe>
  43af31:	nop    DWORD PTR [rax+0x0]
  43af38:	inc    ebx
  43af3a:	cmp    DWORD PTR [rsi],ebx
  43af3c:	je     43af77 <xmlStrEqual@plt+0x37037>
  43af3e:	mov    ecx,ebx
  43af40:	mov    rdi,QWORD PTR [rsi+0x10]
  43af44:	lea    eax,[rbx+rbx*1]
  43af47:	and    eax,0x1e
  43af4a:	shr    ecx,0x4
  43af4d:	mov    edx,eax
  43af4f:	mov    eax,DWORD PTR [rdi+rcx*4]
  43af52:	shrx   eax,eax,edx
  43af57:	test   al,0x3
  43af59:	jne    43af38 <xmlStrEqual@plt+0x36ff8>
  43af5b:	mov    rdx,QWORD PTR [rsi+0x20]
  43af5f:	mov    eax,ebx
  43af61:	mov    rdi,QWORD PTR [rdx+rax*8]
  43af65:	mov    rsi,rbp
  43af68:	call   42dcf0 <xmlStrEqual@plt+0x29db0>
  43af6d:	mov    rsi,QWORD PTR [r12]
  43af71:	inc    ebx
  43af73:	cmp    DWORD PTR [rsi],ebx
  43af75:	jne    43af3e <xmlStrEqual@plt+0x36ffe>
  43af77:	pop    rbx
  43af78:	mov    rax,rbp
  43af7b:	pop    rbp
  43af7c:	pop    r12
  43af7e:	ret    
  43af7f:	nop
  43af80:	endbr64 
  43af84:	sub    rsp,0x18
  43af88:	mov    DWORD PTR [rsp+0xc],edi
  43af8c:	mov    edi,DWORD PTR [rip+0x39dda]        # 474d6c <xmlStrEqual@plt+0x70e2c>
  43af92:	lea    rsi,[rsp+0xc]
  43af97:	mov    edx,0x4
  43af9c:	call   403920 <write@plt>
  43afa1:	cmp    rax,0x4
  43afa5:	je     43afcd <xmlStrEqual@plt+0x3708d>
  43afa7:	call   4037f0 <__errno_location@plt>
  43afac:	mov    edi,DWORD PTR [rax]
  43afae:	call   403910 <strerror@plt>
  43afb3:	mov    edx,DWORD PTR [rsp+0xc]
  43afb7:	mov    rcx,rax
  43afba:	lea    rsi,[rip+0x17547]        # 452508 <xmlStrEqual@plt+0x4e5c8>
  43afc1:	mov    edi,0x3
  43afc6:	xor    eax,eax
  43afc8:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  43afcd:	add    rsp,0x18
  43afd1:	ret    
  43afd2:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  43afdd:	nop    DWORD PTR [rax]
  43afe0:	endbr64 
  43afe4:	push   r12
  43afe6:	mov    edx,0x4
  43afeb:	push   rbp
  43afec:	push   rbx
  43afed:	sub    rsp,0x30
  43aff1:	mov    edi,DWORD PTR [rdi+0x18]
  43aff4:	lea    rsi,[rsp+0xc]
  43aff9:	mov    rax,QWORD PTR fs:0x28
  43b002:	mov    QWORD PTR [rsp+0x28],rax
  43b007:	xor    eax,eax
  43b009:	call   403d40 <read@plt>
  43b00e:	cmp    eax,0x4
  43b011:	jne    43b0c0 <xmlStrEqual@plt+0x37180>
  43b017:	xor    eax,eax
  43b019:	cmp    DWORD PTR [rsp+0xc],0xc
  43b01e:	je     43b040 <xmlStrEqual@plt+0x37100>
  43b020:	mov    rcx,QWORD PTR [rsp+0x28]
  43b025:	xor    rcx,QWORD PTR fs:0x28
  43b02e:	jne    43b0dd <xmlStrEqual@plt+0x3719d>
  43b034:	add    rsp,0x30
  43b038:	pop    rbx
  43b039:	pop    rbp
  43b03a:	pop    r12
  43b03c:	ret    
  43b03d:	nop    DWORD PTR [rax]
  43b040:	lea    rdi,[rsp+0x10]
  43b045:	xor    esi,esi
  43b047:	call   403e00 <gettimeofday@plt>
  43b04c:	mov    rbx,0x474d40
  43b053:	mov    eax,DWORD PTR [rbx+0x4]
  43b056:	inc    eax
  43b058:	cdq    
  43b059:	idiv   DWORD PTR [rbx]
  43b05b:	movsxd r12,edx
  43b05e:	shl    r12,0x4
  43b062:	add    r12,QWORD PTR [rbx+0x8]
  43b066:	mov    rax,QWORD PTR [r12+0x8]
  43b06b:	mov    DWORD PTR [rbx+0x4],edx
  43b06e:	cmp    r12,rax
  43b071:	jne    43b08e <xmlStrEqual@plt+0x3714e>
  43b073:	nop    DWORD PTR [rax+rax*1+0x0]
  43b078:	xor    eax,eax
  43b07a:	jmp    43b020 <xmlStrEqual@plt+0x370e0>
  43b07c:	nop    DWORD PTR [rax+0x0]
  43b080:	dec    edx
  43b082:	mov    DWORD PTR [rax+0x14],edx
  43b085:	mov    rax,QWORD PTR [rbp+0x8]
  43b089:	cmp    r12,rax
  43b08c:	je     43b078 <xmlStrEqual@plt+0x37138>
  43b08e:	mov    edx,DWORD PTR [rax+0x14]
  43b091:	mov    rbp,QWORD PTR [rax]
  43b094:	test   edx,edx
  43b096:	jg     43b080 <xmlStrEqual@plt+0x37140>
  43b098:	mov    rdx,QWORD PTR [rax+0x8]
  43b09c:	mov    rdi,rax
  43b09f:	mov    QWORD PTR [rbp+0x8],rdx
  43b0a3:	mov    QWORD PTR [rdx],rbp
  43b0a6:	mov    QWORD PTR [rax+0x8],0x0
  43b0ae:	mov    QWORD PTR [rax],0x0
  43b0b5:	dec    DWORD PTR [rbx+0x18]
  43b0b8:	inc    DWORD PTR [rbx+0x1c]
  43b0bb:	call   QWORD PTR [rax+0x18]
  43b0be:	jmp    43b085 <xmlStrEqual@plt+0x37145>
  43b0c0:	xor    eax,eax
  43b0c2:	lea    rsi,[rip+0x174b7]        # 452580 <xmlStrEqual@plt+0x4e640>
  43b0c9:	mov    edi,0x3
  43b0ce:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  43b0d3:	mov    eax,0xffffffff
  43b0d8:	jmp    43b020 <xmlStrEqual@plt+0x370e0>
  43b0dd:	call   403c00 <__stack_chk_fail@plt>
  43b0e2:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  43b0ed:	nop    DWORD PTR [rax]
  43b0f0:	endbr64 
  43b0f4:	push   rbp
  43b0f5:	push   rbx
  43b0f6:	sub    rsp,0xc8
  43b0fd:	mov    rax,QWORD PTR fs:0x28
  43b106:	mov    QWORD PTR [rsp+0xb8],rax
  43b10e:	xor    eax,eax
  43b110:	mov    rax,0x469e3c
  43b117:	mov    eax,DWORD PTR [rax]
  43b119:	test   eax,eax
  43b11b:	jle    43b130 <xmlStrEqual@plt+0x371f0>
  43b11d:	lea    rsi,[rip+0x173f8]        # 45251c <xmlStrEqual@plt+0x4e5dc>
  43b124:	mov    edi,0x5
  43b129:	xor    eax,eax
  43b12b:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  43b130:	lea    rdi,[rip+0x39c31]        # 474d68 <xmlStrEqual@plt+0x70e28>
  43b137:	call   403ce0 <pipe@plt>
  43b13c:	cmp    eax,0xffffffff
  43b13f:	je     43b2b8 <xmlStrEqual@plt+0x37378>
  43b145:	mov    edi,DWORD PTR [rip+0x39c1d]        # 474d68 <xmlStrEqual@plt+0x70e28>
  43b14b:	mov    rbx,0x474d20
  43b152:	xor    edx,edx
  43b154:	xor    eax,eax
  43b156:	mov    esi,0x3
  43b15b:	mov    DWORD PTR [rbx],edi
  43b15d:	call   403a20 <fcntl@plt>
  43b162:	cmp    eax,0xffffffff
  43b165:	je     43b315 <xmlStrEqual@plt+0x373d5>
  43b16b:	or     ah,0x8
  43b16e:	mov    edi,DWORD PTR [rbx]
  43b170:	mov    edx,eax
  43b172:	mov    esi,0x4
  43b177:	xor    eax,eax
  43b179:	call   403a20 <fcntl@plt>
  43b17e:	cmp    eax,0xffffffff
  43b181:	je     43b2f1 <xmlStrEqual@plt+0x373b1>
  43b187:	lea    rbp,[rsp+0x20]
  43b18c:	lea    rdx,[rbp+0x8]
  43b190:	xor    eax,eax
  43b192:	mov    rdi,rdx
  43b195:	mov    ecx,0x12
  43b19a:	rep stos QWORD PTR es:[rdi],rax
  43b19d:	mov    rdi,rdx
  43b1a0:	lea    rax,[rip+0xfffffffffffffdd9]        # 43af80 <xmlStrEqual@plt+0x37040>
  43b1a7:	mov    QWORD PTR [rsp+0x20],rax
  43b1ac:	call   403c90 <sigemptyset@plt>
  43b1b1:	xor    edx,edx
  43b1b3:	mov    rsi,rbp
  43b1b6:	mov    edi,0xc
  43b1bb:	call   403ca0 <sigaction@plt>
  43b1c0:	cmp    eax,0xffffffff
  43b1c3:	je     43b375 <xmlStrEqual@plt+0x37435>
  43b1c9:	lea    rdx,[rip+0x39b90]        # 474d60 <xmlStrEqual@plt+0x70e20>
  43b1d0:	mov    rsi,rbp
  43b1d3:	mov    edi,0x1
  43b1d8:	mov    QWORD PTR [rsp+0x28],0xc
  43b1e1:	mov    QWORD PTR [rsp+0x20],rdx
  43b1e6:	call   403e50 <timer_create@plt>
  43b1eb:	cmp    eax,0xffffffff
  43b1ee:	je     43b339 <xmlStrEqual@plt+0x373f9>
  43b1f4:	mov    rdi,QWORD PTR [rip+0x39b65]        # 474d60 <xmlStrEqual@plt+0x70e20>
  43b1fb:	xor    ecx,ecx
  43b1fd:	xor    esi,esi
  43b1ff:	mov    rdx,rsp
  43b202:	mov    QWORD PTR [rsp+0x18],0x0
  43b20b:	mov    QWORD PTR [rsp+0x10],0x1
  43b214:	mov    QWORD PTR [rsp+0x8],0x0
  43b21d:	mov    QWORD PTR [rsp],0x1
  43b225:	call   403af0 <timer_settime@plt>
  43b22a:	cmp    eax,0xffffffff
  43b22d:	je     43b3a3 <xmlStrEqual@plt+0x37463>
  43b233:	mov    rbp,0x474d40
  43b23a:	mov    edi,0x10000
  43b23f:	mov    DWORD PTR [rbp+0x0],0x1000
  43b246:	call   435000 <xmlStrEqual@plt+0x310c0>
  43b24b:	mov    QWORD PTR [rbp+0x8],rax
  43b24f:	mov    DWORD PTR [rbp+0x4],0x0
  43b256:	mov    QWORD PTR [rbp+0x18],0x0
  43b25e:	lea    rdx,[rax+0x10000]
  43b265:	nop    DWORD PTR [rax]
  43b268:	mov    QWORD PTR [rax+0x8],rax
  43b26c:	mov    QWORD PTR [rax],rax
  43b26f:	add    rax,0x10
  43b273:	cmp    rax,rdx
  43b276:	jne    43b268 <xmlStrEqual@plt+0x37328>
  43b278:	mov    rax,0x4757a8
  43b27f:	mov    ecx,DWORD PTR [rbx]
  43b281:	mov    rdi,QWORD PTR [rax]
  43b284:	xor    edx,edx
  43b286:	lea    rsi,[rip+0xfffffffffffffd53]        # 43afe0 <xmlStrEqual@plt+0x370a0>
  43b28d:	call   4386e0 <xmlStrEqual@plt+0x347a0>
  43b292:	mov    eax,0x1
  43b297:	mov    rcx,QWORD PTR [rsp+0xb8]
  43b29f:	xor    rcx,QWORD PTR fs:0x28
  43b2a8:	jne    43b3ce <xmlStrEqual@plt+0x3748e>
  43b2ae:	add    rsp,0xc8
  43b2b5:	pop    rbx
  43b2b6:	pop    rbp
  43b2b7:	ret    
  43b2b8:	call   4037f0 <__errno_location@plt>
  43b2bd:	mov    edi,DWORD PTR [rax]
  43b2bf:	call   403910 <strerror@plt>
  43b2c4:	mov    rdx,rax
  43b2c7:	lea    rsi,[rip+0x172da]        # 4525a8 <xmlStrEqual@plt+0x4e668>
  43b2ce:	mov    edi,0x2
  43b2d3:	xor    eax,eax
  43b2d5:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  43b2da:	xor    eax,eax
  43b2dc:	lea    rsi,[rip+0x173ad]        # 452690 <xmlStrEqual@plt+0x4e750>
  43b2e3:	mov    edi,0x1
  43b2e8:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  43b2ed:	xor    eax,eax
  43b2ef:	jmp    43b297 <xmlStrEqual@plt+0x37357>
  43b2f1:	call   4037f0 <__errno_location@plt>
  43b2f6:	mov    edi,DWORD PTR [rax]
  43b2f8:	call   403910 <strerror@plt>
  43b2fd:	mov    rdx,rax
  43b300:	lea    rsi,[rip+0x17311]        # 452618 <xmlStrEqual@plt+0x4e6d8>
  43b307:	mov    edi,0x2
  43b30c:	xor    eax,eax
  43b30e:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  43b313:	jmp    43b2da <xmlStrEqual@plt+0x3739a>
  43b315:	call   4037f0 <__errno_location@plt>
  43b31a:	mov    edi,DWORD PTR [rax]
  43b31c:	call   403910 <strerror@plt>
  43b321:	mov    rdx,rax
  43b324:	lea    rsi,[rip+0x172b5]        # 4525e0 <xmlStrEqual@plt+0x4e6a0>
  43b32b:	mov    edi,0x2
  43b330:	xor    eax,eax
  43b332:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  43b337:	jmp    43b2da <xmlStrEqual@plt+0x3739a>
  43b339:	call   4037f0 <__errno_location@plt>
  43b33e:	mov    edi,DWORD PTR [rax]
  43b340:	call   403910 <strerror@plt>
  43b345:	mov    rdx,rax
  43b348:	lea    rsi,[rip+0x171e6]        # 452535 <xmlStrEqual@plt+0x4e5f5>
  43b34f:	mov    edi,0x4
  43b354:	xor    eax,eax
  43b356:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  43b35b:	xor    eax,eax
  43b35d:	lea    rsi,[rip+0x171e4]        # 452548 <xmlStrEqual@plt+0x4e608>
  43b364:	mov    edi,0x4
  43b369:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  43b36e:	xor    eax,eax
  43b370:	jmp    43b297 <xmlStrEqual@plt+0x37357>
  43b375:	call   4037f0 <__errno_location@plt>
  43b37a:	mov    edi,DWORD PTR [rax]
  43b37c:	call   403910 <strerror@plt>
  43b381:	mov    rdx,rax
  43b384:	lea    rsi,[rip+0x172cd]        # 452658 <xmlStrEqual@plt+0x4e718>
  43b38b:	xor    eax,eax
  43b38d:	mov    edi,0x2
  43b392:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  43b397:	xor    eax,eax
  43b399:	call   43f9f0 <xmlStrEqual@plt+0x3bab0>
  43b39e:	jmp    43b1c9 <xmlStrEqual@plt+0x37289>
  43b3a3:	call   4037f0 <__errno_location@plt>
  43b3a8:	mov    edi,DWORD PTR [rax]
  43b3aa:	call   403910 <strerror@plt>
  43b3af:	mov    rdx,QWORD PTR [rip+0x399aa]        # 474d60 <xmlStrEqual@plt+0x70e20>
  43b3b6:	mov    rcx,rax
  43b3b9:	lea    rsi,[rip+0x17300]        # 4526c0 <xmlStrEqual@plt+0x4e780>
  43b3c0:	mov    edi,0x4
  43b3c5:	xor    eax,eax
  43b3c7:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  43b3cc:	jmp    43b35b <xmlStrEqual@plt+0x3741b>
  43b3ce:	call   403c00 <__stack_chk_fail@plt>
  43b3d3:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  43b3de:	xchg   ax,ax
  43b3e0:	endbr64 
  43b3e4:	push   rbx
  43b3e5:	mov    ebx,edi
  43b3e7:	mov    edi,0x48
  43b3ec:	call   434fe0 <xmlStrEqual@plt+0x310a0>
  43b3f1:	mov    DWORD PTR [rax+0x40],ebx
  43b3f4:	mov    QWORD PTR [rax],0x0
  43b3fb:	mov    QWORD PTR [rax+0x8],0x0
  43b403:	pop    rbx
  43b404:	ret    
  43b405:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  43b410:	endbr64 
  43b414:	mov    QWORD PTR [rdi+0x18],rdx
  43b418:	mov    QWORD PTR [rdi+0x20],r8
  43b41c:	mov    QWORD PTR [rdi+0x28],rcx
  43b420:	mov    QWORD PTR [rdi+0x30],rsi
  43b424:	mov    QWORD PTR [rdi+0x38],r9
  43b428:	ret    
  43b429:	nop    DWORD PTR [rax+0x0]
  43b430:	endbr64 
  43b434:	mov    rax,QWORD PTR [rdi+0x30]
  43b438:	ret    
  43b439:	nop    DWORD PTR [rax+0x0]
  43b440:	endbr64 
  43b444:	mov    rax,QWORD PTR [rdi+0x28]
  43b448:	ret    
  43b449:	nop    DWORD PTR [rax+0x0]
  43b450:	endbr64 
  43b454:	mov    eax,DWORD PTR [rdi+0x40]
  43b457:	ret    
  43b458:	nop    DWORD PTR [rax+rax*1+0x0]
  43b460:	endbr64 
  43b464:	mov    rax,QWORD PTR [rdi+0x38]
  43b468:	ret    
  43b469:	nop    DWORD PTR [rax+0x0]
  43b470:	endbr64 
  43b474:	mov    rcx,0x474d40
  43b47b:	mov    rdx,QWORD PTR [rdi+0x8]
  43b47f:	mov    eax,esi
  43b481:	mov    r8d,DWORD PTR [rcx+0x18]
  43b485:	test   rdx,rdx
  43b488:	je     43b4d0 <xmlStrEqual@plt+0x37590>
  43b48a:	mov    rsi,QWORD PTR [rdi]
  43b48d:	mov    QWORD PTR [rdx],rsi
  43b490:	mov    QWORD PTR [rsi+0x8],rdx
  43b494:	mov    esi,DWORD PTR [rcx]
  43b496:	xor    edx,edx
  43b498:	mov    DWORD PTR [rdi+0x10],eax
  43b49b:	div    esi
  43b49d:	mov    DWORD PTR [rdi+0x14],eax
  43b4a0:	mov    eax,DWORD PTR [rcx+0x4]
  43b4a3:	add    eax,edx
  43b4a5:	xor    edx,edx
  43b4a7:	div    esi
  43b4a9:	shl    rdx,0x4
  43b4ad:	add    rdx,QWORD PTR [rcx+0x8]
  43b4b1:	mov    rax,QWORD PTR [rdx]
  43b4b4:	mov    QWORD PTR [rdi+0x8],rdx
  43b4b8:	mov    QWORD PTR [rdi],rax
  43b4bb:	mov    QWORD PTR [rax+0x8],rdi
  43b4bf:	mov    QWORD PTR [rdx],rdi
  43b4c2:	mov    DWORD PTR [rcx+0x18],r8d
  43b4c6:	ret    
  43b4c7:	nop    WORD PTR [rax+rax*1+0x0]
  43b4d0:	inc    r8d
  43b4d3:	jmp    43b494 <xmlStrEqual@plt+0x37554>
  43b4d5:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  43b4e0:	endbr64 
  43b4e4:	test   rdi,rdi
  43b4e7:	je     43b550 <xmlStrEqual@plt+0x37610>
  43b4e9:	push   rbx
  43b4ea:	mov    rax,QWORD PTR [rdi+0x8]
  43b4ee:	mov    rdx,QWORD PTR [rdi]
  43b4f1:	test   rax,rax
  43b4f4:	je     43b540 <xmlStrEqual@plt+0x37600>
  43b4f6:	mov    QWORD PTR [rax],rdx
  43b4f9:	test   rdx,rdx
  43b4fc:	je     43b502 <xmlStrEqual@plt+0x375c2>
  43b4fe:	mov    QWORD PTR [rdx+0x8],rax
  43b502:	mov    rax,0x474d40
  43b509:	mov    QWORD PTR [rdi+0x8],0x0
  43b511:	mov    QWORD PTR [rdi],0x0
  43b518:	dec    DWORD PTR [rax+0x18]
  43b51b:	mov    rax,QWORD PTR [rdi+0x20]
  43b51f:	mov    rbx,rdi
  43b522:	test   rax,rax
  43b525:	je     43b52d <xmlStrEqual@plt+0x375ed>
  43b527:	mov    rdi,QWORD PTR [rdi+0x28]
  43b52b:	call   rax
  43b52d:	mov    rdi,rbx
  43b530:	pop    rbx
  43b531:	jmp    4037b0 <free@plt>
  43b536:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43b540:	test   rdx,rdx
  43b543:	je     43b51b <xmlStrEqual@plt+0x375db>
  43b545:	jmp    43b4fe <xmlStrEqual@plt+0x375be>
  43b547:	nop    WORD PTR [rax+rax*1+0x0]
  43b550:	ret    
  43b551:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  43b55c:	nop    DWORD PTR [rax+0x0]
  43b560:	endbr64 
  43b564:	push   r13
  43b566:	push   r12
  43b568:	push   rbp
  43b569:	push   rbx
  43b56a:	sub    rsp,0xa8
  43b571:	mov    r13,0x474d40
  43b578:	mov    rax,QWORD PTR fs:0x28
  43b581:	mov    QWORD PTR [rsp+0x98],rax
  43b589:	xor    eax,eax
  43b58b:	cmp    QWORD PTR [r13+0x8],0x0
  43b590:	je     43b64f <xmlStrEqual@plt+0x3770f>
  43b596:	mov    rax,0x469e3c
  43b59d:	mov    eax,DWORD PTR [rax]
  43b59f:	test   eax,eax
  43b5a1:	jle    43b5b6 <xmlStrEqual@plt+0x37676>
  43b5a3:	lea    rsi,[rip+0x16fb7]        # 452561 <xmlStrEqual@plt+0x4e621>
  43b5aa:	mov    edi,0x5
  43b5af:	xor    eax,eax
  43b5b1:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  43b5b6:	mov    rbx,rsp
  43b5b9:	xor    eax,eax
  43b5bb:	mov    ecx,0x13
  43b5c0:	mov    rdi,rbx
  43b5c3:	rep stos QWORD PTR es:[rdi],rax
  43b5c6:	lea    rdi,[rbx+0x8]
  43b5ca:	call   403c90 <sigemptyset@plt>
  43b5cf:	xor    edx,edx
  43b5d1:	mov    rsi,rbx
  43b5d4:	mov    edi,0xc
  43b5d9:	call   403ca0 <sigaction@plt>
  43b5de:	cmp    eax,0xffffffff
  43b5e1:	je     43b670 <xmlStrEqual@plt+0x37730>
  43b5e7:	mov    edi,DWORD PTR [rip+0x3977b]        # 474d68 <xmlStrEqual@plt+0x70e28>
  43b5ed:	call   403f30 <close@plt>
  43b5f2:	mov    edi,DWORD PTR [rip+0x39774]        # 474d6c <xmlStrEqual@plt+0x70e2c>
  43b5f8:	call   403f30 <close@plt>
  43b5fd:	mov    rbp,QWORD PTR [r13+0x8]
  43b601:	lea    r12,[rbp+0x10000]
  43b608:	nop    DWORD PTR [rax+rax*1+0x0]
  43b610:	mov    rdi,QWORD PTR [rbp+0x8]
  43b614:	cmp    rdi,rbp
  43b617:	je     43b631 <xmlStrEqual@plt+0x376f1>
  43b619:	nop    DWORD PTR [rax+0x0]
  43b620:	mov    rbx,QWORD PTR [rdi+0x8]
  43b624:	call   43b4e0 <xmlStrEqual@plt+0x375a0>
  43b629:	mov    rdi,rbx
  43b62c:	cmp    rbx,rbp
  43b62f:	jne    43b620 <xmlStrEqual@plt+0x376e0>
  43b631:	add    rbp,0x10
  43b635:	cmp    r12,rbp
  43b638:	jne    43b610 <xmlStrEqual@plt+0x376d0>
  43b63a:	mov    rdi,QWORD PTR [r13+0x8]
  43b63e:	call   4037b0 <free@plt>
  43b643:	mov    rdi,QWORD PTR [rip+0x39716]        # 474d60 <xmlStrEqual@plt+0x70e20>
  43b64a:	call   403c70 <timer_delete@plt>
  43b64f:	mov    rax,QWORD PTR [rsp+0x98]
  43b657:	xor    rax,QWORD PTR fs:0x28
  43b660:	jne    43b697 <xmlStrEqual@plt+0x37757>
  43b662:	add    rsp,0xa8
  43b669:	pop    rbx
  43b66a:	pop    rbp
  43b66b:	pop    r12
  43b66d:	pop    r13
  43b66f:	ret    
  43b670:	call   4037f0 <__errno_location@plt>
  43b675:	mov    edi,DWORD PTR [rax]
  43b677:	call   403910 <strerror@plt>
  43b67c:	mov    rdx,rax
  43b67f:	lea    rsi,[rip+0x17072]        # 4526f8 <xmlStrEqual@plt+0x4e7b8>
  43b686:	mov    edi,0x2
  43b68b:	xor    eax,eax
  43b68d:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  43b692:	jmp    43b5e7 <xmlStrEqual@plt+0x376a7>
  43b697:	call   403c00 <__stack_chk_fail@plt>
  43b69c:	nop    DWORD PTR [rax+0x0]
  43b6a0:	endbr64 
  43b6a4:	push   rbx
  43b6a5:	movsxd rdi,edi
  43b6a8:	sub    rsp,0x20
  43b6ac:	mov    rax,QWORD PTR fs:0x28
  43b6b5:	mov    QWORD PTR [rsp+0x18],rax
  43b6ba:	xor    eax,eax
  43b6bc:	mov    rbx,rsp
  43b6bf:	mov    QWORD PTR [rsp],rdi
  43b6c3:	mov    QWORD PTR [rsp+0x8],0x0
  43b6cc:	jmp    43b6da <xmlStrEqual@plt+0x3779a>
  43b6ce:	xchg   ax,ax
  43b6d0:	call   4037f0 <__errno_location@plt>
  43b6d5:	cmp    DWORD PTR [rax],0x4
  43b6d8:	jne    43b6ea <xmlStrEqual@plt+0x377aa>
  43b6da:	mov    rsi,rbx
  43b6dd:	mov    rdi,rbx
  43b6e0:	call   4038e0 <nanosleep@plt>
  43b6e5:	cmp    eax,0xffffffff
  43b6e8:	je     43b6d0 <xmlStrEqual@plt+0x37790>
  43b6ea:	mov    rax,QWORD PTR [rsp+0x18]
  43b6ef:	xor    rax,QWORD PTR fs:0x28
  43b6f8:	jne    43b700 <xmlStrEqual@plt+0x377c0>
  43b6fa:	add    rsp,0x20
  43b6fe:	pop    rbx
  43b6ff:	ret    
  43b700:	call   403c00 <__stack_chk_fail@plt>
  43b705:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43b70f:	nop
  43b710:	endbr64 
  43b714:	push   r13
  43b716:	mov    r13,rcx
  43b719:	push   r12
  43b71b:	mov    r12,rdx
  43b71e:	push   rbp
  43b71f:	mov    rbp,rsi
  43b722:	push   rbx
  43b723:	sub    rsp,0x18
  43b727:	mov    QWORD PTR [rsp+0x8],r8
  43b72c:	call   43b3e0 <xmlStrEqual@plt+0x374a0>
  43b731:	mov    r8,QWORD PTR [rsp+0x8]
  43b736:	mov    rcx,r13
  43b739:	mov    rdx,r12
  43b73c:	mov    rsi,rbp
  43b73f:	mov    rdi,rax
  43b742:	xor    r9d,r9d
  43b745:	mov    rbx,rax
  43b748:	call   43b410 <xmlStrEqual@plt+0x374d0>
  43b74d:	add    rsp,0x18
  43b751:	mov    rax,rbx
  43b754:	pop    rbx
  43b755:	pop    rbp
  43b756:	pop    r12
  43b758:	pop    r13
  43b75a:	ret    
  43b75b:	nop    DWORD PTR [rax+rax*1+0x0]
  43b760:	endbr64 
  43b764:	push   r13
  43b766:	mov    r13,rcx
  43b769:	push   r12
  43b76b:	mov    r12,rdx
  43b76e:	push   rbp
  43b76f:	mov    rbp,rsi
  43b772:	push   rbx
  43b773:	sub    rsp,0x18
  43b777:	mov    QWORD PTR [rsp+0x8],r8
  43b77c:	call   43b3e0 <xmlStrEqual@plt+0x374a0>
  43b781:	mov    rdi,rax
  43b784:	mov    rbx,rax
  43b787:	call   435cb0 <xmlStrEqual@plt+0x31d70>
  43b78c:	mov    r8,QWORD PTR [rsp+0x8]
  43b791:	mov    r9,rax
  43b794:	mov    rcx,r13
  43b797:	mov    rdx,r12
  43b79a:	mov    rsi,rbp
  43b79d:	mov    rdi,rbx
  43b7a0:	call   43b410 <xmlStrEqual@plt+0x374d0>
  43b7a5:	add    rsp,0x18
  43b7a9:	mov    rax,rbx
  43b7ac:	pop    rbx
  43b7ad:	pop    rbp
  43b7ae:	pop    r12
  43b7b0:	pop    r13
  43b7b2:	ret    
  43b7b3:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  43b7be:	xchg   ax,ax
  43b7c0:	endbr64 
  43b7c4:	push   r12
  43b7c6:	mov    r12,rdx
  43b7c9:	push   rbp
  43b7ca:	mov    rbp,rsi
  43b7cd:	push   rbx
  43b7ce:	mov    rbx,rdi
  43b7d1:	sub    rsp,0x10
  43b7d5:	call   42ed70 <xmlStrEqual@plt+0x2ae30>
  43b7da:	test   rax,rax
  43b7dd:	je     43b7f8 <xmlStrEqual@plt+0x378b8>
  43b7df:	add    rsp,0x10
  43b7e3:	pop    rbx
  43b7e4:	pop    rbp
  43b7e5:	mov    rdi,r12
  43b7e8:	mov    rsi,rax
  43b7eb:	pop    r12
  43b7ed:	jmp    42dcf0 <xmlStrEqual@plt+0x29db0>
  43b7f2:	nop    WORD PTR [rax+rax*1+0x0]
  43b7f8:	call   42dc90 <xmlStrEqual@plt+0x29d50>
  43b7fd:	test   rax,rax
  43b800:	je     43b820 <xmlStrEqual@plt+0x378e0>
  43b802:	mov    rdx,rax
  43b805:	mov    rsi,rbp
  43b808:	mov    rdi,rbx
  43b80b:	mov    QWORD PTR [rsp+0x8],rax
  43b810:	call   42e5a0 <xmlStrEqual@plt+0x2a660>
  43b815:	mov    rax,QWORD PTR [rsp+0x8]
  43b81a:	jmp    43b7df <xmlStrEqual@plt+0x3789f>
  43b81c:	nop    DWORD PTR [rax+0x0]
  43b820:	add    rsp,0x10
  43b824:	pop    rbx
  43b825:	pop    rbp
  43b826:	xor    eax,eax
  43b828:	pop    r12
  43b82a:	ret    
  43b82b:	nop    DWORD PTR [rax+rax*1+0x0]
  43b830:	endbr64 
  43b834:	jmp    42ed70 <xmlStrEqual@plt+0x2ae30>
  43b839:	nop    DWORD PTR [rax+0x0]
  43b840:	endbr64 
  43b844:	push   r14
  43b846:	push   r13
  43b848:	mov    r13d,edx
  43b84b:	push   r12
  43b84d:	push   rbp
  43b84e:	mov    rbp,rsi
  43b851:	push   rbx
  43b852:	mov    rbx,rdi
  43b855:	call   42dc90 <xmlStrEqual@plt+0x29d50>
  43b85a:	mov    rsi,rbp
  43b85d:	mov    rdi,rbx
  43b860:	mov    r14,rax
  43b863:	call   42ed70 <xmlStrEqual@plt+0x2ae30>
  43b868:	test   rax,rax
  43b86b:	je     43b8b0 <xmlStrEqual@plt+0x37970>
  43b86d:	mov    r12,rax
  43b870:	mov    rax,QWORD PTR [rax+0x8]
  43b874:	cmp    r12,rax
  43b877:	jne    43b888 <xmlStrEqual@plt+0x37948>
  43b879:	jmp    43b8b0 <xmlStrEqual@plt+0x37970>
  43b87b:	nop    DWORD PTR [rax+rax*1+0x0]
  43b880:	mov    rax,rbp
  43b883:	cmp    r12,rbp
  43b886:	je     43b8b0 <xmlStrEqual@plt+0x37970>
  43b888:	mov    rbx,QWORD PTR [rax+0x10]
  43b88c:	mov    rbp,QWORD PTR [rax+0x8]
  43b890:	mov    rdi,rbx
  43b893:	call   43b450 <xmlStrEqual@plt+0x37510>
  43b898:	cmp    eax,r13d
  43b89b:	jne    43b880 <xmlStrEqual@plt+0x37940>
  43b89d:	mov    rsi,r14
  43b8a0:	mov    rdi,rbx
  43b8a3:	call   42dcf0 <xmlStrEqual@plt+0x29db0>
  43b8a8:	mov    rax,rbp
  43b8ab:	cmp    r12,rbp
  43b8ae:	jne    43b888 <xmlStrEqual@plt+0x37948>
  43b8b0:	pop    rbx
  43b8b1:	pop    rbp
  43b8b2:	pop    r12
  43b8b4:	pop    r13
  43b8b6:	mov    rax,r14
  43b8b9:	pop    r14
  43b8bb:	ret    
  43b8bc:	nop    DWORD PTR [rax+0x0]
  43b8c0:	endbr64 
  43b8c4:	jmp    42eca0 <xmlStrEqual@plt+0x2ad60>
  43b8c9:	nop    DWORD PTR [rax+0x0]
  43b8d0:	endbr64 
  43b8d4:	push   r14
  43b8d6:	mov    rax,rdi
  43b8d9:	mov    rdi,rsi
  43b8dc:	push   r13
  43b8de:	mov    rsi,rax
  43b8e1:	mov    r14,rdx
  43b8e4:	push   r12
  43b8e6:	push   rbp
  43b8e7:	push   rbx
  43b8e8:	call   43b8c0 <xmlStrEqual@plt+0x37980>
  43b8ed:	test   rax,rax
  43b8f0:	je     43b950 <xmlStrEqual@plt+0x37a10>
  43b8f2:	mov    rbx,QWORD PTR [rax+0x8]
  43b8f6:	mov    r13,rax
  43b8f9:	cmp    rax,rbx
  43b8fc:	je     43b938 <xmlStrEqual@plt+0x379f8>
  43b8fe:	xchg   ax,ax
  43b900:	mov    r12,QWORD PTR [rbx+0x10]
  43b904:	mov    rdi,r12
  43b907:	call   43b460 <xmlStrEqual@plt+0x37520>
  43b90c:	mov    rbp,rax
  43b90f:	test   rax,rax
  43b912:	je     43b927 <xmlStrEqual@plt+0x379e7>
  43b914:	mov    rdi,r14
  43b917:	mov    rsi,rax
  43b91a:	call   435af0 <xmlStrEqual@plt+0x31bb0>
  43b91f:	mov    rdi,rbp
  43b922:	call   435d00 <xmlStrEqual@plt+0x31dc0>
  43b927:	mov    rdi,r12
  43b92a:	call   43b4e0 <xmlStrEqual@plt+0x375a0>
  43b92f:	mov    rbx,QWORD PTR [rbx+0x8]
  43b933:	cmp    r13,rbx
  43b936:	jne    43b900 <xmlStrEqual@plt+0x379c0>
  43b938:	mov    rdi,r13
  43b93b:	call   42e2b0 <xmlStrEqual@plt+0x2a370>
  43b940:	pop    rbx
  43b941:	pop    rbp
  43b942:	pop    r12
  43b944:	pop    r13
  43b946:	mov    eax,0x1
  43b94b:	pop    r14
  43b94d:	ret    
  43b94e:	xchg   ax,ax
  43b950:	pop    rbx
  43b951:	pop    rbp
  43b952:	pop    r12
  43b954:	pop    r13
  43b956:	xor    eax,eax
  43b958:	pop    r14
  43b95a:	ret    
  43b95b:	nop    DWORD PTR [rax+rax*1+0x0]
  43b960:	endbr64 
  43b964:	push   r15
  43b966:	push   r14
  43b968:	mov    r14d,edx
  43b96b:	push   r13
  43b96d:	push   r12
  43b96f:	push   rbp
  43b970:	mov    rbp,rsi
  43b973:	push   rbx
  43b974:	mov    rbx,rdi
  43b977:	sub    rsp,0x8
  43b97b:	call   42dc90 <xmlStrEqual@plt+0x29d50>
  43b980:	mov    rsi,rbp
  43b983:	mov    rdi,rbx
  43b986:	mov    r15,rax
  43b989:	call   42ed70 <xmlStrEqual@plt+0x2ae30>
  43b98e:	test   rax,rax
  43b991:	je     43b9e3 <xmlStrEqual@plt+0x37aa3>
  43b993:	mov    rbx,QWORD PTR [rax+0x8]
  43b997:	mov    r13,rax
  43b99a:	cmp    rax,rbx
  43b99d:	jne    43b9b0 <xmlStrEqual@plt+0x37a70>
  43b99f:	jmp    43b9e3 <xmlStrEqual@plt+0x37aa3>
  43b9a1:	nop    DWORD PTR [rax+0x0]
  43b9a8:	mov    rbx,r12
  43b9ab:	cmp    r13,r12
  43b9ae:	je     43b9e3 <xmlStrEqual@plt+0x37aa3>
  43b9b0:	mov    rbp,QWORD PTR [rbx+0x10]
  43b9b4:	mov    r12,QWORD PTR [rbx+0x8]
  43b9b8:	mov    rdi,rbp
  43b9bb:	call   43b450 <xmlStrEqual@plt+0x37510>
  43b9c0:	cmp    eax,r14d
  43b9c3:	jne    43b9a8 <xmlStrEqual@plt+0x37a68>
  43b9c5:	mov    rsi,r15
  43b9c8:	mov    rdi,rbp
  43b9cb:	call   42dcf0 <xmlStrEqual@plt+0x29db0>
  43b9d0:	mov    rdi,rbx
  43b9d3:	mov    rsi,r13
  43b9d6:	call   42e110 <xmlStrEqual@plt+0x2a1d0>
  43b9db:	mov    rbx,r12
  43b9de:	cmp    r13,r12
  43b9e1:	jne    43b9b0 <xmlStrEqual@plt+0x37a70>
  43b9e3:	add    rsp,0x8
  43b9e7:	pop    rbx
  43b9e8:	pop    rbp
  43b9e9:	pop    r12
  43b9eb:	pop    r13
  43b9ed:	pop    r14
  43b9ef:	mov    rax,r15
  43b9f2:	pop    r15
  43b9f4:	ret    
  43b9f5:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  43ba00:	endbr64 
  43ba04:	push   r14
  43ba06:	mov    rax,rdi
  43ba09:	mov    rdi,rdx
  43ba0c:	push   r13
  43ba0e:	mov    edx,esi
  43ba10:	mov    rsi,rax
  43ba13:	push   r12
  43ba15:	mov    r14,rcx
  43ba18:	push   rbp
  43ba19:	push   rbx
  43ba1a:	call   43b960 <xmlStrEqual@plt+0x37a20>
  43ba1f:	mov    rbx,QWORD PTR [rax+0x8]
  43ba23:	mov    r13,rax
  43ba26:	cmp    rax,rbx
  43ba29:	je     43ba68 <xmlStrEqual@plt+0x37b28>
  43ba2b:	nop    DWORD PTR [rax+rax*1+0x0]
  43ba30:	mov    r12,QWORD PTR [rbx+0x10]
  43ba34:	mov    rdi,r12
  43ba37:	call   43b460 <xmlStrEqual@plt+0x37520>
  43ba3c:	mov    rbp,rax
  43ba3f:	test   rax,rax
  43ba42:	je     43ba57 <xmlStrEqual@plt+0x37b17>
  43ba44:	mov    rdi,r14
  43ba47:	mov    rsi,rax
  43ba4a:	call   435af0 <xmlStrEqual@plt+0x31bb0>
  43ba4f:	mov    rdi,rbp
  43ba52:	call   435d00 <xmlStrEqual@plt+0x31dc0>
  43ba57:	mov    rdi,r12
  43ba5a:	call   43b4e0 <xmlStrEqual@plt+0x375a0>
  43ba5f:	mov    rbx,QWORD PTR [rbx+0x8]
  43ba63:	cmp    r13,rbx
  43ba66:	jne    43ba30 <xmlStrEqual@plt+0x37af0>
  43ba68:	mov    rdi,r13
  43ba6b:	call   42e2b0 <xmlStrEqual@plt+0x2a370>
  43ba70:	pop    rbx
  43ba71:	pop    rbp
  43ba72:	pop    r12
  43ba74:	pop    r13
  43ba76:	mov    eax,0x1
  43ba7b:	pop    r14
  43ba7d:	ret    
  43ba7e:	xchg   ax,ax
  43ba80:	endbr64 
  43ba84:	push   rbx
  43ba85:	mov    rbx,rdx
  43ba88:	call   42ed70 <xmlStrEqual@plt+0x2ae30>
  43ba8d:	test   rax,rax
  43ba90:	je     43baa4 <xmlStrEqual@plt+0x37b64>
  43ba92:	mov    rsi,rax
  43ba95:	mov    rdi,rbx
  43ba98:	call   42e170 <xmlStrEqual@plt+0x2a230>
  43ba9d:	mov    eax,0x1
  43baa2:	pop    rbx
  43baa3:	ret    
  43baa4:	mov    eax,0xfffffffa
  43baa9:	pop    rbx
  43baaa:	ret    
  43baab:	nop    DWORD PTR [rax+rax*1+0x0]
  43bab0:	endbr64 
  43bab4:	push   r12
  43bab6:	mov    rax,rdi
  43bab9:	mov    rdi,rdx
  43babc:	push   rbp
  43babd:	mov    rdx,rsi
  43bac0:	mov    r12,rcx
  43bac3:	push   rbx
  43bac4:	mov    rbx,rsi
  43bac7:	mov    rsi,rax
  43baca:	call   43ba80 <xmlStrEqual@plt+0x37b40>
  43bacf:	mov    rdi,rbx
  43bad2:	call   43b460 <xmlStrEqual@plt+0x37520>
  43bad7:	test   rax,rax
  43bada:	je     43baf2 <xmlStrEqual@plt+0x37bb2>
  43badc:	mov    rbp,rax
  43badf:	mov    rdi,r12
  43bae2:	mov    rsi,rax
  43bae5:	call   435af0 <xmlStrEqual@plt+0x31bb0>
  43baea:	mov    rdi,rbp
  43baed:	call   435d00 <xmlStrEqual@plt+0x31dc0>
  43baf2:	mov    rdi,rbx
  43baf5:	call   43b4e0 <xmlStrEqual@plt+0x375a0>
  43bafa:	pop    rbx
  43bafb:	pop    rbp
  43bafc:	mov    eax,0x1
  43bb01:	pop    r12
  43bb03:	ret    
  43bb04:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43bb0e:	xchg   ax,ax
  43bb10:	endbr64 
  43bb14:	push   r13
  43bb16:	push   r12
  43bb18:	push   rbp
  43bb19:	push   rbx
  43bb1a:	sub    rsp,0x8
  43bb1e:	movsx  rbx,BYTE PTR [rdi]
  43bb22:	test   bl,bl
  43bb24:	je     43bb4d <xmlStrEqual@plt+0x37c0d>
  43bb26:	mov    ecx,edx
  43bb28:	add    ecx,ecx
  43bb2a:	js     43bb8b <xmlStrEqual@plt+0x37c4b>
  43bb2c:	movsxd rcx,ecx
  43bb2f:	lea    rax,[rdi+0x1]
  43bb33:	lea    rcx,[rdi+rcx*1+0x2]
  43bb38:	jmp    43bb48 <xmlStrEqual@plt+0x37c08>
  43bb3a:	nop    WORD PTR [rax+rax*1+0x0]
  43bb40:	inc    rax
  43bb43:	cmp    rcx,rax
  43bb46:	je     43bb8b <xmlStrEqual@plt+0x37c4b>
  43bb48:	cmp    BYTE PTR [rax],0x0
  43bb4b:	jne    43bb40 <xmlStrEqual@plt+0x37c00>
  43bb4d:	test   edx,edx
  43bb4f:	jle    43bbf0 <xmlStrEqual@plt+0x37cb0>
  43bb55:	mov    r13d,edx
  43bb58:	mov    r12,rsi
  43bb5b:	mov    rbp,rdi
  43bb5e:	call   403810 <__ctype_toupper_loc@plt>
  43bb63:	lea    edi,[r13-0x1]
  43bb67:	xor    ecx,ecx
  43bb69:	lea    rsi,[rip+0x16c10]        # 452780 <xmlStrEqual@plt+0x4e840>
  43bb70:	mov    r8,QWORD PTR [rax]
  43bb73:	mov    edx,DWORD PTR [r8+rbx*4]
  43bb77:	sub    edx,0x30
  43bb7a:	cmp    dl,0x16
  43bb7d:	jbe    43bba0 <xmlStrEqual@plt+0x37c60>
  43bb7f:	mov    rax,0x469e3c
  43bb86:	cmp    DWORD PTR [rax],0x1
  43bb89:	jg     43bc00 <xmlStrEqual@plt+0x37cc0>
  43bb8b:	add    rsp,0x8
  43bb8f:	pop    rbx
  43bb90:	pop    rbp
  43bb91:	pop    r12
  43bb93:	xor    eax,eax
  43bb95:	pop    r13
  43bb97:	ret    
  43bb98:	nop    DWORD PTR [rax+rax*1+0x0]
  43bba0:	movsx  r9,BYTE PTR [rbp+rcx*2+0x1]
  43bba6:	movzx  edx,dl
  43bba9:	mov    r8d,DWORD PTR [r8+r9*4]
  43bbad:	mov    edx,DWORD PTR [rsi+rdx*4]
  43bbb0:	sub    r8d,0x30
  43bbb4:	cmp    r8b,0x16
  43bbb8:	ja     43bb7f <xmlStrEqual@plt+0x37c3f>
  43bbba:	movzx  r8d,r8b
  43bbbe:	mov    r8d,DWORD PTR [rsi+r8*4]
  43bbc2:	cmp    edx,0xffffffff
  43bbc5:	je     43bb7f <xmlStrEqual@plt+0x37c3f>
  43bbc7:	cmp    r8d,0xffffffff
  43bbcb:	je     43bb7f <xmlStrEqual@plt+0x37c3f>
  43bbcd:	shl    edx,0x4
  43bbd0:	add    edx,r8d
  43bbd3:	mov    BYTE PTR [r12+rcx*1],dl
  43bbd7:	lea    rdx,[rcx+0x1]
  43bbdb:	cmp    rcx,rdi
  43bbde:	je     43bbf0 <xmlStrEqual@plt+0x37cb0>
  43bbe0:	movsx  rbx,BYTE PTR [rbp+rdx*2+0x0]
  43bbe6:	mov    rcx,rdx
  43bbe9:	jmp    43bb70 <xmlStrEqual@plt+0x37c30>
  43bbeb:	nop    DWORD PTR [rax+rax*1+0x0]
  43bbf0:	add    rsp,0x8
  43bbf4:	pop    rbx
  43bbf5:	pop    rbp
  43bbf6:	pop    r12
  43bbf8:	mov    eax,0x1
  43bbfd:	pop    r13
  43bbff:	ret    
  43bc00:	xor    eax,eax
  43bc02:	lea    rsi,[rip+0x16b27]        # 452730 <xmlStrEqual@plt+0x4e7f0>
  43bc09:	mov    edi,0x6
  43bc0e:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  43bc13:	add    rsp,0x8
  43bc17:	pop    rbx
  43bc18:	pop    rbp
  43bc19:	pop    r12
  43bc1b:	xor    eax,eax
  43bc1d:	pop    r13
  43bc1f:	ret    
  43bc20:	endbr64 
  43bc24:	push   rbp
  43bc25:	vpxor  xmm0,xmm0,xmm0
  43bc29:	lea    rbp,[rdi+0x10]
  43bc2d:	push   rbx
  43bc2e:	mov    rbx,rdi
  43bc31:	sub    rsp,0x8
  43bc35:	mov    BYTE PTR [rip+0x39164],0x0        # 474da0 <xmlStrEqual@plt+0x70e60>
  43bc3c:	vmovaps XMMWORD PTR [rip+0x3913c],xmm0        # 474d80 <xmlStrEqual@plt+0x70e40>
  43bc44:	vmovaps XMMWORD PTR [rip+0x39144],xmm0        # 474d90 <xmlStrEqual@plt+0x70e50>
  43bc4c:	nop    DWORD PTR [rax+0x0]
  43bc50:	lea    rdi,[rip+0x39129]        # 474d80 <xmlStrEqual@plt+0x70e40>
  43bc57:	mov    edx,DWORD PTR [rdi]
  43bc59:	add    rdi,0x4
  43bc5d:	lea    eax,[rdx-0x1010101]
  43bc63:	andn   eax,edx,eax
  43bc68:	and    eax,0x80808080
  43bc6d:	je     43bc57 <xmlStrEqual@plt+0x37d17>
  43bc6f:	mov    edx,eax
  43bc71:	shr    edx,0x10
  43bc74:	test   eax,0x8080
  43bc79:	cmove  eax,edx
  43bc7c:	lea    rdx,[rdi+0x2]
  43bc80:	cmove  rdi,rdx
  43bc84:	mov    ecx,eax
  43bc86:	add    cl,al
  43bc88:	movzx  r8d,BYTE PTR [rbx]
  43bc8c:	sbb    rdi,0x3
  43bc90:	lea    rcx,[rip+0x16ad1]        # 452768 <xmlStrEqual@plt+0x4e828>
  43bc97:	mov    rdx,0xffffffffffffffff
  43bc9e:	mov    esi,0x1
  43bca3:	xor    eax,eax
  43bca5:	inc    rbx
  43bca8:	call   403a30 <__sprintf_chk@plt>
  43bcad:	cmp    rbx,rbp
  43bcb0:	jne    43bc50 <xmlStrEqual@plt+0x37d10>
  43bcb2:	add    rsp,0x8
  43bcb6:	pop    rbx
  43bcb7:	lea    rax,[rip+0x390c2]        # 474d80 <xmlStrEqual@plt+0x70e40>
  43bcbe:	pop    rbp
  43bcbf:	ret    
  43bcc0:	endbr64 
  43bcc4:	push   rbx
  43bcc5:	mov    ebx,esi
  43bcc7:	call   4255a0 <xmlStrEqual@plt+0x21660>
  43bccc:	mov    rdi,rax
  43bccf:	call   425890 <xmlStrEqual@plt+0x21950>
  43bcd4:	mov    esi,ebx
  43bcd6:	and    esi,0x1
  43bcd9:	cmp    ax,0x2
  43bcdd:	je     43bcf0 <xmlStrEqual@plt+0x37db0>
  43bcdf:	shr    ebx,1
  43bce1:	and    ebx,0x1
  43bce4:	mov    esi,0x0
  43bce9:	cmp    ax,0xa
  43bced:	cmove  esi,ebx
  43bcf0:	mov    eax,esi
  43bcf2:	pop    rbx
  43bcf3:	ret    
  43bcf4:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  43bcff:	nop
  43bd00:	endbr64 
  43bd04:	push   r13
  43bd06:	mov    r13d,esi
  43bd09:	push   r12
  43bd0b:	mov    r12,rdi
  43bd0e:	push   rbp
  43bd0f:	push   rbx
  43bd10:	sub    rsp,0x8
  43bd14:	mov    rbx,QWORD PTR [rdi+0x8]
  43bd18:	cmp    rdi,rbx
  43bd1b:	jne    43bd28 <xmlStrEqual@plt+0x37de8>
  43bd1d:	jmp    43bd4f <xmlStrEqual@plt+0x37e0f>
  43bd1f:	nop
  43bd20:	mov    rbx,rbp
  43bd23:	cmp    r12,rbp
  43bd26:	je     43bd4f <xmlStrEqual@plt+0x37e0f>
  43bd28:	mov    rdi,QWORD PTR [rbx+0x10]
  43bd2c:	mov    esi,r13d
  43bd2f:	mov    rbp,QWORD PTR [rbx+0x8]
  43bd33:	call   43bcc0 <xmlStrEqual@plt+0x37d80>
  43bd38:	test   al,al
  43bd3a:	jne    43bd20 <xmlStrEqual@plt+0x37de0>
  43bd3c:	mov    rdi,rbx
  43bd3f:	mov    rsi,r12
  43bd42:	call   42e110 <xmlStrEqual@plt+0x2a1d0>
  43bd47:	mov    rbx,rbp
  43bd4a:	cmp    r12,rbp
  43bd4d:	jne    43bd28 <xmlStrEqual@plt+0x37de8>
  43bd4f:	add    rsp,0x8
  43bd53:	pop    rbx
  43bd54:	pop    rbp
  43bd55:	pop    r12
  43bd57:	pop    r13
  43bd59:	ret    
  43bd5a:	nop    WORD PTR [rax+rax*1+0x0]
  43bd60:	endbr64 
  43bd64:	movzx  eax,BYTE PTR [rdi]
  43bd67:	test   al,al
  43bd69:	je     43bda0 <xmlStrEqual@plt+0x37e60>
  43bd6b:	inc    rdi
  43bd6e:	xor    r8d,r8d
  43bd71:	xor    ecx,ecx
  43bd73:	nop    DWORD PTR [rax+rax*1+0x0]
  43bd78:	lea    rdx,[rsi+rcx*1]
  43bd7c:	cmp    al,0x20
  43bd7e:	je     43bd8c <xmlStrEqual@plt+0x37e4c>
  43bd80:	inc    r8d
  43bd83:	movsxd rcx,r8d
  43bd86:	mov    BYTE PTR [rdx],al
  43bd88:	lea    rdx,[rsi+rcx*1]
  43bd8c:	inc    rdi
  43bd8f:	movzx  eax,BYTE PTR [rdi-0x1]
  43bd93:	test   al,al
  43bd95:	jne    43bd78 <xmlStrEqual@plt+0x37e38>
  43bd97:	mov    BYTE PTR [rdx],0x0
  43bd9a:	ret    
  43bd9b:	nop    DWORD PTR [rax+rax*1+0x0]
  43bda0:	mov    rdx,rsi
  43bda3:	mov    BYTE PTR [rdx],0x0
  43bda6:	ret    
  43bda7:	nop    WORD PTR [rax+rax*1+0x0]
  43bdb0:	endbr64 
  43bdb4:	movzx  eax,BYTE PTR [rdi]
  43bdb7:	test   al,al
  43bdb9:	je     43be20 <xmlStrEqual@plt+0x37ee0>
  43bdbb:	inc    rdi
  43bdbe:	xor    r9d,r9d
  43bdc1:	xor    r8d,r8d
  43bdc4:	xor    ecx,ecx
  43bdc6:	jmp    43bdea <xmlStrEqual@plt+0x37eaa>
  43bdc8:	nop    DWORD PTR [rax+rax*1+0x0]
  43bdd0:	inc    r8d
  43bdd3:	movsxd rcx,r8d
  43bdd6:	mov    BYTE PTR [rdx],al
  43bdd8:	xor    r9d,r9d
  43bddb:	lea    rdx,[rsi+rcx*1]
  43bddf:	inc    rdi
  43bde2:	movzx  eax,BYTE PTR [rdi-0x1]
  43bde6:	test   al,al
  43bde8:	je     43be15 <xmlStrEqual@plt+0x37ed5>
  43bdea:	lea    rdx,[rsi+rcx*1]
  43bdee:	cmp    al,0x20
  43bdf0:	jne    43bdd0 <xmlStrEqual@plt+0x37e90>
  43bdf2:	test   r9b,r9b
  43bdf5:	jne    43bddf <xmlStrEqual@plt+0x37e9f>
  43bdf7:	mov    BYTE PTR [rdx],0x20
  43bdfa:	inc    rdi
  43bdfd:	inc    r8d
  43be00:	movzx  eax,BYTE PTR [rdi-0x1]
  43be04:	movsxd rcx,r8d
  43be07:	lea    rdx,[rsi+rcx*1]
  43be0b:	mov    r9d,0x1
  43be11:	test   al,al
  43be13:	jne    43bdea <xmlStrEqual@plt+0x37eaa>
  43be15:	mov    BYTE PTR [rdx],0x0
  43be18:	ret    
  43be19:	nop    DWORD PTR [rax+0x0]
  43be20:	mov    rdx,rsi
  43be23:	mov    BYTE PTR [rdx],0x0
  43be26:	ret    
  43be27:	nop    WORD PTR [rax+rax*1+0x0]
  43be30:	endbr64 
  43be34:	push   r12
  43be36:	push   rbp
  43be37:	mov    rbp,rdi
  43be3a:	push   rbx
  43be3b:	call   403970 <strlen@plt>
  43be40:	lea    edi,[rax+0x1]
  43be43:	movsxd rdi,edi
  43be46:	mov    r12,rax
  43be49:	call   435000 <xmlStrEqual@plt+0x310c0>
  43be4e:	mov    rbx,rax
  43be51:	test   r12d,r12d
  43be54:	jle    43bea0 <xmlStrEqual@plt+0x37f60>
  43be56:	call   403830 <__ctype_tolower_loc@plt>
  43be5b:	lea    edi,[r12-0x1]
  43be60:	xor    edx,edx
  43be62:	jmp    43be6b <xmlStrEqual@plt+0x37f2b>
  43be64:	nop    DWORD PTR [rax+0x0]
  43be68:	mov    rdx,rcx
  43be6b:	movsx  rsi,BYTE PTR [rbp+rdx*1+0x0]
  43be71:	mov    rcx,QWORD PTR [rax]
  43be74:	mov    ecx,DWORD PTR [rcx+rsi*4]
  43be77:	mov    BYTE PTR [rbx+rdx*1],cl
  43be7a:	lea    rcx,[rdx+0x1]
  43be7e:	cmp    rdi,rdx
  43be81:	jne    43be68 <xmlStrEqual@plt+0x37f28>
  43be83:	movsxd r12,r12d
  43be86:	add    r12,rbx
  43be89:	mov    BYTE PTR [r12],0x0
  43be8e:	mov    rax,rbx
  43be91:	pop    rbx
  43be92:	pop    rbp
  43be93:	pop    r12
  43be95:	ret    
  43be96:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43bea0:	mov    r12,rax
  43bea3:	mov    BYTE PTR [r12],0x0
  43bea8:	mov    rax,rbx
  43beab:	pop    rbx
  43beac:	pop    rbp
  43bead:	pop    r12
  43beaf:	ret    
  43beb0:	endbr64 
  43beb4:	push   r12
  43beb6:	mov    r12d,0x1
  43bebc:	push   rbp
  43bebd:	push   rbx
  43bebe:	sub    rsp,0x20
  43bec2:	mov    rax,QWORD PTR fs:0x28
  43becb:	mov    QWORD PTR [rsp+0x18],rax
  43bed0:	xor    eax,eax
  43bed2:	lea    rbx,[rsp+0xe]
  43bed7:	call   43be30 <xmlStrEqual@plt+0x37ef0>
  43bedc:	mov    rdi,rax
  43bedf:	mov    rsi,rbx
  43bee2:	mov    rbp,rax
  43bee5:	call   43bd60 <xmlStrEqual@plt+0x37e20>
  43beea:	mov    ecx,0x3
  43beef:	lea    rdi,[rip+0x19653]        # 455549 <xmlStrEqual@plt+0x51609>
  43bef6:	mov    rsi,rbx
  43bef9:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  43befb:	seta   dl
  43befe:	sbb    dl,0x0
  43bf01:	test   dl,dl
  43bf03:	je     43bf1f <xmlStrEqual@plt+0x37fdf>
  43bf05:	mov    ecx,0x5
  43bf0a:	lea    rdi,[rip+0xc739]        # 44864a <xmlStrEqual@plt+0x4470a>
  43bf11:	mov    rsi,rbx
  43bf14:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  43bf16:	seta   al
  43bf19:	sbb    al,0x0
  43bf1b:	test   al,al
  43bf1d:	jne    43bf48 <xmlStrEqual@plt+0x38008>
  43bf1f:	mov    rdi,rbp
  43bf22:	call   4037b0 <free@plt>
  43bf27:	mov    rcx,QWORD PTR [rsp+0x18]
  43bf2c:	xor    rcx,QWORD PTR fs:0x28
  43bf35:	mov    eax,r12d
  43bf38:	jne    43bf86 <xmlStrEqual@plt+0x38046>
  43bf3a:	add    rsp,0x20
  43bf3e:	pop    rbx
  43bf3f:	pop    rbp
  43bf40:	pop    r12
  43bf42:	ret    
  43bf43:	nop    DWORD PTR [rax+rax*1+0x0]
  43bf48:	mov    ecx,0x4
  43bf4d:	lea    rdi,[rip+0xfc5c]        # 44bbb0 <xmlStrEqual@plt+0x47c70>
  43bf54:	mov    rsi,rbx
  43bf57:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  43bf59:	seta   al
  43bf5c:	sbb    al,0x0
  43bf5e:	xor    r12d,r12d
  43bf61:	test   al,al
  43bf63:	je     43bf1f <xmlStrEqual@plt+0x37fdf>
  43bf65:	mov    ecx,0x6
  43bf6a:	lea    rdi,[rip+0xc6de]        # 44864f <xmlStrEqual@plt+0x4470f>
  43bf71:	mov    rsi,rbx
  43bf74:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  43bf76:	seta   al
  43bf79:	sbb    al,0x0
  43bf7b:	test   al,al
  43bf7d:	setne  r12b
  43bf81:	neg    r12d
  43bf84:	jmp    43bf1f <xmlStrEqual@plt+0x37fdf>
  43bf86:	call   403c00 <__stack_chk_fail@plt>
  43bf8b:	nop    DWORD PTR [rax+rax*1+0x0]
  43bf90:	endbr64 
  43bf94:	push   rbp
  43bf95:	push   rbx
  43bf96:	sub    rsp,0x8
  43bf9a:	call   425060 <xmlStrEqual@plt+0x21120>
  43bf9f:	mov    rdi,rax
  43bfa2:	mov    rbp,rax
  43bfa5:	call   425670 <xmlStrEqual@plt+0x21730>
  43bfaa:	test   rax,rax
  43bfad:	je     43c010 <xmlStrEqual@plt+0x380d0>
  43bfaf:	mov    rdi,rax
  43bfb2:	mov    rbx,rax
  43bfb5:	call   425890 <xmlStrEqual@plt+0x21950>
  43bfba:	cmp    ax,0x2
  43bfbe:	je     43bff0 <xmlStrEqual@plt+0x380b0>
  43bfc0:	cmp    ax,0xa
  43bfc4:	je     43bfd0 <xmlStrEqual@plt+0x38090>
  43bfc6:	add    rsp,0x8
  43bfca:	pop    rbx
  43bfcb:	mov    rax,rbp
  43bfce:	pop    rbp
  43bfcf:	ret    
  43bfd0:	mov    rsi,rbx
  43bfd3:	lea    rdi,[rip+0xcbdf]        # 448bb9 <xmlStrEqual@plt+0x44c79>
  43bfda:	call   425bf0 <xmlStrEqual@plt+0x21cb0>
  43bfdf:	add    rsp,0x8
  43bfe3:	pop    rbx
  43bfe4:	mov    rax,rbp
  43bfe7:	pop    rbp
  43bfe8:	ret    
  43bfe9:	nop    DWORD PTR [rax+0x0]
  43bff0:	mov    rsi,rbx
  43bff3:	lea    rdi,[rip+0xc6b9]        # 4486b3 <xmlStrEqual@plt+0x44773>
  43bffa:	call   425bf0 <xmlStrEqual@plt+0x21cb0>
  43bfff:	add    rsp,0x8
  43c003:	pop    rbx
  43c004:	mov    rax,rbp
  43c007:	pop    rbp
  43c008:	ret    
  43c009:	nop    DWORD PTR [rax+0x0]
  43c010:	add    rsp,0x8
  43c014:	xor    ebp,ebp
  43c016:	pop    rbx
  43c017:	mov    rax,rbp
  43c01a:	pop    rbp
  43c01b:	ret    
  43c01c:	nop    DWORD PTR [rax+0x0]
  43c020:	endbr64 
  43c024:	cmp    DWORD PTR [rdi+0x18],0x2
  43c028:	je     43c030 <xmlStrEqual@plt+0x380f0>
  43c02a:	xor    eax,eax
  43c02c:	ret    
  43c02d:	nop    DWORD PTR [rax]
  43c030:	sub    rsp,0x8
  43c034:	call   4256d0 <xmlStrEqual@plt+0x21790>
  43c039:	test   ax,ax
  43c03c:	sete   al
  43c03f:	add    rsp,0x8
  43c043:	ret    
  43c044:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43c04e:	xchg   ax,ax
  43c050:	endbr64 
  43c054:	mov    rax,0x474da8
  43c05b:	mov    rdx,0x469dc0
  43c062:	mov    QWORD PTR [rax],rdx
  43c065:	ret    
  43c066:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43c070:	endbr64 
  43c074:	push   r15
  43c076:	push   r14
  43c078:	push   r13
  43c07a:	mov    r13d,edi
  43c07d:	mov    edi,esi
  43c07f:	push   r12
  43c081:	mov    r12d,esi
  43c084:	push   rbp
  43c085:	mov    rbp,rdx
  43c088:	push   rbx
  43c089:	sub    rsp,0x18
  43c08d:	call   43ef80 <xmlStrEqual@plt+0x3b040>
  43c092:	test   rax,rax
  43c095:	je     43c208 <xmlStrEqual@plt+0x382c8>
  43c09b:	mov    rdi,rbp
  43c09e:	mov    rbx,rax
  43c0a1:	call   425890 <xmlStrEqual@plt+0x21950>
  43c0a6:	movzx  esi,ax
  43c0a9:	mov    rdi,rbx
  43c0ac:	movzx  r14d,ax
  43c0b0:	call   43f430 <xmlStrEqual@plt+0x3b4f0>
  43c0b5:	mov    r12,rax
  43c0b8:	test   rax,rax
  43c0bb:	je     43c310 <xmlStrEqual@plt+0x383d0>
  43c0c1:	test   r13b,r13b
  43c0c4:	jne    43c2b0 <xmlStrEqual@plt+0x38370>
  43c0ca:	mov    r13,0x469e3c
  43c0d1:	cmp    DWORD PTR [r13+0x0],0x1
  43c0d6:	jle    43c0fc <xmlStrEqual@plt+0x381bc>
  43c0d8:	mov    r15,QWORD PTR [rbx]
  43c0db:	mov    rdi,rbp
  43c0de:	call   424d40 <xmlStrEqual@plt+0x20e00>
  43c0e3:	mov    rdx,rax
  43c0e6:	mov    rcx,r15
  43c0e9:	lea    rsi,[rip+0x167c8]        # 4528b8 <xmlStrEqual@plt+0x4e978>
  43c0f0:	mov    edi,0x6
  43c0f5:	xor    eax,eax
  43c0f7:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  43c0fc:	cmp    r14d,0xa
  43c100:	je     43c240 <xmlStrEqual@plt+0x38300>
  43c106:	xor    edi,edi
  43c108:	call   424b10 <xmlStrEqual@plt+0x20bd0>
  43c10d:	mov    rbp,rax
  43c110:	mov    eax,DWORD PTR [r13+0x0]
  43c114:	mov    r15d,0x1
  43c11a:	cmp    eax,0x1
  43c11d:	jle    43c14e <xmlStrEqual@plt+0x3820e>
  43c11f:	mov    rdi,rbp
  43c122:	call   424d40 <xmlStrEqual@plt+0x20e00>
  43c127:	mov    rdi,r12
  43c12a:	mov    r14,rax
  43c12d:	call   424d40 <xmlStrEqual@plt+0x20e00>
  43c132:	mov    rdx,QWORD PTR [rbx]
  43c135:	mov    rcx,rax
  43c138:	mov    r8,r14
  43c13b:	lea    rsi,[rip+0x169de]        # 452b20 <xmlStrEqual@plt+0x4ebe0>
  43c142:	mov    edi,0x6
  43c147:	xor    eax,eax
  43c149:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  43c14e:	mov    rdi,r12
  43c151:	call   425060 <xmlStrEqual@plt+0x21120>
  43c156:	mov    rdi,rbp
  43c159:	mov    r14,rax
  43c15c:	call   425060 <xmlStrEqual@plt+0x21120>
  43c161:	mov    rsi,rbp
  43c164:	mov    rdi,r12
  43c167:	mov    QWORD PTR [rsp+0x8],rax
  43c16c:	call   424fd0 <xmlStrEqual@plt+0x21090>
  43c171:	cmp    DWORD PTR [r13+0x0],0x2
  43c176:	jle    43c18b <xmlStrEqual@plt+0x3824b>
  43c178:	lea    rsi,[rip+0x16a01]        # 452b80 <xmlStrEqual@plt+0x4ec40>
  43c17f:	mov    edi,0x7
  43c184:	xor    eax,eax
  43c186:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  43c18b:	mov    rax,0x46d558
  43c192:	mov    rdx,QWORD PTR [rsp+0x8]
  43c197:	mov    rax,QWORD PTR [rax]
  43c19a:	mov    rsi,r14
  43c19d:	mov    rdi,rbx
  43c1a0:	call   QWORD PTR [rax+0x50]
  43c1a3:	cmp    DWORD PTR [r13+0x0],0x2
  43c1a8:	jle    43c1bd <xmlStrEqual@plt+0x3827d>
  43c1aa:	lea    rsi,[rip+0x169ff]        # 452bb0 <xmlStrEqual@plt+0x4ec70>
  43c1b1:	mov    edi,0x7
  43c1b6:	xor    eax,eax
  43c1b8:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  43c1bd:	mov    rax,0x475830
  43c1c4:	mov    r13,QWORD PTR [rsp+0x8]
  43c1c9:	mov    rdi,QWORD PTR [rax]
  43c1cc:	mov    rcx,r13
  43c1cf:	mov    rdx,r14
  43c1d2:	mov    rsi,rbx
  43c1d5:	call   408520 <xmlStrEqual@plt+0x45e0>
  43c1da:	mov    rdi,r14
  43c1dd:	call   424bf0 <xmlStrEqual@plt+0x20cb0>
  43c1e2:	mov    rdi,r13
  43c1e5:	call   424bf0 <xmlStrEqual@plt+0x20cb0>
  43c1ea:	test   r15b,r15b
  43c1ed:	jne    43c2f8 <xmlStrEqual@plt+0x383b8>
  43c1f3:	add    rsp,0x18
  43c1f7:	pop    rbx
  43c1f8:	pop    rbp
  43c1f9:	pop    r12
  43c1fb:	pop    r13
  43c1fd:	pop    r14
  43c1ff:	pop    r15
  43c201:	ret    
  43c202:	nop    WORD PTR [rax+rax*1+0x0]
  43c208:	mov    rax,0x469e3c
  43c20f:	cmp    DWORD PTR [rax],0x1
  43c212:	jle    43c1f3 <xmlStrEqual@plt+0x382b3>
  43c214:	add    rsp,0x18
  43c218:	pop    rbx
  43c219:	pop    rbp
  43c21a:	mov    edx,r12d
  43c21d:	pop    r12
  43c21f:	pop    r13
  43c221:	pop    r14
  43c223:	lea    rsi,[rip+0x165ce]        # 4527f8 <xmlStrEqual@plt+0x4e8b8>
  43c22a:	mov    edi,0x6
  43c22f:	xor    eax,eax
  43c231:	pop    r15
  43c233:	jmp    430e20 <xmlStrEqual@plt+0x2cee0>
  43c238:	nop    DWORD PTR [rax+rax*1+0x0]
  43c240:	mov    rsi,rbp
  43c243:	mov    rdi,r12
  43c246:	call   425310 <xmlStrEqual@plt+0x213d0>
  43c24b:	test   eax,eax
  43c24d:	jne    43c360 <xmlStrEqual@plt+0x38420>
  43c253:	mov    rax,0x474da8
  43c25a:	mov    rdx,0x474dc0
  43c261:	mov    rax,QWORD PTR [rax]
  43c264:	mov    esi,DWORD PTR [rdx]
  43c266:	mov    rdi,QWORD PTR [rbx]
  43c269:	call   QWORD PTR [rax+0x30]
  43c26c:	mov    rbp,rax
  43c26f:	test   rax,rax
  43c272:	je     43c106 <xmlStrEqual@plt+0x381c6>
  43c278:	cmp    DWORD PTR [r13+0x0],0x1
  43c27d:	mov    r15d,0x1
  43c283:	jle    43c14e <xmlStrEqual@plt+0x3820e>
  43c289:	mov    rdi,rax
  43c28c:	call   424d40 <xmlStrEqual@plt+0x20e00>
  43c291:	mov    rdx,rax
  43c294:	lea    rsi,[rip+0x1665d]        # 4528f8 <xmlStrEqual@plt+0x4e9b8>
  43c29b:	xor    eax,eax
  43c29d:	mov    edi,0x6
  43c2a2:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  43c2a7:	mov    eax,DWORD PTR [r13+0x0]
  43c2ab:	jmp    43c11a <xmlStrEqual@plt+0x381da>
  43c2b0:	mov    rdi,rbp
  43c2b3:	call   426890 <xmlStrEqual@plt+0x22950>
  43c2b8:	cmp    eax,0x1
  43c2bb:	je     43c3a0 <xmlStrEqual@plt+0x38460>
  43c2c1:	mov    rax,0x4757c0
  43c2c8:	mov    eax,DWORD PTR [rax]
  43c2ca:	cmp    eax,r14d
  43c2cd:	je     43c2d7 <xmlStrEqual@plt+0x38397>
  43c2cf:	test   eax,eax
  43c2d1:	jne    43c448 <xmlStrEqual@plt+0x38508>
  43c2d7:	cmp    r14d,0xa
  43c2db:	je     43c3c8 <xmlStrEqual@plt+0x38488>
  43c2e1:	mov    r13,0x469e3c
  43c2e8:	xor    r15d,r15d
  43c2eb:	mov    eax,DWORD PTR [r13+0x0]
  43c2ef:	jmp    43c11a <xmlStrEqual@plt+0x381da>
  43c2f4:	nop    DWORD PTR [rax+0x0]
  43c2f8:	add    rsp,0x18
  43c2fc:	pop    rbx
  43c2fd:	mov    rdi,rbp
  43c300:	pop    rbp
  43c301:	pop    r12
  43c303:	pop    r13
  43c305:	pop    r14
  43c307:	pop    r15
  43c309:	jmp    424bf0 <xmlStrEqual@plt+0x20cb0>
  43c30e:	xchg   ax,ax
  43c310:	mov    rax,0x469e3c
  43c317:	cmp    DWORD PTR [rax],0x1
  43c31a:	jle    43c1f3 <xmlStrEqual@plt+0x382b3>
  43c320:	cmp    r14d,0x2
  43c324:	lea    rdx,[rip+0xc595]        # 4488c0 <xmlStrEqual@plt+0x44980>
  43c32b:	lea    rax,[rip+0xc593]        # 4488c5 <xmlStrEqual@plt+0x44985>
  43c332:	mov    rcx,QWORD PTR [rbx]
  43c335:	cmovne rdx,rax
  43c339:	lea    rsi,[rip+0x16520]        # 452860 <xmlStrEqual@plt+0x4e920>
  43c340:	add    rsp,0x18
  43c344:	pop    rbx
  43c345:	pop    rbp
  43c346:	pop    r12
  43c348:	pop    r13
  43c34a:	pop    r14
  43c34c:	mov    edi,0x6
  43c351:	xor    eax,eax
  43c353:	pop    r15
  43c355:	jmp    430e20 <xmlStrEqual@plt+0x2cee0>
  43c35a:	nop    WORD PTR [rax+rax*1+0x0]
  43c360:	cmp    DWORD PTR [r13+0x0],0x1
  43c365:	jle    43c1f3 <xmlStrEqual@plt+0x382b3>
  43c36b:	mov    rdi,rbp
  43c36e:	call   424d40 <xmlStrEqual@plt+0x20e00>
  43c373:	mov    rdx,rax
  43c376:	lea    rsi,[rip+0x165bb]        # 452938 <xmlStrEqual@plt+0x4e9f8>
  43c37d:	add    rsp,0x18
  43c381:	pop    rbx
  43c382:	pop    rbp
  43c383:	pop    r12
  43c385:	pop    r13
  43c387:	pop    r14
  43c389:	mov    edi,0x6
  43c38e:	xor    eax,eax
  43c390:	pop    r15
  43c392:	jmp    430e20 <xmlStrEqual@plt+0x2cee0>
  43c397:	nop    WORD PTR [rax+rax*1+0x0]
  43c3a0:	mov    rax,0x469e3c
  43c3a7:	cmp    DWORD PTR [rax],0x1
  43c3aa:	jle    43c1f3 <xmlStrEqual@plt+0x382b3>
  43c3b0:	mov    rdi,rbp
  43c3b3:	call   424d40 <xmlStrEqual@plt+0x20e00>
  43c3b8:	mov    rdx,rax
  43c3bb:	lea    rsi,[rip+0x165c6]        # 452988 <xmlStrEqual@plt+0x4ea48>
  43c3c2:	jmp    43c37d <xmlStrEqual@plt+0x3843d>
  43c3c4:	nop    DWORD PTR [rax+0x0]
  43c3c8:	mov    rax,0x474da8
  43c3cf:	mov    rdi,QWORD PTR [rbx]
  43c3d2:	mov    rax,QWORD PTR [rax]
  43c3d5:	mov    esi,0xa
  43c3da:	call   QWORD PTR [rax+0x18]
  43c3dd:	mov    rdi,QWORD PTR [rbx+0x18]
  43c3e1:	mov    rdx,0x425310
  43c3e8:	mov    rsi,rax
  43c3eb:	mov    r13,rax
  43c3ee:	call   42df40 <xmlStrEqual@plt+0x2a000>
  43c3f3:	mov    r15d,eax
  43c3f6:	test   al,al
  43c3f8:	je     43c480 <xmlStrEqual@plt+0x38540>
  43c3fe:	mov    rax,0x469e3c
  43c405:	cmp    DWORD PTR [rax],0x1
  43c408:	jle    43c42f <xmlStrEqual@plt+0x384ef>
  43c40a:	mov    rdi,QWORD PTR [rbx+0x18]
  43c40e:	mov    rbp,QWORD PTR [rbx]
  43c411:	call   424d40 <xmlStrEqual@plt+0x20e00>
  43c416:	mov    rdx,rax
  43c419:	mov    rcx,rbp
  43c41c:	lea    rsi,[rip+0x16615]        # 452a38 <xmlStrEqual@plt+0x4eaf8>
  43c423:	mov    edi,0x6
  43c428:	xor    eax,eax
  43c42a:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  43c42f:	add    rsp,0x18
  43c433:	pop    rbx
  43c434:	pop    rbp
  43c435:	pop    r12
  43c437:	mov    rdi,r13
  43c43a:	pop    r13
  43c43c:	pop    r14
  43c43e:	pop    r15
  43c440:	jmp    42e2b0 <xmlStrEqual@plt+0x2a370>
  43c445:	nop    DWORD PTR [rax]
  43c448:	mov    rax,0x469e3c
  43c44f:	cmp    DWORD PTR [rax],0x1
  43c452:	jle    43c1f3 <xmlStrEqual@plt+0x382b3>
  43c458:	cmp    r14d,0x2
  43c45c:	lea    rdx,[rip+0xc45d]        # 4488c0 <xmlStrEqual@plt+0x44980>
  43c463:	lea    rax,[rip+0xc45b]        # 4488c5 <xmlStrEqual@plt+0x44985>
  43c46a:	mov    rcx,QWORD PTR [rbx]
  43c46d:	cmovne rdx,rax
  43c471:	lea    rsi,[rip+0x16560]        # 4529d8 <xmlStrEqual@plt+0x4ea98>
  43c478:	jmp    43c340 <xmlStrEqual@plt+0x38400>
  43c47d:	nop    DWORD PTR [rax]
  43c480:	mov    rdi,r13
  43c483:	call   42e2b0 <xmlStrEqual@plt+0x2a370>
  43c488:	mov    rax,0x474dc0
  43c48f:	mov    rdi,rbp
  43c492:	mov    eax,DWORD PTR [rax]
  43c494:	test   eax,eax
  43c496:	jne    43c4b9 <xmlStrEqual@plt+0x38579>
  43c498:	call   425cf0 <xmlStrEqual@plt+0x21db0>
  43c49d:	mov    eax,DWORD PTR [rax]
  43c49f:	and    eax,0xe0
  43c4a4:	cmp    eax,0x20
  43c4a7:	jne    43c50f <xmlStrEqual@plt+0x385cf>
  43c4a9:	mov    r13,0x469e3c
  43c4b0:	mov    eax,DWORD PTR [r13+0x0]
  43c4b4:	jmp    43c11a <xmlStrEqual@plt+0x381da>
  43c4b9:	call   425cf0 <xmlStrEqual@plt+0x21db0>
  43c4be:	mov    edx,DWORD PTR [rax]
  43c4c0:	mov    r13,0x469e3c
  43c4c7:	mov    eax,edx
  43c4c9:	and    eax,0xc0ff
  43c4ce:	cmp    eax,0xc0fe
  43c4d3:	mov    eax,DWORD PTR [r13+0x0]
  43c4d7:	je     43c11a <xmlStrEqual@plt+0x381da>
  43c4dd:	and    edx,0xfe
  43c4e3:	cmp    edx,0xfc
  43c4e9:	je     43c11a <xmlStrEqual@plt+0x381da>
  43c4ef:	cmp    eax,0x1
  43c4f2:	jle    43c1f3 <xmlStrEqual@plt+0x382b3>
  43c4f8:	mov    rdi,rbp
  43c4fb:	call   424d40 <xmlStrEqual@plt+0x20e00>
  43c500:	mov    rdx,rax
  43c503:	lea    rsi,[rip+0x165a6]        # 452ab0 <xmlStrEqual@plt+0x4eb70>
  43c50a:	jmp    43c37d <xmlStrEqual@plt+0x3843d>
  43c50f:	mov    rax,0x469e3c
  43c516:	cmp    DWORD PTR [rax],0x1
  43c519:	jle    43c1f3 <xmlStrEqual@plt+0x382b3>
  43c51f:	jmp    43c4f8 <xmlStrEqual@plt+0x385b8>
  43c521:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  43c52c:	nop    DWORD PTR [rax+0x0]
  43c530:	endbr64 
  43c534:	push   r15
  43c536:	push   r14
  43c538:	push   r13
  43c53a:	mov    r13d,esi
  43c53d:	push   r12
  43c53f:	mov    r12d,edi
  43c542:	push   rbp
  43c543:	mov    ebp,edx
  43c545:	push   rbx
  43c546:	sub    rsp,0x8
  43c54a:	call   43ef80 <xmlStrEqual@plt+0x3b040>
  43c54f:	test   rax,rax
  43c552:	je     43c640 <xmlStrEqual@plt+0x38700>
  43c558:	mov    r14,0x469e3c
  43c55f:	mov    rbx,rax
  43c562:	mov    eax,DWORD PTR [r14]
  43c565:	cmp    BYTE PTR [rbx+0xc],bpl
  43c569:	je     43c668 <xmlStrEqual@plt+0x38728>
  43c56f:	cmp    eax,0x1
  43c572:	jg     43c5e0 <xmlStrEqual@plt+0x386a0>
  43c574:	mov    BYTE PTR [rbx+0xc],bpl
  43c578:	mov    DWORD PTR [rbx+0x8],r13d
  43c57c:	mov    rax,0x46d558
  43c583:	movzx  ecx,bpl
  43c587:	mov    rax,QWORD PTR [rax]
  43c58a:	mov    edx,r13d
  43c58d:	mov    esi,r12d
  43c590:	mov    rdi,rbx
  43c593:	call   QWORD PTR [rax+0x58]
  43c596:	cmp    DWORD PTR [r14],0x2
  43c59a:	movzx  r15d,bpl
  43c59e:	jle    43c5b3 <xmlStrEqual@plt+0x38673>
  43c5a0:	lea    rsi,[rip+0x16769]        # 452d10 <xmlStrEqual@plt+0x4edd0>
  43c5a7:	mov    edi,0x7
  43c5ac:	xor    eax,eax
  43c5ae:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  43c5b3:	mov    rax,0x475830
  43c5ba:	mov    rsi,rbx
  43c5bd:	mov    rdi,QWORD PTR [rax]
  43c5c0:	add    rsp,0x8
  43c5c4:	pop    rbx
  43c5c5:	pop    rbp
  43c5c6:	mov    edx,r12d
  43c5c9:	pop    r12
  43c5cb:	mov    ecx,r13d
  43c5ce:	pop    r13
  43c5d0:	pop    r14
  43c5d2:	mov    r8d,r15d
  43c5d5:	pop    r15
  43c5d7:	jmp    408590 <xmlStrEqual@plt+0x4650>
  43c5dc:	nop    DWORD PTR [rax+0x0]
  43c5e0:	cmp    bpl,0x1
  43c5e4:	lea    rax,[rip+0x161f4]        # 4527df <xmlStrEqual@plt+0x4e89f>
  43c5eb:	lea    rcx,[rip+0x161ea]        # 4527dc <xmlStrEqual@plt+0x4e89c>
  43c5f2:	cmovne rcx,rax
  43c5f6:	mov    rdx,QWORD PTR [rbx]
  43c5f9:	xor    eax,eax
  43c5fb:	lea    rsi,[rip+0x16696]        # 452c98 <xmlStrEqual@plt+0x4ed58>
  43c602:	mov    edi,0x6
  43c607:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  43c60c:	cmp    DWORD PTR [r14],0x2
  43c610:	mov    BYTE PTR [rbx+0xc],bpl
  43c614:	mov    DWORD PTR [rbx+0x8],r13d
  43c618:	jle    43c57c <xmlStrEqual@plt+0x3863c>
  43c61e:	lea    rsi,[rip+0x166bb]        # 452ce0 <xmlStrEqual@plt+0x4eda0>
  43c625:	mov    edi,0x7
  43c62a:	xor    eax,eax
  43c62c:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  43c631:	jmp    43c57c <xmlStrEqual@plt+0x3863c>
  43c636:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43c640:	mov    rax,0x469e3c
  43c647:	lea    rsi,[rip+0x1659a]        # 452be8 <xmlStrEqual@plt+0x4eca8>
  43c64e:	cmp    DWORD PTR [rax],0x1
  43c651:	jg     43c674 <xmlStrEqual@plt+0x38734>
  43c653:	add    rsp,0x8
  43c657:	pop    rbx
  43c658:	pop    rbp
  43c659:	pop    r12
  43c65b:	pop    r13
  43c65d:	pop    r14
  43c65f:	pop    r15
  43c661:	ret    
  43c662:	nop    WORD PTR [rax+rax*1+0x0]
  43c668:	cmp    eax,0x1
  43c66b:	jle    43c653 <xmlStrEqual@plt+0x38713>
  43c66d:	lea    rsi,[rip+0x165dc]        # 452c50 <xmlStrEqual@plt+0x4ed10>
  43c674:	add    rsp,0x8
  43c678:	pop    rbx
  43c679:	pop    rbp
  43c67a:	pop    r12
  43c67c:	pop    r13
  43c67e:	pop    r14
  43c680:	mov    edi,0x6
  43c685:	xor    eax,eax
  43c687:	pop    r15
  43c689:	jmp    430e20 <xmlStrEqual@plt+0x2cee0>
  43c68e:	xchg   ax,ax
  43c690:	endbr64 
  43c694:	push   r15
  43c696:	mov    r15d,esi
  43c699:	push   r14
  43c69b:	mov    r14d,edi
  43c69e:	mov    edi,esi
  43c6a0:	push   r13
  43c6a2:	mov    r13,r8
  43c6a5:	push   r12
  43c6a7:	mov    r12,rcx
  43c6aa:	push   rbp
  43c6ab:	mov    rbp,rdx
  43c6ae:	push   rbx
  43c6af:	sub    rsp,0x18
  43c6b3:	call   43ef80 <xmlStrEqual@plt+0x3b040>
  43c6b8:	test   rax,rax
  43c6bb:	je     43c790 <xmlStrEqual@plt+0x38850>
  43c6c1:	mov    rdi,rbp
  43c6c4:	mov    rbx,rax
  43c6c7:	call   425890 <xmlStrEqual@plt+0x21950>
  43c6cc:	test   ax,ax
  43c6cf:	je     43c6e4 <xmlStrEqual@plt+0x387a4>
  43c6d1:	mov    r15,0x4757c0
  43c6d8:	mov    r8d,DWORD PTR [r15]
  43c6db:	test   r8d,r8d
  43c6de:	jne    43c848 <xmlStrEqual@plt+0x38908>
  43c6e4:	mov    rdi,r12
  43c6e7:	call   425890 <xmlStrEqual@plt+0x21950>
  43c6ec:	test   ax,ax
  43c6ef:	je     43c703 <xmlStrEqual@plt+0x387c3>
  43c6f1:	mov    r15,0x4757c0
  43c6f8:	mov    esi,DWORD PTR [r15]
  43c6fb:	test   esi,esi
  43c6fd:	jne    43c8a0 <xmlStrEqual@plt+0x38960>
  43c703:	mov    rdi,r13
  43c706:	call   425890 <xmlStrEqual@plt+0x21950>
  43c70b:	test   ax,ax
  43c70e:	je     43c722 <xmlStrEqual@plt+0x387e2>
  43c710:	mov    r15,0x4757c0
  43c717:	mov    edx,DWORD PTR [r15]
  43c71a:	test   edx,edx
  43c71c:	jne    43c8f8 <xmlStrEqual@plt+0x389b8>
  43c722:	mov    rax,0x469e3c
  43c729:	cmp    DWORD PTR [rax],0x1
  43c72c:	jg     43c7c8 <xmlStrEqual@plt+0x38888>
  43c732:	mov    rax,0x46d558
  43c739:	mov    r8,r13
  43c73c:	mov    rax,QWORD PTR [rax]
  43c73f:	mov    rcx,r12
  43c742:	mov    rdx,rbp
  43c745:	mov    rsi,rbx
  43c748:	movzx  edi,r14b
  43c74c:	call   QWORD PTR [rax+0x48]
  43c74f:	mov    rax,0x469e3c
  43c756:	movzx  r15d,r14b
  43c75a:	cmp    DWORD PTR [rax],0x2
  43c75d:	jg     43c7b0 <xmlStrEqual@plt+0x38870>
  43c75f:	mov    rax,0x475830
  43c766:	mov    rdx,rbx
  43c769:	mov    rdi,QWORD PTR [rax]
  43c76c:	add    rsp,0x18
  43c770:	pop    rbx
  43c771:	mov    rcx,rbp
  43c774:	pop    rbp
  43c775:	mov    r8,r12
  43c778:	pop    r12
  43c77a:	mov    r9,r13
  43c77d:	pop    r13
  43c77f:	pop    r14
  43c781:	mov    esi,r15d
  43c784:	pop    r15
  43c786:	jmp    408600 <xmlStrEqual@plt+0x46c0>
  43c78b:	nop    DWORD PTR [rax+rax*1+0x0]
  43c790:	mov    rax,0x469e3c
  43c797:	cmp    DWORD PTR [rax],0x1
  43c79a:	jg     43c968 <xmlStrEqual@plt+0x38a28>
  43c7a0:	add    rsp,0x18
  43c7a4:	pop    rbx
  43c7a5:	pop    rbp
  43c7a6:	pop    r12
  43c7a8:	pop    r13
  43c7aa:	pop    r14
  43c7ac:	pop    r15
  43c7ae:	ret    
  43c7af:	nop
  43c7b0:	lea    rsi,[rip+0x16771]        # 452f28 <xmlStrEqual@plt+0x4efe8>
  43c7b7:	mov    edi,0x7
  43c7bc:	xor    eax,eax
  43c7be:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  43c7c3:	jmp    43c75f <xmlStrEqual@plt+0x3881f>
  43c7c5:	nop    DWORD PTR [rax]
  43c7c8:	mov    rdi,r13
  43c7cb:	call   424d40 <xmlStrEqual@plt+0x20e00>
  43c7d0:	mov    rdi,r12
  43c7d3:	mov    r15,rax
  43c7d6:	call   424d40 <xmlStrEqual@plt+0x20e00>
  43c7db:	mov    rdi,rbp
  43c7de:	mov    QWORD PTR [rsp+0x8],rax
  43c7e3:	call   424d40 <xmlStrEqual@plt+0x20e00>
  43c7e8:	cmp    r14b,0x1
  43c7ec:	lea    rcx,[rip+0x15ff7]        # 4527ea <xmlStrEqual@plt+0x4e8aa>
  43c7f3:	lea    rdx,[rip+0x15fea]        # 4527e4 <xmlStrEqual@plt+0x4e8a4>
  43c7fa:	cmovne rdx,rcx
  43c7fe:	mov    r8,QWORD PTR [rsp+0x8]
  43c803:	mov    rcx,rax
  43c806:	mov    r9,r15
  43c809:	xor    eax,eax
  43c80b:	lea    rsi,[rip+0x166a6]        # 452eb8 <xmlStrEqual@plt+0x4ef78>
  43c812:	mov    edi,0x6
  43c817:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  43c81c:	mov    rax,0x469e3c
  43c823:	cmp    DWORD PTR [rax],0x2
  43c826:	jle    43c732 <xmlStrEqual@plt+0x387f2>
  43c82c:	lea    rsi,[rip+0x166c5]        # 452ef8 <xmlStrEqual@plt+0x4efb8>
  43c833:	mov    edi,0x7
  43c838:	xor    eax,eax
  43c83a:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  43c83f:	jmp    43c732 <xmlStrEqual@plt+0x387f2>
  43c844:	nop    DWORD PTR [rax+0x0]
  43c848:	mov    rdi,rbp
  43c84b:	call   425890 <xmlStrEqual@plt+0x21950>
  43c850:	movzx  eax,ax
  43c853:	cmp    eax,DWORD PTR [r15]
  43c856:	je     43c6e4 <xmlStrEqual@plt+0x387a4>
  43c85c:	mov    rax,0x469e3c
  43c863:	mov    edi,DWORD PTR [rax]
  43c865:	test   edi,edi
  43c867:	jle    43c7a0 <xmlStrEqual@plt+0x38860>
  43c86d:	mov    rdi,rbp
  43c870:	mov    rbx,QWORD PTR [rbx]
  43c873:	call   425890 <xmlStrEqual@plt+0x21950>
  43c878:	cmp    ax,0x2
  43c87c:	lea    rdx,[rip+0xc03d]        # 4488c0 <xmlStrEqual@plt+0x44980>
  43c883:	lea    rax,[rip+0xc03b]        # 4488c5 <xmlStrEqual@plt+0x44985>
  43c88a:	cmovne rdx,rax
  43c88e:	mov    rcx,rbx
  43c891:	lea    rsi,[rip+0x16510]        # 452da8 <xmlStrEqual@plt+0x4ee68>
  43c898:	jmp    43c948 <xmlStrEqual@plt+0x38a08>
  43c89d:	nop    DWORD PTR [rax]
  43c8a0:	mov    rdi,r12
  43c8a3:	call   425890 <xmlStrEqual@plt+0x21950>
  43c8a8:	movzx  eax,ax
  43c8ab:	cmp    eax,DWORD PTR [r15]
  43c8ae:	je     43c703 <xmlStrEqual@plt+0x387c3>
  43c8b4:	mov    rax,0x469e3c
  43c8bb:	mov    ecx,DWORD PTR [rax]
  43c8bd:	test   ecx,ecx
  43c8bf:	jle    43c7a0 <xmlStrEqual@plt+0x38860>
  43c8c5:	mov    rdi,r12
  43c8c8:	mov    rbx,QWORD PTR [rbx]
  43c8cb:	call   425890 <xmlStrEqual@plt+0x21950>
  43c8d0:	cmp    ax,0x2
  43c8d4:	lea    rdx,[rip+0xbfe5]        # 4488c0 <xmlStrEqual@plt+0x44980>
  43c8db:	lea    rax,[rip+0xbfe3]        # 4488c5 <xmlStrEqual@plt+0x44985>
  43c8e2:	cmovne rdx,rax
  43c8e6:	mov    rcx,rbx
  43c8e9:	lea    rsi,[rip+0x16528]        # 452e18 <xmlStrEqual@plt+0x4eed8>
  43c8f0:	jmp    43c948 <xmlStrEqual@plt+0x38a08>
  43c8f2:	nop    WORD PTR [rax+rax*1+0x0]
  43c8f8:	mov    rdi,r13
  43c8fb:	call   425890 <xmlStrEqual@plt+0x21950>
  43c900:	movzx  eax,ax
  43c903:	cmp    eax,DWORD PTR [r15]
  43c906:	je     43c722 <xmlStrEqual@plt+0x387e2>
  43c90c:	mov    rax,0x469e3c
  43c913:	mov    eax,DWORD PTR [rax]
  43c915:	test   eax,eax
  43c917:	jle    43c7a0 <xmlStrEqual@plt+0x38860>
  43c91d:	mov    rdi,r13
  43c920:	mov    rbx,QWORD PTR [rbx]
  43c923:	call   425890 <xmlStrEqual@plt+0x21950>
  43c928:	cmp    ax,0x2
  43c92c:	lea    rdx,[rip+0xbf8d]        # 4488c0 <xmlStrEqual@plt+0x44980>
  43c933:	lea    rax,[rip+0xbf8b]        # 4488c5 <xmlStrEqual@plt+0x44985>
  43c93a:	cmovne rdx,rax
  43c93e:	mov    rcx,rbx
  43c941:	lea    rsi,[rip+0x16540]        # 452e88 <xmlStrEqual@plt+0x4ef48>
  43c948:	add    rsp,0x18
  43c94c:	pop    rbx
  43c94d:	pop    rbp
  43c94e:	pop    r12
  43c950:	pop    r13
  43c952:	pop    r14
  43c954:	mov    edi,0x5
  43c959:	xor    eax,eax
  43c95b:	pop    r15
  43c95d:	jmp    430e20 <xmlStrEqual@plt+0x2cee0>
  43c962:	nop    WORD PTR [rax+rax*1+0x0]
  43c968:	add    rsp,0x18
  43c96c:	pop    rbx
  43c96d:	pop    rbp
  43c96e:	pop    r12
  43c970:	pop    r13
  43c972:	pop    r14
  43c974:	mov    edx,r15d
  43c977:	lea    rsi,[rip+0x163ca]        # 452d48 <xmlStrEqual@plt+0x4ee08>
  43c97e:	mov    edi,0x6
  43c983:	xor    eax,eax
  43c985:	pop    r15
  43c987:	jmp    430e20 <xmlStrEqual@plt+0x2cee0>
  43c98c:	nop    DWORD PTR [rax+0x0]
  43c990:	endbr64 
  43c994:	push   rbx
  43c995:	mov    edi,0x4
  43c99a:	call   434fe0 <xmlStrEqual@plt+0x310a0>
  43c99f:	mov    rbx,rax
  43c9a2:	xor    eax,eax
  43c9a4:	test   rbx,rbx
  43c9a7:	je     43c9dc <xmlStrEqual@plt+0x38a9c>
  43c9a9:	mov    rax,0x469dc0
  43c9b0:	mov    QWORD PTR [rax+0x68],rbx
  43c9b4:	xor    eax,eax
  43c9b6:	call   439620 <xmlStrEqual@plt+0x356e0>
  43c9bb:	mov    DWORD PTR [rbx],eax
  43c9bd:	mov    ecx,eax
  43c9bf:	mov    rax,0x4757a8
  43c9c6:	mov    rsi,0x43e550
  43c9cd:	mov    rdi,QWORD PTR [rax]
  43c9d0:	xor    edx,edx
  43c9d2:	call   4386e0 <xmlStrEqual@plt+0x347a0>
  43c9d7:	mov    eax,0x1
  43c9dc:	pop    rbx
  43c9dd:	ret    
  43c9de:	xchg   ax,ax
  43c9e0:	endbr64 
  43c9e4:	mov    rax,0x469dc0
  43c9eb:	mov    rdi,QWORD PTR [rax+0x68]
  43c9ef:	jmp    4037b0 <free@plt>
  43c9f4:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  43c9ff:	nop
  43ca00:	endbr64 
  43ca04:	jmp    403850 <if_nametoindex@plt>
  43ca09:	nop    DWORD PTR [rax+0x0]
  43ca10:	endbr64 
  43ca14:	push   r15
  43ca16:	push   r14
  43ca18:	push   r13
  43ca1a:	push   r12
  43ca1c:	push   rbp
  43ca1d:	push   rbx
  43ca1e:	sub    rsp,0x1000
  43ca25:	or     QWORD PTR [rsp],0x0
  43ca2a:	sub    rsp,0x1000
  43ca31:	or     QWORD PTR [rsp],0x0
  43ca36:	sub    rsp,0x28
  43ca3a:	mov    rdi,QWORD PTR [rip+0x2c57f]        # 468fc0 <xmlStrEqual@plt+0x65080>
  43ca41:	mov    rax,QWORD PTR fs:0x28
  43ca4a:	mov    QWORD PTR [rsp+0x2018],rax
  43ca52:	xor    eax,eax
  43ca54:	call   42dca0 <xmlStrEqual@plt+0x29d60>
  43ca59:	mov    r13,rax
  43ca5c:	xor    eax,eax
  43ca5e:	call   439620 <xmlStrEqual@plt+0x356e0>
  43ca63:	cmp    eax,0xfffffff7
  43ca66:	je     43cb80 <xmlStrEqual@plt+0x38c40>
  43ca6c:	lea    r8,[rsp+0x10]
  43ca71:	mov    rdi,r8
  43ca74:	mov    edx,0x1000
  43ca79:	xor    esi,esi
  43ca7b:	mov    r12d,eax
  43ca7e:	call   4039f0 <memset@plt>
  43ca83:	mov    r8,rax
  43ca86:	xor    ecx,ecx
  43ca88:	movabs rax,0x301001200000020
  43ca92:	mov    edx,0x20
  43ca97:	mov    rsi,r8
  43ca9a:	mov    edi,r12d
  43ca9d:	mov    QWORD PTR [rsp+0x10],rax
  43caa2:	mov    BYTE PTR [rsp+0x20],0x11
  43caa7:	call   4039c0 <send@plt>
  43caac:	lea    rbp,[rsp+0x1010]
  43cab4:	mov    rbx,rsp
  43cab7:	test   eax,eax
  43cab9:	js     43cb98 <xmlStrEqual@plt+0x38c58>
  43cabf:	nop
  43cac0:	mov    ecx,0x40
  43cac5:	mov    edx,0x1000
  43caca:	mov    rsi,rbp
  43cacd:	mov    edi,r12d
  43cad0:	call   403900 <recv@plt>
  43cad5:	test   eax,eax
  43cad7:	jle    43cb50 <xmlStrEqual@plt+0x38c10>
  43cad9:	mov    r15d,eax
  43cadc:	cmp    eax,0xf
  43cadf:	jbe    43cac0 <xmlStrEqual@plt+0x38b80>
  43cae1:	mov    edx,DWORD PTR [rsp+0x1010]
  43cae8:	cmp    edx,eax
  43caea:	ja     43cac0 <xmlStrEqual@plt+0x38b80>
  43caec:	mov    r14,rbp
  43caef:	cmp    edx,0xf
  43caf2:	ja     43cb22 <xmlStrEqual@plt+0x38be2>
  43caf4:	jmp    43cac0 <xmlStrEqual@plt+0x38b80>
  43caf6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43cb00:	mov    eax,DWORD PTR [r14]
  43cb03:	add    eax,0x3
  43cb06:	and    eax,0xfffffffc
  43cb09:	sub    r15d,eax
  43cb0c:	add    r14,rax
  43cb0f:	cmp    r15d,0xf
  43cb13:	jbe    43cac0 <xmlStrEqual@plt+0x38b80>
  43cb15:	mov    eax,DWORD PTR [r14]
  43cb18:	cmp    eax,0xf
  43cb1b:	jbe    43cac0 <xmlStrEqual@plt+0x38b80>
  43cb1d:	cmp    r15d,eax
  43cb20:	jb     43cac0 <xmlStrEqual@plt+0x38b80>
  43cb22:	cmp    WORD PTR [r14+0x4],0x10
  43cb28:	jne    43cb00 <xmlStrEqual@plt+0x38bc0>
  43cb2a:	mov    edi,DWORD PTR [r14+0x14]
  43cb2e:	mov    rsi,rbx
  43cb31:	call   403f00 <if_indextoname@plt>
  43cb36:	test   rax,rax
  43cb39:	je     43cb00 <xmlStrEqual@plt+0x38bc0>
  43cb3b:	mov    rdi,rbx
  43cb3e:	call   403ed0 <strdup@plt>
  43cb43:	mov    rdi,rax
  43cb46:	mov    rsi,r13
  43cb49:	call   42dcf0 <xmlStrEqual@plt+0x29db0>
  43cb4e:	jmp    43cb00 <xmlStrEqual@plt+0x38bc0>
  43cb50:	mov    edi,r12d
  43cb53:	call   403f30 <close@plt>
  43cb58:	mov    rcx,QWORD PTR [rsp+0x2018]
  43cb60:	xor    rcx,QWORD PTR fs:0x28
  43cb69:	mov    rax,r13
  43cb6c:	jne    43cbc7 <xmlStrEqual@plt+0x38c87>
  43cb6e:	add    rsp,0x2028
  43cb75:	pop    rbx
  43cb76:	pop    rbp
  43cb77:	pop    r12
  43cb79:	pop    r13
  43cb7b:	pop    r14
  43cb7d:	pop    r15
  43cb7f:	ret    
  43cb80:	lea    rsi,[rip+0x163d9]        # 452f60 <xmlStrEqual@plt+0x4f020>
  43cb87:	mov    edi,0x2
  43cb8c:	xor    eax,eax
  43cb8e:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  43cb93:	xor    r13d,r13d
  43cb96:	jmp    43cb58 <xmlStrEqual@plt+0x38c18>
  43cb98:	call   4037f0 <__errno_location@plt>
  43cb9d:	mov    edi,DWORD PTR [rax]
  43cb9f:	xor    r13d,r13d
  43cba2:	call   403910 <strerror@plt>
  43cba7:	mov    rdx,rax
  43cbaa:	lea    rsi,[rip+0x163e7]        # 452f98 <xmlStrEqual@plt+0x4f058>
  43cbb1:	mov    edi,0x2
  43cbb6:	xor    eax,eax
  43cbb8:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  43cbbd:	mov    edi,r12d
  43cbc0:	call   403f30 <close@plt>
  43cbc5:	jmp    43cb58 <xmlStrEqual@plt+0x38c18>
  43cbc7:	call   403c00 <__stack_chk_fail@plt>
  43cbcc:	nop    DWORD PTR [rax+0x0]
  43cbd0:	endbr64 
  43cbd4:	push   r14
  43cbd6:	push   r13
  43cbd8:	push   r12
  43cbda:	push   rbp
  43cbdb:	push   rbx
  43cbdc:	sub    rsp,0x1000
  43cbe3:	or     QWORD PTR [rsp],0x0
  43cbe8:	sub    rsp,0x1000
  43cbef:	or     QWORD PTR [rsp],0x0
  43cbf4:	sub    rsp,0x40
  43cbf8:	mov    r12,rdi
  43cbfb:	mov    rax,QWORD PTR fs:0x28
  43cc04:	mov    QWORD PTR [rsp+0x2038],rax
  43cc0c:	xor    eax,eax
  43cc0e:	call   425890 <xmlStrEqual@plt+0x21950>
  43cc13:	movzx  r13d,ax
  43cc17:	mov    esi,0x10
  43cc1c:	lea    rbp,[rsp+0x4]
  43cc21:	mov    QWORD PTR [rsp+0x6],0x0
  43cc2a:	mov    WORD PTR [rsp+0x4],si
  43cc2f:	cmp    r13d,0x2
  43cc33:	je     43cdf0 <xmlStrEqual@plt+0x38eb0>
  43cc39:	xor    edx,edx
  43cc3b:	mov    esi,0x3
  43cc40:	mov    edi,0x10
  43cc45:	mov    DWORD PTR [rsp+0xc],0x400
  43cc4d:	call   403880 <socket@plt>
  43cc52:	mov    ebx,eax
  43cc54:	test   eax,eax
  43cc56:	js     43ce66 <xmlStrEqual@plt+0x38f26>
  43cc5c:	mov    rsi,rbp
  43cc5f:	mov    edx,0xc
  43cc64:	mov    edi,eax
  43cc66:	lea    rbp,[rsp+0x30]
  43cc6b:	call   403820 <bind@plt>
  43cc70:	mov    edx,0x1000
  43cc75:	xor    esi,esi
  43cc77:	mov    rdi,rbp
  43cc7a:	call   4039f0 <memset@plt>
  43cc7f:	mov    edx,0x4fe
  43cc84:	mov    DWORD PTR [rsp+0x34],0x1001a
  43cc8c:	mov    BYTE PTR [rsp+0x40],r13b
  43cc91:	mov    WORD PTR [rsp+0x44],dx
  43cc96:	mov    BYTE PTR [rsp+0x47],0x1
  43cc9b:	mov    eax,0xffffff80
  43cca0:	mov    ecx,0x1
  43cca5:	mov    edi,r13d
  43cca8:	mov    WORD PTR [rsp+0x4e],cx
  43ccad:	mov    BYTE PTR [rsp+0x41],al
  43ccb1:	call   426590 <xmlStrEqual@plt+0x22650>
  43ccb6:	movzx  eax,al
  43ccb9:	lea    rdi,[rbp+0x20]
  43ccbd:	add    eax,0x4
  43ccc0:	mov    rsi,r12
  43ccc3:	mov    WORD PTR [rsp+0x4c],ax
  43ccc8:	call   4250b0 <xmlStrEqual@plt+0x21170>
  43cccd:	movzx  edx,WORD PTR [rsp+0x4c]
  43ccd2:	mov    rsi,rbp
  43ccd5:	add    edx,0x1c
  43ccd8:	xor    ecx,ecx
  43ccda:	mov    edi,ebx
  43ccdc:	mov    DWORD PTR [rsp+0x30],edx
  43cce0:	call   4039c0 <send@plt>
  43cce5:	lea    rbp,[rsp+0x1030]
  43cced:	test   eax,eax
  43ccef:	js     43ce80 <xmlStrEqual@plt+0x38f40>
  43ccf5:	mov    ecx,0x40
  43ccfa:	mov    edx,0x1000
  43ccff:	mov    rsi,rbp
  43cd02:	mov    edi,ebx
  43cd04:	call   403900 <recv@plt>
  43cd09:	test   eax,eax
  43cd0b:	jle    43ce58 <xmlStrEqual@plt+0x38f18>
  43cd11:	mov    r8d,eax
  43cd14:	cmp    eax,0xf
  43cd17:	jbe    43ccf5 <xmlStrEqual@plt+0x38db5>
  43cd19:	mov    edx,DWORD PTR [rsp+0x1030]
  43cd20:	cmp    edx,0xf
  43cd23:	jbe    43ccf5 <xmlStrEqual@plt+0x38db5>
  43cd25:	mov    rdi,rbp
  43cd28:	cmp    edx,eax
  43cd2a:	jbe    43cd4e <xmlStrEqual@plt+0x38e0e>
  43cd2c:	jmp    43ccf5 <xmlStrEqual@plt+0x38db5>
  43cd2e:	xchg   ax,ax
  43cd30:	add    edx,0x3
  43cd33:	and    edx,0xfffffffc
  43cd36:	sub    r8d,edx
  43cd39:	add    rdi,rdx
  43cd3c:	cmp    r8d,0xf
  43cd40:	jbe    43ccf5 <xmlStrEqual@plt+0x38db5>
  43cd42:	mov    edx,DWORD PTR [rdi]
  43cd44:	cmp    r8d,edx
  43cd47:	jb     43ccf5 <xmlStrEqual@plt+0x38db5>
  43cd49:	cmp    edx,0xf
  43cd4c:	jbe    43ccf5 <xmlStrEqual@plt+0x38db5>
  43cd4e:	cmp    WORD PTR [rdi+0x4],0x18
  43cd53:	jne    43cd30 <xmlStrEqual@plt+0x38df0>
  43cd55:	lea    ecx,[rdx-0x1c]
  43cd58:	lea    rsi,[rdi+0x1c]
  43cd5c:	cmp    ecx,0x3
  43cd5f:	jle    43cd30 <xmlStrEqual@plt+0x38df0>
  43cd61:	movzx  eax,WORD PTR [rdi+0x1c]
  43cd65:	cmp    ax,0x3
  43cd69:	jbe    43cd30 <xmlStrEqual@plt+0x38df0>
  43cd6b:	cmp    eax,ecx
  43cd6d:	jg     43cd30 <xmlStrEqual@plt+0x38df0>
  43cd6f:	cmp    WORD PTR [rdi+0x1e],0x7
  43cd74:	je     43cda4 <xmlStrEqual@plt+0x38e64>
  43cd76:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43cd80:	add    eax,0x3
  43cd83:	and    eax,0xfffffffc
  43cd86:	sub    ecx,eax
  43cd88:	add    rsi,rax
  43cd8b:	cmp    ecx,0x3
  43cd8e:	jle    43cd30 <xmlStrEqual@plt+0x38df0>
  43cd90:	movzx  eax,WORD PTR [rsi]
  43cd93:	cmp    ax,0x3
  43cd97:	jbe    43cd30 <xmlStrEqual@plt+0x38df0>
  43cd99:	cmp    eax,ecx
  43cd9b:	jg     43cd30 <xmlStrEqual@plt+0x38df0>
  43cd9d:	cmp    WORD PTR [rsi+0x2],0x7
  43cda2:	jne    43cd80 <xmlStrEqual@plt+0x38e40>
  43cda4:	movzx  edx,BYTE PTR [rsp+0x40]
  43cda9:	lea    rbp,[rsp+0x10]
  43cdae:	add    rsi,0x4
  43cdb2:	mov    rdi,rbp
  43cdb5:	call   425480 <xmlStrEqual@plt+0x21540>
  43cdba:	mov    edi,ebx
  43cdbc:	call   403f30 <close@plt>
  43cdc1:	mov    rdi,rbp
  43cdc4:	call   425060 <xmlStrEqual@plt+0x21120>
  43cdc9:	mov    rbx,QWORD PTR [rsp+0x2038]
  43cdd1:	xor    rbx,QWORD PTR fs:0x28
  43cdda:	jne    43ceb0 <xmlStrEqual@plt+0x38f70>
  43cde0:	add    rsp,0x2040
  43cde7:	pop    rbx
  43cde8:	pop    rbp
  43cde9:	pop    r12
  43cdeb:	pop    r13
  43cded:	pop    r14
  43cdef:	ret    
  43cdf0:	xor    edx,edx
  43cdf2:	mov    esi,0x3
  43cdf7:	mov    edi,0x10
  43cdfc:	mov    DWORD PTR [rsp+0xc],0x40
  43ce04:	call   403880 <socket@plt>
  43ce09:	mov    ebx,eax
  43ce0b:	test   eax,eax
  43ce0d:	js     43ce66 <xmlStrEqual@plt+0x38f26>
  43ce0f:	mov    rsi,rbp
  43ce12:	mov    edx,0xc
  43ce17:	mov    edi,eax
  43ce19:	lea    rbp,[rsp+0x30]
  43ce1e:	call   403820 <bind@plt>
  43ce23:	mov    edx,0x1000
  43ce28:	xor    esi,esi
  43ce2a:	mov    rdi,rbp
  43ce2d:	call   4039f0 <memset@plt>
  43ce32:	mov    eax,0x4fe
  43ce37:	mov    WORD PTR [rsp+0x44],ax
  43ce3c:	mov    DWORD PTR [rsp+0x34],0x1001a
  43ce44:	mov    BYTE PTR [rsp+0x40],0x2
  43ce49:	mov    BYTE PTR [rsp+0x47],0x1
  43ce4e:	mov    eax,0x20
  43ce53:	jmp    43cca0 <xmlStrEqual@plt+0x38d60>
  43ce58:	mov    edi,ebx
  43ce5a:	call   403f30 <close@plt>
  43ce5f:	xor    eax,eax
  43ce61:	jmp    43cdc9 <xmlStrEqual@plt+0x38e89>
  43ce66:	xor    eax,eax
  43ce68:	lea    rsi,[rip+0x16161]        # 452fd0 <xmlStrEqual@plt+0x4f090>
  43ce6f:	mov    edi,0x2
  43ce74:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  43ce79:	xor    eax,eax
  43ce7b:	jmp    43cdc9 <xmlStrEqual@plt+0x38e89>
  43ce80:	call   4037f0 <__errno_location@plt>
  43ce85:	mov    edi,DWORD PTR [rax]
  43ce87:	call   403910 <strerror@plt>
  43ce8c:	mov    rdx,rax
  43ce8f:	lea    rsi,[rip+0x1617a]        # 453010 <xmlStrEqual@plt+0x4f0d0>
  43ce96:	mov    edi,0x1
  43ce9b:	xor    eax,eax
  43ce9d:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  43cea2:	mov    edi,ebx
  43cea4:	call   403f30 <close@plt>
  43cea9:	xor    eax,eax
  43ceab:	jmp    43cdc9 <xmlStrEqual@plt+0x38e89>
  43ceb0:	call   403c00 <__stack_chk_fail@plt>
  43ceb5:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  43cec0:	endbr64 
  43cec4:	push   r13
  43cec6:	push   r12
  43cec8:	push   rbp
  43cec9:	push   rbx
  43ceca:	sub    rsp,0x1000
  43ced1:	or     QWORD PTR [rsp],0x0
  43ced6:	sub    rsp,0x1000
  43cedd:	or     QWORD PTR [rsp],0x0
  43cee2:	sub    rsp,0x18
  43cee6:	mov    rax,QWORD PTR fs:0x28
  43ceef:	mov    QWORD PTR [rsp+0x2008],rax
  43cef7:	xor    eax,eax
  43cef9:	mov    rbx,rdi
  43cefc:	call   403850 <if_nametoindex@plt>
  43cf01:	test   eax,eax
  43cf03:	je     43d00b <xmlStrEqual@plt+0x390cb>
  43cf09:	mov    r13d,eax
  43cf0c:	xor    eax,eax
  43cf0e:	call   439620 <xmlStrEqual@plt+0x356e0>
  43cf13:	mov    ebp,eax
  43cf15:	cmp    eax,0xfffffff7
  43cf18:	je     43d029 <xmlStrEqual@plt+0x390e9>
  43cf1e:	mov    r8,rsp
  43cf21:	mov    rdi,r8
  43cf24:	mov    edx,0x1000
  43cf29:	xor    esi,esi
  43cf2b:	call   4039f0 <memset@plt>
  43cf30:	mov    r8,rax
  43cf33:	xor    ecx,ecx
  43cf35:	movabs rax,0x301001200000020
  43cf3f:	mov    edx,0x20
  43cf44:	mov    rsi,r8
  43cf47:	mov    edi,ebp
  43cf49:	mov    QWORD PTR [rsp],rax
  43cf4d:	mov    BYTE PTR [rsp+0x10],0x11
  43cf52:	call   4039c0 <send@plt>
  43cf57:	mov    r12d,0xfffffffa
  43cf5d:	lea    rbx,[rsp+0x1000]
  43cf65:	test   eax,eax
  43cf67:	js     43d041 <xmlStrEqual@plt+0x39101>
  43cf6d:	nop    DWORD PTR [rax]
  43cf70:	mov    ecx,0x40
  43cf75:	mov    edx,0x1000
  43cf7a:	mov    rsi,rbx
  43cf7d:	mov    edi,ebp
  43cf7f:	call   403900 <recv@plt>
  43cf84:	test   eax,eax
  43cf86:	jle    43cfe0 <xmlStrEqual@plt+0x390a0>
  43cf88:	mov    ecx,eax
  43cf8a:	cmp    eax,0xf
  43cf8d:	jbe    43cf70 <xmlStrEqual@plt+0x39030>
  43cf8f:	mov    edx,DWORD PTR [rsp+0x1000]
  43cf96:	cmp    edx,eax
  43cf98:	ja     43cf70 <xmlStrEqual@plt+0x39030>
  43cf9a:	mov    rax,rbx
  43cf9d:	jmp    43cfb6 <xmlStrEqual@plt+0x39076>
  43cf9f:	nop
  43cfa0:	add    edx,0x3
  43cfa3:	and    edx,0xfffffffc
  43cfa6:	sub    ecx,edx
  43cfa8:	add    rax,rdx
  43cfab:	cmp    ecx,0xf
  43cfae:	jbe    43cf70 <xmlStrEqual@plt+0x39030>
  43cfb0:	mov    edx,DWORD PTR [rax]
  43cfb2:	cmp    ecx,edx
  43cfb4:	jb     43cf70 <xmlStrEqual@plt+0x39030>
  43cfb6:	cmp    edx,0xf
  43cfb9:	jbe    43cf70 <xmlStrEqual@plt+0x39030>
  43cfbb:	cmp    WORD PTR [rax+0x4],0x10
  43cfc0:	jne    43cfa0 <xmlStrEqual@plt+0x39060>
  43cfc2:	cmp    DWORD PTR [rax+0x14],r13d
  43cfc6:	jne    43cfa0 <xmlStrEqual@plt+0x39060>
  43cfc8:	mov    r12d,DWORD PTR [rax+0x18]
  43cfcc:	shr    r12d,0x6
  43cfd0:	and    r12d,0x1
  43cfd4:	jmp    43cf70 <xmlStrEqual@plt+0x39030>
  43cfd6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43cfe0:	mov    edi,ebp
  43cfe2:	call   403f30 <close@plt>
  43cfe7:	mov    rsi,QWORD PTR [rsp+0x2008]
  43cfef:	xor    rsi,QWORD PTR fs:0x28
  43cff8:	mov    eax,r12d
  43cffb:	jne    43d075 <xmlStrEqual@plt+0x39135>
  43cffd:	add    rsp,0x2018
  43d004:	pop    rbx
  43d005:	pop    rbp
  43d006:	pop    r12
  43d008:	pop    r13
  43d00a:	ret    
  43d00b:	mov    rdx,rbx
  43d00e:	lea    rsi,[rip+0x16033]        # 453048 <xmlStrEqual@plt+0x4f108>
  43d015:	mov    edi,0x2
  43d01a:	xor    eax,eax
  43d01c:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  43d021:	mov    r12d,0xfffffffa
  43d027:	jmp    43cfe7 <xmlStrEqual@plt+0x390a7>
  43d029:	lea    rsi,[rip+0x16048]        # 453078 <xmlStrEqual@plt+0x4f138>
  43d030:	mov    edi,0x2
  43d035:	xor    eax,eax
  43d037:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  43d03c:	mov    r12d,ebp
  43d03f:	jmp    43cfe7 <xmlStrEqual@plt+0x390a7>
  43d041:	call   4037f0 <__errno_location@plt>
  43d046:	mov    edi,DWORD PTR [rax]
  43d048:	mov    r12d,0xfffffff7
  43d04e:	call   403910 <strerror@plt>
  43d053:	mov    rdx,rax
  43d056:	lea    rsi,[rip+0x16053]        # 4530b0 <xmlStrEqual@plt+0x4f170>
  43d05d:	mov    edi,0x2
  43d062:	xor    eax,eax
  43d064:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  43d069:	mov    edi,ebp
  43d06b:	call   403f30 <close@plt>
  43d070:	jmp    43cfe7 <xmlStrEqual@plt+0x390a7>
  43d075:	call   403c00 <__stack_chk_fail@plt>
  43d07a:	nop    WORD PTR [rax+rax*1+0x0]
  43d080:	endbr64 
  43d084:	push   rbp
  43d085:	push   rbx
  43d086:	sub    rsp,0x1000
  43d08d:	or     QWORD PTR [rsp],0x0
  43d092:	sub    rsp,0x18
  43d096:	mov    edx,0x1000
  43d09b:	mov    r8,rsp
  43d09e:	mov    ebx,edi
  43d0a0:	mov    ebp,esi
  43d0a2:	mov    rdi,r8
  43d0a5:	xor    esi,esi
  43d0a7:	mov    rax,QWORD PTR fs:0x28
  43d0b0:	mov    QWORD PTR [rsp+0x1008],rax
  43d0b8:	xor    eax,eax
  43d0ba:	call   4039f0 <memset@plt>
  43d0bf:	mov    r8,rax
  43d0c2:	movabs rax,0x301001a0000001c
  43d0cc:	mov    QWORD PTR [rsp],rax
  43d0d0:	test   ebx,ebx
  43d0d2:	mov    eax,0xfe
  43d0d7:	cmove  ebx,eax
  43d0da:	mov    rax,0x469dc0
  43d0e1:	mov    BYTE PTR [rsp+0x10],bpl
  43d0e6:	mov    BYTE PTR [rsp+0x14],bl
  43d0ea:	mov    BYTE PTR [rsp+0x15],0x4
  43d0ef:	mov    BYTE PTR [rsp+0x17],0x1
  43d0f4:	mov    rax,QWORD PTR [rax+0x68]
  43d0f8:	mov    edx,0x1c
  43d0fd:	mov    edi,DWORD PTR [rax]
  43d0ff:	xor    ecx,ecx
  43d101:	mov    rsi,r8
  43d104:	call   4039c0 <send@plt>
  43d109:	mov    edx,0x1
  43d10e:	test   eax,eax
  43d110:	js     43d138 <xmlStrEqual@plt+0x391f8>
  43d112:	mov    rcx,QWORD PTR [rsp+0x1008]
  43d11a:	xor    rcx,QWORD PTR fs:0x28
  43d123:	mov    eax,edx
  43d125:	jne    43d15e <xmlStrEqual@plt+0x3921e>
  43d127:	add    rsp,0x1018
  43d12e:	pop    rbx
  43d12f:	pop    rbp
  43d130:	ret    
  43d131:	nop    DWORD PTR [rax+0x0]
  43d138:	call   4037f0 <__errno_location@plt>
  43d13d:	mov    edi,DWORD PTR [rax]
  43d13f:	call   403910 <strerror@plt>
  43d144:	mov    rdx,rax
  43d147:	lea    rsi,[rip+0x15f9a]        # 4530e8 <xmlStrEqual@plt+0x4f1a8>
  43d14e:	mov    edi,0x1
  43d153:	xor    eax,eax
  43d155:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  43d15a:	xor    edx,edx
  43d15c:	jmp    43d112 <xmlStrEqual@plt+0x391d2>
  43d15e:	call   403c00 <__stack_chk_fail@plt>
  43d163:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  43d16e:	xchg   ax,ax
  43d170:	endbr64 
  43d174:	push   r13
  43d176:	xor    edx,edx
  43d178:	mov    r13,rdi
  43d17b:	push   r12
  43d17d:	mov    edi,0x2
  43d182:	push   rbp
  43d183:	mov    rbp,rsi
  43d186:	mov    esi,0x2
  43d18b:	push   rbx
  43d18c:	sub    rsp,0x38
  43d190:	mov    rbx,rsp
  43d193:	mov    rax,QWORD PTR fs:0x28
  43d19c:	mov    QWORD PTR [rsp+0x28],rax
  43d1a1:	xor    eax,eax
  43d1a3:	call   403880 <socket@plt>
  43d1a8:	mov    r12d,eax
  43d1ab:	vpxor  xmm0,xmm0,xmm0
  43d1af:	mov    eax,0x2
  43d1b4:	mov    edx,0xf
  43d1b9:	mov    rsi,r13
  43d1bc:	mov    rdi,rbx
  43d1bf:	vmovaps XMMWORD PTR [rsp+0x10],xmm0
  43d1c5:	vmovaps XMMWORD PTR [rsp],xmm0
  43d1ca:	mov    QWORD PTR [rsp+0x20],0x0
  43d1d3:	mov    WORD PTR [rsp+0x10],ax
  43d1d8:	call   4039e0 <strncpy@plt>
  43d1dd:	mov    rdx,rbx
  43d1e0:	mov    esi,0x8927
  43d1e5:	mov    edi,r12d
  43d1e8:	xor    eax,eax
  43d1ea:	call   403d30 <ioctl@plt>
  43d1ef:	mov    edi,r12d
  43d1f2:	call   403f30 <close@plt>
  43d1f7:	xor    eax,eax
  43d1f9:	lea    rdx,[rbx+0x12]
  43d1fd:	nop    DWORD PTR [rax]
  43d200:	movzx  ecx,BYTE PTR [rdx+rax*1]
  43d204:	mov    BYTE PTR [rbp+rax*1+0x0],cl
  43d208:	inc    rax
  43d20b:	cmp    rax,0x6
  43d20f:	jne    43d200 <xmlStrEqual@plt+0x392c0>
  43d211:	mov    rax,QWORD PTR [rsp+0x28]
  43d216:	xor    rax,QWORD PTR fs:0x28
  43d21f:	jne    43d22c <xmlStrEqual@plt+0x392ec>
  43d221:	add    rsp,0x38
  43d225:	pop    rbx
  43d226:	pop    rbp
  43d227:	pop    r12
  43d229:	pop    r13
  43d22b:	ret    
  43d22c:	call   403c00 <__stack_chk_fail@plt>
  43d231:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  43d23c:	nop    DWORD PTR [rax+0x0]
  43d240:	endbr64 
  43d244:	push   r14
  43d246:	push   r13
  43d248:	push   r12
  43d24a:	push   rbp
  43d24b:	push   rbx
  43d24c:	sub    rsp,0x420
  43d253:	mov    r13,0x469e3c
  43d25a:	mov    rax,QWORD PTR fs:0x28
  43d263:	mov    QWORD PTR [rsp+0x418],rax
  43d26b:	xor    eax,eax
  43d26d:	mov    esi,DWORD PTR [r13+0x0]
  43d271:	test   esi,esi
  43d273:	jle    43d286 <xmlStrEqual@plt+0x39346>
  43d275:	lea    rsi,[rip+0x15ea4]        # 453120 <xmlStrEqual@plt+0x4f1e0>
  43d27c:	mov    edi,0x5
  43d281:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  43d286:	lea    rdi,[rsp+0x8]
  43d28b:	call   403f10 <getifaddrs@plt>
  43d290:	cmp    eax,0xffffffff
  43d293:	je     43d3b8 <xmlStrEqual@plt+0x39478>
  43d299:	mov    rdi,QWORD PTR [rip+0x2bd20]        # 468fc0 <xmlStrEqual@plt+0x65080>
  43d2a0:	call   43a0a0 <xmlStrEqual@plt+0x36160>
  43d2a5:	mov    rbx,QWORD PTR [rsp+0x8]
  43d2aa:	mov    r12,rax
  43d2ad:	test   rbx,rbx
  43d2b0:	je     43d385 <xmlStrEqual@plt+0x39445>
  43d2b6:	lea    rbp,[rsp+0x10]
  43d2bb:	jmp    43d310 <xmlStrEqual@plt+0x393d0>
  43d2bd:	nop    DWORD PTR [rax]
  43d2c0:	mov    rdi,QWORD PTR [rbx+0x8]
  43d2c4:	call   403ed0 <strdup@plt>
  43d2c9:	mov    rdi,rbp
  43d2cc:	mov    r14,rax
  43d2cf:	call   403ed0 <strdup@plt>
  43d2d4:	mov    rsi,rax
  43d2d7:	mov    rdx,r14
  43d2da:	mov    rdi,r12
  43d2dd:	call   43a0e0 <xmlStrEqual@plt+0x361a0>
  43d2e2:	cmp    DWORD PTR [r13+0x0],0x1
  43d2e7:	jle    43d308 <xmlStrEqual@plt+0x393c8>
  43d2e9:	mov    rdx,QWORD PTR [rbx+0x8]
  43d2ed:	mov    rcx,rbp
  43d2f0:	lea    rsi,[rip+0x15ec1]        # 4531b8 <xmlStrEqual@plt+0x4f278>
  43d2f7:	mov    edi,0x6
  43d2fc:	xor    eax,eax
  43d2fe:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  43d303:	nop    DWORD PTR [rax+rax*1+0x0]
  43d308:	mov    rbx,QWORD PTR [rbx]
  43d30b:	test   rbx,rbx
  43d30e:	je     43d380 <xmlStrEqual@plt+0x39440>
  43d310:	mov    rdi,QWORD PTR [rbx+0x18]
  43d314:	test   rdi,rdi
  43d317:	je     43d308 <xmlStrEqual@plt+0x393c8>
  43d319:	movzx  eax,WORD PTR [rdi]
  43d31c:	mov    edx,eax
  43d31e:	and    edx,0xfffffff7
  43d321:	cmp    dx,0x2
  43d325:	jne    43d308 <xmlStrEqual@plt+0x393c8>
  43d327:	cmp    ax,0x2
  43d32b:	mov    esi,0x10
  43d330:	mov    eax,0x1c
  43d335:	cmovne esi,eax
  43d338:	sub    rsp,0x8
  43d33c:	push   0x1
  43d33e:	mov    ecx,0x401
  43d343:	mov    rdx,rbp
  43d346:	xor    r9d,r9d
  43d349:	xor    r8d,r8d
  43d34c:	call   403a50 <getnameinfo@plt>
  43d351:	pop    rdx
  43d352:	pop    rcx
  43d353:	test   eax,eax
  43d355:	je     43d2c0 <xmlStrEqual@plt+0x39380>
  43d35b:	mov    edi,eax
  43d35d:	call   403d00 <gai_strerror@plt>
  43d362:	mov    rdx,rax
  43d365:	lea    rsi,[rip+0x15e1c]        # 453188 <xmlStrEqual@plt+0x4f248>
  43d36c:	mov    edi,0x3
  43d371:	xor    eax,eax
  43d373:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  43d378:	mov    rbx,QWORD PTR [rbx]
  43d37b:	test   rbx,rbx
  43d37e:	jne    43d310 <xmlStrEqual@plt+0x393d0>
  43d380:	mov    rbx,QWORD PTR [rsp+0x8]
  43d385:	mov    rdi,rbx
  43d388:	call   403e80 <freeifaddrs@plt>
  43d38d:	mov    rcx,QWORD PTR [rsp+0x418]
  43d395:	xor    rcx,QWORD PTR fs:0x28
  43d39e:	mov    rax,r12
  43d3a1:	jne    43d3d7 <xmlStrEqual@plt+0x39497>
  43d3a3:	add    rsp,0x420
  43d3aa:	pop    rbx
  43d3ab:	pop    rbp
  43d3ac:	pop    r12
  43d3ae:	pop    r13
  43d3b0:	pop    r14
  43d3b2:	ret    
  43d3b3:	nop    DWORD PTR [rax+rax*1+0x0]
  43d3b8:	xor    eax,eax
  43d3ba:	lea    rsi,[rip+0x15d8f]        # 453150 <xmlStrEqual@plt+0x4f210>
  43d3c1:	mov    edi,0x1
  43d3c6:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  43d3cb:	xor    eax,eax
  43d3cd:	call   43f9f0 <xmlStrEqual@plt+0x3bab0>
  43d3d2:	jmp    43d299 <xmlStrEqual@plt+0x39359>
  43d3d7:	call   403c00 <__stack_chk_fail@plt>
  43d3dc:	nop    DWORD PTR [rax+0x0]
  43d3e0:	endbr64 
  43d3e4:	push   r15
  43d3e6:	push   r14
  43d3e8:	push   r13
  43d3ea:	push   r12
  43d3ec:	push   rbp
  43d3ed:	push   rbx
  43d3ee:	sub    rsp,0x1000
  43d3f5:	or     QWORD PTR [rsp],0x0
  43d3fa:	sub    rsp,0x1000
  43d401:	or     QWORD PTR [rsp],0x0
  43d406:	sub    rsp,0x68
  43d40a:	vpxor  xmm0,xmm0,xmm0
  43d40e:	mov    QWORD PTR [rsp+0x18],rdi
  43d413:	mov    ebx,esi
  43d415:	lea    rbp,[rsp+0x24]
  43d41a:	mov    rax,QWORD PTR fs:0x28
  43d423:	mov    QWORD PTR [rsp+0x2058],rax
  43d42b:	xor    eax,eax
  43d42d:	vmovaps XMMWORD PTR [rsp+0x40],xmm0
  43d433:	vmovaps XMMWORD PTR [rsp+0x30],xmm0
  43d439:	mov    DWORD PTR [rsp+0x48],0x1
  43d441:	call   403850 <if_nametoindex@plt>
  43d446:	xor    edx,edx
  43d448:	mov    DWORD PTR [rsp+0x8],eax
  43d44c:	cmp    ebx,0x2
  43d44f:	mov    DWORD PTR [rsp+0x26],0x0
  43d457:	mov    eax,0x400
  43d45c:	mov    WORD PTR [rbp+0x6],dx
  43d460:	mov    edx,0x40
  43d465:	cmove  eax,edx
  43d468:	mov    ecx,0x10
  43d46d:	xor    edx,edx
  43d46f:	mov    esi,0x3
  43d474:	mov    edi,0x10
  43d479:	mov    WORD PTR [rsp+0x24],cx
  43d47e:	mov    DWORD PTR [rsp+0x2c],eax
  43d482:	call   403880 <socket@plt>
  43d487:	mov    DWORD PTR [rsp+0xc],eax
  43d48b:	test   eax,eax
  43d48d:	js     43d6b3 <xmlStrEqual@plt+0x39773>
  43d493:	mov    r14d,DWORD PTR [rsp+0xc]
  43d498:	mov    edx,0xc
  43d49d:	mov    rsi,rbp
  43d4a0:	mov    edi,r14d
  43d4a3:	call   403820 <bind@plt>
  43d4a8:	lea    r8,[rsp+0x50]
  43d4ad:	mov    rdi,r8
  43d4b0:	mov    edx,0x1000
  43d4b5:	xor    esi,esi
  43d4b7:	call   4039f0 <memset@plt>
  43d4bc:	mov    r8,rax
  43d4bf:	movabs rax,0x301001a0000001c
  43d4c9:	mov    QWORD PTR [rsp+0x50],rax
  43d4ce:	mov    edi,r14d
  43d4d1:	mov    eax,0x4fe
  43d4d6:	xor    ecx,ecx
  43d4d8:	mov    edx,0x1c
  43d4dd:	mov    rsi,r8
  43d4e0:	mov    BYTE PTR [rsp+0x60],bl
  43d4e4:	mov    WORD PTR [rsp+0x64],ax
  43d4e9:	mov    BYTE PTR [rsp+0x67],0x1
  43d4ee:	call   4039c0 <send@plt>
  43d4f3:	lea    rdi,[rsp+0x1050]
  43d4fb:	mov    QWORD PTR [rsp+0x10],rdi
  43d500:	lea    rdi,[rsp+0x30]
  43d505:	mov    QWORD PTR [rsp],rdi
  43d509:	test   eax,eax
  43d50b:	js     43d6ca <xmlStrEqual@plt+0x3978a>
  43d511:	nop    DWORD PTR [rax+0x0]
  43d518:	mov    r15,QWORD PTR [rsp+0x10]
  43d51d:	mov    edi,DWORD PTR [rsp+0xc]
  43d521:	mov    ecx,0x40
  43d526:	mov    edx,0x1000
  43d52b:	mov    rsi,r15
  43d52e:	call   403900 <recv@plt>
  43d533:	test   eax,eax
  43d535:	jle    43d682 <xmlStrEqual@plt+0x39742>
  43d53b:	mov    r14d,eax
  43d53e:	cmp    eax,0xf
  43d541:	jbe    43d518 <xmlStrEqual@plt+0x395d8>
  43d543:	mov    ecx,DWORD PTR [rsp+0x1050]
  43d54a:	cmp    ecx,eax
  43d54c:	ja     43d518 <xmlStrEqual@plt+0x395d8>
  43d54e:	cmp    ecx,0xf
  43d551:	ja     43d57a <xmlStrEqual@plt+0x3963a>
  43d553:	jmp    43d518 <xmlStrEqual@plt+0x395d8>
  43d555:	nop    DWORD PTR [rax]
  43d558:	mov    eax,DWORD PTR [r15]
  43d55b:	add    eax,0x3
  43d55e:	and    eax,0xfffffffc
  43d561:	sub    r14d,eax
  43d564:	add    r15,rax
  43d567:	cmp    r14d,0xf
  43d56b:	jbe    43d518 <xmlStrEqual@plt+0x395d8>
  43d56d:	mov    ecx,DWORD PTR [r15]
  43d570:	cmp    ecx,0xf
  43d573:	jbe    43d518 <xmlStrEqual@plt+0x395d8>
  43d575:	cmp    r14d,ecx
  43d578:	jb     43d518 <xmlStrEqual@plt+0x395d8>
  43d57a:	cmp    WORD PTR [r15+0x4],0x18
  43d580:	jne    43d558 <xmlStrEqual@plt+0x39618>
  43d582:	lea    ebp,[rcx-0x1c]
  43d585:	lea    r12,[r15+0x1c]
  43d589:	cmp    ebp,0x3
  43d58c:	jle    43d558 <xmlStrEqual@plt+0x39618>
  43d58e:	movzx  eax,WORD PTR [r15+0x1c]
  43d593:	cmp    ax,0x3
  43d597:	jbe    43d558 <xmlStrEqual@plt+0x39618>
  43d599:	cmp    ebp,eax
  43d59b:	jl     43d558 <xmlStrEqual@plt+0x39618>
  43d59d:	xor    r13d,r13d
  43d5a0:	xor    ebx,ebx
  43d5a2:	jmp    43d5e8 <xmlStrEqual@plt+0x396a8>
  43d5a4:	nop    DWORD PTR [rax+0x0]
  43d5a8:	cmp    ax,0x5
  43d5ac:	jne    43d5c4 <xmlStrEqual@plt+0x39684>
  43d5ae:	movzx  edx,BYTE PTR [rsp+0x60]
  43d5b3:	mov    rdi,QWORD PTR [rsp]
  43d5b7:	lea    rsi,[r12+0x4]
  43d5bc:	call   425480 <xmlStrEqual@plt+0x21540>
  43d5c1:	inc    r13d
  43d5c4:	movzx  eax,WORD PTR [r12]
  43d5c9:	add    eax,0x3
  43d5cc:	and    eax,0xfffffffc
  43d5cf:	sub    ebp,eax
  43d5d1:	add    r12,rax
  43d5d4:	cmp    ebp,0x3
  43d5d7:	jle    43d600 <xmlStrEqual@plt+0x396c0>
  43d5d9:	movzx  eax,WORD PTR [r12]
  43d5de:	cmp    ax,0x3
  43d5e2:	jbe    43d600 <xmlStrEqual@plt+0x396c0>
  43d5e4:	cmp    eax,ebp
  43d5e6:	jg     43d600 <xmlStrEqual@plt+0x396c0>
  43d5e8:	movzx  eax,WORD PTR [r12+0x2]
  43d5ee:	cmp    ax,0x4
  43d5f2:	jne    43d5a8 <xmlStrEqual@plt+0x39668>
  43d5f4:	mov    ebx,DWORD PTR [r12+0x4]
  43d5f9:	inc    r13d
  43d5fc:	jmp    43d5c4 <xmlStrEqual@plt+0x39684>
  43d5fe:	xchg   ax,ax
  43d600:	cmp    ebx,DWORD PTR [rsp+0x8]
  43d604:	jne    43d558 <xmlStrEqual@plt+0x39618>
  43d60a:	cmp    r13d,0x2
  43d60e:	jne    43d558 <xmlStrEqual@plt+0x39618>
  43d614:	mov    edi,DWORD PTR [rsp+0xc]
  43d618:	lea    rbx,[rsp+0x30]
  43d61d:	call   403f30 <close@plt>
  43d622:	mov    rax,0x469e3c
  43d629:	cmp    DWORD PTR [rax],0x2
  43d62c:	jle    43d651 <xmlStrEqual@plt+0x39711>
  43d62e:	mov    rdi,rbx
  43d631:	call   424d40 <xmlStrEqual@plt+0x20e00>
  43d636:	mov    rdx,QWORD PTR [rsp+0x18]
  43d63b:	mov    rcx,rax
  43d63e:	lea    rsi,[rip+0x15c0b]        # 453250 <xmlStrEqual@plt+0x4f310>
  43d645:	mov    edi,0x7
  43d64a:	xor    eax,eax
  43d64c:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  43d651:	mov    rdi,rbx
  43d654:	call   425060 <xmlStrEqual@plt+0x21120>
  43d659:	mov    rdi,QWORD PTR [rsp+0x2058]
  43d661:	xor    rdi,QWORD PTR fs:0x28
  43d66a:	jne    43d6f3 <xmlStrEqual@plt+0x397b3>
  43d670:	add    rsp,0x2068
  43d677:	pop    rbx
  43d678:	pop    rbp
  43d679:	pop    r12
  43d67b:	pop    r13
  43d67d:	pop    r14
  43d67f:	pop    r15
  43d681:	ret    
  43d682:	mov    rax,0x469e3c
  43d689:	cmp    DWORD PTR [rax],0x2
  43d68c:	jle    43d6a6 <xmlStrEqual@plt+0x39766>
  43d68e:	mov    rdx,QWORD PTR [rsp+0x18]
  43d693:	lea    rsi,[rip+0x15bee]        # 453288 <xmlStrEqual@plt+0x4f348>
  43d69a:	mov    edi,0x7
  43d69f:	xor    eax,eax
  43d6a1:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  43d6a6:	mov    edi,DWORD PTR [rsp+0xc]
  43d6aa:	call   403f30 <close@plt>
  43d6af:	xor    eax,eax
  43d6b1:	jmp    43d659 <xmlStrEqual@plt+0x39719>
  43d6b3:	xor    eax,eax
  43d6b5:	lea    rsi,[rip+0x15b24]        # 4531e0 <xmlStrEqual@plt+0x4f2a0>
  43d6bc:	mov    edi,0x2
  43d6c1:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  43d6c6:	xor    eax,eax
  43d6c8:	jmp    43d659 <xmlStrEqual@plt+0x39719>
  43d6ca:	call   4037f0 <__errno_location@plt>
  43d6cf:	mov    edi,DWORD PTR [rax]
  43d6d1:	call   403910 <strerror@plt>
  43d6d6:	mov    rdx,rax
  43d6d9:	lea    rsi,[rip+0x15b38]        # 453218 <xmlStrEqual@plt+0x4f2d8>
  43d6e0:	xor    eax,eax
  43d6e2:	mov    edi,0x1
  43d6e7:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  43d6ec:	xor    eax,eax
  43d6ee:	jmp    43d659 <xmlStrEqual@plt+0x39719>
  43d6f3:	call   403c00 <__stack_chk_fail@plt>
  43d6f8:	nop    DWORD PTR [rax+rax*1+0x0]
  43d700:	endbr64 
  43d704:	push   r15
  43d706:	push   r14
  43d708:	mov    r14,rdi
  43d70b:	push   r13
  43d70d:	push   r12
  43d70f:	mov    r12d,esi
  43d712:	push   rbp
  43d713:	push   rbx
  43d714:	sub    rsp,0x48
  43d718:	mov    rdi,0x424bf0
  43d71f:	mov    rax,QWORD PTR fs:0x28
  43d728:	mov    QWORD PTR [rsp+0x38],rax
  43d72d:	xor    eax,eax
  43d72f:	call   42dca0 <xmlStrEqual@plt+0x29d60>
  43d734:	lea    rdi,[rsp+0x18]
  43d739:	mov    r13,rax
  43d73c:	call   403f10 <getifaddrs@plt>
  43d741:	test   eax,eax
  43d743:	jne    43d880 <xmlStrEqual@plt+0x39940>
  43d749:	mov    rbx,QWORD PTR [rsp+0x18]
  43d74e:	test   rbx,rbx
  43d751:	je     43d801 <xmlStrEqual@plt+0x398c1>
  43d757:	lea    rax,[rsp+0x20]
  43d75c:	mov    QWORD PTR [rsp+0x8],rax
  43d761:	nop    DWORD PTR [rax+0x0]
  43d768:	mov    rbp,QWORD PTR [rbx+0x18]
  43d76c:	test   rbp,rbp
  43d76f:	je     43d7f0 <xmlStrEqual@plt+0x398b0>
  43d771:	test   BYTE PTR [rbx+0x10],0x1
  43d775:	je     43d7f0 <xmlStrEqual@plt+0x398b0>
  43d777:	movzx  eax,WORD PTR [rbp+0x0]
  43d77b:	mov    r15d,eax
  43d77e:	cmp    eax,r12d
  43d781:	jne    43d7f0 <xmlStrEqual@plt+0x398b0>
  43d783:	mov    rdi,QWORD PTR [rbx+0x8]
  43d787:	mov    rsi,r14
  43d78a:	call   4037c0 <strcmp@plt>
  43d78f:	test   eax,eax
  43d791:	jne    43d7f0 <xmlStrEqual@plt+0x398b0>
  43d793:	cmp    r15w,0x2
  43d798:	je     43d8b8 <xmlStrEqual@plt+0x39978>
  43d79e:	cmp    r15w,0xa
  43d7a3:	jne    43d7f0 <xmlStrEqual@plt+0x398b0>
  43d7a5:	lea    rsi,[rbp+0x8]
  43d7a9:	mov    edx,0xa
  43d7ae:	mov    r15,QWORD PTR [rsp+0x8]
  43d7b3:	mov    rdi,r15
  43d7b6:	call   425e60 <xmlStrEqual@plt+0x21f20>
  43d7bb:	mov    rdi,r15
  43d7be:	call   426890 <xmlStrEqual@plt+0x22950>
  43d7c3:	cmp    eax,0x1
  43d7c6:	je     43d8d0 <xmlStrEqual@plt+0x39990>
  43d7cc:	xor    eax,eax
  43d7ce:	call   424be0 <xmlStrEqual@plt+0x20ca0>
  43d7d3:	mov    rsi,QWORD PTR [rsp+0x8]
  43d7d8:	mov    rbp,rax
  43d7db:	mov    rdi,rax
  43d7de:	call   4254a0 <xmlStrEqual@plt+0x21560>
  43d7e3:	mov    rsi,r13
  43d7e6:	mov    rdi,rbp
  43d7e9:	call   42dcf0 <xmlStrEqual@plt+0x29db0>
  43d7ee:	xchg   ax,ax
  43d7f0:	mov    rbx,QWORD PTR [rbx]
  43d7f3:	test   rbx,rbx
  43d7f6:	jne    43d768 <xmlStrEqual@plt+0x39828>
  43d7fc:	mov    rbx,QWORD PTR [rsp+0x18]
  43d801:	mov    rdi,rbx
  43d804:	call   403e80 <freeifaddrs@plt>
  43d809:	mov    eax,DWORD PTR [r13+0x18]
  43d80d:	test   eax,eax
  43d80f:	je     43d840 <xmlStrEqual@plt+0x39900>
  43d811:	mov    rcx,QWORD PTR [rsp+0x38]
  43d816:	xor    rcx,QWORD PTR fs:0x28
  43d81f:	mov    rax,r13
  43d822:	jne    43d908 <xmlStrEqual@plt+0x399c8>
  43d828:	add    rsp,0x48
  43d82c:	pop    rbx
  43d82d:	pop    rbp
  43d82e:	pop    r12
  43d830:	pop    r13
  43d832:	pop    r14
  43d834:	pop    r15
  43d836:	ret    
  43d837:	nop    WORD PTR [rax+rax*1+0x0]
  43d840:	mov    rax,0x469e3c
  43d847:	cmp    DWORD PTR [rax],0x2
  43d84a:	jle    43d811 <xmlStrEqual@plt+0x398d1>
  43d84c:	cmp    r12d,0x2
  43d850:	lea    rax,[rip+0xb06e]        # 4488c5 <xmlStrEqual@plt+0x44985>
  43d857:	lea    rdx,[rip+0xb062]        # 4488c0 <xmlStrEqual@plt+0x44980>
  43d85e:	cmovne rdx,rax
  43d862:	mov    rcx,r14
  43d865:	lea    rsi,[rip+0x15acc]        # 453338 <xmlStrEqual@plt+0x4f3f8>
  43d86c:	mov    edi,0x7
  43d871:	xor    eax,eax
  43d873:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  43d878:	jmp    43d811 <xmlStrEqual@plt+0x398d1>
  43d87a:	nop    WORD PTR [rax+rax*1+0x0]
  43d880:	mov    rax,0x469e3c
  43d887:	cmp    DWORD PTR [rax],0x1
  43d88a:	jle    43d811 <xmlStrEqual@plt+0x398d1>
  43d88c:	call   4037f0 <__errno_location@plt>
  43d891:	mov    edi,DWORD PTR [rax]
  43d893:	call   403910 <strerror@plt>
  43d898:	mov    rdx,rax
  43d89b:	lea    rsi,[rip+0x15a1e]        # 4532c0 <xmlStrEqual@plt+0x4f380>
  43d8a2:	mov    edi,0x6
  43d8a7:	xor    eax,eax
  43d8a9:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  43d8ae:	jmp    43d811 <xmlStrEqual@plt+0x398d1>
  43d8b3:	nop    DWORD PTR [rax+rax*1+0x0]
  43d8b8:	lea    rsi,[rbp+0x4]
  43d8bc:	mov    edx,0x2
  43d8c1:	jmp    43d7ae <xmlStrEqual@plt+0x3986e>
  43d8c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43d8d0:	mov    rax,0x469e3c
  43d8d7:	cmp    DWORD PTR [rax],0x1
  43d8da:	jle    43d7f0 <xmlStrEqual@plt+0x398b0>
  43d8e0:	mov    rdi,QWORD PTR [rsp+0x8]
  43d8e5:	call   426440 <xmlStrEqual@plt+0x22500>
  43d8ea:	mov    rcx,rax
  43d8ed:	mov    rdx,r14
  43d8f0:	lea    rsi,[rip+0x159f9]        # 4532f0 <xmlStrEqual@plt+0x4f3b0>
  43d8f7:	mov    edi,0x6
  43d8fc:	xor    eax,eax
  43d8fe:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  43d903:	jmp    43d7f0 <xmlStrEqual@plt+0x398b0>
  43d908:	call   403c00 <__stack_chk_fail@plt>
  43d90d:	nop    DWORD PTR [rax]
  43d910:	endbr64 
  43d914:	push   r13
  43d916:	mov    esi,0xa
  43d91b:	push   r12
  43d91d:	push   rbp
  43d91e:	push   rbx
  43d91f:	sub    rsp,0x8
  43d923:	call   43d700 <xmlStrEqual@plt+0x397c0>
  43d928:	mov    r13,0x474dc0
  43d92f:	mov    rbp,rax
  43d932:	mov    eax,DWORD PTR [r13+0x0]
  43d936:	test   eax,eax
  43d938:	jne    43d9e0 <xmlStrEqual@plt+0x39aa0>
  43d93e:	mov    rbx,QWORD PTR [rbp+0x8]
  43d942:	cmp    rbp,rbx
  43d945:	jne    43d95d <xmlStrEqual@plt+0x39a1d>
  43d947:	xor    r12d,r12d
  43d94a:	jmp    43d9e8 <xmlStrEqual@plt+0x39aa8>
  43d94f:	nop
  43d950:	mov    rbx,QWORD PTR [rbx+0x8]
  43d954:	cmp    rbp,rbx
  43d957:	je     43da00 <xmlStrEqual@plt+0x39ac0>
  43d95d:	mov    r12,QWORD PTR [rbx+0x10]
  43d961:	mov    rdi,r12
  43d964:	call   425cf0 <xmlStrEqual@plt+0x21db0>
  43d969:	mov    eax,DWORD PTR [rax]
  43d96b:	and    eax,0xe0
  43d970:	cmp    eax,0x20
  43d973:	jne    43d950 <xmlStrEqual@plt+0x39a10>
  43d975:	mov    rdi,r12
  43d978:	call   425060 <xmlStrEqual@plt+0x21120>
  43d97d:	mov    r12,rax
  43d980:	mov    eax,DWORD PTR [r13+0x0]
  43d984:	cmp    eax,0x1
  43d987:	jne    43d9e8 <xmlStrEqual@plt+0x39aa8>
  43d989:	mov    rbx,QWORD PTR [rbp+0x8]
  43d98d:	cmp    rbp,rbx
  43d990:	jne    43d9ad <xmlStrEqual@plt+0x39a6d>
  43d992:	jmp    43d9e8 <xmlStrEqual@plt+0x39aa8>
  43d994:	nop    DWORD PTR [rax+0x0]
  43d998:	and    eax,0xfe
  43d99d:	cmp    eax,0xfc
  43d9a2:	je     43d9cb <xmlStrEqual@plt+0x39a8b>
  43d9a4:	mov    rbx,QWORD PTR [rbx+0x8]
  43d9a8:	cmp    rbp,rbx
  43d9ab:	je     43d9e8 <xmlStrEqual@plt+0x39aa8>
  43d9ad:	mov    r13,QWORD PTR [rbx+0x10]
  43d9b1:	mov    rdi,r13
  43d9b4:	call   425cf0 <xmlStrEqual@plt+0x21db0>
  43d9b9:	mov    eax,DWORD PTR [rax]
  43d9bb:	mov    edx,eax
  43d9bd:	and    edx,0xc0ff
  43d9c3:	cmp    edx,0xc0fe
  43d9c9:	jne    43d998 <xmlStrEqual@plt+0x39a58>
  43d9cb:	mov    rdi,r13
  43d9ce:	call   425060 <xmlStrEqual@plt+0x21120>
  43d9d3:	mov    r12,rax
  43d9d6:	jmp    43d9e8 <xmlStrEqual@plt+0x39aa8>
  43d9d8:	nop    DWORD PTR [rax+rax*1+0x0]
  43d9e0:	xor    r12d,r12d
  43d9e3:	cmp    eax,0x1
  43d9e6:	je     43d989 <xmlStrEqual@plt+0x39a49>
  43d9e8:	mov    rdi,rbp
  43d9eb:	call   42e2b0 <xmlStrEqual@plt+0x2a370>
  43d9f0:	add    rsp,0x8
  43d9f4:	pop    rbx
  43d9f5:	pop    rbp
  43d9f6:	mov    rax,r12
  43d9f9:	pop    r12
  43d9fb:	pop    r13
  43d9fd:	ret    
  43d9fe:	xchg   ax,ax
  43da00:	mov    eax,DWORD PTR [r13+0x0]
  43da04:	xor    r12d,r12d
  43da07:	jmp    43d9e3 <xmlStrEqual@plt+0x39aa3>
  43da09:	nop    DWORD PTR [rax+0x0]
  43da10:	endbr64 
  43da14:	push   r14
  43da16:	vpxor  xmm0,xmm0,xmm0
  43da1a:	push   r13
  43da1c:	push   r12
  43da1e:	push   rbp
  43da1f:	push   rbx
  43da20:	sub    rsp,0x30
  43da24:	mov    rax,QWORD PTR fs:0x28
  43da2d:	mov    QWORD PTR [rsp+0x28],rax
  43da32:	xor    eax,eax
  43da34:	mov    eax,DWORD PTR [rdi]
  43da36:	vmovaps XMMWORD PTR [rsp+0x10],xmm0
  43da3c:	lea    r13d,[rax-0x18]
  43da40:	vmovaps XMMWORD PTR [rsp],xmm0
  43da45:	mov    DWORD PTR [rsp+0x18],0x1
  43da4d:	mov    ebp,DWORD PTR [rdi+0x14]
  43da50:	cmp    r13d,0x3
  43da54:	jle    43db20 <xmlStrEqual@plt+0x39be0>
  43da5a:	movzx  eax,WORD PTR [rdi+0x18]
  43da5e:	mov    r14,rdi
  43da61:	cmp    ax,0x3
  43da65:	jbe    43db20 <xmlStrEqual@plt+0x39be0>
  43da6b:	cmp    r13d,eax
  43da6e:	jl     43db20 <xmlStrEqual@plt+0x39be0>
  43da74:	lea    r12,[rdi+0x18]
  43da78:	mov    rbx,rsp
  43da7b:	jmp    43daab <xmlStrEqual@plt+0x39b6b>
  43da7d:	nop    DWORD PTR [rax]
  43da80:	movzx  eax,WORD PTR [r12]
  43da85:	add    eax,0x3
  43da88:	and    eax,0xfffffffc
  43da8b:	sub    r13d,eax
  43da8e:	add    r12,rax
  43da91:	cmp    r13d,0x3
  43da95:	jle    43db20 <xmlStrEqual@plt+0x39be0>
  43da9b:	movzx  eax,WORD PTR [r12]
  43daa0:	cmp    ax,0x3
  43daa4:	jbe    43db20 <xmlStrEqual@plt+0x39be0>
  43daa6:	cmp    eax,r13d
  43daa9:	jg     43db20 <xmlStrEqual@plt+0x39be0>
  43daab:	movzx  eax,BYTE PTR [r14+0x10]
  43dab0:	cmp    al,0x2
  43dab2:	je     43dae8 <xmlStrEqual@plt+0x39ba8>
  43dab4:	cmp    al,0xa
  43dab6:	jne    43da80 <xmlStrEqual@plt+0x39b40>
  43dab8:	cmp    WORD PTR [r12+0x2],0x1
  43dabf:	jne    43da80 <xmlStrEqual@plt+0x39b40>
  43dac1:	lea    rsi,[r12+0x4]
  43dac6:	mov    rdi,rbx
  43dac9:	mov    edx,0xa
  43dace:	call   425480 <xmlStrEqual@plt+0x21540>
  43dad3:	mov    rdx,rbx
  43dad6:	mov    esi,ebp
  43dad8:	mov    edi,0x1
  43dadd:	call   43c070 <xmlStrEqual@plt+0x38130>
  43dae2:	jmp    43da80 <xmlStrEqual@plt+0x39b40>
  43dae4:	nop    DWORD PTR [rax+0x0]
  43dae8:	cmp    WORD PTR [r12+0x2],0x2
  43daef:	jne    43da80 <xmlStrEqual@plt+0x39b40>
  43daf1:	lea    rsi,[r12+0x4]
  43daf6:	mov    edx,0x2
  43dafb:	mov    rdi,rbx
  43dafe:	call   425480 <xmlStrEqual@plt+0x21540>
  43db03:	mov    rdx,rbx
  43db06:	mov    esi,ebp
  43db08:	mov    edi,0x1
  43db0d:	call   43c070 <xmlStrEqual@plt+0x38130>
  43db12:	movzx  eax,BYTE PTR [r14+0x10]
  43db17:	jmp    43dab4 <xmlStrEqual@plt+0x39b74>
  43db19:	nop    DWORD PTR [rax+0x0]
  43db20:	mov    rax,QWORD PTR [rsp+0x28]
  43db25:	xor    rax,QWORD PTR fs:0x28
  43db2e:	jne    43db3d <xmlStrEqual@plt+0x39bfd>
  43db30:	add    rsp,0x30
  43db34:	pop    rbx
  43db35:	pop    rbp
  43db36:	pop    r12
  43db38:	pop    r13
  43db3a:	pop    r14
  43db3c:	ret    
  43db3d:	call   403c00 <__stack_chk_fail@plt>
  43db42:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  43db4d:	nop    DWORD PTR [rax]
  43db50:	endbr64 
  43db54:	push   rbp
  43db55:	vpxor  xmm0,xmm0,xmm0
  43db59:	push   rbx
  43db5a:	sub    rsp,0x38
  43db5e:	mov    rax,QWORD PTR fs:0x28
  43db67:	mov    QWORD PTR [rsp+0x28],rax
  43db6c:	xor    eax,eax
  43db6e:	mov    eax,DWORD PTR [rdi]
  43db70:	vmovaps XMMWORD PTR [rsp],xmm0
  43db75:	lea    edx,[rax-0x18]
  43db78:	vmovaps XMMWORD PTR [rsp+0x10],xmm0
  43db7e:	mov    ebp,DWORD PTR [rdi+0x14]
  43db81:	cmp    edx,0x3
  43db84:	jle    43dbf0 <xmlStrEqual@plt+0x39cb0>
  43db86:	movzx  eax,WORD PTR [rdi+0x18]
  43db8a:	cmp    ax,0x3
  43db8e:	jbe    43dbf0 <xmlStrEqual@plt+0x39cb0>
  43db90:	cmp    edx,eax
  43db92:	jl     43dbf0 <xmlStrEqual@plt+0x39cb0>
  43db94:	lea    rcx,[rdi+0x18]
  43db98:	movzx  esi,BYTE PTR [rdi+0x10]
  43db9c:	jmp    43dbca <xmlStrEqual@plt+0x39c8a>
  43db9e:	xchg   ax,ax
  43dba0:	cmp    sil,0xa
  43dba4:	jne    43dbad <xmlStrEqual@plt+0x39c6d>
  43dba6:	cmp    WORD PTR [rcx+0x2],0x1
  43dbab:	je     43dc16 <xmlStrEqual@plt+0x39cd6>
  43dbad:	add    eax,0x3
  43dbb0:	and    eax,0xfffffffc
  43dbb3:	sub    edx,eax
  43dbb5:	add    rcx,rax
  43dbb8:	cmp    edx,0x3
  43dbbb:	jle    43dbf0 <xmlStrEqual@plt+0x39cb0>
  43dbbd:	movzx  eax,WORD PTR [rcx]
  43dbc0:	cmp    ax,0x3
  43dbc4:	jbe    43dbf0 <xmlStrEqual@plt+0x39cb0>
  43dbc6:	cmp    eax,edx
  43dbc8:	jg     43dbf0 <xmlStrEqual@plt+0x39cb0>
  43dbca:	cmp    sil,0x2
  43dbce:	jne    43dba0 <xmlStrEqual@plt+0x39c60>
  43dbd0:	cmp    WORD PTR [rcx+0x2],0x2
  43dbd5:	jne    43dbad <xmlStrEqual@plt+0x39c6d>
  43dbd7:	mov    edx,0x2
  43dbdc:	mov    rbx,rsp
  43dbdf:	lea    rsi,[rcx+0x4]
  43dbe3:	mov    rdi,rbx
  43dbe6:	call   425480 <xmlStrEqual@plt+0x21540>
  43dbeb:	jmp    43dbf3 <xmlStrEqual@plt+0x39cb3>
  43dbed:	nop    DWORD PTR [rax]
  43dbf0:	mov    rbx,rsp
  43dbf3:	xor    edi,edi
  43dbf5:	mov    rdx,rbx
  43dbf8:	mov    esi,ebp
  43dbfa:	call   43c070 <xmlStrEqual@plt+0x38130>
  43dbff:	mov    rax,QWORD PTR [rsp+0x28]
  43dc04:	xor    rax,QWORD PTR fs:0x28
  43dc0d:	jne    43dc1d <xmlStrEqual@plt+0x39cdd>
  43dc0f:	add    rsp,0x38
  43dc13:	pop    rbx
  43dc14:	pop    rbp
  43dc15:	ret    
  43dc16:	mov    edx,0xa
  43dc1b:	jmp    43dbdc <xmlStrEqual@plt+0x39c9c>
  43dc1d:	call   403c00 <__stack_chk_fail@plt>
  43dc22:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  43dc2d:	nop    DWORD PTR [rax]
  43dc30:	endbr64 
  43dc34:	push   r12
  43dc36:	push   rbp
  43dc37:	mov    rbp,rdi
  43dc3a:	push   rbx
  43dc3b:	sub    rsp,0x20
  43dc3f:	mov    ebx,DWORD PTR [rdi+0x14]
  43dc42:	mov    rax,QWORD PTR fs:0x28
  43dc4b:	mov    QWORD PTR [rsp+0x18],rax
  43dc50:	xor    eax,eax
  43dc52:	mov    edi,ebx
  43dc54:	call   43ef80 <xmlStrEqual@plt+0x3b040>
  43dc59:	mov    edi,ebx
  43dc5b:	test   rax,rax
  43dc5e:	je     43dc90 <xmlStrEqual@plt+0x39d50>
  43dc60:	mov    edx,DWORD PTR [rbp+0x18]
  43dc63:	mov    esi,ebx
  43dc65:	shr    edx,0x6
  43dc68:	and    edx,0x1
  43dc6b:	call   43c530 <xmlStrEqual@plt+0x385f0>
  43dc70:	mov    rax,QWORD PTR [rsp+0x18]
  43dc75:	xor    rax,QWORD PTR fs:0x28
  43dc7e:	jne    43dcdc <xmlStrEqual@plt+0x39d9c>
  43dc80:	add    rsp,0x20
  43dc84:	pop    rbx
  43dc85:	pop    rbp
  43dc86:	pop    r12
  43dc88:	ret    
  43dc89:	nop    DWORD PTR [rax+0x0]
  43dc90:	mov    r12,rsp
  43dc93:	mov    rsi,r12
  43dc96:	call   403f00 <if_indextoname@plt>
  43dc9b:	test   rax,rax
  43dc9e:	je     43dcb8 <xmlStrEqual@plt+0x39d78>
  43dca0:	mov    rdi,r12
  43dca3:	call   43ef10 <xmlStrEqual@plt+0x3afd0>
  43dca8:	test   rax,rax
  43dcab:	je     43dcb8 <xmlStrEqual@plt+0x39d78>
  43dcad:	mov    edi,DWORD PTR [rax+0x8]
  43dcb0:	jmp    43dc60 <xmlStrEqual@plt+0x39d20>
  43dcb2:	nop    WORD PTR [rax+rax*1+0x0]
  43dcb8:	mov    rax,0x469e3c
  43dcbf:	cmp    DWORD PTR [rax],0x1
  43dcc2:	jle    43dc70 <xmlStrEqual@plt+0x39d30>
  43dcc4:	mov    rdx,r12
  43dcc7:	lea    rsi,[rip+0x156b2]        # 453380 <xmlStrEqual@plt+0x4f440>
  43dcce:	mov    edi,0x6
  43dcd3:	xor    eax,eax
  43dcd5:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  43dcda:	jmp    43dc70 <xmlStrEqual@plt+0x39d30>
  43dcdc:	call   403c00 <__stack_chk_fail@plt>
  43dce1:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  43dcec:	nop    DWORD PTR [rax+0x0]
  43dcf0:	endbr64 
  43dcf4:	push   r15
  43dcf6:	vpxor  xmm0,xmm0,xmm0
  43dcfa:	push   r14
  43dcfc:	push   r13
  43dcfe:	push   r12
  43dd00:	push   rbp
  43dd01:	push   rbx
  43dd02:	sub    rsp,0x88
  43dd09:	mov    rax,QWORD PTR fs:0x28
  43dd12:	mov    QWORD PTR [rsp+0x78],rax
  43dd17:	xor    eax,eax
  43dd19:	cmp    BYTE PTR [rdi+0x4],0xfe
  43dd1d:	vmovaps XMMWORD PTR [rsp+0x10],xmm0
  43dd23:	vmovaps XMMWORD PTR [rsp+0x20],xmm0
  43dd29:	vmovaps XMMWORD PTR [rsp+0x30],xmm0
  43dd2f:	vmovaps XMMWORD PTR [rsp+0x40],xmm0
  43dd35:	vmovaps XMMWORD PTR [rsp+0x50],xmm0
  43dd3b:	vmovaps XMMWORD PTR [rsp+0x60],xmm0
  43dd41:	jne    43de2f <xmlStrEqual@plt+0x39eef>
  43dd47:	movzx  edx,BYTE PTR [rdi]
  43dd4a:	mov    r15,rdi
  43dd4d:	mov    eax,edx
  43dd4f:	and    eax,0xfffffff7
  43dd52:	cmp    al,0x2
  43dd54:	jne    43deb0 <xmlStrEqual@plt+0x39f70>
  43dd5a:	movzx  eax,BYTE PTR [rdi+0x2]
  43dd5e:	mov    ebx,esi
  43dd60:	mov    DWORD PTR [rsp+0x8],eax
  43dd64:	movzx  eax,BYTE PTR [rdi+0x1]
  43dd68:	lea    r14,[rdi+0xc]
  43dd6c:	mov    DWORD PTR [rsp+0xc],eax
  43dd70:	cmp    esi,0x3
  43dd73:	jle    43dee0 <xmlStrEqual@plt+0x39fa0>
  43dd79:	movzx  eax,WORD PTR [rdi+0xc]
  43dd7d:	cmp    ax,0x3
  43dd81:	jbe    43dee0 <xmlStrEqual@plt+0x39fa0>
  43dd87:	cmp    esi,eax
  43dd89:	jl     43dee0 <xmlStrEqual@plt+0x39fa0>
  43dd8f:	mov    DWORD PTR [rsp+0x4],0xffffffff
  43dd97:	lea    r13,[rsp+0x10]
  43dd9c:	lea    rbp,[rsp+0x30]
  43dda1:	lea    r12,[rsp+0x50]
  43dda6:	jmp    43ddf2 <xmlStrEqual@plt+0x39eb2>
  43dda8:	nop    DWORD PTR [rax+rax*1+0x0]
  43ddb0:	cmp    ax,0x5
  43ddb4:	jne    43ddd0 <xmlStrEqual@plt+0x39e90>
  43ddb6:	movzx  edx,BYTE PTR [r15]
  43ddba:	lea    rsi,[r14+0x4]
  43ddbe:	mov    rdi,r13
  43ddc1:	call   425480 <xmlStrEqual@plt+0x21540>
  43ddc6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43ddd0:	movzx  eax,WORD PTR [r14]
  43ddd4:	add    eax,0x3
  43ddd7:	and    eax,0xfffffffc
  43ddda:	sub    ebx,eax
  43dddc:	add    r14,rax
  43dddf:	cmp    ebx,0x3
  43dde2:	jle    43de18 <xmlStrEqual@plt+0x39ed8>
  43dde4:	movzx  eax,WORD PTR [r14]
  43dde8:	cmp    ax,0x3
  43ddec:	jbe    43de18 <xmlStrEqual@plt+0x39ed8>
  43ddee:	cmp    eax,ebx
  43ddf0:	jg     43de18 <xmlStrEqual@plt+0x39ed8>
  43ddf2:	movzx  eax,WORD PTR [r14+0x2]
  43ddf7:	cmp    ax,0x2
  43ddfb:	je     43de88 <xmlStrEqual@plt+0x39f48>
  43de01:	jbe    43de58 <xmlStrEqual@plt+0x39f18>
  43de03:	cmp    ax,0x4
  43de07:	jne    43ddb0 <xmlStrEqual@plt+0x39e70>
  43de09:	mov    eax,DWORD PTR [r14+0x4]
  43de0d:	mov    DWORD PTR [rsp+0x4],eax
  43de11:	jmp    43ddd0 <xmlStrEqual@plt+0x39e90>
  43de13:	nop    DWORD PTR [rax+rax*1+0x0]
  43de18:	mov    esi,DWORD PTR [rsp+0x4]
  43de1c:	mov    r8,r13
  43de1f:	mov    rcx,r12
  43de22:	mov    rdx,rbp
  43de25:	mov    edi,0x1
  43de2a:	call   43c690 <xmlStrEqual@plt+0x38750>
  43de2f:	mov    rax,QWORD PTR [rsp+0x78]
  43de34:	xor    rax,QWORD PTR fs:0x28
  43de3d:	jne    43def9 <xmlStrEqual@plt+0x39fb9>
  43de43:	add    rsp,0x88
  43de4a:	pop    rbx
  43de4b:	pop    rbp
  43de4c:	pop    r12
  43de4e:	pop    r13
  43de50:	pop    r14
  43de52:	pop    r15
  43de54:	ret    
  43de55:	nop    DWORD PTR [rax]
  43de58:	cmp    ax,0x1
  43de5c:	jne    43ddd0 <xmlStrEqual@plt+0x39e90>
  43de62:	movzx  edx,BYTE PTR [r15]
  43de66:	lea    rsi,[r14+0x4]
  43de6a:	mov    rdi,r12
  43de6d:	call   425480 <xmlStrEqual@plt+0x21540>
  43de72:	mov    esi,DWORD PTR [rsp+0xc]
  43de76:	mov    rdi,r12
  43de79:	call   425730 <xmlStrEqual@plt+0x217f0>
  43de7e:	jmp    43ddd0 <xmlStrEqual@plt+0x39e90>
  43de83:	nop    DWORD PTR [rax+rax*1+0x0]
  43de88:	movzx  edx,BYTE PTR [r15]
  43de8c:	lea    rsi,[r14+0x4]
  43de90:	mov    rdi,rbp
  43de93:	call   425480 <xmlStrEqual@plt+0x21540>
  43de98:	mov    esi,DWORD PTR [rsp+0x8]
  43de9c:	mov    rdi,rbp
  43de9f:	call   425730 <xmlStrEqual@plt+0x217f0>
  43dea4:	jmp    43ddd0 <xmlStrEqual@plt+0x39e90>
  43dea9:	nop    DWORD PTR [rax+0x0]
  43deb0:	mov    rax,0x469e3c
  43deb7:	cmp    DWORD PTR [rax],0x2
  43deba:	jle    43de2f <xmlStrEqual@plt+0x39eef>
  43dec0:	lea    rsi,[rip+0x15519]        # 4533e0 <xmlStrEqual@plt+0x4f4a0>
  43dec7:	mov    edi,0x7
  43decc:	xor    eax,eax
  43dece:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  43ded3:	jmp    43de2f <xmlStrEqual@plt+0x39eef>
  43ded8:	nop    DWORD PTR [rax+rax*1+0x0]
  43dee0:	mov    esi,0xffffffff
  43dee5:	lea    r13,[rsp+0x10]
  43deea:	lea    rbp,[rsp+0x30]
  43deef:	lea    r12,[rsp+0x50]
  43def4:	jmp    43de1c <xmlStrEqual@plt+0x39edc>
  43def9:	call   403c00 <__stack_chk_fail@plt>
  43defe:	xchg   ax,ax
  43df00:	endbr64 
  43df04:	mov    rax,0x469e3c
  43df0b:	mov    eax,DWORD PTR [rax]
  43df0d:	test   eax,eax
  43df0f:	jg     43df18 <xmlStrEqual@plt+0x39fd8>
  43df11:	ret    
  43df12:	nop    WORD PTR [rax+rax*1+0x0]
  43df18:	lea    rsi,[rip+0x15511]        # 453430 <xmlStrEqual@plt+0x4f4f0>
  43df1f:	mov    edi,0x5
  43df24:	xor    eax,eax
  43df26:	jmp    430e20 <xmlStrEqual@plt+0x2cee0>
  43df2b:	nop    DWORD PTR [rax+rax*1+0x0]
  43df30:	endbr64 
  43df34:	mov    eax,DWORD PTR [rdi]
  43df36:	lea    rdx,[rdi+0x10]
  43df3a:	lea    esi,[rax-0x1c]
  43df3d:	movzx  eax,BYTE PTR [rdi+0x17]
  43df41:	cmp    al,0x1
  43df43:	je     43df50 <xmlStrEqual@plt+0x3a010>
  43df45:	cmp    al,0x5
  43df47:	je     43df60 <xmlStrEqual@plt+0x3a020>
  43df49:	ret    
  43df4a:	nop    WORD PTR [rax+rax*1+0x0]
  43df50:	mov    rdi,rdx
  43df53:	jmp    43dcf0 <xmlStrEqual@plt+0x39db0>
  43df58:	nop    DWORD PTR [rax+rax*1+0x0]
  43df60:	mov    rdi,rdx
  43df63:	jmp    43df00 <xmlStrEqual@plt+0x39fc0>
  43df68:	nop    DWORD PTR [rax+rax*1+0x0]
  43df70:	endbr64 
  43df74:	push   r15
  43df76:	mov    r15d,esi
  43df79:	xor    esi,esi
  43df7b:	push   r14
  43df7d:	push   r13
  43df7f:	push   r12
  43df81:	push   rbp
  43df82:	push   rbx
  43df83:	mov    rbx,rdi
  43df86:	sub    rsp,0x468
  43df8d:	mov    QWORD PTR [rsp+0x10],rdi
  43df92:	mov    QWORD PTR [rsp+0x20],rdx
  43df97:	mov    QWORD PTR [rsp+0x28],rcx
  43df9c:	mov    edx,0x400
  43dfa1:	mov    rax,QWORD PTR fs:0x28
  43dfaa:	mov    QWORD PTR [rsp+0x458],rax
  43dfb2:	xor    eax,eax
  43dfb4:	lea    rax,[rsp+0x50]
  43dfb9:	mov    rdi,rax
  43dfbc:	mov    QWORD PTR [rsp+0x8],rax
  43dfc1:	call   4039f0 <memset@plt>
  43dfc6:	cmp    r15d,0x3
  43dfca:	jle    43e238 <xmlStrEqual@plt+0x3a2f8>
  43dfd0:	mov    rax,QWORD PTR [rsp+0x10]
  43dfd5:	lea    rbp,[rbx+0xc]
  43dfd9:	movzx  ebx,WORD PTR [rax+0xc]
  43dfdd:	cmp    bx,0x3
  43dfe1:	jbe    43e238 <xmlStrEqual@plt+0x3a2f8>
  43dfe7:	cmp    r15d,ebx
  43dfea:	jl     43e238 <xmlStrEqual@plt+0x3a2f8>
  43dff0:	xor    r13d,r13d
  43dff3:	lea    r12,[rsp+0x30]
  43dff8:	jmp    43e03b <xmlStrEqual@plt+0x3a0fb>
  43dffa:	nop    WORD PTR [rax+rax*1+0x0]
  43e000:	cmp    ax,0x1
  43e004:	je     43e170 <xmlStrEqual@plt+0x3a230>
  43e00a:	movzx  eax,WORD PTR [rbp+0x0]
  43e00e:	add    eax,0x3
  43e011:	and    eax,0xfffffffc
  43e014:	sub    r15d,eax
  43e017:	add    rbp,rax
  43e01a:	cmp    r15d,0x3
  43e01e:	jle    43e1f0 <xmlStrEqual@plt+0x3a2b0>
  43e024:	movzx  ebx,WORD PTR [rbp+0x0]
  43e028:	cmp    bx,0x3
  43e02c:	jbe    43e1f0 <xmlStrEqual@plt+0x3a2b0>
  43e032:	cmp    ebx,r15d
  43e035:	jg     43e1f0 <xmlStrEqual@plt+0x3a2b0>
  43e03b:	movzx  eax,WORD PTR [rbp+0x2]
  43e03f:	cmp    ax,0x2
  43e043:	je     43e140 <xmlStrEqual@plt+0x3a200>
  43e049:	cmp    ax,0x9
  43e04d:	jne    43e000 <xmlStrEqual@plt+0x3a0c0>
  43e04f:	movzx  eax,WORD PTR [rbp+0x4]
  43e053:	lea    r14,[rbp+0x4]
  43e057:	sub    ebx,0x4
  43e05a:	cmp    ax,0x7
  43e05e:	jbe    43e00a <xmlStrEqual@plt+0x3a0ca>
  43e060:	cmp    eax,ebx
  43e062:	jg     43e00a <xmlStrEqual@plt+0x3a0ca>
  43e064:	mov    rax,r14
  43e067:	mov    DWORD PTR [rsp+0x1c],r15d
  43e06c:	mov    r14d,ebx
  43e06f:	mov    r15d,r13d
  43e072:	mov    rbx,rax
  43e075:	jmp    43e0d2 <xmlStrEqual@plt+0x3a192>
  43e077:	nop    WORD PTR [rax+rax*1+0x0]
  43e080:	mov    edi,DWORD PTR [rbx+0x4]
  43e083:	mov    rsi,r12
  43e086:	call   403f00 <if_indextoname@plt>
  43e08b:	mov    rdi,QWORD PTR [rsp+0x8]
  43e090:	mov    r8,r12
  43e093:	lea    rcx,[rip+0x1116d]        # 44f207 <xmlStrEqual@plt+0x4b2c7>
  43e09a:	mov    edx,0x400
  43e09f:	mov    esi,0x1
  43e0a4:	xor    eax,eax
  43e0a6:	call   403a30 <__sprintf_chk@plt>
  43e0ab:	movzx  eax,WORD PTR [rbx]
  43e0ae:	inc    r15d
  43e0b1:	add    eax,0x3
  43e0b4:	and    eax,0x1fffc
  43e0b9:	add    rbx,rax
  43e0bc:	movzx  eax,WORD PTR [rbx]
  43e0bf:	cmp    ax,0x7
  43e0c3:	jbe    43e1a0 <xmlStrEqual@plt+0x3a260>
  43e0c9:	cmp    eax,r14d
  43e0cc:	jg     43e1a0 <xmlStrEqual@plt+0x3a260>
  43e0d2:	mov    edi,DWORD PTR [rbx+0x4]
  43e0d5:	call   43ef80 <xmlStrEqual@plt+0x3b040>
  43e0da:	mov    r13d,DWORD PTR [rbp+0x4]
  43e0de:	mov    edi,r13d
  43e0e1:	call   43ef80 <xmlStrEqual@plt+0x3b040>
  43e0e6:	test   rax,rax
  43e0e9:	je     43e080 <xmlStrEqual@plt+0x3a140>
  43e0eb:	mov    rsi,r12
  43e0ee:	mov    edi,r13d
  43e0f1:	call   403f00 <if_indextoname@plt>
  43e0f6:	mov    rdx,r12
  43e0f9:	lea    rsi,[rip+0x15370]        # 453470 <xmlStrEqual@plt+0x4f530>
  43e100:	mov    edi,0x4
  43e105:	xor    eax,eax
  43e107:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  43e10c:	xor    eax,eax
  43e10e:	mov    rcx,QWORD PTR [rsp+0x458]
  43e116:	xor    rcx,QWORD PTR fs:0x28
  43e11f:	jne    43e263 <xmlStrEqual@plt+0x3a323>
  43e125:	add    rsp,0x468
  43e12c:	pop    rbx
  43e12d:	pop    rbp
  43e12e:	pop    r12
  43e130:	pop    r13
  43e132:	pop    r14
  43e134:	pop    r15
  43e136:	ret    
  43e137:	nop    WORD PTR [rax+rax*1+0x0]
  43e140:	mov    rax,QWORD PTR [rsp+0x10]
  43e145:	movzx  eax,BYTE PTR [rax]
  43e148:	cmp    al,0x80
  43e14a:	je     43e1d0 <xmlStrEqual@plt+0x3a290>
  43e150:	cmp    al,0x81
  43e152:	jne    43e00a <xmlStrEqual@plt+0x3a0ca>
  43e158:	mov    rdi,QWORD PTR [rsp+0x20]
  43e15d:	lea    rsi,[rbp+0x4]
  43e161:	mov    edx,0xa
  43e166:	call   425480 <xmlStrEqual@plt+0x21540>
  43e16b:	jmp    43e00a <xmlStrEqual@plt+0x3a0ca>
  43e170:	mov    rax,QWORD PTR [rsp+0x10]
  43e175:	movzx  eax,BYTE PTR [rax]
  43e178:	cmp    al,0x80
  43e17a:	je     43e1b0 <xmlStrEqual@plt+0x3a270>
  43e17c:	cmp    al,0x81
  43e17e:	jne    43e00a <xmlStrEqual@plt+0x3a0ca>
  43e184:	mov    rdi,QWORD PTR [rsp+0x28]
  43e189:	lea    rsi,[rbp+0x4]
  43e18d:	mov    edx,0xa
  43e192:	call   425480 <xmlStrEqual@plt+0x21540>
  43e197:	jmp    43e00a <xmlStrEqual@plt+0x3a0ca>
  43e19c:	nop    DWORD PTR [rax+0x0]
  43e1a0:	mov    r13d,r15d
  43e1a3:	mov    r15d,DWORD PTR [rsp+0x1c]
  43e1a8:	jmp    43e00a <xmlStrEqual@plt+0x3a0ca>
  43e1ad:	nop    DWORD PTR [rax]
  43e1b0:	mov    rdi,QWORD PTR [rsp+0x28]
  43e1b5:	lea    rsi,[rbp+0x4]
  43e1b9:	mov    edx,0x2
  43e1be:	call   425480 <xmlStrEqual@plt+0x21540>
  43e1c3:	jmp    43e00a <xmlStrEqual@plt+0x3a0ca>
  43e1c8:	nop    DWORD PTR [rax+rax*1+0x0]
  43e1d0:	mov    rdi,QWORD PTR [rsp+0x20]
  43e1d5:	lea    rsi,[rbp+0x4]
  43e1d9:	mov    edx,0x2
  43e1de:	call   425480 <xmlStrEqual@plt+0x21540>
  43e1e3:	jmp    43e00a <xmlStrEqual@plt+0x3a0ca>
  43e1e8:	nop    DWORD PTR [rax+rax*1+0x0]
  43e1f0:	test   r13d,r13d
  43e1f3:	je     43e238 <xmlStrEqual@plt+0x3a2f8>
  43e1f5:	mov    rdi,QWORD PTR [rsp+0x28]
  43e1fa:	call   424d40 <xmlStrEqual@plt+0x20e00>
  43e1ff:	mov    rdi,QWORD PTR [rsp+0x20]
  43e204:	mov    rbx,rax
  43e207:	call   424d40 <xmlStrEqual@plt+0x20e00>
  43e20c:	mov    r8,QWORD PTR [rsp+0x8]
  43e211:	mov    rdx,rax
  43e214:	mov    rcx,rbx
  43e217:	xor    eax,eax
  43e219:	lea    rsi,[rip+0x15330]        # 453550 <xmlStrEqual@plt+0x4f610>
  43e220:	mov    edi,0x4
  43e225:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  43e22a:	mov    eax,0x1
  43e22f:	jmp    43e10e <xmlStrEqual@plt+0x3a1ce>
  43e234:	nop    DWORD PTR [rax+0x0]
  43e238:	mov    rax,0x469e3c
  43e23f:	mov    eax,DWORD PTR [rax]
  43e241:	test   eax,eax
  43e243:	jle    43e10c <xmlStrEqual@plt+0x3a1cc>
  43e249:	xor    eax,eax
  43e24b:	lea    rsi,[rip+0x1529e]        # 4534f0 <xmlStrEqual@plt+0x4f5b0>
  43e252:	mov    edi,0x5
  43e257:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  43e25c:	xor    eax,eax
  43e25e:	jmp    43e10e <xmlStrEqual@plt+0x3a1ce>
  43e263:	call   403c00 <__stack_chk_fail@plt>
  43e268:	nop    DWORD PTR [rax+rax*1+0x0]
  43e270:	endbr64 
  43e274:	push   r15
  43e276:	vpxor  xmm0,xmm0,xmm0
  43e27a:	push   r14
  43e27c:	push   r13
  43e27e:	push   r12
  43e280:	push   rbp
  43e281:	push   rbx
  43e282:	sub    rsp,0x88
  43e289:	mov    rax,QWORD PTR fs:0x28
  43e292:	mov    QWORD PTR [rsp+0x78],rax
  43e297:	xor    eax,eax
  43e299:	cmp    BYTE PTR [rdi+0x4],0xfe
  43e29d:	vmovaps XMMWORD PTR [rsp+0x10],xmm0
  43e2a3:	vmovaps XMMWORD PTR [rsp+0x20],xmm0
  43e2a9:	vmovaps XMMWORD PTR [rsp+0x30],xmm0
  43e2af:	vmovaps XMMWORD PTR [rsp+0x40],xmm0
  43e2b5:	vmovaps XMMWORD PTR [rsp+0x50],xmm0
  43e2bb:	vmovaps XMMWORD PTR [rsp+0x60],xmm0
  43e2c1:	jne    43e3ac <xmlStrEqual@plt+0x3a46c>
  43e2c7:	movzx  edx,BYTE PTR [rdi]
  43e2ca:	mov    r15,rdi
  43e2cd:	mov    eax,edx
  43e2cf:	and    eax,0xfffffff7
  43e2d2:	cmp    al,0x2
  43e2d4:	jne    43e430 <xmlStrEqual@plt+0x3a4f0>
  43e2da:	movzx  eax,BYTE PTR [rdi+0x2]
  43e2de:	mov    ebx,esi
  43e2e0:	mov    DWORD PTR [rsp+0x8],eax
  43e2e4:	movzx  eax,BYTE PTR [rdi+0x1]
  43e2e8:	lea    r14,[rdi+0xc]
  43e2ec:	mov    DWORD PTR [rsp+0xc],eax
  43e2f0:	cmp    esi,0x3
  43e2f3:	jle    43e460 <xmlStrEqual@plt+0x3a520>
  43e2f9:	movzx  eax,WORD PTR [rdi+0xc]
  43e2fd:	cmp    ax,0x3
  43e301:	jbe    43e460 <xmlStrEqual@plt+0x3a520>
  43e307:	cmp    esi,eax
  43e309:	jl     43e460 <xmlStrEqual@plt+0x3a520>
  43e30f:	mov    DWORD PTR [rsp+0x4],0xffffffff
  43e317:	lea    r13,[rsp+0x10]
  43e31c:	lea    rbp,[rsp+0x30]
  43e321:	lea    r12,[rsp+0x50]
  43e326:	jmp    43e372 <xmlStrEqual@plt+0x3a432>
  43e328:	nop    DWORD PTR [rax+rax*1+0x0]
  43e330:	cmp    ax,0x5
  43e334:	jne    43e350 <xmlStrEqual@plt+0x3a410>
  43e336:	movzx  edx,BYTE PTR [r15]
  43e33a:	lea    rsi,[r14+0x4]
  43e33e:	mov    rdi,r13
  43e341:	call   425480 <xmlStrEqual@plt+0x21540>
  43e346:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43e350:	movzx  eax,WORD PTR [r14]
  43e354:	add    eax,0x3
  43e357:	and    eax,0xfffffffc
  43e35a:	sub    ebx,eax
  43e35c:	add    r14,rax
  43e35f:	cmp    ebx,0x3
  43e362:	jle    43e398 <xmlStrEqual@plt+0x3a458>
  43e364:	movzx  eax,WORD PTR [r14]
  43e368:	cmp    ax,0x3
  43e36c:	jbe    43e398 <xmlStrEqual@plt+0x3a458>
  43e36e:	cmp    eax,ebx
  43e370:	jg     43e398 <xmlStrEqual@plt+0x3a458>
  43e372:	movzx  eax,WORD PTR [r14+0x2]
  43e377:	cmp    ax,0x2
  43e37b:	je     43e408 <xmlStrEqual@plt+0x3a4c8>
  43e381:	jbe    43e3d8 <xmlStrEqual@plt+0x3a498>
  43e383:	cmp    ax,0x4
  43e387:	jne    43e330 <xmlStrEqual@plt+0x3a3f0>
  43e389:	mov    eax,DWORD PTR [r14+0x4]
  43e38d:	mov    DWORD PTR [rsp+0x4],eax
  43e391:	jmp    43e350 <xmlStrEqual@plt+0x3a410>
  43e393:	nop    DWORD PTR [rax+rax*1+0x0]
  43e398:	mov    esi,DWORD PTR [rsp+0x4]
  43e39c:	mov    r8,r13
  43e39f:	mov    rcx,r12
  43e3a2:	mov    rdx,rbp
  43e3a5:	xor    edi,edi
  43e3a7:	call   43c690 <xmlStrEqual@plt+0x38750>
  43e3ac:	mov    rax,QWORD PTR [rsp+0x78]
  43e3b1:	xor    rax,QWORD PTR fs:0x28
  43e3ba:	jne    43e479 <xmlStrEqual@plt+0x3a539>
  43e3c0:	add    rsp,0x88
  43e3c7:	pop    rbx
  43e3c8:	pop    rbp
  43e3c9:	pop    r12
  43e3cb:	pop    r13
  43e3cd:	pop    r14
  43e3cf:	pop    r15
  43e3d1:	ret    
  43e3d2:	nop    WORD PTR [rax+rax*1+0x0]
  43e3d8:	cmp    ax,0x1
  43e3dc:	jne    43e350 <xmlStrEqual@plt+0x3a410>
  43e3e2:	movzx  edx,BYTE PTR [r15]
  43e3e6:	lea    rsi,[r14+0x4]
  43e3ea:	mov    rdi,r12
  43e3ed:	call   425480 <xmlStrEqual@plt+0x21540>
  43e3f2:	mov    esi,DWORD PTR [rsp+0xc]
  43e3f6:	mov    rdi,r12
  43e3f9:	call   425730 <xmlStrEqual@plt+0x217f0>
  43e3fe:	jmp    43e350 <xmlStrEqual@plt+0x3a410>
  43e403:	nop    DWORD PTR [rax+rax*1+0x0]
  43e408:	movzx  edx,BYTE PTR [r15]
  43e40c:	lea    rsi,[r14+0x4]
  43e410:	mov    rdi,rbp
  43e413:	call   425480 <xmlStrEqual@plt+0x21540>
  43e418:	mov    esi,DWORD PTR [rsp+0x8]
  43e41c:	mov    rdi,rbp
  43e41f:	call   425730 <xmlStrEqual@plt+0x217f0>
  43e424:	jmp    43e350 <xmlStrEqual@plt+0x3a410>
  43e429:	nop    DWORD PTR [rax+0x0]
  43e430:	mov    rax,0x469e3c
  43e437:	cmp    DWORD PTR [rax],0x2
  43e43a:	jle    43e3ac <xmlStrEqual@plt+0x3a46c>
  43e440:	lea    rsi,[rip+0x15149]        # 453590 <xmlStrEqual@plt+0x4f650>
  43e447:	mov    edi,0x7
  43e44c:	xor    eax,eax
  43e44e:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  43e453:	jmp    43e3ac <xmlStrEqual@plt+0x3a46c>
  43e458:	nop    DWORD PTR [rax+rax*1+0x0]
  43e460:	mov    esi,0xffffffff
  43e465:	lea    r13,[rsp+0x10]
  43e46a:	lea    rbp,[rsp+0x30]
  43e46f:	lea    r12,[rsp+0x50]
  43e474:	jmp    43e39c <xmlStrEqual@plt+0x3a45c>
  43e479:	call   403c00 <__stack_chk_fail@plt>
  43e47e:	xchg   ax,ax
  43e480:	endbr64 
  43e484:	sub    rsp,0x58
  43e488:	mov    rax,QWORD PTR fs:0x28
  43e491:	mov    QWORD PTR [rsp+0x48],rax
  43e496:	xor    eax,eax
  43e498:	movzx  eax,BYTE PTR [rdi+0x4]
  43e49c:	vpxor  xmm0,xmm0,xmm0
  43e4a0:	vmovaps XMMWORD PTR [rsp+0x10],xmm0
  43e4a6:	vmovaps XMMWORD PTR [rsp+0x30],xmm0
  43e4ac:	vmovaps XMMWORD PTR [rsp],xmm0
  43e4b1:	mov    DWORD PTR [rsp+0x18],0x1
  43e4b9:	vmovaps XMMWORD PTR [rsp+0x20],xmm0
  43e4bf:	mov    DWORD PTR [rsp+0x38],0x1
  43e4c7:	cmp    al,0xfd
  43e4c9:	je     43e4f0 <xmlStrEqual@plt+0x3a5b0>
  43e4cb:	cmp    al,0xfe
  43e4cd:	jne    43e4d4 <xmlStrEqual@plt+0x3a594>
  43e4cf:	cmp    BYTE PTR [rdi],0x81
  43e4d2:	je     43e4f5 <xmlStrEqual@plt+0x3a5b5>
  43e4d4:	mov    rax,QWORD PTR [rsp+0x48]
  43e4d9:	xor    rax,QWORD PTR fs:0x28
  43e4e2:	jne    43e504 <xmlStrEqual@plt+0x3a5c4>
  43e4e4:	add    rsp,0x58
  43e4e8:	ret    
  43e4e9:	nop    DWORD PTR [rax+0x0]
  43e4f0:	cmp    BYTE PTR [rdi],0x80
  43e4f3:	jne    43e4d4 <xmlStrEqual@plt+0x3a594>
  43e4f5:	mov    rcx,rsp
  43e4f8:	lea    rdx,[rsp+0x20]
  43e4fd:	call   43df70 <xmlStrEqual@plt+0x3a030>
  43e502:	jmp    43e4d4 <xmlStrEqual@plt+0x3a594>
  43e504:	call   403c00 <__stack_chk_fail@plt>
  43e509:	nop    DWORD PTR [rax+0x0]
  43e510:	endbr64 
  43e514:	mov    eax,DWORD PTR [rdi]
  43e516:	lea    rdx,[rdi+0x10]
  43e51a:	lea    esi,[rax-0x1c]
  43e51d:	movzx  eax,BYTE PTR [rdi+0x17]
  43e521:	cmp    al,0x1
  43e523:	je     43e530 <xmlStrEqual@plt+0x3a5f0>
  43e525:	cmp    al,0x5
  43e527:	je     43e540 <xmlStrEqual@plt+0x3a600>
  43e529:	ret    
  43e52a:	nop    WORD PTR [rax+rax*1+0x0]
  43e530:	mov    rdi,rdx
  43e533:	jmp    43e270 <xmlStrEqual@plt+0x3a330>
  43e538:	nop    DWORD PTR [rax+rax*1+0x0]
  43e540:	mov    rdi,rdx
  43e543:	jmp    43e480 <xmlStrEqual@plt+0x3a540>
  43e548:	nop    DWORD PTR [rax+rax*1+0x0]
  43e550:	endbr64 
  43e554:	push   r14
  43e556:	push   r13
  43e558:	push   r12
  43e55a:	push   rbp
  43e55b:	push   rbx
  43e55c:	sub    rsp,0x1000
  43e563:	or     QWORD PTR [rsp],0x0
  43e568:	sub    rsp,0x70
  43e56c:	vpxor  xmm0,xmm0,xmm0
  43e570:	lea    rbx,[rip+0x15281]        # 4537f8 <xmlStrEqual@plt+0x4f8b8>
  43e577:	mov    rax,QWORD PTR fs:0x28
  43e580:	mov    QWORD PTR [rsp+0x1068],rax
  43e588:	xor    eax,eax
  43e58a:	lea    rax,[rsp+0x4]
  43e58f:	lea    rbp,[rsp+0x60]
  43e594:	mov    QWORD PTR [rsp+0x20],rax
  43e599:	lea    rax,[rsp+0x10]
  43e59e:	vmovups XMMWORD PTR [rsp+0x2c],xmm0
  43e5a4:	vmovups XMMWORD PTR [rsp+0x3c],xmm0
  43e5aa:	mov    QWORD PTR [rsp+0x10],rbp
  43e5af:	mov    QWORD PTR [rsp+0x18],0x8
  43e5b8:	mov    QWORD PTR [rsp+0x4c],0x0
  43e5c1:	mov    DWORD PTR [rsp+0x54],0x0
  43e5c9:	mov    DWORD PTR [rsp+0x28],0xc
  43e5d1:	mov    QWORD PTR [rsp+0x30],rax
  43e5d6:	mov    QWORD PTR [rsp+0x38],0x1
  43e5df:	mov    r12,rdi
  43e5e2:	nop    WORD PTR [rax+rax*1+0x0]
  43e5e8:	mov    edi,DWORD PTR [r12+0x18]
  43e5ed:	mov    ecx,0x40
  43e5f2:	mov    edx,0x1000
  43e5f7:	mov    rsi,rbp
  43e5fa:	call   403900 <recv@plt>
  43e5ff:	test   eax,eax
  43e601:	jle    43e798 <xmlStrEqual@plt+0x3a858>
  43e607:	cmp    eax,0xf
  43e60a:	jle    43e6bf <xmlStrEqual@plt+0x3a77f>
  43e610:	mov    edx,DWORD PTR [rsp+0x60]
  43e614:	cmp    edx,0xf
  43e617:	jbe    43e6bf <xmlStrEqual@plt+0x3a77f>
  43e61d:	mov    r14d,eax
  43e620:	cmp    eax,edx
  43e622:	jb     43e6bf <xmlStrEqual@plt+0x3a77f>
  43e628:	movzx  eax,WORD PTR [rsp+0x64]
  43e62d:	mov    r13,rbp
  43e630:	cmp    ax,0x3
  43e634:	je     43e6bf <xmlStrEqual@plt+0x3a77f>
  43e63a:	nop    WORD PTR [rax+rax*1+0x0]
  43e640:	sub    eax,0x10
  43e643:	cmp    ax,0x9
  43e647:	ja     43e690 <xmlStrEqual@plt+0x3a750>
  43e649:	movzx  eax,ax
  43e64c:	movsxd rax,DWORD PTR [rbx+rax*4]
  43e650:	add    rax,rbx
  43e653:	notrack jmp rax
  43e656:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43e660:	mov    rax,0x469e3c
  43e667:	cmp    DWORD PTR [rax],0x1
  43e66a:	jle    43e67f <xmlStrEqual@plt+0x3a73f>
  43e66c:	lea    rsi,[rip+0x15045]        # 4536b8 <xmlStrEqual@plt+0x4f778>
  43e673:	mov    edi,0x6
  43e678:	xor    eax,eax
  43e67a:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  43e67f:	mov    rdi,r13
  43e682:	call   43e510 <xmlStrEqual@plt+0x3a5d0>
  43e687:	nop    WORD PTR [rax+rax*1+0x0]
  43e690:	mov    eax,DWORD PTR [r13+0x0]
  43e694:	add    eax,0x3
  43e697:	and    eax,0xfffffffc
  43e69a:	sub    r14d,eax
  43e69d:	add    r13,rax
  43e6a0:	cmp    r14d,0xf
  43e6a4:	jle    43e6bf <xmlStrEqual@plt+0x3a77f>
  43e6a6:	mov    eax,DWORD PTR [r13+0x0]
  43e6aa:	cmp    eax,0xf
  43e6ad:	jbe    43e6bf <xmlStrEqual@plt+0x3a77f>
  43e6af:	cmp    r14d,eax
  43e6b2:	jb     43e6bf <xmlStrEqual@plt+0x3a77f>
  43e6b4:	movzx  eax,WORD PTR [r13+0x4]
  43e6b9:	cmp    ax,0x3
  43e6bd:	jne    43e640 <xmlStrEqual@plt+0x3a700>
  43e6bf:	mov    edx,0x1000
  43e6c4:	xor    esi,esi
  43e6c6:	mov    rdi,rbp
  43e6c9:	call   4039f0 <memset@plt>
  43e6ce:	jmp    43e5e8 <xmlStrEqual@plt+0x3a6a8>
  43e6d3:	nop    DWORD PTR [rax+rax*1+0x0]
  43e6d8:	mov    rax,0x469e3c
  43e6df:	cmp    DWORD PTR [rax],0x1
  43e6e2:	jle    43e6f7 <xmlStrEqual@plt+0x3a7b7>
  43e6e4:	lea    rsi,[rip+0x14f95]        # 453680 <xmlStrEqual@plt+0x4f740>
  43e6eb:	mov    edi,0x6
  43e6f0:	xor    eax,eax
  43e6f2:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  43e6f7:	mov    rdi,r13
  43e6fa:	call   43df30 <xmlStrEqual@plt+0x39ff0>
  43e6ff:	jmp    43e690 <xmlStrEqual@plt+0x3a750>
  43e701:	nop    DWORD PTR [rax+0x0]
  43e708:	mov    rax,0x469e3c
  43e70f:	cmp    DWORD PTR [rax],0x1
  43e712:	jle    43e727 <xmlStrEqual@plt+0x3a7e7>
  43e714:	lea    rsi,[rip+0x14f35]        # 453650 <xmlStrEqual@plt+0x4f710>
  43e71b:	mov    edi,0x6
  43e720:	xor    eax,eax
  43e722:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  43e727:	mov    rdi,r13
  43e72a:	call   43dc30 <xmlStrEqual@plt+0x39cf0>
  43e72f:	jmp    43e690 <xmlStrEqual@plt+0x3a750>
  43e734:	nop    DWORD PTR [rax+0x0]
  43e738:	mov    rax,0x469e3c
  43e73f:	cmp    DWORD PTR [rax],0x1
  43e742:	jle    43e757 <xmlStrEqual@plt+0x3a817>
  43e744:	lea    rsi,[rip+0x14ecd]        # 453618 <xmlStrEqual@plt+0x4f6d8>
  43e74b:	mov    edi,0x6
  43e750:	xor    eax,eax
  43e752:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  43e757:	mov    rdi,r13
  43e75a:	call   43db50 <xmlStrEqual@plt+0x39c10>
  43e75f:	jmp    43e690 <xmlStrEqual@plt+0x3a750>
  43e764:	nop    DWORD PTR [rax+0x0]
  43e768:	mov    rax,0x469e3c
  43e76f:	cmp    DWORD PTR [rax],0x1
  43e772:	jle    43e787 <xmlStrEqual@plt+0x3a847>
  43e774:	lea    rsi,[rip+0x14e65]        # 4535e0 <xmlStrEqual@plt+0x4f6a0>
  43e77b:	mov    edi,0x6
  43e780:	xor    eax,eax
  43e782:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  43e787:	mov    rdi,r13
  43e78a:	call   43da10 <xmlStrEqual@plt+0x39ad0>
  43e78f:	jmp    43e690 <xmlStrEqual@plt+0x3a750>
  43e794:	nop    DWORD PTR [rax+0x0]
  43e798:	mov    rcx,QWORD PTR [rsp+0x1068]
  43e7a0:	xor    rcx,QWORD PTR fs:0x28
  43e7a9:	mov    eax,0x1
  43e7ae:	jne    43e7c0 <xmlStrEqual@plt+0x3a880>
  43e7b0:	add    rsp,0x1070
  43e7b7:	pop    rbx
  43e7b8:	pop    rbp
  43e7b9:	pop    r12
  43e7bb:	pop    r13
  43e7bd:	pop    r14
  43e7bf:	ret    
  43e7c0:	call   403c00 <__stack_chk_fail@plt>
  43e7c5:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  43e7d0:	endbr64 
  43e7d4:	push   r13
  43e7d6:	xor    edx,edx
  43e7d8:	mov    r13,rdi
  43e7db:	push   r12
  43e7dd:	mov    edi,0x2
  43e7e2:	push   rbp
  43e7e3:	mov    rbp,rsi
  43e7e6:	mov    esi,0x2
  43e7eb:	push   rbx
  43e7ec:	sub    rsp,0x38
  43e7f0:	mov    rbx,rsp
  43e7f3:	mov    rax,QWORD PTR fs:0x28
  43e7fc:	mov    QWORD PTR [rsp+0x28],rax
  43e801:	xor    eax,eax
  43e803:	call   403880 <socket@plt>
  43e808:	mov    r12d,eax
  43e80b:	vpxor  xmm0,xmm0,xmm0
  43e80f:	mov    eax,0x2
  43e814:	mov    edx,0xf
  43e819:	mov    rsi,r13
  43e81c:	mov    rdi,rbx
  43e81f:	vmovaps XMMWORD PTR [rsp+0x10],xmm0
  43e825:	vmovaps XMMWORD PTR [rsp],xmm0
  43e82a:	mov    QWORD PTR [rsp+0x20],0x0
  43e833:	mov    WORD PTR [rsp+0x10],ax
  43e838:	call   4039e0 <strncpy@plt>
  43e83d:	mov    rdx,rbx
  43e840:	mov    esi,0x8927
  43e845:	mov    edi,r12d
  43e848:	xor    eax,eax
  43e84a:	call   403d30 <ioctl@plt>
  43e84f:	mov    edi,r12d
  43e852:	call   403f30 <close@plt>
  43e857:	xor    eax,eax
  43e859:	lea    rdx,[rbx+0x12]
  43e85d:	nop    DWORD PTR [rax]
  43e860:	movzx  ecx,BYTE PTR [rdx+rax*1]
  43e864:	mov    BYTE PTR [rbp+rax*1+0x0],cl
  43e868:	inc    rax
  43e86b:	cmp    rax,0x6
  43e86f:	jne    43e860 <xmlStrEqual@plt+0x3a920>
  43e871:	mov    rax,QWORD PTR [rsp+0x28]
  43e876:	xor    rax,QWORD PTR fs:0x28
  43e87f:	jne    43e88c <xmlStrEqual@plt+0x3a94c>
  43e881:	add    rsp,0x38
  43e885:	pop    rbx
  43e886:	pop    rbp
  43e887:	pop    r12
  43e889:	pop    r13
  43e88b:	ret    
  43e88c:	call   403c00 <__stack_chk_fail@plt>
  43e891:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  43e89c:	nop    DWORD PTR [rax+0x0]
  43e8a0:	endbr64 
  43e8a4:	push   r15
  43e8a6:	push   r14
  43e8a8:	push   r13
  43e8aa:	push   r12
  43e8ac:	push   rbp
  43e8ad:	push   rbx
  43e8ae:	sub    rsp,0x1000
  43e8b5:	or     QWORD PTR [rsp],0x0
  43e8ba:	sub    rsp,0x1000
  43e8c1:	or     QWORD PTR [rsp],0x0
  43e8c6:	sub    rsp,0x58
  43e8ca:	xor    edx,edx
  43e8cc:	vpxor  xmm0,xmm0,xmm0
  43e8d0:	mov    ecx,0x10
  43e8d5:	lea    r12,[rsp+0x14]
  43e8da:	mov    rax,QWORD PTR fs:0x28
  43e8e3:	mov    QWORD PTR [rsp+0x2048],rax
  43e8eb:	xor    eax,eax
  43e8ed:	mov    QWORD PTR [rsp+0x16],0x0
  43e8f6:	mov    WORD PTR [r12+0xa],dx
  43e8fc:	vmovaps XMMWORD PTR [rsp+0x30],xmm0
  43e902:	mov    rbp,rdi
  43e905:	vmovaps XMMWORD PTR [rsp+0x20],xmm0
  43e90b:	mov    WORD PTR [rsp+0x14],cx
  43e910:	mov    DWORD PTR [rsp+0x38],0x1
  43e918:	call   425890 <xmlStrEqual@plt+0x21950>
  43e91d:	cmp    ax,0x2
  43e921:	mov    ecx,0x400
  43e926:	mov    edx,0x40
  43e92b:	cmovne edx,ecx
  43e92e:	setne  bl
  43e931:	mov    DWORD PTR [rsp+0x1c],edx
  43e935:	mov    esi,0x3
  43e93a:	xor    edx,edx
  43e93c:	mov    edi,0x10
  43e941:	call   403880 <socket@plt>
  43e946:	mov    DWORD PTR [rsp+0x4],eax
  43e94a:	test   eax,eax
  43e94c:	js     43eba8 <xmlStrEqual@plt+0x3ac68>
  43e952:	mov    r15d,DWORD PTR [rsp+0x4]
  43e957:	mov    edx,0xc
  43e95c:	mov    rsi,r12
  43e95f:	mov    edi,r15d
  43e962:	call   403820 <bind@plt>
  43e967:	lea    r8,[rsp+0x40]
  43e96c:	mov    rdi,r8
  43e96f:	mov    edx,0x1000
  43e974:	xor    esi,esi
  43e976:	call   4039f0 <memset@plt>
  43e97b:	mov    r8,rax
  43e97e:	movzx  ebx,bl
  43e981:	movabs rax,0x301001a0000001c
  43e98b:	lea    ebx,[rbx*8+0x2]
  43e992:	mov    QWORD PTR [rsp+0x40],rax
  43e997:	xor    ecx,ecx
  43e999:	mov    eax,0x4fe
  43e99e:	mov    edx,0x1c
  43e9a3:	mov    rsi,r8
  43e9a6:	mov    edi,r15d
  43e9a9:	mov    BYTE PTR [rsp+0x50],bl
  43e9ad:	mov    WORD PTR [rsp+0x54],ax
  43e9b2:	mov    BYTE PTR [rsp+0x57],0x1
  43e9b7:	call   4039c0 <send@plt>
  43e9bc:	lea    rcx,[rsp+0x1040]
  43e9c4:	mov    QWORD PTR [rsp+0x8],rcx
  43e9c9:	lea    rbx,[rsp+0x20]
  43e9ce:	test   eax,eax
  43e9d0:	js     43ebc2 <xmlStrEqual@plt+0x3ac82>
  43e9d6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43e9e0:	mov    r13,QWORD PTR [rsp+0x8]
  43e9e5:	mov    edi,DWORD PTR [rsp+0x4]
  43e9e9:	mov    ecx,0x40
  43e9ee:	mov    edx,0x1000
  43e9f3:	mov    rsi,r13
  43e9f6:	call   403900 <recv@plt>
  43e9fb:	test   eax,eax
  43e9fd:	jle    43eb40 <xmlStrEqual@plt+0x3ac00>
  43ea03:	mov    r12d,eax
  43ea06:	cmp    eax,0xf
  43ea09:	jbe    43e9e0 <xmlStrEqual@plt+0x3aaa0>
  43ea0b:	mov    r14d,DWORD PTR [rsp+0x1040]
  43ea13:	cmp    r14d,eax
  43ea16:	ja     43e9e0 <xmlStrEqual@plt+0x3aaa0>
  43ea18:	cmp    r14d,0xf
  43ea1c:	ja     43ea45 <xmlStrEqual@plt+0x3ab05>
  43ea1e:	jmp    43e9e0 <xmlStrEqual@plt+0x3aaa0>
  43ea20:	mov    eax,DWORD PTR [r13+0x0]
  43ea24:	add    eax,0x3
  43ea27:	and    eax,0xfffffffc
  43ea2a:	sub    r12d,eax
  43ea2d:	add    r13,rax
  43ea30:	cmp    r12d,0xf
  43ea34:	jbe    43e9e0 <xmlStrEqual@plt+0x3aaa0>
  43ea36:	mov    r14d,DWORD PTR [r13+0x0]
  43ea3a:	cmp    r14d,0xf
  43ea3e:	jbe    43e9e0 <xmlStrEqual@plt+0x3aaa0>
  43ea40:	cmp    r12d,r14d
  43ea43:	jb     43e9e0 <xmlStrEqual@plt+0x3aaa0>
  43ea45:	cmp    WORD PTR [r13+0x4],0x18
  43ea4b:	jne    43ea20 <xmlStrEqual@plt+0x3aae0>
  43ea4d:	sub    r14d,0x1c
  43ea51:	lea    r15,[r13+0x1c]
  43ea55:	cmp    r14d,0x3
  43ea59:	jle    43ea20 <xmlStrEqual@plt+0x3aae0>
  43ea5b:	movzx  eax,WORD PTR [r13+0x1c]
  43ea60:	cmp    ax,0x3
  43ea64:	jbe    43ea20 <xmlStrEqual@plt+0x3aae0>
  43ea66:	cmp    r14d,eax
  43ea69:	jge    43ea95 <xmlStrEqual@plt+0x3ab55>
  43ea6b:	jmp    43ea20 <xmlStrEqual@plt+0x3aae0>
  43ea6d:	nop    DWORD PTR [rax]
  43ea70:	movzx  eax,WORD PTR [r15]
  43ea74:	add    eax,0x3
  43ea77:	and    eax,0xfffffffc
  43ea7a:	sub    r14d,eax
  43ea7d:	add    r15,rax
  43ea80:	cmp    r14d,0x3
  43ea84:	jle    43ea20 <xmlStrEqual@plt+0x3aae0>
  43ea86:	movzx  eax,WORD PTR [r15]
  43ea8a:	cmp    ax,0x3
  43ea8e:	jbe    43ea20 <xmlStrEqual@plt+0x3aae0>
  43ea90:	cmp    eax,r14d
  43ea93:	jg     43ea20 <xmlStrEqual@plt+0x3aae0>
  43ea95:	cmp    WORD PTR [r15+0x2],0x1
  43ea9b:	jne    43ea70 <xmlStrEqual@plt+0x3ab30>
  43ea9d:	movzx  edx,BYTE PTR [rsp+0x50]
  43eaa2:	cmp    dl,0x2
  43eaa5:	je     43eb30 <xmlStrEqual@plt+0x3abf0>
  43eaab:	cmp    dl,0xa
  43eaae:	jne    43eab7 <xmlStrEqual@plt+0x3ab77>
  43eab0:	cmp    BYTE PTR [r13+0x11],0x80
  43eab5:	je     43ea70 <xmlStrEqual@plt+0x3ab30>
  43eab7:	lea    rsi,[r15+0x4]
  43eabb:	mov    rdi,rbx
  43eabe:	call   425480 <xmlStrEqual@plt+0x21540>
  43eac3:	movzx  esi,BYTE PTR [r13+0x11]
  43eac8:	mov    rdi,rbx
  43eacb:	call   425730 <xmlStrEqual@plt+0x217f0>
  43ead0:	mov    rsi,rbx
  43ead3:	mov    rdi,rbp
  43ead6:	call   437820 <xmlStrEqual@plt+0x338e0>
  43eadb:	cmp    eax,0x1
  43eade:	jne    43ea70 <xmlStrEqual@plt+0x3ab30>
  43eae0:	mov    edi,DWORD PTR [rsp+0x4]
  43eae4:	call   403f30 <close@plt>
  43eae9:	mov    rax,0x469e3c
  43eaf0:	cmp    DWORD PTR [rax],0x2
  43eaf3:	jg     43eb77 <xmlStrEqual@plt+0x3ac37>
  43eaf9:	mov    rdi,rbx
  43eafc:	call   425060 <xmlStrEqual@plt+0x21120>
  43eb01:	mov    rbx,rax
  43eb04:	mov    rcx,QWORD PTR [rsp+0x2048]
  43eb0c:	xor    rcx,QWORD PTR fs:0x28
  43eb15:	mov    rax,rbx
  43eb18:	jne    43ebeb <xmlStrEqual@plt+0x3acab>
  43eb1e:	add    rsp,0x2058
  43eb25:	pop    rbx
  43eb26:	pop    rbp
  43eb27:	pop    r12
  43eb29:	pop    r13
  43eb2b:	pop    r14
  43eb2d:	pop    r15
  43eb2f:	ret    
  43eb30:	cmp    BYTE PTR [r13+0x11],0x20
  43eb35:	jne    43eab7 <xmlStrEqual@plt+0x3ab77>
  43eb3b:	jmp    43ea70 <xmlStrEqual@plt+0x3ab30>
  43eb40:	mov    edi,DWORD PTR [rsp+0x4]
  43eb44:	xor    ebx,ebx
  43eb46:	call   403f30 <close@plt>
  43eb4b:	mov    rax,0x469e3c
  43eb52:	cmp    DWORD PTR [rax],0x2
  43eb55:	jle    43eb04 <xmlStrEqual@plt+0x3abc4>
  43eb57:	mov    rdi,rbp
  43eb5a:	call   424d40 <xmlStrEqual@plt+0x20e00>
  43eb5f:	mov    rdx,rax
  43eb62:	lea    rsi,[rip+0x14c4f]        # 4537b8 <xmlStrEqual@plt+0x4f878>
  43eb69:	mov    edi,0x7
  43eb6e:	xor    eax,eax
  43eb70:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  43eb75:	jmp    43eb04 <xmlStrEqual@plt+0x3abc4>
  43eb77:	mov    rdi,rbx
  43eb7a:	call   424d40 <xmlStrEqual@plt+0x20e00>
  43eb7f:	mov    rdi,rbp
  43eb82:	mov    r12,rax
  43eb85:	call   424d40 <xmlStrEqual@plt+0x20e00>
  43eb8a:	mov    rdx,rax
  43eb8d:	mov    rcx,r12
  43eb90:	lea    rsi,[rip+0x14be1]        # 453778 <xmlStrEqual@plt+0x4f838>
  43eb97:	mov    edi,0x7
  43eb9c:	xor    eax,eax
  43eb9e:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  43eba3:	jmp    43eaf9 <xmlStrEqual@plt+0x3abb9>
  43eba8:	lea    rsi,[rip+0x14b41]        # 4536f0 <xmlStrEqual@plt+0x4f7b0>
  43ebaf:	mov    edi,0x2
  43ebb4:	xor    eax,eax
  43ebb6:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  43ebbb:	xor    ebx,ebx
  43ebbd:	jmp    43eb04 <xmlStrEqual@plt+0x3abc4>
  43ebc2:	call   4037f0 <__errno_location@plt>
  43ebc7:	mov    edi,DWORD PTR [rax]
  43ebc9:	xor    ebx,ebx
  43ebcb:	call   403910 <strerror@plt>
  43ebd0:	mov    rdx,rax
  43ebd3:	lea    rsi,[rip+0x14b5e]        # 453738 <xmlStrEqual@plt+0x4f7f8>
  43ebda:	mov    edi,0x1
  43ebdf:	xor    eax,eax
  43ebe1:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  43ebe6:	jmp    43eb04 <xmlStrEqual@plt+0x3abc4>
  43ebeb:	call   403c00 <__stack_chk_fail@plt>
  43ebf0:	endbr64 
  43ebf4:	push   rbx
  43ebf5:	mov    rbx,rdi
  43ebf8:	mov    edi,DWORD PTR [rdi+0x30]
  43ebfb:	cmp    edi,0xffffffff
  43ebfe:	je     43ec05 <xmlStrEqual@plt+0x3acc5>
  43ec00:	call   403f30 <close@plt>
  43ec05:	mov    edi,DWORD PTR [rbx+0x34]
  43ec08:	cmp    edi,0xffffffff
  43ec0b:	je     43ec12 <xmlStrEqual@plt+0x3acd2>
  43ec0d:	call   403f30 <close@plt>
  43ec12:	mov    rdi,QWORD PTR [rbx]
  43ec15:	call   4037b0 <free@plt>
  43ec1a:	mov    rdi,QWORD PTR [rbx+0x10]
  43ec1e:	call   424bf0 <xmlStrEqual@plt+0x20cb0>
  43ec23:	mov    rdi,QWORD PTR [rbx+0x18]
  43ec27:	call   424bf0 <xmlStrEqual@plt+0x20cb0>
  43ec2c:	mov    rdi,QWORD PTR [rbx+0x20]
  43ec30:	call   424bf0 <xmlStrEqual@plt+0x20cb0>
  43ec35:	mov    rdi,QWORD PTR [rbx+0x28]
  43ec39:	call   424bf0 <xmlStrEqual@plt+0x20cb0>
  43ec3e:	mov    rdi,rbx
  43ec41:	pop    rbx
  43ec42:	jmp    4037b0 <free@plt>
  43ec47:	nop    WORD PTR [rax+rax*1+0x0]
  43ec50:	endbr64 
  43ec54:	sub    rsp,0x8
  43ec58:	mov    rdi,0x43ebf0
  43ec5f:	call   42dca0 <xmlStrEqual@plt+0x29d60>
  43ec64:	mov    rdx,0x474dd0
  43ec6b:	mov    QWORD PTR [rdx],rax
  43ec6e:	mov    rax,0x474da8
  43ec75:	mov    rdx,QWORD PTR [rax]
  43ec78:	xor    eax,eax
  43ec7a:	call   QWORD PTR [rdx+0x58]
  43ec7d:	mov    rdx,0x474dc8
  43ec84:	test   rax,rax
  43ec87:	mov    QWORD PTR [rdx],rax
  43ec8a:	setne  al
  43ec8d:	movzx  eax,al
  43ec90:	add    rsp,0x8
  43ec94:	ret    
  43ec95:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  43eca0:	endbr64 
  43eca4:	sub    rsp,0x8
  43eca8:	mov    rax,0x474dd0
  43ecaf:	mov    rdi,QWORD PTR [rax]
  43ecb2:	call   42e2b0 <xmlStrEqual@plt+0x2a370>
  43ecb7:	mov    rax,0x474dc8
  43ecbe:	mov    rdi,QWORD PTR [rax]
  43ecc1:	add    rsp,0x8
  43ecc5:	jmp    43add0 <xmlStrEqual@plt+0x36e90>
  43ecca:	nop    WORD PTR [rax+rax*1+0x0]
  43ecd0:	endbr64 
  43ecd4:	mov    ecx,DWORD PTR [rip+0x36aca]        # 4757a4 <xmlStrEqual@plt+0x71864>
  43ecda:	test   rdi,rdi
  43ecdd:	je     43edd0 <xmlStrEqual@plt+0x3ae90>
  43ece3:	push   r15
  43ece5:	inc    ecx
  43ece7:	mov    eax,ecx
  43ece9:	push   r14
  43eceb:	mov    edx,0x66666667
  43ecf0:	imul   edx
  43ecf2:	push   r13
  43ecf4:	mov    eax,ecx
  43ecf6:	sar    eax,0x1f
  43ecf9:	push   r12
  43ecfb:	sar    edx,1
  43ecfd:	sub    edx,eax
  43ecff:	push   rbp
  43ed00:	lea    eax,[rdx+rdx*4]
  43ed03:	sub    ecx,eax
  43ed05:	push   rbx
  43ed06:	mov    rbx,rdi
  43ed09:	lea    rbp,[rip+0x360d0]        # 474de0 <xmlStrEqual@plt+0x70ea0>
  43ed10:	sub    rsp,0x18
  43ed14:	mov    DWORD PTR [rip+0x36a8a],ecx        # 4757a4 <xmlStrEqual@plt+0x71864>
  43ed1a:	mov    ecx,DWORD PTR [rdi+0x34]
  43ed1d:	mov    rdi,QWORD PTR [rdi+0x28]
  43ed21:	mov    DWORD PTR [rsp+0xc],ecx
  43ed25:	call   424d40 <xmlStrEqual@plt+0x20e00>
  43ed2a:	mov    rdi,QWORD PTR [rbx+0x18]
  43ed2e:	mov    r15,rax
  43ed31:	call   424d40 <xmlStrEqual@plt+0x20e00>
  43ed36:	mov    rdi,QWORD PTR [rbx+0x20]
  43ed3a:	mov    r13d,DWORD PTR [rbx+0x30]
  43ed3e:	mov    r14,rax
  43ed41:	call   424d40 <xmlStrEqual@plt+0x20e00>
  43ed46:	mov    rdi,QWORD PTR [rbx+0x10]
  43ed4a:	mov    r12,rax
  43ed4d:	call   424d40 <xmlStrEqual@plt+0x20e00>
  43ed52:	cmp    BYTE PTR [rbx+0xc],0x0
  43ed56:	lea    rsi,[rip+0x10a38]        # 44f795 <xmlStrEqual@plt+0x4b855>
  43ed5d:	lea    rdx,[rip+0x10a2e]        # 44f792 <xmlStrEqual@plt+0x4b852>
  43ed64:	cmove  rdx,rsi
  43ed68:	sub    rsp,0x8
  43ed6c:	mov    ecx,DWORD PTR [rsp+0x14]
  43ed70:	movsxd rdi,DWORD PTR [rip+0x36a2d]        # 4757a4 <xmlStrEqual@plt+0x71864>
  43ed77:	push   rcx
  43ed78:	imul   rdi,rdi,0x1f4
  43ed7f:	lea    r8,[rip+0x14b02]        # 453888 <xmlStrEqual@plt+0x4f948>
  43ed86:	push   r15
  43ed88:	add    rdi,rbp
  43ed8b:	mov    rcx,0xffffffffffffffff
  43ed92:	push   r14
  43ed94:	mov    esi,0x1f4
  43ed99:	push   r13
  43ed9b:	push   r12
  43ed9d:	push   rax
  43ed9e:	xor    eax,eax
  43eda0:	push   rdx
  43eda1:	mov    edx,0x1
  43eda6:	mov    r9,QWORD PTR [rbx]
  43eda9:	call   403a40 <__snprintf_chk@plt>
  43edae:	movsxd rax,DWORD PTR [rip+0x369ef]        # 4757a4 <xmlStrEqual@plt+0x71864>
  43edb5:	add    rsp,0x58
  43edb9:	imul   rax,rax,0x1f4
  43edc0:	pop    rbx
  43edc1:	add    rax,rbp
  43edc4:	pop    rbp
  43edc5:	pop    r12
  43edc7:	pop    r13
  43edc9:	pop    r14
  43edcb:	pop    r15
  43edcd:	ret    
  43edce:	xchg   ax,ax
  43edd0:	movsxd rax,ecx
  43edd3:	imul   rax,rax,0x1f4
  43edda:	lea    rdx,[rip+0x35fff]        # 474de0 <xmlStrEqual@plt+0x70ea0>
  43ede1:	add    rax,rdx
  43ede4:	mov    edx,0x5f4c
  43ede9:	mov    DWORD PTR [rax],0x4c554e5f
  43edef:	mov    WORD PTR [rax+0x4],dx
  43edf3:	mov    BYTE PTR [rax+0x6],0x0
  43edf7:	ret    
  43edf8:	nop    DWORD PTR [rax+rax*1+0x0]
  43ee00:	endbr64 
  43ee04:	push   r12
  43ee06:	mov    r12,0x474da8
  43ee0d:	push   rbp
  43ee0e:	mov    rbp,rdi
  43ee11:	push   rbx
  43ee12:	mov    rax,QWORD PTR [r12]
  43ee16:	call   QWORD PTR [rax+0x40]
  43ee19:	test   eax,eax
  43ee1b:	je     43eef0 <xmlStrEqual@plt+0x3afb0>
  43ee21:	mov    edi,0x38
  43ee26:	call   434fe0 <xmlStrEqual@plt+0x310a0>
  43ee2b:	mov    rdi,rbp
  43ee2e:	mov    rbx,rax
  43ee31:	call   403ed0 <strdup@plt>
  43ee36:	mov    QWORD PTR [rbx],rax
  43ee39:	mov    rax,QWORD PTR [r12]
  43ee3d:	mov    rdi,rbp
  43ee40:	call   QWORD PTR [rax+0x40]
  43ee43:	mov    DWORD PTR [rbx+0x8],eax
  43ee46:	movabs rax,0xfffffff7fffffff7
  43ee50:	mov    QWORD PTR [rbx+0x30],rax
  43ee54:	mov    QWORD PTR [rbx+0x10],0x0
  43ee5c:	mov    QWORD PTR [rbx+0x18],0x0
  43ee64:	mov    rax,QWORD PTR [r12]
  43ee68:	mov    rdi,rbp
  43ee6b:	call   QWORD PTR [rax+0x38]
  43ee6e:	mov    r12,0x469e3c
  43ee75:	cmp    al,0x1
  43ee77:	mov    eax,DWORD PTR [r12]
  43ee7b:	sete   BYTE PTR [rbx+0xc]
  43ee7f:	test   eax,eax
  43ee81:	jle    43ee9c <xmlStrEqual@plt+0x3af5c>
  43ee83:	mov    ecx,DWORD PTR [rbx+0x8]
  43ee86:	mov    rdx,rbp
  43ee89:	lea    rsi,[rip+0x14aa8]        # 453938 <xmlStrEqual@plt+0x4f9f8>
  43ee90:	mov    edi,0x5
  43ee95:	xor    eax,eax
  43ee97:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  43ee9c:	mov    rax,0x474dd0
  43eea3:	mov    QWORD PTR [rbx+0x20],0x0
  43eeab:	mov    QWORD PTR [rbx+0x28],0x0
  43eeb3:	mov    rsi,QWORD PTR [rax]
  43eeb6:	mov    rdi,rbx
  43eeb9:	call   42dcf0 <xmlStrEqual@plt+0x29db0>
  43eebe:	cmp    DWORD PTR [r12],0x1
  43eec3:	jle    43eede <xmlStrEqual@plt+0x3af9e>
  43eec5:	mov    ecx,DWORD PTR [rbx+0x8]
  43eec8:	mov    rdx,rbp
  43eecb:	lea    rsi,[rip+0x14a96]        # 453968 <xmlStrEqual@plt+0x4fa28>
  43eed2:	mov    edi,0x6
  43eed7:	xor    eax,eax
  43eed9:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  43eede:	mov    rax,rbx
  43eee1:	pop    rbx
  43eee2:	pop    rbp
  43eee3:	pop    r12
  43eee5:	ret    
  43eee6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43eef0:	mov    rdx,rbp
  43eef3:	xor    ebx,ebx
  43eef5:	lea    rsi,[rip+0x149ec]        # 4538e8 <xmlStrEqual@plt+0x4f9a8>
  43eefc:	mov    edi,0x2
  43ef01:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  43ef06:	mov    rax,rbx
  43ef09:	pop    rbx
  43ef0a:	pop    rbp
  43ef0b:	pop    r12
  43ef0d:	ret    
  43ef0e:	xchg   ax,ax
  43ef10:	endbr64 
  43ef14:	push   r13
  43ef16:	push   r12
  43ef18:	push   rbp
  43ef19:	push   rbx
  43ef1a:	sub    rsp,0x8
  43ef1e:	mov    rax,0x474dd0
  43ef25:	mov    r12,QWORD PTR [rax]
  43ef28:	mov    rbx,QWORD PTR [r12+0x8]
  43ef2d:	cmp    r12,rbx
  43ef30:	je     43ef70 <xmlStrEqual@plt+0x3b030>
  43ef32:	mov    r13,rdi
  43ef35:	jmp    43ef49 <xmlStrEqual@plt+0x3b009>
  43ef37:	nop    WORD PTR [rax+rax*1+0x0]
  43ef40:	mov    rbx,QWORD PTR [rbx+0x8]
  43ef44:	cmp    r12,rbx
  43ef47:	je     43ef70 <xmlStrEqual@plt+0x3b030>
  43ef49:	mov    rbp,QWORD PTR [rbx+0x10]
  43ef4d:	mov    rsi,r13
  43ef50:	mov    rdi,QWORD PTR [rbp+0x0]
  43ef54:	call   4037c0 <strcmp@plt>
  43ef59:	test   eax,eax
  43ef5b:	jne    43ef40 <xmlStrEqual@plt+0x3b000>
  43ef5d:	add    rsp,0x8
  43ef61:	pop    rbx
  43ef62:	mov    rax,rbp
  43ef65:	pop    rbp
  43ef66:	pop    r12
  43ef68:	pop    r13
  43ef6a:	ret    
  43ef6b:	nop    DWORD PTR [rax+rax*1+0x0]
  43ef70:	add    rsp,0x8
  43ef74:	pop    rbx
  43ef75:	xor    ebp,ebp
  43ef77:	mov    rax,rbp
  43ef7a:	pop    rbp
  43ef7b:	pop    r12
  43ef7d:	pop    r13
  43ef7f:	ret    
  43ef80:	endbr64 
  43ef84:	push   r13
  43ef86:	mov    r13d,edi
  43ef89:	push   r12
  43ef8b:	push   rbp
  43ef8c:	push   rbx
  43ef8d:	sub    rsp,0x8
  43ef91:	mov    r12,0x474dd0
  43ef98:	mov    rax,QWORD PTR [r12]
  43ef9c:	mov    rbx,QWORD PTR [rax+0x8]
  43efa0:	cmp    rax,rbx
  43efa3:	jne    43efba <xmlStrEqual@plt+0x3b07a>
  43efa5:	jmp    43eff0 <xmlStrEqual@plt+0x3b0b0>
  43efa7:	nop    WORD PTR [rax+rax*1+0x0]
  43efb0:	mov    rbx,QWORD PTR [rbx+0x8]
  43efb4:	cmp    QWORD PTR [r12],rbx
  43efb8:	je     43eff0 <xmlStrEqual@plt+0x3b0b0>
  43efba:	mov    rbp,QWORD PTR [rbx+0x10]
  43efbe:	mov    eax,DWORD PTR [rbp+0x8]
  43efc1:	test   eax,eax
  43efc3:	jne    43efd9 <xmlStrEqual@plt+0x3b099>
  43efc5:	mov    rax,0x474da8
  43efcc:	mov    rdi,QWORD PTR [rbp+0x0]
  43efd0:	mov    rax,QWORD PTR [rax]
  43efd3:	call   QWORD PTR [rax+0x40]
  43efd6:	mov    DWORD PTR [rbp+0x8],eax
  43efd9:	cmp    r13d,eax
  43efdc:	jne    43efb0 <xmlStrEqual@plt+0x3b070>
  43efde:	add    rsp,0x8
  43efe2:	pop    rbx
  43efe3:	mov    rax,rbp
  43efe6:	pop    rbp
  43efe7:	pop    r12
  43efe9:	pop    r13
  43efeb:	ret    
  43efec:	nop    DWORD PTR [rax+0x0]
  43eff0:	add    rsp,0x8
  43eff4:	pop    rbx
  43eff5:	xor    ebp,ebp
  43eff7:	mov    rax,rbp
  43effa:	pop    rbp
  43effb:	pop    r12
  43effd:	pop    r13
  43efff:	ret    
  43f000:	endbr64 
  43f004:	push   r13
  43f006:	push   r12
  43f008:	mov    r12,rdi
  43f00b:	push   rbp
  43f00c:	push   rbx
  43f00d:	sub    rsp,0x8
  43f011:	mov    r13,0x474dd0
  43f018:	mov    rax,QWORD PTR [r13+0x0]
  43f01c:	mov    rbx,QWORD PTR [rax+0x8]
  43f020:	cmp    rax,rbx
  43f023:	jne    43f05a <xmlStrEqual@plt+0x3b11a>
  43f025:	jmp    43f090 <xmlStrEqual@plt+0x3b150>
  43f027:	nop    WORD PTR [rax+rax*1+0x0]
  43f030:	cmp    ax,0xa
  43f034:	jne    43f050 <xmlStrEqual@plt+0x3b110>
  43f036:	mov    rsi,QWORD PTR [rbp+0x18]
  43f03a:	test   rsi,rsi
  43f03d:	je     43f050 <xmlStrEqual@plt+0x3b110>
  43f03f:	mov    rdi,r12
  43f042:	call   425310 <xmlStrEqual@plt+0x213d0>
  43f047:	test   eax,eax
  43f049:	je     43f081 <xmlStrEqual@plt+0x3b141>
  43f04b:	nop    DWORD PTR [rax+rax*1+0x0]
  43f050:	mov    rbx,QWORD PTR [rbx+0x8]
  43f054:	cmp    QWORD PTR [r13+0x0],rbx
  43f058:	je     43f090 <xmlStrEqual@plt+0x3b150>
  43f05a:	mov    rdi,r12
  43f05d:	mov    rbp,QWORD PTR [rbx+0x10]
  43f061:	call   425890 <xmlStrEqual@plt+0x21950>
  43f066:	cmp    ax,0x2
  43f06a:	jne    43f030 <xmlStrEqual@plt+0x3b0f0>
  43f06c:	mov    rsi,QWORD PTR [rbp+0x10]
  43f070:	test   rsi,rsi
  43f073:	je     43f050 <xmlStrEqual@plt+0x3b110>
  43f075:	mov    rdi,r12
  43f078:	call   425310 <xmlStrEqual@plt+0x213d0>
  43f07d:	test   eax,eax
  43f07f:	jne    43f050 <xmlStrEqual@plt+0x3b110>
  43f081:	add    rsp,0x8
  43f085:	pop    rbx
  43f086:	mov    rax,rbp
  43f089:	pop    rbp
  43f08a:	pop    r12
  43f08c:	pop    r13
  43f08e:	ret    
  43f08f:	nop
  43f090:	mov    rax,0x469e3c
  43f097:	xor    ebp,ebp
  43f099:	cmp    DWORD PTR [rax],0x1
  43f09c:	jle    43f081 <xmlStrEqual@plt+0x3b141>
  43f09e:	mov    rdi,r12
  43f0a1:	call   424d40 <xmlStrEqual@plt+0x20e00>
  43f0a6:	mov    rdx,rax
  43f0a9:	lea    rsi,[rip+0x148f0]        # 4539a0 <xmlStrEqual@plt+0x4fa60>
  43f0b0:	xor    eax,eax
  43f0b2:	mov    edi,0x6
  43f0b7:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  43f0bc:	add    rsp,0x8
  43f0c0:	pop    rbx
  43f0c1:	mov    rax,rbp
  43f0c4:	pop    rbp
  43f0c5:	pop    r12
  43f0c7:	pop    r13
  43f0c9:	ret    
  43f0ca:	nop    WORD PTR [rax+rax*1+0x0]
  43f0d0:	endbr64 
  43f0d4:	push   r15
  43f0d6:	push   r14
  43f0d8:	push   r13
  43f0da:	push   r12
  43f0dc:	push   rbp
  43f0dd:	push   rbx
  43f0de:	sub    rsp,0xfc8
  43f0e5:	mov    DWORD PTR [rsp+0xc],edi
  43f0e9:	mov    r13,0x474dd0
  43f0f0:	mov    rax,QWORD PTR fs:0x28
  43f0f9:	mov    QWORD PTR [rsp+0xfb8],rax
  43f101:	xor    eax,eax
  43f103:	mov    rax,QWORD PTR [r13+0x0]
  43f107:	test   rax,rax
  43f10a:	je     43f113 <xmlStrEqual@plt+0x3b1d3>
  43f10c:	mov    ecx,DWORD PTR [rax+0x18]
  43f10f:	test   ecx,ecx
  43f111:	je     43f12c <xmlStrEqual@plt+0x3b1ec>
  43f113:	mov    ebx,DWORD PTR [rsp+0xc]
  43f117:	cmp    ebx,0x4
  43f11a:	jle    43f158 <xmlStrEqual@plt+0x3b218>
  43f11c:	mov    rdx,0x469e3c
  43f123:	mov    edx,DWORD PTR [rdx]
  43f125:	add    edx,0x4
  43f128:	cmp    ebx,edx
  43f12a:	jle    43f158 <xmlStrEqual@plt+0x3b218>
  43f12c:	mov    rax,QWORD PTR [rsp+0xfb8]
  43f134:	xor    rax,QWORD PTR fs:0x28
  43f13d:	jne    43f347 <xmlStrEqual@plt+0x3b407>
  43f143:	add    rsp,0xfc8
  43f14a:	pop    rbx
  43f14b:	pop    rbp
  43f14c:	pop    r12
  43f14e:	pop    r13
  43f150:	pop    r14
  43f152:	pop    r15
  43f154:	ret    
  43f155:	nop    DWORD PTR [rax]
  43f158:	vmovdqa xmm0,XMMWORD PTR [rip+0x14a50]        # 453bb0 <xmlStrEqual@plt+0x4fc70>
  43f160:	mov    DWORD PTR [rsp+0x30],0xa0a2a
  43f168:	vmovaps XMMWORD PTR [rsp+0x10],xmm0
  43f16e:	vmovdqa xmm0,XMMWORD PTR [rip+0x14a4a]        # 453bc0 <xmlStrEqual@plt+0x4fc80>
  43f176:	lea    rbx,[rsp+0x10]
  43f17b:	vmovaps XMMWORD PTR [rsp+0x20],xmm0
  43f181:	mov    rbp,QWORD PTR [rax+0x8]
  43f185:	mov    r12d,0xfa0
  43f18b:	lea    r14,[rip+0x1468e]        # 453820 <xmlStrEqual@plt+0x4f8e0>
  43f192:	cmp    rax,rbp
  43f195:	je     43f32d <xmlStrEqual@plt+0x3b3ed>
  43f19b:	nop    DWORD PTR [rax+rax*1+0x0]
  43f1a0:	mov    r15,QWORD PTR [rbp+0x10]
  43f1a4:	lea    rcx,[rip+0x105ea]        # 44f795 <xmlStrEqual@plt+0x4b855>
  43f1ab:	cmp    BYTE PTR [r15+0xc],0x0
  43f1b0:	lea    rax,[rip+0x105db]        # 44f792 <xmlStrEqual@plt+0x4b852>
  43f1b7:	cmovne rcx,rax
  43f1bb:	mov    rdi,rbx
  43f1be:	mov    edx,DWORD PTR [rdi]
  43f1c0:	add    rdi,0x4
  43f1c4:	lea    eax,[rdx-0x1010101]
  43f1ca:	andn   eax,edx,eax
  43f1cf:	and    eax,0x80808080
  43f1d4:	je     43f1be <xmlStrEqual@plt+0x3b27e>
  43f1d6:	mov    edx,eax
  43f1d8:	shr    edx,0x10
  43f1db:	test   eax,0x8080
  43f1e0:	cmove  eax,edx
  43f1e3:	lea    rdx,[rdi+0x2]
  43f1e7:	cmove  rdi,rdx
  43f1eb:	mov    esi,eax
  43f1ed:	add    sil,al
  43f1f0:	sbb    rdi,0x3
  43f1f4:	sub    rsp,0x8
  43f1f8:	push   rcx
  43f1f9:	sub    rdi,rbx
  43f1fc:	mov    rsi,r12
  43f1ff:	mov    r9,QWORD PTR [r15]
  43f202:	sub    rsi,rdi
  43f205:	mov    edx,0x1
  43f20a:	add    rdi,rbx
  43f20d:	mov    r8,r14
  43f210:	mov    rcx,0xffffffffffffffff
  43f217:	xor    eax,eax
  43f219:	call   403a40 <__snprintf_chk@plt>
  43f21e:	mov    rdi,QWORD PTR [r15+0x10]
  43f222:	pop    rax
  43f223:	pop    rdx
  43f224:	test   rdi,rdi
  43f227:	je     43f291 <xmlStrEqual@plt+0x3b351>
  43f229:	call   424d40 <xmlStrEqual@plt+0x20e00>
  43f22e:	mov    r9,rax
  43f231:	mov    rdi,rbx
  43f234:	mov    eax,DWORD PTR [rdi]
  43f236:	add    rdi,0x4
  43f23a:	lea    edx,[rax-0x1010101]
  43f240:	andn   edx,eax,edx
  43f245:	and    edx,0x80808080
  43f24b:	je     43f234 <xmlStrEqual@plt+0x3b2f4>
  43f24d:	mov    ecx,edx
  43f24f:	shr    ecx,0x10
  43f252:	test   edx,0x8080
  43f258:	cmove  edx,ecx
  43f25b:	lea    rcx,[rdi+0x2]
  43f25f:	cmove  rdi,rcx
  43f263:	mov    eax,edx
  43f265:	add    al,dl
  43f267:	sbb    rdi,0x3
  43f26b:	sub    rdi,rbx
  43f26e:	mov    rsi,r12
  43f271:	sub    rsi,rdi
  43f274:	lea    r8,[rip+0x145b5]        # 453830 <xmlStrEqual@plt+0x4f8f0>
  43f27b:	add    rdi,rbx
  43f27e:	mov    rcx,0xffffffffffffffff
  43f285:	mov    edx,0x1
  43f28a:	xor    eax,eax
  43f28c:	call   403a40 <__snprintf_chk@plt>
  43f291:	mov    rdi,QWORD PTR [r15+0x18]
  43f295:	test   rdi,rdi
  43f298:	je     43f302 <xmlStrEqual@plt+0x3b3c2>
  43f29a:	call   424d40 <xmlStrEqual@plt+0x20e00>
  43f29f:	mov    r9,rax
  43f2a2:	mov    rdi,rbx
  43f2a5:	mov    eax,DWORD PTR [rdi]
  43f2a7:	add    rdi,0x4
  43f2ab:	lea    edx,[rax-0x1010101]
  43f2b1:	andn   edx,eax,edx
  43f2b6:	and    edx,0x80808080
  43f2bc:	je     43f2a5 <xmlStrEqual@plt+0x3b365>
  43f2be:	mov    ecx,edx
  43f2c0:	shr    ecx,0x10
  43f2c3:	test   edx,0x8080
  43f2c9:	cmove  edx,ecx
  43f2cc:	lea    rcx,[rdi+0x2]
  43f2d0:	cmove  rdi,rcx
  43f2d4:	mov    eax,edx
  43f2d6:	add    al,dl
  43f2d8:	sbb    rdi,0x3
  43f2dc:	sub    rdi,rbx
  43f2df:	mov    rsi,r12
  43f2e2:	sub    rsi,rdi
  43f2e5:	lea    r8,[rip+0x14556]        # 453842 <xmlStrEqual@plt+0x4f902>
  43f2ec:	add    rdi,rbx
  43f2ef:	mov    rcx,0xffffffffffffffff
  43f2f6:	mov    edx,0x1
  43f2fb:	xor    eax,eax
  43f2fd:	call   403a40 <__snprintf_chk@plt>
  43f302:	mov    rbp,QWORD PTR [rbp+0x8]
  43f306:	cmp    QWORD PTR [r13+0x0],rbp
  43f30a:	jne    43f1a0 <xmlStrEqual@plt+0x3b260>
  43f310:	cmp    DWORD PTR [rsp+0xc],0x4
  43f315:	jle    43f32d <xmlStrEqual@plt+0x3b3ed>
  43f317:	mov    rax,0x469e3c
  43f31e:	mov    eax,DWORD PTR [rax]
  43f320:	add    eax,0x4
  43f323:	cmp    DWORD PTR [rsp+0xc],eax
  43f327:	jg     43f12c <xmlStrEqual@plt+0x3b1ec>
  43f32d:	mov    edi,DWORD PTR [rsp+0xc]
  43f331:	mov    rdx,rbx
  43f334:	lea    rsi,[rip+0x932f]        # 44866a <xmlStrEqual@plt+0x4472a>
  43f33b:	xor    eax,eax
  43f33d:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  43f342:	jmp    43f12c <xmlStrEqual@plt+0x3b1ec>
  43f347:	call   403c00 <__stack_chk_fail@plt>
  43f34c:	nop    DWORD PTR [rax+0x0]
  43f350:	endbr64 
  43f354:	push   rbx
  43f355:	cmp    edi,0x2
  43f358:	je     43f380 <xmlStrEqual@plt+0x3b440>
  43f35a:	cmp    edi,0xa
  43f35d:	je     43f3c8 <xmlStrEqual@plt+0x3b488>
  43f35f:	mov    rax,0x469e3c
  43f366:	xor    ebx,ebx
  43f368:	cmp    DWORD PTR [rax],0x1
  43f36b:	jg     43f410 <xmlStrEqual@plt+0x3b4d0>
  43f371:	mov    rax,rbx
  43f374:	pop    rbx
  43f375:	ret    
  43f376:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43f380:	mov    rax,0x474dd0
  43f387:	mov    rcx,QWORD PTR [rax]
  43f38a:	mov    rax,QWORD PTR [rcx+0x8]
  43f38e:	cmp    rcx,rax
  43f391:	je     43f3bb <xmlStrEqual@plt+0x3b47b>
  43f393:	nop    DWORD PTR [rax+rax*1+0x0]
  43f398:	mov    rbx,QWORD PTR [rax+0x10]
  43f39c:	mov    rdx,QWORD PTR [rbx+0x10]
  43f3a0:	test   rdx,rdx
  43f3a3:	je     43f3b2 <xmlStrEqual@plt+0x3b472>
  43f3a5:	mov    esi,DWORD PTR [rdx+0x18]
  43f3a8:	test   esi,esi
  43f3aa:	je     43f3b2 <xmlStrEqual@plt+0x3b472>
  43f3ac:	cmp    BYTE PTR [rbx+0xc],0x1
  43f3b0:	je     43f371 <xmlStrEqual@plt+0x3b431>
  43f3b2:	mov    rax,QWORD PTR [rax+0x8]
  43f3b6:	cmp    rcx,rax
  43f3b9:	jne    43f398 <xmlStrEqual@plt+0x3b458>
  43f3bb:	xor    ebx,ebx
  43f3bd:	mov    rax,rbx
  43f3c0:	pop    rbx
  43f3c1:	ret    
  43f3c2:	nop    WORD PTR [rax+rax*1+0x0]
  43f3c8:	mov    rax,0x474dd0
  43f3cf:	mov    rcx,QWORD PTR [rax]
  43f3d2:	mov    rax,QWORD PTR [rcx+0x8]
  43f3d6:	cmp    rcx,rax
  43f3d9:	je     43f3bb <xmlStrEqual@plt+0x3b47b>
  43f3db:	nop    DWORD PTR [rax+rax*1+0x0]
  43f3e0:	mov    rbx,QWORD PTR [rax+0x10]
  43f3e4:	mov    rdx,QWORD PTR [rbx+0x18]
  43f3e8:	test   rdx,rdx
  43f3eb:	je     43f3fe <xmlStrEqual@plt+0x3b4be>
  43f3ed:	mov    edx,DWORD PTR [rdx+0x18]
  43f3f0:	test   edx,edx
  43f3f2:	je     43f3fe <xmlStrEqual@plt+0x3b4be>
  43f3f4:	cmp    BYTE PTR [rbx+0xc],0x1
  43f3f8:	je     43f371 <xmlStrEqual@plt+0x3b431>
  43f3fe:	mov    rax,QWORD PTR [rax+0x8]
  43f402:	cmp    rcx,rax
  43f405:	jne    43f3e0 <xmlStrEqual@plt+0x3b4a0>
  43f407:	xor    ebx,ebx
  43f409:	jmp    43f3bd <xmlStrEqual@plt+0x3b47d>
  43f40b:	nop    DWORD PTR [rax+rax*1+0x0]
  43f410:	mov    edx,edi
  43f412:	xor    eax,eax
  43f414:	lea    rsi,[rip+0x145cd]        # 4539e8 <xmlStrEqual@plt+0x4faa8>
  43f41b:	mov    edi,0x6
  43f420:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  43f425:	mov    rax,rbx
  43f428:	pop    rbx
  43f429:	ret    
  43f42a:	nop    WORD PTR [rax+rax*1+0x0]
  43f430:	endbr64 
  43f434:	cmp    esi,0x2
  43f437:	je     43f450 <xmlStrEqual@plt+0x3b510>
  43f439:	cmp    esi,0xa
  43f43c:	jne    43f448 <xmlStrEqual@plt+0x3b508>
  43f43e:	mov    rax,QWORD PTR [rdi+0x18]
  43f442:	ret    
  43f443:	nop    DWORD PTR [rax+rax*1+0x0]
  43f448:	xor    eax,eax
  43f44a:	ret    
  43f44b:	nop    DWORD PTR [rax+rax*1+0x0]
  43f450:	mov    rax,QWORD PTR [rdi+0x10]
  43f454:	ret    
  43f455:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  43f460:	endbr64 
  43f464:	cmp    esi,0x2
  43f467:	je     43f480 <xmlStrEqual@plt+0x3b540>
  43f469:	cmp    esi,0xa
  43f46c:	jne    43f478 <xmlStrEqual@plt+0x3b538>
  43f46e:	mov    rax,QWORD PTR [rdi+0x28]
  43f472:	ret    
  43f473:	nop    DWORD PTR [rax+rax*1+0x0]
  43f478:	xor    eax,eax
  43f47a:	ret    
  43f47b:	nop    DWORD PTR [rax+rax*1+0x0]
  43f480:	mov    rax,QWORD PTR [rdi+0x20]
  43f484:	ret    
  43f485:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  43f490:	endbr64 
  43f494:	push   r12
  43f496:	push   rbp
  43f497:	mov    rbp,rdi
  43f49a:	push   rbx
  43f49b:	mov    ebx,esi
  43f49d:	cmp    esi,0x2
  43f4a0:	je     43f4f0 <xmlStrEqual@plt+0x3b5b0>
  43f4a2:	cmp    esi,0xa
  43f4a5:	jne    43f670 <xmlStrEqual@plt+0x3b730>
  43f4ab:	mov    rdx,0x4757c0
  43f4b2:	xor    eax,eax
  43f4b4:	cmp    DWORD PTR [rdx],0x2
  43f4b7:	je     43f4e4 <xmlStrEqual@plt+0x3b5a4>
  43f4b9:	mov    esi,0xa
  43f4be:	call   43f460 <xmlStrEqual@plt+0x3b520>
  43f4c3:	test   rax,rax
  43f4c6:	je     43f710 <xmlStrEqual@plt+0x3b7d0>
  43f4cc:	mov    esi,ebx
  43f4ce:	mov    rdi,rbp
  43f4d1:	call   43f430 <xmlStrEqual@plt+0x3b4f0>
  43f4d6:	test   rax,rax
  43f4d9:	je     43f5b0 <xmlStrEqual@plt+0x3b670>
  43f4df:	mov    eax,0x1
  43f4e4:	pop    rbx
  43f4e5:	pop    rbp
  43f4e6:	pop    r12
  43f4e8:	ret    
  43f4e9:	nop    DWORD PTR [rax+0x0]
  43f4f0:	mov    rdx,0x4757c0
  43f4f7:	xor    eax,eax
  43f4f9:	cmp    DWORD PTR [rdx],0xa
  43f4fc:	je     43f4e4 <xmlStrEqual@plt+0x3b5a4>
  43f4fe:	mov    esi,0x2
  43f503:	call   43f460 <xmlStrEqual@plt+0x3b520>
  43f508:	test   rax,rax
  43f50b:	jne    43f4cc <xmlStrEqual@plt+0x3b58c>
  43f50d:	mov    rax,0x474da8
  43f514:	mov    rdi,QWORD PTR [rbp+0x0]
  43f518:	mov    rax,QWORD PTR [rax]
  43f51b:	mov    esi,0x2
  43f520:	call   QWORD PTR [rax+0x28]
  43f523:	mov    QWORD PTR [rbp+0x20],rax
  43f527:	mov    rdx,0x469e3c
  43f52e:	mov    edx,DWORD PTR [rdx]
  43f530:	test   rax,rax
  43f533:	je     43f6d0 <xmlStrEqual@plt+0x3b790>
  43f539:	mov    r9d,DWORD PTR [rax+0x18]
  43f53d:	test   r9d,r9d
  43f540:	je     43f6d0 <xmlStrEqual@plt+0x3b790>
  43f546:	test   edx,edx
  43f548:	jle    43f581 <xmlStrEqual@plt+0x3b641>
  43f54a:	mov    rdi,rax
  43f54d:	call   424d40 <xmlStrEqual@plt+0x20e00>
  43f552:	mov    r8,rax
  43f555:	cmp    ebx,0x2
  43f558:	lea    rax,[rip+0x9366]        # 4488c5 <xmlStrEqual@plt+0x44985>
  43f55f:	lea    rdx,[rip+0x935a]        # 4488c0 <xmlStrEqual@plt+0x44980>
  43f566:	cmovne rdx,rax
  43f56a:	mov    rcx,QWORD PTR [rbp+0x0]
  43f56e:	lea    rsi,[rip+0x144d3]        # 453a48 <xmlStrEqual@plt+0x4fb08>
  43f575:	mov    edi,0x5
  43f57a:	xor    eax,eax
  43f57c:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  43f581:	mov    rax,0x46d558
  43f588:	mov    esi,ebx
  43f58a:	mov    rax,QWORD PTR [rax]
  43f58d:	mov    rdi,rbp
  43f590:	call   QWORD PTR [rax+0x18]
  43f593:	mov    rax,0x475830
  43f59a:	mov    edx,ebx
  43f59c:	mov    rdi,QWORD PTR [rax]
  43f59f:	mov    rsi,rbp
  43f5a2:	mov    rax,QWORD PTR [rdi+0x28]
  43f5a6:	call   QWORD PTR [rax+0x18]
  43f5a9:	jmp    43f4cc <xmlStrEqual@plt+0x3b58c>
  43f5ae:	xchg   ax,ax
  43f5b0:	cmp    ebx,0x2
  43f5b3:	je     43f730 <xmlStrEqual@plt+0x3b7f0>
  43f5b9:	cmp    ebx,0xa
  43f5bc:	jne    43f69a <xmlStrEqual@plt+0x3b75a>
  43f5c2:	mov    r12,0x474dc0
  43f5c9:	mov    rax,0x474da8
  43f5d0:	mov    esi,DWORD PTR [r12]
  43f5d4:	mov    rax,QWORD PTR [rax]
  43f5d7:	mov    rdi,QWORD PTR [rbp+0x0]
  43f5db:	call   QWORD PTR [rax+0x30]
  43f5de:	mov    QWORD PTR [rbp+0x18],rax
  43f5e2:	test   rax,rax
  43f5e5:	je     43f7c8 <xmlStrEqual@plt+0x3b888>
  43f5eb:	mov    ecx,DWORD PTR [rax+0x18]
  43f5ee:	test   ecx,ecx
  43f5f0:	je     43f4df <xmlStrEqual@plt+0x3b59f>
  43f5f6:	mov    rdx,0x469e3c
  43f5fd:	mov    edx,DWORD PTR [rdx]
  43f5ff:	test   edx,edx
  43f601:	jle    43f63a <xmlStrEqual@plt+0x3b6fa>
  43f603:	mov    rdi,rax
  43f606:	call   424d40 <xmlStrEqual@plt+0x20e00>
  43f60b:	mov    r8,rax
  43f60e:	cmp    ebx,0x2
  43f611:	lea    rax,[rip+0x92ad]        # 4488c5 <xmlStrEqual@plt+0x44985>
  43f618:	lea    rdx,[rip+0x92a1]        # 4488c0 <xmlStrEqual@plt+0x44980>
  43f61f:	cmovne rdx,rax
  43f623:	mov    rcx,QWORD PTR [rbp+0x0]
  43f627:	lea    rsi,[rip+0x144da]        # 453b08 <xmlStrEqual@plt+0x4fbc8>
  43f62e:	mov    edi,0x5
  43f633:	xor    eax,eax
  43f635:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  43f63a:	mov    rax,0x46d558
  43f641:	mov    esi,ebx
  43f643:	mov    rax,QWORD PTR [rax]
  43f646:	mov    rdi,rbp
  43f649:	call   QWORD PTR [rax+0x10]
  43f64c:	mov    rax,0x475830
  43f653:	mov    edx,ebx
  43f655:	mov    rdi,QWORD PTR [rax]
  43f658:	mov    rsi,rbp
  43f65b:	mov    rax,QWORD PTR [rdi+0x28]
  43f65f:	call   QWORD PTR [rax+0x10]
  43f662:	jmp    43f4df <xmlStrEqual@plt+0x3b59f>
  43f667:	nop    WORD PTR [rax+rax*1+0x0]
  43f670:	call   43f460 <xmlStrEqual@plt+0x3b520>
  43f675:	test   rax,rax
  43f678:	jne    43f4cc <xmlStrEqual@plt+0x3b58c>
  43f67e:	mov    rax,0x474da8
  43f685:	mov    rdi,QWORD PTR [rbp+0x0]
  43f689:	mov    rax,QWORD PTR [rax]
  43f68c:	mov    esi,ebx
  43f68e:	call   QWORD PTR [rax+0x28]
  43f691:	cmp    ebx,0x2
  43f694:	je     43f523 <xmlStrEqual@plt+0x3b5e3>
  43f69a:	mov    rax,0x469e3c
  43f6a1:	cmp    DWORD PTR [rax],0x1
  43f6a4:	jg     43f6b0 <xmlStrEqual@plt+0x3b770>
  43f6a6:	pop    rbx
  43f6a7:	pop    rbp
  43f6a8:	mov    eax,0xfffffffe
  43f6ad:	pop    r12
  43f6af:	ret    
  43f6b0:	mov    edx,ebx
  43f6b2:	lea    rsi,[rip+0x141ad]        # 453866 <xmlStrEqual@plt+0x4f926>
  43f6b9:	mov    edi,0x6
  43f6be:	xor    eax,eax
  43f6c0:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  43f6c5:	jmp    43f6a6 <xmlStrEqual@plt+0x3b766>
  43f6c7:	nop    WORD PTR [rax+rax*1+0x0]
  43f6d0:	test   edx,edx
  43f6d2:	jle    43f4cc <xmlStrEqual@plt+0x3b58c>
  43f6d8:	cmp    ebx,0x2
  43f6db:	lea    rax,[rip+0x91e3]        # 4488c5 <xmlStrEqual@plt+0x44985>
  43f6e2:	lea    rdx,[rip+0x91d7]        # 4488c0 <xmlStrEqual@plt+0x44980>
  43f6e9:	cmovne rdx,rax
  43f6ed:	mov    rcx,QWORD PTR [rbp+0x0]
  43f6f1:	lea    rsi,[rip+0x14318]        # 453a10 <xmlStrEqual@plt+0x4fad0>
  43f6f8:	mov    edi,0x5
  43f6fd:	xor    eax,eax
  43f6ff:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  43f704:	jmp    43f4cc <xmlStrEqual@plt+0x3b58c>
  43f709:	nop    DWORD PTR [rax+0x0]
  43f710:	mov    rax,0x474da8
  43f717:	mov    rdi,QWORD PTR [rbp+0x0]
  43f71b:	mov    rax,QWORD PTR [rax]
  43f71e:	mov    esi,0xa
  43f723:	call   QWORD PTR [rax+0x28]
  43f726:	mov    QWORD PTR [rbp+0x28],rax
  43f72a:	jmp    43f527 <xmlStrEqual@plt+0x3b5e7>
  43f72f:	nop
  43f730:	mov    rax,0x474da8
  43f737:	mov    rdi,QWORD PTR [rbp+0x0]
  43f73b:	mov    rax,QWORD PTR [rax]
  43f73e:	mov    esi,0x2
  43f743:	call   QWORD PTR [rax+0x18]
  43f746:	mov    r8d,DWORD PTR [rax+0x18]
  43f74a:	mov    r12,rax
  43f74d:	test   r8d,r8d
  43f750:	jne    43f7a0 <xmlStrEqual@plt+0x3b860>
  43f752:	mov    rax,0x469e3c
  43f759:	mov    edi,DWORD PTR [rax]
  43f75b:	test   edi,edi
  43f75d:	jg     43f780 <xmlStrEqual@plt+0x3b840>
  43f75f:	xor    edi,edi
  43f761:	call   424b10 <xmlStrEqual@plt+0x20bd0>
  43f766:	mov    QWORD PTR [rbp+0x10],rax
  43f76a:	mov    rdi,r12
  43f76d:	call   42e2b0 <xmlStrEqual@plt+0x2a370>
  43f772:	mov    rax,QWORD PTR [rbp+0x10]
  43f776:	jmp    43f5eb <xmlStrEqual@plt+0x3b6ab>
  43f77b:	nop    DWORD PTR [rax+rax*1+0x0]
  43f780:	mov    rdx,QWORD PTR [rbp+0x0]
  43f784:	lea    rsi,[rip+0x142f5]        # 453a80 <xmlStrEqual@plt+0x4fb40>
  43f78b:	mov    edi,0x5
  43f790:	xor    eax,eax
  43f792:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  43f797:	jmp    43f75f <xmlStrEqual@plt+0x3b81f>
  43f799:	nop    DWORD PTR [rax+0x0]
  43f7a0:	mov    rax,QWORD PTR [rax+0x8]
  43f7a4:	mov    rdi,QWORD PTR [rax+0x10]
  43f7a8:	call   425060 <xmlStrEqual@plt+0x21120>
  43f7ad:	mov    QWORD PTR [rbp+0x10],rax
  43f7b1:	mov    rdi,r12
  43f7b4:	call   42e2b0 <xmlStrEqual@plt+0x2a370>
  43f7b9:	mov    rax,QWORD PTR [rbp+0x10]
  43f7bd:	jmp    43f5eb <xmlStrEqual@plt+0x3b6ab>
  43f7c2:	nop    WORD PTR [rax+rax*1+0x0]
  43f7c8:	mov    rax,0x469e3c
  43f7cf:	mov    esi,DWORD PTR [rax]
  43f7d1:	test   esi,esi
  43f7d3:	jle    43f803 <xmlStrEqual@plt+0x3b8c3>
  43f7d5:	cmp    DWORD PTR [r12],0x1
  43f7da:	lea    rax,[rip+0x1407e]        # 45385f <xmlStrEqual@plt+0x4f91f>
  43f7e1:	lea    rcx,[rip+0x1406c]        # 453854 <xmlStrEqual@plt+0x4f914>
  43f7e8:	cmovne rcx,rax
  43f7ec:	mov    rdx,QWORD PTR [rbp+0x0]
  43f7f0:	lea    rsi,[rip+0x142c9]        # 453ac0 <xmlStrEqual@plt+0x4fb80>
  43f7f7:	mov    edi,0x5
  43f7fc:	xor    eax,eax
  43f7fe:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  43f803:	xor    edi,edi
  43f805:	call   424b10 <xmlStrEqual@plt+0x20bd0>
  43f80a:	mov    QWORD PTR [rbp+0x18],rax
  43f80e:	jmp    43f5eb <xmlStrEqual@plt+0x3b6ab>
  43f813:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  43f81e:	xchg   ax,ax
  43f820:	endbr64 
  43f824:	cmp    esi,0x2
  43f827:	je     43f840 <xmlStrEqual@plt+0x3b900>
  43f829:	cmp    esi,0xa
  43f82c:	jne    43f838 <xmlStrEqual@plt+0x3b8f8>
  43f82e:	mov    eax,DWORD PTR [rdi+0x34]
  43f831:	ret    
  43f832:	nop    WORD PTR [rax+rax*1+0x0]
  43f838:	mov    eax,0xfffffff7
  43f83d:	ret    
  43f83e:	xchg   ax,ax
  43f840:	mov    eax,DWORD PTR [rdi+0x30]
  43f843:	ret    
  43f844:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  43f84f:	nop
  43f850:	endbr64 
  43f854:	lea    rax,[rdi+0x30]
  43f858:	cmp    esi,0x2
  43f85b:	je     43f86d <xmlStrEqual@plt+0x3b92d>
  43f85d:	add    rdi,0x34
  43f861:	mov    eax,0x0
  43f866:	cmp    esi,0xa
  43f869:	cmove  rax,rdi
  43f86d:	ret    
  43f86e:	xchg   ax,ax
  43f870:	endbr64 
  43f874:	push   rbp
  43f875:	push   rbx
  43f876:	mov    rbx,rdi
  43f879:	sub    rsp,0x8
  43f87d:	call   425890 <xmlStrEqual@plt+0x21950>
  43f882:	mov    rdi,rbx
  43f885:	mov    ebp,eax
  43f887:	call   43f000 <xmlStrEqual@plt+0x3b0c0>
  43f88c:	test   rax,rax
  43f88f:	je     43f8a8 <xmlStrEqual@plt+0x3b968>
  43f891:	add    rsp,0x8
  43f895:	pop    rbx
  43f896:	movzx  esi,bp
  43f899:	mov    rdi,rax
  43f89c:	pop    rbp
  43f89d:	jmp    43f850 <xmlStrEqual@plt+0x3b910>
  43f8a2:	nop    WORD PTR [rax+rax*1+0x0]
  43f8a8:	add    rsp,0x8
  43f8ac:	pop    rbx
  43f8ad:	xor    eax,eax
  43f8af:	pop    rbp
  43f8b0:	ret    
  43f8b1:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  43f8bc:	nop    DWORD PTR [rax+0x0]
  43f8c0:	endbr64 
  43f8c4:	sub    rsp,0x8
  43f8c8:	cmp    DWORD PTR [rdi+0x18],0x1
  43f8cc:	jne    43f8f0 <xmlStrEqual@plt+0x3b9b0>
  43f8ce:	call   424d40 <xmlStrEqual@plt+0x20e00>
  43f8d3:	mov    rsi,rax
  43f8d6:	mov    rax,0x474dc8
  43f8dd:	mov    rdi,QWORD PTR [rax]
  43f8e0:	add    rsp,0x8
  43f8e4:	jmp    43aca0 <xmlStrEqual@plt+0x36d60>
  43f8e9:	nop    DWORD PTR [rax+0x0]
  43f8f0:	mov    rax,0x469e3c
  43f8f7:	mov    eax,DWORD PTR [rax]
  43f8f9:	test   eax,eax
  43f8fb:	jle    43f918 <xmlStrEqual@plt+0x3b9d8>
  43f8fd:	call   424d40 <xmlStrEqual@plt+0x20e00>
  43f902:	mov    rdx,rax
  43f905:	lea    rsi,[rip+0x1423c]        # 453b48 <xmlStrEqual@plt+0x4fc08>
  43f90c:	mov    edi,0x5
  43f911:	xor    eax,eax
  43f913:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  43f918:	xor    eax,eax
  43f91a:	add    rsp,0x8
  43f91e:	ret    
  43f91f:	nop
  43f920:	endbr64 
  43f924:	sub    rsp,0x28
  43f928:	mov    rax,QWORD PTR fs:0x28
  43f931:	mov    QWORD PTR [rsp+0x18],rax
  43f936:	xor    eax,eax
  43f938:	call   403d60 <getpid@plt>
  43f93d:	lea    rsi,[rsp+0xc]
  43f942:	lea    rdi,[rsp+0x4]
  43f947:	mov    DWORD PTR [rsp+0x8],eax
  43f94b:	mov    DWORD PTR [rsp+0x4],0x19980330
  43f953:	call   403c30 <capget@plt>
  43f958:	test   eax,eax
  43f95a:	js     43f9d0 <xmlStrEqual@plt+0x3ba90>
  43f95c:	mov    rax,0x469e3c
  43f963:	mov    edx,DWORD PTR [rsp+0xc]
  43f967:	mov    eax,DWORD PTR [rax]
  43f969:	test   eax,eax
  43f96b:	jle    43f988 <xmlStrEqual@plt+0x3ba48>
  43f96d:	mov    ecx,DWORD PTR [rsp+0x10]
  43f971:	lea    rsi,[rip+0x14278]        # 453bf0 <xmlStrEqual@plt+0x4fcb0>
  43f978:	mov    edi,0x5
  43f97d:	xor    eax,eax
  43f97f:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  43f984:	mov    edx,DWORD PTR [rsp+0xc]
  43f988:	and    edx,0x3000
  43f98e:	mov    eax,0x1
  43f993:	cmp    edx,0x3000
  43f999:	jne    43f9b0 <xmlStrEqual@plt+0x3ba70>
  43f99b:	mov    rcx,QWORD PTR [rsp+0x18]
  43f9a0:	xor    rcx,QWORD PTR fs:0x28
  43f9a9:	jne    43f9e7 <xmlStrEqual@plt+0x3baa7>
  43f9ab:	add    rsp,0x28
  43f9af:	ret    
  43f9b0:	xor    eax,eax
  43f9b2:	lea    rsi,[rip+0x1425f]        # 453c18 <xmlStrEqual@plt+0x4fcd8>
  43f9b9:	mov    edi,0x1
  43f9be:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  43f9c3:	xor    eax,eax
  43f9c5:	jmp    43f99b <xmlStrEqual@plt+0x3ba5b>
  43f9c7:	nop    WORD PTR [rax+rax*1+0x0]
  43f9d0:	xor    eax,eax
  43f9d2:	lea    rsi,[rip+0x141f7]        # 453bd0 <xmlStrEqual@plt+0x4fc90>
  43f9d9:	mov    edi,0x1
  43f9de:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  43f9e3:	xor    eax,eax
  43f9e5:	jmp    43f99b <xmlStrEqual@plt+0x3ba5b>
  43f9e7:	call   403c00 <__stack_chk_fail@plt>
  43f9ec:	nop    DWORD PTR [rax+0x0]
  43f9f0:	endbr64 
  43f9f4:	sub    rsp,0x8
  43f9f8:	mov    rax,0x469e3c
  43f9ff:	cmp    DWORD PTR [rax],0x1
  43fa02:	jle    43fa17 <xmlStrEqual@plt+0x3bad7>
  43fa04:	lea    rsi,[rip+0x143b8]        # 453dc3 <xmlStrEqual@plt+0x4fe83>
  43fa0b:	mov    edi,0x6
  43fa10:	xor    eax,eax
  43fa12:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  43fa17:	mov    rax,0x475830
  43fa1e:	mov    rdi,QWORD PTR [rax]
  43fa21:	call   408330 <xmlStrEqual@plt+0x43f0>
  43fa26:	mov    rax,0x46d558
  43fa2d:	mov    rdx,QWORD PTR [rax]
  43fa30:	test   rdx,rdx
  43fa33:	je     43fa3a <xmlStrEqual@plt+0x3bafa>
  43fa35:	xor    eax,eax
  43fa37:	call   QWORD PTR [rdx+0x8]
  43fa3a:	mov    rax,0x474da8
  43fa41:	mov    rdx,QWORD PTR [rax]
  43fa44:	test   rdx,rdx
  43fa47:	je     43fa4e <xmlStrEqual@plt+0x3bb0e>
  43fa49:	xor    eax,eax
  43fa4b:	call   QWORD PTR [rdx+0x8]
  43fa4e:	xor    eax,eax
  43fa50:	call   43eca0 <xmlStrEqual@plt+0x3ad60>
  43fa55:	mov    rax,0x4757a8
  43fa5c:	mov    rdi,QWORD PTR [rax]
  43fa5f:	call   438570 <xmlStrEqual@plt+0x34630>
  43fa64:	xor    eax,eax
  43fa66:	call   43b560 <xmlStrEqual@plt+0x37620>
  43fa6b:	mov    rax,0x475858
  43fa72:	mov    rdi,QWORD PTR [rax]
  43fa75:	call   42ee20 <xmlStrEqual@plt+0x2aee0>
  43fa7a:	mov    rax,0x475860
  43fa81:	mov    rdi,QWORD PTR [rax]
  43fa84:	call   435d20 <xmlStrEqual@plt+0x31de0>
  43fa89:	xor    eax,eax
  43fa8b:	call   431690 <xmlStrEqual@plt+0x2d750>
  43fa90:	mov    edi,0x4
  43fa95:	lea    rsi,[rip+0x14334]        # 453dd0 <xmlStrEqual@plt+0x4fe90>
  43fa9c:	xor    eax,eax
  43fa9e:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  43faa3:	xor    edi,edi
  43faa5:	call   403c60 <exit@plt>
  43faaa:	nop    WORD PTR [rax+rax*1+0x0]
  43fab0:	endbr64 
  43fab4:	sub    rsp,0x8
  43fab8:	mov    rax,0x469e3c
  43fabf:	mov    eax,DWORD PTR [rax]
  43fac1:	cmp    edi,0x2
  43fac4:	je     43fb10 <xmlStrEqual@plt+0x3bbd0>
  43fac6:	cmp    edi,0xf
  43fac9:	je     43faf0 <xmlStrEqual@plt+0x3bbb0>
  43facb:	cmp    edi,0x1
  43face:	je     43fae0 <xmlStrEqual@plt+0x3bba0>
  43fad0:	test   eax,eax
  43fad2:	jg     43fb47 <xmlStrEqual@plt+0x3bc07>
  43fad4:	mov    edi,0x1
  43fad9:	call   403c60 <exit@plt>
  43fade:	xchg   ax,ax
  43fae0:	test   eax,eax
  43fae2:	jg     43fb30 <xmlStrEqual@plt+0x3bbf0>
  43fae4:	add    rsp,0x8
  43fae8:	ret    
  43fae9:	nop    DWORD PTR [rax+0x0]
  43faf0:	test   eax,eax
  43faf2:	jle    43fb07 <xmlStrEqual@plt+0x3bbc7>
  43faf4:	lea    rsi,[rip+0x14165]        # 453c60 <xmlStrEqual@plt+0x4fd20>
  43fafb:	mov    edi,0x5
  43fb00:	xor    eax,eax
  43fb02:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  43fb07:	add    rsp,0x8
  43fb0b:	jmp    43f9f0 <xmlStrEqual@plt+0x3bab0>
  43fb10:	test   eax,eax
  43fb12:	jle    43fb07 <xmlStrEqual@plt+0x3bbc7>
  43fb14:	lea    rsi,[rip+0x1416d]        # 453c88 <xmlStrEqual@plt+0x4fd48>
  43fb1b:	mov    edi,0x5
  43fb20:	xor    eax,eax
  43fb22:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  43fb27:	add    rsp,0x8
  43fb2b:	jmp    43f9f0 <xmlStrEqual@plt+0x3bab0>
  43fb30:	lea    rsi,[rip+0x142a5]        # 453ddc <xmlStrEqual@plt+0x4fe9c>
  43fb37:	mov    edi,0x5
  43fb3c:	xor    eax,eax
  43fb3e:	add    rsp,0x8
  43fb42:	jmp    430e20 <xmlStrEqual@plt+0x2cee0>
  43fb47:	mov    edx,edi
  43fb49:	lea    rsi,[rip+0x142a4]        # 453df4 <xmlStrEqual@plt+0x4feb4>
  43fb50:	mov    edi,0x5
  43fb55:	xor    eax,eax
  43fb57:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  43fb5c:	jmp    43fad4 <xmlStrEqual@plt+0x3bb94>
  43fb61:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43fb6b:	nop    DWORD PTR [rax+rax*1+0x0]
  43fb70:	endbr64 
  43fb74:	push   rbx
  43fb75:	mov    rbx,rdi
  43fb78:	call   403e60 <zmq_ctx_new@plt>
  43fb7d:	mov    QWORD PTR [rbx],rax
  43fb80:	mov    esi,0x3
  43fb85:	mov    rdi,rax
  43fb88:	call   403eb0 <zmq_socket@plt>
  43fb8d:	mov    QWORD PTR [rbx+0x8],rax
  43fb91:	lea    rsi,[rip+0x142de]        # 453e76 <xmlStrEqual@plt+0x4ff36>
  43fb98:	mov    rdi,rax
  43fb9b:	call   403b60 <zmq_connect@plt>
  43fba0:	test   eax,eax
  43fba2:	jne    43fbe0 <xmlStrEqual@plt+0x3bca0>
  43fba4:	mov    rax,0x469e3c
  43fbab:	mov    ebx,0x1
  43fbb0:	cmp    DWORD PTR [rax],0x1
  43fbb3:	jg     43fbc0 <xmlStrEqual@plt+0x3bc80>
  43fbb5:	mov    eax,ebx
  43fbb7:	pop    rbx
  43fbb8:	ret    
  43fbb9:	nop    DWORD PTR [rax+0x0]
  43fbc0:	xor    eax,eax
  43fbc2:	lea    rsi,[rip+0x1435f]        # 453f28 <xmlStrEqual@plt+0x4ffe8>
  43fbc9:	mov    edi,0x6
  43fbce:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  43fbd3:	mov    eax,ebx
  43fbd5:	pop    rbx
  43fbd6:	ret    
  43fbd7:	nop    WORD PTR [rax+rax*1+0x0]
  43fbe0:	mov    rdx,0x469e3c
  43fbe7:	cmp    DWORD PTR [rdx],0x1
  43fbea:	jle    43fc09 <xmlStrEqual@plt+0x3bcc9>
  43fbec:	mov    edi,eax
  43fbee:	call   403890 <zmq_strerror@plt>
  43fbf3:	mov    rdx,rax
  43fbf6:	lea    rsi,[rip+0x142cb]        # 453ec8 <xmlStrEqual@plt+0x4ff88>
  43fbfd:	mov    edi,0x6
  43fc02:	xor    eax,eax
  43fc04:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  43fc09:	xor    eax,eax
  43fc0b:	xor    ebx,ebx
  43fc0d:	lea    rsi,[rip+0x142e4]        # 453ef8 <xmlStrEqual@plt+0x4ffb8>
  43fc14:	mov    edi,0x2
  43fc19:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  43fc1e:	mov    eax,ebx
  43fc20:	pop    rbx
  43fc21:	ret    
  43fc22:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  43fc2d:	nop    DWORD PTR [rax]
  43fc30:	endbr64 
  43fc34:	push   rbp
  43fc35:	mov    rbp,rdi
  43fc38:	push   rbx
  43fc39:	sub    rsp,0x8
  43fc3d:	mov    rbx,0x469e3c
  43fc44:	cmp    DWORD PTR [rbx],0x1
  43fc47:	jle    43fc5c <xmlStrEqual@plt+0x3bd1c>
  43fc49:	lea    rsi,[rip+0x14239]        # 453e89 <xmlStrEqual@plt+0x4ff49>
  43fc50:	mov    edi,0x6
  43fc55:	xor    eax,eax
  43fc57:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  43fc5c:	mov    rdi,QWORD PTR [rbp+0x8]
  43fc60:	call   403d70 <zmq_close@plt>
  43fc65:	mov    rdi,QWORD PTR [rbp+0x0]
  43fc69:	call   403df0 <zmq_ctx_destroy@plt>
  43fc6e:	cmp    DWORD PTR [rbx],0x1
  43fc71:	jg     43fc80 <xmlStrEqual@plt+0x3bd40>
  43fc73:	add    rsp,0x8
  43fc77:	pop    rbx
  43fc78:	pop    rbp
  43fc79:	ret    
  43fc7a:	nop    WORD PTR [rax+rax*1+0x0]
  43fc80:	add    rsp,0x8
  43fc84:	pop    rbx
  43fc85:	lea    rsi,[rip+0x1421b]        # 453ea7 <xmlStrEqual@plt+0x4ff67>
  43fc8c:	mov    edi,0x6
  43fc91:	xor    eax,eax
  43fc93:	pop    rbp
  43fc94:	jmp    430e20 <xmlStrEqual@plt+0x2cee0>
  43fc99:	nop    DWORD PTR [rax+0x0]
  43fca0:	endbr64 
  43fca4:	mov    rax,QWORD PTR [rsi]
  43fca7:	mov    QWORD PTR [rdi],rax
  43fcaa:	lea    rax,[rdi+0x8]
  43fcae:	ret    
  43fcaf:	nop
  43fcb0:	endbr64 
  43fcb4:	mov    BYTE PTR [rdi],sil
  43fcb7:	mov    BYTE PTR [rdi+0x1],dl
  43fcba:	mov    BYTE PTR [rdi+0x2],cl
  43fcbd:	mov    BYTE PTR [rdi+0x3],r8b
  43fcc1:	mov    DWORD PTR [rdi+0x4],r9d
  43fcc5:	ret    
  43fcc6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43fcd0:	endbr64 
  43fcd4:	push   r12
  43fcd6:	mov    r9d,0x4
  43fcdc:	mov    r12,rdi
  43fcdf:	push   rbp
  43fce0:	mov    ebp,r8d
  43fce3:	mov    r8d,0x1
  43fce9:	push   rbx
  43fcea:	sub    rsp,0x10
  43fcee:	mov    rbx,rsp
  43fcf1:	mov    rdi,rbx
  43fcf4:	mov    rax,QWORD PTR fs:0x28
  43fcfd:	mov    QWORD PTR [rsp+0x8],rax
  43fd02:	xor    eax,eax
  43fd04:	call   43fcb0 <xmlStrEqual@plt+0x3bd70>
  43fd09:	mov    edi,0xc
  43fd0e:	call   434fe0 <xmlStrEqual@plt+0x310a0>
  43fd13:	mov    QWORD PTR [r12],rax
  43fd17:	mov    rsi,rbx
  43fd1a:	mov    rdi,rax
  43fd1d:	call   43fca0 <xmlStrEqual@plt+0x3bd60>
  43fd22:	mov    DWORD PTR [rax],ebp
  43fd24:	mov    rbx,QWORD PTR [rsp+0x8]
  43fd29:	xor    rbx,QWORD PTR fs:0x28
  43fd32:	jne    43fd42 <xmlStrEqual@plt+0x3be02>
  43fd34:	add    rsp,0x10
  43fd38:	pop    rbx
  43fd39:	pop    rbp
  43fd3a:	mov    eax,0xc
  43fd3f:	pop    r12
  43fd41:	ret    
  43fd42:	call   403c00 <__stack_chk_fail@plt>
  43fd47:	nop    WORD PTR [rax+rax*1+0x0]
  43fd50:	endbr64 
  43fd54:	push   r13
  43fd56:	mov    r13,rsi
  43fd59:	push   r12
  43fd5b:	push   rbp
  43fd5c:	mov    rbp,rdi
  43fd5f:	push   rbx
  43fd60:	mov    ebx,edx
  43fd62:	xor    edx,edx
  43fd64:	sub    rsp,0x28
  43fd68:	mov    rax,QWORD PTR fs:0x28
  43fd71:	mov    QWORD PTR [rsp+0x18],rax
  43fd76:	xor    eax,eax
  43fd78:	cmp    ebx,0x1
  43fd7b:	je     43fd86 <xmlStrEqual@plt+0x3be46>
  43fd7d:	mov    rdx,0xffffffffffffffff
  43fd84:	xor    ebx,ebx
  43fd86:	mov    rax,QWORD PTR [rbp+0x8]
  43fd8a:	mov    rdi,rsp
  43fd8d:	mov    QWORD PTR [rsp],rax
  43fd91:	mov    esi,0x1
  43fd96:	mov    eax,0x1
  43fd9b:	mov    WORD PTR [rsp+0xc],ax
  43fda0:	call   403ba0 <zmq_poll@plt>
  43fda5:	test   eax,eax
  43fda7:	je     43fe20 <xmlStrEqual@plt+0x3bee0>
  43fda9:	mov    r12,0x469e3c
  43fdb0:	cmp    DWORD PTR [r12],0x2
  43fdb5:	jle    43fdca <xmlStrEqual@plt+0x3be8a>
  43fdb7:	lea    rsi,[rip+0x14192]        # 453f50 <xmlStrEqual@plt+0x50010>
  43fdbe:	mov    edi,0x7
  43fdc3:	xor    eax,eax
  43fdc5:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  43fdca:	mov    rdi,QWORD PTR [rbp+0x8]
  43fdce:	mov    ecx,ebx
  43fdd0:	mov    edx,0x1000
  43fdd5:	mov    rsi,r13
  43fdd8:	call   403cf0 <zmq_recv@plt>
  43fddd:	cmp    DWORD PTR [r12],0x2
  43fde2:	mov    ebx,eax
  43fde4:	jle    43fdfb <xmlStrEqual@plt+0x3bebb>
  43fde6:	mov    edx,eax
  43fde8:	lea    rsi,[rip+0x14189]        # 453f78 <xmlStrEqual@plt+0x50038>
  43fdef:	mov    edi,0x7
  43fdf4:	xor    eax,eax
  43fdf6:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  43fdfb:	cmp    ebx,0xffffffff
  43fdfe:	je     43fe27 <xmlStrEqual@plt+0x3bee7>
  43fe00:	mov    rcx,QWORD PTR [rsp+0x18]
  43fe05:	xor    rcx,QWORD PTR fs:0x28
  43fe0e:	mov    eax,ebx
  43fe10:	jne    43fe4b <xmlStrEqual@plt+0x3bf0b>
  43fe12:	add    rsp,0x28
  43fe16:	pop    rbx
  43fe17:	pop    rbp
  43fe18:	pop    r12
  43fe1a:	pop    r13
  43fe1c:	ret    
  43fe1d:	nop    DWORD PTR [rax]
  43fe20:	mov    ebx,0xfffffffe
  43fe25:	jmp    43fe00 <xmlStrEqual@plt+0x3bec0>
  43fe27:	call   4037f0 <__errno_location@plt>
  43fe2c:	mov    edi,DWORD PTR [rax]
  43fe2e:	call   403890 <zmq_strerror@plt>
  43fe33:	mov    rdx,rax
  43fe36:	lea    rsi,[rip+0x14163]        # 453fa0 <xmlStrEqual@plt+0x50060>
  43fe3d:	mov    edi,0x2
  43fe42:	xor    eax,eax
  43fe44:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  43fe49:	jmp    43fe00 <xmlStrEqual@plt+0x3bec0>
  43fe4b:	call   403c00 <__stack_chk_fail@plt>
  43fe50:	endbr64 
  43fe54:	push   r13
  43fe56:	mov    r13,rdi
  43fe59:	push   r12
  43fe5b:	mov    r12,rsi
  43fe5e:	push   rbp
  43fe5f:	push   rbx
  43fe60:	mov    ebx,edx
  43fe62:	sub    rsp,0x8
  43fe66:	mov    rbp,0x469e3c
  43fe6d:	cmp    DWORD PTR [rbp+0x0],0x2
  43fe71:	jle    43fe86 <xmlStrEqual@plt+0x3bf46>
  43fe73:	lea    rsi,[rip+0x1414e]        # 453fc8 <xmlStrEqual@plt+0x50088>
  43fe7a:	mov    edi,0x7
  43fe7f:	xor    eax,eax
  43fe81:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  43fe86:	mov    rdi,QWORD PTR [r13+0x8]
  43fe8a:	movsxd rdx,ebx
  43fe8d:	xor    ecx,ecx
  43fe8f:	mov    rsi,r12
  43fe92:	call   403b70 <zmq_send@plt>
  43fe97:	cmp    DWORD PTR [rbp+0x0],0x2
  43fe9b:	mov    ebx,eax
  43fe9d:	jle    43feb4 <xmlStrEqual@plt+0x3bf74>
  43fe9f:	mov    edx,eax
  43fea1:	lea    rsi,[rip+0x14158]        # 454000 <xmlStrEqual@plt+0x500c0>
  43fea8:	mov    edi,0x7
  43fead:	xor    eax,eax
  43feaf:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  43feb4:	cmp    ebx,0xffffffff
  43feb7:	je     43fed0 <xmlStrEqual@plt+0x3bf90>
  43feb9:	add    rsp,0x8
  43febd:	pop    rbx
  43febe:	pop    rbp
  43febf:	pop    r12
  43fec1:	mov    eax,0x1
  43fec6:	pop    r13
  43fec8:	ret    
  43fec9:	nop    DWORD PTR [rax+0x0]
  43fed0:	call   4037f0 <__errno_location@plt>
  43fed5:	mov    edi,DWORD PTR [rax]
  43fed7:	call   403890 <zmq_strerror@plt>
  43fedc:	mov    rdx,rax
  43fedf:	lea    rsi,[rip+0x1414a]        # 454030 <xmlStrEqual@plt+0x500f0>
  43fee6:	xor    eax,eax
  43fee8:	mov    edi,0x2
  43feed:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  43fef2:	add    rsp,0x8
  43fef6:	pop    rbx
  43fef7:	pop    rbp
  43fef8:	pop    r12
  43fefa:	mov    eax,0x1
  43feff:	pop    r13
  43ff01:	ret    
  43ff02:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  43ff0d:	nop    DWORD PTR [rax]
  43ff10:	endbr64 
  43ff14:	push   r15
  43ff16:	mov    r15d,edx
  43ff19:	push   r14
  43ff1b:	mov    r14d,esi
  43ff1e:	push   r13
  43ff20:	mov    r13,r8
  43ff23:	push   r12
  43ff25:	mov    r12,rdi
  43ff28:	mov    edi,0x1000
  43ff2d:	push   rbp
  43ff2e:	push   rbx
  43ff2f:	mov    ebx,r9d
  43ff32:	sub    rsp,0x18
  43ff36:	mov    DWORD PTR [rsp+0xc],ecx
  43ff3a:	call   434fe0 <xmlStrEqual@plt+0x310a0>
  43ff3f:	mov    ecx,DWORD PTR [rsp+0xc]
  43ff43:	mov    r9d,ebx
  43ff46:	xor    r8d,r8d
  43ff49:	mov    rbp,rax
  43ff4c:	mov    rdi,rax
  43ff4f:	mov    edx,r15d
  43ff52:	mov    esi,r14d
  43ff55:	call   43fcb0 <xmlStrEqual@plt+0x3bd70>
  43ff5a:	movsxd rdx,ebx
  43ff5d:	lea    rdi,[rbp+0x8]
  43ff61:	mov    rsi,r13
  43ff64:	call   403ae0 <memcpy@plt>
  43ff69:	lea    edx,[rbx+0x8]
  43ff6c:	xor    ecx,ecx
  43ff6e:	mov    rsi,rbp
  43ff71:	mov    rdi,r12
  43ff74:	call   43fe50 <xmlStrEqual@plt+0x3bf10>
  43ff79:	mov    rdi,rbp
  43ff7c:	call   4037b0 <free@plt>
  43ff81:	mov    edi,0x1000
  43ff86:	call   434fe0 <xmlStrEqual@plt+0x310a0>
  43ff8b:	mov    rbx,rax
  43ff8e:	xor    edx,edx
  43ff90:	mov    rsi,rax
  43ff93:	mov    rdi,r12
  43ff96:	call   43fd50 <xmlStrEqual@plt+0x3be10>
  43ff9b:	cmp    BYTE PTR [rbx+0x3],0x1
  43ff9f:	jne    43ffa7 <xmlStrEqual@plt+0x3c067>
  43ffa1:	cmp    DWORD PTR [rbx+0x4],0x4
  43ffa5:	je     43ffc8 <xmlStrEqual@plt+0x3c088>
  43ffa7:	mov    rdi,rbx
  43ffaa:	call   4037b0 <free@plt>
  43ffaf:	add    rsp,0x18
  43ffb3:	pop    rbx
  43ffb4:	pop    rbp
  43ffb5:	pop    r12
  43ffb7:	pop    r13
  43ffb9:	pop    r14
  43ffbb:	mov    eax,0x1
  43ffc0:	pop    r15
  43ffc2:	ret    
  43ffc3:	nop    DWORD PTR [rax+rax*1+0x0]
  43ffc8:	cmp    BYTE PTR [rbx+0x8],0x0
  43ffcc:	jne    43ffa7 <xmlStrEqual@plt+0x3c067>
  43ffce:	mov    rdi,rbx
  43ffd1:	call   4037b0 <free@plt>
  43ffd6:	add    rsp,0x18
  43ffda:	pop    rbx
  43ffdb:	pop    rbp
  43ffdc:	pop    r12
  43ffde:	pop    r13
  43ffe0:	pop    r14
  43ffe2:	xor    eax,eax
  43ffe4:	pop    r15
  43ffe6:	ret    
  43ffe7:	nop    WORD PTR [rax+rax*1+0x0]
  43fff0:	endbr64 
  43fff4:	push   r13
  43fff6:	push   r12
  43fff8:	mov    r12,rdi
  43fffb:	push   rbp
  43fffc:	push   rbx
  43fffd:	mov    rbx,rsi
  440000:	sub    rsp,0x18
  440004:	mov    rax,QWORD PTR fs:0x28
  44000d:	mov    QWORD PTR [rsp+0x8],rax
  440012:	xor    eax,eax
  440014:	mov    rax,0x469e3c
  44001b:	cmp    DWORD PTR [rax],0x1
  44001e:	jle    440033 <xmlStrEqual@plt+0x3c0f3>
  440020:	lea    rsi,[rip+0x14031]        # 454058 <xmlStrEqual@plt+0x50118>
  440027:	mov    edi,0x6
  44002c:	xor    eax,eax
  44002e:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  440033:	mov    rax,0x475850
  44003a:	mov    rdi,QWORD PTR [rax]
  44003d:	call   410cf0 <xmlStrEqual@plt+0xcdb0>
  440042:	mov    rdi,QWORD PTR [rax+0x30]
  440046:	mov    rbp,rax
  440049:	mov    esi,0x2
  44004e:	call   409b20 <xmlStrEqual@plt+0x5be0>
  440053:	mov    rdi,QWORD PTR [rbp+0x30]
  440057:	mov    esi,0xa
  44005c:	mov    r13,rax
  44005f:	call   409b20 <xmlStrEqual@plt+0x5be0>
  440064:	mov    rbp,rax
  440067:	mov    rax,QWORD PTR [r13+0x8]
  44006b:	mov    rdi,QWORD PTR [rax+0x28]
  44006f:	call   42e260 <xmlStrEqual@plt+0x2a320>
  440074:	mov    rax,QWORD PTR [rbp+0x8]
  440078:	mov    rdi,QWORD PTR [rax+0x28]
  44007c:	call   42e260 <xmlStrEqual@plt+0x2a320>
  440081:	movzx  ecx,BYTE PTR [rbx+0x2]
  440085:	movzx  edx,BYTE PTR [rbx+0x1]
  440089:	movzx  esi,BYTE PTR [rbx]
  44008c:	xor    r8d,r8d
  44008f:	mov    rdi,rsp
  440092:	call   43fcd0 <xmlStrEqual@plt+0x3bd90>
  440097:	mov    rsi,QWORD PTR [rsp]
  44009b:	xor    ecx,ecx
  44009d:	mov    edx,eax
  44009f:	mov    rdi,r12
  4400a2:	call   43fe50 <xmlStrEqual@plt+0x3bf10>
  4400a7:	mov    rdx,QWORD PTR [rsp+0x8]
  4400ac:	xor    rdx,QWORD PTR fs:0x28
  4400b5:	mov    eax,0x1
  4400ba:	jne    4400c7 <xmlStrEqual@plt+0x3c187>
  4400bc:	add    rsp,0x18
  4400c0:	pop    rbx
  4400c1:	pop    rbp
  4400c2:	pop    r12
  4400c4:	pop    r13
  4400c6:	ret    
  4400c7:	call   403c00 <__stack_chk_fail@plt>
  4400cc:	nop    DWORD PTR [rax+0x0]
  4400d0:	endbr64 
  4400d4:	push   r13
  4400d6:	mov    r13,rdi
  4400d9:	push   r12
  4400db:	push   rbp
  4400dc:	push   rbx
  4400dd:	mov    rbx,rsi
  4400e0:	sub    rsp,0x18
  4400e4:	mov    r12,0x469e3c
  4400eb:	mov    rax,QWORD PTR fs:0x28
  4400f4:	mov    QWORD PTR [rsp+0x8],rax
  4400f9:	xor    eax,eax
  4400fb:	cmp    DWORD PTR [r12],0x1
  440100:	jle    440113 <xmlStrEqual@plt+0x3c1d3>
  440102:	lea    rsi,[rip+0x13f77]        # 454080 <xmlStrEqual@plt+0x50140>
  440109:	mov    edi,0x6
  44010e:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  440113:	mov    rax,0x475850
  44011a:	mov    rdi,QWORD PTR [rax]
  44011d:	call   410cf0 <xmlStrEqual@plt+0xcdb0>
  440122:	mov    rdi,QWORD PTR [rax+0x48]
  440126:	mov    ebp,DWORD PTR [rdi+0x18]
  440129:	test   ebp,ebp
  44012b:	je     4401a0 <xmlStrEqual@plt+0x3c260>
  44012d:	call   42e260 <xmlStrEqual@plt+0x2a320>
  440132:	movzx  ecx,BYTE PTR [rbx+0x2]
  440136:	movzx  edx,BYTE PTR [rbx+0x1]
  44013a:	movzx  esi,BYTE PTR [rbx]
  44013d:	mov    rdi,rsp
  440140:	xor    r8d,r8d
  440143:	call   43fcd0 <xmlStrEqual@plt+0x3bd90>
  440148:	mov    rsi,QWORD PTR [rsp]
  44014c:	xor    ecx,ecx
  44014e:	mov    edx,eax
  440150:	mov    rdi,r13
  440153:	call   43fe50 <xmlStrEqual@plt+0x3bf10>
  440158:	mov    eax,DWORD PTR [r12]
  44015c:	mov    ebp,0x1
  440161:	test   eax,eax
  440163:	jg     440188 <xmlStrEqual@plt+0x3c248>
  440165:	mov    rdx,QWORD PTR [rsp+0x8]
  44016a:	xor    rdx,QWORD PTR fs:0x28
  440173:	mov    eax,ebp
  440175:	jne    4401de <xmlStrEqual@plt+0x3c29e>
  440177:	add    rsp,0x18
  44017b:	pop    rbx
  44017c:	pop    rbp
  44017d:	pop    r12
  44017f:	pop    r13
  440181:	ret    
  440182:	nop    WORD PTR [rax+rax*1+0x0]
  440188:	lea    rsi,[rip+0x13f61]        # 4540f0 <xmlStrEqual@plt+0x501b0>
  44018f:	mov    edi,0x5
  440194:	xor    eax,eax
  440196:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  44019b:	jmp    440165 <xmlStrEqual@plt+0x3c225>
  44019d:	nop    DWORD PTR [rax]
  4401a0:	movzx  ecx,BYTE PTR [rbx+0x2]
  4401a4:	movzx  edx,BYTE PTR [rbx+0x1]
  4401a8:	movzx  esi,BYTE PTR [rbx]
  4401ab:	mov    rdi,rsp
  4401ae:	mov    r8d,0x1
  4401b4:	call   43fcd0 <xmlStrEqual@plt+0x3bd90>
  4401b9:	mov    rsi,QWORD PTR [rsp]
  4401bd:	mov    rdi,r13
  4401c0:	xor    ecx,ecx
  4401c2:	mov    edx,eax
  4401c4:	call   43fe50 <xmlStrEqual@plt+0x3bf10>
  4401c9:	lea    rsi,[rip+0x13ed8]        # 4540a8 <xmlStrEqual@plt+0x50168>
  4401d0:	mov    edi,0x3
  4401d5:	xor    eax,eax
  4401d7:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  4401dc:	jmp    440165 <xmlStrEqual@plt+0x3c225>
  4401de:	call   403c00 <__stack_chk_fail@plt>
  4401e3:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4401ee:	xchg   ax,ax
  4401f0:	endbr64 
  4401f4:	push   r13
  4401f6:	mov    r13,rdi
  4401f9:	push   r12
  4401fb:	push   rbp
  4401fc:	push   rbx
  4401fd:	mov    rbx,rsi
  440200:	sub    rsp,0x18
  440204:	mov    r12,0x469e3c
  44020b:	mov    rax,QWORD PTR fs:0x28
  440214:	mov    QWORD PTR [rsp+0x8],rax
  440219:	xor    eax,eax
  44021b:	cmp    DWORD PTR [r12],0x1
  440220:	jle    440233 <xmlStrEqual@plt+0x3c2f3>
  440222:	lea    rsi,[rip+0x13eef]        # 454118 <xmlStrEqual@plt+0x501d8>
  440229:	mov    edi,0x6
  44022e:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  440233:	mov    rax,0x475850
  44023a:	mov    rdi,QWORD PTR [rax]
  44023d:	call   410cf0 <xmlStrEqual@plt+0xcdb0>
  440242:	mov    rdi,QWORD PTR [rax+0x78]
  440246:	mov    ebp,DWORD PTR [rdi+0x18]
  440249:	test   ebp,ebp
  44024b:	je     4402c0 <xmlStrEqual@plt+0x3c380>
  44024d:	call   42e260 <xmlStrEqual@plt+0x2a320>
  440252:	movzx  ecx,BYTE PTR [rbx+0x2]
  440256:	movzx  edx,BYTE PTR [rbx+0x1]
  44025a:	movzx  esi,BYTE PTR [rbx]
  44025d:	mov    rdi,rsp
  440260:	xor    r8d,r8d
  440263:	call   43fcd0 <xmlStrEqual@plt+0x3bd90>
  440268:	mov    rsi,QWORD PTR [rsp]
  44026c:	xor    ecx,ecx
  44026e:	mov    edx,eax
  440270:	mov    rdi,r13
  440273:	call   43fe50 <xmlStrEqual@plt+0x3bf10>
  440278:	mov    eax,DWORD PTR [r12]
  44027c:	mov    ebp,0x1
  440281:	test   eax,eax
  440283:	jg     4402a8 <xmlStrEqual@plt+0x3c368>
  440285:	mov    rdx,QWORD PTR [rsp+0x8]
  44028a:	xor    rdx,QWORD PTR fs:0x28
  440293:	mov    eax,ebp
  440295:	jne    4402fe <xmlStrEqual@plt+0x3c3be>
  440297:	add    rsp,0x18
  44029b:	pop    rbx
  44029c:	pop    rbp
  44029d:	pop    r12
  44029f:	pop    r13
  4402a1:	ret    
  4402a2:	nop    WORD PTR [rax+rax*1+0x0]
  4402a8:	lea    rsi,[rip+0x13e91]        # 454140 <xmlStrEqual@plt+0x50200>
  4402af:	mov    edi,0x5
  4402b4:	xor    eax,eax
  4402b6:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  4402bb:	jmp    440285 <xmlStrEqual@plt+0x3c345>
  4402bd:	nop    DWORD PTR [rax]
  4402c0:	movzx  ecx,BYTE PTR [rbx+0x2]
  4402c4:	movzx  edx,BYTE PTR [rbx+0x1]
  4402c8:	movzx  esi,BYTE PTR [rbx]
  4402cb:	mov    rdi,rsp
  4402ce:	mov    r8d,0x1
  4402d4:	call   43fcd0 <xmlStrEqual@plt+0x3bd90>
  4402d9:	mov    rsi,QWORD PTR [rsp]
  4402dd:	mov    rdi,r13
  4402e0:	xor    ecx,ecx
  4402e2:	mov    edx,eax
  4402e4:	call   43fe50 <xmlStrEqual@plt+0x3bf10>
  4402e9:	lea    rsi,[rip+0x13db8]        # 4540a8 <xmlStrEqual@plt+0x50168>
  4402f0:	mov    edi,0x3
  4402f5:	xor    eax,eax
  4402f7:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  4402fc:	jmp    440285 <xmlStrEqual@plt+0x3c345>
  4402fe:	call   403c00 <__stack_chk_fail@plt>
  440303:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  44030e:	xchg   ax,ax
  440310:	endbr64 
  440314:	push   r15
  440316:	push   r14
  440318:	push   r13
  44031a:	push   r12
  44031c:	push   rbp
  44031d:	push   rbx
  44031e:	sub    rsp,0x868
  440325:	mov    QWORD PTR [rsp+0x20],rdi
  44032a:	mov    QWORD PTR [rsp+0x28],rsi
  44032f:	mov    rax,QWORD PTR fs:0x28
  440338:	mov    QWORD PTR [rsp+0x858],rax
  440340:	xor    eax,eax
  440342:	mov    rax,0x469e3c
  440349:	cmp    DWORD PTR [rax],0x1
  44034c:	jle    440361 <xmlStrEqual@plt+0x3c421>
  44034e:	lea    rsi,[rip+0x13e13]        # 454168 <xmlStrEqual@plt+0x50228>
  440355:	mov    edi,0x6
  44035a:	xor    eax,eax
  44035c:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  440361:	mov    rbx,0x475850
  440368:	mov    rdi,QWORD PTR [rbx]
  44036b:	call   410cf0 <xmlStrEqual@plt+0xcdb0>
  440370:	mov    r15,rax
  440373:	mov    QWORD PTR [rsp+0x18],rax
  440378:	call   42dc90 <xmlStrEqual@plt+0x29d50>
  44037d:	mov    r14,rax
  440380:	mov    QWORD PTR [rsp+0x10],rax
  440385:	mov    rax,QWORD PTR [r15+0x70]
  440389:	mov    rsi,r14
  44038c:	mov    rax,QWORD PTR [rax]
  44038f:	mov    rdi,QWORD PTR [rax]
  440392:	call   42dcf0 <xmlStrEqual@plt+0x29db0>
  440397:	mov    rax,QWORD PTR [r15+0x70]
  44039b:	mov    rsi,r14
  44039e:	mov    rax,QWORD PTR [rax]
  4403a1:	mov    rdi,QWORD PTR [rax+0x8]
  4403a5:	call   42dcf0 <xmlStrEqual@plt+0x29db0>
  4403aa:	mov    rsi,QWORD PTR [r15+0x70]
  4403ae:	mov    rax,QWORD PTR [rsi]
  4403b1:	mov    rdx,QWORD PTR [rax+0x10]
  4403b5:	mov    rdi,QWORD PTR [rdx]
  4403b8:	mov    ecx,DWORD PTR [rdi]
  4403ba:	test   ecx,ecx
  4403bc:	je     44041e <xmlStrEqual@plt+0x3c4de>
  4403be:	xor    ebp,ebp
  4403c0:	jmp    4403d2 <xmlStrEqual@plt+0x3c492>
  4403c2:	mov    rax,QWORD PTR [rsi]
  4403c5:	inc    ebp
  4403c7:	mov    rdx,QWORD PTR [rax+0x10]
  4403cb:	mov    rdi,QWORD PTR [rdx]
  4403ce:	cmp    DWORD PTR [rdi],ebp
  4403d0:	je     44041e <xmlStrEqual@plt+0x3c4de>
  4403d2:	mov    ecx,ebp
  4403d4:	mov    r8,QWORD PTR [rdi+0x10]
  4403d8:	lea    eax,[rbp+rbp*1+0x0]
  4403dc:	and    eax,0x1e
  4403df:	shr    ecx,0x4
  4403e2:	mov    edx,eax
  4403e4:	mov    eax,DWORD PTR [r8+rcx*4]
  4403e8:	shrx   eax,eax,edx
  4403ed:	test   al,0x3
  4403ef:	jne    4403c2 <xmlStrEqual@plt+0x3c482>
  4403f1:	mov    rdx,QWORD PTR [rdi+0x20]
  4403f5:	mov    eax,ebp
  4403f7:	mov    rdi,QWORD PTR [rdx+rax*8]
  4403fb:	mov    rsi,QWORD PTR [rsp+0x10]
  440400:	inc    ebp
  440402:	call   42dcf0 <xmlStrEqual@plt+0x29db0>
  440407:	mov    rax,QWORD PTR [rsp+0x18]
  44040c:	mov    rsi,QWORD PTR [rax+0x70]
  440410:	mov    rax,QWORD PTR [rsi]
  440413:	mov    rdx,QWORD PTR [rax+0x10]
  440417:	mov    rdi,QWORD PTR [rdx]
  44041a:	cmp    DWORD PTR [rdi],ebp
  44041c:	jne    4403d2 <xmlStrEqual@plt+0x3c492>
  44041e:	mov    rdx,QWORD PTR [rax+0x18]
  440422:	mov    rdi,QWORD PTR [rdx]
  440425:	mov    edx,DWORD PTR [rdi]
  440427:	test   edx,edx
  440429:	je     44048b <xmlStrEqual@plt+0x3c54b>
  44042b:	xor    ebp,ebp
  44042d:	jmp    44043f <xmlStrEqual@plt+0x3c4ff>
  44042f:	mov    rax,QWORD PTR [rsi]
  440432:	inc    ebp
  440434:	mov    rdx,QWORD PTR [rax+0x18]
  440438:	mov    rdi,QWORD PTR [rdx]
  44043b:	cmp    DWORD PTR [rdi],ebp
  44043d:	je     44048b <xmlStrEqual@plt+0x3c54b>
  44043f:	mov    ecx,ebp
  440441:	mov    r8,QWORD PTR [rdi+0x10]
  440445:	lea    eax,[rbp+rbp*1+0x0]
  440449:	and    eax,0x1e
  44044c:	shr    ecx,0x4
  44044f:	mov    edx,eax
  440451:	mov    eax,DWORD PTR [r8+rcx*4]
  440455:	shrx   eax,eax,edx
  44045a:	test   al,0x3
  44045c:	jne    44042f <xmlStrEqual@plt+0x3c4ef>
  44045e:	mov    rdx,QWORD PTR [rdi+0x20]
  440462:	mov    eax,ebp
  440464:	mov    rdi,QWORD PTR [rdx+rax*8]
  440468:	mov    rsi,QWORD PTR [rsp+0x10]
  44046d:	inc    ebp
  44046f:	call   42dcf0 <xmlStrEqual@plt+0x29db0>
  440474:	mov    rax,QWORD PTR [rsp+0x18]
  440479:	mov    rsi,QWORD PTR [rax+0x70]
  44047d:	mov    rax,QWORD PTR [rsi]
  440480:	mov    rdx,QWORD PTR [rax+0x18]
  440484:	mov    rdi,QWORD PTR [rdx]
  440487:	cmp    DWORD PTR [rdi],ebp
  440489:	jne    44043f <xmlStrEqual@plt+0x3c4ff>
  44048b:	mov    r15,QWORD PTR [rsp+0x10]
  440490:	mov    rdi,QWORD PTR [rax+0x20]
  440494:	mov    rsi,r15
  440497:	call   42dcf0 <xmlStrEqual@plt+0x29db0>
  44049c:	mov    rax,QWORD PTR [rsp+0x18]
  4404a1:	mov    rsi,r15
  4404a4:	mov    rax,QWORD PTR [rax+0x70]
  4404a8:	lea    r12,[rsp+0x450]
  4404b0:	mov    rax,QWORD PTR [rax]
  4404b3:	mov    rdi,QWORD PTR [rax+0x20]
  4404b7:	call   42dcf0 <xmlStrEqual@plt+0x29db0>
  4404bc:	mov    rax,QWORD PTR [r15+0x8]
  4404c0:	lea    rcx,[rsp+0x40]
  4404c5:	mov    QWORD PTR [rsp],rax
  4404c9:	mov    QWORD PTR [rsp+0x8],rcx
  4404ce:	cmp    r15,rax
  4404d1:	je     4405e7 <xmlStrEqual@plt+0x3c6a7>
  4404d7:	mov    rax,QWORD PTR [rsp]
  4404db:	mov    rax,QWORD PTR [rax+0x10]
  4404df:	mov    r15,QWORD PTR [rax]
  4404e2:	test   r15,r15
  4404e5:	je     4405d0 <xmlStrEqual@plt+0x3c690>
  4404eb:	mov    rbp,QWORD PTR [rsp+0x8]
  4404f0:	jmp    440519 <xmlStrEqual@plt+0x3c5d9>
  4404f2:	nop    WORD PTR [rax+rax*1+0x0]
  4404f8:	mov    rax,QWORD PTR [r15+0x10]
  4404fc:	mov    rdx,QWORD PTR [r15+0x18]
  440500:	test   rax,rax
  440503:	je     4405b0 <xmlStrEqual@plt+0x3c670>
  440509:	test   rdx,rdx
  44050c:	je     440516 <xmlStrEqual@plt+0x3c5d6>
  44050e:	mov    QWORD PTR [rbp+0x0],rdx
  440512:	add    rbp,0x8
  440516:	mov    r15,rax
  440519:	cmp    QWORD PTR [r15+0x8],0x0
  44051e:	je     4404f8 <xmlStrEqual@plt+0x3c5b8>
  440520:	mov    rax,QWORD PTR [r15+0x28]
  440524:	mov    r13,QWORD PTR [rax]
  440527:	test   r13,r13
  44052a:	je     4404f8 <xmlStrEqual@plt+0x3c5b8>
  44052c:	mov    r14,r12
  44052f:	nop
  440530:	cmp    QWORD PTR [r13+0x8],0x0
  440535:	je     440550 <xmlStrEqual@plt+0x3c610>
  440537:	mov    rdi,QWORD PTR [r13+0x28]
  44053b:	test   rdi,rdi
  44053e:	je     440550 <xmlStrEqual@plt+0x3c610>
  440540:	call   434a40 <xmlStrEqual@plt+0x30b00>
  440545:	mov    rdi,QWORD PTR [rbx]
  440548:	mov    rsi,rax
  44054b:	call   408860 <xmlStrEqual@plt+0x4920>
  440550:	mov    rax,QWORD PTR [r13+0x10]
  440554:	mov    r13,QWORD PTR [r13+0x18]
  440558:	test   rax,rax
  44055b:	je     440580 <xmlStrEqual@plt+0x3c640>
  44055d:	test   r13,r13
  440560:	je     4405a8 <xmlStrEqual@plt+0x3c668>
  440562:	mov    QWORD PTR [r14],r13
  440565:	mov    r13,rax
  440568:	add    r14,0x8
  44056c:	cmp    QWORD PTR [r13+0x8],0x0
  440571:	jne    440537 <xmlStrEqual@plt+0x3c5f7>
  440573:	mov    rax,QWORD PTR [r13+0x10]
  440577:	mov    r13,QWORD PTR [r13+0x18]
  44057b:	test   rax,rax
  44057e:	jne    44055d <xmlStrEqual@plt+0x3c61d>
  440580:	test   r13,r13
  440583:	jne    440530 <xmlStrEqual@plt+0x3c5f0>
  440585:	cmp    r14,r12
  440588:	je     4404f8 <xmlStrEqual@plt+0x3c5b8>
  44058e:	mov    r13,QWORD PTR [r14-0x8]
  440592:	test   r13,r13
  440595:	je     4404f8 <xmlStrEqual@plt+0x3c5b8>
  44059b:	sub    r14,0x8
  44059f:	jmp    440530 <xmlStrEqual@plt+0x3c5f0>
  4405a1:	nop    DWORD PTR [rax+0x0]
  4405a8:	mov    r13,rax
  4405ab:	jmp    440530 <xmlStrEqual@plt+0x3c5f0>
  4405ad:	nop    DWORD PTR [rax]
  4405b0:	mov    rax,rdx
  4405b3:	test   rdx,rdx
  4405b6:	jne    440516 <xmlStrEqual@plt+0x3c5d6>
  4405bc:	cmp    rbp,QWORD PTR [rsp+0x8]
  4405c1:	je     4405d0 <xmlStrEqual@plt+0x3c690>
  4405c3:	mov    r15,QWORD PTR [rbp-0x8]
  4405c7:	test   r15,r15
  4405ca:	jne    440684 <xmlStrEqual@plt+0x3c744>
  4405d0:	mov    rax,QWORD PTR [rsp]
  4405d4:	mov    rax,QWORD PTR [rax+0x8]
  4405d8:	mov    QWORD PTR [rsp],rax
  4405dc:	cmp    QWORD PTR [rsp+0x10],rax
  4405e1:	jne    4404d7 <xmlStrEqual@plt+0x3c597>
  4405e7:	mov    rdi,QWORD PTR [rsp+0x10]
  4405ec:	call   42e2b0 <xmlStrEqual@plt+0x2a370>
  4405f1:	mov    rbx,QWORD PTR [rsp+0x18]
  4405f6:	mov    rdi,QWORD PTR [rbx+0x70]
  4405fa:	call   408db0 <xmlStrEqual@plt+0x4e70>
  4405ff:	xor    eax,eax
  440601:	call   408d60 <xmlStrEqual@plt+0x4e20>
  440606:	mov    QWORD PTR [rbx+0x70],rax
  44060a:	mov    rax,QWORD PTR [rsp+0x28]
  44060f:	lea    rdi,[rsp+0x38]
  440614:	movzx  ecx,BYTE PTR [rax+0x2]
  440618:	movzx  edx,BYTE PTR [rax+0x1]
  44061c:	movzx  esi,BYTE PTR [rax]
  44061f:	xor    r8d,r8d
  440622:	call   43fcd0 <xmlStrEqual@plt+0x3bd90>
  440627:	mov    rsi,QWORD PTR [rsp+0x38]
  44062c:	mov    rdi,QWORD PTR [rsp+0x20]
  440631:	xor    ecx,ecx
  440633:	mov    edx,eax
  440635:	call   43fe50 <xmlStrEqual@plt+0x3bf10>
  44063a:	mov    rax,0x469e3c
  440641:	mov    eax,DWORD PTR [rax]
  440643:	test   eax,eax
  440645:	jle    44065a <xmlStrEqual@plt+0x3c71a>
  440647:	lea    rsi,[rip+0x13b4a]        # 454198 <xmlStrEqual@plt+0x50258>
  44064e:	mov    edi,0x5
  440653:	xor    eax,eax
  440655:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  44065a:	mov    rcx,QWORD PTR [rsp+0x858]
  440662:	xor    rcx,QWORD PTR fs:0x28
  44066b:	mov    eax,0x1
  440670:	jne    44068d <xmlStrEqual@plt+0x3c74d>
  440672:	add    rsp,0x868
  440679:	pop    rbx
  44067a:	pop    rbp
  44067b:	pop    r12
  44067d:	pop    r13
  44067f:	pop    r14
  440681:	pop    r15
  440683:	ret    
  440684:	sub    rbp,0x8
  440688:	jmp    440519 <xmlStrEqual@plt+0x3c5d9>
  44068d:	call   403c00 <__stack_chk_fail@plt>
  440692:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  44069d:	nop    DWORD PTR [rax]
  4406a0:	endbr64 
  4406a4:	push   rbp
  4406a5:	push   rbx
  4406a6:	mov    rbx,rdi
  4406a9:	mov    rdi,rsi
  4406ac:	sub    rsp,0x8
  4406b0:	call   403d50 <xmlCharStrdup@plt>
  4406b5:	mov    rdi,rbx
  4406b8:	mov    rbp,rax
  4406bb:	call   403ac0 <xmlFirstElementChild@plt>
  4406c0:	test   rax,rax
  4406c3:	je     440708 <xmlStrEqual@plt+0x3c7c8>
  4406c5:	mov    rbx,rax
  4406c8:	jmp    4406e0 <xmlStrEqual@plt+0x3c7a0>
  4406ca:	nop    WORD PTR [rax+rax*1+0x0]
  4406d0:	mov    rdi,rbx
  4406d3:	call   4039a0 <xmlNextElementSibling@plt>
  4406d8:	mov    rbx,rax
  4406db:	test   rax,rax
  4406de:	je     440708 <xmlStrEqual@plt+0x3c7c8>
  4406e0:	mov    rdi,QWORD PTR [rbx+0x10]
  4406e4:	mov    rsi,rbp
  4406e7:	call   403f40 <xmlStrEqual@plt>
  4406ec:	test   eax,eax
  4406ee:	je     4406d0 <xmlStrEqual@plt+0x3c790>
  4406f0:	mov    rdi,rbp
  4406f3:	call   4037b0 <free@plt>
  4406f8:	add    rsp,0x8
  4406fc:	mov    rax,rbx
  4406ff:	pop    rbx
  440700:	pop    rbp
  440701:	ret    
  440702:	nop    WORD PTR [rax+rax*1+0x0]
  440708:	xor    ebx,ebx
  44070a:	jmp    4406f0 <xmlStrEqual@plt+0x3c7b0>
  44070c:	nop    DWORD PTR [rax+0x0]
  440710:	endbr64 
  440714:	push   r15
  440716:	push   r14
  440718:	push   r13
  44071a:	push   r12
  44071c:	push   rbp
  44071d:	push   rbx
  44071e:	mov    rbx,rdx
  440721:	sub    rsp,0x38
  440725:	mov    QWORD PTR [rsp+0x10],rdi
  44072a:	mov    QWORD PTR [rsp],rsi
  44072e:	mov    rax,QWORD PTR fs:0x28
  440737:	mov    QWORD PTR [rsp+0x28],rax
  44073c:	xor    eax,eax
  44073e:	mov    rax,0x469e3c
  440745:	mov    edi,DWORD PTR [rax]
  440747:	test   edi,edi
  440749:	jle    44075e <xmlStrEqual@plt+0x3c81e>
  44074b:	lea    rsi,[rip+0x13a6e]        # 4541c0 <xmlStrEqual@plt+0x50280>
  440752:	mov    edi,0x5
  440757:	xor    eax,eax
  440759:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  44075e:	mov    rax,0x475850
  440765:	mov    rdi,QWORD PTR [rax]
  440768:	call   410cf0 <xmlStrEqual@plt+0xcdb0>
  44076d:	mov    rdi,QWORD PTR [rip+0x2884c]        # 468fc0 <xmlStrEqual@plt+0x65080>
  440774:	mov    QWORD PTR [rsp+0x18],rax
  440779:	call   42dca0 <xmlStrEqual@plt+0x29d60>
  44077e:	mov    r14,rax
  440781:	mov    rax,QWORD PTR [rsp]
  440785:	mov    r8d,0x2160
  44078b:	mov    esi,DWORD PTR [rax+0x4]
  44078e:	lea    rcx,[rip+0x149bb]        # 455150 <xmlStrEqual@plt+0x51210>
  440795:	xor    edx,edx
  440797:	mov    rdi,rbx
  44079a:	call   4037e0 <xmlReadMemory@plt>
  44079f:	mov    rdi,rax
  4407a2:	mov    QWORD PTR [rsp+0x8],rax
  4407a7:	call   403d90 <xmlDocGetRootElement@plt>
  4407ac:	mov    rdi,rax
  4407af:	lea    rsi,[rip+0x149a0]        # 455156 <xmlStrEqual@plt+0x51216>
  4407b6:	call   4406a0 <xmlStrEqual@plt+0x3c760>
  4407bb:	mov    rdi,rax
  4407be:	lea    rsi,[rip+0x1499c]        # 455161 <xmlStrEqual@plt+0x51221>
  4407c5:	call   4406a0 <xmlStrEqual@plt+0x3c760>
  4407ca:	mov    r15,rax
  4407cd:	test   rax,rax
  4407d0:	je     4408d4 <xmlStrEqual@plt+0x3c994>
  4407d6:	lea    rsi,[rip+0x1498e]        # 45516b <xmlStrEqual@plt+0x5122b>
  4407dd:	mov    rdi,r15
  4407e0:	call   4406a0 <xmlStrEqual@plt+0x3c760>
  4407e5:	mov    rbx,rax
  4407e8:	test   rax,rax
  4407eb:	je     4408a4 <xmlStrEqual@plt+0x3c964>
  4407f1:	nop    DWORD PTR [rax+0x0]
  4407f8:	mov    rdi,rbx
  4407fb:	call   403bd0 <xmlNodeGetContent@plt>
  440800:	mov    rbp,rax
  440803:	xor    eax,eax
  440805:	call   424be0 <xmlStrEqual@plt+0x20ca0>
  44080a:	mov    rsi,rax
  44080d:	mov    rdi,rbp
  440810:	mov    r12,rax
  440813:	call   425bd0 <xmlStrEqual@plt+0x21c90>
  440818:	cmp    eax,0x1
  44081b:	jne    440a10 <xmlStrEqual@plt+0x3cad0>
  440821:	mov    r13,0x4757c0
  440828:	mov    ecx,DWORD PTR [r13+0x0]
  44082c:	test   ecx,ecx
  44082e:	je     440845 <xmlStrEqual@plt+0x3c905>
  440830:	mov    rdi,r12
  440833:	call   425890 <xmlStrEqual@plt+0x21950>
  440838:	movzx  eax,ax
  44083b:	cmp    eax,DWORD PTR [r13+0x0]
  44083f:	jne    440ae8 <xmlStrEqual@plt+0x3cba8>
  440845:	mov    rdx,QWORD PTR [rip+0x2878c]        # 468fd8 <xmlStrEqual@plt+0x65098>
  44084c:	mov    rsi,r14
  44084f:	mov    rdi,rbp
  440852:	call   42df40 <xmlStrEqual@plt+0x2a000>
  440857:	test   al,al
  440859:	jne    440ac8 <xmlStrEqual@plt+0x3cb88>
  44085f:	mov    rdi,rbp
  440862:	mov    rsi,r14
  440865:	call   42de80 <xmlStrEqual@plt+0x29f40>
  44086a:	mov    rdi,r12
  44086d:	call   424bf0 <xmlStrEqual@plt+0x20cb0>
  440872:	mov    rbp,QWORD PTR [rbx+0x10]
  440876:	jmp    440894 <xmlStrEqual@plt+0x3c954>
  440878:	nop    DWORD PTR [rax+rax*1+0x0]
  440880:	mov    rdi,QWORD PTR [rax+0x10]
  440884:	mov    rsi,rbp
  440887:	call   4037c0 <strcmp@plt>
  44088c:	test   eax,eax
  44088e:	je     4407f8 <xmlStrEqual@plt+0x3c8b8>
  440894:	mov    rdi,rbx
  440897:	call   4039a0 <xmlNextElementSibling@plt>
  44089c:	mov    rbx,rax
  44089f:	test   rax,rax
  4408a2:	jne    440880 <xmlStrEqual@plt+0x3c940>
  4408a4:	mov    rbx,QWORD PTR [r15+0x10]
  4408a8:	jmp    4408c4 <xmlStrEqual@plt+0x3c984>
  4408aa:	nop    WORD PTR [rax+rax*1+0x0]
  4408b0:	mov    rdi,QWORD PTR [rax+0x10]
  4408b4:	mov    rsi,rbx
  4408b7:	call   4037c0 <strcmp@plt>
  4408bc:	test   eax,eax
  4408be:	je     4407d6 <xmlStrEqual@plt+0x3c896>
  4408c4:	mov    rdi,r15
  4408c7:	call   4039a0 <xmlNextElementSibling@plt>
  4408cc:	mov    r15,rax
  4408cf:	test   rax,rax
  4408d2:	jne    4408b0 <xmlStrEqual@plt+0x3c970>
  4408d4:	mov    rdi,QWORD PTR [rsp+0x8]
  4408d9:	call   403ee0 <xmlFreeDoc@plt>
  4408de:	mov    rbx,QWORD PTR [rsp+0x18]
  4408e3:	mov    esi,0x2
  4408e8:	mov    rdi,QWORD PTR [rbx+0x30]
  4408ec:	call   409b20 <xmlStrEqual@plt+0x5be0>
  4408f1:	mov    rdi,QWORD PTR [rbx+0x30]
  4408f5:	mov    esi,0xa
  4408fa:	mov    rbp,rax
  4408fd:	call   409b20 <xmlStrEqual@plt+0x5be0>
  440902:	mov    rbx,rax
  440905:	mov    rax,QWORD PTR [rbp+0x8]
  440909:	mov    rdi,QWORD PTR [rax+0x28]
  44090d:	call   42e260 <xmlStrEqual@plt+0x2a320>
  440912:	mov    rax,QWORD PTR [rbx+0x8]
  440916:	mov    rdi,QWORD PTR [rax+0x28]
  44091a:	call   42e260 <xmlStrEqual@plt+0x2a320>
  44091f:	mov    r12,QWORD PTR [r14+0x8]
  440923:	cmp    r14,r12
  440926:	je     440961 <xmlStrEqual@plt+0x3ca21>
  440928:	mov    r13,QWORD PTR [r12+0x10]
  44092d:	mov    ecx,0x64
  440932:	mov    edx,0x1
  440937:	mov    rsi,r13
  44093a:	mov    rdi,rbp
  44093d:	call   406b00 <xmlStrEqual@plt+0x2bc0>
  440942:	mov    ecx,0x64
  440947:	mov    edx,0x1
  44094c:	mov    rsi,r13
  44094f:	mov    rdi,rbx
  440952:	call   406b00 <xmlStrEqual@plt+0x2bc0>
  440957:	mov    r12,QWORD PTR [r12+0x8]
  44095c:	cmp    r14,r12
  44095f:	jne    440928 <xmlStrEqual@plt+0x3c9e8>
  440961:	mov    r15,QWORD PTR [rsp+0x18]
  440966:	mov    rsi,rbp
  440969:	mov    rdi,QWORD PTR [r15+0x40]
  44096d:	mov    rax,QWORD PTR [r15+0x38]
  440971:	call   QWORD PTR [rax+0x38]
  440974:	mov    rdi,rbp
  440977:	call   433790 <xmlStrEqual@plt+0x2f850>
  44097c:	mov    rsi,rax
  44097f:	xor    edx,edx
  440981:	mov    rdi,r15
  440984:	call   4089c0 <xmlStrEqual@plt+0x4a80>
  440989:	mov    rdi,QWORD PTR [r15+0x40]
  44098d:	mov    rax,QWORD PTR [r15+0x38]
  440991:	mov    rsi,rbx
  440994:	call   QWORD PTR [rax+0x38]
  440997:	mov    rdi,rbx
  44099a:	call   433790 <xmlStrEqual@plt+0x2f850>
  44099f:	mov    rsi,rax
  4409a2:	xor    edx,edx
  4409a4:	mov    rdi,r15
  4409a7:	call   4089c0 <xmlStrEqual@plt+0x4a80>
  4409ac:	mov    rax,0x469e3c
  4409b3:	mov    edx,DWORD PTR [rax]
  4409b5:	test   edx,edx
  4409b7:	jg     440b03 <xmlStrEqual@plt+0x3cbc3>
  4409bd:	mov    rdi,QWORD PTR [rbp+0x8]
  4409c1:	call   42b300 <xmlStrEqual@plt+0x273c0>
  4409c6:	mov    rdi,QWORD PTR [rbx+0x8]
  4409ca:	call   42b300 <xmlStrEqual@plt+0x273c0>
  4409cf:	mov    rax,QWORD PTR [rsp]
  4409d3:	lea    rdi,[rsp+0x20]
  4409d8:	movzx  ecx,BYTE PTR [rax+0x2]
  4409dc:	movzx  edx,BYTE PTR [rax+0x1]
  4409e0:	movzx  esi,BYTE PTR [rax]
  4409e3:	xor    r8d,r8d
  4409e6:	call   43fcd0 <xmlStrEqual@plt+0x3bd90>
  4409eb:	mov    rsi,QWORD PTR [rsp+0x20]
  4409f0:	mov    rdi,QWORD PTR [rsp+0x10]
  4409f5:	xor    ecx,ecx
  4409f7:	mov    edx,eax
  4409f9:	call   43fe50 <xmlStrEqual@plt+0x3bf10>
  4409fe:	mov    eax,0x1
  440a03:	jmp    440aa1 <xmlStrEqual@plt+0x3cb61>
  440a08:	nop    DWORD PTR [rax+rax*1+0x0]
  440a10:	mov    rax,0x469e3c
  440a17:	mov    esi,DWORD PTR [rax]
  440a19:	test   esi,esi
  440a1b:	jle    440a38 <xmlStrEqual@plt+0x3caf8>
  440a1d:	mov    rdx,rbp
  440a20:	lea    rsi,[rip+0x137c9]        # 4541f0 <xmlStrEqual@plt+0x502b0>
  440a27:	mov    edi,0x5
  440a2c:	xor    eax,eax
  440a2e:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  440a33:	nop    DWORD PTR [rax+rax*1+0x0]
  440a38:	mov    rdi,r12
  440a3b:	call   424bf0 <xmlStrEqual@plt+0x20cb0>
  440a40:	mov    rdi,rbp
  440a43:	call   4037b0 <free@plt>
  440a48:	mov    rdi,QWORD PTR [rsp+0x8]
  440a4d:	call   403ee0 <xmlFreeDoc@plt>
  440a52:	lea    rsi,[rip+0x1391f]        # 454378 <xmlStrEqual@plt+0x50438>
  440a59:	xor    eax,eax
  440a5b:	mov    edi,0x2
  440a60:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  440a65:	mov    rdi,r14
  440a68:	call   42e2b0 <xmlStrEqual@plt+0x2a370>
  440a6d:	mov    rax,QWORD PTR [rsp]
  440a71:	lea    rdi,[rsp+0x20]
  440a76:	movzx  ecx,BYTE PTR [rax+0x2]
  440a7a:	movzx  edx,BYTE PTR [rax+0x1]
  440a7e:	movzx  esi,BYTE PTR [rax]
  440a81:	mov    r8d,0x1
  440a87:	call   43fcd0 <xmlStrEqual@plt+0x3bd90>
  440a8c:	mov    rsi,QWORD PTR [rsp+0x20]
  440a91:	mov    rdi,QWORD PTR [rsp+0x10]
  440a96:	xor    ecx,ecx
  440a98:	mov    edx,eax
  440a9a:	call   43fe50 <xmlStrEqual@plt+0x3bf10>
  440a9f:	xor    eax,eax
  440aa1:	mov    rcx,QWORD PTR [rsp+0x28]
  440aa6:	xor    rcx,QWORD PTR fs:0x28
  440aaf:	jne    440b3f <xmlStrEqual@plt+0x3cbff>
  440ab5:	add    rsp,0x38
  440ab9:	pop    rbx
  440aba:	pop    rbp
  440abb:	pop    r12
  440abd:	pop    r13
  440abf:	pop    r14
  440ac1:	pop    r15
  440ac3:	ret    
  440ac4:	nop    DWORD PTR [rax+0x0]
  440ac8:	mov    rdx,rbp
  440acb:	lea    rsi,[rip+0x137ce]        # 4542a0 <xmlStrEqual@plt+0x50360>
  440ad2:	mov    edi,0x3
  440ad7:	xor    eax,eax
  440ad9:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  440ade:	jmp    440a38 <xmlStrEqual@plt+0x3caf8>
  440ae3:	nop    DWORD PTR [rax+rax*1+0x0]
  440ae8:	mov    rdx,rbp
  440aeb:	lea    rsi,[rip+0x1373e]        # 454230 <xmlStrEqual@plt+0x502f0>
  440af2:	mov    edi,0x3
  440af7:	xor    eax,eax
  440af9:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  440afe:	jmp    440a38 <xmlStrEqual@plt+0x3caf8>
  440b03:	xor    eax,eax
  440b05:	lea    rsi,[rip+0x137ec]        # 4542f8 <xmlStrEqual@plt+0x503b8>
  440b0c:	mov    edi,0x5
  440b11:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  440b16:	mov    rax,0x469e3c
  440b1d:	mov    eax,DWORD PTR [rax]
  440b1f:	test   eax,eax
  440b21:	jle    4409bd <xmlStrEqual@plt+0x3ca7d>
  440b27:	lea    rsi,[rip+0x13802]        # 454330 <xmlStrEqual@plt+0x503f0>
  440b2e:	mov    edi,0x5
  440b33:	xor    eax,eax
  440b35:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  440b3a:	jmp    4409bd <xmlStrEqual@plt+0x3ca7d>
  440b3f:	call   403c00 <__stack_chk_fail@plt>
  440b44:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  440b4f:	nop
  440b50:	endbr64 
  440b54:	push   r15
  440b56:	mov    r15,rsi
  440b59:	push   r14
  440b5b:	push   r13
  440b5d:	push   r12
  440b5f:	push   rbp
  440b60:	push   rbx
  440b61:	mov    rbx,rdx
  440b64:	sub    rsp,0x38
  440b68:	mov    QWORD PTR [rsp+0x10],rdi
  440b6d:	mov    rax,QWORD PTR fs:0x28
  440b76:	mov    QWORD PTR [rsp+0x28],rax
  440b7b:	xor    eax,eax
  440b7d:	mov    rax,0x469e3c
  440b84:	mov    esi,DWORD PTR [rax]
  440b86:	test   esi,esi
  440b88:	jle    440b9d <xmlStrEqual@plt+0x3cc5d>
  440b8a:	lea    rsi,[rip+0x13817]        # 4543a8 <xmlStrEqual@plt+0x50468>
  440b91:	mov    edi,0x5
  440b96:	xor    eax,eax
  440b98:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  440b9d:	mov    rax,0x475850
  440ba4:	mov    rdi,QWORD PTR [rax]
  440ba7:	call   410cf0 <xmlStrEqual@plt+0xcdb0>
  440bac:	mov    rdi,0x424bf0
  440bb3:	mov    QWORD PTR [rsp+0x18],rax
  440bb8:	call   42dca0 <xmlStrEqual@plt+0x29d60>
  440bbd:	mov    esi,DWORD PTR [r15+0x4]
  440bc1:	mov    r8d,0x2160
  440bc7:	lea    rcx,[rip+0x14582]        # 455150 <xmlStrEqual@plt+0x51210>
  440bce:	xor    edx,edx
  440bd0:	mov    rdi,rbx
  440bd3:	mov    r13,rax
  440bd6:	call   4037e0 <xmlReadMemory@plt>
  440bdb:	mov    rdi,rax
  440bde:	mov    QWORD PTR [rsp+0x8],rax
  440be3:	call   403d90 <xmlDocGetRootElement@plt>
  440be8:	mov    rdi,rax
  440beb:	lea    rsi,[rip+0x1458b]        # 45517d <xmlStrEqual@plt+0x5123d>
  440bf2:	call   4406a0 <xmlStrEqual@plt+0x3c760>
  440bf7:	mov    rdi,rax
  440bfa:	lea    rsi,[rip+0x1458a]        # 45518b <xmlStrEqual@plt+0x5124b>
  440c01:	call   4406a0 <xmlStrEqual@plt+0x3c760>
  440c06:	mov    r14,rax
  440c09:	test   rax,rax
  440c0c:	je     440d04 <xmlStrEqual@plt+0x3cdc4>
  440c12:	lea    rsi,[rip+0x1457f]        # 455198 <xmlStrEqual@plt+0x51258>
  440c19:	mov    rdi,r14
  440c1c:	call   4406a0 <xmlStrEqual@plt+0x3c760>
  440c21:	mov    rbx,rax
  440c24:	test   rax,rax
  440c27:	je     440cd4 <xmlStrEqual@plt+0x3cd94>
  440c2d:	nop    DWORD PTR [rax]
  440c30:	xor    eax,eax
  440c32:	call   424be0 <xmlStrEqual@plt+0x20ca0>
  440c37:	mov    rdi,rbx
  440c3a:	mov    rbp,rax
  440c3d:	call   403bd0 <xmlNodeGetContent@plt>
  440c42:	mov    rdi,rax
  440c45:	mov    rsi,rbp
  440c48:	call   425bd0 <xmlStrEqual@plt+0x21c90>
  440c4d:	cmp    eax,0x1
  440c50:	jne    440d88 <xmlStrEqual@plt+0x3ce48>
  440c56:	mov    r12,0x4757c0
  440c5d:	mov    edx,DWORD PTR [r12]
  440c61:	test   edx,edx
  440c63:	je     440c7a <xmlStrEqual@plt+0x3cd3a>
  440c65:	mov    rdi,rbp
  440c68:	call   425890 <xmlStrEqual@plt+0x21950>
  440c6d:	movzx  eax,ax
  440c70:	cmp    eax,DWORD PTR [r12]
  440c74:	jne    440e60 <xmlStrEqual@plt+0x3cf20>
  440c7a:	mov    rdx,0x425310
  440c81:	mov    rdi,rbp
  440c84:	mov    rsi,r13
  440c87:	call   42df40 <xmlStrEqual@plt+0x2a000>
  440c8c:	mov    rdi,rbp
  440c8f:	test   al,al
  440c91:	jne    440e40 <xmlStrEqual@plt+0x3cf00>
  440c97:	call   425060 <xmlStrEqual@plt+0x21120>
  440c9c:	mov    rdi,rax
  440c9f:	mov    rsi,r13
  440ca2:	call   42de80 <xmlStrEqual@plt+0x29f40>
  440ca7:	mov    rbp,QWORD PTR [rbx+0x10]
  440cab:	jmp    440cc4 <xmlStrEqual@plt+0x3cd84>
  440cad:	nop    DWORD PTR [rax]
  440cb0:	mov    rdi,QWORD PTR [rax+0x10]
  440cb4:	mov    rsi,rbp
  440cb7:	call   4037c0 <strcmp@plt>
  440cbc:	test   eax,eax
  440cbe:	je     440c30 <xmlStrEqual@plt+0x3ccf0>
  440cc4:	mov    rdi,rbx
  440cc7:	call   4039a0 <xmlNextElementSibling@plt>
  440ccc:	mov    rbx,rax
  440ccf:	test   rax,rax
  440cd2:	jne    440cb0 <xmlStrEqual@plt+0x3cd70>
  440cd4:	mov    rbx,QWORD PTR [r14+0x10]
  440cd8:	jmp    440cf4 <xmlStrEqual@plt+0x3cdb4>
  440cda:	nop    WORD PTR [rax+rax*1+0x0]
  440ce0:	mov    rdi,QWORD PTR [rax+0x10]
  440ce4:	mov    rsi,rbx
  440ce7:	call   4037c0 <strcmp@plt>
  440cec:	test   eax,eax
  440cee:	je     440c12 <xmlStrEqual@plt+0x3ccd2>
  440cf4:	mov    rdi,r14
  440cf7:	call   4039a0 <xmlNextElementSibling@plt>
  440cfc:	mov    r14,rax
  440cff:	test   rax,rax
  440d02:	jne    440ce0 <xmlStrEqual@plt+0x3cda0>
  440d04:	mov    rdi,QWORD PTR [rsp+0x8]
  440d09:	call   403ee0 <xmlFreeDoc@plt>
  440d0e:	mov    rbx,QWORD PTR [rsp+0x18]
  440d13:	mov    rdi,QWORD PTR [rbx+0x48]
  440d17:	call   42e2b0 <xmlStrEqual@plt+0x2a370>
  440d1c:	mov    rax,0x469e3c
  440d23:	mov    QWORD PTR [rbx+0x48],r13
  440d27:	mov    eax,DWORD PTR [rax]
  440d29:	test   eax,eax
  440d2b:	jg     440e83 <xmlStrEqual@plt+0x3cf43>
  440d31:	mov    rax,QWORD PTR [rsp+0x18]
  440d36:	mov    rsi,0x424d40
  440d3d:	mov    rdi,QWORD PTR [rax+0x48]
  440d41:	mov    edx,0x5
  440d46:	call   42dfc0 <xmlStrEqual@plt+0x2a080>
  440d4b:	movzx  ecx,BYTE PTR [r15+0x2]
  440d50:	movzx  edx,BYTE PTR [r15+0x1]
  440d55:	movzx  esi,BYTE PTR [r15]
  440d59:	lea    rdi,[rsp+0x20]
  440d5e:	xor    r8d,r8d
  440d61:	call   43fcd0 <xmlStrEqual@plt+0x3bd90>
  440d66:	mov    rsi,QWORD PTR [rsp+0x20]
  440d6b:	mov    rdi,QWORD PTR [rsp+0x10]
  440d70:	xor    ecx,ecx
  440d72:	mov    edx,eax
  440d74:	call   43fe50 <xmlStrEqual@plt+0x3bf10>
  440d79:	mov    eax,0x1
  440d7e:	jmp    440e18 <xmlStrEqual@plt+0x3ced8>
  440d83:	nop    DWORD PTR [rax+rax*1+0x0]
  440d88:	mov    rax,0x469e3c
  440d8f:	mov    ecx,DWORD PTR [rax]
  440d91:	test   ecx,ecx
  440d93:	jle    440db8 <xmlStrEqual@plt+0x3ce78>
  440d95:	mov    rdi,rbx
  440d98:	call   403bd0 <xmlNodeGetContent@plt>
  440d9d:	mov    rdx,rax
  440da0:	lea    rsi,[rip+0x13631]        # 4543d8 <xmlStrEqual@plt+0x50498>
  440da7:	mov    edi,0x5
  440dac:	xor    eax,eax
  440dae:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  440db3:	nop    DWORD PTR [rax+rax*1+0x0]
  440db8:	xor    eax,eax
  440dba:	lea    rsi,[rip+0x135b7]        # 454378 <xmlStrEqual@plt+0x50438>
  440dc1:	mov    edi,0x2
  440dc6:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  440dcb:	mov    rdi,r13
  440dce:	call   42e2b0 <xmlStrEqual@plt+0x2a370>
  440dd3:	mov    rax,QWORD PTR [rsp+0x8]
  440dd8:	test   rax,rax
  440ddb:	je     440de5 <xmlStrEqual@plt+0x3cea5>
  440ddd:	mov    rdi,rax
  440de0:	call   403ee0 <xmlFreeDoc@plt>
  440de5:	movzx  ecx,BYTE PTR [r15+0x2]
  440dea:	movzx  edx,BYTE PTR [r15+0x1]
  440def:	movzx  esi,BYTE PTR [r15]
  440df3:	lea    rdi,[rsp+0x20]
  440df8:	mov    r8d,0x1
  440dfe:	call   43fcd0 <xmlStrEqual@plt+0x3bd90>
  440e03:	mov    rsi,QWORD PTR [rsp+0x20]
  440e08:	mov    rdi,QWORD PTR [rsp+0x10]
  440e0d:	xor    ecx,ecx
  440e0f:	mov    edx,eax
  440e11:	call   43fe50 <xmlStrEqual@plt+0x3bf10>
  440e16:	xor    eax,eax
  440e18:	mov    rcx,QWORD PTR [rsp+0x28]
  440e1d:	xor    rcx,QWORD PTR fs:0x28
  440e26:	jne    440ec5 <xmlStrEqual@plt+0x3cf85>
  440e2c:	add    rsp,0x38
  440e30:	pop    rbx
  440e31:	pop    rbp
  440e32:	pop    r12
  440e34:	pop    r13
  440e36:	pop    r14
  440e38:	pop    r15
  440e3a:	ret    
  440e3b:	nop    DWORD PTR [rax+rax*1+0x0]
  440e40:	call   424d40 <xmlStrEqual@plt+0x20e00>
  440e45:	mov    rdx,rax
  440e48:	lea    rsi,[rip+0x13631]        # 454480 <xmlStrEqual@plt+0x50540>
  440e4f:	mov    edi,0x3
  440e54:	xor    eax,eax
  440e56:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  440e5b:	jmp    440db8 <xmlStrEqual@plt+0x3ce78>
  440e60:	mov    rdi,rbp
  440e63:	call   424d40 <xmlStrEqual@plt+0x20e00>
  440e68:	mov    rdx,rax
  440e6b:	lea    rsi,[rip+0x1359e]        # 454410 <xmlStrEqual@plt+0x504d0>
  440e72:	mov    edi,0x3
  440e77:	xor    eax,eax
  440e79:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  440e7e:	jmp    440db8 <xmlStrEqual@plt+0x3ce78>
  440e83:	xor    eax,eax
  440e85:	lea    rsi,[rip+0x1364c]        # 4544d8 <xmlStrEqual@plt+0x50598>
  440e8c:	mov    edi,0x5
  440e91:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  440e96:	mov    rax,0x469e3c
  440e9d:	cmp    DWORD PTR [rax],0x1
  440ea0:	jle    440d31 <xmlStrEqual@plt+0x3cdf1>
  440ea6:	lea    rdx,[rip+0xa353]        # 44b200 <xmlStrEqual@plt+0x472c0>
  440ead:	lea    rsi,[rip+0xa114]        # 44afc8 <xmlStrEqual@plt+0x47088>
  440eb4:	mov    edi,0x6
  440eb9:	xor    eax,eax
  440ebb:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  440ec0:	jmp    440d31 <xmlStrEqual@plt+0x3cdf1>
  440ec5:	call   403c00 <__stack_chk_fail@plt>
  440eca:	nop    WORD PTR [rax+rax*1+0x0]
  440ed0:	endbr64 
  440ed4:	push   rbp
  440ed5:	push   rbx
  440ed6:	mov    rbx,rdi
  440ed9:	sub    rsp,0x8
  440edd:	mov    rbp,QWORD PTR [rdi+0x10]
  440ee1:	jmp    440ef8 <xmlStrEqual@plt+0x3cfb8>
  440ee3:	nop    DWORD PTR [rax+rax*1+0x0]
  440ee8:	mov    rdi,QWORD PTR [rax+0x10]
  440eec:	mov    rsi,rbp
  440eef:	call   4037c0 <strcmp@plt>
  440ef4:	test   eax,eax
  440ef6:	je     440f08 <xmlStrEqual@plt+0x3cfc8>
  440ef8:	mov    rdi,rbx
  440efb:	call   4039a0 <xmlNextElementSibling@plt>
  440f00:	mov    rbx,rax
  440f03:	test   rax,rax
  440f06:	jne    440ee8 <xmlStrEqual@plt+0x3cfa8>
  440f08:	add    rsp,0x8
  440f0c:	mov    rax,rbx
  440f0f:	pop    rbx
  440f10:	pop    rbp
  440f11:	ret    
  440f12:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  440f1d:	nop    DWORD PTR [rax]
  440f20:	endbr64 
  440f24:	push   r12
  440f26:	lea    rsi,[rip+0x610d]        # 44703a <xmlStrEqual@plt+0x430fa>
  440f2d:	lea    r12,[rip+0x144bc]        # 4553f0 <xmlStrEqual@plt+0x514b0>
  440f34:	push   rbp
  440f35:	push   rbx
  440f36:	mov    rbx,rdi
  440f39:	call   4406a0 <xmlStrEqual@plt+0x3c760>
  440f3e:	mov    rdi,rax
  440f41:	call   403bd0 <xmlNodeGetContent@plt>
  440f46:	mov    rsi,rax
  440f49:	mov    ecx,0x5
  440f4e:	mov    rdi,r12
  440f51:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  440f53:	seta   cl
  440f56:	sbb    cl,0x0
  440f59:	test   cl,cl
  440f5b:	je     440fb0 <xmlStrEqual@plt+0x3d070>
  440f5d:	lea    r12,[rip+0x144b2]        # 455416 <xmlStrEqual@plt+0x514d6>
  440f64:	mov    ecx,0x5
  440f69:	mov    rsi,rax
  440f6c:	mov    rdi,r12
  440f6f:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  440f71:	seta   dl
  440f74:	sbb    dl,0x0
  440f77:	test   dl,dl
  440f79:	je     440fb0 <xmlStrEqual@plt+0x3d070>
  440f7b:	mov    ecx,0x5
  440f80:	lea    rdi,[rip+0xe2a3]        # 44f22a <xmlStrEqual@plt+0x4b2ea>
  440f87:	mov    rsi,rax
  440f8a:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  440f8c:	seta   dl
  440f8f:	sbb    dl,0x0
  440f92:	xor    ebp,ebp
  440f94:	test   dl,dl
  440f96:	je     440fd8 <xmlStrEqual@plt+0x3d098>
  440f98:	mov    rdx,0x469e3c
  440f9f:	cmp    DWORD PTR [rdx],0x1
  440fa2:	jg     441030 <xmlStrEqual@plt+0x3d0f0>
  440fa8:	pop    rbx
  440fa9:	mov    rax,rbp
  440fac:	pop    rbp
  440fad:	pop    r12
  440faf:	ret    
  440fb0:	xor    eax,eax
  440fb2:	call   424be0 <xmlStrEqual@plt+0x20ca0>
  440fb7:	mov    rsi,r12
  440fba:	mov    rdi,rbx
  440fbd:	mov    rbp,rax
  440fc0:	call   4406a0 <xmlStrEqual@plt+0x3c760>
  440fc5:	mov    rdi,rax
  440fc8:	call   403bd0 <xmlNodeGetContent@plt>
  440fcd:	mov    rdi,rax
  440fd0:	mov    rsi,rbp
  440fd3:	call   425bd0 <xmlStrEqual@plt+0x21c90>
  440fd8:	lea    rsi,[rip+0x141ce]        # 4551ad <xmlStrEqual@plt+0x5126d>
  440fdf:	mov    rdi,rbx
  440fe2:	call   4406a0 <xmlStrEqual@plt+0x3c760>
  440fe7:	test   rax,rax
  440fea:	je     440fa8 <xmlStrEqual@plt+0x3d068>
  440fec:	lea    rsi,[rip+0x141ba]        # 4551ad <xmlStrEqual@plt+0x5126d>
  440ff3:	mov    rdi,rbx
  440ff6:	call   4406a0 <xmlStrEqual@plt+0x3c760>
  440ffb:	mov    rdi,rax
  440ffe:	call   403bd0 <xmlNodeGetContent@plt>
  441003:	mov    rdi,rax
  441006:	mov    edx,0xa
  44100b:	xor    esi,esi
  44100d:	call   403d20 <strtol@plt>
  441012:	mov    rbx,rax
  441015:	mov    rdi,rbp
  441018:	call   424de0 <xmlStrEqual@plt+0x20ea0>
  44101d:	movzx  esi,bl
  441020:	mov    rdi,rbp
  441023:	call   426350 <xmlStrEqual@plt+0x22410>
  441028:	pop    rbx
  441029:	mov    rax,rbp
  44102c:	pop    rbp
  44102d:	pop    r12
  44102f:	ret    
  441030:	mov    rdx,rax
  441033:	lea    rsi,[rip+0x134d6]        # 454510 <xmlStrEqual@plt+0x505d0>
  44103a:	mov    edi,0x6
  44103f:	xor    eax,eax
  441041:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  441046:	jmp    440fa8 <xmlStrEqual@plt+0x3d068>
  44104b:	nop    DWORD PTR [rax+rax*1+0x0]
  441050:	endbr64 
  441054:	push   rbx
  441055:	lea    rsi,[rip+0x14156]        # 4551b2 <xmlStrEqual@plt+0x51272>
  44105c:	mov    rbx,rdi
  44105f:	call   4406a0 <xmlStrEqual@plt+0x3c760>
  441064:	xor    edx,edx
  441066:	test   rax,rax
  441069:	je     441093 <xmlStrEqual@plt+0x3d153>
  44106b:	lea    rsi,[rip+0x14140]        # 4551b2 <xmlStrEqual@plt+0x51272>
  441072:	mov    rdi,rbx
  441075:	call   4406a0 <xmlStrEqual@plt+0x3c760>
  44107a:	mov    rdi,rax
  44107d:	call   403bd0 <xmlNodeGetContent@plt>
  441082:	mov    rdi,rax
  441085:	mov    edx,0xa
  44108a:	xor    esi,esi
  44108c:	call   403d20 <strtol@plt>
  441091:	mov    edx,eax
  441093:	mov    eax,edx
  441095:	pop    rbx
  441096:	ret    
  441097:	nop    WORD PTR [rax+rax*1+0x0]
  4410a0:	endbr64 
  4410a4:	push   r15
  4410a6:	lea    rsi,[rip+0x14111]        # 4551be <xmlStrEqual@plt+0x5127e>
  4410ad:	push   r14
  4410af:	push   r13
  4410b1:	push   r12
  4410b3:	push   rbp
  4410b4:	lea    rbp,[rip+0x1410d]        # 4551c8 <xmlStrEqual@plt+0x51288>
  4410bb:	push   rbx
  4410bc:	mov    rbx,rdi
  4410bf:	sub    rsp,0x38
  4410c3:	call   4406a0 <xmlStrEqual@plt+0x3c760>
  4410c8:	mov    rdi,rax
  4410cb:	call   403bd0 <xmlNodeGetContent@plt>
  4410d0:	mov    rsi,rax
  4410d3:	mov    ecx,0x16
  4410d8:	mov    rdi,rbp
  4410db:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  4410dd:	mov    QWORD PTR [rsp+0x18],rax
  4410e2:	seta   al
  4410e5:	sbb    al,0x0
  4410e7:	test   al,al
  4410e9:	jne    4412a8 <xmlStrEqual@plt+0x3d368>
  4410ef:	call   42a180 <xmlStrEqual@plt+0x26240>
  4410f4:	mov    rdi,rax
  4410f7:	mov    QWORD PTR [rsp+0x28],rax
  4410fc:	call   425450 <xmlStrEqual@plt+0x21510>
  441101:	mov    rdi,rbx
  441104:	mov    rsi,rbp
  441107:	mov    QWORD PTR [rsp+0x20],rax
  44110c:	call   4406a0 <xmlStrEqual@plt+0x3c760>
  441111:	mov    rdi,rax
  441114:	lea    rsi,[rip+0x140c3]        # 4551de <xmlStrEqual@plt+0x5129e>
  44111b:	call   4406a0 <xmlStrEqual@plt+0x3c760>
  441120:	mov    rbx,rax
  441123:	test   rax,rax
  441126:	je     441264 <xmlStrEqual@plt+0x3d324>
  44112c:	xor    r15d,r15d
  44112f:	xor    r14d,r14d
  441132:	xor    r13d,r13d
  441135:	nop    DWORD PTR [rax]
  441138:	lea    rsi,[rip+0x1424e]        # 45538d <xmlStrEqual@plt+0x5144d>
  44113f:	mov    rdi,rbx
  441142:	call   4406a0 <xmlStrEqual@plt+0x3c760>
  441147:	mov    rdi,rax
  44114a:	call   403bd0 <xmlNodeGetContent@plt>
  44114f:	mov    rbp,rax
  441152:	xor    eax,eax
  441154:	call   424be0 <xmlStrEqual@plt+0x20ca0>
  441159:	mov    rsi,rax
  44115c:	mov    rdi,rbp
  44115f:	mov    r12,rax
  441162:	call   425bd0 <xmlStrEqual@plt+0x21c90>
  441167:	mov    rdi,rbp
  44116a:	call   4037b0 <free@plt>
  44116f:	lea    rsi,[rip+0x1406c]        # 4551e2 <xmlStrEqual@plt+0x512a2>
  441176:	mov    rdi,rbx
  441179:	call   4406a0 <xmlStrEqual@plt+0x3c760>
  44117e:	mov    rdi,rax
  441181:	call   403bd0 <xmlNodeGetContent@plt>
  441186:	mov    rdi,rax
  441189:	lea    rsi,[rip+0x1405b]        # 4551eb <xmlStrEqual@plt+0x512ab>
  441190:	mov    rbp,rax
  441193:	call   403860 <strstr@plt>
  441198:	test   rax,rax
  44119b:	je     441298 <xmlStrEqual@plt+0x3d358>
  4411a1:	mov    DWORD PTR [rsp+0xc],0x1
  4411a9:	mov    r13d,0x1
  4411af:	lea    rsi,[rip+0x1403c]        # 4551f2 <xmlStrEqual@plt+0x512b2>
  4411b6:	mov    rdi,rbp
  4411b9:	call   403860 <strstr@plt>
  4411be:	test   rax,rax
  4411c1:	je     441288 <xmlStrEqual@plt+0x3d348>
  4411c7:	mov    DWORD PTR [rsp+0x10],0x1
  4411cf:	mov    r14d,0x1
  4411d5:	lea    rsi,[rip+0x14021]        # 4551fd <xmlStrEqual@plt+0x512bd>
  4411dc:	mov    rdi,rbp
  4411df:	call   403860 <strstr@plt>
  4411e4:	movzx  ecx,r15b
  4411e8:	test   rax,rax
  4411eb:	je     4411f8 <xmlStrEqual@plt+0x3d2b8>
  4411ed:	mov    ecx,0x1
  4411f2:	mov    r15d,0x1
  4411f8:	mov    rdi,rbp
  4411fb:	mov    DWORD PTR [rsp+0x14],ecx
  4411ff:	call   4037b0 <free@plt>
  441204:	mov    ecx,DWORD PTR [rsp+0x14]
  441208:	mov    edx,DWORD PTR [rsp+0x10]
  44120c:	mov    esi,DWORD PTR [rsp+0xc]
  441210:	mov    rdi,r12
  441213:	call   42a3d0 <xmlStrEqual@plt+0x26490>
  441218:	test   rax,rax
  44121b:	je     44122a <xmlStrEqual@plt+0x3d2ea>
  44121d:	mov    rdi,QWORD PTR [rsp+0x20]
  441222:	mov    rsi,rax
  441225:	call   42a450 <xmlStrEqual@plt+0x26510>
  44122a:	mov    rdi,r12
  44122d:	call   424bf0 <xmlStrEqual@plt+0x20cb0>
  441232:	mov    rbp,QWORD PTR [rbx+0x10]
  441236:	jmp    441254 <xmlStrEqual@plt+0x3d314>
  441238:	nop    DWORD PTR [rax+rax*1+0x0]
  441240:	mov    rdi,QWORD PTR [rax+0x10]
  441244:	mov    rsi,rbp
  441247:	call   4037c0 <strcmp@plt>
  44124c:	test   eax,eax
  44124e:	je     441138 <xmlStrEqual@plt+0x3d1f8>
  441254:	mov    rdi,rbx
  441257:	call   4039a0 <xmlNextElementSibling@plt>
  44125c:	mov    rbx,rax
  44125f:	test   rax,rax
  441262:	jne    441240 <xmlStrEqual@plt+0x3d300>
  441264:	mov    rdi,QWORD PTR [rsp+0x18]
  441269:	call   4037b0 <free@plt>
  44126e:	mov    rax,QWORD PTR [rsp+0x28]
  441273:	add    rsp,0x38
  441277:	pop    rbx
  441278:	pop    rbp
  441279:	pop    r12
  44127b:	pop    r13
  44127d:	pop    r14
  44127f:	pop    r15
  441281:	ret    
  441282:	nop    WORD PTR [rax+rax*1+0x0]
  441288:	movzx  eax,r14b
  44128c:	mov    DWORD PTR [rsp+0x10],eax
  441290:	jmp    4411d5 <xmlStrEqual@plt+0x3d295>
  441295:	nop    DWORD PTR [rax]
  441298:	movzx  eax,r13b
  44129c:	mov    DWORD PTR [rsp+0xc],eax
  4412a0:	jmp    4411af <xmlStrEqual@plt+0x3d26f>
  4412a5:	nop    DWORD PTR [rax]
  4412a8:	mov    rax,0x469e3c
  4412af:	mov    QWORD PTR [rsp+0x28],0x0
  4412b8:	cmp    DWORD PTR [rax],0x1
  4412bb:	jle    44126e <xmlStrEqual@plt+0x3d32e>
  4412bd:	mov    rdx,QWORD PTR [rsp+0x18]
  4412c2:	lea    rsi,[rip+0x1327f]        # 454548 <xmlStrEqual@plt+0x50608>
  4412c9:	mov    edi,0x6
  4412ce:	xor    eax,eax
  4412d0:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  4412d5:	jmp    44126e <xmlStrEqual@plt+0x3d32e>
  4412d7:	nop    WORD PTR [rax+rax*1+0x0]
  4412e0:	endbr64 
  4412e4:	push   r14
  4412e6:	push   r13
  4412e8:	mov    r13,rdx
  4412eb:	push   r12
  4412ed:	mov    r12,rsi
  4412f0:	lea    rsi,[rip+0x5d43]        # 44703a <xmlStrEqual@plt+0x430fa>
  4412f7:	push   rbp
  4412f8:	mov    rbp,rdi
  4412fb:	push   rbx
  4412fc:	call   4406a0 <xmlStrEqual@plt+0x3c760>
  441301:	mov    rdi,rax
  441304:	call   403bd0 <xmlNodeGetContent@plt>
  441309:	lea    rdx,[rip+0x140e0]        # 4553f0 <xmlStrEqual@plt+0x514b0>
  441310:	mov    rsi,rax
  441313:	mov    ecx,0x5
  441318:	mov    rdi,rdx
  44131b:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  44131d:	mov    rbx,rax
  441320:	seta   al
  441323:	sbb    al,0x0
  441325:	test   al,al
  441327:	je     4413c0 <xmlStrEqual@plt+0x3d480>
  44132d:	lea    rdx,[rip+0x140e2]        # 455416 <xmlStrEqual@plt+0x514d6>
  441334:	mov    ecx,0x5
  441339:	mov    rsi,rbx
  44133c:	mov    rdi,rdx
  44133f:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  441341:	seta   al
  441344:	sbb    al,0x0
  441346:	test   al,al
  441348:	je     4413c0 <xmlStrEqual@plt+0x3d480>
  44134a:	lea    r14,[rip+0xded9]        # 44f22a <xmlStrEqual@plt+0x4b2ea>
  441351:	mov    ecx,0x5
  441356:	mov    rsi,rbx
  441359:	mov    rdi,r14
  44135c:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  44135e:	seta   al
  441361:	sbb    al,0x0
  441363:	test   al,al
  441365:	jne    441470 <xmlStrEqual@plt+0x3d530>
  44136b:	mov    rdi,rbx
  44136e:	call   4037b0 <free@plt>
  441373:	mov    rsi,r14
  441376:	mov    rdi,rbp
  441379:	call   4406a0 <xmlStrEqual@plt+0x3c760>
  44137e:	mov    rdi,rax
  441381:	call   4410a0 <xmlStrEqual@plt+0x3d160>
  441386:	mov    r14,rax
  441389:	test   rax,rax
  44138c:	je     4414b0 <xmlStrEqual@plt+0x3d570>
  441392:	mov    rdi,r12
  441395:	call   403ed0 <strdup@plt>
  44139a:	mov    rsi,rax
  44139d:	mov    rdi,r13
  4413a0:	mov    rdx,r14
  4413a3:	call   43a0e0 <xmlStrEqual@plt+0x361a0>
  4413a8:	pop    rbx
  4413a9:	pop    rbp
  4413aa:	mov    rdi,r12
  4413ad:	pop    r12
  4413af:	pop    r13
  4413b1:	pop    r14
  4413b3:	jmp    403ed0 <strdup@plt>
  4413b8:	nop    DWORD PTR [rax+rax*1+0x0]
  4413c0:	mov    rsi,rdx
  4413c3:	mov    rdi,rbp
  4413c6:	call   4406a0 <xmlStrEqual@plt+0x3c760>
  4413cb:	mov    rdi,rax
  4413ce:	call   403bd0 <xmlNodeGetContent@plt>
  4413d3:	mov    rdi,rbx
  4413d6:	mov    r14,rax
  4413d9:	call   4037b0 <free@plt>
  4413de:	lea    rsi,[rip+0x13dc8]        # 4551ad <xmlStrEqual@plt+0x5126d>
  4413e5:	mov    rdi,rbp
  4413e8:	call   4406a0 <xmlStrEqual@plt+0x3c760>
  4413ed:	test   rax,rax
  4413f0:	je     441462 <xmlStrEqual@plt+0x3d522>
  4413f2:	lea    rsi,[rip+0x13db4]        # 4551ad <xmlStrEqual@plt+0x5126d>
  4413f9:	mov    rdi,rbp
  4413fc:	call   4406a0 <xmlStrEqual@plt+0x3c760>
  441401:	mov    rdi,rax
  441404:	call   403bd0 <xmlNodeGetContent@plt>
  441409:	mov    rbx,rax
  44140c:	mov    rdi,r14
  44140f:	call   403970 <strlen@plt>
  441414:	mov    rdi,rbx
  441417:	mov    rbp,rax
  44141a:	call   403970 <strlen@plt>
  44141f:	lea    rdi,[rbp+rax*1+0x2]
  441424:	call   435000 <xmlStrEqual@plt+0x310c0>
  441429:	mov    rdi,rax
  44142c:	mov    r8,r14
  44142f:	mov    r9,rbx
  441432:	lea    rcx,[rip+0x72d2]        # 44870b <xmlStrEqual@plt+0x447cb>
  441439:	mov    rdx,0xffffffffffffffff
  441440:	mov    esi,0x1
  441445:	mov    rbp,rax
  441448:	xor    eax,eax
  44144a:	call   403a30 <__sprintf_chk@plt>
  44144f:	mov    rdi,r14
  441452:	call   4037b0 <free@plt>
  441457:	mov    rdi,rbx
  44145a:	call   4037b0 <free@plt>
  44145f:	mov    r14,rbp
  441462:	pop    rbx
  441463:	pop    rbp
  441464:	pop    r12
  441466:	pop    r13
  441468:	mov    rax,r14
  44146b:	pop    r14
  44146d:	ret    
  44146e:	xchg   ax,ax
  441470:	mov    rax,0x469e3c
  441477:	cmp    DWORD PTR [rax],0x1
  44147a:	jle    441492 <xmlStrEqual@plt+0x3d552>
  44147c:	mov    rdx,rbx
  44147f:	lea    rsi,[rip+0x13142]        # 4545c8 <xmlStrEqual@plt+0x50688>
  441486:	mov    edi,0x6
  44148b:	xor    eax,eax
  44148d:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  441492:	mov    rdi,rbx
  441495:	call   4037b0 <free@plt>
  44149a:	pop    rbx
  44149b:	pop    rbp
  44149c:	pop    r12
  44149e:	xor    r14d,r14d
  4414a1:	pop    r13
  4414a3:	mov    rax,r14
  4414a6:	pop    r14
  4414a8:	ret    
  4414a9:	nop    DWORD PTR [rax+0x0]
  4414b0:	mov    rax,0x469e3c
  4414b7:	cmp    DWORD PTR [rax],0x1
  4414ba:	jle    441462 <xmlStrEqual@plt+0x3d522>
  4414bc:	lea    rsi,[rip+0x130c5]        # 454588 <xmlStrEqual@plt+0x50648>
  4414c3:	mov    edi,0x6
  4414c8:	xor    eax,eax
  4414ca:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  4414cf:	jmp    441462 <xmlStrEqual@plt+0x3d522>
  4414d1:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4414dc:	nop    DWORD PTR [rax+0x0]
  4414e0:	endbr64 
  4414e4:	push   r15
  4414e6:	mov    r15,rsi
  4414e9:	push   r14
  4414eb:	push   r13
  4414ed:	push   r12
  4414ef:	push   rbp
  4414f0:	push   rbx
  4414f1:	mov    rbx,rdi
  4414f4:	sub    rsp,0x28
  4414f8:	mov    QWORD PTR [rsp+0x18],rsi
  4414fd:	lea    rsi,[rip+0x13cb7]        # 4551bb <xmlStrEqual@plt+0x5127b>
  441504:	call   4406a0 <xmlStrEqual@plt+0x3c760>
  441509:	mov    rdi,rax
  44150c:	call   403bd0 <xmlNodeGetContent@plt>
  441511:	lea    rsi,[rip+0x13cec]        # 455204 <xmlStrEqual@plt+0x512c4>
  441518:	mov    rdi,rbx
  44151b:	mov    rbp,rax
  44151e:	call   4406a0 <xmlStrEqual@plt+0x3c760>
  441523:	mov    rdi,rax
  441526:	mov    rdx,r15
  441529:	mov    rsi,rbp
  44152c:	call   4412e0 <xmlStrEqual@plt+0x3d3a0>
  441531:	mov    r12,rax
  441534:	mov    rdi,rbp
  441537:	call   4037b0 <free@plt>
  44153c:	test   r12,r12
  44153f:	je     4418a0 <xmlStrEqual@plt+0x3d960>
  441545:	xor    eax,eax
  441547:	call   4052f0 <xmlStrEqual@plt+0x13b0>
  44154c:	mov    r15,rax
  44154f:	test   rax,rax
  441552:	je     4418e5 <xmlStrEqual@plt+0x3d9a5>
  441558:	mov    QWORD PTR [rax],r12
  44155b:	lea    rsi,[rip+0x13ca2]        # 455204 <xmlStrEqual@plt+0x512c4>
  441562:	mov    rdi,rbx
  441565:	call   4406a0 <xmlStrEqual@plt+0x3c760>
  44156a:	mov    rdi,rax
  44156d:	call   441050 <xmlStrEqual@plt+0x3d110>
  441572:	mov    DWORD PTR [r15+0xc],eax
  441576:	lea    rsi,[rip+0x13c93]        # 455210 <xmlStrEqual@plt+0x512d0>
  44157d:	mov    rdi,rbx
  441580:	call   4406a0 <xmlStrEqual@plt+0x3c760>
  441585:	test   rax,rax
  441588:	je     4415b4 <xmlStrEqual@plt+0x3d674>
  44158a:	lea    rsi,[rip+0x13c7f]        # 455210 <xmlStrEqual@plt+0x512d0>
  441591:	mov    rdi,rbx
  441594:	call   4406a0 <xmlStrEqual@plt+0x3c760>
  441599:	mov    rdi,rax
  44159c:	call   403bd0 <xmlNodeGetContent@plt>
  4415a1:	mov    rdi,rax
  4415a4:	mov    edx,0xa
  4415a9:	xor    esi,esi
  4415ab:	call   403d20 <strtol@plt>
  4415b0:	mov    DWORD PTR [r15+0x8],eax
  4415b4:	mov    rdi,rbx
  4415b7:	lea    rsi,[rip+0x13c5d]        # 45521b <xmlStrEqual@plt+0x512db>
  4415be:	call   4406a0 <xmlStrEqual@plt+0x3c760>
  4415c3:	mov    rdi,rax
  4415c6:	lea    rsi,[rip+0x13c54]        # 455221 <xmlStrEqual@plt+0x512e1>
  4415cd:	call   4406a0 <xmlStrEqual@plt+0x3c760>
  4415d2:	mov    rbx,rax
  4415d5:	test   rax,rax
  4415d8:	je     4417b6 <xmlStrEqual@plt+0x3d876>
  4415de:	xor    r14d,r14d
  4415e1:	mov    r13d,0xff
  4415e7:	xor    r12d,r12d
  4415ea:	mov    ebp,0xff
  4415ef:	nop
  4415f0:	lea    rsi,[rip+0x13c43]        # 45523a <xmlStrEqual@plt+0x512fa>
  4415f7:	mov    rdi,rbx
  4415fa:	call   4406a0 <xmlStrEqual@plt+0x3c760>
  4415ff:	test   rax,rax
  441602:	je     44162c <xmlStrEqual@plt+0x3d6ec>
  441604:	lea    rsi,[rip+0x13c2f]        # 45523a <xmlStrEqual@plt+0x512fa>
  44160b:	mov    rdi,rbx
  44160e:	call   4406a0 <xmlStrEqual@plt+0x3c760>
  441613:	mov    rdi,rax
  441616:	call   403bd0 <xmlNodeGetContent@plt>
  44161b:	mov    rdi,rax
  44161e:	mov    edx,0xa
  441623:	xor    esi,esi
  441625:	call   403d20 <strtol@plt>
  44162a:	mov    ebp,eax
  44162c:	lea    rsi,[rip+0x13c22]        # 455255 <xmlStrEqual@plt+0x51315>
  441633:	mov    rdi,rbx
  441636:	call   4406a0 <xmlStrEqual@plt+0x3c760>
  44163b:	test   rax,rax
  44163e:	je     441669 <xmlStrEqual@plt+0x3d729>
  441640:	lea    rsi,[rip+0x13c0e]        # 455255 <xmlStrEqual@plt+0x51315>
  441647:	mov    rdi,rbx
  44164a:	call   4406a0 <xmlStrEqual@plt+0x3c760>
  44164f:	mov    rdi,rax
  441652:	call   403bd0 <xmlNodeGetContent@plt>
  441657:	mov    rdi,rax
  44165a:	mov    edx,0xa
  44165f:	xor    esi,esi
  441661:	call   403d20 <strtol@plt>
  441666:	mov    r12d,eax
  441669:	lea    rsi,[rip+0x13bb6]        # 455226 <xmlStrEqual@plt+0x512e6>
  441670:	mov    rdi,rbx
  441673:	call   4406a0 <xmlStrEqual@plt+0x3c760>
  441678:	test   rax,rax
  44167b:	je     4416a6 <xmlStrEqual@plt+0x3d766>
  44167d:	lea    rsi,[rip+0x13bac]        # 455230 <xmlStrEqual@plt+0x512f0>
  441684:	mov    rdi,rbx
  441687:	call   4406a0 <xmlStrEqual@plt+0x3c760>
  44168c:	mov    rdi,rax
  44168f:	call   403bd0 <xmlNodeGetContent@plt>
  441694:	mov    rdi,rax
  441697:	mov    edx,0xa
  44169c:	xor    esi,esi
  44169e:	call   403d20 <strtol@plt>
  4416a3:	mov    r13d,eax
  4416a6:	lea    rsi,[rip+0x13b96]        # 455243 <xmlStrEqual@plt+0x51303>
  4416ad:	mov    rdi,rbx
  4416b0:	call   4406a0 <xmlStrEqual@plt+0x3c760>
  4416b5:	test   rax,rax
  4416b8:	je     4416e3 <xmlStrEqual@plt+0x3d7a3>
  4416ba:	lea    rsi,[rip+0x13b8a]        # 45524b <xmlStrEqual@plt+0x5130b>
  4416c1:	mov    rdi,rbx
  4416c4:	call   4406a0 <xmlStrEqual@plt+0x3c760>
  4416c9:	mov    rdi,rax
  4416cc:	call   403bd0 <xmlNodeGetContent@plt>
  4416d1:	mov    rdi,rax
  4416d4:	mov    edx,0xa
  4416d9:	xor    esi,esi
  4416db:	call   403d20 <strtol@plt>
  4416e0:	mov    r14d,eax
  4416e3:	lea    rsi,[rip+0x13b72]        # 45525c <xmlStrEqual@plt+0x5131c>
  4416ea:	mov    rdi,rbx
  4416ed:	call   4406a0 <xmlStrEqual@plt+0x3c760>
  4416f2:	test   rax,rax
  4416f5:	je     4417d0 <xmlStrEqual@plt+0x3d890>
  4416fb:	lea    rsi,[rip+0x13b5a]        # 45525c <xmlStrEqual@plt+0x5131c>
  441702:	mov    rdi,rbx
  441705:	call   4406a0 <xmlStrEqual@plt+0x3c760>
  44170a:	mov    rdi,rax
  44170d:	mov    QWORD PTR [rsp+0x8],rax
  441712:	call   403bd0 <xmlNodeGetContent@plt>
  441717:	mov    rdi,rax
  44171a:	movzx  r9d,r14b
  44171e:	movzx  r8d,r13b
  441722:	movzx  ecx,r12b
  441726:	movzx  edx,bpl
  44172a:	mov    esi,0x4
  44172f:	call   4055f0 <xmlStrEqual@plt+0x16b0>
  441734:	test   rax,rax
  441737:	je     441890 <xmlStrEqual@plt+0x3d950>
  44173d:	mov    rsi,QWORD PTR [r15+0x18]
  441741:	mov    rdi,rax
  441744:	call   42dcf0 <xmlStrEqual@plt+0x29db0>
  441749:	mov    rdi,QWORD PTR [rsp+0x8]
  44174e:	call   403bd0 <xmlNodeGetContent@plt>
  441753:	mov    rdi,rax
  441756:	movzx  r9d,r14b
  44175a:	movzx  r8d,r13b
  44175e:	movzx  ecx,r12b
  441762:	movzx  edx,bpl
  441766:	mov    esi,0x6
  44176b:	call   4055f0 <xmlStrEqual@plt+0x16b0>
  441770:	test   rax,rax
  441773:	je     441890 <xmlStrEqual@plt+0x3d950>
  441779:	mov    rsi,QWORD PTR [r15+0x18]
  44177d:	mov    rdi,rax
  441780:	call   42dcf0 <xmlStrEqual@plt+0x29db0>
  441785:	mov    rax,QWORD PTR [rbx+0x10]
  441789:	mov    QWORD PTR [rsp+0x8],rax
  44178e:	jmp    4417a6 <xmlStrEqual@plt+0x3d866>
  441790:	mov    rdi,QWORD PTR [rax+0x10]
  441794:	mov    rsi,QWORD PTR [rsp+0x8]
  441799:	call   4037c0 <strcmp@plt>
  44179e:	test   eax,eax
  4417a0:	je     4415f0 <xmlStrEqual@plt+0x3d6b0>
  4417a6:	mov    rdi,rbx
  4417a9:	call   4039a0 <xmlNextElementSibling@plt>
  4417ae:	mov    rbx,rax
  4417b1:	test   rax,rax
  4417b4:	jne    441790 <xmlStrEqual@plt+0x3d850>
  4417b6:	add    rsp,0x28
  4417ba:	pop    rbx
  4417bb:	pop    rbp
  4417bc:	pop    r12
  4417be:	pop    r13
  4417c0:	pop    r14
  4417c2:	mov    rax,r15
  4417c5:	pop    r15
  4417c7:	ret    
  4417c8:	nop    DWORD PTR [rax+rax*1+0x0]
  4417d0:	lea    rsi,[rip+0x13a8f]        # 455266 <xmlStrEqual@plt+0x51326>
  4417d7:	mov    rdi,rbx
  4417da:	call   4406a0 <xmlStrEqual@plt+0x3c760>
  4417df:	test   rax,rax
  4417e2:	je     4418b5 <xmlStrEqual@plt+0x3d975>
  4417e8:	lea    rsi,[rip+0x13b2c]        # 45531b <xmlStrEqual@plt+0x513db>
  4417ef:	mov    rdi,rbx
  4417f2:	call   4406a0 <xmlStrEqual@plt+0x3c760>
  4417f7:	mov    rdi,rax
  4417fa:	call   403bd0 <xmlNodeGetContent@plt>
  4417ff:	lea    rsi,[rip+0x13a60]        # 455266 <xmlStrEqual@plt+0x51326>
  441806:	mov    rdi,rbx
  441809:	mov    QWORD PTR [rsp+0x10],rax
  44180e:	call   4406a0 <xmlStrEqual@plt+0x3c760>
  441813:	mov    rdx,QWORD PTR [rsp+0x18]
  441818:	mov    rsi,QWORD PTR [rsp+0x10]
  44181d:	mov    rdi,rax
  441820:	call   4412e0 <xmlStrEqual@plt+0x3d3a0>
  441825:	mov    rdi,QWORD PTR [rsp+0x10]
  44182a:	mov    QWORD PTR [rsp+0x8],rax
  44182f:	call   4037b0 <free@plt>
  441834:	cmp    QWORD PTR [rsp+0x8],0x0
  44183a:	je     441890 <xmlStrEqual@plt+0x3d950>
  44183c:	mov    rdi,QWORD PTR [rsp+0x8]
  441841:	mov    r9d,0x1
  441847:	movzx  r8d,r14b
  44184b:	movzx  ecx,r13b
  44184f:	movzx  edx,r12b
  441853:	movzx  esi,bpl
  441857:	call   405430 <xmlStrEqual@plt+0x14f0>
  44185c:	mov    rdi,QWORD PTR [rsp+0x8]
  441861:	mov    QWORD PTR [rsp+0x10],rax
  441866:	call   4037b0 <free@plt>
  44186b:	mov    rax,QWORD PTR [rsp+0x10]
  441870:	test   rax,rax
  441873:	je     441890 <xmlStrEqual@plt+0x3d950>
  441875:	mov    rsi,QWORD PTR [r15+0x10]
  441879:	mov    rdi,rax
  44187c:	call   42dcf0 <xmlStrEqual@plt+0x29db0>
  441881:	jmp    441785 <xmlStrEqual@plt+0x3d845>
  441886:	nop    WORD PTR cs:[rax+rax*1+0x0]
  441890:	mov    rdi,r15
  441893:	call   405350 <xmlStrEqual@plt+0x1410>
  441898:	xor    r15d,r15d
  44189b:	jmp    4417b6 <xmlStrEqual@plt+0x3d876>
  4418a0:	mov    rax,0x469e3c
  4418a7:	mov    edx,DWORD PTR [rax]
  4418a9:	test   edx,edx
  4418ab:	jg     4418f2 <xmlStrEqual@plt+0x3d9b2>
  4418ad:	xor    r15d,r15d
  4418b0:	jmp    4417b6 <xmlStrEqual@plt+0x3d876>
  4418b5:	mov    rdi,r15
  4418b8:	call   405350 <xmlStrEqual@plt+0x1410>
  4418bd:	mov    rax,0x469e3c
  4418c4:	mov    eax,DWORD PTR [rax]
  4418c6:	test   eax,eax
  4418c8:	jle    4418ad <xmlStrEqual@plt+0x3d96d>
  4418ca:	lea    rsi,[rip+0x12d67]        # 454638 <xmlStrEqual@plt+0x506f8>
  4418d1:	mov    edi,0x5
  4418d6:	xor    eax,eax
  4418d8:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  4418dd:	xor    r15d,r15d
  4418e0:	jmp    4417b6 <xmlStrEqual@plt+0x3d876>
  4418e5:	mov    rdi,r12
  4418e8:	call   4037b0 <free@plt>
  4418ed:	jmp    4417b6 <xmlStrEqual@plt+0x3d876>
  4418f2:	lea    rsi,[rip+0x12d07]        # 454600 <xmlStrEqual@plt+0x506c0>
  4418f9:	mov    edi,0x5
  4418fe:	xor    eax,eax
  441900:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  441905:	xor    r15d,r15d
  441908:	jmp    4417b6 <xmlStrEqual@plt+0x3d876>
  44190d:	nop    DWORD PTR [rax]
  441910:	endbr64 
  441914:	push   r15
  441916:	push   r14
  441918:	push   r13
  44191a:	push   r12
  44191c:	push   rbp
  44191d:	mov    rbp,rdx
  441920:	push   rbx
  441921:	sub    rsp,0x888
  441928:	mov    QWORD PTR [rsp+0x40],rdi
  44192d:	mov    QWORD PTR [rsp+0x30],rsi
  441932:	mov    rax,QWORD PTR fs:0x28
  44193b:	mov    QWORD PTR [rsp+0x878],rax
  441943:	xor    eax,eax
  441945:	mov    rax,0x469e3c
  44194c:	mov    r9d,DWORD PTR [rax]
  44194f:	test   r9d,r9d
  441952:	jle    441967 <xmlStrEqual@plt+0x3da27>
  441954:	lea    rsi,[rip+0x12d1d]        # 454678 <xmlStrEqual@plt+0x50738>
  44195b:	mov    edi,0x5
  441960:	xor    eax,eax
  441962:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  441967:	mov    rdi,0x424bf0
  44196e:	call   43a0a0 <xmlStrEqual@plt+0x36160>
  441973:	mov    rdi,0x405350
  44197a:	mov    r15,rax
  44197d:	mov    QWORD PTR [rsp+0x8],rax
  441982:	call   42dca0 <xmlStrEqual@plt+0x29d60>
  441987:	mov    QWORD PTR [rsp],rax
  44198b:	call   42dc90 <xmlStrEqual@plt+0x29d50>
  441990:	mov    QWORD PTR [rsp+0x28],rax
  441995:	call   42dc90 <xmlStrEqual@plt+0x29d50>
  44199a:	mov    rbx,0x475850
  4419a1:	mov    QWORD PTR [rsp+0x10],rax
  4419a6:	mov    rdi,QWORD PTR [rbx]
  4419a9:	call   410cf0 <xmlStrEqual@plt+0xcdb0>
  4419ae:	mov    r13,rax
  4419b1:	mov    rax,QWORD PTR [rsp+0x30]
  4419b6:	mov    r8d,0x2160
  4419bc:	mov    esi,DWORD PTR [rax+0x4]
  4419bf:	lea    rcx,[rip+0x1378a]        # 455150 <xmlStrEqual@plt+0x51210>
  4419c6:	xor    edx,edx
  4419c8:	mov    rdi,rbp
  4419cb:	call   4037e0 <xmlReadMemory@plt>
  4419d0:	mov    rdi,rax
  4419d3:	mov    r12,rax
  4419d6:	call   403d90 <xmlDocGetRootElement@plt>
  4419db:	mov    rdi,rax
  4419de:	call   403ac0 <xmlFirstElementChild@plt>
  4419e3:	mov    rdi,rax
  4419e6:	call   403ac0 <xmlFirstElementChild@plt>
  4419eb:	mov    r14,rax
  4419ee:	test   rax,rax
  4419f1:	je     441a40 <xmlStrEqual@plt+0x3db00>
  4419f3:	nop    DWORD PTR [rax+rax*1+0x0]
  4419f8:	mov    rsi,r15
  4419fb:	mov    rdi,r14
  4419fe:	call   4414e0 <xmlStrEqual@plt+0x3d5a0>
  441a03:	test   rax,rax
  441a06:	je     441da9 <xmlStrEqual@plt+0x3de69>
  441a0c:	mov    rsi,QWORD PTR [rsp]
  441a10:	mov    rdi,rax
  441a13:	call   42dcf0 <xmlStrEqual@plt+0x29db0>
  441a18:	mov    rbp,QWORD PTR [r14+0x10]
  441a1c:	jmp    441a30 <xmlStrEqual@plt+0x3daf0>
  441a1e:	xchg   ax,ax
  441a20:	mov    rdi,QWORD PTR [rax+0x10]
  441a24:	mov    rsi,rbp
  441a27:	call   4037c0 <strcmp@plt>
  441a2c:	test   eax,eax
  441a2e:	je     4419f8 <xmlStrEqual@plt+0x3dab8>
  441a30:	mov    rdi,r14
  441a33:	call   4039a0 <xmlNextElementSibling@plt>
  441a38:	mov    r14,rax
  441a3b:	test   rax,rax
  441a3e:	jne    441a20 <xmlStrEqual@plt+0x3dae0>
  441a40:	mov    rdi,r12
  441a43:	call   403ee0 <xmlFreeDoc@plt>
  441a48:	mov    rax,QWORD PTR [rsp]
  441a4c:	mov    DWORD PTR [rsp+0x20],0x0
  441a54:	mov    r12,QWORD PTR [rax+0x8]
  441a58:	mov    DWORD PTR [rsp+0x18],0x0
  441a60:	cmp    rax,r12
  441a63:	jne    441ae5 <xmlStrEqual@plt+0x3dba5>
  441a69:	jmp    441b7e <xmlStrEqual@plt+0x3dc3e>
  441a6e:	xchg   ax,ax
  441a70:	mov    BYTE PTR [rbp+0x35],0x1
  441a74:	mov    rdi,rbp
  441a77:	call   434af0 <xmlStrEqual@plt+0x30bb0>
  441a7c:	mov    r14,rax
  441a7f:	test   rax,rax
  441a82:	je     441fae <xmlStrEqual@plt+0x3e06e>
  441a88:	mov    rdi,QWORD PTR [r13+0x40]
  441a8c:	mov    rax,QWORD PTR [r13+0x38]
  441a90:	xor    edx,edx
  441a92:	mov    rsi,r14
  441a95:	call   QWORD PTR [rax+0x10]
  441a98:	cmp    eax,0x1
  441a9b:	jne    441fd2 <xmlStrEqual@plt+0x3e092>
  441aa1:	mov    rdi,QWORD PTR [r13+0x70]
  441aa5:	mov    rsi,rbp
  441aa8:	call   408fe0 <xmlStrEqual@plt+0x50a0>
  441aad:	test   rax,rax
  441ab0:	je     441ac9 <xmlStrEqual@plt+0x3db89>
  441ab2:	mov    rdi,rax
  441ab5:	call   434a40 <xmlStrEqual@plt+0x30b00>
  441aba:	mov    rdi,rax
  441abd:	mov    rsi,rbp
  441ac0:	call   42b150 <xmlStrEqual@plt+0x27210>
  441ac5:	test   eax,eax
  441ac7:	jne    441b43 <xmlStrEqual@plt+0x3dc03>
  441ac9:	mov    rsi,QWORD PTR [rsp+0x10]
  441ace:	mov    rdi,r14
  441ad1:	call   42dcf0 <xmlStrEqual@plt+0x29db0>
  441ad6:	mov    r12,QWORD PTR [r12+0x8]
  441adb:	cmp    QWORD PTR [rsp],r12
  441adf:	je     441b7e <xmlStrEqual@plt+0x3dc3e>
  441ae5:	mov    r15,QWORD PTR [r12+0x10]
  441aea:	mov    rsi,QWORD PTR [rsp+0x8]
  441aef:	mov    ecx,0x1
  441af4:	mov    rdx,r15
  441af7:	mov    rdi,r13
  441afa:	call   406c80 <xmlStrEqual@plt+0x2d40>
  441aff:	mov    rbp,rax
  441b02:	test   rax,rax
  441b05:	je     441f8a <xmlStrEqual@plt+0x3e04a>
  441b0b:	mov    rdi,QWORD PTR [rbx]
  441b0e:	call   408940 <xmlStrEqual@plt+0x4a00>
  441b13:	cmp    eax,0x3
  441b16:	jne    441a70 <xmlStrEqual@plt+0x3db30>
  441b1c:	mov    rdi,rbp
  441b1f:	call   425670 <xmlStrEqual@plt+0x21730>
  441b24:	mov    rdi,rax
  441b27:	call   425890 <xmlStrEqual@plt+0x21950>
  441b2c:	movzx  eax,ax
  441b2f:	cmp    eax,0x2
  441b32:	je     441b55 <xmlStrEqual@plt+0x3dc15>
  441b34:	cmp    eax,0xa
  441b37:	jne    441a70 <xmlStrEqual@plt+0x3db30>
  441b3d:	inc    DWORD PTR [rsp+0x20]
  441b41:	jmp    441b59 <xmlStrEqual@plt+0x3dc19>
  441b43:	mov    rsi,QWORD PTR [rsp+0x28]
  441b48:	mov    rdi,r14
  441b4b:	call   42dcf0 <xmlStrEqual@plt+0x29db0>
  441b50:	jmp    441ac9 <xmlStrEqual@plt+0x3db89>
  441b55:	inc    DWORD PTR [rsp+0x18]
  441b59:	cmp    DWORD PTR [rsp+0x18],0x1
  441b5e:	jg     441b6b <xmlStrEqual@plt+0x3dc2b>
  441b60:	cmp    DWORD PTR [rsp+0x20],0x1
  441b65:	jle    441a70 <xmlStrEqual@plt+0x3db30>
  441b6b:	lea    rsi,[rip+0x12b56]        # 4546c8 <xmlStrEqual@plt+0x50788>
  441b72:	mov    edi,0x3
  441b77:	xor    eax,eax
  441b79:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  441b7e:	call   42dc90 <xmlStrEqual@plt+0x29d50>
  441b83:	mov    r15,rax
  441b86:	mov    QWORD PTR [rsp+0x38],rax
  441b8b:	mov    rax,QWORD PTR [r13+0x70]
  441b8f:	mov    rsi,r15
  441b92:	mov    rax,QWORD PTR [rax]
  441b95:	mov    rdi,QWORD PTR [rax]
  441b98:	call   42dcf0 <xmlStrEqual@plt+0x29db0>
  441b9d:	mov    rax,QWORD PTR [r13+0x70]
  441ba1:	mov    rsi,r15
  441ba4:	mov    rax,QWORD PTR [rax]
  441ba7:	mov    rdi,QWORD PTR [rax+0x8]
  441bab:	call   42dcf0 <xmlStrEqual@plt+0x29db0>
  441bb0:	mov    rsi,QWORD PTR [r13+0x70]
  441bb4:	mov    rax,QWORD PTR [rsi]
  441bb7:	mov    rdx,QWORD PTR [rax+0x10]
  441bbb:	mov    rdi,QWORD PTR [rdx]
  441bbe:	mov    r8d,DWORD PTR [rdi]
  441bc1:	test   r8d,r8d
  441bc4:	je     441c21 <xmlStrEqual@plt+0x3dce1>
  441bc6:	xor    ebp,ebp
  441bc8:	jmp    441bda <xmlStrEqual@plt+0x3dc9a>
  441bca:	mov    rax,QWORD PTR [rsi]
  441bcd:	inc    ebp
  441bcf:	mov    rdx,QWORD PTR [rax+0x10]
  441bd3:	mov    rdi,QWORD PTR [rdx]
  441bd6:	cmp    DWORD PTR [rdi],ebp
  441bd8:	je     441c21 <xmlStrEqual@plt+0x3dce1>
  441bda:	mov    ecx,ebp
  441bdc:	mov    r8,QWORD PTR [rdi+0x10]
  441be0:	lea    eax,[rbp+rbp*1+0x0]
  441be4:	and    eax,0x1e
  441be7:	shr    ecx,0x4
  441bea:	mov    edx,eax
  441bec:	mov    eax,DWORD PTR [r8+rcx*4]
  441bf0:	shrx   eax,eax,edx
  441bf5:	test   al,0x3
  441bf7:	jne    441bca <xmlStrEqual@plt+0x3dc8a>
  441bf9:	mov    rdx,QWORD PTR [rdi+0x20]
  441bfd:	mov    eax,ebp
  441bff:	mov    rdi,QWORD PTR [rdx+rax*8]
  441c03:	mov    rsi,QWORD PTR [rsp+0x38]
  441c08:	inc    ebp
  441c0a:	call   42dcf0 <xmlStrEqual@plt+0x29db0>
  441c0f:	mov    rsi,QWORD PTR [r13+0x70]
  441c13:	mov    rax,QWORD PTR [rsi]
  441c16:	mov    rdx,QWORD PTR [rax+0x10]
  441c1a:	mov    rdi,QWORD PTR [rdx]
  441c1d:	cmp    DWORD PTR [rdi],ebp
  441c1f:	jne    441bda <xmlStrEqual@plt+0x3dc9a>
  441c21:	mov    rdx,QWORD PTR [rax+0x18]
  441c25:	mov    rdi,QWORD PTR [rdx]
  441c28:	mov    ecx,DWORD PTR [rdi]
  441c2a:	test   ecx,ecx
  441c2c:	je     441c89 <xmlStrEqual@plt+0x3dd49>
  441c2e:	xor    ebp,ebp
  441c30:	jmp    441c42 <xmlStrEqual@plt+0x3dd02>
  441c32:	mov    rax,QWORD PTR [rsi]
  441c35:	inc    ebp
  441c37:	mov    rdx,QWORD PTR [rax+0x18]
  441c3b:	mov    rdi,QWORD PTR [rdx]
  441c3e:	cmp    DWORD PTR [rdi],ebp
  441c40:	je     441c89 <xmlStrEqual@plt+0x3dd49>
  441c42:	mov    ecx,ebp
  441c44:	mov    r8,QWORD PTR [rdi+0x10]
  441c48:	lea    eax,[rbp+rbp*1+0x0]
  441c4c:	and    eax,0x1e
  441c4f:	shr    ecx,0x4
  441c52:	mov    edx,eax
  441c54:	mov    eax,DWORD PTR [r8+rcx*4]
  441c58:	shrx   eax,eax,edx
  441c5d:	test   al,0x3
  441c5f:	jne    441c32 <xmlStrEqual@plt+0x3dcf2>
  441c61:	mov    rdx,QWORD PTR [rdi+0x20]
  441c65:	mov    eax,ebp
  441c67:	mov    rdi,QWORD PTR [rdx+rax*8]
  441c6b:	mov    rsi,QWORD PTR [rsp+0x38]
  441c70:	inc    ebp
  441c72:	call   42dcf0 <xmlStrEqual@plt+0x29db0>
  441c77:	mov    rsi,QWORD PTR [r13+0x70]
  441c7b:	mov    rax,QWORD PTR [rsi]
  441c7e:	mov    rdx,QWORD PTR [rax+0x18]
  441c82:	mov    rdi,QWORD PTR [rdx]
  441c85:	cmp    DWORD PTR [rdi],ebp
  441c87:	jne    441c42 <xmlStrEqual@plt+0x3dd02>
  441c89:	mov    r15,QWORD PTR [rsp+0x38]
  441c8e:	mov    rdi,QWORD PTR [rax+0x20]
  441c92:	mov    rsi,r15
  441c95:	call   42dcf0 <xmlStrEqual@plt+0x29db0>
  441c9a:	mov    rax,QWORD PTR [r13+0x70]
  441c9e:	mov    rsi,r15
  441ca1:	mov    rax,QWORD PTR [rax]
  441ca4:	mov    rdi,QWORD PTR [rax+0x20]
  441ca8:	call   42dcf0 <xmlStrEqual@plt+0x29db0>
  441cad:	mov    rcx,QWORD PTR [r15+0x8]
  441cb1:	lea    rdx,[rsp+0x60]
  441cb6:	mov    QWORD PTR [rsp+0x20],rdx
  441cbb:	mov    QWORD PTR [rsp+0x18],rcx
  441cc0:	lea    rdx,[rsp+0x470]
  441cc8:	cmp    r15,rcx
  441ccb:	je     441e9e <xmlStrEqual@plt+0x3df5e>
  441cd1:	mov    QWORD PTR [rsp+0x48],r13
  441cd6:	mov    r12,rdx
  441cd9:	mov    rax,QWORD PTR [rsp+0x18]
  441cde:	mov    rax,QWORD PTR [rax+0x10]
  441ce2:	mov    r13,QWORD PTR [rax]
  441ce5:	test   r13,r13
  441ce8:	je     441e80 <xmlStrEqual@plt+0x3df40>
  441cee:	mov    rbp,QWORD PTR [rsp+0x20]
  441cf3:	jmp    441d19 <xmlStrEqual@plt+0x3ddd9>
  441cf5:	nop    DWORD PTR [rax]
  441cf8:	mov    rax,QWORD PTR [r13+0x10]
  441cfc:	mov    rdx,QWORD PTR [r13+0x18]
  441d00:	test   rax,rax
  441d03:	je     441e60 <xmlStrEqual@plt+0x3df20>
  441d09:	test   rdx,rdx
  441d0c:	je     441d16 <xmlStrEqual@plt+0x3ddd6>
  441d0e:	mov    QWORD PTR [rbp+0x0],rdx
  441d12:	add    rbp,0x8
  441d16:	mov    r13,rax
  441d19:	cmp    QWORD PTR [r13+0x8],0x0
  441d1e:	je     441cf8 <xmlStrEqual@plt+0x3ddb8>
  441d20:	mov    rax,QWORD PTR [r13+0x28]
  441d24:	mov    r14,QWORD PTR [rax]
  441d27:	test   r14,r14
  441d2a:	je     441cf8 <xmlStrEqual@plt+0x3ddb8>
  441d2c:	mov    r15,r12
  441d2f:	nop
  441d30:	cmp    QWORD PTR [r14+0x8],0x0
  441d35:	je     441d50 <xmlStrEqual@plt+0x3de10>
  441d37:	mov    rdi,QWORD PTR [r14+0x28]
  441d3b:	test   rdi,rdi
  441d3e:	je     441d50 <xmlStrEqual@plt+0x3de10>
  441d40:	call   434a40 <xmlStrEqual@plt+0x30b00>
  441d45:	mov    rdi,QWORD PTR [rbx]
  441d48:	mov    rsi,rax
  441d4b:	call   408860 <xmlStrEqual@plt+0x4920>
  441d50:	mov    rax,QWORD PTR [r14+0x10]
  441d54:	mov    r14,QWORD PTR [r14+0x18]
  441d58:	test   rax,rax
  441d5b:	je     441d88 <xmlStrEqual@plt+0x3de48>
  441d5d:	test   r14,r14
  441d60:	je     441e50 <xmlStrEqual@plt+0x3df10>
  441d66:	mov    QWORD PTR [r15],r14
  441d69:	mov    r14,rax
  441d6c:	add    r15,0x8
  441d70:	cmp    QWORD PTR [r14+0x8],0x0
  441d75:	jne    441d37 <xmlStrEqual@plt+0x3ddf7>
  441d77:	mov    rax,QWORD PTR [r14+0x10]
  441d7b:	mov    r14,QWORD PTR [r14+0x18]
  441d7f:	test   rax,rax
  441d82:	jne    441d5d <xmlStrEqual@plt+0x3de1d>
  441d84:	nop    DWORD PTR [rax+0x0]
  441d88:	test   r14,r14
  441d8b:	jne    441d30 <xmlStrEqual@plt+0x3ddf0>
  441d8d:	cmp    r15,r12
  441d90:	je     441cf8 <xmlStrEqual@plt+0x3ddb8>
  441d96:	mov    r14,QWORD PTR [r15-0x8]
  441d9a:	test   r14,r14
  441d9d:	je     441cf8 <xmlStrEqual@plt+0x3ddb8>
  441da3:	sub    r15,0x8
  441da7:	jmp    441d30 <xmlStrEqual@plt+0x3ddf0>
  441da9:	mov    rdi,QWORD PTR [rsp]
  441dad:	call   42e2b0 <xmlStrEqual@plt+0x2a370>
  441db2:	mov    rdi,QWORD PTR [rsp+0x28]
  441db7:	call   42e2b0 <xmlStrEqual@plt+0x2a370>
  441dbc:	mov    rdi,QWORD PTR [rsp+0x10]
  441dc1:	call   42e2b0 <xmlStrEqual@plt+0x2a370>
  441dc6:	mov    rdi,QWORD PTR [rsp+0x8]
  441dcb:	call   43add0 <xmlStrEqual@plt+0x36e90>
  441dd0:	test   r12,r12
  441dd3:	je     441ddd <xmlStrEqual@plt+0x3de9d>
  441dd5:	mov    rdi,r12
  441dd8:	call   403ee0 <xmlFreeDoc@plt>
  441ddd:	mov    rax,QWORD PTR [rsp+0x30]
  441de2:	mov    r8d,0x1
  441de8:	movzx  ecx,BYTE PTR [rax+0x2]
  441dec:	movzx  edx,BYTE PTR [rax+0x1]
  441df0:	movzx  esi,BYTE PTR [rax]
  441df3:	lea    rdi,[rsp+0x58]
  441df8:	call   43fcd0 <xmlStrEqual@plt+0x3bd90>
  441dfd:	mov    rsi,QWORD PTR [rsp+0x58]
  441e02:	mov    rdi,QWORD PTR [rsp+0x40]
  441e07:	xor    ecx,ecx
  441e09:	mov    edx,eax
  441e0b:	call   43fe50 <xmlStrEqual@plt+0x3bf10>
  441e10:	xor    eax,eax
  441e12:	lea    rsi,[rip+0x12a67]        # 454880 <xmlStrEqual@plt+0x50940>
  441e19:	mov    edi,0x3
  441e1e:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  441e23:	xor    eax,eax
  441e25:	mov    rcx,QWORD PTR [rsp+0x878]
  441e2d:	xor    rcx,QWORD PTR fs:0x28
  441e36:	jne    44214e <xmlStrEqual@plt+0x3e20e>
  441e3c:	add    rsp,0x888
  441e43:	pop    rbx
  441e44:	pop    rbp
  441e45:	pop    r12
  441e47:	pop    r13
  441e49:	pop    r14
  441e4b:	pop    r15
  441e4d:	ret    
  441e4e:	xchg   ax,ax
  441e50:	mov    r14,rax
  441e53:	jmp    441d30 <xmlStrEqual@plt+0x3ddf0>
  441e58:	nop    DWORD PTR [rax+rax*1+0x0]
  441e60:	mov    rax,rdx
  441e63:	test   rdx,rdx
  441e66:	jne    441d16 <xmlStrEqual@plt+0x3ddd6>
  441e6c:	cmp    rbp,QWORD PTR [rsp+0x20]
  441e71:	je     441e80 <xmlStrEqual@plt+0x3df40>
  441e73:	mov    r13,QWORD PTR [rbp-0x8]
  441e77:	test   r13,r13
  441e7a:	jne    441f81 <xmlStrEqual@plt+0x3e041>
  441e80:	mov    rax,QWORD PTR [rsp+0x18]
  441e85:	mov    rax,QWORD PTR [rax+0x8]
  441e89:	mov    QWORD PTR [rsp+0x18],rax
  441e8e:	cmp    QWORD PTR [rsp+0x38],rax
  441e93:	jne    441cd9 <xmlStrEqual@plt+0x3dd99>
  441e99:	mov    r13,QWORD PTR [rsp+0x48]
  441e9e:	mov    rdi,QWORD PTR [rsp+0x38]
  441ea3:	lea    r14,[rip+0x1291e]        # 4547c8 <xmlStrEqual@plt+0x50888>
  441eaa:	call   42e2b0 <xmlStrEqual@plt+0x2a370>
  441eaf:	mov    rdi,QWORD PTR [r13+0x70]
  441eb3:	call   408db0 <xmlStrEqual@plt+0x4e70>
  441eb8:	xor    eax,eax
  441eba:	call   408d60 <xmlStrEqual@plt+0x4e20>
  441ebf:	mov    QWORD PTR [r13+0x70],rax
  441ec3:	mov    rax,QWORD PTR [rsp+0x10]
  441ec8:	mov    r15,QWORD PTR [rsp+0x10]
  441ecd:	mov    rbp,QWORD PTR [rax+0x8]
  441ed1:	cmp    rax,rbp
  441ed4:	jne    441f31 <xmlStrEqual@plt+0x3dff1>
  441ed6:	jmp    442028 <xmlStrEqual@plt+0x3e0e8>
  441edb:	nop    DWORD PTR [rax+rax*1+0x0]
  441ee0:	mov    eax,DWORD PTR [rax]
  441ee2:	test   eax,eax
  441ee4:	jle    441f08 <xmlStrEqual@plt+0x3dfc8>
  441ee6:	mov    rdi,r12
  441ee9:	call   434ad0 <xmlStrEqual@plt+0x30b90>
  441eee:	mov    rdi,rax
  441ef1:	call   424d40 <xmlStrEqual@plt+0x20e00>
  441ef6:	mov    rdx,rax
  441ef9:	mov    rsi,r14
  441efc:	mov    edi,0x5
  441f01:	xor    eax,eax
  441f03:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  441f08:	mov    rdi,r12
  441f0b:	call   434a40 <xmlStrEqual@plt+0x30b00>
  441f10:	mov    rdi,QWORD PTR [rbx]
  441f13:	mov    rsi,rax
  441f16:	call   408800 <xmlStrEqual@plt+0x48c0>
  441f1b:	cmp    eax,0x1
  441f1e:	jne    441ffd <xmlStrEqual@plt+0x3e0bd>
  441f24:	mov    rbp,QWORD PTR [rbp+0x8]
  441f28:	cmp    r15,rbp
  441f2b:	je     442028 <xmlStrEqual@plt+0x3e0e8>
  441f31:	mov    r12,QWORD PTR [rbp+0x10]
  441f35:	mov    rsi,r13
  441f38:	mov    rdi,r12
  441f3b:	call   407780 <xmlStrEqual@plt+0x3840>
  441f40:	cmp    eax,0x1
  441f43:	mov    rax,0x469e3c
  441f4a:	je     441ee0 <xmlStrEqual@plt+0x3dfa0>
  441f4c:	cmp    DWORD PTR [rax],0x1
  441f4f:	jg     4420e1 <xmlStrEqual@plt+0x3e1a1>
  441f55:	mov    rdi,QWORD PTR [rsp]
  441f59:	call   42e2b0 <xmlStrEqual@plt+0x2a370>
  441f5e:	mov    rdi,QWORD PTR [rsp+0x28]
  441f63:	call   42e2b0 <xmlStrEqual@plt+0x2a370>
  441f68:	mov    rdi,QWORD PTR [rsp+0x10]
  441f6d:	call   42e2b0 <xmlStrEqual@plt+0x2a370>
  441f72:	mov    rdi,QWORD PTR [rsp+0x8]
  441f77:	call   43add0 <xmlStrEqual@plt+0x36e90>
  441f7c:	jmp    441ddd <xmlStrEqual@plt+0x3de9d>
  441f81:	sub    rbp,0x8
  441f85:	jmp    441d19 <xmlStrEqual@plt+0x3ddd9>
  441f8a:	mov    rax,0x469e3c
  441f91:	cmp    DWORD PTR [rax],0x1
  441f94:	jle    441f55 <xmlStrEqual@plt+0x3e015>
  441f96:	mov    rdx,QWORD PTR [r15]
  441f99:	lea    rsi,[rip+0x12700]        # 4546a0 <xmlStrEqual@plt+0x50760>
  441fa0:	mov    edi,0x6
  441fa5:	xor    eax,eax
  441fa7:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  441fac:	jmp    441f55 <xmlStrEqual@plt+0x3e015>
  441fae:	mov    rax,0x469e3c
  441fb5:	cmp    DWORD PTR [rax],0x1
  441fb8:	jle    441f55 <xmlStrEqual@plt+0x3e015>
  441fba:	mov    rdx,QWORD PTR [r15]
  441fbd:	lea    rsi,[rip+0x12754]        # 454718 <xmlStrEqual@plt+0x507d8>
  441fc4:	mov    edi,0x6
  441fc9:	xor    eax,eax
  441fcb:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  441fd0:	jmp    441f55 <xmlStrEqual@plt+0x3e015>
  441fd2:	mov    rax,0x469e3c
  441fd9:	cmp    DWORD PTR [rax],0x1
  441fdc:	jle    441f55 <xmlStrEqual@plt+0x3e015>
  441fe2:	mov    rdx,QWORD PTR [r15]
  441fe5:	lea    rsi,[rip+0x1275c]        # 454748 <xmlStrEqual@plt+0x50808>
  441fec:	mov    edi,0x6
  441ff1:	xor    eax,eax
  441ff3:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  441ff8:	jmp    441f55 <xmlStrEqual@plt+0x3e015>
  441ffd:	mov    rdi,r12
  442000:	call   434ad0 <xmlStrEqual@plt+0x30b90>
  442005:	mov    rdi,rax
  442008:	call   424d40 <xmlStrEqual@plt+0x20e00>
  44200d:	mov    rdx,rax
  442010:	lea    rsi,[rip+0x127e1]        # 4547f8 <xmlStrEqual@plt+0x508b8>
  442017:	mov    edi,0x2
  44201c:	xor    eax,eax
  44201e:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  442023:	jmp    441f55 <xmlStrEqual@plt+0x3e015>
  442028:	mov    rax,QWORD PTR [rbx]
  44202b:	mov    rdi,QWORD PTR [rax+0x10]
  44202f:	call   408430 <xmlStrEqual@plt+0x44f0>
  442034:	mov    rax,0x469e3c
  44203b:	mov    edx,DWORD PTR [rax]
  44203d:	test   edx,edx
  44203f:	jg     44210c <xmlStrEqual@plt+0x3e1cc>
  442045:	mov    rdi,QWORD PTR [r13+0x70]
  442049:	mov    esi,0x5
  44204e:	call   4096e0 <xmlStrEqual@plt+0x57a0>
  442053:	mov    rdi,r13
  442056:	call   410d30 <xmlStrEqual@plt+0xcdf0>
  44205b:	mov    rax,QWORD PTR [rsp+0x28]
  442060:	mov    rbx,QWORD PTR [rax+0x8]
  442064:	cmp    rax,rbx
  442067:	je     442080 <xmlStrEqual@plt+0x3e140>
  442069:	mov    rsi,QWORD PTR [rbx+0x10]
  44206d:	mov    rdi,r13
  442070:	call   411120 <xmlStrEqual@plt+0xd1e0>
  442075:	mov    rbx,QWORD PTR [rbx+0x8]
  442079:	cmp    QWORD PTR [rsp+0x28],rbx
  44207e:	jne    442069 <xmlStrEqual@plt+0x3e129>
  442080:	mov    rax,QWORD PTR [rsp+0x30]
  442085:	xor    r8d,r8d
  442088:	movzx  ecx,BYTE PTR [rax+0x2]
  44208c:	movzx  edx,BYTE PTR [rax+0x1]
  442090:	movzx  esi,BYTE PTR [rax]
  442093:	lea    rdi,[rsp+0x58]
  442098:	call   43fcd0 <xmlStrEqual@plt+0x3bd90>
  44209d:	mov    rsi,QWORD PTR [rsp+0x58]
  4420a2:	mov    rdi,QWORD PTR [rsp+0x40]
  4420a7:	xor    ecx,ecx
  4420a9:	mov    edx,eax
  4420ab:	call   43fe50 <xmlStrEqual@plt+0x3bf10>
  4420b0:	mov    rdi,QWORD PTR [rsp]
  4420b4:	call   42e2b0 <xmlStrEqual@plt+0x2a370>
  4420b9:	mov    rdi,QWORD PTR [rsp+0x28]
  4420be:	call   42e2b0 <xmlStrEqual@plt+0x2a370>
  4420c3:	mov    rdi,QWORD PTR [rsp+0x10]
  4420c8:	call   42e2b0 <xmlStrEqual@plt+0x2a370>
  4420cd:	mov    rdi,QWORD PTR [rsp+0x8]
  4420d2:	call   43add0 <xmlStrEqual@plt+0x36e90>
  4420d7:	mov    eax,0x1
  4420dc:	jmp    441e25 <xmlStrEqual@plt+0x3dee5>
  4420e1:	mov    rdi,r12
  4420e4:	call   434ad0 <xmlStrEqual@plt+0x30b90>
  4420e9:	mov    rdi,rax
  4420ec:	call   424d40 <xmlStrEqual@plt+0x20e00>
  4420f1:	mov    rdx,rax
  4420f4:	lea    rsi,[rip+0x12695]        # 454790 <xmlStrEqual@plt+0x50850>
  4420fb:	mov    edi,0x6
  442100:	xor    eax,eax
  442102:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  442107:	jmp    441f55 <xmlStrEqual@plt+0x3e015>
  44210c:	xor    eax,eax
  44210e:	lea    rsi,[rip+0x1271b]        # 454830 <xmlStrEqual@plt+0x508f0>
  442115:	mov    edi,0x5
  44211a:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  44211f:	mov    rax,0x469e3c
  442126:	cmp    DWORD PTR [rax],0x1
  442129:	jle    442045 <xmlStrEqual@plt+0x3e105>
  44212f:	lea    rdx,[rip+0x13140]        # 455276 <xmlStrEqual@plt+0x51336>
  442136:	lea    rsi,[rip+0x1271b]        # 454858 <xmlStrEqual@plt+0x50918>
  44213d:	mov    edi,0x6
  442142:	xor    eax,eax
  442144:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  442149:	jmp    442045 <xmlStrEqual@plt+0x3e105>
  44214e:	call   403c00 <__stack_chk_fail@plt>
  442153:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  44215e:	xchg   ax,ax
  442160:	endbr64 
  442164:	push   r15
  442166:	push   r14
  442168:	push   r13
  44216a:	push   r12
  44216c:	mov    r12,rdx
  44216f:	push   rbp
  442170:	push   rbx
  442171:	sub    rsp,0x18
  442175:	mov    BYTE PTR [rsp+0xf],sil
  44217a:	lea    rsi,[rip+0x13108]        # 455289 <xmlStrEqual@plt+0x51349>
  442181:	call   4406a0 <xmlStrEqual@plt+0x3c760>
  442186:	mov    r15,rax
  442189:	test   rax,rax
  44218c:	je     4423fc <xmlStrEqual@plt+0x3e4bc>
  442192:	lea    rsi,[rip+0x131f4]        # 45538d <xmlStrEqual@plt+0x5144d>
  442199:	mov    rdi,r15
  44219c:	call   4406a0 <xmlStrEqual@plt+0x3c760>
  4421a1:	mov    rbp,rax
  4421a4:	test   rax,rax
  4421a7:	je     44247e <xmlStrEqual@plt+0x3e53e>
  4421ad:	lea    rsi,[rip+0x130e0]        # 455294 <xmlStrEqual@plt+0x51354>
  4421b4:	mov    rdi,r15
  4421b7:	call   4406a0 <xmlStrEqual@plt+0x3c760>
  4421bc:	mov    rbx,rax
  4421bf:	test   rax,rax
  4421c2:	je     4424c6 <xmlStrEqual@plt+0x3e586>
  4421c8:	lea    rsi,[rip+0x130d3]        # 4552a2 <xmlStrEqual@plt+0x51362>
  4421cf:	mov    rdi,r15
  4421d2:	call   4406a0 <xmlStrEqual@plt+0x3c760>
  4421d7:	mov    r13,rax
  4421da:	test   rax,rax
  4421dd:	je     4424a2 <xmlStrEqual@plt+0x3e562>
  4421e3:	mov    rdi,rbp
  4421e6:	call   403bd0 <xmlNodeGetContent@plt>
  4421eb:	mov    rdi,r13
  4421ee:	mov    QWORD PTR [rsp],rax
  4421f2:	call   403bd0 <xmlNodeGetContent@plt>
  4421f7:	mov    rdi,rbx
  4421fa:	mov    r14,rax
  4421fd:	call   403bd0 <xmlNodeGetContent@plt>
  442202:	mov    rsi,rax
  442205:	mov    ecx,0x5
  44220a:	lea    rdi,[rip+0x1309a]        # 4552ab <xmlStrEqual@plt+0x5136b>
  442211:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  442213:	seta   dl
  442216:	sbb    dl,0x0
  442219:	test   dl,dl
  44221b:	je     442410 <xmlStrEqual@plt+0x3e4d0>
  442221:	mov    ecx,0xe
  442226:	mov    rsi,rax
  442229:	lea    rdi,[rip+0x13080]        # 4552b0 <xmlStrEqual@plt+0x51370>
  442230:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  442232:	seta   dl
  442235:	sbb    dl,0x0
  442238:	test   dl,dl
  44223a:	je     442298 <xmlStrEqual@plt+0x3e358>
  44223c:	lea    rdi,[rip+0x1307b]        # 4552be <xmlStrEqual@plt+0x5137e>
  442243:	mov    ecx,0x11
  442248:	mov    rsi,rax
  44224b:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  44224d:	mov    rdi,rax
  442250:	seta   dl
  442253:	sbb    dl,0x0
  442256:	test   dl,dl
  442258:	jne    44229b <xmlStrEqual@plt+0x3e35b>
  44225a:	call   4037b0 <free@plt>
  44225f:	lea    rsi,[rip+0x58d2]        # 447b38 <xmlStrEqual@plt+0x43bf8>
  442266:	mov    edi,0x2
  44226b:	xor    eax,eax
  44226d:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  442272:	mov    rdi,QWORD PTR [rsp]
  442276:	call   4037b0 <free@plt>
  44227b:	mov    rdi,r14
  44227e:	call   4037b0 <free@plt>
  442283:	add    rsp,0x18
  442287:	pop    rbx
  442288:	pop    rbp
  442289:	pop    r12
  44228b:	pop    r13
  44228d:	pop    r14
  44228f:	xor    eax,eax
  442291:	pop    r15
  442293:	ret    
  442294:	nop    DWORD PTR [rax+0x0]
  442298:	mov    rdi,rax
  44229b:	call   4037b0 <free@plt>
  4422a0:	xor    eax,eax
  4422a2:	call   424be0 <xmlStrEqual@plt+0x20ca0>
  4422a7:	mov    rbp,rax
  4422aa:	test   rax,rax
  4422ad:	je     4424ea <xmlStrEqual@plt+0x3e5aa>
  4422b3:	mov    rdi,QWORD PTR [rsp]
  4422b7:	mov    rsi,rax
  4422ba:	call   425bd0 <xmlStrEqual@plt+0x21c90>
  4422bf:	cmp    eax,0x1
  4422c2:	jne    4424fb <xmlStrEqual@plt+0x3e5bb>
  4422c8:	mov    rdi,QWORD PTR [rsp]
  4422cc:	call   4037b0 <free@plt>
  4422d1:	mov    rbx,QWORD PTR [r12+0x8]
  4422d6:	cmp    r12,rbx
  4422d9:	jne    4422ed <xmlStrEqual@plt+0x3e3ad>
  4422db:	jmp    442370 <xmlStrEqual@plt+0x3e430>
  4422e0:	mov    rbx,QWORD PTR [rbx+0x8]
  4422e4:	cmp    r12,rbx
  4422e7:	je     442370 <xmlStrEqual@plt+0x3e430>
  4422ed:	mov    rax,QWORD PTR [rbx+0x10]
  4422f1:	mov    rsi,rbp
  4422f4:	mov    rdi,QWORD PTR [rax]
  4422f7:	call   425310 <xmlStrEqual@plt+0x213d0>
  4422fc:	test   eax,eax
  4422fe:	jne    4422e0 <xmlStrEqual@plt+0x3e3a0>
  442300:	mov    rdi,rbp
  442303:	call   424bf0 <xmlStrEqual@plt+0x20cb0>
  442308:	mov    rdi,r14
  44230b:	call   4037b0 <free@plt>
  442310:	mov    rax,0x469e3c
  442317:	cmp    DWORD PTR [rax],0x1
  44231a:	jle    44233a <xmlStrEqual@plt+0x3e3fa>
  44231c:	mov    rdi,rbp
  44231f:	call   424d40 <xmlStrEqual@plt+0x20e00>
  442324:	mov    rdx,rax
  442327:	lea    rsi,[rip+0x126f2]        # 454a20 <xmlStrEqual@plt+0x50ae0>
  44232e:	mov    edi,0x6
  442333:	xor    eax,eax
  442335:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  44233a:	mov    r13,QWORD PTR [r15+0x10]
  44233e:	jmp    442350 <xmlStrEqual@plt+0x3e410>
  442340:	mov    rdi,QWORD PTR [rax+0x10]
  442344:	mov    rsi,r13
  442347:	call   4037c0 <strcmp@plt>
  44234c:	test   eax,eax
  44234e:	je     4422e0 <xmlStrEqual@plt+0x3e3a0>
  442350:	mov    rdi,r15
  442353:	call   4039a0 <xmlNextElementSibling@plt>
  442358:	mov    r15,rax
  44235b:	test   rax,rax
  44235e:	jne    442340 <xmlStrEqual@plt+0x3e400>
  442360:	mov    rbx,QWORD PTR [rbx+0x8]
  442364:	cmp    r12,rbx
  442367:	jne    4422ed <xmlStrEqual@plt+0x3e3ad>
  442369:	nop    DWORD PTR [rax+0x0]
  442370:	mov    rbx,0x4757c0
  442377:	mov    eax,DWORD PTR [rbx]
  442379:	test   eax,eax
  44237b:	je     442390 <xmlStrEqual@plt+0x3e450>
  44237d:	mov    rdi,rbp
  442380:	call   425890 <xmlStrEqual@plt+0x21950>
  442385:	movzx  eax,ax
  442388:	cmp    eax,DWORD PTR [rbx]
  44238a:	jne    442420 <xmlStrEqual@plt+0x3e4e0>
  442390:	movzx  ecx,BYTE PTR [rsp+0xf]
  442395:	mov    rdx,r14
  442398:	mov    esi,0x1
  44239d:	mov    rdi,rbp
  4423a0:	call   412c90 <xmlStrEqual@plt+0xed50>
  4423a5:	mov    rdi,r14
  4423a8:	mov    rbx,rax
  4423ab:	call   4037b0 <free@plt>
  4423b0:	mov    rdi,rbp
  4423b3:	call   424bf0 <xmlStrEqual@plt+0x20cb0>
  4423b8:	test   rbx,rbx
  4423bb:	je     442283 <xmlStrEqual@plt+0x3e343>
  4423c1:	mov    rdi,rbx
  4423c4:	mov    rsi,r12
  4423c7:	call   42dcf0 <xmlStrEqual@plt+0x29db0>
  4423cc:	mov    rbx,QWORD PTR [r15+0x10]
  4423d0:	jmp    4423ec <xmlStrEqual@plt+0x3e4ac>
  4423d2:	nop    WORD PTR [rax+rax*1+0x0]
  4423d8:	mov    rdi,QWORD PTR [rax+0x10]
  4423dc:	mov    rsi,rbx
  4423df:	call   4037c0 <strcmp@plt>
  4423e4:	test   eax,eax
  4423e6:	je     442192 <xmlStrEqual@plt+0x3e252>
  4423ec:	mov    rdi,r15
  4423ef:	call   4039a0 <xmlNextElementSibling@plt>
  4423f4:	mov    r15,rax
  4423f7:	test   rax,rax
  4423fa:	jne    4423d8 <xmlStrEqual@plt+0x3e498>
  4423fc:	mov    eax,0x1
  442401:	add    rsp,0x18
  442405:	pop    rbx
  442406:	pop    rbp
  442407:	pop    r12
  442409:	pop    r13
  44240b:	pop    r14
  44240d:	pop    r15
  44240f:	ret    
  442410:	mov    rdi,rax
  442413:	call   4037b0 <free@plt>
  442418:	jmp    44225f <xmlStrEqual@plt+0x3e31f>
  44241d:	nop    DWORD PTR [rax]
  442420:	mov    rdx,QWORD PTR [rsp]
  442424:	lea    rsi,[rip+0x577d]        # 447ba8 <xmlStrEqual@plt+0x43c68>
  44242b:	xor    eax,eax
  44242d:	mov    edi,0x3
  442432:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  442437:	mov    rdi,rbp
  44243a:	call   424bf0 <xmlStrEqual@plt+0x20cb0>
  44243f:	mov    rdi,r14
  442442:	call   4037b0 <free@plt>
  442447:	mov    rbx,QWORD PTR [r15+0x10]
  44244b:	jmp    442464 <xmlStrEqual@plt+0x3e524>
  44244d:	nop    DWORD PTR [rax]
  442450:	mov    rdi,QWORD PTR [rax+0x10]
  442454:	mov    rsi,rbx
  442457:	call   4037c0 <strcmp@plt>
  44245c:	test   eax,eax
  44245e:	je     442192 <xmlStrEqual@plt+0x3e252>
  442464:	mov    rdi,r15
  442467:	call   4039a0 <xmlNextElementSibling@plt>
  44246c:	mov    r15,rax
  44246f:	test   rax,rax
  442472:	jne    442450 <xmlStrEqual@plt+0x3e510>
  442474:	mov    eax,0x1
  442479:	jmp    442401 <xmlStrEqual@plt+0x3e4c1>
  44247e:	xor    eax,eax
  442480:	lea    rsi,[rip+0x12439]        # 4548c0 <xmlStrEqual@plt+0x50980>
  442487:	mov    edi,0x3
  44248c:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  442491:	add    rsp,0x18
  442495:	pop    rbx
  442496:	pop    rbp
  442497:	pop    r12
  442499:	pop    r13
  44249b:	pop    r14
  44249d:	xor    eax,eax
  44249f:	pop    r15
  4424a1:	ret    
  4424a2:	xor    eax,eax
  4424a4:	lea    rsi,[rip+0x1249d]        # 454948 <xmlStrEqual@plt+0x50a08>
  4424ab:	mov    edi,0x3
  4424b0:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  4424b5:	add    rsp,0x18
  4424b9:	pop    rbx
  4424ba:	pop    rbp
  4424bb:	pop    r12
  4424bd:	pop    r13
  4424bf:	pop    r14
  4424c1:	xor    eax,eax
  4424c3:	pop    r15
  4424c5:	ret    
  4424c6:	xor    eax,eax
  4424c8:	lea    rsi,[rip+0x12431]        # 454900 <xmlStrEqual@plt+0x509c0>
  4424cf:	mov    edi,0x3
  4424d4:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  4424d9:	add    rsp,0x18
  4424dd:	pop    rbx
  4424de:	pop    rbp
  4424df:	pop    r12
  4424e1:	pop    r13
  4424e3:	pop    r14
  4424e5:	xor    eax,eax
  4424e7:	pop    r15
  4424e9:	ret    
  4424ea:	lea    rsi,[rip+0x12497]        # 454988 <xmlStrEqual@plt+0x50a48>
  4424f1:	mov    edi,0x3
  4424f6:	jmp    44226b <xmlStrEqual@plt+0x3e32b>
  4424fb:	mov    rbx,QWORD PTR [rsp]
  4424ff:	xor    eax,eax
  442501:	mov    rdx,rbx
  442504:	lea    rsi,[rip+0x124d5]        # 4549e0 <xmlStrEqual@plt+0x50aa0>
  44250b:	mov    edi,0x3
  442510:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  442515:	mov    rdi,rbx
  442518:	call   4037b0 <free@plt>
  44251d:	mov    rdi,r14
  442520:	call   4037b0 <free@plt>
  442525:	add    rsp,0x18
  442529:	pop    rbx
  44252a:	pop    rbp
  44252b:	pop    r12
  44252d:	pop    r13
  44252f:	pop    r14
  442531:	xor    eax,eax
  442533:	pop    r15
  442535:	ret    
  442536:	nop    WORD PTR cs:[rax+rax*1+0x0]
  442540:	endbr64 
  442544:	push   r15
  442546:	mov    r15,rdi
  442549:	push   r14
  44254b:	push   r13
  44254d:	push   r12
  44254f:	push   rbp
  442550:	mov    rbp,rdx
  442553:	push   rbx
  442554:	mov    rbx,rsi
  442557:	sub    rsp,0x28
  44255b:	mov    rax,QWORD PTR fs:0x28
  442564:	mov    QWORD PTR [rsp+0x18],rax
  442569:	xor    eax,eax
  44256b:	mov    rax,0x469e3c
  442572:	mov    ecx,DWORD PTR [rax]
  442574:	test   ecx,ecx
  442576:	jle    44258b <xmlStrEqual@plt+0x3e64b>
  442578:	lea    rsi,[rip+0x124f1]        # 454a70 <xmlStrEqual@plt+0x50b30>
  44257f:	mov    edi,0x5
  442584:	xor    eax,eax
  442586:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  44258b:	mov    rax,0x475850
  442592:	mov    rdi,QWORD PTR [rax]
  442595:	call   410cf0 <xmlStrEqual@plt+0xcdb0>
  44259a:	mov    esi,DWORD PTR [rbx+0x4]
  44259d:	mov    r8d,0x2160
  4425a3:	lea    rcx,[rip+0x12ba6]        # 455150 <xmlStrEqual@plt+0x51210>
  4425aa:	xor    edx,edx
  4425ac:	mov    rdi,rbp
  4425af:	mov    r14,rax
  4425b2:	call   4037e0 <xmlReadMemory@plt>
  4425b7:	mov    rdi,rax
  4425ba:	mov    rbp,rax
  4425bd:	call   403d90 <xmlDocGetRootElement@plt>
  4425c2:	mov    rdi,rax
  4425c5:	call   403ac0 <xmlFirstElementChild@plt>
  4425ca:	mov    rdi,rax
  4425cd:	lea    rsi,[rip+0x12cfb]        # 4552cf <xmlStrEqual@plt+0x5138f>
  4425d4:	mov    r13,rax
  4425d7:	call   4406a0 <xmlStrEqual@plt+0x3c760>
  4425dc:	xor    esi,esi
  4425de:	test   rax,rax
  4425e1:	je     442609 <xmlStrEqual@plt+0x3e6c9>
  4425e3:	mov    rdi,rax
  4425e6:	call   403bd0 <xmlNodeGetContent@plt>
  4425eb:	mov    rsi,rax
  4425ee:	mov    ecx,0x5
  4425f3:	lea    rdi,[rip+0x6050]        # 44864a <xmlStrEqual@plt+0x4470a>
  4425fa:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  4425fc:	seta   al
  4425ff:	sbb    al,0x0
  442601:	xor    esi,esi
  442603:	test   al,al
  442605:	sete   sil
  442609:	mov    rdi,0x40dcb0
  442610:	mov    DWORD PTR [rsp+0xc],esi
  442614:	call   42dca0 <xmlStrEqual@plt+0x29d60>
  442619:	mov    esi,DWORD PTR [rsp+0xc]
  44261d:	mov    rdi,r13
  442620:	mov    rdx,rax
  442623:	mov    r12,rax
  442626:	call   442160 <xmlStrEqual@plt+0x3e220>
  44262b:	mov    r13d,eax
  44262e:	cmp    eax,0x1
  442631:	je     4426f8 <xmlStrEqual@plt+0x3e7b8>
  442637:	mov    rax,0x469e3c
  44263e:	mov    edx,DWORD PTR [rax]
  442640:	test   edx,edx
  442642:	jg     4426c8 <xmlStrEqual@plt+0x3e788>
  442648:	mov    rdi,r12
  44264b:	call   42e2b0 <xmlStrEqual@plt+0x2a370>
  442650:	test   rbp,rbp
  442653:	je     44265d <xmlStrEqual@plt+0x3e71d>
  442655:	mov    rdi,rbp
  442658:	call   403ee0 <xmlFreeDoc@plt>
  44265d:	movzx  ecx,BYTE PTR [rbx+0x2]
  442661:	movzx  edx,BYTE PTR [rbx+0x1]
  442665:	movzx  esi,BYTE PTR [rbx]
  442668:	mov    r8d,0x1
  44266e:	lea    rdi,[rsp+0x10]
  442673:	call   43fcd0 <xmlStrEqual@plt+0x3bd90>
  442678:	mov    rsi,QWORD PTR [rsp+0x10]
  44267d:	xor    ecx,ecx
  44267f:	mov    edx,eax
  442681:	mov    rdi,r15
  442684:	call   43fe50 <xmlStrEqual@plt+0x3bf10>
  442689:	lea    rsi,[rip+0x12470]        # 454b00 <xmlStrEqual@plt+0x50bc0>
  442690:	mov    edi,0x3
  442695:	xor    eax,eax
  442697:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  44269c:	xor    r13d,r13d
  44269f:	mov    rbx,QWORD PTR [rsp+0x18]
  4426a4:	xor    rbx,QWORD PTR fs:0x28
  4426ad:	mov    eax,r13d
  4426b0:	jne    442770 <xmlStrEqual@plt+0x3e830>
  4426b6:	add    rsp,0x28
  4426ba:	pop    rbx
  4426bb:	pop    rbp
  4426bc:	pop    r12
  4426be:	pop    r13
  4426c0:	pop    r14
  4426c2:	pop    r15
  4426c4:	ret    
  4426c5:	nop    DWORD PTR [rax]
  4426c8:	mov    edi,0x5
  4426cd:	xor    eax,eax
  4426cf:	lea    rsi,[rip+0x123c2]        # 454a98 <xmlStrEqual@plt+0x50b58>
  4426d6:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  4426db:	mov    rdi,r12
  4426de:	call   42e2b0 <xmlStrEqual@plt+0x2a370>
  4426e3:	test   rbp,rbp
  4426e6:	jne    442655 <xmlStrEqual@plt+0x3e715>
  4426ec:	jmp    44265d <xmlStrEqual@plt+0x3e71d>
  4426f1:	nop    DWORD PTR [rax+0x0]
  4426f8:	mov    rdi,rbp
  4426fb:	call   403ee0 <xmlFreeDoc@plt>
  442700:	mov    rdi,QWORD PTR [r14+0x78]
  442704:	call   42e2b0 <xmlStrEqual@plt+0x2a370>
  442709:	mov    QWORD PTR [r14+0x78],r12
  44270d:	mov    rdi,r14
  442710:	call   410d30 <xmlStrEqual@plt+0xcdf0>
  442715:	mov    rax,0x469e3c
  44271c:	mov    eax,DWORD PTR [rax]
  44271e:	test   eax,eax
  442720:	jle    442735 <xmlStrEqual@plt+0x3e7f5>
  442722:	lea    rsi,[rip+0x1239f]        # 454ac8 <xmlStrEqual@plt+0x50b88>
  442729:	mov    edi,0x5
  44272e:	xor    eax,eax
  442730:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  442735:	mov    rdi,r14
  442738:	mov    esi,0x5
  44273d:	call   4119e0 <xmlStrEqual@plt+0xdaa0>
  442742:	movzx  ecx,BYTE PTR [rbx+0x2]
  442746:	movzx  edx,BYTE PTR [rbx+0x1]
  44274a:	movzx  esi,BYTE PTR [rbx]
  44274d:	lea    rdi,[rsp+0x10]
  442752:	xor    r8d,r8d
  442755:	call   43fcd0 <xmlStrEqual@plt+0x3bd90>
  44275a:	mov    rsi,QWORD PTR [rsp+0x10]
  44275f:	xor    ecx,ecx
  442761:	mov    edx,eax
  442763:	mov    rdi,r15
  442766:	call   43fe50 <xmlStrEqual@plt+0x3bf10>
  44276b:	jmp    44269f <xmlStrEqual@plt+0x3e75f>
  442770:	call   403c00 <__stack_chk_fail@plt>
  442775:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  442780:	endbr64 
  442784:	push   rbp
  442785:	mov    rbp,rdi
  442788:	push   rbx
  442789:	sub    rsp,0x8
  44278d:	call   403e60 <zmq_ctx_new@plt>
  442792:	mov    rbx,0x469e3c
  442799:	mov    QWORD PTR [rbp+0x0],rax
  44279d:	cmp    DWORD PTR [rbx],0x2
  4427a0:	jle    4427c8 <xmlStrEqual@plt+0x3e888>
  4427a2:	call   4037f0 <__errno_location@plt>
  4427a7:	mov    edi,DWORD PTR [rax]
  4427a9:	call   403890 <zmq_strerror@plt>
  4427ae:	mov    rdx,rax
  4427b1:	lea    rsi,[rip+0x12380]        # 454b38 <xmlStrEqual@plt+0x50bf8>
  4427b8:	xor    eax,eax
  4427ba:	mov    edi,0x7
  4427bf:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  4427c4:	mov    rax,QWORD PTR [rbp+0x0]
  4427c8:	mov    esi,0x4
  4427cd:	mov    rdi,rax
  4427d0:	call   403eb0 <zmq_socket@plt>
  4427d5:	cmp    DWORD PTR [rbx],0x2
  4427d8:	mov    QWORD PTR [rbp+0x8],rax
  4427dc:	jle    442804 <xmlStrEqual@plt+0x3e8c4>
  4427de:	call   4037f0 <__errno_location@plt>
  4427e3:	mov    edi,DWORD PTR [rax]
  4427e5:	call   403890 <zmq_strerror@plt>
  4427ea:	mov    rdx,rax
  4427ed:	lea    rsi,[rip+0x12ae7]        # 4552db <xmlStrEqual@plt+0x5139b>
  4427f4:	xor    eax,eax
  4427f6:	mov    edi,0x7
  4427fb:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  442800:	mov    rax,QWORD PTR [rbp+0x8]
  442804:	lea    rsi,[rip+0x1166b]        # 453e76 <xmlStrEqual@plt+0x4ff36>
  44280b:	mov    rdi,rax
  44280e:	call   403a90 <zmq_bind@plt>
  442813:	test   eax,eax
  442815:	jne    442850 <xmlStrEqual@plt+0x3e910>
  442817:	cmp    DWORD PTR [rbx],0x1
  44281a:	mov    ebp,0x1
  44281f:	jg     442830 <xmlStrEqual@plt+0x3e8f0>
  442821:	add    rsp,0x8
  442825:	pop    rbx
  442826:	mov    eax,ebp
  442828:	pop    rbp
  442829:	ret    
  44282a:	nop    WORD PTR [rax+rax*1+0x0]
  442830:	xor    eax,eax
  442832:	lea    rsi,[rip+0x12387]        # 454bc0 <xmlStrEqual@plt+0x50c80>
  442839:	mov    edi,0x6
  44283e:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  442843:	add    rsp,0x8
  442847:	pop    rbx
  442848:	mov    eax,ebp
  44284a:	pop    rbp
  44284b:	ret    
  44284c:	nop    DWORD PTR [rax+0x0]
  442850:	cmp    DWORD PTR [rbx],0x1
  442853:	jle    442872 <xmlStrEqual@plt+0x3e932>
  442855:	mov    edi,eax
  442857:	call   403890 <zmq_strerror@plt>
  44285c:	mov    rdx,rax
  44285f:	lea    rsi,[rip+0x122f2]        # 454b58 <xmlStrEqual@plt+0x50c18>
  442866:	mov    edi,0x6
  44286b:	xor    eax,eax
  44286d:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  442872:	xor    eax,eax
  442874:	lea    rsi,[rip+0x1230d]        # 454b88 <xmlStrEqual@plt+0x50c48>
  44287b:	mov    edi,0x2
  442880:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  442885:	add    rsp,0x8
  442889:	xor    ebp,ebp
  44288b:	pop    rbx
  44288c:	mov    eax,ebp
  44288e:	pop    rbp
  44288f:	ret    
  442890:	endbr64 
  442894:	push   r12
  442896:	push   rbp
  442897:	push   rbx
  442898:	movzx  eax,BYTE PTR [rdi]
  44289b:	movzx  ebx,BYTE PTR [rdi+0x1]
  44289f:	movzx  ebp,BYTE PTR [rdi+0x2]
  4428a3:	test   al,al
  4428a5:	je     4428c8 <xmlStrEqual@plt+0x3e988>
  4428a7:	cmp    al,0x3
  4428a9:	je     442920 <xmlStrEqual@plt+0x3e9e0>
  4428ab:	xor    eax,eax
  4428ad:	lea    rsi,[rip+0x127d4]        # 455088 <xmlStrEqual@plt+0x51148>
  4428b4:	mov    edi,0x3
  4428b9:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  4428be:	xor    eax,eax
  4428c0:	pop    rbx
  4428c1:	pop    rbp
  4428c2:	pop    r12
  4428c4:	ret    
  4428c5:	nop    DWORD PTR [rax]
  4428c8:	mov    r12,0x475850
  4428cf:	mov    rdi,QWORD PTR [r12]
  4428d3:	call   408940 <xmlStrEqual@plt+0x4a00>
  4428d8:	test   eax,eax
  4428da:	jne    442a40 <xmlStrEqual@plt+0x3eb00>
  4428e0:	cmp    bl,0x1
  4428e3:	je     442a60 <xmlStrEqual@plt+0x3eb20>
  4428e9:	test   bl,bl
  4428eb:	je     4429d0 <xmlStrEqual@plt+0x3ea90>
  4428f1:	cmp    bl,0x2
  4428f4:	je     4429a0 <xmlStrEqual@plt+0x3ea60>
  4428fa:	cmp    bl,0x4
  4428fd:	je     442950 <xmlStrEqual@plt+0x3ea10>
  4428ff:	xor    eax,eax
  442901:	lea    rsi,[rip+0x12638]        # 454f40 <xmlStrEqual@plt+0x51000>
  442908:	mov    edi,0x3
  44290d:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  442912:	xor    eax,eax
  442914:	jmp    4428c0 <xmlStrEqual@plt+0x3e980>
  442916:	nop    WORD PTR cs:[rax+rax*1+0x0]
  442920:	mov    rax,0x475850
  442927:	mov    rdi,QWORD PTR [rax]
  44292a:	call   408940 <xmlStrEqual@plt+0x4a00>
  44292f:	cmp    eax,0x2
  442932:	je     442a08 <xmlStrEqual@plt+0x3eac8>
  442938:	mov    rax,0x469e3c
  44293f:	mov    eax,DWORD PTR [rax]
  442941:	test   eax,eax
  442943:	jg     442980 <xmlStrEqual@plt+0x3ea40>
  442945:	xor    eax,eax
  442947:	pop    rbx
  442948:	pop    rbp
  442949:	pop    r12
  44294b:	ret    
  44294c:	nop    DWORD PTR [rax+0x0]
  442950:	test   bpl,bpl
  442953:	je     442b30 <xmlStrEqual@plt+0x3ebf0>
  442959:	cmp    bpl,0x3
  44295d:	jne    442ab0 <xmlStrEqual@plt+0x3eb70>
  442963:	mov    rax,0x469e3c
  44296a:	cmp    DWORD PTR [rax],0x1
  44296d:	jg     442c8b <xmlStrEqual@plt+0x3ed4b>
  442973:	mov    rax,0x440310
  44297a:	jmp    4428c0 <xmlStrEqual@plt+0x3e980>
  44297f:	nop
  442980:	xor    eax,eax
  442982:	lea    rsi,[rip+0x12267]        # 454bf0 <xmlStrEqual@plt+0x50cb0>
  442989:	mov    edi,0x5
  44298e:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  442993:	xor    eax,eax
  442995:	jmp    442947 <xmlStrEqual@plt+0x3ea07>
  442997:	nop    WORD PTR [rax+rax*1+0x0]
  4429a0:	test   bpl,bpl
  4429a3:	je     442b80 <xmlStrEqual@plt+0x3ec40>
  4429a9:	cmp    bpl,0x3
  4429ad:	jne    442ab0 <xmlStrEqual@plt+0x3eb70>
  4429b3:	mov    rax,0x469e3c
  4429ba:	cmp    DWORD PTR [rax],0x1
  4429bd:	jg     442c0f <xmlStrEqual@plt+0x3eccf>
  4429c3:	mov    rax,0x43fff0
  4429ca:	jmp    4428c0 <xmlStrEqual@plt+0x3e980>
  4429cf:	nop
  4429d0:	test   bpl,bpl
  4429d3:	je     442b50 <xmlStrEqual@plt+0x3ec10>
  4429d9:	cmp    bpl,0x3
  4429dd:	jne    442af0 <xmlStrEqual@plt+0x3ebb0>
  4429e3:	mov    rax,0x469e3c
  4429ea:	cmp    DWORD PTR [rax],0x1
  4429ed:	jle    442a2f <xmlStrEqual@plt+0x3eaef>
  4429ef:	lea    rsi,[rip+0x12272]        # 454c68 <xmlStrEqual@plt+0x50d28>
  4429f6:	mov    edi,0x6
  4429fb:	xor    eax,eax
  4429fd:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  442a02:	jmp    442a2f <xmlStrEqual@plt+0x3eaef>
  442a04:	nop    DWORD PTR [rax+0x0]
  442a08:	test   bl,bl
  442a0a:	jne    442bd0 <xmlStrEqual@plt+0x3ec90>
  442a10:	test   bpl,bpl
  442a13:	je     442ba0 <xmlStrEqual@plt+0x3ec60>
  442a19:	cmp    bpl,0x3
  442a1d:	jne    442a90 <xmlStrEqual@plt+0x3eb50>
  442a1f:	mov    rax,0x469e3c
  442a26:	cmp    DWORD PTR [rax],0x1
  442a29:	jg     442bf0 <xmlStrEqual@plt+0x3ecb0>
  442a2f:	mov    rax,0x4400d0
  442a36:	jmp    4428c0 <xmlStrEqual@plt+0x3e980>
  442a3b:	nop    DWORD PTR [rax+rax*1+0x0]
  442a40:	mov    rdi,QWORD PTR [r12]
  442a44:	call   408940 <xmlStrEqual@plt+0x4a00>
  442a49:	cmp    eax,0x3
  442a4c:	jne    442938 <xmlStrEqual@plt+0x3e9f8>
  442a52:	jmp    4428e0 <xmlStrEqual@plt+0x3e9a0>
  442a57:	nop    WORD PTR [rax+rax*1+0x0]
  442a60:	test   bpl,bpl
  442a63:	je     442b10 <xmlStrEqual@plt+0x3ebd0>
  442a69:	cmp    bpl,0x3
  442a6d:	jne    442ad0 <xmlStrEqual@plt+0x3eb90>
  442a6f:	mov    rax,0x469e3c
  442a76:	cmp    DWORD PTR [rax],0x1
  442a79:	jg     442c4d <xmlStrEqual@plt+0x3ed0d>
  442a7f:	mov    rax,0x4401f0
  442a86:	jmp    4428c0 <xmlStrEqual@plt+0x3e980>
  442a8b:	nop    DWORD PTR [rax+rax*1+0x0]
  442a90:	xor    eax,eax
  442a92:	lea    rsi,[rip+0x1256f]        # 455008 <xmlStrEqual@plt+0x510c8>
  442a99:	mov    edi,0x3
  442a9e:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  442aa3:	xor    eax,eax
  442aa5:	jmp    4428c0 <xmlStrEqual@plt+0x3e980>
  442aaa:	nop    WORD PTR [rax+rax*1+0x0]
  442ab0:	xor    eax,eax
  442ab2:	lea    rsi,[rip+0x123a7]        # 454e60 <xmlStrEqual@plt+0x50f20>
  442ab9:	mov    edi,0x3
  442abe:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  442ac3:	xor    eax,eax
  442ac5:	jmp    4428c0 <xmlStrEqual@plt+0x3e980>
  442aca:	nop    WORD PTR [rax+rax*1+0x0]
  442ad0:	xor    eax,eax
  442ad2:	lea    rsi,[rip+0x122af]        # 454d88 <xmlStrEqual@plt+0x50e48>
  442ad9:	mov    edi,0x3
  442ade:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  442ae3:	xor    eax,eax
  442ae5:	jmp    4428c0 <xmlStrEqual@plt+0x3e980>
  442aea:	nop    WORD PTR [rax+rax*1+0x0]
  442af0:	xor    eax,eax
  442af2:	lea    rsi,[rip+0x121b7]        # 454cb0 <xmlStrEqual@plt+0x50d70>
  442af9:	mov    edi,0x3
  442afe:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  442b03:	xor    eax,eax
  442b05:	jmp    4428c0 <xmlStrEqual@plt+0x3e980>
  442b0a:	nop    WORD PTR [rax+rax*1+0x0]
  442b10:	mov    rax,0x469e3c
  442b17:	cmp    DWORD PTR [rax],0x1
  442b1a:	jg     442caa <xmlStrEqual@plt+0x3ed6a>
  442b20:	mov    rax,0x442540
  442b27:	jmp    4428c0 <xmlStrEqual@plt+0x3e980>
  442b2c:	nop    DWORD PTR [rax+0x0]
  442b30:	mov    rax,0x469e3c
  442b37:	cmp    DWORD PTR [rax],0x1
  442b3a:	jg     442c6c <xmlStrEqual@plt+0x3ed2c>
  442b40:	mov    rax,0x441910
  442b47:	jmp    4428c0 <xmlStrEqual@plt+0x3e980>
  442b4c:	nop    DWORD PTR [rax+0x0]
  442b50:	mov    rax,0x469e3c
  442b57:	cmp    DWORD PTR [rax],0x1
  442b5a:	jle    442b70 <xmlStrEqual@plt+0x3ec30>
  442b5c:	lea    rsi,[rip+0x120bd]        # 454c20 <xmlStrEqual@plt+0x50ce0>
  442b63:	mov    edi,0x6
  442b68:	xor    eax,eax
  442b6a:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  442b6f:	nop
  442b70:	mov    rax,0x440b50
  442b77:	jmp    4428c0 <xmlStrEqual@plt+0x3e980>
  442b7c:	nop    DWORD PTR [rax+0x0]
  442b80:	mov    rax,0x469e3c
  442b87:	cmp    DWORD PTR [rax],0x1
  442b8a:	jg     442c2e <xmlStrEqual@plt+0x3ecee>
  442b90:	mov    rax,0x440710
  442b97:	jmp    4428c0 <xmlStrEqual@plt+0x3e980>
  442b9c:	nop    DWORD PTR [rax+0x0]
  442ba0:	mov    rax,0x469e3c
  442ba7:	cmp    DWORD PTR [rax],0x1
  442baa:	jle    442b70 <xmlStrEqual@plt+0x3ec30>
  442bac:	xor    eax,eax
  442bae:	lea    rsi,[rip+0x123c3]        # 454f78 <xmlStrEqual@plt+0x51038>
  442bb5:	mov    edi,0x6
  442bba:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  442bbf:	mov    rax,0x440b50
  442bc6:	jmp    4428c0 <xmlStrEqual@plt+0x3e980>
  442bcb:	nop    DWORD PTR [rax+rax*1+0x0]
  442bd0:	xor    eax,eax
  442bd2:	lea    rsi,[rip+0x12477]        # 455050 <xmlStrEqual@plt+0x51110>
  442bd9:	mov    edi,0x3
  442bde:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  442be3:	xor    eax,eax
  442be5:	jmp    4428c0 <xmlStrEqual@plt+0x3e980>
  442bea:	nop    WORD PTR [rax+rax*1+0x0]
  442bf0:	xor    eax,eax
  442bf2:	lea    rsi,[rip+0x123c7]        # 454fc0 <xmlStrEqual@plt+0x51080>
  442bf9:	mov    edi,0x6
  442bfe:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  442c03:	mov    rax,0x4400d0
  442c0a:	jmp    4428c0 <xmlStrEqual@plt+0x3e980>
  442c0f:	xor    eax,eax
  442c11:	lea    rsi,[rip+0x122e0]        # 454ef8 <xmlStrEqual@plt+0x50fb8>
  442c18:	mov    edi,0x6
  442c1d:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  442c22:	mov    rax,0x43fff0
  442c29:	jmp    4428c0 <xmlStrEqual@plt+0x3e980>
  442c2e:	xor    eax,eax
  442c30:	lea    rsi,[rip+0x12279]        # 454eb0 <xmlStrEqual@plt+0x50f70>
  442c37:	mov    edi,0x6
  442c3c:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  442c41:	mov    rax,0x440710
  442c48:	jmp    4428c0 <xmlStrEqual@plt+0x3e980>
  442c4d:	xor    eax,eax
  442c4f:	lea    rsi,[rip+0x120ea]        # 454d40 <xmlStrEqual@plt+0x50e00>
  442c56:	mov    edi,0x6
  442c5b:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  442c60:	mov    rax,0x4401f0
  442c67:	jmp    4428c0 <xmlStrEqual@plt+0x3e980>
  442c6c:	xor    eax,eax
  442c6e:	lea    rsi,[rip+0x1215b]        # 454dd0 <xmlStrEqual@plt+0x50e90>
  442c75:	mov    edi,0x6
  442c7a:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  442c7f:	mov    rax,0x441910
  442c86:	jmp    4428c0 <xmlStrEqual@plt+0x3e980>
  442c8b:	xor    eax,eax
  442c8d:	lea    rsi,[rip+0x12184]        # 454e18 <xmlStrEqual@plt+0x50ed8>
  442c94:	mov    edi,0x6
  442c99:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  442c9e:	mov    rax,0x440310
  442ca5:	jmp    4428c0 <xmlStrEqual@plt+0x3e980>
  442caa:	xor    eax,eax
  442cac:	lea    rsi,[rip+0x12045]        # 454cf8 <xmlStrEqual@plt+0x50db8>
  442cb3:	mov    edi,0x6
  442cb8:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  442cbd:	mov    rax,0x442540
  442cc4:	jmp    4428c0 <xmlStrEqual@plt+0x3e980>
  442cc9:	nop    DWORD PTR [rax+0x0]
  442cd0:	endbr64 
  442cd4:	push   rbp
  442cd5:	mov    rbp,rdi
  442cd8:	mov    edi,0x1000
  442cdd:	push   rbx
  442cde:	sub    rsp,0x18
  442ce2:	mov    rax,QWORD PTR fs:0x28
  442ceb:	mov    QWORD PTR [rsp+0x8],rax
  442cf0:	xor    eax,eax
  442cf2:	call   434fe0 <xmlStrEqual@plt+0x310a0>
  442cf7:	mov    rsi,rax
  442cfa:	mov    edx,0x1
  442cff:	mov    rdi,rbp
  442d02:	mov    rbx,rax
  442d05:	call   43fd50 <xmlStrEqual@plt+0x3be10>
  442d0a:	cmp    eax,0xfffffffe
  442d0d:	je     442d3f <xmlStrEqual@plt+0x3edff>
  442d0f:	cmp    eax,0xffffffff
  442d12:	je     442dd0 <xmlStrEqual@plt+0x3ee90>
  442d18:	sub    eax,0x8
  442d1b:	cmp    eax,DWORD PTR [rbx+0x4]
  442d1e:	ja     442d68 <xmlStrEqual@plt+0x3ee28>
  442d20:	jb     442db8 <xmlStrEqual@plt+0x3ee78>
  442d26:	mov    rdi,rbx
  442d29:	call   442890 <xmlStrEqual@plt+0x3e950>
  442d2e:	test   rax,rax
  442d31:	je     442d88 <xmlStrEqual@plt+0x3ee48>
  442d33:	lea    rdx,[rbx+0x8]
  442d37:	mov    rsi,rbx
  442d3a:	mov    rdi,rbp
  442d3d:	call   rax
  442d3f:	mov    rdi,rbx
  442d42:	call   4037b0 <free@plt>
  442d47:	mov    rax,QWORD PTR [rsp+0x8]
  442d4c:	xor    rax,QWORD PTR fs:0x28
  442d55:	jne    442de8 <xmlStrEqual@plt+0x3eea8>
  442d5b:	add    rsp,0x18
  442d5f:	pop    rbx
  442d60:	pop    rbp
  442d61:	ret    
  442d62:	nop    WORD PTR [rax+rax*1+0x0]
  442d68:	mov    edi,0x3
  442d6d:	xor    eax,eax
  442d6f:	lea    rsi,[rip+0x1237a]        # 4550f0 <xmlStrEqual@plt+0x511b0>
  442d76:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  442d7b:	mov    rdi,rbx
  442d7e:	call   442890 <xmlStrEqual@plt+0x3e950>
  442d83:	test   rax,rax
  442d86:	jne    442d33 <xmlStrEqual@plt+0x3edf3>
  442d88:	movzx  ecx,BYTE PTR [rbx+0x2]
  442d8c:	movzx  edx,BYTE PTR [rbx+0x1]
  442d90:	movzx  esi,BYTE PTR [rbx]
  442d93:	mov    rdi,rsp
  442d96:	mov    r8d,0x1
  442d9c:	call   43fcd0 <xmlStrEqual@plt+0x3bd90>
  442da1:	mov    rsi,QWORD PTR [rsp]
  442da5:	xor    ecx,ecx
  442da7:	mov    edx,eax
  442da9:	mov    rdi,rbp
  442dac:	call   43fe50 <xmlStrEqual@plt+0x3bf10>
  442db1:	jmp    442d3f <xmlStrEqual@plt+0x3edff>
  442db3:	nop    DWORD PTR [rax+rax*1+0x0]
  442db8:	lea    rsi,[rip+0x12361]        # 455120 <xmlStrEqual@plt+0x511e0>
  442dbf:	mov    edi,0x2
  442dc4:	xor    eax,eax
  442dc6:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  442dcb:	jmp    442d3f <xmlStrEqual@plt+0x3edff>
  442dd0:	lea    rsi,[rip+0x122d9]        # 4550b0 <xmlStrEqual@plt+0x51170>
  442dd7:	mov    edi,0x2
  442ddc:	xor    eax,eax
  442dde:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  442de3:	jmp    442d3f <xmlStrEqual@plt+0x3edff>
  442de8:	call   403c00 <__stack_chk_fail@plt>
  442ded:	nop    DWORD PTR [rax]
  442df0:	push   r15
  442df2:	push   r14
  442df4:	push   r13
  442df6:	push   r12
  442df8:	push   rbp
  442df9:	xor    ebp,ebp
  442dfb:	push   rbx
  442dfc:	sub    rsp,0x38
  442e00:	mov    QWORD PTR [rsp],rdi
  442e04:	mov    rdi,0x424bf0
  442e0b:	call   43a0a0 <xmlStrEqual@plt+0x36160>
  442e10:	mov    QWORD PTR [rsp+0x8],rax
  442e15:	nop    DWORD PTR [rax]
  442e18:	mov    rdi,QWORD PTR [rsp]
  442e1c:	lea    rsi,[rip+0x123a5]        # 4551c8 <xmlStrEqual@plt+0x51288>
  442e23:	call   403ef0 <cfg_size@plt>
  442e28:	cmp    eax,ebp
  442e2a:	jbe    442f80 <xmlStrEqual@plt+0x3f040>
  442e30:	mov    rdi,QWORD PTR [rsp]
  442e34:	mov    edx,ebp
  442e36:	lea    rsi,[rip+0x1238b]        # 4551c8 <xmlStrEqual@plt+0x51288>
  442e3d:	call   403980 <cfg_getnsec@plt>
  442e42:	mov    rdi,rax
  442e45:	lea    rsi,[rip+0x124a8]        # 4552f4 <xmlStrEqual@plt+0x513b4>
  442e4c:	mov    r13,rax
  442e4f:	call   403a70 <cfg_getstr@plt>
  442e54:	mov    QWORD PTR [rsp+0x18],rax
  442e59:	test   rax,rax
  442e5c:	je     442f60 <xmlStrEqual@plt+0x3f020>
  442e62:	lea    rsi,[rip+0x12494]        # 4552fd <xmlStrEqual@plt+0x513bd>
  442e69:	mov    rdi,r13
  442e6c:	call   403ef0 <cfg_size@plt>
  442e71:	test   eax,eax
  442e73:	jne    442e90 <xmlStrEqual@plt+0x3ef50>
  442e75:	lea    rsi,[rip+0x12954]        # 4557d0 <xmlStrEqual@plt+0x51890>
  442e7c:	mov    edi,0x3
  442e81:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  442e86:	inc    ebp
  442e88:	jmp    442e18 <xmlStrEqual@plt+0x3eed8>
  442e8a:	nop    WORD PTR [rax+rax*1+0x0]
  442e90:	xor    eax,eax
  442e92:	call   42a150 <xmlStrEqual@plt+0x26210>
  442e97:	mov    r14,rax
  442e9a:	xor    r12d,r12d
  442e9d:	lea    rsi,[rip+0x12459]        # 4552fd <xmlStrEqual@plt+0x513bd>
  442ea4:	mov    rdi,r13
  442ea7:	call   403ef0 <cfg_size@plt>
  442eac:	cmp    eax,r12d
  442eaf:	jbe    443320 <xmlStrEqual@plt+0x3f3e0>
  442eb5:	lea    rsi,[rip+0x12441]        # 4552fd <xmlStrEqual@plt+0x513bd>
  442ebc:	mov    rdi,r13
  442ebf:	mov    edx,r12d
  442ec2:	call   403980 <cfg_getnsec@plt>
  442ec7:	mov    rdi,rax
  442eca:	lea    rsi,[rip+0x124bc]        # 45538d <xmlStrEqual@plt+0x5144d>
  442ed1:	mov    rbx,rax
  442ed4:	call   403a70 <cfg_getstr@plt>
  442ed9:	test   rax,rax
  442edc:	je     443300 <xmlStrEqual@plt+0x3f3c0>
  442ee2:	mov    edi,0x10
  442ee7:	call   434fe0 <xmlStrEqual@plt+0x310a0>
  442eec:	mov    r15,rax
  442eef:	xor    eax,eax
  442ef1:	call   424be0 <xmlStrEqual@plt+0x20ca0>
  442ef6:	mov    QWORD PTR [r15+0x8],rax
  442efa:	lea    rsi,[rip+0x1248c]        # 45538d <xmlStrEqual@plt+0x5144d>
  442f01:	mov    rdi,rbx
  442f04:	mov    QWORD PTR [rsp+0x10],rax
  442f09:	call   403a70 <cfg_getstr@plt>
  442f0e:	mov    rcx,QWORD PTR [rsp+0x10]
  442f13:	mov    rdi,rax
  442f16:	mov    rsi,rcx
  442f19:	call   425bd0 <xmlStrEqual@plt+0x21c90>
  442f1e:	cmp    eax,0x1
  442f21:	je     443280 <xmlStrEqual@plt+0x3f340>
  442f27:	mov    rdi,r15
  442f2a:	call   426b00 <xmlStrEqual@plt+0x22bc0>
  442f2f:	lea    rsi,[rip+0x12457]        # 45538d <xmlStrEqual@plt+0x5144d>
  442f36:	mov    rdi,rbx
  442f39:	call   403a70 <cfg_getstr@plt>
  442f3e:	mov    rdx,rax
  442f41:	lea    rsi,[rip+0x12930]        # 455878 <xmlStrEqual@plt+0x51938>
  442f48:	mov    edi,0x3
  442f4d:	xor    eax,eax
  442f4f:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  442f54:	inc    r12d
  442f57:	jmp    442e9d <xmlStrEqual@plt+0x3ef5d>
  442f5c:	nop    DWORD PTR [rax+0x0]
  442f60:	lea    rsi,[rip+0x12819]        # 455780 <xmlStrEqual@plt+0x51840>
  442f67:	mov    edi,0x3
  442f6c:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  442f71:	inc    ebp
  442f73:	jmp    442e18 <xmlStrEqual@plt+0x3eed8>
  442f78:	nop    DWORD PTR [rax+rax*1+0x0]
  442f80:	xor    r15d,r15d
  442f83:	nop    DWORD PTR [rax+rax*1+0x0]
  442f88:	mov    rdi,QWORD PTR [rsp]
  442f8c:	lea    rsi,[rip+0x12373]        # 455306 <xmlStrEqual@plt+0x513c6>
  442f93:	call   403ef0 <cfg_size@plt>
  442f98:	cmp    r15d,eax
  442f9b:	jae    443128 <xmlStrEqual@plt+0x3f1e8>
  442fa1:	mov    rdi,QWORD PTR [rsp]
  442fa5:	mov    edx,r15d
  442fa8:	lea    rsi,[rip+0x12357]        # 455306 <xmlStrEqual@plt+0x513c6>
  442faf:	call   403980 <cfg_getnsec@plt>
  442fb4:	mov    rdi,rax
  442fb7:	lea    rsi,[rip+0x12359]        # 455317 <xmlStrEqual@plt+0x513d7>
  442fbe:	mov    r14,rax
  442fc1:	call   403a70 <cfg_getstr@plt>
  442fc6:	mov    edi,0x3
  442fcb:	mov    QWORD PTR [rsp+0x20],rax
  442fd0:	call   424b10 <xmlStrEqual@plt+0x20bd0>
  442fd5:	mov    rdi,rax
  442fd8:	mov    esi,0xd
  442fdd:	mov    rbx,rax
  442fe0:	call   425470 <xmlStrEqual@plt+0x21530>
  442fe5:	xor    eax,eax
  442fe7:	call   42a4e0 <xmlStrEqual@plt+0x265a0>
  442fec:	mov    QWORD PTR [rsp+0x10],rax
  442ff1:	mov    rax,0x469e3c
  442ff8:	xor    ebp,ebp
  442ffa:	mov    QWORD PTR [rsp+0x18],rax
  442fff:	jmp    4430b6 <xmlStrEqual@plt+0x3f176>
  443004:	nop    DWORD PTR [rax+0x0]
  443008:	mov    edx,ebp
  44300a:	lea    rsi,[rip+0x1230f]        # 455320 <xmlStrEqual@plt+0x513e0>
  443011:	mov    rdi,r14
  443014:	call   403980 <cfg_getnsec@plt>
  443019:	mov    r13,rax
  44301c:	xor    eax,eax
  44301e:	call   42a5c0 <xmlStrEqual@plt+0x26680>
  443023:	mov    r12,rax
  443026:	mov    rax,QWORD PTR [rax]
  443029:	lea    rsi,[rip+0x1235d]        # 45538d <xmlStrEqual@plt+0x5144d>
  443030:	mov    rdi,r13
  443033:	mov    QWORD PTR [rsp+0x28],rax
  443038:	call   403a70 <cfg_getstr@plt>
  44303d:	mov    rsi,QWORD PTR [rsp+0x28]
  443042:	mov    rdi,rax
  443045:	call   425bd0 <xmlStrEqual@plt+0x21c90>
  44304a:	cmp    eax,0x1
  44304d:	je     443090 <xmlStrEqual@plt+0x3f150>
  44304f:	mov    rdi,r12
  443052:	call   426b20 <xmlStrEqual@plt+0x22be0>
  443057:	mov    rax,QWORD PTR [rsp+0x18]
  44305c:	mov    ecx,DWORD PTR [rax]
  44305e:	test   ecx,ecx
  443060:	jle    443090 <xmlStrEqual@plt+0x3f150>
  443062:	lea    rsi,[rip+0x12324]        # 45538d <xmlStrEqual@plt+0x5144d>
  443069:	mov    rdi,r13
  44306c:	call   403a70 <cfg_getstr@plt>
  443071:	mov    rdx,rax
  443074:	lea    rsi,[rip+0x12865]        # 4558e0 <xmlStrEqual@plt+0x519a0>
  44307b:	mov    edi,0x5
  443080:	xor    eax,eax
  443082:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  443087:	nop    WORD PTR [rax+rax*1+0x0]
  443090:	lea    rsi,[rip+0x12292]        # 455329 <xmlStrEqual@plt+0x513e9>
  443097:	mov    rdi,r13
  44309a:	call   403940 <cfg_getint@plt>
  44309f:	mov    BYTE PTR [r12+0x8],al
  4430a4:	mov    rax,QWORD PTR [rsp+0x10]
  4430a9:	mov    rdi,r12
  4430ac:	mov    rsi,QWORD PTR [rax]
  4430af:	inc    ebp
  4430b1:	call   42de80 <xmlStrEqual@plt+0x29f40>
  4430b6:	lea    rsi,[rip+0x12263]        # 455320 <xmlStrEqual@plt+0x513e0>
  4430bd:	mov    rdi,r14
  4430c0:	call   403ef0 <cfg_size@plt>
  4430c5:	cmp    eax,ebp
  4430c7:	ja     443008 <xmlStrEqual@plt+0x3f0c8>
  4430cd:	mov    rsi,QWORD PTR [rsp+0x10]
  4430d2:	mov    rdi,rbx
  4430d5:	call   425440 <xmlStrEqual@plt+0x21500>
  4430da:	mov    rax,QWORD PTR [rsp+0x18]
  4430df:	mov    edx,DWORD PTR [rax]
  4430e1:	test   edx,edx
  4430e3:	jle    443103 <xmlStrEqual@plt+0x3f1c3>
  4430e5:	mov    rdi,rbx
  4430e8:	call   424d40 <xmlStrEqual@plt+0x20e00>
  4430ed:	mov    rdx,rax
  4430f0:	lea    rsi,[rip+0x12819]        # 455910 <xmlStrEqual@plt+0x519d0>
  4430f7:	mov    edi,0x5
  4430fc:	xor    eax,eax
  4430fe:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  443103:	mov    rdi,QWORD PTR [rsp+0x20]
  443108:	inc    r15d
  44310b:	call   403ed0 <strdup@plt>
  443110:	mov    rdi,QWORD PTR [rsp+0x8]
  443115:	mov    rdx,rbx
  443118:	mov    rsi,rax
  44311b:	call   43a0e0 <xmlStrEqual@plt+0x361a0>
  443120:	jmp    442f88 <xmlStrEqual@plt+0x3f048>
  443125:	nop    DWORD PTR [rax]
  443128:	xor    ebp,ebp
  44312a:	lea    r13,[rip+0x121fe]        # 45532f <xmlStrEqual@plt+0x513ef>
  443131:	jmp    44324e <xmlStrEqual@plt+0x3f30e>
  443136:	nop    WORD PTR cs:[rax+rax*1+0x0]
  443140:	mov    rdi,QWORD PTR [rsp]
  443144:	mov    edx,ebp
  443146:	mov    rsi,r13
  443149:	call   403980 <cfg_getnsec@plt>
  44314e:	mov    rdi,rax
  443151:	lea    rsi,[rip+0x121e6]        # 45533e <xmlStrEqual@plt+0x513fe>
  443158:	mov    rbx,rax
  44315b:	call   403a70 <cfg_getstr@plt>
  443160:	mov    edi,0x3
  443165:	mov    QWORD PTR [rsp+0x10],rax
  44316a:	call   424b10 <xmlStrEqual@plt+0x20bd0>
  44316f:	mov    rdi,rax
  443172:	mov    esi,0x9
  443177:	mov    r12,rax
  44317a:	call   425470 <xmlStrEqual@plt+0x21530>
  44317f:	xor    eax,eax
  443181:	call   429350 <xmlStrEqual@plt+0x25410>
  443186:	mov    r15,QWORD PTR [rax+0x8]
  44318a:	lea    rsi,[rip+0x121ba]        # 45534b <xmlStrEqual@plt+0x5140b>
  443191:	mov    rdi,rbx
  443194:	mov    r14,rax
  443197:	call   403a70 <cfg_getstr@plt>
  44319c:	mov    rdi,rax
  44319f:	mov    rsi,r15
  4431a2:	call   425bd0 <xmlStrEqual@plt+0x21c90>
  4431a7:	lea    rsi,[rip+0x121a4]        # 455352 <xmlStrEqual@plt+0x51412>
  4431ae:	mov    rdi,rbx
  4431b1:	call   403940 <cfg_getint@plt>
  4431b6:	mov    BYTE PTR [r14],al
  4431b9:	mov    r15,QWORD PTR [r14+0x10]
  4431bd:	lea    rsi,[rip+0x121a1]        # 455365 <xmlStrEqual@plt+0x51425>
  4431c4:	mov    rdi,rbx
  4431c7:	call   403a70 <cfg_getstr@plt>
  4431cc:	mov    rdi,rax
  4431cf:	mov    rsi,r15
  4431d2:	call   425bd0 <xmlStrEqual@plt+0x21c90>
  4431d7:	lea    rsi,[rip+0x1218d]        # 45536b <xmlStrEqual@plt+0x5142b>
  4431de:	mov    rdi,rbx
  4431e1:	call   403940 <cfg_getint@plt>
  4431e6:	mov    BYTE PTR [r14],al
  4431e9:	lea    rsi,[rip+0xc058]        # 44f248 <xmlStrEqual@plt+0x4b308>
  4431f0:	mov    rdi,rbx
  4431f3:	call   403940 <cfg_getint@plt>
  4431f8:	mov    DWORD PTR [r14+0x4],eax
  4431fc:	mov    rsi,r14
  4431ff:	mov    rdi,r12
  443202:	call   425440 <xmlStrEqual@plt+0x21500>
  443207:	mov    rax,0x469e3c
  44320e:	mov    eax,DWORD PTR [rax]
  443210:	test   eax,eax
  443212:	jle    443232 <xmlStrEqual@plt+0x3f2f2>
  443214:	mov    rdi,r12
  443217:	call   424d40 <xmlStrEqual@plt+0x20e00>
  44321c:	mov    rdx,rax
  44321f:	lea    rsi,[rip+0x1271a]        # 455940 <xmlStrEqual@plt+0x51a00>
  443226:	mov    edi,0x5
  44322b:	xor    eax,eax
  44322d:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  443232:	mov    rdi,QWORD PTR [rsp+0x10]
  443237:	inc    ebp
  443239:	call   403ed0 <strdup@plt>
  44323e:	mov    rdi,QWORD PTR [rsp+0x8]
  443243:	mov    rdx,r12
  443246:	mov    rsi,rax
  443249:	call   43a0e0 <xmlStrEqual@plt+0x361a0>
  44324e:	mov    rdi,QWORD PTR [rsp]
  443252:	mov    rsi,r13
  443255:	call   403ef0 <cfg_size@plt>
  44325a:	cmp    eax,ebp
  44325c:	ja     443140 <xmlStrEqual@plt+0x3f200>
  443262:	test   ebp,ebp
  443264:	jne    4433a0 <xmlStrEqual@plt+0x3f460>
  44326a:	mov    rax,QWORD PTR [rsp+0x8]
  44326f:	add    rsp,0x38
  443273:	pop    rbx
  443274:	pop    rbp
  443275:	pop    r12
  443277:	pop    r13
  443279:	pop    r14
  44327b:	pop    r15
  44327d:	ret    
  44327e:	xchg   ax,ax
  443280:	mov    rdi,rbx
  443283:	lea    rsi,[rip+0x11f61]        # 4551eb <xmlStrEqual@plt+0x512ab>
  44328a:	call   403b00 <cfg_getbool@plt>
  44328f:	test   eax,eax
  443291:	movzx  eax,BYTE PTR [r15]
  443295:	setne  cl
  443298:	and    eax,0xfffffffe
  44329b:	or     eax,ecx
  44329d:	mov    BYTE PTR [r15],al
  4432a0:	mov    rdi,rbx
  4432a3:	lea    rsi,[rip+0x11f4d]        # 4551f7 <xmlStrEqual@plt+0x512b7>
  4432aa:	call   403b00 <cfg_getbool@plt>
  4432af:	test   eax,eax
  4432b1:	setne  al
  4432b4:	lea    ecx,[rax+rax*1]
  4432b7:	movzx  eax,BYTE PTR [r15]
  4432bb:	mov    rdi,rbx
  4432be:	and    eax,0xfffffffd
  4432c1:	or     eax,ecx
  4432c3:	mov    BYTE PTR [r15],al
  4432c6:	lea    rsi,[rip+0x11f30]        # 4551fd <xmlStrEqual@plt+0x512bd>
  4432cd:	call   403b00 <cfg_getbool@plt>
  4432d2:	test   eax,eax
  4432d4:	setne  al
  4432d7:	lea    ecx,[rax*4+0x0]
  4432de:	movzx  eax,BYTE PTR [r15]
  4432e2:	mov    rsi,QWORD PTR [r14]
  4432e5:	and    eax,0xfffffffb
  4432e8:	or     eax,ecx
  4432ea:	mov    BYTE PTR [r15],al
  4432ed:	mov    rdi,r15
  4432f0:	call   42de80 <xmlStrEqual@plt+0x29f40>
  4432f5:	jmp    442f54 <xmlStrEqual@plt+0x3f014>
  4432fa:	nop    WORD PTR [rax+rax*1+0x0]
  443300:	lea    rsi,[rip+0x12521]        # 455828 <xmlStrEqual@plt+0x518e8>
  443307:	mov    edi,0x3
  44330c:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  443311:	mov    rdi,r14
  443314:	call   4271d0 <xmlStrEqual@plt+0x23290>
  443319:	inc    ebp
  44331b:	jmp    442e18 <xmlStrEqual@plt+0x3eed8>
  443320:	mov    edi,0x3
  443325:	call   424b10 <xmlStrEqual@plt+0x20bd0>
  44332a:	mov    rbx,rax
  44332d:	mov    rdi,rax
  443330:	mov    esi,0xa
  443335:	call   425470 <xmlStrEqual@plt+0x21530>
  44333a:	mov    rsi,r14
  44333d:	mov    rdi,rbx
  443340:	call   425440 <xmlStrEqual@plt+0x21500>
  443345:	mov    rax,0x469e3c
  44334c:	mov    esi,DWORD PTR [rax]
  44334e:	test   esi,esi
  443350:	jg     443378 <xmlStrEqual@plt+0x3f438>
  443352:	mov    rdi,QWORD PTR [rsp+0x18]
  443357:	inc    ebp
  443359:	call   403ed0 <strdup@plt>
  44335e:	mov    rdi,QWORD PTR [rsp+0x8]
  443363:	mov    rdx,rbx
  443366:	mov    rsi,rax
  443369:	call   43a0e0 <xmlStrEqual@plt+0x361a0>
  44336e:	jmp    442e18 <xmlStrEqual@plt+0x3eed8>
  443373:	nop    DWORD PTR [rax+rax*1+0x0]
  443378:	mov    rdi,rbx
  44337b:	call   424d40 <xmlStrEqual@plt+0x20e00>
  443380:	mov    rdx,rax
  443383:	lea    rsi,[rip+0x1251e]        # 4558a8 <xmlStrEqual@plt+0x51968>
  44338a:	mov    edi,0x5
  44338f:	xor    eax,eax
  443391:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  443396:	jmp    443352 <xmlStrEqual@plt+0x3f412>
  443398:	nop    DWORD PTR [rax+rax*1+0x0]
  4433a0:	lea    rsi,[rip+0x125c9]        # 455970 <xmlStrEqual@plt+0x51a30>
  4433a7:	mov    edi,0x4
  4433ac:	xor    eax,eax
  4433ae:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  4433b3:	jmp    44326a <xmlStrEqual@plt+0x3f32a>
  4433b8:	nop    DWORD PTR [rax+rax*1+0x0]
  4433c0:	endbr64 
  4433c4:	push   r15
  4433c6:	push   r14
  4433c8:	mov    r14,rsi
  4433cb:	lea    rsi,[rip+0x11fab]        # 45537d <xmlStrEqual@plt+0x5143d>
  4433d2:	push   r13
  4433d4:	push   r12
  4433d6:	mov    r12,rdi
  4433d9:	push   rbp
  4433da:	push   rbx
  4433db:	mov    ebx,ecx
  4433dd:	sub    rsp,0x18
  4433e1:	mov    DWORD PTR [rsp+0x8],edx
  4433e5:	call   403a70 <cfg_getstr@plt>
  4433ea:	xor    edx,edx
  4433ec:	test   rax,rax
  4433ef:	je     4435c6 <xmlStrEqual@plt+0x3f686>
  4433f5:	lea    rsi,[rip+0x11f81]        # 45537d <xmlStrEqual@plt+0x5143d>
  4433fc:	mov    rdi,r12
  4433ff:	call   403a70 <cfg_getstr@plt>
  443404:	mov    rdi,rax
  443407:	call   403ed0 <strdup@plt>
  44340c:	mov    QWORD PTR [r14],rax
  44340f:	lea    rsi,[rip+0xbe32]        # 44f248 <xmlStrEqual@plt+0x4b308>
  443416:	mov    rdi,r12
  443419:	call   403940 <cfg_getint@plt>
  44341e:	mov    DWORD PTR [r14+0xc],eax
  443422:	test   bl,bl
  443424:	je     4435e0 <xmlStrEqual@plt+0x3f6a0>
  44342a:	xor    ebp,ebp
  44342c:	jmp    4434dd <xmlStrEqual@plt+0x3f59d>
  443431:	nop    DWORD PTR [rax+0x0]
  443438:	lea    rsi,[rip+0x11f49]        # 455388 <xmlStrEqual@plt+0x51448>
  44343f:	mov    rdi,r12
  443442:	mov    edx,ebp
  443444:	call   403980 <cfg_getnsec@plt>
  443449:	mov    rdi,rax
  44344c:	lea    rsi,[rip+0x11f3a]        # 45538d <xmlStrEqual@plt+0x5144d>
  443453:	mov    rbx,rax
  443456:	call   403a70 <cfg_getstr@plt>
  44345b:	test   rax,rax
  44345e:	je     443600 <xmlStrEqual@plt+0x3f6c0>
  443464:	lea    rsi,[rip+0x11f2a]        # 455395 <xmlStrEqual@plt+0x51455>
  44346b:	mov    rdi,rbx
  44346e:	call   403b00 <cfg_getbool@plt>
  443473:	lea    rsi,[rip+0x11ddb]        # 455255 <xmlStrEqual@plt+0x51315>
  44347a:	mov    rdi,rbx
  44347d:	mov    r13d,eax
  443480:	call   403940 <cfg_getint@plt>
  443485:	lea    rsi,[rip+0x11dae]        # 45523a <xmlStrEqual@plt+0x512fa>
  44348c:	mov    rdi,rbx
  44348f:	mov    QWORD PTR [rsp],rax
  443493:	call   403940 <cfg_getint@plt>
  443498:	lea    rsi,[rip+0x11eee]        # 45538d <xmlStrEqual@plt+0x5144d>
  44349f:	mov    rdi,rbx
  4434a2:	mov    r15,rax
  4434a5:	call   403a70 <cfg_getstr@plt>
  4434aa:	mov    rdx,QWORD PTR [rsp]
  4434ae:	xor    r9d,r9d
  4434b1:	test   r13d,r13d
  4434b4:	setne  r9b
  4434b8:	mov    ecx,0xff
  4434bd:	xor    r8d,r8d
  4434c0:	movzx  edx,dl
  4434c3:	movzx  esi,r15b
  4434c7:	mov    rdi,rax
  4434ca:	call   405430 <xmlStrEqual@plt+0x14f0>
  4434cf:	mov    rsi,QWORD PTR [r14+0x10]
  4434d3:	mov    rdi,rax
  4434d6:	call   42de80 <xmlStrEqual@plt+0x29f40>
  4434db:	inc    ebp
  4434dd:	lea    rsi,[rip+0x11ea4]        # 455388 <xmlStrEqual@plt+0x51448>
  4434e4:	mov    rdi,r12
  4434e7:	call   403ef0 <cfg_size@plt>
  4434ec:	cmp    eax,ebp
  4434ee:	ja     443438 <xmlStrEqual@plt+0x3f4f8>
  4434f4:	cmp    BYTE PTR [rsp+0x8],0x0
  4434f9:	je     4435c1 <xmlStrEqual@plt+0x3f681>
  4434ff:	xor    ebp,ebp
  443501:	lea    r13,[rip+0x11e93]        # 45539b <xmlStrEqual@plt+0x5145b>
  443508:	jmp    4435ae <xmlStrEqual@plt+0x3f66e>
  44350d:	nop    DWORD PTR [rax]
  443510:	mov    edx,ebp
  443512:	mov    rsi,r13
  443515:	mov    rdi,r12
  443518:	call   403980 <cfg_getnsec@plt>
  44351d:	mov    rbx,rax
  443520:	lea    rsi,[rip+0x11e7f]        # 4553a6 <xmlStrEqual@plt+0x51466>
  443527:	mov    rdi,rax
  44352a:	call   403940 <cfg_getint@plt>
  44352f:	lea    rsi,[rip+0x11d26]        # 45525c <xmlStrEqual@plt+0x5131c>
  443536:	mov    rdi,rbx
  443539:	mov    QWORD PTR [rsp],rax
  44353d:	call   403a70 <cfg_getstr@plt>
  443542:	test   rax,rax
  443545:	je     443620 <xmlStrEqual@plt+0x3f6e0>
  44354b:	lea    rsi,[rip+0x11d03]        # 455255 <xmlStrEqual@plt+0x51315>
  443552:	mov    rdi,rbx
  443555:	call   403940 <cfg_getint@plt>
  44355a:	lea    rsi,[rip+0x11cd9]        # 45523a <xmlStrEqual@plt+0x512fa>
  443561:	mov    rdi,rbx
  443564:	mov    QWORD PTR [rsp+0x8],rax
  443569:	call   403940 <cfg_getint@plt>
  44356e:	lea    rsi,[rip+0x11ce7]        # 45525c <xmlStrEqual@plt+0x5131c>
  443575:	mov    rdi,rbx
  443578:	mov    r15,rax
  44357b:	call   403a70 <cfg_getstr@plt>
  443580:	mov    rcx,QWORD PTR [rsp+0x8]
  443585:	mov    esi,DWORD PTR [rsp]
  443588:	xor    r9d,r9d
  44358b:	mov    r8d,0xff
  443591:	movzx  ecx,cl
  443594:	movzx  edx,r15b
  443598:	mov    rdi,rax
  44359b:	call   4055f0 <xmlStrEqual@plt+0x16b0>
  4435a0:	mov    rsi,QWORD PTR [r14+0x18]
  4435a4:	mov    rdi,rax
  4435a7:	call   42de80 <xmlStrEqual@plt+0x29f40>
  4435ac:	inc    ebp
  4435ae:	mov    rsi,r13
  4435b1:	mov    rdi,r12
  4435b4:	call   403ef0 <cfg_size@plt>
  4435b9:	cmp    ebp,eax
  4435bb:	jb     443510 <xmlStrEqual@plt+0x3f5d0>
  4435c1:	mov    edx,0x1
  4435c6:	add    rsp,0x18
  4435ca:	pop    rbx
  4435cb:	pop    rbp
  4435cc:	pop    r12
  4435ce:	pop    r13
  4435d0:	pop    r14
  4435d2:	mov    eax,edx
  4435d4:	pop    r15
  4435d6:	ret    
  4435d7:	nop    WORD PTR [rax+rax*1+0x0]
  4435e0:	lea    rsi,[rip+0x11c30]        # 455217 <xmlStrEqual@plt+0x512d7>
  4435e7:	mov    rdi,r12
  4435ea:	call   403940 <cfg_getint@plt>
  4435ef:	mov    DWORD PTR [r14+0x8],eax
  4435f3:	jmp    44342a <xmlStrEqual@plt+0x3f4ea>
  4435f8:	nop    DWORD PTR [rax+rax*1+0x0]
  443600:	mov    rdx,QWORD PTR [r14]
  443603:	lea    rsi,[rip+0x1238e]        # 455998 <xmlStrEqual@plt+0x51a58>
  44360a:	mov    edi,0x3
  44360f:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  443614:	xor    edx,edx
  443616:	jmp    4435c6 <xmlStrEqual@plt+0x3f686>
  443618:	nop    DWORD PTR [rax+rax*1+0x0]
  443620:	mov    rdx,QWORD PTR [r14]
  443623:	lea    rsi,[rip+0x123ae]        # 4559d8 <xmlStrEqual@plt+0x51a98>
  44362a:	mov    edi,0x3
  44362f:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  443634:	xor    edx,edx
  443636:	jmp    4435c6 <xmlStrEqual@plt+0x3f686>
  443638:	nop    DWORD PTR [rax+rax*1+0x0]
  443640:	endbr64 
  443644:	push   r15
  443646:	xor    eax,eax
  443648:	mov    r15d,r8d
  44364b:	push   r14
  44364d:	mov    r14,rdx
  443650:	push   r13
  443652:	mov    r13,rsi
  443655:	push   r12
  443657:	mov    r12d,ecx
  44365a:	push   rbp
  44365b:	mov    rbp,rdi
  44365e:	push   rbx
  44365f:	sub    rsp,0x8
  443663:	call   4052f0 <xmlStrEqual@plt+0x13b0>
  443668:	mov    rsi,rax
  44366b:	mov    rdi,rbp
  44366e:	movzx  ecx,r15b
  443672:	movzx  edx,r12b
  443676:	mov    rbx,rax
  443679:	call   4433c0 <xmlStrEqual@plt+0x3f480>
  44367e:	xor    ebp,ebp
  443680:	cmp    eax,0x1
  443683:	jne    4436a2 <xmlStrEqual@plt+0x3f762>
  443685:	mov    rdi,r13
  443688:	movzx  ecx,r12b
  44368c:	mov    rdx,rbx
  44368f:	mov    rsi,r14
  443692:	call   406c80 <xmlStrEqual@plt+0x2d40>
  443697:	mov    rdi,rbx
  44369a:	mov    rbp,rax
  44369d:	call   405350 <xmlStrEqual@plt+0x1410>
  4436a2:	add    rsp,0x8
  4436a6:	pop    rbx
  4436a7:	mov    rax,rbp
  4436aa:	pop    rbp
  4436ab:	pop    r12
  4436ad:	pop    r13
  4436af:	pop    r14
  4436b1:	pop    r15
  4436b3:	ret    
  4436b4:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4436bf:	nop
  4436c0:	endbr64 
  4436c4:	push   r15
  4436c6:	mov    r15,rsi
  4436c9:	lea    rsi,[rip+0x11bb9]        # 455289 <xmlStrEqual@plt+0x51349>
  4436d0:	push   r14
  4436d2:	push   r13
  4436d4:	push   r12
  4436d6:	push   rbp
  4436d7:	push   rbx
  4436d8:	sub    rsp,0x18
  4436dc:	mov    QWORD PTR [rsp+0x8],rdi
  4436e1:	call   403ef0 <cfg_size@plt>
  4436e6:	mov    DWORD PTR [rsp+0x4],eax
  4436ea:	test   eax,eax
  4436ec:	jle    4437f0 <xmlStrEqual@plt+0x3f8b0>
  4436f2:	xor    ebp,ebp
  4436f4:	jmp    44373e <xmlStrEqual@plt+0x3f7fe>
  4436f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  443700:	mov    rax,0x469e3c
  443707:	mov    eax,DWORD PTR [rax]
  443709:	test   eax,eax
  44370b:	jle    443732 <xmlStrEqual@plt+0x3f7f2>
  44370d:	lea    rsi,[rip+0x11c79]        # 45538d <xmlStrEqual@plt+0x5144d>
  443714:	mov    rdi,rbx
  443717:	call   403a70 <cfg_getstr@plt>
  44371c:	mov    rdx,rax
  44371f:	lea    rsi,[rip+0x11c8b]        # 4553b1 <xmlStrEqual@plt+0x51471>
  443726:	mov    edi,0x5
  44372b:	xor    eax,eax
  44372d:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  443732:	inc    ebp
  443734:	cmp    DWORD PTR [rsp+0x4],ebp
  443738:	je     4437f0 <xmlStrEqual@plt+0x3f8b0>
  44373e:	mov    rdi,QWORD PTR [rsp+0x8]
  443743:	mov    edx,ebp
  443745:	lea    rsi,[rip+0x11b3d]        # 455289 <xmlStrEqual@plt+0x51349>
  44374c:	call   403980 <cfg_getnsec@plt>
  443751:	mov    rbx,rax
  443754:	lea    rsi,[rip+0x11b74]        # 4552cf <xmlStrEqual@plt+0x5138f>
  44375b:	mov    rdi,rax
  44375e:	call   403b00 <cfg_getbool@plt>
  443763:	lea    rsi,[rip+0x11b3d]        # 4552a7 <xmlStrEqual@plt+0x51367>
  44376a:	mov    rdi,rbx
  44376d:	mov    r13d,eax
  443770:	call   403a70 <cfg_getstr@plt>
  443775:	lea    rsi,[rip+0x11b1d]        # 455299 <xmlStrEqual@plt+0x51359>
  44377c:	mov    rdi,rbx
  44377f:	mov    r14,rax
  443782:	call   403940 <cfg_getint@plt>
  443787:	lea    rsi,[rip+0x11bff]        # 45538d <xmlStrEqual@plt+0x5144d>
  44378e:	mov    rdi,rbx
  443791:	mov    r12,rax
  443794:	call   403a70 <cfg_getstr@plt>
  443799:	test   r13d,r13d
  44379c:	setne  r8b
  4437a0:	mov    rdi,QWORD PTR [r15+0x78]
  4437a4:	movzx  r8d,r8b
  4437a8:	mov    rcx,r14
  4437ab:	mov    edx,r12d
  4437ae:	mov    rsi,rax
  4437b1:	call   4069a0 <xmlStrEqual@plt+0x2a60>
  4437b6:	cmp    eax,0x1
  4437b9:	je     443700 <xmlStrEqual@plt+0x3f7c0>
  4437bf:	lea    rsi,[rip+0x11bc7]        # 45538d <xmlStrEqual@plt+0x5144d>
  4437c6:	mov    rdi,rbx
  4437c9:	call   403a70 <cfg_getstr@plt>
  4437ce:	mov    rdx,rax
  4437d1:	lea    rsi,[rip+0x11bf5]        # 4553cd <xmlStrEqual@plt+0x5148d>
  4437d8:	mov    edi,0x3
  4437dd:	xor    eax,eax
  4437df:	inc    ebp
  4437e1:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  4437e6:	cmp    DWORD PTR [rsp+0x4],ebp
  4437ea:	jne    44373e <xmlStrEqual@plt+0x3f7fe>
  4437f0:	add    rsp,0x18
  4437f4:	pop    rbx
  4437f5:	pop    rbp
  4437f6:	pop    r12
  4437f8:	pop    r13
  4437fa:	pop    r14
  4437fc:	mov    eax,0x1
  443801:	pop    r15
  443803:	ret    
  443804:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  44380f:	nop
  443810:	endbr64 
  443814:	push   r15
  443816:	push   r14
  443818:	push   r13
  44381a:	mov    r13,rdi
  44381d:	push   r12
  44381f:	push   rbp
  443820:	push   rbx
  443821:	mov    rbx,rsi
  443824:	sub    rsp,0x28
  443828:	mov    rdi,QWORD PTR [rsi+0x30]
  44382c:	mov    QWORD PTR [rsp+0x18],rsi
  443831:	mov    esi,0x2
  443836:	call   409b20 <xmlStrEqual@plt+0x5be0>
  44383b:	mov    rdi,QWORD PTR [rbx+0x30]
  44383f:	mov    esi,0xa
  443844:	mov    QWORD PTR [rsp+0x8],rax
  443849:	call   409b20 <xmlStrEqual@plt+0x5be0>
  44384e:	lea    rsi,[rip+0x11b91]        # 4553e6 <xmlStrEqual@plt+0x514a6>
  443855:	mov    rdi,r13
  443858:	mov    QWORD PTR [rsp+0x10],rax
  44385d:	call   403ef0 <cfg_size@plt>
  443862:	test   eax,eax
  443864:	jle    443960 <xmlStrEqual@plt+0x3fa20>
  44386a:	mov    r14d,eax
  44386d:	xor    ebp,ebp
  44386f:	jmp    4438b5 <xmlStrEqual@plt+0x3f975>
  443871:	nop    DWORD PTR [rax+0x0]
  443878:	mov    rax,0x469e3c
  44387f:	mov    ecx,DWORD PTR [rax]
  443881:	test   ecx,ecx
  443883:	jle    4438aa <xmlStrEqual@plt+0x3f96a>
  443885:	lea    rsi,[rip+0x11b01]        # 45538d <xmlStrEqual@plt+0x5144d>
  44388c:	mov    rdi,rbx
  44388f:	call   403a70 <cfg_getstr@plt>
  443894:	mov    rdx,rax
  443897:	lea    rsi,[rip+0x121c2]        # 455a60 <xmlStrEqual@plt+0x51b20>
  44389e:	mov    edi,0x5
  4438a3:	xor    eax,eax
  4438a5:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  4438aa:	inc    ebp
  4438ac:	cmp    r14d,ebp
  4438af:	je     443960 <xmlStrEqual@plt+0x3fa20>
  4438b5:	lea    rsi,[rip+0x11b2a]        # 4553e6 <xmlStrEqual@plt+0x514a6>
  4438bc:	mov    rdi,r13
  4438bf:	mov    edx,ebp
  4438c1:	call   403980 <cfg_getnsec@plt>
  4438c6:	mov    rdi,rax
  4438c9:	lea    rsi,[rip+0x11abd]        # 45538d <xmlStrEqual@plt+0x5144d>
  4438d0:	mov    rbx,rax
  4438d3:	call   403a70 <cfg_getstr@plt>
  4438d8:	test   rax,rax
  4438db:	je     443aa8 <xmlStrEqual@plt+0x3fb68>
  4438e1:	lea    rsi,[rip+0x1196d]        # 455255 <xmlStrEqual@plt+0x51315>
  4438e8:	mov    rdi,rbx
  4438eb:	call   403940 <cfg_getint@plt>
  4438f0:	lea    rsi,[rip+0x11943]        # 45523a <xmlStrEqual@plt+0x512fa>
  4438f7:	mov    rdi,rbx
  4438fa:	mov    r15,rax
  4438fd:	call   403940 <cfg_getint@plt>
  443902:	lea    rsi,[rip+0x11a84]        # 45538d <xmlStrEqual@plt+0x5144d>
  443909:	mov    rdi,rbx
  44390c:	mov    r12,rax
  44390f:	call   403a70 <cfg_getstr@plt>
  443914:	mov    rdi,QWORD PTR [rsp+0x8]
  443919:	mov    ecx,r15d
  44391c:	mov    edx,r12d
  44391f:	mov    rsi,rax
  443922:	call   406b00 <xmlStrEqual@plt+0x2bc0>
  443927:	cmp    eax,0x1
  44392a:	je     443878 <xmlStrEqual@plt+0x3f938>
  443930:	lea    rsi,[rip+0x11a56]        # 45538d <xmlStrEqual@plt+0x5144d>
  443937:	mov    rdi,rbx
  44393a:	call   403a70 <cfg_getstr@plt>
  44393f:	mov    rdx,rax
  443942:	lea    rsi,[rip+0x11aac]        # 4553f5 <xmlStrEqual@plt+0x514b5>
  443949:	mov    edi,0x2
  44394e:	xor    eax,eax
  443950:	inc    ebp
  443952:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  443957:	cmp    r14d,ebp
  44395a:	jne    4438b5 <xmlStrEqual@plt+0x3f975>
  443960:	lea    rsi,[rip+0x11aa5]        # 45540c <xmlStrEqual@plt+0x514cc>
  443967:	mov    rdi,r13
  44396a:	call   403ef0 <cfg_size@plt>
  44396f:	mov    r15d,eax
  443972:	test   eax,eax
  443974:	jle    443a68 <xmlStrEqual@plt+0x3fb28>
  44397a:	xor    ebp,ebp
  44397c:	jmp    4439bd <xmlStrEqual@plt+0x3fa7d>
  44397e:	xchg   ax,ax
  443980:	mov    rax,0x469e3c
  443987:	mov    edx,DWORD PTR [rax]
  443989:	test   edx,edx
  44398b:	jle    4439b2 <xmlStrEqual@plt+0x3fa72>
  44398d:	lea    rsi,[rip+0x119f9]        # 45538d <xmlStrEqual@plt+0x5144d>
  443994:	mov    rdi,rbx
  443997:	call   403a70 <cfg_getstr@plt>
  44399c:	mov    rdx,rax
  44399f:	lea    rsi,[rip+0x12132]        # 455ad8 <xmlStrEqual@plt+0x51b98>
  4439a6:	mov    edi,0x5
  4439ab:	xor    eax,eax
  4439ad:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  4439b2:	inc    ebp
  4439b4:	cmp    r15d,ebp
  4439b7:	je     443a68 <xmlStrEqual@plt+0x3fb28>
  4439bd:	lea    rsi,[rip+0x11a48]        # 45540c <xmlStrEqual@plt+0x514cc>
  4439c4:	mov    rdi,r13
  4439c7:	mov    edx,ebp
  4439c9:	call   403980 <cfg_getnsec@plt>
  4439ce:	mov    rdi,rax
  4439d1:	lea    rsi,[rip+0x119b5]        # 45538d <xmlStrEqual@plt+0x5144d>
  4439d8:	mov    rbx,rax
  4439db:	call   403a70 <cfg_getstr@plt>
  4439e0:	test   rax,rax
  4439e3:	je     443ad0 <xmlStrEqual@plt+0x3fb90>
  4439e9:	lea    rsi,[rip+0x11865]        # 455255 <xmlStrEqual@plt+0x51315>
  4439f0:	mov    rdi,rbx
  4439f3:	call   403940 <cfg_getint@plt>
  4439f8:	lea    rsi,[rip+0x1183b]        # 45523a <xmlStrEqual@plt+0x512fa>
  4439ff:	mov    rdi,rbx
  443a02:	mov    r14,rax
  443a05:	call   403940 <cfg_getint@plt>
  443a0a:	lea    rsi,[rip+0x1197c]        # 45538d <xmlStrEqual@plt+0x5144d>
  443a11:	mov    rdi,rbx
  443a14:	mov    r12,rax
  443a17:	call   403a70 <cfg_getstr@plt>
  443a1c:	mov    rdi,QWORD PTR [rsp+0x10]
  443a21:	mov    ecx,r14d
  443a24:	mov    edx,r12d
  443a27:	mov    rsi,rax
  443a2a:	call   406b00 <xmlStrEqual@plt+0x2bc0>
  443a2f:	cmp    eax,0x1
  443a32:	je     443980 <xmlStrEqual@plt+0x3fa40>
  443a38:	lea    rsi,[rip+0x1194e]        # 45538d <xmlStrEqual@plt+0x5144d>
  443a3f:	mov    rdi,rbx
  443a42:	call   403a70 <cfg_getstr@plt>
  443a47:	mov    rdx,rax
  443a4a:	lea    rsi,[rip+0x119a4]        # 4553f5 <xmlStrEqual@plt+0x514b5>
  443a51:	mov    edi,0x2
  443a56:	xor    eax,eax
  443a58:	inc    ebp
  443a5a:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  443a5f:	cmp    r15d,ebp
  443a62:	jne    4439bd <xmlStrEqual@plt+0x3fa7d>
  443a68:	mov    rax,QWORD PTR [rsp+0x18]
  443a6d:	mov    rsi,QWORD PTR [rsp+0x8]
  443a72:	mov    rdi,QWORD PTR [rax+0x40]
  443a76:	mov    rax,QWORD PTR [rax+0x38]
  443a7a:	call   QWORD PTR [rax+0x20]
  443a7d:	cmp    eax,0x1
  443a80:	je     443af8 <xmlStrEqual@plt+0x3fbb8>
  443a82:	mov    rax,0x469e3c
  443a89:	mov    eax,DWORD PTR [rax]
  443a8b:	test   eax,eax
  443a8d:	jg     443b17 <xmlStrEqual@plt+0x3fbd7>
  443a93:	xor    eax,eax
  443a95:	add    rsp,0x28
  443a99:	pop    rbx
  443a9a:	pop    rbp
  443a9b:	pop    r12
  443a9d:	pop    r13
  443a9f:	pop    r14
  443aa1:	pop    r15
  443aa3:	ret    
  443aa4:	nop    DWORD PTR [rax+0x0]
  443aa8:	lea    rsi,[rip+0x11f69]        # 455a18 <xmlStrEqual@plt+0x51ad8>
  443aaf:	mov    edi,0x2
  443ab4:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  443ab9:	xor    eax,eax
  443abb:	add    rsp,0x28
  443abf:	pop    rbx
  443ac0:	pop    rbp
  443ac1:	pop    r12
  443ac3:	pop    r13
  443ac5:	pop    r14
  443ac7:	pop    r15
  443ac9:	ret    
  443aca:	nop    WORD PTR [rax+rax*1+0x0]
  443ad0:	lea    rsi,[rip+0x11fb9]        # 455a90 <xmlStrEqual@plt+0x51b50>
  443ad7:	mov    edi,0x2
  443adc:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  443ae1:	add    rsp,0x28
  443ae5:	pop    rbx
  443ae6:	pop    rbp
  443ae7:	pop    r12
  443ae9:	pop    r13
  443aeb:	pop    r14
  443aed:	xor    eax,eax
  443aef:	pop    r15
  443af1:	ret    
  443af2:	nop    WORD PTR [rax+rax*1+0x0]
  443af8:	mov    rax,QWORD PTR [rsp+0x18]
  443afd:	mov    rsi,QWORD PTR [rsp+0x10]
  443b02:	mov    rdi,QWORD PTR [rax+0x40]
  443b06:	mov    rax,QWORD PTR [rax+0x38]
  443b0a:	call   QWORD PTR [rax+0x20]
  443b0d:	cmp    eax,0x1
  443b10:	je     443abb <xmlStrEqual@plt+0x3fb7b>
  443b12:	jmp    443a82 <xmlStrEqual@plt+0x3fb42>
  443b17:	xor    eax,eax
  443b19:	lea    rsi,[rip+0x11fe8]        # 455b08 <xmlStrEqual@plt+0x51bc8>
  443b20:	mov    edi,0x5
  443b25:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  443b2a:	xor    eax,eax
  443b2c:	jmp    443a95 <xmlStrEqual@plt+0x3fb55>
  443b31:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  443b3c:	nop    DWORD PTR [rax+0x0]
  443b40:	endbr64 
  443b44:	push   r15
  443b46:	mov    r15,rsi
  443b49:	lea    rsi,[rip+0x118cb]        # 45541b <xmlStrEqual@plt+0x514db>
  443b50:	push   r14
  443b52:	push   r13
  443b54:	mov    r13,rdi
  443b57:	push   r12
  443b59:	push   rbp
  443b5a:	push   rbx
  443b5b:	sub    rsp,0x8
  443b5f:	call   403ef0 <cfg_size@plt>
  443b64:	test   eax,eax
  443b66:	jle    443bf2 <xmlStrEqual@plt+0x3fcb2>
  443b6c:	mov    r12d,eax
  443b6f:	xor    ebx,ebx
  443b71:	lea    r14,[rip+0x118a3]        # 45541b <xmlStrEqual@plt+0x514db>
  443b78:	jmp    443baf <xmlStrEqual@plt+0x3fc6f>
  443b7a:	nop    WORD PTR [rax+rax*1+0x0]
  443b80:	mov    rax,0x469e3c
  443b87:	mov    eax,DWORD PTR [rax]
  443b89:	test   eax,eax
  443b8b:	jle    443ba8 <xmlStrEqual@plt+0x3fc68>
  443b8d:	mov    rdx,rbp
  443b90:	lea    rsi,[rip+0x1188f]        # 455426 <xmlStrEqual@plt+0x514e6>
  443b97:	mov    edi,0x5
  443b9c:	xor    eax,eax
  443b9e:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  443ba3:	nop    DWORD PTR [rax+rax*1+0x0]
  443ba8:	inc    ebx
  443baa:	cmp    r12d,ebx
  443bad:	je     443bf2 <xmlStrEqual@plt+0x3fcb2>
  443baf:	mov    edx,ebx
  443bb1:	mov    rsi,r14
  443bb4:	mov    rdi,r13
  443bb7:	call   4038b0 <cfg_getnstr@plt>
  443bbc:	mov    rbp,rax
  443bbf:	test   rax,rax
  443bc2:	je     443ba8 <xmlStrEqual@plt+0x3fc68>
  443bc4:	mov    rsi,QWORD PTR [r15+0x68]
  443bc8:	mov    rdi,rax
  443bcb:	call   406890 <xmlStrEqual@plt+0x2950>
  443bd0:	cmp    eax,0x1
  443bd3:	je     443b80 <xmlStrEqual@plt+0x3fc40>
  443bd5:	mov    rdx,rbp
  443bd8:	lea    rsi,[rip+0x11f69]        # 455b48 <xmlStrEqual@plt+0x51c08>
  443bdf:	mov    edi,0x2
  443be4:	xor    eax,eax
  443be6:	inc    ebx
  443be8:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  443bed:	cmp    r12d,ebx
  443bf0:	jne    443baf <xmlStrEqual@plt+0x3fc6f>
  443bf2:	add    rsp,0x8
  443bf6:	pop    rbx
  443bf7:	pop    rbp
  443bf8:	pop    r12
  443bfa:	pop    r13
  443bfc:	pop    r14
  443bfe:	mov    eax,0x1
  443c03:	pop    r15
  443c05:	ret    
  443c06:	nop    WORD PTR cs:[rax+rax*1+0x0]
  443c10:	endbr64 
  443c14:	push   r15
  443c16:	mov    r15,rsi
  443c19:	lea    rsi,[rip+0x11821]        # 455441 <xmlStrEqual@plt+0x51501>
  443c20:	push   r14
  443c22:	push   r13
  443c24:	push   r12
  443c26:	mov    r12,rdi
  443c29:	push   rbp
  443c2a:	push   rbx
  443c2b:	sub    rsp,0x8
  443c2f:	call   403ef0 <cfg_size@plt>
  443c34:	test   eax,eax
  443c36:	jle    443caf <xmlStrEqual@plt+0x3fd6f>
  443c38:	mov    r13d,eax
  443c3b:	xor    ebx,ebx
  443c3d:	nop    DWORD PTR [rax]
  443c40:	mov    edx,ebx
  443c42:	lea    rsi,[rip+0x117f8]        # 455441 <xmlStrEqual@plt+0x51501>
  443c49:	mov    rdi,r12
  443c4c:	call   4038b0 <cfg_getnstr@plt>
  443c51:	mov    rbp,rax
  443c54:	test   rax,rax
  443c57:	je     443ca8 <xmlStrEqual@plt+0x3fd68>
  443c59:	xor    eax,eax
  443c5b:	call   424be0 <xmlStrEqual@plt+0x20ca0>
  443c60:	mov    rsi,rax
  443c63:	mov    rdi,rbp
  443c66:	mov    r14,rax
  443c69:	call   425bf0 <xmlStrEqual@plt+0x21cb0>
  443c6e:	cmp    eax,0x1
  443c71:	jne    443cc8 <xmlStrEqual@plt+0x3fd88>
  443c73:	mov    rsi,QWORD PTR [r15+0x48]
  443c77:	mov    rdi,r14
  443c7a:	call   42dcf0 <xmlStrEqual@plt+0x29db0>
  443c7f:	mov    rax,0x469e3c
  443c86:	mov    eax,DWORD PTR [rax]
  443c88:	test   eax,eax
  443c8a:	jle    443ca8 <xmlStrEqual@plt+0x3fd68>
  443c8c:	mov    rdx,rbp
  443c8f:	lea    rsi,[rip+0x11f12]        # 455ba8 <xmlStrEqual@plt+0x51c68>
  443c96:	mov    edi,0x5
  443c9b:	xor    eax,eax
  443c9d:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  443ca2:	nop    WORD PTR [rax+rax*1+0x0]
  443ca8:	inc    ebx
  443caa:	cmp    r13d,ebx
  443cad:	jne    443c40 <xmlStrEqual@plt+0x3fd00>
  443caf:	add    rsp,0x8
  443cb3:	pop    rbx
  443cb4:	pop    rbp
  443cb5:	pop    r12
  443cb7:	pop    r13
  443cb9:	pop    r14
  443cbb:	mov    eax,0x1
  443cc0:	pop    r15
  443cc2:	ret    
  443cc3:	nop    DWORD PTR [rax+rax*1+0x0]
  443cc8:	mov    rdi,r14
  443ccb:	call   424bf0 <xmlStrEqual@plt+0x20cb0>
  443cd0:	mov    rdx,rbp
  443cd3:	xor    eax,eax
  443cd5:	lea    rsi,[rip+0x11e9c]        # 455b78 <xmlStrEqual@plt+0x51c38>
  443cdc:	mov    edi,0x2
  443ce1:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  443ce6:	add    rsp,0x8
  443cea:	pop    rbx
  443ceb:	pop    rbp
  443cec:	pop    r12
  443cee:	pop    r13
  443cf0:	pop    r14
  443cf2:	xor    eax,eax
  443cf4:	pop    r15
  443cf6:	ret    
  443cf7:	nop    WORD PTR [rax+rax*1+0x0]
  443d00:	endbr64 
  443d04:	push   r15
  443d06:	push   r14
  443d08:	push   r13
  443d0a:	mov    r13,rdi
  443d0d:	push   r12
  443d0f:	mov    r12,rsi
  443d12:	lea    rsi,[rip+0x1197b]        # 455694 <xmlStrEqual@plt+0x51754>
  443d19:	push   rbp
  443d1a:	push   rbx
  443d1b:	xor    ebx,ebx
  443d1d:	sub    rsp,0x18
  443d21:	mov    QWORD PTR [rsp+0x8],rdx
  443d26:	call   403ef0 <cfg_size@plt>
  443d2b:	mov    r14d,eax
  443d2e:	test   eax,eax
  443d30:	jg     443d6d <xmlStrEqual@plt+0x3fe2d>
  443d32:	jmp    443de8 <xmlStrEqual@plt+0x3fea8>
  443d37:	nop    WORD PTR [rax+rax*1+0x0]
  443d40:	mov    rdi,rbp
  443d43:	call   424d40 <xmlStrEqual@plt+0x20e00>
  443d48:	mov    rdx,rax
  443d4b:	mov    edi,0x2
  443d50:	lea    rsi,[rip+0x11e79]        # 455bd0 <xmlStrEqual@plt+0x51c90>
  443d57:	xor    eax,eax
  443d59:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  443d5e:	mov    rdi,r15
  443d61:	call   434b90 <xmlStrEqual@plt+0x30c50>
  443d66:	inc    ebx
  443d68:	cmp    r14d,ebx
  443d6b:	je     443de8 <xmlStrEqual@plt+0x3fea8>
  443d6d:	mov    edx,ebx
  443d6f:	lea    rsi,[rip+0x1191e]        # 455694 <xmlStrEqual@plt+0x51754>
  443d76:	mov    rdi,r13
  443d79:	call   403980 <cfg_getnsec@plt>
  443d7e:	mov    rdx,QWORD PTR [rsp+0x8]
  443d83:	xor    r8d,r8d
  443d86:	mov    ecx,0x1
  443d8b:	mov    rsi,r12
  443d8e:	mov    rdi,rax
  443d91:	call   443640 <xmlStrEqual@plt+0x3f700>
  443d96:	mov    rbp,rax
  443d99:	test   rax,rax
  443d9c:	je     443e10 <xmlStrEqual@plt+0x3fed0>
  443d9e:	mov    rdi,rax
  443da1:	call   434af0 <xmlStrEqual@plt+0x30bb0>
  443da6:	mov    r15,rax
  443da9:	test   rax,rax
  443dac:	je     443e00 <xmlStrEqual@plt+0x3fec0>
  443dae:	mov    rdi,QWORD PTR [r12+0x40]
  443db3:	mov    rax,QWORD PTR [r12+0x38]
  443db8:	xor    edx,edx
  443dba:	mov    rsi,r15
  443dbd:	call   QWORD PTR [rax+0x10]
  443dc0:	cmp    eax,0x1
  443dc3:	jne    443d40 <xmlStrEqual@plt+0x3fe00>
  443dc9:	mov    rsi,r12
  443dcc:	mov    rdi,r15
  443dcf:	call   407780 <xmlStrEqual@plt+0x3840>
  443dd4:	cmp    eax,0x1
  443dd7:	je     443d66 <xmlStrEqual@plt+0x3fe26>
  443dd9:	mov    rdi,r15
  443ddc:	inc    ebx
  443dde:	call   434b90 <xmlStrEqual@plt+0x30c50>
  443de3:	cmp    r14d,ebx
  443de6:	jne    443d6d <xmlStrEqual@plt+0x3fe2d>
  443de8:	add    rsp,0x18
  443dec:	pop    rbx
  443ded:	pop    rbp
  443dee:	pop    r12
  443df0:	pop    r13
  443df2:	pop    r14
  443df4:	mov    eax,0x1
  443df9:	pop    r15
  443dfb:	ret    
  443dfc:	nop    DWORD PTR [rax+0x0]
  443e00:	mov    rdi,rbp
  443e03:	call   42b110 <xmlStrEqual@plt+0x271d0>
  443e08:	jmp    443d66 <xmlStrEqual@plt+0x3fe26>
  443e0d:	nop    DWORD PTR [rax]
  443e10:	add    rsp,0x18
  443e14:	pop    rbx
  443e15:	pop    rbp
  443e16:	pop    r12
  443e18:	pop    r13
  443e1a:	pop    r14
  443e1c:	xor    eax,eax
  443e1e:	pop    r15
  443e20:	ret    
  443e21:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  443e2c:	nop    DWORD PTR [rax+0x0]
  443e30:	endbr64 
  443e34:	push   r15
  443e36:	push   r14
  443e38:	mov    r14,rdi
  443e3b:	lea    rdi,[rip+0xa010]        # 44de52 <xmlStrEqual@plt+0x49f12>
  443e42:	push   r13
  443e44:	push   r12
  443e46:	mov    r12,rdx
  443e49:	push   rbp
  443e4a:	push   rbx
  443e4b:	sub    rsp,0x18
  443e4f:	mov    QWORD PTR [rsp],rsi
  443e53:	mov    QWORD PTR [rsp+0x8],rcx
  443e58:	call   421e70 <xmlStrEqual@plt+0x1df30>
  443e5d:	mov    rdx,0x475850
  443e64:	mov    QWORD PTR [r12+0x20],rax
  443e69:	mov    rdi,QWORD PTR [rdx]
  443e6c:	xor    esi,esi
  443e6e:	call   QWORD PTR [rax]
  443e70:	mov    QWORD PTR [r12+0x28],rax
  443e75:	lea    rsi,[rip+0x115d6]        # 455452 <xmlStrEqual@plt+0x51512>
  443e7c:	mov    rdi,r14
  443e7f:	call   403a70 <cfg_getstr@plt>
  443e84:	test   rax,rax
  443e87:	je     443ece <xmlStrEqual@plt+0x3ff8e>
  443e89:	mov    rdi,rax
  443e8c:	call   43be30 <xmlStrEqual@plt+0x37ef0>
  443e91:	mov    rsi,rax
  443e94:	mov    ecx,0x5
  443e99:	lea    rdi,[rip+0x115c0]        # 455460 <xmlStrEqual@plt+0x51520>
  443ea0:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  443ea2:	mov    rbx,rax
  443ea5:	seta   al
  443ea8:	sbb    al,0x0
  443eaa:	test   al,al
  443eac:	jne    444160 <xmlStrEqual@plt+0x40220>
  443eb2:	mov    edi,0x10f5
  443eb7:	mov    DWORD PTR [r12+0x40],0x0
  443ec0:	mov    WORD PTR [r12+0x44],di
  443ec6:	mov    rdi,rbx
  443ec9:	call   4037b0 <free@plt>
  443ece:	lea    rsi,[rip+0x1159a]        # 45546f <xmlStrEqual@plt+0x5152f>
  443ed5:	mov    rdi,r14
  443ed8:	call   403940 <cfg_getint@plt>
  443edd:	test   eax,eax
  443edf:	mov    edx,0x3
  443ee4:	cmove  eax,edx
  443ee7:	lea    rsi,[rip+0x11595]        # 455483 <xmlStrEqual@plt+0x51543>
  443eee:	mov    DWORD PTR [r12+0x8],eax
  443ef3:	xor    edx,edx
  443ef5:	mov    rdi,r14
  443ef8:	call   403980 <cfg_getnsec@plt>
  443efd:	mov    rbx,rax
  443f00:	test   rax,rax
  443f03:	je     444118 <xmlStrEqual@plt+0x401d8>
  443f09:	lea    rsi,[rip+0x11580]        # 455490 <xmlStrEqual@plt+0x51550>
  443f10:	mov    rdi,rax
  443f13:	call   403940 <cfg_getint@plt>
  443f18:	mov    DWORD PTR [r12+0xc],eax
  443f1d:	lea    rsi,[rip+0x11580]        # 4554a4 <xmlStrEqual@plt+0x51564>
  443f24:	mov    rdi,rbx
  443f27:	call   403940 <cfg_getint@plt>
  443f2c:	mov    DWORD PTR [r12+0x10],eax
  443f31:	lea    rsi,[rip+0x1157f]        # 4554b7 <xmlStrEqual@plt+0x51577>
  443f38:	mov    rdi,rbx
  443f3b:	call   403940 <cfg_getint@plt>
  443f40:	mov    DWORD PTR [r12+0x14],eax
  443f45:	lea    rdx,[r12+0x14]
  443f4a:	lea    rsi,[r12+0x10]
  443f4f:	lea    rdi,[r12+0xc]
  443f54:	call   405aa0 <xmlStrEqual@plt+0x1b60>
  443f59:	lea    rsi,[rip+0x1122b]        # 45518b <xmlStrEqual@plt+0x5124b>
  443f60:	mov    rdi,r14
  443f63:	call   403ef0 <cfg_size@plt>
  443f68:	mov    ebp,eax
  443f6a:	test   eax,eax
  443f6c:	jle    443ff1 <xmlStrEqual@plt+0x400b1>
  443f72:	xor    ebx,ebx
  443f74:	lea    r13,[rip+0x11210]        # 45518b <xmlStrEqual@plt+0x5124b>
  443f7b:	jmp    443fae <xmlStrEqual@plt+0x4006e>
  443f7d:	nop    DWORD PTR [rax]
  443f80:	mov    rax,0x469e3c
  443f87:	mov    edx,DWORD PTR [rax]
  443f89:	test   edx,edx
  443f8b:	jle    443fa8 <xmlStrEqual@plt+0x40068>
  443f8d:	mov    rdx,r15
  443f90:	lea    rsi,[rip+0x1153c]        # 4554d3 <xmlStrEqual@plt+0x51593>
  443f97:	mov    edi,0x5
  443f9c:	xor    eax,eax
  443f9e:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  443fa3:	nop    DWORD PTR [rax+rax*1+0x0]
  443fa8:	inc    ebx
  443faa:	cmp    ebp,ebx
  443fac:	je     443ff1 <xmlStrEqual@plt+0x400b1>
  443fae:	mov    edx,ebx
  443fb0:	mov    rsi,r13
  443fb3:	mov    rdi,r14
  443fb6:	call   4038b0 <cfg_getnstr@plt>
  443fbb:	mov    r15,rax
  443fbe:	test   rax,rax
  443fc1:	je     443fa8 <xmlStrEqual@plt+0x40068>
  443fc3:	mov    rsi,QWORD PTR [r12+0x30]
  443fc8:	mov    rdi,rax
  443fcb:	call   406890 <xmlStrEqual@plt+0x2950>
  443fd0:	cmp    eax,0x1
  443fd3:	je     443f80 <xmlStrEqual@plt+0x40040>
  443fd5:	mov    rdx,r15
  443fd8:	lea    rsi,[rip+0x11512]        # 4554f1 <xmlStrEqual@plt+0x515b1>
  443fdf:	mov    edi,0x1
  443fe4:	xor    eax,eax
  443fe6:	inc    ebx
  443fe8:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  443fed:	cmp    ebp,ebx
  443fef:	jne    443fae <xmlStrEqual@plt+0x4006e>
  443ff1:	lea    rsi,[rip+0x11514]        # 45550c <xmlStrEqual@plt+0x515cc>
  443ff8:	mov    rdi,r14
  443ffb:	call   403ef0 <cfg_size@plt>
  444000:	mov    r15d,eax
  444003:	test   eax,eax
  444005:	jle    444100 <xmlStrEqual@plt+0x401c0>
  44400b:	xor    ebp,ebp
  44400d:	jmp    444048 <xmlStrEqual@plt+0x40108>
  44400f:	nop
  444010:	lea    rsi,[rip+0x11366]        # 45537d <xmlStrEqual@plt+0x5143d>
  444017:	mov    rdi,r13
  44401a:	call   403a70 <cfg_getstr@plt>
  44401f:	mov    rdx,rax
  444022:	lea    rsi,[rip+0x11d17]        # 455d40 <xmlStrEqual@plt+0x51e00>
  444029:	mov    edi,0x2
  44402e:	xor    eax,eax
  444030:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  444035:	mov    rdi,rbx
  444038:	call   42b110 <xmlStrEqual@plt+0x271d0>
  44403d:	inc    ebp
  44403f:	cmp    r15d,ebp
  444042:	je     444100 <xmlStrEqual@plt+0x401c0>
  444048:	mov    edx,ebp
  44404a:	lea    rsi,[rip+0x114bb]        # 45550c <xmlStrEqual@plt+0x515cc>
  444051:	mov    rdi,r14
  444054:	call   403980 <cfg_getnsec@plt>
  444059:	mov    rdx,QWORD PTR [rsp+0x8]
  44405e:	mov    rsi,QWORD PTR [rsp]
  444062:	mov    r8d,0x1
  444068:	xor    ecx,ecx
  44406a:	mov    rdi,rax
  44406d:	mov    r13,rax
  444070:	call   443640 <xmlStrEqual@plt+0x3f700>
  444075:	mov    rbx,rax
  444078:	test   rax,rax
  44407b:	je     4441b0 <xmlStrEqual@plt+0x40270>
  444081:	mov    rdi,QWORD PTR [r12+0x18]
  444086:	mov    rsi,rax
  444089:	call   409b10 <xmlStrEqual@plt+0x5bd0>
  44408e:	test   rax,rax
  444091:	jne    444010 <xmlStrEqual@plt+0x400d0>
  444097:	mov    ecx,0x1
  44409c:	mov    edx,0x2
  4440a1:	mov    rsi,rbx
  4440a4:	mov    rdi,r12
  4440a7:	call   40c700 <xmlStrEqual@plt+0x87c0>
  4440ac:	test   rax,rax
  4440af:	je     444198 <xmlStrEqual@plt+0x40258>
  4440b5:	mov    rsi,rax
  4440b8:	mov    rdi,r12
  4440bb:	call   40c940 <xmlStrEqual@plt+0x8a00>
  4440c0:	mov    rax,0x469e3c
  4440c7:	mov    eax,DWORD PTR [rax]
  4440c9:	test   eax,eax
  4440cb:	jle    44403d <xmlStrEqual@plt+0x400fd>
  4440d1:	mov    rdi,rbx
  4440d4:	call   424d40 <xmlStrEqual@plt+0x20e00>
  4440d9:	mov    rdx,rax
  4440dc:	lea    rsi,[rip+0x11c15]        # 455cf8 <xmlStrEqual@plt+0x51db8>
  4440e3:	mov    edi,0x5
  4440e8:	xor    eax,eax
  4440ea:	inc    ebp
  4440ec:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  4440f1:	cmp    r15d,ebp
  4440f4:	jne    444048 <xmlStrEqual@plt+0x40108>
  4440fa:	nop    WORD PTR [rax+rax*1+0x0]
  444100:	mov    eax,0x1
  444105:	add    rsp,0x18
  444109:	pop    rbx
  44410a:	pop    rbp
  44410b:	pop    r12
  44410d:	pop    r13
  44410f:	pop    r14
  444111:	pop    r15
  444113:	ret    
  444114:	nop    DWORD PTR [rax+0x0]
  444118:	mov    rax,0x469e3c
  44411f:	mov    ecx,DWORD PTR [rax]
  444121:	test   ecx,ecx
  444123:	jle    44413d <xmlStrEqual@plt+0x401fd>
  444125:	mov    edx,0x1e
  44412a:	lea    rsi,[rip+0x11b17]        # 455c48 <xmlStrEqual@plt+0x51d08>
  444131:	mov    edi,0x5
  444136:	xor    eax,eax
  444138:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  44413d:	movabs rax,0x500000002
  444147:	mov    DWORD PTR [r12+0xc],0x1e
  444150:	mov    QWORD PTR [r12+0x10],rax
  444155:	jmp    443f59 <xmlStrEqual@plt+0x40019>
  44415a:	nop    WORD PTR [rax+rax*1+0x0]
  444160:	mov    ecx,0xa
  444165:	lea    rdi,[rip+0x112f9]        # 455465 <xmlStrEqual@plt+0x51525>
  44416c:	mov    rsi,rbx
  44416f:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  444171:	seta   al
  444174:	sbb    al,0x0
  444176:	test   al,al
  444178:	jne    4441e6 <xmlStrEqual@plt+0x402a6>
  44417a:	mov    esi,0x12b6
  44417f:	mov    DWORD PTR [r12+0x40],0x1
  444188:	mov    WORD PTR [r12+0x44],si
  44418e:	jmp    443ec6 <xmlStrEqual@plt+0x3ff86>
  444193:	nop    DWORD PTR [rax+rax*1+0x0]
  444198:	mov    rdx,rbx
  44419b:	lea    rsi,[rip+0x11b0e]        # 455cb0 <xmlStrEqual@plt+0x51d70>
  4441a2:	jmp    444029 <xmlStrEqual@plt+0x400e9>
  4441a7:	nop    WORD PTR [rax+rax*1+0x0]
  4441b0:	mov    rdi,r13
  4441b3:	lea    rsi,[rip+0x111c3]        # 45537d <xmlStrEqual@plt+0x5143d>
  4441ba:	call   403a70 <cfg_getstr@plt>
  4441bf:	mov    rdx,rax
  4441c2:	lea    rsi,[rip+0x11ae7]        # 455cb0 <xmlStrEqual@plt+0x51d70>
  4441c9:	xor    eax,eax
  4441cb:	mov    edi,0x2
  4441d0:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  4441d5:	add    rsp,0x18
  4441d9:	pop    rbx
  4441da:	pop    rbp
  4441db:	pop    r12
  4441dd:	pop    r13
  4441df:	pop    r14
  4441e1:	xor    eax,eax
  4441e3:	pop    r15
  4441e5:	ret    
  4441e6:	xor    eax,eax
  4441e8:	mov    rdx,rbx
  4441eb:	lea    rsi,[rip+0x11a36]        # 455c28 <xmlStrEqual@plt+0x51ce8>
  4441f2:	mov    edi,0x2
  4441f7:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  4441fc:	mov    rdi,rbx
  4441ff:	call   4037b0 <free@plt>
  444204:	xor    eax,eax
  444206:	jmp    444105 <xmlStrEqual@plt+0x401c5>
  44420b:	nop    DWORD PTR [rax+rax*1+0x0]
  444210:	endbr64 
  444214:	push   r15
  444216:	push   r14
  444218:	push   r13
  44421a:	push   r12
  44421c:	push   rbp
  44421d:	mov    rbp,rdi
  444220:	mov    edi,0x2
  444225:	push   rbx
  444226:	sub    rsp,0x38
  44422a:	mov    rbx,0x475850
  444231:	mov    rsi,rbx
  444234:	call   408a70 <xmlStrEqual@plt+0x4b30>
  444239:	cmp    eax,0x1
  44423c:	je     444270 <xmlStrEqual@plt+0x40330>
  44423e:	lea    rsi,[rip+0x11b53]        # 455d98 <xmlStrEqual@plt+0x51e58>
  444245:	mov    edi,0x1
  44424a:	xor    eax,eax
  44424c:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  444251:	xor    r13d,r13d
  444254:	add    rsp,0x38
  444258:	pop    rbx
  444259:	pop    rbp
  44425a:	pop    r12
  44425c:	mov    eax,r13d
  44425f:	pop    r13
  444261:	pop    r14
  444263:	pop    r15
  444265:	ret    
  444266:	nop    WORD PTR cs:[rax+rax*1+0x0]
  444270:	mov    rdi,rbp
  444273:	call   442df0 <xmlStrEqual@plt+0x3eeb0>
  444278:	mov    rdi,QWORD PTR [rbx]
  44427b:	mov    r14,rax
  44427e:	mov    QWORD PTR [rsp+0x28],rax
  444283:	call   40acb0 <xmlStrEqual@plt+0x6d70>
  444288:	lea    rdx,[rax+0x18]
  44428c:	mov    rcx,r14
  44428f:	mov    rsi,rax
  444292:	mov    rdi,rbp
  444295:	mov    r12,rax
  444298:	call   443e30 <xmlStrEqual@plt+0x3fef0>
  44429d:	mov    r13d,eax
  4442a0:	cmp    eax,0x1
  4442a3:	je     4442b0 <xmlStrEqual@plt+0x40370>
  4442a5:	xor    r13d,r13d
  4442a8:	jmp    444254 <xmlStrEqual@plt+0x40314>
  4442aa:	nop    WORD PTR [rax+rax*1+0x0]
  4442b0:	lea    rsi,[rip+0x11266]        # 45551d <xmlStrEqual@plt+0x515dd>
  4442b7:	mov    rdi,rbp
  4442ba:	call   403ef0 <cfg_size@plt>
  4442bf:	test   eax,eax
  4442c1:	je     444418 <xmlStrEqual@plt+0x404d8>
  4442c7:	lea    rsi,[rip+0x1124f]        # 45551d <xmlStrEqual@plt+0x515dd>
  4442ce:	mov    rdi,rbp
  4442d1:	call   403a10 <cfg_getsec@plt>
  4442d6:	mov    rdi,rax
  4442d9:	lea    rsi,[rip+0x11248]        # 455528 <xmlStrEqual@plt+0x515e8>
  4442e0:	mov    QWORD PTR [rsp+0x18],rax
  4442e5:	call   403ef0 <cfg_size@plt>
  4442ea:	mov    DWORD PTR [rsp+0x24],eax
  4442ee:	test   eax,eax
  4442f0:	je     4444c0 <xmlStrEqual@plt+0x40580>
  4442f6:	jle    4444d1 <xmlStrEqual@plt+0x40591>
  4442fc:	xor    r14d,r14d
  4442ff:	jmp    44434e <xmlStrEqual@plt+0x4040e>
  444301:	nop    DWORD PTR [rax+0x0]
  444308:	mov    rax,0x469e3c
  44430f:	mov    eax,DWORD PTR [rax]
  444311:	test   eax,eax
  444313:	jle    444340 <xmlStrEqual@plt+0x40400>
  444315:	lea    rsi,[rip+0x113dd]        # 4556f9 <xmlStrEqual@plt+0x517b9>
  44431c:	mov    rdi,rbx
  44431f:	call   403a70 <cfg_getstr@plt>
  444324:	mov    rdx,rax
  444327:	lea    rsi,[rip+0x11b02]        # 455e30 <xmlStrEqual@plt+0x51ef0>
  44432e:	mov    edi,0x5
  444333:	xor    eax,eax
  444335:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  44433a:	nop    WORD PTR [rax+rax*1+0x0]
  444340:	inc    r14d
  444343:	cmp    DWORD PTR [rsp+0x24],r14d
  444348:	je     4444d1 <xmlStrEqual@plt+0x40591>
  44434e:	mov    rdi,QWORD PTR [rsp+0x18]
  444353:	lea    rsi,[rip+0x111ce]        # 455528 <xmlStrEqual@plt+0x515e8>
  44435a:	mov    edx,r14d
  44435d:	call   403980 <cfg_getnsec@plt>
  444362:	mov    rdi,rax
  444365:	lea    rsi,[rip+0x1138d]        # 4556f9 <xmlStrEqual@plt+0x517b9>
  44436c:	mov    rbx,rax
  44436f:	call   403a70 <cfg_getstr@plt>
  444374:	test   rax,rax
  444377:	je     444540 <xmlStrEqual@plt+0x40600>
  44437d:	lea    rsi,[rip+0x10ed1]        # 455255 <xmlStrEqual@plt+0x51315>
  444384:	mov    rdi,rbx
  444387:	call   403940 <cfg_getint@plt>
  44438c:	lea    rsi,[rip+0x10ea7]        # 45523a <xmlStrEqual@plt+0x512fa>
  444393:	mov    rdi,rbx
  444396:	mov    QWORD PTR [rsp+0x10],rax
  44439b:	call   403940 <cfg_getint@plt>
  4443a0:	lea    rsi,[rip+0x10fff]        # 4553a6 <xmlStrEqual@plt+0x51466>
  4443a7:	mov    rdi,rbx
  4443aa:	mov    QWORD PTR [rsp+0x8],rax
  4443af:	call   403940 <cfg_getint@plt>
  4443b4:	lea    rsi,[rip+0x1133e]        # 4556f9 <xmlStrEqual@plt+0x517b9>
  4443bb:	mov    rdi,rbx
  4443be:	mov    r15,rax
  4443c1:	call   403a70 <cfg_getstr@plt>
  4443c6:	mov    r8,QWORD PTR [rsp+0x10]
  4443cb:	mov    rcx,QWORD PTR [rsp+0x8]
  4443d0:	mov    edx,r15d
  4443d3:	mov    rsi,rax
  4443d6:	mov    rdi,r12
  4443d9:	call   405db0 <xmlStrEqual@plt+0x1e70>
  4443de:	cmp    eax,0x1
  4443e1:	je     444308 <xmlStrEqual@plt+0x403c8>
  4443e7:	mov    rdi,rbx
  4443ea:	lea    rsi,[rip+0x11308]        # 4556f9 <xmlStrEqual@plt+0x517b9>
  4443f1:	call   403a70 <cfg_getstr@plt>
  4443f6:	mov    rdx,rax
  4443f9:	lea    rsi,[rip+0x11a50]        # 455e50 <xmlStrEqual@plt+0x51f10>
  444400:	mov    edi,0x2
  444405:	xor    eax,eax
  444407:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  44440c:	jmp    444340 <xmlStrEqual@plt+0x40400>
  444411:	nop    DWORD PTR [rax+0x0]
  444418:	lea    rsi,[rip+0x11113]        # 455532 <xmlStrEqual@plt+0x515f2>
  44441f:	mov    rdi,rbp
  444422:	call   403ef0 <cfg_size@plt>
  444427:	mov    DWORD PTR [rsp+0x10],eax
  44442b:	test   eax,eax
  44442d:	jle    4444a8 <xmlStrEqual@plt+0x40568>
  44442f:	xor    r15d,r15d
  444432:	nop    WORD PTR [rax+rax*1+0x0]
  444438:	mov    edx,r15d
  44443b:	lea    rsi,[rip+0x110f0]        # 455532 <xmlStrEqual@plt+0x515f2>
  444442:	mov    rdi,rbp
  444445:	call   403980 <cfg_getnsec@plt>
  44444a:	mov    rbx,rax
  44444d:	lea    rsi,[rip+0x110ea]        # 45553e <xmlStrEqual@plt+0x515fe>
  444454:	mov    rdi,rax
  444457:	call   403a70 <cfg_getstr@plt>
  44445c:	lea    rsi,[rip+0x10e44]        # 4552a7 <xmlStrEqual@plt+0x51367>
  444463:	mov    rdi,rbx
  444466:	mov    QWORD PTR [rsp+0x8],rax
  44446b:	call   403a70 <cfg_getstr@plt>
  444470:	lea    rsi,[rip+0x10f16]        # 45538d <xmlStrEqual@plt+0x5144d>
  444477:	mov    rdi,rbx
  44447a:	mov    r14,rax
  44447d:	call   403a70 <cfg_getstr@plt>
  444482:	mov    rcx,QWORD PTR [rsp+0x8]
  444487:	mov    rdx,r14
  44448a:	mov    rsi,rax
  44448d:	mov    rdi,r12
  444490:	call   407cb0 <xmlStrEqual@plt+0x3d70>
  444495:	cmp    eax,0x1
  444498:	jne    4442a5 <xmlStrEqual@plt+0x40365>
  44449e:	inc    r15d
  4444a1:	cmp    DWORD PTR [rsp+0x10],r15d
  4444a6:	jne    444438 <xmlStrEqual@plt+0x404f8>
  4444a8:	mov    rdi,QWORD PTR [rsp+0x28]
  4444ad:	call   43add0 <xmlStrEqual@plt+0x36e90>
  4444b2:	jmp    444254 <xmlStrEqual@plt+0x40314>
  4444b7:	nop    WORD PTR [rax+rax*1+0x0]
  4444c0:	lea    rsi,[rip+0x118f1]        # 455db8 <xmlStrEqual@plt+0x51e78>
  4444c7:	mov    edi,0x2
  4444cc:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  4444d1:	mov    rax,QWORD PTR [r12+0x68]
  4444d6:	cmp    QWORD PTR [rax+0x8],0x0
  4444db:	jne    444418 <xmlStrEqual@plt+0x404d8>
  4444e1:	xor    eax,eax
  4444e3:	lea    rsi,[rip+0x1198e]        # 455e78 <xmlStrEqual@plt+0x51f38>
  4444ea:	mov    edi,0x2
  4444ef:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  4444f4:	mov    rsi,QWORD PTR [r12+0x68]
  4444f9:	mov    rdi,QWORD PTR [r12+0x40]
  4444fe:	mov    rax,QWORD PTR [r12+0x38]
  444503:	xor    edx,edx
  444505:	call   QWORD PTR [rax+0x10]
  444508:	cmp    eax,0x1
  44450b:	je     444418 <xmlStrEqual@plt+0x404d8>
  444511:	lea    rsi,[rip+0x3340]        # 447858 <xmlStrEqual@plt+0x43918>
  444518:	mov    edi,0x2
  44451d:	xor    eax,eax
  44451f:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  444524:	mov    rdi,QWORD PTR [r12+0x68]
  444529:	xor    r13d,r13d
  44452c:	call   434b90 <xmlStrEqual@plt+0x30c50>
  444531:	jmp    444254 <xmlStrEqual@plt+0x40314>
  444536:	nop    WORD PTR cs:[rax+rax*1+0x0]
  444540:	lea    rsi,[rip+0x118a9]        # 455df0 <xmlStrEqual@plt+0x51eb0>
  444547:	mov    edi,0x2
  44454c:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  444551:	jmp    4442a5 <xmlStrEqual@plt+0x40365>
  444556:	nop    WORD PTR cs:[rax+rax*1+0x0]
  444560:	endbr64 
  444564:	push   r13
  444566:	push   r12
  444568:	push   rbp
  444569:	push   rbx
  44456a:	mov    rbx,rdi
  44456d:	xor    edi,edi
  44456f:	sub    rsp,0x18
  444573:	mov    rbp,0x475850
  44457a:	mov    rsi,rbp
  44457d:	call   408a70 <xmlStrEqual@plt+0x4b30>
  444582:	cmp    eax,0x1
  444585:	je     4445a1 <xmlStrEqual@plt+0x40661>
  444587:	xor    eax,eax
  444589:	lea    rsi,[rip+0x11938]        # 455ec8 <xmlStrEqual@plt+0x51f88>
  444590:	mov    edi,0x1
  444595:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  44459a:	xor    eax,eax
  44459c:	call   43f9f0 <xmlStrEqual@plt+0x3bab0>
  4445a1:	mov    rdi,rbx
  4445a4:	call   442df0 <xmlStrEqual@plt+0x3eeb0>
  4445a9:	mov    rdi,QWORD PTR [rbp+0x0]
  4445ad:	mov    r13,rax
  4445b0:	call   410cf0 <xmlStrEqual@plt+0xcdb0>
  4445b5:	lea    rsi,[rip+0x10f90]        # 45554c <xmlStrEqual@plt+0x5160c>
  4445bc:	mov    rdi,rbx
  4445bf:	mov    rbp,rax
  4445c2:	call   403b00 <cfg_getbool@plt>
  4445c7:	xor    edx,edx
  4445c9:	test   eax,eax
  4445cb:	setne  dl
  4445ce:	mov    DWORD PTR [rbp+0x80],edx
  4445d4:	je     4445f4 <xmlStrEqual@plt+0x406b4>
  4445d6:	mov    rax,0x4757c0
  4445dd:	mov    DWORD PTR [rax],0x2
  4445e3:	mov    rax,0x469e3c
  4445ea:	mov    eax,DWORD PTR [rax]
  4445ec:	test   eax,eax
  4445ee:	jg     4446a0 <xmlStrEqual@plt+0x40760>
  4445f4:	lea    r12,[rbp+0x18]
  4445f8:	mov    rcx,r13
  4445fb:	mov    rdx,r12
  4445fe:	mov    rsi,rbp
  444601:	mov    rdi,rbx
  444604:	call   443e30 <xmlStrEqual@plt+0x3fef0>
  444609:	cmp    eax,0x1
  44460c:	je     444620 <xmlStrEqual@plt+0x406e0>
  44460e:	xor    eax,eax
  444610:	add    rsp,0x18
  444614:	pop    rbx
  444615:	pop    rbp
  444616:	pop    r12
  444618:	pop    r13
  44461a:	ret    
  44461b:	nop    DWORD PTR [rax+rax*1+0x0]
  444620:	mov    rsi,rbp
  444623:	mov    rdi,rbx
  444626:	call   4436c0 <xmlStrEqual@plt+0x3f780>
  44462b:	cmp    eax,0x1
  44462e:	jne    44460e <xmlStrEqual@plt+0x406ce>
  444630:	mov    rsi,rbp
  444633:	mov    rdi,rbx
  444636:	call   443810 <xmlStrEqual@plt+0x3f8d0>
  44463b:	cmp    eax,0x1
  44463e:	jne    44460e <xmlStrEqual@plt+0x406ce>
  444640:	mov    rsi,rbp
  444643:	mov    rdi,rbx
  444646:	call   443b40 <xmlStrEqual@plt+0x3fc00>
  44464b:	cmp    eax,0x1
  44464e:	jne    44460e <xmlStrEqual@plt+0x406ce>
  444650:	mov    rsi,r12
  444653:	mov    rdi,rbx
  444656:	call   443c10 <xmlStrEqual@plt+0x3fcd0>
  44465b:	cmp    eax,0x1
  44465e:	jne    44460e <xmlStrEqual@plt+0x406ce>
  444660:	mov    rdx,r13
  444663:	mov    rsi,rbp
  444666:	mov    rdi,rbx
  444669:	call   443d00 <xmlStrEqual@plt+0x3fdc0>
  44466e:	cmp    eax,0x1
  444671:	jne    44460e <xmlStrEqual@plt+0x406ce>
  444673:	mov    rdi,rbp
  444676:	call   407e50 <xmlStrEqual@plt+0x3f10>
  44467b:	cmp    eax,0x1
  44467e:	je     4446b8 <xmlStrEqual@plt+0x40778>
  444680:	lea    rsi,[rip+0x10edb]        # 455562 <xmlStrEqual@plt+0x51622>
  444687:	mov    edi,0x2
  44468c:	xor    eax,eax
  44468e:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  444693:	jmp    44460e <xmlStrEqual@plt+0x406ce>
  444698:	nop    DWORD PTR [rax+rax*1+0x0]
  4446a0:	lea    rsi,[rip+0x11841]        # 455ee8 <xmlStrEqual@plt+0x51fa8>
  4446a7:	mov    edi,0x5
  4446ac:	xor    eax,eax
  4446ae:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  4446b3:	jmp    4445f4 <xmlStrEqual@plt+0x406b4>
  4446b8:	xor    esi,esi
  4446ba:	mov    rdi,rbp
  4446bd:	mov    DWORD PTR [rsp+0xc],eax
  4446c1:	call   407e40 <xmlStrEqual@plt+0x3f00>
  4446c6:	mov    rdi,r13
  4446c9:	call   43add0 <xmlStrEqual@plt+0x36e90>
  4446ce:	mov    eax,DWORD PTR [rsp+0xc]
  4446d2:	jmp    444610 <xmlStrEqual@plt+0x406d0>
  4446d7:	nop    WORD PTR [rax+rax*1+0x0]
  4446e0:	endbr64 
  4446e4:	push   r13
  4446e6:	push   r12
  4446e8:	push   rbp
  4446e9:	push   rbx
  4446ea:	mov    rbx,rdi
  4446ed:	mov    edi,0x3
  4446f2:	sub    rsp,0x18
  4446f6:	mov    rbp,0x475850
  4446fd:	mov    rsi,rbp
  444700:	call   408a70 <xmlStrEqual@plt+0x4b30>
  444705:	cmp    eax,0x1
  444708:	je     444724 <xmlStrEqual@plt+0x407e4>
  44470a:	xor    eax,eax
  44470c:	lea    rsi,[rip+0x1180d]        # 455f20 <xmlStrEqual@plt+0x51fe0>
  444713:	mov    edi,0x1
  444718:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  44471d:	xor    eax,eax
  44471f:	call   43f9f0 <xmlStrEqual@plt+0x3bab0>
  444724:	mov    rdi,rbx
  444727:	call   442df0 <xmlStrEqual@plt+0x3eeb0>
  44472c:	mov    rdi,QWORD PTR [rbp+0x0]
  444730:	mov    r13,rax
  444733:	call   410cf0 <xmlStrEqual@plt+0xcdb0>
  444738:	lea    rsi,[rip+0x10e0d]        # 45554c <xmlStrEqual@plt+0x5160c>
  44473f:	mov    rdi,rbx
  444742:	mov    rbp,rax
  444745:	call   403b00 <cfg_getbool@plt>
  44474a:	xor    edx,edx
  44474c:	test   eax,eax
  44474e:	setne  dl
  444751:	mov    DWORD PTR [rbp+0x80],edx
  444757:	je     444777 <xmlStrEqual@plt+0x40837>
  444759:	mov    rax,0x4757c0
  444760:	mov    DWORD PTR [rax],0x2
  444766:	mov    rax,0x469e3c
  44476d:	mov    edx,DWORD PTR [rax]
  44476f:	test   edx,edx
  444771:	jg     444828 <xmlStrEqual@plt+0x408e8>
  444777:	lea    r12,[rbp+0x18]
  44477b:	mov    rcx,r13
  44477e:	mov    rdx,r12
  444781:	mov    rsi,rbp
  444784:	mov    rdi,rbx
  444787:	call   443e30 <xmlStrEqual@plt+0x3fef0>
  44478c:	cmp    eax,0x1
  44478f:	je     4447a0 <xmlStrEqual@plt+0x40860>
  444791:	xor    eax,eax
  444793:	add    rsp,0x18
  444797:	pop    rbx
  444798:	pop    rbp
  444799:	pop    r12
  44479b:	pop    r13
  44479d:	ret    
  44479e:	xchg   ax,ax
  4447a0:	mov    rsi,rbp
  4447a3:	mov    rdi,rbx
  4447a6:	call   4436c0 <xmlStrEqual@plt+0x3f780>
  4447ab:	cmp    eax,0x1
  4447ae:	jne    444791 <xmlStrEqual@plt+0x40851>
  4447b0:	mov    rsi,rbp
  4447b3:	mov    rdi,rbx
  4447b6:	call   443810 <xmlStrEqual@plt+0x3f8d0>
  4447bb:	cmp    eax,0x1
  4447be:	jne    444791 <xmlStrEqual@plt+0x40851>
  4447c0:	mov    rsi,rbp
  4447c3:	mov    rdi,rbx
  4447c6:	call   443b40 <xmlStrEqual@plt+0x3fc00>
  4447cb:	cmp    eax,0x1
  4447ce:	jne    444791 <xmlStrEqual@plt+0x40851>
  4447d0:	mov    rsi,r12
  4447d3:	mov    rdi,rbx
  4447d6:	call   443c10 <xmlStrEqual@plt+0x3fcd0>
  4447db:	cmp    eax,0x1
  4447de:	jne    444791 <xmlStrEqual@plt+0x40851>
  4447e0:	mov    rax,QWORD PTR [rbp+0x60]
  4447e4:	mov    eax,DWORD PTR [rax+0x18]
  4447e7:	test   eax,eax
  4447e9:	je     444840 <xmlStrEqual@plt+0x40900>
  4447eb:	mov    rdx,r13
  4447ee:	mov    rsi,rbp
  4447f1:	mov    rdi,rbx
  4447f4:	call   443d00 <xmlStrEqual@plt+0x3fdc0>
  4447f9:	cmp    eax,0x1
  4447fc:	jne    444791 <xmlStrEqual@plt+0x40851>
  4447fe:	mov    rdi,rbp
  444801:	call   407e50 <xmlStrEqual@plt+0x3f10>
  444806:	cmp    eax,0x1
  444809:	je     44484a <xmlStrEqual@plt+0x4090a>
  44480b:	lea    rsi,[rip+0x10d50]        # 455562 <xmlStrEqual@plt+0x51622>
  444812:	mov    edi,0x2
  444817:	xor    eax,eax
  444819:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  44481e:	jmp    444791 <xmlStrEqual@plt+0x40851>
  444823:	nop    DWORD PTR [rax+rax*1+0x0]
  444828:	lea    rsi,[rip+0x116b9]        # 455ee8 <xmlStrEqual@plt+0x51fa8>
  44482f:	mov    edi,0x5
  444834:	xor    eax,eax
  444836:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  44483b:	jmp    444777 <xmlStrEqual@plt+0x40837>
  444840:	mov    rdi,r12
  444843:	call   408110 <xmlStrEqual@plt+0x41d0>
  444848:	jmp    4447eb <xmlStrEqual@plt+0x408ab>
  44484a:	xor    esi,esi
  44484c:	mov    rdi,rbp
  44484f:	mov    DWORD PTR [rsp+0xc],eax
  444853:	call   407e40 <xmlStrEqual@plt+0x3f00>
  444858:	mov    rdi,r13
  44485b:	call   43add0 <xmlStrEqual@plt+0x36e90>
  444860:	mov    eax,DWORD PTR [rsp+0xc]
  444864:	jmp    444793 <xmlStrEqual@plt+0x40853>
  444869:	nop    DWORD PTR [rax+0x0]
  444870:	endbr64 
  444874:	push   r15
  444876:	push   r14
  444878:	push   r13
  44487a:	push   r12
  44487c:	push   rbp
  44487d:	push   rbx
  44487e:	sub    rsp,0x38
  444882:	mov    rbx,0x475850
  444889:	mov    QWORD PTR [rsp],rdi
  44488d:	mov    rsi,rbx
  444890:	mov    edi,0x1
  444895:	call   408a70 <xmlStrEqual@plt+0x4b30>
  44489a:	cmp    eax,0x1
  44489d:	je     4448b9 <xmlStrEqual@plt+0x40979>
  44489f:	xor    eax,eax
  4448a1:	lea    rsi,[rip+0x116a0]        # 455f48 <xmlStrEqual@plt+0x52008>
  4448a8:	mov    edi,0x1
  4448ad:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  4448b2:	xor    eax,eax
  4448b4:	call   43f9f0 <xmlStrEqual@plt+0x3bab0>
  4448b9:	mov    rdi,QWORD PTR [rbx]
  4448bc:	call   415230 <xmlStrEqual@plt+0x112f0>
  4448c1:	mov    rbx,QWORD PTR [rsp]
  4448c5:	mov    r15,rax
  4448c8:	mov    rdi,rbx
  4448cb:	call   442df0 <xmlStrEqual@plt+0x3eeb0>
  4448d0:	lea    rsi,[rip+0x10ca5]        # 45557c <xmlStrEqual@plt+0x5163c>
  4448d7:	mov    rdi,rbx
  4448da:	mov    QWORD PTR [rsp+0x20],rax
  4448df:	call   403a70 <cfg_getstr@plt>
  4448e4:	test   rax,rax
  4448e7:	je     444e25 <xmlStrEqual@plt+0x40ee5>
  4448ed:	mov    rdi,rax
  4448f0:	call   43ee00 <xmlStrEqual@plt+0x3aec0>
  4448f5:	mov    rbx,rax
  4448f8:	test   rax,rax
  4448fb:	je     444e49 <xmlStrEqual@plt+0x40f09>
  444901:	mov    esi,0x2
  444906:	mov    rdi,rax
  444909:	call   43f490 <xmlStrEqual@plt+0x3b550>
  44490e:	mov    esi,0xa
  444913:	mov    rdi,rbx
  444916:	call   43f490 <xmlStrEqual@plt+0x3b550>
  44491b:	mov    QWORD PTR [rsp+0x28],r15
  444920:	xor    r14d,r14d
  444923:	nop    DWORD PTR [rax+rax*1+0x0]
  444928:	mov    rdi,QWORD PTR [rsp]
  44492c:	lea    rsi,[rip+0x10c57]        # 45558a <xmlStrEqual@plt+0x5164a>
  444933:	call   403ef0 <cfg_size@plt>
  444938:	cmp    eax,r14d
  44493b:	jbe    444bb3 <xmlStrEqual@plt+0x40c73>
  444941:	mov    rdi,QWORD PTR [rsp]
  444945:	lea    rsi,[rip+0x10c3e]        # 45558a <xmlStrEqual@plt+0x5164a>
  44494c:	mov    edx,r14d
  44494f:	call   403980 <cfg_getnsec@plt>
  444954:	mov    rdi,rax
  444957:	lea    rsi,[rip+0x10a1f]        # 45537d <xmlStrEqual@plt+0x5143d>
  44495e:	mov    rbx,rax
  444961:	call   403a70 <cfg_getstr@plt>
  444966:	test   rax,rax
  444969:	je     444b8f <xmlStrEqual@plt+0x40c4f>
  44496f:	lea    rsi,[rip+0x10931]        # 4552a7 <xmlStrEqual@plt+0x51367>
  444976:	mov    rdi,rbx
  444979:	call   403a70 <cfg_getstr@plt>
  44497e:	test   rax,rax
  444981:	je     444b8f <xmlStrEqual@plt+0x40c4f>
  444987:	call   42dc90 <xmlStrEqual@plt+0x29d50>
  44498c:	lea    rsi,[rip+0x10c01]        # 455594 <xmlStrEqual@plt+0x51654>
  444993:	mov    rdi,rbx
  444996:	mov    r13,rax
  444999:	call   403ef0 <cfg_size@plt>
  44499e:	mov    ebp,eax
  4449a0:	test   eax,eax
  4449a2:	jle    4449d6 <xmlStrEqual@plt+0x40a96>
  4449a4:	xor    r15d,r15d
  4449a7:	lea    r12,[rip+0x10be6]        # 455594 <xmlStrEqual@plt+0x51654>
  4449ae:	xchg   ax,ax
  4449b0:	mov    edx,r15d
  4449b3:	mov    rsi,r12
  4449b6:	mov    rdi,rbx
  4449b9:	call   4038b0 <cfg_getnstr@plt>
  4449be:	test   rax,rax
  4449c1:	je     4449ce <xmlStrEqual@plt+0x40a8e>
  4449c3:	mov    rsi,r13
  4449c6:	mov    rdi,rax
  4449c9:	call   42de80 <xmlStrEqual@plt+0x29f40>
  4449ce:	inc    r15d
  4449d1:	cmp    ebp,r15d
  4449d4:	jne    4449b0 <xmlStrEqual@plt+0x40a70>
  4449d6:	lea    rsi,[rip+0x10bc4]        # 4555a1 <xmlStrEqual@plt+0x51661>
  4449dd:	mov    rdi,rbx
  4449e0:	call   403b00 <cfg_getbool@plt>
  4449e5:	lea    rsi,[rip+0x10bcb]        # 4555b7 <xmlStrEqual@plt+0x51677>
  4449ec:	mov    rdi,rbx
  4449ef:	mov    DWORD PTR [rsp+0x1c],eax
  4449f3:	call   403b00 <cfg_getbool@plt>
  4449f8:	lea    rsi,[rip+0x108d0]        # 4552cf <xmlStrEqual@plt+0x5138f>
  4449ff:	mov    rdi,rbx
  444a02:	mov    r12d,eax
  444a05:	call   403b00 <cfg_getbool@plt>
  444a0a:	lea    rsi,[rip+0x10bac]        # 4555bd <xmlStrEqual@plt+0x5167d>
  444a11:	mov    rdi,rbx
  444a14:	mov    ebp,eax
  444a16:	call   403b00 <cfg_getbool@plt>
  444a1b:	lea    rsi,[rip+0x10885]        # 4552a7 <xmlStrEqual@plt+0x51367>
  444a22:	mov    rdi,rbx
  444a25:	mov    DWORD PTR [rsp+0x18],eax
  444a29:	call   403a70 <cfg_getstr@plt>
  444a2e:	lea    rsi,[rip+0x10864]        # 455299 <xmlStrEqual@plt+0x51359>
  444a35:	mov    rdi,rbx
  444a38:	mov    QWORD PTR [rsp+0x10],rax
  444a3d:	call   403940 <cfg_getint@plt>
  444a42:	lea    rsi,[rip+0xa7ff]        # 44f248 <xmlStrEqual@plt+0x4b308>
  444a49:	mov    rdi,rbx
  444a4c:	mov    r15,rax
  444a4f:	call   403940 <cfg_getint@plt>
  444a54:	lea    rsi,[rip+0x10922]        # 45537d <xmlStrEqual@plt+0x5143d>
  444a5b:	mov    rdi,rbx
  444a5e:	mov    QWORD PTR [rsp+0x8],rax
  444a63:	call   403a70 <cfg_getstr@plt>
  444a68:	mov    r9d,DWORD PTR [rsp+0x18]
  444a6d:	test   r9d,r9d
  444a70:	setne  r9b
  444a74:	sub    rsp,0x8
  444a78:	push   QWORD PTR [rsp+0x28]
  444a7c:	xor    esi,esi
  444a7e:	movzx  r9d,r9b
  444a82:	push   r13
  444a84:	mov    r10d,DWORD PTR [rsp+0x34]
  444a89:	test   r10d,r10d
  444a8c:	setne  sil
  444a90:	push   rsi
  444a91:	xor    esi,esi
  444a93:	test   r12d,r12d
  444a96:	setne  sil
  444a9a:	push   rsi
  444a9b:	xor    ecx,ecx
  444a9d:	test   ebp,ebp
  444a9f:	setne  cl
  444aa2:	push   rcx
  444aa3:	mov    ecx,r15d
  444aa6:	mov    rsi,rax
  444aa9:	mov    r15,QWORD PTR [rsp+0x58]
  444aae:	mov    r8,QWORD PTR [rsp+0x40]
  444ab3:	mov    rdx,QWORD PTR [rsp+0x38]
  444ab8:	mov    rdi,r15
  444abb:	call   406370 <xmlStrEqual@plt+0x2430>
  444ac0:	mov    rbp,rax
  444ac3:	add    rsp,0x30
  444ac7:	mov    rdi,r13
  444aca:	call   42e2b0 <xmlStrEqual@plt+0x2a370>
  444acf:	test   rbp,rbp
  444ad2:	je     444b68 <xmlStrEqual@plt+0x40c28>
  444ad8:	mov    rdi,QWORD PTR [r15+0x18]
  444adc:	mov    rsi,QWORD PTR [rbp+0x0]
  444ae0:	call   432d40 <xmlStrEqual@plt+0x2ee00>
  444ae5:	test   rax,rax
  444ae8:	mov    rax,0x469e3c
  444aef:	je     444b30 <xmlStrEqual@plt+0x40bf0>
  444af1:	mov    ecx,DWORD PTR [rax]
  444af3:	test   ecx,ecx
  444af5:	jle    444b16 <xmlStrEqual@plt+0x40bd6>
  444af7:	mov    rdi,QWORD PTR [rbp+0x0]
  444afb:	call   424d40 <xmlStrEqual@plt+0x20e00>
  444b00:	mov    rdx,rax
  444b03:	lea    rsi,[rip+0x11536]        # 456040 <xmlStrEqual@plt+0x52100>
  444b0a:	mov    edi,0x5
  444b0f:	xor    eax,eax
  444b11:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  444b16:	mov    rdi,rbp
  444b19:	call   430da0 <xmlStrEqual@plt+0x2ce60>
  444b1e:	inc    r14d
  444b21:	jmp    444928 <xmlStrEqual@plt+0x409e8>
  444b26:	nop    WORD PTR cs:[rax+rax*1+0x0]
  444b30:	mov    edx,DWORD PTR [rax]
  444b32:	test   edx,edx
  444b34:	jle    444b55 <xmlStrEqual@plt+0x40c15>
  444b36:	mov    rdi,QWORD PTR [rbp+0x0]
  444b3a:	call   424d40 <xmlStrEqual@plt+0x20e00>
  444b3f:	mov    rdx,rax
  444b42:	lea    rsi,[rip+0x11537]        # 456080 <xmlStrEqual@plt+0x52140>
  444b49:	mov    edi,0x5
  444b4e:	xor    eax,eax
  444b50:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  444b55:	mov    rdi,QWORD PTR [rsp+0x28]
  444b5a:	mov    rsi,rbp
  444b5d:	call   413080 <xmlStrEqual@plt+0xf140>
  444b62:	jmp    444b1e <xmlStrEqual@plt+0x40bde>
  444b64:	nop    DWORD PTR [rax+0x0]
  444b68:	mov    rdi,rbx
  444b6b:	lea    rsi,[rip+0x1080b]        # 45537d <xmlStrEqual@plt+0x5143d>
  444b72:	call   403a70 <cfg_getstr@plt>
  444b77:	mov    rdx,rax
  444b7a:	lea    rsi,[rip+0x11537]        # 4560b8 <xmlStrEqual@plt+0x52178>
  444b81:	mov    edi,0x2
  444b86:	xor    eax,eax
  444b88:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  444b8d:	jmp    444b1e <xmlStrEqual@plt+0x40bde>
  444b8f:	xor    eax,eax
  444b91:	lea    rsi,[rip+0x11458]        # 455ff0 <xmlStrEqual@plt+0x520b0>
  444b98:	mov    edi,0x2
  444b9d:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  444ba2:	xor    eax,eax
  444ba4:	add    rsp,0x38
  444ba8:	pop    rbx
  444ba9:	pop    rbp
  444baa:	pop    r12
  444bac:	pop    r13
  444bae:	pop    r14
  444bb0:	pop    r15
  444bb2:	ret    
  444bb3:	mov    r14,QWORD PTR [rsp]
  444bb7:	lea    r13,[rip+0x10a15]        # 4555d3 <xmlStrEqual@plt+0x51693>
  444bbe:	mov    rsi,r13
  444bc1:	mov    rdi,r14
  444bc4:	xor    ebp,ebp
  444bc6:	mov    r15,QWORD PTR [rsp+0x28]
  444bcb:	call   403ef0 <cfg_size@plt>
  444bd0:	cmp    eax,ebp
  444bd2:	jbe    444c68 <xmlStrEqual@plt+0x40d28>
  444bd8:	nop    DWORD PTR [rax+rax*1+0x0]
  444be0:	mov    edx,ebp
  444be2:	mov    rsi,r13
  444be5:	mov    rdi,r14
  444be8:	call   403980 <cfg_getnsec@plt>
  444bed:	mov    rdx,QWORD PTR [rsp+0x20]
  444bf2:	xor    r8d,r8d
  444bf5:	xor    ecx,ecx
  444bf7:	mov    rsi,r15
  444bfa:	mov    rdi,rax
  444bfd:	mov    r12,rax
  444c00:	call   443640 <xmlStrEqual@plt+0x3f700>
  444c05:	mov    rbx,rax
  444c08:	test   rax,rax
  444c0b:	je     444e6d <xmlStrEqual@plt+0x40f2d>
  444c11:	mov    rdi,QWORD PTR [r15+0x20]
  444c15:	mov    rsi,rax
  444c18:	call   432d60 <xmlStrEqual@plt+0x2ee20>
  444c1d:	test   rax,rax
  444c20:	je     444dc8 <xmlStrEqual@plt+0x40e88>
  444c26:	lea    rsi,[rip+0x10750]        # 45537d <xmlStrEqual@plt+0x5143d>
  444c2d:	mov    rdi,r12
  444c30:	call   403a70 <cfg_getstr@plt>
  444c35:	mov    rdx,rax
  444c38:	lea    rsi,[rip+0x11571]        # 4561b0 <xmlStrEqual@plt+0x52270>
  444c3f:	mov    edi,0x2
  444c44:	xor    eax,eax
  444c46:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  444c4b:	mov    rdi,rbx
  444c4e:	call   42b110 <xmlStrEqual@plt+0x271d0>
  444c53:	inc    ebp
  444c55:	mov    rsi,r13
  444c58:	mov    rdi,r14
  444c5b:	call   403ef0 <cfg_size@plt>
  444c60:	cmp    eax,ebp
  444c62:	ja     444be0 <xmlStrEqual@plt+0x40ca0>
  444c68:	xor    ebx,ebx
  444c6a:	lea    r12,[rip+0x1097c]        # 4555ed <xmlStrEqual@plt+0x516ad>
  444c71:	mov    QWORD PTR [rsp+0x8],r15
  444c76:	mov    r13,QWORD PTR [rsp]
  444c7a:	jmp    444ce1 <xmlStrEqual@plt+0x40da1>
  444c7c:	nop    DWORD PTR [rax+0x0]
  444c80:	mov    edx,ebx
  444c82:	mov    rsi,r12
  444c85:	mov    rdi,r13
  444c88:	call   403980 <cfg_getnsec@plt>
  444c8d:	mov    rbp,rax
  444c90:	lea    rsi,[rip+0x10610]        # 4552a7 <xmlStrEqual@plt+0x51367>
  444c97:	mov    rdi,rax
  444c9a:	call   403a70 <cfg_getstr@plt>
  444c9f:	lea    rsi,[rip+0x106e7]        # 45538d <xmlStrEqual@plt+0x5144d>
  444ca6:	mov    rdi,rbp
  444ca9:	mov    r15,rax
  444cac:	call   403a70 <cfg_getstr@plt>
  444cb1:	lea    rsi,[rip+0x10663]        # 45531b <xmlStrEqual@plt+0x513db>
  444cb8:	mov    rdi,rbp
  444cbb:	mov    r14,rax
  444cbe:	call   403a70 <cfg_getstr@plt>
  444cc3:	mov    rdi,QWORD PTR [rsp+0x8]
  444cc8:	mov    rcx,r15
  444ccb:	mov    rdx,r14
  444cce:	mov    rsi,rax
  444cd1:	call   4078b0 <xmlStrEqual@plt+0x3970>
  444cd6:	cmp    eax,0x1
  444cd9:	jne    444ea8 <xmlStrEqual@plt+0x40f68>
  444cdf:	inc    ebx
  444ce1:	mov    rsi,r12
  444ce4:	mov    rdi,r13
  444ce7:	call   403ef0 <cfg_size@plt>
  444cec:	cmp    eax,ebx
  444cee:	ja     444c80 <xmlStrEqual@plt+0x40d40>
  444cf0:	xor    r13d,r13d
  444cf3:	nop    DWORD PTR [rax+rax*1+0x0]
  444cf8:	mov    rdi,QWORD PTR [rsp]
  444cfc:	lea    rsi,[rip+0x108f6]        # 4555f9 <xmlStrEqual@plt+0x516b9>
  444d03:	call   403ef0 <cfg_size@plt>
  444d08:	cmp    eax,r13d
  444d0b:	jbe    444eb9 <xmlStrEqual@plt+0x40f79>
  444d11:	mov    rdi,QWORD PTR [rsp]
  444d15:	mov    edx,r13d
  444d18:	lea    rsi,[rip+0x108da]        # 4555f9 <xmlStrEqual@plt+0x516b9>
  444d1f:	call   403980 <cfg_getnsec@plt>
  444d24:	mov    rbx,rax
  444d27:	call   42dc90 <xmlStrEqual@plt+0x29d50>
  444d2c:	lea    rsi,[rip+0x108d2]        # 455605 <xmlStrEqual@plt+0x516c5>
  444d33:	mov    rdi,rbx
  444d36:	mov    r14,rax
  444d39:	call   403ef0 <cfg_size@plt>
  444d3e:	mov    ebp,eax
  444d40:	test   eax,eax
  444d42:	jle    444d76 <xmlStrEqual@plt+0x40e36>
  444d44:	xor    r15d,r15d
  444d47:	lea    r12,[rip+0x108b7]        # 455605 <xmlStrEqual@plt+0x516c5>
  444d4e:	xchg   ax,ax
  444d50:	mov    edx,r15d
  444d53:	mov    rsi,r12
  444d56:	mov    rdi,rbx
  444d59:	call   4038b0 <cfg_getnstr@plt>
  444d5e:	test   rax,rax
  444d61:	je     444d6e <xmlStrEqual@plt+0x40e2e>
  444d63:	mov    rsi,r14
  444d66:	mov    rdi,rax
  444d69:	call   42dcf0 <xmlStrEqual@plt+0x29db0>
  444d6e:	inc    r15d
  444d71:	cmp    ebp,r15d
  444d74:	jne    444d50 <xmlStrEqual@plt+0x40e10>
  444d76:	lea    rsi,[rip+0x1049a]        # 455217 <xmlStrEqual@plt+0x512d7>
  444d7d:	mov    rdi,rbx
  444d80:	call   403940 <cfg_getint@plt>
  444d85:	lea    rsi,[rip+0x1058f]        # 45531b <xmlStrEqual@plt+0x513db>
  444d8c:	mov    rdi,rbx
  444d8f:	mov    rbp,rax
  444d92:	call   403a70 <cfg_getstr@plt>
  444d97:	mov    rdi,QWORD PTR [rsp+0x8]
  444d9c:	mov    rcx,r14
  444d9f:	mov    edx,ebp
  444da1:	mov    rsi,rax
  444da4:	call   407a80 <xmlStrEqual@plt+0x3b40>
  444da9:	mov    rdi,r14
  444dac:	cmp    eax,0x1
  444daf:	jne    444ea3 <xmlStrEqual@plt+0x40f63>
  444db5:	call   42e2b0 <xmlStrEqual@plt+0x2a370>
  444dba:	inc    r13d
  444dbd:	jmp    444cf8 <xmlStrEqual@plt+0x40db8>
  444dc2:	nop    WORD PTR [rax+rax*1+0x0]
  444dc8:	mov    rsi,rbx
  444dcb:	mov    rdi,r15
  444dce:	call   4130c0 <xmlStrEqual@plt+0xf180>
  444dd3:	cmp    eax,0x1
  444dd6:	jne    444e0e <xmlStrEqual@plt+0x40ece>
  444dd8:	mov    rax,0x469e3c
  444ddf:	mov    eax,DWORD PTR [rax]
  444de1:	test   eax,eax
  444de3:	jle    444c53 <xmlStrEqual@plt+0x40d13>
  444de9:	mov    rdi,rbx
  444dec:	call   424d40 <xmlStrEqual@plt+0x20e00>
  444df1:	mov    rdx,rax
  444df4:	lea    rsi,[rip+0x1131d]        # 456118 <xmlStrEqual@plt+0x521d8>
  444dfb:	mov    edi,0x5
  444e00:	xor    eax,eax
  444e02:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  444e07:	inc    ebp
  444e09:	jmp    444c55 <xmlStrEqual@plt+0x40d15>
  444e0e:	mov    rdi,rbx
  444e11:	call   424d40 <xmlStrEqual@plt+0x20e00>
  444e16:	mov    rdx,rax
  444e19:	lea    rsi,[rip+0x11340]        # 456160 <xmlStrEqual@plt+0x52220>
  444e20:	jmp    444c3f <xmlStrEqual@plt+0x40cff>
  444e25:	xor    eax,eax
  444e27:	lea    rsi,[rip+0x11182]        # 455fb0 <xmlStrEqual@plt+0x52070>
  444e2e:	mov    edi,0x2
  444e33:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  444e38:	add    rsp,0x38
  444e3c:	pop    rbx
  444e3d:	pop    rbp
  444e3e:	pop    r12
  444e40:	pop    r13
  444e42:	pop    r14
  444e44:	xor    eax,eax
  444e46:	pop    r15
  444e48:	ret    
  444e49:	xor    eax,eax
  444e4b:	lea    rsi,[rip+0x11116]        # 455f68 <xmlStrEqual@plt+0x52028>
  444e52:	mov    edi,0x2
  444e57:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  444e5c:	add    rsp,0x38
  444e60:	pop    rbx
  444e61:	pop    rbp
  444e62:	pop    r12
  444e64:	pop    r13
  444e66:	pop    r14
  444e68:	xor    eax,eax
  444e6a:	pop    r15
  444e6c:	ret    
  444e6d:	mov    rdi,r12
  444e70:	lea    rsi,[rip+0x10506]        # 45537d <xmlStrEqual@plt+0x5143d>
  444e77:	call   403a70 <cfg_getstr@plt>
  444e7c:	mov    rdx,rax
  444e7f:	lea    rsi,[rip+0x11262]        # 4560e8 <xmlStrEqual@plt+0x521a8>
  444e86:	xor    eax,eax
  444e88:	mov    edi,0x2
  444e8d:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  444e92:	add    rsp,0x38
  444e96:	pop    rbx
  444e97:	pop    rbp
  444e98:	pop    r12
  444e9a:	pop    r13
  444e9c:	pop    r14
  444e9e:	xor    eax,eax
  444ea0:	pop    r15
  444ea2:	ret    
  444ea3:	call   42e2b0 <xmlStrEqual@plt+0x2a370>
  444ea8:	add    rsp,0x38
  444eac:	pop    rbx
  444ead:	pop    rbp
  444eae:	pop    r12
  444eb0:	pop    r13
  444eb2:	pop    r14
  444eb4:	xor    eax,eax
  444eb6:	pop    r15
  444eb8:	ret    
  444eb9:	mov    rdi,QWORD PTR [rsp]
  444ebd:	mov    r15,QWORD PTR [rsp+0x8]
  444ec2:	lea    rsi,[rip+0x10741]        # 45560a <xmlStrEqual@plt+0x516ca>
  444ec9:	call   403a70 <cfg_getstr@plt>
  444ece:	mov    rsi,rax
  444ed1:	mov    rdi,r15
  444ed4:	call   407c30 <xmlStrEqual@plt+0x3cf0>
  444ed9:	cmp    eax,0x1
  444edc:	jne    444ea8 <xmlStrEqual@plt+0x40f68>
  444ede:	mov    rdi,QWORD PTR [rsp+0x20]
  444ee3:	mov    DWORD PTR [rsp],eax
  444ee6:	call   43add0 <xmlStrEqual@plt+0x36e90>
  444eeb:	mov    eax,DWORD PTR [rsp]
  444eee:	jmp    444ba4 <xmlStrEqual@plt+0x40c64>
  444ef3:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  444efe:	xchg   ax,ax
  444f00:	endbr64 
  444f04:	push   r15
  444f06:	push   r14
  444f08:	push   r13
  444f0a:	push   r12
  444f0c:	push   rbp
  444f0d:	push   rbx
  444f0e:	sub    rsp,0x28
  444f12:	mov    rbx,0x475850
  444f19:	mov    QWORD PTR [rsp+0x10],rdi
  444f1e:	mov    rsi,rbx
  444f21:	mov    edi,0x4
  444f26:	call   408a70 <xmlStrEqual@plt+0x4b30>
  444f2b:	cmp    eax,0x1
  444f2e:	je     444f4a <xmlStrEqual@plt+0x4100a>
  444f30:	xor    eax,eax
  444f32:	lea    rsi,[rip+0x112c7]        # 456200 <xmlStrEqual@plt+0x522c0>
  444f39:	mov    edi,0x1
  444f3e:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  444f43:	xor    eax,eax
  444f45:	call   43f9f0 <xmlStrEqual@plt+0x3bab0>
  444f4a:	mov    r15,QWORD PTR [rbx]
  444f4d:	mov    rbx,QWORD PTR [rsp+0x10]
  444f52:	mov    rdi,rbx
  444f55:	call   442df0 <xmlStrEqual@plt+0x3eeb0>
  444f5a:	lea    rsi,[rip+0x1061b]        # 45557c <xmlStrEqual@plt+0x5163c>
  444f61:	mov    rdi,rbx
  444f64:	mov    QWORD PTR [rsp+0x8],rax
  444f69:	call   403a70 <cfg_getstr@plt>
  444f6e:	test   rax,rax
  444f71:	je     445372 <xmlStrEqual@plt+0x41432>
  444f77:	mov    rdi,rax
  444f7a:	call   43ee00 <xmlStrEqual@plt+0x3aec0>
  444f7f:	mov    rbx,rax
  444f82:	test   rax,rax
  444f85:	je     4453ba <xmlStrEqual@plt+0x4147a>
  444f8b:	mov    esi,0x2
  444f90:	mov    rdi,rax
  444f93:	call   43f490 <xmlStrEqual@plt+0x3b550>
  444f98:	mov    esi,0xa
  444f9d:	mov    rdi,rbx
  444fa0:	call   43f490 <xmlStrEqual@plt+0x3b550>
  444fa5:	mov    r13,QWORD PTR [rsp+0x10]
  444faa:	lea    r12,[rip+0x10670]        # 455621 <xmlStrEqual@plt+0x516e1>
  444fb1:	mov    rsi,r12
  444fb4:	mov    rdi,r13
  444fb7:	xor    ebp,ebp
  444fb9:	call   403ef0 <cfg_size@plt>
  444fbe:	cmp    eax,ebp
  444fc0:	jbe    445095 <xmlStrEqual@plt+0x41155>
  444fc6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  444fd0:	mov    rsi,r12
  444fd3:	mov    rdi,r13
  444fd6:	mov    edx,ebp
  444fd8:	call   403980 <cfg_getnsec@plt>
  444fdd:	mov    rdi,rax
  444fe0:	lea    rsi,[rip+0x10396]        # 45537d <xmlStrEqual@plt+0x5143d>
  444fe7:	mov    rbx,rax
  444fea:	call   403a70 <cfg_getstr@plt>
  444fef:	test   rax,rax
  444ff2:	je     445350 <xmlStrEqual@plt+0x41410>
  444ff8:	lea    rsi,[rip+0xa249]        # 44f248 <xmlStrEqual@plt+0x4b308>
  444fff:	mov    rdi,rbx
  445002:	call   403940 <cfg_getint@plt>
  445007:	lea    rsi,[rip+0x1036f]        # 45537d <xmlStrEqual@plt+0x5143d>
  44500e:	mov    rdi,rbx
  445011:	mov    r14,rax
  445014:	call   403a70 <cfg_getstr@plt>
  445019:	mov    rcx,QWORD PTR [rsp+0x8]
  44501e:	mov    edx,r14d
  445021:	mov    rsi,rax
  445024:	mov    rdi,r15
  445027:	call   405ff0 <xmlStrEqual@plt+0x20b0>
  44502c:	mov    r14,rax
  44502f:	test   rax,rax
  445032:	je     4452b0 <xmlStrEqual@plt+0x41370>
  445038:	mov    rdi,QWORD PTR [r15+0x18]
  44503c:	mov    rsi,QWORD PTR [rax]
  44503f:	call   432d40 <xmlStrEqual@plt+0x2ee00>
  445044:	test   rax,rax
  445047:	mov    rax,0x469e3c
  44504e:	je     445270 <xmlStrEqual@plt+0x41330>
  445054:	mov    esi,DWORD PTR [rax]
  445056:	test   esi,esi
  445058:	jle    445078 <xmlStrEqual@plt+0x41138>
  44505a:	mov    rdi,QWORD PTR [r14]
  44505d:	call   424d40 <xmlStrEqual@plt+0x20e00>
  445062:	mov    rdx,rax
  445065:	lea    rsi,[rip+0x1129c]        # 456308 <xmlStrEqual@plt+0x523c8>
  44506c:	mov    edi,0x5
  445071:	xor    eax,eax
  445073:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  445078:	mov    rdi,r14
  44507b:	call   415580 <xmlStrEqual@plt+0x11640>
  445080:	inc    ebp
  445082:	mov    rsi,r12
  445085:	mov    rdi,r13
  445088:	call   403ef0 <cfg_size@plt>
  44508d:	cmp    eax,ebp
  44508f:	ja     444fd0 <xmlStrEqual@plt+0x41090>
  445095:	mov    QWORD PTR [rsp+0x18],r15
  44509a:	xor    r14d,r14d
  44509d:	nop    DWORD PTR [rax]
  4450a0:	mov    rdi,QWORD PTR [rsp+0x10]
  4450a5:	lea    rsi,[rip+0x10583]        # 45562f <xmlStrEqual@plt+0x516ef>
  4450ac:	call   403ef0 <cfg_size@plt>
  4450b1:	cmp    eax,r14d
  4450b4:	jbe    4453de <xmlStrEqual@plt+0x4149e>
  4450ba:	mov    rdi,QWORD PTR [rsp+0x10]
  4450bf:	lea    rsi,[rip+0x10569]        # 45562f <xmlStrEqual@plt+0x516ef>
  4450c6:	mov    edx,r14d
  4450c9:	call   403980 <cfg_getnsec@plt>
  4450ce:	mov    rbx,rax
  4450d1:	call   42dc90 <xmlStrEqual@plt+0x29d50>
  4450d6:	lea    rsi,[rip+0x102a0]        # 45537d <xmlStrEqual@plt+0x5143d>
  4450dd:	mov    rdi,rbx
  4450e0:	mov    r13,rax
  4450e3:	call   403a70 <cfg_getstr@plt>
  4450e8:	test   rax,rax
  4450eb:	je     445396 <xmlStrEqual@plt+0x41456>
  4450f1:	lea    rsi,[rip+0x10546]        # 45563e <xmlStrEqual@plt+0x516fe>
  4450f8:	mov    rdi,rbx
  4450fb:	call   403a70 <cfg_getstr@plt>
  445100:	test   rax,rax
  445103:	je     445396 <xmlStrEqual@plt+0x41456>
  445109:	lea    rsi,[rip+0x1053e]        # 45564e <xmlStrEqual@plt+0x5170e>
  445110:	mov    rdi,rbx
  445113:	call   403ef0 <cfg_size@plt>
  445118:	mov    ebp,eax
  44511a:	test   eax,eax
  44511c:	jle    445156 <xmlStrEqual@plt+0x41216>
  44511e:	xor    r15d,r15d
  445121:	lea    r12,[rip+0x10526]        # 45564e <xmlStrEqual@plt+0x5170e>
  445128:	nop    DWORD PTR [rax+rax*1+0x0]
  445130:	mov    edx,r15d
  445133:	mov    rsi,r12
  445136:	mov    rdi,rbx
  445139:	call   4038b0 <cfg_getnstr@plt>
  44513e:	test   rax,rax
  445141:	je     44514e <xmlStrEqual@plt+0x4120e>
  445143:	mov    rsi,r13
  445146:	mov    rdi,rax
  445149:	call   42de80 <xmlStrEqual@plt+0x29f40>
  44514e:	inc    r15d
  445151:	cmp    ebp,r15d
  445154:	jne    445130 <xmlStrEqual@plt+0x411f0>
  445156:	lea    rsi,[rip+0x104e1]        # 45563e <xmlStrEqual@plt+0x516fe>
  44515d:	mov    rdi,rbx
  445160:	call   403a70 <cfg_getstr@plt>
  445165:	mov    rbp,rax
  445168:	test   rax,rax
  44516b:	je     4453f2 <xmlStrEqual@plt+0x414b2>
  445171:	mov    rdi,rax
  445174:	call   43be30 <xmlStrEqual@plt+0x37ef0>
  445179:	mov    rsi,rax
  44517c:	mov    ecx,0xf
  445181:	lea    rdi,[rip+0x104d2]        # 45565a <xmlStrEqual@plt+0x5171a>
  445188:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  44518a:	seta   r12b
  44518e:	sbb    r12b,0x0
  445192:	movsx  r12d,r12b
  445196:	test   r12d,r12d
  445199:	je     4451c0 <xmlStrEqual@plt+0x41280>
  44519b:	mov    ecx,0x14
  4451a0:	mov    rsi,rax
  4451a3:	lea    rdi,[rip+0x104bf]        # 455669 <xmlStrEqual@plt+0x51729>
  4451aa:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  4451ac:	seta   dl
  4451af:	sbb    dl,0x0
  4451b2:	test   dl,dl
  4451b4:	jne    44540e <xmlStrEqual@plt+0x414ce>
  4451ba:	mov    r12d,0x1
  4451c0:	mov    rdi,rax
  4451c3:	call   4037b0 <free@plt>
  4451c8:	lea    rsi,[rip+0xa079]        # 44f248 <xmlStrEqual@plt+0x4b308>
  4451cf:	mov    rdi,rbx
  4451d2:	call   403940 <cfg_getint@plt>
  4451d7:	lea    rsi,[rip+0x1019f]        # 45537d <xmlStrEqual@plt+0x5143d>
  4451de:	mov    rdi,rbx
  4451e1:	mov    rbp,rax
  4451e4:	call   403a70 <cfg_getstr@plt>
  4451e9:	mov    r15,QWORD PTR [rsp+0x18]
  4451ee:	mov    r9,QWORD PTR [rsp+0x8]
  4451f3:	mov    edx,ebp
  4451f5:	mov    rdi,r15
  4451f8:	mov    r8,r13
  4451fb:	mov    ecx,r12d
  4451fe:	mov    rsi,rax
  445201:	call   406500 <xmlStrEqual@plt+0x25c0>
  445206:	mov    rbp,rax
  445209:	mov    rdi,r13
  44520c:	call   42e2b0 <xmlStrEqual@plt+0x2a370>
  445211:	test   rbp,rbp
  445214:	je     445320 <xmlStrEqual@plt+0x413e0>
  44521a:	mov    rdi,QWORD PTR [r15+0x20]
  44521e:	mov    rsi,QWORD PTR [rbp+0x0]
  445222:	call   432d40 <xmlStrEqual@plt+0x2ee00>
  445227:	test   rax,rax
  44522a:	mov    rax,0x469e3c
  445231:	je     4452e0 <xmlStrEqual@plt+0x413a0>
  445237:	mov    edx,DWORD PTR [rax]
  445239:	test   edx,edx
  44523b:	jle    44525c <xmlStrEqual@plt+0x4131c>
  44523d:	mov    rdi,QWORD PTR [rbp+0x0]
  445241:	call   424d40 <xmlStrEqual@plt+0x20e00>
  445246:	mov    rdx,rax
  445249:	lea    rsi,[rip+0x11208]        # 456458 <xmlStrEqual@plt+0x52518>
  445250:	mov    edi,0x5
  445255:	xor    eax,eax
  445257:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  44525c:	mov    rdi,rbp
  44525f:	call   4155b0 <xmlStrEqual@plt+0x11670>
  445264:	inc    r14d
  445267:	jmp    4450a0 <xmlStrEqual@plt+0x41160>
  44526c:	nop    DWORD PTR [rax+0x0]
  445270:	mov    ecx,DWORD PTR [rax]
  445272:	test   ecx,ecx
  445274:	jle    445294 <xmlStrEqual@plt+0x41354>
  445276:	mov    rdi,QWORD PTR [r14]
  445279:	call   424d40 <xmlStrEqual@plt+0x20e00>
  44527e:	mov    rdx,rax
  445281:	lea    rsi,[rip+0x110c0]        # 456348 <xmlStrEqual@plt+0x52408>
  445288:	mov    edi,0x5
  44528d:	xor    eax,eax
  44528f:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  445294:	mov    rsi,r14
  445297:	mov    rdi,r15
  44529a:	call   415dc0 <xmlStrEqual@plt+0x11e80>
  44529f:	inc    ebp
  4452a1:	jmp    445082 <xmlStrEqual@plt+0x41142>
  4452a6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4452b0:	lea    rsi,[rip+0x100c6]        # 45537d <xmlStrEqual@plt+0x5143d>
  4452b7:	mov    rdi,rbx
  4452ba:	call   403a70 <cfg_getstr@plt>
  4452bf:	mov    rdx,rax
  4452c2:	lea    rsi,[rip+0x110c7]        # 456390 <xmlStrEqual@plt+0x52450>
  4452c9:	mov    edi,0x2
  4452ce:	xor    eax,eax
  4452d0:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  4452d5:	inc    ebp
  4452d7:	jmp    445082 <xmlStrEqual@plt+0x41142>
  4452dc:	nop    DWORD PTR [rax+0x0]
  4452e0:	mov    eax,DWORD PTR [rax]
  4452e2:	test   eax,eax
  4452e4:	jle    445305 <xmlStrEqual@plt+0x413c5>
  4452e6:	mov    rdi,QWORD PTR [rbp+0x0]
  4452ea:	call   424d40 <xmlStrEqual@plt+0x20e00>
  4452ef:	mov    rdx,rax
  4452f2:	lea    rsi,[rip+0x111af]        # 4564a8 <xmlStrEqual@plt+0x52568>
  4452f9:	mov    edi,0x5
  4452fe:	xor    eax,eax
  445300:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  445305:	mov    rdi,QWORD PTR [rsp+0x18]
  44530a:	mov    rsi,rbp
  44530d:	call   415e10 <xmlStrEqual@plt+0x11ed0>
  445312:	jmp    445264 <xmlStrEqual@plt+0x41324>
  445317:	nop    WORD PTR [rax+rax*1+0x0]
  445320:	mov    rdi,rbx
  445323:	lea    rsi,[rip+0x10053]        # 45537d <xmlStrEqual@plt+0x5143d>
  44532a:	call   403a70 <cfg_getstr@plt>
  44532f:	mov    rdx,rax
  445332:	lea    rsi,[rip+0x111af]        # 4564e8 <xmlStrEqual@plt+0x525a8>
  445339:	mov    edi,0x2
  44533e:	xor    eax,eax
  445340:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  445345:	jmp    445264 <xmlStrEqual@plt+0x41324>
  44534a:	nop    WORD PTR [rax+rax*1+0x0]
  445350:	lea    rsi,[rip+0x10f59]        # 4562b0 <xmlStrEqual@plt+0x52370>
  445357:	mov    edi,0x2
  44535c:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  445361:	xor    eax,eax
  445363:	add    rsp,0x28
  445367:	pop    rbx
  445368:	pop    rbp
  445369:	pop    r12
  44536b:	pop    r13
  44536d:	pop    r14
  44536f:	pop    r15
  445371:	ret    
  445372:	xor    eax,eax
  445374:	lea    rsi,[rip+0x10ef5]        # 456270 <xmlStrEqual@plt+0x52330>
  44537b:	mov    edi,0x2
  445380:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  445385:	add    rsp,0x28
  445389:	pop    rbx
  44538a:	pop    rbp
  44538b:	pop    r12
  44538d:	pop    r13
  44538f:	pop    r14
  445391:	xor    eax,eax
  445393:	pop    r15
  445395:	ret    
  445396:	xor    eax,eax
  445398:	lea    rsi,[rip+0x11021]        # 4563c0 <xmlStrEqual@plt+0x52480>
  44539f:	mov    edi,0x2
  4453a4:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  4453a9:	add    rsp,0x28
  4453ad:	pop    rbx
  4453ae:	pop    rbp
  4453af:	pop    r12
  4453b1:	pop    r13
  4453b3:	pop    r14
  4453b5:	xor    eax,eax
  4453b7:	pop    r15
  4453b9:	ret    
  4453ba:	xor    eax,eax
  4453bc:	lea    rsi,[rip+0x10e65]        # 456228 <xmlStrEqual@plt+0x522e8>
  4453c3:	mov    edi,0x2
  4453c8:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  4453cd:	add    rsp,0x28
  4453d1:	pop    rbx
  4453d2:	pop    rbp
  4453d3:	pop    r12
  4453d5:	pop    r13
  4453d7:	pop    r14
  4453d9:	xor    eax,eax
  4453db:	pop    r15
  4453dd:	ret    
  4453de:	mov    rdi,QWORD PTR [rsp+0x8]
  4453e3:	call   43add0 <xmlStrEqual@plt+0x36e90>
  4453e8:	mov    eax,0x1
  4453ed:	jmp    445363 <xmlStrEqual@plt+0x41423>
  4453f2:	xor    eax,eax
  4453f4:	xor    edx,edx
  4453f6:	lea    rsi,[rip+0x1102b]        # 456428 <xmlStrEqual@plt+0x524e8>
  4453fd:	mov    edi,0x1
  445402:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  445407:	xor    eax,eax
  445409:	jmp    445363 <xmlStrEqual@plt+0x41423>
  44540e:	mov    rdx,rbp
  445411:	lea    rsi,[rip+0x11010]        # 456428 <xmlStrEqual@plt+0x524e8>
  445418:	mov    rbp,rax
  44541b:	mov    edi,0x1
  445420:	xor    eax,eax
  445422:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  445427:	mov    rdi,rbp
  44542a:	call   4037b0 <free@plt>
  44542f:	xor    eax,eax
  445431:	jmp    445363 <xmlStrEqual@plt+0x41423>
  445436:	nop    WORD PTR cs:[rax+rax*1+0x0]
  445440:	endbr64 
  445444:	push   r15
  445446:	push   r14
  445448:	push   r13
  44544a:	push   r12
  44544c:	push   rbp
  44544d:	push   rbx
  44544e:	mov    rbx,rdi
  445451:	mov    edi,0x5
  445456:	sub    rsp,0x18
  44545a:	mov    rbp,0x475850
  445461:	mov    rsi,rbp
  445464:	call   408a70 <xmlStrEqual@plt+0x4b30>
  445469:	cmp    eax,0x1
  44546c:	je     445488 <xmlStrEqual@plt+0x41548>
  44546e:	xor    eax,eax
  445470:	lea    rsi,[rip+0x110a1]        # 456518 <xmlStrEqual@plt+0x525d8>
  445477:	mov    edi,0x1
  44547c:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  445481:	xor    eax,eax
  445483:	call   43f9f0 <xmlStrEqual@plt+0x3bab0>
  445488:	mov    rax,QWORD PTR [rbp+0x0]
  44548c:	mov    rdi,rbx
  44548f:	mov    QWORD PTR [rsp+0x8],rax
  445494:	call   442df0 <xmlStrEqual@plt+0x3eeb0>
  445499:	lea    rsi,[rip+0x100dc]        # 45557c <xmlStrEqual@plt+0x5163c>
  4454a0:	mov    rdi,rbx
  4454a3:	mov    r14,rax
  4454a6:	call   403a70 <cfg_getstr@plt>
  4454ab:	test   rax,rax
  4454ae:	je     445570 <xmlStrEqual@plt+0x41630>
  4454b4:	mov    rdi,rax
  4454b7:	call   43ee00 <xmlStrEqual@plt+0x3aec0>
  4454bc:	mov    rbp,rax
  4454bf:	test   rax,rax
  4454c2:	je     445598 <xmlStrEqual@plt+0x41658>
  4454c8:	mov    esi,0x2
  4454cd:	mov    rdi,rax
  4454d0:	call   43f490 <xmlStrEqual@plt+0x3b550>
  4454d5:	mov    rdi,rbp
  4454d8:	mov    esi,0xa
  4454dd:	call   43f490 <xmlStrEqual@plt+0x3b550>
  4454e2:	call   42dc90 <xmlStrEqual@plt+0x29d50>
  4454e7:	lea    rsi,[rip+0x1018f]        # 45567d <xmlStrEqual@plt+0x5173d>
  4454ee:	mov    rdi,rbx
  4454f1:	mov    r13,rax
  4454f4:	call   403ef0 <cfg_size@plt>
  4454f9:	mov    ebp,eax
  4454fb:	xor    r15d,r15d
  4454fe:	lea    r12,[rip+0x10178]        # 45567d <xmlStrEqual@plt+0x5173d>
  445505:	test   eax,eax
  445507:	jle    4455c0 <xmlStrEqual@plt+0x41680>
  44550d:	nop    DWORD PTR [rax]
  445510:	mov    edx,r15d
  445513:	mov    rsi,r12
  445516:	mov    rdi,rbx
  445519:	call   4038b0 <cfg_getnstr@plt>
  44551e:	test   rax,rax
  445521:	je     44552e <xmlStrEqual@plt+0x415ee>
  445523:	mov    rsi,r13
  445526:	mov    rdi,rax
  445529:	call   42de80 <xmlStrEqual@plt+0x29f40>
  44552e:	inc    r15d
  445531:	cmp    ebp,r15d
  445534:	jne    445510 <xmlStrEqual@plt+0x415d0>
  445536:	mov    rdi,QWORD PTR [rsp+0x8]
  44553b:	mov    rdx,r14
  44553e:	mov    rsi,r13
  445541:	call   406690 <xmlStrEqual@plt+0x2750>
  445546:	mov    rdi,r14
  445549:	call   43add0 <xmlStrEqual@plt+0x36e90>
  44554e:	mov    rdi,r13
  445551:	call   42e2b0 <xmlStrEqual@plt+0x2a370>
  445556:	add    rsp,0x18
  44555a:	pop    rbx
  44555b:	pop    rbp
  44555c:	pop    r12
  44555e:	pop    r13
  445560:	pop    r14
  445562:	mov    eax,0x1
  445567:	pop    r15
  445569:	ret    
  44556a:	nop    WORD PTR [rax+rax*1+0x0]
  445570:	xor    eax,eax
  445572:	lea    rsi,[rip+0x1101f]        # 456598 <xmlStrEqual@plt+0x52658>
  445579:	mov    edi,0x2
  44557e:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  445583:	add    rsp,0x18
  445587:	pop    rbx
  445588:	pop    rbp
  445589:	pop    r12
  44558b:	pop    r13
  44558d:	pop    r14
  44558f:	xor    eax,eax
  445591:	pop    r15
  445593:	ret    
  445594:	nop    DWORD PTR [rax+0x0]
  445598:	xor    eax,eax
  44559a:	lea    rsi,[rip+0x10fa7]        # 456548 <xmlStrEqual@plt+0x52608>
  4455a1:	mov    edi,0x2
  4455a6:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  4455ab:	add    rsp,0x18
  4455af:	pop    rbx
  4455b0:	pop    rbp
  4455b1:	pop    r12
  4455b3:	pop    r13
  4455b5:	pop    r14
  4455b7:	xor    eax,eax
  4455b9:	pop    r15
  4455bb:	ret    
  4455bc:	nop    DWORD PTR [rax+0x0]
  4455c0:	xor    eax,eax
  4455c2:	lea    rsi,[rip+0x11017]        # 4565e0 <xmlStrEqual@plt+0x526a0>
  4455c9:	mov    edi,0x2
  4455ce:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  4455d3:	add    rsp,0x18
  4455d7:	pop    rbx
  4455d8:	pop    rbp
  4455d9:	pop    r12
  4455db:	pop    r13
  4455dd:	pop    r14
  4455df:	xor    eax,eax
  4455e1:	pop    r15
  4455e3:	ret    
  4455e4:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4455ef:	nop
  4455f0:	endbr64 
  4455f4:	push   r14
  4455f6:	push   r13
  4455f8:	push   r12
  4455fa:	push   rbp
  4455fb:	push   rbx
  4455fc:	sub    rsp,0x1000
  445603:	or     QWORD PTR [rsp],0x0
  445608:	sub    rsp,0x3c0
  44560f:	xor    esi,esi
  445611:	mov    edx,0x13b0
  445616:	lea    rbx,[rip+0xfdef]        # 45540c <xmlStrEqual@plt+0x514cc>
  44561d:	lea    r13,[rip+0x10102]        # 455726 <xmlStrEqual@plt+0x517e6>
  445624:	mov    rcx,rsp
  445627:	mov    rdi,rcx
  44562a:	mov    rax,QWORD PTR fs:0x28
  445633:	mov    QWORD PTR [rsp+0x13b8],rax
  44563b:	xor    eax,eax
  44563d:	call   4039f0 <memset@plt>
  445642:	mov    rcx,rax
  445645:	lea    rax,[rip+0x10048]        # 455694 <xmlStrEqual@plt+0x51754>
  44564c:	mov    QWORD PTR [rsp],rax
  445650:	lea    rax,[rip+0x27869]        # 46cec0 <xmlStrEqual@plt+0x68f80>
  445657:	mov    QWORD PTR [rsp+0x28],rax
  44565c:	mov    QWORD PTR [rsp+0xb8],rax
  445664:	mov    QWORD PTR [rsp+0x148],rax
  44566c:	lea    rax,[rip+0xfe99]        # 45550c <xmlStrEqual@plt+0x515cc>
  445673:	mov    QWORD PTR [rsp+0x1b0],rax
  44567b:	lea    rax,[rip+0x275fe]        # 46cc80 <xmlStrEqual@plt+0x68d40>
  445682:	mov    QWORD PTR [rsp+0x1d8],rax
  44568a:	lea    rax,[rip+0xfbf8]        # 455289 <xmlStrEqual@plt+0x51349>
  445691:	mov    QWORD PTR [rsp+0x240],rax
  445699:	lea    rax,[rip+0x27300]        # 46c9a0 <xmlStrEqual@plt+0x68a60>
  4456a0:	mov    QWORD PTR [rsp+0x268],rax
  4456a8:	lea    rax,[rip+0xfe6e]        # 45551d <xmlStrEqual@plt+0x515dd>
  4456af:	mov    QWORD PTR [rsp+0x2d0],rax
  4456b7:	lea    rax,[rip+0x271c2]        # 46c880 <xmlStrEqual@plt+0x68940>
  4456be:	mov    QWORD PTR [rsp+0x2f8],rax
  4456c6:	lea    rax,[rip+0xfd19]        # 4553e6 <xmlStrEqual@plt+0x514a6>
  4456cd:	lea    rdx,[rip+0xfeff]        # 4555d3 <xmlStrEqual@plt+0x51693>
  4456d4:	mov    QWORD PTR [rsp+0x360],rax
  4456dc:	lea    rax,[rip+0x26f5d]        # 46c640 <xmlStrEqual@plt+0x68700>
  4456e3:	mov    QWORD PTR [rsp+0x90],rdx
  4456eb:	mov    QWORD PTR [rsp+0x388],rax
  4456f3:	lea    rdx,[rip+0xff96]        # 455690 <xmlStrEqual@plt+0x51750>
  4456fa:	mov    QWORD PTR [rsp+0x418],rax
  445702:	lea    rax,[rip+0xfd49]        # 455452 <xmlStrEqual@plt+0x51512>
  445709:	mov    QWORD PTR [rsp+0x120],rdx
  445711:	mov    QWORD PTR [rsp+0x3f0],rbx
  445719:	mov    DWORD PTR [rsp+0x10],0x5
  445721:	mov    DWORD PTR [rsp+0x20],0x1
  445729:	mov    DWORD PTR [rsp+0xa0],0x5
  445734:	mov    DWORD PTR [rsp+0xb0],0x1
  44573f:	mov    DWORD PTR [rsp+0x130],0x5
  44574a:	mov    DWORD PTR [rsp+0x140],0x1
  445755:	mov    DWORD PTR [rsp+0x1c0],0x5
  445760:	mov    DWORD PTR [rsp+0x1d0],0x1
  44576b:	mov    DWORD PTR [rsp+0x250],0x5
  445776:	mov    DWORD PTR [rsp+0x260],0x1
  445781:	mov    DWORD PTR [rsp+0x2e0],0x5
  44578c:	mov    DWORD PTR [rsp+0x2f0],0x1
  445797:	mov    DWORD PTR [rsp+0x370],0x5
  4457a2:	mov    DWORD PTR [rsp+0x380],0x1
  4457ad:	mov    DWORD PTR [rsp+0x400],0x5
  4457b8:	mov    DWORD PTR [rsp+0x410],0x1
  4457c3:	mov    QWORD PTR [rsp+0x480],rax
  4457cb:	lea    rax,[rip+0xfed3]        # 4556a5 <xmlStrEqual@plt+0x51765>
  4457d2:	mov    QWORD PTR [rsp+0x4c8],rax
  4457da:	lea    rax,[rip+0xfca2]        # 455483 <xmlStrEqual@plt+0x51543>
  4457e1:	mov    QWORD PTR [rsp+0x510],rax
  4457e9:	lea    rax,[rip+0x26c10]        # 46c400 <xmlStrEqual@plt+0x684c0>
  4457f0:	mov    QWORD PTR [rsp+0x538],rax
  4457f8:	lea    rax,[rip+0xfc70]        # 45546f <xmlStrEqual@plt+0x5152f>
  4457ff:	mov    QWORD PTR [rsp+0x5a0],rax
  445807:	lea    rax,[rip+0xfe9c]        # 4556aa <xmlStrEqual@plt+0x5176a>
  44580e:	mov    QWORD PTR [rsp+0x630],rax
  445816:	lea    rax,[rip+0xfe9a]        # 4556b7 <xmlStrEqual@plt+0x51777>
  44581d:	mov    QWORD PTR [rsp+0x750],rax
  445825:	lea    rax,[rip+0xfe94]        # 4556c0 <xmlStrEqual@plt+0x51780>
  44582c:	mov    QWORD PTR [rsp+0x7e0],rax
  445834:	lea    rax,[rip+0xe024]        # 45385f <xmlStrEqual@plt+0x4f91f>
  44583b:	mov    QWORD PTR [rsp+0x828],rax
  445843:	lea    rax,[rip+0xfe81]        # 4556cb <xmlStrEqual@plt+0x5178b>
  44584a:	mov    QWORD PTR [rsp+0x870],rax
  445852:	lea    rax,[rip+0xf932]        # 45518b <xmlStrEqual@plt+0x5124b>
  445859:	mov    QWORD PTR [rsp+0x900],rax
  445861:	lea    rax,[rip+0xfbb3]        # 45541b <xmlStrEqual@plt+0x514db>
  445868:	mov    QWORD PTR [rsp+0x990],rax
  445870:	lea    rax,[rip+0xfbca]        # 455441 <xmlStrEqual@plt+0x51501>
  445877:	mov    QWORD PTR [rsp+0xa20],rax
  44587f:	lea    rax,[rip+0xfe5b]        # 4556e1 <xmlStrEqual@plt+0x517a1>
  445886:	mov    QWORD PTR [rsp+0xab0],rax
  44588e:	lea    rax,[rip+0xfcb7]        # 45554c <xmlStrEqual@plt+0x5160c>
  445895:	mov    QWORD PTR [rsp+0xb40],rax
  44589d:	lea    rax,[rip+0xfcd8]        # 45557c <xmlStrEqual@plt+0x5163c>
  4458a4:	mov    DWORD PTR [rsp+0x490],0x3
  4458af:	mov    DWORD PTR [rsp+0x520],0x5
  4458ba:	mov    DWORD PTR [rsp+0x530],0x1
  4458c5:	mov    DWORD PTR [rsp+0x5b0],0x1
  4458d0:	mov    DWORD PTR [rsp+0x640],0x1
  4458db:	mov    QWORD PTR [rsp+0x6c0],r13
  4458e3:	mov    DWORD PTR [rsp+0x6d0],0x1
  4458ee:	mov    DWORD PTR [rsp+0x760],0x3
  4458f9:	mov    DWORD PTR [rsp+0x7f0],0x3
  445904:	mov    DWORD PTR [rsp+0x880],0x1
  44590f:	mov    DWORD PTR [rsp+0x910],0x3
  44591a:	mov    DWORD PTR [rsp+0x920],0x2
  445925:	mov    DWORD PTR [rsp+0x9a0],0x3
  445930:	mov    DWORD PTR [rsp+0x9b0],0x2
  44593b:	mov    DWORD PTR [rsp+0xa30],0x3
  445946:	mov    DWORD PTR [rsp+0xa40],0x2
  445951:	mov    DWORD PTR [rsp+0xac0],0x3
  44595c:	mov    DWORD PTR [rsp+0xb50],0x4
  445967:	mov    QWORD PTR [rsp+0xbd0],rax
  44596f:	lea    rax,[rip+0xfd7a]        # 4556f0 <xmlStrEqual@plt+0x517b0>
  445976:	mov    QWORD PTR [rsp+0xc60],rax
  44597e:	lea    rax,[rip+0xfc05]        # 45558a <xmlStrEqual@plt+0x5164a>
  445985:	mov    QWORD PTR [rsp+0xcf0],rax
  44598d:	lea    rax,[rip+0x264cc]        # 46be60 <xmlStrEqual@plt+0x67f20>
  445994:	mov    QWORD PTR [rsp+0xd18],rax
  44599c:	lea    rax,[rip+0xf825]        # 4551c8 <xmlStrEqual@plt+0x51288>
  4459a3:	mov    QWORD PTR [rsp+0xd80],rax
  4459ab:	lea    rax,[rip+0x262ee]        # 46bca0 <xmlStrEqual@plt+0x67d60>
  4459b2:	mov    QWORD PTR [rsp+0xda8],rax
  4459ba:	lea    rax,[rip+0xf945]        # 455306 <xmlStrEqual@plt+0x513c6>
  4459c1:	mov    QWORD PTR [rsp+0xe10],rax
  4459c9:	lea    rax,[rip+0x26110]        # 46bae0 <xmlStrEqual@plt+0x67ba0>
  4459d0:	mov    QWORD PTR [rsp+0xe38],rax
  4459d8:	lea    rax,[rip+0xf950]        # 45532f <xmlStrEqual@plt+0x513ef>
  4459df:	mov    QWORD PTR [rsp+0xea0],rax
  4459e7:	lea    rax,[rip+0x25cf2]        # 46b6e0 <xmlStrEqual@plt+0x677a0>
  4459ee:	mov    QWORD PTR [rsp+0xec8],rax
  4459f6:	lea    rax,[rip+0xfc24]        # 455621 <xmlStrEqual@plt+0x516e1>
  4459fd:	mov    QWORD PTR [rsp+0xf30],rax
  445a05:	lea    rax,[rip+0x25b14]        # 46b520 <xmlStrEqual@plt+0x675e0>
  445a0c:	mov    QWORD PTR [rsp+0xf58],rax
  445a14:	lea    rax,[rip+0xfc14]        # 45562f <xmlStrEqual@plt+0x516ef>
  445a1b:	mov    QWORD PTR [rsp+0xfc0],rax
  445a23:	lea    rax,[rip+0x25816]        # 46b240 <xmlStrEqual@plt+0x67300>
  445a2a:	mov    QWORD PTR [rsp+0xfe8],rax
  445a32:	lea    rax,[rip+0xfc44]        # 45567d <xmlStrEqual@plt+0x5173d>
  445a39:	mov    QWORD PTR [rsp+0x1050],rax
  445a41:	lea    rax,[rip+0xfbb1]        # 4555f9 <xmlStrEqual@plt+0x516b9>
  445a48:	mov    QWORD PTR [rsp+0x10e0],rax
  445a50:	lea    rax,[rip+0x255a9]        # 46b000 <xmlStrEqual@plt+0x670c0>
  445a57:	mov    DWORD PTR [rsp+0xbe0],0x3
  445a62:	mov    DWORD PTR [rsp+0xc70],0x3
  445a6d:	mov    DWORD PTR [rsp+0xd00],0x5
  445a78:	mov    DWORD PTR [rsp+0xd10],0x1
  445a83:	mov    DWORD PTR [rsp+0xd90],0x5
  445a8e:	mov    DWORD PTR [rsp+0xda0],0x1
  445a99:	mov    DWORD PTR [rsp+0xe20],0x5
  445aa4:	mov    DWORD PTR [rsp+0xe30],0x1
  445aaf:	mov    DWORD PTR [rsp+0xeb0],0x5
  445aba:	mov    DWORD PTR [rsp+0xec0],0x1
  445ac5:	mov    DWORD PTR [rsp+0xf40],0x5
  445ad0:	mov    DWORD PTR [rsp+0xf50],0x1
  445adb:	mov    DWORD PTR [rsp+0xfd0],0x5
  445ae6:	mov    DWORD PTR [rsp+0xfe0],0x1
  445af1:	mov    DWORD PTR [rsp+0x1060],0x3
  445afc:	mov    DWORD PTR [rsp+0x1070],0x2
  445b07:	mov    DWORD PTR [rsp+0x10f0],0x5
  445b12:	mov    DWORD PTR [rsp+0x1100],0x1
  445b1d:	mov    QWORD PTR [rsp+0x1108],rax
  445b25:	lea    rax,[rip+0xfac1]        # 4555ed <xmlStrEqual@plt+0x516ad>
  445b2c:	mov    QWORD PTR [rsp+0x1170],rax
  445b34:	lea    rax,[rip+0x25285]        # 46adc0 <xmlStrEqual@plt+0x66e80>
  445b3b:	mov    QWORD PTR [rsp+0x1198],rax
  445b43:	lea    rax,[rip+0xfac0]        # 45560a <xmlStrEqual@plt+0x516ca>
  445b4a:	mov    QWORD PTR [rsp+0x1200],rax
  445b52:	lea    rax,[rip+0xf9d9]        # 455532 <xmlStrEqual@plt+0x515f2>
  445b59:	mov    QWORD PTR [rsp+0x1290],rax
  445b61:	mov    esi,0x4
  445b66:	lea    rax,[rip+0x25013]        # 46ab80 <xmlStrEqual@plt+0x66c40>
  445b6d:	mov    rdi,rcx
  445b70:	mov    DWORD PTR [rsp+0x1180],0x5
  445b7b:	mov    DWORD PTR [rsp+0x1190],0x1
  445b86:	mov    DWORD PTR [rsp+0x1210],0x3
  445b91:	mov    DWORD PTR [rsp+0x12a0],0x5
  445b9c:	mov    DWORD PTR [rsp+0x12b0],0x1
  445ba7:	mov    QWORD PTR [rsp+0x12b8],rax
  445baf:	call   403b40 <cfg_init@plt>
  445bb4:	mov    r12,0x4757c8
  445bbb:	mov    rdi,rax
  445bbe:	mov    rsi,QWORD PTR [r12]
  445bc2:	mov    rbx,rax
  445bc5:	call   403e90 <cfg_parse@plt>
  445bca:	cmp    eax,0xffffffff
  445bcd:	je     445ea0 <xmlStrEqual@plt+0x41f60>
  445bd3:	mov    ebp,eax
  445bd5:	cmp    eax,0x1
  445bd8:	je     445ee0 <xmlStrEqual@plt+0x41fa0>
  445bde:	mov    r12,0x469e3c
  445be5:	mov    eax,DWORD PTR [r12]
  445be9:	cmp    eax,0xffffffff
  445bec:	je     445e60 <xmlStrEqual@plt+0x41f20>
  445bf2:	cmp    eax,0x1
  445bf5:	je     445e88 <xmlStrEqual@plt+0x41f48>
  445bfb:	cmp    eax,0x2
  445bfe:	je     445e20 <xmlStrEqual@plt+0x41ee0>
  445c04:	cmp    eax,0x3
  445c07:	je     445ef8 <xmlStrEqual@plt+0x41fb8>
  445c0d:	lea    rsi,[rip+0xfaa3]        # 4556b7 <xmlStrEqual@plt+0x51777>
  445c14:	mov    rdi,rbx
  445c17:	call   403a70 <cfg_getstr@plt>
  445c1c:	mov    rdx,0x4757bc
  445c23:	cmp    DWORD PTR [rdx],0x1
  445c26:	je     445e50 <xmlStrEqual@plt+0x41f10>
  445c2c:	lea    rsi,[rip+0xfa8d]        # 4556c0 <xmlStrEqual@plt+0x51780>
  445c33:	mov    rdi,rbx
  445c36:	call   403a70 <cfg_getstr@plt>
  445c3b:	mov    rdi,rax
  445c3e:	mov    r13,rax
  445c41:	call   43be30 <xmlStrEqual@plt+0x37ef0>
  445c46:	mov    rsi,rax
  445c49:	mov    ecx,0x7
  445c4e:	lea    rdi,[rip+0xfaed]        # 455742 <xmlStrEqual@plt+0x51802>
  445c55:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  445c57:	mov    r14,rax
  445c5a:	seta   al
  445c5d:	sbb    al,0x0
  445c5f:	test   al,al
  445c61:	jne    445dd0 <xmlStrEqual@plt+0x41e90>
  445c67:	mov    rax,0x474dc0
  445c6e:	mov    edx,DWORD PTR [r12]
  445c72:	mov    DWORD PTR [rax],0x0
  445c78:	test   edx,edx
  445c7a:	jle    445c90 <xmlStrEqual@plt+0x41d50>
  445c7c:	lea    rsi,[rip+0xfac6]        # 455749 <xmlStrEqual@plt+0x51809>
  445c83:	mov    edi,0x5
  445c88:	xor    eax,eax
  445c8a:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  445c8f:	nop
  445c90:	mov    rdi,r14
  445c93:	call   4037b0 <free@plt>
  445c98:	lea    rsi,[rip+0xfa42]        # 4556e1 <xmlStrEqual@plt+0x517a1>
  445c9f:	mov    rdi,rbx
  445ca2:	call   403a70 <cfg_getstr@plt>
  445ca7:	test   rax,rax
  445caa:	je     445d98 <xmlStrEqual@plt+0x41e58>
  445cb0:	mov    rdi,rax
  445cb3:	call   43be30 <xmlStrEqual@plt+0x37ef0>
  445cb8:	mov    rsi,rax
  445cbb:	mov    ecx,0x4
  445cc0:	lea    rdi,[rip+0xfa9e]        # 455765 <xmlStrEqual@plt+0x51825>
  445cc7:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  445cc9:	mov    r12,rax
  445ccc:	seta   al
  445ccf:	sbb    al,0x0
  445cd1:	test   al,al
  445cd3:	je     445e40 <xmlStrEqual@plt+0x41f00>
  445cd9:	mov    ecx,0x3
  445cde:	lea    rdi,[rip+0xfa84]        # 455769 <xmlStrEqual@plt+0x51829>
  445ce5:	mov    rsi,r12
  445ce8:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  445cea:	seta   al
  445ced:	sbb    al,0x0
  445cef:	test   al,al
  445cf1:	je     445ed0 <xmlStrEqual@plt+0x41f90>
  445cf7:	mov    ecx,0x4
  445cfc:	lea    rdi,[rip+0x2f98]        # 448c9b <xmlStrEqual@plt+0x44d5b>
  445d03:	mov    rsi,r12
  445d06:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  445d08:	seta   al
  445d0b:	sbb    al,0x0
  445d0d:	test   al,al
  445d0f:	je     445d80 <xmlStrEqual@plt+0x41e40>
  445d11:	mov    ecx,0x3
  445d16:	lea    rdi,[rip+0xfa4f]        # 45576c <xmlStrEqual@plt+0x5182c>
  445d1d:	mov    rsi,r12
  445d20:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  445d22:	seta   al
  445d25:	sbb    al,0x0
  445d27:	test   al,al
  445d29:	je     445f68 <xmlStrEqual@plt+0x42028>
  445d2f:	mov    ecx,0x4
  445d34:	lea    rdi,[rip+0xfa34]        # 45576f <xmlStrEqual@plt+0x5182f>
  445d3b:	mov    rsi,r12
  445d3e:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  445d40:	seta   al
  445d43:	sbb    al,0x0
  445d45:	test   al,al
  445d47:	je     445f80 <xmlStrEqual@plt+0x42040>
  445d4d:	mov    ecx,0x7
  445d52:	lea    rdi,[rip+0xfa1a]        # 455773 <xmlStrEqual@plt+0x51833>
  445d59:	mov    rsi,r12
  445d5c:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  445d5e:	seta   al
  445d61:	sbb    al,0x0
  445d63:	test   al,al
  445d65:	jne    445f38 <xmlStrEqual@plt+0x41ff8>
  445d6b:	mov    rdi,rbx
  445d6e:	call   445440 <xmlStrEqual@plt+0x41500>
  445d73:	mov    ebp,eax
  445d75:	jmp    445d90 <xmlStrEqual@plt+0x41e50>
  445d77:	nop    WORD PTR [rax+rax*1+0x0]
  445d80:	mov    rdi,rbx
  445d83:	call   444210 <xmlStrEqual@plt+0x402d0>
  445d88:	mov    ebp,eax
  445d8a:	nop    WORD PTR [rax+rax*1+0x0]
  445d90:	mov    rdi,r12
  445d93:	call   4037b0 <free@plt>
  445d98:	mov    rdi,rbx
  445d9b:	call   4038f0 <cfg_free@plt>
  445da0:	mov    rdx,QWORD PTR [rsp+0x13b8]
  445da8:	xor    rdx,QWORD PTR fs:0x28
  445db1:	mov    eax,ebp
  445db3:	jne    445f8f <xmlStrEqual@plt+0x4204f>
  445db9:	add    rsp,0x13c0
  445dc0:	pop    rbx
  445dc1:	pop    rbp
  445dc2:	pop    r12
  445dc4:	pop    r13
  445dc6:	pop    r14
  445dc8:	ret    
  445dc9:	nop    DWORD PTR [rax+0x0]
  445dd0:	mov    ecx,0x5
  445dd5:	lea    rdi,[rip+0xf80c]        # 4555e8 <xmlStrEqual@plt+0x516a8>
  445ddc:	mov    rsi,r14
  445ddf:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  445de1:	seta   al
  445de4:	sbb    al,0x0
  445de6:	test   al,al
  445de8:	jne    445f10 <xmlStrEqual@plt+0x41fd0>
  445dee:	mov    rax,0x474dc0
  445df5:	mov    DWORD PTR [rax],0x1
  445dfb:	mov    eax,DWORD PTR [r12]
  445dff:	test   eax,eax
  445e01:	jle    445c90 <xmlStrEqual@plt+0x41d50>
  445e07:	lea    rsi,[rip+0x1085a]        # 456668 <xmlStrEqual@plt+0x52728>
  445e0e:	mov    edi,0x5
  445e13:	xor    eax,eax
  445e15:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  445e1a:	jmp    445c90 <xmlStrEqual@plt+0x41d50>
  445e1f:	nop
  445e20:	lea    rsi,[rip+0xf8ed]        # 455714 <xmlStrEqual@plt+0x517d4>
  445e27:	mov    edi,0x4
  445e2c:	xor    eax,eax
  445e2e:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  445e33:	jmp    445c0d <xmlStrEqual@plt+0x41ccd>
  445e38:	nop    DWORD PTR [rax+rax*1+0x0]
  445e40:	mov    rdi,rbx
  445e43:	call   444560 <xmlStrEqual@plt+0x40620>
  445e48:	mov    ebp,eax
  445e4a:	jmp    445d90 <xmlStrEqual@plt+0x41e50>
  445e4f:	nop
  445e50:	mov    rdi,rax
  445e53:	call   431620 <xmlStrEqual@plt+0x2d6e0>
  445e58:	jmp    445c2c <xmlStrEqual@plt+0x41cec>
  445e5d:	nop    DWORD PTR [rax]
  445e60:	mov    rsi,r13
  445e63:	mov    rdi,rbx
  445e66:	call   403940 <cfg_getint@plt>
  445e6b:	mov    ebp,eax
  445e6d:	cmp    eax,0x3
  445e70:	jg     445ef0 <xmlStrEqual@plt+0x41fb0>
  445e72:	test   eax,eax
  445e74:	mov    edx,0x0
  445e79:	cmovs  eax,edx
  445e7c:	mov    DWORD PTR [r12],eax
  445e80:	jmp    445bf2 <xmlStrEqual@plt+0x41cb2>
  445e85:	nop    DWORD PTR [rax]
  445e88:	lea    rsi,[rip+0xf870]        # 4556ff <xmlStrEqual@plt+0x517bf>
  445e8f:	mov    edi,0x4
  445e94:	xor    eax,eax
  445e96:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  445e9b:	jmp    445c0d <xmlStrEqual@plt+0x41ccd>
  445ea0:	mov    rdx,QWORD PTR [r12]
  445ea4:	lea    rsi,[rip+0xde35]        # 453ce0 <xmlStrEqual@plt+0x4fda0>
  445eab:	mov    edi,0x1
  445eb0:	xor    eax,eax
  445eb2:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  445eb7:	mov    rdi,rbx
  445eba:	call   4038f0 <cfg_free@plt>
  445ebf:	xor    ebp,ebp
  445ec1:	jmp    445da0 <xmlStrEqual@plt+0x41e60>
  445ec6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  445ed0:	mov    rdi,rbx
  445ed3:	call   444870 <xmlStrEqual@plt+0x40930>
  445ed8:	mov    ebp,eax
  445eda:	jmp    445d90 <xmlStrEqual@plt+0x41e50>
  445edf:	nop
  445ee0:	mov    rdx,QWORD PTR [r12]
  445ee4:	lea    rsi,[rip+0x10735]        # 456620 <xmlStrEqual@plt+0x526e0>
  445eeb:	jmp    445eab <xmlStrEqual@plt+0x41f6b>
  445eed:	nop    DWORD PTR [rax]
  445ef0:	mov    DWORD PTR [r12],0x3
  445ef8:	lea    rsi,[rip+0xf82d]        # 45572c <xmlStrEqual@plt+0x517ec>
  445eff:	mov    edi,0x4
  445f04:	xor    eax,eax
  445f06:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  445f0b:	jmp    445c0d <xmlStrEqual@plt+0x41ccd>
  445f10:	mov    rdx,r13
  445f13:	lea    rsi,[rip+0x1076e]        # 456688 <xmlStrEqual@plt+0x52748>
  445f1a:	mov    edi,0x1
  445f1f:	xor    eax,eax
  445f21:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  445f26:	mov    rdi,r14
  445f29:	call   4037b0 <free@plt>
  445f2e:	xor    ebp,ebp
  445f30:	jmp    445da0 <xmlStrEqual@plt+0x41e60>
  445f35:	nop    DWORD PTR [rax]
  445f38:	mov    rdx,r12
  445f3b:	lea    rsi,[rip+0x10776]        # 4566b8 <xmlStrEqual@plt+0x52778>
  445f42:	mov    edi,0x1
  445f47:	xor    eax,eax
  445f49:	call   430e20 <xmlStrEqual@plt+0x2cee0>
  445f4e:	mov    rdi,rbx
  445f51:	call   4038f0 <cfg_free@plt>
  445f56:	mov    rdi,r12
  445f59:	call   4037b0 <free@plt>
  445f5e:	xor    ebp,ebp
  445f60:	jmp    445da0 <xmlStrEqual@plt+0x41e60>
  445f65:	nop    DWORD PTR [rax]
  445f68:	mov    rdi,rbx
  445f6b:	call   4446e0 <xmlStrEqual@plt+0x407a0>
  445f70:	mov    ebp,eax
  445f72:	jmp    445d90 <xmlStrEqual@plt+0x41e50>
  445f77:	nop    WORD PTR [rax+rax*1+0x0]
  445f80:	mov    rdi,rbx
  445f83:	call   444f00 <xmlStrEqual@plt+0x40fc0>
  445f88:	mov    ebp,eax
  445f8a:	jmp    445d90 <xmlStrEqual@plt+0x41e50>
  445f8f:	call   403c00 <__stack_chk_fail@plt>
  445f94:	nop    WORD PTR cs:[rax+rax*1+0x0]
  445f9e:	xchg   ax,ax
  445fa0:	endbr64 
  445fa4:	push   r15
  445fa6:	lea    r15,[rip+0x22c83]        # 468c30 <xmlStrEqual@plt+0x64cf0>
  445fad:	push   r14
  445faf:	mov    r14,rdx
  445fb2:	push   r13
  445fb4:	mov    r13,rsi
  445fb7:	push   r12
  445fb9:	mov    r12d,edi
  445fbc:	push   rbp
  445fbd:	lea    rbp,[rip+0x22c74]        # 468c38 <xmlStrEqual@plt+0x64cf8>
  445fc4:	push   rbx
  445fc5:	sub    rbp,r15
  445fc8:	sub    rsp,0x8
  445fcc:	call   403000 <free@plt-0x7b0>
  445fd1:	sar    rbp,0x3
  445fd5:	je     445ff6 <xmlStrEqual@plt+0x420b6>
  445fd7:	xor    ebx,ebx
  445fd9:	nop    DWORD PTR [rax+0x0]
  445fe0:	mov    rdx,r14
  445fe3:	mov    rsi,r13
  445fe6:	mov    edi,r12d
  445fe9:	call   QWORD PTR [r15+rbx*8]
  445fed:	add    rbx,0x1
  445ff1:	cmp    rbp,rbx
  445ff4:	jne    445fe0 <xmlStrEqual@plt+0x420a0>
  445ff6:	add    rsp,0x8
  445ffa:	pop    rbx
  445ffb:	pop    rbp
  445ffc:	pop    r12
  445ffe:	pop    r13
  446000:	pop    r14
  446002:	pop    r15
  446004:	ret    
  446005:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  446010:	endbr64 
  446014:	ret    

Disassembly of section .fini:

0000000000446018 <.fini>:
  446018:	endbr64 
  44601c:	sub    rsp,0x8
  446020:	add    rsp,0x8
  446024:	ret    
