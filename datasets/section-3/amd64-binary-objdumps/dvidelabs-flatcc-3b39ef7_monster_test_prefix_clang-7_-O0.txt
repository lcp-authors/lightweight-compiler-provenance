
../repos/dvidelabs-flatcc-3b39ef7/test/monster_test_prefix/monster_test_prefix:     file format elf64-x86-64


Disassembly of section .init:

0000000000403000 <.init>:
  403000:	endbr64 
  403004:	sub    rsp,0x8
  403008:	mov    rax,QWORD PTR [rip+0xffe9]        # 412ff8 <__gmon_start__>
  40300f:	test   rax,rax
  403012:	je     403016 <free@plt-0x1a>
  403014:	call   rax
  403016:	add    rsp,0x8
  40301a:	ret    

Disassembly of section .plt:

0000000000403020 <free@plt-0x10>:
  403020:	push   QWORD PTR [rip+0xffe2]        # 413008 <flatcc_builder_padding_base@@Base+0x4e38>
  403026:	jmp    QWORD PTR [rip+0xffe4]        # 413010 <flatcc_builder_padding_base@@Base+0x4e40>
  40302c:	nop    DWORD PTR [rax+0x0]

0000000000403030 <free@plt>:
  403030:	jmp    QWORD PTR [rip+0xffe2]        # 413018 <free@GLIBC_2.2.5>
  403036:	push   0x0
  40303b:	jmp    403020 <free@plt-0x10>

0000000000403040 <strncpy@plt>:
  403040:	jmp    QWORD PTR [rip+0xffda]        # 413020 <strncpy@GLIBC_2.2.5>
  403046:	push   0x1
  40304b:	jmp    403020 <free@plt-0x10>

0000000000403050 <strlen@plt>:
  403050:	jmp    QWORD PTR [rip+0xffd2]        # 413028 <strlen@GLIBC_2.2.5>
  403056:	push   0x2
  40305b:	jmp    403020 <free@plt-0x10>

0000000000403060 <__assert_fail@plt>:
  403060:	jmp    QWORD PTR [rip+0xffca]        # 413030 <__assert_fail@GLIBC_2.2.5>
  403066:	push   0x3
  40306b:	jmp    403020 <free@plt-0x10>

0000000000403070 <memset@plt>:
  403070:	jmp    QWORD PTR [rip+0xffc2]        # 413038 <memset@GLIBC_2.2.5>
  403076:	push   0x4
  40307b:	jmp    403020 <free@plt-0x10>

0000000000403080 <memchr@plt>:
  403080:	jmp    QWORD PTR [rip+0xffba]        # 413040 <memchr@GLIBC_2.2.5>
  403086:	push   0x5
  40308b:	jmp    403020 <free@plt-0x10>

0000000000403090 <memcmp@plt>:
  403090:	jmp    QWORD PTR [rip+0xffb2]        # 413048 <memcmp@GLIBC_2.2.5>
  403096:	push   0x6
  40309b:	jmp    403020 <free@plt-0x10>

00000000004030a0 <memcpy@plt>:
  4030a0:	jmp    QWORD PTR [rip+0xffaa]        # 413050 <memcpy@GLIBC_2.14>
  4030a6:	push   0x7
  4030ab:	jmp    403020 <free@plt-0x10>

00000000004030b0 <malloc@plt>:
  4030b0:	jmp    QWORD PTR [rip+0xffa2]        # 413058 <malloc@GLIBC_2.2.5>
  4030b6:	push   0x8
  4030bb:	jmp    403020 <free@plt-0x10>

00000000004030c0 <realloc@plt>:
  4030c0:	jmp    QWORD PTR [rip+0xff9a]        # 413060 <realloc@GLIBC_2.2.5>
  4030c6:	push   0x9
  4030cb:	jmp    403020 <free@plt-0x10>

00000000004030d0 <posix_memalign@plt>:
  4030d0:	jmp    QWORD PTR [rip+0xff92]        # 413068 <posix_memalign@GLIBC_2.2.5>
  4030d6:	push   0xa
  4030db:	jmp    403020 <free@plt-0x10>

Disassembly of section .text:

00000000004030e0 <_start@@Base>:
  4030e0:	endbr64 
  4030e4:	xor    ebp,ebp
  4030e6:	mov    r9,rdx
  4030e9:	pop    rsi
  4030ea:	mov    rdx,rsp
  4030ed:	and    rsp,0xfffffffffffffff0
  4030f1:	push   rax
  4030f2:	push   rsp
  4030f3:	mov    r8,0x40d570
  4030fa:	mov    rcx,0x40d500
  403101:	mov    rdi,0x4031d0
  403108:	call   QWORD PTR [rip+0xfee2]        # 412ff0 <__libc_start_main@GLIBC_2.2.5>
  40310e:	hlt    
  40310f:	nop
  403110:	endbr64 
  403114:	ret    
  403115:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40311f:	nop
  403120:	mov    eax,0x413080
  403125:	cmp    rax,0x413080
  40312b:	je     403140 <_start@@Base+0x60>
  40312d:	mov    eax,0x0
  403132:	test   rax,rax
  403135:	je     403140 <_start@@Base+0x60>
  403137:	mov    edi,0x413080
  40313c:	jmp    rax
  40313e:	xchg   ax,ax
  403140:	ret    
  403141:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40314c:	nop    DWORD PTR [rax+0x0]
  403150:	mov    esi,0x413080
  403155:	sub    rsi,0x413080
  40315c:	mov    rax,rsi
  40315f:	shr    rsi,0x3f
  403163:	sar    rax,0x3
  403167:	add    rsi,rax
  40316a:	sar    rsi,1
  40316d:	je     403180 <_start@@Base+0xa0>
  40316f:	mov    eax,0x0
  403174:	test   rax,rax
  403177:	je     403180 <_start@@Base+0xa0>
  403179:	mov    edi,0x413080
  40317e:	jmp    rax
  403180:	ret    
  403181:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40318c:	nop    DWORD PTR [rax+0x0]
  403190:	endbr64 
  403194:	cmp    BYTE PTR [rip+0xfee5],0x0        # 413080 <__bss_start@@Base>
  40319b:	jne    4031b0 <_start@@Base+0xd0>
  40319d:	push   rbp
  40319e:	mov    rbp,rsp
  4031a1:	call   403120 <_start@@Base+0x40>
  4031a6:	mov    BYTE PTR [rip+0xfed3],0x1        # 413080 <__bss_start@@Base>
  4031ad:	pop    rbp
  4031ae:	ret    
  4031af:	nop
  4031b0:	ret    
  4031b1:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4031bc:	nop    DWORD PTR [rax+0x0]
  4031c0:	endbr64 
  4031c4:	jmp    403150 <_start@@Base+0x70>
  4031c6:	nop    WORD PTR cs:[rax+rax*1+0x0]

00000000004031d0 <main@@Base>:
  4031d0:	push   rbp
  4031d1:	mov    rbp,rsp
  4031d4:	sub    rsp,0x1d0
  4031db:	mov    DWORD PTR [rbp-0x4],0x0
  4031e2:	mov    DWORD PTR [rbp-0x8],edi
  4031e5:	mov    QWORD PTR [rbp-0x10],rsi
  4031e9:	lea    rsi,[rbp-0x1b0]
  4031f0:	mov    QWORD PTR [rbp-0x1b8],rsi
  4031f7:	mov    rdi,QWORD PTR [rbp-0x1b8]
  4031fe:	call   404890 <flatcc_builder_init@@Base>
  403203:	mov    rdi,QWORD PTR [rbp-0x1b8]
  40320a:	mov    DWORD PTR [rbp-0x1bc],eax
  403210:	call   403290 <main@@Base+0xc0>
  403215:	mov    rdi,QWORD PTR [rbp-0x1b8]
  40321c:	lea    rsi,[rip+0xadf5]        # 40e018 <_IO_stdin_used@@Base+0x18>
  403223:	mov    DWORD PTR [rbp-0x1c0],eax
  403229:	call   4032e0 <main@@Base+0x110>
  40322e:	mov    rdi,QWORD PTR [rbp-0x1b8]
  403235:	mov    DWORD PTR [rbp-0x1c4],eax
  40323b:	call   403320 <main@@Base+0x150>
  403240:	mov    rdi,QWORD PTR [rbp-0x1b8]
  403247:	lea    rsi,[rbp-0x28]
  40324b:	mov    DWORD PTR [rbp-0x1c8],eax
  403251:	call   409d20 <flatcc_builder_get_direct_buffer@@Base>
  403256:	mov    QWORD PTR [rbp-0x20],rax
  40325a:	mov    rdi,QWORD PTR [rbp-0x20]
  40325e:	mov    rsi,QWORD PTR [rbp-0x28]
  403262:	lea    rdx,[rip+0xadb9]        # 40e022 <_IO_stdin_used@@Base+0x22>
  403269:	call   403360 <main@@Base+0x190>
  40326e:	mov    DWORD PTR [rbp-0x14],eax
  403271:	mov    rdi,QWORD PTR [rbp-0x1b8]
  403278:	call   404b50 <flatcc_builder_clear@@Base>
  40327d:	mov    eax,DWORD PTR [rbp-0x14]
  403280:	add    rsp,0x1d0
  403287:	pop    rbp
  403288:	ret    
  403289:	nop    DWORD PTR [rax+0x0]
  403290:	push   rbp
  403291:	mov    rbp,rsp
  403294:	sub    rsp,0x10
  403298:	mov    QWORD PTR [rbp-0x8],rdi
  40329c:	mov    rdi,QWORD PTR [rbp-0x8]
  4032a0:	lea    rsi,[rip+0xad7b]        # 40e022 <_IO_stdin_used@@Base+0x22>
  4032a7:	call   4033a0 <main@@Base+0x1d0>
  4032ac:	cmp    eax,0x0
  4032af:	je     4032c2 <main@@Base+0xf2>
  4032b5:	mov    eax,0xffffffff
  4032ba:	mov    DWORD PTR [rbp-0xc],eax
  4032bd:	jmp    4032ce <main@@Base+0xfe>
  4032c2:	mov    rdi,QWORD PTR [rbp-0x8]
  4032c6:	call   4033d0 <main@@Base+0x200>
  4032cb:	mov    DWORD PTR [rbp-0xc],eax
  4032ce:	mov    eax,DWORD PTR [rbp-0xc]
  4032d1:	add    rsp,0x10
  4032d5:	pop    rbp
  4032d6:	ret    
  4032d7:	nop    WORD PTR [rax+rax*1+0x0]
  4032e0:	push   rbp
  4032e1:	mov    rbp,rsp
  4032e4:	sub    rsp,0x20
  4032e8:	mov    QWORD PTR [rbp-0x8],rdi
  4032ec:	mov    QWORD PTR [rbp-0x10],rsi
  4032f0:	mov    rdi,QWORD PTR [rbp-0x8]
  4032f4:	mov    rsi,QWORD PTR [rbp-0x8]
  4032f8:	mov    rax,QWORD PTR [rbp-0x10]
  4032fc:	mov    QWORD PTR [rbp-0x18],rdi
  403300:	mov    rdi,rsi
  403303:	mov    rsi,rax
  403306:	call   4095d0 <flatcc_builder_create_string_str@@Base>
  40330b:	mov    rdi,QWORD PTR [rbp-0x18]
  40330f:	mov    esi,eax
  403311:	call   4033f0 <main@@Base+0x220>
  403316:	add    rsp,0x20
  40331a:	pop    rbp
  40331b:	ret    
  40331c:	nop    DWORD PTR [rax+0x0]
  403320:	push   rbp
  403321:	mov    rbp,rsp
  403324:	sub    rsp,0x10
  403328:	mov    QWORD PTR [rbp-0x8],rdi
  40332c:	mov    rdi,QWORD PTR [rbp-0x8]
  403330:	mov    rax,QWORD PTR [rbp-0x8]
  403334:	mov    QWORD PTR [rbp-0x10],rdi
  403338:	mov    rdi,rax
  40333b:	call   403480 <main@@Base+0x2b0>
  403340:	mov    rdi,QWORD PTR [rbp-0x10]
  403344:	mov    esi,eax
  403346:	call   403450 <main@@Base+0x280>
  40334b:	add    rsp,0x10
  40334f:	pop    rbp
  403350:	ret    
  403351:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40335b:	nop    DWORD PTR [rax+rax*1+0x0]
  403360:	push   rbp
  403361:	mov    rbp,rsp
  403364:	sub    rsp,0x20
  403368:	mov    QWORD PTR [rbp-0x8],rdi
  40336c:	mov    QWORD PTR [rbp-0x10],rsi
  403370:	mov    QWORD PTR [rbp-0x18],rdx
  403374:	mov    rdi,QWORD PTR [rbp-0x8]
  403378:	mov    rsi,QWORD PTR [rbp-0x10]
  40337c:	mov    rdx,QWORD PTR [rbp-0x18]
  403380:	lea    rcx,[rip+0x159]        # 4034e0 <main@@Base+0x310>
  403387:	call   40c710 <flatcc_verify_table_as_root@@Base>
  40338c:	add    rsp,0x20
  403390:	pop    rbp
  403391:	ret    
  403392:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40339c:	nop    DWORD PTR [rax+0x0]
  4033a0:	push   rbp
  4033a1:	mov    rbp,rsp
  4033a4:	sub    rsp,0x10
  4033a8:	xor    eax,eax
  4033aa:	mov    QWORD PTR [rbp-0x8],rdi
  4033ae:	mov    QWORD PTR [rbp-0x10],rsi
  4033b2:	mov    rdi,QWORD PTR [rbp-0x8]
  4033b6:	mov    rsi,QWORD PTR [rbp-0x10]
  4033ba:	mov    edx,eax
  4033bc:	mov    ecx,eax
  4033be:	call   405b00 <flatcc_builder_start_buffer@@Base>
  4033c3:	add    rsp,0x10
  4033c7:	pop    rbp
  4033c8:	ret    
  4033c9:	nop    DWORD PTR [rax+0x0]
  4033d0:	push   rbp
  4033d1:	mov    rbp,rsp
  4033d4:	sub    rsp,0x10
  4033d8:	mov    QWORD PTR [rbp-0x8],rdi
  4033dc:	mov    rdi,QWORD PTR [rbp-0x8]
  4033e0:	mov    esi,0x24
  4033e5:	call   407170 <flatcc_builder_start_table@@Base>
  4033ea:	add    rsp,0x10
  4033ee:	pop    rbp
  4033ef:	ret    
  4033f0:	push   rbp
  4033f1:	mov    rbp,rsp
  4033f4:	sub    rsp,0x20
  4033f8:	mov    QWORD PTR [rbp-0x8],rdi
  4033fc:	mov    DWORD PTR [rbp-0xc],esi
  4033ff:	cmp    DWORD PTR [rbp-0xc],0x0
  403403:	je     403438 <main@@Base+0x268>
  403409:	mov    rdi,QWORD PTR [rbp-0x8]
  40340d:	mov    esi,0x3
  403412:	call   408940 <flatcc_builder_table_add_offset@@Base>
  403417:	mov    QWORD PTR [rbp-0x18],rax
  40341b:	cmp    rax,0x0
  40341f:	je     403438 <main@@Base+0x268>
  403425:	xor    eax,eax
  403427:	mov    ecx,DWORD PTR [rbp-0xc]
  40342a:	mov    rdx,QWORD PTR [rbp-0x18]
  40342e:	mov    DWORD PTR [rdx],ecx
  403430:	mov    DWORD PTR [rbp-0x1c],eax
  403433:	jmp    403445 <main@@Base+0x275>
  403438:	mov    eax,0xffffffff
  40343d:	mov    DWORD PTR [rbp-0x1c],eax
  403440:	jmp    403445 <main@@Base+0x275>
  403445:	mov    eax,DWORD PTR [rbp-0x1c]
  403448:	add    rsp,0x20
  40344c:	pop    rbp
  40344d:	ret    
  40344e:	xchg   ax,ax
  403450:	push   rbp
  403451:	mov    rbp,rsp
  403454:	sub    rsp,0x10
  403458:	mov    QWORD PTR [rbp-0x8],rdi
  40345c:	mov    DWORD PTR [rbp-0xc],esi
  40345f:	mov    rdi,QWORD PTR [rbp-0x8]
  403463:	mov    esi,DWORD PTR [rbp-0xc]
  403466:	call   405e40 <flatcc_builder_end_buffer@@Base>
  40346b:	add    rsp,0x10
  40346f:	pop    rbp
  403470:	ret    
  403471:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40347b:	nop    DWORD PTR [rax+rax*1+0x0]
  403480:	push   rbp
  403481:	mov    rbp,rsp
  403484:	sub    rsp,0x10
  403488:	mov    QWORD PTR [rbp-0x8],rdi
  40348c:	mov    rdi,QWORD PTR [rbp-0x8]
  403490:	lea    rsi,[rip+0xab7d]        # 40e014 <_IO_stdin_used@@Base+0x14>
  403497:	mov    edx,0x1
  40349c:	call   407d30 <flatcc_builder_check_required@@Base>
  4034a1:	cmp    eax,0x0
  4034a4:	je     4034af <main@@Base+0x2df>
  4034aa:	jmp    4034ce <main@@Base+0x2fe>
  4034af:	lea    rdi,[rip+0xab71]        # 40e027 <_IO_stdin_used@@Base+0x27>
  4034b6:	lea    rsi,[rip+0xac18]        # 40e0d5 <_IO_stdin_used@@Base+0xd5>
  4034bd:	mov    edx,0x95e
  4034c2:	lea    rcx,[rip+0xac8c]        # 40e155 <_IO_stdin_used@@Base+0x155>
  4034c9:	call   403060 <__assert_fail@plt>
  4034ce:	mov    rdi,QWORD PTR [rbp-0x8]
  4034d2:	call   407e00 <flatcc_builder_end_table@@Base>
  4034d7:	add    rsp,0x10
  4034db:	pop    rbp
  4034dc:	ret    
  4034dd:	nop    DWORD PTR [rax]
  4034e0:	push   rbp
  4034e1:	mov    rbp,rsp
  4034e4:	sub    rsp,0x20
  4034e8:	xor    esi,esi
  4034ea:	mov    eax,0x20
  4034ef:	mov    edx,eax
  4034f1:	mov    QWORD PTR [rbp-0x10],rdi
  4034f5:	mov    rdi,QWORD PTR [rbp-0x10]
  4034f9:	mov    ecx,0x10
  4034fe:	call   40b2b0 <flatcc_verify_field@@Base>
  403503:	mov    DWORD PTR [rbp-0x14],eax
  403506:	cmp    eax,0x0
  403509:	je     40351a <main@@Base+0x34a>
  40350f:	mov    eax,DWORD PTR [rbp-0x14]
  403512:	mov    DWORD PTR [rbp-0x4],eax
  403515:	jmp    403ba3 <main@@Base+0x9d3>
  40351a:	mov    eax,0x2
  40351f:	mov    edx,eax
  403521:	mov    rdi,QWORD PTR [rbp-0x10]
  403525:	mov    eax,0x2
  40352a:	mov    esi,eax
  40352c:	mov    ecx,eax
  40352e:	call   40b2b0 <flatcc_verify_field@@Base>
  403533:	mov    DWORD PTR [rbp-0x14],eax
  403536:	cmp    eax,0x0
  403539:	je     40354a <main@@Base+0x37a>
  40353f:	mov    eax,DWORD PTR [rbp-0x14]
  403542:	mov    DWORD PTR [rbp-0x4],eax
  403545:	jmp    403ba3 <main@@Base+0x9d3>
  40354a:	mov    eax,0x2
  40354f:	mov    edx,eax
  403551:	mov    rdi,QWORD PTR [rbp-0x10]
  403555:	mov    esi,0x1
  40355a:	mov    ecx,0x2
  40355f:	call   40b2b0 <flatcc_verify_field@@Base>
  403564:	mov    DWORD PTR [rbp-0x14],eax
  403567:	cmp    eax,0x0
  40356a:	je     40357b <main@@Base+0x3ab>
  403570:	mov    eax,DWORD PTR [rbp-0x14]
  403573:	mov    DWORD PTR [rbp-0x4],eax
  403576:	jmp    403ba3 <main@@Base+0x9d3>
  40357b:	mov    rdi,QWORD PTR [rbp-0x10]
  40357f:	mov    esi,0x3
  403584:	mov    edx,0x1
  403589:	call   40b4b0 <flatcc_verify_string_field@@Base>
  40358e:	mov    DWORD PTR [rbp-0x14],eax
  403591:	cmp    eax,0x0
  403594:	je     4035a5 <main@@Base+0x3d5>
  40359a:	mov    eax,DWORD PTR [rbp-0x14]
  40359d:	mov    DWORD PTR [rbp-0x4],eax
  4035a0:	jmp    403ba3 <main@@Base+0x9d3>
  4035a5:	mov    eax,0x1
  4035aa:	mov    edx,eax
  4035ac:	mov    rdi,QWORD PTR [rbp-0x10]
  4035b0:	mov    esi,0x6
  4035b5:	mov    ecx,0x1
  4035ba:	call   40b2b0 <flatcc_verify_field@@Base>
  4035bf:	mov    DWORD PTR [rbp-0x14],eax
  4035c2:	cmp    eax,0x0
  4035c5:	je     4035d6 <main@@Base+0x406>
  4035cb:	mov    eax,DWORD PTR [rbp-0x14]
  4035ce:	mov    DWORD PTR [rbp-0x4],eax
  4035d1:	jmp    403ba3 <main@@Base+0x9d3>
  4035d6:	xor    edx,edx
  4035d8:	mov    eax,0x1
  4035dd:	mov    ecx,eax
  4035df:	mov    eax,0xffffffff
  4035e4:	mov    r9d,eax
  4035e7:	mov    rdi,QWORD PTR [rbp-0x10]
  4035eb:	mov    esi,0x5
  4035f0:	mov    r8d,0x1
  4035f6:	call   40b7c0 <flatcc_verify_vector_field@@Base>
  4035fb:	mov    DWORD PTR [rbp-0x14],eax
  4035fe:	cmp    eax,0x0
  403601:	je     403612 <main@@Base+0x442>
  403607:	mov    eax,DWORD PTR [rbp-0x14]
  40360a:	mov    DWORD PTR [rbp-0x4],eax
  40360d:	jmp    403ba3 <main@@Base+0x9d3>
  403612:	xor    edx,edx
  403614:	mov    rdi,QWORD PTR [rbp-0x10]
  403618:	mov    esi,0xb
  40361d:	lea    rcx,[rip+0xfffffffffffffebc]        # 4034e0 <main@@Base+0x310>
  403624:	call   40bee0 <flatcc_verify_table_vector_field@@Base>
  403629:	mov    DWORD PTR [rbp-0x14],eax
  40362c:	cmp    eax,0x0
  40362f:	je     403640 <main@@Base+0x470>
  403635:	mov    eax,DWORD PTR [rbp-0x14]
  403638:	mov    DWORD PTR [rbp-0x4],eax
  40363b:	jmp    403ba3 <main@@Base+0x9d3>
  403640:	xor    edx,edx
  403642:	mov    rdi,QWORD PTR [rbp-0x10]
  403646:	mov    esi,0xa
  40364b:	call   40b9b0 <flatcc_verify_string_vector_field@@Base>
  403650:	mov    DWORD PTR [rbp-0x14],eax
  403653:	cmp    eax,0x0
  403656:	je     403667 <main@@Base+0x497>
  40365c:	mov    eax,DWORD PTR [rbp-0x14]
  40365f:	mov    DWORD PTR [rbp-0x4],eax
  403662:	jmp    403ba3 <main@@Base+0x9d3>
  403667:	xor    edx,edx
  403669:	mov    rdi,QWORD PTR [rbp-0x10]
  40366d:	mov    esi,0x1c
  403672:	call   40b9b0 <flatcc_verify_string_vector_field@@Base>
  403677:	mov    DWORD PTR [rbp-0x14],eax
  40367a:	cmp    eax,0x0
  40367d:	je     40368e <main@@Base+0x4be>
  403683:	mov    eax,DWORD PTR [rbp-0x14]
  403686:	mov    DWORD PTR [rbp-0x4],eax
  403689:	jmp    403ba3 <main@@Base+0x9d3>
  40368e:	xor    edx,edx
  403690:	mov    eax,0x1
  403695:	mov    ecx,eax
  403697:	mov    eax,0xffffffff
  40369c:	mov    r9d,eax
  40369f:	mov    rdi,QWORD PTR [rbp-0x10]
  4036a3:	mov    esi,0x18
  4036a8:	mov    r8d,0x1
  4036ae:	call   40b7c0 <flatcc_verify_vector_field@@Base>
  4036b3:	mov    DWORD PTR [rbp-0x14],eax
  4036b6:	cmp    eax,0x0
  4036b9:	je     4036ca <main@@Base+0x4fa>
  4036bf:	mov    eax,DWORD PTR [rbp-0x14]
  4036c2:	mov    DWORD PTR [rbp-0x4],eax
  4036c5:	jmp    403ba3 <main@@Base+0x9d3>
  4036ca:	xor    edx,edx
  4036cc:	mov    eax,0x8
  4036d1:	mov    ecx,eax
  4036d3:	mov    eax,0x1fffffff
  4036d8:	mov    r9d,eax
  4036db:	mov    rdi,QWORD PTR [rbp-0x10]
  4036df:	mov    esi,0x1d
  4036e4:	mov    r8d,0x4
  4036ea:	call   40b7c0 <flatcc_verify_vector_field@@Base>
  4036ef:	mov    DWORD PTR [rbp-0x14],eax
  4036f2:	cmp    eax,0x0
  4036f5:	je     403706 <main@@Base+0x536>
  4036fb:	mov    eax,DWORD PTR [rbp-0x14]
  4036fe:	mov    DWORD PTR [rbp-0x4],eax
  403701:	jmp    403ba3 <main@@Base+0x9d3>
  403706:	xor    edx,edx
  403708:	mov    rdi,QWORD PTR [rbp-0x10]
  40370c:	mov    esi,0xc
  403711:	lea    rcx,[rip+0xfffffffffffffdc8]        # 4034e0 <main@@Base+0x310>
  403718:	call   40bbb0 <flatcc_verify_table_field@@Base>
  40371d:	mov    DWORD PTR [rbp-0x14],eax
  403720:	cmp    eax,0x0
  403723:	je     403734 <main@@Base+0x564>
  403729:	mov    eax,DWORD PTR [rbp-0x14]
  40372c:	mov    DWORD PTR [rbp-0x4],eax
  40372f:	jmp    403ba3 <main@@Base+0x9d3>
  403734:	xor    edx,edx
  403736:	mov    rdi,QWORD PTR [rbp-0x10]
  40373a:	mov    esi,0x8
  40373f:	lea    rcx,[rip+0x46a]        # 403bb0 <main@@Base+0x9e0>
  403746:	call   40cb80 <flatcc_verify_union_field@@Base>
  40374b:	mov    DWORD PTR [rbp-0x14],eax
  40374e:	cmp    eax,0x0
  403751:	je     403762 <main@@Base+0x592>
  403757:	mov    eax,DWORD PTR [rbp-0x14]
  40375a:	mov    DWORD PTR [rbp-0x4],eax
  40375d:	jmp    403ba3 <main@@Base+0x9d3>
  403762:	xor    edx,edx
  403764:	mov    eax,0x4
  403769:	mov    ecx,eax
  40376b:	mov    eax,0x3fffffff
  403770:	mov    r9d,eax
  403773:	mov    rdi,QWORD PTR [rbp-0x10]
  403777:	mov    esi,0x9
  40377c:	mov    r8d,0x2
  403782:	call   40b7c0 <flatcc_verify_vector_field@@Base>
  403787:	mov    DWORD PTR [rbp-0x14],eax
  40378a:	cmp    eax,0x0
  40378d:	je     40379e <main@@Base+0x5ce>
  403793:	mov    eax,DWORD PTR [rbp-0x14]
  403796:	mov    DWORD PTR [rbp-0x4],eax
  403799:	jmp    403ba3 <main@@Base+0x9d3>
  40379e:	xor    edx,edx
  4037a0:	mov    eax,0x4
  4037a5:	mov    ecx,eax
  4037a7:	mov    eax,0x3fffffff
  4037ac:	mov    r9d,eax
  4037af:	mov    rdi,QWORD PTR [rbp-0x10]
  4037b3:	mov    esi,0x1f
  4037b8:	mov    r8d,0x2
  4037be:	call   40b7c0 <flatcc_verify_vector_field@@Base>
  4037c3:	mov    DWORD PTR [rbp-0x14],eax
  4037c6:	cmp    eax,0x0
  4037c9:	je     4037da <main@@Base+0x60a>
  4037cf:	mov    eax,DWORD PTR [rbp-0x14]
  4037d2:	mov    DWORD PTR [rbp-0x4],eax
  4037d5:	jmp    403ba3 <main@@Base+0x9d3>
  4037da:	xor    edx,edx
  4037dc:	xor    eax,eax
  4037de:	mov    ecx,eax
  4037e0:	mov    rdi,QWORD PTR [rbp-0x10]
  4037e4:	mov    esi,0xd
  4037e9:	mov    r8d,0x1
  4037ef:	lea    r9,[rip+0xfffffffffffffcea]        # 4034e0 <main@@Base+0x310>
  4037f6:	call   40ca00 <flatcc_verify_table_as_nested_root@@Base>
  4037fb:	mov    DWORD PTR [rbp-0x14],eax
  4037fe:	cmp    eax,0x0
  403801:	je     403812 <main@@Base+0x642>
  403807:	mov    eax,DWORD PTR [rbp-0x14]
  40380a:	mov    DWORD PTR [rbp-0x4],eax
  40380d:	jmp    403ba3 <main@@Base+0x9d3>
  403812:	xor    edx,edx
  403814:	mov    rdi,QWORD PTR [rbp-0x10]
  403818:	mov    esi,0xe
  40381d:	lea    rcx,[rip+0x43c]        # 403c60 <main@@Base+0xa90>
  403824:	call   40bbb0 <flatcc_verify_table_field@@Base>
  403829:	mov    DWORD PTR [rbp-0x14],eax
  40382c:	cmp    eax,0x0
  40382f:	je     403840 <main@@Base+0x670>
  403835:	mov    eax,DWORD PTR [rbp-0x14]
  403838:	mov    DWORD PTR [rbp-0x4],eax
  40383b:	jmp    403ba3 <main@@Base+0x9d3>
  403840:	mov    eax,0x1
  403845:	mov    edx,eax
  403847:	mov    rdi,QWORD PTR [rbp-0x10]
  40384b:	mov    esi,0xf
  403850:	mov    ecx,0x1
  403855:	call   40b2b0 <flatcc_verify_field@@Base>
  40385a:	mov    DWORD PTR [rbp-0x14],eax
  40385d:	cmp    eax,0x0
  403860:	je     403871 <main@@Base+0x6a1>
  403866:	mov    eax,DWORD PTR [rbp-0x14]
  403869:	mov    DWORD PTR [rbp-0x4],eax
  40386c:	jmp    403ba3 <main@@Base+0x9d3>
  403871:	mov    eax,0x4
  403876:	mov    edx,eax
  403878:	mov    rdi,QWORD PTR [rbp-0x10]
  40387c:	mov    esi,0x10
  403881:	mov    ecx,0x4
  403886:	call   40b2b0 <flatcc_verify_field@@Base>
  40388b:	mov    DWORD PTR [rbp-0x14],eax
  40388e:	cmp    eax,0x0
  403891:	je     4038a2 <main@@Base+0x6d2>
  403897:	mov    eax,DWORD PTR [rbp-0x14]
  40389a:	mov    DWORD PTR [rbp-0x4],eax
  40389d:	jmp    403ba3 <main@@Base+0x9d3>
  4038a2:	mov    eax,0x4
  4038a7:	mov    edx,eax
  4038a9:	mov    rdi,QWORD PTR [rbp-0x10]
  4038ad:	mov    esi,0x11
  4038b2:	mov    ecx,0x4
  4038b7:	call   40b2b0 <flatcc_verify_field@@Base>
  4038bc:	mov    DWORD PTR [rbp-0x14],eax
  4038bf:	cmp    eax,0x0
  4038c2:	je     4038d3 <main@@Base+0x703>
  4038c8:	mov    eax,DWORD PTR [rbp-0x14]
  4038cb:	mov    DWORD PTR [rbp-0x4],eax
  4038ce:	jmp    403ba3 <main@@Base+0x9d3>
  4038d3:	mov    eax,0x8
  4038d8:	mov    edx,eax
  4038da:	mov    rdi,QWORD PTR [rbp-0x10]
  4038de:	mov    esi,0x12
  4038e3:	mov    ecx,0x8
  4038e8:	call   40b2b0 <flatcc_verify_field@@Base>
  4038ed:	mov    DWORD PTR [rbp-0x14],eax
  4038f0:	cmp    eax,0x0
  4038f3:	je     403904 <main@@Base+0x734>
  4038f9:	mov    eax,DWORD PTR [rbp-0x14]
  4038fc:	mov    DWORD PTR [rbp-0x4],eax
  4038ff:	jmp    403ba3 <main@@Base+0x9d3>
  403904:	mov    eax,0x8
  403909:	mov    edx,eax
  40390b:	mov    rdi,QWORD PTR [rbp-0x10]
  40390f:	mov    esi,0x13
  403914:	mov    ecx,0x8
  403919:	call   40b2b0 <flatcc_verify_field@@Base>
  40391e:	mov    DWORD PTR [rbp-0x14],eax
  403921:	cmp    eax,0x0
  403924:	je     403935 <main@@Base+0x765>
  40392a:	mov    eax,DWORD PTR [rbp-0x14]
  40392d:	mov    DWORD PTR [rbp-0x4],eax
  403930:	jmp    403ba3 <main@@Base+0x9d3>
  403935:	mov    eax,0x4
  40393a:	mov    edx,eax
  40393c:	mov    rdi,QWORD PTR [rbp-0x10]
  403940:	mov    esi,0x14
  403945:	mov    ecx,0x4
  40394a:	call   40b2b0 <flatcc_verify_field@@Base>
  40394f:	mov    DWORD PTR [rbp-0x14],eax
  403952:	cmp    eax,0x0
  403955:	je     403966 <main@@Base+0x796>
  40395b:	mov    eax,DWORD PTR [rbp-0x14]
  40395e:	mov    DWORD PTR [rbp-0x4],eax
  403961:	jmp    403ba3 <main@@Base+0x9d3>
  403966:	mov    eax,0x4
  40396b:	mov    edx,eax
  40396d:	mov    rdi,QWORD PTR [rbp-0x10]
  403971:	mov    esi,0x15
  403976:	mov    ecx,0x4
  40397b:	call   40b2b0 <flatcc_verify_field@@Base>
  403980:	mov    DWORD PTR [rbp-0x14],eax
  403983:	cmp    eax,0x0
  403986:	je     403997 <main@@Base+0x7c7>
  40398c:	mov    eax,DWORD PTR [rbp-0x14]
  40398f:	mov    DWORD PTR [rbp-0x4],eax
  403992:	jmp    403ba3 <main@@Base+0x9d3>
  403997:	mov    eax,0x8
  40399c:	mov    edx,eax
  40399e:	mov    rdi,QWORD PTR [rbp-0x10]
  4039a2:	mov    esi,0x16
  4039a7:	mov    ecx,0x8
  4039ac:	call   40b2b0 <flatcc_verify_field@@Base>
  4039b1:	mov    DWORD PTR [rbp-0x14],eax
  4039b4:	cmp    eax,0x0
  4039b7:	je     4039c8 <main@@Base+0x7f8>
  4039bd:	mov    eax,DWORD PTR [rbp-0x14]
  4039c0:	mov    DWORD PTR [rbp-0x4],eax
  4039c3:	jmp    403ba3 <main@@Base+0x9d3>
  4039c8:	mov    eax,0x8
  4039cd:	mov    edx,eax
  4039cf:	mov    rdi,QWORD PTR [rbp-0x10]
  4039d3:	mov    esi,0x17
  4039d8:	mov    ecx,0x8
  4039dd:	call   40b2b0 <flatcc_verify_field@@Base>
  4039e2:	mov    DWORD PTR [rbp-0x14],eax
  4039e5:	cmp    eax,0x0
  4039e8:	je     4039f9 <main@@Base+0x829>
  4039ee:	mov    eax,DWORD PTR [rbp-0x14]
  4039f1:	mov    DWORD PTR [rbp-0x4],eax
  4039f4:	jmp    403ba3 <main@@Base+0x9d3>
  4039f9:	mov    eax,0x4
  4039fe:	mov    edx,eax
  403a00:	mov    rdi,QWORD PTR [rbp-0x10]
  403a04:	mov    esi,0x19
  403a09:	mov    ecx,0x4
  403a0e:	call   40b2b0 <flatcc_verify_field@@Base>
  403a13:	mov    DWORD PTR [rbp-0x14],eax
  403a16:	cmp    eax,0x0
  403a19:	je     403a2a <main@@Base+0x85a>
  403a1f:	mov    eax,DWORD PTR [rbp-0x14]
  403a22:	mov    DWORD PTR [rbp-0x4],eax
  403a25:	jmp    403ba3 <main@@Base+0x9d3>
  403a2a:	mov    eax,0x4
  403a2f:	mov    edx,eax
  403a31:	mov    rdi,QWORD PTR [rbp-0x10]
  403a35:	mov    esi,0x1a
  403a3a:	mov    ecx,0x4
  403a3f:	call   40b2b0 <flatcc_verify_field@@Base>
  403a44:	mov    DWORD PTR [rbp-0x14],eax
  403a47:	cmp    eax,0x0
  403a4a:	je     403a5b <main@@Base+0x88b>
  403a50:	mov    eax,DWORD PTR [rbp-0x14]
  403a53:	mov    DWORD PTR [rbp-0x4],eax
  403a56:	jmp    403ba3 <main@@Base+0x9d3>
  403a5b:	mov    eax,0x4
  403a60:	mov    edx,eax
  403a62:	mov    rdi,QWORD PTR [rbp-0x10]
  403a66:	mov    esi,0x1b
  403a6b:	mov    ecx,0x4
  403a70:	call   40b2b0 <flatcc_verify_field@@Base>
  403a75:	mov    DWORD PTR [rbp-0x14],eax
  403a78:	cmp    eax,0x0
  403a7b:	je     403a8c <main@@Base+0x8bc>
  403a81:	mov    eax,DWORD PTR [rbp-0x14]
  403a84:	mov    DWORD PTR [rbp-0x4],eax
  403a87:	jmp    403ba3 <main@@Base+0x9d3>
  403a8c:	xor    edx,edx
  403a8e:	mov    eax,0x1
  403a93:	mov    ecx,eax
  403a95:	mov    eax,0xffffffff
  403a9a:	mov    r9d,eax
  403a9d:	mov    rdi,QWORD PTR [rbp-0x10]
  403aa1:	mov    esi,0x1e
  403aa6:	mov    r8d,0x1
  403aac:	call   40b7c0 <flatcc_verify_vector_field@@Base>
  403ab1:	mov    DWORD PTR [rbp-0x14],eax
  403ab4:	cmp    eax,0x0
  403ab7:	je     403ac8 <main@@Base+0x8f8>
  403abd:	mov    eax,DWORD PTR [rbp-0x14]
  403ac0:	mov    DWORD PTR [rbp-0x4],eax
  403ac3:	jmp    403ba3 <main@@Base+0x9d3>
  403ac8:	xor    edx,edx
  403aca:	mov    eax,0x8
  403acf:	mov    ecx,eax
  403ad1:	mov    eax,0x1fffffff
  403ad6:	mov    r9d,eax
  403ad9:	mov    rdi,QWORD PTR [rbp-0x10]
  403add:	mov    esi,0x20
  403ae2:	mov    r8d,0x8
  403ae8:	call   40b7c0 <flatcc_verify_vector_field@@Base>
  403aed:	mov    DWORD PTR [rbp-0x14],eax
  403af0:	cmp    eax,0x0
  403af3:	je     403b04 <main@@Base+0x934>
  403af9:	mov    eax,DWORD PTR [rbp-0x14]
  403afc:	mov    DWORD PTR [rbp-0x4],eax
  403aff:	jmp    403ba3 <main@@Base+0x9d3>
  403b04:	xor    edx,edx
  403b06:	mov    eax,0x8
  403b0b:	mov    ecx,eax
  403b0d:	mov    eax,0x1fffffff
  403b12:	mov    r9d,eax
  403b15:	mov    rdi,QWORD PTR [rbp-0x10]
  403b19:	mov    esi,0x21
  403b1e:	mov    r8d,0x8
  403b24:	call   40b7c0 <flatcc_verify_vector_field@@Base>
  403b29:	mov    DWORD PTR [rbp-0x14],eax
  403b2c:	cmp    eax,0x0
  403b2f:	je     403b40 <main@@Base+0x970>
  403b35:	mov    eax,DWORD PTR [rbp-0x14]
  403b38:	mov    DWORD PTR [rbp-0x4],eax
  403b3b:	jmp    403ba3 <main@@Base+0x9d3>
  403b40:	xor    edx,edx
  403b42:	mov    rdi,QWORD PTR [rbp-0x10]
  403b46:	mov    esi,0x22
  403b4b:	lea    rcx,[rip+0x1be]        # 403d10 <main@@Base+0xb40>
  403b52:	call   40bbb0 <flatcc_verify_table_field@@Base>
  403b57:	mov    DWORD PTR [rbp-0x14],eax
  403b5a:	cmp    eax,0x0
  403b5d:	je     403b6e <main@@Base+0x99e>
  403b63:	mov    eax,DWORD PTR [rbp-0x14]
  403b66:	mov    DWORD PTR [rbp-0x4],eax
  403b69:	jmp    403ba3 <main@@Base+0x9d3>
  403b6e:	xor    edx,edx
  403b70:	mov    rdi,QWORD PTR [rbp-0x10]
  403b74:	mov    esi,0x23
  403b79:	lea    rcx,[rip+0x1a0]        # 403d20 <main@@Base+0xb50>
  403b80:	call   40bbb0 <flatcc_verify_table_field@@Base>
  403b85:	mov    DWORD PTR [rbp-0x14],eax
  403b88:	cmp    eax,0x0
  403b8b:	je     403b9c <main@@Base+0x9cc>
  403b91:	mov    eax,DWORD PTR [rbp-0x14]
  403b94:	mov    DWORD PTR [rbp-0x4],eax
  403b97:	jmp    403ba3 <main@@Base+0x9d3>
  403b9c:	mov    DWORD PTR [rbp-0x4],0x0
  403ba3:	mov    eax,DWORD PTR [rbp-0x4]
  403ba6:	add    rsp,0x20
  403baa:	pop    rbp
  403bab:	ret    
  403bac:	nop    DWORD PTR [rax+0x0]
  403bb0:	push   rbp
  403bb1:	mov    rbp,rsp
  403bb4:	sub    rsp,0x20
  403bb8:	mov    QWORD PTR [rbp-0x10],rdi
  403bbc:	mov    rdi,QWORD PTR [rbp-0x10]
  403bc0:	movzx  eax,BYTE PTR [rdi+0x10]
  403bc4:	add    eax,0xffffffff
  403bc7:	mov    edi,eax
  403bc9:	sub    eax,0x3
  403bcc:	mov    QWORD PTR [rbp-0x18],rdi
  403bd0:	mov    DWORD PTR [rbp-0x1c],eax
  403bd3:	ja     403c4d <main@@Base+0xa7d>
  403bd9:	lea    rax,[rip+0xa424]        # 40e004 <_IO_stdin_used@@Base+0x4>
  403be0:	mov    rcx,QWORD PTR [rbp-0x18]
  403be4:	movsxd rdx,DWORD PTR [rax+rcx*4]
  403be8:	add    rdx,rax
  403beb:	jmp    rdx
  403bed:	mov    rdi,QWORD PTR [rbp-0x10]
  403bf1:	lea    rsi,[rip+0xfffffffffffff8e8]        # 4034e0 <main@@Base+0x310>
  403bf8:	call   40c140 <flatcc_verify_union_table@@Base>
  403bfd:	mov    DWORD PTR [rbp-0x4],eax
  403c00:	jmp    403c54 <main@@Base+0xa84>
  403c05:	mov    rdi,QWORD PTR [rbp-0x10]
  403c09:	lea    rsi,[rip+0x1e0]        # 403df0 <main@@Base+0xc20>
  403c10:	call   40c140 <flatcc_verify_union_table@@Base>
  403c15:	mov    DWORD PTR [rbp-0x4],eax
  403c18:	jmp    403c54 <main@@Base+0xa84>
  403c1d:	mov    rdi,QWORD PTR [rbp-0x10]
  403c21:	lea    rsi,[rip+0x2a8]        # 403ed0 <main@@Base+0xd00>
  403c28:	call   40c140 <flatcc_verify_union_table@@Base>
  403c2d:	mov    DWORD PTR [rbp-0x4],eax
  403c30:	jmp    403c54 <main@@Base+0xa84>
  403c35:	mov    rdi,QWORD PTR [rbp-0x10]
  403c39:	lea    rsi,[rip+0x2a0]        # 403ee0 <main@@Base+0xd10>
  403c40:	call   40c140 <flatcc_verify_union_table@@Base>
  403c45:	mov    DWORD PTR [rbp-0x4],eax
  403c48:	jmp    403c54 <main@@Base+0xa84>
  403c4d:	mov    DWORD PTR [rbp-0x4],0x0
  403c54:	mov    eax,DWORD PTR [rbp-0x4]
  403c57:	add    rsp,0x20
  403c5b:	pop    rbp
  403c5c:	ret    
  403c5d:	nop    DWORD PTR [rax]
  403c60:	push   rbp
  403c61:	mov    rbp,rsp
  403c64:	sub    rsp,0x20
  403c68:	xor    eax,eax
  403c6a:	mov    QWORD PTR [rbp-0x10],rdi
  403c6e:	mov    rdi,QWORD PTR [rbp-0x10]
  403c72:	mov    esi,eax
  403c74:	mov    edx,eax
  403c76:	call   40b4b0 <flatcc_verify_string_field@@Base>
  403c7b:	mov    DWORD PTR [rbp-0x14],eax
  403c7e:	cmp    eax,0x0
  403c81:	je     403c92 <main@@Base+0xac2>
  403c87:	mov    eax,DWORD PTR [rbp-0x14]
  403c8a:	mov    DWORD PTR [rbp-0x4],eax
  403c8d:	jmp    403cfa <main@@Base+0xb2a>
  403c92:	mov    eax,0x8
  403c97:	mov    edx,eax
  403c99:	mov    rdi,QWORD PTR [rbp-0x10]
  403c9d:	mov    esi,0x1
  403ca2:	mov    ecx,0x8
  403ca7:	call   40b2b0 <flatcc_verify_field@@Base>
  403cac:	mov    DWORD PTR [rbp-0x14],eax
  403caf:	cmp    eax,0x0
  403cb2:	je     403cc3 <main@@Base+0xaf3>
  403cb8:	mov    eax,DWORD PTR [rbp-0x14]
  403cbb:	mov    DWORD PTR [rbp-0x4],eax
  403cbe:	jmp    403cfa <main@@Base+0xb2a>
  403cc3:	mov    eax,0x2
  403cc8:	mov    edx,eax
  403cca:	mov    rdi,QWORD PTR [rbp-0x10]
  403cce:	mov    eax,0x2
  403cd3:	mov    esi,eax
  403cd5:	mov    ecx,eax
  403cd7:	call   40b2b0 <flatcc_verify_field@@Base>
  403cdc:	mov    DWORD PTR [rbp-0x14],eax
  403cdf:	cmp    eax,0x0
  403ce2:	je     403cf3 <main@@Base+0xb23>
  403ce8:	mov    eax,DWORD PTR [rbp-0x14]
  403ceb:	mov    DWORD PTR [rbp-0x4],eax
  403cee:	jmp    403cfa <main@@Base+0xb2a>
  403cf3:	mov    DWORD PTR [rbp-0x4],0x0
  403cfa:	mov    eax,DWORD PTR [rbp-0x4]
  403cfd:	add    rsp,0x20
  403d01:	pop    rbp
  403d02:	ret    
  403d03:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403d0d:	nop    DWORD PTR [rax]
  403d10:	push   rbp
  403d11:	mov    rbp,rsp
  403d14:	xor    eax,eax
  403d16:	mov    QWORD PTR [rbp-0x8],rdi
  403d1a:	pop    rbp
  403d1b:	ret    
  403d1c:	nop    DWORD PTR [rax+0x0]
  403d20:	push   rbp
  403d21:	mov    rbp,rsp
  403d24:	sub    rsp,0x20
  403d28:	xor    eax,eax
  403d2a:	mov    ecx,0x1
  403d2f:	mov    edx,0xffffffff
  403d34:	mov    r9d,edx
  403d37:	mov    QWORD PTR [rbp-0x10],rdi
  403d3b:	mov    rdi,QWORD PTR [rbp-0x10]
  403d3f:	mov    esi,eax
  403d41:	mov    edx,eax
  403d43:	mov    r8d,0x1
  403d49:	call   40b7c0 <flatcc_verify_vector_field@@Base>
  403d4e:	mov    DWORD PTR [rbp-0x14],eax
  403d51:	cmp    eax,0x0
  403d54:	je     403d65 <main@@Base+0xb95>
  403d5a:	mov    eax,DWORD PTR [rbp-0x14]
  403d5d:	mov    DWORD PTR [rbp-0x4],eax
  403d60:	jmp    403ddf <main@@Base+0xc0f>
  403d65:	xor    edx,edx
  403d67:	mov    eax,0x1
  403d6c:	mov    ecx,eax
  403d6e:	mov    eax,0xffffffff
  403d73:	mov    r9d,eax
  403d76:	mov    rdi,QWORD PTR [rbp-0x10]
  403d7a:	mov    eax,0x1
  403d7f:	mov    esi,eax
  403d81:	mov    r8d,eax
  403d84:	call   40b7c0 <flatcc_verify_vector_field@@Base>
  403d89:	mov    DWORD PTR [rbp-0x14],eax
  403d8c:	cmp    eax,0x0
  403d8f:	je     403da0 <main@@Base+0xbd0>
  403d95:	mov    eax,DWORD PTR [rbp-0x14]
  403d98:	mov    DWORD PTR [rbp-0x4],eax
  403d9b:	jmp    403ddf <main@@Base+0xc0f>
  403da0:	xor    edx,edx
  403da2:	xor    eax,eax
  403da4:	mov    ecx,eax
  403da6:	mov    rdi,QWORD PTR [rbp-0x10]
  403daa:	mov    esi,0x2
  403daf:	mov    r8d,0x1
  403db5:	lea    r9,[rip+0xfffffffffffff724]        # 4034e0 <main@@Base+0x310>
  403dbc:	call   40ca00 <flatcc_verify_table_as_nested_root@@Base>
  403dc1:	mov    DWORD PTR [rbp-0x14],eax
  403dc4:	cmp    eax,0x0
  403dc7:	je     403dd8 <main@@Base+0xc08>
  403dcd:	mov    eax,DWORD PTR [rbp-0x14]
  403dd0:	mov    DWORD PTR [rbp-0x4],eax
  403dd3:	jmp    403ddf <main@@Base+0xc0f>
  403dd8:	mov    DWORD PTR [rbp-0x4],0x0
  403ddf:	mov    eax,DWORD PTR [rbp-0x4]
  403de2:	add    rsp,0x20
  403de6:	pop    rbp
  403de7:	ret    
  403de8:	nop    DWORD PTR [rax+rax*1+0x0]
  403df0:	push   rbp
  403df1:	mov    rbp,rsp
  403df4:	sub    rsp,0x20
  403df8:	xor    esi,esi
  403dfa:	mov    eax,0x1
  403dff:	mov    edx,eax
  403e01:	mov    QWORD PTR [rbp-0x10],rdi
  403e05:	mov    rdi,QWORD PTR [rbp-0x10]
  403e09:	mov    ecx,0x1
  403e0e:	call   40b2b0 <flatcc_verify_field@@Base>
  403e13:	mov    DWORD PTR [rbp-0x14],eax
  403e16:	cmp    eax,0x0
  403e19:	je     403e2a <main@@Base+0xc5a>
  403e1f:	mov    eax,DWORD PTR [rbp-0x14]
  403e22:	mov    DWORD PTR [rbp-0x4],eax
  403e25:	jmp    403ec3 <main@@Base+0xcf3>
  403e2a:	mov    eax,0x1
  403e2f:	mov    edx,eax
  403e31:	mov    rdi,QWORD PTR [rbp-0x10]
  403e35:	mov    eax,0x1
  403e3a:	mov    esi,eax
  403e3c:	mov    ecx,eax
  403e3e:	call   40b2b0 <flatcc_verify_field@@Base>
  403e43:	mov    DWORD PTR [rbp-0x14],eax
  403e46:	cmp    eax,0x0
  403e49:	je     403e5a <main@@Base+0xc8a>
  403e4f:	mov    eax,DWORD PTR [rbp-0x14]
  403e52:	mov    DWORD PTR [rbp-0x4],eax
  403e55:	jmp    403ec3 <main@@Base+0xcf3>
  403e5a:	mov    eax,0x1
  403e5f:	mov    edx,eax
  403e61:	mov    rdi,QWORD PTR [rbp-0x10]
  403e65:	mov    esi,0x2
  403e6a:	mov    ecx,0x1
  403e6f:	call   40b2b0 <flatcc_verify_field@@Base>
  403e74:	mov    DWORD PTR [rbp-0x14],eax
  403e77:	cmp    eax,0x0
  403e7a:	je     403e8b <main@@Base+0xcbb>
  403e80:	mov    eax,DWORD PTR [rbp-0x14]
  403e83:	mov    DWORD PTR [rbp-0x4],eax
  403e86:	jmp    403ec3 <main@@Base+0xcf3>
  403e8b:	mov    eax,0x1
  403e90:	mov    edx,eax
  403e92:	mov    rdi,QWORD PTR [rbp-0x10]
  403e96:	mov    esi,0x3
  403e9b:	mov    ecx,0x1
  403ea0:	call   40b2b0 <flatcc_verify_field@@Base>
  403ea5:	mov    DWORD PTR [rbp-0x14],eax
  403ea8:	cmp    eax,0x0
  403eab:	je     403ebc <main@@Base+0xcec>
  403eb1:	mov    eax,DWORD PTR [rbp-0x14]
  403eb4:	mov    DWORD PTR [rbp-0x4],eax
  403eb7:	jmp    403ec3 <main@@Base+0xcf3>
  403ebc:	mov    DWORD PTR [rbp-0x4],0x0
  403ec3:	mov    eax,DWORD PTR [rbp-0x4]
  403ec6:	add    rsp,0x20
  403eca:	pop    rbp
  403ecb:	ret    
  403ecc:	nop    DWORD PTR [rax+0x0]
  403ed0:	push   rbp
  403ed1:	mov    rbp,rsp
  403ed4:	xor    eax,eax
  403ed6:	mov    QWORD PTR [rbp-0x8],rdi
  403eda:	pop    rbp
  403edb:	ret    
  403edc:	nop    DWORD PTR [rax+0x0]
  403ee0:	push   rbp
  403ee1:	mov    rbp,rsp
  403ee4:	sub    rsp,0x20
  403ee8:	xor    eax,eax
  403eea:	mov    QWORD PTR [rbp-0x10],rdi
  403eee:	mov    rdi,QWORD PTR [rbp-0x10]
  403ef2:	mov    esi,eax
  403ef4:	mov    edx,eax
  403ef6:	lea    rcx,[rip+0x93]        # 403f90 <main@@Base+0xdc0>
  403efd:	call   40bbb0 <flatcc_verify_table_field@@Base>
  403f02:	mov    DWORD PTR [rbp-0x14],eax
  403f05:	cmp    eax,0x0
  403f08:	je     403f19 <main@@Base+0xd49>
  403f0e:	mov    eax,DWORD PTR [rbp-0x14]
  403f11:	mov    DWORD PTR [rbp-0x4],eax
  403f14:	jmp    403f7c <main@@Base+0xdac>
  403f19:	xor    edx,edx
  403f1b:	mov    rdi,QWORD PTR [rbp-0x10]
  403f1f:	mov    esi,0x1
  403f24:	lea    rcx,[rip+0x115]        # 404040 <main@@Base+0xe70>
  403f2b:	call   40bbb0 <flatcc_verify_table_field@@Base>
  403f30:	mov    DWORD PTR [rbp-0x14],eax
  403f33:	cmp    eax,0x0
  403f36:	je     403f47 <main@@Base+0xd77>
  403f3c:	mov    eax,DWORD PTR [rbp-0x14]
  403f3f:	mov    DWORD PTR [rbp-0x4],eax
  403f42:	jmp    403f7c <main@@Base+0xdac>
  403f47:	xor    edx,edx
  403f49:	mov    rdi,QWORD PTR [rbp-0x10]
  403f4d:	mov    esi,0x3
  403f52:	lea    rcx,[rip+0xfffffffffffffc57]        # 403bb0 <main@@Base+0x9e0>
  403f59:	call   40ce40 <flatcc_verify_union_vector_field@@Base>
  403f5e:	mov    DWORD PTR [rbp-0x14],eax
  403f61:	cmp    eax,0x0
  403f64:	je     403f75 <main@@Base+0xda5>
  403f6a:	mov    eax,DWORD PTR [rbp-0x14]
  403f6d:	mov    DWORD PTR [rbp-0x4],eax
  403f70:	jmp    403f7c <main@@Base+0xdac>
  403f75:	mov    DWORD PTR [rbp-0x4],0x0
  403f7c:	mov    eax,DWORD PTR [rbp-0x4]
  403f7f:	add    rsp,0x20
  403f83:	pop    rbp
  403f84:	ret    
  403f85:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403f8f:	nop
  403f90:	push   rbp
  403f91:	mov    rbp,rsp
  403f94:	sub    rsp,0x20
  403f98:	xor    eax,eax
  403f9a:	mov    QWORD PTR [rbp-0x10],rdi
  403f9e:	mov    rdi,QWORD PTR [rbp-0x10]
  403fa2:	mov    esi,eax
  403fa4:	mov    edx,eax
  403fa6:	lea    rcx,[rip+0x1a3]        # 404150 <main@@Base+0xf80>
  403fad:	call   40bbb0 <flatcc_verify_table_field@@Base>
  403fb2:	mov    DWORD PTR [rbp-0x14],eax
  403fb5:	cmp    eax,0x0
  403fb8:	je     403fc9 <main@@Base+0xdf9>
  403fbe:	mov    eax,DWORD PTR [rbp-0x14]
  403fc1:	mov    DWORD PTR [rbp-0x4],eax
  403fc4:	jmp    40402c <main@@Base+0xe5c>
  403fc9:	xor    edx,edx
  403fcb:	mov    rdi,QWORD PTR [rbp-0x10]
  403fcf:	mov    esi,0x1
  403fd4:	lea    rcx,[rip+0x335]        # 404310 <main@@Base+0x1140>
  403fdb:	call   40bbb0 <flatcc_verify_table_field@@Base>
  403fe0:	mov    DWORD PTR [rbp-0x14],eax
  403fe3:	cmp    eax,0x0
  403fe6:	je     403ff7 <main@@Base+0xe27>
  403fec:	mov    eax,DWORD PTR [rbp-0x14]
  403fef:	mov    DWORD PTR [rbp-0x4],eax
  403ff2:	jmp    40402c <main@@Base+0xe5c>
  403ff7:	xor    edx,edx
  403ff9:	mov    rdi,QWORD PTR [rbp-0x10]
  403ffd:	mov    esi,0x2
  404002:	lea    rcx,[rip+0x387]        # 404390 <main@@Base+0x11c0>
  404009:	call   40bbb0 <flatcc_verify_table_field@@Base>
  40400e:	mov    DWORD PTR [rbp-0x14],eax
  404011:	cmp    eax,0x0
  404014:	je     404025 <main@@Base+0xe55>
  40401a:	mov    eax,DWORD PTR [rbp-0x14]
  40401d:	mov    DWORD PTR [rbp-0x4],eax
  404020:	jmp    40402c <main@@Base+0xe5c>
  404025:	mov    DWORD PTR [rbp-0x4],0x0
  40402c:	mov    eax,DWORD PTR [rbp-0x4]
  40402f:	add    rsp,0x20
  404033:	pop    rbp
  404034:	ret    
  404035:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40403f:	nop
  404040:	push   rbp
  404041:	mov    rbp,rsp
  404044:	sub    rsp,0x20
  404048:	xor    edx,edx
  40404a:	mov    QWORD PTR [rbp-0x10],rdi
  40404e:	mov    rdi,QWORD PTR [rbp-0x10]
  404052:	mov    esi,0x1
  404057:	lea    rcx,[rip+0x3b2]        # 404410 <main@@Base+0x1240>
  40405e:	call   40cb80 <flatcc_verify_union_field@@Base>
  404063:	mov    DWORD PTR [rbp-0x14],eax
  404066:	cmp    eax,0x0
  404069:	je     40407a <main@@Base+0xeaa>
  40406f:	mov    eax,DWORD PTR [rbp-0x14]
  404072:	mov    DWORD PTR [rbp-0x4],eax
  404075:	jmp    404139 <main@@Base+0xf69>
  40407a:	xor    edx,edx
  40407c:	mov    rdi,QWORD PTR [rbp-0x10]
  404080:	mov    esi,0x3
  404085:	lea    rcx,[rip+0x384]        # 404410 <main@@Base+0x1240>
  40408c:	call   40cb80 <flatcc_verify_union_field@@Base>
  404091:	mov    DWORD PTR [rbp-0x14],eax
  404094:	cmp    eax,0x0
  404097:	je     4040a8 <main@@Base+0xed8>
  40409d:	mov    eax,DWORD PTR [rbp-0x14]
  4040a0:	mov    DWORD PTR [rbp-0x4],eax
  4040a3:	jmp    404139 <main@@Base+0xf69>
  4040a8:	xor    edx,edx
  4040aa:	mov    rdi,QWORD PTR [rbp-0x10]
  4040ae:	mov    esi,0x5
  4040b3:	lea    rcx,[rip+0x356]        # 404410 <main@@Base+0x1240>
  4040ba:	call   40cb80 <flatcc_verify_union_field@@Base>
  4040bf:	mov    DWORD PTR [rbp-0x14],eax
  4040c2:	cmp    eax,0x0
  4040c5:	je     4040d6 <main@@Base+0xf06>
  4040cb:	mov    eax,DWORD PTR [rbp-0x14]
  4040ce:	mov    DWORD PTR [rbp-0x4],eax
  4040d1:	jmp    404139 <main@@Base+0xf69>
  4040d6:	xor    edx,edx
  4040d8:	mov    rdi,QWORD PTR [rbp-0x10]
  4040dc:	mov    esi,0x7
  4040e1:	lea    rcx,[rip+0x328]        # 404410 <main@@Base+0x1240>
  4040e8:	call   40cb80 <flatcc_verify_union_field@@Base>
  4040ed:	mov    DWORD PTR [rbp-0x14],eax
  4040f0:	cmp    eax,0x0
  4040f3:	je     404104 <main@@Base+0xf34>
  4040f9:	mov    eax,DWORD PTR [rbp-0x14]
  4040fc:	mov    DWORD PTR [rbp-0x4],eax
  4040ff:	jmp    404139 <main@@Base+0xf69>
  404104:	xor    edx,edx
  404106:	mov    rdi,QWORD PTR [rbp-0x10]
  40410a:	mov    esi,0x9
  40410f:	lea    rcx,[rip+0x2fa]        # 404410 <main@@Base+0x1240>
  404116:	call   40ce40 <flatcc_verify_union_vector_field@@Base>
  40411b:	mov    DWORD PTR [rbp-0x14],eax
  40411e:	cmp    eax,0x0
  404121:	je     404132 <main@@Base+0xf62>
  404127:	mov    eax,DWORD PTR [rbp-0x14]
  40412a:	mov    DWORD PTR [rbp-0x4],eax
  40412d:	jmp    404139 <main@@Base+0xf69>
  404132:	mov    DWORD PTR [rbp-0x4],0x0
  404139:	mov    eax,DWORD PTR [rbp-0x4]
  40413c:	add    rsp,0x20
  404140:	pop    rbp
  404141:	ret    
  404142:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40414c:	nop    DWORD PTR [rax+0x0]
  404150:	push   rbp
  404151:	mov    rbp,rsp
  404154:	sub    rsp,0x20
  404158:	xor    eax,eax
  40415a:	mov    QWORD PTR [rbp-0x10],rdi
  40415e:	mov    rdi,QWORD PTR [rbp-0x10]
  404162:	mov    esi,eax
  404164:	mov    edx,eax
  404166:	call   40b4b0 <flatcc_verify_string_field@@Base>
  40416b:	mov    DWORD PTR [rbp-0x14],eax
  40416e:	cmp    eax,0x0
  404171:	je     404182 <main@@Base+0xfb2>
  404177:	mov    eax,DWORD PTR [rbp-0x14]
  40417a:	mov    DWORD PTR [rbp-0x4],eax
  40417d:	jmp    4042fd <main@@Base+0x112d>
  404182:	mov    eax,0x4
  404187:	mov    edx,eax
  404189:	mov    rdi,QWORD PTR [rbp-0x10]
  40418d:	mov    esi,0x1
  404192:	mov    ecx,0x4
  404197:	call   40b2b0 <flatcc_verify_field@@Base>
  40419c:	mov    DWORD PTR [rbp-0x14],eax
  40419f:	cmp    eax,0x0
  4041a2:	je     4041b3 <main@@Base+0xfe3>
  4041a8:	mov    eax,DWORD PTR [rbp-0x14]
  4041ab:	mov    DWORD PTR [rbp-0x4],eax
  4041ae:	jmp    4042fd <main@@Base+0x112d>
  4041b3:	xor    edx,edx
  4041b5:	mov    rdi,QWORD PTR [rbp-0x10]
  4041b9:	mov    esi,0x2
  4041be:	call   40b4b0 <flatcc_verify_string_field@@Base>
  4041c3:	mov    DWORD PTR [rbp-0x14],eax
  4041c6:	cmp    eax,0x0
  4041c9:	je     4041da <main@@Base+0x100a>
  4041cf:	mov    eax,DWORD PTR [rbp-0x14]
  4041d2:	mov    DWORD PTR [rbp-0x4],eax
  4041d5:	jmp    4042fd <main@@Base+0x112d>
  4041da:	mov    eax,0x8
  4041df:	mov    edx,eax
  4041e1:	mov    rdi,QWORD PTR [rbp-0x10]
  4041e5:	mov    esi,0x3
  4041ea:	mov    ecx,0x8
  4041ef:	call   40b2b0 <flatcc_verify_field@@Base>
  4041f4:	mov    DWORD PTR [rbp-0x14],eax
  4041f7:	cmp    eax,0x0
  4041fa:	je     40420b <main@@Base+0x103b>
  404200:	mov    eax,DWORD PTR [rbp-0x14]
  404203:	mov    DWORD PTR [rbp-0x4],eax
  404206:	jmp    4042fd <main@@Base+0x112d>
  40420b:	xor    edx,edx
  40420d:	mov    rdi,QWORD PTR [rbp-0x10]
  404211:	mov    esi,0x4
  404216:	call   40b4b0 <flatcc_verify_string_field@@Base>
  40421b:	mov    DWORD PTR [rbp-0x14],eax
  40421e:	cmp    eax,0x0
  404221:	je     404232 <main@@Base+0x1062>
  404227:	mov    eax,DWORD PTR [rbp-0x14]
  40422a:	mov    DWORD PTR [rbp-0x4],eax
  40422d:	jmp    4042fd <main@@Base+0x112d>
  404232:	mov    eax,0x8
  404237:	mov    edx,eax
  404239:	mov    rdi,QWORD PTR [rbp-0x10]
  40423d:	mov    esi,0x5
  404242:	mov    ecx,0x8
  404247:	call   40b2b0 <flatcc_verify_field@@Base>
  40424c:	mov    DWORD PTR [rbp-0x14],eax
  40424f:	cmp    eax,0x0
  404252:	je     404263 <main@@Base+0x1093>
  404258:	mov    eax,DWORD PTR [rbp-0x14]
  40425b:	mov    DWORD PTR [rbp-0x4],eax
  40425e:	jmp    4042fd <main@@Base+0x112d>
  404263:	mov    eax,0x4
  404268:	mov    edx,eax
  40426a:	mov    rdi,QWORD PTR [rbp-0x10]
  40426e:	mov    esi,0x6
  404273:	mov    ecx,0x4
  404278:	call   40b2b0 <flatcc_verify_field@@Base>
  40427d:	mov    DWORD PTR [rbp-0x14],eax
  404280:	cmp    eax,0x0
  404283:	je     404294 <main@@Base+0x10c4>
  404289:	mov    eax,DWORD PTR [rbp-0x14]
  40428c:	mov    DWORD PTR [rbp-0x4],eax
  40428f:	jmp    4042fd <main@@Base+0x112d>
  404294:	mov    eax,0x8
  404299:	mov    edx,eax
  40429b:	mov    rdi,QWORD PTR [rbp-0x10]
  40429f:	mov    esi,0x7
  4042a4:	mov    ecx,0x8
  4042a9:	call   40b2b0 <flatcc_verify_field@@Base>
  4042ae:	mov    DWORD PTR [rbp-0x14],eax
  4042b1:	cmp    eax,0x0
  4042b4:	je     4042c5 <main@@Base+0x10f5>
  4042ba:	mov    eax,DWORD PTR [rbp-0x14]
  4042bd:	mov    DWORD PTR [rbp-0x4],eax
  4042c0:	jmp    4042fd <main@@Base+0x112d>
  4042c5:	mov    eax,0x4
  4042ca:	mov    edx,eax
  4042cc:	mov    rdi,QWORD PTR [rbp-0x10]
  4042d0:	mov    esi,0x8
  4042d5:	mov    ecx,0x4
  4042da:	call   40b2b0 <flatcc_verify_field@@Base>
  4042df:	mov    DWORD PTR [rbp-0x14],eax
  4042e2:	cmp    eax,0x0
  4042e5:	je     4042f6 <main@@Base+0x1126>
  4042eb:	mov    eax,DWORD PTR [rbp-0x14]
  4042ee:	mov    DWORD PTR [rbp-0x4],eax
  4042f1:	jmp    4042fd <main@@Base+0x112d>
  4042f6:	mov    DWORD PTR [rbp-0x4],0x0
  4042fd:	mov    eax,DWORD PTR [rbp-0x4]
  404300:	add    rsp,0x20
  404304:	pop    rbp
  404305:	ret    
  404306:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404310:	push   rbp
  404311:	mov    rbp,rsp
  404314:	sub    rsp,0x20
  404318:	xor    esi,esi
  40431a:	mov    eax,0x8
  40431f:	mov    edx,eax
  404321:	mov    QWORD PTR [rbp-0x10],rdi
  404325:	mov    rdi,QWORD PTR [rbp-0x10]
  404329:	mov    ecx,0x8
  40432e:	call   40b2b0 <flatcc_verify_field@@Base>
  404333:	mov    DWORD PTR [rbp-0x14],eax
  404336:	cmp    eax,0x0
  404339:	je     40434a <main@@Base+0x117a>
  40433f:	mov    eax,DWORD PTR [rbp-0x14]
  404342:	mov    DWORD PTR [rbp-0x4],eax
  404345:	jmp    404382 <main@@Base+0x11b2>
  40434a:	mov    eax,0x4
  40434f:	mov    edx,eax
  404351:	mov    rdi,QWORD PTR [rbp-0x10]
  404355:	mov    esi,0x1
  40435a:	mov    ecx,0x4
  40435f:	call   40b2b0 <flatcc_verify_field@@Base>
  404364:	mov    DWORD PTR [rbp-0x14],eax
  404367:	cmp    eax,0x0
  40436a:	je     40437b <main@@Base+0x11ab>
  404370:	mov    eax,DWORD PTR [rbp-0x14]
  404373:	mov    DWORD PTR [rbp-0x4],eax
  404376:	jmp    404382 <main@@Base+0x11b2>
  40437b:	mov    DWORD PTR [rbp-0x4],0x0
  404382:	mov    eax,DWORD PTR [rbp-0x4]
  404385:	add    rsp,0x20
  404389:	pop    rbp
  40438a:	ret    
  40438b:	nop    DWORD PTR [rax+rax*1+0x0]
  404390:	push   rbp
  404391:	mov    rbp,rsp
  404394:	sub    rsp,0x20
  404398:	xor    esi,esi
  40439a:	mov    eax,0x8
  40439f:	mov    edx,eax
  4043a1:	mov    QWORD PTR [rbp-0x10],rdi
  4043a5:	mov    rdi,QWORD PTR [rbp-0x10]
  4043a9:	mov    ecx,0x8
  4043ae:	call   40b2b0 <flatcc_verify_field@@Base>
  4043b3:	mov    DWORD PTR [rbp-0x14],eax
  4043b6:	cmp    eax,0x0
  4043b9:	je     4043ca <main@@Base+0x11fa>
  4043bf:	mov    eax,DWORD PTR [rbp-0x14]
  4043c2:	mov    DWORD PTR [rbp-0x4],eax
  4043c5:	jmp    404402 <main@@Base+0x1232>
  4043ca:	mov    eax,0x4
  4043cf:	mov    edx,eax
  4043d1:	mov    rdi,QWORD PTR [rbp-0x10]
  4043d5:	mov    esi,0x1
  4043da:	mov    ecx,0x4
  4043df:	call   40b2b0 <flatcc_verify_field@@Base>
  4043e4:	mov    DWORD PTR [rbp-0x14],eax
  4043e7:	cmp    eax,0x0
  4043ea:	je     4043fb <main@@Base+0x122b>
  4043f0:	mov    eax,DWORD PTR [rbp-0x14]
  4043f3:	mov    DWORD PTR [rbp-0x4],eax
  4043f6:	jmp    404402 <main@@Base+0x1232>
  4043fb:	mov    DWORD PTR [rbp-0x4],0x0
  404402:	mov    eax,DWORD PTR [rbp-0x4]
  404405:	add    rsp,0x20
  404409:	pop    rbp
  40440a:	ret    
  40440b:	nop    DWORD PTR [rax+rax*1+0x0]
  404410:	push   rbp
  404411:	mov    rbp,rsp
  404414:	sub    rsp,0x30
  404418:	mov    QWORD PTR [rbp-0x10],rdi
  40441c:	mov    rdi,QWORD PTR [rbp-0x10]
  404420:	movzx  eax,BYTE PTR [rdi+0x10]
  404424:	mov    ecx,eax
  404426:	sub    ecx,0x2
  404429:	mov    DWORD PTR [rbp-0x14],eax
  40442c:	mov    DWORD PTR [rbp-0x18],ecx
  40442f:	je     4044a0 <main@@Base+0x12d0>
  404435:	jmp    40443a <main@@Base+0x126a>
  40443a:	mov    eax,DWORD PTR [rbp-0x14]
  40443d:	sub    eax,0x8
  404440:	mov    DWORD PTR [rbp-0x1c],eax
  404443:	je     4044b8 <main@@Base+0x12e8>
  404449:	jmp    40444e <main@@Base+0x127e>
  40444e:	mov    eax,DWORD PTR [rbp-0x14]
  404451:	sub    eax,0x9
  404454:	mov    DWORD PTR [rbp-0x20],eax
  404457:	je     4044d5 <main@@Base+0x1305>
  40445d:	jmp    404462 <main@@Base+0x1292>
  404462:	mov    eax,DWORD PTR [rbp-0x14]
  404465:	sub    eax,0xa
  404468:	mov    DWORD PTR [rbp-0x24],eax
  40446b:	je     4044f2 <main@@Base+0x1322>
  404471:	jmp    404476 <main@@Base+0x12a6>
  404476:	mov    eax,DWORD PTR [rbp-0x14]
  404479:	sub    eax,0xb
  40447c:	mov    DWORD PTR [rbp-0x28],eax
  40447f:	je     40450f <main@@Base+0x133f>
  404485:	jmp    40448a <main@@Base+0x12ba>
  40448a:	mov    eax,DWORD PTR [rbp-0x14]
  40448d:	sub    eax,0xff
  404492:	mov    DWORD PTR [rbp-0x2c],eax
  404495:	je     404520 <main@@Base+0x1350>
  40449b:	jmp    404531 <main@@Base+0x1361>
  4044a0:	mov    rdi,QWORD PTR [rbp-0x10]
  4044a4:	lea    rsi,[rip+0xa5]        # 404550 <main@@Base+0x1380>
  4044ab:	call   40c140 <flatcc_verify_union_table@@Base>
  4044b0:	mov    DWORD PTR [rbp-0x4],eax
  4044b3:	jmp    404538 <main@@Base+0x1368>
  4044b8:	mov    eax,0x2
  4044bd:	mov    esi,eax
  4044bf:	mov    rdi,QWORD PTR [rbp-0x10]
  4044c3:	mov    edx,0x2
  4044c8:	call   40c190 <flatcc_verify_union_struct@@Base>
  4044cd:	mov    DWORD PTR [rbp-0x4],eax
  4044d0:	jmp    404538 <main@@Base+0x1368>
  4044d5:	mov    eax,0x4
  4044da:	mov    esi,eax
  4044dc:	mov    rdi,QWORD PTR [rbp-0x10]
  4044e0:	mov    edx,0x4
  4044e5:	call   40c190 <flatcc_verify_union_struct@@Base>
  4044ea:	mov    DWORD PTR [rbp-0x4],eax
  4044ed:	jmp    404538 <main@@Base+0x1368>
  4044f2:	mov    eax,0x4
  4044f7:	mov    esi,eax
  4044f9:	mov    rdi,QWORD PTR [rbp-0x10]
  4044fd:	mov    edx,0x4
  404502:	call   40c190 <flatcc_verify_union_struct@@Base>
  404507:	mov    DWORD PTR [rbp-0x4],eax
  40450a:	jmp    404538 <main@@Base+0x1368>
  40450f:	mov    rdi,QWORD PTR [rbp-0x10]
  404513:	call   40c2e0 <flatcc_verify_union_string@@Base>
  404518:	mov    DWORD PTR [rbp-0x4],eax
  40451b:	jmp    404538 <main@@Base+0x1368>
  404520:	mov    rdi,QWORD PTR [rbp-0x10]
  404524:	call   40c2e0 <flatcc_verify_union_string@@Base>
  404529:	mov    DWORD PTR [rbp-0x4],eax
  40452c:	jmp    404538 <main@@Base+0x1368>
  404531:	mov    DWORD PTR [rbp-0x4],0x0
  404538:	mov    eax,DWORD PTR [rbp-0x4]
  40453b:	add    rsp,0x30
  40453f:	pop    rbp
  404540:	ret    
  404541:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40454b:	nop    DWORD PTR [rax+rax*1+0x0]
  404550:	push   rbp
  404551:	mov    rbp,rsp
  404554:	sub    rsp,0x20
  404558:	xor    esi,esi
  40455a:	mov    eax,0x4
  40455f:	mov    edx,eax
  404561:	mov    QWORD PTR [rbp-0x10],rdi
  404565:	mov    rdi,QWORD PTR [rbp-0x10]
  404569:	mov    ecx,0x4
  40456e:	call   40b2b0 <flatcc_verify_field@@Base>
  404573:	mov    DWORD PTR [rbp-0x14],eax
  404576:	cmp    eax,0x0
  404579:	je     40458a <main@@Base+0x13ba>
  40457f:	mov    eax,DWORD PTR [rbp-0x14]
  404582:	mov    DWORD PTR [rbp-0x4],eax
  404585:	jmp    404591 <main@@Base+0x13c1>
  40458a:	mov    DWORD PTR [rbp-0x4],0x0
  404591:	mov    eax,DWORD PTR [rbp-0x4]
  404594:	add    rsp,0x20
  404598:	pop    rbp
  404599:	ret    
  40459a:	nop    WORD PTR [rax+rax*1+0x0]

00000000004045a0 <flatcc_builder_default_alloc@@Base>:
  4045a0:	push   rbp
  4045a1:	mov    rbp,rsp
  4045a4:	sub    rsp,0x50
  4045a8:	mov    QWORD PTR [rbp-0x10],rdi
  4045ac:	mov    QWORD PTR [rbp-0x18],rsi
  4045b0:	mov    QWORD PTR [rbp-0x20],rdx
  4045b4:	mov    DWORD PTR [rbp-0x24],ecx
  4045b7:	mov    DWORD PTR [rbp-0x28],r8d
  4045bb:	cmp    QWORD PTR [rbp-0x20],0x0
  4045c0:	jne    404603 <flatcc_builder_default_alloc@@Base+0x63>
  4045c6:	mov    rax,QWORD PTR [rbp-0x18]
  4045ca:	cmp    QWORD PTR [rax],0x0
  4045ce:	je     4045f7 <flatcc_builder_default_alloc@@Base+0x57>
  4045d4:	mov    rax,QWORD PTR [rbp-0x18]
  4045d8:	mov    rdi,QWORD PTR [rax]
  4045db:	call   403030 <free@plt>
  4045e0:	mov    rax,QWORD PTR [rbp-0x18]
  4045e4:	mov    QWORD PTR [rax],0x0
  4045eb:	mov    rax,QWORD PTR [rbp-0x18]
  4045ef:	mov    QWORD PTR [rax+0x8],0x0
  4045f7:	mov    DWORD PTR [rbp-0x4],0x0
  4045fe:	jmp    40474c <flatcc_builder_default_alloc@@Base+0x1ac>
  404603:	mov    eax,DWORD PTR [rbp-0x28]
  404606:	add    eax,0xffffffff
  404609:	mov    ecx,eax
  40460b:	sub    eax,0x6
  40460e:	mov    QWORD PTR [rbp-0x40],rcx
  404612:	mov    DWORD PTR [rbp-0x44],eax
  404615:	ja     404663 <flatcc_builder_default_alloc@@Base+0xc3>
  40461b:	lea    rax,[rip+0x9b8e]        # 40e1b0 <_IO_stdin_used@@Base+0x1b0>
  404622:	mov    rcx,QWORD PTR [rbp-0x40]
  404626:	movsxd rdx,DWORD PTR [rax+rcx*4]
  40462a:	add    rdx,rax
  40462d:	jmp    rdx
  40462f:	mov    QWORD PTR [rbp-0x38],0x100
  404637:	jmp    40466b <flatcc_builder_default_alloc@@Base+0xcb>
  40463c:	mov    rax,QWORD PTR [rbp-0x20]
  404640:	mov    QWORD PTR [rbp-0x38],rax
  404644:	jmp    40466b <flatcc_builder_default_alloc@@Base+0xcb>
  404649:	mov    QWORD PTR [rbp-0x38],0x120
  404651:	jmp    40466b <flatcc_builder_default_alloc@@Base+0xcb>
  404656:	mov    QWORD PTR [rbp-0x38],0x40
  40465e:	jmp    40466b <flatcc_builder_default_alloc@@Base+0xcb>
  404663:	mov    QWORD PTR [rbp-0x38],0x20
  40466b:	jmp    404670 <flatcc_builder_default_alloc@@Base+0xd0>
  404670:	mov    rax,QWORD PTR [rbp-0x38]
  404674:	cmp    rax,QWORD PTR [rbp-0x20]
  404678:	jae    40468f <flatcc_builder_default_alloc@@Base+0xef>
  40467e:	mov    rax,QWORD PTR [rbp-0x38]
  404682:	shl    rax,0x1
  404686:	mov    QWORD PTR [rbp-0x38],rax
  40468a:	jmp    404670 <flatcc_builder_default_alloc@@Base+0xd0>
  40468f:	mov    rax,QWORD PTR [rbp-0x20]
  404693:	mov    rcx,QWORD PTR [rbp-0x18]
  404697:	cmp    rax,QWORD PTR [rcx+0x8]
  40469b:	ja     4046c3 <flatcc_builder_default_alloc@@Base+0x123>
  4046a1:	mov    rax,QWORD PTR [rbp-0x18]
  4046a5:	mov    rax,QWORD PTR [rax+0x8]
  4046a9:	shr    rax,0x1
  4046ad:	cmp    rax,QWORD PTR [rbp-0x38]
  4046b1:	jb     4046c3 <flatcc_builder_default_alloc@@Base+0x123>
  4046b7:	mov    DWORD PTR [rbp-0x4],0x0
  4046be:	jmp    40474c <flatcc_builder_default_alloc@@Base+0x1ac>
  4046c3:	mov    rax,QWORD PTR [rbp-0x18]
  4046c7:	mov    rdi,QWORD PTR [rax]
  4046ca:	mov    rsi,QWORD PTR [rbp-0x38]
  4046ce:	call   4030c0 <realloc@plt>
  4046d3:	mov    QWORD PTR [rbp-0x30],rax
  4046d7:	cmp    rax,0x0
  4046db:	jne    4046ed <flatcc_builder_default_alloc@@Base+0x14d>
  4046e1:	mov    DWORD PTR [rbp-0x4],0xffffffff
  4046e8:	jmp    40474c <flatcc_builder_default_alloc@@Base+0x1ac>
  4046ed:	cmp    DWORD PTR [rbp-0x24],0x0
  4046f1:	je     40472e <flatcc_builder_default_alloc@@Base+0x18e>
  4046f7:	mov    rax,QWORD PTR [rbp-0x18]
  4046fb:	mov    rax,QWORD PTR [rax+0x8]
  4046ff:	cmp    rax,QWORD PTR [rbp-0x38]
  404703:	jae    40472e <flatcc_builder_default_alloc@@Base+0x18e>
  404709:	xor    esi,esi
  40470b:	mov    rax,QWORD PTR [rbp-0x30]
  40470f:	mov    rcx,QWORD PTR [rbp-0x18]
  404713:	add    rax,QWORD PTR [rcx+0x8]
  404717:	mov    rcx,QWORD PTR [rbp-0x38]
  40471b:	mov    rdx,QWORD PTR [rbp-0x18]
  40471f:	sub    rcx,QWORD PTR [rdx+0x8]
  404723:	mov    rdi,rax
  404726:	mov    rdx,rcx
  404729:	call   403070 <memset@plt>
  40472e:	mov    rax,QWORD PTR [rbp-0x30]
  404732:	mov    rcx,QWORD PTR [rbp-0x18]
  404736:	mov    QWORD PTR [rcx],rax
  404739:	mov    rax,QWORD PTR [rbp-0x38]
  40473d:	mov    rcx,QWORD PTR [rbp-0x18]
  404741:	mov    QWORD PTR [rcx+0x8],rax
  404745:	mov    DWORD PTR [rbp-0x4],0x0
  40474c:	mov    eax,DWORD PTR [rbp-0x4]
  40474f:	add    rsp,0x50
  404753:	pop    rbp
  404754:	ret    
  404755:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40475f:	nop

0000000000404760 <flatcc_builder_flush_vtable_cache@@Base>:
  404760:	push   rbp
  404761:	mov    rbp,rsp
  404764:	sub    rsp,0x10
  404768:	mov    QWORD PTR [rbp-0x8],rdi
  40476c:	mov    rdi,QWORD PTR [rbp-0x8]
  404770:	add    rdi,0x58
  404774:	add    rdi,0x50
  404778:	mov    QWORD PTR [rbp-0x10],rdi
  40477c:	mov    rdi,QWORD PTR [rbp-0x8]
  404780:	cmp    QWORD PTR [rdi+0xd8],0x0
  404788:	jne    404793 <flatcc_builder_flush_vtable_cache@@Base+0x33>
  40478e:	jmp    4047c5 <flatcc_builder_flush_vtable_cache@@Base+0x65>
  404793:	xor    esi,esi
  404795:	mov    rax,QWORD PTR [rbp-0x10]
  404799:	mov    rdi,QWORD PTR [rax]
  40479c:	mov    rax,QWORD PTR [rbp-0x10]
  4047a0:	mov    rdx,QWORD PTR [rax+0x8]
  4047a4:	call   403070 <memset@plt>
  4047a9:	mov    rax,QWORD PTR [rbp-0x8]
  4047ad:	mov    DWORD PTR [rax+0xe4],0x10
  4047b7:	mov    rax,QWORD PTR [rbp-0x8]
  4047bb:	mov    DWORD PTR [rax+0xe0],0x0
  4047c5:	add    rsp,0x10
  4047c9:	pop    rbp
  4047ca:	ret    
  4047cb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004047d0 <flatcc_builder_custom_init@@Base>:
  4047d0:	push   rbp
  4047d1:	mov    rbp,rsp
  4047d4:	sub    rsp,0x30
  4047d8:	xor    eax,eax
  4047da:	mov    r9d,0x188
  4047e0:	mov    r10d,r9d
  4047e3:	mov    QWORD PTR [rbp-0x8],rdi
  4047e7:	mov    QWORD PTR [rbp-0x10],rsi
  4047eb:	mov    QWORD PTR [rbp-0x18],rdx
  4047ef:	mov    QWORD PTR [rbp-0x20],rcx
  4047f3:	mov    QWORD PTR [rbp-0x28],r8
  4047f7:	mov    rcx,QWORD PTR [rbp-0x8]
  4047fb:	mov    rdi,rcx
  4047fe:	mov    esi,eax
  404800:	mov    rdx,r10
  404803:	call   403070 <memset@plt>
  404808:	cmp    QWORD PTR [rbp-0x10],0x0
  40480d:	jne    40483a <flatcc_builder_custom_init@@Base+0x6a>
  404813:	lea    rax,[rip+0x5e96]        # 40a6b0 <flatcc_emitter@@Base>
  40481a:	mov    rcx,QWORD PTR [rbp-0x8]
  40481e:	mov    DWORD PTR [rcx+0x128],0x1
  404828:	mov    QWORD PTR [rbp-0x10],rax
  40482c:	mov    rax,QWORD PTR [rbp-0x8]
  404830:	add    rax,0x130
  404836:	mov    QWORD PTR [rbp-0x18],rax
  40483a:	cmp    QWORD PTR [rbp-0x20],0x0
  40483f:	jne    404850 <flatcc_builder_custom_init@@Base+0x80>
  404845:	lea    rax,[rip+0xfffffffffffffd54]        # 4045a0 <flatcc_builder_default_alloc@@Base>
  40484c:	mov    QWORD PTR [rbp-0x20],rax
  404850:	xor    eax,eax
  404852:	mov    rcx,QWORD PTR [rbp-0x28]
  404856:	mov    rdx,QWORD PTR [rbp-0x8]
  40485a:	mov    QWORD PTR [rdx+0x40],rcx
  40485e:	mov    rcx,QWORD PTR [rbp-0x20]
  404862:	mov    rdx,QWORD PTR [rbp-0x8]
  404866:	mov    QWORD PTR [rdx+0x50],rcx
  40486a:	mov    rcx,QWORD PTR [rbp-0x18]
  40486e:	mov    rdx,QWORD PTR [rbp-0x8]
  404872:	mov    QWORD PTR [rdx+0x38],rcx
  404876:	mov    rcx,QWORD PTR [rbp-0x10]
  40487a:	mov    rdx,QWORD PTR [rbp-0x8]
  40487e:	mov    QWORD PTR [rdx+0x48],rcx
  404882:	add    rsp,0x30
  404886:	pop    rbp
  404887:	ret    
  404888:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000404890 <flatcc_builder_init@@Base>:
  404890:	push   rbp
  404891:	mov    rbp,rsp
  404894:	sub    rsp,0x10
  404898:	xor    eax,eax
  40489a:	mov    ecx,eax
  40489c:	mov    QWORD PTR [rbp-0x8],rdi
  4048a0:	mov    rdi,QWORD PTR [rbp-0x8]
  4048a4:	mov    rsi,rcx
  4048a7:	mov    rdx,rcx
  4048aa:	mov    QWORD PTR [rbp-0x10],rcx
  4048ae:	mov    r8,QWORD PTR [rbp-0x10]
  4048b2:	call   4047d0 <flatcc_builder_custom_init@@Base>
  4048b7:	add    rsp,0x10
  4048bb:	pop    rbp
  4048bc:	ret    
  4048bd:	nop    DWORD PTR [rax]

00000000004048c0 <flatcc_builder_custom_reset@@Base>:
  4048c0:	push   rbp
  4048c1:	mov    rbp,rsp
  4048c4:	sub    rsp,0x30
  4048c8:	mov    QWORD PTR [rbp-0x10],rdi
  4048cc:	mov    DWORD PTR [rbp-0x14],esi
  4048cf:	mov    DWORD PTR [rbp-0x18],edx
  4048d2:	mov    DWORD PTR [rbp-0x24],0x0
  4048d9:	cmp    DWORD PTR [rbp-0x24],0x8
  4048dd:	jge    4049c8 <flatcc_builder_custom_reset@@Base+0x108>
  4048e3:	mov    rax,QWORD PTR [rbp-0x10]
  4048e7:	add    rax,0x58
  4048eb:	movsxd rcx,DWORD PTR [rbp-0x24]
  4048ef:	shl    rcx,0x4
  4048f3:	add    rax,rcx
  4048f6:	mov    QWORD PTR [rbp-0x20],rax
  4048fa:	mov    rax,QWORD PTR [rbp-0x20]
  4048fe:	cmp    QWORD PTR [rax],0x0
  404902:	je     40497d <flatcc_builder_custom_reset@@Base+0xbd>
  404908:	cmp    DWORD PTR [rbp-0x24],0x5
  40490c:	je     404962 <flatcc_builder_custom_reset@@Base+0xa2>
  404912:	cmp    DWORD PTR [rbp-0x18],0x0
  404916:	je     404962 <flatcc_builder_custom_reset@@Base+0xa2>
  40491c:	mov    eax,0x1
  404921:	mov    edx,eax
  404923:	mov    rcx,QWORD PTR [rbp-0x10]
  404927:	mov    rcx,QWORD PTR [rcx+0x50]
  40492b:	mov    rsi,QWORD PTR [rbp-0x10]
  40492f:	mov    rdi,QWORD PTR [rsi+0x40]
  404933:	mov    rsi,QWORD PTR [rbp-0x20]
  404937:	mov    r8d,DWORD PTR [rbp-0x24]
  40493b:	mov    eax,0x1
  404940:	mov    QWORD PTR [rbp-0x30],rcx
  404944:	mov    ecx,eax
  404946:	mov    r9,QWORD PTR [rbp-0x30]
  40494a:	call   r9
  40494d:	cmp    eax,0x0
  404950:	je     404962 <flatcc_builder_custom_reset@@Base+0xa2>
  404956:	mov    DWORD PTR [rbp-0x4],0xffffffff
  40495d:	jmp    404b09 <flatcc_builder_custom_reset@@Base+0x249>
  404962:	xor    esi,esi
  404964:	mov    rax,QWORD PTR [rbp-0x20]
  404968:	mov    rdi,QWORD PTR [rax]
  40496b:	mov    rax,QWORD PTR [rbp-0x20]
  40496f:	mov    rdx,QWORD PTR [rax+0x8]
  404973:	call   403070 <memset@plt>
  404978:	jmp    4049b5 <flatcc_builder_custom_reset@@Base+0xf5>
  40497d:	mov    rax,QWORD PTR [rbp-0x20]
  404981:	cmp    QWORD PTR [rax+0x8],0x0
  404986:	jne    404991 <flatcc_builder_custom_reset@@Base+0xd1>
  40498c:	jmp    4049b0 <flatcc_builder_custom_reset@@Base+0xf0>
  404991:	lea    rdi,[rip+0x9a38]        # 40e3d0 <flatcc_builder_padding_base@@Base+0x200>
  404998:	lea    rsi,[rip+0x9a43]        # 40e3e2 <flatcc_builder_padding_base@@Base+0x212>
  40499f:	mov    edx,0x1b2
  4049a4:	lea    rcx,[rip+0x9a97]        # 40e442 <flatcc_builder_padding_base@@Base+0x272>
  4049ab:	call   403060 <__assert_fail@plt>
  4049b0:	jmp    4049b5 <flatcc_builder_custom_reset@@Base+0xf5>
  4049b5:	jmp    4049ba <flatcc_builder_custom_reset@@Base+0xfa>
  4049ba:	mov    eax,DWORD PTR [rbp-0x24]
  4049bd:	add    eax,0x1
  4049c0:	mov    DWORD PTR [rbp-0x24],eax
  4049c3:	jmp    4048d9 <flatcc_builder_custom_reset@@Base+0x19>
  4049c8:	mov    rax,QWORD PTR [rbp-0x10]
  4049cc:	mov    DWORD PTR [rax+0xe0],0x0
  4049d6:	mov    rax,QWORD PTR [rbp-0x10]
  4049da:	cmp    DWORD PTR [rax+0xe4],0x0
  4049e1:	jbe    4049f5 <flatcc_builder_custom_reset@@Base+0x135>
  4049e7:	mov    rax,QWORD PTR [rbp-0x10]
  4049eb:	mov    DWORD PTR [rax+0xe4],0x10
  4049f5:	mov    rax,QWORD PTR [rbp-0x10]
  4049f9:	mov    WORD PTR [rax+0xe8],0x0
  404a02:	mov    rax,QWORD PTR [rbp-0x10]
  404a06:	mov    DWORD PTR [rax+0xf0],0x0
  404a10:	mov    rax,QWORD PTR [rbp-0x10]
  404a14:	mov    DWORD PTR [rax+0xf4],0x0
  404a1e:	mov    rax,QWORD PTR [rbp-0x10]
  404a22:	mov    DWORD PTR [rax+0x104],0x0
  404a2c:	mov    rax,QWORD PTR [rbp-0x10]
  404a30:	mov    DWORD PTR [rax+0x108],0x0
  404a3a:	mov    rax,QWORD PTR [rbp-0x10]
  404a3e:	mov    DWORD PTR [rax+0x20],0x0
  404a45:	mov    rax,QWORD PTR [rbp-0x10]
  404a49:	mov    DWORD PTR [rax+0x24],0x0
  404a50:	mov    rax,QWORD PTR [rbp-0x10]
  404a54:	mov    DWORD PTR [rax+0xfc],0x0
  404a5e:	mov    rax,QWORD PTR [rbp-0x10]
  404a62:	mov    DWORD PTR [rax+0x100],0x0
  404a6c:	mov    rax,QWORD PTR [rbp-0x10]
  404a70:	mov    rax,QWORD PTR [rax+0x68]
  404a74:	mov    rcx,QWORD PTR [rbp-0x10]
  404a78:	mov    QWORD PTR [rcx+0x18],rax
  404a7c:	mov    rax,QWORD PTR [rbp-0x10]
  404a80:	mov    rax,QWORD PTR [rax+0x88]
  404a87:	mov    rcx,QWORD PTR [rbp-0x10]
  404a8b:	mov    QWORD PTR [rcx],rax
  404a8e:	mov    rax,QWORD PTR [rbp-0x10]
  404a92:	mov    rax,QWORD PTR [rax+0x58]
  404a96:	mov    rcx,QWORD PTR [rbp-0x10]
  404a9a:	mov    QWORD PTR [rcx+0x8],rax
  404a9e:	mov    rax,QWORD PTR [rbp-0x10]
  404aa2:	mov    QWORD PTR [rax+0x30],0x0
  404aaa:	cmp    DWORD PTR [rbp-0x14],0x0
  404aae:	je     404adf <flatcc_builder_custom_reset@@Base+0x21f>
  404ab4:	mov    rax,QWORD PTR [rbp-0x10]
  404ab8:	mov    QWORD PTR [rax+0x118],0x0
  404ac3:	mov    rax,QWORD PTR [rbp-0x10]
  404ac7:	mov    DWORD PTR [rax+0x120],0x0
  404ad1:	mov    rax,QWORD PTR [rbp-0x10]
  404ad5:	mov    DWORD PTR [rax+0x124],0x0
  404adf:	mov    rax,QWORD PTR [rbp-0x10]
  404ae3:	cmp    DWORD PTR [rax+0x128],0x0
  404aea:	je     404b02 <flatcc_builder_custom_reset@@Base+0x242>
  404af0:	mov    rax,QWORD PTR [rbp-0x10]
  404af4:	add    rax,0x130
  404afa:	mov    rdi,rax
  404afd:	call   40a470 <flatcc_emitter_reset@@Base>
  404b02:	mov    DWORD PTR [rbp-0x4],0x0
  404b09:	mov    eax,DWORD PTR [rbp-0x4]
  404b0c:	add    rsp,0x30
  404b10:	pop    rbp
  404b11:	ret    
  404b12:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404b1c:	nop    DWORD PTR [rax+0x0]

0000000000404b20 <flatcc_builder_reset@@Base>:
  404b20:	push   rbp
  404b21:	mov    rbp,rsp
  404b24:	sub    rsp,0x10
  404b28:	xor    eax,eax
  404b2a:	mov    QWORD PTR [rbp-0x8],rdi
  404b2e:	mov    rdi,QWORD PTR [rbp-0x8]
  404b32:	mov    esi,eax
  404b34:	mov    edx,eax
  404b36:	call   4048c0 <flatcc_builder_custom_reset@@Base>
  404b3b:	add    rsp,0x10
  404b3f:	pop    rbp
  404b40:	ret    
  404b41:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404b4b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000404b50 <flatcc_builder_clear@@Base>:
  404b50:	push   rbp
  404b51:	mov    rbp,rsp
  404b54:	sub    rsp,0x30
  404b58:	mov    QWORD PTR [rbp-0x8],rdi
  404b5c:	mov    DWORD PTR [rbp-0x14],0x0
  404b63:	cmp    DWORD PTR [rbp-0x14],0x8
  404b67:	jge    404bc3 <flatcc_builder_clear@@Base+0x73>
  404b6d:	xor    eax,eax
  404b6f:	mov    edx,eax
  404b71:	xor    ecx,ecx
  404b73:	mov    rsi,QWORD PTR [rbp-0x8]
  404b77:	add    rsi,0x58
  404b7b:	movsxd rdi,DWORD PTR [rbp-0x14]
  404b7f:	shl    rdi,0x4
  404b83:	add    rsi,rdi
  404b86:	mov    QWORD PTR [rbp-0x10],rsi
  404b8a:	mov    rsi,QWORD PTR [rbp-0x8]
  404b8e:	mov    rsi,QWORD PTR [rsi+0x50]
  404b92:	mov    rdi,QWORD PTR [rbp-0x8]
  404b96:	mov    rdi,QWORD PTR [rdi+0x40]
  404b9a:	mov    r8,QWORD PTR [rbp-0x10]
  404b9e:	mov    eax,DWORD PTR [rbp-0x14]
  404ba1:	mov    QWORD PTR [rbp-0x20],rsi
  404ba5:	mov    rsi,r8
  404ba8:	mov    r8d,eax
  404bab:	mov    r9,QWORD PTR [rbp-0x20]
  404baf:	call   r9
  404bb2:	mov    DWORD PTR [rbp-0x24],eax
  404bb5:	mov    eax,DWORD PTR [rbp-0x14]
  404bb8:	add    eax,0x1
  404bbb:	mov    DWORD PTR [rbp-0x14],eax
  404bbe:	jmp    404b63 <flatcc_builder_clear@@Base+0x13>
  404bc3:	mov    rax,QWORD PTR [rbp-0x8]
  404bc7:	cmp    DWORD PTR [rax+0x128],0x0
  404bce:	je     404be6 <flatcc_builder_clear@@Base+0x96>
  404bd4:	mov    rax,QWORD PTR [rbp-0x8]
  404bd8:	add    rax,0x130
  404bde:	mov    rdi,rax
  404be1:	call   40a610 <flatcc_emitter_clear@@Base>
  404be6:	xor    esi,esi
  404be8:	mov    eax,0x188
  404bed:	mov    edx,eax
  404bef:	mov    rcx,QWORD PTR [rbp-0x8]
  404bf3:	mov    rdi,rcx
  404bf6:	call   403070 <memset@plt>
  404bfb:	add    rsp,0x30
  404bff:	pop    rbp
  404c00:	ret    
  404c01:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404c0b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000404c10 <flatcc_builder_enter_user_frame_ptr@@Base>:
  404c10:	push   rbp
  404c11:	mov    rbp,rsp
  404c14:	sub    rsp,0x20
  404c18:	xor    r8d,r8d
  404c1b:	mov    QWORD PTR [rbp-0x10],rdi
  404c1f:	mov    QWORD PTR [rbp-0x18],rsi
  404c23:	mov    rsi,QWORD PTR [rbp-0x18]
  404c27:	add    rsi,0x8
  404c2b:	sub    rsi,0x1
  404c2f:	and    rsi,0xfffffffffffffff8
  404c33:	add    rsi,0x8
  404c37:	mov    QWORD PTR [rbp-0x18],rsi
  404c3b:	mov    rdi,QWORD PTR [rbp-0x10]
  404c3f:	mov    rsi,QWORD PTR [rbp-0x10]
  404c43:	mov    rdx,QWORD PTR [rsi+0x180]
  404c4a:	mov    rcx,QWORD PTR [rbp-0x18]
  404c4e:	mov    esi,0x7
  404c53:	call   404cf0 <flatcc_builder_enter_user_frame_ptr@@Base+0xe0>
  404c58:	mov    QWORD PTR [rbp-0x20],rax
  404c5c:	cmp    rax,0x0
  404c60:	jne    404c73 <flatcc_builder_enter_user_frame_ptr@@Base+0x63>
  404c66:	mov    QWORD PTR [rbp-0x8],0x0
  404c6e:	jmp    404cda <flatcc_builder_enter_user_frame_ptr@@Base+0xca>
  404c73:	xor    esi,esi
  404c75:	mov    rax,QWORD PTR [rbp-0x20]
  404c79:	mov    rdx,QWORD PTR [rbp-0x18]
  404c7d:	mov    rdi,rax
  404c80:	call   403070 <memset@plt>
  404c85:	mov    rax,QWORD PTR [rbp-0x10]
  404c89:	mov    rax,QWORD PTR [rax+0x178]
  404c90:	mov    rdx,QWORD PTR [rbp-0x20]
  404c94:	mov    rdi,rdx
  404c97:	add    rdi,0x8
  404c9b:	mov    QWORD PTR [rbp-0x20],rdi
  404c9f:	mov    QWORD PTR [rdx],rax
  404ca2:	mov    rax,QWORD PTR [rbp-0x10]
  404ca6:	mov    rax,QWORD PTR [rax+0x180]
  404cad:	add    rax,0x8
  404cb1:	mov    rdx,QWORD PTR [rbp-0x10]
  404cb5:	mov    QWORD PTR [rdx+0x178],rax
  404cbc:	mov    rax,QWORD PTR [rbp-0x18]
  404cc0:	mov    rdx,QWORD PTR [rbp-0x10]
  404cc4:	add    rax,QWORD PTR [rdx+0x180]
  404ccb:	mov    QWORD PTR [rdx+0x180],rax
  404cd2:	mov    rax,QWORD PTR [rbp-0x20]
  404cd6:	mov    QWORD PTR [rbp-0x8],rax
  404cda:	mov    rax,QWORD PTR [rbp-0x8]
  404cde:	add    rsp,0x20
  404ce2:	pop    rbp
  404ce3:	ret    
  404ce4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404cee:	xchg   ax,ax
  404cf0:	push   rbp
  404cf1:	mov    rbp,rsp
  404cf4:	sub    rsp,0x40
  404cf8:	mov    QWORD PTR [rbp-0x8],rdi
  404cfc:	mov    DWORD PTR [rbp-0xc],esi
  404cff:	mov    QWORD PTR [rbp-0x18],rdx
  404d03:	mov    QWORD PTR [rbp-0x20],rcx
  404d07:	mov    DWORD PTR [rbp-0x24],r8d
  404d0b:	mov    rcx,QWORD PTR [rbp-0x8]
  404d0f:	add    rcx,0x58
  404d13:	movsxd rdx,DWORD PTR [rbp-0xc]
  404d17:	shl    rdx,0x4
  404d1b:	add    rcx,rdx
  404d1e:	mov    QWORD PTR [rbp-0x30],rcx
  404d22:	mov    rcx,QWORD PTR [rbp-0x18]
  404d26:	add    rcx,QWORD PTR [rbp-0x20]
  404d2a:	mov    rdx,QWORD PTR [rbp-0x30]
  404d2e:	cmp    rcx,QWORD PTR [rdx+0x8]
  404d32:	jbe    404d93 <flatcc_builder_enter_user_frame_ptr@@Base+0x183>
  404d38:	mov    rax,QWORD PTR [rbp-0x8]
  404d3c:	mov    rax,QWORD PTR [rax+0x50]
  404d40:	mov    rcx,QWORD PTR [rbp-0x8]
  404d44:	mov    rdi,QWORD PTR [rcx+0x40]
  404d48:	mov    rsi,QWORD PTR [rbp-0x30]
  404d4c:	mov    rcx,QWORD PTR [rbp-0x18]
  404d50:	add    rcx,QWORD PTR [rbp-0x20]
  404d54:	mov    edx,DWORD PTR [rbp-0x24]
  404d57:	mov    r8d,DWORD PTR [rbp-0xc]
  404d5b:	mov    DWORD PTR [rbp-0x34],edx
  404d5e:	mov    rdx,rcx
  404d61:	mov    ecx,DWORD PTR [rbp-0x34]
  404d64:	call   rax
  404d66:	cmp    eax,0x0
  404d69:	je     404d8e <flatcc_builder_enter_user_frame_ptr@@Base+0x17e>
  404d6f:	lea    rdi,[rip+0xa82c]        # 40f5a2 <flatcc_builder_padding_base@@Base+0x13d2>
  404d76:	lea    rsi,[rip+0x9665]        # 40e3e2 <flatcc_builder_padding_base@@Base+0x212>
  404d7d:	mov    edx,0x134
  404d82:	lea    rcx,[rip+0xa653]        # 40f3dc <flatcc_builder_padding_base@@Base+0x120c>
  404d89:	call   403060 <__assert_fail@plt>
  404d8e:	jmp    404d93 <flatcc_builder_enter_user_frame_ptr@@Base+0x183>
  404d93:	mov    rax,QWORD PTR [rbp-0x30]
  404d97:	mov    rax,QWORD PTR [rax]
  404d9a:	add    rax,QWORD PTR [rbp-0x18]
  404d9e:	add    rsp,0x40
  404da2:	pop    rbp
  404da3:	ret    
  404da4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404dae:	xchg   ax,ax

0000000000404db0 <flatcc_builder_enter_user_frame@@Base>:
  404db0:	push   rbp
  404db1:	mov    rbp,rsp
  404db4:	sub    rsp,0x20
  404db8:	xor    r8d,r8d
  404dbb:	mov    QWORD PTR [rbp-0x10],rdi
  404dbf:	mov    QWORD PTR [rbp-0x18],rsi
  404dc3:	mov    rsi,QWORD PTR [rbp-0x18]
  404dc7:	add    rsi,0x8
  404dcb:	sub    rsi,0x1
  404dcf:	and    rsi,0xfffffffffffffff8
  404dd3:	add    rsi,0x8
  404dd7:	mov    QWORD PTR [rbp-0x18],rsi
  404ddb:	mov    rdi,QWORD PTR [rbp-0x10]
  404ddf:	mov    rsi,QWORD PTR [rbp-0x10]
  404de3:	mov    rdx,QWORD PTR [rsi+0x180]
  404dea:	mov    rcx,QWORD PTR [rbp-0x18]
  404dee:	mov    esi,0x7
  404df3:	call   404cf0 <flatcc_builder_enter_user_frame_ptr@@Base+0xe0>
  404df8:	mov    QWORD PTR [rbp-0x20],rax
  404dfc:	cmp    rax,0x0
  404e00:	jne    404e13 <flatcc_builder_enter_user_frame@@Base+0x63>
  404e06:	mov    QWORD PTR [rbp-0x8],0x0
  404e0e:	jmp    404e81 <flatcc_builder_enter_user_frame@@Base+0xd1>
  404e13:	xor    esi,esi
  404e15:	mov    rax,QWORD PTR [rbp-0x20]
  404e19:	mov    rdx,QWORD PTR [rbp-0x18]
  404e1d:	mov    rdi,rax
  404e20:	call   403070 <memset@plt>
  404e25:	mov    rax,QWORD PTR [rbp-0x10]
  404e29:	mov    rax,QWORD PTR [rax+0x178]
  404e30:	mov    rdx,QWORD PTR [rbp-0x20]
  404e34:	mov    rdi,rdx
  404e37:	add    rdi,0x8
  404e3b:	mov    QWORD PTR [rbp-0x20],rdi
  404e3f:	mov    QWORD PTR [rdx],rax
  404e42:	mov    rax,QWORD PTR [rbp-0x10]
  404e46:	mov    rax,QWORD PTR [rax+0x180]
  404e4d:	add    rax,0x8
  404e51:	mov    rdx,QWORD PTR [rbp-0x10]
  404e55:	mov    QWORD PTR [rdx+0x178],rax
  404e5c:	mov    rax,QWORD PTR [rbp-0x18]
  404e60:	mov    rdx,QWORD PTR [rbp-0x10]
  404e64:	add    rax,QWORD PTR [rdx+0x180]
  404e6b:	mov    QWORD PTR [rdx+0x180],rax
  404e72:	mov    rax,QWORD PTR [rbp-0x10]
  404e76:	mov    rax,QWORD PTR [rax+0x178]
  404e7d:	mov    QWORD PTR [rbp-0x8],rax
  404e81:	mov    rax,QWORD PTR [rbp-0x8]
  404e85:	add    rsp,0x20
  404e89:	pop    rbp
  404e8a:	ret    
  404e8b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000404e90 <flatcc_builder_exit_user_frame@@Base>:
  404e90:	push   rbp
  404e91:	mov    rbp,rsp
  404e94:	sub    rsp,0x10
  404e98:	mov    QWORD PTR [rbp-0x8],rdi
  404e9c:	mov    rdi,QWORD PTR [rbp-0x8]
  404ea0:	cmp    QWORD PTR [rdi+0x178],0x0
  404ea8:	jbe    404eb3 <flatcc_builder_exit_user_frame@@Base+0x23>
  404eae:	jmp    404ed2 <flatcc_builder_exit_user_frame@@Base+0x42>
  404eb3:	lea    rdi,[rip+0x95c6]        # 40e480 <flatcc_builder_padding_base@@Base+0x2b0>
  404eba:	lea    rsi,[rip+0x9521]        # 40e3e2 <flatcc_builder_padding_base@@Base+0x212>
  404ec1:	mov    edx,0x21e
  404ec6:	lea    rcx,[rip+0x95cc]        # 40e499 <flatcc_builder_padding_base@@Base+0x2c9>
  404ecd:	call   403060 <__assert_fail@plt>
  404ed2:	mov    rax,QWORD PTR [rbp-0x8]
  404ed6:	mov    rax,QWORD PTR [rax+0xc8]
  404edd:	mov    rcx,QWORD PTR [rbp-0x8]
  404ee1:	mov    rcx,QWORD PTR [rcx+0x178]
  404ee8:	mov    edx,ecx
  404eea:	mov    edx,edx
  404eec:	mov    ecx,edx
  404eee:	add    rax,rcx
  404ef1:	mov    QWORD PTR [rbp-0x10],rax
  404ef5:	mov    rax,QWORD PTR [rbp-0x8]
  404ef9:	mov    rax,QWORD PTR [rax+0x178]
  404f00:	sub    rax,0x8
  404f04:	mov    rcx,QWORD PTR [rbp-0x8]
  404f08:	mov    QWORD PTR [rcx+0x180],rax
  404f0f:	mov    rax,QWORD PTR [rbp-0x10]
  404f13:	mov    rax,QWORD PTR [rax-0x8]
  404f17:	mov    rcx,QWORD PTR [rbp-0x8]
  404f1b:	mov    QWORD PTR [rcx+0x178],rax
  404f22:	add    rsp,0x10
  404f26:	pop    rbp
  404f27:	ret    
  404f28:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000404f30 <flatcc_builder_exit_user_frame_at@@Base>:
  404f30:	push   rbp
  404f31:	mov    rbp,rsp
  404f34:	sub    rsp,0x10
  404f38:	mov    QWORD PTR [rbp-0x8],rdi
  404f3c:	mov    QWORD PTR [rbp-0x10],rsi
  404f40:	mov    rsi,QWORD PTR [rbp-0x8]
  404f44:	mov    rsi,QWORD PTR [rsi+0x178]
  404f4b:	cmp    rsi,QWORD PTR [rbp-0x10]
  404f4f:	jb     404f5a <flatcc_builder_exit_user_frame_at@@Base+0x2a>
  404f55:	jmp    404f79 <flatcc_builder_exit_user_frame_at@@Base+0x49>
  404f5a:	lea    rdi,[rip+0x9572]        # 40e4d3 <flatcc_builder_padding_base@@Base+0x303>
  404f61:	lea    rsi,[rip+0x947a]        # 40e3e2 <flatcc_builder_padding_base@@Base+0x212>
  404f68:	mov    edx,0x227
  404f6d:	lea    rcx,[rip+0x957e]        # 40e4f2 <flatcc_builder_padding_base@@Base+0x322>
  404f74:	call   403060 <__assert_fail@plt>
  404f79:	mov    rax,QWORD PTR [rbp-0x10]
  404f7d:	mov    rcx,QWORD PTR [rbp-0x8]
  404f81:	mov    QWORD PTR [rcx+0x178],rax
  404f88:	mov    rdi,QWORD PTR [rbp-0x8]
  404f8c:	call   404e90 <flatcc_builder_exit_user_frame@@Base>
  404f91:	add    rsp,0x10
  404f95:	pop    rbp
  404f96:	ret    
  404f97:	nop    WORD PTR [rax+rax*1+0x0]

0000000000404fa0 <flatcc_builder_get_current_user_frame@@Base>:
  404fa0:	push   rbp
  404fa1:	mov    rbp,rsp
  404fa4:	mov    QWORD PTR [rbp-0x8],rdi
  404fa8:	mov    rdi,QWORD PTR [rbp-0x8]
  404fac:	mov    rax,QWORD PTR [rdi+0x178]
  404fb3:	pop    rbp
  404fb4:	ret    
  404fb5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404fbf:	nop

0000000000404fc0 <flatcc_builder_get_user_frame_ptr@@Base>:
  404fc0:	push   rbp
  404fc1:	mov    rbp,rsp
  404fc4:	mov    QWORD PTR [rbp-0x8],rdi
  404fc8:	mov    QWORD PTR [rbp-0x10],rsi
  404fcc:	mov    rsi,QWORD PTR [rbp-0x8]
  404fd0:	mov    rsi,QWORD PTR [rsi+0xc8]
  404fd7:	mov    rdi,QWORD PTR [rbp-0x10]
  404fdb:	mov    eax,edi
  404fdd:	mov    eax,eax
  404fdf:	mov    edi,eax
  404fe1:	add    rsi,rdi
  404fe4:	mov    rax,rsi
  404fe7:	pop    rbp
  404fe8:	ret    
  404fe9:	nop    DWORD PTR [rax+0x0]

0000000000404ff0 <flatcc_builder_embed_buffer@@Base>:
  404ff0:	push   rbp
  404ff1:	mov    rbp,rsp
  404ff4:	sub    rsp,0xd0
  404ffb:	mov    ax,r8w
  404fff:	mov    r10w,si
  405003:	mov    QWORD PTR [rbp-0x10],rdi
  405007:	mov    WORD PTR [rbp-0x12],r10w
  40500c:	mov    QWORD PTR [rbp-0x20],rdx
  405010:	mov    QWORD PTR [rbp-0x28],rcx
  405014:	mov    WORD PTR [rbp-0x2a],ax
  405018:	mov    DWORD PTR [rbp-0x30],r9d
  40501c:	mov    esi,DWORD PTR [rbp-0x30]
  40501f:	and    esi,0x2
  405022:	mov    DWORD PTR [rbp-0xcc],esi
  405028:	mov    rdi,QWORD PTR [rbp-0x10]
  40502c:	mov    ax,WORD PTR [rbp-0x12]
  405030:	mov    rcx,QWORD PTR [rbp-0x10]
  405034:	cmp    DWORD PTR [rcx+0x100],0x0
  40503b:	sete   r11b
  40503f:	xor    r11b,0xff
  405043:	and    r11b,0x1
  405047:	movzx  ecx,r11b
  40504b:	lea    rsi,[rbp-0x2a]
  40504f:	movzx  edx,ax
  405052:	call   405240 <flatcc_builder_embed_buffer@@Base+0x250>
  405057:	cmp    eax,0x0
  40505a:	je     40506c <flatcc_builder_embed_buffer@@Base+0x7c>
  405060:	mov    DWORD PTR [rbp-0x4],0x0
  405067:	jmp    405225 <flatcc_builder_embed_buffer@@Base+0x235>
  40506c:	xor    eax,eax
  40506e:	mov    ecx,eax
  405070:	mov    eax,0x4
  405075:	mov    edx,eax
  405077:	mov    rdi,QWORD PTR [rbp-0x10]
  40507b:	mov    rsi,QWORD PTR [rbp-0x28]
  40507f:	mov    eax,esi
  405081:	mov    eax,eax
  405083:	mov    esi,eax
  405085:	mov    eax,DWORD PTR [rbp-0xcc]
  40508b:	cmp    eax,0x0
  40508e:	cmovne rcx,rdx
  405092:	add    rsi,rcx
  405095:	mov    eax,esi
  405097:	mov    esi,eax
  405099:	movzx  edx,WORD PTR [rbp-0x2a]
  40509d:	call   4053e0 <flatcc_builder_embed_buffer@@Base+0x3f0>
  4050a2:	mov    DWORD PTR [rbp-0x38],eax
  4050a5:	mov    rcx,QWORD PTR [rbp-0x28]
  4050a9:	mov    eax,ecx
  4050ab:	add    eax,DWORD PTR [rbp-0x38]
  4050ae:	mov    edi,eax
  4050b0:	call   405410 <flatcc_builder_embed_buffer@@Base+0x420>
  4050b5:	mov    DWORD PTR [rbp-0x34],eax
  4050b8:	mov    QWORD PTR [rbp-0xc8],0x0
  4050c3:	mov    DWORD PTR [rbp-0xc0],0x0
  4050cd:	mov    rcx,QWORD PTR [rbp-0x10]
  4050d1:	cmp    DWORD PTR [rcx+0x100],0x0
  4050d8:	je     40513c <flatcc_builder_embed_buffer@@Base+0x14c>
  4050de:	mov    rax,QWORD PTR [rbp-0xc8]
  4050e5:	add    rax,0x4
  4050e9:	mov    QWORD PTR [rbp-0xc8],rax
  4050f0:	lea    rax,[rbp-0x34]
  4050f4:	lea    rcx,[rbp-0xc8]
  4050fb:	mov    rdx,rcx
  4050fe:	add    rdx,0x10
  405102:	movsxd rsi,DWORD PTR [rbp-0xc0]
  405109:	shl    rsi,0x4
  40510d:	add    rdx,rsi
  405110:	mov    QWORD PTR [rdx],rax
  405113:	add    rcx,0x10
  405117:	movsxd rax,DWORD PTR [rbp-0xc0]
  40511e:	shl    rax,0x4
  405122:	add    rcx,rax
  405125:	mov    QWORD PTR [rcx+0x8],0x4
  40512d:	mov    edi,DWORD PTR [rbp-0xc0]
  405133:	add    edi,0x1
  405136:	mov    DWORD PTR [rbp-0xc0],edi
  40513c:	cmp    QWORD PTR [rbp-0x28],0x0
  405141:	jbe    4051a5 <flatcc_builder_embed_buffer@@Base+0x1b5>
  405147:	mov    rax,QWORD PTR [rbp-0x28]
  40514b:	add    rax,QWORD PTR [rbp-0xc8]
  405152:	mov    QWORD PTR [rbp-0xc8],rax
  405159:	mov    rax,QWORD PTR [rbp-0x20]
  40515d:	lea    rcx,[rbp-0xc8]
  405164:	mov    rdx,rcx
  405167:	add    rdx,0x10
  40516b:	movsxd rsi,DWORD PTR [rbp-0xc0]
  405172:	shl    rsi,0x4
  405176:	add    rdx,rsi
  405179:	mov    QWORD PTR [rdx],rax
  40517c:	mov    rax,QWORD PTR [rbp-0x28]
  405180:	add    rcx,0x10
  405184:	movsxd rdx,DWORD PTR [rbp-0xc0]
  40518b:	shl    rdx,0x4
  40518f:	add    rcx,rdx
  405192:	mov    QWORD PTR [rcx+0x8],rax
  405196:	mov    edi,DWORD PTR [rbp-0xc0]
  40519c:	add    edi,0x1
  40519f:	mov    DWORD PTR [rbp-0xc0],edi
  4051a5:	cmp    DWORD PTR [rbp-0x38],0x0
  4051a9:	jbe    405212 <flatcc_builder_embed_buffer@@Base+0x222>
  4051af:	lea    rax,[rip+0x901a]        # 40e1d0 <flatcc_builder_padding_base@@Base>
  4051b6:	mov    ecx,DWORD PTR [rbp-0x38]
  4051b9:	mov    edx,ecx
  4051bb:	add    rdx,QWORD PTR [rbp-0xc8]
  4051c2:	mov    QWORD PTR [rbp-0xc8],rdx
  4051c9:	lea    rdx,[rbp-0xc8]
  4051d0:	mov    rsi,rdx
  4051d3:	add    rsi,0x10
  4051d7:	movsxd rdi,DWORD PTR [rbp-0xc0]
  4051de:	shl    rdi,0x4
  4051e2:	add    rsi,rdi
  4051e5:	mov    QWORD PTR [rsi],rax
  4051e8:	mov    ecx,DWORD PTR [rbp-0x38]
  4051eb:	mov    eax,ecx
  4051ed:	add    rdx,0x10
  4051f1:	movsxd rsi,DWORD PTR [rbp-0xc0]
  4051f8:	shl    rsi,0x4
  4051fc:	add    rdx,rsi
  4051ff:	mov    QWORD PTR [rdx+0x8],rax
  405203:	mov    ecx,DWORD PTR [rbp-0xc0]
  405209:	add    ecx,0x1
  40520c:	mov    DWORD PTR [rbp-0xc0],ecx
  405212:	mov    rdi,QWORD PTR [rbp-0x10]
  405216:	lea    rsi,[rbp-0xc8]
  40521d:	call   405420 <flatcc_builder_embed_buffer@@Base+0x430>
  405222:	mov    DWORD PTR [rbp-0x4],eax
  405225:	mov    eax,DWORD PTR [rbp-0x4]
  405228:	add    rsp,0xd0
  40522f:	pop    rbp
  405230:	ret    
  405231:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40523b:	nop    DWORD PTR [rax+rax*1+0x0]
  405240:	push   rbp
  405241:	mov    rbp,rsp
  405244:	sub    rsp,0xc0
  40524b:	mov    ax,dx
  40524e:	mov    QWORD PTR [rbp-0x8],rdi
  405252:	mov    QWORD PTR [rbp-0x10],rsi
  405256:	mov    WORD PTR [rbp-0x12],ax
  40525a:	mov    DWORD PTR [rbp-0x18],ecx
  40525d:	movzx  ecx,WORD PTR [rbp-0x12]
  405261:	cmp    ecx,0x0
  405264:	je     405279 <flatcc_builder_embed_buffer@@Base+0x289>
  40526a:	movzx  eax,WORD PTR [rbp-0x12]
  40526e:	mov    DWORD PTR [rbp-0xb4],eax
  405274:	jmp    4052bf <flatcc_builder_embed_buffer@@Base+0x2cf>
  405279:	mov    rax,QWORD PTR [rbp-0x8]
  40527d:	movzx  ecx,WORD PTR [rax+0xec]
  405284:	cmp    ecx,0x0
  405287:	je     4052a3 <flatcc_builder_embed_buffer@@Base+0x2b3>
  40528d:	mov    rax,QWORD PTR [rbp-0x8]
  405291:	movzx  ecx,WORD PTR [rax+0xec]
  405298:	mov    DWORD PTR [rbp-0xb8],ecx
  40529e:	jmp    4052b3 <flatcc_builder_embed_buffer@@Base+0x2c3>
  4052a3:	mov    eax,0x1
  4052a8:	mov    DWORD PTR [rbp-0xb8],eax
  4052ae:	jmp    4052b3 <flatcc_builder_embed_buffer@@Base+0x2c3>
  4052b3:	mov    eax,DWORD PTR [rbp-0xb8]
  4052b9:	mov    DWORD PTR [rbp-0xb4],eax
  4052bf:	mov    eax,DWORD PTR [rbp-0xb4]
  4052c5:	mov    cx,ax
  4052c8:	mov    WORD PTR [rbp-0x12],cx
  4052cc:	mov    rdi,QWORD PTR [rbp-0x10]
  4052d0:	mov    esi,0x4
  4052d5:	call   406dc0 <flatcc_builder_start_vector@@Base+0xb0>
  4052da:	mov    rdi,QWORD PTR [rbp-0x10]
  4052de:	movzx  esi,WORD PTR [rbp-0x12]
  4052e2:	call   406dc0 <flatcc_builder_start_vector@@Base+0xb0>
  4052e7:	cmp    DWORD PTR [rbp-0x18],0x0
  4052eb:	jne    4053d5 <flatcc_builder_embed_buffer@@Base+0x3e5>
  4052f1:	mov    rdi,QWORD PTR [rbp-0x8]
  4052f5:	movzx  esi,WORD PTR [rbp-0x12]
  4052f9:	call   40a150 <flatcc_builder_get_emit_context@@Base+0x20>
  4052fe:	mov    eax,eax
  405300:	mov    edi,eax
  405302:	mov    QWORD PTR [rbp-0x20],rdi
  405306:	cmp    QWORD PTR [rbp-0x20],0x0
  40530b:	je     4053d0 <flatcc_builder_embed_buffer@@Base+0x3e0>
  405311:	mov    QWORD PTR [rbp-0xb0],0x0
  40531c:	mov    DWORD PTR [rbp-0xa8],0x0
  405326:	cmp    QWORD PTR [rbp-0x20],0x0
  40532b:	jbe    405392 <flatcc_builder_embed_buffer@@Base+0x3a2>
  405331:	lea    rax,[rip+0x8e98]        # 40e1d0 <flatcc_builder_padding_base@@Base>
  405338:	mov    rcx,QWORD PTR [rbp-0x20]
  40533c:	add    rcx,QWORD PTR [rbp-0xb0]
  405343:	mov    QWORD PTR [rbp-0xb0],rcx
  40534a:	lea    rcx,[rbp-0xb0]
  405351:	mov    rdx,rcx
  405354:	add    rdx,0x10
  405358:	movsxd rsi,DWORD PTR [rbp-0xa8]
  40535f:	shl    rsi,0x4
  405363:	add    rdx,rsi
  405366:	mov    QWORD PTR [rdx],rax
  405369:	mov    rax,QWORD PTR [rbp-0x20]
  40536d:	add    rcx,0x10
  405371:	movsxd rdx,DWORD PTR [rbp-0xa8]
  405378:	shl    rdx,0x4
  40537c:	add    rcx,rdx
  40537f:	mov    QWORD PTR [rcx+0x8],rax
  405383:	mov    edi,DWORD PTR [rbp-0xa8]
  405389:	add    edi,0x1
  40538c:	mov    DWORD PTR [rbp-0xa8],edi
  405392:	mov    rdi,QWORD PTR [rbp-0x8]
  405396:	lea    rsi,[rbp-0xb0]
  40539d:	call   4073c0 <flatcc_builder_create_vtable@@Base+0x140>
  4053a2:	xor    ecx,ecx
  4053a4:	cmp    ecx,eax
  4053a6:	jne    4053cb <flatcc_builder_embed_buffer@@Base+0x3db>
  4053ac:	lea    rdi,[rip+0xa1ef]        # 40f5a2 <flatcc_builder_padding_base@@Base+0x13d2>
  4053b3:	lea    rsi,[rip+0x9028]        # 40e3e2 <flatcc_builder_padding_base@@Base+0x212>
  4053ba:	mov    edx,0x2be
  4053bf:	lea    rcx,[rip+0xa059]        # 40f41f <flatcc_builder_padding_base@@Base+0x124f>
  4053c6:	call   403060 <__assert_fail@plt>
  4053cb:	jmp    4053d0 <flatcc_builder_embed_buffer@@Base+0x3e0>
  4053d0:	jmp    4053d5 <flatcc_builder_embed_buffer@@Base+0x3e5>
  4053d5:	xor    eax,eax
  4053d7:	add    rsp,0xc0
  4053de:	pop    rbp
  4053df:	ret    
  4053e0:	push   rbp
  4053e1:	mov    rbp,rsp
  4053e4:	mov    ax,dx
  4053e7:	mov    QWORD PTR [rbp-0x8],rdi
  4053eb:	mov    DWORD PTR [rbp-0xc],esi
  4053ee:	mov    WORD PTR [rbp-0xe],ax
  4053f2:	mov    rdi,QWORD PTR [rbp-0x8]
  4053f6:	mov    edx,DWORD PTR [rdi+0xf0]
  4053fc:	sub    edx,DWORD PTR [rbp-0xc]
  4053ff:	movzx  esi,WORD PTR [rbp-0xe]
  405403:	sub    esi,0x1
  405406:	and    edx,esi
  405408:	mov    eax,edx
  40540a:	pop    rbp
  40540b:	ret    
  40540c:	nop    DWORD PTR [rax+0x0]
  405410:	push   rbp
  405411:	mov    rbp,rsp
  405414:	mov    DWORD PTR [rbp-0x4],edi
  405417:	mov    eax,DWORD PTR [rbp-0x4]
  40541a:	pop    rbp
  40541b:	ret    
  40541c:	nop    DWORD PTR [rax+0x0]
  405420:	push   rbp
  405421:	mov    rbp,rsp
  405424:	sub    rsp,0x20
  405428:	mov    QWORD PTR [rbp-0x8],rdi
  40542c:	mov    QWORD PTR [rbp-0x10],rsi
  405430:	mov    rsi,QWORD PTR [rbp-0x8]
  405434:	mov    eax,DWORD PTR [rsi+0xf0]
  40543a:	mov    rsi,QWORD PTR [rbp-0x10]
  40543e:	mov    rsi,QWORD PTR [rsi]
  405441:	mov    ecx,esi
  405443:	sub    eax,ecx
  405445:	mov    DWORD PTR [rbp-0x14],eax
  405448:	mov    rsi,QWORD PTR [rbp-0x10]
  40544c:	cmp    QWORD PTR [rsi],0x10
  405450:	jbe    405471 <flatcc_builder_embed_buffer@@Base+0x481>
  405456:	mov    eax,0xffffffff
  40545b:	mov    ecx,eax
  40545d:	mov    rdx,QWORD PTR [rbp-0x10]
  405461:	mov    rdx,QWORD PTR [rdx]
  405464:	sub    rdx,0x10
  405468:	cmp    rdx,rcx
  40546b:	ja     405484 <flatcc_builder_embed_buffer@@Base+0x494>
  405471:	mov    eax,DWORD PTR [rbp-0x14]
  405474:	mov    rcx,QWORD PTR [rbp-0x8]
  405478:	cmp    eax,DWORD PTR [rcx+0xf0]
  40547e:	jl     4054a3 <flatcc_builder_embed_buffer@@Base+0x4b3>
  405484:	lea    rdi,[rip+0xa117]        # 40f5a2 <flatcc_builder_padding_base@@Base+0x13d2>
  40548b:	lea    rsi,[rip+0x8f50]        # 40e3e2 <flatcc_builder_padding_base@@Base+0x212>
  405492:	mov    edx,0x287
  405497:	lea    rcx,[rip+0x9fc3]        # 40f461 <flatcc_builder_padding_base@@Base+0x1291>
  40549e:	call   403060 <__assert_fail@plt>
  4054a3:	mov    rax,QWORD PTR [rbp-0x8]
  4054a7:	mov    rax,QWORD PTR [rax+0x48]
  4054ab:	mov    rcx,QWORD PTR [rbp-0x8]
  4054af:	mov    rdi,QWORD PTR [rcx+0x38]
  4054b3:	mov    rcx,QWORD PTR [rbp-0x10]
  4054b7:	add    rcx,0x10
  4054bb:	mov    rdx,QWORD PTR [rbp-0x10]
  4054bf:	mov    edx,DWORD PTR [rdx+0x8]
  4054c2:	mov    esi,DWORD PTR [rbp-0x14]
  4054c5:	mov    r8,QWORD PTR [rbp-0x10]
  4054c9:	mov    r8,QWORD PTR [r8]
  4054cc:	mov    DWORD PTR [rbp-0x18],esi
  4054cf:	mov    rsi,rcx
  4054d2:	mov    ecx,DWORD PTR [rbp-0x18]
  4054d5:	call   rax
  4054d7:	cmp    eax,0x0
  4054da:	je     4054ff <flatcc_builder_embed_buffer@@Base+0x50f>
  4054e0:	lea    rdi,[rip+0xa0bb]        # 40f5a2 <flatcc_builder_padding_base@@Base+0x13d2>
  4054e7:	lea    rsi,[rip+0x8ef4]        # 40e3e2 <flatcc_builder_padding_base@@Base+0x212>
  4054ee:	mov    edx,0x28b
  4054f3:	lea    rcx,[rip+0x9f67]        # 40f461 <flatcc_builder_padding_base@@Base+0x1291>
  4054fa:	call   403060 <__assert_fail@plt>
  4054ff:	mov    eax,DWORD PTR [rbp-0x14]
  405502:	mov    rcx,QWORD PTR [rbp-0x8]
  405506:	mov    DWORD PTR [rcx+0xf0],eax
  40550c:	add    rsp,0x20
  405510:	pop    rbp
  405511:	ret    
  405512:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40551c:	nop    DWORD PTR [rax+0x0]

0000000000405520 <flatcc_builder_create_buffer@@Base>:
  405520:	push   rbp
  405521:	mov    rbp,rsp
  405524:	sub    rsp,0xf0
  40552b:	mov    ax,r8w
  40552f:	mov    r10w,dx
  405533:	mov    QWORD PTR [rbp-0x10],rdi
  405537:	mov    QWORD PTR [rbp-0x18],rsi
  40553b:	mov    WORD PTR [rbp-0x1a],r10w
  405540:	mov    DWORD PTR [rbp-0x20],ecx
  405543:	mov    WORD PTR [rbp-0x22],ax
  405547:	mov    DWORD PTR [rbp-0x28],r9d
  40554b:	mov    DWORD PTR [rbp-0x34],0x0
  405552:	mov    DWORD PTR [rbp-0xd4],0x0
  40555c:	mov    ecx,DWORD PTR [rbp-0x28]
  40555f:	and    ecx,0x1
  405562:	cmp    ecx,0x0
  405565:	setne  r11b
  405569:	and    r11b,0x1
  40556d:	movzx  ecx,r11b
  405571:	mov    DWORD PTR [rbp-0xd8],ecx
  405577:	mov    ecx,DWORD PTR [rbp-0x28]
  40557a:	and    ecx,0x2
  40557d:	cmp    ecx,0x0
  405580:	setne  r11b
  405584:	and    r11b,0x1
  405588:	movzx  ecx,r11b
  40558c:	mov    DWORD PTR [rbp-0xdc],ecx
  405592:	mov    rdi,QWORD PTR [rbp-0x10]
  405596:	mov    ax,WORD PTR [rbp-0x1a]
  40559a:	mov    ecx,DWORD PTR [rbp-0xd8]
  4055a0:	lea    rsi,[rbp-0x22]
  4055a4:	movzx  edx,ax
  4055a7:	call   405240 <flatcc_builder_embed_buffer@@Base+0x250>
  4055ac:	cmp    eax,0x0
  4055af:	je     4055c1 <flatcc_builder_create_buffer@@Base+0xa1>
  4055b5:	mov    DWORD PTR [rbp-0x4],0x0
  4055bc:	jmp    40591b <flatcc_builder_create_buffer@@Base+0x3fb>
  4055c1:	mov    rdi,QWORD PTR [rbp-0x10]
  4055c5:	movzx  esi,WORD PTR [rbp-0x22]
  4055c9:	call   405930 <flatcc_builder_create_buffer@@Base+0x410>
  4055ce:	cmp    QWORD PTR [rbp-0x18],0x0
  4055d3:	je     405607 <flatcc_builder_create_buffer@@Base+0xe7>
  4055d9:	mov    rax,QWORD PTR [rbp-0x18]
  4055dd:	mov    ecx,DWORD PTR [rax]
  4055df:	mov    DWORD PTR [rbp-0xd4],ecx
  4055e5:	mov    edi,DWORD PTR [rbp-0xd4]
  4055eb:	call   405970 <flatcc_builder_create_buffer@@Base+0x450>
  4055f0:	mov    DWORD PTR [rbp-0xd4],eax
  4055f6:	mov    edi,DWORD PTR [rbp-0xd4]
  4055fc:	call   405410 <flatcc_builder_embed_buffer@@Base+0x420>
  405601:	mov    DWORD PTR [rbp-0xd4],eax
  405607:	xor    eax,eax
  405609:	mov    ecx,eax
  40560b:	mov    eax,0x4
  405610:	mov    edx,eax
  405612:	xor    eax,eax
  405614:	mov    esi,DWORD PTR [rbp-0xd4]
  40561a:	cmp    esi,0x0
  40561d:	mov    esi,0x4
  405622:	cmovne eax,esi
  405625:	mov    DWORD PTR [rbp-0x34],eax
  405628:	mov    rdi,QWORD PTR [rbp-0x10]
  40562c:	mov    eax,DWORD PTR [rbp-0x34]
  40562f:	mov    r8d,eax
  405632:	add    r8,0x4
  405636:	mov    eax,DWORD PTR [rbp-0xdc]
  40563c:	cmp    eax,0x0
  40563f:	cmovne rcx,rdx
  405643:	add    r8,rcx
  405646:	mov    eax,r8d
  405649:	mov    esi,eax
  40564b:	movzx  edx,WORD PTR [rbp-0x22]
  40564f:	call   4053e0 <flatcc_builder_embed_buffer@@Base+0x3f0>
  405654:	mov    DWORD PTR [rbp-0x30],eax
  405657:	mov    QWORD PTR [rbp-0xd0],0x0
  405662:	mov    DWORD PTR [rbp-0xc8],0x0
  40566c:	cmp    DWORD PTR [rbp-0xd8],0x0
  405673:	jne    405686 <flatcc_builder_create_buffer@@Base+0x166>
  405679:	cmp    DWORD PTR [rbp-0xdc],0x0
  405680:	je     4056e4 <flatcc_builder_create_buffer@@Base+0x1c4>
  405686:	mov    rax,QWORD PTR [rbp-0xd0]
  40568d:	add    rax,0x4
  405691:	mov    QWORD PTR [rbp-0xd0],rax
  405698:	lea    rax,[rbp-0x3c]
  40569c:	lea    rcx,[rbp-0xd0]
  4056a3:	mov    rdx,rcx
  4056a6:	add    rdx,0x10
  4056aa:	movsxd rsi,DWORD PTR [rbp-0xc8]
  4056b1:	shl    rsi,0x4
  4056b5:	add    rdx,rsi
  4056b8:	mov    QWORD PTR [rdx],rax
  4056bb:	add    rcx,0x10
  4056bf:	movsxd rax,DWORD PTR [rbp-0xc8]
  4056c6:	shl    rax,0x4
  4056ca:	add    rcx,rax
  4056cd:	mov    QWORD PTR [rcx+0x8],0x4
  4056d5:	mov    edi,DWORD PTR [rbp-0xc8]
  4056db:	add    edi,0x1
  4056de:	mov    DWORD PTR [rbp-0xc8],edi
  4056e4:	mov    rax,QWORD PTR [rbp-0xd0]
  4056eb:	add    rax,0x4
  4056ef:	mov    QWORD PTR [rbp-0xd0],rax
  4056f6:	lea    rax,[rbp-0x38]
  4056fa:	lea    rcx,[rbp-0xd0]
  405701:	mov    rdx,rcx
  405704:	add    rdx,0x10
  405708:	movsxd rsi,DWORD PTR [rbp-0xc8]
  40570f:	shl    rsi,0x4
  405713:	add    rdx,rsi
  405716:	mov    QWORD PTR [rdx],rax
  405719:	add    rcx,0x10
  40571d:	movsxd rax,DWORD PTR [rbp-0xc8]
  405724:	shl    rax,0x4
  405728:	add    rcx,rax
  40572b:	mov    QWORD PTR [rcx+0x8],0x4
  405733:	mov    edi,DWORD PTR [rbp-0xc8]
  405739:	add    edi,0x1
  40573c:	mov    DWORD PTR [rbp-0xc8],edi
  405742:	cmp    DWORD PTR [rbp-0x34],0x0
  405746:	jbe    4057af <flatcc_builder_create_buffer@@Base+0x28f>
  40574c:	mov    eax,DWORD PTR [rbp-0x34]
  40574f:	mov    ecx,eax
  405751:	add    rcx,QWORD PTR [rbp-0xd0]
  405758:	mov    QWORD PTR [rbp-0xd0],rcx
  40575f:	lea    rcx,[rbp-0xd4]
  405766:	lea    rdx,[rbp-0xd0]
  40576d:	mov    rsi,rdx
  405770:	add    rsi,0x10
  405774:	movsxd rdi,DWORD PTR [rbp-0xc8]
  40577b:	shl    rdi,0x4
  40577f:	add    rsi,rdi
  405782:	mov    QWORD PTR [rsi],rcx
  405785:	mov    eax,DWORD PTR [rbp-0x34]
  405788:	mov    ecx,eax
  40578a:	add    rdx,0x10
  40578e:	movsxd rsi,DWORD PTR [rbp-0xc8]
  405795:	shl    rsi,0x4
  405799:	add    rdx,rsi
  40579c:	mov    QWORD PTR [rdx+0x8],rcx
  4057a0:	mov    eax,DWORD PTR [rbp-0xc8]
  4057a6:	add    eax,0x1
  4057a9:	mov    DWORD PTR [rbp-0xc8],eax
  4057af:	cmp    DWORD PTR [rbp-0x30],0x0
  4057b3:	jbe    40581c <flatcc_builder_create_buffer@@Base+0x2fc>
  4057b9:	lea    rax,[rip+0x8a10]        # 40e1d0 <flatcc_builder_padding_base@@Base>
  4057c0:	mov    ecx,DWORD PTR [rbp-0x30]
  4057c3:	mov    edx,ecx
  4057c5:	add    rdx,QWORD PTR [rbp-0xd0]
  4057cc:	mov    QWORD PTR [rbp-0xd0],rdx
  4057d3:	lea    rdx,[rbp-0xd0]
  4057da:	mov    rsi,rdx
  4057dd:	add    rsi,0x10
  4057e1:	movsxd rdi,DWORD PTR [rbp-0xc8]
  4057e8:	shl    rdi,0x4
  4057ec:	add    rsi,rdi
  4057ef:	mov    QWORD PTR [rsi],rax
  4057f2:	mov    ecx,DWORD PTR [rbp-0x30]
  4057f5:	mov    eax,ecx
  4057f7:	add    rdx,0x10
  4057fb:	movsxd rsi,DWORD PTR [rbp-0xc8]
  405802:	shl    rsi,0x4
  405806:	add    rdx,rsi
  405809:	mov    QWORD PTR [rdx+0x8],rax
  40580d:	mov    ecx,DWORD PTR [rbp-0xc8]
  405813:	add    ecx,0x1
  405816:	mov    DWORD PTR [rbp-0xc8],ecx
  40581c:	mov    rax,QWORD PTR [rbp-0x10]
  405820:	mov    ecx,DWORD PTR [rax+0xf0]
  405826:	mov    rax,QWORD PTR [rbp-0xd0]
  40582d:	mov    edx,eax
  40582f:	sub    ecx,edx
  405831:	mov    ecx,ecx
  405833:	mov    eax,ecx
  405835:	cmp    DWORD PTR [rbp-0xd8],0x0
  40583c:	mov    sil,0x1
  40583f:	mov    QWORD PTR [rbp-0xe8],rax
  405846:	mov    BYTE PTR [rbp-0xe9],sil
  40584d:	jne    405863 <flatcc_builder_create_buffer@@Base+0x343>
  405853:	cmp    DWORD PTR [rbp-0xdc],0x0
  40585a:	setne  al
  40585d:	mov    BYTE PTR [rbp-0xe9],al
  405863:	mov    al,BYTE PTR [rbp-0xe9]
  405869:	xor    ecx,ecx
  40586b:	mov    edx,ecx
  40586d:	mov    ecx,0x4
  405872:	mov    esi,ecx
  405874:	test   al,0x1
  405876:	cmovne rdx,rsi
  40587a:	mov    rsi,QWORD PTR [rbp-0xe8]
  405881:	add    rsi,rdx
  405884:	mov    ecx,esi
  405886:	mov    DWORD PTR [rbp-0x40],ecx
  405889:	cmp    DWORD PTR [rbp-0xd8],0x0
  405890:	je     4058b2 <flatcc_builder_create_buffer@@Base+0x392>
  405896:	mov    rax,QWORD PTR [rbp-0x10]
  40589a:	mov    ecx,DWORD PTR [rax+0xf8]
  4058a0:	sub    ecx,DWORD PTR [rbp-0x40]
  4058a3:	mov    edi,ecx
  4058a5:	call   405410 <flatcc_builder_embed_buffer@@Base+0x420>
  4058aa:	mov    DWORD PTR [rbp-0x3c],eax
  4058ad:	jmp    4058c9 <flatcc_builder_create_buffer@@Base+0x3a9>
  4058b2:	mov    rax,QWORD PTR [rbp-0x10]
  4058b6:	mov    ecx,DWORD PTR [rax+0xf4]
  4058bc:	sub    ecx,DWORD PTR [rbp-0x40]
  4058bf:	mov    edi,ecx
  4058c1:	call   405410 <flatcc_builder_embed_buffer@@Base+0x420>
  4058c6:	mov    DWORD PTR [rbp-0x3c],eax
  4058c9:	mov    eax,DWORD PTR [rbp-0x20]
  4058cc:	sub    eax,DWORD PTR [rbp-0x40]
  4058cf:	mov    edi,eax
  4058d1:	call   405410 <flatcc_builder_embed_buffer@@Base+0x420>
  4058d6:	mov    DWORD PTR [rbp-0x38],eax
  4058d9:	mov    rdi,QWORD PTR [rbp-0x10]
  4058dd:	lea    rsi,[rbp-0xd0]
  4058e4:	call   405420 <flatcc_builder_embed_buffer@@Base+0x430>
  4058e9:	xor    ecx,ecx
  4058eb:	mov    DWORD PTR [rbp-0x2c],eax
  4058ee:	cmp    ecx,eax
  4058f0:	jne    405915 <flatcc_builder_create_buffer@@Base+0x3f5>
  4058f6:	lea    rdi,[rip+0x9ca5]        # 40f5a2 <flatcc_builder_padding_base@@Base+0x13d2>
  4058fd:	lea    rsi,[rip+0x8ade]        # 40e3e2 <flatcc_builder_padding_base@@Base+0x212>
  405904:	mov    edx,0x304
  405909:	lea    rcx,[rip+0x8c27]        # 40e537 <flatcc_builder_padding_base@@Base+0x367>
  405910:	call   403060 <__assert_fail@plt>
  405915:	mov    eax,DWORD PTR [rbp-0x2c]
  405918:	mov    DWORD PTR [rbp-0x4],eax
  40591b:	mov    eax,DWORD PTR [rbp-0x4]
  40591e:	add    rsp,0xf0
  405925:	pop    rbp
  405926:	ret    
  405927:	nop    WORD PTR [rax+rax*1+0x0]
  405930:	push   rbp
  405931:	mov    rbp,rsp
  405934:	mov    ax,si
  405937:	mov    QWORD PTR [rbp-0x8],rdi
  40593b:	mov    WORD PTR [rbp-0xa],ax
  40593f:	mov    rdi,QWORD PTR [rbp-0x8]
  405943:	movzx  esi,WORD PTR [rdi+0xe8]
  40594a:	movzx  ecx,WORD PTR [rbp-0xa]
  40594e:	cmp    esi,ecx
  405950:	jge    405965 <flatcc_builder_create_buffer@@Base+0x445>
  405956:	mov    ax,WORD PTR [rbp-0xa]
  40595a:	mov    rcx,QWORD PTR [rbp-0x8]
  40595e:	mov    WORD PTR [rcx+0xe8],ax
  405965:	pop    rbp
  405966:	ret    
  405967:	nop    WORD PTR [rax+rax*1+0x0]
  405970:	push   rbp
  405971:	mov    rbp,rsp
  405974:	mov    DWORD PTR [rbp-0x4],edi
  405977:	mov    eax,DWORD PTR [rbp-0x4]
  40597a:	pop    rbp
  40597b:	ret    
  40597c:	nop    DWORD PTR [rax+0x0]

0000000000405980 <flatcc_builder_create_struct@@Base>:
  405980:	push   rbp
  405981:	mov    rbp,rsp
  405984:	sub    rsp,0xc0
  40598b:	mov    ax,cx
  40598e:	mov    QWORD PTR [rbp-0x8],rdi
  405992:	mov    QWORD PTR [rbp-0x10],rsi
  405996:	mov    QWORD PTR [rbp-0x18],rdx
  40599a:	mov    WORD PTR [rbp-0x1a],ax
  40599e:	movzx  ecx,WORD PTR [rbp-0x1a]
  4059a2:	cmp    ecx,0x1
  4059a5:	jl     4059b0 <flatcc_builder_create_struct@@Base+0x30>
  4059ab:	jmp    4059cf <flatcc_builder_create_struct@@Base+0x4f>
  4059b0:	lea    rdi,[rip+0x8c03]        # 40e5ba <flatcc_builder_padding_base@@Base+0x3ea>
  4059b7:	lea    rsi,[rip+0x8a24]        # 40e3e2 <flatcc_builder_padding_base@@Base+0x212>
  4059be:	mov    edx,0x30f
  4059c3:	lea    rcx,[rip+0x8bfb]        # 40e5c5 <flatcc_builder_padding_base@@Base+0x3f5>
  4059ca:	call   403060 <__assert_fail@plt>
  4059cf:	mov    rdi,QWORD PTR [rbp-0x8]
  4059d3:	movzx  esi,WORD PTR [rbp-0x1a]
  4059d7:	call   405930 <flatcc_builder_create_buffer@@Base+0x410>
  4059dc:	mov    rdi,QWORD PTR [rbp-0x8]
  4059e0:	mov    rax,QWORD PTR [rbp-0x18]
  4059e4:	mov    esi,eax
  4059e6:	movzx  edx,WORD PTR [rbp-0x1a]
  4059ea:	call   4053e0 <flatcc_builder_embed_buffer@@Base+0x3f0>
  4059ef:	mov    eax,eax
  4059f1:	mov    edi,eax
  4059f3:	mov    QWORD PTR [rbp-0x28],rdi
  4059f7:	mov    QWORD PTR [rbp-0xb8],0x0
  405a02:	mov    DWORD PTR [rbp-0xb0],0x0
  405a0c:	cmp    QWORD PTR [rbp-0x18],0x0
  405a11:	jbe    405a75 <flatcc_builder_create_struct@@Base+0xf5>
  405a17:	mov    rax,QWORD PTR [rbp-0x18]
  405a1b:	add    rax,QWORD PTR [rbp-0xb8]
  405a22:	mov    QWORD PTR [rbp-0xb8],rax
  405a29:	mov    rax,QWORD PTR [rbp-0x10]
  405a2d:	lea    rcx,[rbp-0xb8]
  405a34:	mov    rdx,rcx
  405a37:	add    rdx,0x10
  405a3b:	movsxd rsi,DWORD PTR [rbp-0xb0]
  405a42:	shl    rsi,0x4
  405a46:	add    rdx,rsi
  405a49:	mov    QWORD PTR [rdx],rax
  405a4c:	mov    rax,QWORD PTR [rbp-0x18]
  405a50:	add    rcx,0x10
  405a54:	movsxd rdx,DWORD PTR [rbp-0xb0]
  405a5b:	shl    rdx,0x4
  405a5f:	add    rcx,rdx
  405a62:	mov    QWORD PTR [rcx+0x8],rax
  405a66:	mov    edi,DWORD PTR [rbp-0xb0]
  405a6c:	add    edi,0x1
  405a6f:	mov    DWORD PTR [rbp-0xb0],edi
  405a75:	cmp    QWORD PTR [rbp-0x28],0x0
  405a7a:	jbe    405ae1 <flatcc_builder_create_struct@@Base+0x161>
  405a80:	lea    rax,[rip+0x8749]        # 40e1d0 <flatcc_builder_padding_base@@Base>
  405a87:	mov    rcx,QWORD PTR [rbp-0x28]
  405a8b:	add    rcx,QWORD PTR [rbp-0xb8]
  405a92:	mov    QWORD PTR [rbp-0xb8],rcx
  405a99:	lea    rcx,[rbp-0xb8]
  405aa0:	mov    rdx,rcx
  405aa3:	add    rdx,0x10
  405aa7:	movsxd rsi,DWORD PTR [rbp-0xb0]
  405aae:	shl    rsi,0x4
  405ab2:	add    rdx,rsi
  405ab5:	mov    QWORD PTR [rdx],rax
  405ab8:	mov    rax,QWORD PTR [rbp-0x28]
  405abc:	add    rcx,0x10
  405ac0:	movsxd rdx,DWORD PTR [rbp-0xb0]
  405ac7:	shl    rdx,0x4
  405acb:	add    rcx,rdx
  405ace:	mov    QWORD PTR [rcx+0x8],rax
  405ad2:	mov    edi,DWORD PTR [rbp-0xb0]
  405ad8:	add    edi,0x1
  405adb:	mov    DWORD PTR [rbp-0xb0],edi
  405ae1:	mov    rdi,QWORD PTR [rbp-0x8]
  405ae5:	lea    rsi,[rbp-0xb8]
  405aec:	call   405420 <flatcc_builder_embed_buffer@@Base+0x430>
  405af1:	add    rsp,0xc0
  405af8:	pop    rbp
  405af9:	ret    
  405afa:	nop    WORD PTR [rax+rax*1+0x0]

0000000000405b00 <flatcc_builder_start_buffer@@Base>:
  405b00:	push   rbp
  405b01:	mov    rbp,rsp
  405b04:	sub    rsp,0x30
  405b08:	mov    ax,dx
  405b0b:	mov    QWORD PTR [rbp-0x10],rdi
  405b0f:	mov    QWORD PTR [rbp-0x18],rsi
  405b13:	mov    WORD PTR [rbp-0x1a],ax
  405b17:	mov    DWORD PTR [rbp-0x20],ecx
  405b1a:	mov    rdi,QWORD PTR [rbp-0x10]
  405b1e:	mov    rsi,QWORD PTR [rbp-0x10]
  405b22:	movzx  esi,WORD PTR [rsi+0xe8]
  405b29:	call   405c70 <flatcc_builder_start_buffer@@Base+0x170>
  405b2e:	cmp    eax,0x0
  405b31:	je     405b43 <flatcc_builder_start_buffer@@Base+0x43>
  405b37:	mov    DWORD PTR [rbp-0x4],0xffffffff
  405b3e:	jmp    405c67 <flatcc_builder_start_buffer@@Base+0x167>
  405b43:	mov    rax,QWORD PTR [rbp-0x10]
  405b47:	mov    WORD PTR [rax+0xe8],0x1
  405b50:	mov    rax,QWORD PTR [rbp-0x10]
  405b54:	mov    cx,WORD PTR [rax+0xec]
  405b5b:	mov    rax,QWORD PTR [rbp-0x10]
  405b5f:	mov    rax,QWORD PTR [rax+0x30]
  405b63:	mov    WORD PTR [rax+0x22],cx
  405b67:	mov    cx,WORD PTR [rbp-0x1a]
  405b6b:	mov    rax,QWORD PTR [rbp-0x10]
  405b6f:	mov    WORD PTR [rax+0xec],cx
  405b76:	mov    rax,QWORD PTR [rbp-0x10]
  405b7a:	mov    cx,WORD PTR [rax+0x10c]
  405b81:	mov    rax,QWORD PTR [rbp-0x10]
  405b85:	mov    rax,QWORD PTR [rax+0x30]
  405b89:	mov    WORD PTR [rax+0x20],cx
  405b8d:	mov    edx,DWORD PTR [rbp-0x20]
  405b90:	mov    cx,dx
  405b93:	mov    rax,QWORD PTR [rbp-0x10]
  405b97:	mov    WORD PTR [rax+0x10c],cx
  405b9e:	mov    rax,QWORD PTR [rbp-0x10]
  405ba2:	mov    edx,DWORD PTR [rax+0xf8]
  405ba8:	mov    rax,QWORD PTR [rbp-0x10]
  405bac:	mov    rax,QWORD PTR [rax+0x30]
  405bb0:	mov    DWORD PTR [rax+0x14],edx
  405bb3:	mov    rax,QWORD PTR [rbp-0x10]
  405bb7:	mov    edx,DWORD PTR [rax+0x100]
  405bbd:	mov    rax,QWORD PTR [rbp-0x10]
  405bc1:	mov    rax,QWORD PTR [rax+0x30]
  405bc5:	mov    DWORD PTR [rax+0x1c],edx
  405bc8:	mov    rax,QWORD PTR [rbp-0x10]
  405bcc:	mov    edx,DWORD PTR [rax+0xf0]
  405bd2:	mov    rax,QWORD PTR [rbp-0x10]
  405bd6:	mov    DWORD PTR [rax+0xf8],edx
  405bdc:	mov    rax,QWORD PTR [rbp-0x10]
  405be0:	mov    edx,DWORD PTR [rax+0xfc]
  405be6:	mov    esi,edx
  405be8:	add    esi,0x1
  405beb:	mov    DWORD PTR [rax+0xfc],esi
  405bf1:	mov    rax,QWORD PTR [rbp-0x10]
  405bf5:	mov    DWORD PTR [rax+0x100],edx
  405bfb:	mov    rax,QWORD PTR [rbp-0x10]
  405bff:	mov    edx,DWORD PTR [rax+0x110]
  405c05:	mov    rax,QWORD PTR [rbp-0x10]
  405c09:	mov    rax,QWORD PTR [rax+0x30]
  405c0d:	mov    DWORD PTR [rax+0x10],edx
  405c10:	mov    rax,QWORD PTR [rbp-0x10]
  405c14:	add    rax,0x110
  405c1a:	cmp    QWORD PTR [rbp-0x18],0x0
  405c1f:	mov    QWORD PTR [rbp-0x28],rax
  405c23:	je     405c36 <flatcc_builder_start_buffer@@Base+0x136>
  405c29:	mov    rax,QWORD PTR [rbp-0x18]
  405c2d:	mov    QWORD PTR [rbp-0x30],rax
  405c31:	jmp    405c46 <flatcc_builder_start_buffer@@Base+0x146>
  405c36:	lea    rax,[rip+0x8593]        # 40e1d0 <flatcc_builder_padding_base@@Base>
  405c3d:	mov    QWORD PTR [rbp-0x30],rax
  405c41:	jmp    405c46 <flatcc_builder_start_buffer@@Base+0x146>
  405c46:	mov    rax,QWORD PTR [rbp-0x30]
  405c4a:	mov    ecx,DWORD PTR [rax]
  405c4c:	mov    rax,QWORD PTR [rbp-0x28]
  405c50:	mov    DWORD PTR [rax],ecx
  405c52:	mov    rdx,QWORD PTR [rbp-0x10]
  405c56:	mov    rdx,QWORD PTR [rdx+0x30]
  405c5a:	mov    WORD PTR [rdx+0xe],0x1
  405c60:	mov    DWORD PTR [rbp-0x4],0x0
  405c67:	mov    eax,DWORD PTR [rbp-0x4]
  405c6a:	add    rsp,0x30
  405c6e:	pop    rbp
  405c6f:	ret    
  405c70:	push   rbp
  405c71:	mov    rbp,rsp
  405c74:	sub    rsp,0x20
  405c78:	mov    ax,si
  405c7b:	mov    QWORD PTR [rbp-0x10],rdi
  405c7f:	mov    WORD PTR [rbp-0x12],ax
  405c83:	mov    rdi,QWORD PTR [rbp-0x10]
  405c87:	mov    esi,DWORD PTR [rdi+0x104]
  405c8d:	add    esi,0x1
  405c90:	mov    DWORD PTR [rdi+0x104],esi
  405c96:	mov    rdi,QWORD PTR [rbp-0x10]
  405c9a:	cmp    esi,DWORD PTR [rdi+0x108]
  405ca0:	jle    405d90 <flatcc_builder_start_buffer@@Base+0x290>
  405ca6:	mov    rax,QWORD PTR [rbp-0x10]
  405caa:	cmp    DWORD PTR [rax+0x120],0x0
  405cb1:	jle    405cdd <flatcc_builder_start_buffer@@Base+0x1dd>
  405cb7:	mov    rax,QWORD PTR [rbp-0x10]
  405cbb:	mov    ecx,DWORD PTR [rax+0x104]
  405cc1:	mov    rax,QWORD PTR [rbp-0x10]
  405cc5:	cmp    ecx,DWORD PTR [rax+0x120]
  405ccb:	jle    405cdd <flatcc_builder_start_buffer@@Base+0x1dd>
  405cd1:	mov    DWORD PTR [rbp-0x4],0xffffffff
  405cd8:	jmp    405e28 <flatcc_builder_start_buffer@@Base+0x328>
  405cdd:	mov    eax,0x24
  405ce2:	mov    ecx,eax
  405ce4:	xor    r8d,r8d
  405ce7:	mov    rdi,QWORD PTR [rbp-0x10]
  405ceb:	mov    rdx,QWORD PTR [rbp-0x10]
  405cef:	mov    eax,DWORD PTR [rdx+0x104]
  405cf5:	sub    eax,0x1
  405cf8:	movsxd rdx,eax
  405cfb:	imul   rdx,rdx,0x24
  405cff:	mov    esi,0x4
  405d04:	call   404cf0 <flatcc_builder_enter_user_frame_ptr@@Base+0xe0>
  405d09:	mov    rcx,QWORD PTR [rbp-0x10]
  405d0d:	mov    QWORD PTR [rcx+0x30],rax
  405d11:	cmp    rax,0x0
  405d15:	jne    405d27 <flatcc_builder_start_buffer@@Base+0x227>
  405d1b:	mov    DWORD PTR [rbp-0x4],0xffffffff
  405d22:	jmp    405e28 <flatcc_builder_start_buffer@@Base+0x328>
  405d27:	mov    eax,0x24
  405d2c:	mov    ecx,eax
  405d2e:	mov    rdx,QWORD PTR [rbp-0x10]
  405d32:	mov    rax,QWORD PTR [rdx+0xa0]
  405d39:	xor    esi,esi
  405d3b:	mov    edx,esi
  405d3d:	div    rcx
  405d40:	mov    esi,eax
  405d42:	mov    rax,QWORD PTR [rbp-0x10]
  405d46:	mov    DWORD PTR [rax+0x108],esi
  405d4c:	mov    rax,QWORD PTR [rbp-0x10]
  405d50:	cmp    DWORD PTR [rax+0x120],0x0
  405d57:	jle    405d8b <flatcc_builder_start_buffer@@Base+0x28b>
  405d5d:	mov    rax,QWORD PTR [rbp-0x10]
  405d61:	mov    ecx,DWORD PTR [rax+0x120]
  405d67:	mov    rax,QWORD PTR [rbp-0x10]
  405d6b:	cmp    ecx,DWORD PTR [rax+0x108]
  405d71:	jge    405d8b <flatcc_builder_start_buffer@@Base+0x28b>
  405d77:	mov    rax,QWORD PTR [rbp-0x10]
  405d7b:	mov    ecx,DWORD PTR [rax+0x120]
  405d81:	mov    rax,QWORD PTR [rbp-0x10]
  405d85:	mov    DWORD PTR [rax+0x108],ecx
  405d8b:	jmp    405da0 <flatcc_builder_start_buffer@@Base+0x2a0>
  405d90:	mov    rax,QWORD PTR [rbp-0x10]
  405d94:	mov    rcx,QWORD PTR [rax+0x30]
  405d98:	add    rcx,0x24
  405d9c:	mov    QWORD PTR [rax+0x30],rcx
  405da0:	mov    rax,QWORD PTR [rbp-0x10]
  405da4:	mov    ecx,DWORD PTR [rax+0x20]
  405da7:	mov    rax,QWORD PTR [rbp-0x10]
  405dab:	mov    rax,QWORD PTR [rax+0x30]
  405daf:	mov    DWORD PTR [rax+0x8],ecx
  405db2:	mov    rax,QWORD PTR [rbp-0x10]
  405db6:	mov    dx,WORD PTR [rax+0xea]
  405dbd:	mov    rax,QWORD PTR [rbp-0x10]
  405dc1:	mov    rax,QWORD PTR [rax+0x30]
  405dc5:	mov    WORD PTR [rax+0xc],dx
  405dc9:	mov    dx,WORD PTR [rbp-0x12]
  405dcd:	mov    rax,QWORD PTR [rbp-0x10]
  405dd1:	mov    WORD PTR [rax+0xea],dx
  405dd8:	mov    rax,QWORD PTR [rbp-0x10]
  405ddc:	mov    ecx,DWORD PTR [rax+0x28]
  405ddf:	mov    rax,QWORD PTR [rbp-0x10]
  405de3:	mov    rax,QWORD PTR [rax+0x30]
  405de7:	mov    DWORD PTR [rax],ecx
  405de9:	mov    rax,QWORD PTR [rbp-0x10]
  405ded:	mov    rax,QWORD PTR [rax+0x30]
  405df1:	mov    DWORD PTR [rax+0x4],0xfffffffc
  405df8:	mov    rax,QWORD PTR [rbp-0x10]
  405dfc:	mov    ecx,DWORD PTR [rax+0x28]
  405dff:	mov    rax,QWORD PTR [rbp-0x10]
  405e03:	add    ecx,DWORD PTR [rax+0x20]
  405e06:	add    ecx,0x8
  405e09:	sub    ecx,0x1
  405e0c:	and    ecx,0xfffffff8
  405e0f:	mov    rax,QWORD PTR [rbp-0x10]
  405e13:	mov    DWORD PTR [rax+0x28],ecx
  405e16:	mov    rax,QWORD PTR [rbp-0x10]
  405e1a:	mov    DWORD PTR [rax+0x20],0x0
  405e21:	mov    DWORD PTR [rbp-0x4],0x0
  405e28:	mov    eax,DWORD PTR [rbp-0x4]
  405e2b:	add    rsp,0x20
  405e2f:	pop    rbp
  405e30:	ret    
  405e31:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405e3b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000405e40 <flatcc_builder_end_buffer@@Base>:
  405e40:	push   rbp
  405e41:	mov    rbp,rsp
  405e44:	sub    rsp,0x20
  405e48:	xor    eax,eax
  405e4a:	mov    QWORD PTR [rbp-0x10],rdi
  405e4e:	mov    DWORD PTR [rbp-0x14],esi
  405e51:	mov    rdi,QWORD PTR [rbp-0x10]
  405e55:	movzx  esi,WORD PTR [rdi+0x10c]
  405e5c:	and    esi,0x2
  405e5f:	mov    DWORD PTR [rbp-0x1c],esi
  405e62:	mov    rdi,QWORD PTR [rbp-0x10]
  405e66:	mov    esi,DWORD PTR [rdi+0x100]
  405e6c:	cmp    esi,0x0
  405e6f:	mov    esi,0x1
  405e74:	cmove  esi,eax
  405e77:	or     esi,DWORD PTR [rbp-0x1c]
  405e7a:	mov    DWORD PTR [rbp-0x1c],esi
  405e7d:	mov    rdi,QWORD PTR [rbp-0x10]
  405e81:	mov    rdi,QWORD PTR [rdi+0x30]
  405e85:	movzx  eax,WORD PTR [rdi+0xe]
  405e89:	cmp    eax,0x1
  405e8c:	jne    405e97 <flatcc_builder_end_buffer@@Base+0x57>
  405e92:	jmp    405eb6 <flatcc_builder_end_buffer@@Base+0x76>
  405e97:	lea    rdi,[rip+0x878d]        # 40e62b <flatcc_builder_padding_base@@Base+0x45b>
  405e9e:	lea    rsi,[rip+0x853d]        # 40e3e2 <flatcc_builder_padding_base@@Base+0x212>
  405ea5:	mov    edx,0x346
  405eaa:	lea    rcx,[rip+0x87a6]        # 40e657 <flatcc_builder_padding_base@@Base+0x487>
  405eb1:	call   403060 <__assert_fail@plt>
  405eb6:	mov    rdi,QWORD PTR [rbp-0x10]
  405eba:	mov    rax,QWORD PTR [rbp-0x10]
  405ebe:	movzx  esi,WORD PTR [rax+0xec]
  405ec5:	call   405930 <flatcc_builder_create_buffer@@Base+0x410>
  405eca:	mov    rdi,QWORD PTR [rbp-0x10]
  405ece:	mov    rax,QWORD PTR [rbp-0x10]
  405ed2:	add    rax,0x110
  405ed8:	mov    rcx,QWORD PTR [rbp-0x10]
  405edc:	mov    dx,WORD PTR [rcx+0xec]
  405ee3:	mov    ecx,DWORD PTR [rbp-0x14]
  405ee6:	mov    r8,QWORD PTR [rbp-0x10]
  405eea:	mov    r9w,WORD PTR [r8+0xe8]
  405ef2:	mov    esi,DWORD PTR [rbp-0x1c]
  405ef5:	mov    DWORD PTR [rbp-0x20],esi
  405ef8:	mov    rsi,rax
  405efb:	movzx  edx,dx
  405efe:	movzx  r8d,r9w
  405f02:	mov    r9d,DWORD PTR [rbp-0x20]
  405f06:	call   405520 <flatcc_builder_create_buffer@@Base>
  405f0b:	xor    ecx,ecx
  405f0d:	mov    DWORD PTR [rbp-0x18],eax
  405f10:	cmp    ecx,eax
  405f12:	jne    405f24 <flatcc_builder_end_buffer@@Base+0xe4>
  405f18:	mov    DWORD PTR [rbp-0x4],0x0
  405f1f:	jmp    405f89 <flatcc_builder_end_buffer@@Base+0x149>
  405f24:	mov    rax,QWORD PTR [rbp-0x10]
  405f28:	mov    rax,QWORD PTR [rax+0x30]
  405f2c:	mov    ecx,DWORD PTR [rax+0x14]
  405f2f:	mov    rax,QWORD PTR [rbp-0x10]
  405f33:	mov    DWORD PTR [rax+0xf8],ecx
  405f39:	mov    rax,QWORD PTR [rbp-0x10]
  405f3d:	mov    rax,QWORD PTR [rax+0x30]
  405f41:	mov    ecx,DWORD PTR [rax+0x1c]
  405f44:	mov    rax,QWORD PTR [rbp-0x10]
  405f48:	mov    DWORD PTR [rax+0x100],ecx
  405f4e:	mov    rax,QWORD PTR [rbp-0x10]
  405f52:	mov    rax,QWORD PTR [rax+0x30]
  405f56:	mov    ecx,DWORD PTR [rax+0x10]
  405f59:	mov    rax,QWORD PTR [rbp-0x10]
  405f5d:	mov    DWORD PTR [rax+0x110],ecx
  405f63:	mov    rax,QWORD PTR [rbp-0x10]
  405f67:	mov    rax,QWORD PTR [rax+0x30]
  405f6b:	mov    dx,WORD PTR [rax+0x20]
  405f6f:	mov    rax,QWORD PTR [rbp-0x10]
  405f73:	mov    WORD PTR [rax+0x10c],dx
  405f7a:	mov    rdi,QWORD PTR [rbp-0x10]
  405f7e:	call   405fa0 <flatcc_builder_end_buffer@@Base+0x160>
  405f83:	mov    ecx,DWORD PTR [rbp-0x18]
  405f86:	mov    DWORD PTR [rbp-0x4],ecx
  405f89:	mov    eax,DWORD PTR [rbp-0x4]
  405f8c:	add    rsp,0x20
  405f90:	pop    rbp
  405f91:	ret    
  405f92:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405f9c:	nop    DWORD PTR [rax+0x0]
  405fa0:	push   rbp
  405fa1:	mov    rbp,rsp
  405fa4:	sub    rsp,0x10
  405fa8:	xor    esi,esi
  405faa:	mov    QWORD PTR [rbp-0x8],rdi
  405fae:	mov    rdi,QWORD PTR [rbp-0x8]
  405fb2:	mov    rdi,QWORD PTR [rdi+0x18]
  405fb6:	mov    rax,QWORD PTR [rbp-0x8]
  405fba:	mov    ecx,DWORD PTR [rax+0x20]
  405fbd:	mov    edx,ecx
  405fbf:	call   403070 <memset@plt>
  405fc4:	mov    rax,QWORD PTR [rbp-0x8]
  405fc8:	mov    rax,QWORD PTR [rax+0x30]
  405fcc:	mov    ecx,DWORD PTR [rax+0x8]
  405fcf:	mov    rax,QWORD PTR [rbp-0x8]
  405fd3:	mov    DWORD PTR [rax+0x20],ecx
  405fd6:	mov    rax,QWORD PTR [rbp-0x8]
  405fda:	mov    rax,QWORD PTR [rax+0x30]
  405fde:	mov    ecx,DWORD PTR [rax]
  405fe0:	mov    rax,QWORD PTR [rbp-0x8]
  405fe4:	mov    DWORD PTR [rax+0x28],ecx
  405fe7:	mov    rdi,QWORD PTR [rbp-0x8]
  405feb:	mov    rax,QWORD PTR [rbp-0x8]
  405fef:	mov    rax,QWORD PTR [rax+0x30]
  405ff3:	mov    esi,DWORD PTR [rax+0x4]
  405ff6:	call   4060e0 <flatcc_builder_start_struct@@Base+0x80>
  405ffb:	mov    rdi,QWORD PTR [rbp-0x8]
  405fff:	mov    rax,QWORD PTR [rbp-0x8]
  406003:	movzx  esi,WORD PTR [rax+0xea]
  40600a:	call   405930 <flatcc_builder_create_buffer@@Base+0x410>
  40600f:	mov    rax,QWORD PTR [rbp-0x8]
  406013:	mov    rax,QWORD PTR [rax+0x30]
  406017:	mov    r8w,WORD PTR [rax+0xc]
  40601c:	mov    rax,QWORD PTR [rbp-0x8]
  406020:	mov    WORD PTR [rax+0xea],r8w
  406028:	mov    rax,QWORD PTR [rbp-0x8]
  40602c:	mov    rdx,QWORD PTR [rax+0x30]
  406030:	add    rdx,0xffffffffffffffdc
  406034:	mov    QWORD PTR [rax+0x30],rdx
  406038:	mov    rax,QWORD PTR [rbp-0x8]
  40603c:	mov    ecx,DWORD PTR [rax+0x104]
  406042:	add    ecx,0xffffffff
  406045:	mov    DWORD PTR [rax+0x104],ecx
  40604b:	add    rsp,0x10
  40604f:	pop    rbp
  406050:	ret    
  406051:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40605b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000406060 <flatcc_builder_start_struct@@Base>:
  406060:	push   rbp
  406061:	mov    rbp,rsp
  406064:	sub    rsp,0x20
  406068:	mov    ax,dx
  40606b:	mov    QWORD PTR [rbp-0x10],rdi
  40606f:	mov    QWORD PTR [rbp-0x18],rsi
  406073:	mov    WORD PTR [rbp-0x1a],ax
  406077:	mov    rdi,QWORD PTR [rbp-0x10]
  40607b:	movzx  esi,WORD PTR [rbp-0x1a]
  40607f:	call   405c70 <flatcc_builder_start_buffer@@Base+0x170>
  406084:	cmp    eax,0x0
  406087:	je     40609a <flatcc_builder_start_struct@@Base+0x3a>
  40608d:	mov    QWORD PTR [rbp-0x8],0x0
  406095:	jmp    4060c9 <flatcc_builder_start_struct@@Base+0x69>
  40609a:	mov    rax,QWORD PTR [rbp-0x10]
  40609e:	mov    rax,QWORD PTR [rax+0x30]
  4060a2:	mov    WORD PTR [rax+0xe],0x2
  4060a8:	mov    rdi,QWORD PTR [rbp-0x10]
  4060ac:	mov    esi,0xfffffffc
  4060b1:	call   4060e0 <flatcc_builder_start_struct@@Base+0x80>
  4060b6:	mov    rdi,QWORD PTR [rbp-0x10]
  4060ba:	mov    rax,QWORD PTR [rbp-0x18]
  4060be:	mov    esi,eax
  4060c0:	call   406160 <flatcc_builder_start_struct@@Base+0x100>
  4060c5:	mov    QWORD PTR [rbp-0x8],rax
  4060c9:	mov    rax,QWORD PTR [rbp-0x8]
  4060cd:	add    rsp,0x20
  4060d1:	pop    rbp
  4060d2:	ret    
  4060d3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4060dd:	nop    DWORD PTR [rax]
  4060e0:	push   rbp
  4060e1:	mov    rbp,rsp
  4060e4:	mov    QWORD PTR [rbp-0x8],rdi
  4060e8:	mov    DWORD PTR [rbp-0xc],esi
  4060eb:	mov    rdi,QWORD PTR [rbp-0x8]
  4060ef:	add    rdi,0x58
  4060f3:	add    rdi,0x10
  4060f7:	mov    QWORD PTR [rbp-0x18],rdi
  4060fb:	mov    rdi,QWORD PTR [rbp-0x8]
  4060ff:	mov    rdi,QWORD PTR [rdi+0x68]
  406103:	mov    rax,QWORD PTR [rbp-0x8]
  406107:	mov    esi,DWORD PTR [rax+0x28]
  40610a:	mov    eax,esi
  40610c:	add    rdi,rax
  40610f:	mov    rax,QWORD PTR [rbp-0x8]
  406113:	mov    QWORD PTR [rax+0x18],rdi
  406117:	mov    rax,QWORD PTR [rbp-0x18]
  40611b:	mov    rax,QWORD PTR [rax+0x8]
  40611f:	mov    esi,eax
  406121:	mov    rax,QWORD PTR [rbp-0x8]
  406125:	sub    esi,DWORD PTR [rax+0x28]
  406128:	mov    rax,QWORD PTR [rbp-0x8]
  40612c:	mov    DWORD PTR [rax+0x24],esi
  40612f:	mov    rax,QWORD PTR [rbp-0x8]
  406133:	mov    esi,DWORD PTR [rax+0x24]
  406136:	cmp    esi,DWORD PTR [rbp-0xc]
  406139:	jbe    406149 <flatcc_builder_start_struct@@Base+0xe9>
  40613f:	mov    eax,DWORD PTR [rbp-0xc]
  406142:	mov    rcx,QWORD PTR [rbp-0x8]
  406146:	mov    DWORD PTR [rcx+0x24],eax
  406149:	mov    eax,DWORD PTR [rbp-0xc]
  40614c:	mov    rcx,QWORD PTR [rbp-0x8]
  406150:	mov    rcx,QWORD PTR [rcx+0x30]
  406154:	mov    DWORD PTR [rcx+0x4],eax
  406157:	pop    rbp
  406158:	ret    
  406159:	nop    DWORD PTR [rax+0x0]
  406160:	push   rbp
  406161:	mov    rbp,rsp
  406164:	sub    rsp,0x20
  406168:	mov    QWORD PTR [rbp-0x10],rdi
  40616c:	mov    DWORD PTR [rbp-0x14],esi
  40616f:	mov    rdi,QWORD PTR [rbp-0x10]
  406173:	mov    esi,DWORD PTR [rdi+0x20]
  406176:	mov    edi,esi
  406178:	mov    QWORD PTR [rbp-0x20],rdi
  40617c:	mov    esi,DWORD PTR [rbp-0x14]
  40617f:	mov    rdi,QWORD PTR [rbp-0x10]
  406183:	add    esi,DWORD PTR [rdi+0x20]
  406186:	mov    DWORD PTR [rdi+0x20],esi
  406189:	mov    rdi,QWORD PTR [rbp-0x10]
  40618d:	cmp    esi,DWORD PTR [rdi+0x24]
  406190:	jb     4061cd <flatcc_builder_start_struct@@Base+0x16d>
  406196:	mov    rdi,QWORD PTR [rbp-0x10]
  40619a:	mov    rax,QWORD PTR [rbp-0x10]
  40619e:	mov    ecx,DWORD PTR [rax+0x20]
  4061a1:	add    ecx,0x1
  4061a4:	mov    ecx,ecx
  4061a6:	mov    esi,ecx
  4061a8:	mov    edx,0xfffffffc
  4061ad:	call   40a180 <flatcc_builder_get_emit_context@@Base+0x50>
  4061b2:	cmp    eax,0x0
  4061b5:	je     4061c8 <flatcc_builder_start_struct@@Base+0x168>
  4061bb:	mov    QWORD PTR [rbp-0x8],0x0
  4061c3:	jmp    4061dd <flatcc_builder_start_struct@@Base+0x17d>
  4061c8:	jmp    4061cd <flatcc_builder_start_struct@@Base+0x16d>
  4061cd:	mov    rax,QWORD PTR [rbp-0x10]
  4061d1:	mov    rax,QWORD PTR [rax+0x18]
  4061d5:	add    rax,QWORD PTR [rbp-0x20]
  4061d9:	mov    QWORD PTR [rbp-0x8],rax
  4061dd:	mov    rax,QWORD PTR [rbp-0x8]
  4061e1:	add    rsp,0x20
  4061e5:	pop    rbp
  4061e6:	ret    
  4061e7:	nop    WORD PTR [rax+rax*1+0x0]

00000000004061f0 <flatcc_builder_struct_edit@@Base>:
  4061f0:	push   rbp
  4061f1:	mov    rbp,rsp
  4061f4:	mov    QWORD PTR [rbp-0x8],rdi
  4061f8:	mov    rdi,QWORD PTR [rbp-0x8]
  4061fc:	mov    rax,QWORD PTR [rdi+0x18]
  406200:	pop    rbp
  406201:	ret    
  406202:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40620c:	nop    DWORD PTR [rax+0x0]

0000000000406210 <flatcc_builder_end_struct@@Base>:
  406210:	push   rbp
  406211:	mov    rbp,rsp
  406214:	sub    rsp,0x20
  406218:	mov    QWORD PTR [rbp-0x10],rdi
  40621c:	mov    rdi,QWORD PTR [rbp-0x10]
  406220:	mov    rdi,QWORD PTR [rdi+0x30]
  406224:	movzx  eax,WORD PTR [rdi+0xe]
  406228:	cmp    eax,0x2
  40622b:	jne    406236 <flatcc_builder_end_struct@@Base+0x26>
  406231:	jmp    406255 <flatcc_builder_end_struct@@Base+0x45>
  406236:	lea    rdi,[rip+0x8473]        # 40e6b0 <flatcc_builder_padding_base@@Base+0x4e0>
  40623d:	lea    rsi,[rip+0x819e]        # 40e3e2 <flatcc_builder_padding_base@@Base+0x212>
  406244:	mov    edx,0x368
  406249:	lea    rcx,[rip+0x848c]        # 40e6dc <flatcc_builder_padding_base@@Base+0x50c>
  406250:	call   403060 <__assert_fail@plt>
  406255:	mov    rdi,QWORD PTR [rbp-0x10]
  406259:	mov    rax,QWORD PTR [rbp-0x10]
  40625d:	mov    rsi,QWORD PTR [rax+0x18]
  406261:	mov    rax,QWORD PTR [rbp-0x10]
  406265:	mov    ecx,DWORD PTR [rax+0x20]
  406268:	mov    edx,ecx
  40626a:	mov    rax,QWORD PTR [rbp-0x10]
  40626e:	movzx  ecx,WORD PTR [rax+0xea]
  406275:	call   405980 <flatcc_builder_create_struct@@Base>
  40627a:	xor    ecx,ecx
  40627c:	mov    DWORD PTR [rbp-0x14],eax
  40627f:	cmp    ecx,eax
  406281:	jne    406293 <flatcc_builder_end_struct@@Base+0x83>
  406287:	mov    DWORD PTR [rbp-0x4],0x0
  40628e:	jmp    4062a2 <flatcc_builder_end_struct@@Base+0x92>
  406293:	mov    rdi,QWORD PTR [rbp-0x10]
  406297:	call   405fa0 <flatcc_builder_end_buffer@@Base+0x160>
  40629c:	mov    eax,DWORD PTR [rbp-0x14]
  40629f:	mov    DWORD PTR [rbp-0x4],eax
  4062a2:	mov    eax,DWORD PTR [rbp-0x4]
  4062a5:	add    rsp,0x20
  4062a9:	pop    rbp
  4062aa:	ret    
  4062ab:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004062b0 <flatcc_builder_extend_vector@@Base>:
  4062b0:	push   rbp
  4062b1:	mov    rbp,rsp
  4062b4:	sub    rsp,0x20
  4062b8:	mov    QWORD PTR [rbp-0x10],rdi
  4062bc:	mov    QWORD PTR [rbp-0x18],rsi
  4062c0:	mov    rdi,QWORD PTR [rbp-0x10]
  4062c4:	mov    rsi,QWORD PTR [rbp-0x18]
  4062c8:	mov    eax,esi
  4062ca:	mov    rsi,QWORD PTR [rbp-0x10]
  4062ce:	mov    rsi,QWORD PTR [rsi+0x30]
  4062d2:	mov    edx,DWORD PTR [rsi+0x18]
  4062d5:	mov    esi,eax
  4062d7:	call   406320 <flatcc_builder_extend_vector@@Base+0x70>
  4062dc:	cmp    eax,0x0
  4062df:	je     4062f2 <flatcc_builder_extend_vector@@Base+0x42>
  4062e5:	mov    QWORD PTR [rbp-0x8],0x0
  4062ed:	jmp    406315 <flatcc_builder_extend_vector@@Base+0x65>
  4062f2:	mov    rdi,QWORD PTR [rbp-0x10]
  4062f6:	mov    rax,QWORD PTR [rbp-0x10]
  4062fa:	mov    rax,QWORD PTR [rax+0x30]
  4062fe:	mov    ecx,DWORD PTR [rax+0x10]
  406301:	mov    rax,QWORD PTR [rbp-0x18]
  406305:	mov    edx,eax
  406307:	imul   ecx,edx
  40630a:	mov    esi,ecx
  40630c:	call   406160 <flatcc_builder_start_struct@@Base+0x100>
  406311:	mov    QWORD PTR [rbp-0x8],rax
  406315:	mov    rax,QWORD PTR [rbp-0x8]
  406319:	add    rsp,0x20
  40631d:	pop    rbp
  40631e:	ret    
  40631f:	nop
  406320:	push   rbp
  406321:	mov    rbp,rsp
  406324:	sub    rsp,0x20
  406328:	mov    QWORD PTR [rbp-0x10],rdi
  40632c:	mov    DWORD PTR [rbp-0x14],esi
  40632f:	mov    DWORD PTR [rbp-0x18],edx
  406332:	mov    rdi,QWORD PTR [rbp-0x10]
  406336:	mov    rdi,QWORD PTR [rdi+0x30]
  40633a:	mov    edx,DWORD PTR [rdi+0x14]
  40633d:	mov    DWORD PTR [rbp-0x1c],edx
  406340:	mov    edx,DWORD PTR [rbp-0x1c]
  406343:	add    edx,DWORD PTR [rbp-0x14]
  406346:	mov    DWORD PTR [rbp-0x20],edx
  406349:	mov    edx,DWORD PTR [rbp-0x1c]
  40634c:	cmp    edx,DWORD PTR [rbp-0x20]
  40634f:	ja     406361 <flatcc_builder_extend_vector@@Base+0xb1>
  406355:	mov    eax,DWORD PTR [rbp-0x20]
  406358:	cmp    eax,DWORD PTR [rbp-0x18]
  40635b:	jbe    4063a9 <flatcc_builder_extend_vector@@Base+0xf9>
  406361:	mov    eax,DWORD PTR [rbp-0x1c]
  406364:	cmp    eax,DWORD PTR [rbp-0x20]
  406367:	ja     40637e <flatcc_builder_extend_vector@@Base+0xce>
  40636d:	mov    eax,DWORD PTR [rbp-0x20]
  406370:	cmp    eax,DWORD PTR [rbp-0x18]
  406373:	ja     40637e <flatcc_builder_extend_vector@@Base+0xce>
  406379:	jmp    40639d <flatcc_builder_extend_vector@@Base+0xed>
  40637e:	lea    rdi,[rip+0x9126]        # 40f4ab <flatcc_builder_padding_base@@Base+0x12db>
  406385:	lea    rsi,[rip+0x8056]        # 40e3e2 <flatcc_builder_padding_base@@Base+0x212>
  40638c:	mov    edx,0x37c
  406391:	lea    rcx,[rip+0x912e]        # 40f4c6 <flatcc_builder_padding_base@@Base+0x12f6>
  406398:	call   403060 <__assert_fail@plt>
  40639d:	mov    DWORD PTR [rbp-0x4],0xffffffff
  4063a4:	jmp    4063be <flatcc_builder_extend_vector@@Base+0x10e>
  4063a9:	mov    eax,DWORD PTR [rbp-0x20]
  4063ac:	mov    rcx,QWORD PTR [rbp-0x10]
  4063b0:	mov    rcx,QWORD PTR [rcx+0x30]
  4063b4:	mov    DWORD PTR [rcx+0x14],eax
  4063b7:	mov    DWORD PTR [rbp-0x4],0x0
  4063be:	mov    eax,DWORD PTR [rbp-0x4]
  4063c1:	add    rsp,0x20
  4063c5:	pop    rbp
  4063c6:	ret    
  4063c7:	nop    WORD PTR [rax+rax*1+0x0]

00000000004063d0 <flatcc_builder_vector_push@@Base>:
  4063d0:	push   rbp
  4063d1:	mov    rbp,rsp
  4063d4:	sub    rsp,0x20
  4063d8:	mov    QWORD PTR [rbp-0x10],rdi
  4063dc:	mov    QWORD PTR [rbp-0x18],rsi
  4063e0:	mov    rsi,QWORD PTR [rbp-0x10]
  4063e4:	mov    rsi,QWORD PTR [rsi+0x30]
  4063e8:	movzx  eax,WORD PTR [rsi+0xe]
  4063ec:	cmp    eax,0x4
  4063ef:	jne    4063fa <flatcc_builder_vector_push@@Base+0x2a>
  4063f5:	jmp    406419 <flatcc_builder_vector_push@@Base+0x49>
  4063fa:	lea    rdi,[rip+0x831e]        # 40e71f <flatcc_builder_padding_base@@Base+0x54f>
  406401:	lea    rsi,[rip+0x7fda]        # 40e3e2 <flatcc_builder_padding_base@@Base+0x212>
  406408:	mov    edx,0x38b
  40640d:	lea    rcx,[rip+0x8337]        # 40e74b <flatcc_builder_padding_base@@Base+0x57b>
  406414:	call   403060 <__assert_fail@plt>
  406419:	mov    rax,QWORD PTR [rbp-0x10]
  40641d:	mov    rax,QWORD PTR [rax+0x30]
  406421:	mov    ecx,DWORD PTR [rax+0x14]
  406424:	mov    rax,QWORD PTR [rbp-0x10]
  406428:	mov    rax,QWORD PTR [rax+0x30]
  40642c:	cmp    ecx,DWORD PTR [rax+0x18]
  40642f:	jbe    406482 <flatcc_builder_vector_push@@Base+0xb2>
  406435:	mov    rax,QWORD PTR [rbp-0x10]
  406439:	mov    rax,QWORD PTR [rax+0x30]
  40643d:	mov    ecx,DWORD PTR [rax+0x14]
  406440:	mov    rax,QWORD PTR [rbp-0x10]
  406444:	mov    rax,QWORD PTR [rax+0x30]
  406448:	cmp    ecx,DWORD PTR [rax+0x18]
  40644b:	ja     406456 <flatcc_builder_vector_push@@Base+0x86>
  406451:	jmp    406475 <flatcc_builder_vector_push@@Base+0xa5>
  406456:	lea    rdi,[rip+0x8331]        # 40e78e <flatcc_builder_padding_base@@Base+0x5be>
  40645d:	lea    rsi,[rip+0x7f7e]        # 40e3e2 <flatcc_builder_padding_base@@Base+0x212>
  406464:	mov    edx,0x38c
  406469:	lea    rcx,[rip+0x82db]        # 40e74b <flatcc_builder_padding_base@@Base+0x57b>
  406470:	call   403060 <__assert_fail@plt>
  406475:	mov    QWORD PTR [rbp-0x8],0x0
  40647d:	jmp    4064af <flatcc_builder_vector_push@@Base+0xdf>
  406482:	mov    rax,QWORD PTR [rbp-0x10]
  406486:	mov    rax,QWORD PTR [rax+0x30]
  40648a:	mov    ecx,DWORD PTR [rax+0x14]
  40648d:	add    ecx,0x1
  406490:	mov    DWORD PTR [rax+0x14],ecx
  406493:	mov    rdi,QWORD PTR [rbp-0x10]
  406497:	mov    rsi,QWORD PTR [rbp-0x18]
  40649b:	mov    rax,QWORD PTR [rbp-0x10]
  40649f:	mov    rax,QWORD PTR [rax+0x30]
  4064a3:	mov    edx,DWORD PTR [rax+0x10]
  4064a6:	call   4064c0 <flatcc_builder_vector_push@@Base+0xf0>
  4064ab:	mov    QWORD PTR [rbp-0x8],rax
  4064af:	mov    rax,QWORD PTR [rbp-0x8]
  4064b3:	add    rsp,0x20
  4064b7:	pop    rbp
  4064b8:	ret    
  4064b9:	nop    DWORD PTR [rax+0x0]
  4064c0:	push   rbp
  4064c1:	mov    rbp,rsp
  4064c4:	sub    rsp,0x30
  4064c8:	mov    QWORD PTR [rbp-0x10],rdi
  4064cc:	mov    QWORD PTR [rbp-0x18],rsi
  4064d0:	mov    DWORD PTR [rbp-0x1c],edx
  4064d3:	mov    rdi,QWORD PTR [rbp-0x10]
  4064d7:	mov    esi,DWORD PTR [rbp-0x1c]
  4064da:	call   406160 <flatcc_builder_start_struct@@Base+0x100>
  4064df:	mov    QWORD PTR [rbp-0x28],rax
  4064e3:	cmp    rax,0x0
  4064e7:	jne    4064fa <flatcc_builder_vector_push@@Base+0x12a>
  4064ed:	mov    QWORD PTR [rbp-0x8],0x0
  4064f5:	jmp    406514 <flatcc_builder_vector_push@@Base+0x144>
  4064fa:	mov    rdi,QWORD PTR [rbp-0x28]
  4064fe:	mov    rsi,QWORD PTR [rbp-0x18]
  406502:	mov    eax,DWORD PTR [rbp-0x1c]
  406505:	mov    edx,eax
  406507:	call   4030a0 <memcpy@plt>
  40650c:	mov    rdx,QWORD PTR [rbp-0x28]
  406510:	mov    QWORD PTR [rbp-0x8],rdx
  406514:	mov    rax,QWORD PTR [rbp-0x8]
  406518:	add    rsp,0x30
  40651c:	pop    rbp
  40651d:	ret    
  40651e:	xchg   ax,ax

0000000000406520 <flatcc_builder_append_vector@@Base>:
  406520:	push   rbp
  406521:	mov    rbp,rsp
  406524:	sub    rsp,0x20
  406528:	mov    QWORD PTR [rbp-0x10],rdi
  40652c:	mov    QWORD PTR [rbp-0x18],rsi
  406530:	mov    QWORD PTR [rbp-0x20],rdx
  406534:	mov    rdx,QWORD PTR [rbp-0x10]
  406538:	mov    rdx,QWORD PTR [rdx+0x30]
  40653c:	movzx  eax,WORD PTR [rdx+0xe]
  406540:	cmp    eax,0x4
  406543:	jne    40654e <flatcc_builder_append_vector@@Base+0x2e>
  406549:	jmp    40656d <flatcc_builder_append_vector@@Base+0x4d>
  40654e:	lea    rdi,[rip+0x81ca]        # 40e71f <flatcc_builder_padding_base@@Base+0x54f>
  406555:	lea    rsi,[rip+0x7e86]        # 40e3e2 <flatcc_builder_padding_base@@Base+0x212>
  40655c:	mov    edx,0x393
  406561:	lea    rcx,[rip+0x8263]        # 40e7cb <flatcc_builder_padding_base@@Base+0x5fb>
  406568:	call   403060 <__assert_fail@plt>
  40656d:	mov    rdi,QWORD PTR [rbp-0x10]
  406571:	mov    rax,QWORD PTR [rbp-0x20]
  406575:	mov    ecx,eax
  406577:	mov    rax,QWORD PTR [rbp-0x10]
  40657b:	mov    rax,QWORD PTR [rax+0x30]
  40657f:	mov    edx,DWORD PTR [rax+0x18]
  406582:	mov    esi,ecx
  406584:	call   406320 <flatcc_builder_extend_vector@@Base+0x70>
  406589:	cmp    eax,0x0
  40658c:	je     40659f <flatcc_builder_append_vector@@Base+0x7f>
  406592:	mov    QWORD PTR [rbp-0x8],0x0
  40659a:	jmp    4065c6 <flatcc_builder_append_vector@@Base+0xa6>
  40659f:	mov    rdi,QWORD PTR [rbp-0x10]
  4065a3:	mov    rsi,QWORD PTR [rbp-0x18]
  4065a7:	mov    rax,QWORD PTR [rbp-0x10]
  4065ab:	mov    rax,QWORD PTR [rax+0x30]
  4065af:	mov    ecx,DWORD PTR [rax+0x10]
  4065b2:	mov    rax,QWORD PTR [rbp-0x20]
  4065b6:	mov    edx,eax
  4065b8:	imul   ecx,edx
  4065bb:	mov    edx,ecx
  4065bd:	call   4064c0 <flatcc_builder_vector_push@@Base+0xf0>
  4065c2:	mov    QWORD PTR [rbp-0x8],rax
  4065c6:	mov    rax,QWORD PTR [rbp-0x8]
  4065ca:	add    rsp,0x20
  4065ce:	pop    rbp
  4065cf:	ret    

00000000004065d0 <flatcc_builder_extend_offset_vector@@Base>:
  4065d0:	push   rbp
  4065d1:	mov    rbp,rsp
  4065d4:	sub    rsp,0x20
  4065d8:	mov    QWORD PTR [rbp-0x10],rdi
  4065dc:	mov    QWORD PTR [rbp-0x18],rsi
  4065e0:	mov    rdi,QWORD PTR [rbp-0x10]
  4065e4:	mov    rsi,QWORD PTR [rbp-0x18]
  4065e8:	mov    eax,esi
  4065ea:	mov    esi,eax
  4065ec:	mov    edx,0x3fffffff
  4065f1:	call   406320 <flatcc_builder_extend_vector@@Base+0x70>
  4065f6:	cmp    eax,0x0
  4065f9:	je     40660c <flatcc_builder_extend_offset_vector@@Base+0x3c>
  4065ff:	mov    QWORD PTR [rbp-0x8],0x0
  406607:	jmp    40662b <flatcc_builder_extend_offset_vector@@Base+0x5b>
  40660c:	mov    rdi,QWORD PTR [rbp-0x10]
  406610:	mov    rax,QWORD PTR [rbp-0x18]
  406614:	mov    ecx,eax
  406616:	mov    ecx,ecx
  406618:	mov    eax,ecx
  40661a:	shl    rax,0x2
  40661e:	mov    ecx,eax
  406620:	mov    esi,ecx
  406622:	call   406160 <flatcc_builder_start_struct@@Base+0x100>
  406627:	mov    QWORD PTR [rbp-0x8],rax
  40662b:	mov    rax,QWORD PTR [rbp-0x8]
  40662f:	add    rsp,0x20
  406633:	pop    rbp
  406634:	ret    
  406635:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40663f:	nop

0000000000406640 <flatcc_builder_offset_vector_push@@Base>:
  406640:	push   rbp
  406641:	mov    rbp,rsp
  406644:	sub    rsp,0x20
  406648:	mov    QWORD PTR [rbp-0x10],rdi
  40664c:	mov    DWORD PTR [rbp-0x14],esi
  40664f:	mov    rdi,QWORD PTR [rbp-0x10]
  406653:	mov    rdi,QWORD PTR [rdi+0x30]
  406657:	movzx  esi,WORD PTR [rdi+0xe]
  40665b:	cmp    esi,0x5
  40665e:	jne    406669 <flatcc_builder_offset_vector_push@@Base+0x29>
  406664:	jmp    406688 <flatcc_builder_offset_vector_push@@Base+0x48>
  406669:	lea    rdi,[rip+0x81a8]        # 40e818 <flatcc_builder_padding_base@@Base+0x648>
  406670:	lea    rsi,[rip+0x7d6b]        # 40e3e2 <flatcc_builder_padding_base@@Base+0x212>
  406677:	mov    edx,0x3a6
  40667c:	lea    rcx,[rip+0x81c8]        # 40e84b <flatcc_builder_padding_base@@Base+0x67b>
  406683:	call   403060 <__assert_fail@plt>
  406688:	mov    rax,QWORD PTR [rbp-0x10]
  40668c:	mov    rax,QWORD PTR [rax+0x30]
  406690:	mov    ecx,DWORD PTR [rax+0x14]
  406693:	mov    eax,ecx
  406695:	cmp    rax,0x3fffffff
  40669b:	jne    4066ae <flatcc_builder_offset_vector_push@@Base+0x6e>
  4066a1:	mov    QWORD PTR [rbp-0x8],0x0
  4066a9:	jmp    4066fc <flatcc_builder_offset_vector_push@@Base+0xbc>
  4066ae:	mov    rax,QWORD PTR [rbp-0x10]
  4066b2:	mov    rax,QWORD PTR [rax+0x30]
  4066b6:	mov    ecx,DWORD PTR [rax+0x14]
  4066b9:	add    ecx,0x1
  4066bc:	mov    DWORD PTR [rax+0x14],ecx
  4066bf:	mov    rdi,QWORD PTR [rbp-0x10]
  4066c3:	mov    esi,0x4
  4066c8:	call   406160 <flatcc_builder_start_struct@@Base+0x100>
  4066cd:	xor    ecx,ecx
  4066cf:	mov    edi,ecx
  4066d1:	mov    QWORD PTR [rbp-0x20],rax
  4066d5:	cmp    rdi,rax
  4066d8:	jne    4066eb <flatcc_builder_offset_vector_push@@Base+0xab>
  4066de:	mov    QWORD PTR [rbp-0x8],0x0
  4066e6:	jmp    4066fc <flatcc_builder_offset_vector_push@@Base+0xbc>
  4066eb:	mov    eax,DWORD PTR [rbp-0x14]
  4066ee:	mov    rcx,QWORD PTR [rbp-0x20]
  4066f2:	mov    DWORD PTR [rcx],eax
  4066f4:	mov    rcx,QWORD PTR [rbp-0x20]
  4066f8:	mov    QWORD PTR [rbp-0x8],rcx
  4066fc:	mov    rax,QWORD PTR [rbp-0x8]
  406700:	add    rsp,0x20
  406704:	pop    rbp
  406705:	ret    
  406706:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000406710 <flatcc_builder_append_offset_vector@@Base>:
  406710:	push   rbp
  406711:	mov    rbp,rsp
  406714:	sub    rsp,0x20
  406718:	mov    QWORD PTR [rbp-0x10],rdi
  40671c:	mov    QWORD PTR [rbp-0x18],rsi
  406720:	mov    QWORD PTR [rbp-0x20],rdx
  406724:	mov    rdx,QWORD PTR [rbp-0x10]
  406728:	mov    rdx,QWORD PTR [rdx+0x30]
  40672c:	movzx  eax,WORD PTR [rdx+0xe]
  406730:	cmp    eax,0x5
  406733:	jne    40673e <flatcc_builder_append_offset_vector@@Base+0x2e>
  406739:	jmp    40675d <flatcc_builder_append_offset_vector@@Base+0x4d>
  40673e:	lea    rdi,[rip+0x80d3]        # 40e818 <flatcc_builder_padding_base@@Base+0x648>
  406745:	lea    rsi,[rip+0x7c96]        # 40e3e2 <flatcc_builder_padding_base@@Base+0x212>
  40674c:	mov    edx,0x3b4
  406751:	lea    rcx,[rip+0x8155]        # 40e8ad <flatcc_builder_padding_base@@Base+0x6dd>
  406758:	call   403060 <__assert_fail@plt>
  40675d:	mov    rdi,QWORD PTR [rbp-0x10]
  406761:	mov    rax,QWORD PTR [rbp-0x20]
  406765:	mov    ecx,eax
  406767:	mov    esi,ecx
  406769:	mov    edx,0x3fffffff
  40676e:	call   406320 <flatcc_builder_extend_vector@@Base+0x70>
  406773:	cmp    eax,0x0
  406776:	je     406789 <flatcc_builder_append_offset_vector@@Base+0x79>
  40677c:	mov    QWORD PTR [rbp-0x8],0x0
  406784:	jmp    4067ad <flatcc_builder_append_offset_vector@@Base+0x9d>
  406789:	mov    rdi,QWORD PTR [rbp-0x10]
  40678d:	mov    rax,QWORD PTR [rbp-0x18]
  406791:	mov    rcx,QWORD PTR [rbp-0x20]
  406795:	mov    edx,ecx
  406797:	mov    edx,edx
  406799:	mov    ecx,edx
  40679b:	shl    rcx,0x2
  40679f:	mov    edx,ecx
  4067a1:	mov    rsi,rax
  4067a4:	call   4064c0 <flatcc_builder_vector_push@@Base+0xf0>
  4067a9:	mov    QWORD PTR [rbp-0x8],rax
  4067ad:	mov    rax,QWORD PTR [rbp-0x8]
  4067b1:	add    rsp,0x20
  4067b5:	pop    rbp
  4067b6:	ret    
  4067b7:	nop    WORD PTR [rax+rax*1+0x0]

00000000004067c0 <flatcc_builder_extend_string@@Base>:
  4067c0:	push   rbp
  4067c1:	mov    rbp,rsp
  4067c4:	sub    rsp,0x20
  4067c8:	mov    QWORD PTR [rbp-0x10],rdi
  4067cc:	mov    QWORD PTR [rbp-0x18],rsi
  4067d0:	mov    rsi,QWORD PTR [rbp-0x10]
  4067d4:	mov    rsi,QWORD PTR [rsi+0x30]
  4067d8:	movzx  eax,WORD PTR [rsi+0xe]
  4067dc:	cmp    eax,0x6
  4067df:	jne    4067ea <flatcc_builder_extend_string@@Base+0x2a>
  4067e5:	jmp    406809 <flatcc_builder_extend_string@@Base+0x49>
  4067ea:	lea    rdi,[rip+0x8130]        # 40e921 <flatcc_builder_padding_base@@Base+0x751>
  4067f1:	lea    rsi,[rip+0x7bea]        # 40e3e2 <flatcc_builder_padding_base@@Base+0x212>
  4067f8:	mov    edx,0x3bd
  4067fd:	lea    rcx,[rip+0x8149]        # 40e94d <flatcc_builder_padding_base@@Base+0x77d>
  406804:	call   403060 <__assert_fail@plt>
  406809:	mov    rdi,QWORD PTR [rbp-0x10]
  40680d:	mov    rax,QWORD PTR [rbp-0x18]
  406811:	mov    ecx,eax
  406813:	mov    esi,ecx
  406815:	mov    edx,0xffffffff
  40681a:	call   406320 <flatcc_builder_extend_vector@@Base+0x70>
  40681f:	cmp    eax,0x0
  406822:	je     406835 <flatcc_builder_extend_string@@Base+0x75>
  406828:	mov    QWORD PTR [rbp-0x8],0x0
  406830:	jmp    40684a <flatcc_builder_extend_string@@Base+0x8a>
  406835:	mov    rdi,QWORD PTR [rbp-0x10]
  406839:	mov    rax,QWORD PTR [rbp-0x18]
  40683d:	mov    ecx,eax
  40683f:	mov    esi,ecx
  406841:	call   406160 <flatcc_builder_start_struct@@Base+0x100>
  406846:	mov    QWORD PTR [rbp-0x8],rax
  40684a:	mov    rax,QWORD PTR [rbp-0x8]
  40684e:	add    rsp,0x20
  406852:	pop    rbp
  406853:	ret    
  406854:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40685e:	xchg   ax,ax

0000000000406860 <flatcc_builder_append_string@@Base>:
  406860:	push   rbp
  406861:	mov    rbp,rsp
  406864:	sub    rsp,0x20
  406868:	mov    QWORD PTR [rbp-0x10],rdi
  40686c:	mov    QWORD PTR [rbp-0x18],rsi
  406870:	mov    QWORD PTR [rbp-0x20],rdx
  406874:	mov    rdx,QWORD PTR [rbp-0x10]
  406878:	mov    rdx,QWORD PTR [rdx+0x30]
  40687c:	movzx  eax,WORD PTR [rdx+0xe]
  406880:	cmp    eax,0x6
  406883:	jne    40688e <flatcc_builder_append_string@@Base+0x2e>
  406889:	jmp    4068ad <flatcc_builder_append_string@@Base+0x4d>
  40688e:	lea    rdi,[rip+0x808c]        # 40e921 <flatcc_builder_padding_base@@Base+0x751>
  406895:	lea    rsi,[rip+0x7b46]        # 40e3e2 <flatcc_builder_padding_base@@Base+0x212>
  40689c:	mov    edx,0x3c6
  4068a1:	lea    rcx,[rip+0x80e4]        # 40e98c <flatcc_builder_padding_base@@Base+0x7bc>
  4068a8:	call   403060 <__assert_fail@plt>
  4068ad:	mov    rdi,QWORD PTR [rbp-0x10]
  4068b1:	mov    rax,QWORD PTR [rbp-0x20]
  4068b5:	mov    ecx,eax
  4068b7:	mov    esi,ecx
  4068b9:	mov    edx,0xffffffff
  4068be:	call   406320 <flatcc_builder_extend_vector@@Base+0x70>
  4068c3:	cmp    eax,0x0
  4068c6:	je     4068d9 <flatcc_builder_append_string@@Base+0x79>
  4068cc:	mov    QWORD PTR [rbp-0x8],0x0
  4068d4:	jmp    4068f2 <flatcc_builder_append_string@@Base+0x92>
  4068d9:	mov    rdi,QWORD PTR [rbp-0x10]
  4068dd:	mov    rsi,QWORD PTR [rbp-0x18]
  4068e1:	mov    rax,QWORD PTR [rbp-0x20]
  4068e5:	mov    ecx,eax
  4068e7:	mov    edx,ecx
  4068e9:	call   4064c0 <flatcc_builder_vector_push@@Base+0xf0>
  4068ee:	mov    QWORD PTR [rbp-0x8],rax
  4068f2:	mov    rax,QWORD PTR [rbp-0x8]
  4068f6:	add    rsp,0x20
  4068fa:	pop    rbp
  4068fb:	ret    
  4068fc:	nop    DWORD PTR [rax+0x0]

0000000000406900 <flatcc_builder_append_string_str@@Base>:
  406900:	push   rbp
  406901:	mov    rbp,rsp
  406904:	sub    rsp,0x20
  406908:	mov    QWORD PTR [rbp-0x8],rdi
  40690c:	mov    QWORD PTR [rbp-0x10],rsi
  406910:	mov    rdi,QWORD PTR [rbp-0x8]
  406914:	mov    rsi,QWORD PTR [rbp-0x10]
  406918:	mov    rax,QWORD PTR [rbp-0x10]
  40691c:	mov    QWORD PTR [rbp-0x18],rdi
  406920:	mov    rdi,rax
  406923:	mov    QWORD PTR [rbp-0x20],rsi
  406927:	call   403050 <strlen@plt>
  40692c:	mov    rdi,QWORD PTR [rbp-0x18]
  406930:	mov    rsi,QWORD PTR [rbp-0x20]
  406934:	mov    rdx,rax
  406937:	call   406860 <flatcc_builder_append_string@@Base>
  40693c:	add    rsp,0x20
  406940:	pop    rbp
  406941:	ret    
  406942:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40694c:	nop    DWORD PTR [rax+0x0]

0000000000406950 <flatcc_builder_append_string_strn@@Base>:
  406950:	push   rbp
  406951:	mov    rbp,rsp
  406954:	sub    rsp,0x30
  406958:	mov    QWORD PTR [rbp-0x8],rdi
  40695c:	mov    QWORD PTR [rbp-0x10],rsi
  406960:	mov    QWORD PTR [rbp-0x18],rdx
  406964:	mov    rdi,QWORD PTR [rbp-0x8]
  406968:	mov    rsi,QWORD PTR [rbp-0x10]
  40696c:	mov    rdx,QWORD PTR [rbp-0x10]
  406970:	mov    rax,QWORD PTR [rbp-0x18]
  406974:	mov    QWORD PTR [rbp-0x20],rdi
  406978:	mov    rdi,rdx
  40697b:	mov    QWORD PTR [rbp-0x28],rsi
  40697f:	mov    rsi,rax
  406982:	call   4069a0 <flatcc_builder_append_string_strn@@Base+0x50>
  406987:	mov    rdi,QWORD PTR [rbp-0x20]
  40698b:	mov    rsi,QWORD PTR [rbp-0x28]
  40698f:	mov    rdx,rax
  406992:	call   406860 <flatcc_builder_append_string@@Base>
  406997:	add    rsp,0x30
  40699b:	pop    rbp
  40699c:	ret    
  40699d:	nop    DWORD PTR [rax]
  4069a0:	push   rbp
  4069a1:	mov    rbp,rsp
  4069a4:	sub    rsp,0x20
  4069a8:	mov    QWORD PTR [rbp-0x8],rdi
  4069ac:	mov    QWORD PTR [rbp-0x10],rsi
  4069b0:	mov    rdi,QWORD PTR [rbp-0x8]
  4069b4:	mov    rdx,QWORD PTR [rbp-0x10]
  4069b8:	xor    esi,esi
  4069ba:	call   403080 <memchr@plt>
  4069bf:	mov    QWORD PTR [rbp-0x18],rax
  4069c3:	cmp    QWORD PTR [rbp-0x18],0x0
  4069c8:	je     4069e2 <flatcc_builder_append_string_strn@@Base+0x92>
  4069ce:	mov    rax,QWORD PTR [rbp-0x18]
  4069d2:	mov    rcx,QWORD PTR [rbp-0x8]
  4069d6:	sub    rax,rcx
  4069d9:	mov    QWORD PTR [rbp-0x20],rax
  4069dd:	jmp    4069ea <flatcc_builder_append_string_strn@@Base+0x9a>
  4069e2:	mov    rax,QWORD PTR [rbp-0x10]
  4069e6:	mov    QWORD PTR [rbp-0x20],rax
  4069ea:	mov    rax,QWORD PTR [rbp-0x20]
  4069ee:	add    rsp,0x20
  4069f2:	pop    rbp
  4069f3:	ret    
  4069f4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4069fe:	xchg   ax,ax

0000000000406a00 <flatcc_builder_truncate_vector@@Base>:
  406a00:	push   rbp
  406a01:	mov    rbp,rsp
  406a04:	sub    rsp,0x20
  406a08:	mov    QWORD PTR [rbp-0x10],rdi
  406a0c:	mov    QWORD PTR [rbp-0x18],rsi
  406a10:	mov    rsi,QWORD PTR [rbp-0x10]
  406a14:	mov    rsi,QWORD PTR [rsi+0x30]
  406a18:	movzx  eax,WORD PTR [rsi+0xe]
  406a1c:	cmp    eax,0x4
  406a1f:	jne    406a2a <flatcc_builder_truncate_vector@@Base+0x2a>
  406a25:	jmp    406a49 <flatcc_builder_truncate_vector@@Base+0x49>
  406a2a:	lea    rdi,[rip+0x7cee]        # 40e71f <flatcc_builder_padding_base@@Base+0x54f>
  406a31:	lea    rsi,[rip+0x79aa]        # 40e3e2 <flatcc_builder_padding_base@@Base+0x212>
  406a38:	mov    edx,0x3d9
  406a3d:	lea    rcx,[rip+0x7f95]        # 40e9d9 <flatcc_builder_padding_base@@Base+0x809>
  406a44:	call   403060 <__assert_fail@plt>
  406a49:	mov    rax,QWORD PTR [rbp-0x10]
  406a4d:	mov    rax,QWORD PTR [rax+0x30]
  406a51:	mov    ecx,DWORD PTR [rax+0x14]
  406a54:	mov    eax,ecx
  406a56:	cmp    rax,QWORD PTR [rbp-0x18]
  406a5a:	jae    406aa7 <flatcc_builder_truncate_vector@@Base+0xa7>
  406a60:	mov    rax,QWORD PTR [rbp-0x10]
  406a64:	mov    rax,QWORD PTR [rax+0x30]
  406a68:	mov    ecx,DWORD PTR [rax+0x14]
  406a6b:	mov    eax,ecx
  406a6d:	cmp    rax,QWORD PTR [rbp-0x18]
  406a71:	jb     406a7c <flatcc_builder_truncate_vector@@Base+0x7c>
  406a77:	jmp    406a9b <flatcc_builder_truncate_vector@@Base+0x9b>
  406a7c:	lea    rdi,[rip+0x7f95]        # 40ea18 <flatcc_builder_padding_base@@Base+0x848>
  406a83:	lea    rsi,[rip+0x7958]        # 40e3e2 <flatcc_builder_padding_base@@Base+0x212>
  406a8a:	mov    edx,0x3da
  406a8f:	lea    rcx,[rip+0x7f43]        # 40e9d9 <flatcc_builder_padding_base@@Base+0x809>
  406a96:	call   403060 <__assert_fail@plt>
  406a9b:	mov    DWORD PTR [rbp-0x4],0xffffffff
  406aa2:	jmp    406ae3 <flatcc_builder_truncate_vector@@Base+0xe3>
  406aa7:	mov    rax,QWORD PTR [rbp-0x18]
  406aab:	mov    ecx,eax
  406aad:	mov    rax,QWORD PTR [rbp-0x10]
  406ab1:	mov    rax,QWORD PTR [rax+0x30]
  406ab5:	mov    edx,DWORD PTR [rax+0x14]
  406ab8:	sub    edx,ecx
  406aba:	mov    DWORD PTR [rax+0x14],edx
  406abd:	mov    rdi,QWORD PTR [rbp-0x10]
  406ac1:	mov    rax,QWORD PTR [rbp-0x10]
  406ac5:	mov    rax,QWORD PTR [rax+0x30]
  406ac9:	mov    ecx,DWORD PTR [rax+0x10]
  406acc:	mov    rax,QWORD PTR [rbp-0x18]
  406ad0:	mov    edx,eax
  406ad2:	imul   ecx,edx
  406ad5:	mov    esi,ecx
  406ad7:	call   406af0 <flatcc_builder_truncate_vector@@Base+0xf0>
  406adc:	mov    DWORD PTR [rbp-0x4],0x0
  406ae3:	mov    eax,DWORD PTR [rbp-0x4]
  406ae6:	add    rsp,0x20
  406aea:	pop    rbp
  406aeb:	ret    
  406aec:	nop    DWORD PTR [rax+0x0]
  406af0:	push   rbp
  406af1:	mov    rbp,rsp
  406af4:	sub    rsp,0x10
  406af8:	xor    eax,eax
  406afa:	mov    QWORD PTR [rbp-0x8],rdi
  406afe:	mov    DWORD PTR [rbp-0xc],esi
  406b01:	mov    esi,DWORD PTR [rbp-0xc]
  406b04:	mov    rdi,QWORD PTR [rbp-0x8]
  406b08:	mov    ecx,DWORD PTR [rdi+0x20]
  406b0b:	sub    ecx,esi
  406b0d:	mov    DWORD PTR [rdi+0x20],ecx
  406b10:	mov    rdi,QWORD PTR [rbp-0x8]
  406b14:	mov    rdi,QWORD PTR [rdi+0x18]
  406b18:	mov    rdx,QWORD PTR [rbp-0x8]
  406b1c:	mov    ecx,DWORD PTR [rdx+0x20]
  406b1f:	mov    edx,ecx
  406b21:	add    rdi,rdx
  406b24:	mov    ecx,DWORD PTR [rbp-0xc]
  406b27:	mov    edx,ecx
  406b29:	mov    esi,eax
  406b2b:	call   403070 <memset@plt>
  406b30:	add    rsp,0x10
  406b34:	pop    rbp
  406b35:	ret    
  406b36:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000406b40 <flatcc_builder_truncate_offset_vector@@Base>:
  406b40:	push   rbp
  406b41:	mov    rbp,rsp
  406b44:	sub    rsp,0x20
  406b48:	mov    QWORD PTR [rbp-0x10],rdi
  406b4c:	mov    QWORD PTR [rbp-0x18],rsi
  406b50:	mov    rsi,QWORD PTR [rbp-0x10]
  406b54:	mov    rsi,QWORD PTR [rsi+0x30]
  406b58:	movzx  eax,WORD PTR [rsi+0xe]
  406b5c:	cmp    eax,0x5
  406b5f:	jne    406b6a <flatcc_builder_truncate_offset_vector@@Base+0x2a>
  406b65:	jmp    406b89 <flatcc_builder_truncate_offset_vector@@Base+0x49>
  406b6a:	lea    rdi,[rip+0x7ca7]        # 40e818 <flatcc_builder_padding_base@@Base+0x648>
  406b71:	lea    rsi,[rip+0x786a]        # 40e3e2 <flatcc_builder_padding_base@@Base+0x212>
  406b78:	mov    edx,0x3e2
  406b7d:	lea    rcx,[rip+0x7eb8]        # 40ea3c <flatcc_builder_padding_base@@Base+0x86c>
  406b84:	call   403060 <__assert_fail@plt>
  406b89:	mov    rax,QWORD PTR [rbp-0x10]
  406b8d:	mov    rax,QWORD PTR [rax+0x30]
  406b91:	mov    ecx,DWORD PTR [rax+0x14]
  406b94:	mov    rax,QWORD PTR [rbp-0x18]
  406b98:	mov    edx,eax
  406b9a:	cmp    ecx,edx
  406b9c:	jae    406beb <flatcc_builder_truncate_offset_vector@@Base+0xab>
  406ba2:	mov    rax,QWORD PTR [rbp-0x10]
  406ba6:	mov    rax,QWORD PTR [rax+0x30]
  406baa:	mov    ecx,DWORD PTR [rax+0x14]
  406bad:	mov    rax,QWORD PTR [rbp-0x18]
  406bb1:	mov    edx,eax
  406bb3:	cmp    ecx,edx
  406bb5:	jb     406bc0 <flatcc_builder_truncate_offset_vector@@Base+0x80>
  406bbb:	jmp    406bdf <flatcc_builder_truncate_offset_vector@@Base+0x9f>
  406bc0:	lea    rdi,[rip+0x7ebb]        # 40ea82 <flatcc_builder_padding_base@@Base+0x8b2>
  406bc7:	lea    rsi,[rip+0x7814]        # 40e3e2 <flatcc_builder_padding_base@@Base+0x212>
  406bce:	mov    edx,0x3e3
  406bd3:	lea    rcx,[rip+0x7e62]        # 40ea3c <flatcc_builder_padding_base@@Base+0x86c>
  406bda:	call   403060 <__assert_fail@plt>
  406bdf:	mov    DWORD PTR [rbp-0x4],0xffffffff
  406be6:	jmp    406c27 <flatcc_builder_truncate_offset_vector@@Base+0xe7>
  406beb:	mov    rax,QWORD PTR [rbp-0x18]
  406bef:	mov    ecx,eax
  406bf1:	mov    rax,QWORD PTR [rbp-0x10]
  406bf5:	mov    rax,QWORD PTR [rax+0x30]
  406bf9:	mov    edx,DWORD PTR [rax+0x14]
  406bfc:	sub    edx,ecx
  406bfe:	mov    DWORD PTR [rax+0x14],edx
  406c01:	mov    rdi,QWORD PTR [rbp-0x10]
  406c05:	mov    rax,QWORD PTR [rbp-0x10]
  406c09:	mov    rax,QWORD PTR [rax+0x30]
  406c0d:	mov    ecx,DWORD PTR [rax+0x10]
  406c10:	mov    rax,QWORD PTR [rbp-0x18]
  406c14:	mov    edx,eax
  406c16:	imul   ecx,edx
  406c19:	mov    esi,ecx
  406c1b:	call   406af0 <flatcc_builder_truncate_vector@@Base+0xf0>
  406c20:	mov    DWORD PTR [rbp-0x4],0x0
  406c27:	mov    eax,DWORD PTR [rbp-0x4]
  406c2a:	add    rsp,0x20
  406c2e:	pop    rbp
  406c2f:	ret    

0000000000406c30 <flatcc_builder_truncate_string@@Base>:
  406c30:	push   rbp
  406c31:	mov    rbp,rsp
  406c34:	sub    rsp,0x20
  406c38:	mov    QWORD PTR [rbp-0x10],rdi
  406c3c:	mov    QWORD PTR [rbp-0x18],rsi
  406c40:	mov    rsi,QWORD PTR [rbp-0x10]
  406c44:	mov    rsi,QWORD PTR [rsi+0x30]
  406c48:	movzx  eax,WORD PTR [rsi+0xe]
  406c4c:	cmp    eax,0x6
  406c4f:	jne    406c5a <flatcc_builder_truncate_string@@Base+0x2a>
  406c55:	jmp    406c79 <flatcc_builder_truncate_string@@Base+0x49>
  406c5a:	lea    rdi,[rip+0x7cc0]        # 40e921 <flatcc_builder_padding_base@@Base+0x751>
  406c61:	lea    rsi,[rip+0x777a]        # 40e3e2 <flatcc_builder_padding_base@@Base+0x212>
  406c68:	mov    edx,0x3eb
  406c6d:	lea    rcx,[rip+0x7e49]        # 40eabd <flatcc_builder_padding_base@@Base+0x8ed>
  406c74:	call   403060 <__assert_fail@plt>
  406c79:	mov    rax,QWORD PTR [rbp-0x10]
  406c7d:	mov    rax,QWORD PTR [rax+0x30]
  406c81:	mov    ecx,DWORD PTR [rax+0x14]
  406c84:	mov    eax,ecx
  406c86:	cmp    rax,QWORD PTR [rbp-0x18]
  406c8a:	jae    406cd7 <flatcc_builder_truncate_string@@Base+0xa7>
  406c90:	mov    rax,QWORD PTR [rbp-0x10]
  406c94:	mov    rax,QWORD PTR [rax+0x30]
  406c98:	mov    ecx,DWORD PTR [rax+0x14]
  406c9b:	mov    eax,ecx
  406c9d:	cmp    rax,QWORD PTR [rbp-0x18]
  406ca1:	jb     406cac <flatcc_builder_truncate_string@@Base+0x7c>
  406ca7:	jmp    406ccb <flatcc_builder_truncate_string@@Base+0x9b>
  406cac:	lea    rdi,[rip+0x7e49]        # 40eafc <flatcc_builder_padding_base@@Base+0x92c>
  406cb3:	lea    rsi,[rip+0x7728]        # 40e3e2 <flatcc_builder_padding_base@@Base+0x212>
  406cba:	mov    edx,0x3ec
  406cbf:	lea    rcx,[rip+0x7df7]        # 40eabd <flatcc_builder_padding_base@@Base+0x8ed>
  406cc6:	call   403060 <__assert_fail@plt>
  406ccb:	mov    DWORD PTR [rbp-0x4],0xffffffff
  406cd2:	jmp    406d05 <flatcc_builder_truncate_string@@Base+0xd5>
  406cd7:	mov    rax,QWORD PTR [rbp-0x18]
  406cdb:	mov    ecx,eax
  406cdd:	mov    rax,QWORD PTR [rbp-0x10]
  406ce1:	mov    rax,QWORD PTR [rax+0x30]
  406ce5:	mov    edx,DWORD PTR [rax+0x14]
  406ce8:	sub    edx,ecx
  406cea:	mov    DWORD PTR [rax+0x14],edx
  406ced:	mov    rdi,QWORD PTR [rbp-0x10]
  406cf1:	mov    rax,QWORD PTR [rbp-0x18]
  406cf5:	mov    ecx,eax
  406cf7:	mov    esi,ecx
  406cf9:	call   406af0 <flatcc_builder_truncate_vector@@Base+0xf0>
  406cfe:	mov    DWORD PTR [rbp-0x4],0x0
  406d05:	mov    eax,DWORD PTR [rbp-0x4]
  406d08:	add    rsp,0x20
  406d0c:	pop    rbp
  406d0d:	ret    
  406d0e:	xchg   ax,ax

0000000000406d10 <flatcc_builder_start_vector@@Base>:
  406d10:	push   rbp
  406d11:	mov    rbp,rsp
  406d14:	sub    rsp,0x30
  406d18:	mov    ax,dx
  406d1b:	mov    QWORD PTR [rbp-0x10],rdi
  406d1f:	mov    QWORD PTR [rbp-0x18],rsi
  406d23:	mov    WORD PTR [rbp-0x1a],ax
  406d27:	mov    QWORD PTR [rbp-0x28],rcx
  406d2b:	lea    rdi,[rbp-0x1a]
  406d2f:	mov    esi,0x4
  406d34:	call   406dc0 <flatcc_builder_start_vector@@Base+0xb0>
  406d39:	mov    rdi,QWORD PTR [rbp-0x10]
  406d3d:	movzx  esi,WORD PTR [rbp-0x1a]
  406d41:	call   405c70 <flatcc_builder_start_buffer@@Base+0x170>
  406d46:	cmp    eax,0x0
  406d49:	je     406d5b <flatcc_builder_start_vector@@Base+0x4b>
  406d4f:	mov    DWORD PTR [rbp-0x4],0xffffffff
  406d56:	jmp    406daf <flatcc_builder_start_vector@@Base+0x9f>
  406d5b:	mov    rax,QWORD PTR [rbp-0x18]
  406d5f:	mov    ecx,eax
  406d61:	mov    rax,QWORD PTR [rbp-0x10]
  406d65:	mov    rax,QWORD PTR [rax+0x30]
  406d69:	mov    DWORD PTR [rax+0x10],ecx
  406d6c:	mov    rax,QWORD PTR [rbp-0x10]
  406d70:	mov    rax,QWORD PTR [rax+0x30]
  406d74:	mov    DWORD PTR [rax+0x14],0x0
  406d7b:	mov    rax,QWORD PTR [rbp-0x28]
  406d7f:	mov    ecx,eax
  406d81:	mov    rax,QWORD PTR [rbp-0x10]
  406d85:	mov    rax,QWORD PTR [rax+0x30]
  406d89:	mov    DWORD PTR [rax+0x18],ecx
  406d8c:	mov    rax,QWORD PTR [rbp-0x10]
  406d90:	mov    rax,QWORD PTR [rax+0x30]
  406d94:	mov    WORD PTR [rax+0xe],0x4
  406d9a:	mov    rdi,QWORD PTR [rbp-0x10]
  406d9e:	mov    esi,0xfffffffc
  406da3:	call   4060e0 <flatcc_builder_start_struct@@Base+0x80>
  406da8:	mov    DWORD PTR [rbp-0x4],0x0
  406daf:	mov    eax,DWORD PTR [rbp-0x4]
  406db2:	add    rsp,0x30
  406db6:	pop    rbp
  406db7:	ret    
  406db8:	nop    DWORD PTR [rax+rax*1+0x0]
  406dc0:	push   rbp
  406dc1:	mov    rbp,rsp
  406dc4:	mov    ax,si
  406dc7:	mov    QWORD PTR [rbp-0x8],rdi
  406dcb:	mov    WORD PTR [rbp-0xa],ax
  406dcf:	mov    rdi,QWORD PTR [rbp-0x8]
  406dd3:	movzx  esi,WORD PTR [rdi]
  406dd6:	movzx  ecx,WORD PTR [rbp-0xa]
  406dda:	cmp    esi,ecx
  406ddc:	jge    406ded <flatcc_builder_start_vector@@Base+0xdd>
  406de2:	mov    ax,WORD PTR [rbp-0xa]
  406de6:	mov    rcx,QWORD PTR [rbp-0x8]
  406dea:	mov    WORD PTR [rcx],ax
  406ded:	pop    rbp
  406dee:	ret    
  406def:	nop

0000000000406df0 <flatcc_builder_start_offset_vector@@Base>:
  406df0:	push   rbp
  406df1:	mov    rbp,rsp
  406df4:	sub    rsp,0x10
  406df8:	mov    QWORD PTR [rbp-0x10],rdi
  406dfc:	mov    rdi,QWORD PTR [rbp-0x10]
  406e00:	mov    esi,0x4
  406e05:	call   405c70 <flatcc_builder_start_buffer@@Base+0x170>
  406e0a:	cmp    eax,0x0
  406e0d:	je     406e1f <flatcc_builder_start_offset_vector@@Base+0x2f>
  406e13:	mov    DWORD PTR [rbp-0x4],0xffffffff
  406e1a:	jmp    406e60 <flatcc_builder_start_offset_vector@@Base+0x70>
  406e1f:	mov    rax,QWORD PTR [rbp-0x10]
  406e23:	mov    rax,QWORD PTR [rax+0x30]
  406e27:	mov    DWORD PTR [rax+0x10],0x4
  406e2e:	mov    rax,QWORD PTR [rbp-0x10]
  406e32:	mov    rax,QWORD PTR [rax+0x30]
  406e36:	mov    DWORD PTR [rax+0x14],0x0
  406e3d:	mov    rax,QWORD PTR [rbp-0x10]
  406e41:	mov    rax,QWORD PTR [rax+0x30]
  406e45:	mov    WORD PTR [rax+0xe],0x5
  406e4b:	mov    rdi,QWORD PTR [rbp-0x10]
  406e4f:	mov    esi,0xfffffffc
  406e54:	call   4060e0 <flatcc_builder_start_struct@@Base+0x80>
  406e59:	mov    DWORD PTR [rbp-0x4],0x0
  406e60:	mov    eax,DWORD PTR [rbp-0x4]
  406e63:	add    rsp,0x10
  406e67:	pop    rbp
  406e68:	ret    
  406e69:	nop    DWORD PTR [rax+0x0]

0000000000406e70 <flatcc_builder_create_offset_vector@@Base>:
  406e70:	push   rbp
  406e71:	mov    rbp,rsp
  406e74:	sub    rsp,0x30
  406e78:	mov    QWORD PTR [rbp-0x10],rdi
  406e7c:	mov    QWORD PTR [rbp-0x18],rsi
  406e80:	mov    QWORD PTR [rbp-0x20],rdx
  406e84:	mov    rdi,QWORD PTR [rbp-0x10]
  406e88:	call   406df0 <flatcc_builder_start_offset_vector@@Base>
  406e8d:	cmp    eax,0x0
  406e90:	je     406ea2 <flatcc_builder_create_offset_vector@@Base+0x32>
  406e96:	mov    DWORD PTR [rbp-0x4],0x0
  406e9d:	jmp    406ef0 <flatcc_builder_create_offset_vector@@Base+0x80>
  406ea2:	mov    rdi,QWORD PTR [rbp-0x10]
  406ea6:	mov    rsi,QWORD PTR [rbp-0x20]
  406eaa:	call   4065d0 <flatcc_builder_extend_offset_vector@@Base>
  406eaf:	mov    QWORD PTR [rbp-0x28],rax
  406eb3:	cmp    rax,0x0
  406eb7:	jne    406ec9 <flatcc_builder_create_offset_vector@@Base+0x59>
  406ebd:	mov    DWORD PTR [rbp-0x4],0x0
  406ec4:	jmp    406ef0 <flatcc_builder_create_offset_vector@@Base+0x80>
  406ec9:	mov    rax,QWORD PTR [rbp-0x28]
  406ecd:	mov    rcx,QWORD PTR [rbp-0x18]
  406ed1:	mov    rdx,QWORD PTR [rbp-0x20]
  406ed5:	shl    rdx,0x2
  406ed9:	mov    rdi,rax
  406edc:	mov    rsi,rcx
  406edf:	call   4030a0 <memcpy@plt>
  406ee4:	mov    rdi,QWORD PTR [rbp-0x10]
  406ee8:	call   406f00 <flatcc_builder_end_offset_vector@@Base>
  406eed:	mov    DWORD PTR [rbp-0x4],eax
  406ef0:	mov    eax,DWORD PTR [rbp-0x4]
  406ef3:	add    rsp,0x30
  406ef7:	pop    rbp
  406ef8:	ret    
  406ef9:	nop    DWORD PTR [rax+0x0]

0000000000406f00 <flatcc_builder_end_offset_vector@@Base>:
  406f00:	push   rbp
  406f01:	mov    rbp,rsp
  406f04:	sub    rsp,0x20
  406f08:	mov    QWORD PTR [rbp-0x10],rdi
  406f0c:	mov    rdi,QWORD PTR [rbp-0x10]
  406f10:	mov    rdi,QWORD PTR [rdi+0x30]
  406f14:	movzx  eax,WORD PTR [rdi+0xe]
  406f18:	cmp    eax,0x5
  406f1b:	jne    406f26 <flatcc_builder_end_offset_vector@@Base+0x26>
  406f21:	jmp    406f45 <flatcc_builder_end_offset_vector@@Base+0x45>
  406f26:	lea    rdi,[rip+0x78eb]        # 40e818 <flatcc_builder_padding_base@@Base+0x648>
  406f2d:	lea    rsi,[rip+0x74ae]        # 40e3e2 <flatcc_builder_padding_base@@Base+0x212>
  406f34:	mov    edx,0x5c8
  406f39:	lea    rcx,[rip+0x7f07]        # 40ee47 <flatcc_builder_padding_base@@Base+0xc77>
  406f40:	call   403060 <__assert_fail@plt>
  406f45:	mov    rdi,QWORD PTR [rbp-0x10]
  406f49:	mov    rax,QWORD PTR [rbp-0x10]
  406f4d:	mov    rax,QWORD PTR [rax+0x18]
  406f51:	mov    rcx,QWORD PTR [rbp-0x10]
  406f55:	mov    rcx,QWORD PTR [rcx+0x30]
  406f59:	mov    edx,DWORD PTR [rcx+0x14]
  406f5c:	mov    rsi,rax
  406f5f:	call   408350 <flatcc_builder_create_offset_vector_direct@@Base>
  406f64:	xor    r8d,r8d
  406f67:	mov    DWORD PTR [rbp-0x14],eax
  406f6a:	cmp    r8d,eax
  406f6d:	jne    406f7f <flatcc_builder_end_offset_vector@@Base+0x7f>
  406f73:	mov    DWORD PTR [rbp-0x4],0x0
  406f7a:	jmp    406f8e <flatcc_builder_end_offset_vector@@Base+0x8e>
  406f7f:	mov    rdi,QWORD PTR [rbp-0x10]
  406f83:	call   405fa0 <flatcc_builder_end_buffer@@Base+0x160>
  406f88:	mov    eax,DWORD PTR [rbp-0x14]
  406f8b:	mov    DWORD PTR [rbp-0x4],eax
  406f8e:	mov    eax,DWORD PTR [rbp-0x4]
  406f91:	add    rsp,0x20
  406f95:	pop    rbp
  406f96:	ret    
  406f97:	nop    WORD PTR [rax+rax*1+0x0]

0000000000406fa0 <flatcc_builder_start_string@@Base>:
  406fa0:	push   rbp
  406fa1:	mov    rbp,rsp
  406fa4:	sub    rsp,0x10
  406fa8:	mov    QWORD PTR [rbp-0x10],rdi
  406fac:	mov    rdi,QWORD PTR [rbp-0x10]
  406fb0:	mov    esi,0x1
  406fb5:	call   405c70 <flatcc_builder_start_buffer@@Base+0x170>
  406fba:	cmp    eax,0x0
  406fbd:	je     406fcf <flatcc_builder_start_string@@Base+0x2f>
  406fc3:	mov    DWORD PTR [rbp-0x4],0xffffffff
  406fca:	jmp    407010 <flatcc_builder_start_string@@Base+0x70>
  406fcf:	mov    rax,QWORD PTR [rbp-0x10]
  406fd3:	mov    rax,QWORD PTR [rax+0x30]
  406fd7:	mov    DWORD PTR [rax+0x10],0x1
  406fde:	mov    rax,QWORD PTR [rbp-0x10]
  406fe2:	mov    rax,QWORD PTR [rax+0x30]
  406fe6:	mov    DWORD PTR [rax+0x14],0x0
  406fed:	mov    rax,QWORD PTR [rbp-0x10]
  406ff1:	mov    rax,QWORD PTR [rax+0x30]
  406ff5:	mov    WORD PTR [rax+0xe],0x6
  406ffb:	mov    rdi,QWORD PTR [rbp-0x10]
  406fff:	mov    esi,0xfffffffc
  407004:	call   4060e0 <flatcc_builder_start_struct@@Base+0x80>
  407009:	mov    DWORD PTR [rbp-0x4],0x0
  407010:	mov    eax,DWORD PTR [rbp-0x4]
  407013:	add    rsp,0x10
  407017:	pop    rbp
  407018:	ret    
  407019:	nop    DWORD PTR [rax+0x0]

0000000000407020 <flatcc_builder_reserve_table@@Base>:
  407020:	push   rbp
  407021:	mov    rbp,rsp
  407024:	sub    rsp,0x10
  407028:	mov    QWORD PTR [rbp-0x8],rdi
  40702c:	mov    DWORD PTR [rbp-0xc],esi
  40702f:	cmp    DWORD PTR [rbp-0xc],0x0
  407033:	jl     40703e <flatcc_builder_reserve_table@@Base+0x1e>
  407039:	jmp    40705d <flatcc_builder_reserve_table@@Base+0x3d>
  40703e:	lea    rdi,[rip+0x7b1a]        # 40eb5f <flatcc_builder_padding_base@@Base+0x98f>
  407045:	lea    rsi,[rip+0x7396]        # 40e3e2 <flatcc_builder_padding_base@@Base+0x212>
  40704c:	mov    edx,0x429
  407051:	lea    rcx,[rip+0x7ac6]        # 40eb1e <flatcc_builder_padding_base@@Base+0x94e>
  407058:	call   403060 <__assert_fail@plt>
  40705d:	mov    rdi,QWORD PTR [rbp-0x8]
  407061:	mov    esi,DWORD PTR [rbp-0xc]
  407064:	call   407070 <flatcc_builder_reserve_table@@Base+0x50>
  407069:	add    rsp,0x10
  40706d:	pop    rbp
  40706e:	ret    
  40706f:	nop
  407070:	push   rbp
  407071:	mov    rbp,rsp
  407074:	sub    rsp,0x20
  407078:	xor    eax,eax
  40707a:	mov    QWORD PTR [rbp-0x10],rdi
  40707e:	mov    DWORD PTR [rbp-0x14],esi
  407081:	mov    rdi,QWORD PTR [rbp-0x10]
  407085:	mov    rdi,QWORD PTR [rdi+0x30]
  407089:	mov    esi,DWORD PTR [rdi+0x10]
  40708c:	mov    edi,esi
  40708e:	mov    rcx,QWORD PTR [rbp-0x10]
  407092:	mov    rcx,QWORD PTR [rcx+0x30]
  407096:	movzx  esi,WORD PTR [rcx+0x1c]
  40709a:	mov    ecx,esi
  40709c:	shl    rcx,0x1
  4070a0:	add    rdi,rcx
  4070a3:	mov    esi,edi
  4070a5:	mov    DWORD PTR [rbp-0x18],esi
  4070a8:	mov    esi,DWORD PTR [rbp-0x14]
  4070ab:	add    esi,0x2
  4070ae:	movsxd rcx,esi
  4070b1:	shl    rcx,0x1
  4070b5:	mov    esi,ecx
  4070b7:	mov    DWORD PTR [rbp-0x1c],esi
  4070ba:	mov    rdi,QWORD PTR [rbp-0x10]
  4070be:	mov    esi,DWORD PTR [rbp-0x18]
  4070c1:	mov    edx,esi
  4070c3:	mov    esi,DWORD PTR [rbp-0x1c]
  4070c6:	mov    ecx,esi
  4070c8:	mov    esi,eax
  4070ca:	mov    r8d,0x1
  4070d0:	call   404cf0 <flatcc_builder_enter_user_frame_ptr@@Base+0xe0>
  4070d5:	mov    rcx,QWORD PTR [rbp-0x10]
  4070d9:	mov    QWORD PTR [rcx+0x8],rax
  4070dd:	cmp    rax,0x0
  4070e1:	jne    4070f3 <flatcc_builder_reserve_table@@Base+0xd3>
  4070e7:	mov    DWORD PTR [rbp-0x4],0xffffffff
  4070ee:	jmp    40715f <flatcc_builder_reserve_table@@Base+0x13f>
  4070f3:	xor    r8d,r8d
  4070f6:	mov    rax,QWORD PTR [rbp-0x10]
  4070fa:	mov    rcx,QWORD PTR [rax+0x8]
  4070fe:	add    rcx,0x4
  407102:	mov    QWORD PTR [rax+0x8],rcx
  407106:	mov    rax,QWORD PTR [rbp-0x10]
  40710a:	mov    rax,QWORD PTR [rax+0x30]
  40710e:	mov    edx,DWORD PTR [rax+0x14]
  407111:	mov    DWORD PTR [rbp-0x18],edx
  407114:	movsxd rax,DWORD PTR [rbp-0x14]
  407118:	shl    rax,0x1
  40711c:	add    rax,0x1
  407120:	mov    edx,eax
  407122:	mov    DWORD PTR [rbp-0x1c],edx
  407125:	mov    rdi,QWORD PTR [rbp-0x10]
  407129:	mov    edx,DWORD PTR [rbp-0x18]
  40712c:	mov    esi,DWORD PTR [rbp-0x1c]
  40712f:	mov    ecx,esi
  407131:	mov    esi,0x3
  407136:	call   404cf0 <flatcc_builder_enter_user_frame_ptr@@Base+0xe0>
  40713b:	mov    rcx,QWORD PTR [rbp-0x10]
  40713f:	mov    QWORD PTR [rcx],rax
  407142:	cmp    rax,0x0
  407146:	jne    407158 <flatcc_builder_reserve_table@@Base+0x138>
  40714c:	mov    DWORD PTR [rbp-0x4],0xffffffff
  407153:	jmp    40715f <flatcc_builder_reserve_table@@Base+0x13f>
  407158:	mov    DWORD PTR [rbp-0x4],0x0
  40715f:	mov    eax,DWORD PTR [rbp-0x4]
  407162:	add    rsp,0x20
  407166:	pop    rbp
  407167:	ret    
  407168:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000407170 <flatcc_builder_start_table@@Base>:
  407170:	push   rbp
  407171:	mov    rbp,rsp
  407174:	sub    rsp,0x20
  407178:	mov    QWORD PTR [rbp-0x10],rdi
  40717c:	mov    DWORD PTR [rbp-0x14],esi
  40717f:	mov    rdi,QWORD PTR [rbp-0x10]
  407183:	mov    esi,0x4
  407188:	call   405c70 <flatcc_builder_start_buffer@@Base+0x170>
  40718d:	cmp    eax,0x0
  407190:	je     4071a2 <flatcc_builder_start_table@@Base+0x32>
  407196:	mov    DWORD PTR [rbp-0x4],0xffffffff
  40719d:	jmp    40726e <flatcc_builder_start_table@@Base+0xfe>
  4071a2:	mov    rax,QWORD PTR [rbp-0x10]
  4071a6:	mov    rax,QWORD PTR [rax+0x8]
  4071aa:	mov    rcx,QWORD PTR [rbp-0x10]
  4071ae:	mov    rcx,QWORD PTR [rcx+0x58]
  4071b2:	sub    rax,rcx
  4071b5:	mov    edx,eax
  4071b7:	mov    rax,QWORD PTR [rbp-0x10]
  4071bb:	mov    rax,QWORD PTR [rax+0x30]
  4071bf:	mov    DWORD PTR [rax+0x10],edx
  4071c2:	mov    rax,QWORD PTR [rbp-0x10]
  4071c6:	mov    rax,QWORD PTR [rax]
  4071c9:	mov    rcx,QWORD PTR [rbp-0x10]
  4071cd:	mov    rcx,QWORD PTR [rcx+0x88]
  4071d4:	sub    rax,rcx
  4071d7:	mov    edx,eax
  4071d9:	mov    rax,QWORD PTR [rbp-0x10]
  4071dd:	mov    rax,QWORD PTR [rax+0x30]
  4071e1:	mov    DWORD PTR [rax+0x14],edx
  4071e4:	mov    rax,QWORD PTR [rbp-0x10]
  4071e8:	mov    edx,DWORD PTR [rax+0x14]
  4071eb:	mov    rax,QWORD PTR [rbp-0x10]
  4071ef:	mov    rax,QWORD PTR [rax+0x30]
  4071f3:	mov    DWORD PTR [rax+0x18],edx
  4071f6:	mov    rax,QWORD PTR [rbp-0x10]
  4071fa:	mov    si,WORD PTR [rax+0x10]
  4071fe:	mov    rax,QWORD PTR [rbp-0x10]
  407202:	mov    rax,QWORD PTR [rax+0x30]
  407206:	mov    WORD PTR [rax+0x1c],si
  40720a:	mov    rax,QWORD PTR [rbp-0x10]
  40720e:	mov    DWORD PTR [rax+0x14],0x0
  407215:	mov    rax,QWORD PTR [rbp-0x10]
  407219:	mov    DWORD PTR [rax+0x14],0x2f693b52
  407220:	mov    rax,QWORD PTR [rbp-0x10]
  407224:	mov    WORD PTR [rax+0x10],0x0
  40722a:	mov    rax,QWORD PTR [rbp-0x10]
  40722e:	mov    rax,QWORD PTR [rax+0x30]
  407232:	mov    WORD PTR [rax+0xe],0x3
  407238:	mov    rdi,QWORD PTR [rbp-0x10]
  40723c:	mov    esi,DWORD PTR [rbp-0x14]
  40723f:	call   407070 <flatcc_builder_reserve_table@@Base+0x50>
  407244:	cmp    eax,0x0
  407247:	je     407259 <flatcc_builder_start_table@@Base+0xe9>
  40724d:	mov    DWORD PTR [rbp-0x4],0xffffffff
  407254:	jmp    40726e <flatcc_builder_start_table@@Base+0xfe>
  407259:	mov    rdi,QWORD PTR [rbp-0x10]
  40725d:	mov    esi,0xfffc
  407262:	call   4060e0 <flatcc_builder_start_struct@@Base+0x80>
  407267:	mov    DWORD PTR [rbp-0x4],0x0
  40726e:	mov    eax,DWORD PTR [rbp-0x4]
  407271:	add    rsp,0x20
  407275:	pop    rbp
  407276:	ret    
  407277:	nop    WORD PTR [rax+rax*1+0x0]

0000000000407280 <flatcc_builder_create_vtable@@Base>:
  407280:	push   rbp
  407281:	mov    rbp,rsp
  407284:	sub    rsp,0xc0
  40728b:	mov    ax,dx
  40728e:	mov    QWORD PTR [rbp-0x10],rdi
  407292:	mov    QWORD PTR [rbp-0x18],rsi
  407296:	mov    WORD PTR [rbp-0x1a],ax
  40729a:	mov    QWORD PTR [rbp-0xb0],0x0
  4072a5:	mov    DWORD PTR [rbp-0xa8],0x0
  4072af:	movzx  edx,WORD PTR [rbp-0x1a]
  4072b3:	cmp    edx,0x0
  4072b6:	jle    40731e <flatcc_builder_create_vtable@@Base+0x9e>
  4072bc:	movzx  eax,WORD PTR [rbp-0x1a]
  4072c0:	mov    ecx,eax
  4072c2:	add    rcx,QWORD PTR [rbp-0xb0]
  4072c9:	mov    QWORD PTR [rbp-0xb0],rcx
  4072d0:	mov    rcx,QWORD PTR [rbp-0x18]
  4072d4:	lea    rdx,[rbp-0xb0]
  4072db:	mov    rsi,rdx
  4072de:	add    rsi,0x10
  4072e2:	movsxd rdi,DWORD PTR [rbp-0xa8]
  4072e9:	shl    rdi,0x4
  4072ed:	add    rsi,rdi
  4072f0:	mov    QWORD PTR [rsi],rcx
  4072f3:	movzx  eax,WORD PTR [rbp-0x1a]
  4072f7:	mov    ecx,eax
  4072f9:	add    rdx,0x10
  4072fd:	movsxd rsi,DWORD PTR [rbp-0xa8]
  407304:	shl    rsi,0x4
  407308:	add    rdx,rsi
  40730b:	mov    QWORD PTR [rdx+0x8],rcx
  40730f:	mov    eax,DWORD PTR [rbp-0xa8]
  407315:	add    eax,0x1
  407318:	mov    DWORD PTR [rbp-0xa8],eax
  40731e:	mov    rax,QWORD PTR [rbp-0x10]
  407322:	cmp    DWORD PTR [rax+0x100],0x0
  407329:	jne    40736e <flatcc_builder_create_vtable@@Base+0xee>
  40732f:	mov    rax,QWORD PTR [rbp-0x10]
  407333:	cmp    DWORD PTR [rax+0x124],0x0
  40733a:	jne    40736e <flatcc_builder_create_vtable@@Base+0xee>
  407340:	mov    rdi,QWORD PTR [rbp-0x10]
  407344:	lea    rsi,[rbp-0xb0]
  40734b:	call   4073c0 <flatcc_builder_create_vtable@@Base+0x140>
  407350:	xor    ecx,ecx
  407352:	mov    DWORD PTR [rbp-0x20],eax
  407355:	cmp    ecx,eax
  407357:	jne    407369 <flatcc_builder_create_vtable@@Base+0xe9>
  40735d:	mov    DWORD PTR [rbp-0x4],0x0
  407364:	jmp    4073a6 <flatcc_builder_create_vtable@@Base+0x126>
  407369:	jmp    4073a0 <flatcc_builder_create_vtable@@Base+0x120>
  40736e:	mov    rdi,QWORD PTR [rbp-0x10]
  407372:	lea    rsi,[rbp-0xb0]
  407379:	call   405420 <flatcc_builder_embed_buffer@@Base+0x430>
  40737e:	xor    ecx,ecx
  407380:	mov    DWORD PTR [rbp-0x20],eax
  407383:	cmp    ecx,eax
  407385:	jne    407397 <flatcc_builder_create_vtable@@Base+0x117>
  40738b:	mov    DWORD PTR [rbp-0x4],0x0
  407392:	jmp    4073a6 <flatcc_builder_create_vtable@@Base+0x126>
  407397:	mov    eax,DWORD PTR [rbp-0x20]
  40739a:	add    eax,0x1
  40739d:	mov    DWORD PTR [rbp-0x20],eax
  4073a0:	mov    eax,DWORD PTR [rbp-0x20]
  4073a3:	mov    DWORD PTR [rbp-0x4],eax
  4073a6:	mov    eax,DWORD PTR [rbp-0x4]
  4073a9:	add    rsp,0xc0
  4073b0:	pop    rbp
  4073b1:	ret    
  4073b2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4073bc:	nop    DWORD PTR [rax+0x0]
  4073c0:	push   rbp
  4073c1:	mov    rbp,rsp
  4073c4:	sub    rsp,0x20
  4073c8:	mov    QWORD PTR [rbp-0x8],rdi
  4073cc:	mov    QWORD PTR [rbp-0x10],rsi
  4073d0:	mov    rsi,QWORD PTR [rbp-0x8]
  4073d4:	mov    eax,DWORD PTR [rsi+0xf4]
  4073da:	mov    DWORD PTR [rbp-0x14],eax
  4073dd:	mov    eax,DWORD PTR [rbp-0x14]
  4073e0:	mov    rsi,QWORD PTR [rbp-0x10]
  4073e4:	mov    rsi,QWORD PTR [rsi]
  4073e7:	mov    ecx,esi
  4073e9:	add    eax,ecx
  4073eb:	mov    rsi,QWORD PTR [rbp-0x8]
  4073ef:	mov    DWORD PTR [rsi+0xf4],eax
  4073f5:	mov    rsi,QWORD PTR [rbp-0x8]
  4073f9:	mov    eax,DWORD PTR [rsi+0xf4]
  4073ff:	cmp    eax,DWORD PTR [rbp-0x14]
  407402:	jge    407427 <flatcc_builder_create_vtable@@Base+0x1a7>
  407408:	lea    rdi,[rip+0x8193]        # 40f5a2 <flatcc_builder_padding_base@@Base+0x13d2>
  40740f:	lea    rsi,[rip+0x6fcc]        # 40e3e2 <flatcc_builder_padding_base@@Base+0x212>
  407416:	mov    edx,0x2a1
  40741b:	lea    rcx,[rip+0x80fb]        # 40f51d <flatcc_builder_padding_base@@Base+0x134d>
  407422:	call   403060 <__assert_fail@plt>
  407427:	mov    rax,QWORD PTR [rbp-0x8]
  40742b:	mov    rax,QWORD PTR [rax+0x48]
  40742f:	mov    rcx,QWORD PTR [rbp-0x8]
  407433:	mov    rdi,QWORD PTR [rcx+0x38]
  407437:	mov    rcx,QWORD PTR [rbp-0x10]
  40743b:	add    rcx,0x10
  40743f:	mov    rdx,QWORD PTR [rbp-0x10]
  407443:	mov    edx,DWORD PTR [rdx+0x8]
  407446:	mov    esi,DWORD PTR [rbp-0x14]
  407449:	mov    r8,QWORD PTR [rbp-0x10]
  40744d:	mov    r8,QWORD PTR [r8]
  407450:	mov    DWORD PTR [rbp-0x18],esi
  407453:	mov    rsi,rcx
  407456:	mov    ecx,DWORD PTR [rbp-0x18]
  407459:	call   rax
  40745b:	cmp    eax,0x0
  40745e:	je     407483 <flatcc_builder_create_vtable@@Base+0x203>
  407464:	lea    rdi,[rip+0x8137]        # 40f5a2 <flatcc_builder_padding_base@@Base+0x13d2>
  40746b:	lea    rsi,[rip+0x6f70]        # 40e3e2 <flatcc_builder_padding_base@@Base+0x212>
  407472:	mov    edx,0x2a5
  407477:	lea    rcx,[rip+0x809f]        # 40f51d <flatcc_builder_padding_base@@Base+0x134d>
  40747e:	call   403060 <__assert_fail@plt>
  407483:	mov    eax,DWORD PTR [rbp-0x14]
  407486:	add    eax,0x1
  407489:	add    rsp,0x20
  40748d:	pop    rbp
  40748e:	ret    
  40748f:	nop

0000000000407490 <flatcc_builder_create_cached_vtable@@Base>:
  407490:	push   rbp
  407491:	mov    rbp,rsp
  407494:	sub    rsp,0x70
  407498:	mov    ax,dx
  40749b:	mov    QWORD PTR [rbp-0x10],rdi
  40749f:	mov    QWORD PTR [rbp-0x18],rsi
  4074a3:	mov    WORD PTR [rbp-0x1a],ax
  4074a7:	mov    DWORD PTR [rbp-0x20],ecx
  4074aa:	mov    rdi,QWORD PTR [rbp-0x10]
  4074ae:	mov    esi,DWORD PTR [rbp-0x20]
  4074b1:	call   4077c0 <flatcc_builder_create_cached_vtable@@Base+0x330>
  4074b6:	mov    QWORD PTR [rbp-0x40],rax
  4074ba:	cmp    rax,0x0
  4074be:	jne    4074d0 <flatcc_builder_create_cached_vtable@@Base+0x40>
  4074c4:	mov    DWORD PTR [rbp-0x4],0x0
  4074cb:	jmp    4077a8 <flatcc_builder_create_cached_vtable@@Base+0x318>
  4074d0:	mov    rax,QWORD PTR [rbp-0x40]
  4074d4:	mov    QWORD PTR [rbp-0x38],rax
  4074d8:	mov    rax,QWORD PTR [rbp-0x38]
  4074dc:	mov    ecx,DWORD PTR [rax]
  4074de:	mov    DWORD PTR [rbp-0x44],ecx
  4074e1:	mov    QWORD PTR [rbp-0x30],0x0
  4074e9:	cmp    DWORD PTR [rbp-0x44],0x0
  4074ed:	je     4075fc <flatcc_builder_create_cached_vtable@@Base+0x16c>
  4074f3:	mov    rax,QWORD PTR [rbp-0x10]
  4074f7:	mov    rax,QWORD PTR [rax+0xb8]
  4074fe:	mov    ecx,DWORD PTR [rbp-0x44]
  407501:	mov    edx,ecx
  407503:	add    rax,rdx
  407506:	mov    QWORD PTR [rbp-0x28],rax
  40750a:	mov    rax,QWORD PTR [rbp-0x10]
  40750e:	mov    rax,QWORD PTR [rax+0x78]
  407512:	mov    rdx,QWORD PTR [rbp-0x28]
  407516:	mov    ecx,DWORD PTR [rdx+0x8]
  407519:	mov    edx,ecx
  40751b:	add    rax,rdx
  40751e:	mov    QWORD PTR [rbp-0x50],rax
  407522:	mov    rax,QWORD PTR [rbp-0x50]
  407526:	movzx  ecx,WORD PTR [rax]
  407529:	movzx  esi,WORD PTR [rbp-0x1a]
  40752d:	cmp    ecx,esi
  40752f:	jne    407568 <flatcc_builder_create_cached_vtable@@Base+0xd8>
  407535:	xor    eax,eax
  407537:	mov    rcx,QWORD PTR [rbp-0x18]
  40753b:	mov    rdx,QWORD PTR [rbp-0x50]
  40753f:	movzx  esi,WORD PTR [rbp-0x1a]
  407543:	mov    edi,esi
  407545:	mov    QWORD PTR [rbp-0x58],rdi
  407549:	mov    rdi,rcx
  40754c:	mov    rsi,rdx
  40754f:	mov    rdx,QWORD PTR [rbp-0x58]
  407553:	mov    DWORD PTR [rbp-0x5c],eax
  407556:	call   403090 <memcmp@plt>
  40755b:	mov    r8d,DWORD PTR [rbp-0x5c]
  40755f:	cmp    r8d,eax
  407562:	je     407583 <flatcc_builder_create_cached_vtable@@Base+0xf3>
  407568:	mov    rax,QWORD PTR [rbp-0x28]
  40756c:	add    rax,0xc
  407570:	mov    QWORD PTR [rbp-0x38],rax
  407574:	mov    rax,QWORD PTR [rbp-0x28]
  407578:	mov    ecx,DWORD PTR [rax+0xc]
  40757b:	mov    DWORD PTR [rbp-0x44],ecx
  40757e:	jmp    4074e9 <flatcc_builder_create_cached_vtable@@Base+0x59>
  407583:	mov    rax,QWORD PTR [rbp-0x28]
  407587:	mov    ecx,DWORD PTR [rax+0x4]
  40758a:	mov    rax,QWORD PTR [rbp-0x10]
  40758e:	cmp    ecx,DWORD PTR [rax+0x100]
  407594:	je     4075bd <flatcc_builder_create_cached_vtable@@Base+0x12d>
  40759a:	mov    rax,QWORD PTR [rbp-0x28]
  40759e:	mov    QWORD PTR [rbp-0x30],rax
  4075a2:	mov    rax,QWORD PTR [rbp-0x28]
  4075a6:	add    rax,0xc
  4075aa:	mov    QWORD PTR [rbp-0x38],rax
  4075ae:	mov    rax,QWORD PTR [rbp-0x28]
  4075b2:	mov    ecx,DWORD PTR [rax+0xc]
  4075b5:	mov    DWORD PTR [rbp-0x44],ecx
  4075b8:	jmp    4074e9 <flatcc_builder_create_cached_vtable@@Base+0x59>
  4075bd:	mov    rax,QWORD PTR [rbp-0x38]
  4075c1:	cmp    rax,QWORD PTR [rbp-0x40]
  4075c5:	je     4075ee <flatcc_builder_create_cached_vtable@@Base+0x15e>
  4075cb:	mov    rax,QWORD PTR [rbp-0x28]
  4075cf:	mov    ecx,DWORD PTR [rax+0xc]
  4075d2:	mov    rax,QWORD PTR [rbp-0x38]
  4075d6:	mov    DWORD PTR [rax],ecx
  4075d8:	mov    rax,QWORD PTR [rbp-0x40]
  4075dc:	mov    ecx,DWORD PTR [rax]
  4075de:	mov    rax,QWORD PTR [rbp-0x28]
  4075e2:	mov    DWORD PTR [rax+0xc],ecx
  4075e5:	mov    ecx,DWORD PTR [rbp-0x44]
  4075e8:	mov    rax,QWORD PTR [rbp-0x40]
  4075ec:	mov    DWORD PTR [rax],ecx
  4075ee:	mov    rax,QWORD PTR [rbp-0x28]
  4075f2:	mov    ecx,DWORD PTR [rax]
  4075f4:	mov    DWORD PTR [rbp-0x4],ecx
  4075f7:	jmp    4077a8 <flatcc_builder_create_cached_vtable@@Base+0x318>
  4075fc:	mov    eax,0x10
  407601:	mov    ecx,eax
  407603:	xor    r8d,r8d
  407606:	mov    rdi,QWORD PTR [rbp-0x10]
  40760a:	mov    rdx,QWORD PTR [rbp-0x10]
  40760e:	mov    eax,DWORD PTR [rdx+0xe4]
  407614:	mov    edx,eax
  407616:	mov    esi,0x6
  40761b:	call   404cf0 <flatcc_builder_enter_user_frame_ptr@@Base+0xe0>
  407620:	mov    QWORD PTR [rbp-0x28],rax
  407624:	cmp    rax,0x0
  407628:	jne    40763a <flatcc_builder_create_cached_vtable@@Base+0x1aa>
  40762e:	mov    DWORD PTR [rbp-0x4],0x0
  407635:	jmp    4077a8 <flatcc_builder_create_cached_vtable@@Base+0x318>
  40763a:	mov    rax,QWORD PTR [rbp-0x10]
  40763e:	mov    ecx,DWORD PTR [rax+0xe4]
  407644:	mov    DWORD PTR [rbp-0x44],ecx
  407647:	mov    rax,QWORD PTR [rbp-0x10]
  40764b:	mov    ecx,DWORD PTR [rax+0xe4]
  407651:	mov    edx,ecx
  407653:	add    rdx,0x10
  407657:	mov    ecx,edx
  407659:	mov    DWORD PTR [rax+0xe4],ecx
  40765f:	mov    rax,QWORD PTR [rbp-0x10]
  407663:	mov    ecx,DWORD PTR [rax+0x100]
  407669:	mov    rax,QWORD PTR [rbp-0x28]
  40766d:	mov    DWORD PTR [rax+0x4],ecx
  407670:	mov    rax,QWORD PTR [rbp-0x40]
  407674:	mov    ecx,DWORD PTR [rax]
  407676:	mov    rax,QWORD PTR [rbp-0x28]
  40767a:	mov    DWORD PTR [rax+0xc],ecx
  40767d:	mov    ecx,DWORD PTR [rbp-0x44]
  407680:	mov    rax,QWORD PTR [rbp-0x40]
  407684:	mov    DWORD PTR [rax],ecx
  407686:	mov    rdi,QWORD PTR [rbp-0x10]
  40768a:	mov    rsi,QWORD PTR [rbp-0x18]
  40768e:	movzx  edx,WORD PTR [rbp-0x1a]
  407692:	call   407280 <flatcc_builder_create_vtable@@Base>
  407697:	xor    ecx,ecx
  407699:	mov    rsi,QWORD PTR [rbp-0x28]
  40769d:	mov    DWORD PTR [rsi],eax
  40769f:	cmp    ecx,eax
  4076a1:	jne    4076b3 <flatcc_builder_create_cached_vtable@@Base+0x223>
  4076a7:	mov    DWORD PTR [rbp-0x4],0x0
  4076ae:	jmp    4077a8 <flatcc_builder_create_cached_vtable@@Base+0x318>
  4076b3:	cmp    QWORD PTR [rbp-0x30],0x0
  4076b8:	je     4076d1 <flatcc_builder_create_cached_vtable@@Base+0x241>
  4076be:	mov    rax,QWORD PTR [rbp-0x30]
  4076c2:	mov    ecx,DWORD PTR [rax+0x8]
  4076c5:	mov    rax,QWORD PTR [rbp-0x28]
  4076c9:	mov    DWORD PTR [rax+0x8],ecx
  4076cc:	jmp    40779f <flatcc_builder_create_cached_vtable@@Base+0x30f>
  4076d1:	mov    rax,QWORD PTR [rbp-0x10]
  4076d5:	cmp    QWORD PTR [rax+0x118],0x0
  4076dd:	je     407719 <flatcc_builder_create_cached_vtable@@Base+0x289>
  4076e3:	mov    rax,QWORD PTR [rbp-0x10]
  4076e7:	mov    rax,QWORD PTR [rax+0x118]
  4076ee:	mov    rcx,QWORD PTR [rbp-0x10]
  4076f2:	mov    edx,DWORD PTR [rcx+0xe0]
  4076f8:	movzx  esi,WORD PTR [rbp-0x1a]
  4076fc:	add    edx,esi
  4076fe:	mov    edx,edx
  407700:	mov    ecx,edx
  407702:	cmp    rax,rcx
  407705:	jae    407719 <flatcc_builder_create_cached_vtable@@Base+0x289>
  40770b:	mov    rdi,QWORD PTR [rbp-0x10]
  40770f:	call   404760 <flatcc_builder_flush_vtable_cache@@Base>
  407714:	jmp    40779a <flatcc_builder_create_cached_vtable@@Base+0x30a>
  407719:	xor    r8d,r8d
  40771c:	mov    rdi,QWORD PTR [rbp-0x10]
  407720:	mov    rax,QWORD PTR [rbp-0x10]
  407724:	mov    ecx,DWORD PTR [rax+0xe0]
  40772a:	mov    edx,ecx
  40772c:	movzx  ecx,WORD PTR [rbp-0x1a]
  407730:	mov    esi,0x2
  407735:	call   404cf0 <flatcc_builder_enter_user_frame_ptr@@Base+0xe0>
  40773a:	mov    QWORD PTR [rbp-0x50],rax
  40773e:	cmp    rax,0x0
  407742:	jne    407754 <flatcc_builder_create_cached_vtable@@Base+0x2c4>
  407748:	mov    DWORD PTR [rbp-0x4],0xffffffff
  40774f:	jmp    4077a8 <flatcc_builder_create_cached_vtable@@Base+0x318>
  407754:	mov    rax,QWORD PTR [rbp-0x10]
  407758:	mov    ecx,DWORD PTR [rax+0xe0]
  40775e:	mov    rax,QWORD PTR [rbp-0x28]
  407762:	mov    DWORD PTR [rax+0x8],ecx
  407765:	movzx  ecx,WORD PTR [rbp-0x1a]
  407769:	mov    rax,QWORD PTR [rbp-0x10]
  40776d:	add    ecx,DWORD PTR [rax+0xe0]
  407773:	mov    DWORD PTR [rax+0xe0],ecx
  407779:	mov    rax,QWORD PTR [rbp-0x50]
  40777d:	mov    rdx,QWORD PTR [rbp-0x18]
  407781:	movzx  ecx,WORD PTR [rbp-0x1a]
  407785:	mov    esi,ecx
  407787:	mov    rdi,rax
  40778a:	mov    QWORD PTR [rbp-0x68],rsi
  40778e:	mov    rsi,rdx
  407791:	mov    rdx,QWORD PTR [rbp-0x68]
  407795:	call   4030a0 <memcpy@plt>
  40779a:	jmp    40779f <flatcc_builder_create_cached_vtable@@Base+0x30f>
  40779f:	mov    rax,QWORD PTR [rbp-0x28]
  4077a3:	mov    ecx,DWORD PTR [rax]
  4077a5:	mov    DWORD PTR [rbp-0x4],ecx
  4077a8:	mov    eax,DWORD PTR [rbp-0x4]
  4077ab:	add    rsp,0x70
  4077af:	pop    rbp
  4077b0:	ret    
  4077b1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4077bb:	nop    DWORD PTR [rax+rax*1+0x0]
  4077c0:	push   rbp
  4077c1:	mov    rbp,rsp
  4077c4:	sub    rsp,0x20
  4077c8:	mov    QWORD PTR [rbp-0x10],rdi
  4077cc:	mov    DWORD PTR [rbp-0x14],esi
  4077cf:	mov    rdi,QWORD PTR [rbp-0x10]
  4077d3:	cmp    QWORD PTR [rdi+0xd8],0x0
  4077db:	jne    407805 <flatcc_builder_create_cached_vtable@@Base+0x375>
  4077e1:	mov    rdi,QWORD PTR [rbp-0x10]
  4077e5:	call   40a210 <flatcc_builder_get_emit_context@@Base+0xe0>
  4077ea:	cmp    eax,0x0
  4077ed:	je     407800 <flatcc_builder_create_cached_vtable@@Base+0x370>
  4077f3:	mov    QWORD PTR [rbp-0x8],0x0
  4077fb:	jmp    407842 <flatcc_builder_create_cached_vtable@@Base+0x3b2>
  407800:	jmp    407805 <flatcc_builder_create_cached_vtable@@Base+0x375>
  407805:	mov    eax,0x20
  40780a:	mov    ecx,eax
  40780c:	mov    rdx,QWORD PTR [rbp-0x10]
  407810:	mov    rdx,QWORD PTR [rdx+0xa8]
  407817:	mov    QWORD PTR [rbp-0x20],rdx
  40781b:	mov    rdx,QWORD PTR [rbp-0x20]
  40781f:	mov    eax,DWORD PTR [rbp-0x14]
  407822:	mov    rsi,QWORD PTR [rbp-0x10]
  407826:	sub    rcx,QWORD PTR [rsi+0xd8]
  40782d:	mov    edi,ecx
  40782f:	mov    ecx,edi
  407831:	shr    eax,cl
  407833:	mov    eax,eax
  407835:	mov    esi,eax
  407837:	shl    rsi,0x2
  40783b:	add    rdx,rsi
  40783e:	mov    QWORD PTR [rbp-0x8],rdx
  407842:	mov    rax,QWORD PTR [rbp-0x8]
  407846:	add    rsp,0x20
  40784a:	pop    rbp
  40784b:	ret    
  40784c:	nop    DWORD PTR [rax+0x0]

0000000000407850 <flatcc_builder_create_table@@Base>:
  407850:	push   rbp
  407851:	mov    rbp,rsp
  407854:	sub    rsp,0xf0
  40785b:	mov    ax,cx
  40785e:	mov    ecx,DWORD PTR [rbp+0x10]
  407861:	mov    QWORD PTR [rbp-0x10],rdi
  407865:	mov    QWORD PTR [rbp-0x18],rsi
  407869:	mov    QWORD PTR [rbp-0x20],rdx
  40786d:	mov    WORD PTR [rbp-0x22],ax
  407871:	mov    QWORD PTR [rbp-0x30],r8
  407875:	mov    DWORD PTR [rbp-0x34],r9d
  407879:	cmp    DWORD PTR [rbp-0x34],0x0
  40787d:	mov    DWORD PTR [rbp-0xec],ecx
  407883:	jl     40788e <flatcc_builder_create_table@@Base+0x3e>
  407889:	jmp    4078ad <flatcc_builder_create_table@@Base+0x5d>
  40788e:	lea    rdi,[rip+0x72c3]        # 40eb58 <flatcc_builder_padding_base@@Base+0x988>
  407895:	lea    rsi,[rip+0x6b46]        # 40e3e2 <flatcc_builder_padding_base@@Base+0x212>
  40789c:	mov    edx,0x4d5
  4078a1:	lea    rcx,[rip+0x72c2]        # 40eb6a <flatcc_builder_padding_base@@Base+0x99a>
  4078a8:	call   403060 <__assert_fail@plt>
  4078ad:	mov    eax,DWORD PTR [rbp+0x10]
  4078b0:	and    eax,0x1
  4078b3:	cmp    eax,0x0
  4078b6:	je     4078c1 <flatcc_builder_create_table@@Base+0x71>
  4078bc:	jmp    4078e0 <flatcc_builder_create_table@@Base+0x90>
  4078c1:	lea    rdi,[rip+0x733e]        # 40ec06 <flatcc_builder_padding_base@@Base+0xa36>
  4078c8:	lea    rsi,[rip+0x6b13]        # 40e3e2 <flatcc_builder_padding_base@@Base+0x212>
  4078cf:	mov    edx,0x4db
  4078d4:	lea    rcx,[rip+0x728f]        # 40eb6a <flatcc_builder_padding_base@@Base+0x99a>
  4078db:	call   403060 <__assert_fail@plt>
  4078e0:	lea    rdi,[rbp-0x22]
  4078e4:	mov    esi,0x4
  4078e9:	call   406dc0 <flatcc_builder_start_vector@@Base+0xb0>
  4078ee:	mov    rdi,QWORD PTR [rbp-0x10]
  4078f2:	movzx  esi,WORD PTR [rbp-0x22]
  4078f6:	call   405930 <flatcc_builder_create_buffer@@Base+0x410>
  4078fb:	mov    rdi,QWORD PTR [rbp-0x10]
  4078ff:	mov    rax,QWORD PTR [rbp-0x20]
  407903:	mov    esi,eax
  407905:	movzx  edx,WORD PTR [rbp-0x22]
  407909:	call   4053e0 <flatcc_builder_embed_buffer@@Base+0x3f0>
  40790e:	mov    DWORD PTR [rbp-0x3c],eax
  407911:	mov    rdi,QWORD PTR [rbp-0x10]
  407915:	mov    eax,DWORD PTR [rdi+0xf0]
  40791b:	mov    edx,DWORD PTR [rbp-0x3c]
  40791e:	mov    edi,edx
  407920:	add    rdi,QWORD PTR [rbp-0x20]
  407924:	add    rdi,0x4
  407928:	mov    edx,edi
  40792a:	sub    eax,edx
  40792c:	mov    DWORD PTR [rbp-0x4c],eax
  40792f:	mov    eax,DWORD PTR [rbp+0x10]
  407932:	sub    eax,0x1
  407935:	mov    DWORD PTR [rbp-0x48],eax
  407938:	mov    eax,DWORD PTR [rbp-0x4c]
  40793b:	sub    eax,DWORD PTR [rbp-0x48]
  40793e:	mov    DWORD PTR [rbp-0x40],eax
  407941:	mov    eax,DWORD PTR [rbp-0x4c]
  407944:	sub    eax,DWORD PTR [rbp-0x40]
  407947:	cmp    eax,DWORD PTR [rbp-0x48]
  40794a:	je     40795c <flatcc_builder_create_table@@Base+0x10c>
  407950:	mov    DWORD PTR [rbp-0x4],0xffffffff
  407957:	jmp    407b2f <flatcc_builder_create_table@@Base+0x2df>
  40795c:	mov    edi,DWORD PTR [rbp-0x40]
  40795f:	call   405410 <flatcc_builder_embed_buffer@@Base+0x420>
  407964:	mov    DWORD PTR [rbp-0x44],eax
  407967:	mov    DWORD PTR [rbp-0x38],0x0
  40796e:	mov    eax,DWORD PTR [rbp-0x38]
  407971:	cmp    eax,DWORD PTR [rbp-0x34]
  407974:	jge    4079d3 <flatcc_builder_create_table@@Base+0x183>
  40797a:	mov    rax,QWORD PTR [rbp-0x18]
  40797e:	mov    rcx,QWORD PTR [rbp-0x30]
  407982:	movsxd rdx,DWORD PTR [rbp-0x38]
  407986:	movzx  esi,WORD PTR [rcx+rdx*2]
  40798a:	mov    ecx,esi
  40798c:	add    rax,rcx
  40798f:	mov    QWORD PTR [rbp-0x58],rax
  407993:	mov    rax,QWORD PTR [rbp-0x58]
  407997:	mov    esi,DWORD PTR [rax]
  407999:	sub    esi,DWORD PTR [rbp-0x4c]
  40799c:	mov    rax,QWORD PTR [rbp-0x30]
  4079a0:	movsxd rcx,DWORD PTR [rbp-0x38]
  4079a4:	movzx  edi,WORD PTR [rax+rcx*2]
  4079a8:	sub    esi,edi
  4079aa:	mov    esi,esi
  4079ac:	mov    eax,esi
  4079ae:	sub    rax,0x4
  4079b2:	mov    esi,eax
  4079b4:	mov    DWORD PTR [rbp-0x50],esi
  4079b7:	mov    edi,DWORD PTR [rbp-0x50]
  4079ba:	call   405410 <flatcc_builder_embed_buffer@@Base+0x420>
  4079bf:	mov    rcx,QWORD PTR [rbp-0x58]
  4079c3:	mov    DWORD PTR [rcx],eax
  4079c5:	mov    eax,DWORD PTR [rbp-0x38]
  4079c8:	add    eax,0x1
  4079cb:	mov    DWORD PTR [rbp-0x38],eax
  4079ce:	jmp    40796e <flatcc_builder_create_table@@Base+0x11e>
  4079d3:	mov    QWORD PTR [rbp-0xe8],0x0
  4079de:	mov    DWORD PTR [rbp-0xe0],0x0
  4079e8:	mov    rax,QWORD PTR [rbp-0xe8]
  4079ef:	add    rax,0x4
  4079f3:	mov    QWORD PTR [rbp-0xe8],rax
  4079fa:	lea    rax,[rbp-0x44]
  4079fe:	lea    rcx,[rbp-0xe8]
  407a05:	mov    rdx,rcx
  407a08:	add    rdx,0x10
  407a0c:	movsxd rsi,DWORD PTR [rbp-0xe0]
  407a13:	shl    rsi,0x4
  407a17:	add    rdx,rsi
  407a1a:	mov    QWORD PTR [rdx],rax
  407a1d:	add    rcx,0x10
  407a21:	movsxd rax,DWORD PTR [rbp-0xe0]
  407a28:	shl    rax,0x4
  407a2c:	add    rcx,rax
  407a2f:	mov    QWORD PTR [rcx+0x8],0x4
  407a37:	mov    edi,DWORD PTR [rbp-0xe0]
  407a3d:	add    edi,0x1
  407a40:	mov    DWORD PTR [rbp-0xe0],edi
  407a46:	cmp    QWORD PTR [rbp-0x20],0x0
  407a4b:	jbe    407aaf <flatcc_builder_create_table@@Base+0x25f>
  407a51:	mov    rax,QWORD PTR [rbp-0x20]
  407a55:	add    rax,QWORD PTR [rbp-0xe8]
  407a5c:	mov    QWORD PTR [rbp-0xe8],rax
  407a63:	mov    rax,QWORD PTR [rbp-0x18]
  407a67:	lea    rcx,[rbp-0xe8]
  407a6e:	mov    rdx,rcx
  407a71:	add    rdx,0x10
  407a75:	movsxd rsi,DWORD PTR [rbp-0xe0]
  407a7c:	shl    rsi,0x4
  407a80:	add    rdx,rsi
  407a83:	mov    QWORD PTR [rdx],rax
  407a86:	mov    rax,QWORD PTR [rbp-0x20]
  407a8a:	add    rcx,0x10
  407a8e:	movsxd rdx,DWORD PTR [rbp-0xe0]
  407a95:	shl    rdx,0x4
  407a99:	add    rcx,rdx
  407a9c:	mov    QWORD PTR [rcx+0x8],rax
  407aa0:	mov    edi,DWORD PTR [rbp-0xe0]
  407aa6:	add    edi,0x1
  407aa9:	mov    DWORD PTR [rbp-0xe0],edi
  407aaf:	cmp    DWORD PTR [rbp-0x3c],0x0
  407ab3:	jbe    407b1c <flatcc_builder_create_table@@Base+0x2cc>
  407ab9:	lea    rax,[rip+0x6710]        # 40e1d0 <flatcc_builder_padding_base@@Base>
  407ac0:	mov    ecx,DWORD PTR [rbp-0x3c]
  407ac3:	mov    edx,ecx
  407ac5:	add    rdx,QWORD PTR [rbp-0xe8]
  407acc:	mov    QWORD PTR [rbp-0xe8],rdx
  407ad3:	lea    rdx,[rbp-0xe8]
  407ada:	mov    rsi,rdx
  407add:	add    rsi,0x10
  407ae1:	movsxd rdi,DWORD PTR [rbp-0xe0]
  407ae8:	shl    rdi,0x4
  407aec:	add    rsi,rdi
  407aef:	mov    QWORD PTR [rsi],rax
  407af2:	mov    ecx,DWORD PTR [rbp-0x3c]
  407af5:	mov    eax,ecx
  407af7:	add    rdx,0x10
  407afb:	movsxd rsi,DWORD PTR [rbp-0xe0]
  407b02:	shl    rsi,0x4
  407b06:	add    rdx,rsi
  407b09:	mov    QWORD PTR [rdx+0x8],rax
  407b0d:	mov    ecx,DWORD PTR [rbp-0xe0]
  407b13:	add    ecx,0x1
  407b16:	mov    DWORD PTR [rbp-0xe0],ecx
  407b1c:	mov    rdi,QWORD PTR [rbp-0x10]
  407b20:	lea    rsi,[rbp-0xe8]
  407b27:	call   405420 <flatcc_builder_embed_buffer@@Base+0x430>
  407b2c:	mov    DWORD PTR [rbp-0x4],eax
  407b2f:	mov    eax,DWORD PTR [rbp-0x4]
  407b32:	add    rsp,0xf0
  407b39:	pop    rbp
  407b3a:	ret    
  407b3b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000407b40 <flatcc_builder_check_required_field@@Base>:
  407b40:	push   rbp
  407b41:	mov    rbp,rsp
  407b44:	sub    rsp,0x10
  407b48:	mov    ax,si
  407b4b:	mov    QWORD PTR [rbp-0x8],rdi
  407b4f:	mov    WORD PTR [rbp-0xa],ax
  407b53:	mov    rdi,QWORD PTR [rbp-0x8]
  407b57:	mov    rdi,QWORD PTR [rdi+0x30]
  407b5b:	movzx  esi,WORD PTR [rdi+0xe]
  407b5f:	cmp    esi,0x3
  407b62:	jne    407b6d <flatcc_builder_check_required_field@@Base+0x2d>
  407b68:	jmp    407b8c <flatcc_builder_check_required_field@@Base+0x4c>
  407b6d:	lea    rdi,[rip+0x709d]        # 40ec11 <flatcc_builder_padding_base@@Base+0xa41>
  407b74:	lea    rsi,[rip+0x6867]        # 40e3e2 <flatcc_builder_padding_base@@Base+0x212>
  407b7b:	mov    edx,0x4f8
  407b80:	lea    rcx,[rip+0x70b5]        # 40ec3c <flatcc_builder_padding_base@@Base+0xa6c>
  407b87:	call   403060 <__assert_fail@plt>
  407b8c:	xor    eax,eax
  407b8e:	mov    cl,al
  407b90:	movzx  eax,WORD PTR [rbp-0xa]
  407b94:	mov    rdx,QWORD PTR [rbp-0x8]
  407b98:	movzx  esi,WORD PTR [rdx+0x10]
  407b9c:	cmp    eax,esi
  407b9e:	mov    BYTE PTR [rbp-0xb],cl
  407ba1:	jge    407bc4 <flatcc_builder_check_required_field@@Base+0x84>
  407ba7:	mov    rax,QWORD PTR [rbp-0x8]
  407bab:	mov    rax,QWORD PTR [rax+0x8]
  407baf:	movzx  ecx,WORD PTR [rbp-0xa]
  407bb3:	mov    edx,ecx
  407bb5:	movzx  ecx,WORD PTR [rax+rdx*2]
  407bb9:	cmp    ecx,0x0
  407bbc:	setne  sil
  407bc0:	mov    BYTE PTR [rbp-0xb],sil
  407bc4:	mov    al,BYTE PTR [rbp-0xb]
  407bc7:	and    al,0x1
  407bc9:	movzx  eax,al
  407bcc:	add    rsp,0x10
  407bd0:	pop    rbp
  407bd1:	ret    
  407bd2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  407bdc:	nop    DWORD PTR [rax+0x0]

0000000000407be0 <flatcc_builder_check_union_field@@Base>:
  407be0:	push   rbp
  407be1:	mov    rbp,rsp
  407be4:	sub    rsp,0x20
  407be8:	mov    ax,si
  407beb:	mov    QWORD PTR [rbp-0x10],rdi
  407bef:	mov    WORD PTR [rbp-0x12],ax
  407bf3:	mov    rdi,QWORD PTR [rbp-0x10]
  407bf7:	mov    rdi,QWORD PTR [rdi+0x30]
  407bfb:	movzx  esi,WORD PTR [rdi+0xe]
  407bff:	cmp    esi,0x3
  407c02:	jne    407c0d <flatcc_builder_check_union_field@@Base+0x2d>
  407c08:	jmp    407c2c <flatcc_builder_check_union_field@@Base+0x4c>
  407c0d:	lea    rdi,[rip+0x6ffd]        # 40ec11 <flatcc_builder_padding_base@@Base+0xa41>
  407c14:	lea    rsi,[rip+0x67c7]        # 40e3e2 <flatcc_builder_padding_base@@Base+0x212>
  407c1b:	mov    edx,0x4ff
  407c20:	lea    rcx,[rip+0x7068]        # 40ec8f <flatcc_builder_padding_base@@Base+0xabf>
  407c27:	call   403060 <__assert_fail@plt>
  407c2c:	movzx  eax,WORD PTR [rbp-0x12]
  407c30:	cmp    eax,0x0
  407c33:	je     407c4d <flatcc_builder_check_union_field@@Base+0x6d>
  407c39:	movzx  eax,WORD PTR [rbp-0x12]
  407c3d:	mov    rcx,QWORD PTR [rbp-0x10]
  407c41:	movzx  edx,WORD PTR [rcx+0x10]
  407c45:	cmp    eax,edx
  407c47:	jl     407c59 <flatcc_builder_check_union_field@@Base+0x79>
  407c4d:	mov    DWORD PTR [rbp-0x4],0x0
  407c54:	jmp    407d19 <flatcc_builder_check_union_field@@Base+0x139>
  407c59:	mov    rax,QWORD PTR [rbp-0x10]
  407c5d:	mov    rax,QWORD PTR [rax+0x8]
  407c61:	movzx  ecx,WORD PTR [rbp-0x12]
  407c65:	sub    ecx,0x1
  407c68:	movsxd rdx,ecx
  407c6b:	movzx  ecx,WORD PTR [rax+rdx*2]
  407c6f:	cmp    ecx,0x0
  407c72:	jne    407ca1 <flatcc_builder_check_union_field@@Base+0xc1>
  407c78:	mov    rax,QWORD PTR [rbp-0x10]
  407c7c:	mov    rax,QWORD PTR [rax+0x8]
  407c80:	movzx  ecx,WORD PTR [rbp-0x12]
  407c84:	mov    edx,ecx
  407c86:	movzx  ecx,WORD PTR [rax+rdx*2]
  407c8a:	cmp    ecx,0x0
  407c8d:	sete   sil
  407c91:	and    sil,0x1
  407c95:	movzx  ecx,sil
  407c99:	mov    DWORD PTR [rbp-0x4],ecx
  407c9c:	jmp    407d19 <flatcc_builder_check_union_field@@Base+0x139>
  407ca1:	mov    rax,QWORD PTR [rbp-0x10]
  407ca5:	mov    rax,QWORD PTR [rax+0x18]
  407ca9:	mov    rcx,QWORD PTR [rbp-0x10]
  407cad:	mov    rcx,QWORD PTR [rcx+0x8]
  407cb1:	movzx  edx,WORD PTR [rbp-0x12]
  407cb5:	sub    edx,0x1
  407cb8:	movsxd rsi,edx
  407cbb:	movzx  edx,WORD PTR [rcx+rsi*2]
  407cbf:	movsxd rcx,edx
  407cc2:	cmp    BYTE PTR [rax+rcx*1],0x0
  407cc6:	je     407cf5 <flatcc_builder_check_union_field@@Base+0x115>
  407ccc:	mov    rax,QWORD PTR [rbp-0x10]
  407cd0:	mov    rax,QWORD PTR [rax+0x8]
  407cd4:	movzx  ecx,WORD PTR [rbp-0x12]
  407cd8:	mov    edx,ecx
  407cda:	movzx  ecx,WORD PTR [rax+rdx*2]
  407cde:	cmp    ecx,0x0
  407ce1:	setne  sil
  407ce5:	and    sil,0x1
  407ce9:	movzx  ecx,sil
  407ced:	mov    DWORD PTR [rbp-0x4],ecx
  407cf0:	jmp    407d19 <flatcc_builder_check_union_field@@Base+0x139>
  407cf5:	mov    rax,QWORD PTR [rbp-0x10]
  407cf9:	mov    rax,QWORD PTR [rax+0x8]
  407cfd:	movzx  ecx,WORD PTR [rbp-0x12]
  407d01:	mov    edx,ecx
  407d03:	movzx  ecx,WORD PTR [rax+rdx*2]
  407d07:	cmp    ecx,0x0
  407d0a:	sete   sil
  407d0e:	and    sil,0x1
  407d12:	movzx  ecx,sil
  407d16:	mov    DWORD PTR [rbp-0x4],ecx
  407d19:	mov    eax,DWORD PTR [rbp-0x4]
  407d1c:	add    rsp,0x20
  407d20:	pop    rbp
  407d21:	ret    
  407d22:	nop    WORD PTR cs:[rax+rax*1+0x0]
  407d2c:	nop    DWORD PTR [rax+0x0]

0000000000407d30 <flatcc_builder_check_required@@Base>:
  407d30:	push   rbp
  407d31:	mov    rbp,rsp
  407d34:	sub    rsp,0x20
  407d38:	mov    QWORD PTR [rbp-0x10],rdi
  407d3c:	mov    QWORD PTR [rbp-0x18],rsi
  407d40:	mov    DWORD PTR [rbp-0x1c],edx
  407d43:	mov    rsi,QWORD PTR [rbp-0x10]
  407d47:	mov    rsi,QWORD PTR [rsi+0x30]
  407d4b:	movzx  edx,WORD PTR [rsi+0xe]
  407d4f:	cmp    edx,0x3
  407d52:	jne    407d5d <flatcc_builder_check_required@@Base+0x2d>
  407d58:	jmp    407d7c <flatcc_builder_check_required@@Base+0x4c>
  407d5d:	lea    rdi,[rip+0x6ead]        # 40ec11 <flatcc_builder_padding_base@@Base+0xa41>
  407d64:	lea    rsi,[rip+0x6677]        # 40e3e2 <flatcc_builder_padding_base@@Base+0x212>
  407d6b:	mov    edx,0x511
  407d70:	lea    rcx,[rip+0x6f68]        # 40ecdf <flatcc_builder_padding_base@@Base+0xb0f>
  407d77:	call   403060 <__assert_fail@plt>
  407d7c:	mov    rax,QWORD PTR [rbp-0x10]
  407d80:	movzx  ecx,WORD PTR [rax+0x10]
  407d84:	cmp    ecx,DWORD PTR [rbp-0x1c]
  407d87:	jge    407d99 <flatcc_builder_check_required@@Base+0x69>
  407d8d:	mov    DWORD PTR [rbp-0x4],0x0
  407d94:	jmp    407df5 <flatcc_builder_check_required@@Base+0xc5>
  407d99:	mov    DWORD PTR [rbp-0x20],0x0
  407da0:	mov    eax,DWORD PTR [rbp-0x20]
  407da3:	cmp    eax,DWORD PTR [rbp-0x1c]
  407da6:	jge    407dee <flatcc_builder_check_required@@Base+0xbe>
  407dac:	mov    rax,QWORD PTR [rbp-0x10]
  407db0:	mov    rax,QWORD PTR [rax+0x8]
  407db4:	mov    rcx,QWORD PTR [rbp-0x18]
  407db8:	movsxd rdx,DWORD PTR [rbp-0x20]
  407dbc:	movzx  esi,WORD PTR [rcx+rdx*2]
  407dc0:	mov    ecx,esi
  407dc2:	movzx  esi,WORD PTR [rax+rcx*2]
  407dc6:	cmp    esi,0x0
  407dc9:	jne    407ddb <flatcc_builder_check_required@@Base+0xab>
  407dcf:	mov    DWORD PTR [rbp-0x4],0x0
  407dd6:	jmp    407df5 <flatcc_builder_check_required@@Base+0xc5>
  407ddb:	jmp    407de0 <flatcc_builder_check_required@@Base+0xb0>
  407de0:	mov    eax,DWORD PTR [rbp-0x20]
  407de3:	add    eax,0x1
  407de6:	mov    DWORD PTR [rbp-0x20],eax
  407de9:	jmp    407da0 <flatcc_builder_check_required@@Base+0x70>
  407dee:	mov    DWORD PTR [rbp-0x4],0x1
  407df5:	mov    eax,DWORD PTR [rbp-0x4]
  407df8:	add    rsp,0x20
  407dfc:	pop    rbp
  407dfd:	ret    
  407dfe:	xchg   ax,ax

0000000000407e00 <flatcc_builder_end_table@@Base>:
  407e00:	push   rbp
  407e01:	mov    rbp,rsp
  407e04:	sub    rsp,0x40
  407e08:	mov    QWORD PTR [rbp-0x10],rdi
  407e0c:	mov    rdi,QWORD PTR [rbp-0x10]
  407e10:	mov    rdi,QWORD PTR [rdi+0x30]
  407e14:	movzx  eax,WORD PTR [rdi+0xe]
  407e18:	cmp    eax,0x3
  407e1b:	jne    407e26 <flatcc_builder_end_table@@Base+0x26>
  407e21:	jmp    407e45 <flatcc_builder_end_table@@Base+0x45>
  407e26:	lea    rdi,[rip+0x6de4]        # 40ec11 <flatcc_builder_padding_base@@Base+0xa41>
  407e2d:	lea    rsi,[rip+0x65ae]        # 40e3e2 <flatcc_builder_padding_base@@Base+0x212>
  407e34:	mov    edx,0x525
  407e39:	lea    rcx,[rip+0x6ef9]        # 40ed39 <flatcc_builder_padding_base@@Base+0xb69>
  407e40:	call   403060 <__assert_fail@plt>
  407e45:	mov    rax,QWORD PTR [rbp-0x10]
  407e49:	mov    rax,QWORD PTR [rax+0x8]
  407e4d:	add    rax,0xfffffffffffffffc
  407e51:	mov    QWORD PTR [rbp-0x18],rax
  407e55:	mov    rax,QWORD PTR [rbp-0x10]
  407e59:	movzx  ecx,WORD PTR [rax+0x10]
  407e5d:	add    ecx,0x2
  407e60:	movsxd rax,ecx
  407e63:	shl    rax,0x1
  407e67:	mov    dx,ax
  407e6a:	mov    WORD PTR [rbp-0x1a],dx
  407e6e:	mov    dx,WORD PTR [rbp-0x1a]
  407e72:	mov    rax,QWORD PTR [rbp-0x18]
  407e76:	mov    WORD PTR [rax],dx
  407e79:	mov    rax,QWORD PTR [rbp-0x10]
  407e7d:	mov    ecx,DWORD PTR [rax+0x20]
  407e80:	mov    dx,cx
  407e83:	movzx  ecx,dx
  407e86:	mov    eax,ecx
  407e88:	add    rax,0x4
  407e8c:	mov    dx,ax
  407e8f:	mov    rax,QWORD PTR [rbp-0x18]
  407e93:	mov    WORD PTR [rax+0x2],dx
  407e97:	mov    rax,QWORD PTR [rbp-0x18]
  407e9b:	movzx  ecx,WORD PTR [rax]
  407e9e:	mov    rax,QWORD PTR [rbp-0x10]
  407ea2:	xor    ecx,DWORD PTR [rax+0x14]
  407ea5:	imul   ecx,ecx,0x9e3779b1
  407eab:	mov    rax,QWORD PTR [rbp-0x18]
  407eaf:	movzx  esi,WORD PTR [rax+0x2]
  407eb3:	xor    ecx,esi
  407eb5:	imul   ecx,ecx,0x9e3779b1
  407ebb:	mov    rax,QWORD PTR [rbp-0x10]
  407ebf:	mov    DWORD PTR [rax+0x14],ecx
  407ec2:	mov    rdi,QWORD PTR [rbp-0x10]
  407ec6:	mov    rsi,QWORD PTR [rbp-0x18]
  407eca:	mov    dx,WORD PTR [rbp-0x1a]
  407ece:	mov    rax,QWORD PTR [rbp-0x10]
  407ed2:	mov    ecx,DWORD PTR [rax+0x14]
  407ed5:	movzx  edx,dx
  407ed8:	call   407490 <flatcc_builder_create_cached_vtable@@Base>
  407edd:	mov    DWORD PTR [rbp-0x24],eax
  407ee0:	cmp    eax,0x0
  407ee3:	jne    407ef5 <flatcc_builder_end_table@@Base+0xf5>
  407ee9:	mov    DWORD PTR [rbp-0x4],0x0
  407ef0:	jmp    408015 <flatcc_builder_end_table@@Base+0x215>
  407ef5:	xor    esi,esi
  407ef7:	mov    rax,QWORD PTR [rbp-0x18]
  407efb:	movzx  ecx,WORD PTR [rbp-0x1a]
  407eff:	mov    edx,ecx
  407f01:	mov    rdi,rax
  407f04:	call   403070 <memset@plt>
  407f09:	mov    rax,QWORD PTR [rbp-0x10]
  407f0d:	mov    rax,QWORD PTR [rax+0x88]
  407f14:	mov    rdx,QWORD PTR [rbp-0x10]
  407f18:	mov    rdx,QWORD PTR [rdx+0x30]
  407f1c:	mov    ecx,DWORD PTR [rdx+0x14]
  407f1f:	mov    edx,ecx
  407f21:	add    rax,rdx
  407f24:	mov    QWORD PTR [rbp-0x30],rax
  407f28:	mov    rax,QWORD PTR [rbp-0x10]
  407f2c:	mov    rax,QWORD PTR [rax]
  407f2f:	mov    rdx,QWORD PTR [rbp-0x30]
  407f33:	sub    rax,rdx
  407f36:	sar    rax,0x1
  407f3a:	mov    ecx,eax
  407f3c:	mov    DWORD PTR [rbp-0x28],ecx
  407f3f:	mov    rdi,QWORD PTR [rbp-0x10]
  407f43:	mov    rax,QWORD PTR [rbp-0x10]
  407f47:	mov    rsi,QWORD PTR [rax+0x18]
  407f4b:	mov    rax,QWORD PTR [rbp-0x10]
  407f4f:	mov    ecx,DWORD PTR [rax+0x20]
  407f52:	mov    edx,ecx
  407f54:	mov    rax,QWORD PTR [rbp-0x10]
  407f58:	mov    r8w,WORD PTR [rax+0xea]
  407f60:	mov    rax,QWORD PTR [rbp-0x30]
  407f64:	mov    r9d,DWORD PTR [rbp-0x28]
  407f68:	mov    ecx,DWORD PTR [rbp-0x24]
  407f6b:	movzx  r10d,r8w
  407f6f:	mov    DWORD PTR [rbp-0x34],ecx
  407f72:	mov    ecx,r10d
  407f75:	mov    r8,rax
  407f78:	mov    r10d,DWORD PTR [rbp-0x34]
  407f7c:	mov    DWORD PTR [rsp],r10d
  407f80:	call   407850 <flatcc_builder_create_table@@Base>
  407f85:	xor    ecx,ecx
  407f87:	mov    DWORD PTR [rbp-0x20],eax
  407f8a:	cmp    ecx,eax
  407f8c:	jne    407f9e <flatcc_builder_end_table@@Base+0x19e>
  407f92:	mov    DWORD PTR [rbp-0x4],0x0
  407f99:	jmp    408015 <flatcc_builder_end_table@@Base+0x215>
  407f9e:	mov    rax,QWORD PTR [rbp-0x10]
  407fa2:	mov    rax,QWORD PTR [rax+0x30]
  407fa6:	mov    ecx,DWORD PTR [rax+0x18]
  407fa9:	mov    rax,QWORD PTR [rbp-0x10]
  407fad:	mov    DWORD PTR [rax+0x14],ecx
  407fb0:	mov    rax,QWORD PTR [rbp-0x10]
  407fb4:	mov    rax,QWORD PTR [rax+0x30]
  407fb8:	mov    dx,WORD PTR [rax+0x1c]
  407fbc:	mov    rax,QWORD PTR [rbp-0x10]
  407fc0:	mov    WORD PTR [rax+0x10],dx
  407fc4:	mov    rax,QWORD PTR [rbp-0x10]
  407fc8:	mov    rax,QWORD PTR [rax+0x58]
  407fcc:	mov    rsi,QWORD PTR [rbp-0x10]
  407fd0:	mov    rsi,QWORD PTR [rsi+0x30]
  407fd4:	mov    ecx,DWORD PTR [rsi+0x10]
  407fd7:	mov    esi,ecx
  407fd9:	add    rax,rsi
  407fdc:	mov    rsi,QWORD PTR [rbp-0x10]
  407fe0:	mov    QWORD PTR [rsi+0x8],rax
  407fe4:	mov    rax,QWORD PTR [rbp-0x10]
  407fe8:	mov    rax,QWORD PTR [rax+0x88]
  407fef:	mov    rsi,QWORD PTR [rbp-0x10]
  407ff3:	mov    rsi,QWORD PTR [rsi+0x30]
  407ff7:	mov    ecx,DWORD PTR [rsi+0x14]
  407ffa:	mov    esi,ecx
  407ffc:	add    rax,rsi
  407fff:	mov    rsi,QWORD PTR [rbp-0x10]
  408003:	mov    QWORD PTR [rsi],rax
  408006:	mov    rdi,QWORD PTR [rbp-0x10]
  40800a:	call   405fa0 <flatcc_builder_end_buffer@@Base+0x160>
  40800f:	mov    ecx,DWORD PTR [rbp-0x20]
  408012:	mov    DWORD PTR [rbp-0x4],ecx
  408015:	mov    eax,DWORD PTR [rbp-0x4]
  408018:	add    rsp,0x40
  40801c:	pop    rbp
  40801d:	ret    
  40801e:	xchg   ax,ax

0000000000408020 <flatcc_builder_create_vector@@Base>:
  408020:	push   rbp
  408021:	mov    rbp,rsp
  408024:	sub    rsp,0xe0
  40802b:	mov    ax,r8w
  40802f:	mov    QWORD PTR [rbp-0x10],rdi
  408033:	mov    QWORD PTR [rbp-0x18],rsi
  408037:	mov    QWORD PTR [rbp-0x20],rdx
  40803b:	mov    QWORD PTR [rbp-0x28],rcx
  40803f:	mov    WORD PTR [rbp-0x2a],ax
  408043:	mov    QWORD PTR [rbp-0x38],r9
  408047:	mov    rcx,QWORD PTR [rbp-0x20]
  40804b:	cmp    rcx,QWORD PTR [rbp-0x38]
  40804f:	jbe    408093 <flatcc_builder_create_vector@@Base+0x73>
  408055:	mov    rax,QWORD PTR [rbp-0x20]
  408059:	cmp    rax,QWORD PTR [rbp-0x38]
  40805d:	ja     408068 <flatcc_builder_create_vector@@Base+0x48>
  408063:	jmp    408087 <flatcc_builder_create_vector@@Base+0x67>
  408068:	lea    rdi,[rip+0x6d0c]        # 40ed7b <flatcc_builder_padding_base@@Base+0xbab>
  40806f:	lea    rsi,[rip+0x636c]        # 40e3e2 <flatcc_builder_padding_base@@Base+0x212>
  408076:	mov    edx,0x555
  40807b:	lea    rcx,[rip+0x6d0c]        # 40ed8e <flatcc_builder_padding_base@@Base+0xbbe>
  408082:	call   403060 <__assert_fail@plt>
  408087:	mov    DWORD PTR [rbp-0x4],0x0
  40808e:	jmp    408240 <flatcc_builder_create_vector@@Base+0x220>
  408093:	lea    rdi,[rbp-0x2a]
  408097:	mov    esi,0x4
  40809c:	call   406dc0 <flatcc_builder_start_vector@@Base+0xb0>
  4080a1:	mov    rdi,QWORD PTR [rbp-0x10]
  4080a5:	movzx  esi,WORD PTR [rbp-0x2a]
  4080a9:	call   405930 <flatcc_builder_create_buffer@@Base+0x410>
  4080ae:	mov    rdi,QWORD PTR [rbp-0x20]
  4080b2:	mov    esi,edi
  4080b4:	mov    rdi,QWORD PTR [rbp-0x28]
  4080b8:	mov    eax,edi
  4080ba:	imul   esi,eax
  4080bd:	mov    DWORD PTR [rbp-0x3c],esi
  4080c0:	mov    rdi,QWORD PTR [rbp-0x20]
  4080c4:	mov    eax,edi
  4080c6:	mov    edi,eax
  4080c8:	call   405410 <flatcc_builder_embed_buffer@@Base+0x420>
  4080cd:	mov    DWORD PTR [rbp-0x44],eax
  4080d0:	mov    rdi,QWORD PTR [rbp-0x10]
  4080d4:	mov    esi,DWORD PTR [rbp-0x3c]
  4080d7:	movzx  edx,WORD PTR [rbp-0x2a]
  4080db:	call   4053e0 <flatcc_builder_embed_buffer@@Base+0x3f0>
  4080e0:	mov    DWORD PTR [rbp-0x40],eax
  4080e3:	mov    QWORD PTR [rbp-0xd8],0x0
  4080ee:	mov    DWORD PTR [rbp-0xd0],0x0
  4080f8:	mov    rdi,QWORD PTR [rbp-0xd8]
  4080ff:	add    rdi,0x4
  408103:	mov    QWORD PTR [rbp-0xd8],rdi
  40810a:	lea    rdi,[rbp-0x44]
  40810e:	lea    rcx,[rbp-0xd8]
  408115:	mov    r8,rcx
  408118:	add    r8,0x10
  40811c:	movsxd r9,DWORD PTR [rbp-0xd0]
  408123:	shl    r9,0x4
  408127:	add    r8,r9
  40812a:	mov    QWORD PTR [r8],rdi
  40812d:	add    rcx,0x10
  408131:	movsxd rdi,DWORD PTR [rbp-0xd0]
  408138:	shl    rdi,0x4
  40813c:	add    rcx,rdi
  40813f:	mov    QWORD PTR [rcx+0x8],0x4
  408147:	mov    eax,DWORD PTR [rbp-0xd0]
  40814d:	add    eax,0x1
  408150:	mov    DWORD PTR [rbp-0xd0],eax
  408156:	cmp    DWORD PTR [rbp-0x3c],0x0
  40815a:	jbe    4081c0 <flatcc_builder_create_vector@@Base+0x1a0>
  408160:	mov    eax,DWORD PTR [rbp-0x3c]
  408163:	mov    ecx,eax
  408165:	add    rcx,QWORD PTR [rbp-0xd8]
  40816c:	mov    QWORD PTR [rbp-0xd8],rcx
  408173:	mov    rcx,QWORD PTR [rbp-0x18]
  408177:	lea    rdx,[rbp-0xd8]
  40817e:	mov    rsi,rdx
  408181:	add    rsi,0x10
  408185:	movsxd rdi,DWORD PTR [rbp-0xd0]
  40818c:	shl    rdi,0x4
  408190:	add    rsi,rdi
  408193:	mov    QWORD PTR [rsi],rcx
  408196:	mov    eax,DWORD PTR [rbp-0x3c]
  408199:	mov    ecx,eax
  40819b:	add    rdx,0x10
  40819f:	movsxd rsi,DWORD PTR [rbp-0xd0]
  4081a6:	shl    rsi,0x4
  4081aa:	add    rdx,rsi
  4081ad:	mov    QWORD PTR [rdx+0x8],rcx
  4081b1:	mov    eax,DWORD PTR [rbp-0xd0]
  4081b7:	add    eax,0x1
  4081ba:	mov    DWORD PTR [rbp-0xd0],eax
  4081c0:	cmp    DWORD PTR [rbp-0x40],0x0
  4081c4:	jbe    40822d <flatcc_builder_create_vector@@Base+0x20d>
  4081ca:	lea    rax,[rip+0x5fff]        # 40e1d0 <flatcc_builder_padding_base@@Base>
  4081d1:	mov    ecx,DWORD PTR [rbp-0x40]
  4081d4:	mov    edx,ecx
  4081d6:	add    rdx,QWORD PTR [rbp-0xd8]
  4081dd:	mov    QWORD PTR [rbp-0xd8],rdx
  4081e4:	lea    rdx,[rbp-0xd8]
  4081eb:	mov    rsi,rdx
  4081ee:	add    rsi,0x10
  4081f2:	movsxd rdi,DWORD PTR [rbp-0xd0]
  4081f9:	shl    rdi,0x4
  4081fd:	add    rsi,rdi
  408200:	mov    QWORD PTR [rsi],rax
  408203:	mov    ecx,DWORD PTR [rbp-0x40]
  408206:	mov    eax,ecx
  408208:	add    rdx,0x10
  40820c:	movsxd rsi,DWORD PTR [rbp-0xd0]
  408213:	shl    rsi,0x4
  408217:	add    rdx,rsi
  40821a:	mov    QWORD PTR [rdx+0x8],rax
  40821e:	mov    ecx,DWORD PTR [rbp-0xd0]
  408224:	add    ecx,0x1
  408227:	mov    DWORD PTR [rbp-0xd0],ecx
  40822d:	mov    rdi,QWORD PTR [rbp-0x10]
  408231:	lea    rsi,[rbp-0xd8]
  408238:	call   405420 <flatcc_builder_embed_buffer@@Base+0x430>
  40823d:	mov    DWORD PTR [rbp-0x4],eax
  408240:	mov    eax,DWORD PTR [rbp-0x4]
  408243:	add    rsp,0xe0
  40824a:	pop    rbp
  40824b:	ret    
  40824c:	nop    DWORD PTR [rax+0x0]

0000000000408250 <flatcc_builder_end_vector@@Base>:
  408250:	push   rbp
  408251:	mov    rbp,rsp
  408254:	sub    rsp,0x20
  408258:	mov    QWORD PTR [rbp-0x10],rdi
  40825c:	mov    rdi,QWORD PTR [rbp-0x10]
  408260:	mov    rdi,QWORD PTR [rdi+0x30]
  408264:	movzx  eax,WORD PTR [rdi+0xe]
  408268:	cmp    eax,0x4
  40826b:	jne    408276 <flatcc_builder_end_vector@@Base+0x26>
  408271:	jmp    408295 <flatcc_builder_end_vector@@Base+0x45>
  408276:	lea    rdi,[rip+0x64a2]        # 40e71f <flatcc_builder_padding_base@@Base+0x54f>
  40827d:	lea    rsi,[rip+0x615e]        # 40e3e2 <flatcc_builder_padding_base@@Base+0x212>
  408284:	mov    edx,0x578
  408289:	lea    rcx,[rip+0x6b74]        # 40ee04 <flatcc_builder_padding_base@@Base+0xc34>
  408290:	call   403060 <__assert_fail@plt>
  408295:	mov    rdi,QWORD PTR [rbp-0x10]
  408299:	mov    rax,QWORD PTR [rbp-0x10]
  40829d:	mov    rsi,QWORD PTR [rax+0x18]
  4082a1:	mov    rax,QWORD PTR [rbp-0x10]
  4082a5:	mov    rax,QWORD PTR [rax+0x30]
  4082a9:	mov    ecx,DWORD PTR [rax+0x14]
  4082ac:	mov    edx,ecx
  4082ae:	mov    rax,QWORD PTR [rbp-0x10]
  4082b2:	mov    rax,QWORD PTR [rax+0x30]
  4082b6:	mov    ecx,DWORD PTR [rax+0x10]
  4082b9:	mov    rax,QWORD PTR [rbp-0x10]
  4082bd:	mov    r8w,WORD PTR [rax+0xea]
  4082c5:	mov    rax,QWORD PTR [rbp-0x10]
  4082c9:	mov    rax,QWORD PTR [rax+0x30]
  4082cd:	mov    r9d,DWORD PTR [rax+0x18]
  4082d1:	movzx  r8d,r8w
  4082d5:	call   408020 <flatcc_builder_create_vector@@Base>
  4082da:	xor    r8d,r8d
  4082dd:	mov    DWORD PTR [rbp-0x14],eax
  4082e0:	cmp    r8d,eax
  4082e3:	jne    4082f5 <flatcc_builder_end_vector@@Base+0xa5>
  4082e9:	mov    DWORD PTR [rbp-0x4],0x0
  4082f0:	jmp    408304 <flatcc_builder_end_vector@@Base+0xb4>
  4082f5:	mov    rdi,QWORD PTR [rbp-0x10]
  4082f9:	call   405fa0 <flatcc_builder_end_buffer@@Base+0x160>
  4082fe:	mov    eax,DWORD PTR [rbp-0x14]
  408301:	mov    DWORD PTR [rbp-0x4],eax
  408304:	mov    eax,DWORD PTR [rbp-0x4]
  408307:	add    rsp,0x20
  40830b:	pop    rbp
  40830c:	ret    
  40830d:	nop    DWORD PTR [rax]

0000000000408310 <flatcc_builder_vector_count@@Base>:
  408310:	push   rbp
  408311:	mov    rbp,rsp
  408314:	mov    QWORD PTR [rbp-0x8],rdi
  408318:	mov    rdi,QWORD PTR [rbp-0x8]
  40831c:	mov    rdi,QWORD PTR [rdi+0x30]
  408320:	mov    eax,DWORD PTR [rdi+0x14]
  408323:	pop    rbp
  408324:	ret    
  408325:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40832f:	nop

0000000000408330 <flatcc_builder_vector_edit@@Base>:
  408330:	push   rbp
  408331:	mov    rbp,rsp
  408334:	mov    QWORD PTR [rbp-0x8],rdi
  408338:	mov    rdi,QWORD PTR [rbp-0x8]
  40833c:	mov    rax,QWORD PTR [rdi+0x18]
  408340:	pop    rbp
  408341:	ret    
  408342:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40834c:	nop    DWORD PTR [rax+0x0]

0000000000408350 <flatcc_builder_create_offset_vector_direct@@Base>:
  408350:	push   rbp
  408351:	mov    rbp,rsp
  408354:	sub    rsp,0x20
  408358:	xor    eax,eax
  40835a:	mov    ecx,eax
  40835c:	mov    QWORD PTR [rbp-0x8],rdi
  408360:	mov    QWORD PTR [rbp-0x10],rsi
  408364:	mov    QWORD PTR [rbp-0x18],rdx
  408368:	mov    rdi,QWORD PTR [rbp-0x8]
  40836c:	mov    rsi,QWORD PTR [rbp-0x10]
  408370:	mov    rdx,QWORD PTR [rbp-0x18]
  408374:	call   408380 <flatcc_builder_create_offset_vector_direct@@Base+0x30>
  408379:	add    rsp,0x20
  40837d:	pop    rbp
  40837e:	ret    
  40837f:	nop
  408380:	push   rbp
  408381:	mov    rbp,rsp
  408384:	sub    rsp,0xd0
  40838b:	mov    QWORD PTR [rbp-0x10],rdi
  40838f:	mov    QWORD PTR [rbp-0x18],rsi
  408393:	mov    QWORD PTR [rbp-0x20],rdx
  408397:	mov    QWORD PTR [rbp-0x28],rcx
  40839b:	mov    rcx,QWORD PTR [rbp-0x20]
  40839f:	mov    eax,ecx
  4083a1:	mov    eax,eax
  4083a3:	mov    ecx,eax
  4083a5:	cmp    rcx,0x3fffffff
  4083ac:	jbe    4083be <flatcc_builder_create_offset_vector_direct@@Base+0x6e>
  4083b2:	mov    DWORD PTR [rbp-0x4],0x0
  4083b9:	jmp    4086af <flatcc_builder_create_offset_vector_direct@@Base+0x35f>
  4083be:	mov    rdi,QWORD PTR [rbp-0x10]
  4083c2:	mov    esi,0x4
  4083c7:	call   405930 <flatcc_builder_create_buffer@@Base+0x410>
  4083cc:	mov    rdi,QWORD PTR [rbp-0x20]
  4083d0:	mov    esi,edi
  4083d2:	mov    esi,esi
  4083d4:	mov    edi,esi
  4083d6:	shl    rdi,0x2
  4083da:	mov    esi,edi
  4083dc:	mov    DWORD PTR [rbp-0x2c],esi
  4083df:	mov    rdi,QWORD PTR [rbp-0x20]
  4083e3:	mov    esi,edi
  4083e5:	mov    edi,esi
  4083e7:	call   405410 <flatcc_builder_embed_buffer@@Base+0x420>
  4083ec:	mov    DWORD PTR [rbp-0x34],eax
  4083ef:	mov    rdi,QWORD PTR [rbp-0x10]
  4083f3:	mov    esi,DWORD PTR [rbp-0x2c]
  4083f6:	mov    edx,0x4
  4083fb:	call   4053e0 <flatcc_builder_embed_buffer@@Base+0x3f0>
  408400:	mov    DWORD PTR [rbp-0x30],eax
  408403:	mov    QWORD PTR [rbp-0xd0],0x0
  40840e:	mov    DWORD PTR [rbp-0xc8],0x0
  408418:	mov    rdi,QWORD PTR [rbp-0xd0]
  40841f:	add    rdi,0x4
  408423:	mov    QWORD PTR [rbp-0xd0],rdi
  40842a:	lea    rdi,[rbp-0x34]
  40842e:	lea    rcx,[rbp-0xd0]
  408435:	mov    r8,rcx
  408438:	add    r8,0x10
  40843c:	movsxd r9,DWORD PTR [rbp-0xc8]
  408443:	shl    r9,0x4
  408447:	add    r8,r9
  40844a:	mov    QWORD PTR [r8],rdi
  40844d:	add    rcx,0x10
  408451:	movsxd rdi,DWORD PTR [rbp-0xc8]
  408458:	shl    rdi,0x4
  40845c:	add    rcx,rdi
  40845f:	mov    QWORD PTR [rcx+0x8],0x4
  408467:	mov    eax,DWORD PTR [rbp-0xc8]
  40846d:	add    eax,0x1
  408470:	mov    DWORD PTR [rbp-0xc8],eax
  408476:	cmp    DWORD PTR [rbp-0x2c],0x0
  40847a:	jbe    4084e0 <flatcc_builder_create_offset_vector_direct@@Base+0x190>
  408480:	mov    eax,DWORD PTR [rbp-0x2c]
  408483:	mov    ecx,eax
  408485:	add    rcx,QWORD PTR [rbp-0xd0]
  40848c:	mov    QWORD PTR [rbp-0xd0],rcx
  408493:	mov    rcx,QWORD PTR [rbp-0x18]
  408497:	lea    rdx,[rbp-0xd0]
  40849e:	mov    rsi,rdx
  4084a1:	add    rsi,0x10
  4084a5:	movsxd rdi,DWORD PTR [rbp-0xc8]
  4084ac:	shl    rdi,0x4
  4084b0:	add    rsi,rdi
  4084b3:	mov    QWORD PTR [rsi],rcx
  4084b6:	mov    eax,DWORD PTR [rbp-0x2c]
  4084b9:	mov    ecx,eax
  4084bb:	add    rdx,0x10
  4084bf:	movsxd rsi,DWORD PTR [rbp-0xc8]
  4084c6:	shl    rsi,0x4
  4084ca:	add    rdx,rsi
  4084cd:	mov    QWORD PTR [rdx+0x8],rcx
  4084d1:	mov    eax,DWORD PTR [rbp-0xc8]
  4084d7:	add    eax,0x1
  4084da:	mov    DWORD PTR [rbp-0xc8],eax
  4084e0:	cmp    DWORD PTR [rbp-0x30],0x0
  4084e4:	jbe    40854d <flatcc_builder_create_offset_vector_direct@@Base+0x1fd>
  4084ea:	lea    rax,[rip+0x5cdf]        # 40e1d0 <flatcc_builder_padding_base@@Base>
  4084f1:	mov    ecx,DWORD PTR [rbp-0x30]
  4084f4:	mov    edx,ecx
  4084f6:	add    rdx,QWORD PTR [rbp-0xd0]
  4084fd:	mov    QWORD PTR [rbp-0xd0],rdx
  408504:	lea    rdx,[rbp-0xd0]
  40850b:	mov    rsi,rdx
  40850e:	add    rsi,0x10
  408512:	movsxd rdi,DWORD PTR [rbp-0xc8]
  408519:	shl    rdi,0x4
  40851d:	add    rsi,rdi
  408520:	mov    QWORD PTR [rsi],rax
  408523:	mov    ecx,DWORD PTR [rbp-0x30]
  408526:	mov    eax,ecx
  408528:	add    rdx,0x10
  40852c:	movsxd rsi,DWORD PTR [rbp-0xc8]
  408533:	shl    rsi,0x4
  408537:	add    rdx,rsi
  40853a:	mov    QWORD PTR [rdx+0x8],rax
  40853e:	mov    ecx,DWORD PTR [rbp-0xc8]
  408544:	add    ecx,0x1
  408547:	mov    DWORD PTR [rbp-0xc8],ecx
  40854d:	mov    rax,QWORD PTR [rbp-0x10]
  408551:	mov    ecx,DWORD PTR [rax+0xf0]
  408557:	mov    rax,QWORD PTR [rbp-0xd0]
  40855e:	mov    edx,eax
  408560:	sub    ecx,edx
  408562:	mov    DWORD PTR [rbp-0x38],ecx
  408565:	mov    DWORD PTR [rbp-0x40],0x0
  40856c:	mov    eax,DWORD PTR [rbp-0x40]
  40856f:	mov    rcx,QWORD PTR [rbp-0x20]
  408573:	mov    edx,ecx
  408575:	cmp    eax,edx
  408577:	jae    40869c <flatcc_builder_create_offset_vector_direct@@Base+0x34c>
  40857d:	mov    rax,QWORD PTR [rbp-0x18]
  408581:	mov    ecx,DWORD PTR [rbp-0x40]
  408584:	mov    edx,ecx
  408586:	cmp    DWORD PTR [rax+rdx*4],0x0
  40858a:	je     40861b <flatcc_builder_create_offset_vector_direct@@Base+0x2cb>
  408590:	mov    rax,QWORD PTR [rbp-0x18]
  408594:	mov    ecx,DWORD PTR [rbp-0x40]
  408597:	mov    edx,ecx
  408599:	mov    ecx,DWORD PTR [rax+rdx*4]
  40859c:	sub    ecx,DWORD PTR [rbp-0x38]
  40859f:	mov    ecx,ecx
  4085a1:	mov    eax,ecx
  4085a3:	mov    ecx,DWORD PTR [rbp-0x40]
  4085a6:	mov    edx,ecx
  4085a8:	shl    rdx,0x2
  4085ac:	sub    rax,rdx
  4085af:	sub    rax,0x4
  4085b3:	mov    ecx,eax
  4085b5:	mov    DWORD PTR [rbp-0x3c],ecx
  4085b8:	mov    edi,DWORD PTR [rbp-0x3c]
  4085bb:	call   405410 <flatcc_builder_embed_buffer@@Base+0x420>
  4085c0:	mov    rdx,QWORD PTR [rbp-0x18]
  4085c4:	mov    ecx,DWORD PTR [rbp-0x40]
  4085c7:	mov    esi,ecx
  4085c9:	mov    DWORD PTR [rdx+rsi*4],eax
  4085cc:	cmp    QWORD PTR [rbp-0x28],0x0
  4085d1:	je     408616 <flatcc_builder_create_offset_vector_direct@@Base+0x2c6>
  4085d7:	mov    rax,QWORD PTR [rbp-0x28]
  4085db:	mov    ecx,DWORD PTR [rbp-0x40]
  4085de:	mov    edx,ecx
  4085e0:	movzx  ecx,BYTE PTR [rax+rdx*1]
  4085e4:	cmp    ecx,0x0
  4085e7:	je     4085f2 <flatcc_builder_create_offset_vector_direct@@Base+0x2a2>
  4085ed:	jmp    408611 <flatcc_builder_create_offset_vector_direct@@Base+0x2c1>
  4085f2:	lea    rdi,[rip+0x6f9d]        # 40f596 <flatcc_builder_padding_base@@Base+0x13c6>
  4085f9:	lea    rsi,[rip+0x5de2]        # 40e3e2 <flatcc_builder_padding_base@@Base+0x212>
  408600:	mov    edx,0x5b1
  408605:	lea    rcx,[rip+0x6f98]        # 40f5a4 <flatcc_builder_padding_base@@Base+0x13d4>
  40860c:	call   403060 <__assert_fail@plt>
  408611:	jmp    408616 <flatcc_builder_create_offset_vector_direct@@Base+0x2c6>
  408616:	jmp    408689 <flatcc_builder_create_offset_vector_direct@@Base+0x339>
  40861b:	cmp    QWORD PTR [rbp-0x28],0x0
  408620:	je     408665 <flatcc_builder_create_offset_vector_direct@@Base+0x315>
  408626:	mov    rax,QWORD PTR [rbp-0x28]
  40862a:	mov    ecx,DWORD PTR [rbp-0x40]
  40862d:	mov    edx,ecx
  40862f:	movzx  ecx,BYTE PTR [rax+rdx*1]
  408633:	cmp    ecx,0x0
  408636:	jne    408641 <flatcc_builder_create_offset_vector_direct@@Base+0x2f1>
  40863c:	jmp    408660 <flatcc_builder_create_offset_vector_direct@@Base+0x310>
  408641:	lea    rdi,[rip+0x6fdf]        # 40f627 <flatcc_builder_padding_base@@Base+0x1457>
  408648:	lea    rsi,[rip+0x5d93]        # 40e3e2 <flatcc_builder_padding_base@@Base+0x212>
  40864f:	mov    edx,0x5b5
  408654:	lea    rcx,[rip+0x6f49]        # 40f5a4 <flatcc_builder_padding_base@@Base+0x13d4>
  40865b:	call   403060 <__assert_fail@plt>
  408660:	jmp    408684 <flatcc_builder_create_offset_vector_direct@@Base+0x334>
  408665:	lea    rdi,[rip+0x6f36]        # 40f5a2 <flatcc_builder_padding_base@@Base+0x13d2>
  40866c:	lea    rsi,[rip+0x5d6f]        # 40e3e2 <flatcc_builder_padding_base@@Base+0x212>
  408673:	mov    edx,0x5b7
  408678:	lea    rcx,[rip+0x6f25]        # 40f5a4 <flatcc_builder_padding_base@@Base+0x13d4>
  40867f:	call   403060 <__assert_fail@plt>
  408684:	jmp    408689 <flatcc_builder_create_offset_vector_direct@@Base+0x339>
  408689:	jmp    40868e <flatcc_builder_create_offset_vector_direct@@Base+0x33e>
  40868e:	mov    eax,DWORD PTR [rbp-0x40]
  408691:	add    eax,0x1
  408694:	mov    DWORD PTR [rbp-0x40],eax
  408697:	jmp    40856c <flatcc_builder_create_offset_vector_direct@@Base+0x21c>
  40869c:	mov    rdi,QWORD PTR [rbp-0x10]
  4086a0:	lea    rsi,[rbp-0xd0]
  4086a7:	call   405420 <flatcc_builder_embed_buffer@@Base+0x430>
  4086ac:	mov    DWORD PTR [rbp-0x4],eax
  4086af:	mov    eax,DWORD PTR [rbp-0x4]
  4086b2:	add    rsp,0xd0
  4086b9:	pop    rbp
  4086ba:	ret    
  4086bb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004086c0 <flatcc_builder_end_offset_vector_for_unions@@Base>:
  4086c0:	push   rbp
  4086c1:	mov    rbp,rsp
  4086c4:	sub    rsp,0x20
  4086c8:	mov    QWORD PTR [rbp-0x10],rdi
  4086cc:	mov    QWORD PTR [rbp-0x18],rsi
  4086d0:	mov    rsi,QWORD PTR [rbp-0x10]
  4086d4:	mov    rsi,QWORD PTR [rsi+0x30]
  4086d8:	movzx  eax,WORD PTR [rsi+0xe]
  4086dc:	cmp    eax,0x5
  4086df:	jne    4086ea <flatcc_builder_end_offset_vector_for_unions@@Base+0x2a>
  4086e5:	jmp    408709 <flatcc_builder_end_offset_vector_for_unions@@Base+0x49>
  4086ea:	lea    rdi,[rip+0x6127]        # 40e818 <flatcc_builder_padding_base@@Base+0x648>
  4086f1:	lea    rsi,[rip+0x5cea]        # 40e3e2 <flatcc_builder_padding_base@@Base+0x212>
  4086f8:	mov    edx,0x5d5
  4086fd:	lea    rcx,[rip+0x678d]        # 40ee91 <flatcc_builder_padding_base@@Base+0xcc1>
  408704:	call   403060 <__assert_fail@plt>
  408709:	mov    rdi,QWORD PTR [rbp-0x10]
  40870d:	mov    rax,QWORD PTR [rbp-0x10]
  408711:	mov    rax,QWORD PTR [rax+0x18]
  408715:	mov    rcx,QWORD PTR [rbp-0x10]
  408719:	mov    rcx,QWORD PTR [rcx+0x30]
  40871d:	mov    edx,DWORD PTR [rcx+0x14]
  408720:	mov    rcx,QWORD PTR [rbp-0x18]
  408724:	mov    rsi,rax
  408727:	call   408380 <flatcc_builder_create_offset_vector_direct@@Base+0x30>
  40872c:	xor    r8d,r8d
  40872f:	mov    DWORD PTR [rbp-0x1c],eax
  408732:	cmp    r8d,eax
  408735:	jne    408747 <flatcc_builder_end_offset_vector_for_unions@@Base+0x87>
  40873b:	mov    DWORD PTR [rbp-0x4],0x0
  408742:	jmp    408756 <flatcc_builder_end_offset_vector_for_unions@@Base+0x96>
  408747:	mov    rdi,QWORD PTR [rbp-0x10]
  40874b:	call   405fa0 <flatcc_builder_end_buffer@@Base+0x160>
  408750:	mov    eax,DWORD PTR [rbp-0x1c]
  408753:	mov    DWORD PTR [rbp-0x4],eax
  408756:	mov    eax,DWORD PTR [rbp-0x4]
  408759:	add    rsp,0x20
  40875d:	pop    rbp
  40875e:	ret    
  40875f:	nop

0000000000408760 <flatcc_builder_offset_vector_edit@@Base>:
  408760:	push   rbp
  408761:	mov    rbp,rsp
  408764:	mov    QWORD PTR [rbp-0x8],rdi
  408768:	mov    rdi,QWORD PTR [rbp-0x8]
  40876c:	mov    rax,QWORD PTR [rdi+0x18]
  408770:	pop    rbp
  408771:	ret    
  408772:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40877c:	nop    DWORD PTR [rax+0x0]

0000000000408780 <flatcc_builder_offset_vector_count@@Base>:
  408780:	push   rbp
  408781:	mov    rbp,rsp
  408784:	mov    QWORD PTR [rbp-0x8],rdi
  408788:	mov    rdi,QWORD PTR [rbp-0x8]
  40878c:	mov    rdi,QWORD PTR [rdi+0x30]
  408790:	mov    eax,DWORD PTR [rdi+0x14]
  408793:	pop    rbp
  408794:	ret    
  408795:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40879f:	nop

00000000004087a0 <flatcc_builder_table_add_union@@Base>:
  4087a0:	push   rbp
  4087a1:	mov    rbp,rsp
  4087a4:	sub    rsp,0x30
  4087a8:	mov    QWORD PTR [rbp-0x10],rdx
  4087ac:	mov    QWORD PTR [rbp-0x18],rdi
  4087b0:	mov    DWORD PTR [rbp-0x1c],esi
  4087b3:	mov    rdx,QWORD PTR [rbp-0x18]
  4087b7:	mov    rdx,QWORD PTR [rdx+0x30]
  4087bb:	movzx  esi,WORD PTR [rdx+0xe]
  4087bf:	cmp    esi,0x3
  4087c2:	jne    4087cd <flatcc_builder_table_add_union@@Base+0x2d>
  4087c8:	jmp    4087ec <flatcc_builder_table_add_union@@Base+0x4c>
  4087cd:	lea    rdi,[rip+0x643d]        # 40ec11 <flatcc_builder_padding_base@@Base+0xa41>
  4087d4:	lea    rsi,[rip+0x5c07]        # 40e3e2 <flatcc_builder_padding_base@@Base+0x212>
  4087db:	mov    edx,0x5ee
  4087e0:	lea    rcx,[rip+0x671c]        # 40ef03 <flatcc_builder_padding_base@@Base+0xd33>
  4087e7:	call   403060 <__assert_fail@plt>
  4087ec:	movzx  eax,BYTE PTR [rbp-0x10]
  4087f0:	cmp    eax,0x0
  4087f3:	jne    40884a <flatcc_builder_table_add_union@@Base+0xaa>
  4087f9:	cmp    DWORD PTR [rbp-0xc],0x0
  4087fd:	je     40884a <flatcc_builder_table_add_union@@Base+0xaa>
  408803:	movzx  eax,BYTE PTR [rbp-0x10]
  408807:	cmp    eax,0x0
  40880a:	jne    40881a <flatcc_builder_table_add_union@@Base+0x7a>
  408810:	cmp    DWORD PTR [rbp-0xc],0x0
  408814:	jne    40881f <flatcc_builder_table_add_union@@Base+0x7f>
  40881a:	jmp    40883e <flatcc_builder_table_add_union@@Base+0x9e>
  40881f:	lea    rdi,[rip+0x6735]        # 40ef5b <flatcc_builder_padding_base@@Base+0xd8b>
  408826:	lea    rsi,[rip+0x5bb5]        # 40e3e2 <flatcc_builder_padding_base@@Base+0x212>
  40882d:	mov    edx,0x5ef
  408832:	lea    rcx,[rip+0x66ca]        # 40ef03 <flatcc_builder_padding_base@@Base+0xd33>
  408839:	call   403060 <__assert_fail@plt>
  40883e:	mov    DWORD PTR [rbp-0x4],0xffffffff
  408845:	jmp    408930 <flatcc_builder_table_add_union@@Base+0x190>
  40884a:	cmp    DWORD PTR [rbp-0xc],0x0
  40884e:	je     4088b3 <flatcc_builder_table_add_union@@Base+0x113>
  408854:	mov    rdi,QWORD PTR [rbp-0x18]
  408858:	mov    esi,DWORD PTR [rbp-0x1c]
  40885b:	call   408940 <flatcc_builder_table_add_offset@@Base>
  408860:	mov    QWORD PTR [rbp-0x28],rax
  408864:	cmp    QWORD PTR [rbp-0x28],0x0
  408869:	jne    4088aa <flatcc_builder_table_add_union@@Base+0x10a>
  40886f:	cmp    QWORD PTR [rbp-0x28],0x0
  408874:	je     40887f <flatcc_builder_table_add_union@@Base+0xdf>
  40887a:	jmp    40889e <flatcc_builder_table_add_union@@Base+0xfe>
  40887f:	lea    rdi,[rip+0x66f7]        # 40ef7d <flatcc_builder_padding_base@@Base+0xdad>
  408886:	lea    rsi,[rip+0x5b55]        # 40e3e2 <flatcc_builder_padding_base@@Base+0x212>
  40888d:	mov    edx,0x5f2
  408892:	lea    rcx,[rip+0x666a]        # 40ef03 <flatcc_builder_padding_base@@Base+0xd33>
  408899:	call   403060 <__assert_fail@plt>
  40889e:	mov    DWORD PTR [rbp-0x4],0xffffffff
  4088a5:	jmp    408930 <flatcc_builder_table_add_union@@Base+0x190>
  4088aa:	mov    eax,DWORD PTR [rbp-0xc]
  4088ad:	mov    rcx,QWORD PTR [rbp-0x28]
  4088b1:	mov    DWORD PTR [rcx],eax
  4088b3:	mov    eax,0x1
  4088b8:	mov    edx,eax
  4088ba:	mov    rdi,QWORD PTR [rbp-0x18]
  4088be:	mov    eax,DWORD PTR [rbp-0x1c]
  4088c1:	sub    eax,0x1
  4088c4:	mov    esi,eax
  4088c6:	mov    ecx,0x1
  4088cb:	call   408a40 <flatcc_builder_table_add@@Base>
  4088d0:	mov    QWORD PTR [rbp-0x30],rax
  4088d4:	cmp    QWORD PTR [rbp-0x30],0x0
  4088d9:	jne    40891a <flatcc_builder_table_add_union@@Base+0x17a>
  4088df:	cmp    QWORD PTR [rbp-0x30],0x0
  4088e4:	je     4088ef <flatcc_builder_table_add_union@@Base+0x14f>
  4088ea:	jmp    40890e <flatcc_builder_table_add_union@@Base+0x16e>
  4088ef:	lea    rdi,[rip+0x6691]        # 40ef87 <flatcc_builder_padding_base@@Base+0xdb7>
  4088f6:	lea    rsi,[rip+0x5ae5]        # 40e3e2 <flatcc_builder_padding_base@@Base+0x212>
  4088fd:	mov    edx,0x5f6
  408902:	lea    rcx,[rip+0x65fa]        # 40ef03 <flatcc_builder_padding_base@@Base+0xd33>
  408909:	call   403060 <__assert_fail@plt>
  40890e:	mov    DWORD PTR [rbp-0x4],0xffffffff
  408915:	jmp    408930 <flatcc_builder_table_add_union@@Base+0x190>
  40891a:	movzx  edi,BYTE PTR [rbp-0x10]
  40891e:	call   408b90 <flatcc_builder_table_add@@Base+0x150>
  408923:	mov    rcx,QWORD PTR [rbp-0x30]
  408927:	mov    BYTE PTR [rcx],al
  408929:	mov    DWORD PTR [rbp-0x4],0x0
  408930:	mov    eax,DWORD PTR [rbp-0x4]
  408933:	add    rsp,0x30
  408937:	pop    rbp
  408938:	ret    
  408939:	nop    DWORD PTR [rax+0x0]

0000000000408940 <flatcc_builder_table_add_offset@@Base>:
  408940:	push   rbp
  408941:	mov    rbp,rsp
  408944:	sub    rsp,0x10
  408948:	mov    QWORD PTR [rbp-0x8],rdi
  40894c:	mov    DWORD PTR [rbp-0xc],esi
  40894f:	mov    rdi,QWORD PTR [rbp-0x8]
  408953:	mov    rdi,QWORD PTR [rdi+0x30]
  408957:	movzx  esi,WORD PTR [rdi+0xe]
  40895b:	cmp    esi,0x3
  40895e:	jne    408969 <flatcc_builder_table_add_offset@@Base+0x29>
  408964:	jmp    408988 <flatcc_builder_table_add_offset@@Base+0x48>
  408969:	lea    rdi,[rip+0x62a1]        # 40ec11 <flatcc_builder_padding_base@@Base+0xa41>
  408970:	lea    rsi,[rip+0x5a6b]        # 40e3e2 <flatcc_builder_padding_base@@Base+0x212>
  408977:	mov    edx,0x713
  40897c:	lea    rcx,[rip+0x6982]        # 40f305 <flatcc_builder_padding_base@@Base+0x1135>
  408983:	call   403060 <__assert_fail@plt>
  408988:	cmp    DWORD PTR [rbp-0xc],0x0
  40898c:	jl     4089a4 <flatcc_builder_table_add_offset@@Base+0x64>
  408992:	cmp    DWORD PTR [rbp-0xc],0x7ffc
  408999:	jg     4089a4 <flatcc_builder_table_add_offset@@Base+0x64>
  40899f:	jmp    4089c3 <flatcc_builder_table_add_offset@@Base+0x83>
  4089a4:	lea    rdi,[rip+0x68da]        # 40f285 <flatcc_builder_padding_base@@Base+0x10b5>
  4089ab:	lea    rsi,[rip+0x5a30]        # 40e3e2 <flatcc_builder_padding_base@@Base+0x212>
  4089b2:	mov    edx,0x714
  4089b7:	lea    rcx,[rip+0x6947]        # 40f305 <flatcc_builder_padding_base@@Base+0x1135>
  4089be:	call   403060 <__assert_fail@plt>
  4089c3:	mov    rax,QWORD PTR [rbp-0x8]
  4089c7:	mov    rax,QWORD PTR [rax+0x8]
  4089cb:	movsxd rcx,DWORD PTR [rbp-0xc]
  4089cf:	movzx  edx,WORD PTR [rax+rcx*2]
  4089d3:	cmp    edx,0x0
  4089d6:	je     4089fb <flatcc_builder_table_add_offset@@Base+0xbb>
  4089dc:	lea    rdi,[rip+0x6bbf]        # 40f5a2 <flatcc_builder_padding_base@@Base+0x13d2>
  4089e3:	lea    rsi,[rip+0x59f8]        # 40e3e2 <flatcc_builder_padding_base@@Base+0x212>
  4089ea:	mov    edx,0x71b
  4089ef:	lea    rcx,[rip+0x690f]        # 40f305 <flatcc_builder_padding_base@@Base+0x1135>
  4089f6:	call   403060 <__assert_fail@plt>
  4089fb:	mov    eax,DWORD PTR [rbp-0xc]
  4089fe:	mov    rcx,QWORD PTR [rbp-0x8]
  408a02:	xor    eax,DWORD PTR [rcx+0x14]
  408a05:	imul   eax,eax,0x9e3779b1
  408a0b:	xor    eax,0x4
  408a0e:	imul   eax,eax,0x9e3779b1
  408a14:	mov    rcx,QWORD PTR [rbp-0x8]
  408a18:	mov    DWORD PTR [rcx+0x14],eax
  408a1b:	mov    rdi,QWORD PTR [rbp-0x8]
  408a1f:	mov    eax,DWORD PTR [rbp-0xc]
  408a22:	mov    dx,ax
  408a25:	movzx  esi,dx
  408a28:	call   409960 <flatcc_builder_table_add_copy@@Base+0x60>
  408a2d:	add    rsp,0x10
  408a31:	pop    rbp
  408a32:	ret    
  408a33:	nop    WORD PTR cs:[rax+rax*1+0x0]
  408a3d:	nop    DWORD PTR [rax]

0000000000408a40 <flatcc_builder_table_add@@Base>:
  408a40:	push   rbp
  408a41:	mov    rbp,rsp
  408a44:	sub    rsp,0x20
  408a48:	mov    ax,cx
  408a4b:	mov    QWORD PTR [rbp-0x8],rdi
  408a4f:	mov    DWORD PTR [rbp-0xc],esi
  408a52:	mov    QWORD PTR [rbp-0x18],rdx
  408a56:	mov    WORD PTR [rbp-0x1a],ax
  408a5a:	mov    rdx,QWORD PTR [rbp-0x8]
  408a5e:	mov    rdx,QWORD PTR [rdx+0x30]
  408a62:	movzx  ecx,WORD PTR [rdx+0xe]
  408a66:	cmp    ecx,0x3
  408a69:	jne    408a74 <flatcc_builder_table_add@@Base+0x34>
  408a6f:	jmp    408a93 <flatcc_builder_table_add@@Base+0x53>
  408a74:	lea    rdi,[rip+0x6196]        # 40ec11 <flatcc_builder_padding_base@@Base+0xa41>
  408a7b:	lea    rsi,[rip+0x5960]        # 40e3e2 <flatcc_builder_padding_base@@Base+0x212>
  408a82:	mov    edx,0x6ed
  408a87:	lea    rcx,[rip+0x67ad]        # 40f23b <flatcc_builder_padding_base@@Base+0x106b>
  408a8e:	call   403060 <__assert_fail@plt>
  408a93:	cmp    DWORD PTR [rbp-0xc],0x0
  408a97:	jl     408aaf <flatcc_builder_table_add@@Base+0x6f>
  408a9d:	cmp    DWORD PTR [rbp-0xc],0x7ffc
  408aa4:	jg     408aaf <flatcc_builder_table_add@@Base+0x6f>
  408aaa:	jmp    408ace <flatcc_builder_table_add@@Base+0x8e>
  408aaf:	lea    rdi,[rip+0x67cf]        # 40f285 <flatcc_builder_padding_base@@Base+0x10b5>
  408ab6:	lea    rsi,[rip+0x5925]        # 40e3e2 <flatcc_builder_padding_base@@Base+0x212>
  408abd:	mov    edx,0x6ee
  408ac2:	lea    rcx,[rip+0x6772]        # 40f23b <flatcc_builder_padding_base@@Base+0x106b>
  408ac9:	call   403060 <__assert_fail@plt>
  408ace:	movzx  eax,WORD PTR [rbp-0x1a]
  408ad2:	mov    rcx,QWORD PTR [rbp-0x8]
  408ad6:	movzx  edx,WORD PTR [rcx+0xea]
  408add:	cmp    eax,edx
  408adf:	jle    408af4 <flatcc_builder_table_add@@Base+0xb4>
  408ae5:	mov    ax,WORD PTR [rbp-0x1a]
  408ae9:	mov    rcx,QWORD PTR [rbp-0x8]
  408aed:	mov    WORD PTR [rcx+0xea],ax
  408af4:	mov    rax,QWORD PTR [rbp-0x8]
  408af8:	mov    rax,QWORD PTR [rax+0x8]
  408afc:	movsxd rcx,DWORD PTR [rbp-0xc]
  408b00:	movzx  edx,WORD PTR [rax+rcx*2]
  408b04:	cmp    edx,0x0
  408b07:	je     408b2c <flatcc_builder_table_add@@Base+0xec>
  408b0d:	lea    rdi,[rip+0x6a8e]        # 40f5a2 <flatcc_builder_padding_base@@Base+0x13d2>
  408b14:	lea    rsi,[rip+0x58c7]        # 40e3e2 <flatcc_builder_padding_base@@Base+0x212>
  408b1b:	mov    edx,0x6f8
  408b20:	lea    rcx,[rip+0x6714]        # 40f23b <flatcc_builder_padding_base@@Base+0x106b>
  408b27:	call   403060 <__assert_fail@plt>
  408b2c:	mov    eax,DWORD PTR [rbp-0xc]
  408b2f:	mov    rcx,QWORD PTR [rbp-0x8]
  408b33:	xor    eax,DWORD PTR [rcx+0x14]
  408b36:	imul   eax,eax,0x9e3779b1
  408b3c:	mov    rcx,QWORD PTR [rbp-0x18]
  408b40:	mov    edx,ecx
  408b42:	xor    eax,edx
  408b44:	imul   eax,eax,0x9e3779b1
  408b4a:	mov    rcx,QWORD PTR [rbp-0x8]
  408b4e:	mov    DWORD PTR [rcx+0x14],eax
  408b51:	mov    rdi,QWORD PTR [rbp-0x8]
  408b55:	mov    rcx,QWORD PTR [rbp-0x18]
  408b59:	mov    eax,ecx
  408b5b:	mov    si,WORD PTR [rbp-0x1a]
  408b5f:	mov    edx,DWORD PTR [rbp-0xc]
  408b62:	mov    r8w,dx
  408b66:	mov    WORD PTR [rbp-0x1c],si
  408b6a:	mov    esi,eax
  408b6c:	mov    r9w,WORD PTR [rbp-0x1c]
  408b71:	movzx  edx,r9w
  408b75:	movzx  ecx,r8w
  408b79:	call   409780 <flatcc_builder_string_len@@Base+0x20>
  408b7e:	add    rsp,0x20
  408b82:	pop    rbp
  408b83:	ret    
  408b84:	nop    WORD PTR cs:[rax+rax*1+0x0]
  408b8e:	xchg   ax,ax
  408b90:	push   rbp
  408b91:	mov    rbp,rsp
  408b94:	mov    al,dil
  408b97:	mov    BYTE PTR [rbp-0x1],al
  408b9a:	movzx  eax,BYTE PTR [rbp-0x1]
  408b9e:	pop    rbp
  408b9f:	ret    

0000000000408ba0 <flatcc_builder_table_add_union_vector@@Base>:
  408ba0:	push   rbp
  408ba1:	mov    rbp,rsp
  408ba4:	sub    rsp,0x30
  408ba8:	mov    QWORD PTR [rbp-0x10],rdx
  408bac:	mov    QWORD PTR [rbp-0x18],rdi
  408bb0:	mov    DWORD PTR [rbp-0x1c],esi
  408bb3:	mov    rdx,QWORD PTR [rbp-0x18]
  408bb7:	mov    rdx,QWORD PTR [rdx+0x30]
  408bbb:	movzx  esi,WORD PTR [rdx+0xe]
  408bbf:	cmp    esi,0x3
  408bc2:	jne    408bcd <flatcc_builder_table_add_union_vector@@Base+0x2d>
  408bc8:	jmp    408bec <flatcc_builder_table_add_union_vector@@Base+0x4c>
  408bcd:	lea    rdi,[rip+0x603d]        # 40ec11 <flatcc_builder_padding_base@@Base+0xa41>
  408bd4:	lea    rsi,[rip+0x5807]        # 40e3e2 <flatcc_builder_padding_base@@Base+0x212>
  408bdb:	mov    edx,0x600
  408be0:	lea    rcx,[rip+0x63ac]        # 40ef93 <flatcc_builder_padding_base@@Base+0xdc3>
  408be7:	call   403060 <__assert_fail@plt>
  408bec:	cmp    DWORD PTR [rbp-0x10],0x0
  408bf0:	sete   al
  408bf3:	and    al,0x1
  408bf5:	movzx  ecx,al
  408bf8:	cmp    DWORD PTR [rbp-0xc],0x0
  408bfc:	sete   al
  408bff:	and    al,0x1
  408c01:	movzx  edx,al
  408c04:	cmp    ecx,edx
  408c06:	je     408c5c <flatcc_builder_table_add_union_vector@@Base+0xbc>
  408c0c:	cmp    DWORD PTR [rbp-0x10],0x0
  408c10:	sete   al
  408c13:	and    al,0x1
  408c15:	movzx  ecx,al
  408c18:	cmp    DWORD PTR [rbp-0xc],0x0
  408c1c:	sete   al
  408c1f:	and    al,0x1
  408c21:	movzx  edx,al
  408c24:	cmp    ecx,edx
  408c26:	jne    408c31 <flatcc_builder_table_add_union_vector@@Base+0x91>
  408c2c:	jmp    408c50 <flatcc_builder_table_add_union_vector@@Base+0xb0>
  408c31:	lea    rdi,[rip+0x63be]        # 40eff6 <flatcc_builder_padding_base@@Base+0xe26>
  408c38:	lea    rsi,[rip+0x57a3]        # 40e3e2 <flatcc_builder_padding_base@@Base+0x212>
  408c3f:	mov    edx,0x601
  408c44:	lea    rcx,[rip+0x6348]        # 40ef93 <flatcc_builder_padding_base@@Base+0xdc3>
  408c4b:	call   403060 <__assert_fail@plt>
  408c50:	mov    DWORD PTR [rbp-0x4],0xffffffff
  408c57:	jmp    408d30 <flatcc_builder_table_add_union_vector@@Base+0x190>
  408c5c:	cmp    DWORD PTR [rbp-0x10],0x0
  408c60:	je     408d29 <flatcc_builder_table_add_union_vector@@Base+0x189>
  408c66:	mov    rdi,QWORD PTR [rbp-0x18]
  408c6a:	mov    eax,DWORD PTR [rbp-0x1c]
  408c6d:	sub    eax,0x1
  408c70:	mov    esi,eax
  408c72:	call   408940 <flatcc_builder_table_add_offset@@Base>
  408c77:	mov    QWORD PTR [rbp-0x28],rax
  408c7b:	cmp    QWORD PTR [rbp-0x28],0x0
  408c80:	jne    408cc1 <flatcc_builder_table_add_union_vector@@Base+0x121>
  408c86:	cmp    QWORD PTR [rbp-0x28],0x0
  408c8b:	je     408c96 <flatcc_builder_table_add_union_vector@@Base+0xf6>
  408c91:	jmp    408cb5 <flatcc_builder_table_add_union_vector@@Base+0x115>
  408c96:	lea    rdi,[rip+0x62e0]        # 40ef7d <flatcc_builder_padding_base@@Base+0xdad>
  408c9d:	lea    rsi,[rip+0x573e]        # 40e3e2 <flatcc_builder_padding_base@@Base+0x212>
  408ca4:	mov    edx,0x604
  408ca9:	lea    rcx,[rip+0x62e3]        # 40ef93 <flatcc_builder_padding_base@@Base+0xdc3>
  408cb0:	call   403060 <__assert_fail@plt>
  408cb5:	mov    DWORD PTR [rbp-0x4],0xffffffff
  408cbc:	jmp    408d30 <flatcc_builder_table_add_union_vector@@Base+0x190>
  408cc1:	mov    eax,DWORD PTR [rbp-0x10]
  408cc4:	mov    rcx,QWORD PTR [rbp-0x28]
  408cc8:	mov    DWORD PTR [rcx],eax
  408cca:	mov    rdi,QWORD PTR [rbp-0x18]
  408cce:	mov    esi,DWORD PTR [rbp-0x1c]
  408cd1:	call   408940 <flatcc_builder_table_add_offset@@Base>
  408cd6:	mov    QWORD PTR [rbp-0x28],rax
  408cda:	cmp    QWORD PTR [rbp-0x28],0x0
  408cdf:	jne    408d20 <flatcc_builder_table_add_union_vector@@Base+0x180>
  408ce5:	cmp    QWORD PTR [rbp-0x28],0x0
  408cea:	je     408cf5 <flatcc_builder_table_add_union_vector@@Base+0x155>
  408cf0:	jmp    408d14 <flatcc_builder_table_add_union_vector@@Base+0x174>
  408cf5:	lea    rdi,[rip+0x6281]        # 40ef7d <flatcc_builder_padding_base@@Base+0xdad>
  408cfc:	lea    rsi,[rip+0x56df]        # 40e3e2 <flatcc_builder_padding_base@@Base+0x212>
  408d03:	mov    edx,0x608
  408d08:	lea    rcx,[rip+0x6284]        # 40ef93 <flatcc_builder_padding_base@@Base+0xdc3>
  408d0f:	call   403060 <__assert_fail@plt>
  408d14:	mov    DWORD PTR [rbp-0x4],0xffffffff
  408d1b:	jmp    408d30 <flatcc_builder_table_add_union_vector@@Base+0x190>
  408d20:	mov    eax,DWORD PTR [rbp-0xc]
  408d23:	mov    rcx,QWORD PTR [rbp-0x28]
  408d27:	mov    DWORD PTR [rcx],eax
  408d29:	mov    DWORD PTR [rbp-0x4],0x0
  408d30:	mov    eax,DWORD PTR [rbp-0x4]
  408d33:	add    rsp,0x30
  408d37:	pop    rbp
  408d38:	ret    
  408d39:	nop    DWORD PTR [rax+0x0]

0000000000408d40 <flatcc_builder_create_union_vector@@Base>:
  408d40:	push   rbp
  408d41:	mov    rbp,rsp
  408d44:	sub    rsp,0x40
  408d48:	xor    eax,eax
  408d4a:	mov    ecx,0x8
  408d4f:	mov    r8d,ecx
  408d52:	mov    QWORD PTR [rbp-0x10],rdi
  408d56:	mov    QWORD PTR [rbp-0x18],rsi
  408d5a:	mov    QWORD PTR [rbp-0x20],rdx
  408d5e:	lea    rdx,[rbp-0x8]
  408d62:	mov    rdi,rdx
  408d65:	mov    esi,eax
  408d67:	mov    rdx,r8
  408d6a:	call   403070 <memset@plt>
  408d6f:	mov    rdi,QWORD PTR [rbp-0x10]
  408d73:	call   406df0 <flatcc_builder_start_offset_vector@@Base>
  408d78:	cmp    eax,0x0
  408d7b:	je     408d86 <flatcc_builder_create_union_vector@@Base+0x46>
  408d81:	jmp    408e5b <flatcc_builder_create_union_vector@@Base+0x11b>
  408d86:	mov    rdi,QWORD PTR [rbp-0x10]
  408d8a:	mov    rsi,QWORD PTR [rbp-0x20]
  408d8e:	call   4065d0 <flatcc_builder_extend_offset_vector@@Base>
  408d93:	xor    ecx,ecx
  408d95:	mov    esi,ecx
  408d97:	cmp    rsi,rax
  408d9a:	jne    408da5 <flatcc_builder_create_union_vector@@Base+0x65>
  408da0:	jmp    408e5b <flatcc_builder_create_union_vector@@Base+0x11b>
  408da5:	mov    rdi,QWORD PTR [rbp-0x10]
  408da9:	mov    rax,QWORD PTR [rbp-0x20]
  408dad:	shl    rax,0x0
  408db1:	mov    ecx,eax
  408db3:	mov    esi,ecx
  408db5:	call   406160 <flatcc_builder_start_struct@@Base+0x100>
  408dba:	xor    ecx,ecx
  408dbc:	mov    edi,ecx
  408dbe:	mov    QWORD PTR [rbp-0x28],rax
  408dc2:	cmp    rdi,rax
  408dc5:	jne    408dd0 <flatcc_builder_create_union_vector@@Base+0x90>
  408dcb:	jmp    408e5b <flatcc_builder_create_union_vector@@Base+0x11b>
  408dd0:	mov    rdi,QWORD PTR [rbp-0x10]
  408dd4:	call   408760 <flatcc_builder_offset_vector_edit@@Base>
  408dd9:	mov    QWORD PTR [rbp-0x30],rax
  408ddd:	mov    QWORD PTR [rbp-0x38],0x0
  408de5:	mov    rax,QWORD PTR [rbp-0x38]
  408de9:	cmp    rax,QWORD PTR [rbp-0x20]
  408ded:	jae    408e31 <flatcc_builder_create_union_vector@@Base+0xf1>
  408df3:	mov    rax,QWORD PTR [rbp-0x18]
  408df7:	mov    rcx,QWORD PTR [rbp-0x38]
  408dfb:	mov    dl,BYTE PTR [rax+rcx*8]
  408dfe:	mov    rax,QWORD PTR [rbp-0x28]
  408e02:	mov    rcx,QWORD PTR [rbp-0x38]
  408e06:	mov    BYTE PTR [rax+rcx*1],dl
  408e09:	mov    rax,QWORD PTR [rbp-0x18]
  408e0d:	mov    rcx,QWORD PTR [rbp-0x38]
  408e11:	mov    esi,DWORD PTR [rax+rcx*8+0x4]
  408e15:	mov    rax,QWORD PTR [rbp-0x30]
  408e19:	mov    rcx,QWORD PTR [rbp-0x38]
  408e1d:	mov    DWORD PTR [rax+rcx*4],esi
  408e20:	mov    rax,QWORD PTR [rbp-0x38]
  408e24:	add    rax,0x1
  408e28:	mov    QWORD PTR [rbp-0x38],rax
  408e2c:	jmp    408de5 <flatcc_builder_create_union_vector@@Base+0xa5>
  408e31:	mov    rdi,QWORD PTR [rbp-0x10]
  408e35:	mov    rsi,QWORD PTR [rbp-0x28]
  408e39:	mov    rdx,QWORD PTR [rbp-0x30]
  408e3d:	mov    rcx,QWORD PTR [rbp-0x20]
  408e41:	call   408e70 <flatcc_builder_create_union_vector_direct@@Base>
  408e46:	mov    QWORD PTR [rbp-0x40],rax
  408e4a:	mov    rax,QWORD PTR [rbp-0x40]
  408e4e:	mov    QWORD PTR [rbp-0x8],rax
  408e52:	mov    rdi,QWORD PTR [rbp-0x10]
  408e56:	call   405fa0 <flatcc_builder_end_buffer@@Base+0x160>
  408e5b:	mov    rax,QWORD PTR [rbp-0x8]
  408e5f:	add    rsp,0x40
  408e63:	pop    rbp
  408e64:	ret    
  408e65:	nop    WORD PTR cs:[rax+rax*1+0x0]
  408e6f:	nop

0000000000408e70 <flatcc_builder_create_union_vector_direct@@Base>:
  408e70:	push   rbp
  408e71:	mov    rbp,rsp
  408e74:	sub    rsp,0x30
  408e78:	xor    eax,eax
  408e7a:	mov    r8d,0x8
  408e80:	mov    r9d,r8d
  408e83:	mov    QWORD PTR [rbp-0x10],rdi
  408e87:	mov    QWORD PTR [rbp-0x18],rsi
  408e8b:	mov    QWORD PTR [rbp-0x20],rdx
  408e8f:	mov    QWORD PTR [rbp-0x28],rcx
  408e93:	lea    rcx,[rbp-0x8]
  408e97:	mov    rdi,rcx
  408e9a:	mov    esi,eax
  408e9c:	mov    rdx,r9
  408e9f:	call   403070 <memset@plt>
  408ea4:	mov    rdi,QWORD PTR [rbp-0x10]
  408ea8:	mov    rsi,QWORD PTR [rbp-0x20]
  408eac:	mov    rdx,QWORD PTR [rbp-0x28]
  408eb0:	mov    rcx,QWORD PTR [rbp-0x18]
  408eb4:	call   408380 <flatcc_builder_create_offset_vector_direct@@Base+0x30>
  408eb9:	xor    r8d,r8d
  408ebc:	mov    DWORD PTR [rbp-0x4],eax
  408ebf:	cmp    r8d,eax
  408ec2:	jne    408ecd <flatcc_builder_create_union_vector_direct@@Base+0x5d>
  408ec8:	jmp    408f0c <flatcc_builder_create_union_vector_direct@@Base+0x9c>
  408ecd:	mov    eax,0x1
  408ed2:	mov    ecx,eax
  408ed4:	mov    eax,0xffffffff
  408ed9:	mov    r9d,eax
  408edc:	mov    rdi,QWORD PTR [rbp-0x10]
  408ee0:	mov    rsi,QWORD PTR [rbp-0x18]
  408ee4:	mov    rdx,QWORD PTR [rbp-0x28]
  408ee8:	mov    r8d,0x1
  408eee:	call   408020 <flatcc_builder_create_vector@@Base>
  408ef3:	xor    r8d,r8d
  408ef6:	mov    DWORD PTR [rbp-0x8],eax
  408ef9:	cmp    r8d,eax
  408efc:	jne    408f07 <flatcc_builder_create_union_vector_direct@@Base+0x97>
  408f02:	jmp    408f0c <flatcc_builder_create_union_vector_direct@@Base+0x9c>
  408f07:	jmp    408f0c <flatcc_builder_create_union_vector_direct@@Base+0x9c>
  408f0c:	mov    rax,QWORD PTR [rbp-0x8]
  408f10:	add    rsp,0x30
  408f14:	pop    rbp
  408f15:	ret    
  408f16:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000408f20 <flatcc_builder_start_union_vector@@Base>:
  408f20:	push   rbp
  408f21:	mov    rbp,rsp
  408f24:	sub    rsp,0x10
  408f28:	mov    QWORD PTR [rbp-0x10],rdi
  408f2c:	mov    rdi,QWORD PTR [rbp-0x10]
  408f30:	mov    esi,0x4
  408f35:	call   405c70 <flatcc_builder_start_buffer@@Base+0x170>
  408f3a:	cmp    eax,0x0
  408f3d:	je     408f4f <flatcc_builder_start_union_vector@@Base+0x2f>
  408f43:	mov    DWORD PTR [rbp-0x4],0xffffffff
  408f4a:	jmp    408f90 <flatcc_builder_start_union_vector@@Base+0x70>
  408f4f:	mov    rax,QWORD PTR [rbp-0x10]
  408f53:	mov    rax,QWORD PTR [rax+0x30]
  408f57:	mov    DWORD PTR [rax+0x10],0x8
  408f5e:	mov    rax,QWORD PTR [rbp-0x10]
  408f62:	mov    rax,QWORD PTR [rax+0x30]
  408f66:	mov    DWORD PTR [rax+0x14],0x0
  408f6d:	mov    rax,QWORD PTR [rbp-0x10]
  408f71:	mov    rax,QWORD PTR [rax+0x30]
  408f75:	mov    WORD PTR [rax+0xe],0x7
  408f7b:	mov    rdi,QWORD PTR [rbp-0x10]
  408f7f:	mov    esi,0xfffffffc
  408f84:	call   4060e0 <flatcc_builder_start_struct@@Base+0x80>
  408f89:	mov    DWORD PTR [rbp-0x4],0x0
  408f90:	mov    eax,DWORD PTR [rbp-0x4]
  408f93:	add    rsp,0x10
  408f97:	pop    rbp
  408f98:	ret    
  408f99:	nop    DWORD PTR [rax+0x0]

0000000000408fa0 <flatcc_builder_end_union_vector@@Base>:
  408fa0:	push   rbp
  408fa1:	mov    rbp,rsp
  408fa4:	sub    rsp,0x40
  408fa8:	xor    esi,esi
  408faa:	mov    eax,0x8
  408faf:	mov    edx,eax
  408fb1:	mov    QWORD PTR [rbp-0x10],rdi
  408fb5:	lea    rdi,[rbp-0x8]
  408fb9:	call   403070 <memset@plt>
  408fbe:	mov    rdx,QWORD PTR [rbp-0x10]
  408fc2:	mov    rdx,QWORD PTR [rdx+0x30]
  408fc6:	movzx  eax,WORD PTR [rdx+0xe]
  408fca:	cmp    eax,0x7
  408fcd:	jne    408fd8 <flatcc_builder_end_union_vector@@Base+0x38>
  408fd3:	jmp    408ff7 <flatcc_builder_end_union_vector@@Base+0x57>
  408fd8:	lea    rdi,[rip+0x603f]        # 40f01e <flatcc_builder_padding_base@@Base+0xe4e>
  408fdf:	lea    rsi,[rip+0x53fc]        # 40e3e2 <flatcc_builder_padding_base@@Base+0x212>
  408fe6:	mov    edx,0x651
  408feb:	lea    rcx,[rip+0x605e]        # 40f050 <flatcc_builder_padding_base@@Base+0xe80>
  408ff2:	call   403060 <__assert_fail@plt>
  408ff7:	mov    rdi,QWORD PTR [rbp-0x10]
  408ffb:	call   4090e0 <flatcc_builder_union_vector_count@@Base>
  409000:	mov    QWORD PTR [rbp-0x38],rax
  409004:	mov    rdi,QWORD PTR [rbp-0x10]
  409008:	imul   rax,QWORD PTR [rbp-0x38],0x5
  40900d:	mov    ecx,eax
  40900f:	mov    esi,ecx
  409011:	call   406160 <flatcc_builder_start_struct@@Base+0x100>
  409016:	xor    ecx,ecx
  409018:	mov    edi,ecx
  40901a:	mov    QWORD PTR [rbp-0x28],rax
  40901e:	cmp    rdi,rax
  409021:	jne    40902c <flatcc_builder_end_union_vector@@Base+0x8c>
  409027:	jmp    4090ca <flatcc_builder_end_union_vector@@Base+0x12a>
  40902c:	mov    rax,QWORD PTR [rbp-0x28]
  409030:	mov    rcx,QWORD PTR [rbp-0x38]
  409034:	shl    rcx,0x2
  409038:	add    rax,rcx
  40903b:	mov    QWORD PTR [rbp-0x18],rax
  40903f:	mov    rdi,QWORD PTR [rbp-0x10]
  409043:	call   409100 <flatcc_builder_union_vector_edit@@Base>
  409048:	mov    QWORD PTR [rbp-0x20],rax
  40904c:	mov    QWORD PTR [rbp-0x30],0x0
  409054:	mov    rax,QWORD PTR [rbp-0x30]
  409058:	cmp    rax,QWORD PTR [rbp-0x38]
  40905c:	jae    4090a0 <flatcc_builder_end_union_vector@@Base+0x100>
  409062:	mov    rax,QWORD PTR [rbp-0x20]
  409066:	mov    rcx,QWORD PTR [rbp-0x30]
  40906a:	mov    dl,BYTE PTR [rax+rcx*8]
  40906d:	mov    rax,QWORD PTR [rbp-0x18]
  409071:	mov    rcx,QWORD PTR [rbp-0x30]
  409075:	mov    BYTE PTR [rax+rcx*1],dl
  409078:	mov    rax,QWORD PTR [rbp-0x20]
  40907c:	mov    rcx,QWORD PTR [rbp-0x30]
  409080:	mov    esi,DWORD PTR [rax+rcx*8+0x4]
  409084:	mov    rax,QWORD PTR [rbp-0x28]
  409088:	mov    rcx,QWORD PTR [rbp-0x30]
  40908c:	mov    DWORD PTR [rax+rcx*4],esi
  40908f:	mov    rax,QWORD PTR [rbp-0x30]
  409093:	add    rax,0x1
  409097:	mov    QWORD PTR [rbp-0x30],rax
  40909b:	jmp    409054 <flatcc_builder_end_union_vector@@Base+0xb4>
  4090a0:	mov    rdi,QWORD PTR [rbp-0x10]
  4090a4:	mov    rsi,QWORD PTR [rbp-0x18]
  4090a8:	mov    rdx,QWORD PTR [rbp-0x28]
  4090ac:	mov    rcx,QWORD PTR [rbp-0x38]
  4090b0:	call   408e70 <flatcc_builder_create_union_vector_direct@@Base>
  4090b5:	mov    QWORD PTR [rbp-0x40],rax
  4090b9:	mov    rax,QWORD PTR [rbp-0x40]
  4090bd:	mov    QWORD PTR [rbp-0x8],rax
  4090c1:	mov    rdi,QWORD PTR [rbp-0x10]
  4090c5:	call   405fa0 <flatcc_builder_end_buffer@@Base+0x160>
  4090ca:	mov    rax,QWORD PTR [rbp-0x8]
  4090ce:	add    rsp,0x40
  4090d2:	pop    rbp
  4090d3:	ret    
  4090d4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4090de:	xchg   ax,ax

00000000004090e0 <flatcc_builder_union_vector_count@@Base>:
  4090e0:	push   rbp
  4090e1:	mov    rbp,rsp
  4090e4:	mov    QWORD PTR [rbp-0x8],rdi
  4090e8:	mov    rdi,QWORD PTR [rbp-0x8]
  4090ec:	mov    rdi,QWORD PTR [rdi+0x30]
  4090f0:	mov    eax,DWORD PTR [rdi+0x14]
  4090f3:	pop    rbp
  4090f4:	ret    
  4090f5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4090ff:	nop

0000000000409100 <flatcc_builder_union_vector_edit@@Base>:
  409100:	push   rbp
  409101:	mov    rbp,rsp
  409104:	mov    QWORD PTR [rbp-0x8],rdi
  409108:	mov    rdi,QWORD PTR [rbp-0x8]
  40910c:	mov    rax,QWORD PTR [rdi+0x18]
  409110:	pop    rbp
  409111:	ret    
  409112:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40911c:	nop    DWORD PTR [rax+0x0]

0000000000409120 <flatcc_builder_extend_union_vector@@Base>:
  409120:	push   rbp
  409121:	mov    rbp,rsp
  409124:	sub    rsp,0x20
  409128:	mov    QWORD PTR [rbp-0x10],rdi
  40912c:	mov    QWORD PTR [rbp-0x18],rsi
  409130:	mov    rdi,QWORD PTR [rbp-0x10]
  409134:	mov    rsi,QWORD PTR [rbp-0x18]
  409138:	mov    eax,esi
  40913a:	mov    esi,eax
  40913c:	mov    edx,0x1fffffff
  409141:	call   406320 <flatcc_builder_extend_vector@@Base+0x70>
  409146:	cmp    eax,0x0
  409149:	je     40915c <flatcc_builder_extend_union_vector@@Base+0x3c>
  40914f:	mov    QWORD PTR [rbp-0x8],0x0
  409157:	jmp    40917b <flatcc_builder_extend_union_vector@@Base+0x5b>
  40915c:	mov    rdi,QWORD PTR [rbp-0x10]
  409160:	mov    rax,QWORD PTR [rbp-0x18]
  409164:	mov    ecx,eax
  409166:	mov    ecx,ecx
  409168:	mov    eax,ecx
  40916a:	shl    rax,0x3
  40916e:	mov    ecx,eax
  409170:	mov    esi,ecx
  409172:	call   406160 <flatcc_builder_start_struct@@Base+0x100>
  409177:	mov    QWORD PTR [rbp-0x8],rax
  40917b:	mov    rax,QWORD PTR [rbp-0x8]
  40917f:	add    rsp,0x20
  409183:	pop    rbp
  409184:	ret    
  409185:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40918f:	nop

0000000000409190 <flatcc_builder_truncate_union_vector@@Base>:
  409190:	push   rbp
  409191:	mov    rbp,rsp
  409194:	sub    rsp,0x20
  409198:	mov    QWORD PTR [rbp-0x10],rdi
  40919c:	mov    QWORD PTR [rbp-0x18],rsi
  4091a0:	mov    rsi,QWORD PTR [rbp-0x10]
  4091a4:	mov    rsi,QWORD PTR [rsi+0x30]
  4091a8:	movzx  eax,WORD PTR [rsi+0xe]
  4091ac:	cmp    eax,0x7
  4091af:	jne    4091ba <flatcc_builder_truncate_union_vector@@Base+0x2a>
  4091b5:	jmp    4091d9 <flatcc_builder_truncate_union_vector@@Base+0x49>
  4091ba:	lea    rdi,[rip+0x5e5d]        # 40f01e <flatcc_builder_padding_base@@Base+0xe4e>
  4091c1:	lea    rsi,[rip+0x521a]        # 40e3e2 <flatcc_builder_padding_base@@Base+0x212>
  4091c8:	mov    edx,0x681
  4091cd:	lea    rcx,[rip+0x5ecf]        # 40f0a3 <flatcc_builder_padding_base@@Base+0xed3>
  4091d4:	call   403060 <__assert_fail@plt>
  4091d9:	mov    rax,QWORD PTR [rbp-0x10]
  4091dd:	mov    rax,QWORD PTR [rax+0x30]
  4091e1:	mov    ecx,DWORD PTR [rax+0x14]
  4091e4:	mov    rax,QWORD PTR [rbp-0x18]
  4091e8:	mov    edx,eax
  4091ea:	cmp    ecx,edx
  4091ec:	jae    40923b <flatcc_builder_truncate_union_vector@@Base+0xab>
  4091f2:	mov    rax,QWORD PTR [rbp-0x10]
  4091f6:	mov    rax,QWORD PTR [rax+0x30]
  4091fa:	mov    ecx,DWORD PTR [rax+0x14]
  4091fd:	mov    rax,QWORD PTR [rbp-0x18]
  409201:	mov    edx,eax
  409203:	cmp    ecx,edx
  409205:	jb     409210 <flatcc_builder_truncate_union_vector@@Base+0x80>
  40920b:	jmp    40922f <flatcc_builder_truncate_union_vector@@Base+0x9f>
  409210:	lea    rdi,[rip+0x586b]        # 40ea82 <flatcc_builder_padding_base@@Base+0x8b2>
  409217:	lea    rsi,[rip+0x51c4]        # 40e3e2 <flatcc_builder_padding_base@@Base+0x212>
  40921e:	mov    edx,0x682
  409223:	lea    rcx,[rip+0x5e79]        # 40f0a3 <flatcc_builder_padding_base@@Base+0xed3>
  40922a:	call   403060 <__assert_fail@plt>
  40922f:	mov    DWORD PTR [rbp-0x4],0xffffffff
  409236:	jmp    409277 <flatcc_builder_truncate_union_vector@@Base+0xe7>
  40923b:	mov    rax,QWORD PTR [rbp-0x18]
  40923f:	mov    ecx,eax
  409241:	mov    rax,QWORD PTR [rbp-0x10]
  409245:	mov    rax,QWORD PTR [rax+0x30]
  409249:	mov    edx,DWORD PTR [rax+0x14]
  40924c:	sub    edx,ecx
  40924e:	mov    DWORD PTR [rax+0x14],edx
  409251:	mov    rdi,QWORD PTR [rbp-0x10]
  409255:	mov    rax,QWORD PTR [rbp-0x10]
  409259:	mov    rax,QWORD PTR [rax+0x30]
  40925d:	mov    ecx,DWORD PTR [rax+0x10]
  409260:	mov    rax,QWORD PTR [rbp-0x18]
  409264:	mov    edx,eax
  409266:	imul   ecx,edx
  409269:	mov    esi,ecx
  40926b:	call   406af0 <flatcc_builder_truncate_vector@@Base+0xf0>
  409270:	mov    DWORD PTR [rbp-0x4],0x0
  409277:	mov    eax,DWORD PTR [rbp-0x4]
  40927a:	add    rsp,0x20
  40927e:	pop    rbp
  40927f:	ret    

0000000000409280 <flatcc_builder_union_vector_push@@Base>:
  409280:	push   rbp
  409281:	mov    rbp,rsp
  409284:	sub    rsp,0x20
  409288:	mov    QWORD PTR [rbp-0x10],rsi
  40928c:	mov    QWORD PTR [rbp-0x18],rdi
  409290:	mov    rsi,QWORD PTR [rbp-0x18]
  409294:	mov    rsi,QWORD PTR [rsi+0x30]
  409298:	movzx  eax,WORD PTR [rsi+0xe]
  40929c:	cmp    eax,0x7
  40929f:	jne    4092aa <flatcc_builder_union_vector_push@@Base+0x2a>
  4092a5:	jmp    4092c9 <flatcc_builder_union_vector_push@@Base+0x49>
  4092aa:	lea    rdi,[rip+0x5d6d]        # 40f01e <flatcc_builder_padding_base@@Base+0xe4e>
  4092b1:	lea    rsi,[rip+0x512a]        # 40e3e2 <flatcc_builder_padding_base@@Base+0x212>
  4092b8:	mov    edx,0x68d
  4092bd:	lea    rcx,[rip+0x5e24]        # 40f0e8 <flatcc_builder_padding_base@@Base+0xf18>
  4092c4:	call   403060 <__assert_fail@plt>
  4092c9:	mov    rax,QWORD PTR [rbp-0x18]
  4092cd:	mov    rax,QWORD PTR [rax+0x30]
  4092d1:	mov    ecx,DWORD PTR [rax+0x14]
  4092d4:	mov    eax,ecx
  4092d6:	cmp    rax,0x1fffffff
  4092dc:	jne    4092ef <flatcc_builder_union_vector_push@@Base+0x6f>
  4092e2:	mov    QWORD PTR [rbp-0x8],0x0
  4092ea:	jmp    40933f <flatcc_builder_union_vector_push@@Base+0xbf>
  4092ef:	mov    rax,QWORD PTR [rbp-0x18]
  4092f3:	mov    rax,QWORD PTR [rax+0x30]
  4092f7:	mov    ecx,DWORD PTR [rax+0x14]
  4092fa:	add    ecx,0x1
  4092fd:	mov    DWORD PTR [rax+0x14],ecx
  409300:	mov    rdi,QWORD PTR [rbp-0x18]
  409304:	mov    esi,0x8
  409309:	call   406160 <flatcc_builder_start_struct@@Base+0x100>
  40930e:	xor    ecx,ecx
  409310:	mov    edi,ecx
  409312:	mov    QWORD PTR [rbp-0x20],rax
  409316:	cmp    rdi,rax
  409319:	jne    40932c <flatcc_builder_union_vector_push@@Base+0xac>
  40931f:	mov    QWORD PTR [rbp-0x8],0x0
  409327:	jmp    40933f <flatcc_builder_union_vector_push@@Base+0xbf>
  40932c:	mov    rax,QWORD PTR [rbp-0x20]
  409330:	mov    rcx,QWORD PTR [rbp-0x10]
  409334:	mov    QWORD PTR [rax],rcx
  409337:	mov    rax,QWORD PTR [rbp-0x20]
  40933b:	mov    QWORD PTR [rbp-0x8],rax
  40933f:	mov    rax,QWORD PTR [rbp-0x8]
  409343:	add    rsp,0x20
  409347:	pop    rbp
  409348:	ret    
  409349:	nop    DWORD PTR [rax+0x0]

0000000000409350 <flatcc_builder_append_union_vector@@Base>:
  409350:	push   rbp
  409351:	mov    rbp,rsp
  409354:	sub    rsp,0x20
  409358:	mov    QWORD PTR [rbp-0x10],rdi
  40935c:	mov    QWORD PTR [rbp-0x18],rsi
  409360:	mov    QWORD PTR [rbp-0x20],rdx
  409364:	mov    rdx,QWORD PTR [rbp-0x10]
  409368:	mov    rdx,QWORD PTR [rdx+0x30]
  40936c:	movzx  eax,WORD PTR [rdx+0xe]
  409370:	cmp    eax,0x7
  409373:	jne    40937e <flatcc_builder_append_union_vector@@Base+0x2e>
  409379:	jmp    40939d <flatcc_builder_append_union_vector@@Base+0x4d>
  40937e:	lea    rdi,[rip+0x5c99]        # 40f01e <flatcc_builder_padding_base@@Base+0xe4e>
  409385:	lea    rsi,[rip+0x5056]        # 40e3e2 <flatcc_builder_padding_base@@Base+0x212>
  40938c:	mov    edx,0x69c
  409391:	lea    rcx,[rip+0x5dbd]        # 40f155 <flatcc_builder_padding_base@@Base+0xf85>
  409398:	call   403060 <__assert_fail@plt>
  40939d:	mov    rdi,QWORD PTR [rbp-0x10]
  4093a1:	mov    rax,QWORD PTR [rbp-0x20]
  4093a5:	mov    ecx,eax
  4093a7:	mov    esi,ecx
  4093a9:	mov    edx,0x1fffffff
  4093ae:	call   406320 <flatcc_builder_extend_vector@@Base+0x70>
  4093b3:	cmp    eax,0x0
  4093b6:	je     4093c9 <flatcc_builder_append_union_vector@@Base+0x79>
  4093bc:	mov    QWORD PTR [rbp-0x8],0x0
  4093c4:	jmp    4093ed <flatcc_builder_append_union_vector@@Base+0x9d>
  4093c9:	mov    rdi,QWORD PTR [rbp-0x10]
  4093cd:	mov    rax,QWORD PTR [rbp-0x18]
  4093d1:	mov    rcx,QWORD PTR [rbp-0x20]
  4093d5:	mov    edx,ecx
  4093d7:	mov    edx,edx
  4093d9:	mov    ecx,edx
  4093db:	shl    rcx,0x3
  4093df:	mov    edx,ecx
  4093e1:	mov    rsi,rax
  4093e4:	call   4064c0 <flatcc_builder_vector_push@@Base+0xf0>
  4093e9:	mov    QWORD PTR [rbp-0x8],rax
  4093ed:	mov    rax,QWORD PTR [rbp-0x8]
  4093f1:	add    rsp,0x20
  4093f5:	pop    rbp
  4093f6:	ret    
  4093f7:	nop    WORD PTR [rax+rax*1+0x0]

0000000000409400 <flatcc_builder_create_string@@Base>:
  409400:	push   rbp
  409401:	mov    rbp,rsp
  409404:	sub    rsp,0xc0
  40940b:	mov    eax,0xffffffff
  409410:	mov    ecx,eax
  409412:	mov    QWORD PTR [rbp-0x10],rdi
  409416:	mov    QWORD PTR [rbp-0x18],rsi
  40941a:	mov    QWORD PTR [rbp-0x20],rdx
  40941e:	cmp    QWORD PTR [rbp-0x20],rcx
  409422:	jbe    409434 <flatcc_builder_create_string@@Base+0x34>
  409428:	mov    DWORD PTR [rbp-0x4],0x0
  40942f:	jmp    4095bf <flatcc_builder_create_string@@Base+0x1bf>
  409434:	mov    rax,QWORD PTR [rbp-0x20]
  409438:	mov    ecx,eax
  40943a:	mov    edi,ecx
  40943c:	call   405410 <flatcc_builder_embed_buffer@@Base+0x420>
  409441:	mov    DWORD PTR [rbp-0x28],eax
  409444:	mov    rdi,QWORD PTR [rbp-0x10]
  409448:	mov    rdx,QWORD PTR [rbp-0x20]
  40944c:	mov    eax,edx
  40944e:	add    eax,0x1
  409451:	mov    esi,eax
  409453:	mov    edx,0x4
  409458:	call   4053e0 <flatcc_builder_embed_buffer@@Base+0x3f0>
  40945d:	add    eax,0x1
  409460:	mov    DWORD PTR [rbp-0x24],eax
  409463:	mov    QWORD PTR [rbp-0xb8],0x0
  40946e:	mov    DWORD PTR [rbp-0xb0],0x0
  409478:	mov    rdi,QWORD PTR [rbp-0xb8]
  40947f:	add    rdi,0x4
  409483:	mov    QWORD PTR [rbp-0xb8],rdi
  40948a:	lea    rdi,[rbp-0x28]
  40948e:	lea    r8,[rbp-0xb8]
  409495:	mov    r9,r8
  409498:	add    r9,0x10
  40949c:	movsxd r10,DWORD PTR [rbp-0xb0]
  4094a3:	shl    r10,0x4
  4094a7:	add    r9,r10
  4094aa:	mov    QWORD PTR [r9],rdi
  4094ad:	add    r8,0x10
  4094b1:	movsxd rdi,DWORD PTR [rbp-0xb0]
  4094b8:	shl    rdi,0x4
  4094bc:	add    r8,rdi
  4094bf:	mov    QWORD PTR [r8+0x8],0x4
  4094c7:	mov    eax,DWORD PTR [rbp-0xb0]
  4094cd:	add    eax,0x1
  4094d0:	mov    DWORD PTR [rbp-0xb0],eax
  4094d6:	cmp    QWORD PTR [rbp-0x20],0x0
  4094db:	jbe    40953f <flatcc_builder_create_string@@Base+0x13f>
  4094e1:	mov    rax,QWORD PTR [rbp-0x20]
  4094e5:	add    rax,QWORD PTR [rbp-0xb8]
  4094ec:	mov    QWORD PTR [rbp-0xb8],rax
  4094f3:	mov    rax,QWORD PTR [rbp-0x18]
  4094f7:	lea    rcx,[rbp-0xb8]
  4094fe:	mov    rdx,rcx
  409501:	add    rdx,0x10
  409505:	movsxd rsi,DWORD PTR [rbp-0xb0]
  40950c:	shl    rsi,0x4
  409510:	add    rdx,rsi
  409513:	mov    QWORD PTR [rdx],rax
  409516:	mov    rax,QWORD PTR [rbp-0x20]
  40951a:	add    rcx,0x10
  40951e:	movsxd rdx,DWORD PTR [rbp-0xb0]
  409525:	shl    rdx,0x4
  409529:	add    rcx,rdx
  40952c:	mov    QWORD PTR [rcx+0x8],rax
  409530:	mov    edi,DWORD PTR [rbp-0xb0]
  409536:	add    edi,0x1
  409539:	mov    DWORD PTR [rbp-0xb0],edi
  40953f:	cmp    DWORD PTR [rbp-0x24],0x0
  409543:	jbe    4095ac <flatcc_builder_create_string@@Base+0x1ac>
  409549:	lea    rax,[rip+0x4c80]        # 40e1d0 <flatcc_builder_padding_base@@Base>
  409550:	mov    ecx,DWORD PTR [rbp-0x24]
  409553:	mov    edx,ecx
  409555:	add    rdx,QWORD PTR [rbp-0xb8]
  40955c:	mov    QWORD PTR [rbp-0xb8],rdx
  409563:	lea    rdx,[rbp-0xb8]
  40956a:	mov    rsi,rdx
  40956d:	add    rsi,0x10
  409571:	movsxd rdi,DWORD PTR [rbp-0xb0]
  409578:	shl    rdi,0x4
  40957c:	add    rsi,rdi
  40957f:	mov    QWORD PTR [rsi],rax
  409582:	mov    ecx,DWORD PTR [rbp-0x24]
  409585:	mov    eax,ecx
  409587:	add    rdx,0x10
  40958b:	movsxd rsi,DWORD PTR [rbp-0xb0]
  409592:	shl    rsi,0x4
  409596:	add    rdx,rsi
  409599:	mov    QWORD PTR [rdx+0x8],rax
  40959d:	mov    ecx,DWORD PTR [rbp-0xb0]
  4095a3:	add    ecx,0x1
  4095a6:	mov    DWORD PTR [rbp-0xb0],ecx
  4095ac:	mov    rdi,QWORD PTR [rbp-0x10]
  4095b0:	lea    rsi,[rbp-0xb8]
  4095b7:	call   405420 <flatcc_builder_embed_buffer@@Base+0x430>
  4095bc:	mov    DWORD PTR [rbp-0x4],eax
  4095bf:	mov    eax,DWORD PTR [rbp-0x4]
  4095c2:	add    rsp,0xc0
  4095c9:	pop    rbp
  4095ca:	ret    
  4095cb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004095d0 <flatcc_builder_create_string_str@@Base>:
  4095d0:	push   rbp
  4095d1:	mov    rbp,rsp
  4095d4:	sub    rsp,0x20
  4095d8:	mov    QWORD PTR [rbp-0x8],rdi
  4095dc:	mov    QWORD PTR [rbp-0x10],rsi
  4095e0:	mov    rdi,QWORD PTR [rbp-0x8]
  4095e4:	mov    rsi,QWORD PTR [rbp-0x10]
  4095e8:	mov    rax,QWORD PTR [rbp-0x10]
  4095ec:	mov    QWORD PTR [rbp-0x18],rdi
  4095f0:	mov    rdi,rax
  4095f3:	mov    QWORD PTR [rbp-0x20],rsi
  4095f7:	call   403050 <strlen@plt>
  4095fc:	mov    rdi,QWORD PTR [rbp-0x18]
  409600:	mov    rsi,QWORD PTR [rbp-0x20]
  409604:	mov    rdx,rax
  409607:	call   409400 <flatcc_builder_create_string@@Base>
  40960c:	add    rsp,0x20
  409610:	pop    rbp
  409611:	ret    
  409612:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40961c:	nop    DWORD PTR [rax+0x0]

0000000000409620 <flatcc_builder_create_string_strn@@Base>:
  409620:	push   rbp
  409621:	mov    rbp,rsp
  409624:	sub    rsp,0x30
  409628:	mov    QWORD PTR [rbp-0x8],rdi
  40962c:	mov    QWORD PTR [rbp-0x10],rsi
  409630:	mov    QWORD PTR [rbp-0x18],rdx
  409634:	mov    rdi,QWORD PTR [rbp-0x8]
  409638:	mov    rsi,QWORD PTR [rbp-0x10]
  40963c:	mov    rdx,QWORD PTR [rbp-0x10]
  409640:	mov    rax,QWORD PTR [rbp-0x18]
  409644:	mov    QWORD PTR [rbp-0x20],rdi
  409648:	mov    rdi,rdx
  40964b:	mov    QWORD PTR [rbp-0x28],rsi
  40964f:	mov    rsi,rax
  409652:	call   4069a0 <flatcc_builder_append_string_strn@@Base+0x50>
  409657:	mov    rdi,QWORD PTR [rbp-0x20]
  40965b:	mov    rsi,QWORD PTR [rbp-0x28]
  40965f:	mov    rdx,rax
  409662:	call   409400 <flatcc_builder_create_string@@Base>
  409667:	add    rsp,0x30
  40966b:	pop    rbp
  40966c:	ret    
  40966d:	nop    DWORD PTR [rax]

0000000000409670 <flatcc_builder_end_string@@Base>:
  409670:	push   rbp
  409671:	mov    rbp,rsp
  409674:	sub    rsp,0x20
  409678:	mov    QWORD PTR [rbp-0x10],rdi
  40967c:	mov    rdi,QWORD PTR [rbp-0x10]
  409680:	mov    rdi,QWORD PTR [rdi+0x30]
  409684:	movzx  eax,WORD PTR [rdi+0xe]
  409688:	cmp    eax,0x6
  40968b:	jne    409696 <flatcc_builder_end_string@@Base+0x26>
  409691:	jmp    4096b5 <flatcc_builder_end_string@@Base+0x45>
  409696:	lea    rdi,[rip+0x5284]        # 40e921 <flatcc_builder_padding_base@@Base+0x751>
  40969d:	lea    rsi,[rip+0x4d3e]        # 40e3e2 <flatcc_builder_padding_base@@Base+0x212>
  4096a4:	mov    edx,0x6c4
  4096a9:	lea    rcx,[rip+0x5b24]        # 40f1d4 <flatcc_builder_padding_base@@Base+0x1004>
  4096b0:	call   403060 <__assert_fail@plt>
  4096b5:	mov    rax,QWORD PTR [rbp-0x10]
  4096b9:	mov    rax,QWORD PTR [rax+0x30]
  4096bd:	mov    ecx,DWORD PTR [rax+0x14]
  4096c0:	mov    rax,QWORD PTR [rbp-0x10]
  4096c4:	cmp    ecx,DWORD PTR [rax+0x20]
  4096c7:	jne    4096d2 <flatcc_builder_end_string@@Base+0x62>
  4096cd:	jmp    4096f1 <flatcc_builder_end_string@@Base+0x81>
  4096d2:	lea    rdi,[rip+0x5b3e]        # 40f217 <flatcc_builder_padding_base@@Base+0x1047>
  4096d9:	lea    rsi,[rip+0x4d02]        # 40e3e2 <flatcc_builder_padding_base@@Base+0x212>
  4096e0:	mov    edx,0x6c5
  4096e5:	lea    rcx,[rip+0x5ae8]        # 40f1d4 <flatcc_builder_padding_base@@Base+0x1004>
  4096ec:	call   403060 <__assert_fail@plt>
  4096f1:	mov    rdi,QWORD PTR [rbp-0x10]
  4096f5:	mov    rax,QWORD PTR [rbp-0x10]
  4096f9:	mov    rsi,QWORD PTR [rax+0x18]
  4096fd:	mov    rax,QWORD PTR [rbp-0x10]
  409701:	mov    ecx,DWORD PTR [rax+0x20]
  409704:	mov    edx,ecx
  409706:	call   409400 <flatcc_builder_create_string@@Base>
  40970b:	xor    ecx,ecx
  40970d:	mov    DWORD PTR [rbp-0x14],eax
  409710:	cmp    ecx,eax
  409712:	jne    409724 <flatcc_builder_end_string@@Base+0xb4>
  409718:	mov    DWORD PTR [rbp-0x4],0x0
  40971f:	jmp    409733 <flatcc_builder_end_string@@Base+0xc3>
  409724:	mov    rdi,QWORD PTR [rbp-0x10]
  409728:	call   405fa0 <flatcc_builder_end_buffer@@Base+0x160>
  40972d:	mov    eax,DWORD PTR [rbp-0x14]
  409730:	mov    DWORD PTR [rbp-0x4],eax
  409733:	mov    eax,DWORD PTR [rbp-0x4]
  409736:	add    rsp,0x20
  40973a:	pop    rbp
  40973b:	ret    
  40973c:	nop    DWORD PTR [rax+0x0]

0000000000409740 <flatcc_builder_string_edit@@Base>:
  409740:	push   rbp
  409741:	mov    rbp,rsp
  409744:	mov    QWORD PTR [rbp-0x8],rdi
  409748:	mov    rdi,QWORD PTR [rbp-0x8]
  40974c:	mov    rax,QWORD PTR [rdi+0x18]
  409750:	pop    rbp
  409751:	ret    
  409752:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40975c:	nop    DWORD PTR [rax+0x0]

0000000000409760 <flatcc_builder_string_len@@Base>:
  409760:	push   rbp
  409761:	mov    rbp,rsp
  409764:	mov    QWORD PTR [rbp-0x8],rdi
  409768:	mov    rdi,QWORD PTR [rbp-0x8]
  40976c:	mov    rdi,QWORD PTR [rdi+0x30]
  409770:	mov    eax,DWORD PTR [rdi+0x14]
  409773:	pop    rbp
  409774:	ret    
  409775:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40977f:	nop
  409780:	push   rbp
  409781:	mov    rbp,rsp
  409784:	sub    rsp,0x20
  409788:	mov    ax,cx
  40978b:	mov    r8w,dx
  40978f:	mov    QWORD PTR [rbp-0x10],rdi
  409793:	mov    DWORD PTR [rbp-0x14],esi
  409796:	mov    WORD PTR [rbp-0x16],r8w
  40979b:	mov    WORD PTR [rbp-0x18],ax
  40979f:	mov    rdi,QWORD PTR [rbp-0x10]
  4097a3:	mov    ecx,DWORD PTR [rdi+0x20]
  4097a6:	movzx  edx,WORD PTR [rbp-0x16]
  4097aa:	add    ecx,edx
  4097ac:	sub    ecx,0x1
  4097af:	movzx  edx,WORD PTR [rbp-0x16]
  4097b3:	sub    edx,0x1
  4097b6:	xor    edx,0xffffffff
  4097b9:	and    ecx,edx
  4097bb:	mov    DWORD PTR [rbp-0x1c],ecx
  4097be:	mov    ecx,DWORD PTR [rbp-0x1c]
  4097c1:	add    ecx,DWORD PTR [rbp-0x14]
  4097c4:	mov    rdi,QWORD PTR [rbp-0x10]
  4097c8:	mov    DWORD PTR [rdi+0x20],ecx
  4097cb:	mov    rdi,QWORD PTR [rbp-0x10]
  4097cf:	cmp    ecx,DWORD PTR [rdi+0x24]
  4097d2:	jb     40980f <flatcc_builder_string_len@@Base+0xaf>
  4097d8:	mov    rdi,QWORD PTR [rbp-0x10]
  4097dc:	mov    rax,QWORD PTR [rbp-0x10]
  4097e0:	mov    ecx,DWORD PTR [rax+0x20]
  4097e3:	add    ecx,0x1
  4097e6:	mov    ecx,ecx
  4097e8:	mov    esi,ecx
  4097ea:	mov    edx,0xfffc
  4097ef:	call   40a180 <flatcc_builder_get_emit_context@@Base+0x50>
  4097f4:	cmp    eax,0x0
  4097f7:	je     40980a <flatcc_builder_string_len@@Base+0xaa>
  4097fd:	mov    QWORD PTR [rbp-0x8],0x0
  409805:	jmp    409867 <flatcc_builder_string_len@@Base+0x107>
  40980a:	jmp    40980f <flatcc_builder_string_len@@Base+0xaf>
  40980f:	mov    eax,DWORD PTR [rbp-0x1c]
  409812:	mov    ecx,eax
  409814:	add    rcx,0x4
  409818:	mov    dx,cx
  40981b:	mov    rcx,QWORD PTR [rbp-0x10]
  40981f:	mov    rcx,QWORD PTR [rcx+0x8]
  409823:	movzx  eax,WORD PTR [rbp-0x18]
  409827:	mov    esi,eax
  409829:	mov    WORD PTR [rcx+rsi*2],dx
  40982d:	movzx  eax,WORD PTR [rbp-0x18]
  409831:	mov    rcx,QWORD PTR [rbp-0x10]
  409835:	movzx  edi,WORD PTR [rcx+0x10]
  409839:	cmp    eax,edi
  40983b:	jl     409853 <flatcc_builder_string_len@@Base+0xf3>
  409841:	movzx  eax,WORD PTR [rbp-0x18]
  409845:	add    eax,0x1
  409848:	mov    cx,ax
  40984b:	mov    rdx,QWORD PTR [rbp-0x10]
  40984f:	mov    WORD PTR [rdx+0x10],cx
  409853:	mov    rax,QWORD PTR [rbp-0x10]
  409857:	mov    rax,QWORD PTR [rax+0x18]
  40985b:	mov    ecx,DWORD PTR [rbp-0x1c]
  40985e:	mov    edx,ecx
  409860:	add    rax,rdx
  409863:	mov    QWORD PTR [rbp-0x8],rax
  409867:	mov    rax,QWORD PTR [rbp-0x8]
  40986b:	add    rsp,0x20
  40986f:	pop    rbp
  409870:	ret    
  409871:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40987b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000409880 <flatcc_builder_table_edit@@Base>:
  409880:	push   rbp
  409881:	mov    rbp,rsp
  409884:	sub    rsp,0x10
  409888:	mov    QWORD PTR [rbp-0x8],rdi
  40988c:	mov    QWORD PTR [rbp-0x10],rsi
  409890:	mov    rsi,QWORD PTR [rbp-0x8]
  409894:	mov    rsi,QWORD PTR [rsi+0x30]
  409898:	movzx  eax,WORD PTR [rsi+0xe]
  40989c:	cmp    eax,0x3
  40989f:	jne    4098aa <flatcc_builder_table_edit@@Base+0x2a>
  4098a5:	jmp    4098c9 <flatcc_builder_table_edit@@Base+0x49>
  4098aa:	lea    rdi,[rip+0x5360]        # 40ec11 <flatcc_builder_padding_base@@Base+0xa41>
  4098b1:	lea    rsi,[rip+0x4b2a]        # 40e3e2 <flatcc_builder_padding_base@@Base+0x212>
  4098b8:	mov    edx,0x702
  4098bd:	lea    rcx,[rip+0x5a05]        # 40f2c9 <flatcc_builder_padding_base@@Base+0x10f9>
  4098c4:	call   403060 <__assert_fail@plt>
  4098c9:	xor    eax,eax
  4098cb:	mov    ecx,eax
  4098cd:	mov    rdx,QWORD PTR [rbp-0x8]
  4098d1:	mov    rdx,QWORD PTR [rdx+0x18]
  4098d5:	mov    rsi,QWORD PTR [rbp-0x8]
  4098d9:	mov    eax,DWORD PTR [rsi+0x20]
  4098dc:	mov    esi,eax
  4098de:	add    rdx,rsi
  4098e1:	sub    rcx,QWORD PTR [rbp-0x10]
  4098e5:	add    rdx,rcx
  4098e8:	mov    rax,rdx
  4098eb:	add    rsp,0x10
  4098ef:	pop    rbp
  4098f0:	ret    
  4098f1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4098fb:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000409900 <flatcc_builder_table_add_copy@@Base>:
  409900:	push   rbp
  409901:	mov    rbp,rsp
  409904:	sub    rsp,0x30
  409908:	mov    ax,r8w
  40990c:	mov    QWORD PTR [rbp-0x8],rdi
  409910:	mov    DWORD PTR [rbp-0xc],esi
  409913:	mov    QWORD PTR [rbp-0x18],rdx
  409917:	mov    QWORD PTR [rbp-0x20],rcx
  40991b:	mov    WORD PTR [rbp-0x22],ax
  40991f:	mov    rdi,QWORD PTR [rbp-0x8]
  409923:	mov    esi,DWORD PTR [rbp-0xc]
  409926:	mov    rdx,QWORD PTR [rbp-0x20]
  40992a:	movzx  ecx,WORD PTR [rbp-0x22]
  40992e:	call   408a40 <flatcc_builder_table_add@@Base>
  409933:	mov    QWORD PTR [rbp-0x30],rax
  409937:	cmp    rax,0x0
  40993b:	je     409952 <flatcc_builder_table_add_copy@@Base+0x52>
  409941:	mov    rdi,QWORD PTR [rbp-0x30]
  409945:	mov    rsi,QWORD PTR [rbp-0x18]
  409949:	mov    rdx,QWORD PTR [rbp-0x20]
  40994d:	call   4030a0 <memcpy@plt>
  409952:	mov    rax,QWORD PTR [rbp-0x30]
  409956:	add    rsp,0x30
  40995a:	pop    rbp
  40995b:	ret    
  40995c:	nop    DWORD PTR [rax+0x0]
  409960:	push   rbp
  409961:	mov    rbp,rsp
  409964:	sub    rsp,0x20
  409968:	mov    ax,si
  40996b:	mov    QWORD PTR [rbp-0x10],rdi
  40996f:	mov    WORD PTR [rbp-0x12],ax
  409973:	mov    rdi,QWORD PTR [rbp-0x10]
  409977:	mov    esi,DWORD PTR [rdi+0x20]
  40997a:	mov    edi,esi
  40997c:	add    rdi,0x4
  409980:	sub    rdi,0x1
  409984:	and    rdi,0xfffffffffffffffc
  409988:	mov    esi,edi
  40998a:	mov    DWORD PTR [rbp-0x18],esi
  40998d:	mov    esi,DWORD PTR [rbp-0x18]
  409990:	mov    edi,esi
  409992:	add    rdi,0x4
  409996:	mov    esi,edi
  409998:	mov    rdi,QWORD PTR [rbp-0x10]
  40999c:	mov    DWORD PTR [rdi+0x20],esi
  40999f:	mov    rdi,QWORD PTR [rbp-0x10]
  4099a3:	cmp    esi,DWORD PTR [rdi+0x24]
  4099a6:	jbe    4099de <flatcc_builder_table_add_copy@@Base+0xde>
  4099ac:	mov    rdi,QWORD PTR [rbp-0x10]
  4099b0:	mov    rax,QWORD PTR [rbp-0x10]
  4099b4:	mov    ecx,DWORD PTR [rax+0x20]
  4099b7:	mov    esi,ecx
  4099b9:	mov    edx,0xfffc
  4099be:	call   40a180 <flatcc_builder_get_emit_context@@Base+0x50>
  4099c3:	cmp    eax,0x0
  4099c6:	je     4099d9 <flatcc_builder_table_add_copy@@Base+0xd9>
  4099cc:	mov    QWORD PTR [rbp-0x8],0x0
  4099d4:	jmp    409a50 <flatcc_builder_table_add_copy@@Base+0x150>
  4099d9:	jmp    4099de <flatcc_builder_table_add_copy@@Base+0xde>
  4099de:	mov    eax,DWORD PTR [rbp-0x18]
  4099e1:	mov    ecx,eax
  4099e3:	add    rcx,0x4
  4099e7:	mov    dx,cx
  4099ea:	mov    rcx,QWORD PTR [rbp-0x10]
  4099ee:	mov    rcx,QWORD PTR [rcx+0x8]
  4099f2:	movzx  eax,WORD PTR [rbp-0x12]
  4099f6:	mov    esi,eax
  4099f8:	mov    WORD PTR [rcx+rsi*2],dx
  4099fc:	movzx  eax,WORD PTR [rbp-0x12]
  409a00:	mov    rcx,QWORD PTR [rbp-0x10]
  409a04:	movzx  edi,WORD PTR [rcx+0x10]
  409a08:	cmp    eax,edi
  409a0a:	jl     409a22 <flatcc_builder_table_add_copy@@Base+0x122>
  409a10:	movzx  eax,WORD PTR [rbp-0x12]
  409a14:	add    eax,0x1
  409a17:	mov    cx,ax
  409a1a:	mov    rdx,QWORD PTR [rbp-0x10]
  409a1e:	mov    WORD PTR [rdx+0x10],cx
  409a22:	mov    eax,DWORD PTR [rbp-0x18]
  409a25:	mov    cx,ax
  409a28:	mov    rdx,QWORD PTR [rbp-0x10]
  409a2c:	mov    rsi,QWORD PTR [rdx]
  409a2f:	mov    rdi,rsi
  409a32:	add    rdi,0x2
  409a36:	mov    QWORD PTR [rdx],rdi
  409a39:	mov    WORD PTR [rsi],cx
  409a3c:	mov    rdx,QWORD PTR [rbp-0x10]
  409a40:	mov    rdx,QWORD PTR [rdx+0x18]
  409a44:	mov    eax,DWORD PTR [rbp-0x18]
  409a47:	mov    esi,eax
  409a49:	add    rdx,rsi
  409a4c:	mov    QWORD PTR [rbp-0x8],rdx
  409a50:	mov    rax,QWORD PTR [rbp-0x8]
  409a54:	add    rsp,0x20
  409a58:	pop    rbp
  409a59:	ret    
  409a5a:	nop    WORD PTR [rax+rax*1+0x0]

0000000000409a60 <flatcc_builder_push_buffer_alignment@@Base>:
  409a60:	push   rbp
  409a61:	mov    rbp,rsp
  409a64:	mov    QWORD PTR [rbp-0x8],rdi
  409a68:	mov    rdi,QWORD PTR [rbp-0x8]
  409a6c:	mov    ax,WORD PTR [rdi+0xe8]
  409a73:	mov    WORD PTR [rbp-0xa],ax
  409a77:	mov    rdi,QWORD PTR [rbp-0x8]
  409a7b:	mov    WORD PTR [rdi+0xe8],0x4
  409a84:	movzx  eax,WORD PTR [rbp-0xa]
  409a88:	pop    rbp
  409a89:	ret    
  409a8a:	nop    WORD PTR [rax+rax*1+0x0]

0000000000409a90 <flatcc_builder_pop_buffer_alignment@@Base>:
  409a90:	push   rbp
  409a91:	mov    rbp,rsp
  409a94:	sub    rsp,0x10
  409a98:	mov    ax,si
  409a9b:	mov    QWORD PTR [rbp-0x8],rdi
  409a9f:	mov    WORD PTR [rbp-0xa],ax
  409aa3:	mov    rdi,QWORD PTR [rbp-0x8]
  409aa7:	movzx  esi,WORD PTR [rbp-0xa]
  409aab:	call   405930 <flatcc_builder_create_buffer@@Base+0x410>
  409ab0:	add    rsp,0x10
  409ab4:	pop    rbp
  409ab5:	ret    
  409ab6:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000409ac0 <flatcc_builder_get_buffer_alignment@@Base>:
  409ac0:	push   rbp
  409ac1:	mov    rbp,rsp
  409ac4:	mov    QWORD PTR [rbp-0x8],rdi
  409ac8:	mov    rdi,QWORD PTR [rbp-0x8]
  409acc:	movzx  eax,WORD PTR [rdi+0xe8]
  409ad3:	pop    rbp
  409ad4:	ret    
  409ad5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  409adf:	nop

0000000000409ae0 <flatcc_builder_set_vtable_clustering@@Base>:
  409ae0:	push   rbp
  409ae1:	mov    rbp,rsp
  409ae4:	mov    QWORD PTR [rbp-0x8],rdi
  409ae8:	mov    DWORD PTR [rbp-0xc],esi
  409aeb:	cmp    DWORD PTR [rbp-0xc],0x0
  409aef:	setne  al
  409af2:	xor    al,0xff
  409af4:	and    al,0x1
  409af6:	movzx  esi,al
  409af9:	mov    rdi,QWORD PTR [rbp-0x8]
  409afd:	mov    DWORD PTR [rdi+0x124],esi
  409b03:	pop    rbp
  409b04:	ret    
  409b05:	nop    WORD PTR cs:[rax+rax*1+0x0]
  409b0f:	nop

0000000000409b10 <flatcc_builder_set_block_align@@Base>:
  409b10:	push   rbp
  409b11:	mov    rbp,rsp
  409b14:	mov    ax,si
  409b17:	mov    QWORD PTR [rbp-0x8],rdi
  409b1b:	mov    WORD PTR [rbp-0xa],ax
  409b1f:	mov    ax,WORD PTR [rbp-0xa]
  409b23:	mov    rdi,QWORD PTR [rbp-0x8]
  409b27:	mov    WORD PTR [rdi+0xec],ax
  409b2e:	pop    rbp
  409b2f:	ret    

0000000000409b30 <flatcc_builder_get_level@@Base>:
  409b30:	push   rbp
  409b31:	mov    rbp,rsp
  409b34:	mov    QWORD PTR [rbp-0x8],rdi
  409b38:	mov    rdi,QWORD PTR [rbp-0x8]
  409b3c:	mov    eax,DWORD PTR [rdi+0x104]
  409b42:	pop    rbp
  409b43:	ret    
  409b44:	nop    WORD PTR cs:[rax+rax*1+0x0]
  409b4e:	xchg   ax,ax

0000000000409b50 <flatcc_builder_set_max_level@@Base>:
  409b50:	push   rbp
  409b51:	mov    rbp,rsp
  409b54:	mov    QWORD PTR [rbp-0x8],rdi
  409b58:	mov    DWORD PTR [rbp-0xc],esi
  409b5b:	mov    esi,DWORD PTR [rbp-0xc]
  409b5e:	mov    rdi,QWORD PTR [rbp-0x8]
  409b62:	mov    DWORD PTR [rdi+0x120],esi
  409b68:	mov    rdi,QWORD PTR [rbp-0x8]
  409b6c:	mov    esi,DWORD PTR [rdi+0x108]
  409b72:	mov    rdi,QWORD PTR [rbp-0x8]
  409b76:	cmp    esi,DWORD PTR [rdi+0x120]
  409b7c:	jge    409b96 <flatcc_builder_set_max_level@@Base+0x46>
  409b82:	mov    rax,QWORD PTR [rbp-0x8]
  409b86:	mov    ecx,DWORD PTR [rax+0x120]
  409b8c:	mov    rax,QWORD PTR [rbp-0x8]
  409b90:	mov    DWORD PTR [rax+0x108],ecx
  409b96:	pop    rbp
  409b97:	ret    
  409b98:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000409ba0 <flatcc_builder_get_buffer_size@@Base>:
  409ba0:	push   rbp
  409ba1:	mov    rbp,rsp
  409ba4:	mov    QWORD PTR [rbp-0x8],rdi
  409ba8:	mov    rdi,QWORD PTR [rbp-0x8]
  409bac:	mov    eax,DWORD PTR [rdi+0xf4]
  409bb2:	mov    rdi,QWORD PTR [rbp-0x8]
  409bb6:	sub    eax,DWORD PTR [rdi+0xf0]
  409bbc:	cdqe   
  409bbe:	pop    rbp
  409bbf:	ret    

0000000000409bc0 <flatcc_builder_get_buffer_start@@Base>:
  409bc0:	push   rbp
  409bc1:	mov    rbp,rsp
  409bc4:	mov    QWORD PTR [rbp-0x8],rdi
  409bc8:	mov    rdi,QWORD PTR [rbp-0x8]
  409bcc:	mov    eax,DWORD PTR [rdi+0xf0]
  409bd2:	pop    rbp
  409bd3:	ret    
  409bd4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  409bde:	xchg   ax,ax

0000000000409be0 <flatcc_builder_get_buffer_end@@Base>:
  409be0:	push   rbp
  409be1:	mov    rbp,rsp
  409be4:	mov    QWORD PTR [rbp-0x8],rdi
  409be8:	mov    rdi,QWORD PTR [rbp-0x8]
  409bec:	mov    eax,DWORD PTR [rdi+0xf4]
  409bf2:	pop    rbp
  409bf3:	ret    
  409bf4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  409bfe:	xchg   ax,ax

0000000000409c00 <flatcc_builder_set_vtable_cache_limit@@Base>:
  409c00:	push   rbp
  409c01:	mov    rbp,rsp
  409c04:	mov    QWORD PTR [rbp-0x8],rdi
  409c08:	mov    QWORD PTR [rbp-0x10],rsi
  409c0c:	mov    rsi,QWORD PTR [rbp-0x10]
  409c10:	mov    rdi,QWORD PTR [rbp-0x8]
  409c14:	mov    QWORD PTR [rdi+0x118],rsi
  409c1b:	pop    rbp
  409c1c:	ret    
  409c1d:	nop    DWORD PTR [rax]

0000000000409c20 <flatcc_builder_set_identifier@@Base>:
  409c20:	push   rbp
  409c21:	mov    rbp,rsp
  409c24:	mov    QWORD PTR [rbp-0x8],rdi
  409c28:	mov    QWORD PTR [rbp-0x10],rsi
  409c2c:	mov    rsi,QWORD PTR [rbp-0x8]
  409c30:	add    rsi,0x110
  409c37:	cmp    QWORD PTR [rbp-0x10],0x0
  409c3c:	mov    QWORD PTR [rbp-0x18],rsi
  409c40:	je     409c53 <flatcc_builder_set_identifier@@Base+0x33>
  409c46:	mov    rax,QWORD PTR [rbp-0x10]
  409c4a:	mov    QWORD PTR [rbp-0x20],rax
  409c4e:	jmp    409c63 <flatcc_builder_set_identifier@@Base+0x43>
  409c53:	lea    rax,[rip+0x4576]        # 40e1d0 <flatcc_builder_padding_base@@Base>
  409c5a:	mov    QWORD PTR [rbp-0x20],rax
  409c5e:	jmp    409c63 <flatcc_builder_set_identifier@@Base+0x43>
  409c63:	mov    rax,QWORD PTR [rbp-0x20]
  409c67:	mov    ecx,DWORD PTR [rax]
  409c69:	mov    rax,QWORD PTR [rbp-0x18]
  409c6d:	mov    DWORD PTR [rax],ecx
  409c6f:	pop    rbp
  409c70:	ret    
  409c71:	nop    WORD PTR cs:[rax+rax*1+0x0]
  409c7b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000409c80 <flatcc_builder_get_type@@Base>:
  409c80:	push   rbp
  409c81:	mov    rbp,rsp
  409c84:	mov    QWORD PTR [rbp-0x8],rdi
  409c88:	mov    rdi,QWORD PTR [rbp-0x8]
  409c8c:	cmp    QWORD PTR [rdi+0x30],0x0
  409c91:	je     409cab <flatcc_builder_get_type@@Base+0x2b>
  409c97:	mov    rax,QWORD PTR [rbp-0x8]
  409c9b:	mov    rax,QWORD PTR [rax+0x30]
  409c9f:	movzx  ecx,WORD PTR [rax+0xe]
  409ca3:	mov    DWORD PTR [rbp-0xc],ecx
  409ca6:	jmp    409cb5 <flatcc_builder_get_type@@Base+0x35>
  409cab:	xor    eax,eax
  409cad:	mov    DWORD PTR [rbp-0xc],eax
  409cb0:	jmp    409cb5 <flatcc_builder_get_type@@Base+0x35>
  409cb5:	mov    eax,DWORD PTR [rbp-0xc]
  409cb8:	pop    rbp
  409cb9:	ret    
  409cba:	nop    WORD PTR [rax+rax*1+0x0]

0000000000409cc0 <flatcc_builder_get_type_at@@Base>:
  409cc0:	push   rbp
  409cc1:	mov    rbp,rsp
  409cc4:	mov    QWORD PTR [rbp-0x10],rdi
  409cc8:	mov    DWORD PTR [rbp-0x14],esi
  409ccb:	cmp    DWORD PTR [rbp-0x14],0x1
  409ccf:	jl     409ce8 <flatcc_builder_get_type_at@@Base+0x28>
  409cd5:	mov    eax,DWORD PTR [rbp-0x14]
  409cd8:	mov    rcx,QWORD PTR [rbp-0x10]
  409cdc:	cmp    eax,DWORD PTR [rcx+0x104]
  409ce2:	jle    409cf4 <flatcc_builder_get_type_at@@Base+0x34>
  409ce8:	mov    DWORD PTR [rbp-0x4],0x0
  409cef:	jmp    409d1a <flatcc_builder_get_type_at@@Base+0x5a>
  409cf4:	mov    rax,QWORD PTR [rbp-0x10]
  409cf8:	mov    rax,QWORD PTR [rax+0x30]
  409cfc:	mov    ecx,DWORD PTR [rbp-0x14]
  409cff:	mov    rdx,QWORD PTR [rbp-0x10]
  409d03:	sub    ecx,DWORD PTR [rdx+0x104]
  409d09:	movsxd rdx,ecx
  409d0c:	imul   rdx,rdx,0x24
  409d10:	add    rax,rdx
  409d13:	movzx  ecx,WORD PTR [rax+0xe]
  409d17:	mov    DWORD PTR [rbp-0x4],ecx
  409d1a:	mov    eax,DWORD PTR [rbp-0x4]
  409d1d:	pop    rbp
  409d1e:	ret    
  409d1f:	nop

0000000000409d20 <flatcc_builder_get_direct_buffer@@Base>:
  409d20:	push   rbp
  409d21:	mov    rbp,rsp
  409d24:	sub    rsp,0x20
  409d28:	mov    QWORD PTR [rbp-0x10],rdi
  409d2c:	mov    QWORD PTR [rbp-0x18],rsi
  409d30:	mov    rsi,QWORD PTR [rbp-0x10]
  409d34:	cmp    DWORD PTR [rsi+0x128],0x0
  409d3b:	je     409d60 <flatcc_builder_get_direct_buffer@@Base+0x40>
  409d41:	mov    rax,QWORD PTR [rbp-0x10]
  409d45:	add    rax,0x130
  409d4b:	mov    rsi,QWORD PTR [rbp-0x18]
  409d4f:	mov    rdi,rax
  409d52:	call   409d90 <flatcc_builder_get_direct_buffer@@Base+0x70>
  409d57:	mov    QWORD PTR [rbp-0x8],rax
  409d5b:	jmp    409d83 <flatcc_builder_get_direct_buffer@@Base+0x63>
  409d60:	cmp    QWORD PTR [rbp-0x18],0x0
  409d65:	je     409d76 <flatcc_builder_get_direct_buffer@@Base+0x56>
  409d6b:	mov    rax,QWORD PTR [rbp-0x18]
  409d6f:	mov    QWORD PTR [rax],0x0
  409d76:	jmp    409d7b <flatcc_builder_get_direct_buffer@@Base+0x5b>
  409d7b:	mov    QWORD PTR [rbp-0x8],0x0
  409d83:	mov    rax,QWORD PTR [rbp-0x8]
  409d87:	add    rsp,0x20
  409d8b:	pop    rbp
  409d8c:	ret    
  409d8d:	nop    DWORD PTR [rax]
  409d90:	push   rbp
  409d91:	mov    rbp,rsp
  409d94:	mov    QWORD PTR [rbp-0x10],rdi
  409d98:	mov    QWORD PTR [rbp-0x18],rsi
  409d9c:	mov    rsi,QWORD PTR [rbp-0x10]
  409da0:	mov    rsi,QWORD PTR [rsi]
  409da3:	mov    rdi,QWORD PTR [rbp-0x10]
  409da7:	cmp    rsi,QWORD PTR [rdi+0x8]
  409dab:	jne    409ddc <flatcc_builder_get_direct_buffer@@Base+0xbc>
  409db1:	cmp    QWORD PTR [rbp-0x18],0x0
  409db6:	je     409dcb <flatcc_builder_get_direct_buffer@@Base+0xab>
  409dbc:	mov    rax,QWORD PTR [rbp-0x10]
  409dc0:	mov    rax,QWORD PTR [rax+0x30]
  409dc4:	mov    rcx,QWORD PTR [rbp-0x18]
  409dc8:	mov    QWORD PTR [rcx],rax
  409dcb:	mov    rax,QWORD PTR [rbp-0x10]
  409dcf:	mov    rax,QWORD PTR [rax+0x10]
  409dd3:	mov    QWORD PTR [rbp-0x8],rax
  409dd7:	jmp    409dfa <flatcc_builder_get_direct_buffer@@Base+0xda>
  409ddc:	cmp    QWORD PTR [rbp-0x18],0x0
  409de1:	je     409df2 <flatcc_builder_get_direct_buffer@@Base+0xd2>
  409de7:	mov    rax,QWORD PTR [rbp-0x18]
  409deb:	mov    QWORD PTR [rax],0x0
  409df2:	mov    QWORD PTR [rbp-0x8],0x0
  409dfa:	mov    rax,QWORD PTR [rbp-0x8]
  409dfe:	pop    rbp
  409dff:	ret    

0000000000409e00 <flatcc_builder_copy_buffer@@Base>:
  409e00:	push   rbp
  409e01:	mov    rbp,rsp
  409e04:	sub    rsp,0x20
  409e08:	mov    QWORD PTR [rbp-0x10],rdi
  409e0c:	mov    QWORD PTR [rbp-0x18],rsi
  409e10:	mov    QWORD PTR [rbp-0x20],rdx
  409e14:	mov    rdx,QWORD PTR [rbp-0x10]
  409e18:	cmp    DWORD PTR [rdx+0x128],0x0
  409e1f:	jne    409e32 <flatcc_builder_copy_buffer@@Base+0x32>
  409e25:	mov    QWORD PTR [rbp-0x8],0x0
  409e2d:	jmp    409e87 <flatcc_builder_copy_buffer@@Base+0x87>
  409e32:	mov    rax,QWORD PTR [rbp-0x10]
  409e36:	add    rax,0x130
  409e3c:	mov    rsi,QWORD PTR [rbp-0x18]
  409e40:	mov    rdx,QWORD PTR [rbp-0x20]
  409e44:	mov    rdi,rax
  409e47:	call   40aaa0 <flatcc_emitter_copy_buffer@@Base>
  409e4c:	mov    QWORD PTR [rbp-0x18],rax
  409e50:	cmp    QWORD PTR [rbp-0x18],0x0
  409e55:	je     409e60 <flatcc_builder_copy_buffer@@Base+0x60>
  409e5b:	jmp    409e7f <flatcc_builder_copy_buffer@@Base+0x7f>
  409e60:	lea    rdi,[rip+0x47e9]        # 40e650 <flatcc_builder_padding_base@@Base+0x480>
  409e67:	lea    rsi,[rip+0x4574]        # 40e3e2 <flatcc_builder_padding_base@@Base+0x212>
  409e6e:	mov    edx,0x786
  409e73:	lea    rcx,[rip+0x54da]        # 40f354 <flatcc_builder_padding_base@@Base+0x1184>
  409e7a:	call   403060 <__assert_fail@plt>
  409e7f:	mov    rax,QWORD PTR [rbp-0x18]
  409e83:	mov    QWORD PTR [rbp-0x8],rax
  409e87:	mov    rax,QWORD PTR [rbp-0x8]
  409e8b:	add    rsp,0x20
  409e8f:	pop    rbp
  409e90:	ret    
  409e91:	nop    WORD PTR cs:[rax+rax*1+0x0]
  409e9b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000409ea0 <flatcc_builder_finalize_buffer@@Base>:
  409ea0:	push   rbp
  409ea1:	mov    rbp,rsp
  409ea4:	sub    rsp,0x20
  409ea8:	mov    QWORD PTR [rbp-0x8],rdi
  409eac:	mov    QWORD PTR [rbp-0x10],rsi
  409eb0:	mov    rdi,QWORD PTR [rbp-0x8]
  409eb4:	call   409ba0 <flatcc_builder_get_buffer_size@@Base>
  409eb9:	mov    QWORD PTR [rbp-0x20],rax
  409ebd:	cmp    QWORD PTR [rbp-0x10],0x0
  409ec2:	je     409ed3 <flatcc_builder_finalize_buffer@@Base+0x33>
  409ec8:	mov    rax,QWORD PTR [rbp-0x20]
  409ecc:	mov    rcx,QWORD PTR [rbp-0x10]
  409ed0:	mov    QWORD PTR [rcx],rax
  409ed3:	mov    rdi,QWORD PTR [rbp-0x20]
  409ed7:	call   4030b0 <malloc@plt>
  409edc:	mov    QWORD PTR [rbp-0x18],rax
  409ee0:	cmp    QWORD PTR [rbp-0x18],0x0
  409ee5:	jne    409f0a <flatcc_builder_finalize_buffer@@Base+0x6a>
  409eeb:	lea    rdi,[rip+0x56b0]        # 40f5a2 <flatcc_builder_padding_base@@Base+0x13d2>
  409ef2:	lea    rsi,[rip+0x44e9]        # 40e3e2 <flatcc_builder_padding_base@@Base+0x212>
  409ef9:	mov    edx,0x798
  409efe:	lea    rcx,[rip+0x5494]        # 40f399 <flatcc_builder_padding_base@@Base+0x11c9>
  409f05:	call   403060 <__assert_fail@plt>
  409f0a:	mov    rdi,QWORD PTR [rbp-0x8]
  409f0e:	mov    rsi,QWORD PTR [rbp-0x18]
  409f12:	mov    rdx,QWORD PTR [rbp-0x20]
  409f16:	call   409e00 <flatcc_builder_copy_buffer@@Base>
  409f1b:	cmp    rax,0x0
  409f1f:	jne    409f44 <flatcc_builder_finalize_buffer@@Base+0xa4>
  409f25:	lea    rdi,[rip+0x5676]        # 40f5a2 <flatcc_builder_padding_base@@Base+0x13d2>
  409f2c:	lea    rsi,[rip+0x44af]        # 40e3e2 <flatcc_builder_padding_base@@Base+0x212>
  409f33:	mov    edx,0x79c
  409f38:	lea    rcx,[rip+0x545a]        # 40f399 <flatcc_builder_padding_base@@Base+0x11c9>
  409f3f:	call   403060 <__assert_fail@plt>
  409f44:	jmp    409f49 <flatcc_builder_finalize_buffer@@Base+0xa9>
  409f49:	cmp    QWORD PTR [rbp-0x18],0x0
  409f4e:	jne    409f6a <flatcc_builder_finalize_buffer@@Base+0xca>
  409f54:	cmp    QWORD PTR [rbp-0x10],0x0
  409f59:	je     409f6a <flatcc_builder_finalize_buffer@@Base+0xca>
  409f5f:	mov    rax,QWORD PTR [rbp-0x10]
  409f63:	mov    QWORD PTR [rax],0x0
  409f6a:	mov    rax,QWORD PTR [rbp-0x18]
  409f6e:	add    rsp,0x20
  409f72:	pop    rbp
  409f73:	ret    
  409f74:	nop    WORD PTR cs:[rax+rax*1+0x0]
  409f7e:	xchg   ax,ax

0000000000409f80 <flatcc_builder_finalize_aligned_buffer@@Base>:
  409f80:	push   rbp
  409f81:	mov    rbp,rsp
  409f84:	sub    rsp,0x30
  409f88:	mov    QWORD PTR [rbp-0x8],rdi
  409f8c:	mov    QWORD PTR [rbp-0x10],rsi
  409f90:	mov    rdi,QWORD PTR [rbp-0x8]
  409f94:	call   409ba0 <flatcc_builder_get_buffer_size@@Base>
  409f99:	mov    QWORD PTR [rbp-0x28],rax
  409f9d:	cmp    QWORD PTR [rbp-0x10],0x0
  409fa2:	je     409fb3 <flatcc_builder_finalize_aligned_buffer@@Base+0x33>
  409fa8:	mov    rax,QWORD PTR [rbp-0x28]
  409fac:	mov    rcx,QWORD PTR [rbp-0x10]
  409fb0:	mov    QWORD PTR [rcx],rax
  409fb3:	mov    rdi,QWORD PTR [rbp-0x8]
  409fb7:	call   409ac0 <flatcc_builder_get_buffer_alignment@@Base>
  409fbc:	movzx  ecx,ax
  409fbf:	mov    edi,ecx
  409fc1:	mov    QWORD PTR [rbp-0x20],rdi
  409fc5:	mov    rdi,QWORD PTR [rbp-0x28]
  409fc9:	add    rdi,QWORD PTR [rbp-0x20]
  409fcd:	sub    rdi,0x1
  409fd1:	mov    rdx,QWORD PTR [rbp-0x20]
  409fd5:	sub    rdx,0x1
  409fd9:	xor    rdx,0xffffffffffffffff
  409fdd:	and    rdi,rdx
  409fe0:	mov    QWORD PTR [rbp-0x28],rdi
  409fe4:	mov    rdi,QWORD PTR [rbp-0x20]
  409fe8:	mov    rsi,QWORD PTR [rbp-0x28]
  409fec:	call   40a070 <flatcc_builder_finalize_aligned_buffer@@Base+0xf0>
  409ff1:	mov    QWORD PTR [rbp-0x18],rax
  409ff5:	cmp    QWORD PTR [rbp-0x18],0x0
  409ffa:	jne    40a005 <flatcc_builder_finalize_aligned_buffer@@Base+0x85>
  40a000:	jmp    40a03b <flatcc_builder_finalize_aligned_buffer@@Base+0xbb>
  40a005:	mov    rdi,QWORD PTR [rbp-0x8]
  40a009:	mov    rsi,QWORD PTR [rbp-0x18]
  40a00d:	mov    rdx,QWORD PTR [rbp-0x28]
  40a011:	call   409e00 <flatcc_builder_copy_buffer@@Base>
  40a016:	cmp    rax,0x0
  40a01a:	jne    40a036 <flatcc_builder_finalize_aligned_buffer@@Base+0xb6>
  40a020:	mov    rdi,QWORD PTR [rbp-0x18]
  40a024:	call   403030 <free@plt>
  40a029:	mov    QWORD PTR [rbp-0x18],0x0
  40a031:	jmp    40a03b <flatcc_builder_finalize_aligned_buffer@@Base+0xbb>
  40a036:	jmp    40a03b <flatcc_builder_finalize_aligned_buffer@@Base+0xbb>
  40a03b:	cmp    QWORD PTR [rbp-0x18],0x0
  40a040:	jne    40a05c <flatcc_builder_finalize_aligned_buffer@@Base+0xdc>
  40a046:	cmp    QWORD PTR [rbp-0x10],0x0
  40a04b:	je     40a05c <flatcc_builder_finalize_aligned_buffer@@Base+0xdc>
  40a051:	mov    rax,QWORD PTR [rbp-0x10]
  40a055:	mov    QWORD PTR [rax],0x0
  40a05c:	mov    rax,QWORD PTR [rbp-0x18]
  40a060:	add    rsp,0x30
  40a064:	pop    rbp
  40a065:	ret    
  40a066:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40a070:	push   rbp
  40a071:	mov    rbp,rsp
  40a074:	sub    rsp,0x20
  40a078:	mov    QWORD PTR [rbp-0x8],rdi
  40a07c:	mov    QWORD PTR [rbp-0x10],rsi
  40a080:	mov    QWORD PTR [rbp-0x20],0x0
  40a088:	cmp    QWORD PTR [rbp-0x8],0x8
  40a08d:	jae    40a09b <flatcc_builder_finalize_aligned_buffer@@Base+0x11b>
  40a093:	mov    QWORD PTR [rbp-0x8],0x8
  40a09b:	mov    rsi,QWORD PTR [rbp-0x8]
  40a09f:	mov    rdx,QWORD PTR [rbp-0x10]
  40a0a3:	lea    rdi,[rbp-0x20]
  40a0a7:	call   4030d0 <posix_memalign@plt>
  40a0ac:	mov    DWORD PTR [rbp-0x14],eax
  40a0af:	cmp    DWORD PTR [rbp-0x14],0x0
  40a0b3:	je     40a0d5 <flatcc_builder_finalize_aligned_buffer@@Base+0x155>
  40a0b9:	cmp    QWORD PTR [rbp-0x20],0x0
  40a0be:	je     40a0d5 <flatcc_builder_finalize_aligned_buffer@@Base+0x155>
  40a0c4:	mov    rdi,QWORD PTR [rbp-0x20]
  40a0c8:	call   403030 <free@plt>
  40a0cd:	mov    QWORD PTR [rbp-0x20],0x0
  40a0d5:	mov    rax,QWORD PTR [rbp-0x20]
  40a0d9:	add    rsp,0x20
  40a0dd:	pop    rbp
  40a0de:	ret    
  40a0df:	nop

000000000040a0e0 <flatcc_builder_aligned_alloc@@Base>:
  40a0e0:	push   rbp
  40a0e1:	mov    rbp,rsp
  40a0e4:	sub    rsp,0x10
  40a0e8:	mov    QWORD PTR [rbp-0x8],rdi
  40a0ec:	mov    QWORD PTR [rbp-0x10],rsi
  40a0f0:	mov    rdi,QWORD PTR [rbp-0x8]
  40a0f4:	mov    rsi,QWORD PTR [rbp-0x10]
  40a0f8:	call   40a070 <flatcc_builder_finalize_aligned_buffer@@Base+0xf0>
  40a0fd:	add    rsp,0x10
  40a101:	pop    rbp
  40a102:	ret    
  40a103:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40a10d:	nop    DWORD PTR [rax]

000000000040a110 <flatcc_builder_aligned_free@@Base>:
  40a110:	push   rbp
  40a111:	mov    rbp,rsp
  40a114:	sub    rsp,0x10
  40a118:	mov    QWORD PTR [rbp-0x8],rdi
  40a11c:	mov    rdi,QWORD PTR [rbp-0x8]
  40a120:	call   403030 <free@plt>
  40a125:	add    rsp,0x10
  40a129:	pop    rbp
  40a12a:	ret    
  40a12b:	nop    DWORD PTR [rax+rax*1+0x0]

000000000040a130 <flatcc_builder_get_emit_context@@Base>:
  40a130:	push   rbp
  40a131:	mov    rbp,rsp
  40a134:	mov    QWORD PTR [rbp-0x8],rdi
  40a138:	mov    rdi,QWORD PTR [rbp-0x8]
  40a13c:	mov    rax,QWORD PTR [rdi+0x38]
  40a140:	pop    rbp
  40a141:	ret    
  40a142:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40a14c:	nop    DWORD PTR [rax+0x0]
  40a150:	push   rbp
  40a151:	mov    rbp,rsp
  40a154:	mov    ax,si
  40a157:	mov    QWORD PTR [rbp-0x8],rdi
  40a15b:	mov    WORD PTR [rbp-0xa],ax
  40a15f:	mov    rdi,QWORD PTR [rbp-0x8]
  40a163:	mov    esi,DWORD PTR [rdi+0xf4]
  40a169:	movzx  ecx,WORD PTR [rbp-0xa]
  40a16d:	sub    ecx,0x1
  40a170:	and    esi,ecx
  40a172:	mov    eax,esi
  40a174:	pop    rbp
  40a175:	ret    
  40a176:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40a180:	push   rbp
  40a181:	mov    rbp,rsp
  40a184:	sub    rsp,0x30
  40a188:	mov    QWORD PTR [rbp-0x10],rdi
  40a18c:	mov    QWORD PTR [rbp-0x18],rsi
  40a190:	mov    DWORD PTR [rbp-0x1c],edx
  40a193:	mov    rsi,QWORD PTR [rbp-0x10]
  40a197:	add    rsi,0x58
  40a19b:	add    rsi,0x10
  40a19f:	mov    QWORD PTR [rbp-0x28],rsi
  40a1a3:	mov    rsi,QWORD PTR [rbp-0x10]
  40a1a7:	mov    rsi,QWORD PTR [rsi+0x50]
  40a1ab:	mov    rdi,QWORD PTR [rbp-0x10]
  40a1af:	mov    rdi,QWORD PTR [rdi+0x40]
  40a1b3:	mov    rax,QWORD PTR [rbp-0x28]
  40a1b7:	mov    rcx,QWORD PTR [rbp-0x10]
  40a1bb:	mov    edx,DWORD PTR [rcx+0x28]
  40a1be:	mov    ecx,edx
  40a1c0:	add    rcx,QWORD PTR [rbp-0x18]
  40a1c4:	mov    QWORD PTR [rbp-0x30],rsi
  40a1c8:	mov    rsi,rax
  40a1cb:	mov    rdx,rcx
  40a1ce:	mov    r8d,0x1
  40a1d4:	mov    ecx,r8d
  40a1d7:	mov    rax,QWORD PTR [rbp-0x30]
  40a1db:	call   rax
  40a1dd:	cmp    eax,0x0
  40a1e0:	je     40a1f2 <flatcc_builder_get_emit_context@@Base+0xc2>
  40a1e6:	mov    DWORD PTR [rbp-0x4],0xffffffff
  40a1ed:	jmp    40a205 <flatcc_builder_get_emit_context@@Base+0xd5>
  40a1f2:	mov    rdi,QWORD PTR [rbp-0x10]
  40a1f6:	mov    esi,DWORD PTR [rbp-0x1c]
  40a1f9:	call   4060e0 <flatcc_builder_start_struct@@Base+0x80>
  40a1fe:	mov    DWORD PTR [rbp-0x4],0x0
  40a205:	mov    eax,DWORD PTR [rbp-0x4]
  40a208:	add    rsp,0x30
  40a20c:	pop    rbp
  40a20d:	ret    
  40a20e:	xchg   ax,ax
  40a210:	push   rbp
  40a211:	mov    rbp,rsp
  40a214:	sub    rsp,0x30
  40a218:	mov    QWORD PTR [rbp-0x10],rdi
  40a21c:	mov    rdi,QWORD PTR [rbp-0x10]
  40a220:	add    rdi,0x58
  40a224:	add    rdi,0x50
  40a228:	mov    QWORD PTR [rbp-0x18],rdi
  40a22c:	mov    rdi,QWORD PTR [rbp-0x10]
  40a230:	cmp    DWORD PTR [rdi+0xe4],0x0
  40a237:	jne    40a242 <flatcc_builder_get_emit_context@@Base+0x112>
  40a23d:	jmp    40a261 <flatcc_builder_get_emit_context@@Base+0x131>
  40a242:	lea    rdi,[rip+0x531d]        # 40f566 <flatcc_builder_padding_base@@Base+0x1396>
  40a249:	lea    rsi,[rip+0x4192]        # 40e3e2 <flatcc_builder_padding_base@@Base+0x212>
  40a250:	mov    edx,0x156
  40a255:	lea    rcx,[rip+0x5319]        # 40f575 <flatcc_builder_padding_base@@Base+0x13a5>
  40a25c:	call   403060 <__assert_fail@plt>
  40a261:	mov    eax,0x10
  40a266:	mov    ecx,eax
  40a268:	xor    r8d,r8d
  40a26b:	mov    rdi,QWORD PTR [rbp-0x10]
  40a26f:	mov    rdx,QWORD PTR [rbp-0x10]
  40a273:	mov    eax,DWORD PTR [rdx+0xe4]
  40a279:	mov    edx,eax
  40a27b:	mov    esi,0x6
  40a280:	call   404cf0 <flatcc_builder_enter_user_frame_ptr@@Base+0xe0>
  40a285:	cmp    rax,0x0
  40a289:	jne    40a29b <flatcc_builder_get_emit_context@@Base+0x16b>
  40a28f:	mov    DWORD PTR [rbp-0x4],0xffffffff
  40a296:	jmp    40a37a <flatcc_builder_get_emit_context@@Base+0x24a>
  40a29b:	mov    rax,QWORD PTR [rbp-0x10]
  40a29f:	mov    DWORD PTR [rax+0xe4],0x10
  40a2a9:	mov    QWORD PTR [rbp-0x20],0x100
  40a2b1:	mov    rax,QWORD PTR [rbp-0x10]
  40a2b5:	mov    rax,QWORD PTR [rax+0x50]
  40a2b9:	mov    rcx,QWORD PTR [rbp-0x10]
  40a2bd:	mov    rdi,QWORD PTR [rcx+0x40]
  40a2c1:	mov    rsi,QWORD PTR [rbp-0x18]
  40a2c5:	mov    rdx,QWORD PTR [rbp-0x20]
  40a2c9:	mov    ecx,0x1
  40a2ce:	mov    r8d,0x5
  40a2d4:	call   rax
  40a2d6:	cmp    eax,0x0
  40a2d9:	je     40a2eb <flatcc_builder_get_emit_context@@Base+0x1bb>
  40a2df:	mov    DWORD PTR [rbp-0x4],0xffffffff
  40a2e6:	jmp    40a37a <flatcc_builder_get_emit_context@@Base+0x24a>
  40a2eb:	jmp    40a2f0 <flatcc_builder_get_emit_context@@Base+0x1c0>
  40a2f0:	mov    rax,QWORD PTR [rbp-0x20]
  40a2f4:	shl    rax,0x1
  40a2f8:	mov    rcx,QWORD PTR [rbp-0x18]
  40a2fc:	cmp    rax,QWORD PTR [rcx+0x8]
  40a300:	ja     40a317 <flatcc_builder_get_emit_context@@Base+0x1e7>
  40a306:	mov    rax,QWORD PTR [rbp-0x20]
  40a30a:	shl    rax,0x1
  40a30e:	mov    QWORD PTR [rbp-0x20],rax
  40a312:	jmp    40a2f0 <flatcc_builder_get_emit_context@@Base+0x1c0>
  40a317:	mov    rax,QWORD PTR [rbp-0x20]
  40a31b:	shr    rax,0x2
  40a31f:	mov    QWORD PTR [rbp-0x20],rax
  40a323:	mov    QWORD PTR [rbp-0x28],0x0
  40a32b:	mov    eax,0x1
  40a330:	mov    ecx,eax
  40a332:	mov    rdx,QWORD PTR [rbp-0x28]
  40a336:	mov    QWORD PTR [rbp-0x30],rcx
  40a33a:	mov    rcx,rdx
  40a33d:	mov    rdx,QWORD PTR [rbp-0x30]
  40a341:	shl    rdx,cl
  40a344:	cmp    rdx,QWORD PTR [rbp-0x20]
  40a348:	jae    40a364 <flatcc_builder_get_emit_context@@Base+0x234>
  40a34e:	jmp    40a353 <flatcc_builder_get_emit_context@@Base+0x223>
  40a353:	mov    rax,QWORD PTR [rbp-0x28]
  40a357:	add    rax,0x1
  40a35b:	mov    QWORD PTR [rbp-0x28],rax
  40a35f:	jmp    40a32b <flatcc_builder_get_emit_context@@Base+0x1fb>
  40a364:	mov    rax,QWORD PTR [rbp-0x28]
  40a368:	mov    rcx,QWORD PTR [rbp-0x10]
  40a36c:	mov    QWORD PTR [rcx+0xd8],rax
  40a373:	mov    DWORD PTR [rbp-0x4],0x0
  40a37a:	mov    eax,DWORD PTR [rbp-0x4]
  40a37d:	add    rsp,0x30
  40a381:	pop    rbp
  40a382:	ret    
  40a383:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40a38d:	nop    DWORD PTR [rax]

000000000040a390 <flatcc_emitter_recycle_page@@Base>:
  40a390:	push   rbp
  40a391:	mov    rbp,rsp
  40a394:	mov    QWORD PTR [rbp-0x10],rdi
  40a398:	mov    QWORD PTR [rbp-0x18],rsi
  40a39c:	mov    rsi,QWORD PTR [rbp-0x18]
  40a3a0:	mov    rdi,QWORD PTR [rbp-0x10]
  40a3a4:	cmp    rsi,QWORD PTR [rdi]
  40a3a7:	je     40a3bf <flatcc_emitter_recycle_page@@Base+0x2f>
  40a3ad:	mov    rax,QWORD PTR [rbp-0x18]
  40a3b1:	mov    rcx,QWORD PTR [rbp-0x10]
  40a3b5:	cmp    rax,QWORD PTR [rcx+0x8]
  40a3b9:	jne    40a3cb <flatcc_emitter_recycle_page@@Base+0x3b>
  40a3bf:	mov    DWORD PTR [rbp-0x4],0xffffffff
  40a3c6:	jmp    40a463 <flatcc_emitter_recycle_page@@Base+0xd3>
  40a3cb:	mov    rax,QWORD PTR [rbp-0x18]
  40a3cf:	mov    rax,QWORD PTR [rax+0xb88]
  40a3d6:	mov    rcx,QWORD PTR [rbp-0x18]
  40a3da:	mov    rcx,QWORD PTR [rcx+0xb80]
  40a3e1:	mov    QWORD PTR [rcx+0xb88],rax
  40a3e8:	mov    rax,QWORD PTR [rbp-0x18]
  40a3ec:	mov    rax,QWORD PTR [rax+0xb80]
  40a3f3:	mov    rcx,QWORD PTR [rbp-0x18]
  40a3f7:	mov    rcx,QWORD PTR [rcx+0xb88]
  40a3fe:	mov    QWORD PTR [rcx+0xb80],rax
  40a405:	mov    rax,QWORD PTR [rbp-0x10]
  40a409:	mov    rax,QWORD PTR [rax]
  40a40c:	mov    rax,QWORD PTR [rax+0xb88]
  40a413:	mov    rcx,QWORD PTR [rbp-0x18]
  40a417:	mov    QWORD PTR [rcx+0xb88],rax
  40a41e:	mov    rax,QWORD PTR [rbp-0x10]
  40a422:	mov    rax,QWORD PTR [rax]
  40a425:	mov    rcx,QWORD PTR [rbp-0x18]
  40a429:	mov    QWORD PTR [rcx+0xb80],rax
  40a430:	mov    rax,QWORD PTR [rbp-0x18]
  40a434:	mov    rcx,QWORD PTR [rbp-0x18]
  40a438:	mov    rcx,QWORD PTR [rcx+0xb88]
  40a43f:	mov    QWORD PTR [rcx+0xb80],rax
  40a446:	mov    rax,QWORD PTR [rbp-0x18]
  40a44a:	mov    rcx,QWORD PTR [rbp-0x18]
  40a44e:	mov    rcx,QWORD PTR [rcx+0xb80]
  40a455:	mov    QWORD PTR [rcx+0xb88],rax
  40a45c:	mov    DWORD PTR [rbp-0x4],0x0
  40a463:	mov    eax,DWORD PTR [rbp-0x4]
  40a466:	pop    rbp
  40a467:	ret    
  40a468:	nop    DWORD PTR [rax+rax*1+0x0]

000000000040a470 <flatcc_emitter_reset@@Base>:
  40a470:	push   rbp
  40a471:	mov    rbp,rsp
  40a474:	sub    rsp,0x20
  40a478:	mov    QWORD PTR [rbp-0x8],rdi
  40a47c:	mov    rdi,QWORD PTR [rbp-0x8]
  40a480:	mov    rdi,QWORD PTR [rdi]
  40a483:	mov    QWORD PTR [rbp-0x10],rdi
  40a487:	mov    rdi,QWORD PTR [rbp-0x8]
  40a48b:	cmp    QWORD PTR [rdi],0x0
  40a48f:	jne    40a49a <flatcc_emitter_reset@@Base+0x2a>
  40a495:	jmp    40a609 <flatcc_emitter_reset@@Base+0x199>
  40a49a:	xor    eax,eax
  40a49c:	mov    rcx,QWORD PTR [rbp-0x8]
  40a4a0:	mov    rcx,QWORD PTR [rcx]
  40a4a3:	mov    rdx,QWORD PTR [rbp-0x8]
  40a4a7:	mov    QWORD PTR [rdx+0x8],rcx
  40a4ab:	mov    rcx,QWORD PTR [rbp-0x8]
  40a4af:	mov    rcx,QWORD PTR [rcx]
  40a4b2:	add    rcx,0x5c0
  40a4b9:	mov    rdx,QWORD PTR [rbp-0x8]
  40a4bd:	mov    QWORD PTR [rdx+0x10],rcx
  40a4c1:	mov    rcx,QWORD PTR [rbp-0x8]
  40a4c5:	mov    rcx,QWORD PTR [rcx+0x10]
  40a4c9:	mov    rdx,QWORD PTR [rbp-0x8]
  40a4cd:	mov    QWORD PTR [rdx+0x20],rcx
  40a4d1:	mov    rcx,QWORD PTR [rbp-0x8]
  40a4d5:	mov    QWORD PTR [rcx+0x18],0x5c0
  40a4dd:	mov    rcx,QWORD PTR [rbp-0x8]
  40a4e1:	mov    QWORD PTR [rcx+0x28],0x5c0
  40a4e9:	mov    rcx,QWORD PTR [rbp-0x8]
  40a4ed:	mov    rcx,QWORD PTR [rcx+0x18]
  40a4f1:	mov    esi,ecx
  40a4f3:	sub    eax,esi
  40a4f5:	mov    rcx,QWORD PTR [rbp-0x8]
  40a4f9:	mov    rcx,QWORD PTR [rcx]
  40a4fc:	mov    DWORD PTR [rcx+0xb90],eax
  40a502:	mov    rcx,QWORD PTR [rbp-0x8]
  40a506:	cmp    QWORD PTR [rcx+0x40],0x0
  40a50b:	jne    40a521 <flatcc_emitter_reset@@Base+0xb1>
  40a511:	mov    rax,QWORD PTR [rbp-0x8]
  40a515:	mov    rax,QWORD PTR [rax+0x30]
  40a519:	mov    rcx,QWORD PTR [rbp-0x8]
  40a51d:	mov    QWORD PTR [rcx+0x40],rax
  40a521:	mov    rax,QWORD PTR [rbp-0x8]
  40a525:	imul   rax,QWORD PTR [rax+0x40],0x3
  40a52a:	shr    rax,0x2
  40a52e:	mov    rcx,QWORD PTR [rbp-0x8]
  40a532:	mov    rcx,QWORD PTR [rcx+0x30]
  40a536:	shr    rcx,0x2
  40a53a:	add    rax,rcx
  40a53d:	mov    rcx,QWORD PTR [rbp-0x8]
  40a541:	mov    QWORD PTR [rcx+0x40],rax
  40a545:	mov    rax,QWORD PTR [rbp-0x8]
  40a549:	mov    QWORD PTR [rax+0x30],0x0
  40a551:	xor    eax,eax
  40a553:	mov    cl,al
  40a555:	mov    rdx,QWORD PTR [rbp-0x8]
  40a559:	mov    rdx,QWORD PTR [rdx+0x40]
  40a55d:	shl    rdx,0x1
  40a561:	mov    rsi,QWORD PTR [rbp-0x8]
  40a565:	cmp    rdx,QWORD PTR [rsi+0x38]
  40a569:	mov    BYTE PTR [rbp-0x11],cl
  40a56c:	jae    40a58e <flatcc_emitter_reset@@Base+0x11e>
  40a572:	mov    rax,QWORD PTR [rbp-0x8]
  40a576:	mov    rax,QWORD PTR [rax+0x8]
  40a57a:	mov    rax,QWORD PTR [rax+0xb80]
  40a581:	mov    rcx,QWORD PTR [rbp-0x8]
  40a585:	cmp    rax,QWORD PTR [rcx]
  40a588:	setne  dl
  40a58b:	mov    BYTE PTR [rbp-0x11],dl
  40a58e:	mov    al,BYTE PTR [rbp-0x11]
  40a591:	test   al,0x1
  40a593:	jne    40a59e <flatcc_emitter_reset@@Base+0x12e>
  40a599:	jmp    40a609 <flatcc_emitter_reset@@Base+0x199>
  40a59e:	mov    rax,QWORD PTR [rbp-0x8]
  40a5a2:	mov    rax,QWORD PTR [rax+0x8]
  40a5a6:	mov    rax,QWORD PTR [rax+0xb80]
  40a5ad:	mov    QWORD PTR [rbp-0x10],rax
  40a5b1:	mov    rax,QWORD PTR [rbp-0x10]
  40a5b5:	mov    rax,QWORD PTR [rax+0xb80]
  40a5bc:	mov    rcx,QWORD PTR [rbp-0x8]
  40a5c0:	mov    rcx,QWORD PTR [rcx+0x8]
  40a5c4:	mov    QWORD PTR [rcx+0xb80],rax
  40a5cb:	mov    rax,QWORD PTR [rbp-0x8]
  40a5cf:	mov    rax,QWORD PTR [rax+0x8]
  40a5d3:	mov    rcx,QWORD PTR [rbp-0x10]
  40a5d7:	mov    rcx,QWORD PTR [rcx+0xb80]
  40a5de:	mov    QWORD PTR [rcx+0xb88],rax
  40a5e5:	mov    rax,QWORD PTR [rbp-0x10]
  40a5e9:	mov    rdi,rax
  40a5ec:	call   403030 <free@plt>
  40a5f1:	mov    rax,QWORD PTR [rbp-0x8]
  40a5f5:	mov    rcx,QWORD PTR [rax+0x38]
  40a5f9:	sub    rcx,0xb80
  40a600:	mov    QWORD PTR [rax+0x38],rcx
  40a604:	jmp    40a551 <flatcc_emitter_reset@@Base+0xe1>
  40a609:	add    rsp,0x20
  40a60d:	pop    rbp
  40a60e:	ret    
  40a60f:	nop

000000000040a610 <flatcc_emitter_clear@@Base>:
  40a610:	push   rbp
  40a611:	mov    rbp,rsp
  40a614:	sub    rsp,0x10
  40a618:	mov    QWORD PTR [rbp-0x8],rdi
  40a61c:	mov    rdi,QWORD PTR [rbp-0x8]
  40a620:	mov    rdi,QWORD PTR [rdi]
  40a623:	mov    QWORD PTR [rbp-0x10],rdi
  40a627:	cmp    QWORD PTR [rbp-0x10],0x0
  40a62c:	jne    40a637 <flatcc_emitter_clear@@Base+0x27>
  40a632:	jmp    40a6a7 <flatcc_emitter_clear@@Base+0x97>
  40a637:	mov    rax,QWORD PTR [rbp-0x10]
  40a63b:	mov    rax,QWORD PTR [rax+0xb88]
  40a642:	mov    QWORD PTR [rax+0xb80],0x0
  40a64d:	mov    rax,QWORD PTR [rbp-0x10]
  40a651:	cmp    QWORD PTR [rax+0xb80],0x0
  40a659:	je     40a686 <flatcc_emitter_clear@@Base+0x76>
  40a65f:	mov    rax,QWORD PTR [rbp-0x10]
  40a663:	mov    rax,QWORD PTR [rax+0xb80]
  40a66a:	mov    QWORD PTR [rbp-0x10],rax
  40a66e:	mov    rax,QWORD PTR [rbp-0x10]
  40a672:	mov    rax,QWORD PTR [rax+0xb88]
  40a679:	mov    rdi,rax
  40a67c:	call   403030 <free@plt>
  40a681:	jmp    40a64d <flatcc_emitter_clear@@Base+0x3d>
  40a686:	mov    rax,QWORD PTR [rbp-0x10]
  40a68a:	mov    rdi,rax
  40a68d:	call   403030 <free@plt>
  40a692:	xor    esi,esi
  40a694:	mov    ecx,0x48
  40a699:	mov    edx,ecx
  40a69b:	mov    rax,QWORD PTR [rbp-0x8]
  40a69f:	mov    rdi,rax
  40a6a2:	call   403070 <memset@plt>
  40a6a7:	add    rsp,0x10
  40a6ab:	pop    rbp
  40a6ac:	ret    
  40a6ad:	nop    DWORD PTR [rax]

000000000040a6b0 <flatcc_emitter@@Base>:
  40a6b0:	push   rbp
  40a6b1:	mov    rbp,rsp
  40a6b4:	sub    rsp,0x40
  40a6b8:	mov    QWORD PTR [rbp-0x10],rdi
  40a6bc:	mov    QWORD PTR [rbp-0x18],rsi
  40a6c0:	mov    DWORD PTR [rbp-0x1c],edx
  40a6c3:	mov    DWORD PTR [rbp-0x20],ecx
  40a6c6:	mov    QWORD PTR [rbp-0x28],r8
  40a6ca:	mov    rsi,QWORD PTR [rbp-0x10]
  40a6ce:	mov    QWORD PTR [rbp-0x30],rsi
  40a6d2:	mov    rsi,QWORD PTR [rbp-0x28]
  40a6d6:	mov    rdi,QWORD PTR [rbp-0x30]
  40a6da:	add    rsi,QWORD PTR [rdi+0x30]
  40a6de:	mov    QWORD PTR [rdi+0x30],rsi
  40a6e2:	cmp    DWORD PTR [rbp-0x20],0x0
  40a6e6:	jge    40a7a8 <flatcc_emitter@@Base+0xf8>
  40a6ec:	mov    rax,QWORD PTR [rbp-0x28]
  40a6f0:	mov    rcx,QWORD PTR [rbp-0x30]
  40a6f4:	cmp    rax,QWORD PTR [rcx+0x18]
  40a6f8:	ja     40a73c <flatcc_emitter@@Base+0x8c>
  40a6fe:	xor    eax,eax
  40a700:	mov    ecx,eax
  40a702:	mov    rdx,QWORD PTR [rbp-0x28]
  40a706:	mov    rsi,QWORD PTR [rbp-0x30]
  40a70a:	mov    rdi,QWORD PTR [rsi+0x10]
  40a70e:	sub    rcx,rdx
  40a711:	add    rdi,rcx
  40a714:	mov    QWORD PTR [rsi+0x10],rdi
  40a718:	mov    rcx,QWORD PTR [rbp-0x28]
  40a71c:	mov    rdx,QWORD PTR [rbp-0x30]
  40a720:	mov    rsi,QWORD PTR [rdx+0x18]
  40a724:	sub    rsi,rcx
  40a727:	mov    QWORD PTR [rdx+0x18],rsi
  40a72b:	mov    rcx,QWORD PTR [rbp-0x30]
  40a72f:	mov    rcx,QWORD PTR [rcx+0x10]
  40a733:	mov    QWORD PTR [rbp-0x38],rcx
  40a737:	jmp    40a856 <flatcc_emitter@@Base+0x1a6>
  40a73c:	mov    eax,DWORD PTR [rbp-0x1c]
  40a73f:	mov    rcx,QWORD PTR [rbp-0x18]
  40a743:	movsxd rdx,eax
  40a746:	shl    rdx,0x4
  40a74a:	add    rcx,rdx
  40a74d:	mov    QWORD PTR [rbp-0x18],rcx
  40a751:	mov    eax,DWORD PTR [rbp-0x1c]
  40a754:	mov    ecx,eax
  40a756:	add    ecx,0xffffffff
  40a759:	mov    DWORD PTR [rbp-0x1c],ecx
  40a75c:	cmp    eax,0x0
  40a75f:	je     40a7a3 <flatcc_emitter@@Base+0xf3>
  40a765:	mov    rax,QWORD PTR [rbp-0x18]
  40a769:	add    rax,0xfffffffffffffff0
  40a76d:	mov    QWORD PTR [rbp-0x18],rax
  40a771:	mov    rdi,QWORD PTR [rbp-0x30]
  40a775:	mov    rax,QWORD PTR [rbp-0x18]
  40a779:	mov    rsi,QWORD PTR [rax]
  40a77c:	mov    rax,QWORD PTR [rbp-0x18]
  40a780:	mov    rdx,QWORD PTR [rax+0x8]
  40a784:	call   40a8c0 <flatcc_emitter@@Base+0x210>
  40a789:	cmp    eax,0x0
  40a78c:	je     40a79e <flatcc_emitter@@Base+0xee>
  40a792:	mov    DWORD PTR [rbp-0x4],0xffffffff
  40a799:	jmp    40a8af <flatcc_emitter@@Base+0x1ff>
  40a79e:	jmp    40a751 <flatcc_emitter@@Base+0xa1>
  40a7a3:	jmp    40a84a <flatcc_emitter@@Base+0x19a>
  40a7a8:	mov    rax,QWORD PTR [rbp-0x28]
  40a7ac:	mov    rcx,QWORD PTR [rbp-0x30]
  40a7b0:	cmp    rax,QWORD PTR [rcx+0x28]
  40a7b4:	ja     40a7ee <flatcc_emitter@@Base+0x13e>
  40a7ba:	mov    rax,QWORD PTR [rbp-0x30]
  40a7be:	mov    rax,QWORD PTR [rax+0x20]
  40a7c2:	mov    QWORD PTR [rbp-0x38],rax
  40a7c6:	mov    rax,QWORD PTR [rbp-0x28]
  40a7ca:	mov    rcx,QWORD PTR [rbp-0x30]
  40a7ce:	add    rax,QWORD PTR [rcx+0x20]
  40a7d2:	mov    QWORD PTR [rcx+0x20],rax
  40a7d6:	mov    rax,QWORD PTR [rbp-0x28]
  40a7da:	mov    rcx,QWORD PTR [rbp-0x30]
  40a7de:	mov    rdx,QWORD PTR [rcx+0x28]
  40a7e2:	sub    rdx,rax
  40a7e5:	mov    QWORD PTR [rcx+0x28],rdx
  40a7e9:	jmp    40a856 <flatcc_emitter@@Base+0x1a6>
  40a7ee:	jmp    40a7f3 <flatcc_emitter@@Base+0x143>
  40a7f3:	mov    eax,DWORD PTR [rbp-0x1c]
  40a7f6:	mov    ecx,eax
  40a7f8:	add    ecx,0xffffffff
  40a7fb:	mov    DWORD PTR [rbp-0x1c],ecx
  40a7fe:	cmp    eax,0x0
  40a801:	je     40a845 <flatcc_emitter@@Base+0x195>
  40a807:	mov    rdi,QWORD PTR [rbp-0x30]
  40a80b:	mov    rax,QWORD PTR [rbp-0x18]
  40a80f:	mov    rsi,QWORD PTR [rax]
  40a812:	mov    rax,QWORD PTR [rbp-0x18]
  40a816:	mov    rdx,QWORD PTR [rax+0x8]
  40a81a:	call   40a9c0 <flatcc_emitter@@Base+0x310>
  40a81f:	cmp    eax,0x0
  40a822:	je     40a834 <flatcc_emitter@@Base+0x184>
  40a828:	mov    DWORD PTR [rbp-0x4],0xffffffff
  40a82f:	jmp    40a8af <flatcc_emitter@@Base+0x1ff>
  40a834:	mov    rax,QWORD PTR [rbp-0x18]
  40a838:	add    rax,0x10
  40a83c:	mov    QWORD PTR [rbp-0x18],rax
  40a840:	jmp    40a7f3 <flatcc_emitter@@Base+0x143>
  40a845:	jmp    40a84a <flatcc_emitter@@Base+0x19a>
  40a84a:	mov    DWORD PTR [rbp-0x4],0x0
  40a851:	jmp    40a8af <flatcc_emitter@@Base+0x1ff>
  40a856:	jmp    40a85b <flatcc_emitter@@Base+0x1ab>
  40a85b:	mov    eax,DWORD PTR [rbp-0x1c]
  40a85e:	mov    ecx,eax
  40a860:	add    ecx,0xffffffff
  40a863:	mov    DWORD PTR [rbp-0x1c],ecx
  40a866:	cmp    eax,0x0
  40a869:	je     40a8a8 <flatcc_emitter@@Base+0x1f8>
  40a86f:	mov    rdi,QWORD PTR [rbp-0x38]
  40a873:	mov    rax,QWORD PTR [rbp-0x18]
  40a877:	mov    rsi,QWORD PTR [rax]
  40a87a:	mov    rax,QWORD PTR [rbp-0x18]
  40a87e:	mov    rdx,QWORD PTR [rax+0x8]
  40a882:	call   4030a0 <memcpy@plt>
  40a887:	mov    rax,QWORD PTR [rbp-0x18]
  40a88b:	mov    rax,QWORD PTR [rax+0x8]
  40a88f:	add    rax,QWORD PTR [rbp-0x38]
  40a893:	mov    QWORD PTR [rbp-0x38],rax
  40a897:	mov    rax,QWORD PTR [rbp-0x18]
  40a89b:	add    rax,0x10
  40a89f:	mov    QWORD PTR [rbp-0x18],rax
  40a8a3:	jmp    40a85b <flatcc_emitter@@Base+0x1ab>
  40a8a8:	mov    DWORD PTR [rbp-0x4],0x0
  40a8af:	mov    eax,DWORD PTR [rbp-0x4]
  40a8b2:	add    rsp,0x40
  40a8b6:	pop    rbp
  40a8b7:	ret    
  40a8b8:	nop    DWORD PTR [rax+rax*1+0x0]
  40a8c0:	push   rbp
  40a8c1:	mov    rbp,rsp
  40a8c4:	sub    rsp,0x30
  40a8c8:	mov    QWORD PTR [rbp-0x10],rdi
  40a8cc:	mov    QWORD PTR [rbp-0x18],rsi
  40a8d0:	mov    QWORD PTR [rbp-0x20],rdx
  40a8d4:	mov    rdx,QWORD PTR [rbp-0x20]
  40a8d8:	add    rdx,QWORD PTR [rbp-0x18]
  40a8dc:	mov    QWORD PTR [rbp-0x18],rdx
  40a8e0:	cmp    QWORD PTR [rbp-0x20],0x0
  40a8e5:	je     40a9af <flatcc_emitter@@Base+0x2ff>
  40a8eb:	mov    rax,QWORD PTR [rbp-0x20]
  40a8ef:	mov    QWORD PTR [rbp-0x28],rax
  40a8f3:	mov    rax,QWORD PTR [rbp-0x28]
  40a8f7:	mov    rcx,QWORD PTR [rbp-0x10]
  40a8fb:	cmp    rax,QWORD PTR [rcx+0x18]
  40a8ff:	jbe    40a944 <flatcc_emitter@@Base+0x294>
  40a905:	mov    rax,QWORD PTR [rbp-0x10]
  40a909:	mov    rax,QWORD PTR [rax+0x18]
  40a90d:	mov    QWORD PTR [rbp-0x28],rax
  40a911:	cmp    QWORD PTR [rbp-0x28],0x0
  40a916:	jne    40a93f <flatcc_emitter@@Base+0x28f>
  40a91c:	mov    rdi,QWORD PTR [rbp-0x10]
  40a920:	call   40abf0 <flatcc_emitter_copy_buffer@@Base+0x150>
  40a925:	cmp    eax,0x0
  40a928:	je     40a93a <flatcc_emitter@@Base+0x28a>
  40a92e:	mov    DWORD PTR [rbp-0x4],0xffffffff
  40a935:	jmp    40a9b6 <flatcc_emitter@@Base+0x306>
  40a93a:	jmp    40a8e0 <flatcc_emitter@@Base+0x230>
  40a93f:	jmp    40a944 <flatcc_emitter@@Base+0x294>
  40a944:	xor    eax,eax
  40a946:	mov    ecx,eax
  40a948:	mov    rdx,QWORD PTR [rbp-0x28]
  40a94c:	mov    rsi,QWORD PTR [rbp-0x10]
  40a950:	mov    rdi,QWORD PTR [rsi+0x10]
  40a954:	mov    r8,rcx
  40a957:	sub    r8,rdx
  40a95a:	add    rdi,r8
  40a95d:	mov    QWORD PTR [rsi+0x10],rdi
  40a961:	mov    rdx,QWORD PTR [rbp-0x28]
  40a965:	mov    rsi,QWORD PTR [rbp-0x10]
  40a969:	mov    rdi,QWORD PTR [rsi+0x18]
  40a96d:	sub    rdi,rdx
  40a970:	mov    QWORD PTR [rsi+0x18],rdi
  40a974:	mov    rdx,QWORD PTR [rbp-0x28]
  40a978:	mov    rsi,QWORD PTR [rbp-0x18]
  40a97c:	sub    rcx,rdx
  40a97f:	add    rsi,rcx
  40a982:	mov    QWORD PTR [rbp-0x18],rsi
  40a986:	mov    rcx,QWORD PTR [rbp-0x28]
  40a98a:	mov    rdx,QWORD PTR [rbp-0x20]
  40a98e:	sub    rdx,rcx
  40a991:	mov    QWORD PTR [rbp-0x20],rdx
  40a995:	mov    rcx,QWORD PTR [rbp-0x10]
  40a999:	mov    rdi,QWORD PTR [rcx+0x10]
  40a99d:	mov    rsi,QWORD PTR [rbp-0x18]
  40a9a1:	mov    rdx,QWORD PTR [rbp-0x28]
  40a9a5:	call   4030a0 <memcpy@plt>
  40a9aa:	jmp    40a8e0 <flatcc_emitter@@Base+0x230>
  40a9af:	mov    DWORD PTR [rbp-0x4],0x0
  40a9b6:	mov    eax,DWORD PTR [rbp-0x4]
  40a9b9:	add    rsp,0x30
  40a9bd:	pop    rbp
  40a9be:	ret    
  40a9bf:	nop
  40a9c0:	push   rbp
  40a9c1:	mov    rbp,rsp
  40a9c4:	sub    rsp,0x30
  40a9c8:	mov    QWORD PTR [rbp-0x10],rdi
  40a9cc:	mov    QWORD PTR [rbp-0x18],rsi
  40a9d0:	mov    QWORD PTR [rbp-0x20],rdx
  40a9d4:	cmp    QWORD PTR [rbp-0x20],0x0
  40a9d9:	je     40aa90 <flatcc_emitter@@Base+0x3e0>
  40a9df:	mov    rax,QWORD PTR [rbp-0x20]
  40a9e3:	mov    QWORD PTR [rbp-0x28],rax
  40a9e7:	mov    rax,QWORD PTR [rbp-0x28]
  40a9eb:	mov    rcx,QWORD PTR [rbp-0x10]
  40a9ef:	cmp    rax,QWORD PTR [rcx+0x28]
  40a9f3:	jbe    40aa38 <flatcc_emitter@@Base+0x388>
  40a9f9:	mov    rax,QWORD PTR [rbp-0x10]
  40a9fd:	mov    rax,QWORD PTR [rax+0x28]
  40aa01:	mov    QWORD PTR [rbp-0x28],rax
  40aa05:	cmp    QWORD PTR [rbp-0x28],0x0
  40aa0a:	jne    40aa33 <flatcc_emitter@@Base+0x383>
  40aa10:	mov    rdi,QWORD PTR [rbp-0x10]
  40aa14:	call   40ae10 <flatcc_emitter_copy_buffer@@Base+0x370>
  40aa19:	cmp    eax,0x0
  40aa1c:	je     40aa2e <flatcc_emitter@@Base+0x37e>
  40aa22:	mov    DWORD PTR [rbp-0x4],0xffffffff
  40aa29:	jmp    40aa97 <flatcc_emitter@@Base+0x3e7>
  40aa2e:	jmp    40a9d4 <flatcc_emitter@@Base+0x324>
  40aa33:	jmp    40aa38 <flatcc_emitter@@Base+0x388>
  40aa38:	mov    rax,QWORD PTR [rbp-0x10]
  40aa3c:	mov    rdi,QWORD PTR [rax+0x20]
  40aa40:	mov    rsi,QWORD PTR [rbp-0x18]
  40aa44:	mov    rdx,QWORD PTR [rbp-0x28]
  40aa48:	call   4030a0 <memcpy@plt>
  40aa4d:	mov    rax,QWORD PTR [rbp-0x28]
  40aa51:	mov    rdx,QWORD PTR [rbp-0x20]
  40aa55:	sub    rdx,rax
  40aa58:	mov    QWORD PTR [rbp-0x20],rdx
  40aa5c:	mov    rax,QWORD PTR [rbp-0x28]
  40aa60:	add    rax,QWORD PTR [rbp-0x18]
  40aa64:	mov    QWORD PTR [rbp-0x18],rax
  40aa68:	mov    rax,QWORD PTR [rbp-0x28]
  40aa6c:	mov    rdx,QWORD PTR [rbp-0x10]
  40aa70:	add    rax,QWORD PTR [rdx+0x20]
  40aa74:	mov    QWORD PTR [rdx+0x20],rax
  40aa78:	mov    rax,QWORD PTR [rbp-0x28]
  40aa7c:	mov    rdx,QWORD PTR [rbp-0x10]
  40aa80:	mov    rsi,QWORD PTR [rdx+0x28]
  40aa84:	sub    rsi,rax
  40aa87:	mov    QWORD PTR [rdx+0x28],rsi
  40aa8b:	jmp    40a9d4 <flatcc_emitter@@Base+0x324>
  40aa90:	mov    DWORD PTR [rbp-0x4],0x0
  40aa97:	mov    eax,DWORD PTR [rbp-0x4]
  40aa9a:	add    rsp,0x30
  40aa9e:	pop    rbp
  40aa9f:	ret    

000000000040aaa0 <flatcc_emitter_copy_buffer@@Base>:
  40aaa0:	push   rbp
  40aaa1:	mov    rbp,rsp
  40aaa4:	sub    rsp,0x30
  40aaa8:	mov    QWORD PTR [rbp-0x10],rdi
  40aaac:	mov    QWORD PTR [rbp-0x18],rsi
  40aab0:	mov    QWORD PTR [rbp-0x20],rdx
  40aab4:	mov    rdx,QWORD PTR [rbp-0x20]
  40aab8:	mov    rsi,QWORD PTR [rbp-0x10]
  40aabc:	cmp    rdx,QWORD PTR [rsi+0x30]
  40aac0:	jae    40aad3 <flatcc_emitter_copy_buffer@@Base+0x33>
  40aac6:	mov    QWORD PTR [rbp-0x8],0x0
  40aace:	jmp    40abdf <flatcc_emitter_copy_buffer@@Base+0x13f>
  40aad3:	mov    rax,QWORD PTR [rbp-0x10]
  40aad7:	cmp    QWORD PTR [rax],0x0
  40aadb:	jne    40aaee <flatcc_emitter_copy_buffer@@Base+0x4e>
  40aae1:	mov    QWORD PTR [rbp-0x8],0x0
  40aae9:	jmp    40abdf <flatcc_emitter_copy_buffer@@Base+0x13f>
  40aaee:	mov    rax,QWORD PTR [rbp-0x10]
  40aaf2:	mov    rax,QWORD PTR [rax]
  40aaf5:	mov    rcx,QWORD PTR [rbp-0x10]
  40aaf9:	cmp    rax,QWORD PTR [rcx+0x8]
  40aafd:	jne    40ab29 <flatcc_emitter_copy_buffer@@Base+0x89>
  40ab03:	mov    rdi,QWORD PTR [rbp-0x18]
  40ab07:	mov    rax,QWORD PTR [rbp-0x10]
  40ab0b:	mov    rsi,QWORD PTR [rax+0x10]
  40ab0f:	mov    rax,QWORD PTR [rbp-0x10]
  40ab13:	mov    rdx,QWORD PTR [rax+0x30]
  40ab17:	call   4030a0 <memcpy@plt>
  40ab1c:	mov    rax,QWORD PTR [rbp-0x18]
  40ab20:	mov    QWORD PTR [rbp-0x8],rax
  40ab24:	jmp    40abdf <flatcc_emitter_copy_buffer@@Base+0x13f>
  40ab29:	mov    eax,0xb80
  40ab2e:	mov    ecx,eax
  40ab30:	mov    rdx,QWORD PTR [rbp-0x10]
  40ab34:	sub    rcx,QWORD PTR [rdx+0x18]
  40ab38:	mov    QWORD PTR [rbp-0x30],rcx
  40ab3c:	mov    rdi,QWORD PTR [rbp-0x18]
  40ab40:	mov    rcx,QWORD PTR [rbp-0x10]
  40ab44:	mov    rsi,QWORD PTR [rcx+0x10]
  40ab48:	mov    rdx,QWORD PTR [rbp-0x30]
  40ab4c:	call   4030a0 <memcpy@plt>
  40ab51:	mov    rcx,QWORD PTR [rbp-0x18]
  40ab55:	add    rcx,QWORD PTR [rbp-0x30]
  40ab59:	mov    QWORD PTR [rbp-0x18],rcx
  40ab5d:	mov    rcx,QWORD PTR [rbp-0x10]
  40ab61:	mov    rcx,QWORD PTR [rcx]
  40ab64:	mov    rcx,QWORD PTR [rcx+0xb80]
  40ab6b:	mov    QWORD PTR [rbp-0x28],rcx
  40ab6f:	mov    rax,QWORD PTR [rbp-0x28]
  40ab73:	mov    rcx,QWORD PTR [rbp-0x10]
  40ab77:	cmp    rax,QWORD PTR [rcx+0x8]
  40ab7b:	je     40abb8 <flatcc_emitter_copy_buffer@@Base+0x118>
  40ab81:	mov    eax,0xb80
  40ab86:	mov    edx,eax
  40ab88:	mov    rdi,QWORD PTR [rbp-0x18]
  40ab8c:	mov    rsi,QWORD PTR [rbp-0x28]
  40ab90:	call   4030a0 <memcpy@plt>
  40ab95:	mov    rdx,QWORD PTR [rbp-0x18]
  40ab99:	add    rdx,0xb80
  40aba0:	mov    QWORD PTR [rbp-0x18],rdx
  40aba4:	mov    rdx,QWORD PTR [rbp-0x28]
  40aba8:	mov    rdx,QWORD PTR [rdx+0xb80]
  40abaf:	mov    QWORD PTR [rbp-0x28],rdx
  40abb3:	jmp    40ab6f <flatcc_emitter_copy_buffer@@Base+0xcf>
  40abb8:	mov    eax,0xb80
  40abbd:	mov    ecx,eax
  40abbf:	mov    rdi,QWORD PTR [rbp-0x18]
  40abc3:	mov    rsi,QWORD PTR [rbp-0x28]
  40abc7:	mov    rdx,QWORD PTR [rbp-0x10]
  40abcb:	sub    rcx,QWORD PTR [rdx+0x28]
  40abcf:	mov    rdx,rcx
  40abd2:	call   4030a0 <memcpy@plt>
  40abd7:	mov    rcx,QWORD PTR [rbp-0x18]
  40abdb:	mov    QWORD PTR [rbp-0x8],rcx
  40abdf:	mov    rax,QWORD PTR [rbp-0x8]
  40abe3:	add    rsp,0x30
  40abe7:	pop    rbp
  40abe8:	ret    
  40abe9:	nop    DWORD PTR [rax+0x0]
  40abf0:	push   rbp
  40abf1:	mov    rbp,rsp
  40abf4:	sub    rsp,0x20
  40abf8:	mov    QWORD PTR [rbp-0x10],rdi
  40abfc:	mov    QWORD PTR [rbp-0x18],0x0
  40ac04:	mov    rdi,QWORD PTR [rbp-0x10]
  40ac08:	cmp    QWORD PTR [rdi],0x0
  40ac0c:	je     40ac6f <flatcc_emitter_copy_buffer@@Base+0x1cf>
  40ac12:	mov    rax,QWORD PTR [rbp-0x10]
  40ac16:	mov    rax,QWORD PTR [rax]
  40ac19:	mov    rax,QWORD PTR [rax+0xb88]
  40ac20:	mov    rcx,QWORD PTR [rbp-0x10]
  40ac24:	cmp    rax,QWORD PTR [rcx+0x8]
  40ac28:	je     40ac6f <flatcc_emitter_copy_buffer@@Base+0x1cf>
  40ac2e:	mov    rax,QWORD PTR [rbp-0x10]
  40ac32:	mov    rax,QWORD PTR [rax]
  40ac35:	mov    ecx,DWORD PTR [rax+0xb90]
  40ac3b:	sub    ecx,0xb80
  40ac41:	mov    rax,QWORD PTR [rbp-0x10]
  40ac45:	mov    rax,QWORD PTR [rax]
  40ac48:	mov    rax,QWORD PTR [rax+0xb88]
  40ac4f:	mov    DWORD PTR [rax+0xb90],ecx
  40ac55:	mov    rax,QWORD PTR [rbp-0x10]
  40ac59:	mov    rax,QWORD PTR [rax]
  40ac5c:	mov    rax,QWORD PTR [rax+0xb88]
  40ac63:	mov    rdx,QWORD PTR [rbp-0x10]
  40ac67:	mov    QWORD PTR [rdx],rax
  40ac6a:	jmp    40adb2 <flatcc_emitter_copy_buffer@@Base+0x312>
  40ac6f:	mov    eax,0xb98
  40ac74:	mov    edi,eax
  40ac76:	call   4030b0 <malloc@plt>
  40ac7b:	mov    QWORD PTR [rbp-0x18],rax
  40ac7f:	cmp    rax,0x0
  40ac83:	jne    40ac95 <flatcc_emitter_copy_buffer@@Base+0x1f5>
  40ac89:	mov    DWORD PTR [rbp-0x4],0xffffffff
  40ac90:	jmp    40ae01 <flatcc_emitter_copy_buffer@@Base+0x361>
  40ac95:	mov    rax,QWORD PTR [rbp-0x10]
  40ac99:	mov    rcx,QWORD PTR [rax+0x38]
  40ac9d:	add    rcx,0xb80
  40aca4:	mov    QWORD PTR [rax+0x38],rcx
  40aca8:	mov    rax,QWORD PTR [rbp-0x10]
  40acac:	cmp    QWORD PTR [rax],0x0
  40acb0:	je     40ad10 <flatcc_emitter_copy_buffer@@Base+0x270>
  40acb6:	mov    rax,QWORD PTR [rbp-0x10]
  40acba:	mov    rax,QWORD PTR [rax+0x8]
  40acbe:	mov    rcx,QWORD PTR [rbp-0x18]
  40acc2:	mov    QWORD PTR [rcx+0xb88],rax
  40acc9:	mov    rax,QWORD PTR [rbp-0x10]
  40accd:	mov    rax,QWORD PTR [rax]
  40acd0:	mov    rcx,QWORD PTR [rbp-0x18]
  40acd4:	mov    QWORD PTR [rcx+0xb80],rax
  40acdb:	mov    rax,QWORD PTR [rbp-0x18]
  40acdf:	mov    rcx,QWORD PTR [rbp-0x10]
  40ace3:	mov    rcx,QWORD PTR [rcx]
  40ace6:	mov    QWORD PTR [rcx+0xb88],rax
  40aced:	mov    rax,QWORD PTR [rbp-0x18]
  40acf1:	mov    rcx,QWORD PTR [rbp-0x10]
  40acf5:	mov    rcx,QWORD PTR [rcx+0x8]
  40acf9:	mov    QWORD PTR [rcx+0xb80],rax
  40ad00:	mov    rax,QWORD PTR [rbp-0x18]
  40ad04:	mov    rcx,QWORD PTR [rbp-0x10]
  40ad08:	mov    QWORD PTR [rcx],rax
  40ad0b:	jmp    40adb2 <flatcc_emitter_copy_buffer@@Base+0x312>
  40ad10:	xor    eax,eax
  40ad12:	mov    ecx,0xb80
  40ad17:	mov    edx,ecx
  40ad19:	mov    rsi,QWORD PTR [rbp-0x18]
  40ad1d:	mov    rdi,QWORD PTR [rbp-0x10]
  40ad21:	mov    QWORD PTR [rdi],rsi
  40ad24:	mov    rsi,QWORD PTR [rbp-0x18]
  40ad28:	mov    rdi,QWORD PTR [rbp-0x10]
  40ad2c:	mov    QWORD PTR [rdi+0x8],rsi
  40ad30:	mov    rsi,QWORD PTR [rbp-0x18]
  40ad34:	mov    rdi,QWORD PTR [rbp-0x18]
  40ad38:	mov    QWORD PTR [rdi+0xb80],rsi
  40ad3f:	mov    rsi,QWORD PTR [rbp-0x18]
  40ad43:	mov    rdi,QWORD PTR [rbp-0x18]
  40ad47:	mov    QWORD PTR [rdi+0xb88],rsi
  40ad4e:	mov    rsi,QWORD PTR [rbp-0x10]
  40ad52:	mov    rsi,QWORD PTR [rsi]
  40ad55:	add    rsi,0x5c0
  40ad5c:	mov    rdi,QWORD PTR [rbp-0x10]
  40ad60:	mov    QWORD PTR [rdi+0x10],rsi
  40ad64:	mov    rsi,QWORD PTR [rbp-0x10]
  40ad68:	mov    rsi,QWORD PTR [rsi+0x10]
  40ad6c:	mov    rdi,QWORD PTR [rbp-0x10]
  40ad70:	mov    QWORD PTR [rdi+0x20],rsi
  40ad74:	mov    rsi,QWORD PTR [rbp-0x10]
  40ad78:	mov    QWORD PTR [rsi+0x18],0x5c0
  40ad80:	mov    rsi,QWORD PTR [rbp-0x10]
  40ad84:	sub    rdx,QWORD PTR [rsi+0x18]
  40ad88:	mov    rsi,QWORD PTR [rbp-0x10]
  40ad8c:	mov    QWORD PTR [rsi+0x28],rdx
  40ad90:	mov    rdx,QWORD PTR [rbp-0x10]
  40ad94:	mov    rdx,QWORD PTR [rdx+0x18]
  40ad98:	mov    ecx,edx
  40ad9a:	sub    eax,ecx
  40ad9c:	mov    rdx,QWORD PTR [rbp-0x18]
  40ada0:	mov    DWORD PTR [rdx+0xb90],eax
  40ada6:	mov    DWORD PTR [rbp-0x4],0x0
  40adad:	jmp    40ae01 <flatcc_emitter_copy_buffer@@Base+0x361>
  40adb2:	mov    rax,QWORD PTR [rbp-0x10]
  40adb6:	mov    rax,QWORD PTR [rax]
  40adb9:	add    rax,0xb80
  40adbf:	mov    rcx,QWORD PTR [rbp-0x10]
  40adc3:	mov    QWORD PTR [rcx+0x10],rax
  40adc7:	mov    rax,QWORD PTR [rbp-0x10]
  40adcb:	mov    QWORD PTR [rax+0x18],0xb80
  40add3:	mov    rax,QWORD PTR [rbp-0x10]
  40add7:	mov    rax,QWORD PTR [rax]
  40adda:	mov    rax,QWORD PTR [rax+0xb80]
  40ade1:	mov    edx,DWORD PTR [rax+0xb90]
  40ade7:	sub    edx,0xb80
  40aded:	mov    rax,QWORD PTR [rbp-0x10]
  40adf1:	mov    rax,QWORD PTR [rax]
  40adf4:	mov    DWORD PTR [rax+0xb90],edx
  40adfa:	mov    DWORD PTR [rbp-0x4],0x0
  40ae01:	mov    eax,DWORD PTR [rbp-0x4]
  40ae04:	add    rsp,0x20
  40ae08:	pop    rbp
  40ae09:	ret    
  40ae0a:	nop    WORD PTR [rax+rax*1+0x0]
  40ae10:	push   rbp
  40ae11:	mov    rbp,rsp
  40ae14:	sub    rsp,0x20
  40ae18:	mov    QWORD PTR [rbp-0x10],rdi
  40ae1c:	mov    QWORD PTR [rbp-0x18],0x0
  40ae24:	mov    rdi,QWORD PTR [rbp-0x10]
  40ae28:	cmp    QWORD PTR [rdi+0x8],0x0
  40ae2d:	je     40ae6b <flatcc_emitter_copy_buffer@@Base+0x3cb>
  40ae33:	mov    rax,QWORD PTR [rbp-0x10]
  40ae37:	mov    rax,QWORD PTR [rax+0x8]
  40ae3b:	mov    rax,QWORD PTR [rax+0xb80]
  40ae42:	mov    rcx,QWORD PTR [rbp-0x10]
  40ae46:	cmp    rax,QWORD PTR [rcx]
  40ae49:	je     40ae6b <flatcc_emitter_copy_buffer@@Base+0x3cb>
  40ae4f:	mov    rax,QWORD PTR [rbp-0x10]
  40ae53:	mov    rax,QWORD PTR [rax+0x8]
  40ae57:	mov    rax,QWORD PTR [rax+0xb80]
  40ae5e:	mov    rcx,QWORD PTR [rbp-0x10]
  40ae62:	mov    QWORD PTR [rcx+0x8],rax
  40ae66:	jmp    40afb0 <flatcc_emitter_copy_buffer@@Base+0x510>
  40ae6b:	mov    eax,0xb98
  40ae70:	mov    edi,eax
  40ae72:	call   4030b0 <malloc@plt>
  40ae77:	mov    QWORD PTR [rbp-0x18],rax
  40ae7b:	cmp    rax,0x0
  40ae7f:	jne    40ae91 <flatcc_emitter_copy_buffer@@Base+0x3f1>
  40ae85:	mov    DWORD PTR [rbp-0x4],0xffffffff
  40ae8c:	jmp    40affc <flatcc_emitter_copy_buffer@@Base+0x55c>
  40ae91:	mov    rax,QWORD PTR [rbp-0x10]
  40ae95:	mov    rcx,QWORD PTR [rax+0x38]
  40ae99:	add    rcx,0xb80
  40aea0:	mov    QWORD PTR [rax+0x38],rcx
  40aea4:	mov    rax,QWORD PTR [rbp-0x10]
  40aea8:	cmp    QWORD PTR [rax+0x8],0x0
  40aead:	je     40af0e <flatcc_emitter_copy_buffer@@Base+0x46e>
  40aeb3:	mov    rax,QWORD PTR [rbp-0x10]
  40aeb7:	mov    rax,QWORD PTR [rax+0x8]
  40aebb:	mov    rcx,QWORD PTR [rbp-0x18]
  40aebf:	mov    QWORD PTR [rcx+0xb88],rax
  40aec6:	mov    rax,QWORD PTR [rbp-0x10]
  40aeca:	mov    rax,QWORD PTR [rax]
  40aecd:	mov    rcx,QWORD PTR [rbp-0x18]
  40aed1:	mov    QWORD PTR [rcx+0xb80],rax
  40aed8:	mov    rax,QWORD PTR [rbp-0x18]
  40aedc:	mov    rcx,QWORD PTR [rbp-0x10]
  40aee0:	mov    rcx,QWORD PTR [rcx]
  40aee3:	mov    QWORD PTR [rcx+0xb88],rax
  40aeea:	mov    rax,QWORD PTR [rbp-0x18]
  40aeee:	mov    rcx,QWORD PTR [rbp-0x10]
  40aef2:	mov    rcx,QWORD PTR [rcx+0x8]
  40aef6:	mov    QWORD PTR [rcx+0xb80],rax
  40aefd:	mov    rax,QWORD PTR [rbp-0x18]
  40af01:	mov    rcx,QWORD PTR [rbp-0x10]
  40af05:	mov    QWORD PTR [rcx+0x8],rax
  40af09:	jmp    40afb0 <flatcc_emitter_copy_buffer@@Base+0x510>
  40af0e:	xor    eax,eax
  40af10:	mov    ecx,0xb80
  40af15:	mov    edx,ecx
  40af17:	mov    rsi,QWORD PTR [rbp-0x18]
  40af1b:	mov    rdi,QWORD PTR [rbp-0x10]
  40af1f:	mov    QWORD PTR [rdi],rsi
  40af22:	mov    rsi,QWORD PTR [rbp-0x18]
  40af26:	mov    rdi,QWORD PTR [rbp-0x10]
  40af2a:	mov    QWORD PTR [rdi+0x8],rsi
  40af2e:	mov    rsi,QWORD PTR [rbp-0x18]
  40af32:	mov    rdi,QWORD PTR [rbp-0x18]
  40af36:	mov    QWORD PTR [rdi+0xb80],rsi
  40af3d:	mov    rsi,QWORD PTR [rbp-0x18]
  40af41:	mov    rdi,QWORD PTR [rbp-0x18]
  40af45:	mov    QWORD PTR [rdi+0xb88],rsi
  40af4c:	mov    rsi,QWORD PTR [rbp-0x10]
  40af50:	mov    rsi,QWORD PTR [rsi]
  40af53:	add    rsi,0x5c0
  40af5a:	mov    rdi,QWORD PTR [rbp-0x10]
  40af5e:	mov    QWORD PTR [rdi+0x10],rsi
  40af62:	mov    rsi,QWORD PTR [rbp-0x10]
  40af66:	mov    rsi,QWORD PTR [rsi+0x10]
  40af6a:	mov    rdi,QWORD PTR [rbp-0x10]
  40af6e:	mov    QWORD PTR [rdi+0x20],rsi
  40af72:	mov    rsi,QWORD PTR [rbp-0x10]
  40af76:	mov    QWORD PTR [rsi+0x18],0x5c0
  40af7e:	mov    rsi,QWORD PTR [rbp-0x10]
  40af82:	sub    rdx,QWORD PTR [rsi+0x18]
  40af86:	mov    rsi,QWORD PTR [rbp-0x10]
  40af8a:	mov    QWORD PTR [rsi+0x28],rdx
  40af8e:	mov    rdx,QWORD PTR [rbp-0x10]
  40af92:	mov    rdx,QWORD PTR [rdx+0x18]
  40af96:	mov    ecx,edx
  40af98:	sub    eax,ecx
  40af9a:	mov    rdx,QWORD PTR [rbp-0x18]
  40af9e:	mov    DWORD PTR [rdx+0xb90],eax
  40afa4:	mov    DWORD PTR [rbp-0x4],0x0
  40afab:	jmp    40affc <flatcc_emitter_copy_buffer@@Base+0x55c>
  40afb0:	mov    rax,QWORD PTR [rbp-0x10]
  40afb4:	mov    rax,QWORD PTR [rax+0x8]
  40afb8:	mov    rcx,QWORD PTR [rbp-0x10]
  40afbc:	mov    QWORD PTR [rcx+0x20],rax
  40afc0:	mov    rax,QWORD PTR [rbp-0x10]
  40afc4:	mov    QWORD PTR [rax+0x28],0xb80
  40afcc:	mov    rax,QWORD PTR [rbp-0x10]
  40afd0:	mov    rax,QWORD PTR [rax+0x8]
  40afd4:	mov    rax,QWORD PTR [rax+0xb88]
  40afdb:	mov    edx,DWORD PTR [rax+0xb90]
  40afe1:	add    edx,0xb80
  40afe7:	mov    rax,QWORD PTR [rbp-0x10]
  40afeb:	mov    rax,QWORD PTR [rax+0x8]
  40afef:	mov    DWORD PTR [rax+0xb90],edx
  40aff5:	mov    DWORD PTR [rbp-0x4],0x0
  40affc:	mov    eax,DWORD PTR [rbp-0x4]
  40afff:	add    rsp,0x20
  40b003:	pop    rbp
  40b004:	ret    
  40b005:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40b00f:	nop

000000000040b010 <flatcc_verify_error_string@@Base>:
  40b010:	push   rbp
  40b011:	mov    rbp,rsp
  40b014:	mov    DWORD PTR [rbp-0xc],edi
  40b017:	mov    edi,DWORD PTR [rbp-0xc]
  40b01a:	mov    eax,edi
  40b01c:	mov    rcx,rax
  40b01f:	sub    rcx,0x24
  40b023:	mov    QWORD PTR [rbp-0x18],rax
  40b027:	mov    QWORD PTR [rbp-0x20],rcx
  40b02b:	ja     40b295 <flatcc_verify_error_string@@Base+0x285>
  40b031:	lea    rax,[rip+0x4600]        # 40f638 <flatcc_builder_padding_base@@Base+0x1468>
  40b038:	mov    rcx,QWORD PTR [rbp-0x18]
  40b03c:	movsxd rdx,DWORD PTR [rax+rcx*4]
  40b040:	add    rdx,rax
  40b043:	jmp    rdx
  40b045:	lea    rax,[rip+0x4680]        # 40f6cc <flatcc_builder_padding_base@@Base+0x14fc>
  40b04c:	mov    QWORD PTR [rbp-0x8],rax
  40b050:	jmp    40b2a0 <flatcc_verify_error_string@@Base+0x290>
  40b055:	lea    rax,[rip+0x4673]        # 40f6cf <flatcc_builder_padding_base@@Base+0x14ff>
  40b05c:	mov    QWORD PTR [rbp-0x8],rax
  40b060:	jmp    40b2a0 <flatcc_verify_error_string@@Base+0x290>
  40b065:	lea    rax,[rip+0x467b]        # 40f6e7 <flatcc_builder_padding_base@@Base+0x1517>
  40b06c:	mov    QWORD PTR [rbp-0x8],rax
  40b070:	jmp    40b2a0 <flatcc_verify_error_string@@Base+0x290>
  40b075:	lea    rax,[rip+0x467f]        # 40f6fb <flatcc_builder_padding_base@@Base+0x152b>
  40b07c:	mov    QWORD PTR [rbp-0x8],rax
  40b080:	jmp    40b2a0 <flatcc_verify_error_string@@Base+0x290>
  40b085:	lea    rax,[rip+0x4689]        # 40f715 <flatcc_builder_padding_base@@Base+0x1545>
  40b08c:	mov    QWORD PTR [rbp-0x8],rax
  40b090:	jmp    40b2a0 <flatcc_verify_error_string@@Base+0x290>
  40b095:	lea    rax,[rip+0x4690]        # 40f72c <flatcc_builder_padding_base@@Base+0x155c>
  40b09c:	mov    QWORD PTR [rbp-0x8],rax
  40b0a0:	jmp    40b2a0 <flatcc_verify_error_string@@Base+0x290>
  40b0a5:	lea    rax,[rip+0x46a3]        # 40f74f <flatcc_builder_padding_base@@Base+0x157f>
  40b0ac:	mov    QWORD PTR [rbp-0x8],rax
  40b0b0:	jmp    40b2a0 <flatcc_verify_error_string@@Base+0x290>
  40b0b5:	lea    rax,[rip+0x46b2]        # 40f76e <flatcc_builder_padding_base@@Base+0x159e>
  40b0bc:	mov    QWORD PTR [rbp-0x8],rax
  40b0c0:	jmp    40b2a0 <flatcc_verify_error_string@@Base+0x290>
  40b0c5:	lea    rax,[rip+0x46bd]        # 40f789 <flatcc_builder_padding_base@@Base+0x15b9>
  40b0cc:	mov    QWORD PTR [rbp-0x8],rax
  40b0d0:	jmp    40b2a0 <flatcc_verify_error_string@@Base+0x290>
  40b0d5:	lea    rax,[rip+0x46c1]        # 40f79d <flatcc_builder_padding_base@@Base+0x15cd>
  40b0dc:	mov    QWORD PTR [rbp-0x8],rax
  40b0e0:	jmp    40b2a0 <flatcc_verify_error_string@@Base+0x290>
  40b0e5:	lea    rax,[rip+0x46c5]        # 40f7b1 <flatcc_builder_padding_base@@Base+0x15e1>
  40b0ec:	mov    QWORD PTR [rbp-0x8],rax
  40b0f0:	jmp    40b2a0 <flatcc_verify_error_string@@Base+0x290>
  40b0f5:	lea    rax,[rip+0x46ca]        # 40f7c6 <flatcc_builder_padding_base@@Base+0x15f6>
  40b0fc:	mov    QWORD PTR [rbp-0x8],rax
  40b100:	jmp    40b2a0 <flatcc_verify_error_string@@Base+0x290>
  40b105:	lea    rax,[rip+0x46cb]        # 40f7d7 <flatcc_builder_padding_base@@Base+0x1607>
  40b10c:	mov    QWORD PTR [rbp-0x8],rax
  40b110:	jmp    40b2a0 <flatcc_verify_error_string@@Base+0x290>
  40b115:	lea    rax,[rip+0x46d3]        # 40f7ef <flatcc_builder_padding_base@@Base+0x161f>
  40b11c:	mov    QWORD PTR [rbp-0x8],rax
  40b120:	jmp    40b2a0 <flatcc_verify_error_string@@Base+0x290>
  40b125:	lea    rax,[rip+0x46dc]        # 40f808 <flatcc_builder_padding_base@@Base+0x1638>
  40b12c:	mov    QWORD PTR [rbp-0x8],rax
  40b130:	jmp    40b2a0 <flatcc_verify_error_string@@Base+0x290>
  40b135:	lea    rax,[rip+0x46e6]        # 40f822 <flatcc_builder_padding_base@@Base+0x1652>
  40b13c:	mov    QWORD PTR [rbp-0x8],rax
  40b140:	jmp    40b2a0 <flatcc_verify_error_string@@Base+0x290>
  40b145:	lea    rax,[rip+0x46fd]        # 40f849 <flatcc_builder_padding_base@@Base+0x1679>
  40b14c:	mov    QWORD PTR [rbp-0x8],rax
  40b150:	jmp    40b2a0 <flatcc_verify_error_string@@Base+0x290>
  40b155:	lea    rax,[rip+0x4715]        # 40f871 <flatcc_builder_padding_base@@Base+0x16a1>
  40b15c:	mov    QWORD PTR [rbp-0x8],rax
  40b160:	jmp    40b2a0 <flatcc_verify_error_string@@Base+0x290>
  40b165:	lea    rax,[rip+0x472d]        # 40f899 <flatcc_builder_padding_base@@Base+0x16c9>
  40b16c:	mov    QWORD PTR [rbp-0x8],rax
  40b170:	jmp    40b2a0 <flatcc_verify_error_string@@Base+0x290>
  40b175:	lea    rax,[rip+0x4871]        # 40f9ed <flatcc_builder_padding_base@@Base+0x181d>
  40b17c:	mov    QWORD PTR [rbp-0x8],rax
  40b180:	jmp    40b2a0 <flatcc_verify_error_string@@Base+0x290>
  40b185:	lea    rax,[rip+0x4721]        # 40f8ad <flatcc_builder_padding_base@@Base+0x16dd>
  40b18c:	mov    QWORD PTR [rbp-0x8],rax
  40b190:	jmp    40b2a0 <flatcc_verify_error_string@@Base+0x290>
  40b195:	lea    rax,[rip+0x4729]        # 40f8c5 <flatcc_builder_padding_base@@Base+0x16f5>
  40b19c:	mov    QWORD PTR [rbp-0x8],rax
  40b1a0:	jmp    40b2a0 <flatcc_verify_error_string@@Base+0x290>
  40b1a5:	lea    rax,[rip+0x4745]        # 40f8f1 <flatcc_builder_padding_base@@Base+0x1721>
  40b1ac:	mov    QWORD PTR [rbp-0x8],rax
  40b1b0:	jmp    40b2a0 <flatcc_verify_error_string@@Base+0x290>
  40b1b5:	lea    rax,[rip+0x4768]        # 40f924 <flatcc_builder_padding_base@@Base+0x1754>
  40b1bc:	mov    QWORD PTR [rbp-0x8],rax
  40b1c0:	jmp    40b2a0 <flatcc_verify_error_string@@Base+0x290>
  40b1c5:	lea    rax,[rip+0x4781]        # 40f94d <flatcc_builder_padding_base@@Base+0x177d>
  40b1cc:	mov    QWORD PTR [rbp-0x8],rax
  40b1d0:	jmp    40b2a0 <flatcc_verify_error_string@@Base+0x290>
  40b1d5:	lea    rax,[rip+0x479a]        # 40f976 <flatcc_builder_padding_base@@Base+0x17a6>
  40b1dc:	mov    QWORD PTR [rbp-0x8],rax
  40b1e0:	jmp    40b2a0 <flatcc_verify_error_string@@Base+0x290>
  40b1e5:	lea    rax,[rip+0x47b9]        # 40f9a5 <flatcc_builder_padding_base@@Base+0x17d5>
  40b1ec:	mov    QWORD PTR [rbp-0x8],rax
  40b1f0:	jmp    40b2a0 <flatcc_verify_error_string@@Base+0x290>
  40b1f5:	lea    rax,[rip+0x47bd]        # 40f9b9 <flatcc_builder_padding_base@@Base+0x17e9>
  40b1fc:	mov    QWORD PTR [rbp-0x8],rax
  40b200:	jmp    40b2a0 <flatcc_verify_error_string@@Base+0x290>
  40b205:	lea    rax,[rip+0x47c8]        # 40f9d4 <flatcc_builder_padding_base@@Base+0x1804>
  40b20c:	mov    QWORD PTR [rbp-0x8],rax
  40b210:	jmp    40b2a0 <flatcc_verify_error_string@@Base+0x290>
  40b215:	lea    rax,[rip+0x47d0]        # 40f9ec <flatcc_builder_padding_base@@Base+0x181c>
  40b21c:	mov    QWORD PTR [rbp-0x8],rax
  40b220:	jmp    40b2a0 <flatcc_verify_error_string@@Base+0x290>
  40b225:	lea    rax,[rip+0x47e8]        # 40fa14 <flatcc_builder_padding_base@@Base+0x1844>
  40b22c:	mov    QWORD PTR [rbp-0x8],rax
  40b230:	jmp    40b2a0 <flatcc_verify_error_string@@Base+0x290>
  40b235:	lea    rax,[rip+0x47fe]        # 40fa3a <flatcc_builder_padding_base@@Base+0x186a>
  40b23c:	mov    QWORD PTR [rbp-0x8],rax
  40b240:	jmp    40b2a0 <flatcc_verify_error_string@@Base+0x290>
  40b245:	lea    rax,[rip+0x4803]        # 40fa4f <flatcc_builder_padding_base@@Base+0x187f>
  40b24c:	mov    QWORD PTR [rbp-0x8],rax
  40b250:	jmp    40b2a0 <flatcc_verify_error_string@@Base+0x290>
  40b255:	lea    rax,[rip+0x481a]        # 40fa76 <flatcc_builder_padding_base@@Base+0x18a6>
  40b25c:	mov    QWORD PTR [rbp-0x8],rax
  40b260:	jmp    40b2a0 <flatcc_verify_error_string@@Base+0x290>
  40b265:	lea    rax,[rip+0x482f]        # 40fa9b <flatcc_builder_padding_base@@Base+0x18cb>
  40b26c:	mov    QWORD PTR [rbp-0x8],rax
  40b270:	jmp    40b2a0 <flatcc_verify_error_string@@Base+0x290>
  40b275:	lea    rax,[rip+0x4853]        # 40facf <flatcc_builder_padding_base@@Base+0x18ff>
  40b27c:	mov    QWORD PTR [rbp-0x8],rax
  40b280:	jmp    40b2a0 <flatcc_verify_error_string@@Base+0x290>
  40b285:	lea    rax,[rip+0x485d]        # 40fae9 <flatcc_builder_padding_base@@Base+0x1919>
  40b28c:	mov    QWORD PTR [rbp-0x8],rax
  40b290:	jmp    40b2a0 <flatcc_verify_error_string@@Base+0x290>
  40b295:	lea    rax,[rip+0x485b]        # 40faf7 <flatcc_builder_padding_base@@Base+0x1927>
  40b29c:	mov    QWORD PTR [rbp-0x8],rax
  40b2a0:	mov    rax,QWORD PTR [rbp-0x8]
  40b2a4:	pop    rbp
  40b2a5:	ret    
  40b2a6:	nop    WORD PTR cs:[rax+rax*1+0x0]

000000000040b2b0 <flatcc_verify_field@@Base>:
  40b2b0:	push   rbp
  40b2b1:	mov    rbp,rsp
  40b2b4:	sub    rsp,0x30
  40b2b8:	mov    ax,cx
  40b2bb:	mov    r8w,si
  40b2bf:	xor    ecx,ecx
  40b2c1:	mov    QWORD PTR [rbp-0x10],rdi
  40b2c5:	mov    WORD PTR [rbp-0x12],r8w
  40b2ca:	mov    QWORD PTR [rbp-0x20],rdx
  40b2ce:	mov    WORD PTR [rbp-0x22],ax
  40b2d2:	mov    rdi,QWORD PTR [rbp-0x10]
  40b2d6:	mov    ax,WORD PTR [rbp-0x12]
  40b2da:	mov    rdx,QWORD PTR [rbp-0x20]
  40b2de:	mov    esi,edx
  40b2e0:	movzx  r9d,ax
  40b2e4:	mov    DWORD PTR [rbp-0x28],esi
  40b2e7:	mov    esi,r9d
  40b2ea:	mov    edx,ecx
  40b2ec:	mov    ecx,DWORD PTR [rbp-0x28]
  40b2ef:	movzx  r8d,WORD PTR [rbp-0x22]
  40b2f4:	call   40b350 <flatcc_verify_field@@Base+0xa0>
  40b2f9:	cmp    eax,0x0
  40b2fc:	je     40b331 <flatcc_verify_field@@Base+0x81>
  40b302:	xor    edx,edx
  40b304:	mov    rdi,QWORD PTR [rbp-0x10]
  40b308:	mov    ax,WORD PTR [rbp-0x12]
  40b30c:	mov    rcx,QWORD PTR [rbp-0x20]
  40b310:	mov    esi,ecx
  40b312:	movzx  r8d,ax
  40b316:	mov    DWORD PTR [rbp-0x2c],esi
  40b319:	mov    esi,r8d
  40b31c:	mov    ecx,DWORD PTR [rbp-0x2c]
  40b31f:	movzx  r8d,WORD PTR [rbp-0x22]
  40b324:	call   40b350 <flatcc_verify_field@@Base+0xa0>
  40b329:	mov    DWORD PTR [rbp-0x4],eax
  40b32c:	jmp    40b338 <flatcc_verify_field@@Base+0x88>
  40b331:	mov    DWORD PTR [rbp-0x4],0x0
  40b338:	mov    eax,DWORD PTR [rbp-0x4]
  40b33b:	add    rsp,0x30
  40b33f:	pop    rbp
  40b340:	ret    
  40b341:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40b34b:	nop    DWORD PTR [rax+rax*1+0x0]
  40b350:	push   rbp
  40b351:	mov    rbp,rsp
  40b354:	sub    rsp,0x40
  40b358:	mov    ax,r8w
  40b35c:	mov    r9w,si
  40b360:	mov    QWORD PTR [rbp-0x10],rdi
  40b364:	mov    WORD PTR [rbp-0x12],r9w
  40b369:	mov    DWORD PTR [rbp-0x18],edx
  40b36c:	mov    DWORD PTR [rbp-0x1c],ecx
  40b36f:	mov    WORD PTR [rbp-0x1e],ax
  40b373:	mov    rdi,QWORD PTR [rbp-0x10]
  40b377:	mov    rdi,QWORD PTR [rdi]
  40b37a:	mov    ecx,edi
  40b37c:	mov    DWORD PTR [rbp-0x30],ecx
  40b37f:	mov    rdi,QWORD PTR [rbp-0x10]
  40b383:	movzx  esi,WORD PTR [rbp-0x12]
  40b387:	call   40cdd0 <flatcc_verify_union_field@@Base+0x250>
  40b38c:	mov    r9w,ax
  40b390:	mov    WORD PTR [rbp-0x2a],r9w
  40b395:	cmp    WORD PTR [rbp-0x2a],0x0
  40b39a:	jne    40b3dd <flatcc_verify_field@@Base+0x12d>
  40b3a0:	jmp    40b3a5 <flatcc_verify_field@@Base+0xf5>
  40b3a5:	cmp    DWORD PTR [rbp-0x18],0x0
  40b3a9:	setne  al
  40b3ac:	xor    al,0xff
  40b3ae:	and    al,0x1
  40b3b0:	movzx  ecx,al
  40b3b3:	mov    DWORD PTR [rbp-0x34],ecx
  40b3b6:	cmp    DWORD PTR [rbp-0x34],0x0
  40b3ba:	jne    40b3cc <flatcc_verify_field@@Base+0x11c>
  40b3c0:	mov    DWORD PTR [rbp-0x4],0x4
  40b3c7:	jmp    40b49b <flatcc_verify_field@@Base+0x1eb>
  40b3cc:	jmp    40b3d1 <flatcc_verify_field@@Base+0x121>
  40b3d1:	mov    DWORD PTR [rbp-0x4],0x0
  40b3d8:	jmp    40b49b <flatcc_verify_field@@Base+0x1eb>
  40b3dd:	movzx  eax,WORD PTR [rbp-0x2a]
  40b3e1:	mov    DWORD PTR [rbp-0x24],eax
  40b3e4:	mov    eax,DWORD PTR [rbp-0x24]
  40b3e7:	add    eax,DWORD PTR [rbp-0x1c]
  40b3ea:	mov    DWORD PTR [rbp-0x28],eax
  40b3ed:	mov    eax,DWORD PTR [rbp-0x28]
  40b3f0:	mov    rcx,QWORD PTR [rbp-0x10]
  40b3f4:	movzx  edx,WORD PTR [rcx+0x1c]
  40b3f8:	cmp    eax,edx
  40b3fa:	setbe  sil
  40b3fe:	and    sil,0x1
  40b402:	movzx  eax,sil
  40b406:	mov    DWORD PTR [rbp-0x38],eax
  40b409:	cmp    DWORD PTR [rbp-0x38],0x0
  40b40d:	jne    40b41f <flatcc_verify_field@@Base+0x16f>
  40b413:	mov    DWORD PTR [rbp-0x4],0xd
  40b41a:	jmp    40b49b <flatcc_verify_field@@Base+0x1eb>
  40b41f:	jmp    40b424 <flatcc_verify_field@@Base+0x174>
  40b424:	jmp    40b429 <flatcc_verify_field@@Base+0x179>
  40b429:	mov    DWORD PTR [rbp-0x3c],0x1
  40b430:	cmp    DWORD PTR [rbp-0x3c],0x0
  40b434:	jne    40b446 <flatcc_verify_field@@Base+0x196>
  40b43a:	mov    DWORD PTR [rbp-0x4],0xe
  40b441:	jmp    40b49b <flatcc_verify_field@@Base+0x1eb>
  40b446:	jmp    40b44b <flatcc_verify_field@@Base+0x19b>
  40b44b:	mov    rax,QWORD PTR [rbp-0x10]
  40b44f:	mov    ecx,DWORD PTR [rax+0x18]
  40b452:	add    ecx,DWORD PTR [rbp-0x30]
  40b455:	add    ecx,DWORD PTR [rbp-0x24]
  40b458:	mov    DWORD PTR [rbp-0x24],ecx
  40b45b:	mov    eax,DWORD PTR [rbp-0x24]
  40b45e:	movzx  ecx,WORD PTR [rbp-0x1e]
  40b462:	sub    ecx,0x1
  40b465:	and    eax,ecx
  40b467:	cmp    eax,0x0
  40b46a:	setne  dl
  40b46d:	xor    dl,0xff
  40b470:	and    dl,0x1
  40b473:	movzx  eax,dl
  40b476:	mov    DWORD PTR [rbp-0x40],eax
  40b479:	cmp    DWORD PTR [rbp-0x40],0x0
  40b47d:	jne    40b48f <flatcc_verify_field@@Base+0x1df>
  40b483:	mov    DWORD PTR [rbp-0x4],0xc
  40b48a:	jmp    40b49b <flatcc_verify_field@@Base+0x1eb>
  40b48f:	jmp    40b494 <flatcc_verify_field@@Base+0x1e4>
  40b494:	mov    DWORD PTR [rbp-0x4],0x0
  40b49b:	mov    eax,DWORD PTR [rbp-0x4]
  40b49e:	add    rsp,0x40
  40b4a2:	pop    rbp
  40b4a3:	ret    
  40b4a4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40b4ae:	xchg   ax,ax

000000000040b4b0 <flatcc_verify_string_field@@Base>:
  40b4b0:	push   rbp
  40b4b1:	mov    rbp,rsp
  40b4b4:	sub    rsp,0x30
  40b4b8:	mov    ax,si
  40b4bb:	mov    QWORD PTR [rbp-0x10],rdi
  40b4bf:	mov    WORD PTR [rbp-0x12],ax
  40b4c3:	mov    DWORD PTR [rbp-0x18],edx
  40b4c6:	mov    rdi,QWORD PTR [rbp-0x10]
  40b4ca:	mov    ax,WORD PTR [rbp-0x12]
  40b4ce:	mov    edx,DWORD PTR [rbp-0x18]
  40b4d1:	movzx  esi,ax
  40b4d4:	lea    rcx,[rbp-0x1c]
  40b4d8:	call   40b550 <flatcc_verify_string_field@@Base+0xa0>
  40b4dd:	mov    DWORD PTR [rbp-0x20],eax
  40b4e0:	cmp    DWORD PTR [rbp-0x20],0x0
  40b4e4:	jne    40b4f4 <flatcc_verify_string_field@@Base+0x44>
  40b4ea:	cmp    DWORD PTR [rbp-0x1c],0x0
  40b4ee:	jne    40b4ff <flatcc_verify_string_field@@Base+0x4f>
  40b4f4:	mov    eax,DWORD PTR [rbp-0x20]
  40b4f7:	mov    DWORD PTR [rbp-0x4],eax
  40b4fa:	jmp    40b547 <flatcc_verify_string_field@@Base+0x97>
  40b4ff:	jmp    40b504 <flatcc_verify_string_field@@Base+0x54>
  40b504:	mov    rax,QWORD PTR [rbp-0x10]
  40b508:	mov    rdi,QWORD PTR [rax]
  40b50b:	mov    rax,QWORD PTR [rbp-0x10]
  40b50f:	mov    esi,DWORD PTR [rax+0x8]
  40b512:	mov    edx,DWORD PTR [rbp-0x1c]
  40b515:	mov    rax,QWORD PTR [rbp-0x10]
  40b519:	mov    rax,QWORD PTR [rax]
  40b51c:	mov    ecx,DWORD PTR [rbp-0x1c]
  40b51f:	mov    QWORD PTR [rbp-0x28],rdi
  40b523:	mov    rdi,rax
  40b526:	mov    DWORD PTR [rbp-0x2c],esi
  40b529:	mov    esi,ecx
  40b52b:	mov    DWORD PTR [rbp-0x30],edx
  40b52e:	call   40b790 <flatcc_verify_string_field@@Base+0x2e0>
  40b533:	mov    rdi,QWORD PTR [rbp-0x28]
  40b537:	mov    esi,DWORD PTR [rbp-0x2c]
  40b53a:	mov    edx,DWORD PTR [rbp-0x30]
  40b53d:	mov    ecx,eax
  40b53f:	call   40b690 <flatcc_verify_string_field@@Base+0x1e0>
  40b544:	mov    DWORD PTR [rbp-0x4],eax
  40b547:	mov    eax,DWORD PTR [rbp-0x4]
  40b54a:	add    rsp,0x30
  40b54e:	pop    rbp
  40b54f:	ret    
  40b550:	push   rbp
  40b551:	mov    rbp,rsp
  40b554:	sub    rsp,0x40
  40b558:	mov    ax,si
  40b55b:	mov    QWORD PTR [rbp-0x10],rdi
  40b55f:	mov    WORD PTR [rbp-0x12],ax
  40b563:	mov    DWORD PTR [rbp-0x18],edx
  40b566:	mov    QWORD PTR [rbp-0x20],rcx
  40b56a:	mov    rdi,QWORD PTR [rbp-0x10]
  40b56e:	movzx  esi,WORD PTR [rbp-0x12]
  40b572:	call   40cdd0 <flatcc_verify_union_field@@Base+0x250>
  40b577:	mov    r8w,ax
  40b57b:	mov    WORD PTR [rbp-0x2a],r8w
  40b580:	cmp    WORD PTR [rbp-0x2a],0x0
  40b585:	jne    40b5b7 <flatcc_verify_string_field@@Base+0x107>
  40b58b:	mov    rax,QWORD PTR [rbp-0x20]
  40b58f:	mov    DWORD PTR [rax],0x0
  40b595:	cmp    DWORD PTR [rbp-0x18],0x0
  40b599:	je     40b5ab <flatcc_verify_string_field@@Base+0xfb>
  40b59f:	mov    DWORD PTR [rbp-0x4],0x4
  40b5a6:	jmp    40b67e <flatcc_verify_string_field@@Base+0x1ce>
  40b5ab:	mov    DWORD PTR [rbp-0x4],0x0
  40b5b2:	jmp    40b67e <flatcc_verify_string_field@@Base+0x1ce>
  40b5b7:	movzx  eax,WORD PTR [rbp-0x2a]
  40b5bb:	mov    DWORD PTR [rbp-0x24],eax
  40b5be:	mov    eax,DWORD PTR [rbp-0x24]
  40b5c1:	mov    ecx,eax
  40b5c3:	add    rcx,0x4
  40b5c7:	mov    eax,ecx
  40b5c9:	mov    DWORD PTR [rbp-0x28],eax
  40b5cc:	mov    eax,DWORD PTR [rbp-0x28]
  40b5cf:	mov    rcx,QWORD PTR [rbp-0x10]
  40b5d3:	movzx  edx,WORD PTR [rcx+0x1c]
  40b5d7:	cmp    eax,edx
  40b5d9:	setbe  sil
  40b5dd:	and    sil,0x1
  40b5e1:	movzx  eax,sil
  40b5e5:	mov    DWORD PTR [rbp-0x30],eax
  40b5e8:	cmp    DWORD PTR [rbp-0x30],0x0
  40b5ec:	jne    40b5fe <flatcc_verify_string_field@@Base+0x14e>
  40b5f2:	mov    DWORD PTR [rbp-0x4],0xd
  40b5f9:	jmp    40b67e <flatcc_verify_string_field@@Base+0x1ce>
  40b5fe:	jmp    40b603 <flatcc_verify_string_field@@Base+0x153>
  40b603:	jmp    40b608 <flatcc_verify_string_field@@Base+0x158>
  40b608:	mov    DWORD PTR [rbp-0x34],0x1
  40b60f:	cmp    DWORD PTR [rbp-0x34],0x0
  40b613:	jne    40b625 <flatcc_verify_string_field@@Base+0x175>
  40b619:	mov    DWORD PTR [rbp-0x4],0xe
  40b620:	jmp    40b67e <flatcc_verify_string_field@@Base+0x1ce>
  40b625:	jmp    40b62a <flatcc_verify_string_field@@Base+0x17a>
  40b62a:	mov    rax,QWORD PTR [rbp-0x10]
  40b62e:	mov    ecx,DWORD PTR [rax+0x18]
  40b631:	add    ecx,DWORD PTR [rbp-0x24]
  40b634:	mov    DWORD PTR [rbp-0x24],ecx
  40b637:	mov    eax,DWORD PTR [rbp-0x24]
  40b63a:	mov    ecx,eax
  40b63c:	and    rcx,0x3
  40b640:	cmp    rcx,0x0
  40b644:	setne  dl
  40b647:	xor    dl,0xff
  40b64a:	and    dl,0x1
  40b64d:	movzx  eax,dl
  40b650:	mov    DWORD PTR [rbp-0x38],eax
  40b653:	cmp    DWORD PTR [rbp-0x38],0x0
  40b657:	jne    40b669 <flatcc_verify_string_field@@Base+0x1b9>
  40b65d:	mov    DWORD PTR [rbp-0x4],0xc
  40b664:	jmp    40b67e <flatcc_verify_string_field@@Base+0x1ce>
  40b669:	jmp    40b66e <flatcc_verify_string_field@@Base+0x1be>
  40b66e:	mov    eax,DWORD PTR [rbp-0x24]
  40b671:	mov    rcx,QWORD PTR [rbp-0x20]
  40b675:	mov    DWORD PTR [rcx],eax
  40b677:	mov    DWORD PTR [rbp-0x4],0x0
  40b67e:	mov    eax,DWORD PTR [rbp-0x4]
  40b681:	add    rsp,0x40
  40b685:	pop    rbp
  40b686:	ret    
  40b687:	nop    WORD PTR [rax+rax*1+0x0]
  40b690:	push   rbp
  40b691:	mov    rbp,rsp
  40b694:	sub    rsp,0x30
  40b698:	mov    QWORD PTR [rbp-0x10],rdi
  40b69c:	mov    DWORD PTR [rbp-0x14],esi
  40b69f:	mov    DWORD PTR [rbp-0x18],edx
  40b6a2:	mov    DWORD PTR [rbp-0x1c],ecx
  40b6a5:	mov    edi,DWORD PTR [rbp-0x14]
  40b6a8:	mov    esi,DWORD PTR [rbp-0x18]
  40b6ab:	mov    edx,DWORD PTR [rbp-0x1c]
  40b6ae:	call   40d2e0 <flatcc_verify_union_vector_field@@Base+0x4a0>
  40b6b3:	mov    DWORD PTR [rbp-0x24],eax
  40b6b6:	cmp    DWORD PTR [rbp-0x24],0x0
  40b6ba:	jne    40b6cc <flatcc_verify_string_field@@Base+0x21c>
  40b6c0:	mov    DWORD PTR [rbp-0x4],0x11
  40b6c7:	jmp    40b77a <flatcc_verify_string_field@@Base+0x2ca>
  40b6cc:	jmp    40b6d1 <flatcc_verify_string_field@@Base+0x221>
  40b6d1:	mov    eax,DWORD PTR [rbp-0x1c]
  40b6d4:	add    eax,DWORD PTR [rbp-0x18]
  40b6d7:	mov    DWORD PTR [rbp-0x18],eax
  40b6da:	mov    rdi,QWORD PTR [rbp-0x10]
  40b6de:	mov    esi,DWORD PTR [rbp-0x18]
  40b6e1:	call   40b790 <flatcc_verify_string_field@@Base+0x2e0>
  40b6e6:	mov    DWORD PTR [rbp-0x20],eax
  40b6e9:	mov    eax,DWORD PTR [rbp-0x18]
  40b6ec:	mov    edi,eax
  40b6ee:	add    rdi,0x4
  40b6f2:	mov    eax,edi
  40b6f4:	mov    DWORD PTR [rbp-0x18],eax
  40b6f7:	mov    eax,DWORD PTR [rbp-0x14]
  40b6fa:	sub    eax,DWORD PTR [rbp-0x18]
  40b6fd:	mov    ecx,DWORD PTR [rbp-0x20]
  40b700:	add    ecx,0x1
  40b703:	cmp    eax,ecx
  40b705:	setae  dl
  40b708:	and    dl,0x1
  40b70b:	movzx  eax,dl
  40b70e:	mov    DWORD PTR [rbp-0x28],eax
  40b711:	cmp    DWORD PTR [rbp-0x28],0x0
  40b715:	jne    40b727 <flatcc_verify_string_field@@Base+0x277>
  40b71b:	mov    DWORD PTR [rbp-0x4],0x8
  40b722:	jmp    40b77a <flatcc_verify_string_field@@Base+0x2ca>
  40b727:	jmp    40b72c <flatcc_verify_string_field@@Base+0x27c>
  40b72c:	jmp    40b731 <flatcc_verify_string_field@@Base+0x281>
  40b731:	mov    rax,QWORD PTR [rbp-0x10]
  40b735:	mov    ecx,DWORD PTR [rbp-0x18]
  40b738:	mov    edx,ecx
  40b73a:	add    rax,rdx
  40b73d:	mov    ecx,DWORD PTR [rbp-0x20]
  40b740:	mov    edx,ecx
  40b742:	movzx  ecx,BYTE PTR [rax+rdx*1]
  40b746:	cmp    ecx,0x0
  40b749:	sete   sil
  40b74d:	and    sil,0x1
  40b751:	movzx  ecx,sil
  40b755:	mov    DWORD PTR [rbp-0x2c],ecx
  40b758:	cmp    DWORD PTR [rbp-0x2c],0x0
  40b75c:	jne    40b76e <flatcc_verify_string_field@@Base+0x2be>
  40b762:	mov    DWORD PTR [rbp-0x4],0x7
  40b769:	jmp    40b77a <flatcc_verify_string_field@@Base+0x2ca>
  40b76e:	jmp    40b773 <flatcc_verify_string_field@@Base+0x2c3>
  40b773:	mov    DWORD PTR [rbp-0x4],0x0
  40b77a:	mov    eax,DWORD PTR [rbp-0x4]
  40b77d:	add    rsp,0x30
  40b781:	pop    rbp
  40b782:	ret    
  40b783:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40b78d:	nop    DWORD PTR [rax]
  40b790:	push   rbp
  40b791:	mov    rbp,rsp
  40b794:	sub    rsp,0x10
  40b798:	mov    QWORD PTR [rbp-0x8],rdi
  40b79c:	mov    DWORD PTR [rbp-0xc],esi
  40b79f:	mov    rdi,QWORD PTR [rbp-0x8]
  40b7a3:	mov    esi,DWORD PTR [rbp-0xc]
  40b7a6:	mov    eax,esi
  40b7a8:	add    rdi,rax
  40b7ab:	call   40d350 <flatcc_verify_union_vector_field@@Base+0x510>
  40b7b0:	add    rsp,0x10
  40b7b4:	pop    rbp
  40b7b5:	ret    
  40b7b6:	nop    WORD PTR cs:[rax+rax*1+0x0]

000000000040b7c0 <flatcc_verify_vector_field@@Base>:
  40b7c0:	push   rbp
  40b7c1:	mov    rbp,rsp
  40b7c4:	sub    rsp,0x60
  40b7c8:	mov    ax,r8w
  40b7cc:	mov    r10w,si
  40b7d0:	mov    QWORD PTR [rbp-0x10],rdi
  40b7d4:	mov    WORD PTR [rbp-0x12],r10w
  40b7d9:	mov    DWORD PTR [rbp-0x18],edx
  40b7dc:	mov    QWORD PTR [rbp-0x20],rcx
  40b7e0:	mov    WORD PTR [rbp-0x22],ax
  40b7e4:	mov    QWORD PTR [rbp-0x30],r9
  40b7e8:	mov    rdi,QWORD PTR [rbp-0x10]
  40b7ec:	mov    ax,WORD PTR [rbp-0x12]
  40b7f0:	mov    edx,DWORD PTR [rbp-0x18]
  40b7f3:	movzx  esi,ax
  40b7f6:	lea    rcx,[rbp-0x34]
  40b7fa:	call   40b550 <flatcc_verify_string_field@@Base+0xa0>
  40b7ff:	mov    DWORD PTR [rbp-0x38],eax
  40b802:	cmp    DWORD PTR [rbp-0x38],0x0
  40b806:	jne    40b816 <flatcc_verify_vector_field@@Base+0x56>
  40b80c:	cmp    DWORD PTR [rbp-0x34],0x0
  40b810:	jne    40b821 <flatcc_verify_vector_field@@Base+0x61>
  40b816:	mov    eax,DWORD PTR [rbp-0x38]
  40b819:	mov    DWORD PTR [rbp-0x4],eax
  40b81c:	jmp    40b8a0 <flatcc_verify_vector_field@@Base+0xe0>
  40b821:	jmp    40b826 <flatcc_verify_vector_field@@Base+0x66>
  40b826:	mov    rax,QWORD PTR [rbp-0x10]
  40b82a:	mov    rdi,QWORD PTR [rax]
  40b82d:	mov    rax,QWORD PTR [rbp-0x10]
  40b831:	mov    esi,DWORD PTR [rax+0x8]
  40b834:	mov    edx,DWORD PTR [rbp-0x34]
  40b837:	mov    rax,QWORD PTR [rbp-0x10]
  40b83b:	mov    rax,QWORD PTR [rax]
  40b83e:	mov    ecx,DWORD PTR [rbp-0x34]
  40b841:	mov    QWORD PTR [rbp-0x40],rdi
  40b845:	mov    rdi,rax
  40b848:	mov    DWORD PTR [rbp-0x44],esi
  40b84b:	mov    esi,ecx
  40b84d:	mov    DWORD PTR [rbp-0x48],edx
  40b850:	call   40b790 <flatcc_verify_string_field@@Base+0x2e0>
  40b855:	mov    rdi,QWORD PTR [rbp-0x20]
  40b859:	mov    ecx,edi
  40b85b:	mov    r8w,WORD PTR [rbp-0x22]
  40b860:	mov    rdi,QWORD PTR [rbp-0x30]
  40b864:	mov    edx,edi
  40b866:	mov    rdi,QWORD PTR [rbp-0x40]
  40b86a:	mov    esi,DWORD PTR [rbp-0x44]
  40b86d:	mov    r9d,DWORD PTR [rbp-0x48]
  40b871:	mov    DWORD PTR [rbp-0x4c],edx
  40b874:	mov    edx,r9d
  40b877:	mov    DWORD PTR [rbp-0x50],ecx
  40b87a:	mov    ecx,eax
  40b87c:	mov    eax,DWORD PTR [rbp-0x50]
  40b87f:	mov    WORD PTR [rbp-0x52],r8w
  40b884:	mov    r8d,eax
  40b887:	mov    r10w,WORD PTR [rbp-0x52]
  40b88c:	movzx  r9d,r10w
  40b890:	mov    r11d,DWORD PTR [rbp-0x4c]
  40b894:	mov    DWORD PTR [rsp],r11d
  40b898:	call   40b8b0 <flatcc_verify_vector_field@@Base+0xf0>
  40b89d:	mov    DWORD PTR [rbp-0x4],eax
  40b8a0:	mov    eax,DWORD PTR [rbp-0x4]
  40b8a3:	add    rsp,0x60
  40b8a7:	pop    rbp
  40b8a8:	ret    
  40b8a9:	nop    DWORD PTR [rax+0x0]
  40b8b0:	push   rbp
  40b8b1:	mov    rbp,rsp
  40b8b4:	sub    rsp,0x40
  40b8b8:	mov    ax,r9w
  40b8bc:	mov    r9d,DWORD PTR [rbp+0x10]
  40b8c0:	mov    QWORD PTR [rbp-0x10],rdi
  40b8c4:	mov    DWORD PTR [rbp-0x14],esi
  40b8c7:	mov    DWORD PTR [rbp-0x18],edx
  40b8ca:	mov    DWORD PTR [rbp-0x1c],ecx
  40b8cd:	mov    DWORD PTR [rbp-0x20],r8d
  40b8d1:	mov    WORD PTR [rbp-0x22],ax
  40b8d5:	mov    DWORD PTR [rbp-0x38],r9d
  40b8d9:	mov    edi,DWORD PTR [rbp-0x14]
  40b8dc:	mov    esi,DWORD PTR [rbp-0x18]
  40b8df:	mov    edx,DWORD PTR [rbp-0x1c]
  40b8e2:	movzx  ecx,WORD PTR [rbp-0x22]
  40b8e6:	call   40d380 <flatcc_verify_union_vector_field@@Base+0x540>
  40b8eb:	mov    DWORD PTR [rbp-0x2c],eax
  40b8ee:	cmp    DWORD PTR [rbp-0x2c],0x0
  40b8f2:	jne    40b904 <flatcc_verify_vector_field@@Base+0x144>
  40b8f8:	mov    DWORD PTR [rbp-0x4],0x10
  40b8ff:	jmp    40b99e <flatcc_verify_vector_field@@Base+0x1de>
  40b904:	jmp    40b909 <flatcc_verify_vector_field@@Base+0x149>
  40b909:	mov    eax,DWORD PTR [rbp-0x1c]
  40b90c:	add    eax,DWORD PTR [rbp-0x18]
  40b90f:	mov    DWORD PTR [rbp-0x18],eax
  40b912:	mov    rdi,QWORD PTR [rbp-0x10]
  40b916:	mov    esi,DWORD PTR [rbp-0x18]
  40b919:	call   40b790 <flatcc_verify_string_field@@Base+0x2e0>
  40b91e:	mov    DWORD PTR [rbp-0x28],eax
  40b921:	mov    eax,DWORD PTR [rbp-0x18]
  40b924:	mov    edi,eax
  40b926:	add    rdi,0x4
  40b92a:	mov    eax,edi
  40b92c:	mov    DWORD PTR [rbp-0x18],eax
  40b92f:	mov    eax,DWORD PTR [rbp-0x28]
  40b932:	cmp    eax,DWORD PTR [rbp+0x10]
  40b935:	setbe  cl
  40b938:	and    cl,0x1
  40b93b:	movzx  eax,cl
  40b93e:	mov    DWORD PTR [rbp-0x30],eax
  40b941:	cmp    DWORD PTR [rbp-0x30],0x0
  40b945:	jne    40b957 <flatcc_verify_vector_field@@Base+0x197>
  40b94b:	mov    DWORD PTR [rbp-0x4],0x19
  40b952:	jmp    40b99e <flatcc_verify_vector_field@@Base+0x1de>
  40b957:	jmp    40b95c <flatcc_verify_vector_field@@Base+0x19c>
  40b95c:	jmp    40b961 <flatcc_verify_vector_field@@Base+0x1a1>
  40b961:	mov    eax,DWORD PTR [rbp-0x14]
  40b964:	sub    eax,DWORD PTR [rbp-0x18]
  40b967:	mov    ecx,DWORD PTR [rbp-0x28]
  40b96a:	imul   ecx,DWORD PTR [rbp-0x20]
  40b96e:	cmp    eax,ecx
  40b970:	setae  dl
  40b973:	and    dl,0x1
  40b976:	movzx  eax,dl
  40b979:	mov    DWORD PTR [rbp-0x34],eax
  40b97c:	cmp    DWORD PTR [rbp-0x34],0x0
  40b980:	jne    40b992 <flatcc_verify_vector_field@@Base+0x1d2>
  40b986:	mov    DWORD PTR [rbp-0x4],0x1a
  40b98d:	jmp    40b99e <flatcc_verify_vector_field@@Base+0x1de>
  40b992:	jmp    40b997 <flatcc_verify_vector_field@@Base+0x1d7>
  40b997:	mov    DWORD PTR [rbp-0x4],0x0
  40b99e:	mov    eax,DWORD PTR [rbp-0x4]
  40b9a1:	add    rsp,0x40
  40b9a5:	pop    rbp
  40b9a6:	ret    
  40b9a7:	nop    WORD PTR [rax+rax*1+0x0]

000000000040b9b0 <flatcc_verify_string_vector_field@@Base>:
  40b9b0:	push   rbp
  40b9b1:	mov    rbp,rsp
  40b9b4:	sub    rsp,0x30
  40b9b8:	mov    ax,si
  40b9bb:	mov    QWORD PTR [rbp-0x10],rdi
  40b9bf:	mov    WORD PTR [rbp-0x12],ax
  40b9c3:	mov    DWORD PTR [rbp-0x18],edx
  40b9c6:	mov    rdi,QWORD PTR [rbp-0x10]
  40b9ca:	mov    ax,WORD PTR [rbp-0x12]
  40b9ce:	mov    edx,DWORD PTR [rbp-0x18]
  40b9d1:	movzx  esi,ax
  40b9d4:	lea    rcx,[rbp-0x1c]
  40b9d8:	call   40b550 <flatcc_verify_string_field@@Base+0xa0>
  40b9dd:	mov    DWORD PTR [rbp-0x20],eax
  40b9e0:	cmp    DWORD PTR [rbp-0x20],0x0
  40b9e4:	jne    40b9f4 <flatcc_verify_string_vector_field@@Base+0x44>
  40b9ea:	cmp    DWORD PTR [rbp-0x1c],0x0
  40b9ee:	jne    40b9ff <flatcc_verify_string_vector_field@@Base+0x4f>
  40b9f4:	mov    eax,DWORD PTR [rbp-0x20]
  40b9f7:	mov    DWORD PTR [rbp-0x4],eax
  40b9fa:	jmp    40ba47 <flatcc_verify_string_vector_field@@Base+0x97>
  40b9ff:	jmp    40ba04 <flatcc_verify_string_vector_field@@Base+0x54>
  40ba04:	mov    rax,QWORD PTR [rbp-0x10]
  40ba08:	mov    rdi,QWORD PTR [rax]
  40ba0b:	mov    rax,QWORD PTR [rbp-0x10]
  40ba0f:	mov    esi,DWORD PTR [rax+0x8]
  40ba12:	mov    edx,DWORD PTR [rbp-0x1c]
  40ba15:	mov    rax,QWORD PTR [rbp-0x10]
  40ba19:	mov    rax,QWORD PTR [rax]
  40ba1c:	mov    ecx,DWORD PTR [rbp-0x1c]
  40ba1f:	mov    QWORD PTR [rbp-0x28],rdi
  40ba23:	mov    rdi,rax
  40ba26:	mov    DWORD PTR [rbp-0x2c],esi
  40ba29:	mov    esi,ecx
  40ba2b:	mov    DWORD PTR [rbp-0x30],edx
  40ba2e:	call   40b790 <flatcc_verify_string_field@@Base+0x2e0>
  40ba33:	mov    rdi,QWORD PTR [rbp-0x28]
  40ba37:	mov    esi,DWORD PTR [rbp-0x2c]
  40ba3a:	mov    edx,DWORD PTR [rbp-0x30]
  40ba3d:	mov    ecx,eax
  40ba3f:	call   40ba50 <flatcc_verify_string_vector_field@@Base+0xa0>
  40ba44:	mov    DWORD PTR [rbp-0x4],eax
  40ba47:	mov    eax,DWORD PTR [rbp-0x4]
  40ba4a:	add    rsp,0x30
  40ba4e:	pop    rbp
  40ba4f:	ret    
  40ba50:	push   rbp
  40ba51:	mov    rbp,rsp
  40ba54:	sub    rsp,0x50
  40ba58:	mov    QWORD PTR [rbp-0x10],rdi
  40ba5c:	mov    DWORD PTR [rbp-0x14],esi
  40ba5f:	mov    DWORD PTR [rbp-0x18],edx
  40ba62:	mov    DWORD PTR [rbp-0x1c],ecx
  40ba65:	mov    rdi,QWORD PTR [rbp-0x10]
  40ba69:	mov    esi,DWORD PTR [rbp-0x14]
  40ba6c:	mov    edx,DWORD PTR [rbp-0x18]
  40ba6f:	mov    ecx,DWORD PTR [rbp-0x1c]
  40ba72:	mov    eax,0x4
  40ba77:	mov    r8d,eax
  40ba7a:	mov    r9d,eax
  40ba7d:	mov    DWORD PTR [rsp],0x3fffffff
  40ba84:	call   40b8b0 <flatcc_verify_vector_field@@Base+0xf0>
  40ba89:	cmp    eax,0x0
  40ba8c:	je     40babe <flatcc_verify_string_vector_field@@Base+0x10e>
  40ba92:	mov    rdi,QWORD PTR [rbp-0x10]
  40ba96:	mov    esi,DWORD PTR [rbp-0x14]
  40ba99:	mov    edx,DWORD PTR [rbp-0x18]
  40ba9c:	mov    ecx,DWORD PTR [rbp-0x1c]
  40ba9f:	mov    eax,0x4
  40baa4:	mov    r8d,eax
  40baa7:	mov    r9d,eax
  40baaa:	mov    DWORD PTR [rsp],0x3fffffff
  40bab1:	call   40b8b0 <flatcc_verify_vector_field@@Base+0xf0>
  40bab6:	mov    DWORD PTR [rbp-0x4],eax
  40bab9:	jmp    40bb9c <flatcc_verify_string_vector_field@@Base+0x1ec>
  40babe:	mov    eax,DWORD PTR [rbp-0x1c]
  40bac1:	add    eax,DWORD PTR [rbp-0x18]
  40bac4:	mov    DWORD PTR [rbp-0x18],eax
  40bac7:	mov    rdi,QWORD PTR [rbp-0x10]
  40bacb:	mov    esi,DWORD PTR [rbp-0x18]
  40bace:	call   40b790 <flatcc_verify_string_field@@Base+0x2e0>
  40bad3:	mov    DWORD PTR [rbp-0x24],eax
  40bad6:	mov    eax,DWORD PTR [rbp-0x18]
  40bad9:	mov    edi,eax
  40badb:	add    rdi,0x4
  40badf:	mov    eax,edi
  40bae1:	mov    DWORD PTR [rbp-0x18],eax
  40bae4:	mov    DWORD PTR [rbp-0x20],0x0
  40baeb:	mov    eax,DWORD PTR [rbp-0x20]
  40baee:	cmp    eax,DWORD PTR [rbp-0x24]
  40baf1:	jae    40bb95 <flatcc_verify_string_vector_field@@Base+0x1e5>
  40baf7:	mov    rdi,QWORD PTR [rbp-0x10]
  40bafb:	mov    esi,DWORD PTR [rbp-0x14]
  40bafe:	mov    edx,DWORD PTR [rbp-0x18]
  40bb01:	mov    rax,QWORD PTR [rbp-0x10]
  40bb05:	mov    ecx,DWORD PTR [rbp-0x18]
  40bb08:	mov    QWORD PTR [rbp-0x30],rdi
  40bb0c:	mov    rdi,rax
  40bb0f:	mov    DWORD PTR [rbp-0x34],esi
  40bb12:	mov    esi,ecx
  40bb14:	mov    DWORD PTR [rbp-0x38],edx
  40bb17:	call   40b790 <flatcc_verify_string_field@@Base+0x2e0>
  40bb1c:	mov    rdi,QWORD PTR [rbp-0x30]
  40bb20:	mov    esi,DWORD PTR [rbp-0x34]
  40bb23:	mov    edx,DWORD PTR [rbp-0x38]
  40bb26:	mov    ecx,eax
  40bb28:	call   40b690 <flatcc_verify_string_field@@Base+0x1e0>
  40bb2d:	cmp    eax,0x0
  40bb30:	je     40bb74 <flatcc_verify_string_vector_field@@Base+0x1c4>
  40bb36:	mov    rdi,QWORD PTR [rbp-0x10]
  40bb3a:	mov    esi,DWORD PTR [rbp-0x14]
  40bb3d:	mov    edx,DWORD PTR [rbp-0x18]
  40bb40:	mov    rax,QWORD PTR [rbp-0x10]
  40bb44:	mov    ecx,DWORD PTR [rbp-0x18]
  40bb47:	mov    QWORD PTR [rbp-0x40],rdi
  40bb4b:	mov    rdi,rax
  40bb4e:	mov    DWORD PTR [rbp-0x44],esi
  40bb51:	mov    esi,ecx
  40bb53:	mov    DWORD PTR [rbp-0x48],edx
  40bb56:	call   40b790 <flatcc_verify_string_field@@Base+0x2e0>
  40bb5b:	mov    rdi,QWORD PTR [rbp-0x40]
  40bb5f:	mov    esi,DWORD PTR [rbp-0x44]
  40bb62:	mov    edx,DWORD PTR [rbp-0x48]
  40bb65:	mov    ecx,eax
  40bb67:	call   40b690 <flatcc_verify_string_field@@Base+0x1e0>
  40bb6c:	mov    DWORD PTR [rbp-0x4],eax
  40bb6f:	jmp    40bb9c <flatcc_verify_string_vector_field@@Base+0x1ec>
  40bb74:	jmp    40bb79 <flatcc_verify_string_vector_field@@Base+0x1c9>
  40bb79:	mov    eax,DWORD PTR [rbp-0x20]
  40bb7c:	add    eax,0x1
  40bb7f:	mov    DWORD PTR [rbp-0x20],eax
  40bb82:	mov    eax,DWORD PTR [rbp-0x18]
  40bb85:	mov    ecx,eax
  40bb87:	add    rcx,0x4
  40bb8b:	mov    eax,ecx
  40bb8d:	mov    DWORD PTR [rbp-0x18],eax
  40bb90:	jmp    40baeb <flatcc_verify_string_vector_field@@Base+0x13b>
  40bb95:	mov    DWORD PTR [rbp-0x4],0x0
  40bb9c:	mov    eax,DWORD PTR [rbp-0x4]
  40bb9f:	add    rsp,0x50
  40bba3:	pop    rbp
  40bba4:	ret    
  40bba5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40bbaf:	nop

000000000040bbb0 <flatcc_verify_table_field@@Base>:
  40bbb0:	push   rbp
  40bbb1:	mov    rbp,rsp
  40bbb4:	sub    rsp,0x40
  40bbb8:	mov    ax,si
  40bbbb:	mov    QWORD PTR [rbp-0x10],rdi
  40bbbf:	mov    WORD PTR [rbp-0x12],ax
  40bbc3:	mov    DWORD PTR [rbp-0x18],edx
  40bbc6:	mov    QWORD PTR [rbp-0x20],rcx
  40bbca:	mov    rdi,QWORD PTR [rbp-0x10]
  40bbce:	mov    ax,WORD PTR [rbp-0x12]
  40bbd2:	mov    edx,DWORD PTR [rbp-0x18]
  40bbd5:	movzx  esi,ax
  40bbd8:	lea    rcx,[rbp-0x24]
  40bbdc:	call   40b550 <flatcc_verify_string_field@@Base+0xa0>
  40bbe1:	mov    DWORD PTR [rbp-0x28],eax
  40bbe4:	cmp    DWORD PTR [rbp-0x28],0x0
  40bbe8:	jne    40bbf8 <flatcc_verify_table_field@@Base+0x48>
  40bbee:	cmp    DWORD PTR [rbp-0x24],0x0
  40bbf2:	jne    40bc03 <flatcc_verify_table_field@@Base+0x53>
  40bbf8:	mov    eax,DWORD PTR [rbp-0x28]
  40bbfb:	mov    DWORD PTR [rbp-0x4],eax
  40bbfe:	jmp    40bc57 <flatcc_verify_table_field@@Base+0xa7>
  40bc03:	jmp    40bc08 <flatcc_verify_table_field@@Base+0x58>
  40bc08:	mov    rax,QWORD PTR [rbp-0x10]
  40bc0c:	mov    rdi,QWORD PTR [rax]
  40bc0f:	mov    rax,QWORD PTR [rbp-0x10]
  40bc13:	mov    esi,DWORD PTR [rax+0x8]
  40bc16:	mov    edx,DWORD PTR [rbp-0x24]
  40bc19:	mov    rax,QWORD PTR [rbp-0x10]
  40bc1d:	mov    rax,QWORD PTR [rax]
  40bc20:	mov    ecx,DWORD PTR [rbp-0x24]
  40bc23:	mov    QWORD PTR [rbp-0x30],rdi
  40bc27:	mov    rdi,rax
  40bc2a:	mov    DWORD PTR [rbp-0x34],esi
  40bc2d:	mov    esi,ecx
  40bc2f:	mov    DWORD PTR [rbp-0x38],edx
  40bc32:	call   40b790 <flatcc_verify_string_field@@Base+0x2e0>
  40bc37:	mov    rdi,QWORD PTR [rbp-0x10]
  40bc3b:	mov    r8d,DWORD PTR [rdi+0xc]
  40bc3f:	mov    r9,QWORD PTR [rbp-0x20]
  40bc43:	mov    rdi,QWORD PTR [rbp-0x30]
  40bc47:	mov    esi,DWORD PTR [rbp-0x34]
  40bc4a:	mov    edx,DWORD PTR [rbp-0x38]
  40bc4d:	mov    ecx,eax
  40bc4f:	call   40bc60 <flatcc_verify_table_field@@Base+0xb0>
  40bc54:	mov    DWORD PTR [rbp-0x4],eax
  40bc57:	mov    eax,DWORD PTR [rbp-0x4]
  40bc5a:	add    rsp,0x40
  40bc5e:	pop    rbp
  40bc5f:	ret    
  40bc60:	push   rbp
  40bc61:	mov    rbp,rsp
  40bc64:	sub    rsp,0x80
  40bc6b:	mov    QWORD PTR [rbp-0x10],rdi
  40bc6f:	mov    DWORD PTR [rbp-0x14],esi
  40bc72:	mov    DWORD PTR [rbp-0x18],edx
  40bc75:	mov    DWORD PTR [rbp-0x1c],ecx
  40bc78:	mov    DWORD PTR [rbp-0x20],r8d
  40bc7c:	mov    QWORD PTR [rbp-0x28],r9
  40bc80:	mov    eax,DWORD PTR [rbp-0x20]
  40bc83:	sub    eax,0x1
  40bc86:	mov    DWORD PTR [rbp-0x44],eax
  40bc89:	mov    DWORD PTR [rbp-0x54],eax
  40bc8c:	cmp    DWORD PTR [rbp-0x54],0x0
  40bc90:	jne    40bca2 <flatcc_verify_table_field@@Base+0xf2>
  40bc96:	mov    DWORD PTR [rbp-0x4],0x3
  40bc9d:	jmp    40bec6 <flatcc_verify_table_field@@Base+0x316>
  40bca2:	jmp    40bca7 <flatcc_verify_table_field@@Base+0xf7>
  40bca7:	jmp    40bcac <flatcc_verify_table_field@@Base+0xfc>
  40bcac:	mov    edi,DWORD PTR [rbp-0x14]
  40bcaf:	mov    esi,DWORD PTR [rbp-0x18]
  40bcb2:	mov    edx,DWORD PTR [rbp-0x1c]
  40bcb5:	call   40d2e0 <flatcc_verify_union_vector_field@@Base+0x4a0>
  40bcba:	mov    DWORD PTR [rbp-0x58],eax
  40bcbd:	cmp    DWORD PTR [rbp-0x58],0x0
  40bcc1:	jne    40bcd3 <flatcc_verify_table_field@@Base+0x123>
  40bcc7:	mov    DWORD PTR [rbp-0x4],0xf
  40bcce:	jmp    40bec6 <flatcc_verify_table_field@@Base+0x316>
  40bcd3:	jmp    40bcd8 <flatcc_verify_table_field@@Base+0x128>
  40bcd8:	mov    eax,DWORD PTR [rbp-0x18]
  40bcdb:	add    eax,DWORD PTR [rbp-0x1c]
  40bcde:	mov    DWORD PTR [rbp-0x38],eax
  40bce1:	mov    eax,DWORD PTR [rbp-0x38]
  40bce4:	mov    rdi,QWORD PTR [rbp-0x10]
  40bce8:	mov    esi,DWORD PTR [rbp-0x38]
  40bceb:	mov    DWORD PTR [rbp-0x74],eax
  40bcee:	call   40b790 <flatcc_verify_string_field@@Base+0x2e0>
  40bcf3:	mov    esi,DWORD PTR [rbp-0x74]
  40bcf6:	sub    esi,eax
  40bcf8:	mov    DWORD PTR [rbp-0x2c],esi
  40bcfb:	xor    eax,eax
  40bcfd:	mov    cl,al
  40bcff:	cmp    DWORD PTR [rbp-0x2c],0x0
  40bd03:	mov    BYTE PTR [rbp-0x75],cl
  40bd06:	jl     40bd22 <flatcc_verify_table_field@@Base+0x172>
  40bd0c:	mov    eax,DWORD PTR [rbp-0x2c]
  40bd0f:	mov    ecx,eax
  40bd11:	and    rcx,0x1
  40bd15:	cmp    rcx,0x0
  40bd19:	setne  dl
  40bd1c:	xor    dl,0xff
  40bd1f:	mov    BYTE PTR [rbp-0x75],dl
  40bd22:	mov    al,BYTE PTR [rbp-0x75]
  40bd25:	and    al,0x1
  40bd27:	movzx  ecx,al
  40bd2a:	mov    DWORD PTR [rbp-0x5c],ecx
  40bd2d:	cmp    DWORD PTR [rbp-0x5c],0x0
  40bd31:	jne    40bd43 <flatcc_verify_table_field@@Base+0x193>
  40bd37:	mov    DWORD PTR [rbp-0x4],0x1d
  40bd3e:	jmp    40bec6 <flatcc_verify_table_field@@Base+0x316>
  40bd43:	jmp    40bd48 <flatcc_verify_table_field@@Base+0x198>
  40bd48:	jmp    40bd4d <flatcc_verify_table_field@@Base+0x19d>
  40bd4d:	mov    eax,DWORD PTR [rbp-0x2c]
  40bd50:	mov    ecx,eax
  40bd52:	add    rcx,0x2
  40bd56:	mov    eax,DWORD PTR [rbp-0x14]
  40bd59:	mov    edx,eax
  40bd5b:	cmp    rcx,rdx
  40bd5e:	setbe  sil
  40bd62:	and    sil,0x1
  40bd66:	movzx  eax,sil
  40bd6a:	mov    DWORD PTR [rbp-0x60],eax
  40bd6d:	cmp    DWORD PTR [rbp-0x60],0x0
  40bd71:	jne    40bd83 <flatcc_verify_table_field@@Base+0x1d3>
  40bd77:	mov    DWORD PTR [rbp-0x4],0x1b
  40bd7e:	jmp    40bec6 <flatcc_verify_table_field@@Base+0x316>
  40bd83:	jmp    40bd88 <flatcc_verify_table_field@@Base+0x1d8>
  40bd88:	mov    rdi,QWORD PTR [rbp-0x10]
  40bd8c:	mov    esi,DWORD PTR [rbp-0x2c]
  40bd8f:	call   40d440 <flatcc_verify_union_vector_field@@Base+0x600>
  40bd94:	mov    WORD PTR [rbp-0x32],ax
  40bd98:	mov    esi,DWORD PTR [rbp-0x2c]
  40bd9b:	movzx  ecx,WORD PTR [rbp-0x32]
  40bd9f:	add    esi,ecx
  40bda1:	mov    DWORD PTR [rbp-0x30],esi
  40bda4:	xor    eax,eax
  40bda6:	mov    cl,al
  40bda8:	mov    eax,DWORD PTR [rbp-0x30]
  40bdab:	cmp    eax,DWORD PTR [rbp-0x14]
  40bdae:	mov    BYTE PTR [rbp-0x76],cl
  40bdb1:	ja     40bdce <flatcc_verify_table_field@@Base+0x21e>
  40bdb7:	movzx  eax,WORD PTR [rbp-0x32]
  40bdbb:	mov    ecx,eax
  40bdbd:	and    rcx,0x1
  40bdc1:	cmp    rcx,0x0
  40bdc5:	setne  dl
  40bdc8:	xor    dl,0xff
  40bdcb:	mov    BYTE PTR [rbp-0x76],dl
  40bdce:	mov    al,BYTE PTR [rbp-0x76]
  40bdd1:	and    al,0x1
  40bdd3:	movzx  ecx,al
  40bdd6:	mov    DWORD PTR [rbp-0x64],ecx
  40bdd9:	cmp    DWORD PTR [rbp-0x64],0x0
  40bddd:	jne    40bdef <flatcc_verify_table_field@@Base+0x23f>
  40bde3:	mov    DWORD PTR [rbp-0x4],0x1e
  40bdea:	jmp    40bec6 <flatcc_verify_table_field@@Base+0x316>
  40bdef:	jmp    40bdf4 <flatcc_verify_table_field@@Base+0x244>
  40bdf4:	jmp    40bdf9 <flatcc_verify_table_field@@Base+0x249>
  40bdf9:	mov    DWORD PTR [rbp-0x68],0x1
  40be00:	cmp    DWORD PTR [rbp-0x68],0x0
  40be04:	jne    40be16 <flatcc_verify_table_field@@Base+0x266>
  40be0a:	mov    DWORD PTR [rbp-0x4],0x1f
  40be11:	jmp    40bec6 <flatcc_verify_table_field@@Base+0x316>
  40be16:	jmp    40be1b <flatcc_verify_table_field@@Base+0x26b>
  40be1b:	jmp    40be20 <flatcc_verify_table_field@@Base+0x270>
  40be20:	movzx  eax,WORD PTR [rbp-0x32]
  40be24:	mov    ecx,eax
  40be26:	cmp    rcx,0x4
  40be2a:	setae  dl
  40be2d:	and    dl,0x1
  40be30:	movzx  eax,dl
  40be33:	mov    DWORD PTR [rbp-0x6c],eax
  40be36:	cmp    DWORD PTR [rbp-0x6c],0x0
  40be3a:	jne    40be4c <flatcc_verify_table_field@@Base+0x29c>
  40be40:	mov    DWORD PTR [rbp-0x4],0x1c
  40be47:	jmp    40bec6 <flatcc_verify_table_field@@Base+0x316>
  40be4c:	jmp    40be51 <flatcc_verify_table_field@@Base+0x2a1>
  40be51:	mov    rdi,QWORD PTR [rbp-0x10]
  40be55:	mov    eax,DWORD PTR [rbp-0x2c]
  40be58:	mov    ecx,eax
  40be5a:	add    rcx,0x2
  40be5e:	mov    eax,ecx
  40be60:	mov    esi,eax
  40be62:	call   40d440 <flatcc_verify_union_vector_field@@Base+0x600>
  40be67:	mov    WORD PTR [rbp-0x34],ax
  40be6b:	mov    eax,DWORD PTR [rbp-0x14]
  40be6e:	sub    eax,DWORD PTR [rbp-0x38]
  40be71:	movzx  ecx,WORD PTR [rbp-0x34]
  40be75:	cmp    eax,ecx
  40be77:	setae  dl
  40be7a:	and    dl,0x1
  40be7d:	movzx  eax,dl
  40be80:	mov    DWORD PTR [rbp-0x70],eax
  40be83:	cmp    DWORD PTR [rbp-0x70],0x0
  40be87:	jne    40be99 <flatcc_verify_table_field@@Base+0x2e9>
  40be8d:	mov    DWORD PTR [rbp-0x4],0x14
  40be94:	jmp    40bec6 <flatcc_verify_table_field@@Base+0x316>
  40be99:	jmp    40be9e <flatcc_verify_table_field@@Base+0x2ee>
  40be9e:	mov    rax,QWORD PTR [rbp-0x10]
  40bea2:	mov    ecx,DWORD PTR [rbp-0x2c]
  40bea5:	mov    edx,ecx
  40bea7:	add    rax,rdx
  40beaa:	mov    QWORD PTR [rbp-0x40],rax
  40beae:	mov    rax,QWORD PTR [rbp-0x10]
  40beb2:	mov    QWORD PTR [rbp-0x50],rax
  40beb6:	mov    ecx,DWORD PTR [rbp-0x14]
  40beb9:	mov    DWORD PTR [rbp-0x48],ecx
  40bebc:	lea    rdi,[rbp-0x50]
  40bec0:	call   QWORD PTR [rbp-0x28]
  40bec3:	mov    DWORD PTR [rbp-0x4],eax
  40bec6:	mov    eax,DWORD PTR [rbp-0x4]
  40bec9:	add    rsp,0x80
  40bed0:	pop    rbp
  40bed1:	ret    
  40bed2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40bedc:	nop    DWORD PTR [rax+0x0]

000000000040bee0 <flatcc_verify_table_vector_field@@Base>:
  40bee0:	push   rbp
  40bee1:	mov    rbp,rsp
  40bee4:	sub    rsp,0x40
  40bee8:	mov    ax,si
  40beeb:	mov    QWORD PTR [rbp-0x10],rdi
  40beef:	mov    WORD PTR [rbp-0x12],ax
  40bef3:	mov    DWORD PTR [rbp-0x18],edx
  40bef6:	mov    QWORD PTR [rbp-0x20],rcx
  40befa:	mov    rdi,QWORD PTR [rbp-0x10]
  40befe:	mov    ax,WORD PTR [rbp-0x12]
  40bf02:	mov    edx,DWORD PTR [rbp-0x18]
  40bf05:	movzx  esi,ax
  40bf08:	lea    rcx,[rbp-0x24]
  40bf0c:	call   40b550 <flatcc_verify_string_field@@Base+0xa0>
  40bf11:	mov    DWORD PTR [rbp-0x28],eax
  40bf14:	cmp    DWORD PTR [rbp-0x28],0x0
  40bf18:	jne    40bf28 <flatcc_verify_table_vector_field@@Base+0x48>
  40bf1e:	cmp    DWORD PTR [rbp-0x24],0x0
  40bf22:	jne    40bf33 <flatcc_verify_table_vector_field@@Base+0x53>
  40bf28:	mov    eax,DWORD PTR [rbp-0x28]
  40bf2b:	mov    DWORD PTR [rbp-0x4],eax
  40bf2e:	jmp    40bf87 <flatcc_verify_table_vector_field@@Base+0xa7>
  40bf33:	jmp    40bf38 <flatcc_verify_table_vector_field@@Base+0x58>
  40bf38:	mov    rax,QWORD PTR [rbp-0x10]
  40bf3c:	mov    rdi,QWORD PTR [rax]
  40bf3f:	mov    rax,QWORD PTR [rbp-0x10]
  40bf43:	mov    esi,DWORD PTR [rax+0x8]
  40bf46:	mov    edx,DWORD PTR [rbp-0x24]
  40bf49:	mov    rax,QWORD PTR [rbp-0x10]
  40bf4d:	mov    rax,QWORD PTR [rax]
  40bf50:	mov    ecx,DWORD PTR [rbp-0x24]
  40bf53:	mov    QWORD PTR [rbp-0x30],rdi
  40bf57:	mov    rdi,rax
  40bf5a:	mov    DWORD PTR [rbp-0x34],esi
  40bf5d:	mov    esi,ecx
  40bf5f:	mov    DWORD PTR [rbp-0x38],edx
  40bf62:	call   40b790 <flatcc_verify_string_field@@Base+0x2e0>
  40bf67:	mov    rdi,QWORD PTR [rbp-0x10]
  40bf6b:	mov    r8d,DWORD PTR [rdi+0xc]
  40bf6f:	mov    r9,QWORD PTR [rbp-0x20]
  40bf73:	mov    rdi,QWORD PTR [rbp-0x30]
  40bf77:	mov    esi,DWORD PTR [rbp-0x34]
  40bf7a:	mov    edx,DWORD PTR [rbp-0x38]
  40bf7d:	mov    ecx,eax
  40bf7f:	call   40bf90 <flatcc_verify_table_vector_field@@Base+0xb0>
  40bf84:	mov    DWORD PTR [rbp-0x4],eax
  40bf87:	mov    eax,DWORD PTR [rbp-0x4]
  40bf8a:	add    rsp,0x40
  40bf8e:	pop    rbp
  40bf8f:	ret    
  40bf90:	push   rbp
  40bf91:	mov    rbp,rsp
  40bf94:	sub    rsp,0x60
  40bf98:	mov    QWORD PTR [rbp-0x10],rdi
  40bf9c:	mov    DWORD PTR [rbp-0x14],esi
  40bf9f:	mov    DWORD PTR [rbp-0x18],edx
  40bfa2:	mov    DWORD PTR [rbp-0x1c],ecx
  40bfa5:	mov    DWORD PTR [rbp-0x20],r8d
  40bfa9:	mov    QWORD PTR [rbp-0x28],r9
  40bfad:	mov    eax,DWORD PTR [rbp-0x20]
  40bfb0:	mov    ecx,eax
  40bfb2:	add    ecx,0xffffffff
  40bfb5:	mov    DWORD PTR [rbp-0x20],ecx
  40bfb8:	cmp    eax,0x0
  40bfbb:	setg   dl
  40bfbe:	and    dl,0x1
  40bfc1:	movzx  eax,dl
  40bfc4:	mov    DWORD PTR [rbp-0x34],eax
  40bfc7:	cmp    DWORD PTR [rbp-0x34],0x0
  40bfcb:	jne    40bfdd <flatcc_verify_table_vector_field@@Base+0xfd>
  40bfd1:	mov    DWORD PTR [rbp-0x4],0x3
  40bfd8:	jmp    40c129 <flatcc_verify_table_vector_field@@Base+0x249>
  40bfdd:	jmp    40bfe2 <flatcc_verify_table_vector_field@@Base+0x102>
  40bfe2:	mov    rdi,QWORD PTR [rbp-0x10]
  40bfe6:	mov    esi,DWORD PTR [rbp-0x14]
  40bfe9:	mov    edx,DWORD PTR [rbp-0x18]
  40bfec:	mov    ecx,DWORD PTR [rbp-0x1c]
  40bfef:	mov    eax,0x4
  40bff4:	mov    r8d,eax
  40bff7:	mov    r9d,eax
  40bffa:	mov    DWORD PTR [rsp],0x3fffffff
  40c001:	call   40b8b0 <flatcc_verify_vector_field@@Base+0xf0>
  40c006:	cmp    eax,0x0
  40c009:	je     40c03b <flatcc_verify_table_vector_field@@Base+0x15b>
  40c00f:	mov    rdi,QWORD PTR [rbp-0x10]
  40c013:	mov    esi,DWORD PTR [rbp-0x14]
  40c016:	mov    edx,DWORD PTR [rbp-0x18]
  40c019:	mov    ecx,DWORD PTR [rbp-0x1c]
  40c01c:	mov    eax,0x4
  40c021:	mov    r8d,eax
  40c024:	mov    r9d,eax
  40c027:	mov    DWORD PTR [rsp],0x3fffffff
  40c02e:	call   40b8b0 <flatcc_verify_vector_field@@Base+0xf0>
  40c033:	mov    DWORD PTR [rbp-0x4],eax
  40c036:	jmp    40c129 <flatcc_verify_table_vector_field@@Base+0x249>
  40c03b:	mov    eax,DWORD PTR [rbp-0x1c]
  40c03e:	add    eax,DWORD PTR [rbp-0x18]
  40c041:	mov    DWORD PTR [rbp-0x18],eax
  40c044:	mov    rdi,QWORD PTR [rbp-0x10]
  40c048:	mov    esi,DWORD PTR [rbp-0x18]
  40c04b:	call   40b790 <flatcc_verify_string_field@@Base+0x2e0>
  40c050:	mov    DWORD PTR [rbp-0x30],eax
  40c053:	mov    eax,DWORD PTR [rbp-0x18]
  40c056:	mov    edi,eax
  40c058:	add    rdi,0x4
  40c05c:	mov    eax,edi
  40c05e:	mov    DWORD PTR [rbp-0x18],eax
  40c061:	mov    DWORD PTR [rbp-0x2c],0x0
  40c068:	mov    eax,DWORD PTR [rbp-0x2c]
  40c06b:	cmp    eax,DWORD PTR [rbp-0x30]
  40c06e:	jae    40c122 <flatcc_verify_table_vector_field@@Base+0x242>
  40c074:	mov    rdi,QWORD PTR [rbp-0x10]
  40c078:	mov    esi,DWORD PTR [rbp-0x14]
  40c07b:	mov    edx,DWORD PTR [rbp-0x18]
  40c07e:	mov    rax,QWORD PTR [rbp-0x10]
  40c082:	mov    ecx,DWORD PTR [rbp-0x18]
  40c085:	mov    QWORD PTR [rbp-0x40],rdi
  40c089:	mov    rdi,rax
  40c08c:	mov    DWORD PTR [rbp-0x44],esi
  40c08f:	mov    esi,ecx
  40c091:	mov    DWORD PTR [rbp-0x48],edx
  40c094:	call   40b790 <flatcc_verify_string_field@@Base+0x2e0>
  40c099:	mov    r8d,DWORD PTR [rbp-0x20]
  40c09d:	mov    r9,QWORD PTR [rbp-0x28]
  40c0a1:	mov    rdi,QWORD PTR [rbp-0x40]
  40c0a5:	mov    esi,DWORD PTR [rbp-0x44]
  40c0a8:	mov    edx,DWORD PTR [rbp-0x48]
  40c0ab:	mov    ecx,eax
  40c0ad:	call   40bc60 <flatcc_verify_table_field@@Base+0xb0>
  40c0b2:	cmp    eax,0x0
  40c0b5:	je     40c101 <flatcc_verify_table_vector_field@@Base+0x221>
  40c0bb:	mov    rdi,QWORD PTR [rbp-0x10]
  40c0bf:	mov    esi,DWORD PTR [rbp-0x14]
  40c0c2:	mov    edx,DWORD PTR [rbp-0x18]
  40c0c5:	mov    rax,QWORD PTR [rbp-0x10]
  40c0c9:	mov    ecx,DWORD PTR [rbp-0x18]
  40c0cc:	mov    QWORD PTR [rbp-0x50],rdi
  40c0d0:	mov    rdi,rax
  40c0d3:	mov    DWORD PTR [rbp-0x54],esi
  40c0d6:	mov    esi,ecx
  40c0d8:	mov    DWORD PTR [rbp-0x58],edx
  40c0db:	call   40b790 <flatcc_verify_string_field@@Base+0x2e0>
  40c0e0:	mov    r8d,DWORD PTR [rbp-0x20]
  40c0e4:	mov    r9,QWORD PTR [rbp-0x28]
  40c0e8:	mov    rdi,QWORD PTR [rbp-0x50]
  40c0ec:	mov    esi,DWORD PTR [rbp-0x54]
  40c0ef:	mov    edx,DWORD PTR [rbp-0x58]
  40c0f2:	mov    ecx,eax
  40c0f4:	call   40bc60 <flatcc_verify_table_field@@Base+0xb0>
  40c0f9:	mov    DWORD PTR [rbp-0x4],eax
  40c0fc:	jmp    40c129 <flatcc_verify_table_vector_field@@Base+0x249>
  40c101:	jmp    40c106 <flatcc_verify_table_vector_field@@Base+0x226>
  40c106:	mov    eax,DWORD PTR [rbp-0x2c]
  40c109:	add    eax,0x1
  40c10c:	mov    DWORD PTR [rbp-0x2c],eax
  40c10f:	mov    eax,DWORD PTR [rbp-0x18]
  40c112:	mov    ecx,eax
  40c114:	add    rcx,0x4
  40c118:	mov    eax,ecx
  40c11a:	mov    DWORD PTR [rbp-0x18],eax
  40c11d:	jmp    40c068 <flatcc_verify_table_vector_field@@Base+0x188>
  40c122:	mov    DWORD PTR [rbp-0x4],0x0
  40c129:	mov    eax,DWORD PTR [rbp-0x4]
  40c12c:	add    rsp,0x60
  40c130:	pop    rbp
  40c131:	ret    
  40c132:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40c13c:	nop    DWORD PTR [rax+0x0]

000000000040c140 <flatcc_verify_union_table@@Base>:
  40c140:	push   rbp
  40c141:	mov    rbp,rsp
  40c144:	sub    rsp,0x10
  40c148:	mov    QWORD PTR [rbp-0x8],rdi
  40c14c:	mov    QWORD PTR [rbp-0x10],rsi
  40c150:	mov    rsi,QWORD PTR [rbp-0x8]
  40c154:	mov    rdi,QWORD PTR [rsi]
  40c157:	mov    rsi,QWORD PTR [rbp-0x8]
  40c15b:	mov    esi,DWORD PTR [rsi+0x8]
  40c15e:	mov    rax,QWORD PTR [rbp-0x8]
  40c162:	mov    edx,DWORD PTR [rax+0x14]
  40c165:	mov    rax,QWORD PTR [rbp-0x8]
  40c169:	mov    ecx,DWORD PTR [rax+0x18]
  40c16c:	mov    rax,QWORD PTR [rbp-0x8]
  40c170:	mov    r8d,DWORD PTR [rax+0xc]
  40c174:	mov    r9,QWORD PTR [rbp-0x10]
  40c178:	call   40bc60 <flatcc_verify_table_field@@Base+0xb0>
  40c17d:	add    rsp,0x10
  40c181:	pop    rbp
  40c182:	ret    
  40c183:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40c18d:	nop    DWORD PTR [rax]

000000000040c190 <flatcc_verify_union_struct@@Base>:
  40c190:	push   rbp
  40c191:	mov    rbp,rsp
  40c194:	sub    rsp,0x20
  40c198:	mov    ax,dx
  40c19b:	mov    QWORD PTR [rbp-0x8],rdi
  40c19f:	mov    QWORD PTR [rbp-0x10],rsi
  40c1a3:	mov    WORD PTR [rbp-0x12],ax
  40c1a7:	mov    rsi,QWORD PTR [rbp-0x8]
  40c1ab:	mov    edi,DWORD PTR [rsi+0x8]
  40c1ae:	mov    rsi,QWORD PTR [rbp-0x8]
  40c1b2:	mov    esi,DWORD PTR [rsi+0x14]
  40c1b5:	mov    rcx,QWORD PTR [rbp-0x8]
  40c1b9:	mov    edx,DWORD PTR [rcx+0x18]
  40c1bc:	mov    rcx,QWORD PTR [rbp-0x10]
  40c1c0:	mov    r8d,ecx
  40c1c3:	mov    ecx,r8d
  40c1c6:	movzx  r8d,WORD PTR [rbp-0x12]
  40c1cb:	call   40c1e0 <flatcc_verify_union_struct@@Base+0x50>
  40c1d0:	add    rsp,0x20
  40c1d4:	pop    rbp
  40c1d5:	ret    
  40c1d6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40c1e0:	push   rbp
  40c1e1:	mov    rbp,rsp
  40c1e4:	mov    ax,r8w
  40c1e8:	mov    DWORD PTR [rbp-0x8],edi
  40c1eb:	mov    DWORD PTR [rbp-0xc],esi
  40c1ee:	mov    DWORD PTR [rbp-0x10],edx
  40c1f1:	mov    DWORD PTR [rbp-0x14],ecx
  40c1f4:	mov    WORD PTR [rbp-0x16],ax
  40c1f8:	cmp    DWORD PTR [rbp-0x10],0x0
  40c1fc:	je     40c211 <flatcc_verify_union_struct@@Base+0x81>
  40c202:	mov    eax,DWORD PTR [rbp-0xc]
  40c205:	add    eax,DWORD PTR [rbp-0x10]
  40c208:	cmp    eax,DWORD PTR [rbp-0x8]
  40c20b:	jbe    40c21d <flatcc_verify_union_struct@@Base+0x8d>
  40c211:	mov    DWORD PTR [rbp-0x4],0x12
  40c218:	jmp    40c2d0 <flatcc_verify_union_struct@@Base+0x140>
  40c21d:	mov    eax,DWORD PTR [rbp-0x10]
  40c220:	add    eax,DWORD PTR [rbp-0xc]
  40c223:	mov    DWORD PTR [rbp-0xc],eax
  40c226:	mov    eax,DWORD PTR [rbp-0xc]
  40c229:	add    eax,DWORD PTR [rbp-0x14]
  40c22c:	cmp    eax,DWORD PTR [rbp-0xc]
  40c22f:	setae  cl
  40c232:	and    cl,0x1
  40c235:	movzx  eax,cl
  40c238:	mov    DWORD PTR [rbp-0x1c],eax
  40c23b:	cmp    DWORD PTR [rbp-0x1c],0x0
  40c23f:	jne    40c251 <flatcc_verify_union_struct@@Base+0xc1>
  40c245:	mov    DWORD PTR [rbp-0x4],0xa
  40c24c:	jmp    40c2d0 <flatcc_verify_union_struct@@Base+0x140>
  40c251:	jmp    40c256 <flatcc_verify_union_struct@@Base+0xc6>
  40c256:	jmp    40c25b <flatcc_verify_union_struct@@Base+0xcb>
  40c25b:	mov    eax,DWORD PTR [rbp-0xc]
  40c25e:	add    eax,DWORD PTR [rbp-0x14]
  40c261:	cmp    eax,DWORD PTR [rbp-0x8]
  40c264:	setbe  cl
  40c267:	and    cl,0x1
  40c26a:	movzx  eax,cl
  40c26d:	mov    DWORD PTR [rbp-0x20],eax
  40c270:	cmp    DWORD PTR [rbp-0x20],0x0
  40c274:	jne    40c286 <flatcc_verify_union_struct@@Base+0xf6>
  40c27a:	mov    DWORD PTR [rbp-0x4],0x9
  40c281:	jmp    40c2d0 <flatcc_verify_union_struct@@Base+0x140>
  40c286:	jmp    40c28b <flatcc_verify_union_struct@@Base+0xfb>
  40c28b:	jmp    40c290 <flatcc_verify_union_struct@@Base+0x100>
  40c290:	mov    eax,DWORD PTR [rbp-0xc]
  40c293:	movzx  ecx,WORD PTR [rbp-0x16]
  40c297:	sub    ecx,0x1
  40c29a:	and    eax,ecx
  40c29c:	cmp    eax,0x0
  40c29f:	setne  dl
  40c2a2:	xor    dl,0xff
  40c2a5:	and    dl,0x1
  40c2a8:	movzx  eax,dl
  40c2ab:	mov    DWORD PTR [rbp-0x24],eax
  40c2ae:	cmp    DWORD PTR [rbp-0x24],0x0
  40c2b2:	jne    40c2c4 <flatcc_verify_union_struct@@Base+0x134>
  40c2b8:	mov    DWORD PTR [rbp-0x4],0xb
  40c2bf:	jmp    40c2d0 <flatcc_verify_union_struct@@Base+0x140>
  40c2c4:	jmp    40c2c9 <flatcc_verify_union_struct@@Base+0x139>
  40c2c9:	mov    DWORD PTR [rbp-0x4],0x0
  40c2d0:	mov    eax,DWORD PTR [rbp-0x4]
  40c2d3:	pop    rbp
  40c2d4:	ret    
  40c2d5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40c2df:	nop

000000000040c2e0 <flatcc_verify_union_string@@Base>:
  40c2e0:	push   rbp
  40c2e1:	mov    rbp,rsp
  40c2e4:	sub    rsp,0x10
  40c2e8:	mov    QWORD PTR [rbp-0x8],rdi
  40c2ec:	mov    rdi,QWORD PTR [rbp-0x8]
  40c2f0:	mov    rdi,QWORD PTR [rdi]
  40c2f3:	mov    rax,QWORD PTR [rbp-0x8]
  40c2f7:	mov    esi,DWORD PTR [rax+0x8]
  40c2fa:	mov    rax,QWORD PTR [rbp-0x8]
  40c2fe:	mov    edx,DWORD PTR [rax+0x14]
  40c301:	mov    rax,QWORD PTR [rbp-0x8]
  40c305:	mov    ecx,DWORD PTR [rax+0x18]
  40c308:	call   40b690 <flatcc_verify_string_field@@Base+0x1e0>
  40c30d:	add    rsp,0x10
  40c311:	pop    rbp
  40c312:	ret    
  40c313:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40c31d:	nop    DWORD PTR [rax]

000000000040c320 <flatcc_verify_buffer_header@@Base>:
  40c320:	push   rbp
  40c321:	mov    rbp,rsp
  40c324:	sub    rsp,0x40
  40c328:	mov    QWORD PTR [rbp-0x10],rdi
  40c32c:	mov    QWORD PTR [rbp-0x18],rsi
  40c330:	mov    QWORD PTR [rbp-0x20],rdx
  40c334:	mov    rax,QWORD PTR [rbp-0x10]
  40c338:	and    rax,0x3
  40c33c:	cmp    rax,0x0
  40c340:	setne  cl
  40c343:	xor    cl,0xff
  40c346:	and    cl,0x1
  40c349:	movzx  edx,cl
  40c34c:	mov    DWORD PTR [rbp-0x2c],edx
  40c34f:	cmp    DWORD PTR [rbp-0x2c],0x0
  40c353:	jne    40c365 <flatcc_verify_buffer_header@@Base+0x45>
  40c359:	mov    DWORD PTR [rbp-0x4],0x5
  40c360:	jmp    40c446 <flatcc_verify_buffer_header@@Base+0x126>
  40c365:	jmp    40c36a <flatcc_verify_buffer_header@@Base+0x4a>
  40c36a:	jmp    40c36f <flatcc_verify_buffer_header@@Base+0x4f>
  40c36f:	mov    eax,0xfffffff7
  40c374:	mov    ecx,eax
  40c376:	cmp    QWORD PTR [rbp-0x18],rcx
  40c37a:	setbe  dl
  40c37d:	and    dl,0x1
  40c380:	movzx  eax,dl
  40c383:	mov    DWORD PTR [rbp-0x30],eax
  40c386:	cmp    DWORD PTR [rbp-0x30],0x0
  40c38a:	jne    40c39c <flatcc_verify_buffer_header@@Base+0x7c>
  40c390:	mov    DWORD PTR [rbp-0x4],0x6
  40c397:	jmp    40c446 <flatcc_verify_buffer_header@@Base+0x126>
  40c39c:	jmp    40c3a1 <flatcc_verify_buffer_header@@Base+0x81>
  40c3a1:	jmp    40c3a6 <flatcc_verify_buffer_header@@Base+0x86>
  40c3a6:	cmp    QWORD PTR [rbp-0x18],0x8
  40c3ab:	setae  al
  40c3ae:	and    al,0x1
  40c3b0:	movzx  ecx,al
  40c3b3:	mov    DWORD PTR [rbp-0x34],ecx
  40c3b6:	cmp    DWORD PTR [rbp-0x34],0x0
  40c3ba:	jne    40c3cc <flatcc_verify_buffer_header@@Base+0xac>
  40c3c0:	mov    DWORD PTR [rbp-0x4],0x1
  40c3c7:	jmp    40c446 <flatcc_verify_buffer_header@@Base+0x126>
  40c3cc:	jmp    40c3d1 <flatcc_verify_buffer_header@@Base+0xb1>
  40c3d1:	cmp    QWORD PTR [rbp-0x20],0x0
  40c3d6:	je     40c43f <flatcc_verify_buffer_header@@Base+0x11f>
  40c3dc:	mov    rdi,QWORD PTR [rbp-0x20]
  40c3e0:	call   40c450 <flatcc_verify_buffer_header@@Base+0x130>
  40c3e5:	mov    DWORD PTR [rbp-0x28],eax
  40c3e8:	mov    rdi,QWORD PTR [rbp-0x10]
  40c3ec:	mov    esi,0x4
  40c3f1:	call   40c490 <flatcc_verify_buffer_header@@Base+0x170>
  40c3f6:	mov    DWORD PTR [rbp-0x24],eax
  40c3f9:	cmp    DWORD PTR [rbp-0x28],0x0
  40c3fd:	mov    al,0x1
  40c3ff:	mov    BYTE PTR [rbp-0x39],al
  40c402:	je     40c414 <flatcc_verify_buffer_header@@Base+0xf4>
  40c408:	mov    eax,DWORD PTR [rbp-0x24]
  40c40b:	cmp    eax,DWORD PTR [rbp-0x28]
  40c40e:	sete   cl
  40c411:	mov    BYTE PTR [rbp-0x39],cl
  40c414:	mov    al,BYTE PTR [rbp-0x39]
  40c417:	and    al,0x1
  40c419:	movzx  ecx,al
  40c41c:	mov    DWORD PTR [rbp-0x38],ecx
  40c41f:	cmp    DWORD PTR [rbp-0x38],0x0
  40c423:	jne    40c435 <flatcc_verify_buffer_header@@Base+0x115>
  40c429:	mov    DWORD PTR [rbp-0x4],0x2
  40c430:	jmp    40c446 <flatcc_verify_buffer_header@@Base+0x126>
  40c435:	jmp    40c43a <flatcc_verify_buffer_header@@Base+0x11a>
  40c43a:	jmp    40c43f <flatcc_verify_buffer_header@@Base+0x11f>
  40c43f:	mov    DWORD PTR [rbp-0x4],0x0
  40c446:	mov    eax,DWORD PTR [rbp-0x4]
  40c449:	add    rsp,0x40
  40c44d:	pop    rbp
  40c44e:	ret    
  40c44f:	nop
  40c450:	push   rbp
  40c451:	mov    rbp,rsp
  40c454:	sub    rsp,0x20
  40c458:	mov    eax,0x4
  40c45d:	mov    edx,eax
  40c45f:	mov    QWORD PTR [rbp-0x8],rdi
  40c463:	mov    DWORD PTR [rbp-0xc],0x0
  40c46a:	lea    rdi,[rbp-0xc]
  40c46e:	mov    rsi,QWORD PTR [rbp-0x8]
  40c472:	call   403040 <strncpy@plt>
  40c477:	mov    edi,DWORD PTR [rbp-0xc]
  40c47a:	mov    QWORD PTR [rbp-0x18],rax
  40c47e:	call   40d4c0 <flatcc_verify_union_vector_field@@Base+0x680>
  40c483:	add    rsp,0x20
  40c487:	pop    rbp
  40c488:	ret    
  40c489:	nop    DWORD PTR [rax+0x0]
  40c490:	push   rbp
  40c491:	mov    rbp,rsp
  40c494:	sub    rsp,0x10
  40c498:	mov    QWORD PTR [rbp-0x8],rdi
  40c49c:	mov    DWORD PTR [rbp-0xc],esi
  40c49f:	mov    rdi,QWORD PTR [rbp-0x8]
  40c4a3:	mov    esi,DWORD PTR [rbp-0xc]
  40c4a6:	mov    eax,esi
  40c4a8:	add    rdi,rax
  40c4ab:	call   40d4d0 <flatcc_verify_union_vector_field@@Base+0x690>
  40c4b0:	add    rsp,0x10
  40c4b4:	pop    rbp
  40c4b5:	ret    
  40c4b6:	nop    WORD PTR cs:[rax+rax*1+0x0]

000000000040c4c0 <flatcc_verify_typed_buffer_header@@Base>:
  40c4c0:	push   rbp
  40c4c1:	mov    rbp,rsp
  40c4c4:	sub    rsp,0x40
  40c4c8:	mov    QWORD PTR [rbp-0x10],rdi
  40c4cc:	mov    QWORD PTR [rbp-0x18],rsi
  40c4d0:	mov    DWORD PTR [rbp-0x1c],edx
  40c4d3:	mov    rax,QWORD PTR [rbp-0x10]
  40c4d7:	and    rax,0x3
  40c4db:	cmp    rax,0x0
  40c4df:	setne  cl
  40c4e2:	xor    cl,0xff
  40c4e5:	and    cl,0x1
  40c4e8:	movzx  edx,cl
  40c4eb:	mov    DWORD PTR [rbp-0x28],edx
  40c4ee:	cmp    DWORD PTR [rbp-0x28],0x0
  40c4f2:	jne    40c504 <flatcc_verify_typed_buffer_header@@Base+0x44>
  40c4f8:	mov    DWORD PTR [rbp-0x4],0x5
  40c4ff:	jmp    40c5de <flatcc_verify_typed_buffer_header@@Base+0x11e>
  40c504:	jmp    40c509 <flatcc_verify_typed_buffer_header@@Base+0x49>
  40c509:	jmp    40c50e <flatcc_verify_typed_buffer_header@@Base+0x4e>
  40c50e:	mov    eax,0xfffffff7
  40c513:	mov    ecx,eax
  40c515:	cmp    QWORD PTR [rbp-0x18],rcx
  40c519:	setbe  dl
  40c51c:	and    dl,0x1
  40c51f:	movzx  eax,dl
  40c522:	mov    DWORD PTR [rbp-0x2c],eax
  40c525:	cmp    DWORD PTR [rbp-0x2c],0x0
  40c529:	jne    40c53b <flatcc_verify_typed_buffer_header@@Base+0x7b>
  40c52f:	mov    DWORD PTR [rbp-0x4],0x6
  40c536:	jmp    40c5de <flatcc_verify_typed_buffer_header@@Base+0x11e>
  40c53b:	jmp    40c540 <flatcc_verify_typed_buffer_header@@Base+0x80>
  40c540:	jmp    40c545 <flatcc_verify_typed_buffer_header@@Base+0x85>
  40c545:	cmp    QWORD PTR [rbp-0x18],0x8
  40c54a:	setae  al
  40c54d:	and    al,0x1
  40c54f:	movzx  ecx,al
  40c552:	mov    DWORD PTR [rbp-0x30],ecx
  40c555:	cmp    DWORD PTR [rbp-0x30],0x0
  40c559:	jne    40c56b <flatcc_verify_typed_buffer_header@@Base+0xab>
  40c55f:	mov    DWORD PTR [rbp-0x4],0x1
  40c566:	jmp    40c5de <flatcc_verify_typed_buffer_header@@Base+0x11e>
  40c56b:	jmp    40c570 <flatcc_verify_typed_buffer_header@@Base+0xb0>
  40c570:	cmp    DWORD PTR [rbp-0x1c],0x0
  40c574:	je     40c5d7 <flatcc_verify_typed_buffer_header@@Base+0x117>
  40c57a:	mov    eax,DWORD PTR [rbp-0x1c]
  40c57d:	mov    DWORD PTR [rbp-0x24],eax
  40c580:	mov    rdi,QWORD PTR [rbp-0x10]
  40c584:	mov    esi,0x4
  40c589:	call   40c490 <flatcc_verify_buffer_header@@Base+0x170>
  40c58e:	mov    DWORD PTR [rbp-0x20],eax
  40c591:	cmp    DWORD PTR [rbp-0x24],0x0
  40c595:	mov    al,0x1
  40c597:	mov    BYTE PTR [rbp-0x35],al
  40c59a:	je     40c5ac <flatcc_verify_typed_buffer_header@@Base+0xec>
  40c5a0:	mov    eax,DWORD PTR [rbp-0x20]
  40c5a3:	cmp    eax,DWORD PTR [rbp-0x24]
  40c5a6:	sete   cl
  40c5a9:	mov    BYTE PTR [rbp-0x35],cl
  40c5ac:	mov    al,BYTE PTR [rbp-0x35]
  40c5af:	and    al,0x1
  40c5b1:	movzx  ecx,al
  40c5b4:	mov    DWORD PTR [rbp-0x34],ecx
  40c5b7:	cmp    DWORD PTR [rbp-0x34],0x0
  40c5bb:	jne    40c5cd <flatcc_verify_typed_buffer_header@@Base+0x10d>
  40c5c1:	mov    DWORD PTR [rbp-0x4],0x2
  40c5c8:	jmp    40c5de <flatcc_verify_typed_buffer_header@@Base+0x11e>
  40c5cd:	jmp    40c5d2 <flatcc_verify_typed_buffer_header@@Base+0x112>
  40c5d2:	jmp    40c5d7 <flatcc_verify_typed_buffer_header@@Base+0x117>
  40c5d7:	mov    DWORD PTR [rbp-0x4],0x0
  40c5de:	mov    eax,DWORD PTR [rbp-0x4]
  40c5e1:	add    rsp,0x40
  40c5e5:	pop    rbp
  40c5e6:	ret    
  40c5e7:	nop    WORD PTR [rax+rax*1+0x0]

000000000040c5f0 <flatcc_verify_struct_as_root@@Base>:
  40c5f0:	push   rbp
  40c5f1:	mov    rbp,rsp
  40c5f4:	sub    rsp,0x30
  40c5f8:	mov    ax,r8w
  40c5fc:	mov    QWORD PTR [rbp-0x10],rdi
  40c600:	mov    QWORD PTR [rbp-0x18],rsi
  40c604:	mov    QWORD PTR [rbp-0x20],rdx
  40c608:	mov    QWORD PTR [rbp-0x28],rcx
  40c60c:	mov    WORD PTR [rbp-0x2a],ax
  40c610:	mov    rdi,QWORD PTR [rbp-0x10]
  40c614:	mov    rsi,QWORD PTR [rbp-0x18]
  40c618:	mov    rdx,QWORD PTR [rbp-0x20]
  40c61c:	call   40c320 <flatcc_verify_buffer_header@@Base>
  40c621:	cmp    eax,0x0
  40c624:	je     40c643 <flatcc_verify_struct_as_root@@Base+0x53>
  40c62a:	mov    rdi,QWORD PTR [rbp-0x10]
  40c62e:	mov    rsi,QWORD PTR [rbp-0x18]
  40c632:	mov    rdx,QWORD PTR [rbp-0x20]
  40c636:	call   40c320 <flatcc_verify_buffer_header@@Base>
  40c63b:	mov    DWORD PTR [rbp-0x4],eax
  40c63e:	jmp    40c671 <flatcc_verify_struct_as_root@@Base+0x81>
  40c643:	xor    esi,esi
  40c645:	mov    rax,QWORD PTR [rbp-0x18]
  40c649:	mov    ecx,eax
  40c64b:	mov    rdi,QWORD PTR [rbp-0x10]
  40c64f:	mov    DWORD PTR [rbp-0x30],ecx
  40c652:	call   40b790 <flatcc_verify_string_field@@Base+0x2e0>
  40c657:	xor    esi,esi
  40c659:	mov    rdi,QWORD PTR [rbp-0x28]
  40c65d:	mov    ecx,edi
  40c65f:	mov    edi,DWORD PTR [rbp-0x30]
  40c662:	mov    edx,eax
  40c664:	movzx  r8d,WORD PTR [rbp-0x2a]
  40c669:	call   40c1e0 <flatcc_verify_union_struct@@Base+0x50>
  40c66e:	mov    DWORD PTR [rbp-0x4],eax
  40c671:	mov    eax,DWORD PTR [rbp-0x4]
  40c674:	add    rsp,0x30
  40c678:	pop    rbp
  40c679:	ret    
  40c67a:	nop    WORD PTR [rax+rax*1+0x0]

000000000040c680 <flatcc_verify_struct_as_typed_root@@Base>:
  40c680:	push   rbp
  40c681:	mov    rbp,rsp
  40c684:	sub    rsp,0x30
  40c688:	mov    ax,r8w
  40c68c:	mov    QWORD PTR [rbp-0x10],rdi
  40c690:	mov    QWORD PTR [rbp-0x18],rsi
  40c694:	mov    DWORD PTR [rbp-0x1c],edx
  40c697:	mov    QWORD PTR [rbp-0x28],rcx
  40c69b:	mov    WORD PTR [rbp-0x2a],ax
  40c69f:	mov    rdi,QWORD PTR [rbp-0x10]
  40c6a3:	mov    rsi,QWORD PTR [rbp-0x18]
  40c6a7:	mov    edx,DWORD PTR [rbp-0x1c]
  40c6aa:	call   40c4c0 <flatcc_verify_typed_buffer_header@@Base>
  40c6af:	cmp    eax,0x0
  40c6b2:	je     40c6d0 <flatcc_verify_struct_as_typed_root@@Base+0x50>
  40c6b8:	mov    rdi,QWORD PTR [rbp-0x10]
  40c6bc:	mov    rsi,QWORD PTR [rbp-0x18]
  40c6c0:	mov    edx,DWORD PTR [rbp-0x1c]
  40c6c3:	call   40c4c0 <flatcc_verify_typed_buffer_header@@Base>
  40c6c8:	mov    DWORD PTR [rbp-0x4],eax
  40c6cb:	jmp    40c6fe <flatcc_verify_struct_as_typed_root@@Base+0x7e>
  40c6d0:	xor    esi,esi
  40c6d2:	mov    rax,QWORD PTR [rbp-0x18]
  40c6d6:	mov    ecx,eax
  40c6d8:	mov    rdi,QWORD PTR [rbp-0x10]
  40c6dc:	mov    DWORD PTR [rbp-0x30],ecx
  40c6df:	call   40b790 <flatcc_verify_string_field@@Base+0x2e0>
  40c6e4:	xor    esi,esi
  40c6e6:	mov    rdi,QWORD PTR [rbp-0x28]
  40c6ea:	mov    ecx,edi
  40c6ec:	mov    edi,DWORD PTR [rbp-0x30]
  40c6ef:	mov    edx,eax
  40c6f1:	movzx  r8d,WORD PTR [rbp-0x2a]
  40c6f6:	call   40c1e0 <flatcc_verify_union_struct@@Base+0x50>
  40c6fb:	mov    DWORD PTR [rbp-0x4],eax
  40c6fe:	mov    eax,DWORD PTR [rbp-0x4]
  40c701:	add    rsp,0x30
  40c705:	pop    rbp
  40c706:	ret    
  40c707:	nop    WORD PTR [rax+rax*1+0x0]

000000000040c710 <flatcc_verify_table_as_root@@Base>:
  40c710:	push   rbp
  40c711:	mov    rbp,rsp
  40c714:	sub    rsp,0x40
  40c718:	mov    QWORD PTR [rbp-0x10],rdi
  40c71c:	mov    QWORD PTR [rbp-0x18],rsi
  40c720:	mov    QWORD PTR [rbp-0x20],rdx
  40c724:	mov    QWORD PTR [rbp-0x28],rcx
  40c728:	mov    rdi,QWORD PTR [rbp-0x10]
  40c72c:	mov    rcx,QWORD PTR [rbp-0x18]
  40c730:	mov    eax,ecx
  40c732:	mov    eax,eax
  40c734:	mov    esi,eax
  40c736:	mov    rdx,QWORD PTR [rbp-0x20]
  40c73a:	call   40c320 <flatcc_verify_buffer_header@@Base>
  40c73f:	cmp    eax,0x0
  40c742:	je     40c767 <flatcc_verify_table_as_root@@Base+0x57>
  40c748:	mov    rdi,QWORD PTR [rbp-0x10]
  40c74c:	mov    rax,QWORD PTR [rbp-0x18]
  40c750:	mov    ecx,eax
  40c752:	mov    ecx,ecx
  40c754:	mov    esi,ecx
  40c756:	mov    rdx,QWORD PTR [rbp-0x20]
  40c75a:	call   40c320 <flatcc_verify_buffer_header@@Base>
  40c75f:	mov    DWORD PTR [rbp-0x4],eax
  40c762:	jmp    40c7a3 <flatcc_verify_table_as_root@@Base+0x93>
  40c767:	xor    esi,esi
  40c769:	mov    rdi,QWORD PTR [rbp-0x10]
  40c76d:	mov    rax,QWORD PTR [rbp-0x18]
  40c771:	mov    ecx,eax
  40c773:	mov    rax,QWORD PTR [rbp-0x10]
  40c777:	mov    QWORD PTR [rbp-0x30],rdi
  40c77b:	mov    rdi,rax
  40c77e:	mov    DWORD PTR [rbp-0x34],ecx
  40c781:	call   40b790 <flatcc_verify_string_field@@Base+0x2e0>
  40c786:	xor    edx,edx
  40c788:	mov    r9,QWORD PTR [rbp-0x28]
  40c78c:	mov    rdi,QWORD PTR [rbp-0x30]
  40c790:	mov    esi,DWORD PTR [rbp-0x34]
  40c793:	mov    ecx,eax
  40c795:	mov    r8d,0x64
  40c79b:	call   40bc60 <flatcc_verify_table_field@@Base+0xb0>
  40c7a0:	mov    DWORD PTR [rbp-0x4],eax
  40c7a3:	mov    eax,DWORD PTR [rbp-0x4]
  40c7a6:	add    rsp,0x40
  40c7aa:	pop    rbp
  40c7ab:	ret    
  40c7ac:	nop    DWORD PTR [rax+0x0]

000000000040c7b0 <flatcc_verify_table_as_typed_root@@Base>:
  40c7b0:	push   rbp
  40c7b1:	mov    rbp,rsp
  40c7b4:	sub    rsp,0x40
  40c7b8:	mov    QWORD PTR [rbp-0x10],rdi
  40c7bc:	mov    QWORD PTR [rbp-0x18],rsi
  40c7c0:	mov    DWORD PTR [rbp-0x1c],edx
  40c7c3:	mov    QWORD PTR [rbp-0x28],rcx
  40c7c7:	mov    rdi,QWORD PTR [rbp-0x10]
  40c7cb:	mov    rcx,QWORD PTR [rbp-0x18]
  40c7cf:	mov    edx,ecx
  40c7d1:	mov    edx,edx
  40c7d3:	mov    esi,edx
  40c7d5:	mov    edx,DWORD PTR [rbp-0x1c]
  40c7d8:	call   40c4c0 <flatcc_verify_typed_buffer_header@@Base>
  40c7dd:	cmp    eax,0x0
  40c7e0:	je     40c804 <flatcc_verify_table_as_typed_root@@Base+0x54>
  40c7e6:	mov    rdi,QWORD PTR [rbp-0x10]
  40c7ea:	mov    rax,QWORD PTR [rbp-0x18]
  40c7ee:	mov    ecx,eax
  40c7f0:	mov    ecx,ecx
  40c7f2:	mov    esi,ecx
  40c7f4:	mov    edx,DWORD PTR [rbp-0x1c]
  40c7f7:	call   40c4c0 <flatcc_verify_typed_buffer_header@@Base>
  40c7fc:	mov    DWORD PTR [rbp-0x4],eax
  40c7ff:	jmp    40c840 <flatcc_verify_table_as_typed_root@@Base+0x90>
  40c804:	xor    esi,esi
  40c806:	mov    rdi,QWORD PTR [rbp-0x10]
  40c80a:	mov    rax,QWORD PTR [rbp-0x18]
  40c80e:	mov    ecx,eax
  40c810:	mov    rax,QWORD PTR [rbp-0x10]
  40c814:	mov    QWORD PTR [rbp-0x30],rdi
  40c818:	mov    rdi,rax
  40c81b:	mov    DWORD PTR [rbp-0x34],ecx
  40c81e:	call   40b790 <flatcc_verify_string_field@@Base+0x2e0>
  40c823:	xor    edx,edx
  40c825:	mov    r9,QWORD PTR [rbp-0x28]
  40c829:	mov    rdi,QWORD PTR [rbp-0x30]
  40c82d:	mov    esi,DWORD PTR [rbp-0x34]
  40c830:	mov    ecx,eax
  40c832:	mov    r8d,0x64
  40c838:	call   40bc60 <flatcc_verify_table_field@@Base+0xb0>
  40c83d:	mov    DWORD PTR [rbp-0x4],eax
  40c840:	mov    eax,DWORD PTR [rbp-0x4]
  40c843:	add    rsp,0x40
  40c847:	pop    rbp
  40c848:	ret    
  40c849:	nop    DWORD PTR [rax+0x0]

000000000040c850 <flatcc_verify_struct_as_nested_root@@Base>:
  40c850:	push   rbp
  40c851:	mov    rbp,rsp
  40c854:	sub    rsp,0x60
  40c858:	mov    ax,r9w
  40c85c:	mov    r10w,si
  40c860:	mov    esi,0xffffffff
  40c865:	mov    r9d,esi
  40c868:	mov    QWORD PTR [rbp-0x10],rdi
  40c86c:	mov    WORD PTR [rbp-0x12],r10w
  40c871:	mov    DWORD PTR [rbp-0x18],edx
  40c874:	mov    QWORD PTR [rbp-0x20],rcx
  40c878:	mov    QWORD PTR [rbp-0x28],r8
  40c87c:	mov    WORD PTR [rbp-0x2a],ax
  40c880:	mov    rdi,QWORD PTR [rbp-0x10]
  40c884:	mov    ax,WORD PTR [rbp-0x12]
  40c888:	mov    edx,DWORD PTR [rbp-0x18]
  40c88b:	movzx  esi,WORD PTR [rbp-0x2a]
  40c88f:	mov    ecx,esi
  40c891:	movzx  esi,ax
  40c894:	mov    r8d,0x1
  40c89a:	call   40b7c0 <flatcc_verify_vector_field@@Base>
  40c89f:	cmp    eax,0x0
  40c8a2:	je     40c8e1 <flatcc_verify_struct_as_nested_root@@Base+0x91>
  40c8a8:	mov    eax,0xffffffff
  40c8ad:	mov    r9d,eax
  40c8b0:	mov    rdi,QWORD PTR [rbp-0x10]
  40c8b4:	mov    cx,WORD PTR [rbp-0x12]
  40c8b8:	mov    edx,DWORD PTR [rbp-0x18]
  40c8bb:	movzx  eax,WORD PTR [rbp-0x2a]
  40c8bf:	mov    esi,eax
  40c8c1:	movzx  eax,cx
  40c8c4:	mov    QWORD PTR [rbp-0x48],rsi
  40c8c8:	mov    esi,eax
  40c8ca:	mov    rcx,QWORD PTR [rbp-0x48]
  40c8ce:	mov    r8d,0x1
  40c8d4:	call   40b7c0 <flatcc_verify_vector_field@@Base>
  40c8d9:	mov    DWORD PTR [rbp-0x4],eax
  40c8dc:	jmp    40c976 <flatcc_verify_struct_as_nested_root@@Base+0x126>
  40c8e1:	mov    rdi,QWORD PTR [rbp-0x10]
  40c8e5:	movzx  esi,WORD PTR [rbp-0x12]
  40c8e9:	call   40c980 <flatcc_verify_struct_as_nested_root@@Base+0x130>
  40c8ee:	xor    esi,esi
  40c8f0:	mov    edi,esi
  40c8f2:	mov    QWORD PTR [rbp-0x38],rax
  40c8f6:	cmp    rdi,rax
  40c8f9:	jne    40c90b <flatcc_verify_struct_as_nested_root@@Base+0xbb>
  40c8ff:	mov    DWORD PTR [rbp-0x4],0x0
  40c906:	jmp    40c976 <flatcc_verify_struct_as_nested_root@@Base+0x126>
  40c90b:	xor    esi,esi
  40c90d:	mov    rax,QWORD PTR [rbp-0x38]
  40c911:	mov    rcx,QWORD PTR [rbp-0x38]
  40c915:	mov    rdi,rcx
  40c918:	mov    QWORD PTR [rbp-0x50],rax
  40c91c:	call   40b790 <flatcc_verify_string_field@@Base+0x2e0>
  40c921:	xor    esi,esi
  40c923:	mov    eax,eax
  40c925:	mov    ecx,eax
  40c927:	mov    rdi,QWORD PTR [rbp-0x50]
  40c92b:	add    rdi,rcx
  40c92e:	mov    QWORD PTR [rbp-0x38],rdi
  40c932:	mov    rcx,QWORD PTR [rbp-0x38]
  40c936:	mov    rdi,rcx
  40c939:	call   40b790 <flatcc_verify_string_field@@Base+0x2e0>
  40c93e:	mov    DWORD PTR [rbp-0x3c],eax
  40c941:	mov    rcx,QWORD PTR [rbp-0x38]
  40c945:	add    rcx,0x4
  40c949:	mov    QWORD PTR [rbp-0x38],rcx
  40c94d:	mov    rcx,QWORD PTR [rbp-0x38]
  40c951:	mov    eax,DWORD PTR [rbp-0x3c]
  40c954:	mov    esi,eax
  40c956:	mov    rdx,QWORD PTR [rbp-0x20]
  40c95a:	mov    rdi,QWORD PTR [rbp-0x28]
  40c95e:	mov    QWORD PTR [rbp-0x58],rdi
  40c962:	mov    rdi,rcx
  40c965:	mov    rcx,QWORD PTR [rbp-0x58]
  40c969:	movzx  r8d,WORD PTR [rbp-0x2a]
  40c96e:	call   40c5f0 <flatcc_verify_struct_as_root@@Base>
  40c973:	mov    DWORD PTR [rbp-0x4],eax
  40c976:	mov    eax,DWORD PTR [rbp-0x4]
  40c979:	add    rsp,0x60
  40c97d:	pop    rbp
  40c97e:	ret    
  40c97f:	nop
  40c980:	push   rbp
  40c981:	mov    rbp,rsp
  40c984:	sub    rsp,0x20
  40c988:	mov    ax,si
  40c98b:	mov    QWORD PTR [rbp-0x8],rdi
  40c98f:	mov    WORD PTR [rbp-0xa],ax
  40c993:	mov    rdi,QWORD PTR [rbp-0x8]
  40c997:	movzx  esi,WORD PTR [rbp-0xa]
  40c99b:	call   40cdd0 <flatcc_verify_union_field@@Base+0x250>
  40c9a0:	mov    cx,ax
  40c9a3:	mov    WORD PTR [rbp-0xc],cx
  40c9a7:	movzx  eax,WORD PTR [rbp-0xc]
  40c9ab:	cmp    eax,0x0
  40c9ae:	je     40c9da <flatcc_verify_struct_as_nested_root@@Base+0x18a>
  40c9b4:	mov    rax,QWORD PTR [rbp-0x8]
  40c9b8:	mov    rax,QWORD PTR [rax]
  40c9bb:	mov    rcx,QWORD PTR [rbp-0x8]
  40c9bf:	mov    edx,DWORD PTR [rcx+0x18]
  40c9c2:	mov    ecx,edx
  40c9c4:	add    rax,rcx
  40c9c7:	movzx  edx,WORD PTR [rbp-0xc]
  40c9cb:	movsxd rcx,edx
  40c9ce:	add    rax,rcx
  40c9d1:	mov    QWORD PTR [rbp-0x18],rax
  40c9d5:	jmp    40c9e7 <flatcc_verify_struct_as_nested_root@@Base+0x197>
  40c9da:	xor    eax,eax
  40c9dc:	mov    ecx,eax
  40c9de:	mov    QWORD PTR [rbp-0x18],rcx
  40c9e2:	jmp    40c9e7 <flatcc_verify_struct_as_nested_root@@Base+0x197>
  40c9e7:	mov    rax,QWORD PTR [rbp-0x18]
  40c9eb:	add    rsp,0x20
  40c9ef:	pop    rbp
  40c9f0:	ret    
  40c9f1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40c9fb:	nop    DWORD PTR [rax+rax*1+0x0]

000000000040ca00 <flatcc_verify_table_as_nested_root@@Base>:
  40ca00:	push   rbp
  40ca01:	mov    rbp,rsp
  40ca04:	sub    rsp,0x60
  40ca08:	mov    ax,r8w
  40ca0c:	mov    r10w,si
  40ca10:	mov    esi,0xffffffff
  40ca15:	mov    r11d,esi
  40ca18:	mov    QWORD PTR [rbp-0x10],rdi
  40ca1c:	mov    WORD PTR [rbp-0x12],r10w
  40ca21:	mov    DWORD PTR [rbp-0x18],edx
  40ca24:	mov    QWORD PTR [rbp-0x20],rcx
  40ca28:	mov    WORD PTR [rbp-0x22],ax
  40ca2c:	mov    QWORD PTR [rbp-0x30],r9
  40ca30:	mov    rdi,QWORD PTR [rbp-0x10]
  40ca34:	mov    ax,WORD PTR [rbp-0x12]
  40ca38:	mov    edx,DWORD PTR [rbp-0x18]
  40ca3b:	movzx  esi,WORD PTR [rbp-0x22]
  40ca3f:	mov    ecx,esi
  40ca41:	movzx  esi,ax
  40ca44:	mov    r8d,0x1
  40ca4a:	mov    r9,r11
  40ca4d:	call   40b7c0 <flatcc_verify_vector_field@@Base>
  40ca52:	cmp    eax,0x0
  40ca55:	je     40ca94 <flatcc_verify_table_as_nested_root@@Base+0x94>
  40ca5b:	mov    eax,0xffffffff
  40ca60:	mov    r9d,eax
  40ca63:	mov    rdi,QWORD PTR [rbp-0x10]
  40ca67:	mov    cx,WORD PTR [rbp-0x12]
  40ca6b:	mov    edx,DWORD PTR [rbp-0x18]
  40ca6e:	movzx  eax,WORD PTR [rbp-0x22]
  40ca72:	mov    esi,eax
  40ca74:	movzx  eax,cx
  40ca77:	mov    QWORD PTR [rbp-0x48],rsi
  40ca7b:	mov    esi,eax
  40ca7d:	mov    rcx,QWORD PTR [rbp-0x48]
  40ca81:	mov    r8d,0x1
  40ca87:	call   40b7c0 <flatcc_verify_vector_field@@Base>
  40ca8c:	mov    DWORD PTR [rbp-0x4],eax
  40ca8f:	jmp    40cb76 <flatcc_verify_table_as_nested_root@@Base+0x176>
  40ca94:	mov    rdi,QWORD PTR [rbp-0x10]
  40ca98:	movzx  esi,WORD PTR [rbp-0x12]
  40ca9c:	call   40c980 <flatcc_verify_struct_as_nested_root@@Base+0x130>
  40caa1:	xor    esi,esi
  40caa3:	mov    edi,esi
  40caa5:	mov    QWORD PTR [rbp-0x38],rax
  40caa9:	cmp    rdi,rax
  40caac:	jne    40cabe <flatcc_verify_table_as_nested_root@@Base+0xbe>
  40cab2:	mov    DWORD PTR [rbp-0x4],0x0
  40cab9:	jmp    40cb76 <flatcc_verify_table_as_nested_root@@Base+0x176>
  40cabe:	xor    esi,esi
  40cac0:	mov    rax,QWORD PTR [rbp-0x38]
  40cac4:	mov    rcx,QWORD PTR [rbp-0x38]
  40cac8:	mov    rdi,rcx
  40cacb:	mov    QWORD PTR [rbp-0x50],rax
  40cacf:	call   40b790 <flatcc_verify_string_field@@Base+0x2e0>
  40cad4:	xor    esi,esi
  40cad6:	mov    eax,eax
  40cad8:	mov    ecx,eax
  40cada:	mov    rdi,QWORD PTR [rbp-0x50]
  40cade:	add    rdi,rcx
  40cae1:	mov    QWORD PTR [rbp-0x38],rdi
  40cae5:	mov    rcx,QWORD PTR [rbp-0x38]
  40cae9:	mov    rdi,rcx
  40caec:	call   40b790 <flatcc_verify_string_field@@Base+0x2e0>
  40caf1:	mov    DWORD PTR [rbp-0x3c],eax
  40caf4:	mov    rcx,QWORD PTR [rbp-0x38]
  40caf8:	add    rcx,0x4
  40cafc:	mov    QWORD PTR [rbp-0x38],rcx
  40cb00:	mov    rcx,QWORD PTR [rbp-0x38]
  40cb04:	mov    eax,DWORD PTR [rbp-0x3c]
  40cb07:	mov    esi,eax
  40cb09:	mov    rdx,QWORD PTR [rbp-0x20]
  40cb0d:	mov    rdi,rcx
  40cb10:	call   40c320 <flatcc_verify_buffer_header@@Base>
  40cb15:	cmp    eax,0x0
  40cb18:	je     40cb3b <flatcc_verify_table_as_nested_root@@Base+0x13b>
  40cb1e:	mov    rax,QWORD PTR [rbp-0x38]
  40cb22:	mov    ecx,DWORD PTR [rbp-0x3c]
  40cb25:	mov    esi,ecx
  40cb27:	mov    rdx,QWORD PTR [rbp-0x20]
  40cb2b:	mov    rdi,rax
  40cb2e:	call   40c320 <flatcc_verify_buffer_header@@Base>
  40cb33:	mov    DWORD PTR [rbp-0x4],eax
  40cb36:	jmp    40cb76 <flatcc_verify_table_as_nested_root@@Base+0x176>
  40cb3b:	xor    esi,esi
  40cb3d:	mov    rax,QWORD PTR [rbp-0x38]
  40cb41:	mov    ecx,DWORD PTR [rbp-0x3c]
  40cb44:	mov    rdx,QWORD PTR [rbp-0x38]
  40cb48:	mov    rdi,rdx
  40cb4b:	mov    DWORD PTR [rbp-0x54],ecx
  40cb4e:	mov    QWORD PTR [rbp-0x60],rax
  40cb52:	call   40b790 <flatcc_verify_string_field@@Base+0x2e0>
  40cb57:	xor    edx,edx
  40cb59:	mov    rdi,QWORD PTR [rbp-0x10]
  40cb5d:	mov    r8d,DWORD PTR [rdi+0xc]
  40cb61:	mov    r9,QWORD PTR [rbp-0x30]
  40cb65:	mov    rdi,QWORD PTR [rbp-0x60]
  40cb69:	mov    esi,DWORD PTR [rbp-0x54]
  40cb6c:	mov    ecx,eax
  40cb6e:	call   40bc60 <flatcc_verify_table_field@@Base+0xb0>
  40cb73:	mov    DWORD PTR [rbp-0x4],eax
  40cb76:	mov    eax,DWORD PTR [rbp-0x4]
  40cb79:	add    rsp,0x60
  40cb7d:	pop    rbp
  40cb7e:	ret    
  40cb7f:	nop

000000000040cb80 <flatcc_verify_union_field@@Base>:
  40cb80:	push   rbp
  40cb81:	mov    rbp,rsp
  40cb84:	sub    rsp,0x70
  40cb88:	mov    ax,si
  40cb8b:	mov    QWORD PTR [rbp-0x10],rdi
  40cb8f:	mov    WORD PTR [rbp-0x12],ax
  40cb93:	mov    DWORD PTR [rbp-0x18],edx
  40cb96:	mov    QWORD PTR [rbp-0x20],rcx
  40cb9a:	mov    rdi,QWORD PTR [rbp-0x10]
  40cb9e:	movzx  edx,WORD PTR [rbp-0x12]
  40cba2:	sub    edx,0x1
  40cba5:	mov    ax,dx
  40cba8:	movzx  esi,ax
  40cbab:	call   40cdd0 <flatcc_verify_union_field@@Base+0x250>
  40cbb0:	xor    edx,edx
  40cbb2:	mov    r8w,ax
  40cbb6:	mov    WORD PTR [rbp-0x22],r8w
  40cbbb:	movzx  eax,r8w
  40cbbf:	cmp    edx,eax
  40cbc1:	jne    40cc46 <flatcc_verify_union_field@@Base+0xc6>
  40cbc7:	mov    rdi,QWORD PTR [rbp-0x10]
  40cbcb:	movzx  esi,WORD PTR [rbp-0x12]
  40cbcf:	call   40cdd0 <flatcc_verify_union_field@@Base+0x250>
  40cbd4:	mov    cx,ax
  40cbd7:	mov    WORD PTR [rbp-0x24],cx
  40cbdb:	movzx  eax,WORD PTR [rbp-0x24]
  40cbdf:	cmp    eax,0x0
  40cbe2:	sete   cl
  40cbe5:	and    cl,0x1
  40cbe8:	movzx  eax,cl
  40cbeb:	mov    DWORD PTR [rbp-0x5c],eax
  40cbee:	cmp    DWORD PTR [rbp-0x5c],0x0
  40cbf2:	jne    40cc04 <flatcc_verify_union_field@@Base+0x84>
  40cbf8:	mov    DWORD PTR [rbp-0x4],0x17
  40cbff:	jmp    40cdc1 <flatcc_verify_union_field@@Base+0x241>
  40cc04:	jmp    40cc09 <flatcc_verify_union_field@@Base+0x89>
  40cc09:	jmp    40cc0e <flatcc_verify_union_field@@Base+0x8e>
  40cc0e:	cmp    DWORD PTR [rbp-0x18],0x0
  40cc12:	setne  al
  40cc15:	xor    al,0xff
  40cc17:	and    al,0x1
  40cc19:	movzx  ecx,al
  40cc1c:	mov    DWORD PTR [rbp-0x60],ecx
  40cc1f:	cmp    DWORD PTR [rbp-0x60],0x0
  40cc23:	jne    40cc35 <flatcc_verify_union_field@@Base+0xb5>
  40cc29:	mov    DWORD PTR [rbp-0x4],0x15
  40cc30:	jmp    40cdc1 <flatcc_verify_union_field@@Base+0x241>
  40cc35:	jmp    40cc3a <flatcc_verify_union_field@@Base+0xba>
  40cc3a:	mov    DWORD PTR [rbp-0x4],0x0
  40cc41:	jmp    40cdc1 <flatcc_verify_union_field@@Base+0x241>
  40cc46:	xor    edx,edx
  40cc48:	mov    rdi,QWORD PTR [rbp-0x10]
  40cc4c:	movzx  eax,WORD PTR [rbp-0x12]
  40cc50:	sub    eax,0x1
  40cc53:	mov    cx,ax
  40cc56:	movzx  esi,cx
  40cc59:	mov    eax,0x1
  40cc5e:	mov    ecx,eax
  40cc60:	mov    r8d,eax
  40cc63:	call   40b350 <flatcc_verify_field@@Base+0xa0>
  40cc68:	cmp    eax,0x0
  40cc6b:	je     40cc9b <flatcc_verify_union_field@@Base+0x11b>
  40cc71:	xor    edx,edx
  40cc73:	mov    rdi,QWORD PTR [rbp-0x10]
  40cc77:	movzx  eax,WORD PTR [rbp-0x12]
  40cc7b:	sub    eax,0x1
  40cc7e:	mov    cx,ax
  40cc81:	movzx  esi,cx
  40cc84:	mov    eax,0x1
  40cc89:	mov    ecx,eax
  40cc8b:	mov    r8d,eax
  40cc8e:	call   40b350 <flatcc_verify_field@@Base+0xa0>
  40cc93:	mov    DWORD PTR [rbp-0x4],eax
  40cc96:	jmp    40cdc1 <flatcc_verify_union_field@@Base+0x241>
  40cc9b:	mov    rdi,QWORD PTR [rbp-0x10]
  40cc9f:	movzx  esi,WORD PTR [rbp-0x12]
  40cca3:	call   40cdd0 <flatcc_verify_union_field@@Base+0x250>
  40cca8:	mov    cx,ax
  40ccab:	mov    WORD PTR [rbp-0x24],cx
  40ccaf:	mov    rdi,QWORD PTR [rbp-0x10]
  40ccb3:	mov    rdi,QWORD PTR [rdi]
  40ccb6:	mov    rdx,QWORD PTR [rbp-0x10]
  40ccba:	mov    eax,DWORD PTR [rdx+0x18]
  40ccbd:	mov    edx,eax
  40ccbf:	add    rdi,rdx
  40ccc2:	movzx  eax,WORD PTR [rbp-0x22]
  40ccc6:	movsxd rdx,eax
  40ccc9:	add    rdi,rdx
  40cccc:	mov    QWORD PTR [rbp-0x30],rdi
  40ccd0:	mov    rax,QWORD PTR [rbp-0x30]
  40ccd4:	movzx  ecx,BYTE PTR [rax]
  40ccd7:	cmp    ecx,0x0
  40ccda:	mov    dl,0x1
  40ccdc:	mov    BYTE PTR [rbp-0x69],dl
  40ccdf:	jne    40ccf2 <flatcc_verify_union_field@@Base+0x172>
  40cce5:	movzx  eax,WORD PTR [rbp-0x24]
  40cce9:	cmp    eax,0x0
  40ccec:	sete   cl
  40ccef:	mov    BYTE PTR [rbp-0x69],cl
  40ccf2:	mov    al,BYTE PTR [rbp-0x69]
  40ccf5:	and    al,0x1
  40ccf7:	movzx  ecx,al
  40ccfa:	mov    DWORD PTR [rbp-0x64],ecx
  40ccfd:	cmp    DWORD PTR [rbp-0x64],0x0
  40cd01:	jne    40cd13 <flatcc_verify_union_field@@Base+0x193>
  40cd07:	mov    DWORD PTR [rbp-0x4],0x18
  40cd0e:	jmp    40cdc1 <flatcc_verify_union_field@@Base+0x241>
  40cd13:	jmp    40cd18 <flatcc_verify_union_field@@Base+0x198>
  40cd18:	mov    rax,QWORD PTR [rbp-0x30]
  40cd1c:	movzx  ecx,BYTE PTR [rax]
  40cd1f:	cmp    ecx,0x0
  40cd22:	jne    40cd34 <flatcc_verify_union_field@@Base+0x1b4>
  40cd28:	mov    DWORD PTR [rbp-0x4],0x0
  40cd2f:	jmp    40cdc1 <flatcc_verify_union_field@@Base+0x241>
  40cd34:	jmp    40cd39 <flatcc_verify_union_field@@Base+0x1b9>
  40cd39:	mov    rdi,QWORD PTR [rbp-0x10]
  40cd3d:	mov    ax,WORD PTR [rbp-0x12]
  40cd41:	mov    edx,DWORD PTR [rbp-0x18]
  40cd44:	movzx  esi,ax
  40cd47:	lea    rcx,[rbp-0x34]
  40cd4b:	call   40b550 <flatcc_verify_string_field@@Base+0xa0>
  40cd50:	mov    DWORD PTR [rbp-0x68],eax
  40cd53:	cmp    DWORD PTR [rbp-0x68],0x0
  40cd57:	jne    40cd67 <flatcc_verify_union_field@@Base+0x1e7>
  40cd5d:	cmp    DWORD PTR [rbp-0x34],0x0
  40cd61:	jne    40cd72 <flatcc_verify_union_field@@Base+0x1f2>
  40cd67:	mov    eax,DWORD PTR [rbp-0x68]
  40cd6a:	mov    DWORD PTR [rbp-0x4],eax
  40cd6d:	jmp    40cdc1 <flatcc_verify_union_field@@Base+0x241>
  40cd72:	jmp    40cd77 <flatcc_verify_union_field@@Base+0x1f7>
  40cd77:	mov    rax,QWORD PTR [rbp-0x10]
  40cd7b:	mov    rax,QWORD PTR [rax]
  40cd7e:	mov    QWORD PTR [rbp-0x58],rax
  40cd82:	mov    rax,QWORD PTR [rbp-0x10]
  40cd86:	mov    ecx,DWORD PTR [rax+0x8]
  40cd89:	mov    DWORD PTR [rbp-0x50],ecx
  40cd8c:	mov    rax,QWORD PTR [rbp-0x10]
  40cd90:	mov    ecx,DWORD PTR [rax+0xc]
  40cd93:	mov    DWORD PTR [rbp-0x4c],ecx
  40cd96:	mov    ecx,DWORD PTR [rbp-0x34]
  40cd99:	mov    DWORD PTR [rbp-0x44],ecx
  40cd9c:	mov    rax,QWORD PTR [rbp-0x10]
  40cda0:	mov    rdi,QWORD PTR [rax]
  40cda3:	mov    esi,DWORD PTR [rbp-0x34]
  40cda6:	call   40b790 <flatcc_verify_string_field@@Base+0x2e0>
  40cdab:	mov    DWORD PTR [rbp-0x40],eax
  40cdae:	mov    rdi,QWORD PTR [rbp-0x30]
  40cdb2:	mov    dl,BYTE PTR [rdi]
  40cdb4:	mov    BYTE PTR [rbp-0x48],dl
  40cdb7:	lea    rdi,[rbp-0x58]
  40cdbb:	call   QWORD PTR [rbp-0x20]
  40cdbe:	mov    DWORD PTR [rbp-0x4],eax
  40cdc1:	mov    eax,DWORD PTR [rbp-0x4]
  40cdc4:	add    rsp,0x70
  40cdc8:	pop    rbp
  40cdc9:	ret    
  40cdca:	nop    WORD PTR [rax+rax*1+0x0]
  40cdd0:	push   rbp
  40cdd1:	mov    rbp,rsp
  40cdd4:	sub    rsp,0x20
  40cdd8:	mov    ax,si
  40cddb:	mov    QWORD PTR [rbp-0x10],rdi
  40cddf:	mov    WORD PTR [rbp-0x12],ax
  40cde3:	movzx  esi,WORD PTR [rbp-0x12]
  40cde7:	add    esi,0x2
  40cdea:	movsxd rdi,esi
  40cded:	shl    rdi,0x1
  40cdf1:	mov    ax,di
  40cdf4:	mov    WORD PTR [rbp-0x14],ax
  40cdf8:	movzx  esi,WORD PTR [rbp-0x14]
  40cdfc:	mov    rdi,QWORD PTR [rbp-0x10]
  40ce00:	movzx  ecx,WORD PTR [rdi+0x1e]
  40ce04:	cmp    esi,ecx
  40ce06:	jl     40ce18 <flatcc_verify_union_field@@Base+0x298>
  40ce0c:	mov    DWORD PTR [rbp-0x4],0x0
  40ce13:	jmp    40ce2f <flatcc_verify_union_field@@Base+0x2af>
  40ce18:	mov    rax,QWORD PTR [rbp-0x10]
  40ce1c:	mov    rdi,QWORD PTR [rax+0x10]
  40ce20:	movzx  esi,WORD PTR [rbp-0x14]
  40ce24:	call   40d440 <flatcc_verify_union_vector_field@@Base+0x600>
  40ce29:	movzx  esi,ax
  40ce2c:	mov    DWORD PTR [rbp-0x4],esi
  40ce2f:	mov    eax,DWORD PTR [rbp-0x4]
  40ce32:	add    rsp,0x20
  40ce36:	pop    rbp
  40ce37:	ret    
  40ce38:	nop    DWORD PTR [rax+rax*1+0x0]

000000000040ce40 <flatcc_verify_union_vector_field@@Base>:
  40ce40:	push   rbp
  40ce41:	mov    rbp,rsp
  40ce44:	sub    rsp,0x80
  40ce4b:	mov    ax,si
  40ce4e:	mov    QWORD PTR [rbp-0x10],rdi
  40ce52:	mov    WORD PTR [rbp-0x12],ax
  40ce56:	mov    DWORD PTR [rbp-0x18],edx
  40ce59:	mov    QWORD PTR [rbp-0x20],rcx
  40ce5d:	mov    rdi,QWORD PTR [rbp-0x10]
  40ce61:	movzx  edx,WORD PTR [rbp-0x12]
  40ce65:	sub    edx,0x1
  40ce68:	mov    ax,dx
  40ce6b:	movzx  esi,ax
  40ce6e:	call   40cdd0 <flatcc_verify_union_field@@Base+0x250>
  40ce73:	xor    edx,edx
  40ce75:	mov    r8w,ax
  40ce79:	mov    WORD PTR [rbp-0x22],r8w
  40ce7e:	movzx  eax,r8w
  40ce82:	cmp    edx,eax
  40ce84:	jne    40cee6 <flatcc_verify_union_vector_field@@Base+0xa6>
  40ce8a:	mov    rdi,QWORD PTR [rbp-0x10]
  40ce8e:	movzx  esi,WORD PTR [rbp-0x12]
  40ce92:	call   40cdd0 <flatcc_verify_union_field@@Base+0x250>
  40ce97:	xor    esi,esi
  40ce99:	mov    cx,ax
  40ce9c:	mov    WORD PTR [rbp-0x24],cx
  40cea0:	movzx  eax,cx
  40cea3:	cmp    esi,eax
  40cea5:	jne    40cee1 <flatcc_verify_union_vector_field@@Base+0xa1>
  40ceab:	jmp    40ceb0 <flatcc_verify_union_vector_field@@Base+0x70>
  40ceb0:	cmp    DWORD PTR [rbp-0x18],0x0
  40ceb4:	setne  al
  40ceb7:	xor    al,0xff
  40ceb9:	and    al,0x1
  40cebb:	movzx  ecx,al
  40cebe:	mov    DWORD PTR [rbp-0x44],ecx
  40cec1:	cmp    DWORD PTR [rbp-0x44],0x0
  40cec5:	jne    40ced7 <flatcc_verify_union_vector_field@@Base+0x97>
  40cecb:	mov    DWORD PTR [rbp-0x4],0x16
  40ced2:	jmp    40d081 <flatcc_verify_union_vector_field@@Base+0x241>
  40ced7:	jmp    40cedc <flatcc_verify_union_vector_field@@Base+0x9c>
  40cedc:	jmp    40cee1 <flatcc_verify_union_vector_field@@Base+0xa1>
  40cee1:	jmp    40cee6 <flatcc_verify_union_vector_field@@Base+0xa6>
  40cee6:	mov    eax,0x1
  40ceeb:	mov    ecx,eax
  40ceed:	mov    eax,0xffffffff
  40cef2:	mov    r9d,eax
  40cef5:	mov    rdi,QWORD PTR [rbp-0x10]
  40cef9:	movzx  eax,WORD PTR [rbp-0x12]
  40cefd:	sub    eax,0x1
  40cf00:	mov    dx,ax
  40cf03:	mov    eax,DWORD PTR [rbp-0x18]
  40cf06:	movzx  esi,dx
  40cf09:	mov    edx,eax
  40cf0b:	mov    r8d,0x1
  40cf11:	call   40b7c0 <flatcc_verify_vector_field@@Base>
  40cf16:	cmp    eax,0x0
  40cf19:	je     40cf57 <flatcc_verify_union_vector_field@@Base+0x117>
  40cf1f:	mov    eax,0x1
  40cf24:	mov    ecx,eax
  40cf26:	mov    eax,0xffffffff
  40cf2b:	mov    r9d,eax
  40cf2e:	mov    rdi,QWORD PTR [rbp-0x10]
  40cf32:	movzx  eax,WORD PTR [rbp-0x12]
  40cf36:	sub    eax,0x1
  40cf39:	mov    dx,ax
  40cf3c:	mov    eax,DWORD PTR [rbp-0x18]
  40cf3f:	movzx  esi,dx
  40cf42:	mov    edx,eax
  40cf44:	mov    r8d,0x1
  40cf4a:	call   40b7c0 <flatcc_verify_vector_field@@Base>
  40cf4f:	mov    DWORD PTR [rbp-0x4],eax
  40cf52:	jmp    40d081 <flatcc_verify_union_vector_field@@Base+0x241>
  40cf57:	mov    rdi,QWORD PTR [rbp-0x10]
  40cf5b:	movzx  eax,WORD PTR [rbp-0x12]
  40cf5f:	sub    eax,0x1
  40cf62:	mov    cx,ax
  40cf65:	movzx  esi,cx
  40cf68:	call   40c980 <flatcc_verify_struct_as_nested_root@@Base+0x130>
  40cf6d:	xor    esi,esi
  40cf6f:	mov    edi,esi
  40cf71:	mov    QWORD PTR [rbp-0x30],rax
  40cf75:	cmp    rdi,rax
  40cf78:	jne    40cf8a <flatcc_verify_union_vector_field@@Base+0x14a>
  40cf7e:	mov    DWORD PTR [rbp-0x4],0x0
  40cf85:	jmp    40d081 <flatcc_verify_union_vector_field@@Base+0x241>
  40cf8a:	xor    esi,esi
  40cf8c:	mov    rax,QWORD PTR [rbp-0x30]
  40cf90:	mov    rcx,QWORD PTR [rbp-0x30]
  40cf94:	mov    rdi,rcx
  40cf97:	mov    QWORD PTR [rbp-0x50],rax
  40cf9b:	call   40b790 <flatcc_verify_string_field@@Base+0x2e0>
  40cfa0:	xor    esi,esi
  40cfa2:	mov    eax,eax
  40cfa4:	mov    ecx,eax
  40cfa6:	mov    rdi,QWORD PTR [rbp-0x50]
  40cfaa:	add    rdi,rcx
  40cfad:	mov    QWORD PTR [rbp-0x30],rdi
  40cfb1:	mov    rcx,QWORD PTR [rbp-0x30]
  40cfb5:	mov    rdi,rcx
  40cfb8:	call   40b790 <flatcc_verify_string_field@@Base+0x2e0>
  40cfbd:	mov    DWORD PTR [rbp-0x3c],eax
  40cfc0:	mov    rcx,QWORD PTR [rbp-0x30]
  40cfc4:	add    rcx,0x4
  40cfc8:	mov    QWORD PTR [rbp-0x30],rcx
  40cfcc:	mov    rcx,QWORD PTR [rbp-0x30]
  40cfd0:	mov    QWORD PTR [rbp-0x38],rcx
  40cfd4:	mov    rdi,QWORD PTR [rbp-0x10]
  40cfd8:	mov    ax,WORD PTR [rbp-0x12]
  40cfdc:	mov    edx,DWORD PTR [rbp-0x18]
  40cfdf:	movzx  esi,ax
  40cfe2:	lea    rcx,[rbp-0x40]
  40cfe6:	call   40b550 <flatcc_verify_string_field@@Base+0xa0>
  40cfeb:	mov    DWORD PTR [rbp-0x48],eax
  40cfee:	cmp    DWORD PTR [rbp-0x48],0x0
  40cff2:	jne    40d002 <flatcc_verify_union_vector_field@@Base+0x1c2>
  40cff8:	cmp    DWORD PTR [rbp-0x40],0x0
  40cffc:	jne    40d00d <flatcc_verify_union_vector_field@@Base+0x1cd>
  40d002:	mov    eax,DWORD PTR [rbp-0x48]
  40d005:	mov    DWORD PTR [rbp-0x4],eax
  40d008:	jmp    40d081 <flatcc_verify_union_vector_field@@Base+0x241>
  40d00d:	jmp    40d012 <flatcc_verify_union_vector_field@@Base+0x1d2>
  40d012:	mov    rax,QWORD PTR [rbp-0x10]
  40d016:	mov    rdi,QWORD PTR [rax]
  40d019:	mov    rax,QWORD PTR [rbp-0x10]
  40d01d:	mov    esi,DWORD PTR [rax+0x8]
  40d020:	mov    edx,DWORD PTR [rbp-0x40]
  40d023:	mov    rax,QWORD PTR [rbp-0x10]
  40d027:	mov    rax,QWORD PTR [rax]
  40d02a:	mov    ecx,DWORD PTR [rbp-0x40]
  40d02d:	mov    QWORD PTR [rbp-0x58],rdi
  40d031:	mov    rdi,rax
  40d034:	mov    DWORD PTR [rbp-0x5c],esi
  40d037:	mov    esi,ecx
  40d039:	mov    DWORD PTR [rbp-0x60],edx
  40d03c:	call   40b790 <flatcc_verify_string_field@@Base+0x2e0>
  40d041:	mov    r8d,DWORD PTR [rbp-0x3c]
  40d045:	mov    r9,QWORD PTR [rbp-0x38]
  40d049:	mov    rdi,QWORD PTR [rbp-0x10]
  40d04d:	mov    ecx,DWORD PTR [rdi+0xc]
  40d050:	mov    rdi,QWORD PTR [rbp-0x20]
  40d054:	mov    r10,QWORD PTR [rbp-0x58]
  40d058:	mov    QWORD PTR [rbp-0x68],rdi
  40d05c:	mov    rdi,r10
  40d05f:	mov    esi,DWORD PTR [rbp-0x5c]
  40d062:	mov    edx,DWORD PTR [rbp-0x60]
  40d065:	mov    DWORD PTR [rbp-0x6c],ecx
  40d068:	mov    ecx,eax
  40d06a:	mov    eax,DWORD PTR [rbp-0x6c]
  40d06d:	mov    DWORD PTR [rsp],eax
  40d070:	mov    r11,QWORD PTR [rbp-0x68]
  40d074:	mov    QWORD PTR [rsp+0x8],r11
  40d079:	call   40d090 <flatcc_verify_union_vector_field@@Base+0x250>
  40d07e:	mov    DWORD PTR [rbp-0x4],eax
  40d081:	mov    eax,DWORD PTR [rbp-0x4]
  40d084:	add    rsp,0x80
  40d08b:	pop    rbp
  40d08c:	ret    
  40d08d:	nop    DWORD PTR [rax]
  40d090:	push   rbp
  40d091:	mov    rbp,rsp
  40d094:	sub    rsp,0x80
  40d09b:	mov    rax,QWORD PTR [rbp+0x18]
  40d09f:	mov    r10d,DWORD PTR [rbp+0x10]
  40d0a3:	mov    QWORD PTR [rbp-0x10],rdi
  40d0a7:	mov    DWORD PTR [rbp-0x14],esi
  40d0aa:	mov    DWORD PTR [rbp-0x18],edx
  40d0ad:	mov    DWORD PTR [rbp-0x1c],ecx
  40d0b0:	mov    DWORD PTR [rbp-0x20],r8d
  40d0b4:	mov    QWORD PTR [rbp-0x28],r9
  40d0b8:	mov    DWORD PTR [rbp-0x6c],r10d
  40d0bc:	mov    QWORD PTR [rbp-0x78],rax
  40d0c0:	mov    eax,DWORD PTR [rbp+0x10]
  40d0c3:	mov    ecx,eax
  40d0c5:	add    ecx,0xffffffff
  40d0c8:	mov    DWORD PTR [rbp+0x10],ecx
  40d0cb:	cmp    eax,0x0
  40d0ce:	setg   dl
  40d0d1:	and    dl,0x1
  40d0d4:	movzx  eax,dl
  40d0d7:	mov    DWORD PTR [rbp-0x5c],eax
  40d0da:	cmp    DWORD PTR [rbp-0x5c],0x0
  40d0de:	jne    40d0f0 <flatcc_verify_union_vector_field@@Base+0x2b0>
  40d0e4:	mov    DWORD PTR [rbp-0x4],0x3
  40d0eb:	jmp    40d2cd <flatcc_verify_union_vector_field@@Base+0x48d>
  40d0f0:	jmp    40d0f5 <flatcc_verify_union_vector_field@@Base+0x2b5>
  40d0f5:	mov    rdi,QWORD PTR [rbp-0x10]
  40d0f9:	mov    esi,DWORD PTR [rbp-0x14]
  40d0fc:	mov    edx,DWORD PTR [rbp-0x18]
  40d0ff:	mov    ecx,DWORD PTR [rbp-0x1c]
  40d102:	mov    eax,0x4
  40d107:	mov    r8d,eax
  40d10a:	mov    r9d,eax
  40d10d:	mov    DWORD PTR [rsp],0x3fffffff
  40d114:	call   40b8b0 <flatcc_verify_vector_field@@Base+0xf0>
  40d119:	cmp    eax,0x0
  40d11c:	je     40d14e <flatcc_verify_union_vector_field@@Base+0x30e>
  40d122:	mov    rdi,QWORD PTR [rbp-0x10]
  40d126:	mov    esi,DWORD PTR [rbp-0x14]
  40d129:	mov    edx,DWORD PTR [rbp-0x18]
  40d12c:	mov    ecx,DWORD PTR [rbp-0x1c]
  40d12f:	mov    eax,0x4
  40d134:	mov    r8d,eax
  40d137:	mov    r9d,eax
  40d13a:	mov    DWORD PTR [rsp],0x3fffffff
  40d141:	call   40b8b0 <flatcc_verify_vector_field@@Base+0xf0>
  40d146:	mov    DWORD PTR [rbp-0x4],eax
  40d149:	jmp    40d2cd <flatcc_verify_union_vector_field@@Base+0x48d>
  40d14e:	mov    eax,DWORD PTR [rbp-0x1c]
  40d151:	add    eax,DWORD PTR [rbp-0x18]
  40d154:	mov    DWORD PTR [rbp-0x18],eax
  40d157:	mov    rdi,QWORD PTR [rbp-0x10]
  40d15b:	mov    esi,DWORD PTR [rbp-0x18]
  40d15e:	call   40b790 <flatcc_verify_string_field@@Base+0x2e0>
  40d163:	mov    DWORD PTR [rbp-0x30],eax
  40d166:	mov    eax,DWORD PTR [rbp-0x30]
  40d169:	cmp    eax,DWORD PTR [rbp-0x20]
  40d16c:	sete   cl
  40d16f:	and    cl,0x1
  40d172:	movzx  eax,cl
  40d175:	mov    DWORD PTR [rbp-0x60],eax
  40d178:	cmp    DWORD PTR [rbp-0x60],0x0
  40d17c:	jne    40d18e <flatcc_verify_union_vector_field@@Base+0x34e>
  40d182:	mov    DWORD PTR [rbp-0x4],0x22
  40d189:	jmp    40d2cd <flatcc_verify_union_vector_field@@Base+0x48d>
  40d18e:	jmp    40d193 <flatcc_verify_union_vector_field@@Base+0x353>
  40d193:	mov    eax,DWORD PTR [rbp-0x18]
  40d196:	mov    ecx,eax
  40d198:	add    rcx,0x4
  40d19c:	mov    eax,ecx
  40d19e:	mov    DWORD PTR [rbp-0x18],eax
  40d1a1:	mov    rcx,QWORD PTR [rbp-0x10]
  40d1a5:	mov    QWORD PTR [rbp-0x58],rcx
  40d1a9:	mov    eax,DWORD PTR [rbp-0x14]
  40d1ac:	mov    DWORD PTR [rbp-0x50],eax
  40d1af:	mov    eax,DWORD PTR [rbp+0x10]
  40d1b2:	mov    DWORD PTR [rbp-0x4c],eax
  40d1b5:	mov    DWORD PTR [rbp-0x2c],0x0
  40d1bc:	mov    eax,DWORD PTR [rbp-0x2c]
  40d1bf:	cmp    eax,DWORD PTR [rbp-0x30]
  40d1c2:	jae    40d2c6 <flatcc_verify_union_vector_field@@Base+0x486>
  40d1c8:	mov    rdi,QWORD PTR [rbp-0x10]
  40d1cc:	mov    esi,DWORD PTR [rbp-0x18]
  40d1cf:	call   40b790 <flatcc_verify_string_field@@Base+0x2e0>
  40d1d4:	mov    DWORD PTR [rbp-0x34],eax
  40d1d7:	cmp    DWORD PTR [rbp-0x34],0x0
  40d1db:	jne    40d225 <flatcc_verify_union_vector_field@@Base+0x3e5>
  40d1e1:	jmp    40d1e6 <flatcc_verify_union_vector_field@@Base+0x3a6>
  40d1e6:	mov    rax,QWORD PTR [rbp-0x28]
  40d1ea:	mov    ecx,DWORD PTR [rbp-0x2c]
  40d1ed:	mov    edx,ecx
  40d1ef:	movzx  ecx,BYTE PTR [rax+rdx*1]
  40d1f3:	cmp    ecx,0x0
  40d1f6:	sete   sil
  40d1fa:	and    sil,0x1
  40d1fe:	movzx  ecx,sil
  40d202:	mov    DWORD PTR [rbp-0x64],ecx
  40d205:	cmp    DWORD PTR [rbp-0x64],0x0
  40d209:	jne    40d21b <flatcc_verify_union_vector_field@@Base+0x3db>
  40d20f:	mov    DWORD PTR [rbp-0x4],0x20
  40d216:	jmp    40d2cd <flatcc_verify_union_vector_field@@Base+0x48d>
  40d21b:	jmp    40d220 <flatcc_verify_union_vector_field@@Base+0x3e0>
  40d220:	jmp    40d2a5 <flatcc_verify_union_vector_field@@Base+0x465>
  40d225:	jmp    40d22a <flatcc_verify_union_vector_field@@Base+0x3ea>
  40d22a:	mov    rax,QWORD PTR [rbp-0x28]
  40d22e:	mov    ecx,DWORD PTR [rbp-0x2c]
  40d231:	mov    edx,ecx
  40d233:	movzx  ecx,BYTE PTR [rax+rdx*1]
  40d237:	cmp    ecx,0x0
  40d23a:	setne  sil
  40d23e:	and    sil,0x1
  40d242:	movzx  ecx,sil
  40d246:	mov    DWORD PTR [rbp-0x68],ecx
  40d249:	cmp    DWORD PTR [rbp-0x68],0x0
  40d24d:	jne    40d25f <flatcc_verify_union_vector_field@@Base+0x41f>
  40d253:	mov    DWORD PTR [rbp-0x4],0x21
  40d25a:	jmp    40d2cd <flatcc_verify_union_vector_field@@Base+0x48d>
  40d25f:	jmp    40d264 <flatcc_verify_union_vector_field@@Base+0x424>
  40d264:	mov    rax,QWORD PTR [rbp-0x28]
  40d268:	mov    ecx,DWORD PTR [rbp-0x2c]
  40d26b:	mov    edx,ecx
  40d26d:	mov    sil,BYTE PTR [rax+rdx*1]
  40d271:	mov    BYTE PTR [rbp-0x48],sil
  40d275:	mov    ecx,DWORD PTR [rbp-0x18]
  40d278:	mov    DWORD PTR [rbp-0x44],ecx
  40d27b:	mov    ecx,DWORD PTR [rbp-0x34]
  40d27e:	mov    DWORD PTR [rbp-0x40],ecx
  40d281:	lea    rdi,[rbp-0x58]
  40d285:	call   QWORD PTR [rbp+0x18]
  40d288:	cmp    eax,0x0
  40d28b:	je     40d2a0 <flatcc_verify_union_vector_field@@Base+0x460>
  40d291:	lea    rdi,[rbp-0x58]
  40d295:	call   QWORD PTR [rbp+0x18]
  40d298:	mov    DWORD PTR [rbp-0x4],eax
  40d29b:	jmp    40d2cd <flatcc_verify_union_vector_field@@Base+0x48d>
  40d2a0:	jmp    40d2a5 <flatcc_verify_union_vector_field@@Base+0x465>
  40d2a5:	jmp    40d2aa <flatcc_verify_union_vector_field@@Base+0x46a>
  40d2aa:	mov    eax,DWORD PTR [rbp-0x2c]
  40d2ad:	add    eax,0x1
  40d2b0:	mov    DWORD PTR [rbp-0x2c],eax
  40d2b3:	mov    eax,DWORD PTR [rbp-0x18]
  40d2b6:	mov    ecx,eax
  40d2b8:	add    rcx,0x4
  40d2bc:	mov    eax,ecx
  40d2be:	mov    DWORD PTR [rbp-0x18],eax
  40d2c1:	jmp    40d1bc <flatcc_verify_union_vector_field@@Base+0x37c>
  40d2c6:	mov    DWORD PTR [rbp-0x4],0x0
  40d2cd:	mov    eax,DWORD PTR [rbp-0x4]
  40d2d0:	add    rsp,0x80
  40d2d7:	pop    rbp
  40d2d8:	ret    
  40d2d9:	nop    DWORD PTR [rax+0x0]
  40d2e0:	push   rbp
  40d2e1:	mov    rbp,rsp
  40d2e4:	xor    eax,eax
  40d2e6:	mov    cl,al
  40d2e8:	mov    DWORD PTR [rbp-0x4],edi
  40d2eb:	mov    DWORD PTR [rbp-0x8],esi
  40d2ee:	mov    DWORD PTR [rbp-0xc],edx
  40d2f1:	mov    eax,DWORD PTR [rbp-0x8]
  40d2f4:	add    eax,DWORD PTR [rbp-0xc]
  40d2f7:	mov    DWORD PTR [rbp-0x10],eax
  40d2fa:	mov    eax,DWORD PTR [rbp-0x10]
  40d2fd:	cmp    eax,DWORD PTR [rbp-0x8]
  40d300:	mov    BYTE PTR [rbp-0x11],cl
  40d303:	jbe    40d33d <flatcc_verify_union_vector_field@@Base+0x4fd>
  40d309:	xor    eax,eax
  40d30b:	mov    cl,al
  40d30d:	mov    eax,DWORD PTR [rbp-0x10]
  40d310:	mov    edx,eax
  40d312:	add    rdx,0x4
  40d316:	mov    eax,DWORD PTR [rbp-0x4]
  40d319:	mov    esi,eax
  40d31b:	cmp    rdx,rsi
  40d31e:	mov    BYTE PTR [rbp-0x11],cl
  40d321:	ja     40d33d <flatcc_verify_union_vector_field@@Base+0x4fd>
  40d327:	mov    eax,DWORD PTR [rbp-0x10]
  40d32a:	mov    ecx,eax
  40d32c:	and    rcx,0x3
  40d330:	cmp    rcx,0x0
  40d334:	setne  dl
  40d337:	xor    dl,0xff
  40d33a:	mov    BYTE PTR [rbp-0x11],dl
  40d33d:	mov    al,BYTE PTR [rbp-0x11]
  40d340:	and    al,0x1
  40d342:	movzx  eax,al
  40d345:	pop    rbp
  40d346:	ret    
  40d347:	nop    WORD PTR [rax+rax*1+0x0]
  40d350:	push   rbp
  40d351:	mov    rbp,rsp
  40d354:	sub    rsp,0x10
  40d358:	mov    QWORD PTR [rbp-0x8],rdi
  40d35c:	mov    rdi,QWORD PTR [rbp-0x8]
  40d360:	mov    edi,DWORD PTR [rdi]
  40d362:	call   40d370 <flatcc_verify_union_vector_field@@Base+0x530>
  40d367:	add    rsp,0x10
  40d36b:	pop    rbp
  40d36c:	ret    
  40d36d:	nop    DWORD PTR [rax]
  40d370:	push   rbp
  40d371:	mov    rbp,rsp
  40d374:	mov    DWORD PTR [rbp-0x4],edi
  40d377:	mov    eax,DWORD PTR [rbp-0x4]
  40d37a:	pop    rbp
  40d37b:	ret    
  40d37c:	nop    DWORD PTR [rax+0x0]
  40d380:	push   rbp
  40d381:	mov    rbp,rsp
  40d384:	mov    ax,cx
  40d387:	mov    DWORD PTR [rbp-0x4],edi
  40d38a:	mov    DWORD PTR [rbp-0x8],esi
  40d38d:	mov    DWORD PTR [rbp-0xc],edx
  40d390:	mov    WORD PTR [rbp-0xe],ax
  40d394:	mov    ecx,DWORD PTR [rbp-0x8]
  40d397:	add    ecx,DWORD PTR [rbp-0xc]
  40d39a:	mov    DWORD PTR [rbp-0x14],ecx
  40d39d:	movzx  ecx,WORD PTR [rbp-0xe]
  40d3a1:	mov    r8d,ecx
  40d3a4:	cmp    r8,0x4
  40d3a8:	jae    40d3be <flatcc_verify_union_vector_field@@Base+0x57e>
  40d3ae:	mov    eax,0x4
  40d3b3:	mov    ecx,eax
  40d3b5:	mov    QWORD PTR [rbp-0x20],rcx
  40d3b9:	jmp    40d3c8 <flatcc_verify_union_vector_field@@Base+0x588>
  40d3be:	movzx  eax,WORD PTR [rbp-0xe]
  40d3c2:	mov    ecx,eax
  40d3c4:	mov    QWORD PTR [rbp-0x20],rcx
  40d3c8:	mov    rax,QWORD PTR [rbp-0x20]
  40d3cc:	xor    ecx,ecx
  40d3ce:	mov    dl,cl
  40d3d0:	mov    si,ax
  40d3d3:	mov    WORD PTR [rbp-0xe],si
  40d3d7:	mov    ecx,DWORD PTR [rbp-0x14]
  40d3da:	cmp    ecx,DWORD PTR [rbp-0x8]
  40d3dd:	mov    BYTE PTR [rbp-0x21],dl
  40d3e0:	jbe    40d42e <flatcc_verify_union_vector_field@@Base+0x5ee>
  40d3e6:	xor    eax,eax
  40d3e8:	mov    cl,al
  40d3ea:	mov    eax,DWORD PTR [rbp-0x14]
  40d3ed:	mov    edx,eax
  40d3ef:	add    rdx,0x4
  40d3f3:	mov    eax,DWORD PTR [rbp-0x4]
  40d3f6:	mov    esi,eax
  40d3f8:	cmp    rdx,rsi
  40d3fb:	mov    BYTE PTR [rbp-0x21],cl
  40d3fe:	ja     40d42e <flatcc_verify_union_vector_field@@Base+0x5ee>
  40d404:	mov    eax,DWORD PTR [rbp-0x14]
  40d407:	mov    ecx,eax
  40d409:	add    rcx,0x4
  40d40d:	movzx  eax,WORD PTR [rbp-0xe]
  40d411:	sub    eax,0x1
  40d414:	movsxd rdx,eax
  40d417:	or     rdx,0x3
  40d41b:	and    rcx,rdx
  40d41e:	cmp    rcx,0x0
  40d422:	setne  sil
  40d426:	xor    sil,0xff
  40d42a:	mov    BYTE PTR [rbp-0x21],sil
  40d42e:	mov    al,BYTE PTR [rbp-0x21]
  40d431:	and    al,0x1
  40d433:	movzx  eax,al
  40d436:	pop    rbp
  40d437:	ret    
  40d438:	nop    DWORD PTR [rax+rax*1+0x0]
  40d440:	push   rbp
  40d441:	mov    rbp,rsp
  40d444:	sub    rsp,0x10
  40d448:	mov    QWORD PTR [rbp-0x8],rdi
  40d44c:	mov    DWORD PTR [rbp-0xc],esi
  40d44f:	mov    rdi,QWORD PTR [rbp-0x8]
  40d453:	mov    esi,DWORD PTR [rbp-0xc]
  40d456:	mov    eax,esi
  40d458:	add    rdi,rax
  40d45b:	call   40d470 <flatcc_verify_union_vector_field@@Base+0x630>
  40d460:	movzx  eax,ax
  40d463:	add    rsp,0x10
  40d467:	pop    rbp
  40d468:	ret    
  40d469:	nop    DWORD PTR [rax+0x0]
  40d470:	push   rbp
  40d471:	mov    rbp,rsp
  40d474:	sub    rsp,0x10
  40d478:	mov    QWORD PTR [rbp-0x8],rdi
  40d47c:	mov    rdi,QWORD PTR [rbp-0x8]
  40d480:	movzx  edi,WORD PTR [rdi]
  40d483:	call   40d4a0 <flatcc_verify_union_vector_field@@Base+0x660>
  40d488:	movzx  eax,ax
  40d48b:	add    rsp,0x10
  40d48f:	pop    rbp
  40d490:	ret    
  40d491:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40d49b:	nop    DWORD PTR [rax+rax*1+0x0]
  40d4a0:	push   rbp
  40d4a1:	mov    rbp,rsp
  40d4a4:	mov    ax,di
  40d4a7:	mov    WORD PTR [rbp-0x2],ax
  40d4ab:	movzx  eax,WORD PTR [rbp-0x2]
  40d4af:	pop    rbp
  40d4b0:	ret    
  40d4b1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40d4bb:	nop    DWORD PTR [rax+rax*1+0x0]
  40d4c0:	push   rbp
  40d4c1:	mov    rbp,rsp
  40d4c4:	mov    DWORD PTR [rbp-0x4],edi
  40d4c7:	mov    eax,DWORD PTR [rbp-0x4]
  40d4ca:	pop    rbp
  40d4cb:	ret    
  40d4cc:	nop    DWORD PTR [rax+0x0]
  40d4d0:	push   rbp
  40d4d1:	mov    rbp,rsp
  40d4d4:	sub    rsp,0x10
  40d4d8:	mov    QWORD PTR [rbp-0x8],rdi
  40d4dc:	mov    rdi,QWORD PTR [rbp-0x8]
  40d4e0:	mov    edi,DWORD PTR [rdi]
  40d4e2:	call   40d4f0 <flatcc_verify_union_vector_field@@Base+0x6b0>
  40d4e7:	add    rsp,0x10
  40d4eb:	pop    rbp
  40d4ec:	ret    
  40d4ed:	nop    DWORD PTR [rax]
  40d4f0:	push   rbp
  40d4f1:	mov    rbp,rsp
  40d4f4:	mov    DWORD PTR [rbp-0x4],edi
  40d4f7:	mov    eax,DWORD PTR [rbp-0x4]
  40d4fa:	pop    rbp
  40d4fb:	ret    
  40d4fc:	nop    DWORD PTR [rax+0x0]

000000000040d500 <__libc_csu_init@@Base>:
  40d500:	endbr64 
  40d504:	push   r15
  40d506:	lea    r15,[rip+0x58f3]        # 412e00 <flatcc_builder_padding_base@@Base+0x4c30>
  40d50d:	push   r14
  40d50f:	mov    r14,rdx
  40d512:	push   r13
  40d514:	mov    r13,rsi
  40d517:	push   r12
  40d519:	mov    r12d,edi
  40d51c:	push   rbp
  40d51d:	lea    rbp,[rip+0x58e4]        # 412e08 <flatcc_builder_padding_base@@Base+0x4c38>
  40d524:	push   rbx
  40d525:	sub    rbp,r15
  40d528:	sub    rsp,0x8
  40d52c:	call   403000 <free@plt-0x30>
  40d531:	sar    rbp,0x3
  40d535:	je     40d556 <__libc_csu_init@@Base+0x56>
  40d537:	xor    ebx,ebx
  40d539:	nop    DWORD PTR [rax+0x0]
  40d540:	mov    rdx,r14
  40d543:	mov    rsi,r13
  40d546:	mov    edi,r12d
  40d549:	call   QWORD PTR [r15+rbx*8]
  40d54d:	add    rbx,0x1
  40d551:	cmp    rbp,rbx
  40d554:	jne    40d540 <__libc_csu_init@@Base+0x40>
  40d556:	add    rsp,0x8
  40d55a:	pop    rbx
  40d55b:	pop    rbp
  40d55c:	pop    r12
  40d55e:	pop    r13
  40d560:	pop    r14
  40d562:	pop    r15
  40d564:	ret    
  40d565:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

000000000040d570 <__libc_csu_fini@@Base>:
  40d570:	endbr64 
  40d574:	ret    

Disassembly of section .fini:

000000000040d578 <.fini>:
  40d578:	endbr64 
  40d57c:	sub    rsp,0x8
  40d580:	add    rsp,0x8
  40d584:	ret    
