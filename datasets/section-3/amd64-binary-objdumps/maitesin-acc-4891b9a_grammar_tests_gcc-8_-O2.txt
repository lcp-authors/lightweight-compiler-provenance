
../repos/maitesin-acc-4891b9a/bin/grammar_tests:     file format elf64-x86-64


Disassembly of section .init:

0000000000402000 <.init>:
  402000:	endbr64 
  402004:	sub    rsp,0x8
  402008:	mov    rax,QWORD PTR [rip+0x9fe1]        # 40bff0 <__gmon_start__>
  40200f:	test   rax,rax
  402012:	je     402016 <getenv@plt-0x22a>
  402014:	call   rax
  402016:	add    rsp,0x8
  40201a:	ret    

Disassembly of section .plt:

0000000000402020 <.plt>:
  402020:	push   QWORD PTR [rip+0x9fe2]        # 40c008 <_IO_stdin_used@@Base+0x4008>
  402026:	bnd jmp QWORD PTR [rip+0x9fe3]        # 40c010 <_IO_stdin_used@@Base+0x4010>
  40202d:	nop    DWORD PTR [rax]
  402030:	endbr64 
  402034:	push   0x0
  402039:	bnd jmp 402020 <getenv@plt-0x220>
  40203f:	nop
  402040:	endbr64 
  402044:	push   0x1
  402049:	bnd jmp 402020 <getenv@plt-0x220>
  40204f:	nop
  402050:	endbr64 
  402054:	push   0x2
  402059:	bnd jmp 402020 <getenv@plt-0x220>
  40205f:	nop
  402060:	endbr64 
  402064:	push   0x3
  402069:	bnd jmp 402020 <getenv@plt-0x220>
  40206f:	nop
  402070:	endbr64 
  402074:	push   0x4
  402079:	bnd jmp 402020 <getenv@plt-0x220>
  40207f:	nop
  402080:	endbr64 
  402084:	push   0x5
  402089:	bnd jmp 402020 <getenv@plt-0x220>
  40208f:	nop
  402090:	endbr64 
  402094:	push   0x6
  402099:	bnd jmp 402020 <getenv@plt-0x220>
  40209f:	nop
  4020a0:	endbr64 
  4020a4:	push   0x7
  4020a9:	bnd jmp 402020 <getenv@plt-0x220>
  4020af:	nop
  4020b0:	endbr64 
  4020b4:	push   0x8
  4020b9:	bnd jmp 402020 <getenv@plt-0x220>
  4020bf:	nop
  4020c0:	endbr64 
  4020c4:	push   0x9
  4020c9:	bnd jmp 402020 <getenv@plt-0x220>
  4020cf:	nop
  4020d0:	endbr64 
  4020d4:	push   0xa
  4020d9:	bnd jmp 402020 <getenv@plt-0x220>
  4020df:	nop
  4020e0:	endbr64 
  4020e4:	push   0xb
  4020e9:	bnd jmp 402020 <getenv@plt-0x220>
  4020ef:	nop
  4020f0:	endbr64 
  4020f4:	push   0xc
  4020f9:	bnd jmp 402020 <getenv@plt-0x220>
  4020ff:	nop
  402100:	endbr64 
  402104:	push   0xd
  402109:	bnd jmp 402020 <getenv@plt-0x220>
  40210f:	nop
  402110:	endbr64 
  402114:	push   0xe
  402119:	bnd jmp 402020 <getenv@plt-0x220>
  40211f:	nop
  402120:	endbr64 
  402124:	push   0xf
  402129:	bnd jmp 402020 <getenv@plt-0x220>
  40212f:	nop
  402130:	endbr64 
  402134:	push   0x10
  402139:	bnd jmp 402020 <getenv@plt-0x220>
  40213f:	nop
  402140:	endbr64 
  402144:	push   0x11
  402149:	bnd jmp 402020 <getenv@plt-0x220>
  40214f:	nop
  402150:	endbr64 
  402154:	push   0x12
  402159:	bnd jmp 402020 <getenv@plt-0x220>
  40215f:	nop
  402160:	endbr64 
  402164:	push   0x13
  402169:	bnd jmp 402020 <getenv@plt-0x220>
  40216f:	nop
  402170:	endbr64 
  402174:	push   0x14
  402179:	bnd jmp 402020 <getenv@plt-0x220>
  40217f:	nop
  402180:	endbr64 
  402184:	push   0x15
  402189:	bnd jmp 402020 <getenv@plt-0x220>
  40218f:	nop
  402190:	endbr64 
  402194:	push   0x16
  402199:	bnd jmp 402020 <getenv@plt-0x220>
  40219f:	nop
  4021a0:	endbr64 
  4021a4:	push   0x17
  4021a9:	bnd jmp 402020 <getenv@plt-0x220>
  4021af:	nop
  4021b0:	endbr64 
  4021b4:	push   0x18
  4021b9:	bnd jmp 402020 <getenv@plt-0x220>
  4021bf:	nop
  4021c0:	endbr64 
  4021c4:	push   0x19
  4021c9:	bnd jmp 402020 <getenv@plt-0x220>
  4021cf:	nop
  4021d0:	endbr64 
  4021d4:	push   0x1a
  4021d9:	bnd jmp 402020 <getenv@plt-0x220>
  4021df:	nop
  4021e0:	endbr64 
  4021e4:	push   0x1b
  4021e9:	bnd jmp 402020 <getenv@plt-0x220>
  4021ef:	nop
  4021f0:	endbr64 
  4021f4:	push   0x1c
  4021f9:	bnd jmp 402020 <getenv@plt-0x220>
  4021ff:	nop
  402200:	endbr64 
  402204:	push   0x1d
  402209:	bnd jmp 402020 <getenv@plt-0x220>
  40220f:	nop
  402210:	endbr64 
  402214:	push   0x1e
  402219:	bnd jmp 402020 <getenv@plt-0x220>
  40221f:	nop
  402220:	endbr64 
  402224:	push   0x1f
  402229:	bnd jmp 402020 <getenv@plt-0x220>
  40222f:	nop
  402230:	endbr64 
  402234:	push   0x20
  402239:	bnd jmp 402020 <getenv@plt-0x220>
  40223f:	nop

Disassembly of section .plt.sec:

0000000000402240 <getenv@plt>:
  402240:	endbr64 
  402244:	bnd jmp QWORD PTR [rip+0x9dcd]        # 40c018 <getenv@GLIBC_2.2.5>
  40224b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402250 <free@plt>:
  402250:	endbr64 
  402254:	bnd jmp QWORD PTR [rip+0x9dc5]        # 40c020 <free@GLIBC_2.2.5>
  40225b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402260 <__vfprintf_chk@plt>:
  402260:	endbr64 
  402264:	bnd jmp QWORD PTR [rip+0x9dbd]        # 40c028 <__vfprintf_chk@GLIBC_2.3.4>
  40226b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402270 <abort@plt>:
  402270:	endbr64 
  402274:	bnd jmp QWORD PTR [rip+0x9db5]        # 40c030 <abort@GLIBC_2.2.5>
  40227b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402280 <__errno_location@plt>:
  402280:	endbr64 
  402284:	bnd jmp QWORD PTR [rip+0x9dad]        # 40c038 <__errno_location@GLIBC_2.2.5>
  40228b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402290 <strcpy@plt>:
  402290:	endbr64 
  402294:	bnd jmp QWORD PTR [rip+0x9da5]        # 40c040 <strcpy@GLIBC_2.2.5>
  40229b:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004022a0 <mkdir@plt>:
  4022a0:	endbr64 
  4022a4:	bnd jmp QWORD PTR [rip+0x9d9d]        # 40c048 <mkdir@GLIBC_2.2.5>
  4022ab:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004022b0 <puts@plt>:
  4022b0:	endbr64 
  4022b4:	bnd jmp QWORD PTR [rip+0x9d95]        # 40c050 <puts@GLIBC_2.2.5>
  4022bb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004022c0 <fread@plt>:
  4022c0:	endbr64 
  4022c4:	bnd jmp QWORD PTR [rip+0x9d8d]        # 40c058 <fread@GLIBC_2.2.5>
  4022cb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004022d0 <fcntl@plt>:
  4022d0:	endbr64 
  4022d4:	bnd jmp QWORD PTR [rip+0x9d85]        # 40c060 <fcntl@GLIBC_2.2.5>
  4022db:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004022e0 <getpid@plt>:
  4022e0:	endbr64 
  4022e4:	bnd jmp QWORD PTR [rip+0x9d7d]        # 40c068 <getpid@GLIBC_2.2.5>
  4022eb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004022f0 <fclose@plt>:
  4022f0:	endbr64 
  4022f4:	bnd jmp QWORD PTR [rip+0x9d75]        # 40c070 <fclose@GLIBC_2.2.5>
  4022fb:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402300 <strlen@plt>:
  402300:	endbr64 
  402304:	bnd jmp QWORD PTR [rip+0x9d6d]        # 40c078 <strlen@GLIBC_2.2.5>
  40230b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402310 <__stack_chk_fail@plt>:
  402310:	endbr64 
  402314:	bnd jmp QWORD PTR [rip+0x9d65]        # 40c080 <__stack_chk_fail@GLIBC_2.4>
  40231b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402320 <setbuf@plt>:
  402320:	endbr64 
  402324:	bnd jmp QWORD PTR [rip+0x9d5d]        # 40c088 <setbuf@GLIBC_2.2.5>
  40232b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402330 <__assert_fail@plt>:
  402330:	endbr64 
  402334:	bnd jmp QWORD PTR [rip+0x9d55]        # 40c090 <__assert_fail@GLIBC_2.2.5>
  40233b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402340 <memset@plt>:
  402340:	endbr64 
  402344:	bnd jmp QWORD PTR [rip+0x9d4d]        # 40c098 <memset@GLIBC_2.2.5>
  40234b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402350 <strnlen@plt>:
  402350:	endbr64 
  402354:	bnd jmp QWORD PTR [rip+0x9d45]        # 40c0a0 <strnlen@GLIBC_2.2.5>
  40235b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402360 <close@plt>:
  402360:	endbr64 
  402364:	bnd jmp QWORD PTR [rip+0x9d3d]        # 40c0a8 <close@GLIBC_2.2.5>
  40236b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402370 <ftell@plt>:
  402370:	endbr64 
  402374:	bnd jmp QWORD PTR [rip+0x9d35]        # 40c0b0 <ftell@GLIBC_2.2.5>
  40237b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402380 <strtol@plt>:
  402380:	endbr64 
  402384:	bnd jmp QWORD PTR [rip+0x9d2d]        # 40c0b8 <strtol@GLIBC_2.2.5>
  40238b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402390 <memcpy@plt>:
  402390:	endbr64 
  402394:	bnd jmp QWORD PTR [rip+0x9d25]        # 40c0c0 <memcpy@GLIBC_2.14>
  40239b:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004023a0 <malloc@plt>:
  4023a0:	endbr64 
  4023a4:	bnd jmp QWORD PTR [rip+0x9d1d]        # 40c0c8 <malloc@GLIBC_2.2.5>
  4023ab:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004023b0 <fflush@plt>:
  4023b0:	endbr64 
  4023b4:	bnd jmp QWORD PTR [rip+0x9d15]        # 40c0d0 <fflush@GLIBC_2.2.5>
  4023bb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004023c0 <fseek@plt>:
  4023c0:	endbr64 
  4023c4:	bnd jmp QWORD PTR [rip+0x9d0d]        # 40c0d8 <fseek@GLIBC_2.2.5>
  4023cb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004023d0 <fdopen@plt>:
  4023d0:	endbr64 
  4023d4:	bnd jmp QWORD PTR [rip+0x9d05]        # 40c0e0 <fdopen@GLIBC_2.2.5>
  4023db:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004023e0 <__printf_chk@plt>:
  4023e0:	endbr64 
  4023e4:	bnd jmp QWORD PTR [rip+0x9cfd]        # 40c0e8 <__printf_chk@GLIBC_2.3.4>
  4023eb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004023f0 <open@plt>:
  4023f0:	endbr64 
  4023f4:	bnd jmp QWORD PTR [rip+0x9cf5]        # 40c0f0 <open@GLIBC_2.2.5>
  4023fb:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402400 <access@plt>:
  402400:	endbr64 
  402404:	bnd jmp QWORD PTR [rip+0x9ced]        # 40c0f8 <access@GLIBC_2.2.5>
  40240b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402410 <fopen@plt>:
  402410:	endbr64 
  402414:	bnd jmp QWORD PTR [rip+0x9ce5]        # 40c100 <fopen@GLIBC_2.2.5>
  40241b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402420 <exit@plt>:
  402420:	endbr64 
  402424:	bnd jmp QWORD PTR [rip+0x9cdd]        # 40c108 <exit@GLIBC_2.2.5>
  40242b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402430 <fwrite@plt>:
  402430:	endbr64 
  402434:	bnd jmp QWORD PTR [rip+0x9cd5]        # 40c110 <fwrite@GLIBC_2.2.5>
  40243b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402440 <__fprintf_chk@plt>:
  402440:	endbr64 
  402444:	bnd jmp QWORD PTR [rip+0x9ccd]        # 40c118 <__fprintf_chk@GLIBC_2.3.4>
  40244b:	nop    DWORD PTR [rax+rax*1+0x0]

Disassembly of section .text:

0000000000402450 <main@@Base-0x50>:
  402450:	call   402270 <abort@plt>
  402455:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40245f:	nop
  402460:	endbr64 
  402464:	jmp    407bd0 <__gcov_sort_n_vals@@Base+0x1670>
  402469:	nop    DWORD PTR [rax+0x0]
  402470:	endbr64 
  402474:	jmp    407bd0 <__gcov_sort_n_vals@@Base+0x1670>
  402479:	nop    DWORD PTR [rax+0x0]
  402480:	endbr64 
  402484:	jmp    407bd0 <__gcov_sort_n_vals@@Base+0x1670>
  402489:	nop    DWORD PTR [rax+0x0]
  402490:	endbr64 
  402494:	jmp    407bd0 <__gcov_sort_n_vals@@Base+0x1670>
  402499:	nop    DWORD PTR [rax+0x0]

00000000004024a0 <main@@Base>:
  4024a0:	endbr64 
  4024a4:	push   rbx
  4024a5:	mov    rbx,QWORD PTR [rip+0x9b34]        # 40bfe0 <stdout@GLIBC_2.2.5>
  4024ac:	xor    esi,esi
  4024ae:	mov    rdi,QWORD PTR [rbx]
  4024b1:	inc    QWORD PTR [rip+0xb968]        # 40de20 <__bss_start@@Base+0x6b0>
  4024b8:	call   402320 <setbuf@plt>
  4024bd:	mov    rcx,QWORD PTR [rbx]
  4024c0:	mov    edx,0xe
  4024c5:	mov    esi,0x1
  4024ca:	lea    rdi,[rip+0x5f56]        # 408427 <_IO_stdin_used@@Base+0x427>
  4024d1:	inc    QWORD PTR [rip+0xb950]        # 40de28 <__bss_start@@Base+0x6b8>
  4024d8:	call   402430 <fwrite@plt>
  4024dd:	mov    rcx,QWORD PTR [rbx]
  4024e0:	mov    edx,0xe
  4024e5:	mov    esi,0x1
  4024ea:	lea    rdi,[rip+0x5f45]        # 408436 <_IO_stdin_used@@Base+0x436>
  4024f1:	inc    QWORD PTR [rip+0xb938]        # 40de30 <__bss_start@@Base+0x6c0>
  4024f8:	call   402430 <fwrite@plt>
  4024fd:	mov    rcx,QWORD PTR [rbx]
  402500:	mov    edx,0xf
  402505:	mov    esi,0x1
  40250a:	lea    rdi,[rip+0x5f34]        # 408445 <_IO_stdin_used@@Base+0x445>
  402511:	inc    QWORD PTR [rip+0xb920]        # 40de38 <__bss_start@@Base+0x6c8>
  402518:	call   402430 <fwrite@plt>
  40251d:	xor    edi,edi
  40251f:	inc    QWORD PTR [rip+0xb91a]        # 40de40 <__bss_start@@Base+0x6d0>
  402526:	call   4023b0 <fflush@plt>
  40252b:	lea    rcx,[rip+0x5f23]        # 408455 <_IO_stdin_used@@Base+0x455>
  402532:	lea    rdx,[rip+0x5f32]        # 40846b <_IO_stdin_used@@Base+0x46b>
  402539:	lea    rsi,[rip+0x5f37]        # 408477 <_IO_stdin_used@@Base+0x477>
  402540:	mov    edi,0x1
  402545:	xor    eax,eax
  402547:	inc    QWORD PTR [rip+0xb8fa]        # 40de48 <__bss_start@@Base+0x6d8>
  40254e:	call   4023e0 <__printf_chk@plt>
  402553:	xor    eax,eax
  402555:	inc    QWORD PTR [rip+0xb8f4]        # 40de50 <__bss_start@@Base+0x6e0>
  40255c:	call   402ce0 <setup@@Base>
  402561:	xor    eax,eax
  402563:	inc    QWORD PTR [rip+0xb8ee]        # 40de58 <__bss_start@@Base+0x6e8>
  40256a:	call   402d10 <no_int_as_first_stuff@@Base>
  40256f:	lea    rdi,[rip+0x5f13]        # 408489 <_IO_stdin_used@@Base+0x489>
  402576:	inc    QWORD PTR [rip+0xb8e3]        # 40de60 <__bss_start@@Base+0x6f0>
  40257d:	call   4022b0 <puts@plt>
  402582:	lea    rcx,[rip+0x5b1f]        # 4080a8 <_IO_stdin_used@@Base+0xa8>
  402589:	lea    rdx,[rip+0x5edb]        # 40846b <_IO_stdin_used@@Base+0x46b>
  402590:	lea    rsi,[rip+0x5ee0]        # 408477 <_IO_stdin_used@@Base+0x477>
  402597:	mov    edi,0x1
  40259c:	xor    eax,eax
  40259e:	inc    QWORD PTR [rip+0xb8c3]        # 40de68 <__bss_start@@Base+0x6f8>
  4025a5:	call   4023e0 <__printf_chk@plt>
  4025aa:	xor    eax,eax
  4025ac:	inc    QWORD PTR [rip+0xb8bd]        # 40de70 <__bss_start@@Base+0x700>
  4025b3:	call   402ce0 <setup@@Base>
  4025b8:	xor    eax,eax
  4025ba:	inc    QWORD PTR [rip+0xb8b7]        # 40de78 <__bss_start@@Base+0x708>
  4025c1:	call   402e00 <int_but_not_followed_by_function@@Base>
  4025c6:	lea    rdi,[rip+0x5ebc]        # 408489 <_IO_stdin_used@@Base+0x489>
  4025cd:	inc    QWORD PTR [rip+0xb8ac]        # 40de80 <__bss_start@@Base+0x710>
  4025d4:	call   4022b0 <puts@plt>
  4025d9:	lea    rcx,[rip+0x5af0]        # 4080d0 <_IO_stdin_used@@Base+0xd0>
  4025e0:	lea    rdx,[rip+0x5e84]        # 40846b <_IO_stdin_used@@Base+0x46b>
  4025e7:	lea    rsi,[rip+0x5e89]        # 408477 <_IO_stdin_used@@Base+0x477>
  4025ee:	mov    edi,0x1
  4025f3:	xor    eax,eax
  4025f5:	inc    QWORD PTR [rip+0xb88c]        # 40de88 <__bss_start@@Base+0x718>
  4025fc:	call   4023e0 <__printf_chk@plt>
  402601:	xor    eax,eax
  402603:	inc    QWORD PTR [rip+0xb886]        # 40de90 <__bss_start@@Base+0x720>
  40260a:	call   402ce0 <setup@@Base>
  40260f:	xor    eax,eax
  402611:	inc    QWORD PTR [rip+0xb880]        # 40de98 <__bss_start@@Base+0x728>
  402618:	call   4035a0 <boolean_unary_operator_is_read_properly@@Base>
  40261d:	lea    rdi,[rip+0x5e65]        # 408489 <_IO_stdin_used@@Base+0x489>
  402624:	inc    QWORD PTR [rip+0xb875]        # 40dea0 <__bss_start@@Base+0x730>
  40262b:	call   4022b0 <puts@plt>
  402630:	lea    rcx,[rip+0x5ac1]        # 4080f8 <_IO_stdin_used@@Base+0xf8>
  402637:	lea    rdx,[rip+0x5e2d]        # 40846b <_IO_stdin_used@@Base+0x46b>
  40263e:	lea    rsi,[rip+0x5e32]        # 408477 <_IO_stdin_used@@Base+0x477>
  402645:	mov    edi,0x1
  40264a:	xor    eax,eax
  40264c:	inc    QWORD PTR [rip+0xb855]        # 40dea8 <__bss_start@@Base+0x738>
  402653:	call   4023e0 <__printf_chk@plt>
  402658:	xor    eax,eax
  40265a:	inc    QWORD PTR [rip+0xb84f]        # 40deb0 <__bss_start@@Base+0x740>
  402661:	call   402ce0 <setup@@Base>
  402666:	xor    eax,eax
  402668:	inc    QWORD PTR [rip+0xb849]        # 40deb8 <__bss_start@@Base+0x748>
  40266f:	call   4033a0 <boolean_binary_operator_is_read_properly@@Base>
  402674:	lea    rdi,[rip+0x5e0e]        # 408489 <_IO_stdin_used@@Base+0x489>
  40267b:	inc    QWORD PTR [rip+0xb83e]        # 40dec0 <__bss_start@@Base+0x750>
  402682:	call   4022b0 <puts@plt>
  402687:	lea    rcx,[rip+0x5a9a]        # 408128 <_IO_stdin_used@@Base+0x128>
  40268e:	lea    rdx,[rip+0x5dd6]        # 40846b <_IO_stdin_used@@Base+0x46b>
  402695:	lea    rsi,[rip+0x5ddb]        # 408477 <_IO_stdin_used@@Base+0x477>
  40269c:	mov    edi,0x1
  4026a1:	xor    eax,eax
  4026a3:	inc    QWORD PTR [rip+0xb81e]        # 40dec8 <__bss_start@@Base+0x758>
  4026aa:	call   4023e0 <__printf_chk@plt>
  4026af:	xor    eax,eax
  4026b1:	inc    QWORD PTR [rip+0xb818]        # 40ded0 <__bss_start@@Base+0x760>
  4026b8:	call   402ce0 <setup@@Base>
  4026bd:	xor    eax,eax
  4026bf:	inc    QWORD PTR [rip+0xb812]        # 40ded8 <__bss_start@@Base+0x768>
  4026c6:	call   402f30 <boolean_expression_is_read_properly@@Base>
  4026cb:	lea    rdi,[rip+0x5db7]        # 408489 <_IO_stdin_used@@Base+0x489>
  4026d2:	inc    QWORD PTR [rip+0xb807]        # 40dee0 <__bss_start@@Base+0x770>
  4026d9:	call   4022b0 <puts@plt>
  4026de:	lea    rcx,[rip+0x5dad]        # 408492 <_IO_stdin_used@@Base+0x492>
  4026e5:	lea    rdx,[rip+0x5d7f]        # 40846b <_IO_stdin_used@@Base+0x46b>
  4026ec:	lea    rsi,[rip+0x5d84]        # 408477 <_IO_stdin_used@@Base+0x477>
  4026f3:	mov    edi,0x1
  4026f8:	xor    eax,eax
  4026fa:	inc    QWORD PTR [rip+0xb7e7]        # 40dee8 <__bss_start@@Base+0x778>
  402701:	call   4023e0 <__printf_chk@plt>
  402706:	xor    eax,eax
  402708:	inc    QWORD PTR [rip+0xb7e1]        # 40def0 <__bss_start@@Base+0x780>
  40270f:	call   402ce0 <setup@@Base>
  402714:	xor    eax,eax
  402716:	inc    QWORD PTR [rip+0xb7db]        # 40def8 <__bss_start@@Base+0x788>
  40271d:	call   403110 <boolean_expression_complex@@Base>
  402722:	lea    rdi,[rip+0x5d60]        # 408489 <_IO_stdin_used@@Base+0x489>
  402729:	inc    QWORD PTR [rip+0xb7d0]        # 40df00 <__bss_start@@Base+0x790>
  402730:	call   4022b0 <puts@plt>
  402735:	lea    rcx,[rip+0x5d71]        # 4084ad <_IO_stdin_used@@Base+0x4ad>
  40273c:	lea    rdx,[rip+0x5d28]        # 40846b <_IO_stdin_used@@Base+0x46b>
  402743:	lea    rsi,[rip+0x5d2d]        # 408477 <_IO_stdin_used@@Base+0x477>
  40274a:	mov    edi,0x1
  40274f:	xor    eax,eax
  402751:	inc    QWORD PTR [rip+0xb7b0]        # 40df08 <__bss_start@@Base+0x798>
  402758:	call   4023e0 <__printf_chk@plt>
  40275d:	xor    eax,eax
  40275f:	inc    QWORD PTR [rip+0xb7aa]        # 40df10 <__bss_start@@Base+0x7a0>
  402766:	call   402ce0 <setup@@Base>
  40276b:	xor    eax,eax
  40276d:	inc    QWORD PTR [rip+0xb7a4]        # 40df18 <__bss_start@@Base+0x7a8>
  402774:	call   403770 <if_statement_only@@Base>
  402779:	lea    rdi,[rip+0x5d09]        # 408489 <_IO_stdin_used@@Base+0x489>
  402780:	inc    QWORD PTR [rip+0xb799]        # 40df20 <__bss_start@@Base+0x7b0>
  402787:	call   4022b0 <puts@plt>
  40278c:	lea    rcx,[rip+0x5d2c]        # 4084bf <_IO_stdin_used@@Base+0x4bf>
  402793:	lea    rdx,[rip+0x5cd1]        # 40846b <_IO_stdin_used@@Base+0x46b>
  40279a:	lea    rsi,[rip+0x5cd6]        # 408477 <_IO_stdin_used@@Base+0x477>
  4027a1:	mov    edi,0x1
  4027a6:	xor    eax,eax
  4027a8:	inc    QWORD PTR [rip+0xb779]        # 40df28 <__bss_start@@Base+0x7b8>
  4027af:	call   4023e0 <__printf_chk@plt>
  4027b4:	xor    eax,eax
  4027b6:	inc    QWORD PTR [rip+0xb773]        # 40df30 <__bss_start@@Base+0x7c0>
  4027bd:	call   402ce0 <setup@@Base>
  4027c2:	inc    QWORD PTR [rip+0xb76f]        # 40df38 <__bss_start@@Base+0x7c8>
  4027c9:	xor    eax,eax
  4027cb:	call   4039c0 <if_else_statements@@Base>
  4027d0:	lea    rdi,[rip+0x5cb2]        # 408489 <_IO_stdin_used@@Base+0x489>
  4027d7:	inc    QWORD PTR [rip+0xb762]        # 40df40 <__bss_start@@Base+0x7d0>
  4027de:	call   4022b0 <puts@plt>
  4027e3:	lea    rcx,[rip+0x5966]        # 408150 <_IO_stdin_used@@Base+0x150>
  4027ea:	lea    rdx,[rip+0x5c7a]        # 40846b <_IO_stdin_used@@Base+0x46b>
  4027f1:	lea    rsi,[rip+0x5c7f]        # 408477 <_IO_stdin_used@@Base+0x477>
  4027f8:	mov    edi,0x1
  4027fd:	xor    eax,eax
  4027ff:	inc    QWORD PTR [rip+0xb742]        # 40df48 <__bss_start@@Base+0x7d8>
  402806:	call   4023e0 <__printf_chk@plt>
  40280b:	xor    eax,eax
  40280d:	inc    QWORD PTR [rip+0xb73c]        # 40df50 <__bss_start@@Base+0x7e0>
  402814:	call   402ce0 <setup@@Base>
  402819:	xor    eax,eax
  40281b:	inc    QWORD PTR [rip+0xb736]        # 40df58 <__bss_start@@Base+0x7e8>
  402822:	call   404090 <if_statement_inside_if_statement@@Base>
  402827:	lea    rdi,[rip+0x5c5b]        # 408489 <_IO_stdin_used@@Base+0x489>
  40282e:	inc    QWORD PTR [rip+0xb72b]        # 40df60 <__bss_start@@Base+0x7f0>
  402835:	call   4022b0 <puts@plt>
  40283a:	lea    rcx,[rip+0x5937]        # 408178 <_IO_stdin_used@@Base+0x178>
  402841:	lea    rdx,[rip+0x5c23]        # 40846b <_IO_stdin_used@@Base+0x46b>
  402848:	lea    rsi,[rip+0x5c28]        # 408477 <_IO_stdin_used@@Base+0x477>
  40284f:	mov    edi,0x1
  402854:	xor    eax,eax
  402856:	inc    QWORD PTR [rip+0xb70b]        # 40df68 <__bss_start@@Base+0x7f8>
  40285d:	call   4023e0 <__printf_chk@plt>
  402862:	xor    eax,eax
  402864:	inc    QWORD PTR [rip+0xb705]        # 40df70 <__bss_start@@Base+0x800>
  40286b:	call   402ce0 <setup@@Base>
  402870:	xor    eax,eax
  402872:	inc    QWORD PTR [rip+0xb6ff]        # 40df78 <__bss_start@@Base+0x808>
  402879:	call   404430 <if_statement_inside_else_statement@@Base>
  40287e:	lea    rdi,[rip+0x5c04]        # 408489 <_IO_stdin_used@@Base+0x489>
  402885:	inc    QWORD PTR [rip+0xb6f4]        # 40df80 <__bss_start@@Base+0x810>
  40288c:	call   4022b0 <puts@plt>
  402891:	lea    rcx,[rip+0x5c3a]        # 4084d2 <_IO_stdin_used@@Base+0x4d2>
  402898:	lea    rdx,[rip+0x5bcc]        # 40846b <_IO_stdin_used@@Base+0x46b>
  40289f:	lea    rsi,[rip+0x5bd1]        # 408477 <_IO_stdin_used@@Base+0x477>
  4028a6:	mov    edi,0x1
  4028ab:	xor    eax,eax
  4028ad:	inc    QWORD PTR [rip+0xb6d4]        # 40df88 <__bss_start@@Base+0x818>
  4028b4:	call   4023e0 <__printf_chk@plt>
  4028b9:	xor    eax,eax
  4028bb:	inc    QWORD PTR [rip+0xb6ce]        # 40df90 <__bss_start@@Base+0x820>
  4028c2:	call   402ce0 <setup@@Base>
  4028c7:	inc    QWORD PTR [rip+0xb6ca]        # 40df98 <__bss_start@@Base+0x828>
  4028ce:	xor    eax,eax
  4028d0:	call   403eb0 <body_with_one_return@@Base>
  4028d5:	lea    rdi,[rip+0x5bad]        # 408489 <_IO_stdin_used@@Base+0x489>
  4028dc:	inc    QWORD PTR [rip+0xb6bd]        # 40dfa0 <__bss_start@@Base+0x830>
  4028e3:	call   4022b0 <puts@plt>
  4028e8:	lea    rcx,[rip+0x5bf8]        # 4084e7 <_IO_stdin_used@@Base+0x4e7>
  4028ef:	lea    rdx,[rip+0x5b75]        # 40846b <_IO_stdin_used@@Base+0x46b>
  4028f6:	lea    rsi,[rip+0x5b7a]        # 408477 <_IO_stdin_used@@Base+0x477>
  4028fd:	mov    edi,0x1
  402902:	xor    eax,eax
  402904:	inc    QWORD PTR [rip+0xb69d]        # 40dfa8 <__bss_start@@Base+0x838>
  40290b:	call   4023e0 <__printf_chk@plt>
  402910:	xor    eax,eax
  402912:	inc    QWORD PTR [rip+0xb697]        # 40dfb0 <__bss_start@@Base+0x840>
  402919:	call   402ce0 <setup@@Base>
  40291e:	xor    eax,eax
  402920:	inc    QWORD PTR [rip+0xb691]        # 40dfb8 <__bss_start@@Base+0x848>
  402927:	call   403c40 <body_with_two_returns@@Base>
  40292c:	lea    rdi,[rip+0x5b56]        # 408489 <_IO_stdin_used@@Base+0x489>
  402933:	inc    QWORD PTR [rip+0xb686]        # 40dfc0 <__bss_start@@Base+0x850>
  40293a:	call   4022b0 <puts@plt>
  40293f:	lea    rdi,[rip+0x5bb7]        # 4084fd <_IO_stdin_used@@Base+0x4fd>
  402946:	inc    QWORD PTR [rip+0xb67b]        # 40dfc8 <__bss_start@@Base+0x858>
  40294d:	call   4022b0 <puts@plt>
  402952:	lea    rdi,[rip+0x5bb3]        # 40850c <_IO_stdin_used@@Base+0x50c>
  402959:	inc    QWORD PTR [rip+0xb670]        # 40dfd0 <__bss_start@@Base+0x860>
  402960:	call   4022b0 <puts@plt>
  402965:	lea    rdi,[rip+0x5abb]        # 408427 <_IO_stdin_used@@Base+0x427>
  40296c:	inc    QWORD PTR [rip+0xb665]        # 40dfd8 <__bss_start@@Base+0x868>
  402973:	call   4022b0 <puts@plt>
  402978:	xor    eax,eax
  40297a:	inc    QWORD PTR [rip+0xb65f]        # 40dfe0 <__bss_start@@Base+0x870>
  402981:	pop    rbx
  402982:	ret    
  402983:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40298e:	xchg   ax,ax
  402990:	endbr64 
  402994:	lea    rdi,[rip+0x9cc5]        # 40c660 <__data_start@@Base+0x540>
  40299b:	jmp    407c60 <__gcov_sort_n_vals@@Base+0x1700>
  4029a0:	endbr64 
  4029a4:	lea    rdi,[rip+0xa495]        # 40ce40 <__data_start@@Base+0xd20>
  4029ab:	jmp    407c60 <__gcov_sort_n_vals@@Base+0x1700>
  4029b0:	endbr64 
  4029b4:	lea    rdi,[rip+0xa985]        # 40d340 <__data_start@@Base+0x1220>
  4029bb:	jmp    407c60 <__gcov_sort_n_vals@@Base+0x1700>
  4029c0:	endbr64 
  4029c4:	lea    rdi,[rip+0xad15]        # 40d6e0 <__data_start@@Base+0x15c0>
  4029cb:	jmp    407c60 <__gcov_sort_n_vals@@Base+0x1700>

00000000004029d0 <_start@@Base>:
  4029d0:	endbr64 
  4029d4:	xor    ebp,ebp
  4029d6:	mov    r9,rdx
  4029d9:	pop    rsi
  4029da:	mov    rdx,rsp
  4029dd:	and    rsp,0xfffffffffffffff0
  4029e1:	push   rax
  4029e2:	push   rsp
  4029e3:	mov    r8,0x407de0
  4029ea:	mov    rcx,0x407d70
  4029f1:	mov    rdi,0x4024a0
  4029f8:	call   QWORD PTR [rip+0x95ea]        # 40bfe8 <__libc_start_main@GLIBC_2.2.5>
  4029fe:	hlt    
  4029ff:	nop
  402a00:	endbr64 
  402a04:	ret    
  402a05:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402a0f:	nop
  402a10:	mov    eax,0x40d770
  402a15:	cmp    rax,0x40d770
  402a1b:	je     402a30 <_start@@Base+0x60>
  402a1d:	mov    eax,0x0
  402a22:	test   rax,rax
  402a25:	je     402a30 <_start@@Base+0x60>
  402a27:	mov    edi,0x40d770
  402a2c:	jmp    rax
  402a2e:	xchg   ax,ax
  402a30:	ret    
  402a31:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  402a3c:	nop    DWORD PTR [rax+0x0]
  402a40:	mov    esi,0x40d770
  402a45:	sub    rsi,0x40d770
  402a4c:	sar    rsi,0x3
  402a50:	mov    rax,rsi
  402a53:	shr    rax,0x3f
  402a57:	add    rsi,rax
  402a5a:	sar    rsi,1
  402a5d:	je     402a70 <_start@@Base+0xa0>
  402a5f:	mov    eax,0x0
  402a64:	test   rax,rax
  402a67:	je     402a70 <_start@@Base+0xa0>
  402a69:	mov    edi,0x40d770
  402a6e:	jmp    rax
  402a70:	ret    
  402a71:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  402a7c:	nop    DWORD PTR [rax+0x0]
  402a80:	endbr64 
  402a84:	cmp    BYTE PTR [rip+0xacf5],0x0        # 40d780 <__bss_start@@Base+0x10>
  402a8b:	jne    402aa0 <_start@@Base+0xd0>
  402a8d:	push   rbp
  402a8e:	mov    rbp,rsp
  402a91:	call   402a10 <_start@@Base+0x40>
  402a96:	mov    BYTE PTR [rip+0xace3],0x1        # 40d780 <__bss_start@@Base+0x10>
  402a9d:	pop    rbp
  402a9e:	ret    
  402a9f:	nop
  402aa0:	ret    
  402aa1:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  402aac:	nop    DWORD PTR [rax+0x0]
  402ab0:	endbr64 
  402ab4:	jmp    402a40 <_start@@Base+0x70>
  402ab6:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000402ac0 <push_back@@Base>:
  402ac0:	endbr64 
  402ac4:	mov    rax,0x40e720
  402acb:	mov    edx,DWORD PTR [rax+0x330]
  402ad1:	mov    QWORD PTR [rax],rdi
  402ad4:	mov    QWORD PTR [rax+0x198],rsi
  402adb:	cmp    edx,0x31
  402ade:	jbe    402b48 <push_back@@Base+0x88>
  402ae0:	inc    QWORD PTR [rip+0xad01]        # 40d7e8 <__bss_start@@Base+0x78>
  402ae7:	inc    DWORD PTR [rax+0x338]
  402aed:	mov    rcx,0x40ec60
  402af4:	inc    edx
  402af6:	mov    DWORD PTR [rax+0x330],edx
  402afc:	mov    edx,DWORD PTR [rcx+0x190]
  402b02:	cmp    edx,0x31
  402b05:	ja     402b24 <push_back@@Base+0x64>
  402b07:	lea    r8d,[rdx+0x1]
  402b0b:	mov    DWORD PTR [rcx+0x190],r8d
  402b12:	mov    r8,0x402ac0
  402b19:	inc    QWORD PTR [rip+0xacd0]        # 40d7f0 <__bss_start@@Base+0x80>
  402b20:	mov    QWORD PTR [rcx+rdx*8],r8
  402b24:	mov    rax,QWORD PTR [rax+0x340]
  402b2b:	test   rax,rax
  402b2e:	je     402b70 <push_back@@Base+0xb0>
  402b30:	sub    rsp,0x8
  402b34:	call   rax
  402b36:	inc    QWORD PTR [rip+0xacc3]        # 40d800 <__bss_start@@Base+0x90>
  402b3d:	add    rsp,0x8
  402b41:	ret    
  402b42:	nop    WORD PTR [rax+rax*1+0x0]
  402b48:	mov    QWORD PTR [rax+rdx*8+0x8],rdi
  402b4d:	inc    QWORD PTR [rip+0xac8c]        # 40d7e0 <__bss_start@@Base+0x70>
  402b54:	mov    edx,DWORD PTR [rax+0x330]
  402b5a:	mov    QWORD PTR [rax+rdx*8+0x1a0],rsi
  402b62:	mov    edx,DWORD PTR [rax+0x330]
  402b68:	jmp    402aed <push_back@@Base+0x2d>
  402b6a:	nop    WORD PTR [rax+rax*1+0x0]
  402b70:	inc    QWORD PTR [rip+0xac81]        # 40d7f8 <__bss_start@@Base+0x88>
  402b77:	ret    
  402b78:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402b80 <next@@Base>:
  402b80:	endbr64 
  402b84:	mov    rax,0x40ea80
  402b8b:	mov    edx,DWORD PTR [rax+0x198]
  402b91:	mov    QWORD PTR [rax],rdi
  402b94:	cmp    edx,0x31
  402b97:	jbe    402c38 <next@@Base+0xb8>
  402b9d:	inc    DWORD PTR [rax+0x1a0]
  402ba3:	mov    rcx,0x40ec60
  402baa:	inc    edx
  402bac:	mov    DWORD PTR [rax+0x198],edx
  402bb2:	mov    edx,DWORD PTR [rcx+0x190]
  402bb8:	cmp    edx,0x31
  402bbb:	ja     402bd8 <next@@Base+0x58>
  402bbd:	lea    esi,[rdx+0x1]
  402bc0:	mov    DWORD PTR [rcx+0x190],esi
  402bc6:	mov    rsi,0x402b80
  402bcd:	inc    QWORD PTR [rip+0xabd4]        # 40d7a8 <__bss_start@@Base+0x38>
  402bd4:	mov    QWORD PTR [rcx+rdx*8],rsi
  402bd8:	mov    rdx,QWORD PTR [rax+0x1c0]
  402bdf:	test   rdx,rdx
  402be2:	je     402c00 <next@@Base+0x80>
  402be4:	sub    rsp,0x8
  402be8:	inc    QWORD PTR [rip+0xabc1]        # 40d7b0 <__bss_start@@Base+0x40>
  402bef:	call   rdx
  402bf1:	inc    QWORD PTR [rip+0xabc0]        # 40d7b8 <__bss_start@@Base+0x48>
  402bf8:	add    rsp,0x8
  402bfc:	ret    
  402bfd:	nop    DWORD PTR [rax]
  402c00:	movsxd rdx,DWORD PTR [rax+0x1b0]
  402c07:	test   edx,edx
  402c09:	je     402c50 <next@@Base+0xd0>
  402c0b:	movsxd rcx,DWORD PTR [rax+0x1b4]
  402c12:	mov    rsi,QWORD PTR [rax+0x1b8]
  402c19:	cmp    edx,ecx
  402c1b:	jle    402c60 <next@@Base+0xe0>
  402c1d:	lea    edx,[rcx+0x1]
  402c20:	mov    DWORD PTR [rax+0x1b4],edx
  402c26:	inc    QWORD PTR [rip+0xab9b]        # 40d7c8 <__bss_start@@Base+0x58>
  402c2d:	mov    rax,QWORD PTR [rsi+rcx*8]
  402c31:	ret    
  402c32:	nop    WORD PTR [rax+rax*1+0x0]
  402c38:	mov    QWORD PTR [rax+rdx*8+0x8],rdi
  402c3d:	inc    QWORD PTR [rip+0xab5c]        # 40d7a0 <__bss_start@@Base+0x30>
  402c44:	mov    edx,DWORD PTR [rax+0x198]
  402c4a:	jmp    402ba3 <next@@Base+0x23>
  402c4f:	nop
  402c50:	inc    QWORD PTR [rip+0xab69]        # 40d7c0 <__bss_start@@Base+0x50>
  402c57:	mov    rax,QWORD PTR [rax+0x1a8]
  402c5e:	ret    
  402c5f:	nop
  402c60:	inc    QWORD PTR [rip+0xab69]        # 40d7d0 <__bss_start@@Base+0x60>
  402c67:	mov    rax,QWORD PTR [rsi+rdx*8-0x8]
  402c6c:	ret    
  402c6d:	nop    DWORD PTR [rax]

0000000000402c70 <next_reset@@Base>:
  402c70:	endbr64 
  402c74:	mov    rdx,0x40ea80
  402c7b:	mov    ecx,0x39
  402c80:	xor    eax,eax
  402c82:	mov    rdi,rdx
  402c85:	rep stos QWORD PTR es:[rdi],rax
  402c88:	inc    QWORD PTR [rip+0xab49]        # 40d7d8 <__bss_start@@Base+0x68>
  402c8f:	mov    DWORD PTR [rdx+0x19c],0x32
  402c99:	ret    
  402c9a:	nop    WORD PTR [rax+rax*1+0x0]

0000000000402ca0 <push_back_reset@@Base>:
  402ca0:	endbr64 
  402ca4:	sub    rsp,0x8
  402ca8:	mov    rcx,0x40e720
  402caf:	mov    edx,0x348
  402cb4:	xor    esi,esi
  402cb6:	mov    rdi,rcx
  402cb9:	inc    QWORD PTR [rip+0xab48]        # 40d808 <__bss_start@@Base+0x98>
  402cc0:	call   402340 <memset@plt>
  402cc5:	mov    DWORD PTR [rax+0x334],0x32
  402ccf:	add    rsp,0x8
  402cd3:	ret    
  402cd4:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  402cdf:	nop

0000000000402ce0 <setup@@Base>:
  402ce0:	endbr64 
  402ce4:	sub    rsp,0x8
  402ce8:	xor    eax,eax
  402cea:	inc    QWORD PTR [rip+0xab1f]        # 40d810 <__bss_start@@Base+0xa0>
  402cf1:	call   402c70 <next_reset@@Base>
  402cf6:	xor    eax,eax
  402cf8:	inc    QWORD PTR [rip+0xab19]        # 40d818 <__bss_start@@Base+0xa8>
  402cff:	call   402ca0 <push_back_reset@@Base>
  402d04:	inc    QWORD PTR [rip+0xab15]        # 40d820 <__bss_start@@Base+0xb0>
  402d0b:	add    rsp,0x8
  402d0f:	ret    

0000000000402d10 <no_int_as_first_stuff@@Base>:
  402d10:	endbr64 
  402d14:	push   r12
  402d16:	push   rbp
  402d17:	push   rbx
  402d18:	sub    rsp,0x30
  402d1c:	lea    rbp,[rsp+0x8]
  402d21:	lea    rsi,[rsp+0x10]
  402d26:	mov    rdi,rbp
  402d29:	mov    rax,QWORD PTR fs:0x28
  402d32:	mov    QWORD PTR [rsp+0x28],rax
  402d37:	xor    eax,eax
  402d39:	inc    QWORD PTR [rip+0xab00]        # 40d840 <__bss_start@@Base+0xd0>
  402d40:	call   405160 <init_grammar@@Base>
  402d45:	mov    edi,0x4
  402d4a:	inc    QWORD PTR [rip+0xaaf7]        # 40d848 <__bss_start@@Base+0xd8>
  402d51:	call   4023a0 <malloc@plt>
  402d56:	mov    rdi,rax
  402d59:	mov    r12,rax
  402d5c:	call   404870 <init_token_opar@@Base>
  402d61:	mov    rbx,0x40ea80
  402d68:	mov    rdi,rbp
  402d6b:	inc    QWORD PTR [rip+0xaade]        # 40d850 <__bss_start@@Base+0xe0>
  402d72:	mov    QWORD PTR [rbx+0x1a8],r12
  402d79:	call   4059f0 <read_function_ast_node@@Base>
  402d7e:	cmp    DWORD PTR [rbx+0x198],0x1
  402d85:	jne    402dac <no_int_as_first_stuff@@Base+0x9c>
  402d87:	test   rax,rax
  402d8a:	jne    402dd7 <no_int_as_first_stuff@@Base+0xc7>
  402d8c:	inc    QWORD PTR [rip+0xaacd]        # 40d860 <__bss_start@@Base+0xf0>
  402d93:	mov    rax,QWORD PTR [rsp+0x28]
  402d98:	xor    rax,QWORD PTR fs:0x28
  402da1:	jne    402dd2 <no_int_as_first_stuff@@Base+0xc2>
  402da3:	add    rsp,0x30
  402da7:	pop    rbx
  402da8:	pop    rbp
  402da9:	pop    r12
  402dab:	ret    
  402dac:	lea    rcx,[rip+0x597d]        # 408730 <_IO_stdin_used@@Base+0x730>
  402db3:	mov    edx,0x29
  402db8:	lea    rsi,[rip+0x5249]        # 408008 <_IO_stdin_used@@Base+0x8>
  402dbf:	lea    rdi,[rip+0x545a]        # 408220 <_IO_stdin_used@@Base+0x220>
  402dc6:	inc    QWORD PTR [rip+0xaa8b]        # 40d858 <__bss_start@@Base+0xe8>
  402dcd:	call   402330 <__assert_fail@plt>
  402dd2:	call   402310 <__stack_chk_fail@plt>
  402dd7:	lea    rcx,[rip+0x5952]        # 408730 <_IO_stdin_used@@Base+0x730>
  402dde:	mov    edx,0x2a
  402de3:	lea    rsi,[rip+0x521e]        # 408008 <_IO_stdin_used@@Base+0x8>
  402dea:	lea    rdi,[rip+0x5449]        # 40823a <_IO_stdin_used@@Base+0x23a>
  402df1:	inc    QWORD PTR [rip+0xaa70]        # 40d868 <__bss_start@@Base+0xf8>
  402df8:	call   402330 <__assert_fail@plt>
  402dfd:	nop    DWORD PTR [rax]

0000000000402e00 <int_but_not_followed_by_function@@Base>:
  402e00:	endbr64 
  402e04:	push   r12
  402e06:	push   rbp
  402e07:	push   rbx
  402e08:	sub    rsp,0x30
  402e0c:	lea    r12,[rsp+0x8]
  402e11:	lea    rsi,[rsp+0x10]
  402e16:	mov    rdi,r12
  402e19:	mov    rax,QWORD PTR fs:0x28
  402e22:	mov    QWORD PTR [rsp+0x28],rax
  402e27:	xor    eax,eax
  402e29:	inc    QWORD PTR [rip+0xaa50]        # 40d880 <__bss_start@@Base+0x110>
  402e30:	call   405160 <init_grammar@@Base>
  402e35:	mov    edi,0x10
  402e3a:	inc    QWORD PTR [rip+0xaa47]        # 40d888 <__bss_start@@Base+0x118>
  402e41:	call   4023a0 <malloc@plt>
  402e46:	mov    edi,0x4
  402e4b:	mov    rbp,rax
  402e4e:	call   4023a0 <malloc@plt>
  402e53:	mov    rdi,rax
  402e56:	mov    QWORD PTR [rbp+0x0],rax
  402e5a:	call   404810 <init_token_int_type@@Base>
  402e5f:	mov    edi,0x4
  402e64:	inc    QWORD PTR [rip+0xaa25]        # 40d890 <__bss_start@@Base+0x120>
  402e6b:	call   4023a0 <malloc@plt>
  402e70:	mov    rdi,rax
  402e73:	mov    QWORD PTR [rbp+0x8],rax
  402e77:	call   404870 <init_token_opar@@Base>
  402e7c:	mov    rbx,0x40ea80
  402e83:	mov    rdi,r12
  402e86:	inc    QWORD PTR [rip+0xaa0b]        # 40d898 <__bss_start@@Base+0x128>
  402e8d:	mov    QWORD PTR [rbx+0x1b8],rbp
  402e94:	mov    DWORD PTR [rbx+0x1b0],0x2
  402e9e:	call   4059f0 <read_function_ast_node@@Base>
  402ea3:	cmp    DWORD PTR [rbx+0x198],0x2
  402eaa:	jne    402ed1 <int_but_not_followed_by_function@@Base+0xd1>
  402eac:	test   rax,rax
  402eaf:	jne    402efc <int_but_not_followed_by_function@@Base+0xfc>
  402eb1:	inc    QWORD PTR [rip+0xa9f0]        # 40d8a8 <__bss_start@@Base+0x138>
  402eb8:	mov    rax,QWORD PTR [rsp+0x28]
  402ebd:	xor    rax,QWORD PTR fs:0x28
  402ec6:	jne    402ef7 <int_but_not_followed_by_function@@Base+0xf7>
  402ec8:	add    rsp,0x30
  402ecc:	pop    rbx
  402ecd:	pop    rbp
  402ece:	pop    r12
  402ed0:	ret    
  402ed1:	lea    rcx,[rip+0x5828]        # 408700 <_IO_stdin_used@@Base+0x700>
  402ed8:	mov    edx,0x43
  402edd:	lea    rsi,[rip+0x5124]        # 408008 <_IO_stdin_used@@Base+0x8>
  402ee4:	lea    rdi,[rip+0x535b]        # 408246 <_IO_stdin_used@@Base+0x246>
  402eeb:	inc    QWORD PTR [rip+0xa9ae]        # 40d8a0 <__bss_start@@Base+0x130>
  402ef2:	call   402330 <__assert_fail@plt>
  402ef7:	call   402310 <__stack_chk_fail@plt>
  402efc:	lea    rcx,[rip+0x57fd]        # 408700 <_IO_stdin_used@@Base+0x700>
  402f03:	mov    edx,0x44
  402f08:	lea    rsi,[rip+0x50f9]        # 408008 <_IO_stdin_used@@Base+0x8>
  402f0f:	lea    rdi,[rip+0x5324]        # 40823a <_IO_stdin_used@@Base+0x23a>
  402f16:	inc    QWORD PTR [rip+0xa993]        # 40d8b0 <__bss_start@@Base+0x140>
  402f1d:	call   402330 <__assert_fail@plt>
  402f22:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  402f2d:	nop    DWORD PTR [rax]

0000000000402f30 <boolean_expression_is_read_properly@@Base>:
  402f30:	endbr64 
  402f34:	push   r12
  402f36:	mov    edi,0x3
  402f3b:	push   rbp
  402f3c:	push   rbx
  402f3d:	sub    rsp,0x30
  402f41:	mov    rax,QWORD PTR fs:0x28
  402f4a:	mov    QWORD PTR [rsp+0x28],rax
  402f4f:	xor    eax,eax
  402f51:	inc    QWORD PTR [rip+0xa968]        # 40d8c0 <__bss_start@@Base+0x150>
  402f58:	call   4023a0 <malloc@plt>
  402f5d:	mov    edx,0x3d21
  402f62:	mov    WORD PTR [rax],dx
  402f65:	mov    BYTE PTR [rax+0x2],0x0
  402f69:	lea    r12,[rsp+0x8]
  402f6e:	lea    rsi,[rsp+0x10]
  402f73:	mov    rdi,r12
  402f76:	mov    rbp,rax
  402f79:	call   405160 <init_grammar@@Base>
  402f7e:	mov    edi,0x28
  402f83:	inc    QWORD PTR [rip+0xa93e]        # 40d8c8 <__bss_start@@Base+0x158>
  402f8a:	call   4023a0 <malloc@plt>
  402f8f:	mov    edi,0x8
  402f94:	mov    rbx,rax
  402f97:	call   4023a0 <malloc@plt>
  402f9c:	mov    rdi,rax
  402f9f:	mov    esi,0x2
  402fa4:	mov    QWORD PTR [rbx],rax
  402fa7:	call   404830 <init_token_int_value@@Base>
  402fac:	mov    edi,0x8
  402fb1:	inc    QWORD PTR [rip+0xa918]        # 40d8d0 <__bss_start@@Base+0x160>
  402fb8:	call   4023a0 <malloc@plt>
  402fbd:	mov    rdi,rax
  402fc0:	mov    esi,0x2
  402fc5:	mov    QWORD PTR [rbx+0x8],rax
  402fc9:	call   404830 <init_token_int_value@@Base>
  402fce:	mov    edi,0x10
  402fd3:	inc    QWORD PTR [rip+0xa8fe]        # 40d8d8 <__bss_start@@Base+0x168>
  402fda:	call   4023a0 <malloc@plt>
  402fdf:	mov    rdi,rax
  402fe2:	mov    rsi,rbp
  402fe5:	mov    QWORD PTR [rbx+0x10],rax
  402fe9:	call   404990 <init_token_boolean_op@@Base>
  402fee:	mov    edi,0x8
  402ff3:	inc    QWORD PTR [rip+0xa8e6]        # 40d8e0 <__bss_start@@Base+0x170>
  402ffa:	call   4023a0 <malloc@plt>
  402fff:	mov    rdi,rax
  403002:	mov    esi,0x1
  403007:	mov    QWORD PTR [rbx+0x18],rax
  40300b:	call   404830 <init_token_int_value@@Base>
  403010:	mov    edi,0x4
  403015:	inc    QWORD PTR [rip+0xa8cc]        # 40d8e8 <__bss_start@@Base+0x178>
  40301c:	call   4023a0 <malloc@plt>
  403021:	mov    rdi,rax
  403024:	mov    QWORD PTR [rbx+0x20],rax
  403028:	call   404890 <init_token_cpar@@Base>
  40302d:	mov    rbp,0x40ea80
  403034:	mov    rdi,r12
  403037:	inc    QWORD PTR [rip+0xa8b2]        # 40d8f0 <__bss_start@@Base+0x180>
  40303e:	mov    QWORD PTR [rbp+0x1b8],rbx
  403045:	mov    DWORD PTR [rbp+0x1b0],0x5
  40304f:	call   4055f0 <read_boolean_expression@@Base>
  403054:	cmp    DWORD PTR [rbp+0x198],0x5
  40305b:	jne    403092 <boolean_expression_is_read_properly@@Base+0x162>
  40305d:	mov    rdx,0x40e720
  403064:	cmp    DWORD PTR [rdx+0x330],0x1
  40306b:	jne    4030e3 <boolean_expression_is_read_properly@@Base+0x1b3>
  40306d:	cmp    DWORD PTR [rax],0x5
  403070:	jne    4030bd <boolean_expression_is_read_properly@@Base+0x18d>
  403072:	inc    QWORD PTR [rip+0xa88f]        # 40d908 <__bss_start@@Base+0x198>
  403079:	mov    rax,QWORD PTR [rsp+0x28]
  40307e:	xor    rax,QWORD PTR fs:0x28
  403087:	jne    4030b8 <boolean_expression_is_read_properly@@Base+0x188>
  403089:	add    rsp,0x30
  40308d:	pop    rbx
  40308e:	pop    rbp
  40308f:	pop    r12
  403091:	ret    
  403092:	lea    rcx,[rip+0x5627]        # 4086c0 <_IO_stdin_used@@Base+0x6c0>
  403099:	mov    edx,0x69
  40309e:	lea    rsi,[rip+0x4f63]        # 408008 <_IO_stdin_used@@Base+0x8>
  4030a5:	lea    rdi,[rip+0x51b4]        # 408260 <_IO_stdin_used@@Base+0x260>
  4030ac:	inc    QWORD PTR [rip+0xa845]        # 40d8f8 <__bss_start@@Base+0x188>
  4030b3:	call   402330 <__assert_fail@plt>
  4030b8:	call   402310 <__stack_chk_fail@plt>
  4030bd:	lea    rcx,[rip+0x55fc]        # 4086c0 <_IO_stdin_used@@Base+0x6c0>
  4030c4:	mov    edx,0x6b
  4030c9:	lea    rsi,[rip+0x4f38]        # 408008 <_IO_stdin_used@@Base+0x8>
  4030d0:	lea    rdi,[rip+0x4fb1]        # 408088 <_IO_stdin_used@@Base+0x88>
  4030d7:	inc    QWORD PTR [rip+0xa832]        # 40d910 <__bss_start@@Base+0x1a0>
  4030de:	call   402330 <__assert_fail@plt>
  4030e3:	lea    rcx,[rip+0x55d6]        # 4086c0 <_IO_stdin_used@@Base+0x6c0>
  4030ea:	mov    edx,0x6a
  4030ef:	lea    rsi,[rip+0x4f12]        # 408008 <_IO_stdin_used@@Base+0x8>
  4030f6:	lea    rdi,[rip+0x4f6b]        # 408068 <_IO_stdin_used@@Base+0x68>
  4030fd:	inc    QWORD PTR [rip+0xa7fc]        # 40d900 <__bss_start@@Base+0x190>
  403104:	call   402330 <__assert_fail@plt>
  403109:	nop    DWORD PTR [rax+0x0]

0000000000403110 <boolean_expression_complex@@Base>:
  403110:	endbr64 
  403114:	push   r14
  403116:	mov    edi,0x3
  40311b:	push   r13
  40311d:	push   r12
  40311f:	push   rbp
  403120:	push   rbx
  403121:	sub    rsp,0x30
  403125:	mov    rax,QWORD PTR fs:0x28
  40312e:	mov    QWORD PTR [rsp+0x28],rax
  403133:	xor    eax,eax
  403135:	inc    QWORD PTR [rip+0xa7e4]        # 40d920 <__bss_start@@Base+0x1b0>
  40313c:	call   4023a0 <malloc@plt>
  403141:	mov    edi,0x3
  403146:	mov    r13,rax
  403149:	call   4023a0 <malloc@plt>
  40314e:	mov    edi,0x3
  403153:	mov    r12,rax
  403156:	call   4023a0 <malloc@plt>
  40315b:	mov    esi,0x3d3d
  403160:	mov    WORD PTR [rax],si
  403163:	mov    BYTE PTR [rax+0x2],0x0
  403167:	lea    r14,[rsp+0x8]
  40316c:	mov    edx,0x3d3c
  403171:	mov    ecx,0x2626
  403176:	lea    rsi,[rsp+0x10]
  40317b:	mov    rdi,r14
  40317e:	mov    WORD PTR [r13+0x0],dx
  403183:	mov    WORD PTR [r12],cx
  403188:	mov    rbp,rax
  40318b:	mov    BYTE PTR [r13+0x2],0x0
  403190:	mov    BYTE PTR [r12+0x2],0x0
  403196:	call   405160 <init_grammar@@Base>
  40319b:	mov    edi,0x50
  4031a0:	inc    QWORD PTR [rip+0xa781]        # 40d928 <__bss_start@@Base+0x1b8>
  4031a7:	call   4023a0 <malloc@plt>
  4031ac:	mov    edi,0x8
  4031b1:	mov    rbx,rax
  4031b4:	call   4023a0 <malloc@plt>
  4031b9:	mov    rdi,rax
  4031bc:	mov    esi,0x2
  4031c1:	mov    QWORD PTR [rbx],rax
  4031c4:	call   404830 <init_token_int_value@@Base>
  4031c9:	mov    edi,0x8
  4031ce:	inc    QWORD PTR [rip+0xa75b]        # 40d930 <__bss_start@@Base+0x1c0>
  4031d5:	call   4023a0 <malloc@plt>
  4031da:	mov    rdi,rax
  4031dd:	mov    esi,0x2
  4031e2:	mov    QWORD PTR [rbx+0x8],rax
  4031e6:	call   404830 <init_token_int_value@@Base>
  4031eb:	mov    edi,0x10
  4031f0:	inc    QWORD PTR [rip+0xa741]        # 40d938 <__bss_start@@Base+0x1c8>
  4031f7:	call   4023a0 <malloc@plt>
  4031fc:	mov    rdi,rax
  4031ff:	mov    rsi,r13
  403202:	mov    QWORD PTR [rbx+0x10],rax
  403206:	call   404990 <init_token_boolean_op@@Base>
  40320b:	mov    edi,0x8
  403210:	inc    QWORD PTR [rip+0xa729]        # 40d940 <__bss_start@@Base+0x1d0>
  403217:	call   4023a0 <malloc@plt>
  40321c:	mov    rdi,rax
  40321f:	mov    esi,0x1
  403224:	mov    QWORD PTR [rbx+0x18],rax
  403228:	call   404830 <init_token_int_value@@Base>
  40322d:	mov    edi,0x10
  403232:	inc    QWORD PTR [rip+0xa70f]        # 40d948 <__bss_start@@Base+0x1d8>
  403239:	call   4023a0 <malloc@plt>
  40323e:	mov    rdi,rax
  403241:	mov    rsi,r12
  403244:	mov    QWORD PTR [rbx+0x20],rax
  403248:	call   404990 <init_token_boolean_op@@Base>
  40324d:	mov    edi,0x8
  403252:	inc    QWORD PTR [rip+0xa6f7]        # 40d950 <__bss_start@@Base+0x1e0>
  403259:	call   4023a0 <malloc@plt>
  40325e:	mov    rdi,rax
  403261:	mov    esi,0x4
  403266:	mov    QWORD PTR [rbx+0x28],rax
  40326a:	call   404830 <init_token_int_value@@Base>
  40326f:	mov    edi,0x8
  403274:	inc    QWORD PTR [rip+0xa6dd]        # 40d958 <__bss_start@@Base+0x1e8>
  40327b:	call   4023a0 <malloc@plt>
  403280:	mov    rdi,rax
  403283:	mov    esi,0x4
  403288:	mov    QWORD PTR [rbx+0x30],rax
  40328c:	call   404830 <init_token_int_value@@Base>
  403291:	mov    edi,0x10
  403296:	inc    QWORD PTR [rip+0xa6c3]        # 40d960 <__bss_start@@Base+0x1f0>
  40329d:	call   4023a0 <malloc@plt>
  4032a2:	mov    rdi,rax
  4032a5:	mov    rsi,rbp
  4032a8:	mov    QWORD PTR [rbx+0x38],rax
  4032ac:	call   404990 <init_token_boolean_op@@Base>
  4032b1:	mov    edi,0x8
  4032b6:	inc    QWORD PTR [rip+0xa6ab]        # 40d968 <__bss_start@@Base+0x1f8>
  4032bd:	call   4023a0 <malloc@plt>
  4032c2:	mov    rdi,rax
  4032c5:	mov    esi,0x4
  4032ca:	mov    QWORD PTR [rbx+0x40],rax
  4032ce:	call   404830 <init_token_int_value@@Base>
  4032d3:	mov    edi,0x4
  4032d8:	inc    QWORD PTR [rip+0xa691]        # 40d970 <__bss_start@@Base+0x200>
  4032df:	call   4023a0 <malloc@plt>
  4032e4:	mov    rdi,rax
  4032e7:	mov    QWORD PTR [rbx+0x48],rax
  4032eb:	call   404890 <init_token_cpar@@Base>
  4032f0:	mov    rbp,0x40ea80
  4032f7:	mov    rdi,r14
  4032fa:	inc    QWORD PTR [rip+0xa677]        # 40d978 <__bss_start@@Base+0x208>
  403301:	mov    QWORD PTR [rbp+0x1b8],rbx
  403308:	mov    DWORD PTR [rbp+0x1b0],0xa
  403312:	call   4055f0 <read_boolean_expression@@Base>
  403317:	cmp    DWORD PTR [rbp+0x198],0xa
  40331e:	jne    403349 <boolean_expression_complex@@Base+0x239>
  403320:	cmp    DWORD PTR [rax],0x5
  403323:	jne    403374 <boolean_expression_complex@@Base+0x264>
  403325:	inc    QWORD PTR [rip+0xa65c]        # 40d988 <__bss_start@@Base+0x218>
  40332c:	mov    rax,QWORD PTR [rsp+0x28]
  403331:	xor    rax,QWORD PTR fs:0x28
  40333a:	jne    40336f <boolean_expression_complex@@Base+0x25f>
  40333c:	add    rsp,0x30
  403340:	pop    rbx
  403341:	pop    rbp
  403342:	pop    r12
  403344:	pop    r13
  403346:	pop    r14
  403348:	ret    
  403349:	lea    rcx,[rip+0x5340]        # 408690 <_IO_stdin_used@@Base+0x690>
  403350:	mov    edx,0xa6
  403355:	lea    rsi,[rip+0x4cac]        # 408008 <_IO_stdin_used@@Base+0x8>
  40335c:	lea    rdi,[rip+0x4f17]        # 40827a <_IO_stdin_used@@Base+0x27a>
  403363:	inc    QWORD PTR [rip+0xa616]        # 40d980 <__bss_start@@Base+0x210>
  40336a:	call   402330 <__assert_fail@plt>
  40336f:	call   402310 <__stack_chk_fail@plt>
  403374:	lea    rcx,[rip+0x5315]        # 408690 <_IO_stdin_used@@Base+0x690>
  40337b:	mov    edx,0xa7
  403380:	lea    rsi,[rip+0x4c81]        # 408008 <_IO_stdin_used@@Base+0x8>
  403387:	lea    rdi,[rip+0x4cfa]        # 408088 <_IO_stdin_used@@Base+0x88>
  40338e:	inc    QWORD PTR [rip+0xa5fb]        # 40d990 <__bss_start@@Base+0x220>
  403395:	call   402330 <__assert_fail@plt>
  40339a:	nop    WORD PTR [rax+rax*1+0x0]

00000000004033a0 <boolean_binary_operator_is_read_properly@@Base>:
  4033a0:	endbr64 
  4033a4:	push   r12
  4033a6:	mov    edi,0x3
  4033ab:	push   rbp
  4033ac:	push   rbx
  4033ad:	sub    rsp,0x30
  4033b1:	mov    rax,QWORD PTR fs:0x28
  4033ba:	mov    QWORD PTR [rsp+0x28],rax
  4033bf:	xor    eax,eax
  4033c1:	inc    QWORD PTR [rip+0xa5d8]        # 40d9a0 <__bss_start@@Base+0x230>
  4033c8:	call   4023a0 <malloc@plt>
  4033cd:	mov    edx,0x3d21
  4033d2:	mov    WORD PTR [rax],dx
  4033d5:	mov    BYTE PTR [rax+0x2],0x0
  4033d9:	lea    r12,[rsp+0x8]
  4033de:	lea    rsi,[rsp+0x10]
  4033e3:	mov    rdi,r12
  4033e6:	mov    rbp,rax
  4033e9:	call   405160 <init_grammar@@Base>
  4033ee:	mov    edi,0x18
  4033f3:	inc    QWORD PTR [rip+0xa5ae]        # 40d9a8 <__bss_start@@Base+0x238>
  4033fa:	call   4023a0 <malloc@plt>
  4033ff:	mov    edi,0x8
  403404:	mov    rbx,rax
  403407:	call   4023a0 <malloc@plt>
  40340c:	mov    rdi,rax
  40340f:	mov    esi,0x2
  403414:	mov    QWORD PTR [rbx],rax
  403417:	call   404830 <init_token_int_value@@Base>
  40341c:	mov    edi,0x10
  403421:	inc    QWORD PTR [rip+0xa588]        # 40d9b0 <__bss_start@@Base+0x240>
  403428:	call   4023a0 <malloc@plt>
  40342d:	mov    rdi,rax
  403430:	mov    rsi,rbp
  403433:	mov    QWORD PTR [rbx+0x8],rax
  403437:	call   404990 <init_token_boolean_op@@Base>
  40343c:	mov    edi,0x8
  403441:	inc    QWORD PTR [rip+0xa570]        # 40d9b8 <__bss_start@@Base+0x248>
  403448:	call   4023a0 <malloc@plt>
  40344d:	mov    rdi,rax
  403450:	mov    esi,0x1
  403455:	mov    QWORD PTR [rbx+0x10],rax
  403459:	call   404830 <init_token_int_value@@Base>
  40345e:	mov    rbp,0x40ea80
  403465:	mov    rdi,r12
  403468:	inc    QWORD PTR [rip+0xa551]        # 40d9c0 <__bss_start@@Base+0x250>
  40346f:	mov    QWORD PTR [rbp+0x1b8],rbx
  403476:	mov    DWORD PTR [rbp+0x1b0],0x3
  403480:	call   405390 <read_boolean_binary_expression@@Base>
  403485:	cmp    DWORD PTR [rbp+0x198],0x3
  40348c:	jne    4034d3 <boolean_binary_operator_is_read_properly@@Base+0x133>
  40348e:	cmp    DWORD PTR [rax],0x5
  403491:	jne    403570 <boolean_binary_operator_is_read_properly@@Base+0x1d0>
  403497:	mov    rdx,QWORD PTR [rax+0x10]
  40349b:	cmp    DWORD PTR [rdx],0x1
  40349e:	jne    40354a <boolean_binary_operator_is_read_properly@@Base+0x1aa>
  4034a4:	cmp    DWORD PTR [rax+0x20],0x1
  4034a8:	jne    403524 <boolean_binary_operator_is_read_properly@@Base+0x184>
  4034aa:	mov    rax,QWORD PTR [rax+0x18]
  4034ae:	cmp    DWORD PTR [rax],0x1
  4034b1:	jne    4034fe <boolean_binary_operator_is_read_properly@@Base+0x15e>
  4034b3:	inc    QWORD PTR [rip+0xa52e]        # 40d9e8 <__bss_start@@Base+0x278>
  4034ba:	mov    rax,QWORD PTR [rsp+0x28]
  4034bf:	xor    rax,QWORD PTR fs:0x28
  4034c8:	jne    4034f9 <boolean_binary_operator_is_read_properly@@Base+0x159>
  4034ca:	add    rsp,0x30
  4034ce:	pop    rbx
  4034cf:	pop    rbp
  4034d0:	pop    r12
  4034d2:	ret    
  4034d3:	lea    rcx,[rip+0x5186]        # 408660 <_IO_stdin_used@@Base+0x660>
  4034da:	mov    edx,0xc8
  4034df:	lea    rsi,[rip+0x4b22]        # 408008 <_IO_stdin_used@@Base+0x8>
  4034e6:	lea    rdi,[rip+0x4da8]        # 408295 <_IO_stdin_used@@Base+0x295>
  4034ed:	inc    QWORD PTR [rip+0xa4d4]        # 40d9c8 <__bss_start@@Base+0x258>
  4034f4:	call   402330 <__assert_fail@plt>
  4034f9:	call   402310 <__stack_chk_fail@plt>
  4034fe:	lea    rcx,[rip+0x515b]        # 408660 <_IO_stdin_used@@Base+0x660>
  403505:	mov    edx,0xcd
  40350a:	lea    rsi,[rip+0x4af7]        # 408008 <_IO_stdin_used@@Base+0x8>
  403511:	lea    rdi,[rip+0x4dcb]        # 4082e3 <_IO_stdin_used@@Base+0x2e3>
  403518:	inc    QWORD PTR [rip+0xa4d1]        # 40d9f0 <__bss_start@@Base+0x280>
  40351f:	call   402330 <__assert_fail@plt>
  403524:	lea    rcx,[rip+0x5135]        # 408660 <_IO_stdin_used@@Base+0x660>
  40352b:	mov    edx,0xcc
  403530:	lea    rsi,[rip+0x4ad1]        # 408008 <_IO_stdin_used@@Base+0x8>
  403537:	lea    rdi,[rip+0x4d8c]        # 4082ca <_IO_stdin_used@@Base+0x2ca>
  40353e:	inc    QWORD PTR [rip+0xa49b]        # 40d9e0 <__bss_start@@Base+0x270>
  403545:	call   402330 <__assert_fail@plt>
  40354a:	lea    rcx,[rip+0x510f]        # 408660 <_IO_stdin_used@@Base+0x660>
  403551:	mov    edx,0xcb
  403556:	lea    rsi,[rip+0x4aab]        # 408008 <_IO_stdin_used@@Base+0x8>
  40355d:	lea    rdi,[rip+0x4d4b]        # 4082af <_IO_stdin_used@@Base+0x2af>
  403564:	inc    QWORD PTR [rip+0xa46d]        # 40d9d8 <__bss_start@@Base+0x268>
  40356b:	call   402330 <__assert_fail@plt>
  403570:	lea    rcx,[rip+0x50e9]        # 408660 <_IO_stdin_used@@Base+0x660>
  403577:	mov    edx,0xc9
  40357c:	lea    rsi,[rip+0x4a85]        # 408008 <_IO_stdin_used@@Base+0x8>
  403583:	lea    rdi,[rip+0x4afe]        # 408088 <_IO_stdin_used@@Base+0x88>
  40358a:	inc    QWORD PTR [rip+0xa43f]        # 40d9d0 <__bss_start@@Base+0x260>
  403591:	call   402330 <__assert_fail@plt>
  403596:	nop    WORD PTR cs:[rax+rax*1+0x0]

00000000004035a0 <boolean_unary_operator_is_read_properly@@Base>:
  4035a0:	endbr64 
  4035a4:	push   r12
  4035a6:	mov    edi,0x2
  4035ab:	push   rbp
  4035ac:	push   rbx
  4035ad:	sub    rsp,0x30
  4035b1:	mov    rax,QWORD PTR fs:0x28
  4035ba:	mov    QWORD PTR [rsp+0x28],rax
  4035bf:	xor    eax,eax
  4035c1:	inc    QWORD PTR [rip+0xa438]        # 40da00 <__bss_start@@Base+0x290>
  4035c8:	call   4023a0 <malloc@plt>
  4035cd:	mov    edx,0x21
  4035d2:	mov    WORD PTR [rax],dx
  4035d5:	lea    r12,[rsp+0x8]
  4035da:	lea    rsi,[rsp+0x10]
  4035df:	mov    rdi,r12
  4035e2:	mov    rbx,rax
  4035e5:	call   405160 <init_grammar@@Base>
  4035ea:	mov    edi,0x10
  4035ef:	inc    QWORD PTR [rip+0xa412]        # 40da08 <__bss_start@@Base+0x298>
  4035f6:	call   4023a0 <malloc@plt>
  4035fb:	mov    edi,0x10
  403600:	mov    rbp,rax
  403603:	call   4023a0 <malloc@plt>
  403608:	mov    rdi,rax
  40360b:	mov    rsi,rbx
  40360e:	mov    QWORD PTR [rbp+0x0],rax
  403612:	call   404990 <init_token_boolean_op@@Base>
  403617:	mov    edi,0x8
  40361c:	inc    QWORD PTR [rip+0xa3ed]        # 40da10 <__bss_start@@Base+0x2a0>
  403623:	call   4023a0 <malloc@plt>
  403628:	mov    rdi,rax
  40362b:	mov    esi,0x1
  403630:	mov    QWORD PTR [rbp+0x8],rax
  403634:	call   404830 <init_token_int_value@@Base>
  403639:	mov    rbx,0x40ea80
  403640:	mov    rdi,r12
  403643:	inc    QWORD PTR [rip+0xa3ce]        # 40da18 <__bss_start@@Base+0x2a8>
  40364a:	mov    QWORD PTR [rbx+0x1b8],rbp
  403651:	mov    DWORD PTR [rbx+0x1b0],0x2
  40365b:	call   405260 <read_boolean_unary_expression@@Base>
  403660:	cmp    DWORD PTR [rbx+0x198],0x2
  403667:	jne    4036ac <boolean_unary_operator_is_read_properly@@Base+0x10c>
  403669:	cmp    DWORD PTR [rax],0x5
  40366c:	jne    403749 <boolean_unary_operator_is_read_properly@@Base+0x1a9>
  403672:	mov    rdx,QWORD PTR [rax+0x10]
  403676:	cmp    DWORD PTR [rdx],0x1
  403679:	jne    403723 <boolean_unary_operator_is_read_properly@@Base+0x183>
  40367f:	cmp    DWORD PTR [rax+0x20],0x8
  403683:	jne    4036fd <boolean_unary_operator_is_read_properly@@Base+0x15d>
  403685:	cmp    QWORD PTR [rax+0x18],0x0
  40368a:	jne    4036d7 <boolean_unary_operator_is_read_properly@@Base+0x137>
  40368c:	inc    QWORD PTR [rip+0xa3ad]        # 40da40 <__bss_start@@Base+0x2d0>
  403693:	mov    rax,QWORD PTR [rsp+0x28]
  403698:	xor    rax,QWORD PTR fs:0x28
  4036a1:	jne    4036d2 <boolean_unary_operator_is_read_properly@@Base+0x132>
  4036a3:	add    rsp,0x30
  4036a7:	pop    rbx
  4036a8:	pop    rbp
  4036a9:	pop    r12
  4036ab:	ret    
  4036ac:	lea    rcx,[rip+0x4f6d]        # 408620 <_IO_stdin_used@@Base+0x620>
  4036b3:	mov    edx,0xeb
  4036b8:	lea    rsi,[rip+0x4949]        # 408008 <_IO_stdin_used@@Base+0x8>
  4036bf:	lea    rdi,[rip+0x4b80]        # 408246 <_IO_stdin_used@@Base+0x246>
  4036c6:	inc    QWORD PTR [rip+0xa353]        # 40da20 <__bss_start@@Base+0x2b0>
  4036cd:	call   402330 <__assert_fail@plt>
  4036d2:	call   402310 <__stack_chk_fail@plt>
  4036d7:	lea    rcx,[rip+0x4f42]        # 408620 <_IO_stdin_used@@Base+0x620>
  4036de:	mov    edx,0xf0
  4036e3:	lea    rsi,[rip+0x491e]        # 408008 <_IO_stdin_used@@Base+0x8>
  4036ea:	lea    rdi,[rip+0x4c22]        # 408313 <_IO_stdin_used@@Base+0x313>
  4036f1:	inc    QWORD PTR [rip+0xa350]        # 40da48 <__bss_start@@Base+0x2d8>
  4036f8:	call   402330 <__assert_fail@plt>
  4036fd:	lea    rcx,[rip+0x4f1c]        # 408620 <_IO_stdin_used@@Base+0x620>
  403704:	mov    edx,0xef
  403709:	lea    rsi,[rip+0x48f8]        # 408008 <_IO_stdin_used@@Base+0x8>
  403710:	lea    rdi,[rip+0x4be8]        # 4082ff <_IO_stdin_used@@Base+0x2ff>
  403717:	inc    QWORD PTR [rip+0xa31a]        # 40da38 <__bss_start@@Base+0x2c8>
  40371e:	call   402330 <__assert_fail@plt>
  403723:	lea    rcx,[rip+0x4ef6]        # 408620 <_IO_stdin_used@@Base+0x620>
  40372a:	mov    edx,0xee
  40372f:	lea    rsi,[rip+0x48d2]        # 408008 <_IO_stdin_used@@Base+0x8>
  403736:	lea    rdi,[rip+0x4b72]        # 4082af <_IO_stdin_used@@Base+0x2af>
  40373d:	inc    QWORD PTR [rip+0xa2ec]        # 40da30 <__bss_start@@Base+0x2c0>
  403744:	call   402330 <__assert_fail@plt>
  403749:	lea    rcx,[rip+0x4ed0]        # 408620 <_IO_stdin_used@@Base+0x620>
  403750:	mov    edx,0xec
  403755:	lea    rsi,[rip+0x48ac]        # 408008 <_IO_stdin_used@@Base+0x8>
  40375c:	lea    rdi,[rip+0x4925]        # 408088 <_IO_stdin_used@@Base+0x88>
  403763:	inc    QWORD PTR [rip+0xa2be]        # 40da28 <__bss_start@@Base+0x2b8>
  40376a:	call   402330 <__assert_fail@plt>
  40376f:	nop

0000000000403770 <if_statement_only@@Base>:
  403770:	endbr64 
  403774:	push   r12
  403776:	push   rbp
  403777:	push   rbx
  403778:	sub    rsp,0x30
  40377c:	lea    r12,[rsp+0x8]
  403781:	lea    rsi,[rsp+0x10]
  403786:	mov    rdi,r12
  403789:	mov    rax,QWORD PTR fs:0x28
  403792:	mov    QWORD PTR [rsp+0x28],rax
  403797:	xor    eax,eax
  403799:	inc    QWORD PTR [rip+0xa2c0]        # 40da60 <__bss_start@@Base+0x2f0>
  4037a0:	call   405160 <init_grammar@@Base>
  4037a5:	mov    edi,0x3
  4037aa:	inc    QWORD PTR [rip+0xa2b7]        # 40da68 <__bss_start@@Base+0x2f8>
  4037b1:	call   4023a0 <malloc@plt>
  4037b6:	mov    edx,0x3d21
  4037bb:	mov    WORD PTR [rax],dx
  4037be:	mov    BYTE PTR [rax+0x2],0x0
  4037c2:	mov    edi,0x48
  4037c7:	mov    rbp,rax
  4037ca:	call   4023a0 <malloc@plt>
  4037cf:	mov    edi,0x4
  4037d4:	mov    rbx,rax
  4037d7:	call   4023a0 <malloc@plt>
  4037dc:	mov    rdi,rax
  4037df:	mov    QWORD PTR [rbx],rax
  4037e2:	call   404870 <init_token_opar@@Base>
  4037e7:	mov    edi,0x8
  4037ec:	inc    QWORD PTR [rip+0xa27d]        # 40da70 <__bss_start@@Base+0x300>
  4037f3:	call   4023a0 <malloc@plt>
  4037f8:	mov    rdi,rax
  4037fb:	mov    esi,0x1
  403800:	mov    QWORD PTR [rbx+0x8],rax
  403804:	call   404830 <init_token_int_value@@Base>
  403809:	mov    edi,0x8
  40380e:	inc    QWORD PTR [rip+0xa263]        # 40da78 <__bss_start@@Base+0x308>
  403815:	call   4023a0 <malloc@plt>
  40381a:	mov    rdi,rax
  40381d:	mov    esi,0x1
  403822:	mov    QWORD PTR [rbx+0x10],rax
  403826:	call   404830 <init_token_int_value@@Base>
  40382b:	mov    edi,0x10
  403830:	inc    QWORD PTR [rip+0xa249]        # 40da80 <__bss_start@@Base+0x310>
  403837:	call   4023a0 <malloc@plt>
  40383c:	mov    rdi,rax
  40383f:	mov    rsi,rbp
  403842:	mov    QWORD PTR [rbx+0x18],rax
  403846:	call   404990 <init_token_boolean_op@@Base>
  40384b:	mov    edi,0x8
  403850:	inc    QWORD PTR [rip+0xa231]        # 40da88 <__bss_start@@Base+0x318>
  403857:	call   4023a0 <malloc@plt>
  40385c:	mov    rdi,rax
  40385f:	mov    esi,0x1
  403864:	mov    QWORD PTR [rbx+0x20],rax
  403868:	call   404830 <init_token_int_value@@Base>
  40386d:	mov    edi,0x4
  403872:	inc    QWORD PTR [rip+0xa217]        # 40da90 <__bss_start@@Base+0x320>
  403879:	call   4023a0 <malloc@plt>
  40387e:	mov    rdi,rax
  403881:	mov    QWORD PTR [rbx+0x28],rax
  403885:	call   404890 <init_token_cpar@@Base>
  40388a:	mov    edi,0x4
  40388f:	inc    QWORD PTR [rip+0xa202]        # 40da98 <__bss_start@@Base+0x328>
  403896:	call   4023a0 <malloc@plt>
  40389b:	mov    rdi,rax
  40389e:	mov    QWORD PTR [rbx+0x30],rax
  4038a2:	call   4048b0 <init_token_obra@@Base>
  4038a7:	mov    edi,0x4
  4038ac:	inc    QWORD PTR [rip+0xa1ed]        # 40daa0 <__bss_start@@Base+0x330>
  4038b3:	call   4023a0 <malloc@plt>
  4038b8:	mov    rdi,rax
  4038bb:	mov    QWORD PTR [rbx+0x38],rax
  4038bf:	call   4048d0 <init_token_cbra@@Base>
  4038c4:	mov    edi,0x4
  4038c9:	inc    QWORD PTR [rip+0xa1d8]        # 40daa8 <__bss_start@@Base+0x338>
  4038d0:	call   4023a0 <malloc@plt>
  4038d5:	mov    rdi,rax
  4038d8:	mov    QWORD PTR [rbx+0x40],rax
  4038dc:	call   404930 <init_token_eof@@Base>
  4038e1:	mov    rbp,0x40ea80
  4038e8:	mov    rdi,r12
  4038eb:	inc    QWORD PTR [rip+0xa1be]        # 40dab0 <__bss_start@@Base+0x340>
  4038f2:	mov    QWORD PTR [rbp+0x1b8],rbx
  4038f9:	mov    DWORD PTR [rbp+0x1b0],0x9
  403903:	call   405780 <read_if_statement@@Base>
  403908:	cmp    DWORD PTR [rbp+0x198],0x9
  40390f:	jne    40393b <if_statement_only@@Base+0x1cb>
  403911:	test   rax,rax
  403914:	je     40398c <if_statement_only@@Base+0x21c>
  403916:	cmp    DWORD PTR [rax],0x4
  403919:	jne    403966 <if_statement_only@@Base+0x1f6>
  40391b:	inc    QWORD PTR [rip+0xa1a6]        # 40dac8 <__bss_start@@Base+0x358>
  403922:	mov    rax,QWORD PTR [rsp+0x28]
  403927:	xor    rax,QWORD PTR fs:0x28
  403930:	jne    403961 <if_statement_only@@Base+0x1f1>
  403932:	add    rsp,0x30
  403936:	pop    rbx
  403937:	pop    rbp
  403938:	pop    r12
  40393a:	ret    
  40393b:	lea    rcx,[rip+0x4cae]        # 4085f0 <_IO_stdin_used@@Base+0x5f0>
  403942:	mov    edx,0x11b
  403947:	lea    rsi,[rip+0x46ba]        # 408008 <_IO_stdin_used@@Base+0x8>
  40394e:	lea    rdi,[rip+0x49d3]        # 408328 <_IO_stdin_used@@Base+0x328>
  403955:	inc    QWORD PTR [rip+0xa15c]        # 40dab8 <__bss_start@@Base+0x348>
  40395c:	call   402330 <__assert_fail@plt>
  403961:	call   402310 <__stack_chk_fail@plt>
  403966:	lea    rcx,[rip+0x4c83]        # 4085f0 <_IO_stdin_used@@Base+0x5f0>
  40396d:	mov    edx,0x11d
  403972:	lea    rsi,[rip+0x468f]        # 408008 <_IO_stdin_used@@Base+0x8>
  403979:	lea    rdi,[rip+0x49ce]        # 40834e <_IO_stdin_used@@Base+0x34e>
  403980:	inc    QWORD PTR [rip+0xa149]        # 40dad0 <__bss_start@@Base+0x360>
  403987:	call   402330 <__assert_fail@plt>
  40398c:	lea    rcx,[rip+0x4c5d]        # 4085f0 <_IO_stdin_used@@Base+0x5f0>
  403993:	mov    edx,0x11c
  403998:	lea    rsi,[rip+0x4669]        # 408008 <_IO_stdin_used@@Base+0x8>
  40399f:	lea    rdi,[rip+0x499c]        # 408342 <_IO_stdin_used@@Base+0x342>
  4039a6:	inc    QWORD PTR [rip+0xa113]        # 40dac0 <__bss_start@@Base+0x350>
  4039ad:	call   402330 <__assert_fail@plt>
  4039b2:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4039bd:	nop    DWORD PTR [rax]

00000000004039c0 <if_else_statements@@Base>:
  4039c0:	endbr64 
  4039c4:	push   r12
  4039c6:	push   rbp
  4039c7:	push   rbx
  4039c8:	sub    rsp,0x30
  4039cc:	lea    r12,[rsp+0x8]
  4039d1:	lea    rsi,[rsp+0x10]
  4039d6:	mov    rdi,r12
  4039d9:	mov    rax,QWORD PTR fs:0x28
  4039e2:	mov    QWORD PTR [rsp+0x28],rax
  4039e7:	xor    eax,eax
  4039e9:	inc    QWORD PTR [rip+0xa0f0]        # 40dae0 <__bss_start@@Base+0x370>
  4039f0:	call   405160 <init_grammar@@Base>
  4039f5:	mov    edi,0x3
  4039fa:	inc    QWORD PTR [rip+0xa0e7]        # 40dae8 <__bss_start@@Base+0x378>
  403a01:	call   4023a0 <malloc@plt>
  403a06:	mov    edx,0x3d21
  403a0b:	mov    WORD PTR [rax],dx
  403a0e:	mov    BYTE PTR [rax+0x2],0x0
  403a12:	mov    edi,0x58
  403a17:	mov    rbp,rax
  403a1a:	call   4023a0 <malloc@plt>
  403a1f:	mov    edi,0x4
  403a24:	mov    rbx,rax
  403a27:	call   4023a0 <malloc@plt>
  403a2c:	mov    rdi,rax
  403a2f:	mov    QWORD PTR [rbx],rax
  403a32:	call   404870 <init_token_opar@@Base>
  403a37:	mov    edi,0x8
  403a3c:	inc    QWORD PTR [rip+0xa0ad]        # 40daf0 <__bss_start@@Base+0x380>
  403a43:	call   4023a0 <malloc@plt>
  403a48:	mov    rdi,rax
  403a4b:	mov    esi,0x1
  403a50:	mov    QWORD PTR [rbx+0x8],rax
  403a54:	call   404830 <init_token_int_value@@Base>
  403a59:	mov    edi,0x8
  403a5e:	inc    QWORD PTR [rip+0xa093]        # 40daf8 <__bss_start@@Base+0x388>
  403a65:	call   4023a0 <malloc@plt>
  403a6a:	mov    rdi,rax
  403a6d:	mov    esi,0x1
  403a72:	mov    QWORD PTR [rbx+0x10],rax
  403a76:	call   404830 <init_token_int_value@@Base>
  403a7b:	mov    edi,0x10
  403a80:	inc    QWORD PTR [rip+0xa079]        # 40db00 <__bss_start@@Base+0x390>
  403a87:	call   4023a0 <malloc@plt>
  403a8c:	mov    rdi,rax
  403a8f:	mov    rsi,rbp
  403a92:	mov    QWORD PTR [rbx+0x18],rax
  403a96:	call   404990 <init_token_boolean_op@@Base>
  403a9b:	mov    edi,0x8
  403aa0:	inc    QWORD PTR [rip+0xa061]        # 40db08 <__bss_start@@Base+0x398>
  403aa7:	call   4023a0 <malloc@plt>
  403aac:	mov    rdi,rax
  403aaf:	mov    esi,0x1
  403ab4:	mov    QWORD PTR [rbx+0x20],rax
  403ab8:	call   404830 <init_token_int_value@@Base>
  403abd:	mov    edi,0x4
  403ac2:	inc    QWORD PTR [rip+0xa047]        # 40db10 <__bss_start@@Base+0x3a0>
  403ac9:	call   4023a0 <malloc@plt>
  403ace:	mov    rdi,rax
  403ad1:	mov    QWORD PTR [rbx+0x28],rax
  403ad5:	call   404890 <init_token_cpar@@Base>
  403ada:	mov    edi,0x4
  403adf:	inc    QWORD PTR [rip+0xa032]        # 40db18 <__bss_start@@Base+0x3a8>
  403ae6:	call   4023a0 <malloc@plt>
  403aeb:	mov    rdi,rax
  403aee:	mov    QWORD PTR [rbx+0x30],rax
  403af2:	call   4048b0 <init_token_obra@@Base>
  403af7:	mov    edi,0x4
  403afc:	inc    QWORD PTR [rip+0xa01d]        # 40db20 <__bss_start@@Base+0x3b0>
  403b03:	call   4023a0 <malloc@plt>
  403b08:	mov    rdi,rax
  403b0b:	mov    QWORD PTR [rbx+0x38],rax
  403b0f:	call   4048d0 <init_token_cbra@@Base>
  403b14:	mov    edi,0x4
  403b19:	inc    QWORD PTR [rip+0xa008]        # 40db28 <__bss_start@@Base+0x3b8>
  403b20:	call   4023a0 <malloc@plt>
  403b25:	mov    rdi,rax
  403b28:	mov    QWORD PTR [rbx+0x40],rax
  403b2c:	call   404970 <init_token_else@@Base>
  403b31:	mov    edi,0x4
  403b36:	inc    QWORD PTR [rip+0x9ff3]        # 40db30 <__bss_start@@Base+0x3c0>
  403b3d:	call   4023a0 <malloc@plt>
  403b42:	mov    rdi,rax
  403b45:	mov    QWORD PTR [rbx+0x48],rax
  403b49:	call   4048b0 <init_token_obra@@Base>
  403b4e:	mov    edi,0x4
  403b53:	inc    QWORD PTR [rip+0x9fde]        # 40db38 <__bss_start@@Base+0x3c8>
  403b5a:	call   4023a0 <malloc@plt>
  403b5f:	mov    rdi,rax
  403b62:	mov    QWORD PTR [rbx+0x50],rax
  403b66:	call   4048d0 <init_token_cbra@@Base>
  403b6b:	mov    rbp,0x40ea80
  403b72:	mov    rdi,r12
  403b75:	inc    QWORD PTR [rip+0x9fc4]        # 40db40 <__bss_start@@Base+0x3d0>
  403b7c:	mov    QWORD PTR [rbp+0x1b8],rbx
  403b83:	mov    DWORD PTR [rbp+0x1b0],0xb
  403b8d:	call   405780 <read_if_statement@@Base>
  403b92:	cmp    DWORD PTR [rbp+0x198],0xb
  403b99:	jne    403bc5 <if_else_statements@@Base+0x205>
  403b9b:	test   rax,rax
  403b9e:	je     403c16 <if_else_statements@@Base+0x256>
  403ba0:	cmp    DWORD PTR [rax],0x4
  403ba3:	jne    403bf0 <if_else_statements@@Base+0x230>
  403ba5:	inc    QWORD PTR [rip+0x9fac]        # 40db58 <__bss_start@@Base+0x3e8>
  403bac:	mov    rax,QWORD PTR [rsp+0x28]
  403bb1:	xor    rax,QWORD PTR fs:0x28
  403bba:	jne    403beb <if_else_statements@@Base+0x22b>
  403bbc:	add    rsp,0x30
  403bc0:	pop    rbx
  403bc1:	pop    rbp
  403bc2:	pop    r12
  403bc4:	ret    
  403bc5:	lea    rcx,[rip+0x4a04]        # 4085d0 <_IO_stdin_used@@Base+0x5d0>
  403bcc:	mov    edx,0x14c
  403bd1:	lea    rsi,[rip+0x4430]        # 408008 <_IO_stdin_used@@Base+0x8>
  403bd8:	lea    rdi,[rip+0x4781]        # 408360 <_IO_stdin_used@@Base+0x360>
  403bdf:	inc    QWORD PTR [rip+0x9f62]        # 40db48 <__bss_start@@Base+0x3d8>
  403be6:	call   402330 <__assert_fail@plt>
  403beb:	call   402310 <__stack_chk_fail@plt>
  403bf0:	lea    rcx,[rip+0x49d9]        # 4085d0 <_IO_stdin_used@@Base+0x5d0>
  403bf7:	mov    edx,0x14e
  403bfc:	lea    rsi,[rip+0x4405]        # 408008 <_IO_stdin_used@@Base+0x8>
  403c03:	lea    rdi,[rip+0x4744]        # 40834e <_IO_stdin_used@@Base+0x34e>
  403c0a:	inc    QWORD PTR [rip+0x9f4f]        # 40db60 <__bss_start@@Base+0x3f0>
  403c11:	call   402330 <__assert_fail@plt>
  403c16:	lea    rcx,[rip+0x49b3]        # 4085d0 <_IO_stdin_used@@Base+0x5d0>
  403c1d:	mov    edx,0x14d
  403c22:	lea    rsi,[rip+0x43df]        # 408008 <_IO_stdin_used@@Base+0x8>
  403c29:	lea    rdi,[rip+0x4712]        # 408342 <_IO_stdin_used@@Base+0x342>
  403c30:	inc    QWORD PTR [rip+0x9f19]        # 40db50 <__bss_start@@Base+0x3e0>
  403c37:	call   402330 <__assert_fail@plt>
  403c3c:	nop    DWORD PTR [rax+0x0]

0000000000403c40 <body_with_two_returns@@Base>:
  403c40:	endbr64 
  403c44:	push   r12
  403c46:	push   rbp
  403c47:	push   rbx
  403c48:	sub    rsp,0x30
  403c4c:	lea    r12,[rsp+0x8]
  403c51:	lea    rsi,[rsp+0x10]
  403c56:	mov    rdi,r12
  403c59:	mov    rax,QWORD PTR fs:0x28
  403c62:	mov    QWORD PTR [rsp+0x28],rax
  403c67:	xor    eax,eax
  403c69:	inc    QWORD PTR [rip+0x9f10]        # 40db80 <__bss_start@@Base+0x410>
  403c70:	call   405160 <init_grammar@@Base>
  403c75:	mov    edi,0x40
  403c7a:	inc    QWORD PTR [rip+0x9f07]        # 40db88 <__bss_start@@Base+0x418>
  403c81:	call   4023a0 <malloc@plt>
  403c86:	mov    edi,0x4
  403c8b:	mov    rbx,rax
  403c8e:	call   4023a0 <malloc@plt>
  403c93:	mov    rdi,rax
  403c96:	mov    QWORD PTR [rbx],rax
  403c99:	call   4048b0 <init_token_obra@@Base>
  403c9e:	mov    edi,0x4
  403ca3:	inc    QWORD PTR [rip+0x9ee6]        # 40db90 <__bss_start@@Base+0x420>
  403caa:	call   4023a0 <malloc@plt>
  403caf:	mov    rdi,rax
  403cb2:	mov    QWORD PTR [rbx+0x8],rax
  403cb6:	call   4048f0 <init_token_return@@Base>
  403cbb:	mov    edi,0x8
  403cc0:	inc    QWORD PTR [rip+0x9ed1]        # 40db98 <__bss_start@@Base+0x428>
  403cc7:	call   4023a0 <malloc@plt>
  403ccc:	mov    rdi,rax
  403ccf:	mov    esi,0x1
  403cd4:	mov    QWORD PTR [rbx+0x10],rax
  403cd8:	call   404830 <init_token_int_value@@Base>
  403cdd:	mov    edi,0x4
  403ce2:	inc    QWORD PTR [rip+0x9eb7]        # 40dba0 <__bss_start@@Base+0x430>
  403ce9:	call   4023a0 <malloc@plt>
  403cee:	mov    rdi,rax
  403cf1:	mov    QWORD PTR [rbx+0x18],rax
  403cf5:	call   404910 <init_token_semicolon@@Base>
  403cfa:	mov    edi,0x4
  403cff:	inc    QWORD PTR [rip+0x9ea2]        # 40dba8 <__bss_start@@Base+0x438>
  403d06:	call   4023a0 <malloc@plt>
  403d0b:	mov    rdi,rax
  403d0e:	mov    QWORD PTR [rbx+0x20],rax
  403d12:	call   4048f0 <init_token_return@@Base>
  403d17:	mov    edi,0x8
  403d1c:	inc    QWORD PTR [rip+0x9e8d]        # 40dbb0 <__bss_start@@Base+0x440>
  403d23:	call   4023a0 <malloc@plt>
  403d28:	mov    rdi,rax
  403d2b:	mov    esi,0x1
  403d30:	mov    QWORD PTR [rbx+0x28],rax
  403d34:	call   404830 <init_token_int_value@@Base>
  403d39:	mov    edi,0x4
  403d3e:	inc    QWORD PTR [rip+0x9e73]        # 40dbb8 <__bss_start@@Base+0x448>
  403d45:	call   4023a0 <malloc@plt>
  403d4a:	mov    rdi,rax
  403d4d:	mov    QWORD PTR [rbx+0x30],rax
  403d51:	call   404910 <init_token_semicolon@@Base>
  403d56:	mov    edi,0x4
  403d5b:	inc    QWORD PTR [rip+0x9e5e]        # 40dbc0 <__bss_start@@Base+0x450>
  403d62:	call   4023a0 <malloc@plt>
  403d67:	mov    rdi,rax
  403d6a:	mov    QWORD PTR [rbx+0x38],rax
  403d6e:	call   4048d0 <init_token_cbra@@Base>
  403d73:	mov    rbp,0x40ea80
  403d7a:	mov    rdi,r12
  403d7d:	inc    QWORD PTR [rip+0x9e44]        # 40dbc8 <__bss_start@@Base+0x458>
  403d84:	mov    QWORD PTR [rbp+0x1b8],rbx
  403d8b:	mov    DWORD PTR [rbp+0x1b0],0x8
  403d95:	call   405890 <read_body@@Base>
  403d9a:	cmp    DWORD PTR [rbp+0x198],0x8
  403da1:	jne    403de5 <body_with_two_returns@@Base+0x1a5>
  403da3:	test   rax,rax
  403da6:	je     403e82 <body_with_two_returns@@Base+0x242>
  403dac:	cmp    DWORD PTR [rax],0x3
  403daf:	jne    403e5c <body_with_two_returns@@Base+0x21c>
  403db5:	mov    rax,QWORD PTR [rax+0x8]
  403db9:	cmp    DWORD PTR [rax],0x3
  403dbc:	jne    403e36 <body_with_two_returns@@Base+0x1f6>
  403dbe:	cmp    QWORD PTR [rax+0x8],0x0
  403dc3:	jne    403e10 <body_with_two_returns@@Base+0x1d0>
  403dc5:	inc    QWORD PTR [rip+0x9e24]        # 40dbf0 <__bss_start@@Base+0x480>
  403dcc:	mov    rax,QWORD PTR [rsp+0x28]
  403dd1:	xor    rax,QWORD PTR fs:0x28
  403dda:	jne    403e0b <body_with_two_returns@@Base+0x1cb>
  403ddc:	add    rsp,0x30
  403de0:	pop    rbx
  403de1:	pop    rbp
  403de2:	pop    r12
  403de4:	ret    
  403de5:	lea    rcx,[rip+0x47c4]        # 4085b0 <_IO_stdin_used@@Base+0x5b0>
  403dec:	mov    edx,0x173
  403df1:	lea    rsi,[rip+0x4210]        # 408008 <_IO_stdin_used@@Base+0x8>
  403df8:	lea    rdi,[rip+0x457c]        # 40837b <_IO_stdin_used@@Base+0x37b>
  403dff:	inc    QWORD PTR [rip+0x9dca]        # 40dbd0 <__bss_start@@Base+0x460>
  403e06:	call   402330 <__assert_fail@plt>
  403e0b:	call   402310 <__stack_chk_fail@plt>
  403e10:	lea    rcx,[rip+0x4799]        # 4085b0 <_IO_stdin_used@@Base+0x5b0>
  403e17:	mov    edx,0x177
  403e1c:	lea    rsi,[rip+0x41e5]        # 408008 <_IO_stdin_used@@Base+0x8>
  403e23:	lea    rdi,[rip+0x459d]        # 4083c7 <_IO_stdin_used@@Base+0x3c7>
  403e2a:	inc    QWORD PTR [rip+0x9dc7]        # 40dbf8 <__bss_start@@Base+0x488>
  403e31:	call   402330 <__assert_fail@plt>
  403e36:	lea    rcx,[rip+0x4773]        # 4085b0 <_IO_stdin_used@@Base+0x5b0>
  403e3d:	mov    edx,0x176
  403e42:	lea    rsi,[rip+0x41bf]        # 408008 <_IO_stdin_used@@Base+0x8>
  403e49:	lea    rdi,[rip+0x455b]        # 4083ab <_IO_stdin_used@@Base+0x3ab>
  403e50:	inc    QWORD PTR [rip+0x9d91]        # 40dbe8 <__bss_start@@Base+0x478>
  403e57:	call   402330 <__assert_fail@plt>
  403e5c:	lea    rcx,[rip+0x474d]        # 4085b0 <_IO_stdin_used@@Base+0x5b0>
  403e63:	mov    edx,0x175
  403e68:	lea    rsi,[rip+0x4199]        # 408008 <_IO_stdin_used@@Base+0x8>
  403e6f:	lea    rdi,[rip+0x451f]        # 408395 <_IO_stdin_used@@Base+0x395>
  403e76:	inc    QWORD PTR [rip+0x9d63]        # 40dbe0 <__bss_start@@Base+0x470>
  403e7d:	call   402330 <__assert_fail@plt>
  403e82:	lea    rcx,[rip+0x4727]        # 4085b0 <_IO_stdin_used@@Base+0x5b0>
  403e89:	mov    edx,0x174
  403e8e:	lea    rsi,[rip+0x4173]        # 408008 <_IO_stdin_used@@Base+0x8>
  403e95:	lea    rdi,[rip+0x44a6]        # 408342 <_IO_stdin_used@@Base+0x342>
  403e9c:	inc    QWORD PTR [rip+0x9d35]        # 40dbd8 <__bss_start@@Base+0x468>
  403ea3:	call   402330 <__assert_fail@plt>
  403ea8:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403eb0 <body_with_one_return@@Base>:
  403eb0:	endbr64 
  403eb4:	push   r12
  403eb6:	push   rbp
  403eb7:	push   rbx
  403eb8:	sub    rsp,0x30
  403ebc:	lea    r12,[rsp+0x8]
  403ec1:	lea    rsi,[rsp+0x10]
  403ec6:	mov    rdi,r12
  403ec9:	mov    rax,QWORD PTR fs:0x28
  403ed2:	mov    QWORD PTR [rsp+0x28],rax
  403ed7:	xor    eax,eax
  403ed9:	inc    QWORD PTR [rip+0x9d20]        # 40dc00 <__bss_start@@Base+0x490>
  403ee0:	call   405160 <init_grammar@@Base>
  403ee5:	mov    edi,0x28
  403eea:	inc    QWORD PTR [rip+0x9d17]        # 40dc08 <__bss_start@@Base+0x498>
  403ef1:	call   4023a0 <malloc@plt>
  403ef6:	mov    edi,0x4
  403efb:	mov    rbx,rax
  403efe:	call   4023a0 <malloc@plt>
  403f03:	mov    rdi,rax
  403f06:	mov    QWORD PTR [rbx],rax
  403f09:	call   4048b0 <init_token_obra@@Base>
  403f0e:	mov    edi,0x4
  403f13:	inc    QWORD PTR [rip+0x9cf6]        # 40dc10 <__bss_start@@Base+0x4a0>
  403f1a:	call   4023a0 <malloc@plt>
  403f1f:	mov    rdi,rax
  403f22:	mov    QWORD PTR [rbx+0x8],rax
  403f26:	call   4048f0 <init_token_return@@Base>
  403f2b:	mov    edi,0x8
  403f30:	inc    QWORD PTR [rip+0x9ce1]        # 40dc18 <__bss_start@@Base+0x4a8>
  403f37:	call   4023a0 <malloc@plt>
  403f3c:	mov    rdi,rax
  403f3f:	mov    esi,0x1
  403f44:	mov    QWORD PTR [rbx+0x10],rax
  403f48:	call   404830 <init_token_int_value@@Base>
  403f4d:	mov    edi,0x4
  403f52:	inc    QWORD PTR [rip+0x9cc7]        # 40dc20 <__bss_start@@Base+0x4b0>
  403f59:	call   4023a0 <malloc@plt>
  403f5e:	mov    rdi,rax
  403f61:	mov    QWORD PTR [rbx+0x18],rax
  403f65:	call   404910 <init_token_semicolon@@Base>
  403f6a:	mov    edi,0x4
  403f6f:	inc    QWORD PTR [rip+0x9cb2]        # 40dc28 <__bss_start@@Base+0x4b8>
  403f76:	call   4023a0 <malloc@plt>
  403f7b:	mov    rdi,rax
  403f7e:	mov    QWORD PTR [rbx+0x20],rax
  403f82:	call   4048d0 <init_token_cbra@@Base>
  403f87:	mov    rbp,0x40ea80
  403f8e:	mov    rdi,r12
  403f91:	inc    QWORD PTR [rip+0x9c98]        # 40dc30 <__bss_start@@Base+0x4c0>
  403f98:	mov    QWORD PTR [rbp+0x1b8],rbx
  403f9f:	mov    DWORD PTR [rbp+0x1b0],0x5
  403fa9:	call   405890 <read_body@@Base>
  403fae:	cmp    DWORD PTR [rbp+0x198],0x5
  403fb5:	jne    403fec <body_with_one_return@@Base+0x13c>
  403fb7:	test   rax,rax
  403fba:	je     404063 <body_with_one_return@@Base+0x1b3>
  403fc0:	cmp    DWORD PTR [rax],0x3
  403fc3:	jne    40403d <body_with_one_return@@Base+0x18d>
  403fc5:	cmp    QWORD PTR [rax+0x8],0x0
  403fca:	jne    404017 <body_with_one_return@@Base+0x167>
  403fcc:	inc    QWORD PTR [rip+0x9c7d]        # 40dc50 <__bss_start@@Base+0x4e0>
  403fd3:	mov    rax,QWORD PTR [rsp+0x28]
  403fd8:	xor    rax,QWORD PTR fs:0x28
  403fe1:	jne    404012 <body_with_one_return@@Base+0x162>
  403fe3:	add    rsp,0x30
  403fe7:	pop    rbx
  403fe8:	pop    rbp
  403fe9:	pop    r12
  403feb:	ret    
  403fec:	lea    rcx,[rip+0x459d]        # 408590 <_IO_stdin_used@@Base+0x590>
  403ff3:	mov    edx,0x196
  403ff8:	lea    rsi,[rip+0x4009]        # 408008 <_IO_stdin_used@@Base+0x8>
  403fff:	lea    rdi,[rip+0x425a]        # 408260 <_IO_stdin_used@@Base+0x260>
  404006:	inc    QWORD PTR [rip+0x9c2b]        # 40dc38 <__bss_start@@Base+0x4c8>
  40400d:	call   402330 <__assert_fail@plt>
  404012:	call   402310 <__stack_chk_fail@plt>
  404017:	lea    rcx,[rip+0x4572]        # 408590 <_IO_stdin_used@@Base+0x590>
  40401e:	mov    edx,0x199
  404023:	lea    rsi,[rip+0x3fde]        # 408008 <_IO_stdin_used@@Base+0x8>
  40402a:	lea    rdi,[rip+0x43ae]        # 4083df <_IO_stdin_used@@Base+0x3df>
  404031:	inc    QWORD PTR [rip+0x9c20]        # 40dc58 <__bss_start@@Base+0x4e8>
  404038:	call   402330 <__assert_fail@plt>
  40403d:	lea    rcx,[rip+0x454c]        # 408590 <_IO_stdin_used@@Base+0x590>
  404044:	mov    edx,0x198
  404049:	lea    rsi,[rip+0x3fb8]        # 408008 <_IO_stdin_used@@Base+0x8>
  404050:	lea    rdi,[rip+0x433e]        # 408395 <_IO_stdin_used@@Base+0x395>
  404057:	inc    QWORD PTR [rip+0x9bea]        # 40dc48 <__bss_start@@Base+0x4d8>
  40405e:	call   402330 <__assert_fail@plt>
  404063:	lea    rcx,[rip+0x4526]        # 408590 <_IO_stdin_used@@Base+0x590>
  40406a:	mov    edx,0x197
  40406f:	lea    rsi,[rip+0x3f92]        # 408008 <_IO_stdin_used@@Base+0x8>
  404076:	lea    rdi,[rip+0x42c5]        # 408342 <_IO_stdin_used@@Base+0x342>
  40407d:	inc    QWORD PTR [rip+0x9bbc]        # 40dc40 <__bss_start@@Base+0x4d0>
  404084:	call   402330 <__assert_fail@plt>
  404089:	nop    DWORD PTR [rax+0x0]

0000000000404090 <if_statement_inside_if_statement@@Base>:
  404090:	endbr64 
  404094:	push   r13
  404096:	push   r12
  404098:	push   rbp
  404099:	push   rbx
  40409a:	sub    rsp,0x38
  40409e:	lea    r13,[rsp+0x8]
  4040a3:	lea    rsi,[rsp+0x10]
  4040a8:	mov    rdi,r13
  4040ab:	mov    rax,QWORD PTR fs:0x28
  4040b4:	mov    QWORD PTR [rsp+0x28],rax
  4040b9:	xor    eax,eax
  4040bb:	inc    QWORD PTR [rip+0x9b9e]        # 40dc60 <__bss_start@@Base+0x4f0>
  4040c2:	call   405160 <init_grammar@@Base>
  4040c7:	mov    edi,0x3
  4040cc:	inc    QWORD PTR [rip+0x9b95]        # 40dc68 <__bss_start@@Base+0x4f8>
  4040d3:	call   4023a0 <malloc@plt>
  4040d8:	mov    edi,0x3
  4040dd:	mov    r12,rax
  4040e0:	call   4023a0 <malloc@plt>
  4040e5:	mov    ecx,0x3d21
  4040ea:	mov    WORD PTR [rax],cx
  4040ed:	mov    BYTE PTR [rax+0x2],0x0
  4040f1:	mov    edx,0x3d21
  4040f6:	mov    edi,0x98
  4040fb:	mov    WORD PTR [r12],dx
  404100:	mov    rbp,rax
  404103:	mov    BYTE PTR [r12+0x2],0x0
  404109:	call   4023a0 <malloc@plt>
  40410e:	mov    edi,0x4
  404113:	mov    rbx,rax
  404116:	call   4023a0 <malloc@plt>
  40411b:	mov    rdi,rax
  40411e:	mov    QWORD PTR [rbx],rax
  404121:	call   404870 <init_token_opar@@Base>
  404126:	mov    edi,0x8
  40412b:	inc    QWORD PTR [rip+0x9b3e]        # 40dc70 <__bss_start@@Base+0x500>
  404132:	call   4023a0 <malloc@plt>
  404137:	mov    rdi,rax
  40413a:	mov    esi,0x1
  40413f:	mov    QWORD PTR [rbx+0x8],rax
  404143:	call   404830 <init_token_int_value@@Base>
  404148:	mov    edi,0x8
  40414d:	inc    QWORD PTR [rip+0x9b24]        # 40dc78 <__bss_start@@Base+0x508>
  404154:	call   4023a0 <malloc@plt>
  404159:	mov    rdi,rax
  40415c:	mov    esi,0x1
  404161:	mov    QWORD PTR [rbx+0x10],rax
  404165:	call   404830 <init_token_int_value@@Base>
  40416a:	mov    edi,0x10
  40416f:	inc    QWORD PTR [rip+0x9b0a]        # 40dc80 <__bss_start@@Base+0x510>
  404176:	call   4023a0 <malloc@plt>
  40417b:	mov    rdi,rax
  40417e:	mov    rsi,r12
  404181:	mov    QWORD PTR [rbx+0x18],rax
  404185:	call   404990 <init_token_boolean_op@@Base>
  40418a:	mov    edi,0x8
  40418f:	inc    QWORD PTR [rip+0x9af2]        # 40dc88 <__bss_start@@Base+0x518>
  404196:	call   4023a0 <malloc@plt>
  40419b:	mov    rdi,rax
  40419e:	mov    esi,0x1
  4041a3:	mov    QWORD PTR [rbx+0x20],rax
  4041a7:	call   404830 <init_token_int_value@@Base>
  4041ac:	mov    edi,0x4
  4041b1:	inc    QWORD PTR [rip+0x9ad8]        # 40dc90 <__bss_start@@Base+0x520>
  4041b8:	call   4023a0 <malloc@plt>
  4041bd:	mov    rdi,rax
  4041c0:	mov    QWORD PTR [rbx+0x28],rax
  4041c4:	call   404890 <init_token_cpar@@Base>
  4041c9:	mov    edi,0x4
  4041ce:	inc    QWORD PTR [rip+0x9ac3]        # 40dc98 <__bss_start@@Base+0x528>
  4041d5:	call   4023a0 <malloc@plt>
  4041da:	mov    rdi,rax
  4041dd:	mov    QWORD PTR [rbx+0x30],rax
  4041e1:	call   4048b0 <init_token_obra@@Base>
  4041e6:	mov    edi,0x4
  4041eb:	inc    QWORD PTR [rip+0x9aae]        # 40dca0 <__bss_start@@Base+0x530>
  4041f2:	call   4023a0 <malloc@plt>
  4041f7:	mov    rdi,rax
  4041fa:	mov    QWORD PTR [rbx+0x38],rax
  4041fe:	call   404950 <init_token_if@@Base>
  404203:	mov    edi,0x4
  404208:	inc    QWORD PTR [rip+0x9a99]        # 40dca8 <__bss_start@@Base+0x538>
  40420f:	call   4023a0 <malloc@plt>
  404214:	mov    rdi,rax
  404217:	mov    QWORD PTR [rbx+0x40],rax
  40421b:	call   404870 <init_token_opar@@Base>
  404220:	mov    edi,0x8
  404225:	inc    QWORD PTR [rip+0x9a84]        # 40dcb0 <__bss_start@@Base+0x540>
  40422c:	call   4023a0 <malloc@plt>
  404231:	mov    rdi,rax
  404234:	mov    esi,0x1
  404239:	mov    QWORD PTR [rbx+0x48],rax
  40423d:	call   404830 <init_token_int_value@@Base>
  404242:	mov    edi,0x8
  404247:	inc    QWORD PTR [rip+0x9a6a]        # 40dcb8 <__bss_start@@Base+0x548>
  40424e:	call   4023a0 <malloc@plt>
  404253:	mov    rdi,rax
  404256:	mov    esi,0x1
  40425b:	mov    QWORD PTR [rbx+0x50],rax
  40425f:	call   404830 <init_token_int_value@@Base>
  404264:	mov    edi,0x10
  404269:	inc    QWORD PTR [rip+0x9a50]        # 40dcc0 <__bss_start@@Base+0x550>
  404270:	call   4023a0 <malloc@plt>
  404275:	mov    rdi,rax
  404278:	mov    rsi,rbp
  40427b:	mov    QWORD PTR [rbx+0x58],rax
  40427f:	call   404990 <init_token_boolean_op@@Base>
  404284:	mov    edi,0x8
  404289:	inc    QWORD PTR [rip+0x9a38]        # 40dcc8 <__bss_start@@Base+0x558>
  404290:	call   4023a0 <malloc@plt>
  404295:	mov    rdi,rax
  404298:	mov    esi,0x1
  40429d:	mov    QWORD PTR [rbx+0x60],rax
  4042a1:	call   404830 <init_token_int_value@@Base>
  4042a6:	mov    edi,0x4
  4042ab:	inc    QWORD PTR [rip+0x9a1e]        # 40dcd0 <__bss_start@@Base+0x560>
  4042b2:	call   4023a0 <malloc@plt>
  4042b7:	mov    rdi,rax
  4042ba:	mov    QWORD PTR [rbx+0x68],rax
  4042be:	call   404890 <init_token_cpar@@Base>
  4042c3:	mov    edi,0x4
  4042c8:	inc    QWORD PTR [rip+0x9a09]        # 40dcd8 <__bss_start@@Base+0x568>
  4042cf:	call   4023a0 <malloc@plt>
  4042d4:	mov    rdi,rax
  4042d7:	mov    QWORD PTR [rbx+0x70],rax
  4042db:	call   4048b0 <init_token_obra@@Base>
  4042e0:	mov    edi,0x4
  4042e5:	inc    QWORD PTR [rip+0x99f4]        # 40dce0 <__bss_start@@Base+0x570>
  4042ec:	call   4023a0 <malloc@plt>
  4042f1:	mov    rdi,rax
  4042f4:	mov    QWORD PTR [rbx+0x78],rax
  4042f8:	call   4048d0 <init_token_cbra@@Base>
  4042fd:	mov    edi,0x4
  404302:	inc    QWORD PTR [rip+0x99df]        # 40dce8 <__bss_start@@Base+0x578>
  404309:	call   4023a0 <malloc@plt>
  40430e:	mov    rdi,rax
  404311:	mov    QWORD PTR [rbx+0x80],rax
  404318:	call   4048d0 <init_token_cbra@@Base>
  40431d:	mov    edi,0x4
  404322:	inc    QWORD PTR [rip+0x99c7]        # 40dcf0 <__bss_start@@Base+0x580>
  404329:	call   4023a0 <malloc@plt>
  40432e:	mov    rdi,rax
  404331:	mov    QWORD PTR [rbx+0x88],rax
  404338:	call   4048d0 <init_token_cbra@@Base>
  40433d:	mov    edi,0x4
  404342:	inc    QWORD PTR [rip+0x99af]        # 40dcf8 <__bss_start@@Base+0x588>
  404349:	call   4023a0 <malloc@plt>
  40434e:	mov    rdi,rax
  404351:	mov    QWORD PTR [rbx+0x90],rax
  404358:	call   404930 <init_token_eof@@Base>
  40435d:	mov    rbp,0x40ea80
  404364:	mov    rdi,r13
  404367:	inc    QWORD PTR [rip+0x9992]        # 40dd00 <__bss_start@@Base+0x590>
  40436e:	mov    QWORD PTR [rbp+0x1b8],rbx
  404375:	mov    DWORD PTR [rbp+0x1b0],0x13
  40437f:	call   405780 <read_if_statement@@Base>
  404384:	cmp    DWORD PTR [rbp+0x198],0x13
  40438b:	jne    4043b9 <if_statement_inside_if_statement@@Base+0x329>
  40438d:	test   rax,rax
  404390:	je     40440a <if_statement_inside_if_statement@@Base+0x37a>
  404392:	cmp    DWORD PTR [rax],0x4
  404395:	jne    4043e4 <if_statement_inside_if_statement@@Base+0x354>
  404397:	inc    QWORD PTR [rip+0x997a]        # 40dd18 <__bss_start@@Base+0x5a8>
  40439e:	mov    rax,QWORD PTR [rsp+0x28]
  4043a3:	xor    rax,QWORD PTR fs:0x28
  4043ac:	jne    4043df <if_statement_inside_if_statement@@Base+0x34f>
  4043ae:	add    rsp,0x38
  4043b2:	pop    rbx
  4043b3:	pop    rbp
  4043b4:	pop    r12
  4043b6:	pop    r13
  4043b8:	ret    
  4043b9:	lea    rcx,[rip+0x41a0]        # 408560 <_IO_stdin_used@@Base+0x560>
  4043c0:	mov    edx,0x1e0
  4043c5:	lea    rsi,[rip+0x3c3c]        # 408008 <_IO_stdin_used@@Base+0x8>
  4043cc:	lea    rdi,[rip+0x401e]        # 4083f1 <_IO_stdin_used@@Base+0x3f1>
  4043d3:	inc    QWORD PTR [rip+0x992e]        # 40dd08 <__bss_start@@Base+0x598>
  4043da:	call   402330 <__assert_fail@plt>
  4043df:	call   402310 <__stack_chk_fail@plt>
  4043e4:	lea    rcx,[rip+0x4175]        # 408560 <_IO_stdin_used@@Base+0x560>
  4043eb:	mov    edx,0x1e2
  4043f0:	lea    rsi,[rip+0x3c11]        # 408008 <_IO_stdin_used@@Base+0x8>
  4043f7:	lea    rdi,[rip+0x3f50]        # 40834e <_IO_stdin_used@@Base+0x34e>
  4043fe:	inc    QWORD PTR [rip+0x991b]        # 40dd20 <__bss_start@@Base+0x5b0>
  404405:	call   402330 <__assert_fail@plt>
  40440a:	lea    rcx,[rip+0x414f]        # 408560 <_IO_stdin_used@@Base+0x560>
  404411:	mov    edx,0x1e1
  404416:	lea    rsi,[rip+0x3beb]        # 408008 <_IO_stdin_used@@Base+0x8>
  40441d:	lea    rdi,[rip+0x3f1e]        # 408342 <_IO_stdin_used@@Base+0x342>
  404424:	inc    QWORD PTR [rip+0x98e5]        # 40dd10 <__bss_start@@Base+0x5a0>
  40442b:	call   402330 <__assert_fail@plt>

0000000000404430 <if_statement_inside_else_statement@@Base>:
  404430:	endbr64 
  404434:	push   r13
  404436:	push   r12
  404438:	push   rbp
  404439:	push   rbx
  40443a:	sub    rsp,0x38
  40443e:	lea    r13,[rsp+0x8]
  404443:	lea    rsi,[rsp+0x10]
  404448:	mov    rdi,r13
  40444b:	mov    rax,QWORD PTR fs:0x28
  404454:	mov    QWORD PTR [rsp+0x28],rax
  404459:	xor    eax,eax
  40445b:	inc    QWORD PTR [rip+0x98de]        # 40dd40 <__bss_start@@Base+0x5d0>
  404462:	call   405160 <init_grammar@@Base>
  404467:	mov    edi,0x3
  40446c:	inc    QWORD PTR [rip+0x98d5]        # 40dd48 <__bss_start@@Base+0x5d8>
  404473:	call   4023a0 <malloc@plt>
  404478:	mov    edi,0x3
  40447d:	mov    r12,rax
  404480:	call   4023a0 <malloc@plt>
  404485:	mov    ecx,0x3d21
  40448a:	mov    WORD PTR [rax],cx
  40448d:	mov    BYTE PTR [rax+0x2],0x0
  404491:	mov    edx,0x3d21
  404496:	mov    edi,0xa8
  40449b:	mov    WORD PTR [r12],dx
  4044a0:	mov    rbp,rax
  4044a3:	mov    BYTE PTR [r12+0x2],0x0
  4044a9:	call   4023a0 <malloc@plt>
  4044ae:	mov    edi,0x4
  4044b3:	mov    rbx,rax
  4044b6:	call   4023a0 <malloc@plt>
  4044bb:	mov    rdi,rax
  4044be:	mov    QWORD PTR [rbx],rax
  4044c1:	call   404870 <init_token_opar@@Base>
  4044c6:	mov    edi,0x8
  4044cb:	inc    QWORD PTR [rip+0x987e]        # 40dd50 <__bss_start@@Base+0x5e0>
  4044d2:	call   4023a0 <malloc@plt>
  4044d7:	mov    rdi,rax
  4044da:	mov    esi,0x1
  4044df:	mov    QWORD PTR [rbx+0x8],rax
  4044e3:	call   404830 <init_token_int_value@@Base>
  4044e8:	mov    edi,0x8
  4044ed:	inc    QWORD PTR [rip+0x9864]        # 40dd58 <__bss_start@@Base+0x5e8>
  4044f4:	call   4023a0 <malloc@plt>
  4044f9:	mov    rdi,rax
  4044fc:	mov    esi,0x1
  404501:	mov    QWORD PTR [rbx+0x10],rax
  404505:	call   404830 <init_token_int_value@@Base>
  40450a:	mov    edi,0x10
  40450f:	inc    QWORD PTR [rip+0x984a]        # 40dd60 <__bss_start@@Base+0x5f0>
  404516:	call   4023a0 <malloc@plt>
  40451b:	mov    rdi,rax
  40451e:	mov    rsi,r12
  404521:	mov    QWORD PTR [rbx+0x18],rax
  404525:	call   404990 <init_token_boolean_op@@Base>
  40452a:	mov    edi,0x8
  40452f:	inc    QWORD PTR [rip+0x9832]        # 40dd68 <__bss_start@@Base+0x5f8>
  404536:	call   4023a0 <malloc@plt>
  40453b:	mov    rdi,rax
  40453e:	mov    esi,0x1
  404543:	mov    QWORD PTR [rbx+0x20],rax
  404547:	call   404830 <init_token_int_value@@Base>
  40454c:	mov    edi,0x4
  404551:	inc    QWORD PTR [rip+0x9818]        # 40dd70 <__bss_start@@Base+0x600>
  404558:	call   4023a0 <malloc@plt>
  40455d:	mov    rdi,rax
  404560:	mov    QWORD PTR [rbx+0x28],rax
  404564:	call   404890 <init_token_cpar@@Base>
  404569:	mov    edi,0x4
  40456e:	inc    QWORD PTR [rip+0x9803]        # 40dd78 <__bss_start@@Base+0x608>
  404575:	call   4023a0 <malloc@plt>
  40457a:	mov    rdi,rax
  40457d:	mov    QWORD PTR [rbx+0x30],rax
  404581:	call   4048b0 <init_token_obra@@Base>
  404586:	mov    edi,0x4
  40458b:	inc    QWORD PTR [rip+0x97ee]        # 40dd80 <__bss_start@@Base+0x610>
  404592:	call   4023a0 <malloc@plt>
  404597:	mov    rdi,rax
  40459a:	mov    QWORD PTR [rbx+0x38],rax
  40459e:	call   4048d0 <init_token_cbra@@Base>
  4045a3:	mov    edi,0x4
  4045a8:	inc    QWORD PTR [rip+0x97d9]        # 40dd88 <__bss_start@@Base+0x618>
  4045af:	call   4023a0 <malloc@plt>
  4045b4:	mov    rdi,rax
  4045b7:	mov    QWORD PTR [rbx+0x40],rax
  4045bb:	call   404970 <init_token_else@@Base>
  4045c0:	mov    edi,0x4
  4045c5:	inc    QWORD PTR [rip+0x97c4]        # 40dd90 <__bss_start@@Base+0x620>
  4045cc:	call   4023a0 <malloc@plt>
  4045d1:	mov    rdi,rax
  4045d4:	mov    QWORD PTR [rbx+0x48],rax
  4045d8:	call   4048b0 <init_token_obra@@Base>
  4045dd:	mov    edi,0x4
  4045e2:	inc    QWORD PTR [rip+0x97af]        # 40dd98 <__bss_start@@Base+0x628>
  4045e9:	call   4023a0 <malloc@plt>
  4045ee:	mov    rdi,rax
  4045f1:	mov    QWORD PTR [rbx+0x50],rax
  4045f5:	call   404950 <init_token_if@@Base>
  4045fa:	mov    edi,0x4
  4045ff:	inc    QWORD PTR [rip+0x979a]        # 40dda0 <__bss_start@@Base+0x630>
  404606:	call   4023a0 <malloc@plt>
  40460b:	mov    rdi,rax
  40460e:	mov    QWORD PTR [rbx+0x58],rax
  404612:	call   404870 <init_token_opar@@Base>
  404617:	mov    edi,0x8
  40461c:	inc    QWORD PTR [rip+0x9785]        # 40dda8 <__bss_start@@Base+0x638>
  404623:	call   4023a0 <malloc@plt>
  404628:	mov    rdi,rax
  40462b:	mov    esi,0x1
  404630:	mov    QWORD PTR [rbx+0x60],rax
  404634:	call   404830 <init_token_int_value@@Base>
  404639:	mov    edi,0x8
  40463e:	inc    QWORD PTR [rip+0x976b]        # 40ddb0 <__bss_start@@Base+0x640>
  404645:	call   4023a0 <malloc@plt>
  40464a:	mov    rdi,rax
  40464d:	mov    esi,0x1
  404652:	mov    QWORD PTR [rbx+0x68],rax
  404656:	call   404830 <init_token_int_value@@Base>
  40465b:	mov    edi,0x10
  404660:	inc    QWORD PTR [rip+0x9751]        # 40ddb8 <__bss_start@@Base+0x648>
  404667:	call   4023a0 <malloc@plt>
  40466c:	mov    rdi,rax
  40466f:	mov    rsi,rbp
  404672:	mov    QWORD PTR [rbx+0x70],rax
  404676:	call   404990 <init_token_boolean_op@@Base>
  40467b:	mov    edi,0x8
  404680:	inc    QWORD PTR [rip+0x9739]        # 40ddc0 <__bss_start@@Base+0x650>
  404687:	call   4023a0 <malloc@plt>
  40468c:	mov    rdi,rax
  40468f:	mov    esi,0x1
  404694:	mov    QWORD PTR [rbx+0x78],rax
  404698:	call   404830 <init_token_int_value@@Base>
  40469d:	mov    edi,0x4
  4046a2:	inc    QWORD PTR [rip+0x971f]        # 40ddc8 <__bss_start@@Base+0x658>
  4046a9:	call   4023a0 <malloc@plt>
  4046ae:	mov    rdi,rax
  4046b1:	mov    QWORD PTR [rbx+0x80],rax
  4046b8:	call   404890 <init_token_cpar@@Base>
  4046bd:	mov    edi,0x4
  4046c2:	inc    QWORD PTR [rip+0x9707]        # 40ddd0 <__bss_start@@Base+0x660>
  4046c9:	call   4023a0 <malloc@plt>
  4046ce:	mov    rdi,rax
  4046d1:	mov    QWORD PTR [rbx+0x88],rax
  4046d8:	call   4048b0 <init_token_obra@@Base>
  4046dd:	mov    edi,0x4
  4046e2:	inc    QWORD PTR [rip+0x96ef]        # 40ddd8 <__bss_start@@Base+0x668>
  4046e9:	call   4023a0 <malloc@plt>
  4046ee:	mov    rdi,rax
  4046f1:	mov    QWORD PTR [rbx+0x90],rax
  4046f8:	call   4048d0 <init_token_cbra@@Base>
  4046fd:	mov    edi,0x4
  404702:	inc    QWORD PTR [rip+0x96d7]        # 40dde0 <__bss_start@@Base+0x670>
  404709:	call   4023a0 <malloc@plt>
  40470e:	mov    rdi,rax
  404711:	mov    QWORD PTR [rbx+0x98],rax
  404718:	call   4048d0 <init_token_cbra@@Base>
  40471d:	mov    edi,0x4
  404722:	inc    QWORD PTR [rip+0x96bf]        # 40dde8 <__bss_start@@Base+0x678>
  404729:	call   4023a0 <malloc@plt>
  40472e:	mov    rdi,rax
  404731:	mov    QWORD PTR [rbx+0xa0],rax
  404738:	call   4048d0 <init_token_cbra@@Base>
  40473d:	mov    rbp,0x40ea80
  404744:	mov    rdi,r13
  404747:	inc    QWORD PTR [rip+0x96a2]        # 40ddf0 <__bss_start@@Base+0x680>
  40474e:	mov    QWORD PTR [rbp+0x1b8],rbx
  404755:	mov    DWORD PTR [rbp+0x1b0],0x15
  40475f:	call   405780 <read_if_statement@@Base>
  404764:	cmp    DWORD PTR [rbp+0x198],0x15
  40476b:	jne    404799 <if_statement_inside_else_statement@@Base+0x369>
  40476d:	test   rax,rax
  404770:	je     4047ea <if_statement_inside_else_statement@@Base+0x3ba>
  404772:	cmp    DWORD PTR [rax],0x4
  404775:	jne    4047c4 <if_statement_inside_else_statement@@Base+0x394>
  404777:	inc    QWORD PTR [rip+0x968a]        # 40de08 <__bss_start@@Base+0x698>
  40477e:	mov    rax,QWORD PTR [rsp+0x28]
  404783:	xor    rax,QWORD PTR fs:0x28
  40478c:	jne    4047bf <if_statement_inside_else_statement@@Base+0x38f>
  40478e:	add    rsp,0x38
  404792:	pop    rbx
  404793:	pop    rbp
  404794:	pop    r12
  404796:	pop    r13
  404798:	ret    
  404799:	lea    rcx,[rip+0x3d80]        # 408520 <_IO_stdin_used@@Base+0x520>
  4047a0:	mov    edx,0x22e
  4047a5:	lea    rsi,[rip+0x385c]        # 408008 <_IO_stdin_used@@Base+0x8>
  4047ac:	lea    rdi,[rip+0x3c59]        # 40840c <_IO_stdin_used@@Base+0x40c>
  4047b3:	inc    QWORD PTR [rip+0x963e]        # 40ddf8 <__bss_start@@Base+0x688>
  4047ba:	call   402330 <__assert_fail@plt>
  4047bf:	call   402310 <__stack_chk_fail@plt>
  4047c4:	lea    rcx,[rip+0x3d55]        # 408520 <_IO_stdin_used@@Base+0x520>
  4047cb:	mov    edx,0x230
  4047d0:	lea    rsi,[rip+0x3831]        # 408008 <_IO_stdin_used@@Base+0x8>
  4047d7:	lea    rdi,[rip+0x3b70]        # 40834e <_IO_stdin_used@@Base+0x34e>
  4047de:	inc    QWORD PTR [rip+0x962b]        # 40de10 <__bss_start@@Base+0x6a0>
  4047e5:	call   402330 <__assert_fail@plt>
  4047ea:	lea    rcx,[rip+0x3d2f]        # 408520 <_IO_stdin_used@@Base+0x520>
  4047f1:	mov    edx,0x22f
  4047f6:	lea    rsi,[rip+0x380b]        # 408008 <_IO_stdin_used@@Base+0x8>
  4047fd:	lea    rdi,[rip+0x3b3e]        # 408342 <_IO_stdin_used@@Base+0x342>
  404804:	inc    QWORD PTR [rip+0x95f5]        # 40de00 <__bss_start@@Base+0x690>
  40480b:	call   402330 <__assert_fail@plt>

0000000000404810 <init_token_int_type@@Base>:
  404810:	endbr64 
  404814:	inc    QWORD PTR [rip+0x97d5]        # 40dff0 <__bss_start@@Base+0x880>
  40481b:	mov    DWORD PTR [rdi],0x0
  404821:	ret    
  404822:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40482d:	nop    DWORD PTR [rax]

0000000000404830 <init_token_int_value@@Base>:
  404830:	endbr64 
  404834:	inc    QWORD PTR [rip+0x97bd]        # 40dff8 <__bss_start@@Base+0x888>
  40483b:	mov    DWORD PTR [rdi],0x1
  404841:	mov    DWORD PTR [rdi+0x4],esi
  404844:	ret    
  404845:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

0000000000404850 <init_token_function@@Base>:
  404850:	endbr64 
  404854:	inc    QWORD PTR [rip+0x97a5]        # 40e000 <__bss_start@@Base+0x890>
  40485b:	mov    DWORD PTR [rdi],0x2
  404861:	mov    QWORD PTR [rdi+0x8],rsi
  404865:	ret    
  404866:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000404870 <init_token_opar@@Base>:
  404870:	endbr64 
  404874:	inc    QWORD PTR [rip+0x978d]        # 40e008 <__bss_start@@Base+0x898>
  40487b:	mov    DWORD PTR [rdi],0x3
  404881:	ret    
  404882:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40488d:	nop    DWORD PTR [rax]

0000000000404890 <init_token_cpar@@Base>:
  404890:	endbr64 
  404894:	inc    QWORD PTR [rip+0x9775]        # 40e010 <__bss_start@@Base+0x8a0>
  40489b:	mov    DWORD PTR [rdi],0x4
  4048a1:	ret    
  4048a2:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4048ad:	nop    DWORD PTR [rax]

00000000004048b0 <init_token_obra@@Base>:
  4048b0:	endbr64 
  4048b4:	inc    QWORD PTR [rip+0x975d]        # 40e018 <__bss_start@@Base+0x8a8>
  4048bb:	mov    DWORD PTR [rdi],0x5
  4048c1:	ret    
  4048c2:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4048cd:	nop    DWORD PTR [rax]

00000000004048d0 <init_token_cbra@@Base>:
  4048d0:	endbr64 
  4048d4:	inc    QWORD PTR [rip+0x9745]        # 40e020 <__bss_start@@Base+0x8b0>
  4048db:	mov    DWORD PTR [rdi],0x6
  4048e1:	ret    
  4048e2:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4048ed:	nop    DWORD PTR [rax]

00000000004048f0 <init_token_return@@Base>:
  4048f0:	endbr64 
  4048f4:	inc    QWORD PTR [rip+0x972d]        # 40e028 <__bss_start@@Base+0x8b8>
  4048fb:	mov    DWORD PTR [rdi],0x7
  404901:	ret    
  404902:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40490d:	nop    DWORD PTR [rax]

0000000000404910 <init_token_semicolon@@Base>:
  404910:	endbr64 
  404914:	inc    QWORD PTR [rip+0x9715]        # 40e030 <__bss_start@@Base+0x8c0>
  40491b:	mov    DWORD PTR [rdi],0x8
  404921:	ret    
  404922:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40492d:	nop    DWORD PTR [rax]

0000000000404930 <init_token_eof@@Base>:
  404930:	endbr64 
  404934:	inc    QWORD PTR [rip+0x96fd]        # 40e038 <__bss_start@@Base+0x8c8>
  40493b:	mov    DWORD PTR [rdi],0x9
  404941:	ret    
  404942:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40494d:	nop    DWORD PTR [rax]

0000000000404950 <init_token_if@@Base>:
  404950:	endbr64 
  404954:	inc    QWORD PTR [rip+0x96e5]        # 40e040 <__bss_start@@Base+0x8d0>
  40495b:	mov    DWORD PTR [rdi],0xa
  404961:	ret    
  404962:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40496d:	nop    DWORD PTR [rax]

0000000000404970 <init_token_else@@Base>:
  404970:	endbr64 
  404974:	inc    QWORD PTR [rip+0x96cd]        # 40e048 <__bss_start@@Base+0x8d8>
  40497b:	mov    DWORD PTR [rdi],0xb
  404981:	ret    
  404982:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40498d:	nop    DWORD PTR [rax]

0000000000404990 <init_token_boolean_op@@Base>:
  404990:	endbr64 
  404994:	inc    QWORD PTR [rip+0x96b5]        # 40e050 <__bss_start@@Base+0x8e0>
  40499b:	mov    DWORD PTR [rdi],0xc
  4049a1:	mov    QWORD PTR [rdi+0x8],rsi
  4049a5:	ret    
  4049a6:	nop    WORD PTR cs:[rax+rax*1+0x0]

00000000004049b0 <free_token_int_type@@Base>:
  4049b0:	endbr64 
  4049b4:	inc    QWORD PTR [rip+0x969d]        # 40e058 <__bss_start@@Base+0x8e8>
  4049bb:	jmp    402250 <free@plt>

00000000004049c0 <free_token_int_value@@Base>:
  4049c0:	endbr64 
  4049c4:	inc    QWORD PTR [rip+0x9695]        # 40e060 <__bss_start@@Base+0x8f0>
  4049cb:	jmp    402250 <free@plt>

00000000004049d0 <free_token_function@@Base>:
  4049d0:	endbr64 
  4049d4:	inc    QWORD PTR [rip+0x968d]        # 40e068 <__bss_start@@Base+0x8f8>
  4049db:	jmp    402250 <free@plt>

00000000004049e0 <free_token_opar@@Base>:
  4049e0:	endbr64 
  4049e4:	inc    QWORD PTR [rip+0x9685]        # 40e070 <__bss_start@@Base+0x900>
  4049eb:	jmp    402250 <free@plt>

00000000004049f0 <free_token_cpar@@Base>:
  4049f0:	endbr64 
  4049f4:	inc    QWORD PTR [rip+0x967d]        # 40e078 <__bss_start@@Base+0x908>
  4049fb:	jmp    402250 <free@plt>

0000000000404a00 <free_token_obra@@Base>:
  404a00:	endbr64 
  404a04:	inc    QWORD PTR [rip+0x9675]        # 40e080 <__bss_start@@Base+0x910>
  404a0b:	jmp    402250 <free@plt>

0000000000404a10 <free_token_cbra@@Base>:
  404a10:	endbr64 
  404a14:	inc    QWORD PTR [rip+0x966d]        # 40e088 <__bss_start@@Base+0x918>
  404a1b:	jmp    402250 <free@plt>

0000000000404a20 <free_token_return@@Base>:
  404a20:	endbr64 
  404a24:	inc    QWORD PTR [rip+0x9665]        # 40e090 <__bss_start@@Base+0x920>
  404a2b:	jmp    402250 <free@plt>

0000000000404a30 <free_token_semicolon@@Base>:
  404a30:	endbr64 
  404a34:	inc    QWORD PTR [rip+0x965d]        # 40e098 <__bss_start@@Base+0x928>
  404a3b:	jmp    402250 <free@plt>

0000000000404a40 <free_token_eof@@Base>:
  404a40:	endbr64 
  404a44:	inc    QWORD PTR [rip+0x9655]        # 40e0a0 <__bss_start@@Base+0x930>
  404a4b:	jmp    402250 <free@plt>

0000000000404a50 <free_token_if@@Base>:
  404a50:	endbr64 
  404a54:	inc    QWORD PTR [rip+0x964d]        # 40e0a8 <__bss_start@@Base+0x938>
  404a5b:	jmp    402250 <free@plt>

0000000000404a60 <free_token_else@@Base>:
  404a60:	endbr64 
  404a64:	inc    QWORD PTR [rip+0x9645]        # 40e0b0 <__bss_start@@Base+0x940>
  404a6b:	jmp    402250 <free@plt>

0000000000404a70 <free_token_boolean_op@@Base>:
  404a70:	endbr64 
  404a74:	push   rbx
  404a75:	mov    rbx,rdi
  404a78:	mov    rdi,QWORD PTR [rdi+0x8]
  404a7c:	test   rdi,rdi
  404a7f:	je     404aa0 <free_token_boolean_op@@Base+0x30>
  404a81:	inc    QWORD PTR [rip+0x9638]        # 40e0c0 <__bss_start@@Base+0x950>
  404a88:	call   402250 <free@plt>
  404a8d:	mov    rdi,rbx
  404a90:	pop    rbx
  404a91:	jmp    402250 <free@plt>
  404a96:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404aa0:	inc    QWORD PTR [rip+0x9621]        # 40e0c8 <__bss_start@@Base+0x958>
  404aa7:	mov    rdi,rbx
  404aaa:	pop    rbx
  404aab:	jmp    402250 <free@plt>

0000000000404ab0 <init_ast_base@@Base>:
  404ab0:	endbr64 
  404ab4:	inc    QWORD PTR [rip+0x9625]        # 40e0e0 <__bss_start@@Base+0x970>
  404abb:	mov    DWORD PTR [rdi],esi
  404abd:	mov    QWORD PTR [rdi+0x8],rdx
  404ac1:	ret    
  404ac2:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  404acd:	nop    DWORD PTR [rax]

0000000000404ad0 <init_ast_base_single@@Base>:
  404ad0:	endbr64 
  404ad4:	sub    rsp,0x8
  404ad8:	xor    edx,edx
  404ada:	inc    QWORD PTR [rip+0x960f]        # 40e0f0 <__bss_start@@Base+0x980>
  404ae1:	call   404ab0 <init_ast_base@@Base>
  404ae6:	inc    QWORD PTR [rip+0x960b]        # 40e0f8 <__bss_start@@Base+0x988>
  404aed:	add    rsp,0x8
  404af1:	ret    
  404af2:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  404afd:	nop    DWORD PTR [rax]

0000000000404b00 <init_node_id@@Base>:
  404b00:	endbr64 
  404b04:	push   rbp
  404b05:	mov    rbp,rsi
  404b08:	xor    esi,esi
  404b0a:	push   rbx
  404b0b:	mov    rbx,rdi
  404b0e:	sub    rsp,0x8
  404b12:	inc    QWORD PTR [rip+0x95e7]        # 40e100 <__bss_start@@Base+0x990>
  404b19:	call   404ad0 <init_ast_base_single@@Base>
  404b1e:	mov    QWORD PTR [rbx+0x10],rbp
  404b22:	inc    QWORD PTR [rip+0x95df]        # 40e108 <__bss_start@@Base+0x998>
  404b29:	add    rsp,0x8
  404b2d:	pop    rbx
  404b2e:	pop    rbp
  404b2f:	ret    

0000000000404b30 <init_node_int@@Base>:
  404b30:	endbr64 
  404b34:	push   rbp
  404b35:	mov    ebp,esi
  404b37:	mov    esi,0x1
  404b3c:	push   rbx
  404b3d:	mov    rbx,rdi
  404b40:	sub    rsp,0x8
  404b44:	inc    QWORD PTR [rip+0x95c5]        # 40e110 <__bss_start@@Base+0x9a0>
  404b4b:	call   404ad0 <init_ast_base_single@@Base>
  404b50:	mov    DWORD PTR [rbx+0x10],ebp
  404b53:	inc    QWORD PTR [rip+0x95be]        # 40e118 <__bss_start@@Base+0x9a8>
  404b5a:	add    rsp,0x8
  404b5e:	pop    rbx
  404b5f:	pop    rbp
  404b60:	ret    
  404b61:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  404b6c:	nop    DWORD PTR [rax+0x0]

0000000000404b70 <init_node_function@@Base>:
  404b70:	endbr64 
  404b74:	push   r12
  404b76:	mov    r12,rsi
  404b79:	mov    esi,0x2
  404b7e:	push   rbp
  404b7f:	mov    rbp,rdx
  404b82:	inc    QWORD PTR [rip+0x9597]        # 40e120 <__bss_start@@Base+0x9b0>
  404b89:	push   rbx
  404b8a:	mov    rbx,rdi
  404b8d:	call   404ad0 <init_ast_base_single@@Base>
  404b92:	mov    QWORD PTR [rbx+0x10],r12
  404b96:	mov    QWORD PTR [rbx+0x18],rbp
  404b9a:	pop    rbx
  404b9b:	pop    rbp
  404b9c:	inc    QWORD PTR [rip+0x9585]        # 40e128 <__bss_start@@Base+0x9b8>
  404ba3:	pop    r12
  404ba5:	ret    
  404ba6:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000404bb0 <init_node_return@@Base>:
  404bb0:	endbr64 
  404bb4:	push   rbp
  404bb5:	mov    rbp,rsi
  404bb8:	mov    esi,0x3
  404bbd:	push   rbx
  404bbe:	mov    rbx,rdi
  404bc1:	sub    rsp,0x8
  404bc5:	inc    QWORD PTR [rip+0x9564]        # 40e130 <__bss_start@@Base+0x9c0>
  404bcc:	call   404ad0 <init_ast_base_single@@Base>
  404bd1:	mov    QWORD PTR [rbx+0x10],rbp
  404bd5:	inc    QWORD PTR [rip+0x955c]        # 40e138 <__bss_start@@Base+0x9c8>
  404bdc:	add    rsp,0x8
  404be0:	pop    rbx
  404be1:	pop    rbp
  404be2:	ret    
  404be3:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  404bee:	xchg   ax,ax

0000000000404bf0 <init_node_if@@Base>:
  404bf0:	endbr64 
  404bf4:	push   r13
  404bf6:	mov    r13,rsi
  404bf9:	mov    esi,0x4
  404bfe:	push   r12
  404c00:	mov    r12,rdx
  404c03:	push   rbp
  404c04:	mov    rbp,rcx
  404c07:	push   rbx
  404c08:	mov    rbx,rdi
  404c0b:	sub    rsp,0x8
  404c0f:	inc    QWORD PTR [rip+0x952a]        # 40e140 <__bss_start@@Base+0x9d0>
  404c16:	call   404ad0 <init_ast_base_single@@Base>
  404c1b:	mov    QWORD PTR [rbx+0x10],r13
  404c1f:	mov    QWORD PTR [rbx+0x18],r12
  404c23:	mov    QWORD PTR [rbx+0x20],rbp
  404c27:	inc    QWORD PTR [rip+0x951a]        # 40e148 <__bss_start@@Base+0x9d8>
  404c2e:	add    rsp,0x8
  404c32:	pop    rbx
  404c33:	pop    rbp
  404c34:	pop    r12
  404c36:	pop    r13
  404c38:	ret    
  404c39:	nop    DWORD PTR [rax+0x0]

0000000000404c40 <init_node_boolean_operator@@Base>:
  404c40:	endbr64 
  404c44:	push   r13
  404c46:	mov    r13d,esi
  404c49:	xor    esi,esi
  404c4b:	push   r12
  404c4d:	mov    r12,rdx
  404c50:	push   rbp
  404c51:	mov    rbp,rcx
  404c54:	push   rbx
  404c55:	mov    rbx,rdi
  404c58:	sub    rsp,0x8
  404c5c:	inc    QWORD PTR [rip+0x94ed]        # 40e150 <__bss_start@@Base+0x9e0>
  404c63:	call   404ad0 <init_ast_base_single@@Base>
  404c68:	mov    DWORD PTR [rbx+0x20],r13d
  404c6c:	mov    QWORD PTR [rbx+0x10],r12
  404c70:	mov    QWORD PTR [rbx+0x18],rbp
  404c74:	mov    DWORD PTR [rbx],0x5
  404c7a:	inc    QWORD PTR [rip+0x94d7]        # 40e158 <__bss_start@@Base+0x9e8>
  404c81:	add    rsp,0x8
  404c85:	pop    rbx
  404c86:	pop    rbp
  404c87:	pop    r12
  404c89:	pop    r13
  404c8b:	ret    
  404c8c:	nop    DWORD PTR [rax+0x0]

0000000000404c90 <free_node_boolean_operator@@Base>:
  404c90:	endbr64 
  404c94:	push   rbx
  404c95:	mov    rbx,rdi
  404c98:	mov    rdi,QWORD PTR [rdi+0x8]
  404c9c:	test   rdi,rdi
  404c9f:	je     404ce0 <free_node_boolean_operator@@Base+0x50>
  404ca1:	inc    QWORD PTR [rip+0x95f8]        # 40e2a0 <__bss_start@@Base+0xb30>
  404ca8:	call   404cf0 <free_node@@Base>
  404cad:	inc    QWORD PTR [rip+0x95fc]        # 40e2b0 <__bss_start@@Base+0xb40>
  404cb4:	mov    rdi,QWORD PTR [rbx+0x10]
  404cb8:	call   404cf0 <free_node@@Base>
  404cbd:	mov    rdi,QWORD PTR [rbx+0x18]
  404cc1:	inc    QWORD PTR [rip+0x95f0]        # 40e2b8 <__bss_start@@Base+0xb48>
  404cc8:	call   404cf0 <free_node@@Base>
  404ccd:	inc    QWORD PTR [rip+0x95ec]        # 40e2c0 <__bss_start@@Base+0xb50>
  404cd4:	mov    rdi,rbx
  404cd7:	pop    rbx
  404cd8:	jmp    402250 <free@plt>
  404cdd:	nop    DWORD PTR [rax]
  404ce0:	inc    QWORD PTR [rip+0x95c1]        # 40e2a8 <__bss_start@@Base+0xb38>
  404ce7:	jmp    404cb4 <free_node_boolean_operator@@Base+0x24>
  404ce9:	nop    DWORD PTR [rax+0x0]

0000000000404cf0 <free_node@@Base>:
  404cf0:	endbr64 
  404cf4:	sub    rsp,0x8
  404cf8:	cmp    DWORD PTR [rdi],0x5
  404cfb:	ja     404dc8 <free_node@@Base+0xd8>
  404d01:	mov    eax,DWORD PTR [rdi]
  404d03:	lea    rdx,[rip+0x3b82]        # 40888c <_IO_stdin_used@@Base+0x88c>
  404d0a:	movsxd rax,DWORD PTR [rdx+rax*4]
  404d0e:	add    rax,rdx
  404d11:	notrack jmp rax
  404d14:	nop    DWORD PTR [rax+0x0]
  404d18:	inc    QWORD PTR [rip+0x9469]        # 40e188 <__bss_start@@Base+0xa18>
  404d1f:	call   404e00 <free_node_if@@Base>
  404d24:	inc    QWORD PTR [rip+0x948d]        # 40e1b8 <__bss_start@@Base+0xa48>
  404d2b:	add    rsp,0x8
  404d2f:	ret    
  404d30:	inc    QWORD PTR [rip+0x9459]        # 40e190 <__bss_start@@Base+0xa20>
  404d37:	call   404c90 <free_node_boolean_operator@@Base>
  404d3c:	inc    QWORD PTR [rip+0x947d]        # 40e1c0 <__bss_start@@Base+0xa50>
  404d43:	add    rsp,0x8
  404d47:	ret    
  404d48:	nop    DWORD PTR [rax+rax*1+0x0]
  404d50:	inc    QWORD PTR [rip+0x9411]        # 40e168 <__bss_start@@Base+0x9f8>
  404d57:	call   404f40 <free_node_id@@Base>
  404d5c:	inc    QWORD PTR [rip+0x9435]        # 40e198 <__bss_start@@Base+0xa28>
  404d63:	add    rsp,0x8
  404d67:	ret    
  404d68:	nop    DWORD PTR [rax+rax*1+0x0]
  404d70:	inc    QWORD PTR [rip+0x93f9]        # 40e170 <__bss_start@@Base+0xa00>
  404d77:	call   404f00 <free_node_int@@Base>
  404d7c:	inc    QWORD PTR [rip+0x941d]        # 40e1a0 <__bss_start@@Base+0xa30>
  404d83:	add    rsp,0x8
  404d87:	ret    
  404d88:	nop    DWORD PTR [rax+rax*1+0x0]
  404d90:	inc    QWORD PTR [rip+0x93e1]        # 40e178 <__bss_start@@Base+0xa08>
  404d97:	call   404eb0 <free_node_function@@Base>
  404d9c:	inc    QWORD PTR [rip+0x9405]        # 40e1a8 <__bss_start@@Base+0xa38>
  404da3:	add    rsp,0x8
  404da7:	ret    
  404da8:	nop    DWORD PTR [rax+rax*1+0x0]
  404db0:	inc    QWORD PTR [rip+0x93c9]        # 40e180 <__bss_start@@Base+0xa10>
  404db7:	call   404e70 <free_node_return@@Base>
  404dbc:	inc    QWORD PTR [rip+0x93ed]        # 40e1b0 <__bss_start@@Base+0xa40>
  404dc3:	add    rsp,0x8
  404dc7:	ret    
  404dc8:	mov    rax,QWORD PTR [rip+0x7229]        # 40bff8 <stderr@GLIBC_2.2.5>
  404dcf:	lea    rdi,[rip+0x39ea]        # 4087c0 <_IO_stdin_used@@Base+0x7c0>
  404dd6:	mov    rcx,QWORD PTR [rax]
  404dd9:	mov    edx,0x1f
  404dde:	mov    esi,0x1
  404de3:	inc    QWORD PTR [rip+0x9376]        # 40e160 <__bss_start@@Base+0x9f0>
  404dea:	call   402430 <fwrite@plt>
  404def:	mov    edi,0x1
  404df4:	inc    QWORD PTR [rip+0x93cd]        # 40e1c8 <__bss_start@@Base+0xa58>
  404dfb:	call   402420 <exit@plt>

0000000000404e00 <free_node_if@@Base>:
  404e00:	endbr64 
  404e04:	push   rbx
  404e05:	mov    rbx,rdi
  404e08:	mov    rdi,QWORD PTR [rdi+0x8]
  404e0c:	test   rdi,rdi
  404e0f:	je     404e60 <free_node_if@@Base+0x60>
  404e11:	inc    QWORD PTR [rip+0x9448]        # 40e260 <__bss_start@@Base+0xaf0>
  404e18:	call   404cf0 <free_node@@Base>
  404e1d:	inc    QWORD PTR [rip+0x944c]        # 40e270 <__bss_start@@Base+0xb00>
  404e24:	mov    rdi,QWORD PTR [rbx+0x10]
  404e28:	call   404cf0 <free_node@@Base>
  404e2d:	mov    rdi,QWORD PTR [rbx+0x18]
  404e31:	inc    QWORD PTR [rip+0x9440]        # 40e278 <__bss_start@@Base+0xb08>
  404e38:	call   404cf0 <free_node@@Base>
  404e3d:	mov    rdi,QWORD PTR [rbx+0x20]
  404e41:	inc    QWORD PTR [rip+0x9438]        # 40e280 <__bss_start@@Base+0xb10>
  404e48:	call   404cf0 <free_node@@Base>
  404e4d:	inc    QWORD PTR [rip+0x9434]        # 40e288 <__bss_start@@Base+0xb18>
  404e54:	mov    rdi,rbx
  404e57:	pop    rbx
  404e58:	jmp    402250 <free@plt>
  404e5d:	nop    DWORD PTR [rax]
  404e60:	inc    QWORD PTR [rip+0x9401]        # 40e268 <__bss_start@@Base+0xaf8>
  404e67:	jmp    404e24 <free_node_if@@Base+0x24>
  404e69:	nop    DWORD PTR [rax+0x0]

0000000000404e70 <free_node_return@@Base>:
  404e70:	endbr64 
  404e74:	push   rbx
  404e75:	mov    rbx,rdi
  404e78:	mov    rdi,QWORD PTR [rdi+0x8]
  404e7c:	test   rdi,rdi
  404e7f:	je     404ea0 <free_node_return@@Base+0x30>
  404e81:	inc    QWORD PTR [rip+0x93a8]        # 40e230 <__bss_start@@Base+0xac0>
  404e88:	call   404cf0 <free_node@@Base>
  404e8d:	inc    QWORD PTR [rip+0x93ac]        # 40e240 <__bss_start@@Base+0xad0>
  404e94:	mov    rdi,rbx
  404e97:	pop    rbx
  404e98:	jmp    402250 <free@plt>
  404e9d:	nop    DWORD PTR [rax]
  404ea0:	inc    QWORD PTR [rip+0x9391]        # 40e238 <__bss_start@@Base+0xac8>
  404ea7:	mov    rdi,rbx
  404eaa:	pop    rbx
  404eab:	jmp    402250 <free@plt>

0000000000404eb0 <free_node_function@@Base>:
  404eb0:	endbr64 
  404eb4:	push   rbx
  404eb5:	mov    rbx,rdi
  404eb8:	mov    rdi,QWORD PTR [rdi+0x8]
  404ebc:	test   rdi,rdi
  404ebf:	je     404ef0 <free_node_function@@Base+0x40>
  404ec1:	inc    QWORD PTR [rip+0x9348]        # 40e210 <__bss_start@@Base+0xaa0>
  404ec8:	call   404cf0 <free_node@@Base>
  404ecd:	inc    QWORD PTR [rip+0x934c]        # 40e220 <__bss_start@@Base+0xab0>
  404ed4:	mov    rdi,QWORD PTR [rbx+0x10]
  404ed8:	call   402250 <free@plt>
  404edd:	mov    rdi,rbx
  404ee0:	pop    rbx
  404ee1:	jmp    402250 <free@plt>
  404ee6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404ef0:	inc    QWORD PTR [rip+0x9321]        # 40e218 <__bss_start@@Base+0xaa8>
  404ef7:	jmp    404ed4 <free_node_function@@Base+0x24>
  404ef9:	nop    DWORD PTR [rax+0x0]

0000000000404f00 <free_node_int@@Base>:
  404f00:	endbr64 
  404f04:	push   rbx
  404f05:	mov    rbx,rdi
  404f08:	mov    rdi,QWORD PTR [rdi+0x8]
  404f0c:	test   rdi,rdi
  404f0f:	je     404f30 <free_node_int@@Base+0x30>
  404f11:	inc    QWORD PTR [rip+0x92d8]        # 40e1f0 <__bss_start@@Base+0xa80>
  404f18:	call   404cf0 <free_node@@Base>
  404f1d:	inc    QWORD PTR [rip+0x92dc]        # 40e200 <__bss_start@@Base+0xa90>
  404f24:	mov    rdi,rbx
  404f27:	pop    rbx
  404f28:	jmp    402250 <free@plt>
  404f2d:	nop    DWORD PTR [rax]
  404f30:	inc    QWORD PTR [rip+0x92c1]        # 40e1f8 <__bss_start@@Base+0xa88>
  404f37:	mov    rdi,rbx
  404f3a:	pop    rbx
  404f3b:	jmp    402250 <free@plt>

0000000000404f40 <free_node_id@@Base>:
  404f40:	endbr64 
  404f44:	push   rbx
  404f45:	mov    rbx,rdi
  404f48:	mov    rdi,QWORD PTR [rdi+0x8]
  404f4c:	test   rdi,rdi
  404f4f:	je     404f70 <free_node_id@@Base+0x30>
  404f51:	inc    QWORD PTR [rip+0x9278]        # 40e1d0 <__bss_start@@Base+0xa60>
  404f58:	call   404cf0 <free_node@@Base>
  404f5d:	inc    QWORD PTR [rip+0x927c]        # 40e1e0 <__bss_start@@Base+0xa70>
  404f64:	mov    rdi,rbx
  404f67:	pop    rbx
  404f68:	jmp    402250 <free@plt>
  404f6d:	nop    DWORD PTR [rax]
  404f70:	inc    QWORD PTR [rip+0x9261]        # 40e1d8 <__bss_start@@Base+0xa68>
  404f77:	mov    rdi,rbx
  404f7a:	pop    rbx
  404f7b:	jmp    402250 <free@plt>

0000000000404f80 <get_boolean_op_value@@Base>:
  404f80:	endbr64 
  404f84:	push   rbx
  404f85:	mov    esi,0x2
  404f8a:	mov    rbx,QWORD PTR [rdi+0x8]
  404f8e:	mov    rdi,rbx
  404f91:	call   402350 <strnlen@plt>
  404f96:	cmp    rax,0x2
  404f9a:	je     405020 <get_boolean_op_value@@Base+0xa0>
  404fa0:	movzx  eax,BYTE PTR [rbx]
  404fa3:	cmp    al,0x3c
  404fa5:	je     405010 <get_boolean_op_value@@Base+0x90>
  404fa7:	cmp    al,0x3e
  404fa9:	je     405000 <get_boolean_op_value@@Base+0x80>
  404fab:	cmp    al,0x21
  404fad:	je     404ff0 <get_boolean_op_value@@Base+0x70>
  404faf:	mov    rax,QWORD PTR [rip+0x7042]        # 40bff8 <stderr@GLIBC_2.2.5>
  404fb6:	mov    rcx,rbx
  404fb9:	mov    rdi,QWORD PTR [rax]
  404fbc:	lea    rdx,[rip+0x381d]        # 4087e0 <_IO_stdin_used@@Base+0x7e0>
  404fc3:	mov    esi,0x1
  404fc8:	xor    eax,eax
  404fca:	inc    QWORD PTR [rip+0x934f]        # 40e320 <__bss_start@@Base+0xbb0>
  404fd1:	call   402440 <__fprintf_chk@plt>
  404fd6:	mov    edi,0x1
  404fdb:	inc    QWORD PTR [rip+0x935e]        # 40e340 <__bss_start@@Base+0xbd0>
  404fe2:	call   402420 <exit@plt>
  404fe7:	nop    WORD PTR [rax+rax*1+0x0]
  404ff0:	mov    eax,0x8
  404ff5:	inc    QWORD PTR [rip+0x932c]        # 40e328 <__bss_start@@Base+0xbb8>
  404ffc:	pop    rbx
  404ffd:	ret    
  404ffe:	xchg   ax,ax
  405000:	mov    eax,0x7
  405005:	inc    QWORD PTR [rip+0x932c]        # 40e338 <__bss_start@@Base+0xbc8>
  40500c:	pop    rbx
  40500d:	ret    
  40500e:	xchg   ax,ax
  405010:	mov    eax,0x6
  405015:	inc    QWORD PTR [rip+0x9314]        # 40e330 <__bss_start@@Base+0xbc0>
  40501c:	pop    rbx
  40501d:	ret    
  40501e:	xchg   ax,ax
  405020:	mov    ecx,0x2
  405025:	lea    rdi,[rip+0x3878]        # 4088a4 <_IO_stdin_used@@Base+0x8a4>
  40502c:	mov    rsi,rbx
  40502f:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  405031:	seta   al
  405034:	sbb    al,0x0
  405036:	test   al,al
  405038:	je     4050e0 <get_boolean_op_value@@Base+0x160>
  40503e:	mov    ecx,0x2
  405043:	lea    rdi,[rip+0x385d]        # 4088a7 <_IO_stdin_used@@Base+0x8a7>
  40504a:	mov    rsi,rbx
  40504d:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  40504f:	seta   al
  405052:	sbb    al,0x0
  405054:	test   al,al
  405056:	je     4050d0 <get_boolean_op_value@@Base+0x150>
  405058:	mov    ecx,0x2
  40505d:	lea    rdi,[rip+0x3846]        # 4088aa <_IO_stdin_used@@Base+0x8aa>
  405064:	mov    rsi,rbx
  405067:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  405069:	seta   al
  40506c:	sbb    al,0x0
  40506e:	test   al,al
  405070:	je     4050f0 <get_boolean_op_value@@Base+0x170>
  405072:	mov    ecx,0x2
  405077:	lea    rdi,[rip+0x382f]        # 4088ad <_IO_stdin_used@@Base+0x8ad>
  40507e:	mov    rsi,rbx
  405081:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  405083:	seta   al
  405086:	sbb    al,0x0
  405088:	test   al,al
  40508a:	je     405100 <get_boolean_op_value@@Base+0x180>
  40508c:	mov    ecx,0x2
  405091:	lea    rdi,[rip+0x3818]        # 4088b0 <_IO_stdin_used@@Base+0x8b0>
  405098:	mov    rsi,rbx
  40509b:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  40509d:	seta   al
  4050a0:	sbb    al,0x0
  4050a2:	test   al,al
  4050a4:	je     405110 <get_boolean_op_value@@Base+0x190>
  4050a6:	mov    ecx,0x2
  4050ab:	lea    rdi,[rip+0x3801]        # 4088b3 <_IO_stdin_used@@Base+0x8b3>
  4050b2:	mov    rsi,rbx
  4050b5:	inc    QWORD PTR [rip+0x924c]        # 40e308 <__bss_start@@Base+0xb98>
  4050bc:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  4050be:	seta   al
  4050c1:	sbb    al,0x0
  4050c3:	test   al,al
  4050c5:	jne    40511e <get_boolean_op_value@@Base+0x19e>
  4050c7:	mov    eax,0x5
  4050cc:	pop    rbx
  4050cd:	ret    
  4050ce:	xchg   ax,ax
  4050d0:	mov    eax,0x1
  4050d5:	inc    QWORD PTR [rip+0x920c]        # 40e2e8 <__bss_start@@Base+0xb78>
  4050dc:	pop    rbx
  4050dd:	ret    
  4050de:	xchg   ax,ax
  4050e0:	xor    eax,eax
  4050e2:	inc    QWORD PTR [rip+0x91f7]        # 40e2e0 <__bss_start@@Base+0xb70>
  4050e9:	pop    rbx
  4050ea:	ret    
  4050eb:	nop    DWORD PTR [rax+rax*1+0x0]
  4050f0:	mov    eax,0x2
  4050f5:	inc    QWORD PTR [rip+0x91f4]        # 40e2f0 <__bss_start@@Base+0xb80>
  4050fc:	pop    rbx
  4050fd:	ret    
  4050fe:	xchg   ax,ax
  405100:	mov    eax,0x3
  405105:	inc    QWORD PTR [rip+0x91ec]        # 40e2f8 <__bss_start@@Base+0xb88>
  40510c:	pop    rbx
  40510d:	ret    
  40510e:	xchg   ax,ax
  405110:	mov    eax,0x4
  405115:	inc    QWORD PTR [rip+0x91e4]        # 40e300 <__bss_start@@Base+0xb90>
  40511c:	pop    rbx
  40511d:	ret    
  40511e:	mov    rax,QWORD PTR [rip+0x6ed3]        # 40bff8 <stderr@GLIBC_2.2.5>
  405125:	mov    rcx,rbx
  405128:	mov    rdi,QWORD PTR [rax]
  40512b:	lea    rdx,[rip+0x36ae]        # 4087e0 <_IO_stdin_used@@Base+0x7e0>
  405132:	mov    esi,0x1
  405137:	xor    eax,eax
  405139:	inc    QWORD PTR [rip+0x91d0]        # 40e310 <__bss_start@@Base+0xba0>
  405140:	call   402440 <__fprintf_chk@plt>
  405145:	mov    edi,0x1
  40514a:	inc    QWORD PTR [rip+0x91c7]        # 40e318 <__bss_start@@Base+0xba8>
  405151:	call   402420 <exit@plt>
  405156:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000405160 <init_grammar@@Base>:
  405160:	endbr64 
  405164:	inc    QWORD PTR [rip+0x91f5]        # 40e360 <__bss_start@@Base+0xbf0>
  40516b:	mov    QWORD PTR [rdi],rsi
  40516e:	ret    
  40516f:	nop

0000000000405170 <destroy_grammar@@Base>:
  405170:	endbr64 
  405174:	inc    QWORD PTR [rip+0x91ed]        # 40e368 <__bss_start@@Base+0xbf8>
  40517b:	ret    
  40517c:	nop    DWORD PTR [rax+0x0]

0000000000405180 <read_return_expression@@Base>:
  405180:	endbr64 
  405184:	push   r12
  405186:	inc    QWORD PTR [rip+0x92f3]        # 40e480 <__bss_start@@Base+0xd10>
  40518d:	push   rbp
  40518e:	mov    rbp,rdi
  405191:	push   rbx
  405192:	mov    rdi,QWORD PTR [rdi]
  405195:	call   402b80 <next@@Base>
  40519a:	cmp    DWORD PTR [rax],0x1
  40519d:	jne    405248 <read_return_expression@@Base+0xc8>
  4051a3:	mov    rbx,rax
  4051a6:	mov    edi,0x18
  4051ab:	inc    QWORD PTR [rip+0x92de]        # 40e490 <__bss_start@@Base+0xd20>
  4051b2:	call   4023a0 <malloc@plt>
  4051b7:	mov    esi,DWORD PTR [rbx+0x4]
  4051ba:	mov    rdi,rax
  4051bd:	mov    r12,rax
  4051c0:	call   404b30 <init_node_int@@Base>
  4051c5:	mov    rdi,rbx
  4051c8:	inc    QWORD PTR [rip+0x92c9]        # 40e498 <__bss_start@@Base+0xd28>
  4051cf:	call   4049c0 <free_token_int_value@@Base>
  4051d4:	mov    edi,0x18
  4051d9:	inc    QWORD PTR [rip+0x92c0]        # 40e4a0 <__bss_start@@Base+0xd30>
  4051e0:	call   4023a0 <malloc@plt>
  4051e5:	mov    rdi,rax
  4051e8:	mov    rsi,r12
  4051eb:	mov    rbx,rax
  4051ee:	call   404bb0 <init_node_return@@Base>
  4051f3:	mov    rdi,QWORD PTR [rbp+0x0]
  4051f7:	inc    QWORD PTR [rip+0x92aa]        # 40e4a8 <__bss_start@@Base+0xd38>
  4051fe:	call   402b80 <next@@Base>
  405203:	cmp    DWORD PTR [rax],0x8
  405206:	jne    405230 <read_return_expression@@Base+0xb0>
  405208:	mov    rdi,rax
  40520b:	inc    QWORD PTR [rip+0x92a6]        # 40e4b8 <__bss_start@@Base+0xd48>
  405212:	call   404a30 <free_token_semicolon@@Base>
  405217:	mov    rax,rbx
  40521a:	pop    rbx
  40521b:	pop    rbp
  40521c:	inc    QWORD PTR [rip+0x929d]        # 40e4c0 <__bss_start@@Base+0xd50>
  405223:	pop    r12
  405225:	ret    
  405226:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405230:	xor    ebx,ebx
  405232:	mov    rax,rbx
  405235:	pop    rbx
  405236:	pop    rbp
  405237:	inc    QWORD PTR [rip+0x9272]        # 40e4b0 <__bss_start@@Base+0xd40>
  40523e:	pop    r12
  405240:	ret    
  405241:	nop    DWORD PTR [rax+0x0]
  405248:	xor    ebx,ebx
  40524a:	mov    rax,rbx
  40524d:	pop    rbx
  40524e:	pop    rbp
  40524f:	inc    QWORD PTR [rip+0x9232]        # 40e488 <__bss_start@@Base+0xd18>
  405256:	pop    r12
  405258:	ret    
  405259:	nop    DWORD PTR [rax+0x0]

0000000000405260 <read_boolean_unary_expression@@Base>:
  405260:	endbr64 
  405264:	push   r13
  405266:	push   r12
  405268:	mov    r12,rdi
  40526b:	mov    edi,0x28
  405270:	push   rbp
  405271:	push   rbx
  405272:	sub    rsp,0x8
  405276:	inc    QWORD PTR [rip+0x9423]        # 40e6a0 <__bss_start@@Base+0xf30>
  40527d:	call   4023a0 <malloc@plt>
  405282:	mov    rdi,QWORD PTR [r12]
  405286:	mov    rbx,rax
  405289:	call   402b80 <next@@Base>
  40528e:	cmp    DWORD PTR [rax],0xc
  405291:	jne    405338 <read_boolean_unary_expression@@Base+0xd8>
  405297:	mov    rbp,rax
  40529a:	mov    rdi,rax
  40529d:	inc    QWORD PTR [rip+0x940c]        # 40e6b0 <__bss_start@@Base+0xf40>
  4052a4:	call   404f80 <get_boolean_op_value@@Base>
  4052a9:	mov    rdi,rbp
  4052ac:	mov    r13d,eax
  4052af:	inc    QWORD PTR [rip+0x940a]        # 40e6c0 <__bss_start@@Base+0xf50>
  4052b6:	call   404a70 <free_token_boolean_op@@Base>
  4052bb:	mov    rdi,QWORD PTR [r12]
  4052bf:	inc    QWORD PTR [rip+0x9402]        # 40e6c8 <__bss_start@@Base+0xf58>
  4052c6:	call   402b80 <next@@Base>
  4052cb:	cmp    DWORD PTR [rax],0x1
  4052ce:	mov    rbp,rax
  4052d1:	jne    405360 <read_boolean_unary_expression@@Base+0x100>
  4052d7:	mov    edi,0x18
  4052dc:	inc    QWORD PTR [rip+0x93f5]        # 40e6d8 <__bss_start@@Base+0xf68>
  4052e3:	call   4023a0 <malloc@plt>
  4052e8:	mov    esi,DWORD PTR [rbp+0x4]
  4052eb:	mov    rdi,rax
  4052ee:	mov    r12,rax
  4052f1:	call   404b30 <init_node_int@@Base>
  4052f6:	mov    rdi,rbp
  4052f9:	inc    QWORD PTR [rip+0x93e8]        # 40e6e8 <__bss_start@@Base+0xf78>
  405300:	call   4049c0 <free_token_int_value@@Base>
  405305:	mov    rdx,r12
  405308:	mov    esi,r13d
  40530b:	mov    rdi,rbx
  40530e:	xor    ecx,ecx
  405310:	inc    QWORD PTR [rip+0x93d9]        # 40e6f0 <__bss_start@@Base+0xf80>
  405317:	call   404c40 <init_node_boolean_operator@@Base>
  40531c:	inc    QWORD PTR [rip+0x93d5]        # 40e6f8 <__bss_start@@Base+0xf88>
  405323:	add    rsp,0x8
  405327:	mov    rax,rbx
  40532a:	pop    rbx
  40532b:	pop    rbp
  40532c:	pop    r12
  40532e:	pop    r13
  405330:	ret    
  405331:	nop    DWORD PTR [rax+0x0]
  405338:	mov    rdi,rbx
  40533b:	inc    QWORD PTR [rip+0x9366]        # 40e6a8 <__bss_start@@Base+0xf38>
  405342:	xor    ebx,ebx
  405344:	call   404c90 <free_node_boolean_operator@@Base>
  405349:	inc    QWORD PTR [rip+0x9368]        # 40e6b8 <__bss_start@@Base+0xf48>
  405350:	add    rsp,0x8
  405354:	mov    rax,rbx
  405357:	pop    rbx
  405358:	pop    rbp
  405359:	pop    r12
  40535b:	pop    r13
  40535d:	ret    
  40535e:	xchg   ax,ax
  405360:	mov    rdi,rbx
  405363:	inc    QWORD PTR [rip+0x9366]        # 40e6d0 <__bss_start@@Base+0xf60>
  40536a:	xor    ebx,ebx
  40536c:	call   404c90 <free_node_boolean_operator@@Base>
  405371:	inc    QWORD PTR [rip+0x9368]        # 40e6e0 <__bss_start@@Base+0xf70>
  405378:	add    rsp,0x8
  40537c:	mov    rax,rbx
  40537f:	pop    rbx
  405380:	pop    rbp
  405381:	pop    r12
  405383:	pop    r13
  405385:	ret    
  405386:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000405390 <read_boolean_binary_expression@@Base>:
  405390:	endbr64 
  405394:	push   r13
  405396:	push   r12
  405398:	push   rbp
  405399:	push   rbx
  40539a:	mov    rbx,rdi
  40539d:	sub    rsp,0x18
  4053a1:	mov    rdi,QWORD PTR [rdi]
  4053a4:	inc    QWORD PTR [rip+0x9255]        # 40e600 <__bss_start@@Base+0xe90>
  4053ab:	call   402b80 <next@@Base>
  4053b0:	mov    edx,DWORD PTR [rax]
  4053b2:	mov    rbp,rax
  4053b5:	cmp    edx,0x1
  4053b8:	je     405410 <read_boolean_binary_expression@@Base+0x80>
  4053ba:	inc    QWORD PTR [rip+0x9247]        # 40e608 <__bss_start@@Base+0xe98>
  4053c1:	xor    eax,eax
  4053c3:	cmp    edx,0xc
  4053c6:	je     4053d8 <read_boolean_binary_expression@@Base+0x48>
  4053c8:	add    rsp,0x18
  4053cc:	pop    rbx
  4053cd:	pop    rbp
  4053ce:	pop    r12
  4053d0:	pop    r13
  4053d2:	ret    
  4053d3:	nop    DWORD PTR [rax+rax*1+0x0]
  4053d8:	mov    rdi,QWORD PTR [rbx]
  4053db:	mov    rsi,rbp
  4053de:	inc    QWORD PTR [rip+0x9233]        # 40e618 <__bss_start@@Base+0xea8>
  4053e5:	call   402ac0 <push_back@@Base>
  4053ea:	mov    rdi,rbx
  4053ed:	inc    QWORD PTR [rip+0x922c]        # 40e620 <__bss_start@@Base+0xeb0>
  4053f4:	call   405260 <read_boolean_unary_expression@@Base>
  4053f9:	inc    QWORD PTR [rip+0x9228]        # 40e628 <__bss_start@@Base+0xeb8>
  405400:	add    rsp,0x18
  405404:	pop    rbx
  405405:	pop    rbp
  405406:	pop    r12
  405408:	pop    r13
  40540a:	ret    
  40540b:	nop    DWORD PTR [rax+rax*1+0x0]
  405410:	mov    edi,0x18
  405415:	inc    QWORD PTR [rip+0x91f4]        # 40e610 <__bss_start@@Base+0xea0>
  40541c:	call   4023a0 <malloc@plt>
  405421:	mov    esi,DWORD PTR [rbp+0x4]
  405424:	mov    rdi,rax
  405427:	mov    r12,rax
  40542a:	call   404b30 <init_node_int@@Base>
  40542f:	mov    rdi,rbp
  405432:	inc    QWORD PTR [rip+0x91f7]        # 40e630 <__bss_start@@Base+0xec0>
  405439:	call   4049c0 <free_token_int_value@@Base>
  40543e:	mov    rdi,QWORD PTR [rbx]
  405441:	inc    QWORD PTR [rip+0x91f0]        # 40e638 <__bss_start@@Base+0xec8>
  405448:	call   402b80 <next@@Base>
  40544d:	cmp    DWORD PTR [rax],0xc
  405450:	mov    rbp,rax
  405453:	jne    405508 <read_boolean_binary_expression@@Base+0x178>
  405459:	mov    rdi,rax
  40545c:	inc    QWORD PTR [rip+0x91e5]        # 40e648 <__bss_start@@Base+0xed8>
  405463:	call   404f80 <get_boolean_op_value@@Base>
  405468:	mov    rdi,rbp
  40546b:	mov    r13d,eax
  40546e:	inc    QWORD PTR [rip+0x91e3]        # 40e658 <__bss_start@@Base+0xee8>
  405475:	call   404a70 <free_token_boolean_op@@Base>
  40547a:	mov    rdi,QWORD PTR [rbx]
  40547d:	inc    QWORD PTR [rip+0x91dc]        # 40e660 <__bss_start@@Base+0xef0>
  405484:	call   402b80 <next@@Base>
  405489:	cmp    DWORD PTR [rax],0x1
  40548c:	mov    rbx,rax
  40548f:	jne    405528 <read_boolean_binary_expression@@Base+0x198>
  405495:	mov    edi,0x18
  40549a:	inc    QWORD PTR [rip+0x91cf]        # 40e670 <__bss_start@@Base+0xf00>
  4054a1:	call   4023a0 <malloc@plt>
  4054a6:	mov    esi,DWORD PTR [rbx+0x4]
  4054a9:	mov    rdi,rax
  4054ac:	mov    rbp,rax
  4054af:	call   404b30 <init_node_int@@Base>
  4054b4:	mov    rdi,rbx
  4054b7:	inc    QWORD PTR [rip+0x91c2]        # 40e680 <__bss_start@@Base+0xf10>
  4054be:	call   4049c0 <free_token_int_value@@Base>
  4054c3:	mov    edi,0x28
  4054c8:	inc    QWORD PTR [rip+0x91b9]        # 40e688 <__bss_start@@Base+0xf18>
  4054cf:	call   4023a0 <malloc@plt>
  4054d4:	mov    rdi,rax
  4054d7:	mov    rcx,rbp
  4054da:	mov    rdx,r12
  4054dd:	mov    esi,r13d
  4054e0:	mov    QWORD PTR [rsp+0x8],rax
  4054e5:	call   404c40 <init_node_boolean_operator@@Base>
  4054ea:	mov    rax,QWORD PTR [rsp+0x8]
  4054ef:	inc    QWORD PTR [rip+0x919a]        # 40e690 <__bss_start@@Base+0xf20>
  4054f6:	add    rsp,0x18
  4054fa:	pop    rbx
  4054fb:	pop    rbp
  4054fc:	pop    r12
  4054fe:	pop    r13
  405500:	ret    
  405501:	nop    DWORD PTR [rax+0x0]
  405508:	mov    rdi,r12
  40550b:	inc    QWORD PTR [rip+0x912e]        # 40e640 <__bss_start@@Base+0xed0>
  405512:	call   404cf0 <free_node@@Base>
  405517:	inc    QWORD PTR [rip+0x9132]        # 40e650 <__bss_start@@Base+0xee0>
  40551e:	xor    eax,eax
  405520:	jmp    4053c8 <read_boolean_binary_expression@@Base+0x38>
  405525:	nop    DWORD PTR [rax]
  405528:	mov    rdi,r12
  40552b:	inc    QWORD PTR [rip+0x9136]        # 40e668 <__bss_start@@Base+0xef8>
  405532:	call   404cf0 <free_node@@Base>
  405537:	inc    QWORD PTR [rip+0x913a]        # 40e678 <__bss_start@@Base+0xf08>
  40553e:	xor    eax,eax
  405540:	jmp    4053c8 <read_boolean_binary_expression@@Base+0x38>
  405545:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

0000000000405550 <read_single_boolean_expression@@Base>:
  405550:	endbr64 
  405554:	push   r12
  405556:	push   rbp
  405557:	push   rbx
  405558:	sub    rsp,0x10
  40555c:	test   rsi,rsi
  40555f:	je     4055c0 <read_single_boolean_expression@@Base+0x70>
  405561:	mov    eax,DWORD PTR [rdx]
  405563:	mov    rbx,rdx
  405566:	test   eax,eax
  405568:	je     4055dc <read_single_boolean_expression@@Base+0x8c>
  40556a:	mov    ebp,ecx
  40556c:	inc    QWORD PTR [rip+0x905d]        # 40e5d0 <__bss_start@@Base+0xe60>
  405573:	call   405390 <read_boolean_binary_expression@@Base>
  405578:	mov    edi,0x28
  40557d:	mov    r12,rax
  405580:	inc    QWORD PTR [rip+0x9059]        # 40e5e0 <__bss_start@@Base+0xe70>
  405587:	call   4023a0 <malloc@plt>
  40558c:	mov    rdi,rax
  40558f:	mov    rcx,r12
  405592:	mov    esi,ebp
  405594:	xor    edx,edx
  405596:	mov    QWORD PTR [rsp+0x8],rax
  40559b:	call   404c40 <init_node_boolean_operator@@Base>
  4055a0:	mov    DWORD PTR [rbx],0x0
  4055a6:	mov    rax,QWORD PTR [rsp+0x8]
  4055ab:	inc    QWORD PTR [rip+0x9036]        # 40e5e8 <__bss_start@@Base+0xe78>
  4055b2:	add    rsp,0x10
  4055b6:	pop    rbx
  4055b7:	pop    rbp
  4055b8:	pop    r12
  4055ba:	ret    
  4055bb:	nop    DWORD PTR [rax+rax*1+0x0]
  4055c0:	inc    QWORD PTR [rip+0x8ff9]        # 40e5c0 <__bss_start@@Base+0xe50>
  4055c7:	call   405390 <read_boolean_binary_expression@@Base>
  4055cc:	inc    QWORD PTR [rip+0x8ff5]        # 40e5c8 <__bss_start@@Base+0xe58>
  4055d3:	add    rsp,0x10
  4055d7:	pop    rbx
  4055d8:	pop    rbp
  4055d9:	pop    r12
  4055db:	ret    
  4055dc:	inc    QWORD PTR [rip+0x8ff5]        # 40e5d8 <__bss_start@@Base+0xe68>
  4055e3:	mov    eax,DWORD PTR ds:0x4
  4055ea:	ud2    
  4055ec:	nop    DWORD PTR [rax+0x0]

00000000004055f0 <read_boolean_expression@@Base>:
  4055f0:	endbr64 
  4055f4:	push   r13
  4055f6:	push   r12
  4055f8:	push   rbp
  4055f9:	xor    ebp,ebp
  4055fb:	push   rbx
  4055fc:	mov    rbx,rdi
  4055ff:	sub    rsp,0x18
  405603:	mov    rdi,QWORD PTR [rdi]
  405606:	mov    rax,QWORD PTR fs:0x28
  40560f:	mov    QWORD PTR [rsp+0x8],rax
  405614:	xor    eax,eax
  405616:	inc    QWORD PTR [rip+0x8f23]        # 40e540 <__bss_start@@Base+0xdd0>
  40561d:	mov    DWORD PTR [rsp+0x4],0x0
  405625:	call   402b80 <next@@Base>
  40562a:	mov    edx,DWORD PTR [rax]
  40562c:	inc    QWORD PTR [rip+0x8f15]        # 40e548 <__bss_start@@Base+0xdd8>
  405633:	cmp    edx,0x4
  405636:	je     405705 <read_boolean_expression@@Base+0x115>
  40563c:	lea    r13,[rsp+0x4]
  405641:	jmp    40567c <read_boolean_expression@@Base+0x8c>
  405643:	nop    DWORD PTR [rax+rax*1+0x0]
  405648:	mov    rdi,rax
  40564b:	inc    QWORD PTR [rip+0x8f16]        # 40e568 <__bss_start@@Base+0xdf8>
  405652:	call   404f80 <get_boolean_op_value@@Base>
  405657:	inc    QWORD PTR [rip+0x8f22]        # 40e580 <__bss_start@@Base+0xe10>
  40565e:	mov    DWORD PTR [rsp+0x4],0x1
  405666:	mov    r12d,eax
  405669:	mov    rdi,QWORD PTR [rbx]
  40566c:	call   402b80 <next@@Base>
  405671:	mov    edx,DWORD PTR [rax]
  405673:	cmp    edx,0x4
  405676:	je     405705 <read_boolean_expression@@Base+0x115>
  40567c:	cmp    edx,0x3
  40567f:	je     4056d0 <read_boolean_expression@@Base+0xe0>
  405681:	cmp    edx,0xc
  405684:	je     405648 <read_boolean_expression@@Base+0x58>
  405686:	cmp    edx,0x1
  405689:	je     405740 <read_boolean_expression@@Base+0x150>
  40568f:	mov    rax,QWORD PTR [rip+0x6962]        # 40bff8 <stderr@GLIBC_2.2.5>
  405696:	lea    rdi,[rip+0x321b]        # 4088b8 <_IO_stdin_used@@Base+0x8b8>
  40569d:	mov    rcx,QWORD PTR [rax]
  4056a0:	mov    edx,0x21
  4056a5:	mov    esi,0x1
  4056aa:	inc    QWORD PTR [rip+0x8e9f]        # 40e550 <__bss_start@@Base+0xde0>
  4056b1:	call   402430 <fwrite@plt>
  4056b6:	mov    edi,0x1
  4056bb:	inc    QWORD PTR [rip+0x8ece]        # 40e590 <__bss_start@@Base+0xe20>
  4056c2:	call   402420 <exit@plt>
  4056c7:	nop    WORD PTR [rax+rax*1+0x0]
  4056d0:	mov    rdx,r13
  4056d3:	mov    rsi,rbp
  4056d6:	mov    ecx,r12d
  4056d9:	mov    rdi,rbx
  4056dc:	inc    QWORD PTR [rip+0x8e7d]        # 40e560 <__bss_start@@Base+0xdf0>
  4056e3:	call   405550 <read_single_boolean_expression@@Base>
  4056e8:	mov    rdi,QWORD PTR [rbx]
  4056eb:	mov    rbp,rax
  4056ee:	inc    QWORD PTR [rip+0x8e93]        # 40e588 <__bss_start@@Base+0xe18>
  4056f5:	call   402b80 <next@@Base>
  4056fa:	mov    edx,DWORD PTR [rax]
  4056fc:	cmp    edx,0x4
  4056ff:	jne    40567c <read_boolean_expression@@Base+0x8c>
  405705:	mov    rdi,rax
  405708:	inc    QWORD PTR [rip+0x8e89]        # 40e598 <__bss_start@@Base+0xe28>
  40570f:	call   4049f0 <free_token_cpar@@Base>
  405714:	inc    QWORD PTR [rip+0x8e85]        # 40e5a0 <__bss_start@@Base+0xe30>
  40571b:	mov    rax,rbp
  40571e:	mov    rcx,QWORD PTR [rsp+0x8]
  405723:	xor    rcx,QWORD PTR fs:0x28
  40572c:	jne    405779 <read_boolean_expression@@Base+0x189>
  40572e:	add    rsp,0x18
  405732:	pop    rbx
  405733:	pop    rbp
  405734:	pop    r12
  405736:	pop    r13
  405738:	ret    
  405739:	nop    DWORD PTR [rax+0x0]
  405740:	mov    rdi,QWORD PTR [rbx]
  405743:	mov    rsi,rax
  405746:	inc    QWORD PTR [rip+0x8e0b]        # 40e558 <__bss_start@@Base+0xde8>
  40574d:	call   402ac0 <push_back@@Base>
  405752:	mov    rsi,rbp
  405755:	mov    ecx,r12d
  405758:	mov    rdx,r13
  40575b:	mov    rdi,rbx
  40575e:	inc    QWORD PTR [rip+0x8e0b]        # 40e570 <__bss_start@@Base+0xe00>
  405765:	call   405550 <read_single_boolean_expression@@Base>
  40576a:	mov    rbp,rax
  40576d:	inc    QWORD PTR [rip+0x8e04]        # 40e578 <__bss_start@@Base+0xe08>
  405774:	jmp    405669 <read_boolean_expression@@Base+0x79>
  405779:	call   402310 <__stack_chk_fail@plt>
  40577e:	xchg   ax,ax

0000000000405780 <read_if_statement@@Base>:
  405780:	endbr64 
  405784:	push   r12
  405786:	push   rbp
  405787:	push   rbx
  405788:	mov    rbx,rdi
  40578b:	sub    rsp,0x10
  40578f:	mov    rdi,QWORD PTR [rdi]
  405792:	inc    QWORD PTR [rip+0x8d47]        # 40e4e0 <__bss_start@@Base+0xd70>
  405799:	call   402b80 <next@@Base>
  40579e:	cmp    DWORD PTR [rax],0x3
  4057a1:	jne    405840 <read_if_statement@@Base+0xc0>
  4057a7:	mov    rdi,rax
  4057aa:	inc    QWORD PTR [rip+0x8d3f]        # 40e4f0 <__bss_start@@Base+0xd80>
  4057b1:	call   4049e0 <free_token_opar@@Base>
  4057b6:	mov    rdi,rbx
  4057b9:	inc    QWORD PTR [rip+0x8d38]        # 40e4f8 <__bss_start@@Base+0xd88>
  4057c0:	call   4055f0 <read_boolean_expression@@Base>
  4057c5:	mov    rdi,rbx
  4057c8:	inc    QWORD PTR [rip+0x8d31]        # 40e500 <__bss_start@@Base+0xd90>
  4057cf:	mov    rbp,rax
  4057d2:	call   405890 <read_body@@Base>
  4057d7:	mov    rdi,QWORD PTR [rbx]
  4057da:	inc    QWORD PTR [rip+0x8d27]        # 40e508 <__bss_start@@Base+0xd98>
  4057e1:	mov    r12,rax
  4057e4:	call   402b80 <next@@Base>
  4057e9:	cmp    DWORD PTR [rax],0xb
  4057ec:	je     405858 <read_if_statement@@Base+0xd8>
  4057ee:	mov    rdi,QWORD PTR [rbx]
  4057f1:	mov    rsi,rax
  4057f4:	inc    QWORD PTR [rip+0x8d1d]        # 40e518 <__bss_start@@Base+0xda8>
  4057fb:	call   402ac0 <push_back@@Base>
  405800:	inc    QWORD PTR [rip+0x8d29]        # 40e530 <__bss_start@@Base+0xdc0>
  405807:	xor    ebx,ebx
  405809:	mov    edi,0x28
  40580e:	call   4023a0 <malloc@plt>
  405813:	mov    rdi,rax
  405816:	mov    rcx,rbx
  405819:	mov    rdx,r12
  40581c:	mov    rsi,rbp
  40581f:	mov    QWORD PTR [rsp+0x8],rax
  405824:	call   404bf0 <init_node_if@@Base>
  405829:	mov    rax,QWORD PTR [rsp+0x8]
  40582e:	inc    QWORD PTR [rip+0x8d03]        # 40e538 <__bss_start@@Base+0xdc8>
  405835:	add    rsp,0x10
  405839:	pop    rbx
  40583a:	pop    rbp
  40583b:	pop    r12
  40583d:	ret    
  40583e:	xchg   ax,ax
  405840:	inc    QWORD PTR [rip+0x8ca1]        # 40e4e8 <__bss_start@@Base+0xd78>
  405847:	add    rsp,0x10
  40584b:	pop    rbx
  40584c:	pop    rbp
  40584d:	xor    eax,eax
  40584f:	pop    r12
  405851:	ret    
  405852:	nop    WORD PTR [rax+rax*1+0x0]
  405858:	mov    rdi,rax
  40585b:	inc    QWORD PTR [rip+0x8cae]        # 40e510 <__bss_start@@Base+0xda0>
  405862:	call   404a60 <free_token_else@@Base>
  405867:	mov    rdi,rbx
  40586a:	inc    QWORD PTR [rip+0x8caf]        # 40e520 <__bss_start@@Base+0xdb0>
  405871:	call   405890 <read_body@@Base>
  405876:	mov    rbx,rax
  405879:	inc    QWORD PTR [rip+0x8ca8]        # 40e528 <__bss_start@@Base+0xdb8>
  405880:	jmp    405809 <read_if_statement@@Base+0x89>
  405882:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40588d:	nop    DWORD PTR [rax]

0000000000405890 <read_body@@Base>:
  405890:	endbr64 
  405894:	push   r13
  405896:	push   r12
  405898:	push   rbp
  405899:	push   rbx
  40589a:	mov    rbx,rdi
  40589d:	sub    rsp,0x8
  4058a1:	mov    rdi,QWORD PTR [rdi]
  4058a4:	inc    QWORD PTR [rip+0x8b55]        # 40e400 <__bss_start@@Base+0xc90>
  4058ab:	call   402b80 <next@@Base>
  4058b0:	cmp    DWORD PTR [rax],0x5
  4058b3:	jne    4059c8 <read_body@@Base+0x138>
  4058b9:	mov    rdi,rax
  4058bc:	inc    QWORD PTR [rip+0x8b4d]        # 40e410 <__bss_start@@Base+0xca0>
  4058c3:	call   404a00 <free_token_obra@@Base>
  4058c8:	mov    rdi,QWORD PTR [rbx]
  4058cb:	inc    QWORD PTR [rip+0x8b46]        # 40e418 <__bss_start@@Base+0xca8>
  4058d2:	call   402b80 <next@@Base>
  4058d7:	mov    edx,DWORD PTR [rax]
  4058d9:	inc    QWORD PTR [rip+0x8b40]        # 40e420 <__bss_start@@Base+0xcb0>
  4058e0:	cmp    edx,0x6
  4058e3:	je     4059e0 <read_body@@Base+0x150>
  4058e9:	xor    r13d,r13d
  4058ec:	xor    ebp,ebp
  4058ee:	cmp    edx,0x7
  4058f1:	je     405928 <read_body@@Base+0x98>
  4058f3:	cmp    edx,0xa
  4058f6:	je     405988 <read_body@@Base+0xf8>
  4058fc:	mov    rdi,QWORD PTR [rbx]
  4058ff:	mov    rsi,rax
  405902:	inc    QWORD PTR [rip+0x8b1f]        # 40e428 <__bss_start@@Base+0xcb8>
  405909:	call   402ac0 <push_back@@Base>
  40590e:	inc    QWORD PTR [rip+0x8b4b]        # 40e460 <__bss_start@@Base+0xcf0>
  405915:	add    rsp,0x8
  405919:	pop    rbx
  40591a:	mov    rax,rbp
  40591d:	pop    rbp
  40591e:	pop    r12
  405920:	pop    r13
  405922:	ret    
  405923:	nop    DWORD PTR [rax+rax*1+0x0]
  405928:	mov    rdi,rax
  40592b:	inc    QWORD PTR [rip+0x8afe]        # 40e430 <__bss_start@@Base+0xcc0>
  405932:	call   404a20 <free_token_return@@Base>
  405937:	mov    rdi,rbx
  40593a:	inc    QWORD PTR [rip+0x8aff]        # 40e440 <__bss_start@@Base+0xcd0>
  405941:	call   405180 <read_return_expression@@Base>
  405946:	mov    r12,rax
  405949:	inc    QWORD PTR [rip+0x8af8]        # 40e448 <__bss_start@@Base+0xcd8>
  405950:	test   rbp,rbp
  405953:	je     4059b5 <read_body@@Base+0x125>
  405955:	mov    QWORD PTR [r13+0x8],r12
  405959:	mov    rdi,QWORD PTR [rbx]
  40595c:	mov    r13,r12
  40595f:	call   402b80 <next@@Base>
  405964:	mov    edx,DWORD PTR [rax]
  405966:	cmp    edx,0x6
  405969:	jne    4058ee <read_body@@Base+0x5e>
  40596b:	mov    rdi,rax
  40596e:	inc    QWORD PTR [rip+0x8afb]        # 40e470 <__bss_start@@Base+0xd00>
  405975:	call   404a10 <free_token_cbra@@Base>
  40597a:	inc    QWORD PTR [rip+0x8af7]        # 40e478 <__bss_start@@Base+0xd08>
  405981:	jmp    405915 <read_body@@Base+0x85>
  405983:	nop    DWORD PTR [rax+rax*1+0x0]
  405988:	mov    rdi,rax
  40598b:	inc    QWORD PTR [rip+0x8aa6]        # 40e438 <__bss_start@@Base+0xcc8>
  405992:	call   404a50 <free_token_if@@Base>
  405997:	mov    rdi,rbx
  40599a:	inc    QWORD PTR [rip+0x8aaf]        # 40e450 <__bss_start@@Base+0xce0>
  4059a1:	call   405780 <read_if_statement@@Base>
  4059a6:	mov    r12,rax
  4059a9:	inc    QWORD PTR [rip+0x8aa8]        # 40e458 <__bss_start@@Base+0xce8>
  4059b0:	test   rbp,rbp
  4059b3:	jne    405955 <read_body@@Base+0xc5>
  4059b5:	inc    QWORD PTR [rip+0x8aac]        # 40e468 <__bss_start@@Base+0xcf8>
  4059bc:	mov    rbp,r12
  4059bf:	jmp    405959 <read_body@@Base+0xc9>
  4059c1:	nop    DWORD PTR [rax+0x0]
  4059c8:	inc    QWORD PTR [rip+0x8a39]        # 40e408 <__bss_start@@Base+0xc98>
  4059cf:	add    rsp,0x8
  4059d3:	pop    rbx
  4059d4:	xor    ebp,ebp
  4059d6:	mov    rax,rbp
  4059d9:	pop    rbp
  4059da:	pop    r12
  4059dc:	pop    r13
  4059de:	ret    
  4059df:	nop
  4059e0:	xor    ebp,ebp
  4059e2:	jmp    40596b <read_body@@Base+0xdb>
  4059e7:	nop    WORD PTR [rax+rax*1+0x0]

00000000004059f0 <read_function_ast_node@@Base>:
  4059f0:	endbr64 
  4059f4:	push   rbp
  4059f5:	push   rbx
  4059f6:	mov    rbx,rdi
  4059f9:	sub    rsp,0x18
  4059fd:	mov    rdi,QWORD PTR [rdi]
  405a00:	inc    QWORD PTR [rip+0x8979]        # 40e380 <__bss_start@@Base+0xc10>
  405a07:	call   402b80 <next@@Base>
  405a0c:	mov    edx,DWORD PTR [rax]
  405a0e:	test   edx,edx
  405a10:	jne    405b00 <read_function_ast_node@@Base+0x110>
  405a16:	mov    rdi,rax
  405a19:	inc    QWORD PTR [rip+0x8970]        # 40e390 <__bss_start@@Base+0xc20>
  405a20:	call   4049b0 <free_token_int_type@@Base>
  405a25:	mov    rdi,QWORD PTR [rbx]
  405a28:	inc    QWORD PTR [rip+0x8969]        # 40e398 <__bss_start@@Base+0xc28>
  405a2f:	call   402b80 <next@@Base>
  405a34:	cmp    DWORD PTR [rax],0x2
  405a37:	mov    rbp,rax
  405a3a:	jne    405af0 <read_function_ast_node@@Base+0x100>
  405a40:	mov    rdi,QWORD PTR [rbx]
  405a43:	inc    QWORD PTR [rip+0x895e]        # 40e3a8 <__bss_start@@Base+0xc38>
  405a4a:	call   402b80 <next@@Base>
  405a4f:	cmp    DWORD PTR [rax],0x3
  405a52:	jne    405b20 <read_function_ast_node@@Base+0x130>
  405a58:	mov    rdi,rax
  405a5b:	inc    QWORD PTR [rip+0x8956]        # 40e3b8 <__bss_start@@Base+0xc48>
  405a62:	call   4049e0 <free_token_opar@@Base>
  405a67:	mov    rdi,QWORD PTR [rbx]
  405a6a:	inc    QWORD PTR [rip+0x894f]        # 40e3c0 <__bss_start@@Base+0xc50>
  405a71:	call   402b80 <next@@Base>
  405a76:	cmp    DWORD PTR [rax],0x4
  405a79:	jne    405b10 <read_function_ast_node@@Base+0x120>
  405a7f:	mov    rdi,rax
  405a82:	inc    QWORD PTR [rip+0x8947]        # 40e3d0 <__bss_start@@Base+0xc60>
  405a89:	call   4049f0 <free_token_cpar@@Base>
  405a8e:	mov    rdi,rbx
  405a91:	inc    QWORD PTR [rip+0x8940]        # 40e3d8 <__bss_start@@Base+0xc68>
  405a98:	call   405890 <read_body@@Base>
  405a9d:	mov    edi,0x20
  405aa2:	mov    rbx,rax
  405aa5:	inc    QWORD PTR [rip+0x8934]        # 40e3e0 <__bss_start@@Base+0xc70>
  405aac:	call   4023a0 <malloc@plt>
  405ab1:	mov    rsi,QWORD PTR [rbp+0x8]
  405ab5:	mov    rdi,rax
  405ab8:	mov    rdx,rbx
  405abb:	mov    QWORD PTR [rsp+0x8],rax
  405ac0:	call   404b70 <init_node_function@@Base>
  405ac5:	mov    rdi,rbp
  405ac8:	inc    QWORD PTR [rip+0x8919]        # 40e3e8 <__bss_start@@Base+0xc78>
  405acf:	call   4049d0 <free_token_function@@Base>
  405ad4:	mov    rax,QWORD PTR [rsp+0x8]
  405ad9:	inc    QWORD PTR [rip+0x8910]        # 40e3f0 <__bss_start@@Base+0xc80>
  405ae0:	add    rsp,0x18
  405ae4:	pop    rbx
  405ae5:	pop    rbp
  405ae6:	ret    
  405ae7:	nop    WORD PTR [rax+rax*1+0x0]
  405af0:	inc    QWORD PTR [rip+0x88a9]        # 40e3a0 <__bss_start@@Base+0xc30>
  405af7:	xor    eax,eax
  405af9:	add    rsp,0x18
  405afd:	pop    rbx
  405afe:	pop    rbp
  405aff:	ret    
  405b00:	inc    QWORD PTR [rip+0x8881]        # 40e388 <__bss_start@@Base+0xc18>
  405b07:	add    rsp,0x18
  405b0b:	pop    rbx
  405b0c:	xor    eax,eax
  405b0e:	pop    rbp
  405b0f:	ret    
  405b10:	inc    QWORD PTR [rip+0x88b1]        # 40e3c8 <__bss_start@@Base+0xc58>
  405b17:	xor    eax,eax
  405b19:	jmp    405af9 <read_function_ast_node@@Base+0x109>
  405b1b:	nop    DWORD PTR [rax+rax*1+0x0]
  405b20:	inc    QWORD PTR [rip+0x8889]        # 40e3b0 <__bss_start@@Base+0xc40>
  405b27:	add    rsp,0x18
  405b2b:	pop    rbx
  405b2c:	xor    eax,eax
  405b2e:	pop    rbp
  405b2f:	ret    

0000000000405b30 <build_ast@@Base>:
  405b30:	endbr64 
  405b34:	sub    rsp,0x8
  405b38:	inc    QWORD PTR [rip+0x8831]        # 40e370 <__bss_start@@Base+0xc00>
  405b3f:	call   4059f0 <read_function_ast_node@@Base>
  405b44:	inc    QWORD PTR [rip+0x882d]        # 40e378 <__bss_start@@Base+0xc08>
  405b4b:	add    rsp,0x8
  405b4f:	ret    
  405b50:	endbr64 
  405b54:	test   esi,esi
  405b56:	je     405b90 <build_ast@@Base+0x60>
  405b58:	push   rbp
  405b59:	lea    eax,[rsi-0x1]
  405b5c:	push   rbx
  405b5d:	lea    rbp,[rdi+rax*8+0x8]
  405b62:	mov    rbx,rdi
  405b65:	sub    rsp,0x8
  405b69:	nop    DWORD PTR [rax+0x0]
  405b70:	call   406240 <build_ast@@Base+0x710>
  405b75:	add    QWORD PTR [rbx],rax
  405b78:	add    rbx,0x8
  405b7c:	cmp    rbx,rbp
  405b7f:	jne    405b70 <build_ast@@Base+0x40>
  405b81:	add    rsp,0x8
  405b85:	pop    rbx
  405b86:	pop    rbp
  405b87:	ret    
  405b88:	nop    DWORD PTR [rax+rax*1+0x0]
  405b90:	ret    
  405b91:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405b9b:	nop    DWORD PTR [rax+rax*1+0x0]
  405ba0:	push   rbp
  405ba1:	lea    esi,[rdi*4+0x0]
  405ba8:	mov    ebp,edi
  405baa:	mov    edx,0x1
  405baf:	push   rbx
  405bb0:	sub    rsp,0x8
  405bb4:	mov    rbx,0x40ee20
  405bbb:	mov    rcx,QWORD PTR [rbx]
  405bbe:	lea    rdi,[rbx+0x20]
  405bc2:	call   402430 <fwrite@plt>
  405bc7:	cmp    rax,0x1
  405bcb:	je     405bd4 <build_ast@@Base+0xa4>
  405bcd:	mov    DWORD PTR [rbx+0x18],0x1
  405bd4:	add    DWORD PTR [rbx+0x8],ebp
  405bd7:	sub    DWORD PTR [rbx+0xc],ebp
  405bda:	add    rsp,0x8
  405bde:	pop    rbx
  405bdf:	pop    rbp
  405be0:	ret    
  405be1:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  405bec:	nop    DWORD PTR [rax+0x0]
  405bf0:	push   rbp
  405bf1:	mov    ebp,edi
  405bf3:	push   rbx
  405bf4:	sub    rsp,0x8
  405bf8:	mov    rbx,0x40ee20
  405bff:	mov    eax,DWORD PTR [rbx+0xc]
  405c02:	cmp    eax,0x3ff
  405c07:	ja     405c20 <build_ast@@Base+0xf0>
  405c09:	add    ebp,eax
  405c0b:	lea    rax,[rbx+rax*4+0x20]
  405c10:	mov    DWORD PTR [rbx+0xc],ebp
  405c13:	add    rsp,0x8
  405c17:	pop    rbx
  405c18:	pop    rbp
  405c19:	ret    
  405c1a:	nop    WORD PTR [rax+rax*1+0x0]
  405c20:	mov    edi,0x400
  405c25:	call   405ba0 <build_ast@@Base+0x70>
  405c2a:	mov    eax,DWORD PTR [rbx+0xc]
  405c2d:	test   eax,eax
  405c2f:	je     405c09 <build_ast@@Base+0xd9>
  405c31:	mov    edx,DWORD PTR [rbx+0x1020]
  405c37:	mov    DWORD PTR [rbx+0x20],edx
  405c3a:	jmp    405c09 <build_ast@@Base+0xd9>
  405c3c:	nop    DWORD PTR [rax+0x0]
  405c40:	push   rbp
  405c41:	push   rbx
  405c42:	sub    rsp,0x8
  405c46:	mov    rbx,0x40ee20
  405c4d:	mov    edx,DWORD PTR [rbx+0xc]
  405c50:	mov    eax,DWORD PTR [rbx+0x10]
  405c53:	mov    ecx,DWORD PTR [rbx+0x1c]
  405c56:	sub    eax,edx
  405c58:	test   ecx,ecx
  405c5a:	jle    405cb8 <build_ast@@Base+0x188>
  405c5c:	mov    ebp,edi
  405c5e:	cmp    eax,edi
  405c60:	jae    405ca2 <build_ast@@Base+0x172>
  405c62:	add    DWORD PTR [rbx+0x8],edx
  405c65:	test   eax,eax
  405c67:	je     405c70 <build_ast@@Base+0x140>
  405c69:	mov    edx,DWORD PTR [rbx+rdx*4+0x20]
  405c6d:	mov    DWORD PTR [rbx+0x20],edx
  405c70:	mov    rcx,QWORD PTR [rbx]
  405c73:	lea    rdi,[rbx+rax*4+0x20]
  405c78:	mov    edx,0x1000
  405c7d:	mov    DWORD PTR [rbx+0x10],eax
  405c80:	mov    esi,0x1
  405c85:	mov    DWORD PTR [rbx+0xc],0x0
  405c8c:	call   4022c0 <fread@plt>
  405c91:	shr    rax,0x2
  405c95:	add    eax,DWORD PTR [rbx+0x10]
  405c98:	mov    DWORD PTR [rbx+0x10],eax
  405c9b:	cmp    eax,ebp
  405c9d:	jb     405cc8 <build_ast@@Base+0x198>
  405c9f:	mov    edx,DWORD PTR [rbx+0xc]
  405ca2:	add    ebp,edx
  405ca4:	mov    eax,edx
  405ca6:	mov    DWORD PTR [rbx+0xc],ebp
  405ca9:	lea    rax,[rbx+rax*4+0x20]
  405cae:	add    rsp,0x8
  405cb2:	pop    rbx
  405cb3:	pop    rbp
  405cb4:	ret    
  405cb5:	nop    DWORD PTR [rax]
  405cb8:	add    rsp,0x8
  405cbc:	xor    eax,eax
  405cbe:	pop    rbx
  405cbf:	pop    rbp
  405cc0:	ret    
  405cc1:	nop    DWORD PTR [rax+0x0]
  405cc8:	sub    ebp,eax
  405cca:	mov    DWORD PTR [rbx+0x10],0x0
  405cd1:	xor    eax,eax
  405cd3:	add    DWORD PTR [rbx+0x14],ebp
  405cd6:	jmp    405cae <build_ast@@Base+0x17e>
  405cd8:	nop    DWORD PTR [rax+rax*1+0x0]
  405ce0:	push   rbp
  405ce1:	mov    rbp,rdi
  405ce4:	push   rbx
  405ce5:	sub    rsp,0xd8
  405cec:	mov    QWORD PTR [rsp+0x28],rsi
  405cf1:	mov    QWORD PTR [rsp+0x30],rdx
  405cf6:	mov    QWORD PTR [rsp+0x38],rcx
  405cfb:	mov    QWORD PTR [rsp+0x40],r8
  405d00:	mov    QWORD PTR [rsp+0x48],r9
  405d05:	test   al,al
  405d07:	je     405d40 <build_ast@@Base+0x210>
  405d09:	movaps XMMWORD PTR [rsp+0x50],xmm0
  405d0e:	movaps XMMWORD PTR [rsp+0x60],xmm1
  405d13:	movaps XMMWORD PTR [rsp+0x70],xmm2
  405d18:	movaps XMMWORD PTR [rsp+0x80],xmm3
  405d20:	movaps XMMWORD PTR [rsp+0x90],xmm4
  405d28:	movaps XMMWORD PTR [rsp+0xa0],xmm5
  405d30:	movaps XMMWORD PTR [rsp+0xb0],xmm6
  405d38:	movaps XMMWORD PTR [rsp+0xc0],xmm7
  405d40:	mov    rbx,0x40e700
  405d47:	lea    rax,[rsp+0xf0]
  405d4f:	mov    DWORD PTR [rsp+0x8],0x8
  405d57:	mov    QWORD PTR [rsp+0x10],rax
  405d5c:	lea    rax,[rsp+0x20]
  405d61:	mov    rdi,QWORD PTR [rbx]
  405d64:	mov    DWORD PTR [rsp+0xc],0x30
  405d6c:	mov    QWORD PTR [rsp+0x18],rax
  405d71:	test   rdi,rdi
  405d74:	je     405d98 <build_ast@@Base+0x268>
  405d76:	lea    rcx,[rsp+0x8]
  405d7b:	mov    rdx,rbp
  405d7e:	mov    esi,0x1
  405d83:	call   402260 <__vfprintf_chk@plt>
  405d88:	add    rsp,0xd8
  405d8f:	pop    rbx
  405d90:	pop    rbp
  405d91:	ret    
  405d92:	nop    WORD PTR [rax+rax*1+0x0]
  405d98:	lea    rdi,[rip+0x2bb7]        # 408956 <_IO_stdin_used@@Base+0x956>
  405d9f:	call   402240 <getenv@plt>
  405da4:	test   rax,rax
  405da7:	je     405dd8 <build_ast@@Base+0x2a8>
  405da9:	mov    rdi,rax
  405dac:	lea    rsi,[rip+0x2bb3]        # 408966 <_IO_stdin_used@@Base+0x966>
  405db3:	call   402410 <fopen@plt>
  405db8:	mov    QWORD PTR [rbx],rax
  405dbb:	mov    rdi,rax
  405dbe:	test   rdi,rdi
  405dc1:	jne    405d76 <build_ast@@Base+0x246>
  405dc3:	mov    rax,QWORD PTR [rip+0x622e]        # 40bff8 <stderr@GLIBC_2.2.5>
  405dca:	mov    rdi,QWORD PTR [rax]
  405dcd:	mov    QWORD PTR [rbx],rdi
  405dd0:	jmp    405d76 <build_ast@@Base+0x246>
  405dd2:	nop    WORD PTR [rax+rax*1+0x0]
  405dd8:	mov    rdi,QWORD PTR [rbx]
  405ddb:	jmp    405dbe <build_ast@@Base+0x28e>
  405ddd:	nop    DWORD PTR [rax]
  405de0:	push   r14
  405de2:	push   r13
  405de4:	push   r12
  405de6:	push   rbp
  405de7:	push   rbx
  405de8:	test   rsi,rsi
  405deb:	je     405e44 <build_ast@@Base+0x314>
  405ded:	mov    rbx,rsi
  405df0:	mov    r13,QWORD PTR [rsi]
  405df3:	test   edx,edx
  405df5:	je     405e30 <build_ast@@Base+0x300>
  405df7:	lea    eax,[rdx-0x1]
  405dfa:	lea    r14,[rdi+0x20]
  405dfe:	lea    rbp,[rdi+rax*8+0x28]
  405e03:	xor    eax,eax
  405e05:	nop    DWORD PTR [rax]
  405e08:	cmp    QWORD PTR [r14],0x0
  405e0c:	je     405e27 <build_ast@@Base+0x2f7>
  405e0e:	lea    r12d,[rax+0x1]
  405e12:	add    rax,0x2
  405e16:	shl    rax,0x4
  405e1a:	mov    rdi,QWORD PTR [rbx+rax*1+0x10]
  405e1f:	call   402250 <free@plt>
  405e24:	mov    eax,r12d
  405e27:	add    r14,0x8
  405e2b:	cmp    r14,rbp
  405e2e:	jne    405e08 <build_ast@@Base+0x2d8>
  405e30:	mov    rdi,rbx
  405e33:	call   402250 <free@plt>
  405e38:	pop    rbx
  405e39:	mov    rax,r13
  405e3c:	pop    rbp
  405e3d:	pop    r12
  405e3f:	pop    r13
  405e41:	pop    r14
  405e43:	ret    
  405e44:	xor    r13d,r13d
  405e47:	jmp    405e38 <build_ast@@Base+0x308>
  405e49:	nop    DWORD PTR [rax+0x0]
  405e50:	sub    rsp,0x18
  405e54:	bswap  esi
  405e56:	mov    rax,rdx
  405e59:	mov    DWORD PTR [rsp+0x8],esi
  405e5d:	mov    DWORD PTR [rsp+0xc],0x2a343841
  405e65:	test   rdx,rdx
  405e68:	je     405e90 <build_ast@@Base+0x360>
  405e6a:	lea    rcx,[rsp+0x8]
  405e6f:	lea    rdx,[rsp+0xc]
  405e74:	mov    rsi,rax
  405e77:	xor    eax,eax
  405e79:	lea    rdi,[rip+0x2bb0]        # 408a30 <_IO_stdin_used@@Base+0xa30>
  405e80:	call   405ce0 <build_ast@@Base+0x1b0>
  405e85:	xor    eax,eax
  405e87:	add    rsp,0x18
  405e8b:	ret    
  405e8c:	nop    DWORD PTR [rax+0x0]
  405e90:	mov    rax,QWORD PTR [rdi]
  405e93:	jmp    405e6a <build_ast@@Base+0x33a>
  405e95:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  405ea0:	endbr64 
  405ea4:	mov    rax,0x40ee20
  405eab:	xor    edx,edx
  405ead:	xor    esi,esi
  405eaf:	mov    QWORD PTR [rax+0x8],0x0
  405eb7:	mov    rdi,QWORD PTR [rax]
  405eba:	mov    DWORD PTR [rax+0x1c],0xffffffff
  405ec1:	jmp    4023c0 <fseek@plt>
  405ec6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405ed0:	endbr64 
  405ed4:	push   r12
  405ed6:	xor    eax,eax
  405ed8:	push   rbp
  405ed9:	mov    rbp,rdi
  405edc:	push   rbx
  405edd:	sub    rsp,0x20
  405ee1:	mov    WORD PTR [rsp+0x2],ax
  405ee6:	mov    QWORD PTR [rsp+0x8],0x0
  405eef:	mov    QWORD PTR [rsp+0x10],0x0
  405ef8:	call   4022e0 <getpid@plt>
  405efd:	mov    rbx,0x40ee20
  405f04:	mov    edx,0x1
  405f09:	mov    rdi,rbp
  405f0c:	mov    DWORD PTR [rsp+0x18],eax
  405f10:	mov    esi,0x42
  405f15:	movabs rax,0xffffffff00000000
  405f1f:	mov    QWORD PTR [rbx+0x10],rax
  405f23:	xor    eax,eax
  405f25:	mov    QWORD PTR [rbx+0x8],0x0
  405f2d:	mov    WORD PTR [rsp],dx
  405f31:	mov    edx,0x1b6
  405f36:	mov    DWORD PTR [rbx+0x18],0x0
  405f3d:	call   4023f0 <open@plt>
  405f42:	mov    ebp,eax
  405f44:	xor    eax,eax
  405f46:	test   ebp,ebp
  405f48:	js     405f98 <build_ast@@Base+0x468>
  405f4a:	mov    r12,rsp
  405f4d:	xor    eax,eax
  405f4f:	mov    rdx,r12
  405f52:	mov    esi,0x7
  405f57:	mov    edi,ebp
  405f59:	call   4022d0 <fcntl@plt>
  405f5e:	test   eax,eax
  405f60:	je     405f6c <build_ast@@Base+0x43c>
  405f62:	call   402280 <__errno_location@plt>
  405f67:	cmp    DWORD PTR [rax],0x4
  405f6a:	je     405f4d <build_ast@@Base+0x41d>
  405f6c:	lea    rsi,[rip+0x29f5]        # 408968 <_IO_stdin_used@@Base+0x968>
  405f73:	mov    edi,ebp
  405f75:	call   4023d0 <fdopen@plt>
  405f7a:	mov    QWORD PTR [rbx],rax
  405f7d:	test   rax,rax
  405f80:	je     405fa8 <build_ast@@Base+0x478>
  405f82:	mov    rdi,rax
  405f85:	xor    esi,esi
  405f87:	mov    DWORD PTR [rbx+0x1c],0x1
  405f8e:	call   402320 <setbuf@plt>
  405f93:	mov    eax,0x1
  405f98:	add    rsp,0x20
  405f9c:	pop    rbx
  405f9d:	pop    rbp
  405f9e:	pop    r12
  405fa0:	ret    
  405fa1:	nop    DWORD PTR [rax+0x0]
  405fa8:	mov    edi,ebp
  405faa:	call   402360 <close@plt>
  405faf:	add    rsp,0x20
  405fb3:	xor    eax,eax
  405fb5:	pop    rbx
  405fb6:	pop    rbp
  405fb7:	pop    r12
  405fb9:	ret    
  405fba:	nop    WORD PTR [rax+rax*1+0x0]
  405fc0:	endbr64 
  405fc4:	push   rbx
  405fc5:	mov    rbx,0x40ee20
  405fcc:	mov    rdi,QWORD PTR [rbx]
  405fcf:	test   rdi,rdi
  405fd2:	je     405fee <build_ast@@Base+0x4be>
  405fd4:	mov    eax,DWORD PTR [rbx+0xc]
  405fd7:	test   eax,eax
  405fd9:	jne    406000 <build_ast@@Base+0x4d0>
  405fdb:	call   4022f0 <fclose@plt>
  405fe0:	mov    QWORD PTR [rbx],0x0
  405fe7:	mov    DWORD PTR [rbx+0x10],0x0
  405fee:	mov    eax,DWORD PTR [rbx+0x18]
  405ff1:	mov    DWORD PTR [rbx+0x1c],0x0
  405ff8:	pop    rbx
  405ff9:	ret    
  405ffa:	nop    WORD PTR [rax+rax*1+0x0]
  406000:	mov    edx,DWORD PTR [rbx+0x1c]
  406003:	test   edx,edx
  406005:	jns    405fdb <build_ast@@Base+0x4ab>
  406007:	mov    edi,eax
  406009:	call   405ba0 <build_ast@@Base+0x70>
  40600e:	mov    rdi,QWORD PTR [rbx]
  406011:	jmp    405fdb <build_ast@@Base+0x4ab>
  406013:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40601e:	xchg   ax,ax
  406020:	endbr64 
  406024:	push   rbx
  406025:	mov    ebx,edi
  406027:	mov    edi,0x1
  40602c:	call   405bf0 <build_ast@@Base+0xc0>
  406031:	mov    DWORD PTR [rax],ebx
  406033:	pop    rbx
  406034:	ret    
  406035:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  406040:	endbr64 
  406044:	push   rbx
  406045:	mov    rbx,rdi
  406048:	mov    edi,0x2
  40604d:	call   405bf0 <build_ast@@Base+0xc0>
  406052:	mov    QWORD PTR [rax],rbx
  406055:	pop    rbx
  406056:	ret    
  406057:	nop    WORD PTR [rax+rax*1+0x0]
  406060:	endbr64 
  406064:	push   rbp
  406065:	mov    ebp,edi
  406067:	mov    edi,0x2
  40606c:	push   rbx
  40606d:	mov    ebx,esi
  40606f:	sub    rsp,0x8
  406073:	call   405bf0 <build_ast@@Base+0xc0>
  406078:	mov    DWORD PTR [rax],ebp
  40607a:	mov    DWORD PTR [rax+0x4],ebx
  40607d:	add    rsp,0x8
  406081:	pop    rbx
  406082:	pop    rbp
  406083:	ret    
  406084:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40608f:	nop
  406090:	endbr64 
  406094:	push   r14
  406096:	xor    ecx,ecx
  406098:	push   r13
  40609a:	mov    r13d,edi
  40609d:	mov    edi,0x1
  4060a2:	push   r12
  4060a4:	xor    r12d,r12d
  4060a7:	push   rbp
  4060a8:	mov    rbp,rsi
  4060ab:	push   rbx
  4060ac:	lea    rbx,[rsi+0x28]
  4060b0:	mov    rax,rbx
  4060b3:	sub    rsp,0x20
  4060b7:	mov    QWORD PTR [rsp],0x0
  4060bf:	mov    QWORD PTR [rsp+0x8],0x0
  4060c8:	mov    QWORD PTR [rsp+0x10],0x0
  4060d1:	mov    QWORD PTR [rsp+0x18],0x0
  4060da:	nop    WORD PTR [rax+rax*1+0x0]
  4060e0:	mov    edx,DWORD PTR [rax]
  4060e2:	test   edx,edx
  4060e4:	je     4060f6 <build_ast@@Base+0x5c6>
  4060e6:	mov    edx,ecx
  4060e8:	mov    esi,edi
  4060ea:	add    r12d,0x1
  4060ee:	shr    edx,0x5
  4060f1:	shl    esi,cl
  4060f3:	or     DWORD PTR [rsp+rdx*4],esi
  4060f6:	add    ecx,0x1
  4060f9:	add    rax,0x18
  4060fd:	cmp    ecx,0xfc
  406103:	jne    4060e0 <build_ast@@Base+0x5b0>
  406105:	mov    edi,0x2
  40610a:	lea    r14,[rsp+0x20]
  40610f:	call   405bf0 <build_ast@@Base+0xc0>
  406114:	lea    edx,[r12+r12*4+0x11]
  406119:	mov    edi,0x1
  40611e:	mov    DWORD PTR [rax+0x4],edx
  406121:	mov    DWORD PTR [rax],r13d
  406124:	mov    r12d,DWORD PTR [rbp+0x0]
  406128:	call   405bf0 <build_ast@@Base+0xc0>
  40612d:	mov    edi,0x1
  406132:	mov    DWORD PTR [rax],r12d
  406135:	mov    r12d,DWORD PTR [rbp+0x8]
  406139:	call   405bf0 <build_ast@@Base+0xc0>
  40613e:	mov    edi,0x1
  406143:	mov    DWORD PTR [rax],r12d
  406146:	mov    r12d,DWORD PTR [rbp+0xc]
  40614a:	call   405bf0 <build_ast@@Base+0xc0>
  40614f:	mov    edi,0x2
  406154:	mov    DWORD PTR [rax],r12d
  406157:	mov    r12,QWORD PTR [rbp+0x10]
  40615b:	call   405bf0 <build_ast@@Base+0xc0>
  406160:	mov    edi,0x2
  406165:	mov    QWORD PTR [rax],r12
  406168:	mov    r12,QWORD PTR [rbp+0x18]
  40616c:	call   405bf0 <build_ast@@Base+0xc0>
  406171:	mov    edi,0x2
  406176:	mov    QWORD PTR [rax],r12
  406179:	mov    r12,QWORD PTR [rbp+0x20]
  40617d:	call   405bf0 <build_ast@@Base+0xc0>
  406182:	mov    QWORD PTR [rax],r12
  406185:	mov    r12,rsp
  406188:	nop    DWORD PTR [rax+rax*1+0x0]
  406190:	mov    r13d,DWORD PTR [r12]
  406194:	mov    edi,0x1
  406199:	add    r12,0x4
  40619d:	call   405bf0 <build_ast@@Base+0xc0>
  4061a2:	mov    DWORD PTR [rax],r13d
  4061a5:	cmp    r14,r12
  4061a8:	jne    406190 <build_ast@@Base+0x660>
  4061aa:	lea    r12,[rbp+0x17c8]
  4061b1:	nop    DWORD PTR [rax+0x0]
  4061b8:	mov    ebp,DWORD PTR [rbx]
  4061ba:	test   ebp,ebp
  4061bc:	je     4061ec <build_ast@@Base+0x6bc>
  4061be:	mov    edi,0x1
  4061c3:	call   405bf0 <build_ast@@Base+0xc0>
  4061c8:	mov    edi,0x2
  4061cd:	mov    DWORD PTR [rax],ebp
  4061cf:	mov    rbp,QWORD PTR [rbx+0x8]
  4061d3:	call   405bf0 <build_ast@@Base+0xc0>
  4061d8:	mov    edi,0x2
  4061dd:	mov    QWORD PTR [rax],rbp
  4061e0:	mov    rbp,QWORD PTR [rbx+0x10]
  4061e4:	call   405bf0 <build_ast@@Base+0xc0>
  4061e9:	mov    QWORD PTR [rax],rbp
  4061ec:	add    rbx,0x18
  4061f0:	cmp    rbx,r12
  4061f3:	jne    4061b8 <build_ast@@Base+0x688>
  4061f5:	add    rsp,0x20
  4061f9:	pop    rbx
  4061fa:	pop    rbp
  4061fb:	pop    r12
  4061fd:	pop    r13
  4061ff:	pop    r14
  406201:	ret    
  406202:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40620d:	nop    DWORD PTR [rax]
  406210:	endbr64 
  406214:	sub    rsp,0x8
  406218:	mov    edi,0x1
  40621d:	call   405c40 <build_ast@@Base+0x110>
  406222:	test   rax,rax
  406225:	je     406230 <build_ast@@Base+0x700>
  406227:	mov    eax,DWORD PTR [rax]
  406229:	add    rsp,0x8
  40622d:	ret    
  40622e:	xchg   ax,ax
  406230:	xor    eax,eax
  406232:	add    rsp,0x8
  406236:	ret    
  406237:	nop    WORD PTR [rax+rax*1+0x0]
  406240:	endbr64 
  406244:	sub    rsp,0x8
  406248:	mov    edi,0x2
  40624d:	call   405c40 <build_ast@@Base+0x110>
  406252:	test   rax,rax
  406255:	je     406260 <build_ast@@Base+0x730>
  406257:	mov    rax,QWORD PTR [rax]
  40625a:	add    rsp,0x8
  40625e:	ret    
  40625f:	nop
  406260:	xor    eax,eax
  406262:	add    rsp,0x8
  406266:	ret    
  406267:	nop    WORD PTR [rax+rax*1+0x0]
  406270:	endbr64 
  406274:	push   r15
  406276:	push   r14
  406278:	push   r13
  40627a:	push   r12
  40627c:	mov    r12,rdi
  40627f:	mov    edi,0x1
  406284:	push   rbp
  406285:	push   rbx
  406286:	sub    rsp,0x28
  40628a:	call   405c40 <build_ast@@Base+0x110>
  40628f:	test   rax,rax
  406292:	je     4064df <build_ast@@Base+0x9af>
  406298:	mov    eax,DWORD PTR [rax]
  40629a:	mov    DWORD PTR [r12],eax
  40629e:	mov    edi,0x1
  4062a3:	call   405c40 <build_ast@@Base+0x110>
  4062a8:	test   rax,rax
  4062ab:	je     4064e6 <build_ast@@Base+0x9b6>
  4062b1:	mov    eax,DWORD PTR [rax]
  4062b3:	mov    DWORD PTR [r12+0x8],eax
  4062b8:	mov    edi,0x1
  4062bd:	call   405c40 <build_ast@@Base+0x110>
  4062c2:	test   rax,rax
  4062c5:	je     4064ed <build_ast@@Base+0x9bd>
  4062cb:	mov    eax,DWORD PTR [rax]
  4062cd:	mov    DWORD PTR [r12+0xc],eax
  4062d2:	mov    edi,0x2
  4062d7:	call   405c40 <build_ast@@Base+0x110>
  4062dc:	test   rax,rax
  4062df:	je     4064f4 <build_ast@@Base+0x9c4>
  4062e5:	mov    rax,QWORD PTR [rax]
  4062e8:	mov    QWORD PTR [r12+0x10],rax
  4062ed:	mov    edi,0x2
  4062f2:	call   405c40 <build_ast@@Base+0x110>
  4062f7:	test   rax,rax
  4062fa:	je     4064fb <build_ast@@Base+0x9cb>
  406300:	mov    rax,QWORD PTR [rax]
  406303:	mov    QWORD PTR [r12+0x18],rax
  406308:	mov    edi,0x2
  40630d:	call   405c40 <build_ast@@Base+0x110>
  406312:	test   rax,rax
  406315:	je     406502 <build_ast@@Base+0x9d2>
  40631b:	mov    rax,QWORD PTR [rax]
  40631e:	lea    rdi,[r12+0x30]
  406323:	mov    QWORD PTR [r12+0x20],rax
  406328:	mov    eax,r12d
  40632b:	mov    rbx,rsp
  40632e:	and    rdi,0xfffffffffffffff8
  406332:	lea    r13,[rsp+0x20]
  406337:	xor    r15d,r15d
  40633a:	mov    QWORD PTR [r12+0x28],0x0
  406343:	mov    QWORD PTR [r12+0x17c0],0x0
  40634f:	sub    eax,edi
  406351:	lea    ecx,[rax+0x17c8]
  406357:	xor    eax,eax
  406359:	shr    ecx,0x3
  40635c:	rep stos QWORD PTR es:[rdi],rax
  40635f:	jmp    406381 <build_ast@@Base+0x851>
  406361:	nop    DWORD PTR [rax+0x0]
  406368:	mov    edi,DWORD PTR [rax]
  40636a:	add    rbx,0x4
  40636e:	mov    rbp,rdi
  406371:	call   407d10 <__gcov_sort_n_vals@@Base+0x17b0>
  406376:	mov    DWORD PTR [rbx-0x4],ebp
  406379:	add    r15d,eax
  40637c:	cmp    r13,rbx
  40637f:	je     4063a0 <build_ast@@Base+0x870>
  406381:	mov    edi,0x1
  406386:	call   405c40 <build_ast@@Base+0x110>
  40638b:	test   rax,rax
  40638e:	jne    406368 <build_ast@@Base+0x838>
  406390:	xor    ebp,ebp
  406392:	add    rbx,0x4
  406396:	mov    DWORD PTR [rbx-0x4],ebp
  406399:	cmp    r13,rbx
  40639c:	jne    406381 <build_ast@@Base+0x851>
  40639e:	xchg   ax,ax
  4063a0:	lea    r13d,[r15-0x1]
  4063a4:	xor    ebx,ebx
  4063a6:	xor    ebp,ebp
  4063a8:	xor    r14d,r14d
  4063ab:	test   r15d,r15d
  4063ae:	je     406487 <build_ast@@Base+0x957>
  4063b4:	nop    DWORD PTR [rax+0x0]
  4063b8:	test   ebx,ebx
  4063ba:	je     4063ce <build_ast@@Base+0x89e>
  4063bc:	jmp    406406 <build_ast@@Base+0x8d6>
  4063be:	xchg   ax,ax
  4063c0:	mov    eax,ebp
  4063c2:	lea    ecx,[rbp+0x1]
  4063c5:	mov    ebx,DWORD PTR [rsp+rax*4]
  4063c8:	test   ebx,ebx
  4063ca:	jne    4063ed <build_ast@@Base+0x8bd>
  4063cc:	mov    ebp,ecx
  4063ce:	cmp    ebp,0x7
  4063d1:	jbe    4063c0 <build_ast@@Base+0x890>
  4063d3:	lea    rdi,[rip+0x268e]        # 408a68 <_IO_stdin_used@@Base+0xa68>
  4063da:	xor    eax,eax
  4063dc:	call   405ce0 <build_ast@@Base+0x1b0>
  4063e1:	mov    eax,ebp
  4063e3:	lea    ecx,[rbp+0x1]
  4063e6:	mov    ebx,DWORD PTR [rsp+rax*4]
  4063e9:	test   ebx,ebx
  4063eb:	je     4063cc <build_ast@@Base+0x89c>
  4063ed:	mov    r14d,ebp
  4063f0:	mov    ebp,ecx
  4063f2:	shl    r14d,0x5
  4063f6:	test   bl,0x1
  4063f9:	jne    40640b <build_ast@@Base+0x8db>
  4063fb:	nop    DWORD PTR [rax+rax*1+0x0]
  406400:	add    r14d,0x1
  406404:	shr    ebx,1
  406406:	test   bl,0x1
  406409:	je     406400 <build_ast@@Base+0x8d0>
  40640b:	cmp    r14d,0xfb
  406412:	ja     4064a0 <build_ast@@Base+0x970>
  406418:	mov    edi,0x1
  40641d:	call   405c40 <build_ast@@Base+0x110>
  406422:	test   rax,rax
  406425:	je     4064c1 <build_ast@@Base+0x991>
  40642b:	mov    ecx,DWORD PTR [rax]
  40642d:	mov    r15d,r14d
  406430:	mov    edi,0x2
  406435:	lea    rax,[r15+r15*2]
  406439:	mov    DWORD PTR [r12+rax*8+0x28],ecx
  40643e:	call   405c40 <build_ast@@Base+0x110>
  406443:	test   rax,rax
  406446:	je     4064d8 <build_ast@@Base+0x9a8>
  40644c:	mov    rcx,QWORD PTR [rax]
  40644f:	lea    rax,[r15+r15*2]
  406453:	mov    edi,0x2
  406458:	mov    QWORD PTR [r12+rax*8+0x30],rcx
  40645d:	call   405c40 <build_ast@@Base+0x110>
  406462:	test   rax,rax
  406465:	je     4064d0 <build_ast@@Base+0x9a0>
  406467:	mov    rcx,QWORD PTR [rax]
  40646a:	lea    rax,[r15+r15*2]
  40646e:	sub    r13d,0x1
  406472:	shr    ebx,1
  406474:	add    r14d,0x1
  406478:	mov    QWORD PTR [r12+rax*8+0x38],rcx
  40647d:	cmp    r13d,0xffffffff
  406481:	jne    4063b8 <build_ast@@Base+0x888>
  406487:	add    rsp,0x28
  40648b:	pop    rbx
  40648c:	pop    rbp
  40648d:	pop    r12
  40648f:	pop    r13
  406491:	pop    r14
  406493:	pop    r15
  406495:	ret    
  406496:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4064a0:	lea    rdi,[rip+0x2601]        # 408aa8 <_IO_stdin_used@@Base+0xaa8>
  4064a7:	xor    eax,eax
  4064a9:	call   405ce0 <build_ast@@Base+0x1b0>
  4064ae:	mov    edi,0x1
  4064b3:	call   405c40 <build_ast@@Base+0x110>
  4064b8:	test   rax,rax
  4064bb:	jne    40642b <build_ast@@Base+0x8fb>
  4064c1:	xor    ecx,ecx
  4064c3:	jmp    40642d <build_ast@@Base+0x8fd>
  4064c8:	nop    DWORD PTR [rax+rax*1+0x0]
  4064d0:	xor    ecx,ecx
  4064d2:	jmp    40646a <build_ast@@Base+0x93a>
  4064d4:	nop    DWORD PTR [rax+0x0]
  4064d8:	xor    ecx,ecx
  4064da:	jmp    40644f <build_ast@@Base+0x91f>
  4064df:	xor    eax,eax
  4064e1:	jmp    40629a <build_ast@@Base+0x76a>
  4064e6:	xor    eax,eax
  4064e8:	jmp    4062b3 <build_ast@@Base+0x783>
  4064ed:	xor    eax,eax
  4064ef:	jmp    4062cd <build_ast@@Base+0x79d>
  4064f4:	xor    eax,eax
  4064f6:	jmp    4062e8 <build_ast@@Base+0x7b8>
  4064fb:	xor    eax,eax
  4064fd:	jmp    406303 <build_ast@@Base+0x7d3>
  406502:	xor    eax,eax
  406504:	jmp    40631e <build_ast@@Base+0x7ee>
  406509:	nop    DWORD PTR [rax+0x0]
  406510:	endbr64 
  406514:	push   rbp
  406515:	push   rbx
  406516:	mov    ebx,edi
  406518:	sub    rsp,0x8
  40651c:	mov    rbp,0x40ee20
  406523:	mov    edi,DWORD PTR [rbp+0xc]
  406526:	test   edi,edi
  406528:	jne    406558 <build_ast@@Base+0xa28>
  40652a:	mov    rdi,QWORD PTR [rbp+0x0]
  40652e:	lea    esi,[rbx*4+0x0]
  406535:	xor    edx,edx
  406537:	call   4023c0 <fseek@plt>
  40653c:	mov    rdi,QWORD PTR [rbp+0x0]
  406540:	call   402370 <ftell@plt>
  406545:	sar    rax,0x2
  406549:	mov    DWORD PTR [rbp+0x8],eax
  40654c:	add    rsp,0x8
  406550:	pop    rbx
  406551:	pop    rbp
  406552:	ret    
  406553:	nop    DWORD PTR [rax+rax*1+0x0]
  406558:	call   405ba0 <build_ast@@Base+0x70>
  40655d:	jmp    40652a <build_ast@@Base+0x9fa>
  40655f:	nop

0000000000406560 <__gcov_sort_n_vals@@Base>:
  406560:	endbr64 
  406564:	cmp    esi,0x2
  406567:	jle    406601 <__gcov_sort_n_vals@@Base+0xa1>
  40656d:	sub    esi,0x3
  406570:	push   rbp
  406571:	lea    r9,[rdi+0x8]
  406575:	mov    r11,0xfffffffffffffff0
  40657c:	shr    esi,1
  40657e:	push   rbx
  40657f:	xor    r10d,r10d
  406582:	mov    eax,esi
  406584:	lea    rbp,[rax+rax*1+0x2]
  406589:	nop    DWORD PTR [rax+0x0]
  406590:	mov    rbx,QWORD PTR [r9+0x8]
  406594:	mov    rsi,QWORD PTR [r9+0x10]
  406598:	cmp    rsi,QWORD PTR [r9]
  40659b:	jle    4065fc <__gcov_sort_n_vals@@Base+0x9c>
  40659d:	mov    eax,r10d
  4065a0:	lea    rcx,[r10-0x2]
  4065a4:	lea    r8,[r9+r11*1]
  4065a8:	shr    eax,1
  4065aa:	add    rax,rax
  4065ad:	sub    rcx,rax
  4065b0:	mov    rax,r10
  4065b3:	jmp    4065bf <__gcov_sort_n_vals@@Base+0x5f>
  4065b5:	nop    DWORD PTR [rax]
  4065b8:	cmp    rsi,QWORD PTR [rdi+rax*8+0x8]
  4065bd:	jle    4065db <__gcov_sort_n_vals@@Base+0x7b>
  4065bf:	mov    rdx,QWORD PTR [rdi+rax*8]
  4065c3:	mov    QWORD PTR [rdi+rax*8+0x10],rdx
  4065c8:	mov    rdx,QWORD PTR [r8+rax*8+0x10]
  4065cd:	mov    QWORD PTR [rdi+rax*8+0x18],rdx
  4065d2:	sub    rax,0x2
  4065d6:	cmp    rax,rcx
  4065d9:	jne    4065b8 <__gcov_sort_n_vals@@Base+0x58>
  4065db:	add    rax,0x2
  4065df:	add    r10,0x2
  4065e3:	add    r9,0x10
  4065e7:	sub    r11,0x10
  4065eb:	mov    QWORD PTR [rdi+rax*8],rbx
  4065ef:	mov    QWORD PTR [rdi+rax*8+0x8],rsi
  4065f4:	cmp    rbp,r10
  4065f7:	jne    406590 <__gcov_sort_n_vals@@Base+0x30>
  4065f9:	pop    rbx
  4065fa:	pop    rbp
  4065fb:	ret    
  4065fc:	mov    rax,r10
  4065ff:	jmp    4065db <__gcov_sort_n_vals@@Base+0x7b>
  406601:	ret    
  406602:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40660d:	nop    DWORD PTR [rax]
  406610:	push   r15
  406612:	push   r14
  406614:	push   r13
  406616:	push   r12
  406618:	push   rbp
  406619:	push   rbx
  40661a:	lea    r11,[rsp-0x4000]
  406622:	sub    rsp,0x1000
  406629:	or     QWORD PTR [rsp],0x0
  40662e:	cmp    rsp,r11
  406631:	jne    406622 <__gcov_sort_n_vals@@Base+0xc2>
  406633:	sub    rsp,0x7e8
  40663a:	mov    ecx,0x2f9
  40663f:	xor    eax,eax
  406641:	mov    r13,rdi
  406644:	lea    rdi,[rsp+0x70]
  406649:	mov    DWORD PTR [rsp+0x3c],esi
  40664d:	mov    QWORD PTR [rsp+0x8],rdi
  406652:	rep stos QWORD PTR es:[rdi],rax
  406655:	test   r13,r13
  406658:	je     407a60 <__gcov_sort_n_vals@@Base+0x1500>
  40665e:	mov    DWORD PTR [rsp+0x10],0x0
  406666:	mov    rbx,r13
  406669:	xor    ebp,ebp
  40666b:	xor    r12d,r12d
  40666e:	mov    QWORD PTR [rsp+0x18],r13
  406673:	nop    DWORD PTR [rax+rax*1+0x0]
  406678:	mov    rdi,QWORD PTR [rbx+0x18]
  40667c:	call   402300 <strlen@plt>
  406681:	mov    ecx,DWORD PTR [rbx+0x10]
  406684:	mov    edx,0x20
  406689:	cmp    rbp,rax
  40668c:	cmovb  rbp,rax
  406690:	mov    eax,ecx
  406692:	add    ecx,ecx
  406694:	xor    eax,r12d
  406697:	add    r12d,r12d
  40669a:	sar    eax,0x1f
  40669d:	and    eax,0x4c11db7
  4066a2:	xor    r12d,eax
  4066a5:	sub    edx,0x1
  4066a8:	jne    406690 <__gcov_sort_n_vals@@Base+0x130>
  4066aa:	mov    esi,DWORD PTR [rbx+0x68]
  4066ad:	mov    edx,0x20
  4066b2:	mov    ecx,esi
  4066b4:	nop    DWORD PTR [rax+0x0]
  4066b8:	mov    eax,r12d
  4066bb:	add    r12d,r12d
  4066be:	xor    eax,ecx
  4066c0:	add    ecx,ecx
  4066c2:	sar    eax,0x1f
  4066c5:	and    eax,0x4c11db7
  4066ca:	xor    r12d,eax
  4066cd:	sub    edx,0x1
  4066d0:	jne    4066b8 <__gcov_sort_n_vals@@Base+0x158>
  4066d2:	test   esi,esi
  4066d4:	je     406857 <__gcov_sort_n_vals@@Base+0x2f7>
  4066da:	mov    rax,QWORD PTR [rbx+0x70]
  4066de:	lea    edx,[rsi-0x1]
  4066e1:	mov    edi,DWORD PTR [rsp+0x10]
  4066e5:	xor    r11d,r11d
  4066e8:	mov    r8,QWORD PTR [rsp+0x80]
  4066f0:	mov    r9,QWORD PTR [rsp+0x88]
  4066f8:	xor    r10d,r10d
  4066fb:	xor    r14d,r14d
  4066fe:	lea    rcx,[rax+0x8]
  406702:	lea    r13,[rcx+rdx*8]
  406706:	nop    WORD PTR cs:[rax+rax*1+0x0]
  406710:	mov    rax,QWORD PTR [rax]
  406713:	xor    esi,esi
  406715:	test   rax,rax
  406718:	je     406725 <__gcov_sort_n_vals@@Base+0x1c5>
  40671a:	cmp    QWORD PTR [rax],rbx
  40671d:	je     406820 <__gcov_sort_n_vals@@Base+0x2c0>
  406723:	xor    eax,eax
  406725:	mov    r15d,0x20
  40672b:	nop    DWORD PTR [rax+rax*1+0x0]
  406730:	mov    edx,r12d
  406733:	add    r12d,r12d
  406736:	xor    edx,esi
  406738:	add    esi,esi
  40673a:	sar    edx,0x1f
  40673d:	and    edx,0x4c11db7
  406743:	xor    r12d,edx
  406746:	sub    r15d,0x1
  40674a:	jne    406730 <__gcov_sort_n_vals@@Base+0x1d0>
  40674c:	xor    esi,esi
  40674e:	test   rax,rax
  406751:	je     406756 <__gcov_sort_n_vals@@Base+0x1f6>
  406753:	mov    esi,DWORD PTR [rax+0xc]
  406756:	mov    r15d,0x20
  40675c:	nop    DWORD PTR [rax+0x0]
  406760:	mov    edx,esi
  406762:	add    esi,esi
  406764:	xor    edx,r12d
  406767:	add    r12d,r12d
  40676a:	sar    edx,0x1f
  40676d:	and    edx,0x4c11db7
  406773:	xor    r12d,edx
  406776:	sub    r15d,0x1
  40677a:	jne    406760 <__gcov_sort_n_vals@@Base+0x200>
  40677c:	test   rax,rax
  40677f:	je     40680c <__gcov_sort_n_vals@@Base+0x2ac>
  406785:	cmp    QWORD PTR [rbx+0x20],0x0
  40678a:	je     40680c <__gcov_sort_n_vals@@Base+0x2ac>
  406790:	mov    esi,DWORD PTR [rax+0x18]
  406793:	mov    r14d,0x20
  406799:	add    edi,esi
  40679b:	mov    r15d,esi
  40679e:	xchg   ax,ax
  4067a0:	mov    edx,r15d
  4067a3:	add    r15d,r15d
  4067a6:	xor    edx,r12d
  4067a9:	add    r12d,r12d
  4067ac:	sar    edx,0x1f
  4067af:	and    edx,0x4c11db7
  4067b5:	xor    r12d,edx
  4067b8:	sub    r14d,0x1
  4067bc:	jne    4067a0 <__gcov_sort_n_vals@@Base+0x240>
  4067be:	test   esi,esi
  4067c0:	je     406c00 <__gcov_sort_n_vals@@Base+0x6a0>
  4067c6:	mov    rdx,QWORD PTR [rax+0x20]
  4067ca:	sub    esi,0x1
  4067cd:	lea    rax,[rdx+0x8]
  4067d1:	lea    rsi,[rax+rsi*8]
  4067d5:	jmp    4067e4 <__gcov_sort_n_vals@@Base+0x284>
  4067d7:	nop    WORD PTR [rax+rax*1+0x0]
  4067e0:	add    rax,0x8
  4067e4:	mov    rdx,QWORD PTR [rdx]
  4067e7:	add    r8,rdx
  4067ea:	cmp    rdx,r9
  4067ed:	jle    4067f8 <__gcov_sort_n_vals@@Base+0x298>
  4067ef:	mov    r9,rdx
  4067f2:	mov    r11d,0x1
  4067f8:	mov    rdx,rax
  4067fb:	cmp    rax,rsi
  4067fe:	jne    4067e0 <__gcov_sort_n_vals@@Base+0x280>
  406800:	mov    r10d,0x1
  406806:	mov    r14d,0x1
  40680c:	mov    rax,rcx
  40680f:	cmp    rcx,r13
  406812:	je     406830 <__gcov_sort_n_vals@@Base+0x2d0>
  406814:	add    rcx,0x8
  406818:	jmp    406710 <__gcov_sort_n_vals@@Base+0x1b0>
  40681d:	nop    DWORD PTR [rax]
  406820:	mov    esi,DWORD PTR [rax+0x10]
  406823:	jmp    406725 <__gcov_sort_n_vals@@Base+0x1c5>
  406828:	nop    DWORD PTR [rax+rax*1+0x0]
  406830:	test   r14b,r14b
  406833:	je     40683d <__gcov_sort_n_vals@@Base+0x2dd>
  406835:	mov    DWORD PTR [rsp+0x78],edi
  406839:	mov    DWORD PTR [rsp+0x10],edi
  40683d:	test   r10b,r10b
  406840:	je     40684a <__gcov_sort_n_vals@@Base+0x2ea>
  406842:	mov    QWORD PTR [rsp+0x80],r8
  40684a:	test   r11b,r11b
  40684d:	je     406857 <__gcov_sort_n_vals@@Base+0x2f7>
  40684f:	mov    QWORD PTR [rsp+0x88],r9
  406857:	mov    rbx,QWORD PTR [rbx+0x8]
  40685b:	test   rbx,rbx
  40685e:	jne    406678 <__gcov_sort_n_vals@@Base+0x118>
  406864:	mov    r14d,DWORD PTR [rsp+0x10]
  406869:	mov    DWORD PTR [rsp+0x48],r12d
  40686e:	add    rbp,0x2
  406872:	mov    r13,QWORD PTR [rsp+0x18]
  406877:	test   r14d,r14d
  40687a:	je     4069bd <__gcov_sort_n_vals@@Base+0x45d>
  406880:	mov    rbx,QWORD PTR [rsp+0x8]
  406885:	mov    rcx,QWORD PTR [rsp+0x88]
  40688d:	lea    rax,[rbx+0x28]
  406891:	lea    rdx,[rbx+0x17c8]
  406898:	nop    DWORD PTR [rax+rax*1+0x0]
  4068a0:	mov    DWORD PTR [rax],0x0
  4068a6:	add    rax,0x18
  4068aa:	mov    QWORD PTR [rax-0x10],rcx
  4068ae:	mov    QWORD PTR [rax-0x8],0x0
  4068b6:	cmp    rdx,rax
  4068b9:	jne    4068a0 <__gcov_sort_n_vals@@Base+0x340>
  4068bb:	mov    rax,QWORD PTR [rsp+0x8]
  4068c0:	mov    r8,r13
  4068c3:	mov    ebx,0x4000003e
  4068c8:	mov    r14d,0x3f
  4068ce:	mov    r12d,0x3d
  4068d4:	lea    r11,[rax+0x28]
  4068d8:	nop    DWORD PTR [rax+rax*1+0x0]
  4068e0:	cmp    QWORD PTR [r8+0x20],0x0
  4068e5:	je     4069b0 <__gcov_sort_n_vals@@Base+0x450>
  4068eb:	mov    edx,DWORD PTR [r8+0x68]
  4068ef:	test   edx,edx
  4068f1:	je     4069b0 <__gcov_sort_n_vals@@Base+0x450>
  4068f7:	mov    rax,QWORD PTR [r8+0x70]
  4068fb:	sub    edx,0x1
  4068fe:	lea    rdi,[rax+0x8]
  406902:	lea    r10,[rdi+rdx*8]
  406906:	jmp    406920 <__gcov_sort_n_vals@@Base+0x3c0>
  406908:	nop    DWORD PTR [rax+rax*1+0x0]
  406910:	mov    rax,rdi
  406913:	cmp    r10,rdi
  406916:	je     4069b0 <__gcov_sort_n_vals@@Base+0x450>
  40691c:	add    rdi,0x8
  406920:	mov    rax,QWORD PTR [rax]
  406923:	test   rax,rax
  406926:	je     406910 <__gcov_sort_n_vals@@Base+0x3b0>
  406928:	cmp    r8,QWORD PTR [rax]
  40692b:	jne    406910 <__gcov_sort_n_vals@@Base+0x3b0>
  40692d:	mov    edx,DWORD PTR [rax+0x18]
  406930:	test   edx,edx
  406932:	je     406910 <__gcov_sort_n_vals@@Base+0x3b0>
  406934:	mov    rax,QWORD PTR [rax+0x20]
  406938:	sub    edx,0x1
  40693b:	lea    rsi,[rax+0x8]
  40693f:	lea    r9,[rsi+rdx*8]
  406943:	jmp    40699e <__gcov_sort_n_vals@@Base+0x43e>
  406945:	nop    DWORD PTR [rax]
  406948:	bsr    rdx,rax
  40694c:	mov    ecx,r14d
  40694f:	xor    rdx,0x3f
  406953:	sub    ecx,edx
  406955:	cmp    ecx,0x1
  406958:	jbe    4069a6 <__gcov_sort_n_vals@@Base+0x446>
  40695a:	mov    ecx,r12d
  40695d:	mov    r15,rax
  406960:	sub    ecx,edx
  406962:	shr    r15,cl
  406965:	mov    rcx,r15
  406968:	mov    r15d,ebx
  40696b:	and    ecx,0x3
  40696e:	sub    r15d,edx
  406971:	lea    edx,[rcx+r15*4]
  406975:	lea    rdx,[rdx+rdx*2]
  406979:	lea    rdx,[r11+rdx*8]
  40697d:	add    DWORD PTR [rdx],0x1
  406980:	add    QWORD PTR [rdx+0x10],rax
  406984:	cmp    rax,QWORD PTR [rdx+0x8]
  406988:	jge    40698e <__gcov_sort_n_vals@@Base+0x42e>
  40698a:	mov    QWORD PTR [rdx+0x8],rax
  40698e:	mov    rax,rsi
  406991:	cmp    r9,rsi
  406994:	je     406910 <__gcov_sort_n_vals@@Base+0x3b0>
  40699a:	add    rsi,0x8
  40699e:	mov    rax,QWORD PTR [rax]
  4069a1:	test   rax,rax
  4069a4:	jne    406948 <__gcov_sort_n_vals@@Base+0x3e8>
  4069a6:	mov    edx,eax
  4069a8:	jmp    406975 <__gcov_sort_n_vals@@Base+0x415>
  4069aa:	nop    WORD PTR [rax+rax*1+0x0]
  4069b0:	mov    r8,QWORD PTR [r8+0x8]
  4069b4:	test   r8,r8
  4069b7:	jne    4068e0 <__gcov_sort_n_vals@@Base+0x380>
  4069bd:	lea    rdi,[rip+0x1ff6]        # 4089ba <_IO_stdin_used@@Base+0x9ba>
  4069c4:	call   402240 <getenv@plt>
  4069c9:	test   rax,rax
  4069cc:	je     407578 <__gcov_sort_n_vals@@Base+0x1018>
  4069d2:	xor    esi,esi
  4069d4:	mov    edx,0xa
  4069d9:	mov    rdi,rax
  4069dc:	call   402380 <strtol@plt>
  4069e1:	mov    edx,0x0
  4069e6:	lea    rdi,[rip+0x1fdf]        # 4089cc <_IO_stdin_used@@Base+0x9cc>
  4069ed:	test   eax,eax
  4069ef:	cmovns edx,eax
  4069f2:	mov    DWORD PTR [rsp+0x38],edx
  4069f6:	call   402240 <getenv@plt>
  4069fb:	mov    rbx,rax
  4069fe:	test   rax,rax
  406a01:	je     4075c0 <__gcov_sort_n_vals@@Base+0x1060>
  406a07:	mov    rdi,rax
  406a0a:	call   402300 <strlen@plt>
  406a0f:	test   rax,rax
  406a12:	je     4075c0 <__gcov_sort_n_vals@@Base+0x1060>
  406a18:	lea    rsi,[rax-0x1]
  406a1c:	cmp    BYTE PTR [rbx+rax*1-0x1],0x2f
  406a21:	mov    QWORD PTR [rsp+0x30],rsi
  406a26:	je     4075b5 <__gcov_sort_n_vals@@Base+0x1055>
  406a2c:	mov    QWORD PTR [rsp+0x30],rax
  406a31:	mov    r14,QWORD PTR [rsp+0x30]
  406a36:	lea    rdi,[rbp+r14*1+0x0]
  406a3b:	call   4023a0 <malloc@plt>
  406a40:	mov    rdx,r14
  406a43:	mov    rsi,rbx
  406a46:	mov    rdi,rax
  406a49:	mov    QWORD PTR [rsp+0x10],rax
  406a4e:	call   402390 <memcpy@plt>
  406a53:	test   r13,r13
  406a56:	je     406be0 <__gcov_sort_n_vals@@Base+0x680>
  406a5c:	nop    DWORD PTR [rax+0x0]
  406a60:	mov    QWORD PTR [rip+0x7ca5],0x0        # 40e710 <__gcov_error_file@@Base+0x10>
  406a6b:	cmp    QWORD PTR [r13+0x60],0x0
  406a70:	mov    QWORD PTR [rip+0x7c8d],0x0        # 40e708 <__gcov_error_file@@Base+0x8>
  406a7b:	je     406ac8 <__gcov_sort_n_vals@@Base+0x568>
  406a7d:	mov    r11d,DWORD PTR [r13+0x68]
  406a81:	test   r11d,r11d
  406a84:	je     406ac8 <__gcov_sort_n_vals@@Base+0x568>
  406a86:	xor    r15d,r15d
  406a89:	mov    ebx,0x38e38e39
  406a8e:	xchg   ax,ax
  406a90:	mov    rax,QWORD PTR [r13+0x70]
  406a94:	mov    rcx,QWORD PTR [rax+r15*8]
  406a98:	xor    eax,eax
  406a9a:	add    rcx,0x18
  406a9e:	cmp    QWORD PTR [r13+rax*8+0x20],0x0
  406aa4:	je     406ab4 <__gcov_sort_n_vals@@Base+0x554>
  406aa6:	cmp    rax,0x8
  406aaa:	je     406c10 <__gcov_sort_n_vals@@Base+0x6b0>
  406ab0:	add    rcx,0x10
  406ab4:	add    rax,0x1
  406ab8:	cmp    rax,0x9
  406abc:	jne    406a9e <__gcov_sort_n_vals@@Base+0x53e>
  406abe:	add    r15,0x1
  406ac2:	cmp    DWORD PTR [r13+0x68],r15d
  406ac6:	jne    406a90 <__gcov_sort_n_vals@@Base+0x530>
  406ac8:	mov    ebx,DWORD PTR [rsp+0x38]
  406acc:	mov    rdi,QWORD PTR [rsp+0x10]
  406ad1:	mov    rsi,QWORD PTR [r13+0x18]
  406ad5:	add    rdi,QWORD PTR [rsp+0x30]
  406ada:	test   ebx,ebx
  406adc:	je     406b19 <__gcov_sort_n_vals@@Base+0x5b9>
  406ade:	movzx  eax,BYTE PTR [rsi]
  406ae1:	mov    rdx,rsi
  406ae4:	cmp    al,0x2f
  406ae6:	jne    406af0 <__gcov_sort_n_vals@@Base+0x590>
  406ae8:	movzx  eax,BYTE PTR [rsi+0x1]
  406aec:	lea    rdx,[rsi+0x1]
  406af0:	mov    ecx,DWORD PTR [rsp+0x38]
  406af4:	jmp    406b15 <__gcov_sort_n_vals@@Base+0x5b5>
  406af6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  406b00:	cmp    al,0x2f
  406b02:	jne    406b0a <__gcov_sort_n_vals@@Base+0x5aa>
  406b04:	sub    ecx,0x1
  406b07:	mov    rsi,rdx
  406b0a:	add    rdx,0x1
  406b0e:	movzx  eax,BYTE PTR [rdx]
  406b11:	test   ecx,ecx
  406b13:	je     406b19 <__gcov_sort_n_vals@@Base+0x5b9>
  406b15:	test   al,al
  406b17:	jne    406b00 <__gcov_sort_n_vals@@Base+0x5a0>
  406b19:	cmp    QWORD PTR [rsp+0x30],0x0
  406b1f:	je     406b2d <__gcov_sort_n_vals@@Base+0x5cd>
  406b21:	cmp    BYTE PTR [rsi],0x2f
  406b24:	je     406b2d <__gcov_sort_n_vals@@Base+0x5cd>
  406b26:	mov    BYTE PTR [rdi],0x2f
  406b29:	add    rdi,0x1
  406b2d:	call   402290 <strcpy@plt>
  406b32:	mov    rdi,QWORD PTR [rsp+0x10]
  406b37:	call   405ed0 <build_ast@@Base+0x3a0>
  406b3c:	test   eax,eax
  406b3e:	je     407290 <__gcov_sort_n_vals@@Base+0xd30>
  406b44:	mov    edi,0x1
  406b49:	call   405c40 <build_ast@@Base+0x110>
  406b4e:	test   rax,rax
  406b51:	je     406c78 <__gcov_sort_n_vals@@Base+0x718>
  406b57:	mov    eax,DWORD PTR [rax]
  406b59:	test   eax,eax
  406b5b:	je     406c78 <__gcov_sort_n_vals@@Base+0x718>
  406b61:	cmp    eax,0x67636461
  406b66:	je     4073f0 <__gcov_sort_n_vals@@Base+0xe90>
  406b6c:	mov    rsi,QWORD PTR [rsp+0x10]
  406b71:	lea    rdi,[rip+0x1fb8]        # 408b30 <_IO_stdin_used@@Base+0xb30>
  406b78:	xor    eax,eax
  406b7a:	call   405ce0 <build_ast@@Base+0x1b0>
  406b7f:	mov    rax,QWORD PTR [rip+0x7b8a]        # 40e710 <__gcov_error_file@@Base+0x10>
  406b86:	test   rax,rax
  406b89:	je     406bac <__gcov_sort_n_vals@@Base+0x64c>
  406b8b:	nop    DWORD PTR [rax+rax*1+0x0]
  406b90:	mov    edx,0x9
  406b95:	mov    rsi,rax
  406b98:	mov    rdi,r13
  406b9b:	call   405de0 <build_ast@@Base+0x2b0>
  406ba0:	mov    QWORD PTR [rip+0x7b69],rax        # 40e710 <__gcov_error_file@@Base+0x10>
  406ba7:	test   rax,rax
  406baa:	jne    406b90 <__gcov_sort_n_vals@@Base+0x630>
  406bac:	call   405fc0 <build_ast@@Base+0x490>
  406bb1:	test   eax,eax
  406bb3:	je     406bd3 <__gcov_sort_n_vals@@Base+0x673>
  406bb5:	lea    rax,[rip+0x1f2c]        # 408ae8 <_IO_stdin_used@@Base+0xae8>
  406bbc:	lea    rdi,[rip+0x1dd9]        # 40899c <_IO_stdin_used@@Base+0x99c>
  406bc3:	mov    rsi,QWORD PTR [rsp+0x10]
  406bc8:	cmovs  rdi,rax
  406bcc:	xor    eax,eax
  406bce:	call   405ce0 <build_ast@@Base+0x1b0>
  406bd3:	mov    r13,QWORD PTR [r13+0x8]
  406bd7:	test   r13,r13
  406bda:	jne    406a60 <__gcov_sort_n_vals@@Base+0x500>
  406be0:	mov    rdi,QWORD PTR [rsp+0x10]
  406be5:	add    rsp,0x47e8
  406bec:	pop    rbx
  406bed:	pop    rbp
  406bee:	pop    r12
  406bf0:	pop    r13
  406bf2:	pop    r14
  406bf4:	pop    r15
  406bf6:	jmp    402250 <free@plt>
  406bfb:	nop    DWORD PTR [rax+rax*1+0x0]
  406c00:	mov    r14d,0x1
  406c06:	jmp    40680c <__gcov_sort_n_vals@@Base+0x2ac>
  406c0b:	nop    DWORD PTR [rax+rax*1+0x0]
  406c10:	mov    r12d,DWORD PTR [rcx]
  406c13:	mov    eax,r12d
  406c16:	mov    ebp,r12d
  406c19:	imul   ebx
  406c1b:	mov    eax,r12d
  406c1e:	sar    eax,0x1f
  406c21:	sar    edx,1
  406c23:	sub    edx,eax
  406c25:	lea    eax,[rdx+rdx*8]
  406c28:	sub    ebp,eax
  406c2a:	jne    402450 <__fprintf_chk@plt+0x10>
  406c30:	mov    r14,QWORD PTR [rcx+0x8]
  406c34:	add    r14,0x8
  406c38:	test   r12d,r12d
  406c3b:	jle    406abe <__gcov_sort_n_vals@@Base+0x55e>
  406c41:	nop    DWORD PTR [rax+0x0]
  406c48:	mov    rdi,r14
  406c4b:	mov    esi,0x8
  406c50:	add    ebp,0x9
  406c53:	add    r14,0x48
  406c57:	call   406560 <__gcov_sort_n_vals@@Base>
  406c5c:	cmp    r12d,ebp
  406c5f:	jg     406c48 <__gcov_sort_n_vals@@Base+0x6e8>
  406c61:	add    r15,0x1
  406c65:	cmp    DWORD PTR [r13+0x68],r15d
  406c69:	jne    406a90 <__gcov_sort_n_vals@@Base+0x530>
  406c6f:	jmp    406ac8 <__gcov_sort_n_vals@@Base+0x568>
  406c74:	nop    DWORD PTR [rax+0x0]
  406c78:	mov    r15,0x40ee20
  406c7f:	xor    edx,edx
  406c81:	xor    esi,esi
  406c83:	mov    QWORD PTR [r15+0x8],0x0
  406c8b:	mov    rdi,QWORD PTR [r15]
  406c8e:	mov    DWORD PTR [r15+0x1c],0xffffffff
  406c96:	lea    r15,[rsp+0x1840]
  406c9e:	call   4023c0 <fseek@plt>
  406ca3:	xor    eax,eax
  406ca5:	mov    ecx,0x2f9
  406caa:	mov    rdi,r15
  406cad:	rep stos QWORD PTR es:[rdi],rax
  406cb0:	cmp    QWORD PTR [r13+0x20],0x0
  406cb5:	je     407531 <__gcov_sort_n_vals@@Base+0xfd1>
  406cbb:	mov    DWORD PTR [rsp+0x44],0x0
  406cc3:	mov    DWORD PTR [rsp+0x40],0x0
  406ccb:	mov    eax,DWORD PTR [rsp+0x3c]
  406ccf:	xor    esi,esi
  406cd1:	test   eax,eax
  406cd3:	je     406f4b <__gcov_sort_n_vals@@Base+0x9eb>
  406cd9:	mov    rax,QWORD PTR [rsp+0x88]
  406ce1:	mov    rcx,QWORD PTR [rsp+0x1860]
  406ce9:	mov    rdi,QWORD PTR [rsp+0x1858]
  406cf1:	mov    rdx,QWORD PTR [rsp+0x80]
  406cf9:	add    rcx,rax
  406cfc:	add    rdx,QWORD PTR [rsp+0x1850]
  406d04:	nop    DWORD PTR [rax+0x0]
  406d08:	mov    esi,DWORD PTR [rsp+0x78]
  406d0c:	mov    QWORD PTR [rsp+0x1850],rdx
  406d14:	mov    DWORD PTR [rsp+0x1848],esi
  406d1b:	cmp    rax,rdi
  406d1e:	jle    406d28 <__gcov_sort_n_vals@@Base+0x7c8>
  406d20:	mov    QWORD PTR [rsp+0x1858],rax
  406d28:	mov    rbx,QWORD PTR [rsp+0x8]
  406d2d:	lea    rax,[r15+0x28]
  406d31:	mov    QWORD PTR [rsp+0x1860],rcx
  406d39:	mov    ecx,0x2f4
  406d3e:	mov    rdi,rax
  406d41:	lea    rsi,[rbx+0x28]
  406d45:	rep movs QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
  406d48:	mov    eax,DWORD PTR [rsp+0x48]
  406d4c:	cmp    DWORD PTR [rsp+0x44],0x0
  406d51:	mov    DWORD PTR [rsp+0x1840],eax
  406d58:	je     407548 <__gcov_sort_n_vals@@Base+0xfe8>
  406d5e:	xchg   ax,ax
  406d60:	mov    edi,DWORD PTR [rsp+0x40]
  406d64:	test   edi,edi
  406d66:	jne    407523 <__gcov_sort_n_vals@@Base+0xfc3>
  406d6c:	mov    rsi,r15
  406d6f:	mov    edi,0xa3000000
  406d74:	mov    ebx,0xa3000000
  406d79:	call   406090 <build_ast@@Base+0x560>
  406d7e:	mov    rbp,QWORD PTR [rip+0x7983]        # 40e708 <__gcov_error_file@@Base+0x8>
  406d85:	test   rbp,rbp
  406d88:	je     406db6 <__gcov_sort_n_vals@@Base+0x856>
  406d8a:	nop    WORD PTR [rax+rax*1+0x0]
  406d90:	lea    rsi,[rbp+0x8]
  406d94:	mov    edi,ebx
  406d96:	call   406090 <build_ast@@Base+0x560>
  406d9b:	mov    rdi,QWORD PTR [rip+0x7966]        # 40e708 <__gcov_error_file@@Base+0x8>
  406da2:	mov    rbp,QWORD PTR [rdi]
  406da5:	call   402250 <free@plt>
  406daa:	mov    QWORD PTR [rip+0x7957],rbp        # 40e708 <__gcov_error_file@@Base+0x8>
  406db1:	test   rbp,rbp
  406db4:	jne    406d90 <__gcov_sort_n_vals@@Base+0x830>
  406db6:	mov    esi,DWORD PTR [r13+0x68]
  406dba:	xor    ebx,ebx
  406dbc:	test   esi,esi
  406dbe:	jne    406dff <__gcov_sort_n_vals@@Base+0x89f>
  406dc0:	jmp    4073b0 <__gcov_sort_n_vals@@Base+0xe50>
  406dc5:	nop    DWORD PTR [rax]
  406dc8:	mov    rdx,QWORD PTR [r13+0x70]
  406dcc:	mov    eax,ebx
  406dce:	mov    edi,0x2
  406dd3:	mov    rbp,QWORD PTR [rdx+rax*8]
  406dd7:	test   rbp,rbp
  406dda:	je     406de6 <__gcov_sort_n_vals@@Base+0x886>
  406ddc:	cmp    QWORD PTR [rbp+0x0],r13
  406de0:	je     4073c8 <__gcov_sort_n_vals@@Base+0xe68>
  406de6:	call   405bf0 <build_ast@@Base+0xc0>
  406deb:	mov    QWORD PTR [rax],0x1000000
  406df2:	add    ebx,0x1
  406df5:	cmp    ebx,DWORD PTR [r13+0x68]
  406df9:	je     4073b0 <__gcov_sort_n_vals@@Base+0xe50>
  406dff:	mov    rbp,QWORD PTR [rip+0x790a]        # 40e710 <__gcov_error_file@@Base+0x10>
  406e06:	test   rbp,rbp
  406e09:	je     406dc8 <__gcov_sort_n_vals@@Base+0x868>
  406e0b:	cmp    DWORD PTR [rbp+0x8],ebx
  406e0e:	jne    406dc8 <__gcov_sort_n_vals@@Base+0x868>
  406e10:	mov    edi,0x2
  406e15:	add    rbp,0x10
  406e19:	call   405bf0 <build_ast@@Base+0xc0>
  406e1e:	mov    DWORD PTR [rsp+0x18],0x1
  406e26:	movabs rsi,0x301000000
  406e30:	mov    QWORD PTR [rax],rsi
  406e33:	mov    r12d,DWORD PTR [rbp+0x8]
  406e37:	mov    edi,0x1
  406e3c:	mov    r14d,0x1a10000
  406e42:	add    rbp,0x18
  406e46:	call   405bf0 <build_ast@@Base+0xc0>
  406e4b:	mov    edi,0x1
  406e50:	mov    DWORD PTR [rax],r12d
  406e53:	mov    r12d,DWORD PTR [rbp-0xc]
  406e57:	call   405bf0 <build_ast@@Base+0xc0>
  406e5c:	mov    edi,0x1
  406e61:	mov    DWORD PTR [rax],r12d
  406e64:	mov    r12d,DWORD PTR [rbp-0x8]
  406e68:	call   405bf0 <build_ast@@Base+0xc0>
  406e6d:	mov    DWORD PTR [rsp+0x20],ebx
  406e71:	mov    ebx,r14d
  406e74:	mov    DWORD PTR [rax],r12d
  406e77:	lea    r12,[r13+0x20]
  406e7b:	mov    QWORD PTR [rsp+0x28],r13
  406e80:	jmp    406e9e <__gcov_sort_n_vals@@Base+0x93e>
  406e82:	nop    WORD PTR [rax+rax*1+0x0]
  406e88:	add    ebx,0x20000
  406e8e:	add    r12,0x8
  406e92:	cmp    ebx,0x1b30000
  406e98:	je     407370 <__gcov_sort_n_vals@@Base+0xe10>
  406e9e:	cmp    QWORD PTR [r12],0x0
  406ea3:	je     406e88 <__gcov_sort_n_vals@@Base+0x928>
  406ea5:	mov    r13d,DWORD PTR [rbp+0x0]
  406ea9:	mov    edi,0x2
  406eae:	call   405bf0 <build_ast@@Base+0xc0>
  406eb3:	mov    r15,QWORD PTR [rbp+0x8]
  406eb7:	lea    esi,[r13+r13*1+0x0]
  406ebc:	mov    DWORD PTR [rax],ebx
  406ebe:	mov    DWORD PTR [rax+0x4],esi
  406ec1:	lea    eax,[r13-0x1]
  406ec5:	lea    r14,[r15+rax*8+0x8]
  406eca:	test   r13d,r13d
  406ecd:	je     406eea <__gcov_sort_n_vals@@Base+0x98a>
  406ecf:	nop
  406ed0:	add    r15,0x8
  406ed4:	mov    r13,QWORD PTR [r15-0x8]
  406ed8:	mov    edi,0x2
  406edd:	call   405bf0 <build_ast@@Base+0xc0>
  406ee2:	mov    QWORD PTR [rax],r13
  406ee5:	cmp    r15,r14
  406ee8:	jne    406ed0 <__gcov_sort_n_vals@@Base+0x970>
  406eea:	add    rbp,0x10
  406eee:	jmp    406e88 <__gcov_sort_n_vals@@Base+0x928>
  406ef0:	mov    r15,QWORD PTR [rsp+0x68]
  406ef5:	test   eax,eax
  406ef7:	jne    407948 <__gcov_sort_n_vals@@Base+0x13e8>
  406efd:	mov    QWORD PTR [r15+0x8],0x0
  406f05:	mov    rdi,QWORD PTR [r15]
  406f08:	xor    edx,edx
  406f0a:	xor    esi,esi
  406f0c:	mov    DWORD PTR [r15+0x1c],0xffffffff
  406f14:	call   4023c0 <fseek@plt>
  406f19:	mov    r9d,DWORD PTR [rsp+0x40]
  406f1e:	test   r9d,r9d
  406f21:	je     407b67 <__gcov_sort_n_vals@@Base+0x1607>
  406f27:	cmp    QWORD PTR [r13+0x20],0x0
  406f2c:	mov    esi,DWORD PTR [rsp+0x184c]
  406f33:	je     407500 <__gcov_sort_n_vals@@Base+0xfa0>
  406f39:	mov    r8d,DWORD PTR [rsp+0x3c]
  406f3e:	lea    r15,[rsp+0x1840]
  406f46:	test   r8d,r8d
  406f49:	jne    406f55 <__gcov_sort_n_vals@@Base+0x9f5>
  406f4b:	lea    eax,[rsi+0x1]
  406f4e:	mov    DWORD PTR [rsp+0x184c],eax
  406f55:	mov    rax,QWORD PTR [rsp+0x88]
  406f5d:	mov    rcx,QWORD PTR [rsp+0x1860]
  406f65:	mov    rdx,QWORD PTR [rsp+0x80]
  406f6d:	mov    rdi,QWORD PTR [rsp+0x1858]
  406f75:	add    rdx,QWORD PTR [rsp+0x1850]
  406f7d:	add    rcx,rax
  406f80:	test   esi,esi
  406f82:	je     406d08 <__gcov_sort_n_vals@@Base+0x7a8>
  406f88:	mov    QWORD PTR [rsp+0x1850],rdx
  406f90:	cmp    rax,rdi
  406f93:	jle    406f9d <__gcov_sort_n_vals@@Base+0xa3d>
  406f95:	mov    QWORD PTR [rsp+0x1858],rax
  406f9d:	lea    rdi,[rsp+0x3010]
  406fa5:	xor    eax,eax
  406fa7:	xor    r10d,r10d
  406faa:	xor    esi,esi
  406fac:	mov    QWORD PTR [rsp+0x1860],rcx
  406fb4:	mov    ecx,0x2f4
  406fb9:	lea    rbx,[r15+0x17b0]
  406fc0:	xor    edx,edx
  406fc2:	mov    QWORD PTR [rsp+0x18],rdi
  406fc7:	mov    r8d,0xfb
  406fcd:	rep stos QWORD PTR es:[rdi],rax
  406fd0:	mov    rax,QWORD PTR [rsp+0x8]
  406fd5:	mov    edi,0xfb
  406fda:	add    rax,0x28
  406fde:	mov    QWORD PTR [rsp+0x20],rax
  406fe3:	nop    DWORD PTR [rax+rax*1+0x0]
  406fe8:	mov    r9d,DWORD PTR [rbx]
  406feb:	mov    rcx,QWORD PTR [rbx+0x10]
  406fef:	test   r9d,r9d
  406ff2:	je     40712d <__gcov_sort_n_vals@@Base+0xbcd>
  406ff8:	mov    rbp,QWORD PTR [rbx+0x8]
  406ffc:	mov    QWORD PTR [rsp+0x28],rbx
  407001:	jmp    4070c3 <__gcov_sort_n_vals@@Base+0xb63>
  407006:	nop    WORD PTR cs:[rax+rax*1+0x0]
  407010:	jbe    407b5f <__gcov_sort_n_vals@@Base+0x15ff>
  407016:	mov    eax,r9d
  407019:	mov    r12d,esi
  40701c:	imul   rax,r10
  407020:	cqo    
  407022:	idiv   r12
  407025:	mov    r11,rax
  407028:	sub    esi,r9d
  40702b:	mov    r14d,r9d
  40702e:	sub    r10,r11
  407031:	xor    r9d,r9d
  407034:	xor    r12d,r12d
  407037:	lea    rax,[r11+rcx*1]
  40703b:	test   rbx,rbx
  40703e:	je     40711d <__gcov_sort_n_vals@@Base+0xbbd>
  407044:	bsr    rdx,rbx
  407048:	mov    ecx,0x3f
  40704d:	xor    rdx,0x3f
  407051:	sub    ecx,edx
  407053:	cmp    ecx,0x1
  407056:	jbe    40711d <__gcov_sort_n_vals@@Base+0xbbd>
  40705c:	mov    ecx,0x3d
  407061:	mov    r11,rbx
  407064:	sub    ecx,edx
  407066:	shr    r11,cl
  407069:	mov    rcx,r11
  40706c:	mov    r11d,0x4000003e
  407072:	and    ecx,0x3
  407075:	sub    r11d,edx
  407078:	lea    edx,[rcx+r11*4]
  40707c:	movsxd rcx,edx
  40707f:	lea    r11,[rcx+rcx*2]
  407083:	shl    r11,0x3
  407087:	add    QWORD PTR [rsp+r11*1+0x3020],rax
  40708f:	mov    rax,QWORD PTR [rsp+r11*1+0x3018]
  407097:	add    DWORD PTR [rsp+r11*1+0x3010],r14d
  40709f:	cmp    rax,rbx
  4070a2:	jg     4070a9 <__gcov_sort_n_vals@@Base+0xb49>
  4070a4:	test   rax,rax
  4070a7:	jne    4070b5 <__gcov_sort_n_vals@@Base+0xb55>
  4070a9:	lea    rax,[rcx+rcx*2]
  4070ad:	mov    QWORD PTR [rsp+rax*8+0x3018],rbx
  4070b5:	cmp    esi,0x1
  4070b8:	mov    rcx,r12
  4070bb:	sbb    edi,0x0
  4070be:	test   r9d,r9d
  4070c1:	je     407128 <__gcov_sort_n_vals@@Base+0xbc8>
  4070c3:	test   esi,esi
  4070c5:	je     4071a0 <__gcov_sort_n_vals@@Base+0xc40>
  4070cb:	movsxd rax,edi
  4070ce:	mov    rbx,QWORD PTR [rsp+0x20]
  4070d3:	lea    rax,[rax+rax*2]
  4070d7:	lea    rax,[rbx+rax*8]
  4070db:	mov    rbx,QWORD PTR [rax+0x8]
  4070df:	add    rbx,rbp
  4070e2:	cmp    esi,r9d
  4070e5:	jae    407010 <__gcov_sort_n_vals@@Base+0xab0>
  4070eb:	mov    eax,esi
  4070ed:	mov    r11d,r9d
  4070f0:	mov    r14d,esi
  4070f3:	sub    r9d,esi
  4070f6:	imul   rax,rcx
  4070fa:	xor    esi,esi
  4070fc:	cqo    
  4070fe:	idiv   r11
  407101:	mov    r11,r10
  407104:	xor    r10d,r10d
  407107:	sub    rcx,rax
  40710a:	mov    r12,rcx
  40710d:	mov    rcx,rax
  407110:	lea    rax,[r11+rcx*1]
  407114:	test   rbx,rbx
  407117:	jne    407044 <__gcov_sort_n_vals@@Base+0xae4>
  40711d:	mov    edx,ebx
  40711f:	jmp    40707c <__gcov_sort_n_vals@@Base+0xb1c>
  407124:	nop    DWORD PTR [rax+0x0]
  407128:	mov    rbx,QWORD PTR [rsp+0x28]
  40712d:	sub    r8d,0x1
  407131:	sub    rbx,0x18
  407135:	cmp    r8d,0xffffffff
  407139:	jne    406fe8 <__gcov_sort_n_vals@@Base+0xa88>
  40713f:	cmp    esi,0x1
  407142:	adc    edi,0xffffffff
  407145:	test   edi,edi
  407147:	js     40716d <__gcov_sort_n_vals@@Base+0xc0d>
  407149:	movsxd rdi,edi
  40714c:	mov    rbx,QWORD PTR [rsp+0x8]
  407151:	lea    rcx,[rsp+0x58]
  407156:	lea    rax,[rdi+rdi*2]
  40715a:	lea    rax,[rbx+rax*8]
  40715e:	xchg   ax,ax
  407160:	add    r10,QWORD PTR [rax+0x38]
  407164:	sub    rax,0x18
  407168:	cmp    rcx,rax
  40716b:	jne    407160 <__gcov_sort_n_vals@@Base+0xc00>
  40716d:	movsxd rdx,edx
  407170:	mov    ecx,0x2f4
  407175:	mov    rsi,QWORD PTR [rsp+0x18]
  40717a:	lea    rdi,[rsp+0x1868]
  407182:	lea    rax,[rdx+rdx*2]
  407186:	add    QWORD PTR [rsp+rax*8+0x3020],r10
  40718e:	rep movs QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
  407191:	jmp    406d48 <__gcov_sort_n_vals@@Base+0x7e8>
  407196:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4071a0:	test   edi,edi
  4071a2:	js     4071eb <__gcov_sort_n_vals@@Base+0xc8b>
  4071a4:	movsxd rax,edi
  4071a7:	lea    r11,[rax+rax*2]
  4071ab:	mov    rax,QWORD PTR [rsp+0x20]
  4071b0:	shl    r11,0x3
  4071b4:	add    rax,r11
  4071b7:	mov    esi,DWORD PTR [rax]
  4071b9:	test   esi,esi
  4071bb:	jne    407280 <__gcov_sort_n_vals@@Base+0xd20>
  4071c1:	mov    rax,QWORD PTR [rsp+0x8]
  4071c6:	lea    r11,[rax+r11*1+0x10]
  4071cb:	jmp    4071e3 <__gcov_sort_n_vals@@Base+0xc83>
  4071cd:	nop    DWORD PTR [rax]
  4071d0:	mov    rax,r11
  4071d3:	sub    r11,0x18
  4071d7:	mov    esi,DWORD PTR [r11+0x18]
  4071db:	test   esi,esi
  4071dd:	jne    407280 <__gcov_sort_n_vals@@Base+0xd20>
  4071e3:	sub    edi,0x1
  4071e6:	cmp    edi,0xffffffff
  4071e9:	jne    4071d0 <__gcov_sort_n_vals@@Base+0xc70>
  4071eb:	movsxd r8,r8d
  4071ee:	lea    rax,[r8+r8*2]
  4071f2:	shl    rax,0x3
  4071f6:	add    DWORD PTR [rsp+rax*1+0x3010],r9d
  4071fe:	add    QWORD PTR [rsp+rax*1+0x3020],rcx
  407206:	mov    rax,QWORD PTR [rsp+rax*1+0x3018]
  40720e:	test   rax,rax
  407211:	je     407218 <__gcov_sort_n_vals@@Base+0xcb8>
  407213:	cmp    rbp,rax
  407216:	jge    407224 <__gcov_sort_n_vals@@Base+0xcc4>
  407218:	lea    rax,[r8+r8*2]
  40721c:	mov    QWORD PTR [rsp+rax*8+0x3018],rbp
  407224:	lea    rax,[r8+r8*2]
  407228:	mov    rbx,QWORD PTR [rsp+0x18]
  40722d:	shl    rax,0x3
  407231:	lea    rcx,[rbx+rax*1]
  407235:	lea    rsi,[r15+rax*1]
  407239:	mov    r8,rcx
  40723c:	sub    r8,rax
  40723f:	jmp    407274 <__gcov_sort_n_vals@@Base+0xd14>
  407241:	nop    DWORD PTR [rax+0x0]
  407248:	mov    rdi,QWORD PTR [rcx-0x10]
  40724c:	mov    eax,DWORD PTR [rsi+0x10]
  40724f:	add    DWORD PTR [rcx-0x18],eax
  407252:	mov    rax,QWORD PTR [rsi+0x20]
  407256:	add    QWORD PTR [rcx-0x8],rax
  40725a:	mov    rax,QWORD PTR [rsi+0x18]
  40725e:	test   rdi,rdi
  407261:	je     407268 <__gcov_sort_n_vals@@Base+0xd08>
  407263:	cmp    rdi,rax
  407266:	jle    40726c <__gcov_sort_n_vals@@Base+0xd0c>
  407268:	mov    QWORD PTR [rcx-0x10],rax
  40726c:	sub    rcx,0x18
  407270:	sub    rsi,0x18
  407274:	cmp    r8,rcx
  407277:	jne    407248 <__gcov_sort_n_vals@@Base+0xce8>
  407279:	jmp    40716d <__gcov_sort_n_vals@@Base+0xc0d>
  40727e:	xchg   ax,ax
  407280:	mov    r10,QWORD PTR [rax+0x10]
  407284:	jmp    4070db <__gcov_sort_n_vals@@Base+0xb7b>
  407289:	nop    DWORD PTR [rax+0x0]
  407290:	mov    rbx,QWORD PTR [rsp+0x10]
  407295:	movzx  eax,BYTE PTR [rbx]
  407298:	cmp    al,0x2f
  40729a:	jne    4072a7 <__gcov_sort_n_vals@@Base+0xd47>
  40729c:	mov    rax,rbx
  40729f:	lea    rbx,[rbx+0x1]
  4072a3:	movzx  eax,BYTE PTR [rax+0x1]
  4072a7:	mov    rbp,QWORD PTR [rsp+0x10]
  4072ac:	test   al,al
  4072ae:	jne    4072c3 <__gcov_sort_n_vals@@Base+0xd63>
  4072b0:	jmp    4072f0 <__gcov_sort_n_vals@@Base+0xd90>
  4072b2:	nop    WORD PTR [rax+rax*1+0x0]
  4072b8:	add    rbx,0x1
  4072bc:	movzx  eax,BYTE PTR [rbx]
  4072bf:	test   al,al
  4072c1:	je     4072f0 <__gcov_sort_n_vals@@Base+0xd90>
  4072c3:	cmp    al,0x2f
  4072c5:	jne    4072b8 <__gcov_sort_n_vals@@Base+0xd58>
  4072c7:	mov    BYTE PTR [rbx],0x0
  4072ca:	xor    esi,esi
  4072cc:	mov    rdi,rbp
  4072cf:	call   402400 <access@plt>
  4072d4:	cmp    eax,0xffffffff
  4072d7:	je     407310 <__gcov_sort_n_vals@@Base+0xdb0>
  4072d9:	mov    BYTE PTR [rbx],0x2f
  4072dc:	add    rbx,0x1
  4072e0:	movzx  eax,BYTE PTR [rbx]
  4072e3:	test   al,al
  4072e5:	jne    4072c3 <__gcov_sort_n_vals@@Base+0xd63>
  4072e7:	nop    WORD PTR [rax+rax*1+0x0]
  4072f0:	mov    rdi,QWORD PTR [rsp+0x10]
  4072f5:	call   405ed0 <build_ast@@Base+0x3a0>
  4072fa:	test   eax,eax
  4072fc:	jne    406b44 <__gcov_sort_n_vals@@Base+0x5e4>
  407302:	mov    rcx,QWORD PTR [rsp+0x10]
  407307:	lea    rdx,[rip+0x16dd]        # 4089eb <_IO_stdin_used@@Base+0x9eb>
  40730e:	jmp    40734f <__gcov_sort_n_vals@@Base+0xdef>
  407310:	mov    esi,0x1ed
  407315:	mov    rdi,rbp
  407318:	call   4022a0 <mkdir@plt>
  40731d:	cmp    eax,0xffffffff
  407320:	jne    4072d9 <__gcov_sort_n_vals@@Base+0xd79>
  407322:	call   402280 <__errno_location@plt>
  407327:	cmp    DWORD PTR [rax],0x11
  40732a:	je     4072d9 <__gcov_sort_n_vals@@Base+0xd79>
  40732c:	mov    r14,QWORD PTR [rsp+0x10]
  407331:	lea    rdi,[rip+0x17d0]        # 408b08 <_IO_stdin_used@@Base+0xb08>
  407338:	xor    eax,eax
  40733a:	mov    rsi,r14
  40733d:	call   405ce0 <build_ast@@Base+0x1b0>
  407342:	mov    BYTE PTR [rbx],0x2f
  407345:	mov    rcx,r14
  407348:	lea    rdx,[rip+0x1689]        # 4089d8 <_IO_stdin_used@@Base+0x9d8>
  40734f:	mov    rax,QWORD PTR [rip+0x4ca2]        # 40bff8 <stderr@GLIBC_2.2.5>
  407356:	mov    esi,0x1
  40735b:	mov    rdi,QWORD PTR [rax]
  40735e:	xor    eax,eax
  407360:	call   402440 <__fprintf_chk@plt>
  407365:	jmp    406bd3 <__gcov_sort_n_vals@@Base+0x673>
  40736a:	nop    WORD PTR [rax+rax*1+0x0]
  407370:	mov    ecx,DWORD PTR [rsp+0x18]
  407374:	mov    ebx,DWORD PTR [rsp+0x20]
  407378:	mov    r13,QWORD PTR [rsp+0x28]
  40737d:	test   ecx,ecx
  40737f:	je     406df2 <__gcov_sort_n_vals@@Base+0x892>
  407385:	mov    rsi,QWORD PTR [rip+0x7384]        # 40e710 <__gcov_error_file@@Base+0x10>
  40738c:	mov    edx,0x9
  407391:	mov    rdi,r13
  407394:	add    ebx,0x1
  407397:	call   405de0 <build_ast@@Base+0x2b0>
  40739c:	mov    QWORD PTR [rip+0x736d],rax        # 40e710 <__gcov_error_file@@Base+0x10>
  4073a3:	cmp    ebx,DWORD PTR [r13+0x68]
  4073a7:	jne    406dff <__gcov_sort_n_vals@@Base+0x89f>
  4073ad:	nop    DWORD PTR [rax]
  4073b0:	mov    edi,0x1
  4073b5:	call   405bf0 <build_ast@@Base+0xc0>
  4073ba:	mov    DWORD PTR [rax],0x0
  4073c0:	jmp    406b7f <__gcov_sort_n_vals@@Base+0x61f>
  4073c5:	nop    DWORD PTR [rax]
  4073c8:	call   405bf0 <build_ast@@Base+0xc0>
  4073cd:	mov    DWORD PTR [rsp+0x18],0x0
  4073d5:	movabs rsi,0x301000000
  4073df:	mov    QWORD PTR [rax],rsi
  4073e2:	jmp    406e33 <__gcov_sort_n_vals@@Base+0x8d3>
  4073e7:	nop    WORD PTR [rax+rax*1+0x0]
  4073f0:	mov    edi,0x1
  4073f5:	call   405c40 <build_ast@@Base+0x110>
  4073fa:	test   rax,rax
  4073fd:	je     407a10 <__gcov_sort_n_vals@@Base+0x14b0>
  407403:	mov    esi,DWORD PTR [rax]
  407405:	cmp    esi,0x4138342a
  40740b:	je     407423 <__gcov_sort_n_vals@@Base+0xec3>
  40740d:	mov    rdx,QWORD PTR [rsp+0x10]
  407412:	lea    rdi,[r13+0x18]
  407416:	call   405e50 <build_ast@@Base+0x320>
  40741b:	test   eax,eax
  40741d:	je     406b7f <__gcov_sort_n_vals@@Base+0x61f>
  407423:	mov    edi,0x1
  407428:	call   405c40 <build_ast@@Base+0x110>
  40742d:	test   rax,rax
  407430:	je     407a20 <__gcov_sort_n_vals@@Base+0x14c0>
  407436:	mov    eax,DWORD PTR [rax]
  407438:	cmp    DWORD PTR [r13+0x10],eax
  40743c:	jne    406c78 <__gcov_sort_n_vals@@Base+0x718>
  407442:	mov    DWORD PTR [rsp+0x40],0x0
  40744a:	mov    r15,0x40ee20
  407451:	lea    rbp,[rip+0x72b0]        # 40e708 <__gcov_error_file@@Base+0x8>
  407458:	lea    rbx,[rsp+0x3010]
  407460:	lea    r12,[rsp+0x1840]
  407468:	mov    edi,0x1
  40746d:	mov    r14d,DWORD PTR [r15+0xc]
  407471:	add    r14d,DWORD PTR [r15+0x8]
  407475:	call   405c40 <build_ast@@Base+0x110>
  40747a:	test   rax,rax
  40747d:	je     4076a0 <__gcov_sort_n_vals@@Base+0x1140>
  407483:	mov    eax,DWORD PTR [rax]
  407485:	cmp    eax,0xa3000000
  40748a:	jne    407b40 <__gcov_sort_n_vals@@Base+0x15e0>
  407490:	mov    edi,0x1
  407495:	call   405c40 <build_ast@@Base+0x110>
  40749a:	mov    rdi,rbx
  40749d:	call   406270 <build_ast@@Base+0x740>
  4074a2:	cmp    QWORD PTR [r15],0x0
  4074a6:	je     407681 <__gcov_sort_n_vals@@Base+0x1121>
  4074ac:	mov    eax,DWORD PTR [r15+0x18]
  4074b0:	test   eax,eax
  4074b2:	jne    407679 <__gcov_sort_n_vals@@Base+0x1119>
  4074b8:	mov    r10d,DWORD PTR [rsp+0x40]
  4074bd:	test   r10d,r10d
  4074c0:	jne    407a30 <__gcov_sort_n_vals@@Base+0x14d0>
  4074c6:	mov    eax,DWORD PTR [rsp+0x48]
  4074ca:	cmp    eax,DWORD PTR [rsp+0x3010]
  4074d1:	jne    407468 <__gcov_sort_n_vals@@Base+0xf08>
  4074d3:	mov    eax,DWORD PTR [rsp+0x3018]
  4074da:	cmp    DWORD PTR [rsp+0x78],eax
  4074de:	jne    407468 <__gcov_sort_n_vals@@Base+0xf08>
  4074e0:	endbr64 
  4074e4:	mov    ecx,0x2f9
  4074e9:	mov    rdi,r12
  4074ec:	mov    rsi,rbx
  4074ef:	mov    DWORD PTR [rsp+0x40],r14d
  4074f4:	rep movs QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
  4074f7:	jmp    407468 <__gcov_sort_n_vals@@Base+0xf08>
  4074fc:	nop    DWORD PTR [rax+0x0]
  407500:	test   esi,esi
  407502:	jne    407b28 <__gcov_sort_n_vals@@Base+0x15c8>
  407508:	mov    eax,DWORD PTR [rsp+0x48]
  40750c:	mov    edx,DWORD PTR [rsp+0x44]
  407510:	lea    r15,[rsp+0x1840]
  407518:	mov    DWORD PTR [rsp+0x1840],eax
  40751f:	test   edx,edx
  407521:	je     407548 <__gcov_sort_n_vals@@Base+0xfe8>
  407523:	mov    edi,DWORD PTR [rsp+0x40]
  407527:	call   406510 <build_ast@@Base+0x9e0>
  40752c:	jmp    406d6c <__gcov_sort_n_vals@@Base+0x80c>
  407531:	mov    eax,DWORD PTR [rsp+0x48]
  407535:	mov    DWORD PTR [rsp+0x40],0x0
  40753d:	mov    DWORD PTR [rsp+0x1840],eax
  407544:	nop    DWORD PTR [rax+0x0]
  407548:	movabs rbx,0x4138342a67636461
  407552:	mov    edi,0x2
  407557:	call   405bf0 <build_ast@@Base+0xc0>
  40755c:	mov    edi,0x1
  407561:	mov    QWORD PTR [rax],rbx
  407564:	mov    ebx,DWORD PTR [r13+0x10]
  407568:	call   405bf0 <build_ast@@Base+0xc0>
  40756d:	mov    DWORD PTR [rax],ebx
  40756f:	jmp    406d60 <__gcov_sort_n_vals@@Base+0x800>
  407574:	nop    DWORD PTR [rax+0x0]
  407578:	lea    rdi,[rip+0x144d]        # 4089cc <_IO_stdin_used@@Base+0x9cc>
  40757f:	call   402240 <getenv@plt>
  407584:	mov    rbx,rax
  407587:	test   rax,rax
  40758a:	je     4075e0 <__gcov_sort_n_vals@@Base+0x1080>
  40758c:	mov    rdi,rax
  40758f:	call   402300 <strlen@plt>
  407594:	test   rax,rax
  407597:	je     4075e0 <__gcov_sort_n_vals@@Base+0x1080>
  407599:	lea    rsi,[rax-0x1]
  40759d:	cmp    BYTE PTR [rbx+rax*1-0x1],0x2f
  4075a2:	mov    DWORD PTR [rsp+0x38],0x0
  4075aa:	mov    QWORD PTR [rsp+0x30],rsi
  4075af:	jne    406a2c <__gcov_sort_n_vals@@Base+0x4cc>
  4075b5:	test   rsi,rsi
  4075b8:	jne    406a31 <__gcov_sort_n_vals@@Base+0x4d1>
  4075be:	xchg   ax,ax
  4075c0:	mov    r12d,DWORD PTR [rsp+0x38]
  4075c5:	lea    rbx,[rip+0x13ec]        # 4089b8 <_IO_stdin_used@@Base+0x9b8>
  4075cc:	mov    QWORD PTR [rsp+0x30],0x1
  4075d5:	test   r12d,r12d
  4075d8:	jne    406a31 <__gcov_sort_n_vals@@Base+0x4d1>
  4075de:	xchg   ax,ax
  4075e0:	mov    rdi,rbp
  4075e3:	call   4023a0 <malloc@plt>
  4075e8:	mov    DWORD PTR [rsp+0x38],0x0
  4075f0:	mov    QWORD PTR [rsp+0x10],rax
  4075f5:	mov    QWORD PTR [rsp+0x30],0x0
  4075fe:	jmp    406a53 <__gcov_sort_n_vals@@Base+0x4f3>
  407603:	mov    edi,0x1
  407608:	call   405c40 <build_ast@@Base+0x110>
  40760d:	test   rax,rax
  407610:	je     407948 <__gcov_sort_n_vals@@Base+0x13e8>
  407616:	xor    r15d,r15d
  407619:	nop    DWORD PTR [rax+0x0]
  407620:	mov    ecx,DWORD PTR [rax]
  407622:	cmp    ebp,r15d
  407625:	jne    407948 <__gcov_sort_n_vals@@Base+0x13e8>
  40762b:	mov    esi,DWORD PTR [rbx]
  40762d:	lea    eax,[rsi+rsi*1]
  407630:	cmp    eax,ecx
  407632:	jne    407948 <__gcov_sort_n_vals@@Base+0x13e8>
  407638:	mov    rdi,QWORD PTR [rbx+0x8]
  40763c:	add    rbx,0x10
  407640:	call   r14
  407643:	add    ebp,0x20000
  407649:	add    r12,0x8
  40764d:	cmp    ebp,0x1b30000
  407653:	jne    407ae8 <__gcov_sort_n_vals@@Base+0x1588>
  407659:	mov    rax,QWORD PTR [rsp+0x68]
  40765e:	mov    r15,QWORD PTR [rsp+0x18]
  407663:	cmp    QWORD PTR [rax],0x0
  407667:	je     407681 <__gcov_sort_n_vals@@Base+0x1121>
  407669:	mov    rax,QWORD PTR [rsp+0x68]
  40766e:	mov    eax,DWORD PTR [rax+0x18]
  407671:	test   eax,eax
  407673:	je     4078d9 <__gcov_sort_n_vals@@Base+0x1379>
  407679:	test   eax,eax
  40767b:	js     407a00 <__gcov_sort_n_vals@@Base+0x14a0>
  407681:	lea    rdx,[rip+0x1305]        # 40898d <_IO_stdin_used@@Base+0x98d>
  407688:	mov    rsi,QWORD PTR [rsp+0x10]
  40768d:	lea    rdi,[rip+0x137a]        # 408a0e <_IO_stdin_used@@Base+0xa0e>
  407694:	xor    eax,eax
  407696:	call   405ce0 <build_ast@@Base+0x1b0>
  40769b:	jmp    406b7f <__gcov_sort_n_vals@@Base+0x61f>
  4076a0:	mov    DWORD PTR [rsp+0x44],r14d
  4076a5:	xor    eax,eax
  4076a7:	lea    rbx,[rip+0x7062]        # 40e710 <__gcov_error_file@@Base+0x10>
  4076ae:	xor    r14d,r14d
  4076b1:	mov    QWORD PTR [rsp+0x68],r15
  4076b6:	mov    QWORD PTR [rsp+0x58],rbx
  4076bb:	lea    rbx,[r13+0x18]
  4076bf:	mov    r15,r14
  4076c2:	mov    QWORD PTR [rsp+0x60],rbx
  4076c7:	nop    WORD PTR [rax+rax*1+0x0]
  4076d0:	mov    DWORD PTR [rsp+0x20],r15d
  4076d5:	mov    DWORD PTR [rsp+0x4c],r15d
  4076da:	cmp    DWORD PTR [r13+0x68],r15d
  4076de:	je     406ef0 <__gcov_sort_n_vals@@Base+0x990>
  4076e4:	mov    rdx,QWORD PTR [r13+0x70]
  4076e8:	mov    rbx,QWORD PTR [rdx+r15*8]
  4076ec:	cmp    eax,0x1000000
  4076f1:	jne    407948 <__gcov_sort_n_vals@@Base+0x13e8>
  4076f7:	mov    edi,0x1
  4076fc:	call   405c40 <build_ast@@Base+0x110>
  407701:	test   rax,rax
  407704:	je     4078d9 <__gcov_sort_n_vals@@Base+0x1379>
  40770a:	mov    eax,DWORD PTR [rax]
  40770c:	test   eax,eax
  40770e:	je     4078d9 <__gcov_sort_n_vals@@Base+0x1379>
  407714:	cmp    eax,0x3
  407717:	jne    407948 <__gcov_sort_n_vals@@Base+0x13e8>
  40771d:	test   rbx,rbx
  407720:	je     40772b <__gcov_sort_n_vals@@Base+0x11cb>
  407722:	cmp    QWORD PTR [rbx],r13
  407725:	je     407a78 <__gcov_sort_n_vals@@Base+0x1518>
  40772b:	mov    rdx,QWORD PTR [rsp+0x60]
  407730:	lea    rax,[r13+0x60]
  407734:	xor    ebp,ebp
  407736:	nop    WORD PTR cs:[rax+rax*1+0x0]
  407740:	cmp    QWORD PTR [rax],0x1
  407744:	sbb    ebp,0xffffffff
  407747:	sub    rax,0x8
  40774b:	cmp    rdx,rax
  40774e:	jne    407740 <__gcov_sort_n_vals@@Base+0x11e0>
  407750:	shl    ebp,0x4
  407753:	lea    edi,[rbp+0x38]
  407756:	mov    rbp,rdi
  407759:	call   4023a0 <malloc@plt>
  40775e:	mov    r12,rax
  407761:	test   rax,rax
  407764:	je     4079b0 <__gcov_sort_n_vals@@Base+0x1450>
  40776a:	mov    QWORD PTR [rax],0x0
  407771:	mov    eax,DWORD PTR [rsp+0x20]
  407775:	mov    edi,0x1
  40777a:	mov    DWORD PTR [r12+0x8],eax
  40777f:	call   405c40 <build_ast@@Base+0x110>
  407784:	test   rax,rax
  407787:	je     4079e0 <__gcov_sort_n_vals@@Base+0x1480>
  40778d:	mov    eax,DWORD PTR [rax]
  40778f:	mov    DWORD PTR [r12+0x18],eax
  407794:	mov    edi,0x1
  407799:	call   405c40 <build_ast@@Base+0x110>
  40779e:	test   rax,rax
  4077a1:	je     4079d8 <__gcov_sort_n_vals@@Base+0x1478>
  4077a7:	mov    eax,DWORD PTR [rax]
  4077a9:	mov    DWORD PTR [r12+0x1c],eax
  4077ae:	mov    edi,0x1
  4077b3:	call   405c40 <build_ast@@Base+0x110>
  4077b8:	test   rax,rax
  4077bb:	je     4079f0 <__gcov_sort_n_vals@@Base+0x1490>
  4077c1:	mov    eax,DWORD PTR [rax]
  4077c3:	mov    DWORD PTR [r12+0x20],eax
  4077c8:	xor    ebx,ebx
  4077ca:	xor    r14d,r14d
  4077cd:	mov    QWORD PTR [rsp+0x18],r12
  4077d2:	mov    QWORD PTR [rsp+0x50],r15
  4077d7:	jmp    4077ee <__gcov_sort_n_vals@@Base+0x128e>
  4077d9:	nop    DWORD PTR [rax+0x0]
  4077e0:	add    rbx,0x1
  4077e4:	cmp    rbx,0x9
  4077e8:	je     4078c2 <__gcov_sort_n_vals@@Base+0x1362>
  4077ee:	cmp    QWORD PTR [r13+rbx*8+0x20],0x0
  4077f4:	mov    ebp,ebx
  4077f6:	je     4077e0 <__gcov_sort_n_vals@@Base+0x1280>
  4077f8:	mov    edi,0x1
  4077fd:	call   405c40 <build_ast@@Base+0x110>
  407802:	test   rax,rax
  407805:	je     407900 <__gcov_sort_n_vals@@Base+0x13a0>
  40780b:	mov    edx,ebx
  40780d:	shl    edx,0x11
  407810:	add    edx,0x1a10000
  407816:	cmp    edx,DWORD PTR [rax]
  407818:	jne    407900 <__gcov_sort_n_vals@@Base+0x13a0>
  40781e:	mov    edi,0x1
  407823:	call   405c40 <build_ast@@Base+0x110>
  407828:	test   rax,rax
  40782b:	je     407970 <__gcov_sort_n_vals@@Base+0x1410>
  407831:	mov    ecx,DWORD PTR [rax]
  407833:	shr    ecx,1
  407835:	lea    edi,[rcx*8+0x0]
  40783c:	mov    r12d,ecx
  40783f:	mov    DWORD PTR [rsp+0x28],edi
  407843:	call   4023a0 <malloc@plt>
  407848:	mov    r15,rax
  40784b:	test   rax,rax
  40784e:	je     407990 <__gcov_sort_n_vals@@Base+0x1430>
  407854:	mov    eax,r14d
  407857:	shl    rax,0x4
  40785b:	add    rax,QWORD PTR [rsp+0x18]
  407860:	mov    DWORD PTR [rax+0x28],r12d
  407864:	mov    QWORD PTR [rax+0x30],r15
  407868:	lea    eax,[r12-0x1]
  40786d:	lea    rbp,[r15+rax*8+0x8]
  407872:	test   r12d,r12d
  407875:	jne    40788c <__gcov_sort_n_vals@@Base+0x132c>
  407877:	jmp    4078b0 <__gcov_sort_n_vals@@Base+0x1350>
  407879:	nop    DWORD PTR [rax+0x0]
  407880:	mov    rax,QWORD PTR [rax]
  407883:	mov    QWORD PTR [r15-0x8],rax
  407887:	cmp    rbp,r15
  40788a:	je     4078b0 <__gcov_sort_n_vals@@Base+0x1350>
  40788c:	mov    edi,0x2
  407891:	add    r15,0x8
  407895:	call   405c40 <build_ast@@Base+0x110>
  40789a:	test   rax,rax
  40789d:	jne    407880 <__gcov_sort_n_vals@@Base+0x1320>
  40789f:	xor    eax,eax
  4078a1:	mov    QWORD PTR [r15-0x8],rax
  4078a5:	cmp    rbp,r15
  4078a8:	jne    40788c <__gcov_sort_n_vals@@Base+0x132c>
  4078aa:	nop    WORD PTR [rax+rax*1+0x0]
  4078b0:	add    rbx,0x1
  4078b4:	add    r14d,0x1
  4078b8:	cmp    rbx,0x9
  4078bc:	jne    4077ee <__gcov_sort_n_vals@@Base+0x128e>
  4078c2:	mov    r12,QWORD PTR [rsp+0x18]
  4078c7:	mov    rax,QWORD PTR [rsp+0x58]
  4078cc:	mov    r15,QWORD PTR [rsp+0x50]
  4078d1:	mov    QWORD PTR [rax],r12
  4078d4:	mov    QWORD PTR [rsp+0x58],r12
  4078d9:	mov    edi,0x1
  4078de:	call   405c40 <build_ast@@Base+0x110>
  4078e3:	test   rax,rax
  4078e6:	je     4079a8 <__gcov_sort_n_vals@@Base+0x1448>
  4078ec:	mov    eax,DWORD PTR [rax]
  4078ee:	add    r15,0x1
  4078f2:	jmp    4076d0 <__gcov_sort_n_vals@@Base+0x1170>
  4078f7:	nop    WORD PTR [rax+rax*1+0x0]
  407900:	mov    r12,QWORD PTR [rsp+0x18]
  407905:	mov    r15,QWORD PTR [rsp+0x50]
  40790a:	lea    rcx,[rip+0x105b]        # 40896c <_IO_stdin_used@@Base+0x96c>
  407911:	mov    edx,DWORD PTR [rsp+0x20]
  407915:	mov    rsi,QWORD PTR [rsp+0x10]
  40791a:	mov    r8d,ebp
  40791d:	xor    eax,eax
  40791f:	lea    rdi,[rip+0x125a]        # 408b80 <_IO_stdin_used@@Base+0xb80>
  407926:	call   405ce0 <build_ast@@Base+0x1b0>
  40792b:	mov    edx,ebx
  40792d:	mov    rsi,r12
  407930:	mov    rdi,r13
  407933:	call   405de0 <build_ast@@Base+0x2b0>
  407938:	mov    QWORD PTR [rsp+0x58],rax
  40793d:	test   rax,rax
  407940:	jne    4078d9 <__gcov_sort_n_vals@@Base+0x1379>
  407942:	nop    WORD PTR [rax+rax*1+0x0]
  407948:	mov    ecx,DWORD PTR [rsp+0x4c]
  40794c:	mov    rsi,QWORD PTR [rsp+0x10]
  407951:	lea    rdx,[rip+0x10ad]        # 408a05 <_IO_stdin_used@@Base+0xa05>
  407958:	xor    eax,eax
  40795a:	lea    rdi,[rip+0x11f7]        # 408b58 <_IO_stdin_used@@Base+0xb58>
  407961:	call   405ce0 <build_ast@@Base+0x1b0>
  407966:	jmp    406b7f <__gcov_sort_n_vals@@Base+0x61f>
  40796b:	nop    DWORD PTR [rax+rax*1+0x0]
  407970:	xor    edi,edi
  407972:	mov    DWORD PTR [rsp+0x28],0x0
  40797a:	xor    r12d,r12d
  40797d:	call   4023a0 <malloc@plt>
  407982:	mov    r15,rax
  407985:	test   rax,rax
  407988:	jne    407854 <__gcov_sort_n_vals@@Base+0x12f4>
  40798e:	xchg   ax,ax
  407990:	mov    ebx,ebp
  407992:	mov    r12,QWORD PTR [rsp+0x18]
  407997:	mov    r15,QWORD PTR [rsp+0x50]
  40799c:	mov    ebp,DWORD PTR [rsp+0x28]
  4079a0:	jmp    4079b5 <__gcov_sort_n_vals@@Base+0x1455>
  4079a2:	nop    WORD PTR [rax+rax*1+0x0]
  4079a8:	xor    eax,eax
  4079aa:	jmp    4078ee <__gcov_sort_n_vals@@Base+0x138e>
  4079af:	nop
  4079b0:	mov    ebx,0xffffffff
  4079b5:	lea    rcx,[rip+0xfc1]        # 40897d <_IO_stdin_used@@Base+0x97d>
  4079bc:	test   ebp,ebp
  4079be:	jne    407911 <__gcov_sort_n_vals@@Base+0x13b1>
  4079c4:	mov    ebp,ebx
  4079c6:	lea    rcx,[rip+0xf9f]        # 40896c <_IO_stdin_used@@Base+0x96c>
  4079cd:	jmp    407911 <__gcov_sort_n_vals@@Base+0x13b1>
  4079d2:	nop    WORD PTR [rax+rax*1+0x0]
  4079d8:	xor    eax,eax
  4079da:	jmp    4077a9 <__gcov_sort_n_vals@@Base+0x1249>
  4079df:	nop
  4079e0:	xor    eax,eax
  4079e2:	jmp    40778f <__gcov_sort_n_vals@@Base+0x122f>
  4079e7:	nop    WORD PTR [rax+rax*1+0x0]
  4079f0:	xor    eax,eax
  4079f2:	jmp    4077c3 <__gcov_sort_n_vals@@Base+0x1263>
  4079f7:	nop    WORD PTR [rax+rax*1+0x0]
  407a00:	lea    rdx,[rip+0xf8c]        # 408993 <_IO_stdin_used@@Base+0x993>
  407a07:	jmp    407688 <__gcov_sort_n_vals@@Base+0x1128>
  407a0c:	nop    DWORD PTR [rax+0x0]
  407a10:	xor    esi,esi
  407a12:	jmp    40740d <__gcov_sort_n_vals@@Base+0xead>
  407a17:	nop    WORD PTR [rax+rax*1+0x0]
  407a20:	xor    eax,eax
  407a22:	jmp    407438 <__gcov_sort_n_vals@@Base+0xed8>
  407a27:	nop    WORD PTR [rax+rax*1+0x0]
  407a30:	mov    edi,0x17d0
  407a35:	call   4023a0 <malloc@plt>
  407a3a:	mov    ecx,0x2f9
  407a3f:	mov    rsi,rbx
  407a42:	mov    QWORD PTR [rbp+0x0],rax
  407a46:	lea    rdi,[rax+0x8]
  407a4a:	rep movs QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
  407a4d:	mov    QWORD PTR [rax],0x0
  407a54:	mov    rbp,QWORD PTR [rbp+0x0]
  407a58:	jmp    407468 <__gcov_sort_n_vals@@Base+0xf08>
  407a5d:	nop    DWORD PTR [rax]
  407a60:	mov    ebp,0x2
  407a65:	mov    DWORD PTR [rsp+0x48],0x0
  407a6d:	jmp    4069bd <__gcov_sort_n_vals@@Base+0x45d>
  407a72:	nop    WORD PTR [rax+rax*1+0x0]
  407a78:	mov    edi,0x1
  407a7d:	call   405c40 <build_ast@@Base+0x110>
  407a82:	test   rax,rax
  407a85:	je     407b4a <__gcov_sort_n_vals@@Base+0x15ea>
  407a8b:	mov    eax,DWORD PTR [rax]
  407a8d:	cmp    DWORD PTR [rbx+0x8],eax
  407a90:	jne    407948 <__gcov_sort_n_vals@@Base+0x13e8>
  407a96:	mov    edi,0x1
  407a9b:	call   405c40 <build_ast@@Base+0x110>
  407aa0:	test   rax,rax
  407aa3:	je     407b58 <__gcov_sort_n_vals@@Base+0x15f8>
  407aa9:	mov    eax,DWORD PTR [rax]
  407aab:	cmp    DWORD PTR [rbx+0xc],eax
  407aae:	jne    407948 <__gcov_sort_n_vals@@Base+0x13e8>
  407ab4:	mov    edi,0x1
  407ab9:	call   405c40 <build_ast@@Base+0x110>
  407abe:	test   rax,rax
  407ac1:	je     407b51 <__gcov_sort_n_vals@@Base+0x15f1>
  407ac7:	mov    eax,DWORD PTR [rax]
  407ac9:	cmp    DWORD PTR [rbx+0x10],eax
  407acc:	jne    407948 <__gcov_sort_n_vals@@Base+0x13e8>
  407ad2:	mov    QWORD PTR [rsp+0x18],r15
  407ad7:	add    rbx,0x18
  407adb:	lea    r12,[r13+0x20]
  407adf:	mov    ebp,0x1a10000
  407ae4:	nop    DWORD PTR [rax+0x0]
  407ae8:	mov    r14,QWORD PTR [r12]
  407aec:	test   r14,r14
  407aef:	je     407643 <__gcov_sort_n_vals@@Base+0x10e3>
  407af5:	mov    edi,0x1
  407afa:	call   405c40 <build_ast@@Base+0x110>
  407aff:	test   rax,rax
  407b02:	je     407603 <__gcov_sort_n_vals@@Base+0x10a3>
  407b08:	mov    edi,0x1
  407b0d:	mov    r15d,DWORD PTR [rax]
  407b10:	call   405c40 <build_ast@@Base+0x110>
  407b15:	test   rax,rax
  407b18:	jne    407620 <__gcov_sort_n_vals@@Base+0x10c0>
  407b1e:	xor    ecx,ecx
  407b20:	jmp    407622 <__gcov_sort_n_vals@@Base+0x10c2>
  407b25:	nop    DWORD PTR [rax]
  407b28:	mov    rsi,QWORD PTR [rsp+0x10]
  407b2d:	lea    rdi,[rip+0x1074]        # 408ba8 <_IO_stdin_used@@Base+0xba8>
  407b34:	xor    eax,eax
  407b36:	call   405ce0 <build_ast@@Base+0x1b0>
  407b3b:	jmp    406b7f <__gcov_sort_n_vals@@Base+0x61f>
  407b40:	mov    DWORD PTR [rsp+0x44],r14d
  407b45:	jmp    4076a7 <__gcov_sort_n_vals@@Base+0x1147>
  407b4a:	xor    eax,eax
  407b4c:	jmp    407a8d <__gcov_sort_n_vals@@Base+0x152d>
  407b51:	xor    eax,eax
  407b53:	jmp    407ac9 <__gcov_sort_n_vals@@Base+0x1569>
  407b58:	xor    eax,eax
  407b5a:	jmp    407aab <__gcov_sort_n_vals@@Base+0x154b>
  407b5f:	mov    r11,r10
  407b62:	jmp    407028 <__gcov_sort_n_vals@@Base+0xac8>
  407b67:	lea    r15,[rsp+0x1840]
  407b6f:	xor    eax,eax
  407b71:	mov    ecx,0x2f9
  407b76:	mov    rdi,r15
  407b79:	rep stos QWORD PTR es:[rdi],rax
  407b7c:	mov    eax,DWORD PTR [rsp+0x44]
  407b80:	cmp    QWORD PTR [r13+0x20],0x0
  407b85:	mov    DWORD PTR [rsp+0x40],eax
  407b89:	jne    406ccb <__gcov_sort_n_vals@@Base+0x76b>
  407b8f:	jmp    406d48 <__gcov_sort_n_vals@@Base+0x7e8>
  407b94:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  407b9f:	nop
  407ba0:	endbr64 
  407ba4:	movzx  esi,BYTE PTR [rdi+0x8]
  407ba8:	test   sil,0x1
  407bac:	je     407bb0 <__gcov_sort_n_vals@@Base+0x1650>
  407bae:	ret    
  407baf:	nop
  407bb0:	push   rbx
  407bb1:	shr    sil,1
  407bb4:	mov    rbx,rdi
  407bb7:	mov    rdi,QWORD PTR [rdi]
  407bba:	and    esi,0x1
  407bbd:	call   406610 <__gcov_sort_n_vals@@Base+0xb0>
  407bc2:	or     BYTE PTR [rbx+0x8],0x3
  407bc6:	pop    rbx
  407bc7:	ret    
  407bc8:	nop    DWORD PTR [rax+rax*1+0x0]
  407bd0:	endbr64 
  407bd4:	movzx  esi,BYTE PTR [rip+0x722d]        # 40ee08 <fff@@Base+0x1a8>
  407bdb:	push   rbx
  407bdc:	test   sil,0x1
  407be0:	jne    407bfb <__gcov_sort_n_vals@@Base+0x169b>
  407be2:	shr    sil,1
  407be5:	mov    rdi,QWORD PTR [rip+0x7214]        # 40ee00 <fff@@Base+0x1a0>
  407bec:	and    esi,0x1
  407bef:	call   406610 <__gcov_sort_n_vals@@Base+0xb0>
  407bf4:	or     BYTE PTR [rip+0x720d],0x3        # 40ee08 <fff@@Base+0x1a8>
  407bfb:	mov    rdx,QWORD PTR [rip+0x720e]        # 40ee10 <fff@@Base+0x1b0>
  407c02:	mov    rax,QWORD PTR [rip+0x720f]        # 40ee18 <fff@@Base+0x1b8>
  407c09:	test   rdx,rdx
  407c0c:	je     407c19 <__gcov_sort_n_vals@@Base+0x16b9>
  407c0e:	mov    QWORD PTR [rdx+0x18],rax
  407c12:	mov    rax,QWORD PTR [rip+0x71ff]        # 40ee18 <fff@@Base+0x1b8>
  407c19:	test   rax,rax
  407c1c:	je     407c50 <__gcov_sort_n_vals@@Base+0x16f0>
  407c1e:	mov    QWORD PTR [rax+0x10],rdx
  407c22:	mov    rbx,0x40e700
  407c29:	mov    rdi,QWORD PTR [rbx]
  407c2c:	test   rdi,rdi
  407c2f:	je     407c49 <__gcov_sort_n_vals@@Base+0x16e9>
  407c31:	mov    rax,QWORD PTR [rip+0x43c0]        # 40bff8 <stderr@GLIBC_2.2.5>
  407c38:	cmp    rdi,QWORD PTR [rax]
  407c3b:	je     407c49 <__gcov_sort_n_vals@@Base+0x16e9>
  407c3d:	call   4022f0 <fclose@plt>
  407c42:	mov    QWORD PTR [rbx],0x0
  407c49:	pop    rbx
  407c4a:	ret    
  407c4b:	nop    DWORD PTR [rax+rax*1+0x0]
  407c50:	mov    rax,0x40d760
  407c57:	mov    QWORD PTR [rax+0x8],rdx
  407c5b:	jmp    407c22 <__gcov_sort_n_vals@@Base+0x16c2>
  407c5d:	nop    DWORD PTR [rax]
  407c60:	endbr64 
  407c64:	mov    esi,DWORD PTR [rdi]
  407c66:	test   esi,esi
  407c68:	je     407cb0 <__gcov_sort_n_vals@@Base+0x1750>
  407c6a:	mov    eax,DWORD PTR [rdi+0x68]
  407c6d:	test   eax,eax
  407c6f:	je     407cb0 <__gcov_sort_n_vals@@Base+0x1750>
  407c71:	push   rbp
  407c72:	push   rbx
  407c73:	mov    rbx,rdi
  407c76:	sub    rsp,0x8
  407c7a:	cmp    esi,0x4138342a
  407c80:	je     407c91 <__gcov_sort_n_vals@@Base+0x1731>
  407c82:	xor    edx,edx
  407c84:	lea    rdi,[rdi+0x18]
  407c88:	call   405e50 <build_ast@@Base+0x320>
  407c8d:	test   eax,eax
  407c8f:	je     407ca8 <__gcov_sort_n_vals@@Base+0x1748>
  407c91:	mov    rax,QWORD PTR [rip+0x7168]        # 40ee00 <fff@@Base+0x1a0>
  407c98:	test   rax,rax
  407c9b:	je     407cb8 <__gcov_sort_n_vals@@Base+0x1758>
  407c9d:	mov    QWORD PTR [rbx+0x8],rax
  407ca1:	mov    QWORD PTR [rip+0x7158],rbx        # 40ee00 <fff@@Base+0x1a0>
  407ca8:	add    rsp,0x8
  407cac:	pop    rbx
  407cad:	pop    rbp
  407cae:	ret    
  407caf:	nop
  407cb0:	ret    
  407cb1:	nop    DWORD PTR [rax+0x0]
  407cb8:	mov    rbp,0x40d760
  407cbf:	mov    esi,DWORD PTR [rbp+0x0]
  407cc2:	cmp    esi,0x4138342a
  407cc8:	jne    407cf0 <__gcov_sort_n_vals@@Base+0x1790>
  407cca:	mov    rdx,QWORD PTR [rbp+0x8]
  407cce:	lea    rcx,[rip+0x712b]        # 40ee00 <fff@@Base+0x1a0>
  407cd5:	mov    QWORD PTR [rip+0x7134],rdx        # 40ee10 <fff@@Base+0x1b0>
  407cdc:	test   rdx,rdx
  407cdf:	je     407ce5 <__gcov_sort_n_vals@@Base+0x1785>
  407ce1:	mov    QWORD PTR [rdx+0x18],rcx
  407ce5:	mov    QWORD PTR [rbp+0x8],rcx
  407ce9:	jmp    407c9d <__gcov_sort_n_vals@@Base+0x173d>
  407ceb:	nop    DWORD PTR [rax+rax*1+0x0]
  407cf0:	lea    rdx,[rip+0xd30]        # 408a27 <_IO_stdin_used@@Base+0xa27>
  407cf7:	mov    edi,0x18
  407cfc:	call   405e50 <build_ast@@Base+0x320>
  407d01:	test   eax,eax
  407d03:	mov    rax,QWORD PTR [rip+0x70f6]        # 40ee00 <fff@@Base+0x1a0>
  407d0a:	jne    407cca <__gcov_sort_n_vals@@Base+0x176a>
  407d0c:	jmp    407c9d <__gcov_sort_n_vals@@Base+0x173d>
  407d0e:	xchg   ax,ax
  407d10:	endbr64 
  407d14:	movabs rdx,0x5555555555555555
  407d1e:	mov    rax,rdi
  407d21:	shr    rax,1
  407d24:	and    rax,rdx
  407d27:	movabs rdx,0x3333333333333333
  407d31:	sub    rdi,rax
  407d34:	mov    rax,rdi
  407d37:	shr    rdi,0x2
  407d3b:	and    rax,rdx
  407d3e:	and    rdi,rdx
  407d41:	movabs rdx,0xf0f0f0f0f0f0f0f
  407d4b:	add    rdi,rax
  407d4e:	mov    rax,rdi
  407d51:	shr    rax,0x4
  407d55:	add    rax,rdi
  407d58:	and    rax,rdx
  407d5b:	movabs rdx,0x101010101010101
  407d65:	imul   rax,rdx
  407d69:	shr    rax,0x38
  407d6d:	ret    
  407d6e:	xchg   ax,ax

0000000000407d70 <__libc_csu_init@@Base>:
  407d70:	endbr64 
  407d74:	push   r15
  407d76:	lea    r15,[rip+0x4043]        # 40bdc0 <_IO_stdin_used@@Base+0x3dc0>
  407d7d:	push   r14
  407d7f:	mov    r14,rdx
  407d82:	push   r13
  407d84:	mov    r13,rsi
  407d87:	push   r12
  407d89:	mov    r12d,edi
  407d8c:	push   rbp
  407d8d:	lea    rbp,[rip+0x4054]        # 40bde8 <_IO_stdin_used@@Base+0x3de8>
  407d94:	push   rbx
  407d95:	sub    rbp,r15
  407d98:	sub    rsp,0x8
  407d9c:	call   402000 <getenv@plt-0x240>
  407da1:	sar    rbp,0x3
  407da5:	je     407dc6 <__libc_csu_init@@Base+0x56>
  407da7:	xor    ebx,ebx
  407da9:	nop    DWORD PTR [rax+0x0]
  407db0:	mov    rdx,r14
  407db3:	mov    rsi,r13
  407db6:	mov    edi,r12d
  407db9:	call   QWORD PTR [r15+rbx*8]
  407dbd:	add    rbx,0x1
  407dc1:	cmp    rbp,rbx
  407dc4:	jne    407db0 <__libc_csu_init@@Base+0x40>
  407dc6:	add    rsp,0x8
  407dca:	pop    rbx
  407dcb:	pop    rbp
  407dcc:	pop    r12
  407dce:	pop    r13
  407dd0:	pop    r14
  407dd2:	pop    r15
  407dd4:	ret    
  407dd5:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

0000000000407de0 <__libc_csu_fini@@Base>:
  407de0:	endbr64 
  407de4:	ret    

Disassembly of section .fini:

0000000000407de8 <.fini>:
  407de8:	endbr64 
  407dec:	sub    rsp,0x8
  407df0:	add    rsp,0x8
  407df4:	ret    
