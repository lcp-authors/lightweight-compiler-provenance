
../repos/sgerbino-table-2fdd8d0/bin/table_callback_test:     file format elf64-x86-64


Disassembly of section .init:

0000000000403000 <.init>:
  403000:	endbr64 
  403004:	sub    rsp,0x8
  403008:	mov    rax,QWORD PTR [rip+0x6fe9]        # 409ff8 <__gmon_start__>
  40300f:	test   rax,rax
  403012:	je     403016 <free@plt-0x1a>
  403014:	call   rax
  403016:	add    rsp,0x8
  40301a:	ret    

Disassembly of section .plt:

0000000000403020 <free@plt-0x10>:
  403020:	push   QWORD PTR [rip+0x6fe2]        # 40a008 <_IO_stdin_used@@Base+0x3008>
  403026:	jmp    QWORD PTR [rip+0x6fe4]        # 40a010 <_IO_stdin_used@@Base+0x3010>
  40302c:	nop    DWORD PTR [rax+0x0]

0000000000403030 <free@plt>:
  403030:	jmp    QWORD PTR [rip+0x6fe2]        # 40a018 <free@GLIBC_2.2.5>
  403036:	push   0x0
  40303b:	jmp    403020 <free@plt-0x10>

0000000000403040 <strcpy@plt>:
  403040:	jmp    QWORD PTR [rip+0x6fda]        # 40a020 <strcpy@GLIBC_2.2.5>
  403046:	push   0x1
  40304b:	jmp    403020 <free@plt-0x10>

0000000000403050 <puts@plt>:
  403050:	jmp    QWORD PTR [rip+0x6fd2]        # 40a028 <puts@GLIBC_2.2.5>
  403056:	push   0x2
  40305b:	jmp    403020 <free@plt-0x10>

0000000000403060 <strlen@plt>:
  403060:	jmp    QWORD PTR [rip+0x6fca]        # 40a030 <strlen@GLIBC_2.2.5>
  403066:	push   0x3
  40306b:	jmp    403020 <free@plt-0x10>

0000000000403070 <printf@plt>:
  403070:	jmp    QWORD PTR [rip+0x6fc2]        # 40a038 <printf@GLIBC_2.2.5>
  403076:	push   0x4
  40307b:	jmp    403020 <free@plt-0x10>

0000000000403080 <snprintf@plt>:
  403080:	jmp    QWORD PTR [rip+0x6fba]        # 40a040 <snprintf@GLIBC_2.2.5>
  403086:	push   0x5
  40308b:	jmp    403020 <free@plt-0x10>

0000000000403090 <strcmp@plt>:
  403090:	jmp    QWORD PTR [rip+0x6fb2]        # 40a048 <strcmp@GLIBC_2.2.5>
  403096:	push   0x6
  40309b:	jmp    403020 <free@plt-0x10>

00000000004030a0 <malloc@plt>:
  4030a0:	jmp    QWORD PTR [rip+0x6faa]        # 40a050 <malloc@GLIBC_2.2.5>
  4030a6:	push   0x7
  4030ab:	jmp    403020 <free@plt-0x10>

00000000004030b0 <__isoc99_sscanf@plt>:
  4030b0:	jmp    QWORD PTR [rip+0x6fa2]        # 40a058 <__isoc99_sscanf@GLIBC_2.7>
  4030b6:	push   0x8
  4030bb:	jmp    403020 <free@plt-0x10>

00000000004030c0 <realloc@plt>:
  4030c0:	jmp    QWORD PTR [rip+0x6f9a]        # 40a060 <realloc@GLIBC_2.2.5>
  4030c6:	push   0x9
  4030cb:	jmp    403020 <free@plt-0x10>

Disassembly of section .text:

00000000004030d0 <_start@@Base>:
  4030d0:	endbr64 
  4030d4:	xor    ebp,ebp
  4030d6:	mov    r9,rdx
  4030d9:	pop    rsi
  4030da:	mov    rdx,rsp
  4030dd:	and    rsp,0xfffffffffffffff0
  4030e1:	push   rax
  4030e2:	push   rsp
  4030e3:	mov    r8,0x4064f0
  4030ea:	mov    rcx,0x406480
  4030f1:	mov    rdi,0x4031c0
  4030f8:	call   QWORD PTR [rip+0x6ef2]        # 409ff0 <__libc_start_main@GLIBC_2.2.5>
  4030fe:	hlt    
  4030ff:	nop
  403100:	endbr64 
  403104:	ret    
  403105:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40310f:	nop
  403110:	mov    eax,0x40a078
  403115:	cmp    rax,0x40a078
  40311b:	je     403130 <_start@@Base+0x60>
  40311d:	mov    eax,0x0
  403122:	test   rax,rax
  403125:	je     403130 <_start@@Base+0x60>
  403127:	mov    edi,0x40a078
  40312c:	jmp    rax
  40312e:	xchg   ax,ax
  403130:	ret    
  403131:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40313c:	nop    DWORD PTR [rax+0x0]
  403140:	mov    esi,0x40a078
  403145:	sub    rsi,0x40a078
  40314c:	mov    rax,rsi
  40314f:	shr    rsi,0x3f
  403153:	sar    rax,0x3
  403157:	add    rsi,rax
  40315a:	sar    rsi,1
  40315d:	je     403170 <_start@@Base+0xa0>
  40315f:	mov    eax,0x0
  403164:	test   rax,rax
  403167:	je     403170 <_start@@Base+0xa0>
  403169:	mov    edi,0x40a078
  40316e:	jmp    rax
  403170:	ret    
  403171:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40317c:	nop    DWORD PTR [rax+0x0]
  403180:	endbr64 
  403184:	cmp    BYTE PTR [rip+0x6eed],0x0        # 40a078 <__bss_start@@Base>
  40318b:	jne    4031a0 <_start@@Base+0xd0>
  40318d:	push   rbp
  40318e:	mov    rbp,rsp
  403191:	call   403110 <_start@@Base+0x40>
  403196:	mov    BYTE PTR [rip+0x6edb],0x1        # 40a078 <__bss_start@@Base>
  40319d:	pop    rbp
  40319e:	ret    
  40319f:	nop
  4031a0:	ret    
  4031a1:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4031ac:	nop    DWORD PTR [rax+0x0]
  4031b0:	endbr64 
  4031b4:	jmp    403140 <_start@@Base+0x70>
  4031b6:	nop    WORD PTR cs:[rax+rax*1+0x0]

00000000004031c0 <main@@Base>:
  4031c0:	push   rbp
  4031c1:	push   r14
  4031c3:	push   rbx
  4031c4:	sub    rsp,0x80
  4031cb:	mov    DWORD PTR [rsp+0xc],0x0
  4031d3:	lea    rbx,[rsp+0x10]
  4031d8:	mov    rdi,rbx
  4031db:	call   403380 <table_init@@Base>
  4031e0:	lea    rsi,[rip+0x119]        # 403300 <main@@Base+0x140>
  4031e7:	lea    rdx,[rsp+0xc]
  4031ec:	mov    ecx,0xffffffff
  4031f1:	mov    rdi,rbx
  4031f4:	call   4039a0 <table_register_callback@@Base>
  4031f9:	mov    rdi,rbx
  4031fc:	call   404a20 <table_add_row@@Base>
  403201:	mov    r14d,eax
  403204:	xor    ebx,ebx
  403206:	test   BYTE PTR [rsp+0xc],0x2
  40320b:	jne    40321e <main@@Base+0x5e>
  40320d:	lea    rdi,[rip+0x3eac]        # 4070c0 <_IO_stdin_used@@Base+0xc0>
  403214:	call   403050 <puts@plt>
  403219:	mov    ebx,0xffffffff
  40321e:	lea    rsi,[rip+0x3ddf]        # 407004 <_IO_stdin_used@@Base+0x4>
  403225:	lea    rdi,[rsp+0x10]
  40322a:	xor    edx,edx
  40322c:	call   403d90 <table_add_column@@Base>
  403231:	mov    ebp,eax
  403233:	test   BYTE PTR [rsp+0xc],0x8
  403238:	jne    40324b <main@@Base+0x8b>
  40323a:	lea    rdi,[rip+0x3eaf]        # 4070f0 <_IO_stdin_used@@Base+0xf0>
  403241:	call   403050 <puts@plt>
  403246:	mov    ebx,0xffffffff
  40324b:	lea    rdi,[rsp+0x10]
  403250:	mov    ecx,0x2a
  403255:	mov    esi,r14d
  403258:	mov    edx,ebp
  40325a:	call   404fd0 <table_set_int@@Base>
  40325f:	test   BYTE PTR [rsp+0xc],0x1
  403264:	jne    403279 <main@@Base+0xb9>
  403266:	lea    rdi,[rip+0x3d9a]        # 407007 <_IO_stdin_used@@Base+0x7>
  40326d:	xor    eax,eax
  40326f:	call   403070 <printf@plt>
  403274:	mov    ebx,0xffffffff
  403279:	lea    rdi,[rsp+0x10]
  40327e:	mov    esi,r14d
  403281:	call   404b00 <table_remove_row@@Base>
  403286:	test   BYTE PTR [rsp+0xc],0x4
  40328b:	jne    4032a0 <main@@Base+0xe0>
  40328d:	lea    rdi,[rip+0x3d9f]        # 407033 <_IO_stdin_used@@Base+0x33>
  403294:	xor    eax,eax
  403296:	call   403070 <printf@plt>
  40329b:	mov    ebx,0xffffffff
  4032a0:	lea    rdi,[rsp+0x10]
  4032a5:	mov    esi,ebp
  4032a7:	call   403ef0 <table_remove_column@@Base>
  4032ac:	test   BYTE PTR [rsp+0xc],0x10
  4032b1:	jne    4032c6 <main@@Base+0x106>
  4032b3:	lea    rdi,[rip+0x3da3]        # 40705d <_IO_stdin_used@@Base+0x5d>
  4032ba:	xor    eax,eax
  4032bc:	call   403070 <printf@plt>
  4032c1:	mov    ebx,0xffffffff
  4032c6:	lea    rdi,[rsp+0x10]
  4032cb:	call   403410 <table_destroy@@Base>
  4032d0:	test   BYTE PTR [rsp+0xc],0x40
  4032d5:	jne    4032ea <main@@Base+0x12a>
  4032d7:	lea    rdi,[rip+0x3dac]        # 40708a <_IO_stdin_used@@Base+0x8a>
  4032de:	xor    eax,eax
  4032e0:	call   403070 <printf@plt>
  4032e5:	mov    ebx,0xffffffff
  4032ea:	mov    eax,ebx
  4032ec:	add    rsp,0x80
  4032f3:	pop    rbx
  4032f4:	pop    r14
  4032f6:	pop    rbp
  4032f7:	ret    
  4032f8:	nop    DWORD PTR [rax+rax*1+0x0]
  403300:	or     DWORD PTR [r8],ecx
  403303:	ret    
  403304:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40330e:	xchg   ax,ax

0000000000403310 <table_new@@Base>:
  403310:	push   rax
  403311:	mov    edi,0x70
  403316:	call   4030a0 <malloc@plt>
  40331b:	mov    QWORD PTR [rax],0x0
  403322:	mov    DWORD PTR [rax+0x8],0x0
  403329:	mov    ecx,0xa
  40332e:	vmovq  xmm0,rcx
  403333:	vmovdqu XMMWORD PTR [rax+0x10],xmm0
  403338:	mov    QWORD PTR [rax+0x20],0x0
  403340:	mov    DWORD PTR [rax+0x28],0x0
  403347:	mov    ecx,0x14
  40334c:	vmovq  xmm0,rcx
  403351:	vmovdqu XMMWORD PTR [rax+0x30],xmm0
  403356:	mov    DWORD PTR [rax+0x40],0x0
  40335d:	mov    QWORD PTR [rax+0x68],0x0
  403365:	vpxor  xmm0,xmm0,xmm0
  403369:	vmovdqu XMMWORD PTR [rax+0x48],xmm0
  40336e:	mov    QWORD PTR [rax+0x58],0x0
  403376:	mov    QWORD PTR [rax+0x60],0xa
  40337e:	pop    rcx
  40337f:	ret    

0000000000403380 <table_init@@Base>:
  403380:	mov    QWORD PTR [rdi],0x0
  403387:	mov    DWORD PTR [rdi+0x8],0x0
  40338e:	mov    eax,0xa
  403393:	vmovq  xmm0,rax
  403398:	vmovdqu XMMWORD PTR [rdi+0x10],xmm0
  40339d:	mov    QWORD PTR [rdi+0x20],0x0
  4033a5:	mov    DWORD PTR [rdi+0x28],0x0
  4033ac:	mov    eax,0x14
  4033b1:	vmovq  xmm0,rax
  4033b6:	vmovdqu XMMWORD PTR [rdi+0x30],xmm0
  4033bb:	mov    DWORD PTR [rdi+0x40],0x0
  4033c2:	mov    QWORD PTR [rdi+0x68],0x0
  4033ca:	vpxor  xmm0,xmm0,xmm0
  4033ce:	vmovdqu XMMWORD PTR [rdi+0x48],xmm0
  4033d3:	mov    QWORD PTR [rdi+0x58],0x0
  4033db:	mov    QWORD PTR [rdi+0x60],0xa
  4033e3:	ret    
  4033e4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4033ee:	xchg   ax,ax

00000000004033f0 <table_delete@@Base>:
  4033f0:	push   rbx
  4033f1:	mov    rbx,rdi
  4033f4:	call   403410 <table_destroy@@Base>
  4033f9:	mov    rdi,rbx
  4033fc:	pop    rbx
  4033fd:	jmp    403030 <free@plt>
  403402:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40340c:	nop    DWORD PTR [rax+0x0]

0000000000403410 <table_destroy@@Base>:
  403410:	test   rdi,rdi
  403413:	je     4034cc <table_destroy@@Base+0xbc>
  403419:	push   rbp
  40341a:	push   r14
  40341c:	push   rbx
  40341d:	mov    r14,rdi
  403420:	mov    esi,0xffffffff
  403425:	mov    edx,0xffffffff
  40342a:	mov    ecx,0x40
  40342f:	call   403c10 <table_notify@@Base>
  403434:	mov    rdi,r14
  403437:	call   404a10 <table_get_row_length@@Base>
  40343c:	test   eax,eax
  40343e:	jle    403461 <table_destroy@@Base+0x51>
  403440:	mov    ebp,eax
  403442:	xor    ebx,ebx
  403444:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40344e:	xchg   ax,ax
  403450:	mov    rdi,r14
  403453:	mov    esi,ebx
  403455:	call   4049a0 <table_row_destroy@@Base>
  40345a:	add    ebx,0x1
  40345d:	cmp    ebp,ebx
  40345f:	jne    403450 <table_destroy@@Base+0x40>
  403461:	mov    rdi,QWORD PTR [r14+0x20]
  403465:	test   rdi,rdi
  403468:	je     40346f <table_destroy@@Base+0x5f>
  40346a:	call   403030 <free@plt>
  40346f:	mov    rdi,r14
  403472:	call   403d00 <table_get_column_length@@Base>
  403477:	test   eax,eax
  403479:	jle    403491 <table_destroy@@Base+0x81>
  40347b:	mov    ebp,eax
  40347d:	xor    ebx,ebx
  40347f:	nop
  403480:	mov    rdi,r14
  403483:	mov    esi,ebx
  403485:	call   403ce0 <table_column_destroy@@Base>
  40348a:	add    ebx,0x1
  40348d:	cmp    ebp,ebx
  40348f:	jne    403480 <table_destroy@@Base+0x70>
  403491:	mov    rdi,QWORD PTR [r14]
  403494:	test   rdi,rdi
  403497:	je     40349e <table_destroy@@Base+0x8e>
  403499:	call   403030 <free@plt>
  40349e:	mov    rdi,QWORD PTR [r14+0x48]
  4034a2:	test   rdi,rdi
  4034a5:	je     4034ac <table_destroy@@Base+0x9c>
  4034a7:	call   403030 <free@plt>
  4034ac:	mov    rdi,QWORD PTR [r14+0x50]
  4034b0:	test   rdi,rdi
  4034b3:	je     4034ba <table_destroy@@Base+0xaa>
  4034b5:	call   403030 <free@plt>
  4034ba:	mov    rdi,QWORD PTR [r14+0x58]
  4034be:	test   rdi,rdi
  4034c1:	pop    rbx
  4034c2:	pop    r14
  4034c4:	pop    rbp
  4034c5:	je     4034cc <table_destroy@@Base+0xbc>
  4034c7:	jmp    403030 <free@plt>
  4034cc:	ret    
  4034cd:	nop    DWORD PTR [rax]

00000000004034d0 <table_dupe@@Base>:
  4034d0:	push   rbp
  4034d1:	push   r15
  4034d3:	push   r14
  4034d5:	push   r13
  4034d7:	push   r12
  4034d9:	push   rbx
  4034da:	sub    rsp,0x28
  4034de:	mov    rbx,rdi
  4034e1:	call   404a10 <table_get_row_length@@Base>
  4034e6:	mov    DWORD PTR [rsp+0x1c],eax
  4034ea:	mov    rdi,rbx
  4034ed:	call   403d00 <table_get_column_length@@Base>
  4034f2:	mov    r12d,eax
  4034f5:	mov    edi,0x70
  4034fa:	call   4030a0 <malloc@plt>
  4034ff:	mov    r15,rax
  403502:	mov    QWORD PTR [rax],0x0
  403509:	mov    DWORD PTR [rax+0x8],0x0
  403510:	mov    eax,0xa
  403515:	vmovq  xmm0,rax
  40351a:	vmovdqu XMMWORD PTR [r15+0x10],xmm0
  403520:	mov    QWORD PTR [r15+0x20],0x0
  403528:	mov    DWORD PTR [r15+0x28],0x0
  403530:	mov    eax,0x14
  403535:	vmovq  xmm0,rax
  40353a:	vmovdqu XMMWORD PTR [r15+0x30],xmm0
  403540:	mov    DWORD PTR [r15+0x40],0x0
  403548:	mov    QWORD PTR [r15+0x68],0x0
  403550:	vpxor  xmm0,xmm0,xmm0
  403554:	vmovdqu XMMWORD PTR [r15+0x48],xmm0
  40355a:	mov    QWORD PTR [r15+0x58],0x0
  403562:	mov    QWORD PTR [r15+0x60],0xa
  40356a:	test   r12d,r12d
  40356d:	jle    4035ac <table_dupe@@Base+0xdc>
  40356f:	xor    ebp,ebp
  403571:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40357b:	nop    DWORD PTR [rax+rax*1+0x0]
  403580:	mov    rdi,rbx
  403583:	mov    esi,ebp
  403585:	call   403d70 <table_get_column_name@@Base>
  40358a:	mov    r13,rax
  40358d:	mov    rdi,rbx
  403590:	mov    esi,ebp
  403592:	call   403d80 <table_get_column_data_type@@Base>
  403597:	mov    rdi,r15
  40359a:	mov    rsi,r13
  40359d:	mov    edx,eax
  40359f:	call   403d90 <table_add_column@@Base>
  4035a4:	add    ebp,0x1
  4035a7:	cmp    r12d,ebp
  4035aa:	jne    403580 <table_dupe@@Base+0xb0>
  4035ac:	cmp    DWORD PTR [rsp+0x1c],0x0
  4035b1:	jle    40393a <table_dupe@@Base+0x46a>
  4035b7:	xor    ebp,ebp
  4035b9:	lea    r14,[rip+0x3b5c]        # 40711c <_IO_stdin_used@@Base+0x11c>
  4035c0:	mov    rdi,r15
  4035c3:	call   404a20 <table_add_row@@Base>
  4035c8:	test   r12d,r12d
  4035cb:	jle    40392d <table_dupe@@Base+0x45d>
  4035d1:	xor    r13d,r13d
  4035d4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4035de:	xchg   ax,ax
  4035e0:	mov    rdi,rbx
  4035e3:	mov    esi,r13d
  4035e6:	call   403d80 <table_get_column_data_type@@Base>
  4035eb:	cmp    eax,0x17
  4035ee:	ja     403920 <table_dupe@@Base+0x450>
  4035f4:	mov    eax,eax
  4035f6:	movsxd rax,DWORD PTR [r14+rax*4]
  4035fa:	add    rax,r14
  4035fd:	jmp    rax
  4035ff:	mov    rdi,rbx
  403602:	mov    esi,ebp
  403604:	mov    edx,r13d
  403607:	call   4047f0 <table_get_int@@Base>
  40360c:	mov    rdi,r15
  40360f:	mov    esi,ebp
  403611:	mov    edx,r13d
  403614:	mov    ecx,eax
  403616:	call   404fd0 <table_set_int@@Base>
  40361b:	jmp    403920 <table_dupe@@Base+0x450>
  403620:	mov    rdi,rbx
  403623:	mov    esi,ebp
  403625:	mov    edx,r13d
  403628:	call   404800 <table_get_uint@@Base>
  40362d:	mov    rdi,r15
  403630:	mov    esi,ebp
  403632:	mov    edx,r13d
  403635:	mov    ecx,eax
  403637:	call   405050 <table_set_uint@@Base>
  40363c:	jmp    403920 <table_dupe@@Base+0x450>
  403641:	mov    rdi,rbx
  403644:	mov    esi,ebp
  403646:	mov    edx,r13d
  403649:	call   404810 <table_get_int8@@Base>
  40364e:	movsx  ecx,al
  403651:	mov    rdi,r15
  403654:	mov    esi,ebp
  403656:	mov    edx,r13d
  403659:	call   4050d0 <table_set_int8@@Base>
  40365e:	jmp    403920 <table_dupe@@Base+0x450>
  403663:	mov    rdi,rbx
  403666:	mov    esi,ebp
  403668:	mov    edx,r13d
  40366b:	call   404820 <table_get_uint8@@Base>
  403670:	movzx  ecx,al
  403673:	mov    rdi,r15
  403676:	mov    esi,ebp
  403678:	mov    edx,r13d
  40367b:	call   405150 <table_set_uint8@@Base>
  403680:	jmp    403920 <table_dupe@@Base+0x450>
  403685:	mov    rdi,rbx
  403688:	mov    esi,ebp
  40368a:	mov    edx,r13d
  40368d:	call   404830 <table_get_int16@@Base>
  403692:	movsx  ecx,ax
  403695:	mov    rdi,r15
  403698:	mov    esi,ebp
  40369a:	mov    edx,r13d
  40369d:	call   4051d0 <table_set_int16@@Base>
  4036a2:	jmp    403920 <table_dupe@@Base+0x450>
  4036a7:	mov    rdi,rbx
  4036aa:	mov    esi,ebp
  4036ac:	mov    edx,r13d
  4036af:	call   404840 <table_get_uint16@@Base>
  4036b4:	movzx  ecx,ax
  4036b7:	mov    rdi,r15
  4036ba:	mov    esi,ebp
  4036bc:	mov    edx,r13d
  4036bf:	call   405250 <table_set_uint16@@Base>
  4036c4:	jmp    403920 <table_dupe@@Base+0x450>
  4036c9:	mov    rdi,rbx
  4036cc:	mov    esi,ebp
  4036ce:	mov    edx,r13d
  4036d1:	call   404850 <table_get_int32@@Base>
  4036d6:	mov    rdi,r15
  4036d9:	mov    esi,ebp
  4036db:	mov    edx,r13d
  4036de:	mov    ecx,eax
  4036e0:	call   4052d0 <table_set_int32@@Base>
  4036e5:	jmp    403920 <table_dupe@@Base+0x450>
  4036ea:	mov    rdi,rbx
  4036ed:	mov    esi,ebp
  4036ef:	mov    edx,r13d
  4036f2:	call   404860 <table_get_uint32@@Base>
  4036f7:	mov    rdi,r15
  4036fa:	mov    esi,ebp
  4036fc:	mov    edx,r13d
  4036ff:	mov    ecx,eax
  403701:	call   405350 <table_set_uint32@@Base>
  403706:	jmp    403920 <table_dupe@@Base+0x450>
  40370b:	mov    rdi,rbx
  40370e:	mov    esi,ebp
  403710:	mov    edx,r13d
  403713:	call   404870 <table_get_int64@@Base>
  403718:	mov    rdi,r15
  40371b:	mov    esi,ebp
  40371d:	mov    edx,r13d
  403720:	mov    rcx,rax
  403723:	call   4053d0 <table_set_int64@@Base>
  403728:	jmp    403920 <table_dupe@@Base+0x450>
  40372d:	mov    rdi,rbx
  403730:	mov    esi,ebp
  403732:	mov    edx,r13d
  403735:	call   404880 <table_get_uint64@@Base>
  40373a:	mov    rdi,r15
  40373d:	mov    esi,ebp
  40373f:	mov    edx,r13d
  403742:	mov    rcx,rax
  403745:	call   405450 <table_set_uint64@@Base>
  40374a:	jmp    403920 <table_dupe@@Base+0x450>
  40374f:	mov    rdi,rbx
  403752:	mov    esi,ebp
  403754:	mov    edx,r13d
  403757:	call   404890 <table_get_short@@Base>
  40375c:	movsx  ecx,ax
  40375f:	mov    rdi,r15
  403762:	mov    esi,ebp
  403764:	mov    edx,r13d
  403767:	call   4054d0 <table_set_short@@Base>
  40376c:	jmp    403920 <table_dupe@@Base+0x450>
  403771:	mov    rdi,rbx
  403774:	mov    esi,ebp
  403776:	mov    edx,r13d
  403779:	call   4048a0 <table_get_ushort@@Base>
  40377e:	movzx  ecx,ax
  403781:	mov    rdi,r15
  403784:	mov    esi,ebp
  403786:	mov    edx,r13d
  403789:	call   405550 <table_set_ushort@@Base>
  40378e:	jmp    403920 <table_dupe@@Base+0x450>
  403793:	mov    rdi,rbx
  403796:	mov    esi,ebp
  403798:	mov    edx,r13d
  40379b:	call   4048b0 <table_get_long@@Base>
  4037a0:	mov    rdi,r15
  4037a3:	mov    esi,ebp
  4037a5:	mov    edx,r13d
  4037a8:	mov    rcx,rax
  4037ab:	call   4055d0 <table_set_long@@Base>
  4037b0:	jmp    403920 <table_dupe@@Base+0x450>
  4037b5:	mov    rdi,rbx
  4037b8:	mov    esi,ebp
  4037ba:	mov    edx,r13d
  4037bd:	call   4048c0 <table_get_ulong@@Base>
  4037c2:	mov    rdi,r15
  4037c5:	mov    esi,ebp
  4037c7:	mov    edx,r13d
  4037ca:	mov    rcx,rax
  4037cd:	call   405650 <table_set_ulong@@Base>
  4037d2:	jmp    403920 <table_dupe@@Base+0x450>
  4037d7:	mov    rdi,rbx
  4037da:	mov    esi,ebp
  4037dc:	mov    edx,r13d
  4037df:	call   4048d0 <table_get_llong@@Base>
  4037e4:	mov    rdi,r15
  4037e7:	mov    esi,ebp
  4037e9:	mov    edx,r13d
  4037ec:	mov    rcx,rax
  4037ef:	call   4056d0 <table_set_llong@@Base>
  4037f4:	jmp    403920 <table_dupe@@Base+0x450>
  4037f9:	mov    rdi,rbx
  4037fc:	mov    esi,ebp
  4037fe:	mov    edx,r13d
  403801:	call   4048e0 <table_get_ullong@@Base>
  403806:	mov    rdi,r15
  403809:	mov    esi,ebp
  40380b:	mov    edx,r13d
  40380e:	mov    rcx,rax
  403811:	call   405750 <table_set_ullong@@Base>
  403816:	jmp    403920 <table_dupe@@Base+0x450>
  40381b:	mov    rdi,rbx
  40381e:	mov    esi,ebp
  403820:	mov    edx,r13d
  403823:	call   4048f0 <table_get_float@@Base>
  403828:	mov    rdi,r15
  40382b:	mov    esi,ebp
  40382d:	mov    edx,r13d
  403830:	call   4057d0 <table_set_float@@Base>
  403835:	jmp    403920 <table_dupe@@Base+0x450>
  40383a:	mov    rdi,rbx
  40383d:	mov    esi,ebp
  40383f:	mov    edx,r13d
  403842:	call   404900 <table_get_double@@Base>
  403847:	mov    rdi,r15
  40384a:	mov    esi,ebp
  40384c:	mov    edx,r13d
  40384f:	call   405860 <table_set_double@@Base>
  403854:	jmp    403920 <table_dupe@@Base+0x450>
  403859:	mov    rdi,rbx
  40385c:	mov    esi,ebp
  40385e:	mov    edx,r13d
  403861:	call   404910 <table_get_ldouble@@Base>
  403866:	fstp   TBYTE PTR [rsp]
  403869:	mov    rdi,r15
  40386c:	mov    esi,ebp
  40386e:	mov    edx,r13d
  403871:	call   4058f0 <table_set_ldouble@@Base>
  403876:	jmp    403920 <table_dupe@@Base+0x450>
  40387b:	mov    rdi,rbx
  40387e:	mov    esi,ebp
  403880:	mov    edx,r13d
  403883:	call   404920 <table_get_char@@Base>
  403888:	movsx  ecx,al
  40388b:	mov    rdi,r15
  40388e:	mov    esi,ebp
  403890:	mov    edx,r13d
  403893:	call   4059a0 <table_set_char@@Base>
  403898:	jmp    403920 <table_dupe@@Base+0x450>
  40389d:	mov    rdi,rbx
  4038a0:	mov    esi,ebp
  4038a2:	mov    edx,r13d
  4038a5:	call   404930 <table_get_uchar@@Base>
  4038aa:	movzx  ecx,al
  4038ad:	mov    rdi,r15
  4038b0:	mov    esi,ebp
  4038b2:	mov    edx,r13d
  4038b5:	call   405a20 <table_set_uchar@@Base>
  4038ba:	jmp    403920 <table_dupe@@Base+0x450>
  4038bc:	mov    rdi,rbx
  4038bf:	mov    esi,ebp
  4038c1:	mov    edx,r13d
  4038c4:	call   404940 <table_get_string@@Base>
  4038c9:	mov    rdi,r15
  4038cc:	mov    esi,ebp
  4038ce:	mov    edx,r13d
  4038d1:	mov    rcx,rax
  4038d4:	call   405990 <table_set_string@@Base>
  4038d9:	jmp    403920 <table_dupe@@Base+0x450>
  4038db:	mov    rdi,rbx
  4038de:	mov    esi,ebp
  4038e0:	mov    edx,r13d
  4038e3:	call   4047e0 <table_get_bool@@Base>
  4038e8:	movzx  ecx,al
  4038eb:	mov    rdi,r15
  4038ee:	mov    esi,ebp
  4038f0:	mov    edx,r13d
  4038f3:	call   404f50 <table_set_bool@@Base>
  4038f8:	jmp    403920 <table_dupe@@Base+0x450>
  4038fa:	mov    rdi,rbx
  4038fd:	mov    esi,ebp
  4038ff:	mov    edx,r13d
  403902:	call   404950 <table_get_ptr@@Base>
  403907:	mov    QWORD PTR [rsp+0x20],rax
  40390c:	mov    rdi,r15
  40390f:	mov    esi,ebp
  403911:	mov    edx,r13d
  403914:	lea    rcx,[rsp+0x20]
  403919:	call   405aa0 <table_set_ptr@@Base>
  40391e:	xchg   ax,ax
  403920:	add    r13d,0x1
  403924:	cmp    r12d,r13d
  403927:	jne    4035e0 <table_dupe@@Base+0x110>
  40392d:	add    ebp,0x1
  403930:	cmp    ebp,DWORD PTR [rsp+0x1c]
  403934:	jne    4035c0 <table_dupe@@Base+0xf0>
  40393a:	mov    rax,r15
  40393d:	add    rsp,0x28
  403941:	pop    rbx
  403942:	pop    r12
  403944:	pop    r13
  403946:	pop    r14
  403948:	pop    r15
  40394a:	pop    rbp
  40394b:	ret    
  40394c:	nop    DWORD PTR [rax+0x0]

0000000000403950 <table_get_major_version@@Base>:
  403950:	xor    eax,eax
  403952:	ret    
  403953:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40395d:	nop    DWORD PTR [rax]

0000000000403960 <table_get_minor_version@@Base>:
  403960:	xor    eax,eax
  403962:	ret    
  403963:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40396d:	nop    DWORD PTR [rax]

0000000000403970 <table_get_patch_version@@Base>:
  403970:	xor    eax,eax
  403972:	ret    
  403973:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40397d:	nop    DWORD PTR [rax]

0000000000403980 <table_get_version@@Base>:
  403980:	lea    rax,[rip+0x3945]        # 4072cc <_IO_stdin_used@@Base+0x2cc>
  403987:	ret    
  403988:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403990 <table_get_callback_length@@Base>:
  403990:	mov    eax,DWORD PTR [rdi+0x40]
  403993:	ret    
  403994:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40399e:	xchg   ax,ax

00000000004039a0 <table_register_callback@@Base>:
  4039a0:	push   rbp
  4039a1:	push   r15
  4039a3:	push   r14
  4039a5:	push   rbx
  4039a6:	push   rax
  4039a7:	mov    r14d,ecx
  4039aa:	mov    r15,rdx
  4039ad:	mov    rbp,rsi
  4039b0:	mov    rbx,rdi
  4039b3:	movsxd rcx,DWORD PTR [rdi+0x40]
  4039b7:	test   rcx,rcx
  4039ba:	jle    4039ed <table_register_callback@@Base+0x4d>
  4039bc:	mov    rdx,QWORD PTR [rbx+0x48]
  4039c0:	xor    eax,eax
  4039c2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4039cc:	nop    DWORD PTR [rax+0x0]
  4039d0:	cmp    QWORD PTR [rdx+rax*8],rbp
  4039d4:	jne    4039e4 <table_register_callback@@Base+0x44>
  4039d6:	mov    rsi,QWORD PTR [rbx+0x50]
  4039da:	cmp    QWORD PTR [rsi+rax*8],r15
  4039de:	je     403a85 <table_register_callback@@Base+0xe5>
  4039e4:	add    rax,0x1
  4039e8:	cmp    rax,rcx
  4039eb:	jl     4039d0 <table_register_callback@@Base+0x30>
  4039ed:	mov    rsi,QWORD PTR [rbx+0x60]
  4039f1:	mov    rax,rcx
  4039f4:	or     rax,rsi
  4039f7:	shr    rax,0x20
  4039fb:	je     403a78 <table_register_callback@@Base+0xd8>
  4039fd:	xor    edx,edx
  4039ff:	mov    rax,rcx
  403a02:	div    rsi
  403a05:	test   rdx,rdx
  403a08:	jne    403a51 <table_register_callback@@Base+0xb1>
  403a0a:	add    rsi,QWORD PTR [rbx+0x68]
  403a0e:	mov    QWORD PTR [rbx+0x68],rsi
  403a12:	mov    rdi,QWORD PTR [rbx+0x48]
  403a16:	shl    rsi,0x3
  403a1a:	call   4030c0 <realloc@plt>
  403a1f:	mov    QWORD PTR [rbx+0x48],rax
  403a23:	mov    rdi,QWORD PTR [rbx+0x50]
  403a27:	mov    rsi,QWORD PTR [rbx+0x68]
  403a2b:	shl    rsi,0x3
  403a2f:	call   4030c0 <realloc@plt>
  403a34:	mov    QWORD PTR [rbx+0x50],rax
  403a38:	mov    rdi,QWORD PTR [rbx+0x58]
  403a3c:	mov    rsi,QWORD PTR [rbx+0x68]
  403a40:	shl    rsi,0x2
  403a44:	call   4030c0 <realloc@plt>
  403a49:	mov    QWORD PTR [rbx+0x58],rax
  403a4d:	movsxd rcx,DWORD PTR [rbx+0x40]
  403a51:	mov    rax,QWORD PTR [rbx+0x48]
  403a55:	mov    QWORD PTR [rax+rcx*8],rbp
  403a59:	mov    rax,QWORD PTR [rbx+0x50]
  403a5d:	mov    QWORD PTR [rax+rcx*8],r15
  403a61:	mov    rax,QWORD PTR [rbx+0x58]
  403a65:	mov    DWORD PTR [rax+rcx*4],r14d
  403a69:	add    DWORD PTR [rbx+0x40],0x1
  403a6d:	add    rsp,0x8
  403a71:	pop    rbx
  403a72:	pop    r14
  403a74:	pop    r15
  403a76:	pop    rbp
  403a77:	ret    
  403a78:	xor    edx,edx
  403a7a:	mov    eax,ecx
  403a7c:	div    esi
  403a7e:	test   rdx,rdx
  403a81:	jne    403a51 <table_register_callback@@Base+0xb1>
  403a83:	jmp    403a0a <table_register_callback@@Base+0x6a>
  403a85:	test   eax,eax
  403a87:	jle    4039ed <table_register_callback@@Base+0x4d>
  403a8d:	mov    rcx,QWORD PTR [rbx+0x58]
  403a91:	or     DWORD PTR [rcx+rax*4],r14d
  403a95:	jmp    403a6d <table_register_callback@@Base+0xcd>
  403a97:	nop    WORD PTR [rax+rax*1+0x0]

0000000000403aa0 <table_unregister_callback@@Base>:
  403aa0:	push   r15
  403aa2:	push   r14
  403aa4:	push   rbx
  403aa5:	movsxd rcx,DWORD PTR [rdi+0x40]
  403aa9:	test   rcx,rcx
  403aac:	jle    403ad9 <table_unregister_callback@@Base+0x39>
  403aae:	mov    r15,rdi
  403ab1:	lea    r14,[rdi+0x48]
  403ab5:	mov    rdi,QWORD PTR [rdi+0x48]
  403ab9:	xor    eax,eax
  403abb:	nop    DWORD PTR [rax+rax*1+0x0]
  403ac0:	cmp    QWORD PTR [rdi+rax*8],rsi
  403ac4:	jne    403ad0 <table_unregister_callback@@Base+0x30>
  403ac6:	mov    rbx,QWORD PTR [r15+0x50]
  403aca:	cmp    QWORD PTR [rbx+rax*8],rdx
  403ace:	je     403adf <table_unregister_callback@@Base+0x3f>
  403ad0:	add    rax,0x1
  403ad4:	cmp    rax,rcx
  403ad7:	jl     403ac0 <table_unregister_callback@@Base+0x20>
  403ad9:	pop    rbx
  403ada:	pop    r14
  403adc:	pop    r15
  403ade:	ret    
  403adf:	cmp    eax,0xffffffff
  403ae2:	je     403ad9 <table_unregister_callback@@Base+0x39>
  403ae4:	add    ecx,0xffffffff
  403ae7:	cmp    ecx,eax
  403ae9:	jle    403b5a <table_unregister_callback@@Base+0xba>
  403aeb:	mov    rcx,QWORD PTR [rdi+rax*8+0x8]
  403af0:	mov    QWORD PTR [rdi+rax*8],rcx
  403af4:	mov    rcx,QWORD PTR [r15+0x50]
  403af8:	mov    rdx,QWORD PTR [rcx+rax*8+0x8]
  403afd:	mov    QWORD PTR [rcx+rax*8],rdx
  403b01:	mov    rcx,QWORD PTR [r15+0x58]
  403b05:	mov    edx,DWORD PTR [rcx+rax*4+0x4]
  403b09:	mov    DWORD PTR [rcx+rax*4],edx
  403b0c:	lea    rdx,[rax+0x1]
  403b10:	movsxd rax,DWORD PTR [r15+0x40]
  403b14:	add    rax,0xffffffffffffffff
  403b18:	mov    ecx,eax
  403b1a:	cmp    rdx,rax
  403b1d:	jge    403b5d <table_unregister_callback@@Base+0xbd>
  403b1f:	nop
  403b20:	mov    rax,QWORD PTR [r15+0x48]
  403b24:	mov    rcx,QWORD PTR [rax+rdx*8+0x8]
  403b29:	mov    QWORD PTR [rax+rdx*8],rcx
  403b2d:	mov    rax,QWORD PTR [r15+0x50]
  403b31:	mov    rcx,QWORD PTR [rax+rdx*8+0x8]
  403b36:	mov    QWORD PTR [rax+rdx*8],rcx
  403b3a:	mov    rax,QWORD PTR [r15+0x58]
  403b3e:	mov    ecx,DWORD PTR [rax+rdx*4+0x4]
  403b42:	mov    DWORD PTR [rax+rdx*4],ecx
  403b45:	lea    rdx,[rdx+0x1]
  403b49:	movsxd rax,DWORD PTR [r15+0x40]
  403b4d:	add    rax,0xffffffffffffffff
  403b51:	cmp    rdx,rax
  403b54:	jl     403b20 <table_unregister_callback@@Base+0x80>
  403b56:	mov    ecx,eax
  403b58:	jmp    403b5d <table_unregister_callback@@Base+0xbd>
  403b5a:	movsxd rax,ecx
  403b5d:	mov    DWORD PTR [r15+0x40],ecx
  403b61:	mov    rcx,QWORD PTR [r15+0x60]
  403b65:	mov    rdx,rax
  403b68:	or     rdx,rcx
  403b6b:	shr    rdx,0x20
  403b6f:	je     403b81 <table_unregister_callback@@Base+0xe1>
  403b71:	xor    edx,edx
  403b73:	div    rcx
  403b76:	test   rdx,rdx
  403b79:	jne    403ad9 <table_unregister_callback@@Base+0x39>
  403b7f:	jmp    403b8e <table_unregister_callback@@Base+0xee>
  403b81:	xor    edx,edx
  403b83:	div    ecx
  403b85:	test   rdx,rdx
  403b88:	jne    403ad9 <table_unregister_callback@@Base+0x39>
  403b8e:	mov    rdi,QWORD PTR [r15+0x48]
  403b92:	mov    rsi,QWORD PTR [r15+0x68]
  403b96:	sub    rsi,rcx
  403b99:	mov    QWORD PTR [r15+0x68],rsi
  403b9d:	je     403bdb <table_unregister_callback@@Base+0x13b>
  403b9f:	shl    rsi,0x3
  403ba3:	call   4030c0 <realloc@plt>
  403ba8:	mov    QWORD PTR [r15+0x48],rax
  403bac:	mov    rdi,QWORD PTR [r15+0x50]
  403bb0:	mov    rsi,QWORD PTR [r15+0x68]
  403bb4:	shl    rsi,0x3
  403bb8:	call   4030c0 <realloc@plt>
  403bbd:	mov    QWORD PTR [r15+0x50],rax
  403bc1:	mov    rdi,QWORD PTR [r15+0x58]
  403bc5:	mov    rsi,QWORD PTR [r15+0x68]
  403bc9:	shl    rsi,0x2
  403bcd:	call   4030c0 <realloc@plt>
  403bd2:	mov    QWORD PTR [r15+0x58],rax
  403bd6:	jmp    403ad9 <table_unregister_callback@@Base+0x39>
  403bdb:	call   403030 <free@plt>
  403be0:	mov    rdi,QWORD PTR [r15+0x50]
  403be4:	call   403030 <free@plt>
  403be9:	mov    rdi,QWORD PTR [r15+0x58]
  403bed:	call   403030 <free@plt>
  403bf2:	vxorps xmm0,xmm0,xmm0
  403bf6:	vmovups XMMWORD PTR [r14],xmm0
  403bfb:	mov    QWORD PTR [r14+0x10],0x0
  403c03:	jmp    403ad9 <table_unregister_callback@@Base+0x39>
  403c08:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403c10 <table_notify@@Base>:
  403c10:	push   rbp
  403c11:	push   r15
  403c13:	push   r14
  403c15:	push   r12
  403c17:	push   rbx
  403c18:	mov    eax,DWORD PTR [rdi+0x40]
  403c1b:	test   eax,eax
  403c1d:	jle    403c64 <table_notify@@Base+0x54>
  403c1f:	mov    r12d,ecx
  403c22:	mov    r14d,edx
  403c25:	mov    r15d,esi
  403c28:	mov    rbp,rdi
  403c2b:	xor    ebx,ebx
  403c2d:	nop    DWORD PTR [rax]
  403c30:	mov    rcx,QWORD PTR [rbp+0x58]
  403c34:	test   DWORD PTR [rcx+rbx*4],r12d
  403c38:	je     403c58 <table_notify@@Base+0x48>
  403c3a:	mov    rax,QWORD PTR [rbp+0x48]
  403c3e:	mov    rcx,QWORD PTR [rbp+0x50]
  403c42:	mov    r8,QWORD PTR [rcx+rbx*8]
  403c46:	mov    rdi,rbp
  403c49:	mov    esi,r15d
  403c4c:	mov    edx,r14d
  403c4f:	mov    ecx,r12d
  403c52:	call   QWORD PTR [rax+rbx*8]
  403c55:	mov    eax,DWORD PTR [rbp+0x40]
  403c58:	add    rbx,0x1
  403c5c:	movsxd rcx,eax
  403c5f:	cmp    rbx,rcx
  403c62:	jl     403c30 <table_notify@@Base+0x20>
  403c64:	pop    rbx
  403c65:	pop    r12
  403c67:	pop    r14
  403c69:	pop    r15
  403c6b:	pop    rbp
  403c6c:	ret    
  403c6d:	nop    DWORD PTR [rax]

0000000000403c70 <table_column_init@@Base>:
  403c70:	push   rbp
  403c71:	push   r15
  403c73:	push   r14
  403c75:	push   r12
  403c77:	push   rbx
  403c78:	mov    r14,r8
  403c7b:	mov    r15d,ecx
  403c7e:	mov    r12,rdx
  403c81:	mov    rbp,QWORD PTR [rdi]
  403c84:	movsxd rbx,esi
  403c87:	mov    rdi,rdx
  403c8a:	call   403060 <strlen@plt>
  403c8f:	lea    rdi,[rax+0x1]
  403c93:	call   4030a0 <malloc@plt>
  403c98:	lea    rbx,[rbx+rbx*2]
  403c9c:	mov    QWORD PTR [rbp+rbx*8+0x0],rax
  403ca1:	test   rax,rax
  403ca4:	je     403cb1 <table_column_init@@Base+0x41>
  403ca6:	mov    rdi,rax
  403ca9:	mov    rsi,r12
  403cac:	call   403040 <strcpy@plt>
  403cb1:	mov    DWORD PTR [rbp+rbx*8+0x8],r15d
  403cb6:	mov    QWORD PTR [rbp+rbx*8+0x10],r14
  403cbb:	pop    rbx
  403cbc:	pop    r12
  403cbe:	pop    r14
  403cc0:	pop    r15
  403cc2:	pop    rbp
  403cc3:	ret    
  403cc4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403cce:	xchg   ax,ax

0000000000403cd0 <table_get_col_ptr@@Base>:
  403cd0:	movsxd rax,esi
  403cd3:	lea    rax,[rax+rax*2]
  403cd7:	shl    rax,0x3
  403cdb:	add    rax,QWORD PTR [rdi]
  403cde:	ret    
  403cdf:	nop

0000000000403ce0 <table_column_destroy@@Base>:
  403ce0:	mov    rax,QWORD PTR [rdi]
  403ce3:	movsxd rcx,esi
  403ce6:	lea    rcx,[rcx+rcx*2]
  403cea:	mov    rdi,QWORD PTR [rax+rcx*8]
  403cee:	test   rdi,rdi
  403cf1:	je     403cf8 <table_column_destroy@@Base+0x18>
  403cf3:	jmp    403030 <free@plt>
  403cf8:	ret    
  403cf9:	nop    DWORD PTR [rax+0x0]

0000000000403d00 <table_get_column_length@@Base>:
  403d00:	mov    eax,DWORD PTR [rdi+0x8]
  403d03:	ret    
  403d04:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403d0e:	xchg   ax,ax

0000000000403d10 <table_get_column@@Base>:
  403d10:	push   r15
  403d12:	push   r14
  403d14:	push   r12
  403d16:	push   rbx
  403d17:	push   rax
  403d18:	movsxd r14,DWORD PTR [rdi+0x8]
  403d1c:	test   r14,r14
  403d1f:	jle    403d4e <table_get_column@@Base+0x3e>
  403d21:	mov    r15,rsi
  403d24:	mov    rbx,QWORD PTR [rdi]
  403d27:	xor    r12d,r12d
  403d2a:	nop    WORD PTR [rax+rax*1+0x0]
  403d30:	mov    rdi,QWORD PTR [rbx]
  403d33:	mov    rsi,r15
  403d36:	call   403090 <strcmp@plt>
  403d3b:	test   eax,eax
  403d3d:	je     403d51 <table_get_column@@Base+0x41>
  403d3f:	add    r12,0x1
  403d43:	add    rbx,0x18
  403d47:	cmp    r12,r14
  403d4a:	jl     403d30 <table_get_column@@Base+0x20>
  403d4c:	jmp    403d51 <table_get_column@@Base+0x41>
  403d4e:	xor    r12d,r12d
  403d51:	cmp    r12d,r14d
  403d54:	mov    eax,0xffffffff
  403d59:	cmovne eax,r12d
  403d5d:	add    rsp,0x8
  403d61:	pop    rbx
  403d62:	pop    r12
  403d64:	pop    r14
  403d66:	pop    r15
  403d68:	ret    
  403d69:	nop    DWORD PTR [rax+0x0]

0000000000403d70 <table_get_column_name@@Base>:
  403d70:	mov    rax,QWORD PTR [rdi]
  403d73:	movsxd rcx,esi
  403d76:	lea    rcx,[rcx+rcx*2]
  403d7a:	mov    rax,QWORD PTR [rax+rcx*8]
  403d7e:	ret    
  403d7f:	nop

0000000000403d80 <table_get_column_data_type@@Base>:
  403d80:	mov    rax,QWORD PTR [rdi]
  403d83:	movsxd rcx,esi
  403d86:	lea    rcx,[rcx+rcx*2]
  403d8a:	mov    eax,DWORD PTR [rax+rcx*8+0x8]
  403d8e:	ret    
  403d8f:	nop

0000000000403d90 <table_add_column@@Base>:
  403d90:	push   rbp
  403d91:	push   r15
  403d93:	push   r14
  403d95:	push   r13
  403d97:	push   r12
  403d99:	push   rbx
  403d9a:	sub    rsp,0x18
  403d9e:	mov    r15d,edx
  403da1:	mov    r13,rsi
  403da4:	mov    r12,rdi
  403da7:	movsxd rax,DWORD PTR [rdi+0x8]
  403dab:	mov    rcx,QWORD PTR [rdi+0x10]
  403daf:	mov    rdx,rax
  403db2:	or     rdx,rcx
  403db5:	shr    rdx,0x20
  403db9:	je     403dc7 <table_add_column@@Base+0x37>
  403dbb:	xor    edx,edx
  403dbd:	div    rcx
  403dc0:	test   rdx,rdx
  403dc3:	jne    403e29 <table_add_column@@Base+0x99>
  403dc5:	jmp    403dd0 <table_add_column@@Base+0x40>
  403dc7:	xor    edx,edx
  403dc9:	div    ecx
  403dcb:	test   rdx,rdx
  403dce:	jne    403e29 <table_add_column@@Base+0x99>
  403dd0:	add    rcx,QWORD PTR [r12+0x18]
  403dd5:	mov    QWORD PTR [r12+0x18],rcx
  403dda:	mov    rdi,QWORD PTR [r12]
  403dde:	shl    rcx,0x3
  403de2:	lea    rsi,[rcx+rcx*2]
  403de6:	call   4030c0 <realloc@plt>
  403deb:	mov    QWORD PTR [r12],rax
  403def:	mov    rdi,r12
  403df2:	call   404a10 <table_get_row_length@@Base>
  403df7:	test   eax,eax
  403df9:	jle    403e29 <table_add_column@@Base+0x99>
  403dfb:	mov    r14d,eax
  403dfe:	xor    ebp,ebp
  403e00:	mov    rdi,r12
  403e03:	mov    esi,ebp
  403e05:	call   404990 <table_get_row_ptr@@Base>
  403e0a:	mov    rbx,rax
  403e0d:	mov    rdi,QWORD PTR [rax]
  403e10:	mov    rsi,QWORD PTR [r12+0x18]
  403e15:	shl    rsi,0x3
  403e19:	call   4030c0 <realloc@plt>
  403e1e:	mov    QWORD PTR [rbx],rax
  403e21:	add    ebp,0x1
  403e24:	cmp    r14d,ebp
  403e27:	jne    403e00 <table_add_column@@Base+0x70>
  403e29:	mov    rdi,r12
  403e2c:	call   404a10 <table_get_row_length@@Base>
  403e31:	mov    r14d,eax
  403e34:	movsxd rbx,DWORD PTR [r12+0x8]
  403e39:	mov    DWORD PTR [rsp+0xc],r15d
  403e3e:	mov    edi,r15d
  403e41:	call   4047b0 <table_get_default_compare_function_for_data_type@@Base>
  403e46:	mov    QWORD PTR [rsp+0x10],rax
  403e4b:	mov    rbp,QWORD PTR [r12]
  403e4f:	mov    rdi,r13
  403e52:	call   403060 <strlen@plt>
  403e57:	lea    rdi,[rax+0x1]
  403e5b:	call   4030a0 <malloc@plt>
  403e60:	lea    r15,[rbx+rbx*2]
  403e64:	mov    QWORD PTR [rbp+r15*8+0x0],rax
  403e69:	test   rax,rax
  403e6c:	je     403e79 <table_add_column@@Base+0xe9>
  403e6e:	mov    rdi,rax
  403e71:	mov    rsi,r13
  403e74:	call   403040 <strcpy@plt>
  403e79:	mov    eax,DWORD PTR [rsp+0xc]
  403e7d:	mov    DWORD PTR [rbp+r15*8+0x8],eax
  403e82:	mov    rax,QWORD PTR [rsp+0x10]
  403e87:	mov    QWORD PTR [rbp+r15*8+0x10],rax
  403e8c:	test   r14d,r14d
  403e8f:	jle    403eb4 <table_add_column@@Base+0x124>
  403e91:	xor    ebp,ebp
  403e93:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403e9d:	nop    DWORD PTR [rax]
  403ea0:	mov    rdi,r12
  403ea3:	mov    esi,ebp
  403ea5:	mov    edx,ebx
  403ea7:	call   405b00 <table_cell_init@@Base>
  403eac:	add    ebp,0x1
  403eaf:	cmp    r14d,ebp
  403eb2:	jne    403ea0 <table_add_column@@Base+0x110>
  403eb4:	mov    edx,DWORD PTR [r12+0x8]
  403eb9:	mov    esi,0xffffffff
  403ebe:	mov    ecx,0x8
  403ec3:	mov    rdi,r12
  403ec6:	call   403c10 <table_notify@@Base>
  403ecb:	mov    eax,DWORD PTR [r12+0x8]
  403ed0:	lea    ecx,[rax+0x1]
  403ed3:	mov    DWORD PTR [r12+0x8],ecx
  403ed8:	add    rsp,0x18
  403edc:	pop    rbx
  403edd:	pop    r12
  403edf:	pop    r13
  403ee1:	pop    r14
  403ee3:	pop    r15
  403ee5:	pop    rbp
  403ee6:	ret    
  403ee7:	nop    WORD PTR [rax+rax*1+0x0]

0000000000403ef0 <table_remove_column@@Base>:
  403ef0:	push   rbp
  403ef1:	push   r15
  403ef3:	push   r14
  403ef5:	push   r13
  403ef7:	push   r12
  403ef9:	push   rbx
  403efa:	sub    rsp,0x28
  403efe:	mov    r14d,esi
  403f01:	mov    r12,rdi
  403f04:	mov    rax,QWORD PTR [rdi]
  403f07:	movsxd r15,esi
  403f0a:	lea    rcx,[r15+r15*2]
  403f0e:	mov    rdi,QWORD PTR [rax+rcx*8]
  403f12:	test   rdi,rdi
  403f15:	je     403f1c <table_remove_column@@Base+0x2c>
  403f17:	call   403030 <free@plt>
  403f1c:	mov    eax,DWORD PTR [r12+0x8]
  403f21:	add    eax,0xffffffff
  403f24:	mov    DWORD PTR [rsp+0xc],eax
  403f28:	sub    eax,r14d
  403f2b:	mov    QWORD PTR [rsp+0x10],rax
  403f30:	jle    4040c4 <table_remove_column@@Base+0x1d4>
  403f36:	movsxd rax,DWORD PTR [rsp+0xc]
  403f3b:	mov    rcx,r15
  403f3e:	not    rcx
  403f41:	add    rcx,rax
  403f44:	mov    rdx,QWORD PTR [rsp+0x10]
  403f49:	mov    rsi,r15
  403f4c:	and    rdx,0x7
  403f50:	je     403f9d <table_remove_column@@Base+0xad>
  403f52:	lea    rsi,[r15*8+0x0]
  403f5a:	lea    rsi,[rsi+rsi*2]
  403f5e:	neg    rdx
  403f61:	xor    edi,edi
  403f63:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403f6d:	nop    DWORD PTR [rax]
  403f70:	mov    rbp,QWORD PTR [r12]
  403f74:	mov    rbx,QWORD PTR [rbp+rsi*1+0x28]
  403f79:	mov    QWORD PTR [rbp+rsi*1+0x10],rbx
  403f7e:	vmovups xmm0,XMMWORD PTR [rbp+rsi*1+0x18]
  403f84:	vmovups XMMWORD PTR [rbp+rsi*1+0x0],xmm0
  403f8a:	add    rdi,0xffffffffffffffff
  403f8e:	add    rsi,0x18
  403f92:	cmp    rdx,rdi
  403f95:	jne    403f70 <table_remove_column@@Base+0x80>
  403f97:	mov    rsi,r15
  403f9a:	sub    rsi,rdi
  403f9d:	cmp    rcx,0x7
  403fa1:	jb     4040c4 <table_remove_column@@Base+0x1d4>
  403fa7:	sub    rax,rsi
  403faa:	shl    rsi,0x3
  403fae:	lea    rcx,[rsi+rsi*2]
  403fb2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403fbc:	nop    DWORD PTR [rax+0x0]
  403fc0:	mov    rdx,QWORD PTR [r12]
  403fc4:	mov    rsi,QWORD PTR [rdx+rcx*1+0x28]
  403fc9:	mov    QWORD PTR [rdx+rcx*1+0x10],rsi
  403fce:	vmovups xmm0,XMMWORD PTR [rdx+rcx*1+0x18]
  403fd4:	vmovups XMMWORD PTR [rdx+rcx*1],xmm0
  403fd9:	mov    rdx,QWORD PTR [r12]
  403fdd:	mov    rsi,QWORD PTR [rdx+rcx*1+0x40]
  403fe2:	mov    QWORD PTR [rdx+rcx*1+0x28],rsi
  403fe7:	vmovups xmm0,XMMWORD PTR [rdx+rcx*1+0x30]
  403fed:	vmovups XMMWORD PTR [rdx+rcx*1+0x18],xmm0
  403ff3:	mov    rdx,QWORD PTR [r12]
  403ff7:	mov    rsi,QWORD PTR [rdx+rcx*1+0x58]
  403ffc:	mov    QWORD PTR [rdx+rcx*1+0x40],rsi
  404001:	vmovups xmm0,XMMWORD PTR [rdx+rcx*1+0x48]
  404007:	vmovups XMMWORD PTR [rdx+rcx*1+0x30],xmm0
  40400d:	mov    rdx,QWORD PTR [r12]
  404011:	mov    rsi,QWORD PTR [rdx+rcx*1+0x70]
  404016:	mov    QWORD PTR [rdx+rcx*1+0x58],rsi
  40401b:	vmovups xmm0,XMMWORD PTR [rdx+rcx*1+0x60]
  404021:	vmovups XMMWORD PTR [rdx+rcx*1+0x48],xmm0
  404027:	mov    rdx,QWORD PTR [r12]
  40402b:	mov    rsi,QWORD PTR [rdx+rcx*1+0x88]
  404033:	mov    QWORD PTR [rdx+rcx*1+0x70],rsi
  404038:	vmovups xmm0,XMMWORD PTR [rdx+rcx*1+0x78]
  40403e:	vmovups XMMWORD PTR [rdx+rcx*1+0x60],xmm0
  404044:	mov    rdx,QWORD PTR [r12]
  404048:	vmovups xmm0,XMMWORD PTR [rdx+rcx*1+0x90]
  404051:	vmovups XMMWORD PTR [rdx+rcx*1+0x78],xmm0
  404057:	mov    rsi,QWORD PTR [rdx+rcx*1+0xa0]
  40405f:	mov    QWORD PTR [rdx+rcx*1+0x88],rsi
  404067:	mov    rdx,QWORD PTR [r12]
  40406b:	mov    rsi,QWORD PTR [rdx+rcx*1+0xb8]
  404073:	mov    QWORD PTR [rdx+rcx*1+0xa0],rsi
  40407b:	vmovups xmm0,XMMWORD PTR [rdx+rcx*1+0xa8]
  404084:	vmovups XMMWORD PTR [rdx+rcx*1+0x90],xmm0
  40408d:	mov    rdx,QWORD PTR [r12]
  404091:	mov    rsi,QWORD PTR [rdx+rcx*1+0xd0]
  404099:	mov    QWORD PTR [rdx+rcx*1+0xb8],rsi
  4040a1:	vmovups xmm0,XMMWORD PTR [rdx+rcx*1+0xc0]
  4040aa:	vmovups XMMWORD PTR [rdx+rcx*1+0xa8],xmm0
  4040b3:	add    rcx,0xc0
  4040ba:	add    rax,0xfffffffffffffff8
  4040be:	jne    403fc0 <table_remove_column@@Base+0xd0>
  4040c4:	mov    rbx,r15
  4040c7:	mov    rdi,r12
  4040ca:	call   404a10 <table_get_row_length@@Base>
  4040cf:	test   eax,eax
  4040d1:	jle    4041ec <table_remove_column@@Base+0x2fc>
  4040d7:	mov    r15d,eax
  4040da:	movsxd r13,DWORD PTR [rsp+0xc]
  4040df:	mov    rax,rbx
  4040e2:	not    rax
  4040e5:	add    rax,r13
  4040e8:	mov    QWORD PTR [rsp+0x20],rax
  4040ed:	mov    rax,QWORD PTR [rsp+0x10]
  4040f2:	and    eax,0x7
  4040f5:	mov    QWORD PTR [rsp+0x10],rax
  4040fa:	neg    rax
  4040fd:	mov    QWORD PTR [rsp+0x18],rax
  404102:	xor    ebp,ebp
  404104:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40410e:	xchg   ax,ax
  404110:	mov    rdi,r12
  404113:	mov    esi,ebp
  404115:	mov    edx,r14d
  404118:	call   405b40 <table_cell_destroy@@Base>
  40411d:	mov    rdi,r12
  404120:	mov    esi,ebp
  404122:	call   404990 <table_get_row_ptr@@Base>
  404127:	cmp    DWORD PTR [rsp+0xc],r14d
  40412c:	jle    4041e0 <table_remove_column@@Base+0x2f0>
  404132:	mov    rcx,rbx
  404135:	cmp    QWORD PTR [rsp+0x10],0x0
  40413b:	je     404166 <table_remove_column@@Base+0x276>
  40413d:	mov    rdx,QWORD PTR [rsp+0x18]
  404142:	mov    rcx,rbx
  404145:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40414f:	nop
  404150:	mov    rsi,QWORD PTR [rax]
  404153:	mov    rdi,QWORD PTR [rsi+rcx*8+0x8]
  404158:	mov    QWORD PTR [rsi+rcx*8],rdi
  40415c:	add    rcx,0x1
  404160:	add    rdx,0x1
  404164:	jne    404150 <table_remove_column@@Base+0x260>
  404166:	cmp    QWORD PTR [rsp+0x20],0x7
  40416c:	jb     4041e0 <table_remove_column@@Base+0x2f0>
  40416e:	xchg   ax,ax
  404170:	mov    rdx,QWORD PTR [rax]
  404173:	mov    rsi,QWORD PTR [rdx+rcx*8+0x8]
  404178:	mov    QWORD PTR [rdx+rcx*8],rsi
  40417c:	mov    rdx,QWORD PTR [rax]
  40417f:	mov    rsi,QWORD PTR [rdx+rcx*8+0x10]
  404184:	mov    QWORD PTR [rdx+rcx*8+0x8],rsi
  404189:	mov    rdx,QWORD PTR [rax]
  40418c:	mov    rsi,QWORD PTR [rdx+rcx*8+0x18]
  404191:	mov    QWORD PTR [rdx+rcx*8+0x10],rsi
  404196:	mov    rdx,QWORD PTR [rax]
  404199:	mov    rsi,QWORD PTR [rdx+rcx*8+0x20]
  40419e:	mov    QWORD PTR [rdx+rcx*8+0x18],rsi
  4041a3:	mov    rdx,QWORD PTR [rax]
  4041a6:	mov    rsi,QWORD PTR [rdx+rcx*8+0x28]
  4041ab:	mov    QWORD PTR [rdx+rcx*8+0x20],rsi
  4041b0:	mov    rdx,QWORD PTR [rax]
  4041b3:	mov    rsi,QWORD PTR [rdx+rcx*8+0x30]
  4041b8:	mov    QWORD PTR [rdx+rcx*8+0x28],rsi
  4041bd:	mov    rdx,QWORD PTR [rax]
  4041c0:	mov    rsi,QWORD PTR [rdx+rcx*8+0x38]
  4041c5:	mov    QWORD PTR [rdx+rcx*8+0x30],rsi
  4041ca:	mov    rdx,QWORD PTR [rax]
  4041cd:	mov    rsi,QWORD PTR [rdx+rcx*8+0x40]
  4041d2:	mov    QWORD PTR [rdx+rcx*8+0x38],rsi
  4041d7:	add    rcx,0x8
  4041db:	cmp    r13,rcx
  4041de:	jne    404170 <table_remove_column@@Base+0x280>
  4041e0:	add    ebp,0x1
  4041e3:	cmp    ebp,r15d
  4041e6:	jne    404110 <table_remove_column@@Base+0x220>
  4041ec:	movsxd rax,DWORD PTR [r12+0x8]
  4041f1:	add    rax,0xffffffffffffffff
  4041f5:	mov    DWORD PTR [r12+0x8],eax
  4041fa:	mov    rcx,QWORD PTR [r12+0x10]
  4041ff:	mov    rdx,rax
  404202:	or     rdx,rcx
  404205:	shr    rdx,0x20
  404209:	je     404217 <table_remove_column@@Base+0x327>
  40420b:	xor    edx,edx
  40420d:	div    rcx
  404210:	test   rdx,rdx
  404213:	jne    404289 <table_remove_column@@Base+0x399>
  404215:	jmp    404220 <table_remove_column@@Base+0x330>
  404217:	xor    edx,edx
  404219:	div    ecx
  40421b:	test   rdx,rdx
  40421e:	jne    404289 <table_remove_column@@Base+0x399>
  404220:	mov    rdi,QWORD PTR [r12]
  404224:	mov    rax,QWORD PTR [r12+0x18]
  404229:	sub    rax,rcx
  40422c:	mov    QWORD PTR [r12+0x18],rax
  404231:	shl    rax,0x3
  404235:	lea    rsi,[rax+rax*2]
  404239:	call   4030c0 <realloc@plt>
  40423e:	mov    QWORD PTR [r12],rax
  404242:	mov    rdi,r12
  404245:	call   404a10 <table_get_row_length@@Base>
  40424a:	test   eax,eax
  40424c:	jle    404289 <table_remove_column@@Base+0x399>
  40424e:	mov    r15d,eax
  404251:	xor    ebp,ebp
  404253:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40425d:	nop    DWORD PTR [rax]
  404260:	mov    rdi,r12
  404263:	mov    esi,ebp
  404265:	call   404990 <table_get_row_ptr@@Base>
  40426a:	mov    rbx,rax
  40426d:	mov    rdi,QWORD PTR [rax]
  404270:	mov    rsi,QWORD PTR [r12+0x18]
  404275:	shl    rsi,0x3
  404279:	call   4030c0 <realloc@plt>
  40427e:	mov    QWORD PTR [rbx],rax
  404281:	add    ebp,0x1
  404284:	cmp    r15d,ebp
  404287:	jne    404260 <table_remove_column@@Base+0x370>
  404289:	mov    esi,0xffffffff
  40428e:	mov    ecx,0x10
  404293:	mov    rdi,r12
  404296:	mov    edx,r14d
  404299:	call   403c10 <table_notify@@Base>
  40429e:	xor    eax,eax
  4042a0:	add    rsp,0x28
  4042a4:	pop    rbx
  4042a5:	pop    r12
  4042a7:	pop    r13
  4042a9:	pop    r14
  4042ab:	pop    r15
  4042ad:	pop    rbp
  4042ae:	ret    
  4042af:	nop

00000000004042b0 <table_get_column_compare_function@@Base>:
  4042b0:	mov    rax,QWORD PTR [rdi]
  4042b3:	movsxd rcx,esi
  4042b6:	lea    rcx,[rcx+rcx*2]
  4042ba:	mov    rax,QWORD PTR [rax+rcx*8+0x10]
  4042bf:	ret    

00000000004042c0 <table_set_column_compare_function@@Base>:
  4042c0:	mov    rax,QWORD PTR [rdi]
  4042c3:	movsxd rcx,esi
  4042c6:	lea    rcx,[rcx+rcx*2]
  4042ca:	mov    QWORD PTR [rax+rcx*8+0x10],rdx
  4042cf:	ret    

00000000004042d0 <table_compare_bool@@Base>:
  4042d0:	test   rdi,rdi
  4042d3:	je     4042ed <table_compare_bool@@Base+0x1d>
  4042d5:	test   rsi,rsi
  4042d8:	je     4042f3 <table_compare_bool@@Base+0x23>
  4042da:	mov    al,BYTE PTR [rdi]
  4042dc:	mov    cl,BYTE PTR [rsi]
  4042de:	cmp    al,cl
  4042e0:	sbb    edx,edx
  4042e2:	cmp    al,cl
  4042e4:	mov    eax,0x1
  4042e9:	cmovbe eax,edx
  4042ec:	ret    
  4042ed:	neg    rsi
  4042f0:	sbb    eax,eax
  4042f2:	ret    
  4042f3:	mov    eax,0x1
  4042f8:	ret    
  4042f9:	nop    DWORD PTR [rax+0x0]

0000000000404300 <table_compare_int@@Base>:
  404300:	test   rdi,rdi
  404303:	je     404322 <table_compare_int@@Base+0x22>
  404305:	test   rsi,rsi
  404308:	je     404328 <table_compare_int@@Base+0x28>
  40430a:	mov    eax,DWORD PTR [rdi]
  40430c:	mov    ecx,DWORD PTR [rsi]
  40430e:	xor    edx,edx
  404310:	cmp    eax,ecx
  404312:	setl   dl
  404315:	neg    edx
  404317:	cmp    eax,ecx
  404319:	mov    eax,0x1
  40431e:	cmovle eax,edx
  404321:	ret    
  404322:	neg    rsi
  404325:	sbb    eax,eax
  404327:	ret    
  404328:	mov    eax,0x1
  40432d:	ret    
  40432e:	xchg   ax,ax

0000000000404330 <table_compare_uint@@Base>:
  404330:	test   rdi,rdi
  404333:	je     40434d <table_compare_uint@@Base+0x1d>
  404335:	test   rsi,rsi
  404338:	je     404353 <table_compare_uint@@Base+0x23>
  40433a:	mov    eax,DWORD PTR [rdi]
  40433c:	mov    ecx,DWORD PTR [rsi]
  40433e:	cmp    eax,ecx
  404340:	sbb    edx,edx
  404342:	cmp    eax,ecx
  404344:	mov    eax,0x1
  404349:	cmovbe eax,edx
  40434c:	ret    
  40434d:	neg    rsi
  404350:	sbb    eax,eax
  404352:	ret    
  404353:	mov    eax,0x1
  404358:	ret    
  404359:	nop    DWORD PTR [rax+0x0]

0000000000404360 <table_compare_int8@@Base>:
  404360:	test   rdi,rdi
  404363:	je     404382 <table_compare_int8@@Base+0x22>
  404365:	test   rsi,rsi
  404368:	je     404388 <table_compare_int8@@Base+0x28>
  40436a:	mov    al,BYTE PTR [rdi]
  40436c:	mov    cl,BYTE PTR [rsi]
  40436e:	xor    edx,edx
  404370:	cmp    al,cl
  404372:	setl   dl
  404375:	neg    edx
  404377:	cmp    al,cl
  404379:	mov    eax,0x1
  40437e:	cmovle eax,edx
  404381:	ret    
  404382:	neg    rsi
  404385:	sbb    eax,eax
  404387:	ret    
  404388:	mov    eax,0x1
  40438d:	ret    
  40438e:	xchg   ax,ax

0000000000404390 <table_compare_uint8@@Base>:
  404390:	test   rdi,rdi
  404393:	je     4043ad <table_compare_uint8@@Base+0x1d>
  404395:	test   rsi,rsi
  404398:	je     4043b3 <table_compare_uint8@@Base+0x23>
  40439a:	mov    al,BYTE PTR [rdi]
  40439c:	mov    cl,BYTE PTR [rsi]
  40439e:	cmp    al,cl
  4043a0:	sbb    edx,edx
  4043a2:	cmp    al,cl
  4043a4:	mov    eax,0x1
  4043a9:	cmovbe eax,edx
  4043ac:	ret    
  4043ad:	neg    rsi
  4043b0:	sbb    eax,eax
  4043b2:	ret    
  4043b3:	mov    eax,0x1
  4043b8:	ret    
  4043b9:	nop    DWORD PTR [rax+0x0]

00000000004043c0 <table_compare_int16@@Base>:
  4043c0:	test   rdi,rdi
  4043c3:	je     4043e6 <table_compare_int16@@Base+0x26>
  4043c5:	test   rsi,rsi
  4043c8:	je     4043ec <table_compare_int16@@Base+0x2c>
  4043ca:	movzx  eax,WORD PTR [rdi]
  4043cd:	movzx  ecx,WORD PTR [rsi]
  4043d0:	xor    edx,edx
  4043d2:	cmp    ax,cx
  4043d5:	setl   dl
  4043d8:	neg    edx
  4043da:	cmp    ax,cx
  4043dd:	mov    eax,0x1
  4043e2:	cmovle eax,edx
  4043e5:	ret    
  4043e6:	neg    rsi
  4043e9:	sbb    eax,eax
  4043eb:	ret    
  4043ec:	mov    eax,0x1
  4043f1:	ret    
  4043f2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4043fc:	nop    DWORD PTR [rax+0x0]

0000000000404400 <table_compare_uint16@@Base>:
  404400:	test   rdi,rdi
  404403:	je     404421 <table_compare_uint16@@Base+0x21>
  404405:	test   rsi,rsi
  404408:	je     404427 <table_compare_uint16@@Base+0x27>
  40440a:	movzx  eax,WORD PTR [rdi]
  40440d:	movzx  ecx,WORD PTR [rsi]
  404410:	cmp    ax,cx
  404413:	sbb    edx,edx
  404415:	cmp    ax,cx
  404418:	mov    eax,0x1
  40441d:	cmovbe eax,edx
  404420:	ret    
  404421:	neg    rsi
  404424:	sbb    eax,eax
  404426:	ret    
  404427:	mov    eax,0x1
  40442c:	ret    
  40442d:	nop    DWORD PTR [rax]

0000000000404430 <table_compare_int32@@Base>:
  404430:	test   rdi,rdi
  404433:	je     404452 <table_compare_int32@@Base+0x22>
  404435:	test   rsi,rsi
  404438:	je     404458 <table_compare_int32@@Base+0x28>
  40443a:	mov    eax,DWORD PTR [rdi]
  40443c:	mov    ecx,DWORD PTR [rsi]
  40443e:	xor    edx,edx
  404440:	cmp    eax,ecx
  404442:	setl   dl
  404445:	neg    edx
  404447:	cmp    eax,ecx
  404449:	mov    eax,0x1
  40444e:	cmovle eax,edx
  404451:	ret    
  404452:	neg    rsi
  404455:	sbb    eax,eax
  404457:	ret    
  404458:	mov    eax,0x1
  40445d:	ret    
  40445e:	xchg   ax,ax

0000000000404460 <table_compare_uint32@@Base>:
  404460:	test   rdi,rdi
  404463:	je     40447d <table_compare_uint32@@Base+0x1d>
  404465:	test   rsi,rsi
  404468:	je     404483 <table_compare_uint32@@Base+0x23>
  40446a:	mov    eax,DWORD PTR [rdi]
  40446c:	mov    ecx,DWORD PTR [rsi]
  40446e:	cmp    eax,ecx
  404470:	sbb    edx,edx
  404472:	cmp    eax,ecx
  404474:	mov    eax,0x1
  404479:	cmovbe eax,edx
  40447c:	ret    
  40447d:	neg    rsi
  404480:	sbb    eax,eax
  404482:	ret    
  404483:	mov    eax,0x1
  404488:	ret    
  404489:	nop    DWORD PTR [rax+0x0]

0000000000404490 <table_compare_int64@@Base>:
  404490:	test   rdi,rdi
  404493:	je     4044b6 <table_compare_int64@@Base+0x26>
  404495:	test   rsi,rsi
  404498:	je     4044bc <table_compare_int64@@Base+0x2c>
  40449a:	mov    rax,QWORD PTR [rdi]
  40449d:	mov    rcx,QWORD PTR [rsi]
  4044a0:	xor    edx,edx
  4044a2:	cmp    rax,rcx
  4044a5:	setl   dl
  4044a8:	neg    edx
  4044aa:	cmp    rax,rcx
  4044ad:	mov    eax,0x1
  4044b2:	cmovle eax,edx
  4044b5:	ret    
  4044b6:	neg    rsi
  4044b9:	sbb    eax,eax
  4044bb:	ret    
  4044bc:	mov    eax,0x1
  4044c1:	ret    
  4044c2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4044cc:	nop    DWORD PTR [rax+0x0]

00000000004044d0 <table_compare_uint64@@Base>:
  4044d0:	test   rdi,rdi
  4044d3:	je     4044f1 <table_compare_uint64@@Base+0x21>
  4044d5:	test   rsi,rsi
  4044d8:	je     4044f7 <table_compare_uint64@@Base+0x27>
  4044da:	mov    rax,QWORD PTR [rdi]
  4044dd:	mov    rcx,QWORD PTR [rsi]
  4044e0:	cmp    rax,rcx
  4044e3:	sbb    edx,edx
  4044e5:	cmp    rax,rcx
  4044e8:	mov    eax,0x1
  4044ed:	cmovbe eax,edx
  4044f0:	ret    
  4044f1:	neg    rsi
  4044f4:	sbb    eax,eax
  4044f6:	ret    
  4044f7:	mov    eax,0x1
  4044fc:	ret    
  4044fd:	nop    DWORD PTR [rax]

0000000000404500 <table_compare_short@@Base>:
  404500:	test   rdi,rdi
  404503:	je     404526 <table_compare_short@@Base+0x26>
  404505:	test   rsi,rsi
  404508:	je     40452c <table_compare_short@@Base+0x2c>
  40450a:	movzx  eax,WORD PTR [rdi]
  40450d:	movzx  ecx,WORD PTR [rsi]
  404510:	xor    edx,edx
  404512:	cmp    ax,cx
  404515:	setl   dl
  404518:	neg    edx
  40451a:	cmp    ax,cx
  40451d:	mov    eax,0x1
  404522:	cmovle eax,edx
  404525:	ret    
  404526:	neg    rsi
  404529:	sbb    eax,eax
  40452b:	ret    
  40452c:	mov    eax,0x1
  404531:	ret    
  404532:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40453c:	nop    DWORD PTR [rax+0x0]

0000000000404540 <table_compare_ushort@@Base>:
  404540:	test   rdi,rdi
  404543:	je     404561 <table_compare_ushort@@Base+0x21>
  404545:	test   rsi,rsi
  404548:	je     404567 <table_compare_ushort@@Base+0x27>
  40454a:	movzx  eax,WORD PTR [rdi]
  40454d:	movzx  ecx,WORD PTR [rsi]
  404550:	cmp    ax,cx
  404553:	sbb    edx,edx
  404555:	cmp    ax,cx
  404558:	mov    eax,0x1
  40455d:	cmovbe eax,edx
  404560:	ret    
  404561:	neg    rsi
  404564:	sbb    eax,eax
  404566:	ret    
  404567:	mov    eax,0x1
  40456c:	ret    
  40456d:	nop    DWORD PTR [rax]

0000000000404570 <table_compare_long@@Base>:
  404570:	test   rdi,rdi
  404573:	je     404596 <table_compare_long@@Base+0x26>
  404575:	test   rsi,rsi
  404578:	je     40459c <table_compare_long@@Base+0x2c>
  40457a:	mov    rax,QWORD PTR [rdi]
  40457d:	mov    rcx,QWORD PTR [rsi]
  404580:	xor    edx,edx
  404582:	cmp    rax,rcx
  404585:	setl   dl
  404588:	neg    edx
  40458a:	cmp    rax,rcx
  40458d:	mov    eax,0x1
  404592:	cmovle eax,edx
  404595:	ret    
  404596:	neg    rsi
  404599:	sbb    eax,eax
  40459b:	ret    
  40459c:	mov    eax,0x1
  4045a1:	ret    
  4045a2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4045ac:	nop    DWORD PTR [rax+0x0]

00000000004045b0 <table_compare_ulong@@Base>:
  4045b0:	test   rdi,rdi
  4045b3:	je     4045d1 <table_compare_ulong@@Base+0x21>
  4045b5:	test   rsi,rsi
  4045b8:	je     4045d7 <table_compare_ulong@@Base+0x27>
  4045ba:	mov    rax,QWORD PTR [rdi]
  4045bd:	mov    rcx,QWORD PTR [rsi]
  4045c0:	cmp    rax,rcx
  4045c3:	sbb    edx,edx
  4045c5:	cmp    rax,rcx
  4045c8:	mov    eax,0x1
  4045cd:	cmovbe eax,edx
  4045d0:	ret    
  4045d1:	neg    rsi
  4045d4:	sbb    eax,eax
  4045d6:	ret    
  4045d7:	mov    eax,0x1
  4045dc:	ret    
  4045dd:	nop    DWORD PTR [rax]

00000000004045e0 <table_compare_llong@@Base>:
  4045e0:	test   rdi,rdi
  4045e3:	je     404606 <table_compare_llong@@Base+0x26>
  4045e5:	test   rsi,rsi
  4045e8:	je     40460c <table_compare_llong@@Base+0x2c>
  4045ea:	mov    rax,QWORD PTR [rdi]
  4045ed:	mov    rcx,QWORD PTR [rsi]
  4045f0:	xor    edx,edx
  4045f2:	cmp    rax,rcx
  4045f5:	setl   dl
  4045f8:	neg    edx
  4045fa:	cmp    rax,rcx
  4045fd:	mov    eax,0x1
  404602:	cmovle eax,edx
  404605:	ret    
  404606:	neg    rsi
  404609:	sbb    eax,eax
  40460b:	ret    
  40460c:	mov    eax,0x1
  404611:	ret    
  404612:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40461c:	nop    DWORD PTR [rax+0x0]

0000000000404620 <table_compare_ullong@@Base>:
  404620:	test   rdi,rdi
  404623:	je     404641 <table_compare_ullong@@Base+0x21>
  404625:	test   rsi,rsi
  404628:	je     404647 <table_compare_ullong@@Base+0x27>
  40462a:	mov    rax,QWORD PTR [rdi]
  40462d:	mov    rcx,QWORD PTR [rsi]
  404630:	cmp    rax,rcx
  404633:	sbb    edx,edx
  404635:	cmp    rax,rcx
  404638:	mov    eax,0x1
  40463d:	cmovbe eax,edx
  404640:	ret    
  404641:	neg    rsi
  404644:	sbb    eax,eax
  404646:	ret    
  404647:	mov    eax,0x1
  40464c:	ret    
  40464d:	nop    DWORD PTR [rax]

0000000000404650 <table_compare_float@@Base>:
  404650:	test   rdi,rdi
  404653:	je     40467a <table_compare_float@@Base+0x2a>
  404655:	test   rsi,rsi
  404658:	je     404680 <table_compare_float@@Base+0x30>
  40465a:	vmovss xmm0,DWORD PTR [rdi]
  40465e:	vmovss xmm1,DWORD PTR [rsi]
  404662:	xor    ecx,ecx
  404664:	vucomiss xmm1,xmm0
  404668:	seta   cl
  40466b:	neg    ecx
  40466d:	vucomiss xmm0,xmm1
  404671:	mov    eax,0x1
  404676:	cmovbe eax,ecx
  404679:	ret    
  40467a:	neg    rsi
  40467d:	sbb    eax,eax
  40467f:	ret    
  404680:	mov    eax,0x1
  404685:	ret    
  404686:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000404690 <table_compare_double@@Base>:
  404690:	test   rdi,rdi
  404693:	je     4046ba <table_compare_double@@Base+0x2a>
  404695:	test   rsi,rsi
  404698:	je     4046c0 <table_compare_double@@Base+0x30>
  40469a:	vmovsd xmm0,QWORD PTR [rdi]
  40469e:	vmovsd xmm1,QWORD PTR [rsi]
  4046a2:	xor    ecx,ecx
  4046a4:	vucomisd xmm1,xmm0
  4046a8:	seta   cl
  4046ab:	neg    ecx
  4046ad:	vucomisd xmm0,xmm1
  4046b1:	mov    eax,0x1
  4046b6:	cmovbe eax,ecx
  4046b9:	ret    
  4046ba:	neg    rsi
  4046bd:	sbb    eax,eax
  4046bf:	ret    
  4046c0:	mov    eax,0x1
  4046c5:	ret    
  4046c6:	nop    WORD PTR cs:[rax+rax*1+0x0]

00000000004046d0 <table_compare_ldouble@@Base>:
  4046d0:	test   rdi,rdi
  4046d3:	je     4046f6 <table_compare_ldouble@@Base+0x26>
  4046d5:	test   rsi,rsi
  4046d8:	je     4046fc <table_compare_ldouble@@Base+0x2c>
  4046da:	fld    TBYTE PTR [rdi]
  4046dc:	fld    TBYTE PTR [rsi]
  4046de:	xor    ecx,ecx
  4046e0:	fucomi st,st(1)
  4046e2:	seta   cl
  4046e5:	neg    ecx
  4046e7:	fxch   st(1)
  4046e9:	fucomip st,st(1)
  4046eb:	fstp   st(0)
  4046ed:	mov    eax,0x1
  4046f2:	cmovbe eax,ecx
  4046f5:	ret    
  4046f6:	neg    rsi
  4046f9:	sbb    eax,eax
  4046fb:	ret    
  4046fc:	mov    eax,0x1
  404701:	ret    
  404702:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40470c:	nop    DWORD PTR [rax+0x0]

0000000000404710 <table_compare_char@@Base>:
  404710:	test   rdi,rdi
  404713:	je     404732 <table_compare_char@@Base+0x22>
  404715:	test   rsi,rsi
  404718:	je     404738 <table_compare_char@@Base+0x28>
  40471a:	mov    al,BYTE PTR [rdi]
  40471c:	mov    cl,BYTE PTR [rsi]
  40471e:	xor    edx,edx
  404720:	cmp    al,cl
  404722:	setl   dl
  404725:	neg    edx
  404727:	cmp    al,cl
  404729:	mov    eax,0x1
  40472e:	cmovle eax,edx
  404731:	ret    
  404732:	neg    rsi
  404735:	sbb    eax,eax
  404737:	ret    
  404738:	mov    eax,0x1
  40473d:	ret    
  40473e:	xchg   ax,ax

0000000000404740 <table_compare_uchar@@Base>:
  404740:	test   rdi,rdi
  404743:	je     40475d <table_compare_uchar@@Base+0x1d>
  404745:	test   rsi,rsi
  404748:	je     404763 <table_compare_uchar@@Base+0x23>
  40474a:	mov    al,BYTE PTR [rdi]
  40474c:	mov    cl,BYTE PTR [rsi]
  40474e:	cmp    al,cl
  404750:	sbb    edx,edx
  404752:	cmp    al,cl
  404754:	mov    eax,0x1
  404759:	cmovbe eax,edx
  40475c:	ret    
  40475d:	neg    rsi
  404760:	sbb    eax,eax
  404762:	ret    
  404763:	mov    eax,0x1
  404768:	ret    
  404769:	nop    DWORD PTR [rax+0x0]

0000000000404770 <table_compare_string@@Base>:
  404770:	test   rdi,rdi
  404773:	je     40477f <table_compare_string@@Base+0xf>
  404775:	test   rsi,rsi
  404778:	je     404785 <table_compare_string@@Base+0x15>
  40477a:	jmp    403090 <strcmp@plt>
  40477f:	neg    rsi
  404782:	sbb    eax,eax
  404784:	ret    
  404785:	mov    eax,0x1
  40478a:	ret    
  40478b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000404790 <table_compare_ptr@@Base>:
  404790:	cmp    rdi,rsi
  404793:	sbb    ecx,ecx
  404795:	cmp    rdi,rsi
  404798:	mov    eax,0x1
  40479d:	cmovbe eax,ecx
  4047a0:	ret    
  4047a1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4047ab:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004047b0 <table_get_default_compare_function_for_data_type@@Base>:
  4047b0:	cmp    edi,0x17
  4047b3:	ja     4047c4 <table_get_default_compare_function_for_data_type@@Base+0x14>
  4047b5:	movsxd rax,edi
  4047b8:	lea    rcx,[rip+0x5591]        # 409d50 <_IO_stdin_used@@Base+0x2d50>
  4047bf:	mov    rax,QWORD PTR [rcx+rax*8]
  4047c3:	ret    
  4047c4:	xor    eax,eax
  4047c6:	ret    
  4047c7:	nop    WORD PTR [rax+rax*1+0x0]

00000000004047d0 <table_get@@Base>:
  4047d0:	push   rax
  4047d1:	call   405b20 <table_get_cell_ptr@@Base>
  4047d6:	mov    rax,QWORD PTR [rax]
  4047d9:	pop    rcx
  4047da:	ret    
  4047db:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004047e0 <table_get_bool@@Base>:
  4047e0:	push   rax
  4047e1:	call   405b20 <table_get_cell_ptr@@Base>
  4047e6:	mov    rax,QWORD PTR [rax]
  4047e9:	mov    al,BYTE PTR [rax]
  4047eb:	pop    rcx
  4047ec:	ret    
  4047ed:	nop    DWORD PTR [rax]

00000000004047f0 <table_get_int@@Base>:
  4047f0:	push   rax
  4047f1:	call   405b20 <table_get_cell_ptr@@Base>
  4047f6:	mov    rax,QWORD PTR [rax]
  4047f9:	mov    eax,DWORD PTR [rax]
  4047fb:	pop    rcx
  4047fc:	ret    
  4047fd:	nop    DWORD PTR [rax]

0000000000404800 <table_get_uint@@Base>:
  404800:	push   rax
  404801:	call   405b20 <table_get_cell_ptr@@Base>
  404806:	mov    rax,QWORD PTR [rax]
  404809:	mov    eax,DWORD PTR [rax]
  40480b:	pop    rcx
  40480c:	ret    
  40480d:	nop    DWORD PTR [rax]

0000000000404810 <table_get_int8@@Base>:
  404810:	push   rax
  404811:	call   405b20 <table_get_cell_ptr@@Base>
  404816:	mov    rax,QWORD PTR [rax]
  404819:	mov    al,BYTE PTR [rax]
  40481b:	pop    rcx
  40481c:	ret    
  40481d:	nop    DWORD PTR [rax]

0000000000404820 <table_get_uint8@@Base>:
  404820:	push   rax
  404821:	call   405b20 <table_get_cell_ptr@@Base>
  404826:	mov    rax,QWORD PTR [rax]
  404829:	mov    al,BYTE PTR [rax]
  40482b:	pop    rcx
  40482c:	ret    
  40482d:	nop    DWORD PTR [rax]

0000000000404830 <table_get_int16@@Base>:
  404830:	push   rax
  404831:	call   405b20 <table_get_cell_ptr@@Base>
  404836:	mov    rax,QWORD PTR [rax]
  404839:	movzx  eax,WORD PTR [rax]
  40483c:	pop    rcx
  40483d:	ret    
  40483e:	xchg   ax,ax

0000000000404840 <table_get_uint16@@Base>:
  404840:	push   rax
  404841:	call   405b20 <table_get_cell_ptr@@Base>
  404846:	mov    rax,QWORD PTR [rax]
  404849:	movzx  eax,WORD PTR [rax]
  40484c:	pop    rcx
  40484d:	ret    
  40484e:	xchg   ax,ax

0000000000404850 <table_get_int32@@Base>:
  404850:	push   rax
  404851:	call   405b20 <table_get_cell_ptr@@Base>
  404856:	mov    rax,QWORD PTR [rax]
  404859:	mov    eax,DWORD PTR [rax]
  40485b:	pop    rcx
  40485c:	ret    
  40485d:	nop    DWORD PTR [rax]

0000000000404860 <table_get_uint32@@Base>:
  404860:	push   rax
  404861:	call   405b20 <table_get_cell_ptr@@Base>
  404866:	mov    rax,QWORD PTR [rax]
  404869:	mov    eax,DWORD PTR [rax]
  40486b:	pop    rcx
  40486c:	ret    
  40486d:	nop    DWORD PTR [rax]

0000000000404870 <table_get_int64@@Base>:
  404870:	push   rax
  404871:	call   405b20 <table_get_cell_ptr@@Base>
  404876:	mov    rax,QWORD PTR [rax]
  404879:	mov    rax,QWORD PTR [rax]
  40487c:	pop    rcx
  40487d:	ret    
  40487e:	xchg   ax,ax

0000000000404880 <table_get_uint64@@Base>:
  404880:	push   rax
  404881:	call   405b20 <table_get_cell_ptr@@Base>
  404886:	mov    rax,QWORD PTR [rax]
  404889:	mov    rax,QWORD PTR [rax]
  40488c:	pop    rcx
  40488d:	ret    
  40488e:	xchg   ax,ax

0000000000404890 <table_get_short@@Base>:
  404890:	push   rax
  404891:	call   405b20 <table_get_cell_ptr@@Base>
  404896:	mov    rax,QWORD PTR [rax]
  404899:	movzx  eax,WORD PTR [rax]
  40489c:	pop    rcx
  40489d:	ret    
  40489e:	xchg   ax,ax

00000000004048a0 <table_get_ushort@@Base>:
  4048a0:	push   rax
  4048a1:	call   405b20 <table_get_cell_ptr@@Base>
  4048a6:	mov    rax,QWORD PTR [rax]
  4048a9:	movzx  eax,WORD PTR [rax]
  4048ac:	pop    rcx
  4048ad:	ret    
  4048ae:	xchg   ax,ax

00000000004048b0 <table_get_long@@Base>:
  4048b0:	push   rax
  4048b1:	call   405b20 <table_get_cell_ptr@@Base>
  4048b6:	mov    rax,QWORD PTR [rax]
  4048b9:	mov    rax,QWORD PTR [rax]
  4048bc:	pop    rcx
  4048bd:	ret    
  4048be:	xchg   ax,ax

00000000004048c0 <table_get_ulong@@Base>:
  4048c0:	push   rax
  4048c1:	call   405b20 <table_get_cell_ptr@@Base>
  4048c6:	mov    rax,QWORD PTR [rax]
  4048c9:	mov    rax,QWORD PTR [rax]
  4048cc:	pop    rcx
  4048cd:	ret    
  4048ce:	xchg   ax,ax

00000000004048d0 <table_get_llong@@Base>:
  4048d0:	push   rax
  4048d1:	call   405b20 <table_get_cell_ptr@@Base>
  4048d6:	mov    rax,QWORD PTR [rax]
  4048d9:	mov    rax,QWORD PTR [rax]
  4048dc:	pop    rcx
  4048dd:	ret    
  4048de:	xchg   ax,ax

00000000004048e0 <table_get_ullong@@Base>:
  4048e0:	push   rax
  4048e1:	call   405b20 <table_get_cell_ptr@@Base>
  4048e6:	mov    rax,QWORD PTR [rax]
  4048e9:	mov    rax,QWORD PTR [rax]
  4048ec:	pop    rcx
  4048ed:	ret    
  4048ee:	xchg   ax,ax

00000000004048f0 <table_get_float@@Base>:
  4048f0:	push   rax
  4048f1:	call   405b20 <table_get_cell_ptr@@Base>
  4048f6:	mov    rax,QWORD PTR [rax]
  4048f9:	vmovss xmm0,DWORD PTR [rax]
  4048fd:	pop    rax
  4048fe:	ret    
  4048ff:	nop

0000000000404900 <table_get_double@@Base>:
  404900:	push   rax
  404901:	call   405b20 <table_get_cell_ptr@@Base>
  404906:	mov    rax,QWORD PTR [rax]
  404909:	vmovsd xmm0,QWORD PTR [rax]
  40490d:	pop    rax
  40490e:	ret    
  40490f:	nop

0000000000404910 <table_get_ldouble@@Base>:
  404910:	push   rax
  404911:	call   405b20 <table_get_cell_ptr@@Base>
  404916:	mov    rax,QWORD PTR [rax]
  404919:	fld    TBYTE PTR [rax]
  40491b:	pop    rax
  40491c:	ret    
  40491d:	nop    DWORD PTR [rax]

0000000000404920 <table_get_char@@Base>:
  404920:	push   rax
  404921:	call   405b20 <table_get_cell_ptr@@Base>
  404926:	mov    rax,QWORD PTR [rax]
  404929:	mov    al,BYTE PTR [rax]
  40492b:	pop    rcx
  40492c:	ret    
  40492d:	nop    DWORD PTR [rax]

0000000000404930 <table_get_uchar@@Base>:
  404930:	push   rax
  404931:	call   405b20 <table_get_cell_ptr@@Base>
  404936:	mov    rax,QWORD PTR [rax]
  404939:	mov    al,BYTE PTR [rax]
  40493b:	pop    rcx
  40493c:	ret    
  40493d:	nop    DWORD PTR [rax]

0000000000404940 <table_get_string@@Base>:
  404940:	push   rax
  404941:	call   405b20 <table_get_cell_ptr@@Base>
  404946:	mov    rax,QWORD PTR [rax]
  404949:	pop    rcx
  40494a:	ret    
  40494b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000404950 <table_get_ptr@@Base>:
  404950:	push   rax
  404951:	call   405b20 <table_get_cell_ptr@@Base>
  404956:	mov    rax,QWORD PTR [rax]
  404959:	pop    rcx
  40495a:	ret    
  40495b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000404960 <table_row_init@@Base>:
  404960:	push   r14
  404962:	push   rbx
  404963:	push   rax
  404964:	mov    rax,QWORD PTR [rdi+0x18]
  404968:	mov    r14,QWORD PTR [rdi+0x20]
  40496c:	movsxd rbx,esi
  40496f:	shl    rax,0x3
  404973:	mov    rdi,rax
  404976:	call   4030a0 <malloc@plt>
  40497b:	mov    QWORD PTR [r14+rbx*8],rax
  40497f:	add    rsp,0x8
  404983:	pop    rbx
  404984:	pop    r14
  404986:	ret    
  404987:	nop    WORD PTR [rax+rax*1+0x0]

0000000000404990 <table_get_row_ptr@@Base>:
  404990:	movsxd rax,esi
  404993:	shl    rax,0x3
  404997:	add    rax,QWORD PTR [rdi+0x20]
  40499b:	ret    
  40499c:	nop    DWORD PTR [rax+0x0]

00000000004049a0 <table_row_destroy@@Base>:
  4049a0:	push   rbp
  4049a1:	push   r15
  4049a3:	push   r14
  4049a5:	push   r13
  4049a7:	push   r12
  4049a9:	push   rbx
  4049aa:	push   rax
  4049ab:	mov    r14d,esi
  4049ae:	mov    r15,rdi
  4049b1:	call   403d00 <table_get_column_length@@Base>
  4049b6:	mov    r12,QWORD PTR [r15+0x20]
  4049ba:	movsxd r13,r14d
  4049bd:	test   eax,eax
  4049bf:	jle    4049e4 <table_row_destroy@@Base+0x44>
  4049c1:	mov    ebp,eax
  4049c3:	xor    ebx,ebx
  4049c5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4049cf:	nop
  4049d0:	mov    rdi,r15
  4049d3:	mov    esi,r14d
  4049d6:	mov    edx,ebx
  4049d8:	call   405b40 <table_cell_destroy@@Base>
  4049dd:	add    ebx,0x1
  4049e0:	cmp    ebp,ebx
  4049e2:	jne    4049d0 <table_row_destroy@@Base+0x30>
  4049e4:	mov    rdi,QWORD PTR [r12+r13*8]
  4049e8:	add    rsp,0x8
  4049ec:	test   rdi,rdi
  4049ef:	je     404a00 <table_row_destroy@@Base+0x60>
  4049f1:	pop    rbx
  4049f2:	pop    r12
  4049f4:	pop    r13
  4049f6:	pop    r14
  4049f8:	pop    r15
  4049fa:	pop    rbp
  4049fb:	jmp    403030 <free@plt>
  404a00:	pop    rbx
  404a01:	pop    r12
  404a03:	pop    r13
  404a05:	pop    r14
  404a07:	pop    r15
  404a09:	pop    rbp
  404a0a:	ret    
  404a0b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000404a10 <table_get_row_length@@Base>:
  404a10:	mov    eax,DWORD PTR [rdi+0x28]
  404a13:	ret    
  404a14:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404a1e:	xchg   ax,ax

0000000000404a20 <table_add_row@@Base>:
  404a20:	push   rbp
  404a21:	push   r15
  404a23:	push   r14
  404a25:	push   r12
  404a27:	push   rbx
  404a28:	mov    r12,rdi
  404a2b:	mov    r15d,DWORD PTR [rdi+0x28]
  404a2f:	movsxd r14,r15d
  404a32:	mov    rsi,QWORD PTR [rdi+0x30]
  404a36:	mov    rax,r14
  404a39:	or     rax,rsi
  404a3c:	shr    rax,0x20
  404a40:	je     404ae1 <table_add_row@@Base+0xc1>
  404a46:	xor    edx,edx
  404a48:	mov    rax,r14
  404a4b:	div    rsi
  404a4e:	test   rdx,rdx
  404a51:	jne    404a78 <table_add_row@@Base+0x58>
  404a53:	add    rsi,QWORD PTR [r12+0x38]
  404a58:	mov    QWORD PTR [r12+0x38],rsi
  404a5d:	mov    rdi,QWORD PTR [r12+0x20]
  404a62:	shl    rsi,0x3
  404a66:	call   4030c0 <realloc@plt>
  404a6b:	mov    QWORD PTR [r12+0x20],rax
  404a70:	mov    r15d,DWORD PTR [r12+0x28]
  404a75:	movsxd r14,r15d
  404a78:	mov    rdi,r12
  404a7b:	call   403d00 <table_get_column_length@@Base>
  404a80:	mov    ebp,eax
  404a82:	mov    rdi,QWORD PTR [r12+0x18]
  404a87:	mov    rbx,QWORD PTR [r12+0x20]
  404a8c:	shl    rdi,0x3
  404a90:	call   4030a0 <malloc@plt>
  404a95:	mov    QWORD PTR [rbx+r14*8],rax
  404a99:	test   ebp,ebp
  404a9b:	jle    404ab4 <table_add_row@@Base+0x94>
  404a9d:	xor    ebx,ebx
  404a9f:	nop
  404aa0:	mov    rdi,r12
  404aa3:	mov    esi,r15d
  404aa6:	mov    edx,ebx
  404aa8:	call   405b00 <table_cell_init@@Base>
  404aad:	add    ebx,0x1
  404ab0:	cmp    ebp,ebx
  404ab2:	jne    404aa0 <table_add_row@@Base+0x80>
  404ab4:	mov    esi,DWORD PTR [r12+0x28]
  404ab9:	mov    edx,0xffffffff
  404abe:	mov    ecx,0x2
  404ac3:	mov    rdi,r12
  404ac6:	call   403c10 <table_notify@@Base>
  404acb:	mov    eax,DWORD PTR [r12+0x28]
  404ad0:	lea    ecx,[rax+0x1]
  404ad3:	mov    DWORD PTR [r12+0x28],ecx
  404ad8:	pop    rbx
  404ad9:	pop    r12
  404adb:	pop    r14
  404add:	pop    r15
  404adf:	pop    rbp
  404ae0:	ret    
  404ae1:	xor    edx,edx
  404ae3:	mov    eax,r15d
  404ae6:	div    esi
  404ae8:	test   rdx,rdx
  404aeb:	jne    404a78 <table_add_row@@Base+0x58>
  404aed:	jmp    404a53 <table_add_row@@Base+0x33>
  404af2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404afc:	nop    DWORD PTR [rax+0x0]

0000000000404b00 <table_remove_row@@Base>:
  404b00:	push   rbp
  404b01:	push   r15
  404b03:	push   r14
  404b05:	push   r12
  404b07:	push   rbx
  404b08:	mov    r14d,esi
  404b0b:	mov    rbx,rdi
  404b0e:	mov    r12d,DWORD PTR [rdi+0x28]
  404b12:	call   403d00 <table_get_column_length@@Base>
  404b17:	test   eax,eax
  404b19:	jle    404b51 <table_remove_row@@Base+0x51>
  404b1b:	mov    r15d,eax
  404b1e:	xor    ebp,ebp
  404b20:	mov    rdi,rbx
  404b23:	mov    esi,ebp
  404b25:	call   403d80 <table_get_column_data_type@@Base>
  404b2a:	cmp    eax,0x17
  404b2d:	je     404b49 <table_remove_row@@Base+0x49>
  404b2f:	mov    rdi,rbx
  404b32:	mov    esi,r14d
  404b35:	mov    edx,ebp
  404b37:	call   405b20 <table_get_cell_ptr@@Base>
  404b3c:	mov    rdi,QWORD PTR [rax]
  404b3f:	test   rdi,rdi
  404b42:	je     404b49 <table_remove_row@@Base+0x49>
  404b44:	call   403030 <free@plt>
  404b49:	add    ebp,0x1
  404b4c:	cmp    r15d,ebp
  404b4f:	jne    404b20 <table_remove_row@@Base+0x20>
  404b51:	mov    rax,QWORD PTR [rbx+0x20]
  404b55:	movsxd rbp,r14d
  404b58:	mov    rdi,QWORD PTR [rax+rbp*8]
  404b5c:	test   rdi,rdi
  404b5f:	je     404b66 <table_remove_row@@Base+0x66>
  404b61:	call   403030 <free@plt>
  404b66:	add    r12d,0xffffffff
  404b6a:	mov    ecx,r12d
  404b6d:	sub    ecx,r14d
  404b70:	jle    404c28 <table_remove_row@@Base+0x128>
  404b76:	movsxd rax,r12d
  404b79:	mov    rdx,rbp
  404b7c:	not    rdx
  404b7f:	add    rdx,rax
  404b82:	and    rcx,0x7
  404b86:	je     404ba7 <table_remove_row@@Base+0xa7>
  404b88:	neg    rcx
  404b8b:	nop    DWORD PTR [rax+rax*1+0x0]
  404b90:	mov    rsi,QWORD PTR [rbx+0x20]
  404b94:	mov    rdi,QWORD PTR [rsi+rbp*8+0x8]
  404b99:	mov    QWORD PTR [rsi+rbp*8],rdi
  404b9d:	add    rbp,0x1
  404ba1:	add    rcx,0x1
  404ba5:	jne    404b90 <table_remove_row@@Base+0x90>
  404ba7:	cmp    rdx,0x7
  404bab:	jb     404c28 <table_remove_row@@Base+0x128>
  404bad:	nop    DWORD PTR [rax]
  404bb0:	mov    rcx,QWORD PTR [rbx+0x20]
  404bb4:	mov    rdx,QWORD PTR [rcx+rbp*8+0x8]
  404bb9:	mov    QWORD PTR [rcx+rbp*8],rdx
  404bbd:	mov    rcx,QWORD PTR [rbx+0x20]
  404bc1:	mov    rdx,QWORD PTR [rcx+rbp*8+0x10]
  404bc6:	mov    QWORD PTR [rcx+rbp*8+0x8],rdx
  404bcb:	mov    rcx,QWORD PTR [rbx+0x20]
  404bcf:	mov    rdx,QWORD PTR [rcx+rbp*8+0x18]
  404bd4:	mov    QWORD PTR [rcx+rbp*8+0x10],rdx
  404bd9:	mov    rcx,QWORD PTR [rbx+0x20]
  404bdd:	mov    rdx,QWORD PTR [rcx+rbp*8+0x20]
  404be2:	mov    QWORD PTR [rcx+rbp*8+0x18],rdx
  404be7:	mov    rcx,QWORD PTR [rbx+0x20]
  404beb:	mov    rdx,QWORD PTR [rcx+rbp*8+0x28]
  404bf0:	mov    QWORD PTR [rcx+rbp*8+0x20],rdx
  404bf5:	mov    rcx,QWORD PTR [rbx+0x20]
  404bf9:	mov    rdx,QWORD PTR [rcx+rbp*8+0x30]
  404bfe:	mov    QWORD PTR [rcx+rbp*8+0x28],rdx
  404c03:	mov    rcx,QWORD PTR [rbx+0x20]
  404c07:	mov    rdx,QWORD PTR [rcx+rbp*8+0x38]
  404c0c:	mov    QWORD PTR [rcx+rbp*8+0x30],rdx
  404c11:	mov    rcx,QWORD PTR [rbx+0x20]
  404c15:	mov    rdx,QWORD PTR [rcx+rbp*8+0x40]
  404c1a:	mov    QWORD PTR [rcx+rbp*8+0x38],rdx
  404c1f:	add    rbp,0x8
  404c23:	cmp    rax,rbp
  404c26:	jne    404bb0 <table_remove_row@@Base+0xb0>
  404c28:	movsxd rax,DWORD PTR [rbx+0x28]
  404c2c:	add    rax,0xffffffffffffffff
  404c30:	mov    DWORD PTR [rbx+0x28],eax
  404c33:	mov    rcx,QWORD PTR [rbx+0x30]
  404c37:	mov    rdx,rax
  404c3a:	or     rdx,rcx
  404c3d:	shr    rdx,0x20
  404c41:	je     404c89 <table_remove_row@@Base+0x189>
  404c43:	xor    edx,edx
  404c45:	div    rcx
  404c48:	test   rdx,rdx
  404c4b:	jne    404c69 <table_remove_row@@Base+0x169>
  404c4d:	mov    rdi,QWORD PTR [rbx+0x20]
  404c51:	mov    rsi,QWORD PTR [rbx+0x38]
  404c55:	sub    rsi,rcx
  404c58:	mov    QWORD PTR [rbx+0x38],rsi
  404c5c:	shl    rsi,0x3
  404c60:	call   4030c0 <realloc@plt>
  404c65:	mov    QWORD PTR [rbx+0x20],rax
  404c69:	mov    edx,0xffffffff
  404c6e:	mov    ecx,0x4
  404c73:	mov    rdi,rbx
  404c76:	mov    esi,r14d
  404c79:	call   403c10 <table_notify@@Base>
  404c7e:	xor    eax,eax
  404c80:	pop    rbx
  404c81:	pop    r12
  404c83:	pop    r14
  404c85:	pop    r15
  404c87:	pop    rbp
  404c88:	ret    
  404c89:	xor    edx,edx
  404c8b:	div    ecx
  404c8d:	test   rdx,rdx
  404c90:	jne    404c69 <table_remove_row@@Base+0x169>
  404c92:	jmp    404c4d <table_remove_row@@Base+0x14d>
  404c94:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404c9e:	xchg   ax,ax

0000000000404ca0 <table_set_row_ptr@@Base>:
  404ca0:	mov    rax,QWORD PTR [rdi+0x20]
  404ca4:	movsxd rcx,esi
  404ca7:	mov    rdx,QWORD PTR [rdx]
  404caa:	mov    QWORD PTR [rax+rcx*8],rdx
  404cae:	ret    
  404caf:	nop

0000000000404cb0 <table_set@@Base>:
  404cb0:	push   rbp
  404cb1:	push   r15
  404cb3:	push   r14
  404cb5:	push   r13
  404cb7:	push   r12
  404cb9:	push   rbx
  404cba:	push   rax
  404cbb:	mov    r12d,r8d
  404cbe:	mov    QWORD PTR [rsp],rcx
  404cc2:	mov    ebx,edx
  404cc4:	mov    r14d,esi
  404cc7:	mov    rbp,rdi
  404cca:	call   405b20 <table_get_cell_ptr@@Base>
  404ccf:	mov    r13,rax
  404cd2:	mov    rdi,rbp
  404cd5:	mov    esi,ebx
  404cd7:	call   403cd0 <table_get_col_ptr@@Base>
  404cdc:	mov    r15d,0xffffffff
  404ce2:	cmp    r12d,0x17
  404ce6:	ja     404f27 <table_set@@Base+0x277>
  404cec:	mov    ecx,r12d
  404cef:	lea    rdx,[rip+0x2486]        # 40717c <_IO_stdin_used@@Base+0x17c>
  404cf6:	movsxd rcx,DWORD PTR [rdx+rcx*4]
  404cfa:	add    rcx,rdx
  404cfd:	jmp    rcx
  404cff:	cmp    DWORD PTR [rax+0x8],0x0
  404d03:	jne    404f27 <table_set@@Base+0x277>
  404d09:	jmp    404e07 <table_set@@Base+0x157>
  404d0e:	cmp    DWORD PTR [rax+0x8],0x1
  404d12:	je     404e07 <table_set@@Base+0x157>
  404d18:	jmp    404f27 <table_set@@Base+0x277>
  404d1d:	cmp    DWORD PTR [rax+0x8],0x2
  404d21:	je     404eee <table_set@@Base+0x23e>
  404d27:	jmp    404f27 <table_set@@Base+0x277>
  404d2c:	cmp    DWORD PTR [rax+0x8],0x3
  404d30:	je     404eee <table_set@@Base+0x23e>
  404d36:	jmp    404f27 <table_set@@Base+0x277>
  404d3b:	cmp    DWORD PTR [rax+0x8],0x4
  404d3f:	je     404da2 <table_set@@Base+0xf2>
  404d41:	jmp    404f27 <table_set@@Base+0x277>
  404d46:	cmp    DWORD PTR [rax+0x8],0x5
  404d4a:	je     404da2 <table_set@@Base+0xf2>
  404d4c:	jmp    404f27 <table_set@@Base+0x277>
  404d51:	cmp    DWORD PTR [rax+0x8],0x6
  404d55:	je     404e07 <table_set@@Base+0x157>
  404d5b:	jmp    404f27 <table_set@@Base+0x277>
  404d60:	cmp    DWORD PTR [rax+0x8],0x7
  404d64:	je     404e07 <table_set@@Base+0x157>
  404d6a:	jmp    404f27 <table_set@@Base+0x277>
  404d6f:	cmp    DWORD PTR [rax+0x8],0x8
  404d73:	je     404e3e <table_set@@Base+0x18e>
  404d79:	jmp    404f27 <table_set@@Base+0x277>
  404d7e:	cmp    DWORD PTR [rax+0x8],0x9
  404d82:	je     404e3e <table_set@@Base+0x18e>
  404d88:	jmp    404f27 <table_set@@Base+0x277>
  404d8d:	cmp    DWORD PTR [rax+0x8],0xa
  404d91:	je     404da2 <table_set@@Base+0xf2>
  404d93:	jmp    404f27 <table_set@@Base+0x277>
  404d98:	cmp    DWORD PTR [rax+0x8],0xb
  404d9c:	jne    404f27 <table_set@@Base+0x277>
  404da2:	mov    rax,QWORD PTR [r13+0x0]
  404da6:	test   rax,rax
  404da9:	jne    404dc2 <table_set@@Base+0x112>
  404dab:	mov    edi,0x2
  404db0:	call   4030a0 <malloc@plt>
  404db5:	mov    QWORD PTR [r13+0x0],rax
  404db9:	test   rax,rax
  404dbc:	je     404f27 <table_set@@Base+0x277>
  404dc2:	mov    rcx,QWORD PTR [rsp]
  404dc6:	movzx  ecx,WORD PTR [rcx]
  404dc9:	mov    WORD PTR [rax],cx
  404dcc:	jmp    404f12 <table_set@@Base+0x262>
  404dd1:	cmp    DWORD PTR [rax+0x8],0xc
  404dd5:	je     404e3e <table_set@@Base+0x18e>
  404dd7:	jmp    404f27 <table_set@@Base+0x277>
  404ddc:	cmp    DWORD PTR [rax+0x8],0xd
  404de0:	je     404e3e <table_set@@Base+0x18e>
  404de2:	jmp    404f27 <table_set@@Base+0x277>
  404de7:	cmp    DWORD PTR [rax+0x8],0xe
  404deb:	je     404e3e <table_set@@Base+0x18e>
  404ded:	jmp    404f27 <table_set@@Base+0x277>
  404df2:	cmp    DWORD PTR [rax+0x8],0xf
  404df6:	je     404e3e <table_set@@Base+0x18e>
  404df8:	jmp    404f27 <table_set@@Base+0x277>
  404dfd:	cmp    DWORD PTR [rax+0x8],0x10
  404e01:	jne    404f27 <table_set@@Base+0x277>
  404e07:	mov    rax,QWORD PTR [r13+0x0]
  404e0b:	test   rax,rax
  404e0e:	jne    404e27 <table_set@@Base+0x177>
  404e10:	mov    edi,0x4
  404e15:	call   4030a0 <malloc@plt>
  404e1a:	mov    QWORD PTR [r13+0x0],rax
  404e1e:	test   rax,rax
  404e21:	je     404f27 <table_set@@Base+0x277>
  404e27:	mov    rcx,QWORD PTR [rsp]
  404e2b:	mov    ecx,DWORD PTR [rcx]
  404e2d:	mov    DWORD PTR [rax],ecx
  404e2f:	jmp    404f12 <table_set@@Base+0x262>
  404e34:	cmp    DWORD PTR [rax+0x8],0x11
  404e38:	jne    404f27 <table_set@@Base+0x277>
  404e3e:	mov    rax,QWORD PTR [r13+0x0]
  404e42:	test   rax,rax
  404e45:	jne    404e5e <table_set@@Base+0x1ae>
  404e47:	mov    edi,0x8
  404e4c:	call   4030a0 <malloc@plt>
  404e51:	mov    QWORD PTR [r13+0x0],rax
  404e55:	test   rax,rax
  404e58:	je     404f27 <table_set@@Base+0x277>
  404e5e:	mov    rcx,QWORD PTR [rsp]
  404e62:	mov    rcx,QWORD PTR [rcx]
  404e65:	mov    QWORD PTR [rax],rcx
  404e68:	jmp    404f12 <table_set@@Base+0x262>
  404e6d:	cmp    DWORD PTR [rax+0x8],0x12
  404e71:	jne    404f27 <table_set@@Base+0x277>
  404e77:	mov    rax,QWORD PTR [r13+0x0]
  404e7b:	test   rax,rax
  404e7e:	jne    404e97 <table_set@@Base+0x1e7>
  404e80:	mov    edi,0x10
  404e85:	call   4030a0 <malloc@plt>
  404e8a:	mov    QWORD PTR [r13+0x0],rax
  404e8e:	test   rax,rax
  404e91:	je     404f27 <table_set@@Base+0x277>
  404e97:	mov    rcx,QWORD PTR [rsp]
  404e9b:	vmovups xmm0,XMMWORD PTR [rcx]
  404e9f:	vmovups XMMWORD PTR [rax],xmm0
  404ea3:	jmp    404f12 <table_set@@Base+0x262>
  404ea5:	cmp    DWORD PTR [rax+0x8],0x13
  404ea9:	je     404eee <table_set@@Base+0x23e>
  404eab:	jmp    404f27 <table_set@@Base+0x277>
  404ead:	cmp    DWORD PTR [rax+0x8],0x14
  404eb1:	je     404eee <table_set@@Base+0x23e>
  404eb3:	jmp    404f27 <table_set@@Base+0x277>
  404eb5:	cmp    DWORD PTR [rax+0x8],0x15
  404eb9:	jne    404f27 <table_set@@Base+0x277>
  404ebb:	mov    rdi,QWORD PTR [rsp]
  404ebf:	call   403060 <strlen@plt>
  404ec4:	mov    rdi,QWORD PTR [r13+0x0]
  404ec8:	lea    rsi,[rax+0x1]
  404ecc:	call   4030c0 <realloc@plt>
  404ed1:	mov    QWORD PTR [r13+0x0],rax
  404ed5:	test   rax,rax
  404ed8:	je     404f27 <table_set@@Base+0x277>
  404eda:	mov    rdi,rax
  404edd:	mov    rsi,QWORD PTR [rsp]
  404ee1:	call   403040 <strcpy@plt>
  404ee6:	jmp    404f12 <table_set@@Base+0x262>
  404ee8:	cmp    DWORD PTR [rax+0x8],0x16
  404eec:	jne    404f27 <table_set@@Base+0x277>
  404eee:	mov    rax,QWORD PTR [r13+0x0]
  404ef2:	test   rax,rax
  404ef5:	jne    404f0a <table_set@@Base+0x25a>
  404ef7:	mov    edi,0x1
  404efc:	call   4030a0 <malloc@plt>
  404f01:	mov    QWORD PTR [r13+0x0],rax
  404f05:	test   rax,rax
  404f08:	je     404f27 <table_set@@Base+0x277>
  404f0a:	mov    rcx,QWORD PTR [rsp]
  404f0e:	mov    cl,BYTE PTR [rcx]
  404f10:	mov    BYTE PTR [rax],cl
  404f12:	mov    ecx,0x1
  404f17:	mov    rdi,rbp
  404f1a:	mov    esi,r14d
  404f1d:	mov    edx,ebx
  404f1f:	call   403c10 <table_notify@@Base>
  404f24:	xor    r15d,r15d
  404f27:	mov    eax,r15d
  404f2a:	add    rsp,0x8
  404f2e:	pop    rbx
  404f2f:	pop    r12
  404f31:	pop    r13
  404f33:	pop    r14
  404f35:	pop    r15
  404f37:	pop    rbp
  404f38:	ret    
  404f39:	cmp    DWORD PTR [rax+0x8],0x17
  404f3d:	jne    404f27 <table_set@@Base+0x277>
  404f3f:	mov    rax,QWORD PTR [rsp]
  404f43:	mov    QWORD PTR [r13+0x0],rax
  404f47:	jmp    404f12 <table_set@@Base+0x262>
  404f49:	nop    DWORD PTR [rax+0x0]

0000000000404f50 <table_set_bool@@Base>:
  404f50:	push   rbp
  404f51:	push   r15
  404f53:	push   r14
  404f55:	push   r13
  404f57:	push   r12
  404f59:	push   rbx
  404f5a:	push   rax
  404f5b:	mov    r15d,ecx
  404f5e:	mov    ebx,edx
  404f60:	mov    r14d,esi
  404f63:	mov    rbp,rdi
  404f66:	call   405b20 <table_get_cell_ptr@@Base>
  404f6b:	mov    r13,rax
  404f6e:	mov    rdi,rbp
  404f71:	mov    esi,ebx
  404f73:	call   403cd0 <table_get_col_ptr@@Base>
  404f78:	mov    r12d,0xffffffff
  404f7e:	cmp    DWORD PTR [rax+0x8],0x16
  404f82:	jne    404fb8 <table_set_bool@@Base+0x68>
  404f84:	mov    rax,QWORD PTR [r13+0x0]
  404f88:	test   rax,rax
  404f8b:	jne    404fa0 <table_set_bool@@Base+0x50>
  404f8d:	mov    edi,0x1
  404f92:	call   4030a0 <malloc@plt>
  404f97:	mov    QWORD PTR [r13+0x0],rax
  404f9b:	test   rax,rax
  404f9e:	je     404fb8 <table_set_bool@@Base+0x68>
  404fa0:	mov    BYTE PTR [rax],r15b
  404fa3:	mov    ecx,0x1
  404fa8:	mov    rdi,rbp
  404fab:	mov    esi,r14d
  404fae:	mov    edx,ebx
  404fb0:	call   403c10 <table_notify@@Base>
  404fb5:	xor    r12d,r12d
  404fb8:	mov    eax,r12d
  404fbb:	add    rsp,0x8
  404fbf:	pop    rbx
  404fc0:	pop    r12
  404fc2:	pop    r13
  404fc4:	pop    r14
  404fc6:	pop    r15
  404fc8:	pop    rbp
  404fc9:	ret    
  404fca:	nop    WORD PTR [rax+rax*1+0x0]

0000000000404fd0 <table_set_int@@Base>:
  404fd0:	push   rbp
  404fd1:	push   r15
  404fd3:	push   r14
  404fd5:	push   r13
  404fd7:	push   r12
  404fd9:	push   rbx
  404fda:	push   rax
  404fdb:	mov    r15d,ecx
  404fde:	mov    ebx,edx
  404fe0:	mov    r14d,esi
  404fe3:	mov    rbp,rdi
  404fe6:	call   405b20 <table_get_cell_ptr@@Base>
  404feb:	mov    r13,rax
  404fee:	mov    rdi,rbp
  404ff1:	mov    esi,ebx
  404ff3:	call   403cd0 <table_get_col_ptr@@Base>
  404ff8:	mov    r12d,0xffffffff
  404ffe:	cmp    DWORD PTR [rax+0x8],0x0
  405002:	jne    405038 <table_set_int@@Base+0x68>
  405004:	mov    rax,QWORD PTR [r13+0x0]
  405008:	test   rax,rax
  40500b:	jne    405020 <table_set_int@@Base+0x50>
  40500d:	mov    edi,0x4
  405012:	call   4030a0 <malloc@plt>
  405017:	mov    QWORD PTR [r13+0x0],rax
  40501b:	test   rax,rax
  40501e:	je     405038 <table_set_int@@Base+0x68>
  405020:	mov    DWORD PTR [rax],r15d
  405023:	mov    ecx,0x1
  405028:	mov    rdi,rbp
  40502b:	mov    esi,r14d
  40502e:	mov    edx,ebx
  405030:	call   403c10 <table_notify@@Base>
  405035:	xor    r12d,r12d
  405038:	mov    eax,r12d
  40503b:	add    rsp,0x8
  40503f:	pop    rbx
  405040:	pop    r12
  405042:	pop    r13
  405044:	pop    r14
  405046:	pop    r15
  405048:	pop    rbp
  405049:	ret    
  40504a:	nop    WORD PTR [rax+rax*1+0x0]

0000000000405050 <table_set_uint@@Base>:
  405050:	push   rbp
  405051:	push   r15
  405053:	push   r14
  405055:	push   r13
  405057:	push   r12
  405059:	push   rbx
  40505a:	push   rax
  40505b:	mov    r15d,ecx
  40505e:	mov    ebx,edx
  405060:	mov    r14d,esi
  405063:	mov    rbp,rdi
  405066:	call   405b20 <table_get_cell_ptr@@Base>
  40506b:	mov    r13,rax
  40506e:	mov    rdi,rbp
  405071:	mov    esi,ebx
  405073:	call   403cd0 <table_get_col_ptr@@Base>
  405078:	mov    r12d,0xffffffff
  40507e:	cmp    DWORD PTR [rax+0x8],0x1
  405082:	jne    4050b8 <table_set_uint@@Base+0x68>
  405084:	mov    rax,QWORD PTR [r13+0x0]
  405088:	test   rax,rax
  40508b:	jne    4050a0 <table_set_uint@@Base+0x50>
  40508d:	mov    edi,0x4
  405092:	call   4030a0 <malloc@plt>
  405097:	mov    QWORD PTR [r13+0x0],rax
  40509b:	test   rax,rax
  40509e:	je     4050b8 <table_set_uint@@Base+0x68>
  4050a0:	mov    DWORD PTR [rax],r15d
  4050a3:	mov    ecx,0x1
  4050a8:	mov    rdi,rbp
  4050ab:	mov    esi,r14d
  4050ae:	mov    edx,ebx
  4050b0:	call   403c10 <table_notify@@Base>
  4050b5:	xor    r12d,r12d
  4050b8:	mov    eax,r12d
  4050bb:	add    rsp,0x8
  4050bf:	pop    rbx
  4050c0:	pop    r12
  4050c2:	pop    r13
  4050c4:	pop    r14
  4050c6:	pop    r15
  4050c8:	pop    rbp
  4050c9:	ret    
  4050ca:	nop    WORD PTR [rax+rax*1+0x0]

00000000004050d0 <table_set_int8@@Base>:
  4050d0:	push   rbp
  4050d1:	push   r15
  4050d3:	push   r14
  4050d5:	push   r13
  4050d7:	push   r12
  4050d9:	push   rbx
  4050da:	push   rax
  4050db:	mov    r15d,ecx
  4050de:	mov    ebx,edx
  4050e0:	mov    r14d,esi
  4050e3:	mov    rbp,rdi
  4050e6:	call   405b20 <table_get_cell_ptr@@Base>
  4050eb:	mov    r13,rax
  4050ee:	mov    rdi,rbp
  4050f1:	mov    esi,ebx
  4050f3:	call   403cd0 <table_get_col_ptr@@Base>
  4050f8:	mov    r12d,0xffffffff
  4050fe:	cmp    DWORD PTR [rax+0x8],0x2
  405102:	jne    405138 <table_set_int8@@Base+0x68>
  405104:	mov    rax,QWORD PTR [r13+0x0]
  405108:	test   rax,rax
  40510b:	jne    405120 <table_set_int8@@Base+0x50>
  40510d:	mov    edi,0x1
  405112:	call   4030a0 <malloc@plt>
  405117:	mov    QWORD PTR [r13+0x0],rax
  40511b:	test   rax,rax
  40511e:	je     405138 <table_set_int8@@Base+0x68>
  405120:	mov    BYTE PTR [rax],r15b
  405123:	mov    ecx,0x1
  405128:	mov    rdi,rbp
  40512b:	mov    esi,r14d
  40512e:	mov    edx,ebx
  405130:	call   403c10 <table_notify@@Base>
  405135:	xor    r12d,r12d
  405138:	mov    eax,r12d
  40513b:	add    rsp,0x8
  40513f:	pop    rbx
  405140:	pop    r12
  405142:	pop    r13
  405144:	pop    r14
  405146:	pop    r15
  405148:	pop    rbp
  405149:	ret    
  40514a:	nop    WORD PTR [rax+rax*1+0x0]

0000000000405150 <table_set_uint8@@Base>:
  405150:	push   rbp
  405151:	push   r15
  405153:	push   r14
  405155:	push   r13
  405157:	push   r12
  405159:	push   rbx
  40515a:	push   rax
  40515b:	mov    r15d,ecx
  40515e:	mov    ebx,edx
  405160:	mov    r14d,esi
  405163:	mov    rbp,rdi
  405166:	call   405b20 <table_get_cell_ptr@@Base>
  40516b:	mov    r13,rax
  40516e:	mov    rdi,rbp
  405171:	mov    esi,ebx
  405173:	call   403cd0 <table_get_col_ptr@@Base>
  405178:	mov    r12d,0xffffffff
  40517e:	cmp    DWORD PTR [rax+0x8],0x3
  405182:	jne    4051b8 <table_set_uint8@@Base+0x68>
  405184:	mov    rax,QWORD PTR [r13+0x0]
  405188:	test   rax,rax
  40518b:	jne    4051a0 <table_set_uint8@@Base+0x50>
  40518d:	mov    edi,0x1
  405192:	call   4030a0 <malloc@plt>
  405197:	mov    QWORD PTR [r13+0x0],rax
  40519b:	test   rax,rax
  40519e:	je     4051b8 <table_set_uint8@@Base+0x68>
  4051a0:	mov    BYTE PTR [rax],r15b
  4051a3:	mov    ecx,0x1
  4051a8:	mov    rdi,rbp
  4051ab:	mov    esi,r14d
  4051ae:	mov    edx,ebx
  4051b0:	call   403c10 <table_notify@@Base>
  4051b5:	xor    r12d,r12d
  4051b8:	mov    eax,r12d
  4051bb:	add    rsp,0x8
  4051bf:	pop    rbx
  4051c0:	pop    r12
  4051c2:	pop    r13
  4051c4:	pop    r14
  4051c6:	pop    r15
  4051c8:	pop    rbp
  4051c9:	ret    
  4051ca:	nop    WORD PTR [rax+rax*1+0x0]

00000000004051d0 <table_set_int16@@Base>:
  4051d0:	push   rbp
  4051d1:	push   r15
  4051d3:	push   r14
  4051d5:	push   r13
  4051d7:	push   r12
  4051d9:	push   rbx
  4051da:	push   rax
  4051db:	mov    r15d,ecx
  4051de:	mov    ebx,edx
  4051e0:	mov    r14d,esi
  4051e3:	mov    rbp,rdi
  4051e6:	call   405b20 <table_get_cell_ptr@@Base>
  4051eb:	mov    r13,rax
  4051ee:	mov    rdi,rbp
  4051f1:	mov    esi,ebx
  4051f3:	call   403cd0 <table_get_col_ptr@@Base>
  4051f8:	mov    r12d,0xffffffff
  4051fe:	cmp    DWORD PTR [rax+0x8],0x4
  405202:	jne    405239 <table_set_int16@@Base+0x69>
  405204:	mov    rax,QWORD PTR [r13+0x0]
  405208:	test   rax,rax
  40520b:	jne    405220 <table_set_int16@@Base+0x50>
  40520d:	mov    edi,0x2
  405212:	call   4030a0 <malloc@plt>
  405217:	mov    QWORD PTR [r13+0x0],rax
  40521b:	test   rax,rax
  40521e:	je     405239 <table_set_int16@@Base+0x69>
  405220:	mov    WORD PTR [rax],r15w
  405224:	mov    ecx,0x1
  405229:	mov    rdi,rbp
  40522c:	mov    esi,r14d
  40522f:	mov    edx,ebx
  405231:	call   403c10 <table_notify@@Base>
  405236:	xor    r12d,r12d
  405239:	mov    eax,r12d
  40523c:	add    rsp,0x8
  405240:	pop    rbx
  405241:	pop    r12
  405243:	pop    r13
  405245:	pop    r14
  405247:	pop    r15
  405249:	pop    rbp
  40524a:	ret    
  40524b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000405250 <table_set_uint16@@Base>:
  405250:	push   rbp
  405251:	push   r15
  405253:	push   r14
  405255:	push   r13
  405257:	push   r12
  405259:	push   rbx
  40525a:	push   rax
  40525b:	mov    r15d,ecx
  40525e:	mov    ebx,edx
  405260:	mov    r14d,esi
  405263:	mov    rbp,rdi
  405266:	call   405b20 <table_get_cell_ptr@@Base>
  40526b:	mov    r13,rax
  40526e:	mov    rdi,rbp
  405271:	mov    esi,ebx
  405273:	call   403cd0 <table_get_col_ptr@@Base>
  405278:	mov    r12d,0xffffffff
  40527e:	cmp    DWORD PTR [rax+0x8],0x5
  405282:	jne    4052b9 <table_set_uint16@@Base+0x69>
  405284:	mov    rax,QWORD PTR [r13+0x0]
  405288:	test   rax,rax
  40528b:	jne    4052a0 <table_set_uint16@@Base+0x50>
  40528d:	mov    edi,0x2
  405292:	call   4030a0 <malloc@plt>
  405297:	mov    QWORD PTR [r13+0x0],rax
  40529b:	test   rax,rax
  40529e:	je     4052b9 <table_set_uint16@@Base+0x69>
  4052a0:	mov    WORD PTR [rax],r15w
  4052a4:	mov    ecx,0x1
  4052a9:	mov    rdi,rbp
  4052ac:	mov    esi,r14d
  4052af:	mov    edx,ebx
  4052b1:	call   403c10 <table_notify@@Base>
  4052b6:	xor    r12d,r12d
  4052b9:	mov    eax,r12d
  4052bc:	add    rsp,0x8
  4052c0:	pop    rbx
  4052c1:	pop    r12
  4052c3:	pop    r13
  4052c5:	pop    r14
  4052c7:	pop    r15
  4052c9:	pop    rbp
  4052ca:	ret    
  4052cb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004052d0 <table_set_int32@@Base>:
  4052d0:	push   rbp
  4052d1:	push   r15
  4052d3:	push   r14
  4052d5:	push   r13
  4052d7:	push   r12
  4052d9:	push   rbx
  4052da:	push   rax
  4052db:	mov    r15d,ecx
  4052de:	mov    ebx,edx
  4052e0:	mov    r14d,esi
  4052e3:	mov    rbp,rdi
  4052e6:	call   405b20 <table_get_cell_ptr@@Base>
  4052eb:	mov    r13,rax
  4052ee:	mov    rdi,rbp
  4052f1:	mov    esi,ebx
  4052f3:	call   403cd0 <table_get_col_ptr@@Base>
  4052f8:	mov    r12d,0xffffffff
  4052fe:	cmp    DWORD PTR [rax+0x8],0x6
  405302:	jne    405338 <table_set_int32@@Base+0x68>
  405304:	mov    rax,QWORD PTR [r13+0x0]
  405308:	test   rax,rax
  40530b:	jne    405320 <table_set_int32@@Base+0x50>
  40530d:	mov    edi,0x4
  405312:	call   4030a0 <malloc@plt>
  405317:	mov    QWORD PTR [r13+0x0],rax
  40531b:	test   rax,rax
  40531e:	je     405338 <table_set_int32@@Base+0x68>
  405320:	mov    DWORD PTR [rax],r15d
  405323:	mov    ecx,0x1
  405328:	mov    rdi,rbp
  40532b:	mov    esi,r14d
  40532e:	mov    edx,ebx
  405330:	call   403c10 <table_notify@@Base>
  405335:	xor    r12d,r12d
  405338:	mov    eax,r12d
  40533b:	add    rsp,0x8
  40533f:	pop    rbx
  405340:	pop    r12
  405342:	pop    r13
  405344:	pop    r14
  405346:	pop    r15
  405348:	pop    rbp
  405349:	ret    
  40534a:	nop    WORD PTR [rax+rax*1+0x0]

0000000000405350 <table_set_uint32@@Base>:
  405350:	push   rbp
  405351:	push   r15
  405353:	push   r14
  405355:	push   r13
  405357:	push   r12
  405359:	push   rbx
  40535a:	push   rax
  40535b:	mov    r15d,ecx
  40535e:	mov    ebx,edx
  405360:	mov    r14d,esi
  405363:	mov    rbp,rdi
  405366:	call   405b20 <table_get_cell_ptr@@Base>
  40536b:	mov    r13,rax
  40536e:	mov    rdi,rbp
  405371:	mov    esi,ebx
  405373:	call   403cd0 <table_get_col_ptr@@Base>
  405378:	mov    r12d,0xffffffff
  40537e:	cmp    DWORD PTR [rax+0x8],0x7
  405382:	jne    4053b8 <table_set_uint32@@Base+0x68>
  405384:	mov    rax,QWORD PTR [r13+0x0]
  405388:	test   rax,rax
  40538b:	jne    4053a0 <table_set_uint32@@Base+0x50>
  40538d:	mov    edi,0x4
  405392:	call   4030a0 <malloc@plt>
  405397:	mov    QWORD PTR [r13+0x0],rax
  40539b:	test   rax,rax
  40539e:	je     4053b8 <table_set_uint32@@Base+0x68>
  4053a0:	mov    DWORD PTR [rax],r15d
  4053a3:	mov    ecx,0x1
  4053a8:	mov    rdi,rbp
  4053ab:	mov    esi,r14d
  4053ae:	mov    edx,ebx
  4053b0:	call   403c10 <table_notify@@Base>
  4053b5:	xor    r12d,r12d
  4053b8:	mov    eax,r12d
  4053bb:	add    rsp,0x8
  4053bf:	pop    rbx
  4053c0:	pop    r12
  4053c2:	pop    r13
  4053c4:	pop    r14
  4053c6:	pop    r15
  4053c8:	pop    rbp
  4053c9:	ret    
  4053ca:	nop    WORD PTR [rax+rax*1+0x0]

00000000004053d0 <table_set_int64@@Base>:
  4053d0:	push   rbp
  4053d1:	push   r15
  4053d3:	push   r14
  4053d5:	push   r13
  4053d7:	push   r12
  4053d9:	push   rbx
  4053da:	push   rax
  4053db:	mov    r15,rcx
  4053de:	mov    ebx,edx
  4053e0:	mov    r14d,esi
  4053e3:	mov    rbp,rdi
  4053e6:	call   405b20 <table_get_cell_ptr@@Base>
  4053eb:	mov    r13,rax
  4053ee:	mov    rdi,rbp
  4053f1:	mov    esi,ebx
  4053f3:	call   403cd0 <table_get_col_ptr@@Base>
  4053f8:	mov    r12d,0xffffffff
  4053fe:	cmp    DWORD PTR [rax+0x8],0x8
  405402:	jne    405438 <table_set_int64@@Base+0x68>
  405404:	mov    rax,QWORD PTR [r13+0x0]
  405408:	test   rax,rax
  40540b:	jne    405420 <table_set_int64@@Base+0x50>
  40540d:	mov    edi,0x8
  405412:	call   4030a0 <malloc@plt>
  405417:	mov    QWORD PTR [r13+0x0],rax
  40541b:	test   rax,rax
  40541e:	je     405438 <table_set_int64@@Base+0x68>
  405420:	mov    QWORD PTR [rax],r15
  405423:	mov    ecx,0x1
  405428:	mov    rdi,rbp
  40542b:	mov    esi,r14d
  40542e:	mov    edx,ebx
  405430:	call   403c10 <table_notify@@Base>
  405435:	xor    r12d,r12d
  405438:	mov    eax,r12d
  40543b:	add    rsp,0x8
  40543f:	pop    rbx
  405440:	pop    r12
  405442:	pop    r13
  405444:	pop    r14
  405446:	pop    r15
  405448:	pop    rbp
  405449:	ret    
  40544a:	nop    WORD PTR [rax+rax*1+0x0]

0000000000405450 <table_set_uint64@@Base>:
  405450:	push   rbp
  405451:	push   r15
  405453:	push   r14
  405455:	push   r13
  405457:	push   r12
  405459:	push   rbx
  40545a:	push   rax
  40545b:	mov    r15,rcx
  40545e:	mov    ebx,edx
  405460:	mov    r14d,esi
  405463:	mov    rbp,rdi
  405466:	call   405b20 <table_get_cell_ptr@@Base>
  40546b:	mov    r13,rax
  40546e:	mov    rdi,rbp
  405471:	mov    esi,ebx
  405473:	call   403cd0 <table_get_col_ptr@@Base>
  405478:	mov    r12d,0xffffffff
  40547e:	cmp    DWORD PTR [rax+0x8],0x9
  405482:	jne    4054b8 <table_set_uint64@@Base+0x68>
  405484:	mov    rax,QWORD PTR [r13+0x0]
  405488:	test   rax,rax
  40548b:	jne    4054a0 <table_set_uint64@@Base+0x50>
  40548d:	mov    edi,0x8
  405492:	call   4030a0 <malloc@plt>
  405497:	mov    QWORD PTR [r13+0x0],rax
  40549b:	test   rax,rax
  40549e:	je     4054b8 <table_set_uint64@@Base+0x68>
  4054a0:	mov    QWORD PTR [rax],r15
  4054a3:	mov    ecx,0x1
  4054a8:	mov    rdi,rbp
  4054ab:	mov    esi,r14d
  4054ae:	mov    edx,ebx
  4054b0:	call   403c10 <table_notify@@Base>
  4054b5:	xor    r12d,r12d
  4054b8:	mov    eax,r12d
  4054bb:	add    rsp,0x8
  4054bf:	pop    rbx
  4054c0:	pop    r12
  4054c2:	pop    r13
  4054c4:	pop    r14
  4054c6:	pop    r15
  4054c8:	pop    rbp
  4054c9:	ret    
  4054ca:	nop    WORD PTR [rax+rax*1+0x0]

00000000004054d0 <table_set_short@@Base>:
  4054d0:	push   rbp
  4054d1:	push   r15
  4054d3:	push   r14
  4054d5:	push   r13
  4054d7:	push   r12
  4054d9:	push   rbx
  4054da:	push   rax
  4054db:	mov    r15d,ecx
  4054de:	mov    ebx,edx
  4054e0:	mov    r14d,esi
  4054e3:	mov    rbp,rdi
  4054e6:	call   405b20 <table_get_cell_ptr@@Base>
  4054eb:	mov    r13,rax
  4054ee:	mov    rdi,rbp
  4054f1:	mov    esi,ebx
  4054f3:	call   403cd0 <table_get_col_ptr@@Base>
  4054f8:	mov    r12d,0xffffffff
  4054fe:	cmp    DWORD PTR [rax+0x8],0xa
  405502:	jne    405539 <table_set_short@@Base+0x69>
  405504:	mov    rax,QWORD PTR [r13+0x0]
  405508:	test   rax,rax
  40550b:	jne    405520 <table_set_short@@Base+0x50>
  40550d:	mov    edi,0x2
  405512:	call   4030a0 <malloc@plt>
  405517:	mov    QWORD PTR [r13+0x0],rax
  40551b:	test   rax,rax
  40551e:	je     405539 <table_set_short@@Base+0x69>
  405520:	mov    WORD PTR [rax],r15w
  405524:	mov    ecx,0x1
  405529:	mov    rdi,rbp
  40552c:	mov    esi,r14d
  40552f:	mov    edx,ebx
  405531:	call   403c10 <table_notify@@Base>
  405536:	xor    r12d,r12d
  405539:	mov    eax,r12d
  40553c:	add    rsp,0x8
  405540:	pop    rbx
  405541:	pop    r12
  405543:	pop    r13
  405545:	pop    r14
  405547:	pop    r15
  405549:	pop    rbp
  40554a:	ret    
  40554b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000405550 <table_set_ushort@@Base>:
  405550:	push   rbp
  405551:	push   r15
  405553:	push   r14
  405555:	push   r13
  405557:	push   r12
  405559:	push   rbx
  40555a:	push   rax
  40555b:	mov    r15d,ecx
  40555e:	mov    ebx,edx
  405560:	mov    r14d,esi
  405563:	mov    rbp,rdi
  405566:	call   405b20 <table_get_cell_ptr@@Base>
  40556b:	mov    r13,rax
  40556e:	mov    rdi,rbp
  405571:	mov    esi,ebx
  405573:	call   403cd0 <table_get_col_ptr@@Base>
  405578:	mov    r12d,0xffffffff
  40557e:	cmp    DWORD PTR [rax+0x8],0xb
  405582:	jne    4055b9 <table_set_ushort@@Base+0x69>
  405584:	mov    rax,QWORD PTR [r13+0x0]
  405588:	test   rax,rax
  40558b:	jne    4055a0 <table_set_ushort@@Base+0x50>
  40558d:	mov    edi,0x2
  405592:	call   4030a0 <malloc@plt>
  405597:	mov    QWORD PTR [r13+0x0],rax
  40559b:	test   rax,rax
  40559e:	je     4055b9 <table_set_ushort@@Base+0x69>
  4055a0:	mov    WORD PTR [rax],r15w
  4055a4:	mov    ecx,0x1
  4055a9:	mov    rdi,rbp
  4055ac:	mov    esi,r14d
  4055af:	mov    edx,ebx
  4055b1:	call   403c10 <table_notify@@Base>
  4055b6:	xor    r12d,r12d
  4055b9:	mov    eax,r12d
  4055bc:	add    rsp,0x8
  4055c0:	pop    rbx
  4055c1:	pop    r12
  4055c3:	pop    r13
  4055c5:	pop    r14
  4055c7:	pop    r15
  4055c9:	pop    rbp
  4055ca:	ret    
  4055cb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004055d0 <table_set_long@@Base>:
  4055d0:	push   rbp
  4055d1:	push   r15
  4055d3:	push   r14
  4055d5:	push   r13
  4055d7:	push   r12
  4055d9:	push   rbx
  4055da:	push   rax
  4055db:	mov    r15,rcx
  4055de:	mov    ebx,edx
  4055e0:	mov    r14d,esi
  4055e3:	mov    rbp,rdi
  4055e6:	call   405b20 <table_get_cell_ptr@@Base>
  4055eb:	mov    r13,rax
  4055ee:	mov    rdi,rbp
  4055f1:	mov    esi,ebx
  4055f3:	call   403cd0 <table_get_col_ptr@@Base>
  4055f8:	mov    r12d,0xffffffff
  4055fe:	cmp    DWORD PTR [rax+0x8],0xc
  405602:	jne    405638 <table_set_long@@Base+0x68>
  405604:	mov    rax,QWORD PTR [r13+0x0]
  405608:	test   rax,rax
  40560b:	jne    405620 <table_set_long@@Base+0x50>
  40560d:	mov    edi,0x8
  405612:	call   4030a0 <malloc@plt>
  405617:	mov    QWORD PTR [r13+0x0],rax
  40561b:	test   rax,rax
  40561e:	je     405638 <table_set_long@@Base+0x68>
  405620:	mov    QWORD PTR [rax],r15
  405623:	mov    ecx,0x1
  405628:	mov    rdi,rbp
  40562b:	mov    esi,r14d
  40562e:	mov    edx,ebx
  405630:	call   403c10 <table_notify@@Base>
  405635:	xor    r12d,r12d
  405638:	mov    eax,r12d
  40563b:	add    rsp,0x8
  40563f:	pop    rbx
  405640:	pop    r12
  405642:	pop    r13
  405644:	pop    r14
  405646:	pop    r15
  405648:	pop    rbp
  405649:	ret    
  40564a:	nop    WORD PTR [rax+rax*1+0x0]

0000000000405650 <table_set_ulong@@Base>:
  405650:	push   rbp
  405651:	push   r15
  405653:	push   r14
  405655:	push   r13
  405657:	push   r12
  405659:	push   rbx
  40565a:	push   rax
  40565b:	mov    r15,rcx
  40565e:	mov    ebx,edx
  405660:	mov    r14d,esi
  405663:	mov    rbp,rdi
  405666:	call   405b20 <table_get_cell_ptr@@Base>
  40566b:	mov    r13,rax
  40566e:	mov    rdi,rbp
  405671:	mov    esi,ebx
  405673:	call   403cd0 <table_get_col_ptr@@Base>
  405678:	mov    r12d,0xffffffff
  40567e:	cmp    DWORD PTR [rax+0x8],0xd
  405682:	jne    4056b8 <table_set_ulong@@Base+0x68>
  405684:	mov    rax,QWORD PTR [r13+0x0]
  405688:	test   rax,rax
  40568b:	jne    4056a0 <table_set_ulong@@Base+0x50>
  40568d:	mov    edi,0x8
  405692:	call   4030a0 <malloc@plt>
  405697:	mov    QWORD PTR [r13+0x0],rax
  40569b:	test   rax,rax
  40569e:	je     4056b8 <table_set_ulong@@Base+0x68>
  4056a0:	mov    QWORD PTR [rax],r15
  4056a3:	mov    ecx,0x1
  4056a8:	mov    rdi,rbp
  4056ab:	mov    esi,r14d
  4056ae:	mov    edx,ebx
  4056b0:	call   403c10 <table_notify@@Base>
  4056b5:	xor    r12d,r12d
  4056b8:	mov    eax,r12d
  4056bb:	add    rsp,0x8
  4056bf:	pop    rbx
  4056c0:	pop    r12
  4056c2:	pop    r13
  4056c4:	pop    r14
  4056c6:	pop    r15
  4056c8:	pop    rbp
  4056c9:	ret    
  4056ca:	nop    WORD PTR [rax+rax*1+0x0]

00000000004056d0 <table_set_llong@@Base>:
  4056d0:	push   rbp
  4056d1:	push   r15
  4056d3:	push   r14
  4056d5:	push   r13
  4056d7:	push   r12
  4056d9:	push   rbx
  4056da:	push   rax
  4056db:	mov    r15,rcx
  4056de:	mov    ebx,edx
  4056e0:	mov    r14d,esi
  4056e3:	mov    rbp,rdi
  4056e6:	call   405b20 <table_get_cell_ptr@@Base>
  4056eb:	mov    r13,rax
  4056ee:	mov    rdi,rbp
  4056f1:	mov    esi,ebx
  4056f3:	call   403cd0 <table_get_col_ptr@@Base>
  4056f8:	mov    r12d,0xffffffff
  4056fe:	cmp    DWORD PTR [rax+0x8],0xe
  405702:	jne    405738 <table_set_llong@@Base+0x68>
  405704:	mov    rax,QWORD PTR [r13+0x0]
  405708:	test   rax,rax
  40570b:	jne    405720 <table_set_llong@@Base+0x50>
  40570d:	mov    edi,0x8
  405712:	call   4030a0 <malloc@plt>
  405717:	mov    QWORD PTR [r13+0x0],rax
  40571b:	test   rax,rax
  40571e:	je     405738 <table_set_llong@@Base+0x68>
  405720:	mov    QWORD PTR [rax],r15
  405723:	mov    ecx,0x1
  405728:	mov    rdi,rbp
  40572b:	mov    esi,r14d
  40572e:	mov    edx,ebx
  405730:	call   403c10 <table_notify@@Base>
  405735:	xor    r12d,r12d
  405738:	mov    eax,r12d
  40573b:	add    rsp,0x8
  40573f:	pop    rbx
  405740:	pop    r12
  405742:	pop    r13
  405744:	pop    r14
  405746:	pop    r15
  405748:	pop    rbp
  405749:	ret    
  40574a:	nop    WORD PTR [rax+rax*1+0x0]

0000000000405750 <table_set_ullong@@Base>:
  405750:	push   rbp
  405751:	push   r15
  405753:	push   r14
  405755:	push   r13
  405757:	push   r12
  405759:	push   rbx
  40575a:	push   rax
  40575b:	mov    r15,rcx
  40575e:	mov    ebx,edx
  405760:	mov    r14d,esi
  405763:	mov    rbp,rdi
  405766:	call   405b20 <table_get_cell_ptr@@Base>
  40576b:	mov    r13,rax
  40576e:	mov    rdi,rbp
  405771:	mov    esi,ebx
  405773:	call   403cd0 <table_get_col_ptr@@Base>
  405778:	mov    r12d,0xffffffff
  40577e:	cmp    DWORD PTR [rax+0x8],0xf
  405782:	jne    4057b8 <table_set_ullong@@Base+0x68>
  405784:	mov    rax,QWORD PTR [r13+0x0]
  405788:	test   rax,rax
  40578b:	jne    4057a0 <table_set_ullong@@Base+0x50>
  40578d:	mov    edi,0x8
  405792:	call   4030a0 <malloc@plt>
  405797:	mov    QWORD PTR [r13+0x0],rax
  40579b:	test   rax,rax
  40579e:	je     4057b8 <table_set_ullong@@Base+0x68>
  4057a0:	mov    QWORD PTR [rax],r15
  4057a3:	mov    ecx,0x1
  4057a8:	mov    rdi,rbp
  4057ab:	mov    esi,r14d
  4057ae:	mov    edx,ebx
  4057b0:	call   403c10 <table_notify@@Base>
  4057b5:	xor    r12d,r12d
  4057b8:	mov    eax,r12d
  4057bb:	add    rsp,0x8
  4057bf:	pop    rbx
  4057c0:	pop    r12
  4057c2:	pop    r13
  4057c4:	pop    r14
  4057c6:	pop    r15
  4057c8:	pop    rbp
  4057c9:	ret    
  4057ca:	nop    WORD PTR [rax+rax*1+0x0]

00000000004057d0 <table_set_float@@Base>:
  4057d0:	push   rbp
  4057d1:	push   r15
  4057d3:	push   r14
  4057d5:	push   r12
  4057d7:	push   rbx
  4057d8:	sub    rsp,0x10
  4057dc:	vmovss DWORD PTR [rsp+0xc],xmm0
  4057e2:	mov    ebx,edx
  4057e4:	mov    r14d,esi
  4057e7:	mov    rbp,rdi
  4057ea:	call   405b20 <table_get_cell_ptr@@Base>
  4057ef:	mov    r12,rax
  4057f2:	mov    rdi,rbp
  4057f5:	mov    esi,ebx
  4057f7:	call   403cd0 <table_get_col_ptr@@Base>
  4057fc:	mov    r15d,0xffffffff
  405802:	cmp    DWORD PTR [rax+0x8],0x10
  405806:	jne    405843 <table_set_float@@Base+0x73>
  405808:	mov    rax,QWORD PTR [r12]
  40580c:	test   rax,rax
  40580f:	jne    405824 <table_set_float@@Base+0x54>
  405811:	mov    edi,0x4
  405816:	call   4030a0 <malloc@plt>
  40581b:	mov    QWORD PTR [r12],rax
  40581f:	test   rax,rax
  405822:	je     405843 <table_set_float@@Base+0x73>
  405824:	vmovss xmm0,DWORD PTR [rsp+0xc]
  40582a:	vmovss DWORD PTR [rax],xmm0
  40582e:	mov    ecx,0x1
  405833:	mov    rdi,rbp
  405836:	mov    esi,r14d
  405839:	mov    edx,ebx
  40583b:	call   403c10 <table_notify@@Base>
  405840:	xor    r15d,r15d
  405843:	mov    eax,r15d
  405846:	add    rsp,0x10
  40584a:	pop    rbx
  40584b:	pop    r12
  40584d:	pop    r14
  40584f:	pop    r15
  405851:	pop    rbp
  405852:	ret    
  405853:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40585d:	nop    DWORD PTR [rax]

0000000000405860 <table_set_double@@Base>:
  405860:	push   rbp
  405861:	push   r15
  405863:	push   r14
  405865:	push   r12
  405867:	push   rbx
  405868:	sub    rsp,0x10
  40586c:	vmovsd QWORD PTR [rsp+0x8],xmm0
  405872:	mov    ebx,edx
  405874:	mov    r14d,esi
  405877:	mov    rbp,rdi
  40587a:	call   405b20 <table_get_cell_ptr@@Base>
  40587f:	mov    r12,rax
  405882:	mov    rdi,rbp
  405885:	mov    esi,ebx
  405887:	call   403cd0 <table_get_col_ptr@@Base>
  40588c:	mov    r15d,0xffffffff
  405892:	cmp    DWORD PTR [rax+0x8],0x11
  405896:	jne    4058d3 <table_set_double@@Base+0x73>
  405898:	mov    rax,QWORD PTR [r12]
  40589c:	test   rax,rax
  40589f:	jne    4058b4 <table_set_double@@Base+0x54>
  4058a1:	mov    edi,0x8
  4058a6:	call   4030a0 <malloc@plt>
  4058ab:	mov    QWORD PTR [r12],rax
  4058af:	test   rax,rax
  4058b2:	je     4058d3 <table_set_double@@Base+0x73>
  4058b4:	vmovsd xmm0,QWORD PTR [rsp+0x8]
  4058ba:	vmovsd QWORD PTR [rax],xmm0
  4058be:	mov    ecx,0x1
  4058c3:	mov    rdi,rbp
  4058c6:	mov    esi,r14d
  4058c9:	mov    edx,ebx
  4058cb:	call   403c10 <table_notify@@Base>
  4058d0:	xor    r15d,r15d
  4058d3:	mov    eax,r15d
  4058d6:	add    rsp,0x10
  4058da:	pop    rbx
  4058db:	pop    r12
  4058dd:	pop    r14
  4058df:	pop    r15
  4058e1:	pop    rbp
  4058e2:	ret    
  4058e3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4058ed:	nop    DWORD PTR [rax]

00000000004058f0 <table_set_ldouble@@Base>:
  4058f0:	push   rbp
  4058f1:	push   r15
  4058f3:	push   r14
  4058f5:	push   r12
  4058f7:	push   rbx
  4058f8:	sub    rsp,0x20
  4058fc:	mov    r15d,edx
  4058ff:	mov    r14d,esi
  405902:	mov    rbp,rdi
  405905:	fld    TBYTE PTR [rsp+0x50]
  405909:	fstp   TBYTE PTR [rsp+0x14]
  40590d:	call   405b20 <table_get_cell_ptr@@Base>
  405912:	mov    r12,rax
  405915:	mov    rdi,rbp
  405918:	mov    esi,r15d
  40591b:	call   403cd0 <table_get_col_ptr@@Base>
  405920:	mov    ebx,0xffffffff
  405925:	cmp    DWORD PTR [rax+0x8],0x12
  405929:	jne    405972 <table_set_ldouble@@Base+0x82>
  40592b:	mov    rax,QWORD PTR [r12]
  40592f:	test   rax,rax
  405932:	jne    405947 <table_set_ldouble@@Base+0x57>
  405934:	mov    edi,0x10
  405939:	call   4030a0 <malloc@plt>
  40593e:	mov    QWORD PTR [r12],rax
  405942:	test   rax,rax
  405945:	je     405972 <table_set_ldouble@@Base+0x82>
  405947:	fld    TBYTE PTR [rsp+0x14]
  40594b:	fstp   TBYTE PTR [rax]
  40594d:	movzx  ecx,WORD PTR [rsp+0x12]
  405952:	mov    WORD PTR [rax+0xe],cx
  405956:	mov    ecx,DWORD PTR [rsp+0xe]
  40595a:	mov    DWORD PTR [rax+0xa],ecx
  40595d:	mov    ecx,0x1
  405962:	mov    rdi,rbp
  405965:	mov    esi,r14d
  405968:	mov    edx,r15d
  40596b:	call   403c10 <table_notify@@Base>
  405970:	xor    ebx,ebx
  405972:	mov    eax,ebx
  405974:	add    rsp,0x20
  405978:	pop    rbx
  405979:	pop    r12
  40597b:	pop    r14
  40597d:	pop    r15
  40597f:	pop    rbp
  405980:	ret    
  405981:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40598b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000405990 <table_set_string@@Base>:
  405990:	mov    r8d,0x15
  405996:	jmp    404cb0 <table_set@@Base>
  40599b:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004059a0 <table_set_char@@Base>:
  4059a0:	push   rbp
  4059a1:	push   r15
  4059a3:	push   r14
  4059a5:	push   r13
  4059a7:	push   r12
  4059a9:	push   rbx
  4059aa:	push   rax
  4059ab:	mov    r15d,ecx
  4059ae:	mov    ebx,edx
  4059b0:	mov    r14d,esi
  4059b3:	mov    rbp,rdi
  4059b6:	call   405b20 <table_get_cell_ptr@@Base>
  4059bb:	mov    r13,rax
  4059be:	mov    rdi,rbp
  4059c1:	mov    esi,ebx
  4059c3:	call   403cd0 <table_get_col_ptr@@Base>
  4059c8:	mov    r12d,0xffffffff
  4059ce:	cmp    DWORD PTR [rax+0x8],0x13
  4059d2:	jne    405a08 <table_set_char@@Base+0x68>
  4059d4:	mov    rax,QWORD PTR [r13+0x0]
  4059d8:	test   rax,rax
  4059db:	jne    4059f0 <table_set_char@@Base+0x50>
  4059dd:	mov    edi,0x1
  4059e2:	call   4030a0 <malloc@plt>
  4059e7:	mov    QWORD PTR [r13+0x0],rax
  4059eb:	test   rax,rax
  4059ee:	je     405a08 <table_set_char@@Base+0x68>
  4059f0:	mov    BYTE PTR [rax],r15b
  4059f3:	mov    ecx,0x1
  4059f8:	mov    rdi,rbp
  4059fb:	mov    esi,r14d
  4059fe:	mov    edx,ebx
  405a00:	call   403c10 <table_notify@@Base>
  405a05:	xor    r12d,r12d
  405a08:	mov    eax,r12d
  405a0b:	add    rsp,0x8
  405a0f:	pop    rbx
  405a10:	pop    r12
  405a12:	pop    r13
  405a14:	pop    r14
  405a16:	pop    r15
  405a18:	pop    rbp
  405a19:	ret    
  405a1a:	nop    WORD PTR [rax+rax*1+0x0]

0000000000405a20 <table_set_uchar@@Base>:
  405a20:	push   rbp
  405a21:	push   r15
  405a23:	push   r14
  405a25:	push   r13
  405a27:	push   r12
  405a29:	push   rbx
  405a2a:	push   rax
  405a2b:	mov    r15d,ecx
  405a2e:	mov    ebx,edx
  405a30:	mov    r14d,esi
  405a33:	mov    rbp,rdi
  405a36:	call   405b20 <table_get_cell_ptr@@Base>
  405a3b:	mov    r13,rax
  405a3e:	mov    rdi,rbp
  405a41:	mov    esi,ebx
  405a43:	call   403cd0 <table_get_col_ptr@@Base>
  405a48:	mov    r12d,0xffffffff
  405a4e:	cmp    DWORD PTR [rax+0x8],0x14
  405a52:	jne    405a88 <table_set_uchar@@Base+0x68>
  405a54:	mov    rax,QWORD PTR [r13+0x0]
  405a58:	test   rax,rax
  405a5b:	jne    405a70 <table_set_uchar@@Base+0x50>
  405a5d:	mov    edi,0x1
  405a62:	call   4030a0 <malloc@plt>
  405a67:	mov    QWORD PTR [r13+0x0],rax
  405a6b:	test   rax,rax
  405a6e:	je     405a88 <table_set_uchar@@Base+0x68>
  405a70:	mov    BYTE PTR [rax],r15b
  405a73:	mov    ecx,0x1
  405a78:	mov    rdi,rbp
  405a7b:	mov    esi,r14d
  405a7e:	mov    edx,ebx
  405a80:	call   403c10 <table_notify@@Base>
  405a85:	xor    r12d,r12d
  405a88:	mov    eax,r12d
  405a8b:	add    rsp,0x8
  405a8f:	pop    rbx
  405a90:	pop    r12
  405a92:	pop    r13
  405a94:	pop    r14
  405a96:	pop    r15
  405a98:	pop    rbp
  405a99:	ret    
  405a9a:	nop    WORD PTR [rax+rax*1+0x0]

0000000000405aa0 <table_set_ptr@@Base>:
  405aa0:	push   rbp
  405aa1:	push   r15
  405aa3:	push   r14
  405aa5:	push   r12
  405aa7:	push   rbx
  405aa8:	mov    r15,rcx
  405aab:	mov    ebx,edx
  405aad:	mov    r14d,esi
  405ab0:	mov    rbp,rdi
  405ab3:	call   405b20 <table_get_cell_ptr@@Base>
  405ab8:	mov    r12,rax
  405abb:	mov    rdi,rbp
  405abe:	mov    esi,ebx
  405ac0:	call   403cd0 <table_get_col_ptr@@Base>
  405ac5:	mov    rcx,rax
  405ac8:	mov    eax,0xffffffff
  405acd:	cmp    DWORD PTR [rcx+0x8],0x17
  405ad1:	jne    405aeb <table_set_ptr@@Base+0x4b>
  405ad3:	mov    QWORD PTR [r12],r15
  405ad7:	mov    ecx,0x1
  405adc:	mov    rdi,rbp
  405adf:	mov    esi,r14d
  405ae2:	mov    edx,ebx
  405ae4:	call   403c10 <table_notify@@Base>
  405ae9:	xor    eax,eax
  405aeb:	pop    rbx
  405aec:	pop    r12
  405aee:	pop    r14
  405af0:	pop    r15
  405af2:	pop    rbp
  405af3:	ret    
  405af4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405afe:	xchg   ax,ax

0000000000405b00 <table_cell_init@@Base>:
  405b00:	push   rbx
  405b01:	mov    ebx,edx
  405b03:	call   404990 <table_get_row_ptr@@Base>
  405b08:	mov    rax,QWORD PTR [rax]
  405b0b:	movsxd rcx,ebx
  405b0e:	mov    QWORD PTR [rax+rcx*8],0x0
  405b16:	pop    rbx
  405b17:	ret    
  405b18:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000405b20 <table_get_cell_ptr@@Base>:
  405b20:	push   rbx
  405b21:	mov    ebx,edx
  405b23:	call   404990 <table_get_row_ptr@@Base>
  405b28:	movsxd rcx,ebx
  405b2b:	shl    rcx,0x3
  405b2f:	add    rcx,QWORD PTR [rax]
  405b32:	mov    rax,rcx
  405b35:	pop    rbx
  405b36:	ret    
  405b37:	nop    WORD PTR [rax+rax*1+0x0]

0000000000405b40 <table_cell_destroy@@Base>:
  405b40:	push   rbp
  405b41:	push   r14
  405b43:	push   rbx
  405b44:	mov    ebx,edx
  405b46:	mov    r14d,esi
  405b49:	mov    rbp,rdi
  405b4c:	mov    esi,edx
  405b4e:	call   403d80 <table_get_column_data_type@@Base>
  405b53:	cmp    eax,0x17
  405b56:	je     405b7b <table_cell_destroy@@Base+0x3b>
  405b58:	mov    rdi,rbp
  405b5b:	mov    esi,r14d
  405b5e:	call   404990 <table_get_row_ptr@@Base>
  405b63:	mov    rax,QWORD PTR [rax]
  405b66:	movsxd rcx,ebx
  405b69:	mov    rdi,QWORD PTR [rax+rcx*8]
  405b6d:	test   rdi,rdi
  405b70:	je     405b7b <table_cell_destroy@@Base+0x3b>
  405b72:	pop    rbx
  405b73:	pop    r14
  405b75:	pop    rbp
  405b76:	jmp    403030 <free@plt>
  405b7b:	pop    rbx
  405b7c:	pop    r14
  405b7e:	pop    rbp
  405b7f:	ret    

0000000000405b80 <table_cell_to_buffer@@Base>:
  405b80:	push   rbp
  405b81:	push   r15
  405b83:	push   r14
  405b85:	push   r12
  405b87:	push   rbx
  405b88:	sub    rsp,0x10
  405b8c:	mov    r14,r8
  405b8f:	mov    r15,rcx
  405b92:	mov    ebp,edx
  405b94:	mov    r12d,esi
  405b97:	mov    rbx,rdi
  405b9a:	mov    esi,edx
  405b9c:	call   403d80 <table_get_column_data_type@@Base>
  405ba1:	cmp    eax,0x17
  405ba4:	ja     405e35 <table_cell_to_buffer@@Base+0x2b5>
  405baa:	mov    eax,eax
  405bac:	lea    rcx,[rip+0x1629]        # 4071dc <_IO_stdin_used@@Base+0x1dc>
  405bb3:	movsxd rax,DWORD PTR [rcx+rax*4]
  405bb7:	add    rax,rcx
  405bba:	jmp    rax
  405bbc:	mov    rdi,rbx
  405bbf:	mov    esi,r12d
  405bc2:	mov    edx,ebp
  405bc4:	call   4047f0 <table_get_int@@Base>
  405bc9:	jmp    405c4f <table_cell_to_buffer@@Base+0xcf>
  405bce:	mov    rdi,rbx
  405bd1:	mov    esi,r12d
  405bd4:	mov    edx,ebp
  405bd6:	call   404800 <table_get_uint@@Base>
  405bdb:	jmp    405c63 <table_cell_to_buffer@@Base+0xe3>
  405be0:	mov    rdi,rbx
  405be3:	mov    esi,r12d
  405be6:	mov    edx,ebp
  405be8:	call   404810 <table_get_int8@@Base>
  405bed:	movsx  ecx,al
  405bf0:	jmp    405dfb <table_cell_to_buffer@@Base+0x27b>
  405bf5:	mov    rdi,rbx
  405bf8:	mov    esi,r12d
  405bfb:	mov    edx,ebp
  405bfd:	call   404820 <table_get_uint8@@Base>
  405c02:	movzx  ecx,al
  405c05:	lea    rdx,[rip+0x1693]        # 40729f <_IO_stdin_used@@Base+0x29f>
  405c0c:	jmp    405e02 <table_cell_to_buffer@@Base+0x282>
  405c11:	mov    rdi,rbx
  405c14:	mov    esi,r12d
  405c17:	mov    edx,ebp
  405c19:	call   404830 <table_get_int16@@Base>
  405c1e:	movsx  ecx,ax
  405c21:	jmp    405dfb <table_cell_to_buffer@@Base+0x27b>
  405c26:	mov    rdi,rbx
  405c29:	mov    esi,r12d
  405c2c:	mov    edx,ebp
  405c2e:	call   404840 <table_get_uint16@@Base>
  405c33:	movzx  ecx,ax
  405c36:	lea    rdx,[rip+0x1662]        # 40729f <_IO_stdin_used@@Base+0x29f>
  405c3d:	jmp    405e02 <table_cell_to_buffer@@Base+0x282>
  405c42:	mov    rdi,rbx
  405c45:	mov    esi,r12d
  405c48:	mov    edx,ebp
  405c4a:	call   404850 <table_get_int32@@Base>
  405c4f:	mov    ecx,eax
  405c51:	jmp    405dfb <table_cell_to_buffer@@Base+0x27b>
  405c56:	mov    rdi,rbx
  405c59:	mov    esi,r12d
  405c5c:	mov    edx,ebp
  405c5e:	call   404860 <table_get_uint32@@Base>
  405c63:	mov    ecx,eax
  405c65:	lea    rdx,[rip+0x1633]        # 40729f <_IO_stdin_used@@Base+0x29f>
  405c6c:	jmp    405e02 <table_cell_to_buffer@@Base+0x282>
  405c71:	mov    rdi,rbx
  405c74:	mov    esi,r12d
  405c77:	mov    edx,ebp
  405c79:	call   404870 <table_get_int64@@Base>
  405c7e:	jmp    405cd4 <table_cell_to_buffer@@Base+0x154>
  405c80:	mov    rdi,rbx
  405c83:	mov    esi,r12d
  405c86:	mov    edx,ebp
  405c88:	call   404880 <table_get_uint64@@Base>
  405c8d:	jmp    405cf0 <table_cell_to_buffer@@Base+0x170>
  405c8f:	mov    rdi,rbx
  405c92:	mov    esi,r12d
  405c95:	mov    edx,ebp
  405c97:	call   404890 <table_get_short@@Base>
  405c9c:	movsx  ecx,ax
  405c9f:	lea    rdx,[rip+0x1604]        # 4072aa <_IO_stdin_used@@Base+0x2aa>
  405ca6:	jmp    405e02 <table_cell_to_buffer@@Base+0x282>
  405cab:	mov    rdi,rbx
  405cae:	mov    esi,r12d
  405cb1:	mov    edx,ebp
  405cb3:	call   4048a0 <table_get_ushort@@Base>
  405cb8:	movzx  ecx,ax
  405cbb:	lea    rdx,[rip+0x15ec]        # 4072ae <_IO_stdin_used@@Base+0x2ae>
  405cc2:	jmp    405e02 <table_cell_to_buffer@@Base+0x282>
  405cc7:	mov    rdi,rbx
  405cca:	mov    esi,r12d
  405ccd:	mov    edx,ebp
  405ccf:	call   4048b0 <table_get_long@@Base>
  405cd4:	mov    rcx,rax
  405cd7:	lea    rdx,[rip+0x15c4]        # 4072a2 <_IO_stdin_used@@Base+0x2a2>
  405cde:	jmp    405e28 <table_cell_to_buffer@@Base+0x2a8>
  405ce3:	mov    rdi,rbx
  405ce6:	mov    esi,r12d
  405ce9:	mov    edx,ebp
  405ceb:	call   4048c0 <table_get_ulong@@Base>
  405cf0:	mov    rcx,rax
  405cf3:	lea    rdx,[rip+0x15ac]        # 4072a6 <_IO_stdin_used@@Base+0x2a6>
  405cfa:	jmp    405e28 <table_cell_to_buffer@@Base+0x2a8>
  405cff:	mov    rdi,rbx
  405d02:	mov    esi,r12d
  405d05:	mov    edx,ebp
  405d07:	call   4048d0 <table_get_llong@@Base>
  405d0c:	mov    rcx,rax
  405d0f:	lea    rdx,[rip+0x159c]        # 4072b2 <_IO_stdin_used@@Base+0x2b2>
  405d16:	jmp    405e28 <table_cell_to_buffer@@Base+0x2a8>
  405d1b:	mov    rdi,rbx
  405d1e:	mov    esi,r12d
  405d21:	mov    edx,ebp
  405d23:	call   4048e0 <table_get_ullong@@Base>
  405d28:	mov    rcx,rax
  405d2b:	lea    rdx,[rip+0x1585]        # 4072b7 <_IO_stdin_used@@Base+0x2b7>
  405d32:	jmp    405e28 <table_cell_to_buffer@@Base+0x2a8>
  405d37:	mov    rdi,rbx
  405d3a:	mov    esi,r12d
  405d3d:	mov    edx,ebp
  405d3f:	call   4048f0 <table_get_float@@Base>
  405d44:	vcvtss2sd xmm0,xmm0,xmm0
  405d48:	lea    rdx,[rip+0x1570]        # 4072bf <_IO_stdin_used@@Base+0x2bf>
  405d4f:	jmp    405d65 <table_cell_to_buffer@@Base+0x1e5>
  405d51:	mov    rdi,rbx
  405d54:	mov    esi,r12d
  405d57:	mov    edx,ebp
  405d59:	call   404900 <table_get_double@@Base>
  405d5e:	lea    rdx,[rip+0x155d]        # 4072c2 <_IO_stdin_used@@Base+0x2c2>
  405d65:	mov    al,0x1
  405d67:	mov    rdi,r15
  405d6a:	mov    rsi,r14
  405d6d:	call   403080 <snprintf@plt>
  405d72:	jmp    405e35 <table_cell_to_buffer@@Base+0x2b5>
  405d77:	mov    rdi,rbx
  405d7a:	mov    esi,r12d
  405d7d:	mov    edx,ebp
  405d7f:	call   404910 <table_get_ldouble@@Base>
  405d84:	fstp   TBYTE PTR [rsp]
  405d87:	lea    rdx,[rip+0x1538]        # 4072c6 <_IO_stdin_used@@Base+0x2c6>
  405d8e:	xor    eax,eax
  405d90:	mov    rdi,r15
  405d93:	mov    rsi,r14
  405d96:	call   403080 <snprintf@plt>
  405d9b:	jmp    405e35 <table_cell_to_buffer@@Base+0x2b5>
  405da0:	mov    rdi,rbx
  405da3:	mov    esi,r12d
  405da6:	mov    edx,ebp
  405da8:	call   404920 <table_get_char@@Base>
  405dad:	movsx  ecx,al
  405db0:	lea    rdx,[rip+0x1513]        # 4072ca <_IO_stdin_used@@Base+0x2ca>
  405db7:	jmp    405e02 <table_cell_to_buffer@@Base+0x282>
  405db9:	mov    rdi,rbx
  405dbc:	mov    esi,r12d
  405dbf:	mov    edx,ebp
  405dc1:	call   404930 <table_get_uchar@@Base>
  405dc6:	movzx  ecx,al
  405dc9:	lea    rdx,[rip+0x14fa]        # 4072ca <_IO_stdin_used@@Base+0x2ca>
  405dd0:	jmp    405e02 <table_cell_to_buffer@@Base+0x282>
  405dd2:	mov    rdi,rbx
  405dd5:	mov    esi,r12d
  405dd8:	mov    edx,ebp
  405dda:	call   404940 <table_get_string@@Base>
  405ddf:	mov    rcx,rax
  405de2:	lea    rdx,[rip+0x14d3]        # 4072bc <_IO_stdin_used@@Base+0x2bc>
  405de9:	jmp    405e28 <table_cell_to_buffer@@Base+0x2a8>
  405deb:	mov    rdi,rbx
  405dee:	mov    esi,r12d
  405df1:	mov    edx,ebp
  405df3:	call   4047e0 <table_get_bool@@Base>
  405df8:	movzx  ecx,al
  405dfb:	lea    rdx,[rip+0x149a]        # 40729c <_IO_stdin_used@@Base+0x29c>
  405e02:	xor    eax,eax
  405e04:	mov    rdi,r15
  405e07:	mov    rsi,r14
  405e0a:	call   403080 <snprintf@plt>
  405e0f:	jmp    405e35 <table_cell_to_buffer@@Base+0x2b5>
  405e11:	mov    rdi,rbx
  405e14:	mov    esi,r12d
  405e17:	mov    edx,ebp
  405e19:	call   404950 <table_get_ptr@@Base>
  405e1e:	mov    rcx,rax
  405e21:	lea    rdx,[rip+0x14a5]        # 4072cd <_IO_stdin_used@@Base+0x2cd>
  405e28:	xor    eax,eax
  405e2a:	mov    rdi,r15
  405e2d:	mov    rsi,r14
  405e30:	call   403080 <snprintf@plt>
  405e35:	xor    eax,eax
  405e37:	add    rsp,0x10
  405e3b:	pop    rbx
  405e3c:	pop    r12
  405e3e:	pop    r14
  405e40:	pop    r15
  405e42:	pop    rbp
  405e43:	ret    
  405e44:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405e4e:	xchg   ax,ax

0000000000405e50 <table_cell_from_buffer@@Base>:
  405e50:	push   rbp
  405e51:	push   r15
  405e53:	push   r14
  405e55:	push   rbx
  405e56:	sub    rsp,0x118
  405e5d:	mov    rbx,rcx
  405e60:	mov    r15d,edx
  405e63:	mov    r14d,esi
  405e66:	mov    rbp,rdi
  405e69:	mov    esi,edx
  405e6b:	call   403d80 <table_get_column_data_type@@Base>
  405e70:	cmp    eax,0x17
  405e73:	ja     40641f <table_cell_from_buffer@@Base+0x5cf>
  405e79:	mov    eax,eax
  405e7b:	lea    rcx,[rip+0x13ba]        # 40723c <_IO_stdin_used@@Base+0x23c>
  405e82:	movsxd rax,DWORD PTR [rcx+rax*4]
  405e86:	add    rax,rcx
  405e89:	jmp    rax
  405e8b:	lea    rsi,[rip+0x140a]        # 40729c <_IO_stdin_used@@Base+0x29c>
  405e92:	lea    rdx,[rsp+0x10]
  405e97:	xor    eax,eax
  405e99:	mov    rdi,rbx
  405e9c:	call   4030b0 <__isoc99_sscanf@plt>
  405ea1:	mov    ebx,0xffffffff
  405ea6:	cmp    eax,0x1
  405ea9:	jne    406421 <table_cell_from_buffer@@Base+0x5d1>
  405eaf:	mov    ecx,DWORD PTR [rsp+0x10]
  405eb3:	mov    rdi,rbp
  405eb6:	mov    esi,r14d
  405eb9:	mov    edx,r15d
  405ebc:	call   404fd0 <table_set_int@@Base>
  405ec1:	jmp    40641f <table_cell_from_buffer@@Base+0x5cf>
  405ec6:	lea    rsi,[rip+0x13d2]        # 40729f <_IO_stdin_used@@Base+0x29f>
  405ecd:	lea    rdx,[rsp+0x10]
  405ed2:	xor    eax,eax
  405ed4:	mov    rdi,rbx
  405ed7:	call   4030b0 <__isoc99_sscanf@plt>
  405edc:	mov    ebx,0xffffffff
  405ee1:	cmp    eax,0x1
  405ee4:	jne    406421 <table_cell_from_buffer@@Base+0x5d1>
  405eea:	mov    ecx,DWORD PTR [rsp+0x10]
  405eee:	mov    rdi,rbp
  405ef1:	mov    esi,r14d
  405ef4:	mov    edx,r15d
  405ef7:	call   405050 <table_set_uint@@Base>
  405efc:	jmp    40641f <table_cell_from_buffer@@Base+0x5cf>
  405f01:	lea    rsi,[rip+0x13c8]        # 4072d0 <_IO_stdin_used@@Base+0x2d0>
  405f08:	lea    rdx,[rsp+0x10]
  405f0d:	xor    eax,eax
  405f0f:	mov    rdi,rbx
  405f12:	call   4030b0 <__isoc99_sscanf@plt>
  405f17:	mov    ebx,0xffffffff
  405f1c:	cmp    eax,0x1
  405f1f:	jne    406421 <table_cell_from_buffer@@Base+0x5d1>
  405f25:	movsx  ecx,BYTE PTR [rsp+0x10]
  405f2a:	mov    rdi,rbp
  405f2d:	mov    esi,r14d
  405f30:	mov    edx,r15d
  405f33:	call   4050d0 <table_set_int8@@Base>
  405f38:	jmp    40641f <table_cell_from_buffer@@Base+0x5cf>
  405f3d:	lea    rsi,[rip+0x1391]        # 4072d5 <_IO_stdin_used@@Base+0x2d5>
  405f44:	lea    rdx,[rsp+0x10]
  405f49:	xor    eax,eax
  405f4b:	mov    rdi,rbx
  405f4e:	call   4030b0 <__isoc99_sscanf@plt>
  405f53:	mov    ebx,0xffffffff
  405f58:	cmp    eax,0x1
  405f5b:	jne    406421 <table_cell_from_buffer@@Base+0x5d1>
  405f61:	movzx  ecx,BYTE PTR [rsp+0x10]
  405f66:	mov    rdi,rbp
  405f69:	mov    esi,r14d
  405f6c:	mov    edx,r15d
  405f6f:	call   405150 <table_set_uint8@@Base>
  405f74:	jmp    40641f <table_cell_from_buffer@@Base+0x5cf>
  405f79:	lea    rsi,[rip+0x132a]        # 4072aa <_IO_stdin_used@@Base+0x2aa>
  405f80:	lea    rdx,[rsp+0x10]
  405f85:	xor    eax,eax
  405f87:	mov    rdi,rbx
  405f8a:	call   4030b0 <__isoc99_sscanf@plt>
  405f8f:	mov    ebx,0xffffffff
  405f94:	cmp    eax,0x1
  405f97:	jne    406421 <table_cell_from_buffer@@Base+0x5d1>
  405f9d:	movsx  ecx,WORD PTR [rsp+0x10]
  405fa2:	mov    rdi,rbp
  405fa5:	mov    esi,r14d
  405fa8:	mov    edx,r15d
  405fab:	call   4051d0 <table_set_int16@@Base>
  405fb0:	jmp    40641f <table_cell_from_buffer@@Base+0x5cf>
  405fb5:	lea    rsi,[rip+0x12f2]        # 4072ae <_IO_stdin_used@@Base+0x2ae>
  405fbc:	lea    rdx,[rsp+0x10]
  405fc1:	xor    eax,eax
  405fc3:	mov    rdi,rbx
  405fc6:	call   4030b0 <__isoc99_sscanf@plt>
  405fcb:	mov    ebx,0xffffffff
  405fd0:	cmp    eax,0x1
  405fd3:	jne    406421 <table_cell_from_buffer@@Base+0x5d1>
  405fd9:	movzx  ecx,WORD PTR [rsp+0x10]
  405fde:	mov    rdi,rbp
  405fe1:	mov    esi,r14d
  405fe4:	mov    edx,r15d
  405fe7:	call   405250 <table_set_uint16@@Base>
  405fec:	jmp    40641f <table_cell_from_buffer@@Base+0x5cf>
  405ff1:	lea    rsi,[rip+0x12a4]        # 40729c <_IO_stdin_used@@Base+0x29c>
  405ff8:	lea    rdx,[rsp+0x10]
  405ffd:	xor    eax,eax
  405fff:	mov    rdi,rbx
  406002:	call   4030b0 <__isoc99_sscanf@plt>
  406007:	mov    ebx,0xffffffff
  40600c:	cmp    eax,0x1
  40600f:	jne    406421 <table_cell_from_buffer@@Base+0x5d1>
  406015:	mov    ecx,DWORD PTR [rsp+0x10]
  406019:	mov    rdi,rbp
  40601c:	mov    esi,r14d
  40601f:	mov    edx,r15d
  406022:	call   4052d0 <table_set_int32@@Base>
  406027:	jmp    40641f <table_cell_from_buffer@@Base+0x5cf>
  40602c:	lea    rsi,[rip+0x126c]        # 40729f <_IO_stdin_used@@Base+0x29f>
  406033:	lea    rdx,[rsp+0x10]
  406038:	xor    eax,eax
  40603a:	mov    rdi,rbx
  40603d:	call   4030b0 <__isoc99_sscanf@plt>
  406042:	mov    ebx,0xffffffff
  406047:	cmp    eax,0x1
  40604a:	jne    406421 <table_cell_from_buffer@@Base+0x5d1>
  406050:	mov    ecx,DWORD PTR [rsp+0x10]
  406054:	mov    rdi,rbp
  406057:	mov    esi,r14d
  40605a:	mov    edx,r15d
  40605d:	call   405350 <table_set_uint32@@Base>
  406062:	jmp    40641f <table_cell_from_buffer@@Base+0x5cf>
  406067:	lea    rsi,[rip+0x1234]        # 4072a2 <_IO_stdin_used@@Base+0x2a2>
  40606e:	lea    rdx,[rsp+0x10]
  406073:	xor    eax,eax
  406075:	mov    rdi,rbx
  406078:	call   4030b0 <__isoc99_sscanf@plt>
  40607d:	mov    ebx,0xffffffff
  406082:	cmp    eax,0x1
  406085:	jne    406421 <table_cell_from_buffer@@Base+0x5d1>
  40608b:	mov    rcx,QWORD PTR [rsp+0x10]
  406090:	mov    rdi,rbp
  406093:	mov    esi,r14d
  406096:	mov    edx,r15d
  406099:	call   4053d0 <table_set_int64@@Base>
  40609e:	jmp    40641f <table_cell_from_buffer@@Base+0x5cf>
  4060a3:	lea    rsi,[rip+0x11fc]        # 4072a6 <_IO_stdin_used@@Base+0x2a6>
  4060aa:	lea    rdx,[rsp+0x10]
  4060af:	xor    eax,eax
  4060b1:	mov    rdi,rbx
  4060b4:	call   4030b0 <__isoc99_sscanf@plt>
  4060b9:	mov    ebx,0xffffffff
  4060be:	cmp    eax,0x1
  4060c1:	jne    406421 <table_cell_from_buffer@@Base+0x5d1>
  4060c7:	mov    rcx,QWORD PTR [rsp+0x10]
  4060cc:	mov    rdi,rbp
  4060cf:	mov    esi,r14d
  4060d2:	mov    edx,r15d
  4060d5:	call   405450 <table_set_uint64@@Base>
  4060da:	jmp    40641f <table_cell_from_buffer@@Base+0x5cf>
  4060df:	lea    rsi,[rip+0x11c4]        # 4072aa <_IO_stdin_used@@Base+0x2aa>
  4060e6:	lea    rdx,[rsp+0x10]
  4060eb:	xor    eax,eax
  4060ed:	mov    rdi,rbx
  4060f0:	call   4030b0 <__isoc99_sscanf@plt>
  4060f5:	mov    ebx,0xffffffff
  4060fa:	cmp    eax,0x1
  4060fd:	jne    406421 <table_cell_from_buffer@@Base+0x5d1>
  406103:	movsx  ecx,WORD PTR [rsp+0x10]
  406108:	mov    rdi,rbp
  40610b:	mov    esi,r14d
  40610e:	mov    edx,r15d
  406111:	call   4054d0 <table_set_short@@Base>
  406116:	jmp    40641f <table_cell_from_buffer@@Base+0x5cf>
  40611b:	lea    rsi,[rip+0x118c]        # 4072ae <_IO_stdin_used@@Base+0x2ae>
  406122:	lea    rdx,[rsp+0x10]
  406127:	xor    eax,eax
  406129:	mov    rdi,rbx
  40612c:	call   4030b0 <__isoc99_sscanf@plt>
  406131:	mov    ebx,0xffffffff
  406136:	cmp    eax,0x1
  406139:	jne    406421 <table_cell_from_buffer@@Base+0x5d1>
  40613f:	movzx  ecx,WORD PTR [rsp+0x10]
  406144:	mov    rdi,rbp
  406147:	mov    esi,r14d
  40614a:	mov    edx,r15d
  40614d:	call   405550 <table_set_ushort@@Base>
  406152:	jmp    40641f <table_cell_from_buffer@@Base+0x5cf>
  406157:	lea    rsi,[rip+0x1144]        # 4072a2 <_IO_stdin_used@@Base+0x2a2>
  40615e:	lea    rdx,[rsp+0x10]
  406163:	xor    eax,eax
  406165:	mov    rdi,rbx
  406168:	call   4030b0 <__isoc99_sscanf@plt>
  40616d:	mov    ebx,0xffffffff
  406172:	cmp    eax,0x1
  406175:	jne    406421 <table_cell_from_buffer@@Base+0x5d1>
  40617b:	mov    rcx,QWORD PTR [rsp+0x10]
  406180:	mov    rdi,rbp
  406183:	mov    esi,r14d
  406186:	mov    edx,r15d
  406189:	call   4055d0 <table_set_long@@Base>
  40618e:	jmp    40641f <table_cell_from_buffer@@Base+0x5cf>
  406193:	lea    rsi,[rip+0x110c]        # 4072a6 <_IO_stdin_used@@Base+0x2a6>
  40619a:	lea    rdx,[rsp+0x10]
  40619f:	xor    eax,eax
  4061a1:	mov    rdi,rbx
  4061a4:	call   4030b0 <__isoc99_sscanf@plt>
  4061a9:	mov    ebx,0xffffffff
  4061ae:	cmp    eax,0x1
  4061b1:	jne    406421 <table_cell_from_buffer@@Base+0x5d1>
  4061b7:	mov    rcx,QWORD PTR [rsp+0x10]
  4061bc:	mov    rdi,rbp
  4061bf:	mov    esi,r14d
  4061c2:	mov    edx,r15d
  4061c5:	call   405650 <table_set_ulong@@Base>
  4061ca:	jmp    40641f <table_cell_from_buffer@@Base+0x5cf>
  4061cf:	lea    rsi,[rip+0x10dc]        # 4072b2 <_IO_stdin_used@@Base+0x2b2>
  4061d6:	lea    rdx,[rsp+0x10]
  4061db:	xor    eax,eax
  4061dd:	mov    rdi,rbx
  4061e0:	call   4030b0 <__isoc99_sscanf@plt>
  4061e5:	mov    ebx,0xffffffff
  4061ea:	cmp    eax,0x1
  4061ed:	jne    406421 <table_cell_from_buffer@@Base+0x5d1>
  4061f3:	mov    rcx,QWORD PTR [rsp+0x10]
  4061f8:	mov    rdi,rbp
  4061fb:	mov    esi,r14d
  4061fe:	mov    edx,r15d
  406201:	call   4056d0 <table_set_llong@@Base>
  406206:	jmp    40641f <table_cell_from_buffer@@Base+0x5cf>
  40620b:	lea    rsi,[rip+0x10a5]        # 4072b7 <_IO_stdin_used@@Base+0x2b7>
  406212:	lea    rdx,[rsp+0x10]
  406217:	xor    eax,eax
  406219:	mov    rdi,rbx
  40621c:	call   4030b0 <__isoc99_sscanf@plt>
  406221:	mov    ebx,0xffffffff
  406226:	cmp    eax,0x1
  406229:	jne    406421 <table_cell_from_buffer@@Base+0x5d1>
  40622f:	mov    rcx,QWORD PTR [rsp+0x10]
  406234:	mov    rdi,rbp
  406237:	mov    esi,r14d
  40623a:	mov    edx,r15d
  40623d:	call   405750 <table_set_ullong@@Base>
  406242:	jmp    40641f <table_cell_from_buffer@@Base+0x5cf>
  406247:	lea    rsi,[rip+0x1071]        # 4072bf <_IO_stdin_used@@Base+0x2bf>
  40624e:	lea    rdx,[rsp+0x10]
  406253:	xor    eax,eax
  406255:	mov    rdi,rbx
  406258:	call   4030b0 <__isoc99_sscanf@plt>
  40625d:	mov    ebx,0xffffffff
  406262:	cmp    eax,0x1
  406265:	jne    406421 <table_cell_from_buffer@@Base+0x5d1>
  40626b:	vmovss xmm0,DWORD PTR [rsp+0x10]
  406271:	mov    rdi,rbp
  406274:	mov    esi,r14d
  406277:	mov    edx,r15d
  40627a:	call   4057d0 <table_set_float@@Base>
  40627f:	jmp    40641f <table_cell_from_buffer@@Base+0x5cf>
  406284:	lea    rsi,[rip+0x1037]        # 4072c2 <_IO_stdin_used@@Base+0x2c2>
  40628b:	lea    rdx,[rsp+0x10]
  406290:	xor    eax,eax
  406292:	mov    rdi,rbx
  406295:	call   4030b0 <__isoc99_sscanf@plt>
  40629a:	mov    ebx,0xffffffff
  40629f:	cmp    eax,0x1
  4062a2:	jne    406421 <table_cell_from_buffer@@Base+0x5d1>
  4062a8:	vmovsd xmm0,QWORD PTR [rsp+0x10]
  4062ae:	mov    rdi,rbp
  4062b1:	mov    esi,r14d
  4062b4:	mov    edx,r15d
  4062b7:	call   405860 <table_set_double@@Base>
  4062bc:	jmp    40641f <table_cell_from_buffer@@Base+0x5cf>
  4062c1:	lea    rsi,[rip+0xffe]        # 4072c6 <_IO_stdin_used@@Base+0x2c6>
  4062c8:	lea    rdx,[rsp+0x10]
  4062cd:	xor    eax,eax
  4062cf:	mov    rdi,rbx
  4062d2:	call   4030b0 <__isoc99_sscanf@plt>
  4062d7:	mov    ebx,0xffffffff
  4062dc:	cmp    eax,0x1
  4062df:	jne    406421 <table_cell_from_buffer@@Base+0x5d1>
  4062e5:	fld    TBYTE PTR [rsp+0x10]
  4062e9:	fstp   TBYTE PTR [rsp]
  4062ec:	mov    rdi,rbp
  4062ef:	mov    esi,r14d
  4062f2:	mov    edx,r15d
  4062f5:	call   4058f0 <table_set_ldouble@@Base>
  4062fa:	jmp    40641f <table_cell_from_buffer@@Base+0x5cf>
  4062ff:	lea    rsi,[rip+0xfc4]        # 4072ca <_IO_stdin_used@@Base+0x2ca>
  406306:	lea    rdx,[rsp+0x10]
  40630b:	xor    eax,eax
  40630d:	mov    rdi,rbx
  406310:	call   4030b0 <__isoc99_sscanf@plt>
  406315:	mov    ebx,0xffffffff
  40631a:	cmp    eax,0x1
  40631d:	jne    406421 <table_cell_from_buffer@@Base+0x5d1>
  406323:	movsx  ecx,BYTE PTR [rsp+0x10]
  406328:	mov    rdi,rbp
  40632b:	mov    esi,r14d
  40632e:	mov    edx,r15d
  406331:	call   4059a0 <table_set_char@@Base>
  406336:	jmp    40641f <table_cell_from_buffer@@Base+0x5cf>
  40633b:	lea    rsi,[rip+0xf88]        # 4072ca <_IO_stdin_used@@Base+0x2ca>
  406342:	lea    rdx,[rsp+0x10]
  406347:	xor    eax,eax
  406349:	mov    rdi,rbx
  40634c:	call   4030b0 <__isoc99_sscanf@plt>
  406351:	mov    ebx,0xffffffff
  406356:	cmp    eax,0x1
  406359:	jne    406421 <table_cell_from_buffer@@Base+0x5d1>
  40635f:	movzx  ecx,BYTE PTR [rsp+0x10]
  406364:	mov    rdi,rbp
  406367:	mov    esi,r14d
  40636a:	mov    edx,r15d
  40636d:	call   405a20 <table_set_uchar@@Base>
  406372:	jmp    40641f <table_cell_from_buffer@@Base+0x5cf>
  406377:	lea    rsi,[rip+0xf3e]        # 4072bc <_IO_stdin_used@@Base+0x2bc>
  40637e:	lea    rdx,[rsp+0x10]
  406383:	xor    eax,eax
  406385:	mov    rdi,rbx
  406388:	call   4030b0 <__isoc99_sscanf@plt>
  40638d:	mov    ebx,0xffffffff
  406392:	cmp    eax,0x1
  406395:	jne    406421 <table_cell_from_buffer@@Base+0x5d1>
  40639b:	lea    rcx,[rsp+0x10]
  4063a0:	mov    rdi,rbp
  4063a3:	mov    esi,r14d
  4063a6:	mov    edx,r15d
  4063a9:	call   405990 <table_set_string@@Base>
  4063ae:	jmp    40641f <table_cell_from_buffer@@Base+0x5cf>
  4063b0:	lea    rsi,[rip+0xee5]        # 40729c <_IO_stdin_used@@Base+0x29c>
  4063b7:	lea    rdx,[rsp+0x10]
  4063bc:	xor    eax,eax
  4063be:	mov    rdi,rbx
  4063c1:	call   4030b0 <__isoc99_sscanf@plt>
  4063c6:	mov    ebx,0xffffffff
  4063cb:	cmp    eax,0x1
  4063ce:	jne    406421 <table_cell_from_buffer@@Base+0x5d1>
  4063d0:	cmp    DWORD PTR [rsp+0x10],0x0
  4063d5:	je     406431 <table_cell_from_buffer@@Base+0x5e1>
  4063d7:	mov    ecx,0x1
  4063dc:	mov    rdi,rbp
  4063df:	mov    esi,r14d
  4063e2:	mov    edx,r15d
  4063e5:	call   404f50 <table_set_bool@@Base>
  4063ea:	jmp    40641f <table_cell_from_buffer@@Base+0x5cf>
  4063ec:	lea    rsi,[rip+0xeda]        # 4072cd <_IO_stdin_used@@Base+0x2cd>
  4063f3:	lea    rdx,[rsp+0x10]
  4063f8:	xor    eax,eax
  4063fa:	mov    rdi,rbx
  4063fd:	call   4030b0 <__isoc99_sscanf@plt>
  406402:	mov    ebx,0xffffffff
  406407:	cmp    eax,0x1
  40640a:	jne    406421 <table_cell_from_buffer@@Base+0x5d1>
  40640c:	mov    rcx,QWORD PTR [rsp+0x10]
  406411:	mov    rdi,rbp
  406414:	mov    esi,r14d
  406417:	mov    edx,r15d
  40641a:	call   405aa0 <table_set_ptr@@Base>
  40641f:	xor    ebx,ebx
  406421:	mov    eax,ebx
  406423:	add    rsp,0x118
  40642a:	pop    rbx
  40642b:	pop    r14
  40642d:	pop    r15
  40642f:	pop    rbp
  406430:	ret    
  406431:	xor    ebx,ebx
  406433:	xor    ecx,ecx
  406435:	mov    rdi,rbp
  406438:	mov    esi,r14d
  40643b:	mov    edx,r15d
  40643e:	call   404f50 <table_set_bool@@Base>
  406443:	jmp    406421 <table_cell_from_buffer@@Base+0x5d1>
  406445:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40644f:	nop

0000000000406450 <table_cell_nullify@@Base>:
  406450:	push   rbp
  406451:	push   rbx
  406452:	push   rax
  406453:	mov    ebp,edx
  406455:	call   404990 <table_get_row_ptr@@Base>
  40645a:	mov    rbx,QWORD PTR [rax]
  40645d:	movsxd rbp,ebp
  406460:	mov    rdi,QWORD PTR [rbx+rbp*8]
  406464:	test   rdi,rdi
  406467:	je     406476 <table_cell_nullify@@Base+0x26>
  406469:	call   403030 <free@plt>
  40646e:	mov    QWORD PTR [rbx+rbp*8],0x0
  406476:	xor    eax,eax
  406478:	add    rsp,0x8
  40647c:	pop    rbx
  40647d:	pop    rbp
  40647e:	ret    
  40647f:	nop

0000000000406480 <__libc_csu_init@@Base>:
  406480:	endbr64 
  406484:	push   r15
  406486:	lea    r15,[rip+0x38b3]        # 409d40 <_IO_stdin_used@@Base+0x2d40>
  40648d:	push   r14
  40648f:	mov    r14,rdx
  406492:	push   r13
  406494:	mov    r13,rsi
  406497:	push   r12
  406499:	mov    r12d,edi
  40649c:	push   rbp
  40649d:	lea    rbp,[rip+0x38a4]        # 409d48 <_IO_stdin_used@@Base+0x2d48>
  4064a4:	push   rbx
  4064a5:	sub    rbp,r15
  4064a8:	sub    rsp,0x8
  4064ac:	call   403000 <free@plt-0x30>
  4064b1:	sar    rbp,0x3
  4064b5:	je     4064d6 <__libc_csu_init@@Base+0x56>
  4064b7:	xor    ebx,ebx
  4064b9:	nop    DWORD PTR [rax+0x0]
  4064c0:	mov    rdx,r14
  4064c3:	mov    rsi,r13
  4064c6:	mov    edi,r12d
  4064c9:	call   QWORD PTR [r15+rbx*8]
  4064cd:	add    rbx,0x1
  4064d1:	cmp    rbp,rbx
  4064d4:	jne    4064c0 <__libc_csu_init@@Base+0x40>
  4064d6:	add    rsp,0x8
  4064da:	pop    rbx
  4064db:	pop    rbp
  4064dc:	pop    r12
  4064de:	pop    r13
  4064e0:	pop    r14
  4064e2:	pop    r15
  4064e4:	ret    
  4064e5:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

00000000004064f0 <__libc_csu_fini@@Base>:
  4064f0:	endbr64 
  4064f4:	ret    

Disassembly of section .fini:

00000000004064f8 <.fini>:
  4064f8:	endbr64 
  4064fc:	sub    rsp,0x8
  406500:	add    rsp,0x8
  406504:	ret    
