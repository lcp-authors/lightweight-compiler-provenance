
../repos/dvidelabs-flatcc-3b39ef7/test/monster_test/monster_test:     file format elf64-x86-64


Disassembly of section .init:

0000000000404000 <.init>:
  404000:	endbr64 
  404004:	sub    rsp,0x8
  404008:	mov    rax,QWORD PTR [rip+0x1afe1]        # 41eff0 <__gmon_start__>
  40400f:	test   rax,rax
  404012:	je     404016 <free@plt-0x1a>
  404014:	call   rax
  404016:	add    rsp,0x8
  40401a:	ret    

Disassembly of section .plt:

0000000000404020 <free@plt-0x10>:
  404020:	push   QWORD PTR [rip+0x1afe2]        # 41f008 <flatcc_builder_padding_base@@Base+0x4ec8>
  404026:	jmp    QWORD PTR [rip+0x1afe4]        # 41f010 <flatcc_builder_padding_base@@Base+0x4ed0>
  40402c:	nop    DWORD PTR [rax+0x0]

0000000000404030 <free@plt>:
  404030:	jmp    QWORD PTR [rip+0x1afe2]        # 41f018 <free@GLIBC_2.2.5>
  404036:	push   0x0
  40403b:	jmp    404020 <free@plt-0x10>

0000000000404040 <strncpy@plt>:
  404040:	jmp    QWORD PTR [rip+0x1afda]        # 41f020 <strncpy@GLIBC_2.2.5>
  404046:	push   0x1
  40404b:	jmp    404020 <free@plt-0x10>

0000000000404050 <strncmp@plt>:
  404050:	jmp    QWORD PTR [rip+0x1afd2]        # 41f028 <strncmp@GLIBC_2.2.5>
  404056:	push   0x2
  40405b:	jmp    404020 <free@plt-0x10>

0000000000404060 <strlen@plt>:
  404060:	jmp    QWORD PTR [rip+0x1afca]        # 41f030 <strlen@GLIBC_2.2.5>
  404066:	push   0x3
  40406b:	jmp    404020 <free@plt-0x10>

0000000000404070 <__stack_chk_fail@plt>:
  404070:	jmp    QWORD PTR [rip+0x1afc2]        # 41f038 <__stack_chk_fail@GLIBC_2.4>
  404076:	push   0x4
  40407b:	jmp    404020 <free@plt-0x10>

0000000000404080 <gettimeofday@plt>:
  404080:	jmp    QWORD PTR [rip+0x1afba]        # 41f040 <gettimeofday@GLIBC_2.2.5>
  404086:	push   0x5
  40408b:	jmp    404020 <free@plt-0x10>

0000000000404090 <__assert_fail@plt>:
  404090:	jmp    QWORD PTR [rip+0x1afb2]        # 41f048 <__assert_fail@GLIBC_2.2.5>
  404096:	push   0x6
  40409b:	jmp    404020 <free@plt-0x10>

00000000004040a0 <memset@plt>:
  4040a0:	jmp    QWORD PTR [rip+0x1afaa]        # 41f050 <memset@GLIBC_2.2.5>
  4040a6:	push   0x7
  4040ab:	jmp    404020 <free@plt-0x10>

00000000004040b0 <memchr@plt>:
  4040b0:	jmp    QWORD PTR [rip+0x1afa2]        # 41f058 <memchr@GLIBC_2.2.5>
  4040b6:	push   0x8
  4040bb:	jmp    404020 <free@plt-0x10>

00000000004040c0 <memcmp@plt>:
  4040c0:	jmp    QWORD PTR [rip+0x1af9a]        # 41f060 <memcmp@GLIBC_2.2.5>
  4040c6:	push   0x9
  4040cb:	jmp    404020 <free@plt-0x10>

00000000004040d0 <strcmp@plt>:
  4040d0:	jmp    QWORD PTR [rip+0x1af92]        # 41f068 <strcmp@GLIBC_2.2.5>
  4040d6:	push   0xa
  4040db:	jmp    404020 <free@plt-0x10>

00000000004040e0 <memcpy@plt>:
  4040e0:	jmp    QWORD PTR [rip+0x1af8a]        # 41f070 <memcpy@GLIBC_2.14>
  4040e6:	push   0xb
  4040eb:	jmp    404020 <free@plt-0x10>

00000000004040f0 <malloc@plt>:
  4040f0:	jmp    QWORD PTR [rip+0x1af82]        # 41f078 <malloc@GLIBC_2.2.5>
  4040f6:	push   0xc
  4040fb:	jmp    404020 <free@plt-0x10>

0000000000404100 <realloc@plt>:
  404100:	jmp    QWORD PTR [rip+0x1af7a]        # 41f080 <realloc@GLIBC_2.2.5>
  404106:	push   0xd
  40410b:	jmp    404020 <free@plt-0x10>

0000000000404110 <__printf_chk@plt>:
  404110:	jmp    QWORD PTR [rip+0x1af72]        # 41f088 <__printf_chk@GLIBC_2.3.4>
  404116:	push   0xe
  40411b:	jmp    404020 <free@plt-0x10>

0000000000404120 <__fprintf_chk@plt>:
  404120:	jmp    QWORD PTR [rip+0x1af6a]        # 41f090 <__fprintf_chk@GLIBC_2.3.4>
  404126:	push   0xf
  40412b:	jmp    404020 <free@plt-0x10>

0000000000404130 <posix_memalign@plt>:
  404130:	jmp    QWORD PTR [rip+0x1af62]        # 41f098 <posix_memalign@GLIBC_2.2.5>
  404136:	push   0x10
  40413b:	jmp    404020 <free@plt-0x10>

Disassembly of section .text:

0000000000404140 <main@@Base-0x540>:
  404140:	lea    rcx,[rip+0x15489]        # 4195d0 <_IO_stdin_used@@Base+0x35d0>
  404147:	lea    rsi,[rip+0x1288a]        # 4169d8 <_IO_stdin_used@@Base+0x9d8>
  40414e:	lea    rdi,[rip+0x12903]        # 416a58 <_IO_stdin_used@@Base+0xa58>
  404155:	sub    rsp,0x8
  404159:	mov    edx,0x2b9
  40415e:	call   404090 <__assert_fail@plt>
  404163:	lea    rcx,[rip+0x15436]        # 4195a0 <_IO_stdin_used@@Base+0x35a0>
  40416a:	lea    rsi,[rip+0x12867]        # 4169d8 <_IO_stdin_used@@Base+0x9d8>
  404171:	lea    rdi,[rip+0x128e0]        # 416a58 <_IO_stdin_used@@Base+0xa58>
  404178:	sub    rsp,0x8
  40417c:	mov    edx,0x2b9
  404181:	call   404090 <__assert_fail@plt>
  404186:	lea    rcx,[rip+0x153d3]        # 419560 <_IO_stdin_used@@Base+0x3560>
  40418d:	lea    rsi,[rip+0x12844]        # 4169d8 <_IO_stdin_used@@Base+0x9d8>
  404194:	lea    rdi,[rip+0x128bd]        # 416a58 <_IO_stdin_used@@Base+0xa58>
  40419b:	sub    rsp,0x8
  40419f:	mov    edx,0x2b8
  4041a4:	call   404090 <__assert_fail@plt>
  4041a9:	lea    rcx,[rip+0x15380]        # 419530 <_IO_stdin_used@@Base+0x3530>
  4041b0:	lea    rsi,[rip+0x12821]        # 4169d8 <_IO_stdin_used@@Base+0x9d8>
  4041b7:	lea    rdi,[rip+0x1289a]        # 416a58 <_IO_stdin_used@@Base+0xa58>
  4041be:	sub    rsp,0x8
  4041c2:	mov    edx,0x2b8
  4041c7:	call   404090 <__assert_fail@plt>
  4041cc:	lea    rcx,[rip+0x1528d]        # 419460 <_IO_stdin_used@@Base+0x3460>
  4041d3:	lea    rsi,[rip+0x127fe]        # 4169d8 <_IO_stdin_used@@Base+0x9d8>
  4041da:	lea    rdi,[rip+0x12877]        # 416a58 <_IO_stdin_used@@Base+0xa58>
  4041e1:	sub    rsp,0x8
  4041e5:	mov    edx,0x2c2
  4041ea:	call   404090 <__assert_fail@plt>
  4041ef:	lea    rcx,[rip+0x1521a]        # 419410 <_IO_stdin_used@@Base+0x3410>
  4041f6:	lea    rsi,[rip+0x127db]        # 4169d8 <_IO_stdin_used@@Base+0x9d8>
  4041fd:	lea    rdi,[rip+0x12854]        # 416a58 <_IO_stdin_used@@Base+0xa58>
  404204:	sub    rsp,0x8
  404208:	mov    edx,0x2ba
  40420d:	call   404090 <__assert_fail@plt>
  404212:	lea    rcx,[rip+0x151c7]        # 4193e0 <_IO_stdin_used@@Base+0x33e0>
  404219:	lea    rsi,[rip+0x127b8]        # 4169d8 <_IO_stdin_used@@Base+0x9d8>
  404220:	lea    rdi,[rip+0x12831]        # 416a58 <_IO_stdin_used@@Base+0xa58>
  404227:	sub    rsp,0x8
  40422b:	mov    edx,0x2ba
  404230:	call   404090 <__assert_fail@plt>
  404235:	lea    rcx,[rip+0x15174]        # 4193b0 <_IO_stdin_used@@Base+0x33b0>
  40423c:	lea    rsi,[rip+0x12795]        # 4169d8 <_IO_stdin_used@@Base+0x9d8>
  404243:	lea    rdi,[rip+0x1280e]        # 416a58 <_IO_stdin_used@@Base+0xa58>
  40424a:	sub    rsp,0x8
  40424e:	mov    edx,0x2ce
  404253:	call   404090 <__assert_fail@plt>
  404258:	lea    rcx,[rip+0x15131]        # 419390 <_IO_stdin_used@@Base+0x3390>
  40425f:	lea    rsi,[rip+0x12772]        # 4169d8 <_IO_stdin_used@@Base+0x9d8>
  404266:	lea    rdi,[rip+0x1289b]        # 416b08 <_IO_stdin_used@@Base+0xb08>
  40426d:	sub    rsp,0x8
  404271:	mov    edx,0x17c
  404276:	call   404090 <__assert_fail@plt>
  40427b:	lea    rcx,[rip+0x150de]        # 419360 <_IO_stdin_used@@Base+0x3360>
  404282:	lea    rsi,[rip+0x1274f]        # 4169d8 <_IO_stdin_used@@Base+0x9d8>
  404289:	lea    rdi,[rip+0x127c8]        # 416a58 <_IO_stdin_used@@Base+0xa58>
  404290:	sub    rsp,0x8
  404294:	mov    edx,0x2c8
  404299:	call   404090 <__assert_fail@plt>
  40429e:	lea    rcx,[rip+0x1505b]        # 419300 <_IO_stdin_used@@Base+0x3300>
  4042a5:	lea    rsi,[rip+0x1272c]        # 4169d8 <_IO_stdin_used@@Base+0x9d8>
  4042ac:	lea    rdi,[rip+0x127a5]        # 416a58 <_IO_stdin_used@@Base+0xa58>
  4042b3:	sub    rsp,0x8
  4042b7:	mov    edx,0x2ca
  4042bc:	call   404090 <__assert_fail@plt>
  4042c1:	lea    rcx,[rip+0x14ff8]        # 4192c0 <_IO_stdin_used@@Base+0x32c0>
  4042c8:	lea    rsi,[rip+0x12709]        # 4169d8 <_IO_stdin_used@@Base+0x9d8>
  4042cf:	lea    rdi,[rip+0x12782]        # 416a58 <_IO_stdin_used@@Base+0xa58>
  4042d6:	sub    rsp,0x8
  4042da:	mov    edx,0x2c7
  4042df:	call   404090 <__assert_fail@plt>
  4042e4:	lea    rcx,[rip+0x14f75]        # 419260 <_IO_stdin_used@@Base+0x3260>
  4042eb:	lea    rsi,[rip+0x126e6]        # 4169d8 <_IO_stdin_used@@Base+0x9d8>
  4042f2:	lea    rdi,[rip+0x1275f]        # 416a58 <_IO_stdin_used@@Base+0xa58>
  4042f9:	sub    rsp,0x8
  4042fd:	mov    edx,0x2cd
  404302:	call   404090 <__assert_fail@plt>
  404307:	lea    rcx,[rip+0x14f22]        # 419230 <_IO_stdin_used@@Base+0x3230>
  40430e:	lea    rsi,[rip+0x126c3]        # 4169d8 <_IO_stdin_used@@Base+0x9d8>
  404315:	lea    rdi,[rip+0x1273c]        # 416a58 <_IO_stdin_used@@Base+0xa58>
  40431c:	sub    rsp,0x8
  404320:	mov    edx,0x2cd
  404325:	call   404090 <__assert_fail@plt>
  40432a:	lea    rcx,[rip+0x14edf]        # 419210 <_IO_stdin_used@@Base+0x3210>
  404331:	lea    rsi,[rip+0x126a0]        # 4169d8 <_IO_stdin_used@@Base+0x9d8>
  404338:	lea    rdi,[rip+0x12719]        # 416a58 <_IO_stdin_used@@Base+0xa58>
  40433f:	sub    rsp,0x8
  404343:	mov    edx,0x2bb
  404348:	call   404090 <__assert_fail@plt>
  40434d:	lea    rcx,[rip+0x14e8c]        # 4191e0 <_IO_stdin_used@@Base+0x31e0>
  404354:	lea    rsi,[rip+0x1267d]        # 4169d8 <_IO_stdin_used@@Base+0x9d8>
  40435b:	lea    rdi,[rip+0x126f6]        # 416a58 <_IO_stdin_used@@Base+0xa58>
  404362:	sub    rsp,0x8
  404366:	mov    edx,0x2d2
  40436b:	call   404090 <__assert_fail@plt>
  404370:	lea    rcx,[rip+0x14cc9]        # 419040 <_IO_stdin_used@@Base+0x3040>
  404377:	lea    rsi,[rip+0x1265a]        # 4169d8 <_IO_stdin_used@@Base+0x9d8>
  40437e:	lea    rdi,[rip+0x126d3]        # 416a58 <_IO_stdin_used@@Base+0xa58>
  404385:	sub    rsp,0x8
  404389:	mov    edx,0x26d
  40438e:	call   404090 <__assert_fail@plt>
  404393:	lea    rcx,[rip+0x14c76]        # 419010 <_IO_stdin_used@@Base+0x3010>
  40439a:	lea    rsi,[rip+0x12637]        # 4169d8 <_IO_stdin_used@@Base+0x9d8>
  4043a1:	lea    rdi,[rip+0x126b0]        # 416a58 <_IO_stdin_used@@Base+0xa58>
  4043a8:	sub    rsp,0x8
  4043ac:	mov    edx,0x26d
  4043b1:	call   404090 <__assert_fail@plt>
  4043b6:	lea    rcx,[rip+0x14c33]        # 418ff0 <_IO_stdin_used@@Base+0x2ff0>
  4043bd:	lea    rsi,[rip+0x126bc]        # 416a80 <_IO_stdin_used@@Base+0xa80>
  4043c4:	lea    rdi,[rip+0x1273d]        # 416b08 <_IO_stdin_used@@Base+0xb08>
  4043cb:	sub    rsp,0x8
  4043cf:	mov    edx,0x75
  4043d4:	call   404090 <__assert_fail@plt>
  4043d9:	lea    rcx,[rip+0x14bf0]        # 418fd0 <_IO_stdin_used@@Base+0x2fd0>
  4043e0:	lea    rsi,[rip+0x12699]        # 416a80 <_IO_stdin_used@@Base+0xa80>
  4043e7:	lea    rdi,[rip+0x1271a]        # 416b08 <_IO_stdin_used@@Base+0xb08>
  4043ee:	sub    rsp,0x8
  4043f2:	mov    edx,0x195
  4043f7:	call   404090 <__assert_fail@plt>
  4043fc:	test   rdi,rdi
  4043ff:	jne    404424 <posix_memalign@plt+0x2f4>
  404401:	lea    rcx,[rip+0x14b28]        # 418f30 <_IO_stdin_used@@Base+0x2f30>
  404408:	lea    rsi,[rip+0x125c9]        # 4169d8 <_IO_stdin_used@@Base+0x9d8>
  40440f:	lea    rdi,[rip+0x12642]        # 416a58 <_IO_stdin_used@@Base+0xa58>
  404416:	sub    rsp,0x8
  40441a:	mov    edx,0x335
  40441f:	call   404090 <__assert_fail@plt>
  404424:	movsxd rax,DWORD PTR [rdi]
  404427:	mov    rdx,rdi
  40442a:	sub    rdx,rax
  40442d:	xor    eax,eax
  40442f:	cmp    WORD PTR [rdx],0xd
  404433:	jbe    404441 <posix_memalign@plt+0x311>
  404435:	movzx  edx,WORD PTR [rdx+0xc]
  404439:	test   dx,dx
  40443c:	je     404441 <posix_memalign@plt+0x311>
  40443e:	mov    al,BYTE PTR [rdi+rdx*1]
  404441:	ret    
  404442:	test   rdi,rdi
  404445:	jne    40446a <posix_memalign@plt+0x33a>
  404447:	lea    rcx,[rip+0x14ac2]        # 418f10 <_IO_stdin_used@@Base+0x2f10>
  40444e:	lea    rsi,[rip+0x12583]        # 4169d8 <_IO_stdin_used@@Base+0x9d8>
  404455:	lea    rdi,[rip+0x125fc]        # 416a58 <_IO_stdin_used@@Base+0xa58>
  40445c:	sub    rsp,0x8
  404460:	mov    edx,0x335
  404465:	call   404090 <__assert_fail@plt>
  40446a:	movsxd rax,DWORD PTR [rdi]
  40446d:	mov    rdx,rdi
  404470:	sub    rdx,rax
  404473:	xor    eax,eax
  404475:	cmp    WORD PTR [rdx],0xf
  404479:	jbe    40448c <posix_memalign@plt+0x35c>
  40447b:	movzx  edx,WORD PTR [rdx+0xe]
  40447f:	test   dx,dx
  404482:	je     40448c <posix_memalign@plt+0x35c>
  404484:	add    rdi,rdx
  404487:	mov    eax,DWORD PTR [rdi]
  404489:	add    rax,rdi
  40448c:	ret    
  40448d:	test   rdi,rdi
  404490:	jne    4044b5 <posix_memalign@plt+0x385>
  404492:	lea    rcx,[rip+0x14a27]        # 418ec0 <_IO_stdin_used@@Base+0x2ec0>
  404499:	lea    rsi,[rip+0x12538]        # 4169d8 <_IO_stdin_used@@Base+0x9d8>
  4044a0:	lea    rdi,[rip+0x125b1]        # 416a58 <_IO_stdin_used@@Base+0xa58>
  4044a7:	sub    rsp,0x8
  4044ab:	mov    edx,0x302
  4044b0:	call   404090 <__assert_fail@plt>
  4044b5:	movsxd rax,DWORD PTR [rdi]
  4044b8:	mov    rdx,rdi
  4044bb:	sub    rdx,rax
  4044be:	xor    eax,eax
  4044c0:	cmp    WORD PTR [rdx],0x5
  4044c4:	jbe    4044d2 <posix_memalign@plt+0x3a2>
  4044c6:	movzx  edx,WORD PTR [rdx+0x4]
  4044ca:	test   dx,dx
  4044cd:	je     4044d2 <posix_memalign@plt+0x3a2>
  4044cf:	mov    eax,DWORD PTR [rdi+rdx*1]
  4044d2:	ret    
  4044d3:	test   rdi,rdi
  4044d6:	jne    4044fb <posix_memalign@plt+0x3cb>
  4044d8:	lea    rcx,[rip+0x149b1]        # 418e90 <_IO_stdin_used@@Base+0x2e90>
  4044df:	lea    rsi,[rip+0x124f2]        # 4169d8 <_IO_stdin_used@@Base+0x9d8>
  4044e6:	lea    rdi,[rip+0x1256b]        # 416a58 <_IO_stdin_used@@Base+0xa58>
  4044ed:	sub    rsp,0x8
  4044f1:	mov    edx,0x337
  4044f6:	call   404090 <__assert_fail@plt>
  4044fb:	movsxd rax,DWORD PTR [rdi]
  4044fe:	mov    rdx,rdi
  404501:	sub    rdx,rax
  404504:	xor    eax,eax
  404506:	cmp    WORD PTR [rdx],0x15
  40450a:	jbe    40451f <posix_memalign@plt+0x3ef>
  40450c:	movzx  edx,WORD PTR [rdx+0x14]
  404510:	test   dx,dx
  404513:	je     40451f <posix_memalign@plt+0x3ef>
  404515:	add    rdi,rdx
  404518:	mov    eax,DWORD PTR [rdi]
  40451a:	lea    rax,[rdi+rax*1+0x4]
  40451f:	ret    
  404520:	sub    rsp,0x8
  404524:	test   rdi,rdi
  404527:	je     404531 <posix_memalign@plt+0x401>
  404529:	mov    eax,DWORD PTR [rdi-0x4]
  40452c:	cmp    rax,rdx
  40452f:	ja     404550 <posix_memalign@plt+0x420>
  404531:	lea    rcx,[rip+0x148f8]        # 418e30 <_IO_stdin_used@@Base+0x2e30>
  404538:	lea    rsi,[rip+0x12499]        # 4169d8 <_IO_stdin_used@@Base+0x9d8>
  40453f:	lea    rdi,[rip+0x12622]        # 416b68 <_IO_stdin_used@@Base+0xb68>
  404546:	mov    edx,0x305
  40454b:	call   404090 <__assert_fail@plt>
  404550:	mov    dil,BYTE PTR [rdi+rdx*1]
  404554:	test   dil,dil
  404557:	jne    40455f <posix_memalign@plt+0x42f>
  404559:	xor    eax,eax
  40455b:	xor    edx,edx
  40455d:	jmp    40457f <posix_memalign@plt+0x44f>
  40455f:	test   rsi,rsi
  404562:	lea    rcx,[rsi+rdx*4]
  404566:	je     404570 <posix_memalign@plt+0x440>
  404568:	mov    eax,DWORD PTR [rsi-0x4]
  40456b:	cmp    rdx,rax
  40456e:	jb     404575 <posix_memalign@plt+0x445>
  404570:	call   4043b6 <posix_memalign@plt+0x286>
  404575:	mov    edx,DWORD PTR [rcx]
  404577:	xor    eax,eax
  404579:	mov    al,dil
  40457c:	add    rdx,rcx
  40457f:	pop    rcx
  404580:	ret    
  404581:	lea    rcx,[rip+0x14878]        # 418e00 <_IO_stdin_used@@Base+0x2e00>
  404588:	lea    rsi,[rip+0x12449]        # 4169d8 <_IO_stdin_used@@Base+0x9d8>
  40458f:	lea    rdi,[rip+0x124c2]        # 416a58 <_IO_stdin_used@@Base+0xa58>
  404596:	sub    rsp,0x8
  40459a:	mov    edx,0x2c1
  40459f:	call   404090 <__assert_fail@plt>
  4045a4:	lea    rcx,[rip+0x14f25]        # 4194d0 <_IO_stdin_used@@Base+0x34d0>
  4045ab:	lea    rsi,[rip+0x125d6]        # 416b88 <_IO_stdin_used@@Base+0xb88>
  4045b2:	lea    rdi,[rip+0x1264f]        # 416c08 <_IO_stdin_used@@Base+0xc08>
  4045b9:	sub    rsp,0x8
  4045bd:	mov    edx,0xeb
  4045c2:	call   404090 <__assert_fail@plt>
  4045c7:	lea    rcx,[rip+0x14ba2]        # 419170 <_IO_stdin_used@@Base+0x3170>
  4045ce:	lea    rsi,[rip+0x125b3]        # 416b88 <_IO_stdin_used@@Base+0xb88>
  4045d5:	lea    rdi,[rip+0x126d4]        # 416cb0 <_IO_stdin_used@@Base+0xcb0>
  4045dc:	sub    rsp,0x8
  4045e0:	mov    edx,0xdd
  4045e5:	call   404090 <__assert_fail@plt>
  4045ea:	lea    rcx,[rip+0x15b1f]        # 41a110 <_IO_stdin_used@@Base+0x4110>
  4045f1:	lea    rsi,[rip+0x15058]        # 419650 <_IO_stdin_used@@Base+0x3650>
  4045f8:	lea    rdi,[rip+0x153e8]        # 4199e7 <_IO_stdin_used@@Base+0x39e7>
  4045ff:	sub    rsp,0x8
  404603:	mov    edx,0x134
  404608:	call   404090 <__assert_fail@plt>
  40460d:	lea    rcx,[rip+0x15a8c]        # 41a0a0 <_IO_stdin_used@@Base+0x40a0>
  404614:	lea    rsi,[rip+0x15035]        # 419650 <_IO_stdin_used@@Base+0x3650>
  40461b:	lea    rdi,[rip+0x153c5]        # 4199e7 <_IO_stdin_used@@Base+0x39e7>
  404622:	sub    rsp,0x8
  404626:	mov    edx,0x2a1
  40462b:	call   404090 <__assert_fail@plt>
  404630:	lea    rcx,[rip+0x15a59]        # 41a090 <_IO_stdin_used@@Base+0x4090>
  404637:	lea    rsi,[rip+0x15012]        # 419650 <_IO_stdin_used@@Base+0x3650>
  40463e:	lea    rdi,[rip+0x153a2]        # 4199e7 <_IO_stdin_used@@Base+0x39e7>
  404645:	sub    rsp,0x8
  404649:	mov    edx,0x28b
  40464e:	call   404090 <__assert_fail@plt>
  404653:	lea    rcx,[rip+0x15996]        # 419ff0 <_IO_stdin_used@@Base+0x3ff0>
  40465a:	lea    rsi,[rip+0x14fef]        # 419650 <_IO_stdin_used@@Base+0x3650>
  404661:	lea    rdi,[rip+0x15358]        # 4199c0 <_IO_stdin_used@@Base+0x39c0>
  404668:	sub    rsp,0x8
  40466c:	mov    edx,0x37c
  404671:	call   404090 <__assert_fail@plt>
  404676:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000404680 <main@@Base>:
  404680:	push   rbx
  404681:	sub    rsp,0x1a0
  404688:	lea    rbx,[rsp+0x10]
  40468d:	mov    rax,QWORD PTR fs:0x28
  404696:	mov    QWORD PTR [rsp+0x198],rax
  40469e:	xor    eax,eax
  4046a0:	mov    rdi,rbx
  4046a3:	call   40f930 <flatcc_builder_init@@Base>
  4046a8:	lea    rsi,[rip+0x122fe]        # 4169ad <_IO_stdin_used@@Base+0x9ad>
  4046af:	mov    edi,0x1
  4046b4:	xor    eax,eax
  4046b6:	call   404110 <__printf_chk@plt>
  4046bb:	mov    rdi,rbx
  4046be:	call   406930 <test_table_with_emptystruct@@Base>
  4046c3:	test   eax,eax
  4046c5:	jne    404815 <main@@Base+0x195>
  4046cb:	mov    rdi,rbx
  4046ce:	call   405f00 <test_enums@@Base>
  4046d3:	test   eax,eax
  4046d5:	jne    404815 <main@@Base+0x195>
  4046db:	mov    rdi,rbx
  4046de:	call   4063e0 <test_empty_monster@@Base>
  4046e3:	test   eax,eax
  4046e5:	jne    404815 <main@@Base+0x195>
  4046eb:	mov    rdi,rbx
  4046ee:	call   408420 <test_monster@@Base>
  4046f3:	test   eax,eax
  4046f5:	jne    404815 <main@@Base+0x195>
  4046fb:	mov    rdi,rbx
  4046fe:	call   4084f0 <test_monster_with_size@@Base>
  404703:	test   eax,eax
  404705:	jne    404815 <main@@Base+0x195>
  40470b:	mov    rdi,rbx
  40470e:	call   408630 <test_string@@Base>
  404713:	test   eax,eax
  404715:	jne    404815 <main@@Base+0x195>
  40471b:	mov    rdi,rbx
  40471e:	call   40e8e0 <test_struct_buffer@@Base>
  404723:	test   eax,eax
  404725:	jne    404815 <main@@Base+0x195>
  40472b:	mov    rdi,rbx
  40472e:	call   406570 <test_typed_empty_monster@@Base>
  404733:	test   eax,eax
  404735:	jne    404815 <main@@Base+0x195>
  40473b:	mov    rdi,rbx
  40473e:	call   406a40 <test_typed_table_with_emptystruct@@Base>
  404743:	test   eax,eax
  404745:	jne    404815 <main@@Base+0x195>
  40474b:	mov    rdi,rbx
  40474e:	call   40eb00 <test_typed_struct_buffer@@Base>
  404753:	test   eax,eax
  404755:	jne    404815 <main@@Base+0x195>
  40475b:	mov    rdi,rbx
  40475e:	call   40bc10 <test_clone_slice@@Base>
  404763:	test   eax,eax
  404765:	jne    404815 <main@@Base+0x195>
  40476b:	mov    rdi,rbx
  40476e:	call   40da60 <test_add_set_defaults@@Base>
  404773:	test   eax,eax
  404775:	jne    404815 <main@@Base+0x195>
  40477b:	mov    rdi,rbx
  40477e:	call   40c7c0 <test_create_add_field@@Base>
  404783:	test   eax,eax
  404785:	jne    404815 <main@@Base+0x195>
  40478b:	mov    rdi,rbx
  40478e:	call   40ca80 <test_union_vector@@Base>
  404793:	test   eax,eax
  404795:	jne    404815 <main@@Base+0x195>
  404797:	mov    rdi,rbx
  40479a:	call   40b7a0 <test_basic_sort@@Base>
  40479f:	test   eax,eax
  4047a1:	jne    404815 <main@@Base+0x195>
  4047a3:	mov    rdi,rbx
  4047a6:	call   4088c0 <test_sort_find@@Base>
  4047ab:	test   eax,eax
  4047ad:	jne    404815 <main@@Base+0x195>
  4047af:	mov    rdi,rbx
  4047b2:	call   409e90 <test_scan@@Base>
  4047b7:	test   eax,eax
  4047b9:	jne    404815 <main@@Base+0x195>
  4047bb:	mov    rdi,rbx
  4047be:	call   40ddd0 <test_nested_buffer@@Base>
  4047c3:	test   eax,eax
  4047c5:	jne    404815 <main@@Base+0x195>
  4047c7:	mov    rdi,rbx
  4047ca:	call   40e130 <test_nested_buffer_first@@Base>
  4047cf:	test   eax,eax
  4047d1:	jne    404815 <main@@Base+0x195>
  4047d3:	mov    rdi,rbx
  4047d6:	call   40e490 <test_nested_buffer_using_nest@@Base>
  4047db:	test   eax,eax
  4047dd:	jne    404815 <main@@Base+0x195>
  4047df:	mov    rdi,rbx
  4047e2:	call   40e8d0 <verify_include@@Base>
  4047e7:	test   eax,eax
  4047e9:	jne    404815 <main@@Base+0x195>
  4047eb:	mov    rdi,rbx
  4047ee:	call   405f10 <test_type_aliases@@Base>
  4047f3:	test   eax,eax
  4047f5:	jne    404815 <main@@Base+0x195>
  4047f7:	mov    rdi,rbx
  4047fa:	call   40ce20 <test_mixed_type_union@@Base>
  4047ff:	test   eax,eax
  404801:	mov    DWORD PTR [rsp+0xc],eax
  404805:	jne    404815 <main@@Base+0x195>
  404807:	mov    rdi,rbx
  40480a:	call   40fb00 <flatcc_builder_clear@@Base>
  40480f:	mov    eax,DWORD PTR [rsp+0xc]
  404813:	jmp    40482b <main@@Base+0x1ab>
  404815:	lea    rsi,[rip+0x121ad]        # 4169c9 <_IO_stdin_used@@Base+0x9c9>
  40481c:	mov    edi,0x1
  404821:	xor    eax,eax
  404823:	call   404110 <__printf_chk@plt>
  404828:	or     eax,0xffffffff
  40482b:	mov    rdx,QWORD PTR [rsp+0x198]
  404833:	xor    rdx,QWORD PTR fs:0x28
  40483c:	jne    404847 <main@@Base+0x1c7>
  40483e:	add    rsp,0x1a0
  404845:	pop    rbx
  404846:	ret    
  404847:	call   404070 <__stack_chk_fail@plt>
  40484c:	nop    DWORD PTR [rax+0x0]

0000000000404850 <_start@@Base>:
  404850:	endbr64 
  404854:	xor    ebp,ebp
  404856:	mov    r9,rdx
  404859:	pop    rsi
  40485a:	mov    rdx,rsp
  40485d:	and    rsp,0xfffffffffffffff0
  404861:	push   rax
  404862:	push   rsp
  404863:	mov    r8,0x415130
  40486a:	mov    rcx,0x4150c0
  404871:	mov    rdi,0x404680
  404878:	call   QWORD PTR [rip+0x1a76a]        # 41efe8 <__libc_start_main@GLIBC_2.2.5>
  40487e:	hlt    
  40487f:	nop
  404880:	endbr64 
  404884:	ret    
  404885:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40488f:	nop
  404890:	mov    eax,0x41f0b7
  404895:	push   rbp
  404896:	sub    rax,0x41f0b0
  40489c:	cmp    rax,0xe
  4048a0:	mov    rbp,rsp
  4048a3:	jbe    4048c0 <_start@@Base+0x70>
  4048a5:	mov    eax,0x0
  4048aa:	test   rax,rax
  4048ad:	je     4048c0 <_start@@Base+0x70>
  4048af:	pop    rbp
  4048b0:	mov    edi,0x41f0b0
  4048b5:	jmp    rax
  4048b7:	nop    WORD PTR [rax+rax*1+0x0]
  4048c0:	pop    rbp
  4048c1:	ret    
  4048c2:	nop    DWORD PTR [rax+0x0]
  4048c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4048d0:	mov    esi,0x41f0b0
  4048d5:	push   rbp
  4048d6:	sub    rsi,0x41f0b0
  4048dd:	sar    rsi,0x3
  4048e1:	mov    rbp,rsp
  4048e4:	mov    rax,rsi
  4048e7:	shr    rax,0x3f
  4048eb:	add    rsi,rax
  4048ee:	sar    rsi,1
  4048f1:	je     404908 <_start@@Base+0xb8>
  4048f3:	mov    eax,0x0
  4048f8:	test   rax,rax
  4048fb:	je     404908 <_start@@Base+0xb8>
  4048fd:	pop    rbp
  4048fe:	mov    edi,0x41f0b0
  404903:	jmp    rax
  404905:	nop    DWORD PTR [rax]
  404908:	pop    rbp
  404909:	ret    
  40490a:	nop    WORD PTR [rax+rax*1+0x0]
  404910:	cmp    BYTE PTR [rip+0x1a7a9],0x0        # 41f0c0 <__bss_start@@Base+0x10>
  404917:	jne    40492a <_start@@Base+0xda>
  404919:	push   rbp
  40491a:	mov    rbp,rsp
  40491d:	call   404890 <_start@@Base+0x40>
  404922:	pop    rbp
  404923:	mov    BYTE PTR [rip+0x1a796],0x1        # 41f0c0 <__bss_start@@Base+0x10>
  40492a:	repz ret 
  40492c:	nop    DWORD PTR [rax+0x0]
  404930:	mov    edi,0x41ee10
  404935:	cmp    QWORD PTR [rdi],0x0
  404939:	jne    404940 <_start@@Base+0xf0>
  40493b:	jmp    4048d0 <_start@@Base+0x80>
  40493d:	nop    DWORD PTR [rax]
  404940:	mov    eax,0x0
  404945:	test   rax,rax
  404948:	je     40493b <_start@@Base+0xeb>
  40494a:	push   rbp
  40494b:	mov    rbp,rsp
  40494e:	call   rax
  404950:	pop    rbp
  404951:	jmp    4048d0 <_start@@Base+0x80>
  404956:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404960:	xor    eax,eax
  404962:	ret    
  404963:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40496e:	xchg   ax,ax
  404970:	mov    ecx,0x4
  404975:	mov    edx,0x4
  40497a:	xor    esi,esi
  40497c:	jmp    413b10 <flatcc_verify_field@@Base>
  404981:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40498c:	nop    DWORD PTR [rax+0x0]
  404990:	mov    ecx,0x1
  404995:	xor    edx,edx
  404997:	xor    esi,esi
  404999:	jmp    413b10 <flatcc_verify_field@@Base>
  40499e:	xchg   ax,ax
  4049a0:	push   r15
  4049a2:	push   r14
  4049a4:	mov    r15,rsi
  4049a7:	push   r13
  4049a9:	push   r12
  4049ab:	mov    r12,rcx
  4049ae:	push   rbp
  4049af:	push   rbx
  4049b0:	mov    rbx,rdx
  4049b3:	sub    rsp,0x28
  4049b7:	mov    rax,QWORD PTR fs:0x28
  4049c0:	mov    QWORD PTR [rsp+0x18],rax
  4049c5:	xor    eax,eax
  4049c7:	test   rdi,rdi
  4049ca:	je     4049e3 <_start@@Base+0x193>
  4049cc:	lea    rdx,[rip+0x11631]        # 416004 <_IO_stdin_used@@Base+0x4>
  4049d3:	mov    rcx,rdi
  4049d6:	mov    esi,0x1
  4049db:	mov    rdi,r12
  4049de:	call   404120 <__fprintf_chk@plt>
  4049e3:	test   ebx,ebx
  4049e5:	mov    r13d,ebx
  4049e8:	je     404b12 <_start@@Base+0x2c2>
  4049ee:	xor    ebx,ebx
  4049f0:	mov    r14,rsp
  4049f3:	jmp    404a57 <_start@@Base+0x207>
  4049f5:	nop    DWORD PTR [rax]
  4049f8:	test   ebx,ebx
  4049fa:	jne    404a90 <_start@@Base+0x240>
  404a00:	lea    rdx,[rip+0x11608]        # 41600f <_IO_stdin_used@@Base+0xf>
  404a07:	mov    ecx,ebx
  404a09:	mov    esi,0x1
  404a0e:	mov    rdi,r12
  404a11:	xor    eax,eax
  404a13:	call   404120 <__fprintf_chk@plt>
  404a18:	movzx  ecx,BYTE PTR [r15]
  404a1c:	lea    rdx,[rip+0x115f4]        # 416017 <_IO_stdin_used@@Base+0x17>
  404a23:	xor    eax,eax
  404a25:	mov    esi,0x1
  404a2a:	mov    rdi,r12
  404a2d:	call   404120 <__fprintf_chk@plt>
  404a32:	movzx  eax,BYTE PTR [r15]
  404a36:	lea    edx,[rax-0x20]
  404a39:	cmp    dl,0x5e
  404a3c:	jbe    404a80 <_start@@Base+0x230>
  404a3e:	mov    eax,ebp
  404a40:	mov    BYTE PTR [rsp+rax*1],0x2e
  404a44:	add    ebx,0x1
  404a47:	add    ebp,0x1
  404a4a:	add    r15,0x1
  404a4e:	cmp    ebx,r13d
  404a51:	mov    BYTE PTR [rsp+rbp*1],0x0
  404a55:	je     404ab0 <_start@@Base+0x260>
  404a57:	mov    ebp,ebx
  404a59:	and    ebp,0xf
  404a5c:	je     4049f8 <_start@@Base+0x1a8>
  404a5e:	test   bl,0x7
  404a61:	jne    404a18 <_start@@Base+0x1c8>
  404a63:	lea    rdx,[rip+0x115b5]        # 41601f <_IO_stdin_used@@Base+0x1f>
  404a6a:	mov    esi,0x1
  404a6f:	mov    rdi,r12
  404a72:	xor    eax,eax
  404a74:	call   404120 <__fprintf_chk@plt>
  404a79:	jmp    404a18 <_start@@Base+0x1c8>
  404a7b:	nop    DWORD PTR [rax+rax*1+0x0]
  404a80:	mov    edx,ebp
  404a82:	mov    BYTE PTR [rsp+rdx*1],al
  404a85:	jmp    404a44 <_start@@Base+0x1f4>
  404a87:	nop    WORD PTR [rax+rax*1+0x0]
  404a90:	lea    rdx,[rip+0x11572]        # 416009 <_IO_stdin_used@@Base+0x9>
  404a97:	mov    rcx,r14
  404a9a:	mov    esi,0x1
  404a9f:	mov    rdi,r12
  404aa2:	xor    eax,eax
  404aa4:	call   404120 <__fprintf_chk@plt>
  404aa9:	jmp    404a00 <_start@@Base+0x1b0>
  404aae:	xchg   ax,ax
  404ab0:	test   bl,0xf
  404ab3:	je     404ada <_start@@Base+0x28a>
  404ab5:	lea    rbp,[rip+0x11561]        # 41601d <_IO_stdin_used@@Base+0x1d>
  404abc:	nop    DWORD PTR [rax+0x0]
  404ac0:	xor    eax,eax
  404ac2:	mov    rdx,rbp
  404ac5:	mov    esi,0x1
  404aca:	mov    rdi,r12
  404acd:	add    ebx,0x1
  404ad0:	call   404120 <__fprintf_chk@plt>
  404ad5:	test   bl,0xf
  404ad8:	jne    404ac0 <_start@@Base+0x270>
  404ada:	lea    rdx,[rip+0x11528]        # 416009 <_IO_stdin_used@@Base+0x9>
  404ae1:	xor    eax,eax
  404ae3:	mov    rcx,r14
  404ae6:	mov    esi,0x1
  404aeb:	mov    rdi,r12
  404aee:	call   404120 <__fprintf_chk@plt>
  404af3:	mov    rax,QWORD PTR [rsp+0x18]
  404af8:	xor    rax,QWORD PTR fs:0x28
  404b01:	jne    404b17 <_start@@Base+0x2c7>
  404b03:	add    rsp,0x28
  404b07:	pop    rbx
  404b08:	pop    rbp
  404b09:	pop    r12
  404b0b:	pop    r13
  404b0d:	pop    r14
  404b0f:	pop    r15
  404b11:	ret    
  404b12:	mov    r14,rsp
  404b15:	jmp    404ada <_start@@Base+0x28a>
  404b17:	call   404070 <__stack_chk_fail@plt>
  404b1c:	nop    DWORD PTR [rax+0x0]
  404b20:	sub    rsp,0x28
  404b24:	xor    esi,esi
  404b26:	mov    rdi,rsp
  404b29:	mov    rax,QWORD PTR fs:0x28
  404b32:	mov    QWORD PTR [rsp+0x18],rax
  404b37:	xor    eax,eax
  404b39:	call   404080 <gettimeofday@plt>
  404b3e:	mov    rdx,QWORD PTR [rip+0x1a59b]        # 41f0e0 <__bss_start@@Base+0x30>
  404b45:	test   rdx,rdx
  404b48:	jne    404b64 <_start@@Base+0x314>
  404b4a:	mov    rax,QWORD PTR [rsp]
  404b4e:	mov    rdx,rax
  404b51:	mov    QWORD PTR [rip+0x1a588],rax        # 41f0e0 <__bss_start@@Base+0x30>
  404b58:	mov    rax,QWORD PTR [rsp+0x8]
  404b5d:	mov    QWORD PTR [rip+0x1a584],rax        # 41f0e8 <__bss_start@@Base+0x38>
  404b64:	mov    rax,QWORD PTR [rsp+0x8]
  404b69:	sub    rax,QWORD PTR [rip+0x1a578]        # 41f0e8 <__bss_start@@Base+0x38>
  404b70:	vxorpd xmm0,xmm0,xmm0
  404b74:	vxorpd xmm1,xmm1,xmm1
  404b78:	vcvtsi2sd xmm0,xmm0,rax
  404b7d:	vdivsd xmm0,xmm0,QWORD PTR [rip+0x14a7b]        # 419600 <_IO_stdin_used@@Base+0x3600>
  404b85:	mov    rax,QWORD PTR [rsp]
  404b89:	sub    rax,rdx
  404b8c:	vcvtsi2sd xmm1,xmm1,rax
  404b91:	mov    rax,QWORD PTR [rsp+0x18]
  404b96:	xor    rax,QWORD PTR fs:0x28
  404b9f:	vaddsd xmm0,xmm0,xmm1
  404ba3:	jne    404baa <_start@@Base+0x35a>
  404ba5:	add    rsp,0x28
  404ba9:	ret    
  404baa:	call   404070 <__stack_chk_fail@plt>
  404baf:	nop
  404bb0:	lea    rcx,[rip+0x14879]        # 419430 <_IO_stdin_used@@Base+0x3430>
  404bb7:	lea    rsi,[rip+0x11ec2]        # 416a80 <_IO_stdin_used@@Base+0xa80>
  404bbe:	lea    rdi,[rip+0x11f43]        # 416b08 <_IO_stdin_used@@Base+0xb08>
  404bc5:	sub    rsp,0x8
  404bc9:	mov    edx,0x18b
  404bce:	call   404090 <__assert_fail@plt>
  404bd3:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  404bde:	xchg   ax,ax
  404be0:	lea    rcx,[rip+0x14749]        # 419330 <_IO_stdin_used@@Base+0x3330>
  404be7:	lea    rsi,[rip+0x11e92]        # 416a80 <_IO_stdin_used@@Base+0xa80>
  404bee:	lea    rdi,[rip+0x11f13]        # 416b08 <_IO_stdin_used@@Base+0xb08>
  404bf5:	sub    rsp,0x8
  404bf9:	mov    edx,0x6c
  404bfe:	call   404090 <__assert_fail@plt>
  404c03:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  404c0e:	xchg   ax,ax
  404c10:	lea    rcx,[rip+0x14679]        # 419290 <_IO_stdin_used@@Base+0x3290>
  404c17:	lea    rsi,[rip+0x11dba]        # 4169d8 <_IO_stdin_used@@Base+0x9d8>
  404c1e:	lea    rdi,[rip+0x11ee3]        # 416b08 <_IO_stdin_used@@Base+0xb08>
  404c25:	sub    rsp,0x8
  404c29:	mov    edx,0x2b5
  404c2e:	call   404090 <__assert_fail@plt>
  404c33:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  404c3e:	xchg   ax,ax
  404c40:	sub    rsp,0x8
  404c44:	test   rdi,rdi
  404c47:	je     404c8f <_start@@Base+0x43f>
  404c49:	movsxd rax,DWORD PTR [rdi]
  404c4c:	mov    rdx,rdi
  404c4f:	sub    rdx,rax
  404c52:	cmp    WORD PTR [rdx],0xb
  404c56:	jbe    404c70 <_start@@Base+0x420>
  404c58:	movzx  eax,WORD PTR [rdx+0xa]
  404c5c:	test   ax,ax
  404c5f:	je     404c70 <_start@@Base+0x420>
  404c61:	add    rdi,rax
  404c64:	mov    eax,DWORD PTR [rdi]
  404c66:	add    rsp,0x8
  404c6a:	lea    rax,[rdi+rax*1+0x4]
  404c6f:	ret    
  404c70:	lea    rcx,[rip+0x14599]        # 419210 <_IO_stdin_used@@Base+0x3210>
  404c77:	lea    rsi,[rip+0x11d5a]        # 4169d8 <_IO_stdin_used@@Base+0x9d8>
  404c7e:	lea    rdi,[rip+0x11ebb]        # 416b40 <_IO_stdin_used@@Base+0xb40>
  404c85:	mov    edx,0x2bb
  404c8a:	call   404090 <__assert_fail@plt>
  404c8f:	call   40432a <posix_memalign@plt+0x1fa>
  404c94:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  404c9f:	nop
  404ca0:	push   rbx
  404ca1:	xor    esi,esi
  404ca3:	mov    ecx,0x8
  404ca8:	mov    edx,0x8
  404cad:	mov    rbx,rdi
  404cb0:	call   413b10 <flatcc_verify_field@@Base>
  404cb5:	test   eax,eax
  404cb7:	je     404cc0 <_start@@Base+0x470>
  404cb9:	pop    rbx
  404cba:	ret    
  404cbb:	nop    DWORD PTR [rax+rax*1+0x0]
  404cc0:	mov    rdi,rbx
  404cc3:	mov    ecx,0x4
  404cc8:	mov    edx,0x4
  404ccd:	pop    rbx
  404cce:	mov    esi,0x1
  404cd3:	jmp    413b10 <flatcc_verify_field@@Base>
  404cd8:	nop    DWORD PTR [rax+rax*1+0x0]
  404ce0:	push   rbx
  404ce1:	xor    esi,esi
  404ce3:	mov    ecx,0x1
  404ce8:	mov    edx,0x1
  404ced:	mov    rbx,rdi
  404cf0:	call   413b10 <flatcc_verify_field@@Base>
  404cf5:	test   eax,eax
  404cf7:	je     404d00 <_start@@Base+0x4b0>
  404cf9:	pop    rbx
  404cfa:	ret    
  404cfb:	nop    DWORD PTR [rax+rax*1+0x0]
  404d00:	mov    ecx,0x1
  404d05:	mov    edx,0x1
  404d0a:	mov    esi,0x1
  404d0f:	mov    rdi,rbx
  404d12:	call   413b10 <flatcc_verify_field@@Base>
  404d17:	test   eax,eax
  404d19:	jne    404cf9 <_start@@Base+0x4a9>
  404d1b:	mov    ecx,0x1
  404d20:	mov    edx,0x1
  404d25:	mov    esi,0x2
  404d2a:	mov    rdi,rbx
  404d2d:	call   413b10 <flatcc_verify_field@@Base>
  404d32:	test   eax,eax
  404d34:	jne    404cf9 <_start@@Base+0x4a9>
  404d36:	mov    rdi,rbx
  404d39:	mov    ecx,0x1
  404d3e:	mov    edx,0x1
  404d43:	pop    rbx
  404d44:	mov    esi,0x3
  404d49:	jmp    413b10 <flatcc_verify_field@@Base>
  404d4e:	xchg   ax,ax
  404d50:	push   rbx
  404d51:	xor    esi,esi
  404d53:	mov    ecx,0x1
  404d58:	mov    edx,0x1
  404d5d:	mov    rbx,rdi
  404d60:	call   413b10 <flatcc_verify_field@@Base>
  404d65:	test   eax,eax
  404d67:	je     404d70 <_start@@Base+0x520>
  404d69:	pop    rbx
  404d6a:	ret    
  404d6b:	nop    DWORD PTR [rax+rax*1+0x0]
  404d70:	mov    ecx,0x1
  404d75:	mov    edx,0x1
  404d7a:	mov    esi,0x1
  404d7f:	mov    rdi,rbx
  404d82:	call   413b10 <flatcc_verify_field@@Base>
  404d87:	test   eax,eax
  404d89:	jne    404d69 <_start@@Base+0x519>
  404d8b:	mov    ecx,0x2
  404d90:	mov    edx,0x2
  404d95:	mov    esi,0x2
  404d9a:	mov    rdi,rbx
  404d9d:	call   413b10 <flatcc_verify_field@@Base>
  404da2:	test   eax,eax
  404da4:	jne    404d69 <_start@@Base+0x519>
  404da6:	mov    ecx,0x2
  404dab:	mov    edx,0x2
  404db0:	mov    esi,0x3
  404db5:	mov    rdi,rbx
  404db8:	call   413b10 <flatcc_verify_field@@Base>
  404dbd:	test   eax,eax
  404dbf:	jne    404d69 <_start@@Base+0x519>
  404dc1:	mov    ecx,0x4
  404dc6:	mov    edx,0x4
  404dcb:	mov    esi,0x4
  404dd0:	mov    rdi,rbx
  404dd3:	call   413b10 <flatcc_verify_field@@Base>
  404dd8:	test   eax,eax
  404dda:	jne    404d69 <_start@@Base+0x519>
  404ddc:	mov    ecx,0x4
  404de1:	mov    edx,0x4
  404de6:	mov    esi,0x5
  404deb:	mov    rdi,rbx
  404dee:	call   413b10 <flatcc_verify_field@@Base>
  404df3:	test   eax,eax
  404df5:	jne    404d69 <_start@@Base+0x519>
  404dfb:	mov    ecx,0x8
  404e00:	mov    edx,0x8
  404e05:	mov    esi,0x6
  404e0a:	mov    rdi,rbx
  404e0d:	call   413b10 <flatcc_verify_field@@Base>
  404e12:	test   eax,eax
  404e14:	jne    404d69 <_start@@Base+0x519>
  404e1a:	mov    ecx,0x8
  404e1f:	mov    edx,0x8
  404e24:	mov    esi,0x7
  404e29:	mov    rdi,rbx
  404e2c:	call   413b10 <flatcc_verify_field@@Base>
  404e31:	test   eax,eax
  404e33:	jne    404d69 <_start@@Base+0x519>
  404e39:	mov    ecx,0x4
  404e3e:	mov    edx,0x4
  404e43:	mov    esi,0x8
  404e48:	mov    rdi,rbx
  404e4b:	call   413b10 <flatcc_verify_field@@Base>
  404e50:	test   eax,eax
  404e52:	jne    404d69 <_start@@Base+0x519>
  404e58:	mov    ecx,0x8
  404e5d:	mov    edx,0x8
  404e62:	mov    esi,0x9
  404e67:	mov    rdi,rbx
  404e6a:	call   413b10 <flatcc_verify_field@@Base>
  404e6f:	test   eax,eax
  404e71:	jne    404d69 <_start@@Base+0x519>
  404e77:	xor    edx,edx
  404e79:	mov    r9d,0xffffffff
  404e7f:	mov    r8d,0x1
  404e85:	mov    ecx,0x1
  404e8a:	mov    esi,0xa
  404e8f:	mov    rdi,rbx
  404e92:	call   413c20 <flatcc_verify_vector_field@@Base>
  404e97:	test   eax,eax
  404e99:	jne    404d69 <_start@@Base+0x519>
  404e9f:	mov    rdi,rbx
  404ea2:	mov    r9d,0x1fffffff
  404ea8:	mov    r8d,0x8
  404eae:	pop    rbx
  404eaf:	mov    ecx,0x8
  404eb4:	xor    edx,edx
  404eb6:	mov    esi,0xb
  404ebb:	jmp    413c20 <flatcc_verify_vector_field@@Base>
  404ec0:	push   rbx
  404ec1:	xor    edx,edx
  404ec3:	xor    esi,esi
  404ec5:	mov    rbx,rdi
  404ec8:	call   413b70 <flatcc_verify_string_field@@Base>
  404ecd:	test   eax,eax
  404ecf:	je     404ed8 <_start@@Base+0x688>
  404ed1:	pop    rbx
  404ed2:	ret    
  404ed3:	nop    DWORD PTR [rax+rax*1+0x0]
  404ed8:	mov    ecx,0x8
  404edd:	mov    edx,0x8
  404ee2:	mov    esi,0x1
  404ee7:	mov    rdi,rbx
  404eea:	call   413b10 <flatcc_verify_field@@Base>
  404eef:	test   eax,eax
  404ef1:	jne    404ed1 <_start@@Base+0x681>
  404ef3:	mov    rdi,rbx
  404ef6:	mov    ecx,0x2
  404efb:	mov    edx,0x2
  404f00:	pop    rbx
  404f01:	mov    esi,0x2
  404f06:	jmp    413b10 <flatcc_verify_field@@Base>
  404f0b:	nop    DWORD PTR [rax+rax*1+0x0]
  404f10:	push   rbx
  404f11:	xor    edx,edx
  404f13:	xor    esi,esi
  404f15:	mov    rbx,rdi
  404f18:	call   413b70 <flatcc_verify_string_field@@Base>
  404f1d:	test   eax,eax
  404f1f:	je     404f28 <_start@@Base+0x6d8>
  404f21:	pop    rbx
  404f22:	ret    
  404f23:	nop    DWORD PTR [rax+rax*1+0x0]
  404f28:	mov    ecx,0x4
  404f2d:	mov    edx,0x4
  404f32:	mov    esi,0x1
  404f37:	mov    rdi,rbx
  404f3a:	call   413b10 <flatcc_verify_field@@Base>
  404f3f:	test   eax,eax
  404f41:	jne    404f21 <_start@@Base+0x6d1>
  404f43:	xor    edx,edx
  404f45:	mov    esi,0x2
  404f4a:	mov    rdi,rbx
  404f4d:	call   413b70 <flatcc_verify_string_field@@Base>
  404f52:	test   eax,eax
  404f54:	jne    404f21 <_start@@Base+0x6d1>
  404f56:	mov    ecx,0x8
  404f5b:	mov    edx,0x8
  404f60:	mov    esi,0x3
  404f65:	mov    rdi,rbx
  404f68:	call   413b10 <flatcc_verify_field@@Base>
  404f6d:	test   eax,eax
  404f6f:	jne    404f21 <_start@@Base+0x6d1>
  404f71:	xor    edx,edx
  404f73:	mov    esi,0x4
  404f78:	mov    rdi,rbx
  404f7b:	call   413b70 <flatcc_verify_string_field@@Base>
  404f80:	test   eax,eax
  404f82:	jne    404f21 <_start@@Base+0x6d1>
  404f84:	mov    ecx,0x8
  404f89:	mov    edx,0x8
  404f8e:	mov    esi,0x5
  404f93:	mov    rdi,rbx
  404f96:	call   413b10 <flatcc_verify_field@@Base>
  404f9b:	test   eax,eax
  404f9d:	jne    404f21 <_start@@Base+0x6d1>
  404f9f:	mov    ecx,0x4
  404fa4:	mov    edx,0x4
  404fa9:	mov    esi,0x6
  404fae:	mov    rdi,rbx
  404fb1:	call   413b10 <flatcc_verify_field@@Base>
  404fb6:	test   eax,eax
  404fb8:	jne    404f21 <_start@@Base+0x6d1>
  404fbe:	mov    ecx,0x8
  404fc3:	mov    edx,0x8
  404fc8:	mov    esi,0x7
  404fcd:	mov    rdi,rbx
  404fd0:	call   413b10 <flatcc_verify_field@@Base>
  404fd5:	test   eax,eax
  404fd7:	jne    404f21 <_start@@Base+0x6d1>
  404fdd:	mov    rdi,rbx
  404fe0:	mov    ecx,0x4
  404fe5:	mov    edx,0x4
  404fea:	pop    rbx
  404feb:	mov    esi,0x8
  404ff0:	jmp    413b10 <flatcc_verify_field@@Base>
  404ff5:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  405000:	push   rbx
  405001:	lea    rcx,[rip+0xffffffffffffff08]        # 404f10 <_start@@Base+0x6c0>
  405008:	xor    edx,edx
  40500a:	xor    esi,esi
  40500c:	mov    rbx,rdi
  40500f:	call   413ea0 <flatcc_verify_table_field@@Base>
  405014:	test   eax,eax
  405016:	je     405020 <_start@@Base+0x7d0>
  405018:	pop    rbx
  405019:	ret    
  40501a:	nop    WORD PTR [rax+rax*1+0x0]
  405020:	lea    rcx,[rip+0x8a9]        # 4058d0 <_start@@Base+0x1080>
  405027:	xor    edx,edx
  405029:	mov    esi,0x1
  40502e:	mov    rdi,rbx
  405031:	call   413ea0 <flatcc_verify_table_field@@Base>
  405036:	test   eax,eax
  405038:	jne    405018 <_start@@Base+0x7c8>
  40503a:	mov    rdi,rbx
  40503d:	lea    rcx,[rip+0xfffffffffffffc5c]        # 404ca0 <_start@@Base+0x450>
  405044:	xor    edx,edx
  405046:	pop    rbx
  405047:	mov    esi,0x2
  40504c:	jmp    413ea0 <flatcc_verify_table_field@@Base>
  405051:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40505c:	nop    DWORD PTR [rax+0x0]
  405060:	push   rbx
  405061:	xor    esi,esi
  405063:	mov    ecx,0x10
  405068:	mov    edx,0x20
  40506d:	mov    rbx,rdi
  405070:	call   413b10 <flatcc_verify_field@@Base>
  405075:	test   eax,eax
  405077:	je     405080 <_start@@Base+0x830>
  405079:	pop    rbx
  40507a:	ret    
  40507b:	nop    DWORD PTR [rax+rax*1+0x0]
  405080:	mov    ecx,0x2
  405085:	mov    edx,0x2
  40508a:	mov    esi,0x2
  40508f:	mov    rdi,rbx
  405092:	call   413b10 <flatcc_verify_field@@Base>
  405097:	test   eax,eax
  405099:	jne    405079 <_start@@Base+0x829>
  40509b:	mov    ecx,0x2
  4050a0:	mov    edx,0x2
  4050a5:	mov    esi,0x1
  4050aa:	mov    rdi,rbx
  4050ad:	call   413b10 <flatcc_verify_field@@Base>
  4050b2:	test   eax,eax
  4050b4:	jne    405079 <_start@@Base+0x829>
  4050b6:	mov    edx,0x1
  4050bb:	mov    esi,0x3
  4050c0:	mov    rdi,rbx
  4050c3:	call   413b70 <flatcc_verify_string_field@@Base>
  4050c8:	test   eax,eax
  4050ca:	jne    405079 <_start@@Base+0x829>
  4050cc:	mov    ecx,0x1
  4050d1:	mov    edx,0x1
  4050d6:	mov    esi,0x6
  4050db:	mov    rdi,rbx
  4050de:	call   413b10 <flatcc_verify_field@@Base>
  4050e3:	test   eax,eax
  4050e5:	jne    405079 <_start@@Base+0x829>
  4050e7:	xor    edx,edx
  4050e9:	mov    r9d,0xffffffff
  4050ef:	mov    r8d,0x1
  4050f5:	mov    ecx,0x1
  4050fa:	mov    esi,0x5
  4050ff:	mov    rdi,rbx
  405102:	call   413c20 <flatcc_verify_vector_field@@Base>
  405107:	test   eax,eax
  405109:	jne    405079 <_start@@Base+0x829>
  40510f:	lea    rcx,[rip+0xffffffffffffff4a]        # 405060 <_start@@Base+0x810>
  405116:	xor    edx,edx
  405118:	mov    esi,0xb
  40511d:	mov    rdi,rbx
  405120:	call   413ff0 <flatcc_verify_table_vector_field@@Base>
  405125:	test   eax,eax
  405127:	jne    405079 <_start@@Base+0x829>
  40512d:	xor    edx,edx
  40512f:	mov    esi,0xa
  405134:	mov    rdi,rbx
  405137:	call   413d00 <flatcc_verify_string_vector_field@@Base>
  40513c:	test   eax,eax
  40513e:	jne    405079 <_start@@Base+0x829>
  405144:	xor    edx,edx
  405146:	mov    esi,0x1c
  40514b:	mov    rdi,rbx
  40514e:	call   413d00 <flatcc_verify_string_vector_field@@Base>
  405153:	test   eax,eax
  405155:	jne    405079 <_start@@Base+0x829>
  40515b:	xor    edx,edx
  40515d:	mov    r9d,0xffffffff
  405163:	mov    r8d,0x1
  405169:	mov    ecx,0x1
  40516e:	mov    esi,0x18
  405173:	mov    rdi,rbx
  405176:	call   413c20 <flatcc_verify_vector_field@@Base>
  40517b:	test   eax,eax
  40517d:	jne    405079 <_start@@Base+0x829>
  405183:	xor    edx,edx
  405185:	mov    r9d,0x1fffffff
  40518b:	mov    r8d,0x4
  405191:	mov    ecx,0x8
  405196:	mov    esi,0x1d
  40519b:	mov    rdi,rbx
  40519e:	call   413c20 <flatcc_verify_vector_field@@Base>
  4051a3:	test   eax,eax
  4051a5:	jne    405079 <_start@@Base+0x829>
  4051ab:	lea    rcx,[rip+0xfffffffffffffeae]        # 405060 <_start@@Base+0x810>
  4051b2:	xor    edx,edx
  4051b4:	mov    esi,0xc
  4051b9:	mov    rdi,rbx
  4051bc:	call   413ea0 <flatcc_verify_table_field@@Base>
  4051c1:	test   eax,eax
  4051c3:	jne    405079 <_start@@Base+0x829>
  4051c9:	lea    rcx,[rip+0x340]        # 405510 <_start@@Base+0xcc0>
  4051d0:	xor    edx,edx
  4051d2:	mov    esi,0x8
  4051d7:	mov    rdi,rbx
  4051da:	call   414c90 <flatcc_verify_union_field@@Base>
  4051df:	test   eax,eax
  4051e1:	jne    405079 <_start@@Base+0x829>
  4051e7:	xor    edx,edx
  4051e9:	mov    r9d,0x3fffffff
  4051ef:	mov    r8d,0x2
  4051f5:	mov    ecx,0x4
  4051fa:	mov    esi,0x9
  4051ff:	mov    rdi,rbx
  405202:	call   413c20 <flatcc_verify_vector_field@@Base>
  405207:	test   eax,eax
  405209:	jne    405079 <_start@@Base+0x829>
  40520f:	xor    edx,edx
  405211:	mov    r9d,0x3fffffff
  405217:	mov    r8d,0x2
  40521d:	mov    ecx,0x4
  405222:	mov    esi,0x1f
  405227:	mov    rdi,rbx
  40522a:	call   413c20 <flatcc_verify_vector_field@@Base>
  40522f:	test   eax,eax
  405231:	jne    405079 <_start@@Base+0x829>
  405237:	lea    r9,[rip+0xfffffffffffffe22]        # 405060 <_start@@Base+0x810>
  40523e:	xor    ecx,ecx
  405240:	xor    edx,edx
  405242:	mov    r8d,0x1
  405248:	mov    esi,0xd
  40524d:	mov    rdi,rbx
  405250:	call   414aa0 <flatcc_verify_table_as_nested_root@@Base>
  405255:	test   eax,eax
  405257:	jne    405079 <_start@@Base+0x829>
  40525d:	lea    rcx,[rip+0xfffffffffffffc5c]        # 404ec0 <_start@@Base+0x670>
  405264:	xor    edx,edx
  405266:	mov    esi,0xe
  40526b:	mov    rdi,rbx
  40526e:	call   413ea0 <flatcc_verify_table_field@@Base>
  405273:	test   eax,eax
  405275:	jne    405079 <_start@@Base+0x829>
  40527b:	mov    ecx,0x1
  405280:	mov    edx,0x1
  405285:	mov    esi,0xf
  40528a:	mov    rdi,rbx
  40528d:	call   413b10 <flatcc_verify_field@@Base>
  405292:	test   eax,eax
  405294:	jne    405079 <_start@@Base+0x829>
  40529a:	mov    ecx,0x4
  40529f:	mov    edx,0x4
  4052a4:	mov    esi,0x10
  4052a9:	mov    rdi,rbx
  4052ac:	call   413b10 <flatcc_verify_field@@Base>
  4052b1:	test   eax,eax
  4052b3:	jne    405079 <_start@@Base+0x829>
  4052b9:	mov    ecx,0x4
  4052be:	mov    edx,0x4
  4052c3:	mov    esi,0x11
  4052c8:	mov    rdi,rbx
  4052cb:	call   413b10 <flatcc_verify_field@@Base>
  4052d0:	test   eax,eax
  4052d2:	jne    405079 <_start@@Base+0x829>
  4052d8:	mov    ecx,0x8
  4052dd:	mov    edx,0x8
  4052e2:	mov    esi,0x12
  4052e7:	mov    rdi,rbx
  4052ea:	call   413b10 <flatcc_verify_field@@Base>
  4052ef:	test   eax,eax
  4052f1:	jne    405079 <_start@@Base+0x829>
  4052f7:	mov    ecx,0x8
  4052fc:	mov    edx,0x8
  405301:	mov    esi,0x13
  405306:	mov    rdi,rbx
  405309:	call   413b10 <flatcc_verify_field@@Base>
  40530e:	test   eax,eax
  405310:	jne    405079 <_start@@Base+0x829>
  405316:	mov    ecx,0x4
  40531b:	mov    edx,0x4
  405320:	mov    esi,0x14
  405325:	mov    rdi,rbx
  405328:	call   413b10 <flatcc_verify_field@@Base>
  40532d:	test   eax,eax
  40532f:	jne    405079 <_start@@Base+0x829>
  405335:	mov    ecx,0x4
  40533a:	mov    edx,0x4
  40533f:	mov    esi,0x15
  405344:	mov    rdi,rbx
  405347:	call   413b10 <flatcc_verify_field@@Base>
  40534c:	test   eax,eax
  40534e:	jne    405079 <_start@@Base+0x829>
  405354:	mov    ecx,0x8
  405359:	mov    edx,0x8
  40535e:	mov    esi,0x16
  405363:	mov    rdi,rbx
  405366:	call   413b10 <flatcc_verify_field@@Base>
  40536b:	test   eax,eax
  40536d:	jne    405079 <_start@@Base+0x829>
  405373:	mov    ecx,0x8
  405378:	mov    edx,0x8
  40537d:	mov    esi,0x17
  405382:	mov    rdi,rbx
  405385:	call   413b10 <flatcc_verify_field@@Base>
  40538a:	test   eax,eax
  40538c:	jne    405079 <_start@@Base+0x829>
  405392:	mov    ecx,0x4
  405397:	mov    edx,0x4
  40539c:	mov    esi,0x19
  4053a1:	mov    rdi,rbx
  4053a4:	call   413b10 <flatcc_verify_field@@Base>
  4053a9:	test   eax,eax
  4053ab:	jne    405079 <_start@@Base+0x829>
  4053b1:	mov    ecx,0x4
  4053b6:	mov    edx,0x4
  4053bb:	mov    esi,0x1a
  4053c0:	mov    rdi,rbx
  4053c3:	call   413b10 <flatcc_verify_field@@Base>
  4053c8:	test   eax,eax
  4053ca:	jne    405079 <_start@@Base+0x829>
  4053d0:	mov    ecx,0x4
  4053d5:	mov    edx,0x4
  4053da:	mov    esi,0x1b
  4053df:	mov    rdi,rbx
  4053e2:	call   413b10 <flatcc_verify_field@@Base>
  4053e7:	test   eax,eax
  4053e9:	jne    405079 <_start@@Base+0x829>
  4053ef:	xor    edx,edx
  4053f1:	mov    r9d,0xffffffff
  4053f7:	mov    r8d,0x1
  4053fd:	mov    ecx,0x1
  405402:	mov    esi,0x1e
  405407:	mov    rdi,rbx
  40540a:	call   413c20 <flatcc_verify_vector_field@@Base>
  40540f:	test   eax,eax
  405411:	jne    405079 <_start@@Base+0x829>
  405417:	xor    edx,edx
  405419:	mov    r9d,0x1fffffff
  40541f:	mov    r8d,0x8
  405425:	mov    ecx,0x8
  40542a:	mov    esi,0x20
  40542f:	mov    rdi,rbx
  405432:	call   413c20 <flatcc_verify_vector_field@@Base>
  405437:	test   eax,eax
  405439:	jne    405079 <_start@@Base+0x829>
  40543f:	xor    edx,edx
  405441:	mov    r9d,0x1fffffff
  405447:	mov    r8d,0x8
  40544d:	mov    ecx,0x8
  405452:	mov    esi,0x21
  405457:	mov    rdi,rbx
  40545a:	call   413c20 <flatcc_verify_vector_field@@Base>
  40545f:	test   eax,eax
  405461:	jne    405079 <_start@@Base+0x829>
  405467:	lea    rcx,[rip+0x452]        # 4058c0 <_start@@Base+0x1070>
  40546e:	xor    edx,edx
  405470:	mov    esi,0x22
  405475:	mov    rdi,rbx
  405478:	call   413ea0 <flatcc_verify_table_field@@Base>
  40547d:	test   eax,eax
  40547f:	jne    405079 <_start@@Base+0x829>
  405485:	mov    rdi,rbx
  405488:	lea    rcx,[rip+0x11]        # 4054a0 <_start@@Base+0xc50>
  40548f:	xor    edx,edx
  405491:	pop    rbx
  405492:	mov    esi,0x23
  405497:	jmp    413ea0 <flatcc_verify_table_field@@Base>
  40549c:	nop    DWORD PTR [rax+0x0]
  4054a0:	push   rbx
  4054a1:	xor    edx,edx
  4054a3:	xor    esi,esi
  4054a5:	mov    r9d,0xffffffff
  4054ab:	mov    r8d,0x1
  4054b1:	mov    ecx,0x1
  4054b6:	mov    rbx,rdi
  4054b9:	call   413c20 <flatcc_verify_vector_field@@Base>
  4054be:	test   eax,eax
  4054c0:	je     4054c8 <_start@@Base+0xc78>
  4054c2:	pop    rbx
  4054c3:	ret    
  4054c4:	nop    DWORD PTR [rax+0x0]
  4054c8:	xor    edx,edx
  4054ca:	mov    r9d,0xffffffff
  4054d0:	mov    r8d,0x1
  4054d6:	mov    ecx,0x1
  4054db:	mov    esi,0x1
  4054e0:	mov    rdi,rbx
  4054e3:	call   413c20 <flatcc_verify_vector_field@@Base>
  4054e8:	test   eax,eax
  4054ea:	jne    4054c2 <_start@@Base+0xc72>
  4054ec:	mov    rdi,rbx
  4054ef:	lea    r9,[rip+0xfffffffffffffb6a]        # 405060 <_start@@Base+0x810>
  4054f6:	mov    r8d,0x1
  4054fc:	pop    rbx
  4054fd:	xor    ecx,ecx
  4054ff:	xor    edx,edx
  405501:	mov    esi,0x2
  405506:	jmp    414aa0 <flatcc_verify_table_as_nested_root@@Base>
  40550b:	nop    DWORD PTR [rax+rax*1+0x0]
  405510:	movzx  eax,BYTE PTR [rdi+0x10]
  405514:	cmp    al,0x2
  405516:	je     405558 <_start@@Base+0xd08>
  405518:	jbe    405540 <_start@@Base+0xcf0>
  40551a:	cmp    al,0x3
  40551c:	je     405530 <_start@@Base+0xce0>
  40551e:	cmp    al,0x4
  405520:	jne    405550 <_start@@Base+0xd00>
  405522:	lea    rsi,[rip+0x47]        # 405570 <_start@@Base+0xd20>
  405529:	jmp    414320 <flatcc_verify_union_table@@Base>
  40552e:	xchg   ax,ax
  405530:	lea    rsi,[rip+0xfffffffffffff429]        # 404960 <_start@@Base+0x110>
  405537:	jmp    414320 <flatcc_verify_union_table@@Base>
  40553c:	nop    DWORD PTR [rax+0x0]
  405540:	cmp    al,0x1
  405542:	jne    405550 <_start@@Base+0xd00>
  405544:	lea    rsi,[rip+0xfffffffffffffb15]        # 405060 <_start@@Base+0x810>
  40554b:	jmp    414320 <flatcc_verify_union_table@@Base>
  405550:	xor    eax,eax
  405552:	ret    
  405553:	nop    DWORD PTR [rax+rax*1+0x0]
  405558:	lea    rsi,[rip+0xfffffffffffff781]        # 404ce0 <_start@@Base+0x490>
  40555f:	jmp    414320 <flatcc_verify_union_table@@Base>
  405564:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40556f:	nop
  405570:	push   rbx
  405571:	lea    rcx,[rip+0xfffffffffffffa88]        # 405000 <_start@@Base+0x7b0>
  405578:	xor    edx,edx
  40557a:	xor    esi,esi
  40557c:	mov    rbx,rdi
  40557f:	call   413ea0 <flatcc_verify_table_field@@Base>
  405584:	test   eax,eax
  405586:	je     405590 <_start@@Base+0xd40>
  405588:	pop    rbx
  405589:	ret    
  40558a:	nop    WORD PTR [rax+rax*1+0x0]
  405590:	lea    rcx,[rip+0x39]        # 4055d0 <_start@@Base+0xd80>
  405597:	xor    edx,edx
  405599:	mov    esi,0x1
  40559e:	mov    rdi,rbx
  4055a1:	call   413ea0 <flatcc_verify_table_field@@Base>
  4055a6:	test   eax,eax
  4055a8:	jne    405588 <_start@@Base+0xd38>
  4055aa:	mov    rdi,rbx
  4055ad:	lea    rcx,[rip+0xffffffffffffff5c]        # 405510 <_start@@Base+0xcc0>
  4055b4:	xor    edx,edx
  4055b6:	pop    rbx
  4055b7:	mov    esi,0x3
  4055bc:	jmp    414df0 <flatcc_verify_union_vector_field@@Base>
  4055c1:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4055cc:	nop    DWORD PTR [rax+0x0]
  4055d0:	push   rbx
  4055d1:	lea    rcx,[rip+0x88]        # 405660 <_start@@Base+0xe10>
  4055d8:	xor    edx,edx
  4055da:	mov    esi,0x1
  4055df:	mov    rbx,rdi
  4055e2:	call   414c90 <flatcc_verify_union_field@@Base>
  4055e7:	test   eax,eax
  4055e9:	je     4055f0 <_start@@Base+0xda0>
  4055eb:	pop    rbx
  4055ec:	ret    
  4055ed:	nop    DWORD PTR [rax]
  4055f0:	lea    rcx,[rip+0x69]        # 405660 <_start@@Base+0xe10>
  4055f7:	xor    edx,edx
  4055f9:	mov    esi,0x3
  4055fe:	mov    rdi,rbx
  405601:	call   414c90 <flatcc_verify_union_field@@Base>
  405606:	test   eax,eax
  405608:	jne    4055eb <_start@@Base+0xd9b>
  40560a:	lea    rcx,[rip+0x4f]        # 405660 <_start@@Base+0xe10>
  405611:	xor    edx,edx
  405613:	mov    esi,0x5
  405618:	mov    rdi,rbx
  40561b:	call   414c90 <flatcc_verify_union_field@@Base>
  405620:	test   eax,eax
  405622:	jne    4055eb <_start@@Base+0xd9b>
  405624:	lea    rcx,[rip+0x35]        # 405660 <_start@@Base+0xe10>
  40562b:	xor    edx,edx
  40562d:	mov    esi,0x7
  405632:	mov    rdi,rbx
  405635:	call   414c90 <flatcc_verify_union_field@@Base>
  40563a:	test   eax,eax
  40563c:	jne    4055eb <_start@@Base+0xd9b>
  40563e:	mov    rdi,rbx
  405641:	lea    rcx,[rip+0x18]        # 405660 <_start@@Base+0xe10>
  405648:	xor    edx,edx
  40564a:	pop    rbx
  40564b:	mov    esi,0x9
  405650:	jmp    414df0 <flatcc_verify_union_vector_field@@Base>
  405655:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  405660:	movzx  eax,BYTE PTR [rdi+0x10]
  405664:	cmp    al,0x9
  405666:	je     4056a0 <_start@@Base+0xe50>
  405668:	jbe    405680 <_start@@Base+0xe30>
  40566a:	cmp    al,0xb
  40566c:	je     405674 <_start@@Base+0xe24>
  40566e:	jb     4056a0 <_start@@Base+0xe50>
  405670:	cmp    al,0xff
  405672:	jne    4056b0 <_start@@Base+0xe60>
  405674:	jmp    414490 <flatcc_verify_union_string@@Base>
  405679:	nop    DWORD PTR [rax+0x0]
  405680:	cmp    al,0x2
  405682:	je     4056b8 <_start@@Base+0xe68>
  405684:	cmp    al,0x8
  405686:	jne    4056b0 <_start@@Base+0xe60>
  405688:	mov    edx,0x2
  40568d:	mov    esi,0x2
  405692:	jmp    414440 <flatcc_verify_union_struct@@Base>
  405697:	nop    WORD PTR [rax+rax*1+0x0]
  4056a0:	mov    edx,0x4
  4056a5:	mov    esi,0x4
  4056aa:	jmp    414440 <flatcc_verify_union_struct@@Base>
  4056af:	nop
  4056b0:	xor    eax,eax
  4056b2:	ret    
  4056b3:	nop    DWORD PTR [rax+rax*1+0x0]
  4056b8:	lea    rsi,[rip+0xfffffffffffff2b1]        # 404970 <_start@@Base+0x120>
  4056bf:	jmp    414320 <flatcc_verify_union_table@@Base>
  4056c4:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4056cf:	nop
  4056d0:	vsubsd xmm5,xmm1,xmm0
  4056d4:	push   rbx
  4056d5:	mov    rbx,rsi
  4056d8:	lea    rsi,[rip+0x10942]        # 416021 <_IO_stdin_used@@Base+0x21>
  4056df:	mov    rdx,rdi
  4056e2:	xor    eax,eax
  4056e4:	sub    rsp,0x10
  4056e8:	mov    edi,0x1
  4056ed:	vmovsd QWORD PTR [rsp],xmm5
  4056f2:	call   404110 <__printf_chk@plt>
  4056f7:	vmovsd xmm0,QWORD PTR [rsp]
  4056fc:	lea    rsi,[rip+0x1092d]        # 416030 <_IO_stdin_used@@Base+0x30>
  405703:	mov    edi,0x1
  405708:	mov    eax,0x1
  40570d:	call   404110 <__printf_chk@plt>
  405712:	lea    rsi,[rip+0x1092f]        # 416048 <_IO_stdin_used@@Base+0x48>
  405719:	mov    edx,0xf4240
  40571e:	mov    edi,0x1
  405723:	xor    eax,eax
  405725:	call   404110 <__printf_chk@plt>
  40572a:	lea    rsi,[rip+0x10927]        # 416058 <_IO_stdin_used@@Base+0x58>
  405731:	xor    eax,eax
  405733:	mov    rdx,rbx
  405736:	mov    edi,0x1
  40573b:	call   404110 <__printf_chk@plt>
  405740:	test   rbx,rbx
  405743:	js     405850 <_start@@Base+0x1000>
  405749:	vxorpd xmm0,xmm0,xmm0
  40574d:	vcvtsi2sd xmm0,xmm0,rbx
  405752:	vmovsd xmm1,QWORD PTR [rip+0x13ea6]        # 419600 <_IO_stdin_used@@Base+0x3600>
  40575a:	lea    rsi,[rip+0x1090a]        # 41606b <_IO_stdin_used@@Base+0x6b>
  405761:	mov    edi,0x1
  405766:	mov    eax,0x1
  40576b:	vmulsd xmm0,xmm0,xmm1
  40576f:	vmovsd QWORD PTR [rsp+0x8],xmm1
  405775:	vdivsd xmm0,xmm0,xmm1
  405779:	vdivsd xmm0,xmm0,QWORD PTR [rsp]
  40577e:	call   404110 <__printf_chk@plt>
  405783:	vmovsd xmm1,QWORD PTR [rsp+0x8]
  405789:	lea    rsi,[rip+0x115c0]        # 416d50 <_IO_stdin_used@@Base+0xd50>
  405790:	mov    edi,0x1
  405795:	mov    eax,0x1
  40579a:	vdivsd xmm0,xmm1,QWORD PTR [rsp]
  40579f:	call   404110 <__printf_chk@plt>
  4057a4:	vmovsd xmm0,QWORD PTR [rip+0x13e5c]        # 419608 <_IO_stdin_used@@Base+0x3608>
  4057ac:	lea    rdx,[rip+0x108d0]        # 416083 <_IO_stdin_used@@Base+0x83>
  4057b3:	lea    rsi,[rip+0x115be]        # 416d78 <_IO_stdin_used@@Base+0xd78>
  4057ba:	mov    edi,0x1
  4057bf:	mov    eax,0x1
  4057c4:	vdivsd xmm0,xmm0,QWORD PTR [rsp]
  4057c9:	call   404110 <__printf_chk@plt>
  4057ce:	vmovsd xmm2,QWORD PTR [rip+0x13e3a]        # 419610 <_IO_stdin_used@@Base+0x3610>
  4057d6:	vmovsd xmm1,QWORD PTR [rsp+0x8]
  4057dc:	vmulsd xmm0,xmm2,QWORD PTR [rsp]
  4057e1:	vmovsd xmm3,QWORD PTR [rip+0x13e2f]        # 419618 <_IO_stdin_used@@Base+0x3618>
  4057e9:	vdivsd xmm0,xmm0,xmm1
  4057ed:	vucomisd xmm3,xmm0
  4057f1:	ja     405870 <_start@@Base+0x1020>
  4057f3:	vucomisd xmm1,xmm0
  4057f7:	ja     405890 <_start@@Base+0x1040>
  4057fd:	vucomisd xmm2,xmm0
  405801:	ja     405828 <_start@@Base+0xfd8>
  405803:	vdivsd xmm0,xmm0,xmm2
  405807:	lea    rsi,[rip+0x108c5]        # 4160d3 <_IO_stdin_used@@Base+0xd3>
  40580e:	mov    edi,0x1
  405813:	mov    eax,0x1
  405818:	call   404110 <__printf_chk@plt>
  40581d:	add    rsp,0x10
  405821:	xor    eax,eax
  405823:	pop    rbx
  405824:	ret    
  405825:	nop    DWORD PTR [rax]
  405828:	vdivsd xmm0,xmm0,xmm1
  40582c:	lea    rsi,[rip+0x10888]        # 4160bb <_IO_stdin_used@@Base+0xbb>
  405833:	mov    edi,0x1
  405838:	mov    eax,0x1
  40583d:	call   404110 <__printf_chk@plt>
  405842:	add    rsp,0x10
  405846:	xor    eax,eax
  405848:	pop    rbx
  405849:	ret    
  40584a:	nop    WORD PTR [rax+rax*1+0x0]
  405850:	mov    rax,rbx
  405853:	vxorpd xmm0,xmm0,xmm0
  405857:	shr    rax,1
  40585a:	and    ebx,0x1
  40585d:	or     rax,rbx
  405860:	vcvtsi2sd xmm0,xmm0,rax
  405865:	vaddsd xmm0,xmm0,xmm0
  405869:	jmp    405752 <_start@@Base+0xf02>
  40586e:	xchg   ax,ax
  405870:	lea    rsi,[rip+0x10814]        # 41608b <_IO_stdin_used@@Base+0x8b>
  405877:	mov    edi,0x1
  40587c:	mov    eax,0x1
  405881:	call   404110 <__printf_chk@plt>
  405886:	add    rsp,0x10
  40588a:	xor    eax,eax
  40588c:	pop    rbx
  40588d:	ret    
  40588e:	xchg   ax,ax
  405890:	vdivsd xmm0,xmm0,xmm3
  405894:	lea    rsi,[rip+0x10808]        # 4160a3 <_IO_stdin_used@@Base+0xa3>
  40589b:	mov    edi,0x1
  4058a0:	mov    eax,0x1
  4058a5:	call   404110 <__printf_chk@plt>
  4058aa:	add    rsp,0x10
  4058ae:	xor    eax,eax
  4058b0:	pop    rbx
  4058b1:	ret    
  4058b2:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4058bd:	nop    DWORD PTR [rax]
  4058c0:	xor    eax,eax
  4058c2:	ret    
  4058c3:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4058ce:	xchg   ax,ax
  4058d0:	push   rbx
  4058d1:	xor    esi,esi
  4058d3:	mov    ecx,0x8
  4058d8:	mov    edx,0x8
  4058dd:	mov    rbx,rdi
  4058e0:	call   413b10 <flatcc_verify_field@@Base>
  4058e5:	test   eax,eax
  4058e7:	je     4058f0 <_start@@Base+0x10a0>
  4058e9:	pop    rbx
  4058ea:	ret    
  4058eb:	nop    DWORD PTR [rax+rax*1+0x0]
  4058f0:	mov    rdi,rbx
  4058f3:	mov    ecx,0x4
  4058f8:	mov    edx,0x4
  4058fd:	pop    rbx
  4058fe:	mov    esi,0x1
  405903:	jmp    413b10 <flatcc_verify_field@@Base>
  405908:	nop    DWORD PTR [rax+rax*1+0x0]
  405910:	push   r15
  405912:	push   r14
  405914:	push   r13
  405916:	push   r12
  405918:	push   rbp
  405919:	push   rbx
  40591a:	sub    rsp,0x18
  40591e:	test   rdi,rdi
  405921:	je     405a9e <_start@@Base+0x124e>
  405927:	mov    r13d,DWORD PTR [rdi-0x4]
  40592b:	test   r13,r13
  40592e:	je     405a9e <_start@@Base+0x124e>
  405934:	mov    eax,DWORD PTR [rdi]
  405936:	mov    rbp,rsi
  405939:	mov    r14,rdi
  40593c:	add    rax,rdi
  40593f:	je     405aa9 <_start@@Base+0x1259>
  405945:	movsxd rdx,DWORD PTR [rax]
  405948:	mov    rbx,rax
  40594b:	sub    rbx,rdx
  40594e:	cmp    WORD PTR [rbx],0xb
  405952:	jbe    4059b8 <_start@@Base+0x1168>
  405954:	movzx  edx,WORD PTR [rbx+0xa]
  405958:	test   dx,dx
  40595b:	je     4059b8 <_start@@Base+0x1168>
  40595d:	lea    r12,[rdi+0x4]
  405961:	xor    ebx,ebx
  405963:	nop    DWORD PTR [rax+rax*1+0x0]
  405968:	add    rax,rdx
  40596b:	mov    rsi,rbp
  40596e:	mov    edx,DWORD PTR [rax]
  405970:	lea    rdi,[rax+rdx*1+0x4]
  405975:	call   4040d0 <strcmp@plt>
  40597a:	test   eax,eax
  40597c:	je     4059d7 <_start@@Base+0x1187>
  40597e:	add    rbx,0x1
  405982:	cmp    rbx,r13
  405985:	je     405a9e <_start@@Base+0x124e>
  40598b:	mov    eax,DWORD PTR [r12]
  40598f:	add    rax,r12
  405992:	je     405aa9 <_start@@Base+0x1259>
  405998:	movsxd rdx,DWORD PTR [rax]
  40599b:	mov    rsi,rax
  40599e:	sub    rsi,rdx
  4059a1:	cmp    WORD PTR [rsi],0xb
  4059a5:	jbe    4059b8 <_start@@Base+0x1168>
  4059a7:	movzx  edx,WORD PTR [rsi+0xa]
  4059ab:	add    r12,0x4
  4059af:	test   dx,dx
  4059b2:	jne    405968 <_start@@Base+0x1118>
  4059b4:	nop    DWORD PTR [rax+0x0]
  4059b8:	lea    rcx,[rip+0x13851]        # 419210 <_IO_stdin_used@@Base+0x3210>
  4059bf:	lea    rsi,[rip+0x11012]        # 4169d8 <_IO_stdin_used@@Base+0x9d8>
  4059c6:	lea    rdi,[rip+0x11173]        # 416b40 <_IO_stdin_used@@Base+0xb40>
  4059cd:	mov    edx,0x2bb
  4059d2:	call   404090 <__assert_fail@plt>
  4059d7:	lea    r12,[r13-0x1]
  4059db:	mov    QWORD PTR [rsp+0x8],0x0
  4059e4:	nop    DWORD PTR [rax+0x0]
  4059e8:	add    rbx,0x1
  4059ec:	add    QWORD PTR [rsp+0x8],0x1
  4059f2:	cmp    rbx,r13
  4059f5:	jae    405a8a <_start@@Base+0x123a>
  4059fb:	lea    rcx,[rbx*4+0x0]
  405a03:	lea    rax,[r14+rcx*1]
  405a07:	mov    edx,DWORD PTR [rax]
  405a09:	add    rax,rdx
  405a0c:	je     405aa9 <_start@@Base+0x1259>
  405a12:	movsxd rdx,DWORD PTR [rax]
  405a15:	mov    rsi,rax
  405a18:	sub    rsi,rdx
  405a1b:	cmp    WORD PTR [rsi],0xb
  405a1f:	jbe    4059b8 <_start@@Base+0x1168>
  405a21:	movzx  edx,WORD PTR [rsi+0xa]
  405a25:	test   dx,dx
  405a28:	je     4059b8 <_start@@Base+0x1168>
  405a2a:	lea    r15,[r14+rcx*1+0x4]
  405a2f:	nop
  405a30:	add    rax,rdx
  405a33:	mov    rsi,rbp
  405a36:	mov    edx,DWORD PTR [rax]
  405a38:	lea    rdi,[rax+rdx*1+0x4]
  405a3d:	call   4040d0 <strcmp@plt>
  405a42:	test   eax,eax
  405a44:	je     405a80 <_start@@Base+0x1230>
  405a46:	cmp    r12,rbx
  405a49:	je     405a8a <_start@@Base+0x123a>
  405a4b:	mov    eax,DWORD PTR [r15]
  405a4e:	add    rax,r15
  405a51:	je     405aa9 <_start@@Base+0x1259>
  405a53:	movsxd rdx,DWORD PTR [rax]
  405a56:	mov    rcx,rax
  405a59:	sub    rcx,rdx
  405a5c:	cmp    WORD PTR [rcx],0xb
  405a60:	jbe    4059b8 <_start@@Base+0x1168>
  405a66:	movzx  edx,WORD PTR [rcx+0xa]
  405a6a:	add    rbx,0x1
  405a6e:	add    r15,0x4
  405a72:	test   dx,dx
  405a75:	jne    405a30 <_start@@Base+0x11e0>
  405a77:	jmp    4059b8 <_start@@Base+0x1168>
  405a7c:	nop    DWORD PTR [rax+0x0]
  405a80:	cmp    rbx,0xffffffffffffffff
  405a84:	jne    4059e8 <_start@@Base+0x1198>
  405a8a:	mov    rax,QWORD PTR [rsp+0x8]
  405a8f:	add    rsp,0x18
  405a93:	pop    rbx
  405a94:	pop    rbp
  405a95:	pop    r12
  405a97:	pop    r13
  405a99:	pop    r14
  405a9b:	pop    r15
  405a9d:	ret    
  405a9e:	mov    QWORD PTR [rsp+0x8],0x0
  405aa7:	jmp    405a8a <_start@@Base+0x123a>
  405aa9:	call   40432a <posix_memalign@plt+0x1fa>
  405aae:	xchg   ax,ax
  405ab0:	test   rdi,rdi
  405ab3:	push   r14
  405ab5:	push   r13
  405ab7:	push   r12
  405ab9:	push   rbp
  405aba:	push   rbx
  405abb:	je     405b68 <_start@@Base+0x1318>
  405ac1:	mov    r12d,DWORD PTR [rdi-0x4]
  405ac5:	mov    rbp,rcx
  405ac8:	mov    rbx,rsi
  405acb:	cmp    rdx,r12
  405ace:	cmova  rdx,r12
  405ad2:	lea    r13,[rdi+rdx*4-0x4]
  405ad7:	nop    WORD PTR [rax+rax*1+0x0]
  405ae0:	cmp    rdx,rbx
  405ae3:	lea    r14,[rdx-0x1]
  405ae7:	jbe    405b68 <_start@@Base+0x1318>
  405ae9:	cmp    r14,r12
  405aec:	jae    405b80 <_start@@Base+0x1330>
  405af2:	mov    eax,DWORD PTR [r13+0x0]
  405af6:	add    rax,r13
  405af9:	je     405b7b <_start@@Base+0x132b>
  405aff:	movsxd rdx,DWORD PTR [rax]
  405b02:	mov    rcx,rax
  405b05:	sub    rcx,rdx
  405b08:	cmp    WORD PTR [rcx],0xb
  405b0c:	ja     405b30 <_start@@Base+0x12e0>
  405b0e:	lea    rcx,[rip+0x136fb]        # 419210 <_IO_stdin_used@@Base+0x3210>
  405b15:	lea    rsi,[rip+0x10ebc]        # 4169d8 <_IO_stdin_used@@Base+0x9d8>
  405b1c:	lea    rdi,[rip+0x1101d]        # 416b40 <_IO_stdin_used@@Base+0xb40>
  405b23:	mov    edx,0x2bb
  405b28:	call   404090 <__assert_fail@plt>
  405b2d:	nop    DWORD PTR [rax]
  405b30:	movzx  edx,WORD PTR [rcx+0xa]
  405b34:	test   dx,dx
  405b37:	je     405b0e <_start@@Base+0x12be>
  405b39:	add    rax,rdx
  405b3c:	mov    rsi,rbp
  405b3f:	sub    r13,0x4
  405b43:	mov    edx,DWORD PTR [rax]
  405b45:	lea    rdi,[rax+rdx*1+0x4]
  405b4a:	call   4040d0 <strcmp@plt>
  405b4f:	test   eax,eax
  405b51:	mov    rdx,r14
  405b54:	jne    405ae0 <_start@@Base+0x1290>
  405b56:	pop    rbx
  405b57:	mov    rax,r14
  405b5a:	pop    rbp
  405b5b:	pop    r12
  405b5d:	pop    r13
  405b5f:	pop    r14
  405b61:	ret    
  405b62:	nop    WORD PTR [rax+rax*1+0x0]
  405b68:	mov    r14,0xffffffffffffffff
  405b6f:	pop    rbx
  405b70:	mov    rax,r14
  405b73:	pop    rbp
  405b74:	pop    r12
  405b76:	pop    r13
  405b78:	pop    r14
  405b7a:	ret    
  405b7b:	call   40432a <posix_memalign@plt+0x1fa>
  405b80:	lea    rcx,[rip+0x13709]        # 419290 <_IO_stdin_used@@Base+0x3290>
  405b87:	lea    rsi,[rip+0x10e4a]        # 4169d8 <_IO_stdin_used@@Base+0x9d8>
  405b8e:	lea    rdi,[rip+0x10f73]        # 416b08 <_IO_stdin_used@@Base+0xb08>
  405b95:	mov    edx,0x2b5
  405b9a:	call   404090 <__assert_fail@plt>
  405b9f:	nop
  405ba0:	push   r14
  405ba2:	mov    r14,rdi
  405ba5:	push   r13
  405ba7:	test   r14,r14
  405baa:	push   r12
  405bac:	mov    r13,rsi
  405baf:	push   rbp
  405bb0:	mov    r12,rcx
  405bb3:	push   rbx
  405bb4:	mov    rbp,rdx
  405bb7:	lea    rbx,[rdi+rsi*4]
  405bbb:	je     405c50 <_start@@Base+0x1400>
  405bc1:	nop    DWORD PTR [rax+0x0]
  405bc8:	mov    eax,DWORD PTR [r14-0x4]
  405bcc:	cmp    rbp,rax
  405bcf:	mov    rdx,rax
  405bd2:	cmovbe rdx,rbp
  405bd6:	cmp    r13,rdx
  405bd9:	jae    405c50 <_start@@Base+0x1400>
  405bdb:	cmp    r13,rax
  405bde:	jae    405c71 <_start@@Base+0x1421>
  405be4:	mov    edx,DWORD PTR [rbx]
  405be6:	add    rdx,rbx
  405be9:	je     405c6c <_start@@Base+0x141c>
  405bef:	movsxd rax,DWORD PTR [rdx]
  405bf2:	mov    rcx,rdx
  405bf5:	sub    rcx,rax
  405bf8:	cmp    WORD PTR [rcx],0xb
  405bfc:	ja     405c20 <_start@@Base+0x13d0>
  405bfe:	lea    rcx,[rip+0x1360b]        # 419210 <_IO_stdin_used@@Base+0x3210>
  405c05:	lea    rsi,[rip+0x10dcc]        # 4169d8 <_IO_stdin_used@@Base+0x9d8>
  405c0c:	lea    rdi,[rip+0x10f2d]        # 416b40 <_IO_stdin_used@@Base+0xb40>
  405c13:	mov    edx,0x2bb
  405c18:	call   404090 <__assert_fail@plt>
  405c1d:	nop    DWORD PTR [rax]
  405c20:	movzx  eax,WORD PTR [rcx+0xa]
  405c24:	test   ax,ax
  405c27:	je     405bfe <_start@@Base+0x13ae>
  405c29:	add    rdx,rax
  405c2c:	mov    rsi,r12
  405c2f:	add    rbx,0x4
  405c33:	mov    eax,DWORD PTR [rdx]
  405c35:	lea    rdi,[rdx+rax*1+0x4]
  405c3a:	call   4040d0 <strcmp@plt>
  405c3f:	test   eax,eax
  405c41:	je     405c60 <_start@@Base+0x1410>
  405c43:	add    r13,0x1
  405c47:	test   r14,r14
  405c4a:	jne    405bc8 <_start@@Base+0x1378>
  405c50:	pop    rbx
  405c51:	mov    rax,0xffffffffffffffff
  405c58:	pop    rbp
  405c59:	pop    r12
  405c5b:	pop    r13
  405c5d:	pop    r14
  405c5f:	ret    
  405c60:	pop    rbx
  405c61:	mov    rax,r13
  405c64:	pop    rbp
  405c65:	pop    r12
  405c67:	pop    r13
  405c69:	pop    r14
  405c6b:	ret    
  405c6c:	call   40432a <posix_memalign@plt+0x1fa>
  405c71:	lea    rcx,[rip+0x13618]        # 419290 <_IO_stdin_used@@Base+0x3290>
  405c78:	lea    rsi,[rip+0x10d59]        # 4169d8 <_IO_stdin_used@@Base+0x9d8>
  405c7f:	lea    rdi,[rip+0x10e82]        # 416b08 <_IO_stdin_used@@Base+0xb08>
  405c86:	mov    edx,0x2b5
  405c8b:	call   404090 <__assert_fail@plt>
  405c90:	push   r15
  405c92:	push   r14
  405c94:	push   r13
  405c96:	push   r12
  405c98:	push   rbp
  405c99:	push   rbx
  405c9a:	sub    rsp,0x8
  405c9e:	test   rdi,rdi
  405ca1:	je     405d85 <_start@@Base+0x1535>
  405ca7:	mov    ebp,DWORD PTR [rdi-0x4]
  405caa:	test   rbp,rbp
  405cad:	je     405d85 <_start@@Base+0x1535>
  405cb3:	lea    r13,[rbp-0x1]
  405cb7:	mov    r12,rsi
  405cba:	mov    rbx,rdi
  405cbd:	xor    r15d,r15d
  405cc0:	cmp    r13,r15
  405cc3:	mov    r14,r13
  405cc6:	jbe    405d80 <_start@@Base+0x1530>
  405ccc:	sub    r14,r15
  405ccf:	shr    r14,1
  405cd2:	add    r14,r15
  405cd5:	cmp    rbp,r14
  405cd8:	lea    rax,[rbx+r14*4]
  405cdc:	jbe    405de9 <_start@@Base+0x1599>
  405ce2:	mov    edx,DWORD PTR [rax]
  405ce4:	add    rax,rdx
  405ce7:	je     405e08 <_start@@Base+0x15b8>
  405ced:	movsxd rdx,DWORD PTR [rax]
  405cf0:	mov    rcx,rax
  405cf3:	sub    rcx,rdx
  405cf6:	cmp    WORD PTR [rcx],0xb
  405cfa:	ja     405d06 <_start@@Base+0x14b6>
  405cfc:	jmp    405d60 <_start@@Base+0x1510>
  405cfe:	xchg   ax,ax
  405d00:	mov    r13,r14
  405d03:	mov    r14,rdx
  405d06:	movzx  edx,WORD PTR [rcx+0xa]
  405d0a:	test   dx,dx
  405d0d:	je     405d60 <_start@@Base+0x1510>
  405d0f:	add    rax,rdx
  405d12:	mov    rsi,r12
  405d15:	mov    edx,DWORD PTR [rax]
  405d17:	lea    rdi,[rax+rdx*1+0x4]
  405d1c:	call   4040d0 <strcmp@plt>
  405d21:	test   eax,eax
  405d23:	js     405da0 <_start@@Base+0x1550>
  405d25:	cmp    r15,r14
  405d28:	jae    405d80 <_start@@Base+0x1530>
  405d2a:	mov    rdx,r14
  405d2d:	sub    rdx,r15
  405d30:	shr    rdx,1
  405d33:	add    rdx,r15
  405d36:	cmp    rdx,rbp
  405d39:	lea    rax,[rbx+rdx*4]
  405d3d:	jae    405de9 <_start@@Base+0x1599>
  405d43:	mov    ecx,DWORD PTR [rax]
  405d45:	add    rax,rcx
  405d48:	je     405e08 <_start@@Base+0x15b8>
  405d4e:	movsxd rcx,DWORD PTR [rax]
  405d51:	mov    rsi,rax
  405d54:	sub    rsi,rcx
  405d57:	cmp    WORD PTR [rsi],0xb
  405d5b:	mov    rcx,rsi
  405d5e:	ja     405d00 <_start@@Base+0x14b0>
  405d60:	lea    rcx,[rip+0x134a9]        # 419210 <_IO_stdin_used@@Base+0x3210>
  405d67:	lea    rsi,[rip+0x10c6a]        # 4169d8 <_IO_stdin_used@@Base+0x9d8>
  405d6e:	lea    rdi,[rip+0x10dcb]        # 416b40 <_IO_stdin_used@@Base+0xb40>
  405d75:	mov    edx,0x2bb
  405d7a:	call   404090 <__assert_fail@plt>
  405d7f:	nop
  405d80:	cmp    r14,r15
  405d83:	je     405da9 <_start@@Base+0x1559>
  405d85:	mov    r15,0xffffffffffffffff
  405d8c:	add    rsp,0x8
  405d90:	mov    rax,r15
  405d93:	pop    rbx
  405d94:	pop    rbp
  405d95:	pop    r12
  405d97:	pop    r13
  405d99:	pop    r14
  405d9b:	pop    r15
  405d9d:	ret    
  405d9e:	xchg   ax,ax
  405da0:	lea    r15,[r14+0x1]
  405da4:	jmp    405cc0 <_start@@Base+0x1470>
  405da9:	cmp    rbp,r14
  405dac:	lea    rax,[rbx+r14*4]
  405db0:	jbe    405e0d <_start@@Base+0x15bd>
  405db2:	mov    edx,DWORD PTR [rax]
  405db4:	add    rax,rdx
  405db7:	je     405e08 <_start@@Base+0x15b8>
  405db9:	movsxd rdx,DWORD PTR [rax]
  405dbc:	mov    rbx,rax
  405dbf:	sub    rbx,rdx
  405dc2:	cmp    WORD PTR [rbx],0xb
  405dc6:	jbe    405d60 <_start@@Base+0x1510>
  405dc8:	movzx  edx,WORD PTR [rbx+0xa]
  405dcc:	test   dx,dx
  405dcf:	je     405d60 <_start@@Base+0x1510>
  405dd1:	add    rax,rdx
  405dd4:	mov    rsi,r12
  405dd7:	mov    edx,DWORD PTR [rax]
  405dd9:	lea    rdi,[rax+rdx*1+0x4]
  405dde:	call   4040d0 <strcmp@plt>
  405de3:	test   eax,eax
  405de5:	jne    405d85 <_start@@Base+0x1535>
  405de7:	jmp    405d8c <_start@@Base+0x153c>
  405de9:	lea    rcx,[rip+0x134a0]        # 419290 <_IO_stdin_used@@Base+0x3290>
  405df0:	lea    rsi,[rip+0x10be1]        # 4169d8 <_IO_stdin_used@@Base+0x9d8>
  405df7:	lea    rdi,[rip+0x10d0a]        # 416b08 <_IO_stdin_used@@Base+0xb08>
  405dfe:	mov    edx,0x2b5
  405e03:	call   404090 <__assert_fail@plt>
  405e08:	call   40432a <posix_memalign@plt+0x1fa>
  405e0d:	call   404c10 <_start@@Base+0x3c0>
  405e12:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  405e1d:	nop    DWORD PTR [rax]

0000000000405e20 <verify_empty_monster@@Base>:
  405e20:	sub    rsp,0x8
  405e24:	test   rdi,rdi
  405e27:	je     405e32 <verify_empty_monster@@Base+0x12>
  405e29:	cmp    DWORD PTR [rdi+0x4],0x534e4f4d
  405e30:	je     405e50 <verify_empty_monster@@Base+0x30>
  405e32:	lea    rsi,[rip+0x102b1]        # 4160ea <_IO_stdin_used@@Base+0xea>
  405e39:	mov    edi,0x1
  405e3e:	xor    eax,eax
  405e40:	call   404110 <__printf_chk@plt>
  405e45:	mov    eax,0xffffffff
  405e4a:	add    rsp,0x8
  405e4e:	ret    
  405e4f:	nop
  405e50:	mov    eax,DWORD PTR [rdi]
  405e52:	add    rdi,rax
  405e55:	je     405e32 <verify_empty_monster@@Base+0x12>
  405e57:	movsxd rax,DWORD PTR [rdi]
  405e5a:	mov    rdx,rdi
  405e5d:	sub    rdx,rax
  405e60:	movzx  eax,WORD PTR [rdx]
  405e63:	cmp    ax,0x9
  405e67:	jbe    405ea0 <verify_empty_monster@@Base+0x80>
  405e69:	movzx  eax,WORD PTR [rdx+0x8]
  405e6d:	test   ax,ax
  405e70:	je     405eb0 <verify_empty_monster@@Base+0x90>
  405e72:	cmp    WORD PTR [rdi+rax*1],0x64
  405e77:	jne    405ed8 <verify_empty_monster@@Base+0xb8>
  405e79:	lea    rsi,[rip+0x1029d]        # 41611d <_IO_stdin_used@@Base+0x11d>
  405e80:	mov    edi,0x1
  405e85:	xor    eax,eax
  405e87:	call   404110 <__printf_chk@plt>
  405e8c:	mov    eax,0xffffffff
  405e91:	add    rsp,0x8
  405e95:	ret    
  405e96:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405ea0:	cmp    ax,0x5
  405ea4:	ja     405eb0 <verify_empty_monster@@Base+0x90>
  405ea6:	xor    eax,eax
  405ea8:	add    rsp,0x8
  405eac:	ret    
  405ead:	nop    DWORD PTR [rax]
  405eb0:	xor    eax,eax
  405eb2:	cmp    WORD PTR [rdx+0x4],0x0
  405eb7:	je     405e4a <verify_empty_monster@@Base+0x2a>
  405eb9:	lea    rsi,[rip+0x10241]        # 416101 <_IO_stdin_used@@Base+0x101>
  405ec0:	mov    edi,0x1
  405ec5:	call   404110 <__printf_chk@plt>
  405eca:	mov    eax,0xffffffff
  405ecf:	jmp    405e4a <verify_empty_monster@@Base+0x2a>
  405ed4:	nop    DWORD PTR [rax+0x0]
  405ed8:	lea    rsi,[rip+0x10f31]        # 416e10 <_IO_stdin_used@@Base+0xe10>
  405edf:	mov    edi,0x1
  405ee4:	xor    eax,eax
  405ee6:	call   404110 <__printf_chk@plt>
  405eeb:	mov    eax,0xffffffff
  405ef0:	jmp    405e4a <verify_empty_monster@@Base+0x2a>
  405ef5:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

0000000000405f00 <test_enums@@Base>:
  405f00:	xor    eax,eax
  405f02:	ret    
  405f03:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  405f0e:	xchg   ax,ax

0000000000405f10 <test_type_aliases@@Base>:
  405f10:	push   r13
  405f12:	push   r12
  405f14:	push   rbp
  405f15:	push   rbx
  405f16:	mov    rbx,rdi
  405f19:	sub    rsp,0x18
  405f1d:	mov    rax,QWORD PTR fs:0x28
  405f26:	mov    QWORD PTR [rsp+0x8],rax
  405f2b:	xor    eax,eax
  405f2d:	call   40faf0 <flatcc_builder_reset@@Base>
  405f32:	xor    edx,edx
  405f34:	xor    esi,esi
  405f36:	mov    r9d,0xffffffff
  405f3c:	mov    r8d,0x1
  405f42:	mov    ecx,0x1
  405f47:	mov    rdi,rbx
  405f4a:	call   411af0 <flatcc_builder_create_vector@@Base>
  405f4f:	xor    edx,edx
  405f51:	xor    esi,esi
  405f53:	mov    r9d,0x1fffffff
  405f59:	mov    r8d,0x8
  405f5f:	mov    ecx,0x8
  405f64:	mov    rdi,rbx
  405f67:	mov    ebp,eax
  405f69:	call   411af0 <flatcc_builder_create_vector@@Base>
  405f6e:	lea    rsi,[rip+0x101c6]        # 41613b <_IO_stdin_used@@Base+0x13b>
  405f75:	xor    ecx,ecx
  405f77:	xor    edx,edx
  405f79:	mov    rdi,rbx
  405f7c:	mov    r12d,eax
  405f7f:	call   410330 <flatcc_builder_start_buffer@@Base>
  405f84:	test   eax,eax
  405f86:	je     406168 <test_type_aliases@@Base+0x258>
  405f8c:	mov    rdi,rbx
  405f8f:	mov    rsi,rsp
  405f92:	call   413000 <flatcc_builder_finalize_aligned_buffer@@Base>
  405f97:	mov    rsi,QWORD PTR [rsp]
  405f9b:	lea    rcx,[rip+0xffffffffffffedae]        # 404d50 <_start@@Base+0x500>
  405fa2:	lea    rdx,[rip+0x10192]        # 41613b <_IO_stdin_used@@Base+0x13b>
  405fa9:	mov    rdi,rax
  405fac:	mov    rbx,rax
  405faf:	call   414720 <flatcc_verify_table_as_root@@Base>
  405fb4:	test   eax,eax
  405fb6:	mov    ebp,eax
  405fb8:	jne    406370 <test_type_aliases@@Base+0x460>
  405fbe:	test   rbx,rbx
  405fc1:	je     405fcc <test_type_aliases@@Base+0xbc>
  405fc3:	cmp    DWORD PTR [rbx+0x4],0x534e4f4d
  405fca:	je     405ff0 <test_type_aliases@@Base+0xe0>
  405fcc:	lea    rcx,[rip+0x1351d]        # 4194f0 <_IO_stdin_used@@Base+0x34f0>
  405fd3:	lea    rsi,[rip+0x109fe]        # 4169d8 <_IO_stdin_used@@Base+0x9d8>
  405fda:	lea    rdi,[rip+0x10a77]        # 416a58 <_IO_stdin_used@@Base+0xa58>
  405fe1:	mov    edx,0x2ed
  405fe6:	call   404090 <__assert_fail@plt>
  405feb:	nop    DWORD PTR [rax+rax*1+0x0]
  405ff0:	mov    eax,DWORD PTR [rbx]
  405ff2:	add    rax,rbx
  405ff5:	je     405fcc <test_type_aliases@@Base+0xbc>
  405ff7:	movsxd rdx,DWORD PTR [rax]
  405ffa:	mov    rcx,rax
  405ffd:	sub    rcx,rdx
  406000:	movzx  edx,WORD PTR [rcx]
  406003:	cmp    dx,0x5
  406007:	jbe    406120 <test_type_aliases@@Base+0x210>
  40600d:	movzx  esi,WORD PTR [rcx+0x4]
  406011:	test   si,si
  406014:	je     406120 <test_type_aliases@@Base+0x210>
  40601a:	cmp    BYTE PTR [rax+rsi*1],0x80
  40601e:	jne    406120 <test_type_aliases@@Base+0x210>
  406024:	cmp    dx,0x9
  406028:	jbe    406120 <test_type_aliases@@Base+0x210>
  40602e:	movzx  esi,WORD PTR [rcx+0x8]
  406032:	test   si,si
  406035:	je     406120 <test_type_aliases@@Base+0x210>
  40603b:	cmp    WORD PTR [rax+rsi*1],0x8000
  406041:	jne    406120 <test_type_aliases@@Base+0x210>
  406047:	cmp    dx,0xd
  40604b:	jbe    406120 <test_type_aliases@@Base+0x210>
  406051:	movzx  esi,WORD PTR [rcx+0xc]
  406055:	test   si,si
  406058:	je     406120 <test_type_aliases@@Base+0x210>
  40605e:	cmp    DWORD PTR [rax+rsi*1],0x80000000
  406065:	jne    406120 <test_type_aliases@@Base+0x210>
  40606b:	cmp    dx,0x11
  40606f:	jbe    406120 <test_type_aliases@@Base+0x210>
  406075:	movzx  esi,WORD PTR [rcx+0x10]
  406079:	test   si,si
  40607c:	je     406120 <test_type_aliases@@Base+0x210>
  406082:	movabs rdi,0x8000000000000000
  40608c:	cmp    QWORD PTR [rax+rsi*1],rdi
  406090:	jne    406120 <test_type_aliases@@Base+0x210>
  406096:	movzx  esi,WORD PTR [rcx+0x6]
  40609a:	test   si,si
  40609d:	je     406120 <test_type_aliases@@Base+0x210>
  4060a3:	cmp    BYTE PTR [rax+rsi*1],0xff
  4060a7:	jne    406120 <test_type_aliases@@Base+0x210>
  4060a9:	movzx  esi,WORD PTR [rcx+0xa]
  4060ad:	test   si,si
  4060b0:	je     406120 <test_type_aliases@@Base+0x210>
  4060b2:	cmp    WORD PTR [rax+rsi*1],0xffff
  4060b7:	jne    406120 <test_type_aliases@@Base+0x210>
  4060b9:	movzx  esi,WORD PTR [rcx+0xe]
  4060bd:	test   si,si
  4060c0:	je     406120 <test_type_aliases@@Base+0x210>
  4060c2:	cmp    DWORD PTR [rax+rsi*1],0xffffffff
  4060c6:	jne    406120 <test_type_aliases@@Base+0x210>
  4060c8:	cmp    dx,0x13
  4060cc:	jbe    406120 <test_type_aliases@@Base+0x210>
  4060ce:	movzx  esi,WORD PTR [rcx+0x12]
  4060d2:	test   si,si
  4060d5:	je     406120 <test_type_aliases@@Base+0x210>
  4060d7:	cmp    QWORD PTR [rax+rsi*1],0xffffffffffffffff
  4060dc:	jne    406120 <test_type_aliases@@Base+0x210>
  4060de:	cmp    dx,0x15
  4060e2:	jbe    406120 <test_type_aliases@@Base+0x210>
  4060e4:	movzx  esi,WORD PTR [rcx+0x14]
  4060e8:	test   si,si
  4060eb:	je     406120 <test_type_aliases@@Base+0x210>
  4060ed:	vmovss xmm0,DWORD PTR [rax+rsi*1]
  4060f2:	vucomiss xmm0,DWORD PTR [rip+0x1353e]        # 419638 <_IO_stdin_used@@Base+0x3638>
  4060fa:	jp     406120 <test_type_aliases@@Base+0x210>
  4060fc:	jne    406120 <test_type_aliases@@Base+0x210>
  4060fe:	cmp    dx,0x17
  406102:	jbe    406120 <test_type_aliases@@Base+0x210>
  406104:	movzx  edx,WORD PTR [rcx+0x16]
  406108:	test   dx,dx
  40610b:	je     406120 <test_type_aliases@@Base+0x210>
  40610d:	vmovsd xmm0,QWORD PTR [rip+0x1350b]        # 419620 <_IO_stdin_used@@Base+0x3620>
  406115:	vucomisd xmm0,QWORD PTR [rax+rdx*1]
  40611a:	jp     406120 <test_type_aliases@@Base+0x210>
  40611c:	je     406138 <test_type_aliases@@Base+0x228>
  40611e:	xchg   ax,ax
  406120:	lea    rsi,[rip+0x10df1]        # 416f18 <_IO_stdin_used@@Base+0xf18>
  406127:	mov    edi,0x1
  40612c:	xor    eax,eax
  40612e:	mov    ebp,0xffffffff
  406133:	call   404110 <__printf_chk@plt>
  406138:	mov    rdi,rbx
  40613b:	call   413150 <flatcc_builder_aligned_free@@Base>
  406140:	mov    rcx,QWORD PTR [rsp+0x8]
  406145:	xor    rcx,QWORD PTR fs:0x28
  40614e:	mov    eax,ebp
  406150:	jne    4063af <test_type_aliases@@Base+0x49f>
  406156:	add    rsp,0x18
  40615a:	pop    rbx
  40615b:	pop    rbp
  40615c:	pop    r12
  40615e:	pop    r13
  406160:	ret    
  406161:	nop    DWORD PTR [rax+0x0]
  406168:	mov    esi,0xc
  40616d:	mov    rdi,rbx
  406170:	call   410fa0 <flatcc_builder_start_table@@Base>
  406175:	test   eax,eax
  406177:	jne    406360 <test_type_aliases@@Base+0x450>
  40617d:	mov    ecx,0x8
  406182:	mov    edx,0x8
  406187:	mov    esi,0x6
  40618c:	mov    rdi,rbx
  40618f:	call   412840 <flatcc_builder_table_add@@Base>
  406194:	test   rax,rax
  406197:	je     406360 <test_type_aliases@@Base+0x450>
  40619d:	movabs rdx,0x8000000000000000
  4061a7:	mov    ecx,0x8
  4061ac:	mov    esi,0x7
  4061b1:	mov    QWORD PTR [rax],rdx
  4061b4:	mov    rdi,rbx
  4061b7:	mov    edx,0x8
  4061bc:	call   412840 <flatcc_builder_table_add@@Base>
  4061c1:	test   rax,rax
  4061c4:	je     406360 <test_type_aliases@@Base+0x450>
  4061ca:	mov    r13,0xffffffffffffffff
  4061d1:	mov    ecx,0x8
  4061d6:	mov    edx,0x8
  4061db:	mov    QWORD PTR [rax],r13
  4061de:	mov    esi,0x9
  4061e3:	mov    rdi,rbx
  4061e6:	call   412840 <flatcc_builder_table_add@@Base>
  4061eb:	test   rax,rax
  4061ee:	je     406360 <test_type_aliases@@Base+0x450>
  4061f4:	vmovsd xmm1,QWORD PTR [rip+0x13424]        # 419620 <_IO_stdin_used@@Base+0x3620>
  4061fc:	mov    ecx,0x4
  406201:	mov    edx,0x4
  406206:	mov    esi,0x4
  40620b:	mov    rdi,rbx
  40620e:	vmovsd QWORD PTR [rax],xmm1
  406212:	call   412840 <flatcc_builder_table_add@@Base>
  406217:	test   rax,rax
  40621a:	je     406360 <test_type_aliases@@Base+0x450>
  406220:	mov    DWORD PTR [rax],0x80000000
  406226:	mov    ecx,0x4
  40622b:	mov    edx,0x4
  406230:	mov    esi,0x5
  406235:	mov    rdi,rbx
  406238:	call   412840 <flatcc_builder_table_add@@Base>
  40623d:	test   rax,rax
  406240:	je     406360 <test_type_aliases@@Base+0x450>
  406246:	mov    DWORD PTR [rax],r13d
  406249:	mov    ecx,0x4
  40624e:	mov    edx,0x4
  406253:	mov    esi,0x8
  406258:	mov    rdi,rbx
  40625b:	call   412840 <flatcc_builder_table_add@@Base>
  406260:	test   rax,rax
  406263:	je     406360 <test_type_aliases@@Base+0x450>
  406269:	test   ebp,ebp
  40626b:	mov    DWORD PTR [rax],0x40133333
  406271:	je     406360 <test_type_aliases@@Base+0x450>
  406277:	mov    esi,0xa
  40627c:	mov    rdi,rbx
  40627f:	call   412a10 <flatcc_builder_table_add_offset@@Base>
  406284:	test   rax,rax
  406287:	je     406360 <test_type_aliases@@Base+0x450>
  40628d:	test   r12d,r12d
  406290:	mov    DWORD PTR [rax],ebp
  406292:	je     406360 <test_type_aliases@@Base+0x450>
  406298:	mov    esi,0xb
  40629d:	mov    rdi,rbx
  4062a0:	call   412a10 <flatcc_builder_table_add_offset@@Base>
  4062a5:	test   rax,rax
  4062a8:	je     406360 <test_type_aliases@@Base+0x450>
  4062ae:	mov    DWORD PTR [rax],r12d
  4062b1:	mov    ecx,0x2
  4062b6:	mov    edx,0x2
  4062bb:	mov    esi,0x2
  4062c0:	mov    rdi,rbx
  4062c3:	call   412840 <flatcc_builder_table_add@@Base>
  4062c8:	test   rax,rax
  4062cb:	je     406360 <test_type_aliases@@Base+0x450>
  4062d1:	mov    edx,0xffff8000
  4062d6:	mov    ecx,0x2
  4062db:	mov    esi,0x3
  4062e0:	mov    WORD PTR [rax],dx
  4062e3:	mov    rdi,rbx
  4062e6:	mov    edx,0x2
  4062eb:	call   412840 <flatcc_builder_table_add@@Base>
  4062f0:	test   rax,rax
  4062f3:	je     406360 <test_type_aliases@@Base+0x450>
  4062f5:	xor    esi,esi
  4062f7:	mov    WORD PTR [rax],0xffff
  4062fc:	mov    ecx,0x1
  406301:	mov    edx,0x1
  406306:	mov    rdi,rbx
  406309:	call   412840 <flatcc_builder_table_add@@Base>
  40630e:	test   rax,rax
  406311:	je     406360 <test_type_aliases@@Base+0x450>
  406313:	mov    BYTE PTR [rax],0x80
  406316:	mov    ecx,0x1
  40631b:	mov    edx,0x1
  406320:	mov    esi,0x1
  406325:	mov    rdi,rbx
  406328:	call   412840 <flatcc_builder_table_add@@Base>
  40632d:	test   rax,rax
  406330:	je     406360 <test_type_aliases@@Base+0x450>
  406332:	lea    rsi,[rip+0x132b5]        # 4195ee <_IO_stdin_used@@Base+0x35ee>
  406339:	xor    edx,edx
  40633b:	mov    BYTE PTR [rax],0xff
  40633e:	mov    rdi,rbx
  406341:	call   4118e0 <flatcc_builder_check_required@@Base>
  406346:	test   eax,eax
  406348:	je     4063b4 <test_type_aliases@@Base+0x4a4>
  40634a:	mov    rdi,rbx
  40634d:	call   411960 <flatcc_builder_end_table@@Base>
  406352:	mov    esi,eax
  406354:	jmp    406362 <test_type_aliases@@Base+0x452>
  406356:	nop    WORD PTR cs:[rax+rax*1+0x0]
  406360:	xor    esi,esi
  406362:	mov    rdi,rbx
  406365:	call   410410 <flatcc_builder_end_buffer@@Base>
  40636a:	jmp    405f8c <test_type_aliases@@Base+0x7c>
  40636f:	nop
  406370:	mov    rax,QWORD PTR [rip+0x18c81]        # 41eff8 <stderr@GLIBC_2.2.5>
  406377:	mov    rdx,QWORD PTR [rsp]
  40637b:	lea    rdi,[rip+0xfdbe]        # 416140 <_IO_stdin_used@@Base+0x140>
  406382:	mov    rsi,rbx
  406385:	mov    rcx,QWORD PTR [rax]
  406388:	call   4049a0 <_start@@Base+0x150>
  40638d:	mov    edi,ebp
  40638f:	call   413890 <flatcc_verify_error_string@@Base>
  406394:	lea    rsi,[rip+0x10b4d]        # 416ee8 <_IO_stdin_used@@Base+0xee8>
  40639b:	mov    rdx,rax
  40639e:	mov    edi,0x1
  4063a3:	xor    eax,eax
  4063a5:	call   404110 <__printf_chk@plt>
  4063aa:	jmp    406138 <test_type_aliases@@Base+0x228>
  4063af:	call   404070 <__stack_chk_fail@plt>
  4063b4:	lea    rcx,[rip+0x13155]        # 419510 <_IO_stdin_used@@Base+0x3510>
  4063bb:	lea    rsi,[rip+0x107c6]        # 416b88 <_IO_stdin_used@@Base+0xb88>
  4063c2:	lea    rdi,[rip+0x10a6f]        # 416e38 <_IO_stdin_used@@Base+0xe38>
  4063c9:	mov    edx,0xed
  4063ce:	call   404090 <__assert_fail@plt>
  4063d3:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4063de:	xchg   ax,ax

00000000004063e0 <test_empty_monster@@Base>:
  4063e0:	push   rbp
  4063e1:	push   rbx
  4063e2:	mov    rbx,rdi
  4063e5:	sub    rsp,0x18
  4063e9:	mov    rax,QWORD PTR fs:0x28
  4063f2:	mov    QWORD PTR [rsp+0x8],rax
  4063f7:	xor    eax,eax
  4063f9:	call   40faf0 <flatcc_builder_reset@@Base>
  4063fe:	lea    rsi,[rip+0xfd36]        # 41613b <_IO_stdin_used@@Base+0x13b>
  406405:	xor    ecx,ecx
  406407:	xor    edx,edx
  406409:	mov    rdi,rbx
  40640c:	call   410330 <flatcc_builder_start_buffer@@Base>
  406411:	mov    esi,0x24
  406416:	mov    rdi,rbx
  406419:	call   410fa0 <flatcc_builder_start_table@@Base>
  40641e:	lea    rsi,[rip+0xfd2e]        # 416153 <_IO_stdin_used@@Base+0x153>
  406425:	mov    rdi,rbx
  406428:	call   4126b0 <flatcc_builder_create_string_str@@Base>
  40642d:	test   eax,eax
  40642f:	je     406447 <test_empty_monster@@Base+0x67>
  406431:	mov    esi,0x3
  406436:	mov    rdi,rbx
  406439:	mov    ebp,eax
  40643b:	call   412a10 <flatcc_builder_table_add_offset@@Base>
  406440:	test   rax,rax
  406443:	je     406447 <test_empty_monster@@Base+0x67>
  406445:	mov    DWORD PTR [rax],ebp
  406447:	lea    rsi,[rip+0x131a2]        # 4195f0 <_IO_stdin_used@@Base+0x35f0>
  40644e:	mov    edx,0x1
  406453:	mov    rdi,rbx
  406456:	call   4118e0 <flatcc_builder_check_required@@Base>
  40645b:	test   eax,eax
  40645d:	je     40655f <test_empty_monster@@Base+0x17f>
  406463:	mov    rdi,rbx
  406466:	call   411960 <flatcc_builder_end_table@@Base>
  40646b:	mov    rdi,rbx
  40646e:	mov    esi,eax
  406470:	call   410410 <flatcc_builder_end_buffer@@Base>
  406475:	mov    rdi,rbx
  406478:	mov    rsi,rsp
  40647b:	call   413000 <flatcc_builder_finalize_aligned_buffer@@Base>
  406480:	mov    rbx,rax
  406483:	mov    rax,QWORD PTR [rip+0x18b6e]        # 41eff8 <stderr@GLIBC_2.2.5>
  40648a:	mov    rdx,QWORD PTR [rsp]
  40648e:	lea    rdi,[rip+0xfcc8]        # 41615d <_IO_stdin_used@@Base+0x15d>
  406495:	mov    rsi,rbx
  406498:	mov    rcx,QWORD PTR [rax]
  40649b:	call   4049a0 <_start@@Base+0x150>
  4064a0:	mov    rdi,rbx
  4064a3:	call   405e20 <verify_empty_monster@@Base>
  4064a8:	test   eax,eax
  4064aa:	mov    ebp,eax
  4064ac:	je     4064d8 <test_empty_monster@@Base+0xf8>
  4064ae:	mov    rdi,rbx
  4064b1:	call   413150 <flatcc_builder_aligned_free@@Base>
  4064b6:	mov    rcx,QWORD PTR [rsp+0x8]
  4064bb:	xor    rcx,QWORD PTR fs:0x28
  4064c4:	mov    eax,ebp
  4064c6:	jne    406564 <test_empty_monster@@Base+0x184>
  4064cc:	add    rsp,0x18
  4064d0:	pop    rbx
  4064d1:	pop    rbp
  4064d2:	ret    
  4064d3:	nop    DWORD PTR [rax+rax*1+0x0]
  4064d8:	mov    rsi,QWORD PTR [rsp]
  4064dc:	lea    rcx,[rip+0xffffffffffffeb7d]        # 405060 <_start@@Base+0x810>
  4064e3:	lea    rdx,[rip+0xfc51]        # 41613b <_IO_stdin_used@@Base+0x13b>
  4064ea:	mov    rdi,rbx
  4064ed:	call   414720 <flatcc_verify_table_as_root@@Base>
  4064f2:	test   eax,eax
  4064f4:	mov    ebp,eax
  4064f6:	jne    406538 <test_empty_monster@@Base+0x158>
  4064f8:	mov    rax,QWORD PTR [rsp]
  4064fc:	lea    rcx,[rip+0xffffffffffffeb5d]        # 405060 <_start@@Base+0x810>
  406503:	lea    rdx,[rip+0xfc31]        # 41613b <_IO_stdin_used@@Base+0x13b>
  40650a:	mov    rdi,rbx
  40650d:	lea    rsi,[rax-0x1]
  406511:	call   414720 <flatcc_verify_table_as_root@@Base>
  406516:	test   eax,eax
  406518:	jne    4064ae <test_empty_monster@@Base+0xce>
  40651a:	lea    rsi,[rip+0x10a4f]        # 416f70 <_IO_stdin_used@@Base+0xf70>
  406521:	mov    edi,0x1
  406526:	mov    ebp,0xffffffff
  40652b:	call   404110 <__printf_chk@plt>
  406530:	jmp    4064b6 <test_empty_monster@@Base+0xd6>
  406532:	nop    WORD PTR [rax+rax*1+0x0]
  406538:	mov    edi,eax
  40653a:	mov    ebp,0xffffffff
  40653f:	call   413890 <flatcc_verify_error_string@@Base>
  406544:	lea    rsi,[rip+0x109fd]        # 416f48 <_IO_stdin_used@@Base+0xf48>
  40654b:	mov    rdx,rax
  40654e:	mov    edi,0x1
  406553:	xor    eax,eax
  406555:	call   404110 <__printf_chk@plt>
  40655a:	jmp    4064b6 <test_empty_monster@@Base+0xd6>
  40655f:	call   4045a4 <posix_memalign@plt+0x474>
  406564:	call   404070 <__stack_chk_fail@plt>
  406569:	nop    DWORD PTR [rax+0x0]

0000000000406570 <test_typed_empty_monster@@Base>:
  406570:	push   rbp
  406571:	push   rbx
  406572:	mov    rbx,rdi
  406575:	sub    rsp,0x28
  406579:	mov    rax,QWORD PTR fs:0x28
  406582:	mov    QWORD PTR [rsp+0x18],rax
  406587:	xor    eax,eax
  406589:	mov    DWORD PTR [rsp+0x14],0x0
  406591:	call   40faf0 <flatcc_builder_reset@@Base>
  406596:	lea    rsi,[rip+0xfbeb]        # 416188 <_IO_stdin_used@@Base+0x188>
  40659d:	xor    ecx,ecx
  40659f:	xor    edx,edx
  4065a1:	mov    rdi,rbx
  4065a4:	call   410330 <flatcc_builder_start_buffer@@Base>
  4065a9:	mov    esi,0x24
  4065ae:	mov    rdi,rbx
  4065b1:	call   410fa0 <flatcc_builder_start_table@@Base>
  4065b6:	lea    rsi,[rip+0xfb96]        # 416153 <_IO_stdin_used@@Base+0x153>
  4065bd:	mov    rdi,rbx
  4065c0:	call   4126b0 <flatcc_builder_create_string_str@@Base>
  4065c5:	test   eax,eax
  4065c7:	je     4065df <test_typed_empty_monster@@Base+0x6f>
  4065c9:	mov    esi,0x3
  4065ce:	mov    rdi,rbx
  4065d1:	mov    ebp,eax
  4065d3:	call   412a10 <flatcc_builder_table_add_offset@@Base>
  4065d8:	test   rax,rax
  4065db:	je     4065df <test_typed_empty_monster@@Base+0x6f>
  4065dd:	mov    DWORD PTR [rax],ebp
  4065df:	lea    rsi,[rip+0x1300a]        # 4195f0 <_IO_stdin_used@@Base+0x35f0>
  4065e6:	mov    edx,0x1
  4065eb:	mov    rdi,rbx
  4065ee:	call   4118e0 <flatcc_builder_check_required@@Base>
  4065f3:	test   eax,eax
  4065f5:	je     4068a9 <test_typed_empty_monster@@Base+0x339>
  4065fb:	mov    rdi,rbx
  4065fe:	call   411960 <flatcc_builder_end_table@@Base>
  406603:	mov    rdi,rbx
  406606:	mov    esi,eax
  406608:	call   410410 <flatcc_builder_end_buffer@@Base>
  40660d:	lea    rsi,[rsp+0x8]
  406612:	mov    rdi,rbx
  406615:	call   413000 <flatcc_builder_finalize_aligned_buffer@@Base>
  40661a:	mov    rbx,rax
  40661d:	mov    rax,QWORD PTR [rip+0x189d4]        # 41eff8 <stderr@GLIBC_2.2.5>
  406624:	mov    rdx,QWORD PTR [rsp+0x8]
  406629:	lea    rdi,[rip+0xfb5d]        # 41618d <_IO_stdin_used@@Base+0x18d>
  406630:	mov    rsi,rbx
  406633:	mov    rcx,QWORD PTR [rax]
  406636:	call   4049a0 <_start@@Base+0x150>
  40663b:	mov    esi,DWORD PTR [rbx+0x4]
  40663e:	lea    rcx,[rip+0xfb2c]        # 416171 <_IO_stdin_used@@Base+0x171>
  406645:	mov    edx,0x811c9dc5
  40664a:	mov    eax,0x4d
  40664f:	nop
  406650:	xor    eax,edx
  406652:	add    rcx,0x1
  406656:	imul   edx,eax,0x1000193
  40665c:	movsx  eax,BYTE PTR [rcx]
  40665f:	test   al,al
  406661:	jne    406650 <test_typed_empty_monster@@Base+0xe0>
  406663:	test   edx,edx
  406665:	je     4067b8 <test_typed_empty_monster@@Base+0x248>
  40666b:	cmp    edx,esi
  40666d:	jne    406868 <test_typed_empty_monster@@Base+0x2f8>
  406673:	cmp    edx,0x330ef481
  406679:	jne    4067c4 <test_typed_empty_monster@@Base+0x254>
  40667f:	mov    rdi,rbx
  406682:	call   405e20 <verify_empty_monster@@Base>
  406687:	test   eax,eax
  406689:	je     406887 <test_typed_empty_monster@@Base+0x317>
  40668f:	mov    rsi,QWORD PTR [rsp+0x8]
  406694:	lea    rcx,[rip+0xffffffffffffe9c5]        # 405060 <_start@@Base+0x810>
  40669b:	lea    rdx,[rip+0xfae6]        # 416188 <_IO_stdin_used@@Base+0x188>
  4066a2:	mov    rdi,rbx
  4066a5:	call   414720 <flatcc_verify_table_as_root@@Base>
  4066aa:	test   eax,eax
  4066ac:	mov    ebp,eax
  4066ae:	jne    406808 <test_typed_empty_monster@@Base+0x298>
  4066b4:	mov    rsi,QWORD PTR [rsp+0x8]
  4066b9:	lea    rcx,[rip+0xffffffffffffe9a0]        # 405060 <_start@@Base+0x810>
  4066c0:	lea    rdx,[rip+0xfac1]        # 416188 <_IO_stdin_used@@Base+0x188>
  4066c7:	mov    rdi,rbx
  4066ca:	call   414720 <flatcc_verify_table_as_root@@Base>
  4066cf:	test   eax,eax
  4066d1:	mov    ebp,eax
  4066d3:	jne    406808 <test_typed_empty_monster@@Base+0x298>
  4066d9:	mov    rsi,QWORD PTR [rsp+0x8]
  4066de:	lea    rcx,[rip+0xffffffffffffe97b]        # 405060 <_start@@Base+0x810>
  4066e5:	mov    edx,0x330ef481
  4066ea:	mov    rdi,rbx
  4066ed:	call   414870 <flatcc_verify_table_as_typed_root@@Base>
  4066f2:	mov    ebp,eax
  4066f4:	lea    rcx,[rip+0xfa76]        # 416171 <_IO_stdin_used@@Base+0x171>
  4066fb:	mov    edx,0x811c9dc5
  406700:	test   ebp,ebp
  406702:	mov    eax,0x4d
  406707:	jne    406846 <test_typed_empty_monster@@Base+0x2d6>
  40670d:	nop    DWORD PTR [rax]
  406710:	xor    eax,edx
  406712:	add    rcx,0x1
  406716:	imul   edx,eax,0x1000193
  40671c:	movsx  eax,BYTE PTR [rcx]
  40671f:	test   al,al
  406721:	jne    406710 <test_typed_empty_monster@@Base+0x1a0>
  406723:	mov    rsi,QWORD PTR [rsp+0x8]
  406728:	test   edx,edx
  40672a:	mov    eax,0x811c9dc5
  40672f:	lea    rcx,[rip+0xffffffffffffe92a]        # 405060 <_start@@Base+0x810>
  406736:	cmove  edx,eax
  406739:	mov    rdi,rbx
  40673c:	call   414870 <flatcc_verify_table_as_typed_root@@Base>
  406741:	test   eax,eax
  406743:	mov    ebp,eax
  406745:	jne    406827 <test_typed_empty_monster@@Base+0x2b7>
  40674b:	mov    rsi,QWORD PTR [rsp+0x8]
  406750:	lea    rdx,[rsp+0x14]
  406755:	lea    rcx,[rip+0xffffffffffffe904]        # 405060 <_start@@Base+0x810>
  40675c:	mov    rdi,rbx
  40675f:	mov    BYTE PTR [rsp+0x14],0x81
  406764:	mov    BYTE PTR [rsp+0x15],0xf4
  406769:	mov    BYTE PTR [rsp+0x16],0xe
  40676e:	mov    BYTE PTR [rsp+0x17],0x33
  406773:	call   414720 <flatcc_verify_table_as_root@@Base>
  406778:	test   eax,eax
  40677a:	mov    ebp,eax
  40677c:	jne    406808 <test_typed_empty_monster@@Base+0x298>
  406782:	mov    rsi,QWORD PTR [rsp+0x8]
  406787:	lea    rcx,[rip+0xffffffffffffe8d2]        # 405060 <_start@@Base+0x810>
  40678e:	lea    rdx,[rip+0xf9a6]        # 41613b <_IO_stdin_used@@Base+0x13b>
  406795:	mov    rdi,rbx
  406798:	call   414720 <flatcc_verify_table_as_root@@Base>
  40679d:	test   eax,eax
  40679f:	jne    4067dc <test_typed_empty_monster@@Base+0x26c>
  4067a1:	lea    rsi,[rip+0x10918]        # 4170c0 <_IO_stdin_used@@Base+0x10c0>
  4067a8:	mov    edi,0x1
  4067ad:	call   404110 <__printf_chk@plt>
  4067b2:	jmp    4067dc <test_typed_empty_monster@@Base+0x26c>
  4067b4:	nop    DWORD PTR [rax+0x0]
  4067b8:	cmp    esi,0x811c9dc5
  4067be:	jne    406868 <test_typed_empty_monster@@Base+0x2f8>
  4067c4:	lea    rsi,[rip+0x10945]        # 417110 <_IO_stdin_used@@Base+0x1110>
  4067cb:	mov    edi,0x1
  4067d0:	xor    eax,eax
  4067d2:	mov    ebp,0xffffffff
  4067d7:	call   404110 <__printf_chk@plt>
  4067dc:	mov    rdi,rbx
  4067df:	call   413150 <flatcc_builder_aligned_free@@Base>
  4067e4:	mov    rsi,QWORD PTR [rsp+0x18]
  4067e9:	xor    rsi,QWORD PTR fs:0x28
  4067f2:	mov    eax,ebp
  4067f4:	jne    4068a4 <test_typed_empty_monster@@Base+0x334>
  4067fa:	add    rsp,0x28
  4067fe:	pop    rbx
  4067ff:	pop    rbp
  406800:	ret    
  406801:	nop    DWORD PTR [rax+0x0]
  406808:	mov    edi,ebp
  40680a:	call   413890 <flatcc_verify_error_string@@Base>
  40680f:	lea    rsi,[rip+0x10802]        # 417018 <_IO_stdin_used@@Base+0x1018>
  406816:	mov    rdx,rax
  406819:	mov    edi,0x1
  40681e:	xor    eax,eax
  406820:	call   404110 <__printf_chk@plt>
  406825:	jmp    4067dc <test_typed_empty_monster@@Base+0x26c>
  406827:	mov    edi,eax
  406829:	call   413890 <flatcc_verify_error_string@@Base>
  40682e:	lea    rsi,[rip+0x1084b]        # 417080 <_IO_stdin_used@@Base+0x1080>
  406835:	mov    rdx,rax
  406838:	mov    edi,0x1
  40683d:	xor    eax,eax
  40683f:	call   404110 <__printf_chk@plt>
  406844:	jmp    4067dc <test_typed_empty_monster@@Base+0x26c>
  406846:	mov    edi,ebp
  406848:	call   413890 <flatcc_verify_error_string@@Base>
  40684d:	lea    rsi,[rip+0x107f4]        # 417048 <_IO_stdin_used@@Base+0x1048>
  406854:	mov    rdx,rax
  406857:	mov    edi,0x1
  40685c:	xor    eax,eax
  40685e:	call   404110 <__printf_chk@plt>
  406863:	jmp    4067dc <test_typed_empty_monster@@Base+0x26c>
  406868:	mov    edx,esi
  40686a:	lea    rsi,[rip+0x1072f]        # 416fa0 <_IO_stdin_used@@Base+0xfa0>
  406871:	mov    edi,0x1
  406876:	xor    eax,eax
  406878:	mov    ebp,0xffffffff
  40687d:	call   404110 <__printf_chk@plt>
  406882:	jmp    4067dc <test_typed_empty_monster@@Base+0x26c>
  406887:	lea    rsi,[rip+0x1074a]        # 416fd8 <_IO_stdin_used@@Base+0xfd8>
  40688e:	mov    edi,0x1
  406893:	xor    eax,eax
  406895:	mov    ebp,0xffffffff
  40689a:	call   404110 <__printf_chk@plt>
  40689f:	jmp    4067dc <test_typed_empty_monster@@Base+0x26c>
  4068a4:	call   404070 <__stack_chk_fail@plt>
  4068a9:	call   4045a4 <posix_memalign@plt+0x474>
  4068ae:	xchg   ax,ax

00000000004068b0 <verify_table_with_emptystruct@@Base>:
  4068b0:	sub    rsp,0x8
  4068b4:	test   rdi,rdi
  4068b7:	je     4068c2 <verify_table_with_emptystruct@@Base+0x12>
  4068b9:	cmp    DWORD PTR [rdi+0x4],0x534e4f4d
  4068c0:	je     4068e0 <verify_table_with_emptystruct@@Base+0x30>
  4068c2:	lea    rsi,[rip+0x10877]        # 417140 <_IO_stdin_used@@Base+0x1140>
  4068c9:	mov    edi,0x1
  4068ce:	xor    eax,eax
  4068d0:	call   404110 <__printf_chk@plt>
  4068d5:	mov    eax,0xffffffff
  4068da:	add    rsp,0x8
  4068de:	ret    
  4068df:	nop
  4068e0:	mov    eax,DWORD PTR [rdi]
  4068e2:	add    rdi,rax
  4068e5:	je     4068c2 <verify_table_with_emptystruct@@Base+0x12>
  4068e7:	movsxd rax,DWORD PTR [rdi]
  4068ea:	mov    rdx,rdi
  4068ed:	sub    rdx,rax
  4068f0:	cmp    WORD PTR [rdx],0x5
  4068f4:	ja     406910 <verify_table_with_emptystruct@@Base+0x60>
  4068f6:	lea    rsi,[rip+0xf8aa]        # 4161a7 <_IO_stdin_used@@Base+0x1a7>
  4068fd:	mov    edi,0x1
  406902:	xor    eax,eax
  406904:	call   404110 <__printf_chk@plt>
  406909:	mov    eax,0xffffffff
  40690e:	jmp    4068da <verify_table_with_emptystruct@@Base+0x2a>
  406910:	movzx  eax,WORD PTR [rdx+0x4]
  406914:	test   ax,ax
  406917:	je     4068f6 <verify_table_with_emptystruct@@Base+0x46>
  406919:	add    rdi,rax
  40691c:	je     4068f6 <verify_table_with_emptystruct@@Base+0x46>
  40691e:	xor    eax,eax
  406920:	add    rsp,0x8
  406924:	ret    
  406925:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

0000000000406930 <test_table_with_emptystruct@@Base>:
  406930:	push   rbp
  406931:	push   rbx
  406932:	mov    rbx,rdi
  406935:	sub    rsp,0x18
  406939:	mov    rax,QWORD PTR fs:0x28
  406942:	mov    QWORD PTR [rsp+0x8],rax
  406947:	xor    eax,eax
  406949:	call   40faf0 <flatcc_builder_reset@@Base>
  40694e:	lea    rsi,[rip+0xf7e6]        # 41613b <_IO_stdin_used@@Base+0x13b>
  406955:	xor    ecx,ecx
  406957:	xor    edx,edx
  406959:	mov    rdi,rbx
  40695c:	call   410330 <flatcc_builder_start_buffer@@Base>
  406961:	test   eax,eax
  406963:	je     4069c0 <test_table_with_emptystruct@@Base+0x90>
  406965:	mov    rdi,rbx
  406968:	mov    rsi,rsp
  40696b:	call   413000 <flatcc_builder_finalize_aligned_buffer@@Base>
  406970:	mov    rbx,rax
  406973:	mov    rax,QWORD PTR [rip+0x1867e]        # 41eff8 <stderr@GLIBC_2.2.5>
  40697a:	mov    rdx,QWORD PTR [rsp]
  40697e:	lea    rdi,[rip+0xf849]        # 4161ce <_IO_stdin_used@@Base+0x1ce>
  406985:	mov    rsi,rbx
  406988:	mov    rcx,QWORD PTR [rax]
  40698b:	call   4049a0 <_start@@Base+0x150>
  406990:	mov    rdi,rbx
  406993:	call   4068b0 <verify_table_with_emptystruct@@Base>
  406998:	mov    rdi,rbx
  40699b:	mov    ebp,eax
  40699d:	call   413150 <flatcc_builder_aligned_free@@Base>
  4069a2:	mov    rcx,QWORD PTR [rsp+0x8]
  4069a7:	xor    rcx,QWORD PTR fs:0x28
  4069b0:	mov    eax,ebp
  4069b2:	jne    406a17 <test_table_with_emptystruct@@Base+0xe7>
  4069b4:	add    rsp,0x18
  4069b8:	pop    rbx
  4069b9:	pop    rbp
  4069ba:	ret    
  4069bb:	nop    DWORD PTR [rax+rax*1+0x0]
  4069c0:	mov    esi,0x1
  4069c5:	mov    rdi,rbx
  4069c8:	call   410fa0 <flatcc_builder_start_table@@Base>
  4069cd:	test   eax,eax
  4069cf:	je     4069e0 <test_table_with_emptystruct@@Base+0xb0>
  4069d1:	xor    esi,esi
  4069d3:	mov    rdi,rbx
  4069d6:	call   410410 <flatcc_builder_end_buffer@@Base>
  4069db:	jmp    406965 <test_table_with_emptystruct@@Base+0x35>
  4069dd:	nop    DWORD PTR [rax]
  4069e0:	xor    edx,edx
  4069e2:	xor    esi,esi
  4069e4:	mov    ecx,0x1
  4069e9:	mov    rdi,rbx
  4069ec:	call   412840 <flatcc_builder_table_add@@Base>
  4069f1:	test   rax,rax
  4069f4:	je     4069d1 <test_table_with_emptystruct@@Base+0xa1>
  4069f6:	lea    rsi,[rip+0x12bfd]        # 4195fa <_IO_stdin_used@@Base+0x35fa>
  4069fd:	xor    edx,edx
  4069ff:	mov    rdi,rbx
  406a02:	call   4118e0 <flatcc_builder_check_required@@Base>
  406a07:	test   eax,eax
  406a09:	je     406a1c <test_table_with_emptystruct@@Base+0xec>
  406a0b:	mov    rdi,rbx
  406a0e:	call   411960 <flatcc_builder_end_table@@Base>
  406a13:	mov    esi,eax
  406a15:	jmp    4069d3 <test_table_with_emptystruct@@Base+0xa3>
  406a17:	call   404070 <__stack_chk_fail@plt>
  406a1c:	lea    rcx,[rip+0x12a7d]        # 4194a0 <_IO_stdin_used@@Base+0x34a0>
  406a23:	lea    rsi,[rip+0x1015e]        # 416b88 <_IO_stdin_used@@Base+0xb88>
  406a2a:	lea    rdi,[rip+0x10737]        # 417168 <_IO_stdin_used@@Base+0x1168>
  406a31:	mov    edx,0xd7
  406a36:	call   404090 <__assert_fail@plt>
  406a3b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000406a40 <test_typed_table_with_emptystruct@@Base>:
  406a40:	push   rbx
  406a41:	mov    rbx,rdi
  406a44:	sub    rsp,0x10
  406a48:	mov    rax,QWORD PTR fs:0x28
  406a51:	mov    QWORD PTR [rsp+0x8],rax
  406a56:	xor    eax,eax
  406a58:	call   40faf0 <flatcc_builder_reset@@Base>
  406a5d:	lea    rsi,[rip+0xf75f]        # 4161c3 <_IO_stdin_used@@Base+0x1c3>
  406a64:	xor    ecx,ecx
  406a66:	xor    edx,edx
  406a68:	mov    rdi,rbx
  406a6b:	call   410330 <flatcc_builder_start_buffer@@Base>
  406a70:	test   eax,eax
  406a72:	je     406b78 <test_typed_table_with_emptystruct@@Base+0x138>
  406a78:	mov    rdi,rbx
  406a7b:	mov    rsi,rsp
  406a7e:	call   412ed0 <flatcc_builder_get_direct_buffer@@Base>
  406a83:	mov    rbx,rax
  406a86:	mov    rax,QWORD PTR [rip+0x1856b]        # 41eff8 <stderr@GLIBC_2.2.5>
  406a8d:	mov    rdx,QWORD PTR [rsp]
  406a91:	lea    rdi,[rip+0xf730]        # 4161c8 <_IO_stdin_used@@Base+0x1c8>
  406a98:	mov    rsi,rbx
  406a9b:	mov    rcx,QWORD PTR [rax]
  406a9e:	call   4049a0 <_start@@Base+0x150>
  406aa3:	mov    rsi,QWORD PTR [rsp]
  406aa7:	lea    rcx,[rip+0xffffffffffffdee2]        # 404990 <_start@@Base+0x140>
  406aae:	lea    rdx,[rip+0xf70e]        # 4161c3 <_IO_stdin_used@@Base+0x1c3>
  406ab5:	mov    rdi,rbx
  406ab8:	call   414720 <flatcc_verify_table_as_root@@Base>
  406abd:	test   eax,eax
  406abf:	jne    406be0 <test_typed_table_with_emptystruct@@Base+0x1a0>
  406ac5:	mov    rsi,QWORD PTR [rsp]
  406ac9:	lea    rcx,[rip+0xffffffffffffdec0]        # 404990 <_start@@Base+0x140>
  406ad0:	lea    rdx,[rip+0xf6ec]        # 4161c3 <_IO_stdin_used@@Base+0x1c3>
  406ad7:	mov    rdi,rbx
  406ada:	call   414720 <flatcc_verify_table_as_root@@Base>
  406adf:	test   eax,eax
  406ae1:	jne    406c00 <test_typed_table_with_emptystruct@@Base+0x1c0>
  406ae7:	mov    rsi,QWORD PTR [rsp]
  406aeb:	lea    rcx,[rip+0xffffffffffffde9e]        # 404990 <_start@@Base+0x140>
  406af2:	mov    edx,0xb0dd37b6
  406af7:	mov    rdi,rbx
  406afa:	call   414870 <flatcc_verify_table_as_typed_root@@Base>
  406aff:	test   eax,eax
  406b01:	jne    406c20 <test_typed_table_with_emptystruct@@Base+0x1e0>
  406b07:	test   rbx,rbx
  406b0a:	je     406c3d <test_typed_table_with_emptystruct@@Base+0x1fd>
  406b10:	cmp    DWORD PTR [rbx+0x4],0xb0dd37b6
  406b17:	je     406b50 <test_typed_table_with_emptystruct@@Base+0x110>
  406b19:	lea    rsi,[rip+0xf6fc]        # 41621c <_IO_stdin_used@@Base+0x21c>
  406b20:	mov    edi,0x1
  406b25:	xor    eax,eax
  406b27:	call   404110 <__printf_chk@plt>
  406b2c:	mov    eax,0xffffffff
  406b31:	mov    rcx,QWORD PTR [rsp+0x8]
  406b36:	xor    rcx,QWORD PTR fs:0x28
  406b3f:	jne    406c5a <test_typed_table_with_emptystruct@@Base+0x21a>
  406b45:	add    rsp,0x10
  406b49:	pop    rbx
  406b4a:	ret    
  406b4b:	nop    DWORD PTR [rax+rax*1+0x0]
  406b50:	mov    edx,DWORD PTR [rbx]
  406b52:	add    rbx,rdx
  406b55:	jne    406b31 <test_typed_table_with_emptystruct@@Base+0xf1>
  406b57:	lea    rsi,[rip+0x10712]        # 417270 <_IO_stdin_used@@Base+0x1270>
  406b5e:	mov    edi,0x1
  406b63:	xor    eax,eax
  406b65:	call   404110 <__printf_chk@plt>
  406b6a:	mov    eax,0xffffffff
  406b6f:	jmp    406b31 <test_typed_table_with_emptystruct@@Base+0xf1>
  406b71:	nop    DWORD PTR [rax+0x0]
  406b78:	mov    esi,0x1
  406b7d:	mov    rdi,rbx
  406b80:	call   410fa0 <flatcc_builder_start_table@@Base>
  406b85:	test   eax,eax
  406b87:	je     406ba0 <test_typed_table_with_emptystruct@@Base+0x160>
  406b89:	xor    esi,esi
  406b8b:	mov    rdi,rbx
  406b8e:	call   410410 <flatcc_builder_end_buffer@@Base>
  406b93:	jmp    406a78 <test_typed_table_with_emptystruct@@Base+0x38>
  406b98:	nop    DWORD PTR [rax+rax*1+0x0]
  406ba0:	xor    edx,edx
  406ba2:	xor    esi,esi
  406ba4:	mov    ecx,0x1
  406ba9:	mov    rdi,rbx
  406bac:	call   412840 <flatcc_builder_table_add@@Base>
  406bb1:	test   rax,rax
  406bb4:	je     406b89 <test_typed_table_with_emptystruct@@Base+0x149>
  406bb6:	lea    rsi,[rip+0x12a3d]        # 4195fa <_IO_stdin_used@@Base+0x35fa>
  406bbd:	xor    edx,edx
  406bbf:	mov    rdi,rbx
  406bc2:	call   4118e0 <flatcc_builder_check_required@@Base>
  406bc7:	test   eax,eax
  406bc9:	je     406c5f <test_typed_table_with_emptystruct@@Base+0x21f>
  406bcf:	mov    rdi,rbx
  406bd2:	call   411960 <flatcc_builder_end_table@@Base>
  406bd7:	mov    esi,eax
  406bd9:	jmp    406b8b <test_typed_table_with_emptystruct@@Base+0x14b>
  406bdb:	nop    DWORD PTR [rax+rax*1+0x0]
  406be0:	lea    rsi,[rip+0x10641]        # 417228 <_IO_stdin_used@@Base+0x1228>
  406be7:	mov    edi,0x1
  406bec:	xor    eax,eax
  406bee:	call   404110 <__printf_chk@plt>
  406bf3:	mov    eax,0xffffffff
  406bf8:	jmp    406b31 <test_typed_table_with_emptystruct@@Base+0xf1>
  406bfd:	nop    DWORD PTR [rax]
  406c00:	lea    rsi,[rip+0xf5df]        # 4161e6 <_IO_stdin_used@@Base+0x1e6>
  406c07:	mov    edi,0x1
  406c0c:	xor    eax,eax
  406c0e:	call   404110 <__printf_chk@plt>
  406c13:	mov    eax,0xffffffff
  406c18:	jmp    406b31 <test_typed_table_with_emptystruct@@Base+0xf1>
  406c1d:	nop    DWORD PTR [rax]
  406c20:	lea    rsi,[rip+0x10621]        # 417248 <_IO_stdin_used@@Base+0x1248>
  406c27:	mov    edi,0x1
  406c2c:	xor    eax,eax
  406c2e:	call   404110 <__printf_chk@plt>
  406c33:	mov    eax,0xffffffff
  406c38:	jmp    406b31 <test_typed_table_with_emptystruct@@Base+0xf1>
  406c3d:	lea    rsi,[rip+0xf5bf]        # 416203 <_IO_stdin_used@@Base+0x203>
  406c44:	mov    edi,0x1
  406c49:	xor    eax,eax
  406c4b:	call   404110 <__printf_chk@plt>
  406c50:	mov    eax,0xffffffff
  406c55:	jmp    406b31 <test_typed_table_with_emptystruct@@Base+0xf1>
  406c5a:	call   404070 <__stack_chk_fail@plt>
  406c5f:	lea    rcx,[rip+0x1283a]        # 4194a0 <_IO_stdin_used@@Base+0x34a0>
  406c66:	lea    rsi,[rip+0xff1b]        # 416b88 <_IO_stdin_used@@Base+0xb88>
  406c6d:	lea    rdi,[rip+0x104f4]        # 417168 <_IO_stdin_used@@Base+0x1168>
  406c74:	mov    edx,0xd7
  406c79:	call   404090 <__assert_fail@plt>
  406c7e:	xchg   ax,ax

0000000000406c80 <verify_monster@@Base>:
  406c80:	push   r15
  406c82:	push   r14
  406c84:	mov    edx,0x30
  406c89:	push   r13
  406c8b:	push   r12
  406c8d:	mov    ecx,0x50
  406c92:	push   rbp
  406c93:	push   rbx
  406c94:	mov    esi,0x70
  406c99:	mov    r8d,0x191
  406c9f:	sub    rsp,0x58
  406ca3:	mov    rax,QWORD PTR fs:0x28
  406cac:	mov    QWORD PTR [rsp+0x48],rax
  406cb1:	xor    eax,eax
  406cb3:	cmp    DWORD PTR [rdi+0x4],0x534e4f4d
  406cba:	mov    eax,0x10
  406cbf:	mov    BYTE PTR [rsp+0x32],0x20
  406cc4:	mov    WORD PTR [rsp+0x30],ax
  406cc9:	mov    WORD PTR [rsp+0x34],dx
  406cce:	mov    BYTE PTR [rsp+0x36],0x40
  406cd3:	mov    WORD PTR [rsp+0x38],cx
  406cd8:	mov    BYTE PTR [rsp+0x3a],0x60
  406cdd:	mov    WORD PTR [rsp+0x3c],si
  406ce2:	mov    BYTE PTR [rsp+0x3e],0x80
  406ce7:	mov    WORD PTR [rsp+0x40],r8w
  406ced:	mov    BYTE PTR [rsp+0x42],0x91
  406cf2:	mov    DWORD PTR [rsp+0x20],0x0
  406cfa:	mov    DWORD PTR [rsp+0x24],0x1
  406d02:	mov    DWORD PTR [rsp+0x28],0x1
  406d0a:	mov    DWORD PTR [rsp+0x2c],0x0
  406d12:	je     406d50 <verify_monster@@Base+0xd0>
  406d14:	lea    rsi,[rip+0x10a4d]        # 417768 <_IO_stdin_used@@Base+0x1768>
  406d1b:	mov    edi,0x1
  406d20:	xor    eax,eax
  406d22:	call   404110 <__printf_chk@plt>
  406d27:	mov    eax,0xffffffff
  406d2c:	mov    rsi,QWORD PTR [rsp+0x48]
  406d31:	xor    rsi,QWORD PTR fs:0x28
  406d3a:	jne    4079c0 <verify_monster@@Base+0xd40>
  406d40:	add    rsp,0x58
  406d44:	pop    rbx
  406d45:	pop    rbp
  406d46:	pop    r12
  406d48:	pop    r13
  406d4a:	pop    r14
  406d4c:	pop    r15
  406d4e:	ret    
  406d4f:	nop
  406d50:	mov    ebp,DWORD PTR [rdi]
  406d52:	add    rbp,rdi
  406d55:	je     4077a4 <verify_monster@@Base+0xb24>
  406d5b:	movsxd rax,DWORD PTR [rbp+0x0]
  406d5f:	mov    rsi,rbp
  406d62:	sub    rsi,rax
  406d65:	cmp    WORD PTR [rsi],0x9
  406d69:	jbe    406fc0 <verify_monster@@Base+0x340>
  406d6f:	movzx  edx,WORD PTR [rsi+0x8]
  406d73:	test   dx,dx
  406d76:	je     406fc0 <verify_monster@@Base+0x340>
  406d7c:	cmp    WORD PTR [rbp+rdx*1+0x0],0x50
  406d82:	jne    406fc0 <verify_monster@@Base+0x340>
  406d88:	movzx  ebx,WORD PTR [rsi+0x4]
  406d8c:	test   bx,bx
  406d8f:	je     407872 <verify_monster@@Base+0xbf2>
  406d95:	add    rbx,rbp
  406d98:	je     407872 <verify_monster@@Base+0xbf2>
  406d9e:	test   bl,0xf
  406da1:	jne    406fa0 <verify_monster@@Base+0x320>
  406da7:	vmovss xmm0,DWORD PTR [rbx+0x8]
  406dac:	vucomiss xmm0,DWORD PTR [rip+0x12888]        # 41963c <_IO_stdin_used@@Base+0x363c>
  406db4:	jp     407713 <verify_monster@@Base+0xa93>
  406dba:	jne    407713 <verify_monster@@Base+0xa93>
  406dc0:	vmovss xmm0,DWORD PTR [rip+0x12878]        # 419640 <_IO_stdin_used@@Base+0x3640>
  406dc8:	vucomiss xmm0,DWORD PTR [rbx]
  406dcc:	jp     4070e8 <verify_monster@@Base+0x468>
  406dd2:	jne    4070e8 <verify_monster@@Base+0x468>
  406dd8:	vmovss xmm1,DWORD PTR [rbx+0x4]
  406ddd:	vucomiss xmm1,DWORD PTR [rip+0x1285f]        # 419644 <_IO_stdin_used@@Base+0x3644>
  406de5:	jp     4070e8 <verify_monster@@Base+0x468>
  406deb:	jne    4070e8 <verify_monster@@Base+0x468>
  406df1:	movzx  eax,BYTE PTR [rbx+0x18]
  406df5:	mov    QWORD PTR [rsp+0x18],0x0
  406dfe:	vmovss DWORD PTR [rsp],xmm0
  406e03:	vmovsd xmm0,QWORD PTR [rbx+0x10]
  406e08:	mov    QWORD PTR [rsp+0x8],0x0
  406e11:	mov    DWORD PTR [rsp+0x4],0x40000000
  406e19:	vucomisd xmm0,QWORD PTR [rip+0x12807]        # 419628 <_IO_stdin_used@@Base+0x3628>
  406e21:	mov    BYTE PTR [rsp+0x18],al
  406e25:	movzx  eax,WORD PTR [rbx+0x1a]
  406e29:	vmovsd QWORD PTR [rsp+0x10],xmm0
  406e2f:	mov    DWORD PTR [rsp+0x8],0xc04ccccd
  406e37:	mov    WORD PTR [rsp+0x1a],ax
  406e3c:	movzx  eax,BYTE PTR [rbx+0x1c]
  406e40:	mov    BYTE PTR [rsp+0x1c],al
  406e44:	jp     407108 <verify_monster@@Base+0x488>
  406e4a:	jne    407108 <verify_monster@@Base+0x488>
  406e50:	lea    rdi,[rbx+0x1a]
  406e54:	lea    rsi,[rip+0x182a5]        # 41f100 <__bss_start@@Base+0x50>
  406e5b:	mov    edx,0x4
  406e60:	call   4040c0 <memcmp@plt>
  406e65:	test   eax,eax
  406e67:	jne    407108 <verify_monster@@Base+0x488>
  406e6d:	movsxd rax,DWORD PTR [rbp+0x0]
  406e71:	mov    rbx,rbp
  406e74:	sub    rbx,rax
  406e77:	movzx  r12d,WORD PTR [rbx]
  406e7b:	cmp    r12w,0xb
  406e80:	ja     406ea8 <verify_monster@@Base+0x228>
  406e82:	lea    rcx,[rip+0x12387]        # 419210 <_IO_stdin_used@@Base+0x3210>
  406e89:	lea    rsi,[rip+0xfb48]        # 4169d8 <_IO_stdin_used@@Base+0x9d8>
  406e90:	lea    rdi,[rip+0xfca9]        # 416b40 <_IO_stdin_used@@Base+0xb40>
  406e97:	mov    edx,0x2bb
  406e9c:	call   404090 <__assert_fail@plt>
  406ea1:	nop    DWORD PTR [rax+0x0]
  406ea8:	movzx  eax,WORD PTR [rbx+0xa]
  406eac:	test   ax,ax
  406eaf:	je     406e82 <verify_monster@@Base+0x202>
  406eb1:	add    rax,rbp
  406eb4:	mov    edx,DWORD PTR [rax]
  406eb6:	lea    rax,[rax+rdx*1+0x4]
  406ebb:	test   rax,rax
  406ebe:	je     407528 <verify_monster@@Base+0x8a8>
  406ec4:	lea    rdi,[rip+0xf288]        # 416153 <_IO_stdin_used@@Base+0x153>
  406ecb:	mov    ecx,0xa
  406ed0:	mov    rsi,rax
  406ed3:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  406ed5:	jne    407528 <verify_monster@@Base+0x8a8>
  406edb:	cmp    DWORD PTR [rax-0x4],0x9
  406edf:	jne    407380 <verify_monster@@Base+0x700>
  406ee5:	cmp    r12w,0x11
  406eea:	ja     406f10 <verify_monster@@Base+0x290>
  406eec:	lea    rsi,[rip+0x10435]        # 417328 <_IO_stdin_used@@Base+0x1328>
  406ef3:	mov    edi,0x1
  406ef8:	xor    eax,eax
  406efa:	call   404110 <__printf_chk@plt>
  406eff:	mov    eax,0xffffffff
  406f04:	jmp    406d2c <verify_monster@@Base+0xac>
  406f09:	nop    DWORD PTR [rax+0x0]
  406f10:	movzx  eax,WORD PTR [rbx+0x10]
  406f14:	test   ax,ax
  406f17:	je     406eec <verify_monster@@Base+0x26c>
  406f19:	cmp    BYTE PTR [rbp+rax*1+0x0],0x2
  406f1e:	jne    406eec <verify_monster@@Base+0x26c>
  406f20:	movzx  eax,WORD PTR [rbx+0xe]
  406f24:	test   ax,ax
  406f27:	je     40757f <verify_monster@@Base+0x8ff>
  406f2d:	add    rax,rbp
  406f30:	mov    edx,DWORD PTR [rax]
  406f32:	lea    rcx,[rax+rdx*1+0x4]
  406f37:	test   rcx,rcx
  406f3a:	je     40757f <verify_monster@@Base+0x8ff>
  406f40:	cmp    DWORD PTR [rcx-0x4],0xa
  406f44:	jne    40757f <verify_monster@@Base+0x8ff>
  406f4a:	xor    edx,edx
  406f4c:	nop    DWORD PTR [rax+0x0]
  406f50:	movzx  eax,BYTE PTR [rcx+rdx*1]
  406f54:	cmp    rax,rdx
  406f57:	jne    406fe0 <verify_monster@@Base+0x360>
  406f5d:	add    rdx,0x1
  406f61:	cmp    rdx,0xa
  406f65:	jne    406f50 <verify_monster@@Base+0x2d0>
  406f67:	movzx  eax,WORD PTR [rbx+0x6]
  406f6b:	test   ax,ax
  406f6e:	je     406ffd <verify_monster@@Base+0x37d>
  406f74:	cmp    WORD PTR [rbp+rax*1+0x0],0x96
  406f7b:	jne    407562 <verify_monster@@Base+0x8e2>
  406f81:	lea    rsi,[rip+0xf440]        # 4163c8 <_IO_stdin_used@@Base+0x3c8>
  406f88:	mov    edi,0x1
  406f8d:	xor    eax,eax
  406f8f:	call   404110 <__printf_chk@plt>
  406f94:	mov    eax,0xffffffff
  406f99:	jmp    406d2c <verify_monster@@Base+0xac>
  406f9e:	xchg   ax,ax
  406fa0:	lea    rsi,[rip+0x10309]        # 4172b0 <_IO_stdin_used@@Base+0x12b0>
  406fa7:	mov    edi,0x1
  406fac:	xor    eax,eax
  406fae:	call   404110 <__printf_chk@plt>
  406fb3:	jmp    406da7 <verify_monster@@Base+0x127>
  406fb8:	nop    DWORD PTR [rax+rax*1+0x0]
  406fc0:	lea    rsi,[rip+0xfe49]        # 416e10 <_IO_stdin_used@@Base+0xe10>
  406fc7:	mov    edi,0x1
  406fcc:	xor    eax,eax
  406fce:	call   404110 <__printf_chk@plt>
  406fd3:	mov    eax,0xffffffff
  406fd8:	jmp    406d2c <verify_monster@@Base+0xac>
  406fdd:	nop    DWORD PTR [rax]
  406fe0:	lea    rsi,[rip+0xf2bf]        # 4162a6 <_IO_stdin_used@@Base+0x2a6>
  406fe7:	mov    edi,0x1
  406fec:	xor    eax,eax
  406fee:	call   404110 <__printf_chk@plt>
  406ff3:	mov    eax,0xffffffff
  406ff8:	jmp    406d2c <verify_monster@@Base+0xac>
  406ffd:	cmp    WORD PTR [rbx+0x8],0x0
  407002:	je     40774d <verify_monster@@Base+0xacd>
  407008:	cmp    WORD PTR [rbx+0x4],0x0
  40700d:	je     40776a <verify_monster@@Base+0xaea>
  407013:	cmp    r12w,0x17
  407018:	ja     407040 <verify_monster@@Base+0x3c0>
  40701a:	lea    rsi,[rip+0x1034f]        # 417370 <_IO_stdin_used@@Base+0x1370>
  407021:	mov    edi,0x1
  407026:	xor    eax,eax
  407028:	call   404110 <__printf_chk@plt>
  40702d:	mov    eax,0xffffffff
  407032:	jmp    406d2c <verify_monster@@Base+0xac>
  407037:	nop    WORD PTR [rax+rax*1+0x0]
  407040:	movzx  eax,WORD PTR [rbx+0x16]
  407044:	test   ax,ax
  407047:	je     40701a <verify_monster@@Base+0x39a>
  407049:	add    rax,rbp
  40704c:	mov    edx,DWORD PTR [rax]
  40704e:	lea    rax,[rax+rdx*1+0x4]
  407053:	test   rax,rax
  407056:	je     40701a <verify_monster@@Base+0x39a>
  407058:	cmp    DWORD PTR [rax-0x4],0x5
  40705c:	jne    40701a <verify_monster@@Base+0x39a>
  40705e:	xor    edx,edx
  407060:	test   rax,rax
  407063:	mov    ecx,0x10
  407068:	je     4070a1 <verify_monster@@Base+0x421>
  40706a:	cmp    WORD PTR [rax],cx
  40706d:	jne    40739d <verify_monster@@Base+0x71d>
  407073:	movzx  esi,BYTE PTR [rsp+rdx*4+0x32]
  407078:	movzx  ecx,BYTE PTR [rax+0x2]
  40707c:	lea    rdi,[rsp+0x30]
  407081:	cmp    cl,sil
  407084:	jne    40739d <verify_monster@@Base+0x71d>
  40708a:	add    rdx,0x1
  40708e:	add    rax,0x4
  407092:	cmp    rdx,0x5
  407096:	je     4070c0 <verify_monster@@Base+0x440>
  407098:	test   rax,rax
  40709b:	movzx  ecx,WORD PTR [rdi+rdx*4]
  40709f:	jne    40706a <verify_monster@@Base+0x3ea>
  4070a1:	test   cx,cx
  4070a4:	jne    40739d <verify_monster@@Base+0x71d>
  4070aa:	lea    rdi,[rsp+0x30]
  4070af:	movzx  esi,BYTE PTR [rsp+rdx*4+0x32]
  4070b4:	xor    ecx,ecx
  4070b6:	jmp    407081 <verify_monster@@Base+0x401>
  4070b8:	nop    DWORD PTR [rax+rax*1+0x0]
  4070c0:	cmp    r12w,0x1b
  4070c5:	ja     407128 <verify_monster@@Base+0x4a8>
  4070c7:	lea    rsi,[rip+0x102f2]        # 4173c0 <_IO_stdin_used@@Base+0x13c0>
  4070ce:	mov    edi,0x1
  4070d3:	xor    eax,eax
  4070d5:	call   404110 <__printf_chk@plt>
  4070da:	mov    eax,0xffffffff
  4070df:	jmp    406d2c <verify_monster@@Base+0xac>
  4070e4:	nop    DWORD PTR [rax+0x0]
  4070e8:	lea    rsi,[rip+0xf152]        # 416241 <_IO_stdin_used@@Base+0x241>
  4070ef:	mov    edi,0x1
  4070f4:	xor    eax,eax
  4070f6:	call   404110 <__printf_chk@plt>
  4070fb:	mov    eax,0xffffffff
  407100:	jmp    406d2c <verify_monster@@Base+0xac>
  407105:	nop    DWORD PTR [rax]
  407108:	lea    rsi,[rip+0x101f1]        # 417300 <_IO_stdin_used@@Base+0x1300>
  40710f:	mov    edi,0x1
  407114:	xor    eax,eax
  407116:	call   404110 <__printf_chk@plt>
  40711b:	mov    eax,0xffffffff
  407120:	jmp    406d2c <verify_monster@@Base+0xac>
  407125:	nop    DWORD PTR [rax]
  407128:	movzx  eax,WORD PTR [rbx+0x1a]
  40712c:	test   ax,ax
  40712f:	je     4070c7 <verify_monster@@Base+0x447>
  407131:	add    rax,rbp
  407134:	mov    edx,DWORD PTR [rax]
  407136:	lea    r15,[rax+rdx*1+0x4]
  40713b:	test   r15,r15
  40713e:	je     4070c7 <verify_monster@@Base+0x447>
  407140:	cmp    DWORD PTR [r15-0x4],0x8
  407145:	jne    4070c7 <verify_monster@@Base+0x447>
  407147:	mov    eax,DWORD PTR [r15+0x14]
  40714b:	lea    r14,[r15+rax*1+0x14]
  407150:	test   r14,r14
  407153:	je     4079f3 <verify_monster@@Base+0xd73>
  407159:	lea    r13,[rip+0xf189]        # 4162e9 <_IO_stdin_used@@Base+0x2e9>
  407160:	mov    rdi,r14
  407163:	call   404c40 <_start@@Base+0x3f0>
  407168:	mov    ecx,0x8
  40716d:	mov    rsi,rax
  407170:	mov    rdi,r13
  407173:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  407175:	jne    4078af <verify_monster@@Base+0xc2f>
  40717b:	mov    eax,DWORD PTR [r15+0x4]
  40717f:	lea    rax,[r15+rax*1+0x4]
  407184:	cmp    r14,rax
  407187:	jne    407545 <verify_monster@@Base+0x8c5>
  40718d:	mov    eax,DWORD PTR [r15+0x8]
  407191:	lea    r14,[rip+0xf159]        # 4162f1 <_IO_stdin_used@@Base+0x2f1>
  407198:	lea    rdi,[r15+rax*1+0x8]
  40719d:	call   404c40 <_start@@Base+0x3f0>
  4071a2:	mov    ecx,0x6
  4071a7:	mov    rsi,rax
  4071aa:	mov    rdi,r14
  4071ad:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  4071af:	jne    40788f <verify_monster@@Base+0xc0f>
  4071b5:	mov    edi,DWORD PTR [r15]
  4071b8:	add    rdi,r15
  4071bb:	call   404c40 <_start@@Base+0x3f0>
  4071c0:	lea    rdi,[rip+0xf130]        # 4162f7 <_IO_stdin_used@@Base+0x2f7>
  4071c7:	mov    ecx,0x9
  4071cc:	mov    rsi,rax
  4071cf:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  4071d1:	jne    407949 <verify_monster@@Base+0xcc9>
  4071d7:	mov    eax,DWORD PTR [r15+0xc]
  4071db:	lea    rdi,[r15+rax*1+0xc]
  4071e0:	call   404c40 <_start@@Base+0x3f0>
  4071e5:	mov    ecx,0x8
  4071ea:	mov    rsi,rax
  4071ed:	mov    rdi,r13
  4071f0:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  4071f2:	jne    407929 <verify_monster@@Base+0xca9>
  4071f8:	mov    eax,DWORD PTR [r15+0x10]
  4071fc:	lea    rdi,[r15+rax*1+0x10]
  407201:	call   404c40 <_start@@Base+0x3f0>
  407206:	mov    ecx,0x6
  40720b:	mov    rsi,rax
  40720e:	mov    rdi,r14
  407211:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  407213:	jne    407909 <verify_monster@@Base+0xc89>
  407219:	mov    eax,DWORD PTR [r15+0x18]
  40721d:	lea    rdi,[r15+rax*1+0x18]
  407222:	call   404c40 <_start@@Base+0x3f0>
  407227:	lea    rdi,[rip+0xf0c9]        # 4162f7 <_IO_stdin_used@@Base+0x2f7>
  40722e:	mov    ecx,0x9
  407233:	mov    rsi,rax
  407236:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  407238:	jne    4078e9 <verify_monster@@Base+0xc69>
  40723e:	mov    eax,DWORD PTR [r15+0x1c]
  407242:	lea    rdi,[r15+rax*1+0x1c]
  407247:	call   404c40 <_start@@Base+0x3f0>
  40724c:	mov    ecx,0x6
  407251:	mov    rsi,rax
  407254:	mov    rdi,r14
  407257:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  407259:	jne    4077de <verify_monster@@Base+0xb5e>
  40725f:	movzx  eax,WORD PTR [rbx+0x18]
  407263:	test   ax,ax
  407266:	je     4077c1 <verify_monster@@Base+0xb41>
  40726c:	add    rax,rbp
  40726f:	mov    edx,DWORD PTR [rax]
  407271:	lea    r14,[rax+rdx*1+0x4]
  407276:	test   r14,r14
  407279:	je     4077c1 <verify_monster@@Base+0xb41>
  40727f:	cmp    DWORD PTR [r14-0x4],0x3
  407284:	jne    4077c1 <verify_monster@@Base+0xb41>
  40728a:	mov    eax,DWORD PTR [r14]
  40728d:	lea    rdi,[rip+0xf06c]        # 416300 <_IO_stdin_used@@Base+0x300>
  407294:	mov    ecx,0x6
  407299:	lea    rsi,[r14+rax*1+0x4]
  40729e:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  4072a0:	jne    4078cc <verify_monster@@Base+0xc4c>
  4072a6:	mov    eax,DWORD PTR [r14+0x4]
  4072aa:	lea    rdi,[r14+rax*1+0x8]
  4072af:	test   rdi,rdi
  4072b2:	je     4077fe <verify_monster@@Base+0xb7e>
  4072b8:	cmp    DWORD PTR [rdi-0x4],0x2
  4072bc:	jne    4077fe <verify_monster@@Base+0xb7e>
  4072c2:	lea    rsi,[rip+0x11a77]        # 418d40 <_IO_stdin_used@@Base+0x2d40>
  4072c9:	mov    edx,0x2
  4072ce:	call   4040c0 <memcmp@plt>
  4072d3:	test   eax,eax
  4072d5:	jne    407969 <verify_monster@@Base+0xce9>
  4072db:	mov    eax,DWORD PTR [r14+0x8]
  4072df:	lea    rdi,[rip+0xf052]        # 416338 <_IO_stdin_used@@Base+0x338>
  4072e6:	mov    ecx,0x7
  4072eb:	lea    rsi,[r14+rax*1+0xc]
  4072f0:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  4072f2:	seta   al
  4072f5:	setb   dl
  4072f8:	sub    eax,edx
  4072fa:	movsx  eax,al
  4072fd:	test   eax,eax
  4072ff:	jne    40781b <verify_monster@@Base+0xb9b>
  407305:	cmp    r12w,0x35
  40730a:	jbe    407855 <verify_monster@@Base+0xbd5>
  407310:	movzx  edx,WORD PTR [rbx+0x34]
  407314:	test   dx,dx
  407317:	je     407855 <verify_monster@@Base+0xbd5>
  40731d:	add    rdx,rbp
  407320:	mov    ecx,DWORD PTR [rdx]
  407322:	lea    rsi,[rdx+rcx*1+0x4]
  407327:	test   rsi,rsi
  40732a:	je     407838 <verify_monster@@Base+0xbb8>
  407330:	cmp    DWORD PTR [rsi-0x4],0x4
  407334:	jne    407838 <verify_monster@@Base+0xbb8>
  40733a:	xor    edx,edx
  40733c:	movzx  ecx,BYTE PTR [rsi+rdx*1]
  407340:	cmp    ecx,eax
  407342:	jne    40735a <verify_monster@@Base+0x6da>
  407344:	add    rdx,0x1
  407348:	cmp    rdx,0x4
  40734c:	je     4073c0 <verify_monster@@Base+0x740>
  40734e:	movzx  ecx,BYTE PTR [rsi+rdx*1]
  407352:	mov    eax,DWORD PTR [rsp+rdx*4+0x20]
  407356:	cmp    ecx,eax
  407358:	je     407344 <verify_monster@@Base+0x6c4>
  40735a:	lea    rsi,[rip+0x10297]        # 4175f8 <_IO_stdin_used@@Base+0x15f8>
  407361:	mov    edi,0x1
  407366:	xor    eax,eax
  407368:	call   404110 <__printf_chk@plt>
  40736d:	mov    eax,0xffffffff
  407372:	jmp    406d2c <verify_monster@@Base+0xac>
  407377:	nop    WORD PTR [rax+rax*1+0x0]
  407380:	lea    rsi,[rip+0xeee6]        # 41626d <_IO_stdin_used@@Base+0x26d>
  407387:	mov    edi,0x1
  40738c:	xor    eax,eax
  40738e:	call   404110 <__printf_chk@plt>
  407393:	mov    eax,0xffffffff
  407398:	jmp    406d2c <verify_monster@@Base+0xac>
  40739d:	lea    rsi,[rip+0xfff4]        # 417398 <_IO_stdin_used@@Base+0x1398>
  4073a4:	mov    edi,0x1
  4073a9:	xor    eax,eax
  4073ab:	call   404110 <__printf_chk@plt>
  4073b0:	mov    eax,0xffffffff
  4073b5:	jmp    406d2c <verify_monster@@Base+0xac>
  4073ba:	nop    WORD PTR [rax+rax*1+0x0]
  4073c0:	movzx  eax,WORD PTR [rbx+0x12]
  4073c4:	test   ax,ax
  4073c7:	je     407787 <verify_monster@@Base+0xb07>
  4073cd:	cmp    BYTE PTR [rbp+rax*1+0x0],0x1
  4073d2:	jne    407787 <verify_monster@@Base+0xb07>
  4073d8:	movzx  r14d,WORD PTR [rbx+0x14]
  4073dd:	test   r14w,r14w
  4073e1:	je     4079eb <verify_monster@@Base+0xd6b>
  4073e7:	movzx  r15d,r14w
  4073eb:	add    r15,rbp
  4073ee:	mov    eax,DWORD PTR [r15]
  4073f1:	add    r15,rax
  4073f4:	mov    rdi,r15
  4073f7:	call   404c40 <_start@@Base+0x3f0>
  4073fc:	mov    ecx,0x8
  407401:	mov    rsi,rax
  407404:	mov    rdi,r13
  407407:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  407409:	je     407430 <verify_monster@@Base+0x7b0>
  40740b:	lea    rsi,[rip+0x10236]        # 417648 <_IO_stdin_used@@Base+0x1648>
  407412:	mov    edi,0x1
  407417:	xor    eax,eax
  407419:	call   404110 <__printf_chk@plt>
  40741e:	mov    eax,0xffffffff
  407423:	jmp    406d2c <verify_monster@@Base+0xac>
  407428:	nop    DWORD PTR [rax+rax*1+0x0]
  407430:	movzx  eax,WORD PTR [rbx+0x1c]
  407434:	test   ax,ax
  407437:	je     4074b0 <verify_monster@@Base+0x830>
  407439:	movzx  r12d,ax
  40743d:	add    r12,rbp
  407440:	mov    eax,DWORD PTR [r12]
  407444:	add    r12,rax
  407447:	mov    rdi,r12
  40744a:	call   404c40 <_start@@Base+0x3f0>
  40744f:	lea    rdi,[rip+0xef1c]        # 416372 <_IO_stdin_used@@Base+0x372>
  407456:	mov    rsi,rax
  407459:	mov    ecx,0xa
  40745e:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  407460:	jne    4074ce <verify_monster@@Base+0x84e>
  407462:	test   r12,r12
  407465:	je     407a12 <verify_monster@@Base+0xd92>
  40746b:	movsxd rax,DWORD PTR [r12]
  40746f:	mov    rdx,r12
  407472:	sub    rdx,rax
  407475:	movzx  ecx,WORD PTR [rdx]
  407478:	cmp    cx,0x13
  40747c:	ja     4074f0 <verify_monster@@Base+0x870>
  40747e:	test   r14w,r14w
  407482:	je     407a17 <verify_monster@@Base+0xd97>
  407488:	movzx  eax,r14w
  40748c:	add    rax,rbp
  40748f:	mov    esi,DWORD PTR [rax]
  407491:	add    rax,rsi
  407494:	cmp    rax,r15
  407497:	jne    407730 <verify_monster@@Base+0xab0>
  40749d:	cmp    cx,0x1b
  4074a1:	ja     40759c <verify_monster@@Base+0x91c>
  4074a7:	call   404c10 <_start@@Base+0x3c0>
  4074ac:	nop    DWORD PTR [rax+0x0]
  4074b0:	xor    edi,edi
  4074b2:	call   404c40 <_start@@Base+0x3f0>
  4074b7:	lea    rdi,[rip+0xeeb4]        # 416372 <_IO_stdin_used@@Base+0x372>
  4074be:	mov    rsi,rax
  4074c1:	mov    ecx,0xa
  4074c6:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  4074c8:	je     407a12 <verify_monster@@Base+0xd92>
  4074ce:	lea    rsi,[rip+0xeea7]        # 41637c <_IO_stdin_used@@Base+0x37c>
  4074d5:	mov    edi,0x1
  4074da:	xor    eax,eax
  4074dc:	call   404110 <__printf_chk@plt>
  4074e1:	mov    eax,0xffffffff
  4074e6:	jmp    406d2c <verify_monster@@Base+0xac>
  4074eb:	nop    DWORD PTR [rax+rax*1+0x0]
  4074f0:	movzx  eax,WORD PTR [rdx+0x12]
  4074f4:	test   ax,ax
  4074f7:	je     40747e <verify_monster@@Base+0x7fe>
  4074f9:	cmp    BYTE PTR [r12+rax*1],0x0
  4074fe:	je     40747e <verify_monster@@Base+0x7fe>
  407504:	lea    rsi,[rip+0x10165]        # 417670 <_IO_stdin_used@@Base+0x1670>
  40750b:	mov    edi,0x1
  407510:	xor    eax,eax
  407512:	call   404110 <__printf_chk@plt>
  407517:	mov    eax,0xffffffff
  40751c:	jmp    406d2c <verify_monster@@Base+0xac>
  407521:	nop    DWORD PTR [rax+0x0]
  407528:	lea    rsi,[rip+0xed29]        # 416258 <_IO_stdin_used@@Base+0x258>
  40752f:	mov    edi,0x1
  407534:	xor    eax,eax
  407536:	call   404110 <__printf_chk@plt>
  40753b:	mov    eax,0xffffffff
  407540:	jmp    406d2c <verify_monster@@Base+0xac>
  407545:	lea    rsi,[rip+0xff0c]        # 417458 <_IO_stdin_used@@Base+0x1458>
  40754c:	mov    edi,0x1
  407551:	xor    eax,eax
  407553:	call   404110 <__printf_chk@plt>
  407558:	mov    eax,0xffffffff
  40755d:	jmp    406d2c <verify_monster@@Base+0xac>
  407562:	lea    rsi,[rip+0xed5a]        # 4162c3 <_IO_stdin_used@@Base+0x2c3>
  407569:	mov    edi,0x1
  40756e:	xor    eax,eax
  407570:	call   404110 <__printf_chk@plt>
  407575:	mov    eax,0xffffffff
  40757a:	jmp    406d2c <verify_monster@@Base+0xac>
  40757f:	lea    rsi,[rip+0xed03]        # 416289 <_IO_stdin_used@@Base+0x289>
  407586:	mov    edi,0x1
  40758b:	xor    eax,eax
  40758d:	call   404110 <__printf_chk@plt>
  407592:	mov    eax,0xffffffff
  407597:	jmp    406d2c <verify_monster@@Base+0xac>
  40759c:	movzx  eax,WORD PTR [rdx+0x1a]
  4075a0:	test   ax,ax
  4075a3:	je     4074a7 <verify_monster@@Base+0x827>
  4075a9:	add    r12,rax
  4075ac:	mov    eax,DWORD PTR [r12]
  4075b0:	lea    rdx,[r12+rax*1+0x4]
  4075b5:	test   rdx,rdx
  4075b8:	je     4074a7 <verify_monster@@Base+0x827>
  4075be:	mov    eax,DWORD PTR [rdx-0x4]
  4075c1:	xor    ecx,ecx
  4075c3:	add    rax,0xffffffffffffffff
  4075c7:	setb   cl
  4075ca:	lea    rax,[rdx+rax*4]
  4075ce:	test   rcx,rcx
  4075d1:	je     4074a7 <verify_monster@@Base+0x827>
  4075d7:	mov    edx,DWORD PTR [rax]
  4075d9:	add    rax,rdx
  4075dc:	je     407a12 <verify_monster@@Base+0xd92>
  4075e2:	movsxd rdx,DWORD PTR [rax]
  4075e5:	mov    rsi,rax
  4075e8:	sub    rsi,rdx
  4075eb:	movzx  ecx,WORD PTR [rsi]
  4075ee:	mov    rdx,rsi
  4075f1:	cmp    cx,0x13
  4075f5:	ja     407614 <verify_monster@@Base+0x994>
  4075f7:	lea    rsi,[rip+0x100c2]        # 4176c0 <_IO_stdin_used@@Base+0x16c0>
  4075fe:	mov    edi,0x1
  407603:	xor    eax,eax
  407605:	call   404110 <__printf_chk@plt>
  40760a:	mov    eax,0xffffffff
  40760f:	jmp    406d2c <verify_monster@@Base+0xac>
  407614:	movzx  esi,WORD PTR [rsi+0x12]
  407618:	test   si,si
  40761b:	je     4075f7 <verify_monster@@Base+0x977>
  40761d:	cmp    BYTE PTR [rax+rsi*1],0x1
  407621:	jne    4075f7 <verify_monster@@Base+0x977>
  407623:	xor    edi,edi
  407625:	cmp    cx,0x15
  407629:	jbe    407640 <verify_monster@@Base+0x9c0>
  40762b:	movzx  edx,WORD PTR [rdx+0x14]
  40762f:	test   dx,dx
  407632:	je     4079e4 <verify_monster@@Base+0xd64>
  407638:	add    rax,rdx
  40763b:	mov    edi,DWORD PTR [rax]
  40763d:	add    rdi,rax
  407640:	call   404c40 <_start@@Base+0x3f0>
  407645:	mov    ecx,0x8
  40764a:	mov    rsi,rax
  40764d:	mov    rdi,r13
  407650:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  407652:	seta   al
  407655:	setb   dl
  407658:	sub    eax,edx
  40765a:	movsx  eax,al
  40765d:	test   eax,eax
  40765f:	je     407680 <verify_monster@@Base+0xa00>
  407661:	lea    rsi,[rip+0x100a0]        # 417708 <_IO_stdin_used@@Base+0x1708>
  407668:	mov    edi,0x1
  40766d:	xor    eax,eax
  40766f:	call   404110 <__printf_chk@plt>
  407674:	mov    eax,0xffffffff
  407679:	jmp    406d2c <verify_monster@@Base+0xac>
  40767e:	xchg   ax,ax
  407680:	movzx  edx,WORD PTR [rbx+0x22]
  407684:	test   dx,dx
  407687:	je     4079a3 <verify_monster@@Base+0xd23>
  40768d:	cmp    BYTE PTR [rbp+rdx*1+0x0],0x0
  407692:	jne    4079a3 <verify_monster@@Base+0xd23>
  407698:	movzx  edx,WORD PTR [rbx+0x20]
  40769c:	test   dx,dx
  40769f:	je     407986 <verify_monster@@Base+0xd06>
  4076a5:	add    rbp,rdx
  4076a8:	mov    edx,DWORD PTR [rbp+0x0]
  4076ab:	add    rbp,rdx
  4076ae:	je     4079c5 <verify_monster@@Base+0xd45>
  4076b4:	movsxd rdx,DWORD PTR [rbp+0x0]
  4076b8:	sub    rbp,rdx
  4076bb:	movzx  edx,WORD PTR [rbp+0x0]
  4076bf:	cmp    dx,0x5
  4076c3:	jbe    406d2c <verify_monster@@Base+0xac>
  4076c9:	cmp    WORD PTR [rbp+0x4],0x0
  4076ce:	jne    4076f6 <verify_monster@@Base+0xa76>
  4076d0:	cmp    dx,0x7
  4076d4:	jbe    406d2c <verify_monster@@Base+0xac>
  4076da:	cmp    WORD PTR [rbp+0x6],0x0
  4076df:	jne    4076f6 <verify_monster@@Base+0xa76>
  4076e1:	cmp    dx,0x9
  4076e5:	jbe    406d2c <verify_monster@@Base+0xac>
  4076eb:	cmp    WORD PTR [rbp+0x8],0x0
  4076f0:	je     406d2c <verify_monster@@Base+0xac>
  4076f6:	lea    rsi,[rip+0xecb2]        # 4163af <_IO_stdin_used@@Base+0x3af>
  4076fd:	mov    edi,0x1
  407702:	xor    eax,eax
  407704:	call   404110 <__printf_chk@plt>
  407709:	mov    eax,0xffffffff
  40770e:	jmp    406d2c <verify_monster@@Base+0xac>
  407713:	lea    rsi,[rip+0xfbbe]        # 4172d8 <_IO_stdin_used@@Base+0x12d8>
  40771a:	mov    edi,0x1
  40771f:	xor    eax,eax
  407721:	call   404110 <__printf_chk@plt>
  407726:	mov    eax,0xffffffff
  40772b:	jmp    406d2c <verify_monster@@Base+0xac>
  407730:	lea    rsi,[rip+0xff61]        # 417698 <_IO_stdin_used@@Base+0x1698>
  407737:	mov    edi,0x1
  40773c:	xor    eax,eax
  40773e:	call   404110 <__printf_chk@plt>
  407743:	mov    eax,0xffffffff
  407748:	jmp    406d2c <verify_monster@@Base+0xac>
  40774d:	lea    rsi,[rip+0xfbf4]        # 417348 <_IO_stdin_used@@Base+0x1348>
  407754:	mov    edi,0x1
  407759:	xor    eax,eax
  40775b:	call   404110 <__printf_chk@plt>
  407760:	mov    eax,0xffffffff
  407765:	jmp    406d2c <verify_monster@@Base+0xac>
  40776a:	lea    rsi,[rip+0xe990]        # 416101 <_IO_stdin_used@@Base+0x101>
  407771:	mov    edi,0x1
  407776:	xor    eax,eax
  407778:	call   404110 <__printf_chk@plt>
  40777d:	mov    eax,0xffffffff
  407782:	jmp    406d2c <verify_monster@@Base+0xac>
  407787:	lea    rsi,[rip+0xfe8a]        # 417618 <_IO_stdin_used@@Base+0x1618>
  40778e:	mov    edi,0x1
  407793:	xor    eax,eax
  407795:	call   404110 <__printf_chk@plt>
  40779a:	mov    eax,0xffffffff
  40779f:	jmp    406d2c <verify_monster@@Base+0xac>
  4077a4:	lea    rsi,[rip+0xe93f]        # 4160ea <_IO_stdin_used@@Base+0xea>
  4077ab:	mov    edi,0x1
  4077b0:	xor    eax,eax
  4077b2:	call   404110 <__printf_chk@plt>
  4077b7:	mov    eax,0xffffffff
  4077bc:	jmp    406d2c <verify_monster@@Base+0xac>
  4077c1:	lea    rsi,[rip+0xfdb8]        # 417580 <_IO_stdin_used@@Base+0x1580>
  4077c8:	mov    edi,0x1
  4077cd:	xor    eax,eax
  4077cf:	call   404110 <__printf_chk@plt>
  4077d4:	mov    eax,0xffffffff
  4077d9:	jmp    406d2c <verify_monster@@Base+0xac>
  4077de:	lea    rsi,[rip+0xfd73]        # 417558 <_IO_stdin_used@@Base+0x1558>
  4077e5:	mov    rdx,rax
  4077e8:	mov    edi,0x1
  4077ed:	xor    eax,eax
  4077ef:	call   404110 <__printf_chk@plt>
  4077f4:	mov    eax,0xffffffff
  4077f9:	jmp    406d2c <verify_monster@@Base+0xac>
  4077fe:	lea    rsi,[rip+0xeb19]        # 41631e <_IO_stdin_used@@Base+0x31e>
  407805:	mov    edi,0x1
  40780a:	xor    eax,eax
  40780c:	call   404110 <__printf_chk@plt>
  407811:	mov    eax,0xffffffff
  407816:	jmp    406d2c <verify_monster@@Base+0xac>
  40781b:	lea    rsi,[rip+0xeb1d]        # 41633f <_IO_stdin_used@@Base+0x33f>
  407822:	mov    edi,0x1
  407827:	xor    eax,eax
  407829:	call   404110 <__printf_chk@plt>
  40782e:	mov    eax,0xffffffff
  407833:	jmp    406d2c <verify_monster@@Base+0xac>
  407838:	lea    rsi,[rip+0xfd99]        # 4175d8 <_IO_stdin_used@@Base+0x15d8>
  40783f:	mov    edi,0x1
  407844:	xor    eax,eax
  407846:	call   404110 <__printf_chk@plt>
  40784b:	mov    eax,0xffffffff
  407850:	jmp    406d2c <verify_monster@@Base+0xac>
  407855:	lea    rsi,[rip+0xeafb]        # 416357 <_IO_stdin_used@@Base+0x357>
  40785c:	mov    edi,0x1
  407861:	xor    eax,eax
  407863:	call   404110 <__printf_chk@plt>
  407868:	mov    eax,0xffffffff
  40786d:	jmp    406d2c <verify_monster@@Base+0xac>
  407872:	lea    rsi,[rip+0xe9b4]        # 41622d <_IO_stdin_used@@Base+0x22d>
  407879:	mov    edi,0x1
  40787e:	xor    eax,eax
  407880:	call   404110 <__printf_chk@plt>
  407885:	mov    eax,0xffffffff
  40788a:	jmp    406d2c <verify_monster@@Base+0xac>
  40788f:	lea    rsi,[rip+0xfbfa]        # 417490 <_IO_stdin_used@@Base+0x1490>
  407896:	mov    rdx,rax
  407899:	mov    edi,0x1
  40789e:	xor    eax,eax
  4078a0:	call   404110 <__printf_chk@plt>
  4078a5:	mov    eax,0xffffffff
  4078aa:	jmp    406d2c <verify_monster@@Base+0xac>
  4078af:	lea    rsi,[rip+0xea23]        # 4162d9 <_IO_stdin_used@@Base+0x2d9>
  4078b6:	mov    edi,0x1
  4078bb:	xor    eax,eax
  4078bd:	call   404110 <__printf_chk@plt>
  4078c2:	mov    eax,0xffffffff
  4078c7:	jmp    406d2c <verify_monster@@Base+0xac>
  4078cc:	lea    rsi,[rip+0xea33]        # 416306 <_IO_stdin_used@@Base+0x306>
  4078d3:	mov    edi,0x1
  4078d8:	xor    eax,eax
  4078da:	call   404110 <__printf_chk@plt>
  4078df:	mov    eax,0xffffffff
  4078e4:	jmp    406d2c <verify_monster@@Base+0xac>
  4078e9:	lea    rsi,[rip+0xfc40]        # 417530 <_IO_stdin_used@@Base+0x1530>
  4078f0:	mov    rdx,rax
  4078f3:	mov    edi,0x1
  4078f8:	xor    eax,eax
  4078fa:	call   404110 <__printf_chk@plt>
  4078ff:	mov    eax,0xffffffff
  407904:	jmp    406d2c <verify_monster@@Base+0xac>
  407909:	lea    rsi,[rip+0xfbf8]        # 417508 <_IO_stdin_used@@Base+0x1508>
  407910:	mov    rdx,rax
  407913:	mov    edi,0x1
  407918:	xor    eax,eax
  40791a:	call   404110 <__printf_chk@plt>
  40791f:	mov    eax,0xffffffff
  407924:	jmp    406d2c <verify_monster@@Base+0xac>
  407929:	lea    rsi,[rip+0xfbb0]        # 4174e0 <_IO_stdin_used@@Base+0x14e0>
  407930:	mov    rdx,rax
  407933:	mov    edi,0x1
  407938:	xor    eax,eax
  40793a:	call   404110 <__printf_chk@plt>
  40793f:	mov    eax,0xffffffff
  407944:	jmp    406d2c <verify_monster@@Base+0xac>
  407949:	lea    rsi,[rip+0xfb68]        # 4174b8 <_IO_stdin_used@@Base+0x14b8>
  407950:	mov    rdx,rax
  407953:	mov    edi,0x1
  407958:	xor    eax,eax
  40795a:	call   404110 <__printf_chk@plt>
  40795f:	mov    eax,0xffffffff
  407964:	jmp    406d2c <verify_monster@@Base+0xac>
  407969:	lea    rsi,[rip+0xfc40]        # 4175b0 <_IO_stdin_used@@Base+0x15b0>
  407970:	mov    edi,0x1
  407975:	xor    eax,eax
  407977:	call   404110 <__printf_chk@plt>
  40797c:	mov    eax,0xffffffff
  407981:	jmp    406d2c <verify_monster@@Base+0xac>
  407986:	lea    rsi,[rip+0xfdbb]        # 417748 <_IO_stdin_used@@Base+0x1748>
  40798d:	mov    edi,0x1
  407992:	xor    eax,eax
  407994:	call   404110 <__printf_chk@plt>
  407999:	mov    eax,0xffffffff
  40799e:	jmp    406d2c <verify_monster@@Base+0xac>
  4079a3:	lea    rsi,[rip+0xe9f0]        # 41639a <_IO_stdin_used@@Base+0x39a>
  4079aa:	mov    edi,0x1
  4079af:	xor    eax,eax
  4079b1:	call   404110 <__printf_chk@plt>
  4079b6:	mov    eax,0xffffffff
  4079bb:	jmp    406d2c <verify_monster@@Base+0xac>
  4079c0:	call   404070 <__stack_chk_fail@plt>
  4079c5:	lea    rcx,[rip+0x117d4]        # 4191a0 <_IO_stdin_used@@Base+0x31a0>
  4079cc:	lea    rsi,[rip+0xf005]        # 4169d8 <_IO_stdin_used@@Base+0x9d8>
  4079d3:	lea    rdi,[rip+0xf07e]        # 416a58 <_IO_stdin_used@@Base+0xa58>
  4079da:	mov    edx,0x25f
  4079df:	call   404090 <__assert_fail@plt>
  4079e4:	xor    edi,edi
  4079e6:	jmp    407640 <verify_monster@@Base+0x9c0>
  4079eb:	xor    r15d,r15d
  4079ee:	jmp    4073f4 <verify_monster@@Base+0x774>
  4079f3:	lea    rcx,[rip+0x11a8e]        # 419488 <_IO_stdin_used@@Base+0x3488>
  4079fa:	lea    rsi,[rip+0xf9e7]        # 4173e8 <_IO_stdin_used@@Base+0x13e8>
  407a01:	lea    rdi,[rip+0xe8cd]        # 4162d5 <_IO_stdin_used@@Base+0x2d5>
  407a08:	mov    edx,0x296
  407a0d:	call   404090 <__assert_fail@plt>
  407a12:	call   4042e4 <posix_memalign@plt+0x1b4>
  407a17:	xor    eax,eax
  407a19:	jmp    407494 <verify_monster@@Base+0x814>
  407a1e:	xchg   ax,ax

0000000000407a20 <gen_monster@@Base>:
  407a20:	push   r12
  407a22:	push   rbp
  407a23:	mov    ebp,esi
  407a25:	push   rbx
  407a26:	mov    rbx,rdi
  407a29:	sub    rsp,0x30
  407a2d:	mov    rax,QWORD PTR fs:0x28
  407a36:	mov    QWORD PTR [rsp+0x28],rax
  407a3b:	xor    eax,eax
  407a3d:	mov    BYTE PTR [rsp+0x1e],0x0
  407a42:	mov    BYTE PTR [rsp+0x1f],0x1
  407a47:	mov    BYTE PTR [rsp+0x20],0x2
  407a4c:	mov    BYTE PTR [rsp+0x21],0x3
  407a51:	mov    BYTE PTR [rsp+0x22],0x4
  407a56:	mov    BYTE PTR [rsp+0x23],0x5
  407a5b:	mov    BYTE PTR [rsp+0x24],0x6
  407a60:	mov    BYTE PTR [rsp+0x25],0x7
  407a65:	mov    BYTE PTR [rsp+0x26],0x8
  407a6a:	mov    BYTE PTR [rsp+0x27],0x9
  407a6f:	mov    BYTE PTR [rsp+0x1a],0x0
  407a74:	mov    BYTE PTR [rsp+0x1b],0x1
  407a79:	mov    BYTE PTR [rsp+0x1c],0x1
  407a7e:	mov    BYTE PTR [rsp+0x1d],0x0
  407a83:	call   40faf0 <flatcc_builder_reset@@Base>
  407a88:	xor    ecx,ecx
  407a8a:	test   ebp,ebp
  407a8c:	je     407a93 <gen_monster@@Base+0x73>
  407a8e:	mov    ecx,0x2
  407a93:	lea    rsi,[rip+0xe6a1]        # 41613b <_IO_stdin_used@@Base+0x13b>
  407a9a:	xor    edx,edx
  407a9c:	mov    rdi,rbx
  407a9f:	call   410330 <flatcc_builder_start_buffer@@Base>
  407aa4:	test   eax,eax
  407aa6:	jne    407ab5 <gen_monster@@Base+0x95>
  407aa8:	mov    esi,0x24
  407aad:	mov    rdi,rbx
  407ab0:	call   410fa0 <flatcc_builder_start_table@@Base>
  407ab5:	mov    ecx,0x2
  407aba:	mov    edx,0x2
  407abf:	mov    esi,0x2
  407ac4:	mov    rdi,rbx
  407ac7:	call   412840 <flatcc_builder_table_add@@Base>
  407acc:	test   rax,rax
  407acf:	je     407adb <gen_monster@@Base+0xbb>
  407ad1:	mov    r8d,0x50
  407ad7:	mov    WORD PTR [rax],r8w
  407adb:	xor    esi,esi
  407add:	mov    ecx,0x10
  407ae2:	mov    edx,0x20
  407ae7:	mov    rdi,rbx
  407aea:	call   412840 <flatcc_builder_table_add@@Base>
  407aef:	lea    rsi,[rip+0xe65d]        # 416153 <_IO_stdin_used@@Base+0x153>
  407af6:	mov    DWORD PTR [rax],0x3f800000
  407afc:	mov    DWORD PTR [rax+0x4],0x40000000
  407b03:	mov    DWORD PTR [rax+0x8],0xc04ccccd
  407b0a:	mov    rdi,rbx
  407b0d:	call   4126b0 <flatcc_builder_create_string_str@@Base>
  407b12:	test   eax,eax
  407b14:	mov    ebp,eax
  407b16:	je     407b2c <gen_monster@@Base+0x10c>
  407b18:	mov    esi,0x3
  407b1d:	mov    rdi,rbx
  407b20:	call   412a10 <flatcc_builder_table_add_offset@@Base>
  407b25:	test   rax,rax
  407b28:	je     407b2c <gen_monster@@Base+0x10c>
  407b2a:	mov    DWORD PTR [rax],ebp
  407b2c:	mov    ecx,0x1
  407b31:	mov    edx,0x1
  407b36:	mov    esi,0x6
  407b3b:	mov    rdi,rbx
  407b3e:	call   412840 <flatcc_builder_table_add@@Base>
  407b43:	test   rax,rax
  407b46:	je     407b4b <gen_monster@@Base+0x12b>
  407b48:	mov    BYTE PTR [rax],0x2
  407b4b:	lea    rsi,[rsp+0x1e]
  407b50:	mov    r9d,0xffffffff
  407b56:	mov    r8d,0x1
  407b5c:	mov    ecx,0x1
  407b61:	mov    edx,0xa
  407b66:	mov    rdi,rbx
  407b69:	call   411af0 <flatcc_builder_create_vector@@Base>
  407b6e:	test   eax,eax
  407b70:	mov    ebp,eax
  407b72:	je     407b88 <gen_monster@@Base+0x168>
  407b74:	mov    esi,0x5
  407b79:	mov    rdi,rbx
  407b7c:	call   412a10 <flatcc_builder_table_add_offset@@Base>
  407b81:	test   rax,rax
  407b84:	je     407b88 <gen_monster@@Base+0x168>
  407b86:	mov    DWORD PTR [rax],ebp
  407b88:	mov    edx,0x2
  407b8d:	mov    ecx,0x3fffffff
  407b92:	mov    esi,0x4
  407b97:	mov    rdi,rbx
  407b9a:	call   410d80 <flatcc_builder_start_vector@@Base>
  407b9f:	mov    esi,0x1
  407ba4:	mov    rdi,rbx
  407ba7:	call   4106e0 <flatcc_builder_extend_vector@@Base>
  407bac:	mov    ecx,0x10
  407bb1:	mov    esi,0x2
  407bb6:	mov    rdi,rbx
  407bb9:	mov    WORD PTR [rax],cx
  407bbc:	mov    BYTE PTR [rax+0x2],0x20
  407bc0:	call   4106e0 <flatcc_builder_extend_vector@@Base>
  407bc5:	mov    esi,0x30
  407bca:	mov    edi,0x50
  407bcf:	mov    BYTE PTR [rax+0x2],0x40
  407bd3:	mov    WORD PTR [rax],si
  407bd6:	mov    WORD PTR [rax+0x4],di
  407bda:	mov    esi,0x1
  407bdf:	mov    BYTE PTR [rax+0x6],0x60
  407be3:	mov    rdi,rbx
  407be6:	call   4106e0 <flatcc_builder_extend_vector@@Base>
  407beb:	test   rax,rax
  407bee:	je     407bfc <gen_monster@@Base+0x1dc>
  407bf0:	mov    edx,0x70
  407bf5:	mov    BYTE PTR [rax+0x2],0x80
  407bf9:	mov    WORD PTR [rax],dx
  407bfc:	mov    esi,0x1
  407c01:	mov    rdi,rbx
  407c04:	mov    ebp,0x910190
  407c09:	call   4106e0 <flatcc_builder_extend_vector@@Base>
  407c0e:	test   rax,rax
  407c11:	je     407c15 <gen_monster@@Base+0x1f5>
  407c13:	mov    DWORD PTR [rax],ebp
  407c15:	mov    esi,0x1
  407c1a:	mov    rdi,rbx
  407c1d:	call   4106e0 <flatcc_builder_extend_vector@@Base>
  407c22:	test   rax,rax
  407c25:	je     407c29 <gen_monster@@Base+0x209>
  407c27:	mov    DWORD PTR [rax],ebp
  407c29:	mov    esi,0x1
  407c2e:	mov    rdi,rbx
  407c31:	call   4106e0 <flatcc_builder_extend_vector@@Base>
  407c36:	test   rax,rax
  407c39:	je     407c3d <gen_monster@@Base+0x21d>
  407c3b:	mov    DWORD PTR [rax],ebp
  407c3d:	mov    rdi,rbx
  407c40:	call   411d60 <flatcc_builder_vector_count@@Base>
  407c45:	cmp    rax,0x7
  407c49:	jne    408394 <gen_monster@@Base+0x974>
  407c4f:	mov    esi,0x2
  407c54:	mov    rdi,rbx
  407c57:	call   410bf0 <flatcc_builder_truncate_vector@@Base>
  407c5c:	mov    rdi,rbx
  407c5f:	call   411d60 <flatcc_builder_vector_count@@Base>
  407c64:	cmp    rax,0x5
  407c68:	jne    4083d7 <gen_monster@@Base+0x9b7>
  407c6e:	mov    rdi,rbx
  407c71:	call   411d70 <flatcc_builder_vector_edit@@Base>
  407c76:	add    WORD PTR [rax+0x10],0x1
  407c7b:	mov    rdi,rbx
  407c7e:	call   411c80 <flatcc_builder_end_vector@@Base>
  407c83:	test   eax,eax
  407c85:	mov    ebp,eax
  407c87:	je     407c9d <gen_monster@@Base+0x27d>
  407c89:	mov    esi,0x9
  407c8e:	mov    rdi,rbx
  407c91:	call   412a10 <flatcc_builder_table_add_offset@@Base>
  407c96:	test   rax,rax
  407c99:	je     407c9d <gen_monster@@Base+0x27d>
  407c9b:	mov    DWORD PTR [rax],ebp
  407c9d:	mov    esi,0x24
  407ca2:	mov    rdi,rbx
  407ca5:	call   410fa0 <flatcc_builder_start_table@@Base>
  407caa:	lea    rsi,[rip+0xe638]        # 4162e9 <_IO_stdin_used@@Base+0x2e9>
  407cb1:	mov    edx,0x7
  407cb6:	mov    rdi,rbx
  407cb9:	call   412590 <flatcc_builder_create_string@@Base>
  407cbe:	test   eax,eax
  407cc0:	mov    ebp,eax
  407cc2:	jne    4082f0 <gen_monster@@Base+0x8d0>
  407cc8:	lea    rsi,[rip+0x11921]        # 4195f0 <_IO_stdin_used@@Base+0x35f0>
  407ccf:	mov    edx,0x1
  407cd4:	mov    rdi,rbx
  407cd7:	call   4118e0 <flatcc_builder_check_required@@Base>
  407cdc:	test   eax,eax
  407cde:	je     40836b <gen_monster@@Base+0x94b>
  407ce4:	mov    rdi,rbx
  407ce7:	call   411960 <flatcc_builder_end_table@@Base>
  407cec:	mov    rdi,rbx
  407cef:	mov    ebp,eax
  407cf1:	call   410e00 <flatcc_builder_start_offset_vector@@Base>
  407cf6:	mov    esi,0x2
  407cfb:	mov    rdi,rbx
  407cfe:	call   4108c0 <flatcc_builder_extend_offset_vector@@Base>
  407d03:	mov    esi,0x24
  407d08:	mov    rdi,rbx
  407d0b:	mov    DWORD PTR [rax],ebp
  407d0d:	mov    DWORD PTR [rax+0x4],ebp
  407d10:	call   410fa0 <flatcc_builder_start_table@@Base>
  407d15:	lea    rsi,[rip+0xe5d5]        # 4162f1 <_IO_stdin_used@@Base+0x2f1>
  407d1c:	mov    edx,0x1e
  407d21:	mov    rdi,rbx
  407d24:	call   4126e0 <flatcc_builder_create_string_strn@@Base>
  407d29:	test   eax,eax
  407d2b:	mov    r12d,eax
  407d2e:	je     407d45 <gen_monster@@Base+0x325>
  407d30:	mov    esi,0x3
  407d35:	mov    rdi,rbx
  407d38:	call   412a10 <flatcc_builder_table_add_offset@@Base>
  407d3d:	test   rax,rax
  407d40:	je     407d45 <gen_monster@@Base+0x325>
  407d42:	mov    DWORD PTR [rax],r12d
  407d45:	lea    rsi,[rip+0x118a4]        # 4195f0 <_IO_stdin_used@@Base+0x35f0>
  407d4c:	mov    edx,0x1
  407d51:	mov    rdi,rbx
  407d54:	call   4118e0 <flatcc_builder_check_required@@Base>
  407d59:	test   eax,eax
  407d5b:	je     40836b <gen_monster@@Base+0x94b>
  407d61:	mov    rdi,rbx
  407d64:	call   411960 <flatcc_builder_end_table@@Base>
  407d69:	test   eax,eax
  407d6b:	je     4082e0 <gen_monster@@Base+0x8c0>
  407d71:	mov    esi,eax
  407d73:	mov    rdi,rbx
  407d76:	call   410930 <flatcc_builder_offset_vector_push@@Base>
  407d7b:	mov    r12d,DWORD PTR [rax]
  407d7e:	mov    esi,0x3
  407d83:	mov    rdi,rbx
  407d86:	call   4108c0 <flatcc_builder_extend_offset_vector@@Base>
  407d8b:	mov    esi,0x1
  407d90:	mov    rdi,rbx
  407d93:	mov    DWORD PTR [rax],ebp
  407d95:	mov    DWORD PTR [rax+0x4],r12d
  407d99:	call   410c80 <flatcc_builder_truncate_offset_vector@@Base>
  407d9e:	mov    rdi,rbx
  407da1:	call   411fa0 <flatcc_builder_offset_vector_count@@Base>
  407da6:	cmp    rax,0x5
  407daa:	jne    4083b8 <gen_monster@@Base+0x998>
  407db0:	mov    esi,0x24
  407db5:	mov    rdi,rbx
  407db8:	call   410fa0 <flatcc_builder_start_table@@Base>
  407dbd:	lea    rsi,[rip+0xe619]        # 4163dd <_IO_stdin_used@@Base+0x3dd>
  407dc4:	mov    edx,0x8
  407dc9:	mov    rdi,rbx
  407dcc:	call   4126e0 <flatcc_builder_create_string_strn@@Base>
  407dd1:	test   eax,eax
  407dd3:	mov    r12d,eax
  407dd6:	je     407ded <gen_monster@@Base+0x3cd>
  407dd8:	mov    esi,0x3
  407ddd:	mov    rdi,rbx
  407de0:	call   412a10 <flatcc_builder_table_add_offset@@Base>
  407de5:	test   rax,rax
  407de8:	je     407ded <gen_monster@@Base+0x3cd>
  407dea:	mov    DWORD PTR [rax],r12d
  407ded:	lea    rsi,[rip+0x117fc]        # 4195f0 <_IO_stdin_used@@Base+0x35f0>
  407df4:	mov    edx,0x1
  407df9:	mov    rdi,rbx
  407dfc:	call   4118e0 <flatcc_builder_check_required@@Base>
  407e01:	test   eax,eax
  407e03:	je     40836b <gen_monster@@Base+0x94b>
  407e09:	mov    rdi,rbx
  407e0c:	call   411960 <flatcc_builder_end_table@@Base>
  407e11:	test   eax,eax
  407e13:	je     4082e0 <gen_monster@@Base+0x8c0>
  407e19:	mov    esi,eax
  407e1b:	mov    rdi,rbx
  407e1e:	call   410930 <flatcc_builder_offset_vector_push@@Base>
  407e23:	mov    eax,DWORD PTR [rax]
  407e25:	mov    rdi,rbx
  407e28:	mov    DWORD PTR [rsp+0x4],eax
  407e2c:	call   411fa0 <flatcc_builder_offset_vector_count@@Base>
  407e31:	cmp    rax,0x6
  407e35:	jne    408375 <gen_monster@@Base+0x955>
  407e3b:	mov    rdi,rbx
  407e3e:	call   411f90 <flatcc_builder_offset_vector_edit@@Base>
  407e43:	mov    edx,DWORD PTR [rax+0x14]
  407e46:	mov    ecx,DWORD PTR [rax+0x8]
  407e49:	lea    rsi,[rsp+0x4]
  407e4e:	mov    rdi,rbx
  407e51:	mov    DWORD PTR [rax+0x14],ebp
  407e54:	mov    DWORD PTR [rsp+0x8],ecx
  407e58:	mov    DWORD PTR [rax],edx
  407e5a:	mov    edx,0x2
  407e5f:	call   4109b0 <flatcc_builder_append_offset_vector@@Base>
  407e64:	mov    rdi,rbx
  407e67:	call   411d90 <flatcc_builder_end_offset_vector@@Base>
  407e6c:	test   eax,eax
  407e6e:	mov    r12d,eax
  407e71:	je     407e88 <gen_monster@@Base+0x468>
  407e73:	mov    esi,0xb
  407e78:	mov    rdi,rbx
  407e7b:	call   412a10 <flatcc_builder_table_add_offset@@Base>
  407e80:	test   rax,rax
  407e83:	je     407e88 <gen_monster@@Base+0x468>
  407e85:	mov    DWORD PTR [rax],r12d
  407e88:	lea    rsi,[rip+0xe471]        # 416300 <_IO_stdin_used@@Base+0x300>
  407e8f:	mov    rdi,rbx
  407e92:	call   4126b0 <flatcc_builder_create_string_str@@Base>
  407e97:	lea    rsi,[rip+0x10ea2]        # 418d40 <_IO_stdin_used@@Base+0x2d40>
  407e9e:	mov    edx,0x2
  407ea3:	mov    rdi,rbx
  407ea6:	mov    DWORD PTR [rsp+0xc],eax
  407eaa:	call   412590 <flatcc_builder_create_string@@Base>
  407eaf:	lea    rsi,[rip+0xe482]        # 416338 <_IO_stdin_used@@Base+0x338>
  407eb6:	mov    rdi,rbx
  407eb9:	mov    DWORD PTR [rsp+0x10],eax
  407ebd:	call   4126b0 <flatcc_builder_create_string_str@@Base>
  407ec2:	lea    rsi,[rsp+0xc]
  407ec7:	mov    edx,0x3
  407ecc:	mov    rdi,rbx
  407ecf:	mov    DWORD PTR [rsp+0x14],eax
  407ed3:	call   411e60 <flatcc_builder_create_offset_vector@@Base>
  407ed8:	test   eax,eax
  407eda:	mov    r12d,eax
  407edd:	je     407ef4 <gen_monster@@Base+0x4d4>
  407edf:	mov    esi,0xa
  407ee4:	mov    rdi,rbx
  407ee7:	call   412a10 <flatcc_builder_table_add_offset@@Base>
  407eec:	test   rax,rax
  407eef:	je     407ef4 <gen_monster@@Base+0x4d4>
  407ef1:	mov    DWORD PTR [rax],r12d
  407ef4:	lea    r12,[rsp+0x1a]
  407ef9:	mov    ecx,0xffffffff
  407efe:	mov    edx,0x1
  407f03:	mov    esi,0x1
  407f08:	mov    rdi,rbx
  407f0b:	call   410d80 <flatcc_builder_start_vector@@Base>
  407f10:	mov    rsi,r12
  407f13:	mov    edx,0x1
  407f18:	mov    rdi,rbx
  407f1b:	call   410810 <flatcc_builder_append_vector@@Base>
  407f20:	lea    rsi,[r12+0x1]
  407f25:	mov    edx,0x3
  407f2a:	mov    rdi,rbx
  407f2d:	call   410810 <flatcc_builder_append_vector@@Base>
  407f32:	mov    rdi,rbx
  407f35:	call   411c80 <flatcc_builder_end_vector@@Base>
  407f3a:	test   eax,eax
  407f3c:	mov    r12d,eax
  407f3f:	je     407f56 <gen_monster@@Base+0x536>
  407f41:	mov    esi,0x18
  407f46:	mov    rdi,rbx
  407f49:	call   412a10 <flatcc_builder_table_add_offset@@Base>
  407f4e:	test   rax,rax
  407f51:	je     407f56 <gen_monster@@Base+0x536>
  407f53:	mov    DWORD PTR [rax],r12d
  407f56:	test   ebp,ebp
  407f58:	je     408310 <gen_monster@@Base+0x8f0>
  407f5e:	mov    ecx,0x1
  407f63:	mov    edx,0x1
  407f68:	mov    esi,0x7
  407f6d:	mov    rdi,rbx
  407f70:	call   412840 <flatcc_builder_table_add@@Base>
  407f75:	test   rax,rax
  407f78:	mov    r12,rax
  407f7b:	je     407f96 <gen_monster@@Base+0x576>
  407f7d:	mov    esi,0x8
  407f82:	mov    rdi,rbx
  407f85:	call   412a10 <flatcc_builder_table_add_offset@@Base>
  407f8a:	test   rax,rax
  407f8d:	je     407f96 <gen_monster@@Base+0x576>
  407f8f:	mov    BYTE PTR [r12],0x1
  407f94:	mov    DWORD PTR [rax],ebp
  407f96:	mov    esi,0x24
  407f9b:	mov    rdi,rbx
  407f9e:	call   410fa0 <flatcc_builder_start_table@@Base>
  407fa3:	lea    rsi,[rip+0xe3c8]        # 416372 <_IO_stdin_used@@Base+0x372>
  407faa:	mov    rdi,rbx
  407fad:	call   4126b0 <flatcc_builder_create_string_str@@Base>
  407fb2:	test   eax,eax
  407fb4:	mov    r12d,eax
  407fb7:	je     408351 <gen_monster@@Base+0x931>
  407fbd:	mov    esi,0x3
  407fc2:	mov    rdi,rbx
  407fc5:	call   412a10 <flatcc_builder_table_add_offset@@Base>
  407fca:	test   rax,rax
  407fcd:	je     408351 <gen_monster@@Base+0x931>
  407fd3:	mov    rdi,rbx
  407fd6:	mov    DWORD PTR [rax],r12d
  407fd9:	call   410e00 <flatcc_builder_start_offset_vector@@Base>
  407fde:	mov    esi,0x24
  407fe3:	mov    rdi,rbx
  407fe6:	call   410fa0 <flatcc_builder_start_table@@Base>
  407feb:	test   ebp,ebp
  407fed:	je     408027 <gen_monster@@Base+0x607>
  407fef:	mov    ecx,0x1
  407ff4:	mov    edx,0x1
  407ff9:	mov    esi,0x7
  407ffe:	mov    rdi,rbx
  408001:	call   412840 <flatcc_builder_table_add@@Base>
  408006:	test   rax,rax
  408009:	mov    r12,rax
  40800c:	je     408027 <gen_monster@@Base+0x607>
  40800e:	mov    esi,0x8
  408013:	mov    rdi,rbx
  408016:	call   412a10 <flatcc_builder_table_add_offset@@Base>
  40801b:	test   rax,rax
  40801e:	je     408027 <gen_monster@@Base+0x607>
  408020:	mov    BYTE PTR [r12],0x1
  408025:	mov    DWORD PTR [rax],ebp
  408027:	lea    rsi,[rip+0xe3cb]        # 4163f9 <_IO_stdin_used@@Base+0x3f9>
  40802e:	mov    rdi,rbx
  408031:	call   4126b0 <flatcc_builder_create_string_str@@Base>
  408036:	test   eax,eax
  408038:	mov    r12d,eax
  40803b:	je     408052 <gen_monster@@Base+0x632>
  40803d:	mov    esi,0x3
  408042:	mov    rdi,rbx
  408045:	call   412a10 <flatcc_builder_table_add_offset@@Base>
  40804a:	test   rax,rax
  40804d:	je     408052 <gen_monster@@Base+0x632>
  40804f:	mov    DWORD PTR [rax],r12d
  408052:	lea    rsi,[rip+0x11597]        # 4195f0 <_IO_stdin_used@@Base+0x35f0>
  408059:	mov    edx,0x1
  40805e:	mov    rdi,rbx
  408061:	call   4118e0 <flatcc_builder_check_required@@Base>
  408066:	test   eax,eax
  408068:	je     40836b <gen_monster@@Base+0x94b>
  40806e:	mov    rdi,rbx
  408071:	call   411960 <flatcc_builder_end_table@@Base>
  408076:	test   eax,eax
  408078:	je     408084 <gen_monster@@Base+0x664>
  40807a:	mov    esi,eax
  40807c:	mov    rdi,rbx
  40807f:	call   410930 <flatcc_builder_offset_vector_push@@Base>
  408084:	mov    esi,0x24
  408089:	mov    rdi,rbx
  40808c:	call   410fa0 <flatcc_builder_start_table@@Base>
  408091:	test   ebp,ebp
  408093:	je     4080cd <gen_monster@@Base+0x6ad>
  408095:	mov    ecx,0x1
  40809a:	mov    edx,0x1
  40809f:	mov    esi,0x7
  4080a4:	mov    rdi,rbx
  4080a7:	call   412840 <flatcc_builder_table_add@@Base>
  4080ac:	test   rax,rax
  4080af:	mov    r12,rax
  4080b2:	je     4080cd <gen_monster@@Base+0x6ad>
  4080b4:	mov    esi,0x8
  4080b9:	mov    rdi,rbx
  4080bc:	call   412a10 <flatcc_builder_table_add_offset@@Base>
  4080c1:	test   rax,rax
  4080c4:	je     4080cd <gen_monster@@Base+0x6ad>
  4080c6:	mov    BYTE PTR [r12],0x1
  4080cb:	mov    DWORD PTR [rax],ebp
  4080cd:	lea    rsi,[rip+0xe325]        # 4163f9 <_IO_stdin_used@@Base+0x3f9>
  4080d4:	mov    rdi,rbx
  4080d7:	call   4126b0 <flatcc_builder_create_string_str@@Base>
  4080dc:	test   eax,eax
  4080de:	mov    r12d,eax
  4080e1:	je     4080f8 <gen_monster@@Base+0x6d8>
  4080e3:	mov    esi,0x3
  4080e8:	mov    rdi,rbx
  4080eb:	call   412a10 <flatcc_builder_table_add_offset@@Base>
  4080f0:	test   rax,rax
  4080f3:	je     4080f8 <gen_monster@@Base+0x6d8>
  4080f5:	mov    DWORD PTR [rax],r12d
  4080f8:	lea    rsi,[rip+0x114f1]        # 4195f0 <_IO_stdin_used@@Base+0x35f0>
  4080ff:	mov    edx,0x1
  408104:	mov    rdi,rbx
  408107:	call   4118e0 <flatcc_builder_check_required@@Base>
  40810c:	test   eax,eax
  40810e:	je     40836b <gen_monster@@Base+0x94b>
  408114:	mov    rdi,rbx
  408117:	call   411960 <flatcc_builder_end_table@@Base>
  40811c:	test   eax,eax
  40811e:	je     40812a <gen_monster@@Base+0x70a>
  408120:	mov    esi,eax
  408122:	mov    rdi,rbx
  408125:	call   410930 <flatcc_builder_offset_vector_push@@Base>
  40812a:	mov    esi,0x24
  40812f:	mov    rdi,rbx
  408132:	call   410fa0 <flatcc_builder_start_table@@Base>
  408137:	mov    esi,0x8
  40813c:	mov    rdi,rbx
  40813f:	call   412a10 <flatcc_builder_table_add_offset@@Base>
  408144:	test   rax,rax
  408147:	je     40814b <gen_monster@@Base+0x72b>
  408149:	mov    DWORD PTR [rax],ebp
  40814b:	lea    rsi,[rip+0xe2a7]        # 4163f9 <_IO_stdin_used@@Base+0x3f9>
  408152:	mov    rdi,rbx
  408155:	call   4126b0 <flatcc_builder_create_string_str@@Base>
  40815a:	test   eax,eax
  40815c:	mov    ebp,eax
  40815e:	je     408174 <gen_monster@@Base+0x754>
  408160:	mov    esi,0x3
  408165:	mov    rdi,rbx
  408168:	call   412a10 <flatcc_builder_table_add_offset@@Base>
  40816d:	test   rax,rax
  408170:	je     408174 <gen_monster@@Base+0x754>
  408172:	mov    DWORD PTR [rax],ebp
  408174:	mov    ecx,0x1
  408179:	mov    edx,0x1
  40817e:	mov    esi,0x7
  408183:	mov    rdi,rbx
  408186:	call   412840 <flatcc_builder_table_add@@Base>
  40818b:	test   rax,rax
  40818e:	je     408193 <gen_monster@@Base+0x773>
  408190:	mov    BYTE PTR [rax],0x1
  408193:	lea    rsi,[rip+0x11456]        # 4195f0 <_IO_stdin_used@@Base+0x35f0>
  40819a:	mov    edx,0x1
  40819f:	mov    rdi,rbx
  4081a2:	call   4118e0 <flatcc_builder_check_required@@Base>
  4081a7:	test   eax,eax
  4081a9:	je     40836b <gen_monster@@Base+0x94b>
  4081af:	mov    rdi,rbx
  4081b2:	call   411960 <flatcc_builder_end_table@@Base>
  4081b7:	test   eax,eax
  4081b9:	je     4081c5 <gen_monster@@Base+0x7a5>
  4081bb:	mov    esi,eax
  4081bd:	mov    rdi,rbx
  4081c0:	call   410930 <flatcc_builder_offset_vector_push@@Base>
  4081c5:	mov    rdi,rbx
  4081c8:	call   411d90 <flatcc_builder_end_offset_vector@@Base>
  4081cd:	test   eax,eax
  4081cf:	mov    ebp,eax
  4081d1:	je     4081e7 <gen_monster@@Base+0x7c7>
  4081d3:	mov    esi,0xb
  4081d8:	mov    rdi,rbx
  4081db:	call   412a10 <flatcc_builder_table_add_offset@@Base>
  4081e0:	test   rax,rax
  4081e3:	je     4081e7 <gen_monster@@Base+0x7c7>
  4081e5:	mov    DWORD PTR [rax],ebp
  4081e7:	lea    rsi,[rip+0x11402]        # 4195f0 <_IO_stdin_used@@Base+0x35f0>
  4081ee:	mov    edx,0x1
  4081f3:	mov    rdi,rbx
  4081f6:	call   4118e0 <flatcc_builder_check_required@@Base>
  4081fb:	test   eax,eax
  4081fd:	je     40836b <gen_monster@@Base+0x94b>
  408203:	mov    rdi,rbx
  408206:	call   411960 <flatcc_builder_end_table@@Base>
  40820b:	test   eax,eax
  40820d:	mov    ebp,eax
  40820f:	je     408225 <gen_monster@@Base+0x805>
  408211:	mov    esi,0xc
  408216:	mov    rdi,rbx
  408219:	call   412a10 <flatcc_builder_table_add_offset@@Base>
  40821e:	test   rax,rax
  408221:	je     408225 <gen_monster@@Base+0x805>
  408223:	mov    DWORD PTR [rax],ebp
  408225:	mov    ecx,0x1
  40822a:	mov    edx,0x1
  40822f:	mov    esi,0xf
  408234:	mov    rdi,rbx
  408237:	call   412840 <flatcc_builder_table_add@@Base>
  40823c:	test   rax,rax
  40823f:	je     408244 <gen_monster@@Base+0x824>
  408241:	mov    BYTE PTR [rax],0x0
  408244:	mov    esi,0x3
  408249:	mov    rdi,rbx
  40824c:	call   410fa0 <flatcc_builder_start_table@@Base>
  408251:	lea    rsi,[rip+0x1139e]        # 4195f6 <_IO_stdin_used@@Base+0x35f6>
  408258:	xor    edx,edx
  40825a:	mov    rdi,rbx
  40825d:	call   4118e0 <flatcc_builder_check_required@@Base>
  408262:	test   eax,eax
  408264:	je     4083b3 <gen_monster@@Base+0x993>
  40826a:	mov    rdi,rbx
  40826d:	call   411960 <flatcc_builder_end_table@@Base>
  408272:	test   eax,eax
  408274:	mov    ebp,eax
  408276:	je     40828c <gen_monster@@Base+0x86c>
  408278:	mov    esi,0xe
  40827d:	mov    rdi,rbx
  408280:	call   412a10 <flatcc_builder_table_add_offset@@Base>
  408285:	test   rax,rax
  408288:	je     40828c <gen_monster@@Base+0x86c>
  40828a:	mov    DWORD PTR [rax],ebp
  40828c:	lea    rsi,[rip+0x1135d]        # 4195f0 <_IO_stdin_used@@Base+0x35f0>
  408293:	mov    edx,0x1
  408298:	mov    rdi,rbx
  40829b:	call   4118e0 <flatcc_builder_check_required@@Base>
  4082a0:	test   eax,eax
  4082a2:	je     40836b <gen_monster@@Base+0x94b>
  4082a8:	mov    rdi,rbx
  4082ab:	call   411960 <flatcc_builder_end_table@@Base>
  4082b0:	mov    rdi,rbx
  4082b3:	mov    esi,eax
  4082b5:	call   410410 <flatcc_builder_end_buffer@@Base>
  4082ba:	xor    eax,eax
  4082bc:	mov    rcx,QWORD PTR [rsp+0x28]
  4082c1:	xor    rcx,QWORD PTR fs:0x28
  4082ca:	jne    408370 <gen_monster@@Base+0x950>
  4082d0:	add    rsp,0x30
  4082d4:	pop    rbx
  4082d5:	pop    rbp
  4082d6:	pop    r12
  4082d8:	ret    
  4082d9:	nop    DWORD PTR [rax+0x0]
  4082e0:	mov    eax,DWORD PTR ds:0x0
  4082e7:	ud2    
  4082e9:	nop    DWORD PTR [rax+0x0]
  4082f0:	mov    esi,0x3
  4082f5:	mov    rdi,rbx
  4082f8:	call   412a10 <flatcc_builder_table_add_offset@@Base>
  4082fd:	test   rax,rax
  408300:	je     407cc8 <gen_monster@@Base+0x2a8>
  408306:	mov    DWORD PTR [rax],ebp
  408308:	jmp    407cc8 <gen_monster@@Base+0x2a8>
  40830d:	nop    DWORD PTR [rax]
  408310:	mov    esi,0x24
  408315:	mov    rdi,rbx
  408318:	call   410fa0 <flatcc_builder_start_table@@Base>
  40831d:	lea    rsi,[rip+0xe04e]        # 416372 <_IO_stdin_used@@Base+0x372>
  408324:	mov    rdi,rbx
  408327:	call   4126b0 <flatcc_builder_create_string_str@@Base>
  40832c:	test   eax,eax
  40832e:	mov    r12d,eax
  408331:	jne    4083f6 <gen_monster@@Base+0x9d6>
  408337:	mov    rdi,rbx
  40833a:	call   410e00 <flatcc_builder_start_offset_vector@@Base>
  40833f:	mov    esi,0x24
  408344:	mov    rdi,rbx
  408347:	call   410fa0 <flatcc_builder_start_table@@Base>
  40834c:	jmp    408027 <gen_monster@@Base+0x607>
  408351:	mov    rdi,rbx
  408354:	call   410e00 <flatcc_builder_start_offset_vector@@Base>
  408359:	mov    esi,0x24
  40835e:	mov    rdi,rbx
  408361:	call   410fa0 <flatcc_builder_start_table@@Base>
  408366:	jmp    407fef <gen_monster@@Base+0x5cf>
  40836b:	call   4045a4 <posix_memalign@plt+0x474>
  408370:	call   404070 <__stack_chk_fail@plt>
  408375:	lea    rcx,[rip+0x10e0c]        # 419188 <_IO_stdin_used@@Base+0x3188>
  40837c:	lea    rsi,[rip+0xf065]        # 4173e8 <_IO_stdin_used@@Base+0x13e8>
  408383:	lea    rdi,[rip+0xf496]        # 417820 <_IO_stdin_used@@Base+0x1820>
  40838a:	mov    edx,0x3a1
  40838f:	call   404090 <__assert_fail@plt>
  408394:	lea    rcx,[rip+0x10ded]        # 419188 <_IO_stdin_used@@Base+0x3188>
  40839b:	lea    rsi,[rip+0xf046]        # 4173e8 <_IO_stdin_used@@Base+0x13e8>
  4083a2:	lea    rdi,[rip+0xf3ef]        # 417798 <_IO_stdin_used@@Base+0x1798>
  4083a9:	mov    edx,0x371
  4083ae:	call   404090 <__assert_fail@plt>
  4083b3:	call   4045c7 <posix_memalign@plt+0x497>
  4083b8:	lea    rcx,[rip+0x10dc9]        # 419188 <_IO_stdin_used@@Base+0x3188>
  4083bf:	lea    rsi,[rip+0xf022]        # 4173e8 <_IO_stdin_used@@Base+0x13e8>
  4083c6:	lea    rdi,[rip+0xf41b]        # 4177e8 <_IO_stdin_used@@Base+0x17e8>
  4083cd:	mov    edx,0x39b
  4083d2:	call   404090 <__assert_fail@plt>
  4083d7:	lea    rcx,[rip+0x10daa]        # 419188 <_IO_stdin_used@@Base+0x3188>
  4083de:	lea    rsi,[rip+0xf003]        # 4173e8 <_IO_stdin_used@@Base+0x13e8>
  4083e5:	lea    rdi,[rip+0xf3d4]        # 4177c0 <_IO_stdin_used@@Base+0x17c0>
  4083ec:	mov    edx,0x373
  4083f1:	call   404090 <__assert_fail@plt>
  4083f6:	mov    esi,0x3
  4083fb:	mov    rdi,rbx
  4083fe:	call   412a10 <flatcc_builder_table_add_offset@@Base>
  408403:	test   rax,rax
  408406:	jne    407fd3 <gen_monster@@Base+0x5b3>
  40840c:	jmp    408337 <gen_monster@@Base+0x917>
  408411:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40841c:	nop    DWORD PTR [rax+0x0]

0000000000408420 <test_monster@@Base>:
  408420:	push   rbp
  408421:	push   rbx
  408422:	xor    esi,esi
  408424:	mov    rbx,rdi
  408427:	sub    rsp,0x18
  40842b:	mov    rax,QWORD PTR fs:0x28
  408434:	mov    QWORD PTR [rsp+0x8],rax
  408439:	xor    eax,eax
  40843b:	call   407a20 <gen_monster@@Base>
  408440:	mov    rdi,rbx
  408443:	mov    rsi,rsp
  408446:	call   413000 <flatcc_builder_finalize_aligned_buffer@@Base>
  40844b:	mov    rbx,rax
  40844e:	mov    rax,QWORD PTR [rip+0x16ba3]        # 41eff8 <stderr@GLIBC_2.2.5>
  408455:	mov    rdx,QWORD PTR [rsp]
  408459:	lea    rdi,[rip+0xdd39]        # 416199 <_IO_stdin_used@@Base+0x199>
  408460:	mov    rsi,rbx
  408463:	mov    rcx,QWORD PTR [rax]
  408466:	call   4049a0 <_start@@Base+0x150>
  40846b:	mov    rsi,QWORD PTR [rsp]
  40846f:	lea    rcx,[rip+0xffffffffffffcbea]        # 405060 <_start@@Base+0x810>
  408476:	lea    rdx,[rip+0xdcbe]        # 41613b <_IO_stdin_used@@Base+0x13b>
  40847d:	mov    rdi,rbx
  408480:	call   414720 <flatcc_verify_table_as_root@@Base>
  408485:	test   eax,eax
  408487:	jne    4084b8 <test_monster@@Base+0x98>
  408489:	mov    rdi,rbx
  40848c:	call   406c80 <verify_monster@@Base>
  408491:	mov    rdi,rbx
  408494:	mov    ebp,eax
  408496:	call   413150 <flatcc_builder_aligned_free@@Base>
  40849b:	mov    rcx,QWORD PTR [rsp+0x8]
  4084a0:	xor    rcx,QWORD PTR fs:0x28
  4084a9:	mov    eax,ebp
  4084ab:	jne    4084dc <test_monster@@Base+0xbc>
  4084ad:	add    rsp,0x18
  4084b1:	pop    rbx
  4084b2:	pop    rbp
  4084b3:	ret    
  4084b4:	nop    DWORD PTR [rax+0x0]
  4084b8:	mov    edi,eax
  4084ba:	mov    ebp,0xffffffff
  4084bf:	call   413890 <flatcc_verify_error_string@@Base>
  4084c4:	lea    rsi,[rip+0xf38d]        # 417858 <_IO_stdin_used@@Base+0x1858>
  4084cb:	mov    rdx,rax
  4084ce:	mov    edi,0x1
  4084d3:	xor    eax,eax
  4084d5:	call   404110 <__printf_chk@plt>
  4084da:	jmp    40849b <test_monster@@Base+0x7b>
  4084dc:	call   404070 <__stack_chk_fail@plt>
  4084e1:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4084ec:	nop    DWORD PTR [rax+0x0]

00000000004084f0 <test_monster_with_size@@Base>:
  4084f0:	push   rbp
  4084f1:	push   rbx
  4084f2:	mov    esi,0x1
  4084f7:	mov    rbx,rdi
  4084fa:	sub    rsp,0x18
  4084fe:	mov    rax,QWORD PTR fs:0x28
  408507:	mov    QWORD PTR [rsp+0x8],rax
  40850c:	xor    eax,eax
  40850e:	call   407a20 <gen_monster@@Base>
  408513:	mov    rdi,rbx
  408516:	mov    rsi,rsp
  408519:	call   413000 <flatcc_builder_finalize_aligned_buffer@@Base>
  40851e:	mov    rbx,rax
  408521:	mov    rax,QWORD PTR [rip+0x16ad0]        # 41eff8 <stderr@GLIBC_2.2.5>
  408528:	mov    rdx,QWORD PTR [rsp]
  40852c:	lea    rdi,[rip+0xdecf]        # 416402 <_IO_stdin_used@@Base+0x402>
  408533:	mov    rsi,rbx
  408536:	mov    rcx,QWORD PTR [rax]
  408539:	call   4049a0 <_start@@Base+0x150>
  40853e:	test   bl,0xf
  408541:	jne    4085f0 <test_monster_with_size@@Base+0x100>
  408547:	mov    rax,QWORD PTR [rsp]
  40854b:	mov    edx,DWORD PTR [rbx]
  40854d:	lea    rbp,[rbx+0x4]
  408551:	lea    rsi,[rax-0x4]
  408555:	mov    eax,edx
  408557:	cmp    rsi,rax
  40855a:	jne    4085a8 <test_monster_with_size@@Base+0xb8>
  40855c:	lea    rcx,[rip+0xffffffffffffcafd]        # 405060 <_start@@Base+0x810>
  408563:	lea    rdx,[rip+0xdbd1]        # 41613b <_IO_stdin_used@@Base+0x13b>
  40856a:	mov    rdi,rbp
  40856d:	call   414720 <flatcc_verify_table_as_root@@Base>
  408572:	test   eax,eax
  408574:	jne    4085c8 <test_monster_with_size@@Base+0xd8>
  408576:	mov    rdi,rbp
  408579:	call   406c80 <verify_monster@@Base>
  40857e:	mov    rdi,rbx
  408581:	mov    ebp,eax
  408583:	call   413150 <flatcc_builder_aligned_free@@Base>
  408588:	mov    rcx,QWORD PTR [rsp+0x8]
  40858d:	xor    rcx,QWORD PTR fs:0x28
  408596:	mov    eax,ebp
  408598:	jne    408622 <test_monster_with_size@@Base+0x132>
  40859e:	add    rsp,0x18
  4085a2:	pop    rbx
  4085a3:	pop    rbp
  4085a4:	ret    
  4085a5:	nop    DWORD PTR [rax]
  4085a8:	mov    ecx,esi
  4085aa:	lea    rsi,[rip+0xf32f]        # 4178e0 <_IO_stdin_used@@Base+0x18e0>
  4085b1:	mov    edi,0x1
  4085b6:	xor    eax,eax
  4085b8:	mov    ebp,0xffffffff
  4085bd:	call   404110 <__printf_chk@plt>
  4085c2:	jmp    408588 <test_monster_with_size@@Base+0x98>
  4085c4:	nop    DWORD PTR [rax+0x0]
  4085c8:	mov    edi,eax
  4085ca:	mov    ebp,0xffffffff
  4085cf:	call   413890 <flatcc_verify_error_string@@Base>
  4085d4:	lea    rsi,[rip+0xf33d]        # 417918 <_IO_stdin_used@@Base+0x1918>
  4085db:	mov    rdx,rax
  4085de:	mov    edi,0x1
  4085e3:	xor    eax,eax
  4085e5:	call   404110 <__printf_chk@plt>
  4085ea:	jmp    408588 <test_monster_with_size@@Base+0x98>
  4085ec:	nop    DWORD PTR [rax+0x0]
  4085f0:	lea    rsi,[rip+0xf291]        # 417888 <_IO_stdin_used@@Base+0x1888>
  4085f7:	mov    edi,0x1
  4085fc:	xor    eax,eax
  4085fe:	mov    ebp,0xffffffff
  408603:	call   404110 <__printf_chk@plt>
  408608:	lea    rsi,[rip+0xde0b]        # 41641a <_IO_stdin_used@@Base+0x41a>
  40860f:	mov    edx,ebx
  408611:	mov    edi,0x1
  408616:	xor    eax,eax
  408618:	call   404110 <__printf_chk@plt>
  40861d:	jmp    408588 <test_monster_with_size@@Base+0x98>
  408622:	call   404070 <__stack_chk_fail@plt>
  408627:	nop    WORD PTR [rax+rax*1+0x0]

0000000000408630 <test_string@@Base>:
  408630:	push   rbp
  408631:	push   rbx
  408632:	mov    rbx,rdi
  408635:	sub    rsp,0x8
  408639:	call   40faf0 <flatcc_builder_reset@@Base>
  40863e:	lea    rsi,[rip+0xdaf6]        # 41613b <_IO_stdin_used@@Base+0x13b>
  408645:	xor    ecx,ecx
  408647:	xor    edx,edx
  408649:	mov    rdi,rbx
  40864c:	call   410330 <flatcc_builder_start_buffer@@Base>
  408651:	test   eax,eax
  408653:	jne    408662 <test_string@@Base+0x32>
  408655:	mov    esi,0x24
  40865a:	mov    rdi,rbx
  40865d:	call   410fa0 <flatcc_builder_start_table@@Base>
  408662:	mov    rdi,rbx
  408665:	call   410e60 <flatcc_builder_start_string@@Base>
  40866a:	mov    esi,0x3
  40866f:	mov    rdi,rbx
  408672:	call   410a60 <flatcc_builder_extend_string@@Base>
  408677:	lea    rsi,[rip+0xdfed]        # 41666b <_IO_stdin_used@@Base+0x66b>
  40867e:	mov    rdi,rbx
  408681:	mov    BYTE PTR [rax],0x31
  408684:	mov    BYTE PTR [rax+0x1],0x32
  408688:	mov    BYTE PTR [rax+0x2],0x33
  40868c:	call   410b80 <flatcc_builder_append_string_str@@Base>
  408691:	mov    rdi,rbx
  408694:	call   412830 <flatcc_builder_string_len@@Base>
  408699:	cmp    rax,0x4
  40869d:	jne    40889b <test_string@@Base+0x26b>
  4086a3:	lea    rsi,[rip+0xdd84]        # 41642e <_IO_stdin_used@@Base+0x42e>
  4086aa:	mov    edx,0x1e
  4086af:	mov    rdi,rbx
  4086b2:	call   410bb0 <flatcc_builder_append_string_strn@@Base>
  4086b7:	mov    rdi,rbx
  4086ba:	call   412830 <flatcc_builder_string_len@@Base>
  4086bf:	cmp    rax,0x8
  4086c3:	jne    40887c <test_string@@Base+0x24c>
  4086c9:	lea    rsi,[rip+0xdd63]        # 416433 <_IO_stdin_used@@Base+0x433>
  4086d0:	mov    edx,0x2
  4086d5:	mov    rdi,rbx
  4086d8:	call   410ae0 <flatcc_builder_append_string@@Base>
  4086dd:	mov    rdi,rbx
  4086e0:	call   412830 <flatcc_builder_string_len@@Base>
  4086e5:	cmp    rax,0xa
  4086e9:	jne    40885d <test_string@@Base+0x22d>
  4086ef:	mov    esi,0x3
  4086f4:	mov    rdi,rbx
  4086f7:	call   410d00 <flatcc_builder_truncate_string@@Base>
  4086fc:	mov    rdi,rbx
  4086ff:	call   412830 <flatcc_builder_string_len@@Base>
  408704:	cmp    rax,0x7
  408708:	jne    40883e <test_string@@Base+0x20e>
  40870e:	mov    rdi,rbx
  408711:	call   412820 <flatcc_builder_string_edit@@Base>
  408716:	mov    rdi,rbx
  408719:	mov    BYTE PTR [rax+0x4],0x2e
  40871d:	call   412720 <flatcc_builder_end_string@@Base>
  408722:	test   eax,eax
  408724:	mov    ebp,eax
  408726:	je     40873c <test_string@@Base+0x10c>
  408728:	mov    esi,0x3
  40872d:	mov    rdi,rbx
  408730:	call   412a10 <flatcc_builder_table_add_offset@@Base>
  408735:	test   rax,rax
  408738:	je     40873c <test_string@@Base+0x10c>
  40873a:	mov    DWORD PTR [rax],ebp
  40873c:	lea    rsi,[rip+0x10ead]        # 4195f0 <_IO_stdin_used@@Base+0x35f0>
  408743:	mov    edx,0x1
  408748:	mov    rdi,rbx
  40874b:	call   4118e0 <flatcc_builder_check_required@@Base>
  408750:	test   eax,eax
  408752:	je     408839 <test_string@@Base+0x209>
  408758:	mov    rdi,rbx
  40875b:	call   411960 <flatcc_builder_end_table@@Base>
  408760:	mov    rdi,rbx
  408763:	mov    esi,eax
  408765:	call   410410 <flatcc_builder_end_buffer@@Base>
  40876a:	xor    esi,esi
  40876c:	mov    rdi,rbx
  40876f:	call   412ed0 <flatcc_builder_get_direct_buffer@@Base>
  408774:	test   rax,rax
  408777:	je     40881a <test_string@@Base+0x1ea>
  40877d:	cmp    DWORD PTR [rax+0x4],0x534e4f4d
  408784:	je     408790 <test_string@@Base+0x160>
  408786:	call   40432a <posix_memalign@plt+0x1fa>
  40878b:	nop    DWORD PTR [rax+rax*1+0x0]
  408790:	mov    edx,DWORD PTR [rax]
  408792:	add    rax,rdx
  408795:	je     408786 <test_string@@Base+0x156>
  408797:	movsxd rdx,DWORD PTR [rax]
  40879a:	mov    rcx,rax
  40879d:	sub    rcx,rdx
  4087a0:	cmp    WORD PTR [rcx],0xb
  4087a4:	ja     4087c8 <test_string@@Base+0x198>
  4087a6:	lea    rcx,[rip+0x10a63]        # 419210 <_IO_stdin_used@@Base+0x3210>
  4087ad:	lea    rsi,[rip+0xe224]        # 4169d8 <_IO_stdin_used@@Base+0x9d8>
  4087b4:	lea    rdi,[rip+0xe385]        # 416b40 <_IO_stdin_used@@Base+0xb40>
  4087bb:	mov    edx,0x2bb
  4087c0:	call   404090 <__assert_fail@plt>
  4087c5:	nop    DWORD PTR [rax]
  4087c8:	movzx  edx,WORD PTR [rcx+0xa]
  4087cc:	test   dx,dx
  4087cf:	je     4087a6 <test_string@@Base+0x176>
  4087d1:	add    rax,rdx
  4087d4:	lea    rdi,[rip+0xdc5b]        # 416436 <_IO_stdin_used@@Base+0x436>
  4087db:	mov    ecx,0x8
  4087e0:	mov    edx,DWORD PTR [rax]
  4087e2:	lea    rsi,[rax+rdx*1+0x4]
  4087e7:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  4087e9:	seta   al
  4087ec:	setb   dl
  4087ef:	sub    eax,edx
  4087f1:	movsx  eax,al
  4087f4:	test   eax,eax
  4087f6:	jne    408800 <test_string@@Base+0x1d0>
  4087f8:	add    rsp,0x8
  4087fc:	pop    rbx
  4087fd:	pop    rbp
  4087fe:	ret    
  4087ff:	nop
  408800:	lea    rsi,[rip+0xdc37]        # 41643e <_IO_stdin_used@@Base+0x43e>
  408807:	mov    edi,0x1
  40880c:	xor    eax,eax
  40880e:	call   404110 <__printf_chk@plt>
  408813:	mov    eax,0xffffffff
  408818:	jmp    4087f8 <test_string@@Base+0x1c8>
  40881a:	lea    rcx,[rip+0x1093f]        # 419160 <_IO_stdin_used@@Base+0x3160>
  408821:	lea    rsi,[rip+0xebc0]        # 4173e8 <_IO_stdin_used@@Base+0x13e8>
  408828:	lea    rdi,[rip+0xde2b]        # 41665a <_IO_stdin_used@@Base+0x65a>
  40882f:	mov    edx,0x445
  408834:	call   404090 <__assert_fail@plt>
  408839:	call   4045a4 <posix_memalign@plt+0x474>
  40883e:	lea    rcx,[rip+0x1091b]        # 419160 <_IO_stdin_used@@Base+0x3160>
  408845:	lea    rsi,[rip+0xeb9c]        # 4173e8 <_IO_stdin_used@@Base+0x13e8>
  40884c:	lea    rdi,[rip+0xf17d]        # 4179d0 <_IO_stdin_used@@Base+0x19d0>
  408853:	mov    edx,0x43e
  408858:	call   404090 <__assert_fail@plt>
  40885d:	lea    rcx,[rip+0x108fc]        # 419160 <_IO_stdin_used@@Base+0x3160>
  408864:	lea    rsi,[rip+0xeb7d]        # 4173e8 <_IO_stdin_used@@Base+0x13e8>
  40886b:	lea    rdi,[rip+0xf136]        # 4179a8 <_IO_stdin_used@@Base+0x19a8>
  408872:	mov    edx,0x43c
  408877:	call   404090 <__assert_fail@plt>
  40887c:	lea    rcx,[rip+0x108dd]        # 419160 <_IO_stdin_used@@Base+0x3160>
  408883:	lea    rsi,[rip+0xeb5e]        # 4173e8 <_IO_stdin_used@@Base+0x13e8>
  40888a:	lea    rdi,[rip+0xf0ef]        # 417980 <_IO_stdin_used@@Base+0x1980>
  408891:	mov    edx,0x43a
  408896:	call   404090 <__assert_fail@plt>
  40889b:	lea    rcx,[rip+0x108be]        # 419160 <_IO_stdin_used@@Base+0x3160>
  4088a2:	lea    rsi,[rip+0xeb3f]        # 4173e8 <_IO_stdin_used@@Base+0x13e8>
  4088a9:	lea    rdi,[rip+0xf0a8]        # 417958 <_IO_stdin_used@@Base+0x1958>
  4088b0:	mov    edx,0x438
  4088b5:	call   404090 <__assert_fail@plt>
  4088ba:	nop    WORD PTR [rax+rax*1+0x0]

00000000004088c0 <test_sort_find@@Base>:
  4088c0:	push   r15
  4088c2:	push   r14
  4088c4:	push   r13
  4088c6:	push   r12
  4088c8:	push   rbp
  4088c9:	push   rbx
  4088ca:	mov    rbx,rdi
  4088cd:	sub    rsp,0x58
  4088d1:	mov    rax,QWORD PTR fs:0x28
  4088da:	mov    QWORD PTR [rsp+0x48],rax
  4088df:	xor    eax,eax
  4088e1:	call   40faf0 <flatcc_builder_reset@@Base>
  4088e6:	lea    rsi,[rip+0xd84e]        # 41613b <_IO_stdin_used@@Base+0x13b>
  4088ed:	xor    ecx,ecx
  4088ef:	xor    edx,edx
  4088f1:	mov    rdi,rbx
  4088f4:	call   410330 <flatcc_builder_start_buffer@@Base>
  4088f9:	test   eax,eax
  4088fb:	jne    40890a <test_sort_find@@Base+0x4a>
  4088fd:	mov    esi,0x24
  408902:	mov    rdi,rbx
  408905:	call   410fa0 <flatcc_builder_start_table@@Base>
  40890a:	lea    rsi,[rip+0xd842]        # 416153 <_IO_stdin_used@@Base+0x153>
  408911:	mov    rdi,rbx
  408914:	call   4126b0 <flatcc_builder_create_string_str@@Base>
  408919:	test   eax,eax
  40891b:	mov    ebp,eax
  40891d:	je     408933 <test_sort_find@@Base+0x73>
  40891f:	mov    esi,0x3
  408924:	mov    rdi,rbx
  408927:	call   412a10 <flatcc_builder_table_add_offset@@Base>
  40892c:	test   rax,rax
  40892f:	je     408933 <test_sort_find@@Base+0x73>
  408931:	mov    DWORD PTR [rax],ebp
  408933:	mov    rdi,rbx
  408936:	call   410e00 <flatcc_builder_start_offset_vector@@Base>
  40893b:	mov    esi,0x24
  408940:	mov    rdi,rbx
  408943:	call   410fa0 <flatcc_builder_start_table@@Base>
  408948:	lea    rsi,[rip+0xd99a]        # 4162e9 <_IO_stdin_used@@Base+0x2e9>
  40894f:	mov    rdi,rbx
  408952:	call   4126b0 <flatcc_builder_create_string_str@@Base>
  408957:	test   eax,eax
  408959:	mov    ebp,eax
  40895b:	je     408971 <test_sort_find@@Base+0xb1>
  40895d:	mov    esi,0x3
  408962:	mov    rdi,rbx
  408965:	call   412a10 <flatcc_builder_table_add_offset@@Base>
  40896a:	test   rax,rax
  40896d:	je     408971 <test_sort_find@@Base+0xb1>
  40896f:	mov    DWORD PTR [rax],ebp
  408971:	lea    rsi,[rip+0x10c78]        # 4195f0 <_IO_stdin_used@@Base+0x35f0>
  408978:	mov    edx,0x1
  40897d:	mov    rdi,rbx
  408980:	call   4118e0 <flatcc_builder_check_required@@Base>
  408985:	test   eax,eax
  408987:	je     409e85 <test_sort_find@@Base+0x15c5>
  40898d:	mov    rdi,rbx
  408990:	call   411960 <flatcc_builder_end_table@@Base>
  408995:	test   eax,eax
  408997:	je     4089a3 <test_sort_find@@Base+0xe3>
  408999:	mov    esi,eax
  40899b:	mov    rdi,rbx
  40899e:	call   410930 <flatcc_builder_offset_vector_push@@Base>
  4089a3:	mov    esi,0x24
  4089a8:	mov    rdi,rbx
  4089ab:	call   410fa0 <flatcc_builder_start_table@@Base>
  4089b0:	lea    rsi,[rip+0xd93a]        # 4162f1 <_IO_stdin_used@@Base+0x2f1>
  4089b7:	mov    rdi,rbx
  4089ba:	call   4126b0 <flatcc_builder_create_string_str@@Base>
  4089bf:	test   eax,eax
  4089c1:	mov    ebp,eax
  4089c3:	je     4089d9 <test_sort_find@@Base+0x119>
  4089c5:	mov    esi,0x3
  4089ca:	mov    rdi,rbx
  4089cd:	call   412a10 <flatcc_builder_table_add_offset@@Base>
  4089d2:	test   rax,rax
  4089d5:	je     4089d9 <test_sort_find@@Base+0x119>
  4089d7:	mov    DWORD PTR [rax],ebp
  4089d9:	lea    rsi,[rip+0x10c10]        # 4195f0 <_IO_stdin_used@@Base+0x35f0>
  4089e0:	mov    edx,0x1
  4089e5:	mov    rdi,rbx
  4089e8:	call   4118e0 <flatcc_builder_check_required@@Base>
  4089ed:	test   eax,eax
  4089ef:	je     409e85 <test_sort_find@@Base+0x15c5>
  4089f5:	mov    rdi,rbx
  4089f8:	call   411960 <flatcc_builder_end_table@@Base>
  4089fd:	test   eax,eax
  4089ff:	je     408a0b <test_sort_find@@Base+0x14b>
  408a01:	mov    esi,eax
  408a03:	mov    rdi,rbx
  408a06:	call   410930 <flatcc_builder_offset_vector_push@@Base>
  408a0b:	mov    esi,0x24
  408a10:	mov    rdi,rbx
  408a13:	call   410fa0 <flatcc_builder_start_table@@Base>
  408a18:	lea    rsi,[rip+0xd8d8]        # 4162f7 <_IO_stdin_used@@Base+0x2f7>
  408a1f:	mov    rdi,rbx
  408a22:	call   4126b0 <flatcc_builder_create_string_str@@Base>
  408a27:	test   eax,eax
  408a29:	mov    ebp,eax
  408a2b:	je     408a41 <test_sort_find@@Base+0x181>
  408a2d:	mov    esi,0x3
  408a32:	mov    rdi,rbx
  408a35:	call   412a10 <flatcc_builder_table_add_offset@@Base>
  408a3a:	test   rax,rax
  408a3d:	je     408a41 <test_sort_find@@Base+0x181>
  408a3f:	mov    DWORD PTR [rax],ebp
  408a41:	lea    rsi,[rip+0x10ba8]        # 4195f0 <_IO_stdin_used@@Base+0x35f0>
  408a48:	mov    edx,0x1
  408a4d:	mov    rdi,rbx
  408a50:	call   4118e0 <flatcc_builder_check_required@@Base>
  408a55:	test   eax,eax
  408a57:	je     409e85 <test_sort_find@@Base+0x15c5>
  408a5d:	mov    rdi,rbx
  408a60:	call   411960 <flatcc_builder_end_table@@Base>
  408a65:	test   eax,eax
  408a67:	je     408a73 <test_sort_find@@Base+0x1b3>
  408a69:	mov    esi,eax
  408a6b:	mov    rdi,rbx
  408a6e:	call   410930 <flatcc_builder_offset_vector_push@@Base>
  408a73:	mov    esi,0x24
  408a78:	mov    rdi,rbx
  408a7b:	call   410fa0 <flatcc_builder_start_table@@Base>
  408a80:	lea    rsi,[rip+0xd9cb]        # 416452 <_IO_stdin_used@@Base+0x452>
  408a87:	mov    rdi,rbx
  408a8a:	call   4126b0 <flatcc_builder_create_string_str@@Base>
  408a8f:	test   eax,eax
  408a91:	mov    ebp,eax
  408a93:	je     408aa9 <test_sort_find@@Base+0x1e9>
  408a95:	mov    esi,0x3
  408a9a:	mov    rdi,rbx
  408a9d:	call   412a10 <flatcc_builder_table_add_offset@@Base>
  408aa2:	test   rax,rax
  408aa5:	je     408aa9 <test_sort_find@@Base+0x1e9>
  408aa7:	mov    DWORD PTR [rax],ebp
  408aa9:	lea    rsi,[rip+0x10b40]        # 4195f0 <_IO_stdin_used@@Base+0x35f0>
  408ab0:	mov    edx,0x1
  408ab5:	mov    rdi,rbx
  408ab8:	call   4118e0 <flatcc_builder_check_required@@Base>
  408abd:	test   eax,eax
  408abf:	je     409e85 <test_sort_find@@Base+0x15c5>
  408ac5:	mov    rdi,rbx
  408ac8:	call   411960 <flatcc_builder_end_table@@Base>
  408acd:	test   eax,eax
  408acf:	je     408adb <test_sort_find@@Base+0x21b>
  408ad1:	mov    esi,eax
  408ad3:	mov    rdi,rbx
  408ad6:	call   410930 <flatcc_builder_offset_vector_push@@Base>
  408adb:	mov    esi,0x24
  408ae0:	mov    rdi,rbx
  408ae3:	call   410fa0 <flatcc_builder_start_table@@Base>
  408ae8:	lea    rsi,[rip+0xd808]        # 4162f7 <_IO_stdin_used@@Base+0x2f7>
  408aef:	mov    rdi,rbx
  408af2:	call   4126b0 <flatcc_builder_create_string_str@@Base>
  408af7:	test   eax,eax
  408af9:	mov    ebp,eax
  408afb:	je     408b11 <test_sort_find@@Base+0x251>
  408afd:	mov    esi,0x3
  408b02:	mov    rdi,rbx
  408b05:	call   412a10 <flatcc_builder_table_add_offset@@Base>
  408b0a:	test   rax,rax
  408b0d:	je     408b11 <test_sort_find@@Base+0x251>
  408b0f:	mov    DWORD PTR [rax],ebp
  408b11:	lea    rsi,[rip+0x10ad8]        # 4195f0 <_IO_stdin_used@@Base+0x35f0>
  408b18:	mov    edx,0x1
  408b1d:	mov    rdi,rbx
  408b20:	call   4118e0 <flatcc_builder_check_required@@Base>
  408b25:	test   eax,eax
  408b27:	je     409e85 <test_sort_find@@Base+0x15c5>
  408b2d:	mov    rdi,rbx
  408b30:	call   411960 <flatcc_builder_end_table@@Base>
  408b35:	test   eax,eax
  408b37:	je     408b43 <test_sort_find@@Base+0x283>
  408b39:	mov    esi,eax
  408b3b:	mov    rdi,rbx
  408b3e:	call   410930 <flatcc_builder_offset_vector_push@@Base>
  408b43:	mov    rdi,rbx
  408b46:	call   411d90 <flatcc_builder_end_offset_vector@@Base>
  408b4b:	test   eax,eax
  408b4d:	mov    ebp,eax
  408b4f:	je     408b65 <test_sort_find@@Base+0x2a5>
  408b51:	mov    esi,0xb
  408b56:	mov    rdi,rbx
  408b59:	call   412a10 <flatcc_builder_table_add_offset@@Base>
  408b5e:	test   rax,rax
  408b61:	je     408b65 <test_sort_find@@Base+0x2a5>
  408b63:	mov    DWORD PTR [rax],ebp
  408b65:	lea    rsi,[rip+0x10a84]        # 4195f0 <_IO_stdin_used@@Base+0x35f0>
  408b6c:	mov    edx,0x1
  408b71:	mov    rdi,rbx
  408b74:	call   4118e0 <flatcc_builder_check_required@@Base>
  408b79:	test   eax,eax
  408b7b:	je     409e85 <test_sort_find@@Base+0x15c5>
  408b81:	mov    rdi,rbx
  408b84:	call   411960 <flatcc_builder_end_table@@Base>
  408b89:	mov    rdi,rbx
  408b8c:	mov    esi,eax
  408b8e:	call   410410 <flatcc_builder_end_buffer@@Base>
  408b93:	lea    rsi,[rsp+0x40]
  408b98:	mov    rdi,rbx
  408b9b:	call   413000 <flatcc_builder_finalize_aligned_buffer@@Base>
  408ba0:	mov    rbx,QWORD PTR [rip+0x16451]        # 41eff8 <stderr@GLIBC_2.2.5>
  408ba7:	mov    rdx,QWORD PTR [rsp+0x40]
  408bac:	lea    rdi,[rip+0xd8a5]        # 416458 <_IO_stdin_used@@Base+0x458>
  408bb3:	mov    rsi,rax
  408bb6:	mov    QWORD PTR [rsp+0x30],rax
  408bbb:	mov    rcx,QWORD PTR [rbx]
  408bbe:	mov    rbx,rax
  408bc1:	call   4049a0 <_start@@Base+0x150>
  408bc6:	test   rbx,rbx
  408bc9:	je     408bd4 <test_sort_find@@Base+0x314>
  408bcb:	cmp    DWORD PTR [rbx+0x4],0x534e4f4d
  408bd2:	je     408be0 <test_sort_find@@Base+0x320>
  408bd4:	call   4042c1 <posix_memalign@plt+0x191>
  408bd9:	nop    DWORD PTR [rax+0x0]
  408be0:	mov    rbx,QWORD PTR [rsp+0x30]
  408be5:	mov    eax,DWORD PTR [rbx]
  408be7:	add    rax,rbx
  408bea:	je     408bd4 <test_sort_find@@Base+0x314>
  408bec:	movsxd rdx,DWORD PTR [rax]
  408bef:	mov    rbx,rax
  408bf2:	sub    rbx,rdx
  408bf5:	cmp    WORD PTR [rbx],0x1b
  408bf9:	ja     408c20 <test_sort_find@@Base+0x360>
  408bfb:	lea    rcx,[rip+0x1054e]        # 419150 <_IO_stdin_used@@Base+0x3150>
  408c02:	lea    rsi,[rip+0xe7df]        # 4173e8 <_IO_stdin_used@@Base+0x13e8>
  408c09:	lea    rdi,[rip+0xd860]        # 416470 <_IO_stdin_used@@Base+0x470>
  408c10:	mov    edx,0x47b
  408c15:	call   404090 <__assert_fail@plt>
  408c1a:	nop    WORD PTR [rax+rax*1+0x0]
  408c20:	movzx  edx,WORD PTR [rbx+0x1a]
  408c24:	test   dx,dx
  408c27:	je     408bfb <test_sort_find@@Base+0x33b>
  408c29:	add    rax,rdx
  408c2c:	mov    edx,DWORD PTR [rax]
  408c2e:	lea    r12,[rax+rdx*1+0x4]
  408c33:	test   r12,r12
  408c36:	je     408bfb <test_sort_find@@Base+0x33b>
  408c38:	mov    eax,DWORD PTR [r12-0x4]
  408c3d:	test   rax,rax
  408c40:	mov    QWORD PTR [rsp+0x38],rax
  408c45:	je     408e83 <test_sort_find@@Base+0x5c3>
  408c4b:	lea    r14,[rax-0x1]
  408c4f:	shr    rax,1
  408c52:	mov    QWORD PTR [rsp+0x8],rax
  408c57:	add    rax,rax
  408c5a:	mov    QWORD PTR [rsp+0x28],rax
  408c5f:	mov    QWORD PTR [rsp],r14
  408c63:	jmp    408d76 <test_sort_find@@Base+0x4b6>
  408c68:	nop    DWORD PTR [rax+rax*1+0x0]
  408c70:	mov    ecx,DWORD PTR [r12-0x4]
  408c75:	mov    r14,rbp
  408c78:	cmp    rcx,rbx
  408c7b:	lea    rbp,[r12+rbx*4]
  408c7f:	jbe    409697 <test_sort_find@@Base+0xdd7>
  408c85:	mov    eax,DWORD PTR [rbp+0x0]
  408c88:	mov    r15,rax
  408c8b:	add    rax,rbp
  408c8e:	je     409692 <test_sort_find@@Base+0xdd2>
  408c94:	movsxd rdx,DWORD PTR [rax]
  408c97:	mov    rdi,rax
  408c9a:	sub    rdi,rdx
  408c9d:	cmp    WORD PTR [rdi],0xb
  408ca1:	jbe    409168 <test_sort_find@@Base+0x8a8>
  408ca7:	movzx  edx,WORD PTR [rdi+0xa]
  408cab:	test   dx,dx
  408cae:	je     409168 <test_sort_find@@Base+0x8a8>
  408cb4:	add    rax,rdx
  408cb7:	cmp    rcx,r14
  408cba:	lea    r13,[r12+r14*4]
  408cbe:	mov    edx,DWORD PTR [rax]
  408cc0:	lea    rdi,[rax+rdx*1+0x4]
  408cc5:	jbe    409697 <test_sort_find@@Base+0xdd7>
  408ccb:	mov    eax,DWORD PTR [r13+0x0]
  408ccf:	mov    rcx,rax
  408cd2:	add    rax,r13
  408cd5:	je     409692 <test_sort_find@@Base+0xdd2>
  408cdb:	movsxd rdx,DWORD PTR [rax]
  408cde:	mov    rsi,rax
  408ce1:	sub    rsi,rdx
  408ce4:	cmp    WORD PTR [rsi],0xb
  408ce8:	jbe    409168 <test_sort_find@@Base+0x8a8>
  408cee:	movzx  edx,WORD PTR [rsi+0xa]
  408cf2:	test   dx,dx
  408cf5:	je     409168 <test_sort_find@@Base+0x8a8>
  408cfb:	add    rax,rdx
  408cfe:	mov    edx,DWORD PTR [rax]
  408d00:	lea    rsi,[rax+rdx*1+0x4]
  408d05:	test   rsi,rsi
  408d08:	je     4091e0 <test_sort_find@@Base+0x920>
  408d0e:	mov    r9d,DWORD PTR [rsi-0x4]
  408d12:	test   rdi,rdi
  408d15:	je     4091d0 <test_sort_find@@Base+0x910>
  408d1b:	mov    r10d,DWORD PTR [rdi-0x4]
  408d1f:	mov    rdx,r9
  408d22:	mov    DWORD PTR [rsp+0x20],ecx
  408d26:	mov    QWORD PTR [rsp+0x18],r9
  408d2b:	cmp    r10,r9
  408d2e:	mov    QWORD PTR [rsp+0x10],r10
  408d33:	cmovbe rdx,r10
  408d37:	call   404050 <strncmp@plt>
  408d3c:	test   eax,eax
  408d3e:	mov    r10,QWORD PTR [rsp+0x10]
  408d43:	mov    r9,QWORD PTR [rsp+0x18]
  408d48:	mov    ecx,DWORD PTR [rsp+0x20]
  408d4c:	jne    409190 <test_sort_find@@Base+0x8d0>
  408d52:	cmp    r9,r10
  408d55:	ja     409196 <test_sort_find@@Base+0x8d6>
  408d5b:	sub    QWORD PTR [rsp+0x8],0x1
  408d61:	sub    QWORD PTR [rsp+0x28],0x2
  408d67:	mov    rax,QWORD PTR [rsp+0x8]
  408d6c:	cmp    rax,0xffffffffffffffff
  408d70:	je     409210 <test_sort_find@@Base+0x950>
  408d76:	mov    rbx,QWORD PTR [rsp+0x28]
  408d7b:	cmp    QWORD PTR [rsp],rbx
  408d7f:	jb     408d5b <test_sort_find@@Base+0x49b>
  408d81:	mov    rbx,QWORD PTR [rsp+0x8]
  408d86:	mov    rbp,QWORD PTR [rsp+0x28]
  408d8b:	nop    DWORD PTR [rax+rax*1+0x0]
  408d90:	cmp    QWORD PTR [rsp],rbp
  408d94:	jbe    408c70 <test_sort_find@@Base+0x3b0>
  408d9a:	mov    ecx,DWORD PTR [r12-0x4]
  408d9f:	lea    rsi,[rbp*4+0x0]
  408da7:	lea    rax,[r12+rsi*1]
  408dab:	cmp    rcx,rbp
  408dae:	jbe    409697 <test_sort_find@@Base+0xdd7>
  408db4:	mov    edx,DWORD PTR [rax]
  408db6:	add    rax,rdx
  408db9:	je     409692 <test_sort_find@@Base+0xdd2>
  408dbf:	movsxd rdx,DWORD PTR [rax]
  408dc2:	mov    rdi,rax
  408dc5:	sub    rdi,rdx
  408dc8:	cmp    WORD PTR [rdi],0xb
  408dcc:	jbe    409168 <test_sort_find@@Base+0x8a8>
  408dd2:	movzx  edx,WORD PTR [rdi+0xa]
  408dd6:	test   dx,dx
  408dd9:	je     409168 <test_sort_find@@Base+0x8a8>
  408ddf:	add    rax,rdx
  408de2:	lea    r14,[rbp+0x1]
  408de6:	mov    edx,DWORD PTR [rax]
  408de8:	cmp    rcx,r14
  408deb:	lea    rdi,[rax+rdx*1+0x4]
  408df0:	lea    rax,[r12+rsi*1+0x4]
  408df5:	jbe    409697 <test_sort_find@@Base+0xdd7>
  408dfb:	mov    edx,DWORD PTR [rax]
  408dfd:	add    rax,rdx
  408e00:	je     409692 <test_sort_find@@Base+0xdd2>
  408e06:	movsxd rdx,DWORD PTR [rax]
  408e09:	mov    rsi,rax
  408e0c:	sub    rsi,rdx
  408e0f:	cmp    WORD PTR [rsi],0xb
  408e13:	jbe    409168 <test_sort_find@@Base+0x8a8>
  408e19:	movzx  edx,WORD PTR [rsi+0xa]
  408e1d:	test   dx,dx
  408e20:	je     409168 <test_sort_find@@Base+0x8a8>
  408e26:	add    rax,rdx
  408e29:	mov    edx,DWORD PTR [rax]
  408e2b:	lea    rsi,[rax+rdx*1+0x4]
  408e30:	test   rsi,rsi
  408e33:	je     409200 <test_sort_find@@Base+0x940>
  408e39:	mov    r15d,DWORD PTR [rsi-0x4]
  408e3d:	test   rdi,rdi
  408e40:	je     4091f0 <test_sort_find@@Base+0x930>
  408e46:	mov    r13d,DWORD PTR [rdi-0x4]
  408e4a:	mov    rdx,r15
  408e4d:	mov    QWORD PTR [rsp+0x10],rcx
  408e52:	cmp    r13,r15
  408e55:	cmovbe rdx,r13
  408e59:	call   404050 <strncmp@plt>
  408e5e:	test   eax,eax
  408e60:	mov    rcx,QWORD PTR [rsp+0x10]
  408e65:	jne    4091c0 <test_sort_find@@Base+0x900>
  408e6b:	cmp    r15,r13
  408e6e:	cmovbe r14,rbp
  408e72:	jmp    408c78 <test_sort_find@@Base+0x3b8>
  408e77:	nop    WORD PTR [rax+rax*1+0x0]
  408e80:	mov    r12,rbp
  408e83:	mov    rax,QWORD PTR [rip+0x1616e]        # 41eff8 <stderr@GLIBC_2.2.5>
  408e8a:	mov    rdx,QWORD PTR [rsp+0x40]
  408e8f:	lea    rdi,[rip+0xd5c4]        # 41645a <_IO_stdin_used@@Base+0x45a>
  408e96:	mov    rsi,QWORD PTR [rsp+0x30]
  408e9b:	mov    rcx,QWORD PTR [rax]
  408e9e:	call   4049a0 <_start@@Base+0x150>
  408ea3:	cmp    DWORD PTR [r12-0x4],0x5
  408ea9:	jne    409d84 <test_sort_find@@Base+0x14c4>
  408eaf:	mov    eax,DWORD PTR [r12]
  408eb3:	add    rax,r12
  408eb6:	je     409692 <test_sort_find@@Base+0xdd2>
  408ebc:	movsxd rdx,DWORD PTR [rax]
  408ebf:	mov    rbx,rax
  408ec2:	sub    rbx,rdx
  408ec5:	cmp    WORD PTR [rbx],0xb
  408ec9:	jbe    409168 <test_sort_find@@Base+0x8a8>
  408ecf:	movzx  edx,WORD PTR [rbx+0xa]
  408ed3:	test   dx,dx
  408ed6:	je     409168 <test_sort_find@@Base+0x8a8>
  408edc:	add    rax,rdx
  408edf:	lea    rdi,[rip+0xd56c]        # 416452 <_IO_stdin_used@@Base+0x452>
  408ee6:	mov    ecx,0x6
  408eeb:	mov    edx,DWORD PTR [rax]
  408eed:	lea    rsi,[rax+rdx*1+0x4]
  408ef2:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  408ef4:	jne    409e20 <test_sort_find@@Base+0x1560>
  408efa:	mov    r8d,DWORD PTR [r12+0x4]
  408eff:	mov    rax,r12
  408f02:	add    r8,0x4
  408f06:	add    rax,r8
  408f09:	je     409692 <test_sort_find@@Base+0xdd2>
  408f0f:	movsxd rdx,DWORD PTR [rax]
  408f12:	mov    rbx,rax
  408f15:	sub    rbx,rdx
  408f18:	cmp    WORD PTR [rbx],0xb
  408f1c:	jbe    409168 <test_sort_find@@Base+0x8a8>
  408f22:	movzx  edx,WORD PTR [rbx+0xa]
  408f26:	test   dx,dx
  408f29:	je     409168 <test_sort_find@@Base+0x8a8>
  408f2f:	add    rax,rdx
  408f32:	lea    r9,[rip+0xd3be]        # 4162f7 <_IO_stdin_used@@Base+0x2f7>
  408f39:	mov    ecx,0x9
  408f3e:	mov    edx,DWORD PTR [rax]
  408f40:	mov    rdi,r9
  408f43:	lea    rsi,[rax+rdx*1+0x4]
  408f48:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  408f4a:	jne    409e40 <test_sort_find@@Base+0x1580>
  408f50:	mov    edx,DWORD PTR [r12+0x8]
  408f55:	mov    rax,r12
  408f58:	add    rdx,0x8
  408f5c:	add    rax,rdx
  408f5f:	je     409692 <test_sort_find@@Base+0xdd2>
  408f65:	movsxd rcx,DWORD PTR [rax]
  408f68:	mov    rbx,rax
  408f6b:	sub    rbx,rcx
  408f6e:	cmp    WORD PTR [rbx],0xb
  408f72:	jbe    409168 <test_sort_find@@Base+0x8a8>
  408f78:	movzx  ecx,WORD PTR [rbx+0xa]
  408f7c:	test   cx,cx
  408f7f:	je     409168 <test_sort_find@@Base+0x8a8>
  408f85:	add    rax,rcx
  408f88:	mov    rdi,r9
  408f8b:	mov    ecx,DWORD PTR [rax]
  408f8d:	lea    rsi,[rax+rcx*1+0x4]
  408f92:	mov    ecx,0x9
  408f97:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  408f99:	jne    409e60 <test_sort_find@@Base+0x15a0>
  408f9f:	mov    eax,DWORD PTR [r12+0xc]
  408fa4:	lea    rax,[r12+rax*1+0xc]
  408fa9:	test   rax,rax
  408fac:	je     409692 <test_sort_find@@Base+0xdd2>
  408fb2:	movsxd rcx,DWORD PTR [rax]
  408fb5:	mov    rbx,rax
  408fb8:	sub    rbx,rcx
  408fbb:	cmp    WORD PTR [rbx],0xb
  408fbf:	jbe    409168 <test_sort_find@@Base+0x8a8>
  408fc5:	movzx  ecx,WORD PTR [rbx+0xa]
  408fc9:	test   cx,cx
  408fcc:	je     409168 <test_sort_find@@Base+0x8a8>
  408fd2:	add    rax,rcx
  408fd5:	lea    rdi,[rip+0xd315]        # 4162f1 <_IO_stdin_used@@Base+0x2f1>
  408fdc:	mov    ecx,DWORD PTR [rax]
  408fde:	lea    rsi,[rax+rcx*1+0x4]
  408fe3:	mov    ecx,0x6
  408fe8:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  408fea:	jne    409de0 <test_sort_find@@Base+0x1520>
  408ff0:	mov    eax,DWORD PTR [r12+0x10]
  408ff5:	lea    rax,[r12+rax*1+0x10]
  408ffa:	test   rax,rax
  408ffd:	je     409692 <test_sort_find@@Base+0xdd2>
  409003:	movsxd rcx,DWORD PTR [rax]
  409006:	mov    rbx,rax
  409009:	sub    rbx,rcx
  40900c:	cmp    WORD PTR [rbx],0xb
  409010:	jbe    409168 <test_sort_find@@Base+0x8a8>
  409016:	movzx  ecx,WORD PTR [rbx+0xa]
  40901a:	test   cx,cx
  40901d:	je     409168 <test_sort_find@@Base+0x8a8>
  409023:	add    rax,rcx
  409026:	lea    rdi,[rip+0xd2bc]        # 4162e9 <_IO_stdin_used@@Base+0x2e9>
  40902d:	mov    ecx,DWORD PTR [rax]
  40902f:	lea    rsi,[rax+rcx*1+0x4]
  409034:	mov    ecx,0x8
  409039:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  40903b:	jne    409e00 <test_sort_find@@Base+0x1540>
  409041:	cmp    r8,rdx
  409044:	je     409da4 <test_sort_find@@Base+0x14e4>
  40904a:	lea    rsi,[rip+0xd2a0]        # 4162f1 <_IO_stdin_used@@Base+0x2f1>
  409051:	mov    rdi,r12
  409054:	xor    ebx,ebx
  409056:	mov    ebp,0x4
  40905b:	call   405c90 <_start@@Base+0x1440>
  409060:	cmp    rax,0x3
  409064:	lea    r11,[rip+0xd4a4]        # 41650f <_IO_stdin_used@@Base+0x50f>
  40906b:	mov    r10d,0x5
  409071:	mov    r9d,0x7
  409077:	jne    4096b6 <test_sort_find@@Base+0xdf6>
  40907d:	mov    r8,rbp
  409080:	sub    r8,rbx
  409083:	shr    r8,1
  409086:	add    r8,rbx
  409089:	cmp    r8,0x4
  40908d:	lea    rax,[r12+r8*4]
  409091:	ja     409697 <test_sort_find@@Base+0xdd7>
  409097:	mov    edx,DWORD PTR [rax]
  409099:	add    rax,rdx
  40909c:	je     409692 <test_sort_find@@Base+0xdd2>
  4090a2:	movsxd rdx,DWORD PTR [rax]
  4090a5:	mov    rcx,rax
  4090a8:	sub    rcx,rdx
  4090ab:	cmp    WORD PTR [rcx],0xb
  4090af:	ja     4090c3 <test_sort_find@@Base+0x803>
  4090b1:	jmp    409168 <test_sort_find@@Base+0x8a8>
  4090b6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4090c0:	mov    r8,rdx
  4090c3:	movzx  edx,WORD PTR [rcx+0xa]
  4090c7:	test   dx,dx
  4090ca:	je     409168 <test_sort_find@@Base+0x8a8>
  4090d0:	add    rax,rdx
  4090d3:	mov    edx,DWORD PTR [rax]
  4090d5:	lea    rsi,[rax+rdx*1+0x4]
  4090da:	test   rsi,rsi
  4090dd:	je     4094e0 <test_sort_find@@Base+0xc20>
  4090e3:	mov    edx,DWORD PTR [rsi-0x4]
  4090e6:	mov    rcx,r10
  4090e9:	mov    rdi,r11
  4090ec:	cmp    rdx,0x5
  4090f0:	cmovbe rcx,rdx
  4090f4:	cmp    rcx,0x7
  4090f8:	cmovg  rcx,r9
  4090fc:	cmp    rcx,rcx
  4090ff:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  409101:	seta   al
  409104:	setb   cl
  409107:	sub    eax,ecx
  409109:	movsx  eax,al
  40910c:	test   eax,eax
  40910e:	jne    4094d0 <test_sort_find@@Base+0xc10>
  409114:	cmp    rdx,0x4
  409118:	jbe    4094e0 <test_sort_find@@Base+0xc20>
  40911e:	cmp    r8,rbx
  409121:	jbe    4094f0 <test_sort_find@@Base+0xc30>
  409127:	mov    rdx,r8
  40912a:	sub    rdx,rbx
  40912d:	shr    rdx,1
  409130:	add    rdx,rbx
  409133:	cmp    rdx,0x4
  409137:	lea    rax,[r12+rdx*4]
  40913b:	ja     409697 <test_sort_find@@Base+0xdd7>
  409141:	mov    ecx,DWORD PTR [rax]
  409143:	add    rax,rcx
  409146:	je     409692 <test_sort_find@@Base+0xdd2>
  40914c:	movsxd rcx,DWORD PTR [rax]
  40914f:	mov    rdi,rax
  409152:	mov    rbp,r8
  409155:	sub    rdi,rcx
  409158:	cmp    WORD PTR [rdi],0xb
  40915c:	mov    rcx,rdi
  40915f:	ja     4090c0 <test_sort_find@@Base+0x800>
  409165:	nop    DWORD PTR [rax]
  409168:	lea    rcx,[rip+0x100a1]        # 419210 <_IO_stdin_used@@Base+0x3210>
  40916f:	lea    rsi,[rip+0xd862]        # 4169d8 <_IO_stdin_used@@Base+0x9d8>
  409176:	lea    rdi,[rip+0xd9c3]        # 416b40 <_IO_stdin_used@@Base+0xb40>
  40917d:	mov    edx,0x2bb
  409182:	call   404090 <__assert_fail@plt>
  409187:	nop    WORD PTR [rax+rax*1+0x0]
  409190:	jns    408d5b <test_sort_find@@Base+0x49b>
  409196:	sub    rbx,r14
  409199:	shl    ebx,0x2
  40919c:	sub    ecx,ebx
  40919e:	add    r15d,ebx
  4091a1:	mov    rbx,r14
  4091a4:	mov    DWORD PTR [rbp+0x0],ecx
  4091a7:	lea    rbp,[r14+r14*1]
  4091ab:	cmp    QWORD PTR [rsp],rbp
  4091af:	mov    DWORD PTR [r13+0x0],r15d
  4091b3:	jae    408d90 <test_sort_find@@Base+0x4d0>
  4091b9:	jmp    408d5b <test_sort_find@@Base+0x49b>
  4091be:	xchg   ax,ax
  4091c0:	cmovns r14,rbp
  4091c4:	jmp    408c78 <test_sort_find@@Base+0x3b8>
  4091c9:	nop    DWORD PTR [rax+0x0]
  4091d0:	xor    r10d,r10d
  4091d3:	jmp    408d52 <test_sort_find@@Base+0x492>
  4091d8:	nop    DWORD PTR [rax+rax*1+0x0]
  4091e0:	xor    r9d,r9d
  4091e3:	jmp    408d12 <test_sort_find@@Base+0x452>
  4091e8:	nop    DWORD PTR [rax+rax*1+0x0]
  4091f0:	xor    r13d,r13d
  4091f3:	jmp    408e6b <test_sort_find@@Base+0x5ab>
  4091f8:	nop    DWORD PTR [rax+rax*1+0x0]
  409200:	xor    r15d,r15d
  409203:	jmp    408e3d <test_sort_find@@Base+0x57d>
  409208:	nop    DWORD PTR [rax+rax*1+0x0]
  409210:	mov    r14,QWORD PTR [rsp]
  409214:	test   r14,r14
  409217:	je     408e83 <test_sort_find@@Base+0x5c3>
  40921d:	mov    r15d,0x1
  409223:	sub    r15,QWORD PTR [rsp+0x38]
  409228:	mov    rbp,r12
  40922b:	lea    eax,[r15*4+0x0]
  409233:	mov    DWORD PTR [rsp+0x20],eax
  409237:	jmp    409341 <test_sort_find@@Base+0xa81>
  40923c:	nop    DWORD PTR [rax+0x0]
  409240:	mov    ecx,DWORD PTR [rbp-0x4]
  409243:	mov    r13,r12
  409246:	cmp    rbx,rcx
  409249:	lea    r12,[rbp+rbx*4+0x0]
  40924e:	jae    409697 <test_sort_find@@Base+0xdd7>
  409254:	mov    eax,DWORD PTR [r12]
  409258:	mov    r15,rax
  40925b:	add    rax,r12
  40925e:	je     409692 <test_sort_find@@Base+0xdd2>
  409264:	movsxd rdx,DWORD PTR [rax]
  409267:	mov    rdi,rax
  40926a:	sub    rdi,rdx
  40926d:	cmp    WORD PTR [rdi],0xb
  409271:	jbe    409168 <test_sort_find@@Base+0x8a8>
  409277:	movzx  edx,WORD PTR [rdi+0xa]
  40927b:	test   dx,dx
  40927e:	je     409168 <test_sort_find@@Base+0x8a8>
  409284:	add    rax,rdx
  409287:	cmp    r13,rcx
  40928a:	lea    r8,[rbp+r13*4+0x0]
  40928f:	mov    edx,DWORD PTR [rax]
  409291:	lea    rdi,[rax+rdx*1+0x4]
  409296:	jae    409697 <test_sort_find@@Base+0xdd7>
  40929c:	mov    eax,DWORD PTR [r8]
  40929f:	mov    rcx,rax
  4092a2:	add    rax,r8
  4092a5:	je     409692 <test_sort_find@@Base+0xdd2>
  4092ab:	movsxd rdx,DWORD PTR [rax]
  4092ae:	mov    rsi,rax
  4092b1:	sub    rsi,rdx
  4092b4:	cmp    WORD PTR [rsi],0xb
  4092b8:	jbe    409168 <test_sort_find@@Base+0x8a8>
  4092be:	movzx  edx,WORD PTR [rsi+0xa]
  4092c2:	test   dx,dx
  4092c5:	je     409168 <test_sort_find@@Base+0x8a8>
  4092cb:	add    rax,rdx
  4092ce:	mov    edx,DWORD PTR [rax]
  4092d0:	lea    rsi,[rax+rdx*1+0x4]
  4092d5:	test   rsi,rsi
  4092d8:	je     4094b0 <test_sort_find@@Base+0xbf0>
  4092de:	mov    r9d,DWORD PTR [rsi-0x4]
  4092e2:	test   rdi,rdi
  4092e5:	je     4094a0 <test_sort_find@@Base+0xbe0>
  4092eb:	mov    r10d,DWORD PTR [rdi-0x4]
  4092ef:	mov    rdx,r9
  4092f2:	mov    DWORD PTR [rsp+0x18],ecx
  4092f6:	mov    QWORD PTR [rsp+0x10],r8
  4092fb:	mov    QWORD PTR [rsp+0x8],r9
  409300:	cmp    r10,r9
  409303:	mov    QWORD PTR [rsp],r10
  409307:	cmovbe rdx,r10
  40930b:	call   404050 <strncmp@plt>
  409310:	test   eax,eax
  409312:	mov    r10,QWORD PTR [rsp]
  409316:	mov    r9,QWORD PTR [rsp+0x8]
  40931b:	mov    r8,QWORD PTR [rsp+0x10]
  409320:	mov    ecx,DWORD PTR [rsp+0x18]
  409324:	jne    409458 <test_sort_find@@Base+0xb98>
  40932a:	cmp    r9,r10
  40932d:	ja     40945e <test_sort_find@@Base+0xb9e>
  409333:	add    DWORD PTR [rsp+0x20],0x4
  409338:	test   r14,r14
  40933b:	je     408e80 <test_sort_find@@Base+0x5c0>
  409341:	mov    eax,DWORD PTR [rbp+r14*4+0x0]
  409346:	mov    ebx,DWORD PTR [rsp+0x20]
  40934a:	xor    r12d,r12d
  40934d:	mov    edx,DWORD PTR [rbp+0x0]
  409350:	sub    eax,ebx
  409352:	add    edx,ebx
  409354:	mov    DWORD PTR [rbp+0x0],eax
  409357:	xor    ebx,ebx
  409359:	mov    DWORD PTR [rbp+r14*4+0x0],edx
  40935e:	sub    r14,0x1
  409362:	nop    WORD PTR [rax+rax*1+0x0]
  409368:	cmp    r14,r12
  40936b:	jbe    409240 <test_sort_find@@Base+0x980>
  409371:	mov    ecx,DWORD PTR [rbp-0x4]
  409374:	lea    rsi,[r12*4+0x0]
  40937c:	lea    rax,[rbp+rsi*1+0x0]
  409381:	cmp    rcx,r12
  409384:	jbe    409697 <test_sort_find@@Base+0xdd7>
  40938a:	mov    edx,DWORD PTR [rax]
  40938c:	add    rax,rdx
  40938f:	je     409692 <test_sort_find@@Base+0xdd2>
  409395:	movsxd rdx,DWORD PTR [rax]
  409398:	mov    rdi,rax
  40939b:	sub    rdi,rdx
  40939e:	cmp    WORD PTR [rdi],0xb
  4093a2:	jbe    409168 <test_sort_find@@Base+0x8a8>
  4093a8:	movzx  edx,WORD PTR [rdi+0xa]
  4093ac:	test   dx,dx
  4093af:	je     409168 <test_sort_find@@Base+0x8a8>
  4093b5:	add    rax,rdx
  4093b8:	lea    r13,[r12+0x1]
  4093bd:	mov    edx,DWORD PTR [rax]
  4093bf:	cmp    rcx,r13
  4093c2:	lea    rdi,[rax+rdx*1+0x4]
  4093c7:	lea    rax,[rbp+rsi*1+0x4]
  4093cc:	jbe    409697 <test_sort_find@@Base+0xdd7>
  4093d2:	mov    edx,DWORD PTR [rax]
  4093d4:	add    rax,rdx
  4093d7:	je     409692 <test_sort_find@@Base+0xdd2>
  4093dd:	movsxd rdx,DWORD PTR [rax]
  4093e0:	mov    rsi,rax
  4093e3:	sub    rsi,rdx
  4093e6:	cmp    WORD PTR [rsi],0xb
  4093ea:	jbe    409168 <test_sort_find@@Base+0x8a8>
  4093f0:	movzx  edx,WORD PTR [rsi+0xa]
  4093f4:	test   dx,dx
  4093f7:	je     409168 <test_sort_find@@Base+0x8a8>
  4093fd:	add    rax,rdx
  409400:	mov    edx,DWORD PTR [rax]
  409402:	lea    rsi,[rax+rdx*1+0x4]
  409407:	test   rsi,rsi
  40940a:	je     4094c8 <test_sort_find@@Base+0xc08>
  409410:	mov    r15d,DWORD PTR [rsi-0x4]
  409414:	test   rdi,rdi
  409417:	je     4094c0 <test_sort_find@@Base+0xc00>
  40941d:	mov    r8d,DWORD PTR [rdi-0x4]
  409421:	mov    rdx,r15
  409424:	mov    QWORD PTR [rsp+0x8],rcx
  409429:	cmp    r8,r15
  40942c:	mov    QWORD PTR [rsp],r8
  409430:	cmovbe rdx,r8
  409434:	call   404050 <strncmp@plt>
  409439:	test   eax,eax
  40943b:	mov    r8,QWORD PTR [rsp]
  40943f:	mov    rcx,QWORD PTR [rsp+0x8]
  409444:	jne    409490 <test_sort_find@@Base+0xbd0>
  409446:	cmp    r15,r8
  409449:	cmovbe r13,r12
  40944d:	jmp    409246 <test_sort_find@@Base+0x986>
  409452:	nop    WORD PTR [rax+rax*1+0x0]
  409458:	jns    409333 <test_sort_find@@Base+0xa73>
  40945e:	sub    rbx,r13
  409461:	shl    ebx,0x2
  409464:	sub    ecx,ebx
  409466:	add    r15d,ebx
  409469:	mov    rbx,r13
  40946c:	mov    DWORD PTR [r12],ecx
  409470:	lea    r12,[r13+r13*1+0x0]
  409475:	mov    DWORD PTR [r8],r15d
  409478:	cmp    r14,r12
  40947b:	jae    409368 <test_sort_find@@Base+0xaa8>
  409481:	jmp    409333 <test_sort_find@@Base+0xa73>
  409486:	nop    WORD PTR cs:[rax+rax*1+0x0]
  409490:	cmovns r13,r12
  409494:	jmp    409246 <test_sort_find@@Base+0x986>
  409499:	nop    DWORD PTR [rax+0x0]
  4094a0:	xor    r10d,r10d
  4094a3:	jmp    40932a <test_sort_find@@Base+0xa6a>
  4094a8:	nop    DWORD PTR [rax+rax*1+0x0]
  4094b0:	xor    r9d,r9d
  4094b3:	jmp    4092e2 <test_sort_find@@Base+0xa22>
  4094b8:	nop    DWORD PTR [rax+rax*1+0x0]
  4094c0:	xor    r8d,r8d
  4094c3:	jmp    409446 <test_sort_find@@Base+0xb86>
  4094c5:	nop    DWORD PTR [rax]
  4094c8:	xor    r15d,r15d
  4094cb:	jmp    409414 <test_sort_find@@Base+0xb54>
  4094d0:	jns    40911e <test_sort_find@@Base+0x85e>
  4094d6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4094e0:	lea    rbx,[r8+0x1]
  4094e4:	cmp    rbp,rbx
  4094e7:	ja     40907d <test_sort_find@@Base+0x7bd>
  4094ed:	mov    r8,rbp
  4094f0:	cmp    rbx,r8
  4094f3:	je     409541 <test_sort_find@@Base+0xc81>
  4094f5:	lea    rsi,[rip+0xe59c]        # 417a98 <_IO_stdin_used@@Base+0x1a98>
  4094fc:	mov    edi,0x1
  409501:	xor    eax,eax
  409503:	call   404110 <__printf_chk@plt>
  409508:	mov    DWORD PTR [rsp+0x28],0xffffffff
  409510:	mov    rdi,QWORD PTR [rsp+0x30]
  409515:	call   413150 <flatcc_builder_aligned_free@@Base>
  40951a:	mov    rbx,QWORD PTR [rsp+0x48]
  40951f:	xor    rbx,QWORD PTR fs:0x28
  409528:	mov    eax,DWORD PTR [rsp+0x28]
  40952c:	jne    409e80 <test_sort_find@@Base+0x15c0>
  409532:	add    rsp,0x58
  409536:	pop    rbx
  409537:	pop    rbp
  409538:	pop    r12
  40953a:	pop    r13
  40953c:	pop    r14
  40953e:	pop    r15
  409540:	ret    
  409541:	lea    rax,[r12+rbx*4]
  409545:	mov    edi,DWORD PTR [rax]
  409547:	add    rdi,rax
  40954a:	call   404c40 <_start@@Base+0x3f0>
  40954f:	test   rax,rax
  409552:	je     4094f5 <test_sort_find@@Base+0xc35>
  409554:	mov    ecx,DWORD PTR [rax-0x4]
  409557:	mov    esi,0x5
  40955c:	lea    rdi,[rip+0xcfac]        # 41650f <_IO_stdin_used@@Base+0x50f>
  409563:	cmp    rcx,0x5
  409567:	mov    rdx,rcx
  40956a:	cmova  rcx,rsi
  40956e:	mov    esi,0x7
  409573:	cmp    rcx,0x7
  409577:	cmovg  rcx,rsi
  40957b:	mov    rsi,rax
  40957e:	cmp    rcx,rcx
  409581:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  409583:	jne    4094f5 <test_sort_find@@Base+0xc35>
  409589:	cmp    edx,0x5
  40958c:	jne    4094f5 <test_sort_find@@Base+0xc35>
  409592:	cmp    rbx,0x3
  409596:	jne    4094f5 <test_sort_find@@Base+0xc35>
  40959c:	lea    r11,[rip+0xcf73]        # 416516 <_IO_stdin_used@@Base+0x516>
  4095a3:	mov    ebp,0x4
  4095a8:	xor    ebx,ebx
  4095aa:	mov    r10d,0x5
  4095b0:	mov    r9d,0x7
  4095b6:	mov    r8,rbp
  4095b9:	sub    r8,rbx
  4095bc:	shr    r8,1
  4095bf:	add    r8,rbx
  4095c2:	cmp    r8,0x4
  4095c6:	lea    rax,[r12+r8*4]
  4095ca:	ja     409697 <test_sort_find@@Base+0xdd7>
  4095d0:	mov    edx,DWORD PTR [rax]
  4095d2:	add    rax,rdx
  4095d5:	je     409692 <test_sort_find@@Base+0xdd2>
  4095db:	movsxd rdx,DWORD PTR [rax]
  4095de:	mov    rcx,rax
  4095e1:	sub    rcx,rdx
  4095e4:	cmp    WORD PTR [rcx],0xb
  4095e8:	ja     4095f6 <test_sort_find@@Base+0xd36>
  4095ea:	jmp    409168 <test_sort_find@@Base+0x8a8>
  4095ef:	nop
  4095f0:	mov    rbp,r8
  4095f3:	mov    r8,rdx
  4095f6:	movzx  edx,WORD PTR [rcx+0xa]
  4095fa:	test   dx,dx
  4095fd:	je     409168 <test_sort_find@@Base+0x8a8>
  409603:	add    rax,rdx
  409606:	mov    edx,DWORD PTR [rax]
  409608:	lea    rsi,[rax+rdx*1+0x4]
  40960d:	test   rsi,rsi
  409610:	je     4096f0 <test_sort_find@@Base+0xe30>
  409616:	mov    edx,DWORD PTR [rsi-0x4]
  409619:	mov    rcx,r10
  40961c:	mov    rdi,r11
  40961f:	cmp    rdx,0x5
  409623:	cmovbe rcx,rdx
  409627:	cmp    rcx,0x7
  40962b:	cmovg  rcx,r9
  40962f:	cmp    rcx,rcx
  409632:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  409634:	seta   al
  409637:	setb   cl
  40963a:	sub    eax,ecx
  40963c:	movsx  eax,al
  40963f:	test   eax,eax
  409641:	jne    4096e0 <test_sort_find@@Base+0xe20>
  409647:	cmp    rdx,0x4
  40964b:	jbe    4096f0 <test_sort_find@@Base+0xe30>
  409651:	cmp    rbx,r8
  409654:	jae    409700 <test_sort_find@@Base+0xe40>
  40965a:	mov    rdx,r8
  40965d:	sub    rdx,rbx
  409660:	shr    rdx,1
  409663:	add    rdx,rbx
  409666:	cmp    rdx,0x4
  40966a:	lea    rax,[r12+rdx*4]
  40966e:	ja     409697 <test_sort_find@@Base+0xdd7>
  409670:	mov    ecx,DWORD PTR [rax]
  409672:	add    rax,rcx
  409675:	je     409692 <test_sort_find@@Base+0xdd2>
  409677:	movsxd rcx,DWORD PTR [rax]
  40967a:	mov    rdi,rax
  40967d:	sub    rdi,rcx
  409680:	cmp    WORD PTR [rdi],0xb
  409684:	mov    rcx,rdi
  409687:	jbe    409168 <test_sort_find@@Base+0x8a8>
  40968d:	jmp    4095f0 <test_sort_find@@Base+0xd30>
  409692:	call   40432a <posix_memalign@plt+0x1fa>
  409697:	lea    rcx,[rip+0xfbf2]        # 419290 <_IO_stdin_used@@Base+0x3290>
  40969e:	lea    rsi,[rip+0xd333]        # 4169d8 <_IO_stdin_used@@Base+0x9d8>
  4096a5:	lea    rdi,[rip+0xd45c]        # 416b08 <_IO_stdin_used@@Base+0xb08>
  4096ac:	mov    edx,0x2b5
  4096b1:	call   404090 <__assert_fail@plt>
  4096b6:	lea    rsi,[rip+0xe3ab]        # 417a68 <_IO_stdin_used@@Base+0x1a68>
  4096bd:	mov    edi,0x1
  4096c2:	xor    eax,eax
  4096c4:	call   404110 <__printf_chk@plt>
  4096c9:	mov    DWORD PTR [rsp+0x28],0xffffffff
  4096d1:	jmp    409510 <test_sort_find@@Base+0xc50>
  4096d6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4096e0:	jns    409651 <test_sort_find@@Base+0xd91>
  4096e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4096f0:	lea    rbx,[r8+0x1]
  4096f4:	cmp    rbx,rbp
  4096f7:	jb     4095b6 <test_sort_find@@Base+0xcf6>
  4096fd:	mov    r8,rbp
  409700:	cmp    rbx,r8
  409703:	je     409725 <test_sort_find@@Base+0xe65>
  409705:	lea    rsi,[rip+0xe3c4]        # 417ad0 <_IO_stdin_used@@Base+0x1ad0>
  40970c:	mov    edi,0x1
  409711:	xor    eax,eax
  409713:	call   404110 <__printf_chk@plt>
  409718:	mov    DWORD PTR [rsp+0x28],0xffffffff
  409720:	jmp    409510 <test_sort_find@@Base+0xc50>
  409725:	lea    rax,[r12+rbx*4]
  409729:	mov    edi,DWORD PTR [rax]
  40972b:	add    rdi,rax
  40972e:	call   404c40 <_start@@Base+0x3f0>
  409733:	test   rax,rax
  409736:	je     409705 <test_sort_find@@Base+0xe45>
  409738:	mov    ecx,DWORD PTR [rax-0x4]
  40973b:	mov    esi,0x5
  409740:	lea    rdi,[rip+0xcdcf]        # 416516 <_IO_stdin_used@@Base+0x516>
  409747:	cmp    rcx,0x5
  40974b:	mov    rdx,rcx
  40974e:	cmova  rcx,rsi
  409752:	mov    esi,0x7
  409757:	cmp    rcx,0x7
  40975b:	cmovg  rcx,rsi
  40975f:	mov    rsi,rax
  409762:	cmp    rcx,rcx
  409765:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  409767:	setb   al
  40976a:	seta   cl
  40976d:	sub    ecx,eax
  40976f:	movsx  eax,cl
  409772:	test   eax,eax
  409774:	mov    DWORD PTR [rsp+0x28],eax
  409778:	jne    409705 <test_sort_find@@Base+0xe45>
  40977a:	cmp    edx,0x5
  40977d:	jne    409705 <test_sort_find@@Base+0xe45>
  40977f:	cmp    rbx,0x3
  409783:	jne    409705 <test_sort_find@@Base+0xe45>
  409785:	lea    rsi,[rip+0xcd91]        # 41651d <_IO_stdin_used@@Base+0x51d>
  40978c:	mov    rdi,r12
  40978f:	call   405c90 <_start@@Base+0x1440>
  409794:	cmp    rax,0xffffffffffffffff
  409798:	mov    rbx,rax
  40979b:	jne    409d1a <test_sort_find@@Base+0x145a>
  4097a1:	lea    rsi,[rip+0xccaa]        # 416452 <_IO_stdin_used@@Base+0x452>
  4097a8:	mov    rdi,r12
  4097ab:	call   405c90 <_start@@Base+0x1440>
  4097b0:	test   rax,rax
  4097b3:	jne    409dc4 <test_sort_find@@Base+0x1504>
  4097b9:	lea    rsi,[rip+0xcb37]        # 4162f7 <_IO_stdin_used@@Base+0x2f7>
  4097c0:	mov    rdi,r12
  4097c3:	call   405c90 <_start@@Base+0x1440>
  4097c8:	cmp    rax,0x1
  4097cc:	mov    rbp,rax
  4097cf:	jne    409d6d <test_sort_find@@Base+0x14ad>
  4097d5:	lea    rsi,[rip+0xcb0d]        # 4162e9 <_IO_stdin_used@@Base+0x2e9>
  4097dc:	mov    rdi,r12
  4097df:	mov    r13,r12
  4097e2:	call   405c90 <_start@@Base+0x1440>
  4097e7:	cmp    rax,0x4
  4097eb:	mov    QWORD PTR [rsp+0x38],rax
  4097f0:	mov    QWORD PTR [rsp+0x20],0x4
  4097f9:	mov    QWORD PTR [rsp],0x2
  409801:	je     409917 <test_sort_find@@Base+0x1057>
  409807:	jmp    409d3a <test_sort_find@@Base+0x147a>
  40980c:	nop    DWORD PTR [rax+0x0]
  409810:	mov    ecx,DWORD PTR [r13-0x4]
  409814:	mov    ebp,0x4
  409819:	cmp    rcx,rbx
  40981c:	lea    r12,[r13+rbx*4+0x0]
  409821:	jbe    409697 <test_sort_find@@Base+0xdd7>
  409827:	mov    eax,DWORD PTR [r12]
  40982b:	mov    r14,rax
  40982e:	add    rax,r12
  409831:	je     409692 <test_sort_find@@Base+0xdd2>
  409837:	movsxd rdx,DWORD PTR [rax]
  40983a:	mov    rdi,rax
  40983d:	sub    rdi,rdx
  409840:	cmp    WORD PTR [rdi],0xb
  409844:	jbe    409168 <test_sort_find@@Base+0x8a8>
  40984a:	movzx  edx,WORD PTR [rdi+0xa]
  40984e:	test   dx,dx
  409851:	je     409168 <test_sort_find@@Base+0x8a8>
  409857:	add    rax,rdx
  40985a:	cmp    rbp,rcx
  40985d:	lea    r15,[r13+rbp*4+0x0]
  409862:	mov    edx,DWORD PTR [rax]
  409864:	lea    rdi,[rax+rdx*1+0x4]
  409869:	jae    409697 <test_sort_find@@Base+0xdd7>
  40986f:	mov    eax,DWORD PTR [r15]
  409872:	mov    rcx,rax
  409875:	add    rax,r15
  409878:	je     409692 <test_sort_find@@Base+0xdd2>
  40987e:	movsxd rdx,DWORD PTR [rax]
  409881:	mov    rsi,rax
  409884:	sub    rsi,rdx
  409887:	cmp    WORD PTR [rsi],0xb
  40988b:	jbe    409168 <test_sort_find@@Base+0x8a8>
  409891:	movzx  edx,WORD PTR [rsi+0xa]
  409895:	test   dx,dx
  409898:	je     409168 <test_sort_find@@Base+0x8a8>
  40989e:	add    rax,rdx
  4098a1:	mov    edx,DWORD PTR [rax]
  4098a3:	lea    rsi,[rax+rdx*1+0x4]
  4098a8:	test   rsi,rsi
  4098ab:	je     409a60 <test_sort_find@@Base+0x11a0>
  4098b1:	test   rdi,rdi
  4098b4:	mov    r9d,DWORD PTR [rsi-0x4]
  4098b8:	je     409a78 <test_sort_find@@Base+0x11b8>
  4098be:	mov    r8d,DWORD PTR [rdi-0x4]
  4098c2:	mov    rdx,r9
  4098c5:	mov    DWORD PTR [rsp+0x18],ecx
  4098c9:	mov    QWORD PTR [rsp+0x10],r9
  4098ce:	cmp    r8,r9
  4098d1:	mov    QWORD PTR [rsp+0x8],r8
  4098d6:	cmovbe rdx,r8
  4098da:	call   404050 <strncmp@plt>
  4098df:	test   eax,eax
  4098e1:	mov    r8,QWORD PTR [rsp+0x8]
  4098e6:	mov    r9,QWORD PTR [rsp+0x10]
  4098eb:	mov    ecx,DWORD PTR [rsp+0x18]
  4098ef:	jne    409a18 <test_sort_find@@Base+0x1158>
  4098f5:	cmp    r9,r8
  4098f8:	ja     409a1e <test_sort_find@@Base+0x115e>
  4098fe:	sub    QWORD PTR [rsp],0x1
  409903:	sub    QWORD PTR [rsp+0x20],0x2
  409909:	mov    rax,QWORD PTR [rsp]
  40990d:	cmp    rax,0xffffffffffffffff
  409911:	je     409aa0 <test_sort_find@@Base+0x11e0>
  409917:	cmp    QWORD PTR [rsp+0x20],0x4
  40991d:	ja     4098fe <test_sort_find@@Base+0x103e>
  40991f:	mov    rbx,QWORD PTR [rsp]
  409923:	mov    r12,QWORD PTR [rsp+0x20]
  409928:	nop    DWORD PTR [rax+rax*1+0x0]
  409930:	cmp    r12,0x4
  409934:	je     409810 <test_sort_find@@Base+0xf50>
  40993a:	mov    ecx,DWORD PTR [r13-0x4]
  40993e:	lea    rsi,[r12*4+0x0]
  409946:	lea    rax,[r13+rsi*1+0x0]
  40994b:	cmp    rcx,r12
  40994e:	jbe    409697 <test_sort_find@@Base+0xdd7>
  409954:	mov    edx,DWORD PTR [rax]
  409956:	add    rax,rdx
  409959:	je     409692 <test_sort_find@@Base+0xdd2>
  40995f:	movsxd rdx,DWORD PTR [rax]
  409962:	mov    rdi,rax
  409965:	sub    rdi,rdx
  409968:	cmp    WORD PTR [rdi],0xb
  40996c:	jbe    409168 <test_sort_find@@Base+0x8a8>
  409972:	movzx  edx,WORD PTR [rdi+0xa]
  409976:	test   dx,dx
  409979:	je     409168 <test_sort_find@@Base+0x8a8>
  40997f:	add    rax,rdx
  409982:	lea    rbp,[r12+0x1]
  409987:	mov    edx,DWORD PTR [rax]
  409989:	cmp    rcx,rbp
  40998c:	lea    rdi,[rax+rdx*1+0x4]
  409991:	lea    rax,[r13+rsi*1+0x4]
  409996:	jbe    409697 <test_sort_find@@Base+0xdd7>
  40999c:	mov    edx,DWORD PTR [rax]
  40999e:	add    rax,rdx
  4099a1:	je     409692 <test_sort_find@@Base+0xdd2>
  4099a7:	movsxd rdx,DWORD PTR [rax]
  4099aa:	mov    rsi,rax
  4099ad:	sub    rsi,rdx
  4099b0:	cmp    WORD PTR [rsi],0xb
  4099b4:	jbe    409168 <test_sort_find@@Base+0x8a8>
  4099ba:	movzx  edx,WORD PTR [rsi+0xa]
  4099be:	test   dx,dx
  4099c1:	je     409168 <test_sort_find@@Base+0x8a8>
  4099c7:	add    rax,rdx
  4099ca:	mov    edx,DWORD PTR [rax]
  4099cc:	lea    rsi,[rax+rdx*1+0x4]
  4099d1:	test   rsi,rsi
  4099d4:	je     409a80 <test_sort_find@@Base+0x11c0>
  4099da:	test   rdi,rdi
  4099dd:	mov    r14d,DWORD PTR [rsi-0x4]
  4099e1:	je     409a98 <test_sort_find@@Base+0x11d8>
  4099e7:	mov    r15d,DWORD PTR [rdi-0x4]
  4099eb:	mov    rdx,r14
  4099ee:	mov    QWORD PTR [rsp+0x8],rcx
  4099f3:	cmp    r15,r14
  4099f6:	cmovbe rdx,r15
  4099fa:	call   404050 <strncmp@plt>
  4099ff:	test   eax,eax
  409a01:	mov    rcx,QWORD PTR [rsp+0x8]
  409a06:	jne    409a50 <test_sort_find@@Base+0x1190>
  409a08:	cmp    r14,r15
  409a0b:	cmovbe rbp,r12
  409a0f:	jmp    409819 <test_sort_find@@Base+0xf59>
  409a14:	nop    DWORD PTR [rax+0x0]
  409a18:	jns    4098fe <test_sort_find@@Base+0x103e>
  409a1e:	sub    rbx,rbp
  409a21:	shl    ebx,0x2
  409a24:	sub    ecx,ebx
  409a26:	add    ebx,r14d
  409a29:	mov    DWORD PTR [r12],ecx
  409a2d:	lea    r12,[rbp+rbp*1+0x0]
  409a32:	mov    DWORD PTR [r15],ebx
  409a35:	mov    rbx,rbp
  409a38:	cmp    r12,0x4
  409a3c:	jbe    409930 <test_sort_find@@Base+0x1070>
  409a42:	jmp    4098fe <test_sort_find@@Base+0x103e>
  409a47:	nop    WORD PTR [rax+rax*1+0x0]
  409a50:	cmovns rbp,r12
  409a54:	jmp    409819 <test_sort_find@@Base+0xf59>
  409a59:	nop    DWORD PTR [rax+0x0]
  409a60:	test   rdi,rdi
  409a63:	je     4098fe <test_sort_find@@Base+0x103e>
  409a69:	xor    r9d,r9d
  409a6c:	jmp    4098be <test_sort_find@@Base+0xffe>
  409a71:	nop    DWORD PTR [rax+0x0]
  409a78:	xor    r8d,r8d
  409a7b:	jmp    4098f5 <test_sort_find@@Base+0x1035>
  409a80:	xor    r14d,r14d
  409a83:	test   rdi,rdi
  409a86:	jne    4099e7 <test_sort_find@@Base+0x1127>
  409a8c:	mov    rbp,r12
  409a8f:	jmp    409819 <test_sort_find@@Base+0xf59>
  409a94:	nop    DWORD PTR [rax+0x0]
  409a98:	xor    r15d,r15d
  409a9b:	jmp    409a08 <test_sort_find@@Base+0x1148>
  409aa0:	mov    rbp,QWORD PTR [rsp+0x38]
  409aa5:	mov    DWORD PTR [rsp+0x20],0xfffffff0
  409aad:	nop    DWORD PTR [rax]
  409ab0:	mov    eax,DWORD PTR [r13+rbp*4+0x0]
  409ab5:	mov    ebx,DWORD PTR [rsp+0x20]
  409ab9:	xor    r12d,r12d
  409abc:	mov    edx,DWORD PTR [r13+0x0]
  409ac0:	sub    eax,ebx
  409ac2:	add    edx,ebx
  409ac4:	mov    DWORD PTR [r13+0x0],eax
  409ac8:	xor    ebx,ebx
  409aca:	mov    DWORD PTR [r13+rbp*4+0x0],edx
  409acf:	sub    rbp,0x1
  409ad3:	jmp    409be9 <test_sort_find@@Base+0x1329>
  409ad8:	nop    DWORD PTR [rax+rax*1+0x0]
  409ae0:	mov    ecx,DWORD PTR [r13-0x4]
  409ae4:	mov    r14,r12
  409ae7:	cmp    rcx,rbx
  409aea:	lea    r12,[r13+rbx*4+0x0]
  409aef:	jbe    409697 <test_sort_find@@Base+0xdd7>
  409af5:	mov    eax,DWORD PTR [r12]
  409af9:	mov    r15,rax
  409afc:	add    rax,r12
  409aff:	je     409692 <test_sort_find@@Base+0xdd2>
  409b05:	movsxd rdx,DWORD PTR [rax]
  409b08:	mov    rdi,rax
  409b0b:	sub    rdi,rdx
  409b0e:	cmp    WORD PTR [rdi],0xb
  409b12:	jbe    409168 <test_sort_find@@Base+0x8a8>
  409b18:	movzx  edx,WORD PTR [rdi+0xa]
  409b1c:	test   dx,dx
  409b1f:	je     409168 <test_sort_find@@Base+0x8a8>
  409b25:	add    rax,rdx
  409b28:	cmp    rcx,r14
  409b2b:	lea    r8,[r13+r14*4+0x0]
  409b30:	mov    edx,DWORD PTR [rax]
  409b32:	lea    rdi,[rax+rdx*1+0x4]
  409b37:	jbe    409697 <test_sort_find@@Base+0xdd7>
  409b3d:	mov    eax,DWORD PTR [r8]
  409b40:	mov    rcx,rax
  409b43:	add    rax,r8
  409b46:	je     409692 <test_sort_find@@Base+0xdd2>
  409b4c:	movsxd rdx,DWORD PTR [rax]
  409b4f:	mov    rsi,rax
  409b52:	sub    rsi,rdx
  409b55:	cmp    WORD PTR [rsi],0xb
  409b59:	jbe    409168 <test_sort_find@@Base+0x8a8>
  409b5f:	movzx  edx,WORD PTR [rsi+0xa]
  409b63:	test   dx,dx
  409b66:	je     409168 <test_sort_find@@Base+0x8a8>
  409b6c:	add    rax,rdx
  409b6f:	mov    edx,DWORD PTR [rax]
  409b71:	lea    rsi,[rax+rdx*1+0x4]
  409b76:	test   rsi,rsi
  409b79:	je     409cdb <test_sort_find@@Base+0x141b>
  409b7f:	test   rdi,rdi
  409b82:	mov    r10d,DWORD PTR [rsi-0x4]
  409b86:	je     409d08 <test_sort_find@@Base+0x1448>
  409b8c:	mov    r9d,DWORD PTR [rdi-0x4]
  409b90:	mov    DWORD PTR [rsp+0x8],ecx
  409b94:	mov    QWORD PTR [rsp],r8
  409b98:	mov    QWORD PTR [rsp+0x10],r10
  409b9d:	cmp    r10,r9
  409ba0:	mov    rdx,r9
  409ba3:	mov    QWORD PTR [rsp+0x18],r9
  409ba8:	cmovbe rdx,r10
  409bac:	call   404050 <strncmp@plt>
  409bb1:	test   eax,eax
  409bb3:	mov    r8,QWORD PTR [rsp]
  409bb7:	mov    ecx,DWORD PTR [rsp+0x8]
  409bbb:	je     409cc8 <test_sort_find@@Base+0x1408>
  409bc1:	jns    409cdb <test_sort_find@@Base+0x141b>
  409bc7:	sub    rbx,r14
  409bca:	shl    ebx,0x2
  409bcd:	sub    ecx,ebx
  409bcf:	add    r15d,ebx
  409bd2:	mov    rbx,r14
  409bd5:	mov    DWORD PTR [r12],ecx
  409bd9:	lea    r12,[r14+r14*1]
  409bdd:	mov    DWORD PTR [r8],r15d
  409be0:	cmp    rbp,r12
  409be3:	jb     409cdb <test_sort_find@@Base+0x141b>
  409be9:	cmp    rbp,r12
  409bec:	jbe    409ae0 <test_sort_find@@Base+0x1220>
  409bf2:	mov    ecx,DWORD PTR [r13-0x4]
  409bf6:	lea    rsi,[r12*4+0x0]
  409bfe:	lea    rax,[r13+rsi*1+0x0]
  409c03:	cmp    rcx,r12
  409c06:	jbe    409697 <test_sort_find@@Base+0xdd7>
  409c0c:	mov    edx,DWORD PTR [rax]
  409c0e:	add    rax,rdx
  409c11:	je     409692 <test_sort_find@@Base+0xdd2>
  409c17:	movsxd rdx,DWORD PTR [rax]
  409c1a:	mov    rdi,rax
  409c1d:	sub    rdi,rdx
  409c20:	cmp    WORD PTR [rdi],0xb
  409c24:	jbe    409168 <test_sort_find@@Base+0x8a8>
  409c2a:	movzx  edx,WORD PTR [rdi+0xa]
  409c2e:	test   dx,dx
  409c31:	je     409168 <test_sort_find@@Base+0x8a8>
  409c37:	add    rax,rdx
  409c3a:	lea    r14,[r12+0x1]
  409c3f:	mov    edx,DWORD PTR [rax]
  409c41:	cmp    rcx,r14
  409c44:	lea    rdi,[rax+rdx*1+0x4]
  409c49:	lea    rax,[r13+rsi*1+0x4]
  409c4e:	jbe    409697 <test_sort_find@@Base+0xdd7>
  409c54:	mov    edx,DWORD PTR [rax]
  409c56:	add    rax,rdx
  409c59:	je     409692 <test_sort_find@@Base+0xdd2>
  409c5f:	movsxd rdx,DWORD PTR [rax]
  409c62:	mov    rsi,rax
  409c65:	sub    rsi,rdx
  409c68:	cmp    WORD PTR [rsi],0xb
  409c6c:	jbe    409168 <test_sort_find@@Base+0x8a8>
  409c72:	movzx  edx,WORD PTR [rsi+0xa]
  409c76:	test   dx,dx
  409c79:	je     409168 <test_sort_find@@Base+0x8a8>
  409c7f:	add    rax,rdx
  409c82:	mov    edx,DWORD PTR [rax]
  409c84:	lea    rsi,[rax+rdx*1+0x4]
  409c89:	test   rsi,rsi
  409c8c:	je     409d0d <test_sort_find@@Base+0x144d>
  409c8e:	test   rdi,rdi
  409c91:	mov    r15d,DWORD PTR [rsi-0x4]
  409c95:	je     409d15 <test_sort_find@@Base+0x1455>
  409c97:	mov    r8d,DWORD PTR [rdi-0x4]
  409c9b:	mov    QWORD PTR [rsp],rcx
  409c9f:	cmp    r15,r8
  409ca2:	mov    rdx,r8
  409ca5:	mov    QWORD PTR [rsp+0x8],r8
  409caa:	cmovbe rdx,r15
  409cae:	call   404050 <strncmp@plt>
  409cb3:	test   eax,eax
  409cb5:	mov    rcx,QWORD PTR [rsp]
  409cb9:	je     409cf0 <test_sort_find@@Base+0x1430>
  409cbb:	cmovns r14,r12
  409cbf:	jmp    409ae7 <test_sort_find@@Base+0x1227>
  409cc4:	nop    DWORD PTR [rax+0x0]
  409cc8:	mov    r10,QWORD PTR [rsp+0x10]
  409ccd:	mov    r9,QWORD PTR [rsp+0x18]
  409cd2:	cmp    r10,r9
  409cd5:	ja     409bc7 <test_sort_find@@Base+0x1307>
  409cdb:	add    DWORD PTR [rsp+0x20],0x4
  409ce0:	test   rbp,rbp
  409ce3:	jne    409ab0 <test_sort_find@@Base+0x11f0>
  409ce9:	jmp    409510 <test_sort_find@@Base+0xc50>
  409cee:	xchg   ax,ax
  409cf0:	mov    r8,QWORD PTR [rsp+0x8]
  409cf5:	cmp    r15,r8
  409cf8:	cmovbe r14,r12
  409cfc:	jmp    409ae7 <test_sort_find@@Base+0x1227>
  409d01:	nop    DWORD PTR [rax+0x0]
  409d08:	xor    r9d,r9d
  409d0b:	jmp    409cd2 <test_sort_find@@Base+0x1412>
  409d0d:	mov    r14,r12
  409d10:	jmp    409ae7 <test_sort_find@@Base+0x1227>
  409d15:	xor    r8d,r8d
  409d18:	jmp    409cf5 <test_sort_find@@Base+0x1435>
  409d1a:	lea    rsi,[rip+0xc803]        # 416524 <_IO_stdin_used@@Base+0x524>
  409d21:	mov    edi,0x1
  409d26:	xor    eax,eax
  409d28:	call   404110 <__printf_chk@plt>
  409d2d:	mov    DWORD PTR [rsp+0x28],0xffffffff
  409d35:	jmp    409510 <test_sort_find@@Base+0xc50>
  409d3a:	lea    rsi,[rip+0xc813]        # 416554 <_IO_stdin_used@@Base+0x554>
  409d41:	mov    edi,0x1
  409d46:	xor    eax,eax
  409d48:	call   404110 <__printf_chk@plt>
  409d4d:	mov    edx,DWORD PTR [rsp+0x38]
  409d51:	lea    rsi,[rip+0xc7f4]        # 41654c <_IO_stdin_used@@Base+0x54c>
  409d58:	mov    edi,0x1
  409d5d:	xor    eax,eax
  409d5f:	call   404110 <__printf_chk@plt>
  409d64:	mov    DWORD PTR [rsp+0x28],ebx
  409d68:	jmp    409510 <test_sort_find@@Base+0xc50>
  409d6d:	lea    rsi,[rip+0xc82d]        # 4165a1 <_IO_stdin_used@@Base+0x5a1>
  409d74:	mov    edi,0x1
  409d79:	xor    eax,eax
  409d7b:	call   404110 <__printf_chk@plt>
  409d80:	mov    edx,ebp
  409d82:	jmp    409d51 <test_sort_find@@Base+0x1491>
  409d84:	lea    rsi,[rip+0xdc6d]        # 4179f8 <_IO_stdin_used@@Base+0x19f8>
  409d8b:	mov    edi,0x1
  409d90:	xor    eax,eax
  409d92:	call   404110 <__printf_chk@plt>
  409d97:	mov    DWORD PTR [rsp+0x28],0xffffffff
  409d9f:	jmp    409510 <test_sort_find@@Base+0xc50>
  409da4:	lea    rsi,[rip+0xdc75]        # 417a20 <_IO_stdin_used@@Base+0x1a20>
  409dab:	mov    edi,0x1
  409db0:	xor    eax,eax
  409db2:	call   404110 <__printf_chk@plt>
  409db7:	mov    DWORD PTR [rsp+0x28],0xffffffff
  409dbf:	jmp    409510 <test_sort_find@@Base+0xc50>
  409dc4:	lea    rsi,[rip+0xc770]        # 41653b <_IO_stdin_used@@Base+0x53b>
  409dcb:	mov    edi,0x1
  409dd0:	xor    eax,eax
  409dd2:	call   404110 <__printf_chk@plt>
  409dd7:	mov    DWORD PTR [rsp+0x28],ebx
  409ddb:	jmp    409510 <test_sort_find@@Base+0xc50>
  409de0:	lea    rsi,[rip+0xc6ec]        # 4164d3 <_IO_stdin_used@@Base+0x4d3>
  409de7:	mov    edi,0x1
  409dec:	xor    eax,eax
  409dee:	call   404110 <__printf_chk@plt>
  409df3:	mov    DWORD PTR [rsp+0x28],0xffffffff
  409dfb:	jmp    409510 <test_sort_find@@Base+0xc50>
  409e00:	lea    rsi,[rip+0xc6ea]        # 4164f1 <_IO_stdin_used@@Base+0x4f1>
  409e07:	mov    edi,0x1
  409e0c:	xor    eax,eax
  409e0e:	call   404110 <__printf_chk@plt>
  409e13:	mov    DWORD PTR [rsp+0x28],0xffffffff
  409e1b:	jmp    409510 <test_sort_find@@Base+0xc50>
  409e20:	lea    rsi,[rip+0xc652]        # 416479 <_IO_stdin_used@@Base+0x479>
  409e27:	mov    edi,0x1
  409e2c:	xor    eax,eax
  409e2e:	call   404110 <__printf_chk@plt>
  409e33:	mov    DWORD PTR [rsp+0x28],0xffffffff
  409e3b:	jmp    409510 <test_sort_find@@Base+0xc50>
  409e40:	lea    rsi,[rip+0xc650]        # 416497 <_IO_stdin_used@@Base+0x497>
  409e47:	mov    edi,0x1
  409e4c:	xor    eax,eax
  409e4e:	call   404110 <__printf_chk@plt>
  409e53:	mov    DWORD PTR [rsp+0x28],0xffffffff
  409e5b:	jmp    409510 <test_sort_find@@Base+0xc50>
  409e60:	lea    rsi,[rip+0xc64e]        # 4164b5 <_IO_stdin_used@@Base+0x4b5>
  409e67:	mov    edi,0x1
  409e6c:	xor    eax,eax
  409e6e:	call   404110 <__printf_chk@plt>
  409e73:	mov    DWORD PTR [rsp+0x28],0xffffffff
  409e7b:	jmp    409510 <test_sort_find@@Base+0xc50>
  409e80:	call   404070 <__stack_chk_fail@plt>
  409e85:	call   4045a4 <posix_memalign@plt+0x474>
  409e8a:	nop    WORD PTR [rax+rax*1+0x0]

0000000000409e90 <test_scan@@Base>:
  409e90:	push   r15
  409e92:	push   r14
  409e94:	push   r13
  409e96:	push   r12
  409e98:	push   rbp
  409e99:	push   rbx
  409e9a:	mov    rbx,rdi
  409e9d:	sub    rsp,0x88
  409ea4:	mov    rax,QWORD PTR fs:0x28
  409ead:	mov    QWORD PTR [rsp+0x78],rax
  409eb2:	xor    eax,eax
  409eb4:	mov    BYTE PTR [rsp+0x71],0x6
  409eb9:	mov    BYTE PTR [rsp+0x72],0x7
  409ebe:	mov    BYTE PTR [rsp+0x73],0x1
  409ec3:	mov    BYTE PTR [rsp+0x74],0x3
  409ec8:	mov    BYTE PTR [rsp+0x75],0x4
  409ecd:	mov    BYTE PTR [rsp+0x76],0x3
  409ed2:	mov    BYTE PTR [rsp+0x77],0x2
  409ed7:	call   40faf0 <flatcc_builder_reset@@Base>
  409edc:	lea    rsi,[rip+0xc258]        # 41613b <_IO_stdin_used@@Base+0x13b>
  409ee3:	xor    ecx,ecx
  409ee5:	xor    edx,edx
  409ee7:	mov    rdi,rbx
  409eea:	call   410330 <flatcc_builder_start_buffer@@Base>
  409eef:	test   eax,eax
  409ef1:	jne    409f00 <test_scan@@Base+0x70>
  409ef3:	mov    esi,0x24
  409ef8:	mov    rdi,rbx
  409efb:	call   410fa0 <flatcc_builder_start_table@@Base>
  409f00:	lea    rsi,[rip+0xc24c]        # 416153 <_IO_stdin_used@@Base+0x153>
  409f07:	mov    rdi,rbx
  409f0a:	call   4126b0 <flatcc_builder_create_string_str@@Base>
  409f0f:	test   eax,eax
  409f11:	mov    ebp,eax
  409f13:	je     409f29 <test_scan@@Base+0x99>
  409f15:	mov    esi,0x3
  409f1a:	mov    rdi,rbx
  409f1d:	call   412a10 <flatcc_builder_table_add_offset@@Base>
  409f22:	test   rax,rax
  409f25:	je     409f29 <test_scan@@Base+0x99>
  409f27:	mov    DWORD PTR [rax],ebp
  409f29:	lea    rsi,[rsp+0x71]
  409f2e:	mov    r9d,0xffffffff
  409f34:	mov    r8d,0x1
  409f3a:	mov    ecx,0x1
  409f3f:	mov    edx,0x7
  409f44:	mov    rdi,rbx
  409f47:	call   411af0 <flatcc_builder_create_vector@@Base>
  409f4c:	test   eax,eax
  409f4e:	mov    ebp,eax
  409f50:	je     409f66 <test_scan@@Base+0xd6>
  409f52:	mov    esi,0x5
  409f57:	mov    rdi,rbx
  409f5a:	call   412a10 <flatcc_builder_table_add_offset@@Base>
  409f5f:	test   rax,rax
  409f62:	je     409f66 <test_scan@@Base+0xd6>
  409f64:	mov    DWORD PTR [rax],ebp
  409f66:	mov    rdi,rbx
  409f69:	call   410e00 <flatcc_builder_start_offset_vector@@Base>
  409f6e:	mov    rdi,rbx
  409f71:	call   411d90 <flatcc_builder_end_offset_vector@@Base>
  409f76:	test   eax,eax
  409f78:	mov    ebp,eax
  409f7a:	je     409f90 <test_scan@@Base+0x100>
  409f7c:	mov    esi,0xa
  409f81:	mov    rdi,rbx
  409f84:	call   412a10 <flatcc_builder_table_add_offset@@Base>
  409f89:	test   rax,rax
  409f8c:	je     409f90 <test_scan@@Base+0x100>
  409f8e:	mov    DWORD PTR [rax],ebp
  409f90:	mov    rdi,rbx
  409f93:	call   410e00 <flatcc_builder_start_offset_vector@@Base>
  409f98:	mov    esi,0x24
  409f9d:	mov    rdi,rbx
  409fa0:	call   410fa0 <flatcc_builder_start_table@@Base>
  409fa5:	lea    rsi,[rip+0xc33d]        # 4162e9 <_IO_stdin_used@@Base+0x2e9>
  409fac:	mov    rdi,rbx
  409faf:	call   4126b0 <flatcc_builder_create_string_str@@Base>
  409fb4:	test   eax,eax
  409fb6:	mov    ebp,eax
  409fb8:	je     409fce <test_scan@@Base+0x13e>
  409fba:	mov    esi,0x3
  409fbf:	mov    rdi,rbx
  409fc2:	call   412a10 <flatcc_builder_table_add_offset@@Base>
  409fc7:	test   rax,rax
  409fca:	je     409fce <test_scan@@Base+0x13e>
  409fcc:	mov    DWORD PTR [rax],ebp
  409fce:	lea    rsi,[rip+0xf61b]        # 4195f0 <_IO_stdin_used@@Base+0x35f0>
  409fd5:	mov    edx,0x1
  409fda:	mov    rdi,rbx
  409fdd:	call   4118e0 <flatcc_builder_check_required@@Base>
  409fe2:	test   eax,eax
  409fe4:	je     40b797 <test_scan@@Base+0x1907>
  409fea:	mov    rdi,rbx
  409fed:	call   411960 <flatcc_builder_end_table@@Base>
  409ff2:	test   eax,eax
  409ff4:	je     40a000 <test_scan@@Base+0x170>
  409ff6:	mov    esi,eax
  409ff8:	mov    rdi,rbx
  409ffb:	call   410930 <flatcc_builder_offset_vector_push@@Base>
  40a000:	mov    esi,0x24
  40a005:	mov    rdi,rbx
  40a008:	call   410fa0 <flatcc_builder_start_table@@Base>
  40a00d:	lea    rsi,[rip+0xc2dd]        # 4162f1 <_IO_stdin_used@@Base+0x2f1>
  40a014:	mov    rdi,rbx
  40a017:	call   4126b0 <flatcc_builder_create_string_str@@Base>
  40a01c:	test   eax,eax
  40a01e:	mov    ebp,eax
  40a020:	je     40a036 <test_scan@@Base+0x1a6>
  40a022:	mov    esi,0x3
  40a027:	mov    rdi,rbx
  40a02a:	call   412a10 <flatcc_builder_table_add_offset@@Base>
  40a02f:	test   rax,rax
  40a032:	je     40a036 <test_scan@@Base+0x1a6>
  40a034:	mov    DWORD PTR [rax],ebp
  40a036:	lea    rsi,[rip+0xf5b3]        # 4195f0 <_IO_stdin_used@@Base+0x35f0>
  40a03d:	mov    edx,0x1
  40a042:	mov    rdi,rbx
  40a045:	call   4118e0 <flatcc_builder_check_required@@Base>
  40a04a:	test   eax,eax
  40a04c:	je     40b797 <test_scan@@Base+0x1907>
  40a052:	mov    rdi,rbx
  40a055:	call   411960 <flatcc_builder_end_table@@Base>
  40a05a:	test   eax,eax
  40a05c:	je     40a068 <test_scan@@Base+0x1d8>
  40a05e:	mov    esi,eax
  40a060:	mov    rdi,rbx
  40a063:	call   410930 <flatcc_builder_offset_vector_push@@Base>
  40a068:	mov    esi,0x24
  40a06d:	mov    rdi,rbx
  40a070:	call   410fa0 <flatcc_builder_start_table@@Base>
  40a075:	lea    rsi,[rip+0xc27b]        # 4162f7 <_IO_stdin_used@@Base+0x2f7>
  40a07c:	mov    rdi,rbx
  40a07f:	call   4126b0 <flatcc_builder_create_string_str@@Base>
  40a084:	test   eax,eax
  40a086:	mov    ebp,eax
  40a088:	je     40a09e <test_scan@@Base+0x20e>
  40a08a:	mov    esi,0x3
  40a08f:	mov    rdi,rbx
  40a092:	call   412a10 <flatcc_builder_table_add_offset@@Base>
  40a097:	test   rax,rax
  40a09a:	je     40a09e <test_scan@@Base+0x20e>
  40a09c:	mov    DWORD PTR [rax],ebp
  40a09e:	lea    rsi,[rip+0xf54b]        # 4195f0 <_IO_stdin_used@@Base+0x35f0>
  40a0a5:	mov    edx,0x1
  40a0aa:	mov    rdi,rbx
  40a0ad:	call   4118e0 <flatcc_builder_check_required@@Base>
  40a0b2:	test   eax,eax
  40a0b4:	je     40b797 <test_scan@@Base+0x1907>
  40a0ba:	mov    rdi,rbx
  40a0bd:	call   411960 <flatcc_builder_end_table@@Base>
  40a0c2:	test   eax,eax
  40a0c4:	je     40a0d0 <test_scan@@Base+0x240>
  40a0c6:	mov    esi,eax
  40a0c8:	mov    rdi,rbx
  40a0cb:	call   410930 <flatcc_builder_offset_vector_push@@Base>
  40a0d0:	mov    esi,0x24
  40a0d5:	mov    rdi,rbx
  40a0d8:	call   410fa0 <flatcc_builder_start_table@@Base>
  40a0dd:	lea    rsi,[rip+0xc36e]        # 416452 <_IO_stdin_used@@Base+0x452>
  40a0e4:	mov    rdi,rbx
  40a0e7:	call   4126b0 <flatcc_builder_create_string_str@@Base>
  40a0ec:	test   eax,eax
  40a0ee:	mov    ebp,eax
  40a0f0:	je     40a106 <test_scan@@Base+0x276>
  40a0f2:	mov    esi,0x3
  40a0f7:	mov    rdi,rbx
  40a0fa:	call   412a10 <flatcc_builder_table_add_offset@@Base>
  40a0ff:	test   rax,rax
  40a102:	je     40a106 <test_scan@@Base+0x276>
  40a104:	mov    DWORD PTR [rax],ebp
  40a106:	lea    rsi,[rip+0xf4e3]        # 4195f0 <_IO_stdin_used@@Base+0x35f0>
  40a10d:	mov    edx,0x1
  40a112:	mov    rdi,rbx
  40a115:	call   4118e0 <flatcc_builder_check_required@@Base>
  40a11a:	test   eax,eax
  40a11c:	je     40b797 <test_scan@@Base+0x1907>
  40a122:	mov    rdi,rbx
  40a125:	call   411960 <flatcc_builder_end_table@@Base>
  40a12a:	test   eax,eax
  40a12c:	je     40a138 <test_scan@@Base+0x2a8>
  40a12e:	mov    esi,eax
  40a130:	mov    rdi,rbx
  40a133:	call   410930 <flatcc_builder_offset_vector_push@@Base>
  40a138:	mov    esi,0x24
  40a13d:	mov    rdi,rbx
  40a140:	call   410fa0 <flatcc_builder_start_table@@Base>
  40a145:	lea    rsi,[rip+0xc1ab]        # 4162f7 <_IO_stdin_used@@Base+0x2f7>
  40a14c:	mov    rdi,rbx
  40a14f:	call   4126b0 <flatcc_builder_create_string_str@@Base>
  40a154:	test   eax,eax
  40a156:	mov    ebp,eax
  40a158:	je     40a16e <test_scan@@Base+0x2de>
  40a15a:	mov    esi,0x3
  40a15f:	mov    rdi,rbx
  40a162:	call   412a10 <flatcc_builder_table_add_offset@@Base>
  40a167:	test   rax,rax
  40a16a:	je     40a16e <test_scan@@Base+0x2de>
  40a16c:	mov    DWORD PTR [rax],ebp
  40a16e:	lea    rsi,[rip+0xf47b]        # 4195f0 <_IO_stdin_used@@Base+0x35f0>
  40a175:	mov    edx,0x1
  40a17a:	mov    rdi,rbx
  40a17d:	call   4118e0 <flatcc_builder_check_required@@Base>
  40a182:	test   eax,eax
  40a184:	je     40b797 <test_scan@@Base+0x1907>
  40a18a:	mov    rdi,rbx
  40a18d:	call   411960 <flatcc_builder_end_table@@Base>
  40a192:	test   eax,eax
  40a194:	je     40a1a0 <test_scan@@Base+0x310>
  40a196:	mov    esi,eax
  40a198:	mov    rdi,rbx
  40a19b:	call   410930 <flatcc_builder_offset_vector_push@@Base>
  40a1a0:	mov    rdi,rbx
  40a1a3:	call   411d90 <flatcc_builder_end_offset_vector@@Base>
  40a1a8:	test   eax,eax
  40a1aa:	mov    ebp,eax
  40a1ac:	je     40a1c2 <test_scan@@Base+0x332>
  40a1ae:	mov    esi,0xb
  40a1b3:	mov    rdi,rbx
  40a1b6:	call   412a10 <flatcc_builder_table_add_offset@@Base>
  40a1bb:	test   rax,rax
  40a1be:	je     40a1c2 <test_scan@@Base+0x332>
  40a1c0:	mov    DWORD PTR [rax],ebp
  40a1c2:	lea    rsi,[rip+0xf427]        # 4195f0 <_IO_stdin_used@@Base+0x35f0>
  40a1c9:	mov    edx,0x1
  40a1ce:	mov    rdi,rbx
  40a1d1:	call   4118e0 <flatcc_builder_check_required@@Base>
  40a1d6:	test   eax,eax
  40a1d8:	je     40b797 <test_scan@@Base+0x1907>
  40a1de:	mov    rdi,rbx
  40a1e1:	call   411960 <flatcc_builder_end_table@@Base>
  40a1e6:	mov    rdi,rbx
  40a1e9:	mov    esi,eax
  40a1eb:	call   410410 <flatcc_builder_end_buffer@@Base>
  40a1f0:	lea    rsi,[rsp+0x68]
  40a1f5:	mov    rdi,rbx
  40a1f8:	call   413000 <flatcc_builder_finalize_aligned_buffer@@Base>
  40a1fd:	test   rax,rax
  40a200:	mov    QWORD PTR [rsp+0x8],rax
  40a205:	je     40a210 <test_scan@@Base+0x380>
  40a207:	cmp    DWORD PTR [rax+0x4],0x534e4f4d
  40a20e:	je     40a218 <test_scan@@Base+0x388>
  40a210:	call   4042c1 <posix_memalign@plt+0x191>
  40a215:	nop    DWORD PTR [rax]
  40a218:	mov    rbx,QWORD PTR [rsp+0x8]
  40a21d:	mov    eax,DWORD PTR [rbx]
  40a21f:	add    rax,rbx
  40a222:	mov    rcx,rax
  40a225:	je     40a210 <test_scan@@Base+0x380>
  40a227:	movsxd rax,DWORD PTR [rcx]
  40a22a:	mov    rbx,rcx
  40a22d:	sub    rbx,rax
  40a230:	cmp    WORD PTR [rbx],0x1b
  40a234:	mov    rax,rbx
  40a237:	ja     40a260 <test_scan@@Base+0x3d0>
  40a239:	lea    rcx,[rip+0xef00]        # 419140 <_IO_stdin_used@@Base+0x3140>
  40a240:	lea    rsi,[rip+0xd1a1]        # 4173e8 <_IO_stdin_used@@Base+0x13e8>
  40a247:	lea    rdi,[rip+0xc222]        # 416470 <_IO_stdin_used@@Base+0x470>
  40a24e:	mov    edx,0x519
  40a253:	call   404090 <__assert_fail@plt>
  40a258:	nop    DWORD PTR [rax+rax*1+0x0]
  40a260:	movzx  edx,WORD PTR [rbx+0x1a]
  40a264:	test   dx,dx
  40a267:	je     40a239 <test_scan@@Base+0x3a9>
  40a269:	add    rdx,rcx
  40a26c:	mov    esi,DWORD PTR [rdx]
  40a26e:	lea    r14,[rdx+rsi*1+0x4]
  40a273:	test   r14,r14
  40a276:	je     40a239 <test_scan@@Base+0x3a9>
  40a278:	movzx  edx,WORD PTR [rbx+0xe]
  40a27c:	test   dx,dx
  40a27f:	je     40b754 <test_scan@@Base+0x18c4>
  40a285:	add    rdx,rcx
  40a288:	mov    esi,DWORD PTR [rdx]
  40a28a:	lea    rbx,[rdx+rsi*1+0x4]
  40a28f:	test   rbx,rbx
  40a292:	mov    QWORD PTR [rsp+0x38],rbx
  40a297:	je     40b754 <test_scan@@Base+0x18c4>
  40a29d:	movzx  eax,WORD PTR [rax+0x18]
  40a2a1:	test   ax,ax
  40a2a4:	je     40b773 <test_scan@@Base+0x18e3>
  40a2aa:	add    rax,rcx
  40a2ad:	mov    edx,DWORD PTR [rax]
  40a2af:	lea    rax,[rax+rdx*1+0x4]
  40a2b4:	test   rax,rax
  40a2b7:	mov    QWORD PTR [rsp+0x30],rax
  40a2bc:	je     40b773 <test_scan@@Base+0x18e3>
  40a2c2:	mov    eax,DWORD PTR [r14-0x4]
  40a2c6:	test   rax,rax
  40a2c9:	je     40aee0 <test_scan@@Base+0x1050>
  40a2cf:	mov    r15d,DWORD PTR [r14]
  40a2d2:	add    r15,r14
  40a2d5:	je     40af3a <test_scan@@Base+0x10aa>
  40a2db:	movsxd rbx,DWORD PTR [r15]
  40a2de:	mov    rdx,r15
  40a2e1:	sub    rdx,rbx
  40a2e4:	mov    QWORD PTR [rsp+0x28],rbx
  40a2e9:	movzx  ebx,WORD PTR [rdx]
  40a2ec:	cmp    bx,0xb
  40a2f0:	mov    WORD PTR [rsp+0x26],bx
  40a2f5:	ja     40a320 <test_scan@@Base+0x490>
  40a2f7:	nop    WORD PTR [rax+rax*1+0x0]
  40a300:	lea    rcx,[rip+0xef09]        # 419210 <_IO_stdin_used@@Base+0x3210>
  40a307:	lea    rsi,[rip+0xc6ca]        # 4169d8 <_IO_stdin_used@@Base+0x9d8>
  40a30e:	lea    rdi,[rip+0xc82b]        # 416b40 <_IO_stdin_used@@Base+0xb40>
  40a315:	mov    edx,0x2bb
  40a31a:	call   404090 <__assert_fail@plt>
  40a31f:	nop
  40a320:	movzx  ebp,WORD PTR [rdx+0xa]
  40a324:	test   bp,bp
  40a327:	je     40a300 <test_scan@@Base+0x470>
  40a329:	lea    rbx,[r14+0x4]
  40a32d:	lea    r8,[rip+0xbfbd]        # 4162f1 <_IO_stdin_used@@Base+0x2f1>
  40a334:	movzx  ecx,bp
  40a337:	mov    rsi,r15
  40a33a:	xor    r9d,r9d
  40a33d:	mov    QWORD PTR [rsp+0x10],rbx
  40a342:	mov    QWORD PTR [rsp+0x40],rbx
  40a347:	mov    rdx,rbx
  40a34a:	nop    WORD PTR [rax+rax*1+0x0]
  40a350:	add    rsi,rcx
  40a353:	mov    rdi,r8
  40a356:	mov    ecx,DWORD PTR [rsi]
  40a358:	lea    rsi,[rsi+rcx*1+0x4]
  40a35d:	mov    ecx,0x6
  40a362:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  40a364:	je     40a3a8 <test_scan@@Base+0x518>
  40a366:	add    r9,0x1
  40a36a:	cmp    rax,r9
  40a36d:	je     40aee0 <test_scan@@Base+0x1050>
  40a373:	mov    esi,DWORD PTR [rdx]
  40a375:	add    rsi,rdx
  40a378:	je     40af3a <test_scan@@Base+0x10aa>
  40a37e:	movsxd rcx,DWORD PTR [rsi]
  40a381:	mov    rbx,rsi
  40a384:	sub    rbx,rcx
  40a387:	cmp    WORD PTR [rbx],0xb
  40a38b:	jbe    40a300 <test_scan@@Base+0x470>
  40a391:	movzx  ecx,WORD PTR [rbx+0xa]
  40a395:	add    rdx,0x4
  40a399:	test   cx,cx
  40a39c:	jne    40a350 <test_scan@@Base+0x4c0>
  40a39e:	jmp    40a300 <test_scan@@Base+0x470>
  40a3a3:	nop    DWORD PTR [rax+rax*1+0x0]
  40a3a8:	cmp    r9,0x1
  40a3ac:	jne    40aee0 <test_scan@@Base+0x1050>
  40a3b2:	lea    rbx,[rax-0x1]
  40a3b6:	lea    rdx,[r14+rax*4-0x4]
  40a3bb:	mov    QWORD PTR [rsp+0x18],rbx
  40a3c0:	mov    r9,rdx
  40a3c3:	mov    r10,rbx
  40a3c6:	jmp    40a430 <test_scan@@Base+0x5a0>
  40a3c8:	nop    DWORD PTR [rax+rax*1+0x0]
  40a3d0:	cmp    rax,r10
  40a3d3:	jbe    40b097 <test_scan@@Base+0x1207>
  40a3d9:	mov    ecx,DWORD PTR [r9]
  40a3dc:	add    rcx,r9
  40a3df:	je     40af3a <test_scan@@Base+0x10aa>
  40a3e5:	movsxd rsi,DWORD PTR [rcx]
  40a3e8:	mov    rbx,rcx
  40a3eb:	sub    rbx,rsi
  40a3ee:	cmp    WORD PTR [rbx],0xb
  40a3f2:	jbe    40a300 <test_scan@@Base+0x470>
  40a3f8:	movzx  esi,WORD PTR [rbx+0xa]
  40a3fc:	test   si,si
  40a3ff:	je     40a300 <test_scan@@Base+0x470>
  40a405:	add    rcx,rsi
  40a408:	mov    rdi,r8
  40a40b:	mov    esi,DWORD PTR [rcx]
  40a40d:	lea    rsi,[rcx+rsi*1+0x4]
  40a412:	mov    ecx,0x6
  40a417:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  40a419:	lea    rdi,[r10-0x1]
  40a41d:	seta   sil
  40a421:	setb   cl
  40a424:	sub    r9,0x4
  40a428:	cmp    sil,cl
  40a42b:	je     40a458 <test_scan@@Base+0x5c8>
  40a42d:	mov    r10,rdi
  40a430:	cmp    r10,0xffffffffffffffff
  40a434:	jne    40a3d0 <test_scan@@Base+0x540>
  40a436:	lea    rsi,[rip+0xd6db]        # 417b18 <_IO_stdin_used@@Base+0x1b18>
  40a43d:	mov    edi,0x1
  40a442:	xor    eax,eax
  40a444:	mov    ebp,0xffffffff
  40a449:	call   404110 <__printf_chk@plt>
  40a44e:	jmp    40a720 <test_scan@@Base+0x890>
  40a453:	nop    DWORD PTR [rax+rax*1+0x0]
  40a458:	cmp    r10,0x1
  40a45c:	jne    40a436 <test_scan@@Base+0x5a6>
  40a45e:	mov    r10,QWORD PTR [rsp+0x10]
  40a463:	lea    rbx,[rip+0xc0ac]        # 416516 <_IO_stdin_used@@Base+0x516>
  40a46a:	mov    r9,rdx
  40a46d:	mov    rsi,r15
  40a470:	xor    r11d,r11d
  40a473:	mov    r13d,0x5
  40a479:	mov    r12d,0x7
  40a47f:	movzx  edx,bp
  40a482:	nop    WORD PTR [rax+rax*1+0x0]
  40a488:	add    rdx,rsi
  40a48b:	mov    ecx,DWORD PTR [rdx]
  40a48d:	lea    rsi,[rdx+rcx*1+0x4]
  40a492:	test   rsi,rsi
  40a495:	je     40a4d1 <test_scan@@Base+0x641>
  40a497:	mov    edx,DWORD PTR [rsi-0x4]
  40a49a:	mov    rcx,r13
  40a49d:	mov    rdi,rbx
  40a4a0:	cmp    rdx,0x5
  40a4a4:	cmovbe rcx,rdx
  40a4a8:	cmp    rcx,0x7
  40a4ac:	cmovg  rcx,r12
  40a4b0:	cmp    rcx,rcx
  40a4b3:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  40a4b5:	seta   cl
  40a4b8:	setb   sil
  40a4bc:	sub    ecx,esi
  40a4be:	cmp    rdx,0x4
  40a4c2:	movsx  ecx,cl
  40a4c5:	jbe    40a4d1 <test_scan@@Base+0x641>
  40a4c7:	test   ecx,ecx
  40a4c9:	jne    40a4d1 <test_scan@@Base+0x641>
  40a4cb:	cmp    rdx,0x5
  40a4cf:	jbe    40a520 <test_scan@@Base+0x690>
  40a4d1:	add    r11,0x1
  40a4d5:	cmp    rax,r11
  40a4d8:	je     40a5d2 <test_scan@@Base+0x742>
  40a4de:	mov    edx,DWORD PTR [r10]
  40a4e1:	add    rdx,r10
  40a4e4:	mov    rsi,rdx
  40a4e7:	je     40af3a <test_scan@@Base+0x10aa>
  40a4ed:	movsxd rdx,DWORD PTR [rdx]
  40a4f0:	mov    rdi,rsi
  40a4f3:	sub    rdi,rdx
  40a4f6:	cmp    WORD PTR [rdi],0xb
  40a4fa:	jbe    40a300 <test_scan@@Base+0x470>
  40a500:	movzx  edx,WORD PTR [rdi+0xa]
  40a504:	add    r10,0x4
  40a508:	test   dx,dx
  40a50b:	jne    40a488 <test_scan@@Base+0x5f8>
  40a511:	jmp    40a300 <test_scan@@Base+0x470>
  40a516:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40a520:	cmp    r11,0x1
  40a524:	mov    rdx,r9
  40a527:	jne    40a5d2 <test_scan@@Base+0x742>
  40a52d:	mov    r9,QWORD PTR [rsp+0x18]
  40a532:	mov    r12d,0x5
  40a538:	mov    r11d,0x7
  40a53e:	jmp    40a543 <test_scan@@Base+0x6b3>
  40a540:	mov    r9,rcx
  40a543:	cmp    rax,r9
  40a546:	jbe    40b097 <test_scan@@Base+0x1207>
  40a54c:	mov    ecx,DWORD PTR [rdx]
  40a54e:	add    rcx,rdx
  40a551:	je     40af3a <test_scan@@Base+0x10aa>
  40a557:	movsxd rsi,DWORD PTR [rcx]
  40a55a:	mov    rdi,rcx
  40a55d:	sub    rdi,rsi
  40a560:	cmp    WORD PTR [rdi],0xb
  40a564:	jbe    40a300 <test_scan@@Base+0x470>
  40a56a:	movzx  esi,WORD PTR [rdi+0xa]
  40a56e:	test   si,si
  40a571:	je     40a300 <test_scan@@Base+0x470>
  40a577:	add    rcx,rsi
  40a57a:	mov    esi,DWORD PTR [rcx]
  40a57c:	lea    rsi,[rcx+rsi*1+0x4]
  40a581:	test   rsi,rsi
  40a584:	je     40a5c1 <test_scan@@Base+0x731>
  40a586:	mov    r10d,DWORD PTR [rsi-0x4]
  40a58a:	mov    rcx,r12
  40a58d:	mov    rdi,rbx
  40a590:	cmp    r10,0x5
  40a594:	cmovbe rcx,r10
  40a598:	cmp    rcx,0x7
  40a59c:	cmovg  rcx,r11
  40a5a0:	cmp    rcx,rcx
  40a5a3:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  40a5a5:	seta   cl
  40a5a8:	setb   sil
  40a5ac:	sub    ecx,esi
  40a5ae:	cmp    r10,0x4
  40a5b2:	movsx  ecx,cl
  40a5b5:	jbe    40a5c1 <test_scan@@Base+0x731>
  40a5b7:	test   ecx,ecx
  40a5b9:	jne    40a5c1 <test_scan@@Base+0x731>
  40a5bb:	cmp    r10,0x5
  40a5bf:	jbe    40a5f0 <test_scan@@Base+0x760>
  40a5c1:	sub    rdx,0x4
  40a5c5:	test   r9,r9
  40a5c8:	lea    rcx,[r9-0x1]
  40a5cc:	jne    40a540 <test_scan@@Base+0x6b0>
  40a5d2:	lea    rsi,[rip+0xd567]        # 417b40 <_IO_stdin_used@@Base+0x1b40>
  40a5d9:	mov    edi,0x1
  40a5de:	xor    eax,eax
  40a5e0:	mov    ebp,0xffffffff
  40a5e5:	call   404110 <__printf_chk@plt>
  40a5ea:	jmp    40a720 <test_scan@@Base+0x890>
  40a5ef:	nop
  40a5f0:	cmp    r9,0x1
  40a5f4:	jne    40a5d2 <test_scan@@Base+0x742>
  40a5f6:	cmp    rax,0x2
  40a5fa:	jbe    40a698 <test_scan@@Base+0x808>
  40a600:	mov    edx,DWORD PTR [r14+0x8]
  40a604:	lea    rsi,[r14+rdx*1+0x8]
  40a609:	test   rsi,rsi
  40a60c:	je     40af3a <test_scan@@Base+0x10aa>
  40a612:	movsxd rdx,DWORD PTR [rsi]
  40a615:	mov    rbx,rsi
  40a618:	sub    rbx,rdx
  40a61b:	cmp    WORD PTR [rbx],0xb
  40a61f:	jbe    40a300 <test_scan@@Base+0x470>
  40a625:	movzx  ecx,WORD PTR [rbx+0xa]
  40a629:	test   cx,cx
  40a62c:	je     40a300 <test_scan@@Base+0x470>
  40a632:	lea    rdx,[r14+0xc]
  40a636:	mov    r9d,0x2
  40a63c:	nop    DWORD PTR [rax+0x0]
  40a640:	add    rsi,rcx
  40a643:	mov    rdi,r8
  40a646:	mov    ecx,DWORD PTR [rsi]
  40a648:	lea    rsi,[rsi+rcx*1+0x4]
  40a64d:	mov    ecx,0x6
  40a652:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  40a654:	je     40a9b8 <test_scan@@Base+0xb28>
  40a65a:	add    r9,0x1
  40a65e:	cmp    rax,r9
  40a661:	je     40a698 <test_scan@@Base+0x808>
  40a663:	mov    esi,DWORD PTR [rdx]
  40a665:	add    rsi,rdx
  40a668:	je     40af3a <test_scan@@Base+0x10aa>
  40a66e:	movsxd rcx,DWORD PTR [rsi]
  40a671:	mov    rbx,rsi
  40a674:	sub    rbx,rcx
  40a677:	cmp    WORD PTR [rbx],0xb
  40a67b:	jbe    40a300 <test_scan@@Base+0x470>
  40a681:	movzx  ecx,WORD PTR [rbx+0xa]
  40a685:	add    rdx,0x4
  40a689:	test   cx,cx
  40a68c:	jne    40a640 <test_scan@@Base+0x7b0>
  40a68e:	jmp    40a300 <test_scan@@Base+0x470>
  40a693:	nop    DWORD PTR [rax+rax*1+0x0]
  40a698:	mov    rdx,QWORD PTR [rsp+0x10]
  40a69d:	lea    r8,[rip+0xbe79]        # 41651d <_IO_stdin_used@@Base+0x51d>
  40a6a4:	movzx  ecx,bp
  40a6a7:	mov    rsi,r15
  40a6aa:	xor    ebx,ebx
  40a6ac:	nop    DWORD PTR [rax+0x0]
  40a6b0:	add    rsi,rcx
  40a6b3:	mov    rdi,r8
  40a6b6:	mov    ecx,DWORD PTR [rsi]
  40a6b8:	lea    rsi,[rsi+rcx*1+0x4]
  40a6bd:	mov    ecx,0x7
  40a6c2:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  40a6c4:	je     40a708 <test_scan@@Base+0x878>
  40a6c6:	add    rbx,0x1
  40a6ca:	cmp    rax,rbx
  40a6cd:	je     40a758 <test_scan@@Base+0x8c8>
  40a6d3:	mov    esi,DWORD PTR [rdx]
  40a6d5:	add    rsi,rdx
  40a6d8:	je     40af3a <test_scan@@Base+0x10aa>
  40a6de:	movsxd rcx,DWORD PTR [rsi]
  40a6e1:	mov    rdi,rsi
  40a6e4:	sub    rdi,rcx
  40a6e7:	cmp    WORD PTR [rdi],0xb
  40a6eb:	jbe    40a300 <test_scan@@Base+0x470>
  40a6f1:	movzx  ecx,WORD PTR [rdi+0xa]
  40a6f5:	add    rdx,0x4
  40a6f9:	test   cx,cx
  40a6fc:	jne    40a6b0 <test_scan@@Base+0x820>
  40a6fe:	jmp    40a300 <test_scan@@Base+0x470>
  40a703:	nop    DWORD PTR [rax+rax*1+0x0]
  40a708:	lea    rsi,[rip+0xbe15]        # 416524 <_IO_stdin_used@@Base+0x524>
  40a70f:	mov    edi,0x1
  40a714:	xor    eax,eax
  40a716:	mov    ebp,0xffffffff
  40a71b:	call   404110 <__printf_chk@plt>
  40a720:	mov    rdi,QWORD PTR [rsp+0x8]
  40a725:	call   413150 <flatcc_builder_aligned_free@@Base>
  40a72a:	mov    rbx,QWORD PTR [rsp+0x78]
  40a72f:	xor    rbx,QWORD PTR fs:0x28
  40a738:	mov    eax,ebp
  40a73a:	jne    40b792 <test_scan@@Base+0x1902>
  40a740:	add    rsp,0x88
  40a747:	pop    rbx
  40a748:	pop    rbp
  40a749:	pop    r12
  40a74b:	pop    r13
  40a74d:	pop    r14
  40a74f:	pop    r15
  40a751:	ret    
  40a752:	nop    WORD PTR [rax+rax*1+0x0]
  40a758:	mov    rdx,QWORD PTR [rsp+0x10]
  40a75d:	lea    r8,[rip+0xbb85]        # 4162e9 <_IO_stdin_used@@Base+0x2e9>
  40a764:	movzx  ecx,bp
  40a767:	mov    rsi,r15
  40a76a:	xor    eax,eax
  40a76c:	nop    DWORD PTR [rax+0x0]
  40a770:	add    rsi,rcx
  40a773:	mov    rdi,r8
  40a776:	mov    ecx,DWORD PTR [rsi]
  40a778:	lea    rsi,[rsi+rcx*1+0x4]
  40a77d:	mov    ecx,0x8
  40a782:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  40a784:	je     40a7c8 <test_scan@@Base+0x938>
  40a786:	add    rax,0x1
  40a78a:	cmp    rbx,rax
  40a78d:	je     40af98 <test_scan@@Base+0x1108>
  40a793:	mov    esi,DWORD PTR [rdx]
  40a795:	add    rsi,rdx
  40a798:	je     40af3a <test_scan@@Base+0x10aa>
  40a79e:	movsxd rcx,DWORD PTR [rsi]
  40a7a1:	mov    rdi,rsi
  40a7a4:	sub    rdi,rcx
  40a7a7:	cmp    WORD PTR [rdi],0xb
  40a7ab:	jbe    40a300 <test_scan@@Base+0x470>
  40a7b1:	movzx  ecx,WORD PTR [rdi+0xa]
  40a7b5:	add    rdx,0x4
  40a7b9:	test   cx,cx
  40a7bc:	jne    40a770 <test_scan@@Base+0x8e0>
  40a7be:	jmp    40a300 <test_scan@@Base+0x470>
  40a7c3:	nop    DWORD PTR [rax+rax*1+0x0]
  40a7c8:	test   rax,rax
  40a7cb:	jne    40af98 <test_scan@@Base+0x1108>
  40a7d1:	mov    r8,QWORD PTR [rsp+0x10]
  40a7d6:	lea    rdx,[rip+0xbb1a]        # 4162f7 <_IO_stdin_used@@Base+0x2f7>
  40a7dd:	mov    rcx,r15
  40a7e0:	movzx  esi,bp
  40a7e3:	nop    DWORD PTR [rax+rax*1+0x0]
  40a7e8:	add    rcx,rsi
  40a7eb:	mov    rdi,rdx
  40a7ee:	mov    esi,DWORD PTR [rcx]
  40a7f0:	lea    rsi,[rcx+rsi*1+0x4]
  40a7f5:	mov    ecx,0x9
  40a7fa:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  40a7fc:	je     40a840 <test_scan@@Base+0x9b0>
  40a7fe:	add    rax,0x1
  40a802:	cmp    rbx,rax
  40a805:	jbe    40a8c9 <test_scan@@Base+0xa39>
  40a80b:	mov    ecx,DWORD PTR [r8]
  40a80e:	add    rcx,r8
  40a811:	je     40af3a <test_scan@@Base+0x10aa>
  40a817:	movsxd rsi,DWORD PTR [rcx]
  40a81a:	mov    rdi,rcx
  40a81d:	sub    rdi,rsi
  40a820:	cmp    WORD PTR [rdi],0xb
  40a824:	jbe    40a300 <test_scan@@Base+0x470>
  40a82a:	movzx  esi,WORD PTR [rdi+0xa]
  40a82e:	add    r8,0x4
  40a832:	test   si,si
  40a835:	jne    40a7e8 <test_scan@@Base+0x958>
  40a837:	jmp    40a300 <test_scan@@Base+0x470>
  40a83c:	nop    DWORD PTR [rax+0x0]
  40a840:	cmp    rax,0x2
  40a844:	jne    40a8c9 <test_scan@@Base+0xa39>
  40a84a:	lea    rax,[r14+rbx*4-0x4]
  40a84f:	mov    r8,QWORD PTR [rsp+0x18]
  40a854:	mov    QWORD PTR [rsp+0x48],rax
  40a859:	jmp    40a863 <test_scan@@Base+0x9d3>
  40a85b:	nop    DWORD PTR [rax+rax*1+0x0]
  40a860:	mov    r8,rcx
  40a863:	cmp    rbx,r8
  40a866:	jbe    40b163 <test_scan@@Base+0x12d3>
  40a86c:	mov    ecx,DWORD PTR [rax]
  40a86e:	add    rcx,rax
  40a871:	je     40af3a <test_scan@@Base+0x10aa>
  40a877:	movsxd rsi,DWORD PTR [rcx]
  40a87a:	mov    rdi,rcx
  40a87d:	sub    rdi,rsi
  40a880:	cmp    WORD PTR [rdi],0xb
  40a884:	jbe    40a300 <test_scan@@Base+0x470>
  40a88a:	movzx  esi,WORD PTR [rdi+0xa]
  40a88e:	test   si,si
  40a891:	je     40a300 <test_scan@@Base+0x470>
  40a897:	add    rcx,rsi
  40a89a:	mov    rdi,rdx
  40a89d:	mov    esi,DWORD PTR [rcx]
  40a89f:	lea    rsi,[rcx+rsi*1+0x4]
  40a8a4:	mov    ecx,0x9
  40a8a9:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  40a8ab:	seta   bpl
  40a8af:	setb   cl
  40a8b2:	sub    ebp,ecx
  40a8b4:	movsx  ebp,bpl
  40a8b8:	test   ebp,ebp
  40a8ba:	je     40a8f0 <test_scan@@Base+0xa60>
  40a8bc:	sub    rax,0x4
  40a8c0:	test   r8,r8
  40a8c3:	lea    rcx,[r8-0x1]
  40a8c7:	jne    40a860 <test_scan@@Base+0x9d0>
  40a8c9:	lea    rsi,[rip+0xbcd1]        # 4165a1 <_IO_stdin_used@@Base+0x5a1>
  40a8d0:	mov    edi,0x1
  40a8d5:	xor    eax,eax
  40a8d7:	mov    ebp,0xffffffff
  40a8dc:	call   404110 <__printf_chk@plt>
  40a8e1:	jmp    40a720 <test_scan@@Base+0x890>
  40a8e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40a8f0:	cmp    r8,0x4
  40a8f4:	jne    40a8c9 <test_scan@@Base+0xa39>
  40a8f6:	mov    rax,QWORD PTR [rsp+0x48]
  40a8fb:	mov    rdx,QWORD PTR [rsp+0x18]
  40a900:	lea    r12,[rip+0xbc6c]        # 416573 <_IO_stdin_used@@Base+0x573>
  40a907:	mov    r10d,0x8
  40a90d:	mov    r9d,0xb
  40a913:	jmp    40a91b <test_scan@@Base+0xa8b>
  40a915:	nop    DWORD PTR [rax]
  40a918:	mov    rdx,rcx
  40a91b:	cmp    rbx,rdx
  40a91e:	jbe    40b163 <test_scan@@Base+0x12d3>
  40a924:	mov    ecx,DWORD PTR [rax]
  40a926:	add    rcx,rax
  40a929:	je     40af3a <test_scan@@Base+0x10aa>
  40a92f:	movsxd rsi,DWORD PTR [rcx]
  40a932:	mov    rdi,rcx
  40a935:	sub    rdi,rsi
  40a938:	cmp    WORD PTR [rdi],0xb
  40a93c:	jbe    40a300 <test_scan@@Base+0x470>
  40a942:	movzx  esi,WORD PTR [rdi+0xa]
  40a946:	test   si,si
  40a949:	je     40a300 <test_scan@@Base+0x470>
  40a94f:	add    rcx,rsi
  40a952:	mov    esi,DWORD PTR [rcx]
  40a954:	lea    rsi,[rcx+rsi*1+0x4]
  40a959:	test   rsi,rsi
  40a95c:	je     40a98b <test_scan@@Base+0xafb>
  40a95e:	mov    r8d,DWORD PTR [rsi-0x4]
  40a962:	mov    rcx,r10
  40a965:	mov    rdi,r12
  40a968:	cmp    r8,0x8
  40a96c:	cmovbe rcx,r8
  40a970:	cmp    rcx,0xb
  40a974:	cmovg  rcx,r9
  40a978:	cmp    rcx,rcx
  40a97b:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  40a97d:	jne    40a98b <test_scan@@Base+0xafb>
  40a97f:	cmp    r8,0x7
  40a983:	jbe    40a98b <test_scan@@Base+0xafb>
  40a985:	cmp    r8,0x8
  40a989:	jbe    40a9d8 <test_scan@@Base+0xb48>
  40a98b:	sub    rax,0x4
  40a98f:	test   rdx,rdx
  40a992:	lea    rcx,[rdx-0x1]
  40a996:	jne    40a918 <test_scan@@Base+0xa88>
  40a998:	lea    rsi,[rip+0xbbdf]        # 41657e <_IO_stdin_used@@Base+0x57e>
  40a99f:	mov    edi,0x1
  40a9a4:	xor    eax,eax
  40a9a6:	mov    ebp,0xffffffff
  40a9ab:	call   404110 <__printf_chk@plt>
  40a9b0:	jmp    40a720 <test_scan@@Base+0x890>
  40a9b5:	nop    DWORD PTR [rax]
  40a9b8:	lea    rsi,[rip+0xd5e9]        # 417fa8 <_IO_stdin_used@@Base+0x1fa8>
  40a9bf:	mov    edi,0x1
  40a9c4:	xor    eax,eax
  40a9c6:	mov    ebp,0xffffffff
  40a9cb:	call   404110 <__printf_chk@plt>
  40a9d0:	jmp    40a720 <test_scan@@Base+0x890>
  40a9d5:	nop    DWORD PTR [rax]
  40a9d8:	cmp    rdx,0x4
  40a9dc:	jne    40a998 <test_scan@@Base+0xb08>
  40a9de:	cmp    rbx,0x3
  40a9e2:	mov    edx,0x3
  40a9e7:	mov    r10d,0x8
  40a9ed:	cmovbe rdx,rbx
  40a9f1:	mov    r9d,0xb
  40a9f7:	cmp    rdx,0x1
  40a9fb:	lea    rax,[r14+rdx*4-0x4]
  40aa00:	lea    r8,[rdx-0x1]
  40aa04:	je     40a998 <test_scan@@Base+0xb08>
  40aa06:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40aa10:	cmp    rbx,r8
  40aa13:	jbe    40b163 <test_scan@@Base+0x12d3>
  40aa19:	mov    edx,DWORD PTR [rax]
  40aa1b:	add    rdx,rax
  40aa1e:	je     40af3a <test_scan@@Base+0x10aa>
  40aa24:	movsxd rcx,DWORD PTR [rdx]
  40aa27:	mov    rdi,rdx
  40aa2a:	sub    rdi,rcx
  40aa2d:	cmp    WORD PTR [rdi],0xb
  40aa31:	jbe    40a300 <test_scan@@Base+0x470>
  40aa37:	movzx  ecx,WORD PTR [rdi+0xa]
  40aa3b:	test   cx,cx
  40aa3e:	je     40a300 <test_scan@@Base+0x470>
  40aa44:	add    rdx,rcx
  40aa47:	mov    ecx,DWORD PTR [rdx]
  40aa49:	lea    rsi,[rdx+rcx*1+0x4]
  40aa4e:	test   rsi,rsi
  40aa51:	je     40aa7f <test_scan@@Base+0xbef>
  40aa53:	mov    edx,DWORD PTR [rsi-0x4]
  40aa56:	mov    rcx,r10
  40aa59:	mov    rdi,r12
  40aa5c:	cmp    rdx,0x8
  40aa60:	cmovbe rcx,rdx
  40aa64:	cmp    rcx,0xb
  40aa68:	cmovg  rcx,r9
  40aa6c:	cmp    rcx,rcx
  40aa6f:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  40aa71:	jne    40aa7f <test_scan@@Base+0xbef>
  40aa73:	cmp    rdx,0x7
  40aa77:	jbe    40aa7f <test_scan@@Base+0xbef>
  40aa79:	cmp    rdx,0x8
  40aa7d:	jbe    40aa98 <test_scan@@Base+0xc08>
  40aa7f:	mov    rdx,r8
  40aa82:	sub    rax,0x4
  40aa86:	cmp    rdx,0x1
  40aa8a:	lea    r8,[rdx-0x1]
  40aa8e:	jne    40aa10 <test_scan@@Base+0xb80>
  40aa90:	jmp    40a998 <test_scan@@Base+0xb08>
  40aa95:	nop    DWORD PTR [rax]
  40aa98:	cmp    r8,0x2
  40aa9c:	jne    40a998 <test_scan@@Base+0xb08>
  40aaa2:	lea    rcx,[rip+0xb84e]        # 4162f7 <_IO_stdin_used@@Base+0x2f7>
  40aaa9:	mov    rdx,0xffffffffffffffff
  40aab0:	mov    esi,0x2
  40aab5:	mov    rdi,r14
  40aab8:	call   405ba0 <_start@@Base+0x1350>
  40aabd:	cmp    rax,0x2
  40aac1:	jne    40af00 <test_scan@@Base+0x1070>
  40aac7:	cmp    rbx,0x2
  40aacb:	je     40af00 <test_scan@@Base+0x1070>
  40aad1:	mov    edx,DWORD PTR [r14+0x8]
  40aad5:	lea    rcx,[r14+rdx*1+0x8]
  40aada:	test   rcx,rcx
  40aadd:	je     40af3a <test_scan@@Base+0x10aa>
  40aae3:	movsxd rdx,DWORD PTR [rcx]
  40aae6:	mov    rdi,rcx
  40aae9:	sub    rdi,rdx
  40aaec:	cmp    WORD PTR [rdi],0xb
  40aaf0:	jbe    40a300 <test_scan@@Base+0x470>
  40aaf6:	movzx  edx,WORD PTR [rdi+0xa]
  40aafa:	test   dx,dx
  40aafd:	je     40a300 <test_scan@@Base+0x470>
  40ab03:	lea    r8,[r14+0xc]
  40ab07:	mov    r10d,0x8
  40ab0d:	mov    r9d,0xb
  40ab13:	nop    DWORD PTR [rax+rax*1+0x0]
  40ab18:	add    rcx,rdx
  40ab1b:	mov    edx,DWORD PTR [rcx]
  40ab1d:	lea    rsi,[rcx+rdx*1+0x4]
  40ab22:	test   rsi,rsi
  40ab25:	je     40ab53 <test_scan@@Base+0xcc3>
  40ab27:	mov    edx,DWORD PTR [rsi-0x4]
  40ab2a:	mov    rcx,r10
  40ab2d:	mov    rdi,r12
  40ab30:	cmp    rdx,0x8
  40ab34:	cmovbe rcx,rdx
  40ab38:	cmp    rcx,0xb
  40ab3c:	cmovg  rcx,r9
  40ab40:	cmp    rcx,rcx
  40ab43:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  40ab45:	jne    40ab53 <test_scan@@Base+0xcc3>
  40ab47:	cmp    rdx,0x7
  40ab4b:	jbe    40ab53 <test_scan@@Base+0xcc3>
  40ab4d:	cmp    rdx,0x8
  40ab51:	jbe    40ab98 <test_scan@@Base+0xd08>
  40ab53:	add    rax,0x1
  40ab57:	cmp    rbx,rax
  40ab5a:	je     40af00 <test_scan@@Base+0x1070>
  40ab60:	mov    ecx,DWORD PTR [r8]
  40ab63:	add    rcx,r8
  40ab66:	je     40af3a <test_scan@@Base+0x10aa>
  40ab6c:	movsxd rdx,DWORD PTR [rcx]
  40ab6f:	mov    rdi,rcx
  40ab72:	sub    rdi,rdx
  40ab75:	cmp    WORD PTR [rdi],0xb
  40ab79:	jbe    40a300 <test_scan@@Base+0x470>
  40ab7f:	movzx  edx,WORD PTR [rdi+0xa]
  40ab83:	add    r8,0x4
  40ab87:	test   dx,dx
  40ab8a:	jne    40ab18 <test_scan@@Base+0xc88>
  40ab8c:	jmp    40a300 <test_scan@@Base+0x470>
  40ab91:	nop    DWORD PTR [rax+0x0]
  40ab98:	cmp    rax,0x2
  40ab9c:	jne    40af00 <test_scan@@Base+0x1070>
  40aba2:	lea    rcx,[rip+0xb74e]        # 4162f7 <_IO_stdin_used@@Base+0x2f7>
  40aba9:	mov    rdx,0xffffffffffffffff
  40abb0:	mov    esi,0x3
  40abb5:	mov    rdi,r14
  40abb8:	call   405ba0 <_start@@Base+0x1350>
  40abbd:	cmp    rax,0x4
  40abc1:	mov    r13,rax
  40abc4:	jne    40af3f <test_scan@@Base+0x10af>
  40abca:	lea    rcx,[rip+0xb94c]        # 41651d <_IO_stdin_used@@Base+0x51d>
  40abd1:	mov    edx,0x3
  40abd6:	mov    esi,0x1
  40abdb:	mov    rdi,r14
  40abde:	call   405ba0 <_start@@Base+0x1350>
  40abe3:	cmp    rax,0xffffffffffffffff
  40abe7:	mov    r12,rax
  40abea:	jne    40af5c <test_scan@@Base+0x10cc>
  40abf0:	lea    rcx,[rip+0xb6f2]        # 4162e9 <_IO_stdin_used@@Base+0x2e9>
  40abf7:	mov    edx,0x3
  40abfc:	mov    esi,0x1
  40ac01:	mov    rdi,r14
  40ac04:	call   405ba0 <_start@@Base+0x1350>
  40ac09:	cmp    rax,0xffffffffffffffff
  40ac0d:	mov    QWORD PTR [rsp+0x50],rax
  40ac12:	jne    40af79 <test_scan@@Base+0x10e9>
  40ac18:	lea    rcx,[rip+0xb6d2]        # 4162f1 <_IO_stdin_used@@Base+0x2f1>
  40ac1f:	mov    edx,0x3
  40ac24:	mov    esi,0x1
  40ac29:	mov    rdi,r14
  40ac2c:	call   405ba0 <_start@@Base+0x1350>
  40ac31:	cmp    rax,0x1
  40ac35:	jne    40afb5 <test_scan@@Base+0x1125>
  40ac3b:	lea    rcx,[rip+0xb6b5]        # 4162f7 <_IO_stdin_used@@Base+0x2f7>
  40ac42:	mov    edx,0x3
  40ac47:	mov    esi,0x1
  40ac4c:	mov    rdi,r14
  40ac4f:	call   405ba0 <_start@@Base+0x1350>
  40ac54:	cmp    rax,0x2
  40ac58:	jne    40afd1 <test_scan@@Base+0x1141>
  40ac5e:	lea    rcx,[rip+0xb7ed]        # 416452 <_IO_stdin_used@@Base+0x452>
  40ac65:	mov    edx,0x3
  40ac6a:	mov    esi,0x1
  40ac6f:	mov    rdi,r14
  40ac72:	call   405ba0 <_start@@Base+0x1350>
  40ac77:	cmp    rax,0xffffffffffffffff
  40ac7b:	mov    r12,rax
  40ac7e:	jne    40afee <test_scan@@Base+0x115e>
  40ac84:	lea    rcx,[rip+0xb892]        # 41651d <_IO_stdin_used@@Base+0x51d>
  40ac8b:	mov    edx,0x3
  40ac90:	mov    esi,0x1
  40ac95:	mov    rdi,r14
  40ac98:	call   405ab0 <_start@@Base+0x1260>
  40ac9d:	cmp    rax,0xffffffffffffffff
  40aca1:	mov    QWORD PTR [rsp+0x50],rax
  40aca6:	jne    40b027 <test_scan@@Base+0x1197>
  40acac:	lea    rcx,[rip+0xb636]        # 4162e9 <_IO_stdin_used@@Base+0x2e9>
  40acb3:	mov    edx,0x3
  40acb8:	mov    esi,0x1
  40acbd:	mov    rdi,r14
  40acc0:	call   405ab0 <_start@@Base+0x1260>
  40acc5:	cmp    rax,0xffffffffffffffff
  40acc9:	mov    r12,rax
  40accc:	jne    40b00b <test_scan@@Base+0x117b>
  40acd2:	lea    rcx,[rip+0xb618]        # 4162f1 <_IO_stdin_used@@Base+0x2f1>
  40acd9:	mov    edx,0x3
  40acde:	mov    esi,0x1
  40ace3:	mov    rdi,r14
  40ace6:	call   405ab0 <_start@@Base+0x1260>
  40aceb:	cmp    rax,0x1
  40acef:	jne    40b07c <test_scan@@Base+0x11ec>
  40acf5:	lea    rcx,[rip+0xb5fb]        # 4162f7 <_IO_stdin_used@@Base+0x2f7>
  40acfc:	mov    edx,0x3
  40ad01:	mov    esi,0x1
  40ad06:	mov    rdi,r14
  40ad09:	call   405ab0 <_start@@Base+0x1260>
  40ad0e:	cmp    rax,0x2
  40ad12:	jne    40b0ee <test_scan@@Base+0x125e>
  40ad18:	lea    rcx,[rip+0xb733]        # 416452 <_IO_stdin_used@@Base+0x452>
  40ad1f:	mov    edx,0x3
  40ad24:	mov    esi,0x1
  40ad29:	mov    rdi,r14
  40ad2c:	call   405ab0 <_start@@Base+0x1260>
  40ad31:	cmp    rax,0xffffffffffffffff
  40ad35:	jne    40b0d3 <test_scan@@Base+0x1243>
  40ad3b:	lea    rcx,[rip+0xb5a7]        # 4162e9 <_IO_stdin_used@@Base+0x2e9>
  40ad42:	xor    edx,edx
  40ad44:	xor    esi,esi
  40ad46:	mov    rdi,r14
  40ad49:	call   405ba0 <_start@@Base+0x1350>
  40ad4e:	cmp    rax,0xffffffffffffffff
  40ad52:	jne    40af1d <test_scan@@Base+0x108d>
  40ad58:	lea    rcx,[rip+0xb592]        # 4162f1 <_IO_stdin_used@@Base+0x2f1>
  40ad5f:	xor    edx,edx
  40ad61:	xor    esi,esi
  40ad63:	mov    rdi,r14
  40ad66:	call   405ba0 <_start@@Base+0x1350>
  40ad6b:	cmp    rax,0xffffffffffffffff
  40ad6f:	jne    40b042 <test_scan@@Base+0x11b2>
  40ad75:	lea    rcx,[rip+0xb575]        # 4162f1 <_IO_stdin_used@@Base+0x2f1>
  40ad7c:	mov    edx,0x1
  40ad81:	mov    esi,0x1
  40ad86:	mov    rdi,r14
  40ad89:	call   405ba0 <_start@@Base+0x1350>
  40ad8e:	cmp    rax,0xffffffffffffffff
  40ad92:	jne    40b05f <test_scan@@Base+0x11cf>
  40ad98:	lea    rcx,[rip+0xb54a]        # 4162e9 <_IO_stdin_used@@Base+0x2e9>
  40ad9f:	mov    rdx,rax
  40ada2:	mov    rsi,rbx
  40ada5:	mov    rdi,r14
  40ada8:	call   405ba0 <_start@@Base+0x1350>
  40adad:	cmp    rax,0xffffffffffffffff
  40adb1:	jne    40b0b6 <test_scan@@Base+0x1226>
  40adb7:	lea    rcx,[rip+0xb52b]        # 4162e9 <_IO_stdin_used@@Base+0x2e9>
  40adbe:	xor    edx,edx
  40adc0:	xor    esi,esi
  40adc2:	mov    rdi,r14
  40adc5:	call   405ab0 <_start@@Base+0x1260>
  40adca:	cmp    rax,0xffffffffffffffff
  40adce:	jne    40af1d <test_scan@@Base+0x108d>
  40add4:	lea    rcx,[rip+0xb516]        # 4162f1 <_IO_stdin_used@@Base+0x2f1>
  40addb:	xor    edx,edx
  40addd:	xor    esi,esi
  40addf:	mov    rdi,r14
  40ade2:	call   405ab0 <_start@@Base+0x1260>
  40ade7:	cmp    rax,0xffffffffffffffff
  40adeb:	jne    40b042 <test_scan@@Base+0x11b2>
  40adf1:	lea    rcx,[rip+0xb4f9]        # 4162f1 <_IO_stdin_used@@Base+0x2f1>
  40adf8:	mov    edx,0x1
  40adfd:	mov    esi,0x1
  40ae02:	mov    rdi,r14
  40ae05:	call   405ab0 <_start@@Base+0x1260>
  40ae0a:	cmp    rax,0xffffffffffffffff
  40ae0e:	jne    40b05f <test_scan@@Base+0x11cf>
  40ae14:	lea    rcx,[rip+0xb4ce]        # 4162e9 <_IO_stdin_used@@Base+0x2e9>
  40ae1b:	mov    rdx,rax
  40ae1e:	mov    rsi,rbx
  40ae21:	mov    rdi,r14
  40ae24:	call   405ab0 <_start@@Base+0x1260>
  40ae29:	cmp    rax,0xffffffffffffffff
  40ae2d:	mov    r12,rax
  40ae30:	jne    40b0b6 <test_scan@@Base+0x1226>
  40ae36:	lea    rsi,[rip+0xb4b4]        # 4162f1 <_IO_stdin_used@@Base+0x2f1>
  40ae3d:	mov    rdi,r14
  40ae40:	call   405910 <_start@@Base+0x10c0>
  40ae45:	cmp    rax,0x1
  40ae49:	jne    40b183 <test_scan@@Base+0x12f3>
  40ae4f:	lea    rsi,[rip+0xb6c7]        # 41651d <_IO_stdin_used@@Base+0x51d>
  40ae56:	mov    rdi,r14
  40ae59:	call   405910 <_start@@Base+0x10c0>
  40ae5e:	test   rax,rax
  40ae61:	mov    QWORD PTR [rsp+0x50],rax
  40ae66:	jne    40b19e <test_scan@@Base+0x130e>
  40ae6c:	lea    rsi,[rip+0xb476]        # 4162e9 <_IO_stdin_used@@Base+0x2e9>
  40ae73:	mov    rdi,r14
  40ae76:	call   405910 <_start@@Base+0x10c0>
  40ae7b:	cmp    rax,0x1
  40ae7f:	mov    QWORD PTR [rsp+0x58],rax
  40ae84:	jne    40b168 <test_scan@@Base+0x12d8>
  40ae8a:	lea    rsi,[rip+0xb466]        # 4162f7 <_IO_stdin_used@@Base+0x2f7>
  40ae91:	mov    rdi,r14
  40ae94:	call   405910 <_start@@Base+0x10c0>
  40ae99:	cmp    rax,0x2
  40ae9d:	jne    40b712 <test_scan@@Base+0x1882>
  40aea3:	mov    rax,QWORD PTR [rsp+0x38]
  40aea8:	mov    edx,DWORD PTR [rax-0x4]
  40aeab:	test   rdx,rdx
  40aeae:	je     40aeb9 <test_scan@@Base+0x1029>
  40aeb0:	cmp    BYTE PTR [rax],0x6
  40aeb3:	je     40b1b9 <test_scan@@Base+0x1329>
  40aeb9:	lea    rsi,[rip+0xcf30]        # 417df0 <_IO_stdin_used@@Base+0x1df0>
  40aec0:	mov    edi,0x1
  40aec5:	xor    eax,eax
  40aec7:	mov    ebp,0xffffffff
  40aecc:	call   404110 <__printf_chk@plt>
  40aed1:	jmp    40a720 <test_scan@@Base+0x890>
  40aed6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40aee0:	lea    rsi,[rip+0xcc11]        # 417af8 <_IO_stdin_used@@Base+0x1af8>
  40aee7:	mov    edi,0x1
  40aeec:	xor    eax,eax
  40aeee:	mov    ebp,0xffffffff
  40aef3:	call   404110 <__printf_chk@plt>
  40aef8:	jmp    40a720 <test_scan@@Base+0x890>
  40aefd:	nop    DWORD PTR [rax]
  40af00:	lea    rsi,[rip+0xcc61]        # 417b68 <_IO_stdin_used@@Base+0x1b68>
  40af07:	mov    edi,0x1
  40af0c:	xor    eax,eax
  40af0e:	mov    ebp,0xffffffff
  40af13:	call   404110 <__printf_chk@plt>
  40af18:	jmp    40a720 <test_scan@@Base+0x890>
  40af1d:	lea    rsi,[rip+0xce2c]        # 417d50 <_IO_stdin_used@@Base+0x1d50>
  40af24:	mov    edi,0x1
  40af29:	xor    eax,eax
  40af2b:	mov    ebp,0xffffffff
  40af30:	call   404110 <__printf_chk@plt>
  40af35:	jmp    40a720 <test_scan@@Base+0x890>
  40af3a:	call   40432a <posix_memalign@plt+0x1fa>
  40af3f:	lea    rsi,[rip+0xb653]        # 416599 <_IO_stdin_used@@Base+0x599>
  40af46:	mov    edi,0x1
  40af4b:	xor    eax,eax
  40af4d:	mov    ebp,0xffffffff
  40af52:	call   404110 <__printf_chk@plt>
  40af57:	jmp    40a720 <test_scan@@Base+0x890>
  40af5c:	lea    rsi,[rip+0xcc35]        # 417b98 <_IO_stdin_used@@Base+0x1b98>
  40af63:	mov    edi,0x1
  40af68:	xor    eax,eax
  40af6a:	mov    ebp,0xffffffff
  40af6f:	call   404110 <__printf_chk@plt>
  40af74:	jmp    40a720 <test_scan@@Base+0x890>
  40af79:	lea    rsi,[rip+0xcc40]        # 417bc0 <_IO_stdin_used@@Base+0x1bc0>
  40af80:	mov    edi,0x1
  40af85:	xor    eax,eax
  40af87:	mov    ebp,r12d
  40af8a:	call   404110 <__printf_chk@plt>
  40af8f:	jmp    40a720 <test_scan@@Base+0x890>
  40af94:	nop    DWORD PTR [rax+0x0]
  40af98:	lea    rsi,[rip+0xb5b5]        # 416554 <_IO_stdin_used@@Base+0x554>
  40af9f:	mov    edi,0x1
  40afa4:	xor    eax,eax
  40afa6:	mov    ebp,0xffffffff
  40afab:	call   404110 <__printf_chk@plt>
  40afb0:	jmp    40a720 <test_scan@@Base+0x890>
  40afb5:	lea    rsi,[rip+0xcc2c]        # 417be8 <_IO_stdin_used@@Base+0x1be8>
  40afbc:	mov    edi,0x1
  40afc1:	xor    eax,eax
  40afc3:	call   404110 <__printf_chk@plt>
  40afc8:	mov    ebp,DWORD PTR [rsp+0x50]
  40afcc:	jmp    40a720 <test_scan@@Base+0x890>
  40afd1:	lea    rsi,[rip+0xcc38]        # 417c10 <_IO_stdin_used@@Base+0x1c10>
  40afd8:	mov    edi,0x1
  40afdd:	xor    eax,eax
  40afdf:	mov    ebp,0xffffffff
  40afe4:	call   404110 <__printf_chk@plt>
  40afe9:	jmp    40a720 <test_scan@@Base+0x890>
  40afee:	lea    rsi,[rip+0xcc43]        # 417c38 <_IO_stdin_used@@Base+0x1c38>
  40aff5:	mov    edi,0x1
  40affa:	xor    eax,eax
  40affc:	mov    ebp,0xffffffff
  40b001:	call   404110 <__printf_chk@plt>
  40b006:	jmp    40a720 <test_scan@@Base+0x890>
  40b00b:	lea    rsi,[rip+0xcc86]        # 417c98 <_IO_stdin_used@@Base+0x1c98>
  40b012:	mov    edi,0x1
  40b017:	xor    eax,eax
  40b019:	call   404110 <__printf_chk@plt>
  40b01e:	mov    ebp,DWORD PTR [rsp+0x50]
  40b022:	jmp    40a720 <test_scan@@Base+0x890>
  40b027:	lea    rsi,[rip+0xcc3a]        # 417c68 <_IO_stdin_used@@Base+0x1c68>
  40b02e:	mov    edi,0x1
  40b033:	xor    eax,eax
  40b035:	mov    ebp,r12d
  40b038:	call   404110 <__printf_chk@plt>
  40b03d:	jmp    40a720 <test_scan@@Base+0x890>
  40b042:	lea    rsi,[rip+0xcd2f]        # 417d78 <_IO_stdin_used@@Base+0x1d78>
  40b049:	mov    edi,0x1
  40b04e:	xor    eax,eax
  40b050:	mov    ebp,0xffffffff
  40b055:	call   404110 <__printf_chk@plt>
  40b05a:	jmp    40a720 <test_scan@@Base+0x890>
  40b05f:	lea    rsi,[rip+0xcd32]        # 417d98 <_IO_stdin_used@@Base+0x1d98>
  40b066:	mov    edi,0x1
  40b06b:	xor    eax,eax
  40b06d:	mov    ebp,0xffffffff
  40b072:	call   404110 <__printf_chk@plt>
  40b077:	jmp    40a720 <test_scan@@Base+0x890>
  40b07c:	lea    rsi,[rip+0xcc45]        # 417cc8 <_IO_stdin_used@@Base+0x1cc8>
  40b083:	mov    edi,0x1
  40b088:	xor    eax,eax
  40b08a:	mov    ebp,r12d
  40b08d:	call   404110 <__printf_chk@plt>
  40b092:	jmp    40a720 <test_scan@@Base+0x890>
  40b097:	lea    rcx,[rip+0xe1f2]        # 419290 <_IO_stdin_used@@Base+0x3290>
  40b09e:	lea    rsi,[rip+0xb933]        # 4169d8 <_IO_stdin_used@@Base+0x9d8>
  40b0a5:	lea    rdi,[rip+0xba5c]        # 416b08 <_IO_stdin_used@@Base+0xb08>
  40b0ac:	mov    edx,0x2b5
  40b0b1:	call   404090 <__assert_fail@plt>
  40b0b6:	lea    rsi,[rip+0xcd03]        # 417dc0 <_IO_stdin_used@@Base+0x1dc0>
  40b0bd:	mov    edi,0x1
  40b0c2:	xor    eax,eax
  40b0c4:	mov    ebp,0xffffffff
  40b0c9:	call   404110 <__printf_chk@plt>
  40b0ce:	jmp    40a720 <test_scan@@Base+0x890>
  40b0d3:	lea    rsi,[rip+0xcc46]        # 417d20 <_IO_stdin_used@@Base+0x1d20>
  40b0da:	mov    edi,0x1
  40b0df:	xor    eax,eax
  40b0e1:	mov    ebp,r12d
  40b0e4:	call   404110 <__printf_chk@plt>
  40b0e9:	jmp    40a720 <test_scan@@Base+0x890>
  40b0ee:	lea    rsi,[rip+0xcbfb]        # 417cf0 <_IO_stdin_used@@Base+0x1cf0>
  40b0f5:	mov    edi,0x1
  40b0fa:	xor    eax,eax
  40b0fc:	mov    ebp,r12d
  40b0ff:	call   404110 <__printf_chk@plt>
  40b104:	jmp    40a720 <test_scan@@Base+0x890>
  40b109:	cmp    WORD PTR [rax+rcx*1],0x2a
  40b10e:	jne    40b658 <test_scan@@Base+0x17c8>
  40b114:	mov    rcx,QWORD PTR [rsp+0x18]
  40b119:	mov    rdx,QWORD PTR [rsp+0x48]
  40b11e:	cmp    rbx,rcx
  40b121:	jbe    40b163 <test_scan@@Base+0x12d3>
  40b123:	mov    eax,DWORD PTR [rdx]
  40b125:	add    rax,rdx
  40b128:	je     40b674 <test_scan@@Base+0x17e4>
  40b12e:	movsxd rsi,DWORD PTR [rax]
  40b131:	mov    rdi,rax
  40b134:	sub    rdi,rsi
  40b137:	cmp    WORD PTR [rdi],0x9
  40b13b:	jbe    40b14a <test_scan@@Base+0x12ba>
  40b13d:	movzx  esi,WORD PTR [rdi+0x8]
  40b141:	test   si,si
  40b144:	jne    40b696 <test_scan@@Base+0x1806>
  40b14a:	sub    rdx,0x4
  40b14e:	test   rcx,rcx
  40b151:	lea    rax,[rcx-0x1]
  40b155:	je     40b6a1 <test_scan@@Base+0x1811>
  40b15b:	mov    rcx,rax
  40b15e:	cmp    rbx,rcx
  40b161:	ja     40b123 <test_scan@@Base+0x1293>
  40b163:	call   404c10 <_start@@Base+0x3c0>
  40b168:	lea    rsi,[rip+0xb47d]        # 4165ec <_IO_stdin_used@@Base+0x5ec>
  40b16f:	mov    edi,0x1
  40b174:	xor    eax,eax
  40b176:	mov    ebp,r12d
  40b179:	call   404110 <__printf_chk@plt>
  40b17e:	jmp    40a720 <test_scan@@Base+0x890>
  40b183:	lea    rsi,[rip+0xb42b]        # 4165b5 <_IO_stdin_used@@Base+0x5b5>
  40b18a:	mov    edi,0x1
  40b18f:	xor    eax,eax
  40b191:	mov    ebp,r12d
  40b194:	call   404110 <__printf_chk@plt>
  40b199:	jmp    40a720 <test_scan@@Base+0x890>
  40b19e:	lea    rsi,[rip+0xb42b]        # 4165d0 <_IO_stdin_used@@Base+0x5d0>
  40b1a5:	mov    edi,0x1
  40b1aa:	xor    eax,eax
  40b1ac:	mov    ebp,r12d
  40b1af:	call   404110 <__printf_chk@plt>
  40b1b4:	jmp    40a720 <test_scan@@Base+0x890>
  40b1b9:	xor    r12d,r12d
  40b1bc:	mov    rax,QWORD PTR [rsp+0x38]
  40b1c1:	jmp    40b1cf <test_scan@@Base+0x133f>
  40b1c3:	nop    DWORD PTR [rax+rax*1+0x0]
  40b1c8:	cmp    BYTE PTR [rax+r12*1],0x1
  40b1cd:	je     40b1f5 <test_scan@@Base+0x1365>
  40b1cf:	add    r12,0x1
  40b1d3:	cmp    r12,rdx
  40b1d6:	jne    40b1c8 <test_scan@@Base+0x1338>
  40b1d8:	lea    rsi,[rip+0xcc41]        # 417e20 <_IO_stdin_used@@Base+0x1e20>
  40b1df:	mov    edi,0x1
  40b1e4:	xor    eax,eax
  40b1e6:	mov    ebp,0xffffffff
  40b1eb:	call   404110 <__printf_chk@plt>
  40b1f0:	jmp    40a720 <test_scan@@Base+0x890>
  40b1f5:	cmp    r12,0x2
  40b1f9:	jne    40b1d8 <test_scan@@Base+0x1348>
  40b1fb:	cmp    rdx,0x3
  40b1ff:	jbe    40b227 <test_scan@@Base+0x1397>
  40b201:	mov    rcx,QWORD PTR [rsp+0x38]
  40b206:	cmp    BYTE PTR [rcx+0x3],0x1
  40b20a:	je     40b27c <test_scan@@Base+0x13ec>
  40b20c:	mov    eax,0x3
  40b211:	jmp    40b21e <test_scan@@Base+0x138e>
  40b213:	nop    DWORD PTR [rax+rax*1+0x0]
  40b218:	cmp    BYTE PTR [rcx+rax*1],0x1
  40b21c:	je     40b27c <test_scan@@Base+0x13ec>
  40b21e:	add    rax,0x1
  40b222:	cmp    rax,rdx
  40b225:	jne    40b218 <test_scan@@Base+0x1388>
  40b227:	xor    eax,eax
  40b229:	mov    rcx,QWORD PTR [rsp+0x38]
  40b22e:	jmp    40b23d <test_scan@@Base+0x13ad>
  40b230:	cmp    BYTE PTR [rcx+rsi*1],0x5
  40b234:	mov    rax,rsi
  40b237:	je     40b2bf <test_scan@@Base+0x142f>
  40b23d:	lea    rsi,[rax+0x1]
  40b241:	cmp    rsi,rdx
  40b244:	jne    40b230 <test_scan@@Base+0x13a0>
  40b246:	xor    ecx,ecx
  40b248:	mov    rdi,QWORD PTR [rsp+0x38]
  40b24d:	jmp    40b256 <test_scan@@Base+0x13c6>
  40b24f:	nop
  40b250:	cmp    BYTE PTR [rdi+rcx*1],0x2
  40b254:	je     40b299 <test_scan@@Base+0x1409>
  40b256:	add    rcx,0x1
  40b25a:	cmp    rcx,rdx
  40b25d:	jne    40b250 <test_scan@@Base+0x13c0>
  40b25f:	lea    rsi,[rip+0xcbea]        # 417e50 <_IO_stdin_used@@Base+0x1e50>
  40b266:	mov    edi,0x1
  40b26b:	xor    eax,eax
  40b26d:	mov    ebp,0xffffffff
  40b272:	call   404110 <__printf_chk@plt>
  40b277:	jmp    40a720 <test_scan@@Base+0x890>
  40b27c:	lea    rsi,[rip+0xcd55]        # 417fd8 <_IO_stdin_used@@Base+0x1fd8>
  40b283:	mov    edi,0x1
  40b288:	xor    eax,eax
  40b28a:	mov    ebp,0xffffffff
  40b28f:	call   404110 <__printf_chk@plt>
  40b294:	jmp    40a720 <test_scan@@Base+0x890>
  40b299:	cmp    rcx,0x6
  40b29d:	jne    40b25f <test_scan@@Base+0x13cf>
  40b29f:	xor    ecx,ecx
  40b2a1:	mov    rdi,QWORD PTR [rsp+0x38]
  40b2a6:	jmp    40b2b6 <test_scan@@Base+0x1426>
  40b2a8:	nop    DWORD PTR [rax+rax*1+0x0]
  40b2b0:	cmp    BYTE PTR [rdi+rcx*1],0x3
  40b2b4:	je     40b2dc <test_scan@@Base+0x144c>
  40b2b6:	add    rcx,0x1
  40b2ba:	cmp    rcx,rdx
  40b2bd:	jne    40b2b0 <test_scan@@Base+0x1420>
  40b2bf:	lea    rsi,[rip+0xcbba]        # 417e80 <_IO_stdin_used@@Base+0x1e80>
  40b2c6:	mov    edi,0x1
  40b2cb:	xor    eax,eax
  40b2cd:	mov    ebp,0xffffffff
  40b2d2:	call   404110 <__printf_chk@plt>
  40b2d7:	jmp    40a720 <test_scan@@Base+0x890>
  40b2dc:	cmp    rcx,0x3
  40b2e0:	jne    40b2bf <test_scan@@Base+0x142f>
  40b2e2:	cmp    rsi,0x3
  40b2e6:	jbe    40b2f3 <test_scan@@Base+0x1463>
  40b2e8:	mov    rdi,QWORD PTR [rsp+0x38]
  40b2ed:	cmp    BYTE PTR [rdi+0x3],0x3
  40b2f1:	je     40b310 <test_scan@@Base+0x1480>
  40b2f3:	lea    rsi,[rip+0xcbbe]        # 417eb8 <_IO_stdin_used@@Base+0x1eb8>
  40b2fa:	mov    edi,0x1
  40b2ff:	xor    eax,eax
  40b301:	mov    ebp,0xffffffff
  40b306:	call   404110 <__printf_chk@plt>
  40b30b:	jmp    40a720 <test_scan@@Base+0x890>
  40b310:	cmp    rsi,0x4
  40b314:	je     40b33f <test_scan@@Base+0x14af>
  40b316:	mov    rdi,QWORD PTR [rsp+0x38]
  40b31b:	cmp    BYTE PTR [rdi+0x4],0x3
  40b31f:	je     40b33f <test_scan@@Base+0x14af>
  40b321:	mov    ecx,0x4
  40b326:	jmp    40b336 <test_scan@@Base+0x14a6>
  40b328:	nop    DWORD PTR [rax+rax*1+0x0]
  40b330:	cmp    BYTE PTR [rdi+rcx*1],0x3
  40b334:	je     40b35c <test_scan@@Base+0x14cc>
  40b336:	add    rcx,0x1
  40b33a:	cmp    rcx,rdx
  40b33d:	jne    40b330 <test_scan@@Base+0x14a0>
  40b33f:	lea    rsi,[rip+0xcbb2]        # 417ef8 <_IO_stdin_used@@Base+0x1ef8>
  40b346:	mov    edi,0x1
  40b34b:	xor    eax,eax
  40b34d:	mov    ebp,0xffffffff
  40b352:	call   404110 <__printf_chk@plt>
  40b357:	jmp    40a720 <test_scan@@Base+0x890>
  40b35c:	cmp    rcx,0x5
  40b360:	jne    40b33f <test_scan@@Base+0x14af>
  40b362:	mov    rcx,QWORD PTR [rsp+0x38]
  40b367:	jmp    40b380 <test_scan@@Base+0x14f0>
  40b369:	nop    DWORD PTR [rax+0x0]
  40b370:	test   rax,rax
  40b373:	lea    rdx,[rax-0x1]
  40b377:	je     40b72d <test_scan@@Base+0x189d>
  40b37d:	mov    rax,rdx
  40b380:	cmp    rsi,rax
  40b383:	jbe    40b74f <test_scan@@Base+0x18bf>
  40b389:	cmp    BYTE PTR [rcx+rax*1],0x3
  40b38d:	jne    40b370 <test_scan@@Base+0x14e0>
  40b38f:	cmp    rax,0x5
  40b393:	jne    40b72d <test_scan@@Base+0x189d>
  40b399:	mov    rdx,QWORD PTR [rsp+0x38]
  40b39e:	jmp    40b3a9 <test_scan@@Base+0x1519>
  40b3a0:	cmp    BYTE PTR [rdx+rax*1],0x3
  40b3a4:	mov    r13,rax
  40b3a7:	je     40b3d0 <test_scan@@Base+0x1540>
  40b3a9:	cmp    r13,0x1
  40b3ad:	lea    rax,[r13-0x1]
  40b3b1:	jne    40b3a0 <test_scan@@Base+0x1510>
  40b3b3:	lea    rsi,[rip+0xcbb6]        # 417f70 <_IO_stdin_used@@Base+0x1f70>
  40b3ba:	mov    edi,0x1
  40b3bf:	xor    eax,eax
  40b3c1:	mov    ebp,0xffffffff
  40b3c6:	call   404110 <__printf_chk@plt>
  40b3cb:	jmp    40a720 <test_scan@@Base+0x890>
  40b3d0:	cmp    rax,0x3
  40b3d4:	jne    40b3b3 <test_scan@@Base+0x1523>
  40b3d6:	mov    rax,QWORD PTR [rsp+0x30]
  40b3db:	xor    edx,edx
  40b3dd:	lea    r9,[rip+0xaf1c]        # 416300 <_IO_stdin_used@@Base+0x300>
  40b3e4:	mov    r10d,0x4
  40b3ea:	mov    r11d,0x6
  40b3f0:	mov    r13d,DWORD PTR [rax-0x4]
  40b3f4:	test   r13,r13
  40b3f7:	je     40b43e <test_scan@@Base+0x15ae>
  40b3f9:	nop    DWORD PTR [rax+0x0]
  40b400:	mov    ecx,DWORD PTR [rax]
  40b402:	lea    rsi,[rax+rcx*1+0x4]
  40b407:	test   rsi,rsi
  40b40a:	je     40b680 <test_scan@@Base+0x17f0>
  40b410:	mov    ecx,DWORD PTR [rsi-0x4]
  40b413:	mov    rdi,r9
  40b416:	cmp    rcx,0x4
  40b41a:	mov    r8,rcx
  40b41d:	cmova  rcx,r10
  40b421:	cmp    rcx,0x6
  40b425:	cmovg  rcx,r11
  40b429:	cmp    rcx,rcx
  40b42c:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  40b42e:	jne    40b680 <test_scan@@Base+0x17f0>
  40b434:	cmp    r8d,0x4
  40b438:	jne    40b680 <test_scan@@Base+0x17f0>
  40b43e:	mov    rax,QWORD PTR [rsp+0x30]
  40b443:	lea    r9,[r13*4-0x4]
  40b44b:	lea    r8,[rip+0xaeae]        # 416300 <_IO_stdin_used@@Base+0x300>
  40b452:	lea    rdx,[rax+r9*1]
  40b456:	mov    rax,r13
  40b459:	jmp    40b48a <test_scan@@Base+0x15fa>
  40b45b:	nop    DWORD PTR [rax+rax*1+0x0]
  40b460:	cmp    r13,rax
  40b463:	jbe    40b74a <test_scan@@Base+0x18ba>
  40b469:	mov    ecx,DWORD PTR [rdx]
  40b46b:	mov    rdi,r8
  40b46e:	lea    rsi,[rdx+rcx*1+0x4]
  40b473:	mov    ecx,0x6
  40b478:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  40b47a:	seta   sil
  40b47e:	setb   cl
  40b481:	sub    rdx,0x4
  40b485:	cmp    sil,cl
  40b488:	je     40b494 <test_scan@@Base+0x1604>
  40b48a:	sub    rax,0x1
  40b48e:	cmp    rax,0xffffffffffffffff
  40b492:	jne    40b460 <test_scan@@Base+0x15d0>
  40b494:	mov    rax,QWORD PTR [rsp+0x30]
  40b499:	lea    r8,[rip+0xae60]        # 416300 <_IO_stdin_used@@Base+0x300>
  40b4a0:	lea    rdx,[rax+r9*1]
  40b4a4:	mov    rax,r13
  40b4a7:	jmp    40b4da <test_scan@@Base+0x164a>
  40b4a9:	nop    DWORD PTR [rax+0x0]
  40b4b0:	cmp    r13,rax
  40b4b3:	jbe    40b74a <test_scan@@Base+0x18ba>
  40b4b9:	mov    ecx,DWORD PTR [rdx]
  40b4bb:	mov    rdi,r8
  40b4be:	lea    rsi,[rdx+rcx*1+0x4]
  40b4c3:	mov    ecx,0x6
  40b4c8:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  40b4ca:	seta   sil
  40b4ce:	setb   cl
  40b4d1:	sub    rdx,0x4
  40b4d5:	cmp    sil,cl
  40b4d8:	je     40b4e4 <test_scan@@Base+0x1654>
  40b4da:	sub    rax,0x1
  40b4de:	cmp    rax,0xffffffffffffffff
  40b4e2:	jne    40b4b0 <test_scan@@Base+0x1620>
  40b4e4:	mov    rax,QWORD PTR [rsp+0x30]
  40b4e9:	mov    r11d,0x4
  40b4ef:	mov    r10d,0x6
  40b4f5:	lea    r8,[rax+r9*1]
  40b4f9:	mov    rax,r13
  40b4fc:	sub    rax,0x1
  40b500:	cmp    rax,0xffffffffffffffff
  40b504:	je     40b551 <test_scan@@Base+0x16c1>
  40b506:	cmp    r13,rax
  40b509:	jbe    40b74a <test_scan@@Base+0x18ba>
  40b50f:	mov    edx,DWORD PTR [r8]
  40b512:	lea    rsi,[r8+rdx*1+0x4]
  40b517:	test   rsi,rsi
  40b51a:	je     40b709 <test_scan@@Base+0x1879>
  40b520:	mov    ecx,DWORD PTR [rsi-0x4]
  40b523:	lea    rdi,[rip+0xadd6]        # 416300 <_IO_stdin_used@@Base+0x300>
  40b52a:	cmp    rcx,0x4
  40b52e:	mov    rdx,rcx
  40b531:	cmova  rcx,r11
  40b535:	cmp    rcx,0x6
  40b539:	cmovg  rcx,r10
  40b53d:	cmp    rcx,rcx
  40b540:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  40b542:	jne    40b709 <test_scan@@Base+0x1879>
  40b548:	cmp    edx,0x4
  40b54b:	jne    40b709 <test_scan@@Base+0x1879>
  40b551:	mov    rdx,QWORD PTR [rsp+0x30]
  40b556:	lea    r11,[rip+0xada3]        # 416300 <_IO_stdin_used@@Base+0x300>
  40b55d:	mov    rax,r13
  40b560:	mov    r10d,0x4
  40b566:	add    rdx,r9
  40b569:	mov    r9d,0x6
  40b56f:	sub    rax,0x1
  40b573:	cmp    rax,0xffffffffffffffff
  40b577:	je     40b5ce <test_scan@@Base+0x173e>
  40b579:	cmp    r13,rax
  40b57c:	jbe    40b74a <test_scan@@Base+0x18ba>
  40b582:	mov    ecx,DWORD PTR [rdx]
  40b584:	lea    rsi,[rdx+rcx*1+0x4]
  40b589:	test   rsi,rsi
  40b58c:	je     40b700 <test_scan@@Base+0x1870>
  40b592:	mov    ecx,DWORD PTR [rsi-0x4]
  40b595:	mov    rdi,r11
  40b598:	cmp    rcx,0x4
  40b59c:	mov    r8,rcx
  40b59f:	cmova  rcx,r10
  40b5a3:	cmp    rcx,0x6
  40b5a7:	cmovg  rcx,r9
  40b5ab:	cmp    rcx,rcx
  40b5ae:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  40b5b0:	seta   cl
  40b5b3:	setb   sil
  40b5b7:	sub    ecx,esi
  40b5b9:	cmp    r8d,0x4
  40b5bd:	movsx  ecx,cl
  40b5c0:	jne    40b700 <test_scan@@Base+0x1870>
  40b5c6:	test   ecx,ecx
  40b5c8:	jne    40b700 <test_scan@@Base+0x1870>
  40b5ce:	mov    rdx,QWORD PTR [rsp+0x50]
  40b5d3:	movzx  esi,WORD PTR [rsp+0x26]
  40b5d8:	mov    rax,QWORD PTR [rsp+0x40]
  40b5dd:	mov    rcx,QWORD PTR [rsp+0x28]
  40b5e2:	jmp    40b608 <test_scan@@Base+0x1778>
  40b5e4:	add    rdx,0x1
  40b5e8:	cmp    rbx,rdx
  40b5eb:	jbe    40b625 <test_scan@@Base+0x1795>
  40b5ed:	mov    r15d,DWORD PTR [rax]
  40b5f0:	add    r15,rax
  40b5f3:	add    rax,0x4
  40b5f7:	test   r15,r15
  40b5fa:	je     40b674 <test_scan@@Base+0x17e4>
  40b5fc:	movsxd rcx,DWORD PTR [r15]
  40b5ff:	mov    rsi,r15
  40b602:	sub    rsi,rcx
  40b605:	movzx  esi,WORD PTR [rsi]
  40b608:	cmp    si,0x9
  40b60c:	jbe    40b5e4 <test_scan@@Base+0x1754>
  40b60e:	mov    rdi,r15
  40b611:	sub    rdi,rcx
  40b614:	movzx  ecx,WORD PTR [rdi+0x8]
  40b618:	test   cx,cx
  40b61b:	je     40b5e4 <test_scan@@Base+0x1754>
  40b61d:	cmp    WORD PTR [r15+rcx*1],0xd
  40b623:	jne    40b5e4 <test_scan@@Base+0x1754>
  40b625:	mov    eax,DWORD PTR [r14+0x4]
  40b629:	lea    rax,[r14+rax*1+0x4]
  40b62e:	test   rax,rax
  40b631:	je     40b674 <test_scan@@Base+0x17e4>
  40b633:	mov    rdx,QWORD PTR [rsp+0x58]
  40b638:	add    r14,0x8
  40b63c:	movsxd rcx,DWORD PTR [rax]
  40b63f:	mov    rdi,rax
  40b642:	sub    rdi,rcx
  40b645:	cmp    WORD PTR [rdi],0x9
  40b649:	jbe    40b658 <test_scan@@Base+0x17c8>
  40b64b:	movzx  ecx,WORD PTR [rdi+0x8]
  40b64f:	test   cx,cx
  40b652:	jne    40b109 <test_scan@@Base+0x1279>
  40b658:	add    rdx,0x1
  40b65c:	cmp    rbx,rdx
  40b65f:	je     40b114 <test_scan@@Base+0x1284>
  40b665:	mov    eax,DWORD PTR [r14]
  40b668:	add    rax,r14
  40b66b:	add    r14,0x4
  40b66f:	test   rax,rax
  40b672:	jne    40b63c <test_scan@@Base+0x17ac>
  40b674:	call   404140 <posix_memalign@plt+0x10>
  40b679:	nop    DWORD PTR [rax+0x0]
  40b680:	add    rdx,0x1
  40b684:	add    rax,0x4
  40b688:	cmp    rdx,r13
  40b68b:	jne    40b400 <test_scan@@Base+0x1570>
  40b691:	jmp    40b43e <test_scan@@Base+0x15ae>
  40b696:	cmp    WORD PTR [rax+rsi*1],0x1
  40b69b:	jne    40b14a <test_scan@@Base+0x12ba>
  40b6a1:	sub    r12,0x1
  40b6a5:	mov    rax,QWORD PTR [rsp+0x10]
  40b6aa:	cmp    r12,0xffffffffffffffff
  40b6ae:	je     40a720 <test_scan@@Base+0x890>
  40b6b4:	nop    DWORD PTR [rax+0x0]
  40b6b8:	mov    edx,DWORD PTR [rax]
  40b6ba:	add    rdx,rax
  40b6bd:	je     40b674 <test_scan@@Base+0x17e4>
  40b6bf:	movsxd rcx,DWORD PTR [rdx]
  40b6c2:	mov    rbx,rdx
  40b6c5:	sub    rbx,rcx
  40b6c8:	cmp    WORD PTR [rbx],0x9
  40b6cc:	jbe    40b6d7 <test_scan@@Base+0x1847>
  40b6ce:	movzx  ecx,WORD PTR [rbx+0x8]
  40b6d2:	test   cx,cx
  40b6d5:	jne    40b6f0 <test_scan@@Base+0x1860>
  40b6d7:	sub    r12,0x1
  40b6db:	sub    rax,0x4
  40b6df:	cmp    r12,0xffffffffffffffff
  40b6e3:	jne    40b6b8 <test_scan@@Base+0x1828>
  40b6e5:	jmp    40a720 <test_scan@@Base+0x890>
  40b6ea:	nop    WORD PTR [rax+rax*1+0x0]
  40b6f0:	cmp    WORD PTR [rdx+rcx*1],0x2a
  40b6f5:	je     40a720 <test_scan@@Base+0x890>
  40b6fb:	jmp    40b6d7 <test_scan@@Base+0x1847>
  40b6fd:	nop    DWORD PTR [rax]
  40b700:	sub    rdx,0x4
  40b704:	jmp    40b56f <test_scan@@Base+0x16df>
  40b709:	sub    r8,0x4
  40b70d:	jmp    40b4fc <test_scan@@Base+0x166c>
  40b712:	lea    rsi,[rip+0xaeef]        # 416608 <_IO_stdin_used@@Base+0x608>
  40b719:	mov    edi,0x1
  40b71e:	xor    eax,eax
  40b720:	mov    ebp,r12d
  40b723:	call   404110 <__printf_chk@plt>
  40b728:	jmp    40a720 <test_scan@@Base+0x890>
  40b72d:	lea    rsi,[rip+0xc804]        # 417f38 <_IO_stdin_used@@Base+0x1f38>
  40b734:	mov    edi,0x1
  40b739:	xor    eax,eax
  40b73b:	mov    ebp,0xffffffff
  40b740:	call   404110 <__printf_chk@plt>
  40b745:	jmp    40a720 <test_scan@@Base+0x890>
  40b74a:	call   404be0 <_start@@Base+0x390>
  40b74f:	call   404bb0 <_start@@Base+0x360>
  40b754:	lea    rcx,[rip+0xd9e5]        # 419140 <_IO_stdin_used@@Base+0x3140>
  40b75b:	lea    rsi,[rip+0xbc86]        # 4173e8 <_IO_stdin_used@@Base+0x13e8>
  40b762:	lea    rdi,[rip+0xadfe]        # 416567 <_IO_stdin_used@@Base+0x567>
  40b769:	mov    edx,0x51b
  40b76e:	call   404090 <__assert_fail@plt>
  40b773:	lea    rcx,[rip+0xd9c6]        # 419140 <_IO_stdin_used@@Base+0x3140>
  40b77a:	lea    rsi,[rip+0xbc67]        # 4173e8 <_IO_stdin_used@@Base+0x13e8>
  40b781:	lea    rdi,[rip+0xade3]        # 41656b <_IO_stdin_used@@Base+0x56b>
  40b788:	mov    edx,0x51d
  40b78d:	call   404090 <__assert_fail@plt>
  40b792:	call   404070 <__stack_chk_fail@plt>
  40b797:	call   4045a4 <posix_memalign@plt+0x474>
  40b79c:	nop    DWORD PTR [rax+0x0]

000000000040b7a0 <test_basic_sort@@Base>:
  40b7a0:	push   rbp
  40b7a1:	push   rbx
  40b7a2:	mov    rbx,rdi
  40b7a5:	sub    rsp,0x28
  40b7a9:	mov    rax,QWORD PTR fs:0x28
  40b7b2:	mov    QWORD PTR [rsp+0x18],rax
  40b7b7:	xor    eax,eax
  40b7b9:	mov    BYTE PTR [rsp+0xa],0x6
  40b7be:	mov    BYTE PTR [rsp+0xb],0x7
  40b7c3:	mov    BYTE PTR [rsp+0xc],0x1
  40b7c8:	mov    BYTE PTR [rsp+0xd],0x3
  40b7cd:	mov    BYTE PTR [rsp+0xe],0x4
  40b7d2:	mov    BYTE PTR [rsp+0xf],0x3
  40b7d7:	mov    BYTE PTR [rsp+0x10],0x2
  40b7dc:	mov    BYTE PTR [rsp+0x11],0x1
  40b7e1:	mov    BYTE PTR [rsp+0x12],0x2
  40b7e6:	mov    BYTE PTR [rsp+0x13],0x3
  40b7eb:	mov    BYTE PTR [rsp+0x14],0x3
  40b7f0:	mov    BYTE PTR [rsp+0x15],0x4
  40b7f5:	mov    BYTE PTR [rsp+0x16],0x6
  40b7fa:	mov    BYTE PTR [rsp+0x17],0x7
  40b7ff:	call   40faf0 <flatcc_builder_reset@@Base>
  40b804:	lea    rsi,[rip+0xa930]        # 41613b <_IO_stdin_used@@Base+0x13b>
  40b80b:	xor    ecx,ecx
  40b80d:	xor    edx,edx
  40b80f:	mov    rdi,rbx
  40b812:	call   410330 <flatcc_builder_start_buffer@@Base>
  40b817:	test   eax,eax
  40b819:	jne    40b828 <test_basic_sort@@Base+0x88>
  40b81b:	mov    esi,0x24
  40b820:	mov    rdi,rbx
  40b823:	call   410fa0 <flatcc_builder_start_table@@Base>
  40b828:	lea    rsi,[rip+0xa924]        # 416153 <_IO_stdin_used@@Base+0x153>
  40b82f:	mov    rdi,rbx
  40b832:	call   4126b0 <flatcc_builder_create_string_str@@Base>
  40b837:	test   eax,eax
  40b839:	mov    ebp,eax
  40b83b:	je     40b851 <test_basic_sort@@Base+0xb1>
  40b83d:	mov    esi,0x3
  40b842:	mov    rdi,rbx
  40b845:	call   412a10 <flatcc_builder_table_add_offset@@Base>
  40b84a:	test   rax,rax
  40b84d:	je     40b851 <test_basic_sort@@Base+0xb1>
  40b84f:	mov    DWORD PTR [rax],ebp
  40b851:	lea    rsi,[rsp+0xa]
  40b856:	mov    r9d,0xffffffff
  40b85c:	mov    r8d,0x1
  40b862:	mov    ecx,0x1
  40b867:	mov    edx,0x7
  40b86c:	mov    rdi,rbx
  40b86f:	call   411af0 <flatcc_builder_create_vector@@Base>
  40b874:	test   eax,eax
  40b876:	mov    ebp,eax
  40b878:	je     40b88e <test_basic_sort@@Base+0xee>
  40b87a:	mov    esi,0x5
  40b87f:	mov    rdi,rbx
  40b882:	call   412a10 <flatcc_builder_table_add_offset@@Base>
  40b887:	test   rax,rax
  40b88a:	je     40b88e <test_basic_sort@@Base+0xee>
  40b88c:	mov    DWORD PTR [rax],ebp
  40b88e:	lea    rsi,[rip+0xdd5b]        # 4195f0 <_IO_stdin_used@@Base+0x35f0>
  40b895:	mov    edx,0x1
  40b89a:	mov    rdi,rbx
  40b89d:	call   4118e0 <flatcc_builder_check_required@@Base>
  40b8a2:	test   eax,eax
  40b8a4:	je     40bc05 <test_basic_sort@@Base+0x465>
  40b8aa:	mov    rdi,rbx
  40b8ad:	call   411960 <flatcc_builder_end_table@@Base>
  40b8b2:	mov    rdi,rbx
  40b8b5:	mov    esi,eax
  40b8b7:	call   410410 <flatcc_builder_end_buffer@@Base>
  40b8bc:	mov    rsi,rsp
  40b8bf:	mov    rdi,rbx
  40b8c2:	call   412ed0 <flatcc_builder_get_direct_buffer@@Base>
  40b8c7:	test   rax,rax
  40b8ca:	je     40b8d5 <test_basic_sort@@Base+0x135>
  40b8cc:	cmp    DWORD PTR [rax+0x4],0x534e4f4d
  40b8d3:	je     40b8e0 <test_basic_sort@@Base+0x140>
  40b8d5:	call   4041cc <posix_memalign@plt+0x9c>
  40b8da:	nop    WORD PTR [rax+rax*1+0x0]
  40b8e0:	mov    edx,DWORD PTR [rax]
  40b8e2:	add    rax,rdx
  40b8e5:	je     40b8d5 <test_basic_sort@@Base+0x135>
  40b8e7:	movsxd rdx,DWORD PTR [rax]
  40b8ea:	mov    rbx,rax
  40b8ed:	sub    rbx,rdx
  40b8f0:	cmp    WORD PTR [rbx],0xf
  40b8f4:	jbe    40ba8e <test_basic_sort@@Base+0x2ee>
  40b8fa:	movzx  edx,WORD PTR [rbx+0xe]
  40b8fe:	test   dx,dx
  40b901:	je     40ba8e <test_basic_sort@@Base+0x2ee>
  40b907:	add    rax,rdx
  40b90a:	mov    edx,DWORD PTR [rax]
  40b90c:	lea    rdx,[rax+rdx*1+0x4]
  40b911:	test   rdx,rdx
  40b914:	je     40ba8e <test_basic_sort@@Base+0x2ee>
  40b91a:	mov    r10d,DWORD PTR [rdx-0x4]
  40b91e:	test   r10,r10
  40b921:	je     40ba8e <test_basic_sort@@Base+0x2ee>
  40b927:	lea    rsi,[r10-0x1]
  40b92b:	shr    r10,1
  40b92e:	lea    r11,[r10+r10*1]
  40b932:	nop    WORD PTR [rax+rax*1+0x0]
  40b938:	cmp    rsi,r11
  40b93b:	jb     40b9da <test_basic_sort@@Base+0x23a>
  40b941:	mov    rcx,r10
  40b944:	mov    rax,r11
  40b947:	jmp    40b9a7 <test_basic_sort@@Base+0x207>
  40b949:	nop    DWORD PTR [rax+0x0]
  40b950:	mov    edi,DWORD PTR [rdx-0x4]
  40b953:	cmp    rdi,rax
  40b956:	jbe    40bbda <test_basic_sort@@Base+0x43a>
  40b95c:	lea    r9,[rax+0x1]
  40b960:	movzx  r8d,BYTE PTR [rdx+rax*1]
  40b965:	cmp    rdi,r9
  40b968:	jbe    40bbda <test_basic_sort@@Base+0x43a>
  40b96e:	cmp    r8b,BYTE PTR [rdx+rax*1+0x1]
  40b973:	cmovae r9,rax
  40b977:	cmp    rdi,rcx
  40b97a:	jbe    40bbda <test_basic_sort@@Base+0x43a>
  40b980:	lea    r8,[rdx+rcx*1]
  40b984:	mov    rcx,r9
  40b987:	lea    r9,[rdx+rcx*1]
  40b98b:	movzx  edi,BYTE PTR [r8]
  40b98f:	movzx  eax,BYTE PTR [r9]
  40b993:	cmp    dil,al
  40b996:	jae    40b9da <test_basic_sort@@Base+0x23a>
  40b998:	mov    BYTE PTR [r9],dil
  40b99b:	mov    BYTE PTR [r8],al
  40b99e:	lea    rax,[rcx+rcx*1]
  40b9a2:	cmp    rsi,rax
  40b9a5:	jb     40b9da <test_basic_sort@@Base+0x23a>
  40b9a7:	cmp    rsi,rax
  40b9aa:	ja     40b950 <test_basic_sort@@Base+0x1b0>
  40b9ac:	mov    r9d,DWORD PTR [rdx-0x4]
  40b9b0:	cmp    rcx,r9
  40b9b3:	jae    40bbda <test_basic_sort@@Base+0x43a>
  40b9b9:	lea    r8,[rdx+rcx*1]
  40b9bd:	cmp    rax,r9
  40b9c0:	movzx  edi,BYTE PTR [r8]
  40b9c4:	jae    40bbda <test_basic_sort@@Base+0x43a>
  40b9ca:	mov    rcx,rax
  40b9cd:	lea    r9,[rdx+rcx*1]
  40b9d1:	movzx  eax,BYTE PTR [r9]
  40b9d5:	cmp    dil,al
  40b9d8:	jb     40b998 <test_basic_sort@@Base+0x1f8>
  40b9da:	sub    r10,0x1
  40b9de:	sub    r11,0x2
  40b9e2:	cmp    r10,0xffffffffffffffff
  40b9e6:	jne    40b938 <test_basic_sort@@Base+0x198>
  40b9ec:	nop    DWORD PTR [rax+0x0]
  40b9f0:	test   rsi,rsi
  40b9f3:	je     40baad <test_basic_sort@@Base+0x30d>
  40b9f9:	movzx  eax,BYTE PTR [rdx+rsi*1]
  40b9fd:	movzx  ecx,BYTE PTR [rdx]
  40ba00:	mov    BYTE PTR [rdx+rsi*1],cl
  40ba03:	mov    BYTE PTR [rdx],al
  40ba05:	sub    rsi,0x1
  40ba09:	xor    ecx,ecx
  40ba0b:	xor    eax,eax
  40ba0d:	jmp    40ba67 <test_basic_sort@@Base+0x2c7>
  40ba0f:	nop
  40ba10:	mov    r8d,DWORD PTR [rdx-0x4]
  40ba14:	cmp    r8,rax
  40ba17:	jbe    40bbda <test_basic_sort@@Base+0x43a>
  40ba1d:	lea    rdi,[rax+0x1]
  40ba21:	movzx  r9d,BYTE PTR [rdx+rax*1]
  40ba26:	cmp    r8,rdi
  40ba29:	jbe    40bbda <test_basic_sort@@Base+0x43a>
  40ba2f:	cmp    r9b,BYTE PTR [rdx+rax*1+0x1]
  40ba34:	cmovae rdi,rax
  40ba38:	cmp    r8,rcx
  40ba3b:	jbe    40bbda <test_basic_sort@@Base+0x43a>
  40ba41:	lea    r9,[rdx+rcx*1]
  40ba45:	mov    rcx,rdi
  40ba48:	movzx  r8d,BYTE PTR [r9]
  40ba4c:	lea    rdi,[rdx+rcx*1]
  40ba50:	movzx  eax,BYTE PTR [rdi]
  40ba53:	cmp    al,r8b
  40ba56:	jbe    40b9f0 <test_basic_sort@@Base+0x250>
  40ba58:	mov    BYTE PTR [rdi],r8b
  40ba5b:	mov    BYTE PTR [r9],al
  40ba5e:	lea    rax,[rcx+rcx*1]
  40ba62:	cmp    rsi,rax
  40ba65:	jb     40b9f0 <test_basic_sort@@Base+0x250>
  40ba67:	cmp    rsi,rax
  40ba6a:	ja     40ba10 <test_basic_sort@@Base+0x270>
  40ba6c:	mov    edi,DWORD PTR [rdx-0x4]
  40ba6f:	cmp    rdi,rcx
  40ba72:	jbe    40bbda <test_basic_sort@@Base+0x43a>
  40ba78:	lea    r9,[rdx+rcx*1]
  40ba7c:	cmp    rdi,rax
  40ba7f:	movzx  r8d,BYTE PTR [r9]
  40ba83:	jbe    40bbda <test_basic_sort@@Base+0x43a>
  40ba89:	mov    rcx,rax
  40ba8c:	jmp    40ba4c <test_basic_sort@@Base+0x2ac>
  40ba8e:	lea    rcx,[rip+0xd69b]        # 419130 <_IO_stdin_used@@Base+0x3130>
  40ba95:	lea    rsi,[rip+0xb94c]        # 4173e8 <_IO_stdin_used@@Base+0x13e8>
  40ba9c:	lea    rdi,[rip+0xc575]        # 418018 <_IO_stdin_used@@Base+0x2018>
  40baa3:	mov    edx,0x610
  40baa8:	call   404090 <__assert_fail@plt>
  40baad:	mov    eax,DWORD PTR [rdx-0x4]
  40bab0:	cmp    eax,0x7
  40bab3:	jne    40ba8e <test_basic_sort@@Base+0x2ee>
  40bab5:	movzx  edi,BYTE PTR [rdx]
  40bab8:	cmp    dil,0x1
  40babc:	jne    40bbab <test_basic_sort@@Base+0x40b>
  40bac2:	mov    r8d,0x1
  40bac8:	xor    r9d,r9d
  40bacb:	nop    DWORD PTR [rax+rax*1+0x0]
  40bad0:	mov    r10d,0x6
  40bad6:	xor    esi,esi
  40bad8:	mov    rcx,r10
  40badb:	sub    rcx,rsi
  40bade:	shr    rcx,1
  40bae1:	add    rcx,rsi
  40bae4:	cmp    rcx,0x6
  40bae8:	ja     40bbda <test_basic_sort@@Base+0x43a>
  40baee:	cmp    dil,BYTE PTR [rdx+rcx*1]
  40baf2:	jbe    40bb1f <test_basic_sort@@Base+0x37f>
  40baf4:	jmp    40bb5c <test_basic_sort@@Base+0x3bc>
  40baf6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40bb00:	mov    rax,rcx
  40bb03:	sub    rax,rsi
  40bb06:	shr    rax,1
  40bb09:	add    rax,rsi
  40bb0c:	cmp    rax,0x6
  40bb10:	ja     40bbda <test_basic_sort@@Base+0x43a>
  40bb16:	cmp    dil,BYTE PTR [rdx+rax*1]
  40bb1a:	ja     40bb68 <test_basic_sort@@Base+0x3c8>
  40bb1c:	mov    rcx,rax
  40bb1f:	cmp    rcx,rsi
  40bb22:	ja     40bb00 <test_basic_sort@@Base+0x360>
  40bb24:	cmp    rcx,rsi
  40bb27:	je     40bb79 <test_basic_sort@@Base+0x3d9>
  40bb29:	lea    rsi,[rip+0xc518]        # 418048 <_IO_stdin_used@@Base+0x2048>
  40bb30:	mov    edi,0x1
  40bb35:	xor    eax,eax
  40bb37:	call   404110 <__printf_chk@plt>
  40bb3c:	mov    eax,0xffffffff
  40bb41:	mov    rbx,QWORD PTR [rsp+0x18]
  40bb46:	xor    rbx,QWORD PTR fs:0x28
  40bb4f:	jne    40bc00 <test_basic_sort@@Base+0x460>
  40bb55:	add    rsp,0x28
  40bb59:	pop    rbx
  40bb5a:	pop    rbp
  40bb5b:	ret    
  40bb5c:	mov    rax,rcx
  40bb5f:	mov    rcx,r10
  40bb62:	nop    WORD PTR [rax+rax*1+0x0]
  40bb68:	lea    rsi,[rax+0x1]
  40bb6c:	cmp    rcx,rsi
  40bb6f:	jbe    40bb24 <test_basic_sort@@Base+0x384>
  40bb71:	mov    r10,rcx
  40bb74:	jmp    40bad8 <test_basic_sort@@Base+0x338>
  40bb79:	cmp    dil,BYTE PTR [rdx+rcx*1]
  40bb7d:	jne    40bb29 <test_basic_sort@@Base+0x389>
  40bb7f:	cmp    r8b,0x4
  40bb83:	je     40bbc8 <test_basic_sort@@Base+0x428>
  40bb85:	cmp    r9,rcx
  40bb88:	jne    40bb29 <test_basic_sort@@Base+0x389>
  40bb8a:	movzx  r9d,r8b
  40bb8e:	cmp    r9,0x6
  40bb92:	ja     40bbf9 <test_basic_sort@@Base+0x459>
  40bb94:	movzx  eax,r8b
  40bb98:	add    r8d,0x1
  40bb9c:	movzx  edi,BYTE PTR [rsp+rax*1+0x11]
  40bba1:	cmp    dil,BYTE PTR [rdx+r9*1]
  40bba5:	je     40bad0 <test_basic_sort@@Base+0x330>
  40bbab:	lea    rsi,[rip+0xaa74]        # 416626 <_IO_stdin_used@@Base+0x626>
  40bbb2:	mov    edi,0x1
  40bbb7:	xor    eax,eax
  40bbb9:	call   404110 <__printf_chk@plt>
  40bbbe:	mov    eax,0xffffffff
  40bbc3:	jmp    40bb41 <test_basic_sort@@Base+0x3a1>
  40bbc8:	cmp    rcx,0x2
  40bbcc:	jne    40bb29 <test_basic_sort@@Base+0x389>
  40bbd2:	mov    r9d,0x4
  40bbd8:	jmp    40bb94 <test_basic_sort@@Base+0x3f4>
  40bbda:	lea    rcx,[rip+0xd84f]        # 419430 <_IO_stdin_used@@Base+0x3430>
  40bbe1:	lea    rsi,[rip+0xae98]        # 416a80 <_IO_stdin_used@@Base+0xa80>
  40bbe8:	lea    rdi,[rip+0xaf19]        # 416b08 <_IO_stdin_used@@Base+0xb08>
  40bbef:	mov    edx,0x18b
  40bbf4:	call   404090 <__assert_fail@plt>
  40bbf9:	xor    eax,eax
  40bbfb:	jmp    40bb41 <test_basic_sort@@Base+0x3a1>
  40bc00:	call   404070 <__stack_chk_fail@plt>
  40bc05:	call   4045a4 <posix_memalign@plt+0x474>
  40bc0a:	nop    WORD PTR [rax+rax*1+0x0]

000000000040bc10 <test_clone_slice@@Base>:
  40bc10:	push   r15
  40bc12:	push   r14
  40bc14:	push   r13
  40bc16:	push   r12
  40bc18:	push   rbp
  40bc19:	push   rbx
  40bc1a:	mov    rbx,rdi
  40bc1d:	sub    rsp,0x48
  40bc21:	mov    rax,QWORD PTR fs:0x28
  40bc2a:	mov    QWORD PTR [rsp+0x38],rax
  40bc2f:	xor    eax,eax
  40bc31:	mov    BYTE PTR [rsp+0x31],0x0
  40bc36:	mov    BYTE PTR [rsp+0x32],0x1
  40bc3b:	mov    BYTE PTR [rsp+0x33],0x0
  40bc40:	mov    BYTE PTR [rsp+0x34],0x0
  40bc45:	mov    BYTE PTR [rsp+0x35],0x1
  40bc4a:	mov    BYTE PTR [rsp+0x36],0x0
  40bc4f:	mov    BYTE PTR [rsp+0x37],0x0
  40bc54:	call   40faf0 <flatcc_builder_reset@@Base>
  40bc59:	lea    rsi,[rip+0xa4db]        # 41613b <_IO_stdin_used@@Base+0x13b>
  40bc60:	xor    ecx,ecx
  40bc62:	xor    edx,edx
  40bc64:	mov    rdi,rbx
  40bc67:	call   410330 <flatcc_builder_start_buffer@@Base>
  40bc6c:	test   eax,eax
  40bc6e:	jne    40bc7d <test_clone_slice@@Base+0x6d>
  40bc70:	mov    esi,0x24
  40bc75:	mov    rdi,rbx
  40bc78:	call   410fa0 <flatcc_builder_start_table@@Base>
  40bc7d:	lea    rsi,[rip+0xa9b8]        # 41663c <_IO_stdin_used@@Base+0x63c>
  40bc84:	mov    rdi,rbx
  40bc87:	call   4126b0 <flatcc_builder_create_string_str@@Base>
  40bc8c:	test   eax,eax
  40bc8e:	mov    ebp,eax
  40bc90:	je     40bca6 <test_clone_slice@@Base+0x96>
  40bc92:	mov    esi,0x3
  40bc97:	mov    rdi,rbx
  40bc9a:	call   412a10 <flatcc_builder_table_add_offset@@Base>
  40bc9f:	test   rax,rax
  40bca2:	je     40bca6 <test_clone_slice@@Base+0x96>
  40bca4:	mov    DWORD PTR [rax],ebp
  40bca6:	lea    rax,[rsp+0x31]
  40bcab:	mov    r9d,0xffffffff
  40bcb1:	mov    r8d,0x1
  40bcb7:	mov    ecx,0x1
  40bcbc:	mov    edx,0x7
  40bcc1:	mov    rdi,rbx
  40bcc4:	mov    rsi,rax
  40bcc7:	mov    QWORD PTR [rsp+0x8],rax
  40bccc:	call   411af0 <flatcc_builder_create_vector@@Base>
  40bcd1:	test   eax,eax
  40bcd3:	mov    ebp,eax
  40bcd5:	je     40bceb <test_clone_slice@@Base+0xdb>
  40bcd7:	mov    esi,0x18
  40bcdc:	mov    rdi,rbx
  40bcdf:	call   412a10 <flatcc_builder_table_add_offset@@Base>
  40bce4:	test   rax,rax
  40bce7:	je     40bceb <test_clone_slice@@Base+0xdb>
  40bce9:	mov    DWORD PTR [rax],ebp
  40bceb:	mov    ecx,0x3fffffff
  40bcf0:	mov    edx,0x2
  40bcf5:	mov    esi,0x4
  40bcfa:	mov    rdi,rbx
  40bcfd:	call   410d80 <flatcc_builder_start_vector@@Base>
  40bd02:	mov    esi,0x2
  40bd07:	mov    rdi,rbx
  40bd0a:	call   4106e0 <flatcc_builder_extend_vector@@Base>
  40bd0f:	mov    edx,0x16
  40bd14:	mov    ecx,0x2c
  40bd19:	mov    rdi,rbx
  40bd1c:	mov    WORD PTR [rax],dx
  40bd1f:	mov    WORD PTR [rax+0x4],cx
  40bd23:	call   411c80 <flatcc_builder_end_vector@@Base>
  40bd28:	test   eax,eax
  40bd2a:	mov    ebp,eax
  40bd2c:	je     40bd42 <test_clone_slice@@Base+0x132>
  40bd2e:	mov    esi,0x9
  40bd33:	mov    rdi,rbx
  40bd36:	call   412a10 <flatcc_builder_table_add_offset@@Base>
  40bd3b:	test   rax,rax
  40bd3e:	je     40bd42 <test_clone_slice@@Base+0x132>
  40bd40:	mov    DWORD PTR [rax],ebp
  40bd42:	xor    esi,esi
  40bd44:	mov    ecx,0x10
  40bd49:	mov    edx,0x20
  40bd4e:	mov    rdi,rbx
  40bd51:	call   412840 <flatcc_builder_table_add@@Base>
  40bd56:	lea    rsi,[rip+0xd893]        # 4195f0 <_IO_stdin_used@@Base+0x35f0>
  40bd5d:	mov    DWORD PTR [rax],0xc2293333
  40bd63:	mov    edx,0x1
  40bd68:	mov    rdi,rbx
  40bd6b:	call   4118e0 <flatcc_builder_check_required@@Base>
  40bd70:	test   eax,eax
  40bd72:	je     40c74e <test_clone_slice@@Base+0xb3e>
  40bd78:	mov    rdi,rbx
  40bd7b:	call   411960 <flatcc_builder_end_table@@Base>
  40bd80:	mov    rdi,rbx
  40bd83:	mov    esi,eax
  40bd85:	call   410410 <flatcc_builder_end_buffer@@Base>
  40bd8a:	lea    rax,[rsp+0x28]
  40bd8f:	mov    rdi,rbx
  40bd92:	mov    rsi,rax
  40bd95:	mov    QWORD PTR [rsp+0x10],rax
  40bd9a:	call   413000 <flatcc_builder_finalize_aligned_buffer@@Base>
  40bd9f:	mov    r15,rax
  40bda2:	mov    rax,QWORD PTR [rip+0x1324f]        # 41eff8 <stderr@GLIBC_2.2.5>
  40bda9:	mov    rdx,QWORD PTR [rsp+0x28]
  40bdae:	lea    rdi,[rip+0xa892]        # 416647 <_IO_stdin_used@@Base+0x647>
  40bdb5:	mov    rsi,r15
  40bdb8:	mov    rcx,QWORD PTR [rax]
  40bdbb:	call   4049a0 <_start@@Base+0x150>
  40bdc0:	test   r15,r15
  40bdc3:	je     40bdd3 <test_clone_slice@@Base+0x1c3>
  40bdc5:	cmp    DWORD PTR [r15+0x4],0x534e4f4d
  40bdcd:	je     40c560 <test_clone_slice@@Base+0x950>
  40bdd3:	mov    rdi,rbx
  40bdd6:	call   40faf0 <flatcc_builder_reset@@Base>
  40bddb:	lea    rsi,[rip+0xa359]        # 41613b <_IO_stdin_used@@Base+0x13b>
  40bde2:	xor    ecx,ecx
  40bde4:	xor    edx,edx
  40bde6:	mov    rdi,rbx
  40bde9:	call   410330 <flatcc_builder_start_buffer@@Base>
  40bdee:	test   eax,eax
  40bdf0:	jne    40c210 <test_clone_slice@@Base+0x600>
  40bdf6:	xor    r12d,r12d
  40bdf9:	mov    esi,0x24
  40bdfe:	mov    rdi,rbx
  40be01:	call   410fa0 <flatcc_builder_start_table@@Base>
  40be06:	test   r12,r12
  40be09:	je     40c210 <test_clone_slice@@Base+0x600>
  40be0f:	movsxd rax,DWORD PTR [r12]
  40be13:	mov    rdx,r12
  40be16:	sub    rdx,rax
  40be19:	movzx  ecx,WORD PTR [rdx]
  40be1c:	cmp    cx,0xb
  40be20:	jbe    40be68 <test_clone_slice@@Base+0x258>
  40be22:	movzx  eax,WORD PTR [rdx+0xa]
  40be26:	test   ax,ax
  40be29:	je     40be68 <test_clone_slice@@Base+0x258>
  40be2b:	add    rax,r12
  40be2e:	mov    esi,DWORD PTR [rax]
  40be30:	lea    rbp,[rax+rsi*1+0x4]
  40be35:	test   rbp,rbp
  40be38:	je     40c758 <test_clone_slice@@Base+0xb48>
  40be3e:	cmp    cx,0x35
  40be42:	ja     40be90 <test_clone_slice@@Base+0x280>
  40be44:	lea    rcx,[rip+0xd2c5]        # 419110 <_IO_stdin_used@@Base+0x3110>
  40be4b:	lea    rsi,[rip+0xb596]        # 4173e8 <_IO_stdin_used@@Base+0x13e8>
  40be52:	lea    rdi,[rip+0xa808]        # 416661 <_IO_stdin_used@@Base+0x661>
  40be59:	mov    edx,0x646
  40be5e:	call   404090 <__assert_fail@plt>
  40be63:	nop    DWORD PTR [rax+rax*1+0x0]
  40be68:	lea    rcx,[rip+0xd3a1]        # 419210 <_IO_stdin_used@@Base+0x3210>
  40be6f:	lea    rsi,[rip+0xab62]        # 4169d8 <_IO_stdin_used@@Base+0x9d8>
  40be76:	lea    rdi,[rip+0xacc3]        # 416b40 <_IO_stdin_used@@Base+0xb40>
  40be7d:	mov    edx,0x2bb
  40be82:	call   404090 <__assert_fail@plt>
  40be87:	nop    WORD PTR [rax+rax*1+0x0]
  40be90:	movzx  eax,WORD PTR [rdx+0x34]
  40be94:	test   ax,ax
  40be97:	je     40be44 <test_clone_slice@@Base+0x234>
  40be99:	add    rax,r12
  40be9c:	mov    ecx,DWORD PTR [rax]
  40be9e:	lea    r13,[rax+rcx*1+0x4]
  40bea3:	test   r13,r13
  40bea6:	je     40be44 <test_clone_slice@@Base+0x234>
  40bea8:	movzx  eax,WORD PTR [rdx+0x16]
  40beac:	test   ax,ax
  40beaf:	je     40c777 <test_clone_slice@@Base+0xb67>
  40beb5:	add    rax,r12
  40beb8:	mov    edx,DWORD PTR [rax]
  40beba:	lea    r14,[rax+rdx*1+0x4]
  40bebf:	test   r14,r14
  40bec2:	je     40c777 <test_clone_slice@@Base+0xb67>
  40bec8:	mov    edx,DWORD PTR [rbp-0x4]
  40becb:	mov    rsi,rbp
  40bece:	mov    rdi,rbx
  40bed1:	call   412590 <flatcc_builder_create_string@@Base>
  40bed6:	test   eax,eax
  40bed8:	mov    DWORD PTR [rsp+0x18],eax
  40bedc:	je     40bef6 <test_clone_slice@@Base+0x2e6>
  40bede:	mov    esi,0x3
  40bee3:	mov    rdi,rbx
  40bee6:	call   412a10 <flatcc_builder_table_add_offset@@Base>
  40beeb:	test   rax,rax
  40beee:	je     40bef6 <test_clone_slice@@Base+0x2e6>
  40bef0:	mov    edx,DWORD PTR [rsp+0x18]
  40bef4:	mov    DWORD PTR [rax],edx
  40bef6:	mov    rdi,rbx
  40bef9:	call   410e00 <flatcc_builder_start_offset_vector@@Base>
  40befe:	mov    edx,DWORD PTR [rbp-0x4]
  40bf01:	mov    rsi,rbp
  40bf04:	mov    rdi,rbx
  40bf07:	call   412590 <flatcc_builder_create_string@@Base>
  40bf0c:	test   eax,eax
  40bf0e:	je     40bf1a <test_clone_slice@@Base+0x30a>
  40bf10:	mov    esi,eax
  40bf12:	mov    rdi,rbx
  40bf15:	call   410930 <flatcc_builder_offset_vector_push@@Base>
  40bf1a:	mov    edx,DWORD PTR [rbp-0x4]
  40bf1d:	mov    esi,0x4
  40bf22:	mov    eax,0x14
  40bf27:	mov    rdi,rbx
  40bf2a:	cmp    rdx,0x4
  40bf2e:	cmovbe rsi,rdx
  40bf32:	sub    rdx,rsi
  40bf35:	cmp    rdx,0x14
  40bf39:	cmovae rdx,rax
  40bf3d:	add    rsi,rbp
  40bf40:	call   412590 <flatcc_builder_create_string@@Base>
  40bf45:	test   eax,eax
  40bf47:	je     40bf53 <test_clone_slice@@Base+0x343>
  40bf49:	mov    esi,eax
  40bf4b:	mov    rdi,rbx
  40bf4e:	call   410930 <flatcc_builder_offset_vector_push@@Base>
  40bf53:	mov    edx,DWORD PTR [rbp-0x4]
  40bf56:	mov    eax,0x3
  40bf5b:	mov    rsi,rbp
  40bf5e:	mov    rdi,rbx
  40bf61:	cmp    rdx,0x3
  40bf65:	cmovae rdx,rax
  40bf69:	call   412590 <flatcc_builder_create_string@@Base>
  40bf6e:	test   eax,eax
  40bf70:	je     40bf7c <test_clone_slice@@Base+0x36c>
  40bf72:	mov    esi,eax
  40bf74:	mov    rdi,rbx
  40bf77:	call   410930 <flatcc_builder_offset_vector_push@@Base>
  40bf7c:	mov    rdi,rbx
  40bf7f:	call   411d90 <flatcc_builder_end_offset_vector@@Base>
  40bf84:	test   eax,eax
  40bf86:	mov    DWORD PTR [rsp+0x18],eax
  40bf8a:	je     40bfa4 <test_clone_slice@@Base+0x394>
  40bf8c:	mov    esi,0xa
  40bf91:	mov    rdi,rbx
  40bf94:	call   412a10 <flatcc_builder_table_add_offset@@Base>
  40bf99:	test   rax,rax
  40bf9c:	je     40bfa4 <test_clone_slice@@Base+0x394>
  40bf9e:	mov    edx,DWORD PTR [rsp+0x18]
  40bfa2:	mov    DWORD PTR [rax],edx
  40bfa4:	mov    esi,0x24
  40bfa9:	mov    rdi,rbx
  40bfac:	call   410fa0 <flatcc_builder_start_table@@Base>
  40bfb1:	mov    edx,DWORD PTR [rbp-0x4]
  40bfb4:	mov    esi,0x2
  40bfb9:	mov    eax,0x14
  40bfbe:	mov    rdi,rbx
  40bfc1:	cmp    rdx,0x2
  40bfc5:	cmovbe rsi,rdx
  40bfc9:	sub    rdx,rsi
  40bfcc:	cmp    rdx,0x14
  40bfd0:	cmovae rdx,rax
  40bfd4:	add    rsi,rbp
  40bfd7:	call   412590 <flatcc_builder_create_string@@Base>
  40bfdc:	test   eax,eax
  40bfde:	mov    ebp,eax
  40bfe0:	je     40bff6 <test_clone_slice@@Base+0x3e6>
  40bfe2:	mov    esi,0x3
  40bfe7:	mov    rdi,rbx
  40bfea:	call   412a10 <flatcc_builder_table_add_offset@@Base>
  40bfef:	test   rax,rax
  40bff2:	je     40bff6 <test_clone_slice@@Base+0x3e6>
  40bff4:	mov    DWORD PTR [rax],ebp
  40bff6:	mov    edx,DWORD PTR [r13-0x4]
  40bffa:	mov    r9d,0xffffffff
  40c000:	mov    r8d,0x1
  40c006:	mov    ecx,0x1
  40c00b:	mov    rsi,r13
  40c00e:	mov    rdi,rbx
  40c011:	call   411af0 <flatcc_builder_create_vector@@Base>
  40c016:	test   eax,eax
  40c018:	mov    ebp,eax
  40c01a:	je     40c030 <test_clone_slice@@Base+0x420>
  40c01c:	mov    esi,0x18
  40c021:	mov    rdi,rbx
  40c024:	call   412a10 <flatcc_builder_table_add_offset@@Base>
  40c029:	test   rax,rax
  40c02c:	je     40c030 <test_clone_slice@@Base+0x420>
  40c02e:	mov    DWORD PTR [rax],ebp
  40c030:	mov    edx,DWORD PTR [r14-0x4]
  40c034:	mov    eax,0x1
  40c039:	mov    ecx,0x2
  40c03e:	mov    r9d,0x3fffffff
  40c044:	mov    r8d,0x2
  40c04a:	mov    rdi,rbx
  40c04d:	test   rdx,rdx
  40c050:	cmove  rax,rdx
  40c054:	sub    rdx,rax
  40c057:	lea    rsi,[r14+rax*4]
  40c05b:	cmp    rdx,0x2
  40c05f:	cmovae rdx,rcx
  40c063:	mov    ecx,0x4
  40c068:	call   411af0 <flatcc_builder_create_vector@@Base>
  40c06d:	test   eax,eax
  40c06f:	mov    ebp,eax
  40c071:	je     40c087 <test_clone_slice@@Base+0x477>
  40c073:	mov    esi,0x9
  40c078:	mov    rdi,rbx
  40c07b:	call   412a10 <flatcc_builder_table_add_offset@@Base>
  40c080:	test   rax,rax
  40c083:	je     40c087 <test_clone_slice@@Base+0x477>
  40c085:	mov    DWORD PTR [rax],ebp
  40c087:	lea    rsi,[rip+0xd562]        # 4195f0 <_IO_stdin_used@@Base+0x35f0>
  40c08e:	mov    edx,0x1
  40c093:	mov    rdi,rbx
  40c096:	call   4118e0 <flatcc_builder_check_required@@Base>
  40c09b:	test   eax,eax
  40c09d:	je     40c74e <test_clone_slice@@Base+0xb3e>
  40c0a3:	mov    rdi,rbx
  40c0a6:	call   411960 <flatcc_builder_end_table@@Base>
  40c0ab:	test   eax,eax
  40c0ad:	mov    ebp,eax
  40c0af:	je     40c0ee <test_clone_slice@@Base+0x4de>
  40c0b1:	mov    ecx,0x1
  40c0b6:	mov    edx,0x1
  40c0bb:	mov    esi,0x7
  40c0c0:	mov    rdi,rbx
  40c0c3:	call   412840 <flatcc_builder_table_add@@Base>
  40c0c8:	test   rax,rax
  40c0cb:	mov    QWORD PTR [rsp+0x18],rax
  40c0d0:	je     40c0ee <test_clone_slice@@Base+0x4de>
  40c0d2:	mov    esi,0x8
  40c0d7:	mov    rdi,rbx
  40c0da:	call   412a10 <flatcc_builder_table_add_offset@@Base>
  40c0df:	test   rax,rax
  40c0e2:	je     40c0ee <test_clone_slice@@Base+0x4de>
  40c0e4:	mov    rdx,QWORD PTR [rsp+0x18]
  40c0e9:	mov    BYTE PTR [rdx],0x1
  40c0ec:	mov    DWORD PTR [rax],ebp
  40c0ee:	mov    edx,DWORD PTR [r13-0x4]
  40c0f2:	mov    esi,0x3
  40c0f7:	mov    r9d,0xffffffff
  40c0fd:	mov    r8d,0x1
  40c103:	mov    ecx,0x1
  40c108:	mov    rdi,rbx
  40c10b:	cmp    rdx,0x3
  40c10f:	cmovbe rsi,rdx
  40c113:	sub    rdx,rsi
  40c116:	add    rsi,r13
  40c119:	call   411af0 <flatcc_builder_create_vector@@Base>
  40c11e:	test   eax,eax
  40c120:	mov    ebp,eax
  40c122:	je     40c138 <test_clone_slice@@Base+0x528>
  40c124:	mov    esi,0x18
  40c129:	mov    rdi,rbx
  40c12c:	call   412a10 <flatcc_builder_table_add_offset@@Base>
  40c131:	test   rax,rax
  40c134:	je     40c138 <test_clone_slice@@Base+0x528>
  40c136:	mov    DWORD PTR [rax],ebp
  40c138:	movsxd rax,DWORD PTR [r12]
  40c13c:	mov    rcx,r12
  40c13f:	xor    edx,edx
  40c141:	sub    rcx,rax
  40c144:	cmp    WORD PTR [rcx],0x5
  40c148:	jbe    40c157 <test_clone_slice@@Base+0x547>
  40c14a:	movzx  eax,WORD PTR [rcx+0x4]
  40c14e:	test   ax,ax
  40c151:	je     40c157 <test_clone_slice@@Base+0x547>
  40c153:	lea    rdx,[r12+rax*1]
  40c157:	xor    esi,esi
  40c159:	mov    r8d,0x10
  40c15f:	mov    ecx,0x20
  40c164:	mov    rdi,rbx
  40c167:	call   4129d0 <flatcc_builder_table_add_copy@@Base>
  40c16c:	mov    edx,DWORD PTR [r14-0x4]
  40c170:	mov    r9d,0x3fffffff
  40c176:	mov    r8d,0x2
  40c17c:	mov    ecx,0x4
  40c181:	mov    rsi,r14
  40c184:	mov    rdi,rbx
  40c187:	call   411af0 <flatcc_builder_create_vector@@Base>
  40c18c:	test   eax,eax
  40c18e:	mov    ebp,eax
  40c190:	je     40c1a6 <test_clone_slice@@Base+0x596>
  40c192:	mov    esi,0x9
  40c197:	mov    rdi,rbx
  40c19a:	call   412a10 <flatcc_builder_table_add_offset@@Base>
  40c19f:	test   rax,rax
  40c1a2:	je     40c1a6 <test_clone_slice@@Base+0x596>
  40c1a4:	mov    DWORD PTR [rax],ebp
  40c1a6:	lea    rsi,[rip+0xd443]        # 4195f0 <_IO_stdin_used@@Base+0x35f0>
  40c1ad:	mov    edx,0x1
  40c1b2:	mov    rdi,rbx
  40c1b5:	call   4118e0 <flatcc_builder_check_required@@Base>
  40c1ba:	test   eax,eax
  40c1bc:	je     40c74e <test_clone_slice@@Base+0xb3e>
  40c1c2:	mov    rdi,rbx
  40c1c5:	call   411960 <flatcc_builder_end_table@@Base>
  40c1ca:	mov    rdi,rbx
  40c1cd:	mov    esi,eax
  40c1cf:	call   410410 <flatcc_builder_end_buffer@@Base>
  40c1d4:	mov    rsi,QWORD PTR [rsp+0x10]
  40c1d9:	mov    rdi,rbx
  40c1dc:	call   412ed0 <flatcc_builder_get_direct_buffer@@Base>
  40c1e1:	mov    rbp,rax
  40c1e4:	mov    rax,QWORD PTR [rip+0x12e0d]        # 41eff8 <stderr@GLIBC_2.2.5>
  40c1eb:	mov    rdx,QWORD PTR [rsp+0x28]
  40c1f0:	lea    rdi,[rip+0xa476]        # 41666d <_IO_stdin_used@@Base+0x66d>
  40c1f7:	mov    rsi,rbp
  40c1fa:	mov    rcx,QWORD PTR [rax]
  40c1fd:	call   4049a0 <_start@@Base+0x150>
  40c202:	test   rbp,rbp
  40c205:	je     40c210 <test_clone_slice@@Base+0x600>
  40c207:	cmp    DWORD PTR [rbp+0x4],0x534e4f4d
  40c20e:	je     40c218 <test_clone_slice@@Base+0x608>
  40c210:	call   40432a <posix_memalign@plt+0x1fa>
  40c215:	nop    DWORD PTR [rax]
  40c218:	mov    eax,DWORD PTR [rbp+0x0]
  40c21b:	add    rbp,rax
  40c21e:	je     40c210 <test_clone_slice@@Base+0x600>
  40c220:	movsxd rax,DWORD PTR [rbp+0x0]
  40c224:	mov    r12,rbp
  40c227:	sub    r12,rax
  40c22a:	movzx  r14d,WORD PTR [r12]
  40c22f:	cmp    r14w,0xb
  40c234:	jbe    40be68 <test_clone_slice@@Base+0x258>
  40c23a:	movzx  eax,WORD PTR [r12+0xa]
  40c240:	test   ax,ax
  40c243:	je     40be68 <test_clone_slice@@Base+0x258>
  40c249:	add    rax,rbp
  40c24c:	mov    ecx,0xb
  40c251:	mov    edx,DWORD PTR [rax]
  40c253:	lea    rsi,[rax+rdx*1+0x4]
  40c258:	lea    rdx,[rip+0xa3dd]        # 41663c <_IO_stdin_used@@Base+0x63c>
  40c25f:	mov    rdi,rdx
  40c262:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  40c264:	jne    40c5b0 <test_clone_slice@@Base+0x9a0>
  40c26a:	cmp    r14w,0x19
  40c26f:	ja     40c280 <test_clone_slice@@Base+0x670>
  40c271:	call   404be0 <_start@@Base+0x390>
  40c276:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40c280:	movzx  eax,WORD PTR [r12+0x18]
  40c286:	test   ax,ax
  40c289:	je     40c271 <test_clone_slice@@Base+0x661>
  40c28b:	add    rax,rbp
  40c28e:	mov    ecx,DWORD PTR [rax]
  40c290:	lea    rax,[rax+rcx*1+0x4]
  40c295:	test   rax,rax
  40c298:	je     40c271 <test_clone_slice@@Base+0x661>
  40c29a:	mov    r8d,DWORD PTR [rax-0x4]
  40c29e:	test   r8,r8
  40c2a1:	je     40c271 <test_clone_slice@@Base+0x661>
  40c2a3:	mov    ecx,DWORD PTR [rax]
  40c2a5:	mov    rdi,rdx
  40c2a8:	lea    rsi,[rax+rcx*1+0x4]
  40c2ad:	mov    ecx,0xb
  40c2b2:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  40c2b4:	jne    40c710 <test_clone_slice@@Base+0xb00>
  40c2ba:	cmp    r8,0x1
  40c2be:	je     40c271 <test_clone_slice@@Base+0x661>
  40c2c0:	mov    edx,DWORD PTR [rax+0x4]
  40c2c3:	lea    rsi,[rax+rdx*1+0x8]
  40c2c8:	test   rsi,rsi
  40c2cb:	je     40c5d0 <test_clone_slice@@Base+0x9c0>
  40c2d1:	cmp    DWORD PTR [rsi-0x4],0x6
  40c2d5:	jne    40c5d0 <test_clone_slice@@Base+0x9c0>
  40c2db:	lea    rdi,[rip+0xa35e]        # 416640 <_IO_stdin_used@@Base+0x640>
  40c2e2:	mov    ecx,0x7
  40c2e7:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  40c2e9:	jne    40c730 <test_clone_slice@@Base+0xb20>
  40c2ef:	cmp    r8,0x2
  40c2f3:	je     40c271 <test_clone_slice@@Base+0x661>
  40c2f9:	mov    edx,DWORD PTR [rax+0x8]
  40c2fc:	lea    rsi,[rax+rdx*1+0xc]
  40c301:	test   rsi,rsi
  40c304:	je     40c5f0 <test_clone_slice@@Base+0x9e0>
  40c30a:	cmp    DWORD PTR [rsi-0x4],0x3
  40c30e:	jne    40c5f0 <test_clone_slice@@Base+0x9e0>
  40c314:	lea    rdi,[rip+0xa3bc]        # 4166d7 <_IO_stdin_used@@Base+0x6d7>
  40c31b:	mov    ecx,0x4
  40c320:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  40c322:	jne    40c610 <test_clone_slice@@Base+0xa00>
  40c328:	movzx  ebx,WORD PTR [r12+0x14]
  40c32e:	test   bx,bx
  40c331:	je     40c796 <test_clone_slice@@Base+0xb86>
  40c337:	add    rbx,rbp
  40c33a:	mov    eax,DWORD PTR [rbx]
  40c33c:	add    rbx,rax
  40c33f:	je     40c796 <test_clone_slice@@Base+0xb86>
  40c345:	movsxd rax,DWORD PTR [rbx]
  40c348:	mov    r13,rbx
  40c34b:	sub    r13,rax
  40c34e:	movzx  edx,WORD PTR [r13+0x0]
  40c353:	cmp    dx,0xb
  40c357:	jbe    40be68 <test_clone_slice@@Base+0x258>
  40c35d:	movzx  eax,WORD PTR [r13+0xa]
  40c362:	test   ax,ax
  40c365:	je     40be68 <test_clone_slice@@Base+0x258>
  40c36b:	add    rax,rbx
  40c36e:	lea    rdi,[rip+0xa2c9]        # 41663e <_IO_stdin_used@@Base+0x63e>
  40c375:	mov    ecx,DWORD PTR [rax]
  40c377:	lea    rsi,[rax+rcx*1+0x4]
  40c37c:	mov    ecx,0x9
  40c381:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  40c383:	jne    40c630 <test_clone_slice@@Base+0xa20>
  40c389:	cmp    dx,0x35
  40c38d:	ja     40c3e0 <test_clone_slice@@Base+0x7d0>
  40c38f:	lea    rsi,[rip+0xa35c]        # 4166f2 <_IO_stdin_used@@Base+0x6f2>
  40c396:	mov    edi,0x1
  40c39b:	xor    eax,eax
  40c39d:	mov    r14d,0xffffffff
  40c3a3:	call   404110 <__printf_chk@plt>
  40c3a8:	nop    DWORD PTR [rax+rax*1+0x0]
  40c3b0:	mov    rdi,r15
  40c3b3:	call   413150 <flatcc_builder_aligned_free@@Base>
  40c3b8:	mov    rcx,QWORD PTR [rsp+0x38]
  40c3bd:	xor    rcx,QWORD PTR fs:0x28
  40c3c6:	mov    eax,r14d
  40c3c9:	jne    40c753 <test_clone_slice@@Base+0xb43>
  40c3cf:	add    rsp,0x48
  40c3d3:	pop    rbx
  40c3d4:	pop    rbp
  40c3d5:	pop    r12
  40c3d7:	pop    r13
  40c3d9:	pop    r14
  40c3db:	pop    r15
  40c3dd:	ret    
  40c3de:	xchg   ax,ax
  40c3e0:	movzx  eax,WORD PTR [r13+0x34]
  40c3e5:	test   ax,ax
  40c3e8:	je     40c38f <test_clone_slice@@Base+0x77f>
  40c3ea:	add    rax,rbx
  40c3ed:	mov    edx,DWORD PTR [rax]
  40c3ef:	lea    rdi,[rax+rdx*1+0x4]
  40c3f4:	test   rdi,rdi
  40c3f7:	je     40c38f <test_clone_slice@@Base+0x77f>
  40c3f9:	cmp    DWORD PTR [rdi-0x4],0x7
  40c3fd:	jne    40c38f <test_clone_slice@@Base+0x77f>
  40c3ff:	mov    rsi,QWORD PTR [rsp+0x8]
  40c404:	mov    edx,0x7
  40c409:	call   4040c0 <memcmp@plt>
  40c40e:	test   eax,eax
  40c410:	jne    40c650 <test_clone_slice@@Base+0xa40>
  40c416:	cmp    r14w,0x35
  40c41b:	ja     40c440 <test_clone_slice@@Base+0x830>
  40c41d:	lea    rsi,[rip+0xa2eb]        # 41670f <_IO_stdin_used@@Base+0x70f>
  40c424:	mov    edi,0x1
  40c429:	xor    eax,eax
  40c42b:	mov    r14d,0xffffffff
  40c431:	call   404110 <__printf_chk@plt>
  40c436:	jmp    40c3b0 <test_clone_slice@@Base+0x7a0>
  40c43b:	nop    DWORD PTR [rax+rax*1+0x0]
  40c440:	movzx  eax,WORD PTR [r12+0x34]
  40c446:	test   ax,ax
  40c449:	je     40c41d <test_clone_slice@@Base+0x80d>
  40c44b:	add    rax,rbp
  40c44e:	mov    edx,DWORD PTR [rax]
  40c450:	lea    rdi,[rax+rdx*1+0x4]
  40c455:	test   rdi,rdi
  40c458:	je     40c41d <test_clone_slice@@Base+0x80d>
  40c45a:	cmp    DWORD PTR [rdi-0x4],0x4
  40c45e:	jne    40c41d <test_clone_slice@@Base+0x80d>
  40c460:	mov    rsi,QWORD PTR [rsp+0x8]
  40c465:	mov    edx,0x4
  40c46a:	add    rsi,0x3
  40c46e:	call   4040c0 <memcmp@plt>
  40c473:	test   eax,eax
  40c475:	mov    r14d,eax
  40c478:	jne    40c670 <test_clone_slice@@Base+0xa60>
  40c47e:	movzx  eax,WORD PTR [r12+0x4]
  40c484:	test   ax,ax
  40c487:	je     40c550 <test_clone_slice@@Base+0x940>
  40c48d:	vmovss xmm0,DWORD PTR [rbp+rax*1+0x0]
  40c493:	vucomiss xmm0,DWORD PTR [rip+0xd1ad]        # 419648 <_IO_stdin_used@@Base+0x3648>
  40c49b:	jp     40c6b0 <test_clone_slice@@Base+0xaa0>
  40c4a1:	jne    40c6b0 <test_clone_slice@@Base+0xaa0>
  40c4a7:	movzx  edx,WORD PTR [r12+0x16]
  40c4ad:	test   dx,dx
  40c4b0:	je     40c68e <test_clone_slice@@Base+0xa7e>
  40c4b6:	add    rbp,rdx
  40c4b9:	mov    eax,DWORD PTR [rbp+0x0]
  40c4bc:	lea    rdx,[rbp+rax*1+0x4]
  40c4c1:	test   rdx,rdx
  40c4c4:	je     40c68e <test_clone_slice@@Base+0xa7e>
  40c4ca:	cmp    DWORD PTR [rdx-0x4],0x2
  40c4ce:	jne    40c68e <test_clone_slice@@Base+0xa7e>
  40c4d4:	cmp    WORD PTR [rdx],0x16
  40c4d8:	jne    40c6ce <test_clone_slice@@Base+0xabe>
  40c4de:	cmp    rdx,0xfffffffffffffffc
  40c4e2:	je     40c590 <test_clone_slice@@Base+0x980>
  40c4e8:	cmp    WORD PTR [rdx+0x4],0x2c
  40c4ed:	jne    40c590 <test_clone_slice@@Base+0x980>
  40c4f3:	movzx  eax,WORD PTR [r13+0x16]
  40c4f8:	test   ax,ax
  40c4fb:	je     40c6ec <test_clone_slice@@Base+0xadc>
  40c501:	add    rbx,rax
  40c504:	mov    eax,DWORD PTR [rbx]
  40c506:	lea    rax,[rbx+rax*1+0x4]
  40c50b:	test   rax,rax
  40c50e:	je     40c6ec <test_clone_slice@@Base+0xadc>
  40c514:	cmp    DWORD PTR [rax-0x4],0x1
  40c518:	jne    40c6ec <test_clone_slice@@Base+0xadc>
  40c51e:	cmp    WORD PTR [rax],0x2c
  40c522:	je     40c3b0 <test_clone_slice@@Base+0x7a0>
  40c528:	lea    rsi,[rip+0xbc31]        # 418160 <_IO_stdin_used@@Base+0x2160>
  40c52f:	mov    edi,0x1
  40c534:	xor    eax,eax
  40c536:	mov    r14d,0xffffffff
  40c53c:	call   404110 <__printf_chk@plt>
  40c541:	jmp    40c3b0 <test_clone_slice@@Base+0x7a0>
  40c546:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40c550:	vmovss xmm0,DWORD PTR ds:0x0
  40c559:	ud2    
  40c55b:	nop    DWORD PTR [rax+rax*1+0x0]
  40c560:	mov    r12d,DWORD PTR [r15]
  40c563:	mov    rdi,rbx
  40c566:	call   40faf0 <flatcc_builder_reset@@Base>
  40c56b:	lea    rsi,[rip+0x9bc9]        # 41613b <_IO_stdin_used@@Base+0x13b>
  40c572:	xor    ecx,ecx
  40c574:	xor    edx,edx
  40c576:	mov    rdi,rbx
  40c579:	add    r12,r15
  40c57c:	call   410330 <flatcc_builder_start_buffer@@Base>
  40c581:	test   eax,eax
  40c583:	jne    40be06 <test_clone_slice@@Base+0x1f6>
  40c589:	jmp    40bdf9 <test_clone_slice@@Base+0x1e9>
  40c58e:	xchg   ax,ax
  40c590:	lea    rsi,[rip+0xa1cb]        # 416762 <_IO_stdin_used@@Base+0x762>
  40c597:	mov    edi,0x1
  40c59c:	xor    eax,eax
  40c59e:	mov    r14d,0xffffffff
  40c5a4:	call   404110 <__printf_chk@plt>
  40c5a9:	jmp    40c3b0 <test_clone_slice@@Base+0x7a0>
  40c5ae:	xchg   ax,ax
  40c5b0:	lea    rsi,[rip+0xa0cd]        # 416684 <_IO_stdin_used@@Base+0x684>
  40c5b7:	mov    edi,0x1
  40c5bc:	xor    eax,eax
  40c5be:	mov    r14d,0xffffffff
  40c5c4:	call   404110 <__printf_chk@plt>
  40c5c9:	jmp    40c3b0 <test_clone_slice@@Base+0x7a0>
  40c5ce:	xchg   ax,ax
  40c5d0:	lea    rsi,[rip+0xba91]        # 418068 <_IO_stdin_used@@Base+0x2068>
  40c5d7:	mov    edi,0x1
  40c5dc:	xor    eax,eax
  40c5de:	mov    r14d,0xffffffff
  40c5e4:	call   404110 <__printf_chk@plt>
  40c5e9:	jmp    40c3b0 <test_clone_slice@@Base+0x7a0>
  40c5ee:	xchg   ax,ax
  40c5f0:	lea    rsi,[rip+0xba99]        # 418090 <_IO_stdin_used@@Base+0x2090>
  40c5f7:	mov    edi,0x1
  40c5fc:	xor    eax,eax
  40c5fe:	mov    r14d,0xffffffff
  40c604:	call   404110 <__printf_chk@plt>
  40c609:	jmp    40c3b0 <test_clone_slice@@Base+0x7a0>
  40c60e:	xchg   ax,ax
  40c610:	lea    rsi,[rip+0xa0c4]        # 4166db <_IO_stdin_used@@Base+0x6db>
  40c617:	mov    edi,0x1
  40c61c:	xor    eax,eax
  40c61e:	mov    r14d,0xffffffff
  40c624:	call   404110 <__printf_chk@plt>
  40c629:	jmp    40c3b0 <test_clone_slice@@Base+0x7a0>
  40c62e:	xchg   ax,ax
  40c630:	lea    rsi,[rip+0xba81]        # 4180b8 <_IO_stdin_used@@Base+0x20b8>
  40c637:	mov    edi,0x1
  40c63c:	xor    eax,eax
  40c63e:	mov    r14d,0xffffffff
  40c644:	call   404110 <__printf_chk@plt>
  40c649:	jmp    40c3b0 <test_clone_slice@@Base+0x7a0>
  40c64e:	xchg   ax,ax
  40c650:	lea    rsi,[rip+0xba91]        # 4180e8 <_IO_stdin_used@@Base+0x20e8>
  40c657:	mov    edi,0x1
  40c65c:	xor    eax,eax
  40c65e:	mov    r14d,0xffffffff
  40c664:	call   404110 <__printf_chk@plt>
  40c669:	jmp    40c3b0 <test_clone_slice@@Base+0x7a0>
  40c66e:	xchg   ax,ax
  40c670:	lea    rsi,[rip+0xba91]        # 418108 <_IO_stdin_used@@Base+0x2108>
  40c677:	mov    edi,0x1
  40c67c:	xor    eax,eax
  40c67e:	mov    r14d,0xffffffff
  40c684:	call   404110 <__printf_chk@plt>
  40c689:	jmp    40c3b0 <test_clone_slice@@Base+0x7a0>
  40c68e:	lea    rsi,[rip+0xba93]        # 418128 <_IO_stdin_used@@Base+0x2128>
  40c695:	mov    edi,0x1
  40c69a:	xor    eax,eax
  40c69c:	mov    r14d,0xffffffff
  40c6a2:	call   404110 <__printf_chk@plt>
  40c6a7:	jmp    40c3b0 <test_clone_slice@@Base+0x7a0>
  40c6ac:	nop    DWORD PTR [rax+0x0]
  40c6b0:	lea    rsi,[rip+0xa075]        # 41672c <_IO_stdin_used@@Base+0x72c>
  40c6b7:	mov    edi,0x1
  40c6bc:	xor    eax,eax
  40c6be:	mov    r14d,0xffffffff
  40c6c4:	call   404110 <__printf_chk@plt>
  40c6c9:	jmp    40c3b0 <test_clone_slice@@Base+0x7a0>
  40c6ce:	lea    rsi,[rip+0xa071]        # 416746 <_IO_stdin_used@@Base+0x746>
  40c6d5:	mov    edi,0x1
  40c6da:	xor    eax,eax
  40c6dc:	mov    r14d,0xffffffff
  40c6e2:	call   404110 <__printf_chk@plt>
  40c6e7:	jmp    40c3b0 <test_clone_slice@@Base+0x7a0>
  40c6ec:	lea    rsi,[rip+0xa08b]        # 41677e <_IO_stdin_used@@Base+0x77e>
  40c6f3:	mov    edi,0x1
  40c6f8:	xor    eax,eax
  40c6fa:	mov    r14d,0xffffffff
  40c700:	call   404110 <__printf_chk@plt>
  40c705:	jmp    40c3b0 <test_clone_slice@@Base+0x7a0>
  40c70a:	nop    WORD PTR [rax+rax*1+0x0]
  40c710:	lea    rsi,[rip+0x9f88]        # 41669f <_IO_stdin_used@@Base+0x69f>
  40c717:	mov    edi,0x1
  40c71c:	xor    eax,eax
  40c71e:	mov    r14d,0xffffffff
  40c724:	call   404110 <__printf_chk@plt>
  40c729:	jmp    40c3b0 <test_clone_slice@@Base+0x7a0>
  40c72e:	xchg   ax,ax
  40c730:	lea    rsi,[rip+0x9f86]        # 4166bd <_IO_stdin_used@@Base+0x6bd>
  40c737:	mov    edi,0x1
  40c73c:	xor    eax,eax
  40c73e:	mov    r14d,0xffffffff
  40c744:	call   404110 <__printf_chk@plt>
  40c749:	jmp    40c3b0 <test_clone_slice@@Base+0x7a0>
  40c74e:	call   4045a4 <posix_memalign@plt+0x474>
  40c753:	call   404070 <__stack_chk_fail@plt>
  40c758:	lea    rcx,[rip+0xc9b1]        # 419110 <_IO_stdin_used@@Base+0x3110>
  40c75f:	lea    rsi,[rip+0xac82]        # 4173e8 <_IO_stdin_used@@Base+0x13e8>
  40c766:	lea    rdi,[rip+0x9c90]        # 4163fd <_IO_stdin_used@@Base+0x3fd>
  40c76d:	mov    edx,0x644
  40c772:	call   404090 <__assert_fail@plt>
  40c777:	lea    rcx,[rip+0xc992]        # 419110 <_IO_stdin_used@@Base+0x3110>
  40c77e:	lea    rsi,[rip+0xac63]        # 4173e8 <_IO_stdin_used@@Base+0x13e8>
  40c785:	lea    rdi,[rip+0x9edb]        # 416667 <_IO_stdin_used@@Base+0x667>
  40c78c:	mov    edx,0x648
  40c791:	call   404090 <__assert_fail@plt>
  40c796:	lea    rcx,[rip+0xc973]        # 419110 <_IO_stdin_used@@Base+0x3110>
  40c79d:	lea    rsi,[rip+0xac44]        # 4173e8 <_IO_stdin_used@@Base+0x13e8>
  40c7a4:	lea    rdi,[rip+0x9b2a]        # 4162d5 <_IO_stdin_used@@Base+0x2d5>
  40c7ab:	mov    edx,0x680
  40c7b0:	call   404090 <__assert_fail@plt>
  40c7b5:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

000000000040c7c0 <test_create_add_field@@Base>:
  40c7c0:	push   rbp
  40c7c1:	push   rbx
  40c7c2:	mov    rbx,rdi
  40c7c5:	sub    rsp,0x18
  40c7c9:	mov    rax,QWORD PTR fs:0x28
  40c7d2:	mov    QWORD PTR [rsp+0x8],rax
  40c7d7:	xor    eax,eax
  40c7d9:	call   40faf0 <flatcc_builder_reset@@Base>
  40c7de:	lea    rsi,[rip+0x9956]        # 41613b <_IO_stdin_used@@Base+0x13b>
  40c7e5:	xor    ecx,ecx
  40c7e7:	xor    edx,edx
  40c7e9:	mov    rdi,rbx
  40c7ec:	call   410330 <flatcc_builder_start_buffer@@Base>
  40c7f1:	test   eax,eax
  40c7f3:	jne    40c802 <test_create_add_field@@Base+0x42>
  40c7f5:	mov    esi,0x24
  40c7fa:	mov    rdi,rbx
  40c7fd:	call   410fa0 <flatcc_builder_start_table@@Base>
  40c802:	lea    rsi,[rip+0x994a]        # 416153 <_IO_stdin_used@@Base+0x153>
  40c809:	mov    rdi,rbx
  40c80c:	call   4126b0 <flatcc_builder_create_string_str@@Base>
  40c811:	test   eax,eax
  40c813:	mov    ebp,eax
  40c815:	je     40c82b <test_create_add_field@@Base+0x6b>
  40c817:	mov    esi,0x3
  40c81c:	mov    rdi,rbx
  40c81f:	call   412a10 <flatcc_builder_table_add_offset@@Base>
  40c824:	test   rax,rax
  40c827:	je     40c82b <test_create_add_field@@Base+0x6b>
  40c829:	mov    DWORD PTR [rax],ebp
  40c82b:	lea    rsi,[rip+0x9f6a]        # 41679c <_IO_stdin_used@@Base+0x79c>
  40c832:	mov    rdi,rbx
  40c835:	call   4126b0 <flatcc_builder_create_string_str@@Base>
  40c83a:	mov    esi,0x3
  40c83f:	mov    rdi,rbx
  40c842:	mov    ebp,eax
  40c844:	call   410fa0 <flatcc_builder_start_table@@Base>
  40c849:	test   eax,eax
  40c84b:	jne    40c878 <test_create_add_field@@Base+0xb8>
  40c84d:	mov    ecx,0x8
  40c852:	mov    edx,0x8
  40c857:	mov    esi,0x1
  40c85c:	mov    rdi,rbx
  40c85f:	call   412840 <flatcc_builder_table_add@@Base>
  40c864:	test   rax,rax
  40c867:	je     40c878 <test_create_add_field@@Base+0xb8>
  40c869:	test   ebp,ebp
  40c86b:	mov    QWORD PTR [rax],0xffffffffffffff9c
  40c872:	jne    40c9a0 <test_create_add_field@@Base+0x1e0>
  40c878:	lea    rsi,[rip+0xcd71]        # 4195f0 <_IO_stdin_used@@Base+0x35f0>
  40c87f:	mov    edx,0x1
  40c884:	mov    rdi,rbx
  40c887:	call   4118e0 <flatcc_builder_check_required@@Base>
  40c88c:	test   eax,eax
  40c88e:	je     40ca64 <test_create_add_field@@Base+0x2a4>
  40c894:	mov    rdi,rbx
  40c897:	call   411960 <flatcc_builder_end_table@@Base>
  40c89c:	mov    rdi,rbx
  40c89f:	mov    esi,eax
  40c8a1:	call   410410 <flatcc_builder_end_buffer@@Base>
  40c8a6:	mov    rdi,rbx
  40c8a9:	mov    rsi,rsp
  40c8ac:	call   413000 <flatcc_builder_finalize_aligned_buffer@@Base>
  40c8b1:	test   rax,rax
  40c8b4:	mov    rbx,rax
  40c8b7:	je     40c8c2 <test_create_add_field@@Base+0x102>
  40c8b9:	cmp    DWORD PTR [rax+0x4],0x534e4f4d
  40c8c0:	je     40c8e8 <test_create_add_field@@Base+0x128>
  40c8c2:	lea    rcx,[rip+0xc817]        # 4190e0 <_IO_stdin_used@@Base+0x30e0>
  40c8c9:	lea    rsi,[rip+0xa108]        # 4169d8 <_IO_stdin_used@@Base+0x9d8>
  40c8d0:	lea    rdi,[rip+0xa181]        # 416a58 <_IO_stdin_used@@Base+0xa58>
  40c8d7:	mov    edx,0x2cc
  40c8dc:	call   404090 <__assert_fail@plt>
  40c8e1:	nop    DWORD PTR [rax+0x0]
  40c8e8:	mov    eax,DWORD PTR [rax]
  40c8ea:	add    rax,rbx
  40c8ed:	je     40c8c2 <test_create_add_field@@Base+0x102>
  40c8ef:	movsxd rdx,DWORD PTR [rax]
  40c8f2:	mov    rcx,rax
  40c8f5:	sub    rcx,rdx
  40c8f8:	mov    rdx,rcx
  40c8fb:	movzx  ecx,WORD PTR [rcx]
  40c8fe:	cmp    cx,0x1d
  40c902:	jbe    40ca45 <test_create_add_field@@Base+0x285>
  40c908:	cmp    WORD PTR [rdx+0x1c],0x0
  40c90d:	jne    40ca28 <test_create_add_field@@Base+0x268>
  40c913:	cmp    cx,0x21
  40c917:	jbe    40ca45 <test_create_add_field@@Base+0x285>
  40c91d:	movzx  edx,WORD PTR [rdx+0x20]
  40c921:	test   dx,dx
  40c924:	je     40ca45 <test_create_add_field@@Base+0x285>
  40c92a:	add    rax,rdx
  40c92d:	mov    edx,DWORD PTR [rax]
  40c92f:	add    rax,rdx
  40c932:	je     40ca45 <test_create_add_field@@Base+0x285>
  40c938:	movsxd rdx,DWORD PTR [rax]
  40c93b:	mov    rcx,rax
  40c93e:	sub    rcx,rdx
  40c941:	cmp    WORD PTR [rcx],0x7
  40c945:	ja     40c988 <test_create_add_field@@Base+0x1c8>
  40c947:	lea    rsi,[rip+0x9e54]        # 4167a2 <_IO_stdin_used@@Base+0x7a2>
  40c94e:	mov    edi,0x1
  40c953:	xor    eax,eax
  40c955:	mov    ebp,0xffffffff
  40c95a:	call   404110 <__printf_chk@plt>
  40c95f:	nop
  40c960:	mov    rdi,rbx
  40c963:	call   413150 <flatcc_builder_aligned_free@@Base>
  40c968:	mov    rcx,QWORD PTR [rsp+0x8]
  40c96d:	xor    rcx,QWORD PTR fs:0x28
  40c976:	mov    eax,ebp
  40c978:	jne    40ca69 <test_create_add_field@@Base+0x2a9>
  40c97e:	add    rsp,0x18
  40c982:	pop    rbx
  40c983:	pop    rbp
  40c984:	ret    
  40c985:	nop    DWORD PTR [rax]
  40c988:	movzx  edx,WORD PTR [rcx+0x6]
  40c98c:	test   dx,dx
  40c98f:	je     40c947 <test_create_add_field@@Base+0x187>
  40c991:	cmp    QWORD PTR [rax+rdx*1],0xffffffffffffff9c
  40c996:	jne    40c947 <test_create_add_field@@Base+0x187>
  40c998:	xor    ebp,ebp
  40c99a:	jmp    40c960 <test_create_add_field@@Base+0x1a0>
  40c99c:	nop    DWORD PTR [rax+0x0]
  40c9a0:	xor    esi,esi
  40c9a2:	mov    rdi,rbx
  40c9a5:	call   412a10 <flatcc_builder_table_add_offset@@Base>
  40c9aa:	test   rax,rax
  40c9ad:	je     40c878 <test_create_add_field@@Base+0xb8>
  40c9b3:	mov    DWORD PTR [rax],ebp
  40c9b5:	mov    ecx,0x2
  40c9ba:	mov    edx,0x2
  40c9bf:	mov    esi,0x2
  40c9c4:	mov    rdi,rbx
  40c9c7:	call   412840 <flatcc_builder_table_add@@Base>
  40c9cc:	test   rax,rax
  40c9cf:	je     40c878 <test_create_add_field@@Base+0xb8>
  40c9d5:	mov    edx,0x2
  40c9da:	lea    rsi,[rip+0xcc15]        # 4195f6 <_IO_stdin_used@@Base+0x35f6>
  40c9e1:	mov    rdi,rbx
  40c9e4:	mov    WORD PTR [rax],dx
  40c9e7:	xor    edx,edx
  40c9e9:	call   4118e0 <flatcc_builder_check_required@@Base>
  40c9ee:	test   eax,eax
  40c9f0:	je     40ca6e <test_create_add_field@@Base+0x2ae>
  40c9f2:	mov    rdi,rbx
  40c9f5:	call   411960 <flatcc_builder_end_table@@Base>
  40c9fa:	test   eax,eax
  40c9fc:	mov    ebp,eax
  40c9fe:	je     40c878 <test_create_add_field@@Base+0xb8>
  40ca04:	mov    esi,0xe
  40ca09:	mov    rdi,rbx
  40ca0c:	call   412a10 <flatcc_builder_table_add_offset@@Base>
  40ca11:	test   rax,rax
  40ca14:	je     40c878 <test_create_add_field@@Base+0xb8>
  40ca1a:	mov    DWORD PTR [rax],ebp
  40ca1c:	jmp    40c878 <test_create_add_field@@Base+0xb8>
  40ca21:	nop    DWORD PTR [rax+0x0]
  40ca28:	lea    rsi,[rip+0xb759]        # 418188 <_IO_stdin_used@@Base+0x2188>
  40ca2f:	mov    edi,0x1
  40ca34:	xor    eax,eax
  40ca36:	mov    ebp,0xffffffff
  40ca3b:	call   404110 <__printf_chk@plt>
  40ca40:	jmp    40c960 <test_create_add_field@@Base+0x1a0>
  40ca45:	lea    rcx,[rip+0xc664]        # 4190b0 <_IO_stdin_used@@Base+0x30b0>
  40ca4c:	lea    rsi,[rip+0x9f85]        # 4169d8 <_IO_stdin_used@@Base+0x9d8>
  40ca53:	lea    rdi,[rip+0x9ffe]        # 416a58 <_IO_stdin_used@@Base+0xa58>
  40ca5a:	mov    edx,0x260
  40ca5f:	call   404090 <__assert_fail@plt>
  40ca64:	call   4045a4 <posix_memalign@plt+0x474>
  40ca69:	call   404070 <__stack_chk_fail@plt>
  40ca6e:	call   4045c7 <posix_memalign@plt+0x497>
  40ca73:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40ca7e:	xchg   ax,ax

000000000040ca80 <test_union_vector@@Base>:
  40ca80:	push   r12
  40ca82:	push   rbp
  40ca83:	push   rbx
  40ca84:	mov    rbx,rdi
  40ca87:	sub    rsp,0x10
  40ca8b:	mov    rax,QWORD PTR fs:0x28
  40ca94:	mov    QWORD PTR [rsp+0x8],rax
  40ca99:	xor    eax,eax
  40ca9b:	call   40faf0 <flatcc_builder_reset@@Base>
  40caa0:	lea    rsi,[rip+0x9694]        # 41613b <_IO_stdin_used@@Base+0x13b>
  40caa7:	xor    ecx,ecx
  40caa9:	xor    edx,edx
  40caab:	mov    rdi,rbx
  40caae:	call   410330 <flatcc_builder_start_buffer@@Base>
  40cab3:	test   eax,eax
  40cab5:	jne    40cac4 <test_union_vector@@Base+0x44>
  40cab7:	mov    esi,0x24
  40cabc:	mov    rdi,rbx
  40cabf:	call   410fa0 <flatcc_builder_start_table@@Base>
  40cac4:	lea    rsi,[rip+0x9ceb]        # 4167b6 <_IO_stdin_used@@Base+0x7b6>
  40cacb:	mov    rdi,rbx
  40cace:	call   4126b0 <flatcc_builder_create_string_str@@Base>
  40cad3:	test   eax,eax
  40cad5:	mov    ebp,eax
  40cad7:	je     40caed <test_union_vector@@Base+0x6d>
  40cad9:	mov    esi,0x3
  40cade:	mov    rdi,rbx
  40cae1:	call   412a10 <flatcc_builder_table_add_offset@@Base>
  40cae6:	test   rax,rax
  40cae9:	je     40caed <test_union_vector@@Base+0x6d>
  40caeb:	mov    DWORD PTR [rax],ebp
  40caed:	mov    esi,0x4
  40caf2:	mov    rdi,rbx
  40caf5:	call   410fa0 <flatcc_builder_start_table@@Base>
  40cafa:	test   eax,eax
  40cafc:	jne    40cb28 <test_union_vector@@Base+0xa8>
  40cafe:	lea    rsi,[rip+0xcaf3]        # 4195f8 <_IO_stdin_used@@Base+0x35f8>
  40cb05:	xor    edx,edx
  40cb07:	mov    rdi,rbx
  40cb0a:	call   4118e0 <flatcc_builder_check_required@@Base>
  40cb0f:	test   eax,eax
  40cb11:	je     40ce00 <test_union_vector@@Base+0x380>
  40cb17:	mov    rdi,rbx
  40cb1a:	call   411960 <flatcc_builder_end_table@@Base>
  40cb1f:	mov    ebp,eax
  40cb21:	jmp    40cb2a <test_union_vector@@Base+0xaa>
  40cb23:	nop    DWORD PTR [rax+rax*1+0x0]
  40cb28:	xor    ebp,ebp
  40cb2a:	mov    rdi,rbx
  40cb2d:	call   412180 <flatcc_builder_start_union_vector@@Base>
  40cb32:	mov    rsi,rbp
  40cb35:	mov    rdi,rbx
  40cb38:	shl    rsi,0x20
  40cb3c:	or     rsi,0x2
  40cb40:	call   412460 <flatcc_builder_union_vector_push@@Base>
  40cb45:	mov    rdi,rbx
  40cb48:	call   412200 <flatcc_builder_end_union_vector@@Base>
  40cb4d:	mov    r12,rax
  40cb50:	mov    esi,0x4
  40cb55:	mov    rdi,rbx
  40cb58:	sar    r12,0x20
  40cb5c:	mov    rbp,rax
  40cb5f:	call   410fa0 <flatcc_builder_start_table@@Base>
  40cb64:	test   r12d,r12d
  40cb67:	je     40cb71 <test_union_vector@@Base+0xf1>
  40cb69:	test   ebp,ebp
  40cb6b:	jne    40cd08 <test_union_vector@@Base+0x288>
  40cb71:	lea    rsi,[rip+0xca7c]        # 4195f4 <_IO_stdin_used@@Base+0x35f4>
  40cb78:	xor    edx,edx
  40cb7a:	mov    rdi,rbx
  40cb7d:	call   4118e0 <flatcc_builder_check_required@@Base>
  40cb82:	test   eax,eax
  40cb84:	je     40cddc <test_union_vector@@Base+0x35c>
  40cb8a:	mov    rdi,rbx
  40cb8d:	call   411960 <flatcc_builder_end_table@@Base>
  40cb92:	test   eax,eax
  40cb94:	mov    ebp,eax
  40cb96:	je     40cbd0 <test_union_vector@@Base+0x150>
  40cb98:	mov    ecx,0x1
  40cb9d:	mov    edx,0x1
  40cba2:	mov    esi,0x7
  40cba7:	mov    rdi,rbx
  40cbaa:	call   412840 <flatcc_builder_table_add@@Base>
  40cbaf:	test   rax,rax
  40cbb2:	mov    r12,rax
  40cbb5:	je     40cbd0 <test_union_vector@@Base+0x150>
  40cbb7:	mov    esi,0x8
  40cbbc:	mov    rdi,rbx
  40cbbf:	call   412a10 <flatcc_builder_table_add_offset@@Base>
  40cbc4:	test   rax,rax
  40cbc7:	je     40cbd0 <test_union_vector@@Base+0x150>
  40cbc9:	mov    BYTE PTR [r12],0x4
  40cbce:	mov    DWORD PTR [rax],ebp
  40cbd0:	lea    rsi,[rip+0xca19]        # 4195f0 <_IO_stdin_used@@Base+0x35f0>
  40cbd7:	mov    edx,0x1
  40cbdc:	mov    rdi,rbx
  40cbdf:	call   4118e0 <flatcc_builder_check_required@@Base>
  40cbe4:	test   eax,eax
  40cbe6:	je     40cdfb <test_union_vector@@Base+0x37b>
  40cbec:	mov    rdi,rbx
  40cbef:	call   411960 <flatcc_builder_end_table@@Base>
  40cbf4:	mov    rdi,rbx
  40cbf7:	mov    esi,eax
  40cbf9:	call   410410 <flatcc_builder_end_buffer@@Base>
  40cbfe:	mov    rdi,rbx
  40cc01:	mov    rsi,rsp
  40cc04:	call   413000 <flatcc_builder_finalize_aligned_buffer@@Base>
  40cc09:	mov    rsi,QWORD PTR [rsp]
  40cc0d:	lea    rcx,[rip+0xffffffffffff844c]        # 405060 <_start@@Base+0x810>
  40cc14:	lea    rdx,[rip+0x9520]        # 41613b <_IO_stdin_used@@Base+0x13b>
  40cc1b:	mov    rdi,rax
  40cc1e:	mov    rbp,rax
  40cc21:	call   414720 <flatcc_verify_table_as_root@@Base>
  40cc26:	test   eax,eax
  40cc28:	mov    ebx,eax
  40cc2a:	jne    40cdb0 <test_union_vector@@Base+0x330>
  40cc30:	test   rbp,rbp
  40cc33:	je     40cc3e <test_union_vector@@Base+0x1be>
  40cc35:	cmp    DWORD PTR [rbp+0x4],0x534e4f4d
  40cc3c:	je     40cc48 <test_union_vector@@Base+0x1c8>
  40cc3e:	call   4042e4 <posix_memalign@plt+0x1b4>
  40cc43:	nop    DWORD PTR [rax+rax*1+0x0]
  40cc48:	mov    eax,DWORD PTR [rbp+0x0]
  40cc4b:	add    rax,rbp
  40cc4e:	je     40cc3e <test_union_vector@@Base+0x1be>
  40cc50:	movsxd rdx,DWORD PTR [rax]
  40cc53:	mov    rcx,rax
  40cc56:	sub    rcx,rdx
  40cc59:	movzx  esi,WORD PTR [rcx]
  40cc5c:	cmp    si,0x13
  40cc60:	jbe    40ccf0 <test_union_vector@@Base+0x270>
  40cc66:	movzx  edx,WORD PTR [rcx+0x12]
  40cc6a:	test   dx,dx
  40cc6d:	je     40ccf0 <test_union_vector@@Base+0x270>
  40cc73:	cmp    BYTE PTR [rax+rdx*1],0x4
  40cc77:	jne    40ccf0 <test_union_vector@@Base+0x270>
  40cc79:	cmp    si,0x15
  40cc7d:	jbe    40ccb6 <test_union_vector@@Base+0x236>
  40cc7f:	movzx  edx,WORD PTR [rcx+0x14]
  40cc83:	test   dx,dx
  40cc86:	je     40ccb6 <test_union_vector@@Base+0x236>
  40cc88:	add    rax,rdx
  40cc8b:	mov    edx,DWORD PTR [rax]
  40cc8d:	add    rax,rdx
  40cc90:	je     40ccb6 <test_union_vector@@Base+0x236>
  40cc92:	movsxd rdx,DWORD PTR [rax]
  40cc95:	mov    rcx,rax
  40cc98:	sub    rcx,rdx
  40cc9b:	mov    rdx,rcx
  40cc9e:	movzx  ecx,WORD PTR [rcx]
  40cca1:	cmp    cx,0xb
  40cca5:	jbe    40cd40 <test_union_vector@@Base+0x2c0>
  40ccab:	cmp    WORD PTR [rdx+0xa],0x0
  40ccb0:	je     40cd46 <test_union_vector@@Base+0x2c6>
  40ccb6:	lea    rsi,[rip+0xb6d3]        # 418390 <_IO_stdin_used@@Base+0x2390>
  40ccbd:	mov    edi,0x1
  40ccc2:	xor    eax,eax
  40ccc4:	call   404110 <__printf_chk@plt>
  40ccc9:	mov    rdi,rbp
  40cccc:	call   413150 <flatcc_builder_aligned_free@@Base>
  40ccd1:	mov    rcx,QWORD PTR [rsp+0x8]
  40ccd6:	xor    rcx,QWORD PTR fs:0x28
  40ccdf:	mov    eax,ebx
  40cce1:	jne    40cdd7 <test_union_vector@@Base+0x357>
  40cce7:	add    rsp,0x10
  40cceb:	pop    rbx
  40ccec:	pop    rbp
  40cced:	pop    r12
  40ccef:	ret    
  40ccf0:	lea    rsi,[rip+0xb671]        # 418368 <_IO_stdin_used@@Base+0x2368>
  40ccf7:	mov    edi,0x1
  40ccfc:	xor    eax,eax
  40ccfe:	call   404110 <__printf_chk@plt>
  40cd03:	jmp    40ccc9 <test_union_vector@@Base+0x249>
  40cd05:	nop    DWORD PTR [rax]
  40cd08:	mov    esi,0x2
  40cd0d:	mov    rdi,rbx
  40cd10:	call   412a10 <flatcc_builder_table_add_offset@@Base>
  40cd15:	test   rax,rax
  40cd18:	je     40cb71 <test_union_vector@@Base+0xf1>
  40cd1e:	mov    DWORD PTR [rax],ebp
  40cd20:	mov    esi,0x3
  40cd25:	mov    rdi,rbx
  40cd28:	call   412a10 <flatcc_builder_table_add_offset@@Base>
  40cd2d:	test   rax,rax
  40cd30:	je     40cb71 <test_union_vector@@Base+0xf1>
  40cd36:	mov    DWORD PTR [rax],r12d
  40cd39:	jmp    40cb71 <test_union_vector@@Base+0xf1>
  40cd3e:	xchg   ax,ax
  40cd40:	cmp    cx,0x9
  40cd44:	jbe    40cd70 <test_union_vector@@Base+0x2f0>
  40cd46:	movzx  edx,WORD PTR [rdx+0x8]
  40cd4a:	test   dx,dx
  40cd4d:	je     40cd70 <test_union_vector@@Base+0x2f0>
  40cd4f:	add    rax,rdx
  40cd52:	mov    edx,DWORD PTR [rax]
  40cd54:	lea    rax,[rax+rdx*1+0x4]
  40cd59:	test   rax,rax
  40cd5c:	je     40cd70 <test_union_vector@@Base+0x2f0>
  40cd5e:	cmp    DWORD PTR [rax-0x4],0x1
  40cd62:	jne    40cd70 <test_union_vector@@Base+0x2f0>
  40cd64:	cmp    BYTE PTR [rax],0x2
  40cd67:	jne    40cd90 <test_union_vector@@Base+0x310>
  40cd69:	call   4043b6 <posix_memalign@plt+0x286>
  40cd6e:	xchg   ax,ax
  40cd70:	lea    rsi,[rip+0xb649]        # 4183c0 <_IO_stdin_used@@Base+0x23c0>
  40cd77:	mov    edi,0x1
  40cd7c:	xor    eax,eax
  40cd7e:	call   404110 <__printf_chk@plt>
  40cd83:	jmp    40ccc9 <test_union_vector@@Base+0x249>
  40cd88:	nop    DWORD PTR [rax+rax*1+0x0]
  40cd90:	lea    rsi,[rip+0xb651]        # 4183e8 <_IO_stdin_used@@Base+0x23e8>
  40cd97:	mov    edi,0x1
  40cd9c:	xor    eax,eax
  40cd9e:	call   404110 <__printf_chk@plt>
  40cda3:	jmp    40ccc9 <test_union_vector@@Base+0x249>
  40cda8:	nop    DWORD PTR [rax+rax*1+0x0]
  40cdb0:	mov    edi,eax
  40cdb2:	mov    ebx,0xffffffff
  40cdb7:	call   413890 <flatcc_verify_error_string@@Base>
  40cdbc:	lea    rsi,[rip+0xb565]        # 418328 <_IO_stdin_used@@Base+0x2328>
  40cdc3:	mov    rdx,rax
  40cdc6:	mov    edi,0x1
  40cdcb:	xor    eax,eax
  40cdcd:	call   404110 <__printf_chk@plt>
  40cdd2:	jmp    40ccd1 <test_union_vector@@Base+0x251>
  40cdd7:	call   404070 <__stack_chk_fail@plt>
  40cddc:	lea    rcx,[rip+0xc27d]        # 419060 <_IO_stdin_used@@Base+0x3060>
  40cde3:	lea    rsi,[rip+0x9d9e]        # 416b88 <_IO_stdin_used@@Base+0xb88>
  40cdea:	lea    rdi,[rip+0xb49f]        # 418290 <_IO_stdin_used@@Base+0x2290>
  40cdf1:	mov    edx,0xdf
  40cdf6:	call   404090 <__assert_fail@plt>
  40cdfb:	call   4045a4 <posix_memalign@plt+0x474>
  40ce00:	lea    rcx,[rip+0xc279]        # 419080 <_IO_stdin_used@@Base+0x3080>
  40ce07:	lea    rsi,[rip+0x9d7a]        # 416b88 <_IO_stdin_used@@Base+0xb88>
  40ce0e:	lea    rdi,[rip+0xb3a3]        # 4181b8 <_IO_stdin_used@@Base+0x21b8>
  40ce15:	mov    edx,0xd9
  40ce1a:	call   404090 <__assert_fail@plt>
  40ce1f:	nop

000000000040ce20 <test_mixed_type_union@@Base>:
  40ce20:	push   r15
  40ce22:	push   r14
  40ce24:	push   r13
  40ce26:	push   r12
  40ce28:	push   rbp
  40ce29:	push   rbx
  40ce2a:	mov    rbx,rdi
  40ce2d:	sub    rsp,0x18
  40ce31:	mov    rax,QWORD PTR fs:0x28
  40ce3a:	mov    QWORD PTR [rsp+0x8],rax
  40ce3f:	xor    eax,eax
  40ce41:	call   40faf0 <flatcc_builder_reset@@Base>
  40ce46:	lea    rsi,[rip+0x92ee]        # 41613b <_IO_stdin_used@@Base+0x13b>
  40ce4d:	xor    ecx,ecx
  40ce4f:	xor    edx,edx
  40ce51:	mov    rdi,rbx
  40ce54:	call   410330 <flatcc_builder_start_buffer@@Base>
  40ce59:	test   eax,eax
  40ce5b:	jne    40ce6a <test_mixed_type_union@@Base+0x4a>
  40ce5d:	mov    esi,0xa
  40ce62:	mov    rdi,rbx
  40ce65:	call   410fa0 <flatcc_builder_start_table@@Base>
  40ce6a:	mov    edx,0x4
  40ce6f:	mov    esi,0x4
  40ce74:	mov    rdi,rbx
  40ce77:	call   410550 <flatcc_builder_start_struct@@Base>
  40ce7c:	xor    r12d,r12d
  40ce7f:	test   rax,rax
  40ce82:	je     40ce95 <test_mixed_type_union@@Base+0x75>
  40ce84:	mov    DWORD PTR [rax],0xa
  40ce8a:	mov    rdi,rbx
  40ce8d:	call   410600 <flatcc_builder_end_struct@@Base>
  40ce92:	mov    r12d,eax
  40ce95:	mov    edx,0x2
  40ce9a:	mov    esi,0x2
  40ce9f:	mov    rdi,rbx
  40cea2:	call   410550 <flatcc_builder_start_struct@@Base>
  40cea7:	test   rax,rax
  40ceaa:	je     40d440 <test_mixed_type_union@@Base+0x620>
  40ceb0:	mov    esi,0x16
  40ceb5:	mov    rdi,rbx
  40ceb8:	mov    WORD PTR [rax],si
  40cebb:	call   410600 <flatcc_builder_end_struct@@Base>
  40cec0:	mov    edx,0x2
  40cec5:	mov    esi,0x2
  40ceca:	mov    rdi,rbx
  40cecd:	mov    ebp,eax
  40cecf:	call   410550 <flatcc_builder_start_struct@@Base>
  40ced4:	test   rax,rax
  40ced7:	je     40cf25 <test_mixed_type_union@@Base+0x105>
  40ced9:	mov    ecx,0x13
  40cede:	mov    rdi,rbx
  40cee1:	mov    WORD PTR [rax],cx
  40cee4:	call   410600 <flatcc_builder_end_struct@@Base>
  40cee9:	test   eax,eax
  40ceeb:	mov    r13d,eax
  40ceee:	je     40cf25 <test_mixed_type_union@@Base+0x105>
  40cef0:	xor    esi,esi
  40cef2:	mov    ecx,0x1
  40cef7:	mov    edx,0x1
  40cefc:	mov    rdi,rbx
  40ceff:	call   412840 <flatcc_builder_table_add@@Base>
  40cf04:	test   rax,rax
  40cf07:	mov    r14,rax
  40cf0a:	je     40cf25 <test_mixed_type_union@@Base+0x105>
  40cf0c:	mov    esi,0x1
  40cf11:	mov    rdi,rbx
  40cf14:	call   412a10 <flatcc_builder_table_add_offset@@Base>
  40cf19:	test   rax,rax
  40cf1c:	je     40cf25 <test_mixed_type_union@@Base+0x105>
  40cf1e:	mov    BYTE PTR [r14],0x8
  40cf22:	mov    DWORD PTR [rax],r13d
  40cf25:	test   ebp,ebp
  40cf27:	je     40cf61 <test_mixed_type_union@@Base+0x141>
  40cf29:	mov    ecx,0x1
  40cf2e:	mov    edx,0x1
  40cf33:	mov    esi,0x6
  40cf38:	mov    rdi,rbx
  40cf3b:	call   412840 <flatcc_builder_table_add@@Base>
  40cf40:	test   rax,rax
  40cf43:	mov    r13,rax
  40cf46:	je     40cf61 <test_mixed_type_union@@Base+0x141>
  40cf48:	mov    esi,0x7
  40cf4d:	mov    rdi,rbx
  40cf50:	call   412a10 <flatcc_builder_table_add_offset@@Base>
  40cf55:	test   rax,rax
  40cf58:	je     40cf61 <test_mixed_type_union@@Base+0x141>
  40cf5a:	mov    BYTE PTR [r13+0x0],0x8
  40cf5f:	mov    DWORD PTR [rax],ebp
  40cf61:	mov    esi,0x1
  40cf66:	mov    rdi,rbx
  40cf69:	call   410fa0 <flatcc_builder_start_table@@Base>
  40cf6e:	test   eax,eax
  40cf70:	jne    40d2e0 <test_mixed_type_union@@Base+0x4c0>
  40cf76:	xor    esi,esi
  40cf78:	mov    ecx,0x4
  40cf7d:	mov    edx,0x4
  40cf82:	mov    rdi,rbx
  40cf85:	call   412840 <flatcc_builder_table_add@@Base>
  40cf8a:	test   rax,rax
  40cf8d:	je     40d2e0 <test_mixed_type_union@@Base+0x4c0>
  40cf93:	lea    rsi,[rip+0xc652]        # 4195ec <_IO_stdin_used@@Base+0x35ec>
  40cf9a:	xor    edx,edx
  40cf9c:	mov    DWORD PTR [rax],0x2a
  40cfa2:	mov    rdi,rbx
  40cfa5:	call   4118e0 <flatcc_builder_check_required@@Base>
  40cfaa:	test   eax,eax
  40cfac:	je     40d63f <test_mixed_type_union@@Base+0x81f>
  40cfb2:	mov    rdi,rbx
  40cfb5:	call   411960 <flatcc_builder_end_table@@Base>
  40cfba:	test   eax,eax
  40cfbc:	mov    r13d,eax
  40cfbf:	je     40d2e0 <test_mixed_type_union@@Base+0x4c0>
  40cfc5:	mov    ecx,0x1
  40cfca:	mov    edx,0x1
  40cfcf:	mov    esi,0x2
  40cfd4:	mov    rdi,rbx
  40cfd7:	call   412840 <flatcc_builder_table_add@@Base>
  40cfdc:	test   rax,rax
  40cfdf:	mov    r14,rax
  40cfe2:	je     40cffd <test_mixed_type_union@@Base+0x1dd>
  40cfe4:	mov    esi,0x3
  40cfe9:	mov    rdi,rbx
  40cfec:	call   412a10 <flatcc_builder_table_add_offset@@Base>
  40cff1:	test   rax,rax
  40cff4:	je     40cffd <test_mixed_type_union@@Base+0x1dd>
  40cff6:	mov    BYTE PTR [r14],0x2
  40cffa:	mov    DWORD PTR [rax],r13d
  40cffd:	lea    rsi,[rip+0x97b9]        # 4167bd <_IO_stdin_used@@Base+0x7bd>
  40d004:	mov    rdi,rbx
  40d007:	call   4126b0 <flatcc_builder_create_string_str@@Base>
  40d00c:	test   eax,eax
  40d00e:	mov    r14d,eax
  40d011:	je     40d04b <test_mixed_type_union@@Base+0x22b>
  40d013:	mov    ecx,0x1
  40d018:	mov    edx,0x1
  40d01d:	mov    esi,0x4
  40d022:	mov    rdi,rbx
  40d025:	call   412840 <flatcc_builder_table_add@@Base>
  40d02a:	test   rax,rax
  40d02d:	mov    r15,rax
  40d030:	je     40d04b <test_mixed_type_union@@Base+0x22b>
  40d032:	mov    esi,0x5
  40d037:	mov    rdi,rbx
  40d03a:	call   412a10 <flatcc_builder_table_add_offset@@Base>
  40d03f:	test   rax,rax
  40d042:	je     40d04b <test_mixed_type_union@@Base+0x22b>
  40d044:	mov    BYTE PTR [r15],0xb
  40d048:	mov    DWORD PTR [rax],r14d
  40d04b:	mov    rdi,rbx
  40d04e:	call   412180 <flatcc_builder_start_union_vector@@Base>
  40d053:	mov    rsi,rbp
  40d056:	mov    rdi,rbx
  40d059:	shl    rsi,0x20
  40d05d:	or     rsi,0x8
  40d061:	call   412460 <flatcc_builder_union_vector_push@@Base>
  40d066:	mov    rsi,r13
  40d069:	mov    rdi,rbx
  40d06c:	shl    rsi,0x20
  40d070:	or     rsi,0x2
  40d074:	call   412460 <flatcc_builder_union_vector_push@@Base>
  40d079:	mov    esi,0x1
  40d07e:	mov    rdi,rbx
  40d081:	call   410fa0 <flatcc_builder_start_table@@Base>
  40d086:	test   eax,eax
  40d088:	jne    40d2d0 <test_mixed_type_union@@Base+0x4b0>
  40d08e:	xor    esi,esi
  40d090:	mov    ecx,0x4
  40d095:	mov    edx,0x4
  40d09a:	mov    rdi,rbx
  40d09d:	call   412840 <flatcc_builder_table_add@@Base>
  40d0a2:	test   rax,rax
  40d0a5:	je     40d2d0 <test_mixed_type_union@@Base+0x4b0>
  40d0ab:	lea    rsi,[rip+0xc53a]        # 4195ec <_IO_stdin_used@@Base+0x35ec>
  40d0b2:	xor    edx,edx
  40d0b4:	mov    DWORD PTR [rax],0x1
  40d0ba:	mov    rdi,rbx
  40d0bd:	call   4118e0 <flatcc_builder_check_required@@Base>
  40d0c2:	test   eax,eax
  40d0c4:	je     40d63f <test_mixed_type_union@@Base+0x81f>
  40d0ca:	mov    rdi,rbx
  40d0cd:	call   411960 <flatcc_builder_end_table@@Base>
  40d0d2:	mov    rsi,rax
  40d0d5:	mov    rdi,rbx
  40d0d8:	shl    rsi,0x20
  40d0dc:	or     rsi,0x2
  40d0e0:	call   412460 <flatcc_builder_union_vector_push@@Base>
  40d0e5:	lea    rsi,[rip+0x96dc]        # 4167c8 <_IO_stdin_used@@Base+0x7c8>
  40d0ec:	mov    rdi,rbx
  40d0ef:	call   4126b0 <flatcc_builder_create_string_str@@Base>
  40d0f4:	mov    rsi,rax
  40d0f7:	mov    rdi,rbx
  40d0fa:	shl    rsi,0x20
  40d0fe:	or     rsi,0xb
  40d102:	call   412460 <flatcc_builder_union_vector_push@@Base>
  40d107:	mov    rsi,r12
  40d10a:	mov    rdi,rbx
  40d10d:	shl    rsi,0x20
  40d111:	or     rsi,0x9
  40d115:	call   412460 <flatcc_builder_union_vector_push@@Base>
  40d11a:	mov    edx,0x4
  40d11f:	mov    esi,0x4
  40d124:	mov    rdi,rbx
  40d127:	call   410550 <flatcc_builder_start_struct@@Base>
  40d12c:	mov    rdi,rbx
  40d12f:	mov    DWORD PTR [rax],0x3
  40d135:	call   410600 <flatcc_builder_end_struct@@Base>
  40d13a:	mov    rsi,rax
  40d13d:	mov    rdi,rbx
  40d140:	shl    rsi,0x20
  40d144:	or     rsi,0x9
  40d148:	call   412460 <flatcc_builder_union_vector_push@@Base>
  40d14d:	mov    esi,0x4
  40d152:	mov    edx,0x4
  40d157:	mov    rdi,rbx
  40d15a:	call   410550 <flatcc_builder_start_struct@@Base>
  40d15f:	xor    esi,esi
  40d161:	test   rax,rax
  40d164:	je     40d176 <test_mixed_type_union@@Base+0x356>
  40d166:	mov    DWORD PTR [rax],0x1
  40d16c:	mov    rdi,rbx
  40d16f:	call   410600 <flatcc_builder_end_struct@@Base>
  40d174:	mov    esi,eax
  40d176:	shl    rsi,0x20
  40d17a:	mov    rdi,rbx
  40d17d:	or     rsi,0x9
  40d181:	call   412460 <flatcc_builder_union_vector_push@@Base>
  40d186:	mov    esi,0x4
  40d18b:	mov    edx,0x4
  40d190:	mov    rdi,rbx
  40d193:	call   410550 <flatcc_builder_start_struct@@Base>
  40d198:	xor    esi,esi
  40d19a:	test   rax,rax
  40d19d:	je     40d1af <test_mixed_type_union@@Base+0x38f>
  40d19f:	mov    DWORD PTR [rax],0x2
  40d1a5:	mov    rdi,rbx
  40d1a8:	call   410600 <flatcc_builder_end_struct@@Base>
  40d1ad:	mov    esi,eax
  40d1af:	shl    rsi,0x20
  40d1b3:	mov    rdi,rbx
  40d1b6:	or     rsi,0x9
  40d1ba:	call   412460 <flatcc_builder_union_vector_push@@Base>
  40d1bf:	lea    rsi,[rip+0x9600]        # 4167c6 <_IO_stdin_used@@Base+0x7c6>
  40d1c6:	mov    rdi,rbx
  40d1c9:	call   4126b0 <flatcc_builder_create_string_str@@Base>
  40d1ce:	mov    rsi,rax
  40d1d1:	mov    rdi,rbx
  40d1d4:	shl    rsi,0x20
  40d1d8:	or     rsi,0xb
  40d1dc:	call   412460 <flatcc_builder_union_vector_push@@Base>
  40d1e1:	lea    rsi,[rip+0x95da]        # 4167c2 <_IO_stdin_used@@Base+0x7c2>
  40d1e8:	mov    rdi,rbx
  40d1eb:	call   4126b0 <flatcc_builder_create_string_str@@Base>
  40d1f0:	mov    rsi,rax
  40d1f3:	mov    rdi,rbx
  40d1f6:	shl    rsi,0x20
  40d1fa:	or     rsi,0xb
  40d1fe:	call   412460 <flatcc_builder_union_vector_push@@Base>
  40d203:	mov    rdi,rbx
  40d206:	call   412200 <flatcc_builder_end_union_vector@@Base>
  40d20b:	mov    r12,rax
  40d20e:	mov    rbp,rax
  40d211:	sar    r12,0x20
  40d215:	test   eax,eax
  40d217:	je     40d222 <test_mixed_type_union@@Base+0x402>
  40d219:	test   r12d,r12d
  40d21c:	jne    40d4a0 <test_mixed_type_union@@Base+0x680>
  40d222:	lea    rsi,[rip+0xc3c1]        # 4195ea <_IO_stdin_used@@Base+0x35ea>
  40d229:	xor    edx,edx
  40d22b:	mov    rdi,rbx
  40d22e:	call   4118e0 <flatcc_builder_check_required@@Base>
  40d233:	test   eax,eax
  40d235:	je     40d61b <test_mixed_type_union@@Base+0x7fb>
  40d23b:	mov    rdi,rbx
  40d23e:	call   411960 <flatcc_builder_end_table@@Base>
  40d243:	mov    rdi,rbx
  40d246:	mov    esi,eax
  40d248:	call   410410 <flatcc_builder_end_buffer@@Base>
  40d24d:	mov    rdi,rbx
  40d250:	mov    rsi,rsp
  40d253:	call   413000 <flatcc_builder_finalize_aligned_buffer@@Base>
  40d258:	mov    rbx,rax
  40d25b:	mov    rax,QWORD PTR [rip+0x11d96]        # 41eff8 <stderr@GLIBC_2.2.5>
  40d262:	mov    rdx,QWORD PTR [rsp]
  40d266:	lea    rdi,[rip+0x9561]        # 4167ce <_IO_stdin_used@@Base+0x7ce>
  40d26d:	mov    rsi,rbx
  40d270:	mov    rcx,QWORD PTR [rax]
  40d273:	call   4049a0 <_start@@Base+0x150>
  40d278:	mov    rsi,QWORD PTR [rsp]
  40d27c:	lea    rcx,[rip+0xffffffffffff834d]        # 4055d0 <_start@@Base+0xd80>
  40d283:	lea    rdx,[rip+0x8eb1]        # 41613b <_IO_stdin_used@@Base+0x13b>
  40d28a:	mov    rdi,rbx
  40d28d:	call   414720 <flatcc_verify_table_as_root@@Base>
  40d292:	test   eax,eax
  40d294:	jne    40d570 <test_mixed_type_union@@Base+0x750>
  40d29a:	test   rbx,rbx
  40d29d:	je     40d2a8 <test_mixed_type_union@@Base+0x488>
  40d29f:	cmp    DWORD PTR [rbx+0x4],0x534e4f4d
  40d2a6:	je     40d2f0 <test_mixed_type_union@@Base+0x4d0>
  40d2a8:	lea    rcx,[rip+0xbcb1]        # 418f60 <_IO_stdin_used@@Base+0x2f60>
  40d2af:	lea    rsi,[rip+0x9722]        # 4169d8 <_IO_stdin_used@@Base+0x9d8>
  40d2b6:	lea    rdi,[rip+0x979b]        # 416a58 <_IO_stdin_used@@Base+0xa58>
  40d2bd:	mov    edx,0x333
  40d2c2:	call   404090 <__assert_fail@plt>
  40d2c7:	nop    WORD PTR [rax+rax*1+0x0]
  40d2d0:	xor    eax,eax
  40d2d2:	jmp    40d0d2 <test_mixed_type_union@@Base+0x2b2>
  40d2d7:	nop    WORD PTR [rax+rax*1+0x0]
  40d2e0:	xor    r13d,r13d
  40d2e3:	jmp    40cffd <test_mixed_type_union@@Base+0x1dd>
  40d2e8:	nop    DWORD PTR [rax+rax*1+0x0]
  40d2f0:	mov    ebp,DWORD PTR [rbx]
  40d2f2:	add    rbp,rbx
  40d2f5:	je     40d2a8 <test_mixed_type_union@@Base+0x488>
  40d2f7:	movsxd rax,DWORD PTR [rbp+0x0]
  40d2fb:	mov    rcx,rbp
  40d2fe:	sub    rcx,rax
  40d301:	movzx  edx,WORD PTR [rcx]
  40d304:	mov    rax,rcx
  40d307:	cmp    dx,0x7
  40d30b:	jbe    40d3d8 <test_mixed_type_union@@Base+0x5b8>
  40d311:	movzx  ecx,WORD PTR [rcx+0x6]
  40d315:	test   cx,cx
  40d318:	je     40d3d8 <test_mixed_type_union@@Base+0x5b8>
  40d31e:	cmp    dx,0x17
  40d322:	jbe    40d420 <test_mixed_type_union@@Base+0x600>
  40d328:	movzx  r12d,WORD PTR [rax+0x16]
  40d32d:	test   r12w,r12w
  40d331:	je     40d420 <test_mixed_type_union@@Base+0x600>
  40d337:	movzx  edx,WORD PTR [rax+0x4]
  40d33b:	test   dx,dx
  40d33e:	je     40d4e0 <test_mixed_type_union@@Base+0x6c0>
  40d344:	movzx  edx,BYTE PTR [rbp+rdx*1+0x0]
  40d349:	test   dl,dl
  40d34b:	je     40d4e0 <test_mixed_type_union@@Base+0x6c0>
  40d351:	add    rcx,rbp
  40d354:	mov    esi,DWORD PTR [rcx]
  40d356:	add    rcx,rsi
  40d359:	cmp    dl,0x8
  40d35c:	jne    40d4e0 <test_mixed_type_union@@Base+0x6c0>
  40d362:	test   rcx,rcx
  40d365:	je     40d4fd <test_mixed_type_union@@Base+0x6dd>
  40d36b:	cmp    WORD PTR [rcx],0x13
  40d36f:	ja     40d530 <test_mixed_type_union@@Base+0x710>
  40d375:	jne    40d510 <test_mixed_type_union@@Base+0x6f0>
  40d37b:	movzx  edx,WORD PTR [rax+0x10]
  40d37f:	test   dx,dx
  40d382:	je     40d550 <test_mixed_type_union@@Base+0x730>
  40d388:	cmp    BYTE PTR [rbp+rdx*1+0x0],0x8
  40d38d:	jne    40d550 <test_mixed_type_union@@Base+0x730>
  40d393:	movzx  edx,WORD PTR [rax+0x12]
  40d397:	test   dx,dx
  40d39a:	je     40d600 <test_mixed_type_union@@Base+0x7e0>
  40d3a0:	add    rdx,rbp
  40d3a3:	mov    ecx,DWORD PTR [rdx]
  40d3a5:	add    rdx,rcx
  40d3a8:	je     40d600 <test_mixed_type_union@@Base+0x7e0>
  40d3ae:	cmp    WORD PTR [rdx],0x16
  40d3b2:	je     40d597 <test_mixed_type_union@@Base+0x777>
  40d3b8:	lea    rsi,[rip+0xb2e1]        # 4186a0 <_IO_stdin_used@@Base+0x26a0>
  40d3bf:	mov    edi,0x1
  40d3c4:	xor    eax,eax
  40d3c6:	mov    ebp,0xffffffff
  40d3cb:	call   404110 <__printf_chk@plt>
  40d3d0:	jmp    40d3f0 <test_mixed_type_union@@Base+0x5d0>
  40d3d2:	nop    WORD PTR [rax+rax*1+0x0]
  40d3d8:	lea    rsi,[rip+0xb1a1]        # 418580 <_IO_stdin_used@@Base+0x2580>
  40d3df:	mov    edi,0x1
  40d3e4:	xor    eax,eax
  40d3e6:	mov    ebp,0xffffffff
  40d3eb:	call   404110 <__printf_chk@plt>
  40d3f0:	mov    rdi,rbx
  40d3f3:	call   413150 <flatcc_builder_aligned_free@@Base>
  40d3f8:	mov    rcx,QWORD PTR [rsp+0x8]
  40d3fd:	xor    rcx,QWORD PTR fs:0x28
  40d406:	mov    eax,ebp
  40d408:	jne    40d63a <test_mixed_type_union@@Base+0x81a>
  40d40e:	add    rsp,0x18
  40d412:	pop    rbx
  40d413:	pop    rbp
  40d414:	pop    r12
  40d416:	pop    r13
  40d418:	pop    r14
  40d41a:	pop    r15
  40d41c:	ret    
  40d41d:	nop    DWORD PTR [rax]
  40d420:	lea    rsi,[rip+0xb189]        # 4185b0 <_IO_stdin_used@@Base+0x25b0>
  40d427:	mov    edi,0x1
  40d42c:	xor    eax,eax
  40d42e:	mov    ebp,0xffffffff
  40d433:	call   404110 <__printf_chk@plt>
  40d438:	jmp    40d3f0 <test_mixed_type_union@@Base+0x5d0>
  40d43a:	nop    WORD PTR [rax+rax*1+0x0]
  40d440:	mov    edx,0x2
  40d445:	mov    esi,0x2
  40d44a:	mov    rdi,rbx
  40d44d:	call   410550 <flatcc_builder_start_struct@@Base>
  40d452:	xor    ebp,ebp
  40d454:	test   rax,rax
  40d457:	je     40cf61 <test_mixed_type_union@@Base+0x141>
  40d45d:	mov    edx,0x13
  40d462:	mov    rdi,rbx
  40d465:	mov    WORD PTR [rax],dx
  40d468:	call   410600 <flatcc_builder_end_struct@@Base>
  40d46d:	test   eax,eax
  40d46f:	mov    r13d,eax
  40d472:	je     40cf61 <test_mixed_type_union@@Base+0x141>
  40d478:	xor    esi,esi
  40d47a:	mov    ecx,0x1
  40d47f:	mov    edx,0x1
  40d484:	mov    rdi,rbx
  40d487:	call   412840 <flatcc_builder_table_add@@Base>
  40d48c:	test   rax,rax
  40d48f:	mov    r14,rax
  40d492:	jne    40cf0c <test_mixed_type_union@@Base+0xec>
  40d498:	jmp    40cf61 <test_mixed_type_union@@Base+0x141>
  40d49d:	nop    DWORD PTR [rax]
  40d4a0:	mov    esi,0x8
  40d4a5:	mov    rdi,rbx
  40d4a8:	call   412a10 <flatcc_builder_table_add_offset@@Base>
  40d4ad:	test   rax,rax
  40d4b0:	je     40d222 <test_mixed_type_union@@Base+0x402>
  40d4b6:	mov    DWORD PTR [rax],ebp
  40d4b8:	mov    esi,0x9
  40d4bd:	mov    rdi,rbx
  40d4c0:	call   412a10 <flatcc_builder_table_add_offset@@Base>
  40d4c5:	test   rax,rax
  40d4c8:	je     40d222 <test_mixed_type_union@@Base+0x402>
  40d4ce:	mov    DWORD PTR [rax],r12d
  40d4d1:	jmp    40d222 <test_mixed_type_union@@Base+0x402>
  40d4d6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40d4e0:	lea    rsi,[rip+0x92f4]        # 4167db <_IO_stdin_used@@Base+0x7db>
  40d4e7:	mov    edi,0x1
  40d4ec:	xor    eax,eax
  40d4ee:	mov    ebp,0xffffffff
  40d4f3:	call   404110 <__printf_chk@plt>
  40d4f8:	jmp    40d3f0 <test_mixed_type_union@@Base+0x5d0>
  40d4fd:	lea    rsi,[rip+0x92f3]        # 4167f7 <_IO_stdin_used@@Base+0x7f7>
  40d504:	mov    edi,0x1
  40d509:	xor    eax,eax
  40d50b:	call   404110 <__printf_chk@plt>
  40d510:	lea    rsi,[rip+0xb0f1]        # 418608 <_IO_stdin_used@@Base+0x2608>
  40d517:	mov    edi,0x1
  40d51c:	xor    eax,eax
  40d51e:	mov    ebp,0xffffffff
  40d523:	call   404110 <__printf_chk@plt>
  40d528:	jmp    40d3f0 <test_mixed_type_union@@Base+0x5d0>
  40d52d:	nop    DWORD PTR [rax]
  40d530:	lea    rsi,[rip+0xb0a9]        # 4185e0 <_IO_stdin_used@@Base+0x25e0>
  40d537:	mov    edi,0x1
  40d53c:	xor    eax,eax
  40d53e:	mov    ebp,0xffffffff
  40d543:	call   404110 <__printf_chk@plt>
  40d548:	jmp    40d3f0 <test_mixed_type_union@@Base+0x5d0>
  40d54d:	nop    DWORD PTR [rax]
  40d550:	lea    rsi,[rip+0xb0e1]        # 418638 <_IO_stdin_used@@Base+0x2638>
  40d557:	mov    edi,0x1
  40d55c:	xor    eax,eax
  40d55e:	mov    ebp,0xffffffff
  40d563:	call   404110 <__printf_chk@plt>
  40d568:	jmp    40d3f0 <test_mixed_type_union@@Base+0x5d0>
  40d56d:	nop    DWORD PTR [rax]
  40d570:	mov    edi,eax
  40d572:	mov    ebp,0xffffffff
  40d577:	call   413890 <flatcc_verify_error_string@@Base>
  40d57c:	lea    rsi,[rip+0xafad]        # 418530 <_IO_stdin_used@@Base+0x2530>
  40d583:	mov    rdx,rax
  40d586:	mov    edi,0x1
  40d58b:	xor    eax,eax
  40d58d:	call   404110 <__printf_chk@plt>
  40d592:	jmp    40d3f8 <test_mixed_type_union@@Base+0x5d8>
  40d597:	movzx  edx,WORD PTR [rax+0x8]
  40d59b:	test   dx,dx
  40d59e:	je     40d5e3 <test_mixed_type_union@@Base+0x7c3>
  40d5a0:	cmp    BYTE PTR [rbp+rdx*1+0x0],0x2
  40d5a5:	jne    40d5e3 <test_mixed_type_union@@Base+0x7c3>
  40d5a7:	movzx  eax,WORD PTR [rax+0xa]
  40d5ab:	test   ax,ax
  40d5ae:	je     40d5c8 <test_mixed_type_union@@Base+0x7a8>
  40d5b0:	add    rax,rbp
  40d5b3:	mov    edi,DWORD PTR [rax]
  40d5b5:	add    rdi,rax
  40d5b8:	je     40d5c8 <test_mixed_type_union@@Base+0x7a8>
  40d5ba:	call   40448d <posix_memalign@plt+0x35d>
  40d5bf:	cmp    eax,0x2a
  40d5c2:	je     40d65e <test_mixed_type_union@@Base+0x83e>
  40d5c8:	lea    rsi,[rip+0xb101]        # 4186d0 <_IO_stdin_used@@Base+0x26d0>
  40d5cf:	mov    edi,0x1
  40d5d4:	xor    eax,eax
  40d5d6:	or     ebp,0xffffffff
  40d5d9:	call   404110 <__printf_chk@plt>
  40d5de:	jmp    40d3f0 <test_mixed_type_union@@Base+0x5d0>
  40d5e3:	lea    rsi,[rip+0x9225]        # 41680f <_IO_stdin_used@@Base+0x80f>
  40d5ea:	mov    edi,0x1
  40d5ef:	xor    eax,eax
  40d5f1:	mov    ebp,0xffffffff
  40d5f6:	call   404110 <__printf_chk@plt>
  40d5fb:	jmp    40d3f0 <test_mixed_type_union@@Base+0x5d0>
  40d600:	lea    rsi,[rip+0xb069]        # 418670 <_IO_stdin_used@@Base+0x2670>
  40d607:	mov    edi,0x1
  40d60c:	xor    eax,eax
  40d60e:	or     ebp,0xffffffff
  40d611:	call   404110 <__printf_chk@plt>
  40d616:	jmp    40d3f0 <test_mixed_type_union@@Base+0x5d0>
  40d61b:	lea    rcx,[rip+0xb96e]        # 418f90 <_IO_stdin_used@@Base+0x2f90>
  40d622:	lea    rsi,[rip+0x955f]        # 416b88 <_IO_stdin_used@@Base+0xb88>
  40d629:	lea    rdi,[rip+0xae78]        # 4184a8 <_IO_stdin_used@@Base+0x24a8>
  40d630:	mov    edx,0xf1
  40d635:	call   404090 <__assert_fail@plt>
  40d63a:	call   404070 <__stack_chk_fail@plt>
  40d63f:	lea    rcx,[rip+0xb96a]        # 418fb0 <_IO_stdin_used@@Base+0x2fb0>
  40d646:	lea    rsi,[rip+0x953b]        # 416b88 <_IO_stdin_used@@Base+0xb88>
  40d64d:	lea    rdi,[rip+0xadc4]        # 418418 <_IO_stdin_used@@Base+0x2418>
  40d654:	mov    edx,0xef
  40d659:	call   404090 <__assert_fail@plt>
  40d65e:	mov    rdi,rbp
  40d661:	call   4043fc <posix_memalign@plt+0x2cc>
  40d666:	cmp    al,0xb
  40d668:	je     40d685 <test_mixed_type_union@@Base+0x865>
  40d66a:	lea    rsi,[rip+0x91b6]        # 416827 <_IO_stdin_used@@Base+0x827>
  40d671:	mov    edi,0x1
  40d676:	xor    eax,eax
  40d678:	or     ebp,0xffffffff
  40d67b:	call   404110 <__printf_chk@plt>
  40d680:	jmp    40d3f0 <test_mixed_type_union@@Base+0x5d0>
  40d685:	mov    rdi,rbp
  40d688:	call   404442 <posix_memalign@plt+0x312>
  40d68d:	test   rax,rax
  40d690:	je     40d6cc <test_mixed_type_union@@Base+0x8ac>
  40d692:	add    rax,0x4
  40d696:	mov    r13,rax
  40d699:	je     40d6cc <test_mixed_type_union@@Base+0x8ac>
  40d69b:	lea    rsi,[rip+0x911b]        # 4167bd <_IO_stdin_used@@Base+0x7bd>
  40d6a2:	mov    rdi,rax
  40d6a5:	call   4040d0 <strcmp@plt>
  40d6aa:	test   eax,eax
  40d6ac:	je     40d6e7 <test_mixed_type_union@@Base+0x8c7>
  40d6ae:	lea    rsi,[rip+0xb043]        # 4186f8 <_IO_stdin_used@@Base+0x26f8>
  40d6b5:	mov    rdx,r13
  40d6b8:	mov    edi,0x1
  40d6bd:	xor    eax,eax
  40d6bf:	or     ebp,0xffffffff
  40d6c2:	call   404110 <__printf_chk@plt>
  40d6c7:	jmp    40d3f0 <test_mixed_type_union@@Base+0x5d0>
  40d6cc:	lea    rsi,[rip+0x916b]        # 41683e <_IO_stdin_used@@Base+0x83e>
  40d6d3:	mov    edi,0x1
  40d6d8:	xor    eax,eax
  40d6da:	or     ebp,0xffffffff
  40d6dd:	call   404110 <__printf_chk@plt>
  40d6e2:	jmp    40d3f0 <test_mixed_type_union@@Base+0x5d0>
  40d6e7:	mov    rdi,rbp
  40d6ea:	call   4044d3 <posix_memalign@plt+0x3a3>
  40d6ef:	mov    r13,rax
  40d6f2:	movzx  eax,r12w
  40d6f6:	add    rax,rbp
  40d6f9:	test   r13,r13
  40d6fc:	mov    edx,DWORD PTR [rax]
  40d6fe:	lea    r12,[rax+rdx*1+0x4]
  40d703:	je     40d748 <test_mixed_type_union@@Base+0x928>
  40d705:	test   r12,r12
  40d708:	mov    edx,DWORD PTR [r13-0x4]
  40d70c:	je     40d79f <test_mixed_type_union@@Base+0x97f>
  40d712:	mov    eax,DWORD PTR [r12-0x4]
  40d717:	cmp    rax,rdx
  40d71a:	jne    40d780 <test_mixed_type_union@@Base+0x960>
  40d71c:	xor    edx,edx
  40d71e:	mov    rdi,r13
  40d721:	mov    rsi,r12
  40d724:	call   404520 <posix_memalign@plt+0x3f0>
  40d729:	cmp    al,0x8
  40d72b:	je     40d751 <test_mixed_type_union@@Base+0x931>
  40d72d:	lea    rsi,[rip+0xb054]        # 418788 <_IO_stdin_used@@Base+0x2788>
  40d734:	mov    edi,0x1
  40d739:	xor    eax,eax
  40d73b:	or     ebp,0xffffffff
  40d73e:	call   404110 <__printf_chk@plt>
  40d743:	jmp    40d3f0 <test_mixed_type_union@@Base+0x5d0>
  40d748:	xor    edx,edx
  40d74a:	test   r12,r12
  40d74d:	jne    40d712 <test_mixed_type_union@@Base+0x8f2>
  40d74f:	jmp    40d71c <test_mixed_type_union@@Base+0x8fc>
  40d751:	mov    edx,0x1
  40d756:	mov    rdi,r13
  40d759:	mov    rsi,r12
  40d75c:	call   404520 <posix_memalign@plt+0x3f0>
  40d761:	cmp    al,0x2
  40d763:	je     40d7a6 <test_mixed_type_union@@Base+0x986>
  40d765:	lea    rsi,[rip+0xb044]        # 4187b0 <_IO_stdin_used@@Base+0x27b0>
  40d76c:	mov    edi,0x1
  40d771:	xor    eax,eax
  40d773:	or     ebp,0xffffffff
  40d776:	call   404110 <__printf_chk@plt>
  40d77b:	jmp    40d3f0 <test_mixed_type_union@@Base+0x5d0>
  40d780:	lea    rcx,[rip+0xb769]        # 418ef0 <_IO_stdin_used@@Base+0x2ef0>
  40d787:	lea    rsi,[rip+0x924a]        # 4169d8 <_IO_stdin_used@@Base+0x9d8>
  40d78e:	lea    rdi,[rip+0xaf8b]        # 418720 <_IO_stdin_used@@Base+0x2720>
  40d795:	mov    edx,0x337
  40d79a:	call   404090 <__assert_fail@plt>
  40d79f:	xor    eax,eax
  40d7a1:	jmp    40d717 <test_mixed_type_union@@Base+0x8f7>
  40d7a6:	mov    rdi,rdx
  40d7a9:	call   40448d <posix_memalign@plt+0x35d>
  40d7ae:	cmp    eax,0x2a
  40d7b1:	je     40d7ce <test_mixed_type_union@@Base+0x9ae>
  40d7b3:	lea    rsi,[rip+0xb01e]        # 4187d8 <_IO_stdin_used@@Base+0x27d8>
  40d7ba:	mov    edi,0x1
  40d7bf:	xor    eax,eax
  40d7c1:	or     ebp,0xffffffff
  40d7c4:	call   404110 <__printf_chk@plt>
  40d7c9:	jmp    40d3f0 <test_mixed_type_union@@Base+0x5d0>
  40d7ce:	mov    edx,0x2
  40d7d3:	mov    rdi,r13
  40d7d6:	mov    rsi,r12
  40d7d9:	call   404520 <posix_memalign@plt+0x3f0>
  40d7de:	cmp    al,0x2
  40d7e0:	je     40d7fd <test_mixed_type_union@@Base+0x9dd>
  40d7e2:	lea    rsi,[rip+0xb027]        # 418810 <_IO_stdin_used@@Base+0x2810>
  40d7e9:	mov    edi,0x1
  40d7ee:	xor    eax,eax
  40d7f0:	or     ebp,0xffffffff
  40d7f3:	call   404110 <__printf_chk@plt>
  40d7f8:	jmp    40d3f0 <test_mixed_type_union@@Base+0x5d0>
  40d7fd:	mov    rdi,rdx
  40d800:	call   40448d <posix_memalign@plt+0x35d>
  40d805:	sub    eax,0x1
  40d808:	je     40d825 <test_mixed_type_union@@Base+0xa05>
  40d80a:	lea    rsi,[rip+0xb027]        # 418838 <_IO_stdin_used@@Base+0x2838>
  40d811:	mov    edi,0x1
  40d816:	xor    eax,eax
  40d818:	or     ebp,0xffffffff
  40d81b:	call   404110 <__printf_chk@plt>
  40d820:	jmp    40d3f0 <test_mixed_type_union@@Base+0x5d0>
  40d825:	mov    rdi,rbp
  40d828:	call   4044d3 <posix_memalign@plt+0x3a3>
  40d82d:	test   rax,rax
  40d830:	je     40d859 <test_mixed_type_union@@Base+0xa39>
  40d832:	cmp    DWORD PTR [rax-0x4],0x3
  40d836:	jbe    40d859 <test_mixed_type_union@@Base+0xa39>
  40d838:	cmp    BYTE PTR [rax+0x3],0xb
  40d83c:	je     40d85e <test_mixed_type_union@@Base+0xa3e>
  40d83e:	lea    rsi,[rip+0xb02b]        # 418870 <_IO_stdin_used@@Base+0x2870>
  40d845:	mov    edi,0x1
  40d84a:	xor    eax,eax
  40d84c:	or     ebp,0xffffffff
  40d84f:	call   404110 <__printf_chk@plt>
  40d854:	jmp    40d3f0 <test_mixed_type_union@@Base+0x5d0>
  40d859:	call   4043d9 <posix_memalign@plt+0x2a9>
  40d85e:	test   r12,r12
  40d861:	je     40d8a5 <test_mixed_type_union@@Base+0xa85>
  40d863:	cmp    DWORD PTR [r12-0x4],0x3
  40d869:	jbe    40d8a5 <test_mixed_type_union@@Base+0xa85>
  40d86b:	mov    eax,DWORD PTR [r12+0xc]
  40d870:	lea    rdi,[r12+rax*1+0x10]
  40d875:	test   rdi,rdi
  40d878:	je     40d88a <test_mixed_type_union@@Base+0xa6a>
  40d87a:	lea    rsi,[rip+0x8f47]        # 4167c8 <_IO_stdin_used@@Base+0x7c8>
  40d881:	call   4040d0 <strcmp@plt>
  40d886:	test   eax,eax
  40d888:	je     40d8c4 <test_mixed_type_union@@Base+0xaa4>
  40d88a:	lea    rsi,[rip+0xb00f]        # 4188a0 <_IO_stdin_used@@Base+0x28a0>
  40d891:	mov    edi,0x1
  40d896:	xor    eax,eax
  40d898:	or     ebp,0xffffffff
  40d89b:	call   404110 <__printf_chk@plt>
  40d8a0:	jmp    40d3f0 <test_mixed_type_union@@Base+0x5d0>
  40d8a5:	lea    rcx,[rip+0xb5b4]        # 418e60 <_IO_stdin_used@@Base+0x2e60>
  40d8ac:	lea    rsi,[rip+0x91cd]        # 416a80 <_IO_stdin_used@@Base+0xa80>
  40d8b3:	lea    rdi,[rip+0x924e]        # 416b08 <_IO_stdin_used@@Base+0xb08>
  40d8ba:	mov    edx,0x77
  40d8bf:	call   404090 <__assert_fail@plt>
  40d8c4:	mov    edx,0x3
  40d8c9:	mov    rdi,r13
  40d8cc:	mov    rsi,r12
  40d8cf:	call   404520 <posix_memalign@plt+0x3f0>
  40d8d4:	cmp    al,0xb
  40d8d6:	je     40d8f3 <test_mixed_type_union@@Base+0xad3>
  40d8d8:	lea    rsi,[rip+0xaff9]        # 4188d8 <_IO_stdin_used@@Base+0x28d8>
  40d8df:	mov    edi,0x1
  40d8e4:	xor    eax,eax
  40d8e6:	or     ebp,0xffffffff
  40d8e9:	call   404110 <__printf_chk@plt>
  40d8ee:	jmp    40d3f0 <test_mixed_type_union@@Base+0x5d0>
  40d8f3:	test   rdx,rdx
  40d8f6:	je     40d913 <test_mixed_type_union@@Base+0xaf3>
  40d8f8:	add    rdx,0x4
  40d8fc:	mov    rdi,rdx
  40d8ff:	je     40d913 <test_mixed_type_union@@Base+0xaf3>
  40d901:	lea    rsi,[rip+0x8ec0]        # 4167c8 <_IO_stdin_used@@Base+0x7c8>
  40d908:	call   4040d0 <strcmp@plt>
  40d90d:	test   eax,eax
  40d90f:	mov    ebp,eax
  40d911:	je     40d92e <test_mixed_type_union@@Base+0xb0e>
  40d913:	lea    rsi,[rip+0xaff6]        # 418910 <_IO_stdin_used@@Base+0x2910>
  40d91a:	mov    edi,0x1
  40d91f:	xor    eax,eax
  40d921:	or     ebp,0xffffffff
  40d924:	call   404110 <__printf_chk@plt>
  40d929:	jmp    40d3f0 <test_mixed_type_union@@Base+0x5d0>
  40d92e:	mov    edx,0x4
  40d933:	mov    rdi,r13
  40d936:	mov    rsi,r12
  40d939:	call   404520 <posix_memalign@plt+0x3f0>
  40d93e:	cmp    al,0x9
  40d940:	je     40d95d <test_mixed_type_union@@Base+0xb3d>
  40d942:	lea    rsi,[rip+0xb007]        # 418950 <_IO_stdin_used@@Base+0x2950>
  40d949:	mov    edi,0x1
  40d94e:	xor    eax,eax
  40d950:	or     ebp,0xffffffff
  40d953:	call   404110 <__printf_chk@plt>
  40d958:	jmp    40d3f0 <test_mixed_type_union@@Base+0x5d0>
  40d95d:	mov    edx,0x5
  40d962:	mov    rdi,r13
  40d965:	mov    rsi,r12
  40d968:	call   404520 <posix_memalign@plt+0x3f0>
  40d96d:	cmp    al,0x9
  40d96f:	je     40d98c <test_mixed_type_union@@Base+0xb6c>
  40d971:	lea    rsi,[rip+0xb000]        # 418978 <_IO_stdin_used@@Base+0x2978>
  40d978:	mov    edi,0x1
  40d97d:	xor    eax,eax
  40d97f:	or     ebp,0xffffffff
  40d982:	call   404110 <__printf_chk@plt>
  40d987:	jmp    40d3f0 <test_mixed_type_union@@Base+0x5d0>
  40d98c:	mov    edx,0x6
  40d991:	mov    rdi,r13
  40d994:	mov    rsi,r12
  40d997:	call   404520 <posix_memalign@plt+0x3f0>
  40d99c:	cmp    al,0x9
  40d99e:	je     40d9bb <test_mixed_type_union@@Base+0xb9b>
  40d9a0:	lea    rsi,[rip+0xaff9]        # 4189a0 <_IO_stdin_used@@Base+0x29a0>
  40d9a7:	mov    edi,0x1
  40d9ac:	xor    eax,eax
  40d9ae:	or     ebp,0xffffffff
  40d9b1:	call   404110 <__printf_chk@plt>
  40d9b6:	jmp    40d3f0 <test_mixed_type_union@@Base+0x5d0>
  40d9bb:	mov    edx,0x7
  40d9c0:	mov    rdi,r13
  40d9c3:	mov    rsi,r12
  40d9c6:	call   404520 <posix_memalign@plt+0x3f0>
  40d9cb:	cmp    al,0x9
  40d9cd:	je     40d9ea <test_mixed_type_union@@Base+0xbca>
  40d9cf:	lea    rsi,[rip+0xaff2]        # 4189c8 <_IO_stdin_used@@Base+0x29c8>
  40d9d6:	mov    edi,0x1
  40d9db:	xor    eax,eax
  40d9dd:	or     ebp,0xffffffff
  40d9e0:	call   404110 <__printf_chk@plt>
  40d9e5:	jmp    40d3f0 <test_mixed_type_union@@Base+0x5d0>
  40d9ea:	mov    edx,0x8
  40d9ef:	mov    rdi,r13
  40d9f2:	mov    rsi,r12
  40d9f5:	call   404520 <posix_memalign@plt+0x3f0>
  40d9fa:	cmp    al,0xb
  40d9fc:	je     40da19 <test_mixed_type_union@@Base+0xbf9>
  40d9fe:	lea    rsi,[rip+0xafeb]        # 4189f0 <_IO_stdin_used@@Base+0x29f0>
  40da05:	mov    edi,0x1
  40da0a:	xor    eax,eax
  40da0c:	or     ebp,0xffffffff
  40da0f:	call   404110 <__printf_chk@plt>
  40da14:	jmp    40d3f0 <test_mixed_type_union@@Base+0x5d0>
  40da19:	mov    edx,0x9
  40da1e:	mov    rdi,r13
  40da21:	mov    rsi,r12
  40da24:	call   404520 <posix_memalign@plt+0x3f0>
  40da29:	cmp    al,0xb
  40da2b:	jne    40d9fe <test_mixed_type_union@@Base+0xbde>
  40da2d:	test   r13,r13
  40da30:	je     40da3d <test_mixed_type_union@@Base+0xc1d>
  40da32:	cmp    DWORD PTR [r13-0x4],0xa
  40da37:	je     40d3f0 <test_mixed_type_union@@Base+0x5d0>
  40da3d:	lea    rsi,[rip+0xafdc]        # 418a20 <_IO_stdin_used@@Base+0x2a20>
  40da44:	mov    edi,0x1
  40da49:	xor    eax,eax
  40da4b:	or     ebp,0xffffffff
  40da4e:	call   404110 <__printf_chk@plt>
  40da53:	jmp    40d3f0 <test_mixed_type_union@@Base+0x5d0>
  40da58:	nop    DWORD PTR [rax+rax*1+0x0]

000000000040da60 <test_add_set_defaults@@Base>:
  40da60:	push   r12
  40da62:	push   rbp
  40da63:	push   rbx
  40da64:	mov    rbx,rdi
  40da67:	sub    rsp,0x10
  40da6b:	mov    rax,QWORD PTR fs:0x28
  40da74:	mov    QWORD PTR [rsp+0x8],rax
  40da79:	xor    eax,eax
  40da7b:	call   40faf0 <flatcc_builder_reset@@Base>
  40da80:	lea    rsi,[rip+0x86b4]        # 41613b <_IO_stdin_used@@Base+0x13b>
  40da87:	xor    ecx,ecx
  40da89:	xor    edx,edx
  40da8b:	mov    rdi,rbx
  40da8e:	call   410330 <flatcc_builder_start_buffer@@Base>
  40da93:	test   eax,eax
  40da95:	jne    40daa4 <test_add_set_defaults@@Base+0x44>
  40da97:	mov    esi,0x24
  40da9c:	mov    rdi,rbx
  40da9f:	call   410fa0 <flatcc_builder_start_table@@Base>
  40daa4:	lea    rsi,[rip+0x86a8]        # 416153 <_IO_stdin_used@@Base+0x153>
  40daab:	mov    rdi,rbx
  40daae:	call   4126b0 <flatcc_builder_create_string_str@@Base>
  40dab3:	test   eax,eax
  40dab5:	mov    ebp,eax
  40dab7:	je     40dacd <test_add_set_defaults@@Base+0x6d>
  40dab9:	mov    esi,0x3
  40dabe:	mov    rdi,rbx
  40dac1:	call   412a10 <flatcc_builder_table_add_offset@@Base>
  40dac6:	test   rax,rax
  40dac9:	je     40dacd <test_add_set_defaults@@Base+0x6d>
  40dacb:	mov    DWORD PTR [rax],ebp
  40dacd:	mov    ecx,0x2
  40dad2:	mov    edx,0x2
  40dad7:	mov    esi,0x1
  40dadc:	mov    rdi,rbx
  40dadf:	call   412840 <flatcc_builder_table_add@@Base>
  40dae4:	test   rax,rax
  40dae7:	je     40daf1 <test_add_set_defaults@@Base+0x91>
  40dae9:	mov    esi,0x64
  40daee:	mov    WORD PTR [rax],si
  40daf1:	lea    rsi,[rip+0xbaf8]        # 4195f0 <_IO_stdin_used@@Base+0x35f0>
  40daf8:	mov    edx,0x1
  40dafd:	mov    rdi,rbx
  40db00:	call   4118e0 <flatcc_builder_check_required@@Base>
  40db05:	test   eax,eax
  40db07:	je     40ddc5 <test_add_set_defaults@@Base+0x365>
  40db0d:	mov    rdi,rbx
  40db10:	mov    rbp,rsp
  40db13:	call   411960 <flatcc_builder_end_table@@Base>
  40db18:	mov    rdi,rbx
  40db1b:	mov    esi,eax
  40db1d:	call   410410 <flatcc_builder_end_buffer@@Base>
  40db22:	mov    rsi,rsp
  40db25:	mov    rdi,rbx
  40db28:	call   412ed0 <flatcc_builder_get_direct_buffer@@Base>
  40db2d:	test   rax,rax
  40db30:	je     40db3b <test_add_set_defaults@@Base+0xdb>
  40db32:	cmp    DWORD PTR [rax+0x4],0x534e4f4d
  40db39:	je     40db40 <test_add_set_defaults@@Base+0xe0>
  40db3b:	call   404163 <posix_memalign@plt+0x33>
  40db40:	mov    edx,DWORD PTR [rax]
  40db42:	add    rax,rdx
  40db45:	je     40db3b <test_add_set_defaults@@Base+0xdb>
  40db47:	movsxd rdx,DWORD PTR [rax]
  40db4a:	sub    rax,rdx
  40db4d:	movzx  edx,WORD PTR [rax]
  40db50:	cmp    dx,0x9
  40db54:	jbe    40dd00 <test_add_set_defaults@@Base+0x2a0>
  40db5a:	cmp    WORD PTR [rax+0x8],0x0
  40db5f:	jne    40dd28 <test_add_set_defaults@@Base+0x2c8>
  40db65:	cmp    WORD PTR [rax+0x6],0x0
  40db6a:	je     40dd0a <test_add_set_defaults@@Base+0x2aa>
  40db70:	cmp    dx,0x11
  40db74:	jbe    40db81 <test_add_set_defaults@@Base+0x121>
  40db76:	cmp    WORD PTR [rax+0x10],0x0
  40db7b:	jne    40dd48 <test_add_set_defaults@@Base+0x2e8>
  40db81:	mov    rdi,rbx
  40db84:	call   40faf0 <flatcc_builder_reset@@Base>
  40db89:	lea    rsi,[rip+0x85ab]        # 41613b <_IO_stdin_used@@Base+0x13b>
  40db90:	xor    ecx,ecx
  40db92:	xor    edx,edx
  40db94:	mov    rdi,rbx
  40db97:	call   410330 <flatcc_builder_start_buffer@@Base>
  40db9c:	test   eax,eax
  40db9e:	jne    40dbad <test_add_set_defaults@@Base+0x14d>
  40dba0:	mov    esi,0x24
  40dba5:	mov    rdi,rbx
  40dba8:	call   410fa0 <flatcc_builder_start_table@@Base>
  40dbad:	lea    rsi,[rip+0x859f]        # 416153 <_IO_stdin_used@@Base+0x153>
  40dbb4:	mov    rdi,rbx
  40dbb7:	call   4126b0 <flatcc_builder_create_string_str@@Base>
  40dbbc:	test   eax,eax
  40dbbe:	mov    r12d,eax
  40dbc1:	je     40dbd8 <test_add_set_defaults@@Base+0x178>
  40dbc3:	mov    esi,0x3
  40dbc8:	mov    rdi,rbx
  40dbcb:	call   412a10 <flatcc_builder_table_add_offset@@Base>
  40dbd0:	test   rax,rax
  40dbd3:	je     40dbd8 <test_add_set_defaults@@Base+0x178>
  40dbd5:	mov    DWORD PTR [rax],r12d
  40dbd8:	mov    ecx,0x2
  40dbdd:	mov    edx,0x2
  40dbe2:	mov    esi,0x2
  40dbe7:	mov    rdi,rbx
  40dbea:	call   412840 <flatcc_builder_table_add@@Base>
  40dbef:	test   rax,rax
  40dbf2:	je     40dbfc <test_add_set_defaults@@Base+0x19c>
  40dbf4:	mov    ecx,0x64
  40dbf9:	mov    WORD PTR [rax],cx
  40dbfc:	mov    ecx,0x2
  40dc01:	mov    edx,0x2
  40dc06:	mov    esi,0x1
  40dc0b:	mov    rdi,rbx
  40dc0e:	call   412840 <flatcc_builder_table_add@@Base>
  40dc13:	test   rax,rax
  40dc16:	je     40dc20 <test_add_set_defaults@@Base+0x1c0>
  40dc18:	mov    edx,0x64
  40dc1d:	mov    WORD PTR [rax],dx
  40dc20:	mov    ecx,0x1
  40dc25:	mov    edx,0x1
  40dc2a:	mov    esi,0x6
  40dc2f:	mov    rdi,rbx
  40dc32:	call   412840 <flatcc_builder_table_add@@Base>
  40dc37:	test   rax,rax
  40dc3a:	je     40dc3f <test_add_set_defaults@@Base+0x1df>
  40dc3c:	mov    BYTE PTR [rax],0x8
  40dc3f:	lea    rsi,[rip+0xb9aa]        # 4195f0 <_IO_stdin_used@@Base+0x35f0>
  40dc46:	mov    edx,0x1
  40dc4b:	mov    rdi,rbx
  40dc4e:	call   4118e0 <flatcc_builder_check_required@@Base>
  40dc53:	test   eax,eax
  40dc55:	je     40ddc5 <test_add_set_defaults@@Base+0x365>
  40dc5b:	mov    rdi,rbx
  40dc5e:	call   411960 <flatcc_builder_end_table@@Base>
  40dc63:	mov    rdi,rbx
  40dc66:	mov    esi,eax
  40dc68:	call   410410 <flatcc_builder_end_buffer@@Base>
  40dc6d:	mov    rsi,rbp
  40dc70:	mov    rdi,rbx
  40dc73:	call   412ed0 <flatcc_builder_get_direct_buffer@@Base>
  40dc78:	test   rax,rax
  40dc7b:	je     40db3b <test_add_set_defaults@@Base+0xdb>
  40dc81:	cmp    DWORD PTR [rax+0x4],0x534e4f4d
  40dc88:	jne    40db3b <test_add_set_defaults@@Base+0xdb>
  40dc8e:	mov    edx,DWORD PTR [rax]
  40dc90:	add    rax,rdx
  40dc93:	je     40db3b <test_add_set_defaults@@Base+0xdb>
  40dc99:	movsxd rdx,DWORD PTR [rax]
  40dc9c:	sub    rax,rdx
  40dc9f:	movzx  edx,WORD PTR [rax]
  40dca2:	cmp    dx,0x9
  40dca6:	jbe    40dd68 <test_add_set_defaults@@Base+0x308>
  40dcac:	cmp    WORD PTR [rax+0x8],0x0
  40dcb1:	je     40dd68 <test_add_set_defaults@@Base+0x308>
  40dcb7:	cmp    WORD PTR [rax+0x6],0x0
  40dcbc:	je     40dd85 <test_add_set_defaults@@Base+0x325>
  40dcc2:	cmp    dx,0x11
  40dcc6:	jbe    40dda8 <test_add_set_defaults@@Base+0x348>
  40dccc:	cmp    WORD PTR [rax+0x10],0x0
  40dcd1:	je     40dda8 <test_add_set_defaults@@Base+0x348>
  40dcd7:	xor    eax,eax
  40dcd9:	mov    rcx,QWORD PTR [rsp+0x8]
  40dcde:	xor    rcx,QWORD PTR fs:0x28
  40dce7:	jne    40ddca <test_add_set_defaults@@Base+0x36a>
  40dced:	add    rsp,0x10
  40dcf1:	pop    rbx
  40dcf2:	pop    rbp
  40dcf3:	pop    r12
  40dcf5:	ret    
  40dcf6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40dd00:	cmp    dx,0x7
  40dd04:	ja     40db65 <test_add_set_defaults@@Base+0x105>
  40dd0a:	lea    rsi,[rip+0xad67]        # 418a78 <_IO_stdin_used@@Base+0x2a78>
  40dd11:	mov    edi,0x1
  40dd16:	xor    eax,eax
  40dd18:	call   404110 <__printf_chk@plt>
  40dd1d:	mov    eax,0xffffffff
  40dd22:	jmp    40dcd9 <test_add_set_defaults@@Base+0x279>
  40dd24:	nop    DWORD PTR [rax+0x0]
  40dd28:	lea    rsi,[rip+0xad19]        # 418a48 <_IO_stdin_used@@Base+0x2a48>
  40dd2f:	mov    edi,0x1
  40dd34:	xor    eax,eax
  40dd36:	call   404110 <__printf_chk@plt>
  40dd3b:	mov    eax,0xffffffff
  40dd40:	jmp    40dcd9 <test_add_set_defaults@@Base+0x279>
  40dd42:	nop    WORD PTR [rax+rax*1+0x0]
  40dd48:	lea    rsi,[rip+0xad59]        # 418aa8 <_IO_stdin_used@@Base+0x2aa8>
  40dd4f:	mov    edi,0x1
  40dd54:	xor    eax,eax
  40dd56:	call   404110 <__printf_chk@plt>
  40dd5b:	mov    eax,0xffffffff
  40dd60:	jmp    40dcd9 <test_add_set_defaults@@Base+0x279>
  40dd65:	nop    DWORD PTR [rax]
  40dd68:	lea    rsi,[rip+0xad69]        # 418ad8 <_IO_stdin_used@@Base+0x2ad8>
  40dd6f:	mov    edi,0x1
  40dd74:	xor    eax,eax
  40dd76:	call   404110 <__printf_chk@plt>
  40dd7b:	mov    eax,0xffffffff
  40dd80:	jmp    40dcd9 <test_add_set_defaults@@Base+0x279>
  40dd85:	lea    rsi,[rip+0xad84]        # 418b10 <_IO_stdin_used@@Base+0x2b10>
  40dd8c:	mov    edi,0x1
  40dd91:	xor    eax,eax
  40dd93:	call   404110 <__printf_chk@plt>
  40dd98:	mov    eax,0xffffffff
  40dd9d:	jmp    40dcd9 <test_add_set_defaults@@Base+0x279>
  40dda2:	nop    WORD PTR [rax+rax*1+0x0]
  40dda8:	lea    rsi,[rip+0xada1]        # 418b50 <_IO_stdin_used@@Base+0x2b50>
  40ddaf:	mov    edi,0x1
  40ddb4:	xor    eax,eax
  40ddb6:	call   404110 <__printf_chk@plt>
  40ddbb:	mov    eax,0xffffffff
  40ddc0:	jmp    40dcd9 <test_add_set_defaults@@Base+0x279>
  40ddc5:	call   4045a4 <posix_memalign@plt+0x474>
  40ddca:	call   404070 <__stack_chk_fail@plt>
  40ddcf:	nop

000000000040ddd0 <test_nested_buffer@@Base>:
  40ddd0:	push   rbp
  40ddd1:	push   rbx
  40ddd2:	mov    rbx,rdi
  40ddd5:	sub    rsp,0x18
  40ddd9:	mov    rax,QWORD PTR fs:0x28
  40dde2:	mov    QWORD PTR [rsp+0x8],rax
  40dde7:	xor    eax,eax
  40dde9:	call   40faf0 <flatcc_builder_reset@@Base>
  40ddee:	lea    rsi,[rip+0x8346]        # 41613b <_IO_stdin_used@@Base+0x13b>
  40ddf5:	xor    ecx,ecx
  40ddf7:	xor    edx,edx
  40ddf9:	mov    rdi,rbx
  40ddfc:	call   410330 <flatcc_builder_start_buffer@@Base>
  40de01:	test   eax,eax
  40de03:	jne    40de12 <test_nested_buffer@@Base+0x42>
  40de05:	mov    esi,0x24
  40de0a:	mov    rdi,rbx
  40de0d:	call   410fa0 <flatcc_builder_start_table@@Base>
  40de12:	lea    rsi,[rip+0x833a]        # 416153 <_IO_stdin_used@@Base+0x153>
  40de19:	mov    rdi,rbx
  40de1c:	call   4126b0 <flatcc_builder_create_string_str@@Base>
  40de21:	test   eax,eax
  40de23:	mov    ebp,eax
  40de25:	je     40de3b <test_nested_buffer@@Base+0x6b>
  40de27:	mov    esi,0x3
  40de2c:	mov    rdi,rbx
  40de2f:	call   412a10 <flatcc_builder_table_add_offset@@Base>
  40de34:	test   rax,rax
  40de37:	je     40de3b <test_nested_buffer@@Base+0x6b>
  40de39:	mov    DWORD PTR [rax],ebp
  40de3b:	lea    rsi,[rip+0x82f9]        # 41613b <_IO_stdin_used@@Base+0x13b>
  40de42:	xor    ecx,ecx
  40de44:	xor    edx,edx
  40de46:	mov    rdi,rbx
  40de49:	call   410330 <flatcc_builder_start_buffer@@Base>
  40de4e:	test   eax,eax
  40de50:	jne    40de5f <test_nested_buffer@@Base+0x8f>
  40de52:	mov    esi,0x24
  40de57:	mov    rdi,rbx
  40de5a:	call   410fa0 <flatcc_builder_start_table@@Base>
  40de5f:	lea    rsi,[rip+0x89f3]        # 416859 <_IO_stdin_used@@Base+0x859>
  40de66:	mov    rdi,rbx
  40de69:	call   4126b0 <flatcc_builder_create_string_str@@Base>
  40de6e:	test   eax,eax
  40de70:	mov    ebp,eax
  40de72:	je     40de88 <test_nested_buffer@@Base+0xb8>
  40de74:	mov    esi,0x3
  40de79:	mov    rdi,rbx
  40de7c:	call   412a10 <flatcc_builder_table_add_offset@@Base>
  40de81:	test   rax,rax
  40de84:	je     40de88 <test_nested_buffer@@Base+0xb8>
  40de86:	mov    DWORD PTR [rax],ebp
  40de88:	lea    rsi,[rip+0xb761]        # 4195f0 <_IO_stdin_used@@Base+0x35f0>
  40de8f:	mov    edx,0x1
  40de94:	mov    rdi,rbx
  40de97:	call   4118e0 <flatcc_builder_check_required@@Base>
  40de9c:	test   eax,eax
  40de9e:	je     40e0fd <test_nested_buffer@@Base+0x32d>
  40dea4:	mov    rdi,rbx
  40dea7:	call   411960 <flatcc_builder_end_table@@Base>
  40deac:	mov    rdi,rbx
  40deaf:	mov    esi,eax
  40deb1:	call   410410 <flatcc_builder_end_buffer@@Base>
  40deb6:	test   eax,eax
  40deb8:	mov    ebp,eax
  40deba:	je     40ded0 <test_nested_buffer@@Base+0x100>
  40debc:	mov    esi,0xd
  40dec1:	mov    rdi,rbx
  40dec4:	call   412a10 <flatcc_builder_table_add_offset@@Base>
  40dec9:	test   rax,rax
  40decc:	je     40ded0 <test_nested_buffer@@Base+0x100>
  40dece:	mov    DWORD PTR [rax],ebp
  40ded0:	mov    ecx,0x2
  40ded5:	mov    edx,0x2
  40deda:	mov    esi,0x2
  40dedf:	mov    rdi,rbx
  40dee2:	call   412840 <flatcc_builder_table_add@@Base>
  40dee7:	test   rax,rax
  40deea:	je     40def4 <test_nested_buffer@@Base+0x124>
  40deec:	mov    edx,0xa
  40def1:	mov    WORD PTR [rax],dx
  40def4:	lea    rsi,[rip+0xb6f5]        # 4195f0 <_IO_stdin_used@@Base+0x35f0>
  40defb:	mov    edx,0x1
  40df00:	mov    rdi,rbx
  40df03:	call   4118e0 <flatcc_builder_check_required@@Base>
  40df08:	test   eax,eax
  40df0a:	je     40e0fd <test_nested_buffer@@Base+0x32d>
  40df10:	mov    rdi,rbx
  40df13:	call   411960 <flatcc_builder_end_table@@Base>
  40df18:	mov    rdi,rbx
  40df1b:	mov    esi,eax
  40df1d:	call   410410 <flatcc_builder_end_buffer@@Base>
  40df22:	mov    rdi,rbx
  40df25:	mov    rsi,rsp
  40df28:	call   412ed0 <flatcc_builder_get_direct_buffer@@Base>
  40df2d:	mov    rbx,rax
  40df30:	mov    rax,QWORD PTR [rip+0x110c1]        # 41eff8 <stderr@GLIBC_2.2.5>
  40df37:	mov    rdx,QWORD PTR [rsp]
  40df3b:	lea    rdi,[rip+0x8927]        # 416869 <_IO_stdin_used@@Base+0x869>
  40df42:	mov    rsi,rbx
  40df45:	mov    rcx,QWORD PTR [rax]
  40df48:	call   4049a0 <_start@@Base+0x150>
  40df4d:	test   rbx,rbx
  40df50:	je     40df5b <test_nested_buffer@@Base+0x18b>
  40df52:	cmp    DWORD PTR [rbx+0x4],0x534e4f4d
  40df59:	je     40df60 <test_nested_buffer@@Base+0x190>
  40df5b:	call   40432a <posix_memalign@plt+0x1fa>
  40df60:	mov    eax,DWORD PTR [rbx]
  40df62:	add    rbx,rax
  40df65:	je     40df5b <test_nested_buffer@@Base+0x18b>
  40df67:	movsxd rax,DWORD PTR [rbx]
  40df6a:	mov    rcx,rbx
  40df6d:	sub    rcx,rax
  40df70:	movzx  r8d,WORD PTR [rcx]
  40df74:	mov    rax,rcx
  40df77:	cmp    r8w,0xb
  40df7c:	ja     40dfa0 <test_nested_buffer@@Base+0x1d0>
  40df7e:	lea    rcx,[rip+0xb28b]        # 419210 <_IO_stdin_used@@Base+0x3210>
  40df85:	lea    rsi,[rip+0x8a4c]        # 4169d8 <_IO_stdin_used@@Base+0x9d8>
  40df8c:	lea    rdi,[rip+0x8bad]        # 416b40 <_IO_stdin_used@@Base+0xb40>
  40df93:	mov    edx,0x2bb
  40df98:	call   404090 <__assert_fail@plt>
  40df9d:	nop    DWORD PTR [rax]
  40dfa0:	movzx  edx,WORD PTR [rcx+0xa]
  40dfa4:	test   dx,dx
  40dfa7:	je     40df7e <test_nested_buffer@@Base+0x1ae>
  40dfa9:	add    rdx,rbx
  40dfac:	lea    rdi,[rip+0x81a0]        # 416153 <_IO_stdin_used@@Base+0x153>
  40dfb3:	mov    ecx,DWORD PTR [rdx]
  40dfb5:	lea    rsi,[rdx+rcx*1+0x4]
  40dfba:	mov    ecx,0xa
  40dfbf:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  40dfc1:	jne    40e0c0 <test_nested_buffer@@Base+0x2f0>
  40dfc7:	xor    edx,edx
  40dfc9:	cmp    r8w,0x1f
  40dfce:	jbe    40dffa <test_nested_buffer@@Base+0x22a>
  40dfd0:	movzx  ecx,WORD PTR [rax+0x1e]
  40dfd4:	test   cx,cx
  40dfd7:	je     40dffa <test_nested_buffer@@Base+0x22a>
  40dfd9:	movzx  edx,cx
  40dfdc:	add    rdx,rbx
  40dfdf:	mov    ecx,DWORD PTR [rdx]
  40dfe1:	lea    rdx,[rdx+rcx*1+0x4]
  40dfe6:	test   rdx,rdx
  40dfe9:	je     40dff8 <test_nested_buffer@@Base+0x228>
  40dfeb:	cmp    DWORD PTR [rdx+0x4],0x534e4f4d
  40dff2:	je     40e090 <test_nested_buffer@@Base+0x2c0>
  40dff8:	xor    edx,edx
  40dffa:	movzx  eax,WORD PTR [rax+0x8]
  40dffe:	test   ax,ax
  40e001:	je     40e0a2 <test_nested_buffer@@Base+0x2d2>
  40e007:	nop    WORD PTR [rax+rax*1+0x0]
  40e010:	cmp    WORD PTR [rbx+rax*1],0xa
  40e015:	jne    40e0a2 <test_nested_buffer@@Base+0x2d2>
  40e01b:	test   rdx,rdx
  40e01e:	je     40df5b <test_nested_buffer@@Base+0x18b>
  40e024:	movsxd rax,DWORD PTR [rdx]
  40e027:	mov    rcx,rdx
  40e02a:	sub    rcx,rax
  40e02d:	cmp    WORD PTR [rcx],0xb
  40e031:	jbe    40df7e <test_nested_buffer@@Base+0x1ae>
  40e037:	movzx  eax,WORD PTR [rcx+0xa]
  40e03b:	test   ax,ax
  40e03e:	je     40df7e <test_nested_buffer@@Base+0x1ae>
  40e044:	add    rdx,rax
  40e047:	mov    eax,DWORD PTR [rdx]
  40e049:	lea    rsi,[rdx+rax*1+0x4]
  40e04e:	test   rsi,rsi
  40e051:	je     40e107 <test_nested_buffer@@Base+0x337>
  40e057:	lea    rdi,[rip+0x87fb]        # 416859 <_IO_stdin_used@@Base+0x859>
  40e05e:	mov    ecx,0x10
  40e063:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  40e065:	seta   al
  40e068:	setb   dl
  40e06b:	sub    eax,edx
  40e06d:	movsx  eax,al
  40e070:	test   eax,eax
  40e072:	jne    40e0e0 <test_nested_buffer@@Base+0x310>
  40e074:	mov    rcx,QWORD PTR [rsp+0x8]
  40e079:	xor    rcx,QWORD PTR fs:0x28
  40e082:	jne    40e102 <test_nested_buffer@@Base+0x332>
  40e084:	add    rsp,0x18
  40e088:	pop    rbx
  40e089:	pop    rbp
  40e08a:	ret    
  40e08b:	nop    DWORD PTR [rax+rax*1+0x0]
  40e090:	mov    ecx,DWORD PTR [rdx]
  40e092:	movzx  eax,WORD PTR [rax+0x8]
  40e096:	add    rdx,rcx
  40e099:	test   ax,ax
  40e09c:	jne    40e010 <test_nested_buffer@@Base+0x240>
  40e0a2:	lea    rsi,[rip+0xaadf]        # 418b88 <_IO_stdin_used@@Base+0x2b88>
  40e0a9:	mov    edi,0x1
  40e0ae:	xor    eax,eax
  40e0b0:	call   404110 <__printf_chk@plt>
  40e0b5:	mov    eax,0xffffffff
  40e0ba:	jmp    40e074 <test_nested_buffer@@Base+0x2a4>
  40e0bc:	nop    DWORD PTR [rax+0x0]
  40e0c0:	lea    rsi,[rip+0x87b4]        # 41687b <_IO_stdin_used@@Base+0x87b>
  40e0c7:	mov    edi,0x1
  40e0cc:	xor    eax,eax
  40e0ce:	call   404110 <__printf_chk@plt>
  40e0d3:	mov    eax,0xffffffff
  40e0d8:	jmp    40e074 <test_nested_buffer@@Base+0x2a4>
  40e0da:	nop    WORD PTR [rax+rax*1+0x0]
  40e0e0:	lea    rsi,[rip+0x87c9]        # 4168b0 <_IO_stdin_used@@Base+0x8b0>
  40e0e7:	mov    edi,0x1
  40e0ec:	xor    eax,eax
  40e0ee:	call   404110 <__printf_chk@plt>
  40e0f3:	mov    eax,0xffffffff
  40e0f8:	jmp    40e074 <test_nested_buffer@@Base+0x2a4>
  40e0fd:	call   4045a4 <posix_memalign@plt+0x474>
  40e102:	call   404070 <__stack_chk_fail@plt>
  40e107:	lea    rcx,[rip+0xacc2]        # 418dd0 <_IO_stdin_used@@Base+0x2dd0>
  40e10e:	lea    rsi,[rip+0x92d3]        # 4173e8 <_IO_stdin_used@@Base+0x13e8>
  40e115:	lea    rdi,[rip+0x877b]        # 416897 <_IO_stdin_used@@Base+0x897>
  40e11c:	mov    edx,0x88c
  40e121:	call   404090 <__assert_fail@plt>
  40e126:	nop    WORD PTR cs:[rax+rax*1+0x0]

000000000040e130 <test_nested_buffer_first@@Base>:
  40e130:	push   rbp
  40e131:	push   rbx
  40e132:	mov    rbx,rdi
  40e135:	sub    rsp,0x18
  40e139:	mov    rax,QWORD PTR fs:0x28
  40e142:	mov    QWORD PTR [rsp+0x8],rax
  40e147:	xor    eax,eax
  40e149:	call   40faf0 <flatcc_builder_reset@@Base>
  40e14e:	lea    rsi,[rip+0x7fe6]        # 41613b <_IO_stdin_used@@Base+0x13b>
  40e155:	xor    ecx,ecx
  40e157:	xor    edx,edx
  40e159:	mov    rdi,rbx
  40e15c:	call   410330 <flatcc_builder_start_buffer@@Base>
  40e161:	test   eax,eax
  40e163:	jne    40e172 <test_nested_buffer_first@@Base+0x42>
  40e165:	mov    esi,0x24
  40e16a:	mov    rdi,rbx
  40e16d:	call   410fa0 <flatcc_builder_start_table@@Base>
  40e172:	lea    rsi,[rip+0x7fc2]        # 41613b <_IO_stdin_used@@Base+0x13b>
  40e179:	xor    ecx,ecx
  40e17b:	xor    edx,edx
  40e17d:	mov    rdi,rbx
  40e180:	call   410330 <flatcc_builder_start_buffer@@Base>
  40e185:	test   eax,eax
  40e187:	jne    40e196 <test_nested_buffer_first@@Base+0x66>
  40e189:	mov    esi,0x24
  40e18e:	mov    rdi,rbx
  40e191:	call   410fa0 <flatcc_builder_start_table@@Base>
  40e196:	lea    rsi,[rip+0x86bc]        # 416859 <_IO_stdin_used@@Base+0x859>
  40e19d:	mov    rdi,rbx
  40e1a0:	call   4126b0 <flatcc_builder_create_string_str@@Base>
  40e1a5:	test   eax,eax
  40e1a7:	mov    ebp,eax
  40e1a9:	je     40e1bf <test_nested_buffer_first@@Base+0x8f>
  40e1ab:	mov    esi,0x3
  40e1b0:	mov    rdi,rbx
  40e1b3:	call   412a10 <flatcc_builder_table_add_offset@@Base>
  40e1b8:	test   rax,rax
  40e1bb:	je     40e1bf <test_nested_buffer_first@@Base+0x8f>
  40e1bd:	mov    DWORD PTR [rax],ebp
  40e1bf:	lea    rsi,[rip+0xb42a]        # 4195f0 <_IO_stdin_used@@Base+0x35f0>
  40e1c6:	mov    edx,0x1
  40e1cb:	mov    rdi,rbx
  40e1ce:	call   4118e0 <flatcc_builder_check_required@@Base>
  40e1d3:	test   eax,eax
  40e1d5:	je     40e45d <test_nested_buffer_first@@Base+0x32d>
  40e1db:	mov    rdi,rbx
  40e1de:	call   411960 <flatcc_builder_end_table@@Base>
  40e1e3:	mov    rdi,rbx
  40e1e6:	mov    esi,eax
  40e1e8:	call   410410 <flatcc_builder_end_buffer@@Base>
  40e1ed:	test   eax,eax
  40e1ef:	mov    ebp,eax
  40e1f1:	je     40e207 <test_nested_buffer_first@@Base+0xd7>
  40e1f3:	mov    esi,0xd
  40e1f8:	mov    rdi,rbx
  40e1fb:	call   412a10 <flatcc_builder_table_add_offset@@Base>
  40e200:	test   rax,rax
  40e203:	je     40e207 <test_nested_buffer_first@@Base+0xd7>
  40e205:	mov    DWORD PTR [rax],ebp
  40e207:	mov    ecx,0x2
  40e20c:	mov    edx,0x2
  40e211:	mov    esi,0x2
  40e216:	mov    rdi,rbx
  40e219:	call   412840 <flatcc_builder_table_add@@Base>
  40e21e:	test   rax,rax
  40e221:	je     40e22b <test_nested_buffer_first@@Base+0xfb>
  40e223:	mov    edx,0xa
  40e228:	mov    WORD PTR [rax],dx
  40e22b:	lea    rsi,[rip+0x7f21]        # 416153 <_IO_stdin_used@@Base+0x153>
  40e232:	mov    rdi,rbx
  40e235:	call   4126b0 <flatcc_builder_create_string_str@@Base>
  40e23a:	test   eax,eax
  40e23c:	mov    ebp,eax
  40e23e:	je     40e254 <test_nested_buffer_first@@Base+0x124>
  40e240:	mov    esi,0x3
  40e245:	mov    rdi,rbx
  40e248:	call   412a10 <flatcc_builder_table_add_offset@@Base>
  40e24d:	test   rax,rax
  40e250:	je     40e254 <test_nested_buffer_first@@Base+0x124>
  40e252:	mov    DWORD PTR [rax],ebp
  40e254:	lea    rsi,[rip+0xb395]        # 4195f0 <_IO_stdin_used@@Base+0x35f0>
  40e25b:	mov    edx,0x1
  40e260:	mov    rdi,rbx
  40e263:	call   4118e0 <flatcc_builder_check_required@@Base>
  40e268:	test   eax,eax
  40e26a:	je     40e45d <test_nested_buffer_first@@Base+0x32d>
  40e270:	mov    rdi,rbx
  40e273:	call   411960 <flatcc_builder_end_table@@Base>
  40e278:	mov    rdi,rbx
  40e27b:	mov    esi,eax
  40e27d:	call   410410 <flatcc_builder_end_buffer@@Base>
  40e282:	mov    rdi,rbx
  40e285:	mov    rsi,rsp
  40e288:	call   412ed0 <flatcc_builder_get_direct_buffer@@Base>
  40e28d:	mov    rbx,rax
  40e290:	mov    rax,QWORD PTR [rip+0x10d61]        # 41eff8 <stderr@GLIBC_2.2.5>
  40e297:	mov    rdx,QWORD PTR [rsp]
  40e29b:	lea    rdi,[rip+0x85c7]        # 416869 <_IO_stdin_used@@Base+0x869>
  40e2a2:	mov    rsi,rbx
  40e2a5:	mov    rcx,QWORD PTR [rax]
  40e2a8:	call   4049a0 <_start@@Base+0x150>
  40e2ad:	test   rbx,rbx
  40e2b0:	je     40e2bb <test_nested_buffer_first@@Base+0x18b>
  40e2b2:	cmp    DWORD PTR [rbx+0x4],0x534e4f4d
  40e2b9:	je     40e2c0 <test_nested_buffer_first@@Base+0x190>
  40e2bb:	call   40432a <posix_memalign@plt+0x1fa>
  40e2c0:	mov    eax,DWORD PTR [rbx]
  40e2c2:	add    rbx,rax
  40e2c5:	je     40e2bb <test_nested_buffer_first@@Base+0x18b>
  40e2c7:	movsxd rax,DWORD PTR [rbx]
  40e2ca:	mov    rcx,rbx
  40e2cd:	sub    rcx,rax
  40e2d0:	movzx  r8d,WORD PTR [rcx]
  40e2d4:	mov    rax,rcx
  40e2d7:	cmp    r8w,0xb
  40e2dc:	ja     40e300 <test_nested_buffer_first@@Base+0x1d0>
  40e2de:	lea    rcx,[rip+0xaf2b]        # 419210 <_IO_stdin_used@@Base+0x3210>
  40e2e5:	lea    rsi,[rip+0x86ec]        # 4169d8 <_IO_stdin_used@@Base+0x9d8>
  40e2ec:	lea    rdi,[rip+0x884d]        # 416b40 <_IO_stdin_used@@Base+0xb40>
  40e2f3:	mov    edx,0x2bb
  40e2f8:	call   404090 <__assert_fail@plt>
  40e2fd:	nop    DWORD PTR [rax]
  40e300:	movzx  edx,WORD PTR [rcx+0xa]
  40e304:	test   dx,dx
  40e307:	je     40e2de <test_nested_buffer_first@@Base+0x1ae>
  40e309:	add    rdx,rbx
  40e30c:	lea    rdi,[rip+0x7e40]        # 416153 <_IO_stdin_used@@Base+0x153>
  40e313:	mov    ecx,DWORD PTR [rdx]
  40e315:	lea    rsi,[rdx+rcx*1+0x4]
  40e31a:	mov    ecx,0xa
  40e31f:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  40e321:	jne    40e420 <test_nested_buffer_first@@Base+0x2f0>
  40e327:	xor    edx,edx
  40e329:	cmp    r8w,0x1f
  40e32e:	jbe    40e35a <test_nested_buffer_first@@Base+0x22a>
  40e330:	movzx  ecx,WORD PTR [rax+0x1e]
  40e334:	test   cx,cx
  40e337:	je     40e35a <test_nested_buffer_first@@Base+0x22a>
  40e339:	movzx  edx,cx
  40e33c:	add    rdx,rbx
  40e33f:	mov    ecx,DWORD PTR [rdx]
  40e341:	lea    rdx,[rdx+rcx*1+0x4]
  40e346:	test   rdx,rdx
  40e349:	je     40e358 <test_nested_buffer_first@@Base+0x228>
  40e34b:	cmp    DWORD PTR [rdx+0x4],0x534e4f4d
  40e352:	je     40e3f0 <test_nested_buffer_first@@Base+0x2c0>
  40e358:	xor    edx,edx
  40e35a:	movzx  eax,WORD PTR [rax+0x8]
  40e35e:	test   ax,ax
  40e361:	je     40e402 <test_nested_buffer_first@@Base+0x2d2>
  40e367:	nop    WORD PTR [rax+rax*1+0x0]
  40e370:	cmp    WORD PTR [rbx+rax*1],0xa
  40e375:	jne    40e402 <test_nested_buffer_first@@Base+0x2d2>
  40e37b:	test   rdx,rdx
  40e37e:	je     40e2bb <test_nested_buffer_first@@Base+0x18b>
  40e384:	movsxd rax,DWORD PTR [rdx]
  40e387:	mov    rcx,rdx
  40e38a:	sub    rcx,rax
  40e38d:	cmp    WORD PTR [rcx],0xb
  40e391:	jbe    40e2de <test_nested_buffer_first@@Base+0x1ae>
  40e397:	movzx  eax,WORD PTR [rcx+0xa]
  40e39b:	test   ax,ax
  40e39e:	je     40e2de <test_nested_buffer_first@@Base+0x1ae>
  40e3a4:	add    rdx,rax
  40e3a7:	mov    eax,DWORD PTR [rdx]
  40e3a9:	lea    rsi,[rdx+rax*1+0x4]
  40e3ae:	test   rsi,rsi
  40e3b1:	je     40e467 <test_nested_buffer_first@@Base+0x337>
  40e3b7:	lea    rdi,[rip+0x849b]        # 416859 <_IO_stdin_used@@Base+0x859>
  40e3be:	mov    ecx,0x10
  40e3c3:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  40e3c5:	seta   al
  40e3c8:	setb   dl
  40e3cb:	sub    eax,edx
  40e3cd:	movsx  eax,al
  40e3d0:	test   eax,eax
  40e3d2:	jne    40e440 <test_nested_buffer_first@@Base+0x310>
  40e3d4:	mov    rcx,QWORD PTR [rsp+0x8]
  40e3d9:	xor    rcx,QWORD PTR fs:0x28
  40e3e2:	jne    40e462 <test_nested_buffer_first@@Base+0x332>
  40e3e4:	add    rsp,0x18
  40e3e8:	pop    rbx
  40e3e9:	pop    rbp
  40e3ea:	ret    
  40e3eb:	nop    DWORD PTR [rax+rax*1+0x0]
  40e3f0:	mov    ecx,DWORD PTR [rdx]
  40e3f2:	movzx  eax,WORD PTR [rax+0x8]
  40e3f6:	add    rdx,rcx
  40e3f9:	test   ax,ax
  40e3fc:	jne    40e370 <test_nested_buffer_first@@Base+0x240>
  40e402:	lea    rsi,[rip+0xa77f]        # 418b88 <_IO_stdin_used@@Base+0x2b88>
  40e409:	mov    edi,0x1
  40e40e:	xor    eax,eax
  40e410:	call   404110 <__printf_chk@plt>
  40e415:	mov    eax,0xffffffff
  40e41a:	jmp    40e3d4 <test_nested_buffer_first@@Base+0x2a4>
  40e41c:	nop    DWORD PTR [rax+0x0]
  40e420:	lea    rsi,[rip+0x8454]        # 41687b <_IO_stdin_used@@Base+0x87b>
  40e427:	mov    edi,0x1
  40e42c:	xor    eax,eax
  40e42e:	call   404110 <__printf_chk@plt>
  40e433:	mov    eax,0xffffffff
  40e438:	jmp    40e3d4 <test_nested_buffer_first@@Base+0x2a4>
  40e43a:	nop    WORD PTR [rax+rax*1+0x0]
  40e440:	lea    rsi,[rip+0x8469]        # 4168b0 <_IO_stdin_used@@Base+0x8b0>
  40e447:	mov    edi,0x1
  40e44c:	xor    eax,eax
  40e44e:	call   404110 <__printf_chk@plt>
  40e453:	mov    eax,0xffffffff
  40e458:	jmp    40e3d4 <test_nested_buffer_first@@Base+0x2a4>
  40e45d:	call   4045a4 <posix_memalign@plt+0x474>
  40e462:	call   404070 <__stack_chk_fail@plt>
  40e467:	lea    rcx,[rip+0xa942]        # 418db0 <_IO_stdin_used@@Base+0x2db0>
  40e46e:	lea    rsi,[rip+0x8f73]        # 4173e8 <_IO_stdin_used@@Base+0x13e8>
  40e475:	lea    rdi,[rip+0x841b]        # 416897 <_IO_stdin_used@@Base+0x897>
  40e47c:	mov    edx,0x8c1
  40e481:	call   404090 <__assert_fail@plt>
  40e486:	nop    WORD PTR cs:[rax+rax*1+0x0]

000000000040e490 <test_nested_buffer_using_nest@@Base>:
  40e490:	push   r12
  40e492:	push   rbp
  40e493:	push   rbx
  40e494:	mov    rbx,rdi
  40e497:	sub    rsp,0x420
  40e49e:	mov    rax,QWORD PTR fs:0x28
  40e4a7:	mov    QWORD PTR [rsp+0x418],rax
  40e4af:	xor    eax,eax
  40e4b1:	call   40faf0 <flatcc_builder_reset@@Base>
  40e4b6:	lea    rsi,[rip+0x7c7e]        # 41613b <_IO_stdin_used@@Base+0x13b>
  40e4bd:	xor    ecx,ecx
  40e4bf:	xor    edx,edx
  40e4c1:	mov    rdi,rbx
  40e4c4:	call   410330 <flatcc_builder_start_buffer@@Base>
  40e4c9:	test   eax,eax
  40e4cb:	jne    40e4da <test_nested_buffer_using_nest@@Base+0x4a>
  40e4cd:	mov    esi,0x24
  40e4d2:	mov    rdi,rbx
  40e4d5:	call   410fa0 <flatcc_builder_start_table@@Base>
  40e4da:	lea    rsi,[rip+0x8378]        # 416859 <_IO_stdin_used@@Base+0x859>
  40e4e1:	mov    rdi,rbx
  40e4e4:	call   4126b0 <flatcc_builder_create_string_str@@Base>
  40e4e9:	test   eax,eax
  40e4eb:	mov    ebp,eax
  40e4ed:	je     40e503 <test_nested_buffer_using_nest@@Base+0x73>
  40e4ef:	mov    esi,0x3
  40e4f4:	mov    rdi,rbx
  40e4f7:	call   412a10 <flatcc_builder_table_add_offset@@Base>
  40e4fc:	test   rax,rax
  40e4ff:	je     40e503 <test_nested_buffer_using_nest@@Base+0x73>
  40e501:	mov    DWORD PTR [rax],ebp
  40e503:	mov    ecx,0x2
  40e508:	mov    edx,0x2
  40e50d:	mov    esi,0x1
  40e512:	mov    rdi,rbx
  40e515:	call   412840 <flatcc_builder_table_add@@Base>
  40e51a:	test   rax,rax
  40e51d:	je     40e527 <test_nested_buffer_using_nest@@Base+0x97>
  40e51f:	mov    ecx,0x2a
  40e524:	mov    WORD PTR [rax],cx
  40e527:	lea    rsi,[rip+0xb0c2]        # 4195f0 <_IO_stdin_used@@Base+0x35f0>
  40e52e:	mov    edx,0x1
  40e533:	mov    rdi,rbx
  40e536:	call   4118e0 <flatcc_builder_check_required@@Base>
  40e53b:	test   eax,eax
  40e53d:	je     40e898 <test_nested_buffer_using_nest@@Base+0x408>
  40e543:	mov    rdi,rbx
  40e546:	lea    rbp,[rsp+0x10]
  40e54b:	call   411960 <flatcc_builder_end_table@@Base>
  40e550:	mov    rdi,rbx
  40e553:	mov    esi,eax
  40e555:	call   410410 <flatcc_builder_end_buffer@@Base>
  40e55a:	mov    rdi,rbx
  40e55d:	call   412e10 <flatcc_builder_get_buffer_size@@Base>
  40e562:	mov    edx,0x400
  40e567:	mov    rsi,rbp
  40e56a:	mov    rdi,rbx
  40e56d:	mov    r12,rax
  40e570:	call   412f20 <flatcc_builder_copy_buffer@@Base>
  40e575:	test   rax,rax
  40e578:	je     40e87d <test_nested_buffer_using_nest@@Base+0x3ed>
  40e57e:	mov    rdi,rbx
  40e581:	call   40faf0 <flatcc_builder_reset@@Base>
  40e586:	lea    rsi,[rip+0x7bae]        # 41613b <_IO_stdin_used@@Base+0x13b>
  40e58d:	xor    ecx,ecx
  40e58f:	xor    edx,edx
  40e591:	mov    rdi,rbx
  40e594:	call   410330 <flatcc_builder_start_buffer@@Base>
  40e599:	test   eax,eax
  40e59b:	jne    40e5aa <test_nested_buffer_using_nest@@Base+0x11a>
  40e59d:	mov    esi,0x24
  40e5a2:	mov    rdi,rbx
  40e5a5:	call   410fa0 <flatcc_builder_start_table@@Base>
  40e5aa:	mov    rsi,rbp
  40e5ad:	mov    r9d,0xffffffff
  40e5b3:	mov    r8d,0x8
  40e5b9:	mov    ecx,0x1
  40e5be:	mov    rdx,r12
  40e5c1:	mov    rdi,rbx
  40e5c4:	call   411af0 <flatcc_builder_create_vector@@Base>
  40e5c9:	test   eax,eax
  40e5cb:	mov    ebp,eax
  40e5cd:	je     40e5e3 <test_nested_buffer_using_nest@@Base+0x153>
  40e5cf:	mov    esi,0xd
  40e5d4:	mov    rdi,rbx
  40e5d7:	call   412a10 <flatcc_builder_table_add_offset@@Base>
  40e5dc:	test   rax,rax
  40e5df:	je     40e5e3 <test_nested_buffer_using_nest@@Base+0x153>
  40e5e1:	mov    DWORD PTR [rax],ebp
  40e5e3:	mov    ecx,0x2
  40e5e8:	mov    edx,0x2
  40e5ed:	mov    esi,0x2
  40e5f2:	mov    rdi,rbx
  40e5f5:	call   412840 <flatcc_builder_table_add@@Base>
  40e5fa:	test   rax,rax
  40e5fd:	je     40e607 <test_nested_buffer_using_nest@@Base+0x177>
  40e5ff:	mov    edx,0xa
  40e604:	mov    WORD PTR [rax],dx
  40e607:	lea    rsi,[rip+0x7b45]        # 416153 <_IO_stdin_used@@Base+0x153>
  40e60e:	mov    rdi,rbx
  40e611:	call   4126b0 <flatcc_builder_create_string_str@@Base>
  40e616:	test   eax,eax
  40e618:	mov    ebp,eax
  40e61a:	je     40e630 <test_nested_buffer_using_nest@@Base+0x1a0>
  40e61c:	mov    esi,0x3
  40e621:	mov    rdi,rbx
  40e624:	call   412a10 <flatcc_builder_table_add_offset@@Base>
  40e629:	test   rax,rax
  40e62c:	je     40e630 <test_nested_buffer_using_nest@@Base+0x1a0>
  40e62e:	mov    DWORD PTR [rax],ebp
  40e630:	lea    rsi,[rip+0xafb9]        # 4195f0 <_IO_stdin_used@@Base+0x35f0>
  40e637:	mov    edx,0x1
  40e63c:	mov    rdi,rbx
  40e63f:	call   4118e0 <flatcc_builder_check_required@@Base>
  40e644:	test   eax,eax
  40e646:	je     40e898 <test_nested_buffer_using_nest@@Base+0x408>
  40e64c:	mov    rdi,rbx
  40e64f:	call   411960 <flatcc_builder_end_table@@Base>
  40e654:	mov    rdi,rbx
  40e657:	mov    esi,eax
  40e659:	call   410410 <flatcc_builder_end_buffer@@Base>
  40e65e:	lea    rsi,[rsp+0x8]
  40e663:	mov    rdi,rbx
  40e666:	call   412ed0 <flatcc_builder_get_direct_buffer@@Base>
  40e66b:	mov    rbx,rax
  40e66e:	mov    rax,QWORD PTR [rip+0x10983]        # 41eff8 <stderr@GLIBC_2.2.5>
  40e675:	mov    rdx,QWORD PTR [rsp+0x8]
  40e67a:	lea    rdi,[rip+0xa52f]        # 418bb0 <_IO_stdin_used@@Base+0x2bb0>
  40e681:	mov    rsi,rbx
  40e684:	mov    rcx,QWORD PTR [rax]
  40e687:	call   4049a0 <_start@@Base+0x150>
  40e68c:	test   rbx,rbx
  40e68f:	je     40e69a <test_nested_buffer_using_nest@@Base+0x20a>
  40e691:	cmp    DWORD PTR [rbx+0x4],0x534e4f4d
  40e698:	je     40e6a0 <test_nested_buffer_using_nest@@Base+0x210>
  40e69a:	call   40432a <posix_memalign@plt+0x1fa>
  40e69f:	nop
  40e6a0:	mov    eax,DWORD PTR [rbx]
  40e6a2:	add    rbx,rax
  40e6a5:	je     40e69a <test_nested_buffer_using_nest@@Base+0x20a>
  40e6a7:	movsxd rax,DWORD PTR [rbx]
  40e6aa:	mov    rcx,rbx
  40e6ad:	sub    rcx,rax
  40e6b0:	movzx  r8d,WORD PTR [rcx]
  40e6b4:	mov    rax,rcx
  40e6b7:	cmp    r8w,0xb
  40e6bc:	ja     40e6e0 <test_nested_buffer_using_nest@@Base+0x250>
  40e6be:	lea    rcx,[rip+0xab4b]        # 419210 <_IO_stdin_used@@Base+0x3210>
  40e6c5:	lea    rsi,[rip+0x830c]        # 4169d8 <_IO_stdin_used@@Base+0x9d8>
  40e6cc:	lea    rdi,[rip+0x846d]        # 416b40 <_IO_stdin_used@@Base+0xb40>
  40e6d3:	mov    edx,0x2bb
  40e6d8:	call   404090 <__assert_fail@plt>
  40e6dd:	nop    DWORD PTR [rax]
  40e6e0:	movzx  edx,WORD PTR [rcx+0xa]
  40e6e4:	test   dx,dx
  40e6e7:	je     40e6be <test_nested_buffer_using_nest@@Base+0x22e>
  40e6e9:	add    rdx,rbx
  40e6ec:	lea    rdi,[rip+0x7a60]        # 416153 <_IO_stdin_used@@Base+0x153>
  40e6f3:	mov    ecx,DWORD PTR [rdx]
  40e6f5:	lea    rsi,[rdx+rcx*1+0x4]
  40e6fa:	mov    ecx,0xa
  40e6ff:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  40e701:	jne    40e820 <test_nested_buffer_using_nest@@Base+0x390>
  40e707:	xor    edx,edx
  40e709:	cmp    r8w,0x1f
  40e70e:	jbe    40e73a <test_nested_buffer_using_nest@@Base+0x2aa>
  40e710:	movzx  ecx,WORD PTR [rax+0x1e]
  40e714:	test   cx,cx
  40e717:	je     40e73a <test_nested_buffer_using_nest@@Base+0x2aa>
  40e719:	movzx  edx,cx
  40e71c:	add    rdx,rbx
  40e71f:	mov    ecx,DWORD PTR [rdx]
  40e721:	lea    rdx,[rdx+rcx*1+0x4]
  40e726:	test   rdx,rdx
  40e729:	je     40e738 <test_nested_buffer_using_nest@@Base+0x2a8>
  40e72b:	cmp    DWORD PTR [rdx+0x4],0x534e4f4d
  40e732:	je     40e7f0 <test_nested_buffer_using_nest@@Base+0x360>
  40e738:	xor    edx,edx
  40e73a:	movzx  eax,WORD PTR [rax+0x8]
  40e73e:	test   ax,ax
  40e741:	je     40e802 <test_nested_buffer_using_nest@@Base+0x372>
  40e747:	nop    WORD PTR [rax+rax*1+0x0]
  40e750:	cmp    WORD PTR [rbx+rax*1],0xa
  40e755:	jne    40e802 <test_nested_buffer_using_nest@@Base+0x372>
  40e75b:	test   rdx,rdx
  40e75e:	je     40e69a <test_nested_buffer_using_nest@@Base+0x20a>
  40e764:	movsxd rax,DWORD PTR [rdx]
  40e767:	mov    r8,rdx
  40e76a:	sub    r8,rax
  40e76d:	cmp    WORD PTR [r8],0xb
  40e772:	jbe    40e6be <test_nested_buffer_using_nest@@Base+0x22e>
  40e778:	movzx  eax,WORD PTR [r8+0xa]
  40e77d:	test   ax,ax
  40e780:	je     40e6be <test_nested_buffer_using_nest@@Base+0x22e>
  40e786:	add    rax,rdx
  40e789:	mov    ecx,DWORD PTR [rax]
  40e78b:	lea    rsi,[rax+rcx*1+0x4]
  40e790:	test   rsi,rsi
  40e793:	je     40e8a2 <test_nested_buffer_using_nest@@Base+0x412>
  40e799:	lea    rdi,[rip+0x80b9]        # 416859 <_IO_stdin_used@@Base+0x859>
  40e7a0:	mov    ecx,0x10
  40e7a5:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  40e7a7:	seta   al
  40e7aa:	setb   cl
  40e7ad:	sub    eax,ecx
  40e7af:	movsx  eax,al
  40e7b2:	test   eax,eax
  40e7b4:	jne    40e860 <test_nested_buffer_using_nest@@Base+0x3d0>
  40e7ba:	movzx  ecx,WORD PTR [r8+0x6]
  40e7bf:	test   cx,cx
  40e7c2:	je     40e840 <test_nested_buffer_using_nest@@Base+0x3b0>
  40e7c4:	cmp    WORD PTR [rdx+rcx*1],0x2a
  40e7c9:	jne    40e840 <test_nested_buffer_using_nest@@Base+0x3b0>
  40e7cb:	mov    rcx,QWORD PTR [rsp+0x418]
  40e7d3:	xor    rcx,QWORD PTR fs:0x28
  40e7dc:	jne    40e89d <test_nested_buffer_using_nest@@Base+0x40d>
  40e7e2:	add    rsp,0x420
  40e7e9:	pop    rbx
  40e7ea:	pop    rbp
  40e7eb:	pop    r12
  40e7ed:	ret    
  40e7ee:	xchg   ax,ax
  40e7f0:	mov    ecx,DWORD PTR [rdx]
  40e7f2:	movzx  eax,WORD PTR [rax+0x8]
  40e7f6:	add    rdx,rcx
  40e7f9:	test   ax,ax
  40e7fc:	jne    40e750 <test_nested_buffer_using_nest@@Base+0x2c0>
  40e802:	lea    rsi,[rip+0xa37f]        # 418b88 <_IO_stdin_used@@Base+0x2b88>
  40e809:	mov    edi,0x1
  40e80e:	xor    eax,eax
  40e810:	call   404110 <__printf_chk@plt>
  40e815:	mov    eax,0xffffffff
  40e81a:	jmp    40e7cb <test_nested_buffer_using_nest@@Base+0x33b>
  40e81c:	nop    DWORD PTR [rax+0x0]
  40e820:	lea    rsi,[rip+0x8054]        # 41687b <_IO_stdin_used@@Base+0x87b>
  40e827:	mov    edi,0x1
  40e82c:	xor    eax,eax
  40e82e:	call   404110 <__printf_chk@plt>
  40e833:	mov    eax,0xffffffff
  40e838:	jmp    40e7cb <test_nested_buffer_using_nest@@Base+0x33b>
  40e83a:	nop    WORD PTR [rax+rax*1+0x0]
  40e840:	lea    rsi,[rip+0xa391]        # 418bd8 <_IO_stdin_used@@Base+0x2bd8>
  40e847:	mov    edi,0x1
  40e84c:	xor    eax,eax
  40e84e:	call   404110 <__printf_chk@plt>
  40e853:	mov    eax,0xffffffff
  40e858:	jmp    40e7cb <test_nested_buffer_using_nest@@Base+0x33b>
  40e85d:	nop    DWORD PTR [rax]
  40e860:	lea    rsi,[rip+0x8049]        # 4168b0 <_IO_stdin_used@@Base+0x8b0>
  40e867:	mov    edi,0x1
  40e86c:	xor    eax,eax
  40e86e:	call   404110 <__printf_chk@plt>
  40e873:	mov    eax,0xffffffff
  40e878:	jmp    40e7cb <test_nested_buffer_using_nest@@Base+0x33b>
  40e87d:	lea    rsi,[rip+0x804a]        # 4168ce <_IO_stdin_used@@Base+0x8ce>
  40e884:	mov    edi,0x1
  40e889:	call   404110 <__printf_chk@plt>
  40e88e:	mov    eax,0xffffffff
  40e893:	jmp    40e7cb <test_nested_buffer_using_nest@@Base+0x33b>
  40e898:	call   4045a4 <posix_memalign@plt+0x474>
  40e89d:	call   404070 <__stack_chk_fail@plt>
  40e8a2:	lea    rcx,[rip+0xa4e7]        # 418d90 <_IO_stdin_used@@Base+0x2d90>
  40e8a9:	lea    rsi,[rip+0x8b38]        # 4173e8 <_IO_stdin_used@@Base+0x13e8>
  40e8b0:	lea    rdi,[rip+0x7fe0]        # 416897 <_IO_stdin_used@@Base+0x897>
  40e8b7:	mov    edx,0x8fa
  40e8bc:	call   404090 <__assert_fail@plt>
  40e8c1:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40e8cc:	nop    DWORD PTR [rax+0x0]

000000000040e8d0 <verify_include@@Base>:
  40e8d0:	xor    eax,eax
  40e8d2:	ret    
  40e8d3:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40e8de:	xchg   ax,ax

000000000040e8e0 <test_struct_buffer@@Base>:
  40e8e0:	push   rbp
  40e8e1:	push   rbx
  40e8e2:	mov    rbp,rdi
  40e8e5:	sub    rsp,0x78
  40e8e9:	mov    rax,QWORD PTR fs:0x28
  40e8f2:	mov    QWORD PTR [rsp+0x68],rax
  40e8f7:	xor    eax,eax
  40e8f9:	call   40faf0 <flatcc_builder_reset@@Base>
  40e8fe:	mov    edx,0x10
  40e903:	mov    esi,0x20
  40e908:	mov    rdi,rbp
  40e90b:	call   410550 <flatcc_builder_start_struct@@Base>
  40e910:	xor    ecx,ecx
  40e912:	test   rax,rax
  40e915:	je     40e953 <test_struct_buffer@@Base+0x73>
  40e917:	vmovsd xmm1,QWORD PTR [rip+0xad11]        # 419630 <_IO_stdin_used@@Base+0x3630>
  40e91f:	mov    edx,0xaaa
  40e924:	mov    DWORD PTR [rax],0x3f800000
  40e92a:	mov    DWORD PTR [rax+0x4],0x40000000
  40e931:	mov    DWORD PTR [rax+0x8],0x40400000
  40e938:	mov    rdi,rbp
  40e93b:	vmovsd QWORD PTR [rax+0x10],xmm1
  40e940:	mov    BYTE PTR [rax+0x18],0x8
  40e944:	mov    WORD PTR [rax+0x1a],dx
  40e948:	mov    BYTE PTR [rax+0x1c],0xef
  40e94c:	call   410600 <flatcc_builder_end_struct@@Base>
  40e951:	mov    ecx,eax
  40e953:	lea    rsi,[rip+0x77e1]        # 41613b <_IO_stdin_used@@Base+0x13b>
  40e95a:	xor    r9d,r9d
  40e95d:	xor    edx,edx
  40e95f:	mov    r8d,0x10
  40e965:	mov    rdi,rbp
  40e968:	call   40ff50 <flatcc_builder_create_buffer@@Base>
  40e96d:	mov    rdi,rbp
  40e970:	call   412e10 <flatcc_builder_get_buffer_size@@Base>
  40e975:	cmp    rax,0x30
  40e979:	jne    40ead9 <test_struct_buffer@@Base+0x1f9>
  40e97f:	lea    rsi,[rip+0x7f6e]        # 4168f4 <_IO_stdin_used@@Base+0x8f4>
  40e986:	mov    edx,0x30
  40e98b:	mov    edi,0x1
  40e990:	xor    eax,eax
  40e992:	call   404110 <__printf_chk@plt>
  40e997:	mov    rdi,rbp
  40e99a:	call   413160 <flatcc_builder_get_emit_context@@Base>
  40e99f:	cmp    QWORD PTR [rax+0x30],0x30
  40e9a4:	jne    40eaba <test_struct_buffer@@Base+0x1da>
  40e9aa:	mov    edx,0x64
  40e9af:	mov    rsi,rsp
  40e9b2:	mov    rdi,rbp
  40e9b5:	call   412f20 <flatcc_builder_copy_buffer@@Base>
  40e9ba:	test   rax,rax
  40e9bd:	je     40ea9a <test_struct_buffer@@Base+0x1ba>
  40e9c3:	mov    rax,QWORD PTR [rip+0x1062e]        # 41eff8 <stderr@GLIBC_2.2.5>
  40e9ca:	lea    rdi,[rip+0x7f71]        # 416942 <_IO_stdin_used@@Base+0x942>
  40e9d1:	mov    edx,0x30
  40e9d6:	mov    rsi,rsp
  40e9d9:	mov    rcx,QWORD PTR [rax]
  40e9dc:	call   4049a0 <_start@@Base+0x150>
  40e9e1:	cmp    DWORD PTR [rsp+0x4],0x534e4f4d
  40e9e9:	je     40ea20 <test_struct_buffer@@Base+0x140>
  40e9eb:	lea    rsi,[rip+0xa25e]        # 418c50 <_IO_stdin_used@@Base+0x2c50>
  40e9f2:	mov    edi,0x1
  40e9f7:	xor    eax,eax
  40e9f9:	call   404110 <__printf_chk@plt>
  40e9fe:	mov    eax,0xffffffff
  40ea03:	mov    rbx,QWORD PTR [rsp+0x68]
  40ea08:	xor    rbx,QWORD PTR fs:0x28
  40ea11:	jne    40eab5 <test_struct_buffer@@Base+0x1d5>
  40ea17:	add    rsp,0x78
  40ea1b:	pop    rbx
  40ea1c:	pop    rbp
  40ea1d:	ret    
  40ea1e:	xchg   ax,ax
  40ea20:	mov    esi,DWORD PTR [rsp]
  40ea23:	vmovss xmm0,DWORD PTR [rip+0xac15]        # 419640 <_IO_stdin_used@@Base+0x3640>
  40ea2b:	add    rsi,rsp
  40ea2e:	vucomiss xmm0,DWORD PTR [rsi]
  40ea32:	jp     40ea7d <test_struct_buffer@@Base+0x19d>
  40ea34:	jne    40ea7d <test_struct_buffer@@Base+0x19d>
  40ea36:	vmovss xmm0,DWORD PTR [rsi+0x4]
  40ea3b:	vucomiss xmm0,DWORD PTR [rip+0xac01]        # 419644 <_IO_stdin_used@@Base+0x3644>
  40ea43:	jp     40ea7d <test_struct_buffer@@Base+0x19d>
  40ea45:	jne    40ea7d <test_struct_buffer@@Base+0x19d>
  40ea47:	vmovss xmm0,DWORD PTR [rsi+0x8]
  40ea4c:	vucomiss xmm0,DWORD PTR [rip+0xabf8]        # 41964c <_IO_stdin_used@@Base+0x364c>
  40ea54:	jp     40ea7d <test_struct_buffer@@Base+0x19d>
  40ea56:	jne    40ea7d <test_struct_buffer@@Base+0x19d>
  40ea58:	vmovsd xmm0,QWORD PTR [rip+0xabd0]        # 419630 <_IO_stdin_used@@Base+0x3630>
  40ea60:	vucomisd xmm0,QWORD PTR [rsi+0x10]
  40ea65:	jp     40ea7d <test_struct_buffer@@Base+0x19d>
  40ea67:	jne    40ea7d <test_struct_buffer@@Base+0x19d>
  40ea69:	mov    eax,DWORD PTR [rsi+0x18]
  40ea6c:	xor    ah,ah
  40ea6e:	cmp    eax,0xaaa0008
  40ea73:	jne    40ea7d <test_struct_buffer@@Base+0x19d>
  40ea75:	xor    eax,eax
  40ea77:	cmp    BYTE PTR [rsi+0x1c],0xef
  40ea7b:	je     40ea03 <test_struct_buffer@@Base+0x123>
  40ea7d:	lea    rsi,[rip+0x7e9a]        # 41691e <_IO_stdin_used@@Base+0x91e>
  40ea84:	mov    edi,0x1
  40ea89:	xor    eax,eax
  40ea8b:	call   404110 <__printf_chk@plt>
  40ea90:	mov    eax,0xffffffff
  40ea95:	jmp    40ea03 <test_struct_buffer@@Base+0x123>
  40ea9a:	lea    rsi,[rip+0x7e70]        # 416911 <_IO_stdin_used@@Base+0x911>
  40eaa1:	mov    edi,0x1
  40eaa6:	call   404110 <__printf_chk@plt>
  40eaab:	mov    eax,0xffffffff
  40eab0:	jmp    40ea03 <test_struct_buffer@@Base+0x123>
  40eab5:	call   404070 <__stack_chk_fail@plt>
  40eaba:	lea    rcx,[rip+0xa2af]        # 418d70 <_IO_stdin_used@@Base+0x2d70>
  40eac1:	lea    rsi,[rip+0x8920]        # 4173e8 <_IO_stdin_used@@Base+0x13e8>
  40eac8:	lea    rdi,[rip+0xa131]        # 418c00 <_IO_stdin_used@@Base+0x2c00>
  40eacf:	mov    edx,0x925
  40ead4:	call   404090 <__assert_fail@plt>
  40ead9:	lea    rcx,[rip+0xa290]        # 418d70 <_IO_stdin_used@@Base+0x2d70>
  40eae0:	lea    rsi,[rip+0x8901]        # 4173e8 <_IO_stdin_used@@Base+0x13e8>
  40eae7:	lea    rdi,[rip+0x7dfb]        # 4168e9 <_IO_stdin_used@@Base+0x8e9>
  40eaee:	mov    edx,0x923
  40eaf3:	call   404090 <__assert_fail@plt>
  40eaf8:	nop    DWORD PTR [rax+rax*1+0x0]

000000000040eb00 <test_typed_struct_buffer@@Base>:
  40eb00:	push   rbp
  40eb01:	push   rbx
  40eb02:	mov    rbx,rdi
  40eb05:	sub    rsp,0x78
  40eb09:	mov    rax,QWORD PTR fs:0x28
  40eb12:	mov    QWORD PTR [rsp+0x68],rax
  40eb17:	xor    eax,eax
  40eb19:	call   40faf0 <flatcc_builder_reset@@Base>
  40eb1e:	mov    edx,0x10
  40eb23:	mov    esi,0x20
  40eb28:	mov    rdi,rbx
  40eb2b:	call   410550 <flatcc_builder_start_struct@@Base>
  40eb30:	xor    ecx,ecx
  40eb32:	test   rax,rax
  40eb35:	je     40eb73 <test_typed_struct_buffer@@Base+0x73>
  40eb37:	vmovsd xmm1,QWORD PTR [rip+0xaaf1]        # 419630 <_IO_stdin_used@@Base+0x3630>
  40eb3f:	mov    edx,0xaaa
  40eb44:	mov    DWORD PTR [rax],0x3f800000
  40eb4a:	mov    DWORD PTR [rax+0x4],0x40000000
  40eb51:	mov    DWORD PTR [rax+0x8],0x40400000
  40eb58:	mov    rdi,rbx
  40eb5b:	vmovsd QWORD PTR [rax+0x10],xmm1
  40eb60:	mov    BYTE PTR [rax+0x18],0x8
  40eb64:	mov    WORD PTR [rax+0x1a],dx
  40eb68:	mov    BYTE PTR [rax+0x1c],0xef
  40eb6c:	call   410600 <flatcc_builder_end_struct@@Base>
  40eb71:	mov    ecx,eax
  40eb73:	lea    rsi,[rip+0x7dbd]        # 416937 <_IO_stdin_used@@Base+0x937>
  40eb7a:	xor    r9d,r9d
  40eb7d:	xor    edx,edx
  40eb7f:	mov    r8d,0x10
  40eb85:	mov    rdi,rbx
  40eb88:	call   40ff50 <flatcc_builder_create_buffer@@Base>
  40eb8d:	mov    rdi,rbx
  40eb90:	call   412e10 <flatcc_builder_get_buffer_size@@Base>
  40eb95:	cmp    rax,0x30
  40eb99:	jne    40edbd <test_typed_struct_buffer@@Base+0x2bd>
  40eb9f:	lea    rsi,[rip+0x7d4e]        # 4168f4 <_IO_stdin_used@@Base+0x8f4>
  40eba6:	mov    edx,0x30
  40ebab:	mov    edi,0x1
  40ebb0:	xor    eax,eax
  40ebb2:	call   404110 <__printf_chk@plt>
  40ebb7:	mov    rdi,rbx
  40ebba:	call   413160 <flatcc_builder_get_emit_context@@Base>
  40ebbf:	cmp    QWORD PTR [rax+0x30],0x30
  40ebc4:	jne    40ede1 <test_typed_struct_buffer@@Base+0x2e1>
  40ebca:	mov    edx,0x64
  40ebcf:	mov    rsi,rsp
  40ebd2:	mov    rdi,rbx
  40ebd5:	call   412f20 <flatcc_builder_copy_buffer@@Base>
  40ebda:	test   rax,rax
  40ebdd:	mov    rbp,rsp
  40ebe0:	je     40ed85 <test_typed_struct_buffer@@Base+0x285>
  40ebe6:	mov    rax,QWORD PTR [rip+0x1040b]        # 41eff8 <stderr@GLIBC_2.2.5>
  40ebed:	lea    rdi,[rip+0x7d48]        # 41693c <_IO_stdin_used@@Base+0x93c>
  40ebf4:	mov    edx,0x30
  40ebf9:	mov    rsi,rsp
  40ebfc:	mov    rcx,QWORD PTR [rax]
  40ebff:	call   4049a0 <_start@@Base+0x150>
  40ec04:	cmp    DWORD PTR [rsp+0x4],0xa8f53ed2
  40ec0c:	je     40ec48 <test_typed_struct_buffer@@Base+0x148>
  40ec0e:	lea    rsi,[rip+0xa03b]        # 418c50 <_IO_stdin_used@@Base+0x2c50>
  40ec15:	mov    edi,0x1
  40ec1a:	xor    eax,eax
  40ec1c:	call   404110 <__printf_chk@plt>
  40ec21:	mov    eax,0xffffffff
  40ec26:	mov    rcx,QWORD PTR [rsp+0x68]
  40ec2b:	xor    rcx,QWORD PTR fs:0x28
  40ec34:	jne    40eddc <test_typed_struct_buffer@@Base+0x2dc>
  40ec3a:	add    rsp,0x78
  40ec3e:	pop    rbx
  40ec3f:	pop    rbp
  40ec40:	ret    
  40ec41:	nop    DWORD PTR [rax+0x0]
  40ec48:	mov    eax,DWORD PTR [rsp]
  40ec4b:	add    rax,rsp
  40ec4e:	je     40eda0 <test_typed_struct_buffer@@Base+0x2a0>
  40ec54:	mov    r8d,0x10
  40ec5a:	mov    ecx,0x20
  40ec5f:	mov    edx,0xa8f53ed2
  40ec64:	mov    esi,0x30
  40ec69:	mov    rdi,rbp
  40ec6c:	call   414680 <flatcc_verify_struct_as_typed_root@@Base>
  40ec71:	test   eax,eax
  40ec73:	jne    40ed48 <test_typed_struct_buffer@@Base+0x248>
  40ec79:	cmp    DWORD PTR [rsp+0x4],0xa8f53ed2
  40ec81:	je     40eca0 <test_typed_struct_buffer@@Base+0x1a0>
  40ec83:	lea    rsi,[rip+0x7ccb]        # 416955 <_IO_stdin_used@@Base+0x955>
  40ec8a:	mov    edi,0x1
  40ec8f:	xor    eax,eax
  40ec91:	call   404110 <__printf_chk@plt>
  40ec96:	mov    eax,0xffffffff
  40ec9b:	jmp    40ec26 <test_typed_struct_buffer@@Base+0x126>
  40ec9d:	nop    DWORD PTR [rax]
  40eca0:	mov    ebx,DWORD PTR [rsp]
  40eca3:	add    rbx,rbp
  40eca6:	je     40ec83 <test_typed_struct_buffer@@Base+0x183>
  40eca8:	mov    r8d,0x10
  40ecae:	mov    ecx,0x20
  40ecb3:	mov    edx,0xa8f53ed2
  40ecb8:	mov    esi,0x30
  40ecbd:	mov    rdi,rbp
  40ecc0:	call   414680 <flatcc_verify_struct_as_typed_root@@Base>
  40ecc5:	test   eax,eax
  40ecc7:	jne    40ed68 <test_typed_struct_buffer@@Base+0x268>
  40eccd:	vmovss xmm0,DWORD PTR [rip+0xa96b]        # 419640 <_IO_stdin_used@@Base+0x3640>
  40ecd5:	vucomiss xmm0,DWORD PTR [rbx]
  40ecd9:	jp     40ed27 <test_typed_struct_buffer@@Base+0x227>
  40ecdb:	jne    40ed27 <test_typed_struct_buffer@@Base+0x227>
  40ecdd:	vmovss xmm0,DWORD PTR [rbx+0x4]
  40ece2:	vucomiss xmm0,DWORD PTR [rip+0xa95a]        # 419644 <_IO_stdin_used@@Base+0x3644>
  40ecea:	jp     40ed27 <test_typed_struct_buffer@@Base+0x227>
  40ecec:	jne    40ed27 <test_typed_struct_buffer@@Base+0x227>
  40ecee:	vmovss xmm0,DWORD PTR [rbx+0x8]
  40ecf3:	vucomiss xmm0,DWORD PTR [rip+0xa951]        # 41964c <_IO_stdin_used@@Base+0x364c>
  40ecfb:	jp     40ed27 <test_typed_struct_buffer@@Base+0x227>
  40ecfd:	jne    40ed27 <test_typed_struct_buffer@@Base+0x227>
  40ecff:	vmovsd xmm0,QWORD PTR [rip+0xa929]        # 419630 <_IO_stdin_used@@Base+0x3630>
  40ed07:	vucomisd xmm0,QWORD PTR [rbx+0x10]
  40ed0c:	jp     40ed27 <test_typed_struct_buffer@@Base+0x227>
  40ed0e:	jne    40ed27 <test_typed_struct_buffer@@Base+0x227>
  40ed10:	mov    edx,DWORD PTR [rbx+0x18]
  40ed13:	xor    dh,dh
  40ed15:	cmp    edx,0xaaa0008
  40ed1b:	jne    40ed27 <test_typed_struct_buffer@@Base+0x227>
  40ed1d:	cmp    BYTE PTR [rbx+0x1c],0xef
  40ed21:	je     40ec26 <test_typed_struct_buffer@@Base+0x126>
  40ed27:	lea    rsi,[rip+0x7bf0]        # 41691e <_IO_stdin_used@@Base+0x91e>
  40ed2e:	mov    edi,0x1
  40ed33:	xor    eax,eax
  40ed35:	call   404110 <__printf_chk@plt>
  40ed3a:	mov    eax,0xffffffff
  40ed3f:	jmp    40ec26 <test_typed_struct_buffer@@Base+0x126>
  40ed44:	nop    DWORD PTR [rax+0x0]
  40ed48:	lea    rsi,[rip+0x9f59]        # 418ca8 <_IO_stdin_used@@Base+0x2ca8>
  40ed4f:	mov    edi,0x1
  40ed54:	xor    eax,eax
  40ed56:	call   404110 <__printf_chk@plt>
  40ed5b:	mov    eax,0xffffffff
  40ed60:	jmp    40ec26 <test_typed_struct_buffer@@Base+0x126>
  40ed65:	nop    DWORD PTR [rax]
  40ed68:	lea    rsi,[rip+0x9f61]        # 418cd0 <_IO_stdin_used@@Base+0x2cd0>
  40ed6f:	mov    edi,0x1
  40ed74:	xor    eax,eax
  40ed76:	call   404110 <__printf_chk@plt>
  40ed7b:	mov    eax,0xffffffff
  40ed80:	jmp    40ec26 <test_typed_struct_buffer@@Base+0x126>
  40ed85:	lea    rsi,[rip+0x7b85]        # 416911 <_IO_stdin_used@@Base+0x911>
  40ed8c:	mov    edi,0x1
  40ed91:	call   404110 <__printf_chk@plt>
  40ed96:	mov    eax,0xffffffff
  40ed9b:	jmp    40ec26 <test_typed_struct_buffer@@Base+0x126>
  40eda0:	lea    rsi,[rip+0x9ed1]        # 418c78 <_IO_stdin_used@@Base+0x2c78>
  40eda7:	mov    edi,0x1
  40edac:	xor    eax,eax
  40edae:	call   404110 <__printf_chk@plt>
  40edb3:	mov    eax,0xffffffff
  40edb8:	jmp    40ec26 <test_typed_struct_buffer@@Base+0x126>
  40edbd:	lea    rcx,[rip+0x9f8c]        # 418d50 <_IO_stdin_used@@Base+0x2d50>
  40edc4:	lea    rsi,[rip+0x861d]        # 4173e8 <_IO_stdin_used@@Base+0x13e8>
  40edcb:	lea    rdi,[rip+0x7b17]        # 4168e9 <_IO_stdin_used@@Base+0x8e9>
  40edd2:	mov    edx,0x954
  40edd7:	call   404090 <__assert_fail@plt>
  40eddc:	call   404070 <__stack_chk_fail@plt>
  40ede1:	lea    rcx,[rip+0x9f68]        # 418d50 <_IO_stdin_used@@Base+0x2d50>
  40ede8:	lea    rsi,[rip+0x85f9]        # 4173e8 <_IO_stdin_used@@Base+0x13e8>
  40edef:	lea    rdi,[rip+0x9e0a]        # 418c00 <_IO_stdin_used@@Base+0x2c00>
  40edf6:	mov    edx,0x956
  40edfb:	call   404090 <__assert_fail@plt>

000000000040ee00 <gen_monster_benchmark@@Base>:
  40ee00:	push   rbp
  40ee01:	push   rbx
  40ee02:	mov    rbx,rdi
  40ee05:	sub    rsp,0x28
  40ee09:	mov    rax,QWORD PTR fs:0x28
  40ee12:	mov    QWORD PTR [rsp+0x18],rax
  40ee17:	xor    eax,eax
  40ee19:	mov    BYTE PTR [rsp+0xe],0x0
  40ee1e:	mov    BYTE PTR [rsp+0xf],0x1
  40ee23:	mov    BYTE PTR [rsp+0x10],0x2
  40ee28:	mov    BYTE PTR [rsp+0x11],0x3
  40ee2d:	mov    BYTE PTR [rsp+0x12],0x4
  40ee32:	mov    BYTE PTR [rsp+0x13],0x5
  40ee37:	mov    BYTE PTR [rsp+0x14],0x6
  40ee3c:	mov    BYTE PTR [rsp+0x15],0x7
  40ee41:	mov    BYTE PTR [rsp+0x16],0x8
  40ee46:	mov    BYTE PTR [rsp+0x17],0x9
  40ee4b:	call   40faf0 <flatcc_builder_reset@@Base>
  40ee50:	lea    rsi,[rip+0x72e4]        # 41613b <_IO_stdin_used@@Base+0x13b>
  40ee57:	xor    ecx,ecx
  40ee59:	xor    edx,edx
  40ee5b:	mov    rdi,rbx
  40ee5e:	call   410330 <flatcc_builder_start_buffer@@Base>
  40ee63:	test   eax,eax
  40ee65:	jne    40ee74 <gen_monster_benchmark@@Base+0x74>
  40ee67:	mov    esi,0x24
  40ee6c:	mov    rdi,rbx
  40ee6f:	call   410fa0 <flatcc_builder_start_table@@Base>
  40ee74:	mov    ecx,0x2
  40ee79:	mov    edx,0x2
  40ee7e:	mov    esi,0x2
  40ee83:	mov    rdi,rbx
  40ee86:	call   412840 <flatcc_builder_table_add@@Base>
  40ee8b:	test   rax,rax
  40ee8e:	je     40ee9a <gen_monster_benchmark@@Base+0x9a>
  40ee90:	mov    r8d,0x50
  40ee96:	mov    WORD PTR [rax],r8w
  40ee9a:	xor    esi,esi
  40ee9c:	mov    ecx,0x10
  40eea1:	mov    edx,0x20
  40eea6:	mov    rdi,rbx
  40eea9:	call   412840 <flatcc_builder_table_add@@Base>
  40eeae:	lea    rsi,[rip+0x729e]        # 416153 <_IO_stdin_used@@Base+0x153>
  40eeb5:	mov    DWORD PTR [rax],0x3f800000
  40eebb:	mov    DWORD PTR [rax+0x4],0x40000000
  40eec2:	mov    DWORD PTR [rax+0x8],0xc04ccccd
  40eec9:	mov    rdi,rbx
  40eecc:	call   4126b0 <flatcc_builder_create_string_str@@Base>
  40eed1:	test   eax,eax
  40eed3:	mov    ebp,eax
  40eed5:	je     40eeeb <gen_monster_benchmark@@Base+0xeb>
  40eed7:	mov    esi,0x3
  40eedc:	mov    rdi,rbx
  40eedf:	call   412a10 <flatcc_builder_table_add_offset@@Base>
  40eee4:	test   rax,rax
  40eee7:	je     40eeeb <gen_monster_benchmark@@Base+0xeb>
  40eee9:	mov    DWORD PTR [rax],ebp
  40eeeb:	lea    rsi,[rsp+0xe]
  40eef0:	mov    r9d,0xffffffff
  40eef6:	mov    r8d,0x1
  40eefc:	mov    ecx,0x1
  40ef01:	mov    edx,0xa
  40ef06:	mov    rdi,rbx
  40ef09:	call   411af0 <flatcc_builder_create_vector@@Base>
  40ef0e:	test   eax,eax
  40ef10:	mov    ebp,eax
  40ef12:	je     40ef28 <gen_monster_benchmark@@Base+0x128>
  40ef14:	mov    esi,0x5
  40ef19:	mov    rdi,rbx
  40ef1c:	call   412a10 <flatcc_builder_table_add_offset@@Base>
  40ef21:	test   rax,rax
  40ef24:	je     40ef28 <gen_monster_benchmark@@Base+0x128>
  40ef26:	mov    DWORD PTR [rax],ebp
  40ef28:	mov    edx,0x2
  40ef2d:	mov    ecx,0x3fffffff
  40ef32:	mov    esi,0x4
  40ef37:	mov    rdi,rbx
  40ef3a:	call   410d80 <flatcc_builder_start_vector@@Base>
  40ef3f:	mov    esi,0x1
  40ef44:	mov    rdi,rbx
  40ef47:	call   4106e0 <flatcc_builder_extend_vector@@Base>
  40ef4c:	mov    ecx,0x10
  40ef51:	mov    esi,0x2
  40ef56:	mov    rdi,rbx
  40ef59:	mov    WORD PTR [rax],cx
  40ef5c:	mov    BYTE PTR [rax+0x2],0x20
  40ef60:	call   4106e0 <flatcc_builder_extend_vector@@Base>
  40ef65:	mov    esi,0x30
  40ef6a:	mov    edi,0x50
  40ef6f:	mov    BYTE PTR [rax+0x2],0x40
  40ef73:	mov    WORD PTR [rax],si
  40ef76:	mov    WORD PTR [rax+0x4],di
  40ef7a:	mov    esi,0x1
  40ef7f:	mov    BYTE PTR [rax+0x6],0x60
  40ef83:	mov    rdi,rbx
  40ef86:	call   4106e0 <flatcc_builder_extend_vector@@Base>
  40ef8b:	test   rax,rax
  40ef8e:	je     40ef9c <gen_monster_benchmark@@Base+0x19c>
  40ef90:	mov    edx,0x70
  40ef95:	mov    BYTE PTR [rax+0x2],0x80
  40ef99:	mov    WORD PTR [rax],dx
  40ef9c:	mov    esi,0x1
  40efa1:	mov    rdi,rbx
  40efa4:	call   4106e0 <flatcc_builder_extend_vector@@Base>
  40efa9:	test   rax,rax
  40efac:	je     40efb4 <gen_monster_benchmark@@Base+0x1b4>
  40efae:	mov    DWORD PTR [rax],0x910191
  40efb4:	mov    rdi,rbx
  40efb7:	call   411c80 <flatcc_builder_end_vector@@Base>
  40efbc:	test   eax,eax
  40efbe:	mov    ebp,eax
  40efc0:	je     40efd6 <gen_monster_benchmark@@Base+0x1d6>
  40efc2:	mov    esi,0x9
  40efc7:	mov    rdi,rbx
  40efca:	call   412a10 <flatcc_builder_table_add_offset@@Base>
  40efcf:	test   rax,rax
  40efd2:	je     40efd6 <gen_monster_benchmark@@Base+0x1d6>
  40efd4:	mov    DWORD PTR [rax],ebp
  40efd6:	lea    rsi,[rip+0xa613]        # 4195f0 <_IO_stdin_used@@Base+0x35f0>
  40efdd:	mov    edx,0x1
  40efe2:	mov    rdi,rbx
  40efe5:	call   4118e0 <flatcc_builder_check_required@@Base>
  40efea:	test   eax,eax
  40efec:	je     40f019 <gen_monster_benchmark@@Base+0x219>
  40efee:	mov    rdi,rbx
  40eff1:	call   411960 <flatcc_builder_end_table@@Base>
  40eff6:	mov    rdi,rbx
  40eff9:	mov    esi,eax
  40effb:	call   410410 <flatcc_builder_end_buffer@@Base>
  40f000:	xor    eax,eax
  40f002:	mov    rcx,QWORD PTR [rsp+0x18]
  40f007:	xor    rcx,QWORD PTR fs:0x28
  40f010:	jne    40f01e <gen_monster_benchmark@@Base+0x21e>
  40f012:	add    rsp,0x28
  40f016:	pop    rbx
  40f017:	pop    rbp
  40f018:	ret    
  40f019:	call   4045a4 <posix_memalign@plt+0x474>
  40f01e:	call   404070 <__stack_chk_fail@plt>
  40f023:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40f02e:	xchg   ax,ax

000000000040f030 <time_monster@@Base>:
  40f030:	push   rbp
  40f031:	push   rbx
  40f032:	lea    rsi,[rip+0x793a]        # 416973 <_IO_stdin_used@@Base+0x973>
  40f039:	mov    rbp,rdi
  40f03c:	xor    eax,eax
  40f03e:	mov    edi,0x1
  40f043:	sub    rsp,0x18
  40f047:	mov    ebx,0xf4240
  40f04c:	call   404110 <__printf_chk@plt>
  40f051:	call   404b20 <_start@@Base+0x2d0>
  40f056:	vmovsd QWORD PTR [rsp+0x8],xmm0
  40f05c:	nop    DWORD PTR [rax+0x0]
  40f060:	mov    rdi,rbp
  40f063:	call   40ee00 <gen_monster_benchmark@@Base>
  40f068:	sub    ebx,0x1
  40f06b:	jne    40f060 <time_monster@@Base+0x30>
  40f06d:	mov    rdi,rbp
  40f070:	call   412e10 <flatcc_builder_get_buffer_size@@Base>
  40f075:	mov    rbx,rax
  40f078:	call   404b20 <_start@@Base+0x2d0>
  40f07d:	lea    rdi,[rip+0x7901]        # 416985 <_IO_stdin_used@@Base+0x985>
  40f084:	vmovapd xmm1,xmm0
  40f088:	vmovsd xmm0,QWORD PTR [rsp+0x8]
  40f08e:	mov    rsi,rbx
  40f091:	call   4056d0 <_start@@Base+0xe80>
  40f096:	add    rsp,0x18
  40f09a:	xor    eax,eax
  40f09c:	pop    rbx
  40f09d:	pop    rbp
  40f09e:	ret    
  40f09f:	nop

000000000040f0a0 <gen_struct_buffer_benchmark@@Base>:
  40f0a0:	push   rbx
  40f0a1:	mov    rbx,rdi
  40f0a4:	call   40faf0 <flatcc_builder_reset@@Base>
  40f0a9:	mov    edx,0x10
  40f0ae:	mov    esi,0x20
  40f0b3:	mov    rdi,rbx
  40f0b6:	call   410550 <flatcc_builder_start_struct@@Base>
  40f0bb:	xor    ecx,ecx
  40f0bd:	test   rax,rax
  40f0c0:	je     40f0fe <gen_struct_buffer_benchmark@@Base+0x5e>
  40f0c2:	vmovsd xmm1,QWORD PTR [rip+0xa566]        # 419630 <_IO_stdin_used@@Base+0x3630>
  40f0ca:	mov    edx,0xaaa
  40f0cf:	mov    DWORD PTR [rax],0x3f800000
  40f0d5:	mov    DWORD PTR [rax+0x4],0x40000000
  40f0dc:	mov    DWORD PTR [rax+0x8],0x40400000
  40f0e3:	mov    rdi,rbx
  40f0e6:	vmovsd QWORD PTR [rax+0x10],xmm1
  40f0eb:	mov    BYTE PTR [rax+0x18],0x8
  40f0ef:	mov    WORD PTR [rax+0x1a],dx
  40f0f3:	mov    BYTE PTR [rax+0x1c],0xef
  40f0f7:	call   410600 <flatcc_builder_end_struct@@Base>
  40f0fc:	mov    ecx,eax
  40f0fe:	lea    rsi,[rip+0x7036]        # 41613b <_IO_stdin_used@@Base+0x13b>
  40f105:	xor    r9d,r9d
  40f108:	xor    edx,edx
  40f10a:	mov    r8d,0x10
  40f110:	mov    rdi,rbx
  40f113:	call   40ff50 <flatcc_builder_create_buffer@@Base>
  40f118:	xor    esi,esi
  40f11a:	mov    rdi,rbx
  40f11d:	call   412ed0 <flatcc_builder_get_direct_buffer@@Base>
  40f122:	test   rax,rax
  40f125:	je     40f190 <gen_struct_buffer_benchmark@@Base+0xf0>
  40f127:	mov    edx,DWORD PTR [rax]
  40f129:	vmovss xmm0,DWORD PTR [rip+0xa50f]        # 419640 <_IO_stdin_used@@Base+0x3640>
  40f131:	add    rdx,rax
  40f134:	vucomiss xmm0,DWORD PTR [rdx]
  40f138:	jp     40f190 <gen_struct_buffer_benchmark@@Base+0xf0>
  40f13a:	jne    40f190 <gen_struct_buffer_benchmark@@Base+0xf0>
  40f13c:	vmovss xmm0,DWORD PTR [rdx+0x4]
  40f141:	vucomiss xmm0,DWORD PTR [rip+0xa4fb]        # 419644 <_IO_stdin_used@@Base+0x3644>
  40f149:	jp     40f190 <gen_struct_buffer_benchmark@@Base+0xf0>
  40f14b:	jne    40f190 <gen_struct_buffer_benchmark@@Base+0xf0>
  40f14d:	vmovss xmm0,DWORD PTR [rdx+0x8]
  40f152:	vucomiss xmm0,DWORD PTR [rip+0xa4f2]        # 41964c <_IO_stdin_used@@Base+0x364c>
  40f15a:	jp     40f190 <gen_struct_buffer_benchmark@@Base+0xf0>
  40f15c:	jne    40f190 <gen_struct_buffer_benchmark@@Base+0xf0>
  40f15e:	vmovsd xmm0,QWORD PTR [rip+0xa4ca]        # 419630 <_IO_stdin_used@@Base+0x3630>
  40f166:	vucomisd xmm0,QWORD PTR [rdx+0x10]
  40f16b:	jp     40f190 <gen_struct_buffer_benchmark@@Base+0xf0>
  40f16d:	jne    40f190 <gen_struct_buffer_benchmark@@Base+0xf0>
  40f16f:	mov    ecx,DWORD PTR [rdx+0x18]
  40f172:	mov    eax,0xffffffff
  40f177:	xor    ch,ch
  40f179:	cmp    ecx,0xaaa0008
  40f17f:	jne    40f18c <gen_struct_buffer_benchmark@@Base+0xec>
  40f181:	xor    eax,eax
  40f183:	cmp    BYTE PTR [rdx+0x1c],0xef
  40f187:	setne  al
  40f18a:	neg    eax
  40f18c:	pop    rbx
  40f18d:	ret    
  40f18e:	xchg   ax,ax
  40f190:	mov    eax,0xffffffff
  40f195:	pop    rbx
  40f196:	ret    
  40f197:	nop    WORD PTR [rax+rax*1+0x0]

000000000040f1a0 <time_struct_buffer@@Base>:
  40f1a0:	push   r12
  40f1a2:	push   rbp
  40f1a3:	lea    rsi,[rip+0x77c9]        # 416973 <_IO_stdin_used@@Base+0x973>
  40f1aa:	push   rbx
  40f1ab:	mov    r12,rdi
  40f1ae:	xor    eax,eax
  40f1b0:	mov    edi,0x1
  40f1b5:	mov    ebx,0xf4240
  40f1ba:	xor    ebp,ebp
  40f1bc:	sub    rsp,0x10
  40f1c0:	call   404110 <__printf_chk@plt>
  40f1c5:	call   404b20 <_start@@Base+0x2d0>
  40f1ca:	vmovsd QWORD PTR [rsp],xmm0
  40f1cf:	nop
  40f1d0:	mov    rdi,r12
  40f1d3:	call   40f0a0 <gen_struct_buffer_benchmark@@Base>
  40f1d8:	or     ebp,eax
  40f1da:	sub    ebx,0x1
  40f1dd:	jne    40f1d0 <time_struct_buffer@@Base+0x30>
  40f1df:	call   404b20 <_start@@Base+0x2d0>
  40f1e4:	mov    rdi,r12
  40f1e7:	vmovsd QWORD PTR [rsp+0x8],xmm0
  40f1ed:	call   412e10 <flatcc_builder_get_buffer_size@@Base>
  40f1f2:	test   ebp,ebp
  40f1f4:	mov    rbx,rax
  40f1f7:	je     40f20c <time_struct_buffer@@Base+0x6c>
  40f1f9:	lea    rsi,[rip+0x779b]        # 41699b <_IO_stdin_used@@Base+0x99b>
  40f200:	mov    edi,0x1
  40f205:	xor    eax,eax
  40f207:	call   404110 <__printf_chk@plt>
  40f20c:	vmovsd xmm1,QWORD PTR [rsp+0x8]
  40f212:	lea    rdi,[rip+0x9adf]        # 418cf8 <_IO_stdin_used@@Base+0x2cf8>
  40f219:	vmovsd xmm0,QWORD PTR [rsp]
  40f21e:	mov    rsi,rbx
  40f221:	call   4056d0 <_start@@Base+0xe80>
  40f226:	add    rsp,0x10
  40f22a:	mov    eax,ebp
  40f22c:	pop    rbx
  40f22d:	pop    rbp
  40f22e:	pop    r12
  40f230:	ret    
  40f231:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40f23b:	nop    DWORD PTR [rax+rax*1+0x0]
  40f240:	push   rbp
  40f241:	push   rbx
  40f242:	mov    ebp,edx
  40f244:	mov    rbx,rdi
  40f247:	mov    r8d,0x1
  40f24d:	mov    ecx,0x1
  40f252:	sub    rsp,0x8
  40f256:	mov    edx,DWORD PTR [rdi+0x28]
  40f259:	add    rdx,rsi
  40f25c:	lea    rsi,[rdi+0x68]
  40f260:	mov    rdi,QWORD PTR [rdi+0x40]
  40f264:	call   QWORD PTR [rbx+0x50]
  40f267:	test   eax,eax
  40f269:	jne    40f298 <time_struct_buffer@@Base+0xf8>
  40f26b:	mov    edx,DWORD PTR [rbx+0x28]
  40f26e:	mov    rcx,rdx
  40f271:	add    rdx,QWORD PTR [rbx+0x68]
  40f275:	mov    QWORD PTR [rbx+0x18],rdx
  40f279:	mov    edx,DWORD PTR [rbx+0x70]
  40f27c:	sub    edx,ecx
  40f27e:	cmp    ebp,edx
  40f280:	cmovb  edx,ebp
  40f283:	mov    DWORD PTR [rbx+0x24],edx
  40f286:	mov    rdx,QWORD PTR [rbx+0x30]
  40f28a:	mov    DWORD PTR [rdx+0x4],ebp
  40f28d:	add    rsp,0x8
  40f291:	pop    rbx
  40f292:	pop    rbp
  40f293:	ret    
  40f294:	nop    DWORD PTR [rax+0x0]
  40f298:	mov    eax,0xffffffff
  40f29d:	jmp    40f28d <time_struct_buffer@@Base+0xed>
  40f29f:	nop

000000000040f2a0 <flatcc_builder_default_alloc@@Base>:
  40f2a0:	push   r12
  40f2a2:	push   rbp
  40f2a3:	mov    rbp,rsi
  40f2a6:	push   rbx
  40f2a7:	sub    rsp,0x10
  40f2ab:	test   rdx,rdx
  40f2ae:	jne    40f2e0 <flatcc_builder_default_alloc@@Base+0x40>
  40f2b0:	mov    rdi,QWORD PTR [rsi]
  40f2b3:	xor    eax,eax
  40f2b5:	test   rdi,rdi
  40f2b8:	je     40f2d7 <flatcc_builder_default_alloc@@Base+0x37>
  40f2ba:	mov    DWORD PTR [rsp+0xc],eax
  40f2be:	call   404030 <free@plt>
  40f2c3:	mov    eax,DWORD PTR [rsp+0xc]
  40f2c7:	mov    QWORD PTR [rbp+0x0],0x0
  40f2cf:	mov    QWORD PTR [rbp+0x8],0x0
  40f2d7:	add    rsp,0x10
  40f2db:	pop    rbx
  40f2dc:	pop    rbp
  40f2dd:	pop    r12
  40f2df:	ret    
  40f2e0:	cmp    r8d,0x4
  40f2e4:	je     40f380 <flatcc_builder_default_alloc@@Base+0xe0>
  40f2ea:	jle    40f390 <flatcc_builder_default_alloc@@Base+0xf0>
  40f2f0:	cmp    r8d,0x5
  40f2f4:	mov    rbx,rdx
  40f2f7:	je     40f318 <flatcc_builder_default_alloc@@Base+0x78>
  40f2f9:	cmp    r8d,0x7
  40f2fd:	mov    ebx,0x40
  40f302:	je     40f313 <flatcc_builder_default_alloc@@Base+0x73>
  40f304:	jmp    40f39f <flatcc_builder_default_alloc@@Base+0xff>
  40f309:	nop    DWORD PTR [rax+0x0]
  40f310:	add    rbx,rbx
  40f313:	cmp    rdx,rbx
  40f316:	ja     40f310 <flatcc_builder_default_alloc@@Base+0x70>
  40f318:	mov    rax,QWORD PTR [rbp+0x8]
  40f31c:	cmp    rdx,rax
  40f31f:	ja     40f32e <flatcc_builder_default_alloc@@Base+0x8e>
  40f321:	shr    rax,1
  40f324:	mov    rdx,rax
  40f327:	xor    eax,eax
  40f329:	cmp    rdx,rbx
  40f32c:	jae    40f2d7 <flatcc_builder_default_alloc@@Base+0x37>
  40f32e:	mov    rdi,QWORD PTR [rbp+0x0]
  40f332:	mov    rsi,rbx
  40f335:	mov    DWORD PTR [rsp+0xc],ecx
  40f339:	call   404100 <realloc@plt>
  40f33e:	test   rax,rax
  40f341:	mov    r12,rax
  40f344:	je     40f3a9 <flatcc_builder_default_alloc@@Base+0x109>
  40f346:	mov    ecx,DWORD PTR [rsp+0xc]
  40f34a:	test   ecx,ecx
  40f34c:	je     40f368 <flatcc_builder_default_alloc@@Base+0xc8>
  40f34e:	mov    rax,QWORD PTR [rbp+0x8]
  40f352:	cmp    rax,rbx
  40f355:	jae    40f368 <flatcc_builder_default_alloc@@Base+0xc8>
  40f357:	mov    rdx,rbx
  40f35a:	lea    rdi,[r12+rax*1]
  40f35e:	xor    esi,esi
  40f360:	sub    rdx,rax
  40f363:	call   4040a0 <memset@plt>
  40f368:	mov    QWORD PTR [rbp+0x0],r12
  40f36c:	mov    QWORD PTR [rbp+0x8],rbx
  40f370:	add    rsp,0x10
  40f374:	pop    rbx
  40f375:	xor    eax,eax
  40f377:	pop    rbp
  40f378:	pop    r12
  40f37a:	ret    
  40f37b:	nop    DWORD PTR [rax+rax*1+0x0]
  40f380:	mov    ebx,0x120
  40f385:	jmp    40f313 <flatcc_builder_default_alloc@@Base+0x73>
  40f387:	nop    WORD PTR [rax+rax*1+0x0]
  40f390:	cmp    r8d,0x1
  40f394:	mov    ebx,0x100
  40f399:	je     40f313 <flatcc_builder_default_alloc@@Base+0x73>
  40f39f:	mov    ebx,0x20
  40f3a4:	jmp    40f313 <flatcc_builder_default_alloc@@Base+0x73>
  40f3a9:	mov    eax,0xffffffff
  40f3ae:	jmp    40f2d7 <flatcc_builder_default_alloc@@Base+0x37>
  40f3b3:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40f3be:	xchg   ax,ax
  40f3c0:	push   rbx
  40f3c1:	mov    r9,rdi
  40f3c4:	sub    rsp,0xa0
  40f3cb:	mov    rbx,QWORD PTR fs:0x28
  40f3d4:	mov    QWORD PTR [rsp+0x98],rbx
  40f3dc:	xor    ebx,ebx
  40f3de:	test   dx,dx
  40f3e1:	je     40f440 <flatcc_builder_default_alloc@@Base+0x1a0>
  40f3e3:	mov    eax,edx
  40f3e5:	movzx  edx,dx
  40f3e8:	movzx  edi,WORD PTR [rsi]
  40f3eb:	cmp    di,0x3
  40f3ef:	ja     40f3fe <flatcc_builder_default_alloc@@Base+0x15e>
  40f3f1:	mov    edi,0x4
  40f3f6:	mov    WORD PTR [rsi],di
  40f3f9:	mov    edi,0x4
  40f3fe:	cmp    ax,di
  40f401:	jbe    40f406 <flatcc_builder_default_alloc@@Base+0x166>
  40f403:	mov    WORD PTR [rsi],ax
  40f406:	test   ecx,ecx
  40f408:	jne    40f418 <flatcc_builder_default_alloc@@Base+0x178>
  40f40a:	mov    ebx,DWORD PTR [r9+0xf4]
  40f411:	sub    edx,0x1
  40f414:	and    edx,ebx
  40f416:	jne    40f460 <flatcc_builder_default_alloc@@Base+0x1c0>
  40f418:	xor    eax,eax
  40f41a:	mov    rbx,QWORD PTR [rsp+0x98]
  40f422:	xor    rbx,QWORD PTR fs:0x28
  40f42b:	jne    40f4cd <flatcc_builder_default_alloc@@Base+0x22d>
  40f431:	add    rsp,0xa0
  40f438:	pop    rbx
  40f439:	ret    
  40f43a:	nop    WORD PTR [rax+rax*1+0x0]
  40f440:	movzx  eax,WORD PTR [rdi+0xec]
  40f447:	test   ax,ax
  40f44a:	movzx  edx,ax
  40f44d:	jne    40f3e8 <flatcc_builder_default_alloc@@Base+0x148>
  40f44f:	mov    edx,0x1
  40f454:	mov    eax,0x1
  40f459:	jmp    40f3e8 <flatcc_builder_default_alloc@@Base+0x148>
  40f45b:	nop    DWORD PTR [rax+rax*1+0x0]
  40f460:	mov    rax,0x41a140
  40f467:	movsxd r8,edx
  40f46a:	add    edx,ebx
  40f46c:	cmp    ebx,edx
  40f46e:	mov    QWORD PTR [rsp],r8
  40f472:	mov    QWORD PTR [rsp+0x18],r8
  40f477:	mov    DWORD PTR [rsp+0x8],0x1
  40f47f:	mov    DWORD PTR [r9+0xf4],edx
  40f486:	mov    QWORD PTR [rsp+0x10],rax
  40f48b:	jg     40f4d2 <flatcc_builder_default_alloc@@Base+0x232>
  40f48d:	lea    rsi,[rsp+0x10]
  40f492:	mov    rdi,QWORD PTR [r9+0x38]
  40f496:	mov    ecx,ebx
  40f498:	mov    edx,0x1
  40f49d:	call   QWORD PTR [r9+0x48]
  40f4a1:	test   eax,eax
  40f4a3:	jne    40f4d7 <flatcc_builder_default_alloc@@Base+0x237>
  40f4a5:	cmp    ebx,0xffffffff
  40f4a8:	jne    40f418 <flatcc_builder_default_alloc@@Base+0x178>
  40f4ae:	lea    rcx,[rip+0xabfb]        # 41a0b0 <_IO_stdin_used@@Base+0x40b0>
  40f4b5:	lea    rsi,[rip+0xa194]        # 419650 <_IO_stdin_used@@Base+0x3650>
  40f4bc:	lea    rdi,[rip+0xa524]        # 4199e7 <_IO_stdin_used@@Base+0x39e7>
  40f4c3:	mov    edx,0x2be
  40f4c8:	call   404090 <__assert_fail@plt>
  40f4cd:	call   404070 <__stack_chk_fail@plt>
  40f4d2:	call   40460d <posix_memalign@plt+0x4dd>
  40f4d7:	lea    rcx,[rip+0xabc2]        # 41a0a0 <_IO_stdin_used@@Base+0x40a0>
  40f4de:	lea    rsi,[rip+0xa16b]        # 419650 <_IO_stdin_used@@Base+0x3650>
  40f4e5:	lea    rdi,[rip+0xa4fb]        # 4199e7 <_IO_stdin_used@@Base+0x39e7>
  40f4ec:	mov    edx,0x2a5
  40f4f1:	call   404090 <__assert_fail@plt>
  40f4f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40f500:	push   r12
  40f502:	push   rbp
  40f503:	mov    r12d,esi
  40f506:	push   rbx
  40f507:	movsxd rax,DWORD PTR [rdi+0x104]
  40f50e:	mov    rbx,rdi
  40f511:	lea    edx,[rax+0x1]
  40f514:	cmp    edx,DWORD PTR [rdi+0x108]
  40f51a:	mov    DWORD PTR [rdi+0x104],edx
  40f520:	jle    40f5a0 <flatcc_builder_default_alloc@@Base+0x300>
  40f522:	mov    ecx,DWORD PTR [rdi+0x120]
  40f528:	test   ecx,ecx
  40f52a:	jle    40f534 <flatcc_builder_default_alloc@@Base+0x294>
  40f52c:	cmp    edx,ecx
  40f52e:	jg     40f620 <flatcc_builder_default_alloc@@Base+0x380>
  40f534:	lea    rcx,[rax+rax*8]
  40f538:	lea    rbp,[rcx*4+0x0]
  40f540:	lea    rdx,[rbp+0x24]
  40f544:	cmp    rdx,QWORD PTR [rbx+0xa0]
  40f54b:	ja     40f5f8 <flatcc_builder_default_alloc@@Base+0x358>
  40f551:	mov    rcx,rbp
  40f554:	add    rcx,QWORD PTR [rbx+0x98]
  40f55b:	test   rcx,rcx
  40f55e:	mov    QWORD PTR [rbx+0x30],rcx
  40f562:	je     40f620 <flatcc_builder_default_alloc@@Base+0x380>
  40f568:	movabs rdx,0xe38e38e38e38e38f
  40f572:	mov    rax,rdx
  40f575:	mul    QWORD PTR [rbx+0xa0]
  40f57c:	mov    eax,DWORD PTR [rbx+0x120]
  40f582:	shr    rdx,0x5
  40f586:	test   eax,eax
  40f588:	mov    DWORD PTR [rbx+0x108],edx
  40f58e:	jle    40f5f0 <flatcc_builder_default_alloc@@Base+0x350>
  40f590:	cmp    eax,edx
  40f592:	jge    40f5f0 <flatcc_builder_default_alloc@@Base+0x350>
  40f594:	mov    DWORD PTR [rbx+0x108],eax
  40f59a:	mov    rax,rcx
  40f59d:	jmp    40f5ac <flatcc_builder_default_alloc@@Base+0x30c>
  40f59f:	nop
  40f5a0:	mov    rax,QWORD PTR [rdi+0x30]
  40f5a4:	add    rax,0x24
  40f5a8:	mov    QWORD PTR [rdi+0x30],rax
  40f5ac:	movzx  edx,WORD PTR [rbx+0xea]
  40f5b3:	mov    ecx,DWORD PTR [rbx+0x20]
  40f5b6:	mov    DWORD PTR [rax+0x8],ecx
  40f5b9:	mov    WORD PTR [rax+0xc],dx
  40f5bd:	mov    edx,DWORD PTR [rbx+0x28]
  40f5c0:	mov    WORD PTR [rbx+0xea],r12w
  40f5c8:	mov    DWORD PTR [rax+0x4],0xfffffffc
  40f5cf:	mov    DWORD PTR [rax],edx
  40f5d1:	lea    eax,[rcx+rdx*1+0x7]
  40f5d5:	mov    DWORD PTR [rbx+0x20],0x0
  40f5dc:	and    eax,0xfffffff8
  40f5df:	mov    DWORD PTR [rbx+0x28],eax
  40f5e2:	xor    eax,eax
  40f5e4:	pop    rbx
  40f5e5:	pop    rbp
  40f5e6:	pop    r12
  40f5e8:	ret    
  40f5e9:	nop    DWORD PTR [rax+0x0]
  40f5f0:	mov    rax,rcx
  40f5f3:	jmp    40f5ac <flatcc_builder_default_alloc@@Base+0x30c>
  40f5f5:	nop    DWORD PTR [rax]
  40f5f8:	xor    ecx,ecx
  40f5fa:	lea    rsi,[rbx+0x98]
  40f601:	mov    rdi,QWORD PTR [rbx+0x40]
  40f605:	mov    r8d,0x4
  40f60b:	call   QWORD PTR [rbx+0x50]
  40f60e:	test   eax,eax
  40f610:	je     40f551 <flatcc_builder_default_alloc@@Base+0x2b1>
  40f616:	call   4045ea <posix_memalign@plt+0x4ba>
  40f61b:	nop    DWORD PTR [rax+rax*1+0x0]
  40f620:	mov    eax,0xffffffff
  40f625:	jmp    40f5e4 <flatcc_builder_default_alloc@@Base+0x344>
  40f627:	nop    WORD PTR [rax+rax*1+0x0]
  40f630:	push   rbp
  40f631:	push   rbx
  40f632:	sub    rsp,0xb8
  40f639:	mov    rax,QWORD PTR fs:0x28
  40f642:	mov    QWORD PTR [rsp+0xa8],rax
  40f64a:	xor    eax,eax
  40f64c:	cmp    edx,0x3fffffff
  40f652:	ja     40f7e8 <flatcc_builder_default_alloc@@Base+0x548>
  40f658:	cmp    WORD PTR [rdi+0xe8],0x3
  40f660:	mov    rbx,rdi
  40f663:	mov    r10d,edx
  40f666:	ja     40f674 <flatcc_builder_default_alloc@@Base+0x3d4>
  40f668:	mov    eax,0x4
  40f66d:	mov    WORD PTR [rdi+0xe8],ax
  40f674:	mov    eax,DWORD PTR [rbx+0xf0]
  40f67a:	lea    r9d,[rdx*4+0x0]
  40f682:	lea    r8,[rsp+0xc]
  40f687:	mov    DWORD PTR [rsp+0xc],edx
  40f68b:	mov    QWORD PTR [rsp+0x10],0x4
  40f694:	mov    QWORD PTR [rsp+0x20],r8
  40f699:	mov    QWORD PTR [rsp+0x28],0x4
  40f6a2:	mov    r8d,0x4
  40f6a8:	mov    edi,eax
  40f6aa:	mov    DWORD PTR [rsp+0x18],0x1
  40f6b2:	and    edi,0x3
  40f6b5:	test   r9d,r9d
  40f6b8:	je     40f6d5 <flatcc_builder_default_alloc@@Base+0x435>
  40f6ba:	lea    r8,[r9+0x4]
  40f6be:	mov    QWORD PTR [rsp+0x30],rsi
  40f6c3:	mov    QWORD PTR [rsp+0x38],r9
  40f6c8:	mov    DWORD PTR [rsp+0x18],0x2
  40f6d0:	mov    QWORD PTR [rsp+0x10],r8
  40f6d5:	test   edi,edi
  40f6d7:	jne    40f7b0 <flatcc_builder_default_alloc@@Base+0x510>
  40f6dd:	mov    r11d,eax
  40f6e0:	sub    r11d,r8d
  40f6e3:	test   edx,edx
  40f6e5:	je     40f756 <flatcc_builder_default_alloc@@Base+0x4b6>
  40f6e7:	mov    edx,0xfffffffc
  40f6ec:	xor    eax,eax
  40f6ee:	jmp    40f717 <flatcc_builder_default_alloc@@Base+0x477>
  40f6f0:	mov    r9d,edx
  40f6f3:	sub    r9d,r11d
  40f6f6:	add    edi,r9d
  40f6f9:	test   rcx,rcx
  40f6fc:	mov    DWORD PTR [rsi+rax*4],edi
  40f6ff:	je     40f70b <flatcc_builder_default_alloc@@Base+0x46b>
  40f701:	cmp    BYTE PTR [rcx+rax*1],0x0
  40f705:	je     40f80b <flatcc_builder_default_alloc@@Base+0x56b>
  40f70b:	add    rax,0x1
  40f70f:	sub    edx,0x4
  40f712:	cmp    r10d,eax
  40f715:	jbe    40f750 <flatcc_builder_default_alloc@@Base+0x4b0>
  40f717:	mov    edi,DWORD PTR [rsi+rax*4]
  40f71a:	test   edi,edi
  40f71c:	jne    40f6f0 <flatcc_builder_default_alloc@@Base+0x450>
  40f71e:	test   rcx,rcx
  40f721:	je     40f7ec <flatcc_builder_default_alloc@@Base+0x54c>
  40f727:	cmp    BYTE PTR [rcx+rax*1],0x0
  40f72b:	je     40f70b <flatcc_builder_default_alloc@@Base+0x46b>
  40f72d:	lea    rcx,[rip+0xa5dc]        # 419d10 <_IO_stdin_used@@Base+0x3d10>
  40f734:	lea    rsi,[rip+0x9f15]        # 419650 <_IO_stdin_used@@Base+0x3650>
  40f73b:	lea    rdi,[rip+0xa2a7]        # 4199e9 <_IO_stdin_used@@Base+0x39e9>
  40f742:	mov    edx,0x5b5
  40f747:	call   404090 <__assert_fail@plt>
  40f74c:	nop    DWORD PTR [rax+0x0]
  40f750:	mov    eax,DWORD PTR [rbx+0xf0]
  40f756:	mov    ebp,eax
  40f758:	sub    ebp,r8d
  40f75b:	cmp    ebp,eax
  40f75d:	jge    40f82a <flatcc_builder_default_alloc@@Base+0x58a>
  40f763:	lea    rsi,[rsp+0x20]
  40f768:	mov    rdi,QWORD PTR [rbx+0x38]
  40f76c:	mov    ecx,ebp
  40f76e:	mov    edx,DWORD PTR [rsp+0x18]
  40f772:	call   QWORD PTR [rbx+0x48]
  40f775:	test   eax,eax
  40f777:	jne    40f84e <flatcc_builder_default_alloc@@Base+0x5ae>
  40f77d:	mov    DWORD PTR [rbx+0xf0],ebp
  40f783:	mov    rbx,QWORD PTR [rsp+0xa8]
  40f78b:	xor    rbx,QWORD PTR fs:0x28
  40f794:	mov    eax,ebp
  40f796:	jne    40f849 <flatcc_builder_default_alloc@@Base+0x5a9>
  40f79c:	add    rsp,0xb8
  40f7a3:	pop    rbx
  40f7a4:	pop    rbp
  40f7a5:	ret    
  40f7a6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40f7b0:	movsxd r11,DWORD PTR [rsp+0x18]
  40f7b5:	mov    rbp,0x41a140
  40f7bc:	add    r8,rdi
  40f7bf:	mov    QWORD PTR [rsp+0x10],r8
  40f7c4:	mov    r9,r11
  40f7c7:	shl    r11,0x4
  40f7cb:	add    r9d,0x1
  40f7cf:	mov    QWORD PTR [rsp+r11*1+0x20],rbp
  40f7d4:	mov    QWORD PTR [rsp+r11*1+0x28],rdi
  40f7d9:	mov    DWORD PTR [rsp+0x18],r9d
  40f7de:	jmp    40f6dd <flatcc_builder_default_alloc@@Base+0x43d>
  40f7e3:	nop    DWORD PTR [rax+rax*1+0x0]
  40f7e8:	xor    ebp,ebp
  40f7ea:	jmp    40f783 <flatcc_builder_default_alloc@@Base+0x4e3>
  40f7ec:	lea    rcx,[rip+0xa51d]        # 419d10 <_IO_stdin_used@@Base+0x3d10>
  40f7f3:	lea    rsi,[rip+0x9e56]        # 419650 <_IO_stdin_used@@Base+0x3650>
  40f7fa:	lea    rdi,[rip+0xa1e6]        # 4199e7 <_IO_stdin_used@@Base+0x39e7>
  40f801:	mov    edx,0x5b7
  40f806:	call   404090 <__assert_fail@plt>
  40f80b:	lea    rcx,[rip+0xa4fe]        # 419d10 <_IO_stdin_used@@Base+0x3d10>
  40f812:	lea    rsi,[rip+0x9e37]        # 419650 <_IO_stdin_used@@Base+0x3650>
  40f819:	lea    rdi,[rip+0xa1bb]        # 4199db <_IO_stdin_used@@Base+0x39db>
  40f820:	mov    edx,0x5b1
  40f825:	call   404090 <__assert_fail@plt>
  40f82a:	lea    rcx,[rip+0xa85f]        # 41a090 <_IO_stdin_used@@Base+0x4090>
  40f831:	lea    rsi,[rip+0x9e18]        # 419650 <_IO_stdin_used@@Base+0x3650>
  40f838:	lea    rdi,[rip+0xa1a8]        # 4199e7 <_IO_stdin_used@@Base+0x39e7>
  40f83f:	mov    edx,0x287
  40f844:	call   404090 <__assert_fail@plt>
  40f849:	call   404070 <__stack_chk_fail@plt>
  40f84e:	call   404630 <posix_memalign@plt+0x500>
  40f853:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40f85e:	xchg   ax,ax

000000000040f860 <flatcc_builder_flush_vtable_cache@@Base>:
  40f860:	cmp    QWORD PTR [rdi+0xd8],0x0
  40f868:	jne    40f870 <flatcc_builder_flush_vtable_cache@@Base+0x10>
  40f86a:	ret    
  40f86b:	nop    DWORD PTR [rax+rax*1+0x0]
  40f870:	push   rbx
  40f871:	mov    rbx,rdi
  40f874:	mov    rdi,QWORD PTR [rdi+0xa8]
  40f87b:	mov    rdx,QWORD PTR [rbx+0xb0]
  40f882:	xor    esi,esi
  40f884:	call   4040a0 <memset@plt>
  40f889:	mov    DWORD PTR [rbx+0xe4],0x10
  40f893:	mov    DWORD PTR [rbx+0xe0],0x0
  40f89d:	pop    rbx
  40f89e:	ret    
  40f89f:	nop

000000000040f8a0 <flatcc_builder_custom_init@@Base>:
  40f8a0:	mov    QWORD PTR [rdi],0x0
  40f8a7:	mov    QWORD PTR [rdi+0x180],0x0
  40f8b2:	mov    r9,rdi
  40f8b5:	lea    rdi,[rdi+0x8]
  40f8b9:	mov    r10,rcx
  40f8bc:	mov    rcx,r9
  40f8bf:	xor    eax,eax
  40f8c1:	and    rdi,0xfffffffffffffff8
  40f8c5:	sub    rcx,rdi
  40f8c8:	add    ecx,0x188
  40f8ce:	shr    ecx,0x3
  40f8d1:	test   rsi,rsi
  40f8d4:	rep stos QWORD PTR es:[rdi],rax
  40f8d7:	je     40f908 <flatcc_builder_custom_init@@Base+0x68>
  40f8d9:	test   r10,r10
  40f8dc:	je     40f8f8 <flatcc_builder_custom_init@@Base+0x58>
  40f8de:	mov    QWORD PTR [r9+0x40],r8
  40f8e2:	mov    QWORD PTR [r9+0x50],r10
  40f8e6:	xor    eax,eax
  40f8e8:	mov    QWORD PTR [r9+0x38],rdx
  40f8ec:	mov    QWORD PTR [r9+0x48],rsi
  40f8f0:	ret    
  40f8f1:	nop    DWORD PTR [rax+0x0]
  40f8f8:	mov    r10,0x40f2a0
  40f8ff:	jmp    40f8de <flatcc_builder_custom_init@@Base+0x3e>
  40f901:	nop    DWORD PTR [rax+0x0]
  40f908:	mov    DWORD PTR [r9+0x128],0x1
  40f913:	lea    rdx,[r9+0x130]
  40f91a:	mov    rsi,0x413350
  40f921:	jmp    40f8d9 <flatcc_builder_custom_init@@Base+0x39>
  40f923:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40f92e:	xchg   ax,ax

000000000040f930 <flatcc_builder_init@@Base>:
  40f930:	xor    r8d,r8d
  40f933:	xor    ecx,ecx
  40f935:	xor    edx,edx
  40f937:	xor    esi,esi
  40f939:	jmp    40f8a0 <flatcc_builder_custom_init@@Base>
  40f93e:	xchg   ax,ax

000000000040f940 <flatcc_builder_custom_reset@@Base>:
  40f940:	push   r14
  40f942:	mov    r14d,esi
  40f945:	push   r13
  40f947:	mov    r13d,edx
  40f94a:	push   r12
  40f94c:	mov    r12,rdi
  40f94f:	push   rbp
  40f950:	xor    ebp,ebp
  40f952:	push   rbx
  40f953:	lea    rbx,[rdi+0x58]
  40f957:	jmp    40f9a6 <flatcc_builder_custom_reset@@Base+0x66>
  40f959:	nop    DWORD PTR [rax+0x0]
  40f960:	cmp    ebp,0x5
  40f963:	je     40f98f <flatcc_builder_custom_reset@@Base+0x4f>
  40f965:	test   r13d,r13d
  40f968:	je     40f98f <flatcc_builder_custom_reset@@Base+0x4f>
  40f96a:	mov    rdi,QWORD PTR [r12+0x40]
  40f96f:	mov    r8d,ebp
  40f972:	mov    ecx,0x1
  40f977:	mov    edx,0x1
  40f97c:	mov    rsi,rbx
  40f97f:	call   QWORD PTR [r12+0x50]
  40f984:	test   eax,eax
  40f986:	jne    40fae0 <flatcc_builder_custom_reset@@Base+0x1a0>
  40f98c:	mov    rdi,QWORD PTR [rbx]
  40f98f:	mov    rdx,QWORD PTR [rbx+0x8]
  40f993:	xor    esi,esi
  40f995:	call   4040a0 <memset@plt>
  40f99a:	add    ebp,0x1
  40f99d:	add    rbx,0x10
  40f9a1:	cmp    ebp,0x8
  40f9a4:	je     40f9d8 <flatcc_builder_custom_reset@@Base+0x98>
  40f9a6:	mov    rdi,QWORD PTR [rbx]
  40f9a9:	test   rdi,rdi
  40f9ac:	jne    40f960 <flatcc_builder_custom_reset@@Base+0x20>
  40f9ae:	cmp    QWORD PTR [rbx+0x8],0x0
  40f9b3:	je     40f99a <flatcc_builder_custom_reset@@Base+0x5a>
  40f9b5:	lea    rcx,[rip+0xa764]        # 41a120 <_IO_stdin_used@@Base+0x4120>
  40f9bc:	lea    rsi,[rip+0x9c8d]        # 419650 <_IO_stdin_used@@Base+0x3650>
  40f9c3:	lea    rdi,[rip+0xa02d]        # 4199f7 <_IO_stdin_used@@Base+0x39f7>
  40f9ca:	mov    edx,0x1b2
  40f9cf:	call   404090 <__assert_fail@plt>
  40f9d4:	nop    DWORD PTR [rax+0x0]
  40f9d8:	mov    edx,DWORD PTR [r12+0xe4]
  40f9e0:	mov    DWORD PTR [r12+0xe0],0x0
  40f9ec:	test   edx,edx
  40f9ee:	je     40f9fc <flatcc_builder_custom_reset@@Base+0xbc>
  40f9f0:	mov    DWORD PTR [r12+0xe4],0x10
  40f9fc:	xor    eax,eax
  40f9fe:	test   r14d,r14d
  40fa01:	mov    DWORD PTR [r12+0xf0],0x0
  40fa0d:	mov    WORD PTR [r12+0xe8],ax
  40fa16:	mov    rax,QWORD PTR [r12+0x68]
  40fa1b:	mov    DWORD PTR [r12+0xf4],0x0
  40fa27:	mov    DWORD PTR [r12+0x104],0x0
  40fa33:	mov    DWORD PTR [r12+0x108],0x0
  40fa3f:	mov    DWORD PTR [r12+0x20],0x0
  40fa48:	mov    QWORD PTR [r12+0x18],rax
  40fa4d:	mov    rax,QWORD PTR [r12+0x88]
  40fa55:	mov    DWORD PTR [r12+0x24],0x0
  40fa5e:	mov    DWORD PTR [r12+0xfc],0x0
  40fa6a:	mov    DWORD PTR [r12+0x100],0x0
  40fa76:	mov    QWORD PTR [r12+0x30],0x0
  40fa7f:	mov    QWORD PTR [r12],rax
  40fa83:	mov    rax,QWORD PTR [r12+0x58]
  40fa88:	mov    QWORD PTR [r12+0x8],rax
  40fa8d:	jne    40fab8 <flatcc_builder_custom_reset@@Base+0x178>
  40fa8f:	mov    eax,DWORD PTR [r12+0x128]
  40fa97:	test   eax,eax
  40fa99:	je     40faaa <flatcc_builder_custom_reset@@Base+0x16a>
  40fa9b:	lea    rdi,[r12+0x130]
  40faa3:	call   4131e0 <flatcc_emitter_reset@@Base>
  40faa8:	xor    eax,eax
  40faaa:	pop    rbx
  40faab:	pop    rbp
  40faac:	pop    r12
  40faae:	pop    r13
  40fab0:	pop    r14
  40fab2:	ret    
  40fab3:	nop    DWORD PTR [rax+rax*1+0x0]
  40fab8:	mov    QWORD PTR [r12+0x118],0x0
  40fac4:	mov    DWORD PTR [r12+0x120],0x0
  40fad0:	mov    DWORD PTR [r12+0x124],0x0
  40fadc:	jmp    40fa8f <flatcc_builder_custom_reset@@Base+0x14f>
  40fade:	xchg   ax,ax
  40fae0:	mov    eax,0xffffffff
  40fae5:	jmp    40faaa <flatcc_builder_custom_reset@@Base+0x16a>
  40fae7:	nop    WORD PTR [rax+rax*1+0x0]

000000000040faf0 <flatcc_builder_reset@@Base>:
  40faf0:	xor    edx,edx
  40faf2:	xor    esi,esi
  40faf4:	jmp    40f940 <flatcc_builder_custom_reset@@Base>
  40faf9:	nop    DWORD PTR [rax+0x0]

000000000040fb00 <flatcc_builder_clear@@Base>:
  40fb00:	push   r12
  40fb02:	lea    r12,[rdi+0x58]
  40fb06:	push   rbp
  40fb07:	xor    ebp,ebp
  40fb09:	push   rbx
  40fb0a:	mov    rbx,rdi
  40fb0d:	nop    DWORD PTR [rax]
  40fb10:	mov    r8d,ebp
  40fb13:	add    ebp,0x1
  40fb16:	xor    ecx,ecx
  40fb18:	xor    edx,edx
  40fb1a:	mov    rsi,r12
  40fb1d:	mov    rdi,QWORD PTR [rbx+0x40]
  40fb21:	add    r12,0x10
  40fb25:	call   QWORD PTR [rbx+0x50]
  40fb28:	cmp    ebp,0x8
  40fb2b:	jne    40fb10 <flatcc_builder_clear@@Base+0x10>
  40fb2d:	mov    eax,DWORD PTR [rbx+0x128]
  40fb33:	test   eax,eax
  40fb35:	je     40fb43 <flatcc_builder_clear@@Base+0x43>
  40fb37:	lea    rdi,[rbx+0x130]
  40fb3e:	call   4132c0 <flatcc_emitter_clear@@Base>
  40fb43:	lea    rdi,[rbx+0x8]
  40fb47:	mov    QWORD PTR [rbx],0x0
  40fb4e:	mov    QWORD PTR [rbx+0x180],0x0
  40fb59:	xor    eax,eax
  40fb5b:	and    rdi,0xfffffffffffffff8
  40fb5f:	sub    rbx,rdi
  40fb62:	lea    ecx,[rbx+0x188]
  40fb68:	shr    ecx,0x3
  40fb6b:	rep stos QWORD PTR es:[rdi],rax
  40fb6e:	pop    rbx
  40fb6f:	pop    rbp
  40fb70:	pop    r12
  40fb72:	ret    
  40fb73:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40fb7e:	xchg   ax,ax

000000000040fb80 <flatcc_builder_enter_user_frame_ptr@@Base>:
  40fb80:	push   r12
  40fb82:	push   rbp
  40fb83:	mov    r12,rdi
  40fb86:	push   rbx
  40fb87:	lea    rbx,[rsi+0x7]
  40fb8b:	mov    rbp,QWORD PTR [rdi+0x180]
  40fb92:	and    rbx,0xfffffffffffffff8
  40fb96:	add    rbx,0x8
  40fb9a:	lea    rdx,[rbx+rbp*1]
  40fb9e:	cmp    rdx,QWORD PTR [rdi+0xd0]
  40fba5:	ja     40fbf8 <flatcc_builder_enter_user_frame_ptr@@Base+0x78>
  40fba7:	add    rbp,QWORD PTR [r12+0xc8]
  40fbaf:	je     40fc20 <flatcc_builder_enter_user_frame_ptr@@Base+0xa0>
  40fbb1:	mov    rdx,rbx
  40fbb4:	xor    esi,esi
  40fbb6:	mov    rdi,rbp
  40fbb9:	call   4040a0 <memset@plt>
  40fbbe:	mov    rax,QWORD PTR [r12+0x178]
  40fbc6:	mov    QWORD PTR [rbp+0x0],rax
  40fbca:	mov    rax,QWORD PTR [r12+0x180]
  40fbd2:	lea    rdx,[rax+0x8]
  40fbd6:	add    rbx,rax
  40fbd9:	lea    rax,[rbp+0x8]
  40fbdd:	mov    QWORD PTR [r12+0x180],rbx
  40fbe5:	mov    QWORD PTR [r12+0x178],rdx
  40fbed:	pop    rbx
  40fbee:	pop    rbp
  40fbef:	pop    r12
  40fbf1:	ret    
  40fbf2:	nop    WORD PTR [rax+rax*1+0x0]
  40fbf8:	lea    rsi,[rdi+0xc8]
  40fbff:	xor    ecx,ecx
  40fc01:	mov    rdi,QWORD PTR [rdi+0x40]
  40fc05:	mov    r8d,0x7
  40fc0b:	call   QWORD PTR [r12+0x50]
  40fc10:	test   eax,eax
  40fc12:	je     40fba7 <flatcc_builder_enter_user_frame_ptr@@Base+0x27>
  40fc14:	call   4045ea <posix_memalign@plt+0x4ba>
  40fc19:	nop    DWORD PTR [rax+0x0]
  40fc20:	xor    eax,eax
  40fc22:	jmp    40fbed <flatcc_builder_enter_user_frame_ptr@@Base+0x6d>
  40fc24:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40fc2f:	nop

000000000040fc30 <flatcc_builder_enter_user_frame@@Base>:
  40fc30:	push   r12
  40fc32:	push   rbp
  40fc33:	mov    r12,rdi
  40fc36:	push   rbx
  40fc37:	lea    rbx,[rsi+0x7]
  40fc3b:	mov    rbp,QWORD PTR [rdi+0x180]
  40fc42:	and    rbx,0xfffffffffffffff8
  40fc46:	add    rbx,0x8
  40fc4a:	lea    rdx,[rbx+rbp*1]
  40fc4e:	cmp    rdx,QWORD PTR [rdi+0xd0]
  40fc55:	ja     40fca0 <flatcc_builder_enter_user_frame@@Base+0x70>
  40fc57:	xor    eax,eax
  40fc59:	add    rbp,QWORD PTR [r12+0xc8]
  40fc61:	je     40fc9b <flatcc_builder_enter_user_frame@@Base+0x6b>
  40fc63:	mov    rdx,rbx
  40fc66:	xor    esi,esi
  40fc68:	mov    rdi,rbp
  40fc6b:	call   4040a0 <memset@plt>
  40fc70:	mov    rax,QWORD PTR [r12+0x178]
  40fc78:	mov    QWORD PTR [rbp+0x0],rax
  40fc7c:	mov    rdx,QWORD PTR [r12+0x180]
  40fc84:	lea    rax,[rdx+0x8]
  40fc88:	add    rbx,rdx
  40fc8b:	mov    QWORD PTR [r12+0x180],rbx
  40fc93:	mov    QWORD PTR [r12+0x178],rax
  40fc9b:	pop    rbx
  40fc9c:	pop    rbp
  40fc9d:	pop    r12
  40fc9f:	ret    
  40fca0:	lea    rsi,[rdi+0xc8]
  40fca7:	xor    ecx,ecx
  40fca9:	mov    rdi,QWORD PTR [rdi+0x40]
  40fcad:	mov    r8d,0x7
  40fcb3:	call   QWORD PTR [r12+0x50]
  40fcb8:	test   eax,eax
  40fcba:	je     40fc57 <flatcc_builder_enter_user_frame@@Base+0x27>
  40fcbc:	call   4045ea <posix_memalign@plt+0x4ba>
  40fcc1:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40fccc:	nop    DWORD PTR [rax+0x0]

000000000040fcd0 <flatcc_builder_exit_user_frame@@Base>:
  40fcd0:	mov    rax,QWORD PTR [rdi+0x178]
  40fcd7:	test   rax,rax
  40fcda:	je     40fcfc <flatcc_builder_exit_user_frame@@Base+0x2c>
  40fcdc:	mov    edx,eax
  40fcde:	add    rdx,QWORD PTR [rdi+0xc8]
  40fce5:	sub    rax,0x8
  40fce9:	mov    QWORD PTR [rdi+0x180],rax
  40fcf0:	mov    rax,QWORD PTR [rdx-0x8]
  40fcf4:	mov    QWORD PTR [rdi+0x178],rax
  40fcfb:	ret    
  40fcfc:	lea    rcx,[rip+0xa3ed]        # 41a0f0 <_IO_stdin_used@@Base+0x40f0>
  40fd03:	lea    rsi,[rip+0x9946]        # 419650 <_IO_stdin_used@@Base+0x3650>
  40fd0a:	lea    rdi,[rip+0x9cf8]        # 419a09 <_IO_stdin_used@@Base+0x3a09>
  40fd11:	sub    rsp,0x8
  40fd15:	mov    edx,0x21e
  40fd1a:	call   404090 <__assert_fail@plt>
  40fd1f:	nop

000000000040fd20 <flatcc_builder_exit_user_frame_at@@Base>:
  40fd20:	cmp    QWORD PTR [rdi+0x178],rsi
  40fd27:	jb     40fd35 <flatcc_builder_exit_user_frame_at@@Base+0x15>
  40fd29:	mov    QWORD PTR [rdi+0x178],rsi
  40fd30:	jmp    40fcd0 <flatcc_builder_exit_user_frame@@Base>
  40fd35:	lea    rcx,[rip+0xa384]        # 41a0c0 <_IO_stdin_used@@Base+0x40c0>
  40fd3c:	lea    rsi,[rip+0x990d]        # 419650 <_IO_stdin_used@@Base+0x3650>
  40fd43:	lea    rdi,[rip+0x9966]        # 4196b0 <_IO_stdin_used@@Base+0x36b0>
  40fd4a:	sub    rsp,0x8
  40fd4e:	mov    edx,0x227
  40fd53:	call   404090 <__assert_fail@plt>
  40fd58:	nop    DWORD PTR [rax+rax*1+0x0]

000000000040fd60 <flatcc_builder_get_current_user_frame@@Base>:
  40fd60:	mov    rax,QWORD PTR [rdi+0x178]
  40fd67:	ret    
  40fd68:	nop    DWORD PTR [rax+rax*1+0x0]

000000000040fd70 <flatcc_builder_get_user_frame_ptr@@Base>:
  40fd70:	mov    eax,esi
  40fd72:	add    rax,QWORD PTR [rdi+0xc8]
  40fd79:	ret    
  40fd7a:	nop    WORD PTR [rax+rax*1+0x0]

000000000040fd80 <flatcc_builder_embed_buffer@@Base>:
  40fd80:	push   r13
  40fd82:	push   r12
  40fd84:	mov    r12,rcx
  40fd87:	push   rbp
  40fd88:	push   rbx
  40fd89:	xor    ecx,ecx
  40fd8b:	mov    rbp,rdx
  40fd8e:	movzx  edx,si
  40fd91:	mov    rbx,rdi
  40fd94:	sub    rsp,0xc8
  40fd9b:	mov    r13d,r9d
  40fd9e:	mov    WORD PTR [rsp+0xc],r8w
  40fda4:	mov    r8d,DWORD PTR [rdi+0x100]
  40fdab:	lea    rsi,[rsp+0xc]
  40fdb0:	mov    rax,QWORD PTR fs:0x28
  40fdb9:	mov    QWORD PTR [rsp+0xb8],rax
  40fdc1:	xor    eax,eax
  40fdc3:	test   r8d,r8d
  40fdc6:	setne  cl
  40fdc9:	call   40f3c0 <flatcc_builder_default_alloc@@Base+0x120>
  40fdce:	test   eax,eax
  40fdd0:	jne    40ff18 <flatcc_builder_embed_buffer@@Base+0x198>
  40fdd6:	mov    edx,DWORD PTR [rbx+0xf0]
  40fddc:	movzx  ecx,WORD PTR [rsp+0xc]
  40fde1:	xor    esi,esi
  40fde3:	and    r13d,0x2
  40fde7:	mov    QWORD PTR [rsp+0x20],0x0
  40fdf0:	mov    DWORD PTR [rsp+0x28],0x0
  40fdf8:	setne  sil
  40fdfc:	xor    r8d,r8d
  40fdff:	mov    eax,edx
  40fe01:	shl    esi,0x2
  40fe04:	sub    eax,r12d
  40fe07:	sub    ecx,0x1
  40fe0a:	sub    eax,esi
  40fe0c:	and    eax,ecx
  40fe0e:	lea    ecx,[rax+r12*1]
  40fe12:	mov    DWORD PTR [rsp+0x1c],ecx
  40fe16:	mov    ecx,DWORD PTR [rbx+0x100]
  40fe1c:	test   ecx,ecx
  40fe1e:	je     40fe4a <flatcc_builder_embed_buffer@@Base+0xca>
  40fe20:	lea    rcx,[rsp+0x1c]
  40fe25:	mov    QWORD PTR [rsp+0x20],0x4
  40fe2e:	mov    QWORD PTR [rsp+0x38],0x4
  40fe37:	mov    DWORD PTR [rsp+0x28],0x1
  40fe3f:	mov    r8d,0x4
  40fe45:	mov    QWORD PTR [rsp+0x30],rcx
  40fe4a:	test   r12,r12
  40fe4d:	je     40fe74 <flatcc_builder_embed_buffer@@Base+0xf4>
  40fe4f:	movsxd rsi,DWORD PTR [rsp+0x28]
  40fe54:	add    r8,r12
  40fe57:	mov    QWORD PTR [rsp+0x20],r8
  40fe5c:	mov    rcx,rsi
  40fe5f:	shl    rsi,0x4
  40fe63:	add    ecx,0x1
  40fe66:	mov    QWORD PTR [rsp+rsi*1+0x30],rbp
  40fe6b:	mov    QWORD PTR [rsp+rsi*1+0x38],r12
  40fe70:	mov    DWORD PTR [rsp+0x28],ecx
  40fe74:	test   eax,eax
  40fe76:	jne    40fee0 <flatcc_builder_embed_buffer@@Base+0x160>
  40fe78:	mov    ebp,edx
  40fe7a:	sub    ebp,r8d
  40fe7d:	cmp    edx,ebp
  40fe7f:	jle    40ff1c <flatcc_builder_embed_buffer@@Base+0x19c>
  40fe85:	movabs rax,0x10000000f
  40fe8f:	cmp    r8,rax
  40fe92:	ja     40ff1c <flatcc_builder_embed_buffer@@Base+0x19c>
  40fe98:	lea    rsi,[rsp+0x30]
  40fe9d:	mov    rdi,QWORD PTR [rbx+0x38]
  40fea1:	mov    ecx,ebp
  40fea3:	mov    edx,DWORD PTR [rsp+0x28]
  40fea7:	call   QWORD PTR [rbx+0x48]
  40feaa:	test   eax,eax
  40feac:	jne    40ff40 <flatcc_builder_embed_buffer@@Base+0x1c0>
  40feb2:	mov    DWORD PTR [rbx+0xf0],ebp
  40feb8:	mov    rdi,QWORD PTR [rsp+0xb8]
  40fec0:	xor    rdi,QWORD PTR fs:0x28
  40fec9:	mov    eax,ebp
  40fecb:	jne    40ff3b <flatcc_builder_embed_buffer@@Base+0x1bb>
  40fecd:	add    rsp,0xc8
  40fed4:	pop    rbx
  40fed5:	pop    rbp
  40fed6:	pop    r12
  40fed8:	pop    r13
  40feda:	ret    
  40fedb:	nop    DWORD PTR [rax+rax*1+0x0]
  40fee0:	movsxd rsi,DWORD PTR [rsp+0x28]
  40fee5:	mov    rdi,0x41a140
  40feec:	add    r8,rax
  40feef:	mov    QWORD PTR [rsp+0x20],r8
  40fef4:	mov    rcx,rsi
  40fef7:	shl    rsi,0x4
  40fefb:	add    ecx,0x1
  40fefe:	mov    QWORD PTR [rsp+rsi*1+0x30],rdi
  40ff03:	mov    QWORD PTR [rsp+rsi*1+0x38],rax
  40ff08:	mov    DWORD PTR [rsp+0x28],ecx
  40ff0c:	jmp    40fe78 <flatcc_builder_embed_buffer@@Base+0xf8>
  40ff11:	nop    DWORD PTR [rax+0x0]
  40ff18:	xor    ebp,ebp
  40ff1a:	jmp    40feb8 <flatcc_builder_embed_buffer@@Base+0x138>
  40ff1c:	lea    rcx,[rip+0xa16d]        # 41a090 <_IO_stdin_used@@Base+0x4090>
  40ff23:	lea    rsi,[rip+0x9726]        # 419650 <_IO_stdin_used@@Base+0x3650>
  40ff2a:	lea    rdi,[rip+0x9ab6]        # 4199e7 <_IO_stdin_used@@Base+0x39e7>
  40ff31:	mov    edx,0x287
  40ff36:	call   404090 <__assert_fail@plt>
  40ff3b:	call   404070 <__stack_chk_fail@plt>
  40ff40:	call   404630 <posix_memalign@plt+0x500>
  40ff45:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

000000000040ff50 <flatcc_builder_create_buffer@@Base>:
  40ff50:	push   r14
  40ff52:	push   r13
  40ff54:	mov    r13d,r9d
  40ff57:	push   r12
  40ff59:	push   rbp
  40ff5a:	and    r13d,0x1
  40ff5e:	push   rbx
  40ff5f:	mov    r14,rsi
  40ff62:	mov    r12d,ecx
  40ff65:	movzx  edx,dx
  40ff68:	mov    ecx,r13d
  40ff6b:	mov    rbp,rdi
  40ff6e:	sub    rsp,0xc0
  40ff75:	mov    ebx,r9d
  40ff78:	lea    rsi,[rsp+0xc]
  40ff7d:	mov    WORD PTR [rsp+0xc],r8w
  40ff83:	mov    DWORD PTR [rsp+0x1c],0x0
  40ff8b:	mov    rax,QWORD PTR fs:0x28
  40ff94:	mov    QWORD PTR [rsp+0xb8],rax
  40ff9c:	xor    eax,eax
  40ff9e:	call   40f3c0 <flatcc_builder_default_alloc@@Base+0x120>
  40ffa3:	test   eax,eax
  40ffa5:	jne    410160 <flatcc_builder_create_buffer@@Base+0x210>
  40ffab:	movzx  ecx,WORD PTR [rsp+0xc]
  40ffb0:	cmp    cx,WORD PTR [rbp+0xe8]
  40ffb7:	ja     410150 <flatcc_builder_create_buffer@@Base+0x200>
  40ffbd:	test   r14,r14
  40ffc0:	mov    eax,DWORD PTR [rsp+0x1c]
  40ffc4:	je     40ffcd <flatcc_builder_create_buffer@@Base+0x7d>
  40ffc6:	mov    eax,DWORD PTR [r14]
  40ffc9:	mov    DWORD PTR [rsp+0x1c],eax
  40ffcd:	xor    r10d,r10d
  40ffd0:	test   eax,eax
  40ffd2:	mov    edi,ebx
  40ffd4:	setne  r10b
  40ffd8:	and    edi,0x1
  40ffdb:	mov    edx,DWORD PTR [rbp+0xf0]
  40ffe1:	shl    r10d,0x2
  40ffe5:	and    ebx,0x2
  40ffe8:	jne    410118 <flatcc_builder_create_buffer@@Base+0x1c8>
  40ffee:	lea    eax,[rdx-0x4]
  40fff1:	sub    ecx,0x1
  40fff4:	sub    eax,r10d
  40fff7:	and    eax,ecx
  40fff9:	test   dil,dil
  40fffc:	jne    410123 <flatcc_builder_create_buffer@@Base+0x1d3>
  410002:	mov    ecx,0x1
  410007:	mov    r8d,0x4
  41000d:	movsxd rsi,ebx
  410010:	lea    r9,[rsp+0x14]
  410015:	mov    QWORD PTR [rsp+0x20],r8
  41001a:	shl    rsi,0x4
  41001e:	test   r10d,r10d
  410021:	mov    DWORD PTR [rsp+0x28],ecx
  410025:	mov    QWORD PTR [rsp+rsi*1+0x30],r9
  41002a:	mov    QWORD PTR [rsp+rsi*1+0x38],0x4
  410033:	je     410057 <flatcc_builder_create_buffer@@Base+0x107>
  410035:	lea    rsi,[rsp+0x1c]
  41003a:	shl    rcx,0x4
  41003e:	add    r8,r10
  410041:	add    ebx,0x2
  410044:	mov    QWORD PTR [rsp+0x20],r8
  410049:	mov    QWORD PTR [rsp+rcx*1+0x38],r10
  41004e:	mov    QWORD PTR [rsp+rcx*1+0x30],rsi
  410053:	mov    DWORD PTR [rsp+0x28],ebx
  410057:	test   eax,eax
  410059:	je     410087 <flatcc_builder_create_buffer@@Base+0x137>
  41005b:	movsxd rsi,DWORD PTR [rsp+0x28]
  410060:	mov    r9,0x41a140
  410067:	add    r8,rax
  41006a:	mov    QWORD PTR [rsp+0x20],r8
  41006f:	mov    rcx,rsi
  410072:	shl    rsi,0x4
  410076:	add    ecx,0x1
  410079:	mov    QWORD PTR [rsp+rsi*1+0x30],r9
  41007e:	mov    QWORD PTR [rsp+rsi*1+0x38],rax
  410083:	mov    DWORD PTR [rsp+0x28],ecx
  410087:	mov    eax,edx
  410089:	sub    eax,r8d
  41008c:	test   dil,dil
  41008f:	je     410168 <flatcc_builder_create_buffer@@Base+0x218>
  410095:	add    eax,0x4
  410098:	test   r13d,r13d
  41009b:	je     410168 <flatcc_builder_create_buffer@@Base+0x218>
  4100a1:	mov    ecx,DWORD PTR [rbp+0xf8]
  4100a7:	sub    ecx,eax
  4100a9:	mov    DWORD PTR [rsp+0x18],ecx
  4100ad:	mov    ebx,edx
  4100af:	sub    r12d,eax
  4100b2:	sub    ebx,r8d
  4100b5:	mov    DWORD PTR [rsp+0x14],r12d
  4100ba:	cmp    ebx,edx
  4100bc:	jge    410179 <flatcc_builder_create_buffer@@Base+0x229>
  4100c2:	lea    rsi,[rsp+0x30]
  4100c7:	mov    rdi,QWORD PTR [rbp+0x38]
  4100cb:	mov    ecx,ebx
  4100cd:	mov    edx,DWORD PTR [rsp+0x28]
  4100d1:	call   QWORD PTR [rbp+0x48]
  4100d4:	test   eax,eax
  4100d6:	jne    41019d <flatcc_builder_create_buffer@@Base+0x24d>
  4100dc:	test   ebx,ebx
  4100de:	mov    DWORD PTR [rbp+0xf0],ebx
  4100e4:	je     4101a2 <flatcc_builder_create_buffer@@Base+0x252>
  4100ea:	mov    rdi,QWORD PTR [rsp+0xb8]
  4100f2:	xor    rdi,QWORD PTR fs:0x28
  4100fb:	mov    eax,ebx
  4100fd:	jne    410198 <flatcc_builder_create_buffer@@Base+0x248>
  410103:	add    rsp,0xc0
  41010a:	pop    rbx
  41010b:	pop    rbp
  41010c:	pop    r12
  41010e:	pop    r13
  410110:	pop    r14
  410112:	ret    
  410113:	nop    DWORD PTR [rax+rax*1+0x0]
  410118:	lea    eax,[rdx-0x8]
  41011b:	sub    ecx,0x1
  41011e:	sub    eax,r10d
  410121:	and    eax,ecx
  410123:	lea    rcx,[rsp+0x18]
  410128:	mov    QWORD PTR [rsp+0x38],0x4
  410131:	mov    ebx,0x1
  410136:	mov    r8d,0x8
  41013c:	mov    edi,0x1
  410141:	mov    QWORD PTR [rsp+0x30],rcx
  410146:	mov    ecx,0x2
  41014b:	jmp    41000d <flatcc_builder_create_buffer@@Base+0xbd>
  410150:	mov    WORD PTR [rbp+0xe8],cx
  410157:	jmp    40ffbd <flatcc_builder_create_buffer@@Base+0x6d>
  41015c:	nop    DWORD PTR [rax+0x0]
  410160:	xor    ebx,ebx
  410162:	jmp    4100ea <flatcc_builder_create_buffer@@Base+0x19a>
  410164:	nop    DWORD PTR [rax+0x0]
  410168:	mov    ecx,DWORD PTR [rbp+0xf4]
  41016e:	sub    ecx,eax
  410170:	mov    DWORD PTR [rsp+0x18],ecx
  410174:	jmp    4100ad <flatcc_builder_create_buffer@@Base+0x15d>
  410179:	lea    rcx,[rip+0x9f10]        # 41a090 <_IO_stdin_used@@Base+0x4090>
  410180:	lea    rsi,[rip+0x94c9]        # 419650 <_IO_stdin_used@@Base+0x3650>
  410187:	lea    rdi,[rip+0x9859]        # 4199e7 <_IO_stdin_used@@Base+0x39e7>
  41018e:	mov    edx,0x287
  410193:	call   404090 <__assert_fail@plt>
  410198:	call   404070 <__stack_chk_fail@plt>
  41019d:	call   404630 <posix_memalign@plt+0x500>
  4101a2:	lea    rcx,[rip+0x9ec7]        # 41a070 <_IO_stdin_used@@Base+0x4070>
  4101a9:	lea    rsi,[rip+0x94a0]        # 419650 <_IO_stdin_used@@Base+0x3650>
  4101b0:	lea    rdi,[rip+0x9830]        # 4199e7 <_IO_stdin_used@@Base+0x39e7>
  4101b7:	mov    edx,0x304
  4101bc:	call   404090 <__assert_fail@plt>
  4101c1:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4101cc:	nop    DWORD PTR [rax+0x0]

00000000004101d0 <flatcc_builder_create_struct@@Base>:
  4101d0:	push   rbp
  4101d1:	push   rbx
  4101d2:	sub    rsp,0xa8
  4101d9:	mov    rax,QWORD PTR fs:0x28
  4101e2:	mov    QWORD PTR [rsp+0x98],rax
  4101ea:	xor    eax,eax
  4101ec:	test   cx,cx
  4101ef:	je     4102ff <flatcc_builder_create_struct@@Base+0x12f>
  4101f5:	mov    rbx,rdi
  4101f8:	mov    r8,rdx
  4101fb:	movzx  edi,cx
  4101fe:	cmp    cx,WORD PTR [rbx+0xe8]
  410205:	jbe    41020e <flatcc_builder_create_struct@@Base+0x3e>
  410207:	mov    WORD PTR [rbx+0xe8],cx
  41020e:	mov    edx,DWORD PTR [rbx+0xf0]
  410214:	lea    ecx,[rdi-0x1]
  410217:	mov    QWORD PTR [rsp],0x0
  41021f:	mov    DWORD PTR [rsp+0x8],0x0
  410227:	mov    eax,edx
  410229:	sub    eax,r8d
  41022c:	and    eax,ecx
  41022e:	test   r8,r8
  410231:	jne    4102c0 <flatcc_builder_create_struct@@Base+0xf0>
  410237:	test   eax,eax
  410239:	je     410266 <flatcc_builder_create_struct@@Base+0x96>
  41023b:	movsxd rsi,DWORD PTR [rsp+0x8]
  410240:	mov    rdi,0x41a140
  410247:	add    r8,rax
  41024a:	mov    QWORD PTR [rsp],r8
  41024e:	mov    rcx,rsi
  410251:	shl    rsi,0x4
  410255:	add    ecx,0x1
  410258:	mov    QWORD PTR [rsp+rsi*1+0x10],rdi
  41025d:	mov    QWORD PTR [rsp+rsi*1+0x18],rax
  410262:	mov    DWORD PTR [rsp+0x8],ecx
  410266:	mov    ebp,edx
  410268:	movabs rax,0x10000000f
  410272:	sub    ebp,r8d
  410275:	cmp    r8,rax
  410278:	ja     4102db <flatcc_builder_create_struct@@Base+0x10b>
  41027a:	cmp    edx,ebp
  41027c:	jle    4102db <flatcc_builder_create_struct@@Base+0x10b>
  41027e:	lea    rsi,[rsp+0x10]
  410283:	mov    rdi,QWORD PTR [rbx+0x38]
  410287:	mov    ecx,ebp
  410289:	mov    edx,DWORD PTR [rsp+0x8]
  41028d:	call   QWORD PTR [rbx+0x48]
  410290:	test   eax,eax
  410292:	jne    4102fa <flatcc_builder_create_struct@@Base+0x12a>
  410294:	mov    rdx,QWORD PTR [rsp+0x98]
  41029c:	xor    rdx,QWORD PTR fs:0x28
  4102a5:	mov    DWORD PTR [rbx+0xf0],ebp
  4102ab:	mov    eax,ebp
  4102ad:	jne    41031e <flatcc_builder_create_struct@@Base+0x14e>
  4102af:	add    rsp,0xa8
  4102b6:	pop    rbx
  4102b7:	pop    rbp
  4102b8:	ret    
  4102b9:	nop    DWORD PTR [rax+0x0]
  4102c0:	mov    QWORD PTR [rsp],r8
  4102c4:	mov    QWORD PTR [rsp+0x10],rsi
  4102c9:	mov    QWORD PTR [rsp+0x18],r8
  4102ce:	mov    DWORD PTR [rsp+0x8],0x1
  4102d6:	jmp    410237 <flatcc_builder_create_struct@@Base+0x67>
  4102db:	lea    rcx,[rip+0x9dae]        # 41a090 <_IO_stdin_used@@Base+0x4090>
  4102e2:	lea    rsi,[rip+0x9367]        # 419650 <_IO_stdin_used@@Base+0x3650>
  4102e9:	lea    rdi,[rip+0x96f7]        # 4199e7 <_IO_stdin_used@@Base+0x39e7>
  4102f0:	mov    edx,0x287
  4102f5:	call   404090 <__assert_fail@plt>
  4102fa:	call   404630 <posix_memalign@plt+0x500>
  4102ff:	lea    rcx,[rip+0x9d4a]        # 41a050 <_IO_stdin_used@@Base+0x4050>
  410306:	lea    rsi,[rip+0x9343]        # 419650 <_IO_stdin_used@@Base+0x3650>
  41030d:	lea    rdi,[rip+0x970e]        # 419a22 <_IO_stdin_used@@Base+0x3a22>
  410314:	mov    edx,0x30f
  410319:	call   404090 <__assert_fail@plt>
  41031e:	call   404070 <__stack_chk_fail@plt>
  410323:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  41032e:	xchg   ax,ax

0000000000410330 <flatcc_builder_start_buffer@@Base>:
  410330:	push   r13
  410332:	push   r12
  410334:	mov    r13d,edx
  410337:	push   rbp
  410338:	push   rbx
  410339:	mov    rbp,rsi
  41033c:	mov    rbx,rdi
  41033f:	mov    r12d,ecx
  410342:	sub    rsp,0x8
  410346:	movzx  esi,WORD PTR [rdi+0xe8]
  41034d:	call   40f500 <flatcc_builder_default_alloc@@Base+0x260>
  410352:	test   eax,eax
  410354:	jne    410400 <flatcc_builder_start_buffer@@Base+0xd0>
  41035a:	movzx  edx,WORD PTR [rbx+0xec]
  410361:	mov    rdi,QWORD PTR [rbx+0x30]
  410365:	mov    ecx,0x1
  41036a:	mov    WORD PTR [rbx+0xe8],cx
  410371:	test   rbp,rbp
  410374:	mov    rsi,rbp
  410377:	mov    WORD PTR [rdi+0x22],dx
  41037b:	movzx  edx,WORD PTR [rbx+0x10c]
  410382:	mov    WORD PTR [rbx+0xec],r13w
  41038a:	mov    WORD PTR [rdi+0x20],dx
  41038e:	mov    edx,DWORD PTR [rbx+0xf8]
  410394:	mov    WORD PTR [rbx+0x10c],r12w
  41039c:	mov    DWORD PTR [rdi+0x14],edx
  41039f:	mov    edx,DWORD PTR [rbx+0x100]
  4103a5:	mov    DWORD PTR [rdi+0x1c],edx
  4103a8:	mov    edx,DWORD PTR [rbx+0xf0]
  4103ae:	mov    DWORD PTR [rbx+0xf8],edx
  4103b4:	mov    edx,DWORD PTR [rbx+0xfc]
  4103ba:	lea    ecx,[rdx+0x1]
  4103bd:	mov    DWORD PTR [rbx+0x100],edx
  4103c3:	mov    edx,DWORD PTR [rbx+0x110]
  4103c9:	mov    DWORD PTR [rbx+0xfc],ecx
  4103cf:	mov    DWORD PTR [rdi+0x10],edx
  4103d2:	je     4103f0 <flatcc_builder_start_buffer@@Base+0xc0>
  4103d4:	mov    edx,DWORD PTR [rsi]
  4103d6:	mov    DWORD PTR [rbx+0x110],edx
  4103dc:	mov    edx,0x1
  4103e1:	mov    WORD PTR [rdi+0xe],dx
  4103e5:	add    rsp,0x8
  4103e9:	pop    rbx
  4103ea:	pop    rbp
  4103eb:	pop    r12
  4103ed:	pop    r13
  4103ef:	ret    
  4103f0:	mov    rsi,0x41a140
  4103f7:	jmp    4103d4 <flatcc_builder_start_buffer@@Base+0xa4>
  4103f9:	nop    DWORD PTR [rax+0x0]
  410400:	mov    eax,0xffffffff
  410405:	jmp    4103e5 <flatcc_builder_start_buffer@@Base+0xb5>
  410407:	nop    WORD PTR [rax+rax*1+0x0]

0000000000410410 <flatcc_builder_end_buffer@@Base>:
  410410:	push   rbp
  410411:	push   rbx
  410412:	xor    eax,eax
  410414:	sub    rsp,0x8
  410418:	movzx  r9d,WORD PTR [rdi+0x10c]
  410420:	mov    edx,DWORD PTR [rdi+0x100]
  410426:	and    r9d,0x2
  41042a:	test   edx,edx
  41042c:	setne  al
  41042f:	or     r9d,eax
  410432:	mov    rax,QWORD PTR [rdi+0x30]
  410436:	cmp    WORD PTR [rax+0xe],0x1
  41043b:	jne    410531 <flatcc_builder_end_buffer@@Base+0x121>
  410441:	movzx  edx,WORD PTR [rdi+0xec]
  410448:	movzx  r8d,WORD PTR [rdi+0xe8]
  410450:	mov    rbx,rdi
  410453:	mov    ecx,esi
  410455:	cmp    dx,r8w
  410459:	ja     410480 <flatcc_builder_end_buffer@@Base+0x70>
  41045b:	lea    rsi,[rbx+0x110]
  410462:	mov    rdi,rbx
  410465:	call   40ff50 <flatcc_builder_create_buffer@@Base>
  41046a:	test   eax,eax
  41046c:	mov    ebp,eax
  41046e:	jne    410490 <flatcc_builder_end_buffer@@Base+0x80>
  410470:	add    rsp,0x8
  410474:	mov    eax,ebp
  410476:	pop    rbx
  410477:	pop    rbp
  410478:	ret    
  410479:	nop    DWORD PTR [rax+0x0]
  410480:	mov    WORD PTR [rbx+0xe8],dx
  410487:	mov    r8d,edx
  41048a:	jmp    41045b <flatcc_builder_end_buffer@@Base+0x4b>
  41048c:	nop    DWORD PTR [rax+0x0]
  410490:	mov    rax,QWORD PTR [rbx+0x30]
  410494:	mov    rdi,QWORD PTR [rbx+0x18]
  410498:	xor    esi,esi
  41049a:	mov    edx,DWORD PTR [rax+0x14]
  41049d:	mov    DWORD PTR [rbx+0xf8],edx
  4104a3:	mov    edx,DWORD PTR [rax+0x1c]
  4104a6:	mov    DWORD PTR [rbx+0x100],edx
  4104ac:	mov    edx,DWORD PTR [rax+0x10]
  4104af:	mov    DWORD PTR [rbx+0x110],edx
  4104b5:	movzx  eax,WORD PTR [rax+0x20]
  4104b9:	mov    edx,DWORD PTR [rbx+0x20]
  4104bc:	mov    WORD PTR [rbx+0x10c],ax
  4104c3:	call   4040a0 <memset@plt>
  4104c8:	mov    rax,QWORD PTR [rbx+0x30]
  4104cc:	mov    edi,DWORD PTR [rbx+0x70]
  4104cf:	mov    esi,DWORD PTR [rax]
  4104d1:	mov    edx,DWORD PTR [rax+0x8]
  4104d4:	mov    ecx,DWORD PTR [rax+0x4]
  4104d7:	mov    DWORD PTR [rbx+0x20],edx
  4104da:	mov    rdx,rsi
  4104dd:	mov    DWORD PTR [rbx+0x28],esi
  4104e0:	add    rsi,QWORD PTR [rbx+0x68]
  4104e4:	sub    edi,edx
  4104e6:	cmp    ecx,edi
  4104e8:	mov    edx,edi
  4104ea:	cmovb  edx,ecx
  4104ed:	mov    DWORD PTR [rbx+0x24],edx
  4104f0:	movzx  edx,WORD PTR [rbx+0xea]
  4104f7:	cmp    dx,WORD PTR [rbx+0xe8]
  4104fe:	mov    QWORD PTR [rbx+0x18],rsi
  410502:	mov    DWORD PTR [rax+0x4],ecx
  410505:	jbe    41050e <flatcc_builder_end_buffer@@Base+0xfe>
  410507:	mov    WORD PTR [rbx+0xe8],dx
  41050e:	movzx  edx,WORD PTR [rax+0xc]
  410512:	sub    rax,0x24
  410516:	sub    DWORD PTR [rbx+0x104],0x1
  41051d:	mov    QWORD PTR [rbx+0x30],rax
  410521:	mov    eax,ebp
  410523:	mov    WORD PTR [rbx+0xea],dx
  41052a:	add    rsp,0x8
  41052e:	pop    rbx
  41052f:	pop    rbp
  410530:	ret    
  410531:	lea    rcx,[rip+0x9af8]        # 41a030 <_IO_stdin_used@@Base+0x4030>
  410538:	lea    rsi,[rip+0x9111]        # 419650 <_IO_stdin_used@@Base+0x3650>
  41053f:	lea    rdi,[rip+0x918a]        # 4196d0 <_IO_stdin_used@@Base+0x36d0>
  410546:	mov    edx,0x346
  41054b:	call   404090 <__assert_fail@plt>

0000000000410550 <flatcc_builder_start_struct@@Base>:
  410550:	push   r12
  410552:	push   rbp
  410553:	mov    rbp,rsi
  410556:	push   rbx
  410557:	movzx  esi,dx
  41055a:	mov    rbx,rdi
  41055d:	call   40f500 <flatcc_builder_default_alloc@@Base+0x260>
  410562:	test   eax,eax
  410564:	jne    4105e0 <flatcc_builder_start_struct@@Base+0x90>
  410566:	mov    rcx,QWORD PTR [rbx+0x30]
  41056a:	mov    eax,0x2
  41056f:	mov    edi,DWORD PTR [rbx+0x70]
  410572:	mov    WORD PTR [rcx+0xe],ax
  410576:	mov    eax,DWORD PTR [rbx+0x28]
  410579:	mov    rdx,rax
  41057c:	add    rax,QWORD PTR [rbx+0x68]
  410580:	sub    edi,edx
  410582:	cmp    edi,0xfffffffc
  410585:	mov    edx,edi
  410587:	mov    QWORD PTR [rbx+0x18],rax
  41058b:	ja     4105b0 <flatcc_builder_start_struct@@Base+0x60>
  41058d:	mov    DWORD PTR [rbx+0x24],edi
  410590:	mov    r12d,DWORD PTR [rbx+0x20]
  410594:	mov    DWORD PTR [rcx+0x4],0xfffffffc
  41059b:	mov    rsi,r12
  41059e:	add    esi,ebp
  4105a0:	cmp    esi,edx
  4105a2:	mov    DWORD PTR [rbx+0x20],esi
  4105a5:	jae    4105c0 <flatcc_builder_start_struct@@Base+0x70>
  4105a7:	add    rax,r12
  4105aa:	pop    rbx
  4105ab:	pop    rbp
  4105ac:	pop    r12
  4105ae:	ret    
  4105af:	nop
  4105b0:	mov    DWORD PTR [rbx+0x24],0xfffffffc
  4105b7:	mov    edx,0xfffffffc
  4105bc:	jmp    410590 <flatcc_builder_start_struct@@Base+0x40>
  4105be:	xchg   ax,ax
  4105c0:	add    esi,0x1
  4105c3:	mov    edx,0xfffffffc
  4105c8:	mov    rdi,rbx
  4105cb:	call   40f240 <time_struct_buffer@@Base+0xa0>
  4105d0:	test   eax,eax
  4105d2:	jne    4105e0 <flatcc_builder_start_struct@@Base+0x90>
  4105d4:	mov    rax,QWORD PTR [rbx+0x18]
  4105d8:	jmp    4105a7 <flatcc_builder_start_struct@@Base+0x57>
  4105da:	nop    WORD PTR [rax+rax*1+0x0]
  4105e0:	pop    rbx
  4105e1:	xor    eax,eax
  4105e3:	pop    rbp
  4105e4:	pop    r12
  4105e6:	ret    
  4105e7:	nop    WORD PTR [rax+rax*1+0x0]

00000000004105f0 <flatcc_builder_struct_edit@@Base>:
  4105f0:	mov    rax,QWORD PTR [rdi+0x18]
  4105f4:	ret    
  4105f5:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

0000000000410600 <flatcc_builder_end_struct@@Base>:
  410600:	push   rbp
  410601:	push   rbx
  410602:	sub    rsp,0x8
  410606:	mov    rax,QWORD PTR [rdi+0x30]
  41060a:	cmp    WORD PTR [rax+0xe],0x2
  41060f:	jne    4106b7 <flatcc_builder_end_struct@@Base+0xb7>
  410615:	movzx  ecx,WORD PTR [rdi+0xea]
  41061c:	mov    edx,DWORD PTR [rdi+0x20]
  41061f:	mov    rbx,rdi
  410622:	mov    rsi,QWORD PTR [rdi+0x18]
  410626:	call   4101d0 <flatcc_builder_create_struct@@Base>
  41062b:	test   eax,eax
  41062d:	mov    ebp,eax
  41062f:	jne    410640 <flatcc_builder_end_struct@@Base+0x40>
  410631:	add    rsp,0x8
  410635:	mov    eax,ebp
  410637:	pop    rbx
  410638:	pop    rbp
  410639:	ret    
  41063a:	nop    WORD PTR [rax+rax*1+0x0]
  410640:	mov    edx,DWORD PTR [rbx+0x20]
  410643:	mov    rdi,QWORD PTR [rbx+0x18]
  410647:	xor    esi,esi
  410649:	call   4040a0 <memset@plt>
  41064e:	mov    rax,QWORD PTR [rbx+0x30]
  410652:	mov    edi,DWORD PTR [rbx+0x70]
  410655:	mov    esi,DWORD PTR [rax]
  410657:	mov    edx,DWORD PTR [rax+0x8]
  41065a:	mov    ecx,DWORD PTR [rax+0x4]
  41065d:	mov    DWORD PTR [rbx+0x20],edx
  410660:	mov    rdx,rsi
  410663:	mov    DWORD PTR [rbx+0x28],esi
  410666:	add    rsi,QWORD PTR [rbx+0x68]
  41066a:	sub    edi,edx
  41066c:	cmp    ecx,edi
  41066e:	mov    edx,edi
  410670:	cmovb  edx,ecx
  410673:	mov    DWORD PTR [rbx+0x24],edx
  410676:	movzx  edx,WORD PTR [rbx+0xea]
  41067d:	cmp    dx,WORD PTR [rbx+0xe8]
  410684:	mov    QWORD PTR [rbx+0x18],rsi
  410688:	mov    DWORD PTR [rax+0x4],ecx
  41068b:	jbe    410694 <flatcc_builder_end_struct@@Base+0x94>
  41068d:	mov    WORD PTR [rbx+0xe8],dx
  410694:	movzx  edx,WORD PTR [rax+0xc]
  410698:	sub    rax,0x24
  41069c:	sub    DWORD PTR [rbx+0x104],0x1
  4106a3:	mov    QWORD PTR [rbx+0x30],rax
  4106a7:	mov    eax,ebp
  4106a9:	mov    WORD PTR [rbx+0xea],dx
  4106b0:	add    rsp,0x8
  4106b4:	pop    rbx
  4106b5:	pop    rbp
  4106b6:	ret    
  4106b7:	lea    rcx,[rip+0x9952]        # 41a010 <_IO_stdin_used@@Base+0x4010>
  4106be:	lea    rsi,[rip+0x8f8b]        # 419650 <_IO_stdin_used@@Base+0x3650>
  4106c5:	lea    rdi,[rip+0x9034]        # 419700 <_IO_stdin_used@@Base+0x3700>
  4106cc:	mov    edx,0x368
  4106d1:	call   404090 <__assert_fail@plt>
  4106d6:	nop    WORD PTR cs:[rax+rax*1+0x0]

00000000004106e0 <flatcc_builder_extend_vector@@Base>:
  4106e0:	push   rbp
  4106e1:	push   rbx
  4106e2:	mov    eax,esi
  4106e4:	sub    rsp,0x8
  4106e8:	mov    rdx,QWORD PTR [rdi+0x30]
  4106ec:	add    eax,DWORD PTR [rdx+0x14]
  4106ef:	setb   cl
  4106f2:	cmp    DWORD PTR [rdx+0x18],eax
  4106f5:	jb     41073d <flatcc_builder_extend_vector@@Base+0x5d>
  4106f7:	movzx  ecx,cl
  4106fa:	test   ecx,ecx
  4106fc:	jne    41073d <flatcc_builder_extend_vector@@Base+0x5d>
  4106fe:	imul   esi,DWORD PTR [rdx+0x10]
  410702:	mov    DWORD PTR [rdx+0x14],eax
  410705:	mov    ebp,DWORD PTR [rdi+0x20]
  410708:	mov    rbx,rdi
  41070b:	add    esi,ebp
  41070d:	cmp    esi,DWORD PTR [rdi+0x24]
  410710:	mov    DWORD PTR [rdi+0x20],esi
  410713:	jae    410728 <flatcc_builder_extend_vector@@Base+0x48>
  410715:	mov    rax,rbp
  410718:	add    rax,QWORD PTR [rbx+0x18]
  41071c:	add    rsp,0x8
  410720:	pop    rbx
  410721:	pop    rbp
  410722:	ret    
  410723:	nop    DWORD PTR [rax+rax*1+0x0]
  410728:	add    esi,0x1
  41072b:	mov    edx,0xfffffffc
  410730:	call   40f240 <time_struct_buffer@@Base+0xa0>
  410735:	test   eax,eax
  410737:	je     410715 <flatcc_builder_extend_vector@@Base+0x35>
  410739:	xor    eax,eax
  41073b:	jmp    41071c <flatcc_builder_extend_vector@@Base+0x3c>
  41073d:	call   404653 <posix_memalign@plt+0x523>
  410742:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  41074d:	nop    DWORD PTR [rax]

0000000000410750 <flatcc_builder_vector_push@@Base>:
  410750:	push   r13
  410752:	push   r12
  410754:	push   rbp
  410755:	push   rbx
  410756:	sub    rsp,0x8
  41075a:	mov    rax,QWORD PTR [rdi+0x30]
  41075e:	cmp    WORD PTR [rax+0xe],0x4
  410763:	jne    4107e4 <flatcc_builder_vector_push@@Base+0x94>
  410765:	mov    edx,DWORD PTR [rax+0x14]
  410768:	cmp    edx,DWORD PTR [rax+0x18]
  41076b:	ja     4107c5 <flatcc_builder_vector_push@@Base+0x75>
  41076d:	add    edx,0x1
  410770:	mov    r12d,DWORD PTR [rax+0x10]
  410774:	mov    rbx,rdi
  410777:	mov    DWORD PTR [rax+0x14],edx
  41077a:	mov    ebp,DWORD PTR [rdi+0x20]
  41077d:	mov    r13,rsi
  410780:	mov    rcx,rbp
  410783:	add    ecx,r12d
  410786:	cmp    ecx,DWORD PTR [rdi+0x24]
  410789:	mov    DWORD PTR [rdi+0x20],ecx
  41078c:	jae    4107b0 <flatcc_builder_vector_push@@Base+0x60>
  41078e:	add    rbp,QWORD PTR [rbx+0x18]
  410792:	je     4107a2 <flatcc_builder_vector_push@@Base+0x52>
  410794:	mov    edx,r12d
  410797:	mov    rsi,r13
  41079a:	mov    rdi,rbp
  41079d:	call   4040e0 <memcpy@plt>
  4107a2:	add    rsp,0x8
  4107a6:	mov    rax,rbp
  4107a9:	pop    rbx
  4107aa:	pop    rbp
  4107ab:	pop    r12
  4107ad:	pop    r13
  4107af:	ret    
  4107b0:	lea    esi,[rcx+0x1]
  4107b3:	mov    edx,0xfffffffc
  4107b8:	call   40f240 <time_struct_buffer@@Base+0xa0>
  4107bd:	test   eax,eax
  4107bf:	je     41078e <flatcc_builder_vector_push@@Base+0x3e>
  4107c1:	xor    ebp,ebp
  4107c3:	jmp    4107a2 <flatcc_builder_vector_push@@Base+0x52>
  4107c5:	lea    rcx,[rip+0x9804]        # 419fd0 <_IO_stdin_used@@Base+0x3fd0>
  4107cc:	lea    rsi,[rip+0x8e7d]        # 419650 <_IO_stdin_used@@Base+0x3650>
  4107d3:	lea    rdi,[rip+0x8f86]        # 419760 <_IO_stdin_used@@Base+0x3760>
  4107da:	mov    edx,0x38c
  4107df:	call   404090 <__assert_fail@plt>
  4107e4:	lea    rcx,[rip+0x97e5]        # 419fd0 <_IO_stdin_used@@Base+0x3fd0>
  4107eb:	lea    rsi,[rip+0x8e5e]        # 419650 <_IO_stdin_used@@Base+0x3650>
  4107f2:	lea    rdi,[rip+0x8f37]        # 419730 <_IO_stdin_used@@Base+0x3730>
  4107f9:	mov    edx,0x38b
  4107fe:	call   404090 <__assert_fail@plt>
  410803:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  41080e:	xchg   ax,ax

0000000000410810 <flatcc_builder_append_vector@@Base>:
  410810:	push   r13
  410812:	push   r12
  410814:	push   rbp
  410815:	push   rbx
  410816:	sub    rsp,0x8
  41081a:	mov    rax,QWORD PTR [rdi+0x30]
  41081e:	cmp    WORD PTR [rax+0xe],0x4
  410823:	jne    41089b <flatcc_builder_append_vector@@Base+0x8b>
  410825:	mov    r13,rsi
  410828:	mov    ecx,edx
  41082a:	xor    esi,esi
  41082c:	add    ecx,DWORD PTR [rax+0x14]
  41082f:	setb   sil
  410833:	cmp    DWORD PTR [rax+0x18],ecx
  410836:	jb     410896 <flatcc_builder_append_vector@@Base+0x86>
  410838:	test   esi,esi
  41083a:	jne    410896 <flatcc_builder_append_vector@@Base+0x86>
  41083c:	mov    ebx,DWORD PTR [rax+0x10]
  41083f:	mov    DWORD PTR [rax+0x14],ecx
  410842:	mov    rbp,rdi
  410845:	mov    r12d,DWORD PTR [rdi+0x20]
  410849:	imul   ebx,edx
  41084c:	mov    rdx,r12
  41084f:	add    edx,ebx
  410851:	cmp    edx,DWORD PTR [rdi+0x24]
  410854:	mov    DWORD PTR [rdi+0x20],edx
  410857:	jae    410880 <flatcc_builder_append_vector@@Base+0x70>
  410859:	add    r12,QWORD PTR [rbp+0x18]
  41085d:	je     41086c <flatcc_builder_append_vector@@Base+0x5c>
  41085f:	mov    edx,ebx
  410861:	mov    rsi,r13
  410864:	mov    rdi,r12
  410867:	call   4040e0 <memcpy@plt>
  41086c:	add    rsp,0x8
  410870:	mov    rax,r12
  410873:	pop    rbx
  410874:	pop    rbp
  410875:	pop    r12
  410877:	pop    r13
  410879:	ret    
  41087a:	nop    WORD PTR [rax+rax*1+0x0]
  410880:	lea    esi,[rdx+0x1]
  410883:	mov    edx,0xfffffffc
  410888:	call   40f240 <time_struct_buffer@@Base+0xa0>
  41088d:	test   eax,eax
  41088f:	je     410859 <flatcc_builder_append_vector@@Base+0x49>
  410891:	xor    r12d,r12d
  410894:	jmp    41086c <flatcc_builder_append_vector@@Base+0x5c>
  410896:	call   404653 <posix_memalign@plt+0x523>
  41089b:	lea    rcx,[rip+0x970e]        # 419fb0 <_IO_stdin_used@@Base+0x3fb0>
  4108a2:	lea    rsi,[rip+0x8da7]        # 419650 <_IO_stdin_used@@Base+0x3650>
  4108a9:	lea    rdi,[rip+0x8e80]        # 419730 <_IO_stdin_used@@Base+0x3730>
  4108b0:	mov    edx,0x393
  4108b5:	call   404090 <__assert_fail@plt>
  4108ba:	nop    WORD PTR [rax+rax*1+0x0]

00000000004108c0 <flatcc_builder_extend_offset_vector@@Base>:
  4108c0:	push   rbp
  4108c1:	push   rbx
  4108c2:	xor    edx,edx
  4108c4:	mov    ecx,esi
  4108c6:	sub    rsp,0x8
  4108ca:	mov    rax,QWORD PTR [rdi+0x30]
  4108ce:	add    ecx,DWORD PTR [rax+0x14]
  4108d1:	setb   dl
  4108d4:	test   edx,edx
  4108d6:	jne    41091d <flatcc_builder_extend_offset_vector@@Base+0x5d>
  4108d8:	cmp    ecx,0x3fffffff
  4108de:	ja     41091d <flatcc_builder_extend_offset_vector@@Base+0x5d>
  4108e0:	mov    DWORD PTR [rax+0x14],ecx
  4108e3:	mov    ebp,DWORD PTR [rdi+0x20]
  4108e6:	mov    rbx,rdi
  4108e9:	lea    eax,[rbp+rsi*4+0x0]
  4108ed:	cmp    eax,DWORD PTR [rdi+0x24]
  4108f0:	mov    DWORD PTR [rdi+0x20],eax
  4108f3:	jae    410908 <flatcc_builder_extend_offset_vector@@Base+0x48>
  4108f5:	mov    rax,rbp
  4108f8:	add    rax,QWORD PTR [rbx+0x18]
  4108fc:	add    rsp,0x8
  410900:	pop    rbx
  410901:	pop    rbp
  410902:	ret    
  410903:	nop    DWORD PTR [rax+rax*1+0x0]
  410908:	lea    esi,[rax+0x1]
  41090b:	mov    edx,0xfffffffc
  410910:	call   40f240 <time_struct_buffer@@Base+0xa0>
  410915:	test   eax,eax
  410917:	je     4108f5 <flatcc_builder_extend_offset_vector@@Base+0x35>
  410919:	xor    eax,eax
  41091b:	jmp    4108fc <flatcc_builder_extend_offset_vector@@Base+0x3c>
  41091d:	call   404653 <posix_memalign@plt+0x523>
  410922:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  41092d:	nop    DWORD PTR [rax]

0000000000410930 <flatcc_builder_offset_vector_push@@Base>:
  410930:	push   r12
  410932:	push   rbp
  410933:	push   rbx
  410934:	mov    rdx,QWORD PTR [rdi+0x30]
  410938:	cmp    WORD PTR [rdx+0xe],0x5
  41093d:	jne    410990 <flatcc_builder_offset_vector_push@@Base+0x60>
  41093f:	mov    eax,DWORD PTR [rdx+0x14]
  410942:	cmp    eax,0x3fffffff
  410947:	je     410989 <flatcc_builder_offset_vector_push@@Base+0x59>
  410949:	add    eax,0x1
  41094c:	mov    rbp,rdi
  41094f:	mov    r12d,esi
  410952:	mov    DWORD PTR [rdx+0x14],eax
  410955:	mov    ebx,DWORD PTR [rdi+0x20]
  410958:	lea    edx,[rbx+0x4]
  41095b:	cmp    edx,DWORD PTR [rdi+0x24]
  41095e:	mov    DWORD PTR [rdi+0x20],edx
  410961:	jae    410978 <flatcc_builder_offset_vector_push@@Base+0x48>
  410963:	mov    rax,rbx
  410966:	add    rax,QWORD PTR [rbp+0x18]
  41096a:	je     410989 <flatcc_builder_offset_vector_push@@Base+0x59>
  41096c:	mov    DWORD PTR [rax],r12d
  41096f:	pop    rbx
  410970:	pop    rbp
  410971:	pop    r12
  410973:	ret    
  410974:	nop    DWORD PTR [rax+0x0]
  410978:	lea    esi,[rbx+0x5]
  41097b:	mov    edx,0xfffffffc
  410980:	call   40f240 <time_struct_buffer@@Base+0xa0>
  410985:	test   eax,eax
  410987:	je     410963 <flatcc_builder_offset_vector_push@@Base+0x33>
  410989:	pop    rbx
  41098a:	xor    eax,eax
  41098c:	pop    rbp
  41098d:	pop    r12
  41098f:	ret    
  410990:	lea    rcx,[rip+0x95e9]        # 419f80 <_IO_stdin_used@@Base+0x3f80>
  410997:	lea    rsi,[rip+0x8cb2]        # 419650 <_IO_stdin_used@@Base+0x3650>
  41099e:	lea    rdi,[rip+0x8dfb]        # 4197a0 <_IO_stdin_used@@Base+0x37a0>
  4109a5:	mov    edx,0x3a6
  4109aa:	call   404090 <__assert_fail@plt>
  4109af:	nop

00000000004109b0 <flatcc_builder_append_offset_vector@@Base>:
  4109b0:	push   r13
  4109b2:	push   r12
  4109b4:	push   rbp
  4109b5:	push   rbx
  4109b6:	sub    rsp,0x8
  4109ba:	mov    rax,QWORD PTR [rdi+0x30]
  4109be:	cmp    WORD PTR [rax+0xe],0x5
  4109c3:	jne    410a3b <flatcc_builder_append_offset_vector@@Base+0x8b>
  4109c5:	mov    r13,rsi
  4109c8:	mov    ecx,edx
  4109ca:	xor    esi,esi
  4109cc:	add    ecx,DWORD PTR [rax+0x14]
  4109cf:	setb   sil
  4109d3:	test   esi,esi
  4109d5:	jne    410a36 <flatcc_builder_append_offset_vector@@Base+0x86>
  4109d7:	cmp    ecx,0x3fffffff
  4109dd:	ja     410a36 <flatcc_builder_append_offset_vector@@Base+0x86>
  4109df:	mov    DWORD PTR [rax+0x14],ecx
  4109e2:	mov    r12d,DWORD PTR [rdi+0x20]
  4109e6:	lea    ebx,[rdx*4+0x0]
  4109ed:	mov    rbp,rdi
  4109f0:	mov    rdx,r12
  4109f3:	add    edx,ebx
  4109f5:	cmp    edx,DWORD PTR [rdi+0x24]
  4109f8:	mov    DWORD PTR [rdi+0x20],edx
  4109fb:	jae    410a20 <flatcc_builder_append_offset_vector@@Base+0x70>
  4109fd:	add    r12,QWORD PTR [rbp+0x18]
  410a01:	je     410a10 <flatcc_builder_append_offset_vector@@Base+0x60>
  410a03:	mov    edx,ebx
  410a05:	mov    rsi,r13
  410a08:	mov    rdi,r12
  410a0b:	call   4040e0 <memcpy@plt>
  410a10:	add    rsp,0x8
  410a14:	mov    rax,r12
  410a17:	pop    rbx
  410a18:	pop    rbp
  410a19:	pop    r12
  410a1b:	pop    r13
  410a1d:	ret    
  410a1e:	xchg   ax,ax
  410a20:	lea    esi,[rdx+0x1]
  410a23:	mov    edx,0xfffffffc
  410a28:	call   40f240 <time_struct_buffer@@Base+0xa0>
  410a2d:	test   eax,eax
  410a2f:	je     4109fd <flatcc_builder_append_offset_vector@@Base+0x4d>
  410a31:	xor    r12d,r12d
  410a34:	jmp    410a10 <flatcc_builder_append_offset_vector@@Base+0x60>
  410a36:	call   404653 <posix_memalign@plt+0x523>
  410a3b:	lea    rcx,[rip+0x94fe]        # 419f40 <_IO_stdin_used@@Base+0x3f40>
  410a42:	lea    rsi,[rip+0x8c07]        # 419650 <_IO_stdin_used@@Base+0x3650>
  410a49:	lea    rdi,[rip+0x8d50]        # 4197a0 <_IO_stdin_used@@Base+0x37a0>
  410a50:	mov    edx,0x3b4
  410a55:	call   404090 <__assert_fail@plt>
  410a5a:	nop    WORD PTR [rax+rax*1+0x0]

0000000000410a60 <flatcc_builder_extend_string@@Base>:
  410a60:	push   rbp
  410a61:	push   rbx
  410a62:	sub    rsp,0x8
  410a66:	mov    rax,QWORD PTR [rdi+0x30]
  410a6a:	cmp    WORD PTR [rax+0xe],0x6
  410a6f:	jne    410aba <flatcc_builder_extend_string@@Base+0x5a>
  410a71:	mov    edx,esi
  410a73:	add    edx,DWORD PTR [rax+0x14]
  410a76:	jb     410ab5 <flatcc_builder_extend_string@@Base+0x55>
  410a78:	mov    DWORD PTR [rax+0x14],edx
  410a7b:	mov    ebp,DWORD PTR [rdi+0x20]
  410a7e:	mov    rbx,rdi
  410a81:	add    esi,ebp
  410a83:	cmp    esi,DWORD PTR [rdi+0x24]
  410a86:	mov    DWORD PTR [rdi+0x20],esi
  410a89:	jae    410aa0 <flatcc_builder_extend_string@@Base+0x40>
  410a8b:	mov    rax,rbp
  410a8e:	add    rax,QWORD PTR [rbx+0x18]
  410a92:	add    rsp,0x8
  410a96:	pop    rbx
  410a97:	pop    rbp
  410a98:	ret    
  410a99:	nop    DWORD PTR [rax+0x0]
  410aa0:	add    esi,0x1
  410aa3:	mov    edx,0xfffffffc
  410aa8:	call   40f240 <time_struct_buffer@@Base+0xa0>
  410aad:	test   eax,eax
  410aaf:	je     410a8b <flatcc_builder_extend_string@@Base+0x2b>
  410ab1:	xor    eax,eax
  410ab3:	jmp    410a92 <flatcc_builder_extend_string@@Base+0x32>
  410ab5:	call   404653 <posix_memalign@plt+0x523>
  410aba:	lea    rcx,[rip+0x944f]        # 419f10 <_IO_stdin_used@@Base+0x3f10>
  410ac1:	lea    rsi,[rip+0x8b88]        # 419650 <_IO_stdin_used@@Base+0x3650>
  410ac8:	lea    rdi,[rip+0x8d09]        # 4197d8 <_IO_stdin_used@@Base+0x37d8>
  410acf:	mov    edx,0x3bd
  410ad4:	call   404090 <__assert_fail@plt>
  410ad9:	nop    DWORD PTR [rax+0x0]

0000000000410ae0 <flatcc_builder_append_string@@Base>:
  410ae0:	push   r13
  410ae2:	push   r12
  410ae4:	push   rbp
  410ae5:	push   rbx
  410ae6:	sub    rsp,0x8
  410aea:	mov    rax,QWORD PTR [rdi+0x30]
  410aee:	cmp    WORD PTR [rax+0xe],0x6
  410af3:	jne    410b5b <flatcc_builder_append_string@@Base+0x7b>
  410af5:	mov    rbp,rdx
  410af8:	add    edx,DWORD PTR [rax+0x14]
  410afb:	jb     410b56 <flatcc_builder_append_string@@Base+0x76>
  410afd:	mov    DWORD PTR [rax+0x14],edx
  410b00:	mov    r12d,DWORD PTR [rdi+0x20]
  410b04:	mov    rbx,rdi
  410b07:	mov    r13,rsi
  410b0a:	mov    rdx,r12
  410b0d:	add    edx,ebp
  410b0f:	cmp    edx,DWORD PTR [rdi+0x24]
  410b12:	mov    DWORD PTR [rdi+0x20],edx
  410b15:	jae    410b40 <flatcc_builder_append_string@@Base+0x60>
  410b17:	add    r12,QWORD PTR [rbx+0x18]
  410b1b:	je     410b2a <flatcc_builder_append_string@@Base+0x4a>
  410b1d:	mov    edx,ebp
  410b1f:	mov    rsi,r13
  410b22:	mov    rdi,r12
  410b25:	call   4040e0 <memcpy@plt>
  410b2a:	add    rsp,0x8
  410b2e:	mov    rax,r12
  410b31:	pop    rbx
  410b32:	pop    rbp
  410b33:	pop    r12
  410b35:	pop    r13
  410b37:	ret    
  410b38:	nop    DWORD PTR [rax+rax*1+0x0]
  410b40:	lea    esi,[rdx+0x1]
  410b43:	mov    edx,0xfffffffc
  410b48:	call   40f240 <time_struct_buffer@@Base+0xa0>
  410b4d:	test   eax,eax
  410b4f:	je     410b17 <flatcc_builder_append_string@@Base+0x37>
  410b51:	xor    r12d,r12d
  410b54:	jmp    410b2a <flatcc_builder_append_string@@Base+0x4a>
  410b56:	call   404653 <posix_memalign@plt+0x523>
  410b5b:	lea    rcx,[rip+0x938e]        # 419ef0 <_IO_stdin_used@@Base+0x3ef0>
  410b62:	lea    rsi,[rip+0x8ae7]        # 419650 <_IO_stdin_used@@Base+0x3650>
  410b69:	lea    rdi,[rip+0x8c68]        # 4197d8 <_IO_stdin_used@@Base+0x37d8>
  410b70:	mov    edx,0x3c6
  410b75:	call   404090 <__assert_fail@plt>
  410b7a:	nop    WORD PTR [rax+rax*1+0x0]

0000000000410b80 <flatcc_builder_append_string_str@@Base>:
  410b80:	push   rbp
  410b81:	push   rbx
  410b82:	mov    rbp,rdi
  410b85:	mov    rdi,rsi
  410b88:	mov    rbx,rsi
  410b8b:	sub    rsp,0x8
  410b8f:	call   404060 <strlen@plt>
  410b94:	add    rsp,0x8
  410b98:	mov    rsi,rbx
  410b9b:	mov    rdi,rbp
  410b9e:	pop    rbx
  410b9f:	pop    rbp
  410ba0:	mov    rdx,rax
  410ba3:	jmp    410ae0 <flatcc_builder_append_string@@Base>
  410ba8:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000410bb0 <flatcc_builder_append_string_strn@@Base>:
  410bb0:	push   r12
  410bb2:	push   rbp
  410bb3:	mov    rbp,rsi
  410bb6:	push   rbx
  410bb7:	mov    r12,rdi
  410bba:	xor    esi,esi
  410bbc:	mov    rdi,rbp
  410bbf:	mov    rbx,rdx
  410bc2:	call   4040b0 <memchr@plt>
  410bc7:	mov    rdx,rax
  410bca:	mov    rsi,rbp
  410bcd:	mov    rdi,r12
  410bd0:	sub    rdx,rbp
  410bd3:	test   rax,rax
  410bd6:	cmovne rbx,rdx
  410bda:	mov    rdx,rbx
  410bdd:	pop    rbx
  410bde:	pop    rbp
  410bdf:	pop    r12
  410be1:	jmp    410ae0 <flatcc_builder_append_string@@Base>
  410be6:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000410bf0 <flatcc_builder_truncate_vector@@Base>:
  410bf0:	sub    rsp,0x8
  410bf4:	mov    rax,QWORD PTR [rdi+0x30]
  410bf8:	cmp    WORD PTR [rax+0xe],0x4
  410bfd:	jne    410c33 <flatcc_builder_truncate_vector@@Base+0x43>
  410bff:	mov    ecx,DWORD PTR [rax+0x14]
  410c02:	cmp    rcx,rsi
  410c05:	mov    rdx,rcx
  410c08:	jb     410c52 <flatcc_builder_truncate_vector@@Base+0x62>
  410c0a:	sub    edx,esi
  410c0c:	imul   esi,DWORD PTR [rax+0x10]
  410c10:	mov    DWORD PTR [rax+0x14],edx
  410c13:	mov    eax,DWORD PTR [rdi+0x20]
  410c16:	mov    rcx,QWORD PTR [rdi+0x18]
  410c1a:	sub    eax,esi
  410c1c:	mov    edx,esi
  410c1e:	xor    esi,esi
  410c20:	mov    DWORD PTR [rdi+0x20],eax
  410c23:	lea    rdi,[rcx+rax*1]
  410c27:	call   4040a0 <memset@plt>
  410c2c:	xor    eax,eax
  410c2e:	add    rsp,0x8
  410c32:	ret    
  410c33:	lea    rcx,[rip+0x9296]        # 419ed0 <_IO_stdin_used@@Base+0x3ed0>
  410c3a:	lea    rsi,[rip+0x8a0f]        # 419650 <_IO_stdin_used@@Base+0x3650>
  410c41:	lea    rdi,[rip+0x8ae8]        # 419730 <_IO_stdin_used@@Base+0x3730>
  410c48:	mov    edx,0x3d9
  410c4d:	call   404090 <__assert_fail@plt>
  410c52:	lea    rcx,[rip+0x9277]        # 419ed0 <_IO_stdin_used@@Base+0x3ed0>
  410c59:	lea    rsi,[rip+0x89f0]        # 419650 <_IO_stdin_used@@Base+0x3650>
  410c60:	lea    rdi,[rip+0x8ba1]        # 419808 <_IO_stdin_used@@Base+0x3808>
  410c67:	mov    edx,0x3da
  410c6c:	call   404090 <__assert_fail@plt>
  410c71:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  410c7c:	nop    DWORD PTR [rax+0x0]

0000000000410c80 <flatcc_builder_truncate_offset_vector@@Base>:
  410c80:	sub    rsp,0x8
  410c84:	mov    rax,QWORD PTR [rdi+0x30]
  410c88:	cmp    WORD PTR [rax+0xe],0x5
  410c8d:	jne    410cbf <flatcc_builder_truncate_offset_vector@@Base+0x3f>
  410c8f:	mov    edx,DWORD PTR [rax+0x14]
  410c92:	cmp    edx,esi
  410c94:	jb     410cde <flatcc_builder_truncate_offset_vector@@Base+0x5e>
  410c96:	sub    edx,esi
  410c98:	imul   esi,DWORD PTR [rax+0x10]
  410c9c:	mov    DWORD PTR [rax+0x14],edx
  410c9f:	mov    eax,DWORD PTR [rdi+0x20]
  410ca2:	mov    rcx,QWORD PTR [rdi+0x18]
  410ca6:	sub    eax,esi
  410ca8:	mov    edx,esi
  410caa:	xor    esi,esi
  410cac:	mov    DWORD PTR [rdi+0x20],eax
  410caf:	lea    rdi,[rcx+rax*1]
  410cb3:	call   4040a0 <memset@plt>
  410cb8:	xor    eax,eax
  410cba:	add    rsp,0x8
  410cbe:	ret    
  410cbf:	lea    rcx,[rip+0x91da]        # 419ea0 <_IO_stdin_used@@Base+0x3ea0>
  410cc6:	lea    rsi,[rip+0x8983]        # 419650 <_IO_stdin_used@@Base+0x3650>
  410ccd:	lea    rdi,[rip+0x8acc]        # 4197a0 <_IO_stdin_used@@Base+0x37a0>
  410cd4:	mov    edx,0x3e2
  410cd9:	call   404090 <__assert_fail@plt>
  410cde:	lea    rcx,[rip+0x91bb]        # 419ea0 <_IO_stdin_used@@Base+0x3ea0>
  410ce5:	lea    rsi,[rip+0x8964]        # 419650 <_IO_stdin_used@@Base+0x3650>
  410cec:	lea    rdi,[rip+0x8b3d]        # 419830 <_IO_stdin_used@@Base+0x3830>
  410cf3:	mov    edx,0x3e3
  410cf8:	call   404090 <__assert_fail@plt>
  410cfd:	nop    DWORD PTR [rax]

0000000000410d00 <flatcc_builder_truncate_string@@Base>:
  410d00:	sub    rsp,0x8
  410d04:	mov    rdx,QWORD PTR [rdi+0x30]
  410d08:	cmp    WORD PTR [rdx+0xe],0x6
  410d0d:	jne    410d40 <flatcc_builder_truncate_string@@Base+0x40>
  410d0f:	mov    ecx,DWORD PTR [rdx+0x14]
  410d12:	cmp    rcx,rsi
  410d15:	mov    rax,rcx
  410d18:	jb     410d5f <flatcc_builder_truncate_string@@Base+0x5f>
  410d1a:	sub    eax,esi
  410d1c:	mov    DWORD PTR [rdx+0x14],eax
  410d1f:	mov    eax,DWORD PTR [rdi+0x20]
  410d22:	mov    rdx,QWORD PTR [rdi+0x18]
  410d26:	sub    eax,esi
  410d28:	mov    DWORD PTR [rdi+0x20],eax
  410d2b:	lea    rdi,[rdx+rax*1]
  410d2f:	mov    rdx,rsi
  410d32:	xor    esi,esi
  410d34:	call   4040a0 <memset@plt>
  410d39:	xor    eax,eax
  410d3b:	add    rsp,0x8
  410d3f:	ret    
  410d40:	lea    rcx,[rip+0x9139]        # 419e80 <_IO_stdin_used@@Base+0x3e80>
  410d47:	lea    rsi,[rip+0x8902]        # 419650 <_IO_stdin_used@@Base+0x3650>
  410d4e:	lea    rdi,[rip+0x8a83]        # 4197d8 <_IO_stdin_used@@Base+0x37d8>
  410d55:	mov    edx,0x3eb
  410d5a:	call   404090 <__assert_fail@plt>
  410d5f:	lea    rcx,[rip+0x911a]        # 419e80 <_IO_stdin_used@@Base+0x3e80>
  410d66:	lea    rsi,[rip+0x88e3]        # 419650 <_IO_stdin_used@@Base+0x3650>
  410d6d:	lea    rdi,[rip+0x8afc]        # 419870 <_IO_stdin_used@@Base+0x3870>
  410d74:	mov    edx,0x3ec
  410d79:	call   404090 <__assert_fail@plt>
  410d7e:	xchg   ax,ax

0000000000410d80 <flatcc_builder_start_vector@@Base>:
  410d80:	push   r12
  410d82:	cmp    dx,0x4
  410d86:	push   rbp
  410d87:	mov    rbp,rsi
  410d8a:	mov    esi,0x4
  410d8f:	push   rbx
  410d90:	cmovb  edx,esi
  410d93:	mov    rbx,rdi
  410d96:	mov    r12,rcx
  410d99:	movzx  esi,dx
  410d9c:	call   40f500 <flatcc_builder_default_alloc@@Base+0x260>
  410da1:	test   eax,eax
  410da3:	jne    410df0 <flatcc_builder_start_vector@@Base+0x70>
  410da5:	mov    rsi,QWORD PTR [rbx+0x30]
  410da9:	mov    edx,0x4
  410dae:	mov    DWORD PTR [rsi+0x10],ebp
  410db1:	mov    DWORD PTR [rsi+0x14],0x0
  410db8:	mov    DWORD PTR [rsi+0x18],r12d
  410dbc:	mov    WORD PTR [rsi+0xe],dx
  410dc0:	mov    edx,DWORD PTR [rbx+0x28]
  410dc3:	mov    rcx,rdx
  410dc6:	add    rdx,QWORD PTR [rbx+0x68]
  410dca:	mov    QWORD PTR [rbx+0x18],rdx
  410dce:	mov    edx,DWORD PTR [rbx+0x70]
  410dd1:	sub    edx,ecx
  410dd3:	mov    ecx,0xfffffffc
  410dd8:	cmp    edx,ecx
  410dda:	cmova  edx,ecx
  410ddd:	mov    DWORD PTR [rbx+0x24],edx
  410de0:	mov    DWORD PTR [rsi+0x4],ecx
  410de3:	pop    rbx
  410de4:	pop    rbp
  410de5:	pop    r12
  410de7:	ret    
  410de8:	nop    DWORD PTR [rax+rax*1+0x0]
  410df0:	mov    eax,0xffffffff
  410df5:	jmp    410de3 <flatcc_builder_start_vector@@Base+0x63>
  410df7:	nop    WORD PTR [rax+rax*1+0x0]

0000000000410e00 <flatcc_builder_start_offset_vector@@Base>:
  410e00:	push   rbx
  410e01:	mov    esi,0x4
  410e06:	mov    rbx,rdi
  410e09:	call   40f500 <flatcc_builder_default_alloc@@Base+0x260>
  410e0e:	test   eax,eax
  410e10:	jne    410e58 <flatcc_builder_start_offset_vector@@Base+0x58>
  410e12:	mov    rcx,QWORD PTR [rbx+0x30]
  410e16:	mov    edx,0x5
  410e1b:	mov    DWORD PTR [rcx+0x10],0x4
  410e22:	mov    DWORD PTR [rcx+0x14],0x0
  410e29:	mov    WORD PTR [rcx+0xe],dx
  410e2d:	mov    edx,DWORD PTR [rbx+0x28]
  410e30:	mov    rsi,rdx
  410e33:	add    rdx,QWORD PTR [rbx+0x68]
  410e37:	mov    QWORD PTR [rbx+0x18],rdx
  410e3b:	mov    edx,DWORD PTR [rbx+0x70]
  410e3e:	sub    edx,esi
  410e40:	mov    esi,0xfffffffc
  410e45:	cmp    edx,esi
  410e47:	cmova  edx,esi
  410e4a:	mov    DWORD PTR [rbx+0x24],edx
  410e4d:	mov    DWORD PTR [rcx+0x4],esi
  410e50:	pop    rbx
  410e51:	ret    
  410e52:	nop    WORD PTR [rax+rax*1+0x0]
  410e58:	mov    eax,0xffffffff
  410e5d:	pop    rbx
  410e5e:	ret    
  410e5f:	nop

0000000000410e60 <flatcc_builder_start_string@@Base>:
  410e60:	push   rbx
  410e61:	mov    esi,0x1
  410e66:	mov    rbx,rdi
  410e69:	call   40f500 <flatcc_builder_default_alloc@@Base+0x260>
  410e6e:	test   eax,eax
  410e70:	jne    410eb8 <flatcc_builder_start_string@@Base+0x58>
  410e72:	mov    rcx,QWORD PTR [rbx+0x30]
  410e76:	mov    edx,0x6
  410e7b:	mov    DWORD PTR [rcx+0x10],0x1
  410e82:	mov    DWORD PTR [rcx+0x14],0x0
  410e89:	mov    WORD PTR [rcx+0xe],dx
  410e8d:	mov    edx,DWORD PTR [rbx+0x28]
  410e90:	mov    rsi,rdx
  410e93:	add    rdx,QWORD PTR [rbx+0x68]
  410e97:	mov    QWORD PTR [rbx+0x18],rdx
  410e9b:	mov    edx,DWORD PTR [rbx+0x70]
  410e9e:	sub    edx,esi
  410ea0:	mov    esi,0xfffffffc
  410ea5:	cmp    edx,esi
  410ea7:	cmova  edx,esi
  410eaa:	mov    DWORD PTR [rbx+0x24],edx
  410ead:	mov    DWORD PTR [rcx+0x4],esi
  410eb0:	pop    rbx
  410eb1:	ret    
  410eb2:	nop    WORD PTR [rax+rax*1+0x0]
  410eb8:	mov    eax,0xffffffff
  410ebd:	pop    rbx
  410ebe:	ret    
  410ebf:	nop

0000000000410ec0 <flatcc_builder_reserve_table@@Base>:
  410ec0:	test   esi,esi
  410ec2:	push   r12
  410ec4:	push   rbp
  410ec5:	push   rbx
  410ec6:	js     410f7f <flatcc_builder_reserve_table@@Base+0xbf>
  410ecc:	mov    rax,QWORD PTR [rdi+0x30]
  410ed0:	lea    r12d,[rsi+rsi*1+0x4]
  410ed5:	mov    rbx,rdi
  410ed8:	movzx  edx,WORD PTR [rax+0x1c]
  410edc:	mov    eax,DWORD PTR [rax+0x10]
  410edf:	lea    ebp,[rax+rdx*2]
  410ee2:	mov    edx,r12d
  410ee5:	add    rdx,rbp
  410ee8:	cmp    rdx,QWORD PTR [rdi+0x60]
  410eec:	ja     410f30 <flatcc_builder_reserve_table@@Base+0x70>
  410eee:	add    rbp,QWORD PTR [rbx+0x58]
  410ef2:	je     410f70 <flatcc_builder_reserve_table@@Base+0xb0>
  410ef4:	mov    rax,QWORD PTR [rbx+0x30]
  410ef8:	add    rbp,0x4
  410efc:	lea    edx,[r12-0x3]
  410f01:	mov    QWORD PTR [rbx+0x8],rbp
  410f05:	mov    ebp,DWORD PTR [rax+0x14]
  410f08:	add    rdx,rbp
  410f0b:	cmp    rdx,QWORD PTR [rbx+0x90]
  410f12:	ja     410f50 <flatcc_builder_reserve_table@@Base+0x90>
  410f14:	add    rbp,QWORD PTR [rbx+0x88]
  410f1b:	xor    eax,eax
  410f1d:	test   rbp,rbp
  410f20:	mov    QWORD PTR [rbx],rbp
  410f23:	sete   al
  410f26:	neg    eax
  410f28:	pop    rbx
  410f29:	pop    rbp
  410f2a:	pop    r12
  410f2c:	ret    
  410f2d:	nop    DWORD PTR [rax]
  410f30:	lea    rsi,[rdi+0x58]
  410f34:	xor    r8d,r8d
  410f37:	mov    rdi,QWORD PTR [rdi+0x40]
  410f3b:	mov    ecx,0x1
  410f40:	call   QWORD PTR [rbx+0x50]
  410f43:	test   eax,eax
  410f45:	je     410eee <flatcc_builder_reserve_table@@Base+0x2e>
  410f47:	call   4045ea <posix_memalign@plt+0x4ba>
  410f4c:	nop    DWORD PTR [rax+0x0]
  410f50:	xor    ecx,ecx
  410f52:	lea    rsi,[rbx+0x88]
  410f59:	mov    rdi,QWORD PTR [rbx+0x40]
  410f5d:	mov    r8d,0x3
  410f63:	call   QWORD PTR [rbx+0x50]
  410f66:	test   eax,eax
  410f68:	je     410f14 <flatcc_builder_reserve_table@@Base+0x54>
  410f6a:	jmp    410f47 <flatcc_builder_reserve_table@@Base+0x87>
  410f6c:	nop    DWORD PTR [rax+0x0]
  410f70:	mov    QWORD PTR [rbx+0x8],0x0
  410f78:	mov    eax,0xffffffff
  410f7d:	jmp    410f28 <flatcc_builder_reserve_table@@Base+0x68>
  410f7f:	lea    rcx,[rip+0x8eda]        # 419e60 <_IO_stdin_used@@Base+0x3e60>
  410f86:	lea    rsi,[rip+0x86c3]        # 419650 <_IO_stdin_used@@Base+0x3650>
  410f8d:	lea    rdi,[rip+0x8aaf]        # 419a43 <_IO_stdin_used@@Base+0x3a43>
  410f94:	mov    edx,0x429
  410f99:	call   404090 <__assert_fail@plt>
  410f9e:	xchg   ax,ax

0000000000410fa0 <flatcc_builder_start_table@@Base>:
  410fa0:	push   r13
  410fa2:	push   r12
  410fa4:	mov    r12d,esi
  410fa7:	push   rbp
  410fa8:	push   rbx
  410fa9:	mov    esi,0x4
  410fae:	mov    rbx,rdi
  410fb1:	sub    rsp,0x8
  410fb5:	call   40f500 <flatcc_builder_default_alloc@@Base+0x260>
  410fba:	test   eax,eax
  410fbc:	jne    4110f0 <flatcc_builder_start_table@@Base+0x150>
  410fc2:	mov    rcx,QWORD PTR [rbx+0x8]
  410fc6:	mov    ebp,eax
  410fc8:	mov    rax,QWORD PTR [rbx+0x58]
  410fcc:	mov    rdx,QWORD PTR [rbx+0x30]
  410fd0:	xor    edi,edi
  410fd2:	mov    r8d,0x3
  410fd8:	sub    rcx,rax
  410fdb:	mov    DWORD PTR [rdx+0x10],ecx
  410fde:	mov    rsi,QWORD PTR [rbx]
  410fe1:	sub    rsi,QWORD PTR [rbx+0x88]
  410fe8:	mov    DWORD PTR [rdx+0x14],esi
  410feb:	mov    esi,DWORD PTR [rbx+0x14]
  410fee:	mov    DWORD PTR [rdx+0x18],esi
  410ff1:	movzx  esi,WORD PTR [rbx+0x10]
  410ff5:	mov    WORD PTR [rdx+0x1c],si
  410ff9:	lea    r13d,[rcx+rsi*2]
  410ffd:	mov    DWORD PTR [rbx+0x14],0x2f693b52
  411004:	mov    WORD PTR [rbx+0x10],di
  411008:	mov    WORD PTR [rdx+0xe],r8w
  41100d:	lea    edx,[r12+r12*1+0x4]
  411012:	add    rdx,r13
  411015:	cmp    rdx,QWORD PTR [rbx+0x60]
  411019:	ja     411098 <flatcc_builder_start_table@@Base+0xf8>
  41101b:	add    rax,r13
  41101e:	je     4110e8 <flatcc_builder_start_table@@Base+0x148>
  411024:	add    rax,0x4
  411028:	lea    edx,[r12+r12*1+0x1]
  41102d:	mov    QWORD PTR [rbx+0x8],rax
  411031:	mov    rax,QWORD PTR [rbx+0x30]
  411035:	mov    r13d,DWORD PTR [rax+0x14]
  411039:	add    rdx,r13
  41103c:	cmp    rdx,QWORD PTR [rbx+0x90]
  411043:	ja     4110c0 <flatcc_builder_start_table@@Base+0x120>
  411045:	add    r13,QWORD PTR [rbx+0x88]
  41104c:	test   r13,r13
  41104f:	mov    QWORD PTR [rbx],r13
  411052:	je     4110f0 <flatcc_builder_start_table@@Base+0x150>
  411058:	mov    eax,DWORD PTR [rbx+0x28]
  41105b:	mov    rdx,rax
  41105e:	add    rax,QWORD PTR [rbx+0x68]
  411062:	mov    QWORD PTR [rbx+0x18],rax
  411066:	mov    eax,DWORD PTR [rbx+0x70]
  411069:	sub    eax,edx
  41106b:	mov    edx,0xfffc
  411070:	cmp    eax,0xfffc
  411075:	cmova  eax,edx
  411078:	mov    DWORD PTR [rbx+0x24],eax
  41107b:	mov    rax,QWORD PTR [rbx+0x30]
  41107f:	mov    DWORD PTR [rax+0x4],0xfffc
  411086:	add    rsp,0x8
  41108a:	mov    eax,ebp
  41108c:	pop    rbx
  41108d:	pop    rbp
  41108e:	pop    r12
  411090:	pop    r13
  411092:	ret    
  411093:	nop    DWORD PTR [rax+rax*1+0x0]
  411098:	xor    r8d,r8d
  41109b:	lea    rsi,[rbx+0x58]
  41109f:	mov    rdi,QWORD PTR [rbx+0x40]
  4110a3:	mov    ecx,0x1
  4110a8:	call   QWORD PTR [rbx+0x50]
  4110ab:	test   eax,eax
  4110ad:	jne    4110de <flatcc_builder_start_table@@Base+0x13e>
  4110af:	mov    rax,QWORD PTR [rbx+0x58]
  4110b3:	jmp    41101b <flatcc_builder_start_table@@Base+0x7b>
  4110b8:	nop    DWORD PTR [rax+rax*1+0x0]
  4110c0:	xor    ecx,ecx
  4110c2:	lea    rsi,[rbx+0x88]
  4110c9:	mov    rdi,QWORD PTR [rbx+0x40]
  4110cd:	mov    r8d,0x3
  4110d3:	call   QWORD PTR [rbx+0x50]
  4110d6:	test   eax,eax
  4110d8:	je     411045 <flatcc_builder_start_table@@Base+0xa5>
  4110de:	call   4045ea <posix_memalign@plt+0x4ba>
  4110e3:	nop    DWORD PTR [rax+rax*1+0x0]
  4110e8:	mov    QWORD PTR [rbx+0x8],0x0
  4110f0:	add    rsp,0x8
  4110f4:	mov    ebp,0xffffffff
  4110f9:	pop    rbx
  4110fa:	mov    eax,ebp
  4110fc:	pop    rbp
  4110fd:	pop    r12
  4110ff:	pop    r13
  411101:	ret    
  411102:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  41110d:	nop    DWORD PTR [rax]

0000000000411110 <flatcc_builder_create_vtable@@Base>:
  411110:	push   rbp
  411111:	push   rbx
  411112:	mov    rbp,rdi
  411115:	sub    rsp,0xa8
  41111c:	mov    rax,QWORD PTR fs:0x28
  411125:	mov    QWORD PTR [rsp+0x98],rax
  41112d:	xor    eax,eax
  41112f:	test   dx,dx
  411132:	mov    QWORD PTR [rsp],0x0
  41113a:	mov    DWORD PTR [rsp+0x8],0x0
  411142:	je     4111d0 <flatcc_builder_create_vtable@@Base+0xc0>
  411148:	mov    QWORD PTR [rsp+0x10],rsi
  41114d:	mov    esi,DWORD PTR [rdi+0x100]
  411153:	movzx  r8d,dx
  411157:	mov    QWORD PTR [rsp],r8
  41115b:	mov    QWORD PTR [rsp+0x18],r8
  411160:	movzx  edx,dx
  411163:	mov    DWORD PTR [rsp+0x8],0x1
  41116b:	test   esi,esi
  41116d:	je     411208 <flatcc_builder_create_vtable@@Base+0xf8>
  411173:	mov    eax,DWORD PTR [rbp+0xf0]
  411179:	mov    ebx,eax
  41117b:	sub    ebx,edx
  41117d:	cmp    eax,ebx
  41117f:	jle    4111e4 <flatcc_builder_create_vtable@@Base+0xd4>
  411181:	lea    rsi,[rsp+0x10]
  411186:	mov    rdi,QWORD PTR [rbp+0x38]
  41118a:	mov    ecx,ebx
  41118c:	mov    edx,DWORD PTR [rsp+0x8]
  411190:	call   QWORD PTR [rbp+0x48]
  411193:	test   eax,eax
  411195:	jne    411260 <flatcc_builder_create_vtable@@Base+0x150>
  41119b:	cmp    ebx,0x1
  41119e:	mov    DWORD PTR [rbp+0xf0],ebx
  4111a4:	sbb    ebx,0xffffffff
  4111a7:	mov    rcx,QWORD PTR [rsp+0x98]
  4111af:	xor    rcx,QWORD PTR fs:0x28
  4111b8:	mov    eax,ebx
  4111ba:	jne    41125b <flatcc_builder_create_vtable@@Base+0x14b>
  4111c0:	add    rsp,0xa8
  4111c7:	pop    rbx
  4111c8:	pop    rbp
  4111c9:	ret    
  4111ca:	nop    WORD PTR [rax+rax*1+0x0]
  4111d0:	mov    edx,DWORD PTR [rdi+0x100]
  4111d6:	test   edx,edx
  4111d8:	jne    4111e4 <flatcc_builder_create_vtable@@Base+0xd4>
  4111da:	mov    eax,DWORD PTR [rdi+0x124]
  4111e0:	test   eax,eax
  4111e2:	je     411250 <flatcc_builder_create_vtable@@Base+0x140>
  4111e4:	lea    rcx,[rip+0x8ea5]        # 41a090 <_IO_stdin_used@@Base+0x4090>
  4111eb:	lea    rsi,[rip+0x845e]        # 419650 <_IO_stdin_used@@Base+0x3650>
  4111f2:	lea    rdi,[rip+0x87ee]        # 4199e7 <_IO_stdin_used@@Base+0x39e7>
  4111f9:	mov    edx,0x287
  4111fe:	call   404090 <__assert_fail@plt>
  411203:	nop    DWORD PTR [rax+rax*1+0x0]
  411208:	mov    ecx,DWORD PTR [rdi+0x124]
  41120e:	test   ecx,ecx
  411210:	jne    411173 <flatcc_builder_create_vtable@@Base+0x63>
  411216:	mov    ebx,DWORD PTR [rdi+0xf4]
  41121c:	add    edx,ebx
  41121e:	cmp    ebx,edx
  411220:	mov    DWORD PTR [rdi+0xf4],edx
  411226:	jg     411284 <flatcc_builder_create_vtable@@Base+0x174>
  411228:	lea    rsi,[rsp+0x10]
  41122d:	mov    rdi,QWORD PTR [rbp+0x38]
  411231:	mov    ecx,ebx
  411233:	mov    edx,DWORD PTR [rsp+0x8]
  411237:	call   QWORD PTR [rbp+0x48]
  41123a:	test   eax,eax
  41123c:	jne    411265 <flatcc_builder_create_vtable@@Base+0x155>
  41123e:	add    ebx,0x1
  411241:	jmp    4111a7 <flatcc_builder_create_vtable@@Base+0x97>
  411246:	nop    WORD PTR cs:[rax+rax*1+0x0]
  411250:	mov    ebx,DWORD PTR [rbp+0xf4]
  411256:	xor    r8d,r8d
  411259:	jmp    411228 <flatcc_builder_create_vtable@@Base+0x118>
  41125b:	call   404070 <__stack_chk_fail@plt>
  411260:	call   404630 <posix_memalign@plt+0x500>
  411265:	lea    rcx,[rip+0x8e34]        # 41a0a0 <_IO_stdin_used@@Base+0x40a0>
  41126c:	lea    rsi,[rip+0x83dd]        # 419650 <_IO_stdin_used@@Base+0x3650>
  411273:	lea    rdi,[rip+0x876d]        # 4199e7 <_IO_stdin_used@@Base+0x39e7>
  41127a:	mov    edx,0x2a5
  41127f:	call   404090 <__assert_fail@plt>
  411284:	call   40460d <posix_memalign@plt+0x4dd>
  411289:	nop    DWORD PTR [rax+0x0]

0000000000411290 <flatcc_builder_create_cached_vtable@@Base>:
  411290:	push   r15
  411292:	push   r14
  411294:	mov    r15,rdi
  411297:	push   r13
  411299:	push   r12
  41129b:	movzx  r14d,dx
  41129f:	push   rbp
  4112a0:	push   rbx
  4112a1:	mov    ebp,ecx
  4112a3:	sub    rsp,0x38
  4112a7:	mov    rbx,QWORD PTR [rdi+0xd8]
  4112ae:	mov    QWORD PTR [rsp+0x10],rsi
  4112b3:	mov    DWORD PTR [rsp+0x2c],edx
  4112b7:	test   rbx,rbx
  4112ba:	je     411448 <flatcc_builder_create_cached_vtable@@Base+0x1b8>
  4112c0:	mov    eax,0x20
  4112c5:	sub    eax,ebx
  4112c7:	shrx   ebp,ebp,eax
  4112cc:	mov    rax,QWORD PTR [r15+0xa8]
  4112d3:	lea    r12,[rax+rbp*4]
  4112d7:	test   r12,r12
  4112da:	je     411430 <flatcc_builder_create_cached_vtable@@Base+0x1a0>
  4112e0:	mov    ebp,DWORD PTR [r12]
  4112e4:	test   ebp,ebp
  4112e6:	je     411550 <flatcc_builder_create_cached_vtable@@Base+0x2c0>
  4112ec:	movzx  eax,r14w
  4112f0:	mov    r11,QWORD PTR [r15+0xb8]
  4112f7:	mov    r8,QWORD PTR [r15+0x78]
  4112fb:	mov    r13,r12
  4112fe:	mov    QWORD PTR [rsp+0x20],0x0
  411307:	mov    QWORD PTR [rsp+0x18],rax
  41130c:	jmp    41131b <flatcc_builder_create_cached_vtable@@Base+0x8b>
  41130e:	xchg   ax,ax
  411310:	mov    ebp,DWORD PTR [rbx+0xc]
  411313:	lea    r13,[rbx+0xc]
  411317:	test   ebp,ebp
  411319:	je     411378 <flatcc_builder_create_cached_vtable@@Base+0xe8>
  41131b:	mov    ebx,ebp
  41131d:	add    rbx,r11
  411320:	mov    esi,DWORD PTR [rbx+0x8]
  411323:	add    rsi,r8
  411326:	cmp    WORD PTR [rsi],r14w
  41132a:	jne    411310 <flatcc_builder_create_cached_vtable@@Base+0x80>
  41132c:	mov    rdx,QWORD PTR [rsp+0x18]
  411331:	mov    rdi,QWORD PTR [rsp+0x10]
  411336:	mov    QWORD PTR [rsp+0x8],r8
  41133b:	mov    QWORD PTR [rsp],r11
  41133f:	call   4040c0 <memcmp@plt>
  411344:	test   eax,eax
  411346:	mov    r11,QWORD PTR [rsp]
  41134a:	mov    r8,QWORD PTR [rsp+0x8]
  41134f:	jne    411310 <flatcc_builder_create_cached_vtable@@Base+0x80>
  411351:	mov    eax,DWORD PTR [r15+0x100]
  411358:	cmp    DWORD PTR [rbx+0x4],eax
  41135b:	je     411400 <flatcc_builder_create_cached_vtable@@Base+0x170>
  411361:	mov    ebp,DWORD PTR [rbx+0xc]
  411364:	lea    r13,[rbx+0xc]
  411368:	mov    QWORD PTR [rsp+0x20],rbx
  41136d:	test   ebp,ebp
  41136f:	jne    41131b <flatcc_builder_create_cached_vtable@@Base+0x8b>
  411371:	nop    DWORD PTR [rax+0x0]
  411378:	mov    ebx,DWORD PTR [r15+0xe4]
  41137f:	lea    rdx,[rbx+0x10]
  411383:	cmp    rdx,QWORD PTR [r15+0xc0]
  41138a:	ja     411528 <flatcc_builder_create_cached_vtable@@Base+0x298>
  411390:	add    rbx,QWORD PTR [r15+0xb8]
  411397:	je     411430 <flatcc_builder_create_cached_vtable@@Base+0x1a0>
  41139d:	mov    eax,DWORD PTR [r15+0xe4]
  4113a4:	movzx  ebp,WORD PTR [rsp+0x2c]
  4113a9:	mov    rdi,r15
  4113ac:	mov    rsi,QWORD PTR [rsp+0x10]
  4113b1:	lea    edx,[rax+0x10]
  4113b4:	mov    DWORD PTR [r15+0xe4],edx
  4113bb:	mov    edx,DWORD PTR [r15+0x100]
  4113c2:	mov    DWORD PTR [rbx+0x4],edx
  4113c5:	mov    edx,DWORD PTR [r12]
  4113c9:	mov    DWORD PTR [rbx+0xc],edx
  4113cc:	mov    DWORD PTR [r12],eax
  4113d0:	mov    edx,ebp
  4113d2:	call   411110 <flatcc_builder_create_vtable@@Base>
  4113d7:	test   eax,eax
  4113d9:	mov    DWORD PTR [rbx],eax
  4113db:	je     411430 <flatcc_builder_create_cached_vtable@@Base+0x1a0>
  4113dd:	mov    rdi,QWORD PTR [rsp+0x20]
  4113e2:	test   rdi,rdi
  4113e5:	je     41155e <flatcc_builder_create_cached_vtable@@Base+0x2ce>
  4113eb:	mov    edx,DWORD PTR [rdi+0x8]
  4113ee:	mov    DWORD PTR [rbx+0x8],edx
  4113f1:	add    rsp,0x38
  4113f5:	pop    rbx
  4113f6:	pop    rbp
  4113f7:	pop    r12
  4113f9:	pop    r13
  4113fb:	pop    r14
  4113fd:	pop    r15
  4113ff:	ret    
  411400:	cmp    r12,r13
  411403:	je     411417 <flatcc_builder_create_cached_vtable@@Base+0x187>
  411405:	mov    eax,DWORD PTR [rbx+0xc]
  411408:	mov    DWORD PTR [r13+0x0],eax
  41140c:	mov    eax,DWORD PTR [r12]
  411410:	mov    DWORD PTR [rbx+0xc],eax
  411413:	mov    DWORD PTR [r12],ebp
  411417:	mov    eax,DWORD PTR [rbx]
  411419:	add    rsp,0x38
  41141d:	pop    rbx
  41141e:	pop    rbp
  41141f:	pop    r12
  411421:	pop    r13
  411423:	pop    r14
  411425:	pop    r15
  411427:	ret    
  411428:	nop    DWORD PTR [rax+rax*1+0x0]
  411430:	add    rsp,0x38
  411434:	xor    eax,eax
  411436:	pop    rbx
  411437:	pop    rbp
  411438:	pop    r12
  41143a:	pop    r13
  41143c:	pop    r14
  41143e:	pop    r15
  411440:	ret    
  411441:	nop    DWORD PTR [rax+0x0]
  411448:	mov    eax,DWORD PTR [rdi+0xe4]
  41144e:	lea    r12,[rdi+0xa8]
  411455:	test   eax,eax
  411457:	jne    4115ef <flatcc_builder_create_cached_vtable@@Base+0x35f>
  41145d:	cmp    QWORD PTR [rdi+0xc0],0xf
  411465:	jbe    4114f8 <flatcc_builder_create_cached_vtable@@Base+0x268>
  41146b:	cmp    QWORD PTR [r15+0xb8],0x0
  411473:	je     411430 <flatcc_builder_create_cached_vtable@@Base+0x1a0>
  411475:	mov    DWORD PTR [r15+0xe4],0x10
  411480:	mov    rdi,QWORD PTR [r15+0x40]
  411484:	mov    r8d,0x5
  41148a:	mov    ecx,0x1
  41148f:	mov    edx,0x100
  411494:	mov    rsi,r12
  411497:	call   QWORD PTR [r15+0x50]
  41149b:	test   eax,eax
  41149d:	jne    411430 <flatcc_builder_create_cached_vtable@@Base+0x1a0>
  41149f:	mov    rcx,QWORD PTR [r15+0xb0]
  4114a6:	mov    eax,0x100
  4114ab:	jmp    4114b3 <flatcc_builder_create_cached_vtable@@Base+0x223>
  4114ad:	nop    DWORD PTR [rax]
  4114b0:	mov    rax,rdx
  4114b3:	lea    rdx,[rax+rax*1]
  4114b7:	cmp    rdx,rcx
  4114ba:	jbe    4114b0 <flatcc_builder_create_cached_vtable@@Base+0x220>
  4114bc:	shr    rax,0x2
  4114c0:	cmp    rax,0x1
  4114c4:	jbe    4115b8 <flatcc_builder_create_cached_vtable@@Base+0x328>
  4114ca:	mov    esi,0x1
  4114cf:	nop
  4114d0:	add    rbx,0x1
  4114d4:	shlx   rdx,rsi,rbx
  4114d9:	cmp    rax,rdx
  4114dc:	ja     4114d0 <flatcc_builder_create_cached_vtable@@Base+0x240>
  4114de:	mov    eax,0x20
  4114e3:	sub    eax,ebx
  4114e5:	mov    QWORD PTR [r15+0xd8],rbx
  4114ec:	jmp    4112c7 <flatcc_builder_create_cached_vtable@@Base+0x37>
  4114f1:	nop    DWORD PTR [rax+0x0]
  4114f8:	lea    rsi,[rdi+0xb8]
  4114ff:	xor    ecx,ecx
  411501:	mov    rdi,QWORD PTR [rdi+0x40]
  411505:	mov    r8d,0x6
  41150b:	mov    edx,0x10
  411510:	call   QWORD PTR [r15+0x50]
  411514:	test   eax,eax
  411516:	je     41146b <flatcc_builder_create_cached_vtable@@Base+0x1db>
  41151c:	jmp    4115da <flatcc_builder_create_cached_vtable@@Base+0x34a>
  411521:	nop    DWORD PTR [rax+0x0]
  411528:	xor    ecx,ecx
  41152a:	lea    rsi,[r15+0xb8]
  411531:	mov    rdi,QWORD PTR [r15+0x40]
  411535:	mov    r8d,0x6
  41153b:	call   QWORD PTR [r15+0x50]
  41153f:	test   eax,eax
  411541:	je     411390 <flatcc_builder_create_cached_vtable@@Base+0x100>
  411547:	jmp    4115da <flatcc_builder_create_cached_vtable@@Base+0x34a>
  41154c:	nop    DWORD PTR [rax+0x0]
  411550:	mov    QWORD PTR [rsp+0x20],0x0
  411559:	jmp    411378 <flatcc_builder_create_cached_vtable@@Base+0xe8>
  41155e:	mov    rax,QWORD PTR [r15+0x118]
  411565:	mov    r12d,DWORD PTR [r15+0xe0]
  41156c:	test   rax,rax
  41156f:	je     41157b <flatcc_builder_create_cached_vtable@@Base+0x2eb>
  411571:	lea    edx,[rbp+r12*1+0x0]
  411576:	cmp    rax,rdx
  411579:	jb     4115e0 <flatcc_builder_create_cached_vtable@@Base+0x350>
  41157b:	lea    rdx,[r14+r12*1]
  41157f:	cmp    rdx,QWORD PTR [r15+0x80]
  411586:	ja     4115c2 <flatcc_builder_create_cached_vtable@@Base+0x332>
  411588:	mov    rdi,r12
  41158b:	add    rdi,QWORD PTR [r15+0x78]
  41158f:	je     41160e <flatcc_builder_create_cached_vtable@@Base+0x37e>
  411591:	mov    eax,DWORD PTR [r15+0xe0]
  411598:	mov    rsi,QWORD PTR [rsp+0x10]
  41159d:	mov    rdx,r14
  4115a0:	add    ebp,eax
  4115a2:	mov    DWORD PTR [rbx+0x8],eax
  4115a5:	mov    DWORD PTR [r15+0xe0],ebp
  4115ac:	call   4040e0 <memcpy@plt>
  4115b1:	mov    eax,DWORD PTR [rbx]
  4115b3:	jmp    4113f1 <flatcc_builder_create_cached_vtable@@Base+0x161>
  4115b8:	mov    eax,0x20
  4115bd:	jmp    4114e5 <flatcc_builder_create_cached_vtable@@Base+0x255>
  4115c2:	xor    ecx,ecx
  4115c4:	lea    rsi,[r15+0x78]
  4115c8:	mov    rdi,QWORD PTR [r15+0x40]
  4115cc:	mov    r8d,0x2
  4115d2:	call   QWORD PTR [r15+0x50]
  4115d6:	test   eax,eax
  4115d8:	je     411588 <flatcc_builder_create_cached_vtable@@Base+0x2f8>
  4115da:	call   4045ea <posix_memalign@plt+0x4ba>
  4115df:	nop
  4115e0:	mov    rdi,r15
  4115e3:	call   40f860 <flatcc_builder_flush_vtable_cache@@Base>
  4115e8:	mov    eax,DWORD PTR [rbx]
  4115ea:	jmp    411419 <flatcc_builder_create_cached_vtable@@Base+0x189>
  4115ef:	lea    rcx,[rip+0x885a]        # 419e50 <_IO_stdin_used@@Base+0x3e50>
  4115f6:	lea    rsi,[rip+0x8053]        # 419650 <_IO_stdin_used@@Base+0x3650>
  4115fd:	lea    rdi,[rip+0x8429]        # 419a2d <_IO_stdin_used@@Base+0x3a2d>
  411604:	mov    edx,0x156
  411609:	call   404090 <__assert_fail@plt>
  41160e:	mov    eax,0xffffffff
  411613:	jmp    4113f1 <flatcc_builder_create_cached_vtable@@Base+0x161>
  411618:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000411620 <flatcc_builder_create_table@@Base>:
  411620:	push   rbp
  411621:	push   rbx
  411622:	sub    rsp,0xb8
  411629:	mov    rax,QWORD PTR fs:0x28
  411632:	mov    QWORD PTR [rsp+0xa8],rax
  41163a:	xor    eax,eax
  41163c:	test   r9d,r9d
  41163f:	mov    r11d,DWORD PTR [rsp+0xd0]
  411647:	js     4117ed <flatcc_builder_create_table@@Base+0x1cd>
  41164d:	test   r11b,0x1
  411651:	je     4117ce <flatcc_builder_create_table@@Base+0x1ae>
  411657:	cmp    cx,0x4
  41165b:	mov    eax,0x4
  411660:	mov    rbx,rdi
  411663:	cmovb  ecx,eax
  411666:	cmp    WORD PTR [rdi+0xe8],cx
  41166d:	movzx  eax,cx
  411670:	jae    411679 <flatcc_builder_create_table@@Base+0x59>
  411672:	mov    WORD PTR [rdi+0xe8],cx
  411679:	mov    ecx,DWORD PTR [rbx+0xf0]
  41167f:	sub    eax,0x1
  411682:	mov    edi,0xfffffffc
  411687:	sub    r11d,0x1
  41168b:	mov    r10d,ecx
  41168e:	sub    r10d,edx
  411691:	and    r10d,eax
  411694:	mov    eax,edi
  411696:	sub    eax,edx
  411698:	add    eax,ecx
  41169a:	sub    eax,r10d
  41169d:	mov    ebp,eax
  41169f:	sub    ebp,r11d
  4116a2:	test   r9d,r9d
  4116a5:	mov    DWORD PTR [rsp+0xc],ebp
  4116a9:	je     4116dd <flatcc_builder_create_table@@Base+0xbd>
  4116ab:	lea    ecx,[r9-0x1]
  4116af:	sub    edi,eax
  4116b1:	lea    r9,[r8+rcx*2+0x2]
  4116b6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4116c0:	movzx  ecx,WORD PTR [r8]
  4116c4:	mov    r11d,edi
  4116c7:	add    r8,0x2
  4116cb:	sub    r11d,ecx
  4116ce:	add    DWORD PTR [rsi+rcx*1],r11d
  4116d2:	cmp    r9,r8
  4116d5:	jne    4116c0 <flatcc_builder_create_table@@Base+0xa0>
  4116d7:	mov    ecx,DWORD PTR [rbx+0xf0]
  4116dd:	lea    rax,[rsp+0xc]
  4116e2:	test   rdx,rdx
  4116e5:	mov    QWORD PTR [rsp+0x10],0x4
  4116ee:	mov    QWORD PTR [rsp+0x28],0x4
  4116f7:	mov    DWORD PTR [rsp+0x18],0x1
  4116ff:	mov    r8d,0x4
  411705:	mov    QWORD PTR [rsp+0x20],rax
  41170a:	je     411727 <flatcc_builder_create_table@@Base+0x107>
  41170c:	lea    r8,[rdx+0x4]
  411710:	mov    QWORD PTR [rsp+0x30],rsi
  411715:	mov    QWORD PTR [rsp+0x38],rdx
  41171a:	mov    DWORD PTR [rsp+0x18],0x2
  411722:	mov    QWORD PTR [rsp+0x10],r8
  411727:	test   r10d,r10d
  41172a:	je     411758 <flatcc_builder_create_table@@Base+0x138>
  41172c:	movsxd rdx,DWORD PTR [rsp+0x18]
  411731:	mov    rsi,0x41a140
  411738:	add    r8,r10
  41173b:	mov    QWORD PTR [rsp+0x10],r8
  411740:	mov    rax,rdx
  411743:	shl    rdx,0x4
  411747:	add    eax,0x1
  41174a:	mov    QWORD PTR [rsp+rdx*1+0x20],rsi
  41174f:	mov    QWORD PTR [rsp+rdx*1+0x28],r10
  411754:	mov    DWORD PTR [rsp+0x18],eax
  411758:	mov    ebp,ecx
  41175a:	movabs rax,0x10000000f
  411764:	sub    ebp,r8d
  411767:	cmp    r8,rax
  41176a:	ja     4117af <flatcc_builder_create_table@@Base+0x18f>
  41176c:	cmp    ebp,ecx
  41176e:	jge    4117af <flatcc_builder_create_table@@Base+0x18f>
  411770:	lea    rsi,[rsp+0x20]
  411775:	mov    rdi,QWORD PTR [rbx+0x38]
  411779:	mov    ecx,ebp
  41177b:	mov    edx,DWORD PTR [rsp+0x18]
  41177f:	call   QWORD PTR [rbx+0x48]
  411782:	test   eax,eax
  411784:	jne    411811 <flatcc_builder_create_table@@Base+0x1f1>
  41178a:	mov    DWORD PTR [rbx+0xf0],ebp
  411790:	mov    eax,ebp
  411792:	mov    rbx,QWORD PTR [rsp+0xa8]
  41179a:	xor    rbx,QWORD PTR fs:0x28
  4117a3:	jne    41180c <flatcc_builder_create_table@@Base+0x1ec>
  4117a5:	add    rsp,0xb8
  4117ac:	pop    rbx
  4117ad:	pop    rbp
  4117ae:	ret    
  4117af:	lea    rcx,[rip+0x88da]        # 41a090 <_IO_stdin_used@@Base+0x4090>
  4117b6:	lea    rsi,[rip+0x7e93]        # 419650 <_IO_stdin_used@@Base+0x3650>
  4117bd:	lea    rdi,[rip+0x8223]        # 4199e7 <_IO_stdin_used@@Base+0x39e7>
  4117c4:	mov    edx,0x287
  4117c9:	call   404090 <__assert_fail@plt>
  4117ce:	lea    rcx,[rip+0x865b]        # 419e30 <_IO_stdin_used@@Base+0x3e30>
  4117d5:	lea    rsi,[rip+0x7e74]        # 419650 <_IO_stdin_used@@Base+0x3650>
  4117dc:	lea    rdi,[rip+0x826b]        # 419a4e <_IO_stdin_used@@Base+0x3a4e>
  4117e3:	mov    edx,0x4db
  4117e8:	call   404090 <__assert_fail@plt>
  4117ed:	lea    rcx,[rip+0x863c]        # 419e30 <_IO_stdin_used@@Base+0x3e30>
  4117f4:	lea    rsi,[rip+0x7e55]        # 419650 <_IO_stdin_used@@Base+0x3650>
  4117fb:	lea    rdi,[rip+0x823a]        # 419a3c <_IO_stdin_used@@Base+0x3a3c>
  411802:	mov    edx,0x4d5
  411807:	call   404090 <__assert_fail@plt>
  41180c:	call   404070 <__stack_chk_fail@plt>
  411811:	call   404630 <posix_memalign@plt+0x500>
  411816:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000411820 <flatcc_builder_check_required_field@@Base>:
  411820:	mov    rax,QWORD PTR [rdi+0x30]
  411824:	cmp    WORD PTR [rax+0xe],0x3
  411829:	jne    411846 <flatcc_builder_check_required_field@@Base+0x26>
  41182b:	xor    eax,eax
  41182d:	cmp    WORD PTR [rdi+0x10],si
  411831:	jbe    411842 <flatcc_builder_check_required_field@@Base+0x22>
  411833:	mov    rax,QWORD PTR [rdi+0x8]
  411837:	movzx  edx,si
  41183a:	cmp    WORD PTR [rax+rdx*2],0x0
  41183f:	setne  al
  411842:	movzx  eax,al
  411845:	ret    
  411846:	lea    rcx,[rip+0x85b3]        # 419e00 <_IO_stdin_used@@Base+0x3e00>
  41184d:	lea    rsi,[rip+0x7dfc]        # 419650 <_IO_stdin_used@@Base+0x3650>
  411854:	lea    rdi,[rip+0x803d]        # 419898 <_IO_stdin_used@@Base+0x3898>
  41185b:	sub    rsp,0x8
  41185f:	mov    edx,0x4f8
  411864:	call   404090 <__assert_fail@plt>
  411869:	nop    DWORD PTR [rax+0x0]

0000000000411870 <flatcc_builder_check_union_field@@Base>:
  411870:	mov    rax,QWORD PTR [rdi+0x30]
  411874:	cmp    WORD PTR [rax+0xe],0x3
  411879:	jne    4118bb <flatcc_builder_check_union_field@@Base+0x4b>
  41187b:	xor    eax,eax
  41187d:	test   si,si
  411880:	je     4118ad <flatcc_builder_check_union_field@@Base+0x3d>
  411882:	cmp    si,WORD PTR [rdi+0x10]
  411886:	jae    4118ad <flatcc_builder_check_union_field@@Base+0x3d>
  411888:	mov    rcx,QWORD PTR [rdi+0x8]
  41188c:	movzx  edx,si
  41188f:	movzx  eax,WORD PTR [rcx+rdx*2-0x2]
  411894:	test   ax,ax
  411897:	je     4118a3 <flatcc_builder_check_union_field@@Base+0x33>
  411899:	mov    rsi,QWORD PTR [rdi+0x18]
  41189d:	cmp    BYTE PTR [rsi+rax*1],0x0
  4118a1:	jne    4118b0 <flatcc_builder_check_union_field@@Base+0x40>
  4118a3:	xor    eax,eax
  4118a5:	cmp    WORD PTR [rcx+rdx*2],0x0
  4118aa:	sete   al
  4118ad:	repz ret 
  4118af:	nop
  4118b0:	xor    eax,eax
  4118b2:	cmp    WORD PTR [rcx+rdx*2],0x0
  4118b7:	setne  al
  4118ba:	ret    
  4118bb:	lea    rcx,[rip+0x84fe]        # 419dc0 <_IO_stdin_used@@Base+0x3dc0>
  4118c2:	lea    rsi,[rip+0x7d87]        # 419650 <_IO_stdin_used@@Base+0x3650>
  4118c9:	lea    rdi,[rip+0x7fc8]        # 419898 <_IO_stdin_used@@Base+0x3898>
  4118d0:	sub    rsp,0x8
  4118d4:	mov    edx,0x4ff
  4118d9:	call   404090 <__assert_fail@plt>
  4118de:	xchg   ax,ax

00000000004118e0 <flatcc_builder_check_required@@Base>:
  4118e0:	mov    rax,QWORD PTR [rdi+0x30]
  4118e4:	cmp    WORD PTR [rax+0xe],0x3
  4118e9:	jne    41193b <flatcc_builder_check_required@@Base+0x5b>
  4118eb:	movzx  ecx,WORD PTR [rdi+0x10]
  4118ef:	xor    eax,eax
  4118f1:	cmp    ecx,edx
  4118f3:	jl     411930 <flatcc_builder_check_required@@Base+0x50>
  4118f5:	test   edx,edx
  4118f7:	jle    41192b <flatcc_builder_check_required@@Base+0x4b>
  4118f9:	mov    rcx,QWORD PTR [rdi+0x8]
  4118fd:	movzx  edi,WORD PTR [rsi]
  411900:	cmp    WORD PTR [rcx+rdi*2],0x0
  411905:	je     411930 <flatcc_builder_check_required@@Base+0x50>
  411907:	sub    edx,0x1
  41190a:	lea    rax,[rsi+0x2]
  41190e:	lea    rsi,[rsi+rdx*2+0x2]
  411913:	jmp    411926 <flatcc_builder_check_required@@Base+0x46>
  411915:	nop    DWORD PTR [rax]
  411918:	movzx  edx,WORD PTR [rax]
  41191b:	add    rax,0x2
  41191f:	cmp    WORD PTR [rcx+rdx*2],0x0
  411924:	je     411938 <flatcc_builder_check_required@@Base+0x58>
  411926:	cmp    rax,rsi
  411929:	jne    411918 <flatcc_builder_check_required@@Base+0x38>
  41192b:	mov    eax,0x1
  411930:	repz ret 
  411932:	nop    WORD PTR [rax+rax*1+0x0]
  411938:	xor    eax,eax
  41193a:	ret    
  41193b:	lea    rcx,[rip+0x844e]        # 419d90 <_IO_stdin_used@@Base+0x3d90>
  411942:	lea    rsi,[rip+0x7d07]        # 419650 <_IO_stdin_used@@Base+0x3650>
  411949:	lea    rdi,[rip+0x7f48]        # 419898 <_IO_stdin_used@@Base+0x3898>
  411950:	sub    rsp,0x8
  411954:	mov    edx,0x511
  411959:	call   404090 <__assert_fail@plt>
  41195e:	xchg   ax,ax

0000000000411960 <flatcc_builder_end_table@@Base>:
  411960:	push   r13
  411962:	push   r12
  411964:	push   rbp
  411965:	push   rbx
  411966:	sub    rsp,0x8
  41196a:	mov    rax,QWORD PTR [rdi+0x30]
  41196e:	cmp    WORD PTR [rax+0xe],0x3
  411973:	jne    411ace <flatcc_builder_end_table@@Base+0x16e>
  411979:	movzx  ebp,WORD PTR [rdi+0x10]
  41197d:	movzx  eax,WORD PTR [rdi+0x20]
  411981:	mov    rbx,rdi
  411984:	mov    rcx,QWORD PTR [rdi+0x8]
  411988:	add    ebp,0x2
  41198b:	add    eax,0x4
  41198e:	lea    r12,[rcx-0x4]
  411992:	add    ebp,ebp
  411994:	mov    WORD PTR [rcx-0x2],ax
  411998:	movzx  eax,ax
  41199b:	mov    WORD PTR [rcx-0x4],bp
  41199f:	mov    ecx,DWORD PTR [rdi+0x14]
  4119a2:	movzx  edx,bp
  4119a5:	mov    rsi,r12
  4119a8:	xor    ecx,edx
  4119aa:	imul   ecx,ecx,0x9e3779b1
  4119b0:	xor    ecx,eax
  4119b2:	imul   ecx,ecx,0x9e3779b1
  4119b8:	mov    DWORD PTR [rdi+0x14],ecx
  4119bb:	call   411290 <flatcc_builder_create_cached_vtable@@Base>
  4119c0:	test   eax,eax
  4119c2:	mov    r13d,eax
  4119c5:	jne    4119e0 <flatcc_builder_end_table@@Base+0x80>
  4119c7:	add    rsp,0x8
  4119cb:	xor    ebp,ebp
  4119cd:	pop    rbx
  4119ce:	mov    eax,ebp
  4119d0:	pop    rbp
  4119d1:	pop    r12
  4119d3:	pop    r13
  4119d5:	ret    
  4119d6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4119e0:	movzx  edx,bp
  4119e3:	xor    esi,esi
  4119e5:	mov    rdi,r12
  4119e8:	call   4040a0 <memset@plt>
  4119ed:	mov    rax,QWORD PTR [rbx+0x30]
  4119f1:	mov    r9,QWORD PTR [rbx]
  4119f4:	sub    rsp,0x8
  4119f8:	mov    edx,DWORD PTR [rbx+0x20]
  4119fb:	movzx  ecx,WORD PTR [rbx+0xea]
  411a02:	mov    rdi,rbx
  411a05:	mov    rsi,QWORD PTR [rbx+0x18]
  411a09:	mov    r8d,DWORD PTR [rax+0x14]
  411a0d:	add    r8,QWORD PTR [rbx+0x88]
  411a14:	push   r13
  411a16:	sub    r9,r8
  411a19:	shr    r9,1
  411a1c:	call   411620 <flatcc_builder_create_table@@Base>
  411a21:	mov    ebp,eax
  411a23:	test   ebp,ebp
  411a25:	pop    rax
  411a26:	pop    rdx
  411a27:	je     4119c7 <flatcc_builder_end_table@@Base+0x67>
  411a29:	mov    rax,QWORD PTR [rbx+0x30]
  411a2d:	mov    rdi,QWORD PTR [rbx+0x18]
  411a31:	xor    esi,esi
  411a33:	mov    edx,DWORD PTR [rax+0x18]
  411a36:	mov    DWORD PTR [rbx+0x14],edx
  411a39:	movzx  edx,WORD PTR [rax+0x1c]
  411a3d:	mov    WORD PTR [rbx+0x10],dx
  411a41:	mov    edx,DWORD PTR [rax+0x10]
  411a44:	add    rdx,QWORD PTR [rbx+0x58]
  411a48:	mov    QWORD PTR [rbx+0x8],rdx
  411a4c:	mov    eax,DWORD PTR [rax+0x14]
  411a4f:	add    rax,QWORD PTR [rbx+0x88]
  411a56:	mov    edx,DWORD PTR [rbx+0x20]
  411a59:	mov    QWORD PTR [rbx],rax
  411a5c:	call   4040a0 <memset@plt>
  411a61:	mov    rax,QWORD PTR [rbx+0x30]
  411a65:	mov    edi,DWORD PTR [rbx+0x70]
  411a68:	mov    esi,DWORD PTR [rax]
  411a6a:	mov    edx,DWORD PTR [rax+0x8]
  411a6d:	mov    ecx,DWORD PTR [rax+0x4]
  411a70:	mov    DWORD PTR [rbx+0x20],edx
  411a73:	mov    rdx,rsi
  411a76:	mov    DWORD PTR [rbx+0x28],esi
  411a79:	add    rsi,QWORD PTR [rbx+0x68]
  411a7d:	sub    edi,edx
  411a7f:	cmp    ecx,edi
  411a81:	mov    edx,edi
  411a83:	cmovb  edx,ecx
  411a86:	mov    DWORD PTR [rbx+0x24],edx
  411a89:	movzx  edx,WORD PTR [rbx+0xea]
  411a90:	cmp    dx,WORD PTR [rbx+0xe8]
  411a97:	mov    QWORD PTR [rbx+0x18],rsi
  411a9b:	mov    DWORD PTR [rax+0x4],ecx
  411a9e:	jbe    411aa7 <flatcc_builder_end_table@@Base+0x147>
  411aa0:	mov    WORD PTR [rbx+0xe8],dx
  411aa7:	movzx  edx,WORD PTR [rax+0xc]
  411aab:	sub    rax,0x24
  411aaf:	sub    DWORD PTR [rbx+0x104],0x1
  411ab6:	mov    QWORD PTR [rbx+0x30],rax
  411aba:	mov    eax,ebp
  411abc:	mov    WORD PTR [rbx+0xea],dx
  411ac3:	add    rsp,0x8
  411ac7:	pop    rbx
  411ac8:	pop    rbp
  411ac9:	pop    r12
  411acb:	pop    r13
  411acd:	ret    
  411ace:	lea    rcx,[rip+0x829b]        # 419d70 <_IO_stdin_used@@Base+0x3d70>
  411ad5:	lea    rsi,[rip+0x7b74]        # 419650 <_IO_stdin_used@@Base+0x3650>
  411adc:	lea    rdi,[rip+0x7db5]        # 419898 <_IO_stdin_used@@Base+0x3898>
  411ae3:	mov    edx,0x525
  411ae8:	call   404090 <__assert_fail@plt>
  411aed:	nop    DWORD PTR [rax]

0000000000411af0 <flatcc_builder_create_vector@@Base>:
  411af0:	push   rbp
  411af1:	push   rbx
  411af2:	sub    rsp,0xb8
  411af9:	mov    rax,QWORD PTR fs:0x28
  411b02:	mov    QWORD PTR [rsp+0xa8],rax
  411b0a:	xor    eax,eax
  411b0c:	cmp    rdx,r9
  411b0f:	ja     411c54 <flatcc_builder_create_vector@@Base+0x164>
  411b15:	mov    rbx,rdi
  411b18:	cmp    r8w,0x4
  411b1d:	mov    eax,0x4
  411b22:	cmovb  r8d,eax
  411b26:	cmp    r8w,WORD PTR [rbx+0xe8]
  411b2e:	movzx  edi,r8w
  411b32:	jbe    411b3c <flatcc_builder_create_vector@@Base+0x4c>
  411b34:	mov    WORD PTR [rbx+0xe8],r8w
  411b3c:	imul   ecx,edx
  411b3f:	mov    DWORD PTR [rsp+0xc],edx
  411b43:	mov    edx,DWORD PTR [rbx+0xf0]
  411b49:	sub    edi,0x1
  411b4c:	mov    QWORD PTR [rsp+0x10],0x4
  411b55:	mov    QWORD PTR [rsp+0x28],0x4
  411b5e:	mov    DWORD PTR [rsp+0x18],0x1
  411b66:	mov    r8d,0x4
  411b6c:	mov    eax,edx
  411b6e:	sub    eax,ecx
  411b70:	and    eax,edi
  411b72:	lea    rdi,[rsp+0xc]
  411b77:	test   ecx,ecx
  411b79:	mov    QWORD PTR [rsp+0x20],rdi
  411b7e:	jne    411c10 <flatcc_builder_create_vector@@Base+0x120>
  411b84:	test   eax,eax
  411b86:	je     411bb4 <flatcc_builder_create_vector@@Base+0xc4>
  411b88:	movsxd rsi,DWORD PTR [rsp+0x18]
  411b8d:	mov    rdi,0x41a140
  411b94:	add    r8,rax
  411b97:	mov    QWORD PTR [rsp+0x10],r8
  411b9c:	mov    rcx,rsi
  411b9f:	shl    rsi,0x4
  411ba3:	add    ecx,0x1
  411ba6:	mov    QWORD PTR [rsp+rsi*1+0x20],rdi
  411bab:	mov    QWORD PTR [rsp+rsi*1+0x28],rax
  411bb0:	mov    DWORD PTR [rsp+0x18],ecx
  411bb4:	mov    ebp,edx
  411bb6:	movabs rax,0x10000000f
  411bc0:	sub    ebp,r8d
  411bc3:	cmp    r8,rax
  411bc6:	ja     411c30 <flatcc_builder_create_vector@@Base+0x140>
  411bc8:	cmp    edx,ebp
  411bca:	jle    411c30 <flatcc_builder_create_vector@@Base+0x140>
  411bcc:	lea    rsi,[rsp+0x20]
  411bd1:	mov    rdi,QWORD PTR [rbx+0x38]
  411bd5:	mov    ecx,ebp
  411bd7:	mov    edx,DWORD PTR [rsp+0x18]
  411bdb:	call   QWORD PTR [rbx+0x48]
  411bde:	test   eax,eax
  411be0:	jne    411c4f <flatcc_builder_create_vector@@Base+0x15f>
  411be2:	mov    DWORD PTR [rbx+0xf0],ebp
  411be8:	mov    eax,ebp
  411bea:	mov    rbx,QWORD PTR [rsp+0xa8]
  411bf2:	xor    rbx,QWORD PTR fs:0x28
  411bfb:	jne    411c73 <flatcc_builder_create_vector@@Base+0x183>
  411bfd:	add    rsp,0xb8
  411c04:	pop    rbx
  411c05:	pop    rbp
  411c06:	ret    
  411c07:	nop    WORD PTR [rax+rax*1+0x0]
  411c10:	lea    r8,[rcx+0x4]
  411c14:	mov    QWORD PTR [rsp+0x30],rsi
  411c19:	mov    QWORD PTR [rsp+0x38],rcx
  411c1e:	mov    DWORD PTR [rsp+0x18],0x2
  411c26:	mov    QWORD PTR [rsp+0x10],r8
  411c2b:	jmp    411b84 <flatcc_builder_create_vector@@Base+0x94>
  411c30:	lea    rcx,[rip+0x8459]        # 41a090 <_IO_stdin_used@@Base+0x4090>
  411c37:	lea    rsi,[rip+0x7a12]        # 419650 <_IO_stdin_used@@Base+0x3650>
  411c3e:	lea    rdi,[rip+0x7da2]        # 4199e7 <_IO_stdin_used@@Base+0x39e7>
  411c45:	mov    edx,0x287
  411c4a:	call   404090 <__assert_fail@plt>
  411c4f:	call   404630 <posix_memalign@plt+0x500>
  411c54:	lea    rcx,[rip+0x80f5]        # 419d50 <_IO_stdin_used@@Base+0x3d50>
  411c5b:	lea    rsi,[rip+0x79ee]        # 419650 <_IO_stdin_used@@Base+0x3650>
  411c62:	lea    rdi,[rip+0x7df0]        # 419a59 <_IO_stdin_used@@Base+0x3a59>
  411c69:	mov    edx,0x555
  411c6e:	call   404090 <__assert_fail@plt>
  411c73:	call   404070 <__stack_chk_fail@plt>
  411c78:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000411c80 <flatcc_builder_end_vector@@Base>:
  411c80:	push   rbp
  411c81:	push   rbx
  411c82:	sub    rsp,0x8
  411c86:	mov    rax,QWORD PTR [rdi+0x30]
  411c8a:	cmp    WORD PTR [rax+0xe],0x4
  411c8f:	jne    411d3f <flatcc_builder_end_vector@@Base+0xbf>
  411c95:	mov    ecx,DWORD PTR [rax+0x10]
  411c98:	mov    edx,DWORD PTR [rax+0x14]
  411c9b:	mov    rbx,rdi
  411c9e:	mov    r9d,DWORD PTR [rax+0x18]
  411ca2:	movzx  r8d,WORD PTR [rdi+0xea]
  411caa:	mov    rsi,QWORD PTR [rdi+0x18]
  411cae:	call   411af0 <flatcc_builder_create_vector@@Base>
  411cb3:	test   eax,eax
  411cb5:	mov    ebp,eax
  411cb7:	jne    411cc8 <flatcc_builder_end_vector@@Base+0x48>
  411cb9:	add    rsp,0x8
  411cbd:	mov    eax,ebp
  411cbf:	pop    rbx
  411cc0:	pop    rbp
  411cc1:	ret    
  411cc2:	nop    WORD PTR [rax+rax*1+0x0]
  411cc8:	mov    edx,DWORD PTR [rbx+0x20]
  411ccb:	mov    rdi,QWORD PTR [rbx+0x18]
  411ccf:	xor    esi,esi
  411cd1:	call   4040a0 <memset@plt>
  411cd6:	mov    rax,QWORD PTR [rbx+0x30]
  411cda:	mov    edi,DWORD PTR [rbx+0x70]
  411cdd:	mov    esi,DWORD PTR [rax]
  411cdf:	mov    edx,DWORD PTR [rax+0x8]
  411ce2:	mov    ecx,DWORD PTR [rax+0x4]
  411ce5:	mov    DWORD PTR [rbx+0x20],edx
  411ce8:	mov    rdx,rsi
  411ceb:	mov    DWORD PTR [rbx+0x28],esi
  411cee:	add    rsi,QWORD PTR [rbx+0x68]
  411cf2:	sub    edi,edx
  411cf4:	cmp    ecx,edi
  411cf6:	mov    edx,edi
  411cf8:	cmovb  edx,ecx
  411cfb:	mov    DWORD PTR [rbx+0x24],edx
  411cfe:	movzx  edx,WORD PTR [rbx+0xea]
  411d05:	cmp    dx,WORD PTR [rbx+0xe8]
  411d0c:	mov    QWORD PTR [rbx+0x18],rsi
  411d10:	mov    DWORD PTR [rax+0x4],ecx
  411d13:	jbe    411d1c <flatcc_builder_end_vector@@Base+0x9c>
  411d15:	mov    WORD PTR [rbx+0xe8],dx
  411d1c:	movzx  edx,WORD PTR [rax+0xc]
  411d20:	sub    rax,0x24
  411d24:	sub    DWORD PTR [rbx+0x104],0x1
  411d2b:	mov    QWORD PTR [rbx+0x30],rax
  411d2f:	mov    eax,ebp
  411d31:	mov    WORD PTR [rbx+0xea],dx
  411d38:	add    rsp,0x8
  411d3c:	pop    rbx
  411d3d:	pop    rbp
  411d3e:	ret    
  411d3f:	lea    rcx,[rip+0x7fea]        # 419d30 <_IO_stdin_used@@Base+0x3d30>
  411d46:	lea    rsi,[rip+0x7903]        # 419650 <_IO_stdin_used@@Base+0x3650>
  411d4d:	lea    rdi,[rip+0x79dc]        # 419730 <_IO_stdin_used@@Base+0x3730>
  411d54:	mov    edx,0x578
  411d59:	call   404090 <__assert_fail@plt>
  411d5e:	xchg   ax,ax

0000000000411d60 <flatcc_builder_vector_count@@Base>:
  411d60:	mov    rax,QWORD PTR [rdi+0x30]
  411d64:	mov    eax,DWORD PTR [rax+0x14]
  411d67:	ret    
  411d68:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000411d70 <flatcc_builder_vector_edit@@Base>:
  411d70:	mov    rax,QWORD PTR [rdi+0x18]
  411d74:	ret    
  411d75:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

0000000000411d80 <flatcc_builder_create_offset_vector_direct@@Base>:
  411d80:	xor    ecx,ecx
  411d82:	jmp    40f630 <flatcc_builder_default_alloc@@Base+0x390>
  411d87:	nop    WORD PTR [rax+rax*1+0x0]

0000000000411d90 <flatcc_builder_end_offset_vector@@Base>:
  411d90:	push   rbp
  411d91:	push   rbx
  411d92:	sub    rsp,0x8
  411d96:	mov    rax,QWORD PTR [rdi+0x30]
  411d9a:	cmp    WORD PTR [rax+0xe],0x5
  411d9f:	jne    411e3f <flatcc_builder_end_offset_vector@@Base+0xaf>
  411da5:	mov    edx,DWORD PTR [rax+0x14]
  411da8:	mov    rsi,QWORD PTR [rdi+0x18]
  411dac:	mov    rbx,rdi
  411daf:	call   411d80 <flatcc_builder_create_offset_vector_direct@@Base>
  411db4:	test   eax,eax
  411db6:	mov    ebp,eax
  411db8:	jne    411dc8 <flatcc_builder_end_offset_vector@@Base+0x38>
  411dba:	add    rsp,0x8
  411dbe:	mov    eax,ebp
  411dc0:	pop    rbx
  411dc1:	pop    rbp
  411dc2:	ret    
  411dc3:	nop    DWORD PTR [rax+rax*1+0x0]
  411dc8:	mov    edx,DWORD PTR [rbx+0x20]
  411dcb:	mov    rdi,QWORD PTR [rbx+0x18]
  411dcf:	xor    esi,esi
  411dd1:	call   4040a0 <memset@plt>
  411dd6:	mov    rax,QWORD PTR [rbx+0x30]
  411dda:	mov    edi,DWORD PTR [rbx+0x70]
  411ddd:	mov    esi,DWORD PTR [rax]
  411ddf:	mov    edx,DWORD PTR [rax+0x8]
  411de2:	mov    ecx,DWORD PTR [rax+0x4]
  411de5:	mov    DWORD PTR [rbx+0x20],edx
  411de8:	mov    rdx,rsi
  411deb:	mov    DWORD PTR [rbx+0x28],esi
  411dee:	add    rsi,QWORD PTR [rbx+0x68]
  411df2:	sub    edi,edx
  411df4:	cmp    ecx,edi
  411df6:	mov    edx,edi
  411df8:	cmovb  edx,ecx
  411dfb:	mov    DWORD PTR [rbx+0x24],edx
  411dfe:	movzx  edx,WORD PTR [rbx+0xea]
  411e05:	cmp    dx,WORD PTR [rbx+0xe8]
  411e0c:	mov    QWORD PTR [rbx+0x18],rsi
  411e10:	mov    DWORD PTR [rax+0x4],ecx
  411e13:	jbe    411e1c <flatcc_builder_end_offset_vector@@Base+0x8c>
  411e15:	mov    WORD PTR [rbx+0xe8],dx
  411e1c:	movzx  edx,WORD PTR [rax+0xc]
  411e20:	sub    rax,0x24
  411e24:	sub    DWORD PTR [rbx+0x104],0x1
  411e2b:	mov    QWORD PTR [rbx+0x30],rax
  411e2f:	mov    eax,ebp
  411e31:	mov    WORD PTR [rbx+0xea],dx
  411e38:	add    rsp,0x8
  411e3c:	pop    rbx
  411e3d:	pop    rbp
  411e3e:	ret    
  411e3f:	lea    rcx,[rip+0x7e9a]        # 419ce0 <_IO_stdin_used@@Base+0x3ce0>
  411e46:	lea    rsi,[rip+0x7803]        # 419650 <_IO_stdin_used@@Base+0x3650>
  411e4d:	lea    rdi,[rip+0x794c]        # 4197a0 <_IO_stdin_used@@Base+0x37a0>
  411e54:	mov    edx,0x5c8
  411e59:	call   404090 <__assert_fail@plt>
  411e5e:	xchg   ax,ax

0000000000411e60 <flatcc_builder_create_offset_vector@@Base>:
  411e60:	push   r12
  411e62:	push   rbp
  411e63:	mov    r12,rsi
  411e66:	push   rbx
  411e67:	mov    rbp,rdx
  411e6a:	mov    rbx,rdi
  411e6d:	call   410e00 <flatcc_builder_start_offset_vector@@Base>
  411e72:	test   eax,eax
  411e74:	je     411e80 <flatcc_builder_create_offset_vector@@Base+0x20>
  411e76:	pop    rbx
  411e77:	xor    eax,eax
  411e79:	pop    rbp
  411e7a:	pop    r12
  411e7c:	ret    
  411e7d:	nop    DWORD PTR [rax]
  411e80:	mov    rsi,rbp
  411e83:	mov    rdi,rbx
  411e86:	call   4108c0 <flatcc_builder_extend_offset_vector@@Base>
  411e8b:	test   rax,rax
  411e8e:	je     411e76 <flatcc_builder_create_offset_vector@@Base+0x16>
  411e90:	lea    rdx,[rbp*4+0x0]
  411e98:	mov    rsi,r12
  411e9b:	mov    rdi,rax
  411e9e:	call   4040e0 <memcpy@plt>
  411ea3:	mov    rdi,rbx
  411ea6:	pop    rbx
  411ea7:	pop    rbp
  411ea8:	pop    r12
  411eaa:	jmp    411d90 <flatcc_builder_end_offset_vector@@Base>
  411eaf:	nop

0000000000411eb0 <flatcc_builder_end_offset_vector_for_unions@@Base>:
  411eb0:	push   rbp
  411eb1:	push   rbx
  411eb2:	sub    rsp,0x8
  411eb6:	mov    rax,QWORD PTR [rdi+0x30]
  411eba:	cmp    WORD PTR [rax+0xe],0x5
  411ebf:	jne    411f67 <flatcc_builder_end_offset_vector_for_unions@@Base+0xb7>
  411ec5:	mov    edx,DWORD PTR [rax+0x14]
  411ec8:	mov    rcx,rsi
  411ecb:	mov    rsi,QWORD PTR [rdi+0x18]
  411ecf:	mov    rbx,rdi
  411ed2:	call   40f630 <flatcc_builder_default_alloc@@Base+0x390>
  411ed7:	test   eax,eax
  411ed9:	mov    ebp,eax
  411edb:	jne    411ef0 <flatcc_builder_end_offset_vector_for_unions@@Base+0x40>
  411edd:	add    rsp,0x8
  411ee1:	mov    eax,ebp
  411ee3:	pop    rbx
  411ee4:	pop    rbp
  411ee5:	ret    
  411ee6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  411ef0:	mov    edx,DWORD PTR [rbx+0x20]
  411ef3:	mov    rdi,QWORD PTR [rbx+0x18]
  411ef7:	xor    esi,esi
  411ef9:	call   4040a0 <memset@plt>
  411efe:	mov    rax,QWORD PTR [rbx+0x30]
  411f02:	mov    edi,DWORD PTR [rbx+0x70]
  411f05:	mov    esi,DWORD PTR [rax]
  411f07:	mov    edx,DWORD PTR [rax+0x8]
  411f0a:	mov    ecx,DWORD PTR [rax+0x4]
  411f0d:	mov    DWORD PTR [rbx+0x20],edx
  411f10:	mov    rdx,rsi
  411f13:	mov    DWORD PTR [rbx+0x28],esi
  411f16:	add    rsi,QWORD PTR [rbx+0x68]
  411f1a:	sub    edi,edx
  411f1c:	cmp    ecx,edi
  411f1e:	mov    edx,edi
  411f20:	cmovb  edx,ecx
  411f23:	mov    DWORD PTR [rbx+0x24],edx
  411f26:	movzx  edx,WORD PTR [rbx+0xea]
  411f2d:	cmp    dx,WORD PTR [rbx+0xe8]
  411f34:	mov    QWORD PTR [rbx+0x18],rsi
  411f38:	mov    DWORD PTR [rax+0x4],ecx
  411f3b:	jbe    411f44 <flatcc_builder_end_offset_vector_for_unions@@Base+0x94>
  411f3d:	mov    WORD PTR [rbx+0xe8],dx
  411f44:	movzx  edx,WORD PTR [rax+0xc]
  411f48:	sub    rax,0x24
  411f4c:	sub    DWORD PTR [rbx+0x104],0x1
  411f53:	mov    QWORD PTR [rbx+0x30],rax
  411f57:	mov    eax,ebp
  411f59:	mov    WORD PTR [rbx+0xea],dx
  411f60:	add    rsp,0x8
  411f64:	pop    rbx
  411f65:	pop    rbp
  411f66:	ret    
  411f67:	lea    rcx,[rip+0x7d32]        # 419ca0 <_IO_stdin_used@@Base+0x3ca0>
  411f6e:	lea    rsi,[rip+0x76db]        # 419650 <_IO_stdin_used@@Base+0x3650>
  411f75:	lea    rdi,[rip+0x7824]        # 4197a0 <_IO_stdin_used@@Base+0x37a0>
  411f7c:	mov    edx,0x5d5
  411f81:	call   404090 <__assert_fail@plt>
  411f86:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000411f90 <flatcc_builder_offset_vector_edit@@Base>:
  411f90:	mov    rax,QWORD PTR [rdi+0x18]
  411f94:	ret    
  411f95:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

0000000000411fa0 <flatcc_builder_offset_vector_count@@Base>:
  411fa0:	mov    rax,QWORD PTR [rdi+0x30]
  411fa4:	mov    eax,DWORD PTR [rax+0x14]
  411fa7:	ret    
  411fa8:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000411fb0 <flatcc_builder_create_union_vector_direct@@Base>:
  411fb0:	push   r13
  411fb2:	push   r12
  411fb4:	mov    r13,rcx
  411fb7:	push   rbp
  411fb8:	push   rbx
  411fb9:	mov    r12,rsi
  411fbc:	mov    rcx,r12
  411fbf:	mov    rsi,rdx
  411fc2:	mov    rdx,r13
  411fc5:	sub    rsp,0x8
  411fc9:	mov    rbp,rdi
  411fcc:	call   40f630 <flatcc_builder_default_alloc@@Base+0x390>
  411fd1:	test   eax,eax
  411fd3:	jne    411fe8 <flatcc_builder_create_union_vector_direct@@Base+0x38>
  411fd5:	add    rsp,0x8
  411fd9:	xor    eax,eax
  411fdb:	pop    rbx
  411fdc:	pop    rbp
  411fdd:	pop    r12
  411fdf:	pop    r13
  411fe1:	ret    
  411fe2:	nop    WORD PTR [rax+rax*1+0x0]
  411fe8:	mov    ebx,eax
  411fea:	mov    rdx,r13
  411fed:	mov    ecx,0x1
  411ff2:	mov    rsi,r12
  411ff5:	mov    rdi,rbp
  411ff8:	mov    r9d,0xffffffff
  411ffe:	mov    r8d,0x1
  412004:	call   411af0 <flatcc_builder_create_vector@@Base>
  412009:	mov    rcx,rbx
  41200c:	mov    edx,eax
  41200e:	shl    rcx,0x20
  412012:	mov    rbx,rcx
  412015:	or     rbx,rdx
  412018:	test   eax,eax
  41201a:	mov    rax,rcx
  41201d:	cmovne rax,rbx
  412021:	add    rsp,0x8
  412025:	pop    rbx
  412026:	pop    rbp
  412027:	pop    r12
  412029:	pop    r13
  41202b:	ret    
  41202c:	nop    DWORD PTR [rax+0x0]

0000000000412030 <flatcc_builder_create_union_vector@@Base>:
  412030:	push   r13
  412032:	push   r12
  412034:	mov    r12,rdx
  412037:	push   rbp
  412038:	push   rbx
  412039:	mov    rbp,rsi
  41203c:	mov    rbx,rdi
  41203f:	sub    rsp,0x8
  412043:	call   410e00 <flatcc_builder_start_offset_vector@@Base>
  412048:	test   eax,eax
  41204a:	je     412060 <flatcc_builder_create_union_vector@@Base+0x30>
  41204c:	add    rsp,0x8
  412050:	xor    eax,eax
  412052:	pop    rbx
  412053:	pop    rbp
  412054:	pop    r12
  412056:	pop    r13
  412058:	ret    
  412059:	nop    DWORD PTR [rax+0x0]
  412060:	mov    rsi,r12
  412063:	mov    rdi,rbx
  412066:	call   4108c0 <flatcc_builder_extend_offset_vector@@Base>
  41206b:	test   rax,rax
  41206e:	je     41204c <flatcc_builder_create_union_vector@@Base+0x1c>
  412070:	mov    r13d,DWORD PTR [rbx+0x20]
  412074:	mov    rax,r13
  412077:	add    eax,r12d
  41207a:	cmp    eax,DWORD PTR [rbx+0x24]
  41207d:	mov    DWORD PTR [rbx+0x20],eax
  412080:	jae    412160 <flatcc_builder_create_union_vector@@Base+0x130>
  412086:	add    r13,QWORD PTR [rbx+0x18]
  41208a:	je     41204c <flatcc_builder_create_union_vector@@Base+0x1c>
  41208c:	mov    rdi,rbx
  41208f:	call   411f90 <flatcc_builder_offset_vector_edit@@Base>
  412094:	xor    edi,edi
  412096:	test   r12,r12
  412099:	je     4120bd <flatcc_builder_create_union_vector@@Base+0x8d>
  41209b:	nop    DWORD PTR [rax+rax*1+0x0]
  4120a0:	movzx  r8d,BYTE PTR [rbp+rdi*8+0x0]
  4120a6:	mov    BYTE PTR [r13+rdi*1+0x0],r8b
  4120ab:	mov    r8d,DWORD PTR [rbp+rdi*8+0x4]
  4120b0:	mov    DWORD PTR [rax+rdi*4],r8d
  4120b4:	add    rdi,0x1
  4120b8:	cmp    r12,rdi
  4120bb:	jne    4120a0 <flatcc_builder_create_union_vector@@Base+0x70>
  4120bd:	mov    rcx,r12
  4120c0:	mov    rdx,rax
  4120c3:	mov    rsi,r13
  4120c6:	mov    rdi,rbx
  4120c9:	call   411fb0 <flatcc_builder_create_union_vector_direct@@Base>
  4120ce:	mov    edx,DWORD PTR [rbx+0x20]
  4120d1:	mov    rdi,QWORD PTR [rbx+0x18]
  4120d5:	xor    esi,esi
  4120d7:	mov    r12,rax
  4120da:	mov    rbp,rax
  4120dd:	sar    r12,0x20
  4120e1:	call   4040a0 <memset@plt>
  4120e6:	mov    rax,QWORD PTR [rbx+0x30]
  4120ea:	mov    esi,DWORD PTR [rax]
  4120ec:	mov    edx,DWORD PTR [rax+0x8]
  4120ef:	mov    ecx,DWORD PTR [rax+0x4]
  4120f2:	mov    DWORD PTR [rbx+0x20],edx
  4120f5:	mov    DWORD PTR [rbx+0x28],esi
  4120f8:	mov    rdx,rsi
  4120fb:	add    rsi,QWORD PTR [rbx+0x68]
  4120ff:	mov    QWORD PTR [rbx+0x18],rsi
  412103:	mov    esi,DWORD PTR [rbx+0x70]
  412106:	sub    esi,edx
  412108:	cmp    ecx,esi
  41210a:	mov    edx,esi
  41210c:	cmovb  edx,ecx
  41210f:	mov    DWORD PTR [rbx+0x24],edx
  412112:	movzx  edx,WORD PTR [rbx+0xea]
  412119:	cmp    dx,WORD PTR [rbx+0xe8]
  412120:	mov    DWORD PTR [rax+0x4],ecx
  412123:	jbe    41212c <flatcc_builder_create_union_vector@@Base+0xfc>
  412125:	mov    WORD PTR [rbx+0xe8],dx
  41212c:	movzx  edx,WORD PTR [rax+0xc]
  412130:	sub    rax,0x24
  412134:	sub    DWORD PTR [rbx+0x104],0x1
  41213b:	mov    QWORD PTR [rbx+0x30],rax
  41213f:	shl    r12,0x20
  412143:	mov    eax,ebp
  412145:	or     rax,r12
  412148:	mov    WORD PTR [rbx+0xea],dx
  41214f:	add    rsp,0x8
  412153:	pop    rbx
  412154:	pop    rbp
  412155:	pop    r12
  412157:	pop    r13
  412159:	ret    
  41215a:	nop    WORD PTR [rax+rax*1+0x0]
  412160:	lea    esi,[rax+0x1]
  412163:	mov    edx,0xfffffffc
  412168:	mov    rdi,rbx
  41216b:	call   40f240 <time_struct_buffer@@Base+0xa0>
  412170:	test   eax,eax
  412172:	je     412086 <flatcc_builder_create_union_vector@@Base+0x56>
  412178:	jmp    41204c <flatcc_builder_create_union_vector@@Base+0x1c>
  41217d:	nop    DWORD PTR [rax]

0000000000412180 <flatcc_builder_start_union_vector@@Base>:
  412180:	push   rbx
  412181:	mov    esi,0x4
  412186:	mov    rbx,rdi
  412189:	call   40f500 <flatcc_builder_default_alloc@@Base+0x260>
  41218e:	test   eax,eax
  412190:	jne    4121d8 <flatcc_builder_start_union_vector@@Base+0x58>
  412192:	mov    rcx,QWORD PTR [rbx+0x30]
  412196:	mov    edx,0x7
  41219b:	mov    DWORD PTR [rcx+0x10],0x8
  4121a2:	mov    DWORD PTR [rcx+0x14],0x0
  4121a9:	mov    WORD PTR [rcx+0xe],dx
  4121ad:	mov    edx,DWORD PTR [rbx+0x28]
  4121b0:	mov    rsi,rdx
  4121b3:	add    rdx,QWORD PTR [rbx+0x68]
  4121b7:	mov    QWORD PTR [rbx+0x18],rdx
  4121bb:	mov    edx,DWORD PTR [rbx+0x70]
  4121be:	sub    edx,esi
  4121c0:	mov    esi,0xfffffffc
  4121c5:	cmp    edx,esi
  4121c7:	cmova  edx,esi
  4121ca:	mov    DWORD PTR [rbx+0x24],edx
  4121cd:	mov    DWORD PTR [rcx+0x4],esi
  4121d0:	pop    rbx
  4121d1:	ret    
  4121d2:	nop    WORD PTR [rax+rax*1+0x0]
  4121d8:	mov    eax,0xffffffff
  4121dd:	pop    rbx
  4121de:	ret    
  4121df:	nop

00000000004121e0 <flatcc_builder_union_vector_edit@@Base>:
  4121e0:	mov    rax,QWORD PTR [rdi+0x18]
  4121e4:	ret    
  4121e5:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

00000000004121f0 <flatcc_builder_union_vector_count@@Base>:
  4121f0:	mov    rax,QWORD PTR [rdi+0x30]
  4121f4:	mov    eax,DWORD PTR [rax+0x14]
  4121f7:	ret    
  4121f8:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000412200 <flatcc_builder_end_union_vector@@Base>:
  412200:	push   r13
  412202:	push   r12
  412204:	push   rbp
  412205:	push   rbx
  412206:	sub    rsp,0x8
  41220a:	mov    rax,QWORD PTR [rdi+0x30]
  41220e:	cmp    WORD PTR [rax+0xe],0x7
  412213:	jne    412345 <flatcc_builder_end_union_vector@@Base+0x145>
  412219:	mov    rbx,rdi
  41221c:	call   4121f0 <flatcc_builder_union_vector_count@@Base>
  412221:	mov    ebp,DWORD PTR [rbx+0x20]
  412224:	mov    r12,rax
  412227:	lea    eax,[rax+rax*4]
  41222a:	add    eax,ebp
  41222c:	cmp    eax,DWORD PTR [rbx+0x24]
  41222f:	mov    DWORD PTR [rbx+0x20],eax
  412232:	jae    412320 <flatcc_builder_end_union_vector@@Base+0x120>
  412238:	add    rbp,QWORD PTR [rbx+0x18]
  41223c:	je     412338 <flatcc_builder_end_union_vector@@Base+0x138>
  412242:	mov    rdi,rbx
  412245:	lea    r13,[rbp+r12*4+0x0]
  41224a:	call   4121e0 <flatcc_builder_union_vector_edit@@Base>
  41224f:	xor    edi,edi
  412251:	test   r12,r12
  412254:	je     41227d <flatcc_builder_end_union_vector@@Base+0x7d>
  412256:	nop    WORD PTR cs:[rax+rax*1+0x0]
  412260:	movzx  r8d,BYTE PTR [rax+rdi*8]
  412265:	mov    BYTE PTR [r13+rdi*1+0x0],r8b
  41226a:	mov    r8d,DWORD PTR [rax+rdi*8+0x4]
  41226f:	mov    DWORD PTR [rbp+rdi*4+0x0],r8d
  412274:	add    rdi,0x1
  412278:	cmp    r12,rdi
  41227b:	jne    412260 <flatcc_builder_end_union_vector@@Base+0x60>
  41227d:	mov    rcx,r12
  412280:	mov    rdx,rbp
  412283:	mov    rsi,r13
  412286:	mov    rdi,rbx
  412289:	call   411fb0 <flatcc_builder_create_union_vector_direct@@Base>
  41228e:	mov    edx,DWORD PTR [rbx+0x20]
  412291:	mov    rdi,QWORD PTR [rbx+0x18]
  412295:	xor    esi,esi
  412297:	mov    r12,rax
  41229a:	mov    rbp,rax
  41229d:	sar    r12,0x20
  4122a1:	call   4040a0 <memset@plt>
  4122a6:	mov    rax,QWORD PTR [rbx+0x30]
  4122aa:	mov    esi,DWORD PTR [rax]
  4122ac:	mov    edx,DWORD PTR [rax+0x8]
  4122af:	mov    ecx,DWORD PTR [rax+0x4]
  4122b2:	mov    DWORD PTR [rbx+0x20],edx
  4122b5:	mov    DWORD PTR [rbx+0x28],esi
  4122b8:	mov    rdx,rsi
  4122bb:	add    rsi,QWORD PTR [rbx+0x68]
  4122bf:	mov    QWORD PTR [rbx+0x18],rsi
  4122c3:	mov    esi,DWORD PTR [rbx+0x70]
  4122c6:	sub    esi,edx
  4122c8:	cmp    ecx,esi
  4122ca:	mov    edx,esi
  4122cc:	cmovb  edx,ecx
  4122cf:	mov    DWORD PTR [rbx+0x24],edx
  4122d2:	movzx  edx,WORD PTR [rbx+0xea]
  4122d9:	cmp    dx,WORD PTR [rbx+0xe8]
  4122e0:	mov    DWORD PTR [rax+0x4],ecx
  4122e3:	jbe    4122ec <flatcc_builder_end_union_vector@@Base+0xec>
  4122e5:	mov    WORD PTR [rbx+0xe8],dx
  4122ec:	movzx  edx,WORD PTR [rax+0xc]
  4122f0:	sub    rax,0x24
  4122f4:	sub    DWORD PTR [rbx+0x104],0x1
  4122fb:	mov    QWORD PTR [rbx+0x30],rax
  4122ff:	shl    r12,0x20
  412303:	mov    eax,ebp
  412305:	or     rax,r12
  412308:	mov    WORD PTR [rbx+0xea],dx
  41230f:	add    rsp,0x8
  412313:	pop    rbx
  412314:	pop    rbp
  412315:	pop    r12
  412317:	pop    r13
  412319:	ret    
  41231a:	nop    WORD PTR [rax+rax*1+0x0]
  412320:	lea    esi,[rax+0x1]
  412323:	mov    edx,0xfffffffc
  412328:	mov    rdi,rbx
  41232b:	call   40f240 <time_struct_buffer@@Base+0xa0>
  412330:	test   eax,eax
  412332:	je     412238 <flatcc_builder_end_union_vector@@Base+0x38>
  412338:	add    rsp,0x8
  41233c:	xor    eax,eax
  41233e:	pop    rbx
  41233f:	pop    rbp
  412340:	pop    r12
  412342:	pop    r13
  412344:	ret    
  412345:	lea    rcx,[rip+0x78d4]        # 419c20 <_IO_stdin_used@@Base+0x3c20>
  41234c:	lea    rsi,[rip+0x72fd]        # 419650 <_IO_stdin_used@@Base+0x3650>
  412353:	lea    rdi,[rip+0x756e]        # 4198c8 <_IO_stdin_used@@Base+0x38c8>
  41235a:	mov    edx,0x651
  41235f:	call   404090 <__assert_fail@plt>
  412364:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  41236f:	nop

0000000000412370 <flatcc_builder_extend_union_vector@@Base>:
  412370:	push   rbp
  412371:	push   rbx
  412372:	xor    edx,edx
  412374:	mov    ecx,esi
  412376:	sub    rsp,0x8
  41237a:	mov    rax,QWORD PTR [rdi+0x30]
  41237e:	add    ecx,DWORD PTR [rax+0x14]
  412381:	setb   dl
  412384:	test   edx,edx
  412386:	jne    4123cd <flatcc_builder_extend_union_vector@@Base+0x5d>
  412388:	cmp    ecx,0x1fffffff
  41238e:	ja     4123cd <flatcc_builder_extend_union_vector@@Base+0x5d>
  412390:	mov    DWORD PTR [rax+0x14],ecx
  412393:	mov    ebp,DWORD PTR [rdi+0x20]
  412396:	mov    rbx,rdi
  412399:	lea    eax,[rbp+rsi*8+0x0]
  41239d:	cmp    eax,DWORD PTR [rdi+0x24]
  4123a0:	mov    DWORD PTR [rdi+0x20],eax
  4123a3:	jae    4123b8 <flatcc_builder_extend_union_vector@@Base+0x48>
  4123a5:	mov    rax,rbp
  4123a8:	add    rax,QWORD PTR [rbx+0x18]
  4123ac:	add    rsp,0x8
  4123b0:	pop    rbx
  4123b1:	pop    rbp
  4123b2:	ret    
  4123b3:	nop    DWORD PTR [rax+rax*1+0x0]
  4123b8:	lea    esi,[rax+0x1]
  4123bb:	mov    edx,0xfffffffc
  4123c0:	call   40f240 <time_struct_buffer@@Base+0xa0>
  4123c5:	test   eax,eax
  4123c7:	je     4123a5 <flatcc_builder_extend_union_vector@@Base+0x35>
  4123c9:	xor    eax,eax
  4123cb:	jmp    4123ac <flatcc_builder_extend_union_vector@@Base+0x3c>
  4123cd:	call   404653 <posix_memalign@plt+0x523>
  4123d2:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4123dd:	nop    DWORD PTR [rax]

00000000004123e0 <flatcc_builder_truncate_union_vector@@Base>:
  4123e0:	sub    rsp,0x8
  4123e4:	mov    rax,QWORD PTR [rdi+0x30]
  4123e8:	cmp    WORD PTR [rax+0xe],0x7
  4123ed:	jne    41241f <flatcc_builder_truncate_union_vector@@Base+0x3f>
  4123ef:	mov    edx,DWORD PTR [rax+0x14]
  4123f2:	cmp    edx,esi
  4123f4:	jb     41243e <flatcc_builder_truncate_union_vector@@Base+0x5e>
  4123f6:	sub    edx,esi
  4123f8:	imul   esi,DWORD PTR [rax+0x10]
  4123fc:	mov    DWORD PTR [rax+0x14],edx
  4123ff:	mov    eax,DWORD PTR [rdi+0x20]
  412402:	mov    rcx,QWORD PTR [rdi+0x18]
  412406:	sub    eax,esi
  412408:	mov    edx,esi
  41240a:	xor    esi,esi
  41240c:	mov    DWORD PTR [rdi+0x20],eax
  41240f:	lea    rdi,[rcx+rax*1]
  412413:	call   4040a0 <memset@plt>
  412418:	xor    eax,eax
  41241a:	add    rsp,0x8
  41241e:	ret    
  41241f:	lea    rcx,[rip+0x77ba]        # 419be0 <_IO_stdin_used@@Base+0x3be0>
  412426:	lea    rsi,[rip+0x7223]        # 419650 <_IO_stdin_used@@Base+0x3650>
  41242d:	lea    rdi,[rip+0x7494]        # 4198c8 <_IO_stdin_used@@Base+0x38c8>
  412434:	mov    edx,0x681
  412439:	call   404090 <__assert_fail@plt>
  41243e:	lea    rcx,[rip+0x779b]        # 419be0 <_IO_stdin_used@@Base+0x3be0>
  412445:	lea    rsi,[rip+0x7204]        # 419650 <_IO_stdin_used@@Base+0x3650>
  41244c:	lea    rdi,[rip+0x73dd]        # 419830 <_IO_stdin_used@@Base+0x3830>
  412453:	mov    edx,0x682
  412458:	call   404090 <__assert_fail@plt>
  41245d:	nop    DWORD PTR [rax]

0000000000412460 <flatcc_builder_union_vector_push@@Base>:
  412460:	push   r12
  412462:	push   rbp
  412463:	push   rbx
  412464:	mov    rdx,QWORD PTR [rdi+0x30]
  412468:	cmp    WORD PTR [rdx+0xe],0x7
  41246d:	jne    4124c0 <flatcc_builder_union_vector_push@@Base+0x60>
  41246f:	mov    eax,DWORD PTR [rdx+0x14]
  412472:	cmp    eax,0x1fffffff
  412477:	je     4124b9 <flatcc_builder_union_vector_push@@Base+0x59>
  412479:	add    eax,0x1
  41247c:	mov    rbp,rdi
  41247f:	mov    r12,rsi
  412482:	mov    DWORD PTR [rdx+0x14],eax
  412485:	mov    ebx,DWORD PTR [rdi+0x20]
  412488:	lea    edx,[rbx+0x8]
  41248b:	cmp    edx,DWORD PTR [rdi+0x24]
  41248e:	mov    DWORD PTR [rdi+0x20],edx
  412491:	jae    4124a8 <flatcc_builder_union_vector_push@@Base+0x48>
  412493:	mov    rax,rbx
  412496:	add    rax,QWORD PTR [rbp+0x18]
  41249a:	je     4124b9 <flatcc_builder_union_vector_push@@Base+0x59>
  41249c:	mov    QWORD PTR [rax],r12
  41249f:	pop    rbx
  4124a0:	pop    rbp
  4124a1:	pop    r12
  4124a3:	ret    
  4124a4:	nop    DWORD PTR [rax+0x0]
  4124a8:	lea    esi,[rbx+0x9]
  4124ab:	mov    edx,0xfffffffc
  4124b0:	call   40f240 <time_struct_buffer@@Base+0xa0>
  4124b5:	test   eax,eax
  4124b7:	je     412493 <flatcc_builder_union_vector_push@@Base+0x33>
  4124b9:	pop    rbx
  4124ba:	xor    eax,eax
  4124bc:	pop    rbp
  4124bd:	pop    r12
  4124bf:	ret    
  4124c0:	lea    rcx,[rip+0x76d9]        # 419ba0 <_IO_stdin_used@@Base+0x3ba0>
  4124c7:	lea    rsi,[rip+0x7182]        # 419650 <_IO_stdin_used@@Base+0x3650>
  4124ce:	lea    rdi,[rip+0x73f3]        # 4198c8 <_IO_stdin_used@@Base+0x38c8>
  4124d5:	mov    edx,0x68d
  4124da:	call   404090 <__assert_fail@plt>
  4124df:	nop

00000000004124e0 <flatcc_builder_append_union_vector@@Base>:
  4124e0:	push   r13
  4124e2:	push   r12
  4124e4:	push   rbp
  4124e5:	push   rbx
  4124e6:	sub    rsp,0x8
  4124ea:	mov    rax,QWORD PTR [rdi+0x30]
  4124ee:	cmp    WORD PTR [rax+0xe],0x7
  4124f3:	jne    41256b <flatcc_builder_append_union_vector@@Base+0x8b>
  4124f5:	mov    r13,rsi
  4124f8:	mov    ecx,edx
  4124fa:	xor    esi,esi
  4124fc:	add    ecx,DWORD PTR [rax+0x14]
  4124ff:	setb   sil
  412503:	test   esi,esi
  412505:	jne    412566 <flatcc_builder_append_union_vector@@Base+0x86>
  412507:	cmp    ecx,0x1fffffff
  41250d:	ja     412566 <flatcc_builder_append_union_vector@@Base+0x86>
  41250f:	mov    DWORD PTR [rax+0x14],ecx
  412512:	mov    r12d,DWORD PTR [rdi+0x20]
  412516:	lea    ebx,[rdx*8+0x0]
  41251d:	mov    rbp,rdi
  412520:	mov    rdx,r12
  412523:	add    edx,ebx
  412525:	cmp    edx,DWORD PTR [rdi+0x24]
  412528:	mov    DWORD PTR [rdi+0x20],edx
  41252b:	jae    412550 <flatcc_builder_append_union_vector@@Base+0x70>
  41252d:	add    r12,QWORD PTR [rbp+0x18]
  412531:	je     412540 <flatcc_builder_append_union_vector@@Base+0x60>
  412533:	mov    edx,ebx
  412535:	mov    rsi,r13
  412538:	mov    rdi,r12
  41253b:	call   4040e0 <memcpy@plt>
  412540:	add    rsp,0x8
  412544:	mov    rax,r12
  412547:	pop    rbx
  412548:	pop    rbp
  412549:	pop    r12
  41254b:	pop    r13
  41254d:	ret    
  41254e:	xchg   ax,ax
  412550:	lea    esi,[rdx+0x1]
  412553:	mov    edx,0xfffffffc
  412558:	call   40f240 <time_struct_buffer@@Base+0xa0>
  41255d:	test   eax,eax
  41255f:	je     41252d <flatcc_builder_append_union_vector@@Base+0x4d>
  412561:	xor    r12d,r12d
  412564:	jmp    412540 <flatcc_builder_append_union_vector@@Base+0x60>
  412566:	call   404653 <posix_memalign@plt+0x523>
  41256b:	lea    rcx,[rip+0x75ee]        # 419b60 <_IO_stdin_used@@Base+0x3b60>
  412572:	lea    rsi,[rip+0x70d7]        # 419650 <_IO_stdin_used@@Base+0x3650>
  412579:	lea    rdi,[rip+0x7348]        # 4198c8 <_IO_stdin_used@@Base+0x38c8>
  412580:	mov    edx,0x69c
  412585:	call   404090 <__assert_fail@plt>
  41258a:	nop    WORD PTR [rax+rax*1+0x0]

0000000000412590 <flatcc_builder_create_string@@Base>:
  412590:	push   rbp
  412591:	push   rbx
  412592:	sub    rsp,0xb8
  412599:	mov    rax,QWORD PTR fs:0x28
  4125a2:	mov    QWORD PTR [rsp+0xa8],rax
  4125aa:	xor    eax,eax
  4125ac:	mov    eax,0xffffffff
  4125b1:	cmp    rdx,rax
  4125b4:	ja     412680 <flatcc_builder_create_string@@Base+0xf0>
  4125ba:	mov    rbx,rdi
  4125bd:	mov    edi,DWORD PTR [rdi+0xf0]
  4125c3:	lea    rcx,[rsp+0xc]
  4125c8:	mov    DWORD PTR [rsp+0xc],edx
  4125cc:	mov    QWORD PTR [rsp+0x28],0x4
  4125d5:	mov    QWORD PTR [rsp+0x20],rcx
  4125da:	lea    eax,[rdi-0x1]
  4125dd:	sub    eax,edx
  4125df:	and    eax,0x3
  4125e2:	add    eax,0x1
  4125e5:	test   rdx,rdx
  4125e8:	jne    412660 <flatcc_builder_create_string@@Base+0xd0>
  4125ea:	mov    edx,0x2
  4125ef:	mov    ecx,0x1
  4125f4:	mov    r8d,0x4
  4125fa:	add    r8,rax
  4125fd:	mov    rsi,0x41a140
  412604:	mov    ebp,edi
  412606:	sub    ebp,r8d
  412609:	shl    rcx,0x4
  41260d:	mov    QWORD PTR [rsp+0x10],r8
  412612:	cmp    edi,ebp
  412614:	mov    QWORD PTR [rsp+rcx*1+0x28],rax
  412619:	mov    DWORD PTR [rsp+0x18],edx
  41261d:	mov    QWORD PTR [rsp+rcx*1+0x20],rsi
  412622:	jle    412684 <flatcc_builder_create_string@@Base+0xf4>
  412624:	lea    rsi,[rsp+0x20]
  412629:	mov    rdi,QWORD PTR [rbx+0x38]
  41262d:	mov    ecx,ebp
  41262f:	call   QWORD PTR [rbx+0x48]
  412632:	test   eax,eax
  412634:	jne    4126a8 <flatcc_builder_create_string@@Base+0x118>
  412636:	mov    DWORD PTR [rbx+0xf0],ebp
  41263c:	mov    rbx,QWORD PTR [rsp+0xa8]
  412644:	xor    rbx,QWORD PTR fs:0x28
  41264d:	mov    eax,ebp
  41264f:	jne    4126a3 <flatcc_builder_create_string@@Base+0x113>
  412651:	add    rsp,0xb8
  412658:	pop    rbx
  412659:	pop    rbp
  41265a:	ret    
  41265b:	nop    DWORD PTR [rax+rax*1+0x0]
  412660:	lea    r8,[rdx+0x4]
  412664:	mov    QWORD PTR [rsp+0x38],rdx
  412669:	mov    QWORD PTR [rsp+0x30],rsi
  41266e:	mov    edx,0x3
  412673:	mov    ecx,0x2
  412678:	jmp    4125fa <flatcc_builder_create_string@@Base+0x6a>
  41267d:	nop    DWORD PTR [rax]
  412680:	xor    ebp,ebp
  412682:	jmp    41263c <flatcc_builder_create_string@@Base+0xac>
  412684:	lea    rcx,[rip+0x7a05]        # 41a090 <_IO_stdin_used@@Base+0x4090>
  41268b:	lea    rsi,[rip+0x6fbe]        # 419650 <_IO_stdin_used@@Base+0x3650>
  412692:	lea    rdi,[rip+0x734e]        # 4199e7 <_IO_stdin_used@@Base+0x39e7>
  412699:	mov    edx,0x287
  41269e:	call   404090 <__assert_fail@plt>
  4126a3:	call   404070 <__stack_chk_fail@plt>
  4126a8:	call   404630 <posix_memalign@plt+0x500>
  4126ad:	nop    DWORD PTR [rax]

00000000004126b0 <flatcc_builder_create_string_str@@Base>:
  4126b0:	push   rbp
  4126b1:	push   rbx
  4126b2:	mov    rbp,rdi
  4126b5:	mov    rdi,rsi
  4126b8:	mov    rbx,rsi
  4126bb:	sub    rsp,0x8
  4126bf:	call   404060 <strlen@plt>
  4126c4:	add    rsp,0x8
  4126c8:	mov    rsi,rbx
  4126cb:	mov    rdi,rbp
  4126ce:	pop    rbx
  4126cf:	pop    rbp
  4126d0:	mov    rdx,rax
  4126d3:	jmp    412590 <flatcc_builder_create_string@@Base>
  4126d8:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004126e0 <flatcc_builder_create_string_strn@@Base>:
  4126e0:	push   r12
  4126e2:	push   rbp
  4126e3:	mov    rbp,rsi
  4126e6:	push   rbx
  4126e7:	mov    r12,rdi
  4126ea:	xor    esi,esi
  4126ec:	mov    rdi,rbp
  4126ef:	mov    rbx,rdx
  4126f2:	call   4040b0 <memchr@plt>
  4126f7:	mov    rdx,rax
  4126fa:	mov    rsi,rbp
  4126fd:	mov    rdi,r12
  412700:	sub    rdx,rbp
  412703:	test   rax,rax
  412706:	cmovne rbx,rdx
  41270a:	mov    rdx,rbx
  41270d:	pop    rbx
  41270e:	pop    rbp
  41270f:	pop    r12
  412711:	jmp    412590 <flatcc_builder_create_string@@Base>
  412716:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000412720 <flatcc_builder_end_string@@Base>:
  412720:	push   rbp
  412721:	push   rbx
  412722:	sub    rsp,0x8
  412726:	mov    rax,QWORD PTR [rdi+0x30]
  41272a:	cmp    WORD PTR [rax+0xe],0x6
  41272f:	jne    4127f6 <flatcc_builder_end_string@@Base+0xd6>
  412735:	mov    edx,DWORD PTR [rax+0x14]
  412738:	mov    rbx,rdi
  41273b:	cmp    edx,DWORD PTR [rdi+0x20]
  41273e:	jne    4127d7 <flatcc_builder_end_string@@Base+0xb7>
  412744:	mov    rsi,QWORD PTR [rdi+0x18]
  412748:	call   412590 <flatcc_builder_create_string@@Base>
  41274d:	test   eax,eax
  41274f:	mov    ebp,eax
  412751:	jne    412760 <flatcc_builder_end_string@@Base+0x40>
  412753:	add    rsp,0x8
  412757:	mov    eax,ebp
  412759:	pop    rbx
  41275a:	pop    rbp
  41275b:	ret    
  41275c:	nop    DWORD PTR [rax+0x0]
  412760:	mov    edx,DWORD PTR [rbx+0x20]
  412763:	mov    rdi,QWORD PTR [rbx+0x18]
  412767:	xor    esi,esi
  412769:	call   4040a0 <memset@plt>
  41276e:	mov    rax,QWORD PTR [rbx+0x30]
  412772:	mov    edi,DWORD PTR [rbx+0x70]
  412775:	mov    esi,DWORD PTR [rax]
  412777:	mov    edx,DWORD PTR [rax+0x8]
  41277a:	mov    ecx,DWORD PTR [rax+0x4]
  41277d:	mov    DWORD PTR [rbx+0x20],edx
  412780:	mov    rdx,rsi
  412783:	mov    DWORD PTR [rbx+0x28],esi
  412786:	add    rsi,QWORD PTR [rbx+0x68]
  41278a:	sub    edi,edx
  41278c:	cmp    ecx,edi
  41278e:	mov    edx,edi
  412790:	cmovb  edx,ecx
  412793:	mov    DWORD PTR [rbx+0x24],edx
  412796:	movzx  edx,WORD PTR [rbx+0xea]
  41279d:	cmp    dx,WORD PTR [rbx+0xe8]
  4127a4:	mov    QWORD PTR [rbx+0x18],rsi
  4127a8:	mov    DWORD PTR [rax+0x4],ecx
  4127ab:	jbe    4127b4 <flatcc_builder_end_string@@Base+0x94>
  4127ad:	mov    WORD PTR [rbx+0xe8],dx
  4127b4:	movzx  edx,WORD PTR [rax+0xc]
  4127b8:	sub    rax,0x24
  4127bc:	sub    DWORD PTR [rbx+0x104],0x1
  4127c3:	mov    QWORD PTR [rbx+0x30],rax
  4127c7:	mov    eax,ebp
  4127c9:	mov    WORD PTR [rbx+0xea],dx
  4127d0:	add    rsp,0x8
  4127d4:	pop    rbx
  4127d5:	pop    rbp
  4127d6:	ret    
  4127d7:	lea    rcx,[rip+0x7362]        # 419b40 <_IO_stdin_used@@Base+0x3b40>
  4127de:	lea    rsi,[rip+0x6e6b]        # 419650 <_IO_stdin_used@@Base+0x3650>
  4127e5:	lea    rdi,[rip+0x7114]        # 419900 <_IO_stdin_used@@Base+0x3900>
  4127ec:	mov    edx,0x6c5
  4127f1:	call   404090 <__assert_fail@plt>
  4127f6:	lea    rcx,[rip+0x7343]        # 419b40 <_IO_stdin_used@@Base+0x3b40>
  4127fd:	lea    rsi,[rip+0x6e4c]        # 419650 <_IO_stdin_used@@Base+0x3650>
  412804:	lea    rdi,[rip+0x6fcd]        # 4197d8 <_IO_stdin_used@@Base+0x37d8>
  41280b:	mov    edx,0x6c4
  412810:	call   404090 <__assert_fail@plt>
  412815:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

0000000000412820 <flatcc_builder_string_edit@@Base>:
  412820:	mov    rax,QWORD PTR [rdi+0x18]
  412824:	ret    
  412825:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

0000000000412830 <flatcc_builder_string_len@@Base>:
  412830:	mov    rax,QWORD PTR [rdi+0x30]
  412834:	mov    eax,DWORD PTR [rax+0x14]
  412837:	ret    
  412838:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000412840 <flatcc_builder_table_add@@Base>:
  412840:	push   r13
  412842:	push   r12
  412844:	push   rbp
  412845:	push   rbx
  412846:	sub    rsp,0x8
  41284a:	mov    rax,QWORD PTR [rdi+0x30]
  41284e:	cmp    WORD PTR [rax+0xe],0x3
  412853:	jne    412962 <flatcc_builder_table_add@@Base+0x122>
  412859:	cmp    esi,0x7ffc
  41285f:	mov    r12d,esi
  412862:	ja     412943 <flatcc_builder_table_add@@Base+0x103>
  412868:	cmp    WORD PTR [rdi+0xea],cx
  41286f:	mov    rbx,rdi
  412872:	jb     4128e0 <flatcc_builder_table_add@@Base+0xa0>
  412874:	movsxd r13,r12d
  412877:	add    r13,r13
  41287a:	mov    rsi,r13
  41287d:	add    rsi,QWORD PTR [rbx+0x8]
  412881:	cmp    WORD PTR [rsi],0x0
  412885:	jne    412924 <flatcc_builder_table_add@@Base+0xe4>
  41288b:	mov    eax,DWORD PTR [rbx+0x14]
  41288e:	movzx  ecx,cx
  412891:	xor    eax,r12d
  412894:	imul   eax,eax,0x9e3779b1
  41289a:	xor    eax,edx
  41289c:	imul   eax,eax,0x9e3779b1
  4128a2:	mov    DWORD PTR [rbx+0x14],eax
  4128a5:	mov    eax,DWORD PTR [rbx+0x20]
  4128a8:	lea    ebp,[rcx+rax*1-0x1]
  4128ac:	neg    ecx
  4128ae:	and    ebp,ecx
  4128b0:	add    edx,ebp
  4128b2:	cmp    edx,DWORD PTR [rbx+0x24]
  4128b5:	mov    DWORD PTR [rbx+0x20],edx
  4128b8:	jae    412900 <flatcc_builder_table_add@@Base+0xc0>
  4128ba:	lea    eax,[rbp+0x4]
  4128bd:	mov    WORD PTR [rsi],ax
  4128c0:	cmp    r12w,WORD PTR [rbx+0x10]
  4128c5:	jae    4128f0 <flatcc_builder_table_add@@Base+0xb0>
  4128c7:	mov    eax,ebp
  4128c9:	add    rax,QWORD PTR [rbx+0x18]
  4128cd:	add    rsp,0x8
  4128d1:	pop    rbx
  4128d2:	pop    rbp
  4128d3:	pop    r12
  4128d5:	pop    r13
  4128d7:	ret    
  4128d8:	nop    DWORD PTR [rax+rax*1+0x0]
  4128e0:	mov    WORD PTR [rdi+0xea],cx
  4128e7:	jmp    412874 <flatcc_builder_table_add@@Base+0x34>
  4128e9:	nop    DWORD PTR [rax+0x0]
  4128f0:	add    r12d,0x1
  4128f4:	mov    WORD PTR [rbx+0x10],r12w
  4128f9:	jmp    4128c7 <flatcc_builder_table_add@@Base+0x87>
  4128fb:	nop    DWORD PTR [rax+rax*1+0x0]
  412900:	lea    esi,[rdx+0x1]
  412903:	mov    rdi,rbx
  412906:	mov    edx,0xfffc
  41290b:	call   40f240 <time_struct_buffer@@Base+0xa0>
  412910:	test   eax,eax
  412912:	jne    412920 <flatcc_builder_table_add@@Base+0xe0>
  412914:	mov    rsi,r13
  412917:	add    rsi,QWORD PTR [rbx+0x8]
  41291b:	jmp    4128ba <flatcc_builder_table_add@@Base+0x7a>
  41291d:	nop    DWORD PTR [rax]
  412920:	xor    eax,eax
  412922:	jmp    4128cd <flatcc_builder_table_add@@Base+0x8d>
  412924:	lea    rcx,[rip+0x71f5]        # 419b20 <_IO_stdin_used@@Base+0x3b20>
  41292b:	lea    rsi,[rip+0x6d1e]        # 419650 <_IO_stdin_used@@Base+0x3650>
  412932:	lea    rdi,[rip+0x70ae]        # 4199e7 <_IO_stdin_used@@Base+0x39e7>
  412939:	mov    edx,0x6f8
  41293e:	call   404090 <__assert_fail@plt>
  412943:	lea    rcx,[rip+0x71d6]        # 419b20 <_IO_stdin_used@@Base+0x3b20>
  41294a:	lea    rsi,[rip+0x6cff]        # 419650 <_IO_stdin_used@@Base+0x3650>
  412951:	lea    rdi,[rip+0x6fd0]        # 419928 <_IO_stdin_used@@Base+0x3928>
  412958:	mov    edx,0x6ee
  41295d:	call   404090 <__assert_fail@plt>
  412962:	lea    rcx,[rip+0x71b7]        # 419b20 <_IO_stdin_used@@Base+0x3b20>
  412969:	lea    rsi,[rip+0x6ce0]        # 419650 <_IO_stdin_used@@Base+0x3650>
  412970:	lea    rdi,[rip+0x6f21]        # 419898 <_IO_stdin_used@@Base+0x3898>
  412977:	mov    edx,0x6ed
  41297c:	call   404090 <__assert_fail@plt>
  412981:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  41298c:	nop    DWORD PTR [rax+0x0]

0000000000412990 <flatcc_builder_table_edit@@Base>:
  412990:	mov    rax,QWORD PTR [rdi+0x30]
  412994:	cmp    WORD PTR [rax+0xe],0x3
  412999:	jne    4129a6 <flatcc_builder_table_edit@@Base+0x16>
  41299b:	mov    eax,DWORD PTR [rdi+0x20]
  41299e:	sub    rax,rsi
  4129a1:	add    rax,QWORD PTR [rdi+0x18]
  4129a5:	ret    
  4129a6:	lea    rcx,[rip+0x7153]        # 419b00 <_IO_stdin_used@@Base+0x3b00>
  4129ad:	lea    rsi,[rip+0x6c9c]        # 419650 <_IO_stdin_used@@Base+0x3650>
  4129b4:	lea    rdi,[rip+0x6edd]        # 419898 <_IO_stdin_used@@Base+0x3898>
  4129bb:	sub    rsp,0x8
  4129bf:	mov    edx,0x702
  4129c4:	call   404090 <__assert_fail@plt>
  4129c9:	nop    DWORD PTR [rax+0x0]

00000000004129d0 <flatcc_builder_table_add_copy@@Base>:
  4129d0:	push   rbp
  4129d1:	push   rbx
  4129d2:	mov    rbx,rcx
  4129d5:	mov    rbp,rdx
  4129d8:	movzx  ecx,r8w
  4129dc:	mov    rdx,rbx
  4129df:	sub    rsp,0x8
  4129e3:	call   412840 <flatcc_builder_table_add@@Base>
  4129e8:	test   rax,rax
  4129eb:	mov    rcx,rax
  4129ee:	je     412a01 <flatcc_builder_table_add_copy@@Base+0x31>
  4129f0:	mov    rdx,rbx
  4129f3:	mov    rsi,rbp
  4129f6:	mov    rdi,rax
  4129f9:	call   4040e0 <memcpy@plt>
  4129fe:	mov    rcx,rax
  412a01:	add    rsp,0x8
  412a05:	mov    rax,rcx
  412a08:	pop    rbx
  412a09:	pop    rbp
  412a0a:	ret    
  412a0b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000412a10 <flatcc_builder_table_add_offset@@Base>:
  412a10:	push   r13
  412a12:	push   r12
  412a14:	push   rbp
  412a15:	push   rbx
  412a16:	sub    rsp,0x8
  412a1a:	mov    rax,QWORD PTR [rdi+0x30]
  412a1e:	cmp    WORD PTR [rax+0xe],0x3
  412a23:	jne    412b22 <flatcc_builder_table_add_offset@@Base+0x112>
  412a29:	cmp    esi,0x7ffc
  412a2f:	mov    r12d,esi
  412a32:	ja     412b03 <flatcc_builder_table_add_offset@@Base+0xf3>
  412a38:	movsxd r13,esi
  412a3b:	mov    rbx,rdi
  412a3e:	add    r13,r13
  412a41:	mov    rdx,r13
  412a44:	add    rdx,QWORD PTR [rdi+0x8]
  412a48:	cmp    WORD PTR [rdx],0x0
  412a4c:	jne    412ae4 <flatcc_builder_table_add_offset@@Base+0xd4>
  412a52:	mov    eax,DWORD PTR [rdi+0x14]
  412a55:	xor    eax,esi
  412a57:	imul   eax,eax,0x9e3779b1
  412a5d:	xor    eax,0x4
  412a60:	imul   eax,eax,0x9e3779b1
  412a66:	mov    DWORD PTR [rdi+0x14],eax
  412a69:	mov    eax,DWORD PTR [rdi+0x20]
  412a6c:	lea    ebp,[rax+0x3]
  412a6f:	and    ebp,0xfffffffc
  412a72:	lea    esi,[rbp+0x4]
  412a75:	cmp    esi,DWORD PTR [rdi+0x24]
  412a78:	mov    DWORD PTR [rdi+0x20],esi
  412a7b:	ja     412ac0 <flatcc_builder_table_add_offset@@Base+0xb0>
  412a7d:	lea    eax,[rbp+0x4]
  412a80:	mov    WORD PTR [rdx],ax
  412a83:	cmp    r12w,WORD PTR [rbx+0x10]
  412a88:	jae    412ab0 <flatcc_builder_table_add_offset@@Base+0xa0>
  412a8a:	mov    rax,QWORD PTR [rbx]
  412a8d:	lea    rdx,[rax+0x2]
  412a91:	mov    QWORD PTR [rbx],rdx
  412a94:	mov    WORD PTR [rax],bp
  412a97:	mov    eax,ebp
  412a99:	add    rax,QWORD PTR [rbx+0x18]
  412a9d:	add    rsp,0x8
  412aa1:	pop    rbx
  412aa2:	pop    rbp
  412aa3:	pop    r12
  412aa5:	pop    r13
  412aa7:	ret    
  412aa8:	nop    DWORD PTR [rax+rax*1+0x0]
  412ab0:	lea    esi,[r12+0x1]
  412ab5:	mov    WORD PTR [rbx+0x10],si
  412ab9:	jmp    412a8a <flatcc_builder_table_add_offset@@Base+0x7a>
  412abb:	nop    DWORD PTR [rax+rax*1+0x0]
  412ac0:	mov    edx,0xfffc
  412ac5:	call   40f240 <time_struct_buffer@@Base+0xa0>
  412aca:	test   eax,eax
  412acc:	jne    412ae0 <flatcc_builder_table_add_offset@@Base+0xd0>
  412ace:	mov    rdx,r13
  412ad1:	add    rdx,QWORD PTR [rbx+0x8]
  412ad5:	jmp    412a7d <flatcc_builder_table_add_offset@@Base+0x6d>
  412ad7:	nop    WORD PTR [rax+rax*1+0x0]
  412ae0:	xor    eax,eax
  412ae2:	jmp    412a9d <flatcc_builder_table_add_offset@@Base+0x8d>
  412ae4:	lea    rcx,[rip+0x6ff5]        # 419ae0 <_IO_stdin_used@@Base+0x3ae0>
  412aeb:	lea    rsi,[rip+0x6b5e]        # 419650 <_IO_stdin_used@@Base+0x3650>
  412af2:	lea    rdi,[rip+0x6eee]        # 4199e7 <_IO_stdin_used@@Base+0x39e7>
  412af9:	mov    edx,0x71b
  412afe:	call   404090 <__assert_fail@plt>
  412b03:	lea    rcx,[rip+0x6fd6]        # 419ae0 <_IO_stdin_used@@Base+0x3ae0>
  412b0a:	lea    rsi,[rip+0x6b3f]        # 419650 <_IO_stdin_used@@Base+0x3650>
  412b11:	lea    rdi,[rip+0x6e10]        # 419928 <_IO_stdin_used@@Base+0x3928>
  412b18:	mov    edx,0x714
  412b1d:	call   404090 <__assert_fail@plt>
  412b22:	lea    rcx,[rip+0x6fb7]        # 419ae0 <_IO_stdin_used@@Base+0x3ae0>
  412b29:	lea    rsi,[rip+0x6b20]        # 419650 <_IO_stdin_used@@Base+0x3650>
  412b30:	lea    rdi,[rip+0x6d61]        # 419898 <_IO_stdin_used@@Base+0x3898>
  412b37:	mov    edx,0x713
  412b3c:	call   404090 <__assert_fail@plt>
  412b41:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  412b4c:	nop    DWORD PTR [rax+0x0]

0000000000412b50 <flatcc_builder_table_add_union@@Base>:
  412b50:	push   r13
  412b52:	push   r12
  412b54:	mov    r13,rdx
  412b57:	push   rbp
  412b58:	push   rbx
  412b59:	sar    r13,0x20
  412b5d:	sub    rsp,0x8
  412b61:	mov    rax,QWORD PTR [rdi+0x30]
  412b65:	cmp    WORD PTR [rax+0xe],0x3
  412b6a:	jne    412be4 <flatcc_builder_table_add_union@@Base+0x94>
  412b6c:	test   dl,dl
  412b6e:	mov    r12,rdi
  412b71:	mov    ebx,esi
  412b73:	mov    rbp,rdx
  412b76:	je     412bc0 <flatcc_builder_table_add_union@@Base+0x70>
  412b78:	test   r13d,r13d
  412b7b:	je     412b8e <flatcc_builder_table_add_union@@Base+0x3e>
  412b7d:	call   412a10 <flatcc_builder_table_add_offset@@Base>
  412b82:	test   rax,rax
  412b85:	je     412c22 <flatcc_builder_table_add_union@@Base+0xd2>
  412b8b:	mov    DWORD PTR [rax],r13d
  412b8e:	lea    esi,[rbx-0x1]
  412b91:	mov    ecx,0x1
  412b96:	mov    edx,0x1
  412b9b:	mov    rdi,r12
  412b9e:	call   412840 <flatcc_builder_table_add@@Base>
  412ba3:	test   rax,rax
  412ba6:	je     412c03 <flatcc_builder_table_add_union@@Base+0xb3>
  412ba8:	mov    BYTE PTR [rax],bpl
  412bab:	add    rsp,0x8
  412baf:	xor    eax,eax
  412bb1:	pop    rbx
  412bb2:	pop    rbp
  412bb3:	pop    r12
  412bb5:	pop    r13
  412bb7:	ret    
  412bb8:	nop    DWORD PTR [rax+rax*1+0x0]
  412bc0:	test   r13d,r13d
  412bc3:	je     412b8e <flatcc_builder_table_add_union@@Base+0x3e>
  412bc5:	lea    rcx,[rip+0x70a4]        # 419c70 <_IO_stdin_used@@Base+0x3c70>
  412bcc:	lea    rsi,[rip+0x6a7d]        # 419650 <_IO_stdin_used@@Base+0x3650>
  412bd3:	lea    rdi,[rip+0x6d96]        # 419970 <_IO_stdin_used@@Base+0x3970>
  412bda:	mov    edx,0x5ef
  412bdf:	call   404090 <__assert_fail@plt>
  412be4:	lea    rcx,[rip+0x7085]        # 419c70 <_IO_stdin_used@@Base+0x3c70>
  412beb:	lea    rsi,[rip+0x6a5e]        # 419650 <_IO_stdin_used@@Base+0x3650>
  412bf2:	lea    rdi,[rip+0x6c9f]        # 419898 <_IO_stdin_used@@Base+0x3898>
  412bf9:	mov    edx,0x5ee
  412bfe:	call   404090 <__assert_fail@plt>
  412c03:	lea    rcx,[rip+0x7066]        # 419c70 <_IO_stdin_used@@Base+0x3c70>
  412c0a:	lea    rsi,[rip+0x6a3f]        # 419650 <_IO_stdin_used@@Base+0x3650>
  412c11:	lea    rdi,[rip+0x6e5e]        # 419a76 <_IO_stdin_used@@Base+0x3a76>
  412c18:	mov    edx,0x5f6
  412c1d:	call   404090 <__assert_fail@plt>
  412c22:	lea    rcx,[rip+0x7047]        # 419c70 <_IO_stdin_used@@Base+0x3c70>
  412c29:	lea    rsi,[rip+0x6a20]        # 419650 <_IO_stdin_used@@Base+0x3650>
  412c30:	lea    rdi,[rip+0x6e35]        # 419a6c <_IO_stdin_used@@Base+0x3a6c>
  412c37:	mov    edx,0x5f2
  412c3c:	call   404090 <__assert_fail@plt>
  412c41:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  412c4c:	nop    DWORD PTR [rax+0x0]

0000000000412c50 <flatcc_builder_table_add_union_vector@@Base>:
  412c50:	push   r13
  412c52:	push   r12
  412c54:	push   rbp
  412c55:	push   rbx
  412c56:	mov    rbp,rdx
  412c59:	sar    rbp,0x20
  412c5d:	sub    rsp,0x18
  412c61:	mov    rax,QWORD PTR [rdi+0x30]
  412c65:	cmp    WORD PTR [rax+0xe],0x3
  412c6a:	jne    412ce6 <flatcc_builder_table_add_union_vector@@Base+0x96>
  412c6c:	test   ebp,ebp
  412c6e:	sete   al
  412c71:	test   edx,edx
  412c73:	sete   cl
  412c76:	cmp    cl,al
  412c78:	je     412ca0 <flatcc_builder_table_add_union_vector@@Base+0x50>
  412c7a:	test   edx,edx
  412c7c:	setne  dl
  412c7f:	cmp    al,dl
  412c81:	je     412d05 <flatcc_builder_table_add_union_vector@@Base+0xb5>
  412c87:	mov    r12d,0xffffffff
  412c8d:	add    rsp,0x18
  412c91:	mov    eax,r12d
  412c94:	pop    rbx
  412c95:	pop    rbp
  412c96:	pop    r12
  412c98:	pop    r13
  412c9a:	ret    
  412c9b:	nop    DWORD PTR [rax+rax*1+0x0]
  412ca0:	xor    r12d,r12d
  412ca3:	test   edx,edx
  412ca5:	je     412c8d <flatcc_builder_table_add_union_vector@@Base+0x3d>
  412ca7:	mov    r13d,esi
  412caa:	lea    esi,[rsi-0x1]
  412cad:	mov    QWORD PTR [rsp+0x8],rdx
  412cb2:	mov    rbx,rdi
  412cb5:	call   412a10 <flatcc_builder_table_add_offset@@Base>
  412cba:	test   rax,rax
  412cbd:	mov    rdx,QWORD PTR [rsp+0x8]
  412cc2:	je     412d43 <flatcc_builder_table_add_union_vector@@Base+0xf3>
  412cc4:	mov    DWORD PTR [rax],edx
  412cc6:	mov    esi,r13d
  412cc9:	mov    rdi,rbx
  412ccc:	call   412a10 <flatcc_builder_table_add_offset@@Base>
  412cd1:	test   rax,rax
  412cd4:	je     412d24 <flatcc_builder_table_add_union_vector@@Base+0xd4>
  412cd6:	mov    DWORD PTR [rax],ebp
  412cd8:	add    rsp,0x18
  412cdc:	mov    eax,r12d
  412cdf:	pop    rbx
  412ce0:	pop    rbp
  412ce1:	pop    r12
  412ce3:	pop    r13
  412ce5:	ret    
  412ce6:	lea    rcx,[rip+0x6f53]        # 419c40 <_IO_stdin_used@@Base+0x3c40>
  412ced:	lea    rsi,[rip+0x695c]        # 419650 <_IO_stdin_used@@Base+0x3650>
  412cf4:	lea    rdi,[rip+0x6b9d]        # 419898 <_IO_stdin_used@@Base+0x3898>
  412cfb:	mov    edx,0x600
  412d00:	call   404090 <__assert_fail@plt>
  412d05:	lea    rcx,[rip+0x6f34]        # 419c40 <_IO_stdin_used@@Base+0x3c40>
  412d0c:	lea    rsi,[rip+0x693d]        # 419650 <_IO_stdin_used@@Base+0x3650>
  412d13:	lea    rdi,[rip+0x6c7e]        # 419998 <_IO_stdin_used@@Base+0x3998>
  412d1a:	mov    edx,0x601
  412d1f:	call   404090 <__assert_fail@plt>
  412d24:	lea    rcx,[rip+0x6f15]        # 419c40 <_IO_stdin_used@@Base+0x3c40>
  412d2b:	lea    rsi,[rip+0x691e]        # 419650 <_IO_stdin_used@@Base+0x3650>
  412d32:	lea    rdi,[rip+0x6d33]        # 419a6c <_IO_stdin_used@@Base+0x3a6c>
  412d39:	mov    edx,0x608
  412d3e:	call   404090 <__assert_fail@plt>
  412d43:	lea    rcx,[rip+0x6ef6]        # 419c40 <_IO_stdin_used@@Base+0x3c40>
  412d4a:	lea    rsi,[rip+0x68ff]        # 419650 <_IO_stdin_used@@Base+0x3650>
  412d51:	lea    rdi,[rip+0x6d14]        # 419a6c <_IO_stdin_used@@Base+0x3a6c>
  412d58:	mov    edx,0x604
  412d5d:	call   404090 <__assert_fail@plt>
  412d62:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  412d6d:	nop    DWORD PTR [rax]

0000000000412d70 <flatcc_builder_push_buffer_alignment@@Base>:
  412d70:	mov    edx,0x4
  412d75:	movzx  eax,WORD PTR [rdi+0xe8]
  412d7c:	mov    WORD PTR [rdi+0xe8],dx
  412d83:	ret    
  412d84:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  412d8f:	nop

0000000000412d90 <flatcc_builder_pop_buffer_alignment@@Base>:
  412d90:	cmp    si,WORD PTR [rdi+0xe8]
  412d97:	jbe    412da0 <flatcc_builder_pop_buffer_alignment@@Base+0x10>
  412d99:	mov    WORD PTR [rdi+0xe8],si
  412da0:	repz ret 
  412da2:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  412dad:	nop    DWORD PTR [rax]

0000000000412db0 <flatcc_builder_get_buffer_alignment@@Base>:
  412db0:	movzx  eax,WORD PTR [rdi+0xe8]
  412db7:	ret    
  412db8:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000412dc0 <flatcc_builder_set_vtable_clustering@@Base>:
  412dc0:	xor    eax,eax
  412dc2:	test   esi,esi
  412dc4:	sete   al
  412dc7:	mov    DWORD PTR [rdi+0x124],eax
  412dcd:	ret    
  412dce:	xchg   ax,ax

0000000000412dd0 <flatcc_builder_set_block_align@@Base>:
  412dd0:	mov    WORD PTR [rdi+0xec],si
  412dd7:	ret    
  412dd8:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000412de0 <flatcc_builder_get_level@@Base>:
  412de0:	mov    eax,DWORD PTR [rdi+0x104]
  412de6:	ret    
  412de7:	nop    WORD PTR [rax+rax*1+0x0]

0000000000412df0 <flatcc_builder_set_max_level@@Base>:
  412df0:	cmp    esi,DWORD PTR [rdi+0x108]
  412df6:	mov    DWORD PTR [rdi+0x120],esi
  412dfc:	jle    412e04 <flatcc_builder_set_max_level@@Base+0x14>
  412dfe:	mov    DWORD PTR [rdi+0x108],esi
  412e04:	repz ret 
  412e06:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000412e10 <flatcc_builder_get_buffer_size@@Base>:
  412e10:	mov    eax,DWORD PTR [rdi+0xf4]
  412e16:	sub    eax,DWORD PTR [rdi+0xf0]
  412e1c:	cdqe   
  412e1e:	ret    
  412e1f:	nop

0000000000412e20 <flatcc_builder_get_buffer_start@@Base>:
  412e20:	mov    eax,DWORD PTR [rdi+0xf0]
  412e26:	ret    
  412e27:	nop    WORD PTR [rax+rax*1+0x0]

0000000000412e30 <flatcc_builder_get_buffer_end@@Base>:
  412e30:	mov    eax,DWORD PTR [rdi+0xf4]
  412e36:	ret    
  412e37:	nop    WORD PTR [rax+rax*1+0x0]

0000000000412e40 <flatcc_builder_set_vtable_cache_limit@@Base>:
  412e40:	mov    QWORD PTR [rdi+0x118],rsi
  412e47:	ret    
  412e48:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000412e50 <flatcc_builder_set_identifier@@Base>:
  412e50:	test   rsi,rsi
  412e53:	je     412e60 <flatcc_builder_set_identifier@@Base+0x10>
  412e55:	mov    eax,DWORD PTR [rsi]
  412e57:	mov    DWORD PTR [rdi+0x110],eax
  412e5d:	ret    
  412e5e:	xchg   ax,ax
  412e60:	mov    rsi,0x41a140
  412e67:	mov    eax,DWORD PTR [rsi]
  412e69:	mov    DWORD PTR [rdi+0x110],eax
  412e6f:	ret    

0000000000412e70 <flatcc_builder_get_type@@Base>:
  412e70:	mov    rax,QWORD PTR [rdi+0x30]
  412e74:	test   rax,rax
  412e77:	je     412e80 <flatcc_builder_get_type@@Base+0x10>
  412e79:	movzx  eax,WORD PTR [rax+0xe]
  412e7d:	ret    
  412e7e:	xchg   ax,ax
  412e80:	xor    eax,eax
  412e82:	ret    
  412e83:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  412e8e:	xchg   ax,ax

0000000000412e90 <flatcc_builder_get_type_at@@Base>:
  412e90:	test   esi,esi
  412e92:	jle    412ec0 <flatcc_builder_get_type_at@@Base+0x30>
  412e94:	mov    edx,DWORD PTR [rdi+0x104]
  412e9a:	xor    eax,eax
  412e9c:	cmp    esi,edx
  412e9e:	jg     412ec2 <flatcc_builder_get_type_at@@Base+0x32>
  412ea0:	sub    esi,edx
  412ea2:	mov    rdx,QWORD PTR [rdi+0x30]
  412ea6:	movsxd rsi,esi
  412ea9:	lea    rax,[rsi+rsi*8]
  412ead:	lea    rax,[rdx+rax*4]
  412eb1:	movzx  eax,WORD PTR [rax+0xe]
  412eb5:	ret    
  412eb6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  412ec0:	xor    eax,eax
  412ec2:	repz ret 
  412ec4:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  412ecf:	nop

0000000000412ed0 <flatcc_builder_get_direct_buffer@@Base>:
  412ed0:	mov    eax,DWORD PTR [rdi+0x128]
  412ed6:	test   eax,eax
  412ed8:	je     412eea <flatcc_builder_get_direct_buffer@@Base+0x1a>
  412eda:	mov    rax,QWORD PTR [rdi+0x138]
  412ee1:	cmp    QWORD PTR [rdi+0x130],rax
  412ee8:	je     412f00 <flatcc_builder_get_direct_buffer@@Base+0x30>
  412eea:	test   rsi,rsi
  412eed:	jne    412ef2 <flatcc_builder_get_direct_buffer@@Base+0x22>
  412eef:	xor    eax,eax
  412ef1:	ret    
  412ef2:	mov    QWORD PTR [rsi],0x0
  412ef9:	xor    eax,eax
  412efb:	ret    
  412efc:	nop    DWORD PTR [rax+0x0]
  412f00:	test   rsi,rsi
  412f03:	je     412f0f <flatcc_builder_get_direct_buffer@@Base+0x3f>
  412f05:	mov    rax,QWORD PTR [rdi+0x160]
  412f0c:	mov    QWORD PTR [rsi],rax
  412f0f:	mov    rax,QWORD PTR [rdi+0x140]
  412f16:	ret    
  412f17:	nop    WORD PTR [rax+rax*1+0x0]

0000000000412f20 <flatcc_builder_copy_buffer@@Base>:
  412f20:	mov    eax,DWORD PTR [rdi+0x128]
  412f26:	test   eax,eax
  412f28:	je     412f48 <flatcc_builder_copy_buffer@@Base+0x28>
  412f2a:	sub    rsp,0x8
  412f2e:	add    rdi,0x130
  412f35:	call   413720 <flatcc_emitter_copy_buffer@@Base>
  412f3a:	test   rax,rax
  412f3d:	je     412f4b <flatcc_builder_copy_buffer@@Base+0x2b>
  412f3f:	add    rsp,0x8
  412f43:	ret    
  412f44:	nop    DWORD PTR [rax+0x0]
  412f48:	xor    eax,eax
  412f4a:	ret    
  412f4b:	lea    rcx,[rip+0x6b6e]        # 419ac0 <_IO_stdin_used@@Base+0x3ac0>
  412f52:	lea    rsi,[rip+0x66f7]        # 419650 <_IO_stdin_used@@Base+0x3650>
  412f59:	lea    rdi,[rip+0x36fa]        # 41665a <_IO_stdin_used@@Base+0x65a>
  412f60:	mov    edx,0x786
  412f65:	call   404090 <__assert_fail@plt>
  412f6a:	nop    WORD PTR [rax+rax*1+0x0]

0000000000412f70 <flatcc_builder_finalize_buffer@@Base>:
  412f70:	push   r12
  412f72:	push   rbp
  412f73:	mov    r12,rdi
  412f76:	push   rbx
  412f77:	mov    rbx,rsi
  412f7a:	call   412e10 <flatcc_builder_get_buffer_size@@Base>
  412f7f:	test   rbx,rbx
  412f82:	mov    rbp,rax
  412f85:	je     412f8a <flatcc_builder_finalize_buffer@@Base+0x1a>
  412f87:	mov    QWORD PTR [rbx],rax
  412f8a:	mov    rdi,rbp
  412f8d:	call   4040f0 <malloc@plt>
  412f92:	test   rax,rax
  412f95:	mov    rbx,rax
  412f98:	je     412fb5 <flatcc_builder_finalize_buffer@@Base+0x45>
  412f9a:	mov    rdx,rbp
  412f9d:	mov    rsi,rax
  412fa0:	mov    rdi,r12
  412fa3:	call   412f20 <flatcc_builder_copy_buffer@@Base>
  412fa8:	test   rax,rax
  412fab:	je     412fd4 <flatcc_builder_finalize_buffer@@Base+0x64>
  412fad:	mov    rax,rbx
  412fb0:	pop    rbx
  412fb1:	pop    rbp
  412fb2:	pop    r12
  412fb4:	ret    
  412fb5:	lea    rcx,[rip+0x6ae4]        # 419aa0 <_IO_stdin_used@@Base+0x3aa0>
  412fbc:	lea    rsi,[rip+0x668d]        # 419650 <_IO_stdin_used@@Base+0x3650>
  412fc3:	lea    rdi,[rip+0x6a1d]        # 4199e7 <_IO_stdin_used@@Base+0x39e7>
  412fca:	mov    edx,0x798
  412fcf:	call   404090 <__assert_fail@plt>
  412fd4:	lea    rcx,[rip+0x6ac5]        # 419aa0 <_IO_stdin_used@@Base+0x3aa0>
  412fdb:	lea    rsi,[rip+0x666e]        # 419650 <_IO_stdin_used@@Base+0x3650>
  412fe2:	lea    rdi,[rip+0x69fe]        # 4199e7 <_IO_stdin_used@@Base+0x39e7>
  412fe9:	mov    edx,0x79c
  412fee:	call   404090 <__assert_fail@plt>
  412ff3:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  412ffe:	xchg   ax,ax

0000000000413000 <flatcc_builder_finalize_aligned_buffer@@Base>:
  413000:	push   r13
  413002:	push   r12
  413004:	mov    r12,rdi
  413007:	push   rbp
  413008:	push   rbx
  413009:	mov    rbp,rsi
  41300c:	sub    rsp,0x18
  413010:	mov    rax,QWORD PTR fs:0x28
  413019:	mov    QWORD PTR [rsp+0x8],rax
  41301e:	xor    eax,eax
  413020:	call   412e10 <flatcc_builder_get_buffer_size@@Base>
  413025:	test   rbp,rbp
  413028:	mov    rbx,rax
  41302b:	je     413031 <flatcc_builder_finalize_aligned_buffer@@Base+0x31>
  41302d:	mov    QWORD PTR [rbp+0x0],rax
  413031:	mov    rdi,r12
  413034:	call   412db0 <flatcc_builder_get_buffer_alignment@@Base>
  413039:	movzx  eax,ax
  41303c:	mov    esi,0x8
  413041:	mov    rdi,rsp
  413044:	lea    rdx,[rbx+rax*1-0x1]
  413049:	mov    rbx,rax
  41304c:	mov    QWORD PTR [rsp],0x0
  413054:	neg    rbx
  413057:	and    rbx,rdx
  41305a:	cmp    rax,0x8
  41305e:	cmovae rsi,rax
  413062:	mov    rdx,rbx
  413065:	call   404130 <posix_memalign@plt>
  41306a:	test   eax,eax
  41306c:	je     4130b0 <flatcc_builder_finalize_aligned_buffer@@Base+0xb0>
  41306e:	mov    rdi,QWORD PTR [rsp]
  413072:	test   rdi,rdi
  413075:	je     41307c <flatcc_builder_finalize_aligned_buffer@@Base+0x7c>
  413077:	call   404030 <free@plt>
  41307c:	test   rbp,rbp
  41307f:	je     4130d6 <flatcc_builder_finalize_aligned_buffer@@Base+0xd6>
  413081:	mov    QWORD PTR [rbp+0x0],0x0
  413089:	xor    r13d,r13d
  41308c:	mov    rcx,QWORD PTR [rsp+0x8]
  413091:	xor    rcx,QWORD PTR fs:0x28
  41309a:	mov    rax,r13
  41309d:	jne    4130d1 <flatcc_builder_finalize_aligned_buffer@@Base+0xd1>
  41309f:	add    rsp,0x18
  4130a3:	pop    rbx
  4130a4:	pop    rbp
  4130a5:	pop    r12
  4130a7:	pop    r13
  4130a9:	ret    
  4130aa:	nop    WORD PTR [rax+rax*1+0x0]
  4130b0:	mov    r13,QWORD PTR [rsp]
  4130b4:	test   r13,r13
  4130b7:	je     41307c <flatcc_builder_finalize_aligned_buffer@@Base+0x7c>
  4130b9:	mov    rdx,rbx
  4130bc:	mov    rsi,r13
  4130bf:	mov    rdi,r12
  4130c2:	call   412f20 <flatcc_builder_copy_buffer@@Base>
  4130c7:	test   rax,rax
  4130ca:	jne    41308c <flatcc_builder_finalize_aligned_buffer@@Base+0x8c>
  4130cc:	mov    rdi,r13
  4130cf:	jmp    413077 <flatcc_builder_finalize_aligned_buffer@@Base+0x77>
  4130d1:	call   404070 <__stack_chk_fail@plt>
  4130d6:	xor    r13d,r13d
  4130d9:	jmp    41308c <flatcc_builder_finalize_aligned_buffer@@Base+0x8c>
  4130db:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004130e0 <flatcc_builder_aligned_alloc@@Base>:
  4130e0:	sub    rsp,0x18
  4130e4:	mov    rdx,rsi
  4130e7:	mov    esi,0x8
  4130ec:	mov    rax,QWORD PTR fs:0x28
  4130f5:	mov    QWORD PTR [rsp+0x8],rax
  4130fa:	xor    eax,eax
  4130fc:	cmp    rdi,0x8
  413100:	mov    QWORD PTR [rsp],0x0
  413108:	cmovae rsi,rdi
  41310c:	mov    rdi,rsp
  41310f:	call   404130 <posix_memalign@plt>
  413114:	test   eax,eax
  413116:	mov    rax,QWORD PTR [rsp]
  41311a:	je     41312b <flatcc_builder_aligned_alloc@@Base+0x4b>
  41311c:	test   rax,rax
  41311f:	je     41312b <flatcc_builder_aligned_alloc@@Base+0x4b>
  413121:	mov    rdi,rax
  413124:	call   404030 <free@plt>
  413129:	xor    eax,eax
  41312b:	mov    rcx,QWORD PTR [rsp+0x8]
  413130:	xor    rcx,QWORD PTR fs:0x28
  413139:	jne    413140 <flatcc_builder_aligned_alloc@@Base+0x60>
  41313b:	add    rsp,0x18
  41313f:	ret    
  413140:	call   404070 <__stack_chk_fail@plt>
  413145:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

0000000000413150 <flatcc_builder_aligned_free@@Base>:
  413150:	jmp    404030 <free@plt>
  413155:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

0000000000413160 <flatcc_builder_get_emit_context@@Base>:
  413160:	mov    rax,QWORD PTR [rdi+0x38]
  413164:	ret    
  413165:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41316f:	nop

0000000000413170 <flatcc_emitter_recycle_page@@Base>:
  413170:	mov    rax,QWORD PTR [rdi]
  413173:	cmp    rax,rsi
  413176:	je     4131d0 <flatcc_emitter_recycle_page@@Base+0x60>
  413178:	cmp    rsi,QWORD PTR [rdi+0x8]
  41317c:	je     4131d0 <flatcc_emitter_recycle_page@@Base+0x60>
  41317e:	mov    rdx,QWORD PTR [rsi+0xb80]
  413185:	mov    rcx,QWORD PTR [rsi+0xb88]
  41318c:	mov    QWORD PTR [rdx+0xb88],rcx
  413193:	mov    rcx,QWORD PTR [rsi+0xb88]
  41319a:	mov    QWORD PTR [rcx+0xb80],rdx
  4131a1:	mov    rdx,QWORD PTR [rax+0xb88]
  4131a8:	mov    QWORD PTR [rsi+0xb80],rax
  4131af:	mov    QWORD PTR [rsi+0xb88],rdx
  4131b6:	mov    QWORD PTR [rdx+0xb80],rsi
  4131bd:	mov    rax,QWORD PTR [rsi+0xb80]
  4131c4:	mov    QWORD PTR [rax+0xb88],rsi
  4131cb:	xor    eax,eax
  4131cd:	ret    
  4131ce:	xchg   ax,ax
  4131d0:	mov    eax,0xffffffff
  4131d5:	ret    
  4131d6:	nop    WORD PTR cs:[rax+rax*1+0x0]

00000000004131e0 <flatcc_emitter_reset@@Base>:
  4131e0:	mov    rax,QWORD PTR [rdi]
  4131e3:	test   rax,rax
  4131e6:	je     4132ad <flatcc_emitter_reset@@Base+0xcd>
  4131ec:	lea    rdx,[rax+0x5c0]
  4131f3:	mov    QWORD PTR [rdi+0x8],rax
  4131f7:	mov    QWORD PTR [rdi+0x18],0x5c0
  4131ff:	mov    QWORD PTR [rdi+0x28],0x5c0
  413207:	mov    rcx,QWORD PTR [rdi+0x30]
  41320b:	mov    QWORD PTR [rdi+0x10],rdx
  41320f:	mov    QWORD PTR [rdi+0x20],rdx
  413213:	mov    rdx,QWORD PTR [rdi+0x40]
  413217:	mov    DWORD PTR [rax+0xb90],0xfffffa40
  413221:	test   rdx,rdx
  413224:	je     4132b0 <flatcc_emitter_reset@@Base+0xd0>
  41322a:	lea    rdx,[rdx+rdx*2]
  41322e:	shr    rcx,0x2
  413232:	mov    QWORD PTR [rdi+0x30],0x0
  41323a:	shr    rdx,0x2
  41323e:	add    rdx,rcx
  413241:	mov    QWORD PTR [rdi+0x40],rdx
  413245:	add    rdx,rdx
  413248:	cmp    QWORD PTR [rdi+0x38],rdx
  41324c:	jbe    4132ad <flatcc_emitter_reset@@Base+0xcd>
  41324e:	push   rbx
  41324f:	mov    rbx,rdi
  413252:	mov    rdi,QWORD PTR [rax+0xb80]
  413259:	cmp    rax,rdi
  41325c:	jne    413270 <flatcc_emitter_reset@@Base+0x90>
  41325e:	jmp    4132ac <flatcc_emitter_reset@@Base+0xcc>
  413260:	mov    rax,QWORD PTR [rbx+0x8]
  413264:	mov    rdi,QWORD PTR [rax+0xb80]
  41326b:	cmp    rdi,QWORD PTR [rbx]
  41326e:	je     4132ac <flatcc_emitter_reset@@Base+0xcc>
  413270:	mov    rdx,QWORD PTR [rdi+0xb80]
  413277:	mov    QWORD PTR [rax+0xb80],rdx
  41327e:	mov    rdx,QWORD PTR [rdi+0xb80]
  413285:	mov    QWORD PTR [rdx+0xb88],rax
  41328c:	call   404030 <free@plt>
  413291:	mov    rsi,QWORD PTR [rbx+0x40]
  413295:	mov    rax,QWORD PTR [rbx+0x38]
  413299:	lea    rdx,[rsi+rsi*1]
  41329d:	sub    rax,0xb80
  4132a3:	mov    QWORD PTR [rbx+0x38],rax
  4132a7:	cmp    rdx,rax
  4132aa:	jb     413260 <flatcc_emitter_reset@@Base+0x80>
  4132ac:	pop    rbx
  4132ad:	repz ret 
  4132af:	nop
  4132b0:	mov    rdx,rcx
  4132b3:	jmp    41322a <flatcc_emitter_reset@@Base+0x4a>
  4132b8:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004132c0 <flatcc_emitter_clear@@Base>:
  4132c0:	mov    rax,QWORD PTR [rdi]
  4132c3:	test   rax,rax
  4132c6:	je     413347 <flatcc_emitter_clear@@Base+0x87>
  4132c8:	push   rbp
  4132c9:	push   rbx
  4132ca:	mov    rbp,rdi
  4132cd:	sub    rsp,0x8
  4132d1:	mov    rdx,QWORD PTR [rax+0xb88]
  4132d8:	mov    QWORD PTR [rdx+0xb80],0x0
  4132e3:	mov    rbx,QWORD PTR [rax+0xb80]
  4132ea:	test   rbx,rbx
  4132ed:	jne    4132fb <flatcc_emitter_clear@@Base+0x3b>
  4132ef:	jmp    413349 <flatcc_emitter_clear@@Base+0x89>
  4132f1:	nop    DWORD PTR [rax+0x0]
  4132f8:	mov    rbx,rax
  4132fb:	mov    rdi,QWORD PTR [rbx+0xb88]
  413302:	call   404030 <free@plt>
  413307:	mov    rax,QWORD PTR [rbx+0xb80]
  41330e:	test   rax,rax
  413311:	jne    4132f8 <flatcc_emitter_clear@@Base+0x38>
  413313:	mov    rdi,rbx
  413316:	call   404030 <free@plt>
  41331b:	lea    rdi,[rbp+0x8]
  41331f:	mov    QWORD PTR [rbp+0x0],0x0
  413327:	mov    QWORD PTR [rbp+0x40],0x0
  41332f:	xor    eax,eax
  413331:	and    rdi,0xfffffffffffffff8
  413335:	sub    rbp,rdi
  413338:	lea    ecx,[rbp+0x48]
  41333b:	shr    ecx,0x3
  41333e:	rep stos QWORD PTR es:[rdi],rax
  413341:	add    rsp,0x8
  413345:	pop    rbx
  413346:	pop    rbp
  413347:	repz ret 
  413349:	mov    rbx,rax
  41334c:	jmp    413313 <flatcc_emitter_clear@@Base+0x53>
  41334e:	xchg   ax,ax

0000000000413350 <flatcc_emitter@@Base>:
  413350:	push   r15
  413352:	push   r14
  413354:	mov    r14,rsi
  413357:	push   r13
  413359:	push   r12
  41335b:	push   rbp
  41335c:	push   rbx
  41335d:	mov    rbx,rdi
  413360:	sub    rsp,0x18
  413364:	add    QWORD PTR [rdi+0x30],r8
  413368:	test   ecx,ecx
  41336a:	js     41355e <flatcc_emitter@@Base+0x20e>
  413370:	mov    rax,QWORD PTR [rdi+0x28]
  413374:	cmp    r8,rax
  413377:	jbe    413404 <flatcc_emitter@@Base+0xb4>
  41337d:	test   edx,edx
  41337f:	je     4133f3 <flatcc_emitter@@Base+0xa3>
  413381:	lea    r15d,[rdx-0x1]
  413385:	add    r15,0x1
  413389:	shl    r15,0x4
  41338d:	lea    rax,[rsi+r15*1]
  413391:	mov    QWORD PTR [rsp+0x8],rax
  413396:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4133a0:	mov    r12,QWORD PTR [r14+0x8]
  4133a4:	mov    r13,QWORD PTR [r14]
  4133a7:	test   r12,r12
  4133aa:	je     4133e8 <flatcc_emitter@@Base+0x98>
  4133ac:	nop    DWORD PTR [rax+0x0]
  4133b0:	mov    rbp,QWORD PTR [rbx+0x28]
  4133b4:	cmp    rbp,r12
  4133b7:	jae    413458 <flatcc_emitter@@Base+0x108>
  4133bd:	test   rbp,rbp
  4133c0:	je     413468 <flatcc_emitter@@Base+0x118>
  4133c6:	sub    r12,rbp
  4133c9:	mov    rdi,QWORD PTR [rbx+0x20]
  4133cd:	mov    rsi,r13
  4133d0:	mov    rdx,rbp
  4133d3:	add    r13,rbp
  4133d6:	call   4040e0 <memcpy@plt>
  4133db:	add    QWORD PTR [rbx+0x20],rbp
  4133df:	sub    QWORD PTR [rbx+0x28],rbp
  4133e3:	test   r12,r12
  4133e6:	jne    4133b0 <flatcc_emitter@@Base+0x60>
  4133e8:	add    r14,0x10
  4133ec:	cmp    r14,QWORD PTR [rsp+0x8]
  4133f1:	jne    4133a0 <flatcc_emitter@@Base+0x50>
  4133f3:	add    rsp,0x18
  4133f7:	xor    eax,eax
  4133f9:	pop    rbx
  4133fa:	pop    rbp
  4133fb:	pop    r12
  4133fd:	pop    r13
  4133ff:	pop    r14
  413401:	pop    r15
  413403:	ret    
  413404:	mov    rcx,QWORD PTR [rdi+0x20]
  413408:	sub    rax,r8
  41340b:	mov    QWORD PTR [rdi+0x28],rax
  41340f:	lea    rsi,[rcx+r8*1]
  413413:	mov    QWORD PTR [rdi+0x20],rsi
  413417:	test   edx,edx
  413419:	je     4133f3 <flatcc_emitter@@Base+0xa3>
  41341b:	lea    ebx,[rdx-0x1]
  41341e:	add    rbx,0x1
  413422:	shl    rbx,0x4
  413426:	add    rbx,r14
  413429:	nop    DWORD PTR [rax+0x0]
  413430:	mov    rsi,QWORD PTR [r14]
  413433:	mov    rdx,QWORD PTR [r14+0x8]
  413437:	mov    rdi,rcx
  41343a:	add    r14,0x10
  41343e:	call   4040e0 <memcpy@plt>
  413443:	mov    rcx,rax
  413446:	add    rcx,QWORD PTR [r14-0x8]
  41344a:	cmp    rbx,r14
  41344d:	jne    413430 <flatcc_emitter@@Base+0xe0>
  41344f:	jmp    4133f3 <flatcc_emitter@@Base+0xa3>
  413451:	nop    DWORD PTR [rax+0x0]
  413458:	mov    rbp,r12
  41345b:	xor    r12d,r12d
  41345e:	jmp    4133c9 <flatcc_emitter@@Base+0x79>
  413463:	nop    DWORD PTR [rax+rax*1+0x0]
  413468:	mov    r15,QWORD PTR [rbx+0x8]
  41346c:	test   r15,r15
  41346f:	je     4134f0 <flatcc_emitter@@Base+0x1a0>
  413471:	mov    rbp,QWORD PTR [r15+0xb80]
  413478:	cmp    rbp,QWORD PTR [rbx]
  41347b:	je     4134b0 <flatcc_emitter@@Base+0x160>
  41347d:	mov    QWORD PTR [rbx+0x8],rbp
  413481:	mov    rax,QWORD PTR [rbp+0xb88]
  413488:	mov    QWORD PTR [rbx+0x20],rbp
  41348c:	mov    QWORD PTR [rbx+0x28],0xb80
  413494:	mov    eax,DWORD PTR [rax+0xb90]
  41349a:	add    eax,0xb80
  41349f:	mov    DWORD PTR [rbp+0xb90],eax
  4134a5:	jmp    4133b0 <flatcc_emitter@@Base+0x60>
  4134aa:	nop    WORD PTR [rax+rax*1+0x0]
  4134b0:	mov    edi,0xb98
  4134b5:	call   4040f0 <malloc@plt>
  4134ba:	test   rax,rax
  4134bd:	je     4134ff <flatcc_emitter@@Base+0x1af>
  4134bf:	mov    QWORD PTR [rax+0xb80],rbp
  4134c6:	add    QWORD PTR [rbx+0x38],0xb80
  4134ce:	mov    QWORD PTR [rax+0xb88],r15
  4134d5:	mov    QWORD PTR [rbp+0xb88],rax
  4134dc:	mov    rbp,rax
  4134df:	mov    QWORD PTR [r15+0xb80],rax
  4134e6:	mov    QWORD PTR [rbx+0x8],rax
  4134ea:	jmp    413481 <flatcc_emitter@@Base+0x131>
  4134ec:	nop    DWORD PTR [rax+0x0]
  4134f0:	mov    edi,0xb98
  4134f5:	call   4040f0 <malloc@plt>
  4134fa:	test   rax,rax
  4134fd:	jne    413513 <flatcc_emitter@@Base+0x1c3>
  4134ff:	add    rsp,0x18
  413503:	mov    eax,0xffffffff
  413508:	pop    rbx
  413509:	pop    rbp
  41350a:	pop    r12
  41350c:	pop    r13
  41350e:	pop    r14
  413510:	pop    r15
  413512:	ret    
  413513:	lea    rdx,[rax+0x5c0]
  41351a:	add    QWORD PTR [rbx+0x38],0xb80
  413522:	mov    QWORD PTR [rbx],rax
  413525:	mov    QWORD PTR [rbx+0x8],rax
  413529:	mov    QWORD PTR [rax+0xb80],rax
  413530:	mov    QWORD PTR [rax+0xb88],rax
  413537:	mov    QWORD PTR [rbx+0x10],rdx
  41353b:	mov    QWORD PTR [rbx+0x20],rdx
  41353f:	mov    QWORD PTR [rbx+0x18],0x5c0
  413547:	mov    QWORD PTR [rbx+0x28],0x5c0
  41354f:	mov    DWORD PTR [rax+0xb90],0xfffffa40
  413559:	jmp    4133b0 <flatcc_emitter@@Base+0x60>
  41355e:	mov    rax,QWORD PTR [rdi+0x18]
  413562:	cmp    r8,rax
  413565:	jbe    4135fc <flatcc_emitter@@Base+0x2ac>
  41356b:	movsxd rax,edx
  41356e:	shl    rax,0x4
  413572:	add    r14,rax
  413575:	mov    eax,edx
  413577:	shl    rax,0x4
  41357b:	mov    rcx,r14
  41357e:	sub    rcx,rax
  413581:	mov    QWORD PTR [rsp+0x8],rcx
  413586:	nop    WORD PTR cs:[rax+rax*1+0x0]
  413590:	cmp    r14,QWORD PTR [rsp+0x8]
  413595:	je     4133f3 <flatcc_emitter@@Base+0xa3>
  41359b:	sub    r14,0x10
  41359f:	mov    rbp,QWORD PTR [r14+0x8]
  4135a3:	mov    r12,rbp
  4135a6:	add    r12,QWORD PTR [r14]
  4135a9:	test   rbp,rbp
  4135ac:	je     413590 <flatcc_emitter@@Base+0x240>
  4135ae:	mov    rdx,QWORD PTR [rbx+0x18]
  4135b2:	cmp    rdx,rbp
  4135b5:	jae    4135ef <flatcc_emitter@@Base+0x29f>
  4135b7:	test   rdx,rdx
  4135ba:	je     413618 <flatcc_emitter@@Base+0x2c8>
  4135bc:	sub    rbp,rdx
  4135bf:	xor    ecx,ecx
  4135c1:	mov    rax,rdx
  4135c4:	mov    QWORD PTR [rbx+0x18],rcx
  4135c8:	neg    rax
  4135cb:	mov    rdi,rax
  4135ce:	add    rdi,QWORD PTR [rbx+0x10]
  4135d2:	add    r12,rax
  4135d5:	mov    rsi,r12
  4135d8:	mov    QWORD PTR [rbx+0x10],rdi
  4135dc:	call   4040e0 <memcpy@plt>
  4135e1:	test   rbp,rbp
  4135e4:	je     413590 <flatcc_emitter@@Base+0x240>
  4135e6:	mov    rdx,QWORD PTR [rbx+0x18]
  4135ea:	cmp    rdx,rbp
  4135ed:	jb     4135b7 <flatcc_emitter@@Base+0x267>
  4135ef:	mov    rcx,rdx
  4135f2:	mov    rdx,rbp
  4135f5:	sub    rcx,rbp
  4135f8:	xor    ebp,ebp
  4135fa:	jmp    4135c1 <flatcc_emitter@@Base+0x271>
  4135fc:	mov    rcx,QWORD PTR [rdi+0x10]
  413600:	sub    rax,r8
  413603:	mov    QWORD PTR [rdi+0x18],rax
  413607:	sub    rcx,r8
  41360a:	mov    QWORD PTR [rdi+0x10],rcx
  41360e:	jmp    413417 <flatcc_emitter@@Base+0xc7>
  413613:	nop    DWORD PTR [rax+rax*1+0x0]
  413618:	mov    r13,QWORD PTR [rbx]
  41361b:	test   r13,r13
  41361e:	je     4136bf <flatcc_emitter@@Base+0x36f>
  413624:	mov    r15,QWORD PTR [r13+0xb88]
  41362b:	cmp    r15,QWORD PTR [rbx+0x8]
  41362f:	je     413680 <flatcc_emitter@@Base+0x330>
  413631:	mov    eax,DWORD PTR [r13+0xb90]
  413638:	sub    eax,0xb80
  41363d:	mov    DWORD PTR [r15+0xb90],eax
  413644:	mov    QWORD PTR [rbx],r15
  413647:	lea    rax,[r15+0xb80]
  41364e:	mov    QWORD PTR [rbx+0x18],0xb80
  413656:	mov    QWORD PTR [rbx+0x10],rax
  41365a:	mov    rax,QWORD PTR [r15+0xb80]
  413661:	mov    eax,DWORD PTR [rax+0xb90]
  413667:	sub    eax,0xb80
  41366c:	mov    DWORD PTR [r15+0xb90],eax
  413673:	jmp    4135ae <flatcc_emitter@@Base+0x25e>
  413678:	nop    DWORD PTR [rax+rax*1+0x0]
  413680:	mov    edi,0xb98
  413685:	call   4040f0 <malloc@plt>
  41368a:	test   rax,rax
  41368d:	je     4134ff <flatcc_emitter@@Base+0x1af>
  413693:	mov    QWORD PTR [rax+0xb88],r15
  41369a:	add    QWORD PTR [rbx+0x38],0xb80
  4136a2:	mov    QWORD PTR [rax+0xb80],r13
  4136a9:	mov    QWORD PTR [r13+0xb88],rax
  4136b0:	mov    QWORD PTR [r15+0xb80],rax
  4136b7:	mov    QWORD PTR [rbx],rax
  4136ba:	mov    r15,rax
  4136bd:	jmp    413647 <flatcc_emitter@@Base+0x2f7>
  4136bf:	mov    edi,0xb98
  4136c4:	call   4040f0 <malloc@plt>
  4136c9:	test   rax,rax
  4136cc:	je     4134ff <flatcc_emitter@@Base+0x1af>
  4136d2:	lea    rdx,[rax+0x5c0]
  4136d9:	add    QWORD PTR [rbx+0x38],0xb80
  4136e1:	mov    QWORD PTR [rbx],rax
  4136e4:	mov    QWORD PTR [rbx+0x8],rax
  4136e8:	mov    QWORD PTR [rax+0xb80],rax
  4136ef:	mov    QWORD PTR [rax+0xb88],rax
  4136f6:	mov    QWORD PTR [rbx+0x10],rdx
  4136fa:	mov    QWORD PTR [rbx+0x20],rdx
  4136fe:	mov    QWORD PTR [rbx+0x18],0x5c0
  413706:	mov    QWORD PTR [rbx+0x28],0x5c0
  41370e:	mov    DWORD PTR [rax+0xb90],0xfffffa40
  413718:	jmp    4135ae <flatcc_emitter@@Base+0x25e>
  41371d:	nop    DWORD PTR [rax]

0000000000413720 <flatcc_emitter_copy_buffer@@Base>:
  413720:	push   rbp
  413721:	push   rbx
  413722:	sub    rsp,0x8
  413726:	mov    r9,QWORD PTR [rdi+0x30]
  41372a:	cmp    r9,rdx
  41372d:	ja     4137f0 <flatcc_emitter_copy_buffer@@Base+0xd0>
  413733:	mov    rax,QWORD PTR [rdi]
  413736:	test   rax,rax
  413739:	je     4137f0 <flatcc_emitter_copy_buffer@@Base+0xd0>
  41373f:	cmp    rax,QWORD PTR [rdi+0x8]
  413743:	mov    rcx,rsi
  413746:	mov    rbx,rdi
  413749:	je     413800 <flatcc_emitter_copy_buffer@@Base+0xe0>
  41374f:	mov    r8d,0xb80
  413755:	sub    r8,QWORD PTR [rdi+0x18]
  413759:	mov    rsi,QWORD PTR [rdi+0x10]
  41375d:	mov    rdi,rcx
  413760:	mov    rbp,r8
  413763:	mov    rdx,r8
  413766:	call   4040e0 <memcpy@plt>
  41376b:	add    rbp,rax
  41376e:	mov    rax,QWORD PTR [rbx]
  413771:	mov    rsi,QWORD PTR [rbx+0x8]
  413775:	mov    rax,QWORD PTR [rax+0xb80]
  41377c:	cmp    rax,rsi
  41377f:	je     4137d4 <flatcc_emitter_copy_buffer@@Base+0xb4>
  413781:	nop    DWORD PTR [rax+0x0]
  413788:	mov    rdx,QWORD PTR [rax]
  41378b:	lea    rdi,[rbp+0x8]
  41378f:	mov    rcx,rbp
  413792:	mov    rsi,rax
  413795:	add    rbp,0xb80
  41379c:	and    rdi,0xfffffffffffffff8
  4137a0:	mov    QWORD PTR [rbp-0xb80],rdx
  4137a7:	mov    rdx,QWORD PTR [rax+0xb78]
  4137ae:	sub    rcx,rdi
  4137b1:	sub    rsi,rcx
  4137b4:	add    ecx,0xb80
  4137ba:	shr    ecx,0x3
  4137bd:	mov    QWORD PTR [rbp-0x8],rdx
  4137c1:	rep movs QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
  4137c4:	mov    rax,QWORD PTR [rax+0xb80]
  4137cb:	mov    rsi,QWORD PTR [rbx+0x8]
  4137cf:	cmp    rsi,rax
  4137d2:	jne    413788 <flatcc_emitter_copy_buffer@@Base+0x68>
  4137d4:	mov    edx,0xb80
  4137d9:	sub    rdx,QWORD PTR [rbx+0x28]
  4137dd:	mov    rdi,rbp
  4137e0:	call   4040e0 <memcpy@plt>
  4137e5:	add    rsp,0x8
  4137e9:	mov    rax,rbp
  4137ec:	pop    rbx
  4137ed:	pop    rbp
  4137ee:	ret    
  4137ef:	nop
  4137f0:	xor    ebp,ebp
  4137f2:	add    rsp,0x8
  4137f6:	mov    rax,rbp
  4137f9:	pop    rbx
  4137fa:	pop    rbp
  4137fb:	ret    
  4137fc:	nop    DWORD PTR [rax+0x0]
  413800:	mov    rsi,QWORD PTR [rdi+0x10]
  413804:	mov    rdx,r9
  413807:	mov    rdi,rcx
  41380a:	call   4040e0 <memcpy@plt>
  41380f:	mov    rbp,rax
  413812:	jmp    4137e5 <flatcc_emitter_copy_buffer@@Base+0xc5>
  413814:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41381e:	xchg   ax,ax
  413820:	mov    eax,0x4
  413825:	lea    esi,[rax+rsi*2]
  413828:	cmp    si,WORD PTR [rdi+0x1e]
  41382c:	jae    413858 <flatcc_emitter_copy_buffer@@Base+0x138>
  41382e:	mov    rax,QWORD PTR [rdi+0x10]
  413832:	movzx  esi,si
  413835:	movzx  esi,WORD PTR [rax+rsi*1]
  413839:	test   esi,esi
  41383b:	je     413858 <flatcc_emitter_copy_buffer@@Base+0x138>
  41383d:	movzx  edx,WORD PTR [rdi+0x1c]
  413841:	lea    r8d,[rsi+0x4]
  413845:	mov    eax,0xd
  41384a:	cmp    r8d,edx
  41384d:	jbe    413870 <flatcc_emitter_copy_buffer@@Base+0x150>
  41384f:	repz ret 
  413851:	nop    DWORD PTR [rax+0x0]
  413858:	xor    eax,eax
  41385a:	test   edx,edx
  41385c:	mov    DWORD PTR [rcx],0x0
  413862:	setne  al
  413865:	shl    eax,0x2
  413868:	ret    
  413869:	nop    DWORD PTR [rax+0x0]
  413870:	add    esi,DWORD PTR [rdi+0x18]
  413873:	mov    eax,0xc
  413878:	test   sil,0x3
  41387c:	jne    41384f <flatcc_emitter_copy_buffer@@Base+0x12f>
  41387e:	mov    DWORD PTR [rcx],esi
  413880:	xor    eax,eax
  413882:	ret    
  413883:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  41388e:	xchg   ax,ax

0000000000413890 <flatcc_verify_error_string@@Base>:
  413890:	cmp    edi,0x24
  413893:	ja     413b00 <flatcc_verify_error_string@@Base+0x270>
  413899:	lea    rdx,[rip+0x6f38]        # 41a7d8 <flatcc_builder_padding_base@@Base+0x698>
  4138a0:	mov    edi,edi
  4138a2:	movsxd rax,DWORD PTR [rdx+rdi*4]
  4138a6:	add    rax,rdx
  4138a9:	jmp    rax
  4138ab:	nop    DWORD PTR [rax+rax*1+0x0]
  4138b0:	lea    rax,[rip+0x6a89]        # 41a340 <flatcc_builder_padding_base@@Base+0x200>
  4138b7:	ret    
  4138b8:	nop    DWORD PTR [rax+rax*1+0x0]
  4138c0:	lea    rax,[rip+0x6c15]        # 41a4dc <flatcc_builder_padding_base@@Base+0x39c>
  4138c7:	ret    
  4138c8:	nop    DWORD PTR [rax+rax*1+0x0]
  4138d0:	lea    rax,[rip+0x6ed9]        # 41a7b0 <flatcc_builder_padding_base@@Base+0x670>
  4138d7:	ret    
  4138d8:	nop    DWORD PTR [rax+rax*1+0x0]
  4138e0:	lea    rax,[rip+0x6e91]        # 41a778 <flatcc_builder_padding_base@@Base+0x638>
  4138e7:	ret    
  4138e8:	nop    DWORD PTR [rax+rax*1+0x0]
  4138f0:	lea    rax,[rip+0x6e59]        # 41a750 <flatcc_builder_padding_base@@Base+0x610>
  4138f7:	ret    
  4138f8:	nop    DWORD PTR [rax+rax*1+0x0]
  413900:	lea    rax,[rip+0x6e21]        # 41a728 <flatcc_builder_padding_base@@Base+0x5e8>
  413907:	ret    
  413908:	nop    DWORD PTR [rax+rax*1+0x0]
  413910:	lea    rax,[rip+0x6bb0]        # 41a4c7 <flatcc_builder_padding_base@@Base+0x387>
  413917:	ret    
  413918:	nop    DWORD PTR [rax+rax*1+0x0]
  413920:	lea    rax,[rip+0x6dd9]        # 41a700 <flatcc_builder_padding_base@@Base+0x5c0>
  413927:	ret    
  413928:	nop    DWORD PTR [rax+rax*1+0x0]
  413930:	lea    rax,[rip+0x6da1]        # 41a6d8 <flatcc_builder_padding_base@@Base+0x598>
  413937:	ret    
  413938:	nop    DWORD PTR [rax+rax*1+0x0]
  413940:	lea    rax,[rip+0x6b68]        # 41a4af <flatcc_builder_padding_base@@Base+0x36f>
  413947:	ret    
  413948:	nop    DWORD PTR [rax+rax*1+0x0]
  413950:	lea    rax,[rip+0x6b3d]        # 41a494 <flatcc_builder_padding_base@@Base+0x354>
  413957:	ret    
  413958:	nop    DWORD PTR [rax+rax*1+0x0]
  413960:	lea    rax,[rip+0x6b19]        # 41a480 <flatcc_builder_padding_base@@Base+0x340>
  413967:	ret    
  413968:	nop    DWORD PTR [rax+rax*1+0x0]
  413970:	lea    rax,[rip+0x6d31]        # 41a6a8 <flatcc_builder_padding_base@@Base+0x568>
  413977:	ret    
  413978:	nop    DWORD PTR [rax+rax*1+0x0]
  413980:	lea    rax,[rip+0x6cf1]        # 41a678 <flatcc_builder_padding_base@@Base+0x538>
  413987:	ret    
  413988:	nop    DWORD PTR [rax+rax*1+0x0]
  413990:	lea    rax,[rip+0x6cb1]        # 41a648 <flatcc_builder_padding_base@@Base+0x508>
  413997:	ret    
  413998:	nop    DWORD PTR [rax+rax*1+0x0]
  4139a0:	lea    rax,[rip+0x6c69]        # 41a610 <flatcc_builder_padding_base@@Base+0x4d0>
  4139a7:	ret    
  4139a8:	nop    DWORD PTR [rax+rax*1+0x0]
  4139b0:	lea    rax,[rip+0x6c29]        # 41a5e0 <flatcc_builder_padding_base@@Base+0x4a0>
  4139b7:	ret    
  4139b8:	nop    DWORD PTR [rax+rax*1+0x0]
  4139c0:	lea    rax,[rip+0x6aa1]        # 41a468 <flatcc_builder_padding_base@@Base+0x328>
  4139c7:	ret    
  4139c8:	nop    DWORD PTR [rax+rax*1+0x0]
  4139d0:	lea    rax,[rip+0x6be1]        # 41a5b8 <flatcc_builder_padding_base@@Base+0x478>
  4139d7:	ret    
  4139d8:	nop    DWORD PTR [rax+rax*1+0x0]
  4139e0:	lea    rax,[rip+0x6a6d]        # 41a454 <flatcc_builder_padding_base@@Base+0x314>
  4139e7:	ret    
  4139e8:	nop    DWORD PTR [rax+rax*1+0x0]
  4139f0:	lea    rax,[rip+0x6b99]        # 41a590 <flatcc_builder_padding_base@@Base+0x450>
  4139f7:	ret    
  4139f8:	nop    DWORD PTR [rax+rax*1+0x0]
  413a00:	lea    rax,[rip+0x6b61]        # 41a568 <flatcc_builder_padding_base@@Base+0x428>
  413a07:	ret    
  413a08:	nop    DWORD PTR [rax+rax*1+0x0]
  413a10:	lea    rax,[rip+0x6b29]        # 41a540 <flatcc_builder_padding_base@@Base+0x400>
  413a17:	ret    
  413a18:	nop    DWORD PTR [rax+rax*1+0x0]
  413a20:	lea    rax,[rip+0x6a13]        # 41a43a <flatcc_builder_padding_base@@Base+0x2fa>
  413a27:	ret    
  413a28:	nop    DWORD PTR [rax+rax*1+0x0]
  413a30:	lea    rax,[rip+0x69ea]        # 41a421 <flatcc_builder_padding_base@@Base+0x2e1>
  413a37:	ret    
  413a38:	nop    DWORD PTR [rax+rax*1+0x0]
  413a40:	lea    rax,[rip+0x69c2]        # 41a409 <flatcc_builder_padding_base@@Base+0x2c9>
  413a47:	ret    
  413a48:	nop    DWORD PTR [rax+rax*1+0x0]
  413a50:	lea    rax,[rip+0x69a1]        # 41a3f8 <flatcc_builder_padding_base@@Base+0x2b8>
  413a57:	ret    
  413a58:	nop    DWORD PTR [rax+rax*1+0x0]
  413a60:	lea    rax,[rip+0x697c]        # 41a3e3 <flatcc_builder_padding_base@@Base+0x2a3>
  413a67:	ret    
  413a68:	nop    DWORD PTR [rax+rax*1+0x0]
  413a70:	lea    rax,[rip+0x6958]        # 41a3cf <flatcc_builder_padding_base@@Base+0x28f>
  413a77:	ret    
  413a78:	nop    DWORD PTR [rax+rax*1+0x0]
  413a80:	lea    rax,[rip+0x6934]        # 41a3bb <flatcc_builder_padding_base@@Base+0x27b>
  413a87:	ret    
  413a88:	nop    DWORD PTR [rax+rax*1+0x0]
  413a90:	lea    rax,[rip+0x6909]        # 41a3a0 <flatcc_builder_padding_base@@Base+0x260>
  413a97:	ret    
  413a98:	nop    DWORD PTR [rax+rax*1+0x0]
  413aa0:	lea    rax,[rip+0x6a79]        # 41a520 <flatcc_builder_padding_base@@Base+0x3e0>
  413aa7:	ret    
  413aa8:	nop    DWORD PTR [rax+rax*1+0x0]
  413ab0:	lea    rax,[rip+0x6a41]        # 41a4f8 <flatcc_builder_padding_base@@Base+0x3b8>
  413ab7:	ret    
  413ab8:	nop    DWORD PTR [rax+rax*1+0x0]
  413ac0:	lea    rax,[rip+0x68c2]        # 41a389 <flatcc_builder_padding_base@@Base+0x249>
  413ac7:	ret    
  413ac8:	nop    DWORD PTR [rax+rax*1+0x0]
  413ad0:	lea    rax,[rip+0x6898]        # 41a36f <flatcc_builder_padding_base@@Base+0x22f>
  413ad7:	ret    
  413ad8:	nop    DWORD PTR [rax+rax*1+0x0]
  413ae0:	lea    rax,[rip+0x6874]        # 41a35b <flatcc_builder_padding_base@@Base+0x21b>
  413ae7:	ret    
  413ae8:	nop    DWORD PTR [rax+rax*1+0x0]
  413af0:	lea    rax,[rip+0x684c]        # 41a343 <flatcc_builder_padding_base@@Base+0x203>
  413af7:	ret    
  413af8:	nop    DWORD PTR [rax+rax*1+0x0]
  413b00:	lea    rax,[rip+0x69e3]        # 41a4ea <flatcc_builder_padding_base@@Base+0x3aa>
  413b07:	ret    
  413b08:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000413b10 <flatcc_verify_field@@Base>:
  413b10:	mov    eax,0x4
  413b15:	lea    esi,[rax+rsi*2]
  413b18:	xor    eax,eax
  413b1a:	cmp    si,WORD PTR [rdi+0x1e]
  413b1e:	jae    413b49 <flatcc_verify_field@@Base+0x39>
  413b20:	mov    r8,QWORD PTR [rdi+0x10]
  413b24:	movzx  esi,si
  413b27:	movzx  r8d,WORD PTR [r8+rsi*1]
  413b2c:	test   r8d,r8d
  413b2f:	je     413b49 <flatcc_verify_field@@Base+0x39>
  413b31:	movzx  r9d,WORD PTR [rdi+0x1c]
  413b36:	add    edx,r8d
  413b39:	movzx  ecx,cx
  413b3c:	mov    rsi,QWORD PTR [rdi]
  413b3f:	mov    eax,0xd
  413b44:	cmp    edx,r9d
  413b47:	jbe    413b50 <flatcc_verify_field@@Base+0x40>
  413b49:	repz ret 
  413b4b:	nop    DWORD PTR [rax+rax*1+0x0]
  413b50:	add    esi,DWORD PTR [rdi+0x18]
  413b53:	sub    ecx,0x1
  413b56:	add    esi,r8d
  413b59:	and    ecx,esi
  413b5b:	cmp    ecx,0x1
  413b5e:	sbb    eax,eax
  413b60:	not    eax
  413b62:	and    eax,0xc
  413b65:	ret    
  413b66:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000413b70 <flatcc_verify_string_field@@Base>:
  413b70:	sub    rsp,0x18
  413b74:	movzx  esi,si
  413b77:	mov    r9,rdi
  413b7a:	lea    rcx,[rsp+0x4]
  413b7f:	mov    rax,QWORD PTR fs:0x28
  413b88:	mov    QWORD PTR [rsp+0x8],rax
  413b8d:	xor    eax,eax
  413b8f:	call   413820 <flatcc_emitter_copy_buffer@@Base+0x100>
  413b94:	test   eax,eax
  413b96:	jne    413be0 <flatcc_verify_string_field@@Base+0x70>
  413b98:	mov    edx,DWORD PTR [rsp+0x4]
  413b9c:	test   edx,edx
  413b9e:	je     413be0 <flatcc_verify_string_field@@Base+0x70>
  413ba0:	mov    rsi,QWORD PTR [rdi]
  413ba3:	mov    ecx,edx
  413ba5:	mov    edi,DWORD PTR [rsi+rcx*1]
  413ba8:	add    edi,edx
  413baa:	cmp    edx,edi
  413bac:	mov    ecx,edi
  413bae:	jae    413bf8 <flatcc_verify_string_field@@Base+0x88>
  413bb0:	mov    r8d,DWORD PTR [r9+0x8]
  413bb4:	mov    edi,edi
  413bb6:	lea    r9,[rdi+0x4]
  413bba:	cmp    r9,r8
  413bbd:	mov    rdx,r8
  413bc0:	ja     413bf8 <flatcc_verify_string_field@@Base+0x88>
  413bc2:	test   cl,0x3
  413bc5:	jne    413bf8 <flatcc_verify_string_field@@Base+0x88>
  413bc7:	mov    edi,DWORD PTR [rsi+rdi*1]
  413bca:	add    ecx,0x4
  413bcd:	sub    edx,ecx
  413bcf:	lea    r8d,[rdi+0x1]
  413bd3:	cmp    edx,r8d
  413bd6:	jae    413c00 <flatcc_verify_string_field@@Base+0x90>
  413bd8:	mov    eax,0x8
  413bdd:	nop    DWORD PTR [rax]
  413be0:	mov    rdi,QWORD PTR [rsp+0x8]
  413be5:	xor    rdi,QWORD PTR fs:0x28
  413bee:	jne    413c11 <flatcc_verify_string_field@@Base+0xa1>
  413bf0:	add    rsp,0x18
  413bf4:	ret    
  413bf5:	nop    DWORD PTR [rax]
  413bf8:	mov    eax,0x11
  413bfd:	jmp    413be0 <flatcc_verify_string_field@@Base+0x70>
  413bff:	nop
  413c00:	add    rcx,rsi
  413c03:	mov    edx,0x7
  413c08:	cmp    BYTE PTR [rcx+rdi*1],0x0
  413c0c:	cmovne eax,edx
  413c0f:	jmp    413be0 <flatcc_verify_string_field@@Base+0x70>
  413c11:	call   404070 <__stack_chk_fail@plt>
  413c16:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000413c20 <flatcc_verify_vector_field@@Base>:
  413c20:	push   rbx
  413c21:	mov    rbx,rcx
  413c24:	movzx  esi,si
  413c27:	mov    r10,rdi
  413c2a:	mov    r11d,r8d
  413c2d:	sub    rsp,0x10
  413c31:	lea    rcx,[rsp+0x4]
  413c36:	mov    rax,QWORD PTR fs:0x28
  413c3f:	mov    QWORD PTR [rsp+0x8],rax
  413c44:	xor    eax,eax
  413c46:	call   413820 <flatcc_emitter_copy_buffer@@Base+0x100>
  413c4b:	test   eax,eax
  413c4d:	jne    413cb0 <flatcc_verify_vector_field@@Base+0x90>
  413c4f:	mov    edx,DWORD PTR [rsp+0x4]
  413c53:	test   edx,edx
  413c55:	je     413cb0 <flatcc_verify_vector_field@@Base+0x90>
  413c57:	mov    rsi,QWORD PTR [rdi]
  413c5a:	mov    ecx,edx
  413c5c:	mov    edi,DWORD PTR [rsi+rcx*1]
  413c5f:	add    edi,edx
  413c61:	cmp    edx,edi
  413c63:	mov    ecx,edi
  413c65:	jae    413cd0 <flatcc_verify_vector_field@@Base+0xb0>
  413c67:	mov    edx,DWORD PTR [r10+0x8]
  413c6b:	mov    r10d,ecx
  413c6e:	lea    r8,[r10+0x4]
  413c72:	cmp    r8,rdx
  413c75:	mov    rdi,rdx
  413c78:	ja     413cd0 <flatcc_verify_vector_field@@Base+0xb0>
  413c7a:	cmp    r11w,0x4
  413c7f:	mov    edx,0x4
  413c84:	cmovae edx,r11d
  413c88:	movzx  edx,dx
  413c8b:	sub    edx,0x1
  413c8e:	or     edx,0x3
  413c91:	movsxd rdx,edx
  413c94:	test   rdx,r8
  413c97:	jne    413cd0 <flatcc_verify_vector_field@@Base+0xb0>
  413c99:	mov    edx,DWORD PTR [rsi+r10*1]
  413c9d:	cmp    edx,r9d
  413ca0:	jbe    413ce0 <flatcc_verify_vector_field@@Base+0xc0>
  413ca2:	mov    eax,0x19
  413ca7:	nop    WORD PTR [rax+rax*1+0x0]
  413cb0:	mov    rbx,QWORD PTR [rsp+0x8]
  413cb5:	xor    rbx,QWORD PTR fs:0x28
  413cbe:	jne    413cf4 <flatcc_verify_vector_field@@Base+0xd4>
  413cc0:	add    rsp,0x10
  413cc4:	pop    rbx
  413cc5:	ret    
  413cc6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  413cd0:	mov    eax,0x10
  413cd5:	jmp    413cb0 <flatcc_verify_vector_field@@Base+0x90>
  413cd7:	nop    WORD PTR [rax+rax*1+0x0]
  413ce0:	imul   ebx,edx
  413ce3:	sub    edi,0x4
  413ce6:	mov    edx,0x1a
  413ceb:	sub    edi,ecx
  413ced:	cmp    edi,ebx
  413cef:	cmovb  eax,edx
  413cf2:	jmp    413cb0 <flatcc_verify_vector_field@@Base+0x90>
  413cf4:	call   404070 <__stack_chk_fail@plt>
  413cf9:	nop    DWORD PTR [rax+0x0]

0000000000413d00 <flatcc_verify_string_vector_field@@Base>:
  413d00:	push   rbp
  413d01:	push   rbx
  413d02:	movzx  esi,si
  413d05:	mov    r9,rdi
  413d08:	sub    rsp,0x18
  413d0c:	lea    rcx,[rsp+0x4]
  413d11:	mov    rax,QWORD PTR fs:0x28
  413d1a:	mov    QWORD PTR [rsp+0x8],rax
  413d1f:	xor    eax,eax
  413d21:	call   413820 <flatcc_emitter_copy_buffer@@Base+0x100>
  413d26:	test   eax,eax
  413d28:	jne    413d80 <flatcc_verify_string_vector_field@@Base+0x80>
  413d2a:	mov    edx,DWORD PTR [rsp+0x4]
  413d2e:	test   edx,edx
  413d30:	je     413d80 <flatcc_verify_string_vector_field@@Base+0x80>
  413d32:	mov    rsi,QWORD PTR [rdi]
  413d35:	mov    ecx,edx
  413d37:	mov    edi,DWORD PTR [rsi+rcx*1]
  413d3a:	add    edi,edx
  413d3c:	cmp    edx,edi
  413d3e:	mov    ecx,edi
  413d40:	jae    413da0 <flatcc_verify_string_vector_field@@Base+0xa0>
  413d42:	mov    r10d,DWORD PTR [r9+0x8]
  413d46:	mov    r9d,edi
  413d49:	lea    rbx,[r9+0x4]
  413d4d:	cmp    rbx,r10
  413d50:	mov    r11,r10
  413d53:	ja     413da0 <flatcc_verify_string_vector_field@@Base+0xa0>
  413d55:	test   bl,0x3
  413d58:	jne    413d66 <flatcc_verify_string_vector_field@@Base+0x66>
  413d5a:	mov    edi,DWORD PTR [rsi+r9*1]
  413d5e:	cmp    edi,0x3fffffff
  413d64:	jbe    413db0 <flatcc_verify_string_vector_field@@Base+0xb0>
  413d66:	and    ebx,0x3
  413d69:	jne    413da0 <flatcc_verify_string_vector_field@@Base+0xa0>
  413d6b:	mov    edx,DWORD PTR [rsi+r9*1]
  413d6f:	cmp    edx,0x3fffffff
  413d75:	jbe    413e20 <flatcc_verify_string_vector_field@@Base+0x120>
  413d7b:	mov    eax,0x19
  413d80:	mov    rdi,QWORD PTR [rsp+0x8]
  413d85:	xor    rdi,QWORD PTR fs:0x28
  413d8e:	jne    413e9b <flatcc_verify_string_vector_field@@Base+0x19b>
  413d94:	add    rsp,0x18
  413d98:	pop    rbx
  413d99:	pop    rbp
  413d9a:	ret    
  413d9b:	nop    DWORD PTR [rax+rax*1+0x0]
  413da0:	mov    eax,0x10
  413da5:	jmp    413d80 <flatcc_verify_string_vector_field@@Base+0x80>
  413da7:	nop    WORD PTR [rax+rax*1+0x0]
  413db0:	lea    edx,[rcx+0x4]
  413db3:	lea    r8d,[rdi*4+0x0]
  413dbb:	mov    ebp,r11d
  413dbe:	sub    ebp,edx
  413dc0:	cmp    ebp,r8d
  413dc3:	jb     413d66 <flatcc_verify_string_vector_field@@Base+0x66>
  413dc5:	test   edi,edi
  413dc7:	je     413d80 <flatcc_verify_string_vector_field@@Base+0x80>
  413dc9:	mov    ecx,edx
  413dcb:	mov    ebx,DWORD PTR [rsi+rcx*1]
  413dce:	add    ebx,edx
  413dd0:	cmp    edx,ebx
  413dd2:	mov    ecx,ebx
  413dd4:	jae    413e10 <flatcc_verify_string_vector_field@@Base+0x110>
  413dd6:	mov    edi,ebx
  413dd8:	lea    r9,[rdi+0x4]
  413ddc:	cmp    r10,r9
  413ddf:	jb     413e10 <flatcc_verify_string_vector_field@@Base+0x110>
  413de1:	test   bl,0x3
  413de4:	jne    413e10 <flatcc_verify_string_vector_field@@Base+0x110>
  413de6:	mov    edi,DWORD PTR [rsi+rdi*1]
  413de9:	add    ecx,0x4
  413dec:	mov    ebx,r11d
  413def:	sub    ebx,ecx
  413df1:	lea    r9d,[rdi+0x1]
  413df5:	cmp    ebx,r9d
  413df8:	jae    413e3a <flatcc_verify_string_vector_field@@Base+0x13a>
  413dfa:	nop    WORD PTR [rax+rax*1+0x0]
  413e00:	mov    eax,0x8
  413e05:	jmp    413d80 <flatcc_verify_string_vector_field@@Base+0x80>
  413e0a:	nop    WORD PTR [rax+rax*1+0x0]
  413e10:	mov    eax,0x11
  413e15:	jmp    413d80 <flatcc_verify_string_vector_field@@Base+0x80>
  413e1a:	nop    WORD PTR [rax+rax*1+0x0]
  413e20:	sub    r11d,0x4
  413e24:	shl    edx,0x2
  413e27:	sub    r11d,ecx
  413e2a:	cmp    r11d,edx
  413e2d:	mov    edx,0x1a
  413e32:	cmovb  eax,edx
  413e35:	jmp    413d80 <flatcc_verify_string_vector_field@@Base+0x80>
  413e3a:	add    r8d,edx
  413e3d:	nop    DWORD PTR [rax]
  413e40:	add    rcx,rsi
  413e43:	cmp    BYTE PTR [rcx+rdi*1],0x0
  413e47:	je     413e58 <flatcc_verify_string_vector_field@@Base+0x158>
  413e49:	mov    eax,0x7
  413e4e:	jmp    413d80 <flatcc_verify_string_vector_field@@Base+0x80>
  413e53:	nop    DWORD PTR [rax+rax*1+0x0]
  413e58:	add    edx,0x4
  413e5b:	cmp    r8d,edx
  413e5e:	je     413d80 <flatcc_verify_string_vector_field@@Base+0x80>
  413e64:	mov    ecx,edx
  413e66:	mov    ebx,DWORD PTR [rsi+rcx*1]
  413e69:	add    ebx,edx
  413e6b:	cmp    edx,ebx
  413e6d:	mov    ecx,ebx
  413e6f:	jae    413e10 <flatcc_verify_string_vector_field@@Base+0x110>
  413e71:	mov    edi,ebx
  413e73:	lea    r9,[rdi+0x4]
  413e77:	cmp    r10,r9
  413e7a:	jb     413e10 <flatcc_verify_string_vector_field@@Base+0x110>
  413e7c:	test   bl,0x3
  413e7f:	jne    413e10 <flatcc_verify_string_vector_field@@Base+0x110>
  413e81:	mov    edi,DWORD PTR [rsi+rdi*1]
  413e84:	add    ecx,0x4
  413e87:	mov    ebx,r11d
  413e8a:	sub    ebx,ecx
  413e8c:	lea    r9d,[rdi+0x1]
  413e90:	cmp    ebx,r9d
  413e93:	jb     413e00 <flatcc_verify_string_vector_field@@Base+0x100>
  413e99:	jmp    413e40 <flatcc_verify_string_vector_field@@Base+0x140>
  413e9b:	call   404070 <__stack_chk_fail@plt>

0000000000413ea0 <flatcc_verify_table_field@@Base>:
  413ea0:	sub    rsp,0x48
  413ea4:	mov    r10,rcx
  413ea7:	movzx  esi,si
  413eaa:	lea    rcx,[rsp+0xc]
  413eaf:	mov    r9,rdi
  413eb2:	mov    rax,QWORD PTR fs:0x28
  413ebb:	mov    QWORD PTR [rsp+0x38],rax
  413ec0:	xor    eax,eax
  413ec2:	call   413820 <flatcc_emitter_copy_buffer@@Base+0x100>
  413ec7:	test   eax,eax
  413ec9:	jne    413ed3 <flatcc_verify_table_field@@Base+0x33>
  413ecb:	mov    edx,DWORD PTR [rsp+0xc]
  413ecf:	test   edx,edx
  413ed1:	jne    413ef0 <flatcc_verify_table_field@@Base+0x50>
  413ed3:	mov    rdi,QWORD PTR [rsp+0x38]
  413ed8:	xor    rdi,QWORD PTR fs:0x28
  413ee1:	jne    413fe2 <flatcc_verify_table_field@@Base+0x142>
  413ee7:	add    rsp,0x48
  413eeb:	ret    
  413eec:	nop    DWORD PTR [rax+0x0]
  413ef0:	mov    ecx,DWORD PTR [r9+0xc]
  413ef4:	mov    rdi,QWORD PTR [rdi]
  413ef7:	mov    eax,edx
  413ef9:	mov    r8d,DWORD PTR [r9+0x8]
  413efd:	sub    ecx,0x1
  413f00:	mov    esi,DWORD PTR [rdi+rax*1]
  413f03:	mov    eax,0x3
  413f08:	test   ecx,ecx
  413f0a:	mov    DWORD PTR [rsp+0x1c],ecx
  413f0e:	je     413ed3 <flatcc_verify_table_field@@Base+0x33>
  413f10:	add    esi,edx
  413f12:	mov    eax,0xf
  413f17:	cmp    edx,esi
  413f19:	jae    413ed3 <flatcc_verify_table_field@@Base+0x33>
  413f1b:	mov    edx,esi
  413f1d:	mov    ecx,r8d
  413f20:	lea    r9,[rdx+0x4]
  413f24:	cmp    r9,rcx
  413f27:	ja     413ed3 <flatcc_verify_table_field@@Base+0x33>
  413f29:	test   sil,0x3
  413f2d:	jne    413ed3 <flatcc_verify_table_field@@Base+0x33>
  413f2f:	mov    DWORD PTR [rsp+0x28],esi
  413f33:	mov    eax,esi
  413f35:	sub    eax,DWORD PTR [rdi+rdx*1]
  413f38:	mov    edx,eax
  413f3a:	js     413fd8 <flatcc_verify_table_field@@Base+0x138>
  413f40:	test   dl,0x1
  413f43:	jne    413fd8 <flatcc_verify_table_field@@Base+0x138>
  413f49:	mov    r9d,edx
  413f4c:	mov    eax,0x1b
  413f51:	lea    r11,[r9+0x2]
  413f55:	cmp    rcx,r11
  413f58:	jb     413ed3 <flatcc_verify_table_field@@Base+0x33>
  413f5e:	add    r9,rdi
  413f61:	mov    eax,0x1e
  413f66:	movzx  r11d,WORD PTR [r9]
  413f6a:	mov    ecx,r11d
  413f6d:	mov    WORD PTR [rsp+0x2e],r11w
  413f73:	add    r11d,edx
  413f76:	cmp    r8d,r11d
  413f79:	jb     413ed3 <flatcc_verify_table_field@@Base+0x33>
  413f7f:	test   cl,0x1
  413f82:	jne    413ed3 <flatcc_verify_table_field@@Base+0x33>
  413f88:	cmp    cx,0x3
  413f8c:	mov    eax,0x1c
  413f91:	jbe    413ed3 <flatcc_verify_table_field@@Base+0x33>
  413f97:	lea    eax,[rdx+0x2]
  413f9a:	mov    ecx,r8d
  413f9d:	sub    ecx,esi
  413f9f:	movzx  edx,WORD PTR [rdi+rax*1]
  413fa3:	mov    eax,0x14
  413fa8:	cmp    ecx,edx
  413faa:	mov    WORD PTR [rsp+0x2c],dx
  413faf:	jb     413ed3 <flatcc_verify_table_field@@Base+0x33>
  413fb5:	mov    QWORD PTR [rsp+0x10],rdi
  413fba:	mov    QWORD PTR [rsp+0x20],r9
  413fbf:	lea    rdi,[rsp+0x10]
  413fc4:	mov    DWORD PTR [rsp+0x18],r8d
  413fc9:	call   r10
  413fcc:	jmp    413ed3 <flatcc_verify_table_field@@Base+0x33>
  413fd1:	nop    DWORD PTR [rax+0x0]
  413fd8:	mov    eax,0x1d
  413fdd:	jmp    413ed3 <flatcc_verify_table_field@@Base+0x33>
  413fe2:	call   404070 <__stack_chk_fail@plt>
  413fe7:	nop    WORD PTR [rax+rax*1+0x0]

0000000000413ff0 <flatcc_verify_table_vector_field@@Base>:
  413ff0:	push   r15
  413ff2:	push   r14
  413ff4:	movzx  esi,si
  413ff7:	push   r13
  413ff9:	push   r12
  413ffb:	mov    r12,rcx
  413ffe:	push   rbp
  413fff:	push   rbx
  414000:	mov    r9,rdi
  414003:	sub    rsp,0x68
  414007:	lea    rcx,[rsp+0x2c]
  41400c:	mov    rax,QWORD PTR fs:0x28
  414015:	mov    QWORD PTR [rsp+0x58],rax
  41401a:	xor    eax,eax
  41401c:	call   413820 <flatcc_emitter_copy_buffer@@Base+0x100>
  414021:	test   eax,eax
  414023:	mov    ebp,eax
  414025:	jne    41402f <flatcc_verify_table_vector_field@@Base+0x3f>
  414027:	mov    eax,DWORD PTR [rsp+0x2c]
  41402b:	test   eax,eax
  41402d:	jne    414058 <flatcc_verify_table_vector_field@@Base+0x68>
  41402f:	mov    rdi,QWORD PTR [rsp+0x58]
  414034:	xor    rdi,QWORD PTR fs:0x28
  41403d:	mov    eax,ebp
  41403f:	jne    414316 <flatcc_verify_table_vector_field@@Base+0x326>
  414045:	add    rsp,0x68
  414049:	pop    rbx
  41404a:	pop    rbp
  41404b:	pop    r12
  41404d:	pop    r13
  41404f:	pop    r14
  414051:	pop    r15
  414053:	ret    
  414054:	nop    DWORD PTR [rax+0x0]
  414058:	mov    r14d,DWORD PTR [rdi+0xc]
  41405c:	test   r14d,r14d
  41405f:	jle    4140a8 <flatcc_verify_table_vector_field@@Base+0xb8>
  414061:	mov    r15,QWORD PTR [rdi]
  414064:	mov    edx,eax
  414066:	mov    edi,DWORD PTR [r15+rdx*1]
  41406a:	add    edi,eax
  41406c:	cmp    eax,edi
  41406e:	jae    4140b0 <flatcc_verify_table_vector_field@@Base+0xc0>
  414070:	mov    ecx,DWORD PTR [r9+0x8]
  414074:	mov    r8d,edi
  414077:	lea    r9,[r8+0x4]
  41407b:	cmp    r9,rcx
  41407e:	mov    rsi,rcx
  414081:	ja     4140b0 <flatcc_verify_table_vector_field@@Base+0xc0>
  414083:	test   r9b,0x3
  414087:	je     4140c0 <flatcc_verify_table_vector_field@@Base+0xd0>
  414089:	and    r9d,0x3
  41408d:	jne    4140b0 <flatcc_verify_table_vector_field@@Base+0xc0>
  41408f:	mov    eax,DWORD PTR [r15+r8*1]
  414093:	cmp    eax,0x3fffffff
  414098:	jbe    4142f5 <flatcc_verify_table_vector_field@@Base+0x305>
  41409e:	mov    ebp,0x19
  4140a3:	jmp    41402f <flatcc_verify_table_vector_field@@Base+0x3f>
  4140a5:	nop    DWORD PTR [rax]
  4140a8:	mov    ebp,0x3
  4140ad:	jmp    41402f <flatcc_verify_table_vector_field@@Base+0x3f>
  4140af:	nop
  4140b0:	mov    ebp,0x10
  4140b5:	jmp    41402f <flatcc_verify_table_vector_field@@Base+0x3f>
  4140ba:	nop    WORD PTR [rax+rax*1+0x0]
  4140c0:	mov    eax,DWORD PTR [r15+r8*1]
  4140c4:	cmp    eax,0x3fffffff
  4140c9:	ja     414089 <flatcc_verify_table_vector_field@@Base+0x99>
  4140cb:	lea    ebx,[rdi+0x4]
  4140ce:	lea    edx,[rax*4+0x0]
  4140d5:	mov    r10d,esi
  4140d8:	sub    r10d,ebx
  4140db:	cmp    r10d,edx
  4140de:	jb     414089 <flatcc_verify_table_vector_field@@Base+0x99>
  4140e0:	test   eax,eax
  4140e2:	je     41402f <flatcc_verify_table_vector_field@@Base+0x3f>
  4140e8:	sub    r14d,0x2
  4140ec:	mov    r13d,ebx
  4140ef:	add    r13,r15
  4140f2:	test   r14d,r14d
  4140f5:	mov    eax,DWORD PTR [r13+0x0]
  4140f9:	mov    DWORD PTR [rsp+0x3c],r14d
  4140fe:	je     4140a8 <flatcc_verify_table_vector_field@@Base+0xb8>
  414100:	add    eax,ebx
  414102:	cmp    ebx,eax
  414104:	jae    414150 <flatcc_verify_table_vector_field@@Base+0x160>
  414106:	mov    edi,eax
  414108:	lea    r8,[rdi+0x4]
  41410c:	cmp    rcx,r8
  41410f:	jb     414150 <flatcc_verify_table_vector_field@@Base+0x160>
  414111:	test   al,0x3
  414113:	jne    414150 <flatcc_verify_table_vector_field@@Base+0x160>
  414115:	lea    r8,[rsp+0x30]
  41411a:	add    edx,ebx
  41411c:	nop    DWORD PTR [rax+0x0]
  414120:	mov    DWORD PTR [rsp+0x48],eax
  414124:	mov    r11d,eax
  414127:	sub    r11d,DWORD PTR [r15+rdi*1]
  41412b:	mov    edi,r11d
  41412e:	js     414150 <flatcc_verify_table_vector_field@@Base+0x160>
  414130:	test   dil,0x1
  414134:	jne    414150 <flatcc_verify_table_vector_field@@Base+0x160>
  414136:	mov    r9d,edi
  414139:	lea    r10,[r9+0x2]
  41413d:	cmp    rcx,r10
  414140:	jae    414228 <flatcc_verify_table_vector_field@@Base+0x238>
  414146:	nop    WORD PTR cs:[rax+rax*1+0x0]
  414150:	mov    eax,DWORD PTR [r13+0x0]
  414154:	mov    ebp,0xf
  414159:	mov    DWORD PTR [rsp+0x3c],r14d
  41415e:	add    eax,ebx
  414160:	cmp    ebx,eax
  414162:	jae    41402f <flatcc_verify_table_vector_field@@Base+0x3f>
  414168:	mov    edx,eax
  41416a:	lea    rdi,[rdx+0x4]
  41416e:	cmp    rcx,rdi
  414171:	jb     41402f <flatcc_verify_table_vector_field@@Base+0x3f>
  414177:	test   al,0x3
  414179:	jne    41402f <flatcc_verify_table_vector_field@@Base+0x3f>
  41417f:	mov    DWORD PTR [rsp+0x48],eax
  414183:	mov    ebx,eax
  414185:	sub    ebx,DWORD PTR [r15+rdx*1]
  414189:	mov    edx,ebx
  41418b:	js     41430c <flatcc_verify_table_vector_field@@Base+0x31c>
  414191:	test   dl,0x1
  414194:	jne    41430c <flatcc_verify_table_vector_field@@Base+0x31c>
  41419a:	mov    edi,edx
  41419c:	mov    ebp,0x1b
  4141a1:	lea    r8,[rdi+0x2]
  4141a5:	cmp    rcx,r8
  4141a8:	jb     41402f <flatcc_verify_table_vector_field@@Base+0x3f>
  4141ae:	lea    rcx,[r15+rdi*1]
  4141b2:	mov    ebp,0x1e
  4141b7:	movzx  r8d,WORD PTR [rcx]
  4141bb:	mov    edi,r8d
  4141be:	mov    WORD PTR [rsp+0x4e],r8w
  4141c4:	add    r8d,edx
  4141c7:	cmp    esi,r8d
  4141ca:	jb     41402f <flatcc_verify_table_vector_field@@Base+0x3f>
  4141d0:	test   dil,0x1
  4141d4:	jne    41402f <flatcc_verify_table_vector_field@@Base+0x3f>
  4141da:	cmp    di,0x3
  4141de:	mov    ebp,0x1c
  4141e3:	jbe    41402f <flatcc_verify_table_vector_field@@Base+0x3f>
  4141e9:	add    edx,0x2
  4141ec:	mov    ebx,esi
  4141ee:	mov    ebp,0x14
  4141f3:	movzx  edx,WORD PTR [r15+rdx*1]
  4141f8:	sub    ebx,eax
  4141fa:	cmp    ebx,edx
  4141fc:	mov    WORD PTR [rsp+0x4c],dx
  414201:	jb     41402f <flatcc_verify_table_vector_field@@Base+0x3f>
  414207:	mov    QWORD PTR [rsp+0x40],rcx
  41420c:	mov    QWORD PTR [rsp+0x30],r15
  414211:	lea    rdi,[rsp+0x30]
  414216:	mov    DWORD PTR [rsp+0x38],esi
  41421a:	call   r12
  41421d:	mov    ebp,eax
  41421f:	jmp    41402f <flatcc_verify_table_vector_field@@Base+0x3f>
  414224:	nop    DWORD PTR [rax+0x0]
  414228:	add    r9,r15
  41422b:	movzx  r10d,WORD PTR [r9]
  41422f:	mov    r11d,r10d
  414232:	mov    WORD PTR [rsp+0x4e],r10w
  414238:	add    r10d,edi
  41423b:	cmp    esi,r10d
  41423e:	jb     414150 <flatcc_verify_table_vector_field@@Base+0x160>
  414244:	test   r11b,0x1
  414248:	jne    414150 <flatcc_verify_table_vector_field@@Base+0x160>
  41424e:	cmp    r11w,0x3
  414253:	jbe    414150 <flatcc_verify_table_vector_field@@Base+0x160>
  414259:	add    edi,0x2
  41425c:	mov    r10d,esi
  41425f:	movzx  edi,WORD PTR [r15+rdi*1]
  414264:	sub    r10d,eax
  414267:	cmp    r10d,edi
  41426a:	mov    WORD PTR [rsp+0x4c],di
  41426f:	jb     414150 <flatcc_verify_table_vector_field@@Base+0x160>
  414275:	mov    DWORD PTR [rsp+0x1c],edx
  414279:	mov    QWORD PTR [rsp+0x10],rcx
  41427e:	mov    rdi,r8
  414281:	mov    DWORD PTR [rsp+0x38],esi
  414285:	mov    DWORD PTR [rsp+0x18],esi
  414289:	mov    QWORD PTR [rsp+0x8],r8
  41428e:	mov    QWORD PTR [rsp+0x40],r9
  414293:	mov    QWORD PTR [rsp+0x30],r15
  414298:	call   r12
  41429b:	test   eax,eax
  41429d:	mov    r8,QWORD PTR [rsp+0x8]
  4142a2:	mov    esi,DWORD PTR [rsp+0x18]
  4142a6:	mov    rcx,QWORD PTR [rsp+0x10]
  4142ab:	mov    edx,DWORD PTR [rsp+0x1c]
  4142af:	jne    414150 <flatcc_verify_table_vector_field@@Base+0x160>
  4142b5:	add    ebx,0x4
  4142b8:	cmp    ebx,edx
  4142ba:	je     41402f <flatcc_verify_table_vector_field@@Base+0x3f>
  4142c0:	mov    r13d,ebx
  4142c3:	add    r13,r15
  4142c6:	mov    eax,DWORD PTR [r13+0x0]
  4142ca:	mov    DWORD PTR [rsp+0x3c],r14d
  4142cf:	add    eax,ebx
  4142d1:	cmp    ebx,eax
  4142d3:	jae    414150 <flatcc_verify_table_vector_field@@Base+0x160>
  4142d9:	mov    edi,eax
  4142db:	lea    r9,[rdi+0x4]
  4142df:	cmp    rcx,r9
  4142e2:	jb     414150 <flatcc_verify_table_vector_field@@Base+0x160>
  4142e8:	test   al,0x3
  4142ea:	je     414120 <flatcc_verify_table_vector_field@@Base+0x130>
  4142f0:	jmp    414150 <flatcc_verify_table_vector_field@@Base+0x160>
  4142f5:	sub    esi,0x4
  4142f8:	shl    eax,0x2
  4142fb:	sub    esi,edi
  4142fd:	cmp    esi,eax
  4142ff:	mov    eax,0x1a
  414304:	cmovb  ebp,eax
  414307:	jmp    41402f <flatcc_verify_table_vector_field@@Base+0x3f>
  41430c:	mov    ebp,0x1d
  414311:	jmp    41402f <flatcc_verify_table_vector_field@@Base+0x3f>
  414316:	call   404070 <__stack_chk_fail@plt>
  41431b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000414320 <flatcc_verify_union_table@@Base>:
  414320:	sub    rsp,0x38
  414324:	mov    edx,DWORD PTR [rdi+0xc]
  414327:	mov    r8d,DWORD PTR [rdi+0x18]
  41432b:	mov    rax,QWORD PTR fs:0x28
  414334:	mov    QWORD PTR [rsp+0x28],rax
  414339:	xor    eax,eax
  41433b:	mov    ecx,DWORD PTR [rdi+0x14]
  41433e:	mov    r10d,DWORD PTR [rdi+0x8]
  414342:	mov    eax,0x3
  414347:	sub    edx,0x1
  41434a:	mov    r9,QWORD PTR [rdi]
  41434d:	test   edx,edx
  41434f:	mov    DWORD PTR [rsp+0xc],edx
  414353:	jne    414370 <flatcc_verify_union_table@@Base+0x50>
  414355:	mov    rsi,QWORD PTR [rsp+0x28]
  41435a:	xor    rsi,QWORD PTR fs:0x28
  414363:	jne    41443a <flatcc_verify_union_table@@Base+0x11a>
  414369:	add    rsp,0x38
  41436d:	ret    
  41436e:	xchg   ax,ax
  414370:	add    r8d,ecx
  414373:	mov    eax,0xf
  414378:	cmp    ecx,r8d
  41437b:	jae    414355 <flatcc_verify_union_table@@Base+0x35>
  41437d:	mov    edx,r8d
  414380:	mov    ecx,r10d
  414383:	lea    rdi,[rdx+0x4]
  414387:	cmp    rdi,rcx
  41438a:	ja     414355 <flatcc_verify_union_table@@Base+0x35>
  41438c:	test   r8b,0x3
  414390:	jne    414355 <flatcc_verify_union_table@@Base+0x35>
  414392:	mov    DWORD PTR [rsp+0x18],r8d
  414397:	mov    eax,r8d
  41439a:	sub    eax,DWORD PTR [r9+rdx*1]
  41439e:	mov    edx,eax
  4143a0:	js     414430 <flatcc_verify_union_table@@Base+0x110>
  4143a6:	test   dl,0x1
  4143a9:	jne    414430 <flatcc_verify_union_table@@Base+0x110>
  4143af:	mov    edi,edx
  4143b1:	mov    eax,0x1b
  4143b6:	lea    r11,[rdi+0x2]
  4143ba:	cmp    rcx,r11
  4143bd:	jb     414355 <flatcc_verify_union_table@@Base+0x35>
  4143bf:	add    rdi,r9
  4143c2:	mov    eax,0x1e
  4143c7:	movzx  ecx,WORD PTR [rdi]
  4143ca:	mov    r11d,ecx
  4143cd:	mov    WORD PTR [rsp+0x1e],cx
  4143d2:	add    ecx,edx
  4143d4:	cmp    r10d,ecx
  4143d7:	jb     414355 <flatcc_verify_union_table@@Base+0x35>
  4143dd:	test   r11b,0x1
  4143e1:	jne    414355 <flatcc_verify_union_table@@Base+0x35>
  4143e7:	cmp    r11w,0x3
  4143ec:	mov    eax,0x1c
  4143f1:	jbe    414355 <flatcc_verify_union_table@@Base+0x35>
  4143f7:	lea    eax,[rdx+0x2]
  4143fa:	mov    ecx,r10d
  4143fd:	sub    ecx,r8d
  414400:	movzx  edx,WORD PTR [r9+rax*1]
  414405:	mov    eax,0x14
  41440a:	cmp    ecx,edx
  41440c:	mov    WORD PTR [rsp+0x1c],dx
  414411:	jb     414355 <flatcc_verify_union_table@@Base+0x35>
  414417:	mov    QWORD PTR [rsp+0x10],rdi
  41441c:	mov    QWORD PTR [rsp],r9
  414420:	mov    rdi,rsp
  414423:	mov    DWORD PTR [rsp+0x8],r10d
  414428:	call   rsi
  41442a:	jmp    414355 <flatcc_verify_union_table@@Base+0x35>
  41442f:	nop
  414430:	mov    eax,0x1d
  414435:	jmp    414355 <flatcc_verify_union_table@@Base+0x35>
  41443a:	call   404070 <__stack_chk_fail@plt>
  41443f:	nop

0000000000414440 <flatcc_verify_union_struct@@Base>:
  414440:	mov    ecx,DWORD PTR [rdi+0x18]
  414443:	mov    r8d,DWORD PTR [rdi+0x14]
  414447:	mov    eax,0x12
  41444c:	mov    edi,DWORD PTR [rdi+0x8]
  41444f:	test   ecx,ecx
  414451:	jne    414458 <flatcc_verify_union_struct@@Base+0x18>
  414453:	repz ret 
  414455:	nop    DWORD PTR [rax]
  414458:	add    ecx,r8d
  41445b:	cmp    edi,ecx
  41445d:	jb     414453 <flatcc_verify_union_struct@@Base+0x13>
  41445f:	add    esi,ecx
  414461:	jb     41447f <flatcc_verify_union_struct@@Base+0x3f>
  414463:	cmp    edi,esi
  414465:	mov    eax,0x9
  41446a:	jb     414453 <flatcc_verify_union_struct@@Base+0x13>
  41446c:	movzx  eax,dx
  41446f:	sub    eax,0x1
  414472:	and    ecx,eax
  414474:	cmp    ecx,0x1
  414477:	sbb    eax,eax
  414479:	not    eax
  41447b:	and    eax,0xb
  41447e:	ret    
  41447f:	mov    eax,0xa
  414484:	ret    
  414485:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

0000000000414490 <flatcc_verify_union_string@@Base>:
  414490:	mov    ecx,DWORD PTR [rdi+0x14]
  414493:	mov    edx,DWORD PTR [rdi+0x18]
  414496:	mov    eax,0x11
  41449b:	add    edx,ecx
  41449d:	cmp    ecx,edx
  41449f:	jae    4144d1 <flatcc_verify_union_string@@Base+0x41>
  4144a1:	mov    r8d,DWORD PTR [rdi+0x8]
  4144a5:	mov    esi,edx
  4144a7:	lea    r9,[rsi+0x4]
  4144ab:	cmp    r9,r8
  4144ae:	mov    rcx,r8
  4144b1:	ja     4144d1 <flatcc_verify_union_string@@Base+0x41>
  4144b3:	test   dl,0x3
  4144b6:	jne    4144d8 <flatcc_verify_union_string@@Base+0x48>
  4144b8:	mov    rdi,QWORD PTR [rdi]
  4144bb:	add    edx,0x4
  4144be:	mov    eax,0x8
  4144c3:	sub    ecx,edx
  4144c5:	mov    esi,DWORD PTR [rdi+rsi*1]
  4144c8:	lea    r8d,[rsi+0x1]
  4144cc:	cmp    ecx,r8d
  4144cf:	jae    4144e0 <flatcc_verify_union_string@@Base+0x50>
  4144d1:	repz ret 
  4144d3:	nop    DWORD PTR [rax+rax*1+0x0]
  4144d8:	repz ret 
  4144da:	nop    WORD PTR [rax+rax*1+0x0]
  4144e0:	add    rdx,rdi
  4144e3:	add    rdx,rsi
  4144e6:	cmp    BYTE PTR [rdx],0x1
  4144e9:	sbb    eax,eax
  4144eb:	not    eax
  4144ed:	and    eax,0x7
  4144f0:	ret    
  4144f1:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4144fc:	nop    DWORD PTR [rax+0x0]

0000000000414500 <flatcc_verify_buffer_header@@Base>:
  414500:	push   rbx
  414501:	sub    rsp,0x10
  414505:	mov    rax,QWORD PTR fs:0x28
  41450e:	mov    QWORD PTR [rsp+0x8],rax
  414513:	xor    eax,eax
  414515:	test   dil,0x3
  414519:	mov    eax,0x5
  41451e:	je     414540 <flatcc_verify_buffer_header@@Base+0x40>
  414520:	mov    rcx,QWORD PTR [rsp+0x8]
  414525:	xor    rcx,QWORD PTR fs:0x28
  41452e:	jne    414595 <flatcc_verify_buffer_header@@Base+0x95>
  414530:	add    rsp,0x10
  414534:	pop    rbx
  414535:	ret    
  414536:	nop    WORD PTR cs:[rax+rax*1+0x0]
  414540:	mov    rcx,rdx
  414543:	mov    edx,0xfffffff7
  414548:	mov    eax,0x6
  41454d:	cmp    rsi,rdx
  414550:	ja     414520 <flatcc_verify_buffer_header@@Base+0x20>
  414552:	cmp    rsi,0x7
  414556:	mov    eax,0x1
  41455b:	jbe    414520 <flatcc_verify_buffer_header@@Base+0x20>
  41455d:	test   rcx,rcx
  414560:	je     414591 <flatcc_verify_buffer_header@@Base+0x91>
  414562:	mov    rbx,rdi
  414565:	lea    rdi,[rsp+0x4]
  41456a:	mov    edx,0x4
  41456f:	mov    rsi,rcx
  414572:	mov    DWORD PTR [rsp+0x4],0x0
  41457a:	call   404040 <strncpy@plt>
  41457f:	mov    edx,DWORD PTR [rsp+0x4]
  414583:	cmp    DWORD PTR [rbx+0x4],edx
  414586:	je     414591 <flatcc_verify_buffer_header@@Base+0x91>
  414588:	test   edx,edx
  41458a:	mov    eax,0x2
  41458f:	jne    414520 <flatcc_verify_buffer_header@@Base+0x20>
  414591:	xor    eax,eax
  414593:	jmp    414520 <flatcc_verify_buffer_header@@Base+0x20>
  414595:	call   404070 <__stack_chk_fail@plt>
  41459a:	nop    WORD PTR [rax+rax*1+0x0]

00000000004145a0 <flatcc_verify_typed_buffer_header@@Base>:
  4145a0:	test   dil,0x3
  4145a4:	mov    eax,0x5
  4145a9:	je     4145b0 <flatcc_verify_typed_buffer_header@@Base+0x10>
  4145ab:	repz ret 
  4145ad:	nop    DWORD PTR [rax]
  4145b0:	mov    ecx,0xfffffff7
  4145b5:	mov    eax,0x6
  4145ba:	cmp    rsi,rcx
  4145bd:	ja     4145ab <flatcc_verify_typed_buffer_header@@Base+0xb>
  4145bf:	cmp    rsi,0x7
  4145c3:	mov    eax,0x1
  4145c8:	jbe    4145ab <flatcc_verify_typed_buffer_header@@Base+0xb>
  4145ca:	xor    eax,eax
  4145cc:	test   edx,edx
  4145ce:	je     4145ab <flatcc_verify_typed_buffer_header@@Base+0xb>
  4145d0:	xor    eax,eax
  4145d2:	cmp    edx,DWORD PTR [rdi+0x4]
  4145d5:	setne  al
  4145d8:	add    eax,eax
  4145da:	ret    
  4145db:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004145e0 <flatcc_verify_struct_as_root@@Base>:
  4145e0:	push   r14
  4145e2:	push   r13
  4145e4:	mov    r14d,r8d
  4145e7:	push   r12
  4145e9:	push   rbp
  4145ea:	mov    r12,rdx
  4145ed:	push   rbx
  4145ee:	mov    rbp,rdi
  4145f1:	mov    rbx,rsi
  4145f4:	mov    r13,rcx
  4145f7:	call   414500 <flatcc_verify_buffer_header@@Base>
  4145fc:	test   eax,eax
  4145fe:	jne    414620 <flatcc_verify_struct_as_root@@Base+0x40>
  414600:	mov    edx,DWORD PTR [rbp+0x0]
  414603:	cmp    edx,ebx
  414605:	ja     41460b <flatcc_verify_struct_as_root@@Base+0x2b>
  414607:	test   edx,edx
  414609:	jne    414640 <flatcc_verify_struct_as_root@@Base+0x60>
  41460b:	mov    eax,0x12
  414610:	pop    rbx
  414611:	pop    rbp
  414612:	pop    r12
  414614:	pop    r13
  414616:	pop    r14
  414618:	ret    
  414619:	nop    DWORD PTR [rax+0x0]
  414620:	mov    rdx,r12
  414623:	mov    rsi,rbx
  414626:	mov    rdi,rbp
  414629:	pop    rbx
  41462a:	pop    rbp
  41462b:	pop    r12
  41462d:	pop    r13
  41462f:	pop    r14
  414631:	jmp    414500 <flatcc_verify_buffer_header@@Base>
  414636:	nop    WORD PTR cs:[rax+rax*1+0x0]
  414640:	add    r13d,edx
  414643:	jb     41466b <flatcc_verify_struct_as_root@@Base+0x8b>
  414645:	cmp    ebx,r13d
  414648:	jae    414658 <flatcc_verify_struct_as_root@@Base+0x78>
  41464a:	mov    eax,0x9
  41464f:	jmp    414610 <flatcc_verify_struct_as_root@@Base+0x30>
  414651:	nop    DWORD PTR [rax+0x0]
  414658:	movzx  ecx,r14w
  41465c:	sub    ecx,0x1
  41465f:	test   ecx,edx
  414661:	mov    edx,0xb
  414666:	cmovne eax,edx
  414669:	jmp    414610 <flatcc_verify_struct_as_root@@Base+0x30>
  41466b:	mov    eax,0xa
  414670:	jmp    414610 <flatcc_verify_struct_as_root@@Base+0x30>
  414672:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  41467d:	nop    DWORD PTR [rax]

0000000000414680 <flatcc_verify_struct_as_typed_root@@Base>:
  414680:	push   r14
  414682:	push   r13
  414684:	mov    r14d,r8d
  414687:	push   r12
  414689:	push   rbp
  41468a:	mov    r12d,edx
  41468d:	push   rbx
  41468e:	mov    rbp,rdi
  414691:	mov    rbx,rsi
  414694:	mov    r13,rcx
  414697:	call   4145a0 <flatcc_verify_typed_buffer_header@@Base>
  41469c:	test   eax,eax
  41469e:	jne    4146c0 <flatcc_verify_struct_as_typed_root@@Base+0x40>
  4146a0:	mov    edx,DWORD PTR [rbp+0x0]
  4146a3:	cmp    edx,ebx
  4146a5:	ja     4146ab <flatcc_verify_struct_as_typed_root@@Base+0x2b>
  4146a7:	test   edx,edx
  4146a9:	jne    4146e0 <flatcc_verify_struct_as_typed_root@@Base+0x60>
  4146ab:	mov    eax,0x12
  4146b0:	pop    rbx
  4146b1:	pop    rbp
  4146b2:	pop    r12
  4146b4:	pop    r13
  4146b6:	pop    r14
  4146b8:	ret    
  4146b9:	nop    DWORD PTR [rax+0x0]
  4146c0:	mov    edx,r12d
  4146c3:	mov    rsi,rbx
  4146c6:	mov    rdi,rbp
  4146c9:	pop    rbx
  4146ca:	pop    rbp
  4146cb:	pop    r12
  4146cd:	pop    r13
  4146cf:	pop    r14
  4146d1:	jmp    4145a0 <flatcc_verify_typed_buffer_header@@Base>
  4146d6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4146e0:	add    r13d,edx
  4146e3:	jb     41470b <flatcc_verify_struct_as_typed_root@@Base+0x8b>
  4146e5:	cmp    ebx,r13d
  4146e8:	jae    4146f8 <flatcc_verify_struct_as_typed_root@@Base+0x78>
  4146ea:	mov    eax,0x9
  4146ef:	jmp    4146b0 <flatcc_verify_struct_as_typed_root@@Base+0x30>
  4146f1:	nop    DWORD PTR [rax+0x0]
  4146f8:	movzx  ecx,r14w
  4146fc:	sub    ecx,0x1
  4146ff:	test   ecx,edx
  414701:	mov    edx,0xb
  414706:	cmovne eax,edx
  414709:	jmp    4146b0 <flatcc_verify_struct_as_typed_root@@Base+0x30>
  41470b:	mov    eax,0xa
  414710:	jmp    4146b0 <flatcc_verify_struct_as_typed_root@@Base+0x30>
  414712:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  41471d:	nop    DWORD PTR [rax]

0000000000414720 <flatcc_verify_table_as_root@@Base>:
  414720:	push   r14
  414722:	push   r13
  414724:	mov    r13,rsi
  414727:	push   r12
  414729:	push   rbp
  41472a:	mov    ebp,esi
  41472c:	push   rbx
  41472d:	mov    rsi,rbp
  414730:	mov    rbx,rdi
  414733:	mov    r12,rdx
  414736:	mov    r14,rcx
  414739:	sub    rsp,0x30
  41473d:	mov    rax,QWORD PTR fs:0x28
  414746:	mov    QWORD PTR [rsp+0x28],rax
  41474b:	xor    eax,eax
  41474d:	call   414500 <flatcc_verify_buffer_header@@Base>
  414752:	test   eax,eax
  414754:	jne    4147a8 <flatcc_verify_table_as_root@@Base+0x88>
  414756:	mov    edx,DWORD PTR [rbx]
  414758:	mov    DWORD PTR [rsp+0xc],0x63
  414760:	mov    eax,0xf
  414765:	test   edx,edx
  414767:	je     414780 <flatcc_verify_table_as_root@@Base+0x60>
  414769:	mov    ecx,edx
  41476b:	lea    rsi,[rcx+0x4]
  41476f:	cmp    rbp,rsi
  414772:	jb     414780 <flatcc_verify_table_as_root@@Base+0x60>
  414774:	test   dl,0x3
  414777:	je     4147c0 <flatcc_verify_table_as_root@@Base+0xa0>
  414779:	nop    DWORD PTR [rax+0x0]
  414780:	mov    rcx,QWORD PTR [rsp+0x28]
  414785:	xor    rcx,QWORD PTR fs:0x28
  41478e:	jne    41486a <flatcc_verify_table_as_root@@Base+0x14a>
  414794:	add    rsp,0x30
  414798:	pop    rbx
  414799:	pop    rbp
  41479a:	pop    r12
  41479c:	pop    r13
  41479e:	pop    r14
  4147a0:	ret    
  4147a1:	nop    DWORD PTR [rax+0x0]
  4147a8:	mov    rdx,r12
  4147ab:	mov    rsi,rbp
  4147ae:	mov    rdi,rbx
  4147b1:	call   414500 <flatcc_verify_buffer_header@@Base>
  4147b6:	jmp    414780 <flatcc_verify_table_as_root@@Base+0x60>
  4147b8:	nop    DWORD PTR [rax+rax*1+0x0]
  4147c0:	mov    eax,edx
  4147c2:	sub    eax,DWORD PTR [rbx+rcx*1]
  4147c5:	mov    DWORD PTR [rsp+0x18],edx
  4147c9:	mov    ecx,eax
  4147cb:	js     414860 <flatcc_verify_table_as_root@@Base+0x140>
  4147d1:	test   cl,0x1
  4147d4:	jne    414860 <flatcc_verify_table_as_root@@Base+0x140>
  4147da:	mov    esi,ecx
  4147dc:	mov    eax,0x1b
  4147e1:	lea    rdi,[rsi+0x2]
  4147e5:	cmp    rbp,rdi
  4147e8:	jb     414780 <flatcc_verify_table_as_root@@Base+0x60>
  4147ea:	add    rsi,rbx
  4147ed:	mov    eax,0x1e
  4147f2:	movzx  edi,WORD PTR [rsi]
  4147f5:	mov    r8d,edi
  4147f8:	mov    WORD PTR [rsp+0x1e],di
  4147fd:	add    edi,ecx
  4147ff:	cmp    r13d,edi
  414802:	jb     414780 <flatcc_verify_table_as_root@@Base+0x60>
  414808:	test   r8b,0x1
  41480c:	jne    414780 <flatcc_verify_table_as_root@@Base+0x60>
  414812:	cmp    r8w,0x3
  414817:	mov    eax,0x1c
  41481c:	jbe    414780 <flatcc_verify_table_as_root@@Base+0x60>
  414822:	lea    eax,[rcx+0x2]
  414825:	mov    ecx,r13d
  414828:	sub    ecx,edx
  41482a:	movzx  eax,WORD PTR [rbx+rax*1]
  41482e:	movzx  edx,ax
  414831:	mov    WORD PTR [rsp+0x1c],ax
  414836:	mov    eax,0x14
  41483b:	cmp    ecx,edx
  41483d:	jb     414780 <flatcc_verify_table_as_root@@Base+0x60>
  414843:	mov    QWORD PTR [rsp+0x10],rsi
  414848:	mov    QWORD PTR [rsp],rbx
  41484c:	mov    rdi,rsp
  41484f:	mov    DWORD PTR [rsp+0x8],r13d
  414854:	call   r14
  414857:	jmp    414780 <flatcc_verify_table_as_root@@Base+0x60>
  41485c:	nop    DWORD PTR [rax+0x0]
  414860:	mov    eax,0x1d
  414865:	jmp    414780 <flatcc_verify_table_as_root@@Base+0x60>
  41486a:	call   404070 <__stack_chk_fail@plt>
  41486f:	nop

0000000000414870 <flatcc_verify_table_as_typed_root@@Base>:
  414870:	push   r14
  414872:	push   r13
  414874:	mov    r13,rsi
  414877:	push   r12
  414879:	push   rbp
  41487a:	mov    ebp,esi
  41487c:	push   rbx
  41487d:	mov    rsi,rbp
  414880:	mov    rbx,rdi
  414883:	mov    r12d,edx
  414886:	mov    r14,rcx
  414889:	sub    rsp,0x30
  41488d:	mov    rax,QWORD PTR fs:0x28
  414896:	mov    QWORD PTR [rsp+0x28],rax
  41489b:	xor    eax,eax
  41489d:	call   4145a0 <flatcc_verify_typed_buffer_header@@Base>
  4148a2:	test   eax,eax
  4148a4:	jne    4148f8 <flatcc_verify_table_as_typed_root@@Base+0x88>
  4148a6:	mov    edx,DWORD PTR [rbx]
  4148a8:	mov    DWORD PTR [rsp+0xc],0x63
  4148b0:	mov    eax,0xf
  4148b5:	test   edx,edx
  4148b7:	je     4148d0 <flatcc_verify_table_as_typed_root@@Base+0x60>
  4148b9:	mov    ecx,edx
  4148bb:	lea    rsi,[rcx+0x4]
  4148bf:	cmp    rbp,rsi
  4148c2:	jb     4148d0 <flatcc_verify_table_as_typed_root@@Base+0x60>
  4148c4:	test   dl,0x3
  4148c7:	je     414910 <flatcc_verify_table_as_typed_root@@Base+0xa0>
  4148c9:	nop    DWORD PTR [rax+0x0]
  4148d0:	mov    rcx,QWORD PTR [rsp+0x28]
  4148d5:	xor    rcx,QWORD PTR fs:0x28
  4148de:	jne    4149ba <flatcc_verify_table_as_typed_root@@Base+0x14a>
  4148e4:	add    rsp,0x30
  4148e8:	pop    rbx
  4148e9:	pop    rbp
  4148ea:	pop    r12
  4148ec:	pop    r13
  4148ee:	pop    r14
  4148f0:	ret    
  4148f1:	nop    DWORD PTR [rax+0x0]
  4148f8:	mov    edx,r12d
  4148fb:	mov    rsi,rbp
  4148fe:	mov    rdi,rbx
  414901:	call   4145a0 <flatcc_verify_typed_buffer_header@@Base>
  414906:	jmp    4148d0 <flatcc_verify_table_as_typed_root@@Base+0x60>
  414908:	nop    DWORD PTR [rax+rax*1+0x0]
  414910:	mov    eax,edx
  414912:	sub    eax,DWORD PTR [rbx+rcx*1]
  414915:	mov    DWORD PTR [rsp+0x18],edx
  414919:	mov    ecx,eax
  41491b:	js     4149b0 <flatcc_verify_table_as_typed_root@@Base+0x140>
  414921:	test   cl,0x1
  414924:	jne    4149b0 <flatcc_verify_table_as_typed_root@@Base+0x140>
  41492a:	mov    esi,ecx
  41492c:	mov    eax,0x1b
  414931:	lea    rdi,[rsi+0x2]
  414935:	cmp    rbp,rdi
  414938:	jb     4148d0 <flatcc_verify_table_as_typed_root@@Base+0x60>
  41493a:	add    rsi,rbx
  41493d:	mov    eax,0x1e
  414942:	movzx  edi,WORD PTR [rsi]
  414945:	mov    r8d,edi
  414948:	mov    WORD PTR [rsp+0x1e],di
  41494d:	add    edi,ecx
  41494f:	cmp    r13d,edi
  414952:	jb     4148d0 <flatcc_verify_table_as_typed_root@@Base+0x60>
  414958:	test   r8b,0x1
  41495c:	jne    4148d0 <flatcc_verify_table_as_typed_root@@Base+0x60>
  414962:	cmp    r8w,0x3
  414967:	mov    eax,0x1c
  41496c:	jbe    4148d0 <flatcc_verify_table_as_typed_root@@Base+0x60>
  414972:	lea    eax,[rcx+0x2]
  414975:	mov    ecx,r13d
  414978:	sub    ecx,edx
  41497a:	movzx  eax,WORD PTR [rbx+rax*1]
  41497e:	movzx  edx,ax
  414981:	mov    WORD PTR [rsp+0x1c],ax
  414986:	mov    eax,0x14
  41498b:	cmp    ecx,edx
  41498d:	jb     4148d0 <flatcc_verify_table_as_typed_root@@Base+0x60>
  414993:	mov    QWORD PTR [rsp+0x10],rsi
  414998:	mov    QWORD PTR [rsp],rbx
  41499c:	mov    rdi,rsp
  41499f:	mov    DWORD PTR [rsp+0x8],r13d
  4149a4:	call   r14
  4149a7:	jmp    4148d0 <flatcc_verify_table_as_typed_root@@Base+0x60>
  4149ac:	nop    DWORD PTR [rax+0x0]
  4149b0:	mov    eax,0x1d
  4149b5:	jmp    4148d0 <flatcc_verify_table_as_typed_root@@Base+0x60>
  4149ba:	call   404070 <__stack_chk_fail@plt>
  4149bf:	nop

00000000004149c0 <flatcc_verify_struct_as_nested_root@@Base>:
  4149c0:	push   r15
  4149c2:	push   r14
  4149c4:	mov    r14,r8
  4149c7:	push   r13
  4149c9:	push   r12
  4149cb:	movzx  r12d,r9w
  4149cf:	push   rbp
  4149d0:	push   rbx
  4149d1:	movzx  ebx,si
  4149d4:	mov    r13d,r9d
  4149d7:	mov    r8d,0x1
  4149dd:	mov    r9d,0xffffffff
  4149e3:	sub    rsp,0x18
  4149e7:	mov    esi,ebx
  4149e9:	mov    r15,rdi
  4149ec:	mov    QWORD PTR [rsp+0x8],rcx
  4149f1:	mov    rcx,r12
  4149f4:	mov    ebp,edx
  4149f6:	call   413c20 <flatcc_verify_vector_field@@Base>
  4149fb:	test   eax,eax
  4149fd:	jne    414a58 <flatcc_verify_struct_as_nested_root@@Base+0x98>
  4149ff:	add    ebx,0x2
  414a02:	add    ebx,ebx
  414a04:	cmp    bx,WORD PTR [r15+0x1e]
  414a09:	jae    414a88 <flatcc_verify_struct_as_nested_root@@Base+0xc8>
  414a0b:	mov    rax,QWORD PTR [r15+0x10]
  414a0f:	movzx  ebx,bx
  414a12:	movzx  eax,WORD PTR [rax+rbx*1]
  414a16:	test   ax,ax
  414a19:	je     414a88 <flatcc_verify_struct_as_nested_root@@Base+0xc8>
  414a1b:	mov    edi,DWORD PTR [r15+0x18]
  414a1f:	add    rdi,rax
  414a22:	add    rdi,QWORD PTR [r15]
  414a25:	je     414a88 <flatcc_verify_struct_as_nested_root@@Base+0xc8>
  414a27:	mov    eax,DWORD PTR [rdi]
  414a29:	mov    rdx,QWORD PTR [rsp+0x8]
  414a2e:	movzx  r8d,r13w
  414a32:	mov    rcx,r14
  414a35:	add    rdi,rax
  414a38:	mov    esi,DWORD PTR [rdi]
  414a3a:	add    rsp,0x18
  414a3e:	add    rdi,0x4
  414a42:	pop    rbx
  414a43:	pop    rbp
  414a44:	pop    r12
  414a46:	pop    r13
  414a48:	pop    r14
  414a4a:	pop    r15
  414a4c:	jmp    4145e0 <flatcc_verify_struct_as_root@@Base>
  414a51:	nop    DWORD PTR [rax+0x0]
  414a58:	add    rsp,0x18
  414a5c:	mov    rcx,r12
  414a5f:	mov    edx,ebp
  414a61:	mov    esi,ebx
  414a63:	mov    rdi,r15
  414a66:	mov    r9d,0xffffffff
  414a6c:	pop    rbx
  414a6d:	pop    rbp
  414a6e:	pop    r12
  414a70:	pop    r13
  414a72:	pop    r14
  414a74:	pop    r15
  414a76:	mov    r8d,0x1
  414a7c:	jmp    413c20 <flatcc_verify_vector_field@@Base>
  414a81:	nop    DWORD PTR [rax+0x0]
  414a88:	add    rsp,0x18
  414a8c:	xor    eax,eax
  414a8e:	pop    rbx
  414a8f:	pop    rbp
  414a90:	pop    r12
  414a92:	pop    r13
  414a94:	pop    r14
  414a96:	pop    r15
  414a98:	ret    
  414a99:	nop    DWORD PTR [rax+0x0]

0000000000414aa0 <flatcc_verify_table_as_nested_root@@Base>:
  414aa0:	push   r15
  414aa2:	push   r14
  414aa4:	movzx  r14d,r8w
  414aa8:	push   r13
  414aaa:	push   r12
  414aac:	mov    r8d,0x1
  414ab2:	push   rbp
  414ab3:	push   rbx
  414ab4:	movzx  ebx,si
  414ab7:	mov    r12,rcx
  414aba:	mov    esi,ebx
  414abc:	mov    rcx,r14
  414abf:	sub    rsp,0x48
  414ac3:	mov    r15,rdi
  414ac6:	mov    ebp,edx
  414ac8:	mov    QWORD PTR [rsp+0x8],r9
  414acd:	mov    r9d,0xffffffff
  414ad3:	mov    rax,QWORD PTR fs:0x28
  414adc:	mov    QWORD PTR [rsp+0x38],rax
  414ae1:	xor    eax,eax
  414ae3:	call   413c20 <flatcc_verify_vector_field@@Base>
  414ae8:	test   eax,eax
  414aea:	jne    414b90 <flatcc_verify_table_as_nested_root@@Base+0xf0>
  414af0:	add    ebx,0x2
  414af3:	add    ebx,ebx
  414af5:	cmp    bx,WORD PTR [r15+0x1e]
  414afa:	jae    414b50 <flatcc_verify_table_as_nested_root@@Base+0xb0>
  414afc:	mov    rdx,QWORD PTR [r15+0x10]
  414b00:	movzx  ebx,bx
  414b03:	movzx  edx,WORD PTR [rdx+rbx*1]
  414b07:	test   dx,dx
  414b0a:	je     414b50 <flatcc_verify_table_as_nested_root@@Base+0xb0>
  414b0c:	mov    ebx,DWORD PTR [r15+0x18]
  414b10:	add    rbx,rdx
  414b13:	add    rbx,QWORD PTR [r15]
  414b16:	je     414b50 <flatcc_verify_table_as_nested_root@@Base+0xb0>
  414b18:	mov    eax,DWORD PTR [rbx]
  414b1a:	mov    rdx,r12
  414b1d:	add    rbx,rax
  414b20:	mov    r14d,DWORD PTR [rbx]
  414b23:	lea    r13,[rbx+0x4]
  414b27:	mov    rdi,r13
  414b2a:	mov    rsi,r14
  414b2d:	mov    rbp,r14
  414b30:	call   414500 <flatcc_verify_buffer_header@@Base>
  414b35:	test   eax,eax
  414b37:	jne    414b78 <flatcc_verify_table_as_nested_root@@Base+0xd8>
  414b39:	mov    edx,DWORD PTR [r15+0xc]
  414b3d:	mov    esi,DWORD PTR [rbx+0x4]
  414b40:	mov    eax,0x3
  414b45:	sub    edx,0x1
  414b48:	test   edx,edx
  414b4a:	mov    DWORD PTR [rsp+0x1c],edx
  414b4e:	jne    414bb0 <flatcc_verify_table_as_nested_root@@Base+0x110>
  414b50:	mov    rcx,QWORD PTR [rsp+0x38]
  414b55:	xor    rcx,QWORD PTR fs:0x28
  414b5e:	jne    414c82 <flatcc_verify_table_as_nested_root@@Base+0x1e2>
  414b64:	add    rsp,0x48
  414b68:	pop    rbx
  414b69:	pop    rbp
  414b6a:	pop    r12
  414b6c:	pop    r13
  414b6e:	pop    r14
  414b70:	pop    r15
  414b72:	ret    
  414b73:	nop    DWORD PTR [rax+rax*1+0x0]
  414b78:	mov    rdx,r12
  414b7b:	mov    rsi,r14
  414b7e:	mov    rdi,r13
  414b81:	call   414500 <flatcc_verify_buffer_header@@Base>
  414b86:	jmp    414b50 <flatcc_verify_table_as_nested_root@@Base+0xb0>
  414b88:	nop    DWORD PTR [rax+rax*1+0x0]
  414b90:	mov    r9d,0xffffffff
  414b96:	mov    r8d,0x1
  414b9c:	mov    rcx,r14
  414b9f:	mov    edx,ebp
  414ba1:	mov    esi,ebx
  414ba3:	mov    rdi,r15
  414ba6:	call   413c20 <flatcc_verify_vector_field@@Base>
  414bab:	jmp    414b50 <flatcc_verify_table_as_nested_root@@Base+0xb0>
  414bad:	nop    DWORD PTR [rax]
  414bb0:	test   esi,esi
  414bb2:	mov    eax,0xf
  414bb7:	je     414b50 <flatcc_verify_table_as_nested_root@@Base+0xb0>
  414bb9:	mov    edx,esi
  414bbb:	lea    rdi,[rdx+0x4]
  414bbf:	cmp    r14,rdi
  414bc2:	jb     414b50 <flatcc_verify_table_as_nested_root@@Base+0xb0>
  414bc4:	test   sil,0x3
  414bc8:	jne    414b50 <flatcc_verify_table_as_nested_root@@Base+0xb0>
  414bca:	mov    DWORD PTR [rsp+0x28],esi
  414bce:	mov    eax,esi
  414bd0:	sub    eax,DWORD PTR [rbx+rdx*1+0x4]
  414bd4:	mov    edx,eax
  414bd6:	js     414c78 <flatcc_verify_table_as_nested_root@@Base+0x1d8>
  414bdc:	test   dl,0x1
  414bdf:	jne    414c78 <flatcc_verify_table_as_nested_root@@Base+0x1d8>
  414be5:	mov    edi,edx
  414be7:	mov    eax,0x1b
  414bec:	lea    r8,[rdi+0x2]
  414bf0:	cmp    r14,r8
  414bf3:	jb     414b50 <flatcc_verify_table_as_nested_root@@Base+0xb0>
  414bf9:	add    rdi,r13
  414bfc:	mov    eax,0x1e
  414c01:	movzx  r8d,WORD PTR [rdi]
  414c05:	mov    r9d,r8d
  414c08:	mov    WORD PTR [rsp+0x2e],r8w
  414c0e:	add    r8d,edx
  414c11:	cmp    ebp,r8d
  414c14:	jb     414b50 <flatcc_verify_table_as_nested_root@@Base+0xb0>
  414c1a:	test   r9b,0x1
  414c1e:	jne    414b50 <flatcc_verify_table_as_nested_root@@Base+0xb0>
  414c24:	cmp    r9w,0x3
  414c29:	mov    eax,0x1c
  414c2e:	jbe    414b50 <flatcc_verify_table_as_nested_root@@Base+0xb0>
  414c34:	lea    eax,[rdx+0x2]
  414c37:	mov    ecx,ebp
  414c39:	sub    ecx,esi
  414c3b:	movzx  edx,WORD PTR [rbx+rax*1+0x4]
  414c40:	mov    eax,0x14
  414c45:	cmp    ecx,edx
  414c47:	mov    WORD PTR [rsp+0x2c],dx
  414c4c:	jb     414b50 <flatcc_verify_table_as_nested_root@@Base+0xb0>
  414c52:	mov    QWORD PTR [rsp+0x20],rdi
  414c57:	mov    QWORD PTR [rsp+0x10],r13
  414c5c:	lea    rdi,[rsp+0x10]
  414c61:	mov    DWORD PTR [rsp+0x18],ebp
  414c65:	mov    rax,QWORD PTR [rsp+0x8]
  414c6a:	call   rax
  414c6c:	jmp    414b50 <flatcc_verify_table_as_nested_root@@Base+0xb0>
  414c71:	nop    DWORD PTR [rax+0x0]
  414c78:	mov    eax,0x1d
  414c7d:	jmp    414b50 <flatcc_verify_table_as_nested_root@@Base+0xb0>
  414c82:	call   404070 <__stack_chk_fail@plt>
  414c87:	nop    WORD PTR [rax+rax*1+0x0]

0000000000414c90 <flatcc_verify_union_field@@Base>:
  414c90:	push   rbx
  414c91:	mov    r10,rcx
  414c94:	mov    r9,rdi
  414c97:	sub    rsp,0x40
  414c9b:	movzx  ecx,WORD PTR [rdi+0x1e]
  414c9f:	mov    rax,QWORD PTR fs:0x28
  414ca8:	mov    QWORD PTR [rsp+0x38],rax
  414cad:	xor    eax,eax
  414caf:	lea    eax,[rsi+rsi*1]
  414cb2:	add    eax,0x2
  414cb5:	cmp    ax,cx
  414cb8:	jae    414d00 <flatcc_verify_union_field@@Base+0x70>
  414cba:	mov    rbx,QWORD PTR [rdi+0x10]
  414cbe:	movzx  eax,ax
  414cc1:	movzx  eax,WORD PTR [rbx+rax*1]
  414cc5:	test   eax,eax
  414cc7:	mov    r8,rax
  414cca:	je     414d00 <flatcc_verify_union_field@@Base+0x70>
  414ccc:	movzx  r11d,WORD PTR [r9+0x1c]
  414cd1:	lea    edi,[rax+0x1]
  414cd4:	mov    eax,0xd
  414cd9:	cmp    edi,r11d
  414cdc:	jbe    414d28 <flatcc_verify_union_field@@Base+0x98>
  414cde:	mov    rbx,QWORD PTR [rsp+0x38]
  414ce3:	xor    rbx,QWORD PTR fs:0x28
  414cec:	jne    414de0 <flatcc_verify_union_field@@Base+0x150>
  414cf2:	add    rsp,0x40
  414cf6:	pop    rbx
  414cf7:	ret    
  414cf8:	nop    DWORD PTR [rax+rax*1+0x0]
  414d00:	mov    eax,0x4
  414d05:	lea    esi,[rax+rsi*2]
  414d08:	cmp    cx,si
  414d0b:	jbe    414d60 <flatcc_verify_union_field@@Base+0xd0>
  414d0d:	mov    rax,QWORD PTR [r9+0x10]
  414d11:	movzx  esi,si
  414d14:	cmp    WORD PTR [rax+rsi*1],0x0
  414d19:	je     414d60 <flatcc_verify_union_field@@Base+0xd0>
  414d1b:	mov    eax,0x17
  414d20:	jmp    414cde <flatcc_verify_union_field@@Base+0x4e>
  414d22:	nop    WORD PTR [rax+rax*1+0x0]
  414d28:	movzx  esi,si
  414d2b:	mov    rdi,QWORD PTR [r9]
  414d2e:	lea    eax,[rsi+0x2]
  414d31:	add    eax,eax
  414d33:	cmp    cx,ax
  414d36:	jbe    414d78 <flatcc_verify_union_field@@Base+0xe8>
  414d38:	mov    r11d,DWORD PTR [r9+0x18]
  414d3c:	movzx  eax,ax
  414d3f:	add    r11,r8
  414d42:	add    r11,rdi
  414d45:	cmp    WORD PTR [rbx+rax*1],0x0
  414d4a:	movzx  ecx,BYTE PTR [r11]
  414d4e:	je     414d87 <flatcc_verify_union_field@@Base+0xf7>
  414d50:	test   cl,cl
  414d52:	jne    414d87 <flatcc_verify_union_field@@Base+0xf7>
  414d54:	mov    eax,0x18
  414d59:	jmp    414cde <flatcc_verify_union_field@@Base+0x4e>
  414d5b:	nop    DWORD PTR [rax+rax*1+0x0]
  414d60:	test   edx,edx
  414d62:	mov    eax,0x15
  414d67:	jne    414cde <flatcc_verify_union_field@@Base+0x4e>
  414d6d:	xor    eax,eax
  414d6f:	jmp    414cde <flatcc_verify_union_field@@Base+0x4e>
  414d74:	nop    DWORD PTR [rax+0x0]
  414d78:	mov    r11d,DWORD PTR [r9+0x18]
  414d7c:	add    r8,r11
  414d7f:	lea    r11,[rdi+r8*1]
  414d83:	movzx  ecx,BYTE PTR [r11]
  414d87:	test   cl,cl
  414d89:	je     414d6d <flatcc_verify_union_field@@Base+0xdd>
  414d8b:	lea    rcx,[rsp+0xc]
  414d90:	mov    rdi,r9
  414d93:	call   413820 <flatcc_emitter_copy_buffer@@Base+0x100>
  414d98:	test   eax,eax
  414d9a:	jne    414cde <flatcc_verify_union_field@@Base+0x4e>
  414da0:	mov    eax,DWORD PTR [rsp+0xc]
  414da4:	test   eax,eax
  414da6:	je     414d6d <flatcc_verify_union_field@@Base+0xdd>
  414da8:	mov    ecx,DWORD PTR [r9+0x8]
  414dac:	mov    rdx,QWORD PTR [r9]
  414daf:	lea    rdi,[rsp+0x10]
  414db4:	mov    DWORD PTR [rsp+0x24],eax
  414db8:	mov    DWORD PTR [rsp+0x18],ecx
  414dbc:	mov    ecx,DWORD PTR [r9+0xc]
  414dc0:	mov    QWORD PTR [rsp+0x10],rdx
  414dc5:	mov    DWORD PTR [rsp+0x1c],ecx
  414dc9:	mov    eax,DWORD PTR [rdx+rax*1]
  414dcc:	mov    DWORD PTR [rsp+0x28],eax
  414dd0:	movzx  eax,BYTE PTR [r11]
  414dd4:	mov    BYTE PTR [rsp+0x20],al
  414dd8:	call   r10
  414ddb:	jmp    414cde <flatcc_verify_union_field@@Base+0x4e>
  414de0:	call   404070 <__stack_chk_fail@plt>
  414de5:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

0000000000414df0 <flatcc_verify_union_vector_field@@Base>:
  414df0:	push   r15
  414df2:	push   r14
  414df4:	mov    r15d,edx
  414df7:	push   r13
  414df9:	push   r12
  414dfb:	lea    r12d,[rsi-0x1]
  414dff:	push   rbp
  414e00:	push   rbx
  414e01:	mov    r14d,esi
  414e04:	movzx  r12d,r12w
  414e08:	mov    rbx,rdi
  414e0b:	mov    r13,rcx
  414e0e:	sub    rsp,0x48
  414e12:	movzx  edx,WORD PTR [rdi+0x1e]
  414e16:	lea    ebp,[r12+0x2]
  414e1b:	mov    rax,QWORD PTR fs:0x28
  414e24:	mov    QWORD PTR [rsp+0x38],rax
  414e29:	xor    eax,eax
  414e2b:	add    ebp,ebp
  414e2d:	cmp    bp,dx
  414e30:	jae    414ef0 <flatcc_verify_union_vector_field@@Base+0x100>
  414e36:	mov    rcx,QWORD PTR [rdi+0x10]
  414e3a:	movzx  eax,bp
  414e3d:	cmp    WORD PTR [rcx+rax*1],0x0
  414e42:	je     414ef0 <flatcc_verify_union_vector_field@@Base+0x100>
  414e48:	mov    r9d,0xffffffff
  414e4e:	mov    r8d,0x1
  414e54:	mov    ecx,0x1
  414e59:	mov    edx,r15d
  414e5c:	mov    esi,r12d
  414e5f:	mov    rdi,rbx
  414e62:	call   413c20 <flatcc_verify_vector_field@@Base>
  414e67:	test   eax,eax
  414e69:	mov    r9d,eax
  414e6c:	jne    414fc0 <flatcc_verify_union_vector_field@@Base+0x1d0>
  414e72:	cmp    bp,WORD PTR [rbx+0x1e]
  414e76:	jae    414ec0 <flatcc_verify_union_vector_field@@Base+0xd0>
  414e78:	mov    rax,QWORD PTR [rbx+0x10]
  414e7c:	movzx  ebp,bp
  414e7f:	movzx  edx,WORD PTR [rax+rbp*1]
  414e83:	test   dx,dx
  414e86:	je     414ec0 <flatcc_verify_union_vector_field@@Base+0xd0>
  414e88:	mov    eax,DWORD PTR [rbx+0x18]
  414e8b:	add    rax,rdx
  414e8e:	add    rax,QWORD PTR [rbx]
  414e91:	je     414ec0 <flatcc_verify_union_vector_field@@Base+0xd0>
  414e93:	mov    r10d,DWORD PTR [rax]
  414e96:	lea    rcx,[rsp+0xc]
  414e9b:	movzx  esi,r14w
  414e9f:	mov    edx,r15d
  414ea2:	mov    rdi,rbx
  414ea5:	add    r10,rax
  414ea8:	mov    r11d,DWORD PTR [r10]
  414eab:	call   413820 <flatcc_emitter_copy_buffer@@Base+0x100>
  414eb0:	test   eax,eax
  414eb2:	jne    414fb0 <flatcc_verify_union_vector_field@@Base+0x1c0>
  414eb8:	mov    eax,DWORD PTR [rsp+0xc]
  414ebc:	test   eax,eax
  414ebe:	jne    414f28 <flatcc_verify_union_vector_field@@Base+0x138>
  414ec0:	mov    rdi,QWORD PTR [rsp+0x38]
  414ec5:	xor    rdi,QWORD PTR fs:0x28
  414ece:	mov    eax,r9d
  414ed1:	jne    4150b2 <flatcc_verify_union_vector_field@@Base+0x2c2>
  414ed7:	add    rsp,0x48
  414edb:	pop    rbx
  414edc:	pop    rbp
  414edd:	pop    r12
  414edf:	pop    r13
  414ee1:	pop    r14
  414ee3:	pop    r15
  414ee5:	ret    
  414ee6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  414ef0:	lea    eax,[r14+r14*1]
  414ef4:	add    eax,0x4
  414ef7:	cmp    dx,ax
  414efa:	ja     414f10 <flatcc_verify_union_vector_field@@Base+0x120>
  414efc:	test   r15d,r15d
  414eff:	mov    r9d,0x16
  414f05:	jne    414ec0 <flatcc_verify_union_vector_field@@Base+0xd0>
  414f07:	jmp    414e48 <flatcc_verify_union_vector_field@@Base+0x58>
  414f0c:	nop    DWORD PTR [rax+0x0]
  414f10:	mov    rdx,QWORD PTR [rbx+0x10]
  414f14:	movzx  eax,ax
  414f17:	cmp    WORD PTR [rdx+rax*1],0x0
  414f1c:	jne    414e48 <flatcc_verify_union_vector_field@@Base+0x58>
  414f22:	jmp    414efc <flatcc_verify_union_vector_field@@Base+0x10c>
  414f24:	nop    DWORD PTR [rax+0x0]
  414f28:	mov    edx,DWORD PTR [rbx+0xc]
  414f2b:	mov    r9d,0x3
  414f31:	test   edx,edx
  414f33:	jle    414ec0 <flatcc_verify_union_vector_field@@Base+0xd0>
  414f35:	mov    r12,QWORD PTR [rbx]
  414f38:	mov    ecx,eax
  414f3a:	mov    r9d,0x10
  414f40:	mov    esi,DWORD PTR [r12+rcx*1]
  414f44:	add    esi,eax
  414f46:	cmp    eax,esi
  414f48:	mov    ecx,esi
  414f4a:	jae    414ec0 <flatcc_verify_union_vector_field@@Base+0xd0>
  414f50:	mov    eax,DWORD PTR [rbx+0x8]
  414f53:	mov    esi,esi
  414f55:	lea    r8,[rsi+0x4]
  414f59:	cmp    r8,rax
  414f5c:	mov    rdi,rax
  414f5f:	ja     414ec0 <flatcc_verify_union_vector_field@@Base+0xd0>
  414f65:	test   r8b,0x3
  414f69:	je     414fe7 <flatcc_verify_union_vector_field@@Base+0x1f7>
  414f6b:	and    r8d,0x3
  414f6f:	mov    r9d,0x10
  414f75:	jne    414ec0 <flatcc_verify_union_vector_field@@Base+0xd0>
  414f7b:	mov    eax,DWORD PTR [r12+rsi*1]
  414f7f:	mov    r9d,0x19
  414f85:	cmp    eax,0x3fffffff
  414f8a:	ja     414ec0 <flatcc_verify_union_vector_field@@Base+0xd0>
  414f90:	sub    edi,0x4
  414f93:	shl    eax,0x2
  414f96:	mov    r9d,0x1a
  414f9c:	sub    edi,ecx
  414f9e:	cmp    edi,eax
  414fa0:	jb     414ec0 <flatcc_verify_union_vector_field@@Base+0xd0>
  414fa6:	xor    r9d,r9d
  414fa9:	jmp    414ec0 <flatcc_verify_union_vector_field@@Base+0xd0>
  414fae:	xchg   ax,ax
  414fb0:	mov    r9d,eax
  414fb3:	jmp    414ec0 <flatcc_verify_union_vector_field@@Base+0xd0>
  414fb8:	nop    DWORD PTR [rax+rax*1+0x0]
  414fc0:	mov    r9d,0xffffffff
  414fc6:	mov    r8d,0x1
  414fcc:	mov    ecx,0x1
  414fd1:	mov    edx,r15d
  414fd4:	mov    esi,r12d
  414fd7:	mov    rdi,rbx
  414fda:	call   413c20 <flatcc_verify_vector_field@@Base>
  414fdf:	mov    r9d,eax
  414fe2:	jmp    414ec0 <flatcc_verify_union_vector_field@@Base+0xd0>
  414fe7:	mov    eax,DWORD PTR [r12+rsi*1]
  414feb:	cmp    eax,0x3fffffff
  414ff0:	ja     414f6b <flatcc_verify_union_vector_field@@Base+0x17b>
  414ff6:	lea    ebx,[rcx+0x4]
  414ff9:	lea    r14d,[rax*4+0x0]
  415001:	mov    r9d,edi
  415004:	sub    r9d,ebx
  415007:	cmp    r9d,r14d
  41500a:	jb     414f6b <flatcc_verify_union_vector_field@@Base+0x17b>
  415010:	cmp    r11d,eax
  415013:	mov    r9d,0x22
  415019:	jne    414ec0 <flatcc_verify_union_vector_field@@Base+0xd0>
  41501f:	sub    edx,0x1
  415022:	test   r11d,r11d
  415025:	mov    QWORD PTR [rsp+0x10],r12
  41502a:	mov    DWORD PTR [rsp+0x18],edi
  41502e:	mov    DWORD PTR [rsp+0x1c],edx
  415032:	je     414fa6 <flatcc_verify_union_vector_field@@Base+0x1b6>
  415038:	lea    rbp,[r10+0x4]
  41503c:	add    r14d,ebx
  41503f:	lea    r15,[rsp+0x10]
  415044:	jmp    415066 <flatcc_verify_union_vector_field@@Base+0x276>
  415046:	nop    WORD PTR cs:[rax+rax*1+0x0]
  415050:	cmp    BYTE PTR [rbp+0x0],0x0
  415054:	jne    41509c <flatcc_verify_union_vector_field@@Base+0x2ac>
  415056:	add    ebx,0x4
  415059:	add    rbp,0x1
  41505d:	cmp    ebx,r14d
  415060:	je     414fa6 <flatcc_verify_union_vector_field@@Base+0x1b6>
  415066:	mov    eax,ebx
  415068:	mov    eax,DWORD PTR [r12+rax*1]
  41506c:	test   eax,eax
  41506e:	je     415050 <flatcc_verify_union_vector_field@@Base+0x260>
  415070:	movzx  edx,BYTE PTR [rbp+0x0]
  415074:	test   dl,dl
  415076:	je     4150a7 <flatcc_verify_union_vector_field@@Base+0x2b7>
  415078:	mov    BYTE PTR [rsp+0x20],dl
  41507c:	mov    DWORD PTR [rsp+0x24],ebx
  415080:	mov    rdi,r15
  415083:	mov    DWORD PTR [rsp+0x28],eax
  415087:	call   r13
  41508a:	test   eax,eax
  41508c:	je     415056 <flatcc_verify_union_vector_field@@Base+0x266>
  41508e:	mov    rdi,r15
  415091:	call   r13
  415094:	mov    r9d,eax
  415097:	jmp    414ec0 <flatcc_verify_union_vector_field@@Base+0xd0>
  41509c:	mov    r9d,0x20
  4150a2:	jmp    414ec0 <flatcc_verify_union_vector_field@@Base+0xd0>
  4150a7:	mov    r9d,0x21
  4150ad:	jmp    414ec0 <flatcc_verify_union_vector_field@@Base+0xd0>
  4150b2:	call   404070 <__stack_chk_fail@plt>
  4150b7:	nop    WORD PTR [rax+rax*1+0x0]

00000000004150c0 <__libc_csu_init@@Base>:
  4150c0:	endbr64 
  4150c4:	push   r15
  4150c6:	lea    r15,[rip+0x9d33]        # 41ee00 <flatcc_builder_padding_base@@Base+0x4cc0>
  4150cd:	push   r14
  4150cf:	mov    r14,rdx
  4150d2:	push   r13
  4150d4:	mov    r13,rsi
  4150d7:	push   r12
  4150d9:	mov    r12d,edi
  4150dc:	push   rbp
  4150dd:	lea    rbp,[rip+0x9d24]        # 41ee08 <flatcc_builder_padding_base@@Base+0x4cc8>
  4150e4:	push   rbx
  4150e5:	sub    rbp,r15
  4150e8:	sub    rsp,0x8
  4150ec:	call   404000 <free@plt-0x30>
  4150f1:	sar    rbp,0x3
  4150f5:	je     415116 <__libc_csu_init@@Base+0x56>
  4150f7:	xor    ebx,ebx
  4150f9:	nop    DWORD PTR [rax+0x0]
  415100:	mov    rdx,r14
  415103:	mov    rsi,r13
  415106:	mov    edi,r12d
  415109:	call   QWORD PTR [r15+rbx*8]
  41510d:	add    rbx,0x1
  415111:	cmp    rbp,rbx
  415114:	jne    415100 <__libc_csu_init@@Base+0x40>
  415116:	add    rsp,0x8
  41511a:	pop    rbx
  41511b:	pop    rbp
  41511c:	pop    r12
  41511e:	pop    r13
  415120:	pop    r14
  415122:	pop    r15
  415124:	ret    
  415125:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

0000000000415130 <__libc_csu_fini@@Base>:
  415130:	endbr64 
  415134:	ret    

Disassembly of section .fini:

0000000000415138 <.fini>:
  415138:	endbr64 
  41513c:	sub    rsp,0x8
  415140:	add    rsp,0x8
  415144:	ret    
