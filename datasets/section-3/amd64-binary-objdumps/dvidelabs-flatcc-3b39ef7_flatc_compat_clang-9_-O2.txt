
../repos/dvidelabs-flatcc-3b39ef7/test/flatc_compat/flatc_compat:     file format elf64-x86-64


Disassembly of section .init:

0000000000402000 <.init>:
  402000:	endbr64 
  402004:	sub    rsp,0x8
  402008:	mov    rax,QWORD PTR [rip+0x5fe1]        # 407ff0 <__gmon_start__>
  40200f:	test   rax,rax
  402012:	je     402016 <free@plt-0x1a>
  402014:	call   rax
  402016:	add    rsp,0x8
  40201a:	ret    

Disassembly of section .plt:

0000000000402020 <free@plt-0x10>:
  402020:	push   QWORD PTR [rip+0x5fe2]        # 408008 <_IO_stdin_used@@Base+0x3008>
  402026:	jmp    QWORD PTR [rip+0x5fe4]        # 408010 <_IO_stdin_used@@Base+0x3010>
  40202c:	nop    DWORD PTR [rax+0x0]

0000000000402030 <free@plt>:
  402030:	jmp    QWORD PTR [rip+0x5fe2]        # 408018 <free@GLIBC_2.2.5>
  402036:	push   0x0
  40203b:	jmp    402020 <free@plt-0x10>

0000000000402040 <strncpy@plt>:
  402040:	jmp    QWORD PTR [rip+0x5fda]        # 408020 <strncpy@GLIBC_2.2.5>
  402046:	push   0x1
  40204b:	jmp    402020 <free@plt-0x10>

0000000000402050 <puts@plt>:
  402050:	jmp    QWORD PTR [rip+0x5fd2]        # 408028 <puts@GLIBC_2.2.5>
  402056:	push   0x2
  40205b:	jmp    402020 <free@plt-0x10>

0000000000402060 <fread_unlocked@plt>:
  402060:	jmp    QWORD PTR [rip+0x5fca]        # 408030 <fread_unlocked@GLIBC_2.2.5>
  402066:	push   0x3
  40206b:	jmp    402020 <free@plt-0x10>

0000000000402070 <fclose@plt>:
  402070:	jmp    QWORD PTR [rip+0x5fc2]        # 408038 <fclose@GLIBC_2.2.5>
  402076:	push   0x4
  40207b:	jmp    402020 <free@plt-0x10>

0000000000402080 <printf@plt>:
  402080:	jmp    QWORD PTR [rip+0x5fba]        # 408040 <printf@GLIBC_2.2.5>
  402086:	push   0x5
  40208b:	jmp    402020 <free@plt-0x10>

0000000000402090 <rewind@plt>:
  402090:	jmp    QWORD PTR [rip+0x5fb2]        # 408048 <rewind@GLIBC_2.2.5>
  402096:	push   0x6
  40209b:	jmp    402020 <free@plt-0x10>

00000000004020a0 <__assert_fail@plt>:
  4020a0:	jmp    QWORD PTR [rip+0x5faa]        # 408050 <__assert_fail@GLIBC_2.2.5>
  4020a6:	push   0x7
  4020ab:	jmp    402020 <free@plt-0x10>

00000000004020b0 <fputc@plt>:
  4020b0:	jmp    QWORD PTR [rip+0x5fa2]        # 408058 <fputc@GLIBC_2.2.5>
  4020b6:	push   0x8
  4020bb:	jmp    402020 <free@plt-0x10>

00000000004020c0 <strcmp@plt>:
  4020c0:	jmp    QWORD PTR [rip+0x5f9a]        # 408060 <strcmp@GLIBC_2.2.5>
  4020c6:	push   0x9
  4020cb:	jmp    402020 <free@plt-0x10>

00000000004020d0 <fprintf@plt>:
  4020d0:	jmp    QWORD PTR [rip+0x5f92]        # 408068 <fprintf@GLIBC_2.2.5>
  4020d6:	push   0xa
  4020db:	jmp    402020 <free@plt-0x10>

00000000004020e0 <ftell@plt>:
  4020e0:	jmp    QWORD PTR [rip+0x5f8a]        # 408070 <ftell@GLIBC_2.2.5>
  4020e6:	push   0xb
  4020eb:	jmp    402020 <free@plt-0x10>

00000000004020f0 <memcpy@plt>:
  4020f0:	jmp    QWORD PTR [rip+0x5f82]        # 408078 <memcpy@GLIBC_2.14>
  4020f6:	push   0xc
  4020fb:	jmp    402020 <free@plt-0x10>

0000000000402100 <malloc@plt>:
  402100:	jmp    QWORD PTR [rip+0x5f7a]        # 408080 <malloc@GLIBC_2.2.5>
  402106:	push   0xd
  40210b:	jmp    402020 <free@plt-0x10>

0000000000402110 <fseek@plt>:
  402110:	jmp    QWORD PTR [rip+0x5f72]        # 408088 <fseek@GLIBC_2.2.5>
  402116:	push   0xe
  40211b:	jmp    402020 <free@plt-0x10>

0000000000402120 <fopen@plt>:
  402120:	jmp    QWORD PTR [rip+0x5f6a]        # 408090 <fopen@GLIBC_2.2.5>
  402126:	push   0xf
  40212b:	jmp    402020 <free@plt-0x10>

0000000000402130 <exit@plt>:
  402130:	jmp    QWORD PTR [rip+0x5f62]        # 408098 <exit@GLIBC_2.2.5>
  402136:	push   0x10
  40213b:	jmp    402020 <free@plt-0x10>

0000000000402140 <fwrite@plt>:
  402140:	jmp    QWORD PTR [rip+0x5f5a]        # 4080a0 <fwrite@GLIBC_2.2.5>
  402146:	push   0x11
  40214b:	jmp    402020 <free@plt-0x10>

0000000000402150 <posix_memalign@plt>:
  402150:	jmp    QWORD PTR [rip+0x5f52]        # 4080a8 <posix_memalign@GLIBC_2.2.5>
  402156:	push   0x12
  40215b:	jmp    402020 <free@plt-0x10>

Disassembly of section .text:

0000000000402160 <_start@@Base>:
  402160:	endbr64 
  402164:	xor    ebp,ebp
  402166:	mov    r9,rdx
  402169:	pop    rsi
  40216a:	mov    rdx,rsp
  40216d:	and    rsp,0xfffffffffffffff0
  402171:	push   rax
  402172:	push   rsp
  402173:	mov    r8,0x404b20
  40217a:	mov    rcx,0x404ab0
  402181:	mov    rdi,0x402850
  402188:	call   QWORD PTR [rip+0x5e5a]        # 407fe8 <__libc_start_main@GLIBC_2.2.5>
  40218e:	hlt    
  40218f:	nop
  402190:	endbr64 
  402194:	ret    
  402195:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40219f:	nop
  4021a0:	mov    eax,0x4080c8
  4021a5:	cmp    rax,0x4080c8
  4021ab:	je     4021c0 <_start@@Base+0x60>
  4021ad:	mov    eax,0x0
  4021b2:	test   rax,rax
  4021b5:	je     4021c0 <_start@@Base+0x60>
  4021b7:	mov    edi,0x4080c8
  4021bc:	jmp    rax
  4021be:	xchg   ax,ax
  4021c0:	ret    
  4021c1:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4021cc:	nop    DWORD PTR [rax+0x0]
  4021d0:	mov    esi,0x4080c8
  4021d5:	sub    rsi,0x4080c8
  4021dc:	mov    rax,rsi
  4021df:	shr    rsi,0x3f
  4021e3:	sar    rax,0x3
  4021e7:	add    rsi,rax
  4021ea:	sar    rsi,1
  4021ed:	je     402200 <_start@@Base+0xa0>
  4021ef:	mov    eax,0x0
  4021f4:	test   rax,rax
  4021f7:	je     402200 <_start@@Base+0xa0>
  4021f9:	mov    edi,0x4080c8
  4021fe:	jmp    rax
  402200:	ret    
  402201:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40220c:	nop    DWORD PTR [rax+0x0]
  402210:	endbr64 
  402214:	cmp    BYTE PTR [rip+0x5ead],0x0        # 4080c8 <__bss_start@@Base>
  40221b:	jne    402230 <_start@@Base+0xd0>
  40221d:	push   rbp
  40221e:	mov    rbp,rsp
  402221:	call   4021a0 <_start@@Base+0x40>
  402226:	mov    BYTE PTR [rip+0x5e9b],0x1        # 4080c8 <__bss_start@@Base>
  40222d:	pop    rbp
  40222e:	ret    
  40222f:	nop
  402230:	ret    
  402231:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40223c:	nop    DWORD PTR [rax+0x0]
  402240:	endbr64 
  402244:	jmp    4021d0 <_start@@Base+0x70>
  402246:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000402250 <verify_monster@@Base>:
  402250:	push   rbp
  402251:	push   r15
  402253:	push   r14
  402255:	push   rbx
  402256:	push   rax
  402257:	test   rdi,rdi
  40225a:	je     4022b4 <verify_monster@@Base+0x64>
  40225c:	cmp    DWORD PTR [rdi+0x4],0x534e4f4d
  402263:	jne    4022b4 <verify_monster@@Base+0x64>
  402265:	mov    eax,DWORD PTR [rdi]
  402267:	lea    r14,[rdi+rax*1]
  40226b:	movsxd rbx,DWORD PTR [rdi+rax*1]
  40226f:	mov    rax,r14
  402272:	sub    rax,rbx
  402275:	movzx  ebp,WORD PTR [rax]
  402278:	cmp    bp,0x9
  40227c:	jbe    4022bd <verify_monster@@Base+0x6d>
  40227e:	neg    rbx
  402281:	movzx  eax,WORD PTR [r14+rbx*1+0x8]
  402287:	test   rax,rax
  40228a:	je     4022bd <verify_monster@@Base+0x6d>
  40228c:	cmp    WORD PTR [r14+rax*1],0x50
  402292:	jne    4022bd <verify_monster@@Base+0x6d>
  402294:	movzx  eax,WORD PTR [r14+rbx*1+0x4]
  40229a:	test   rax,rax
  40229d:	je     4022d9 <verify_monster@@Base+0x89>
  40229f:	add    rax,r14
  4022a2:	mov    ecx,eax
  4022a4:	sub    ecx,edi
  4022a6:	test   cl,0xf
  4022a9:	je     4022e2 <verify_monster@@Base+0x92>
  4022ab:	lea    rdi,[rip+0x347a]        # 40572c <_IO_stdin_used@@Base+0x72c>
  4022b2:	jmp    4022c4 <verify_monster@@Base+0x74>
  4022b4:	lea    rdi,[rip+0x3212]        # 4054cd <_IO_stdin_used@@Base+0x4cd>
  4022bb:	jmp    4022c4 <verify_monster@@Base+0x74>
  4022bd:	lea    rdi,[rip+0x348f]        # 405753 <_IO_stdin_used@@Base+0x753>
  4022c4:	call   402050 <puts@plt>
  4022c9:	mov    eax,0xffffffff
  4022ce:	add    rsp,0x8
  4022d2:	pop    rbx
  4022d3:	pop    r14
  4022d5:	pop    r15
  4022d7:	pop    rbp
  4022d8:	ret    
  4022d9:	lea    rdi,[rip+0x3203]        # 4054e3 <_IO_stdin_used@@Base+0x4e3>
  4022e0:	jmp    4022c4 <verify_monster@@Base+0x74>
  4022e2:	vmovss xmm0,DWORD PTR [rax]
  4022e6:	vucomiss xmm0,DWORD PTR [rip+0x2d16]        # 405004 <_IO_stdin_used@@Base+0x4>
  4022ee:	jne    4022f2 <verify_monster@@Base+0xa2>
  4022f0:	jnp    4022fb <verify_monster@@Base+0xab>
  4022f2:	lea    rdi,[rip+0x3412]        # 40570b <_IO_stdin_used@@Base+0x70b>
  4022f9:	jmp    4022c4 <verify_monster@@Base+0x74>
  4022fb:	vmovss xmm0,DWORD PTR [rax+0x4]
  402300:	vucomiss xmm0,DWORD PTR [rip+0x2d00]        # 405008 <_IO_stdin_used@@Base+0x8>
  402308:	jne    40230c <verify_monster@@Base+0xbc>
  40230a:	jnp    402315 <verify_monster@@Base+0xc5>
  40230c:	lea    rdi,[rip+0x33d7]        # 4056ea <_IO_stdin_used@@Base+0x6ea>
  402313:	jmp    4022c4 <verify_monster@@Base+0x74>
  402315:	vmovss xmm0,DWORD PTR [rax+0x8]
  40231a:	vucomiss xmm0,DWORD PTR [rip+0x2cea]        # 40500c <_IO_stdin_used@@Base+0xc>
  402322:	jne    402326 <verify_monster@@Base+0xd6>
  402324:	jnp    40232f <verify_monster@@Base+0xdf>
  402326:	lea    rdi,[rip+0x339c]        # 4056c9 <_IO_stdin_used@@Base+0x6c9>
  40232d:	jmp    4022c4 <verify_monster@@Base+0x74>
  40232f:	vmovsd xmm0,QWORD PTR [rax+0x10]
  402334:	vucomisd xmm0,QWORD PTR [rip+0x2cd4]        # 405010 <_IO_stdin_used@@Base+0x10>
  40233c:	jne    402340 <verify_monster@@Base+0xf0>
  40233e:	jnp    40234c <verify_monster@@Base+0xfc>
  402340:	lea    rdi,[rip+0x336e]        # 4056b5 <_IO_stdin_used@@Base+0x6b5>
  402347:	jmp    4022c4 <verify_monster@@Base+0x74>
  40234c:	cmp    BYTE PTR [rax+0x18],0x2
  402350:	jne    4023aa <verify_monster@@Base+0x15a>
  402352:	cmp    WORD PTR [rax+0x1a],0x5
  402357:	jne    4023b6 <verify_monster@@Base+0x166>
  402359:	cmp    BYTE PTR [rax+0x1c],0x6
  40235d:	jne    4023b6 <verify_monster@@Base+0x166>
  40235f:	cmp    bp,0xc
  402363:	jb     402754 <verify_monster@@Base+0x504>
  402369:	movzx  eax,WORD PTR [r14+rbx*1+0xa]
  40236f:	test   rax,rax
  402372:	je     402754 <verify_monster@@Base+0x504>
  402378:	lea    rcx,[r14+rax*1]
  40237c:	mov    eax,DWORD PTR [r14+rax*1]
  402380:	cmp    DWORD PTR [rax+rcx*1],0x9
  402384:	jne    4023c2 <verify_monster@@Base+0x172>
  402386:	lea    rdi,[rax+rcx*1]
  40238a:	add    rdi,0x4
  40238e:	lea    rsi,[rip+0x2ccc]        # 405061 <_IO_stdin_used@@Base+0x61>
  402395:	call   4020c0 <strcmp@plt>
  40239a:	test   eax,eax
  40239c:	je     4023ce <verify_monster@@Base+0x17e>
  40239e:	lea    rdi,[rip+0x3151]        # 4054f6 <_IO_stdin_used@@Base+0x4f6>
  4023a5:	jmp    4022c4 <verify_monster@@Base+0x74>
  4023aa:	lea    rdi,[rip+0x32ef]        # 4056a0 <_IO_stdin_used@@Base+0x6a0>
  4023b1:	jmp    4022c4 <verify_monster@@Base+0x74>
  4023b6:	lea    rdi,[rip+0x32cb]        # 405688 <_IO_stdin_used@@Base+0x688>
  4023bd:	jmp    4022c4 <verify_monster@@Base+0x74>
  4023c2:	lea    rdi,[rip+0x32a4]        # 40566d <_IO_stdin_used@@Base+0x66d>
  4023c9:	jmp    4022c4 <verify_monster@@Base+0x74>
  4023ce:	cmp    bp,0x10
  4023d2:	jb     402484 <verify_monster@@Base+0x234>
  4023d8:	movzx  ecx,WORD PTR [r14+rbx*1+0xe]
  4023de:	test   rcx,rcx
  4023e1:	je     402484 <verify_monster@@Base+0x234>
  4023e7:	lea    rax,[r14+rcx*1]
  4023eb:	mov    ecx,DWORD PTR [r14+rcx*1]
  4023ef:	cmp    DWORD PTR [rcx+rax*1],0x5
  4023f3:	jne    402484 <verify_monster@@Base+0x234>
  4023f9:	xor    esi,esi
  4023fb:	cmp    BYTE PTR [rax+rcx*1+0x4],0x0
  402400:	jne    402490 <verify_monster@@Base+0x240>
  402406:	mov    esi,0x1
  40240b:	cmp    BYTE PTR [rax+rcx*1+0x5],0x1
  402410:	jne    402490 <verify_monster@@Base+0x240>
  402412:	mov    esi,0x2
  402417:	cmp    BYTE PTR [rax+rcx*1+0x6],0x2
  40241c:	jne    402490 <verify_monster@@Base+0x240>
  40241e:	mov    esi,0x3
  402423:	cmp    BYTE PTR [rax+rcx*1+0x7],0x3
  402428:	jne    402490 <verify_monster@@Base+0x240>
  40242a:	mov    esi,0x4
  40242f:	cmp    BYTE PTR [rax+rcx*1+0x8],0x4
  402434:	jne    402490 <verify_monster@@Base+0x240>
  402436:	cmp    bp,0x19
  40243a:	jbe    4024a3 <verify_monster@@Base+0x253>
  40243c:	movzx  eax,WORD PTR [r14+rbx*1+0x18]
  402442:	test   rax,rax
  402445:	je     4024a3 <verify_monster@@Base+0x253>
  402447:	lea    rcx,[r14+rax*1]
  40244b:	mov    eax,DWORD PTR [r14+rax*1]
  40244f:	cmp    DWORD PTR [rax+rcx*1],0x2
  402453:	jne    4024af <verify_monster@@Base+0x25f>
  402455:	lea    r15,[rax+rcx*1]
  402459:	add    r15,0x4
  40245d:	mov    eax,DWORD PTR [r15]
  402460:	lea    rdi,[r15+rax*1]
  402464:	add    rdi,0x4
  402468:	lea    rsi,[rip+0x2c19]        # 405088 <_IO_stdin_used@@Base+0x88>
  40246f:	call   4020c0 <strcmp@plt>
  402474:	test   eax,eax
  402476:	je     4024bb <verify_monster@@Base+0x26b>
  402478:	lea    rdi,[rip+0x3187]        # 405606 <_IO_stdin_used@@Base+0x606>
  40247f:	jmp    4022c4 <verify_monster@@Base+0x74>
  402484:	lea    rdi,[rip+0x31c7]        # 405652 <_IO_stdin_used@@Base+0x652>
  40248b:	jmp    4022c4 <verify_monster@@Base+0x74>
  402490:	lea    rdi,[rip+0x2bd4]        # 40506b <_IO_stdin_used@@Base+0x6b>
  402497:	xor    eax,eax
  402499:	call   402080 <printf@plt>
  40249e:	jmp    4022c9 <verify_monster@@Base+0x79>
  4024a3:	lea    rdi,[rip+0x3060]        # 40550a <_IO_stdin_used@@Base+0x50a>
  4024aa:	jmp    4022c4 <verify_monster@@Base+0x74>
  4024af:	lea    rdi,[rip+0x3174]        # 40562a <_IO_stdin_used@@Base+0x62a>
  4024b6:	jmp    4022c4 <verify_monster@@Base+0x74>
  4024bb:	mov    eax,DWORD PTR [r15+0x4]
  4024bf:	lea    rdi,[r15+rax*1]
  4024c3:	add    rdi,0x8
  4024c7:	lea    rsi,[rip+0x2bc0]        # 40508e <_IO_stdin_used@@Base+0x8e>
  4024ce:	call   4020c0 <strcmp@plt>
  4024d3:	test   eax,eax
  4024d5:	je     4024e3 <verify_monster@@Base+0x293>
  4024d7:	lea    rdi,[rip+0x3103]        # 4055e1 <_IO_stdin_used@@Base+0x5e1>
  4024de:	jmp    4022c4 <verify_monster@@Base+0x74>
  4024e3:	movzx  eax,WORD PTR [r14+rbx*1+0x12]
  4024e9:	test   rax,rax
  4024ec:	je     40255c <verify_monster@@Base+0x30c>
  4024ee:	cmp    BYTE PTR [r14+rax*1],0x1
  4024f3:	jne    40255c <verify_monster@@Base+0x30c>
  4024f5:	movzx  eax,WORD PTR [r14+rbx*1+0x14]
  4024fb:	test   rax,rax
  4024fe:	je     402568 <verify_monster@@Base+0x318>
  402500:	lea    rcx,[r14+rax*1]
  402504:	mov    edx,DWORD PTR [r14+rax*1]
  402508:	lea    rax,[rcx+rdx*1]
  40250c:	movsxd rcx,DWORD PTR [rdx+rcx*1]
  402510:	mov    rdx,rax
  402513:	sub    rdx,rcx
  402516:	cmp    WORD PTR [rdx],0xb
  40251a:	jbe    402754 <verify_monster@@Base+0x504>
  402520:	neg    rcx
  402523:	movzx  ecx,WORD PTR [rax+rcx*1+0xa]
  402528:	test   rcx,rcx
  40252b:	je     402754 <verify_monster@@Base+0x504>
  402531:	lea    rdx,[rax+rcx*1]
  402535:	mov    eax,DWORD PTR [rax+rcx*1]
  402538:	lea    rdi,[rax+rdx*1]
  40253c:	add    rdi,0x4
  402540:	lea    rsi,[rip+0x3085]        # 4055cc <_IO_stdin_used@@Base+0x5cc>
  402547:	call   4020c0 <strcmp@plt>
  40254c:	test   eax,eax
  40254e:	je     402574 <verify_monster@@Base+0x324>
  402550:	lea    rdi,[rip+0x3062]        # 4055b9 <_IO_stdin_used@@Base+0x5b9>
  402557:	jmp    4022c4 <verify_monster@@Base+0x74>
  40255c:	lea    rdi,[rip+0x306e]        # 4055d1 <_IO_stdin_used@@Base+0x5d1>
  402563:	jmp    4022c4 <verify_monster@@Base+0x74>
  402568:	lea    rdi,[rip+0x2fb7]        # 405526 <_IO_stdin_used@@Base+0x526>
  40256f:	jmp    4022c4 <verify_monster@@Base+0x74>
  402574:	movzx  ecx,WORD PTR [r14+rbx*1+0x16]
  40257a:	test   rcx,rcx
  40257d:	je     402718 <verify_monster@@Base+0x4c8>
  402583:	lea    rax,[r14+rcx*1]
  402587:	mov    ecx,DWORD PTR [r14+rcx*1]
  40258b:	cmp    DWORD PTR [rcx+rax*1],0x2
  40258f:	jne    402718 <verify_monster@@Base+0x4c8>
  402595:	cmp    WORD PTR [rax+rcx*1+0x4],0xa
  40259b:	jne    402724 <verify_monster@@Base+0x4d4>
  4025a1:	cmp    BYTE PTR [rax+rcx*1+0x6],0x14
  4025a6:	jne    402730 <verify_monster@@Base+0x4e0>
  4025ac:	cmp    WORD PTR [rax+rcx*1+0x8],0x1e
  4025b2:	jne    40273c <verify_monster@@Base+0x4ec>
  4025b8:	cmp    BYTE PTR [rax+rcx*1+0xa],0x28
  4025bd:	jne    402748 <verify_monster@@Base+0x4f8>
  4025c3:	cmp    bp,0x26
  4025c7:	jb     402773 <verify_monster@@Base+0x523>
  4025cd:	movzx  eax,WORD PTR [r14+rbx*1+0x24]
  4025d3:	test   rax,rax
  4025d6:	je     402773 <verify_monster@@Base+0x523>
  4025dc:	cmp    DWORD PTR [r14+rax*1],0xdd79c941
  4025e4:	jne    402773 <verify_monster@@Base+0x523>
  4025ea:	cmp    bp,0x28
  4025ee:	jb     402792 <verify_monster@@Base+0x542>
  4025f4:	movzx  eax,WORD PTR [r14+rbx*1+0x26]
  4025fa:	test   rax,rax
  4025fd:	je     402792 <verify_monster@@Base+0x542>
  402603:	cmp    DWORD PTR [r14+rax*1],0xdd79c941
  40260b:	jne    402792 <verify_monster@@Base+0x542>
  402611:	cmp    bp,0x2a
  402615:	jb     4027b1 <verify_monster@@Base+0x561>
  40261b:	movzx  ecx,WORD PTR [r14+rbx*1+0x28]
  402621:	test   rcx,rcx
  402624:	je     4027b1 <verify_monster@@Base+0x561>
  40262a:	movabs rax,0x6e0f80cdf27b9181
  402634:	cmp    QWORD PTR [r14+rcx*1],rax
  402638:	jne    4027b1 <verify_monster@@Base+0x561>
  40263e:	cmp    bp,0x2c
  402642:	jb     4027d0 <verify_monster@@Base+0x580>
  402648:	movzx  ecx,WORD PTR [r14+rbx*1+0x2a]
  40264e:	test   rcx,rcx
  402651:	je     4027d0 <verify_monster@@Base+0x580>
  402657:	cmp    QWORD PTR [r14+rcx*1],rax
  40265b:	jne    4027d0 <verify_monster@@Base+0x580>
  402661:	cmp    bp,0x2e
  402665:	jb     4027ef <verify_monster@@Base+0x59f>
  40266b:	movzx  eax,WORD PTR [r14+rbx*1+0x2c]
  402671:	test   rax,rax
  402674:	je     4027ef <verify_monster@@Base+0x59f>
  40267a:	cmp    DWORD PTR [r14+rax*1],0x8e81a471
  402682:	jne    4027ef <verify_monster@@Base+0x59f>
  402688:	cmp    bp,0x30
  40268c:	jb     40280e <verify_monster@@Base+0x5be>
  402692:	movzx  eax,WORD PTR [r14+rbx*1+0x2e]
  402698:	test   rax,rax
  40269b:	je     40280e <verify_monster@@Base+0x5be>
  4026a1:	cmp    DWORD PTR [r14+rax*1],0x8e81a471
  4026a9:	jne    40280e <verify_monster@@Base+0x5be>
  4026af:	cmp    bp,0x32
  4026b3:	jb     40282d <verify_monster@@Base+0x5dd>
  4026b9:	movzx  eax,WORD PTR [r14+rbx*1+0x30]
  4026bf:	test   rax,rax
  4026c2:	je     40282d <verify_monster@@Base+0x5dd>
  4026c8:	movabs rcx,0x43f948dcc767ddf1
  4026d2:	cmp    QWORD PTR [r14+rax*1],rcx
  4026d6:	jne    40282d <verify_monster@@Base+0x5dd>
  4026dc:	cmp    bp,0x34
  4026e0:	jb     4026f9 <verify_monster@@Base+0x4a9>
  4026e2:	movzx  edx,WORD PTR [r14+rbx*1+0x32]
  4026e8:	test   rdx,rdx
  4026eb:	je     4026f9 <verify_monster@@Base+0x4a9>
  4026ed:	xor    eax,eax
  4026ef:	cmp    QWORD PTR [r14+rdx*1],rcx
  4026f3:	je     4022ce <verify_monster@@Base+0x7e>
  4026f9:	lea    rdi,[rip+0x2baf]        # 4052af <_IO_stdin_used@@Base+0x2af>
  402700:	lea    rsi,[rip+0x29c2]        # 4050c9 <_IO_stdin_used@@Base+0xc9>
  402707:	lea    rcx,[rip+0x2a26]        # 405134 <_IO_stdin_used@@Base+0x134>
  40270e:	mov    edx,0x9b
  402713:	call   4020a0 <__assert_fail@plt>
  402718:	lea    rdi,[rip+0x2e76]        # 405595 <_IO_stdin_used@@Base+0x595>
  40271f:	jmp    4022c4 <verify_monster@@Base+0x74>
  402724:	lea    rdi,[rip+0x2e54]        # 40557f <_IO_stdin_used@@Base+0x57f>
  40272b:	jmp    4022c4 <verify_monster@@Base+0x74>
  402730:	lea    rdi,[rip+0x2e32]        # 405569 <_IO_stdin_used@@Base+0x569>
  402737:	jmp    4022c4 <verify_monster@@Base+0x74>
  40273c:	lea    rdi,[rip+0x2e10]        # 405553 <_IO_stdin_used@@Base+0x553>
  402743:	jmp    4022c4 <verify_monster@@Base+0x74>
  402748:	lea    rdi,[rip+0x2dee]        # 40553d <_IO_stdin_used@@Base+0x53d>
  40274f:	jmp    4022c4 <verify_monster@@Base+0x74>
  402754:	lea    rdi,[rip+0x2d31]        # 40548c <_IO_stdin_used@@Base+0x48c>
  40275b:	lea    rsi,[rip+0x2c5d]        # 4053bf <_IO_stdin_used@@Base+0x3bf>
  402762:	lea    rcx,[rip+0x2cd2]        # 40543b <_IO_stdin_used@@Base+0x43b>
  402769:	mov    edx,0x2bb
  40276e:	call   4020a0 <__assert_fail@plt>
  402773:	lea    rdi,[rip+0x291a]        # 405094 <_IO_stdin_used@@Base+0x94>
  40277a:	lea    rsi,[rip+0x2948]        # 4050c9 <_IO_stdin_used@@Base+0xc9>
  402781:	lea    rcx,[rip+0x29ac]        # 405134 <_IO_stdin_used@@Base+0x134>
  402788:	mov    edx,0x94
  40278d:	call   4020a0 <__assert_fail@plt>
  402792:	lea    rdi,[rip+0x29b6]        # 40514f <_IO_stdin_used@@Base+0x14f>
  402799:	lea    rsi,[rip+0x2929]        # 4050c9 <_IO_stdin_used@@Base+0xc9>
  4027a0:	lea    rcx,[rip+0x298d]        # 405134 <_IO_stdin_used@@Base+0x134>
  4027a7:	mov    edx,0x95
  4027ac:	call   4020a0 <__assert_fail@plt>
  4027b1:	lea    rdi,[rip+0x29cc]        # 405184 <_IO_stdin_used@@Base+0x184>
  4027b8:	lea    rsi,[rip+0x290a]        # 4050c9 <_IO_stdin_used@@Base+0xc9>
  4027bf:	lea    rcx,[rip+0x296e]        # 405134 <_IO_stdin_used@@Base+0x134>
  4027c6:	mov    edx,0x96
  4027cb:	call   4020a0 <__assert_fail@plt>
  4027d0:	lea    rdi,[rip+0x29ec]        # 4051c3 <_IO_stdin_used@@Base+0x1c3>
  4027d7:	lea    rsi,[rip+0x28eb]        # 4050c9 <_IO_stdin_used@@Base+0xc9>
  4027de:	lea    rcx,[rip+0x294f]        # 405134 <_IO_stdin_used@@Base+0x134>
  4027e5:	mov    edx,0x97
  4027ea:	call   4020a0 <__assert_fail@plt>
  4027ef:	lea    rdi,[rip+0x2a0c]        # 405202 <_IO_stdin_used@@Base+0x202>
  4027f6:	lea    rsi,[rip+0x28cc]        # 4050c9 <_IO_stdin_used@@Base+0xc9>
  4027fd:	lea    rcx,[rip+0x2930]        # 405134 <_IO_stdin_used@@Base+0x134>
  402804:	mov    edx,0x98
  402809:	call   4020a0 <__assert_fail@plt>
  40280e:	lea    rdi,[rip+0x2a24]        # 405239 <_IO_stdin_used@@Base+0x239>
  402815:	lea    rsi,[rip+0x28ad]        # 4050c9 <_IO_stdin_used@@Base+0xc9>
  40281c:	lea    rcx,[rip+0x2911]        # 405134 <_IO_stdin_used@@Base+0x134>
  402823:	mov    edx,0x99
  402828:	call   4020a0 <__assert_fail@plt>
  40282d:	lea    rdi,[rip+0x2a3b]        # 40526f <_IO_stdin_used@@Base+0x26f>
  402834:	lea    rsi,[rip+0x288e]        # 4050c9 <_IO_stdin_used@@Base+0xc9>
  40283b:	lea    rcx,[rip+0x28f2]        # 405134 <_IO_stdin_used@@Base+0x134>
  402842:	mov    edx,0x9a
  402847:	call   4020a0 <__assert_fail@plt>
  40284c:	nop    DWORD PTR [rax+0x0]

0000000000402850 <main@@Base>:
  402850:	push   rbp
  402851:	push   r15
  402853:	push   r14
  402855:	push   r13
  402857:	push   r12
  402859:	push   rbx
  40285a:	sub    rsp,0x18
  40285e:	lea    eax,[rdi-0x1]
  402861:	cmp    eax,0x2
  402864:	jae    402b68 <main@@Base+0x318>
  40286a:	cmp    edi,0x2
  40286d:	jne    40287f <main@@Base+0x2f>
  40286f:	mov    rdi,QWORD PTR [rsi+0x8]
  402873:	lea    rax,[rip+0x5846]        # 4080c0 <filename@@Base>
  40287a:	mov    QWORD PTR [rax],rdi
  40287d:	jmp    402889 <main@@Base+0x39>
  40287f:	lea    rax,[rip+0x583a]        # 4080c0 <filename@@Base>
  402886:	mov    rdi,QWORD PTR [rax]
  402889:	lea    rsi,[rip+0x2c1d]        # 4054ad <_IO_stdin_used@@Base+0x4ad>
  402890:	call   402120 <fopen@plt>
  402895:	test   rax,rax
  402898:	je     402934 <main@@Base+0xe4>
  40289e:	mov    rbp,rax
  4028a1:	mov    rdi,rax
  4028a4:	xor    esi,esi
  4028a6:	mov    edx,0x2
  4028ab:	call   402110 <fseek@plt>
  4028b0:	mov    rdi,rbp
  4028b3:	call   4020e0 <ftell@plt>
  4028b8:	mov    r13,rax
  4028bb:	cmp    rax,0x400
  4028c1:	ja     40292a <main@@Base+0xda>
  4028c3:	mov    rdi,rbp
  4028c6:	call   402090 <rewind@plt>
  4028cb:	test   r13,r13
  4028ce:	mov    edi,0x1
  4028d3:	cmovne rdi,r13
  4028d7:	call   402100 <malloc@plt>
  4028dc:	test   rax,rax
  4028df:	je     40292a <main@@Base+0xda>
  4028e1:	mov    r15,rax
  4028e4:	xor    ecx,ecx
  4028e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4028f0:	mov    rbx,rcx
  4028f3:	lea    rdi,[r15+rcx*1]
  4028f7:	mov    rdx,r13
  4028fa:	sub    rdx,rcx
  4028fd:	mov    esi,0x1
  402902:	mov    rcx,rbp
  402905:	call   402060 <fread_unlocked@plt>
  40290a:	lea    rcx,[rax+rbx*1]
  40290e:	test   rax,rax
  402911:	jne    4028f0 <main@@Base+0xa0>
  402913:	mov    rdi,rbp
  402916:	call   402070 <fclose@plt>
  40291b:	cmp    r13,rbx
  40291e:	je     40293a <main@@Base+0xea>
  402920:	mov    rdi,r15
  402923:	call   402030 <free@plt>
  402928:	jmp    402937 <main@@Base+0xe7>
  40292a:	mov    rdi,rbp
  40292d:	call   402070 <fclose@plt>
  402932:	jmp    402937 <main@@Base+0xe7>
  402934:	xor    r13d,r13d
  402937:	xor    r15d,r15d
  40293a:	lea    rdx,[r13+0xff]
  402941:	and    rdx,0xffffffffffffff00
  402948:	mov    QWORD PTR [rsp],0x0
  402950:	mov    rdi,rsp
  402953:	mov    esi,0x100
  402958:	call   402150 <posix_memalign@plt>
  40295d:	mov    r14,QWORD PTR [rsp]
  402961:	test   eax,eax
  402963:	je     40297d <main@@Base+0x12d>
  402965:	test   r14,r14
  402968:	je     40297d <main@@Base+0x12d>
  40296a:	mov    rdi,r14
  40296d:	call   402030 <free@plt>
  402972:	mov    QWORD PTR [rsp],0x0
  40297a:	xor    r14d,r14d
  40297d:	mov    rdi,r14
  402980:	mov    rsi,r15
  402983:	mov    rdx,r13
  402986:	call   4020f0 <memcpy@plt>
  40298b:	mov    rdi,r15
  40298e:	call   402030 <free@plt>
  402993:	mov    rax,QWORD PTR [rip+0x565e]        # 407ff8 <stderr@GLIBC_2.2.5>
  40299a:	mov    r12,QWORD PTR [rax]
  40299d:	test   r14,r14
  4029a0:	jne    4029c7 <main@@Base+0x177>
  4029a2:	lea    rax,[rip+0x5717]        # 4080c0 <filename@@Base>
  4029a9:	mov    rdx,QWORD PTR [rax]
  4029ac:	lea    rsi,[rip+0x297c]        # 40532f <_IO_stdin_used@@Base+0x32f>
  4029b3:	mov    rdi,r12
  4029b6:	xor    eax,eax
  4029b8:	call   4020d0 <fprintf@plt>
  4029bd:	mov    ebx,0xffffffff
  4029c2:	jmp    402b18 <main@@Base+0x2c8>
  4029c7:	lea    rsi,[rip+0x2ae2]        # 4054b0 <_IO_stdin_used@@Base+0x4b0>
  4029ce:	lea    rdx,[rip+0x2677]        # 40504c <_IO_stdin_used@@Base+0x4c>
  4029d5:	mov    rdi,r12
  4029d8:	xor    eax,eax
  4029da:	call   4020d0 <fprintf@plt>
  4029df:	test   r13d,r13d
  4029e2:	je     402ab8 <main@@Base+0x268>
  4029e8:	mov    ebp,r13d
  4029eb:	xor    ebx,ebx
  4029ed:	jmp    402a41 <main@@Base+0x1f1>
  4029ef:	nop
  4029f0:	mov    rdi,r12
  4029f3:	lea    rsi,[rip+0x2ac1]        # 4054bb <_IO_stdin_used@@Base+0x4bb>
  4029fa:	mov    edx,ebx
  4029fc:	xor    eax,eax
  4029fe:	call   4020d0 <fprintf@plt>
  402a03:	movzx  edx,BYTE PTR [r14+rbx*1]
  402a08:	mov    rdi,r12
  402a0b:	lea    rsi,[rip+0x2ab1]        # 4054c3 <_IO_stdin_used@@Base+0x4c3>
  402a12:	xor    eax,eax
  402a14:	call   4020d0 <fprintf@plt>
  402a19:	movzx  eax,BYTE PTR [r14+rbx*1]
  402a1e:	lea    ecx,[rax-0x20]
  402a21:	cmp    cl,0x5e
  402a24:	mov    ecx,0x2e
  402a29:	cmova  eax,ecx
  402a2c:	mov    rcx,rsp
  402a2f:	mov    BYTE PTR [r15+rcx*1],al
  402a33:	mov    BYTE PTR [r15+rcx*1+0x1],0x0
  402a39:	inc    rbx
  402a3c:	cmp    rbp,rbx
  402a3f:	je     402a87 <main@@Base+0x237>
  402a41:	mov    r15d,ebx
  402a44:	and    r15d,0xf
  402a48:	test   r15d,r15d
  402a4b:	jne    402a70 <main@@Base+0x220>
  402a4d:	test   rbx,rbx
  402a50:	je     4029f0 <main@@Base+0x1a0>
  402a52:	mov    rdi,r12
  402a55:	lea    rsi,[rip+0x2a59]        # 4054b5 <_IO_stdin_used@@Base+0x4b5>
  402a5c:	mov    rdx,rsp
  402a5f:	xor    eax,eax
  402a61:	call   4020d0 <fprintf@plt>
  402a66:	jmp    4029f0 <main@@Base+0x1a0>
  402a68:	nop    DWORD PTR [rax+rax*1+0x0]
  402a70:	test   bl,0x7
  402a73:	jne    402a03 <main@@Base+0x1b3>
  402a75:	mov    edi,0x20
  402a7a:	mov    rsi,r12
  402a7d:	call   4020b0 <fputc@plt>
  402a82:	jmp    402a03 <main@@Base+0x1b3>
  402a87:	test   r13b,0xf
  402a8b:	je     402ab8 <main@@Base+0x268>
  402a8d:	lea    ebx,[r13+0x1]
  402a91:	lea    r15,[rip+0x2a31]        # 4054c9 <_IO_stdin_used@@Base+0x4c9>
  402a98:	mov    ebp,ebx
  402a9a:	mov    esi,0x3
  402a9f:	mov    edx,0x1
  402aa4:	mov    rdi,r15
  402aa7:	mov    rcx,r12
  402aaa:	call   402140 <fwrite@plt>
  402aaf:	inc    ebp
  402ab1:	test   bl,0xf
  402ab4:	mov    ebx,ebp
  402ab6:	jne    402a9a <main@@Base+0x24a>
  402ab8:	lea    rsi,[rip+0x29f6]        # 4054b5 <_IO_stdin_used@@Base+0x4b5>
  402abf:	mov    rdx,rsp
  402ac2:	mov    rdi,r12
  402ac5:	xor    eax,eax
  402ac7:	call   4020d0 <fprintf@plt>
  402acc:	lea    rdx,[rip+0x2881]        # 405354 <_IO_stdin_used@@Base+0x354>
  402ad3:	lea    rcx,[rip+0xc6]        # 402ba0 <main@@Base+0x350>
  402ada:	mov    rdi,r14
  402add:	mov    rsi,r13
  402ae0:	call   403f80 <flatcc_verify_table_as_root@@Base>
  402ae5:	test   eax,eax
  402ae7:	jne    402b29 <main@@Base+0x2d9>
  402ae9:	lea    rdx,[rip+0x2864]        # 405354 <_IO_stdin_used@@Base+0x354>
  402af0:	lea    rcx,[rip+0xa9]        # 402ba0 <main@@Base+0x350>
  402af7:	mov    rdi,r14
  402afa:	mov    rsi,r13
  402afd:	call   403f80 <flatcc_verify_table_as_root@@Base>
  402b02:	test   eax,eax
  402b04:	jne    402b41 <main@@Base+0x2f1>
  402b06:	mov    rdi,r14
  402b09:	call   402250 <verify_monster@@Base>
  402b0e:	mov    ebx,eax
  402b10:	mov    rdi,r14
  402b13:	call   402030 <free@plt>
  402b18:	mov    eax,ebx
  402b1a:	add    rsp,0x18
  402b1e:	pop    rbx
  402b1f:	pop    r12
  402b21:	pop    r13
  402b23:	pop    r14
  402b25:	pop    r15
  402b27:	pop    rbp
  402b28:	ret    
  402b29:	mov    rax,QWORD PTR [rip+0x54c8]        # 407ff8 <stderr@GLIBC_2.2.5>
  402b30:	mov    rcx,QWORD PTR [rax]
  402b33:	lea    rdi,[rip+0x281f]        # 405359 <_IO_stdin_used@@Base+0x359>
  402b3a:	mov    esi,0x26
  402b3f:	jmp    402b57 <main@@Base+0x307>
  402b41:	mov    rax,QWORD PTR [rip+0x54b0]        # 407ff8 <stderr@GLIBC_2.2.5>
  402b48:	mov    rcx,QWORD PTR [rax]
  402b4b:	lea    rdi,[rip+0x282e]        # 405380 <_IO_stdin_used@@Base+0x380>
  402b52:	mov    esi,0x3e
  402b57:	mov    edx,0x1
  402b5c:	call   402140 <fwrite@plt>
  402b61:	mov    ebx,0xffffffff
  402b66:	jmp    402b10 <main@@Base+0x2c0>
  402b68:	mov    rax,QWORD PTR [rip+0x5489]        # 407ff8 <stderr@GLIBC_2.2.5>
  402b6f:	mov    rcx,QWORD PTR [rax]
  402b72:	lea    rdi,[rip+0x2776]        # 4052ef <_IO_stdin_used@@Base+0x2ef>
  402b79:	mov    esi,0x3f
  402b7e:	mov    edx,0x1
  402b83:	call   402140 <fwrite@plt>
  402b88:	mov    edi,0x1
  402b8d:	call   402130 <exit@plt>
  402b92:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402b9c:	nop    DWORD PTR [rax+0x0]
  402ba0:	push   rbx
  402ba1:	mov    rbx,rdi
  402ba4:	mov    edx,0x20
  402ba9:	xor    esi,esi
  402bab:	mov    ecx,0x10
  402bb0:	call   403470 <flatcc_verify_field@@Base>
  402bb5:	test   eax,eax
  402bb7:	jne    402fc2 <main@@Base+0x772>
  402bbd:	mov    edx,0x2
  402bc2:	mov    rdi,rbx
  402bc5:	mov    esi,0x2
  402bca:	mov    ecx,0x2
  402bcf:	call   403470 <flatcc_verify_field@@Base>
  402bd4:	test   eax,eax
  402bd6:	jne    402fc2 <main@@Base+0x772>
  402bdc:	mov    edx,0x2
  402be1:	mov    rdi,rbx
  402be4:	mov    esi,0x1
  402be9:	mov    ecx,0x2
  402bee:	call   403470 <flatcc_verify_field@@Base>
  402bf3:	test   eax,eax
  402bf5:	jne    402fc2 <main@@Base+0x772>
  402bfb:	mov    rdi,rbx
  402bfe:	mov    esi,0x3
  402c03:	mov    edx,0x1
  402c08:	call   4034d0 <flatcc_verify_string_field@@Base>
  402c0d:	test   eax,eax
  402c0f:	jne    402fc2 <main@@Base+0x772>
  402c15:	mov    edx,0x1
  402c1a:	mov    rdi,rbx
  402c1d:	mov    esi,0x6
  402c22:	mov    ecx,0x1
  402c27:	call   403470 <flatcc_verify_field@@Base>
  402c2c:	test   eax,eax
  402c2e:	jne    402fc2 <main@@Base+0x772>
  402c34:	mov    ecx,0x1
  402c39:	mov    r9d,0xffffffff
  402c3f:	mov    rdi,rbx
  402c42:	mov    esi,0x5
  402c47:	xor    edx,edx
  402c49:	mov    r8d,0x1
  402c4f:	call   403580 <flatcc_verify_vector_field@@Base>
  402c54:	test   eax,eax
  402c56:	jne    402fc2 <main@@Base+0x772>
  402c5c:	lea    rcx,[rip+0xffffffffffffff3d]        # 402ba0 <main@@Base+0x350>
  402c63:	mov    rdi,rbx
  402c66:	mov    esi,0xb
  402c6b:	xor    edx,edx
  402c6d:	call   4038f0 <flatcc_verify_table_vector_field@@Base>
  402c72:	test   eax,eax
  402c74:	jne    402fc2 <main@@Base+0x772>
  402c7a:	mov    rdi,rbx
  402c7d:	mov    esi,0xa
  402c82:	xor    edx,edx
  402c84:	call   403650 <flatcc_verify_string_vector_field@@Base>
  402c89:	test   eax,eax
  402c8b:	jne    402fc2 <main@@Base+0x772>
  402c91:	mov    rdi,rbx
  402c94:	mov    esi,0x1c
  402c99:	xor    edx,edx
  402c9b:	call   403650 <flatcc_verify_string_vector_field@@Base>
  402ca0:	test   eax,eax
  402ca2:	jne    402fc2 <main@@Base+0x772>
  402ca8:	mov    ecx,0x1
  402cad:	mov    r9d,0xffffffff
  402cb3:	mov    rdi,rbx
  402cb6:	mov    esi,0x18
  402cbb:	xor    edx,edx
  402cbd:	mov    r8d,0x1
  402cc3:	call   403580 <flatcc_verify_vector_field@@Base>
  402cc8:	test   eax,eax
  402cca:	jne    402fc2 <main@@Base+0x772>
  402cd0:	mov    ecx,0x8
  402cd5:	mov    r9d,0x1fffffff
  402cdb:	mov    rdi,rbx
  402cde:	mov    esi,0x1d
  402ce3:	xor    edx,edx
  402ce5:	mov    r8d,0x4
  402ceb:	call   403580 <flatcc_verify_vector_field@@Base>
  402cf0:	test   eax,eax
  402cf2:	jne    402fc2 <main@@Base+0x772>
  402cf8:	lea    rcx,[rip+0xfffffffffffffea1]        # 402ba0 <main@@Base+0x350>
  402cff:	mov    rdi,rbx
  402d02:	mov    esi,0xc
  402d07:	xor    edx,edx
  402d09:	call   4037b0 <flatcc_verify_table_field@@Base>
  402d0e:	test   eax,eax
  402d10:	jne    402fc2 <main@@Base+0x772>
  402d16:	lea    rcx,[rip+0x2c3]        # 402fe0 <main@@Base+0x790>
  402d1d:	mov    rdi,rbx
  402d20:	mov    esi,0x8
  402d25:	xor    edx,edx
  402d27:	call   404660 <flatcc_verify_union_field@@Base>
  402d2c:	test   eax,eax
  402d2e:	jne    402fc2 <main@@Base+0x772>
  402d34:	mov    ecx,0x4
  402d39:	mov    r9d,0x3fffffff
  402d3f:	mov    rdi,rbx
  402d42:	mov    esi,0x9
  402d47:	xor    edx,edx
  402d49:	mov    r8d,0x2
  402d4f:	call   403580 <flatcc_verify_vector_field@@Base>
  402d54:	test   eax,eax
  402d56:	jne    402fc2 <main@@Base+0x772>
  402d5c:	mov    ecx,0x4
  402d61:	mov    r9d,0x3fffffff
  402d67:	mov    rdi,rbx
  402d6a:	mov    esi,0x1f
  402d6f:	xor    edx,edx
  402d71:	mov    r8d,0x2
  402d77:	call   403580 <flatcc_verify_vector_field@@Base>
  402d7c:	test   eax,eax
  402d7e:	jne    402fc2 <main@@Base+0x772>
  402d84:	lea    r9,[rip+0xfffffffffffffe15]        # 402ba0 <main@@Base+0x350>
  402d8b:	mov    rdi,rbx
  402d8e:	mov    esi,0xd
  402d93:	xor    edx,edx
  402d95:	xor    ecx,ecx
  402d97:	mov    r8d,0x1
  402d9d:	call   404380 <flatcc_verify_table_as_nested_root@@Base>
  402da2:	test   eax,eax
  402da4:	jne    402fc2 <main@@Base+0x772>
  402daa:	lea    rcx,[rip+0x24f]        # 403000 <main@@Base+0x7b0>
  402db1:	mov    rdi,rbx
  402db4:	mov    esi,0xe
  402db9:	xor    edx,edx
  402dbb:	call   4037b0 <flatcc_verify_table_field@@Base>
  402dc0:	test   eax,eax
  402dc2:	jne    402fc2 <main@@Base+0x772>
  402dc8:	mov    edx,0x1
  402dcd:	mov    rdi,rbx
  402dd0:	mov    esi,0xf
  402dd5:	mov    ecx,0x1
  402dda:	call   403470 <flatcc_verify_field@@Base>
  402ddf:	test   eax,eax
  402de1:	jne    402fc2 <main@@Base+0x772>
  402de7:	mov    edx,0x4
  402dec:	mov    rdi,rbx
  402def:	mov    esi,0x10
  402df4:	mov    ecx,0x4
  402df9:	call   403470 <flatcc_verify_field@@Base>
  402dfe:	test   eax,eax
  402e00:	jne    402fc2 <main@@Base+0x772>
  402e06:	mov    edx,0x4
  402e0b:	mov    rdi,rbx
  402e0e:	mov    esi,0x11
  402e13:	mov    ecx,0x4
  402e18:	call   403470 <flatcc_verify_field@@Base>
  402e1d:	test   eax,eax
  402e1f:	jne    402fc2 <main@@Base+0x772>
  402e25:	mov    edx,0x8
  402e2a:	mov    rdi,rbx
  402e2d:	mov    esi,0x12
  402e32:	mov    ecx,0x8
  402e37:	call   403470 <flatcc_verify_field@@Base>
  402e3c:	test   eax,eax
  402e3e:	jne    402fc2 <main@@Base+0x772>
  402e44:	mov    edx,0x8
  402e49:	mov    rdi,rbx
  402e4c:	mov    esi,0x13
  402e51:	mov    ecx,0x8
  402e56:	call   403470 <flatcc_verify_field@@Base>
  402e5b:	test   eax,eax
  402e5d:	jne    402fc2 <main@@Base+0x772>
  402e63:	mov    edx,0x4
  402e68:	mov    rdi,rbx
  402e6b:	mov    esi,0x14
  402e70:	mov    ecx,0x4
  402e75:	call   403470 <flatcc_verify_field@@Base>
  402e7a:	test   eax,eax
  402e7c:	jne    402fc2 <main@@Base+0x772>
  402e82:	mov    edx,0x4
  402e87:	mov    rdi,rbx
  402e8a:	mov    esi,0x15
  402e8f:	mov    ecx,0x4
  402e94:	call   403470 <flatcc_verify_field@@Base>
  402e99:	test   eax,eax
  402e9b:	jne    402fc2 <main@@Base+0x772>
  402ea1:	mov    edx,0x8
  402ea6:	mov    rdi,rbx
  402ea9:	mov    esi,0x16
  402eae:	mov    ecx,0x8
  402eb3:	call   403470 <flatcc_verify_field@@Base>
  402eb8:	test   eax,eax
  402eba:	jne    402fc2 <main@@Base+0x772>
  402ec0:	mov    edx,0x8
  402ec5:	mov    rdi,rbx
  402ec8:	mov    esi,0x17
  402ecd:	mov    ecx,0x8
  402ed2:	call   403470 <flatcc_verify_field@@Base>
  402ed7:	test   eax,eax
  402ed9:	jne    402fc2 <main@@Base+0x772>
  402edf:	mov    edx,0x4
  402ee4:	mov    rdi,rbx
  402ee7:	mov    esi,0x19
  402eec:	mov    ecx,0x4
  402ef1:	call   403470 <flatcc_verify_field@@Base>
  402ef6:	test   eax,eax
  402ef8:	jne    402fc2 <main@@Base+0x772>
  402efe:	mov    edx,0x4
  402f03:	mov    rdi,rbx
  402f06:	mov    esi,0x1a
  402f0b:	mov    ecx,0x4
  402f10:	call   403470 <flatcc_verify_field@@Base>
  402f15:	test   eax,eax
  402f17:	jne    402fc2 <main@@Base+0x772>
  402f1d:	mov    edx,0x4
  402f22:	mov    rdi,rbx
  402f25:	mov    esi,0x1b
  402f2a:	mov    ecx,0x4
  402f2f:	call   403470 <flatcc_verify_field@@Base>
  402f34:	test   eax,eax
  402f36:	jne    402fc2 <main@@Base+0x772>
  402f3c:	mov    ecx,0x1
  402f41:	mov    r9d,0xffffffff
  402f47:	mov    rdi,rbx
  402f4a:	mov    esi,0x1e
  402f4f:	xor    edx,edx
  402f51:	mov    r8d,0x1
  402f57:	call   403580 <flatcc_verify_vector_field@@Base>
  402f5c:	test   eax,eax
  402f5e:	jne    402fc2 <main@@Base+0x772>
  402f60:	mov    ecx,0x8
  402f65:	mov    r9d,0x1fffffff
  402f6b:	mov    rdi,rbx
  402f6e:	mov    esi,0x20
  402f73:	xor    edx,edx
  402f75:	mov    r8d,0x8
  402f7b:	call   403580 <flatcc_verify_vector_field@@Base>
  402f80:	test   eax,eax
  402f82:	jne    402fc2 <main@@Base+0x772>
  402f84:	mov    ecx,0x8
  402f89:	mov    r9d,0x1fffffff
  402f8f:	mov    rdi,rbx
  402f92:	mov    esi,0x21
  402f97:	xor    edx,edx
  402f99:	mov    r8d,0x8
  402f9f:	call   403580 <flatcc_verify_vector_field@@Base>
  402fa4:	test   eax,eax
  402fa6:	jne    402fc2 <main@@Base+0x772>
  402fa8:	lea    rcx,[rip+0xa1]        # 403050 <main@@Base+0x800>
  402faf:	mov    rdi,rbx
  402fb2:	mov    esi,0x22
  402fb7:	xor    edx,edx
  402fb9:	call   4037b0 <flatcc_verify_table_field@@Base>
  402fbe:	test   eax,eax
  402fc0:	je     402fc4 <main@@Base+0x774>
  402fc2:	pop    rbx
  402fc3:	ret    
  402fc4:	lea    rcx,[rip+0x95]        # 403060 <main@@Base+0x810>
  402fcb:	mov    rdi,rbx
  402fce:	mov    esi,0x23
  402fd3:	xor    edx,edx
  402fd5:	pop    rbx
  402fd6:	jmp    4037b0 <flatcc_verify_table_field@@Base>
  402fdb:	nop    DWORD PTR [rax+rax*1+0x0]
  402fe0:	mov    al,BYTE PTR [rdi+0x10]
  402fe3:	dec    al
  402fe5:	cmp    al,0x3
  402fe7:	ja     402ffd <main@@Base+0x7ad>
  402fe9:	movsx  rax,al
  402fed:	lea    rcx,[rip+0x4ccc]        # 407cc0 <_IO_stdin_used@@Base+0x2cc0>
  402ff4:	mov    rsi,QWORD PTR [rcx+rax*8]
  402ff8:	jmp    403bf0 <flatcc_verify_union_table@@Base>
  402ffd:	xor    eax,eax
  402fff:	ret    
  403000:	push   rbx
  403001:	mov    rbx,rdi
  403004:	xor    esi,esi
  403006:	xor    edx,edx
  403008:	call   4034d0 <flatcc_verify_string_field@@Base>
  40300d:	test   eax,eax
  40300f:	jne    40302c <main@@Base+0x7dc>
  403011:	mov    edx,0x8
  403016:	mov    rdi,rbx
  403019:	mov    esi,0x1
  40301e:	mov    ecx,0x8
  403023:	call   403470 <flatcc_verify_field@@Base>
  403028:	test   eax,eax
  40302a:	je     40302e <main@@Base+0x7de>
  40302c:	pop    rbx
  40302d:	ret    
  40302e:	mov    edx,0x2
  403033:	mov    rdi,rbx
  403036:	mov    esi,0x2
  40303b:	mov    ecx,0x2
  403040:	pop    rbx
  403041:	jmp    403470 <flatcc_verify_field@@Base>
  403046:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403050:	xor    eax,eax
  403052:	ret    
  403053:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40305d:	nop    DWORD PTR [rax]
  403060:	push   rbx
  403061:	mov    rbx,rdi
  403064:	mov    ecx,0x1
  403069:	mov    r9d,0xffffffff
  40306f:	mov    esi,0x0
  403074:	xor    edx,edx
  403076:	mov    r8d,0x1
  40307c:	call   403580 <flatcc_verify_vector_field@@Base>
  403081:	test   eax,eax
  403083:	jne    4030a9 <main@@Base+0x859>
  403085:	mov    ecx,0x1
  40308a:	mov    r9d,0xffffffff
  403090:	mov    rdi,rbx
  403093:	mov    esi,0x1
  403098:	xor    edx,edx
  40309a:	mov    r8d,0x1
  4030a0:	call   403580 <flatcc_verify_vector_field@@Base>
  4030a5:	test   eax,eax
  4030a7:	je     4030ab <main@@Base+0x85b>
  4030a9:	pop    rbx
  4030aa:	ret    
  4030ab:	lea    r9,[rip+0xfffffffffffffaee]        # 402ba0 <main@@Base+0x350>
  4030b2:	mov    rdi,rbx
  4030b5:	mov    esi,0x2
  4030ba:	xor    edx,edx
  4030bc:	xor    ecx,ecx
  4030be:	mov    r8d,0x1
  4030c4:	pop    rbx
  4030c5:	jmp    404380 <flatcc_verify_table_as_nested_root@@Base>
  4030ca:	nop    WORD PTR [rax+rax*1+0x0]
  4030d0:	push   rbx
  4030d1:	mov    rbx,rdi
  4030d4:	mov    edx,0x1
  4030d9:	xor    esi,esi
  4030db:	mov    ecx,0x1
  4030e0:	call   403470 <flatcc_verify_field@@Base>
  4030e5:	test   eax,eax
  4030e7:	jne    40311f <main@@Base+0x8cf>
  4030e9:	mov    edx,0x1
  4030ee:	mov    rdi,rbx
  4030f1:	mov    esi,0x1
  4030f6:	mov    ecx,0x1
  4030fb:	call   403470 <flatcc_verify_field@@Base>
  403100:	test   eax,eax
  403102:	jne    40311f <main@@Base+0x8cf>
  403104:	mov    edx,0x1
  403109:	mov    rdi,rbx
  40310c:	mov    esi,0x2
  403111:	mov    ecx,0x1
  403116:	call   403470 <flatcc_verify_field@@Base>
  40311b:	test   eax,eax
  40311d:	je     403121 <main@@Base+0x8d1>
  40311f:	pop    rbx
  403120:	ret    
  403121:	mov    edx,0x1
  403126:	mov    rdi,rbx
  403129:	mov    esi,0x3
  40312e:	mov    ecx,0x1
  403133:	pop    rbx
  403134:	jmp    403470 <flatcc_verify_field@@Base>
  403139:	nop    DWORD PTR [rax+0x0]
  403140:	xor    eax,eax
  403142:	ret    
  403143:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40314d:	nop    DWORD PTR [rax]
  403150:	push   rbx
  403151:	mov    rbx,rdi
  403154:	lea    rcx,[rip+0x45]        # 4031a0 <main@@Base+0x950>
  40315b:	xor    esi,esi
  40315d:	xor    edx,edx
  40315f:	call   4037b0 <flatcc_verify_table_field@@Base>
  403164:	test   eax,eax
  403166:	jne    403182 <main@@Base+0x932>
  403168:	lea    rcx,[rip+0x81]        # 4031f0 <main@@Base+0x9a0>
  40316f:	mov    rdi,rbx
  403172:	mov    esi,0x1
  403177:	xor    edx,edx
  403179:	call   4037b0 <flatcc_verify_table_field@@Base>
  40317e:	test   eax,eax
  403180:	je     403184 <main@@Base+0x934>
  403182:	pop    rbx
  403183:	ret    
  403184:	lea    rcx,[rip+0xfffffffffffffe55]        # 402fe0 <main@@Base+0x790>
  40318b:	mov    rdi,rbx
  40318e:	mov    esi,0x3
  403193:	xor    edx,edx
  403195:	pop    rbx
  403196:	jmp    4047a0 <flatcc_verify_union_vector_field@@Base>
  40319b:	nop    DWORD PTR [rax+rax*1+0x0]
  4031a0:	push   rbx
  4031a1:	mov    rbx,rdi
  4031a4:	lea    rcx,[rip+0xd5]        # 403280 <main@@Base+0xa30>
  4031ab:	xor    esi,esi
  4031ad:	xor    edx,edx
  4031af:	call   4037b0 <flatcc_verify_table_field@@Base>
  4031b4:	test   eax,eax
  4031b6:	jne    4031d2 <main@@Base+0x982>
  4031b8:	lea    rcx,[rip+0x1a1]        # 403360 <main@@Base+0xb10>
  4031bf:	mov    rdi,rbx
  4031c2:	mov    esi,0x1
  4031c7:	xor    edx,edx
  4031c9:	call   4037b0 <flatcc_verify_table_field@@Base>
  4031ce:	test   eax,eax
  4031d0:	je     4031d4 <main@@Base+0x984>
  4031d2:	pop    rbx
  4031d3:	ret    
  4031d4:	lea    rcx,[rip+0x1c5]        # 4033a0 <main@@Base+0xb50>
  4031db:	mov    rdi,rbx
  4031de:	mov    esi,0x2
  4031e3:	xor    edx,edx
  4031e5:	pop    rbx
  4031e6:	jmp    4037b0 <flatcc_verify_table_field@@Base>
  4031eb:	nop    DWORD PTR [rax+rax*1+0x0]
  4031f0:	push   rbx
  4031f1:	mov    rbx,rdi
  4031f4:	lea    rcx,[rip+0x1e5]        # 4033e0 <main@@Base+0xb90>
  4031fb:	mov    esi,0x1
  403200:	xor    edx,edx
  403202:	call   404660 <flatcc_verify_union_field@@Base>
  403207:	test   eax,eax
  403209:	jne    403259 <main@@Base+0xa09>
  40320b:	lea    rcx,[rip+0x1ce]        # 4033e0 <main@@Base+0xb90>
  403212:	mov    rdi,rbx
  403215:	mov    esi,0x3
  40321a:	xor    edx,edx
  40321c:	call   404660 <flatcc_verify_union_field@@Base>
  403221:	test   eax,eax
  403223:	jne    403259 <main@@Base+0xa09>
  403225:	lea    rcx,[rip+0x1b4]        # 4033e0 <main@@Base+0xb90>
  40322c:	mov    rdi,rbx
  40322f:	mov    esi,0x5
  403234:	xor    edx,edx
  403236:	call   404660 <flatcc_verify_union_field@@Base>
  40323b:	test   eax,eax
  40323d:	jne    403259 <main@@Base+0xa09>
  40323f:	lea    rcx,[rip+0x19a]        # 4033e0 <main@@Base+0xb90>
  403246:	mov    rdi,rbx
  403249:	mov    esi,0x7
  40324e:	xor    edx,edx
  403250:	call   404660 <flatcc_verify_union_field@@Base>
  403255:	test   eax,eax
  403257:	je     40325b <main@@Base+0xa0b>
  403259:	pop    rbx
  40325a:	ret    
  40325b:	lea    rcx,[rip+0x17e]        # 4033e0 <main@@Base+0xb90>
  403262:	mov    rdi,rbx
  403265:	mov    esi,0x9
  40326a:	xor    edx,edx
  40326c:	pop    rbx
  40326d:	jmp    4047a0 <flatcc_verify_union_vector_field@@Base>
  403272:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40327c:	nop    DWORD PTR [rax+0x0]
  403280:	push   rbx
  403281:	mov    rbx,rdi
  403284:	xor    esi,esi
  403286:	xor    edx,edx
  403288:	call   4034d0 <flatcc_verify_string_field@@Base>
  40328d:	test   eax,eax
  40328f:	jne    403346 <main@@Base+0xaf6>
  403295:	mov    edx,0x4
  40329a:	mov    rdi,rbx
  40329d:	mov    esi,0x1
  4032a2:	mov    ecx,0x4
  4032a7:	call   403470 <flatcc_verify_field@@Base>
  4032ac:	test   eax,eax
  4032ae:	jne    403346 <main@@Base+0xaf6>
  4032b4:	mov    rdi,rbx
  4032b7:	mov    esi,0x2
  4032bc:	xor    edx,edx
  4032be:	call   4034d0 <flatcc_verify_string_field@@Base>
  4032c3:	test   eax,eax
  4032c5:	jne    403346 <main@@Base+0xaf6>
  4032c7:	mov    edx,0x8
  4032cc:	mov    rdi,rbx
  4032cf:	mov    esi,0x3
  4032d4:	mov    ecx,0x8
  4032d9:	call   403470 <flatcc_verify_field@@Base>
  4032de:	test   eax,eax
  4032e0:	jne    403346 <main@@Base+0xaf6>
  4032e2:	mov    rdi,rbx
  4032e5:	mov    esi,0x4
  4032ea:	xor    edx,edx
  4032ec:	call   4034d0 <flatcc_verify_string_field@@Base>
  4032f1:	test   eax,eax
  4032f3:	jne    403346 <main@@Base+0xaf6>
  4032f5:	mov    edx,0x8
  4032fa:	mov    rdi,rbx
  4032fd:	mov    esi,0x5
  403302:	mov    ecx,0x8
  403307:	call   403470 <flatcc_verify_field@@Base>
  40330c:	test   eax,eax
  40330e:	jne    403346 <main@@Base+0xaf6>
  403310:	mov    edx,0x4
  403315:	mov    rdi,rbx
  403318:	mov    esi,0x6
  40331d:	mov    ecx,0x4
  403322:	call   403470 <flatcc_verify_field@@Base>
  403327:	test   eax,eax
  403329:	jne    403346 <main@@Base+0xaf6>
  40332b:	mov    edx,0x8
  403330:	mov    rdi,rbx
  403333:	mov    esi,0x7
  403338:	mov    ecx,0x8
  40333d:	call   403470 <flatcc_verify_field@@Base>
  403342:	test   eax,eax
  403344:	je     403348 <main@@Base+0xaf8>
  403346:	pop    rbx
  403347:	ret    
  403348:	mov    edx,0x4
  40334d:	mov    rdi,rbx
  403350:	mov    esi,0x8
  403355:	mov    ecx,0x4
  40335a:	pop    rbx
  40335b:	jmp    403470 <flatcc_verify_field@@Base>
  403360:	push   rbx
  403361:	mov    rbx,rdi
  403364:	mov    edx,0x8
  403369:	xor    esi,esi
  40336b:	mov    ecx,0x8
  403370:	call   403470 <flatcc_verify_field@@Base>
  403375:	test   eax,eax
  403377:	je     40337b <main@@Base+0xb2b>
  403379:	pop    rbx
  40337a:	ret    
  40337b:	mov    edx,0x4
  403380:	mov    rdi,rbx
  403383:	mov    esi,0x1
  403388:	mov    ecx,0x4
  40338d:	pop    rbx
  40338e:	jmp    403470 <flatcc_verify_field@@Base>
  403393:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40339d:	nop    DWORD PTR [rax]
  4033a0:	push   rbx
  4033a1:	mov    rbx,rdi
  4033a4:	mov    edx,0x8
  4033a9:	xor    esi,esi
  4033ab:	mov    ecx,0x8
  4033b0:	call   403470 <flatcc_verify_field@@Base>
  4033b5:	test   eax,eax
  4033b7:	je     4033bb <main@@Base+0xb6b>
  4033b9:	pop    rbx
  4033ba:	ret    
  4033bb:	mov    edx,0x4
  4033c0:	mov    rdi,rbx
  4033c3:	mov    esi,0x1
  4033c8:	mov    ecx,0x4
  4033cd:	pop    rbx
  4033ce:	jmp    403470 <flatcc_verify_field@@Base>
  4033d3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4033dd:	nop    DWORD PTR [rax]
  4033e0:	mov    al,BYTE PTR [rdi+0x10]
  4033e3:	inc    al
  4033e5:	cmp    al,0xc
  4033e7:	ja     403410 <main@@Base+0xbc0>
  4033e9:	movzx  eax,al
  4033ec:	lea    rcx,[rip+0x1c25]        # 405018 <_IO_stdin_used@@Base+0x18>
  4033f3:	movsxd rax,DWORD PTR [rcx+rax*4]
  4033f7:	add    rax,rcx
  4033fa:	jmp    rax
  4033fc:	jmp    403d10 <flatcc_verify_union_string@@Base>
  403401:	mov    esi,0x4
  403406:	mov    edx,0x4
  40340b:	jmp    403cd0 <flatcc_verify_union_struct@@Base>
  403410:	xor    eax,eax
  403412:	ret    
  403413:	lea    rsi,[rip+0x16]        # 403430 <main@@Base+0xbe0>
  40341a:	jmp    403bf0 <flatcc_verify_union_table@@Base>
  40341f:	mov    esi,0x2
  403424:	mov    edx,0x2
  403429:	jmp    403cd0 <flatcc_verify_union_struct@@Base>
  40342e:	xchg   ax,ax
  403430:	mov    edx,0x4
  403435:	xor    esi,esi
  403437:	mov    ecx,0x4
  40343c:	jmp    403470 <flatcc_verify_field@@Base>
  403441:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40344b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403450 <flatcc_verify_error_string@@Base>:
  403450:	cmp    edi,0x24
  403453:	ja     403464 <flatcc_verify_error_string@@Base+0x14>
  403455:	movsxd rax,edi
  403458:	lea    rcx,[rip+0x4881]        # 407ce0 <_IO_stdin_used@@Base+0x2ce0>
  40345f:	mov    rax,QWORD PTR [rcx+rax*8]
  403463:	ret    
  403464:	lea    rax,[rip+0x2735]        # 405ba0 <_IO_stdin_used@@Base+0xba0>
  40346b:	ret    
  40346c:	nop    DWORD PTR [rax+0x0]

0000000000403470 <flatcc_verify_field@@Base>:
  403470:	lea    esi,[rsi+rsi*1]
  403473:	add    esi,0x4
  403476:	xor    eax,eax
  403478:	cmp    si,WORD PTR [rdi+0x1e]
  40347c:	jae    4034c1 <flatcc_verify_field@@Base+0x51>
  40347e:	mov    r8,QWORD PTR [rdi+0x10]
  403482:	movzx  esi,si
  403485:	movzx  esi,WORD PTR [r8+rsi*1]
  40348a:	test   esi,esi
  40348c:	je     4034c1 <flatcc_verify_field@@Base+0x51>
  40348e:	add    edx,esi
  403490:	movzx  r8d,WORD PTR [rdi+0x1c]
  403495:	mov    eax,0xd
  40349a:	cmp    edx,r8d
  40349d:	ja     4034c1 <flatcc_verify_field@@Base+0x51>
  40349f:	add    esi,DWORD PTR [rdi]
  4034a1:	mov    edx,DWORD PTR [rdi+0x18]
  4034a4:	add    edx,esi
  4034a6:	movzx  ecx,cx
  4034a9:	dec    ecx
  4034ab:	mov    eax,0x0
  4034b0:	test   edx,ecx
  4034b2:	je     4034c1 <flatcc_verify_field@@Base+0x51>
  4034b4:	add    esi,DWORD PTR [rdi+0x18]
  4034b7:	and    esi,ecx
  4034b9:	mov    eax,0xc
  4034be:	cmove  eax,esi
  4034c1:	ret    
  4034c2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4034cc:	nop    DWORD PTR [rax+0x0]

00000000004034d0 <flatcc_verify_string_field@@Base>:
  4034d0:	lea    eax,[rsi+rsi*1]
  4034d3:	add    eax,0x4
  4034d6:	cmp    ax,WORD PTR [rdi+0x1e]
  4034da:	jae    40350a <flatcc_verify_string_field@@Base+0x3a>
  4034dc:	mov    rcx,QWORD PTR [rdi+0x10]
  4034e0:	movzx  eax,ax
  4034e3:	movzx  esi,WORD PTR [rcx+rax*1]
  4034e7:	test   esi,esi
  4034e9:	je     40350a <flatcc_verify_string_field@@Base+0x3a>
  4034eb:	lea    ecx,[rsi+0x4]
  4034ee:	movzx  edx,WORD PTR [rdi+0x1c]
  4034f2:	mov    eax,0xd
  4034f7:	cmp    ecx,edx
  4034f9:	ja     403509 <flatcc_verify_string_field@@Base+0x39>
  4034fb:	add    esi,DWORD PTR [rdi+0x18]
  4034fe:	mov    eax,0xc
  403503:	test   sil,0x3
  403507:	je     403515 <flatcc_verify_string_field@@Base+0x45>
  403509:	ret    
  40350a:	xor    eax,eax
  40350c:	test   edx,edx
  40350e:	setne  al
  403511:	shl    eax,0x2
  403514:	ret    
  403515:	test   esi,esi
  403517:	je     40356f <flatcc_verify_string_field@@Base+0x9f>
  403519:	mov    rcx,QWORD PTR [rdi]
  40351c:	mov    eax,esi
  40351e:	mov    edx,DWORD PTR [rcx+rax*1]
  403521:	add    edx,esi
  403523:	mov    eax,0x11
  403528:	cmp    edx,esi
  40352a:	jbe    403509 <flatcc_verify_string_field@@Base+0x39>
  40352c:	mov    r8d,DWORD PTR [rdi+0x8]
  403530:	mov    edi,edx
  403532:	lea    rsi,[rdi+0x4]
  403536:	cmp    rsi,r8
  403539:	ja     403509 <flatcc_verify_string_field@@Base+0x39>
  40353b:	mov    esi,edi
  40353d:	and    esi,0x3
  403540:	test   rsi,rsi
  403543:	jne    403509 <flatcc_verify_string_field@@Base+0x39>
  403545:	mov    edi,DWORD PTR [rcx+rdi*1]
  403548:	add    edx,0x4
  40354b:	sub    r8d,edx
  40354e:	lea    esi,[rdi+0x1]
  403551:	mov    eax,0x8
  403556:	cmp    r8d,esi
  403559:	jb     403509 <flatcc_verify_string_field@@Base+0x39>
  40355b:	mov    eax,edx
  40355d:	add    rcx,rax
  403560:	xor    edx,edx
  403562:	cmp    BYTE PTR [rdi+rcx*1],0x0
  403566:	mov    eax,0x7
  40356b:	cmove  eax,edx
  40356e:	ret    
  40356f:	xor    eax,eax
  403571:	ret    
  403572:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40357c:	nop    DWORD PTR [rax+0x0]

0000000000403580 <flatcc_verify_vector_field@@Base>:
  403580:	push   rbx
  403581:	lea    eax,[rsi+rsi*1]
  403584:	add    eax,0x4
  403587:	cmp    ax,WORD PTR [rdi+0x1e]
  40358b:	jae    4035be <flatcc_verify_vector_field@@Base+0x3e>
  40358d:	mov    rsi,QWORD PTR [rdi+0x10]
  403591:	movzx  eax,ax
  403594:	movzx  esi,WORD PTR [rsi+rax*1]
  403598:	test   esi,esi
  40359a:	je     4035be <flatcc_verify_vector_field@@Base+0x3e>
  40359c:	lea    r10d,[rsi+0x4]
  4035a0:	movzx  edx,WORD PTR [rdi+0x1c]
  4035a4:	mov    eax,0xd
  4035a9:	cmp    r10d,edx
  4035ac:	ja     4035bc <flatcc_verify_vector_field@@Base+0x3c>
  4035ae:	add    esi,DWORD PTR [rdi+0x18]
  4035b1:	mov    eax,0xc
  4035b6:	test   sil,0x3
  4035ba:	je     4035ca <flatcc_verify_vector_field@@Base+0x4a>
  4035bc:	pop    rbx
  4035bd:	ret    
  4035be:	xor    eax,eax
  4035c0:	test   edx,edx
  4035c2:	setne  al
  4035c5:	shl    eax,0x2
  4035c8:	pop    rbx
  4035c9:	ret    
  4035ca:	test   esi,esi
  4035cc:	je     403642 <flatcc_verify_vector_field@@Base+0xc2>
  4035ce:	mov    r10,QWORD PTR [rdi]
  4035d1:	mov    eax,esi
  4035d3:	mov    r11d,DWORD PTR [r10+rax*1]
  4035d7:	add    r11d,esi
  4035da:	cmp    r8w,0x4
  4035df:	mov    edx,0x4
  4035e4:	cmova  edx,r8d
  4035e8:	mov    eax,0x10
  4035ed:	cmp    r11d,esi
  4035f0:	jbe    4035bc <flatcc_verify_vector_field@@Base+0x3c>
  4035f2:	mov    r8d,DWORD PTR [rdi+0x8]
  4035f6:	mov    edi,r11d
  4035f9:	lea    rsi,[rdi+0x4]
  4035fd:	cmp    rsi,r8
  403600:	ja     4035bc <flatcc_verify_vector_field@@Base+0x3c>
  403602:	movzx  edx,dx
  403605:	movabs rbx,0x1ffffffff
  40360f:	add    rbx,rdx
  403612:	or     rbx,0x3
  403616:	test   rsi,rbx
  403619:	jne    4035bc <flatcc_verify_vector_field@@Base+0x3c>
  40361b:	mov    edx,DWORD PTR [r10+rdi*1]
  40361f:	mov    eax,0x19
  403624:	cmp    edx,r9d
  403627:	ja     4035bc <flatcc_verify_vector_field@@Base+0x3c>
  403629:	sub    r8d,r11d
  40362c:	add    r8d,0xfffffffc
  403630:	imul   edx,ecx
  403633:	xor    ecx,ecx
  403635:	cmp    r8d,edx
  403638:	mov    eax,0x1a
  40363d:	cmovae eax,ecx
  403640:	pop    rbx
  403641:	ret    
  403642:	xor    eax,eax
  403644:	pop    rbx
  403645:	ret    
  403646:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000403650 <flatcc_verify_string_vector_field@@Base>:
  403650:	push   r14
  403652:	push   rbx
  403653:	lea    eax,[rsi+rsi*1]
  403656:	add    eax,0x4
  403659:	cmp    ax,WORD PTR [rdi+0x1e]
  40365d:	jae    403789 <flatcc_verify_string_vector_field@@Base+0x139>
  403663:	mov    rcx,QWORD PTR [rdi+0x10]
  403667:	movzx  eax,ax
  40366a:	movzx  esi,WORD PTR [rcx+rax*1]
  40366e:	test   esi,esi
  403670:	je     403789 <flatcc_verify_string_vector_field@@Base+0x139>
  403676:	lea    ecx,[rsi+0x4]
  403679:	movzx  edx,WORD PTR [rdi+0x1c]
  40367d:	mov    eax,0xd
  403682:	cmp    ecx,edx
  403684:	ja     403793 <flatcc_verify_string_vector_field@@Base+0x143>
  40368a:	mov    edx,DWORD PTR [rdi+0x18]
  40368d:	lea    ebx,[rdx+rsi*1]
  403690:	mov    eax,0xc
  403695:	test   bl,0x3
  403698:	jne    403793 <flatcc_verify_string_vector_field@@Base+0x143>
  40369e:	test   ebx,ebx
  4036a0:	je     403785 <flatcc_verify_string_vector_field@@Base+0x135>
  4036a6:	mov    r10,QWORD PTR [rdi]
  4036a9:	mov    eax,ebx
  4036ab:	mov    r14d,DWORD PTR [r10+rax*1]
  4036af:	lea    ecx,[r14+rbx*1]
  4036b3:	mov    eax,0x10
  4036b8:	cmp    ecx,ebx
  4036ba:	jbe    403793 <flatcc_verify_string_vector_field@@Base+0x143>
  4036c0:	mov    r8d,DWORD PTR [rdi+0x8]
  4036c4:	mov    edi,ecx
  4036c6:	lea    rbx,[rdi+0x4]
  4036ca:	cmp    rbx,r8
  4036cd:	ja     403793 <flatcc_verify_string_vector_field@@Base+0x143>
  4036d3:	and    ebx,0x3
  4036d6:	test   rbx,rbx
  4036d9:	jne    403793 <flatcc_verify_string_vector_field@@Base+0x143>
  4036df:	mov    r9d,DWORD PTR [r10+rdi*1]
  4036e3:	mov    eax,0x19
  4036e8:	cmp    r9d,0x3fffffff
  4036ef:	ja     403793 <flatcc_verify_string_vector_field@@Base+0x143>
  4036f5:	mov    edi,r8d
  4036f8:	sub    edi,ecx
  4036fa:	add    edi,0xfffffffc
  4036fd:	lea    ecx,[r9*4+0x0]
  403705:	mov    eax,0x1a
  40370a:	cmp    edi,ecx
  40370c:	jb     403793 <flatcc_verify_string_vector_field@@Base+0x143>
  403712:	test   r9d,r9d
  403715:	je     403785 <flatcc_verify_string_vector_field@@Base+0x135>
  403717:	lea    eax,[r14+rdx*1]
  40371b:	lea    edi,[rsi+rax*1]
  40371e:	add    edi,0x4
  403721:	mov    r11d,r8d
  403724:	sub    r11d,r14d
  403727:	sub    r11d,edx
  40372a:	sub    r11d,esi
  40372d:	add    r11d,0xfffffff8
  403731:	mov    eax,edi
  403733:	mov    ecx,DWORD PTR [r10+rax*1]
  403737:	lea    edx,[rdi+rcx*1]
  40373a:	mov    eax,0x11
  40373f:	cmp    edx,edi
  403741:	jbe    403793 <flatcc_verify_string_vector_field@@Base+0x143>
  403743:	mov    edx,edx
  403745:	lea    rsi,[rdx+0x4]
  403749:	cmp    rsi,r8
  40374c:	ja     403793 <flatcc_verify_string_vector_field@@Base+0x143>
  40374e:	mov    esi,edx
  403750:	and    esi,0x3
  403753:	test   rsi,rsi
  403756:	jne    403793 <flatcc_verify_string_vector_field@@Base+0x143>
  403758:	mov    eax,DWORD PTR [r10+rdx*1]
  40375c:	mov    edx,r11d
  40375f:	sub    edx,ecx
  403761:	lea    esi,[rax+0x1]
  403764:	cmp    edx,esi
  403766:	jb     403797 <flatcc_verify_string_vector_field@@Base+0x147>
  403768:	lea    ecx,[rdi+rcx*1]
  40376b:	add    ecx,0x4
  40376e:	mov    ecx,ecx
  403770:	add    rcx,r10
  403773:	cmp    BYTE PTR [rax+rcx*1],0x0
  403777:	jne    40379e <flatcc_verify_string_vector_field@@Base+0x14e>
  403779:	add    edi,0x4
  40377c:	add    r11d,0xfffffffc
  403780:	dec    r9d
  403783:	jne    403731 <flatcc_verify_string_vector_field@@Base+0xe1>
  403785:	xor    eax,eax
  403787:	jmp    403793 <flatcc_verify_string_vector_field@@Base+0x143>
  403789:	xor    eax,eax
  40378b:	test   edx,edx
  40378d:	setne  al
  403790:	shl    eax,0x2
  403793:	pop    rbx
  403794:	pop    r14
  403796:	ret    
  403797:	mov    eax,0x8
  40379c:	jmp    403793 <flatcc_verify_string_vector_field@@Base+0x143>
  40379e:	mov    eax,0x7
  4037a3:	jmp    403793 <flatcc_verify_string_vector_field@@Base+0x143>
  4037a5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4037af:	nop

00000000004037b0 <flatcc_verify_table_field@@Base>:
  4037b0:	sub    rsp,0x28
  4037b4:	lea    eax,[rsi+rsi*1]
  4037b7:	add    eax,0x4
  4037ba:	cmp    ax,WORD PTR [rdi+0x1e]
  4037be:	jae    4037f4 <flatcc_verify_table_field@@Base+0x44>
  4037c0:	mov    rsi,QWORD PTR [rdi+0x10]
  4037c4:	movzx  eax,ax
  4037c7:	movzx  esi,WORD PTR [rsi+rax*1]
  4037cb:	test   esi,esi
  4037cd:	je     4037f4 <flatcc_verify_table_field@@Base+0x44>
  4037cf:	lea    r8d,[rsi+0x4]
  4037d3:	movzx  edx,WORD PTR [rdi+0x1c]
  4037d7:	mov    eax,0xd
  4037dc:	cmp    r8d,edx
  4037df:	ja     4037ef <flatcc_verify_table_field@@Base+0x3f>
  4037e1:	add    esi,DWORD PTR [rdi+0x18]
  4037e4:	mov    eax,0xc
  4037e9:	test   sil,0x3
  4037ed:	je     403803 <flatcc_verify_table_field@@Base+0x53>
  4037ef:	add    rsp,0x28
  4037f3:	ret    
  4037f4:	xor    eax,eax
  4037f6:	test   edx,edx
  4037f8:	setne  al
  4037fb:	shl    eax,0x2
  4037fe:	add    rsp,0x28
  403802:	ret    
  403803:	test   esi,esi
  403805:	je     4038df <flatcc_verify_table_field@@Base+0x12f>
  40380b:	mov    r9,QWORD PTR [rdi]
  40380e:	mov    r8d,DWORD PTR [rdi+0x8]
  403812:	mov    eax,esi
  403814:	mov    edx,DWORD PTR [r9+rax*1]
  403818:	mov    eax,DWORD PTR [rdi+0xc]
  40381b:	dec    eax
  40381d:	mov    DWORD PTR [rsp+0x14],eax
  403821:	je     4038e6 <flatcc_verify_table_field@@Base+0x136>
  403827:	add    edx,esi
  403829:	mov    eax,0xf
  40382e:	cmp    edx,esi
  403830:	jbe    4037ef <flatcc_verify_table_field@@Base+0x3f>
  403832:	mov    esi,edx
  403834:	lea    rdi,[rsi+0x4]
  403838:	cmp    rdi,r8
  40383b:	ja     4037ef <flatcc_verify_table_field@@Base+0x3f>
  40383d:	mov    edi,esi
  40383f:	and    edi,0x3
  403842:	test   rdi,rdi
  403845:	jne    4037ef <flatcc_verify_table_field@@Base+0x3f>
  403847:	mov    DWORD PTR [rsp+0x20],edx
  40384b:	mov    edi,edx
  40384d:	sub    edi,DWORD PTR [r9+rsi*1]
  403851:	mov    eax,0x1d
  403856:	test   edi,0x80000001
  40385c:	jne    4037ef <flatcc_verify_table_field@@Base+0x3f>
  40385e:	mov    r10d,edi
  403861:	lea    r11,[r10+0x2]
  403865:	mov    eax,0x1b
  40386a:	cmp    r11,r8
  40386d:	ja     4037ef <flatcc_verify_table_field@@Base+0x3f>
  40386f:	movzx  esi,WORD PTR [r9+r10*1]
  403874:	mov    WORD PTR [rsp+0x26],si
  403879:	mov    eax,0x1e
  40387e:	test   sil,0x1
  403882:	jne    4037ef <flatcc_verify_table_field@@Base+0x3f>
  403888:	add    edi,esi
  40388a:	cmp    edi,r8d
  40388d:	ja     4037ef <flatcc_verify_table_field@@Base+0x3f>
  403893:	mov    eax,0x1c
  403898:	cmp    si,0x4
  40389c:	jb     4037ef <flatcc_verify_table_field@@Base+0x3f>
  4038a2:	mov    eax,r11d
  4038a5:	movzx  esi,WORD PTR [r9+rax*1]
  4038aa:	mov    WORD PTR [rsp+0x24],si
  4038af:	mov    edi,r8d
  4038b2:	sub    edi,edx
  4038b4:	mov    eax,0x14
  4038b9:	cmp    edi,esi
  4038bb:	jb     4037ef <flatcc_verify_table_field@@Base+0x3f>
  4038c1:	add    r10,r9
  4038c4:	mov    QWORD PTR [rsp+0x18],r10
  4038c9:	mov    QWORD PTR [rsp+0x8],r9
  4038ce:	mov    DWORD PTR [rsp+0x10],r8d
  4038d3:	lea    rdi,[rsp+0x8]
  4038d8:	call   rcx
  4038da:	add    rsp,0x28
  4038de:	ret    
  4038df:	xor    eax,eax
  4038e1:	add    rsp,0x28
  4038e5:	ret    
  4038e6:	mov    eax,0x3
  4038eb:	add    rsp,0x28
  4038ef:	ret    

00000000004038f0 <flatcc_verify_table_vector_field@@Base>:
  4038f0:	push   rbp
  4038f1:	push   r15
  4038f3:	push   r14
  4038f5:	push   r13
  4038f7:	push   r12
  4038f9:	push   rbx
  4038fa:	sub    rsp,0x28
  4038fe:	lea    eax,[rsi+rsi*1]
  403901:	add    eax,0x4
  403904:	cmp    ax,WORD PTR [rdi+0x1e]
  403908:	jae    403ae0 <flatcc_verify_table_vector_field@@Base+0x1f0>
  40390e:	mov    rbx,rcx
  403911:	mov    rcx,QWORD PTR [rdi+0x10]
  403915:	movzx  eax,ax
  403918:	movzx  ecx,WORD PTR [rcx+rax*1]
  40391c:	test   ecx,ecx
  40391e:	je     403ae0 <flatcc_verify_table_vector_field@@Base+0x1f0>
  403924:	lea    edx,[rcx+0x4]
  403927:	movzx  esi,WORD PTR [rdi+0x1c]
  40392b:	mov    eax,0xd
  403930:	cmp    edx,esi
  403932:	ja     403aea <flatcc_verify_table_vector_field@@Base+0x1fa>
  403938:	mov    edx,DWORD PTR [rdi+0x18]
  40393b:	lea    esi,[rdx+rcx*1]
  40393e:	mov    eax,0xc
  403943:	test   sil,0x3
  403947:	jne    403aea <flatcc_verify_table_vector_field@@Base+0x1fa>
  40394d:	test   esi,esi
  40394f:	je     403adc <flatcc_verify_table_vector_field@@Base+0x1ec>
  403955:	mov    r13d,DWORD PTR [rdi+0xc]
  403959:	test   r13d,r13d
  40395c:	jle    403af9 <flatcc_verify_table_vector_field@@Base+0x209>
  403962:	mov    r15,QWORD PTR [rdi]
  403965:	mov    eax,esi
  403967:	mov    r8d,DWORD PTR [r15+rax*1]
  40396b:	lea    ebp,[r8+rsi*1]
  40396f:	mov    eax,0x10
  403974:	cmp    ebp,esi
  403976:	jbe    403aea <flatcc_verify_table_vector_field@@Base+0x1fa>
  40397c:	mov    r9d,DWORD PTR [rdi+0x8]
  403980:	mov    esi,ebp
  403982:	lea    rdi,[rsi+0x4]
  403986:	cmp    rdi,r9
  403989:	ja     403aea <flatcc_verify_table_vector_field@@Base+0x1fa>
  40398f:	and    edi,0x3
  403992:	test   rdi,rdi
  403995:	jne    403aea <flatcc_verify_table_vector_field@@Base+0x1fa>
  40399b:	mov    r12d,DWORD PTR [r15+rsi*1]
  40399f:	mov    eax,0x19
  4039a4:	cmp    r12d,0x3fffffff
  4039ab:	ja     403aea <flatcc_verify_table_vector_field@@Base+0x1fa>
  4039b1:	mov    esi,r9d
  4039b4:	sub    esi,ebp
  4039b6:	add    esi,0xfffffffc
  4039b9:	lea    edi,[r12*4+0x0]
  4039c1:	mov    eax,0x1a
  4039c6:	cmp    esi,edi
  4039c8:	jb     403aea <flatcc_verify_table_vector_field@@Base+0x1fa>
  4039ce:	test   r12d,r12d
  4039d1:	je     403adc <flatcc_verify_table_vector_field@@Base+0x1ec>
  4039d7:	add    r13d,0xfffffffe
  4039db:	lea    eax,[r8+rdx*1]
  4039df:	lea    r14d,[rcx+rax*1]
  4039e3:	add    r14d,0x4
  4039e7:	mov    r11d,r9d
  4039ea:	sub    r11d,r8d
  4039ed:	sub    r11d,edx
  4039f0:	sub    r11d,ecx
  4039f3:	add    r11d,0xfffffffc
  4039f7:	mov    QWORD PTR [rsp+0x20],r9
  4039fc:	mov    r14d,r14d
  4039ff:	mov    ecx,DWORD PTR [r15+r14*1]
  403a03:	mov    DWORD PTR [rsp+0xc],r13d
  403a08:	test   r13d,r13d
  403a0b:	je     403bb9 <flatcc_verify_table_vector_field@@Base+0x2c9>
  403a11:	lea    eax,[r14+rcx*1]
  403a15:	cmp    eax,r14d
  403a18:	jbe    403b00 <flatcc_verify_table_vector_field@@Base+0x210>
  403a1e:	mov    edx,eax
  403a20:	lea    rsi,[rdx+0x4]
  403a24:	cmp    rsi,r9
  403a27:	ja     403b00 <flatcc_verify_table_vector_field@@Base+0x210>
  403a2d:	mov    esi,edx
  403a2f:	and    esi,0x3
  403a32:	test   rsi,rsi
  403a35:	jne    403b00 <flatcc_verify_table_vector_field@@Base+0x210>
  403a3b:	mov    DWORD PTR [rsp+0x18],eax
  403a3f:	mov    edx,DWORD PTR [r15+rdx*1]
  403a43:	mov    eax,ecx
  403a45:	sub    eax,edx
  403a47:	add    eax,r14d
  403a4a:	test   eax,0x80000001
  403a4f:	jne    403b00 <flatcc_verify_table_vector_field@@Base+0x210>
  403a55:	mov    eax,eax
  403a57:	lea    rsi,[rax+0x2]
  403a5b:	cmp    rsi,r9
  403a5e:	ja     403b00 <flatcc_verify_table_vector_field@@Base+0x210>
  403a64:	movzx  ebp,WORD PTR [r15+rax*1]
  403a69:	mov    WORD PTR [rsp+0x1e],bp
  403a6e:	cmp    ebp,0x4
  403a71:	jb     403b00 <flatcc_verify_table_vector_field@@Base+0x210>
  403a77:	mov    edi,ebp
  403a79:	and    edi,0x1
  403a7c:	test   di,di
  403a7f:	jne    403b00 <flatcc_verify_table_vector_field@@Base+0x210>
  403a81:	add    ebp,ecx
  403a83:	sub    ebp,edx
  403a85:	add    ebp,r14d
  403a88:	cmp    ebp,r9d
  403a8b:	ja     403b00 <flatcc_verify_table_vector_field@@Base+0x210>
  403a8d:	mov    edx,esi
  403a8f:	movzx  edx,WORD PTR [r15+rdx*1]
  403a94:	mov    WORD PTR [rsp+0x1c],dx
  403a99:	mov    esi,r11d
  403a9c:	sub    esi,ecx
  403a9e:	cmp    esi,edx
  403aa0:	jb     403b00 <flatcc_verify_table_vector_field@@Base+0x210>
  403aa2:	mov    ebp,r11d
  403aa5:	add    rax,r15
  403aa8:	mov    QWORD PTR [rsp+0x10],rax
  403aad:	mov    QWORD PTR [rsp],r15
  403ab1:	mov    DWORD PTR [rsp+0x8],r9d
  403ab6:	mov    rdi,rsp
  403ab9:	call   rbx
  403abb:	test   eax,eax
  403abd:	jne    403bcb <flatcc_verify_table_vector_field@@Base+0x2db>
  403ac3:	add    r14d,0x4
  403ac7:	mov    r11d,ebp
  403aca:	add    r11d,0xfffffffc
  403ace:	dec    r12d
  403ad1:	mov    r9,QWORD PTR [rsp+0x20]
  403ad6:	jne    4039fc <flatcc_verify_table_vector_field@@Base+0x10c>
  403adc:	xor    eax,eax
  403ade:	jmp    403aea <flatcc_verify_table_vector_field@@Base+0x1fa>
  403ae0:	xor    eax,eax
  403ae2:	test   edx,edx
  403ae4:	setne  al
  403ae7:	shl    eax,0x2
  403aea:	add    rsp,0x28
  403aee:	pop    rbx
  403aef:	pop    r12
  403af1:	pop    r13
  403af3:	pop    r14
  403af5:	pop    r15
  403af7:	pop    rbp
  403af8:	ret    
  403af9:	mov    eax,0x3
  403afe:	jmp    403aea <flatcc_verify_table_vector_field@@Base+0x1fa>
  403b00:	mov    DWORD PTR [rsp+0xc],r13d
  403b05:	add    ecx,r14d
  403b08:	mov    eax,0xf
  403b0d:	cmp    ecx,r14d
  403b10:	jbe    403aea <flatcc_verify_table_vector_field@@Base+0x1fa>
  403b12:	mov    edx,ecx
  403b14:	lea    rsi,[rdx+0x4]
  403b18:	cmp    rsi,r9
  403b1b:	ja     403aea <flatcc_verify_table_vector_field@@Base+0x1fa>
  403b1d:	mov    esi,edx
  403b1f:	and    esi,0x3
  403b22:	test   rsi,rsi
  403b25:	jne    403aea <flatcc_verify_table_vector_field@@Base+0x1fa>
  403b27:	mov    DWORD PTR [rsp+0x18],ecx
  403b2b:	mov    edi,ecx
  403b2d:	sub    edi,DWORD PTR [r15+rdx*1]
  403b31:	mov    eax,0x1d
  403b36:	test   edi,0x80000001
  403b3c:	jne    403aea <flatcc_verify_table_vector_field@@Base+0x1fa>
  403b3e:	mov    edx,edi
  403b40:	lea    rsi,[rdx+0x2]
  403b44:	mov    eax,0x1b
  403b49:	cmp    rsi,r9
  403b4c:	ja     403aea <flatcc_verify_table_vector_field@@Base+0x1fa>
  403b4e:	movzx  ebp,WORD PTR [r15+rdx*1]
  403b53:	mov    WORD PTR [rsp+0x1e],bp
  403b58:	mov    eax,0x1e
  403b5d:	test   bpl,0x1
  403b61:	jne    403aea <flatcc_verify_table_vector_field@@Base+0x1fa>
  403b63:	add    edi,ebp
  403b65:	mov    r8,r9
  403b68:	cmp    edi,r8d
  403b6b:	ja     403aea <flatcc_verify_table_vector_field@@Base+0x1fa>
  403b71:	mov    eax,0x1c
  403b76:	cmp    bp,0x4
  403b7a:	jb     403aea <flatcc_verify_table_vector_field@@Base+0x1fa>
  403b80:	mov    eax,esi
  403b82:	movzx  esi,WORD PTR [r15+rax*1]
  403b87:	mov    WORD PTR [rsp+0x1c],si
  403b8c:	mov    edi,r8d
  403b8f:	sub    edi,ecx
  403b91:	mov    eax,0x14
  403b96:	cmp    edi,esi
  403b98:	jb     403aea <flatcc_verify_table_vector_field@@Base+0x1fa>
  403b9e:	add    rdx,r15
  403ba1:	mov    QWORD PTR [rsp+0x10],rdx
  403ba6:	mov    QWORD PTR [rsp],r15
  403baa:	mov    DWORD PTR [rsp+0x8],r8d
  403baf:	mov    rdi,rsp
  403bb2:	call   rbx
  403bb4:	jmp    403aea <flatcc_verify_table_vector_field@@Base+0x1fa>
  403bb9:	mov    DWORD PTR [rsp+0xc],0x0
  403bc1:	mov    eax,0x3
  403bc6:	jmp    403aea <flatcc_verify_table_vector_field@@Base+0x1fa>
  403bcb:	mov    ecx,DWORD PTR [r15+r14*1]
  403bcf:	add    ecx,r14d
  403bd2:	mov    DWORD PTR [rsp+0xc],r13d
  403bd7:	mov    r9,QWORD PTR [rsp+0x20]
  403bdc:	jmp    403b08 <flatcc_verify_table_vector_field@@Base+0x218>
  403be1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403beb:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403bf0 <flatcc_verify_union_table@@Base>:
  403bf0:	sub    rsp,0x28
  403bf4:	mov    r8,QWORD PTR [rdi]
  403bf7:	mov    r11d,DWORD PTR [rdi+0x8]
  403bfb:	mov    edx,DWORD PTR [rdi+0x14]
  403bfe:	mov    ecx,DWORD PTR [rdi+0x18]
  403c01:	mov    eax,DWORD PTR [rdi+0xc]
  403c04:	dec    eax
  403c06:	mov    DWORD PTR [rsp+0x14],eax
  403c0a:	je     403cc3 <flatcc_verify_union_table@@Base+0xd3>
  403c10:	add    ecx,edx
  403c12:	mov    eax,0xf
  403c17:	cmp    ecx,edx
  403c19:	jbe    403cbe <flatcc_verify_union_table@@Base+0xce>
  403c1f:	mov    edx,ecx
  403c21:	lea    rdi,[rdx+0x4]
  403c25:	cmp    rdi,r11
  403c28:	ja     403cbe <flatcc_verify_union_table@@Base+0xce>
  403c2e:	mov    edi,edx
  403c30:	and    edi,0x3
  403c33:	test   rdi,rdi
  403c36:	jne    403cbe <flatcc_verify_union_table@@Base+0xce>
  403c3c:	mov    DWORD PTR [rsp+0x20],ecx
  403c40:	mov    edi,ecx
  403c42:	sub    edi,DWORD PTR [r8+rdx*1]
  403c46:	mov    eax,0x1d
  403c4b:	test   edi,0x80000001
  403c51:	jne    403cbe <flatcc_verify_union_table@@Base+0xce>
  403c53:	mov    r9d,edi
  403c56:	lea    r10,[r9+0x2]
  403c5a:	mov    eax,0x1b
  403c5f:	cmp    r10,r11
  403c62:	ja     403cbe <flatcc_verify_union_table@@Base+0xce>
  403c64:	movzx  edx,WORD PTR [r8+r9*1]
  403c69:	mov    WORD PTR [rsp+0x26],dx
  403c6e:	mov    eax,0x1e
  403c73:	test   dl,0x1
  403c76:	jne    403cbe <flatcc_verify_union_table@@Base+0xce>
  403c78:	add    edi,edx
  403c7a:	cmp    edi,r11d
  403c7d:	ja     403cbe <flatcc_verify_union_table@@Base+0xce>
  403c7f:	mov    eax,0x1c
  403c84:	cmp    dx,0x4
  403c88:	jb     403cbe <flatcc_verify_union_table@@Base+0xce>
  403c8a:	mov    eax,r10d
  403c8d:	movzx  edx,WORD PTR [r8+rax*1]
  403c92:	mov    WORD PTR [rsp+0x24],dx
  403c97:	mov    edi,r11d
  403c9a:	sub    edi,ecx
  403c9c:	mov    eax,0x14
  403ca1:	cmp    edi,edx
  403ca3:	jb     403cbe <flatcc_verify_union_table@@Base+0xce>
  403ca5:	add    r9,r8
  403ca8:	mov    QWORD PTR [rsp+0x18],r9
  403cad:	mov    QWORD PTR [rsp+0x8],r8
  403cb2:	mov    DWORD PTR [rsp+0x10],r11d
  403cb7:	lea    rdi,[rsp+0x8]
  403cbc:	call   rsi
  403cbe:	add    rsp,0x28
  403cc2:	ret    
  403cc3:	mov    eax,0x3
  403cc8:	add    rsp,0x28
  403ccc:	ret    
  403ccd:	nop    DWORD PTR [rax]

0000000000403cd0 <flatcc_verify_union_struct@@Base>:
  403cd0:	mov    ecx,DWORD PTR [rdi+0x18]
  403cd3:	mov    eax,0x12
  403cd8:	test   ecx,ecx
  403cda:	je     403d0a <flatcc_verify_union_struct@@Base+0x3a>
  403cdc:	mov    r8d,DWORD PTR [rdi+0x8]
  403ce0:	add    ecx,DWORD PTR [rdi+0x14]
  403ce3:	cmp    ecx,r8d
  403ce6:	ja     403d0a <flatcc_verify_union_struct@@Base+0x3a>
  403ce8:	mov    eax,0xa
  403ced:	add    esi,ecx
  403cef:	jb     403d0a <flatcc_verify_union_struct@@Base+0x3a>
  403cf1:	mov    eax,0x9
  403cf6:	cmp    esi,r8d
  403cf9:	ja     403d0a <flatcc_verify_union_struct@@Base+0x3a>
  403cfb:	movzx  eax,dx
  403cfe:	dec    eax
  403d00:	and    ecx,eax
  403d02:	mov    eax,0xb
  403d07:	cmove  eax,ecx
  403d0a:	ret    
  403d0b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403d10 <flatcc_verify_union_string@@Base>:
  403d10:	mov    edx,DWORD PTR [rdi+0x14]
  403d13:	mov    ecx,DWORD PTR [rdi+0x18]
  403d16:	add    ecx,edx
  403d18:	mov    eax,0x11
  403d1d:	cmp    ecx,edx
  403d1f:	jbe    403d66 <flatcc_verify_union_string@@Base+0x56>
  403d21:	mov    r8d,DWORD PTR [rdi+0x8]
  403d25:	mov    esi,ecx
  403d27:	lea    rdx,[rsi+0x4]
  403d2b:	cmp    rdx,r8
  403d2e:	ja     403d66 <flatcc_verify_union_string@@Base+0x56>
  403d30:	mov    edx,esi
  403d32:	and    edx,0x3
  403d35:	test   rdx,rdx
  403d38:	jne    403d66 <flatcc_verify_union_string@@Base+0x56>
  403d3a:	mov    rdi,QWORD PTR [rdi]
  403d3d:	mov    esi,DWORD PTR [rdi+rsi*1]
  403d40:	add    ecx,0x4
  403d43:	sub    r8d,ecx
  403d46:	lea    edx,[rsi+0x1]
  403d49:	mov    eax,0x8
  403d4e:	cmp    r8d,edx
  403d51:	jb     403d66 <flatcc_verify_union_string@@Base+0x56>
  403d53:	mov    eax,ecx
  403d55:	add    rdi,rax
  403d58:	xor    ecx,ecx
  403d5a:	cmp    BYTE PTR [rsi+rdi*1],0x0
  403d5e:	mov    eax,0x7
  403d63:	cmove  eax,ecx
  403d66:	ret    
  403d67:	nop    WORD PTR [rax+rax*1+0x0]

0000000000403d70 <flatcc_verify_buffer_header@@Base>:
  403d70:	push   rbx
  403d71:	sub    rsp,0x10
  403d75:	mov    rbx,rdi
  403d78:	mov    eax,0x5
  403d7d:	test   bl,0x3
  403d80:	jne    403dd8 <flatcc_verify_buffer_header@@Base+0x68>
  403d82:	mov    rcx,rdx
  403d85:	mov    rdx,rsi
  403d88:	shr    rdx,0x3
  403d8c:	mov    eax,0x6
  403d91:	cmp    rdx,0x1ffffffe
  403d98:	ja     403dd8 <flatcc_verify_buffer_header@@Base+0x68>
  403d9a:	mov    eax,0x1
  403d9f:	cmp    rsi,0x8
  403da3:	jb     403dd8 <flatcc_verify_buffer_header@@Base+0x68>
  403da5:	test   rcx,rcx
  403da8:	je     403dd6 <flatcc_verify_buffer_header@@Base+0x66>
  403daa:	mov    DWORD PTR [rsp+0xc],0x0
  403db2:	lea    rdi,[rsp+0xc]
  403db7:	mov    edx,0x4
  403dbc:	mov    rsi,rcx
  403dbf:	call   402040 <strncpy@plt>
  403dc4:	mov    ecx,DWORD PTR [rsp+0xc]
  403dc8:	test   ecx,ecx
  403dca:	je     403dd6 <flatcc_verify_buffer_header@@Base+0x66>
  403dcc:	mov    eax,0x2
  403dd1:	cmp    DWORD PTR [rbx+0x4],ecx
  403dd4:	jne    403dd8 <flatcc_verify_buffer_header@@Base+0x68>
  403dd6:	xor    eax,eax
  403dd8:	add    rsp,0x10
  403ddc:	pop    rbx
  403ddd:	ret    
  403dde:	xchg   ax,ax

0000000000403de0 <flatcc_verify_typed_buffer_header@@Base>:
  403de0:	mov    eax,0x5
  403de5:	test   dil,0x3
  403de9:	jne    403e1b <flatcc_verify_typed_buffer_header@@Base+0x3b>
  403deb:	mov    rcx,rsi
  403dee:	shr    rcx,0x3
  403df2:	mov    eax,0x6
  403df7:	cmp    rcx,0x1ffffffe
  403dfe:	ja     403e1b <flatcc_verify_typed_buffer_header@@Base+0x3b>
  403e00:	mov    eax,0x1
  403e05:	cmp    rsi,0x8
  403e09:	jb     403e1b <flatcc_verify_typed_buffer_header@@Base+0x3b>
  403e0b:	test   edx,edx
  403e0d:	je     403e19 <flatcc_verify_typed_buffer_header@@Base+0x39>
  403e0f:	mov    eax,0x2
  403e14:	cmp    DWORD PTR [rdi+0x4],edx
  403e17:	jne    403e1b <flatcc_verify_typed_buffer_header@@Base+0x3b>
  403e19:	xor    eax,eax
  403e1b:	ret    
  403e1c:	nop    DWORD PTR [rax+0x0]

0000000000403e20 <flatcc_verify_struct_as_root@@Base>:
  403e20:	push   rbp
  403e21:	push   r15
  403e23:	push   r14
  403e25:	push   r12
  403e27:	push   rbx
  403e28:	sub    rsp,0x10
  403e2c:	mov    rbx,rdi
  403e2f:	mov    eax,0x5
  403e34:	test   bl,0x3
  403e37:	jne    403efe <flatcc_verify_struct_as_root@@Base+0xde>
  403e3d:	mov    r15,rcx
  403e40:	mov    rbp,rsi
  403e43:	mov    rcx,rsi
  403e46:	shr    rcx,0x3
  403e4a:	mov    eax,0x6
  403e4f:	cmp    rcx,0x1ffffffe
  403e56:	ja     403efe <flatcc_verify_struct_as_root@@Base+0xde>
  403e5c:	mov    eax,0x1
  403e61:	cmp    rbp,0x8
  403e65:	jb     403efe <flatcc_verify_struct_as_root@@Base+0xde>
  403e6b:	mov    r14d,r8d
  403e6e:	mov    r12,rdx
  403e71:	test   rdx,rdx
  403e74:	je     403ecc <flatcc_verify_struct_as_root@@Base+0xac>
  403e76:	mov    DWORD PTR [rsp+0x8],0x0
  403e7e:	lea    rdi,[rsp+0x8]
  403e83:	mov    edx,0x4
  403e88:	mov    rsi,r12
  403e8b:	call   402040 <strncpy@plt>
  403e90:	mov    eax,DWORD PTR [rsp+0x8]
  403e94:	test   eax,eax
  403e96:	je     403ecc <flatcc_verify_struct_as_root@@Base+0xac>
  403e98:	cmp    DWORD PTR [rbx+0x4],eax
  403e9b:	je     403ecc <flatcc_verify_struct_as_root@@Base+0xac>
  403e9d:	mov    DWORD PTR [rsp+0xc],0x0
  403ea5:	lea    rdi,[rsp+0xc]
  403eaa:	mov    edx,0x4
  403eaf:	mov    rsi,r12
  403eb2:	call   402040 <strncpy@plt>
  403eb7:	mov    ecx,DWORD PTR [rsp+0xc]
  403ebb:	xor    eax,eax
  403ebd:	cmp    DWORD PTR [rbx+0x4],ecx
  403ec0:	setne  al
  403ec3:	add    eax,eax
  403ec5:	test   ecx,ecx
  403ec7:	cmove  eax,ecx
  403eca:	jmp    403efe <flatcc_verify_struct_as_root@@Base+0xde>
  403ecc:	mov    ecx,DWORD PTR [rbx]
  403ece:	lea    edx,[rcx-0x1]
  403ed1:	mov    eax,0x12
  403ed6:	cmp    edx,ebp
  403ed8:	jae    403efe <flatcc_verify_struct_as_root@@Base+0xde>
  403eda:	mov    eax,0xa
  403edf:	add    r15d,ecx
  403ee2:	jb     403efe <flatcc_verify_struct_as_root@@Base+0xde>
  403ee4:	mov    eax,0x9
  403ee9:	cmp    r15d,ebp
  403eec:	ja     403efe <flatcc_verify_struct_as_root@@Base+0xde>
  403eee:	movzx  eax,r14w
  403ef2:	dec    eax
  403ef4:	and    ecx,eax
  403ef6:	mov    eax,0xb
  403efb:	cmove  eax,ecx
  403efe:	add    rsp,0x10
  403f02:	pop    rbx
  403f03:	pop    r12
  403f05:	pop    r14
  403f07:	pop    r15
  403f09:	pop    rbp
  403f0a:	ret    
  403f0b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403f10 <flatcc_verify_struct_as_typed_root@@Base>:
  403f10:	mov    eax,0x5
  403f15:	test   dil,0x3
  403f19:	jne    403f79 <flatcc_verify_struct_as_typed_root@@Base+0x69>
  403f1b:	mov    r9,rsi
  403f1e:	shr    r9,0x3
  403f22:	mov    eax,0x6
  403f27:	cmp    r9,0x1ffffffe
  403f2e:	ja     403f79 <flatcc_verify_struct_as_typed_root@@Base+0x69>
  403f30:	mov    eax,0x1
  403f35:	cmp    rsi,0x8
  403f39:	jb     403f79 <flatcc_verify_struct_as_typed_root@@Base+0x69>
  403f3b:	test   edx,edx
  403f3d:	je     403f49 <flatcc_verify_struct_as_typed_root@@Base+0x39>
  403f3f:	mov    eax,0x2
  403f44:	cmp    DWORD PTR [rdi+0x4],edx
  403f47:	jne    403f79 <flatcc_verify_struct_as_typed_root@@Base+0x69>
  403f49:	mov    edx,DWORD PTR [rdi]
  403f4b:	lea    edi,[rdx-0x1]
  403f4e:	mov    eax,0x12
  403f53:	cmp    edi,esi
  403f55:	jae    403f79 <flatcc_verify_struct_as_typed_root@@Base+0x69>
  403f57:	mov    eax,0xa
  403f5c:	add    ecx,edx
  403f5e:	jb     403f79 <flatcc_verify_struct_as_typed_root@@Base+0x69>
  403f60:	mov    eax,0x9
  403f65:	cmp    ecx,esi
  403f67:	ja     403f79 <flatcc_verify_struct_as_typed_root@@Base+0x69>
  403f69:	movzx  eax,r8w
  403f6d:	dec    eax
  403f6f:	and    edx,eax
  403f71:	mov    eax,0xb
  403f76:	cmove  eax,edx
  403f79:	ret    
  403f7a:	nop    WORD PTR [rax+rax*1+0x0]

0000000000403f80 <flatcc_verify_table_as_root@@Base>:
  403f80:	push   r15
  403f82:	push   r14
  403f84:	push   r13
  403f86:	push   r12
  403f88:	push   rbx
  403f89:	sub    rsp,0x20
  403f8d:	mov    r12,rdi
  403f90:	mov    eax,0x5
  403f95:	test   r12b,0x3
  403f99:	jne    4040dc <flatcc_verify_table_as_root@@Base+0x15c>
  403f9f:	mov    r14,rcx
  403fa2:	mov    r15,rsi
  403fa5:	mov    r13d,r15d
  403fa8:	mov    rcx,r13
  403fab:	shr    rcx,0x3
  403faf:	mov    eax,0x6
  403fb4:	cmp    rcx,0x1ffffffe
  403fbb:	ja     4040dc <flatcc_verify_table_as_root@@Base+0x15c>
  403fc1:	mov    eax,0x1
  403fc6:	cmp    r13,0x8
  403fca:	jb     4040dc <flatcc_verify_table_as_root@@Base+0x15c>
  403fd0:	mov    rbx,rdx
  403fd3:	test   rdx,rdx
  403fd6:	je     40402d <flatcc_verify_table_as_root@@Base+0xad>
  403fd8:	mov    DWORD PTR [rsp],0x0
  403fdf:	mov    rdi,rsp
  403fe2:	mov    edx,0x4
  403fe7:	mov    rsi,rbx
  403fea:	call   402040 <strncpy@plt>
  403fef:	mov    eax,DWORD PTR [rsp]
  403ff2:	test   eax,eax
  403ff4:	je     40402d <flatcc_verify_table_as_root@@Base+0xad>
  403ff6:	cmp    DWORD PTR [r12+0x4],eax
  403ffb:	je     40402d <flatcc_verify_table_as_root@@Base+0xad>
  403ffd:	mov    DWORD PTR [rsp],0x0
  404004:	mov    rdi,rsp
  404007:	mov    edx,0x4
  40400c:	mov    rsi,rbx
  40400f:	call   402040 <strncpy@plt>
  404014:	mov    ecx,DWORD PTR [rsp]
  404017:	xor    eax,eax
  404019:	cmp    DWORD PTR [r12+0x4],ecx
  40401e:	setne  al
  404021:	add    eax,eax
  404023:	test   ecx,ecx
  404025:	cmove  eax,ecx
  404028:	jmp    4040dc <flatcc_verify_table_as_root@@Base+0x15c>
  40402d:	mov    ecx,DWORD PTR [r12]
  404031:	mov    DWORD PTR [rsp+0xc],0x63
  404039:	mov    eax,0xf
  40403e:	test   rcx,rcx
  404041:	je     4040dc <flatcc_verify_table_as_root@@Base+0x15c>
  404047:	lea    rdx,[rcx+0x4]
  40404b:	cmp    rdx,r13
  40404e:	ja     4040dc <flatcc_verify_table_as_root@@Base+0x15c>
  404054:	mov    edx,ecx
  404056:	and    edx,0x3
  404059:	test   rdx,rdx
  40405c:	jne    4040dc <flatcc_verify_table_as_root@@Base+0x15c>
  40405e:	mov    DWORD PTR [rsp+0x18],ecx
  404062:	mov    edi,ecx
  404064:	sub    edi,DWORD PTR [r12+rcx*1]
  404068:	mov    eax,0x1d
  40406d:	test   edi,0x80000001
  404073:	jne    4040dc <flatcc_verify_table_as_root@@Base+0x15c>
  404075:	mov    edx,edi
  404077:	lea    rsi,[rdx+0x2]
  40407b:	mov    eax,0x1b
  404080:	cmp    rsi,r13
  404083:	ja     4040dc <flatcc_verify_table_as_root@@Base+0x15c>
  404085:	movzx  ebx,WORD PTR [r12+rdx*1]
  40408a:	mov    WORD PTR [rsp+0x1e],bx
  40408f:	mov    eax,0x1e
  404094:	test   bl,0x1
  404097:	jne    4040dc <flatcc_verify_table_as_root@@Base+0x15c>
  404099:	add    edi,ebx
  40409b:	cmp    edi,r15d
  40409e:	ja     4040dc <flatcc_verify_table_as_root@@Base+0x15c>
  4040a0:	mov    eax,0x1c
  4040a5:	cmp    bx,0x4
  4040a9:	jb     4040dc <flatcc_verify_table_as_root@@Base+0x15c>
  4040ab:	mov    eax,esi
  4040ad:	movzx  esi,WORD PTR [r12+rax*1]
  4040b2:	mov    WORD PTR [rsp+0x1c],si
  4040b7:	mov    edi,r15d
  4040ba:	sub    edi,ecx
  4040bc:	mov    eax,0x14
  4040c1:	cmp    edi,esi
  4040c3:	jb     4040dc <flatcc_verify_table_as_root@@Base+0x15c>
  4040c5:	add    rdx,r12
  4040c8:	mov    QWORD PTR [rsp+0x10],rdx
  4040cd:	mov    QWORD PTR [rsp],r12
  4040d1:	mov    DWORD PTR [rsp+0x8],r15d
  4040d6:	mov    rdi,rsp
  4040d9:	call   r14
  4040dc:	add    rsp,0x20
  4040e0:	pop    rbx
  4040e1:	pop    r12
  4040e3:	pop    r13
  4040e5:	pop    r14
  4040e7:	pop    r15
  4040e9:	ret    
  4040ea:	nop    WORD PTR [rax+rax*1+0x0]

00000000004040f0 <flatcc_verify_table_as_typed_root@@Base>:
  4040f0:	push   rbx
  4040f1:	sub    rsp,0x20
  4040f5:	mov    eax,0x5
  4040fa:	test   dil,0x3
  4040fe:	jne    4041f9 <flatcc_verify_table_as_typed_root@@Base+0x109>
  404104:	mov    r8d,esi
  404107:	mov    r9,r8
  40410a:	shr    r9,0x3
  40410e:	mov    eax,0x6
  404113:	cmp    r9,0x1ffffffe
  40411a:	ja     4041f9 <flatcc_verify_table_as_typed_root@@Base+0x109>
  404120:	mov    eax,0x1
  404125:	cmp    r8,0x8
  404129:	jb     4041f9 <flatcc_verify_table_as_typed_root@@Base+0x109>
  40412f:	test   edx,edx
  404131:	je     404141 <flatcc_verify_table_as_typed_root@@Base+0x51>
  404133:	mov    eax,0x2
  404138:	cmp    DWORD PTR [rdi+0x4],edx
  40413b:	jne    4041f9 <flatcc_verify_table_as_typed_root@@Base+0x109>
  404141:	mov    ebx,DWORD PTR [rdi]
  404143:	mov    DWORD PTR [rsp+0xc],0x63
  40414b:	mov    eax,0xf
  404150:	test   rbx,rbx
  404153:	je     4041f9 <flatcc_verify_table_as_typed_root@@Base+0x109>
  404159:	lea    rdx,[rbx+0x4]
  40415d:	cmp    rdx,r8
  404160:	ja     4041f9 <flatcc_verify_table_as_typed_root@@Base+0x109>
  404166:	mov    edx,ebx
  404168:	and    edx,0x3
  40416b:	test   rdx,rdx
  40416e:	jne    4041f9 <flatcc_verify_table_as_typed_root@@Base+0x109>
  404174:	mov    DWORD PTR [rsp+0x18],ebx
  404178:	mov    r11d,ebx
  40417b:	sub    r11d,DWORD PTR [rdi+rbx*1]
  40417f:	mov    eax,0x1d
  404184:	test   r11d,0x80000001
  40418b:	jne    4041f9 <flatcc_verify_table_as_typed_root@@Base+0x109>
  40418d:	mov    r9d,r11d
  404190:	lea    r10,[r9+0x2]
  404194:	mov    eax,0x1b
  404199:	cmp    r10,r8
  40419c:	ja     4041f9 <flatcc_verify_table_as_typed_root@@Base+0x109>
  40419e:	movzx  r8d,WORD PTR [rdi+r9*1]
  4041a3:	mov    WORD PTR [rsp+0x1e],r8w
  4041a9:	mov    eax,0x1e
  4041ae:	test   r8b,0x1
  4041b2:	jne    4041f9 <flatcc_verify_table_as_typed_root@@Base+0x109>
  4041b4:	add    r11d,r8d
  4041b7:	cmp    r11d,esi
  4041ba:	ja     4041f9 <flatcc_verify_table_as_typed_root@@Base+0x109>
  4041bc:	mov    eax,0x1c
  4041c1:	cmp    r8w,0x4
  4041c6:	jb     4041f9 <flatcc_verify_table_as_typed_root@@Base+0x109>
  4041c8:	mov    eax,r10d
  4041cb:	movzx  r8d,WORD PTR [rdi+rax*1]
  4041d0:	mov    WORD PTR [rsp+0x1c],r8w
  4041d6:	mov    edx,esi
  4041d8:	sub    edx,ebx
  4041da:	mov    eax,0x14
  4041df:	cmp    edx,r8d
  4041e2:	jb     4041f9 <flatcc_verify_table_as_typed_root@@Base+0x109>
  4041e4:	add    r9,rdi
  4041e7:	mov    QWORD PTR [rsp+0x10],r9
  4041ec:	mov    QWORD PTR [rsp],rdi
  4041f0:	mov    DWORD PTR [rsp+0x8],esi
  4041f4:	mov    rdi,rsp
  4041f7:	call   rcx
  4041f9:	add    rsp,0x20
  4041fd:	pop    rbx
  4041fe:	ret    
  4041ff:	nop

0000000000404200 <flatcc_verify_struct_as_nested_root@@Base>:
  404200:	push   r15
  404202:	push   r14
  404204:	push   rbx
  404205:	lea    esi,[rsi+rsi*1]
  404208:	add    esi,0x4
  40420b:	movzx  ebx,WORD PTR [rdi+0x1e]
  40420f:	cmp    si,bx
  404212:	jae    40427c <flatcc_verify_struct_as_nested_root@@Base+0x7c>
  404214:	mov    r10,QWORD PTR [rdi+0x10]
  404218:	movzx  r11d,si
  40421c:	movzx  eax,WORD PTR [r10+r11*1]
  404221:	test   eax,eax
  404223:	je     40427c <flatcc_verify_struct_as_nested_root@@Base+0x7c>
  404225:	lea    esi,[rax+0x4]
  404228:	movzx  ebx,WORD PTR [rdi+0x1c]
  40422c:	cmp    esi,ebx
  40422e:	ja     404295 <flatcc_verify_struct_as_nested_root@@Base+0x95>
  404230:	add    eax,DWORD PTR [rdi+0x18]
  404233:	test   al,0x3
  404235:	jne    404295 <flatcc_verify_struct_as_nested_root@@Base+0x95>
  404237:	test   eax,eax
  404239:	je     40432f <flatcc_verify_struct_as_nested_root@@Base+0x12f>
  40423f:	mov    r15,QWORD PTR [rdi]
  404242:	mov    esi,eax
  404244:	mov    ebx,DWORD PTR [r15+rsi*1]
  404248:	add    ebx,eax
  40424a:	cmp    ebx,eax
  40424c:	jbe    404295 <flatcc_verify_struct_as_nested_root@@Base+0x95>
  40424e:	mov    eax,DWORD PTR [rdi+0x8]
  404251:	mov    r14d,ebx
  404254:	lea    rsi,[r14+0x4]
  404258:	cmp    rsi,rax
  40425b:	ja     404295 <flatcc_verify_struct_as_nested_root@@Base+0x95>
  40425d:	and    esi,0x3
  404260:	test   rsi,rsi
  404263:	jne    404295 <flatcc_verify_struct_as_nested_root@@Base+0x95>
  404265:	movzx  esi,r9w
  404269:	sub    eax,ebx
  40426b:	add    eax,0xfffffffc
  40426e:	imul   esi,DWORD PTR [r15+r14*1]
  404273:	cmp    eax,esi
  404275:	jb     404295 <flatcc_verify_struct_as_nested_root@@Base+0x95>
  404277:	jmp    40432f <flatcc_verify_struct_as_nested_root@@Base+0x12f>
  40427c:	test   edx,edx
  40427e:	je     404320 <flatcc_verify_struct_as_nested_root@@Base+0x120>
  404284:	cmp    si,bx
  404287:	jae    404314 <flatcc_verify_struct_as_nested_root@@Base+0x114>
  40428d:	mov    r10,QWORD PTR [rdi+0x10]
  404291:	movzx  r11d,si
  404295:	movzx  esi,WORD PTR [r10+r11*1]
  40429a:	test   esi,esi
  40429c:	je     404314 <flatcc_verify_struct_as_nested_root@@Base+0x114>
  40429e:	lea    ecx,[rsi+0x4]
  4042a1:	movzx  edx,WORD PTR [rdi+0x1c]
  4042a5:	mov    eax,0xd
  4042aa:	cmp    ecx,edx
  4042ac:	ja     40436c <flatcc_verify_struct_as_nested_root@@Base+0x16c>
  4042b2:	add    esi,DWORD PTR [rdi+0x18]
  4042b5:	mov    eax,0xc
  4042ba:	test   sil,0x3
  4042be:	jne    40436c <flatcc_verify_struct_as_nested_root@@Base+0x16c>
  4042c4:	test   esi,esi
  4042c6:	je     40436a <flatcc_verify_struct_as_nested_root@@Base+0x16a>
  4042cc:	mov    rcx,QWORD PTR [rdi]
  4042cf:	mov    eax,esi
  4042d1:	mov    edx,DWORD PTR [rcx+rax*1]
  4042d4:	add    edx,esi
  4042d6:	mov    eax,0x10
  4042db:	cmp    edx,esi
  4042dd:	jbe    40436c <flatcc_verify_struct_as_nested_root@@Base+0x16c>
  4042e3:	mov    esi,DWORD PTR [rdi+0x8]
  4042e6:	mov    edi,edx
  4042e8:	lea    rbx,[rdi+0x4]
  4042ec:	cmp    rbx,rsi
  4042ef:	ja     40436c <flatcc_verify_struct_as_nested_root@@Base+0x16c>
  4042f1:	and    ebx,0x3
  4042f4:	test   rbx,rbx
  4042f7:	jne    40436c <flatcc_verify_struct_as_nested_root@@Base+0x16c>
  4042f9:	movzx  eax,r9w
  4042fd:	sub    esi,edx
  4042ff:	add    esi,0xfffffffc
  404302:	imul   eax,DWORD PTR [rcx+rdi*1]
  404306:	xor    ecx,ecx
  404308:	cmp    esi,eax
  40430a:	mov    eax,0x1a
  40430f:	cmovae eax,ecx
  404312:	jmp    40436c <flatcc_verify_struct_as_nested_root@@Base+0x16c>
  404314:	xor    eax,eax
  404316:	test   edx,edx
  404318:	setne  al
  40431b:	shl    eax,0x2
  40431e:	jmp    40436c <flatcc_verify_struct_as_nested_root@@Base+0x16c>
  404320:	xor    eax,eax
  404322:	cmp    si,bx
  404325:	jae    40436c <flatcc_verify_struct_as_nested_root@@Base+0x16c>
  404327:	mov    r10,QWORD PTR [rdi+0x10]
  40432b:	movzx  r11d,si
  40432f:	movzx  esi,WORD PTR [r10+r11*1]
  404334:	xor    eax,eax
  404336:	test   rsi,rsi
  404339:	je     40436c <flatcc_verify_struct_as_nested_root@@Base+0x16c>
  40433b:	mov    edx,DWORD PTR [rdi+0x18]
  40433e:	add    rdx,QWORD PTR [rdi]
  404341:	add    rdx,rsi
  404344:	je     40436c <flatcc_verify_struct_as_nested_root@@Base+0x16c>
  404346:	mov    eax,DWORD PTR [rdx]
  404348:	mov    esi,DWORD PTR [rax+rdx*1]
  40434b:	lea    rdi,[rax+rdx*1]
  40434f:	add    rdi,0x4
  404353:	movzx  eax,r9w
  404357:	mov    rdx,rcx
  40435a:	mov    rcx,r8
  40435d:	mov    r8d,eax
  404360:	pop    rbx
  404361:	pop    r14
  404363:	pop    r15
  404365:	jmp    403e20 <flatcc_verify_struct_as_root@@Base>
  40436a:	xor    eax,eax
  40436c:	pop    rbx
  40436d:	pop    r14
  40436f:	pop    r15
  404371:	ret    
  404372:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40437c:	nop    DWORD PTR [rax+0x0]

0000000000404380 <flatcc_verify_table_as_nested_root@@Base>:
  404380:	push   rbp
  404381:	push   r15
  404383:	push   r14
  404385:	push   r13
  404387:	push   r12
  404389:	push   rbx
  40438a:	sub    rsp,0x28
  40438e:	mov    r14,r9
  404391:	mov    r15,rcx
  404394:	mov    rbx,rdi
  404397:	lea    esi,[rsi+rsi*1]
  40439a:	add    esi,0x4
  40439d:	movzx  ebp,WORD PTR [rdi+0x1e]
  4043a1:	cmp    si,bp
  4043a4:	jae    40440e <flatcc_verify_table_as_nested_root@@Base+0x8e>
  4043a6:	mov    rax,QWORD PTR [rbx+0x10]
  4043aa:	movzx  ecx,si
  4043ad:	movzx  edi,WORD PTR [rax+rcx*1]
  4043b1:	test   edi,edi
  4043b3:	je     40440e <flatcc_verify_table_as_nested_root@@Base+0x8e>
  4043b5:	lea    esi,[rdi+0x4]
  4043b8:	movzx  ebp,WORD PTR [rbx+0x1c]
  4043bc:	cmp    esi,ebp
  4043be:	ja     404426 <flatcc_verify_table_as_nested_root@@Base+0xa6>
  4043c0:	add    edi,DWORD PTR [rbx+0x18]
  4043c3:	test   dil,0x3
  4043c7:	jne    404426 <flatcc_verify_table_as_nested_root@@Base+0xa6>
  4043c9:	test   edi,edi
  4043cb:	je     4044d4 <flatcc_verify_table_as_nested_root@@Base+0x154>
  4043d1:	mov    r10,QWORD PTR [rbx]
  4043d4:	mov    esi,edi
  4043d6:	mov    ebp,DWORD PTR [r10+rsi*1]
  4043da:	add    ebp,edi
  4043dc:	cmp    ebp,edi
  4043de:	jbe    404426 <flatcc_verify_table_as_nested_root@@Base+0xa6>
  4043e0:	mov    edi,DWORD PTR [rbx+0x8]
  4043e3:	mov    r9d,ebp
  4043e6:	lea    rsi,[r9+0x4]
  4043ea:	cmp    rsi,rdi
  4043ed:	ja     404426 <flatcc_verify_table_as_nested_root@@Base+0xa6>
  4043ef:	and    esi,0x3
  4043f2:	test   rsi,rsi
  4043f5:	jne    404426 <flatcc_verify_table_as_nested_root@@Base+0xa6>
  4043f7:	movzx  esi,r8w
  4043fb:	sub    edi,ebp
  4043fd:	add    edi,0xfffffffc
  404400:	imul   esi,DWORD PTR [r10+r9*1]
  404405:	cmp    edi,esi
  404407:	jb     404426 <flatcc_verify_table_as_nested_root@@Base+0xa6>
  404409:	jmp    4044d4 <flatcc_verify_table_as_nested_root@@Base+0x154>
  40440e:	test   edx,edx
  404410:	je     4044c2 <flatcc_verify_table_as_nested_root@@Base+0x142>
  404416:	cmp    si,bp
  404419:	jae    4044b3 <flatcc_verify_table_as_nested_root@@Base+0x133>
  40441f:	mov    rax,QWORD PTR [rbx+0x10]
  404423:	movzx  ecx,si
  404426:	movzx  esi,WORD PTR [rax+rcx*1]
  40442a:	test   esi,esi
  40442c:	je     4044b3 <flatcc_verify_table_as_nested_root@@Base+0x133>
  404432:	lea    ecx,[rsi+0x4]
  404435:	movzx  edx,WORD PTR [rbx+0x1c]
  404439:	mov    eax,0xd
  40443e:	cmp    ecx,edx
  404440:	ja     404588 <flatcc_verify_table_as_nested_root@@Base+0x208>
  404446:	add    esi,DWORD PTR [rbx+0x18]
  404449:	mov    eax,0xc
  40444e:	test   sil,0x3
  404452:	jne    404588 <flatcc_verify_table_as_nested_root@@Base+0x208>
  404458:	test   esi,esi
  40445a:	je     404586 <flatcc_verify_table_as_nested_root@@Base+0x206>
  404460:	mov    rcx,QWORD PTR [rbx]
  404463:	mov    eax,esi
  404465:	mov    edx,DWORD PTR [rcx+rax*1]
  404468:	add    edx,esi
  40446a:	mov    eax,0x10
  40446f:	cmp    edx,esi
  404471:	jbe    404588 <flatcc_verify_table_as_nested_root@@Base+0x208>
  404477:	mov    esi,DWORD PTR [rbx+0x8]
  40447a:	mov    edi,edx
  40447c:	lea    rbp,[rdi+0x4]
  404480:	cmp    rbp,rsi
  404483:	ja     404588 <flatcc_verify_table_as_nested_root@@Base+0x208>
  404489:	and    ebp,0x3
  40448c:	test   rbp,rbp
  40448f:	jne    404588 <flatcc_verify_table_as_nested_root@@Base+0x208>
  404495:	movzx  eax,r8w
  404499:	sub    esi,edx
  40449b:	add    esi,0xfffffffc
  40449e:	imul   eax,DWORD PTR [rcx+rdi*1]
  4044a2:	xor    ecx,ecx
  4044a4:	cmp    esi,eax
  4044a6:	mov    eax,0x1a
  4044ab:	cmovae eax,ecx
  4044ae:	jmp    404588 <flatcc_verify_table_as_nested_root@@Base+0x208>
  4044b3:	xor    eax,eax
  4044b5:	test   edx,edx
  4044b7:	setne  al
  4044ba:	shl    eax,0x2
  4044bd:	jmp    404588 <flatcc_verify_table_as_nested_root@@Base+0x208>
  4044c2:	xor    eax,eax
  4044c4:	cmp    si,bp
  4044c7:	jae    404588 <flatcc_verify_table_as_nested_root@@Base+0x208>
  4044cd:	mov    rax,QWORD PTR [rbx+0x10]
  4044d1:	movzx  ecx,si
  4044d4:	movzx  ecx,WORD PTR [rax+rcx*1]
  4044d8:	xor    eax,eax
  4044da:	test   rcx,rcx
  4044dd:	je     404588 <flatcc_verify_table_as_nested_root@@Base+0x208>
  4044e3:	mov    r13d,DWORD PTR [rbx+0x18]
  4044e7:	add    r13,QWORD PTR [rbx]
  4044ea:	add    r13,rcx
  4044ed:	je     404588 <flatcc_verify_table_as_nested_root@@Base+0x208>
  4044f3:	mov    ebp,DWORD PTR [r13+0x0]
  4044f7:	lea    r12,[r13*1+0x4]
  4044ff:	add    r12,rbp
  404502:	mov    eax,0x5
  404507:	test   r12b,0x3
  40450b:	jne    404588 <flatcc_verify_table_as_nested_root@@Base+0x208>
  40450d:	mov    ecx,DWORD PTR [rbp+r13*1+0x0]
  404512:	mov    eax,0x6
  404517:	cmp    ecx,0xfffffff7
  40451a:	ja     404588 <flatcc_verify_table_as_nested_root@@Base+0x208>
  40451c:	mov    eax,0x1
  404521:	cmp    ecx,0x8
  404524:	jb     404588 <flatcc_verify_table_as_nested_root@@Base+0x208>
  404526:	test   r15,r15
  404529:	je     404597 <flatcc_verify_table_as_nested_root@@Base+0x217>
  40452b:	mov    DWORD PTR [rsp],0x0
  404532:	mov    rdi,rsp
  404535:	mov    edx,0x4
  40453a:	mov    rsi,r15
  40453d:	mov    QWORD PTR [rsp+0x20],rcx
  404542:	call   402040 <strncpy@plt>
  404547:	mov    rcx,QWORD PTR [rsp+0x20]
  40454c:	mov    eax,DWORD PTR [rsp]
  40454f:	test   eax,eax
  404551:	je     404597 <flatcc_verify_table_as_nested_root@@Base+0x217>
  404553:	add    rbp,r13
  404556:	cmp    DWORD PTR [rbp+0x8],eax
  404559:	je     404597 <flatcc_verify_table_as_nested_root@@Base+0x217>
  40455b:	mov    DWORD PTR [rsp],0x0
  404562:	mov    rdi,rsp
  404565:	mov    edx,0x4
  40456a:	mov    rsi,r15
  40456d:	call   402040 <strncpy@plt>
  404572:	mov    ecx,DWORD PTR [rsp]
  404575:	xor    eax,eax
  404577:	cmp    DWORD PTR [rbp+0x8],ecx
  40457a:	setne  al
  40457d:	add    eax,eax
  40457f:	test   ecx,ecx
  404581:	cmove  eax,ecx
  404584:	jmp    404588 <flatcc_verify_table_as_nested_root@@Base+0x208>
  404586:	xor    eax,eax
  404588:	add    rsp,0x28
  40458c:	pop    rbx
  40458d:	pop    r12
  40458f:	pop    r13
  404591:	pop    r14
  404593:	pop    r15
  404595:	pop    rbp
  404596:	ret    
  404597:	mov    esi,DWORD PTR [r12]
  40459b:	mov    eax,DWORD PTR [rbx+0xc]
  40459e:	dec    eax
  4045a0:	mov    DWORD PTR [rsp+0xc],eax
  4045a4:	je     40464f <flatcc_verify_table_as_nested_root@@Base+0x2cf>
  4045aa:	mov    eax,0xf
  4045af:	test   esi,esi
  4045b1:	je     404588 <flatcc_verify_table_as_nested_root@@Base+0x208>
  4045b3:	lea    rdx,[rsi+0x4]
  4045b7:	cmp    rdx,rcx
  4045ba:	ja     404588 <flatcc_verify_table_as_nested_root@@Base+0x208>
  4045bc:	mov    edx,esi
  4045be:	and    edx,0x3
  4045c1:	test   rdx,rdx
  4045c4:	jne    404588 <flatcc_verify_table_as_nested_root@@Base+0x208>
  4045c6:	mov    DWORD PTR [rsp+0x18],esi
  4045ca:	mov    edi,esi
  4045cc:	sub    edi,DWORD PTR [r12+rsi*1]
  4045d0:	mov    eax,0x1d
  4045d5:	test   edi,0x80000001
  4045db:	jne    404588 <flatcc_verify_table_as_nested_root@@Base+0x208>
  4045dd:	mov    edx,edi
  4045df:	lea    rbx,[rdx+0x2]
  4045e3:	mov    eax,0x1b
  4045e8:	cmp    rbx,rcx
  4045eb:	ja     404588 <flatcc_verify_table_as_nested_root@@Base+0x208>
  4045ed:	movzx  ebp,WORD PTR [r12+rdx*1]
  4045f2:	mov    WORD PTR [rsp+0x1e],bp
  4045f7:	mov    eax,0x1e
  4045fc:	test   bpl,0x1
  404600:	jne    404588 <flatcc_verify_table_as_nested_root@@Base+0x208>
  404602:	add    edi,ebp
  404604:	cmp    edi,ecx
  404606:	ja     404588 <flatcc_verify_table_as_nested_root@@Base+0x208>
  404608:	mov    eax,0x1c
  40460d:	cmp    bp,0x4
  404611:	jb     404588 <flatcc_verify_table_as_nested_root@@Base+0x208>
  404617:	mov    eax,ebx
  404619:	movzx  ebp,WORD PTR [r12+rax*1]
  40461e:	mov    WORD PTR [rsp+0x1c],bp
  404623:	mov    edi,ecx
  404625:	sub    edi,esi
  404627:	mov    eax,0x14
  40462c:	cmp    edi,ebp
  40462e:	jb     404588 <flatcc_verify_table_as_nested_root@@Base+0x208>
  404634:	add    rdx,r12
  404637:	mov    QWORD PTR [rsp+0x10],rdx
  40463c:	mov    QWORD PTR [rsp],r12
  404640:	mov    DWORD PTR [rsp+0x8],ecx
  404644:	mov    rdi,rsp
  404647:	call   r14
  40464a:	jmp    404588 <flatcc_verify_table_as_nested_root@@Base+0x208>
  40464f:	mov    eax,0x3
  404654:	jmp    404588 <flatcc_verify_table_as_nested_root@@Base+0x208>
  404659:	nop    DWORD PTR [rax+0x0]

0000000000404660 <flatcc_verify_union_field@@Base>:
  404660:	push   rbp
  404661:	push   r14
  404663:	push   rbx
  404664:	sub    rsp,0x20
  404668:	lea    eax,[rsi+rsi*1]
  40466b:	add    eax,0x2
  40466e:	add    esi,esi
  404670:	movzx  r10d,WORD PTR [rdi+0x1e]
  404675:	cmp    ax,r10w
  404679:	jae    404758 <flatcc_verify_union_field@@Base+0xf8>
  40467f:	mov    rbx,QWORD PTR [rdi+0x10]
  404683:	movzx  eax,ax
  404686:	movzx  r9d,WORD PTR [rbx+rax*1]
  40468b:	test   r9,r9
  40468e:	je     404758 <flatcc_verify_union_field@@Base+0xf8>
  404694:	mov    eax,0xd
  404699:	cmp    r9w,WORD PTR [rdi+0x1c]
  40469e:	jae    40477e <flatcc_verify_union_field@@Base+0x11e>
  4046a4:	mov    r8,QWORD PTR [rdi]
  4046a7:	add    esi,0x4
  4046aa:	mov    al,0x1
  4046ac:	cmp    si,r10w
  4046b0:	jae    4046bd <flatcc_verify_union_field@@Base+0x5d>
  4046b2:	movzx  eax,si
  4046b5:	cmp    WORD PTR [rbx+rax*1],0x0
  4046ba:	sete   al
  4046bd:	mov    r14d,DWORD PTR [rdi+0x18]
  4046c1:	lea    r11,[r8+r14*1]
  4046c5:	mov    bpl,BYTE PTR [r9+r11*1]
  4046c9:	test   al,al
  4046cb:	jne    4046db <flatcc_verify_union_field@@Base+0x7b>
  4046cd:	mov    eax,0x18
  4046d2:	test   bpl,bpl
  4046d5:	je     40477e <flatcc_verify_union_field@@Base+0x11e>
  4046db:	xor    eax,eax
  4046dd:	test   bpl,bpl
  4046e0:	je     40477e <flatcc_verify_union_field@@Base+0x11e>
  4046e6:	cmp    si,r10w
  4046ea:	jae    404787 <flatcc_verify_union_field@@Base+0x127>
  4046f0:	movzx  eax,si
  4046f3:	movzx  esi,WORD PTR [rbx+rax*1]
  4046f7:	test   esi,esi
  4046f9:	je     404787 <flatcc_verify_union_field@@Base+0x127>
  4046ff:	lea    edx,[rsi+0x4]
  404702:	movzx  ebp,WORD PTR [rdi+0x1c]
  404706:	mov    eax,0xd
  40470b:	cmp    edx,ebp
  40470d:	ja     40477e <flatcc_verify_union_field@@Base+0x11e>
  40470f:	add    r14d,esi
  404712:	mov    eax,0xc
  404717:	test   r14b,0x3
  40471b:	jne    40477e <flatcc_verify_union_field@@Base+0x11e>
  40471d:	mov    eax,0x0
  404722:	test   r14d,r14d
  404725:	je     40477e <flatcc_verify_union_field@@Base+0x11e>
  404727:	mov    QWORD PTR [rsp],r8
  40472b:	mov    eax,DWORD PTR [rdi+0x8]
  40472e:	mov    DWORD PTR [rsp+0x8],eax
  404732:	mov    eax,DWORD PTR [rdi+0xc]
  404735:	mov    DWORD PTR [rsp+0xc],eax
  404739:	mov    DWORD PTR [rsp+0x14],r14d
  40473e:	mov    eax,r14d
  404741:	mov    eax,DWORD PTR [r8+rax*1]
  404745:	mov    DWORD PTR [rsp+0x18],eax
  404749:	mov    al,BYTE PTR [r11+r9*1]
  40474d:	mov    BYTE PTR [rsp+0x10],al
  404751:	mov    rdi,rsp
  404754:	call   rcx
  404756:	jmp    40477e <flatcc_verify_union_field@@Base+0x11e>
  404758:	add    esi,0x4
  40475b:	cmp    si,r10w
  40475f:	jae    404774 <flatcc_verify_union_field@@Base+0x114>
  404761:	mov    rcx,QWORD PTR [rdi+0x10]
  404765:	movzx  esi,si
  404768:	mov    eax,0x17
  40476d:	cmp    WORD PTR [rcx+rsi*1],0x0
  404772:	jne    40477e <flatcc_verify_union_field@@Base+0x11e>
  404774:	test   edx,edx
  404776:	mov    eax,0x15
  40477b:	cmove  eax,edx
  40477e:	add    rsp,0x20
  404782:	pop    rbx
  404783:	pop    r14
  404785:	pop    rbp
  404786:	ret    
  404787:	xor    eax,eax
  404789:	test   edx,edx
  40478b:	setne  al
  40478e:	shl    eax,0x2
  404791:	jmp    40477e <flatcc_verify_union_field@@Base+0x11e>
  404793:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40479d:	nop    DWORD PTR [rax]

00000000004047a0 <flatcc_verify_union_vector_field@@Base>:
  4047a0:	push   rbp
  4047a1:	push   r15
  4047a3:	push   r14
  4047a5:	push   r13
  4047a7:	push   r12
  4047a9:	push   rbx
  4047aa:	sub    rsp,0x28
  4047ae:	mov    r12,rcx
  4047b1:	lea    ebx,[rsi+rsi*1]
  4047b4:	add    ebx,0x2
  4047b7:	add    esi,esi
  4047b9:	movzx  ecx,WORD PTR [rdi+0x1e]
  4047bd:	cmp    bx,cx
  4047c0:	jae    4047d2 <flatcc_verify_union_vector_field@@Base+0x32>
  4047c2:	mov    r10,QWORD PTR [rdi+0x10]
  4047c6:	movzx  r14d,bx
  4047ca:	cmp    WORD PTR [r10+r14*1],0x0
  4047d0:	jne    404807 <flatcc_verify_union_vector_field@@Base+0x67>
  4047d2:	lea    eax,[rsi+0x4]
  4047d5:	cmp    ax,cx
  4047d8:	jae    404865 <flatcc_verify_union_vector_field@@Base+0xc5>
  4047de:	test   edx,edx
  4047e0:	je     4047fa <flatcc_verify_union_vector_field@@Base+0x5a>
  4047e2:	mov    r8,QWORD PTR [rdi+0x10]
  4047e6:	movzx  ebp,ax
  4047e9:	mov    eax,0x16
  4047ee:	cmp    WORD PTR [r8+rbp*1],0x0
  4047f4:	je     404a3e <flatcc_verify_union_vector_field@@Base+0x29e>
  4047fa:	cmp    bx,cx
  4047fd:	jae    404874 <flatcc_verify_union_vector_field@@Base+0xd4>
  4047ff:	mov    r10,QWORD PTR [rdi+0x10]
  404803:	movzx  r14d,bx
  404807:	movzx  ebp,WORD PTR [r10+r14*1]
  40480c:	test   ebp,ebp
  40480e:	je     404874 <flatcc_verify_union_vector_field@@Base+0xd4>
  404810:	lea    ebx,[rbp+0x4]
  404813:	movzx  eax,WORD PTR [rdi+0x1c]
  404817:	cmp    ebx,eax
  404819:	ja     40488d <flatcc_verify_union_vector_field@@Base+0xed>
  40481b:	add    ebp,DWORD PTR [rdi+0x18]
  40481e:	test   bpl,0x3
  404822:	jne    40488d <flatcc_verify_union_vector_field@@Base+0xed>
  404824:	test   ebp,ebp
  404826:	je     404927 <flatcc_verify_union_vector_field@@Base+0x187>
  40482c:	mov    r8,QWORD PTR [rdi]
  40482f:	mov    eax,ebp
  404831:	mov    ebx,DWORD PTR [r8+rax*1]
  404835:	add    ebx,ebp
  404837:	cmp    ebx,ebp
  404839:	jbe    40488d <flatcc_verify_union_vector_field@@Base+0xed>
  40483b:	mov    r11d,DWORD PTR [rdi+0x8]
  40483f:	mov    r9d,ebx
  404842:	lea    rbp,[r9+0x4]
  404846:	cmp    rbp,r11
  404849:	ja     40488d <flatcc_verify_union_vector_field@@Base+0xed>
  40484b:	and    ebp,0x3
  40484e:	test   rbp,rbp
  404851:	jne    40488d <flatcc_verify_union_vector_field@@Base+0xed>
  404853:	sub    r11d,ebx
  404856:	add    r11d,0xfffffffc
  40485a:	cmp    r11d,DWORD PTR [r8+r9*1]
  40485e:	jb     40488d <flatcc_verify_union_vector_field@@Base+0xed>
  404860:	jmp    404927 <flatcc_verify_union_vector_field@@Base+0x187>
  404865:	mov    eax,0x16
  40486a:	test   edx,edx
  40486c:	jne    404a3e <flatcc_verify_union_vector_field@@Base+0x29e>
  404872:	jmp    4047fa <flatcc_verify_union_vector_field@@Base+0x5a>
  404874:	test   edx,edx
  404876:	je     404914 <flatcc_verify_union_vector_field@@Base+0x174>
  40487c:	cmp    bx,cx
  40487f:	jae    404a34 <flatcc_verify_union_vector_field@@Base+0x294>
  404885:	mov    r10,QWORD PTR [rdi+0x10]
  404889:	movzx  r14d,bx
  40488d:	movzx  esi,WORD PTR [r10+r14*1]
  404892:	test   esi,esi
  404894:	je     404a34 <flatcc_verify_union_vector_field@@Base+0x294>
  40489a:	lea    ecx,[rsi+0x4]
  40489d:	movzx  edx,WORD PTR [rdi+0x1c]
  4048a1:	mov    eax,0xd
  4048a6:	cmp    ecx,edx
  4048a8:	ja     404a3e <flatcc_verify_union_vector_field@@Base+0x29e>
  4048ae:	add    esi,DWORD PTR [rdi+0x18]
  4048b1:	mov    eax,0xc
  4048b6:	test   sil,0x3
  4048ba:	jne    404a3e <flatcc_verify_union_vector_field@@Base+0x29e>
  4048c0:	test   esi,esi
  4048c2:	je     404a4d <flatcc_verify_union_vector_field@@Base+0x2ad>
  4048c8:	mov    rcx,QWORD PTR [rdi]
  4048cb:	mov    eax,esi
  4048cd:	mov    edx,DWORD PTR [rcx+rax*1]
  4048d0:	add    edx,esi
  4048d2:	mov    eax,0x10
  4048d7:	cmp    edx,esi
  4048d9:	jbe    404a3e <flatcc_verify_union_vector_field@@Base+0x29e>
  4048df:	mov    esi,DWORD PTR [rdi+0x8]
  4048e2:	mov    edi,edx
  4048e4:	lea    rbp,[rdi+0x4]
  4048e8:	cmp    rbp,rsi
  4048eb:	ja     404a3e <flatcc_verify_union_vector_field@@Base+0x29e>
  4048f1:	and    ebp,0x3
  4048f4:	test   rbp,rbp
  4048f7:	jne    404a3e <flatcc_verify_union_vector_field@@Base+0x29e>
  4048fd:	sub    esi,edx
  4048ff:	add    esi,0xfffffffc
  404902:	xor    edx,edx
  404904:	cmp    esi,DWORD PTR [rcx+rdi*1]
  404907:	mov    eax,0x1a
  40490c:	cmovae eax,edx
  40490f:	jmp    404a3e <flatcc_verify_union_vector_field@@Base+0x29e>
  404914:	xor    eax,eax
  404916:	cmp    bx,cx
  404919:	jae    404a3e <flatcc_verify_union_vector_field@@Base+0x29e>
  40491f:	mov    r10,QWORD PTR [rdi+0x10]
  404923:	movzx  r14d,bx
  404927:	movzx  ebp,WORD PTR [r10+r14*1]
  40492c:	xor    eax,eax
  40492e:	test   rbp,rbp
  404931:	je     404a3e <flatcc_verify_union_vector_field@@Base+0x29e>
  404937:	mov    r15,QWORD PTR [rdi]
  40493a:	mov    r8d,DWORD PTR [rdi+0x18]
  40493e:	lea    r9,[r15+r8*1]
  404942:	add    r9,rbp
  404945:	je     404a3e <flatcc_verify_union_vector_field@@Base+0x29e>
  40494b:	add    esi,0x4
  40494e:	cmp    si,cx
  404951:	jae    404a34 <flatcc_verify_union_vector_field@@Base+0x294>
  404957:	movzx  eax,si
  40495a:	movzx  ecx,WORD PTR [r10+rax*1]
  40495f:	test   ecx,ecx
  404961:	je     404a34 <flatcc_verify_union_vector_field@@Base+0x294>
  404967:	lea    edx,[rcx+0x4]
  40496a:	movzx  esi,WORD PTR [rdi+0x1c]
  40496e:	mov    eax,0xd
  404973:	cmp    edx,esi
  404975:	ja     404a3e <flatcc_verify_union_vector_field@@Base+0x29e>
  40497b:	lea    ebx,[r8+rcx*1]
  40497f:	mov    eax,0xc
  404984:	test   bl,0x3
  404987:	jne    404a3e <flatcc_verify_union_vector_field@@Base+0x29e>
  40498d:	mov    eax,0x0
  404992:	test   ebx,ebx
  404994:	je     404a3e <flatcc_verify_union_vector_field@@Base+0x29e>
  40499a:	mov    esi,DWORD PTR [rdi+0xc]
  40499d:	test   esi,esi
  40499f:	jle    404a51 <flatcc_verify_union_vector_field@@Base+0x2b1>
  4049a5:	mov    eax,ebx
  4049a7:	mov    edx,DWORD PTR [r15+rax*1]
  4049ab:	lea    ebp,[rdx+rbx*1]
  4049ae:	mov    eax,0x10
  4049b3:	cmp    ebp,ebx
  4049b5:	jbe    404a3e <flatcc_verify_union_vector_field@@Base+0x29e>
  4049bb:	mov    r10d,DWORD PTR [rdi+0x8]
  4049bf:	mov    ebx,ebp
  4049c1:	lea    rdi,[rbx+0x4]
  4049c5:	cmp    rdi,r10
  4049c8:	ja     404a3e <flatcc_verify_union_vector_field@@Base+0x29e>
  4049ca:	and    edi,0x3
  4049cd:	test   rdi,rdi
  4049d0:	jne    404a3e <flatcc_verify_union_vector_field@@Base+0x29e>
  4049d2:	mov    ebx,DWORD PTR [r15+rbx*1]
  4049d6:	mov    eax,0x19
  4049db:	cmp    ebx,0x3fffffff
  4049e1:	ja     404a3e <flatcc_verify_union_vector_field@@Base+0x29e>
  4049e3:	mov    edi,r10d
  4049e6:	sub    edi,ebp
  4049e8:	add    edi,0xfffffffc
  4049eb:	lea    ebp,[rbx*4+0x0]
  4049f2:	mov    eax,0x1a
  4049f7:	cmp    edi,ebp
  4049f9:	jb     404a3e <flatcc_verify_union_vector_field@@Base+0x29e>
  4049fb:	mov    r13d,DWORD PTR [r9]
  4049fe:	mov    edi,DWORD PTR [r13+r9*1+0x0]
  404a03:	mov    eax,0x22
  404a08:	cmp    ebx,edi
  404a0a:	jne    404a3e <flatcc_verify_union_vector_field@@Base+0x29e>
  404a0c:	dec    esi
  404a0e:	mov    QWORD PTR [rsp+0x8],r15
  404a13:	mov    DWORD PTR [rsp+0x10],r10d
  404a18:	mov    DWORD PTR [rsp+0x14],esi
  404a1c:	test   edi,edi
  404a1e:	je     404a4d <flatcc_verify_union_vector_field@@Base+0x2ad>
  404a20:	mov    rbx,rdi
  404a23:	add    r13,r9
  404a26:	add    edx,r8d
  404a29:	lea    ebp,[rcx+rdx*1]
  404a2c:	add    ebp,0x4
  404a2f:	xor    r14d,r14d
  404a32:	jmp    404a69 <flatcc_verify_union_vector_field@@Base+0x2c9>
  404a34:	xor    eax,eax
  404a36:	test   edx,edx
  404a38:	setne  al
  404a3b:	shl    eax,0x2
  404a3e:	add    rsp,0x28
  404a42:	pop    rbx
  404a43:	pop    r12
  404a45:	pop    r13
  404a47:	pop    r14
  404a49:	pop    r15
  404a4b:	pop    rbp
  404a4c:	ret    
  404a4d:	xor    eax,eax
  404a4f:	jmp    404a3e <flatcc_verify_union_vector_field@@Base+0x29e>
  404a51:	mov    eax,0x3
  404a56:	jmp    404a3e <flatcc_verify_union_vector_field@@Base+0x29e>
  404a58:	test   cl,cl
  404a5a:	jne    404aa6 <flatcc_verify_union_vector_field@@Base+0x306>
  404a5c:	inc    r14
  404a5f:	add    ebp,0x4
  404a62:	xor    eax,eax
  404a64:	cmp    rbx,r14
  404a67:	je     404a3e <flatcc_verify_union_vector_field@@Base+0x29e>
  404a69:	mov    eax,ebp
  404a6b:	mov    eax,DWORD PTR [r15+rax*1]
  404a6f:	movzx  ecx,BYTE PTR [r13+r14*1+0x4]
  404a75:	test   eax,eax
  404a77:	je     404a58 <flatcc_verify_union_vector_field@@Base+0x2b8>
  404a79:	test   cl,cl
  404a7b:	je     404a9f <flatcc_verify_union_vector_field@@Base+0x2ff>
  404a7d:	mov    BYTE PTR [rsp+0x18],cl
  404a81:	mov    DWORD PTR [rsp+0x1c],ebp
  404a85:	mov    DWORD PTR [rsp+0x20],eax
  404a89:	lea    rdi,[rsp+0x8]
  404a8e:	call   r12
  404a91:	test   eax,eax
  404a93:	je     404a5c <flatcc_verify_union_vector_field@@Base+0x2bc>
  404a95:	lea    rdi,[rsp+0x8]
  404a9a:	call   r12
  404a9d:	jmp    404a3e <flatcc_verify_union_vector_field@@Base+0x29e>
  404a9f:	mov    eax,0x21
  404aa4:	jmp    404a3e <flatcc_verify_union_vector_field@@Base+0x29e>
  404aa6:	mov    eax,0x20
  404aab:	jmp    404a3e <flatcc_verify_union_vector_field@@Base+0x29e>
  404aad:	nop    DWORD PTR [rax]

0000000000404ab0 <__libc_csu_init@@Base>:
  404ab0:	endbr64 
  404ab4:	push   r15
  404ab6:	lea    r15,[rip+0x31f3]        # 407cb0 <_IO_stdin_used@@Base+0x2cb0>
  404abd:	push   r14
  404abf:	mov    r14,rdx
  404ac2:	push   r13
  404ac4:	mov    r13,rsi
  404ac7:	push   r12
  404ac9:	mov    r12d,edi
  404acc:	push   rbp
  404acd:	lea    rbp,[rip+0x31e4]        # 407cb8 <_IO_stdin_used@@Base+0x2cb8>
  404ad4:	push   rbx
  404ad5:	sub    rbp,r15
  404ad8:	sub    rsp,0x8
  404adc:	call   402000 <free@plt-0x30>
  404ae1:	sar    rbp,0x3
  404ae5:	je     404b06 <__libc_csu_init@@Base+0x56>
  404ae7:	xor    ebx,ebx
  404ae9:	nop    DWORD PTR [rax+0x0]
  404af0:	mov    rdx,r14
  404af3:	mov    rsi,r13
  404af6:	mov    edi,r12d
  404af9:	call   QWORD PTR [r15+rbx*8]
  404afd:	add    rbx,0x1
  404b01:	cmp    rbp,rbx
  404b04:	jne    404af0 <__libc_csu_init@@Base+0x40>
  404b06:	add    rsp,0x8
  404b0a:	pop    rbx
  404b0b:	pop    rbp
  404b0c:	pop    r12
  404b0e:	pop    r13
  404b10:	pop    r14
  404b12:	pop    r15
  404b14:	ret    
  404b15:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

0000000000404b20 <__libc_csu_fini@@Base>:
  404b20:	endbr64 
  404b24:	ret    

Disassembly of section .fini:

0000000000404b28 <.fini>:
  404b28:	endbr64 
  404b2c:	sub    rsp,0x8
  404b30:	add    rsp,0x8
  404b34:	ret    
