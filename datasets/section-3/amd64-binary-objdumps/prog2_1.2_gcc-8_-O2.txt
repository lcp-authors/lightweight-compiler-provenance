
../repos/prog2/1.2:     file format elf64-x86-64


Disassembly of section .init:

0000000000401000 <.init>:
  401000:	endbr64 
  401004:	sub    rsp,0x8
  401008:	mov    rax,QWORD PTR [rip+0x2fe9]        # 403ff8 <__gmon_start__>
  40100f:	test   rax,rax
  401012:	je     401016 <fclose@plt-0x7a>
  401014:	call   rax
  401016:	add    rsp,0x8
  40101a:	ret    

Disassembly of section .plt:

0000000000401020 <.plt>:
  401020:	push   QWORD PTR [rip+0x2fe2]        # 404008 <_IO_stdin_used@@Base+0x2008>
  401026:	bnd jmp QWORD PTR [rip+0x2fe3]        # 404010 <_IO_stdin_used@@Base+0x2010>
  40102d:	nop    DWORD PTR [rax]
  401030:	endbr64 
  401034:	push   0x0
  401039:	bnd jmp 401020 <fclose@plt-0x70>
  40103f:	nop
  401040:	endbr64 
  401044:	push   0x1
  401049:	bnd jmp 401020 <fclose@plt-0x70>
  40104f:	nop
  401050:	endbr64 
  401054:	push   0x2
  401059:	bnd jmp 401020 <fclose@plt-0x70>
  40105f:	nop
  401060:	endbr64 
  401064:	push   0x3
  401069:	bnd jmp 401020 <fclose@plt-0x70>
  40106f:	nop
  401070:	endbr64 
  401074:	push   0x4
  401079:	bnd jmp 401020 <fclose@plt-0x70>
  40107f:	nop
  401080:	endbr64 
  401084:	push   0x5
  401089:	bnd jmp 401020 <fclose@plt-0x70>
  40108f:	nop

Disassembly of section .plt.sec:

0000000000401090 <fclose@plt>:
  401090:	endbr64 
  401094:	bnd jmp QWORD PTR [rip+0x2f7d]        # 404018 <fclose@GLIBC_2.2.5>
  40109b:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004010a0 <__stack_chk_fail@plt>:
  4010a0:	endbr64 
  4010a4:	bnd jmp QWORD PTR [rip+0x2f75]        # 404020 <__stack_chk_fail@GLIBC_2.4>
  4010ab:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004010b0 <fseek@plt>:
  4010b0:	endbr64 
  4010b4:	bnd jmp QWORD PTR [rip+0x2f6d]        # 404028 <fseek@GLIBC_2.2.5>
  4010bb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004010c0 <__printf_chk@plt>:
  4010c0:	endbr64 
  4010c4:	bnd jmp QWORD PTR [rip+0x2f65]        # 404030 <__printf_chk@GLIBC_2.3.4>
  4010cb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004010d0 <fopen@plt>:
  4010d0:	endbr64 
  4010d4:	bnd jmp QWORD PTR [rip+0x2f5d]        # 404038 <fopen@GLIBC_2.2.5>
  4010db:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004010e0 <getc@plt>:
  4010e0:	endbr64 
  4010e4:	bnd jmp QWORD PTR [rip+0x2f55]        # 404040 <getc@GLIBC_2.2.5>
  4010eb:	nop    DWORD PTR [rax+rax*1+0x0]

Disassembly of section .text:

00000000004010f0 <main@@Base>:
  4010f0:	endbr64 
  4010f4:	push   r15
  4010f6:	lea    rsi,[rip+0xf07]        # 402004 <_IO_stdin_used@@Base+0x4>
  4010fd:	lea    rdi,[rip+0xf02]        # 402006 <_IO_stdin_used@@Base+0x6>
  401104:	push   r14
  401106:	push   r13
  401108:	push   r12
  40110a:	push   rbp
  40110b:	push   rbx
  40110c:	sub    rsp,0x9f8
  401113:	mov    rax,QWORD PTR fs:0x28
  40111c:	mov    QWORD PTR [rsp+0x9e8],rax
  401124:	xor    eax,eax
  401126:	call   4010d0 <fopen@plt>
  40112b:	mov    rdi,rax
  40112e:	mov    edx,0x2
  401133:	mov    rsi,0xffffffffffffff83
  40113a:	mov    rbx,rax
  40113d:	call   4010b0 <fseek@plt>
  401142:	lea    rax,[rsp+0x980]
  40114a:	mov    QWORD PTR [rsp],rax
  40114e:	mov    rbp,rax
  401151:	lea    r13,[rsp+0x99e]
  401159:	nop    DWORD PTR [rax+0x0]
  401160:	mov    rdi,rbx
  401163:	call   4010e0 <getc@plt>
  401168:	mov    BYTE PTR [rbp+0x0],al
  40116b:	inc    rbp
  40116e:	cmp    rbp,r13
  401171:	jne    401160 <main@@Base+0x70>
  401173:	mov    BYTE PTR [rsp+0x99e],0x0
  40117b:	lea    r13,[rsp+0x9a0]
  401183:	mov    rbp,r13
  401186:	lea    r14,[r13+0x1e]
  40118a:	nop    WORD PTR [rax+rax*1+0x0]
  401190:	mov    rdi,rbx
  401193:	call   4010e0 <getc@plt>
  401198:	mov    BYTE PTR [rbp+0x0],al
  40119b:	inc    rbp
  40119e:	cmp    rbp,r14
  4011a1:	jne    401190 <main@@Base+0xa0>
  4011a3:	mov    BYTE PTR [rsp+0x9be],0x0
  4011ab:	lea    r14,[rsp+0x9c0]
  4011b3:	mov    rbp,r14
  4011b6:	lea    r15,[r14+0x1e]
  4011ba:	nop    WORD PTR [rax+rax*1+0x0]
  4011c0:	mov    rdi,rbx
  4011c3:	call   4010e0 <getc@plt>
  4011c8:	mov    BYTE PTR [rbp+0x0],al
  4011cb:	inc    rbp
  4011ce:	cmp    r15,rbp
  4011d1:	jne    4011c0 <main@@Base+0xd0>
  4011d3:	mov    BYTE PTR [rsp+0x9de],0x0
  4011db:	lea    r15,[rsp+0x97b]
  4011e3:	mov    r12,r15
  4011e6:	lea    rbp,[r15+0x4]
  4011ea:	mov    rdi,rbx
  4011ed:	call   4010e0 <getc@plt>
  4011f2:	mov    BYTE PTR [r12],al
  4011f6:	inc    r12
  4011f9:	cmp    r12,rbp
  4011fc:	jne    4011ea <main@@Base+0xfa>
  4011fe:	mov    BYTE PTR [rsp+0x97f],0x0
  401206:	mov    ebp,0x1c
  40120b:	nop    DWORD PTR [rax+rax*1+0x0]
  401210:	mov    rdi,rbx
  401213:	call   4010e0 <getc@plt>
  401218:	dec    ebp
  40121a:	jne    401210 <main@@Base+0x120>
  40121c:	mov    rdi,rbx
  40121f:	call   4010e0 <getc@plt>
  401224:	mov    rdi,rbx
  401227:	call   4010e0 <getc@plt>
  40122c:	mov    rdi,rbx
  40122f:	mov    DWORD PTR [rsp+0xc],eax
  401233:	call   4010e0 <getc@plt>
  401238:	mov    DWORD PTR [rsp+0x8],eax
  40123c:	mov    eax,0x73
  401241:	mov    WORD PTR [rsp+0x14],ax
  401246:	movabs rax,0x7972746e756f43
  401250:	mov    QWORD PTR [rsp+0x4c],rax
  401255:	movabs rax,0x706f482d706948
  40125f:	movabs rcx,0x2063697373616c43
  401269:	mov    QWORD PTR [rsp+0xe2],rax
  401271:	movabs rax,0x6567412077654e
  40127b:	lea    rbp,[rsp+0x10]
  401280:	mov    QWORD PTR [rsp+0x2e],rcx
  401285:	mov    edx,0x65
  40128a:	mov    ecx,0x6f
  40128f:	mov    esi,0x6567
  401294:	mov    edi,0x6c
  401299:	mov    QWORD PTR [rsp+0x13c],rax
  4012a1:	mov    r8d,0x7365
  4012a7:	mov    r9d,0x72
  4012ad:	mov    r10d,0x6561
  4012b3:	movabs rax,0x74616e7265746c41
  4012bd:	mov    DWORD PTR [rsp+0xc4],0x6e757247
  4012c8:	mov    DWORD PTR [rsp+0x15a],0x69646c4f
  4012d3:	mov    DWORD PTR [rsp+0x6a],0x636e6144
  4012db:	mov    DWORD PTR [rsp+0x88],0x63736944
  4012e6:	mov    WORD PTR [rbp+0x5e],dx
  4012ea:	mov    WORD PTR [rbp+0x7c],cx
  4012ee:	mov    DWORD PTR [rsp+0xa6],0x6b6e7546
  4012f9:	mov    WORD PTR [rbp+0xb8],si
  401300:	mov    DWORD PTR [rsp+0x100],0x7a7a614a
  40130b:	mov    DWORD PTR [rsp+0x11e],0x6174654d
  401316:	mov    WORD PTR [rbp+0x14e],r8w
  40131e:	mov    WORD PTR [rbp+0x112],di
  401325:	mov    DWORD PTR [rsp+0x178],0x6568744f
  401330:	mov    DWORD PTR [rsp+0x1f0],0x67676552
  40133b:	mov    WORD PTR [rbp+0x16c],r9w
  401343:	mov    WORD PTR [rbp+0x1e4],r10w
  40134b:	mov    DWORD PTR [rsp+0x10],0x65756c42
  401353:	mov    DWORD PTR [rbp+0x26],0x6b636f52
  40135a:	mov    BYTE PTR [rbp+0x2a],0x0
  40135e:	mov    BYTE PTR [rbp+0x9a],0x0
  401365:	mov    BYTE PTR [rbp+0xba],0x0
  40136c:	mov    BYTE PTR [rbp+0xf4],0x0
  401373:	mov    BYTE PTR [rbp+0x150],0x0
  40137a:	mov    DWORD PTR [rsp+0x196],0x706f50
  401385:	mov    DWORD PTR [rsp+0x1b4],0x422652
  401390:	mov    DWORD PTR [rsp+0x1d2],0x706152
  40139b:	mov    BYTE PTR [rbp+0x1e6],0x0
  4013a2:	mov    QWORD PTR [rsp+0x268],rax
  4013aa:	movabs rax,0x654d206874616544
  4013b4:	mov    QWORD PTR [rsp+0x2a4],rax
  4013bc:	movabs rcx,0x6972747375646e49
  4013c6:	mov    eax,0x736b
  4013cb:	mov    QWORD PTR [rsp+0x24a],rcx
  4013d3:	mov    DWORD PTR [rsp+0x2c2],0x6e617250
  4013de:	movabs rcx,0x617274646e756f53
  4013e8:	mov    WORD PTR [rbp+0x2b6],ax
  4013ef:	mov    eax,0x6b63
  4013f4:	mov    QWORD PTR [rsp+0x2e0],rcx
  4013fc:	mov    WORD PTR [rbp+0x2d8],ax
  401403:	movabs rax,0x6365542d6f727545
  40140d:	mov    QWORD PTR [rsp+0x2fe],rax
  401415:	movabs rax,0x746e6569626d41
  40141f:	mov    QWORD PTR [rsp+0x31c],rax
  401427:	movabs rax,0x706f482d70697254
  401431:	mov    QWORD PTR [rsp+0x33a],rax
  401439:	mov    eax,0x6c
  40143e:	mov    DWORD PTR [rsp+0x358],0x61636f56
  401449:	mov    WORD PTR [rbp+0x34c],ax
  401450:	movabs rax,0x6e75462b7a7a614a
  40145a:	mov    QWORD PTR [rsp+0x376],rax
  401462:	mov    eax,0x6b
  401467:	mov    WORD PTR [rbp+0x36e],ax
  40146e:	mov    eax,0x6e6f
  401473:	mov    DWORD PTR [rsp+0x394],0x69737546
  40147e:	mov    r11d,0x6f6e
  401484:	mov    r12d,0x6c61
  40148a:	mov    WORD PTR [rbp+0x388],ax
  401491:	movabs rsi,0x656d757274736e49
  40149b:	mov    eax,0x6563
  4014a0:	mov    ecx,0x65
  4014a5:	mov    DWORD PTR [rsp+0x22c],0x68636554
  4014b0:	mov    DWORD PTR [rsp+0x20e],0x6b636f52
  4014bb:	mov    WORD PTR [rbp+0x220],r11w
  4014c3:	mov    WORD PTR [rbp+0x242],r12w
  4014cb:	mov    BYTE PTR [rbp+0x202],0x0
  4014d2:	mov    BYTE PTR [rbp+0x222],0x0
  4014d9:	mov    BYTE PTR [rbp+0x244],0x0
  4014e0:	mov    DWORD PTR [rbp+0x260],0x657669
  4014ea:	mov    DWORD PTR [rsp+0x286],0x616b53
  4014f5:	mov    DWORD PTR [rbp+0x29c],0x6c6174
  4014ff:	mov    BYTE PTR [rbp+0x2b8],0x0
  401506:	mov    BYTE PTR [rbp+0x2da],0x0
  40150d:	mov    DWORD PTR [rbp+0x2f6],0x6f6e68
  401517:	mov    BYTE PTR [rbp+0x332],0x0
  40151e:	mov    BYTE PTR [rbp+0x38a],0x0
  401525:	mov    DWORD PTR [rsp+0x3b2],0x6e617254
  401530:	mov    WORD PTR [rbp+0x3a6],ax
  401537:	mov    QWORD PTR [rsp+0x3ee],rsi
  40153f:	mov    DWORD PTR [rsp+0x42a],0x73756f48
  40154a:	mov    esi,0x7069
  40154f:	mov    WORD PTR [rbp+0x41e],cx
  401556:	movabs rcx,0x6c4320646e756f53
  401560:	mov    QWORD PTR [rsp+0x466],rcx
  401568:	movabs rax,0x6163697373616c43
  401572:	mov    edx,0x6c
  401577:	mov    WORD PTR [rbp+0x45e],si
  40157e:	mov    edi,0x6c65
  401583:	mov    r8d,0x65
  401589:	movabs rsi,0x6f526e7265746c41
  401593:	mov    r9d,0x6b63
  401599:	mov    r10d,0x65
  40159f:	movabs rcx,0x697461746964654d
  4015a9:	mov    r11d,0x6576
  4015af:	mov    QWORD PTR [rsp+0x4c0],rsi
  4015b7:	mov    QWORD PTR [rsp+0x3d0],rax
  4015bf:	mov    DWORD PTR [rsp+0x484],0x70736f47
  4015ca:	mov    WORD PTR [rbp+0x3c8],dx
  4015d1:	mov    DWORD PTR [rsp+0x40c],0x64696341
  4015dc:	mov    DWORD PTR [rsp+0x448],0x656d6147
  4015e7:	mov    WORD PTR [rbp+0x478],di
  4015ee:	mov    DWORD PTR [rsp+0x4a2],0x73696f4e
  4015f9:	mov    WORD PTR [rbp+0x4b8],r9w
  401601:	mov    WORD PTR [rbp+0x496],r8w
  401609:	mov    DWORD PTR [rsp+0x4de],0x73736142
  401614:	mov    DWORD PTR [rsp+0x4fc],0x6c756f53
  40161f:	mov    DWORD PTR [rsp+0x51a],0x6b6e7550
  40162a:	mov    DWORD PTR [rsp+0x538],0x63617053
  401635:	mov    QWORD PTR [rsp+0x556],rcx
  40163d:	mov    WORD PTR [rbp+0x52c],r10w
  401645:	mov    BYTE PTR [rbp+0x3a8],0x0
  40164c:	mov    DWORD PTR [rbp+0x3e6],0x6c61746e
  401656:	mov    BYTE PTR [rbp+0x3ea],0x0
  40165d:	mov    BYTE PTR [rbp+0x400],0x0
  401664:	mov    BYTE PTR [rbp+0x43c],0x0
  40166b:	mov    BYTE PTR [rbp+0x460],0x0
  401672:	mov    BYTE PTR [rbp+0x47a],0x0
  401679:	mov    BYTE PTR [rbp+0x4ba],0x0
  401680:	mov    BYTE PTR [rbp+0x4d2],0x0
  401687:	mov    BYTE PTR [rbp+0x4f0],0x0
  40168e:	mov    BYTE PTR [rbp+0x50e],0x0
  401695:	mov    WORD PTR [rbp+0x54e],r11w
  40169d:	vmovdqa xmm0,XMMWORD PTR [rip+0x9cb]        # 402070 <_IO_stdin_used@@Base+0x70>
  4016a5:	mov    r12d,0x6b
  4016ab:	vmovups XMMWORD PTR [rsp+0x574],xmm0
  4016b4:	vmovdqa xmm0,XMMWORD PTR [rip+0x9c4]        # 402080 <_IO_stdin_used@@Base+0x80>
  4016bc:	mov    eax,0x6369
  4016c1:	mov    BYTE PTR [rbp+0x574],0x0
  4016c8:	vmovups XMMWORD PTR [rsp+0x592],xmm0
  4016d1:	mov    WORD PTR [rbp+0x592],r12w
  4016d9:	mov    DWORD PTR [rsp+0x5b0],0x6e687445
  4016e4:	mov    WORD PTR [rbp+0x5a4],ax
  4016eb:	mov    eax,0x6369
  4016f0:	mov    DWORD PTR [rsp+0x5ce],0x68746f47
  4016fb:	vmovdqa xmm0,XMMWORD PTR [rip+0x98d]        # 402090 <_IO_stdin_used@@Base+0x90>
  401703:	mov    WORD PTR [rbp+0x5c2],ax
  40170a:	movabs rax,0x657661776b726144
  401714:	mov    QWORD PTR [rsp+0x5ec],rax
  40171c:	mov    eax,0x6c
  401721:	vmovups XMMWORD PTR [rsp+0x60a],xmm0
  40172a:	movabs rsi,0x6e6f727463656c45
  401734:	mov    WORD PTR [rbp+0x60a],ax
  40173b:	mov    eax,0x6369
  401740:	mov    QWORD PTR [rsp+0x628],rsi
  401748:	mov    WORD PTR [rbp+0x620],ax
  40174f:	movabs rax,0x6b6c6f462d706f50
  401759:	mov    QWORD PTR [rsp+0x646],rax
  401761:	movabs rax,0x636e61646f727545
  40176b:	mov    QWORD PTR [rsp+0x664],rax
  401773:	mov    eax,0x65
  401778:	mov    WORD PTR [rbp+0x65c],ax
  40177f:	movabs rcx,0x6e72656874756f53
  401789:	mov    eax,0x6d
  40178e:	mov    QWORD PTR [rsp+0x6a0],rcx
  401796:	mov    DWORD PTR [rsp+0x682],0x61657244
  4017a1:	mov    ecx,0x7964
  4017a6:	mov    WORD PTR [rbp+0x676],ax
  4017ad:	mov    edx,0x6b
  4017b2:	movabs rax,0x617473676e6147
  4017bc:	mov    WORD PTR [rbp+0x69c],dx
  4017c3:	mov    DWORD PTR [rsp+0x6be],0x656d6f43
  4017ce:	mov    BYTE PTR [rbp+0x550],0x0
  4017d5:	mov    WORD PTR [rbp+0x6b2],cx
  4017dc:	mov    BYTE PTR [rbp+0x5a6],0x0
  4017e3:	mov    BYTE PTR [rbp+0x5c4],0x0
  4017ea:	mov    BYTE PTR [rbp+0x5e4],0x0
  4017f1:	mov    BYTE PTR [rbp+0x622],0x0
  4017f8:	mov    BYTE PTR [rbp+0x63e],0x0
  4017ff:	mov    DWORD PTR [rbp+0x698],0x636f5220
  401809:	mov    BYTE PTR [rbp+0x6b4],0x0
  401810:	mov    QWORD PTR [rsp+0x6fa],rax
  401818:	movabs rax,0x6b6e75462f706f50
  401822:	mov    QWORD PTR [rsp+0x754],rax
  40182a:	movabs rax,0x74657261626143
  401834:	mov    QWORD PTR [rsp+0x7ae],rax
  40183c:	movabs rax,0x657661572077654e
  401846:	mov    QWORD PTR [rsp+0x7cc],rax
  40184e:	movabs rax,0x6564616863797350
  401858:	mov    QWORD PTR [rsp+0x7ea],rax
  401860:	movabs rax,0x656e7574776f6853
  40186a:	mov    QWORD PTR [rsp+0x826],rax
  401872:	movabs rax,0x72656c69617254
  40187c:	vmovdqa xmm0,XMMWORD PTR [rip+0x81c]        # 4020a0 <_IO_stdin_used@@Base+0xa0>
  401884:	mov    esi,0x3034
  401889:	mov    QWORD PTR [rsp+0x844],rax
  401891:	movabs rax,0x6e75502064696341
  40189b:	mov    r9d,0x73
  4018a1:	mov    r10d,0x69
  4018a7:	mov    r11d,0x6c61
  4018ad:	mov    r8d,0x656c
  4018b3:	mov    DWORD PTR [rsp+0x718],0x20706f54
  4018be:	mov    edi,0x70
  4018c3:	mov    WORD PTR [rbp+0x70c],si
  4018ca:	mov    QWORD PTR [rsp+0x89e],rax
  4018d2:	movabs rsi,0x6169747369726843
  4018dc:	movabs rax,0x7a614a2064696341
  4018e6:	mov    r12d,0x6b
  4018ec:	vmovaps XMMWORD PTR [rsp+0x790],xmm0
  4018f5:	mov    WORD PTR [rbp+0x81e],r9w
  4018fd:	mov    QWORD PTR [rsp+0x736],rsi
  401905:	mov    DWORD PTR [rsp+0x772],0x676e754a
  401910:	mov    DWORD PTR [rsp+0x880],0x62697254
  40191b:	mov    WORD PTR [rbp+0x766],r8w
  401923:	mov    WORD PTR [rbp+0x874],r11w
  40192b:	mov    DWORD PTR [rsp+0x6dc],0x746c7543
  401936:	mov    WORD PTR [rbp+0x732],di
  40193d:	mov    DWORD PTR [rsp+0x808],0x65766152
  401948:	mov    DWORD PTR [rsp+0x862],0x462d6f4c
  401953:	mov    BYTE PTR [rbp+0x6d0],0x0
  40195a:	mov    WORD PTR [rbp+0x856],r10w
  401962:	mov    BYTE PTR [rbp+0x70e],0x0
  401969:	mov    DWORD PTR [rbp+0x72e],0x6152206e
  401973:	mov    BYTE PTR [rbp+0x74c],0x0
  40197a:	mov    BYTE PTR [rbp+0x768],0x0
  401981:	mov    BYTE PTR [rbp+0x7c4],0x0
  401988:	mov    DWORD PTR [rbp+0x7e2],0x63696c
  401992:	mov    BYTE PTR [rbp+0x7fc],0x0
  401999:	mov    BYTE PTR [rbp+0x876],0x0
  4019a0:	mov    WORD PTR [rbp+0x896],r12w
  4019a8:	mov    QWORD PTR [rsp+0x8bc],rax
  4019b0:	mov    eax,0x7a
  4019b5:	mov    WORD PTR [rbp+0x8b4],ax
  4019bc:	mov    eax,0x61
  4019c1:	mov    DWORD PTR [rsp+0x8da],0x6b6c6f50
  4019cc:	mov    WORD PTR [rbp+0x8ce],ax
  4019d3:	mov    eax,0x6f
  4019d8:	mov    DWORD PTR [rsp+0x8f8],0x72746552
  4019e3:	mov    WORD PTR [rbp+0x8ec],ax
  4019ea:	movabs rax,0x6c61636973754d
  4019f4:	mov    QWORD PTR [rsp+0x916],rax
  4019fc:	movabs rax,0x522026206b636f52
  401a06:	mov    QWORD PTR [rsp+0x934],rax
  401a0e:	movabs rax,0x636f522064726148
  401a18:	mov    QWORD PTR [rsp+0x952],rax
  401a20:	mov    eax,0x6b
  401a25:	mov    WORD PTR [rbp+0x94a],ax
  401a2c:	mov    DWORD PTR [rbp+0x92c],0x6c6c6f
  401a36:	mov    rdx,QWORD PTR [rsp]
  401a3a:	lea    rsi,[rip+0x5da]        # 40201b <_IO_stdin_used@@Base+0x1b>
  401a41:	mov    edi,0x1
  401a46:	xor    eax,eax
  401a48:	call   4010c0 <__printf_chk@plt>
  401a4d:	mov    rdx,r13
  401a50:	lea    rsi,[rip+0x5d1]        # 402028 <_IO_stdin_used@@Base+0x28>
  401a57:	mov    edi,0x1
  401a5c:	xor    eax,eax
  401a5e:	call   4010c0 <__printf_chk@plt>
  401a63:	mov    rdx,r14
  401a66:	lea    rsi,[rip+0x5c9]        # 402036 <_IO_stdin_used@@Base+0x36>
  401a6d:	mov    edi,0x1
  401a72:	xor    eax,eax
  401a74:	call   4010c0 <__printf_chk@plt>
  401a79:	mov    rdx,r15
  401a7c:	lea    rsi,[rip+0x5bf]        # 402042 <_IO_stdin_used@@Base+0x42>
  401a83:	mov    edi,0x1
  401a88:	xor    eax,eax
  401a8a:	call   4010c0 <__printf_chk@plt>
  401a8f:	mov    r8d,DWORD PTR [rsp+0xc]
  401a94:	lea    rsi,[rip+0x5b1]        # 40204c <_IO_stdin_used@@Base+0x4c>
  401a9b:	movsx  edx,r8b
  401a9f:	mov    edi,0x1
  401aa4:	xor    eax,eax
  401aa6:	call   4010c0 <__printf_chk@plt>
  401aab:	mov    ecx,DWORD PTR [rsp+0x8]
  401aaf:	lea    rsi,[rip+0x5a4]        # 40205a <_IO_stdin_used@@Base+0x5a>
  401ab6:	movsx  rdx,cl
  401aba:	imul   rdx,rdx,0x1e
  401abe:	mov    edi,0x1
  401ac3:	xor    eax,eax
  401ac5:	add    rdx,rbp
  401ac8:	call   4010c0 <__printf_chk@plt>
  401acd:	mov    rdi,rbx
  401ad0:	call   401090 <fclose@plt>
  401ad5:	xor    eax,eax
  401ad7:	mov    rdx,QWORD PTR [rsp+0x9e8]
  401adf:	xor    rdx,QWORD PTR fs:0x28
  401ae8:	jne    401afc <main@@Base+0xa0c>
  401aea:	add    rsp,0x9f8
  401af1:	pop    rbx
  401af2:	pop    rbp
  401af3:	pop    r12
  401af5:	pop    r13
  401af7:	pop    r14
  401af9:	pop    r15
  401afb:	ret    
  401afc:	call   4010a0 <__stack_chk_fail@plt>
  401b01:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401b0b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000401b10 <_start@@Base>:
  401b10:	endbr64 
  401b14:	xor    ebp,ebp
  401b16:	mov    r9,rdx
  401b19:	pop    rsi
  401b1a:	mov    rdx,rsp
  401b1d:	and    rsp,0xfffffffffffffff0
  401b21:	push   rax
  401b22:	push   rsp
  401b23:	mov    r8,0x401c70
  401b2a:	mov    rcx,0x401c00
  401b31:	mov    rdi,0x4010f0
  401b38:	call   QWORD PTR [rip+0x24b2]        # 403ff0 <__libc_start_main@GLIBC_2.2.5>
  401b3e:	hlt    
  401b3f:	nop
  401b40:	endbr64 
  401b44:	ret    
  401b45:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401b4f:	nop
  401b50:	mov    eax,0x404058
  401b55:	cmp    rax,0x404058
  401b5b:	je     401b70 <_start@@Base+0x60>
  401b5d:	mov    eax,0x0
  401b62:	test   rax,rax
  401b65:	je     401b70 <_start@@Base+0x60>
  401b67:	mov    edi,0x404058
  401b6c:	jmp    rax
  401b6e:	xchg   ax,ax
  401b70:	ret    
  401b71:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  401b7c:	nop    DWORD PTR [rax+0x0]
  401b80:	mov    esi,0x404058
  401b85:	sub    rsi,0x404058
  401b8c:	sar    rsi,0x3
  401b90:	mov    rax,rsi
  401b93:	shr    rax,0x3f
  401b97:	add    rsi,rax
  401b9a:	sar    rsi,1
  401b9d:	je     401bb0 <_start@@Base+0xa0>
  401b9f:	mov    eax,0x0
  401ba4:	test   rax,rax
  401ba7:	je     401bb0 <_start@@Base+0xa0>
  401ba9:	mov    edi,0x404058
  401bae:	jmp    rax
  401bb0:	ret    
  401bb1:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  401bbc:	nop    DWORD PTR [rax+0x0]
  401bc0:	endbr64 
  401bc4:	cmp    BYTE PTR [rip+0x248d],0x0        # 404058 <__bss_start@@Base>
  401bcb:	jne    401be0 <_start@@Base+0xd0>
  401bcd:	push   rbp
  401bce:	mov    rbp,rsp
  401bd1:	call   401b50 <_start@@Base+0x40>
  401bd6:	mov    BYTE PTR [rip+0x247b],0x1        # 404058 <__bss_start@@Base>
  401bdd:	pop    rbp
  401bde:	ret    
  401bdf:	nop
  401be0:	ret    
  401be1:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  401bec:	nop    DWORD PTR [rax+0x0]
  401bf0:	endbr64 
  401bf4:	jmp    401b80 <_start@@Base+0x70>
  401bf6:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000401c00 <__libc_csu_init@@Base>:
  401c00:	endbr64 
  401c04:	push   r15
  401c06:	lea    r15,[rip+0x2203]        # 403e10 <_IO_stdin_used@@Base+0x1e10>
  401c0d:	push   r14
  401c0f:	mov    r14,rdx
  401c12:	push   r13
  401c14:	mov    r13,rsi
  401c17:	push   r12
  401c19:	mov    r12d,edi
  401c1c:	push   rbp
  401c1d:	lea    rbp,[rip+0x21f4]        # 403e18 <_IO_stdin_used@@Base+0x1e18>
  401c24:	push   rbx
  401c25:	sub    rbp,r15
  401c28:	sub    rsp,0x8
  401c2c:	call   401000 <fclose@plt-0x90>
  401c31:	sar    rbp,0x3
  401c35:	je     401c56 <__libc_csu_init@@Base+0x56>
  401c37:	xor    ebx,ebx
  401c39:	nop    DWORD PTR [rax+0x0]
  401c40:	mov    rdx,r14
  401c43:	mov    rsi,r13
  401c46:	mov    edi,r12d
  401c49:	call   QWORD PTR [r15+rbx*8]
  401c4d:	add    rbx,0x1
  401c51:	cmp    rbp,rbx
  401c54:	jne    401c40 <__libc_csu_init@@Base+0x40>
  401c56:	add    rsp,0x8
  401c5a:	pop    rbx
  401c5b:	pop    rbp
  401c5c:	pop    r12
  401c5e:	pop    r13
  401c60:	pop    r14
  401c62:	pop    r15
  401c64:	ret    
  401c65:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

0000000000401c70 <__libc_csu_fini@@Base>:
  401c70:	endbr64 
  401c74:	ret    

Disassembly of section .fini:

0000000000401c78 <.fini>:
  401c78:	endbr64 
  401c7c:	sub    rsp,0x8
  401c80:	add    rsp,0x8
  401c84:	ret    
