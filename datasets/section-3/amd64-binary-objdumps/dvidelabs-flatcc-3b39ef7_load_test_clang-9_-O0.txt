
../repos/dvidelabs-flatcc-3b39ef7/test/load_test/load_test:     file format elf64-x86-64


Disassembly of section .init:

0000000000403000 <.init>:
  403000:	endbr64 
  403004:	sub    rsp,0x8
  403008:	mov    rax,QWORD PTR [rip+0xdfe9]        # 410ff8 <__gmon_start__>
  40300f:	test   rax,rax
  403012:	je     403016 <free@plt-0x1a>
  403014:	call   rax
  403016:	add    rsp,0x8
  40301a:	ret    

Disassembly of section .plt:

0000000000403020 <free@plt-0x10>:
  403020:	push   QWORD PTR [rip+0xdfe2]        # 411008 <flatcc_builder_padding_base@@Base+0x4888>
  403026:	jmp    QWORD PTR [rip+0xdfe4]        # 411010 <flatcc_builder_padding_base@@Base+0x4890>
  40302c:	nop    DWORD PTR [rax+0x0]

0000000000403030 <free@plt>:
  403030:	jmp    QWORD PTR [rip+0xdfe2]        # 411018 <free@GLIBC_2.2.5>
  403036:	push   0x0
  40303b:	jmp    403020 <free@plt-0x10>

0000000000403040 <strncpy@plt>:
  403040:	jmp    QWORD PTR [rip+0xdfda]        # 411020 <strncpy@GLIBC_2.2.5>
  403046:	push   0x1
  40304b:	jmp    403020 <free@plt-0x10>

0000000000403050 <fclose@plt>:
  403050:	jmp    QWORD PTR [rip+0xdfd2]        # 411028 <fclose@GLIBC_2.2.5>
  403056:	push   0x2
  40305b:	jmp    403020 <free@plt-0x10>

0000000000403060 <strlen@plt>:
  403060:	jmp    QWORD PTR [rip+0xdfca]        # 411030 <strlen@GLIBC_2.2.5>
  403066:	push   0x3
  40306b:	jmp    403020 <free@plt-0x10>

0000000000403070 <printf@plt>:
  403070:	jmp    QWORD PTR [rip+0xdfc2]        # 411038 <printf@GLIBC_2.2.5>
  403076:	push   0x4
  40307b:	jmp    403020 <free@plt-0x10>

0000000000403080 <gettimeofday@plt>:
  403080:	jmp    QWORD PTR [rip+0xdfba]        # 411040 <gettimeofday@GLIBC_2.2.5>
  403086:	push   0x5
  40308b:	jmp    403020 <free@plt-0x10>

0000000000403090 <__assert_fail@plt>:
  403090:	jmp    QWORD PTR [rip+0xdfb2]        # 411048 <__assert_fail@GLIBC_2.2.5>
  403096:	push   0x6
  40309b:	jmp    403020 <free@plt-0x10>

00000000004030a0 <memset@plt>:
  4030a0:	jmp    QWORD PTR [rip+0xdfaa]        # 411050 <memset@GLIBC_2.2.5>
  4030a6:	push   0x7
  4030ab:	jmp    403020 <free@plt-0x10>

00000000004030b0 <memchr@plt>:
  4030b0:	jmp    QWORD PTR [rip+0xdfa2]        # 411058 <memchr@GLIBC_2.2.5>
  4030b6:	push   0x8
  4030bb:	jmp    403020 <free@plt-0x10>

00000000004030c0 <memcmp@plt>:
  4030c0:	jmp    QWORD PTR [rip+0xdf9a]        # 411060 <memcmp@GLIBC_2.2.5>
  4030c6:	push   0x9
  4030cb:	jmp    403020 <free@plt-0x10>

00000000004030d0 <strcmp@plt>:
  4030d0:	jmp    QWORD PTR [rip+0xdf92]        # 411068 <strcmp@GLIBC_2.2.5>
  4030d6:	push   0xa
  4030db:	jmp    403020 <free@plt-0x10>

00000000004030e0 <memcpy@plt>:
  4030e0:	jmp    QWORD PTR [rip+0xdf8a]        # 411070 <memcpy@GLIBC_2.14>
  4030e6:	push   0xb
  4030eb:	jmp    403020 <free@plt-0x10>

00000000004030f0 <malloc@plt>:
  4030f0:	jmp    QWORD PTR [rip+0xdf82]        # 411078 <malloc@GLIBC_2.2.5>
  4030f6:	push   0xc
  4030fb:	jmp    403020 <free@plt-0x10>

0000000000403100 <realloc@plt>:
  403100:	jmp    QWORD PTR [rip+0xdf7a]        # 411080 <realloc@GLIBC_2.2.5>
  403106:	push   0xd
  40310b:	jmp    403020 <free@plt-0x10>

0000000000403110 <fopen@plt>:
  403110:	jmp    QWORD PTR [rip+0xdf72]        # 411088 <fopen@GLIBC_2.2.5>
  403116:	push   0xe
  40311b:	jmp    403020 <free@plt-0x10>

0000000000403120 <fwrite@plt>:
  403120:	jmp    QWORD PTR [rip+0xdf6a]        # 411090 <fwrite@GLIBC_2.2.5>
  403126:	push   0xf
  40312b:	jmp    403020 <free@plt-0x10>

0000000000403130 <posix_memalign@plt>:
  403130:	jmp    QWORD PTR [rip+0xdf62]        # 411098 <posix_memalign@GLIBC_2.2.5>
  403136:	push   0x10
  40313b:	jmp    403020 <free@plt-0x10>

Disassembly of section .text:

0000000000403140 <_start@@Base>:
  403140:	endbr64 
  403144:	xor    ebp,ebp
  403146:	mov    r9,rdx
  403149:	pop    rsi
  40314a:	mov    rdx,rsp
  40314d:	and    rsp,0xfffffffffffffff0
  403151:	push   rax
  403152:	push   rsp
  403153:	mov    r8,0x40b310
  40315a:	mov    rcx,0x40b2a0
  403161:	mov    rdi,0x403230
  403168:	call   QWORD PTR [rip+0xde82]        # 410ff0 <__libc_start_main@GLIBC_2.2.5>
  40316e:	hlt    
  40316f:	nop
  403170:	endbr64 
  403174:	ret    
  403175:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40317f:	nop
  403180:	mov    eax,0x4110b0
  403185:	cmp    rax,0x4110b0
  40318b:	je     4031a0 <_start@@Base+0x60>
  40318d:	mov    eax,0x0
  403192:	test   rax,rax
  403195:	je     4031a0 <_start@@Base+0x60>
  403197:	mov    edi,0x4110b0
  40319c:	jmp    rax
  40319e:	xchg   ax,ax
  4031a0:	ret    
  4031a1:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4031ac:	nop    DWORD PTR [rax+0x0]
  4031b0:	mov    esi,0x4110b0
  4031b5:	sub    rsi,0x4110b0
  4031bc:	mov    rax,rsi
  4031bf:	shr    rsi,0x3f
  4031c3:	sar    rax,0x3
  4031c7:	add    rsi,rax
  4031ca:	sar    rsi,1
  4031cd:	je     4031e0 <_start@@Base+0xa0>
  4031cf:	mov    eax,0x0
  4031d4:	test   rax,rax
  4031d7:	je     4031e0 <_start@@Base+0xa0>
  4031d9:	mov    edi,0x4110b0
  4031de:	jmp    rax
  4031e0:	ret    
  4031e1:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4031ec:	nop    DWORD PTR [rax+0x0]
  4031f0:	endbr64 
  4031f4:	cmp    BYTE PTR [rip+0xdeb5],0x0        # 4110b0 <__bss_start@@Base>
  4031fb:	jne    403210 <_start@@Base+0xd0>
  4031fd:	push   rbp
  4031fe:	mov    rbp,rsp
  403201:	call   403180 <_start@@Base+0x40>
  403206:	mov    BYTE PTR [rip+0xdea3],0x1        # 4110b0 <__bss_start@@Base>
  40320d:	pop    rbp
  40320e:	ret    
  40320f:	nop
  403210:	ret    
  403211:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40321c:	nop    DWORD PTR [rax+0x0]
  403220:	endbr64 
  403224:	jmp    4031b0 <_start@@Base+0x70>
  403226:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000403230 <main@@Base>:
  403230:	push   rbp
  403231:	mov    rbp,rsp
  403234:	sub    rsp,0x220
  40323b:	mov    DWORD PTR [rbp-0x4],0x0
  403242:	mov    DWORD PTR [rbp-0x8],edi
  403245:	mov    QWORD PTR [rbp-0x10],rsi
  403249:	mov    DWORD PTR [rbp-0x1dc],0xa
  403253:	mov    DWORD PTR [rbp-0x1e4],0x0
  40325d:	lea    rax,[rbp-0x1b0]
  403264:	mov    QWORD PTR [rbp-0x1b8],rax
  40326b:	mov    rdi,QWORD PTR [rbp-0x1b8]
  403272:	call   404b70 <flatcc_builder_init@@Base>
  403277:	mov    rdi,QWORD PTR [rbp-0x1b8]
  40327e:	mov    DWORD PTR [rbp-0x1ec],eax
  403284:	call   4035d0 <main@@Base+0x3a0>
  403289:	mov    rdi,QWORD PTR [rbp-0x1b8]
  403290:	lea    rsi,[rbp-0x28]
  403294:	mov    DWORD PTR [rbp-0x1f0],eax
  40329a:	call   40a150 <flatcc_builder_finalize_buffer@@Base>
  40329f:	mov    QWORD PTR [rbp-0x20],rax
  4032a3:	lea    rdi,[rip+0x8da6]        # 40c050 <_IO_stdin_used@@Base+0x50>
  4032aa:	lea    rsi,[rip+0x8db5]        # 40c066 <_IO_stdin_used@@Base+0x66>
  4032b1:	call   403110 <fopen@plt>
  4032b6:	mov    QWORD PTR [rbp-0x18],rax
  4032ba:	cmp    QWORD PTR [rbp-0x18],0x0
  4032bf:	jne    4032d4 <main@@Base+0xa4>
  4032c5:	mov    DWORD PTR [rbp-0x1e4],0xffffffff
  4032cf:	jmp    40358b <main@@Base+0x35b>
  4032d4:	mov    rax,QWORD PTR [rbp-0x28]
  4032d8:	mov    rdi,QWORD PTR [rbp-0x20]
  4032dc:	mov    rdx,QWORD PTR [rbp-0x28]
  4032e0:	mov    rcx,QWORD PTR [rbp-0x18]
  4032e4:	mov    esi,0x1
  4032e9:	mov    QWORD PTR [rbp-0x1f8],rax
  4032f0:	call   403120 <fwrite@plt>
  4032f5:	mov    rcx,QWORD PTR [rbp-0x1f8]
  4032fc:	cmp    rcx,rax
  4032ff:	setne  r8b
  403303:	and    r8b,0x1
  403307:	movzx  r9d,r8b
  40330b:	or     r9d,DWORD PTR [rbp-0x1e4]
  403312:	mov    DWORD PTR [rbp-0x1e4],r9d
  403319:	mov    rdi,QWORD PTR [rbp-0x18]
  40331d:	call   403050 <fclose@plt>
  403322:	cmp    DWORD PTR [rbp-0x1e4],0x0
  403329:	je     403334 <main@@Base+0x104>
  40332f:	jmp    40358b <main@@Base+0x35b>
  403334:	mov    rsi,QWORD PTR [rbp-0x28]
  403338:	lea    rdi,[rip+0x8d2a]        # 40c069 <_IO_stdin_used@@Base+0x69>
  40333f:	mov    al,0x0
  403341:	call   403070 <printf@plt>
  403346:	lea    rdi,[rip+0x8d2e]        # 40c07b <_IO_stdin_used@@Base+0x7b>
  40334d:	mov    DWORD PTR [rbp-0x1fc],eax
  403353:	mov    al,0x0
  403355:	call   403070 <printf@plt>
  40335a:	mov    DWORD PTR [rbp-0x200],eax
  403360:	call   403670 <main@@Base+0x440>
  403365:	vmovsd QWORD PTR [rbp-0x1d0],xmm0
  40336d:	mov    DWORD PTR [rbp-0x1e0],0x0
  403377:	mov    eax,DWORD PTR [rbp-0x1e0]
  40337d:	cmp    eax,DWORD PTR [rbp-0x1dc]
  403383:	jge    403554 <main@@Base+0x324>
  403389:	mov    rdi,QWORD PTR [rbp-0x1b8]
  403390:	call   4035d0 <main@@Base+0x3a0>
  403395:	mov    rdi,QWORD PTR [rbp-0x1b8]
  40339c:	mov    rsi,QWORD PTR [rbp-0x20]
  4033a0:	mov    rdx,QWORD PTR [rbp-0x28]
  4033a4:	mov    DWORD PTR [rbp-0x204],eax
  4033aa:	call   40a0b0 <flatcc_builder_copy_buffer@@Base>
  4033af:	mov    rdi,QWORD PTR [rbp-0x20]
  4033b3:	mov    QWORD PTR [rbp-0x210],rax
  4033ba:	call   4036e0 <main@@Base+0x4b0>
  4033bf:	mov    QWORD PTR [rbp-0x1c0],rax
  4033c6:	mov    rdi,QWORD PTR [rbp-0x1c0]
  4033cd:	call   403750 <main@@Base+0x520>
  4033d2:	lea    rsi,[rip+0x8cb4]        # 40c08d <_IO_stdin_used@@Base+0x8d>
  4033d9:	mov    rdi,rax
  4033dc:	call   4030d0 <strcmp@plt>
  4033e1:	or     eax,DWORD PTR [rbp-0x1e4]
  4033e7:	mov    DWORD PTR [rbp-0x1e4],eax
  4033ed:	cmp    DWORD PTR [rbp-0x1e4],0x0
  4033f4:	jne    4033ff <main@@Base+0x1cf>
  4033fa:	jmp    40341e <main@@Base+0x1ee>
  4033ff:	lea    rdi,[rip+0x8c94]        # 40c09a <_IO_stdin_used@@Base+0x9a>
  403406:	lea    rsi,[rip+0x8c96]        # 40c0a3 <_IO_stdin_used@@Base+0xa3>
  40340d:	mov    edx,0x8b
  403412:	lea    rcx,[rip+0x8cef]        # 40c108 <_IO_stdin_used@@Base+0x108>
  403419:	call   403090 <__assert_fail@plt>
  40341e:	mov    rdi,QWORD PTR [rbp-0x1c0]
  403425:	call   403890 <main@@Base+0x660>
  40342a:	mov    QWORD PTR [rbp-0x1c8],rax
  403431:	mov    rdi,QWORD PTR [rbp-0x1c8]
  403438:	call   4039c0 <main@@Base+0x790>
  40343d:	cmp    rax,0x3e8
  403443:	setne  cl
  403446:	and    cl,0x1
  403449:	movzx  edx,cl
  40344c:	or     edx,DWORD PTR [rbp-0x1e4]
  403452:	mov    DWORD PTR [rbp-0x1e4],edx
  403458:	cmp    DWORD PTR [rbp-0x1e4],0x0
  40345f:	jne    40346a <main@@Base+0x23a>
  403465:	jmp    403489 <main@@Base+0x259>
  40346a:	lea    rdi,[rip+0x8c29]        # 40c09a <_IO_stdin_used@@Base+0x9a>
  403471:	lea    rsi,[rip+0x8c2b]        # 40c0a3 <_IO_stdin_used@@Base+0xa3>
  403478:	mov    edx,0x8f
  40347d:	lea    rcx,[rip+0x8c84]        # 40c108 <_IO_stdin_used@@Base+0x108>
  403484:	call   403090 <__assert_fail@plt>
  403489:	mov    DWORD PTR [rbp-0x1e8],0x0
  403493:	cmp    DWORD PTR [rbp-0x1e8],0x3e8
  40349d:	jge    403529 <main@@Base+0x2f9>
  4034a3:	mov    rdi,QWORD PTR [rbp-0x20]
  4034a7:	mov    rax,QWORD PTR [rbp-0x1c8]
  4034ae:	movsxd rsi,DWORD PTR [rbp-0x1e8]
  4034b5:	mov    QWORD PTR [rbp-0x218],rdi
  4034bc:	mov    rdi,rax
  4034bf:	call   403c10 <main@@Base+0x9e0>
  4034c4:	mov    rdi,QWORD PTR [rbp-0x218]
  4034cb:	mov    rsi,rax
  4034ce:	call   403a10 <main@@Base+0x7e0>
  4034d3:	or     eax,DWORD PTR [rbp-0x1e4]
  4034d9:	mov    DWORD PTR [rbp-0x1e4],eax
  4034df:	cmp    DWORD PTR [rbp-0x1e4],0x0
  4034e6:	jne    4034f1 <main@@Base+0x2c1>
  4034ec:	jmp    403510 <main@@Base+0x2e0>
  4034f1:	lea    rdi,[rip+0x8ba2]        # 40c09a <_IO_stdin_used@@Base+0x9a>
  4034f8:	lea    rsi,[rip+0x8ba4]        # 40c0a3 <_IO_stdin_used@@Base+0xa3>
  4034ff:	mov    edx,0x93
  403504:	lea    rcx,[rip+0x8bfd]        # 40c108 <_IO_stdin_used@@Base+0x108>
  40350b:	call   403090 <__assert_fail@plt>
  403510:	jmp    403515 <main@@Base+0x2e5>
  403515:	mov    eax,DWORD PTR [rbp-0x1e8]
  40351b:	add    eax,0x1
  40351e:	mov    DWORD PTR [rbp-0x1e8],eax
  403524:	jmp    403493 <main@@Base+0x263>
  403529:	cmp    DWORD PTR [rbp-0x1e4],0x0
  403530:	je     40353b <main@@Base+0x30b>
  403536:	jmp    40358b <main@@Base+0x35b>
  40353b:	jmp    403540 <main@@Base+0x310>
  403540:	mov    eax,DWORD PTR [rbp-0x1e0]
  403546:	add    eax,0x1
  403549:	mov    DWORD PTR [rbp-0x1e0],eax
  40354f:	jmp    403377 <main@@Base+0x147>
  403554:	call   403670 <main@@Base+0x440>
  403559:	xor    eax,eax
  40355b:	mov    ecx,eax
  40355d:	vmovsd QWORD PTR [rbp-0x1d8],xmm0
  403565:	vmovsd xmm0,QWORD PTR [rbp-0x1d0]
  40356d:	vmovsd xmm1,QWORD PTR [rbp-0x1d8]
  403575:	mov    rsi,QWORD PTR [rbp-0x28]
  403579:	mov    edx,DWORD PTR [rbp-0x1dc]
  40357f:	lea    rdi,[rip+0x8b99]        # 40c11f <_IO_stdin_used@@Base+0x11f>
  403586:	call   403cb0 <main@@Base+0xa80>
  40358b:	mov    rdi,QWORD PTR [rbp-0x1b8]
  403592:	call   404e20 <flatcc_builder_clear@@Base>
  403597:	mov    rdi,QWORD PTR [rbp-0x20]
  40359b:	call   403030 <free@plt>
  4035a0:	cmp    DWORD PTR [rbp-0x1e4],0x0
  4035a7:	je     4035bb <main@@Base+0x38b>
  4035ad:	lea    rdi,[rip+0x8b94]        # 40c148 <_IO_stdin_used@@Base+0x148>
  4035b4:	mov    al,0x0
  4035b6:	call   403070 <printf@plt>
  4035bb:	mov    eax,DWORD PTR [rbp-0x1e4]
  4035c1:	add    rsp,0x220
  4035c8:	pop    rbp
  4035c9:	ret    
  4035ca:	nop    WORD PTR [rax+rax*1+0x0]
  4035d0:	push   rbp
  4035d1:	mov    rbp,rsp
  4035d4:	sub    rsp,0x20
  4035d8:	mov    QWORD PTR [rbp-0x8],rdi
  4035dc:	mov    rdi,QWORD PTR [rbp-0x8]
  4035e0:	call   404df0 <flatcc_builder_reset@@Base>
  4035e5:	mov    rdi,QWORD PTR [rbp-0x8]
  4035e9:	mov    DWORD PTR [rbp-0x10],eax
  4035ec:	call   403ed0 <main@@Base+0xca0>
  4035f1:	mov    rdi,QWORD PTR [rbp-0x8]
  4035f5:	lea    rsi,[rip+0x8a91]        # 40c08d <_IO_stdin_used@@Base+0x8d>
  4035fc:	mov    DWORD PTR [rbp-0x14],eax
  4035ff:	call   403f20 <main@@Base+0xcf0>
  403604:	mov    rdi,QWORD PTR [rbp-0x8]
  403608:	mov    DWORD PTR [rbp-0x18],eax
  40360b:	call   403f60 <main@@Base+0xd30>
  403610:	mov    DWORD PTR [rbp-0xc],eax
  403613:	cmp    DWORD PTR [rbp-0xc],0x0
  403617:	je     403622 <main@@Base+0x3f2>
  40361d:	jmp    403641 <main@@Base+0x411>
  403622:	lea    rdi,[rip+0x8b31]        # 40c15a <_IO_stdin_used@@Base+0x15a>
  403629:	lea    rsi,[rip+0x8a73]        # 40c0a3 <_IO_stdin_used@@Base+0xa3>
  403630:	mov    edx,0x38
  403635:	lea    rcx,[rip+0x8b21]        # 40c15d <_IO_stdin_used@@Base+0x15d>
  40363c:	call   403090 <__assert_fail@plt>
  403641:	mov    rdi,QWORD PTR [rbp-0x8]
  403645:	mov    esi,DWORD PTR [rbp-0xc]
  403648:	call   404000 <main@@Base+0xdd0>
  40364d:	mov    rdi,QWORD PTR [rbp-0x8]
  403651:	mov    DWORD PTR [rbp-0x1c],eax
  403654:	call   404060 <main@@Base+0xe30>
  403659:	xor    ecx,ecx
  40365b:	mov    DWORD PTR [rbp-0x20],eax
  40365e:	mov    eax,ecx
  403660:	add    rsp,0x20
  403664:	pop    rbp
  403665:	ret    
  403666:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403670:	push   rbp
  403671:	mov    rbp,rsp
  403674:	sub    rsp,0x10
  403678:	xor    eax,eax
  40367a:	mov    esi,eax
  40367c:	lea    rdi,[rbp-0x10]
  403680:	call   403080 <gettimeofday@plt>
  403685:	cmp    QWORD PTR [rip+0xde1b],0x0        # 4114a8 <__bss_start@@Base+0x3f8>
  40368d:	jne    4036a9 <main@@Base+0x479>
  403693:	mov    rax,QWORD PTR [rbp-0x10]
  403697:	mov    QWORD PTR [rip+0xde0a],rax        # 4114a8 <__bss_start@@Base+0x3f8>
  40369e:	mov    rax,QWORD PTR [rbp-0x8]
  4036a2:	mov    QWORD PTR [rip+0xde07],rax        # 4114b0 <__bss_start@@Base+0x400>
  4036a9:	vmovsd xmm0,QWORD PTR [rip+0x8957]        # 40c008 <_IO_stdin_used@@Base+0x8>
  4036b1:	mov    rax,QWORD PTR [rbp-0x10]
  4036b5:	sub    rax,QWORD PTR [rip+0xddec]        # 4114a8 <__bss_start@@Base+0x3f8>
  4036bc:	vcvtsi2sd xmm1,xmm1,rax
  4036c1:	mov    rax,QWORD PTR [rbp-0x8]
  4036c5:	sub    rax,QWORD PTR [rip+0xdde4]        # 4114b0 <__bss_start@@Base+0x400>
  4036cc:	vcvtsi2sd xmm2,xmm2,rax
  4036d1:	vdivsd xmm0,xmm2,xmm0
  4036d5:	vaddsd xmm0,xmm1,xmm0
  4036d9:	add    rsp,0x10
  4036dd:	pop    rbp
  4036de:	ret    
  4036df:	nop
  4036e0:	push   rbp
  4036e1:	mov    rbp,rsp
  4036e4:	sub    rsp,0x20
  4036e8:	mov    QWORD PTR [rbp-0x8],rdi
  4036ec:	lea    rax,[rip+0x8a96]        # 40c189 <_IO_stdin_used@@Base+0x189>
  4036f3:	mov    QWORD PTR [rbp-0x10],rax
  4036f7:	cmp    QWORD PTR [rbp-0x8],0x0
  4036fc:	je     403718 <main@@Base+0x4e8>
  403702:	mov    rdi,QWORD PTR [rbp-0x8]
  403706:	mov    rsi,QWORD PTR [rbp-0x10]
  40370a:	call   404510 <main@@Base+0x12e0>
  40370f:	cmp    eax,0x0
  403712:	jne    403725 <main@@Base+0x4f5>
  403718:	xor    eax,eax
  40371a:	mov    ecx,eax
  40371c:	mov    QWORD PTR [rbp-0x18],rcx
  403720:	jmp    403745 <main@@Base+0x515>
  403725:	mov    rax,QWORD PTR [rbp-0x8]
  403729:	mov    rdi,QWORD PTR [rbp-0x8]
  40372d:	mov    QWORD PTR [rbp-0x20],rax
  403731:	call   4045b0 <main@@Base+0x1380>
  403736:	mov    eax,eax
  403738:	mov    ecx,eax
  40373a:	mov    rdx,QWORD PTR [rbp-0x20]
  40373e:	add    rdx,rcx
  403741:	mov    QWORD PTR [rbp-0x18],rdx
  403745:	mov    rax,QWORD PTR [rbp-0x18]
  403749:	add    rsp,0x20
  40374d:	pop    rbp
  40374e:	ret    
  40374f:	nop
  403750:	push   rbp
  403751:	mov    rbp,rsp
  403754:	sub    rsp,0x30
  403758:	mov    QWORD PTR [rbp-0x8],rdi
  40375c:	mov    WORD PTR [rbp-0x12],0x0
  403762:	cmp    QWORD PTR [rbp-0x8],0x0
  403767:	je     403781 <main@@Base+0x551>
  40376d:	mov    al,0x1
  40376f:	test   al,0x1
  403771:	jne    40377c <main@@Base+0x54c>
  403777:	jmp    403781 <main@@Base+0x551>
  40377c:	jmp    4037a0 <main@@Base+0x570>
  403781:	lea    rdi,[rip+0x8bdc]        # 40c364 <_IO_stdin_used@@Base+0x364>
  403788:	lea    rsi,[rip+0x8bfb]        # 40c38a <_IO_stdin_used@@Base+0x38a>
  40378f:	mov    edx,0x2bb
  403794:	lea    rcx,[rip+0x8c68]        # 40c403 <_IO_stdin_used@@Base+0x403>
  40379b:	call   403090 <__assert_fail@plt>
  4037a0:	mov    WORD PTR [rbp-0x14],0x3
  4037a6:	mov    rax,QWORD PTR [rbp-0x8]
  4037aa:	mov    rcx,QWORD PTR [rbp-0x8]
  4037ae:	mov    rdi,rcx
  4037b1:	mov    QWORD PTR [rbp-0x28],rax
  4037b5:	call   404620 <main@@Base+0x13f0>
  4037ba:	xor    edx,edx
  4037bc:	mov    ecx,edx
  4037be:	movsxd rsi,eax
  4037c1:	sub    rcx,rsi
  4037c4:	mov    rsi,QWORD PTR [rbp-0x28]
  4037c8:	add    rsi,rcx
  4037cb:	mov    QWORD PTR [rbp-0x20],rsi
  4037cf:	mov    rcx,QWORD PTR [rbp-0x20]
  4037d3:	mov    rdi,rcx
  4037d6:	call   404640 <main@@Base+0x1410>
  4037db:	movzx  edx,ax
  4037de:	mov    ecx,edx
  4037e0:	movzx  edx,WORD PTR [rbp-0x14]
  4037e4:	add    edx,0x3
  4037e7:	movsxd rsi,edx
  4037ea:	shl    rsi,0x1
  4037ee:	cmp    rcx,rsi
  4037f1:	jb     40381b <main@@Base+0x5eb>
  4037f7:	mov    rax,QWORD PTR [rbp-0x20]
  4037fb:	movzx  ecx,WORD PTR [rbp-0x14]
  4037ff:	movsxd rdx,ecx
  403802:	shl    rdx,0x1
  403806:	add    rax,rdx
  403809:	add    rax,0x4
  40380f:	mov    rdi,rax
  403812:	call   404640 <main@@Base+0x1410>
  403817:	mov    WORD PTR [rbp-0x12],ax
  40381b:	cmp    WORD PTR [rbp-0x12],0x0
  403820:	je     403866 <main@@Base+0x636>
  403826:	mov    rax,QWORD PTR [rbp-0x8]
  40382a:	movzx  ecx,WORD PTR [rbp-0x12]
  40382e:	movsxd rdx,ecx
  403831:	add    rax,rdx
  403834:	mov    QWORD PTR [rbp-0x10],rax
  403838:	mov    rax,QWORD PTR [rbp-0x10]
  40383c:	add    rax,0x4
  403842:	mov    rdx,QWORD PTR [rbp-0x10]
  403846:	mov    rdi,rdx
  403849:	mov    QWORD PTR [rbp-0x30],rax
  40384d:	call   4045b0 <main@@Base+0x1380>
  403852:	mov    eax,eax
  403854:	mov    edx,eax
  403856:	mov    rsi,QWORD PTR [rbp-0x30]
  40385a:	add    rsi,rdx
  40385d:	mov    rax,rsi
  403860:	add    rsp,0x30
  403864:	pop    rbp
  403865:	ret    
  403866:	lea    rdi,[rip+0x8be7]        # 40c454 <_IO_stdin_used@@Base+0x454>
  40386d:	lea    rsi,[rip+0x8b16]        # 40c38a <_IO_stdin_used@@Base+0x38a>
  403874:	mov    edx,0x2bb
  403879:	lea    rcx,[rip+0x8b83]        # 40c403 <_IO_stdin_used@@Base+0x403>
  403880:	call   403090 <__assert_fail@plt>
  403885:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40388f:	nop
  403890:	push   rbp
  403891:	mov    rbp,rsp
  403894:	sub    rsp,0x40
  403898:	mov    QWORD PTR [rbp-0x10],rdi
  40389c:	mov    WORD PTR [rbp-0x1a],0x0
  4038a2:	cmp    QWORD PTR [rbp-0x10],0x0
  4038a7:	je     4038c1 <main@@Base+0x691>
  4038ad:	mov    al,0x1
  4038af:	test   al,0x1
  4038b1:	jne    4038bc <main@@Base+0x68c>
  4038b7:	jmp    4038c1 <main@@Base+0x691>
  4038bc:	jmp    4038e0 <main@@Base+0x6b0>
  4038c1:	lea    rdi,[rip+0x8a9c]        # 40c364 <_IO_stdin_used@@Base+0x364>
  4038c8:	lea    rsi,[rip+0x8abb]        # 40c38a <_IO_stdin_used@@Base+0x38a>
  4038cf:	mov    edx,0x2c7
  4038d4:	lea    rcx,[rip+0x8b9a]        # 40c475 <_IO_stdin_used@@Base+0x475>
  4038db:	call   403090 <__assert_fail@plt>
  4038e0:	mov    WORD PTR [rbp-0x1c],0xb
  4038e6:	mov    rax,QWORD PTR [rbp-0x10]
  4038ea:	mov    rcx,QWORD PTR [rbp-0x10]
  4038ee:	mov    rdi,rcx
  4038f1:	mov    QWORD PTR [rbp-0x30],rax
  4038f5:	call   404620 <main@@Base+0x13f0>
  4038fa:	xor    edx,edx
  4038fc:	mov    ecx,edx
  4038fe:	movsxd rsi,eax
  403901:	sub    rcx,rsi
  403904:	mov    rsi,QWORD PTR [rbp-0x30]
  403908:	add    rsi,rcx
  40390b:	mov    QWORD PTR [rbp-0x28],rsi
  40390f:	mov    rcx,QWORD PTR [rbp-0x28]
  403913:	mov    rdi,rcx
  403916:	call   404640 <main@@Base+0x1410>
  40391b:	movzx  edx,ax
  40391e:	mov    ecx,edx
  403920:	movzx  edx,WORD PTR [rbp-0x1c]
  403924:	add    edx,0x3
  403927:	movsxd rsi,edx
  40392a:	shl    rsi,0x1
  40392e:	cmp    rcx,rsi
  403931:	jb     40395b <main@@Base+0x72b>
  403937:	mov    rax,QWORD PTR [rbp-0x28]
  40393b:	movzx  ecx,WORD PTR [rbp-0x1c]
  40393f:	movsxd rdx,ecx
  403942:	shl    rdx,0x1
  403946:	add    rax,rdx
  403949:	add    rax,0x4
  40394f:	mov    rdi,rax
  403952:	call   404640 <main@@Base+0x1410>
  403957:	mov    WORD PTR [rbp-0x1a],ax
  40395b:	cmp    WORD PTR [rbp-0x1a],0x0
  403960:	je     4039a6 <main@@Base+0x776>
  403966:	mov    rax,QWORD PTR [rbp-0x10]
  40396a:	movzx  ecx,WORD PTR [rbp-0x1a]
  40396e:	movsxd rdx,ecx
  403971:	add    rax,rdx
  403974:	mov    QWORD PTR [rbp-0x18],rax
  403978:	mov    rax,QWORD PTR [rbp-0x18]
  40397c:	add    rax,0x4
  403982:	mov    rdx,QWORD PTR [rbp-0x18]
  403986:	mov    rdi,rdx
  403989:	mov    QWORD PTR [rbp-0x38],rax
  40398d:	call   4045b0 <main@@Base+0x1380>
  403992:	mov    eax,eax
  403994:	mov    edx,eax
  403996:	mov    rsi,QWORD PTR [rbp-0x38]
  40399a:	add    rsi,rdx
  40399d:	mov    QWORD PTR [rbp-0x8],rsi
  4039a1:	jmp    4039ae <main@@Base+0x77e>
  4039a6:	mov    QWORD PTR [rbp-0x8],0x0
  4039ae:	mov    rax,QWORD PTR [rbp-0x8]
  4039b2:	add    rsp,0x40
  4039b6:	pop    rbp
  4039b7:	ret    
  4039b8:	nop    DWORD PTR [rax+rax*1+0x0]
  4039c0:	push   rbp
  4039c1:	mov    rbp,rsp
  4039c4:	sub    rsp,0x10
  4039c8:	mov    QWORD PTR [rbp-0x8],rdi
  4039cc:	cmp    QWORD PTR [rbp-0x8],0x0
  4039d1:	je     4039f6 <main@@Base+0x7c6>
  4039d7:	mov    rax,QWORD PTR [rbp-0x8]
  4039db:	add    rax,0xfffffffffffffffc
  4039e1:	mov    rdi,rax
  4039e4:	call   4045b0 <main@@Base+0x1380>
  4039e9:	mov    eax,eax
  4039eb:	mov    ecx,eax
  4039ed:	mov    QWORD PTR [rbp-0x10],rcx
  4039f1:	jmp    403a03 <main@@Base+0x7d3>
  4039f6:	xor    eax,eax
  4039f8:	mov    ecx,eax
  4039fa:	mov    QWORD PTR [rbp-0x10],rcx
  4039fe:	jmp    403a03 <main@@Base+0x7d3>
  403a03:	mov    rax,QWORD PTR [rbp-0x10]
  403a07:	add    rsp,0x10
  403a0b:	pop    rbp
  403a0c:	ret    
  403a0d:	nop    DWORD PTR [rax]
  403a10:	push   rbp
  403a11:	mov    rbp,rsp
  403a14:	sub    rsp,0x40
  403a18:	mov    QWORD PTR [rbp-0x8],rdi
  403a1c:	mov    QWORD PTR [rbp-0x10],rsi
  403a20:	mov    rdi,QWORD PTR [rbp-0x10]
  403a24:	call   403750 <main@@Base+0x520>
  403a29:	mov    QWORD PTR [rbp-0x20],rax
  403a2d:	mov    rdi,QWORD PTR [rbp-0x10]
  403a31:	call   404690 <main@@Base+0x1460>
  403a36:	mov    QWORD PTR [rbp-0x28],rax
  403a3a:	mov    rdi,QWORD PTR [rbp-0x20]
  403a3e:	call   4047c0 <main@@Base+0x1590>
  403a43:	cmp    rax,0x2bc
  403a49:	je     403a6e <main@@Base+0x83e>
  403a4f:	lea    rdi,[rip+0xa0fc]        # 40db52 <flatcc_builder_padding_base@@Base+0x13d2>
  403a56:	lea    rsi,[rip+0x8646]        # 40c0a3 <_IO_stdin_used@@Base+0xa3>
  403a5d:	mov    edx,0x4a
  403a62:	lea    rcx,[rip+0x8a72]        # 40c4db <_IO_stdin_used@@Base+0x4db>
  403a69:	call   403090 <__assert_fail@plt>
  403a6e:	mov    rdi,QWORD PTR [rbp-0x28]
  403a72:	call   404810 <main@@Base+0x15e0>
  403a77:	cmp    rax,0x186a0
  403a7d:	je     403aa2 <main@@Base+0x872>
  403a83:	lea    rdi,[rip+0xa0c8]        # 40db52 <flatcc_builder_padding_base@@Base+0x13d2>
  403a8a:	lea    rsi,[rip+0x8612]        # 40c0a3 <_IO_stdin_used@@Base+0xa3>
  403a91:	mov    edx,0x4e
  403a96:	lea    rcx,[rip+0x8a3e]        # 40c4db <_IO_stdin_used@@Base+0x4db>
  403a9d:	call   403090 <__assert_fail@plt>
  403aa2:	mov    QWORD PTR [rbp-0x18],0x0
  403aaa:	cmp    QWORD PTR [rbp-0x18],0x64
  403aaf:	jae    403b8e <main@@Base+0x95e>
  403ab5:	mov    rax,QWORD PTR [rbp-0x20]
  403ab9:	imul   rcx,QWORD PTR [rbp-0x18],0x7
  403ac1:	add    rax,rcx
  403ac4:	lea    rsi,[rip+0x870a]        # 40c1d5 <_IO_stdin_used@@Base+0x1d5>
  403acb:	mov    edx,0x7
  403ad0:	mov    rdi,rax
  403ad3:	call   4030c0 <memcmp@plt>
  403ad8:	cmp    eax,0x0
  403adb:	je     403b76 <main@@Base+0x946>
  403ae1:	mov    rsi,QWORD PTR [rbp-0x18]
  403ae5:	cmp    QWORD PTR [rbp-0x20],0x0
  403aea:	mov    QWORD PTR [rbp-0x30],rsi
  403aee:	je     403b01 <main@@Base+0x8d1>
  403af4:	mov    rax,QWORD PTR [rbp-0x20]
  403af8:	mov    QWORD PTR [rbp-0x38],rax
  403afc:	jmp    403b11 <main@@Base+0x8e1>
  403b01:	lea    rax,[rip+0x8a34]        # 40c53c <_IO_stdin_used@@Base+0x53c>
  403b08:	mov    QWORD PTR [rbp-0x38],rax
  403b0c:	jmp    403b11 <main@@Base+0x8e1>
  403b11:	mov    rax,QWORD PTR [rbp-0x38]
  403b15:	lea    rdi,[rip+0x8a00]        # 40c51c <_IO_stdin_used@@Base+0x51c>
  403b1c:	mov    rsi,QWORD PTR [rbp-0x30]
  403b20:	mov    rdx,rax
  403b23:	mov    al,0x0
  403b25:	call   403070 <printf@plt>
  403b2a:	mov    rcx,QWORD PTR [rbp-0x20]
  403b2e:	imul   rdx,QWORD PTR [rbp-0x18],0x7
  403b36:	add    rcx,rdx
  403b39:	mov    rdx,QWORD PTR [rbp-0x8]
  403b3d:	sub    rcx,rdx
  403b40:	lea    rdi,[rip+0x89fa]        # 40c541 <_IO_stdin_used@@Base+0x541>
  403b47:	mov    rsi,rcx
  403b4a:	mov    DWORD PTR [rbp-0x3c],eax
  403b4d:	mov    al,0x0
  403b4f:	call   403070 <printf@plt>
  403b54:	lea    rdi,[rip+0x9ff7]        # 40db52 <flatcc_builder_padding_base@@Base+0x13d2>
  403b5b:	lea    rsi,[rip+0x8541]        # 40c0a3 <_IO_stdin_used@@Base+0xa3>
  403b62:	mov    edx,0x55
  403b67:	lea    rcx,[rip+0x896d]        # 40c4db <_IO_stdin_used@@Base+0x4db>
  403b6e:	mov    DWORD PTR [rbp-0x40],eax
  403b71:	call   403090 <__assert_fail@plt>
  403b76:	jmp    403b7b <main@@Base+0x94b>
  403b7b:	mov    rax,QWORD PTR [rbp-0x18]
  403b7f:	add    rax,0x1
  403b85:	mov    QWORD PTR [rbp-0x18],rax
  403b89:	jmp    403aaa <main@@Base+0x87a>
  403b8e:	mov    QWORD PTR [rbp-0x18],0x0
  403b96:	cmp    QWORD PTR [rbp-0x18],0x64
  403b9b:	jae    403c04 <main@@Base+0x9d4>
  403ba1:	mov    rax,QWORD PTR [rbp-0x28]
  403ba5:	imul   rcx,QWORD PTR [rbp-0x18],0x3e8
  403bad:	add    rax,rcx
  403bb0:	lea    rsi,[rip+0xd509]        # 4110c0 <__bss_start@@Base+0x10>
  403bb7:	mov    edx,0x3e8
  403bbc:	mov    rdi,rax
  403bbf:	call   4030c0 <memcmp@plt>
  403bc4:	cmp    eax,0x0
  403bc7:	je     403bec <main@@Base+0x9bc>
  403bcd:	lea    rdi,[rip+0x9f7e]        # 40db52 <flatcc_builder_padding_base@@Base+0x13d2>
  403bd4:	lea    rsi,[rip+0x84c8]        # 40c0a3 <_IO_stdin_used@@Base+0xa3>
  403bdb:	mov    edx,0x5b
  403be0:	lea    rcx,[rip+0x88f4]        # 40c4db <_IO_stdin_used@@Base+0x4db>
  403be7:	call   403090 <__assert_fail@plt>
  403bec:	jmp    403bf1 <main@@Base+0x9c1>
  403bf1:	mov    rax,QWORD PTR [rbp-0x18]
  403bf5:	add    rax,0x1
  403bfb:	mov    QWORD PTR [rbp-0x18],rax
  403bff:	jmp    403b96 <main@@Base+0x966>
  403c04:	xor    eax,eax
  403c06:	add    rsp,0x40
  403c0a:	pop    rbp
  403c0b:	ret    
  403c0c:	nop    DWORD PTR [rax+0x0]
  403c10:	push   rbp
  403c11:	mov    rbp,rsp
  403c14:	sub    rsp,0x20
  403c18:	mov    QWORD PTR [rbp-0x8],rdi
  403c1c:	mov    QWORD PTR [rbp-0x10],rsi
  403c20:	mov    rax,QWORD PTR [rbp-0x8]
  403c24:	mov    rcx,QWORD PTR [rbp-0x10]
  403c28:	shl    rcx,0x2
  403c2c:	add    rax,rcx
  403c2f:	mov    QWORD PTR [rbp-0x18],rax
  403c33:	mov    rax,QWORD PTR [rbp-0x8]
  403c37:	mov    rdi,rax
  403c3a:	call   404830 <main@@Base+0x1600>
  403c3f:	cmp    rax,QWORD PTR [rbp-0x10]
  403c43:	jbe    403c5d <main@@Base+0xa2d>
  403c49:	mov    al,0x1
  403c4b:	test   al,0x1
  403c4d:	jne    403c58 <main@@Base+0xa28>
  403c53:	jmp    403c5d <main@@Base+0xa2d>
  403c58:	jmp    403c7c <main@@Base+0xa4c>
  403c5d:	lea    rdi,[rip+0x8956]        # 40c5ba <_IO_stdin_used@@Base+0x5ba>
  403c64:	lea    rsi,[rip+0x871f]        # 40c38a <_IO_stdin_used@@Base+0x38a>
  403c6b:	mov    edx,0x2b5
  403c70:	lea    rcx,[rip+0x897a]        # 40c5f1 <_IO_stdin_used@@Base+0x5f1>
  403c77:	call   403090 <__assert_fail@plt>
  403c7c:	mov    rax,QWORD PTR [rbp-0x18]
  403c80:	mov    rcx,QWORD PTR [rbp-0x18]
  403c84:	mov    rdi,rcx
  403c87:	mov    QWORD PTR [rbp-0x20],rax
  403c8b:	call   4045b0 <main@@Base+0x1380>
  403c90:	mov    eax,eax
  403c92:	mov    ecx,eax
  403c94:	mov    rdx,QWORD PTR [rbp-0x20]
  403c98:	add    rdx,rcx
  403c9b:	mov    rax,rdx
  403c9e:	add    rsp,0x20
  403ca2:	pop    rbp
  403ca3:	ret    
  403ca4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403cae:	xchg   ax,ax
  403cb0:	push   rbp
  403cb1:	mov    rbp,rsp
  403cb4:	sub    rsp,0x70
  403cb8:	vmovsd xmm2,QWORD PTR [rip+0x8348]        # 40c008 <_IO_stdin_used@@Base+0x8>
  403cc0:	mov    QWORD PTR [rbp-0x8],rdi
  403cc4:	vmovsd QWORD PTR [rbp-0x10],xmm0
  403cc9:	vmovsd QWORD PTR [rbp-0x18],xmm1
  403cce:	mov    QWORD PTR [rbp-0x20],rsi
  403cd2:	mov    DWORD PTR [rbp-0x24],edx
  403cd5:	mov    QWORD PTR [rbp-0x30],rcx
  403cd9:	vmovsd xmm0,QWORD PTR [rbp-0x18]
  403cde:	vmovsd xmm1,QWORD PTR [rbp-0x10]
  403ce3:	vsubsd xmm0,xmm0,xmm1
  403ce7:	vmovsd QWORD PTR [rbp-0x38],xmm0
  403cec:	mov    rsi,QWORD PTR [rbp-0x8]
  403cf0:	lea    rdi,[rip+0x895d]        # 40c654 <_IO_stdin_used@@Base+0x654>
  403cf7:	xor    eax,eax
  403cf9:	mov    BYTE PTR [rbp-0x41],al
  403cfc:	vmovsd QWORD PTR [rbp-0x50],xmm2
  403d01:	call   403070 <printf@plt>
  403d06:	vmovsd xmm0,QWORD PTR [rbp-0x38]
  403d0b:	lea    rdi,[rip+0x8951]        # 40c663 <_IO_stdin_used@@Base+0x663>
  403d12:	mov    r8b,0x1
  403d15:	mov    DWORD PTR [rbp-0x54],eax
  403d18:	mov    al,r8b
  403d1b:	call   403070 <printf@plt>
  403d20:	mov    esi,DWORD PTR [rbp-0x24]
  403d23:	lea    rdi,[rip+0x8951]        # 40c67b <_IO_stdin_used@@Base+0x67b>
  403d2a:	mov    r8b,BYTE PTR [rbp-0x41]
  403d2e:	mov    DWORD PTR [rbp-0x58],eax
  403d31:	mov    al,r8b
  403d34:	call   403070 <printf@plt>
  403d39:	mov    rsi,QWORD PTR [rbp-0x20]
  403d3d:	lea    rdi,[rip+0x8947]        # 40c68b <_IO_stdin_used@@Base+0x68b>
  403d44:	mov    r8b,BYTE PTR [rbp-0x41]
  403d48:	mov    DWORD PTR [rbp-0x5c],eax
  403d4b:	mov    al,r8b
  403d4e:	call   403070 <printf@plt>
  403d53:	vcvtsi2sd xmm0,xmm0,DWORD PTR [rbp-0x24]
  403d58:	vmovdqa xmm1,XMMWORD PTR [rip+0x82d0]        # 40c030 <_IO_stdin_used@@Base+0x30>
  403d60:	vmovq  xmm2,QWORD PTR [rbp-0x20]
  403d65:	vpunpckldq xmm1,xmm2,xmm1
  403d69:	vmovapd xmm2,XMMWORD PTR [rip+0x82cf]        # 40c040 <_IO_stdin_used@@Base+0x40>
  403d71:	vsubpd xmm1,xmm1,xmm2
  403d75:	vhaddpd xmm1,xmm1,xmm1
  403d79:	vmulsd xmm0,xmm0,xmm1
  403d7d:	vmovsd xmm1,QWORD PTR [rbp-0x50]
  403d82:	vdivsd xmm0,xmm0,xmm1
  403d86:	vdivsd xmm0,xmm0,QWORD PTR [rbp-0x38]
  403d8b:	lea    rdi,[rip+0x890c]        # 40c69e <_IO_stdin_used@@Base+0x69e>
  403d92:	mov    DWORD PTR [rbp-0x60],eax
  403d95:	mov    al,0x1
  403d97:	call   403070 <printf@plt>
  403d9c:	vcvtsi2sd xmm0,xmm0,DWORD PTR [rbp-0x24]
  403da1:	vdivsd xmm0,xmm0,QWORD PTR [rbp-0x38]
  403da6:	lea    rdi,[rip+0x8909]        # 40c6b6 <_IO_stdin_used@@Base+0x6b6>
  403dad:	mov    DWORD PTR [rbp-0x64],eax
  403db0:	mov    al,0x1
  403db2:	call   403070 <printf@plt>
  403db7:	cmp    QWORD PTR [rbp-0x30],0x0
  403dbc:	je     403deb <main@@Base+0xbbb>
  403dc2:	cmp    DWORD PTR [rbp-0x24],0x1
  403dc6:	je     403deb <main@@Base+0xbbb>
  403dcc:	vmovsd xmm0,QWORD PTR [rip+0x823c]        # 40c010 <_IO_stdin_used@@Base+0x10>
  403dd4:	mov    rsi,QWORD PTR [rbp-0x30]
  403dd8:	vdivsd xmm0,xmm0,QWORD PTR [rbp-0x38]
  403ddd:	lea    rdi,[rip+0x88f3]        # 40c6d7 <_IO_stdin_used@@Base+0x6d7>
  403de4:	mov    al,0x1
  403de6:	call   403070 <printf@plt>
  403deb:	vmovsd xmm0,QWORD PTR [rip+0x8225]        # 40c018 <_IO_stdin_used@@Base+0x18>
  403df3:	vmovsd xmm1,QWORD PTR [rip+0x8225]        # 40c020 <_IO_stdin_used@@Base+0x20>
  403dfb:	vmulsd xmm1,xmm1,QWORD PTR [rbp-0x38]
  403e00:	vcvtsi2sd xmm2,xmm2,DWORD PTR [rbp-0x24]
  403e05:	vdivsd xmm1,xmm1,xmm2
  403e09:	vmovsd QWORD PTR [rbp-0x40],xmm1
  403e0e:	vucomisd xmm0,QWORD PTR [rbp-0x40]
  403e13:	jbe    403e31 <main@@Base+0xc01>
  403e19:	vmovsd xmm0,QWORD PTR [rbp-0x40]
  403e1e:	lea    rdi,[rip+0x88d6]        # 40c6fb <_IO_stdin_used@@Base+0x6fb>
  403e25:	mov    al,0x1
  403e27:	call   403070 <printf@plt>
  403e2c:	jmp    403ec8 <main@@Base+0xc98>
  403e31:	vmovsd xmm0,QWORD PTR [rip+0x81cf]        # 40c008 <_IO_stdin_used@@Base+0x8>
  403e39:	vucomisd xmm0,QWORD PTR [rbp-0x40]
  403e3e:	jbe    403e68 <main@@Base+0xc38>
  403e44:	vmovsd xmm0,QWORD PTR [rip+0x81cc]        # 40c018 <_IO_stdin_used@@Base+0x18>
  403e4c:	vmovsd xmm1,QWORD PTR [rbp-0x40]
  403e51:	vdivsd xmm0,xmm1,xmm0
  403e55:	lea    rdi,[rip+0x88b7]        # 40c713 <_IO_stdin_used@@Base+0x713>
  403e5c:	mov    al,0x1
  403e5e:	call   403070 <printf@plt>
  403e63:	jmp    403ec3 <main@@Base+0xc93>
  403e68:	vmovsd xmm0,QWORD PTR [rip+0x81b0]        # 40c020 <_IO_stdin_used@@Base+0x20>
  403e70:	vucomisd xmm0,QWORD PTR [rbp-0x40]
  403e75:	jbe    403e9f <main@@Base+0xc6f>
  403e7b:	vmovsd xmm0,QWORD PTR [rip+0x8185]        # 40c008 <_IO_stdin_used@@Base+0x8>
  403e83:	vmovsd xmm1,QWORD PTR [rbp-0x40]
  403e88:	vdivsd xmm0,xmm1,xmm0
  403e8c:	lea    rdi,[rip+0x8898]        # 40c72b <_IO_stdin_used@@Base+0x72b>
  403e93:	mov    al,0x1
  403e95:	call   403070 <printf@plt>
  403e9a:	jmp    403ebe <main@@Base+0xc8e>
  403e9f:	vmovsd xmm0,QWORD PTR [rip+0x8179]        # 40c020 <_IO_stdin_used@@Base+0x20>
  403ea7:	vmovsd xmm1,QWORD PTR [rbp-0x40]
  403eac:	vdivsd xmm0,xmm1,xmm0
  403eb0:	lea    rdi,[rip+0x888c]        # 40c743 <_IO_stdin_used@@Base+0x743>
  403eb7:	mov    al,0x1
  403eb9:	call   403070 <printf@plt>
  403ebe:	jmp    403ec3 <main@@Base+0xc93>
  403ec3:	jmp    403ec8 <main@@Base+0xc98>
  403ec8:	xor    eax,eax
  403eca:	add    rsp,0x70
  403ece:	pop    rbp
  403ecf:	ret    
  403ed0:	push   rbp
  403ed1:	mov    rbp,rsp
  403ed4:	sub    rsp,0x10
  403ed8:	mov    QWORD PTR [rbp-0x8],rdi
  403edc:	mov    rdi,QWORD PTR [rbp-0x8]
  403ee0:	lea    rsi,[rip+0x82a2]        # 40c189 <_IO_stdin_used@@Base+0x189>
  403ee7:	call   4040a0 <main@@Base+0xe70>
  403eec:	cmp    eax,0x0
  403eef:	je     403f02 <main@@Base+0xcd2>
  403ef5:	mov    eax,0xffffffff
  403efa:	mov    DWORD PTR [rbp-0xc],eax
  403efd:	jmp    403f0e <main@@Base+0xcde>
  403f02:	mov    rdi,QWORD PTR [rbp-0x8]
  403f06:	call   4040d0 <main@@Base+0xea0>
  403f0b:	mov    DWORD PTR [rbp-0xc],eax
  403f0e:	mov    eax,DWORD PTR [rbp-0xc]
  403f11:	add    rsp,0x10
  403f15:	pop    rbp
  403f16:	ret    
  403f17:	nop    WORD PTR [rax+rax*1+0x0]
  403f20:	push   rbp
  403f21:	mov    rbp,rsp
  403f24:	sub    rsp,0x20
  403f28:	mov    QWORD PTR [rbp-0x8],rdi
  403f2c:	mov    QWORD PTR [rbp-0x10],rsi
  403f30:	mov    rdi,QWORD PTR [rbp-0x8]
  403f34:	mov    rax,QWORD PTR [rbp-0x8]
  403f38:	mov    rsi,QWORD PTR [rbp-0x10]
  403f3c:	mov    QWORD PTR [rbp-0x18],rdi
  403f40:	mov    rdi,rax
  403f43:	call   409880 <flatcc_builder_create_string_str@@Base>
  403f48:	mov    rdi,QWORD PTR [rbp-0x18]
  403f4c:	mov    esi,eax
  403f4e:	call   4040f0 <main@@Base+0xec0>
  403f53:	add    rsp,0x20
  403f57:	pop    rbp
  403f58:	ret    
  403f59:	nop    DWORD PTR [rax+0x0]
  403f60:	push   rbp
  403f61:	mov    rbp,rsp
  403f64:	sub    rsp,0x20
  403f68:	mov    QWORD PTR [rbp-0x8],rdi
  403f6c:	mov    rdi,QWORD PTR [rbp-0x8]
  403f70:	call   404150 <main@@Base+0xf20>
  403f75:	mov    QWORD PTR [rbp-0x10],0x0
  403f7d:	cmp    QWORD PTR [rbp-0x10],0x3e8
  403f85:	jae    403fe4 <main@@Base+0xdb4>
  403f8b:	mov    rdi,QWORD PTR [rbp-0x8]
  403f8f:	call   404170 <main@@Base+0xf40>
  403f94:	mov    DWORD PTR [rbp-0x14],eax
  403f97:	cmp    DWORD PTR [rbp-0x14],0x0
  403f9b:	je     403fa6 <main@@Base+0xd76>
  403fa1:	jmp    403fc5 <main@@Base+0xd95>
  403fa6:	lea    rdi,[rip+0x81e1]        # 40c18e <_IO_stdin_used@@Base+0x18e>
  403fad:	lea    rsi,[rip+0x80ef]        # 40c0a3 <_IO_stdin_used@@Base+0xa3>
  403fb4:	mov    edx,0x2a
  403fb9:	lea    rcx,[rip+0x81d0]        # 40c190 <_IO_stdin_used@@Base+0x190>
  403fc0:	call   403090 <__assert_fail@plt>
  403fc5:	mov    rdi,QWORD PTR [rbp-0x8]
  403fc9:	mov    esi,DWORD PTR [rbp-0x14]
  403fcc:	call   404240 <main@@Base+0x1010>
  403fd1:	mov    rax,QWORD PTR [rbp-0x10]
  403fd5:	add    rax,0x1
  403fdb:	mov    QWORD PTR [rbp-0x10],rax
  403fdf:	jmp    403f7d <main@@Base+0xd4d>
  403fe4:	mov    rdi,QWORD PTR [rbp-0x8]
  403fe8:	call   404290 <main@@Base+0x1060>
  403fed:	add    rsp,0x20
  403ff1:	pop    rbp
  403ff2:	ret    
  403ff3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403ffd:	nop    DWORD PTR [rax]
  404000:	push   rbp
  404001:	mov    rbp,rsp
  404004:	sub    rsp,0x20
  404008:	mov    QWORD PTR [rbp-0x8],rdi
  40400c:	mov    DWORD PTR [rbp-0xc],esi
  40400f:	cmp    DWORD PTR [rbp-0xc],0x0
  404013:	je     404048 <main@@Base+0xe18>
  404019:	mov    rdi,QWORD PTR [rbp-0x8]
  40401d:	mov    esi,0xb
  404022:	call   408c30 <flatcc_builder_table_add_offset@@Base>
  404027:	mov    QWORD PTR [rbp-0x18],rax
  40402b:	cmp    rax,0x0
  40402f:	je     404048 <main@@Base+0xe18>
  404035:	xor    eax,eax
  404037:	mov    ecx,DWORD PTR [rbp-0xc]
  40403a:	mov    rdx,QWORD PTR [rbp-0x18]
  40403e:	mov    DWORD PTR [rdx],ecx
  404040:	mov    DWORD PTR [rbp-0x1c],eax
  404043:	jmp    404055 <main@@Base+0xe25>
  404048:	mov    eax,0xffffffff
  40404d:	mov    DWORD PTR [rbp-0x1c],eax
  404050:	jmp    404055 <main@@Base+0xe25>
  404055:	mov    eax,DWORD PTR [rbp-0x1c]
  404058:	add    rsp,0x20
  40405c:	pop    rbp
  40405d:	ret    
  40405e:	xchg   ax,ax
  404060:	push   rbp
  404061:	mov    rbp,rsp
  404064:	sub    rsp,0x10
  404068:	mov    QWORD PTR [rbp-0x8],rdi
  40406c:	mov    rdi,QWORD PTR [rbp-0x8]
  404070:	mov    rax,QWORD PTR [rbp-0x8]
  404074:	mov    QWORD PTR [rbp-0x10],rdi
  404078:	mov    rdi,rax
  40407b:	call   4043d0 <main@@Base+0x11a0>
  404080:	mov    rdi,QWORD PTR [rbp-0x10]
  404084:	mov    esi,eax
  404086:	call   4044e0 <main@@Base+0x12b0>
  40408b:	add    rsp,0x10
  40408f:	pop    rbp
  404090:	ret    
  404091:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40409b:	nop    DWORD PTR [rax+rax*1+0x0]
  4040a0:	push   rbp
  4040a1:	mov    rbp,rsp
  4040a4:	sub    rsp,0x10
  4040a8:	xor    eax,eax
  4040aa:	mov    QWORD PTR [rbp-0x8],rdi
  4040ae:	mov    QWORD PTR [rbp-0x10],rsi
  4040b2:	mov    rdi,QWORD PTR [rbp-0x8]
  4040b6:	mov    rsi,QWORD PTR [rbp-0x10]
  4040ba:	mov    edx,eax
  4040bc:	mov    ecx,eax
  4040be:	call   405e10 <flatcc_builder_start_buffer@@Base>
  4040c3:	add    rsp,0x10
  4040c7:	pop    rbp
  4040c8:	ret    
  4040c9:	nop    DWORD PTR [rax+0x0]
  4040d0:	push   rbp
  4040d1:	mov    rbp,rsp
  4040d4:	sub    rsp,0x10
  4040d8:	mov    QWORD PTR [rbp-0x8],rdi
  4040dc:	mov    rdi,QWORD PTR [rbp-0x8]
  4040e0:	mov    esi,0x24
  4040e5:	call   407450 <flatcc_builder_start_table@@Base>
  4040ea:	add    rsp,0x10
  4040ee:	pop    rbp
  4040ef:	ret    
  4040f0:	push   rbp
  4040f1:	mov    rbp,rsp
  4040f4:	sub    rsp,0x20
  4040f8:	mov    QWORD PTR [rbp-0x8],rdi
  4040fc:	mov    DWORD PTR [rbp-0xc],esi
  4040ff:	cmp    DWORD PTR [rbp-0xc],0x0
  404103:	je     404138 <main@@Base+0xf08>
  404109:	mov    rdi,QWORD PTR [rbp-0x8]
  40410d:	mov    esi,0x3
  404112:	call   408c30 <flatcc_builder_table_add_offset@@Base>
  404117:	mov    QWORD PTR [rbp-0x18],rax
  40411b:	cmp    rax,0x0
  40411f:	je     404138 <main@@Base+0xf08>
  404125:	xor    eax,eax
  404127:	mov    ecx,DWORD PTR [rbp-0xc]
  40412a:	mov    rdx,QWORD PTR [rbp-0x18]
  40412e:	mov    DWORD PTR [rdx],ecx
  404130:	mov    DWORD PTR [rbp-0x1c],eax
  404133:	jmp    404145 <main@@Base+0xf15>
  404138:	mov    eax,0xffffffff
  40413d:	mov    DWORD PTR [rbp-0x1c],eax
  404140:	jmp    404145 <main@@Base+0xf15>
  404145:	mov    eax,DWORD PTR [rbp-0x1c]
  404148:	add    rsp,0x20
  40414c:	pop    rbp
  40414d:	ret    
  40414e:	xchg   ax,ax
  404150:	push   rbp
  404151:	mov    rbp,rsp
  404154:	sub    rsp,0x10
  404158:	mov    QWORD PTR [rbp-0x8],rdi
  40415c:	mov    rdi,QWORD PTR [rbp-0x8]
  404160:	call   4070d0 <flatcc_builder_start_offset_vector@@Base>
  404165:	add    rsp,0x10
  404169:	pop    rbp
  40416a:	ret    
  40416b:	nop    DWORD PTR [rax+rax*1+0x0]
  404170:	push   rbp
  404171:	mov    rbp,rsp
  404174:	sub    rsp,0x20
  404178:	mov    QWORD PTR [rbp-0x8],rdi
  40417c:	mov    rdi,QWORD PTR [rbp-0x8]
  404180:	call   4040d0 <main@@Base+0xea0>
  404185:	mov    rdi,QWORD PTR [rbp-0x8]
  404189:	mov    DWORD PTR [rbp-0x14],eax
  40418c:	call   4042b0 <main@@Base+0x1080>
  404191:	mov    QWORD PTR [rbp-0x10],0x0
  404199:	cmp    QWORD PTR [rbp-0x10],0x64
  40419e:	jae    4041cc <main@@Base+0xf9c>
  4041a4:	mov    rdi,QWORD PTR [rbp-0x8]
  4041a8:	lea    rsi,[rip+0x8026]        # 40c1d5 <_IO_stdin_used@@Base+0x1d5>
  4041af:	mov    edx,0x7
  4041b4:	call   4042d0 <main@@Base+0x10a0>
  4041b9:	mov    rax,QWORD PTR [rbp-0x10]
  4041bd:	add    rax,0x1
  4041c3:	mov    QWORD PTR [rbp-0x10],rax
  4041c7:	jmp    404199 <main@@Base+0xf69>
  4041cc:	mov    rdi,QWORD PTR [rbp-0x8]
  4041d0:	call   404300 <main@@Base+0x10d0>
  4041d5:	mov    rdi,QWORD PTR [rbp-0x8]
  4041d9:	mov    DWORD PTR [rbp-0x18],eax
  4041dc:	call   404340 <main@@Base+0x1110>
  4041e1:	mov    QWORD PTR [rbp-0x10],0x0
  4041e9:	cmp    QWORD PTR [rbp-0x10],0x64
  4041ee:	jae    40421c <main@@Base+0xfec>
  4041f4:	mov    rdi,QWORD PTR [rbp-0x8]
  4041f8:	lea    rsi,[rip+0xcec1]        # 4110c0 <__bss_start@@Base+0x10>
  4041ff:	mov    edx,0x3e8
  404204:	call   404360 <main@@Base+0x1130>
  404209:	mov    rax,QWORD PTR [rbp-0x10]
  40420d:	add    rax,0x1
  404213:	mov    QWORD PTR [rbp-0x10],rax
  404217:	jmp    4041e9 <main@@Base+0xfb9>
  40421c:	mov    rdi,QWORD PTR [rbp-0x8]
  404220:	call   404390 <main@@Base+0x1160>
  404225:	mov    rdi,QWORD PTR [rbp-0x8]
  404229:	mov    DWORD PTR [rbp-0x1c],eax
  40422c:	call   4043d0 <main@@Base+0x11a0>
  404231:	add    rsp,0x20
  404235:	pop    rbp
  404236:	ret    
  404237:	nop    WORD PTR [rax+rax*1+0x0]
  404240:	push   rbp
  404241:	mov    rbp,rsp
  404244:	sub    rsp,0x20
  404248:	mov    QWORD PTR [rbp-0x8],rdi
  40424c:	mov    DWORD PTR [rbp-0xc],esi
  40424f:	cmp    DWORD PTR [rbp-0xc],0x0
  404253:	je     40426e <main@@Base+0x103e>
  404259:	mov    rdi,QWORD PTR [rbp-0x8]
  40425d:	mov    esi,DWORD PTR [rbp-0xc]
  404260:	call   406920 <flatcc_builder_offset_vector_push@@Base>
  404265:	mov    QWORD PTR [rbp-0x18],rax
  404269:	jmp    40427b <main@@Base+0x104b>
  40426e:	xor    eax,eax
  404270:	mov    ecx,eax
  404272:	mov    QWORD PTR [rbp-0x18],rcx
  404276:	jmp    40427b <main@@Base+0x104b>
  40427b:	mov    rax,QWORD PTR [rbp-0x18]
  40427f:	add    rsp,0x20
  404283:	pop    rbp
  404284:	ret    
  404285:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40428f:	nop
  404290:	push   rbp
  404291:	mov    rbp,rsp
  404294:	sub    rsp,0x10
  404298:	mov    QWORD PTR [rbp-0x8],rdi
  40429c:	mov    rdi,QWORD PTR [rbp-0x8]
  4042a0:	call   4071e0 <flatcc_builder_end_offset_vector@@Base>
  4042a5:	add    rsp,0x10
  4042a9:	pop    rbp
  4042aa:	ret    
  4042ab:	nop    DWORD PTR [rax+rax*1+0x0]
  4042b0:	push   rbp
  4042b1:	mov    rbp,rsp
  4042b4:	sub    rsp,0x10
  4042b8:	mov    QWORD PTR [rbp-0x8],rdi
  4042bc:	mov    rdi,QWORD PTR [rbp-0x8]
  4042c0:	call   407280 <flatcc_builder_start_string@@Base>
  4042c5:	add    rsp,0x10
  4042c9:	pop    rbp
  4042ca:	ret    
  4042cb:	nop    DWORD PTR [rax+rax*1+0x0]
  4042d0:	push   rbp
  4042d1:	mov    rbp,rsp
  4042d4:	sub    rsp,0x20
  4042d8:	mov    QWORD PTR [rbp-0x8],rdi
  4042dc:	mov    QWORD PTR [rbp-0x10],rsi
  4042e0:	mov    QWORD PTR [rbp-0x18],rdx
  4042e4:	mov    rdi,QWORD PTR [rbp-0x8]
  4042e8:	mov    rsi,QWORD PTR [rbp-0x10]
  4042ec:	mov    rdx,QWORD PTR [rbp-0x18]
  4042f0:	call   406b30 <flatcc_builder_append_string@@Base>
  4042f5:	add    rsp,0x20
  4042f9:	pop    rbp
  4042fa:	ret    
  4042fb:	nop    DWORD PTR [rax+rax*1+0x0]
  404300:	push   rbp
  404301:	mov    rbp,rsp
  404304:	sub    rsp,0x10
  404308:	mov    QWORD PTR [rbp-0x8],rdi
  40430c:	mov    rdi,QWORD PTR [rbp-0x8]
  404310:	mov    rax,QWORD PTR [rbp-0x8]
  404314:	mov    QWORD PTR [rbp-0x10],rdi
  404318:	mov    rdi,rax
  40431b:	call   409920 <flatcc_builder_end_string@@Base>
  404320:	mov    rdi,QWORD PTR [rbp-0x10]
  404324:	mov    esi,eax
  404326:	call   4040f0 <main@@Base+0xec0>
  40432b:	add    rsp,0x10
  40432f:	pop    rbp
  404330:	ret    
  404331:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40433b:	nop    DWORD PTR [rax+rax*1+0x0]
  404340:	push   rbp
  404341:	mov    rbp,rsp
  404344:	sub    rsp,0x10
  404348:	mov    QWORD PTR [rbp-0x8],rdi
  40434c:	mov    rdi,QWORD PTR [rbp-0x8]
  404350:	call   404430 <main@@Base+0x1200>
  404355:	add    rsp,0x10
  404359:	pop    rbp
  40435a:	ret    
  40435b:	nop    DWORD PTR [rax+rax*1+0x0]
  404360:	push   rbp
  404361:	mov    rbp,rsp
  404364:	sub    rsp,0x20
  404368:	mov    QWORD PTR [rbp-0x8],rdi
  40436c:	mov    QWORD PTR [rbp-0x10],rsi
  404370:	mov    QWORD PTR [rbp-0x18],rdx
  404374:	mov    rdi,QWORD PTR [rbp-0x8]
  404378:	mov    rsi,QWORD PTR [rbp-0x10]
  40437c:	mov    rdx,QWORD PTR [rbp-0x18]
  404380:	call   406810 <flatcc_builder_append_vector@@Base>
  404385:	add    rsp,0x20
  404389:	pop    rbp
  40438a:	ret    
  40438b:	nop    DWORD PTR [rax+rax*1+0x0]
  404390:	push   rbp
  404391:	mov    rbp,rsp
  404394:	sub    rsp,0x10
  404398:	mov    QWORD PTR [rbp-0x8],rdi
  40439c:	mov    rdi,QWORD PTR [rbp-0x8]
  4043a0:	mov    rax,QWORD PTR [rbp-0x8]
  4043a4:	mov    QWORD PTR [rbp-0x10],rdi
  4043a8:	mov    rdi,rax
  4043ab:	call   4044c0 <main@@Base+0x1290>
  4043b0:	mov    rdi,QWORD PTR [rbp-0x10]
  4043b4:	mov    esi,eax
  4043b6:	call   404460 <main@@Base+0x1230>
  4043bb:	add    rsp,0x10
  4043bf:	pop    rbp
  4043c0:	ret    
  4043c1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4043cb:	nop    DWORD PTR [rax+rax*1+0x0]
  4043d0:	push   rbp
  4043d1:	mov    rbp,rsp
  4043d4:	sub    rsp,0x10
  4043d8:	mov    QWORD PTR [rbp-0x8],rdi
  4043dc:	mov    rdi,QWORD PTR [rbp-0x8]
  4043e0:	lea    rsi,[rip+0x8373]        # 40c75a <_IO_stdin_used@@Base+0x75a>
  4043e7:	mov    edx,0x1
  4043ec:	call   408000 <flatcc_builder_check_required@@Base>
  4043f1:	cmp    eax,0x0
  4043f4:	je     4043ff <main@@Base+0x11cf>
  4043fa:	jmp    40441e <main@@Base+0x11ee>
  4043ff:	lea    rdi,[rip+0x7dd7]        # 40c1dd <_IO_stdin_used@@Base+0x1dd>
  404406:	lea    rsi,[rip+0x7e72]        # 40c27f <_IO_stdin_used@@Base+0x27f>
  40440d:	mov    edx,0xeb
  404412:	lea    rcx,[rip+0x7ee0]        # 40c2f9 <_IO_stdin_used@@Base+0x2f9>
  404419:	call   403090 <__assert_fail@plt>
  40441e:	mov    rdi,QWORD PTR [rbp-0x8]
  404422:	call   4080d0 <flatcc_builder_end_table@@Base>
  404427:	add    rsp,0x10
  40442b:	pop    rbp
  40442c:	ret    
  40442d:	nop    DWORD PTR [rax]
  404430:	push   rbp
  404431:	mov    rbp,rsp
  404434:	sub    rsp,0x10
  404438:	mov    QWORD PTR [rbp-0x8],rdi
  40443c:	mov    rdi,QWORD PTR [rbp-0x8]
  404440:	mov    esi,0x1
  404445:	mov    edx,0x1
  40444a:	mov    ecx,0xffffffff
  40444f:	call   406ff0 <flatcc_builder_start_vector@@Base>
  404454:	add    rsp,0x10
  404458:	pop    rbp
  404459:	ret    
  40445a:	nop    WORD PTR [rax+rax*1+0x0]
  404460:	push   rbp
  404461:	mov    rbp,rsp
  404464:	sub    rsp,0x20
  404468:	mov    QWORD PTR [rbp-0x8],rdi
  40446c:	mov    DWORD PTR [rbp-0xc],esi
  40446f:	cmp    DWORD PTR [rbp-0xc],0x0
  404473:	je     4044a8 <main@@Base+0x1278>
  404479:	mov    rdi,QWORD PTR [rbp-0x8]
  40447d:	mov    esi,0x5
  404482:	call   408c30 <flatcc_builder_table_add_offset@@Base>
  404487:	mov    QWORD PTR [rbp-0x18],rax
  40448b:	cmp    rax,0x0
  40448f:	je     4044a8 <main@@Base+0x1278>
  404495:	xor    eax,eax
  404497:	mov    ecx,DWORD PTR [rbp-0xc]
  40449a:	mov    rdx,QWORD PTR [rbp-0x18]
  40449e:	mov    DWORD PTR [rdx],ecx
  4044a0:	mov    DWORD PTR [rbp-0x1c],eax
  4044a3:	jmp    4044b5 <main@@Base+0x1285>
  4044a8:	mov    eax,0xffffffff
  4044ad:	mov    DWORD PTR [rbp-0x1c],eax
  4044b0:	jmp    4044b5 <main@@Base+0x1285>
  4044b5:	mov    eax,DWORD PTR [rbp-0x1c]
  4044b8:	add    rsp,0x20
  4044bc:	pop    rbp
  4044bd:	ret    
  4044be:	xchg   ax,ax
  4044c0:	push   rbp
  4044c1:	mov    rbp,rsp
  4044c4:	sub    rsp,0x10
  4044c8:	mov    QWORD PTR [rbp-0x8],rdi
  4044cc:	mov    rdi,QWORD PTR [rbp-0x8]
  4044d0:	call   408530 <flatcc_builder_end_vector@@Base>
  4044d5:	add    rsp,0x10
  4044d9:	pop    rbp
  4044da:	ret    
  4044db:	nop    DWORD PTR [rax+rax*1+0x0]
  4044e0:	push   rbp
  4044e1:	mov    rbp,rsp
  4044e4:	sub    rsp,0x10
  4044e8:	mov    QWORD PTR [rbp-0x8],rdi
  4044ec:	mov    DWORD PTR [rbp-0xc],esi
  4044ef:	mov    rdi,QWORD PTR [rbp-0x8]
  4044f3:	mov    esi,DWORD PTR [rbp-0xc]
  4044f6:	call   406140 <flatcc_builder_end_buffer@@Base>
  4044fb:	add    rsp,0x10
  4044ff:	pop    rbp
  404500:	ret    
  404501:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40450b:	nop    DWORD PTR [rax+rax*1+0x0]
  404510:	push   rbp
  404511:	mov    rbp,rsp
  404514:	sub    rsp,0x30
  404518:	mov    QWORD PTR [rbp-0x10],rdi
  40451c:	mov    QWORD PTR [rbp-0x18],rsi
  404520:	mov    DWORD PTR [rbp-0x20],0x0
  404527:	cmp    QWORD PTR [rbp-0x18],0x0
  40452c:	jne    40453e <main@@Base+0x130e>
  404532:	mov    DWORD PTR [rbp-0x4],0x1
  404539:	jmp    4045a0 <main@@Base+0x1370>
  40453e:	lea    rax,[rbp-0x20]
  404542:	mov    rsi,QWORD PTR [rbp-0x18]
  404546:	mov    rdi,rax
  404549:	mov    edx,0x4
  40454e:	call   403040 <strncpy@plt>
  404553:	mov    edi,DWORD PTR [rbp-0x20]
  404556:	mov    QWORD PTR [rbp-0x28],rax
  40455a:	call   4045d0 <main@@Base+0x13a0>
  40455f:	mov    DWORD PTR [rbp-0x20],eax
  404562:	mov    rcx,QWORD PTR [rbp-0x10]
  404566:	add    rcx,0x4
  40456d:	mov    rdi,rcx
  404570:	call   4045e0 <main@@Base+0x13b0>
  404575:	mov    DWORD PTR [rbp-0x1c],eax
  404578:	cmp    DWORD PTR [rbp-0x20],0x0
  40457c:	mov    r8b,0x1
  40457f:	mov    BYTE PTR [rbp-0x29],r8b
  404583:	je     404595 <main@@Base+0x1365>
  404589:	mov    eax,DWORD PTR [rbp-0x1c]
  40458c:	cmp    eax,DWORD PTR [rbp-0x20]
  40458f:	sete   cl
  404592:	mov    BYTE PTR [rbp-0x29],cl
  404595:	mov    al,BYTE PTR [rbp-0x29]
  404598:	and    al,0x1
  40459a:	movzx  ecx,al
  40459d:	mov    DWORD PTR [rbp-0x4],ecx
  4045a0:	mov    eax,DWORD PTR [rbp-0x4]
  4045a3:	add    rsp,0x30
  4045a7:	pop    rbp
  4045a8:	ret    
  4045a9:	nop    DWORD PTR [rax+0x0]
  4045b0:	push   rbp
  4045b1:	mov    rbp,rsp
  4045b4:	sub    rsp,0x10
  4045b8:	mov    QWORD PTR [rbp-0x8],rdi
  4045bc:	mov    rax,QWORD PTR [rbp-0x8]
  4045c0:	mov    edi,DWORD PTR [rax]
  4045c2:	call   404610 <main@@Base+0x13e0>
  4045c7:	add    rsp,0x10
  4045cb:	pop    rbp
  4045cc:	ret    
  4045cd:	nop    DWORD PTR [rax]
  4045d0:	push   rbp
  4045d1:	mov    rbp,rsp
  4045d4:	mov    DWORD PTR [rbp-0x4],edi
  4045d7:	mov    eax,DWORD PTR [rbp-0x4]
  4045da:	pop    rbp
  4045db:	ret    
  4045dc:	nop    DWORD PTR [rax+0x0]
  4045e0:	push   rbp
  4045e1:	mov    rbp,rsp
  4045e4:	sub    rsp,0x10
  4045e8:	mov    QWORD PTR [rbp-0x8],rdi
  4045ec:	mov    rax,QWORD PTR [rbp-0x8]
  4045f0:	mov    edi,DWORD PTR [rax]
  4045f2:	call   404600 <main@@Base+0x13d0>
  4045f7:	add    rsp,0x10
  4045fb:	pop    rbp
  4045fc:	ret    
  4045fd:	nop    DWORD PTR [rax]
  404600:	push   rbp
  404601:	mov    rbp,rsp
  404604:	mov    DWORD PTR [rbp-0x4],edi
  404607:	mov    eax,DWORD PTR [rbp-0x4]
  40460a:	pop    rbp
  40460b:	ret    
  40460c:	nop    DWORD PTR [rax+0x0]
  404610:	push   rbp
  404611:	mov    rbp,rsp
  404614:	mov    DWORD PTR [rbp-0x4],edi
  404617:	mov    eax,DWORD PTR [rbp-0x4]
  40461a:	pop    rbp
  40461b:	ret    
  40461c:	nop    DWORD PTR [rax+0x0]
  404620:	push   rbp
  404621:	mov    rbp,rsp
  404624:	sub    rsp,0x10
  404628:	mov    QWORD PTR [rbp-0x8],rdi
  40462c:	mov    rax,QWORD PTR [rbp-0x8]
  404630:	mov    edi,DWORD PTR [rax]
  404632:	call   404670 <main@@Base+0x1440>
  404637:	add    rsp,0x10
  40463b:	pop    rbp
  40463c:	ret    
  40463d:	nop    DWORD PTR [rax]
  404640:	push   rbp
  404641:	mov    rbp,rsp
  404644:	sub    rsp,0x10
  404648:	mov    QWORD PTR [rbp-0x8],rdi
  40464c:	mov    rax,QWORD PTR [rbp-0x8]
  404650:	movzx  edi,WORD PTR [rax]
  404653:	call   404680 <main@@Base+0x1450>
  404658:	movzx  eax,ax
  40465b:	add    rsp,0x10
  40465f:	pop    rbp
  404660:	ret    
  404661:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40466b:	nop    DWORD PTR [rax+rax*1+0x0]
  404670:	push   rbp
  404671:	mov    rbp,rsp
  404674:	mov    DWORD PTR [rbp-0x4],edi
  404677:	mov    eax,DWORD PTR [rbp-0x4]
  40467a:	pop    rbp
  40467b:	ret    
  40467c:	nop    DWORD PTR [rax+0x0]
  404680:	push   rbp
  404681:	mov    rbp,rsp
  404684:	mov    WORD PTR [rbp-0x2],di
  404688:	movzx  eax,WORD PTR [rbp-0x2]
  40468c:	pop    rbp
  40468d:	ret    
  40468e:	xchg   ax,ax
  404690:	push   rbp
  404691:	mov    rbp,rsp
  404694:	sub    rsp,0x40
  404698:	mov    QWORD PTR [rbp-0x10],rdi
  40469c:	mov    WORD PTR [rbp-0x1a],0x0
  4046a2:	cmp    QWORD PTR [rbp-0x10],0x0
  4046a7:	je     4046c1 <main@@Base+0x1491>
  4046ad:	mov    al,0x1
  4046af:	test   al,0x1
  4046b1:	jne    4046bc <main@@Base+0x148c>
  4046b7:	jmp    4046c1 <main@@Base+0x1491>
  4046bc:	jmp    4046e0 <main@@Base+0x14b0>
  4046c1:	lea    rdi,[rip+0x7c9c]        # 40c364 <_IO_stdin_used@@Base+0x364>
  4046c8:	lea    rsi,[rip+0x7cbb]        # 40c38a <_IO_stdin_used@@Base+0x38a>
  4046cf:	mov    edx,0x2c2
  4046d4:	lea    rcx,[rip+0x7e73]        # 40c54e <_IO_stdin_used@@Base+0x54e>
  4046db:	call   403090 <__assert_fail@plt>
  4046e0:	mov    WORD PTR [rbp-0x1c],0x5
  4046e6:	mov    rax,QWORD PTR [rbp-0x10]
  4046ea:	mov    rcx,QWORD PTR [rbp-0x10]
  4046ee:	mov    rdi,rcx
  4046f1:	mov    QWORD PTR [rbp-0x30],rax
  4046f5:	call   404620 <main@@Base+0x13f0>
  4046fa:	xor    edx,edx
  4046fc:	mov    ecx,edx
  4046fe:	movsxd rsi,eax
  404701:	sub    rcx,rsi
  404704:	mov    rsi,QWORD PTR [rbp-0x30]
  404708:	add    rsi,rcx
  40470b:	mov    QWORD PTR [rbp-0x28],rsi
  40470f:	mov    rcx,QWORD PTR [rbp-0x28]
  404713:	mov    rdi,rcx
  404716:	call   404640 <main@@Base+0x1410>
  40471b:	movzx  edx,ax
  40471e:	mov    ecx,edx
  404720:	movzx  edx,WORD PTR [rbp-0x1c]
  404724:	add    edx,0x3
  404727:	movsxd rsi,edx
  40472a:	shl    rsi,0x1
  40472e:	cmp    rcx,rsi
  404731:	jb     40475b <main@@Base+0x152b>
  404737:	mov    rax,QWORD PTR [rbp-0x28]
  40473b:	movzx  ecx,WORD PTR [rbp-0x1c]
  40473f:	movsxd rdx,ecx
  404742:	shl    rdx,0x1
  404746:	add    rax,rdx
  404749:	add    rax,0x4
  40474f:	mov    rdi,rax
  404752:	call   404640 <main@@Base+0x1410>
  404757:	mov    WORD PTR [rbp-0x1a],ax
  40475b:	cmp    WORD PTR [rbp-0x1a],0x0
  404760:	je     4047a6 <main@@Base+0x1576>
  404766:	mov    rax,QWORD PTR [rbp-0x10]
  40476a:	movzx  ecx,WORD PTR [rbp-0x1a]
  40476e:	movsxd rdx,ecx
  404771:	add    rax,rdx
  404774:	mov    QWORD PTR [rbp-0x18],rax
  404778:	mov    rax,QWORD PTR [rbp-0x18]
  40477c:	add    rax,0x4
  404782:	mov    rdx,QWORD PTR [rbp-0x18]
  404786:	mov    rdi,rdx
  404789:	mov    QWORD PTR [rbp-0x38],rax
  40478d:	call   4045b0 <main@@Base+0x1380>
  404792:	mov    eax,eax
  404794:	mov    edx,eax
  404796:	mov    rsi,QWORD PTR [rbp-0x38]
  40479a:	add    rsi,rdx
  40479d:	mov    QWORD PTR [rbp-0x8],rsi
  4047a1:	jmp    4047ae <main@@Base+0x157e>
  4047a6:	mov    QWORD PTR [rbp-0x8],0x0
  4047ae:	mov    rax,QWORD PTR [rbp-0x8]
  4047b2:	add    rsp,0x40
  4047b6:	pop    rbp
  4047b7:	ret    
  4047b8:	nop    DWORD PTR [rax+rax*1+0x0]
  4047c0:	push   rbp
  4047c1:	mov    rbp,rsp
  4047c4:	sub    rsp,0x10
  4047c8:	mov    QWORD PTR [rbp-0x8],rdi
  4047cc:	cmp    QWORD PTR [rbp-0x8],0x0
  4047d1:	je     4047f6 <main@@Base+0x15c6>
  4047d7:	mov    rax,QWORD PTR [rbp-0x8]
  4047db:	add    rax,0xfffffffffffffffc
  4047e1:	mov    rdi,rax
  4047e4:	call   4045b0 <main@@Base+0x1380>
  4047e9:	mov    eax,eax
  4047eb:	mov    ecx,eax
  4047ed:	mov    QWORD PTR [rbp-0x10],rcx
  4047f1:	jmp    404803 <main@@Base+0x15d3>
  4047f6:	xor    eax,eax
  4047f8:	mov    ecx,eax
  4047fa:	mov    QWORD PTR [rbp-0x10],rcx
  4047fe:	jmp    404803 <main@@Base+0x15d3>
  404803:	mov    rax,QWORD PTR [rbp-0x10]
  404807:	add    rsp,0x10
  40480b:	pop    rbp
  40480c:	ret    
  40480d:	nop    DWORD PTR [rax]
  404810:	push   rbp
  404811:	mov    rbp,rsp
  404814:	sub    rsp,0x10
  404818:	mov    QWORD PTR [rbp-0x8],rdi
  40481c:	mov    rdi,QWORD PTR [rbp-0x8]
  404820:	call   404830 <main@@Base+0x1600>
  404825:	add    rsp,0x10
  404829:	pop    rbp
  40482a:	ret    
  40482b:	nop    DWORD PTR [rax+rax*1+0x0]
  404830:	push   rbp
  404831:	mov    rbp,rsp
  404834:	sub    rsp,0x10
  404838:	mov    QWORD PTR [rbp-0x8],rdi
  40483c:	cmp    QWORD PTR [rbp-0x8],0x0
  404841:	je     404866 <main@@Base+0x1636>
  404847:	mov    rax,QWORD PTR [rbp-0x8]
  40484b:	add    rax,0xfffffffffffffffc
  404851:	mov    rdi,rax
  404854:	call   4045b0 <main@@Base+0x1380>
  404859:	mov    eax,eax
  40485b:	mov    ecx,eax
  40485d:	mov    QWORD PTR [rbp-0x10],rcx
  404861:	jmp    404873 <main@@Base+0x1643>
  404866:	xor    eax,eax
  404868:	mov    ecx,eax
  40486a:	mov    QWORD PTR [rbp-0x10],rcx
  40486e:	jmp    404873 <main@@Base+0x1643>
  404873:	mov    rax,QWORD PTR [rbp-0x10]
  404877:	add    rsp,0x10
  40487b:	pop    rbp
  40487c:	ret    
  40487d:	nop    DWORD PTR [rax]

0000000000404880 <flatcc_builder_default_alloc@@Base>:
  404880:	push   rbp
  404881:	mov    rbp,rsp
  404884:	sub    rsp,0x40
  404888:	mov    QWORD PTR [rbp-0x10],rdi
  40488c:	mov    QWORD PTR [rbp-0x18],rsi
  404890:	mov    QWORD PTR [rbp-0x20],rdx
  404894:	mov    DWORD PTR [rbp-0x24],ecx
  404897:	mov    DWORD PTR [rbp-0x28],r8d
  40489b:	cmp    QWORD PTR [rbp-0x20],0x0
  4048a0:	jne    4048e3 <flatcc_builder_default_alloc@@Base+0x63>
  4048a6:	mov    rax,QWORD PTR [rbp-0x18]
  4048aa:	cmp    QWORD PTR [rax],0x0
  4048ae:	je     4048d7 <flatcc_builder_default_alloc@@Base+0x57>
  4048b4:	mov    rax,QWORD PTR [rbp-0x18]
  4048b8:	mov    rdi,QWORD PTR [rax]
  4048bb:	call   403030 <free@plt>
  4048c0:	mov    rax,QWORD PTR [rbp-0x18]
  4048c4:	mov    QWORD PTR [rax],0x0
  4048cb:	mov    rax,QWORD PTR [rbp-0x18]
  4048cf:	mov    QWORD PTR [rax+0x8],0x0
  4048d7:	mov    DWORD PTR [rbp-0x4],0x0
  4048de:	jmp    404a28 <flatcc_builder_default_alloc@@Base+0x1a8>
  4048e3:	mov    eax,DWORD PTR [rbp-0x28]
  4048e6:	dec    eax
  4048e8:	mov    ecx,eax
  4048ea:	sub    eax,0x6
  4048ed:	mov    QWORD PTR [rbp-0x40],rcx
  4048f1:	ja     40493f <flatcc_builder_default_alloc@@Base+0xbf>
  4048f7:	lea    rax,[rip+0x7e62]        # 40c760 <_IO_stdin_used@@Base+0x760>
  4048fe:	mov    rcx,QWORD PTR [rbp-0x40]
  404902:	movsxd rdx,DWORD PTR [rax+rcx*4]
  404906:	add    rdx,rax
  404909:	jmp    rdx
  40490b:	mov    QWORD PTR [rbp-0x38],0x100
  404913:	jmp    404947 <flatcc_builder_default_alloc@@Base+0xc7>
  404918:	mov    rax,QWORD PTR [rbp-0x20]
  40491c:	mov    QWORD PTR [rbp-0x38],rax
  404920:	jmp    404947 <flatcc_builder_default_alloc@@Base+0xc7>
  404925:	mov    QWORD PTR [rbp-0x38],0x120
  40492d:	jmp    404947 <flatcc_builder_default_alloc@@Base+0xc7>
  404932:	mov    QWORD PTR [rbp-0x38],0x40
  40493a:	jmp    404947 <flatcc_builder_default_alloc@@Base+0xc7>
  40493f:	mov    QWORD PTR [rbp-0x38],0x20
  404947:	jmp    40494c <flatcc_builder_default_alloc@@Base+0xcc>
  40494c:	mov    rax,QWORD PTR [rbp-0x38]
  404950:	cmp    rax,QWORD PTR [rbp-0x20]
  404954:	jae    40496b <flatcc_builder_default_alloc@@Base+0xeb>
  40495a:	mov    rax,QWORD PTR [rbp-0x38]
  40495e:	shl    rax,0x1
  404962:	mov    QWORD PTR [rbp-0x38],rax
  404966:	jmp    40494c <flatcc_builder_default_alloc@@Base+0xcc>
  40496b:	mov    rax,QWORD PTR [rbp-0x20]
  40496f:	mov    rcx,QWORD PTR [rbp-0x18]
  404973:	cmp    rax,QWORD PTR [rcx+0x8]
  404977:	ja     40499f <flatcc_builder_default_alloc@@Base+0x11f>
  40497d:	mov    rax,QWORD PTR [rbp-0x18]
  404981:	mov    rax,QWORD PTR [rax+0x8]
  404985:	shr    rax,0x1
  404989:	cmp    rax,QWORD PTR [rbp-0x38]
  40498d:	jb     40499f <flatcc_builder_default_alloc@@Base+0x11f>
  404993:	mov    DWORD PTR [rbp-0x4],0x0
  40499a:	jmp    404a28 <flatcc_builder_default_alloc@@Base+0x1a8>
  40499f:	mov    rax,QWORD PTR [rbp-0x18]
  4049a3:	mov    rdi,QWORD PTR [rax]
  4049a6:	mov    rsi,QWORD PTR [rbp-0x38]
  4049aa:	call   403100 <realloc@plt>
  4049af:	mov    QWORD PTR [rbp-0x30],rax
  4049b3:	cmp    rax,0x0
  4049b7:	jne    4049c9 <flatcc_builder_default_alloc@@Base+0x149>
  4049bd:	mov    DWORD PTR [rbp-0x4],0xffffffff
  4049c4:	jmp    404a28 <flatcc_builder_default_alloc@@Base+0x1a8>
  4049c9:	cmp    DWORD PTR [rbp-0x24],0x0
  4049cd:	je     404a0a <flatcc_builder_default_alloc@@Base+0x18a>
  4049d3:	mov    rax,QWORD PTR [rbp-0x18]
  4049d7:	mov    rax,QWORD PTR [rax+0x8]
  4049db:	cmp    rax,QWORD PTR [rbp-0x38]
  4049df:	jae    404a0a <flatcc_builder_default_alloc@@Base+0x18a>
  4049e5:	xor    esi,esi
  4049e7:	mov    rax,QWORD PTR [rbp-0x30]
  4049eb:	mov    rcx,QWORD PTR [rbp-0x18]
  4049ef:	add    rax,QWORD PTR [rcx+0x8]
  4049f3:	mov    rcx,QWORD PTR [rbp-0x38]
  4049f7:	mov    rdx,QWORD PTR [rbp-0x18]
  4049fb:	sub    rcx,QWORD PTR [rdx+0x8]
  4049ff:	mov    rdi,rax
  404a02:	mov    rdx,rcx
  404a05:	call   4030a0 <memset@plt>
  404a0a:	mov    rax,QWORD PTR [rbp-0x30]
  404a0e:	mov    rcx,QWORD PTR [rbp-0x18]
  404a12:	mov    QWORD PTR [rcx],rax
  404a15:	mov    rax,QWORD PTR [rbp-0x38]
  404a19:	mov    rcx,QWORD PTR [rbp-0x18]
  404a1d:	mov    QWORD PTR [rcx+0x8],rax
  404a21:	mov    DWORD PTR [rbp-0x4],0x0
  404a28:	mov    eax,DWORD PTR [rbp-0x4]
  404a2b:	add    rsp,0x40
  404a2f:	pop    rbp
  404a30:	ret    
  404a31:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404a3b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000404a40 <flatcc_builder_flush_vtable_cache@@Base>:
  404a40:	push   rbp
  404a41:	mov    rbp,rsp
  404a44:	sub    rsp,0x10
  404a48:	mov    QWORD PTR [rbp-0x8],rdi
  404a4c:	mov    rax,QWORD PTR [rbp-0x8]
  404a50:	add    rax,0x58
  404a56:	add    rax,0x50
  404a5c:	mov    QWORD PTR [rbp-0x10],rax
  404a60:	mov    rax,QWORD PTR [rbp-0x8]
  404a64:	cmp    QWORD PTR [rax+0xd8],0x0
  404a6c:	jne    404a77 <flatcc_builder_flush_vtable_cache@@Base+0x37>
  404a72:	jmp    404aa9 <flatcc_builder_flush_vtable_cache@@Base+0x69>
  404a77:	xor    esi,esi
  404a79:	mov    rax,QWORD PTR [rbp-0x10]
  404a7d:	mov    rdi,QWORD PTR [rax]
  404a80:	mov    rax,QWORD PTR [rbp-0x10]
  404a84:	mov    rdx,QWORD PTR [rax+0x8]
  404a88:	call   4030a0 <memset@plt>
  404a8d:	mov    rax,QWORD PTR [rbp-0x8]
  404a91:	mov    DWORD PTR [rax+0xe4],0x10
  404a9b:	mov    rax,QWORD PTR [rbp-0x8]
  404a9f:	mov    DWORD PTR [rax+0xe0],0x0
  404aa9:	add    rsp,0x10
  404aad:	pop    rbp
  404aae:	ret    
  404aaf:	nop

0000000000404ab0 <flatcc_builder_custom_init@@Base>:
  404ab0:	push   rbp
  404ab1:	mov    rbp,rsp
  404ab4:	sub    rsp,0x30
  404ab8:	xor    eax,eax
  404aba:	mov    QWORD PTR [rbp-0x8],rdi
  404abe:	mov    QWORD PTR [rbp-0x10],rsi
  404ac2:	mov    QWORD PTR [rbp-0x18],rdx
  404ac6:	mov    QWORD PTR [rbp-0x20],rcx
  404aca:	mov    QWORD PTR [rbp-0x28],r8
  404ace:	mov    rcx,QWORD PTR [rbp-0x8]
  404ad2:	mov    rdi,rcx
  404ad5:	mov    esi,eax
  404ad7:	mov    edx,0x188
  404adc:	call   4030a0 <memset@plt>
  404ae1:	cmp    QWORD PTR [rbp-0x10],0x0
  404ae6:	jne    404b13 <flatcc_builder_custom_init@@Base+0x63>
  404aec:	lea    rax,[rip+0x5e5d]        # 40a950 <flatcc_emitter@@Base>
  404af3:	mov    rcx,QWORD PTR [rbp-0x8]
  404af7:	mov    DWORD PTR [rcx+0x128],0x1
  404b01:	mov    QWORD PTR [rbp-0x10],rax
  404b05:	mov    rax,QWORD PTR [rbp-0x8]
  404b09:	add    rax,0x130
  404b0f:	mov    QWORD PTR [rbp-0x18],rax
  404b13:	cmp    QWORD PTR [rbp-0x20],0x0
  404b18:	jne    404b29 <flatcc_builder_custom_init@@Base+0x79>
  404b1e:	lea    rax,[rip+0xfffffffffffffd5b]        # 404880 <flatcc_builder_default_alloc@@Base>
  404b25:	mov    QWORD PTR [rbp-0x20],rax
  404b29:	xor    eax,eax
  404b2b:	mov    rcx,QWORD PTR [rbp-0x28]
  404b2f:	mov    rdx,QWORD PTR [rbp-0x8]
  404b33:	mov    QWORD PTR [rdx+0x40],rcx
  404b37:	mov    rcx,QWORD PTR [rbp-0x20]
  404b3b:	mov    rdx,QWORD PTR [rbp-0x8]
  404b3f:	mov    QWORD PTR [rdx+0x50],rcx
  404b43:	mov    rcx,QWORD PTR [rbp-0x18]
  404b47:	mov    rdx,QWORD PTR [rbp-0x8]
  404b4b:	mov    QWORD PTR [rdx+0x38],rcx
  404b4f:	mov    rcx,QWORD PTR [rbp-0x10]
  404b53:	mov    rdx,QWORD PTR [rbp-0x8]
  404b57:	mov    QWORD PTR [rdx+0x48],rcx
  404b5b:	add    rsp,0x30
  404b5f:	pop    rbp
  404b60:	ret    
  404b61:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404b6b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000404b70 <flatcc_builder_init@@Base>:
  404b70:	push   rbp
  404b71:	mov    rbp,rsp
  404b74:	sub    rsp,0x10
  404b78:	xor    eax,eax
  404b7a:	mov    ecx,eax
  404b7c:	mov    QWORD PTR [rbp-0x8],rdi
  404b80:	mov    rdi,QWORD PTR [rbp-0x8]
  404b84:	mov    rsi,rcx
  404b87:	mov    rdx,rcx
  404b8a:	mov    QWORD PTR [rbp-0x10],rcx
  404b8e:	mov    r8,QWORD PTR [rbp-0x10]
  404b92:	call   404ab0 <flatcc_builder_custom_init@@Base>
  404b97:	add    rsp,0x10
  404b9b:	pop    rbp
  404b9c:	ret    
  404b9d:	nop    DWORD PTR [rax]

0000000000404ba0 <flatcc_builder_custom_reset@@Base>:
  404ba0:	push   rbp
  404ba1:	mov    rbp,rsp
  404ba4:	sub    rsp,0x30
  404ba8:	mov    QWORD PTR [rbp-0x10],rdi
  404bac:	mov    DWORD PTR [rbp-0x14],esi
  404baf:	mov    DWORD PTR [rbp-0x18],edx
  404bb2:	mov    DWORD PTR [rbp-0x24],0x0
  404bb9:	cmp    DWORD PTR [rbp-0x24],0x8
  404bbd:	jge    404c9d <flatcc_builder_custom_reset@@Base+0xfd>
  404bc3:	mov    rax,QWORD PTR [rbp-0x10]
  404bc7:	add    rax,0x58
  404bcd:	movsxd rcx,DWORD PTR [rbp-0x24]
  404bd1:	shl    rcx,0x4
  404bd5:	add    rax,rcx
  404bd8:	mov    QWORD PTR [rbp-0x20],rax
  404bdc:	mov    rax,QWORD PTR [rbp-0x20]
  404be0:	cmp    QWORD PTR [rax],0x0
  404be4:	je     404c52 <flatcc_builder_custom_reset@@Base+0xb2>
  404bea:	cmp    DWORD PTR [rbp-0x24],0x5
  404bee:	je     404c37 <flatcc_builder_custom_reset@@Base+0x97>
  404bf4:	cmp    DWORD PTR [rbp-0x18],0x0
  404bf8:	je     404c37 <flatcc_builder_custom_reset@@Base+0x97>
  404bfe:	mov    rax,QWORD PTR [rbp-0x10]
  404c02:	mov    rax,QWORD PTR [rax+0x50]
  404c06:	mov    rcx,QWORD PTR [rbp-0x10]
  404c0a:	mov    rdi,QWORD PTR [rcx+0x40]
  404c0e:	mov    rsi,QWORD PTR [rbp-0x20]
  404c12:	mov    r8d,DWORD PTR [rbp-0x24]
  404c16:	mov    edx,0x1
  404c1b:	mov    ecx,0x1
  404c20:	call   rax
  404c22:	cmp    eax,0x0
  404c25:	je     404c37 <flatcc_builder_custom_reset@@Base+0x97>
  404c2b:	mov    DWORD PTR [rbp-0x4],0xffffffff
  404c32:	jmp    404dde <flatcc_builder_custom_reset@@Base+0x23e>
  404c37:	xor    esi,esi
  404c39:	mov    rax,QWORD PTR [rbp-0x20]
  404c3d:	mov    rdi,QWORD PTR [rax]
  404c40:	mov    rax,QWORD PTR [rbp-0x20]
  404c44:	mov    rdx,QWORD PTR [rax+0x8]
  404c48:	call   4030a0 <memset@plt>
  404c4d:	jmp    404c8a <flatcc_builder_custom_reset@@Base+0xea>
  404c52:	mov    rax,QWORD PTR [rbp-0x20]
  404c56:	cmp    QWORD PTR [rax+0x8],0x0
  404c5b:	jne    404c66 <flatcc_builder_custom_reset@@Base+0xc6>
  404c61:	jmp    404c85 <flatcc_builder_custom_reset@@Base+0xe5>
  404c66:	lea    rdi,[rip+0x7d13]        # 40c980 <flatcc_builder_padding_base@@Base+0x200>
  404c6d:	lea    rsi,[rip+0x7d1e]        # 40c992 <flatcc_builder_padding_base@@Base+0x212>
  404c74:	mov    edx,0x1b2
  404c79:	lea    rcx,[rip+0x7d72]        # 40c9f2 <flatcc_builder_padding_base@@Base+0x272>
  404c80:	call   403090 <__assert_fail@plt>
  404c85:	jmp    404c8a <flatcc_builder_custom_reset@@Base+0xea>
  404c8a:	jmp    404c8f <flatcc_builder_custom_reset@@Base+0xef>
  404c8f:	mov    eax,DWORD PTR [rbp-0x24]
  404c92:	add    eax,0x1
  404c95:	mov    DWORD PTR [rbp-0x24],eax
  404c98:	jmp    404bb9 <flatcc_builder_custom_reset@@Base+0x19>
  404c9d:	mov    rax,QWORD PTR [rbp-0x10]
  404ca1:	mov    DWORD PTR [rax+0xe0],0x0
  404cab:	mov    rax,QWORD PTR [rbp-0x10]
  404caf:	cmp    DWORD PTR [rax+0xe4],0x0
  404cb6:	jbe    404cca <flatcc_builder_custom_reset@@Base+0x12a>
  404cbc:	mov    rax,QWORD PTR [rbp-0x10]
  404cc0:	mov    DWORD PTR [rax+0xe4],0x10
  404cca:	mov    rax,QWORD PTR [rbp-0x10]
  404cce:	mov    WORD PTR [rax+0xe8],0x0
  404cd7:	mov    rax,QWORD PTR [rbp-0x10]
  404cdb:	mov    DWORD PTR [rax+0xf0],0x0
  404ce5:	mov    rax,QWORD PTR [rbp-0x10]
  404ce9:	mov    DWORD PTR [rax+0xf4],0x0
  404cf3:	mov    rax,QWORD PTR [rbp-0x10]
  404cf7:	mov    DWORD PTR [rax+0x104],0x0
  404d01:	mov    rax,QWORD PTR [rbp-0x10]
  404d05:	mov    DWORD PTR [rax+0x108],0x0
  404d0f:	mov    rax,QWORD PTR [rbp-0x10]
  404d13:	mov    DWORD PTR [rax+0x20],0x0
  404d1a:	mov    rax,QWORD PTR [rbp-0x10]
  404d1e:	mov    DWORD PTR [rax+0x24],0x0
  404d25:	mov    rax,QWORD PTR [rbp-0x10]
  404d29:	mov    DWORD PTR [rax+0xfc],0x0
  404d33:	mov    rax,QWORD PTR [rbp-0x10]
  404d37:	mov    DWORD PTR [rax+0x100],0x0
  404d41:	mov    rax,QWORD PTR [rbp-0x10]
  404d45:	mov    rax,QWORD PTR [rax+0x68]
  404d49:	mov    rcx,QWORD PTR [rbp-0x10]
  404d4d:	mov    QWORD PTR [rcx+0x18],rax
  404d51:	mov    rax,QWORD PTR [rbp-0x10]
  404d55:	mov    rax,QWORD PTR [rax+0x88]
  404d5c:	mov    rcx,QWORD PTR [rbp-0x10]
  404d60:	mov    QWORD PTR [rcx],rax
  404d63:	mov    rax,QWORD PTR [rbp-0x10]
  404d67:	mov    rax,QWORD PTR [rax+0x58]
  404d6b:	mov    rcx,QWORD PTR [rbp-0x10]
  404d6f:	mov    QWORD PTR [rcx+0x8],rax
  404d73:	mov    rax,QWORD PTR [rbp-0x10]
  404d77:	mov    QWORD PTR [rax+0x30],0x0
  404d7f:	cmp    DWORD PTR [rbp-0x14],0x0
  404d83:	je     404db4 <flatcc_builder_custom_reset@@Base+0x214>
  404d89:	mov    rax,QWORD PTR [rbp-0x10]
  404d8d:	mov    QWORD PTR [rax+0x118],0x0
  404d98:	mov    rax,QWORD PTR [rbp-0x10]
  404d9c:	mov    DWORD PTR [rax+0x120],0x0
  404da6:	mov    rax,QWORD PTR [rbp-0x10]
  404daa:	mov    DWORD PTR [rax+0x124],0x0
  404db4:	mov    rax,QWORD PTR [rbp-0x10]
  404db8:	cmp    DWORD PTR [rax+0x128],0x0
  404dbf:	je     404dd7 <flatcc_builder_custom_reset@@Base+0x237>
  404dc5:	mov    rax,QWORD PTR [rbp-0x10]
  404dc9:	add    rax,0x130
  404dcf:	mov    rdi,rax
  404dd2:	call   40a710 <flatcc_emitter_reset@@Base>
  404dd7:	mov    DWORD PTR [rbp-0x4],0x0
  404dde:	mov    eax,DWORD PTR [rbp-0x4]
  404de1:	add    rsp,0x30
  404de5:	pop    rbp
  404de6:	ret    
  404de7:	nop    WORD PTR [rax+rax*1+0x0]

0000000000404df0 <flatcc_builder_reset@@Base>:
  404df0:	push   rbp
  404df1:	mov    rbp,rsp
  404df4:	sub    rsp,0x10
  404df8:	xor    eax,eax
  404dfa:	mov    QWORD PTR [rbp-0x8],rdi
  404dfe:	mov    rdi,QWORD PTR [rbp-0x8]
  404e02:	mov    esi,eax
  404e04:	mov    edx,eax
  404e06:	call   404ba0 <flatcc_builder_custom_reset@@Base>
  404e0b:	add    rsp,0x10
  404e0f:	pop    rbp
  404e10:	ret    
  404e11:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404e1b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000404e20 <flatcc_builder_clear@@Base>:
  404e20:	push   rbp
  404e21:	mov    rbp,rsp
  404e24:	sub    rsp,0x20
  404e28:	mov    QWORD PTR [rbp-0x8],rdi
  404e2c:	mov    DWORD PTR [rbp-0x14],0x0
  404e33:	cmp    DWORD PTR [rbp-0x14],0x8
  404e37:	jge    404e93 <flatcc_builder_clear@@Base+0x73>
  404e3d:	xor    eax,eax
  404e3f:	mov    edx,eax
  404e41:	xor    ecx,ecx
  404e43:	mov    rsi,QWORD PTR [rbp-0x8]
  404e47:	add    rsi,0x58
  404e4e:	movsxd rdi,DWORD PTR [rbp-0x14]
  404e52:	shl    rdi,0x4
  404e56:	add    rsi,rdi
  404e59:	mov    QWORD PTR [rbp-0x10],rsi
  404e5d:	mov    rsi,QWORD PTR [rbp-0x8]
  404e61:	mov    rsi,QWORD PTR [rsi+0x50]
  404e65:	mov    rdi,QWORD PTR [rbp-0x8]
  404e69:	mov    rdi,QWORD PTR [rdi+0x40]
  404e6d:	mov    r8,QWORD PTR [rbp-0x10]
  404e71:	mov    eax,DWORD PTR [rbp-0x14]
  404e74:	mov    QWORD PTR [rbp-0x20],rsi
  404e78:	mov    rsi,r8
  404e7b:	mov    r8d,eax
  404e7e:	mov    r9,QWORD PTR [rbp-0x20]
  404e82:	call   r9
  404e85:	mov    eax,DWORD PTR [rbp-0x14]
  404e88:	add    eax,0x1
  404e8b:	mov    DWORD PTR [rbp-0x14],eax
  404e8e:	jmp    404e33 <flatcc_builder_clear@@Base+0x13>
  404e93:	mov    rax,QWORD PTR [rbp-0x8]
  404e97:	cmp    DWORD PTR [rax+0x128],0x0
  404e9e:	je     404eb6 <flatcc_builder_clear@@Base+0x96>
  404ea4:	mov    rax,QWORD PTR [rbp-0x8]
  404ea8:	add    rax,0x130
  404eae:	mov    rdi,rax
  404eb1:	call   40a8b0 <flatcc_emitter_clear@@Base>
  404eb6:	xor    esi,esi
  404eb8:	mov    rax,QWORD PTR [rbp-0x8]
  404ebc:	mov    rdi,rax
  404ebf:	mov    edx,0x188
  404ec4:	call   4030a0 <memset@plt>
  404ec9:	add    rsp,0x20
  404ecd:	pop    rbp
  404ece:	ret    
  404ecf:	nop

0000000000404ed0 <flatcc_builder_enter_user_frame_ptr@@Base>:
  404ed0:	push   rbp
  404ed1:	mov    rbp,rsp
  404ed4:	sub    rsp,0x20
  404ed8:	xor    r8d,r8d
  404edb:	mov    QWORD PTR [rbp-0x10],rdi
  404edf:	mov    QWORD PTR [rbp-0x18],rsi
  404ee3:	mov    rax,QWORD PTR [rbp-0x18]
  404ee7:	add    rax,0x8
  404eed:	sub    rax,0x1
  404ef3:	and    rax,0xfffffffffffffff8
  404ef9:	add    rax,0x8
  404eff:	mov    QWORD PTR [rbp-0x18],rax
  404f03:	mov    rdi,QWORD PTR [rbp-0x10]
  404f07:	mov    rax,QWORD PTR [rbp-0x10]
  404f0b:	mov    rdx,QWORD PTR [rax+0x180]
  404f12:	mov    rcx,QWORD PTR [rbp-0x18]
  404f16:	mov    esi,0x7
  404f1b:	call   404fc0 <flatcc_builder_enter_user_frame_ptr@@Base+0xf0>
  404f20:	mov    QWORD PTR [rbp-0x20],rax
  404f24:	cmp    rax,0x0
  404f28:	jne    404f3b <flatcc_builder_enter_user_frame_ptr@@Base+0x6b>
  404f2e:	mov    QWORD PTR [rbp-0x8],0x0
  404f36:	jmp    404fa7 <flatcc_builder_enter_user_frame_ptr@@Base+0xd7>
  404f3b:	xor    esi,esi
  404f3d:	mov    rax,QWORD PTR [rbp-0x20]
  404f41:	mov    rdx,QWORD PTR [rbp-0x18]
  404f45:	mov    rdi,rax
  404f48:	call   4030a0 <memset@plt>
  404f4d:	mov    rax,QWORD PTR [rbp-0x10]
  404f51:	mov    rax,QWORD PTR [rax+0x178]
  404f58:	mov    rcx,QWORD PTR [rbp-0x20]
  404f5c:	mov    rdx,rcx
  404f5f:	add    rdx,0x8
  404f66:	mov    QWORD PTR [rbp-0x20],rdx
  404f6a:	mov    QWORD PTR [rcx],rax
  404f6d:	mov    rax,QWORD PTR [rbp-0x10]
  404f71:	mov    rax,QWORD PTR [rax+0x180]
  404f78:	add    rax,0x8
  404f7e:	mov    rcx,QWORD PTR [rbp-0x10]
  404f82:	mov    QWORD PTR [rcx+0x178],rax
  404f89:	mov    rax,QWORD PTR [rbp-0x18]
  404f8d:	mov    rcx,QWORD PTR [rbp-0x10]
  404f91:	add    rax,QWORD PTR [rcx+0x180]
  404f98:	mov    QWORD PTR [rcx+0x180],rax
  404f9f:	mov    rax,QWORD PTR [rbp-0x20]
  404fa3:	mov    QWORD PTR [rbp-0x8],rax
  404fa7:	mov    rax,QWORD PTR [rbp-0x8]
  404fab:	add    rsp,0x20
  404faf:	pop    rbp
  404fb0:	ret    
  404fb1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404fbb:	nop    DWORD PTR [rax+rax*1+0x0]
  404fc0:	push   rbp
  404fc1:	mov    rbp,rsp
  404fc4:	sub    rsp,0x40
  404fc8:	mov    QWORD PTR [rbp-0x8],rdi
  404fcc:	mov    DWORD PTR [rbp-0xc],esi
  404fcf:	mov    QWORD PTR [rbp-0x18],rdx
  404fd3:	mov    QWORD PTR [rbp-0x20],rcx
  404fd7:	mov    DWORD PTR [rbp-0x24],r8d
  404fdb:	mov    rax,QWORD PTR [rbp-0x8]
  404fdf:	add    rax,0x58
  404fe5:	movsxd rcx,DWORD PTR [rbp-0xc]
  404fe9:	shl    rcx,0x4
  404fed:	add    rax,rcx
  404ff0:	mov    QWORD PTR [rbp-0x30],rax
  404ff4:	mov    rax,QWORD PTR [rbp-0x18]
  404ff8:	add    rax,QWORD PTR [rbp-0x20]
  404ffc:	mov    rcx,QWORD PTR [rbp-0x30]
  405000:	cmp    rax,QWORD PTR [rcx+0x8]
  405004:	jbe    405065 <flatcc_builder_enter_user_frame_ptr@@Base+0x195>
  40500a:	mov    rax,QWORD PTR [rbp-0x8]
  40500e:	mov    rax,QWORD PTR [rax+0x50]
  405012:	mov    rcx,QWORD PTR [rbp-0x8]
  405016:	mov    rdi,QWORD PTR [rcx+0x40]
  40501a:	mov    rsi,QWORD PTR [rbp-0x30]
  40501e:	mov    rcx,QWORD PTR [rbp-0x18]
  405022:	add    rcx,QWORD PTR [rbp-0x20]
  405026:	mov    edx,DWORD PTR [rbp-0x24]
  405029:	mov    r8d,DWORD PTR [rbp-0xc]
  40502d:	mov    DWORD PTR [rbp-0x34],edx
  405030:	mov    rdx,rcx
  405033:	mov    ecx,DWORD PTR [rbp-0x34]
  405036:	call   rax
  405038:	cmp    eax,0x0
  40503b:	je     405060 <flatcc_builder_enter_user_frame_ptr@@Base+0x190>
  405041:	lea    rdi,[rip+0x8b0a]        # 40db52 <flatcc_builder_padding_base@@Base+0x13d2>
  405048:	lea    rsi,[rip+0x7943]        # 40c992 <flatcc_builder_padding_base@@Base+0x212>
  40504f:	mov    edx,0x134
  405054:	lea    rcx,[rip+0x8931]        # 40d98c <flatcc_builder_padding_base@@Base+0x120c>
  40505b:	call   403090 <__assert_fail@plt>
  405060:	jmp    405065 <flatcc_builder_enter_user_frame_ptr@@Base+0x195>
  405065:	mov    rax,QWORD PTR [rbp-0x30]
  405069:	mov    rax,QWORD PTR [rax]
  40506c:	add    rax,QWORD PTR [rbp-0x18]
  405070:	add    rsp,0x40
  405074:	pop    rbp
  405075:	ret    
  405076:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000405080 <flatcc_builder_enter_user_frame@@Base>:
  405080:	push   rbp
  405081:	mov    rbp,rsp
  405084:	sub    rsp,0x20
  405088:	xor    r8d,r8d
  40508b:	mov    QWORD PTR [rbp-0x10],rdi
  40508f:	mov    QWORD PTR [rbp-0x18],rsi
  405093:	mov    rax,QWORD PTR [rbp-0x18]
  405097:	add    rax,0x8
  40509d:	sub    rax,0x1
  4050a3:	and    rax,0xfffffffffffffff8
  4050a9:	add    rax,0x8
  4050af:	mov    QWORD PTR [rbp-0x18],rax
  4050b3:	mov    rdi,QWORD PTR [rbp-0x10]
  4050b7:	mov    rax,QWORD PTR [rbp-0x10]
  4050bb:	mov    rdx,QWORD PTR [rax+0x180]
  4050c2:	mov    rcx,QWORD PTR [rbp-0x18]
  4050c6:	mov    esi,0x7
  4050cb:	call   404fc0 <flatcc_builder_enter_user_frame_ptr@@Base+0xf0>
  4050d0:	mov    QWORD PTR [rbp-0x20],rax
  4050d4:	cmp    rax,0x0
  4050d8:	jne    4050eb <flatcc_builder_enter_user_frame@@Base+0x6b>
  4050de:	mov    QWORD PTR [rbp-0x8],0x0
  4050e6:	jmp    40515e <flatcc_builder_enter_user_frame@@Base+0xde>
  4050eb:	xor    esi,esi
  4050ed:	mov    rax,QWORD PTR [rbp-0x20]
  4050f1:	mov    rdx,QWORD PTR [rbp-0x18]
  4050f5:	mov    rdi,rax
  4050f8:	call   4030a0 <memset@plt>
  4050fd:	mov    rax,QWORD PTR [rbp-0x10]
  405101:	mov    rax,QWORD PTR [rax+0x178]
  405108:	mov    rcx,QWORD PTR [rbp-0x20]
  40510c:	mov    rdx,rcx
  40510f:	add    rdx,0x8
  405116:	mov    QWORD PTR [rbp-0x20],rdx
  40511a:	mov    QWORD PTR [rcx],rax
  40511d:	mov    rax,QWORD PTR [rbp-0x10]
  405121:	mov    rax,QWORD PTR [rax+0x180]
  405128:	add    rax,0x8
  40512e:	mov    rcx,QWORD PTR [rbp-0x10]
  405132:	mov    QWORD PTR [rcx+0x178],rax
  405139:	mov    rax,QWORD PTR [rbp-0x18]
  40513d:	mov    rcx,QWORD PTR [rbp-0x10]
  405141:	add    rax,QWORD PTR [rcx+0x180]
  405148:	mov    QWORD PTR [rcx+0x180],rax
  40514f:	mov    rax,QWORD PTR [rbp-0x10]
  405153:	mov    rax,QWORD PTR [rax+0x178]
  40515a:	mov    QWORD PTR [rbp-0x8],rax
  40515e:	mov    rax,QWORD PTR [rbp-0x8]
  405162:	add    rsp,0x20
  405166:	pop    rbp
  405167:	ret    
  405168:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000405170 <flatcc_builder_exit_user_frame@@Base>:
  405170:	push   rbp
  405171:	mov    rbp,rsp
  405174:	sub    rsp,0x10
  405178:	mov    QWORD PTR [rbp-0x8],rdi
  40517c:	mov    rax,QWORD PTR [rbp-0x8]
  405180:	cmp    QWORD PTR [rax+0x178],0x0
  405188:	jbe    405193 <flatcc_builder_exit_user_frame@@Base+0x23>
  40518e:	jmp    4051b2 <flatcc_builder_exit_user_frame@@Base+0x42>
  405193:	lea    rdi,[rip+0x7896]        # 40ca30 <flatcc_builder_padding_base@@Base+0x2b0>
  40519a:	lea    rsi,[rip+0x77f1]        # 40c992 <flatcc_builder_padding_base@@Base+0x212>
  4051a1:	mov    edx,0x21e
  4051a6:	lea    rcx,[rip+0x789c]        # 40ca49 <flatcc_builder_padding_base@@Base+0x2c9>
  4051ad:	call   403090 <__assert_fail@plt>
  4051b2:	mov    rax,QWORD PTR [rbp-0x8]
  4051b6:	mov    rax,QWORD PTR [rax+0xc8]
  4051bd:	mov    rcx,QWORD PTR [rbp-0x8]
  4051c1:	mov    rcx,QWORD PTR [rcx+0x178]
  4051c8:	mov    ecx,ecx
  4051ca:	mov    edx,ecx
  4051cc:	add    rax,rdx
  4051cf:	mov    QWORD PTR [rbp-0x10],rax
  4051d3:	mov    rax,QWORD PTR [rbp-0x8]
  4051d7:	mov    rax,QWORD PTR [rax+0x178]
  4051de:	sub    rax,0x8
  4051e4:	mov    rdx,QWORD PTR [rbp-0x8]
  4051e8:	mov    QWORD PTR [rdx+0x180],rax
  4051ef:	mov    rax,QWORD PTR [rbp-0x10]
  4051f3:	mov    rax,QWORD PTR [rax-0x8]
  4051f7:	mov    rdx,QWORD PTR [rbp-0x8]
  4051fb:	mov    QWORD PTR [rdx+0x178],rax
  405202:	add    rsp,0x10
  405206:	pop    rbp
  405207:	ret    
  405208:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000405210 <flatcc_builder_exit_user_frame_at@@Base>:
  405210:	push   rbp
  405211:	mov    rbp,rsp
  405214:	sub    rsp,0x10
  405218:	mov    QWORD PTR [rbp-0x8],rdi
  40521c:	mov    QWORD PTR [rbp-0x10],rsi
  405220:	mov    rax,QWORD PTR [rbp-0x8]
  405224:	mov    rax,QWORD PTR [rax+0x178]
  40522b:	cmp    rax,QWORD PTR [rbp-0x10]
  40522f:	jb     40523a <flatcc_builder_exit_user_frame_at@@Base+0x2a>
  405235:	jmp    405259 <flatcc_builder_exit_user_frame_at@@Base+0x49>
  40523a:	lea    rdi,[rip+0x7842]        # 40ca83 <flatcc_builder_padding_base@@Base+0x303>
  405241:	lea    rsi,[rip+0x774a]        # 40c992 <flatcc_builder_padding_base@@Base+0x212>
  405248:	mov    edx,0x227
  40524d:	lea    rcx,[rip+0x784e]        # 40caa2 <flatcc_builder_padding_base@@Base+0x322>
  405254:	call   403090 <__assert_fail@plt>
  405259:	mov    rax,QWORD PTR [rbp-0x10]
  40525d:	mov    rcx,QWORD PTR [rbp-0x8]
  405261:	mov    QWORD PTR [rcx+0x178],rax
  405268:	mov    rdi,QWORD PTR [rbp-0x8]
  40526c:	call   405170 <flatcc_builder_exit_user_frame@@Base>
  405271:	add    rsp,0x10
  405275:	pop    rbp
  405276:	ret    
  405277:	nop    WORD PTR [rax+rax*1+0x0]

0000000000405280 <flatcc_builder_get_current_user_frame@@Base>:
  405280:	push   rbp
  405281:	mov    rbp,rsp
  405284:	mov    QWORD PTR [rbp-0x8],rdi
  405288:	mov    rax,QWORD PTR [rbp-0x8]
  40528c:	mov    rax,QWORD PTR [rax+0x178]
  405293:	pop    rbp
  405294:	ret    
  405295:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40529f:	nop

00000000004052a0 <flatcc_builder_get_user_frame_ptr@@Base>:
  4052a0:	push   rbp
  4052a1:	mov    rbp,rsp
  4052a4:	mov    QWORD PTR [rbp-0x8],rdi
  4052a8:	mov    QWORD PTR [rbp-0x10],rsi
  4052ac:	mov    rax,QWORD PTR [rbp-0x8]
  4052b0:	mov    rax,QWORD PTR [rax+0xc8]
  4052b7:	mov    rcx,QWORD PTR [rbp-0x10]
  4052bb:	mov    ecx,ecx
  4052bd:	mov    edx,ecx
  4052bf:	add    rax,rdx
  4052c2:	pop    rbp
  4052c3:	ret    
  4052c4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4052ce:	xchg   ax,ax

00000000004052d0 <flatcc_builder_embed_buffer@@Base>:
  4052d0:	push   rbp
  4052d1:	mov    rbp,rsp
  4052d4:	sub    rsp,0xd0
  4052db:	mov    QWORD PTR [rbp-0x10],rdi
  4052df:	mov    WORD PTR [rbp-0x12],si
  4052e3:	mov    QWORD PTR [rbp-0x20],rdx
  4052e7:	mov    QWORD PTR [rbp-0x28],rcx
  4052eb:	mov    WORD PTR [rbp-0x2a],r8w
  4052f0:	mov    DWORD PTR [rbp-0x30],r9d
  4052f4:	mov    eax,DWORD PTR [rbp-0x30]
  4052f7:	and    eax,0x2
  4052fa:	mov    DWORD PTR [rbp-0xcc],eax
  405300:	mov    rdi,QWORD PTR [rbp-0x10]
  405304:	mov    si,WORD PTR [rbp-0x12]
  405308:	mov    rcx,QWORD PTR [rbp-0x10]
  40530c:	cmp    DWORD PTR [rcx+0x100],0x0
  405313:	sete   r10b
  405317:	xor    r10b,0xff
  40531b:	and    r10b,0x1
  40531f:	movzx  ecx,r10b
  405323:	lea    rdx,[rbp-0x2a]
  405327:	mov    WORD PTR [rbp-0xce],si
  40532e:	mov    rsi,rdx
  405331:	mov    r8w,WORD PTR [rbp-0xce]
  405339:	movzx  edx,r8w
  40533d:	call   405530 <flatcc_builder_embed_buffer@@Base+0x260>
  405342:	cmp    eax,0x0
  405345:	je     405357 <flatcc_builder_embed_buffer@@Base+0x87>
  40534b:	mov    DWORD PTR [rbp-0x4],0x0
  405352:	jmp    40551c <flatcc_builder_embed_buffer@@Base+0x24c>
  405357:	xor    eax,eax
  405359:	mov    ecx,eax
  40535b:	mov    rdi,QWORD PTR [rbp-0x10]
  40535f:	mov    rdx,QWORD PTR [rbp-0x28]
  405363:	mov    eax,edx
  405365:	mov    esi,eax
  405367:	mov    eax,DWORD PTR [rbp-0xcc]
  40536d:	cmp    eax,0x0
  405370:	mov    r8d,0x4
  405376:	cmovne rcx,r8
  40537a:	add    rsi,rcx
  40537d:	movzx  edx,WORD PTR [rbp-0x2a]
  405381:	call   4056d0 <flatcc_builder_embed_buffer@@Base+0x400>
  405386:	mov    DWORD PTR [rbp-0x38],eax
  405389:	mov    rcx,QWORD PTR [rbp-0x28]
  40538d:	add    ecx,DWORD PTR [rbp-0x38]
  405390:	mov    edi,ecx
  405392:	call   405700 <flatcc_builder_embed_buffer@@Base+0x430>
  405397:	mov    DWORD PTR [rbp-0x34],eax
  40539a:	mov    QWORD PTR [rbp-0xc8],0x0
  4053a5:	mov    DWORD PTR [rbp-0xc0],0x0
  4053af:	mov    r8,QWORD PTR [rbp-0x10]
  4053b3:	cmp    DWORD PTR [r8+0x100],0x0
  4053bb:	je     405427 <flatcc_builder_embed_buffer@@Base+0x157>
  4053c1:	mov    rax,QWORD PTR [rbp-0xc8]
  4053c8:	add    rax,0x4
  4053ce:	mov    QWORD PTR [rbp-0xc8],rax
  4053d5:	lea    rax,[rbp-0x34]
  4053d9:	lea    rcx,[rbp-0xc8]
  4053e0:	mov    rdx,rcx
  4053e3:	add    rdx,0x10
  4053ea:	movsxd rsi,DWORD PTR [rbp-0xc0]
  4053f1:	shl    rsi,0x4
  4053f5:	add    rdx,rsi
  4053f8:	mov    QWORD PTR [rdx],rax
  4053fb:	add    rcx,0x10
  405402:	movsxd rax,DWORD PTR [rbp-0xc0]
  405409:	shl    rax,0x4
  40540d:	add    rcx,rax
  405410:	mov    QWORD PTR [rcx+0x8],0x4
  405418:	mov    edi,DWORD PTR [rbp-0xc0]
  40541e:	add    edi,0x1
  405421:	mov    DWORD PTR [rbp-0xc0],edi
  405427:	cmp    QWORD PTR [rbp-0x28],0x0
  40542c:	jbe    405496 <flatcc_builder_embed_buffer@@Base+0x1c6>
  405432:	mov    rax,QWORD PTR [rbp-0x28]
  405436:	add    rax,QWORD PTR [rbp-0xc8]
  40543d:	mov    QWORD PTR [rbp-0xc8],rax
  405444:	mov    rax,QWORD PTR [rbp-0x20]
  405448:	lea    rcx,[rbp-0xc8]
  40544f:	mov    rdx,rcx
  405452:	add    rdx,0x10
  405459:	movsxd rsi,DWORD PTR [rbp-0xc0]
  405460:	shl    rsi,0x4
  405464:	add    rdx,rsi
  405467:	mov    QWORD PTR [rdx],rax
  40546a:	mov    rax,QWORD PTR [rbp-0x28]
  40546e:	add    rcx,0x10
  405475:	movsxd rdx,DWORD PTR [rbp-0xc0]
  40547c:	shl    rdx,0x4
  405480:	add    rcx,rdx
  405483:	mov    QWORD PTR [rcx+0x8],rax
  405487:	mov    edi,DWORD PTR [rbp-0xc0]
  40548d:	add    edi,0x1
  405490:	mov    DWORD PTR [rbp-0xc0],edi
  405496:	cmp    DWORD PTR [rbp-0x38],0x0
  40549a:	jbe    405509 <flatcc_builder_embed_buffer@@Base+0x239>
  4054a0:	lea    rax,[rip+0x72d9]        # 40c780 <flatcc_builder_padding_base@@Base>
  4054a7:	mov    ecx,DWORD PTR [rbp-0x38]
  4054aa:	mov    edx,ecx
  4054ac:	add    rdx,QWORD PTR [rbp-0xc8]
  4054b3:	mov    QWORD PTR [rbp-0xc8],rdx
  4054ba:	lea    rdx,[rbp-0xc8]
  4054c1:	mov    rsi,rdx
  4054c4:	add    rsi,0x10
  4054cb:	movsxd rdi,DWORD PTR [rbp-0xc0]
  4054d2:	shl    rdi,0x4
  4054d6:	add    rsi,rdi
  4054d9:	mov    QWORD PTR [rsi],rax
  4054dc:	mov    ecx,DWORD PTR [rbp-0x38]
  4054df:	mov    eax,ecx
  4054e1:	add    rdx,0x10
  4054e8:	movsxd rsi,DWORD PTR [rbp-0xc0]
  4054ef:	shl    rsi,0x4
  4054f3:	add    rdx,rsi
  4054f6:	mov    QWORD PTR [rdx+0x8],rax
  4054fa:	mov    ecx,DWORD PTR [rbp-0xc0]
  405500:	add    ecx,0x1
  405503:	mov    DWORD PTR [rbp-0xc0],ecx
  405509:	mov    rdi,QWORD PTR [rbp-0x10]
  40550d:	lea    rsi,[rbp-0xc8]
  405514:	call   405710 <flatcc_builder_embed_buffer@@Base+0x440>
  405519:	mov    DWORD PTR [rbp-0x4],eax
  40551c:	mov    eax,DWORD PTR [rbp-0x4]
  40551f:	add    rsp,0xd0
  405526:	pop    rbp
  405527:	ret    
  405528:	nop    DWORD PTR [rax+rax*1+0x0]
  405530:	push   rbp
  405531:	mov    rbp,rsp
  405534:	sub    rsp,0xc0
  40553b:	mov    QWORD PTR [rbp-0x8],rdi
  40553f:	mov    QWORD PTR [rbp-0x10],rsi
  405543:	mov    WORD PTR [rbp-0x12],dx
  405547:	mov    DWORD PTR [rbp-0x18],ecx
  40554a:	movzx  eax,WORD PTR [rbp-0x12]
  40554e:	cmp    eax,0x0
  405551:	je     405566 <flatcc_builder_embed_buffer@@Base+0x296>
  405557:	movzx  eax,WORD PTR [rbp-0x12]
  40555b:	mov    DWORD PTR [rbp-0xb4],eax
  405561:	jmp    4055ac <flatcc_builder_embed_buffer@@Base+0x2dc>
  405566:	mov    rax,QWORD PTR [rbp-0x8]
  40556a:	movzx  ecx,WORD PTR [rax+0xec]
  405571:	cmp    ecx,0x0
  405574:	je     405590 <flatcc_builder_embed_buffer@@Base+0x2c0>
  40557a:	mov    rax,QWORD PTR [rbp-0x8]
  40557e:	movzx  ecx,WORD PTR [rax+0xec]
  405585:	mov    DWORD PTR [rbp-0xb8],ecx
  40558b:	jmp    4055a0 <flatcc_builder_embed_buffer@@Base+0x2d0>
  405590:	mov    eax,0x1
  405595:	mov    DWORD PTR [rbp-0xb8],eax
  40559b:	jmp    4055a0 <flatcc_builder_embed_buffer@@Base+0x2d0>
  4055a0:	mov    eax,DWORD PTR [rbp-0xb8]
  4055a6:	mov    DWORD PTR [rbp-0xb4],eax
  4055ac:	mov    eax,DWORD PTR [rbp-0xb4]
  4055b2:	mov    WORD PTR [rbp-0x12],ax
  4055b6:	mov    rdi,QWORD PTR [rbp-0x10]
  4055ba:	mov    esi,0x4
  4055bf:	call   4070a0 <flatcc_builder_start_vector@@Base+0xb0>
  4055c4:	mov    rdi,QWORD PTR [rbp-0x10]
  4055c8:	movzx  esi,WORD PTR [rbp-0x12]
  4055cc:	call   4070a0 <flatcc_builder_start_vector@@Base+0xb0>
  4055d1:	cmp    DWORD PTR [rbp-0x18],0x0
  4055d5:	jne    4056c5 <flatcc_builder_embed_buffer@@Base+0x3f5>
  4055db:	mov    rdi,QWORD PTR [rbp-0x8]
  4055df:	movzx  esi,WORD PTR [rbp-0x12]
  4055e3:	call   40a400 <flatcc_builder_get_emit_context@@Base+0x20>
  4055e8:	mov    eax,eax
  4055ea:	mov    ecx,eax
  4055ec:	mov    QWORD PTR [rbp-0x20],rcx
  4055f0:	cmp    QWORD PTR [rbp-0x20],0x0
  4055f5:	je     4056c0 <flatcc_builder_embed_buffer@@Base+0x3f0>
  4055fb:	mov    QWORD PTR [rbp-0xb0],0x0
  405606:	mov    DWORD PTR [rbp-0xa8],0x0
  405610:	cmp    QWORD PTR [rbp-0x20],0x0
  405615:	jbe    405682 <flatcc_builder_embed_buffer@@Base+0x3b2>
  40561b:	lea    rax,[rip+0x715e]        # 40c780 <flatcc_builder_padding_base@@Base>
  405622:	mov    rcx,QWORD PTR [rbp-0x20]
  405626:	add    rcx,QWORD PTR [rbp-0xb0]
  40562d:	mov    QWORD PTR [rbp-0xb0],rcx
  405634:	lea    rcx,[rbp-0xb0]
  40563b:	mov    rdx,rcx
  40563e:	add    rdx,0x10
  405645:	movsxd rsi,DWORD PTR [rbp-0xa8]
  40564c:	shl    rsi,0x4
  405650:	add    rdx,rsi
  405653:	mov    QWORD PTR [rdx],rax
  405656:	mov    rax,QWORD PTR [rbp-0x20]
  40565a:	add    rcx,0x10
  405661:	movsxd rdx,DWORD PTR [rbp-0xa8]
  405668:	shl    rdx,0x4
  40566c:	add    rcx,rdx
  40566f:	mov    QWORD PTR [rcx+0x8],rax
  405673:	mov    edi,DWORD PTR [rbp-0xa8]
  405679:	add    edi,0x1
  40567c:	mov    DWORD PTR [rbp-0xa8],edi
  405682:	mov    rdi,QWORD PTR [rbp-0x8]
  405686:	lea    rsi,[rbp-0xb0]
  40568d:	call   4076a0 <flatcc_builder_create_vtable@@Base+0x140>
  405692:	xor    ecx,ecx
  405694:	cmp    ecx,eax
  405696:	jne    4056bb <flatcc_builder_embed_buffer@@Base+0x3eb>
  40569c:	lea    rdi,[rip+0x84af]        # 40db52 <flatcc_builder_padding_base@@Base+0x13d2>
  4056a3:	lea    rsi,[rip+0x72e8]        # 40c992 <flatcc_builder_padding_base@@Base+0x212>
  4056aa:	mov    edx,0x2be
  4056af:	lea    rcx,[rip+0x8319]        # 40d9cf <flatcc_builder_padding_base@@Base+0x124f>
  4056b6:	call   403090 <__assert_fail@plt>
  4056bb:	jmp    4056c0 <flatcc_builder_embed_buffer@@Base+0x3f0>
  4056c0:	jmp    4056c5 <flatcc_builder_embed_buffer@@Base+0x3f5>
  4056c5:	xor    eax,eax
  4056c7:	add    rsp,0xc0
  4056ce:	pop    rbp
  4056cf:	ret    
  4056d0:	push   rbp
  4056d1:	mov    rbp,rsp
  4056d4:	mov    QWORD PTR [rbp-0x8],rdi
  4056d8:	mov    DWORD PTR [rbp-0xc],esi
  4056db:	mov    WORD PTR [rbp-0xe],dx
  4056df:	mov    rax,QWORD PTR [rbp-0x8]
  4056e3:	mov    ecx,DWORD PTR [rax+0xf0]
  4056e9:	sub    ecx,DWORD PTR [rbp-0xc]
  4056ec:	movzx  esi,WORD PTR [rbp-0xe]
  4056f0:	sub    esi,0x1
  4056f3:	and    ecx,esi
  4056f5:	mov    eax,ecx
  4056f7:	pop    rbp
  4056f8:	ret    
  4056f9:	nop    DWORD PTR [rax+0x0]
  405700:	push   rbp
  405701:	mov    rbp,rsp
  405704:	mov    DWORD PTR [rbp-0x4],edi
  405707:	mov    eax,DWORD PTR [rbp-0x4]
  40570a:	pop    rbp
  40570b:	ret    
  40570c:	nop    DWORD PTR [rax+0x0]
  405710:	push   rbp
  405711:	mov    rbp,rsp
  405714:	sub    rsp,0x20
  405718:	mov    QWORD PTR [rbp-0x8],rdi
  40571c:	mov    QWORD PTR [rbp-0x10],rsi
  405720:	mov    rax,QWORD PTR [rbp-0x8]
  405724:	mov    ecx,DWORD PTR [rax+0xf0]
  40572a:	mov    rax,QWORD PTR [rbp-0x10]
  40572e:	mov    rax,QWORD PTR [rax]
  405731:	sub    ecx,eax
  405733:	mov    DWORD PTR [rbp-0x14],ecx
  405736:	mov    rdx,QWORD PTR [rbp-0x10]
  40573a:	cmp    QWORD PTR [rdx],0x10
  40573e:	jbe    40575f <flatcc_builder_embed_buffer@@Base+0x48f>
  405744:	mov    rax,QWORD PTR [rbp-0x10]
  405748:	mov    rax,QWORD PTR [rax]
  40574b:	sub    rax,0x10
  405751:	mov    ecx,0xffffffff
  405756:	cmp    rax,rcx
  405759:	ja     405772 <flatcc_builder_embed_buffer@@Base+0x4a2>
  40575f:	mov    eax,DWORD PTR [rbp-0x14]
  405762:	mov    rcx,QWORD PTR [rbp-0x8]
  405766:	cmp    eax,DWORD PTR [rcx+0xf0]
  40576c:	jl     405791 <flatcc_builder_embed_buffer@@Base+0x4c1>
  405772:	lea    rdi,[rip+0x83d9]        # 40db52 <flatcc_builder_padding_base@@Base+0x13d2>
  405779:	lea    rsi,[rip+0x7212]        # 40c992 <flatcc_builder_padding_base@@Base+0x212>
  405780:	mov    edx,0x287
  405785:	lea    rcx,[rip+0x8285]        # 40da11 <flatcc_builder_padding_base@@Base+0x1291>
  40578c:	call   403090 <__assert_fail@plt>
  405791:	mov    rax,QWORD PTR [rbp-0x8]
  405795:	mov    rax,QWORD PTR [rax+0x48]
  405799:	mov    rcx,QWORD PTR [rbp-0x8]
  40579d:	mov    rdi,QWORD PTR [rcx+0x38]
  4057a1:	mov    rcx,QWORD PTR [rbp-0x10]
  4057a5:	add    rcx,0x10
  4057ac:	mov    rdx,QWORD PTR [rbp-0x10]
  4057b0:	mov    edx,DWORD PTR [rdx+0x8]
  4057b3:	mov    esi,DWORD PTR [rbp-0x14]
  4057b6:	mov    r8,QWORD PTR [rbp-0x10]
  4057ba:	mov    r8,QWORD PTR [r8]
  4057bd:	mov    DWORD PTR [rbp-0x18],esi
  4057c0:	mov    rsi,rcx
  4057c3:	mov    ecx,DWORD PTR [rbp-0x18]
  4057c6:	call   rax
  4057c8:	cmp    eax,0x0
  4057cb:	je     4057f0 <flatcc_builder_embed_buffer@@Base+0x520>
  4057d1:	lea    rdi,[rip+0x837a]        # 40db52 <flatcc_builder_padding_base@@Base+0x13d2>
  4057d8:	lea    rsi,[rip+0x71b3]        # 40c992 <flatcc_builder_padding_base@@Base+0x212>
  4057df:	mov    edx,0x28b
  4057e4:	lea    rcx,[rip+0x8226]        # 40da11 <flatcc_builder_padding_base@@Base+0x1291>
  4057eb:	call   403090 <__assert_fail@plt>
  4057f0:	mov    eax,DWORD PTR [rbp-0x14]
  4057f3:	mov    rcx,QWORD PTR [rbp-0x8]
  4057f7:	mov    DWORD PTR [rcx+0xf0],eax
  4057fd:	add    rsp,0x20
  405801:	pop    rbp
  405802:	ret    
  405803:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40580d:	nop    DWORD PTR [rax]

0000000000405810 <flatcc_builder_create_buffer@@Base>:
  405810:	push   rbp
  405811:	mov    rbp,rsp
  405814:	sub    rsp,0xf0
  40581b:	mov    QWORD PTR [rbp-0x10],rdi
  40581f:	mov    QWORD PTR [rbp-0x18],rsi
  405823:	mov    WORD PTR [rbp-0x1a],dx
  405827:	mov    DWORD PTR [rbp-0x20],ecx
  40582a:	mov    WORD PTR [rbp-0x22],r8w
  40582f:	mov    DWORD PTR [rbp-0x28],r9d
  405833:	mov    DWORD PTR [rbp-0x34],0x0
  40583a:	mov    DWORD PTR [rbp-0xd4],0x0
  405844:	mov    eax,DWORD PTR [rbp-0x28]
  405847:	and    eax,0x1
  40584a:	cmp    eax,0x0
  40584d:	setne  r10b
  405851:	and    r10b,0x1
  405855:	movzx  eax,r10b
  405859:	mov    DWORD PTR [rbp-0xd8],eax
  40585f:	mov    eax,DWORD PTR [rbp-0x28]
  405862:	and    eax,0x2
  405865:	cmp    eax,0x0
  405868:	setne  r10b
  40586c:	and    r10b,0x1
  405870:	movzx  eax,r10b
  405874:	mov    DWORD PTR [rbp-0xdc],eax
  40587a:	mov    rdi,QWORD PTR [rbp-0x10]
  40587e:	mov    dx,WORD PTR [rbp-0x1a]
  405882:	mov    ecx,DWORD PTR [rbp-0xd8]
  405888:	lea    rsi,[rbp-0x22]
  40588c:	movzx  edx,dx
  40588f:	call   405530 <flatcc_builder_embed_buffer@@Base+0x260>
  405894:	cmp    eax,0x0
  405897:	je     4058a9 <flatcc_builder_create_buffer@@Base+0x99>
  40589d:	mov    DWORD PTR [rbp-0x4],0x0
  4058a4:	jmp    405c15 <flatcc_builder_create_buffer@@Base+0x405>
  4058a9:	mov    rdi,QWORD PTR [rbp-0x10]
  4058ad:	movzx  esi,WORD PTR [rbp-0x22]
  4058b1:	call   405c30 <flatcc_builder_create_buffer@@Base+0x420>
  4058b6:	cmp    QWORD PTR [rbp-0x18],0x0
  4058bb:	je     4058ef <flatcc_builder_create_buffer@@Base+0xdf>
  4058c1:	mov    rax,QWORD PTR [rbp-0x18]
  4058c5:	mov    ecx,DWORD PTR [rax]
  4058c7:	mov    DWORD PTR [rbp-0xd4],ecx
  4058cd:	mov    edi,DWORD PTR [rbp-0xd4]
  4058d3:	call   405c70 <flatcc_builder_create_buffer@@Base+0x460>
  4058d8:	mov    DWORD PTR [rbp-0xd4],eax
  4058de:	mov    edi,DWORD PTR [rbp-0xd4]
  4058e4:	call   405700 <flatcc_builder_embed_buffer@@Base+0x430>
  4058e9:	mov    DWORD PTR [rbp-0xd4],eax
  4058ef:	xor    eax,eax
  4058f1:	mov    ecx,eax
  4058f3:	xor    eax,eax
  4058f5:	mov    edx,DWORD PTR [rbp-0xd4]
  4058fb:	cmp    edx,0x0
  4058fe:	mov    edx,0x4
  405903:	cmovne eax,edx
  405906:	mov    DWORD PTR [rbp-0x34],eax
  405909:	mov    rdi,QWORD PTR [rbp-0x10]
  40590d:	mov    eax,DWORD PTR [rbp-0x34]
  405910:	mov    esi,eax
  405912:	add    rsi,0x4
  405919:	mov    eax,DWORD PTR [rbp-0xdc]
  40591f:	cmp    eax,0x0
  405922:	mov    r8d,0x4
  405928:	cmovne rcx,r8
  40592c:	add    rsi,rcx
  40592f:	movzx  edx,WORD PTR [rbp-0x22]
  405933:	call   4056d0 <flatcc_builder_embed_buffer@@Base+0x400>
  405938:	mov    DWORD PTR [rbp-0x30],eax
  40593b:	mov    QWORD PTR [rbp-0xd0],0x0
  405946:	mov    DWORD PTR [rbp-0xc8],0x0
  405950:	cmp    DWORD PTR [rbp-0xd8],0x0
  405957:	jne    40596a <flatcc_builder_create_buffer@@Base+0x15a>
  40595d:	cmp    DWORD PTR [rbp-0xdc],0x0
  405964:	je     4059d0 <flatcc_builder_create_buffer@@Base+0x1c0>
  40596a:	mov    rax,QWORD PTR [rbp-0xd0]
  405971:	add    rax,0x4
  405977:	mov    QWORD PTR [rbp-0xd0],rax
  40597e:	lea    rax,[rbp-0x3c]
  405982:	lea    rcx,[rbp-0xd0]
  405989:	mov    rdx,rcx
  40598c:	add    rdx,0x10
  405993:	movsxd rsi,DWORD PTR [rbp-0xc8]
  40599a:	shl    rsi,0x4
  40599e:	add    rdx,rsi
  4059a1:	mov    QWORD PTR [rdx],rax
  4059a4:	add    rcx,0x10
  4059ab:	movsxd rax,DWORD PTR [rbp-0xc8]
  4059b2:	shl    rax,0x4
  4059b6:	add    rcx,rax
  4059b9:	mov    QWORD PTR [rcx+0x8],0x4
  4059c1:	mov    edi,DWORD PTR [rbp-0xc8]
  4059c7:	add    edi,0x1
  4059ca:	mov    DWORD PTR [rbp-0xc8],edi
  4059d0:	mov    rax,QWORD PTR [rbp-0xd0]
  4059d7:	add    rax,0x4
  4059dd:	mov    QWORD PTR [rbp-0xd0],rax
  4059e4:	lea    rax,[rbp-0x38]
  4059e8:	lea    rcx,[rbp-0xd0]
  4059ef:	mov    rdx,rcx
  4059f2:	add    rdx,0x10
  4059f9:	movsxd rsi,DWORD PTR [rbp-0xc8]
  405a00:	shl    rsi,0x4
  405a04:	add    rdx,rsi
  405a07:	mov    QWORD PTR [rdx],rax
  405a0a:	add    rcx,0x10
  405a11:	movsxd rax,DWORD PTR [rbp-0xc8]
  405a18:	shl    rax,0x4
  405a1c:	add    rcx,rax
  405a1f:	mov    QWORD PTR [rcx+0x8],0x4
  405a27:	mov    edi,DWORD PTR [rbp-0xc8]
  405a2d:	add    edi,0x1
  405a30:	mov    DWORD PTR [rbp-0xc8],edi
  405a36:	cmp    DWORD PTR [rbp-0x34],0x0
  405a3a:	jbe    405aa9 <flatcc_builder_create_buffer@@Base+0x299>
  405a40:	mov    eax,DWORD PTR [rbp-0x34]
  405a43:	mov    ecx,eax
  405a45:	add    rcx,QWORD PTR [rbp-0xd0]
  405a4c:	mov    QWORD PTR [rbp-0xd0],rcx
  405a53:	lea    rcx,[rbp-0xd4]
  405a5a:	lea    rdx,[rbp-0xd0]
  405a61:	mov    rsi,rdx
  405a64:	add    rsi,0x10
  405a6b:	movsxd rdi,DWORD PTR [rbp-0xc8]
  405a72:	shl    rdi,0x4
  405a76:	add    rsi,rdi
  405a79:	mov    QWORD PTR [rsi],rcx
  405a7c:	mov    eax,DWORD PTR [rbp-0x34]
  405a7f:	mov    ecx,eax
  405a81:	add    rdx,0x10
  405a88:	movsxd rsi,DWORD PTR [rbp-0xc8]
  405a8f:	shl    rsi,0x4
  405a93:	add    rdx,rsi
  405a96:	mov    QWORD PTR [rdx+0x8],rcx
  405a9a:	mov    eax,DWORD PTR [rbp-0xc8]
  405aa0:	add    eax,0x1
  405aa3:	mov    DWORD PTR [rbp-0xc8],eax
  405aa9:	cmp    DWORD PTR [rbp-0x30],0x0
  405aad:	jbe    405b1c <flatcc_builder_create_buffer@@Base+0x30c>
  405ab3:	lea    rax,[rip+0x6cc6]        # 40c780 <flatcc_builder_padding_base@@Base>
  405aba:	mov    ecx,DWORD PTR [rbp-0x30]
  405abd:	mov    edx,ecx
  405abf:	add    rdx,QWORD PTR [rbp-0xd0]
  405ac6:	mov    QWORD PTR [rbp-0xd0],rdx
  405acd:	lea    rdx,[rbp-0xd0]
  405ad4:	mov    rsi,rdx
  405ad7:	add    rsi,0x10
  405ade:	movsxd rdi,DWORD PTR [rbp-0xc8]
  405ae5:	shl    rdi,0x4
  405ae9:	add    rsi,rdi
  405aec:	mov    QWORD PTR [rsi],rax
  405aef:	mov    ecx,DWORD PTR [rbp-0x30]
  405af2:	mov    eax,ecx
  405af4:	add    rdx,0x10
  405afb:	movsxd rsi,DWORD PTR [rbp-0xc8]
  405b02:	shl    rsi,0x4
  405b06:	add    rdx,rsi
  405b09:	mov    QWORD PTR [rdx+0x8],rax
  405b0d:	mov    ecx,DWORD PTR [rbp-0xc8]
  405b13:	add    ecx,0x1
  405b16:	mov    DWORD PTR [rbp-0xc8],ecx
  405b1c:	mov    rax,QWORD PTR [rbp-0x10]
  405b20:	mov    ecx,DWORD PTR [rax+0xf0]
  405b26:	mov    rax,QWORD PTR [rbp-0xd0]
  405b2d:	sub    ecx,eax
  405b2f:	mov    eax,ecx
  405b31:	mov    edx,eax
  405b33:	cmp    DWORD PTR [rbp-0xd8],0x0
  405b3a:	mov    sil,0x1
  405b3d:	mov    QWORD PTR [rbp-0xe8],rdx
  405b44:	mov    BYTE PTR [rbp-0xe9],sil
  405b4b:	jne    405b61 <flatcc_builder_create_buffer@@Base+0x351>
  405b51:	cmp    DWORD PTR [rbp-0xdc],0x0
  405b58:	setne  al
  405b5b:	mov    BYTE PTR [rbp-0xe9],al
  405b61:	mov    al,BYTE PTR [rbp-0xe9]
  405b67:	xor    ecx,ecx
  405b69:	mov    edx,ecx
  405b6b:	test   al,0x1
  405b6d:	mov    esi,0x4
  405b72:	cmovne rdx,rsi
  405b76:	mov    rsi,QWORD PTR [rbp-0xe8]
  405b7d:	add    rsi,rdx
  405b80:	mov    DWORD PTR [rbp-0x40],esi
  405b83:	cmp    DWORD PTR [rbp-0xd8],0x0
  405b8a:	je     405bac <flatcc_builder_create_buffer@@Base+0x39c>
  405b90:	mov    rax,QWORD PTR [rbp-0x10]
  405b94:	mov    ecx,DWORD PTR [rax+0xf8]
  405b9a:	sub    ecx,DWORD PTR [rbp-0x40]
  405b9d:	mov    edi,ecx
  405b9f:	call   405700 <flatcc_builder_embed_buffer@@Base+0x430>
  405ba4:	mov    DWORD PTR [rbp-0x3c],eax
  405ba7:	jmp    405bc3 <flatcc_builder_create_buffer@@Base+0x3b3>
  405bac:	mov    rax,QWORD PTR [rbp-0x10]
  405bb0:	mov    ecx,DWORD PTR [rax+0xf4]
  405bb6:	sub    ecx,DWORD PTR [rbp-0x40]
  405bb9:	mov    edi,ecx
  405bbb:	call   405700 <flatcc_builder_embed_buffer@@Base+0x430>
  405bc0:	mov    DWORD PTR [rbp-0x3c],eax
  405bc3:	mov    eax,DWORD PTR [rbp-0x20]
  405bc6:	sub    eax,DWORD PTR [rbp-0x40]
  405bc9:	mov    edi,eax
  405bcb:	call   405700 <flatcc_builder_embed_buffer@@Base+0x430>
  405bd0:	mov    DWORD PTR [rbp-0x38],eax
  405bd3:	mov    rdi,QWORD PTR [rbp-0x10]
  405bd7:	lea    rsi,[rbp-0xd0]
  405bde:	call   405710 <flatcc_builder_embed_buffer@@Base+0x440>
  405be3:	xor    ecx,ecx
  405be5:	mov    DWORD PTR [rbp-0x2c],eax
  405be8:	cmp    ecx,eax
  405bea:	jne    405c0f <flatcc_builder_create_buffer@@Base+0x3ff>
  405bf0:	lea    rdi,[rip+0x7f5b]        # 40db52 <flatcc_builder_padding_base@@Base+0x13d2>
  405bf7:	lea    rsi,[rip+0x6d94]        # 40c992 <flatcc_builder_padding_base@@Base+0x212>
  405bfe:	mov    edx,0x304
  405c03:	lea    rcx,[rip+0x6edd]        # 40cae7 <flatcc_builder_padding_base@@Base+0x367>
  405c0a:	call   403090 <__assert_fail@plt>
  405c0f:	mov    eax,DWORD PTR [rbp-0x2c]
  405c12:	mov    DWORD PTR [rbp-0x4],eax
  405c15:	mov    eax,DWORD PTR [rbp-0x4]
  405c18:	add    rsp,0xf0
  405c1f:	pop    rbp
  405c20:	ret    
  405c21:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405c2b:	nop    DWORD PTR [rax+rax*1+0x0]
  405c30:	push   rbp
  405c31:	mov    rbp,rsp
  405c34:	mov    QWORD PTR [rbp-0x8],rdi
  405c38:	mov    WORD PTR [rbp-0xa],si
  405c3c:	mov    rax,QWORD PTR [rbp-0x8]
  405c40:	movzx  ecx,WORD PTR [rax+0xe8]
  405c47:	movzx  edx,WORD PTR [rbp-0xa]
  405c4b:	cmp    ecx,edx
  405c4d:	jge    405c62 <flatcc_builder_create_buffer@@Base+0x452>
  405c53:	mov    ax,WORD PTR [rbp-0xa]
  405c57:	mov    rcx,QWORD PTR [rbp-0x8]
  405c5b:	mov    WORD PTR [rcx+0xe8],ax
  405c62:	pop    rbp
  405c63:	ret    
  405c64:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405c6e:	xchg   ax,ax
  405c70:	push   rbp
  405c71:	mov    rbp,rsp
  405c74:	mov    DWORD PTR [rbp-0x4],edi
  405c77:	mov    eax,DWORD PTR [rbp-0x4]
  405c7a:	pop    rbp
  405c7b:	ret    
  405c7c:	nop    DWORD PTR [rax+0x0]

0000000000405c80 <flatcc_builder_create_struct@@Base>:
  405c80:	push   rbp
  405c81:	mov    rbp,rsp
  405c84:	sub    rsp,0xc0
  405c8b:	mov    QWORD PTR [rbp-0x8],rdi
  405c8f:	mov    QWORD PTR [rbp-0x10],rsi
  405c93:	mov    QWORD PTR [rbp-0x18],rdx
  405c97:	mov    WORD PTR [rbp-0x1a],cx
  405c9b:	movzx  eax,WORD PTR [rbp-0x1a]
  405c9f:	cmp    eax,0x1
  405ca2:	jl     405cad <flatcc_builder_create_struct@@Base+0x2d>
  405ca8:	jmp    405ccc <flatcc_builder_create_struct@@Base+0x4c>
  405cad:	lea    rdi,[rip+0x6eb6]        # 40cb6a <flatcc_builder_padding_base@@Base+0x3ea>
  405cb4:	lea    rsi,[rip+0x6cd7]        # 40c992 <flatcc_builder_padding_base@@Base+0x212>
  405cbb:	mov    edx,0x30f
  405cc0:	lea    rcx,[rip+0x6eae]        # 40cb75 <flatcc_builder_padding_base@@Base+0x3f5>
  405cc7:	call   403090 <__assert_fail@plt>
  405ccc:	mov    rdi,QWORD PTR [rbp-0x8]
  405cd0:	movzx  esi,WORD PTR [rbp-0x1a]
  405cd4:	call   405c30 <flatcc_builder_create_buffer@@Base+0x420>
  405cd9:	mov    rdi,QWORD PTR [rbp-0x8]
  405cdd:	mov    rax,QWORD PTR [rbp-0x18]
  405ce1:	mov    esi,eax
  405ce3:	movzx  edx,WORD PTR [rbp-0x1a]
  405ce7:	call   4056d0 <flatcc_builder_embed_buffer@@Base+0x400>
  405cec:	mov    eax,eax
  405cee:	mov    ecx,eax
  405cf0:	mov    QWORD PTR [rbp-0x28],rcx
  405cf4:	mov    QWORD PTR [rbp-0xb8],0x0
  405cff:	mov    DWORD PTR [rbp-0xb0],0x0
  405d09:	cmp    QWORD PTR [rbp-0x18],0x0
  405d0e:	jbe    405d78 <flatcc_builder_create_struct@@Base+0xf8>
  405d14:	mov    rax,QWORD PTR [rbp-0x18]
  405d18:	add    rax,QWORD PTR [rbp-0xb8]
  405d1f:	mov    QWORD PTR [rbp-0xb8],rax
  405d26:	mov    rax,QWORD PTR [rbp-0x10]
  405d2a:	lea    rcx,[rbp-0xb8]
  405d31:	mov    rdx,rcx
  405d34:	add    rdx,0x10
  405d3b:	movsxd rsi,DWORD PTR [rbp-0xb0]
  405d42:	shl    rsi,0x4
  405d46:	add    rdx,rsi
  405d49:	mov    QWORD PTR [rdx],rax
  405d4c:	mov    rax,QWORD PTR [rbp-0x18]
  405d50:	add    rcx,0x10
  405d57:	movsxd rdx,DWORD PTR [rbp-0xb0]
  405d5e:	shl    rdx,0x4
  405d62:	add    rcx,rdx
  405d65:	mov    QWORD PTR [rcx+0x8],rax
  405d69:	mov    edi,DWORD PTR [rbp-0xb0]
  405d6f:	add    edi,0x1
  405d72:	mov    DWORD PTR [rbp-0xb0],edi
  405d78:	cmp    QWORD PTR [rbp-0x28],0x0
  405d7d:	jbe    405dea <flatcc_builder_create_struct@@Base+0x16a>
  405d83:	lea    rax,[rip+0x69f6]        # 40c780 <flatcc_builder_padding_base@@Base>
  405d8a:	mov    rcx,QWORD PTR [rbp-0x28]
  405d8e:	add    rcx,QWORD PTR [rbp-0xb8]
  405d95:	mov    QWORD PTR [rbp-0xb8],rcx
  405d9c:	lea    rcx,[rbp-0xb8]
  405da3:	mov    rdx,rcx
  405da6:	add    rdx,0x10
  405dad:	movsxd rsi,DWORD PTR [rbp-0xb0]
  405db4:	shl    rsi,0x4
  405db8:	add    rdx,rsi
  405dbb:	mov    QWORD PTR [rdx],rax
  405dbe:	mov    rax,QWORD PTR [rbp-0x28]
  405dc2:	add    rcx,0x10
  405dc9:	movsxd rdx,DWORD PTR [rbp-0xb0]
  405dd0:	shl    rdx,0x4
  405dd4:	add    rcx,rdx
  405dd7:	mov    QWORD PTR [rcx+0x8],rax
  405ddb:	mov    edi,DWORD PTR [rbp-0xb0]
  405de1:	add    edi,0x1
  405de4:	mov    DWORD PTR [rbp-0xb0],edi
  405dea:	mov    rdi,QWORD PTR [rbp-0x8]
  405dee:	lea    rsi,[rbp-0xb8]
  405df5:	call   405710 <flatcc_builder_embed_buffer@@Base+0x440>
  405dfa:	add    rsp,0xc0
  405e01:	pop    rbp
  405e02:	ret    
  405e03:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405e0d:	nop    DWORD PTR [rax]

0000000000405e10 <flatcc_builder_start_buffer@@Base>:
  405e10:	push   rbp
  405e11:	mov    rbp,rsp
  405e14:	sub    rsp,0x30
  405e18:	mov    QWORD PTR [rbp-0x10],rdi
  405e1c:	mov    QWORD PTR [rbp-0x18],rsi
  405e20:	mov    WORD PTR [rbp-0x1a],dx
  405e24:	mov    DWORD PTR [rbp-0x20],ecx
  405e27:	mov    rdi,QWORD PTR [rbp-0x10]
  405e2b:	mov    rax,QWORD PTR [rbp-0x10]
  405e2f:	movzx  esi,WORD PTR [rax+0xe8]
  405e36:	call   405f80 <flatcc_builder_start_buffer@@Base+0x170>
  405e3b:	cmp    eax,0x0
  405e3e:	je     405e50 <flatcc_builder_start_buffer@@Base+0x40>
  405e44:	mov    DWORD PTR [rbp-0x4],0xffffffff
  405e4b:	jmp    405f71 <flatcc_builder_start_buffer@@Base+0x161>
  405e50:	mov    rax,QWORD PTR [rbp-0x10]
  405e54:	mov    WORD PTR [rax+0xe8],0x1
  405e5d:	mov    rax,QWORD PTR [rbp-0x10]
  405e61:	mov    cx,WORD PTR [rax+0xec]
  405e68:	mov    rax,QWORD PTR [rbp-0x10]
  405e6c:	mov    rax,QWORD PTR [rax+0x30]
  405e70:	mov    WORD PTR [rax+0x22],cx
  405e74:	mov    cx,WORD PTR [rbp-0x1a]
  405e78:	mov    rax,QWORD PTR [rbp-0x10]
  405e7c:	mov    WORD PTR [rax+0xec],cx
  405e83:	mov    rax,QWORD PTR [rbp-0x10]
  405e87:	mov    cx,WORD PTR [rax+0x10c]
  405e8e:	mov    rax,QWORD PTR [rbp-0x10]
  405e92:	mov    rax,QWORD PTR [rax+0x30]
  405e96:	mov    WORD PTR [rax+0x20],cx
  405e9a:	mov    edx,DWORD PTR [rbp-0x20]
  405e9d:	mov    rax,QWORD PTR [rbp-0x10]
  405ea1:	mov    WORD PTR [rax+0x10c],dx
  405ea8:	mov    rax,QWORD PTR [rbp-0x10]
  405eac:	mov    esi,DWORD PTR [rax+0xf8]
  405eb2:	mov    rax,QWORD PTR [rbp-0x10]
  405eb6:	mov    rax,QWORD PTR [rax+0x30]
  405eba:	mov    DWORD PTR [rax+0x14],esi
  405ebd:	mov    rax,QWORD PTR [rbp-0x10]
  405ec1:	mov    esi,DWORD PTR [rax+0x100]
  405ec7:	mov    rax,QWORD PTR [rbp-0x10]
  405ecb:	mov    rax,QWORD PTR [rax+0x30]
  405ecf:	mov    DWORD PTR [rax+0x1c],esi
  405ed2:	mov    rax,QWORD PTR [rbp-0x10]
  405ed6:	mov    esi,DWORD PTR [rax+0xf0]
  405edc:	mov    rax,QWORD PTR [rbp-0x10]
  405ee0:	mov    DWORD PTR [rax+0xf8],esi
  405ee6:	mov    rax,QWORD PTR [rbp-0x10]
  405eea:	mov    esi,DWORD PTR [rax+0xfc]
  405ef0:	mov    edi,esi
  405ef2:	add    edi,0x1
  405ef5:	mov    DWORD PTR [rax+0xfc],edi
  405efb:	mov    rax,QWORD PTR [rbp-0x10]
  405eff:	mov    DWORD PTR [rax+0x100],esi
  405f05:	mov    rax,QWORD PTR [rbp-0x10]
  405f09:	mov    esi,DWORD PTR [rax+0x110]
  405f0f:	mov    rax,QWORD PTR [rbp-0x10]
  405f13:	mov    rax,QWORD PTR [rax+0x30]
  405f17:	mov    DWORD PTR [rax+0x10],esi
  405f1a:	mov    rax,QWORD PTR [rbp-0x10]
  405f1e:	add    rax,0x110
  405f24:	cmp    QWORD PTR [rbp-0x18],0x0
  405f29:	mov    QWORD PTR [rbp-0x28],rax
  405f2d:	je     405f40 <flatcc_builder_start_buffer@@Base+0x130>
  405f33:	mov    rax,QWORD PTR [rbp-0x18]
  405f37:	mov    QWORD PTR [rbp-0x30],rax
  405f3b:	jmp    405f50 <flatcc_builder_start_buffer@@Base+0x140>
  405f40:	lea    rax,[rip+0x6839]        # 40c780 <flatcc_builder_padding_base@@Base>
  405f47:	mov    QWORD PTR [rbp-0x30],rax
  405f4b:	jmp    405f50 <flatcc_builder_start_buffer@@Base+0x140>
  405f50:	mov    rax,QWORD PTR [rbp-0x30]
  405f54:	mov    ecx,DWORD PTR [rax]
  405f56:	mov    rax,QWORD PTR [rbp-0x28]
  405f5a:	mov    DWORD PTR [rax],ecx
  405f5c:	mov    rdx,QWORD PTR [rbp-0x10]
  405f60:	mov    rdx,QWORD PTR [rdx+0x30]
  405f64:	mov    WORD PTR [rdx+0xe],0x1
  405f6a:	mov    DWORD PTR [rbp-0x4],0x0
  405f71:	mov    eax,DWORD PTR [rbp-0x4]
  405f74:	add    rsp,0x30
  405f78:	pop    rbp
  405f79:	ret    
  405f7a:	nop    WORD PTR [rax+rax*1+0x0]
  405f80:	push   rbp
  405f81:	mov    rbp,rsp
  405f84:	sub    rsp,0x20
  405f88:	mov    QWORD PTR [rbp-0x10],rdi
  405f8c:	mov    WORD PTR [rbp-0x12],si
  405f90:	mov    rax,QWORD PTR [rbp-0x10]
  405f94:	mov    ecx,DWORD PTR [rax+0x104]
  405f9a:	add    ecx,0x1
  405f9d:	mov    DWORD PTR [rax+0x104],ecx
  405fa3:	mov    rax,QWORD PTR [rbp-0x10]
  405fa7:	cmp    ecx,DWORD PTR [rax+0x108]
  405fad:	jle    40609a <flatcc_builder_start_buffer@@Base+0x28a>
  405fb3:	mov    rax,QWORD PTR [rbp-0x10]
  405fb7:	cmp    DWORD PTR [rax+0x120],0x0
  405fbe:	jle    405fea <flatcc_builder_start_buffer@@Base+0x1da>
  405fc4:	mov    rax,QWORD PTR [rbp-0x10]
  405fc8:	mov    ecx,DWORD PTR [rax+0x104]
  405fce:	mov    rax,QWORD PTR [rbp-0x10]
  405fd2:	cmp    ecx,DWORD PTR [rax+0x120]
  405fd8:	jle    405fea <flatcc_builder_start_buffer@@Base+0x1da>
  405fde:	mov    DWORD PTR [rbp-0x4],0xffffffff
  405fe5:	jmp    406135 <flatcc_builder_start_buffer@@Base+0x325>
  405fea:	xor    r8d,r8d
  405fed:	mov    rdi,QWORD PTR [rbp-0x10]
  405ff1:	mov    rax,QWORD PTR [rbp-0x10]
  405ff5:	mov    ecx,DWORD PTR [rax+0x104]
  405ffb:	sub    ecx,0x1
  405ffe:	movsxd rax,ecx
  406001:	imul   rdx,rax,0x24
  406008:	mov    esi,0x4
  40600d:	mov    ecx,0x24
  406012:	call   404fc0 <flatcc_builder_enter_user_frame_ptr@@Base+0xf0>
  406017:	mov    rcx,QWORD PTR [rbp-0x10]
  40601b:	mov    QWORD PTR [rcx+0x30],rax
  40601f:	cmp    rax,0x0
  406023:	jne    406035 <flatcc_builder_start_buffer@@Base+0x225>
  406029:	mov    DWORD PTR [rbp-0x4],0xffffffff
  406030:	jmp    406135 <flatcc_builder_start_buffer@@Base+0x325>
  406035:	mov    rax,QWORD PTR [rbp-0x10]
  406039:	mov    rax,QWORD PTR [rax+0xa0]
  406040:	xor    ecx,ecx
  406042:	mov    edx,ecx
  406044:	mov    esi,0x24
  406049:	div    rsi
  40604c:	mov    rsi,QWORD PTR [rbp-0x10]
  406050:	mov    DWORD PTR [rsi+0x108],eax
  406056:	mov    rsi,QWORD PTR [rbp-0x10]
  40605a:	cmp    DWORD PTR [rsi+0x120],0x0
  406061:	jle    406095 <flatcc_builder_start_buffer@@Base+0x285>
  406067:	mov    rax,QWORD PTR [rbp-0x10]
  40606b:	mov    ecx,DWORD PTR [rax+0x120]
  406071:	mov    rax,QWORD PTR [rbp-0x10]
  406075:	cmp    ecx,DWORD PTR [rax+0x108]
  40607b:	jge    406095 <flatcc_builder_start_buffer@@Base+0x285>
  406081:	mov    rax,QWORD PTR [rbp-0x10]
  406085:	mov    ecx,DWORD PTR [rax+0x120]
  40608b:	mov    rax,QWORD PTR [rbp-0x10]
  40608f:	mov    DWORD PTR [rax+0x108],ecx
  406095:	jmp    4060ad <flatcc_builder_start_buffer@@Base+0x29d>
  40609a:	mov    rax,QWORD PTR [rbp-0x10]
  40609e:	mov    rcx,QWORD PTR [rax+0x30]
  4060a2:	add    rcx,0x24
  4060a9:	mov    QWORD PTR [rax+0x30],rcx
  4060ad:	mov    rax,QWORD PTR [rbp-0x10]
  4060b1:	mov    ecx,DWORD PTR [rax+0x20]
  4060b4:	mov    rax,QWORD PTR [rbp-0x10]
  4060b8:	mov    rax,QWORD PTR [rax+0x30]
  4060bc:	mov    DWORD PTR [rax+0x8],ecx
  4060bf:	mov    rax,QWORD PTR [rbp-0x10]
  4060c3:	mov    dx,WORD PTR [rax+0xea]
  4060ca:	mov    rax,QWORD PTR [rbp-0x10]
  4060ce:	mov    rax,QWORD PTR [rax+0x30]
  4060d2:	mov    WORD PTR [rax+0xc],dx
  4060d6:	mov    dx,WORD PTR [rbp-0x12]
  4060da:	mov    rax,QWORD PTR [rbp-0x10]
  4060de:	mov    WORD PTR [rax+0xea],dx
  4060e5:	mov    rax,QWORD PTR [rbp-0x10]
  4060e9:	mov    ecx,DWORD PTR [rax+0x28]
  4060ec:	mov    rax,QWORD PTR [rbp-0x10]
  4060f0:	mov    rax,QWORD PTR [rax+0x30]
  4060f4:	mov    DWORD PTR [rax],ecx
  4060f6:	mov    rax,QWORD PTR [rbp-0x10]
  4060fa:	mov    rax,QWORD PTR [rax+0x30]
  4060fe:	mov    DWORD PTR [rax+0x4],0xfffffffc
  406105:	mov    rax,QWORD PTR [rbp-0x10]
  406109:	mov    ecx,DWORD PTR [rax+0x28]
  40610c:	mov    rax,QWORD PTR [rbp-0x10]
  406110:	add    ecx,DWORD PTR [rax+0x20]
  406113:	add    ecx,0x8
  406116:	sub    ecx,0x1
  406119:	and    ecx,0xfffffff8
  40611c:	mov    rax,QWORD PTR [rbp-0x10]
  406120:	mov    DWORD PTR [rax+0x28],ecx
  406123:	mov    rax,QWORD PTR [rbp-0x10]
  406127:	mov    DWORD PTR [rax+0x20],0x0
  40612e:	mov    DWORD PTR [rbp-0x4],0x0
  406135:	mov    eax,DWORD PTR [rbp-0x4]
  406138:	add    rsp,0x20
  40613c:	pop    rbp
  40613d:	ret    
  40613e:	xchg   ax,ax

0000000000406140 <flatcc_builder_end_buffer@@Base>:
  406140:	push   rbp
  406141:	mov    rbp,rsp
  406144:	sub    rsp,0x20
  406148:	xor    eax,eax
  40614a:	mov    QWORD PTR [rbp-0x10],rdi
  40614e:	mov    DWORD PTR [rbp-0x14],esi
  406151:	mov    rcx,QWORD PTR [rbp-0x10]
  406155:	movzx  edx,WORD PTR [rcx+0x10c]
  40615c:	and    edx,0x2
  40615f:	mov    DWORD PTR [rbp-0x1c],edx
  406162:	mov    rcx,QWORD PTR [rbp-0x10]
  406166:	mov    edx,DWORD PTR [rcx+0x100]
  40616c:	cmp    edx,0x0
  40616f:	mov    edx,0x1
  406174:	cmove  edx,eax
  406177:	or     edx,DWORD PTR [rbp-0x1c]
  40617a:	mov    DWORD PTR [rbp-0x1c],edx
  40617d:	mov    rcx,QWORD PTR [rbp-0x10]
  406181:	mov    rcx,QWORD PTR [rcx+0x30]
  406185:	movzx  eax,WORD PTR [rcx+0xe]
  406189:	cmp    eax,0x1
  40618c:	jne    406197 <flatcc_builder_end_buffer@@Base+0x57>
  406192:	jmp    4061b6 <flatcc_builder_end_buffer@@Base+0x76>
  406197:	lea    rdi,[rip+0x6a3d]        # 40cbdb <flatcc_builder_padding_base@@Base+0x45b>
  40619e:	lea    rsi,[rip+0x67ed]        # 40c992 <flatcc_builder_padding_base@@Base+0x212>
  4061a5:	mov    edx,0x346
  4061aa:	lea    rcx,[rip+0x6a56]        # 40cc07 <flatcc_builder_padding_base@@Base+0x487>
  4061b1:	call   403090 <__assert_fail@plt>
  4061b6:	mov    rdi,QWORD PTR [rbp-0x10]
  4061ba:	mov    rax,QWORD PTR [rbp-0x10]
  4061be:	movzx  esi,WORD PTR [rax+0xec]
  4061c5:	call   405c30 <flatcc_builder_create_buffer@@Base+0x420>
  4061ca:	mov    rdi,QWORD PTR [rbp-0x10]
  4061ce:	mov    rax,QWORD PTR [rbp-0x10]
  4061d2:	add    rax,0x110
  4061d8:	mov    rcx,QWORD PTR [rbp-0x10]
  4061dc:	mov    dx,WORD PTR [rcx+0xec]
  4061e3:	mov    ecx,DWORD PTR [rbp-0x14]
  4061e6:	mov    r8,QWORD PTR [rbp-0x10]
  4061ea:	mov    r9w,WORD PTR [r8+0xe8]
  4061f2:	mov    esi,DWORD PTR [rbp-0x1c]
  4061f5:	mov    DWORD PTR [rbp-0x20],esi
  4061f8:	mov    rsi,rax
  4061fb:	movzx  edx,dx
  4061fe:	movzx  r8d,r9w
  406202:	mov    r9d,DWORD PTR [rbp-0x20]
  406206:	call   405810 <flatcc_builder_create_buffer@@Base>
  40620b:	xor    ecx,ecx
  40620d:	mov    DWORD PTR [rbp-0x18],eax
  406210:	cmp    ecx,eax
  406212:	jne    406224 <flatcc_builder_end_buffer@@Base+0xe4>
  406218:	mov    DWORD PTR [rbp-0x4],0x0
  40621f:	jmp    406289 <flatcc_builder_end_buffer@@Base+0x149>
  406224:	mov    rax,QWORD PTR [rbp-0x10]
  406228:	mov    rax,QWORD PTR [rax+0x30]
  40622c:	mov    ecx,DWORD PTR [rax+0x14]
  40622f:	mov    rax,QWORD PTR [rbp-0x10]
  406233:	mov    DWORD PTR [rax+0xf8],ecx
  406239:	mov    rax,QWORD PTR [rbp-0x10]
  40623d:	mov    rax,QWORD PTR [rax+0x30]
  406241:	mov    ecx,DWORD PTR [rax+0x1c]
  406244:	mov    rax,QWORD PTR [rbp-0x10]
  406248:	mov    DWORD PTR [rax+0x100],ecx
  40624e:	mov    rax,QWORD PTR [rbp-0x10]
  406252:	mov    rax,QWORD PTR [rax+0x30]
  406256:	mov    ecx,DWORD PTR [rax+0x10]
  406259:	mov    rax,QWORD PTR [rbp-0x10]
  40625d:	mov    DWORD PTR [rax+0x110],ecx
  406263:	mov    rax,QWORD PTR [rbp-0x10]
  406267:	mov    rax,QWORD PTR [rax+0x30]
  40626b:	mov    dx,WORD PTR [rax+0x20]
  40626f:	mov    rax,QWORD PTR [rbp-0x10]
  406273:	mov    WORD PTR [rax+0x10c],dx
  40627a:	mov    rdi,QWORD PTR [rbp-0x10]
  40627e:	call   4062a0 <flatcc_builder_end_buffer@@Base+0x160>
  406283:	mov    ecx,DWORD PTR [rbp-0x18]
  406286:	mov    DWORD PTR [rbp-0x4],ecx
  406289:	mov    eax,DWORD PTR [rbp-0x4]
  40628c:	add    rsp,0x20
  406290:	pop    rbp
  406291:	ret    
  406292:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40629c:	nop    DWORD PTR [rax+0x0]
  4062a0:	push   rbp
  4062a1:	mov    rbp,rsp
  4062a4:	sub    rsp,0x10
  4062a8:	xor    esi,esi
  4062aa:	mov    QWORD PTR [rbp-0x8],rdi
  4062ae:	mov    rax,QWORD PTR [rbp-0x8]
  4062b2:	mov    rdi,QWORD PTR [rax+0x18]
  4062b6:	mov    rax,QWORD PTR [rbp-0x8]
  4062ba:	mov    ecx,DWORD PTR [rax+0x20]
  4062bd:	mov    edx,ecx
  4062bf:	call   4030a0 <memset@plt>
  4062c4:	mov    rax,QWORD PTR [rbp-0x8]
  4062c8:	mov    rax,QWORD PTR [rax+0x30]
  4062cc:	mov    ecx,DWORD PTR [rax+0x8]
  4062cf:	mov    rax,QWORD PTR [rbp-0x8]
  4062d3:	mov    DWORD PTR [rax+0x20],ecx
  4062d6:	mov    rax,QWORD PTR [rbp-0x8]
  4062da:	mov    rax,QWORD PTR [rax+0x30]
  4062de:	mov    ecx,DWORD PTR [rax]
  4062e0:	mov    rax,QWORD PTR [rbp-0x8]
  4062e4:	mov    DWORD PTR [rax+0x28],ecx
  4062e7:	mov    rdi,QWORD PTR [rbp-0x8]
  4062eb:	mov    rax,QWORD PTR [rbp-0x8]
  4062ef:	mov    rax,QWORD PTR [rax+0x30]
  4062f3:	mov    esi,DWORD PTR [rax+0x4]
  4062f6:	call   4063d0 <flatcc_builder_start_struct@@Base+0x70>
  4062fb:	mov    rdi,QWORD PTR [rbp-0x8]
  4062ff:	mov    rax,QWORD PTR [rbp-0x8]
  406303:	movzx  esi,WORD PTR [rax+0xea]
  40630a:	call   405c30 <flatcc_builder_create_buffer@@Base+0x420>
  40630f:	mov    rax,QWORD PTR [rbp-0x8]
  406313:	mov    rax,QWORD PTR [rax+0x30]
  406317:	mov    r8w,WORD PTR [rax+0xc]
  40631c:	mov    rax,QWORD PTR [rbp-0x8]
  406320:	mov    WORD PTR [rax+0xea],r8w
  406328:	mov    rax,QWORD PTR [rbp-0x8]
  40632c:	mov    rdx,QWORD PTR [rax+0x30]
  406330:	add    rdx,0xffffffffffffffdc
  406337:	mov    QWORD PTR [rax+0x30],rdx
  40633b:	mov    rax,QWORD PTR [rbp-0x8]
  40633f:	mov    ecx,DWORD PTR [rax+0x104]
  406345:	add    ecx,0xffffffff
  406348:	mov    DWORD PTR [rax+0x104],ecx
  40634e:	add    rsp,0x10
  406352:	pop    rbp
  406353:	ret    
  406354:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40635e:	xchg   ax,ax

0000000000406360 <flatcc_builder_start_struct@@Base>:
  406360:	push   rbp
  406361:	mov    rbp,rsp
  406364:	sub    rsp,0x20
  406368:	mov    QWORD PTR [rbp-0x10],rdi
  40636c:	mov    QWORD PTR [rbp-0x18],rsi
  406370:	mov    WORD PTR [rbp-0x1a],dx
  406374:	mov    rdi,QWORD PTR [rbp-0x10]
  406378:	movzx  esi,WORD PTR [rbp-0x1a]
  40637c:	call   405f80 <flatcc_builder_start_buffer@@Base+0x170>
  406381:	cmp    eax,0x0
  406384:	je     406397 <flatcc_builder_start_struct@@Base+0x37>
  40638a:	mov    QWORD PTR [rbp-0x8],0x0
  406392:	jmp    4063c6 <flatcc_builder_start_struct@@Base+0x66>
  406397:	mov    rax,QWORD PTR [rbp-0x10]
  40639b:	mov    rax,QWORD PTR [rax+0x30]
  40639f:	mov    WORD PTR [rax+0xe],0x2
  4063a5:	mov    rdi,QWORD PTR [rbp-0x10]
  4063a9:	mov    esi,0xfffffffc
  4063ae:	call   4063d0 <flatcc_builder_start_struct@@Base+0x70>
  4063b3:	mov    rdi,QWORD PTR [rbp-0x10]
  4063b7:	mov    rax,QWORD PTR [rbp-0x18]
  4063bb:	mov    esi,eax
  4063bd:	call   406450 <flatcc_builder_start_struct@@Base+0xf0>
  4063c2:	mov    QWORD PTR [rbp-0x8],rax
  4063c6:	mov    rax,QWORD PTR [rbp-0x8]
  4063ca:	add    rsp,0x20
  4063ce:	pop    rbp
  4063cf:	ret    
  4063d0:	push   rbp
  4063d1:	mov    rbp,rsp
  4063d4:	mov    QWORD PTR [rbp-0x8],rdi
  4063d8:	mov    DWORD PTR [rbp-0xc],esi
  4063db:	mov    rax,QWORD PTR [rbp-0x8]
  4063df:	add    rax,0x58
  4063e5:	add    rax,0x10
  4063eb:	mov    QWORD PTR [rbp-0x18],rax
  4063ef:	mov    rax,QWORD PTR [rbp-0x8]
  4063f3:	mov    rax,QWORD PTR [rax+0x68]
  4063f7:	mov    rcx,QWORD PTR [rbp-0x8]
  4063fb:	mov    edx,DWORD PTR [rcx+0x28]
  4063fe:	mov    ecx,edx
  406400:	add    rax,rcx
  406403:	mov    rcx,QWORD PTR [rbp-0x8]
  406407:	mov    QWORD PTR [rcx+0x18],rax
  40640b:	mov    rax,QWORD PTR [rbp-0x18]
  40640f:	mov    rax,QWORD PTR [rax+0x8]
  406413:	mov    rcx,QWORD PTR [rbp-0x8]
  406417:	sub    eax,DWORD PTR [rcx+0x28]
  40641a:	mov    rcx,QWORD PTR [rbp-0x8]
  40641e:	mov    DWORD PTR [rcx+0x24],eax
  406421:	mov    rcx,QWORD PTR [rbp-0x8]
  406425:	mov    eax,DWORD PTR [rcx+0x24]
  406428:	cmp    eax,DWORD PTR [rbp-0xc]
  40642b:	jbe    40643b <flatcc_builder_start_struct@@Base+0xdb>
  406431:	mov    eax,DWORD PTR [rbp-0xc]
  406434:	mov    rcx,QWORD PTR [rbp-0x8]
  406438:	mov    DWORD PTR [rcx+0x24],eax
  40643b:	mov    eax,DWORD PTR [rbp-0xc]
  40643e:	mov    rcx,QWORD PTR [rbp-0x8]
  406442:	mov    rcx,QWORD PTR [rcx+0x30]
  406446:	mov    DWORD PTR [rcx+0x4],eax
  406449:	pop    rbp
  40644a:	ret    
  40644b:	nop    DWORD PTR [rax+rax*1+0x0]
  406450:	push   rbp
  406451:	mov    rbp,rsp
  406454:	sub    rsp,0x20
  406458:	mov    QWORD PTR [rbp-0x10],rdi
  40645c:	mov    DWORD PTR [rbp-0x14],esi
  40645f:	mov    rax,QWORD PTR [rbp-0x10]
  406463:	mov    ecx,DWORD PTR [rax+0x20]
  406466:	mov    eax,ecx
  406468:	mov    QWORD PTR [rbp-0x20],rax
  40646c:	mov    ecx,DWORD PTR [rbp-0x14]
  40646f:	mov    rax,QWORD PTR [rbp-0x10]
  406473:	add    ecx,DWORD PTR [rax+0x20]
  406476:	mov    DWORD PTR [rax+0x20],ecx
  406479:	mov    rax,QWORD PTR [rbp-0x10]
  40647d:	cmp    ecx,DWORD PTR [rax+0x24]
  406480:	jb     4064bd <flatcc_builder_start_struct@@Base+0x15d>
  406486:	mov    rdi,QWORD PTR [rbp-0x10]
  40648a:	mov    rax,QWORD PTR [rbp-0x10]
  40648e:	mov    ecx,DWORD PTR [rax+0x20]
  406491:	add    ecx,0x1
  406494:	mov    ecx,ecx
  406496:	mov    esi,ecx
  406498:	mov    edx,0xfffffffc
  40649d:	call   40a430 <flatcc_builder_get_emit_context@@Base+0x50>
  4064a2:	cmp    eax,0x0
  4064a5:	je     4064b8 <flatcc_builder_start_struct@@Base+0x158>
  4064ab:	mov    QWORD PTR [rbp-0x8],0x0
  4064b3:	jmp    4064cd <flatcc_builder_start_struct@@Base+0x16d>
  4064b8:	jmp    4064bd <flatcc_builder_start_struct@@Base+0x15d>
  4064bd:	mov    rax,QWORD PTR [rbp-0x10]
  4064c1:	mov    rax,QWORD PTR [rax+0x18]
  4064c5:	add    rax,QWORD PTR [rbp-0x20]
  4064c9:	mov    QWORD PTR [rbp-0x8],rax
  4064cd:	mov    rax,QWORD PTR [rbp-0x8]
  4064d1:	add    rsp,0x20
  4064d5:	pop    rbp
  4064d6:	ret    
  4064d7:	nop    WORD PTR [rax+rax*1+0x0]

00000000004064e0 <flatcc_builder_struct_edit@@Base>:
  4064e0:	push   rbp
  4064e1:	mov    rbp,rsp
  4064e4:	mov    QWORD PTR [rbp-0x8],rdi
  4064e8:	mov    rax,QWORD PTR [rbp-0x8]
  4064ec:	mov    rax,QWORD PTR [rax+0x18]
  4064f0:	pop    rbp
  4064f1:	ret    
  4064f2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4064fc:	nop    DWORD PTR [rax+0x0]

0000000000406500 <flatcc_builder_end_struct@@Base>:
  406500:	push   rbp
  406501:	mov    rbp,rsp
  406504:	sub    rsp,0x20
  406508:	mov    QWORD PTR [rbp-0x10],rdi
  40650c:	mov    rax,QWORD PTR [rbp-0x10]
  406510:	mov    rax,QWORD PTR [rax+0x30]
  406514:	movzx  ecx,WORD PTR [rax+0xe]
  406518:	cmp    ecx,0x2
  40651b:	jne    406526 <flatcc_builder_end_struct@@Base+0x26>
  406521:	jmp    406545 <flatcc_builder_end_struct@@Base+0x45>
  406526:	lea    rdi,[rip+0x6733]        # 40cc60 <flatcc_builder_padding_base@@Base+0x4e0>
  40652d:	lea    rsi,[rip+0x645e]        # 40c992 <flatcc_builder_padding_base@@Base+0x212>
  406534:	mov    edx,0x368
  406539:	lea    rcx,[rip+0x674c]        # 40cc8c <flatcc_builder_padding_base@@Base+0x50c>
  406540:	call   403090 <__assert_fail@plt>
  406545:	mov    rdi,QWORD PTR [rbp-0x10]
  406549:	mov    rax,QWORD PTR [rbp-0x10]
  40654d:	mov    rsi,QWORD PTR [rax+0x18]
  406551:	mov    rax,QWORD PTR [rbp-0x10]
  406555:	mov    ecx,DWORD PTR [rax+0x20]
  406558:	mov    edx,ecx
  40655a:	mov    rax,QWORD PTR [rbp-0x10]
  40655e:	movzx  ecx,WORD PTR [rax+0xea]
  406565:	call   405c80 <flatcc_builder_create_struct@@Base>
  40656a:	xor    ecx,ecx
  40656c:	mov    DWORD PTR [rbp-0x14],eax
  40656f:	cmp    ecx,eax
  406571:	jne    406583 <flatcc_builder_end_struct@@Base+0x83>
  406577:	mov    DWORD PTR [rbp-0x4],0x0
  40657e:	jmp    406592 <flatcc_builder_end_struct@@Base+0x92>
  406583:	mov    rdi,QWORD PTR [rbp-0x10]
  406587:	call   4062a0 <flatcc_builder_end_buffer@@Base+0x160>
  40658c:	mov    eax,DWORD PTR [rbp-0x14]
  40658f:	mov    DWORD PTR [rbp-0x4],eax
  406592:	mov    eax,DWORD PTR [rbp-0x4]
  406595:	add    rsp,0x20
  406599:	pop    rbp
  40659a:	ret    
  40659b:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004065a0 <flatcc_builder_extend_vector@@Base>:
  4065a0:	push   rbp
  4065a1:	mov    rbp,rsp
  4065a4:	sub    rsp,0x20
  4065a8:	mov    QWORD PTR [rbp-0x10],rdi
  4065ac:	mov    QWORD PTR [rbp-0x18],rsi
  4065b0:	mov    rdi,QWORD PTR [rbp-0x10]
  4065b4:	mov    rax,QWORD PTR [rbp-0x18]
  4065b8:	mov    rcx,QWORD PTR [rbp-0x10]
  4065bc:	mov    rcx,QWORD PTR [rcx+0x30]
  4065c0:	mov    edx,DWORD PTR [rcx+0x18]
  4065c3:	mov    esi,eax
  4065c5:	call   406610 <flatcc_builder_extend_vector@@Base+0x70>
  4065ca:	cmp    eax,0x0
  4065cd:	je     4065e0 <flatcc_builder_extend_vector@@Base+0x40>
  4065d3:	mov    QWORD PTR [rbp-0x8],0x0
  4065db:	jmp    406601 <flatcc_builder_extend_vector@@Base+0x61>
  4065e0:	mov    rdi,QWORD PTR [rbp-0x10]
  4065e4:	mov    rax,QWORD PTR [rbp-0x10]
  4065e8:	mov    rax,QWORD PTR [rax+0x30]
  4065ec:	mov    ecx,DWORD PTR [rax+0x10]
  4065ef:	mov    rax,QWORD PTR [rbp-0x18]
  4065f3:	imul   ecx,eax
  4065f6:	mov    esi,ecx
  4065f8:	call   406450 <flatcc_builder_start_struct@@Base+0xf0>
  4065fd:	mov    QWORD PTR [rbp-0x8],rax
  406601:	mov    rax,QWORD PTR [rbp-0x8]
  406605:	add    rsp,0x20
  406609:	pop    rbp
  40660a:	ret    
  40660b:	nop    DWORD PTR [rax+rax*1+0x0]
  406610:	push   rbp
  406611:	mov    rbp,rsp
  406614:	sub    rsp,0x20
  406618:	mov    QWORD PTR [rbp-0x10],rdi
  40661c:	mov    DWORD PTR [rbp-0x14],esi
  40661f:	mov    DWORD PTR [rbp-0x18],edx
  406622:	mov    rax,QWORD PTR [rbp-0x10]
  406626:	mov    rax,QWORD PTR [rax+0x30]
  40662a:	mov    ecx,DWORD PTR [rax+0x14]
  40662d:	mov    DWORD PTR [rbp-0x1c],ecx
  406630:	mov    ecx,DWORD PTR [rbp-0x1c]
  406633:	add    ecx,DWORD PTR [rbp-0x14]
  406636:	mov    DWORD PTR [rbp-0x20],ecx
  406639:	mov    ecx,DWORD PTR [rbp-0x1c]
  40663c:	cmp    ecx,DWORD PTR [rbp-0x20]
  40663f:	ja     406651 <flatcc_builder_extend_vector@@Base+0xb1>
  406645:	mov    eax,DWORD PTR [rbp-0x20]
  406648:	cmp    eax,DWORD PTR [rbp-0x18]
  40664b:	jbe    406699 <flatcc_builder_extend_vector@@Base+0xf9>
  406651:	mov    eax,DWORD PTR [rbp-0x1c]
  406654:	cmp    eax,DWORD PTR [rbp-0x20]
  406657:	ja     40666e <flatcc_builder_extend_vector@@Base+0xce>
  40665d:	mov    eax,DWORD PTR [rbp-0x20]
  406660:	cmp    eax,DWORD PTR [rbp-0x18]
  406663:	ja     40666e <flatcc_builder_extend_vector@@Base+0xce>
  406669:	jmp    40668d <flatcc_builder_extend_vector@@Base+0xed>
  40666e:	lea    rdi,[rip+0x73e6]        # 40da5b <flatcc_builder_padding_base@@Base+0x12db>
  406675:	lea    rsi,[rip+0x6316]        # 40c992 <flatcc_builder_padding_base@@Base+0x212>
  40667c:	mov    edx,0x37c
  406681:	lea    rcx,[rip+0x73ee]        # 40da76 <flatcc_builder_padding_base@@Base+0x12f6>
  406688:	call   403090 <__assert_fail@plt>
  40668d:	mov    DWORD PTR [rbp-0x4],0xffffffff
  406694:	jmp    4066ae <flatcc_builder_extend_vector@@Base+0x10e>
  406699:	mov    eax,DWORD PTR [rbp-0x20]
  40669c:	mov    rcx,QWORD PTR [rbp-0x10]
  4066a0:	mov    rcx,QWORD PTR [rcx+0x30]
  4066a4:	mov    DWORD PTR [rcx+0x14],eax
  4066a7:	mov    DWORD PTR [rbp-0x4],0x0
  4066ae:	mov    eax,DWORD PTR [rbp-0x4]
  4066b1:	add    rsp,0x20
  4066b5:	pop    rbp
  4066b6:	ret    
  4066b7:	nop    WORD PTR [rax+rax*1+0x0]

00000000004066c0 <flatcc_builder_vector_push@@Base>:
  4066c0:	push   rbp
  4066c1:	mov    rbp,rsp
  4066c4:	sub    rsp,0x20
  4066c8:	mov    QWORD PTR [rbp-0x10],rdi
  4066cc:	mov    QWORD PTR [rbp-0x18],rsi
  4066d0:	mov    rax,QWORD PTR [rbp-0x10]
  4066d4:	mov    rax,QWORD PTR [rax+0x30]
  4066d8:	movzx  ecx,WORD PTR [rax+0xe]
  4066dc:	cmp    ecx,0x4
  4066df:	jne    4066ea <flatcc_builder_vector_push@@Base+0x2a>
  4066e5:	jmp    406709 <flatcc_builder_vector_push@@Base+0x49>
  4066ea:	lea    rdi,[rip+0x65de]        # 40cccf <flatcc_builder_padding_base@@Base+0x54f>
  4066f1:	lea    rsi,[rip+0x629a]        # 40c992 <flatcc_builder_padding_base@@Base+0x212>
  4066f8:	mov    edx,0x38b
  4066fd:	lea    rcx,[rip+0x65f7]        # 40ccfb <flatcc_builder_padding_base@@Base+0x57b>
  406704:	call   403090 <__assert_fail@plt>
  406709:	mov    rax,QWORD PTR [rbp-0x10]
  40670d:	mov    rax,QWORD PTR [rax+0x30]
  406711:	mov    ecx,DWORD PTR [rax+0x14]
  406714:	mov    rax,QWORD PTR [rbp-0x10]
  406718:	mov    rax,QWORD PTR [rax+0x30]
  40671c:	cmp    ecx,DWORD PTR [rax+0x18]
  40671f:	jbe    406772 <flatcc_builder_vector_push@@Base+0xb2>
  406725:	mov    rax,QWORD PTR [rbp-0x10]
  406729:	mov    rax,QWORD PTR [rax+0x30]
  40672d:	mov    ecx,DWORD PTR [rax+0x14]
  406730:	mov    rax,QWORD PTR [rbp-0x10]
  406734:	mov    rax,QWORD PTR [rax+0x30]
  406738:	cmp    ecx,DWORD PTR [rax+0x18]
  40673b:	ja     406746 <flatcc_builder_vector_push@@Base+0x86>
  406741:	jmp    406765 <flatcc_builder_vector_push@@Base+0xa5>
  406746:	lea    rdi,[rip+0x65f1]        # 40cd3e <flatcc_builder_padding_base@@Base+0x5be>
  40674d:	lea    rsi,[rip+0x623e]        # 40c992 <flatcc_builder_padding_base@@Base+0x212>
  406754:	mov    edx,0x38c
  406759:	lea    rcx,[rip+0x659b]        # 40ccfb <flatcc_builder_padding_base@@Base+0x57b>
  406760:	call   403090 <__assert_fail@plt>
  406765:	mov    QWORD PTR [rbp-0x8],0x0
  40676d:	jmp    40679f <flatcc_builder_vector_push@@Base+0xdf>
  406772:	mov    rax,QWORD PTR [rbp-0x10]
  406776:	mov    rax,QWORD PTR [rax+0x30]
  40677a:	mov    ecx,DWORD PTR [rax+0x14]
  40677d:	add    ecx,0x1
  406780:	mov    DWORD PTR [rax+0x14],ecx
  406783:	mov    rdi,QWORD PTR [rbp-0x10]
  406787:	mov    rsi,QWORD PTR [rbp-0x18]
  40678b:	mov    rax,QWORD PTR [rbp-0x10]
  40678f:	mov    rax,QWORD PTR [rax+0x30]
  406793:	mov    edx,DWORD PTR [rax+0x10]
  406796:	call   4067b0 <flatcc_builder_vector_push@@Base+0xf0>
  40679b:	mov    QWORD PTR [rbp-0x8],rax
  40679f:	mov    rax,QWORD PTR [rbp-0x8]
  4067a3:	add    rsp,0x20
  4067a7:	pop    rbp
  4067a8:	ret    
  4067a9:	nop    DWORD PTR [rax+0x0]
  4067b0:	push   rbp
  4067b1:	mov    rbp,rsp
  4067b4:	sub    rsp,0x30
  4067b8:	mov    QWORD PTR [rbp-0x10],rdi
  4067bc:	mov    QWORD PTR [rbp-0x18],rsi
  4067c0:	mov    DWORD PTR [rbp-0x1c],edx
  4067c3:	mov    rdi,QWORD PTR [rbp-0x10]
  4067c7:	mov    esi,DWORD PTR [rbp-0x1c]
  4067ca:	call   406450 <flatcc_builder_start_struct@@Base+0xf0>
  4067cf:	mov    QWORD PTR [rbp-0x28],rax
  4067d3:	cmp    rax,0x0
  4067d7:	jne    4067ea <flatcc_builder_vector_push@@Base+0x12a>
  4067dd:	mov    QWORD PTR [rbp-0x8],0x0
  4067e5:	jmp    406804 <flatcc_builder_vector_push@@Base+0x144>
  4067ea:	mov    rdi,QWORD PTR [rbp-0x28]
  4067ee:	mov    rsi,QWORD PTR [rbp-0x18]
  4067f2:	mov    eax,DWORD PTR [rbp-0x1c]
  4067f5:	mov    edx,eax
  4067f7:	call   4030e0 <memcpy@plt>
  4067fc:	mov    rcx,QWORD PTR [rbp-0x28]
  406800:	mov    QWORD PTR [rbp-0x8],rcx
  406804:	mov    rax,QWORD PTR [rbp-0x8]
  406808:	add    rsp,0x30
  40680c:	pop    rbp
  40680d:	ret    
  40680e:	xchg   ax,ax

0000000000406810 <flatcc_builder_append_vector@@Base>:
  406810:	push   rbp
  406811:	mov    rbp,rsp
  406814:	sub    rsp,0x20
  406818:	mov    QWORD PTR [rbp-0x10],rdi
  40681c:	mov    QWORD PTR [rbp-0x18],rsi
  406820:	mov    QWORD PTR [rbp-0x20],rdx
  406824:	mov    rax,QWORD PTR [rbp-0x10]
  406828:	mov    rax,QWORD PTR [rax+0x30]
  40682c:	movzx  ecx,WORD PTR [rax+0xe]
  406830:	cmp    ecx,0x4
  406833:	jne    40683e <flatcc_builder_append_vector@@Base+0x2e>
  406839:	jmp    40685d <flatcc_builder_append_vector@@Base+0x4d>
  40683e:	lea    rdi,[rip+0x648a]        # 40cccf <flatcc_builder_padding_base@@Base+0x54f>
  406845:	lea    rsi,[rip+0x6146]        # 40c992 <flatcc_builder_padding_base@@Base+0x212>
  40684c:	mov    edx,0x393
  406851:	lea    rcx,[rip+0x6523]        # 40cd7b <flatcc_builder_padding_base@@Base+0x5fb>
  406858:	call   403090 <__assert_fail@plt>
  40685d:	mov    rdi,QWORD PTR [rbp-0x10]
  406861:	mov    rax,QWORD PTR [rbp-0x20]
  406865:	mov    rcx,QWORD PTR [rbp-0x10]
  406869:	mov    rcx,QWORD PTR [rcx+0x30]
  40686d:	mov    edx,DWORD PTR [rcx+0x18]
  406870:	mov    esi,eax
  406872:	call   406610 <flatcc_builder_extend_vector@@Base+0x70>
  406877:	cmp    eax,0x0
  40687a:	je     40688d <flatcc_builder_append_vector@@Base+0x7d>
  406880:	mov    QWORD PTR [rbp-0x8],0x0
  406888:	jmp    4068b2 <flatcc_builder_append_vector@@Base+0xa2>
  40688d:	mov    rdi,QWORD PTR [rbp-0x10]
  406891:	mov    rsi,QWORD PTR [rbp-0x18]
  406895:	mov    rax,QWORD PTR [rbp-0x10]
  406899:	mov    rax,QWORD PTR [rax+0x30]
  40689d:	mov    ecx,DWORD PTR [rax+0x10]
  4068a0:	mov    rax,QWORD PTR [rbp-0x20]
  4068a4:	imul   ecx,eax
  4068a7:	mov    edx,ecx
  4068a9:	call   4067b0 <flatcc_builder_vector_push@@Base+0xf0>
  4068ae:	mov    QWORD PTR [rbp-0x8],rax
  4068b2:	mov    rax,QWORD PTR [rbp-0x8]
  4068b6:	add    rsp,0x20
  4068ba:	pop    rbp
  4068bb:	ret    
  4068bc:	nop    DWORD PTR [rax+0x0]

00000000004068c0 <flatcc_builder_extend_offset_vector@@Base>:
  4068c0:	push   rbp
  4068c1:	mov    rbp,rsp
  4068c4:	sub    rsp,0x20
  4068c8:	mov    QWORD PTR [rbp-0x10],rdi
  4068cc:	mov    QWORD PTR [rbp-0x18],rsi
  4068d0:	mov    rdi,QWORD PTR [rbp-0x10]
  4068d4:	mov    rax,QWORD PTR [rbp-0x18]
  4068d8:	mov    esi,eax
  4068da:	mov    edx,0x3fffffff
  4068df:	call   406610 <flatcc_builder_extend_vector@@Base+0x70>
  4068e4:	cmp    eax,0x0
  4068e7:	je     4068fa <flatcc_builder_extend_offset_vector@@Base+0x3a>
  4068ed:	mov    QWORD PTR [rbp-0x8],0x0
  4068f5:	jmp    406915 <flatcc_builder_extend_offset_vector@@Base+0x55>
  4068fa:	mov    rdi,QWORD PTR [rbp-0x10]
  4068fe:	mov    rax,QWORD PTR [rbp-0x18]
  406902:	mov    eax,eax
  406904:	mov    ecx,eax
  406906:	shl    rcx,0x2
  40690a:	mov    esi,ecx
  40690c:	call   406450 <flatcc_builder_start_struct@@Base+0xf0>
  406911:	mov    QWORD PTR [rbp-0x8],rax
  406915:	mov    rax,QWORD PTR [rbp-0x8]
  406919:	add    rsp,0x20
  40691d:	pop    rbp
  40691e:	ret    
  40691f:	nop

0000000000406920 <flatcc_builder_offset_vector_push@@Base>:
  406920:	push   rbp
  406921:	mov    rbp,rsp
  406924:	sub    rsp,0x20
  406928:	mov    QWORD PTR [rbp-0x10],rdi
  40692c:	mov    DWORD PTR [rbp-0x14],esi
  40692f:	mov    rax,QWORD PTR [rbp-0x10]
  406933:	mov    rax,QWORD PTR [rax+0x30]
  406937:	movzx  ecx,WORD PTR [rax+0xe]
  40693b:	cmp    ecx,0x5
  40693e:	jne    406949 <flatcc_builder_offset_vector_push@@Base+0x29>
  406944:	jmp    406968 <flatcc_builder_offset_vector_push@@Base+0x48>
  406949:	lea    rdi,[rip+0x6478]        # 40cdc8 <flatcc_builder_padding_base@@Base+0x648>
  406950:	lea    rsi,[rip+0x603b]        # 40c992 <flatcc_builder_padding_base@@Base+0x212>
  406957:	mov    edx,0x3a6
  40695c:	lea    rcx,[rip+0x6498]        # 40cdfb <flatcc_builder_padding_base@@Base+0x67b>
  406963:	call   403090 <__assert_fail@plt>
  406968:	mov    rax,QWORD PTR [rbp-0x10]
  40696c:	mov    rax,QWORD PTR [rax+0x30]
  406970:	mov    ecx,DWORD PTR [rax+0x14]
  406973:	mov    eax,ecx
  406975:	cmp    rax,0x3fffffff
  40697b:	jne    40698e <flatcc_builder_offset_vector_push@@Base+0x6e>
  406981:	mov    QWORD PTR [rbp-0x8],0x0
  406989:	jmp    4069dc <flatcc_builder_offset_vector_push@@Base+0xbc>
  40698e:	mov    rax,QWORD PTR [rbp-0x10]
  406992:	mov    rax,QWORD PTR [rax+0x30]
  406996:	mov    ecx,DWORD PTR [rax+0x14]
  406999:	add    ecx,0x1
  40699c:	mov    DWORD PTR [rax+0x14],ecx
  40699f:	mov    rdi,QWORD PTR [rbp-0x10]
  4069a3:	mov    esi,0x4
  4069a8:	call   406450 <flatcc_builder_start_struct@@Base+0xf0>
  4069ad:	xor    ecx,ecx
  4069af:	mov    edx,ecx
  4069b1:	mov    QWORD PTR [rbp-0x20],rax
  4069b5:	cmp    rdx,rax
  4069b8:	jne    4069cb <flatcc_builder_offset_vector_push@@Base+0xab>
  4069be:	mov    QWORD PTR [rbp-0x8],0x0
  4069c6:	jmp    4069dc <flatcc_builder_offset_vector_push@@Base+0xbc>
  4069cb:	mov    eax,DWORD PTR [rbp-0x14]
  4069ce:	mov    rcx,QWORD PTR [rbp-0x20]
  4069d2:	mov    DWORD PTR [rcx],eax
  4069d4:	mov    rcx,QWORD PTR [rbp-0x20]
  4069d8:	mov    QWORD PTR [rbp-0x8],rcx
  4069dc:	mov    rax,QWORD PTR [rbp-0x8]
  4069e0:	add    rsp,0x20
  4069e4:	pop    rbp
  4069e5:	ret    
  4069e6:	nop    WORD PTR cs:[rax+rax*1+0x0]

00000000004069f0 <flatcc_builder_append_offset_vector@@Base>:
  4069f0:	push   rbp
  4069f1:	mov    rbp,rsp
  4069f4:	sub    rsp,0x20
  4069f8:	mov    QWORD PTR [rbp-0x10],rdi
  4069fc:	mov    QWORD PTR [rbp-0x18],rsi
  406a00:	mov    QWORD PTR [rbp-0x20],rdx
  406a04:	mov    rax,QWORD PTR [rbp-0x10]
  406a08:	mov    rax,QWORD PTR [rax+0x30]
  406a0c:	movzx  ecx,WORD PTR [rax+0xe]
  406a10:	cmp    ecx,0x5
  406a13:	jne    406a1e <flatcc_builder_append_offset_vector@@Base+0x2e>
  406a19:	jmp    406a3d <flatcc_builder_append_offset_vector@@Base+0x4d>
  406a1e:	lea    rdi,[rip+0x63a3]        # 40cdc8 <flatcc_builder_padding_base@@Base+0x648>
  406a25:	lea    rsi,[rip+0x5f66]        # 40c992 <flatcc_builder_padding_base@@Base+0x212>
  406a2c:	mov    edx,0x3b4
  406a31:	lea    rcx,[rip+0x6425]        # 40ce5d <flatcc_builder_padding_base@@Base+0x6dd>
  406a38:	call   403090 <__assert_fail@plt>
  406a3d:	mov    rdi,QWORD PTR [rbp-0x10]
  406a41:	mov    rax,QWORD PTR [rbp-0x20]
  406a45:	mov    esi,eax
  406a47:	mov    edx,0x3fffffff
  406a4c:	call   406610 <flatcc_builder_extend_vector@@Base+0x70>
  406a51:	cmp    eax,0x0
  406a54:	je     406a67 <flatcc_builder_append_offset_vector@@Base+0x77>
  406a5a:	mov    QWORD PTR [rbp-0x8],0x0
  406a62:	jmp    406a87 <flatcc_builder_append_offset_vector@@Base+0x97>
  406a67:	mov    rdi,QWORD PTR [rbp-0x10]
  406a6b:	mov    rax,QWORD PTR [rbp-0x18]
  406a6f:	mov    rcx,QWORD PTR [rbp-0x20]
  406a73:	mov    ecx,ecx
  406a75:	mov    edx,ecx
  406a77:	shl    rdx,0x2
  406a7b:	mov    rsi,rax
  406a7e:	call   4067b0 <flatcc_builder_vector_push@@Base+0xf0>
  406a83:	mov    QWORD PTR [rbp-0x8],rax
  406a87:	mov    rax,QWORD PTR [rbp-0x8]
  406a8b:	add    rsp,0x20
  406a8f:	pop    rbp
  406a90:	ret    
  406a91:	nop    WORD PTR cs:[rax+rax*1+0x0]
  406a9b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000406aa0 <flatcc_builder_extend_string@@Base>:
  406aa0:	push   rbp
  406aa1:	mov    rbp,rsp
  406aa4:	sub    rsp,0x20
  406aa8:	mov    QWORD PTR [rbp-0x10],rdi
  406aac:	mov    QWORD PTR [rbp-0x18],rsi
  406ab0:	mov    rax,QWORD PTR [rbp-0x10]
  406ab4:	mov    rax,QWORD PTR [rax+0x30]
  406ab8:	movzx  ecx,WORD PTR [rax+0xe]
  406abc:	cmp    ecx,0x6
  406abf:	jne    406aca <flatcc_builder_extend_string@@Base+0x2a>
  406ac5:	jmp    406ae9 <flatcc_builder_extend_string@@Base+0x49>
  406aca:	lea    rdi,[rip+0x6400]        # 40ced1 <flatcc_builder_padding_base@@Base+0x751>
  406ad1:	lea    rsi,[rip+0x5eba]        # 40c992 <flatcc_builder_padding_base@@Base+0x212>
  406ad8:	mov    edx,0x3bd
  406add:	lea    rcx,[rip+0x6419]        # 40cefd <flatcc_builder_padding_base@@Base+0x77d>
  406ae4:	call   403090 <__assert_fail@plt>
  406ae9:	mov    rdi,QWORD PTR [rbp-0x10]
  406aed:	mov    rax,QWORD PTR [rbp-0x18]
  406af1:	mov    esi,eax
  406af3:	mov    edx,0xffffffff
  406af8:	call   406610 <flatcc_builder_extend_vector@@Base+0x70>
  406afd:	cmp    eax,0x0
  406b00:	je     406b13 <flatcc_builder_extend_string@@Base+0x73>
  406b06:	mov    QWORD PTR [rbp-0x8],0x0
  406b0e:	jmp    406b26 <flatcc_builder_extend_string@@Base+0x86>
  406b13:	mov    rdi,QWORD PTR [rbp-0x10]
  406b17:	mov    rax,QWORD PTR [rbp-0x18]
  406b1b:	mov    esi,eax
  406b1d:	call   406450 <flatcc_builder_start_struct@@Base+0xf0>
  406b22:	mov    QWORD PTR [rbp-0x8],rax
  406b26:	mov    rax,QWORD PTR [rbp-0x8]
  406b2a:	add    rsp,0x20
  406b2e:	pop    rbp
  406b2f:	ret    

0000000000406b30 <flatcc_builder_append_string@@Base>:
  406b30:	push   rbp
  406b31:	mov    rbp,rsp
  406b34:	sub    rsp,0x20
  406b38:	mov    QWORD PTR [rbp-0x10],rdi
  406b3c:	mov    QWORD PTR [rbp-0x18],rsi
  406b40:	mov    QWORD PTR [rbp-0x20],rdx
  406b44:	mov    rax,QWORD PTR [rbp-0x10]
  406b48:	mov    rax,QWORD PTR [rax+0x30]
  406b4c:	movzx  ecx,WORD PTR [rax+0xe]
  406b50:	cmp    ecx,0x6
  406b53:	jne    406b5e <flatcc_builder_append_string@@Base+0x2e>
  406b59:	jmp    406b7d <flatcc_builder_append_string@@Base+0x4d>
  406b5e:	lea    rdi,[rip+0x636c]        # 40ced1 <flatcc_builder_padding_base@@Base+0x751>
  406b65:	lea    rsi,[rip+0x5e26]        # 40c992 <flatcc_builder_padding_base@@Base+0x212>
  406b6c:	mov    edx,0x3c6
  406b71:	lea    rcx,[rip+0x63c4]        # 40cf3c <flatcc_builder_padding_base@@Base+0x7bc>
  406b78:	call   403090 <__assert_fail@plt>
  406b7d:	mov    rdi,QWORD PTR [rbp-0x10]
  406b81:	mov    rax,QWORD PTR [rbp-0x20]
  406b85:	mov    esi,eax
  406b87:	mov    edx,0xffffffff
  406b8c:	call   406610 <flatcc_builder_extend_vector@@Base+0x70>
  406b91:	cmp    eax,0x0
  406b94:	je     406ba7 <flatcc_builder_append_string@@Base+0x77>
  406b9a:	mov    QWORD PTR [rbp-0x8],0x0
  406ba2:	jmp    406bbe <flatcc_builder_append_string@@Base+0x8e>
  406ba7:	mov    rdi,QWORD PTR [rbp-0x10]
  406bab:	mov    rsi,QWORD PTR [rbp-0x18]
  406baf:	mov    rax,QWORD PTR [rbp-0x20]
  406bb3:	mov    edx,eax
  406bb5:	call   4067b0 <flatcc_builder_vector_push@@Base+0xf0>
  406bba:	mov    QWORD PTR [rbp-0x8],rax
  406bbe:	mov    rax,QWORD PTR [rbp-0x8]
  406bc2:	add    rsp,0x20
  406bc6:	pop    rbp
  406bc7:	ret    
  406bc8:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000406bd0 <flatcc_builder_append_string_str@@Base>:
  406bd0:	push   rbp
  406bd1:	mov    rbp,rsp
  406bd4:	sub    rsp,0x20
  406bd8:	mov    QWORD PTR [rbp-0x8],rdi
  406bdc:	mov    QWORD PTR [rbp-0x10],rsi
  406be0:	mov    rdi,QWORD PTR [rbp-0x8]
  406be4:	mov    rsi,QWORD PTR [rbp-0x10]
  406be8:	mov    rax,QWORD PTR [rbp-0x10]
  406bec:	mov    QWORD PTR [rbp-0x18],rdi
  406bf0:	mov    rdi,rax
  406bf3:	mov    QWORD PTR [rbp-0x20],rsi
  406bf7:	call   403060 <strlen@plt>
  406bfc:	mov    rdi,QWORD PTR [rbp-0x18]
  406c00:	mov    rsi,QWORD PTR [rbp-0x20]
  406c04:	mov    rdx,rax
  406c07:	call   406b30 <flatcc_builder_append_string@@Base>
  406c0c:	add    rsp,0x20
  406c10:	pop    rbp
  406c11:	ret    
  406c12:	nop    WORD PTR cs:[rax+rax*1+0x0]
  406c1c:	nop    DWORD PTR [rax+0x0]

0000000000406c20 <flatcc_builder_append_string_strn@@Base>:
  406c20:	push   rbp
  406c21:	mov    rbp,rsp
  406c24:	sub    rsp,0x30
  406c28:	mov    QWORD PTR [rbp-0x8],rdi
  406c2c:	mov    QWORD PTR [rbp-0x10],rsi
  406c30:	mov    QWORD PTR [rbp-0x18],rdx
  406c34:	mov    rdi,QWORD PTR [rbp-0x8]
  406c38:	mov    rsi,QWORD PTR [rbp-0x10]
  406c3c:	mov    rax,QWORD PTR [rbp-0x10]
  406c40:	mov    rcx,QWORD PTR [rbp-0x18]
  406c44:	mov    QWORD PTR [rbp-0x20],rdi
  406c48:	mov    rdi,rax
  406c4b:	mov    QWORD PTR [rbp-0x28],rsi
  406c4f:	mov    rsi,rcx
  406c52:	call   406c70 <flatcc_builder_append_string_strn@@Base+0x50>
  406c57:	mov    rdi,QWORD PTR [rbp-0x20]
  406c5b:	mov    rsi,QWORD PTR [rbp-0x28]
  406c5f:	mov    rdx,rax
  406c62:	call   406b30 <flatcc_builder_append_string@@Base>
  406c67:	add    rsp,0x30
  406c6b:	pop    rbp
  406c6c:	ret    
  406c6d:	nop    DWORD PTR [rax]
  406c70:	push   rbp
  406c71:	mov    rbp,rsp
  406c74:	sub    rsp,0x20
  406c78:	mov    QWORD PTR [rbp-0x8],rdi
  406c7c:	mov    QWORD PTR [rbp-0x10],rsi
  406c80:	mov    rdi,QWORD PTR [rbp-0x8]
  406c84:	mov    rdx,QWORD PTR [rbp-0x10]
  406c88:	xor    esi,esi
  406c8a:	call   4030b0 <memchr@plt>
  406c8f:	mov    QWORD PTR [rbp-0x18],rax
  406c93:	cmp    QWORD PTR [rbp-0x18],0x0
  406c98:	je     406cb2 <flatcc_builder_append_string_strn@@Base+0x92>
  406c9e:	mov    rax,QWORD PTR [rbp-0x18]
  406ca2:	mov    rcx,QWORD PTR [rbp-0x8]
  406ca6:	sub    rax,rcx
  406ca9:	mov    QWORD PTR [rbp-0x20],rax
  406cad:	jmp    406cba <flatcc_builder_append_string_strn@@Base+0x9a>
  406cb2:	mov    rax,QWORD PTR [rbp-0x10]
  406cb6:	mov    QWORD PTR [rbp-0x20],rax
  406cba:	mov    rax,QWORD PTR [rbp-0x20]
  406cbe:	add    rsp,0x20
  406cc2:	pop    rbp
  406cc3:	ret    
  406cc4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  406cce:	xchg   ax,ax

0000000000406cd0 <flatcc_builder_truncate_vector@@Base>:
  406cd0:	push   rbp
  406cd1:	mov    rbp,rsp
  406cd4:	sub    rsp,0x20
  406cd8:	mov    QWORD PTR [rbp-0x10],rdi
  406cdc:	mov    QWORD PTR [rbp-0x18],rsi
  406ce0:	mov    rax,QWORD PTR [rbp-0x10]
  406ce4:	mov    rax,QWORD PTR [rax+0x30]
  406ce8:	movzx  ecx,WORD PTR [rax+0xe]
  406cec:	cmp    ecx,0x4
  406cef:	jne    406cfa <flatcc_builder_truncate_vector@@Base+0x2a>
  406cf5:	jmp    406d19 <flatcc_builder_truncate_vector@@Base+0x49>
  406cfa:	lea    rdi,[rip+0x5fce]        # 40cccf <flatcc_builder_padding_base@@Base+0x54f>
  406d01:	lea    rsi,[rip+0x5c8a]        # 40c992 <flatcc_builder_padding_base@@Base+0x212>
  406d08:	mov    edx,0x3d9
  406d0d:	lea    rcx,[rip+0x6275]        # 40cf89 <flatcc_builder_padding_base@@Base+0x809>
  406d14:	call   403090 <__assert_fail@plt>
  406d19:	mov    rax,QWORD PTR [rbp-0x10]
  406d1d:	mov    rax,QWORD PTR [rax+0x30]
  406d21:	mov    ecx,DWORD PTR [rax+0x14]
  406d24:	mov    eax,ecx
  406d26:	cmp    rax,QWORD PTR [rbp-0x18]
  406d2a:	jae    406d77 <flatcc_builder_truncate_vector@@Base+0xa7>
  406d30:	mov    rax,QWORD PTR [rbp-0x10]
  406d34:	mov    rax,QWORD PTR [rax+0x30]
  406d38:	mov    ecx,DWORD PTR [rax+0x14]
  406d3b:	mov    eax,ecx
  406d3d:	cmp    rax,QWORD PTR [rbp-0x18]
  406d41:	jb     406d4c <flatcc_builder_truncate_vector@@Base+0x7c>
  406d47:	jmp    406d6b <flatcc_builder_truncate_vector@@Base+0x9b>
  406d4c:	lea    rdi,[rip+0x6275]        # 40cfc8 <flatcc_builder_padding_base@@Base+0x848>
  406d53:	lea    rsi,[rip+0x5c38]        # 40c992 <flatcc_builder_padding_base@@Base+0x212>
  406d5a:	mov    edx,0x3da
  406d5f:	lea    rcx,[rip+0x6223]        # 40cf89 <flatcc_builder_padding_base@@Base+0x809>
  406d66:	call   403090 <__assert_fail@plt>
  406d6b:	mov    DWORD PTR [rbp-0x4],0xffffffff
  406d72:	jmp    406daf <flatcc_builder_truncate_vector@@Base+0xdf>
  406d77:	mov    rax,QWORD PTR [rbp-0x18]
  406d7b:	mov    rcx,QWORD PTR [rbp-0x10]
  406d7f:	mov    rcx,QWORD PTR [rcx+0x30]
  406d83:	mov    edx,DWORD PTR [rcx+0x14]
  406d86:	sub    edx,eax
  406d88:	mov    DWORD PTR [rcx+0x14],edx
  406d8b:	mov    rdi,QWORD PTR [rbp-0x10]
  406d8f:	mov    rcx,QWORD PTR [rbp-0x10]
  406d93:	mov    rcx,QWORD PTR [rcx+0x30]
  406d97:	mov    eax,DWORD PTR [rcx+0x10]
  406d9a:	mov    rcx,QWORD PTR [rbp-0x18]
  406d9e:	imul   eax,ecx
  406da1:	mov    esi,eax
  406da3:	call   406dc0 <flatcc_builder_truncate_vector@@Base+0xf0>
  406da8:	mov    DWORD PTR [rbp-0x4],0x0
  406daf:	mov    eax,DWORD PTR [rbp-0x4]
  406db2:	add    rsp,0x20
  406db6:	pop    rbp
  406db7:	ret    
  406db8:	nop    DWORD PTR [rax+rax*1+0x0]
  406dc0:	push   rbp
  406dc1:	mov    rbp,rsp
  406dc4:	sub    rsp,0x20
  406dc8:	xor    eax,eax
  406dca:	mov    QWORD PTR [rbp-0x8],rdi
  406dce:	mov    DWORD PTR [rbp-0xc],esi
  406dd1:	mov    ecx,DWORD PTR [rbp-0xc]
  406dd4:	mov    rdx,QWORD PTR [rbp-0x8]
  406dd8:	mov    esi,DWORD PTR [rdx+0x20]
  406ddb:	sub    esi,ecx
  406ddd:	mov    DWORD PTR [rdx+0x20],esi
  406de0:	mov    rdx,QWORD PTR [rbp-0x8]
  406de4:	mov    rdx,QWORD PTR [rdx+0x18]
  406de8:	mov    rdi,QWORD PTR [rbp-0x8]
  406dec:	mov    ecx,DWORD PTR [rdi+0x20]
  406def:	mov    edi,ecx
  406df1:	add    rdx,rdi
  406df4:	mov    ecx,DWORD PTR [rbp-0xc]
  406df7:	mov    edi,ecx
  406df9:	mov    QWORD PTR [rbp-0x18],rdi
  406dfd:	mov    rdi,rdx
  406e00:	mov    esi,eax
  406e02:	mov    rdx,QWORD PTR [rbp-0x18]
  406e06:	call   4030a0 <memset@plt>
  406e0b:	add    rsp,0x20
  406e0f:	pop    rbp
  406e10:	ret    
  406e11:	nop    WORD PTR cs:[rax+rax*1+0x0]
  406e1b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000406e20 <flatcc_builder_truncate_offset_vector@@Base>:
  406e20:	push   rbp
  406e21:	mov    rbp,rsp
  406e24:	sub    rsp,0x20
  406e28:	mov    QWORD PTR [rbp-0x10],rdi
  406e2c:	mov    QWORD PTR [rbp-0x18],rsi
  406e30:	mov    rax,QWORD PTR [rbp-0x10]
  406e34:	mov    rax,QWORD PTR [rax+0x30]
  406e38:	movzx  ecx,WORD PTR [rax+0xe]
  406e3c:	cmp    ecx,0x5
  406e3f:	jne    406e4a <flatcc_builder_truncate_offset_vector@@Base+0x2a>
  406e45:	jmp    406e69 <flatcc_builder_truncate_offset_vector@@Base+0x49>
  406e4a:	lea    rdi,[rip+0x5f77]        # 40cdc8 <flatcc_builder_padding_base@@Base+0x648>
  406e51:	lea    rsi,[rip+0x5b3a]        # 40c992 <flatcc_builder_padding_base@@Base+0x212>
  406e58:	mov    edx,0x3e2
  406e5d:	lea    rcx,[rip+0x6188]        # 40cfec <flatcc_builder_padding_base@@Base+0x86c>
  406e64:	call   403090 <__assert_fail@plt>
  406e69:	mov    rax,QWORD PTR [rbp-0x10]
  406e6d:	mov    rax,QWORD PTR [rax+0x30]
  406e71:	mov    ecx,DWORD PTR [rax+0x14]
  406e74:	mov    rax,QWORD PTR [rbp-0x18]
  406e78:	cmp    ecx,eax
  406e7a:	jae    406ec7 <flatcc_builder_truncate_offset_vector@@Base+0xa7>
  406e80:	mov    rax,QWORD PTR [rbp-0x10]
  406e84:	mov    rax,QWORD PTR [rax+0x30]
  406e88:	mov    ecx,DWORD PTR [rax+0x14]
  406e8b:	mov    rax,QWORD PTR [rbp-0x18]
  406e8f:	cmp    ecx,eax
  406e91:	jb     406e9c <flatcc_builder_truncate_offset_vector@@Base+0x7c>
  406e97:	jmp    406ebb <flatcc_builder_truncate_offset_vector@@Base+0x9b>
  406e9c:	lea    rdi,[rip+0x618f]        # 40d032 <flatcc_builder_padding_base@@Base+0x8b2>
  406ea3:	lea    rsi,[rip+0x5ae8]        # 40c992 <flatcc_builder_padding_base@@Base+0x212>
  406eaa:	mov    edx,0x3e3
  406eaf:	lea    rcx,[rip+0x6136]        # 40cfec <flatcc_builder_padding_base@@Base+0x86c>
  406eb6:	call   403090 <__assert_fail@plt>
  406ebb:	mov    DWORD PTR [rbp-0x4],0xffffffff
  406ec2:	jmp    406eff <flatcc_builder_truncate_offset_vector@@Base+0xdf>
  406ec7:	mov    rax,QWORD PTR [rbp-0x18]
  406ecb:	mov    rcx,QWORD PTR [rbp-0x10]
  406ecf:	mov    rcx,QWORD PTR [rcx+0x30]
  406ed3:	mov    edx,DWORD PTR [rcx+0x14]
  406ed6:	sub    edx,eax
  406ed8:	mov    DWORD PTR [rcx+0x14],edx
  406edb:	mov    rdi,QWORD PTR [rbp-0x10]
  406edf:	mov    rcx,QWORD PTR [rbp-0x10]
  406ee3:	mov    rcx,QWORD PTR [rcx+0x30]
  406ee7:	mov    eax,DWORD PTR [rcx+0x10]
  406eea:	mov    rcx,QWORD PTR [rbp-0x18]
  406eee:	imul   eax,ecx
  406ef1:	mov    esi,eax
  406ef3:	call   406dc0 <flatcc_builder_truncate_vector@@Base+0xf0>
  406ef8:	mov    DWORD PTR [rbp-0x4],0x0
  406eff:	mov    eax,DWORD PTR [rbp-0x4]
  406f02:	add    rsp,0x20
  406f06:	pop    rbp
  406f07:	ret    
  406f08:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000406f10 <flatcc_builder_truncate_string@@Base>:
  406f10:	push   rbp
  406f11:	mov    rbp,rsp
  406f14:	sub    rsp,0x20
  406f18:	mov    QWORD PTR [rbp-0x10],rdi
  406f1c:	mov    QWORD PTR [rbp-0x18],rsi
  406f20:	mov    rax,QWORD PTR [rbp-0x10]
  406f24:	mov    rax,QWORD PTR [rax+0x30]
  406f28:	movzx  ecx,WORD PTR [rax+0xe]
  406f2c:	cmp    ecx,0x6
  406f2f:	jne    406f3a <flatcc_builder_truncate_string@@Base+0x2a>
  406f35:	jmp    406f59 <flatcc_builder_truncate_string@@Base+0x49>
  406f3a:	lea    rdi,[rip+0x5f90]        # 40ced1 <flatcc_builder_padding_base@@Base+0x751>
  406f41:	lea    rsi,[rip+0x5a4a]        # 40c992 <flatcc_builder_padding_base@@Base+0x212>
  406f48:	mov    edx,0x3eb
  406f4d:	lea    rcx,[rip+0x6119]        # 40d06d <flatcc_builder_padding_base@@Base+0x8ed>
  406f54:	call   403090 <__assert_fail@plt>
  406f59:	mov    rax,QWORD PTR [rbp-0x10]
  406f5d:	mov    rax,QWORD PTR [rax+0x30]
  406f61:	mov    ecx,DWORD PTR [rax+0x14]
  406f64:	mov    eax,ecx
  406f66:	cmp    rax,QWORD PTR [rbp-0x18]
  406f6a:	jae    406fb7 <flatcc_builder_truncate_string@@Base+0xa7>
  406f70:	mov    rax,QWORD PTR [rbp-0x10]
  406f74:	mov    rax,QWORD PTR [rax+0x30]
  406f78:	mov    ecx,DWORD PTR [rax+0x14]
  406f7b:	mov    eax,ecx
  406f7d:	cmp    rax,QWORD PTR [rbp-0x18]
  406f81:	jb     406f8c <flatcc_builder_truncate_string@@Base+0x7c>
  406f87:	jmp    406fab <flatcc_builder_truncate_string@@Base+0x9b>
  406f8c:	lea    rdi,[rip+0x6119]        # 40d0ac <flatcc_builder_padding_base@@Base+0x92c>
  406f93:	lea    rsi,[rip+0x59f8]        # 40c992 <flatcc_builder_padding_base@@Base+0x212>
  406f9a:	mov    edx,0x3ec
  406f9f:	lea    rcx,[rip+0x60c7]        # 40d06d <flatcc_builder_padding_base@@Base+0x8ed>
  406fa6:	call   403090 <__assert_fail@plt>
  406fab:	mov    DWORD PTR [rbp-0x4],0xffffffff
  406fb2:	jmp    406fe1 <flatcc_builder_truncate_string@@Base+0xd1>
  406fb7:	mov    rax,QWORD PTR [rbp-0x18]
  406fbb:	mov    rcx,QWORD PTR [rbp-0x10]
  406fbf:	mov    rcx,QWORD PTR [rcx+0x30]
  406fc3:	mov    edx,DWORD PTR [rcx+0x14]
  406fc6:	sub    edx,eax
  406fc8:	mov    DWORD PTR [rcx+0x14],edx
  406fcb:	mov    rdi,QWORD PTR [rbp-0x10]
  406fcf:	mov    rcx,QWORD PTR [rbp-0x18]
  406fd3:	mov    esi,ecx
  406fd5:	call   406dc0 <flatcc_builder_truncate_vector@@Base+0xf0>
  406fda:	mov    DWORD PTR [rbp-0x4],0x0
  406fe1:	mov    eax,DWORD PTR [rbp-0x4]
  406fe4:	add    rsp,0x20
  406fe8:	pop    rbp
  406fe9:	ret    
  406fea:	nop    WORD PTR [rax+rax*1+0x0]

0000000000406ff0 <flatcc_builder_start_vector@@Base>:
  406ff0:	push   rbp
  406ff1:	mov    rbp,rsp
  406ff4:	sub    rsp,0x30
  406ff8:	mov    QWORD PTR [rbp-0x10],rdi
  406ffc:	mov    QWORD PTR [rbp-0x18],rsi
  407000:	mov    WORD PTR [rbp-0x1a],dx
  407004:	mov    QWORD PTR [rbp-0x28],rcx
  407008:	lea    rdi,[rbp-0x1a]
  40700c:	mov    esi,0x4
  407011:	call   4070a0 <flatcc_builder_start_vector@@Base+0xb0>
  407016:	mov    rdi,QWORD PTR [rbp-0x10]
  40701a:	movzx  esi,WORD PTR [rbp-0x1a]
  40701e:	call   405f80 <flatcc_builder_start_buffer@@Base+0x170>
  407023:	cmp    eax,0x0
  407026:	je     407038 <flatcc_builder_start_vector@@Base+0x48>
  40702c:	mov    DWORD PTR [rbp-0x4],0xffffffff
  407033:	jmp    407088 <flatcc_builder_start_vector@@Base+0x98>
  407038:	mov    rax,QWORD PTR [rbp-0x18]
  40703c:	mov    rcx,QWORD PTR [rbp-0x10]
  407040:	mov    rcx,QWORD PTR [rcx+0x30]
  407044:	mov    DWORD PTR [rcx+0x10],eax
  407047:	mov    rcx,QWORD PTR [rbp-0x10]
  40704b:	mov    rcx,QWORD PTR [rcx+0x30]
  40704f:	mov    DWORD PTR [rcx+0x14],0x0
  407056:	mov    rcx,QWORD PTR [rbp-0x28]
  40705a:	mov    rdx,QWORD PTR [rbp-0x10]
  40705e:	mov    rdx,QWORD PTR [rdx+0x30]
  407062:	mov    DWORD PTR [rdx+0x18],ecx
  407065:	mov    rdx,QWORD PTR [rbp-0x10]
  407069:	mov    rdx,QWORD PTR [rdx+0x30]
  40706d:	mov    WORD PTR [rdx+0xe],0x4
  407073:	mov    rdi,QWORD PTR [rbp-0x10]
  407077:	mov    esi,0xfffffffc
  40707c:	call   4063d0 <flatcc_builder_start_struct@@Base+0x70>
  407081:	mov    DWORD PTR [rbp-0x4],0x0
  407088:	mov    eax,DWORD PTR [rbp-0x4]
  40708b:	add    rsp,0x30
  40708f:	pop    rbp
  407090:	ret    
  407091:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40709b:	nop    DWORD PTR [rax+rax*1+0x0]
  4070a0:	push   rbp
  4070a1:	mov    rbp,rsp
  4070a4:	mov    QWORD PTR [rbp-0x8],rdi
  4070a8:	mov    WORD PTR [rbp-0xa],si
  4070ac:	mov    rax,QWORD PTR [rbp-0x8]
  4070b0:	movzx  ecx,WORD PTR [rax]
  4070b3:	movzx  edx,WORD PTR [rbp-0xa]
  4070b7:	cmp    ecx,edx
  4070b9:	jge    4070ca <flatcc_builder_start_vector@@Base+0xda>
  4070bf:	mov    ax,WORD PTR [rbp-0xa]
  4070c3:	mov    rcx,QWORD PTR [rbp-0x8]
  4070c7:	mov    WORD PTR [rcx],ax
  4070ca:	pop    rbp
  4070cb:	ret    
  4070cc:	nop    DWORD PTR [rax+0x0]

00000000004070d0 <flatcc_builder_start_offset_vector@@Base>:
  4070d0:	push   rbp
  4070d1:	mov    rbp,rsp
  4070d4:	sub    rsp,0x10
  4070d8:	mov    QWORD PTR [rbp-0x10],rdi
  4070dc:	mov    rdi,QWORD PTR [rbp-0x10]
  4070e0:	mov    esi,0x4
  4070e5:	call   405f80 <flatcc_builder_start_buffer@@Base+0x170>
  4070ea:	cmp    eax,0x0
  4070ed:	je     4070ff <flatcc_builder_start_offset_vector@@Base+0x2f>
  4070f3:	mov    DWORD PTR [rbp-0x4],0xffffffff
  4070fa:	jmp    407140 <flatcc_builder_start_offset_vector@@Base+0x70>
  4070ff:	mov    rax,QWORD PTR [rbp-0x10]
  407103:	mov    rax,QWORD PTR [rax+0x30]
  407107:	mov    DWORD PTR [rax+0x10],0x4
  40710e:	mov    rax,QWORD PTR [rbp-0x10]
  407112:	mov    rax,QWORD PTR [rax+0x30]
  407116:	mov    DWORD PTR [rax+0x14],0x0
  40711d:	mov    rax,QWORD PTR [rbp-0x10]
  407121:	mov    rax,QWORD PTR [rax+0x30]
  407125:	mov    WORD PTR [rax+0xe],0x5
  40712b:	mov    rdi,QWORD PTR [rbp-0x10]
  40712f:	mov    esi,0xfffffffc
  407134:	call   4063d0 <flatcc_builder_start_struct@@Base+0x70>
  407139:	mov    DWORD PTR [rbp-0x4],0x0
  407140:	mov    eax,DWORD PTR [rbp-0x4]
  407143:	add    rsp,0x10
  407147:	pop    rbp
  407148:	ret    
  407149:	nop    DWORD PTR [rax+0x0]

0000000000407150 <flatcc_builder_create_offset_vector@@Base>:
  407150:	push   rbp
  407151:	mov    rbp,rsp
  407154:	sub    rsp,0x30
  407158:	mov    QWORD PTR [rbp-0x10],rdi
  40715c:	mov    QWORD PTR [rbp-0x18],rsi
  407160:	mov    QWORD PTR [rbp-0x20],rdx
  407164:	mov    rdi,QWORD PTR [rbp-0x10]
  407168:	call   4070d0 <flatcc_builder_start_offset_vector@@Base>
  40716d:	cmp    eax,0x0
  407170:	je     407182 <flatcc_builder_create_offset_vector@@Base+0x32>
  407176:	mov    DWORD PTR [rbp-0x4],0x0
  40717d:	jmp    4071d0 <flatcc_builder_create_offset_vector@@Base+0x80>
  407182:	mov    rdi,QWORD PTR [rbp-0x10]
  407186:	mov    rsi,QWORD PTR [rbp-0x20]
  40718a:	call   4068c0 <flatcc_builder_extend_offset_vector@@Base>
  40718f:	mov    QWORD PTR [rbp-0x28],rax
  407193:	cmp    rax,0x0
  407197:	jne    4071a9 <flatcc_builder_create_offset_vector@@Base+0x59>
  40719d:	mov    DWORD PTR [rbp-0x4],0x0
  4071a4:	jmp    4071d0 <flatcc_builder_create_offset_vector@@Base+0x80>
  4071a9:	mov    rax,QWORD PTR [rbp-0x28]
  4071ad:	mov    rcx,QWORD PTR [rbp-0x18]
  4071b1:	mov    rdx,QWORD PTR [rbp-0x20]
  4071b5:	shl    rdx,0x2
  4071b9:	mov    rdi,rax
  4071bc:	mov    rsi,rcx
  4071bf:	call   4030e0 <memcpy@plt>
  4071c4:	mov    rdi,QWORD PTR [rbp-0x10]
  4071c8:	call   4071e0 <flatcc_builder_end_offset_vector@@Base>
  4071cd:	mov    DWORD PTR [rbp-0x4],eax
  4071d0:	mov    eax,DWORD PTR [rbp-0x4]
  4071d3:	add    rsp,0x30
  4071d7:	pop    rbp
  4071d8:	ret    
  4071d9:	nop    DWORD PTR [rax+0x0]

00000000004071e0 <flatcc_builder_end_offset_vector@@Base>:
  4071e0:	push   rbp
  4071e1:	mov    rbp,rsp
  4071e4:	sub    rsp,0x20
  4071e8:	mov    QWORD PTR [rbp-0x10],rdi
  4071ec:	mov    rax,QWORD PTR [rbp-0x10]
  4071f0:	mov    rax,QWORD PTR [rax+0x30]
  4071f4:	movzx  ecx,WORD PTR [rax+0xe]
  4071f8:	cmp    ecx,0x5
  4071fb:	jne    407206 <flatcc_builder_end_offset_vector@@Base+0x26>
  407201:	jmp    407225 <flatcc_builder_end_offset_vector@@Base+0x45>
  407206:	lea    rdi,[rip+0x5bbb]        # 40cdc8 <flatcc_builder_padding_base@@Base+0x648>
  40720d:	lea    rsi,[rip+0x577e]        # 40c992 <flatcc_builder_padding_base@@Base+0x212>
  407214:	mov    edx,0x5c8
  407219:	lea    rcx,[rip+0x61d7]        # 40d3f7 <flatcc_builder_padding_base@@Base+0xc77>
  407220:	call   403090 <__assert_fail@plt>
  407225:	mov    rdi,QWORD PTR [rbp-0x10]
  407229:	mov    rax,QWORD PTR [rbp-0x10]
  40722d:	mov    rax,QWORD PTR [rax+0x18]
  407231:	mov    rcx,QWORD PTR [rbp-0x10]
  407235:	mov    rcx,QWORD PTR [rcx+0x30]
  407239:	mov    edx,DWORD PTR [rcx+0x14]
  40723c:	mov    rsi,rax
  40723f:	call   408630 <flatcc_builder_create_offset_vector_direct@@Base>
  407244:	xor    r8d,r8d
  407247:	mov    DWORD PTR [rbp-0x14],eax
  40724a:	cmp    r8d,eax
  40724d:	jne    40725f <flatcc_builder_end_offset_vector@@Base+0x7f>
  407253:	mov    DWORD PTR [rbp-0x4],0x0
  40725a:	jmp    40726e <flatcc_builder_end_offset_vector@@Base+0x8e>
  40725f:	mov    rdi,QWORD PTR [rbp-0x10]
  407263:	call   4062a0 <flatcc_builder_end_buffer@@Base+0x160>
  407268:	mov    eax,DWORD PTR [rbp-0x14]
  40726b:	mov    DWORD PTR [rbp-0x4],eax
  40726e:	mov    eax,DWORD PTR [rbp-0x4]
  407271:	add    rsp,0x20
  407275:	pop    rbp
  407276:	ret    
  407277:	nop    WORD PTR [rax+rax*1+0x0]

0000000000407280 <flatcc_builder_start_string@@Base>:
  407280:	push   rbp
  407281:	mov    rbp,rsp
  407284:	sub    rsp,0x10
  407288:	mov    QWORD PTR [rbp-0x10],rdi
  40728c:	mov    rdi,QWORD PTR [rbp-0x10]
  407290:	mov    esi,0x1
  407295:	call   405f80 <flatcc_builder_start_buffer@@Base+0x170>
  40729a:	cmp    eax,0x0
  40729d:	je     4072af <flatcc_builder_start_string@@Base+0x2f>
  4072a3:	mov    DWORD PTR [rbp-0x4],0xffffffff
  4072aa:	jmp    4072f0 <flatcc_builder_start_string@@Base+0x70>
  4072af:	mov    rax,QWORD PTR [rbp-0x10]
  4072b3:	mov    rax,QWORD PTR [rax+0x30]
  4072b7:	mov    DWORD PTR [rax+0x10],0x1
  4072be:	mov    rax,QWORD PTR [rbp-0x10]
  4072c2:	mov    rax,QWORD PTR [rax+0x30]
  4072c6:	mov    DWORD PTR [rax+0x14],0x0
  4072cd:	mov    rax,QWORD PTR [rbp-0x10]
  4072d1:	mov    rax,QWORD PTR [rax+0x30]
  4072d5:	mov    WORD PTR [rax+0xe],0x6
  4072db:	mov    rdi,QWORD PTR [rbp-0x10]
  4072df:	mov    esi,0xfffffffc
  4072e4:	call   4063d0 <flatcc_builder_start_struct@@Base+0x70>
  4072e9:	mov    DWORD PTR [rbp-0x4],0x0
  4072f0:	mov    eax,DWORD PTR [rbp-0x4]
  4072f3:	add    rsp,0x10
  4072f7:	pop    rbp
  4072f8:	ret    
  4072f9:	nop    DWORD PTR [rax+0x0]

0000000000407300 <flatcc_builder_reserve_table@@Base>:
  407300:	push   rbp
  407301:	mov    rbp,rsp
  407304:	sub    rsp,0x10
  407308:	mov    QWORD PTR [rbp-0x8],rdi
  40730c:	mov    DWORD PTR [rbp-0xc],esi
  40730f:	cmp    DWORD PTR [rbp-0xc],0x0
  407313:	jl     40731e <flatcc_builder_reserve_table@@Base+0x1e>
  407319:	jmp    40733d <flatcc_builder_reserve_table@@Base+0x3d>
  40731e:	lea    rdi,[rip+0x5dea]        # 40d10f <flatcc_builder_padding_base@@Base+0x98f>
  407325:	lea    rsi,[rip+0x5666]        # 40c992 <flatcc_builder_padding_base@@Base+0x212>
  40732c:	mov    edx,0x429
  407331:	lea    rcx,[rip+0x5d96]        # 40d0ce <flatcc_builder_padding_base@@Base+0x94e>
  407338:	call   403090 <__assert_fail@plt>
  40733d:	mov    rdi,QWORD PTR [rbp-0x8]
  407341:	mov    esi,DWORD PTR [rbp-0xc]
  407344:	call   407350 <flatcc_builder_reserve_table@@Base+0x50>
  407349:	add    rsp,0x10
  40734d:	pop    rbp
  40734e:	ret    
  40734f:	nop
  407350:	push   rbp
  407351:	mov    rbp,rsp
  407354:	sub    rsp,0x20
  407358:	xor    eax,eax
  40735a:	mov    QWORD PTR [rbp-0x10],rdi
  40735e:	mov    DWORD PTR [rbp-0x14],esi
  407361:	mov    rcx,QWORD PTR [rbp-0x10]
  407365:	mov    rcx,QWORD PTR [rcx+0x30]
  407369:	mov    edx,DWORD PTR [rcx+0x10]
  40736c:	mov    ecx,edx
  40736e:	mov    rdi,QWORD PTR [rbp-0x10]
  407372:	mov    rdi,QWORD PTR [rdi+0x30]
  407376:	movzx  edx,WORD PTR [rdi+0x1c]
  40737a:	mov    edi,edx
  40737c:	shl    rdi,0x1
  407380:	add    rcx,rdi
  407383:	mov    DWORD PTR [rbp-0x18],ecx
  407386:	mov    ecx,DWORD PTR [rbp-0x14]
  407389:	add    ecx,0x2
  40738c:	movsxd rdi,ecx
  40738f:	shl    rdi,0x1
  407393:	mov    DWORD PTR [rbp-0x1c],edi
  407396:	mov    rdi,QWORD PTR [rbp-0x10]
  40739a:	mov    ecx,DWORD PTR [rbp-0x18]
  40739d:	mov    edx,ecx
  40739f:	mov    ecx,DWORD PTR [rbp-0x1c]
  4073a2:	mov    esi,eax
  4073a4:	mov    r8d,0x1
  4073aa:	call   404fc0 <flatcc_builder_enter_user_frame_ptr@@Base+0xf0>
  4073af:	mov    rcx,QWORD PTR [rbp-0x10]
  4073b3:	mov    QWORD PTR [rcx+0x8],rax
  4073b7:	cmp    rax,0x0
  4073bb:	jne    4073cd <flatcc_builder_reserve_table@@Base+0xcd>
  4073c1:	mov    DWORD PTR [rbp-0x4],0xffffffff
  4073c8:	jmp    40743e <flatcc_builder_reserve_table@@Base+0x13e>
  4073cd:	xor    r8d,r8d
  4073d0:	mov    rax,QWORD PTR [rbp-0x10]
  4073d4:	mov    rcx,QWORD PTR [rax+0x8]
  4073d8:	add    rcx,0x4
  4073df:	mov    QWORD PTR [rax+0x8],rcx
  4073e3:	mov    rax,QWORD PTR [rbp-0x10]
  4073e7:	mov    rax,QWORD PTR [rax+0x30]
  4073eb:	mov    edx,DWORD PTR [rax+0x14]
  4073ee:	mov    DWORD PTR [rbp-0x18],edx
  4073f1:	movsxd rax,DWORD PTR [rbp-0x14]
  4073f5:	shl    rax,0x1
  4073f9:	add    rax,0x1
  4073ff:	mov    DWORD PTR [rbp-0x1c],eax
  407402:	mov    rdi,QWORD PTR [rbp-0x10]
  407406:	mov    eax,DWORD PTR [rbp-0x18]
  407409:	mov    edx,eax
  40740b:	mov    eax,DWORD PTR [rbp-0x1c]
  40740e:	mov    ecx,eax
  407410:	mov    esi,0x3
  407415:	call   404fc0 <flatcc_builder_enter_user_frame_ptr@@Base+0xf0>
  40741a:	mov    rcx,QWORD PTR [rbp-0x10]
  40741e:	mov    QWORD PTR [rcx],rax
  407421:	cmp    rax,0x0
  407425:	jne    407437 <flatcc_builder_reserve_table@@Base+0x137>
  40742b:	mov    DWORD PTR [rbp-0x4],0xffffffff
  407432:	jmp    40743e <flatcc_builder_reserve_table@@Base+0x13e>
  407437:	mov    DWORD PTR [rbp-0x4],0x0
  40743e:	mov    eax,DWORD PTR [rbp-0x4]
  407441:	add    rsp,0x20
  407445:	pop    rbp
  407446:	ret    
  407447:	nop    WORD PTR [rax+rax*1+0x0]

0000000000407450 <flatcc_builder_start_table@@Base>:
  407450:	push   rbp
  407451:	mov    rbp,rsp
  407454:	sub    rsp,0x20
  407458:	mov    QWORD PTR [rbp-0x10],rdi
  40745c:	mov    DWORD PTR [rbp-0x14],esi
  40745f:	mov    rdi,QWORD PTR [rbp-0x10]
  407463:	mov    esi,0x4
  407468:	call   405f80 <flatcc_builder_start_buffer@@Base+0x170>
  40746d:	cmp    eax,0x0
  407470:	je     407482 <flatcc_builder_start_table@@Base+0x32>
  407476:	mov    DWORD PTR [rbp-0x4],0xffffffff
  40747d:	jmp    40754a <flatcc_builder_start_table@@Base+0xfa>
  407482:	mov    rax,QWORD PTR [rbp-0x10]
  407486:	mov    rax,QWORD PTR [rax+0x8]
  40748a:	mov    rcx,QWORD PTR [rbp-0x10]
  40748e:	mov    rcx,QWORD PTR [rcx+0x58]
  407492:	sub    rax,rcx
  407495:	mov    rcx,QWORD PTR [rbp-0x10]
  407499:	mov    rcx,QWORD PTR [rcx+0x30]
  40749d:	mov    DWORD PTR [rcx+0x10],eax
  4074a0:	mov    rcx,QWORD PTR [rbp-0x10]
  4074a4:	mov    rcx,QWORD PTR [rcx]
  4074a7:	mov    rdx,QWORD PTR [rbp-0x10]
  4074ab:	mov    rdx,QWORD PTR [rdx+0x88]
  4074b2:	sub    rcx,rdx
  4074b5:	mov    rdx,QWORD PTR [rbp-0x10]
  4074b9:	mov    rdx,QWORD PTR [rdx+0x30]
  4074bd:	mov    DWORD PTR [rdx+0x14],ecx
  4074c0:	mov    rdx,QWORD PTR [rbp-0x10]
  4074c4:	mov    eax,DWORD PTR [rdx+0x14]
  4074c7:	mov    rdx,QWORD PTR [rbp-0x10]
  4074cb:	mov    rdx,QWORD PTR [rdx+0x30]
  4074cf:	mov    DWORD PTR [rdx+0x18],eax
  4074d2:	mov    rdx,QWORD PTR [rbp-0x10]
  4074d6:	mov    si,WORD PTR [rdx+0x10]
  4074da:	mov    rdx,QWORD PTR [rbp-0x10]
  4074de:	mov    rdx,QWORD PTR [rdx+0x30]
  4074e2:	mov    WORD PTR [rdx+0x1c],si
  4074e6:	mov    rdx,QWORD PTR [rbp-0x10]
  4074ea:	mov    DWORD PTR [rdx+0x14],0x0
  4074f1:	mov    rdx,QWORD PTR [rbp-0x10]
  4074f5:	mov    DWORD PTR [rdx+0x14],0x2f693b52
  4074fc:	mov    rdx,QWORD PTR [rbp-0x10]
  407500:	mov    WORD PTR [rdx+0x10],0x0
  407506:	mov    rdx,QWORD PTR [rbp-0x10]
  40750a:	mov    rdx,QWORD PTR [rdx+0x30]
  40750e:	mov    WORD PTR [rdx+0xe],0x3
  407514:	mov    rdi,QWORD PTR [rbp-0x10]
  407518:	mov    esi,DWORD PTR [rbp-0x14]
  40751b:	call   407350 <flatcc_builder_reserve_table@@Base+0x50>
  407520:	cmp    eax,0x0
  407523:	je     407535 <flatcc_builder_start_table@@Base+0xe5>
  407529:	mov    DWORD PTR [rbp-0x4],0xffffffff
  407530:	jmp    40754a <flatcc_builder_start_table@@Base+0xfa>
  407535:	mov    rdi,QWORD PTR [rbp-0x10]
  407539:	mov    esi,0xfffc
  40753e:	call   4063d0 <flatcc_builder_start_struct@@Base+0x70>
  407543:	mov    DWORD PTR [rbp-0x4],0x0
  40754a:	mov    eax,DWORD PTR [rbp-0x4]
  40754d:	add    rsp,0x20
  407551:	pop    rbp
  407552:	ret    
  407553:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40755d:	nop    DWORD PTR [rax]

0000000000407560 <flatcc_builder_create_vtable@@Base>:
  407560:	push   rbp
  407561:	mov    rbp,rsp
  407564:	sub    rsp,0xc0
  40756b:	mov    QWORD PTR [rbp-0x10],rdi
  40756f:	mov    QWORD PTR [rbp-0x18],rsi
  407573:	mov    WORD PTR [rbp-0x1a],dx
  407577:	mov    QWORD PTR [rbp-0xb0],0x0
  407582:	mov    DWORD PTR [rbp-0xa8],0x0
  40758c:	movzx  eax,WORD PTR [rbp-0x1a]
  407590:	cmp    eax,0x0
  407593:	jle    407601 <flatcc_builder_create_vtable@@Base+0xa1>
  407599:	movzx  eax,WORD PTR [rbp-0x1a]
  40759d:	mov    ecx,eax
  40759f:	add    rcx,QWORD PTR [rbp-0xb0]
  4075a6:	mov    QWORD PTR [rbp-0xb0],rcx
  4075ad:	mov    rcx,QWORD PTR [rbp-0x18]
  4075b1:	lea    rdx,[rbp-0xb0]
  4075b8:	mov    rsi,rdx
  4075bb:	add    rsi,0x10
  4075c2:	movsxd rdi,DWORD PTR [rbp-0xa8]
  4075c9:	shl    rdi,0x4
  4075cd:	add    rsi,rdi
  4075d0:	mov    QWORD PTR [rsi],rcx
  4075d3:	movzx  eax,WORD PTR [rbp-0x1a]
  4075d7:	mov    ecx,eax
  4075d9:	add    rdx,0x10
  4075e0:	movsxd rsi,DWORD PTR [rbp-0xa8]
  4075e7:	shl    rsi,0x4
  4075eb:	add    rdx,rsi
  4075ee:	mov    QWORD PTR [rdx+0x8],rcx
  4075f2:	mov    eax,DWORD PTR [rbp-0xa8]
  4075f8:	add    eax,0x1
  4075fb:	mov    DWORD PTR [rbp-0xa8],eax
  407601:	mov    rax,QWORD PTR [rbp-0x10]
  407605:	cmp    DWORD PTR [rax+0x100],0x0
  40760c:	jne    407651 <flatcc_builder_create_vtable@@Base+0xf1>
  407612:	mov    rax,QWORD PTR [rbp-0x10]
  407616:	cmp    DWORD PTR [rax+0x124],0x0
  40761d:	jne    407651 <flatcc_builder_create_vtable@@Base+0xf1>
  407623:	mov    rdi,QWORD PTR [rbp-0x10]
  407627:	lea    rsi,[rbp-0xb0]
  40762e:	call   4076a0 <flatcc_builder_create_vtable@@Base+0x140>
  407633:	xor    ecx,ecx
  407635:	mov    DWORD PTR [rbp-0x20],eax
  407638:	cmp    ecx,eax
  40763a:	jne    40764c <flatcc_builder_create_vtable@@Base+0xec>
  407640:	mov    DWORD PTR [rbp-0x4],0x0
  407647:	jmp    407689 <flatcc_builder_create_vtable@@Base+0x129>
  40764c:	jmp    407683 <flatcc_builder_create_vtable@@Base+0x123>
  407651:	mov    rdi,QWORD PTR [rbp-0x10]
  407655:	lea    rsi,[rbp-0xb0]
  40765c:	call   405710 <flatcc_builder_embed_buffer@@Base+0x440>
  407661:	xor    ecx,ecx
  407663:	mov    DWORD PTR [rbp-0x20],eax
  407666:	cmp    ecx,eax
  407668:	jne    40767a <flatcc_builder_create_vtable@@Base+0x11a>
  40766e:	mov    DWORD PTR [rbp-0x4],0x0
  407675:	jmp    407689 <flatcc_builder_create_vtable@@Base+0x129>
  40767a:	mov    eax,DWORD PTR [rbp-0x20]
  40767d:	add    eax,0x1
  407680:	mov    DWORD PTR [rbp-0x20],eax
  407683:	mov    eax,DWORD PTR [rbp-0x20]
  407686:	mov    DWORD PTR [rbp-0x4],eax
  407689:	mov    eax,DWORD PTR [rbp-0x4]
  40768c:	add    rsp,0xc0
  407693:	pop    rbp
  407694:	ret    
  407695:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40769f:	nop
  4076a0:	push   rbp
  4076a1:	mov    rbp,rsp
  4076a4:	sub    rsp,0x20
  4076a8:	mov    QWORD PTR [rbp-0x8],rdi
  4076ac:	mov    QWORD PTR [rbp-0x10],rsi
  4076b0:	mov    rax,QWORD PTR [rbp-0x8]
  4076b4:	mov    ecx,DWORD PTR [rax+0xf4]
  4076ba:	mov    DWORD PTR [rbp-0x14],ecx
  4076bd:	mov    ecx,DWORD PTR [rbp-0x14]
  4076c0:	mov    rax,QWORD PTR [rbp-0x10]
  4076c4:	mov    rax,QWORD PTR [rax]
  4076c7:	add    ecx,eax
  4076c9:	mov    rdx,QWORD PTR [rbp-0x8]
  4076cd:	mov    DWORD PTR [rdx+0xf4],ecx
  4076d3:	mov    rdx,QWORD PTR [rbp-0x8]
  4076d7:	mov    eax,DWORD PTR [rdx+0xf4]
  4076dd:	cmp    eax,DWORD PTR [rbp-0x14]
  4076e0:	jge    407705 <flatcc_builder_create_vtable@@Base+0x1a5>
  4076e6:	lea    rdi,[rip+0x6465]        # 40db52 <flatcc_builder_padding_base@@Base+0x13d2>
  4076ed:	lea    rsi,[rip+0x529e]        # 40c992 <flatcc_builder_padding_base@@Base+0x212>
  4076f4:	mov    edx,0x2a1
  4076f9:	lea    rcx,[rip+0x63cd]        # 40dacd <flatcc_builder_padding_base@@Base+0x134d>
  407700:	call   403090 <__assert_fail@plt>
  407705:	mov    rax,QWORD PTR [rbp-0x8]
  407709:	mov    rax,QWORD PTR [rax+0x48]
  40770d:	mov    rcx,QWORD PTR [rbp-0x8]
  407711:	mov    rdi,QWORD PTR [rcx+0x38]
  407715:	mov    rcx,QWORD PTR [rbp-0x10]
  407719:	add    rcx,0x10
  407720:	mov    rdx,QWORD PTR [rbp-0x10]
  407724:	mov    edx,DWORD PTR [rdx+0x8]
  407727:	mov    esi,DWORD PTR [rbp-0x14]
  40772a:	mov    r8,QWORD PTR [rbp-0x10]
  40772e:	mov    r8,QWORD PTR [r8]
  407731:	mov    DWORD PTR [rbp-0x18],esi
  407734:	mov    rsi,rcx
  407737:	mov    ecx,DWORD PTR [rbp-0x18]
  40773a:	call   rax
  40773c:	cmp    eax,0x0
  40773f:	je     407764 <flatcc_builder_create_vtable@@Base+0x204>
  407745:	lea    rdi,[rip+0x6406]        # 40db52 <flatcc_builder_padding_base@@Base+0x13d2>
  40774c:	lea    rsi,[rip+0x523f]        # 40c992 <flatcc_builder_padding_base@@Base+0x212>
  407753:	mov    edx,0x2a5
  407758:	lea    rcx,[rip+0x636e]        # 40dacd <flatcc_builder_padding_base@@Base+0x134d>
  40775f:	call   403090 <__assert_fail@plt>
  407764:	mov    eax,DWORD PTR [rbp-0x14]
  407767:	add    eax,0x1
  40776a:	add    rsp,0x20
  40776e:	pop    rbp
  40776f:	ret    

0000000000407770 <flatcc_builder_create_cached_vtable@@Base>:
  407770:	push   rbp
  407771:	mov    rbp,rsp
  407774:	sub    rsp,0x70
  407778:	mov    QWORD PTR [rbp-0x10],rdi
  40777c:	mov    QWORD PTR [rbp-0x18],rsi
  407780:	mov    WORD PTR [rbp-0x1a],dx
  407784:	mov    DWORD PTR [rbp-0x20],ecx
  407787:	mov    rdi,QWORD PTR [rbp-0x10]
  40778b:	mov    esi,DWORD PTR [rbp-0x20]
  40778e:	call   407aa0 <flatcc_builder_create_cached_vtable@@Base+0x330>
  407793:	mov    QWORD PTR [rbp-0x40],rax
  407797:	cmp    rax,0x0
  40779b:	jne    4077ad <flatcc_builder_create_cached_vtable@@Base+0x3d>
  4077a1:	mov    DWORD PTR [rbp-0x4],0x0
  4077a8:	jmp    407a88 <flatcc_builder_create_cached_vtable@@Base+0x318>
  4077ad:	mov    rax,QWORD PTR [rbp-0x40]
  4077b1:	mov    QWORD PTR [rbp-0x38],rax
  4077b5:	mov    rax,QWORD PTR [rbp-0x38]
  4077b9:	mov    ecx,DWORD PTR [rax]
  4077bb:	mov    DWORD PTR [rbp-0x44],ecx
  4077be:	mov    QWORD PTR [rbp-0x30],0x0
  4077c6:	cmp    DWORD PTR [rbp-0x44],0x0
  4077ca:	je     4078dd <flatcc_builder_create_cached_vtable@@Base+0x16d>
  4077d0:	mov    rax,QWORD PTR [rbp-0x10]
  4077d4:	mov    rax,QWORD PTR [rax+0xb8]
  4077db:	mov    ecx,DWORD PTR [rbp-0x44]
  4077de:	mov    edx,ecx
  4077e0:	add    rax,rdx
  4077e3:	mov    QWORD PTR [rbp-0x28],rax
  4077e7:	mov    rax,QWORD PTR [rbp-0x10]
  4077eb:	mov    rax,QWORD PTR [rax+0x78]
  4077ef:	mov    rdx,QWORD PTR [rbp-0x28]
  4077f3:	mov    ecx,DWORD PTR [rdx+0x8]
  4077f6:	mov    edx,ecx
  4077f8:	add    rax,rdx
  4077fb:	mov    QWORD PTR [rbp-0x50],rax
  4077ff:	mov    rax,QWORD PTR [rbp-0x50]
  407803:	movzx  ecx,WORD PTR [rax]
  407806:	movzx  esi,WORD PTR [rbp-0x1a]
  40780a:	cmp    ecx,esi
  40780c:	jne    407845 <flatcc_builder_create_cached_vtable@@Base+0xd5>
  407812:	xor    eax,eax
  407814:	mov    rcx,QWORD PTR [rbp-0x18]
  407818:	mov    rdx,QWORD PTR [rbp-0x50]
  40781c:	movzx  esi,WORD PTR [rbp-0x1a]
  407820:	mov    edi,esi
  407822:	mov    QWORD PTR [rbp-0x58],rdi
  407826:	mov    rdi,rcx
  407829:	mov    rsi,rdx
  40782c:	mov    rdx,QWORD PTR [rbp-0x58]
  407830:	mov    DWORD PTR [rbp-0x5c],eax
  407833:	call   4030c0 <memcmp@plt>
  407838:	mov    r8d,DWORD PTR [rbp-0x5c]
  40783c:	cmp    r8d,eax
  40783f:	je     407862 <flatcc_builder_create_cached_vtable@@Base+0xf2>
  407845:	mov    rax,QWORD PTR [rbp-0x28]
  407849:	add    rax,0xc
  40784f:	mov    QWORD PTR [rbp-0x38],rax
  407853:	mov    rax,QWORD PTR [rbp-0x28]
  407857:	mov    ecx,DWORD PTR [rax+0xc]
  40785a:	mov    DWORD PTR [rbp-0x44],ecx
  40785d:	jmp    4077c6 <flatcc_builder_create_cached_vtable@@Base+0x56>
  407862:	mov    rax,QWORD PTR [rbp-0x28]
  407866:	mov    ecx,DWORD PTR [rax+0x4]
  407869:	mov    rax,QWORD PTR [rbp-0x10]
  40786d:	cmp    ecx,DWORD PTR [rax+0x100]
  407873:	je     40789e <flatcc_builder_create_cached_vtable@@Base+0x12e>
  407879:	mov    rax,QWORD PTR [rbp-0x28]
  40787d:	mov    QWORD PTR [rbp-0x30],rax
  407881:	mov    rax,QWORD PTR [rbp-0x28]
  407885:	add    rax,0xc
  40788b:	mov    QWORD PTR [rbp-0x38],rax
  40788f:	mov    rax,QWORD PTR [rbp-0x28]
  407893:	mov    ecx,DWORD PTR [rax+0xc]
  407896:	mov    DWORD PTR [rbp-0x44],ecx
  407899:	jmp    4077c6 <flatcc_builder_create_cached_vtable@@Base+0x56>
  40789e:	mov    rax,QWORD PTR [rbp-0x38]
  4078a2:	cmp    rax,QWORD PTR [rbp-0x40]
  4078a6:	je     4078cf <flatcc_builder_create_cached_vtable@@Base+0x15f>
  4078ac:	mov    rax,QWORD PTR [rbp-0x28]
  4078b0:	mov    ecx,DWORD PTR [rax+0xc]
  4078b3:	mov    rax,QWORD PTR [rbp-0x38]
  4078b7:	mov    DWORD PTR [rax],ecx
  4078b9:	mov    rax,QWORD PTR [rbp-0x40]
  4078bd:	mov    ecx,DWORD PTR [rax]
  4078bf:	mov    rax,QWORD PTR [rbp-0x28]
  4078c3:	mov    DWORD PTR [rax+0xc],ecx
  4078c6:	mov    ecx,DWORD PTR [rbp-0x44]
  4078c9:	mov    rax,QWORD PTR [rbp-0x40]
  4078cd:	mov    DWORD PTR [rax],ecx
  4078cf:	mov    rax,QWORD PTR [rbp-0x28]
  4078d3:	mov    ecx,DWORD PTR [rax]
  4078d5:	mov    DWORD PTR [rbp-0x4],ecx
  4078d8:	jmp    407a88 <flatcc_builder_create_cached_vtable@@Base+0x318>
  4078dd:	xor    r8d,r8d
  4078e0:	mov    rdi,QWORD PTR [rbp-0x10]
  4078e4:	mov    rax,QWORD PTR [rbp-0x10]
  4078e8:	mov    ecx,DWORD PTR [rax+0xe4]
  4078ee:	mov    edx,ecx
  4078f0:	mov    esi,0x6
  4078f5:	mov    ecx,0x10
  4078fa:	call   404fc0 <flatcc_builder_enter_user_frame_ptr@@Base+0xf0>
  4078ff:	mov    QWORD PTR [rbp-0x28],rax
  407903:	cmp    rax,0x0
  407907:	jne    407919 <flatcc_builder_create_cached_vtable@@Base+0x1a9>
  40790d:	mov    DWORD PTR [rbp-0x4],0x0
  407914:	jmp    407a88 <flatcc_builder_create_cached_vtable@@Base+0x318>
  407919:	mov    rax,QWORD PTR [rbp-0x10]
  40791d:	mov    ecx,DWORD PTR [rax+0xe4]
  407923:	mov    DWORD PTR [rbp-0x44],ecx
  407926:	mov    rax,QWORD PTR [rbp-0x10]
  40792a:	mov    ecx,DWORD PTR [rax+0xe4]
  407930:	mov    edx,ecx
  407932:	add    rdx,0x10
  407939:	mov    DWORD PTR [rax+0xe4],edx
  40793f:	mov    rax,QWORD PTR [rbp-0x10]
  407943:	mov    ecx,DWORD PTR [rax+0x100]
  407949:	mov    rax,QWORD PTR [rbp-0x28]
  40794d:	mov    DWORD PTR [rax+0x4],ecx
  407950:	mov    rax,QWORD PTR [rbp-0x40]
  407954:	mov    ecx,DWORD PTR [rax]
  407956:	mov    rax,QWORD PTR [rbp-0x28]
  40795a:	mov    DWORD PTR [rax+0xc],ecx
  40795d:	mov    ecx,DWORD PTR [rbp-0x44]
  407960:	mov    rax,QWORD PTR [rbp-0x40]
  407964:	mov    DWORD PTR [rax],ecx
  407966:	mov    rdi,QWORD PTR [rbp-0x10]
  40796a:	mov    rsi,QWORD PTR [rbp-0x18]
  40796e:	movzx  edx,WORD PTR [rbp-0x1a]
  407972:	call   407560 <flatcc_builder_create_vtable@@Base>
  407977:	xor    ecx,ecx
  407979:	mov    rsi,QWORD PTR [rbp-0x28]
  40797d:	mov    DWORD PTR [rsi],eax
  40797f:	cmp    ecx,eax
  407981:	jne    407993 <flatcc_builder_create_cached_vtable@@Base+0x223>
  407987:	mov    DWORD PTR [rbp-0x4],0x0
  40798e:	jmp    407a88 <flatcc_builder_create_cached_vtable@@Base+0x318>
  407993:	cmp    QWORD PTR [rbp-0x30],0x0
  407998:	je     4079b1 <flatcc_builder_create_cached_vtable@@Base+0x241>
  40799e:	mov    rax,QWORD PTR [rbp-0x30]
  4079a2:	mov    ecx,DWORD PTR [rax+0x8]
  4079a5:	mov    rax,QWORD PTR [rbp-0x28]
  4079a9:	mov    DWORD PTR [rax+0x8],ecx
  4079ac:	jmp    407a7f <flatcc_builder_create_cached_vtable@@Base+0x30f>
  4079b1:	mov    rax,QWORD PTR [rbp-0x10]
  4079b5:	cmp    QWORD PTR [rax+0x118],0x0
  4079bd:	je     4079f9 <flatcc_builder_create_cached_vtable@@Base+0x289>
  4079c3:	mov    rax,QWORD PTR [rbp-0x10]
  4079c7:	mov    rax,QWORD PTR [rax+0x118]
  4079ce:	mov    rcx,QWORD PTR [rbp-0x10]
  4079d2:	mov    edx,DWORD PTR [rcx+0xe0]
  4079d8:	movzx  esi,WORD PTR [rbp-0x1a]
  4079dc:	add    edx,esi
  4079de:	mov    edx,edx
  4079e0:	mov    ecx,edx
  4079e2:	cmp    rax,rcx
  4079e5:	jae    4079f9 <flatcc_builder_create_cached_vtable@@Base+0x289>
  4079eb:	mov    rdi,QWORD PTR [rbp-0x10]
  4079ef:	call   404a40 <flatcc_builder_flush_vtable_cache@@Base>
  4079f4:	jmp    407a7a <flatcc_builder_create_cached_vtable@@Base+0x30a>
  4079f9:	xor    r8d,r8d
  4079fc:	mov    rdi,QWORD PTR [rbp-0x10]
  407a00:	mov    rax,QWORD PTR [rbp-0x10]
  407a04:	mov    ecx,DWORD PTR [rax+0xe0]
  407a0a:	mov    edx,ecx
  407a0c:	movzx  ecx,WORD PTR [rbp-0x1a]
  407a10:	mov    esi,0x2
  407a15:	call   404fc0 <flatcc_builder_enter_user_frame_ptr@@Base+0xf0>
  407a1a:	mov    QWORD PTR [rbp-0x50],rax
  407a1e:	cmp    rax,0x0
  407a22:	jne    407a34 <flatcc_builder_create_cached_vtable@@Base+0x2c4>
  407a28:	mov    DWORD PTR [rbp-0x4],0xffffffff
  407a2f:	jmp    407a88 <flatcc_builder_create_cached_vtable@@Base+0x318>
  407a34:	mov    rax,QWORD PTR [rbp-0x10]
  407a38:	mov    ecx,DWORD PTR [rax+0xe0]
  407a3e:	mov    rax,QWORD PTR [rbp-0x28]
  407a42:	mov    DWORD PTR [rax+0x8],ecx
  407a45:	movzx  ecx,WORD PTR [rbp-0x1a]
  407a49:	mov    rax,QWORD PTR [rbp-0x10]
  407a4d:	add    ecx,DWORD PTR [rax+0xe0]
  407a53:	mov    DWORD PTR [rax+0xe0],ecx
  407a59:	mov    rax,QWORD PTR [rbp-0x50]
  407a5d:	mov    rdx,QWORD PTR [rbp-0x18]
  407a61:	movzx  ecx,WORD PTR [rbp-0x1a]
  407a65:	mov    esi,ecx
  407a67:	mov    rdi,rax
  407a6a:	mov    QWORD PTR [rbp-0x68],rsi
  407a6e:	mov    rsi,rdx
  407a71:	mov    rdx,QWORD PTR [rbp-0x68]
  407a75:	call   4030e0 <memcpy@plt>
  407a7a:	jmp    407a7f <flatcc_builder_create_cached_vtable@@Base+0x30f>
  407a7f:	mov    rax,QWORD PTR [rbp-0x28]
  407a83:	mov    ecx,DWORD PTR [rax]
  407a85:	mov    DWORD PTR [rbp-0x4],ecx
  407a88:	mov    eax,DWORD PTR [rbp-0x4]
  407a8b:	add    rsp,0x70
  407a8f:	pop    rbp
  407a90:	ret    
  407a91:	nop    WORD PTR cs:[rax+rax*1+0x0]
  407a9b:	nop    DWORD PTR [rax+rax*1+0x0]
  407aa0:	push   rbp
  407aa1:	mov    rbp,rsp
  407aa4:	sub    rsp,0x30
  407aa8:	mov    QWORD PTR [rbp-0x10],rdi
  407aac:	mov    DWORD PTR [rbp-0x14],esi
  407aaf:	mov    rax,QWORD PTR [rbp-0x10]
  407ab3:	cmp    QWORD PTR [rax+0xd8],0x0
  407abb:	jne    407ae5 <flatcc_builder_create_cached_vtable@@Base+0x375>
  407ac1:	mov    rdi,QWORD PTR [rbp-0x10]
  407ac5:	call   40a4c0 <flatcc_builder_get_emit_context@@Base+0xe0>
  407aca:	cmp    eax,0x0
  407acd:	je     407ae0 <flatcc_builder_create_cached_vtable@@Base+0x370>
  407ad3:	mov    QWORD PTR [rbp-0x8],0x0
  407adb:	jmp    407b24 <flatcc_builder_create_cached_vtable@@Base+0x3b4>
  407ae0:	jmp    407ae5 <flatcc_builder_create_cached_vtable@@Base+0x375>
  407ae5:	mov    rax,QWORD PTR [rbp-0x10]
  407ae9:	mov    rax,QWORD PTR [rax+0xa8]
  407af0:	mov    QWORD PTR [rbp-0x20],rax
  407af4:	mov    rax,QWORD PTR [rbp-0x20]
  407af8:	mov    ecx,DWORD PTR [rbp-0x14]
  407afb:	mov    rdx,QWORD PTR [rbp-0x10]
  407aff:	mov    esi,0x20
  407b04:	sub    rsi,QWORD PTR [rdx+0xd8]
  407b0b:	mov    DWORD PTR [rbp-0x24],ecx
  407b0e:	mov    ecx,esi
  407b10:	mov    esi,DWORD PTR [rbp-0x24]
  407b13:	shr    esi,cl
  407b15:	mov    esi,esi
  407b17:	mov    edx,esi
  407b19:	shl    rdx,0x2
  407b1d:	add    rax,rdx
  407b20:	mov    QWORD PTR [rbp-0x8],rax
  407b24:	mov    rax,QWORD PTR [rbp-0x8]
  407b28:	add    rsp,0x30
  407b2c:	pop    rbp
  407b2d:	ret    
  407b2e:	xchg   ax,ax

0000000000407b30 <flatcc_builder_create_table@@Base>:
  407b30:	push   rbp
  407b31:	mov    rbp,rsp
  407b34:	sub    rsp,0xf0
  407b3b:	mov    eax,DWORD PTR [rbp+0x10]
  407b3e:	mov    QWORD PTR [rbp-0x10],rdi
  407b42:	mov    QWORD PTR [rbp-0x18],rsi
  407b46:	mov    QWORD PTR [rbp-0x20],rdx
  407b4a:	mov    WORD PTR [rbp-0x22],cx
  407b4e:	mov    QWORD PTR [rbp-0x30],r8
  407b52:	mov    DWORD PTR [rbp-0x34],r9d
  407b56:	cmp    DWORD PTR [rbp-0x34],0x0
  407b5a:	jl     407b65 <flatcc_builder_create_table@@Base+0x35>
  407b60:	jmp    407b84 <flatcc_builder_create_table@@Base+0x54>
  407b65:	lea    rdi,[rip+0x559c]        # 40d108 <flatcc_builder_padding_base@@Base+0x988>
  407b6c:	lea    rsi,[rip+0x4e1f]        # 40c992 <flatcc_builder_padding_base@@Base+0x212>
  407b73:	mov    edx,0x4d5
  407b78:	lea    rcx,[rip+0x559b]        # 40d11a <flatcc_builder_padding_base@@Base+0x99a>
  407b7f:	call   403090 <__assert_fail@plt>
  407b84:	mov    eax,DWORD PTR [rbp+0x10]
  407b87:	and    eax,0x1
  407b8a:	cmp    eax,0x0
  407b8d:	je     407b98 <flatcc_builder_create_table@@Base+0x68>
  407b93:	jmp    407bb7 <flatcc_builder_create_table@@Base+0x87>
  407b98:	lea    rdi,[rip+0x5617]        # 40d1b6 <flatcc_builder_padding_base@@Base+0xa36>
  407b9f:	lea    rsi,[rip+0x4dec]        # 40c992 <flatcc_builder_padding_base@@Base+0x212>
  407ba6:	mov    edx,0x4db
  407bab:	lea    rcx,[rip+0x5568]        # 40d11a <flatcc_builder_padding_base@@Base+0x99a>
  407bb2:	call   403090 <__assert_fail@plt>
  407bb7:	lea    rdi,[rbp-0x22]
  407bbb:	mov    esi,0x4
  407bc0:	call   4070a0 <flatcc_builder_start_vector@@Base+0xb0>
  407bc5:	mov    rdi,QWORD PTR [rbp-0x10]
  407bc9:	movzx  esi,WORD PTR [rbp-0x22]
  407bcd:	call   405c30 <flatcc_builder_create_buffer@@Base+0x420>
  407bd2:	mov    rdi,QWORD PTR [rbp-0x10]
  407bd6:	mov    rax,QWORD PTR [rbp-0x20]
  407bda:	mov    esi,eax
  407bdc:	movzx  edx,WORD PTR [rbp-0x22]
  407be0:	call   4056d0 <flatcc_builder_embed_buffer@@Base+0x400>
  407be5:	mov    DWORD PTR [rbp-0x3c],eax
  407be8:	mov    rcx,QWORD PTR [rbp-0x10]
  407bec:	mov    eax,DWORD PTR [rcx+0xf0]
  407bf2:	mov    edx,DWORD PTR [rbp-0x3c]
  407bf5:	mov    ecx,edx
  407bf7:	add    rcx,QWORD PTR [rbp-0x20]
  407bfb:	add    rcx,0x4
  407c02:	sub    eax,ecx
  407c04:	mov    DWORD PTR [rbp-0x4c],eax
  407c07:	mov    eax,DWORD PTR [rbp+0x10]
  407c0a:	sub    eax,0x1
  407c0d:	mov    DWORD PTR [rbp-0x48],eax
  407c10:	mov    eax,DWORD PTR [rbp-0x4c]
  407c13:	sub    eax,DWORD PTR [rbp-0x48]
  407c16:	mov    DWORD PTR [rbp-0x40],eax
  407c19:	mov    eax,DWORD PTR [rbp-0x4c]
  407c1c:	sub    eax,DWORD PTR [rbp-0x40]
  407c1f:	cmp    eax,DWORD PTR [rbp-0x48]
  407c22:	je     407c34 <flatcc_builder_create_table@@Base+0x104>
  407c28:	mov    DWORD PTR [rbp-0x4],0xffffffff
  407c2f:	jmp    407e1b <flatcc_builder_create_table@@Base+0x2eb>
  407c34:	mov    edi,DWORD PTR [rbp-0x40]
  407c37:	call   405700 <flatcc_builder_embed_buffer@@Base+0x430>
  407c3c:	mov    DWORD PTR [rbp-0x44],eax
  407c3f:	mov    DWORD PTR [rbp-0x38],0x0
  407c46:	mov    eax,DWORD PTR [rbp-0x38]
  407c49:	cmp    eax,DWORD PTR [rbp-0x34]
  407c4c:	jge    407cab <flatcc_builder_create_table@@Base+0x17b>
  407c52:	mov    rax,QWORD PTR [rbp-0x18]
  407c56:	mov    rcx,QWORD PTR [rbp-0x30]
  407c5a:	movsxd rdx,DWORD PTR [rbp-0x38]
  407c5e:	movzx  esi,WORD PTR [rcx+rdx*2]
  407c62:	mov    ecx,esi
  407c64:	add    rax,rcx
  407c67:	mov    QWORD PTR [rbp-0x58],rax
  407c6b:	mov    rax,QWORD PTR [rbp-0x58]
  407c6f:	mov    esi,DWORD PTR [rax]
  407c71:	sub    esi,DWORD PTR [rbp-0x4c]
  407c74:	mov    rax,QWORD PTR [rbp-0x30]
  407c78:	movsxd rcx,DWORD PTR [rbp-0x38]
  407c7c:	movzx  edi,WORD PTR [rax+rcx*2]
  407c80:	sub    esi,edi
  407c82:	mov    esi,esi
  407c84:	mov    eax,esi
  407c86:	sub    rax,0x4
  407c8c:	mov    DWORD PTR [rbp-0x50],eax
  407c8f:	mov    edi,DWORD PTR [rbp-0x50]
  407c92:	call   405700 <flatcc_builder_embed_buffer@@Base+0x430>
  407c97:	mov    rcx,QWORD PTR [rbp-0x58]
  407c9b:	mov    DWORD PTR [rcx],eax
  407c9d:	mov    eax,DWORD PTR [rbp-0x38]
  407ca0:	add    eax,0x1
  407ca3:	mov    DWORD PTR [rbp-0x38],eax
  407ca6:	jmp    407c46 <flatcc_builder_create_table@@Base+0x116>
  407cab:	mov    QWORD PTR [rbp-0xe8],0x0
  407cb6:	mov    DWORD PTR [rbp-0xe0],0x0
  407cc0:	mov    rax,QWORD PTR [rbp-0xe8]
  407cc7:	add    rax,0x4
  407ccd:	mov    QWORD PTR [rbp-0xe8],rax
  407cd4:	lea    rax,[rbp-0x44]
  407cd8:	lea    rcx,[rbp-0xe8]
  407cdf:	mov    rdx,rcx
  407ce2:	add    rdx,0x10
  407ce9:	movsxd rsi,DWORD PTR [rbp-0xe0]
  407cf0:	shl    rsi,0x4
  407cf4:	add    rdx,rsi
  407cf7:	mov    QWORD PTR [rdx],rax
  407cfa:	add    rcx,0x10
  407d01:	movsxd rax,DWORD PTR [rbp-0xe0]
  407d08:	shl    rax,0x4
  407d0c:	add    rcx,rax
  407d0f:	mov    QWORD PTR [rcx+0x8],0x4
  407d17:	mov    edi,DWORD PTR [rbp-0xe0]
  407d1d:	add    edi,0x1
  407d20:	mov    DWORD PTR [rbp-0xe0],edi
  407d26:	cmp    QWORD PTR [rbp-0x20],0x0
  407d2b:	jbe    407d95 <flatcc_builder_create_table@@Base+0x265>
  407d31:	mov    rax,QWORD PTR [rbp-0x20]
  407d35:	add    rax,QWORD PTR [rbp-0xe8]
  407d3c:	mov    QWORD PTR [rbp-0xe8],rax
  407d43:	mov    rax,QWORD PTR [rbp-0x18]
  407d47:	lea    rcx,[rbp-0xe8]
  407d4e:	mov    rdx,rcx
  407d51:	add    rdx,0x10
  407d58:	movsxd rsi,DWORD PTR [rbp-0xe0]
  407d5f:	shl    rsi,0x4
  407d63:	add    rdx,rsi
  407d66:	mov    QWORD PTR [rdx],rax
  407d69:	mov    rax,QWORD PTR [rbp-0x20]
  407d6d:	add    rcx,0x10
  407d74:	movsxd rdx,DWORD PTR [rbp-0xe0]
  407d7b:	shl    rdx,0x4
  407d7f:	add    rcx,rdx
  407d82:	mov    QWORD PTR [rcx+0x8],rax
  407d86:	mov    edi,DWORD PTR [rbp-0xe0]
  407d8c:	add    edi,0x1
  407d8f:	mov    DWORD PTR [rbp-0xe0],edi
  407d95:	cmp    DWORD PTR [rbp-0x3c],0x0
  407d99:	jbe    407e08 <flatcc_builder_create_table@@Base+0x2d8>
  407d9f:	lea    rax,[rip+0x49da]        # 40c780 <flatcc_builder_padding_base@@Base>
  407da6:	mov    ecx,DWORD PTR [rbp-0x3c]
  407da9:	mov    edx,ecx
  407dab:	add    rdx,QWORD PTR [rbp-0xe8]
  407db2:	mov    QWORD PTR [rbp-0xe8],rdx
  407db9:	lea    rdx,[rbp-0xe8]
  407dc0:	mov    rsi,rdx
  407dc3:	add    rsi,0x10
  407dca:	movsxd rdi,DWORD PTR [rbp-0xe0]
  407dd1:	shl    rdi,0x4
  407dd5:	add    rsi,rdi
  407dd8:	mov    QWORD PTR [rsi],rax
  407ddb:	mov    ecx,DWORD PTR [rbp-0x3c]
  407dde:	mov    eax,ecx
  407de0:	add    rdx,0x10
  407de7:	movsxd rsi,DWORD PTR [rbp-0xe0]
  407dee:	shl    rsi,0x4
  407df2:	add    rdx,rsi
  407df5:	mov    QWORD PTR [rdx+0x8],rax
  407df9:	mov    ecx,DWORD PTR [rbp-0xe0]
  407dff:	add    ecx,0x1
  407e02:	mov    DWORD PTR [rbp-0xe0],ecx
  407e08:	mov    rdi,QWORD PTR [rbp-0x10]
  407e0c:	lea    rsi,[rbp-0xe8]
  407e13:	call   405710 <flatcc_builder_embed_buffer@@Base+0x440>
  407e18:	mov    DWORD PTR [rbp-0x4],eax
  407e1b:	mov    eax,DWORD PTR [rbp-0x4]
  407e1e:	add    rsp,0xf0
  407e25:	pop    rbp
  407e26:	ret    
  407e27:	nop    WORD PTR [rax+rax*1+0x0]

0000000000407e30 <flatcc_builder_check_required_field@@Base>:
  407e30:	push   rbp
  407e31:	mov    rbp,rsp
  407e34:	sub    rsp,0x10
  407e38:	mov    QWORD PTR [rbp-0x8],rdi
  407e3c:	mov    WORD PTR [rbp-0xa],si
  407e40:	mov    rax,QWORD PTR [rbp-0x8]
  407e44:	mov    rax,QWORD PTR [rax+0x30]
  407e48:	movzx  ecx,WORD PTR [rax+0xe]
  407e4c:	cmp    ecx,0x3
  407e4f:	jne    407e5a <flatcc_builder_check_required_field@@Base+0x2a>
  407e55:	jmp    407e79 <flatcc_builder_check_required_field@@Base+0x49>
  407e5a:	lea    rdi,[rip+0x5360]        # 40d1c1 <flatcc_builder_padding_base@@Base+0xa41>
  407e61:	lea    rsi,[rip+0x4b2a]        # 40c992 <flatcc_builder_padding_base@@Base+0x212>
  407e68:	mov    edx,0x4f8
  407e6d:	lea    rcx,[rip+0x5378]        # 40d1ec <flatcc_builder_padding_base@@Base+0xa6c>
  407e74:	call   403090 <__assert_fail@plt>
  407e79:	xor    eax,eax
  407e7b:	movzx  ecx,WORD PTR [rbp-0xa]
  407e7f:	mov    rdx,QWORD PTR [rbp-0x8]
  407e83:	movzx  esi,WORD PTR [rdx+0x10]
  407e87:	cmp    ecx,esi
  407e89:	mov    BYTE PTR [rbp-0xb],al
  407e8c:	jge    407eaf <flatcc_builder_check_required_field@@Base+0x7f>
  407e92:	mov    rax,QWORD PTR [rbp-0x8]
  407e96:	mov    rax,QWORD PTR [rax+0x8]
  407e9a:	movzx  ecx,WORD PTR [rbp-0xa]
  407e9e:	mov    edx,ecx
  407ea0:	movzx  ecx,WORD PTR [rax+rdx*2]
  407ea4:	cmp    ecx,0x0
  407ea7:	setne  sil
  407eab:	mov    BYTE PTR [rbp-0xb],sil
  407eaf:	mov    al,BYTE PTR [rbp-0xb]
  407eb2:	and    al,0x1
  407eb4:	movzx  eax,al
  407eb7:	add    rsp,0x10
  407ebb:	pop    rbp
  407ebc:	ret    
  407ebd:	nop    DWORD PTR [rax]

0000000000407ec0 <flatcc_builder_check_union_field@@Base>:
  407ec0:	push   rbp
  407ec1:	mov    rbp,rsp
  407ec4:	sub    rsp,0x20
  407ec8:	mov    QWORD PTR [rbp-0x10],rdi
  407ecc:	mov    WORD PTR [rbp-0x12],si
  407ed0:	mov    rax,QWORD PTR [rbp-0x10]
  407ed4:	mov    rax,QWORD PTR [rax+0x30]
  407ed8:	movzx  ecx,WORD PTR [rax+0xe]
  407edc:	cmp    ecx,0x3
  407edf:	jne    407eea <flatcc_builder_check_union_field@@Base+0x2a>
  407ee5:	jmp    407f09 <flatcc_builder_check_union_field@@Base+0x49>
  407eea:	lea    rdi,[rip+0x52d0]        # 40d1c1 <flatcc_builder_padding_base@@Base+0xa41>
  407ef1:	lea    rsi,[rip+0x4a9a]        # 40c992 <flatcc_builder_padding_base@@Base+0x212>
  407ef8:	mov    edx,0x4ff
  407efd:	lea    rcx,[rip+0x533b]        # 40d23f <flatcc_builder_padding_base@@Base+0xabf>
  407f04:	call   403090 <__assert_fail@plt>
  407f09:	movzx  eax,WORD PTR [rbp-0x12]
  407f0d:	cmp    eax,0x0
  407f10:	je     407f2a <flatcc_builder_check_union_field@@Base+0x6a>
  407f16:	movzx  eax,WORD PTR [rbp-0x12]
  407f1a:	mov    rcx,QWORD PTR [rbp-0x10]
  407f1e:	movzx  edx,WORD PTR [rcx+0x10]
  407f22:	cmp    eax,edx
  407f24:	jl     407f36 <flatcc_builder_check_union_field@@Base+0x76>
  407f2a:	mov    DWORD PTR [rbp-0x4],0x0
  407f31:	jmp    407ff6 <flatcc_builder_check_union_field@@Base+0x136>
  407f36:	mov    rax,QWORD PTR [rbp-0x10]
  407f3a:	mov    rax,QWORD PTR [rax+0x8]
  407f3e:	movzx  ecx,WORD PTR [rbp-0x12]
  407f42:	sub    ecx,0x1
  407f45:	movsxd rdx,ecx
  407f48:	movzx  ecx,WORD PTR [rax+rdx*2]
  407f4c:	cmp    ecx,0x0
  407f4f:	jne    407f7e <flatcc_builder_check_union_field@@Base+0xbe>
  407f55:	mov    rax,QWORD PTR [rbp-0x10]
  407f59:	mov    rax,QWORD PTR [rax+0x8]
  407f5d:	movzx  ecx,WORD PTR [rbp-0x12]
  407f61:	mov    edx,ecx
  407f63:	movzx  ecx,WORD PTR [rax+rdx*2]
  407f67:	cmp    ecx,0x0
  407f6a:	sete   sil
  407f6e:	and    sil,0x1
  407f72:	movzx  ecx,sil
  407f76:	mov    DWORD PTR [rbp-0x4],ecx
  407f79:	jmp    407ff6 <flatcc_builder_check_union_field@@Base+0x136>
  407f7e:	mov    rax,QWORD PTR [rbp-0x10]
  407f82:	mov    rax,QWORD PTR [rax+0x18]
  407f86:	mov    rcx,QWORD PTR [rbp-0x10]
  407f8a:	mov    rcx,QWORD PTR [rcx+0x8]
  407f8e:	movzx  edx,WORD PTR [rbp-0x12]
  407f92:	sub    edx,0x1
  407f95:	movsxd rsi,edx
  407f98:	movzx  edx,WORD PTR [rcx+rsi*2]
  407f9c:	movsxd rcx,edx
  407f9f:	cmp    BYTE PTR [rax+rcx*1],0x0
  407fa3:	je     407fd2 <flatcc_builder_check_union_field@@Base+0x112>
  407fa9:	mov    rax,QWORD PTR [rbp-0x10]
  407fad:	mov    rax,QWORD PTR [rax+0x8]
  407fb1:	movzx  ecx,WORD PTR [rbp-0x12]
  407fb5:	mov    edx,ecx
  407fb7:	movzx  ecx,WORD PTR [rax+rdx*2]
  407fbb:	cmp    ecx,0x0
  407fbe:	setne  sil
  407fc2:	and    sil,0x1
  407fc6:	movzx  ecx,sil
  407fca:	mov    DWORD PTR [rbp-0x4],ecx
  407fcd:	jmp    407ff6 <flatcc_builder_check_union_field@@Base+0x136>
  407fd2:	mov    rax,QWORD PTR [rbp-0x10]
  407fd6:	mov    rax,QWORD PTR [rax+0x8]
  407fda:	movzx  ecx,WORD PTR [rbp-0x12]
  407fde:	mov    edx,ecx
  407fe0:	movzx  ecx,WORD PTR [rax+rdx*2]
  407fe4:	cmp    ecx,0x0
  407fe7:	sete   sil
  407feb:	and    sil,0x1
  407fef:	movzx  ecx,sil
  407ff3:	mov    DWORD PTR [rbp-0x4],ecx
  407ff6:	mov    eax,DWORD PTR [rbp-0x4]
  407ff9:	add    rsp,0x20
  407ffd:	pop    rbp
  407ffe:	ret    
  407fff:	nop

0000000000408000 <flatcc_builder_check_required@@Base>:
  408000:	push   rbp
  408001:	mov    rbp,rsp
  408004:	sub    rsp,0x20
  408008:	mov    QWORD PTR [rbp-0x10],rdi
  40800c:	mov    QWORD PTR [rbp-0x18],rsi
  408010:	mov    DWORD PTR [rbp-0x1c],edx
  408013:	mov    rax,QWORD PTR [rbp-0x10]
  408017:	mov    rax,QWORD PTR [rax+0x30]
  40801b:	movzx  ecx,WORD PTR [rax+0xe]
  40801f:	cmp    ecx,0x3
  408022:	jne    40802d <flatcc_builder_check_required@@Base+0x2d>
  408028:	jmp    40804c <flatcc_builder_check_required@@Base+0x4c>
  40802d:	lea    rdi,[rip+0x518d]        # 40d1c1 <flatcc_builder_padding_base@@Base+0xa41>
  408034:	lea    rsi,[rip+0x4957]        # 40c992 <flatcc_builder_padding_base@@Base+0x212>
  40803b:	mov    edx,0x511
  408040:	lea    rcx,[rip+0x5248]        # 40d28f <flatcc_builder_padding_base@@Base+0xb0f>
  408047:	call   403090 <__assert_fail@plt>
  40804c:	mov    rax,QWORD PTR [rbp-0x10]
  408050:	movzx  ecx,WORD PTR [rax+0x10]
  408054:	cmp    ecx,DWORD PTR [rbp-0x1c]
  408057:	jge    408069 <flatcc_builder_check_required@@Base+0x69>
  40805d:	mov    DWORD PTR [rbp-0x4],0x0
  408064:	jmp    4080c5 <flatcc_builder_check_required@@Base+0xc5>
  408069:	mov    DWORD PTR [rbp-0x20],0x0
  408070:	mov    eax,DWORD PTR [rbp-0x20]
  408073:	cmp    eax,DWORD PTR [rbp-0x1c]
  408076:	jge    4080be <flatcc_builder_check_required@@Base+0xbe>
  40807c:	mov    rax,QWORD PTR [rbp-0x10]
  408080:	mov    rax,QWORD PTR [rax+0x8]
  408084:	mov    rcx,QWORD PTR [rbp-0x18]
  408088:	movsxd rdx,DWORD PTR [rbp-0x20]
  40808c:	movzx  esi,WORD PTR [rcx+rdx*2]
  408090:	mov    ecx,esi
  408092:	movzx  esi,WORD PTR [rax+rcx*2]
  408096:	cmp    esi,0x0
  408099:	jne    4080ab <flatcc_builder_check_required@@Base+0xab>
  40809f:	mov    DWORD PTR [rbp-0x4],0x0
  4080a6:	jmp    4080c5 <flatcc_builder_check_required@@Base+0xc5>
  4080ab:	jmp    4080b0 <flatcc_builder_check_required@@Base+0xb0>
  4080b0:	mov    eax,DWORD PTR [rbp-0x20]
  4080b3:	add    eax,0x1
  4080b6:	mov    DWORD PTR [rbp-0x20],eax
  4080b9:	jmp    408070 <flatcc_builder_check_required@@Base+0x70>
  4080be:	mov    DWORD PTR [rbp-0x4],0x1
  4080c5:	mov    eax,DWORD PTR [rbp-0x4]
  4080c8:	add    rsp,0x20
  4080cc:	pop    rbp
  4080cd:	ret    
  4080ce:	xchg   ax,ax

00000000004080d0 <flatcc_builder_end_table@@Base>:
  4080d0:	push   rbp
  4080d1:	mov    rbp,rsp
  4080d4:	sub    rsp,0x40
  4080d8:	mov    QWORD PTR [rbp-0x10],rdi
  4080dc:	mov    rax,QWORD PTR [rbp-0x10]
  4080e0:	mov    rax,QWORD PTR [rax+0x30]
  4080e4:	movzx  ecx,WORD PTR [rax+0xe]
  4080e8:	cmp    ecx,0x3
  4080eb:	jne    4080f6 <flatcc_builder_end_table@@Base+0x26>
  4080f1:	jmp    408115 <flatcc_builder_end_table@@Base+0x45>
  4080f6:	lea    rdi,[rip+0x50c4]        # 40d1c1 <flatcc_builder_padding_base@@Base+0xa41>
  4080fd:	lea    rsi,[rip+0x488e]        # 40c992 <flatcc_builder_padding_base@@Base+0x212>
  408104:	mov    edx,0x525
  408109:	lea    rcx,[rip+0x51d9]        # 40d2e9 <flatcc_builder_padding_base@@Base+0xb69>
  408110:	call   403090 <__assert_fail@plt>
  408115:	mov    rax,QWORD PTR [rbp-0x10]
  408119:	mov    rax,QWORD PTR [rax+0x8]
  40811d:	add    rax,0xfffffffffffffffc
  408123:	mov    QWORD PTR [rbp-0x18],rax
  408127:	mov    rax,QWORD PTR [rbp-0x10]
  40812b:	movzx  ecx,WORD PTR [rax+0x10]
  40812f:	add    ecx,0x2
  408132:	movsxd rax,ecx
  408135:	shl    rax,0x1
  408139:	mov    WORD PTR [rbp-0x1a],ax
  40813d:	mov    ax,WORD PTR [rbp-0x1a]
  408141:	mov    rdx,QWORD PTR [rbp-0x18]
  408145:	mov    WORD PTR [rdx],ax
  408148:	mov    rdx,QWORD PTR [rbp-0x10]
  40814c:	mov    ecx,DWORD PTR [rdx+0x20]
  40814f:	movzx  esi,cx
  408152:	mov    edx,esi
  408154:	add    rdx,0x4
  40815b:	mov    rdi,QWORD PTR [rbp-0x18]
  40815f:	mov    WORD PTR [rdi+0x2],dx
  408163:	mov    rdi,QWORD PTR [rbp-0x18]
  408167:	movzx  esi,WORD PTR [rdi]
  40816a:	mov    rdi,QWORD PTR [rbp-0x10]
  40816e:	xor    esi,DWORD PTR [rdi+0x14]
  408171:	imul   esi,esi,0x9e3779b1
  408177:	mov    rdi,QWORD PTR [rbp-0x18]
  40817b:	movzx  r8d,WORD PTR [rdi+0x2]
  408180:	xor    esi,r8d
  408183:	imul   esi,esi,0x9e3779b1
  408189:	mov    rdi,QWORD PTR [rbp-0x10]
  40818d:	mov    DWORD PTR [rdi+0x14],esi
  408190:	mov    rdi,QWORD PTR [rbp-0x10]
  408194:	mov    rsi,QWORD PTR [rbp-0x18]
  408198:	mov    ax,WORD PTR [rbp-0x1a]
  40819c:	mov    r9,QWORD PTR [rbp-0x10]
  4081a0:	mov    ecx,DWORD PTR [r9+0x14]
  4081a4:	movzx  edx,ax
  4081a7:	call   407770 <flatcc_builder_create_cached_vtable@@Base>
  4081ac:	mov    DWORD PTR [rbp-0x24],eax
  4081af:	cmp    eax,0x0
  4081b2:	jne    4081c4 <flatcc_builder_end_table@@Base+0xf4>
  4081b8:	mov    DWORD PTR [rbp-0x4],0x0
  4081bf:	jmp    4082df <flatcc_builder_end_table@@Base+0x20f>
  4081c4:	xor    esi,esi
  4081c6:	mov    rax,QWORD PTR [rbp-0x18]
  4081ca:	movzx  ecx,WORD PTR [rbp-0x1a]
  4081ce:	mov    edx,ecx
  4081d0:	mov    rdi,rax
  4081d3:	call   4030a0 <memset@plt>
  4081d8:	mov    rax,QWORD PTR [rbp-0x10]
  4081dc:	mov    rax,QWORD PTR [rax+0x88]
  4081e3:	mov    rdx,QWORD PTR [rbp-0x10]
  4081e7:	mov    rdx,QWORD PTR [rdx+0x30]
  4081eb:	mov    ecx,DWORD PTR [rdx+0x14]
  4081ee:	mov    edx,ecx
  4081f0:	add    rax,rdx
  4081f3:	mov    QWORD PTR [rbp-0x30],rax
  4081f7:	mov    rax,QWORD PTR [rbp-0x10]
  4081fb:	mov    rax,QWORD PTR [rax]
  4081fe:	mov    rdx,QWORD PTR [rbp-0x30]
  408202:	sub    rax,rdx
  408205:	sar    rax,0x1
  408209:	mov    DWORD PTR [rbp-0x28],eax
  40820c:	mov    rdi,QWORD PTR [rbp-0x10]
  408210:	mov    rdx,QWORD PTR [rbp-0x10]
  408214:	mov    rsi,QWORD PTR [rdx+0x18]
  408218:	mov    rdx,QWORD PTR [rbp-0x10]
  40821c:	mov    eax,DWORD PTR [rdx+0x20]
  40821f:	mov    edx,eax
  408221:	mov    r8,QWORD PTR [rbp-0x10]
  408225:	mov    r9w,WORD PTR [r8+0xea]
  40822d:	mov    r8,QWORD PTR [rbp-0x30]
  408231:	mov    eax,DWORD PTR [rbp-0x28]
  408234:	mov    ecx,DWORD PTR [rbp-0x24]
  408237:	movzx  r10d,r9w
  40823b:	mov    DWORD PTR [rbp-0x34],ecx
  40823e:	mov    ecx,r10d
  408241:	mov    r9d,eax
  408244:	mov    eax,DWORD PTR [rbp-0x34]
  408247:	mov    DWORD PTR [rsp],eax
  40824a:	call   407b30 <flatcc_builder_create_table@@Base>
  40824f:	xor    ecx,ecx
  408251:	mov    DWORD PTR [rbp-0x20],eax
  408254:	cmp    ecx,eax
  408256:	jne    408268 <flatcc_builder_end_table@@Base+0x198>
  40825c:	mov    DWORD PTR [rbp-0x4],0x0
  408263:	jmp    4082df <flatcc_builder_end_table@@Base+0x20f>
  408268:	mov    rax,QWORD PTR [rbp-0x10]
  40826c:	mov    rax,QWORD PTR [rax+0x30]
  408270:	mov    ecx,DWORD PTR [rax+0x18]
  408273:	mov    rax,QWORD PTR [rbp-0x10]
  408277:	mov    DWORD PTR [rax+0x14],ecx
  40827a:	mov    rax,QWORD PTR [rbp-0x10]
  40827e:	mov    rax,QWORD PTR [rax+0x30]
  408282:	mov    dx,WORD PTR [rax+0x1c]
  408286:	mov    rax,QWORD PTR [rbp-0x10]
  40828a:	mov    WORD PTR [rax+0x10],dx
  40828e:	mov    rax,QWORD PTR [rbp-0x10]
  408292:	mov    rax,QWORD PTR [rax+0x58]
  408296:	mov    rsi,QWORD PTR [rbp-0x10]
  40829a:	mov    rsi,QWORD PTR [rsi+0x30]
  40829e:	mov    ecx,DWORD PTR [rsi+0x10]
  4082a1:	mov    esi,ecx
  4082a3:	add    rax,rsi
  4082a6:	mov    rsi,QWORD PTR [rbp-0x10]
  4082aa:	mov    QWORD PTR [rsi+0x8],rax
  4082ae:	mov    rax,QWORD PTR [rbp-0x10]
  4082b2:	mov    rax,QWORD PTR [rax+0x88]
  4082b9:	mov    rsi,QWORD PTR [rbp-0x10]
  4082bd:	mov    rsi,QWORD PTR [rsi+0x30]
  4082c1:	mov    ecx,DWORD PTR [rsi+0x14]
  4082c4:	mov    esi,ecx
  4082c6:	add    rax,rsi
  4082c9:	mov    rsi,QWORD PTR [rbp-0x10]
  4082cd:	mov    QWORD PTR [rsi],rax
  4082d0:	mov    rdi,QWORD PTR [rbp-0x10]
  4082d4:	call   4062a0 <flatcc_builder_end_buffer@@Base+0x160>
  4082d9:	mov    ecx,DWORD PTR [rbp-0x20]
  4082dc:	mov    DWORD PTR [rbp-0x4],ecx
  4082df:	mov    eax,DWORD PTR [rbp-0x4]
  4082e2:	add    rsp,0x40
  4082e6:	pop    rbp
  4082e7:	ret    
  4082e8:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004082f0 <flatcc_builder_create_vector@@Base>:
  4082f0:	push   rbp
  4082f1:	mov    rbp,rsp
  4082f4:	sub    rsp,0xe0
  4082fb:	mov    QWORD PTR [rbp-0x10],rdi
  4082ff:	mov    QWORD PTR [rbp-0x18],rsi
  408303:	mov    QWORD PTR [rbp-0x20],rdx
  408307:	mov    QWORD PTR [rbp-0x28],rcx
  40830b:	mov    WORD PTR [rbp-0x2a],r8w
  408310:	mov    QWORD PTR [rbp-0x38],r9
  408314:	mov    rax,QWORD PTR [rbp-0x20]
  408318:	cmp    rax,QWORD PTR [rbp-0x38]
  40831c:	jbe    408360 <flatcc_builder_create_vector@@Base+0x70>
  408322:	mov    rax,QWORD PTR [rbp-0x20]
  408326:	cmp    rax,QWORD PTR [rbp-0x38]
  40832a:	ja     408335 <flatcc_builder_create_vector@@Base+0x45>
  408330:	jmp    408354 <flatcc_builder_create_vector@@Base+0x64>
  408335:	lea    rdi,[rip+0x4fef]        # 40d32b <flatcc_builder_padding_base@@Base+0xbab>
  40833c:	lea    rsi,[rip+0x464f]        # 40c992 <flatcc_builder_padding_base@@Base+0x212>
  408343:	mov    edx,0x555
  408348:	lea    rcx,[rip+0x4fef]        # 40d33e <flatcc_builder_padding_base@@Base+0xbbe>
  40834f:	call   403090 <__assert_fail@plt>
  408354:	mov    DWORD PTR [rbp-0x4],0x0
  40835b:	jmp    40851c <flatcc_builder_create_vector@@Base+0x22c>
  408360:	lea    rdi,[rbp-0x2a]
  408364:	mov    esi,0x4
  408369:	call   4070a0 <flatcc_builder_start_vector@@Base+0xb0>
  40836e:	mov    rdi,QWORD PTR [rbp-0x10]
  408372:	movzx  esi,WORD PTR [rbp-0x2a]
  408376:	call   405c30 <flatcc_builder_create_buffer@@Base+0x420>
  40837b:	mov    rax,QWORD PTR [rbp-0x20]
  40837f:	mov    rcx,QWORD PTR [rbp-0x28]
  408383:	imul   eax,ecx
  408386:	mov    DWORD PTR [rbp-0x3c],eax
  408389:	mov    rdx,QWORD PTR [rbp-0x20]
  40838d:	mov    edi,edx
  40838f:	call   405700 <flatcc_builder_embed_buffer@@Base+0x430>
  408394:	mov    DWORD PTR [rbp-0x44],eax
  408397:	mov    rdi,QWORD PTR [rbp-0x10]
  40839b:	mov    esi,DWORD PTR [rbp-0x3c]
  40839e:	movzx  edx,WORD PTR [rbp-0x2a]
  4083a2:	call   4056d0 <flatcc_builder_embed_buffer@@Base+0x400>
  4083a7:	mov    DWORD PTR [rbp-0x40],eax
  4083aa:	mov    QWORD PTR [rbp-0xd8],0x0
  4083b5:	mov    DWORD PTR [rbp-0xd0],0x0
  4083bf:	mov    rdi,QWORD PTR [rbp-0xd8]
  4083c6:	add    rdi,0x4
  4083cd:	mov    QWORD PTR [rbp-0xd8],rdi
  4083d4:	lea    rdi,[rbp-0x44]
  4083d8:	lea    r8,[rbp-0xd8]
  4083df:	mov    r9,r8
  4083e2:	add    r9,0x10
  4083e9:	movsxd r10,DWORD PTR [rbp-0xd0]
  4083f0:	shl    r10,0x4
  4083f4:	add    r9,r10
  4083f7:	mov    QWORD PTR [r9],rdi
  4083fa:	add    r8,0x10
  408401:	movsxd rdi,DWORD PTR [rbp-0xd0]
  408408:	shl    rdi,0x4
  40840c:	add    r8,rdi
  40840f:	mov    QWORD PTR [r8+0x8],0x4
  408417:	mov    eax,DWORD PTR [rbp-0xd0]
  40841d:	add    eax,0x1
  408420:	mov    DWORD PTR [rbp-0xd0],eax
  408426:	cmp    DWORD PTR [rbp-0x3c],0x0
  40842a:	jbe    408496 <flatcc_builder_create_vector@@Base+0x1a6>
  408430:	mov    eax,DWORD PTR [rbp-0x3c]
  408433:	mov    ecx,eax
  408435:	add    rcx,QWORD PTR [rbp-0xd8]
  40843c:	mov    QWORD PTR [rbp-0xd8],rcx
  408443:	mov    rcx,QWORD PTR [rbp-0x18]
  408447:	lea    rdx,[rbp-0xd8]
  40844e:	mov    rsi,rdx
  408451:	add    rsi,0x10
  408458:	movsxd rdi,DWORD PTR [rbp-0xd0]
  40845f:	shl    rdi,0x4
  408463:	add    rsi,rdi
  408466:	mov    QWORD PTR [rsi],rcx
  408469:	mov    eax,DWORD PTR [rbp-0x3c]
  40846c:	mov    ecx,eax
  40846e:	add    rdx,0x10
  408475:	movsxd rsi,DWORD PTR [rbp-0xd0]
  40847c:	shl    rsi,0x4
  408480:	add    rdx,rsi
  408483:	mov    QWORD PTR [rdx+0x8],rcx
  408487:	mov    eax,DWORD PTR [rbp-0xd0]
  40848d:	add    eax,0x1
  408490:	mov    DWORD PTR [rbp-0xd0],eax
  408496:	cmp    DWORD PTR [rbp-0x40],0x0
  40849a:	jbe    408509 <flatcc_builder_create_vector@@Base+0x219>
  4084a0:	lea    rax,[rip+0x42d9]        # 40c780 <flatcc_builder_padding_base@@Base>
  4084a7:	mov    ecx,DWORD PTR [rbp-0x40]
  4084aa:	mov    edx,ecx
  4084ac:	add    rdx,QWORD PTR [rbp-0xd8]
  4084b3:	mov    QWORD PTR [rbp-0xd8],rdx
  4084ba:	lea    rdx,[rbp-0xd8]
  4084c1:	mov    rsi,rdx
  4084c4:	add    rsi,0x10
  4084cb:	movsxd rdi,DWORD PTR [rbp-0xd0]
  4084d2:	shl    rdi,0x4
  4084d6:	add    rsi,rdi
  4084d9:	mov    QWORD PTR [rsi],rax
  4084dc:	mov    ecx,DWORD PTR [rbp-0x40]
  4084df:	mov    eax,ecx
  4084e1:	add    rdx,0x10
  4084e8:	movsxd rsi,DWORD PTR [rbp-0xd0]
  4084ef:	shl    rsi,0x4
  4084f3:	add    rdx,rsi
  4084f6:	mov    QWORD PTR [rdx+0x8],rax
  4084fa:	mov    ecx,DWORD PTR [rbp-0xd0]
  408500:	add    ecx,0x1
  408503:	mov    DWORD PTR [rbp-0xd0],ecx
  408509:	mov    rdi,QWORD PTR [rbp-0x10]
  40850d:	lea    rsi,[rbp-0xd8]
  408514:	call   405710 <flatcc_builder_embed_buffer@@Base+0x440>
  408519:	mov    DWORD PTR [rbp-0x4],eax
  40851c:	mov    eax,DWORD PTR [rbp-0x4]
  40851f:	add    rsp,0xe0
  408526:	pop    rbp
  408527:	ret    
  408528:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000408530 <flatcc_builder_end_vector@@Base>:
  408530:	push   rbp
  408531:	mov    rbp,rsp
  408534:	sub    rsp,0x20
  408538:	mov    QWORD PTR [rbp-0x10],rdi
  40853c:	mov    rax,QWORD PTR [rbp-0x10]
  408540:	mov    rax,QWORD PTR [rax+0x30]
  408544:	movzx  ecx,WORD PTR [rax+0xe]
  408548:	cmp    ecx,0x4
  40854b:	jne    408556 <flatcc_builder_end_vector@@Base+0x26>
  408551:	jmp    408575 <flatcc_builder_end_vector@@Base+0x45>
  408556:	lea    rdi,[rip+0x4772]        # 40cccf <flatcc_builder_padding_base@@Base+0x54f>
  40855d:	lea    rsi,[rip+0x442e]        # 40c992 <flatcc_builder_padding_base@@Base+0x212>
  408564:	mov    edx,0x578
  408569:	lea    rcx,[rip+0x4e44]        # 40d3b4 <flatcc_builder_padding_base@@Base+0xc34>
  408570:	call   403090 <__assert_fail@plt>
  408575:	mov    rdi,QWORD PTR [rbp-0x10]
  408579:	mov    rax,QWORD PTR [rbp-0x10]
  40857d:	mov    rsi,QWORD PTR [rax+0x18]
  408581:	mov    rax,QWORD PTR [rbp-0x10]
  408585:	mov    rax,QWORD PTR [rax+0x30]
  408589:	mov    ecx,DWORD PTR [rax+0x14]
  40858c:	mov    edx,ecx
  40858e:	mov    rax,QWORD PTR [rbp-0x10]
  408592:	mov    rax,QWORD PTR [rax+0x30]
  408596:	mov    ecx,DWORD PTR [rax+0x10]
  408599:	mov    rax,QWORD PTR [rbp-0x10]
  40859d:	mov    r8w,WORD PTR [rax+0xea]
  4085a5:	mov    rax,QWORD PTR [rbp-0x10]
  4085a9:	mov    rax,QWORD PTR [rax+0x30]
  4085ad:	mov    r9d,DWORD PTR [rax+0x18]
  4085b1:	movzx  r8d,r8w
  4085b5:	call   4082f0 <flatcc_builder_create_vector@@Base>
  4085ba:	xor    r8d,r8d
  4085bd:	mov    DWORD PTR [rbp-0x14],eax
  4085c0:	cmp    r8d,eax
  4085c3:	jne    4085d5 <flatcc_builder_end_vector@@Base+0xa5>
  4085c9:	mov    DWORD PTR [rbp-0x4],0x0
  4085d0:	jmp    4085e4 <flatcc_builder_end_vector@@Base+0xb4>
  4085d5:	mov    rdi,QWORD PTR [rbp-0x10]
  4085d9:	call   4062a0 <flatcc_builder_end_buffer@@Base+0x160>
  4085de:	mov    eax,DWORD PTR [rbp-0x14]
  4085e1:	mov    DWORD PTR [rbp-0x4],eax
  4085e4:	mov    eax,DWORD PTR [rbp-0x4]
  4085e7:	add    rsp,0x20
  4085eb:	pop    rbp
  4085ec:	ret    
  4085ed:	nop    DWORD PTR [rax]

00000000004085f0 <flatcc_builder_vector_count@@Base>:
  4085f0:	push   rbp
  4085f1:	mov    rbp,rsp
  4085f4:	mov    QWORD PTR [rbp-0x8],rdi
  4085f8:	mov    rax,QWORD PTR [rbp-0x8]
  4085fc:	mov    rax,QWORD PTR [rax+0x30]
  408600:	mov    ecx,DWORD PTR [rax+0x14]
  408603:	mov    eax,ecx
  408605:	pop    rbp
  408606:	ret    
  408607:	nop    WORD PTR [rax+rax*1+0x0]

0000000000408610 <flatcc_builder_vector_edit@@Base>:
  408610:	push   rbp
  408611:	mov    rbp,rsp
  408614:	mov    QWORD PTR [rbp-0x8],rdi
  408618:	mov    rax,QWORD PTR [rbp-0x8]
  40861c:	mov    rax,QWORD PTR [rax+0x18]
  408620:	pop    rbp
  408621:	ret    
  408622:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40862c:	nop    DWORD PTR [rax+0x0]

0000000000408630 <flatcc_builder_create_offset_vector_direct@@Base>:
  408630:	push   rbp
  408631:	mov    rbp,rsp
  408634:	sub    rsp,0x20
  408638:	xor    eax,eax
  40863a:	mov    ecx,eax
  40863c:	mov    QWORD PTR [rbp-0x8],rdi
  408640:	mov    QWORD PTR [rbp-0x10],rsi
  408644:	mov    QWORD PTR [rbp-0x18],rdx
  408648:	mov    rdi,QWORD PTR [rbp-0x8]
  40864c:	mov    rsi,QWORD PTR [rbp-0x10]
  408650:	mov    rdx,QWORD PTR [rbp-0x18]
  408654:	call   408660 <flatcc_builder_create_offset_vector_direct@@Base+0x30>
  408659:	add    rsp,0x20
  40865d:	pop    rbp
  40865e:	ret    
  40865f:	nop
  408660:	push   rbp
  408661:	mov    rbp,rsp
  408664:	sub    rsp,0xd0
  40866b:	mov    QWORD PTR [rbp-0x10],rdi
  40866f:	mov    QWORD PTR [rbp-0x18],rsi
  408673:	mov    QWORD PTR [rbp-0x20],rdx
  408677:	mov    QWORD PTR [rbp-0x28],rcx
  40867b:	mov    rax,QWORD PTR [rbp-0x20]
  40867f:	mov    eax,eax
  408681:	mov    ecx,eax
  408683:	cmp    rcx,0x3fffffff
  40868a:	jbe    40869c <flatcc_builder_create_offset_vector_direct@@Base+0x6c>
  408690:	mov    DWORD PTR [rbp-0x4],0x0
  408697:	jmp    408998 <flatcc_builder_create_offset_vector_direct@@Base+0x368>
  40869c:	mov    rdi,QWORD PTR [rbp-0x10]
  4086a0:	mov    esi,0x4
  4086a5:	call   405c30 <flatcc_builder_create_buffer@@Base+0x420>
  4086aa:	mov    rax,QWORD PTR [rbp-0x20]
  4086ae:	mov    eax,eax
  4086b0:	mov    ecx,eax
  4086b2:	shl    rcx,0x2
  4086b6:	mov    DWORD PTR [rbp-0x2c],ecx
  4086b9:	mov    rdx,QWORD PTR [rbp-0x20]
  4086bd:	mov    edi,edx
  4086bf:	call   405700 <flatcc_builder_embed_buffer@@Base+0x430>
  4086c4:	mov    DWORD PTR [rbp-0x34],eax
  4086c7:	mov    rdi,QWORD PTR [rbp-0x10]
  4086cb:	mov    esi,DWORD PTR [rbp-0x2c]
  4086ce:	mov    edx,0x4
  4086d3:	call   4056d0 <flatcc_builder_embed_buffer@@Base+0x400>
  4086d8:	mov    DWORD PTR [rbp-0x30],eax
  4086db:	mov    QWORD PTR [rbp-0xd0],0x0
  4086e6:	mov    DWORD PTR [rbp-0xc8],0x0
  4086f0:	mov    rdi,QWORD PTR [rbp-0xd0]
  4086f7:	add    rdi,0x4
  4086fe:	mov    QWORD PTR [rbp-0xd0],rdi
  408705:	lea    rdi,[rbp-0x34]
  408709:	lea    r8,[rbp-0xd0]
  408710:	mov    r9,r8
  408713:	add    r9,0x10
  40871a:	movsxd r10,DWORD PTR [rbp-0xc8]
  408721:	shl    r10,0x4
  408725:	add    r9,r10
  408728:	mov    QWORD PTR [r9],rdi
  40872b:	add    r8,0x10
  408732:	movsxd rdi,DWORD PTR [rbp-0xc8]
  408739:	shl    rdi,0x4
  40873d:	add    r8,rdi
  408740:	mov    QWORD PTR [r8+0x8],0x4
  408748:	mov    eax,DWORD PTR [rbp-0xc8]
  40874e:	add    eax,0x1
  408751:	mov    DWORD PTR [rbp-0xc8],eax
  408757:	cmp    DWORD PTR [rbp-0x2c],0x0
  40875b:	jbe    4087c7 <flatcc_builder_create_offset_vector_direct@@Base+0x197>
  408761:	mov    eax,DWORD PTR [rbp-0x2c]
  408764:	mov    ecx,eax
  408766:	add    rcx,QWORD PTR [rbp-0xd0]
  40876d:	mov    QWORD PTR [rbp-0xd0],rcx
  408774:	mov    rcx,QWORD PTR [rbp-0x18]
  408778:	lea    rdx,[rbp-0xd0]
  40877f:	mov    rsi,rdx
  408782:	add    rsi,0x10
  408789:	movsxd rdi,DWORD PTR [rbp-0xc8]
  408790:	shl    rdi,0x4
  408794:	add    rsi,rdi
  408797:	mov    QWORD PTR [rsi],rcx
  40879a:	mov    eax,DWORD PTR [rbp-0x2c]
  40879d:	mov    ecx,eax
  40879f:	add    rdx,0x10
  4087a6:	movsxd rsi,DWORD PTR [rbp-0xc8]
  4087ad:	shl    rsi,0x4
  4087b1:	add    rdx,rsi
  4087b4:	mov    QWORD PTR [rdx+0x8],rcx
  4087b8:	mov    eax,DWORD PTR [rbp-0xc8]
  4087be:	add    eax,0x1
  4087c1:	mov    DWORD PTR [rbp-0xc8],eax
  4087c7:	cmp    DWORD PTR [rbp-0x30],0x0
  4087cb:	jbe    40883a <flatcc_builder_create_offset_vector_direct@@Base+0x20a>
  4087d1:	lea    rax,[rip+0x3fa8]        # 40c780 <flatcc_builder_padding_base@@Base>
  4087d8:	mov    ecx,DWORD PTR [rbp-0x30]
  4087db:	mov    edx,ecx
  4087dd:	add    rdx,QWORD PTR [rbp-0xd0]
  4087e4:	mov    QWORD PTR [rbp-0xd0],rdx
  4087eb:	lea    rdx,[rbp-0xd0]
  4087f2:	mov    rsi,rdx
  4087f5:	add    rsi,0x10
  4087fc:	movsxd rdi,DWORD PTR [rbp-0xc8]
  408803:	shl    rdi,0x4
  408807:	add    rsi,rdi
  40880a:	mov    QWORD PTR [rsi],rax
  40880d:	mov    ecx,DWORD PTR [rbp-0x30]
  408810:	mov    eax,ecx
  408812:	add    rdx,0x10
  408819:	movsxd rsi,DWORD PTR [rbp-0xc8]
  408820:	shl    rsi,0x4
  408824:	add    rdx,rsi
  408827:	mov    QWORD PTR [rdx+0x8],rax
  40882b:	mov    ecx,DWORD PTR [rbp-0xc8]
  408831:	add    ecx,0x1
  408834:	mov    DWORD PTR [rbp-0xc8],ecx
  40883a:	mov    rax,QWORD PTR [rbp-0x10]
  40883e:	mov    ecx,DWORD PTR [rax+0xf0]
  408844:	mov    rax,QWORD PTR [rbp-0xd0]
  40884b:	sub    ecx,eax
  40884d:	mov    DWORD PTR [rbp-0x38],ecx
  408850:	mov    DWORD PTR [rbp-0x40],0x0
  408857:	mov    eax,DWORD PTR [rbp-0x40]
  40885a:	mov    rcx,QWORD PTR [rbp-0x20]
  40885e:	cmp    eax,ecx
  408860:	jae    408985 <flatcc_builder_create_offset_vector_direct@@Base+0x355>
  408866:	mov    rax,QWORD PTR [rbp-0x18]
  40886a:	mov    ecx,DWORD PTR [rbp-0x40]
  40886d:	mov    edx,ecx
  40886f:	cmp    DWORD PTR [rax+rdx*4],0x0
  408873:	je     408904 <flatcc_builder_create_offset_vector_direct@@Base+0x2d4>
  408879:	mov    rax,QWORD PTR [rbp-0x18]
  40887d:	mov    ecx,DWORD PTR [rbp-0x40]
  408880:	mov    edx,ecx
  408882:	mov    ecx,DWORD PTR [rax+rdx*4]
  408885:	sub    ecx,DWORD PTR [rbp-0x38]
  408888:	mov    ecx,ecx
  40888a:	mov    eax,ecx
  40888c:	mov    ecx,DWORD PTR [rbp-0x40]
  40888f:	mov    edx,ecx
  408891:	shl    rdx,0x2
  408895:	sub    rax,rdx
  408898:	sub    rax,0x4
  40889e:	mov    DWORD PTR [rbp-0x3c],eax
  4088a1:	mov    edi,DWORD PTR [rbp-0x3c]
  4088a4:	call   405700 <flatcc_builder_embed_buffer@@Base+0x430>
  4088a9:	mov    rdx,QWORD PTR [rbp-0x18]
  4088ad:	mov    ecx,DWORD PTR [rbp-0x40]
  4088b0:	mov    esi,ecx
  4088b2:	mov    DWORD PTR [rdx+rsi*4],eax
  4088b5:	cmp    QWORD PTR [rbp-0x28],0x0
  4088ba:	je     4088ff <flatcc_builder_create_offset_vector_direct@@Base+0x2cf>
  4088c0:	mov    rax,QWORD PTR [rbp-0x28]
  4088c4:	mov    ecx,DWORD PTR [rbp-0x40]
  4088c7:	mov    edx,ecx
  4088c9:	movzx  ecx,BYTE PTR [rax+rdx*1]
  4088cd:	cmp    ecx,0x0
  4088d0:	je     4088db <flatcc_builder_create_offset_vector_direct@@Base+0x2ab>
  4088d6:	jmp    4088fa <flatcc_builder_create_offset_vector_direct@@Base+0x2ca>
  4088db:	lea    rdi,[rip+0x5264]        # 40db46 <flatcc_builder_padding_base@@Base+0x13c6>
  4088e2:	lea    rsi,[rip+0x40a9]        # 40c992 <flatcc_builder_padding_base@@Base+0x212>
  4088e9:	mov    edx,0x5b1
  4088ee:	lea    rcx,[rip+0x525f]        # 40db54 <flatcc_builder_padding_base@@Base+0x13d4>
  4088f5:	call   403090 <__assert_fail@plt>
  4088fa:	jmp    4088ff <flatcc_builder_create_offset_vector_direct@@Base+0x2cf>
  4088ff:	jmp    408972 <flatcc_builder_create_offset_vector_direct@@Base+0x342>
  408904:	cmp    QWORD PTR [rbp-0x28],0x0
  408909:	je     40894e <flatcc_builder_create_offset_vector_direct@@Base+0x31e>
  40890f:	mov    rax,QWORD PTR [rbp-0x28]
  408913:	mov    ecx,DWORD PTR [rbp-0x40]
  408916:	mov    edx,ecx
  408918:	movzx  ecx,BYTE PTR [rax+rdx*1]
  40891c:	cmp    ecx,0x0
  40891f:	jne    40892a <flatcc_builder_create_offset_vector_direct@@Base+0x2fa>
  408925:	jmp    408949 <flatcc_builder_create_offset_vector_direct@@Base+0x319>
  40892a:	lea    rdi,[rip+0x52a6]        # 40dbd7 <flatcc_builder_padding_base@@Base+0x1457>
  408931:	lea    rsi,[rip+0x405a]        # 40c992 <flatcc_builder_padding_base@@Base+0x212>
  408938:	mov    edx,0x5b5
  40893d:	lea    rcx,[rip+0x5210]        # 40db54 <flatcc_builder_padding_base@@Base+0x13d4>
  408944:	call   403090 <__assert_fail@plt>
  408949:	jmp    40896d <flatcc_builder_create_offset_vector_direct@@Base+0x33d>
  40894e:	lea    rdi,[rip+0x51fd]        # 40db52 <flatcc_builder_padding_base@@Base+0x13d2>
  408955:	lea    rsi,[rip+0x4036]        # 40c992 <flatcc_builder_padding_base@@Base+0x212>
  40895c:	mov    edx,0x5b7
  408961:	lea    rcx,[rip+0x51ec]        # 40db54 <flatcc_builder_padding_base@@Base+0x13d4>
  408968:	call   403090 <__assert_fail@plt>
  40896d:	jmp    408972 <flatcc_builder_create_offset_vector_direct@@Base+0x342>
  408972:	jmp    408977 <flatcc_builder_create_offset_vector_direct@@Base+0x347>
  408977:	mov    eax,DWORD PTR [rbp-0x40]
  40897a:	add    eax,0x1
  40897d:	mov    DWORD PTR [rbp-0x40],eax
  408980:	jmp    408857 <flatcc_builder_create_offset_vector_direct@@Base+0x227>
  408985:	mov    rdi,QWORD PTR [rbp-0x10]
  408989:	lea    rsi,[rbp-0xd0]
  408990:	call   405710 <flatcc_builder_embed_buffer@@Base+0x440>
  408995:	mov    DWORD PTR [rbp-0x4],eax
  408998:	mov    eax,DWORD PTR [rbp-0x4]
  40899b:	add    rsp,0xd0
  4089a2:	pop    rbp
  4089a3:	ret    
  4089a4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4089ae:	xchg   ax,ax

00000000004089b0 <flatcc_builder_end_offset_vector_for_unions@@Base>:
  4089b0:	push   rbp
  4089b1:	mov    rbp,rsp
  4089b4:	sub    rsp,0x20
  4089b8:	mov    QWORD PTR [rbp-0x10],rdi
  4089bc:	mov    QWORD PTR [rbp-0x18],rsi
  4089c0:	mov    rax,QWORD PTR [rbp-0x10]
  4089c4:	mov    rax,QWORD PTR [rax+0x30]
  4089c8:	movzx  ecx,WORD PTR [rax+0xe]
  4089cc:	cmp    ecx,0x5
  4089cf:	jne    4089da <flatcc_builder_end_offset_vector_for_unions@@Base+0x2a>
  4089d5:	jmp    4089f9 <flatcc_builder_end_offset_vector_for_unions@@Base+0x49>
  4089da:	lea    rdi,[rip+0x43e7]        # 40cdc8 <flatcc_builder_padding_base@@Base+0x648>
  4089e1:	lea    rsi,[rip+0x3faa]        # 40c992 <flatcc_builder_padding_base@@Base+0x212>
  4089e8:	mov    edx,0x5d5
  4089ed:	lea    rcx,[rip+0x4a4d]        # 40d441 <flatcc_builder_padding_base@@Base+0xcc1>
  4089f4:	call   403090 <__assert_fail@plt>
  4089f9:	mov    rdi,QWORD PTR [rbp-0x10]
  4089fd:	mov    rax,QWORD PTR [rbp-0x10]
  408a01:	mov    rax,QWORD PTR [rax+0x18]
  408a05:	mov    rcx,QWORD PTR [rbp-0x10]
  408a09:	mov    rcx,QWORD PTR [rcx+0x30]
  408a0d:	mov    edx,DWORD PTR [rcx+0x14]
  408a10:	mov    rcx,QWORD PTR [rbp-0x18]
  408a14:	mov    rsi,rax
  408a17:	call   408660 <flatcc_builder_create_offset_vector_direct@@Base+0x30>
  408a1c:	xor    r8d,r8d
  408a1f:	mov    DWORD PTR [rbp-0x1c],eax
  408a22:	cmp    r8d,eax
  408a25:	jne    408a37 <flatcc_builder_end_offset_vector_for_unions@@Base+0x87>
  408a2b:	mov    DWORD PTR [rbp-0x4],0x0
  408a32:	jmp    408a46 <flatcc_builder_end_offset_vector_for_unions@@Base+0x96>
  408a37:	mov    rdi,QWORD PTR [rbp-0x10]
  408a3b:	call   4062a0 <flatcc_builder_end_buffer@@Base+0x160>
  408a40:	mov    eax,DWORD PTR [rbp-0x1c]
  408a43:	mov    DWORD PTR [rbp-0x4],eax
  408a46:	mov    eax,DWORD PTR [rbp-0x4]
  408a49:	add    rsp,0x20
  408a4d:	pop    rbp
  408a4e:	ret    
  408a4f:	nop

0000000000408a50 <flatcc_builder_offset_vector_edit@@Base>:
  408a50:	push   rbp
  408a51:	mov    rbp,rsp
  408a54:	mov    QWORD PTR [rbp-0x8],rdi
  408a58:	mov    rax,QWORD PTR [rbp-0x8]
  408a5c:	mov    rax,QWORD PTR [rax+0x18]
  408a60:	pop    rbp
  408a61:	ret    
  408a62:	nop    WORD PTR cs:[rax+rax*1+0x0]
  408a6c:	nop    DWORD PTR [rax+0x0]

0000000000408a70 <flatcc_builder_offset_vector_count@@Base>:
  408a70:	push   rbp
  408a71:	mov    rbp,rsp
  408a74:	mov    QWORD PTR [rbp-0x8],rdi
  408a78:	mov    rax,QWORD PTR [rbp-0x8]
  408a7c:	mov    rax,QWORD PTR [rax+0x30]
  408a80:	mov    ecx,DWORD PTR [rax+0x14]
  408a83:	mov    eax,ecx
  408a85:	pop    rbp
  408a86:	ret    
  408a87:	nop    WORD PTR [rax+rax*1+0x0]

0000000000408a90 <flatcc_builder_table_add_union@@Base>:
  408a90:	push   rbp
  408a91:	mov    rbp,rsp
  408a94:	sub    rsp,0x30
  408a98:	mov    QWORD PTR [rbp-0x10],rdx
  408a9c:	mov    QWORD PTR [rbp-0x18],rdi
  408aa0:	mov    DWORD PTR [rbp-0x1c],esi
  408aa3:	mov    rax,QWORD PTR [rbp-0x18]
  408aa7:	mov    rax,QWORD PTR [rax+0x30]
  408aab:	movzx  ecx,WORD PTR [rax+0xe]
  408aaf:	cmp    ecx,0x3
  408ab2:	jne    408abd <flatcc_builder_table_add_union@@Base+0x2d>
  408ab8:	jmp    408adc <flatcc_builder_table_add_union@@Base+0x4c>
  408abd:	lea    rdi,[rip+0x46fd]        # 40d1c1 <flatcc_builder_padding_base@@Base+0xa41>
  408ac4:	lea    rsi,[rip+0x3ec7]        # 40c992 <flatcc_builder_padding_base@@Base+0x212>
  408acb:	mov    edx,0x5ee
  408ad0:	lea    rcx,[rip+0x49dc]        # 40d4b3 <flatcc_builder_padding_base@@Base+0xd33>
  408ad7:	call   403090 <__assert_fail@plt>
  408adc:	movzx  eax,BYTE PTR [rbp-0x10]
  408ae0:	cmp    eax,0x0
  408ae3:	jne    408b3a <flatcc_builder_table_add_union@@Base+0xaa>
  408ae9:	cmp    DWORD PTR [rbp-0xc],0x0
  408aed:	je     408b3a <flatcc_builder_table_add_union@@Base+0xaa>
  408af3:	movzx  eax,BYTE PTR [rbp-0x10]
  408af7:	cmp    eax,0x0
  408afa:	jne    408b0a <flatcc_builder_table_add_union@@Base+0x7a>
  408b00:	cmp    DWORD PTR [rbp-0xc],0x0
  408b04:	jne    408b0f <flatcc_builder_table_add_union@@Base+0x7f>
  408b0a:	jmp    408b2e <flatcc_builder_table_add_union@@Base+0x9e>
  408b0f:	lea    rdi,[rip+0x49f5]        # 40d50b <flatcc_builder_padding_base@@Base+0xd8b>
  408b16:	lea    rsi,[rip+0x3e75]        # 40c992 <flatcc_builder_padding_base@@Base+0x212>
  408b1d:	mov    edx,0x5ef
  408b22:	lea    rcx,[rip+0x498a]        # 40d4b3 <flatcc_builder_padding_base@@Base+0xd33>
  408b29:	call   403090 <__assert_fail@plt>
  408b2e:	mov    DWORD PTR [rbp-0x4],0xffffffff
  408b35:	jmp    408c1e <flatcc_builder_table_add_union@@Base+0x18e>
  408b3a:	cmp    DWORD PTR [rbp-0xc],0x0
  408b3e:	je     408ba3 <flatcc_builder_table_add_union@@Base+0x113>
  408b44:	mov    rdi,QWORD PTR [rbp-0x18]
  408b48:	mov    esi,DWORD PTR [rbp-0x1c]
  408b4b:	call   408c30 <flatcc_builder_table_add_offset@@Base>
  408b50:	mov    QWORD PTR [rbp-0x28],rax
  408b54:	cmp    QWORD PTR [rbp-0x28],0x0
  408b59:	jne    408b9a <flatcc_builder_table_add_union@@Base+0x10a>
  408b5f:	cmp    QWORD PTR [rbp-0x28],0x0
  408b64:	je     408b6f <flatcc_builder_table_add_union@@Base+0xdf>
  408b6a:	jmp    408b8e <flatcc_builder_table_add_union@@Base+0xfe>
  408b6f:	lea    rdi,[rip+0x49b7]        # 40d52d <flatcc_builder_padding_base@@Base+0xdad>
  408b76:	lea    rsi,[rip+0x3e15]        # 40c992 <flatcc_builder_padding_base@@Base+0x212>
  408b7d:	mov    edx,0x5f2
  408b82:	lea    rcx,[rip+0x492a]        # 40d4b3 <flatcc_builder_padding_base@@Base+0xd33>
  408b89:	call   403090 <__assert_fail@plt>
  408b8e:	mov    DWORD PTR [rbp-0x4],0xffffffff
  408b95:	jmp    408c1e <flatcc_builder_table_add_union@@Base+0x18e>
  408b9a:	mov    eax,DWORD PTR [rbp-0xc]
  408b9d:	mov    rcx,QWORD PTR [rbp-0x28]
  408ba1:	mov    DWORD PTR [rcx],eax
  408ba3:	mov    rdi,QWORD PTR [rbp-0x18]
  408ba7:	mov    eax,DWORD PTR [rbp-0x1c]
  408baa:	sub    eax,0x1
  408bad:	mov    esi,eax
  408baf:	mov    edx,0x1
  408bb4:	mov    ecx,0x1
  408bb9:	call   408d20 <flatcc_builder_table_add@@Base>
  408bbe:	mov    QWORD PTR [rbp-0x30],rax
  408bc2:	cmp    QWORD PTR [rbp-0x30],0x0
  408bc7:	jne    408c08 <flatcc_builder_table_add_union@@Base+0x178>
  408bcd:	cmp    QWORD PTR [rbp-0x30],0x0
  408bd2:	je     408bdd <flatcc_builder_table_add_union@@Base+0x14d>
  408bd8:	jmp    408bfc <flatcc_builder_table_add_union@@Base+0x16c>
  408bdd:	lea    rdi,[rip+0x4953]        # 40d537 <flatcc_builder_padding_base@@Base+0xdb7>
  408be4:	lea    rsi,[rip+0x3da7]        # 40c992 <flatcc_builder_padding_base@@Base+0x212>
  408beb:	mov    edx,0x5f6
  408bf0:	lea    rcx,[rip+0x48bc]        # 40d4b3 <flatcc_builder_padding_base@@Base+0xd33>
  408bf7:	call   403090 <__assert_fail@plt>
  408bfc:	mov    DWORD PTR [rbp-0x4],0xffffffff
  408c03:	jmp    408c1e <flatcc_builder_table_add_union@@Base+0x18e>
  408c08:	movzx  edi,BYTE PTR [rbp-0x10]
  408c0c:	call   408e60 <flatcc_builder_table_add@@Base+0x140>
  408c11:	mov    rcx,QWORD PTR [rbp-0x30]
  408c15:	mov    BYTE PTR [rcx],al
  408c17:	mov    DWORD PTR [rbp-0x4],0x0
  408c1e:	mov    eax,DWORD PTR [rbp-0x4]
  408c21:	add    rsp,0x30
  408c25:	pop    rbp
  408c26:	ret    
  408c27:	nop    WORD PTR [rax+rax*1+0x0]

0000000000408c30 <flatcc_builder_table_add_offset@@Base>:
  408c30:	push   rbp
  408c31:	mov    rbp,rsp
  408c34:	sub    rsp,0x10
  408c38:	mov    QWORD PTR [rbp-0x8],rdi
  408c3c:	mov    DWORD PTR [rbp-0xc],esi
  408c3f:	mov    rax,QWORD PTR [rbp-0x8]
  408c43:	mov    rax,QWORD PTR [rax+0x30]
  408c47:	movzx  ecx,WORD PTR [rax+0xe]
  408c4b:	cmp    ecx,0x3
  408c4e:	jne    408c59 <flatcc_builder_table_add_offset@@Base+0x29>
  408c54:	jmp    408c78 <flatcc_builder_table_add_offset@@Base+0x48>
  408c59:	lea    rdi,[rip+0x4561]        # 40d1c1 <flatcc_builder_padding_base@@Base+0xa41>
  408c60:	lea    rsi,[rip+0x3d2b]        # 40c992 <flatcc_builder_padding_base@@Base+0x212>
  408c67:	mov    edx,0x713
  408c6c:	lea    rcx,[rip+0x4c42]        # 40d8b5 <flatcc_builder_padding_base@@Base+0x1135>
  408c73:	call   403090 <__assert_fail@plt>
  408c78:	cmp    DWORD PTR [rbp-0xc],0x0
  408c7c:	jl     408c94 <flatcc_builder_table_add_offset@@Base+0x64>
  408c82:	cmp    DWORD PTR [rbp-0xc],0x7ffc
  408c89:	jg     408c94 <flatcc_builder_table_add_offset@@Base+0x64>
  408c8f:	jmp    408cb3 <flatcc_builder_table_add_offset@@Base+0x83>
  408c94:	lea    rdi,[rip+0x4b9a]        # 40d835 <flatcc_builder_padding_base@@Base+0x10b5>
  408c9b:	lea    rsi,[rip+0x3cf0]        # 40c992 <flatcc_builder_padding_base@@Base+0x212>
  408ca2:	mov    edx,0x714
  408ca7:	lea    rcx,[rip+0x4c07]        # 40d8b5 <flatcc_builder_padding_base@@Base+0x1135>
  408cae:	call   403090 <__assert_fail@plt>
  408cb3:	mov    rax,QWORD PTR [rbp-0x8]
  408cb7:	mov    rax,QWORD PTR [rax+0x8]
  408cbb:	movsxd rcx,DWORD PTR [rbp-0xc]
  408cbf:	movzx  edx,WORD PTR [rax+rcx*2]
  408cc3:	cmp    edx,0x0
  408cc6:	je     408ceb <flatcc_builder_table_add_offset@@Base+0xbb>
  408ccc:	lea    rdi,[rip+0x4e7f]        # 40db52 <flatcc_builder_padding_base@@Base+0x13d2>
  408cd3:	lea    rsi,[rip+0x3cb8]        # 40c992 <flatcc_builder_padding_base@@Base+0x212>
  408cda:	mov    edx,0x71b
  408cdf:	lea    rcx,[rip+0x4bcf]        # 40d8b5 <flatcc_builder_padding_base@@Base+0x1135>
  408ce6:	call   403090 <__assert_fail@plt>
  408ceb:	mov    eax,DWORD PTR [rbp-0xc]
  408cee:	mov    rcx,QWORD PTR [rbp-0x8]
  408cf2:	xor    eax,DWORD PTR [rcx+0x14]
  408cf5:	imul   eax,eax,0x9e3779b1
  408cfb:	xor    eax,0x4
  408cfe:	imul   eax,eax,0x9e3779b1
  408d04:	mov    rcx,QWORD PTR [rbp-0x8]
  408d08:	mov    DWORD PTR [rcx+0x14],eax
  408d0b:	mov    rdi,QWORD PTR [rbp-0x8]
  408d0f:	mov    eax,DWORD PTR [rbp-0xc]
  408d12:	movzx  esi,ax
  408d15:	call   409c00 <flatcc_builder_table_add_copy@@Base+0x60>
  408d1a:	add    rsp,0x10
  408d1e:	pop    rbp
  408d1f:	ret    

0000000000408d20 <flatcc_builder_table_add@@Base>:
  408d20:	push   rbp
  408d21:	mov    rbp,rsp
  408d24:	sub    rsp,0x20
  408d28:	mov    QWORD PTR [rbp-0x8],rdi
  408d2c:	mov    DWORD PTR [rbp-0xc],esi
  408d2f:	mov    QWORD PTR [rbp-0x18],rdx
  408d33:	mov    WORD PTR [rbp-0x1a],cx
  408d37:	mov    rax,QWORD PTR [rbp-0x8]
  408d3b:	mov    rax,QWORD PTR [rax+0x30]
  408d3f:	movzx  esi,WORD PTR [rax+0xe]
  408d43:	cmp    esi,0x3
  408d46:	jne    408d51 <flatcc_builder_table_add@@Base+0x31>
  408d4c:	jmp    408d70 <flatcc_builder_table_add@@Base+0x50>
  408d51:	lea    rdi,[rip+0x4469]        # 40d1c1 <flatcc_builder_padding_base@@Base+0xa41>
  408d58:	lea    rsi,[rip+0x3c33]        # 40c992 <flatcc_builder_padding_base@@Base+0x212>
  408d5f:	mov    edx,0x6ed
  408d64:	lea    rcx,[rip+0x4a80]        # 40d7eb <flatcc_builder_padding_base@@Base+0x106b>
  408d6b:	call   403090 <__assert_fail@plt>
  408d70:	cmp    DWORD PTR [rbp-0xc],0x0
  408d74:	jl     408d8c <flatcc_builder_table_add@@Base+0x6c>
  408d7a:	cmp    DWORD PTR [rbp-0xc],0x7ffc
  408d81:	jg     408d8c <flatcc_builder_table_add@@Base+0x6c>
  408d87:	jmp    408dab <flatcc_builder_table_add@@Base+0x8b>
  408d8c:	lea    rdi,[rip+0x4aa2]        # 40d835 <flatcc_builder_padding_base@@Base+0x10b5>
  408d93:	lea    rsi,[rip+0x3bf8]        # 40c992 <flatcc_builder_padding_base@@Base+0x212>
  408d9a:	mov    edx,0x6ee
  408d9f:	lea    rcx,[rip+0x4a45]        # 40d7eb <flatcc_builder_padding_base@@Base+0x106b>
  408da6:	call   403090 <__assert_fail@plt>
  408dab:	movzx  eax,WORD PTR [rbp-0x1a]
  408daf:	mov    rcx,QWORD PTR [rbp-0x8]
  408db3:	movzx  edx,WORD PTR [rcx+0xea]
  408dba:	cmp    eax,edx
  408dbc:	jle    408dd1 <flatcc_builder_table_add@@Base+0xb1>
  408dc2:	mov    ax,WORD PTR [rbp-0x1a]
  408dc6:	mov    rcx,QWORD PTR [rbp-0x8]
  408dca:	mov    WORD PTR [rcx+0xea],ax
  408dd1:	mov    rax,QWORD PTR [rbp-0x8]
  408dd5:	mov    rax,QWORD PTR [rax+0x8]
  408dd9:	movsxd rcx,DWORD PTR [rbp-0xc]
  408ddd:	movzx  edx,WORD PTR [rax+rcx*2]
  408de1:	cmp    edx,0x0
  408de4:	je     408e09 <flatcc_builder_table_add@@Base+0xe9>
  408dea:	lea    rdi,[rip+0x4d61]        # 40db52 <flatcc_builder_padding_base@@Base+0x13d2>
  408df1:	lea    rsi,[rip+0x3b9a]        # 40c992 <flatcc_builder_padding_base@@Base+0x212>
  408df8:	mov    edx,0x6f8
  408dfd:	lea    rcx,[rip+0x49e7]        # 40d7eb <flatcc_builder_padding_base@@Base+0x106b>
  408e04:	call   403090 <__assert_fail@plt>
  408e09:	mov    eax,DWORD PTR [rbp-0xc]
  408e0c:	mov    rcx,QWORD PTR [rbp-0x8]
  408e10:	xor    eax,DWORD PTR [rcx+0x14]
  408e13:	imul   eax,eax,0x9e3779b1
  408e19:	mov    rcx,QWORD PTR [rbp-0x18]
  408e1d:	xor    eax,ecx
  408e1f:	imul   eax,eax,0x9e3779b1
  408e25:	mov    rdx,QWORD PTR [rbp-0x8]
  408e29:	mov    DWORD PTR [rdx+0x14],eax
  408e2c:	mov    rdi,QWORD PTR [rbp-0x8]
  408e30:	mov    rdx,QWORD PTR [rbp-0x18]
  408e34:	mov    si,WORD PTR [rbp-0x1a]
  408e38:	mov    eax,DWORD PTR [rbp-0xc]
  408e3b:	mov    WORD PTR [rbp-0x1c],si
  408e3f:	mov    esi,edx
  408e41:	mov    r8w,WORD PTR [rbp-0x1c]
  408e46:	movzx  edx,r8w
  408e4a:	movzx  ecx,ax
  408e4d:	call   409a30 <flatcc_builder_string_len@@Base+0x20>
  408e52:	add    rsp,0x20
  408e56:	pop    rbp
  408e57:	ret    
  408e58:	nop    DWORD PTR [rax+rax*1+0x0]
  408e60:	push   rbp
  408e61:	mov    rbp,rsp
  408e64:	mov    BYTE PTR [rbp-0x1],dil
  408e68:	movzx  eax,BYTE PTR [rbp-0x1]
  408e6c:	pop    rbp
  408e6d:	ret    
  408e6e:	xchg   ax,ax

0000000000408e70 <flatcc_builder_table_add_union_vector@@Base>:
  408e70:	push   rbp
  408e71:	mov    rbp,rsp
  408e74:	sub    rsp,0x30
  408e78:	mov    QWORD PTR [rbp-0x10],rdx
  408e7c:	mov    QWORD PTR [rbp-0x18],rdi
  408e80:	mov    DWORD PTR [rbp-0x1c],esi
  408e83:	mov    rax,QWORD PTR [rbp-0x18]
  408e87:	mov    rax,QWORD PTR [rax+0x30]
  408e8b:	movzx  ecx,WORD PTR [rax+0xe]
  408e8f:	cmp    ecx,0x3
  408e92:	jne    408e9d <flatcc_builder_table_add_union_vector@@Base+0x2d>
  408e98:	jmp    408ebc <flatcc_builder_table_add_union_vector@@Base+0x4c>
  408e9d:	lea    rdi,[rip+0x431d]        # 40d1c1 <flatcc_builder_padding_base@@Base+0xa41>
  408ea4:	lea    rsi,[rip+0x3ae7]        # 40c992 <flatcc_builder_padding_base@@Base+0x212>
  408eab:	mov    edx,0x600
  408eb0:	lea    rcx,[rip+0x468c]        # 40d543 <flatcc_builder_padding_base@@Base+0xdc3>
  408eb7:	call   403090 <__assert_fail@plt>
  408ebc:	cmp    DWORD PTR [rbp-0x10],0x0
  408ec0:	sete   al
  408ec3:	and    al,0x1
  408ec5:	movzx  ecx,al
  408ec8:	cmp    DWORD PTR [rbp-0xc],0x0
  408ecc:	sete   al
  408ecf:	and    al,0x1
  408ed1:	movzx  edx,al
  408ed4:	cmp    ecx,edx
  408ed6:	je     408f2c <flatcc_builder_table_add_union_vector@@Base+0xbc>
  408edc:	cmp    DWORD PTR [rbp-0x10],0x0
  408ee0:	sete   al
  408ee3:	and    al,0x1
  408ee5:	movzx  ecx,al
  408ee8:	cmp    DWORD PTR [rbp-0xc],0x0
  408eec:	sete   al
  408eef:	and    al,0x1
  408ef1:	movzx  edx,al
  408ef4:	cmp    ecx,edx
  408ef6:	jne    408f01 <flatcc_builder_table_add_union_vector@@Base+0x91>
  408efc:	jmp    408f20 <flatcc_builder_table_add_union_vector@@Base+0xb0>
  408f01:	lea    rdi,[rip+0x469e]        # 40d5a6 <flatcc_builder_padding_base@@Base+0xe26>
  408f08:	lea    rsi,[rip+0x3a83]        # 40c992 <flatcc_builder_padding_base@@Base+0x212>
  408f0f:	mov    edx,0x601
  408f14:	lea    rcx,[rip+0x4628]        # 40d543 <flatcc_builder_padding_base@@Base+0xdc3>
  408f1b:	call   403090 <__assert_fail@plt>
  408f20:	mov    DWORD PTR [rbp-0x4],0xffffffff
  408f27:	jmp    409000 <flatcc_builder_table_add_union_vector@@Base+0x190>
  408f2c:	cmp    DWORD PTR [rbp-0x10],0x0
  408f30:	je     408ff9 <flatcc_builder_table_add_union_vector@@Base+0x189>
  408f36:	mov    rdi,QWORD PTR [rbp-0x18]
  408f3a:	mov    eax,DWORD PTR [rbp-0x1c]
  408f3d:	sub    eax,0x1
  408f40:	mov    esi,eax
  408f42:	call   408c30 <flatcc_builder_table_add_offset@@Base>
  408f47:	mov    QWORD PTR [rbp-0x28],rax
  408f4b:	cmp    QWORD PTR [rbp-0x28],0x0
  408f50:	jne    408f91 <flatcc_builder_table_add_union_vector@@Base+0x121>
  408f56:	cmp    QWORD PTR [rbp-0x28],0x0
  408f5b:	je     408f66 <flatcc_builder_table_add_union_vector@@Base+0xf6>
  408f61:	jmp    408f85 <flatcc_builder_table_add_union_vector@@Base+0x115>
  408f66:	lea    rdi,[rip+0x45c0]        # 40d52d <flatcc_builder_padding_base@@Base+0xdad>
  408f6d:	lea    rsi,[rip+0x3a1e]        # 40c992 <flatcc_builder_padding_base@@Base+0x212>
  408f74:	mov    edx,0x604
  408f79:	lea    rcx,[rip+0x45c3]        # 40d543 <flatcc_builder_padding_base@@Base+0xdc3>
  408f80:	call   403090 <__assert_fail@plt>
  408f85:	mov    DWORD PTR [rbp-0x4],0xffffffff
  408f8c:	jmp    409000 <flatcc_builder_table_add_union_vector@@Base+0x190>
  408f91:	mov    eax,DWORD PTR [rbp-0x10]
  408f94:	mov    rcx,QWORD PTR [rbp-0x28]
  408f98:	mov    DWORD PTR [rcx],eax
  408f9a:	mov    rdi,QWORD PTR [rbp-0x18]
  408f9e:	mov    esi,DWORD PTR [rbp-0x1c]
  408fa1:	call   408c30 <flatcc_builder_table_add_offset@@Base>
  408fa6:	mov    QWORD PTR [rbp-0x28],rax
  408faa:	cmp    QWORD PTR [rbp-0x28],0x0
  408faf:	jne    408ff0 <flatcc_builder_table_add_union_vector@@Base+0x180>
  408fb5:	cmp    QWORD PTR [rbp-0x28],0x0
  408fba:	je     408fc5 <flatcc_builder_table_add_union_vector@@Base+0x155>
  408fc0:	jmp    408fe4 <flatcc_builder_table_add_union_vector@@Base+0x174>
  408fc5:	lea    rdi,[rip+0x4561]        # 40d52d <flatcc_builder_padding_base@@Base+0xdad>
  408fcc:	lea    rsi,[rip+0x39bf]        # 40c992 <flatcc_builder_padding_base@@Base+0x212>
  408fd3:	mov    edx,0x608
  408fd8:	lea    rcx,[rip+0x4564]        # 40d543 <flatcc_builder_padding_base@@Base+0xdc3>
  408fdf:	call   403090 <__assert_fail@plt>
  408fe4:	mov    DWORD PTR [rbp-0x4],0xffffffff
  408feb:	jmp    409000 <flatcc_builder_table_add_union_vector@@Base+0x190>
  408ff0:	mov    eax,DWORD PTR [rbp-0xc]
  408ff3:	mov    rcx,QWORD PTR [rbp-0x28]
  408ff7:	mov    DWORD PTR [rcx],eax
  408ff9:	mov    DWORD PTR [rbp-0x4],0x0
  409000:	mov    eax,DWORD PTR [rbp-0x4]
  409003:	add    rsp,0x30
  409007:	pop    rbp
  409008:	ret    
  409009:	nop    DWORD PTR [rax+0x0]

0000000000409010 <flatcc_builder_create_union_vector@@Base>:
  409010:	push   rbp
  409011:	mov    rbp,rsp
  409014:	sub    rsp,0x40
  409018:	xor    eax,eax
  40901a:	mov    QWORD PTR [rbp-0x10],rdi
  40901e:	mov    QWORD PTR [rbp-0x18],rsi
  409022:	mov    QWORD PTR [rbp-0x20],rdx
  409026:	lea    rcx,[rbp-0x8]
  40902a:	mov    rdi,rcx
  40902d:	mov    esi,eax
  40902f:	mov    edx,0x8
  409034:	call   4030a0 <memset@plt>
  409039:	mov    rdi,QWORD PTR [rbp-0x10]
  40903d:	call   4070d0 <flatcc_builder_start_offset_vector@@Base>
  409042:	cmp    eax,0x0
  409045:	je     409050 <flatcc_builder_create_union_vector@@Base+0x40>
  40904b:	jmp    409125 <flatcc_builder_create_union_vector@@Base+0x115>
  409050:	mov    rdi,QWORD PTR [rbp-0x10]
  409054:	mov    rsi,QWORD PTR [rbp-0x20]
  409058:	call   4068c0 <flatcc_builder_extend_offset_vector@@Base>
  40905d:	xor    ecx,ecx
  40905f:	mov    edx,ecx
  409061:	cmp    rdx,rax
  409064:	jne    40906f <flatcc_builder_create_union_vector@@Base+0x5f>
  40906a:	jmp    409125 <flatcc_builder_create_union_vector@@Base+0x115>
  40906f:	mov    rdi,QWORD PTR [rbp-0x10]
  409073:	mov    rax,QWORD PTR [rbp-0x20]
  409077:	shl    rax,0x0
  40907b:	mov    esi,eax
  40907d:	call   406450 <flatcc_builder_start_struct@@Base+0xf0>
  409082:	xor    ecx,ecx
  409084:	mov    edx,ecx
  409086:	mov    QWORD PTR [rbp-0x28],rax
  40908a:	cmp    rdx,rax
  40908d:	jne    409098 <flatcc_builder_create_union_vector@@Base+0x88>
  409093:	jmp    409125 <flatcc_builder_create_union_vector@@Base+0x115>
  409098:	mov    rdi,QWORD PTR [rbp-0x10]
  40909c:	call   408a50 <flatcc_builder_offset_vector_edit@@Base>
  4090a1:	mov    QWORD PTR [rbp-0x30],rax
  4090a5:	mov    QWORD PTR [rbp-0x38],0x0
  4090ad:	mov    rax,QWORD PTR [rbp-0x38]
  4090b1:	cmp    rax,QWORD PTR [rbp-0x20]
  4090b5:	jae    4090fb <flatcc_builder_create_union_vector@@Base+0xeb>
  4090bb:	mov    rax,QWORD PTR [rbp-0x18]
  4090bf:	mov    rcx,QWORD PTR [rbp-0x38]
  4090c3:	mov    dl,BYTE PTR [rax+rcx*8]
  4090c6:	mov    rax,QWORD PTR [rbp-0x28]
  4090ca:	mov    rcx,QWORD PTR [rbp-0x38]
  4090ce:	mov    BYTE PTR [rax+rcx*1],dl
  4090d1:	mov    rax,QWORD PTR [rbp-0x18]
  4090d5:	mov    rcx,QWORD PTR [rbp-0x38]
  4090d9:	mov    esi,DWORD PTR [rax+rcx*8+0x4]
  4090dd:	mov    rax,QWORD PTR [rbp-0x30]
  4090e1:	mov    rcx,QWORD PTR [rbp-0x38]
  4090e5:	mov    DWORD PTR [rax+rcx*4],esi
  4090e8:	mov    rax,QWORD PTR [rbp-0x38]
  4090ec:	add    rax,0x1
  4090f2:	mov    QWORD PTR [rbp-0x38],rax
  4090f6:	jmp    4090ad <flatcc_builder_create_union_vector@@Base+0x9d>
  4090fb:	mov    rdi,QWORD PTR [rbp-0x10]
  4090ff:	mov    rsi,QWORD PTR [rbp-0x28]
  409103:	mov    rdx,QWORD PTR [rbp-0x30]
  409107:	mov    rcx,QWORD PTR [rbp-0x20]
  40910b:	call   409130 <flatcc_builder_create_union_vector_direct@@Base>
  409110:	mov    QWORD PTR [rbp-0x40],rax
  409114:	mov    rax,QWORD PTR [rbp-0x40]
  409118:	mov    QWORD PTR [rbp-0x8],rax
  40911c:	mov    rdi,QWORD PTR [rbp-0x10]
  409120:	call   4062a0 <flatcc_builder_end_buffer@@Base+0x160>
  409125:	mov    rax,QWORD PTR [rbp-0x8]
  409129:	add    rsp,0x40
  40912d:	pop    rbp
  40912e:	ret    
  40912f:	nop

0000000000409130 <flatcc_builder_create_union_vector_direct@@Base>:
  409130:	push   rbp
  409131:	mov    rbp,rsp
  409134:	sub    rsp,0x30
  409138:	xor    eax,eax
  40913a:	mov    QWORD PTR [rbp-0x10],rdi
  40913e:	mov    QWORD PTR [rbp-0x18],rsi
  409142:	mov    QWORD PTR [rbp-0x20],rdx
  409146:	mov    QWORD PTR [rbp-0x28],rcx
  40914a:	lea    rcx,[rbp-0x8]
  40914e:	mov    rdi,rcx
  409151:	mov    esi,eax
  409153:	mov    edx,0x8
  409158:	call   4030a0 <memset@plt>
  40915d:	mov    rdi,QWORD PTR [rbp-0x10]
  409161:	mov    rsi,QWORD PTR [rbp-0x20]
  409165:	mov    rdx,QWORD PTR [rbp-0x28]
  409169:	mov    rcx,QWORD PTR [rbp-0x18]
  40916d:	call   408660 <flatcc_builder_create_offset_vector_direct@@Base+0x30>
  409172:	xor    r8d,r8d
  409175:	mov    DWORD PTR [rbp-0x4],eax
  409178:	cmp    r8d,eax
  40917b:	jne    409186 <flatcc_builder_create_union_vector_direct@@Base+0x56>
  409181:	jmp    4091c1 <flatcc_builder_create_union_vector_direct@@Base+0x91>
  409186:	mov    rdi,QWORD PTR [rbp-0x10]
  40918a:	mov    rsi,QWORD PTR [rbp-0x18]
  40918e:	mov    rdx,QWORD PTR [rbp-0x28]
  409192:	mov    ecx,0x1
  409197:	mov    r8d,0x1
  40919d:	mov    r9d,0xffffffff
  4091a3:	call   4082f0 <flatcc_builder_create_vector@@Base>
  4091a8:	xor    r8d,r8d
  4091ab:	mov    DWORD PTR [rbp-0x8],eax
  4091ae:	cmp    r8d,eax
  4091b1:	jne    4091bc <flatcc_builder_create_union_vector_direct@@Base+0x8c>
  4091b7:	jmp    4091c1 <flatcc_builder_create_union_vector_direct@@Base+0x91>
  4091bc:	jmp    4091c1 <flatcc_builder_create_union_vector_direct@@Base+0x91>
  4091c1:	mov    rax,QWORD PTR [rbp-0x8]
  4091c5:	add    rsp,0x30
  4091c9:	pop    rbp
  4091ca:	ret    
  4091cb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004091d0 <flatcc_builder_start_union_vector@@Base>:
  4091d0:	push   rbp
  4091d1:	mov    rbp,rsp
  4091d4:	sub    rsp,0x10
  4091d8:	mov    QWORD PTR [rbp-0x10],rdi
  4091dc:	mov    rdi,QWORD PTR [rbp-0x10]
  4091e0:	mov    esi,0x4
  4091e5:	call   405f80 <flatcc_builder_start_buffer@@Base+0x170>
  4091ea:	cmp    eax,0x0
  4091ed:	je     4091ff <flatcc_builder_start_union_vector@@Base+0x2f>
  4091f3:	mov    DWORD PTR [rbp-0x4],0xffffffff
  4091fa:	jmp    409240 <flatcc_builder_start_union_vector@@Base+0x70>
  4091ff:	mov    rax,QWORD PTR [rbp-0x10]
  409203:	mov    rax,QWORD PTR [rax+0x30]
  409207:	mov    DWORD PTR [rax+0x10],0x8
  40920e:	mov    rax,QWORD PTR [rbp-0x10]
  409212:	mov    rax,QWORD PTR [rax+0x30]
  409216:	mov    DWORD PTR [rax+0x14],0x0
  40921d:	mov    rax,QWORD PTR [rbp-0x10]
  409221:	mov    rax,QWORD PTR [rax+0x30]
  409225:	mov    WORD PTR [rax+0xe],0x7
  40922b:	mov    rdi,QWORD PTR [rbp-0x10]
  40922f:	mov    esi,0xfffffffc
  409234:	call   4063d0 <flatcc_builder_start_struct@@Base+0x70>
  409239:	mov    DWORD PTR [rbp-0x4],0x0
  409240:	mov    eax,DWORD PTR [rbp-0x4]
  409243:	add    rsp,0x10
  409247:	pop    rbp
  409248:	ret    
  409249:	nop    DWORD PTR [rax+0x0]

0000000000409250 <flatcc_builder_end_union_vector@@Base>:
  409250:	push   rbp
  409251:	mov    rbp,rsp
  409254:	sub    rsp,0x40
  409258:	xor    esi,esi
  40925a:	mov    QWORD PTR [rbp-0x10],rdi
  40925e:	lea    rax,[rbp-0x8]
  409262:	mov    rdi,rax
  409265:	mov    edx,0x8
  40926a:	call   4030a0 <memset@plt>
  40926f:	mov    rax,QWORD PTR [rbp-0x10]
  409273:	mov    rax,QWORD PTR [rax+0x30]
  409277:	movzx  ecx,WORD PTR [rax+0xe]
  40927b:	cmp    ecx,0x7
  40927e:	jne    409289 <flatcc_builder_end_union_vector@@Base+0x39>
  409284:	jmp    4092a8 <flatcc_builder_end_union_vector@@Base+0x58>
  409289:	lea    rdi,[rip+0x433e]        # 40d5ce <flatcc_builder_padding_base@@Base+0xe4e>
  409290:	lea    rsi,[rip+0x36fb]        # 40c992 <flatcc_builder_padding_base@@Base+0x212>
  409297:	mov    edx,0x651
  40929c:	lea    rcx,[rip+0x435d]        # 40d600 <flatcc_builder_padding_base@@Base+0xe80>
  4092a3:	call   403090 <__assert_fail@plt>
  4092a8:	mov    rdi,QWORD PTR [rbp-0x10]
  4092ac:	call   409390 <flatcc_builder_union_vector_count@@Base>
  4092b1:	mov    QWORD PTR [rbp-0x38],rax
  4092b5:	mov    rdi,QWORD PTR [rbp-0x10]
  4092b9:	imul   rax,QWORD PTR [rbp-0x38],0x5
  4092c1:	mov    esi,eax
  4092c3:	call   406450 <flatcc_builder_start_struct@@Base+0xf0>
  4092c8:	xor    ecx,ecx
  4092ca:	mov    edx,ecx
  4092cc:	mov    QWORD PTR [rbp-0x28],rax
  4092d0:	cmp    rdx,rax
  4092d3:	jne    4092de <flatcc_builder_end_union_vector@@Base+0x8e>
  4092d9:	jmp    40937e <flatcc_builder_end_union_vector@@Base+0x12e>
  4092de:	mov    rax,QWORD PTR [rbp-0x28]
  4092e2:	mov    rcx,QWORD PTR [rbp-0x38]
  4092e6:	shl    rcx,0x2
  4092ea:	add    rax,rcx
  4092ed:	mov    QWORD PTR [rbp-0x18],rax
  4092f1:	mov    rdi,QWORD PTR [rbp-0x10]
  4092f5:	call   4093b0 <flatcc_builder_union_vector_edit@@Base>
  4092fa:	mov    QWORD PTR [rbp-0x20],rax
  4092fe:	mov    QWORD PTR [rbp-0x30],0x0
  409306:	mov    rax,QWORD PTR [rbp-0x30]
  40930a:	cmp    rax,QWORD PTR [rbp-0x38]
  40930e:	jae    409354 <flatcc_builder_end_union_vector@@Base+0x104>
  409314:	mov    rax,QWORD PTR [rbp-0x20]
  409318:	mov    rcx,QWORD PTR [rbp-0x30]
  40931c:	mov    dl,BYTE PTR [rax+rcx*8]
  40931f:	mov    rax,QWORD PTR [rbp-0x18]
  409323:	mov    rcx,QWORD PTR [rbp-0x30]
  409327:	mov    BYTE PTR [rax+rcx*1],dl
  40932a:	mov    rax,QWORD PTR [rbp-0x20]
  40932e:	mov    rcx,QWORD PTR [rbp-0x30]
  409332:	mov    esi,DWORD PTR [rax+rcx*8+0x4]
  409336:	mov    rax,QWORD PTR [rbp-0x28]
  40933a:	mov    rcx,QWORD PTR [rbp-0x30]
  40933e:	mov    DWORD PTR [rax+rcx*4],esi
  409341:	mov    rax,QWORD PTR [rbp-0x30]
  409345:	add    rax,0x1
  40934b:	mov    QWORD PTR [rbp-0x30],rax
  40934f:	jmp    409306 <flatcc_builder_end_union_vector@@Base+0xb6>
  409354:	mov    rdi,QWORD PTR [rbp-0x10]
  409358:	mov    rsi,QWORD PTR [rbp-0x18]
  40935c:	mov    rdx,QWORD PTR [rbp-0x28]
  409360:	mov    rcx,QWORD PTR [rbp-0x38]
  409364:	call   409130 <flatcc_builder_create_union_vector_direct@@Base>
  409369:	mov    QWORD PTR [rbp-0x40],rax
  40936d:	mov    rax,QWORD PTR [rbp-0x40]
  409371:	mov    QWORD PTR [rbp-0x8],rax
  409375:	mov    rdi,QWORD PTR [rbp-0x10]
  409379:	call   4062a0 <flatcc_builder_end_buffer@@Base+0x160>
  40937e:	mov    rax,QWORD PTR [rbp-0x8]
  409382:	add    rsp,0x40
  409386:	pop    rbp
  409387:	ret    
  409388:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000409390 <flatcc_builder_union_vector_count@@Base>:
  409390:	push   rbp
  409391:	mov    rbp,rsp
  409394:	mov    QWORD PTR [rbp-0x8],rdi
  409398:	mov    rax,QWORD PTR [rbp-0x8]
  40939c:	mov    rax,QWORD PTR [rax+0x30]
  4093a0:	mov    ecx,DWORD PTR [rax+0x14]
  4093a3:	mov    eax,ecx
  4093a5:	pop    rbp
  4093a6:	ret    
  4093a7:	nop    WORD PTR [rax+rax*1+0x0]

00000000004093b0 <flatcc_builder_union_vector_edit@@Base>:
  4093b0:	push   rbp
  4093b1:	mov    rbp,rsp
  4093b4:	mov    QWORD PTR [rbp-0x8],rdi
  4093b8:	mov    rax,QWORD PTR [rbp-0x8]
  4093bc:	mov    rax,QWORD PTR [rax+0x18]
  4093c0:	pop    rbp
  4093c1:	ret    
  4093c2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4093cc:	nop    DWORD PTR [rax+0x0]

00000000004093d0 <flatcc_builder_extend_union_vector@@Base>:
  4093d0:	push   rbp
  4093d1:	mov    rbp,rsp
  4093d4:	sub    rsp,0x20
  4093d8:	mov    QWORD PTR [rbp-0x10],rdi
  4093dc:	mov    QWORD PTR [rbp-0x18],rsi
  4093e0:	mov    rdi,QWORD PTR [rbp-0x10]
  4093e4:	mov    rax,QWORD PTR [rbp-0x18]
  4093e8:	mov    esi,eax
  4093ea:	mov    edx,0x1fffffff
  4093ef:	call   406610 <flatcc_builder_extend_vector@@Base+0x70>
  4093f4:	cmp    eax,0x0
  4093f7:	je     40940a <flatcc_builder_extend_union_vector@@Base+0x3a>
  4093fd:	mov    QWORD PTR [rbp-0x8],0x0
  409405:	jmp    409425 <flatcc_builder_extend_union_vector@@Base+0x55>
  40940a:	mov    rdi,QWORD PTR [rbp-0x10]
  40940e:	mov    rax,QWORD PTR [rbp-0x18]
  409412:	mov    eax,eax
  409414:	mov    ecx,eax
  409416:	shl    rcx,0x3
  40941a:	mov    esi,ecx
  40941c:	call   406450 <flatcc_builder_start_struct@@Base+0xf0>
  409421:	mov    QWORD PTR [rbp-0x8],rax
  409425:	mov    rax,QWORD PTR [rbp-0x8]
  409429:	add    rsp,0x20
  40942d:	pop    rbp
  40942e:	ret    
  40942f:	nop

0000000000409430 <flatcc_builder_truncate_union_vector@@Base>:
  409430:	push   rbp
  409431:	mov    rbp,rsp
  409434:	sub    rsp,0x20
  409438:	mov    QWORD PTR [rbp-0x10],rdi
  40943c:	mov    QWORD PTR [rbp-0x18],rsi
  409440:	mov    rax,QWORD PTR [rbp-0x10]
  409444:	mov    rax,QWORD PTR [rax+0x30]
  409448:	movzx  ecx,WORD PTR [rax+0xe]
  40944c:	cmp    ecx,0x7
  40944f:	jne    40945a <flatcc_builder_truncate_union_vector@@Base+0x2a>
  409455:	jmp    409479 <flatcc_builder_truncate_union_vector@@Base+0x49>
  40945a:	lea    rdi,[rip+0x416d]        # 40d5ce <flatcc_builder_padding_base@@Base+0xe4e>
  409461:	lea    rsi,[rip+0x352a]        # 40c992 <flatcc_builder_padding_base@@Base+0x212>
  409468:	mov    edx,0x681
  40946d:	lea    rcx,[rip+0x41df]        # 40d653 <flatcc_builder_padding_base@@Base+0xed3>
  409474:	call   403090 <__assert_fail@plt>
  409479:	mov    rax,QWORD PTR [rbp-0x10]
  40947d:	mov    rax,QWORD PTR [rax+0x30]
  409481:	mov    ecx,DWORD PTR [rax+0x14]
  409484:	mov    rax,QWORD PTR [rbp-0x18]
  409488:	cmp    ecx,eax
  40948a:	jae    4094d7 <flatcc_builder_truncate_union_vector@@Base+0xa7>
  409490:	mov    rax,QWORD PTR [rbp-0x10]
  409494:	mov    rax,QWORD PTR [rax+0x30]
  409498:	mov    ecx,DWORD PTR [rax+0x14]
  40949b:	mov    rax,QWORD PTR [rbp-0x18]
  40949f:	cmp    ecx,eax
  4094a1:	jb     4094ac <flatcc_builder_truncate_union_vector@@Base+0x7c>
  4094a7:	jmp    4094cb <flatcc_builder_truncate_union_vector@@Base+0x9b>
  4094ac:	lea    rdi,[rip+0x3b7f]        # 40d032 <flatcc_builder_padding_base@@Base+0x8b2>
  4094b3:	lea    rsi,[rip+0x34d8]        # 40c992 <flatcc_builder_padding_base@@Base+0x212>
  4094ba:	mov    edx,0x682
  4094bf:	lea    rcx,[rip+0x418d]        # 40d653 <flatcc_builder_padding_base@@Base+0xed3>
  4094c6:	call   403090 <__assert_fail@plt>
  4094cb:	mov    DWORD PTR [rbp-0x4],0xffffffff
  4094d2:	jmp    40950f <flatcc_builder_truncate_union_vector@@Base+0xdf>
  4094d7:	mov    rax,QWORD PTR [rbp-0x18]
  4094db:	mov    rcx,QWORD PTR [rbp-0x10]
  4094df:	mov    rcx,QWORD PTR [rcx+0x30]
  4094e3:	mov    edx,DWORD PTR [rcx+0x14]
  4094e6:	sub    edx,eax
  4094e8:	mov    DWORD PTR [rcx+0x14],edx
  4094eb:	mov    rdi,QWORD PTR [rbp-0x10]
  4094ef:	mov    rcx,QWORD PTR [rbp-0x10]
  4094f3:	mov    rcx,QWORD PTR [rcx+0x30]
  4094f7:	mov    eax,DWORD PTR [rcx+0x10]
  4094fa:	mov    rcx,QWORD PTR [rbp-0x18]
  4094fe:	imul   eax,ecx
  409501:	mov    esi,eax
  409503:	call   406dc0 <flatcc_builder_truncate_vector@@Base+0xf0>
  409508:	mov    DWORD PTR [rbp-0x4],0x0
  40950f:	mov    eax,DWORD PTR [rbp-0x4]
  409512:	add    rsp,0x20
  409516:	pop    rbp
  409517:	ret    
  409518:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000409520 <flatcc_builder_union_vector_push@@Base>:
  409520:	push   rbp
  409521:	mov    rbp,rsp
  409524:	sub    rsp,0x20
  409528:	mov    QWORD PTR [rbp-0x10],rsi
  40952c:	mov    QWORD PTR [rbp-0x18],rdi
  409530:	mov    rax,QWORD PTR [rbp-0x18]
  409534:	mov    rax,QWORD PTR [rax+0x30]
  409538:	movzx  ecx,WORD PTR [rax+0xe]
  40953c:	cmp    ecx,0x7
  40953f:	jne    40954a <flatcc_builder_union_vector_push@@Base+0x2a>
  409545:	jmp    409569 <flatcc_builder_union_vector_push@@Base+0x49>
  40954a:	lea    rdi,[rip+0x407d]        # 40d5ce <flatcc_builder_padding_base@@Base+0xe4e>
  409551:	lea    rsi,[rip+0x343a]        # 40c992 <flatcc_builder_padding_base@@Base+0x212>
  409558:	mov    edx,0x68d
  40955d:	lea    rcx,[rip+0x4134]        # 40d698 <flatcc_builder_padding_base@@Base+0xf18>
  409564:	call   403090 <__assert_fail@plt>
  409569:	mov    rax,QWORD PTR [rbp-0x18]
  40956d:	mov    rax,QWORD PTR [rax+0x30]
  409571:	mov    ecx,DWORD PTR [rax+0x14]
  409574:	mov    eax,ecx
  409576:	cmp    rax,0x1fffffff
  40957c:	jne    40958f <flatcc_builder_union_vector_push@@Base+0x6f>
  409582:	mov    QWORD PTR [rbp-0x8],0x0
  40958a:	jmp    4095df <flatcc_builder_union_vector_push@@Base+0xbf>
  40958f:	mov    rax,QWORD PTR [rbp-0x18]
  409593:	mov    rax,QWORD PTR [rax+0x30]
  409597:	mov    ecx,DWORD PTR [rax+0x14]
  40959a:	add    ecx,0x1
  40959d:	mov    DWORD PTR [rax+0x14],ecx
  4095a0:	mov    rdi,QWORD PTR [rbp-0x18]
  4095a4:	mov    esi,0x8
  4095a9:	call   406450 <flatcc_builder_start_struct@@Base+0xf0>
  4095ae:	xor    ecx,ecx
  4095b0:	mov    edx,ecx
  4095b2:	mov    QWORD PTR [rbp-0x20],rax
  4095b6:	cmp    rdx,rax
  4095b9:	jne    4095cc <flatcc_builder_union_vector_push@@Base+0xac>
  4095bf:	mov    QWORD PTR [rbp-0x8],0x0
  4095c7:	jmp    4095df <flatcc_builder_union_vector_push@@Base+0xbf>
  4095cc:	mov    rax,QWORD PTR [rbp-0x20]
  4095d0:	mov    rcx,QWORD PTR [rbp-0x10]
  4095d4:	mov    QWORD PTR [rax],rcx
  4095d7:	mov    rax,QWORD PTR [rbp-0x20]
  4095db:	mov    QWORD PTR [rbp-0x8],rax
  4095df:	mov    rax,QWORD PTR [rbp-0x8]
  4095e3:	add    rsp,0x20
  4095e7:	pop    rbp
  4095e8:	ret    
  4095e9:	nop    DWORD PTR [rax+0x0]

00000000004095f0 <flatcc_builder_append_union_vector@@Base>:
  4095f0:	push   rbp
  4095f1:	mov    rbp,rsp
  4095f4:	sub    rsp,0x20
  4095f8:	mov    QWORD PTR [rbp-0x10],rdi
  4095fc:	mov    QWORD PTR [rbp-0x18],rsi
  409600:	mov    QWORD PTR [rbp-0x20],rdx
  409604:	mov    rax,QWORD PTR [rbp-0x10]
  409608:	mov    rax,QWORD PTR [rax+0x30]
  40960c:	movzx  ecx,WORD PTR [rax+0xe]
  409610:	cmp    ecx,0x7
  409613:	jne    40961e <flatcc_builder_append_union_vector@@Base+0x2e>
  409619:	jmp    40963d <flatcc_builder_append_union_vector@@Base+0x4d>
  40961e:	lea    rdi,[rip+0x3fa9]        # 40d5ce <flatcc_builder_padding_base@@Base+0xe4e>
  409625:	lea    rsi,[rip+0x3366]        # 40c992 <flatcc_builder_padding_base@@Base+0x212>
  40962c:	mov    edx,0x69c
  409631:	lea    rcx,[rip+0x40cd]        # 40d705 <flatcc_builder_padding_base@@Base+0xf85>
  409638:	call   403090 <__assert_fail@plt>
  40963d:	mov    rdi,QWORD PTR [rbp-0x10]
  409641:	mov    rax,QWORD PTR [rbp-0x20]
  409645:	mov    esi,eax
  409647:	mov    edx,0x1fffffff
  40964c:	call   406610 <flatcc_builder_extend_vector@@Base+0x70>
  409651:	cmp    eax,0x0
  409654:	je     409667 <flatcc_builder_append_union_vector@@Base+0x77>
  40965a:	mov    QWORD PTR [rbp-0x8],0x0
  409662:	jmp    409687 <flatcc_builder_append_union_vector@@Base+0x97>
  409667:	mov    rdi,QWORD PTR [rbp-0x10]
  40966b:	mov    rax,QWORD PTR [rbp-0x18]
  40966f:	mov    rcx,QWORD PTR [rbp-0x20]
  409673:	mov    ecx,ecx
  409675:	mov    edx,ecx
  409677:	shl    rdx,0x3
  40967b:	mov    rsi,rax
  40967e:	call   4067b0 <flatcc_builder_vector_push@@Base+0xf0>
  409683:	mov    QWORD PTR [rbp-0x8],rax
  409687:	mov    rax,QWORD PTR [rbp-0x8]
  40968b:	add    rsp,0x20
  40968f:	pop    rbp
  409690:	ret    
  409691:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40969b:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004096a0 <flatcc_builder_create_string@@Base>:
  4096a0:	push   rbp
  4096a1:	mov    rbp,rsp
  4096a4:	sub    rsp,0xc0
  4096ab:	mov    QWORD PTR [rbp-0x10],rdi
  4096af:	mov    QWORD PTR [rbp-0x18],rsi
  4096b3:	mov    QWORD PTR [rbp-0x20],rdx
  4096b7:	mov    eax,0xffffffff
  4096bc:	cmp    QWORD PTR [rbp-0x20],rax
  4096c0:	jbe    4096d2 <flatcc_builder_create_string@@Base+0x32>
  4096c6:	mov    DWORD PTR [rbp-0x4],0x0
  4096cd:	jmp    40986e <flatcc_builder_create_string@@Base+0x1ce>
  4096d2:	mov    rax,QWORD PTR [rbp-0x20]
  4096d6:	mov    edi,eax
  4096d8:	call   405700 <flatcc_builder_embed_buffer@@Base+0x430>
  4096dd:	mov    DWORD PTR [rbp-0x28],eax
  4096e0:	mov    rdi,QWORD PTR [rbp-0x10]
  4096e4:	mov    rcx,QWORD PTR [rbp-0x20]
  4096e8:	add    ecx,0x1
  4096eb:	mov    esi,ecx
  4096ed:	mov    edx,0x4
  4096f2:	call   4056d0 <flatcc_builder_embed_buffer@@Base+0x400>
  4096f7:	add    eax,0x1
  4096fa:	mov    DWORD PTR [rbp-0x24],eax
  4096fd:	mov    QWORD PTR [rbp-0xb8],0x0
  409708:	mov    DWORD PTR [rbp-0xb0],0x0
  409712:	mov    rdi,QWORD PTR [rbp-0xb8]
  409719:	add    rdi,0x4
  409720:	mov    QWORD PTR [rbp-0xb8],rdi
  409727:	lea    rdi,[rbp-0x28]
  40972b:	lea    r8,[rbp-0xb8]
  409732:	mov    r9,r8
  409735:	add    r9,0x10
  40973c:	movsxd r10,DWORD PTR [rbp-0xb0]
  409743:	shl    r10,0x4
  409747:	add    r9,r10
  40974a:	mov    QWORD PTR [r9],rdi
  40974d:	add    r8,0x10
  409754:	movsxd rdi,DWORD PTR [rbp-0xb0]
  40975b:	shl    rdi,0x4
  40975f:	add    r8,rdi
  409762:	mov    QWORD PTR [r8+0x8],0x4
  40976a:	mov    eax,DWORD PTR [rbp-0xb0]
  409770:	add    eax,0x1
  409773:	mov    DWORD PTR [rbp-0xb0],eax
  409779:	cmp    QWORD PTR [rbp-0x20],0x0
  40977e:	jbe    4097e8 <flatcc_builder_create_string@@Base+0x148>
  409784:	mov    rax,QWORD PTR [rbp-0x20]
  409788:	add    rax,QWORD PTR [rbp-0xb8]
  40978f:	mov    QWORD PTR [rbp-0xb8],rax
  409796:	mov    rax,QWORD PTR [rbp-0x18]
  40979a:	lea    rcx,[rbp-0xb8]
  4097a1:	mov    rdx,rcx
  4097a4:	add    rdx,0x10
  4097ab:	movsxd rsi,DWORD PTR [rbp-0xb0]
  4097b2:	shl    rsi,0x4
  4097b6:	add    rdx,rsi
  4097b9:	mov    QWORD PTR [rdx],rax
  4097bc:	mov    rax,QWORD PTR [rbp-0x20]
  4097c0:	add    rcx,0x10
  4097c7:	movsxd rdx,DWORD PTR [rbp-0xb0]
  4097ce:	shl    rdx,0x4
  4097d2:	add    rcx,rdx
  4097d5:	mov    QWORD PTR [rcx+0x8],rax
  4097d9:	mov    edi,DWORD PTR [rbp-0xb0]
  4097df:	add    edi,0x1
  4097e2:	mov    DWORD PTR [rbp-0xb0],edi
  4097e8:	cmp    DWORD PTR [rbp-0x24],0x0
  4097ec:	jbe    40985b <flatcc_builder_create_string@@Base+0x1bb>
  4097f2:	lea    rax,[rip+0x2f87]        # 40c780 <flatcc_builder_padding_base@@Base>
  4097f9:	mov    ecx,DWORD PTR [rbp-0x24]
  4097fc:	mov    edx,ecx
  4097fe:	add    rdx,QWORD PTR [rbp-0xb8]
  409805:	mov    QWORD PTR [rbp-0xb8],rdx
  40980c:	lea    rdx,[rbp-0xb8]
  409813:	mov    rsi,rdx
  409816:	add    rsi,0x10
  40981d:	movsxd rdi,DWORD PTR [rbp-0xb0]
  409824:	shl    rdi,0x4
  409828:	add    rsi,rdi
  40982b:	mov    QWORD PTR [rsi],rax
  40982e:	mov    ecx,DWORD PTR [rbp-0x24]
  409831:	mov    eax,ecx
  409833:	add    rdx,0x10
  40983a:	movsxd rsi,DWORD PTR [rbp-0xb0]
  409841:	shl    rsi,0x4
  409845:	add    rdx,rsi
  409848:	mov    QWORD PTR [rdx+0x8],rax
  40984c:	mov    ecx,DWORD PTR [rbp-0xb0]
  409852:	add    ecx,0x1
  409855:	mov    DWORD PTR [rbp-0xb0],ecx
  40985b:	mov    rdi,QWORD PTR [rbp-0x10]
  40985f:	lea    rsi,[rbp-0xb8]
  409866:	call   405710 <flatcc_builder_embed_buffer@@Base+0x440>
  40986b:	mov    DWORD PTR [rbp-0x4],eax
  40986e:	mov    eax,DWORD PTR [rbp-0x4]
  409871:	add    rsp,0xc0
  409878:	pop    rbp
  409879:	ret    
  40987a:	nop    WORD PTR [rax+rax*1+0x0]

0000000000409880 <flatcc_builder_create_string_str@@Base>:
  409880:	push   rbp
  409881:	mov    rbp,rsp
  409884:	sub    rsp,0x20
  409888:	mov    QWORD PTR [rbp-0x8],rdi
  40988c:	mov    QWORD PTR [rbp-0x10],rsi
  409890:	mov    rdi,QWORD PTR [rbp-0x8]
  409894:	mov    rsi,QWORD PTR [rbp-0x10]
  409898:	mov    rax,QWORD PTR [rbp-0x10]
  40989c:	mov    QWORD PTR [rbp-0x18],rdi
  4098a0:	mov    rdi,rax
  4098a3:	mov    QWORD PTR [rbp-0x20],rsi
  4098a7:	call   403060 <strlen@plt>
  4098ac:	mov    rdi,QWORD PTR [rbp-0x18]
  4098b0:	mov    rsi,QWORD PTR [rbp-0x20]
  4098b4:	mov    rdx,rax
  4098b7:	call   4096a0 <flatcc_builder_create_string@@Base>
  4098bc:	add    rsp,0x20
  4098c0:	pop    rbp
  4098c1:	ret    
  4098c2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4098cc:	nop    DWORD PTR [rax+0x0]

00000000004098d0 <flatcc_builder_create_string_strn@@Base>:
  4098d0:	push   rbp
  4098d1:	mov    rbp,rsp
  4098d4:	sub    rsp,0x30
  4098d8:	mov    QWORD PTR [rbp-0x8],rdi
  4098dc:	mov    QWORD PTR [rbp-0x10],rsi
  4098e0:	mov    QWORD PTR [rbp-0x18],rdx
  4098e4:	mov    rdi,QWORD PTR [rbp-0x8]
  4098e8:	mov    rsi,QWORD PTR [rbp-0x10]
  4098ec:	mov    rax,QWORD PTR [rbp-0x10]
  4098f0:	mov    rcx,QWORD PTR [rbp-0x18]
  4098f4:	mov    QWORD PTR [rbp-0x20],rdi
  4098f8:	mov    rdi,rax
  4098fb:	mov    QWORD PTR [rbp-0x28],rsi
  4098ff:	mov    rsi,rcx
  409902:	call   406c70 <flatcc_builder_append_string_strn@@Base+0x50>
  409907:	mov    rdi,QWORD PTR [rbp-0x20]
  40990b:	mov    rsi,QWORD PTR [rbp-0x28]
  40990f:	mov    rdx,rax
  409912:	call   4096a0 <flatcc_builder_create_string@@Base>
  409917:	add    rsp,0x30
  40991b:	pop    rbp
  40991c:	ret    
  40991d:	nop    DWORD PTR [rax]

0000000000409920 <flatcc_builder_end_string@@Base>:
  409920:	push   rbp
  409921:	mov    rbp,rsp
  409924:	sub    rsp,0x20
  409928:	mov    QWORD PTR [rbp-0x10],rdi
  40992c:	mov    rax,QWORD PTR [rbp-0x10]
  409930:	mov    rax,QWORD PTR [rax+0x30]
  409934:	movzx  ecx,WORD PTR [rax+0xe]
  409938:	cmp    ecx,0x6
  40993b:	jne    409946 <flatcc_builder_end_string@@Base+0x26>
  409941:	jmp    409965 <flatcc_builder_end_string@@Base+0x45>
  409946:	lea    rdi,[rip+0x3584]        # 40ced1 <flatcc_builder_padding_base@@Base+0x751>
  40994d:	lea    rsi,[rip+0x303e]        # 40c992 <flatcc_builder_padding_base@@Base+0x212>
  409954:	mov    edx,0x6c4
  409959:	lea    rcx,[rip+0x3e24]        # 40d784 <flatcc_builder_padding_base@@Base+0x1004>
  409960:	call   403090 <__assert_fail@plt>
  409965:	mov    rax,QWORD PTR [rbp-0x10]
  409969:	mov    rax,QWORD PTR [rax+0x30]
  40996d:	mov    ecx,DWORD PTR [rax+0x14]
  409970:	mov    rax,QWORD PTR [rbp-0x10]
  409974:	cmp    ecx,DWORD PTR [rax+0x20]
  409977:	jne    409982 <flatcc_builder_end_string@@Base+0x62>
  40997d:	jmp    4099a1 <flatcc_builder_end_string@@Base+0x81>
  409982:	lea    rdi,[rip+0x3e3e]        # 40d7c7 <flatcc_builder_padding_base@@Base+0x1047>
  409989:	lea    rsi,[rip+0x3002]        # 40c992 <flatcc_builder_padding_base@@Base+0x212>
  409990:	mov    edx,0x6c5
  409995:	lea    rcx,[rip+0x3de8]        # 40d784 <flatcc_builder_padding_base@@Base+0x1004>
  40999c:	call   403090 <__assert_fail@plt>
  4099a1:	mov    rdi,QWORD PTR [rbp-0x10]
  4099a5:	mov    rax,QWORD PTR [rbp-0x10]
  4099a9:	mov    rsi,QWORD PTR [rax+0x18]
  4099ad:	mov    rax,QWORD PTR [rbp-0x10]
  4099b1:	mov    ecx,DWORD PTR [rax+0x20]
  4099b4:	mov    edx,ecx
  4099b6:	call   4096a0 <flatcc_builder_create_string@@Base>
  4099bb:	xor    ecx,ecx
  4099bd:	mov    DWORD PTR [rbp-0x14],eax
  4099c0:	cmp    ecx,eax
  4099c2:	jne    4099d4 <flatcc_builder_end_string@@Base+0xb4>
  4099c8:	mov    DWORD PTR [rbp-0x4],0x0
  4099cf:	jmp    4099e3 <flatcc_builder_end_string@@Base+0xc3>
  4099d4:	mov    rdi,QWORD PTR [rbp-0x10]
  4099d8:	call   4062a0 <flatcc_builder_end_buffer@@Base+0x160>
  4099dd:	mov    eax,DWORD PTR [rbp-0x14]
  4099e0:	mov    DWORD PTR [rbp-0x4],eax
  4099e3:	mov    eax,DWORD PTR [rbp-0x4]
  4099e6:	add    rsp,0x20
  4099ea:	pop    rbp
  4099eb:	ret    
  4099ec:	nop    DWORD PTR [rax+0x0]

00000000004099f0 <flatcc_builder_string_edit@@Base>:
  4099f0:	push   rbp
  4099f1:	mov    rbp,rsp
  4099f4:	mov    QWORD PTR [rbp-0x8],rdi
  4099f8:	mov    rax,QWORD PTR [rbp-0x8]
  4099fc:	mov    rax,QWORD PTR [rax+0x18]
  409a00:	pop    rbp
  409a01:	ret    
  409a02:	nop    WORD PTR cs:[rax+rax*1+0x0]
  409a0c:	nop    DWORD PTR [rax+0x0]

0000000000409a10 <flatcc_builder_string_len@@Base>:
  409a10:	push   rbp
  409a11:	mov    rbp,rsp
  409a14:	mov    QWORD PTR [rbp-0x8],rdi
  409a18:	mov    rax,QWORD PTR [rbp-0x8]
  409a1c:	mov    rax,QWORD PTR [rax+0x30]
  409a20:	mov    ecx,DWORD PTR [rax+0x14]
  409a23:	mov    eax,ecx
  409a25:	pop    rbp
  409a26:	ret    
  409a27:	nop    WORD PTR [rax+rax*1+0x0]
  409a30:	push   rbp
  409a31:	mov    rbp,rsp
  409a34:	sub    rsp,0x20
  409a38:	mov    QWORD PTR [rbp-0x10],rdi
  409a3c:	mov    DWORD PTR [rbp-0x14],esi
  409a3f:	mov    WORD PTR [rbp-0x16],dx
  409a43:	mov    WORD PTR [rbp-0x18],cx
  409a47:	mov    rax,QWORD PTR [rbp-0x10]
  409a4b:	mov    esi,DWORD PTR [rax+0x20]
  409a4e:	movzx  r8d,WORD PTR [rbp-0x16]
  409a53:	add    esi,r8d
  409a56:	sub    esi,0x1
  409a59:	movzx  r8d,WORD PTR [rbp-0x16]
  409a5e:	sub    r8d,0x1
  409a62:	xor    r8d,0xffffffff
  409a66:	and    esi,r8d
  409a69:	mov    DWORD PTR [rbp-0x1c],esi
  409a6c:	mov    esi,DWORD PTR [rbp-0x1c]
  409a6f:	add    esi,DWORD PTR [rbp-0x14]
  409a72:	mov    rax,QWORD PTR [rbp-0x10]
  409a76:	mov    DWORD PTR [rax+0x20],esi
  409a79:	mov    rax,QWORD PTR [rbp-0x10]
  409a7d:	cmp    esi,DWORD PTR [rax+0x24]
  409a80:	jb     409abd <flatcc_builder_string_len@@Base+0xad>
  409a86:	mov    rdi,QWORD PTR [rbp-0x10]
  409a8a:	mov    rax,QWORD PTR [rbp-0x10]
  409a8e:	mov    ecx,DWORD PTR [rax+0x20]
  409a91:	add    ecx,0x1
  409a94:	mov    ecx,ecx
  409a96:	mov    esi,ecx
  409a98:	mov    edx,0xfffc
  409a9d:	call   40a430 <flatcc_builder_get_emit_context@@Base+0x50>
  409aa2:	cmp    eax,0x0
  409aa5:	je     409ab8 <flatcc_builder_string_len@@Base+0xa8>
  409aab:	mov    QWORD PTR [rbp-0x8],0x0
  409ab3:	jmp    409b12 <flatcc_builder_string_len@@Base+0x102>
  409ab8:	jmp    409abd <flatcc_builder_string_len@@Base+0xad>
  409abd:	mov    eax,DWORD PTR [rbp-0x1c]
  409ac0:	mov    ecx,eax
  409ac2:	add    rcx,0x4
  409ac9:	mov    rdx,QWORD PTR [rbp-0x10]
  409acd:	mov    rdx,QWORD PTR [rdx+0x8]
  409ad1:	movzx  eax,WORD PTR [rbp-0x18]
  409ad5:	mov    esi,eax
  409ad7:	mov    WORD PTR [rdx+rsi*2],cx
  409adb:	movzx  eax,WORD PTR [rbp-0x18]
  409adf:	mov    rdx,QWORD PTR [rbp-0x10]
  409ae3:	movzx  edi,WORD PTR [rdx+0x10]
  409ae7:	cmp    eax,edi
  409ae9:	jl     409afe <flatcc_builder_string_len@@Base+0xee>
  409aef:	movzx  eax,WORD PTR [rbp-0x18]
  409af3:	add    eax,0x1
  409af6:	mov    rcx,QWORD PTR [rbp-0x10]
  409afa:	mov    WORD PTR [rcx+0x10],ax
  409afe:	mov    rax,QWORD PTR [rbp-0x10]
  409b02:	mov    rax,QWORD PTR [rax+0x18]
  409b06:	mov    ecx,DWORD PTR [rbp-0x1c]
  409b09:	mov    edx,ecx
  409b0b:	add    rax,rdx
  409b0e:	mov    QWORD PTR [rbp-0x8],rax
  409b12:	mov    rax,QWORD PTR [rbp-0x8]
  409b16:	add    rsp,0x20
  409b1a:	pop    rbp
  409b1b:	ret    
  409b1c:	nop    DWORD PTR [rax+0x0]

0000000000409b20 <flatcc_builder_table_edit@@Base>:
  409b20:	push   rbp
  409b21:	mov    rbp,rsp
  409b24:	sub    rsp,0x10
  409b28:	mov    QWORD PTR [rbp-0x8],rdi
  409b2c:	mov    QWORD PTR [rbp-0x10],rsi
  409b30:	mov    rax,QWORD PTR [rbp-0x8]
  409b34:	mov    rax,QWORD PTR [rax+0x30]
  409b38:	movzx  ecx,WORD PTR [rax+0xe]
  409b3c:	cmp    ecx,0x3
  409b3f:	jne    409b4a <flatcc_builder_table_edit@@Base+0x2a>
  409b45:	jmp    409b69 <flatcc_builder_table_edit@@Base+0x49>
  409b4a:	lea    rdi,[rip+0x3670]        # 40d1c1 <flatcc_builder_padding_base@@Base+0xa41>
  409b51:	lea    rsi,[rip+0x2e3a]        # 40c992 <flatcc_builder_padding_base@@Base+0x212>
  409b58:	mov    edx,0x702
  409b5d:	lea    rcx,[rip+0x3d15]        # 40d879 <flatcc_builder_padding_base@@Base+0x10f9>
  409b64:	call   403090 <__assert_fail@plt>
  409b69:	xor    eax,eax
  409b6b:	mov    ecx,eax
  409b6d:	mov    rdx,QWORD PTR [rbp-0x8]
  409b71:	mov    rdx,QWORD PTR [rdx+0x18]
  409b75:	mov    rsi,QWORD PTR [rbp-0x8]
  409b79:	mov    eax,DWORD PTR [rsi+0x20]
  409b7c:	mov    esi,eax
  409b7e:	add    rdx,rsi
  409b81:	sub    rcx,QWORD PTR [rbp-0x10]
  409b85:	add    rdx,rcx
  409b88:	mov    rax,rdx
  409b8b:	add    rsp,0x10
  409b8f:	pop    rbp
  409b90:	ret    
  409b91:	nop    WORD PTR cs:[rax+rax*1+0x0]
  409b9b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000409ba0 <flatcc_builder_table_add_copy@@Base>:
  409ba0:	push   rbp
  409ba1:	mov    rbp,rsp
  409ba4:	sub    rsp,0x30
  409ba8:	mov    QWORD PTR [rbp-0x8],rdi
  409bac:	mov    DWORD PTR [rbp-0xc],esi
  409baf:	mov    QWORD PTR [rbp-0x18],rdx
  409bb3:	mov    QWORD PTR [rbp-0x20],rcx
  409bb7:	mov    WORD PTR [rbp-0x22],r8w
  409bbc:	mov    rdi,QWORD PTR [rbp-0x8]
  409bc0:	mov    esi,DWORD PTR [rbp-0xc]
  409bc3:	mov    rdx,QWORD PTR [rbp-0x20]
  409bc7:	movzx  ecx,WORD PTR [rbp-0x22]
  409bcb:	call   408d20 <flatcc_builder_table_add@@Base>
  409bd0:	mov    QWORD PTR [rbp-0x30],rax
  409bd4:	cmp    rax,0x0
  409bd8:	je     409bef <flatcc_builder_table_add_copy@@Base+0x4f>
  409bde:	mov    rdi,QWORD PTR [rbp-0x30]
  409be2:	mov    rsi,QWORD PTR [rbp-0x18]
  409be6:	mov    rdx,QWORD PTR [rbp-0x20]
  409bea:	call   4030e0 <memcpy@plt>
  409bef:	mov    rax,QWORD PTR [rbp-0x30]
  409bf3:	add    rsp,0x30
  409bf7:	pop    rbp
  409bf8:	ret    
  409bf9:	nop    DWORD PTR [rax+0x0]
  409c00:	push   rbp
  409c01:	mov    rbp,rsp
  409c04:	sub    rsp,0x20
  409c08:	mov    QWORD PTR [rbp-0x10],rdi
  409c0c:	mov    WORD PTR [rbp-0x12],si
  409c10:	mov    rax,QWORD PTR [rbp-0x10]
  409c14:	mov    ecx,DWORD PTR [rax+0x20]
  409c17:	mov    eax,ecx
  409c19:	add    rax,0x4
  409c1f:	sub    rax,0x1
  409c25:	and    rax,0xfffffffffffffffc
  409c2b:	mov    DWORD PTR [rbp-0x18],eax
  409c2e:	mov    eax,DWORD PTR [rbp-0x18]
  409c31:	mov    edx,eax
  409c33:	add    rdx,0x4
  409c3a:	mov    rdi,QWORD PTR [rbp-0x10]
  409c3e:	mov    DWORD PTR [rdi+0x20],edx
  409c41:	mov    rdi,QWORD PTR [rbp-0x10]
  409c45:	cmp    edx,DWORD PTR [rdi+0x24]
  409c48:	jbe    409c80 <flatcc_builder_table_add_copy@@Base+0xe0>
  409c4e:	mov    rdi,QWORD PTR [rbp-0x10]
  409c52:	mov    rax,QWORD PTR [rbp-0x10]
  409c56:	mov    ecx,DWORD PTR [rax+0x20]
  409c59:	mov    esi,ecx
  409c5b:	mov    edx,0xfffc
  409c60:	call   40a430 <flatcc_builder_get_emit_context@@Base+0x50>
  409c65:	cmp    eax,0x0
  409c68:	je     409c7b <flatcc_builder_table_add_copy@@Base+0xdb>
  409c6e:	mov    QWORD PTR [rbp-0x8],0x0
  409c76:	jmp    409cef <flatcc_builder_table_add_copy@@Base+0x14f>
  409c7b:	jmp    409c80 <flatcc_builder_table_add_copy@@Base+0xe0>
  409c80:	mov    eax,DWORD PTR [rbp-0x18]
  409c83:	mov    ecx,eax
  409c85:	add    rcx,0x4
  409c8c:	mov    rdx,QWORD PTR [rbp-0x10]
  409c90:	mov    rdx,QWORD PTR [rdx+0x8]
  409c94:	movzx  eax,WORD PTR [rbp-0x12]
  409c98:	mov    esi,eax
  409c9a:	mov    WORD PTR [rdx+rsi*2],cx
  409c9e:	movzx  eax,WORD PTR [rbp-0x12]
  409ca2:	mov    rdx,QWORD PTR [rbp-0x10]
  409ca6:	movzx  edi,WORD PTR [rdx+0x10]
  409caa:	cmp    eax,edi
  409cac:	jl     409cc1 <flatcc_builder_table_add_copy@@Base+0x121>
  409cb2:	movzx  eax,WORD PTR [rbp-0x12]
  409cb6:	add    eax,0x1
  409cb9:	mov    rcx,QWORD PTR [rbp-0x10]
  409cbd:	mov    WORD PTR [rcx+0x10],ax
  409cc1:	mov    eax,DWORD PTR [rbp-0x18]
  409cc4:	mov    rcx,QWORD PTR [rbp-0x10]
  409cc8:	mov    rdx,QWORD PTR [rcx]
  409ccb:	mov    rsi,rdx
  409cce:	add    rsi,0x2
  409cd5:	mov    QWORD PTR [rcx],rsi
  409cd8:	mov    WORD PTR [rdx],ax
  409cdb:	mov    rcx,QWORD PTR [rbp-0x10]
  409cdf:	mov    rcx,QWORD PTR [rcx+0x18]
  409ce3:	mov    edi,DWORD PTR [rbp-0x18]
  409ce6:	mov    edx,edi
  409ce8:	add    rcx,rdx
  409ceb:	mov    QWORD PTR [rbp-0x8],rcx
  409cef:	mov    rax,QWORD PTR [rbp-0x8]
  409cf3:	add    rsp,0x20
  409cf7:	pop    rbp
  409cf8:	ret    
  409cf9:	nop    DWORD PTR [rax+0x0]

0000000000409d00 <flatcc_builder_push_buffer_alignment@@Base>:
  409d00:	push   rbp
  409d01:	mov    rbp,rsp
  409d04:	mov    QWORD PTR [rbp-0x8],rdi
  409d08:	mov    rax,QWORD PTR [rbp-0x8]
  409d0c:	mov    cx,WORD PTR [rax+0xe8]
  409d13:	mov    WORD PTR [rbp-0xa],cx
  409d17:	mov    rax,QWORD PTR [rbp-0x8]
  409d1b:	mov    WORD PTR [rax+0xe8],0x4
  409d24:	movzx  eax,WORD PTR [rbp-0xa]
  409d28:	pop    rbp
  409d29:	ret    
  409d2a:	nop    WORD PTR [rax+rax*1+0x0]

0000000000409d30 <flatcc_builder_pop_buffer_alignment@@Base>:
  409d30:	push   rbp
  409d31:	mov    rbp,rsp
  409d34:	sub    rsp,0x10
  409d38:	mov    QWORD PTR [rbp-0x8],rdi
  409d3c:	mov    WORD PTR [rbp-0xa],si
  409d40:	mov    rdi,QWORD PTR [rbp-0x8]
  409d44:	movzx  esi,WORD PTR [rbp-0xa]
  409d48:	call   405c30 <flatcc_builder_create_buffer@@Base+0x420>
  409d4d:	add    rsp,0x10
  409d51:	pop    rbp
  409d52:	ret    
  409d53:	nop    WORD PTR cs:[rax+rax*1+0x0]
  409d5d:	nop    DWORD PTR [rax]

0000000000409d60 <flatcc_builder_get_buffer_alignment@@Base>:
  409d60:	push   rbp
  409d61:	mov    rbp,rsp
  409d64:	mov    QWORD PTR [rbp-0x8],rdi
  409d68:	mov    rax,QWORD PTR [rbp-0x8]
  409d6c:	movzx  eax,WORD PTR [rax+0xe8]
  409d73:	pop    rbp
  409d74:	ret    
  409d75:	nop    WORD PTR cs:[rax+rax*1+0x0]
  409d7f:	nop

0000000000409d80 <flatcc_builder_set_vtable_clustering@@Base>:
  409d80:	push   rbp
  409d81:	mov    rbp,rsp
  409d84:	mov    QWORD PTR [rbp-0x8],rdi
  409d88:	mov    DWORD PTR [rbp-0xc],esi
  409d8b:	cmp    DWORD PTR [rbp-0xc],0x0
  409d8f:	setne  al
  409d92:	xor    al,0xff
  409d94:	and    al,0x1
  409d96:	movzx  ecx,al
  409d99:	mov    rdx,QWORD PTR [rbp-0x8]
  409d9d:	mov    DWORD PTR [rdx+0x124],ecx
  409da3:	pop    rbp
  409da4:	ret    
  409da5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  409daf:	nop

0000000000409db0 <flatcc_builder_set_block_align@@Base>:
  409db0:	push   rbp
  409db1:	mov    rbp,rsp
  409db4:	mov    QWORD PTR [rbp-0x8],rdi
  409db8:	mov    WORD PTR [rbp-0xa],si
  409dbc:	mov    ax,WORD PTR [rbp-0xa]
  409dc0:	mov    rcx,QWORD PTR [rbp-0x8]
  409dc4:	mov    WORD PTR [rcx+0xec],ax
  409dcb:	pop    rbp
  409dcc:	ret    
  409dcd:	nop    DWORD PTR [rax]

0000000000409dd0 <flatcc_builder_get_level@@Base>:
  409dd0:	push   rbp
  409dd1:	mov    rbp,rsp
  409dd4:	mov    QWORD PTR [rbp-0x8],rdi
  409dd8:	mov    rax,QWORD PTR [rbp-0x8]
  409ddc:	mov    eax,DWORD PTR [rax+0x104]
  409de2:	pop    rbp
  409de3:	ret    
  409de4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  409dee:	xchg   ax,ax

0000000000409df0 <flatcc_builder_set_max_level@@Base>:
  409df0:	push   rbp
  409df1:	mov    rbp,rsp
  409df4:	mov    QWORD PTR [rbp-0x8],rdi
  409df8:	mov    DWORD PTR [rbp-0xc],esi
  409dfb:	mov    eax,DWORD PTR [rbp-0xc]
  409dfe:	mov    rcx,QWORD PTR [rbp-0x8]
  409e02:	mov    DWORD PTR [rcx+0x120],eax
  409e08:	mov    rcx,QWORD PTR [rbp-0x8]
  409e0c:	mov    eax,DWORD PTR [rcx+0x108]
  409e12:	mov    rcx,QWORD PTR [rbp-0x8]
  409e16:	cmp    eax,DWORD PTR [rcx+0x120]
  409e1c:	jge    409e36 <flatcc_builder_set_max_level@@Base+0x46>
  409e22:	mov    rax,QWORD PTR [rbp-0x8]
  409e26:	mov    ecx,DWORD PTR [rax+0x120]
  409e2c:	mov    rax,QWORD PTR [rbp-0x8]
  409e30:	mov    DWORD PTR [rax+0x108],ecx
  409e36:	pop    rbp
  409e37:	ret    
  409e38:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000409e40 <flatcc_builder_get_buffer_size@@Base>:
  409e40:	push   rbp
  409e41:	mov    rbp,rsp
  409e44:	mov    QWORD PTR [rbp-0x8],rdi
  409e48:	mov    rax,QWORD PTR [rbp-0x8]
  409e4c:	mov    ecx,DWORD PTR [rax+0xf4]
  409e52:	mov    rax,QWORD PTR [rbp-0x8]
  409e56:	sub    ecx,DWORD PTR [rax+0xf0]
  409e5c:	movsxd rax,ecx
  409e5f:	pop    rbp
  409e60:	ret    
  409e61:	nop    WORD PTR cs:[rax+rax*1+0x0]
  409e6b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000409e70 <flatcc_builder_get_buffer_start@@Base>:
  409e70:	push   rbp
  409e71:	mov    rbp,rsp
  409e74:	mov    QWORD PTR [rbp-0x8],rdi
  409e78:	mov    rax,QWORD PTR [rbp-0x8]
  409e7c:	mov    eax,DWORD PTR [rax+0xf0]
  409e82:	pop    rbp
  409e83:	ret    
  409e84:	nop    WORD PTR cs:[rax+rax*1+0x0]
  409e8e:	xchg   ax,ax

0000000000409e90 <flatcc_builder_get_buffer_end@@Base>:
  409e90:	push   rbp
  409e91:	mov    rbp,rsp
  409e94:	mov    QWORD PTR [rbp-0x8],rdi
  409e98:	mov    rax,QWORD PTR [rbp-0x8]
  409e9c:	mov    eax,DWORD PTR [rax+0xf4]
  409ea2:	pop    rbp
  409ea3:	ret    
  409ea4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  409eae:	xchg   ax,ax

0000000000409eb0 <flatcc_builder_set_vtable_cache_limit@@Base>:
  409eb0:	push   rbp
  409eb1:	mov    rbp,rsp
  409eb4:	mov    QWORD PTR [rbp-0x8],rdi
  409eb8:	mov    QWORD PTR [rbp-0x10],rsi
  409ebc:	mov    rax,QWORD PTR [rbp-0x10]
  409ec0:	mov    rcx,QWORD PTR [rbp-0x8]
  409ec4:	mov    QWORD PTR [rcx+0x118],rax
  409ecb:	pop    rbp
  409ecc:	ret    
  409ecd:	nop    DWORD PTR [rax]

0000000000409ed0 <flatcc_builder_set_identifier@@Base>:
  409ed0:	push   rbp
  409ed1:	mov    rbp,rsp
  409ed4:	mov    QWORD PTR [rbp-0x8],rdi
  409ed8:	mov    QWORD PTR [rbp-0x10],rsi
  409edc:	mov    rax,QWORD PTR [rbp-0x8]
  409ee0:	add    rax,0x110
  409ee6:	cmp    QWORD PTR [rbp-0x10],0x0
  409eeb:	mov    QWORD PTR [rbp-0x18],rax
  409eef:	je     409f02 <flatcc_builder_set_identifier@@Base+0x32>
  409ef5:	mov    rax,QWORD PTR [rbp-0x10]
  409ef9:	mov    QWORD PTR [rbp-0x20],rax
  409efd:	jmp    409f12 <flatcc_builder_set_identifier@@Base+0x42>
  409f02:	lea    rax,[rip+0x2877]        # 40c780 <flatcc_builder_padding_base@@Base>
  409f09:	mov    QWORD PTR [rbp-0x20],rax
  409f0d:	jmp    409f12 <flatcc_builder_set_identifier@@Base+0x42>
  409f12:	mov    rax,QWORD PTR [rbp-0x20]
  409f16:	mov    ecx,DWORD PTR [rax]
  409f18:	mov    rax,QWORD PTR [rbp-0x18]
  409f1c:	mov    DWORD PTR [rax],ecx
  409f1e:	pop    rbp
  409f1f:	ret    

0000000000409f20 <flatcc_builder_get_type@@Base>:
  409f20:	push   rbp
  409f21:	mov    rbp,rsp
  409f24:	mov    QWORD PTR [rbp-0x8],rdi
  409f28:	mov    rax,QWORD PTR [rbp-0x8]
  409f2c:	cmp    QWORD PTR [rax+0x30],0x0
  409f31:	je     409f4b <flatcc_builder_get_type@@Base+0x2b>
  409f37:	mov    rax,QWORD PTR [rbp-0x8]
  409f3b:	mov    rax,QWORD PTR [rax+0x30]
  409f3f:	movzx  ecx,WORD PTR [rax+0xe]
  409f43:	mov    DWORD PTR [rbp-0xc],ecx
  409f46:	jmp    409f55 <flatcc_builder_get_type@@Base+0x35>
  409f4b:	xor    eax,eax
  409f4d:	mov    DWORD PTR [rbp-0xc],eax
  409f50:	jmp    409f55 <flatcc_builder_get_type@@Base+0x35>
  409f55:	mov    eax,DWORD PTR [rbp-0xc]
  409f58:	pop    rbp
  409f59:	ret    
  409f5a:	nop    WORD PTR [rax+rax*1+0x0]

0000000000409f60 <flatcc_builder_get_type_at@@Base>:
  409f60:	push   rbp
  409f61:	mov    rbp,rsp
  409f64:	mov    QWORD PTR [rbp-0x10],rdi
  409f68:	mov    DWORD PTR [rbp-0x14],esi
  409f6b:	cmp    DWORD PTR [rbp-0x14],0x1
  409f6f:	jl     409f88 <flatcc_builder_get_type_at@@Base+0x28>
  409f75:	mov    eax,DWORD PTR [rbp-0x14]
  409f78:	mov    rcx,QWORD PTR [rbp-0x10]
  409f7c:	cmp    eax,DWORD PTR [rcx+0x104]
  409f82:	jle    409f94 <flatcc_builder_get_type_at@@Base+0x34>
  409f88:	mov    DWORD PTR [rbp-0x4],0x0
  409f8f:	jmp    409fbd <flatcc_builder_get_type_at@@Base+0x5d>
  409f94:	mov    rax,QWORD PTR [rbp-0x10]
  409f98:	mov    rax,QWORD PTR [rax+0x30]
  409f9c:	mov    ecx,DWORD PTR [rbp-0x14]
  409f9f:	mov    rdx,QWORD PTR [rbp-0x10]
  409fa3:	sub    ecx,DWORD PTR [rdx+0x104]
  409fa9:	movsxd rdx,ecx
  409fac:	imul   rdx,rdx,0x24
  409fb3:	add    rax,rdx
  409fb6:	movzx  ecx,WORD PTR [rax+0xe]
  409fba:	mov    DWORD PTR [rbp-0x4],ecx
  409fbd:	mov    eax,DWORD PTR [rbp-0x4]
  409fc0:	pop    rbp
  409fc1:	ret    
  409fc2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  409fcc:	nop    DWORD PTR [rax+0x0]

0000000000409fd0 <flatcc_builder_get_direct_buffer@@Base>:
  409fd0:	push   rbp
  409fd1:	mov    rbp,rsp
  409fd4:	sub    rsp,0x20
  409fd8:	mov    QWORD PTR [rbp-0x10],rdi
  409fdc:	mov    QWORD PTR [rbp-0x18],rsi
  409fe0:	mov    rax,QWORD PTR [rbp-0x10]
  409fe4:	cmp    DWORD PTR [rax+0x128],0x0
  409feb:	je     40a010 <flatcc_builder_get_direct_buffer@@Base+0x40>
  409ff1:	mov    rax,QWORD PTR [rbp-0x10]
  409ff5:	add    rax,0x130
  409ffb:	mov    rsi,QWORD PTR [rbp-0x18]
  409fff:	mov    rdi,rax
  40a002:	call   40a040 <flatcc_builder_get_direct_buffer@@Base+0x70>
  40a007:	mov    QWORD PTR [rbp-0x8],rax
  40a00b:	jmp    40a033 <flatcc_builder_get_direct_buffer@@Base+0x63>
  40a010:	cmp    QWORD PTR [rbp-0x18],0x0
  40a015:	je     40a026 <flatcc_builder_get_direct_buffer@@Base+0x56>
  40a01b:	mov    rax,QWORD PTR [rbp-0x18]
  40a01f:	mov    QWORD PTR [rax],0x0
  40a026:	jmp    40a02b <flatcc_builder_get_direct_buffer@@Base+0x5b>
  40a02b:	mov    QWORD PTR [rbp-0x8],0x0
  40a033:	mov    rax,QWORD PTR [rbp-0x8]
  40a037:	add    rsp,0x20
  40a03b:	pop    rbp
  40a03c:	ret    
  40a03d:	nop    DWORD PTR [rax]
  40a040:	push   rbp
  40a041:	mov    rbp,rsp
  40a044:	mov    QWORD PTR [rbp-0x10],rdi
  40a048:	mov    QWORD PTR [rbp-0x18],rsi
  40a04c:	mov    rax,QWORD PTR [rbp-0x10]
  40a050:	mov    rax,QWORD PTR [rax]
  40a053:	mov    rcx,QWORD PTR [rbp-0x10]
  40a057:	cmp    rax,QWORD PTR [rcx+0x8]
  40a05b:	jne    40a08c <flatcc_builder_get_direct_buffer@@Base+0xbc>
  40a061:	cmp    QWORD PTR [rbp-0x18],0x0
  40a066:	je     40a07b <flatcc_builder_get_direct_buffer@@Base+0xab>
  40a06c:	mov    rax,QWORD PTR [rbp-0x10]
  40a070:	mov    rax,QWORD PTR [rax+0x30]
  40a074:	mov    rcx,QWORD PTR [rbp-0x18]
  40a078:	mov    QWORD PTR [rcx],rax
  40a07b:	mov    rax,QWORD PTR [rbp-0x10]
  40a07f:	mov    rax,QWORD PTR [rax+0x10]
  40a083:	mov    QWORD PTR [rbp-0x8],rax
  40a087:	jmp    40a0aa <flatcc_builder_get_direct_buffer@@Base+0xda>
  40a08c:	cmp    QWORD PTR [rbp-0x18],0x0
  40a091:	je     40a0a2 <flatcc_builder_get_direct_buffer@@Base+0xd2>
  40a097:	mov    rax,QWORD PTR [rbp-0x18]
  40a09b:	mov    QWORD PTR [rax],0x0
  40a0a2:	mov    QWORD PTR [rbp-0x8],0x0
  40a0aa:	mov    rax,QWORD PTR [rbp-0x8]
  40a0ae:	pop    rbp
  40a0af:	ret    

000000000040a0b0 <flatcc_builder_copy_buffer@@Base>:
  40a0b0:	push   rbp
  40a0b1:	mov    rbp,rsp
  40a0b4:	sub    rsp,0x20
  40a0b8:	mov    QWORD PTR [rbp-0x10],rdi
  40a0bc:	mov    QWORD PTR [rbp-0x18],rsi
  40a0c0:	mov    QWORD PTR [rbp-0x20],rdx
  40a0c4:	mov    rax,QWORD PTR [rbp-0x10]
  40a0c8:	cmp    DWORD PTR [rax+0x128],0x0
  40a0cf:	jne    40a0e2 <flatcc_builder_copy_buffer@@Base+0x32>
  40a0d5:	mov    QWORD PTR [rbp-0x8],0x0
  40a0dd:	jmp    40a137 <flatcc_builder_copy_buffer@@Base+0x87>
  40a0e2:	mov    rax,QWORD PTR [rbp-0x10]
  40a0e6:	add    rax,0x130
  40a0ec:	mov    rsi,QWORD PTR [rbp-0x18]
  40a0f0:	mov    rdx,QWORD PTR [rbp-0x20]
  40a0f4:	mov    rdi,rax
  40a0f7:	call   40ad40 <flatcc_emitter_copy_buffer@@Base>
  40a0fc:	mov    QWORD PTR [rbp-0x18],rax
  40a100:	cmp    QWORD PTR [rbp-0x18],0x0
  40a105:	je     40a110 <flatcc_builder_copy_buffer@@Base+0x60>
  40a10b:	jmp    40a12f <flatcc_builder_copy_buffer@@Base+0x7f>
  40a110:	lea    rdi,[rip+0x202a]        # 40c141 <_IO_stdin_used@@Base+0x141>
  40a117:	lea    rsi,[rip+0x2874]        # 40c992 <flatcc_builder_padding_base@@Base+0x212>
  40a11e:	mov    edx,0x786
  40a123:	lea    rcx,[rip+0x37da]        # 40d904 <flatcc_builder_padding_base@@Base+0x1184>
  40a12a:	call   403090 <__assert_fail@plt>
  40a12f:	mov    rax,QWORD PTR [rbp-0x18]
  40a133:	mov    QWORD PTR [rbp-0x8],rax
  40a137:	mov    rax,QWORD PTR [rbp-0x8]
  40a13b:	add    rsp,0x20
  40a13f:	pop    rbp
  40a140:	ret    
  40a141:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40a14b:	nop    DWORD PTR [rax+rax*1+0x0]

000000000040a150 <flatcc_builder_finalize_buffer@@Base>:
  40a150:	push   rbp
  40a151:	mov    rbp,rsp
  40a154:	sub    rsp,0x20
  40a158:	mov    QWORD PTR [rbp-0x8],rdi
  40a15c:	mov    QWORD PTR [rbp-0x10],rsi
  40a160:	mov    rdi,QWORD PTR [rbp-0x8]
  40a164:	call   409e40 <flatcc_builder_get_buffer_size@@Base>
  40a169:	mov    QWORD PTR [rbp-0x20],rax
  40a16d:	cmp    QWORD PTR [rbp-0x10],0x0
  40a172:	je     40a183 <flatcc_builder_finalize_buffer@@Base+0x33>
  40a178:	mov    rax,QWORD PTR [rbp-0x20]
  40a17c:	mov    rcx,QWORD PTR [rbp-0x10]
  40a180:	mov    QWORD PTR [rcx],rax
  40a183:	mov    rdi,QWORD PTR [rbp-0x20]
  40a187:	call   4030f0 <malloc@plt>
  40a18c:	mov    QWORD PTR [rbp-0x18],rax
  40a190:	cmp    QWORD PTR [rbp-0x18],0x0
  40a195:	jne    40a1ba <flatcc_builder_finalize_buffer@@Base+0x6a>
  40a19b:	lea    rdi,[rip+0x39b0]        # 40db52 <flatcc_builder_padding_base@@Base+0x13d2>
  40a1a2:	lea    rsi,[rip+0x27e9]        # 40c992 <flatcc_builder_padding_base@@Base+0x212>
  40a1a9:	mov    edx,0x798
  40a1ae:	lea    rcx,[rip+0x3794]        # 40d949 <flatcc_builder_padding_base@@Base+0x11c9>
  40a1b5:	call   403090 <__assert_fail@plt>
  40a1ba:	mov    rdi,QWORD PTR [rbp-0x8]
  40a1be:	mov    rsi,QWORD PTR [rbp-0x18]
  40a1c2:	mov    rdx,QWORD PTR [rbp-0x20]
  40a1c6:	call   40a0b0 <flatcc_builder_copy_buffer@@Base>
  40a1cb:	cmp    rax,0x0
  40a1cf:	jne    40a1f4 <flatcc_builder_finalize_buffer@@Base+0xa4>
  40a1d5:	lea    rdi,[rip+0x3976]        # 40db52 <flatcc_builder_padding_base@@Base+0x13d2>
  40a1dc:	lea    rsi,[rip+0x27af]        # 40c992 <flatcc_builder_padding_base@@Base+0x212>
  40a1e3:	mov    edx,0x79c
  40a1e8:	lea    rcx,[rip+0x375a]        # 40d949 <flatcc_builder_padding_base@@Base+0x11c9>
  40a1ef:	call   403090 <__assert_fail@plt>
  40a1f4:	jmp    40a1f9 <flatcc_builder_finalize_buffer@@Base+0xa9>
  40a1f9:	cmp    QWORD PTR [rbp-0x18],0x0
  40a1fe:	jne    40a21a <flatcc_builder_finalize_buffer@@Base+0xca>
  40a204:	cmp    QWORD PTR [rbp-0x10],0x0
  40a209:	je     40a21a <flatcc_builder_finalize_buffer@@Base+0xca>
  40a20f:	mov    rax,QWORD PTR [rbp-0x10]
  40a213:	mov    QWORD PTR [rax],0x0
  40a21a:	mov    rax,QWORD PTR [rbp-0x18]
  40a21e:	add    rsp,0x20
  40a222:	pop    rbp
  40a223:	ret    
  40a224:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40a22e:	xchg   ax,ax

000000000040a230 <flatcc_builder_finalize_aligned_buffer@@Base>:
  40a230:	push   rbp
  40a231:	mov    rbp,rsp
  40a234:	sub    rsp,0x30
  40a238:	mov    QWORD PTR [rbp-0x8],rdi
  40a23c:	mov    QWORD PTR [rbp-0x10],rsi
  40a240:	mov    rdi,QWORD PTR [rbp-0x8]
  40a244:	call   409e40 <flatcc_builder_get_buffer_size@@Base>
  40a249:	mov    QWORD PTR [rbp-0x28],rax
  40a24d:	cmp    QWORD PTR [rbp-0x10],0x0
  40a252:	je     40a263 <flatcc_builder_finalize_aligned_buffer@@Base+0x33>
  40a258:	mov    rax,QWORD PTR [rbp-0x28]
  40a25c:	mov    rcx,QWORD PTR [rbp-0x10]
  40a260:	mov    QWORD PTR [rcx],rax
  40a263:	mov    rdi,QWORD PTR [rbp-0x8]
  40a267:	call   409d60 <flatcc_builder_get_buffer_alignment@@Base>
  40a26c:	movzx  ecx,ax
  40a26f:	mov    edx,ecx
  40a271:	mov    QWORD PTR [rbp-0x20],rdx
  40a275:	mov    rdx,QWORD PTR [rbp-0x28]
  40a279:	add    rdx,QWORD PTR [rbp-0x20]
  40a27d:	sub    rdx,0x1
  40a284:	mov    rsi,QWORD PTR [rbp-0x20]
  40a288:	sub    rsi,0x1
  40a28f:	xor    rsi,0xffffffffffffffff
  40a296:	and    rdx,rsi
  40a299:	mov    QWORD PTR [rbp-0x28],rdx
  40a29d:	mov    rdi,QWORD PTR [rbp-0x20]
  40a2a1:	mov    rsi,QWORD PTR [rbp-0x28]
  40a2a5:	call   40a320 <flatcc_builder_finalize_aligned_buffer@@Base+0xf0>
  40a2aa:	mov    QWORD PTR [rbp-0x18],rax
  40a2ae:	cmp    QWORD PTR [rbp-0x18],0x0
  40a2b3:	jne    40a2be <flatcc_builder_finalize_aligned_buffer@@Base+0x8e>
  40a2b9:	jmp    40a2f4 <flatcc_builder_finalize_aligned_buffer@@Base+0xc4>
  40a2be:	mov    rdi,QWORD PTR [rbp-0x8]
  40a2c2:	mov    rsi,QWORD PTR [rbp-0x18]
  40a2c6:	mov    rdx,QWORD PTR [rbp-0x28]
  40a2ca:	call   40a0b0 <flatcc_builder_copy_buffer@@Base>
  40a2cf:	cmp    rax,0x0
  40a2d3:	jne    40a2ef <flatcc_builder_finalize_aligned_buffer@@Base+0xbf>
  40a2d9:	mov    rdi,QWORD PTR [rbp-0x18]
  40a2dd:	call   403030 <free@plt>
  40a2e2:	mov    QWORD PTR [rbp-0x18],0x0
  40a2ea:	jmp    40a2f4 <flatcc_builder_finalize_aligned_buffer@@Base+0xc4>
  40a2ef:	jmp    40a2f4 <flatcc_builder_finalize_aligned_buffer@@Base+0xc4>
  40a2f4:	cmp    QWORD PTR [rbp-0x18],0x0
  40a2f9:	jne    40a315 <flatcc_builder_finalize_aligned_buffer@@Base+0xe5>
  40a2ff:	cmp    QWORD PTR [rbp-0x10],0x0
  40a304:	je     40a315 <flatcc_builder_finalize_aligned_buffer@@Base+0xe5>
  40a30a:	mov    rax,QWORD PTR [rbp-0x10]
  40a30e:	mov    QWORD PTR [rax],0x0
  40a315:	mov    rax,QWORD PTR [rbp-0x18]
  40a319:	add    rsp,0x30
  40a31d:	pop    rbp
  40a31e:	ret    
  40a31f:	nop
  40a320:	push   rbp
  40a321:	mov    rbp,rsp
  40a324:	sub    rsp,0x20
  40a328:	mov    QWORD PTR [rbp-0x8],rdi
  40a32c:	mov    QWORD PTR [rbp-0x10],rsi
  40a330:	mov    QWORD PTR [rbp-0x20],0x0
  40a338:	cmp    QWORD PTR [rbp-0x8],0x8
  40a33d:	jae    40a34b <flatcc_builder_finalize_aligned_buffer@@Base+0x11b>
  40a343:	mov    QWORD PTR [rbp-0x8],0x8
  40a34b:	mov    rsi,QWORD PTR [rbp-0x8]
  40a34f:	mov    rdx,QWORD PTR [rbp-0x10]
  40a353:	lea    rdi,[rbp-0x20]
  40a357:	call   403130 <posix_memalign@plt>
  40a35c:	mov    DWORD PTR [rbp-0x14],eax
  40a35f:	cmp    DWORD PTR [rbp-0x14],0x0
  40a363:	je     40a385 <flatcc_builder_finalize_aligned_buffer@@Base+0x155>
  40a369:	cmp    QWORD PTR [rbp-0x20],0x0
  40a36e:	je     40a385 <flatcc_builder_finalize_aligned_buffer@@Base+0x155>
  40a374:	mov    rdi,QWORD PTR [rbp-0x20]
  40a378:	call   403030 <free@plt>
  40a37d:	mov    QWORD PTR [rbp-0x20],0x0
  40a385:	mov    rax,QWORD PTR [rbp-0x20]
  40a389:	add    rsp,0x20
  40a38d:	pop    rbp
  40a38e:	ret    
  40a38f:	nop

000000000040a390 <flatcc_builder_aligned_alloc@@Base>:
  40a390:	push   rbp
  40a391:	mov    rbp,rsp
  40a394:	sub    rsp,0x10
  40a398:	mov    QWORD PTR [rbp-0x8],rdi
  40a39c:	mov    QWORD PTR [rbp-0x10],rsi
  40a3a0:	mov    rdi,QWORD PTR [rbp-0x8]
  40a3a4:	mov    rsi,QWORD PTR [rbp-0x10]
  40a3a8:	call   40a320 <flatcc_builder_finalize_aligned_buffer@@Base+0xf0>
  40a3ad:	add    rsp,0x10
  40a3b1:	pop    rbp
  40a3b2:	ret    
  40a3b3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40a3bd:	nop    DWORD PTR [rax]

000000000040a3c0 <flatcc_builder_aligned_free@@Base>:
  40a3c0:	push   rbp
  40a3c1:	mov    rbp,rsp
  40a3c4:	sub    rsp,0x10
  40a3c8:	mov    QWORD PTR [rbp-0x8],rdi
  40a3cc:	mov    rdi,QWORD PTR [rbp-0x8]
  40a3d0:	call   403030 <free@plt>
  40a3d5:	add    rsp,0x10
  40a3d9:	pop    rbp
  40a3da:	ret    
  40a3db:	nop    DWORD PTR [rax+rax*1+0x0]

000000000040a3e0 <flatcc_builder_get_emit_context@@Base>:
  40a3e0:	push   rbp
  40a3e1:	mov    rbp,rsp
  40a3e4:	mov    QWORD PTR [rbp-0x8],rdi
  40a3e8:	mov    rax,QWORD PTR [rbp-0x8]
  40a3ec:	mov    rax,QWORD PTR [rax+0x38]
  40a3f0:	pop    rbp
  40a3f1:	ret    
  40a3f2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40a3fc:	nop    DWORD PTR [rax+0x0]
  40a400:	push   rbp
  40a401:	mov    rbp,rsp
  40a404:	mov    QWORD PTR [rbp-0x8],rdi
  40a408:	mov    WORD PTR [rbp-0xa],si
  40a40c:	mov    rax,QWORD PTR [rbp-0x8]
  40a410:	mov    ecx,DWORD PTR [rax+0xf4]
  40a416:	movzx  edx,WORD PTR [rbp-0xa]
  40a41a:	sub    edx,0x1
  40a41d:	and    ecx,edx
  40a41f:	mov    eax,ecx
  40a421:	pop    rbp
  40a422:	ret    
  40a423:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40a42d:	nop    DWORD PTR [rax]
  40a430:	push   rbp
  40a431:	mov    rbp,rsp
  40a434:	sub    rsp,0x30
  40a438:	mov    QWORD PTR [rbp-0x10],rdi
  40a43c:	mov    QWORD PTR [rbp-0x18],rsi
  40a440:	mov    DWORD PTR [rbp-0x1c],edx
  40a443:	mov    rax,QWORD PTR [rbp-0x10]
  40a447:	add    rax,0x58
  40a44d:	add    rax,0x10
  40a453:	mov    QWORD PTR [rbp-0x28],rax
  40a457:	mov    rax,QWORD PTR [rbp-0x10]
  40a45b:	mov    rax,QWORD PTR [rax+0x50]
  40a45f:	mov    rcx,QWORD PTR [rbp-0x10]
  40a463:	mov    rdi,QWORD PTR [rcx+0x40]
  40a467:	mov    rsi,QWORD PTR [rbp-0x28]
  40a46b:	mov    rcx,QWORD PTR [rbp-0x10]
  40a46f:	mov    edx,DWORD PTR [rcx+0x28]
  40a472:	mov    ecx,edx
  40a474:	add    rcx,QWORD PTR [rbp-0x18]
  40a478:	mov    rdx,rcx
  40a47b:	mov    r8d,0x1
  40a481:	mov    ecx,r8d
  40a484:	call   rax
  40a486:	cmp    eax,0x0
  40a489:	je     40a49b <flatcc_builder_get_emit_context@@Base+0xbb>
  40a48f:	mov    DWORD PTR [rbp-0x4],0xffffffff
  40a496:	jmp    40a4ae <flatcc_builder_get_emit_context@@Base+0xce>
  40a49b:	mov    rdi,QWORD PTR [rbp-0x10]
  40a49f:	mov    esi,DWORD PTR [rbp-0x1c]
  40a4a2:	call   4063d0 <flatcc_builder_start_struct@@Base+0x70>
  40a4a7:	mov    DWORD PTR [rbp-0x4],0x0
  40a4ae:	mov    eax,DWORD PTR [rbp-0x4]
  40a4b1:	add    rsp,0x30
  40a4b5:	pop    rbp
  40a4b6:	ret    
  40a4b7:	nop    WORD PTR [rax+rax*1+0x0]
  40a4c0:	push   rbp
  40a4c1:	mov    rbp,rsp
  40a4c4:	sub    rsp,0x30
  40a4c8:	mov    QWORD PTR [rbp-0x10],rdi
  40a4cc:	mov    rax,QWORD PTR [rbp-0x10]
  40a4d0:	add    rax,0x58
  40a4d6:	add    rax,0x50
  40a4dc:	mov    QWORD PTR [rbp-0x18],rax
  40a4e0:	mov    rax,QWORD PTR [rbp-0x10]
  40a4e4:	cmp    DWORD PTR [rax+0xe4],0x0
  40a4eb:	jne    40a4f6 <flatcc_builder_get_emit_context@@Base+0x116>
  40a4f1:	jmp    40a515 <flatcc_builder_get_emit_context@@Base+0x135>
  40a4f6:	lea    rdi,[rip+0x3619]        # 40db16 <flatcc_builder_padding_base@@Base+0x1396>
  40a4fd:	lea    rsi,[rip+0x248e]        # 40c992 <flatcc_builder_padding_base@@Base+0x212>
  40a504:	mov    edx,0x156
  40a509:	lea    rcx,[rip+0x3615]        # 40db25 <flatcc_builder_padding_base@@Base+0x13a5>
  40a510:	call   403090 <__assert_fail@plt>
  40a515:	xor    r8d,r8d
  40a518:	mov    rdi,QWORD PTR [rbp-0x10]
  40a51c:	mov    rax,QWORD PTR [rbp-0x10]
  40a520:	mov    ecx,DWORD PTR [rax+0xe4]
  40a526:	mov    edx,ecx
  40a528:	mov    esi,0x6
  40a52d:	mov    ecx,0x10
  40a532:	call   404fc0 <flatcc_builder_enter_user_frame_ptr@@Base+0xf0>
  40a537:	cmp    rax,0x0
  40a53b:	jne    40a54d <flatcc_builder_get_emit_context@@Base+0x16d>
  40a541:	mov    DWORD PTR [rbp-0x4],0xffffffff
  40a548:	jmp    40a621 <flatcc_builder_get_emit_context@@Base+0x241>
  40a54d:	mov    rax,QWORD PTR [rbp-0x10]
  40a551:	mov    DWORD PTR [rax+0xe4],0x10
  40a55b:	mov    QWORD PTR [rbp-0x20],0x100
  40a563:	mov    rax,QWORD PTR [rbp-0x10]
  40a567:	mov    rax,QWORD PTR [rax+0x50]
  40a56b:	mov    rcx,QWORD PTR [rbp-0x10]
  40a56f:	mov    rdi,QWORD PTR [rcx+0x40]
  40a573:	mov    rsi,QWORD PTR [rbp-0x18]
  40a577:	mov    rdx,QWORD PTR [rbp-0x20]
  40a57b:	mov    ecx,0x1
  40a580:	mov    r8d,0x5
  40a586:	call   rax
  40a588:	cmp    eax,0x0
  40a58b:	je     40a59d <flatcc_builder_get_emit_context@@Base+0x1bd>
  40a591:	mov    DWORD PTR [rbp-0x4],0xffffffff
  40a598:	jmp    40a621 <flatcc_builder_get_emit_context@@Base+0x241>
  40a59d:	jmp    40a5a2 <flatcc_builder_get_emit_context@@Base+0x1c2>
  40a5a2:	mov    rax,QWORD PTR [rbp-0x20]
  40a5a6:	shl    rax,0x1
  40a5aa:	mov    rcx,QWORD PTR [rbp-0x18]
  40a5ae:	cmp    rax,QWORD PTR [rcx+0x8]
  40a5b2:	ja     40a5c9 <flatcc_builder_get_emit_context@@Base+0x1e9>
  40a5b8:	mov    rax,QWORD PTR [rbp-0x20]
  40a5bc:	shl    rax,0x1
  40a5c0:	mov    QWORD PTR [rbp-0x20],rax
  40a5c4:	jmp    40a5a2 <flatcc_builder_get_emit_context@@Base+0x1c2>
  40a5c9:	mov    rax,QWORD PTR [rbp-0x20]
  40a5cd:	shr    rax,0x2
  40a5d1:	mov    QWORD PTR [rbp-0x20],rax
  40a5d5:	mov    QWORD PTR [rbp-0x28],0x0
  40a5dd:	mov    rcx,QWORD PTR [rbp-0x28]
  40a5e1:	mov    eax,0x1
  40a5e6:	shl    rax,cl
  40a5e9:	cmp    rax,QWORD PTR [rbp-0x20]
  40a5ed:	jae    40a60b <flatcc_builder_get_emit_context@@Base+0x22b>
  40a5f3:	jmp    40a5f8 <flatcc_builder_get_emit_context@@Base+0x218>
  40a5f8:	mov    rax,QWORD PTR [rbp-0x28]
  40a5fc:	add    rax,0x1
  40a602:	mov    QWORD PTR [rbp-0x28],rax
  40a606:	jmp    40a5dd <flatcc_builder_get_emit_context@@Base+0x1fd>
  40a60b:	mov    rax,QWORD PTR [rbp-0x28]
  40a60f:	mov    rcx,QWORD PTR [rbp-0x10]
  40a613:	mov    QWORD PTR [rcx+0xd8],rax
  40a61a:	mov    DWORD PTR [rbp-0x4],0x0
  40a621:	mov    eax,DWORD PTR [rbp-0x4]
  40a624:	add    rsp,0x30
  40a628:	pop    rbp
  40a629:	ret    
  40a62a:	nop    WORD PTR [rax+rax*1+0x0]

000000000040a630 <flatcc_emitter_recycle_page@@Base>:
  40a630:	push   rbp
  40a631:	mov    rbp,rsp
  40a634:	mov    QWORD PTR [rbp-0x10],rdi
  40a638:	mov    QWORD PTR [rbp-0x18],rsi
  40a63c:	mov    rax,QWORD PTR [rbp-0x18]
  40a640:	mov    rcx,QWORD PTR [rbp-0x10]
  40a644:	cmp    rax,QWORD PTR [rcx]
  40a647:	je     40a65f <flatcc_emitter_recycle_page@@Base+0x2f>
  40a64d:	mov    rax,QWORD PTR [rbp-0x18]
  40a651:	mov    rcx,QWORD PTR [rbp-0x10]
  40a655:	cmp    rax,QWORD PTR [rcx+0x8]
  40a659:	jne    40a66b <flatcc_emitter_recycle_page@@Base+0x3b>
  40a65f:	mov    DWORD PTR [rbp-0x4],0xffffffff
  40a666:	jmp    40a703 <flatcc_emitter_recycle_page@@Base+0xd3>
  40a66b:	mov    rax,QWORD PTR [rbp-0x18]
  40a66f:	mov    rax,QWORD PTR [rax+0xb88]
  40a676:	mov    rcx,QWORD PTR [rbp-0x18]
  40a67a:	mov    rcx,QWORD PTR [rcx+0xb80]
  40a681:	mov    QWORD PTR [rcx+0xb88],rax
  40a688:	mov    rax,QWORD PTR [rbp-0x18]
  40a68c:	mov    rax,QWORD PTR [rax+0xb80]
  40a693:	mov    rcx,QWORD PTR [rbp-0x18]
  40a697:	mov    rcx,QWORD PTR [rcx+0xb88]
  40a69e:	mov    QWORD PTR [rcx+0xb80],rax
  40a6a5:	mov    rax,QWORD PTR [rbp-0x10]
  40a6a9:	mov    rax,QWORD PTR [rax]
  40a6ac:	mov    rax,QWORD PTR [rax+0xb88]
  40a6b3:	mov    rcx,QWORD PTR [rbp-0x18]
  40a6b7:	mov    QWORD PTR [rcx+0xb88],rax
  40a6be:	mov    rax,QWORD PTR [rbp-0x10]
  40a6c2:	mov    rax,QWORD PTR [rax]
  40a6c5:	mov    rcx,QWORD PTR [rbp-0x18]
  40a6c9:	mov    QWORD PTR [rcx+0xb80],rax
  40a6d0:	mov    rax,QWORD PTR [rbp-0x18]
  40a6d4:	mov    rcx,QWORD PTR [rbp-0x18]
  40a6d8:	mov    rcx,QWORD PTR [rcx+0xb88]
  40a6df:	mov    QWORD PTR [rcx+0xb80],rax
  40a6e6:	mov    rax,QWORD PTR [rbp-0x18]
  40a6ea:	mov    rcx,QWORD PTR [rbp-0x18]
  40a6ee:	mov    rcx,QWORD PTR [rcx+0xb80]
  40a6f5:	mov    QWORD PTR [rcx+0xb88],rax
  40a6fc:	mov    DWORD PTR [rbp-0x4],0x0
  40a703:	mov    eax,DWORD PTR [rbp-0x4]
  40a706:	pop    rbp
  40a707:	ret    
  40a708:	nop    DWORD PTR [rax+rax*1+0x0]

000000000040a710 <flatcc_emitter_reset@@Base>:
  40a710:	push   rbp
  40a711:	mov    rbp,rsp
  40a714:	sub    rsp,0x20
  40a718:	mov    QWORD PTR [rbp-0x8],rdi
  40a71c:	mov    rax,QWORD PTR [rbp-0x8]
  40a720:	mov    rax,QWORD PTR [rax]
  40a723:	mov    QWORD PTR [rbp-0x10],rax
  40a727:	mov    rax,QWORD PTR [rbp-0x8]
  40a72b:	cmp    QWORD PTR [rax],0x0
  40a72f:	jne    40a73a <flatcc_emitter_reset@@Base+0x2a>
  40a735:	jmp    40a8a8 <flatcc_emitter_reset@@Base+0x198>
  40a73a:	xor    eax,eax
  40a73c:	mov    rcx,QWORD PTR [rbp-0x8]
  40a740:	mov    rcx,QWORD PTR [rcx]
  40a743:	mov    rdx,QWORD PTR [rbp-0x8]
  40a747:	mov    QWORD PTR [rdx+0x8],rcx
  40a74b:	mov    rcx,QWORD PTR [rbp-0x8]
  40a74f:	mov    rcx,QWORD PTR [rcx]
  40a752:	add    rcx,0x5c0
  40a759:	mov    rdx,QWORD PTR [rbp-0x8]
  40a75d:	mov    QWORD PTR [rdx+0x10],rcx
  40a761:	mov    rcx,QWORD PTR [rbp-0x8]
  40a765:	mov    rcx,QWORD PTR [rcx+0x10]
  40a769:	mov    rdx,QWORD PTR [rbp-0x8]
  40a76d:	mov    QWORD PTR [rdx+0x20],rcx
  40a771:	mov    rcx,QWORD PTR [rbp-0x8]
  40a775:	mov    QWORD PTR [rcx+0x18],0x5c0
  40a77d:	mov    rcx,QWORD PTR [rbp-0x8]
  40a781:	mov    QWORD PTR [rcx+0x28],0x5c0
  40a789:	mov    rcx,QWORD PTR [rbp-0x8]
  40a78d:	mov    rcx,QWORD PTR [rcx+0x18]
  40a791:	sub    eax,ecx
  40a793:	mov    rdx,QWORD PTR [rbp-0x8]
  40a797:	mov    rdx,QWORD PTR [rdx]
  40a79a:	mov    DWORD PTR [rdx+0xb90],eax
  40a7a0:	mov    rdx,QWORD PTR [rbp-0x8]
  40a7a4:	cmp    QWORD PTR [rdx+0x40],0x0
  40a7a9:	jne    40a7bf <flatcc_emitter_reset@@Base+0xaf>
  40a7af:	mov    rax,QWORD PTR [rbp-0x8]
  40a7b3:	mov    rax,QWORD PTR [rax+0x30]
  40a7b7:	mov    rcx,QWORD PTR [rbp-0x8]
  40a7bb:	mov    QWORD PTR [rcx+0x40],rax
  40a7bf:	mov    rax,QWORD PTR [rbp-0x8]
  40a7c3:	imul   rax,QWORD PTR [rax+0x40],0x3
  40a7cb:	shr    rax,0x2
  40a7cf:	mov    rcx,QWORD PTR [rbp-0x8]
  40a7d3:	mov    rcx,QWORD PTR [rcx+0x30]
  40a7d7:	shr    rcx,0x2
  40a7db:	add    rax,rcx
  40a7de:	mov    rcx,QWORD PTR [rbp-0x8]
  40a7e2:	mov    QWORD PTR [rcx+0x40],rax
  40a7e6:	mov    rax,QWORD PTR [rbp-0x8]
  40a7ea:	mov    QWORD PTR [rax+0x30],0x0
  40a7f2:	xor    eax,eax
  40a7f4:	mov    rcx,QWORD PTR [rbp-0x8]
  40a7f8:	mov    rcx,QWORD PTR [rcx+0x40]
  40a7fc:	shl    rcx,0x1
  40a800:	mov    rdx,QWORD PTR [rbp-0x8]
  40a804:	cmp    rcx,QWORD PTR [rdx+0x38]
  40a808:	mov    BYTE PTR [rbp-0x11],al
  40a80b:	jae    40a82d <flatcc_emitter_reset@@Base+0x11d>
  40a811:	mov    rax,QWORD PTR [rbp-0x8]
  40a815:	mov    rax,QWORD PTR [rax+0x8]
  40a819:	mov    rax,QWORD PTR [rax+0xb80]
  40a820:	mov    rcx,QWORD PTR [rbp-0x8]
  40a824:	cmp    rax,QWORD PTR [rcx]
  40a827:	setne  dl
  40a82a:	mov    BYTE PTR [rbp-0x11],dl
  40a82d:	mov    al,BYTE PTR [rbp-0x11]
  40a830:	test   al,0x1
  40a832:	jne    40a83d <flatcc_emitter_reset@@Base+0x12d>
  40a838:	jmp    40a8a8 <flatcc_emitter_reset@@Base+0x198>
  40a83d:	mov    rax,QWORD PTR [rbp-0x8]
  40a841:	mov    rax,QWORD PTR [rax+0x8]
  40a845:	mov    rax,QWORD PTR [rax+0xb80]
  40a84c:	mov    QWORD PTR [rbp-0x10],rax
  40a850:	mov    rax,QWORD PTR [rbp-0x10]
  40a854:	mov    rax,QWORD PTR [rax+0xb80]
  40a85b:	mov    rcx,QWORD PTR [rbp-0x8]
  40a85f:	mov    rcx,QWORD PTR [rcx+0x8]
  40a863:	mov    QWORD PTR [rcx+0xb80],rax
  40a86a:	mov    rax,QWORD PTR [rbp-0x8]
  40a86e:	mov    rax,QWORD PTR [rax+0x8]
  40a872:	mov    rcx,QWORD PTR [rbp-0x10]
  40a876:	mov    rcx,QWORD PTR [rcx+0xb80]
  40a87d:	mov    QWORD PTR [rcx+0xb88],rax
  40a884:	mov    rax,QWORD PTR [rbp-0x10]
  40a888:	mov    rdi,rax
  40a88b:	call   403030 <free@plt>
  40a890:	mov    rax,QWORD PTR [rbp-0x8]
  40a894:	mov    rcx,QWORD PTR [rax+0x38]
  40a898:	sub    rcx,0xb80
  40a89f:	mov    QWORD PTR [rax+0x38],rcx
  40a8a3:	jmp    40a7f2 <flatcc_emitter_reset@@Base+0xe2>
  40a8a8:	add    rsp,0x20
  40a8ac:	pop    rbp
  40a8ad:	ret    
  40a8ae:	xchg   ax,ax

000000000040a8b0 <flatcc_emitter_clear@@Base>:
  40a8b0:	push   rbp
  40a8b1:	mov    rbp,rsp
  40a8b4:	sub    rsp,0x10
  40a8b8:	mov    QWORD PTR [rbp-0x8],rdi
  40a8bc:	mov    rax,QWORD PTR [rbp-0x8]
  40a8c0:	mov    rax,QWORD PTR [rax]
  40a8c3:	mov    QWORD PTR [rbp-0x10],rax
  40a8c7:	cmp    QWORD PTR [rbp-0x10],0x0
  40a8cc:	jne    40a8d7 <flatcc_emitter_clear@@Base+0x27>
  40a8d2:	jmp    40a945 <flatcc_emitter_clear@@Base+0x95>
  40a8d7:	mov    rax,QWORD PTR [rbp-0x10]
  40a8db:	mov    rax,QWORD PTR [rax+0xb88]
  40a8e2:	mov    QWORD PTR [rax+0xb80],0x0
  40a8ed:	mov    rax,QWORD PTR [rbp-0x10]
  40a8f1:	cmp    QWORD PTR [rax+0xb80],0x0
  40a8f9:	je     40a926 <flatcc_emitter_clear@@Base+0x76>
  40a8ff:	mov    rax,QWORD PTR [rbp-0x10]
  40a903:	mov    rax,QWORD PTR [rax+0xb80]
  40a90a:	mov    QWORD PTR [rbp-0x10],rax
  40a90e:	mov    rax,QWORD PTR [rbp-0x10]
  40a912:	mov    rax,QWORD PTR [rax+0xb88]
  40a919:	mov    rdi,rax
  40a91c:	call   403030 <free@plt>
  40a921:	jmp    40a8ed <flatcc_emitter_clear@@Base+0x3d>
  40a926:	mov    rax,QWORD PTR [rbp-0x10]
  40a92a:	mov    rdi,rax
  40a92d:	call   403030 <free@plt>
  40a932:	xor    esi,esi
  40a934:	mov    rax,QWORD PTR [rbp-0x8]
  40a938:	mov    rdi,rax
  40a93b:	mov    edx,0x48
  40a940:	call   4030a0 <memset@plt>
  40a945:	add    rsp,0x10
  40a949:	pop    rbp
  40a94a:	ret    
  40a94b:	nop    DWORD PTR [rax+rax*1+0x0]

000000000040a950 <flatcc_emitter@@Base>:
  40a950:	push   rbp
  40a951:	mov    rbp,rsp
  40a954:	sub    rsp,0x40
  40a958:	mov    QWORD PTR [rbp-0x10],rdi
  40a95c:	mov    QWORD PTR [rbp-0x18],rsi
  40a960:	mov    DWORD PTR [rbp-0x1c],edx
  40a963:	mov    DWORD PTR [rbp-0x20],ecx
  40a966:	mov    QWORD PTR [rbp-0x28],r8
  40a96a:	mov    rax,QWORD PTR [rbp-0x10]
  40a96e:	mov    QWORD PTR [rbp-0x30],rax
  40a972:	mov    rax,QWORD PTR [rbp-0x28]
  40a976:	mov    rsi,QWORD PTR [rbp-0x30]
  40a97a:	add    rax,QWORD PTR [rsi+0x30]
  40a97e:	mov    QWORD PTR [rsi+0x30],rax
  40a982:	cmp    DWORD PTR [rbp-0x20],0x0
  40a986:	jge    40aa4a <flatcc_emitter@@Base+0xfa>
  40a98c:	mov    rax,QWORD PTR [rbp-0x28]
  40a990:	mov    rcx,QWORD PTR [rbp-0x30]
  40a994:	cmp    rax,QWORD PTR [rcx+0x18]
  40a998:	ja     40a9dc <flatcc_emitter@@Base+0x8c>
  40a99e:	xor    eax,eax
  40a9a0:	mov    ecx,eax
  40a9a2:	mov    rdx,QWORD PTR [rbp-0x28]
  40a9a6:	mov    rsi,QWORD PTR [rbp-0x30]
  40a9aa:	mov    rdi,QWORD PTR [rsi+0x10]
  40a9ae:	sub    rcx,rdx
  40a9b1:	add    rdi,rcx
  40a9b4:	mov    QWORD PTR [rsi+0x10],rdi
  40a9b8:	mov    rcx,QWORD PTR [rbp-0x28]
  40a9bc:	mov    rdx,QWORD PTR [rbp-0x30]
  40a9c0:	mov    rsi,QWORD PTR [rdx+0x18]
  40a9c4:	sub    rsi,rcx
  40a9c7:	mov    QWORD PTR [rdx+0x18],rsi
  40a9cb:	mov    rcx,QWORD PTR [rbp-0x30]
  40a9cf:	mov    rcx,QWORD PTR [rcx+0x10]
  40a9d3:	mov    QWORD PTR [rbp-0x38],rcx
  40a9d7:	jmp    40aafa <flatcc_emitter@@Base+0x1aa>
  40a9dc:	mov    eax,DWORD PTR [rbp-0x1c]
  40a9df:	mov    rcx,QWORD PTR [rbp-0x18]
  40a9e3:	movsxd rdx,eax
  40a9e6:	shl    rdx,0x4
  40a9ea:	add    rcx,rdx
  40a9ed:	mov    QWORD PTR [rbp-0x18],rcx
  40a9f1:	mov    eax,DWORD PTR [rbp-0x1c]
  40a9f4:	mov    ecx,eax
  40a9f6:	add    ecx,0xffffffff
  40a9f9:	mov    DWORD PTR [rbp-0x1c],ecx
  40a9fc:	cmp    eax,0x0
  40a9ff:	je     40aa45 <flatcc_emitter@@Base+0xf5>
  40aa05:	mov    rax,QWORD PTR [rbp-0x18]
  40aa09:	add    rax,0xfffffffffffffff0
  40aa0f:	mov    QWORD PTR [rbp-0x18],rax
  40aa13:	mov    rdi,QWORD PTR [rbp-0x30]
  40aa17:	mov    rax,QWORD PTR [rbp-0x18]
  40aa1b:	mov    rsi,QWORD PTR [rax]
  40aa1e:	mov    rax,QWORD PTR [rbp-0x18]
  40aa22:	mov    rdx,QWORD PTR [rax+0x8]
  40aa26:	call   40ab60 <flatcc_emitter@@Base+0x210>
  40aa2b:	cmp    eax,0x0
  40aa2e:	je     40aa40 <flatcc_emitter@@Base+0xf0>
  40aa34:	mov    DWORD PTR [rbp-0x4],0xffffffff
  40aa3b:	jmp    40ab55 <flatcc_emitter@@Base+0x205>
  40aa40:	jmp    40a9f1 <flatcc_emitter@@Base+0xa1>
  40aa45:	jmp    40aaee <flatcc_emitter@@Base+0x19e>
  40aa4a:	mov    rax,QWORD PTR [rbp-0x28]
  40aa4e:	mov    rcx,QWORD PTR [rbp-0x30]
  40aa52:	cmp    rax,QWORD PTR [rcx+0x28]
  40aa56:	ja     40aa90 <flatcc_emitter@@Base+0x140>
  40aa5c:	mov    rax,QWORD PTR [rbp-0x30]
  40aa60:	mov    rax,QWORD PTR [rax+0x20]
  40aa64:	mov    QWORD PTR [rbp-0x38],rax
  40aa68:	mov    rax,QWORD PTR [rbp-0x28]
  40aa6c:	mov    rcx,QWORD PTR [rbp-0x30]
  40aa70:	add    rax,QWORD PTR [rcx+0x20]
  40aa74:	mov    QWORD PTR [rcx+0x20],rax
  40aa78:	mov    rax,QWORD PTR [rbp-0x28]
  40aa7c:	mov    rcx,QWORD PTR [rbp-0x30]
  40aa80:	mov    rdx,QWORD PTR [rcx+0x28]
  40aa84:	sub    rdx,rax
  40aa87:	mov    QWORD PTR [rcx+0x28],rdx
  40aa8b:	jmp    40aafa <flatcc_emitter@@Base+0x1aa>
  40aa90:	jmp    40aa95 <flatcc_emitter@@Base+0x145>
  40aa95:	mov    eax,DWORD PTR [rbp-0x1c]
  40aa98:	mov    ecx,eax
  40aa9a:	add    ecx,0xffffffff
  40aa9d:	mov    DWORD PTR [rbp-0x1c],ecx
  40aaa0:	cmp    eax,0x0
  40aaa3:	je     40aae9 <flatcc_emitter@@Base+0x199>
  40aaa9:	mov    rdi,QWORD PTR [rbp-0x30]
  40aaad:	mov    rax,QWORD PTR [rbp-0x18]
  40aab1:	mov    rsi,QWORD PTR [rax]
  40aab4:	mov    rax,QWORD PTR [rbp-0x18]
  40aab8:	mov    rdx,QWORD PTR [rax+0x8]
  40aabc:	call   40ac60 <flatcc_emitter@@Base+0x310>
  40aac1:	cmp    eax,0x0
  40aac4:	je     40aad6 <flatcc_emitter@@Base+0x186>
  40aaca:	mov    DWORD PTR [rbp-0x4],0xffffffff
  40aad1:	jmp    40ab55 <flatcc_emitter@@Base+0x205>
  40aad6:	mov    rax,QWORD PTR [rbp-0x18]
  40aada:	add    rax,0x10
  40aae0:	mov    QWORD PTR [rbp-0x18],rax
  40aae4:	jmp    40aa95 <flatcc_emitter@@Base+0x145>
  40aae9:	jmp    40aaee <flatcc_emitter@@Base+0x19e>
  40aaee:	mov    DWORD PTR [rbp-0x4],0x0
  40aaf5:	jmp    40ab55 <flatcc_emitter@@Base+0x205>
  40aafa:	jmp    40aaff <flatcc_emitter@@Base+0x1af>
  40aaff:	mov    eax,DWORD PTR [rbp-0x1c]
  40ab02:	mov    ecx,eax
  40ab04:	add    ecx,0xffffffff
  40ab07:	mov    DWORD PTR [rbp-0x1c],ecx
  40ab0a:	cmp    eax,0x0
  40ab0d:	je     40ab4e <flatcc_emitter@@Base+0x1fe>
  40ab13:	mov    rdi,QWORD PTR [rbp-0x38]
  40ab17:	mov    rax,QWORD PTR [rbp-0x18]
  40ab1b:	mov    rsi,QWORD PTR [rax]
  40ab1e:	mov    rax,QWORD PTR [rbp-0x18]
  40ab22:	mov    rdx,QWORD PTR [rax+0x8]
  40ab26:	call   4030e0 <memcpy@plt>
  40ab2b:	mov    rax,QWORD PTR [rbp-0x18]
  40ab2f:	mov    rax,QWORD PTR [rax+0x8]
  40ab33:	add    rax,QWORD PTR [rbp-0x38]
  40ab37:	mov    QWORD PTR [rbp-0x38],rax
  40ab3b:	mov    rax,QWORD PTR [rbp-0x18]
  40ab3f:	add    rax,0x10
  40ab45:	mov    QWORD PTR [rbp-0x18],rax
  40ab49:	jmp    40aaff <flatcc_emitter@@Base+0x1af>
  40ab4e:	mov    DWORD PTR [rbp-0x4],0x0
  40ab55:	mov    eax,DWORD PTR [rbp-0x4]
  40ab58:	add    rsp,0x40
  40ab5c:	pop    rbp
  40ab5d:	ret    
  40ab5e:	xchg   ax,ax
  40ab60:	push   rbp
  40ab61:	mov    rbp,rsp
  40ab64:	sub    rsp,0x30
  40ab68:	mov    QWORD PTR [rbp-0x10],rdi
  40ab6c:	mov    QWORD PTR [rbp-0x18],rsi
  40ab70:	mov    QWORD PTR [rbp-0x20],rdx
  40ab74:	mov    rax,QWORD PTR [rbp-0x20]
  40ab78:	add    rax,QWORD PTR [rbp-0x18]
  40ab7c:	mov    QWORD PTR [rbp-0x18],rax
  40ab80:	cmp    QWORD PTR [rbp-0x20],0x0
  40ab85:	je     40ac4f <flatcc_emitter@@Base+0x2ff>
  40ab8b:	mov    rax,QWORD PTR [rbp-0x20]
  40ab8f:	mov    QWORD PTR [rbp-0x28],rax
  40ab93:	mov    rax,QWORD PTR [rbp-0x28]
  40ab97:	mov    rcx,QWORD PTR [rbp-0x10]
  40ab9b:	cmp    rax,QWORD PTR [rcx+0x18]
  40ab9f:	jbe    40abe4 <flatcc_emitter@@Base+0x294>
  40aba5:	mov    rax,QWORD PTR [rbp-0x10]
  40aba9:	mov    rax,QWORD PTR [rax+0x18]
  40abad:	mov    QWORD PTR [rbp-0x28],rax
  40abb1:	cmp    QWORD PTR [rbp-0x28],0x0
  40abb6:	jne    40abdf <flatcc_emitter@@Base+0x28f>
  40abbc:	mov    rdi,QWORD PTR [rbp-0x10]
  40abc0:	call   40ae90 <flatcc_emitter_copy_buffer@@Base+0x150>
  40abc5:	cmp    eax,0x0
  40abc8:	je     40abda <flatcc_emitter@@Base+0x28a>
  40abce:	mov    DWORD PTR [rbp-0x4],0xffffffff
  40abd5:	jmp    40ac56 <flatcc_emitter@@Base+0x306>
  40abda:	jmp    40ab80 <flatcc_emitter@@Base+0x230>
  40abdf:	jmp    40abe4 <flatcc_emitter@@Base+0x294>
  40abe4:	xor    eax,eax
  40abe6:	mov    ecx,eax
  40abe8:	mov    rdx,QWORD PTR [rbp-0x28]
  40abec:	mov    rsi,QWORD PTR [rbp-0x10]
  40abf0:	mov    rdi,QWORD PTR [rsi+0x10]
  40abf4:	mov    r8,rcx
  40abf7:	sub    r8,rdx
  40abfa:	add    rdi,r8
  40abfd:	mov    QWORD PTR [rsi+0x10],rdi
  40ac01:	mov    rdx,QWORD PTR [rbp-0x28]
  40ac05:	mov    rsi,QWORD PTR [rbp-0x10]
  40ac09:	mov    rdi,QWORD PTR [rsi+0x18]
  40ac0d:	sub    rdi,rdx
  40ac10:	mov    QWORD PTR [rsi+0x18],rdi
  40ac14:	mov    rdx,QWORD PTR [rbp-0x28]
  40ac18:	mov    rsi,QWORD PTR [rbp-0x18]
  40ac1c:	sub    rcx,rdx
  40ac1f:	add    rsi,rcx
  40ac22:	mov    QWORD PTR [rbp-0x18],rsi
  40ac26:	mov    rcx,QWORD PTR [rbp-0x28]
  40ac2a:	mov    rdx,QWORD PTR [rbp-0x20]
  40ac2e:	sub    rdx,rcx
  40ac31:	mov    QWORD PTR [rbp-0x20],rdx
  40ac35:	mov    rcx,QWORD PTR [rbp-0x10]
  40ac39:	mov    rdi,QWORD PTR [rcx+0x10]
  40ac3d:	mov    rsi,QWORD PTR [rbp-0x18]
  40ac41:	mov    rdx,QWORD PTR [rbp-0x28]
  40ac45:	call   4030e0 <memcpy@plt>
  40ac4a:	jmp    40ab80 <flatcc_emitter@@Base+0x230>
  40ac4f:	mov    DWORD PTR [rbp-0x4],0x0
  40ac56:	mov    eax,DWORD PTR [rbp-0x4]
  40ac59:	add    rsp,0x30
  40ac5d:	pop    rbp
  40ac5e:	ret    
  40ac5f:	nop
  40ac60:	push   rbp
  40ac61:	mov    rbp,rsp
  40ac64:	sub    rsp,0x30
  40ac68:	mov    QWORD PTR [rbp-0x10],rdi
  40ac6c:	mov    QWORD PTR [rbp-0x18],rsi
  40ac70:	mov    QWORD PTR [rbp-0x20],rdx
  40ac74:	cmp    QWORD PTR [rbp-0x20],0x0
  40ac79:	je     40ad30 <flatcc_emitter@@Base+0x3e0>
  40ac7f:	mov    rax,QWORD PTR [rbp-0x20]
  40ac83:	mov    QWORD PTR [rbp-0x28],rax
  40ac87:	mov    rax,QWORD PTR [rbp-0x28]
  40ac8b:	mov    rcx,QWORD PTR [rbp-0x10]
  40ac8f:	cmp    rax,QWORD PTR [rcx+0x28]
  40ac93:	jbe    40acd8 <flatcc_emitter@@Base+0x388>
  40ac99:	mov    rax,QWORD PTR [rbp-0x10]
  40ac9d:	mov    rax,QWORD PTR [rax+0x28]
  40aca1:	mov    QWORD PTR [rbp-0x28],rax
  40aca5:	cmp    QWORD PTR [rbp-0x28],0x0
  40acaa:	jne    40acd3 <flatcc_emitter@@Base+0x383>
  40acb0:	mov    rdi,QWORD PTR [rbp-0x10]
  40acb4:	call   40b0b0 <flatcc_emitter_copy_buffer@@Base+0x370>
  40acb9:	cmp    eax,0x0
  40acbc:	je     40acce <flatcc_emitter@@Base+0x37e>
  40acc2:	mov    DWORD PTR [rbp-0x4],0xffffffff
  40acc9:	jmp    40ad37 <flatcc_emitter@@Base+0x3e7>
  40acce:	jmp    40ac74 <flatcc_emitter@@Base+0x324>
  40acd3:	jmp    40acd8 <flatcc_emitter@@Base+0x388>
  40acd8:	mov    rax,QWORD PTR [rbp-0x10]
  40acdc:	mov    rdi,QWORD PTR [rax+0x20]
  40ace0:	mov    rsi,QWORD PTR [rbp-0x18]
  40ace4:	mov    rdx,QWORD PTR [rbp-0x28]
  40ace8:	call   4030e0 <memcpy@plt>
  40aced:	mov    rax,QWORD PTR [rbp-0x28]
  40acf1:	mov    rcx,QWORD PTR [rbp-0x20]
  40acf5:	sub    rcx,rax
  40acf8:	mov    QWORD PTR [rbp-0x20],rcx
  40acfc:	mov    rax,QWORD PTR [rbp-0x28]
  40ad00:	add    rax,QWORD PTR [rbp-0x18]
  40ad04:	mov    QWORD PTR [rbp-0x18],rax
  40ad08:	mov    rax,QWORD PTR [rbp-0x28]
  40ad0c:	mov    rcx,QWORD PTR [rbp-0x10]
  40ad10:	add    rax,QWORD PTR [rcx+0x20]
  40ad14:	mov    QWORD PTR [rcx+0x20],rax
  40ad18:	mov    rax,QWORD PTR [rbp-0x28]
  40ad1c:	mov    rcx,QWORD PTR [rbp-0x10]
  40ad20:	mov    rdx,QWORD PTR [rcx+0x28]
  40ad24:	sub    rdx,rax
  40ad27:	mov    QWORD PTR [rcx+0x28],rdx
  40ad2b:	jmp    40ac74 <flatcc_emitter@@Base+0x324>
  40ad30:	mov    DWORD PTR [rbp-0x4],0x0
  40ad37:	mov    eax,DWORD PTR [rbp-0x4]
  40ad3a:	add    rsp,0x30
  40ad3e:	pop    rbp
  40ad3f:	ret    

000000000040ad40 <flatcc_emitter_copy_buffer@@Base>:
  40ad40:	push   rbp
  40ad41:	mov    rbp,rsp
  40ad44:	sub    rsp,0x30
  40ad48:	mov    QWORD PTR [rbp-0x10],rdi
  40ad4c:	mov    QWORD PTR [rbp-0x18],rsi
  40ad50:	mov    QWORD PTR [rbp-0x20],rdx
  40ad54:	mov    rax,QWORD PTR [rbp-0x20]
  40ad58:	mov    rcx,QWORD PTR [rbp-0x10]
  40ad5c:	cmp    rax,QWORD PTR [rcx+0x30]
  40ad60:	jae    40ad73 <flatcc_emitter_copy_buffer@@Base+0x33>
  40ad66:	mov    QWORD PTR [rbp-0x8],0x0
  40ad6e:	jmp    40ae78 <flatcc_emitter_copy_buffer@@Base+0x138>
  40ad73:	mov    rax,QWORD PTR [rbp-0x10]
  40ad77:	cmp    QWORD PTR [rax],0x0
  40ad7b:	jne    40ad8e <flatcc_emitter_copy_buffer@@Base+0x4e>
  40ad81:	mov    QWORD PTR [rbp-0x8],0x0
  40ad89:	jmp    40ae78 <flatcc_emitter_copy_buffer@@Base+0x138>
  40ad8e:	mov    rax,QWORD PTR [rbp-0x10]
  40ad92:	mov    rax,QWORD PTR [rax]
  40ad95:	mov    rcx,QWORD PTR [rbp-0x10]
  40ad99:	cmp    rax,QWORD PTR [rcx+0x8]
  40ad9d:	jne    40adc9 <flatcc_emitter_copy_buffer@@Base+0x89>
  40ada3:	mov    rdi,QWORD PTR [rbp-0x18]
  40ada7:	mov    rax,QWORD PTR [rbp-0x10]
  40adab:	mov    rsi,QWORD PTR [rax+0x10]
  40adaf:	mov    rax,QWORD PTR [rbp-0x10]
  40adb3:	mov    rdx,QWORD PTR [rax+0x30]
  40adb7:	call   4030e0 <memcpy@plt>
  40adbc:	mov    rax,QWORD PTR [rbp-0x18]
  40adc0:	mov    QWORD PTR [rbp-0x8],rax
  40adc4:	jmp    40ae78 <flatcc_emitter_copy_buffer@@Base+0x138>
  40adc9:	mov    rax,QWORD PTR [rbp-0x10]
  40adcd:	mov    ecx,0xb80
  40add2:	sub    rcx,QWORD PTR [rax+0x18]
  40add6:	mov    QWORD PTR [rbp-0x30],rcx
  40adda:	mov    rdi,QWORD PTR [rbp-0x18]
  40adde:	mov    rax,QWORD PTR [rbp-0x10]
  40ade2:	mov    rsi,QWORD PTR [rax+0x10]
  40ade6:	mov    rdx,QWORD PTR [rbp-0x30]
  40adea:	call   4030e0 <memcpy@plt>
  40adef:	mov    rax,QWORD PTR [rbp-0x18]
  40adf3:	add    rax,QWORD PTR [rbp-0x30]
  40adf7:	mov    QWORD PTR [rbp-0x18],rax
  40adfb:	mov    rax,QWORD PTR [rbp-0x10]
  40adff:	mov    rax,QWORD PTR [rax]
  40ae02:	mov    rax,QWORD PTR [rax+0xb80]
  40ae09:	mov    QWORD PTR [rbp-0x28],rax
  40ae0d:	mov    rax,QWORD PTR [rbp-0x28]
  40ae11:	mov    rcx,QWORD PTR [rbp-0x10]
  40ae15:	cmp    rax,QWORD PTR [rcx+0x8]
  40ae19:	je     40ae53 <flatcc_emitter_copy_buffer@@Base+0x113>
  40ae1f:	mov    rdi,QWORD PTR [rbp-0x18]
  40ae23:	mov    rsi,QWORD PTR [rbp-0x28]
  40ae27:	mov    edx,0xb80
  40ae2c:	call   4030e0 <memcpy@plt>
  40ae31:	mov    rax,QWORD PTR [rbp-0x18]
  40ae35:	add    rax,0xb80
  40ae3b:	mov    QWORD PTR [rbp-0x18],rax
  40ae3f:	mov    rax,QWORD PTR [rbp-0x28]
  40ae43:	mov    rax,QWORD PTR [rax+0xb80]
  40ae4a:	mov    QWORD PTR [rbp-0x28],rax
  40ae4e:	jmp    40ae0d <flatcc_emitter_copy_buffer@@Base+0xcd>
  40ae53:	mov    rdi,QWORD PTR [rbp-0x18]
  40ae57:	mov    rsi,QWORD PTR [rbp-0x28]
  40ae5b:	mov    rax,QWORD PTR [rbp-0x10]
  40ae5f:	mov    ecx,0xb80
  40ae64:	sub    rcx,QWORD PTR [rax+0x28]
  40ae68:	mov    rdx,rcx
  40ae6b:	call   4030e0 <memcpy@plt>
  40ae70:	mov    rax,QWORD PTR [rbp-0x18]
  40ae74:	mov    QWORD PTR [rbp-0x8],rax
  40ae78:	mov    rax,QWORD PTR [rbp-0x8]
  40ae7c:	add    rsp,0x30
  40ae80:	pop    rbp
  40ae81:	ret    
  40ae82:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40ae8c:	nop    DWORD PTR [rax+0x0]
  40ae90:	push   rbp
  40ae91:	mov    rbp,rsp
  40ae94:	sub    rsp,0x20
  40ae98:	mov    QWORD PTR [rbp-0x10],rdi
  40ae9c:	mov    QWORD PTR [rbp-0x18],0x0
  40aea4:	mov    rax,QWORD PTR [rbp-0x10]
  40aea8:	cmp    QWORD PTR [rax],0x0
  40aeac:	je     40af0f <flatcc_emitter_copy_buffer@@Base+0x1cf>
  40aeb2:	mov    rax,QWORD PTR [rbp-0x10]
  40aeb6:	mov    rax,QWORD PTR [rax]
  40aeb9:	mov    rax,QWORD PTR [rax+0xb88]
  40aec0:	mov    rcx,QWORD PTR [rbp-0x10]
  40aec4:	cmp    rax,QWORD PTR [rcx+0x8]
  40aec8:	je     40af0f <flatcc_emitter_copy_buffer@@Base+0x1cf>
  40aece:	mov    rax,QWORD PTR [rbp-0x10]
  40aed2:	mov    rax,QWORD PTR [rax]
  40aed5:	mov    ecx,DWORD PTR [rax+0xb90]
  40aedb:	sub    ecx,0xb80
  40aee1:	mov    rax,QWORD PTR [rbp-0x10]
  40aee5:	mov    rax,QWORD PTR [rax]
  40aee8:	mov    rax,QWORD PTR [rax+0xb88]
  40aeef:	mov    DWORD PTR [rax+0xb90],ecx
  40aef5:	mov    rax,QWORD PTR [rbp-0x10]
  40aef9:	mov    rax,QWORD PTR [rax]
  40aefc:	mov    rax,QWORD PTR [rax+0xb88]
  40af03:	mov    rdx,QWORD PTR [rbp-0x10]
  40af07:	mov    QWORD PTR [rdx],rax
  40af0a:	jmp    40b04c <flatcc_emitter_copy_buffer@@Base+0x30c>
  40af0f:	mov    edi,0xb98
  40af14:	call   4030f0 <malloc@plt>
  40af19:	mov    QWORD PTR [rbp-0x18],rax
  40af1d:	cmp    rax,0x0
  40af21:	jne    40af33 <flatcc_emitter_copy_buffer@@Base+0x1f3>
  40af27:	mov    DWORD PTR [rbp-0x4],0xffffffff
  40af2e:	jmp    40b09b <flatcc_emitter_copy_buffer@@Base+0x35b>
  40af33:	mov    rax,QWORD PTR [rbp-0x10]
  40af37:	mov    rcx,QWORD PTR [rax+0x38]
  40af3b:	add    rcx,0xb80
  40af42:	mov    QWORD PTR [rax+0x38],rcx
  40af46:	mov    rax,QWORD PTR [rbp-0x10]
  40af4a:	cmp    QWORD PTR [rax],0x0
  40af4e:	je     40afae <flatcc_emitter_copy_buffer@@Base+0x26e>
  40af54:	mov    rax,QWORD PTR [rbp-0x10]
  40af58:	mov    rax,QWORD PTR [rax+0x8]
  40af5c:	mov    rcx,QWORD PTR [rbp-0x18]
  40af60:	mov    QWORD PTR [rcx+0xb88],rax
  40af67:	mov    rax,QWORD PTR [rbp-0x10]
  40af6b:	mov    rax,QWORD PTR [rax]
  40af6e:	mov    rcx,QWORD PTR [rbp-0x18]
  40af72:	mov    QWORD PTR [rcx+0xb80],rax
  40af79:	mov    rax,QWORD PTR [rbp-0x18]
  40af7d:	mov    rcx,QWORD PTR [rbp-0x10]
  40af81:	mov    rcx,QWORD PTR [rcx]
  40af84:	mov    QWORD PTR [rcx+0xb88],rax
  40af8b:	mov    rax,QWORD PTR [rbp-0x18]
  40af8f:	mov    rcx,QWORD PTR [rbp-0x10]
  40af93:	mov    rcx,QWORD PTR [rcx+0x8]
  40af97:	mov    QWORD PTR [rcx+0xb80],rax
  40af9e:	mov    rax,QWORD PTR [rbp-0x18]
  40afa2:	mov    rcx,QWORD PTR [rbp-0x10]
  40afa6:	mov    QWORD PTR [rcx],rax
  40afa9:	jmp    40b04c <flatcc_emitter_copy_buffer@@Base+0x30c>
  40afae:	xor    eax,eax
  40afb0:	mov    rcx,QWORD PTR [rbp-0x18]
  40afb4:	mov    rdx,QWORD PTR [rbp-0x10]
  40afb8:	mov    QWORD PTR [rdx],rcx
  40afbb:	mov    rcx,QWORD PTR [rbp-0x18]
  40afbf:	mov    rdx,QWORD PTR [rbp-0x10]
  40afc3:	mov    QWORD PTR [rdx+0x8],rcx
  40afc7:	mov    rcx,QWORD PTR [rbp-0x18]
  40afcb:	mov    rdx,QWORD PTR [rbp-0x18]
  40afcf:	mov    QWORD PTR [rdx+0xb80],rcx
  40afd6:	mov    rcx,QWORD PTR [rbp-0x18]
  40afda:	mov    rdx,QWORD PTR [rbp-0x18]
  40afde:	mov    QWORD PTR [rdx+0xb88],rcx
  40afe5:	mov    rcx,QWORD PTR [rbp-0x10]
  40afe9:	mov    rcx,QWORD PTR [rcx]
  40afec:	add    rcx,0x5c0
  40aff3:	mov    rdx,QWORD PTR [rbp-0x10]
  40aff7:	mov    QWORD PTR [rdx+0x10],rcx
  40affb:	mov    rcx,QWORD PTR [rbp-0x10]
  40afff:	mov    rcx,QWORD PTR [rcx+0x10]
  40b003:	mov    rdx,QWORD PTR [rbp-0x10]
  40b007:	mov    QWORD PTR [rdx+0x20],rcx
  40b00b:	mov    rcx,QWORD PTR [rbp-0x10]
  40b00f:	mov    QWORD PTR [rcx+0x18],0x5c0
  40b017:	mov    rcx,QWORD PTR [rbp-0x10]
  40b01b:	mov    edx,0xb80
  40b020:	sub    rdx,QWORD PTR [rcx+0x18]
  40b024:	mov    rcx,QWORD PTR [rbp-0x10]
  40b028:	mov    QWORD PTR [rcx+0x28],rdx
  40b02c:	mov    rcx,QWORD PTR [rbp-0x10]
  40b030:	mov    rcx,QWORD PTR [rcx+0x18]
  40b034:	sub    eax,ecx
  40b036:	mov    rdx,QWORD PTR [rbp-0x18]
  40b03a:	mov    DWORD PTR [rdx+0xb90],eax
  40b040:	mov    DWORD PTR [rbp-0x4],0x0
  40b047:	jmp    40b09b <flatcc_emitter_copy_buffer@@Base+0x35b>
  40b04c:	mov    rax,QWORD PTR [rbp-0x10]
  40b050:	mov    rax,QWORD PTR [rax]
  40b053:	add    rax,0xb80
  40b059:	mov    rcx,QWORD PTR [rbp-0x10]
  40b05d:	mov    QWORD PTR [rcx+0x10],rax
  40b061:	mov    rax,QWORD PTR [rbp-0x10]
  40b065:	mov    QWORD PTR [rax+0x18],0xb80
  40b06d:	mov    rax,QWORD PTR [rbp-0x10]
  40b071:	mov    rax,QWORD PTR [rax]
  40b074:	mov    rax,QWORD PTR [rax+0xb80]
  40b07b:	mov    edx,DWORD PTR [rax+0xb90]
  40b081:	sub    edx,0xb80
  40b087:	mov    rax,QWORD PTR [rbp-0x10]
  40b08b:	mov    rax,QWORD PTR [rax]
  40b08e:	mov    DWORD PTR [rax+0xb90],edx
  40b094:	mov    DWORD PTR [rbp-0x4],0x0
  40b09b:	mov    eax,DWORD PTR [rbp-0x4]
  40b09e:	add    rsp,0x20
  40b0a2:	pop    rbp
  40b0a3:	ret    
  40b0a4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40b0ae:	xchg   ax,ax
  40b0b0:	push   rbp
  40b0b1:	mov    rbp,rsp
  40b0b4:	sub    rsp,0x20
  40b0b8:	mov    QWORD PTR [rbp-0x10],rdi
  40b0bc:	mov    QWORD PTR [rbp-0x18],0x0
  40b0c4:	mov    rax,QWORD PTR [rbp-0x10]
  40b0c8:	cmp    QWORD PTR [rax+0x8],0x0
  40b0cd:	je     40b10b <flatcc_emitter_copy_buffer@@Base+0x3cb>
  40b0d3:	mov    rax,QWORD PTR [rbp-0x10]
  40b0d7:	mov    rax,QWORD PTR [rax+0x8]
  40b0db:	mov    rax,QWORD PTR [rax+0xb80]
  40b0e2:	mov    rcx,QWORD PTR [rbp-0x10]
  40b0e6:	cmp    rax,QWORD PTR [rcx]
  40b0e9:	je     40b10b <flatcc_emitter_copy_buffer@@Base+0x3cb>
  40b0ef:	mov    rax,QWORD PTR [rbp-0x10]
  40b0f3:	mov    rax,QWORD PTR [rax+0x8]
  40b0f7:	mov    rax,QWORD PTR [rax+0xb80]
  40b0fe:	mov    rcx,QWORD PTR [rbp-0x10]
  40b102:	mov    QWORD PTR [rcx+0x8],rax
  40b106:	jmp    40b24a <flatcc_emitter_copy_buffer@@Base+0x50a>
  40b10b:	mov    edi,0xb98
  40b110:	call   4030f0 <malloc@plt>
  40b115:	mov    QWORD PTR [rbp-0x18],rax
  40b119:	cmp    rax,0x0
  40b11d:	jne    40b12f <flatcc_emitter_copy_buffer@@Base+0x3ef>
  40b123:	mov    DWORD PTR [rbp-0x4],0xffffffff
  40b12a:	jmp    40b296 <flatcc_emitter_copy_buffer@@Base+0x556>
  40b12f:	mov    rax,QWORD PTR [rbp-0x10]
  40b133:	mov    rcx,QWORD PTR [rax+0x38]
  40b137:	add    rcx,0xb80
  40b13e:	mov    QWORD PTR [rax+0x38],rcx
  40b142:	mov    rax,QWORD PTR [rbp-0x10]
  40b146:	cmp    QWORD PTR [rax+0x8],0x0
  40b14b:	je     40b1ac <flatcc_emitter_copy_buffer@@Base+0x46c>
  40b151:	mov    rax,QWORD PTR [rbp-0x10]
  40b155:	mov    rax,QWORD PTR [rax+0x8]
  40b159:	mov    rcx,QWORD PTR [rbp-0x18]
  40b15d:	mov    QWORD PTR [rcx+0xb88],rax
  40b164:	mov    rax,QWORD PTR [rbp-0x10]
  40b168:	mov    rax,QWORD PTR [rax]
  40b16b:	mov    rcx,QWORD PTR [rbp-0x18]
  40b16f:	mov    QWORD PTR [rcx+0xb80],rax
  40b176:	mov    rax,QWORD PTR [rbp-0x18]
  40b17a:	mov    rcx,QWORD PTR [rbp-0x10]
  40b17e:	mov    rcx,QWORD PTR [rcx]
  40b181:	mov    QWORD PTR [rcx+0xb88],rax
  40b188:	mov    rax,QWORD PTR [rbp-0x18]
  40b18c:	mov    rcx,QWORD PTR [rbp-0x10]
  40b190:	mov    rcx,QWORD PTR [rcx+0x8]
  40b194:	mov    QWORD PTR [rcx+0xb80],rax
  40b19b:	mov    rax,QWORD PTR [rbp-0x18]
  40b19f:	mov    rcx,QWORD PTR [rbp-0x10]
  40b1a3:	mov    QWORD PTR [rcx+0x8],rax
  40b1a7:	jmp    40b24a <flatcc_emitter_copy_buffer@@Base+0x50a>
  40b1ac:	xor    eax,eax
  40b1ae:	mov    rcx,QWORD PTR [rbp-0x18]
  40b1b2:	mov    rdx,QWORD PTR [rbp-0x10]
  40b1b6:	mov    QWORD PTR [rdx],rcx
  40b1b9:	mov    rcx,QWORD PTR [rbp-0x18]
  40b1bd:	mov    rdx,QWORD PTR [rbp-0x10]
  40b1c1:	mov    QWORD PTR [rdx+0x8],rcx
  40b1c5:	mov    rcx,QWORD PTR [rbp-0x18]
  40b1c9:	mov    rdx,QWORD PTR [rbp-0x18]
  40b1cd:	mov    QWORD PTR [rdx+0xb80],rcx
  40b1d4:	mov    rcx,QWORD PTR [rbp-0x18]
  40b1d8:	mov    rdx,QWORD PTR [rbp-0x18]
  40b1dc:	mov    QWORD PTR [rdx+0xb88],rcx
  40b1e3:	mov    rcx,QWORD PTR [rbp-0x10]
  40b1e7:	mov    rcx,QWORD PTR [rcx]
  40b1ea:	add    rcx,0x5c0
  40b1f1:	mov    rdx,QWORD PTR [rbp-0x10]
  40b1f5:	mov    QWORD PTR [rdx+0x10],rcx
  40b1f9:	mov    rcx,QWORD PTR [rbp-0x10]
  40b1fd:	mov    rcx,QWORD PTR [rcx+0x10]
  40b201:	mov    rdx,QWORD PTR [rbp-0x10]
  40b205:	mov    QWORD PTR [rdx+0x20],rcx
  40b209:	mov    rcx,QWORD PTR [rbp-0x10]
  40b20d:	mov    QWORD PTR [rcx+0x18],0x5c0
  40b215:	mov    rcx,QWORD PTR [rbp-0x10]
  40b219:	mov    edx,0xb80
  40b21e:	sub    rdx,QWORD PTR [rcx+0x18]
  40b222:	mov    rcx,QWORD PTR [rbp-0x10]
  40b226:	mov    QWORD PTR [rcx+0x28],rdx
  40b22a:	mov    rcx,QWORD PTR [rbp-0x10]
  40b22e:	mov    rcx,QWORD PTR [rcx+0x18]
  40b232:	sub    eax,ecx
  40b234:	mov    rdx,QWORD PTR [rbp-0x18]
  40b238:	mov    DWORD PTR [rdx+0xb90],eax
  40b23e:	mov    DWORD PTR [rbp-0x4],0x0
  40b245:	jmp    40b296 <flatcc_emitter_copy_buffer@@Base+0x556>
  40b24a:	mov    rax,QWORD PTR [rbp-0x10]
  40b24e:	mov    rax,QWORD PTR [rax+0x8]
  40b252:	mov    rcx,QWORD PTR [rbp-0x10]
  40b256:	mov    QWORD PTR [rcx+0x20],rax
  40b25a:	mov    rax,QWORD PTR [rbp-0x10]
  40b25e:	mov    QWORD PTR [rax+0x28],0xb80
  40b266:	mov    rax,QWORD PTR [rbp-0x10]
  40b26a:	mov    rax,QWORD PTR [rax+0x8]
  40b26e:	mov    rax,QWORD PTR [rax+0xb88]
  40b275:	mov    edx,DWORD PTR [rax+0xb90]
  40b27b:	add    edx,0xb80
  40b281:	mov    rax,QWORD PTR [rbp-0x10]
  40b285:	mov    rax,QWORD PTR [rax+0x8]
  40b289:	mov    DWORD PTR [rax+0xb90],edx
  40b28f:	mov    DWORD PTR [rbp-0x4],0x0
  40b296:	mov    eax,DWORD PTR [rbp-0x4]
  40b299:	add    rsp,0x20
  40b29d:	pop    rbp
  40b29e:	ret    
  40b29f:	nop

000000000040b2a0 <__libc_csu_init@@Base>:
  40b2a0:	endbr64 
  40b2a4:	push   r15
  40b2a6:	lea    r15,[rip+0x5b53]        # 410e00 <flatcc_builder_padding_base@@Base+0x4680>
  40b2ad:	push   r14
  40b2af:	mov    r14,rdx
  40b2b2:	push   r13
  40b2b4:	mov    r13,rsi
  40b2b7:	push   r12
  40b2b9:	mov    r12d,edi
  40b2bc:	push   rbp
  40b2bd:	lea    rbp,[rip+0x5b44]        # 410e08 <flatcc_builder_padding_base@@Base+0x4688>
  40b2c4:	push   rbx
  40b2c5:	sub    rbp,r15
  40b2c8:	sub    rsp,0x8
  40b2cc:	call   403000 <free@plt-0x30>
  40b2d1:	sar    rbp,0x3
  40b2d5:	je     40b2f6 <__libc_csu_init@@Base+0x56>
  40b2d7:	xor    ebx,ebx
  40b2d9:	nop    DWORD PTR [rax+0x0]
  40b2e0:	mov    rdx,r14
  40b2e3:	mov    rsi,r13
  40b2e6:	mov    edi,r12d
  40b2e9:	call   QWORD PTR [r15+rbx*8]
  40b2ed:	add    rbx,0x1
  40b2f1:	cmp    rbp,rbx
  40b2f4:	jne    40b2e0 <__libc_csu_init@@Base+0x40>
  40b2f6:	add    rsp,0x8
  40b2fa:	pop    rbx
  40b2fb:	pop    rbp
  40b2fc:	pop    r12
  40b2fe:	pop    r13
  40b300:	pop    r14
  40b302:	pop    r15
  40b304:	ret    
  40b305:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

000000000040b310 <__libc_csu_fini@@Base>:
  40b310:	endbr64 
  40b314:	ret    

Disassembly of section .fini:

000000000040b318 <.fini>:
  40b318:	endbr64 
  40b31c:	sub    rsp,0x8
  40b320:	add    rsp,0x8
  40b324:	ret    
