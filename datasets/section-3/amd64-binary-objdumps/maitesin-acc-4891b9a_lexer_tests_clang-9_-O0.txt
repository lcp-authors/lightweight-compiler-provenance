
../repos/maitesin-acc-4891b9a/bin/lexer_tests:     file format elf64-x86-64


Disassembly of section .init:

0000000000403000 <.init>:
  403000:	endbr64 
  403004:	sub    rsp,0x8
  403008:	mov    rax,QWORD PTR [rip+0x14fd9]        # 417fe8 <__gmon_start__>
  40300f:	test   rax,rax
  403012:	je     403016 <getenv@plt-0x1a>
  403014:	call   rax
  403016:	add    rsp,0x8
  40301a:	ret    

Disassembly of section .plt:

0000000000403020 <getenv@plt-0x10>:
  403020:	push   QWORD PTR [rip+0x14fe2]        # 418008 <UnitySizeMask@@Base+0x4a08>
  403026:	jmp    QWORD PTR [rip+0x14fe4]        # 418010 <UnitySizeMask@@Base+0x4a10>
  40302c:	nop    DWORD PTR [rax+0x0]

0000000000403030 <getenv@plt>:
  403030:	jmp    QWORD PTR [rip+0x14fe2]        # 418018 <getenv@GLIBC_2.2.5>
  403036:	push   0x0
  40303b:	jmp    403020 <getenv@plt-0x10>

0000000000403040 <free@plt>:
  403040:	jmp    QWORD PTR [rip+0x14fda]        # 418020 <free@GLIBC_2.2.5>
  403046:	push   0x1
  40304b:	jmp    403020 <getenv@plt-0x10>

0000000000403050 <putchar@plt>:
  403050:	jmp    QWORD PTR [rip+0x14fd2]        # 418028 <putchar@GLIBC_2.2.5>
  403056:	push   0x2
  40305b:	jmp    403020 <getenv@plt-0x10>

0000000000403060 <__errno_location@plt>:
  403060:	jmp    QWORD PTR [rip+0x14fca]        # 418030 <__errno_location@GLIBC_2.2.5>
  403066:	push   0x3
  40306b:	jmp    403020 <getenv@plt-0x10>

0000000000403070 <strncpy@plt>:
  403070:	jmp    QWORD PTR [rip+0x14fc2]        # 418038 <strncpy@GLIBC_2.2.5>
  403076:	push   0x4
  40307b:	jmp    403020 <getenv@plt-0x10>

0000000000403080 <mkdir@plt>:
  403080:	jmp    QWORD PTR [rip+0x14fba]        # 418040 <mkdir@GLIBC_2.2.5>
  403086:	push   0x5
  40308b:	jmp    403020 <getenv@plt-0x10>

0000000000403090 <fcntl@plt>:
  403090:	jmp    QWORD PTR [rip+0x14fb2]        # 418048 <fcntl@GLIBC_2.2.5>
  403096:	push   0x6
  40309b:	jmp    403020 <getenv@plt-0x10>

00000000004030a0 <getpid@plt>:
  4030a0:	jmp    QWORD PTR [rip+0x14faa]        # 418050 <getpid@GLIBC_2.2.5>
  4030a6:	push   0x7
  4030ab:	jmp    403020 <getenv@plt-0x10>

00000000004030b0 <fclose@plt>:
  4030b0:	jmp    QWORD PTR [rip+0x14fa2]        # 418058 <fclose@GLIBC_2.2.5>
  4030b6:	push   0x8
  4030bb:	jmp    403020 <getenv@plt-0x10>

00000000004030c0 <msync@plt>:
  4030c0:	jmp    QWORD PTR [rip+0x14f9a]        # 418060 <msync@GLIBC_2.2.5>
  4030c6:	push   0x9
  4030cb:	jmp    403020 <getenv@plt-0x10>

00000000004030d0 <strlen@plt>:
  4030d0:	jmp    QWORD PTR [rip+0x14f92]        # 418068 <strlen@GLIBC_2.2.5>
  4030d6:	push   0xa
  4030db:	jmp    403020 <getenv@plt-0x10>

00000000004030e0 <mmap@plt>:
  4030e0:	jmp    QWORD PTR [rip+0x14f8a]        # 418070 <mmap@GLIBC_2.2.5>
  4030e6:	push   0xb
  4030eb:	jmp    403020 <getenv@plt-0x10>

00000000004030f0 <strchr@plt>:
  4030f0:	jmp    QWORD PTR [rip+0x14f82]        # 418078 <strchr@GLIBC_2.2.5>
  4030f6:	push   0xc
  4030fb:	jmp    403020 <getenv@plt-0x10>

0000000000403100 <strrchr@plt>:
  403100:	jmp    QWORD PTR [rip+0x14f7a]        # 418080 <strrchr@GLIBC_2.2.5>
  403106:	push   0xd
  40310b:	jmp    403020 <getenv@plt-0x10>

0000000000403110 <uname@plt>:
  403110:	jmp    QWORD PTR [rip+0x14f72]        # 418088 <uname@GLIBC_2.2.5>
  403116:	push   0xe
  40311b:	jmp    403020 <getenv@plt-0x10>

0000000000403120 <memset@plt>:
  403120:	jmp    QWORD PTR [rip+0x14f6a]        # 418090 <memset@GLIBC_2.2.5>
  403126:	push   0xf
  40312b:	jmp    403020 <getenv@plt-0x10>

0000000000403130 <_setjmp@plt>:
  403130:	jmp    QWORD PTR [rip+0x14f62]        # 418098 <_setjmp@GLIBC_2.2.5>
  403136:	push   0x10
  40313b:	jmp    403020 <getenv@plt-0x10>

0000000000403140 <fprintf@plt>:
  403140:	jmp    QWORD PTR [rip+0x14f5a]        # 4180a0 <fprintf@GLIBC_2.2.5>
  403146:	push   0x11
  40314b:	jmp    403020 <getenv@plt-0x10>

0000000000403150 <ftell@plt>:
  403150:	jmp    QWORD PTR [rip+0x14f52]        # 4180a8 <ftell@GLIBC_2.2.5>
  403156:	push   0x12
  40315b:	jmp    403020 <getenv@plt-0x10>

0000000000403160 <strtol@plt>:
  403160:	jmp    QWORD PTR [rip+0x14f4a]        # 4180b0 <strtol@GLIBC_2.2.5>
  403166:	push   0x13
  40316b:	jmp    403020 <getenv@plt-0x10>

0000000000403170 <memcpy@plt>:
  403170:	jmp    QWORD PTR [rip+0x14f42]        # 4180b8 <memcpy@GLIBC_2.14>
  403176:	push   0x14
  40317b:	jmp    403020 <getenv@plt-0x10>

0000000000403180 <prctl@plt>:
  403180:	jmp    QWORD PTR [rip+0x14f3a]        # 4180c0 <prctl@GLIBC_2.2.5>
  403186:	push   0x15
  40318b:	jmp    403020 <getenv@plt-0x10>

0000000000403190 <fileno@plt>:
  403190:	jmp    QWORD PTR [rip+0x14f32]        # 4180c8 <fileno@GLIBC_2.2.5>
  403196:	push   0x16
  40319b:	jmp    403020 <getenv@plt-0x10>

00000000004031a0 <malloc@plt>:
  4031a0:	jmp    QWORD PTR [rip+0x14f2a]        # 4180d0 <malloc@GLIBC_2.2.5>
  4031a6:	push   0x17
  4031ab:	jmp    403020 <getenv@plt-0x10>

00000000004031b0 <fflush@plt>:
  4031b0:	jmp    QWORD PTR [rip+0x14f22]        # 4180d8 <fflush@GLIBC_2.2.5>
  4031b6:	push   0x18
  4031bb:	jmp    403020 <getenv@plt-0x10>

00000000004031c0 <fseek@plt>:
  4031c0:	jmp    QWORD PTR [rip+0x14f1a]        # 4180e0 <fseek@GLIBC_2.2.5>
  4031c6:	push   0x19
  4031cb:	jmp    403020 <getenv@plt-0x10>

00000000004031d0 <realloc@plt>:
  4031d0:	jmp    QWORD PTR [rip+0x14f12]        # 4180e8 <realloc@GLIBC_2.2.5>
  4031d6:	push   0x1a
  4031db:	jmp    403020 <getenv@plt-0x10>

00000000004031e0 <fdopen@plt>:
  4031e0:	jmp    QWORD PTR [rip+0x14f0a]        # 4180f0 <fdopen@GLIBC_2.2.5>
  4031e6:	push   0x1b
  4031eb:	jmp    403020 <getenv@plt-0x10>

00000000004031f0 <munmap@plt>:
  4031f0:	jmp    QWORD PTR [rip+0x14f02]        # 4180f8 <munmap@GLIBC_2.2.5>
  4031f6:	push   0x1c
  4031fb:	jmp    403020 <getenv@plt-0x10>

0000000000403200 <longjmp@plt>:
  403200:	jmp    QWORD PTR [rip+0x14efa]        # 418100 <longjmp@GLIBC_2.2.5>
  403206:	push   0x1d
  40320b:	jmp    403020 <getenv@plt-0x10>

0000000000403210 <open@plt>:
  403210:	jmp    QWORD PTR [rip+0x14ef2]        # 418108 <open@GLIBC_2.2.5>
  403216:	push   0x1e
  40321b:	jmp    403020 <getenv@plt-0x10>

0000000000403220 <__cxa_atexit@plt>:
  403220:	jmp    QWORD PTR [rip+0x14eea]        # 418110 <__cxa_atexit@GLIBC_2.2.5>
  403226:	push   0x1f
  40322b:	jmp    403020 <getenv@plt-0x10>

0000000000403230 <atoi@plt>:
  403230:	jmp    QWORD PTR [rip+0x14ee2]        # 418118 <atoi@GLIBC_2.2.5>
  403236:	push   0x20
  40323b:	jmp    403020 <getenv@plt-0x10>

0000000000403240 <exit@plt>:
  403240:	jmp    QWORD PTR [rip+0x14eda]        # 418120 <exit@GLIBC_2.2.5>
  403246:	push   0x21
  40324b:	jmp    403020 <getenv@plt-0x10>

0000000000403250 <fwrite@plt>:
  403250:	jmp    QWORD PTR [rip+0x14ed2]        # 418128 <fwrite@GLIBC_2.2.5>
  403256:	push   0x22
  40325b:	jmp    403020 <getenv@plt-0x10>

0000000000403260 <strdup@plt>:
  403260:	jmp    QWORD PTR [rip+0x14eca]        # 418130 <strdup@GLIBC_2.2.5>
  403266:	push   0x23
  40326b:	jmp    403020 <getenv@plt-0x10>

0000000000403270 <strerror@plt>:
  403270:	jmp    QWORD PTR [rip+0x14ec2]        # 418138 <strerror@GLIBC_2.2.5>
  403276:	push   0x24
  40327b:	jmp    403020 <getenv@plt-0x10>

Disassembly of section .text:

0000000000403280 <_start@@Base>:
  403280:	endbr64 
  403284:	xor    ebp,ebp
  403286:	mov    r9,rdx
  403289:	pop    rsi
  40328a:	mov    rdx,rsp
  40328d:	and    rsp,0xfffffffffffffff0
  403291:	push   rax
  403292:	push   rsp
  403293:	mov    r8,0x412bd0
  40329a:	mov    rcx,0x412b60
  4032a1:	mov    rdi,0x404e10
  4032a8:	call   QWORD PTR [rip+0x14d32]        # 417fe0 <__libc_start_main@GLIBC_2.2.5>
  4032ae:	hlt    
  4032af:	nop
  4032b0:	endbr64 
  4032b4:	ret    
  4032b5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4032bf:	nop
  4032c0:	mov    eax,0x418158
  4032c5:	cmp    rax,0x418158
  4032cb:	je     4032e0 <_start@@Base+0x60>
  4032cd:	mov    eax,0x0
  4032d2:	test   rax,rax
  4032d5:	je     4032e0 <_start@@Base+0x60>
  4032d7:	mov    edi,0x418158
  4032dc:	jmp    rax
  4032de:	xchg   ax,ax
  4032e0:	ret    
  4032e1:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4032ec:	nop    DWORD PTR [rax+0x0]
  4032f0:	mov    esi,0x418158
  4032f5:	sub    rsi,0x418158
  4032fc:	mov    rax,rsi
  4032ff:	shr    rsi,0x3f
  403303:	sar    rax,0x3
  403307:	add    rsi,rax
  40330a:	sar    rsi,1
  40330d:	je     403320 <_start@@Base+0xa0>
  40330f:	mov    eax,0x0
  403314:	test   rax,rax
  403317:	je     403320 <_start@@Base+0xa0>
  403319:	mov    edi,0x418158
  40331e:	jmp    rax
  403320:	ret    
  403321:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40332c:	nop    DWORD PTR [rax+0x0]
  403330:	endbr64 
  403334:	cmp    BYTE PTR [rip+0x14e25],0x0        # 418160 <__bss_start@@Base+0x8>
  40333b:	jne    403350 <_start@@Base+0xd0>
  40333d:	push   rbp
  40333e:	mov    rbp,rsp
  403341:	call   4032c0 <_start@@Base+0x40>
  403346:	mov    BYTE PTR [rip+0x14e13],0x1        # 418160 <__bss_start@@Base+0x8>
  40334d:	pop    rbp
  40334e:	ret    
  40334f:	nop
  403350:	ret    
  403351:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40335c:	nop    DWORD PTR [rax+0x0]
  403360:	endbr64 
  403364:	jmp    4032f0 <_start@@Base+0x70>
  403366:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000403370 <simple_file_only_main@@Base>:
  403370:	push   rbp
  403371:	mov    rbp,rsp
  403374:	sub    rsp,0x30
  403378:	lea    rax,[rip+0x14de9]        # 418168 <__bss_start@@Base+0x10>
  40337f:	mov    QWORD PTR [rbp-0x30],rax
  403383:	mov    rax,QWORD PTR [rbp-0x30]
  403387:	mov    rcx,QWORD PTR [rax]
  40338a:	add    rcx,0x1
  403391:	mov    QWORD PTR [rax],rcx
  403394:	mov    rax,QWORD PTR [rip+0x14dd5]        # 418170 <__bss_start@@Base+0x18>
  40339b:	add    rax,0x1
  4033a1:	mov    QWORD PTR [rip+0x14dc8],rax        # 418170 <__bss_start@@Base+0x18>
  4033a8:	lea    rax,[rip+0xfc55]        # 413004 <_IO_stdin_used@@Base+0x4>
  4033af:	mov    QWORD PTR [rbp-0x8],rax
  4033b3:	mov    rsi,QWORD PTR [rbp-0x8]
  4033b7:	lea    rdi,[rbp-0x20]
  4033bb:	call   40dec0 <init_lexer@@Base>
  4033c0:	lea    rdi,[rbp-0x20]
  4033c4:	call   40e2f0 <next@@Base>
  4033c9:	xor    edx,edx
  4033cb:	mov    ecx,edx
  4033cd:	mov    QWORD PTR [rbp-0x28],rax
  4033d1:	mov    rax,QWORD PTR [rbp-0x28]
  4033d5:	mov    edx,DWORD PTR [rax]
  4033d7:	mov    esi,edx
  4033d9:	mov    rdi,rcx
  4033dc:	mov    rdx,rcx
  4033df:	mov    ecx,0x17
  4033e4:	mov    r8d,0x94
  4033ea:	call   406f90 <UnityAssertEqualNumber@@Base>
  4033ef:	lea    rdi,[rbp-0x20]
  4033f3:	call   40e2f0 <next@@Base>
  4033f8:	xor    r8d,r8d
  4033fb:	mov    edx,r8d
  4033fe:	mov    QWORD PTR [rbp-0x28],rax
  403402:	mov    rax,QWORD PTR [rbp-0x28]
  403406:	mov    r8d,DWORD PTR [rax]
  403409:	mov    esi,r8d
  40340c:	mov    edi,0x2
  403411:	mov    ecx,0x19
  403416:	mov    r8d,0x94
  40341c:	call   406f90 <UnityAssertEqualNumber@@Base>
  403421:	lea    rdi,[rbp-0x20]
  403425:	call   40e2f0 <next@@Base>
  40342a:	xor    r8d,r8d
  40342d:	mov    edx,r8d
  403430:	mov    QWORD PTR [rbp-0x28],rax
  403434:	mov    rax,QWORD PTR [rbp-0x28]
  403438:	mov    r8d,DWORD PTR [rax]
  40343b:	mov    esi,r8d
  40343e:	mov    edi,0x3
  403443:	mov    ecx,0x1b
  403448:	mov    r8d,0x94
  40344e:	call   406f90 <UnityAssertEqualNumber@@Base>
  403453:	lea    rdi,[rbp-0x20]
  403457:	call   40e2f0 <next@@Base>
  40345c:	xor    r8d,r8d
  40345f:	mov    edx,r8d
  403462:	mov    QWORD PTR [rbp-0x28],rax
  403466:	mov    rax,QWORD PTR [rbp-0x28]
  40346a:	mov    r8d,DWORD PTR [rax]
  40346d:	mov    esi,r8d
  403470:	mov    edi,0x4
  403475:	mov    ecx,0x1d
  40347a:	mov    r8d,0x94
  403480:	call   406f90 <UnityAssertEqualNumber@@Base>
  403485:	lea    rdi,[rbp-0x20]
  403489:	call   40e2f0 <next@@Base>
  40348e:	xor    r8d,r8d
  403491:	mov    edx,r8d
  403494:	mov    QWORD PTR [rbp-0x28],rax
  403498:	mov    rax,QWORD PTR [rbp-0x28]
  40349c:	mov    r8d,DWORD PTR [rax]
  40349f:	mov    esi,r8d
  4034a2:	mov    edi,0x5
  4034a7:	mov    ecx,0x1f
  4034ac:	mov    r8d,0x94
  4034b2:	call   406f90 <UnityAssertEqualNumber@@Base>
  4034b7:	lea    rdi,[rbp-0x20]
  4034bb:	call   40e2f0 <next@@Base>
  4034c0:	xor    r8d,r8d
  4034c3:	mov    edx,r8d
  4034c6:	mov    QWORD PTR [rbp-0x28],rax
  4034ca:	mov    rax,QWORD PTR [rbp-0x28]
  4034ce:	mov    r8d,DWORD PTR [rax]
  4034d1:	mov    esi,r8d
  4034d4:	mov    edi,0x7
  4034d9:	mov    ecx,0x21
  4034de:	mov    r8d,0x94
  4034e4:	call   406f90 <UnityAssertEqualNumber@@Base>
  4034e9:	lea    rdi,[rbp-0x20]
  4034ed:	call   40e2f0 <next@@Base>
  4034f2:	xor    r8d,r8d
  4034f5:	mov    edx,r8d
  4034f8:	mov    QWORD PTR [rbp-0x28],rax
  4034fc:	mov    rax,QWORD PTR [rbp-0x28]
  403500:	mov    r8d,DWORD PTR [rax]
  403503:	mov    esi,r8d
  403506:	mov    edi,0x1
  40350b:	mov    ecx,0x23
  403510:	mov    r8d,0x94
  403516:	call   406f90 <UnityAssertEqualNumber@@Base>
  40351b:	lea    rdi,[rbp-0x20]
  40351f:	call   40e2f0 <next@@Base>
  403524:	xor    r8d,r8d
  403527:	mov    edx,r8d
  40352a:	mov    QWORD PTR [rbp-0x28],rax
  40352e:	mov    rax,QWORD PTR [rbp-0x28]
  403532:	mov    r8d,DWORD PTR [rax]
  403535:	mov    esi,r8d
  403538:	mov    edi,0x8
  40353d:	mov    ecx,0x25
  403542:	mov    r8d,0x94
  403548:	call   406f90 <UnityAssertEqualNumber@@Base>
  40354d:	lea    rdi,[rbp-0x20]
  403551:	call   40e2f0 <next@@Base>
  403556:	xor    r8d,r8d
  403559:	mov    edx,r8d
  40355c:	mov    QWORD PTR [rbp-0x28],rax
  403560:	mov    rax,QWORD PTR [rbp-0x28]
  403564:	mov    r8d,DWORD PTR [rax]
  403567:	mov    esi,r8d
  40356a:	mov    edi,0x6
  40356f:	mov    ecx,0x27
  403574:	mov    r8d,0x94
  40357a:	call   406f90 <UnityAssertEqualNumber@@Base>
  40357f:	lea    rdi,[rbp-0x20]
  403583:	call   40e2f0 <next@@Base>
  403588:	xor    r8d,r8d
  40358b:	mov    edx,r8d
  40358e:	mov    QWORD PTR [rbp-0x28],rax
  403592:	mov    rax,QWORD PTR [rbp-0x28]
  403596:	mov    r8d,DWORD PTR [rax]
  403599:	mov    esi,r8d
  40359c:	mov    edi,0x9
  4035a1:	mov    ecx,0x29
  4035a6:	mov    r8d,0x94
  4035ac:	call   406f90 <UnityAssertEqualNumber@@Base>
  4035b1:	lea    rdi,[rbp-0x20]
  4035b5:	call   40df40 <destroy_lexer@@Base>
  4035ba:	add    rsp,0x30
  4035be:	pop    rbp
  4035bf:	ret    

00000000004035c0 <push_token_to_stack@@Base>:
  4035c0:	push   rbp
  4035c1:	mov    rbp,rsp
  4035c4:	sub    rsp,0x30
  4035c8:	lea    rax,[rip+0x14ba9]        # 418178 <__bss_start@@Base+0x20>
  4035cf:	mov    QWORD PTR [rbp-0x30],rax
  4035d3:	mov    rax,QWORD PTR [rbp-0x30]
  4035d7:	mov    rcx,QWORD PTR [rax]
  4035da:	add    rcx,0x1
  4035e1:	mov    QWORD PTR [rax],rcx
  4035e4:	mov    rax,QWORD PTR [rip+0x14b95]        # 418180 <__bss_start@@Base+0x28>
  4035eb:	add    rax,0x1
  4035f1:	mov    QWORD PTR [rip+0x14b88],rax        # 418180 <__bss_start@@Base+0x28>
  4035f8:	lea    rax,[rip+0xfa05]        # 413004 <_IO_stdin_used@@Base+0x4>
  4035ff:	mov    QWORD PTR [rbp-0x8],rax
  403603:	mov    rsi,QWORD PTR [rbp-0x8]
  403607:	lea    rdi,[rbp-0x20]
  40360b:	call   40dec0 <init_lexer@@Base>
  403610:	mov    edi,0x8
  403615:	call   4031a0 <malloc@plt>
  40361a:	mov    QWORD PTR [rbp-0x28],rax
  40361e:	mov    rsi,QWORD PTR [rbp-0x28]
  403622:	lea    rdi,[rbp-0x20]
  403626:	call   40e080 <push_back@@Base>
  40362b:	xor    edx,edx
  40362d:	mov    rax,QWORD PTR [rbp-0x18]
  403631:	mov    rdi,QWORD PTR [rax+0x8]
  403635:	mov    rsi,QWORD PTR [rbp-0x28]
  403639:	mov    ecx,0x3e
  40363e:	mov    r8d,0x94
  403644:	call   406f90 <UnityAssertEqualNumber@@Base>
  403649:	lea    rdi,[rbp-0x20]
  40364d:	call   40df40 <destroy_lexer@@Base>
  403652:	mov    rax,QWORD PTR [rbp-0x28]
  403656:	mov    rdi,rax
  403659:	call   403040 <free@plt>
  40365e:	add    rsp,0x30
  403662:	pop    rbp
  403663:	ret    
  403664:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40366e:	xchg   ax,ax

0000000000403670 <push_two_tokens_to_stack@@Base>:
  403670:	push   rbp
  403671:	mov    rbp,rsp
  403674:	sub    rsp,0x40
  403678:	lea    rax,[rip+0x14b09]        # 418188 <__bss_start@@Base+0x30>
  40367f:	mov    QWORD PTR [rbp-0x38],rax
  403683:	mov    rax,QWORD PTR [rbp-0x38]
  403687:	mov    rcx,QWORD PTR [rax]
  40368a:	add    rcx,0x1
  403691:	mov    QWORD PTR [rax],rcx
  403694:	mov    rax,QWORD PTR [rip+0x14af5]        # 418190 <__bss_start@@Base+0x38>
  40369b:	add    rax,0x1
  4036a1:	mov    QWORD PTR [rip+0x14ae8],rax        # 418190 <__bss_start@@Base+0x38>
  4036a8:	lea    rax,[rip+0xf955]        # 413004 <_IO_stdin_used@@Base+0x4>
  4036af:	mov    QWORD PTR [rbp-0x8],rax
  4036b3:	mov    rsi,QWORD PTR [rbp-0x8]
  4036b7:	lea    rdi,[rbp-0x20]
  4036bb:	call   40dec0 <init_lexer@@Base>
  4036c0:	mov    edi,0x8
  4036c5:	call   4031a0 <malloc@plt>
  4036ca:	mov    QWORD PTR [rbp-0x28],rax
  4036ce:	mov    edi,0x8
  4036d3:	call   4031a0 <malloc@plt>
  4036d8:	mov    QWORD PTR [rbp-0x30],rax
  4036dc:	mov    rsi,QWORD PTR [rbp-0x28]
  4036e0:	lea    rdi,[rbp-0x20]
  4036e4:	call   40e080 <push_back@@Base>
  4036e9:	xor    edx,edx
  4036eb:	mov    rax,QWORD PTR [rbp-0x18]
  4036ef:	mov    rdi,QWORD PTR [rax+0x8]
  4036f3:	mov    rsi,QWORD PTR [rbp-0x28]
  4036f7:	mov    ecx,0x56
  4036fc:	mov    r8d,0x94
  403702:	call   406f90 <UnityAssertEqualNumber@@Base>
  403707:	mov    rsi,QWORD PTR [rbp-0x30]
  40370b:	lea    rdi,[rbp-0x20]
  40370f:	call   40e080 <push_back@@Base>
  403714:	xor    r8d,r8d
  403717:	mov    edx,r8d
  40371a:	mov    rax,QWORD PTR [rbp-0x18]
  40371e:	mov    rdi,QWORD PTR [rax+0x8]
  403722:	mov    rsi,QWORD PTR [rbp-0x30]
  403726:	mov    ecx,0x58
  40372b:	mov    r8d,0x94
  403731:	call   406f90 <UnityAssertEqualNumber@@Base>
  403736:	lea    rdi,[rbp-0x20]
  40373a:	call   40df40 <destroy_lexer@@Base>
  40373f:	mov    rax,QWORD PTR [rbp-0x28]
  403743:	mov    rdi,rax
  403746:	call   403040 <free@plt>
  40374b:	mov    rax,QWORD PTR [rbp-0x30]
  40374f:	mov    rdi,rax
  403752:	call   403040 <free@plt>
  403757:	add    rsp,0x40
  40375b:	pop    rbp
  40375c:	ret    
  40375d:	nop    DWORD PTR [rax]

0000000000403760 <push_token_and_call_next@@Base>:
  403760:	push   rbp
  403761:	mov    rbp,rsp
  403764:	sub    rsp,0x40
  403768:	lea    rax,[rip+0x14a29]        # 418198 <__bss_start@@Base+0x40>
  40376f:	mov    QWORD PTR [rbp-0x38],rax
  403773:	mov    rax,QWORD PTR [rbp-0x38]
  403777:	mov    rcx,QWORD PTR [rax]
  40377a:	add    rcx,0x1
  403781:	mov    QWORD PTR [rax],rcx
  403784:	mov    rax,QWORD PTR [rip+0x14a15]        # 4181a0 <__bss_start@@Base+0x48>
  40378b:	add    rax,0x1
  403791:	mov    QWORD PTR [rip+0x14a08],rax        # 4181a0 <__bss_start@@Base+0x48>
  403798:	lea    rax,[rip+0xf865]        # 413004 <_IO_stdin_used@@Base+0x4>
  40379f:	mov    QWORD PTR [rbp-0x8],rax
  4037a3:	mov    rsi,QWORD PTR [rbp-0x8]
  4037a7:	lea    rdi,[rbp-0x20]
  4037ab:	call   40dec0 <init_lexer@@Base>
  4037b0:	mov    edi,0x8
  4037b5:	call   4031a0 <malloc@plt>
  4037ba:	mov    QWORD PTR [rbp-0x28],rax
  4037be:	mov    rsi,QWORD PTR [rbp-0x28]
  4037c2:	lea    rdi,[rbp-0x20]
  4037c6:	call   40e080 <push_back@@Base>
  4037cb:	lea    rdi,[rbp-0x20]
  4037cf:	call   40e2f0 <next@@Base>
  4037d4:	xor    edx,edx
  4037d6:	mov    QWORD PTR [rbp-0x30],rax
  4037da:	mov    rdi,QWORD PTR [rbp-0x28]
  4037de:	mov    rsi,QWORD PTR [rbp-0x30]
  4037e2:	mov    ecx,0x71
  4037e7:	mov    r8d,0x94
  4037ed:	call   406f90 <UnityAssertEqualNumber@@Base>
  4037f2:	lea    rdi,[rbp-0x20]
  4037f6:	call   40df40 <destroy_lexer@@Base>
  4037fb:	mov    rax,QWORD PTR [rbp-0x28]
  4037ff:	mov    rdi,rax
  403802:	call   403040 <free@plt>
  403807:	add    rsp,0x40
  40380b:	pop    rbp
  40380c:	ret    
  40380d:	nop    DWORD PTR [rax]

0000000000403810 <if_without_else@@Base>:
  403810:	push   rbp
  403811:	mov    rbp,rsp
  403814:	sub    rsp,0x30
  403818:	lea    rax,[rip+0x14989]        # 4181a8 <__bss_start@@Base+0x50>
  40381f:	mov    QWORD PTR [rbp-0x30],rax
  403823:	mov    rax,QWORD PTR [rbp-0x30]
  403827:	mov    rcx,QWORD PTR [rax]
  40382a:	add    rcx,0x1
  403831:	mov    QWORD PTR [rax],rcx
  403834:	mov    rax,QWORD PTR [rip+0x14975]        # 4181b0 <__bss_start@@Base+0x58>
  40383b:	add    rax,0x1
  403841:	mov    QWORD PTR [rip+0x14968],rax        # 4181b0 <__bss_start@@Base+0x58>
  403848:	lea    rax,[rip+0xf7cf]        # 41301e <_IO_stdin_used@@Base+0x1e>
  40384f:	mov    QWORD PTR [rbp-0x8],rax
  403853:	mov    rsi,QWORD PTR [rbp-0x8]
  403857:	lea    rdi,[rbp-0x20]
  40385b:	call   40dec0 <init_lexer@@Base>
  403860:	lea    rdi,[rbp-0x20]
  403864:	call   40e2f0 <next@@Base>
  403869:	xor    edx,edx
  40386b:	mov    ecx,edx
  40386d:	mov    QWORD PTR [rbp-0x28],rax
  403871:	mov    rax,QWORD PTR [rbp-0x28]
  403875:	mov    edx,DWORD PTR [rax]
  403877:	mov    esi,edx
  403879:	mov    rdi,rcx
  40387c:	mov    rdx,rcx
  40387f:	mov    ecx,0x8c
  403884:	mov    r8d,0x94
  40388a:	call   406f90 <UnityAssertEqualNumber@@Base>
  40388f:	lea    rdi,[rbp-0x20]
  403893:	call   40e2f0 <next@@Base>
  403898:	xor    r8d,r8d
  40389b:	mov    edx,r8d
  40389e:	mov    QWORD PTR [rbp-0x28],rax
  4038a2:	mov    rax,QWORD PTR [rbp-0x28]
  4038a6:	mov    r8d,DWORD PTR [rax]
  4038a9:	mov    esi,r8d
  4038ac:	mov    edi,0x2
  4038b1:	mov    ecx,0x8e
  4038b6:	mov    r8d,0x94
  4038bc:	call   406f90 <UnityAssertEqualNumber@@Base>
  4038c1:	lea    rdi,[rbp-0x20]
  4038c5:	call   40e2f0 <next@@Base>
  4038ca:	xor    r8d,r8d
  4038cd:	mov    edx,r8d
  4038d0:	mov    QWORD PTR [rbp-0x28],rax
  4038d4:	mov    rax,QWORD PTR [rbp-0x28]
  4038d8:	mov    r8d,DWORD PTR [rax]
  4038db:	mov    esi,r8d
  4038de:	mov    edi,0x3
  4038e3:	mov    ecx,0x90
  4038e8:	mov    r8d,0x94
  4038ee:	call   406f90 <UnityAssertEqualNumber@@Base>
  4038f3:	lea    rdi,[rbp-0x20]
  4038f7:	call   40e2f0 <next@@Base>
  4038fc:	xor    r8d,r8d
  4038ff:	mov    edx,r8d
  403902:	mov    QWORD PTR [rbp-0x28],rax
  403906:	mov    rax,QWORD PTR [rbp-0x28]
  40390a:	mov    r8d,DWORD PTR [rax]
  40390d:	mov    esi,r8d
  403910:	mov    edi,0x4
  403915:	mov    ecx,0x92
  40391a:	mov    r8d,0x94
  403920:	call   406f90 <UnityAssertEqualNumber@@Base>
  403925:	lea    rdi,[rbp-0x20]
  403929:	call   40e2f0 <next@@Base>
  40392e:	xor    r8d,r8d
  403931:	mov    edx,r8d
  403934:	mov    QWORD PTR [rbp-0x28],rax
  403938:	mov    rax,QWORD PTR [rbp-0x28]
  40393c:	mov    r8d,DWORD PTR [rax]
  40393f:	mov    esi,r8d
  403942:	mov    edi,0x5
  403947:	mov    ecx,0x94
  40394c:	mov    r8d,0x94
  403952:	call   406f90 <UnityAssertEqualNumber@@Base>
  403957:	lea    rdi,[rbp-0x20]
  40395b:	call   40e2f0 <next@@Base>
  403960:	xor    r8d,r8d
  403963:	mov    edx,r8d
  403966:	mov    QWORD PTR [rbp-0x28],rax
  40396a:	mov    rax,QWORD PTR [rbp-0x28]
  40396e:	mov    r8d,DWORD PTR [rax]
  403971:	mov    esi,r8d
  403974:	mov    edi,0xa
  403979:	mov    ecx,0x96
  40397e:	mov    r8d,0x94
  403984:	call   406f90 <UnityAssertEqualNumber@@Base>
  403989:	lea    rdi,[rbp-0x20]
  40398d:	call   40e2f0 <next@@Base>
  403992:	xor    r8d,r8d
  403995:	mov    edx,r8d
  403998:	mov    QWORD PTR [rbp-0x28],rax
  40399c:	mov    rax,QWORD PTR [rbp-0x28]
  4039a0:	mov    r8d,DWORD PTR [rax]
  4039a3:	mov    esi,r8d
  4039a6:	mov    edi,0x3
  4039ab:	mov    ecx,0x98
  4039b0:	mov    r8d,0x94
  4039b6:	call   406f90 <UnityAssertEqualNumber@@Base>
  4039bb:	lea    rdi,[rbp-0x20]
  4039bf:	call   40e2f0 <next@@Base>
  4039c4:	xor    r8d,r8d
  4039c7:	mov    edx,r8d
  4039ca:	mov    QWORD PTR [rbp-0x28],rax
  4039ce:	mov    rax,QWORD PTR [rbp-0x28]
  4039d2:	mov    r8d,DWORD PTR [rax]
  4039d5:	mov    esi,r8d
  4039d8:	mov    edi,0x1
  4039dd:	mov    ecx,0x9a
  4039e2:	mov    r8d,0x94
  4039e8:	call   406f90 <UnityAssertEqualNumber@@Base>
  4039ed:	lea    rdi,[rbp-0x20]
  4039f1:	call   40e2f0 <next@@Base>
  4039f6:	xor    r8d,r8d
  4039f9:	mov    edx,r8d
  4039fc:	mov    QWORD PTR [rbp-0x28],rax
  403a00:	mov    rax,QWORD PTR [rbp-0x28]
  403a04:	mov    r8d,DWORD PTR [rax]
  403a07:	mov    esi,r8d
  403a0a:	mov    edi,0xc
  403a0f:	mov    ecx,0x9c
  403a14:	mov    r8d,0x94
  403a1a:	call   406f90 <UnityAssertEqualNumber@@Base>
  403a1f:	lea    rdi,[rbp-0x20]
  403a23:	call   40e2f0 <next@@Base>
  403a28:	xor    r8d,r8d
  403a2b:	mov    edx,r8d
  403a2e:	mov    QWORD PTR [rbp-0x28],rax
  403a32:	mov    rax,QWORD PTR [rbp-0x28]
  403a36:	mov    r8d,DWORD PTR [rax]
  403a39:	mov    esi,r8d
  403a3c:	mov    edi,0x1
  403a41:	mov    ecx,0x9e
  403a46:	mov    r8d,0x94
  403a4c:	call   406f90 <UnityAssertEqualNumber@@Base>
  403a51:	lea    rdi,[rbp-0x20]
  403a55:	call   40e2f0 <next@@Base>
  403a5a:	xor    r8d,r8d
  403a5d:	mov    edx,r8d
  403a60:	mov    QWORD PTR [rbp-0x28],rax
  403a64:	mov    rax,QWORD PTR [rbp-0x28]
  403a68:	mov    r8d,DWORD PTR [rax]
  403a6b:	mov    esi,r8d
  403a6e:	mov    edi,0x4
  403a73:	mov    ecx,0xa0
  403a78:	mov    r8d,0x94
  403a7e:	call   406f90 <UnityAssertEqualNumber@@Base>
  403a83:	lea    rdi,[rbp-0x20]
  403a87:	call   40e2f0 <next@@Base>
  403a8c:	xor    r8d,r8d
  403a8f:	mov    edx,r8d
  403a92:	mov    QWORD PTR [rbp-0x28],rax
  403a96:	mov    rax,QWORD PTR [rbp-0x28]
  403a9a:	mov    r8d,DWORD PTR [rax]
  403a9d:	mov    esi,r8d
  403aa0:	mov    edi,0x5
  403aa5:	mov    ecx,0xa2
  403aaa:	mov    r8d,0x94
  403ab0:	call   406f90 <UnityAssertEqualNumber@@Base>
  403ab5:	lea    rdi,[rbp-0x20]
  403ab9:	call   40e2f0 <next@@Base>
  403abe:	xor    r8d,r8d
  403ac1:	mov    edx,r8d
  403ac4:	mov    QWORD PTR [rbp-0x28],rax
  403ac8:	mov    rax,QWORD PTR [rbp-0x28]
  403acc:	mov    r8d,DWORD PTR [rax]
  403acf:	mov    esi,r8d
  403ad2:	mov    edi,0x7
  403ad7:	mov    ecx,0xa4
  403adc:	mov    r8d,0x94
  403ae2:	call   406f90 <UnityAssertEqualNumber@@Base>
  403ae7:	lea    rdi,[rbp-0x20]
  403aeb:	call   40e2f0 <next@@Base>
  403af0:	xor    r8d,r8d
  403af3:	mov    edx,r8d
  403af6:	mov    QWORD PTR [rbp-0x28],rax
  403afa:	mov    rax,QWORD PTR [rbp-0x28]
  403afe:	mov    r8d,DWORD PTR [rax]
  403b01:	mov    esi,r8d
  403b04:	mov    edi,0x1
  403b09:	mov    ecx,0xa6
  403b0e:	mov    r8d,0x94
  403b14:	call   406f90 <UnityAssertEqualNumber@@Base>
  403b19:	lea    rdi,[rbp-0x20]
  403b1d:	call   40e2f0 <next@@Base>
  403b22:	xor    r8d,r8d
  403b25:	mov    edx,r8d
  403b28:	mov    QWORD PTR [rbp-0x28],rax
  403b2c:	mov    rax,QWORD PTR [rbp-0x28]
  403b30:	mov    r8d,DWORD PTR [rax]
  403b33:	mov    esi,r8d
  403b36:	mov    edi,0x8
  403b3b:	mov    ecx,0xa8
  403b40:	mov    r8d,0x94
  403b46:	call   406f90 <UnityAssertEqualNumber@@Base>
  403b4b:	lea    rdi,[rbp-0x20]
  403b4f:	call   40e2f0 <next@@Base>
  403b54:	xor    r8d,r8d
  403b57:	mov    edx,r8d
  403b5a:	mov    QWORD PTR [rbp-0x28],rax
  403b5e:	mov    rax,QWORD PTR [rbp-0x28]
  403b62:	mov    r8d,DWORD PTR [rax]
  403b65:	mov    esi,r8d
  403b68:	mov    edi,0x6
  403b6d:	mov    ecx,0xaa
  403b72:	mov    r8d,0x94
  403b78:	call   406f90 <UnityAssertEqualNumber@@Base>
  403b7d:	lea    rdi,[rbp-0x20]
  403b81:	call   40e2f0 <next@@Base>
  403b86:	xor    r8d,r8d
  403b89:	mov    edx,r8d
  403b8c:	mov    QWORD PTR [rbp-0x28],rax
  403b90:	mov    rax,QWORD PTR [rbp-0x28]
  403b94:	mov    r8d,DWORD PTR [rax]
  403b97:	mov    esi,r8d
  403b9a:	mov    edi,0x7
  403b9f:	mov    ecx,0xac
  403ba4:	mov    r8d,0x94
  403baa:	call   406f90 <UnityAssertEqualNumber@@Base>
  403baf:	lea    rdi,[rbp-0x20]
  403bb3:	call   40e2f0 <next@@Base>
  403bb8:	xor    r8d,r8d
  403bbb:	mov    edx,r8d
  403bbe:	mov    QWORD PTR [rbp-0x28],rax
  403bc2:	mov    rax,QWORD PTR [rbp-0x28]
  403bc6:	mov    r8d,DWORD PTR [rax]
  403bc9:	mov    esi,r8d
  403bcc:	mov    edi,0x1
  403bd1:	mov    ecx,0xae
  403bd6:	mov    r8d,0x94
  403bdc:	call   406f90 <UnityAssertEqualNumber@@Base>
  403be1:	lea    rdi,[rbp-0x20]
  403be5:	call   40e2f0 <next@@Base>
  403bea:	xor    r8d,r8d
  403bed:	mov    edx,r8d
  403bf0:	mov    QWORD PTR [rbp-0x28],rax
  403bf4:	mov    rax,QWORD PTR [rbp-0x28]
  403bf8:	mov    r8d,DWORD PTR [rax]
  403bfb:	mov    esi,r8d
  403bfe:	mov    edi,0x8
  403c03:	mov    ecx,0xb0
  403c08:	mov    r8d,0x94
  403c0e:	call   406f90 <UnityAssertEqualNumber@@Base>
  403c13:	lea    rdi,[rbp-0x20]
  403c17:	call   40e2f0 <next@@Base>
  403c1c:	xor    r8d,r8d
  403c1f:	mov    edx,r8d
  403c22:	mov    QWORD PTR [rbp-0x28],rax
  403c26:	mov    rax,QWORD PTR [rbp-0x28]
  403c2a:	mov    r8d,DWORD PTR [rax]
  403c2d:	mov    esi,r8d
  403c30:	mov    edi,0x6
  403c35:	mov    ecx,0xb2
  403c3a:	mov    r8d,0x94
  403c40:	call   406f90 <UnityAssertEqualNumber@@Base>
  403c45:	lea    rdi,[rbp-0x20]
  403c49:	call   40e2f0 <next@@Base>
  403c4e:	xor    r8d,r8d
  403c51:	mov    edx,r8d
  403c54:	mov    QWORD PTR [rbp-0x28],rax
  403c58:	mov    rax,QWORD PTR [rbp-0x28]
  403c5c:	mov    r8d,DWORD PTR [rax]
  403c5f:	mov    esi,r8d
  403c62:	mov    edi,0x9
  403c67:	mov    ecx,0xb4
  403c6c:	mov    r8d,0x94
  403c72:	call   406f90 <UnityAssertEqualNumber@@Base>
  403c77:	lea    rdi,[rbp-0x20]
  403c7b:	call   40df40 <destroy_lexer@@Base>
  403c80:	add    rsp,0x30
  403c84:	pop    rbp
  403c85:	ret    
  403c86:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000403c90 <if_with_else@@Base>:
  403c90:	push   rbp
  403c91:	mov    rbp,rsp
  403c94:	sub    rsp,0x30
  403c98:	lea    rax,[rip+0x14519]        # 4181b8 <__bss_start@@Base+0x60>
  403c9f:	mov    QWORD PTR [rbp-0x30],rax
  403ca3:	mov    rax,QWORD PTR [rbp-0x30]
  403ca7:	mov    rcx,QWORD PTR [rax]
  403caa:	add    rcx,0x1
  403cb1:	mov    QWORD PTR [rax],rcx
  403cb4:	mov    rax,QWORD PTR [rip+0x14505]        # 4181c0 <__bss_start@@Base+0x68>
  403cbb:	add    rax,0x1
  403cc1:	mov    QWORD PTR [rip+0x144f8],rax        # 4181c0 <__bss_start@@Base+0x68>
  403cc8:	lea    rax,[rip+0xf388]        # 413057 <_IO_stdin_used@@Base+0x57>
  403ccf:	mov    QWORD PTR [rbp-0x8],rax
  403cd3:	mov    rsi,QWORD PTR [rbp-0x8]
  403cd7:	lea    rdi,[rbp-0x20]
  403cdb:	call   40dec0 <init_lexer@@Base>
  403ce0:	lea    rdi,[rbp-0x20]
  403ce4:	call   40e2f0 <next@@Base>
  403ce9:	xor    edx,edx
  403ceb:	mov    ecx,edx
  403ced:	mov    QWORD PTR [rbp-0x28],rax
  403cf1:	mov    rax,QWORD PTR [rbp-0x28]
  403cf5:	mov    edx,DWORD PTR [rax]
  403cf7:	mov    esi,edx
  403cf9:	mov    rdi,rcx
  403cfc:	mov    rdx,rcx
  403cff:	mov    ecx,0xd2
  403d04:	mov    r8d,0x94
  403d0a:	call   406f90 <UnityAssertEqualNumber@@Base>
  403d0f:	lea    rdi,[rbp-0x20]
  403d13:	call   40e2f0 <next@@Base>
  403d18:	xor    r8d,r8d
  403d1b:	mov    edx,r8d
  403d1e:	mov    QWORD PTR [rbp-0x28],rax
  403d22:	mov    rax,QWORD PTR [rbp-0x28]
  403d26:	mov    r8d,DWORD PTR [rax]
  403d29:	mov    esi,r8d
  403d2c:	mov    edi,0x2
  403d31:	mov    ecx,0xd4
  403d36:	mov    r8d,0x94
  403d3c:	call   406f90 <UnityAssertEqualNumber@@Base>
  403d41:	lea    rdi,[rbp-0x20]
  403d45:	call   40e2f0 <next@@Base>
  403d4a:	xor    r8d,r8d
  403d4d:	mov    edx,r8d
  403d50:	mov    QWORD PTR [rbp-0x28],rax
  403d54:	mov    rax,QWORD PTR [rbp-0x28]
  403d58:	mov    r8d,DWORD PTR [rax]
  403d5b:	mov    esi,r8d
  403d5e:	mov    edi,0x3
  403d63:	mov    ecx,0xd6
  403d68:	mov    r8d,0x94
  403d6e:	call   406f90 <UnityAssertEqualNumber@@Base>
  403d73:	lea    rdi,[rbp-0x20]
  403d77:	call   40e2f0 <next@@Base>
  403d7c:	xor    r8d,r8d
  403d7f:	mov    edx,r8d
  403d82:	mov    QWORD PTR [rbp-0x28],rax
  403d86:	mov    rax,QWORD PTR [rbp-0x28]
  403d8a:	mov    r8d,DWORD PTR [rax]
  403d8d:	mov    esi,r8d
  403d90:	mov    edi,0x4
  403d95:	mov    ecx,0xd8
  403d9a:	mov    r8d,0x94
  403da0:	call   406f90 <UnityAssertEqualNumber@@Base>
  403da5:	lea    rdi,[rbp-0x20]
  403da9:	call   40e2f0 <next@@Base>
  403dae:	xor    r8d,r8d
  403db1:	mov    edx,r8d
  403db4:	mov    QWORD PTR [rbp-0x28],rax
  403db8:	mov    rax,QWORD PTR [rbp-0x28]
  403dbc:	mov    r8d,DWORD PTR [rax]
  403dbf:	mov    esi,r8d
  403dc2:	mov    edi,0x5
  403dc7:	mov    ecx,0xda
  403dcc:	mov    r8d,0x94
  403dd2:	call   406f90 <UnityAssertEqualNumber@@Base>
  403dd7:	lea    rdi,[rbp-0x20]
  403ddb:	call   40e2f0 <next@@Base>
  403de0:	xor    r8d,r8d
  403de3:	mov    edx,r8d
  403de6:	mov    QWORD PTR [rbp-0x28],rax
  403dea:	mov    rax,QWORD PTR [rbp-0x28]
  403dee:	mov    r8d,DWORD PTR [rax]
  403df1:	mov    esi,r8d
  403df4:	mov    edi,0xa
  403df9:	mov    ecx,0xdc
  403dfe:	mov    r8d,0x94
  403e04:	call   406f90 <UnityAssertEqualNumber@@Base>
  403e09:	lea    rdi,[rbp-0x20]
  403e0d:	call   40e2f0 <next@@Base>
  403e12:	xor    r8d,r8d
  403e15:	mov    edx,r8d
  403e18:	mov    QWORD PTR [rbp-0x28],rax
  403e1c:	mov    rax,QWORD PTR [rbp-0x28]
  403e20:	mov    r8d,DWORD PTR [rax]
  403e23:	mov    esi,r8d
  403e26:	mov    edi,0x3
  403e2b:	mov    ecx,0xde
  403e30:	mov    r8d,0x94
  403e36:	call   406f90 <UnityAssertEqualNumber@@Base>
  403e3b:	lea    rdi,[rbp-0x20]
  403e3f:	call   40e2f0 <next@@Base>
  403e44:	xor    r8d,r8d
  403e47:	mov    edx,r8d
  403e4a:	mov    QWORD PTR [rbp-0x28],rax
  403e4e:	mov    rax,QWORD PTR [rbp-0x28]
  403e52:	mov    r8d,DWORD PTR [rax]
  403e55:	mov    esi,r8d
  403e58:	mov    edi,0x1
  403e5d:	mov    ecx,0xe0
  403e62:	mov    r8d,0x94
  403e68:	call   406f90 <UnityAssertEqualNumber@@Base>
  403e6d:	lea    rdi,[rbp-0x20]
  403e71:	call   40e2f0 <next@@Base>
  403e76:	xor    r8d,r8d
  403e79:	mov    edx,r8d
  403e7c:	mov    QWORD PTR [rbp-0x28],rax
  403e80:	mov    rax,QWORD PTR [rbp-0x28]
  403e84:	mov    r8d,DWORD PTR [rax]
  403e87:	mov    esi,r8d
  403e8a:	mov    edi,0xc
  403e8f:	mov    ecx,0xe2
  403e94:	mov    r8d,0x94
  403e9a:	call   406f90 <UnityAssertEqualNumber@@Base>
  403e9f:	lea    rdi,[rbp-0x20]
  403ea3:	call   40e2f0 <next@@Base>
  403ea8:	xor    r8d,r8d
  403eab:	mov    edx,r8d
  403eae:	mov    QWORD PTR [rbp-0x28],rax
  403eb2:	mov    rax,QWORD PTR [rbp-0x28]
  403eb6:	mov    r8d,DWORD PTR [rax]
  403eb9:	mov    esi,r8d
  403ebc:	mov    edi,0x1
  403ec1:	mov    ecx,0xe4
  403ec6:	mov    r8d,0x94
  403ecc:	call   406f90 <UnityAssertEqualNumber@@Base>
  403ed1:	lea    rdi,[rbp-0x20]
  403ed5:	call   40e2f0 <next@@Base>
  403eda:	xor    r8d,r8d
  403edd:	mov    edx,r8d
  403ee0:	mov    QWORD PTR [rbp-0x28],rax
  403ee4:	mov    rax,QWORD PTR [rbp-0x28]
  403ee8:	mov    r8d,DWORD PTR [rax]
  403eeb:	mov    esi,r8d
  403eee:	mov    edi,0x4
  403ef3:	mov    ecx,0xe6
  403ef8:	mov    r8d,0x94
  403efe:	call   406f90 <UnityAssertEqualNumber@@Base>
  403f03:	lea    rdi,[rbp-0x20]
  403f07:	call   40e2f0 <next@@Base>
  403f0c:	xor    r8d,r8d
  403f0f:	mov    edx,r8d
  403f12:	mov    QWORD PTR [rbp-0x28],rax
  403f16:	mov    rax,QWORD PTR [rbp-0x28]
  403f1a:	mov    r8d,DWORD PTR [rax]
  403f1d:	mov    esi,r8d
  403f20:	mov    edi,0x5
  403f25:	mov    ecx,0xe8
  403f2a:	mov    r8d,0x94
  403f30:	call   406f90 <UnityAssertEqualNumber@@Base>
  403f35:	lea    rdi,[rbp-0x20]
  403f39:	call   40e2f0 <next@@Base>
  403f3e:	xor    r8d,r8d
  403f41:	mov    edx,r8d
  403f44:	mov    QWORD PTR [rbp-0x28],rax
  403f48:	mov    rax,QWORD PTR [rbp-0x28]
  403f4c:	mov    r8d,DWORD PTR [rax]
  403f4f:	mov    esi,r8d
  403f52:	mov    edi,0x7
  403f57:	mov    ecx,0xea
  403f5c:	mov    r8d,0x94
  403f62:	call   406f90 <UnityAssertEqualNumber@@Base>
  403f67:	lea    rdi,[rbp-0x20]
  403f6b:	call   40e2f0 <next@@Base>
  403f70:	xor    r8d,r8d
  403f73:	mov    edx,r8d
  403f76:	mov    QWORD PTR [rbp-0x28],rax
  403f7a:	mov    rax,QWORD PTR [rbp-0x28]
  403f7e:	mov    r8d,DWORD PTR [rax]
  403f81:	mov    esi,r8d
  403f84:	mov    edi,0x1
  403f89:	mov    ecx,0xec
  403f8e:	mov    r8d,0x94
  403f94:	call   406f90 <UnityAssertEqualNumber@@Base>
  403f99:	lea    rdi,[rbp-0x20]
  403f9d:	call   40e2f0 <next@@Base>
  403fa2:	xor    r8d,r8d
  403fa5:	mov    edx,r8d
  403fa8:	mov    QWORD PTR [rbp-0x28],rax
  403fac:	mov    rax,QWORD PTR [rbp-0x28]
  403fb0:	mov    r8d,DWORD PTR [rax]
  403fb3:	mov    esi,r8d
  403fb6:	mov    edi,0x8
  403fbb:	mov    ecx,0xee
  403fc0:	mov    r8d,0x94
  403fc6:	call   406f90 <UnityAssertEqualNumber@@Base>
  403fcb:	lea    rdi,[rbp-0x20]
  403fcf:	call   40e2f0 <next@@Base>
  403fd4:	xor    r8d,r8d
  403fd7:	mov    edx,r8d
  403fda:	mov    QWORD PTR [rbp-0x28],rax
  403fde:	mov    rax,QWORD PTR [rbp-0x28]
  403fe2:	mov    r8d,DWORD PTR [rax]
  403fe5:	mov    esi,r8d
  403fe8:	mov    edi,0x6
  403fed:	mov    ecx,0xf0
  403ff2:	mov    r8d,0x94
  403ff8:	call   406f90 <UnityAssertEqualNumber@@Base>
  403ffd:	lea    rdi,[rbp-0x20]
  404001:	call   40e2f0 <next@@Base>
  404006:	xor    r8d,r8d
  404009:	mov    edx,r8d
  40400c:	mov    QWORD PTR [rbp-0x28],rax
  404010:	mov    rax,QWORD PTR [rbp-0x28]
  404014:	mov    r8d,DWORD PTR [rax]
  404017:	mov    esi,r8d
  40401a:	mov    edi,0xb
  40401f:	mov    ecx,0xf2
  404024:	mov    r8d,0x94
  40402a:	call   406f90 <UnityAssertEqualNumber@@Base>
  40402f:	lea    rdi,[rbp-0x20]
  404033:	call   40e2f0 <next@@Base>
  404038:	xor    r8d,r8d
  40403b:	mov    edx,r8d
  40403e:	mov    QWORD PTR [rbp-0x28],rax
  404042:	mov    rax,QWORD PTR [rbp-0x28]
  404046:	mov    r8d,DWORD PTR [rax]
  404049:	mov    esi,r8d
  40404c:	mov    edi,0x5
  404051:	mov    ecx,0xf4
  404056:	mov    r8d,0x94
  40405c:	call   406f90 <UnityAssertEqualNumber@@Base>
  404061:	lea    rdi,[rbp-0x20]
  404065:	call   40e2f0 <next@@Base>
  40406a:	xor    r8d,r8d
  40406d:	mov    edx,r8d
  404070:	mov    QWORD PTR [rbp-0x28],rax
  404074:	mov    rax,QWORD PTR [rbp-0x28]
  404078:	mov    r8d,DWORD PTR [rax]
  40407b:	mov    esi,r8d
  40407e:	mov    edi,0x7
  404083:	mov    ecx,0xf6
  404088:	mov    r8d,0x94
  40408e:	call   406f90 <UnityAssertEqualNumber@@Base>
  404093:	lea    rdi,[rbp-0x20]
  404097:	call   40e2f0 <next@@Base>
  40409c:	xor    r8d,r8d
  40409f:	mov    edx,r8d
  4040a2:	mov    QWORD PTR [rbp-0x28],rax
  4040a6:	mov    rax,QWORD PTR [rbp-0x28]
  4040aa:	mov    r8d,DWORD PTR [rax]
  4040ad:	mov    esi,r8d
  4040b0:	mov    edi,0x1
  4040b5:	mov    ecx,0xf8
  4040ba:	mov    r8d,0x94
  4040c0:	call   406f90 <UnityAssertEqualNumber@@Base>
  4040c5:	lea    rdi,[rbp-0x20]
  4040c9:	call   40e2f0 <next@@Base>
  4040ce:	xor    r8d,r8d
  4040d1:	mov    edx,r8d
  4040d4:	mov    QWORD PTR [rbp-0x28],rax
  4040d8:	mov    rax,QWORD PTR [rbp-0x28]
  4040dc:	mov    r8d,DWORD PTR [rax]
  4040df:	mov    esi,r8d
  4040e2:	mov    edi,0x8
  4040e7:	mov    ecx,0xfa
  4040ec:	mov    r8d,0x94
  4040f2:	call   406f90 <UnityAssertEqualNumber@@Base>
  4040f7:	lea    rdi,[rbp-0x20]
  4040fb:	call   40e2f0 <next@@Base>
  404100:	xor    r8d,r8d
  404103:	mov    edx,r8d
  404106:	mov    QWORD PTR [rbp-0x28],rax
  40410a:	mov    rax,QWORD PTR [rbp-0x28]
  40410e:	mov    r8d,DWORD PTR [rax]
  404111:	mov    esi,r8d
  404114:	mov    edi,0x6
  404119:	mov    ecx,0xfc
  40411e:	mov    r8d,0x94
  404124:	call   406f90 <UnityAssertEqualNumber@@Base>
  404129:	lea    rdi,[rbp-0x20]
  40412d:	call   40e2f0 <next@@Base>
  404132:	xor    r8d,r8d
  404135:	mov    edx,r8d
  404138:	mov    QWORD PTR [rbp-0x28],rax
  40413c:	mov    rax,QWORD PTR [rbp-0x28]
  404140:	mov    r8d,DWORD PTR [rax]
  404143:	mov    esi,r8d
  404146:	mov    edi,0x7
  40414b:	mov    ecx,0xfe
  404150:	mov    r8d,0x94
  404156:	call   406f90 <UnityAssertEqualNumber@@Base>
  40415b:	lea    rdi,[rbp-0x20]
  40415f:	call   40e2f0 <next@@Base>
  404164:	xor    r8d,r8d
  404167:	mov    edx,r8d
  40416a:	mov    QWORD PTR [rbp-0x28],rax
  40416e:	mov    rax,QWORD PTR [rbp-0x28]
  404172:	mov    r8d,DWORD PTR [rax]
  404175:	mov    esi,r8d
  404178:	mov    edi,0x1
  40417d:	mov    ecx,0x100
  404182:	mov    r8d,0x94
  404188:	call   406f90 <UnityAssertEqualNumber@@Base>
  40418d:	lea    rdi,[rbp-0x20]
  404191:	call   40e2f0 <next@@Base>
  404196:	xor    r8d,r8d
  404199:	mov    edx,r8d
  40419c:	mov    QWORD PTR [rbp-0x28],rax
  4041a0:	mov    rax,QWORD PTR [rbp-0x28]
  4041a4:	mov    r8d,DWORD PTR [rax]
  4041a7:	mov    esi,r8d
  4041aa:	mov    edi,0x8
  4041af:	mov    ecx,0x102
  4041b4:	mov    r8d,0x94
  4041ba:	call   406f90 <UnityAssertEqualNumber@@Base>
  4041bf:	lea    rdi,[rbp-0x20]
  4041c3:	call   40e2f0 <next@@Base>
  4041c8:	xor    r8d,r8d
  4041cb:	mov    edx,r8d
  4041ce:	mov    QWORD PTR [rbp-0x28],rax
  4041d2:	mov    rax,QWORD PTR [rbp-0x28]
  4041d6:	mov    r8d,DWORD PTR [rax]
  4041d9:	mov    esi,r8d
  4041dc:	mov    edi,0x6
  4041e1:	mov    ecx,0x104
  4041e6:	mov    r8d,0x94
  4041ec:	call   406f90 <UnityAssertEqualNumber@@Base>
  4041f1:	lea    rdi,[rbp-0x20]
  4041f5:	call   40e2f0 <next@@Base>
  4041fa:	xor    r8d,r8d
  4041fd:	mov    edx,r8d
  404200:	mov    QWORD PTR [rbp-0x28],rax
  404204:	mov    rax,QWORD PTR [rbp-0x28]
  404208:	mov    r8d,DWORD PTR [rax]
  40420b:	mov    esi,r8d
  40420e:	mov    edi,0x9
  404213:	mov    ecx,0x106
  404218:	mov    r8d,0x94
  40421e:	call   406f90 <UnityAssertEqualNumber@@Base>
  404223:	lea    rdi,[rbp-0x20]
  404227:	call   40df40 <destroy_lexer@@Base>
  40422c:	add    rsp,0x30
  404230:	pop    rbp
  404231:	ret    
  404232:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40423c:	nop    DWORD PTR [rax+0x0]

0000000000404240 <read_token_int_type@@Base>:
  404240:	push   rbp
  404241:	mov    rbp,rsp
  404244:	sub    rsp,0x30
  404248:	lea    rax,[rip+0x13f79]        # 4181c8 <__bss_start@@Base+0x70>
  40424f:	mov    QWORD PTR [rbp-0x30],rax
  404253:	mov    rax,QWORD PTR [rbp-0x30]
  404257:	mov    rcx,QWORD PTR [rax]
  40425a:	add    rcx,0x1
  404261:	mov    QWORD PTR [rax],rcx
  404264:	mov    rax,QWORD PTR [rip+0x13f65]        # 4181d0 <__bss_start@@Base+0x78>
  40426b:	add    rax,0x1
  404271:	mov    QWORD PTR [rip+0x13f58],rax        # 4181d0 <__bss_start@@Base+0x78>
  404278:	lea    rax,[rip+0xf440]        # 4136bf <UnitySizeMask@@Base+0xbf>
  40427f:	mov    QWORD PTR [rbp-0x8],rax
  404283:	mov    rsi,QWORD PTR [rbp-0x8]
  404287:	lea    rdi,[rbp-0x20]
  40428b:	call   40dec0 <init_lexer@@Base>
  404290:	lea    rdi,[rbp-0x20]
  404294:	call   40e2f0 <next@@Base>
  404299:	xor    edx,edx
  40429b:	mov    ecx,edx
  40429d:	mov    QWORD PTR [rbp-0x28],rax
  4042a1:	mov    rax,QWORD PTR [rbp-0x28]
  4042a5:	mov    edx,DWORD PTR [rax]
  4042a7:	mov    esi,edx
  4042a9:	mov    rdi,rcx
  4042ac:	mov    rdx,rcx
  4042af:	mov    ecx,0x117
  4042b4:	mov    r8d,0x94
  4042ba:	call   406f90 <UnityAssertEqualNumber@@Base>
  4042bf:	lea    rdi,[rbp-0x20]
  4042c3:	call   40df40 <destroy_lexer@@Base>
  4042c8:	add    rsp,0x30
  4042cc:	pop    rbp
  4042cd:	ret    
  4042ce:	xchg   ax,ax

00000000004042d0 <read_token_int_value@@Base>:
  4042d0:	push   rbp
  4042d1:	mov    rbp,rsp
  4042d4:	sub    rsp,0x30
  4042d8:	lea    rax,[rip+0x13ef9]        # 4181d8 <__bss_start@@Base+0x80>
  4042df:	mov    QWORD PTR [rbp-0x30],rax
  4042e3:	mov    rax,QWORD PTR [rbp-0x30]
  4042e7:	mov    rcx,QWORD PTR [rax]
  4042ea:	add    rcx,0x1
  4042f1:	mov    QWORD PTR [rax],rcx
  4042f4:	mov    rax,QWORD PTR [rip+0x13ee5]        # 4181e0 <__bss_start@@Base+0x88>
  4042fb:	add    rax,0x1
  404301:	mov    QWORD PTR [rip+0x13ed8],rax        # 4181e0 <__bss_start@@Base+0x88>
  404308:	lea    rax,[rip+0xed99]        # 4130a8 <_IO_stdin_used@@Base+0xa8>
  40430f:	mov    QWORD PTR [rbp-0x8],rax
  404313:	mov    rsi,QWORD PTR [rbp-0x8]
  404317:	lea    rdi,[rbp-0x20]
  40431b:	call   40dec0 <init_lexer@@Base>
  404320:	lea    rdi,[rbp-0x20]
  404324:	call   40e2f0 <next@@Base>
  404329:	xor    edx,edx
  40432b:	mov    QWORD PTR [rbp-0x28],rax
  40432f:	mov    rax,QWORD PTR [rbp-0x28]
  404333:	mov    r8d,DWORD PTR [rax]
  404336:	mov    esi,r8d
  404339:	mov    edi,0x1
  40433e:	mov    ecx,0x128
  404343:	mov    r8d,0x94
  404349:	call   406f90 <UnityAssertEqualNumber@@Base>
  40434e:	lea    rdi,[rbp-0x20]
  404352:	call   40df40 <destroy_lexer@@Base>
  404357:	add    rsp,0x30
  40435b:	pop    rbp
  40435c:	ret    
  40435d:	nop    DWORD PTR [rax]

0000000000404360 <read_token_function@@Base>:
  404360:	push   rbp
  404361:	mov    rbp,rsp
  404364:	sub    rsp,0x30
  404368:	lea    rax,[rip+0x13e79]        # 4181e8 <__bss_start@@Base+0x90>
  40436f:	mov    QWORD PTR [rbp-0x30],rax
  404373:	mov    rax,QWORD PTR [rbp-0x30]
  404377:	mov    rcx,QWORD PTR [rax]
  40437a:	add    rcx,0x1
  404381:	mov    QWORD PTR [rax],rcx
  404384:	mov    rax,QWORD PTR [rip+0x13e65]        # 4181f0 <__bss_start@@Base+0x98>
  40438b:	add    rax,0x1
  404391:	mov    QWORD PTR [rip+0x13e58],rax        # 4181f0 <__bss_start@@Base+0x98>
  404398:	lea    rax,[rip+0xed9b]        # 41313a <_IO_stdin_used@@Base+0x13a>
  40439f:	mov    QWORD PTR [rbp-0x8],rax
  4043a3:	mov    rsi,QWORD PTR [rbp-0x8]
  4043a7:	lea    rdi,[rbp-0x20]
  4043ab:	call   40dec0 <init_lexer@@Base>
  4043b0:	lea    rdi,[rbp-0x20]
  4043b4:	call   40e2f0 <next@@Base>
  4043b9:	xor    edx,edx
  4043bb:	mov    QWORD PTR [rbp-0x28],rax
  4043bf:	mov    rax,QWORD PTR [rbp-0x28]
  4043c3:	mov    r8d,DWORD PTR [rax]
  4043c6:	mov    esi,r8d
  4043c9:	mov    edi,0x2
  4043ce:	mov    ecx,0x139
  4043d3:	mov    r8d,0x94
  4043d9:	call   406f90 <UnityAssertEqualNumber@@Base>
  4043de:	lea    rdi,[rbp-0x20]
  4043e2:	call   40df40 <destroy_lexer@@Base>
  4043e7:	add    rsp,0x30
  4043eb:	pop    rbp
  4043ec:	ret    
  4043ed:	nop    DWORD PTR [rax]

00000000004043f0 <read_token_opar@@Base>:
  4043f0:	push   rbp
  4043f1:	mov    rbp,rsp
  4043f4:	sub    rsp,0x30
  4043f8:	lea    rax,[rip+0x13df9]        # 4181f8 <__bss_start@@Base+0xa0>
  4043ff:	mov    QWORD PTR [rbp-0x30],rax
  404403:	mov    rax,QWORD PTR [rbp-0x30]
  404407:	mov    rcx,QWORD PTR [rax]
  40440a:	add    rcx,0x1
  404411:	mov    QWORD PTR [rax],rcx
  404414:	mov    rax,QWORD PTR [rip+0x13de5]        # 418200 <__bss_start@@Base+0xa8>
  40441b:	add    rax,0x1
  404421:	mov    QWORD PTR [rip+0x13dd8],rax        # 418200 <__bss_start@@Base+0xa8>
  404428:	lea    rax,[rip+0xec7e]        # 4130ad <_IO_stdin_used@@Base+0xad>
  40442f:	mov    QWORD PTR [rbp-0x8],rax
  404433:	mov    rsi,QWORD PTR [rbp-0x8]
  404437:	lea    rdi,[rbp-0x20]
  40443b:	call   40dec0 <init_lexer@@Base>
  404440:	lea    rdi,[rbp-0x20]
  404444:	call   40e2f0 <next@@Base>
  404449:	xor    edx,edx
  40444b:	mov    QWORD PTR [rbp-0x28],rax
  40444f:	mov    rax,QWORD PTR [rbp-0x28]
  404453:	mov    r8d,DWORD PTR [rax]
  404456:	mov    esi,r8d
  404459:	mov    edi,0x3
  40445e:	mov    ecx,0x14a
  404463:	mov    r8d,0x94
  404469:	call   406f90 <UnityAssertEqualNumber@@Base>
  40446e:	lea    rdi,[rbp-0x20]
  404472:	call   40df40 <destroy_lexer@@Base>
  404477:	add    rsp,0x30
  40447b:	pop    rbp
  40447c:	ret    
  40447d:	nop    DWORD PTR [rax]

0000000000404480 <read_token_cpar@@Base>:
  404480:	push   rbp
  404481:	mov    rbp,rsp
  404484:	sub    rsp,0x30
  404488:	lea    rax,[rip+0x13d79]        # 418208 <__bss_start@@Base+0xb0>
  40448f:	mov    QWORD PTR [rbp-0x30],rax
  404493:	mov    rax,QWORD PTR [rbp-0x30]
  404497:	mov    rcx,QWORD PTR [rax]
  40449a:	add    rcx,0x1
  4044a1:	mov    QWORD PTR [rax],rcx
  4044a4:	mov    rax,QWORD PTR [rip+0x13d65]        # 418210 <__bss_start@@Base+0xb8>
  4044ab:	add    rax,0x1
  4044b1:	mov    QWORD PTR [rip+0x13d58],rax        # 418210 <__bss_start@@Base+0xb8>
  4044b8:	lea    rax,[rip+0xebf0]        # 4130af <_IO_stdin_used@@Base+0xaf>
  4044bf:	mov    QWORD PTR [rbp-0x8],rax
  4044c3:	mov    rsi,QWORD PTR [rbp-0x8]
  4044c7:	lea    rdi,[rbp-0x20]
  4044cb:	call   40dec0 <init_lexer@@Base>
  4044d0:	lea    rdi,[rbp-0x20]
  4044d4:	call   40e2f0 <next@@Base>
  4044d9:	xor    edx,edx
  4044db:	mov    QWORD PTR [rbp-0x28],rax
  4044df:	mov    rax,QWORD PTR [rbp-0x28]
  4044e3:	mov    r8d,DWORD PTR [rax]
  4044e6:	mov    esi,r8d
  4044e9:	mov    edi,0x4
  4044ee:	mov    ecx,0x15b
  4044f3:	mov    r8d,0x94
  4044f9:	call   406f90 <UnityAssertEqualNumber@@Base>
  4044fe:	lea    rdi,[rbp-0x20]
  404502:	call   40df40 <destroy_lexer@@Base>
  404507:	add    rsp,0x30
  40450b:	pop    rbp
  40450c:	ret    
  40450d:	nop    DWORD PTR [rax]

0000000000404510 <read_token_obra@@Base>:
  404510:	push   rbp
  404511:	mov    rbp,rsp
  404514:	sub    rsp,0x30
  404518:	lea    rax,[rip+0x13cf9]        # 418218 <__bss_start@@Base+0xc0>
  40451f:	mov    QWORD PTR [rbp-0x30],rax
  404523:	mov    rax,QWORD PTR [rbp-0x30]
  404527:	mov    rcx,QWORD PTR [rax]
  40452a:	add    rcx,0x1
  404531:	mov    QWORD PTR [rax],rcx
  404534:	mov    rax,QWORD PTR [rip+0x13ce5]        # 418220 <__bss_start@@Base+0xc8>
  40453b:	add    rax,0x1
  404541:	mov    QWORD PTR [rip+0x13cd8],rax        # 418220 <__bss_start@@Base+0xc8>
  404548:	lea    rax,[rip+0xeb62]        # 4130b1 <_IO_stdin_used@@Base+0xb1>
  40454f:	mov    QWORD PTR [rbp-0x8],rax
  404553:	mov    rsi,QWORD PTR [rbp-0x8]
  404557:	lea    rdi,[rbp-0x20]
  40455b:	call   40dec0 <init_lexer@@Base>
  404560:	lea    rdi,[rbp-0x20]
  404564:	call   40e2f0 <next@@Base>
  404569:	xor    edx,edx
  40456b:	mov    QWORD PTR [rbp-0x28],rax
  40456f:	mov    rax,QWORD PTR [rbp-0x28]
  404573:	mov    r8d,DWORD PTR [rax]
  404576:	mov    esi,r8d
  404579:	mov    edi,0x5
  40457e:	mov    ecx,0x16c
  404583:	mov    r8d,0x94
  404589:	call   406f90 <UnityAssertEqualNumber@@Base>
  40458e:	lea    rdi,[rbp-0x20]
  404592:	call   40df40 <destroy_lexer@@Base>
  404597:	add    rsp,0x30
  40459b:	pop    rbp
  40459c:	ret    
  40459d:	nop    DWORD PTR [rax]

00000000004045a0 <read_token_cbra@@Base>:
  4045a0:	push   rbp
  4045a1:	mov    rbp,rsp
  4045a4:	sub    rsp,0x30
  4045a8:	lea    rax,[rip+0x13c79]        # 418228 <__bss_start@@Base+0xd0>
  4045af:	mov    QWORD PTR [rbp-0x30],rax
  4045b3:	mov    rax,QWORD PTR [rbp-0x30]
  4045b7:	mov    rcx,QWORD PTR [rax]
  4045ba:	add    rcx,0x1
  4045c1:	mov    QWORD PTR [rax],rcx
  4045c4:	mov    rax,QWORD PTR [rip+0x13c65]        # 418230 <__bss_start@@Base+0xd8>
  4045cb:	add    rax,0x1
  4045d1:	mov    QWORD PTR [rip+0x13c58],rax        # 418230 <__bss_start@@Base+0xd8>
  4045d8:	lea    rax,[rip+0xea3d]        # 41301c <_IO_stdin_used@@Base+0x1c>
  4045df:	mov    QWORD PTR [rbp-0x8],rax
  4045e3:	mov    rsi,QWORD PTR [rbp-0x8]
  4045e7:	lea    rdi,[rbp-0x20]
  4045eb:	call   40dec0 <init_lexer@@Base>
  4045f0:	lea    rdi,[rbp-0x20]
  4045f4:	call   40e2f0 <next@@Base>
  4045f9:	xor    edx,edx
  4045fb:	mov    QWORD PTR [rbp-0x28],rax
  4045ff:	mov    rax,QWORD PTR [rbp-0x28]
  404603:	mov    r8d,DWORD PTR [rax]
  404606:	mov    esi,r8d
  404609:	mov    edi,0x6
  40460e:	mov    ecx,0x17e
  404613:	mov    r8d,0x94
  404619:	call   406f90 <UnityAssertEqualNumber@@Base>
  40461e:	lea    rdi,[rbp-0x20]
  404622:	call   40df40 <destroy_lexer@@Base>
  404627:	add    rsp,0x30
  40462b:	pop    rbp
  40462c:	ret    
  40462d:	nop    DWORD PTR [rax]

0000000000404630 <read_token_return@@Base>:
  404630:	push   rbp
  404631:	mov    rbp,rsp
  404634:	sub    rsp,0x30
  404638:	lea    rax,[rip+0x13bf9]        # 418238 <__bss_start@@Base+0xe0>
  40463f:	mov    QWORD PTR [rbp-0x30],rax
  404643:	mov    rax,QWORD PTR [rbp-0x30]
  404647:	mov    rcx,QWORD PTR [rax]
  40464a:	add    rcx,0x1
  404651:	mov    QWORD PTR [rax],rcx
  404654:	mov    rax,QWORD PTR [rip+0x13be5]        # 418240 <__bss_start@@Base+0xe8>
  40465b:	add    rax,0x1
  404661:	mov    QWORD PTR [rip+0x13bd8],rax        # 418240 <__bss_start@@Base+0xe8>
  404668:	lea    rax,[rip+0xebbb]        # 41322a <_IO_stdin_used@@Base+0x22a>
  40466f:	mov    QWORD PTR [rbp-0x8],rax
  404673:	mov    rsi,QWORD PTR [rbp-0x8]
  404677:	lea    rdi,[rbp-0x20]
  40467b:	call   40dec0 <init_lexer@@Base>
  404680:	lea    rdi,[rbp-0x20]
  404684:	call   40e2f0 <next@@Base>
  404689:	xor    edx,edx
  40468b:	mov    QWORD PTR [rbp-0x28],rax
  40468f:	mov    rax,QWORD PTR [rbp-0x28]
  404693:	mov    r8d,DWORD PTR [rax]
  404696:	mov    esi,r8d
  404699:	mov    edi,0x7
  40469e:	mov    ecx,0x18f
  4046a3:	mov    r8d,0x94
  4046a9:	call   406f90 <UnityAssertEqualNumber@@Base>
  4046ae:	lea    rdi,[rbp-0x20]
  4046b2:	call   40df40 <destroy_lexer@@Base>
  4046b7:	add    rsp,0x30
  4046bb:	pop    rbp
  4046bc:	ret    
  4046bd:	nop    DWORD PTR [rax]

00000000004046c0 <read_token_semicolon@@Base>:
  4046c0:	push   rbp
  4046c1:	mov    rbp,rsp
  4046c4:	sub    rsp,0x30
  4046c8:	lea    rax,[rip+0x13b79]        # 418248 <__bss_start@@Base+0xf0>
  4046cf:	mov    QWORD PTR [rbp-0x30],rax
  4046d3:	mov    rax,QWORD PTR [rbp-0x30]
  4046d7:	mov    rcx,QWORD PTR [rax]
  4046da:	add    rcx,0x1
  4046e1:	mov    QWORD PTR [rax],rcx
  4046e4:	mov    rax,QWORD PTR [rip+0x13b65]        # 418250 <__bss_start@@Base+0xf8>
  4046eb:	add    rax,0x1
  4046f1:	mov    QWORD PTR [rip+0x13b58],rax        # 418250 <__bss_start@@Base+0xf8>
  4046f8:	lea    rax,[rip+0xe9b4]        # 4130b3 <_IO_stdin_used@@Base+0xb3>
  4046ff:	mov    QWORD PTR [rbp-0x8],rax
  404703:	mov    rsi,QWORD PTR [rbp-0x8]
  404707:	lea    rdi,[rbp-0x20]
  40470b:	call   40dec0 <init_lexer@@Base>
  404710:	lea    rdi,[rbp-0x20]
  404714:	call   40e2f0 <next@@Base>
  404719:	xor    edx,edx
  40471b:	mov    QWORD PTR [rbp-0x28],rax
  40471f:	mov    rax,QWORD PTR [rbp-0x28]
  404723:	mov    r8d,DWORD PTR [rax]
  404726:	mov    esi,r8d
  404729:	mov    edi,0x8
  40472e:	mov    ecx,0x1a0
  404733:	mov    r8d,0x94
  404739:	call   406f90 <UnityAssertEqualNumber@@Base>
  40473e:	lea    rdi,[rbp-0x20]
  404742:	call   40df40 <destroy_lexer@@Base>
  404747:	add    rsp,0x30
  40474b:	pop    rbp
  40474c:	ret    
  40474d:	nop    DWORD PTR [rax]

0000000000404750 <read_token_eof@@Base>:
  404750:	push   rbp
  404751:	mov    rbp,rsp
  404754:	sub    rsp,0x30
  404758:	lea    rax,[rip+0x13af9]        # 418258 <__bss_start@@Base+0x100>
  40475f:	mov    QWORD PTR [rbp-0x30],rax
  404763:	mov    rax,QWORD PTR [rbp-0x30]
  404767:	mov    rcx,QWORD PTR [rax]
  40476a:	add    rcx,0x1
  404771:	mov    QWORD PTR [rax],rcx
  404774:	mov    rax,QWORD PTR [rip+0x13ae5]        # 418260 <__bss_start@@Base+0x108>
  40477b:	add    rax,0x1
  404781:	mov    QWORD PTR [rip+0x13ad8],rax        # 418260 <__bss_start@@Base+0x108>
  404788:	lea    rax,[rip+0xf6a8]        # 413e37 <UnitySizeMask@@Base+0x837>
  40478f:	mov    QWORD PTR [rbp-0x8],rax
  404793:	mov    rsi,QWORD PTR [rbp-0x8]
  404797:	lea    rdi,[rbp-0x20]
  40479b:	call   40dec0 <init_lexer@@Base>
  4047a0:	lea    rdi,[rbp-0x20]
  4047a4:	call   40e2f0 <next@@Base>
  4047a9:	xor    edx,edx
  4047ab:	mov    QWORD PTR [rbp-0x28],rax
  4047af:	mov    rax,QWORD PTR [rbp-0x28]
  4047b3:	mov    r8d,DWORD PTR [rax]
  4047b6:	mov    esi,r8d
  4047b9:	mov    edi,0x9
  4047be:	mov    ecx,0x1b1
  4047c3:	mov    r8d,0x94
  4047c9:	call   406f90 <UnityAssertEqualNumber@@Base>
  4047ce:	lea    rdi,[rbp-0x20]
  4047d2:	call   40df40 <destroy_lexer@@Base>
  4047d7:	add    rsp,0x30
  4047db:	pop    rbp
  4047dc:	ret    
  4047dd:	nop    DWORD PTR [rax]

00000000004047e0 <read_token_if@@Base>:
  4047e0:	push   rbp
  4047e1:	mov    rbp,rsp
  4047e4:	sub    rsp,0x30
  4047e8:	lea    rax,[rip+0x13a79]        # 418268 <__bss_start@@Base+0x110>
  4047ef:	mov    QWORD PTR [rbp-0x30],rax
  4047f3:	mov    rax,QWORD PTR [rbp-0x30]
  4047f7:	mov    rcx,QWORD PTR [rax]
  4047fa:	add    rcx,0x1
  404801:	mov    QWORD PTR [rax],rcx
  404804:	mov    rax,QWORD PTR [rip+0x13a65]        # 418270 <__bss_start@@Base+0x118>
  40480b:	add    rax,0x1
  404811:	mov    QWORD PTR [rip+0x13a58],rax        # 418270 <__bss_start@@Base+0x118>
  404818:	lea    rax,[rip+0xea41]        # 413260 <_IO_stdin_used@@Base+0x260>
  40481f:	mov    QWORD PTR [rbp-0x8],rax
  404823:	mov    rsi,QWORD PTR [rbp-0x8]
  404827:	lea    rdi,[rbp-0x20]
  40482b:	call   40dec0 <init_lexer@@Base>
  404830:	lea    rdi,[rbp-0x20]
  404834:	call   40e2f0 <next@@Base>
  404839:	xor    edx,edx
  40483b:	mov    QWORD PTR [rbp-0x28],rax
  40483f:	mov    rax,QWORD PTR [rbp-0x28]
  404843:	mov    r8d,DWORD PTR [rax]
  404846:	mov    esi,r8d
  404849:	mov    edi,0xa
  40484e:	mov    ecx,0x1c2
  404853:	mov    r8d,0x94
  404859:	call   406f90 <UnityAssertEqualNumber@@Base>
  40485e:	lea    rdi,[rbp-0x20]
  404862:	call   40df40 <destroy_lexer@@Base>
  404867:	add    rsp,0x30
  40486b:	pop    rbp
  40486c:	ret    
  40486d:	nop    DWORD PTR [rax]

0000000000404870 <read_token_else@@Base>:
  404870:	push   rbp
  404871:	mov    rbp,rsp
  404874:	sub    rsp,0x30
  404878:	lea    rax,[rip+0x139f9]        # 418278 <__bss_start@@Base+0x120>
  40487f:	mov    QWORD PTR [rbp-0x30],rax
  404883:	mov    rax,QWORD PTR [rbp-0x30]
  404887:	mov    rcx,QWORD PTR [rax]
  40488a:	add    rcx,0x1
  404891:	mov    QWORD PTR [rax],rcx
  404894:	mov    rax,QWORD PTR [rip+0x139e5]        # 418280 <__bss_start@@Base+0x128>
  40489b:	add    rax,0x1
  4048a1:	mov    QWORD PTR [rip+0x139d8],rax        # 418280 <__bss_start@@Base+0x128>
  4048a8:	lea    rax,[rip+0xe8ee]        # 41319d <_IO_stdin_used@@Base+0x19d>
  4048af:	mov    QWORD PTR [rbp-0x8],rax
  4048b3:	mov    rsi,QWORD PTR [rbp-0x8]
  4048b7:	lea    rdi,[rbp-0x20]
  4048bb:	call   40dec0 <init_lexer@@Base>
  4048c0:	lea    rdi,[rbp-0x20]
  4048c4:	call   40e2f0 <next@@Base>
  4048c9:	xor    edx,edx
  4048cb:	mov    QWORD PTR [rbp-0x28],rax
  4048cf:	mov    rax,QWORD PTR [rbp-0x28]
  4048d3:	mov    r8d,DWORD PTR [rax]
  4048d6:	mov    esi,r8d
  4048d9:	mov    edi,0xb
  4048de:	mov    ecx,0x1d3
  4048e3:	mov    r8d,0x94
  4048e9:	call   406f90 <UnityAssertEqualNumber@@Base>
  4048ee:	lea    rdi,[rbp-0x20]
  4048f2:	call   40df40 <destroy_lexer@@Base>
  4048f7:	add    rsp,0x30
  4048fb:	pop    rbp
  4048fc:	ret    
  4048fd:	nop    DWORD PTR [rax]

0000000000404900 <read_token_equalequal@@Base>:
  404900:	push   rbp
  404901:	mov    rbp,rsp
  404904:	sub    rsp,0x30
  404908:	lea    rax,[rip+0x13979]        # 418288 <__bss_start@@Base+0x130>
  40490f:	mov    QWORD PTR [rbp-0x30],rax
  404913:	mov    rax,QWORD PTR [rbp-0x30]
  404917:	mov    rcx,QWORD PTR [rax]
  40491a:	add    rcx,0x1
  404921:	mov    QWORD PTR [rax],rcx
  404924:	mov    rax,QWORD PTR [rip+0x13965]        # 418290 <__bss_start@@Base+0x138>
  40492b:	add    rax,0x1
  404931:	mov    QWORD PTR [rip+0x13958],rax        # 418290 <__bss_start@@Base+0x138>
  404938:	lea    rax,[rip+0xe776]        # 4130b5 <_IO_stdin_used@@Base+0xb5>
  40493f:	mov    QWORD PTR [rbp-0x8],rax
  404943:	mov    rsi,QWORD PTR [rbp-0x8]
  404947:	lea    rdi,[rbp-0x20]
  40494b:	call   40dec0 <init_lexer@@Base>
  404950:	lea    rdi,[rbp-0x20]
  404954:	call   40e2f0 <next@@Base>
  404959:	xor    edx,edx
  40495b:	mov    QWORD PTR [rbp-0x28],rax
  40495f:	mov    rax,QWORD PTR [rbp-0x28]
  404963:	mov    r8d,DWORD PTR [rax]
  404966:	mov    esi,r8d
  404969:	mov    edi,0xc
  40496e:	mov    ecx,0x1e4
  404973:	mov    r8d,0x94
  404979:	call   406f90 <UnityAssertEqualNumber@@Base>
  40497e:	lea    rdi,[rbp-0x20]
  404982:	call   40df40 <destroy_lexer@@Base>
  404987:	add    rsp,0x30
  40498b:	pop    rbp
  40498c:	ret    
  40498d:	nop    DWORD PTR [rax]

0000000000404990 <read_token_notequal@@Base>:
  404990:	push   rbp
  404991:	mov    rbp,rsp
  404994:	sub    rsp,0x30
  404998:	lea    rax,[rip+0x138f9]        # 418298 <__bss_start@@Base+0x140>
  40499f:	mov    QWORD PTR [rbp-0x30],rax
  4049a3:	mov    rax,QWORD PTR [rbp-0x30]
  4049a7:	mov    rcx,QWORD PTR [rax]
  4049aa:	add    rcx,0x1
  4049b1:	mov    QWORD PTR [rax],rcx
  4049b4:	mov    rax,QWORD PTR [rip+0x138e5]        # 4182a0 <__bss_start@@Base+0x148>
  4049bb:	add    rax,0x1
  4049c1:	mov    QWORD PTR [rip+0x138d8],rax        # 4182a0 <__bss_start@@Base+0x148>
  4049c8:	lea    rax,[rip+0xe6e9]        # 4130b8 <_IO_stdin_used@@Base+0xb8>
  4049cf:	mov    QWORD PTR [rbp-0x8],rax
  4049d3:	mov    rsi,QWORD PTR [rbp-0x8]
  4049d7:	lea    rdi,[rbp-0x20]
  4049db:	call   40dec0 <init_lexer@@Base>
  4049e0:	lea    rdi,[rbp-0x20]
  4049e4:	call   40e2f0 <next@@Base>
  4049e9:	xor    edx,edx
  4049eb:	mov    QWORD PTR [rbp-0x28],rax
  4049ef:	mov    rax,QWORD PTR [rbp-0x28]
  4049f3:	mov    r8d,DWORD PTR [rax]
  4049f6:	mov    esi,r8d
  4049f9:	mov    edi,0xc
  4049fe:	mov    ecx,0x1f5
  404a03:	mov    r8d,0x94
  404a09:	call   406f90 <UnityAssertEqualNumber@@Base>
  404a0e:	lea    rdi,[rbp-0x20]
  404a12:	call   40df40 <destroy_lexer@@Base>
  404a17:	add    rsp,0x30
  404a1b:	pop    rbp
  404a1c:	ret    
  404a1d:	nop    DWORD PTR [rax]

0000000000404a20 <read_token_lessequalthan@@Base>:
  404a20:	push   rbp
  404a21:	mov    rbp,rsp
  404a24:	sub    rsp,0x30
  404a28:	lea    rax,[rip+0x13879]        # 4182a8 <__bss_start@@Base+0x150>
  404a2f:	mov    QWORD PTR [rbp-0x30],rax
  404a33:	mov    rax,QWORD PTR [rbp-0x30]
  404a37:	mov    rcx,QWORD PTR [rax]
  404a3a:	add    rcx,0x1
  404a41:	mov    QWORD PTR [rax],rcx
  404a44:	mov    rax,QWORD PTR [rip+0x13865]        # 4182b0 <__bss_start@@Base+0x158>
  404a4b:	add    rax,0x1
  404a51:	mov    QWORD PTR [rip+0x13858],rax        # 4182b0 <__bss_start@@Base+0x158>
  404a58:	lea    rax,[rip+0xe65c]        # 4130bb <_IO_stdin_used@@Base+0xbb>
  404a5f:	mov    QWORD PTR [rbp-0x8],rax
  404a63:	mov    rsi,QWORD PTR [rbp-0x8]
  404a67:	lea    rdi,[rbp-0x20]
  404a6b:	call   40dec0 <init_lexer@@Base>
  404a70:	lea    rdi,[rbp-0x20]
  404a74:	call   40e2f0 <next@@Base>
  404a79:	xor    edx,edx
  404a7b:	mov    QWORD PTR [rbp-0x28],rax
  404a7f:	mov    rax,QWORD PTR [rbp-0x28]
  404a83:	mov    r8d,DWORD PTR [rax]
  404a86:	mov    esi,r8d
  404a89:	mov    edi,0xc
  404a8e:	mov    ecx,0x206
  404a93:	mov    r8d,0x94
  404a99:	call   406f90 <UnityAssertEqualNumber@@Base>
  404a9e:	lea    rdi,[rbp-0x20]
  404aa2:	call   40df40 <destroy_lexer@@Base>
  404aa7:	add    rsp,0x30
  404aab:	pop    rbp
  404aac:	ret    
  404aad:	nop    DWORD PTR [rax]

0000000000404ab0 <read_token_oror@@Base>:
  404ab0:	push   rbp
  404ab1:	mov    rbp,rsp
  404ab4:	sub    rsp,0x30
  404ab8:	lea    rax,[rip+0x137f9]        # 4182b8 <__bss_start@@Base+0x160>
  404abf:	mov    QWORD PTR [rbp-0x30],rax
  404ac3:	mov    rax,QWORD PTR [rbp-0x30]
  404ac7:	mov    rcx,QWORD PTR [rax]
  404aca:	add    rcx,0x1
  404ad1:	mov    QWORD PTR [rax],rcx
  404ad4:	mov    rax,QWORD PTR [rip+0x137e5]        # 4182c0 <__bss_start@@Base+0x168>
  404adb:	add    rax,0x1
  404ae1:	mov    QWORD PTR [rip+0x137d8],rax        # 4182c0 <__bss_start@@Base+0x168>
  404ae8:	lea    rax,[rip+0xe5cf]        # 4130be <_IO_stdin_used@@Base+0xbe>
  404aef:	mov    QWORD PTR [rbp-0x8],rax
  404af3:	mov    rsi,QWORD PTR [rbp-0x8]
  404af7:	lea    rdi,[rbp-0x20]
  404afb:	call   40dec0 <init_lexer@@Base>
  404b00:	lea    rdi,[rbp-0x20]
  404b04:	call   40e2f0 <next@@Base>
  404b09:	xor    edx,edx
  404b0b:	mov    QWORD PTR [rbp-0x28],rax
  404b0f:	mov    rax,QWORD PTR [rbp-0x28]
  404b13:	mov    r8d,DWORD PTR [rax]
  404b16:	mov    esi,r8d
  404b19:	mov    edi,0xc
  404b1e:	mov    ecx,0x217
  404b23:	mov    r8d,0x94
  404b29:	call   406f90 <UnityAssertEqualNumber@@Base>
  404b2e:	lea    rdi,[rbp-0x20]
  404b32:	call   40df40 <destroy_lexer@@Base>
  404b37:	add    rsp,0x30
  404b3b:	pop    rbp
  404b3c:	ret    
  404b3d:	nop    DWORD PTR [rax]

0000000000404b40 <read_token_andand@@Base>:
  404b40:	push   rbp
  404b41:	mov    rbp,rsp
  404b44:	sub    rsp,0x30
  404b48:	lea    rax,[rip+0x13779]        # 4182c8 <__bss_start@@Base+0x170>
  404b4f:	mov    QWORD PTR [rbp-0x30],rax
  404b53:	mov    rax,QWORD PTR [rbp-0x30]
  404b57:	mov    rcx,QWORD PTR [rax]
  404b5a:	add    rcx,0x1
  404b61:	mov    QWORD PTR [rax],rcx
  404b64:	mov    rax,QWORD PTR [rip+0x13765]        # 4182d0 <__bss_start@@Base+0x178>
  404b6b:	add    rax,0x1
  404b71:	mov    QWORD PTR [rip+0x13758],rax        # 4182d0 <__bss_start@@Base+0x178>
  404b78:	lea    rax,[rip+0xe542]        # 4130c1 <_IO_stdin_used@@Base+0xc1>
  404b7f:	mov    QWORD PTR [rbp-0x8],rax
  404b83:	mov    rsi,QWORD PTR [rbp-0x8]
  404b87:	lea    rdi,[rbp-0x20]
  404b8b:	call   40dec0 <init_lexer@@Base>
  404b90:	lea    rdi,[rbp-0x20]
  404b94:	call   40e2f0 <next@@Base>
  404b99:	xor    edx,edx
  404b9b:	mov    QWORD PTR [rbp-0x28],rax
  404b9f:	mov    rax,QWORD PTR [rbp-0x28]
  404ba3:	mov    r8d,DWORD PTR [rax]
  404ba6:	mov    esi,r8d
  404ba9:	mov    edi,0xc
  404bae:	mov    ecx,0x228
  404bb3:	mov    r8d,0x94
  404bb9:	call   406f90 <UnityAssertEqualNumber@@Base>
  404bbe:	lea    rdi,[rbp-0x20]
  404bc2:	call   40df40 <destroy_lexer@@Base>
  404bc7:	add    rsp,0x30
  404bcb:	pop    rbp
  404bcc:	ret    
  404bcd:	nop    DWORD PTR [rax]

0000000000404bd0 <read_token_greaterequalthan@@Base>:
  404bd0:	push   rbp
  404bd1:	mov    rbp,rsp
  404bd4:	sub    rsp,0x30
  404bd8:	lea    rax,[rip+0x136f9]        # 4182d8 <__bss_start@@Base+0x180>
  404bdf:	mov    QWORD PTR [rbp-0x30],rax
  404be3:	mov    rax,QWORD PTR [rbp-0x30]
  404be7:	mov    rcx,QWORD PTR [rax]
  404bea:	add    rcx,0x1
  404bf1:	mov    QWORD PTR [rax],rcx
  404bf4:	mov    rax,QWORD PTR [rip+0x136e5]        # 4182e0 <__bss_start@@Base+0x188>
  404bfb:	add    rax,0x1
  404c01:	mov    QWORD PTR [rip+0x136d8],rax        # 4182e0 <__bss_start@@Base+0x188>
  404c08:	lea    rax,[rip+0xe4b5]        # 4130c4 <_IO_stdin_used@@Base+0xc4>
  404c0f:	mov    QWORD PTR [rbp-0x8],rax
  404c13:	mov    rsi,QWORD PTR [rbp-0x8]
  404c17:	lea    rdi,[rbp-0x20]
  404c1b:	call   40dec0 <init_lexer@@Base>
  404c20:	lea    rdi,[rbp-0x20]
  404c24:	call   40e2f0 <next@@Base>
  404c29:	xor    edx,edx
  404c2b:	mov    QWORD PTR [rbp-0x28],rax
  404c2f:	mov    rax,QWORD PTR [rbp-0x28]
  404c33:	mov    r8d,DWORD PTR [rax]
  404c36:	mov    esi,r8d
  404c39:	mov    edi,0xc
  404c3e:	mov    ecx,0x239
  404c43:	mov    r8d,0x94
  404c49:	call   406f90 <UnityAssertEqualNumber@@Base>
  404c4e:	lea    rdi,[rbp-0x20]
  404c52:	call   40df40 <destroy_lexer@@Base>
  404c57:	add    rsp,0x30
  404c5b:	pop    rbp
  404c5c:	ret    
  404c5d:	nop    DWORD PTR [rax]

0000000000404c60 <read_token_lessthan@@Base>:
  404c60:	push   rbp
  404c61:	mov    rbp,rsp
  404c64:	sub    rsp,0x30
  404c68:	lea    rax,[rip+0x13679]        # 4182e8 <__bss_start@@Base+0x190>
  404c6f:	mov    QWORD PTR [rbp-0x30],rax
  404c73:	mov    rax,QWORD PTR [rbp-0x30]
  404c77:	mov    rcx,QWORD PTR [rax]
  404c7a:	add    rcx,0x1
  404c81:	mov    QWORD PTR [rax],rcx
  404c84:	mov    rax,QWORD PTR [rip+0x13665]        # 4182f0 <__bss_start@@Base+0x198>
  404c8b:	add    rax,0x1
  404c91:	mov    QWORD PTR [rip+0x13658],rax        # 4182f0 <__bss_start@@Base+0x198>
  404c98:	lea    rax,[rip+0xe428]        # 4130c7 <_IO_stdin_used@@Base+0xc7>
  404c9f:	mov    QWORD PTR [rbp-0x8],rax
  404ca3:	mov    rsi,QWORD PTR [rbp-0x8]
  404ca7:	lea    rdi,[rbp-0x20]
  404cab:	call   40dec0 <init_lexer@@Base>
  404cb0:	lea    rdi,[rbp-0x20]
  404cb4:	call   40e2f0 <next@@Base>
  404cb9:	xor    edx,edx
  404cbb:	mov    QWORD PTR [rbp-0x28],rax
  404cbf:	mov    rax,QWORD PTR [rbp-0x28]
  404cc3:	mov    r8d,DWORD PTR [rax]
  404cc6:	mov    esi,r8d
  404cc9:	mov    edi,0xc
  404cce:	mov    ecx,0x24a
  404cd3:	mov    r8d,0x94
  404cd9:	call   406f90 <UnityAssertEqualNumber@@Base>
  404cde:	lea    rdi,[rbp-0x20]
  404ce2:	call   40df40 <destroy_lexer@@Base>
  404ce7:	add    rsp,0x30
  404ceb:	pop    rbp
  404cec:	ret    
  404ced:	nop    DWORD PTR [rax]

0000000000404cf0 <read_token_greaterthan@@Base>:
  404cf0:	push   rbp
  404cf1:	mov    rbp,rsp
  404cf4:	sub    rsp,0x30
  404cf8:	lea    rax,[rip+0x135f9]        # 4182f8 <__bss_start@@Base+0x1a0>
  404cff:	mov    QWORD PTR [rbp-0x30],rax
  404d03:	mov    rax,QWORD PTR [rbp-0x30]
  404d07:	mov    rcx,QWORD PTR [rax]
  404d0a:	add    rcx,0x1
  404d11:	mov    QWORD PTR [rax],rcx
  404d14:	mov    rax,QWORD PTR [rip+0x135e5]        # 418300 <__bss_start@@Base+0x1a8>
  404d1b:	add    rax,0x1
  404d21:	mov    QWORD PTR [rip+0x135d8],rax        # 418300 <__bss_start@@Base+0x1a8>
  404d28:	lea    rax,[rip+0xe39a]        # 4130c9 <_IO_stdin_used@@Base+0xc9>
  404d2f:	mov    QWORD PTR [rbp-0x8],rax
  404d33:	mov    rsi,QWORD PTR [rbp-0x8]
  404d37:	lea    rdi,[rbp-0x20]
  404d3b:	call   40dec0 <init_lexer@@Base>
  404d40:	lea    rdi,[rbp-0x20]
  404d44:	call   40e2f0 <next@@Base>
  404d49:	xor    edx,edx
  404d4b:	mov    QWORD PTR [rbp-0x28],rax
  404d4f:	mov    rax,QWORD PTR [rbp-0x28]
  404d53:	mov    r8d,DWORD PTR [rax]
  404d56:	mov    esi,r8d
  404d59:	mov    edi,0xc
  404d5e:	mov    ecx,0x25b
  404d63:	mov    r8d,0x94
  404d69:	call   406f90 <UnityAssertEqualNumber@@Base>
  404d6e:	lea    rdi,[rbp-0x20]
  404d72:	call   40df40 <destroy_lexer@@Base>
  404d77:	add    rsp,0x30
  404d7b:	pop    rbp
  404d7c:	ret    
  404d7d:	nop    DWORD PTR [rax]

0000000000404d80 <read_token_not@@Base>:
  404d80:	push   rbp
  404d81:	mov    rbp,rsp
  404d84:	sub    rsp,0x30
  404d88:	lea    rax,[rip+0x13579]        # 418308 <__bss_start@@Base+0x1b0>
  404d8f:	mov    QWORD PTR [rbp-0x30],rax
  404d93:	mov    rax,QWORD PTR [rbp-0x30]
  404d97:	mov    rcx,QWORD PTR [rax]
  404d9a:	add    rcx,0x1
  404da1:	mov    QWORD PTR [rax],rcx
  404da4:	mov    rax,QWORD PTR [rip+0x13565]        # 418310 <__bss_start@@Base+0x1b8>
  404dab:	add    rax,0x1
  404db1:	mov    QWORD PTR [rip+0x13558],rax        # 418310 <__bss_start@@Base+0x1b8>
  404db8:	lea    rax,[rip+0xe30c]        # 4130cb <_IO_stdin_used@@Base+0xcb>
  404dbf:	mov    QWORD PTR [rbp-0x8],rax
  404dc3:	mov    rsi,QWORD PTR [rbp-0x8]
  404dc7:	lea    rdi,[rbp-0x20]
  404dcb:	call   40dec0 <init_lexer@@Base>
  404dd0:	lea    rdi,[rbp-0x20]
  404dd4:	call   40e2f0 <next@@Base>
  404dd9:	xor    edx,edx
  404ddb:	mov    QWORD PTR [rbp-0x28],rax
  404ddf:	mov    rax,QWORD PTR [rbp-0x28]
  404de3:	mov    r8d,DWORD PTR [rax]
  404de6:	mov    esi,r8d
  404de9:	mov    edi,0xc
  404dee:	mov    ecx,0x26c
  404df3:	mov    r8d,0x94
  404df9:	call   406f90 <UnityAssertEqualNumber@@Base>
  404dfe:	lea    rdi,[rbp-0x20]
  404e02:	call   40df40 <destroy_lexer@@Base>
  404e07:	add    rsp,0x30
  404e0b:	pop    rbp
  404e0c:	ret    
  404e0d:	nop    DWORD PTR [rax]

0000000000404e10 <main@@Base>:
  404e10:	push   rbp
  404e11:	mov    rbp,rsp
  404e14:	sub    rsp,0x10
  404e18:	lea    rax,[rip+0x134f9]        # 418318 <__bss_start@@Base+0x1c0>
  404e1f:	mov    QWORD PTR [rbp-0x10],rax
  404e23:	mov    rax,QWORD PTR [rbp-0x10]
  404e27:	mov    rcx,QWORD PTR [rax]
  404e2a:	add    rcx,0x1
  404e31:	mov    QWORD PTR [rax],rcx
  404e34:	mov    rax,QWORD PTR [rip+0x134e5]        # 418320 <__bss_start@@Base+0x1c8>
  404e3b:	add    rax,0x1
  404e41:	mov    QWORD PTR [rip+0x134d8],rax        # 418320 <__bss_start@@Base+0x1c8>
  404e48:	mov    DWORD PTR [rbp-0x4],0x0
  404e4f:	lea    rdi,[rip+0xe277]        # 4130cd <_IO_stdin_used@@Base+0xcd>
  404e56:	call   40b7e0 <UnityBegin@@Base>
  404e5b:	lea    rdi,[rip+0xffffffffffffe50e]        # 403370 <simple_file_only_main@@Base>
  404e62:	lea    rsi,[rip+0xe2c0]        # 413129 <_IO_stdin_used@@Base+0x129>
  404e69:	mov    edx,0x275
  404e6e:	call   40b610 <UnityDefaultTestRun@@Base>
  404e73:	lea    rdi,[rip+0xffffffffffffe746]        # 4035c0 <push_token_to_stack@@Base>
  404e7a:	lea    rsi,[rip+0xe2be]        # 41313f <_IO_stdin_used@@Base+0x13f>
  404e81:	mov    edx,0x276
  404e86:	call   40b610 <UnityDefaultTestRun@@Base>
  404e8b:	lea    rdi,[rip+0xffffffffffffe7de]        # 403670 <push_two_tokens_to_stack@@Base>
  404e92:	lea    rsi,[rip+0xe2ba]        # 413153 <_IO_stdin_used@@Base+0x153>
  404e99:	mov    edx,0x277
  404e9e:	call   40b610 <UnityDefaultTestRun@@Base>
  404ea3:	lea    rdi,[rip+0xffffffffffffe8b6]        # 403760 <push_token_and_call_next@@Base>
  404eaa:	lea    rsi,[rip+0xe2bb]        # 41316c <_IO_stdin_used@@Base+0x16c>
  404eb1:	mov    edx,0x278
  404eb6:	call   40b610 <UnityDefaultTestRun@@Base>
  404ebb:	lea    rdi,[rip+0xffffffffffffe94e]        # 403810 <if_without_else@@Base>
  404ec2:	lea    rsi,[rip+0xe2bc]        # 413185 <_IO_stdin_used@@Base+0x185>
  404ec9:	mov    edx,0x279
  404ece:	call   40b610 <UnityDefaultTestRun@@Base>
  404ed3:	lea    rdi,[rip+0xffffffffffffedb6]        # 403c90 <if_with_else@@Base>
  404eda:	lea    rsi,[rip+0xe2b4]        # 413195 <_IO_stdin_used@@Base+0x195>
  404ee1:	mov    edx,0x27a
  404ee6:	call   40b610 <UnityDefaultTestRun@@Base>
  404eeb:	lea    rdi,[rip+0xfffffffffffff34e]        # 404240 <read_token_int_type@@Base>
  404ef2:	lea    rsi,[rip+0xe2a9]        # 4131a2 <_IO_stdin_used@@Base+0x1a2>
  404ef9:	mov    edx,0x27b
  404efe:	call   40b610 <UnityDefaultTestRun@@Base>
  404f03:	lea    rdi,[rip+0xfffffffffffff3c6]        # 4042d0 <read_token_int_value@@Base>
  404f0a:	lea    rsi,[rip+0xe2a5]        # 4131b6 <_IO_stdin_used@@Base+0x1b6>
  404f11:	mov    edx,0x27c
  404f16:	call   40b610 <UnityDefaultTestRun@@Base>
  404f1b:	lea    rdi,[rip+0xfffffffffffff43e]        # 404360 <read_token_function@@Base>
  404f22:	lea    rsi,[rip+0xe2a2]        # 4131cb <_IO_stdin_used@@Base+0x1cb>
  404f29:	mov    edx,0x27d
  404f2e:	call   40b610 <UnityDefaultTestRun@@Base>
  404f33:	lea    rdi,[rip+0xfffffffffffff4b6]        # 4043f0 <read_token_opar@@Base>
  404f3a:	lea    rsi,[rip+0xe29e]        # 4131df <_IO_stdin_used@@Base+0x1df>
  404f41:	mov    edx,0x27e
  404f46:	call   40b610 <UnityDefaultTestRun@@Base>
  404f4b:	lea    rdi,[rip+0xfffffffffffff52e]        # 404480 <read_token_cpar@@Base>
  404f52:	lea    rsi,[rip+0xe296]        # 4131ef <_IO_stdin_used@@Base+0x1ef>
  404f59:	mov    edx,0x27f
  404f5e:	call   40b610 <UnityDefaultTestRun@@Base>
  404f63:	lea    rdi,[rip+0xfffffffffffff5a6]        # 404510 <read_token_obra@@Base>
  404f6a:	lea    rsi,[rip+0xe28e]        # 4131ff <_IO_stdin_used@@Base+0x1ff>
  404f71:	mov    edx,0x280
  404f76:	call   40b610 <UnityDefaultTestRun@@Base>
  404f7b:	lea    rdi,[rip+0xfffffffffffff61e]        # 4045a0 <read_token_cbra@@Base>
  404f82:	lea    rsi,[rip+0xe286]        # 41320f <_IO_stdin_used@@Base+0x20f>
  404f89:	mov    edx,0x281
  404f8e:	call   40b610 <UnityDefaultTestRun@@Base>
  404f93:	lea    rdi,[rip+0xfffffffffffff696]        # 404630 <read_token_return@@Base>
  404f9a:	lea    rsi,[rip+0xe27e]        # 41321f <_IO_stdin_used@@Base+0x21f>
  404fa1:	mov    edx,0x282
  404fa6:	call   40b610 <UnityDefaultTestRun@@Base>
  404fab:	lea    rdi,[rip+0xfffffffffffff70e]        # 4046c0 <read_token_semicolon@@Base>
  404fb2:	lea    rsi,[rip+0xe278]        # 413231 <_IO_stdin_used@@Base+0x231>
  404fb9:	mov    edx,0x283
  404fbe:	call   40b610 <UnityDefaultTestRun@@Base>
  404fc3:	lea    rdi,[rip+0xfffffffffffff786]        # 404750 <read_token_eof@@Base>
  404fca:	lea    rsi,[rip+0xe275]        # 413246 <_IO_stdin_used@@Base+0x246>
  404fd1:	mov    edx,0x284
  404fd6:	call   40b610 <UnityDefaultTestRun@@Base>
  404fdb:	lea    rdi,[rip+0xfffffffffffff7fe]        # 4047e0 <read_token_if@@Base>
  404fe2:	lea    rsi,[rip+0xe26c]        # 413255 <_IO_stdin_used@@Base+0x255>
  404fe9:	mov    edx,0x285
  404fee:	call   40b610 <UnityDefaultTestRun@@Base>
  404ff3:	lea    rdi,[rip+0xfffffffffffff876]        # 404870 <read_token_else@@Base>
  404ffa:	lea    rsi,[rip+0xe262]        # 413263 <_IO_stdin_used@@Base+0x263>
  405001:	mov    edx,0x286
  405006:	call   40b610 <UnityDefaultTestRun@@Base>
  40500b:	lea    rdi,[rip+0xfffffffffffff8ee]        # 404900 <read_token_equalequal@@Base>
  405012:	lea    rsi,[rip+0xe25a]        # 413273 <_IO_stdin_used@@Base+0x273>
  405019:	mov    edx,0x287
  40501e:	call   40b610 <UnityDefaultTestRun@@Base>
  405023:	lea    rdi,[rip+0xfffffffffffff966]        # 404990 <read_token_notequal@@Base>
  40502a:	lea    rsi,[rip+0xe258]        # 413289 <_IO_stdin_used@@Base+0x289>
  405031:	mov    edx,0x288
  405036:	call   40b610 <UnityDefaultTestRun@@Base>
  40503b:	lea    rdi,[rip+0xfffffffffffff9de]        # 404a20 <read_token_lessequalthan@@Base>
  405042:	lea    rsi,[rip+0xe254]        # 41329d <_IO_stdin_used@@Base+0x29d>
  405049:	mov    edx,0x289
  40504e:	call   40b610 <UnityDefaultTestRun@@Base>
  405053:	lea    rdi,[rip+0xfffffffffffffb76]        # 404bd0 <read_token_greaterequalthan@@Base>
  40505a:	lea    rsi,[rip+0xe255]        # 4132b6 <_IO_stdin_used@@Base+0x2b6>
  405061:	mov    edx,0x28a
  405066:	call   40b610 <UnityDefaultTestRun@@Base>
  40506b:	lea    rdi,[rip+0xfffffffffffffa3e]        # 404ab0 <read_token_oror@@Base>
  405072:	lea    rsi,[rip+0xe259]        # 4132d2 <_IO_stdin_used@@Base+0x2d2>
  405079:	mov    edx,0x28b
  40507e:	call   40b610 <UnityDefaultTestRun@@Base>
  405083:	lea    rdi,[rip+0xfffffffffffffab6]        # 404b40 <read_token_andand@@Base>
  40508a:	lea    rsi,[rip+0xe251]        # 4132e2 <_IO_stdin_used@@Base+0x2e2>
  405091:	mov    edx,0x28c
  405096:	call   40b610 <UnityDefaultTestRun@@Base>
  40509b:	lea    rdi,[rip+0xfffffffffffffbbe]        # 404c60 <read_token_lessthan@@Base>
  4050a2:	lea    rsi,[rip+0xe24b]        # 4132f4 <_IO_stdin_used@@Base+0x2f4>
  4050a9:	mov    edx,0x28d
  4050ae:	call   40b610 <UnityDefaultTestRun@@Base>
  4050b3:	lea    rdi,[rip+0xfffffffffffffc36]        # 404cf0 <read_token_greaterthan@@Base>
  4050ba:	lea    rsi,[rip+0xe247]        # 413308 <_IO_stdin_used@@Base+0x308>
  4050c1:	mov    edx,0x28e
  4050c6:	call   40b610 <UnityDefaultTestRun@@Base>
  4050cb:	lea    rdi,[rip+0xfffffffffffffcae]        # 404d80 <read_token_not@@Base>
  4050d2:	lea    rsi,[rip+0xe246]        # 41331f <_IO_stdin_used@@Base+0x31f>
  4050d9:	mov    edx,0x28f
  4050de:	call   40b610 <UnityDefaultTestRun@@Base>
  4050e3:	call   40b880 <UnityEnd@@Base>
  4050e8:	add    rsp,0x10
  4050ec:	pop    rbp
  4050ed:	ret    
  4050ee:	xchg   ax,ax
  4050f0:	sub    rsp,0x38
  4050f4:	xor    eax,eax
  4050f6:	mov    DWORD PTR [rsp+0x34],eax
  4050fa:	jmp    4050ff <main@@Base+0x2ef>
  4050ff:	mov    eax,DWORD PTR [rsp+0x34]
  405103:	movsxd rcx,eax
  405106:	imul   rcx,rcx,0x30
  40510d:	lea    rdx,[rip+0x11f4c]        # 417060 <UnitySizeMask@@Base+0x3a60>
  405114:	add    rdx,rcx
  405117:	mov    rdi,QWORD PTR [rdx]
  40511a:	mov    rsi,QWORD PTR [rdx+0x8]
  40511e:	mov    r8d,DWORD PTR [rdx+0x10]
  405122:	mov    QWORD PTR [rsp+0x28],rdx
  405127:	mov    edx,r8d
  40512a:	mov    DWORD PTR [rsp+0x24],eax
  40512e:	call   410d80 <next@@Base+0x2a90>
  405133:	xor    eax,eax
  405135:	mov    rcx,QWORD PTR [rsp+0x28]
  40513a:	mov    edx,DWORD PTR [rcx+0x18]
  40513d:	mov    rsi,QWORD PTR [rcx+0x20]
  405141:	mov    rdi,QWORD PTR [rcx+0x28]
  405145:	cmp    eax,edx
  405147:	mov    DWORD PTR [rsp+0x20],edx
  40514b:	mov    QWORD PTR [rsp+0x18],rsi
  405150:	mov    QWORD PTR [rsp+0x10],rdi
  405155:	mov    DWORD PTR [rsp+0xc],eax
  405159:	jge    4051cd <main@@Base+0x3bd>
  40515f:	mov    eax,DWORD PTR [rsp+0xc]
  405163:	movsxd rcx,eax
  405166:	shl    rcx,0x5
  40516a:	mov    rdx,QWORD PTR [rsp+0x18]
  40516f:	add    rdx,rcx
  405172:	mov    edi,DWORD PTR [rdx]
  405174:	mov    rsi,QWORD PTR [rdx+0x8]
  405178:	mov    r8d,DWORD PTR [rdx+0x10]
  40517c:	mov    r9b,BYTE PTR [rdx+0x14]
  405180:	mov    r10d,DWORD PTR [rdx+0x18]
  405184:	mov    edx,r8d
  405187:	movzx  ecx,r9b
  40518b:	mov    r8d,r10d
  40518e:	mov    DWORD PTR [rsp+0x8],eax
  405192:	call   4111d0 <next@@Base+0x2ee0>
  405197:	mov    eax,DWORD PTR [rsp+0x8]
  40519b:	movsxd rsi,eax
  40519e:	shl    rsi,0x4
  4051a2:	mov    r11,QWORD PTR [rsp+0x10]
  4051a7:	add    r11,rsi
  4051aa:	mov    edi,DWORD PTR [r11]
  4051ad:	mov    rsi,QWORD PTR [r11+0x8]
  4051b1:	call   4115f0 <next@@Base+0x3300>
  4051b6:	mov    eax,DWORD PTR [rsp+0x8]
  4051ba:	add    eax,0x1
  4051bd:	mov    ecx,DWORD PTR [rsp+0x20]
  4051c1:	cmp    eax,ecx
  4051c3:	mov    DWORD PTR [rsp+0xc],eax
  4051c7:	jl     40515f <main@@Base+0x34f>
  4051cd:	call   411a00 <next@@Base+0x3710>
  4051d2:	call   4121a0 <next@@Base+0x3eb0>
  4051d7:	mov    eax,DWORD PTR [rsp+0x24]
  4051db:	add    eax,0x1
  4051de:	cmp    eax,0x1
  4051e1:	mov    DWORD PTR [rsp+0x34],eax
  4051e5:	jl     4050ff <main@@Base+0x2ef>
  4051eb:	add    rsp,0x38
  4051ef:	ret    
  4051f0:	push   rax
  4051f1:	call   4050f0 <main@@Base+0x2e0>
  4051f6:	mov    QWORD PTR [rip+0x12f6f],0x0        # 418170 <__bss_start@@Base+0x18>
  405201:	mov    QWORD PTR [rip+0x12f5c],0x0        # 418168 <__bss_start@@Base+0x10>
  40520c:	mov    QWORD PTR [rip+0x12f69],0x0        # 418180 <__bss_start@@Base+0x28>
  405217:	mov    QWORD PTR [rip+0x12f56],0x0        # 418178 <__bss_start@@Base+0x20>
  405222:	mov    QWORD PTR [rip+0x12f63],0x0        # 418190 <__bss_start@@Base+0x38>
  40522d:	mov    QWORD PTR [rip+0x12f50],0x0        # 418188 <__bss_start@@Base+0x30>
  405238:	mov    QWORD PTR [rip+0x12f5d],0x0        # 4181a0 <__bss_start@@Base+0x48>
  405243:	mov    QWORD PTR [rip+0x12f4a],0x0        # 418198 <__bss_start@@Base+0x40>
  40524e:	mov    QWORD PTR [rip+0x12f57],0x0        # 4181b0 <__bss_start@@Base+0x58>
  405259:	mov    QWORD PTR [rip+0x12f44],0x0        # 4181a8 <__bss_start@@Base+0x50>
  405264:	mov    QWORD PTR [rip+0x12f51],0x0        # 4181c0 <__bss_start@@Base+0x68>
  40526f:	mov    QWORD PTR [rip+0x12f3e],0x0        # 4181b8 <__bss_start@@Base+0x60>
  40527a:	mov    QWORD PTR [rip+0x12f4b],0x0        # 4181d0 <__bss_start@@Base+0x78>
  405285:	mov    QWORD PTR [rip+0x12f38],0x0        # 4181c8 <__bss_start@@Base+0x70>
  405290:	mov    QWORD PTR [rip+0x12f45],0x0        # 4181e0 <__bss_start@@Base+0x88>
  40529b:	mov    QWORD PTR [rip+0x12f32],0x0        # 4181d8 <__bss_start@@Base+0x80>
  4052a6:	mov    QWORD PTR [rip+0x12f3f],0x0        # 4181f0 <__bss_start@@Base+0x98>
  4052b1:	mov    QWORD PTR [rip+0x12f2c],0x0        # 4181e8 <__bss_start@@Base+0x90>
  4052bc:	mov    QWORD PTR [rip+0x12f39],0x0        # 418200 <__bss_start@@Base+0xa8>
  4052c7:	mov    QWORD PTR [rip+0x12f26],0x0        # 4181f8 <__bss_start@@Base+0xa0>
  4052d2:	mov    QWORD PTR [rip+0x12f33],0x0        # 418210 <__bss_start@@Base+0xb8>
  4052dd:	mov    QWORD PTR [rip+0x12f20],0x0        # 418208 <__bss_start@@Base+0xb0>
  4052e8:	mov    QWORD PTR [rip+0x12f2d],0x0        # 418220 <__bss_start@@Base+0xc8>
  4052f3:	mov    QWORD PTR [rip+0x12f1a],0x0        # 418218 <__bss_start@@Base+0xc0>
  4052fe:	mov    QWORD PTR [rip+0x12f27],0x0        # 418230 <__bss_start@@Base+0xd8>
  405309:	mov    QWORD PTR [rip+0x12f14],0x0        # 418228 <__bss_start@@Base+0xd0>
  405314:	mov    QWORD PTR [rip+0x12f21],0x0        # 418240 <__bss_start@@Base+0xe8>
  40531f:	mov    QWORD PTR [rip+0x12f0e],0x0        # 418238 <__bss_start@@Base+0xe0>
  40532a:	mov    QWORD PTR [rip+0x12f1b],0x0        # 418250 <__bss_start@@Base+0xf8>
  405335:	mov    QWORD PTR [rip+0x12f08],0x0        # 418248 <__bss_start@@Base+0xf0>
  405340:	mov    QWORD PTR [rip+0x12f15],0x0        # 418260 <__bss_start@@Base+0x108>
  40534b:	mov    QWORD PTR [rip+0x12f02],0x0        # 418258 <__bss_start@@Base+0x100>
  405356:	mov    QWORD PTR [rip+0x12f0f],0x0        # 418270 <__bss_start@@Base+0x118>
  405361:	mov    QWORD PTR [rip+0x12efc],0x0        # 418268 <__bss_start@@Base+0x110>
  40536c:	mov    QWORD PTR [rip+0x12f09],0x0        # 418280 <__bss_start@@Base+0x128>
  405377:	mov    QWORD PTR [rip+0x12ef6],0x0        # 418278 <__bss_start@@Base+0x120>
  405382:	mov    QWORD PTR [rip+0x12f03],0x0        # 418290 <__bss_start@@Base+0x138>
  40538d:	mov    QWORD PTR [rip+0x12ef0],0x0        # 418288 <__bss_start@@Base+0x130>
  405398:	mov    QWORD PTR [rip+0x12efd],0x0        # 4182a0 <__bss_start@@Base+0x148>
  4053a3:	mov    QWORD PTR [rip+0x12eea],0x0        # 418298 <__bss_start@@Base+0x140>
  4053ae:	mov    QWORD PTR [rip+0x12ef7],0x0        # 4182b0 <__bss_start@@Base+0x158>
  4053b9:	mov    QWORD PTR [rip+0x12ee4],0x0        # 4182a8 <__bss_start@@Base+0x150>
  4053c4:	mov    QWORD PTR [rip+0x12ef1],0x0        # 4182c0 <__bss_start@@Base+0x168>
  4053cf:	mov    QWORD PTR [rip+0x12ede],0x0        # 4182b8 <__bss_start@@Base+0x160>
  4053da:	mov    QWORD PTR [rip+0x12eeb],0x0        # 4182d0 <__bss_start@@Base+0x178>
  4053e5:	mov    QWORD PTR [rip+0x12ed8],0x0        # 4182c8 <__bss_start@@Base+0x170>
  4053f0:	mov    QWORD PTR [rip+0x12ee5],0x0        # 4182e0 <__bss_start@@Base+0x188>
  4053fb:	mov    QWORD PTR [rip+0x12ed2],0x0        # 4182d8 <__bss_start@@Base+0x180>
  405406:	mov    QWORD PTR [rip+0x12edf],0x0        # 4182f0 <__bss_start@@Base+0x198>
  405411:	mov    QWORD PTR [rip+0x12ecc],0x0        # 4182e8 <__bss_start@@Base+0x190>
  40541c:	mov    QWORD PTR [rip+0x12ed9],0x0        # 418300 <__bss_start@@Base+0x1a8>
  405427:	mov    QWORD PTR [rip+0x12ec6],0x0        # 4182f8 <__bss_start@@Base+0x1a0>
  405432:	mov    QWORD PTR [rip+0x12ed3],0x0        # 418310 <__bss_start@@Base+0x1b8>
  40543d:	mov    QWORD PTR [rip+0x12ec0],0x0        # 418308 <__bss_start@@Base+0x1b0>
  405448:	mov    QWORD PTR [rip+0x12ecd],0x0        # 418320 <__bss_start@@Base+0x1c8>
  405453:	mov    QWORD PTR [rip+0x12eba],0x0        # 418318 <__bss_start@@Base+0x1c0>
  40545e:	pop    rax
  40545f:	ret    
  405460:	push   rax
  405461:	lea    rdi,[rip+0xfffffffffffffc88]        # 4050f0 <main@@Base+0x2e0>
  405468:	lea    rsi,[rip+0xfffffffffffffd81]        # 4051f0 <main@@Base+0x3e0>
  40546f:	call   412580 <__gcov_flush@@Base+0xb0>
  405474:	pop    rax
  405475:	ret    
  405476:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000405480 <UnityPrint@@Base>:
  405480:	push   rbp
  405481:	mov    rbp,rsp
  405484:	sub    rsp,0xb0
  40548b:	lea    rax,[rip+0x12e9e]        # 418330 <__bss_start@@Base+0x1d8>
  405492:	mov    QWORD PTR [rbp-0x18],rdi
  405496:	mov    QWORD PTR [rbp-0x20],rax
  40549a:	mov    rax,QWORD PTR [rbp-0x20]
  40549e:	lea    rcx,[rip+0x12e8b]        # 418330 <__bss_start@@Base+0x1d8>
  4054a5:	mov    rdx,rcx
  4054a8:	add    rdx,0x8
  4054af:	add    rcx,0x10
  4054b6:	mov    rsi,QWORD PTR [rax]
  4054b9:	add    rsi,0x1
  4054c0:	mov    QWORD PTR [rax],rsi
  4054c3:	mov    rax,QWORD PTR [rbp-0x18]
  4054c7:	mov    QWORD PTR [rbp-0x8],rax
  4054cb:	mov    rsi,QWORD PTR [rbp-0x8]
  4054cf:	mov    QWORD PTR [rbp-0x10],rsi
  4054d3:	cmp    QWORD PTR [rbp-0x10],0x0
  4054d8:	mov    QWORD PTR [rbp-0x28],rdx
  4054dc:	mov    QWORD PTR [rbp-0x30],rcx
  4054e0:	je     405802 <UnityPrint@@Base+0x382>
  4054e6:	mov    rax,QWORD PTR [rbp-0x28]
  4054ea:	lea    rcx,[rip+0x12e3f]        # 418330 <__bss_start@@Base+0x1d8>
  4054f1:	add    rcx,0x18
  4054f8:	mov    rdx,QWORD PTR [rax]
  4054fb:	add    rdx,0x1
  405502:	mov    QWORD PTR [rax],rdx
  405505:	mov    QWORD PTR [rbp-0x38],rcx
  405509:	mov    rax,QWORD PTR [rbp-0x38]
  40550d:	lea    rcx,[rip+0x12e1c]        # 418330 <__bss_start@@Base+0x1d8>
  405514:	mov    rdx,rcx
  405517:	add    rdx,0x20
  40551e:	add    rcx,0x28
  405525:	mov    rsi,QWORD PTR [rax]
  405528:	add    rsi,0x1
  40552f:	mov    QWORD PTR [rax],rsi
  405532:	mov    rax,QWORD PTR [rbp-0x10]
  405536:	cmp    BYTE PTR [rax],0x0
  405539:	mov    QWORD PTR [rbp-0x40],rdx
  40553d:	mov    QWORD PTR [rbp-0x48],rcx
  405541:	je     4057df <UnityPrint@@Base+0x35f>
  405547:	mov    rax,QWORD PTR [rbp-0x40]
  40554b:	lea    rcx,[rip+0x12dde]        # 418330 <__bss_start@@Base+0x1d8>
  405552:	mov    rdx,rcx
  405555:	add    rdx,0x30
  40555c:	add    rcx,0x38
  405563:	mov    rsi,QWORD PTR [rax]
  405566:	add    rsi,0x1
  40556d:	mov    QWORD PTR [rax],rsi
  405570:	mov    rax,QWORD PTR [rbp-0x10]
  405574:	movsx  edi,BYTE PTR [rax]
  405577:	cmp    edi,0x7e
  40557a:	mov    QWORD PTR [rbp-0x50],rdx
  40557e:	mov    QWORD PTR [rbp-0x58],rcx
  405582:	jg     4055fd <UnityPrint@@Base+0x17d>
  405588:	mov    rax,QWORD PTR [rbp-0x50]
  40558c:	lea    rcx,[rip+0x12d9d]        # 418330 <__bss_start@@Base+0x1d8>
  405593:	mov    rdx,rcx
  405596:	add    rdx,0x40
  40559d:	add    rcx,0x48
  4055a4:	mov    rsi,QWORD PTR [rax]
  4055a7:	add    rsi,0x1
  4055ae:	mov    QWORD PTR [rax],rsi
  4055b1:	mov    rax,QWORD PTR [rbp-0x10]
  4055b5:	movsx  edi,BYTE PTR [rax]
  4055b8:	cmp    edi,0x20
  4055bb:	mov    QWORD PTR [rbp-0x60],rdx
  4055bf:	mov    QWORD PTR [rbp-0x58],rcx
  4055c3:	jl     4055fd <UnityPrint@@Base+0x17d>
  4055c9:	mov    rax,QWORD PTR [rbp-0x60]
  4055cd:	mov    rcx,QWORD PTR [rax]
  4055d0:	add    rcx,0x1
  4055d7:	mov    QWORD PTR [rax],rcx
  4055da:	mov    rax,QWORD PTR [rbp-0x10]
  4055de:	movsx  edi,BYTE PTR [rax]
  4055e1:	call   403050 <putchar@plt>
  4055e6:	lea    rcx,[rip+0x12d43]        # 418330 <__bss_start@@Base+0x1d8>
  4055ed:	add    rcx,0x50
  4055f4:	mov    QWORD PTR [rbp-0x68],rcx
  4055f8:	jmp    4057a9 <UnityPrint@@Base+0x329>
  4055fd:	mov    rax,QWORD PTR [rbp-0x58]
  405601:	lea    rcx,[rip+0x12d28]        # 418330 <__bss_start@@Base+0x1d8>
  405608:	mov    rdx,rcx
  40560b:	add    rdx,0x58
  405612:	add    rcx,0x60
  405619:	mov    rsi,QWORD PTR [rax]
  40561c:	add    rsi,0x1
  405623:	mov    QWORD PTR [rax],rsi
  405626:	mov    rax,QWORD PTR [rbp-0x10]
  40562a:	movsx  edi,BYTE PTR [rax]
  40562d:	cmp    edi,0xd
  405630:	mov    QWORD PTR [rbp-0x70],rdx
  405634:	mov    QWORD PTR [rbp-0x78],rcx
  405638:	jne    405680 <UnityPrint@@Base+0x200>
  40563e:	mov    rax,QWORD PTR [rbp-0x70]
  405642:	mov    rcx,QWORD PTR [rax]
  405645:	add    rcx,0x1
  40564c:	mov    QWORD PTR [rax],rcx
  40564f:	mov    edi,0x5c
  405654:	call   403050 <putchar@plt>
  405659:	mov    edi,0x72
  40565e:	mov    DWORD PTR [rbp-0x7c],eax
  405661:	call   403050 <putchar@plt>
  405666:	lea    rcx,[rip+0x12cc3]        # 418330 <__bss_start@@Base+0x1d8>
  40566d:	add    rcx,0x68
  405674:	mov    QWORD PTR [rbp-0x88],rcx
  40567b:	jmp    405783 <UnityPrint@@Base+0x303>
  405680:	mov    rax,QWORD PTR [rbp-0x78]
  405684:	lea    rcx,[rip+0x12ca5]        # 418330 <__bss_start@@Base+0x1d8>
  40568b:	mov    rdx,rcx
  40568e:	add    rdx,0x70
  405695:	add    rcx,0x78
  40569c:	mov    rsi,QWORD PTR [rax]
  40569f:	add    rsi,0x1
  4056a6:	mov    QWORD PTR [rax],rsi
  4056a9:	mov    rax,QWORD PTR [rbp-0x10]
  4056ad:	movsx  edi,BYTE PTR [rax]
  4056b0:	cmp    edi,0xa
  4056b3:	mov    QWORD PTR [rbp-0x90],rdx
  4056ba:	mov    QWORD PTR [rbp-0x98],rcx
  4056c1:	jne    40570f <UnityPrint@@Base+0x28f>
  4056c7:	mov    rax,QWORD PTR [rbp-0x90]
  4056ce:	mov    rcx,QWORD PTR [rax]
  4056d1:	add    rcx,0x1
  4056d8:	mov    QWORD PTR [rax],rcx
  4056db:	mov    edi,0x5c
  4056e0:	call   403050 <putchar@plt>
  4056e5:	mov    edi,0x6e
  4056ea:	mov    DWORD PTR [rbp-0x9c],eax
  4056f0:	call   403050 <putchar@plt>
  4056f5:	lea    rcx,[rip+0x12c34]        # 418330 <__bss_start@@Base+0x1d8>
  4056fc:	add    rcx,0x80
  405703:	mov    QWORD PTR [rbp-0xa8],rcx
  40570a:	jmp    40575a <UnityPrint@@Base+0x2da>
  40570f:	mov    rax,QWORD PTR [rbp-0x98]
  405716:	mov    rcx,QWORD PTR [rax]
  405719:	add    rcx,0x1
  405720:	mov    QWORD PTR [rax],rcx
  405723:	mov    edi,0x5c
  405728:	call   403050 <putchar@plt>
  40572d:	mov    rcx,QWORD PTR [rbp-0x10]
  405731:	movsx  rdi,BYTE PTR [rcx]
  405735:	mov    esi,0x2
  40573a:	mov    DWORD PTR [rbp-0xac],eax
  405740:	call   405830 <UnityPrintNumberHex@@Base>
  405745:	lea    rcx,[rip+0x12be4]        # 418330 <__bss_start@@Base+0x1d8>
  40574c:	add    rcx,0x88
  405753:	mov    QWORD PTR [rbp-0xa8],rcx
  40575a:	mov    rax,QWORD PTR [rbp-0xa8]
  405761:	lea    rcx,[rip+0x12bc8]        # 418330 <__bss_start@@Base+0x1d8>
  405768:	add    rcx,0x90
  40576f:	mov    rdx,QWORD PTR [rax]
  405772:	add    rdx,0x1
  405779:	mov    QWORD PTR [rax],rdx
  40577c:	mov    QWORD PTR [rbp-0x88],rcx
  405783:	mov    rax,QWORD PTR [rbp-0x88]
  40578a:	lea    rcx,[rip+0x12b9f]        # 418330 <__bss_start@@Base+0x1d8>
  405791:	add    rcx,0x98
  405798:	mov    rdx,QWORD PTR [rax]
  40579b:	add    rdx,0x1
  4057a2:	mov    QWORD PTR [rax],rdx
  4057a5:	mov    QWORD PTR [rbp-0x68],rcx
  4057a9:	mov    rax,QWORD PTR [rbp-0x68]
  4057ad:	lea    rcx,[rip+0x12b7c]        # 418330 <__bss_start@@Base+0x1d8>
  4057b4:	add    rcx,0xa0
  4057bb:	mov    rdx,QWORD PTR [rax]
  4057be:	add    rdx,0x1
  4057c5:	mov    QWORD PTR [rax],rdx
  4057c8:	mov    rax,QWORD PTR [rbp-0x10]
  4057cc:	add    rax,0x1
  4057d2:	mov    QWORD PTR [rbp-0x10],rax
  4057d6:	mov    QWORD PTR [rbp-0x38],rcx
  4057da:	jmp    405509 <UnityPrint@@Base+0x89>
  4057df:	mov    rax,QWORD PTR [rbp-0x48]
  4057e3:	lea    rcx,[rip+0x12b46]        # 418330 <__bss_start@@Base+0x1d8>
  4057ea:	add    rcx,0xa8
  4057f1:	mov    rdx,QWORD PTR [rax]
  4057f4:	add    rdx,0x1
  4057fb:	mov    QWORD PTR [rax],rdx
  4057fe:	mov    QWORD PTR [rbp-0x30],rcx
  405802:	mov    rax,QWORD PTR [rbp-0x30]
  405806:	mov    rcx,QWORD PTR [rax]
  405809:	add    rcx,0x1
  405810:	mov    QWORD PTR [rax],rcx
  405813:	mov    rax,QWORD PTR [rip+0x12bc6]        # 4183e0 <__bss_start@@Base+0x288>
  40581a:	add    rax,0x1
  405820:	mov    QWORD PTR [rip+0x12bb9],rax        # 4183e0 <__bss_start@@Base+0x288>
  405827:	add    rsp,0xb0
  40582e:	pop    rbp
  40582f:	ret    

0000000000405830 <UnityPrintNumberHex@@Base>:
  405830:	push   rbp
  405831:	mov    rbp,rsp
  405834:	sub    rsp,0x80
  40583b:	lea    rax,[rip+0x12bae]        # 4183f0 <__bss_start@@Base+0x298>
  405842:	mov    QWORD PTR [rbp-0x28],rdi
  405846:	mov    BYTE PTR [rbp-0x29],sil
  40584a:	mov    QWORD PTR [rbp-0x38],rax
  40584e:	mov    rax,QWORD PTR [rbp-0x38]
  405852:	mov    rcx,QWORD PTR [rax]
  405855:	add    rcx,0x1
  40585c:	mov    QWORD PTR [rax],rcx
  40585f:	mov    rax,QWORD PTR [rbp-0x28]
  405863:	mov    QWORD PTR [rbp-0x8],rax
  405867:	mov    dl,BYTE PTR [rbp-0x29]
  40586a:	mov    BYTE PTR [rbp-0x9],dl
  40586d:	mov    sil,BYTE PTR [rbp-0x9]
  405871:	mov    BYTE PTR [rbp-0x19],sil
  405875:	mov    edi,0x30
  40587a:	call   403050 <putchar@plt>
  40587f:	mov    edi,0x78
  405884:	mov    DWORD PTR [rbp-0x3c],eax
  405887:	call   403050 <putchar@plt>
  40588c:	lea    rcx,[rip+0x12b5d]        # 4183f0 <__bss_start@@Base+0x298>
  405893:	add    rcx,0x8
  40589a:	mov    QWORD PTR [rbp-0x48],rcx
  40589e:	mov    rax,QWORD PTR [rbp-0x48]
  4058a2:	lea    rcx,[rip+0x12b47]        # 4183f0 <__bss_start@@Base+0x298>
  4058a9:	mov    rdx,rcx
  4058ac:	add    rdx,0x10
  4058b3:	add    rcx,0x18
  4058ba:	mov    rsi,QWORD PTR [rax]
  4058bd:	add    rsi,0x1
  4058c4:	mov    QWORD PTR [rax],rsi
  4058c7:	movsx  edi,BYTE PTR [rbp-0x19]
  4058cb:	cmp    edi,0x0
  4058ce:	mov    QWORD PTR [rbp-0x50],rdx
  4058d2:	mov    QWORD PTR [rbp-0x58],rcx
  4058d6:	jle    4059e5 <UnityPrintNumberHex@@Base+0x1b5>
  4058dc:	mov    rax,QWORD PTR [rbp-0x50]
  4058e0:	lea    rcx,[rip+0x12b09]        # 4183f0 <__bss_start@@Base+0x298>
  4058e7:	mov    rdx,rcx
  4058ea:	add    rdx,0x20
  4058f1:	add    rcx,0x28
  4058f8:	mov    rsi,QWORD PTR [rax]
  4058fb:	add    rsi,0x1
  405902:	mov    QWORD PTR [rax],rsi
  405905:	mov    rax,QWORD PTR [rbp-0x8]
  405909:	mov    dil,BYTE PTR [rbp-0x19]
  40590d:	add    dil,0xff
  405911:	mov    BYTE PTR [rbp-0x19],dil
  405915:	movsx  r8d,dil
  405919:	shl    r8d,0x2
  40591d:	mov    r8d,r8d
  405920:	mov    esi,r8d
  405923:	mov    QWORD PTR [rbp-0x60],rcx
  405927:	mov    rcx,rsi
  40592a:	shr    rax,cl
  40592d:	and    rax,0xf
  405933:	mov    QWORD PTR [rbp-0x18],rax
  405937:	cmp    QWORD PTR [rbp-0x18],0x9
  40593c:	mov    rax,QWORD PTR [rbp-0x60]
  405940:	mov    QWORD PTR [rbp-0x68],rdx
  405944:	mov    QWORD PTR [rbp-0x70],rax
  405948:	ja     405988 <UnityPrintNumberHex@@Base+0x158>
  40594e:	mov    rax,QWORD PTR [rbp-0x68]
  405952:	mov    rcx,QWORD PTR [rax]
  405955:	add    rcx,0x1
  40595c:	mov    QWORD PTR [rax],rcx
  40595f:	mov    rax,QWORD PTR [rbp-0x18]
  405963:	add    rax,0x30
  405969:	movsx  edi,al
  40596c:	call   403050 <putchar@plt>
  405971:	lea    rcx,[rip+0x12a78]        # 4183f0 <__bss_start@@Base+0x298>
  405978:	add    rcx,0x30
  40597f:	mov    QWORD PTR [rbp-0x78],rcx
  405983:	jmp    4059bd <UnityPrintNumberHex@@Base+0x18d>
  405988:	mov    rax,QWORD PTR [rbp-0x70]
  40598c:	mov    rcx,QWORD PTR [rax]
  40598f:	add    rcx,0x1
  405996:	mov    QWORD PTR [rax],rcx
  405999:	mov    rax,QWORD PTR [rbp-0x18]
  40599d:	add    rax,0x37
  4059a3:	movsx  edi,al
  4059a6:	call   403050 <putchar@plt>
  4059ab:	lea    rcx,[rip+0x12a3e]        # 4183f0 <__bss_start@@Base+0x298>
  4059b2:	add    rcx,0x38
  4059b9:	mov    QWORD PTR [rbp-0x78],rcx
  4059bd:	mov    rax,QWORD PTR [rbp-0x78]
  4059c1:	lea    rcx,[rip+0x12a28]        # 4183f0 <__bss_start@@Base+0x298>
  4059c8:	add    rcx,0x40
  4059cf:	mov    rdx,QWORD PTR [rax]
  4059d2:	add    rdx,0x1
  4059d9:	mov    QWORD PTR [rax],rdx
  4059dc:	mov    QWORD PTR [rbp-0x48],rcx
  4059e0:	jmp    40589e <UnityPrintNumberHex@@Base+0x6e>
  4059e5:	mov    rax,QWORD PTR [rbp-0x58]
  4059e9:	mov    rcx,QWORD PTR [rax]
  4059ec:	add    rcx,0x1
  4059f3:	mov    QWORD PTR [rax],rcx
  4059f6:	mov    rax,QWORD PTR [rip+0x12a3b]        # 418438 <__bss_start@@Base+0x2e0>
  4059fd:	add    rax,0x1
  405a03:	mov    QWORD PTR [rip+0x12a2e],rax        # 418438 <__bss_start@@Base+0x2e0>
  405a0a:	add    rsp,0x80
  405a11:	pop    rbp
  405a12:	ret    
  405a13:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405a1d:	nop    DWORD PTR [rax]

0000000000405a20 <UnityPrintLen@@Base>:
  405a20:	push   rbp
  405a21:	mov    rbp,rsp
  405a24:	sub    rsp,0xe0
  405a2b:	lea    rax,[rip+0x12a0e]        # 418440 <__bss_start@@Base+0x2e8>
  405a32:	mov    QWORD PTR [rbp-0x20],rdi
  405a36:	mov    DWORD PTR [rbp-0x24],esi
  405a39:	mov    QWORD PTR [rbp-0x30],rax
  405a3d:	mov    rax,QWORD PTR [rbp-0x30]
  405a41:	lea    rcx,[rip+0x129f8]        # 418440 <__bss_start@@Base+0x2e8>
  405a48:	mov    rdx,rcx
  405a4b:	add    rdx,0x8
  405a52:	add    rcx,0x10
  405a59:	mov    rsi,QWORD PTR [rax]
  405a5c:	add    rsi,0x1
  405a63:	mov    QWORD PTR [rax],rsi
  405a66:	mov    rax,QWORD PTR [rbp-0x20]
  405a6a:	mov    QWORD PTR [rbp-0x8],rax
  405a6e:	mov    edi,DWORD PTR [rbp-0x24]
  405a71:	mov    DWORD PTR [rbp-0xc],edi
  405a74:	mov    rsi,QWORD PTR [rbp-0x8]
  405a78:	mov    QWORD PTR [rbp-0x18],rsi
  405a7c:	cmp    QWORD PTR [rbp-0x18],0x0
  405a81:	mov    QWORD PTR [rbp-0x38],rdx
  405a85:	mov    QWORD PTR [rbp-0x40],rcx
  405a89:	je     405e4e <UnityPrintLen@@Base+0x42e>
  405a8f:	mov    rax,QWORD PTR [rbp-0x38]
  405a93:	lea    rcx,[rip+0x129a6]        # 418440 <__bss_start@@Base+0x2e8>
  405a9a:	add    rcx,0x18
  405aa1:	mov    rdx,QWORD PTR [rax]
  405aa4:	add    rdx,0x1
  405aab:	mov    QWORD PTR [rax],rdx
  405aae:	mov    QWORD PTR [rbp-0x48],rcx
  405ab2:	mov    rax,QWORD PTR [rbp-0x48]
  405ab6:	lea    rcx,[rip+0x12983]        # 418440 <__bss_start@@Base+0x2e8>
  405abd:	mov    rdx,rcx
  405ac0:	add    rdx,0x20
  405ac7:	add    rcx,0x28
  405ace:	xor    esi,esi
  405ad0:	mov    rdi,QWORD PTR [rax]
  405ad3:	add    rdi,0x1
  405ada:	mov    QWORD PTR [rax],rdi
  405add:	mov    rax,QWORD PTR [rbp-0x18]
  405ae1:	movsx  r8d,BYTE PTR [rax]
  405ae5:	cmp    r8d,0x0
  405ae9:	mov    QWORD PTR [rbp-0x50],rdx
  405aed:	mov    QWORD PTR [rbp-0x58],rcx
  405af1:	mov    BYTE PTR [rbp-0x59],sil
  405af5:	je     405b34 <UnityPrintLen@@Base+0x114>
  405afb:	mov    rax,QWORD PTR [rbp-0x50]
  405aff:	lea    rcx,[rip+0x1293a]        # 418440 <__bss_start@@Base+0x2e8>
  405b06:	add    rcx,0x30
  405b0d:	mov    rdx,QWORD PTR [rax]
  405b10:	add    rdx,0x1
  405b17:	mov    QWORD PTR [rax],rdx
  405b1a:	mov    rax,QWORD PTR [rbp-0x18]
  405b1e:	mov    rdx,QWORD PTR [rbp-0x8]
  405b22:	sub    rax,rdx
  405b25:	cmp    eax,DWORD PTR [rbp-0xc]
  405b28:	setb   sil
  405b2c:	mov    QWORD PTR [rbp-0x58],rcx
  405b30:	mov    BYTE PTR [rbp-0x59],sil
  405b34:	mov    al,BYTE PTR [rbp-0x59]
  405b37:	mov    rcx,QWORD PTR [rbp-0x58]
  405b3b:	lea    rdx,[rip+0x128fe]        # 418440 <__bss_start@@Base+0x2e8>
  405b42:	mov    rsi,rdx
  405b45:	add    rsi,0x38
  405b4c:	add    rdx,0x40
  405b53:	mov    rdi,QWORD PTR [rcx]
  405b56:	add    rdi,0x1
  405b5d:	mov    QWORD PTR [rcx],rdi
  405b60:	test   al,0x1
  405b62:	mov    QWORD PTR [rbp-0x68],rsi
  405b66:	mov    QWORD PTR [rbp-0x70],rdx
  405b6a:	jne    405b75 <UnityPrintLen@@Base+0x155>
  405b70:	jmp    405e2b <UnityPrintLen@@Base+0x40b>
  405b75:	mov    rax,QWORD PTR [rbp-0x68]
  405b79:	lea    rcx,[rip+0x128c0]        # 418440 <__bss_start@@Base+0x2e8>
  405b80:	mov    rdx,rcx
  405b83:	add    rdx,0x48
  405b8a:	add    rcx,0x50
  405b91:	mov    rsi,QWORD PTR [rax]
  405b94:	add    rsi,0x1
  405b9b:	mov    QWORD PTR [rax],rsi
  405b9e:	mov    rax,QWORD PTR [rbp-0x18]
  405ba2:	movsx  edi,BYTE PTR [rax]
  405ba5:	cmp    edi,0x7e
  405ba8:	mov    QWORD PTR [rbp-0x78],rdx
  405bac:	mov    QWORD PTR [rbp-0x80],rcx
  405bb0:	jg     405c34 <UnityPrintLen@@Base+0x214>
  405bb6:	mov    rax,QWORD PTR [rbp-0x78]
  405bba:	lea    rcx,[rip+0x1287f]        # 418440 <__bss_start@@Base+0x2e8>
  405bc1:	mov    rdx,rcx
  405bc4:	add    rdx,0x58
  405bcb:	add    rcx,0x60
  405bd2:	mov    rsi,QWORD PTR [rax]
  405bd5:	add    rsi,0x1
  405bdc:	mov    QWORD PTR [rax],rsi
  405bdf:	mov    rax,QWORD PTR [rbp-0x18]
  405be3:	movsx  edi,BYTE PTR [rax]
  405be6:	cmp    edi,0x20
  405be9:	mov    QWORD PTR [rbp-0x88],rdx
  405bf0:	mov    QWORD PTR [rbp-0x80],rcx
  405bf4:	jl     405c34 <UnityPrintLen@@Base+0x214>
  405bfa:	mov    rax,QWORD PTR [rbp-0x88]
  405c01:	mov    rcx,QWORD PTR [rax]
  405c04:	add    rcx,0x1
  405c0b:	mov    QWORD PTR [rax],rcx
  405c0e:	mov    rax,QWORD PTR [rbp-0x18]
  405c12:	movsx  edi,BYTE PTR [rax]
  405c15:	call   403050 <putchar@plt>
  405c1a:	lea    rcx,[rip+0x1281f]        # 418440 <__bss_start@@Base+0x2e8>
  405c21:	add    rcx,0x68
  405c28:	mov    QWORD PTR [rbp-0x90],rcx
  405c2f:	jmp    405df2 <UnityPrintLen@@Base+0x3d2>
  405c34:	mov    rax,QWORD PTR [rbp-0x80]
  405c38:	lea    rcx,[rip+0x12801]        # 418440 <__bss_start@@Base+0x2e8>
  405c3f:	mov    rdx,rcx
  405c42:	add    rdx,0x70
  405c49:	add    rcx,0x78
  405c50:	mov    rsi,QWORD PTR [rax]
  405c53:	add    rsi,0x1
  405c5a:	mov    QWORD PTR [rax],rsi
  405c5d:	mov    rax,QWORD PTR [rbp-0x18]
  405c61:	movsx  edi,BYTE PTR [rax]
  405c64:	cmp    edi,0xd
  405c67:	mov    QWORD PTR [rbp-0x98],rdx
  405c6e:	mov    QWORD PTR [rbp-0xa0],rcx
  405c75:	jne    405cc3 <UnityPrintLen@@Base+0x2a3>
  405c7b:	mov    rax,QWORD PTR [rbp-0x98]
  405c82:	mov    rcx,QWORD PTR [rax]
  405c85:	add    rcx,0x1
  405c8c:	mov    QWORD PTR [rax],rcx
  405c8f:	mov    edi,0x5c
  405c94:	call   403050 <putchar@plt>
  405c99:	mov    edi,0x72
  405c9e:	mov    DWORD PTR [rbp-0xa4],eax
  405ca4:	call   403050 <putchar@plt>
  405ca9:	lea    rcx,[rip+0x12790]        # 418440 <__bss_start@@Base+0x2e8>
  405cb0:	add    rcx,0x80
  405cb7:	mov    QWORD PTR [rbp-0xb0],rcx
  405cbe:	jmp    405dc9 <UnityPrintLen@@Base+0x3a9>
  405cc3:	mov    rax,QWORD PTR [rbp-0xa0]
  405cca:	lea    rcx,[rip+0x1276f]        # 418440 <__bss_start@@Base+0x2e8>
  405cd1:	mov    rdx,rcx
  405cd4:	add    rdx,0x88
  405cdb:	add    rcx,0x90
  405ce2:	mov    rsi,QWORD PTR [rax]
  405ce5:	add    rsi,0x1
  405cec:	mov    QWORD PTR [rax],rsi
  405cef:	mov    rax,QWORD PTR [rbp-0x18]
  405cf3:	movsx  edi,BYTE PTR [rax]
  405cf6:	cmp    edi,0xa
  405cf9:	mov    QWORD PTR [rbp-0xb8],rdx
  405d00:	mov    QWORD PTR [rbp-0xc0],rcx
  405d07:	jne    405d55 <UnityPrintLen@@Base+0x335>
  405d0d:	mov    rax,QWORD PTR [rbp-0xb8]
  405d14:	mov    rcx,QWORD PTR [rax]
  405d17:	add    rcx,0x1
  405d1e:	mov    QWORD PTR [rax],rcx
  405d21:	mov    edi,0x5c
  405d26:	call   403050 <putchar@plt>
  405d2b:	mov    edi,0x6e
  405d30:	mov    DWORD PTR [rbp-0xc4],eax
  405d36:	call   403050 <putchar@plt>
  405d3b:	lea    rcx,[rip+0x126fe]        # 418440 <__bss_start@@Base+0x2e8>
  405d42:	add    rcx,0x98
  405d49:	mov    QWORD PTR [rbp-0xd0],rcx
  405d50:	jmp    405da0 <UnityPrintLen@@Base+0x380>
  405d55:	mov    rax,QWORD PTR [rbp-0xc0]
  405d5c:	mov    rcx,QWORD PTR [rax]
  405d5f:	add    rcx,0x1
  405d66:	mov    QWORD PTR [rax],rcx
  405d69:	mov    edi,0x5c
  405d6e:	call   403050 <putchar@plt>
  405d73:	mov    rcx,QWORD PTR [rbp-0x18]
  405d77:	movsx  rdi,BYTE PTR [rcx]
  405d7b:	mov    esi,0x2
  405d80:	mov    DWORD PTR [rbp-0xd4],eax
  405d86:	call   405830 <UnityPrintNumberHex@@Base>
  405d8b:	lea    rcx,[rip+0x126ae]        # 418440 <__bss_start@@Base+0x2e8>
  405d92:	add    rcx,0xa0
  405d99:	mov    QWORD PTR [rbp-0xd0],rcx
  405da0:	mov    rax,QWORD PTR [rbp-0xd0]
  405da7:	lea    rcx,[rip+0x12692]        # 418440 <__bss_start@@Base+0x2e8>
  405dae:	add    rcx,0xa8
  405db5:	mov    rdx,QWORD PTR [rax]
  405db8:	add    rdx,0x1
  405dbf:	mov    QWORD PTR [rax],rdx
  405dc2:	mov    QWORD PTR [rbp-0xb0],rcx
  405dc9:	mov    rax,QWORD PTR [rbp-0xb0]
  405dd0:	lea    rcx,[rip+0x12669]        # 418440 <__bss_start@@Base+0x2e8>
  405dd7:	add    rcx,0xb0
  405dde:	mov    rdx,QWORD PTR [rax]
  405de1:	add    rdx,0x1
  405de8:	mov    QWORD PTR [rax],rdx
  405deb:	mov    QWORD PTR [rbp-0x90],rcx
  405df2:	mov    rax,QWORD PTR [rbp-0x90]
  405df9:	lea    rcx,[rip+0x12640]        # 418440 <__bss_start@@Base+0x2e8>
  405e00:	add    rcx,0xb8
  405e07:	mov    rdx,QWORD PTR [rax]
  405e0a:	add    rdx,0x1
  405e11:	mov    QWORD PTR [rax],rdx
  405e14:	mov    rax,QWORD PTR [rbp-0x18]
  405e18:	add    rax,0x1
  405e1e:	mov    QWORD PTR [rbp-0x18],rax
  405e22:	mov    QWORD PTR [rbp-0x48],rcx
  405e26:	jmp    405ab2 <UnityPrintLen@@Base+0x92>
  405e2b:	mov    rax,QWORD PTR [rbp-0x70]
  405e2f:	lea    rcx,[rip+0x1260a]        # 418440 <__bss_start@@Base+0x2e8>
  405e36:	add    rcx,0xc0
  405e3d:	mov    rdx,QWORD PTR [rax]
  405e40:	add    rdx,0x1
  405e47:	mov    QWORD PTR [rax],rdx
  405e4a:	mov    QWORD PTR [rbp-0x40],rcx
  405e4e:	mov    rax,QWORD PTR [rbp-0x40]
  405e52:	mov    rcx,QWORD PTR [rax]
  405e55:	add    rcx,0x1
  405e5c:	mov    QWORD PTR [rax],rcx
  405e5f:	mov    rax,QWORD PTR [rip+0x126a2]        # 418508 <__bss_start@@Base+0x3b0>
  405e66:	add    rax,0x1
  405e6c:	mov    QWORD PTR [rip+0x12695],rax        # 418508 <__bss_start@@Base+0x3b0>
  405e73:	add    rsp,0xe0
  405e7a:	pop    rbp
  405e7b:	ret    
  405e7c:	nop    DWORD PTR [rax+0x0]

0000000000405e80 <UnityPrintNumberByStyle@@Base>:
  405e80:	push   rbp
  405e81:	mov    rbp,rsp
  405e84:	sub    rsp,0x60
  405e88:	lea    rax,[rip+0x12681]        # 418510 <__bss_start@@Base+0x3b8>
  405e8f:	mov    QWORD PTR [rbp-0x18],rdi
  405e93:	mov    DWORD PTR [rbp-0x1c],esi
  405e96:	mov    QWORD PTR [rbp-0x28],rax
  405e9a:	mov    rax,QWORD PTR [rbp-0x28]
  405e9e:	lea    rcx,[rip+0x1266b]        # 418510 <__bss_start@@Base+0x3b8>
  405ea5:	mov    rdx,rcx
  405ea8:	add    rdx,0x8
  405eaf:	add    rcx,0x10
  405eb6:	mov    rsi,QWORD PTR [rax]
  405eb9:	add    rsi,0x1
  405ec0:	mov    QWORD PTR [rax],rsi
  405ec3:	mov    rax,QWORD PTR [rbp-0x18]
  405ec7:	mov    QWORD PTR [rbp-0x8],rax
  405ecb:	mov    edi,DWORD PTR [rbp-0x1c]
  405ece:	mov    DWORD PTR [rbp-0xc],edi
  405ed1:	mov    r8d,DWORD PTR [rbp-0xc]
  405ed5:	and    r8d,0x10
  405ed9:	cmp    r8d,0x10
  405edd:	mov    QWORD PTR [rbp-0x30],rdx
  405ee1:	mov    QWORD PTR [rbp-0x38],rcx
  405ee5:	jne    405f1b <UnityPrintNumberByStyle@@Base+0x9b>
  405eeb:	mov    rax,QWORD PTR [rbp-0x30]
  405eef:	mov    rcx,QWORD PTR [rax]
  405ef2:	add    rcx,0x1
  405ef9:	mov    QWORD PTR [rax],rcx
  405efc:	mov    rdi,QWORD PTR [rbp-0x8]
  405f00:	call   406040 <UnityPrintNumber@@Base>
  405f05:	lea    rax,[rip+0x12604]        # 418510 <__bss_start@@Base+0x3b8>
  405f0c:	add    rax,0x18
  405f12:	mov    QWORD PTR [rbp-0x40],rax
  405f16:	jmp    406006 <UnityPrintNumberByStyle@@Base+0x186>
  405f1b:	mov    rax,QWORD PTR [rbp-0x38]
  405f1f:	lea    rcx,[rip+0x125ea]        # 418510 <__bss_start@@Base+0x3b8>
  405f26:	mov    rdx,rcx
  405f29:	add    rdx,0x20
  405f30:	add    rcx,0x28
  405f37:	mov    rsi,QWORD PTR [rax]
  405f3a:	add    rsi,0x1
  405f41:	mov    QWORD PTR [rax],rsi
  405f44:	mov    edi,DWORD PTR [rbp-0xc]
  405f47:	and    edi,0x20
  405f4a:	cmp    edi,0x20
  405f4d:	mov    QWORD PTR [rbp-0x48],rdx
  405f51:	mov    QWORD PTR [rbp-0x50],rcx
  405f55:	jne    405fac <UnityPrintNumberByStyle@@Base+0x12c>
  405f5b:	mov    rax,QWORD PTR [rbp-0x48]
  405f5f:	lea    rcx,[rip+0xd69a]        # 413600 <UnitySizeMask@@Base>
  405f66:	mov    rdx,QWORD PTR [rax]
  405f69:	add    rdx,0x1
  405f70:	mov    QWORD PTR [rax],rdx
  405f73:	mov    rax,QWORD PTR [rbp-0x8]
  405f77:	mov    esi,DWORD PTR [rbp-0xc]
  405f7a:	mov    edx,esi
  405f7c:	and    rdx,0xf
  405f83:	sub    rdx,0x1
  405f8a:	and    rax,QWORD PTR [rcx+rdx*8]
  405f8e:	mov    rdi,rax
  405f91:	call   406360 <UnityPrintNumberUnsigned@@Base>
  405f96:	lea    rax,[rip+0x12573]        # 418510 <__bss_start@@Base+0x3b8>
  405f9d:	add    rax,0x30
  405fa3:	mov    QWORD PTR [rbp-0x58],rax
  405fa7:	jmp    405fe3 <UnityPrintNumberByStyle@@Base+0x163>
  405fac:	mov    rax,QWORD PTR [rbp-0x50]
  405fb0:	mov    rcx,QWORD PTR [rax]
  405fb3:	add    rcx,0x1
  405fba:	mov    QWORD PTR [rax],rcx
  405fbd:	mov    rdi,QWORD PTR [rbp-0x8]
  405fc1:	mov    edx,DWORD PTR [rbp-0xc]
  405fc4:	and    edx,0xf
  405fc7:	shl    edx,0x1
  405fca:	movsx  esi,dl
  405fcd:	call   405830 <UnityPrintNumberHex@@Base>
  405fd2:	lea    rax,[rip+0x12537]        # 418510 <__bss_start@@Base+0x3b8>
  405fd9:	add    rax,0x38
  405fdf:	mov    QWORD PTR [rbp-0x58],rax
  405fe3:	mov    rax,QWORD PTR [rbp-0x58]
  405fe7:	lea    rcx,[rip+0x12522]        # 418510 <__bss_start@@Base+0x3b8>
  405fee:	add    rcx,0x40
  405ff5:	mov    rdx,QWORD PTR [rax]
  405ff8:	add    rdx,0x1
  405fff:	mov    QWORD PTR [rax],rdx
  406002:	mov    QWORD PTR [rbp-0x40],rcx
  406006:	mov    rax,QWORD PTR [rbp-0x40]
  40600a:	mov    rcx,QWORD PTR [rax]
  40600d:	add    rcx,0x1
  406014:	mov    QWORD PTR [rax],rcx
  406017:	mov    rax,QWORD PTR [rip+0x1253a]        # 418558 <__bss_start@@Base+0x400>
  40601e:	add    rax,0x1
  406024:	mov    QWORD PTR [rip+0x1252d],rax        # 418558 <__bss_start@@Base+0x400>
  40602b:	add    rsp,0x60
  40602f:	pop    rbp
  406030:	ret    
  406031:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40603b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000406040 <UnityPrintNumber@@Base>:
  406040:	push   rbp
  406041:	mov    rbp,rsp
  406044:	sub    rsp,0xa0
  40604b:	lea    rax,[rip+0x1250e]        # 418560 <__bss_start@@Base+0x408>
  406052:	mov    QWORD PTR [rbp-0x28],rdi
  406056:	mov    QWORD PTR [rbp-0x30],rax
  40605a:	mov    rax,QWORD PTR [rbp-0x30]
  40605e:	lea    rcx,[rip+0x124fb]        # 418560 <__bss_start@@Base+0x408>
  406065:	mov    rdx,rcx
  406068:	add    rdx,0x8
  40606f:	add    rcx,0x10
  406076:	mov    rsi,QWORD PTR [rax]
  406079:	add    rsi,0x1
  406080:	mov    QWORD PTR [rax],rsi
  406083:	mov    rax,QWORD PTR [rbp-0x28]
  406087:	mov    QWORD PTR [rbp-0x8],rax
  40608b:	mov    QWORD PTR [rbp-0x10],0x1
  406093:	cmp    QWORD PTR [rbp-0x8],0x0
  406098:	mov    QWORD PTR [rbp-0x38],rdx
  40609c:	mov    QWORD PTR [rbp-0x40],rcx
  4060a0:	jge    4060e4 <UnityPrintNumber@@Base+0xa4>
  4060a6:	mov    rax,QWORD PTR [rbp-0x38]
  4060aa:	mov    rcx,QWORD PTR [rax]
  4060ad:	add    rcx,0x1
  4060b4:	mov    QWORD PTR [rax],rcx
  4060b7:	mov    edi,0x2d
  4060bc:	call   403050 <putchar@plt>
  4060c1:	lea    rcx,[rip+0x12498]        # 418560 <__bss_start@@Base+0x408>
  4060c8:	add    rcx,0x18
  4060cf:	xor    edx,edx
  4060d1:	mov    esi,edx
  4060d3:	sub    rsi,QWORD PTR [rbp-0x8]
  4060d7:	mov    QWORD PTR [rbp-0x20],rsi
  4060db:	mov    QWORD PTR [rbp-0x48],rcx
  4060df:	jmp    40610f <UnityPrintNumber@@Base+0xcf>
  4060e4:	mov    rax,QWORD PTR [rbp-0x40]
  4060e8:	lea    rcx,[rip+0x12471]        # 418560 <__bss_start@@Base+0x408>
  4060ef:	add    rcx,0x20
  4060f6:	mov    rdx,QWORD PTR [rax]
  4060f9:	add    rdx,0x1
  406100:	mov    QWORD PTR [rax],rdx
  406103:	mov    rax,QWORD PTR [rbp-0x8]
  406107:	mov    QWORD PTR [rbp-0x20],rax
  40610b:	mov    QWORD PTR [rbp-0x48],rcx
  40610f:	mov    rax,QWORD PTR [rbp-0x48]
  406113:	lea    rcx,[rip+0x12446]        # 418560 <__bss_start@@Base+0x408>
  40611a:	add    rcx,0x28
  406121:	mov    rdx,QWORD PTR [rax]
  406124:	add    rdx,0x1
  40612b:	mov    QWORD PTR [rax],rdx
  40612e:	mov    QWORD PTR [rbp-0x50],rcx
  406132:	mov    rax,QWORD PTR [rbp-0x50]
  406136:	lea    rcx,[rip+0x12423]        # 418560 <__bss_start@@Base+0x408>
  40613d:	mov    rdx,rcx
  406140:	add    rdx,0x30
  406147:	add    rcx,0x38
  40614e:	mov    rsi,QWORD PTR [rax]
  406151:	add    rsi,0x1
  406158:	mov    QWORD PTR [rax],rsi
  40615b:	mov    rax,QWORD PTR [rbp-0x20]
  40615f:	xor    edi,edi
  406161:	mov    QWORD PTR [rbp-0x58],rdx
  406165:	mov    edx,edi
  406167:	div    QWORD PTR [rbp-0x10]
  40616b:	cmp    rax,0x9
  40616f:	mov    rax,QWORD PTR [rbp-0x58]
  406173:	mov    QWORD PTR [rbp-0x60],rax
  406177:	mov    QWORD PTR [rbp-0x68],rcx
  40617b:	jbe    40624c <UnityPrintNumber@@Base+0x20c>
  406181:	mov    rax,QWORD PTR [rbp-0x60]
  406185:	lea    rcx,[rip+0x123d4]        # 418560 <__bss_start@@Base+0x408>
  40618c:	mov    rdx,rcx
  40618f:	add    rdx,0x40
  406196:	add    rcx,0x48
  40619d:	mov    rsi,QWORD PTR [rax]
  4061a0:	add    rsi,0x1
  4061a7:	mov    QWORD PTR [rax],rsi
  4061aa:	imul   rax,QWORD PTR [rbp-0x10],0xa
  4061b2:	mov    QWORD PTR [rbp-0x18],rax
  4061b6:	mov    rax,QWORD PTR [rbp-0x18]
  4061ba:	cmp    rax,QWORD PTR [rbp-0x10]
  4061be:	mov    QWORD PTR [rbp-0x70],rdx
  4061c2:	mov    QWORD PTR [rbp-0x78],rcx
  4061c6:	jbe    4061fc <UnityPrintNumber@@Base+0x1bc>
  4061cc:	mov    rax,QWORD PTR [rbp-0x70]
  4061d0:	lea    rcx,[rip+0x12389]        # 418560 <__bss_start@@Base+0x408>
  4061d7:	add    rcx,0x50
  4061de:	mov    rdx,QWORD PTR [rax]
  4061e1:	add    rdx,0x1
  4061e8:	mov    QWORD PTR [rax],rdx
  4061eb:	mov    rax,QWORD PTR [rbp-0x18]
  4061ef:	mov    QWORD PTR [rbp-0x10],rax
  4061f3:	mov    QWORD PTR [rbp-0x80],rcx
  4061f7:	jmp    406224 <UnityPrintNumber@@Base+0x1e4>
  4061fc:	mov    rax,QWORD PTR [rbp-0x78]
  406200:	lea    rcx,[rip+0x12359]        # 418560 <__bss_start@@Base+0x408>
  406207:	add    rcx,0x58
  40620e:	mov    rdx,QWORD PTR [rax]
  406211:	add    rdx,0x1
  406218:	mov    QWORD PTR [rax],rdx
  40621b:	mov    QWORD PTR [rbp-0x68],rcx
  40621f:	jmp    40624c <UnityPrintNumber@@Base+0x20c>
  406224:	mov    rax,QWORD PTR [rbp-0x80]
  406228:	lea    rcx,[rip+0x12331]        # 418560 <__bss_start@@Base+0x408>
  40622f:	add    rcx,0x60
  406236:	mov    rdx,QWORD PTR [rax]
  406239:	add    rdx,0x1
  406240:	mov    QWORD PTR [rax],rdx
  406243:	mov    QWORD PTR [rbp-0x50],rcx
  406247:	jmp    406132 <UnityPrintNumber@@Base+0xf2>
  40624c:	mov    rax,QWORD PTR [rbp-0x68]
  406250:	lea    rcx,[rip+0x12309]        # 418560 <__bss_start@@Base+0x408>
  406257:	add    rcx,0x68
  40625e:	mov    rdx,QWORD PTR [rax]
  406261:	add    rdx,0x1
  406268:	mov    QWORD PTR [rax],rdx
  40626b:	mov    QWORD PTR [rbp-0x88],rcx
  406272:	mov    rax,QWORD PTR [rbp-0x88]
  406279:	mov    rcx,QWORD PTR [rax]
  40627c:	add    rcx,0x1
  406283:	mov    QWORD PTR [rax],rcx
  406286:	mov    rax,QWORD PTR [rbp-0x20]
  40628a:	xor    edx,edx
  40628c:	div    QWORD PTR [rbp-0x10]
  406290:	xor    esi,esi
  406292:	mov    edx,esi
  406294:	mov    ecx,0xa
  406299:	div    rcx
  40629c:	add    rdx,0x30
  4062a3:	movsx  edi,dl
  4062a6:	call   403050 <putchar@plt>
  4062ab:	lea    rcx,[rip+0x122ae]        # 418560 <__bss_start@@Base+0x408>
  4062b2:	add    rcx,0x70
  4062b9:	mov    r8,QWORD PTR [rbp-0x10]
  4062bd:	mov    DWORD PTR [rbp-0x8c],eax
  4062c3:	mov    rax,r8
  4062c6:	xor    esi,esi
  4062c8:	mov    edx,esi
  4062ca:	mov    r8d,0xa
  4062d0:	div    r8
  4062d3:	mov    QWORD PTR [rbp-0x10],rax
  4062d7:	mov    QWORD PTR [rbp-0x98],rcx
  4062de:	mov    rax,QWORD PTR [rbp-0x98]
  4062e5:	lea    rcx,[rip+0x12274]        # 418560 <__bss_start@@Base+0x408>
  4062ec:	mov    rdx,rcx
  4062ef:	add    rdx,0x78
  4062f6:	add    rcx,0x80
  4062fd:	mov    rsi,QWORD PTR [rax]
  406300:	add    rsi,0x1
  406307:	mov    QWORD PTR [rax],rsi
  40630a:	cmp    QWORD PTR [rbp-0x10],0x0
  40630f:	mov    QWORD PTR [rbp-0x88],rdx
  406316:	mov    QWORD PTR [rbp-0xa0],rcx
  40631d:	ja     406272 <UnityPrintNumber@@Base+0x232>
  406323:	mov    rax,QWORD PTR [rbp-0xa0]
  40632a:	mov    rcx,QWORD PTR [rax]
  40632d:	add    rcx,0x1
  406334:	mov    QWORD PTR [rax],rcx
  406337:	mov    rax,QWORD PTR [rip+0x122aa]        # 4185e8 <__bss_start@@Base+0x490>
  40633e:	add    rax,0x1
  406344:	mov    QWORD PTR [rip+0x1229d],rax        # 4185e8 <__bss_start@@Base+0x490>
  40634b:	add    rsp,0xa0
  406352:	pop    rbp
  406353:	ret    
  406354:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40635e:	xchg   ax,ax

0000000000406360 <UnityPrintNumberUnsigned@@Base>:
  406360:	push   rbp
  406361:	mov    rbp,rsp
  406364:	sub    rsp,0x80
  40636b:	lea    rax,[rip+0x1227e]        # 4185f0 <__bss_start@@Base+0x498>
  406372:	mov    QWORD PTR [rbp-0x20],rdi
  406376:	mov    QWORD PTR [rbp-0x28],rax
  40637a:	mov    rax,QWORD PTR [rbp-0x28]
  40637e:	lea    rcx,[rip+0x1226b]        # 4185f0 <__bss_start@@Base+0x498>
  406385:	add    rcx,0x8
  40638c:	mov    rdx,QWORD PTR [rax]
  40638f:	add    rdx,0x1
  406396:	mov    QWORD PTR [rax],rdx
  406399:	mov    rax,QWORD PTR [rbp-0x20]
  40639d:	mov    QWORD PTR [rbp-0x8],rax
  4063a1:	mov    QWORD PTR [rbp-0x10],0x1
  4063a9:	mov    QWORD PTR [rbp-0x30],rcx
  4063ad:	mov    rax,QWORD PTR [rbp-0x30]
  4063b1:	lea    rcx,[rip+0x12238]        # 4185f0 <__bss_start@@Base+0x498>
  4063b8:	mov    rdx,rcx
  4063bb:	add    rdx,0x10
  4063c2:	add    rcx,0x18
  4063c9:	mov    rsi,QWORD PTR [rax]
  4063cc:	add    rsi,0x1
  4063d3:	mov    QWORD PTR [rax],rsi
  4063d6:	mov    rax,QWORD PTR [rbp-0x8]
  4063da:	xor    edi,edi
  4063dc:	mov    QWORD PTR [rbp-0x38],rdx
  4063e0:	mov    edx,edi
  4063e2:	div    QWORD PTR [rbp-0x10]
  4063e6:	cmp    rax,0x9
  4063ea:	mov    rax,QWORD PTR [rbp-0x38]
  4063ee:	mov    QWORD PTR [rbp-0x40],rax
  4063f2:	mov    QWORD PTR [rbp-0x48],rcx
  4063f6:	jbe    4064c7 <UnityPrintNumberUnsigned@@Base+0x167>
  4063fc:	mov    rax,QWORD PTR [rbp-0x40]
  406400:	lea    rcx,[rip+0x121e9]        # 4185f0 <__bss_start@@Base+0x498>
  406407:	mov    rdx,rcx
  40640a:	add    rdx,0x20
  406411:	add    rcx,0x28
  406418:	mov    rsi,QWORD PTR [rax]
  40641b:	add    rsi,0x1
  406422:	mov    QWORD PTR [rax],rsi
  406425:	imul   rax,QWORD PTR [rbp-0x10],0xa
  40642d:	mov    QWORD PTR [rbp-0x18],rax
  406431:	mov    rax,QWORD PTR [rbp-0x18]
  406435:	cmp    rax,QWORD PTR [rbp-0x10]
  406439:	mov    QWORD PTR [rbp-0x50],rdx
  40643d:	mov    QWORD PTR [rbp-0x58],rcx
  406441:	jbe    406477 <UnityPrintNumberUnsigned@@Base+0x117>
  406447:	mov    rax,QWORD PTR [rbp-0x50]
  40644b:	lea    rcx,[rip+0x1219e]        # 4185f0 <__bss_start@@Base+0x498>
  406452:	add    rcx,0x30
  406459:	mov    rdx,QWORD PTR [rax]
  40645c:	add    rdx,0x1
  406463:	mov    QWORD PTR [rax],rdx
  406466:	mov    rax,QWORD PTR [rbp-0x18]
  40646a:	mov    QWORD PTR [rbp-0x10],rax
  40646e:	mov    QWORD PTR [rbp-0x60],rcx
  406472:	jmp    40649f <UnityPrintNumberUnsigned@@Base+0x13f>
  406477:	mov    rax,QWORD PTR [rbp-0x58]
  40647b:	lea    rcx,[rip+0x1216e]        # 4185f0 <__bss_start@@Base+0x498>
  406482:	add    rcx,0x38
  406489:	mov    rdx,QWORD PTR [rax]
  40648c:	add    rdx,0x1
  406493:	mov    QWORD PTR [rax],rdx
  406496:	mov    QWORD PTR [rbp-0x48],rcx
  40649a:	jmp    4064c7 <UnityPrintNumberUnsigned@@Base+0x167>
  40649f:	mov    rax,QWORD PTR [rbp-0x60]
  4064a3:	lea    rcx,[rip+0x12146]        # 4185f0 <__bss_start@@Base+0x498>
  4064aa:	add    rcx,0x40
  4064b1:	mov    rdx,QWORD PTR [rax]
  4064b4:	add    rdx,0x1
  4064bb:	mov    QWORD PTR [rax],rdx
  4064be:	mov    QWORD PTR [rbp-0x30],rcx
  4064c2:	jmp    4063ad <UnityPrintNumberUnsigned@@Base+0x4d>
  4064c7:	mov    rax,QWORD PTR [rbp-0x48]
  4064cb:	lea    rcx,[rip+0x1211e]        # 4185f0 <__bss_start@@Base+0x498>
  4064d2:	add    rcx,0x48
  4064d9:	mov    rdx,QWORD PTR [rax]
  4064dc:	add    rdx,0x1
  4064e3:	mov    QWORD PTR [rax],rdx
  4064e6:	mov    QWORD PTR [rbp-0x68],rcx
  4064ea:	mov    rax,QWORD PTR [rbp-0x68]
  4064ee:	mov    rcx,QWORD PTR [rax]
  4064f1:	add    rcx,0x1
  4064f8:	mov    QWORD PTR [rax],rcx
  4064fb:	mov    rax,QWORD PTR [rbp-0x8]
  4064ff:	xor    edx,edx
  406501:	div    QWORD PTR [rbp-0x10]
  406505:	xor    esi,esi
  406507:	mov    edx,esi
  406509:	mov    ecx,0xa
  40650e:	div    rcx
  406511:	add    rdx,0x30
  406518:	movsx  edi,dl
  40651b:	call   403050 <putchar@plt>
  406520:	lea    rcx,[rip+0x120c9]        # 4185f0 <__bss_start@@Base+0x498>
  406527:	add    rcx,0x50
  40652e:	mov    r8,QWORD PTR [rbp-0x10]
  406532:	mov    DWORD PTR [rbp-0x6c],eax
  406535:	mov    rax,r8
  406538:	xor    esi,esi
  40653a:	mov    edx,esi
  40653c:	mov    r8d,0xa
  406542:	div    r8
  406545:	mov    QWORD PTR [rbp-0x10],rax
  406549:	mov    QWORD PTR [rbp-0x78],rcx
  40654d:	mov    rax,QWORD PTR [rbp-0x78]
  406551:	lea    rcx,[rip+0x12098]        # 4185f0 <__bss_start@@Base+0x498>
  406558:	mov    rdx,rcx
  40655b:	add    rdx,0x58
  406562:	add    rcx,0x60
  406569:	mov    rsi,QWORD PTR [rax]
  40656c:	add    rsi,0x1
  406573:	mov    QWORD PTR [rax],rsi
  406576:	cmp    QWORD PTR [rbp-0x10],0x0
  40657b:	mov    QWORD PTR [rbp-0x68],rdx
  40657f:	mov    QWORD PTR [rbp-0x80],rcx
  406583:	ja     4064ea <UnityPrintNumberUnsigned@@Base+0x18a>
  406589:	mov    rax,QWORD PTR [rbp-0x80]
  40658d:	mov    rcx,QWORD PTR [rax]
  406590:	add    rcx,0x1
  406597:	mov    QWORD PTR [rax],rcx
  40659a:	mov    rax,QWORD PTR [rip+0x120b7]        # 418658 <__bss_start@@Base+0x500>
  4065a1:	add    rax,0x1
  4065a7:	mov    QWORD PTR [rip+0x120aa],rax        # 418658 <__bss_start@@Base+0x500>
  4065ae:	add    rsp,0x80
  4065b5:	pop    rbp
  4065b6:	ret    
  4065b7:	nop    WORD PTR [rax+rax*1+0x0]

00000000004065c0 <UnityPrintMask@@Base>:
  4065c0:	push   rbp
  4065c1:	mov    rbp,rsp
  4065c4:	sub    rsp,0x90
  4065cb:	lea    rax,[rip+0x1208e]        # 418660 <__bss_start@@Base+0x508>
  4065d2:	mov    QWORD PTR [rbp-0x28],rdi
  4065d6:	mov    QWORD PTR [rbp-0x30],rsi
  4065da:	mov    QWORD PTR [rbp-0x38],rax
  4065de:	mov    rax,QWORD PTR [rbp-0x38]
  4065e2:	lea    rcx,[rip+0x12077]        # 418660 <__bss_start@@Base+0x508>
  4065e9:	add    rcx,0x8
  4065f0:	mov    rdx,QWORD PTR [rax]
  4065f3:	add    rdx,0x1
  4065fa:	mov    QWORD PTR [rax],rdx
  4065fd:	mov    rax,QWORD PTR [rbp-0x28]
  406601:	mov    QWORD PTR [rbp-0x8],rax
  406605:	mov    rdx,QWORD PTR [rbp-0x30]
  406609:	mov    QWORD PTR [rbp-0x10],rdx
  40660d:	mov    esi,0x80000000
  406612:	mov    QWORD PTR [rbp-0x18],rsi
  406616:	mov    DWORD PTR [rbp-0x1c],0x0
  40661d:	mov    QWORD PTR [rbp-0x40],rcx
  406621:	mov    rax,QWORD PTR [rbp-0x40]
  406625:	lea    rcx,[rip+0x12034]        # 418660 <__bss_start@@Base+0x508>
  40662c:	mov    rdx,rcx
  40662f:	add    rdx,0x10
  406636:	add    rcx,0x18
  40663d:	mov    rsi,QWORD PTR [rax]
  406640:	add    rsi,0x1
  406647:	mov    QWORD PTR [rax],rsi
  40664a:	cmp    DWORD PTR [rbp-0x1c],0x20
  40664e:	mov    QWORD PTR [rbp-0x48],rdx
  406652:	mov    QWORD PTR [rbp-0x50],rcx
  406656:	jge    4067fc <UnityPrintMask@@Base+0x23c>
  40665c:	mov    rax,QWORD PTR [rbp-0x48]
  406660:	lea    rcx,[rip+0x11ff9]        # 418660 <__bss_start@@Base+0x508>
  406667:	mov    rdx,rcx
  40666a:	add    rdx,0x20
  406671:	add    rcx,0x28
  406678:	mov    rsi,QWORD PTR [rax]
  40667b:	add    rsi,0x1
  406682:	mov    QWORD PTR [rax],rsi
  406685:	mov    rax,QWORD PTR [rbp-0x18]
  406689:	and    rax,QWORD PTR [rbp-0x8]
  40668d:	cmp    rax,0x0
  406691:	mov    QWORD PTR [rbp-0x58],rdx
  406695:	mov    QWORD PTR [rbp-0x60],rcx
  406699:	je     406769 <UnityPrintMask@@Base+0x1a9>
  40669f:	mov    rax,QWORD PTR [rbp-0x58]
  4066a3:	lea    rcx,[rip+0x11fb6]        # 418660 <__bss_start@@Base+0x508>
  4066aa:	mov    rdx,rcx
  4066ad:	add    rdx,0x30
  4066b4:	add    rcx,0x38
  4066bb:	mov    rsi,QWORD PTR [rax]
  4066be:	add    rsi,0x1
  4066c5:	mov    QWORD PTR [rax],rsi
  4066c8:	mov    rax,QWORD PTR [rbp-0x18]
  4066cc:	and    rax,QWORD PTR [rbp-0x10]
  4066d0:	cmp    rax,0x0
  4066d4:	mov    QWORD PTR [rbp-0x68],rdx
  4066d8:	mov    QWORD PTR [rbp-0x70],rcx
  4066dc:	je     406714 <UnityPrintMask@@Base+0x154>
  4066e2:	mov    rax,QWORD PTR [rbp-0x68]
  4066e6:	mov    rcx,QWORD PTR [rax]
  4066e9:	add    rcx,0x1
  4066f0:	mov    QWORD PTR [rax],rcx
  4066f3:	mov    edi,0x31
  4066f8:	call   403050 <putchar@plt>
  4066fd:	lea    rcx,[rip+0x11f5c]        # 418660 <__bss_start@@Base+0x508>
  406704:	add    rcx,0x40
  40670b:	mov    QWORD PTR [rbp-0x78],rcx
  40670f:	jmp    406741 <UnityPrintMask@@Base+0x181>
  406714:	mov    rax,QWORD PTR [rbp-0x70]
  406718:	mov    rcx,QWORD PTR [rax]
  40671b:	add    rcx,0x1
  406722:	mov    QWORD PTR [rax],rcx
  406725:	mov    edi,0x30
  40672a:	call   403050 <putchar@plt>
  40672f:	lea    rcx,[rip+0x11f2a]        # 418660 <__bss_start@@Base+0x508>
  406736:	add    rcx,0x48
  40673d:	mov    QWORD PTR [rbp-0x78],rcx
  406741:	mov    rax,QWORD PTR [rbp-0x78]
  406745:	lea    rcx,[rip+0x11f14]        # 418660 <__bss_start@@Base+0x508>
  40674c:	add    rcx,0x50
  406753:	mov    rdx,QWORD PTR [rax]
  406756:	add    rdx,0x1
  40675d:	mov    QWORD PTR [rax],rdx
  406760:	mov    QWORD PTR [rbp-0x80],rcx
  406764:	jmp    406796 <UnityPrintMask@@Base+0x1d6>
  406769:	mov    rax,QWORD PTR [rbp-0x60]
  40676d:	mov    rcx,QWORD PTR [rax]
  406770:	add    rcx,0x1
  406777:	mov    QWORD PTR [rax],rcx
  40677a:	mov    edi,0x58
  40677f:	call   403050 <putchar@plt>
  406784:	lea    rcx,[rip+0x11ed5]        # 418660 <__bss_start@@Base+0x508>
  40678b:	add    rcx,0x58
  406792:	mov    QWORD PTR [rbp-0x80],rcx
  406796:	mov    rax,QWORD PTR [rbp-0x80]
  40679a:	lea    rcx,[rip+0x11ebf]        # 418660 <__bss_start@@Base+0x508>
  4067a1:	add    rcx,0x60
  4067a8:	mov    rdx,QWORD PTR [rax]
  4067ab:	add    rdx,0x1
  4067b2:	mov    QWORD PTR [rax],rdx
  4067b5:	mov    rax,QWORD PTR [rbp-0x18]
  4067b9:	shr    rax,0x1
  4067bd:	mov    QWORD PTR [rbp-0x18],rax
  4067c1:	mov    QWORD PTR [rbp-0x88],rcx
  4067c8:	mov    rax,QWORD PTR [rbp-0x88]
  4067cf:	lea    rcx,[rip+0x11e8a]        # 418660 <__bss_start@@Base+0x508>
  4067d6:	add    rcx,0x68
  4067dd:	mov    rdx,QWORD PTR [rax]
  4067e0:	add    rdx,0x1
  4067e7:	mov    QWORD PTR [rax],rdx
  4067ea:	mov    esi,DWORD PTR [rbp-0x1c]
  4067ed:	add    esi,0x1
  4067f0:	mov    DWORD PTR [rbp-0x1c],esi
  4067f3:	mov    QWORD PTR [rbp-0x40],rcx
  4067f7:	jmp    406621 <UnityPrintMask@@Base+0x61>
  4067fc:	mov    rax,QWORD PTR [rbp-0x50]
  406800:	mov    rcx,QWORD PTR [rax]
  406803:	add    rcx,0x1
  40680a:	mov    QWORD PTR [rax],rcx
  40680d:	mov    rax,QWORD PTR [rip+0x11ebc]        # 4186d0 <__bss_start@@Base+0x578>
  406814:	add    rax,0x1
  40681a:	mov    QWORD PTR [rip+0x11eaf],rax        # 4186d0 <__bss_start@@Base+0x578>
  406821:	add    rsp,0x90
  406828:	pop    rbp
  406829:	ret    
  40682a:	nop    WORD PTR [rax+rax*1+0x0]

0000000000406830 <UnityPrintFail@@Base>:
  406830:	push   rbp
  406831:	mov    rbp,rsp
  406834:	sub    rsp,0x10
  406838:	lea    rax,[rip+0x11e99]        # 4186d8 <__bss_start@@Base+0x580>
  40683f:	mov    QWORD PTR [rbp-0x8],rax
  406843:	jmp    406848 <UnityPrintFail@@Base+0x18>
  406848:	mov    rax,QWORD PTR [rbp-0x8]
  40684c:	lea    rdi,[rip+0xcb95]        # 4133e8 <UnityStrFail@@Base>
  406853:	mov    rcx,QWORD PTR [rax]
  406856:	add    rcx,0x1
  40685d:	mov    QWORD PTR [rax],rcx
  406860:	mov    rax,QWORD PTR [rip+0x11e79]        # 4186e0 <__bss_start@@Base+0x588>
  406867:	add    rax,0x1
  40686d:	mov    QWORD PTR [rip+0x11e6c],rax        # 4186e0 <__bss_start@@Base+0x588>
  406874:	call   405480 <UnityPrint@@Base>
  406879:	add    rsp,0x10
  40687d:	pop    rbp
  40687e:	ret    
  40687f:	nop

0000000000406880 <UnityPrintOk@@Base>:
  406880:	push   rbp
  406881:	mov    rbp,rsp
  406884:	sub    rsp,0x10
  406888:	lea    rax,[rip+0x11e59]        # 4186e8 <__bss_start@@Base+0x590>
  40688f:	mov    QWORD PTR [rbp-0x8],rax
  406893:	jmp    406898 <UnityPrintOk@@Base+0x18>
  406898:	mov    rax,QWORD PTR [rbp-0x8]
  40689c:	lea    rdi,[rip+0xcb3d]        # 4133e0 <UnityStrOk@@Base>
  4068a3:	mov    rcx,QWORD PTR [rax]
  4068a6:	add    rcx,0x1
  4068ad:	mov    QWORD PTR [rax],rcx
  4068b0:	mov    rax,QWORD PTR [rip+0x11e39]        # 4186f0 <__bss_start@@Base+0x598>
  4068b7:	add    rax,0x1
  4068bd:	mov    QWORD PTR [rip+0x11e2c],rax        # 4186f0 <__bss_start@@Base+0x598>
  4068c4:	call   405480 <UnityPrint@@Base>
  4068c9:	add    rsp,0x10
  4068cd:	pop    rbp
  4068ce:	ret    
  4068cf:	nop

00000000004068d0 <UnityConcludeTest@@Base>:
  4068d0:	push   rbp
  4068d1:	mov    rbp,rsp
  4068d4:	sub    rsp,0x40
  4068d8:	lea    rax,[rip+0x11e21]        # 418700 <__bss_start@@Base+0x5a8>
  4068df:	mov    QWORD PTR [rbp-0x8],rax
  4068e3:	jmp    4068e8 <UnityConcludeTest@@Base+0x18>
  4068e8:	mov    rax,QWORD PTR [rbp-0x8]
  4068ec:	lea    rcx,[rip+0x11e0d]        # 418700 <__bss_start@@Base+0x5a8>
  4068f3:	mov    rdx,rcx
  4068f6:	add    rdx,0x8
  4068fd:	add    rcx,0x10
  406904:	lea    rsi,[rip+0x131f5]        # 419b00 <Unity@@Base>
  40690b:	mov    rdi,QWORD PTR [rax]
  40690e:	add    rdi,0x1
  406915:	mov    QWORD PTR [rax],rdi
  406918:	cmp    QWORD PTR [rsi+0x48],0x0
  40691d:	mov    QWORD PTR [rbp-0x10],rdx
  406921:	mov    QWORD PTR [rbp-0x18],rcx
  406925:	je     406968 <UnityConcludeTest@@Base+0x98>
  40692b:	mov    rax,QWORD PTR [rbp-0x10]
  40692f:	lea    rcx,[rip+0x11dca]        # 418700 <__bss_start@@Base+0x5a8>
  406936:	add    rcx,0x18
  40693d:	lea    rdx,[rip+0x131bc]        # 419b00 <Unity@@Base>
  406944:	mov    rsi,QWORD PTR [rax]
  406947:	add    rsi,0x1
  40694e:	mov    QWORD PTR [rax],rsi
  406951:	mov    rax,QWORD PTR [rdx+0x38]
  406955:	add    rax,0x1
  40695b:	mov    QWORD PTR [rdx+0x38],rax
  40695f:	mov    QWORD PTR [rbp-0x20],rcx
  406963:	jmp    406a4c <UnityConcludeTest@@Base+0x17c>
  406968:	mov    rax,QWORD PTR [rbp-0x18]
  40696c:	lea    rcx,[rip+0x11d8d]        # 418700 <__bss_start@@Base+0x5a8>
  406973:	mov    rdx,rcx
  406976:	add    rdx,0x20
  40697d:	add    rcx,0x28
  406984:	lea    rsi,[rip+0x13175]        # 419b00 <Unity@@Base>
  40698b:	mov    rdi,QWORD PTR [rax]
  40698e:	add    rdi,0x1
  406995:	mov    QWORD PTR [rax],rdi
  406998:	cmp    QWORD PTR [rsi+0x40],0x0
  40699d:	mov    QWORD PTR [rbp-0x28],rcx
  4069a1:	mov    QWORD PTR [rbp-0x30],rdx
  4069a5:	jne    4069f1 <UnityConcludeTest@@Base+0x121>
  4069ab:	mov    rax,QWORD PTR [rbp-0x28]
  4069af:	lea    rcx,[rip+0x1314a]        # 419b00 <Unity@@Base>
  4069b6:	mov    rdx,QWORD PTR [rax]
  4069b9:	add    rdx,0x1
  4069c0:	mov    QWORD PTR [rax],rdx
  4069c3:	mov    rdi,QWORD PTR [rcx]
  4069c6:	mov    rsi,QWORD PTR [rcx+0x20]
  4069ca:	call   406aa0 <UnityConcludeTest@@Base+0x1d0>
  4069cf:	lea    rdi,[rip+0xca0d]        # 4133e3 <UnityStrPass@@Base>
  4069d6:	call   405480 <UnityPrint@@Base>
  4069db:	lea    rax,[rip+0x11d1e]        # 418700 <__bss_start@@Base+0x5a8>
  4069e2:	add    rax,0x30
  4069e8:	mov    QWORD PTR [rbp-0x38],rax
  4069ec:	jmp    406a29 <UnityConcludeTest@@Base+0x159>
  4069f1:	mov    rax,QWORD PTR [rbp-0x30]
  4069f5:	lea    rcx,[rip+0x11d04]        # 418700 <__bss_start@@Base+0x5a8>
  4069fc:	add    rcx,0x38
  406a03:	lea    rdx,[rip+0x130f6]        # 419b00 <Unity@@Base>
  406a0a:	mov    rsi,QWORD PTR [rax]
  406a0d:	add    rsi,0x1
  406a14:	mov    QWORD PTR [rax],rsi
  406a17:	mov    rax,QWORD PTR [rdx+0x30]
  406a1b:	add    rax,0x1
  406a21:	mov    QWORD PTR [rdx+0x30],rax
  406a25:	mov    QWORD PTR [rbp-0x38],rcx
  406a29:	mov    rax,QWORD PTR [rbp-0x38]
  406a2d:	lea    rcx,[rip+0x11ccc]        # 418700 <__bss_start@@Base+0x5a8>
  406a34:	add    rcx,0x40
  406a3b:	mov    rdx,QWORD PTR [rax]
  406a3e:	add    rdx,0x1
  406a45:	mov    QWORD PTR [rax],rdx
  406a48:	mov    QWORD PTR [rbp-0x20],rcx
  406a4c:	mov    rax,QWORD PTR [rbp-0x20]
  406a50:	lea    rcx,[rip+0x130a9]        # 419b00 <Unity@@Base>
  406a57:	mov    rdx,QWORD PTR [rax]
  406a5a:	add    rdx,0x1
  406a61:	mov    QWORD PTR [rax],rdx
  406a64:	mov    rax,QWORD PTR [rip+0x11cdd]        # 418748 <__bss_start@@Base+0x5f0>
  406a6b:	add    rax,0x1
  406a71:	mov    QWORD PTR [rip+0x11cd0],rax        # 418748 <__bss_start@@Base+0x5f0>
  406a78:	mov    QWORD PTR [rcx+0x40],0x0
  406a80:	mov    QWORD PTR [rcx+0x48],0x0
  406a88:	mov    edi,0xa
  406a8d:	call   403050 <putchar@plt>
  406a92:	add    rsp,0x40
  406a96:	pop    rbp
  406a97:	ret    
  406a98:	nop    DWORD PTR [rax+rax*1+0x0]
  406aa0:	push   rbp
  406aa1:	mov    rbp,rsp
  406aa4:	sub    rsp,0x30
  406aa8:	lea    rax,[rip+0x11ca1]        # 418750 <__bss_start@@Base+0x5f8>
  406aaf:	mov    QWORD PTR [rbp-0x18],rdi
  406ab3:	mov    QWORD PTR [rbp-0x20],rsi
  406ab7:	mov    QWORD PTR [rbp-0x28],rax
  406abb:	mov    rax,QWORD PTR [rbp-0x28]
  406abf:	mov    rcx,QWORD PTR [rax]
  406ac2:	add    rcx,0x1
  406ac9:	mov    QWORD PTR [rax],rcx
  406acc:	mov    rax,QWORD PTR [rip+0x11c85]        # 418758 <__bss_start@@Base+0x600>
  406ad3:	add    rax,0x1
  406ad9:	mov    QWORD PTR [rip+0x11c78],rax        # 418758 <__bss_start@@Base+0x600>
  406ae0:	mov    rax,QWORD PTR [rbp-0x18]
  406ae4:	mov    QWORD PTR [rbp-0x8],rax
  406ae8:	mov    rcx,QWORD PTR [rbp-0x20]
  406aec:	mov    QWORD PTR [rbp-0x10],rcx
  406af0:	mov    rdi,QWORD PTR [rbp-0x8]
  406af4:	call   405480 <UnityPrint@@Base>
  406af9:	mov    edi,0x3a
  406afe:	call   403050 <putchar@plt>
  406b03:	mov    rdi,QWORD PTR [rbp-0x10]
  406b07:	mov    DWORD PTR [rbp-0x2c],eax
  406b0a:	call   406040 <UnityPrintNumber@@Base>
  406b0f:	mov    edi,0x3a
  406b14:	call   403050 <putchar@plt>
  406b19:	lea    rcx,[rip+0x12fe0]        # 419b00 <Unity@@Base>
  406b20:	mov    rdi,QWORD PTR [rcx+0x8]
  406b24:	mov    DWORD PTR [rbp-0x30],eax
  406b27:	call   405480 <UnityPrint@@Base>
  406b2c:	mov    edi,0x3a
  406b31:	call   403050 <putchar@plt>
  406b36:	add    rsp,0x30
  406b3a:	pop    rbp
  406b3b:	ret    
  406b3c:	nop    DWORD PTR [rax+0x0]

0000000000406b40 <UnityAssertBits@@Base>:
  406b40:	push   rbp
  406b41:	mov    rbp,rsp
  406b44:	sub    rsp,0x80
  406b4b:	lea    rax,[rip+0x11c0e]        # 418760 <__bss_start@@Base+0x608>
  406b52:	mov    QWORD PTR [rbp-0x30],rdi
  406b56:	mov    QWORD PTR [rbp-0x38],rsi
  406b5a:	mov    QWORD PTR [rbp-0x40],rdx
  406b5e:	mov    QWORD PTR [rbp-0x48],rcx
  406b62:	mov    QWORD PTR [rbp-0x50],r8
  406b66:	mov    QWORD PTR [rbp-0x58],rax
  406b6a:	mov    rax,QWORD PTR [rbp-0x58]
  406b6e:	lea    rcx,[rip+0x11beb]        # 418760 <__bss_start@@Base+0x608>
  406b75:	mov    rdx,rcx
  406b78:	add    rdx,0x8
  406b7f:	add    rcx,0x10
  406b86:	lea    rsi,[rip+0x12f73]        # 419b00 <Unity@@Base>
  406b8d:	mov    rdi,QWORD PTR [rax]
  406b90:	add    rdi,0x1
  406b97:	mov    QWORD PTR [rax],rdi
  406b9a:	mov    rax,QWORD PTR [rbp-0x30]
  406b9e:	mov    QWORD PTR [rbp-0x8],rax
  406ba2:	mov    rdi,QWORD PTR [rbp-0x38]
  406ba6:	mov    QWORD PTR [rbp-0x10],rdi
  406baa:	mov    r8,QWORD PTR [rbp-0x40]
  406bae:	mov    QWORD PTR [rbp-0x18],r8
  406bb2:	mov    r9,QWORD PTR [rbp-0x48]
  406bb6:	mov    QWORD PTR [rbp-0x20],r9
  406bba:	mov    r10,QWORD PTR [rbp-0x50]
  406bbe:	mov    QWORD PTR [rbp-0x28],r10
  406bc2:	cmp    QWORD PTR [rsi+0x40],0x0
  406bc7:	mov    QWORD PTR [rbp-0x60],rcx
  406bcb:	mov    QWORD PTR [rbp-0x68],rdx
  406bcf:	jne    406c18 <UnityAssertBits@@Base+0xd8>
  406bd5:	mov    rax,QWORD PTR [rbp-0x60]
  406bd9:	lea    rcx,[rip+0x11b80]        # 418760 <__bss_start@@Base+0x608>
  406be0:	mov    rdx,rcx
  406be3:	add    rdx,0x18
  406bea:	add    rcx,0x20
  406bf1:	lea    rsi,[rip+0x12f08]        # 419b00 <Unity@@Base>
  406bf8:	mov    rdi,QWORD PTR [rax]
  406bfb:	add    rdi,0x1
  406c02:	mov    QWORD PTR [rax],rdi
  406c05:	cmp    QWORD PTR [rsi+0x48],0x0
  406c0a:	mov    QWORD PTR [rbp-0x68],rdx
  406c0e:	mov    QWORD PTR [rbp-0x70],rcx
  406c12:	je     406c40 <UnityAssertBits@@Base+0x100>
  406c18:	mov    rax,QWORD PTR [rbp-0x68]
  406c1c:	lea    rcx,[rip+0x11b3d]        # 418760 <__bss_start@@Base+0x608>
  406c23:	add    rcx,0x28
  406c2a:	mov    rdx,QWORD PTR [rax]
  406c2d:	add    rdx,0x1
  406c34:	mov    QWORD PTR [rax],rdx
  406c37:	mov    QWORD PTR [rbp-0x78],rcx
  406c3b:	jmp    406d05 <UnityAssertBits@@Base+0x1c5>
  406c40:	mov    rax,QWORD PTR [rbp-0x70]
  406c44:	lea    rcx,[rip+0x11b15]        # 418760 <__bss_start@@Base+0x608>
  406c4b:	mov    rdx,rcx
  406c4e:	add    rdx,0x30
  406c55:	add    rcx,0x38
  406c5c:	mov    rsi,QWORD PTR [rax]
  406c5f:	add    rsi,0x1
  406c66:	mov    QWORD PTR [rax],rsi
  406c69:	mov    rax,QWORD PTR [rbp-0x8]
  406c6d:	and    rax,QWORD PTR [rbp-0x10]
  406c71:	mov    rsi,QWORD PTR [rbp-0x8]
  406c75:	and    rsi,QWORD PTR [rbp-0x18]
  406c79:	cmp    rax,rsi
  406c7c:	mov    QWORD PTR [rbp-0x80],rdx
  406c80:	mov    QWORD PTR [rbp-0x78],rcx
  406c84:	je     406d05 <UnityAssertBits@@Base+0x1c5>
  406c8a:	mov    rax,QWORD PTR [rbp-0x80]
  406c8e:	mov    rcx,QWORD PTR [rax]
  406c91:	add    rcx,0x1
  406c98:	mov    QWORD PTR [rax],rcx
  406c9b:	mov    rdi,QWORD PTR [rbp-0x28]
  406c9f:	call   406d40 <UnityAssertBits@@Base+0x200>
  406ca4:	lea    rdi,[rip+0xc751]        # 4133fc <UnityStrExpected@@Base>
  406cab:	call   405480 <UnityPrint@@Base>
  406cb0:	mov    rdi,QWORD PTR [rbp-0x8]
  406cb4:	mov    rsi,QWORD PTR [rbp-0x10]
  406cb8:	call   4065c0 <UnityPrintMask@@Base>
  406cbd:	lea    rdi,[rip+0xc743]        # 413407 <UnityStrWas@@Base>
  406cc4:	call   405480 <UnityPrint@@Base>
  406cc9:	mov    rdi,QWORD PTR [rbp-0x8]
  406ccd:	mov    rsi,QWORD PTR [rbp-0x18]
  406cd1:	call   4065c0 <UnityPrintMask@@Base>
  406cd6:	mov    rdi,QWORD PTR [rbp-0x20]
  406cda:	call   406dc0 <UnityAssertBits@@Base+0x280>
  406cdf:	lea    rax,[rip+0x12e1a]        # 419b00 <Unity@@Base>
  406ce6:	mov    rcx,rax
  406ce9:	add    rcx,0x50
  406cf0:	mov    QWORD PTR [rax+0x40],0x1
  406cf8:	mov    rdi,rcx
  406cfb:	mov    esi,0x1
  406d00:	call   403200 <longjmp@plt>
  406d05:	mov    rax,QWORD PTR [rbp-0x78]
  406d09:	mov    rcx,QWORD PTR [rax]
  406d0c:	add    rcx,0x1
  406d13:	mov    QWORD PTR [rax],rcx
  406d16:	mov    rax,QWORD PTR [rip+0x11a83]        # 4187a0 <__bss_start@@Base+0x648>
  406d1d:	add    rax,0x1
  406d23:	mov    QWORD PTR [rip+0x11a76],rax        # 4187a0 <__bss_start@@Base+0x648>
  406d2a:	add    rsp,0x80
  406d31:	pop    rbp
  406d32:	ret    
  406d33:	nop    WORD PTR cs:[rax+rax*1+0x0]
  406d3d:	nop    DWORD PTR [rax]
  406d40:	push   rbp
  406d41:	mov    rbp,rsp
  406d44:	sub    rsp,0x20
  406d48:	lea    rax,[rip+0x11a59]        # 4187a8 <__bss_start@@Base+0x650>
  406d4f:	mov    QWORD PTR [rbp-0x10],rdi
  406d53:	mov    QWORD PTR [rbp-0x18],rax
  406d57:	mov    rax,QWORD PTR [rbp-0x18]
  406d5b:	lea    rcx,[rip+0x12d9e]        # 419b00 <Unity@@Base>
  406d62:	mov    rdx,QWORD PTR [rax]
  406d65:	add    rdx,0x1
  406d6c:	mov    QWORD PTR [rax],rdx
  406d6f:	mov    rax,QWORD PTR [rip+0x11a3a]        # 4187b0 <__bss_start@@Base+0x658>
  406d76:	add    rax,0x1
  406d7c:	mov    QWORD PTR [rip+0x11a2d],rax        # 4187b0 <__bss_start@@Base+0x658>
  406d83:	mov    rax,QWORD PTR [rbp-0x10]
  406d87:	mov    QWORD PTR [rbp-0x8],rax
  406d8b:	mov    rdi,QWORD PTR [rcx]
  406d8e:	mov    rsi,QWORD PTR [rbp-0x8]
  406d92:	call   406aa0 <UnityConcludeTest@@Base+0x1d0>
  406d97:	lea    rdi,[rip+0xc64a]        # 4133e8 <UnityStrFail@@Base>
  406d9e:	call   405480 <UnityPrint@@Base>
  406da3:	mov    edi,0x3a
  406da8:	call   403050 <putchar@plt>
  406dad:	add    rsp,0x20
  406db1:	pop    rbp
  406db2:	ret    
  406db3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  406dbd:	nop    DWORD PTR [rax]
  406dc0:	push   rbp
  406dc1:	mov    rbp,rsp
  406dc4:	sub    rsp,0x50
  406dc8:	lea    rax,[rip+0x119f1]        # 4187c0 <__bss_start@@Base+0x668>
  406dcf:	mov    QWORD PTR [rbp-0x10],rdi
  406dd3:	mov    QWORD PTR [rbp-0x18],rax
  406dd7:	mov    rax,QWORD PTR [rbp-0x18]
  406ddb:	lea    rcx,[rip+0x119de]        # 4187c0 <__bss_start@@Base+0x668>
  406de2:	mov    rdx,rcx
  406de5:	add    rdx,0x8
  406dec:	add    rcx,0x10
  406df3:	mov    rsi,QWORD PTR [rax]
  406df6:	add    rsi,0x1
  406dfd:	mov    QWORD PTR [rax],rsi
  406e00:	mov    rax,QWORD PTR [rbp-0x10]
  406e04:	mov    QWORD PTR [rbp-0x8],rax
  406e08:	cmp    QWORD PTR [rbp-0x8],0x0
  406e0d:	mov    QWORD PTR [rbp-0x20],rdx
  406e11:	mov    QWORD PTR [rbp-0x28],rcx
  406e15:	je     406f5e <UnityAssertBits@@Base+0x41e>
  406e1b:	mov    rax,QWORD PTR [rbp-0x20]
  406e1f:	lea    rdi,[rip+0xc5d3]        # 4133f9 <UnityStrSpacer@@Base>
  406e26:	mov    rcx,QWORD PTR [rax]
  406e29:	add    rcx,0x1
  406e30:	mov    QWORD PTR [rax],rcx
  406e33:	call   405480 <UnityPrint@@Base>
  406e38:	lea    rax,[rip+0x11981]        # 4187c0 <__bss_start@@Base+0x668>
  406e3f:	mov    rcx,rax
  406e42:	add    rcx,0x18
  406e49:	add    rax,0x20
  406e4f:	lea    rdx,[rip+0x12caa]        # 419b00 <Unity@@Base>
  406e56:	cmp    QWORD PTR [rdx+0x10],0x0
  406e5b:	mov    QWORD PTR [rbp-0x30],rcx
  406e5f:	mov    QWORD PTR [rbp-0x38],rax
  406e63:	je     406f33 <UnityAssertBits@@Base+0x3f3>
  406e69:	mov    rax,QWORD PTR [rbp-0x30]
  406e6d:	lea    rdi,[rip+0xc771]        # 4135e5 <UnityStrDetail1Name@@Base>
  406e74:	mov    rcx,QWORD PTR [rax]
  406e77:	add    rcx,0x1
  406e7e:	mov    QWORD PTR [rax],rcx
  406e81:	call   405480 <UnityPrint@@Base>
  406e86:	lea    rax,[rip+0x12c73]        # 419b00 <Unity@@Base>
  406e8d:	mov    rdi,QWORD PTR [rax+0x10]
  406e91:	call   405480 <UnityPrint@@Base>
  406e96:	lea    rax,[rip+0x11923]        # 4187c0 <__bss_start@@Base+0x668>
  406e9d:	mov    rcx,rax
  406ea0:	add    rcx,0x28
  406ea7:	add    rax,0x30
  406ead:	lea    rdx,[rip+0x12c4c]        # 419b00 <Unity@@Base>
  406eb4:	cmp    QWORD PTR [rdx+0x18],0x0
  406eb9:	mov    QWORD PTR [rbp-0x40],rcx
  406ebd:	mov    QWORD PTR [rbp-0x48],rax
  406ec1:	je     406f05 <UnityAssertBits@@Base+0x3c5>
  406ec7:	mov    rax,QWORD PTR [rbp-0x40]
  406ecb:	lea    rdi,[rip+0xc71d]        # 4135ef <UnityStrDetail2Name@@Base>
  406ed2:	mov    rcx,QWORD PTR [rax]
  406ed5:	add    rcx,0x1
  406edc:	mov    QWORD PTR [rax],rcx
  406edf:	call   405480 <UnityPrint@@Base>
  406ee4:	lea    rax,[rip+0x12c15]        # 419b00 <Unity@@Base>
  406eeb:	mov    rdi,QWORD PTR [rax+0x18]
  406eef:	call   405480 <UnityPrint@@Base>
  406ef4:	lea    rax,[rip+0x118c5]        # 4187c0 <__bss_start@@Base+0x668>
  406efb:	add    rax,0x38
  406f01:	mov    QWORD PTR [rbp-0x48],rax
  406f05:	mov    rax,QWORD PTR [rbp-0x48]
  406f09:	lea    rdi,[rip+0xc4e9]        # 4133f9 <UnityStrSpacer@@Base>
  406f10:	mov    rcx,QWORD PTR [rax]
  406f13:	add    rcx,0x1
  406f1a:	mov    QWORD PTR [rax],rcx
  406f1d:	call   405480 <UnityPrint@@Base>
  406f22:	lea    rax,[rip+0x11897]        # 4187c0 <__bss_start@@Base+0x668>
  406f29:	add    rax,0x40
  406f2f:	mov    QWORD PTR [rbp-0x38],rax
  406f33:	mov    rax,QWORD PTR [rbp-0x38]
  406f37:	mov    rcx,QWORD PTR [rax]
  406f3a:	add    rcx,0x1
  406f41:	mov    QWORD PTR [rax],rcx
  406f44:	mov    rdi,QWORD PTR [rbp-0x8]
  406f48:	call   405480 <UnityPrint@@Base>
  406f4d:	lea    rax,[rip+0x1186c]        # 4187c0 <__bss_start@@Base+0x668>
  406f54:	add    rax,0x48
  406f5a:	mov    QWORD PTR [rbp-0x28],rax
  406f5e:	mov    rax,QWORD PTR [rbp-0x28]
  406f62:	mov    rcx,QWORD PTR [rax]
  406f65:	add    rcx,0x1
  406f6c:	mov    QWORD PTR [rax],rcx
  406f6f:	mov    rax,QWORD PTR [rip+0x1189a]        # 418810 <__bss_start@@Base+0x6b8>
  406f76:	add    rax,0x1
  406f7c:	mov    QWORD PTR [rip+0x1188d],rax        # 418810 <__bss_start@@Base+0x6b8>
  406f83:	add    rsp,0x50
  406f87:	pop    rbp
  406f88:	ret    
  406f89:	nop    DWORD PTR [rax+0x0]

0000000000406f90 <UnityAssertEqualNumber@@Base>:
  406f90:	push   rbp
  406f91:	mov    rbp,rsp
  406f94:	sub    rsp,0x80
  406f9b:	lea    rax,[rip+0x1187e]        # 418820 <__bss_start@@Base+0x6c8>
  406fa2:	mov    QWORD PTR [rbp-0x30],rdi
  406fa6:	mov    QWORD PTR [rbp-0x38],rsi
  406faa:	mov    QWORD PTR [rbp-0x40],rdx
  406fae:	mov    QWORD PTR [rbp-0x48],rcx
  406fb2:	mov    DWORD PTR [rbp-0x4c],r8d
  406fb6:	mov    QWORD PTR [rbp-0x58],rax
  406fba:	mov    rax,QWORD PTR [rbp-0x58]
  406fbe:	lea    rcx,[rip+0x1185b]        # 418820 <__bss_start@@Base+0x6c8>
  406fc5:	mov    rdx,rcx
  406fc8:	add    rdx,0x8
  406fcf:	add    rcx,0x10
  406fd6:	lea    rsi,[rip+0x12b23]        # 419b00 <Unity@@Base>
  406fdd:	mov    rdi,QWORD PTR [rax]
  406fe0:	add    rdi,0x1
  406fe7:	mov    QWORD PTR [rax],rdi
  406fea:	mov    rax,QWORD PTR [rbp-0x30]
  406fee:	mov    QWORD PTR [rbp-0x8],rax
  406ff2:	mov    rdi,QWORD PTR [rbp-0x38]
  406ff6:	mov    QWORD PTR [rbp-0x10],rdi
  406ffa:	mov    r8,QWORD PTR [rbp-0x40]
  406ffe:	mov    QWORD PTR [rbp-0x18],r8
  407002:	mov    r9,QWORD PTR [rbp-0x48]
  407006:	mov    QWORD PTR [rbp-0x20],r9
  40700a:	mov    r10d,DWORD PTR [rbp-0x4c]
  40700e:	mov    DWORD PTR [rbp-0x24],r10d
  407012:	cmp    QWORD PTR [rsi+0x40],0x0
  407017:	mov    QWORD PTR [rbp-0x60],rcx
  40701b:	mov    QWORD PTR [rbp-0x68],rdx
  40701f:	jne    407068 <UnityAssertEqualNumber@@Base+0xd8>
  407025:	mov    rax,QWORD PTR [rbp-0x60]
  407029:	lea    rcx,[rip+0x117f0]        # 418820 <__bss_start@@Base+0x6c8>
  407030:	mov    rdx,rcx
  407033:	add    rdx,0x18
  40703a:	add    rcx,0x20
  407041:	lea    rsi,[rip+0x12ab8]        # 419b00 <Unity@@Base>
  407048:	mov    rdi,QWORD PTR [rax]
  40704b:	add    rdi,0x1
  407052:	mov    QWORD PTR [rax],rdi
  407055:	cmp    QWORD PTR [rsi+0x48],0x0
  40705a:	mov    QWORD PTR [rbp-0x68],rdx
  40705e:	mov    QWORD PTR [rbp-0x70],rcx
  407062:	je     407090 <UnityAssertEqualNumber@@Base+0x100>
  407068:	mov    rax,QWORD PTR [rbp-0x68]
  40706c:	lea    rcx,[rip+0x117ad]        # 418820 <__bss_start@@Base+0x6c8>
  407073:	add    rcx,0x28
  40707a:	mov    rdx,QWORD PTR [rax]
  40707d:	add    rdx,0x1
  407084:	mov    QWORD PTR [rax],rdx
  407087:	mov    QWORD PTR [rbp-0x78],rcx
  40708b:	jmp    407148 <UnityAssertEqualNumber@@Base+0x1b8>
  407090:	mov    rax,QWORD PTR [rbp-0x70]
  407094:	lea    rcx,[rip+0x11785]        # 418820 <__bss_start@@Base+0x6c8>
  40709b:	mov    rdx,rcx
  40709e:	add    rdx,0x30
  4070a5:	add    rcx,0x38
  4070ac:	mov    rsi,QWORD PTR [rax]
  4070af:	add    rsi,0x1
  4070b6:	mov    QWORD PTR [rax],rsi
  4070b9:	mov    rax,QWORD PTR [rbp-0x8]
  4070bd:	cmp    rax,QWORD PTR [rbp-0x10]
  4070c1:	mov    QWORD PTR [rbp-0x80],rdx
  4070c5:	mov    QWORD PTR [rbp-0x78],rcx
  4070c9:	je     407148 <UnityAssertEqualNumber@@Base+0x1b8>
  4070cf:	mov    rax,QWORD PTR [rbp-0x80]
  4070d3:	mov    rcx,QWORD PTR [rax]
  4070d6:	add    rcx,0x1
  4070dd:	mov    QWORD PTR [rax],rcx
  4070e0:	mov    rdi,QWORD PTR [rbp-0x20]
  4070e4:	call   406d40 <UnityAssertBits@@Base+0x200>
  4070e9:	lea    rdi,[rip+0xc30c]        # 4133fc <UnityStrExpected@@Base>
  4070f0:	call   405480 <UnityPrint@@Base>
  4070f5:	mov    rdi,QWORD PTR [rbp-0x8]
  4070f9:	mov    esi,DWORD PTR [rbp-0x24]
  4070fc:	call   405e80 <UnityPrintNumberByStyle@@Base>
  407101:	lea    rdi,[rip+0xc2ff]        # 413407 <UnityStrWas@@Base>
  407108:	call   405480 <UnityPrint@@Base>
  40710d:	mov    rdi,QWORD PTR [rbp-0x10]
  407111:	mov    esi,DWORD PTR [rbp-0x24]
  407114:	call   405e80 <UnityPrintNumberByStyle@@Base>
  407119:	mov    rdi,QWORD PTR [rbp-0x18]
  40711d:	call   406dc0 <UnityAssertBits@@Base+0x280>
  407122:	lea    rax,[rip+0x129d7]        # 419b00 <Unity@@Base>
  407129:	mov    rcx,rax
  40712c:	add    rcx,0x50
  407133:	mov    QWORD PTR [rax+0x40],0x1
  40713b:	mov    rdi,rcx
  40713e:	mov    esi,0x1
  407143:	call   403200 <longjmp@plt>
  407148:	mov    rax,QWORD PTR [rbp-0x78]
  40714c:	mov    rcx,QWORD PTR [rax]
  40714f:	add    rcx,0x1
  407156:	mov    QWORD PTR [rax],rcx
  407159:	mov    rax,QWORD PTR [rip+0x11700]        # 418860 <__bss_start@@Base+0x708>
  407160:	add    rax,0x1
  407166:	mov    QWORD PTR [rip+0x116f3],rax        # 418860 <__bss_start@@Base+0x708>
  40716d:	add    rsp,0x80
  407174:	pop    rbp
  407175:	ret    
  407176:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000407180 <UnityAssertEqualIntArray@@Base>:
  407180:	push   rbp
  407181:	mov    rbp,rsp
  407184:	push   r14
  407186:	push   rbx
  407187:	sub    rsp,0x1a0
  40718e:	lea    rax,[rip+0x116db]        # 418870 <__bss_start@@Base+0x718>
  407195:	mov    QWORD PTR [rbp-0x58],rdi
  407199:	mov    QWORD PTR [rbp-0x60],rsi
  40719d:	mov    DWORD PTR [rbp-0x64],edx
  4071a0:	mov    QWORD PTR [rbp-0x70],rcx
  4071a4:	mov    QWORD PTR [rbp-0x78],r8
  4071a8:	mov    DWORD PTR [rbp-0x7c],r9d
  4071ac:	mov    QWORD PTR [rbp-0x88],rax
  4071b3:	mov    rax,QWORD PTR [rbp-0x88]
  4071ba:	lea    rcx,[rip+0x116af]        # 418870 <__bss_start@@Base+0x718>
  4071c1:	mov    rdx,rcx
  4071c4:	add    rdx,0x8
  4071cb:	add    rcx,0x10
  4071d2:	lea    rsi,[rip+0x12927]        # 419b00 <Unity@@Base>
  4071d9:	mov    rdi,QWORD PTR [rax]
  4071dc:	add    rdi,0x1
  4071e3:	mov    QWORD PTR [rax],rdi
  4071e6:	mov    rax,QWORD PTR [rbp-0x58]
  4071ea:	mov    QWORD PTR [rbp-0x18],rax
  4071ee:	mov    rdi,QWORD PTR [rbp-0x60]
  4071f2:	mov    QWORD PTR [rbp-0x20],rdi
  4071f6:	mov    r8d,DWORD PTR [rbp-0x64]
  4071fa:	mov    DWORD PTR [rbp-0x24],r8d
  4071fe:	mov    r9,QWORD PTR [rbp-0x70]
  407202:	mov    QWORD PTR [rbp-0x30],r9
  407206:	mov    r10,QWORD PTR [rbp-0x78]
  40720a:	mov    QWORD PTR [rbp-0x38],r10
  40720e:	mov    r11d,DWORD PTR [rbp-0x7c]
  407212:	mov    DWORD PTR [rbp-0x3c],r11d
  407216:	mov    ebx,DWORD PTR [rbp-0x24]
  407219:	mov    DWORD PTR [rbp-0x40],ebx
  40721c:	mov    r14,QWORD PTR [rbp-0x18]
  407220:	mov    QWORD PTR [rbp-0x48],r14
  407224:	mov    r14,QWORD PTR [rbp-0x20]
  407228:	mov    QWORD PTR [rbp-0x50],r14
  40722c:	cmp    QWORD PTR [rsi+0x40],0x0
  407231:	mov    QWORD PTR [rbp-0x90],rcx
  407238:	mov    QWORD PTR [rbp-0x98],rdx
  40723f:	jne    407291 <UnityAssertEqualIntArray@@Base+0x111>
  407245:	mov    rax,QWORD PTR [rbp-0x90]
  40724c:	lea    rcx,[rip+0x1161d]        # 418870 <__bss_start@@Base+0x718>
  407253:	mov    rdx,rcx
  407256:	add    rdx,0x18
  40725d:	add    rcx,0x20
  407264:	lea    rsi,[rip+0x12895]        # 419b00 <Unity@@Base>
  40726b:	mov    rdi,QWORD PTR [rax]
  40726e:	add    rdi,0x1
  407275:	mov    QWORD PTR [rax],rdi
  407278:	cmp    QWORD PTR [rsi+0x48],0x0
  40727d:	mov    QWORD PTR [rbp-0x98],rdx
  407284:	mov    QWORD PTR [rbp-0xa0],rcx
  40728b:	je     4072bf <UnityAssertEqualIntArray@@Base+0x13f>
  407291:	mov    rax,QWORD PTR [rbp-0x98]
  407298:	lea    rcx,[rip+0x115d1]        # 418870 <__bss_start@@Base+0x718>
  40729f:	add    rcx,0x28
  4072a6:	mov    rdx,QWORD PTR [rax]
  4072a9:	add    rdx,0x1
  4072b0:	mov    QWORD PTR [rax],rdx
  4072b3:	mov    QWORD PTR [rbp-0xa8],rcx
  4072ba:	jmp    407cf7 <UnityAssertEqualIntArray@@Base+0xb77>
  4072bf:	mov    rax,QWORD PTR [rbp-0xa0]
  4072c6:	lea    rcx,[rip+0x115a3]        # 418870 <__bss_start@@Base+0x718>
  4072cd:	mov    rdx,rcx
  4072d0:	add    rdx,0x30
  4072d7:	add    rcx,0x38
  4072de:	mov    rsi,QWORD PTR [rax]
  4072e1:	add    rsi,0x1
  4072e8:	mov    QWORD PTR [rax],rsi
  4072eb:	cmp    DWORD PTR [rbp-0x40],0x0
  4072ef:	mov    QWORD PTR [rbp-0xb0],rdx
  4072f6:	mov    QWORD PTR [rbp-0xb8],rcx
  4072fd:	jne    40735b <UnityAssertEqualIntArray@@Base+0x1db>
  407303:	mov    rax,QWORD PTR [rbp-0xb0]
  40730a:	mov    rcx,QWORD PTR [rax]
  40730d:	add    rcx,0x1
  407314:	mov    QWORD PTR [rax],rcx
  407317:	mov    rdi,QWORD PTR [rbp-0x38]
  40731b:	call   406d40 <UnityAssertBits@@Base+0x200>
  407320:	lea    rdi,[rip+0xc149]        # 413470 <UnityStrPointless@@Base>
  407327:	call   405480 <UnityPrint@@Base>
  40732c:	mov    rdi,QWORD PTR [rbp-0x30]
  407330:	call   406dc0 <UnityAssertBits@@Base+0x280>
  407335:	lea    rax,[rip+0x127c4]        # 419b00 <Unity@@Base>
  40733c:	mov    rcx,rax
  40733f:	add    rcx,0x50
  407346:	mov    QWORD PTR [rax+0x40],0x1
  40734e:	mov    rdi,rcx
  407351:	mov    esi,0x1
  407356:	call   403200 <longjmp@plt>
  40735b:	mov    rax,QWORD PTR [rbp-0xb8]
  407362:	mov    rcx,QWORD PTR [rax]
  407365:	add    rcx,0x1
  40736c:	mov    QWORD PTR [rax],rcx
  40736f:	mov    rdi,QWORD PTR [rbp-0x18]
  407373:	mov    rsi,QWORD PTR [rbp-0x20]
  407377:	mov    rdx,QWORD PTR [rbp-0x38]
  40737b:	mov    rcx,QWORD PTR [rbp-0x30]
  40737f:	call   407d30 <UnityAssertEqualIntArray@@Base+0xbb0>
  407384:	lea    rcx,[rip+0x114e5]        # 418870 <__bss_start@@Base+0x718>
  40738b:	mov    rdx,rcx
  40738e:	add    rdx,0x40
  407395:	add    rcx,0x48
  40739c:	cmp    eax,0x1
  40739f:	mov    QWORD PTR [rbp-0xc0],rdx
  4073a6:	mov    QWORD PTR [rbp-0xc8],rcx
  4073ad:	jne    4073e1 <UnityAssertEqualIntArray@@Base+0x261>
  4073b3:	mov    rax,QWORD PTR [rbp-0xc0]
  4073ba:	lea    rcx,[rip+0x114af]        # 418870 <__bss_start@@Base+0x718>
  4073c1:	add    rcx,0x50
  4073c8:	mov    rdx,QWORD PTR [rax]
  4073cb:	add    rdx,0x1
  4073d2:	mov    QWORD PTR [rax],rdx
  4073d5:	mov    QWORD PTR [rbp-0xa8],rcx
  4073dc:	jmp    407cf7 <UnityAssertEqualIntArray@@Base+0xb77>
  4073e1:	mov    rax,QWORD PTR [rbp-0xc8]
  4073e8:	mov    rcx,QWORD PTR [rax]
  4073eb:	inc    rcx
  4073ee:	mov    QWORD PTR [rax],rcx
  4073f1:	mov    edx,DWORD PTR [rbp-0x3c]
  4073f4:	and    edx,0xffffff7f
  4073fa:	lea    rax,[rip+0x1150f]        # 418910 <__bss_start@@Base+0x7b8>
  407401:	lea    rcx,[rip+0x114f0]        # 4188f8 <__bss_start@@Base+0x7a0>
  407408:	lea    rsi,[rip+0x114d1]        # 4188e0 <__bss_start@@Base+0x788>
  40740f:	lea    rdi,[rip+0x114b2]        # 4188c8 <__bss_start@@Base+0x770>
  407416:	mov    r8d,edx
  407419:	sub    r8d,0x11
  40741d:	mov    r9,rsi
  407420:	mov    DWORD PTR [rbp-0xcc],edx
  407426:	mov    QWORD PTR [rbp-0xd8],rax
  40742d:	mov    QWORD PTR [rbp-0xe0],rcx
  407434:	mov    QWORD PTR [rbp-0xe8],rsi
  40743b:	mov    QWORD PTR [rbp-0xf0],rdi
  407442:	mov    QWORD PTR [rbp-0xf8],r9
  407449:	je     407572 <UnityAssertEqualIntArray@@Base+0x3f2>
  40744f:	jmp    407454 <UnityAssertEqualIntArray@@Base+0x2d4>
  407454:	mov    eax,DWORD PTR [rbp-0xcc]
  40745a:	sub    eax,0x12
  40745d:	mov    rcx,QWORD PTR [rbp-0xe0]
  407464:	mov    QWORD PTR [rbp-0x100],rcx
  40746b:	je     407758 <UnityAssertEqualIntArray@@Base+0x5d8>
  407471:	jmp    407476 <UnityAssertEqualIntArray@@Base+0x2f6>
  407476:	mov    eax,DWORD PTR [rbp-0xcc]
  40747c:	sub    eax,0x18
  40747f:	mov    rcx,QWORD PTR [rbp-0xd8]
  407486:	mov    QWORD PTR [rbp-0x108],rcx
  40748d:	je     40793e <UnityAssertEqualIntArray@@Base+0x7be>
  407493:	jmp    407498 <UnityAssertEqualIntArray@@Base+0x318>
  407498:	mov    eax,DWORD PTR [rbp-0xcc]
  40749e:	sub    eax,0x21
  4074a1:	mov    rcx,QWORD PTR [rbp-0xe8]
  4074a8:	mov    QWORD PTR [rbp-0xf8],rcx
  4074af:	je     407572 <UnityAssertEqualIntArray@@Base+0x3f2>
  4074b5:	jmp    4074ba <UnityAssertEqualIntArray@@Base+0x33a>
  4074ba:	mov    eax,DWORD PTR [rbp-0xcc]
  4074c0:	sub    eax,0x22
  4074c3:	mov    rcx,QWORD PTR [rbp-0xe0]
  4074ca:	mov    QWORD PTR [rbp-0x100],rcx
  4074d1:	je     407758 <UnityAssertEqualIntArray@@Base+0x5d8>
  4074d7:	jmp    4074dc <UnityAssertEqualIntArray@@Base+0x35c>
  4074dc:	mov    eax,DWORD PTR [rbp-0xcc]
  4074e2:	sub    eax,0x28
  4074e5:	mov    rcx,QWORD PTR [rbp-0xd8]
  4074ec:	mov    QWORD PTR [rbp-0x108],rcx
  4074f3:	je     40793e <UnityAssertEqualIntArray@@Base+0x7be>
  4074f9:	jmp    4074fe <UnityAssertEqualIntArray@@Base+0x37e>
  4074fe:	mov    eax,DWORD PTR [rbp-0xcc]
  407504:	sub    eax,0x41
  407507:	mov    rcx,QWORD PTR [rbp-0xe8]
  40750e:	mov    QWORD PTR [rbp-0xf8],rcx
  407515:	je     407572 <UnityAssertEqualIntArray@@Base+0x3f2>
  40751b:	jmp    407520 <UnityAssertEqualIntArray@@Base+0x3a0>
  407520:	mov    eax,DWORD PTR [rbp-0xcc]
  407526:	sub    eax,0x42
  407529:	mov    rcx,QWORD PTR [rbp-0xe0]
  407530:	mov    QWORD PTR [rbp-0x100],rcx
  407537:	je     407758 <UnityAssertEqualIntArray@@Base+0x5d8>
  40753d:	jmp    407542 <UnityAssertEqualIntArray@@Base+0x3c2>
  407542:	mov    eax,DWORD PTR [rbp-0xcc]
  407548:	sub    eax,0x48
  40754b:	mov    rcx,QWORD PTR [rbp-0xd8]
  407552:	mov    rdx,QWORD PTR [rbp-0xf0]
  407559:	mov    QWORD PTR [rbp-0x108],rcx
  407560:	mov    QWORD PTR [rbp-0x110],rdx
  407567:	je     40793e <UnityAssertEqualIntArray@@Base+0x7be>
  40756d:	jmp    407b1e <UnityAssertEqualIntArray@@Base+0x99e>
  407572:	mov    rax,QWORD PTR [rbp-0xf8]
  407579:	lea    rcx,[rip+0x112f0]        # 418870 <__bss_start@@Base+0x718>
  407580:	add    rcx,0xa8
  407587:	mov    rdx,QWORD PTR [rax]
  40758a:	add    rdx,0x1
  407591:	mov    QWORD PTR [rax],rdx
  407594:	mov    QWORD PTR [rbp-0x118],rcx
  40759b:	mov    rax,QWORD PTR [rbp-0x118]
  4075a2:	lea    rcx,[rip+0x112c7]        # 418870 <__bss_start@@Base+0x718>
  4075a9:	mov    rdx,rcx
  4075ac:	add    rdx,0xb0
  4075b3:	add    rcx,0xb8
  4075ba:	mov    rsi,QWORD PTR [rax]
  4075bd:	add    rsi,0x1
  4075c4:	mov    QWORD PTR [rax],rsi
  4075c7:	mov    edi,DWORD PTR [rbp-0x40]
  4075ca:	mov    r8d,edi
  4075cd:	add    r8d,0xffffffff
  4075d1:	mov    DWORD PTR [rbp-0x40],r8d
  4075d5:	cmp    edi,0x0
  4075d8:	mov    QWORD PTR [rbp-0x120],rdx
  4075df:	mov    QWORD PTR [rbp-0x128],rcx
  4075e6:	je     40772a <UnityAssertEqualIntArray@@Base+0x5aa>
  4075ec:	mov    rax,QWORD PTR [rbp-0x120]
  4075f3:	lea    rcx,[rip+0x11276]        # 418870 <__bss_start@@Base+0x718>
  4075fa:	mov    rdx,rcx
  4075fd:	add    rdx,0xc0
  407604:	add    rcx,0xc8
  40760b:	mov    rsi,QWORD PTR [rax]
  40760e:	add    rsi,0x1
  407615:	mov    QWORD PTR [rax],rsi
  407618:	mov    rax,QWORD PTR [rbp-0x48]
  40761c:	movsx  edi,BYTE PTR [rax]
  40761f:	mov    rax,QWORD PTR [rbp-0x50]
  407623:	movsx  r8d,BYTE PTR [rax]
  407627:	cmp    edi,r8d
  40762a:	mov    QWORD PTR [rbp-0x130],rdx
  407631:	mov    QWORD PTR [rbp-0x138],rcx
  407638:	je     4076e0 <UnityAssertEqualIntArray@@Base+0x560>
  40763e:	mov    rax,QWORD PTR [rbp-0x130]
  407645:	mov    rcx,QWORD PTR [rax]
  407648:	add    rcx,0x1
  40764f:	mov    QWORD PTR [rax],rcx
  407652:	mov    rdi,QWORD PTR [rbp-0x38]
  407656:	call   406d40 <UnityAssertBits@@Base+0x200>
  40765b:	lea    rdi,[rip+0xbdb0]        # 413412 <UnityStrElement@@Base>
  407662:	call   405480 <UnityPrint@@Base>
  407667:	mov    edx,DWORD PTR [rbp-0x24]
  40766a:	sub    edx,DWORD PTR [rbp-0x40]
  40766d:	sub    edx,0x1
  407670:	mov    edx,edx
  407672:	mov    edi,edx
  407674:	call   406360 <UnityPrintNumberUnsigned@@Base>
  407679:	lea    rdi,[rip+0xbd7c]        # 4133fc <UnityStrExpected@@Base>
  407680:	call   405480 <UnityPrint@@Base>
  407685:	mov    rax,QWORD PTR [rbp-0x48]
  407689:	movsx  rdi,BYTE PTR [rax]
  40768d:	mov    esi,DWORD PTR [rbp-0x3c]
  407690:	call   405e80 <UnityPrintNumberByStyle@@Base>
  407695:	lea    rdi,[rip+0xbd6b]        # 413407 <UnityStrWas@@Base>
  40769c:	call   405480 <UnityPrint@@Base>
  4076a1:	mov    rax,QWORD PTR [rbp-0x50]
  4076a5:	movsx  rdi,BYTE PTR [rax]
  4076a9:	mov    esi,DWORD PTR [rbp-0x3c]
  4076ac:	call   405e80 <UnityPrintNumberByStyle@@Base>
  4076b1:	mov    rdi,QWORD PTR [rbp-0x30]
  4076b5:	call   406dc0 <UnityAssertBits@@Base+0x280>
  4076ba:	lea    rax,[rip+0x1243f]        # 419b00 <Unity@@Base>
  4076c1:	mov    rcx,rax
  4076c4:	add    rcx,0x50
  4076cb:	mov    QWORD PTR [rax+0x40],0x1
  4076d3:	mov    rdi,rcx
  4076d6:	mov    esi,0x1
  4076db:	call   403200 <longjmp@plt>
  4076e0:	mov    rax,QWORD PTR [rbp-0x138]
  4076e7:	lea    rcx,[rip+0x11182]        # 418870 <__bss_start@@Base+0x718>
  4076ee:	add    rcx,0xd0
  4076f5:	mov    rdx,QWORD PTR [rax]
  4076f8:	add    rdx,0x1
  4076ff:	mov    QWORD PTR [rax],rdx
  407702:	mov    rax,QWORD PTR [rbp-0x48]
  407706:	add    rax,0x1
  40770c:	mov    QWORD PTR [rbp-0x48],rax
  407710:	mov    rax,QWORD PTR [rbp-0x50]
  407714:	add    rax,0x1
  40771a:	mov    QWORD PTR [rbp-0x50],rax
  40771e:	mov    QWORD PTR [rbp-0x118],rcx
  407725:	jmp    40759b <UnityAssertEqualIntArray@@Base+0x41b>
  40772a:	mov    rax,QWORD PTR [rbp-0x128]
  407731:	lea    rcx,[rip+0x11138]        # 418870 <__bss_start@@Base+0x718>
  407738:	add    rcx,0xd8
  40773f:	mov    rdx,QWORD PTR [rax]
  407742:	add    rdx,0x1
  407749:	mov    QWORD PTR [rax],rdx
  40774c:	mov    QWORD PTR [rbp-0xa8],rcx
  407753:	jmp    407cf7 <UnityAssertEqualIntArray@@Base+0xb77>
  407758:	mov    rax,QWORD PTR [rbp-0x100]
  40775f:	lea    rcx,[rip+0x1110a]        # 418870 <__bss_start@@Base+0x718>
  407766:	add    rcx,0xe0
  40776d:	mov    rdx,QWORD PTR [rax]
  407770:	add    rdx,0x1
  407777:	mov    QWORD PTR [rax],rdx
  40777a:	mov    QWORD PTR [rbp-0x140],rcx
  407781:	mov    rax,QWORD PTR [rbp-0x140]
  407788:	lea    rcx,[rip+0x110e1]        # 418870 <__bss_start@@Base+0x718>
  40778f:	mov    rdx,rcx
  407792:	add    rdx,0xe8
  407799:	add    rcx,0xf0
  4077a0:	mov    rsi,QWORD PTR [rax]
  4077a3:	add    rsi,0x1
  4077aa:	mov    QWORD PTR [rax],rsi
  4077ad:	mov    edi,DWORD PTR [rbp-0x40]
  4077b0:	mov    r8d,edi
  4077b3:	add    r8d,0xffffffff
  4077b7:	mov    DWORD PTR [rbp-0x40],r8d
  4077bb:	cmp    edi,0x0
  4077be:	mov    QWORD PTR [rbp-0x148],rdx
  4077c5:	mov    QWORD PTR [rbp-0x150],rcx
  4077cc:	je     407910 <UnityAssertEqualIntArray@@Base+0x790>
  4077d2:	mov    rax,QWORD PTR [rbp-0x148]
  4077d9:	lea    rcx,[rip+0x11090]        # 418870 <__bss_start@@Base+0x718>
  4077e0:	mov    rdx,rcx
  4077e3:	add    rdx,0xf8
  4077ea:	add    rcx,0x100
  4077f1:	mov    rsi,QWORD PTR [rax]
  4077f4:	add    rsi,0x1
  4077fb:	mov    QWORD PTR [rax],rsi
  4077fe:	mov    rax,QWORD PTR [rbp-0x48]
  407802:	movsx  edi,WORD PTR [rax]
  407805:	mov    rax,QWORD PTR [rbp-0x50]
  407809:	movsx  r8d,WORD PTR [rax]
  40780d:	cmp    edi,r8d
  407810:	mov    QWORD PTR [rbp-0x158],rdx
  407817:	mov    QWORD PTR [rbp-0x160],rcx
  40781e:	je     4078c6 <UnityAssertEqualIntArray@@Base+0x746>
  407824:	mov    rax,QWORD PTR [rbp-0x158]
  40782b:	mov    rcx,QWORD PTR [rax]
  40782e:	add    rcx,0x1
  407835:	mov    QWORD PTR [rax],rcx
  407838:	mov    rdi,QWORD PTR [rbp-0x38]
  40783c:	call   406d40 <UnityAssertBits@@Base+0x200>
  407841:	lea    rdi,[rip+0xbbca]        # 413412 <UnityStrElement@@Base>
  407848:	call   405480 <UnityPrint@@Base>
  40784d:	mov    edx,DWORD PTR [rbp-0x24]
  407850:	sub    edx,DWORD PTR [rbp-0x40]
  407853:	sub    edx,0x1
  407856:	mov    edx,edx
  407858:	mov    edi,edx
  40785a:	call   406360 <UnityPrintNumberUnsigned@@Base>
  40785f:	lea    rdi,[rip+0xbb96]        # 4133fc <UnityStrExpected@@Base>
  407866:	call   405480 <UnityPrint@@Base>
  40786b:	mov    rax,QWORD PTR [rbp-0x48]
  40786f:	movsx  rdi,WORD PTR [rax]
  407873:	mov    esi,DWORD PTR [rbp-0x3c]
  407876:	call   405e80 <UnityPrintNumberByStyle@@Base>
  40787b:	lea    rdi,[rip+0xbb85]        # 413407 <UnityStrWas@@Base>
  407882:	call   405480 <UnityPrint@@Base>
  407887:	mov    rax,QWORD PTR [rbp-0x50]
  40788b:	movsx  rdi,WORD PTR [rax]
  40788f:	mov    esi,DWORD PTR [rbp-0x3c]
  407892:	call   405e80 <UnityPrintNumberByStyle@@Base>
  407897:	mov    rdi,QWORD PTR [rbp-0x30]
  40789b:	call   406dc0 <UnityAssertBits@@Base+0x280>
  4078a0:	lea    rax,[rip+0x12259]        # 419b00 <Unity@@Base>
  4078a7:	mov    rcx,rax
  4078aa:	add    rcx,0x50
  4078b1:	mov    QWORD PTR [rax+0x40],0x1
  4078b9:	mov    rdi,rcx
  4078bc:	mov    esi,0x1
  4078c1:	call   403200 <longjmp@plt>
  4078c6:	mov    rax,QWORD PTR [rbp-0x160]
  4078cd:	lea    rcx,[rip+0x10f9c]        # 418870 <__bss_start@@Base+0x718>
  4078d4:	add    rcx,0x108
  4078db:	mov    rdx,QWORD PTR [rax]
  4078de:	add    rdx,0x1
  4078e5:	mov    QWORD PTR [rax],rdx
  4078e8:	mov    rax,QWORD PTR [rbp-0x48]
  4078ec:	add    rax,0x2
  4078f2:	mov    QWORD PTR [rbp-0x48],rax
  4078f6:	mov    rax,QWORD PTR [rbp-0x50]
  4078fa:	add    rax,0x2
  407900:	mov    QWORD PTR [rbp-0x50],rax
  407904:	mov    QWORD PTR [rbp-0x140],rcx
  40790b:	jmp    407781 <UnityAssertEqualIntArray@@Base+0x601>
  407910:	mov    rax,QWORD PTR [rbp-0x150]
  407917:	lea    rcx,[rip+0x10f52]        # 418870 <__bss_start@@Base+0x718>
  40791e:	add    rcx,0x110
  407925:	mov    rdx,QWORD PTR [rax]
  407928:	add    rdx,0x1
  40792f:	mov    QWORD PTR [rax],rdx
  407932:	mov    QWORD PTR [rbp-0xa8],rcx
  407939:	jmp    407cf7 <UnityAssertEqualIntArray@@Base+0xb77>
  40793e:	mov    rax,QWORD PTR [rbp-0x108]
  407945:	lea    rcx,[rip+0x10f24]        # 418870 <__bss_start@@Base+0x718>
  40794c:	add    rcx,0x118
  407953:	mov    rdx,QWORD PTR [rax]
  407956:	add    rdx,0x1
  40795d:	mov    QWORD PTR [rax],rdx
  407960:	mov    QWORD PTR [rbp-0x168],rcx
  407967:	mov    rax,QWORD PTR [rbp-0x168]
  40796e:	lea    rcx,[rip+0x10efb]        # 418870 <__bss_start@@Base+0x718>
  407975:	mov    rdx,rcx
  407978:	add    rdx,0x120
  40797f:	add    rcx,0x128
  407986:	mov    rsi,QWORD PTR [rax]
  407989:	add    rsi,0x1
  407990:	mov    QWORD PTR [rax],rsi
  407993:	mov    edi,DWORD PTR [rbp-0x40]
  407996:	mov    r8d,edi
  407999:	add    r8d,0xffffffff
  40799d:	mov    DWORD PTR [rbp-0x40],r8d
  4079a1:	cmp    edi,0x0
  4079a4:	mov    QWORD PTR [rbp-0x170],rdx
  4079ab:	mov    QWORD PTR [rbp-0x178],rcx
  4079b2:	je     407af0 <UnityAssertEqualIntArray@@Base+0x970>
  4079b8:	mov    rax,QWORD PTR [rbp-0x170]
  4079bf:	lea    rcx,[rip+0x10eaa]        # 418870 <__bss_start@@Base+0x718>
  4079c6:	mov    rdx,rcx
  4079c9:	add    rdx,0x130
  4079d0:	add    rcx,0x138
  4079d7:	mov    rsi,QWORD PTR [rax]
  4079da:	add    rsi,0x1
  4079e1:	mov    QWORD PTR [rax],rsi
  4079e4:	mov    rax,QWORD PTR [rbp-0x48]
  4079e8:	mov    rax,QWORD PTR [rax]
  4079eb:	mov    rsi,QWORD PTR [rbp-0x50]
  4079ef:	cmp    rax,QWORD PTR [rsi]
  4079f2:	mov    QWORD PTR [rbp-0x180],rdx
  4079f9:	mov    QWORD PTR [rbp-0x188],rcx
  407a00:	je     407aa6 <UnityAssertEqualIntArray@@Base+0x926>
  407a06:	mov    rax,QWORD PTR [rbp-0x180]
  407a0d:	mov    rcx,QWORD PTR [rax]
  407a10:	add    rcx,0x1
  407a17:	mov    QWORD PTR [rax],rcx
  407a1a:	mov    rdi,QWORD PTR [rbp-0x38]
  407a1e:	call   406d40 <UnityAssertBits@@Base+0x200>
  407a23:	lea    rdi,[rip+0xb9e8]        # 413412 <UnityStrElement@@Base>
  407a2a:	call   405480 <UnityPrint@@Base>
  407a2f:	mov    edx,DWORD PTR [rbp-0x24]
  407a32:	sub    edx,DWORD PTR [rbp-0x40]
  407a35:	sub    edx,0x1
  407a38:	mov    edx,edx
  407a3a:	mov    edi,edx
  407a3c:	call   406360 <UnityPrintNumberUnsigned@@Base>
  407a41:	lea    rdi,[rip+0xb9b4]        # 4133fc <UnityStrExpected@@Base>
  407a48:	call   405480 <UnityPrint@@Base>
  407a4d:	mov    rax,QWORD PTR [rbp-0x48]
  407a51:	mov    rdi,QWORD PTR [rax]
  407a54:	mov    esi,DWORD PTR [rbp-0x3c]
  407a57:	call   405e80 <UnityPrintNumberByStyle@@Base>
  407a5c:	lea    rdi,[rip+0xb9a4]        # 413407 <UnityStrWas@@Base>
  407a63:	call   405480 <UnityPrint@@Base>
  407a68:	mov    rax,QWORD PTR [rbp-0x50]
  407a6c:	mov    rdi,QWORD PTR [rax]
  407a6f:	mov    esi,DWORD PTR [rbp-0x3c]
  407a72:	call   405e80 <UnityPrintNumberByStyle@@Base>
  407a77:	mov    rdi,QWORD PTR [rbp-0x30]
  407a7b:	call   406dc0 <UnityAssertBits@@Base+0x280>
  407a80:	lea    rax,[rip+0x12079]        # 419b00 <Unity@@Base>
  407a87:	mov    rcx,rax
  407a8a:	add    rcx,0x50
  407a91:	mov    QWORD PTR [rax+0x40],0x1
  407a99:	mov    rdi,rcx
  407a9c:	mov    esi,0x1
  407aa1:	call   403200 <longjmp@plt>
  407aa6:	mov    rax,QWORD PTR [rbp-0x188]
  407aad:	lea    rcx,[rip+0x10dbc]        # 418870 <__bss_start@@Base+0x718>
  407ab4:	add    rcx,0x140
  407abb:	mov    rdx,QWORD PTR [rax]
  407abe:	add    rdx,0x1
  407ac5:	mov    QWORD PTR [rax],rdx
  407ac8:	mov    rax,QWORD PTR [rbp-0x48]
  407acc:	add    rax,0x8
  407ad2:	mov    QWORD PTR [rbp-0x48],rax
  407ad6:	mov    rax,QWORD PTR [rbp-0x50]
  407ada:	add    rax,0x8
  407ae0:	mov    QWORD PTR [rbp-0x50],rax
  407ae4:	mov    QWORD PTR [rbp-0x168],rcx
  407aeb:	jmp    407967 <UnityAssertEqualIntArray@@Base+0x7e7>
  407af0:	mov    rax,QWORD PTR [rbp-0x178]
  407af7:	lea    rcx,[rip+0x10d72]        # 418870 <__bss_start@@Base+0x718>
  407afe:	add    rcx,0x148
  407b05:	mov    rdx,QWORD PTR [rax]
  407b08:	add    rdx,0x1
  407b0f:	mov    QWORD PTR [rax],rdx
  407b12:	mov    QWORD PTR [rbp-0xa8],rcx
  407b19:	jmp    407cf7 <UnityAssertEqualIntArray@@Base+0xb77>
  407b1e:	mov    rax,QWORD PTR [rbp-0x110]
  407b25:	lea    rcx,[rip+0x10d44]        # 418870 <__bss_start@@Base+0x718>
  407b2c:	add    rcx,0x150
  407b33:	mov    rdx,QWORD PTR [rax]
  407b36:	add    rdx,0x1
  407b3d:	mov    QWORD PTR [rax],rdx
  407b40:	mov    QWORD PTR [rbp-0x190],rcx
  407b47:	mov    rax,QWORD PTR [rbp-0x190]
  407b4e:	lea    rcx,[rip+0x10d1b]        # 418870 <__bss_start@@Base+0x718>
  407b55:	mov    rdx,rcx
  407b58:	add    rdx,0x158
  407b5f:	add    rcx,0x160
  407b66:	mov    rsi,QWORD PTR [rax]
  407b69:	add    rsi,0x1
  407b70:	mov    QWORD PTR [rax],rsi
  407b73:	mov    edi,DWORD PTR [rbp-0x40]
  407b76:	mov    r8d,edi
  407b79:	add    r8d,0xffffffff
  407b7d:	mov    DWORD PTR [rbp-0x40],r8d
  407b81:	cmp    edi,0x0
  407b84:	mov    QWORD PTR [rbp-0x198],rdx
  407b8b:	mov    QWORD PTR [rbp-0x1a0],rcx
  407b92:	je     407cce <UnityAssertEqualIntArray@@Base+0xb4e>
  407b98:	mov    rax,QWORD PTR [rbp-0x198]
  407b9f:	lea    rcx,[rip+0x10cca]        # 418870 <__bss_start@@Base+0x718>
  407ba6:	mov    rdx,rcx
  407ba9:	add    rdx,0x168
  407bb0:	add    rcx,0x170
  407bb7:	mov    rsi,QWORD PTR [rax]
  407bba:	add    rsi,0x1
  407bc1:	mov    QWORD PTR [rax],rsi
  407bc4:	mov    rax,QWORD PTR [rbp-0x48]
  407bc8:	mov    edi,DWORD PTR [rax]
  407bca:	mov    rax,QWORD PTR [rbp-0x50]
  407bce:	cmp    edi,DWORD PTR [rax]
  407bd0:	mov    QWORD PTR [rbp-0x1a8],rdx
  407bd7:	mov    QWORD PTR [rbp-0x1b0],rcx
  407bde:	je     407c84 <UnityAssertEqualIntArray@@Base+0xb04>
  407be4:	mov    rax,QWORD PTR [rbp-0x1a8]
  407beb:	mov    rcx,QWORD PTR [rax]
  407bee:	add    rcx,0x1
  407bf5:	mov    QWORD PTR [rax],rcx
  407bf8:	mov    rdi,QWORD PTR [rbp-0x38]
  407bfc:	call   406d40 <UnityAssertBits@@Base+0x200>
  407c01:	lea    rdi,[rip+0xb80a]        # 413412 <UnityStrElement@@Base>
  407c08:	call   405480 <UnityPrint@@Base>
  407c0d:	mov    edx,DWORD PTR [rbp-0x24]
  407c10:	sub    edx,DWORD PTR [rbp-0x40]
  407c13:	sub    edx,0x1
  407c16:	mov    edx,edx
  407c18:	mov    edi,edx
  407c1a:	call   406360 <UnityPrintNumberUnsigned@@Base>
  407c1f:	lea    rdi,[rip+0xb7d6]        # 4133fc <UnityStrExpected@@Base>
  407c26:	call   405480 <UnityPrint@@Base>
  407c2b:	mov    rax,QWORD PTR [rbp-0x48]
  407c2f:	movsxd rdi,DWORD PTR [rax]
  407c32:	mov    esi,DWORD PTR [rbp-0x3c]
  407c35:	call   405e80 <UnityPrintNumberByStyle@@Base>
  407c3a:	lea    rdi,[rip+0xb7c6]        # 413407 <UnityStrWas@@Base>
  407c41:	call   405480 <UnityPrint@@Base>
  407c46:	mov    rax,QWORD PTR [rbp-0x50]
  407c4a:	movsxd rdi,DWORD PTR [rax]
  407c4d:	mov    esi,DWORD PTR [rbp-0x3c]
  407c50:	call   405e80 <UnityPrintNumberByStyle@@Base>
  407c55:	mov    rdi,QWORD PTR [rbp-0x30]
  407c59:	call   406dc0 <UnityAssertBits@@Base+0x280>
  407c5e:	lea    rax,[rip+0x11e9b]        # 419b00 <Unity@@Base>
  407c65:	mov    rcx,rax
  407c68:	add    rcx,0x50
  407c6f:	mov    QWORD PTR [rax+0x40],0x1
  407c77:	mov    rdi,rcx
  407c7a:	mov    esi,0x1
  407c7f:	call   403200 <longjmp@plt>
  407c84:	mov    rax,QWORD PTR [rbp-0x1b0]
  407c8b:	lea    rcx,[rip+0x10bde]        # 418870 <__bss_start@@Base+0x718>
  407c92:	add    rcx,0x178
  407c99:	mov    rdx,QWORD PTR [rax]
  407c9c:	add    rdx,0x1
  407ca3:	mov    QWORD PTR [rax],rdx
  407ca6:	mov    rax,QWORD PTR [rbp-0x48]
  407caa:	add    rax,0x4
  407cb0:	mov    QWORD PTR [rbp-0x48],rax
  407cb4:	mov    rax,QWORD PTR [rbp-0x50]
  407cb8:	add    rax,0x4
  407cbe:	mov    QWORD PTR [rbp-0x50],rax
  407cc2:	mov    QWORD PTR [rbp-0x190],rcx
  407cc9:	jmp    407b47 <UnityAssertEqualIntArray@@Base+0x9c7>
  407cce:	mov    rax,QWORD PTR [rbp-0x1a0]
  407cd5:	lea    rcx,[rip+0x10b94]        # 418870 <__bss_start@@Base+0x718>
  407cdc:	add    rcx,0x180
  407ce3:	mov    rdx,QWORD PTR [rax]
  407ce6:	add    rdx,0x1
  407ced:	mov    QWORD PTR [rax],rdx
  407cf0:	mov    QWORD PTR [rbp-0xa8],rcx
  407cf7:	mov    rax,QWORD PTR [rbp-0xa8]
  407cfe:	mov    rcx,QWORD PTR [rax]
  407d01:	add    rcx,0x1
  407d08:	mov    QWORD PTR [rax],rcx
  407d0b:	mov    rax,QWORD PTR [rip+0x10ce6]        # 4189f8 <__bss_start@@Base+0x8a0>
  407d12:	add    rax,0x1
  407d18:	mov    QWORD PTR [rip+0x10cd9],rax        # 4189f8 <__bss_start@@Base+0x8a0>
  407d1f:	add    rsp,0x1a0
  407d26:	pop    rbx
  407d27:	pop    r14
  407d29:	pop    rbp
  407d2a:	ret    
  407d2b:	nop    DWORD PTR [rax+rax*1+0x0]
  407d30:	push   rbp
  407d31:	mov    rbp,rsp
  407d34:	sub    rsp,0x90
  407d3b:	lea    rax,[rip+0x10cbe]        # 418a00 <__bss_start@@Base+0x8a8>
  407d42:	mov    QWORD PTR [rbp-0x30],rdi
  407d46:	mov    QWORD PTR [rbp-0x38],rsi
  407d4a:	mov    QWORD PTR [rbp-0x40],rdx
  407d4e:	mov    QWORD PTR [rbp-0x48],rcx
  407d52:	mov    QWORD PTR [rbp-0x50],rax
  407d56:	mov    rax,QWORD PTR [rbp-0x50]
  407d5a:	lea    rcx,[rip+0x10c9f]        # 418a00 <__bss_start@@Base+0x8a8>
  407d61:	mov    rdx,rcx
  407d64:	add    rdx,0x8
  407d6b:	add    rcx,0x10
  407d72:	mov    rsi,QWORD PTR [rax]
  407d75:	add    rsi,0x1
  407d7c:	mov    QWORD PTR [rax],rsi
  407d7f:	mov    rax,QWORD PTR [rbp-0x30]
  407d83:	mov    QWORD PTR [rbp-0x10],rax
  407d87:	mov    rsi,QWORD PTR [rbp-0x38]
  407d8b:	mov    QWORD PTR [rbp-0x18],rsi
  407d8f:	mov    rdi,QWORD PTR [rbp-0x40]
  407d93:	mov    QWORD PTR [rbp-0x20],rdi
  407d97:	mov    r8,QWORD PTR [rbp-0x48]
  407d9b:	mov    QWORD PTR [rbp-0x28],r8
  407d9f:	cmp    QWORD PTR [rbp-0x10],0x0
  407da4:	mov    QWORD PTR [rbp-0x58],rdx
  407da8:	mov    QWORD PTR [rbp-0x60],rcx
  407dac:	jne    407e1d <UnityAssertEqualIntArray@@Base+0xc9d>
  407db2:	mov    rax,QWORD PTR [rbp-0x58]
  407db6:	lea    rcx,[rip+0x10c43]        # 418a00 <__bss_start@@Base+0x8a8>
  407dbd:	mov    rdx,rcx
  407dc0:	add    rdx,0x18
  407dc7:	add    rcx,0x20
  407dce:	mov    rsi,QWORD PTR [rax]
  407dd1:	add    rsi,0x1
  407dd8:	mov    QWORD PTR [rax],rsi
  407ddb:	cmp    QWORD PTR [rbp-0x18],0x0
  407de0:	mov    QWORD PTR [rbp-0x68],rdx
  407de4:	mov    QWORD PTR [rbp-0x60],rcx
  407de8:	jne    407e1d <UnityAssertEqualIntArray@@Base+0xc9d>
  407dee:	mov    rax,QWORD PTR [rbp-0x68]
  407df2:	lea    rcx,[rip+0x10c07]        # 418a00 <__bss_start@@Base+0x8a8>
  407df9:	add    rcx,0x28
  407e00:	mov    rdx,QWORD PTR [rax]
  407e03:	add    rdx,0x1
  407e0a:	mov    QWORD PTR [rax],rdx
  407e0d:	mov    DWORD PTR [rbp-0x4],0x1
  407e14:	mov    QWORD PTR [rbp-0x70],rcx
  407e18:	jmp    407f75 <UnityAssertEqualIntArray@@Base+0xdf5>
  407e1d:	mov    rax,QWORD PTR [rbp-0x60]
  407e21:	lea    rcx,[rip+0x10bd8]        # 418a00 <__bss_start@@Base+0x8a8>
  407e28:	mov    rdx,rcx
  407e2b:	add    rdx,0x30
  407e32:	add    rcx,0x38
  407e39:	mov    rsi,QWORD PTR [rax]
  407e3c:	add    rsi,0x1
  407e43:	mov    QWORD PTR [rax],rsi
  407e46:	cmp    QWORD PTR [rbp-0x10],0x0
  407e4b:	mov    QWORD PTR [rbp-0x78],rdx
  407e4f:	mov    QWORD PTR [rbp-0x80],rcx
  407e53:	jne    407eae <UnityAssertEqualIntArray@@Base+0xd2e>
  407e59:	mov    rax,QWORD PTR [rbp-0x78]
  407e5d:	mov    rcx,QWORD PTR [rax]
  407e60:	add    rcx,0x1
  407e67:	mov    QWORD PTR [rax],rcx
  407e6a:	mov    rdi,QWORD PTR [rbp-0x20]
  407e6e:	call   406d40 <UnityAssertBits@@Base+0x200>
  407e73:	lea    rdi,[rip+0xb636]        # 4134b0 <UnityStrNullPointerForExpected@@Base>
  407e7a:	call   405480 <UnityPrint@@Base>
  407e7f:	mov    rdi,QWORD PTR [rbp-0x28]
  407e83:	call   406dc0 <UnityAssertBits@@Base+0x280>
  407e88:	lea    rax,[rip+0x11c71]        # 419b00 <Unity@@Base>
  407e8f:	mov    rcx,rax
  407e92:	add    rcx,0x50
  407e99:	mov    QWORD PTR [rax+0x40],0x1
  407ea1:	mov    rdi,rcx
  407ea4:	mov    esi,0x1
  407ea9:	call   403200 <longjmp@plt>
  407eae:	mov    rax,QWORD PTR [rbp-0x80]
  407eb2:	lea    rcx,[rip+0x10b47]        # 418a00 <__bss_start@@Base+0x8a8>
  407eb9:	mov    rdx,rcx
  407ebc:	add    rdx,0x40
  407ec3:	add    rcx,0x48
  407eca:	mov    rsi,QWORD PTR [rax]
  407ecd:	add    rsi,0x1
  407ed4:	mov    QWORD PTR [rax],rsi
  407ed7:	cmp    QWORD PTR [rbp-0x18],0x0
  407edc:	mov    QWORD PTR [rbp-0x88],rdx
  407ee3:	mov    QWORD PTR [rbp-0x90],rcx
  407eea:	jne    407f48 <UnityAssertEqualIntArray@@Base+0xdc8>
  407ef0:	mov    rax,QWORD PTR [rbp-0x88]
  407ef7:	mov    rcx,QWORD PTR [rax]
  407efa:	add    rcx,0x1
  407f01:	mov    QWORD PTR [rax],rcx
  407f04:	mov    rdi,QWORD PTR [rbp-0x20]
  407f08:	call   406d40 <UnityAssertBits@@Base+0x200>
  407f0d:	lea    rdi,[rip+0xb5bc]        # 4134d0 <UnityStrNullPointerForActual@@Base>
  407f14:	call   405480 <UnityPrint@@Base>
  407f19:	mov    rdi,QWORD PTR [rbp-0x28]
  407f1d:	call   406dc0 <UnityAssertBits@@Base+0x280>
  407f22:	lea    rax,[rip+0x11bd7]        # 419b00 <Unity@@Base>
  407f29:	mov    rcx,rax
  407f2c:	add    rcx,0x50
  407f33:	mov    QWORD PTR [rax+0x40],0x1
  407f3b:	mov    rdi,rcx
  407f3e:	mov    esi,0x1
  407f43:	call   403200 <longjmp@plt>
  407f48:	mov    rax,QWORD PTR [rbp-0x90]
  407f4f:	lea    rcx,[rip+0x10aaa]        # 418a00 <__bss_start@@Base+0x8a8>
  407f56:	add    rcx,0x50
  407f5d:	mov    rdx,QWORD PTR [rax]
  407f60:	add    rdx,0x1
  407f67:	mov    QWORD PTR [rax],rdx
  407f6a:	mov    DWORD PTR [rbp-0x4],0x0
  407f71:	mov    QWORD PTR [rbp-0x70],rcx
  407f75:	mov    rax,QWORD PTR [rbp-0x70]
  407f79:	mov    rcx,QWORD PTR [rax]
  407f7c:	add    rcx,0x1
  407f83:	mov    QWORD PTR [rax],rcx
  407f86:	mov    rax,QWORD PTR [rip+0x10acb]        # 418a58 <__bss_start@@Base+0x900>
  407f8d:	add    rax,0x1
  407f93:	mov    QWORD PTR [rip+0x10abe],rax        # 418a58 <__bss_start@@Base+0x900>
  407f9a:	mov    eax,DWORD PTR [rbp-0x4]
  407f9d:	add    rsp,0x90
  407fa4:	pop    rbp
  407fa5:	ret    
  407fa6:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000407fb0 <UnityAssertEqualFloatArray@@Base>:
  407fb0:	push   rbp
  407fb1:	mov    rbp,rsp
  407fb4:	push   rbx
  407fb5:	sub    rsp,0x108
  407fbc:	lea    rax,[rip+0x10a9d]        # 418a60 <__bss_start@@Base+0x908>
  407fc3:	mov    QWORD PTR [rbp-0x58],rdi
  407fc7:	mov    QWORD PTR [rbp-0x60],rsi
  407fcb:	mov    DWORD PTR [rbp-0x64],edx
  407fce:	mov    QWORD PTR [rbp-0x70],rcx
  407fd2:	mov    QWORD PTR [rbp-0x78],r8
  407fd6:	mov    QWORD PTR [rbp-0x80],rax
  407fda:	mov    rax,QWORD PTR [rbp-0x80]
  407fde:	lea    rcx,[rip+0x10a7b]        # 418a60 <__bss_start@@Base+0x908>
  407fe5:	mov    rdx,rcx
  407fe8:	add    rdx,0x8
  407fef:	add    rcx,0x10
  407ff6:	lea    rsi,[rip+0x11b03]        # 419b00 <Unity@@Base>
  407ffd:	mov    rdi,QWORD PTR [rax]
  408000:	add    rdi,0x1
  408007:	mov    QWORD PTR [rax],rdi
  40800a:	mov    rax,QWORD PTR [rbp-0x58]
  40800e:	mov    QWORD PTR [rbp-0x10],rax
  408012:	mov    rdi,QWORD PTR [rbp-0x60]
  408016:	mov    QWORD PTR [rbp-0x18],rdi
  40801a:	mov    r8d,DWORD PTR [rbp-0x64]
  40801e:	mov    DWORD PTR [rbp-0x1c],r8d
  408022:	mov    r9,QWORD PTR [rbp-0x70]
  408026:	mov    QWORD PTR [rbp-0x28],r9
  40802a:	mov    r10,QWORD PTR [rbp-0x78]
  40802e:	mov    QWORD PTR [rbp-0x30],r10
  408032:	mov    r11d,DWORD PTR [rbp-0x1c]
  408036:	mov    DWORD PTR [rbp-0x34],r11d
  40803a:	mov    rbx,QWORD PTR [rbp-0x10]
  40803e:	mov    QWORD PTR [rbp-0x40],rbx
  408042:	mov    rbx,QWORD PTR [rbp-0x18]
  408046:	mov    QWORD PTR [rbp-0x48],rbx
  40804a:	cmp    QWORD PTR [rsi+0x40],0x0
  40804f:	mov    QWORD PTR [rbp-0x88],rcx
  408056:	mov    QWORD PTR [rbp-0x90],rdx
  40805d:	jne    4080af <UnityAssertEqualFloatArray@@Base+0xff>
  408063:	mov    rax,QWORD PTR [rbp-0x88]
  40806a:	lea    rcx,[rip+0x109ef]        # 418a60 <__bss_start@@Base+0x908>
  408071:	mov    rdx,rcx
  408074:	add    rdx,0x18
  40807b:	add    rcx,0x20
  408082:	lea    rsi,[rip+0x11a77]        # 419b00 <Unity@@Base>
  408089:	mov    rdi,QWORD PTR [rax]
  40808c:	add    rdi,0x1
  408093:	mov    QWORD PTR [rax],rdi
  408096:	cmp    QWORD PTR [rsi+0x48],0x0
  40809b:	mov    QWORD PTR [rbp-0x90],rdx
  4080a2:	mov    QWORD PTR [rbp-0x98],rcx
  4080a9:	je     4080dd <UnityAssertEqualFloatArray@@Base+0x12d>
  4080af:	mov    rax,QWORD PTR [rbp-0x90]
  4080b6:	lea    rcx,[rip+0x109a3]        # 418a60 <__bss_start@@Base+0x908>
  4080bd:	add    rcx,0x28
  4080c4:	mov    rdx,QWORD PTR [rax]
  4080c7:	add    rdx,0x1
  4080ce:	mov    QWORD PTR [rax],rdx
  4080d1:	mov    QWORD PTR [rbp-0xa0],rcx
  4080d8:	jmp    408514 <UnityAssertEqualFloatArray@@Base+0x564>
  4080dd:	mov    rax,QWORD PTR [rbp-0x98]
  4080e4:	lea    rcx,[rip+0x10975]        # 418a60 <__bss_start@@Base+0x908>
  4080eb:	mov    rdx,rcx
  4080ee:	add    rdx,0x30
  4080f5:	add    rcx,0x38
  4080fc:	mov    rsi,QWORD PTR [rax]
  4080ff:	add    rsi,0x1
  408106:	mov    QWORD PTR [rax],rsi
  408109:	cmp    DWORD PTR [rbp-0x34],0x0
  40810d:	mov    QWORD PTR [rbp-0xa8],rdx
  408114:	mov    QWORD PTR [rbp-0xb0],rcx
  40811b:	jne    408179 <UnityAssertEqualFloatArray@@Base+0x1c9>
  408121:	mov    rax,QWORD PTR [rbp-0xa8]
  408128:	mov    rcx,QWORD PTR [rax]
  40812b:	add    rcx,0x1
  408132:	mov    QWORD PTR [rax],rcx
  408135:	mov    rdi,QWORD PTR [rbp-0x30]
  408139:	call   406d40 <UnityAssertBits@@Base+0x200>
  40813e:	lea    rdi,[rip+0xb32b]        # 413470 <UnityStrPointless@@Base>
  408145:	call   405480 <UnityPrint@@Base>
  40814a:	mov    rdi,QWORD PTR [rbp-0x28]
  40814e:	call   406dc0 <UnityAssertBits@@Base+0x280>
  408153:	lea    rax,[rip+0x119a6]        # 419b00 <Unity@@Base>
  40815a:	mov    rcx,rax
  40815d:	add    rcx,0x50
  408164:	mov    QWORD PTR [rax+0x40],0x1
  40816c:	mov    rdi,rcx
  40816f:	mov    esi,0x1
  408174:	call   403200 <longjmp@plt>
  408179:	mov    rax,QWORD PTR [rbp-0xb0]
  408180:	mov    rcx,QWORD PTR [rax]
  408183:	add    rcx,0x1
  40818a:	mov    QWORD PTR [rax],rcx
  40818d:	mov    rax,QWORD PTR [rbp-0x10]
  408191:	mov    rcx,QWORD PTR [rbp-0x18]
  408195:	mov    rdx,QWORD PTR [rbp-0x30]
  408199:	mov    rsi,QWORD PTR [rbp-0x28]
  40819d:	mov    rdi,rax
  4081a0:	mov    QWORD PTR [rbp-0xb8],rsi
  4081a7:	mov    rsi,rcx
  4081aa:	mov    rcx,QWORD PTR [rbp-0xb8]
  4081b1:	call   407d30 <UnityAssertEqualIntArray@@Base+0xbb0>
  4081b6:	lea    rcx,[rip+0x108a3]        # 418a60 <__bss_start@@Base+0x908>
  4081bd:	mov    rdx,rcx
  4081c0:	add    rdx,0x40
  4081c7:	add    rcx,0x48
  4081ce:	cmp    eax,0x1
  4081d1:	mov    QWORD PTR [rbp-0xc0],rdx
  4081d8:	mov    QWORD PTR [rbp-0xc8],rcx
  4081df:	jne    408213 <UnityAssertEqualFloatArray@@Base+0x263>
  4081e5:	mov    rax,QWORD PTR [rbp-0xc0]
  4081ec:	lea    rcx,[rip+0x1086d]        # 418a60 <__bss_start@@Base+0x908>
  4081f3:	add    rcx,0x50
  4081fa:	mov    rdx,QWORD PTR [rax]
  4081fd:	add    rdx,0x1
  408204:	mov    QWORD PTR [rax],rdx
  408207:	mov    QWORD PTR [rbp-0xa0],rcx
  40820e:	jmp    408514 <UnityAssertEqualFloatArray@@Base+0x564>
  408213:	mov    rax,QWORD PTR [rbp-0xc8]
  40821a:	lea    rcx,[rip+0x1083f]        # 418a60 <__bss_start@@Base+0x908>
  408221:	add    rcx,0x58
  408228:	mov    rdx,QWORD PTR [rax]
  40822b:	add    rdx,0x1
  408232:	mov    QWORD PTR [rax],rdx
  408235:	mov    QWORD PTR [rbp-0xd0],rcx
  40823c:	mov    rax,QWORD PTR [rbp-0xd0]
  408243:	lea    rcx,[rip+0x10816]        # 418a60 <__bss_start@@Base+0x908>
  40824a:	mov    rdx,rcx
  40824d:	add    rdx,0x60
  408254:	add    rcx,0x68
  40825b:	mov    rsi,QWORD PTR [rax]
  40825e:	add    rsi,0x1
  408265:	mov    QWORD PTR [rax],rsi
  408268:	mov    edi,DWORD PTR [rbp-0x34]
  40826b:	mov    r8d,edi
  40826e:	add    r8d,0xffffffff
  408272:	mov    DWORD PTR [rbp-0x34],r8d
  408276:	cmp    edi,0x0
  408279:	mov    QWORD PTR [rbp-0xd8],rdx
  408280:	mov    QWORD PTR [rbp-0xa0],rcx
  408287:	je     408514 <UnityAssertEqualFloatArray@@Base+0x564>
  40828d:	mov    rax,QWORD PTR [rbp-0xd8]
  408294:	lea    rcx,[rip+0x107c5]        # 418a60 <__bss_start@@Base+0x908>
  40829b:	mov    rdx,rcx
  40829e:	add    rdx,0x70
  4082a5:	add    rcx,0x78
  4082ac:	mov    rsi,QWORD PTR [rax]
  4082af:	add    rsi,0x1
  4082b6:	mov    QWORD PTR [rax],rsi
  4082b9:	mov    rax,QWORD PTR [rbp-0x40]
  4082bd:	vmovss xmm0,DWORD PTR [rax]
  4082c1:	mov    rax,QWORD PTR [rbp-0x48]
  4082c5:	vsubss xmm0,xmm0,DWORD PTR [rax]
  4082c9:	vmovss DWORD PTR [rbp-0x4c],xmm0
  4082ce:	vxorps xmm0,xmm0,xmm0
  4082d2:	vucomiss xmm0,DWORD PTR [rbp-0x4c]
  4082d7:	mov    QWORD PTR [rbp-0xe0],rdx
  4082de:	mov    QWORD PTR [rbp-0xe8],rcx
  4082e5:	jbe    408322 <UnityAssertEqualFloatArray@@Base+0x372>
  4082eb:	mov    rax,QWORD PTR [rbp-0xe0]
  4082f2:	lea    rcx,[rip+0x10767]        # 418a60 <__bss_start@@Base+0x908>
  4082f9:	add    rcx,0x80
  408300:	mov    rdx,QWORD PTR [rax]
  408303:	add    rdx,0x1
  40830a:	mov    QWORD PTR [rax],rdx
  40830d:	vxorps xmm0,xmm0,xmm0
  408311:	vsubss xmm0,xmm0,DWORD PTR [rbp-0x4c]
  408316:	vmovss DWORD PTR [rbp-0x4c],xmm0
  40831b:	mov    QWORD PTR [rbp-0xe8],rcx
  408322:	mov    rax,QWORD PTR [rbp-0xe8]
  408329:	lea    rcx,[rip+0x10730]        # 418a60 <__bss_start@@Base+0x908>
  408330:	mov    rdx,rcx
  408333:	add    rdx,0x88
  40833a:	add    rcx,0x90
  408341:	vmovss xmm0,DWORD PTR [rip+0xb067]        # 4133b0 <_IO_stdin_used@@Base+0x3b0>
  408349:	mov    rsi,QWORD PTR [rax]
  40834c:	add    rsi,0x1
  408353:	mov    QWORD PTR [rax],rsi
  408356:	mov    rax,QWORD PTR [rbp-0x40]
  40835a:	vmulss xmm0,xmm0,DWORD PTR [rax]
  40835e:	vmovss DWORD PTR [rbp-0x50],xmm0
  408363:	vxorps xmm0,xmm0,xmm0
  408367:	vucomiss xmm0,DWORD PTR [rbp-0x50]
  40836c:	mov    QWORD PTR [rbp-0xf0],rdx
  408373:	mov    QWORD PTR [rbp-0xf8],rcx
  40837a:	jbe    4083b7 <UnityAssertEqualFloatArray@@Base+0x407>
  408380:	mov    rax,QWORD PTR [rbp-0xf0]
  408387:	lea    rcx,[rip+0x106d2]        # 418a60 <__bss_start@@Base+0x908>
  40838e:	add    rcx,0x98
  408395:	mov    rdx,QWORD PTR [rax]
  408398:	add    rdx,0x1
  40839f:	mov    QWORD PTR [rax],rdx
  4083a2:	vxorps xmm0,xmm0,xmm0
  4083a6:	vsubss xmm0,xmm0,DWORD PTR [rbp-0x50]
  4083ab:	vmovss DWORD PTR [rbp-0x50],xmm0
  4083b0:	mov    QWORD PTR [rbp-0xf8],rcx
  4083b7:	mov    rax,QWORD PTR [rbp-0xf8]
  4083be:	lea    rcx,[rip+0x1069b]        # 418a60 <__bss_start@@Base+0x908>
  4083c5:	mov    rdx,rcx
  4083c8:	add    rdx,0xa0
  4083cf:	add    rcx,0xa8
  4083d6:	mov    rsi,QWORD PTR [rax]
  4083d9:	add    rsi,0x1
  4083e0:	mov    QWORD PTR [rax],rsi
  4083e3:	vxorps xmm0,xmm0,xmm0
  4083e7:	vmulss xmm1,xmm0,DWORD PTR [rbp-0x4c]
  4083ec:	vucomiss xmm1,xmm0
  4083f0:	mov    QWORD PTR [rbp-0x100],rcx
  4083f7:	mov    QWORD PTR [rbp-0x108],rdx
  4083fe:	jne    408454 <UnityAssertEqualFloatArray@@Base+0x4a4>
  408404:	jp     408454 <UnityAssertEqualFloatArray@@Base+0x4a4>
  40840a:	mov    rax,QWORD PTR [rbp-0x100]
  408411:	lea    rcx,[rip+0x10648]        # 418a60 <__bss_start@@Base+0x908>
  408418:	mov    rdx,rcx
  40841b:	add    rdx,0xb0
  408422:	add    rcx,0xb8
  408429:	mov    rsi,QWORD PTR [rax]
  40842c:	add    rsi,0x1
  408433:	mov    QWORD PTR [rax],rsi
  408436:	vmovss xmm0,DWORD PTR [rbp-0x4c]
  40843b:	vucomiss xmm0,DWORD PTR [rbp-0x50]
  408440:	mov    QWORD PTR [rbp-0x108],rdx
  408447:	mov    QWORD PTR [rbp-0x110],rcx
  40844e:	jbe    4084ca <UnityAssertEqualFloatArray@@Base+0x51a>
  408454:	mov    rax,QWORD PTR [rbp-0x108]
  40845b:	mov    rcx,QWORD PTR [rax]
  40845e:	add    rcx,0x1
  408465:	mov    QWORD PTR [rax],rcx
  408468:	mov    rdi,QWORD PTR [rbp-0x30]
  40846c:	call   406d40 <UnityAssertBits@@Base+0x200>
  408471:	lea    rdi,[rip+0xaf9a]        # 413412 <UnityStrElement@@Base>
  408478:	call   405480 <UnityPrint@@Base>
  40847d:	mov    edx,DWORD PTR [rbp-0x1c]
  408480:	sub    edx,DWORD PTR [rbp-0x34]
  408483:	sub    edx,0x1
  408486:	mov    edx,edx
  408488:	mov    edi,edx
  40848a:	call   406360 <UnityPrintNumberUnsigned@@Base>
  40848f:	lea    rdi,[rip+0xafba]        # 413450 <UnityStrDelta@@Base>
  408496:	call   405480 <UnityPrint@@Base>
  40849b:	mov    rdi,QWORD PTR [rbp-0x28]
  40849f:	call   406dc0 <UnityAssertBits@@Base+0x280>
  4084a4:	lea    rax,[rip+0x11655]        # 419b00 <Unity@@Base>
  4084ab:	mov    rcx,rax
  4084ae:	add    rcx,0x50
  4084b5:	mov    QWORD PTR [rax+0x40],0x1
  4084bd:	mov    rdi,rcx
  4084c0:	mov    esi,0x1
  4084c5:	call   403200 <longjmp@plt>
  4084ca:	mov    rax,QWORD PTR [rbp-0x110]
  4084d1:	lea    rcx,[rip+0x10588]        # 418a60 <__bss_start@@Base+0x908>
  4084d8:	add    rcx,0xc0
  4084df:	mov    rdx,QWORD PTR [rax]
  4084e2:	add    rdx,0x1
  4084e9:	mov    QWORD PTR [rax],rdx
  4084ec:	mov    rax,QWORD PTR [rbp-0x40]
  4084f0:	add    rax,0x4
  4084f6:	mov    QWORD PTR [rbp-0x40],rax
  4084fa:	mov    rax,QWORD PTR [rbp-0x48]
  4084fe:	add    rax,0x4
  408504:	mov    QWORD PTR [rbp-0x48],rax
  408508:	mov    QWORD PTR [rbp-0xd0],rcx
  40850f:	jmp    40823c <UnityAssertEqualFloatArray@@Base+0x28c>
  408514:	mov    rax,QWORD PTR [rbp-0xa0]
  40851b:	mov    rcx,QWORD PTR [rax]
  40851e:	add    rcx,0x1
  408525:	mov    QWORD PTR [rax],rcx
  408528:	mov    rax,QWORD PTR [rip+0x105f9]        # 418b28 <__bss_start@@Base+0x9d0>
  40852f:	add    rax,0x1
  408535:	mov    QWORD PTR [rip+0x105ec],rax        # 418b28 <__bss_start@@Base+0x9d0>
  40853c:	add    rsp,0x108
  408543:	pop    rbx
  408544:	pop    rbp
  408545:	ret    
  408546:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000408550 <UnityAssertFloatsWithin@@Base>:
  408550:	push   rbp
  408551:	mov    rbp,rsp
  408554:	sub    rsp,0xa0
  40855b:	lea    rax,[rip+0x105ce]        # 418b30 <__bss_start@@Base+0x9d8>
  408562:	vmovss DWORD PTR [rbp-0x2c],xmm0
  408567:	vmovss DWORD PTR [rbp-0x30],xmm1
  40856c:	vmovss DWORD PTR [rbp-0x34],xmm2
  408571:	mov    QWORD PTR [rbp-0x40],rdi
  408575:	mov    QWORD PTR [rbp-0x48],rsi
  408579:	mov    QWORD PTR [rbp-0x50],rax
  40857d:	mov    rax,QWORD PTR [rbp-0x50]
  408581:	lea    rcx,[rip+0x105a8]        # 418b30 <__bss_start@@Base+0x9d8>
  408588:	mov    rdx,rcx
  40858b:	add    rdx,0x8
  408592:	add    rcx,0x10
  408599:	lea    rsi,[rip+0x11560]        # 419b00 <Unity@@Base>
  4085a0:	mov    rdi,QWORD PTR [rax]
  4085a3:	add    rdi,0x1
  4085aa:	mov    QWORD PTR [rax],rdi
  4085ad:	vmovss xmm0,DWORD PTR [rbp-0x2c]
  4085b2:	vmovss DWORD PTR [rbp-0x4],xmm0
  4085b7:	vmovss xmm1,DWORD PTR [rbp-0x30]
  4085bc:	vmovss DWORD PTR [rbp-0x8],xmm1
  4085c1:	vmovss xmm2,DWORD PTR [rbp-0x34]
  4085c6:	vmovss DWORD PTR [rbp-0xc],xmm2
  4085cb:	mov    rax,QWORD PTR [rbp-0x40]
  4085cf:	mov    QWORD PTR [rbp-0x18],rax
  4085d3:	mov    rdi,QWORD PTR [rbp-0x48]
  4085d7:	mov    QWORD PTR [rbp-0x20],rdi
  4085db:	vmovss xmm3,DWORD PTR [rbp-0xc]
  4085e0:	vsubss xmm3,xmm3,DWORD PTR [rbp-0x8]
  4085e5:	vmovss DWORD PTR [rbp-0x24],xmm3
  4085ea:	vmovss xmm3,DWORD PTR [rbp-0x4]
  4085ef:	vmovss DWORD PTR [rbp-0x28],xmm3
  4085f4:	cmp    QWORD PTR [rsi+0x40],0x0
  4085f9:	mov    QWORD PTR [rbp-0x58],rcx
  4085fd:	mov    QWORD PTR [rbp-0x60],rdx
  408601:	jne    40864a <UnityAssertFloatsWithin@@Base+0xfa>
  408607:	mov    rax,QWORD PTR [rbp-0x58]
  40860b:	lea    rcx,[rip+0x1051e]        # 418b30 <__bss_start@@Base+0x9d8>
  408612:	mov    rdx,rcx
  408615:	add    rdx,0x18
  40861c:	add    rcx,0x20
  408623:	lea    rsi,[rip+0x114d6]        # 419b00 <Unity@@Base>
  40862a:	mov    rdi,QWORD PTR [rax]
  40862d:	add    rdi,0x1
  408634:	mov    QWORD PTR [rax],rdi
  408637:	cmp    QWORD PTR [rsi+0x48],0x0
  40863c:	mov    QWORD PTR [rbp-0x60],rdx
  408640:	mov    QWORD PTR [rbp-0x68],rcx
  408644:	je     408672 <UnityAssertFloatsWithin@@Base+0x122>
  40864a:	mov    rax,QWORD PTR [rbp-0x60]
  40864e:	lea    rcx,[rip+0x104db]        # 418b30 <__bss_start@@Base+0x9d8>
  408655:	add    rcx,0x28
  40865c:	mov    rdx,QWORD PTR [rax]
  40865f:	add    rdx,0x1
  408666:	mov    QWORD PTR [rax],rdx
  408669:	mov    QWORD PTR [rbp-0x70],rcx
  40866d:	jmp    408856 <UnityAssertFloatsWithin@@Base+0x306>
  408672:	mov    rax,QWORD PTR [rbp-0x68]
  408676:	lea    rcx,[rip+0x104b3]        # 418b30 <__bss_start@@Base+0x9d8>
  40867d:	mov    rdx,rcx
  408680:	add    rdx,0x30
  408687:	add    rcx,0x38
  40868e:	mov    rsi,QWORD PTR [rax]
  408691:	add    rsi,0x1
  408698:	mov    QWORD PTR [rax],rsi
  40869b:	vxorps xmm0,xmm0,xmm0
  40869f:	vucomiss xmm0,DWORD PTR [rbp-0x24]
  4086a4:	mov    QWORD PTR [rbp-0x78],rdx
  4086a8:	mov    QWORD PTR [rbp-0x80],rcx
  4086ac:	jbe    4086e3 <UnityAssertFloatsWithin@@Base+0x193>
  4086b2:	mov    rax,QWORD PTR [rbp-0x78]
  4086b6:	lea    rcx,[rip+0x10473]        # 418b30 <__bss_start@@Base+0x9d8>
  4086bd:	add    rcx,0x40
  4086c4:	mov    rdx,QWORD PTR [rax]
  4086c7:	add    rdx,0x1
  4086ce:	mov    QWORD PTR [rax],rdx
  4086d1:	vxorps xmm0,xmm0,xmm0
  4086d5:	vsubss xmm0,xmm0,DWORD PTR [rbp-0x24]
  4086da:	vmovss DWORD PTR [rbp-0x24],xmm0
  4086df:	mov    QWORD PTR [rbp-0x80],rcx
  4086e3:	mov    rax,QWORD PTR [rbp-0x80]
  4086e7:	lea    rcx,[rip+0x10442]        # 418b30 <__bss_start@@Base+0x9d8>
  4086ee:	mov    rdx,rcx
  4086f1:	add    rdx,0x48
  4086f8:	add    rcx,0x50
  4086ff:	mov    rsi,QWORD PTR [rax]
  408702:	add    rsi,0x1
  408709:	mov    QWORD PTR [rax],rsi
  40870c:	vxorps xmm0,xmm0,xmm0
  408710:	vucomiss xmm0,DWORD PTR [rbp-0x28]
  408715:	mov    QWORD PTR [rbp-0x88],rdx
  40871c:	mov    QWORD PTR [rbp-0x90],rcx
  408723:	jbe    408760 <UnityAssertFloatsWithin@@Base+0x210>
  408729:	mov    rax,QWORD PTR [rbp-0x88]
  408730:	lea    rcx,[rip+0x103f9]        # 418b30 <__bss_start@@Base+0x9d8>
  408737:	add    rcx,0x58
  40873e:	mov    rdx,QWORD PTR [rax]
  408741:	add    rdx,0x1
  408748:	mov    QWORD PTR [rax],rdx
  40874b:	vxorps xmm0,xmm0,xmm0
  40874f:	vsubss xmm0,xmm0,DWORD PTR [rbp-0x28]
  408754:	vmovss DWORD PTR [rbp-0x28],xmm0
  408759:	mov    QWORD PTR [rbp-0x90],rcx
  408760:	mov    rax,QWORD PTR [rbp-0x90]
  408767:	lea    rcx,[rip+0x103c2]        # 418b30 <__bss_start@@Base+0x9d8>
  40876e:	mov    rdx,rcx
  408771:	add    rdx,0x60
  408778:	add    rcx,0x68
  40877f:	mov    rsi,QWORD PTR [rax]
  408782:	add    rsi,0x1
  408789:	mov    QWORD PTR [rax],rsi
  40878c:	vxorps xmm0,xmm0,xmm0
  408790:	vmulss xmm1,xmm0,DWORD PTR [rbp-0x24]
  408795:	vucomiss xmm1,xmm0
  408799:	mov    QWORD PTR [rbp-0x98],rcx
  4087a0:	mov    QWORD PTR [rbp-0xa0],rdx
  4087a7:	jne    4087fe <UnityAssertFloatsWithin@@Base+0x2ae>
  4087ad:	jp     4087fe <UnityAssertFloatsWithin@@Base+0x2ae>
  4087b3:	mov    rax,QWORD PTR [rbp-0x98]
  4087ba:	lea    rcx,[rip+0x1036f]        # 418b30 <__bss_start@@Base+0x9d8>
  4087c1:	mov    rdx,rcx
  4087c4:	add    rdx,0x70
  4087cb:	add    rcx,0x78
  4087d2:	mov    rsi,QWORD PTR [rax]
  4087d5:	add    rsi,0x1
  4087dc:	mov    QWORD PTR [rax],rsi
  4087df:	vmovss xmm0,DWORD PTR [rbp-0x28]
  4087e4:	vmovss xmm1,DWORD PTR [rbp-0x24]
  4087e9:	vucomiss xmm1,xmm0
  4087ed:	mov    QWORD PTR [rbp-0xa0],rdx
  4087f4:	mov    QWORD PTR [rbp-0x70],rcx
  4087f8:	jbe    408856 <UnityAssertFloatsWithin@@Base+0x306>
  4087fe:	mov    rax,QWORD PTR [rbp-0xa0]
  408805:	mov    rcx,QWORD PTR [rax]
  408808:	add    rcx,0x1
  40880f:	mov    QWORD PTR [rax],rcx
  408812:	mov    rdi,QWORD PTR [rbp-0x20]
  408816:	call   406d40 <UnityAssertBits@@Base+0x200>
  40881b:	lea    rdi,[rip+0xac2e]        # 413450 <UnityStrDelta@@Base>
  408822:	call   405480 <UnityPrint@@Base>
  408827:	mov    rdi,QWORD PTR [rbp-0x18]
  40882b:	call   406dc0 <UnityAssertBits@@Base+0x280>
  408830:	lea    rax,[rip+0x112c9]        # 419b00 <Unity@@Base>
  408837:	mov    rcx,rax
  40883a:	add    rcx,0x50
  408841:	mov    QWORD PTR [rax+0x40],0x1
  408849:	mov    rdi,rcx
  40884c:	mov    esi,0x1
  408851:	call   403200 <longjmp@plt>
  408856:	mov    rax,QWORD PTR [rbp-0x70]
  40885a:	mov    rcx,QWORD PTR [rax]
  40885d:	add    rcx,0x1
  408864:	mov    QWORD PTR [rax],rcx
  408867:	mov    rax,QWORD PTR [rip+0x10342]        # 418bb0 <__bss_start@@Base+0xa58>
  40886e:	add    rax,0x1
  408874:	mov    QWORD PTR [rip+0x10335],rax        # 418bb0 <__bss_start@@Base+0xa58>
  40887b:	add    rsp,0xa0
  408882:	pop    rbp
  408883:	ret    
  408884:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40888e:	xchg   ax,ax

0000000000408890 <UnityAssertFloatSpecial@@Base>:
  408890:	push   rbp
  408891:	mov    rbp,rsp
  408894:	sub    rsp,0x140
  40889b:	lea    rax,[rip+0x1031e]        # 418bc0 <__bss_start@@Base+0xa68>
  4088a2:	vmovss DWORD PTR [rbp-0x5c],xmm0
  4088a7:	mov    QWORD PTR [rbp-0x68],rdi
  4088ab:	mov    QWORD PTR [rbp-0x70],rsi
  4088af:	mov    DWORD PTR [rbp-0x74],edx
  4088b2:	mov    QWORD PTR [rbp-0x80],rax
  4088b6:	mov    rax,QWORD PTR [rbp-0x80]
  4088ba:	lea    rcx,[rip+0x102ff]        # 418bc0 <__bss_start@@Base+0xa68>
  4088c1:	mov    rdx,rcx
  4088c4:	add    rdx,0x8
  4088cb:	add    rcx,0x10
  4088d2:	lea    rsi,[rip+0x11227]        # 419b00 <Unity@@Base>
  4088d9:	mov    rdi,QWORD PTR [rax]
  4088dc:	add    rdi,0x1
  4088e3:	mov    QWORD PTR [rax],rdi
  4088e6:	vmovss xmm0,DWORD PTR [rbp-0x5c]
  4088eb:	vmovss DWORD PTR [rbp-0x4],xmm0
  4088f0:	mov    rax,QWORD PTR [rbp-0x68]
  4088f4:	mov    QWORD PTR [rbp-0x10],rax
  4088f8:	mov    rdi,QWORD PTR [rbp-0x70]
  4088fc:	mov    QWORD PTR [rbp-0x18],rdi
  408900:	mov    r8d,DWORD PTR [rbp-0x74]
  408904:	mov    DWORD PTR [rbp-0x1c],r8d
  408908:	mov    r9,QWORD PTR [rip+0xe781]        # 417090 <UnitySizeMask@@Base+0x3a90>
  40890f:	mov    QWORD PTR [rbp-0x40],r9
  408913:	mov    r9,QWORD PTR [rip+0xe77e]        # 417098 <UnitySizeMask@@Base+0x3a98>
  40891a:	mov    QWORD PTR [rbp-0x38],r9
  40891e:	mov    r9,QWORD PTR [rip+0xe77b]        # 4170a0 <UnitySizeMask@@Base+0x3aa0>
  408925:	mov    QWORD PTR [rbp-0x30],r9
  408929:	mov    r9,QWORD PTR [rip+0xe778]        # 4170a8 <UnitySizeMask@@Base+0x3aa8>
  408930:	mov    QWORD PTR [rbp-0x28],r9
  408934:	mov    r10d,DWORD PTR [rbp-0x1c]
  408938:	mov    r9d,r10d
  40893b:	and    r9,0x1
  408942:	mov    QWORD PTR [rbp-0x48],r9
  408946:	cmp    QWORD PTR [rbp-0x48],0x0
  40894b:	setne  r11b
  40894f:	xor    r11b,0xff
  408953:	and    r11b,0x1
  408957:	movzx  r10d,r11b
  40895b:	movsxd r9,r10d
  40895e:	mov    QWORD PTR [rbp-0x50],r9
  408962:	mov    r10d,DWORD PTR [rbp-0x1c]
  408966:	shr    r10d,0x1
  40896a:	mov    r10d,r10d
  40896d:	mov    r9d,r10d
  408970:	mov    QWORD PTR [rbp-0x58],r9
  408974:	cmp    QWORD PTR [rsi+0x40],0x0
  408979:	mov    QWORD PTR [rbp-0x88],rcx
  408980:	mov    QWORD PTR [rbp-0x90],rdx
  408987:	jne    4089d9 <UnityAssertFloatSpecial@@Base+0x149>
  40898d:	mov    rax,QWORD PTR [rbp-0x88]
  408994:	lea    rcx,[rip+0x10225]        # 418bc0 <__bss_start@@Base+0xa68>
  40899b:	mov    rdx,rcx
  40899e:	add    rdx,0x18
  4089a5:	add    rcx,0x20
  4089ac:	lea    rsi,[rip+0x1114d]        # 419b00 <Unity@@Base>
  4089b3:	mov    rdi,QWORD PTR [rax]
  4089b6:	add    rdi,0x1
  4089bd:	mov    QWORD PTR [rax],rdi
  4089c0:	cmp    QWORD PTR [rsi+0x48],0x0
  4089c5:	mov    QWORD PTR [rbp-0x90],rdx
  4089cc:	mov    QWORD PTR [rbp-0x98],rcx
  4089d3:	je     408a07 <UnityAssertFloatSpecial@@Base+0x177>
  4089d9:	mov    rax,QWORD PTR [rbp-0x90]
  4089e0:	lea    rcx,[rip+0x101d9]        # 418bc0 <__bss_start@@Base+0xa68>
  4089e7:	add    rcx,0x28
  4089ee:	mov    rdx,QWORD PTR [rax]
  4089f1:	add    rdx,0x1
  4089f8:	mov    QWORD PTR [rax],rdx
  4089fb:	mov    QWORD PTR [rbp-0xa0],rcx
  408a02:	jmp    408f6b <UnityAssertFloatSpecial@@Base+0x6db>
  408a07:	mov    rax,QWORD PTR [rbp-0x98]
  408a0e:	mov    rcx,QWORD PTR [rax]
  408a11:	inc    rcx
  408a14:	mov    QWORD PTR [rax],rcx
  408a17:	mov    edx,DWORD PTR [rbp-0x1c]
  408a1a:	mov    eax,edx
  408a1c:	lea    rcx,[rip+0x1020d]        # 418c30 <__bss_start@@Base+0xad8>
  408a23:	lea    rsi,[rip+0x101f6]        # 418c20 <__bss_start@@Base+0xac8>
  408a2a:	lea    rdi,[rip+0x101df]        # 418c10 <__bss_start@@Base+0xab8>
  408a31:	lea    r8,[rip+0x101c8]        # 418c00 <__bss_start@@Base+0xaa8>
  408a38:	lea    r9,[rip+0x101b1]        # 418bf0 <__bss_start@@Base+0xa98>
  408a3f:	mov    r10,rax
  408a42:	sub    r10,0x7
  408a46:	mov    QWORD PTR [rbp-0xa8],rax
  408a4d:	mov    QWORD PTR [rbp-0xb0],rcx
  408a54:	mov    QWORD PTR [rbp-0xb8],rsi
  408a5b:	mov    QWORD PTR [rbp-0xc0],rdi
  408a62:	mov    QWORD PTR [rbp-0xc8],r8
  408a69:	mov    QWORD PTR [rbp-0xd0],r9
  408a70:	ja     408d77 <UnityAssertFloatSpecial@@Base+0x4e7>
  408a76:	lea    rax,[rip+0xa943]        # 4133c0 <_IO_stdin_used@@Base+0x3c0>
  408a7d:	mov    rcx,QWORD PTR [rbp-0xa8]
  408a84:	movsxd rdx,DWORD PTR [rax+rcx*4]
  408a88:	add    rdx,rax
  408a8b:	mov    rax,QWORD PTR [rbp-0xc8]
  408a92:	mov    rsi,QWORD PTR [rbp-0xc0]
  408a99:	mov    rdi,QWORD PTR [rbp-0xb8]
  408aa0:	mov    r8,QWORD PTR [rbp-0xb0]
  408aa7:	mov    QWORD PTR [rbp-0xd8],rax
  408aae:	mov    QWORD PTR [rbp-0xe0],rsi
  408ab5:	mov    QWORD PTR [rbp-0xe8],rdi
  408abc:	mov    QWORD PTR [rbp-0xf0],r8
  408ac3:	jmp    rdx
  408ac5:	mov    rax,QWORD PTR [rbp-0xd8]
  408acc:	lea    rcx,[rip+0x100ed]        # 418bc0 <__bss_start@@Base+0xa68>
  408ad3:	add    rcx,0x78
  408ada:	xor    edx,edx
  408adc:	vmovss xmm0,DWORD PTR [rip+0xa8d0]        # 4133b4 <_IO_stdin_used@@Base+0x3b4>
  408ae4:	mov    rsi,QWORD PTR [rax]
  408ae7:	add    rsi,0x1
  408aee:	mov    QWORD PTR [rax],rsi
  408af1:	vmovss xmm1,DWORD PTR [rbp-0x4]
  408af6:	vmovaps xmm2,xmm1
  408afa:	vbroadcastss xmm3,DWORD PTR [rip+0xa8b5]        # 4133b8 <_IO_stdin_used@@Base+0x3b8>
  408b03:	vpand  xmm2,xmm2,xmm3
  408b07:	vmovd  edi,xmm1
  408b0b:	cmp    edi,0x0
  408b0e:	mov    edi,0xffffffff
  408b13:	mov    r8d,0x1
  408b19:	mov    r9d,r8d
  408b1c:	cmovl  r9d,edi
  408b20:	vucomiss xmm2,xmm0
  408b24:	setnp  r10b
  408b28:	sete   r11b
  408b2c:	test   r11b,r10b
  408b2f:	mov    edi,edx
  408b31:	cmovne edi,r9d
  408b35:	vmovss xmm0,DWORD PTR [rbp-0x4]
  408b3a:	vxorps xmm1,xmm1,xmm1
  408b3e:	vucomiss xmm0,xmm1
  408b42:	cmova  edx,r8d
  408b46:	and    edi,edx
  408b48:	movsxd rax,edi
  408b4b:	mov    QWORD PTR [rbp-0x50],rax
  408b4f:	mov    QWORD PTR [rbp-0xf8],rcx
  408b56:	jmp    408db3 <UnityAssertFloatSpecial@@Base+0x523>
  408b5b:	mov    rax,QWORD PTR [rbp-0xe0]
  408b62:	lea    rcx,[rip+0x10057]        # 418bc0 <__bss_start@@Base+0xa68>
  408b69:	add    rcx,0x80
  408b70:	xor    edx,edx
  408b72:	vmovss xmm0,DWORD PTR [rip+0xa83a]        # 4133b4 <_IO_stdin_used@@Base+0x3b4>
  408b7a:	mov    rsi,QWORD PTR [rax]
  408b7d:	add    rsi,0x1
  408b84:	mov    QWORD PTR [rax],rsi
  408b87:	vmovss xmm1,DWORD PTR [rbp-0x4]
  408b8c:	vmovaps xmm2,xmm1
  408b90:	vbroadcastss xmm3,DWORD PTR [rip+0xa81f]        # 4133b8 <_IO_stdin_used@@Base+0x3b8>
  408b99:	vpand  xmm2,xmm2,xmm3
  408b9d:	vmovd  edi,xmm1
  408ba1:	cmp    edi,0x0
  408ba4:	mov    edi,0xffffffff
  408ba9:	mov    r8d,0x1
  408baf:	mov    r9d,r8d
  408bb2:	cmovl  r9d,edi
  408bb6:	vucomiss xmm2,xmm0
  408bba:	setnp  r10b
  408bbe:	sete   r11b
  408bc2:	test   r11b,r10b
  408bc5:	mov    edi,edx
  408bc7:	cmovne edi,r9d
  408bcb:	vmovss xmm0,DWORD PTR [rbp-0x4]
  408bd0:	vxorps xmm1,xmm1,xmm1
  408bd4:	vucomiss xmm1,xmm0
  408bd8:	cmova  edx,r8d
  408bdc:	and    edi,edx
  408bde:	movsxd rax,edi
  408be1:	mov    QWORD PTR [rbp-0x50],rax
  408be5:	mov    QWORD PTR [rbp-0xf8],rcx
  408bec:	jmp    408db3 <UnityAssertFloatSpecial@@Base+0x523>
  408bf1:	mov    rax,QWORD PTR [rbp-0xe8]
  408bf8:	lea    rcx,[rip+0xffc1]        # 418bc0 <__bss_start@@Base+0xa68>
  408bff:	add    rcx,0x88
  408c06:	mov    rdx,QWORD PTR [rax]
  408c09:	add    rdx,0x1
  408c10:	mov    QWORD PTR [rax],rdx
  408c13:	vmovss xmm0,DWORD PTR [rbp-0x4]
  408c18:	vucomiss xmm0,xmm0
  408c1c:	setp   sil
  408c20:	and    sil,0x1
  408c24:	movzx  edi,sil
  408c28:	movsxd rax,edi
  408c2b:	mov    QWORD PTR [rbp-0x50],rax
  408c2f:	mov    QWORD PTR [rbp-0xf8],rcx
  408c36:	jmp    408db3 <UnityAssertFloatSpecial@@Base+0x523>
  408c3b:	mov    rax,QWORD PTR [rbp-0xf0]
  408c42:	lea    rcx,[rip+0xff77]        # 418bc0 <__bss_start@@Base+0xa68>
  408c49:	mov    rdx,rcx
  408c4c:	add    rdx,0x90
  408c53:	add    rcx,0x98
  408c5a:	vmovss xmm0,DWORD PTR [rip+0xa752]        # 4133b4 <_IO_stdin_used@@Base+0x3b4>
  408c62:	xor    esi,esi
  408c64:	mov    rdi,QWORD PTR [rax]
  408c67:	add    rdi,0x1
  408c6e:	mov    QWORD PTR [rax],rdi
  408c71:	vmovss xmm1,DWORD PTR [rbp-0x4]
  408c76:	vmovaps xmm2,xmm1
  408c7a:	vbroadcastss xmm3,DWORD PTR [rip+0xa735]        # 4133b8 <_IO_stdin_used@@Base+0x3b8>
  408c83:	vpand  xmm2,xmm2,xmm3
  408c87:	vmovd  r8d,xmm1
  408c8c:	cmp    r8d,0x0
  408c90:	mov    r8d,0xffffffff
  408c96:	mov    r9d,0x1
  408c9c:	cmovl  r9d,r8d
  408ca0:	vucomiss xmm2,xmm0
  408ca4:	setnp  r10b
  408ca8:	sete   r11b
  408cac:	test   r11b,r10b
  408caf:	cmovne esi,r9d
  408cb3:	vmovss xmm0,DWORD PTR [rbp-0x4]
  408cb8:	vucomiss xmm0,xmm0
  408cbc:	setp   r10b
  408cc0:	and    r10b,0x1
  408cc4:	movzx  r8d,r10b
  408cc8:	or     esi,r8d
  408ccb:	cmp    esi,0x0
  408cce:	mov    QWORD PTR [rbp-0x100],rdx
  408cd5:	mov    QWORD PTR [rbp-0x108],rcx
  408cdc:	je     408d18 <UnityAssertFloatSpecial@@Base+0x488>
  408ce2:	mov    rax,QWORD PTR [rbp-0x100]
  408ce9:	lea    rcx,[rip+0xfed0]        # 418bc0 <__bss_start@@Base+0xa68>
  408cf0:	add    rcx,0xa0
  408cf7:	mov    rdx,QWORD PTR [rax]
  408cfa:	add    rdx,0x1
  408d01:	mov    QWORD PTR [rax],rdx
  408d04:	mov    QWORD PTR [rbp-0x50],0x0
  408d0c:	mov    QWORD PTR [rbp-0x110],rcx
  408d13:	jmp    408d49 <UnityAssertFloatSpecial@@Base+0x4b9>
  408d18:	mov    rax,QWORD PTR [rbp-0x108]
  408d1f:	lea    rcx,[rip+0xfe9a]        # 418bc0 <__bss_start@@Base+0xa68>
  408d26:	add    rcx,0xa8
  408d2d:	mov    rdx,QWORD PTR [rax]
  408d30:	add    rdx,0x1
  408d37:	mov    QWORD PTR [rax],rdx
  408d3a:	mov    QWORD PTR [rbp-0x50],0x1
  408d42:	mov    QWORD PTR [rbp-0x110],rcx
  408d49:	mov    rax,QWORD PTR [rbp-0x110]
  408d50:	lea    rcx,[rip+0xfe69]        # 418bc0 <__bss_start@@Base+0xa68>
  408d57:	add    rcx,0xb0
  408d5e:	mov    rdx,QWORD PTR [rax]
  408d61:	add    rdx,0x1
  408d68:	mov    QWORD PTR [rax],rdx
  408d6b:	mov    QWORD PTR [rbp-0xf8],rcx
  408d72:	jmp    408db3 <UnityAssertFloatSpecial@@Base+0x523>
  408d77:	mov    rax,QWORD PTR [rbp-0xd0]
  408d7e:	lea    rcx,[rip+0xfe3b]        # 418bc0 <__bss_start@@Base+0xa68>
  408d85:	add    rcx,0xb8
  408d8c:	lea    rdx,[rip+0xa79d]        # 413530 <UnityStrInvalidFloatTrait@@Base>
  408d93:	mov    rsi,QWORD PTR [rax]
  408d96:	add    rsi,0x1
  408d9d:	mov    QWORD PTR [rax],rsi
  408da0:	mov    QWORD PTR [rbp-0x58],0x0
  408da8:	mov    QWORD PTR [rbp-0x40],rdx
  408dac:	mov    QWORD PTR [rbp-0xf8],rcx
  408db3:	mov    rax,QWORD PTR [rbp-0xf8]
  408dba:	lea    rcx,[rip+0xfdff]        # 418bc0 <__bss_start@@Base+0xa68>
  408dc1:	mov    rdx,rcx
  408dc4:	add    rdx,0xc0
  408dcb:	add    rcx,0xc8
  408dd2:	mov    rsi,QWORD PTR [rax]
  408dd5:	add    rsi,0x1
  408ddc:	mov    QWORD PTR [rax],rsi
  408ddf:	mov    rax,QWORD PTR [rbp-0x50]
  408de3:	cmp    rax,QWORD PTR [rbp-0x48]
  408de7:	mov    QWORD PTR [rbp-0x118],rdx
  408dee:	mov    QWORD PTR [rbp-0xa0],rcx
  408df5:	je     408f6b <UnityAssertFloatSpecial@@Base+0x6db>
  408dfb:	mov    rax,QWORD PTR [rbp-0x118]
  408e02:	mov    rcx,QWORD PTR [rax]
  408e05:	add    rcx,0x1
  408e0c:	mov    QWORD PTR [rax],rcx
  408e0f:	mov    rdi,QWORD PTR [rbp-0x18]
  408e13:	call   406d40 <UnityAssertBits@@Base+0x200>
  408e18:	lea    rdi,[rip+0xa5dd]        # 4133fc <UnityStrExpected@@Base>
  408e1f:	call   405480 <UnityPrint@@Base>
  408e24:	lea    rax,[rip+0xfd95]        # 418bc0 <__bss_start@@Base+0xa68>
  408e2b:	mov    rcx,rax
  408e2e:	add    rcx,0xd0
  408e35:	add    rax,0xd8
  408e3b:	cmp    QWORD PTR [rbp-0x48],0x0
  408e40:	mov    QWORD PTR [rbp-0x120],rax
  408e47:	mov    QWORD PTR [rbp-0x128],rcx
  408e4e:	jne    408e88 <UnityAssertFloatSpecial@@Base+0x5f8>
  408e54:	mov    rax,QWORD PTR [rbp-0x120]
  408e5b:	lea    rdi,[rip+0xa687]        # 4134e9 <UnityStrNot@@Base>
  408e62:	mov    rcx,QWORD PTR [rax]
  408e65:	add    rcx,0x1
  408e6c:	mov    QWORD PTR [rax],rcx
  408e6f:	call   405480 <UnityPrint@@Base>
  408e74:	lea    rax,[rip+0xfd45]        # 418bc0 <__bss_start@@Base+0xa68>
  408e7b:	add    rax,0xe0
  408e81:	mov    QWORD PTR [rbp-0x128],rax
  408e88:	mov    rax,QWORD PTR [rbp-0x128]
  408e8f:	mov    rcx,QWORD PTR [rax]
  408e92:	add    rcx,0x1
  408e99:	mov    QWORD PTR [rax],rcx
  408e9c:	mov    rax,QWORD PTR [rbp-0x58]
  408ea0:	mov    rdi,QWORD PTR [rbp+rax*8-0x40]
  408ea5:	call   405480 <UnityPrint@@Base>
  408eaa:	lea    rdi,[rip+0xa556]        # 413407 <UnityStrWas@@Base>
  408eb1:	call   405480 <UnityPrint@@Base>
  408eb6:	lea    rax,[rip+0xfd03]        # 418bc0 <__bss_start@@Base+0xa68>
  408ebd:	mov    rcx,rax
  408ec0:	add    rcx,0xe8
  408ec7:	add    rax,0xf0
  408ecd:	cmp    QWORD PTR [rbp-0x48],0x0
  408ed2:	mov    QWORD PTR [rbp-0x130],rcx
  408ed9:	mov    QWORD PTR [rbp-0x138],rax
  408ee0:	je     408f1a <UnityAssertFloatSpecial@@Base+0x68a>
  408ee6:	mov    rax,QWORD PTR [rbp-0x130]
  408eed:	lea    rdi,[rip+0xa5f5]        # 4134e9 <UnityStrNot@@Base>
  408ef4:	mov    rcx,QWORD PTR [rax]
  408ef7:	add    rcx,0x1
  408efe:	mov    QWORD PTR [rax],rcx
  408f01:	call   405480 <UnityPrint@@Base>
  408f06:	lea    rax,[rip+0xfcb3]        # 418bc0 <__bss_start@@Base+0xa68>
  408f0d:	add    rax,0xf8
  408f13:	mov    QWORD PTR [rbp-0x138],rax
  408f1a:	mov    rax,QWORD PTR [rbp-0x138]
  408f21:	mov    rcx,QWORD PTR [rax]
  408f24:	add    rcx,0x1
  408f2b:	mov    QWORD PTR [rax],rcx
  408f2e:	mov    rax,QWORD PTR [rbp-0x58]
  408f32:	mov    rdi,QWORD PTR [rbp+rax*8-0x40]
  408f37:	call   405480 <UnityPrint@@Base>
  408f3c:	mov    rdi,QWORD PTR [rbp-0x10]
  408f40:	call   406dc0 <UnityAssertBits@@Base+0x280>
  408f45:	lea    rax,[rip+0x10bb4]        # 419b00 <Unity@@Base>
  408f4c:	mov    rcx,rax
  408f4f:	add    rcx,0x50
  408f56:	mov    QWORD PTR [rax+0x40],0x1
  408f5e:	mov    rdi,rcx
  408f61:	mov    esi,0x1
  408f66:	call   403200 <longjmp@plt>
  408f6b:	mov    rax,QWORD PTR [rbp-0xa0]
  408f72:	mov    rcx,QWORD PTR [rax]
  408f75:	add    rcx,0x1
  408f7c:	mov    QWORD PTR [rax],rcx
  408f7f:	mov    rax,QWORD PTR [rip+0xfd3a]        # 418cc0 <__bss_start@@Base+0xb68>
  408f86:	add    rax,0x1
  408f8c:	mov    QWORD PTR [rip+0xfd2d],rax        # 418cc0 <__bss_start@@Base+0xb68>
  408f93:	add    rsp,0x140
  408f9a:	pop    rbp
  408f9b:	ret    
  408f9c:	nop    DWORD PTR [rax+0x0]

0000000000408fa0 <UnityAssertNumbersWithin@@Base>:
  408fa0:	push   rbp
  408fa1:	mov    rbp,rsp
  408fa4:	sub    rsp,0xe0
  408fab:	lea    rax,[rip+0xfd1e]        # 418cd0 <__bss_start@@Base+0xb78>
  408fb2:	mov    QWORD PTR [rbp-0x38],rdi
  408fb6:	mov    QWORD PTR [rbp-0x40],rsi
  408fba:	mov    QWORD PTR [rbp-0x48],rdx
  408fbe:	mov    QWORD PTR [rbp-0x50],rcx
  408fc2:	mov    QWORD PTR [rbp-0x58],r8
  408fc6:	mov    DWORD PTR [rbp-0x5c],r9d
  408fca:	mov    QWORD PTR [rbp-0x68],rax
  408fce:	mov    rax,QWORD PTR [rbp-0x68]
  408fd2:	lea    rcx,[rip+0xfcf7]        # 418cd0 <__bss_start@@Base+0xb78>
  408fd9:	mov    rdx,rcx
  408fdc:	add    rdx,0x8
  408fe3:	add    rcx,0x10
  408fea:	lea    rsi,[rip+0x10b0f]        # 419b00 <Unity@@Base>
  408ff1:	mov    rdi,QWORD PTR [rax]
  408ff4:	add    rdi,0x1
  408ffb:	mov    QWORD PTR [rax],rdi
  408ffe:	mov    rax,QWORD PTR [rbp-0x38]
  409002:	mov    QWORD PTR [rbp-0x8],rax
  409006:	mov    rdi,QWORD PTR [rbp-0x40]
  40900a:	mov    QWORD PTR [rbp-0x10],rdi
  40900e:	mov    r8,QWORD PTR [rbp-0x48]
  409012:	mov    QWORD PTR [rbp-0x18],r8
  409016:	mov    r9,QWORD PTR [rbp-0x50]
  40901a:	mov    QWORD PTR [rbp-0x20],r9
  40901e:	mov    r10,QWORD PTR [rbp-0x58]
  409022:	mov    QWORD PTR [rbp-0x28],r10
  409026:	mov    r11d,DWORD PTR [rbp-0x5c]
  40902a:	mov    DWORD PTR [rbp-0x2c],r11d
  40902e:	cmp    QWORD PTR [rsi+0x40],0x0
  409033:	mov    QWORD PTR [rbp-0x70],rcx
  409037:	mov    QWORD PTR [rbp-0x78],rdx
  40903b:	jne    409084 <UnityAssertNumbersWithin@@Base+0xe4>
  409041:	mov    rax,QWORD PTR [rbp-0x70]
  409045:	lea    rcx,[rip+0xfc84]        # 418cd0 <__bss_start@@Base+0xb78>
  40904c:	mov    rdx,rcx
  40904f:	add    rdx,0x18
  409056:	add    rcx,0x20
  40905d:	lea    rsi,[rip+0x10a9c]        # 419b00 <Unity@@Base>
  409064:	mov    rdi,QWORD PTR [rax]
  409067:	add    rdi,0x1
  40906e:	mov    QWORD PTR [rax],rdi
  409071:	cmp    QWORD PTR [rsi+0x48],0x0
  409076:	mov    QWORD PTR [rbp-0x78],rdx
  40907a:	mov    QWORD PTR [rbp-0x80],rcx
  40907e:	je     4090af <UnityAssertNumbersWithin@@Base+0x10f>
  409084:	mov    rax,QWORD PTR [rbp-0x78]
  409088:	lea    rcx,[rip+0xfc41]        # 418cd0 <__bss_start@@Base+0xb78>
  40908f:	add    rcx,0x28
  409096:	mov    rdx,QWORD PTR [rax]
  409099:	add    rdx,0x1
  4090a0:	mov    QWORD PTR [rax],rdx
  4090a3:	mov    QWORD PTR [rbp-0x88],rcx
  4090aa:	jmp    409402 <UnityAssertNumbersWithin@@Base+0x462>
  4090af:	mov    rax,QWORD PTR [rbp-0x80]
  4090b3:	lea    rcx,[rip+0xfc16]        # 418cd0 <__bss_start@@Base+0xb78>
  4090ba:	mov    rdx,rcx
  4090bd:	add    rdx,0x30
  4090c4:	add    rcx,0x38
  4090cb:	mov    rsi,QWORD PTR [rax]
  4090ce:	add    rsi,0x1
  4090d5:	mov    QWORD PTR [rax],rsi
  4090d8:	mov    edi,DWORD PTR [rbp-0x2c]
  4090db:	and    edi,0x10
  4090de:	cmp    edi,0x10
  4090e1:	mov    QWORD PTR [rbp-0x90],rdx
  4090e8:	mov    QWORD PTR [rbp-0x98],rcx
  4090ef:	jne    40920e <UnityAssertNumbersWithin@@Base+0x26e>
  4090f5:	mov    rax,QWORD PTR [rbp-0x90]
  4090fc:	lea    rcx,[rip+0xfbcd]        # 418cd0 <__bss_start@@Base+0xb78>
  409103:	mov    rdx,rcx
  409106:	add    rdx,0x40
  40910d:	add    rcx,0x48
  409114:	mov    rsi,QWORD PTR [rax]
  409117:	add    rsi,0x1
  40911e:	mov    QWORD PTR [rax],rsi
  409121:	mov    rax,QWORD PTR [rbp-0x18]
  409125:	cmp    rax,QWORD PTR [rbp-0x10]
  409129:	mov    QWORD PTR [rbp-0xa0],rdx
  409130:	mov    QWORD PTR [rbp-0xa8],rcx
  409137:	jle    409191 <UnityAssertNumbersWithin@@Base+0x1f1>
  40913d:	mov    rax,QWORD PTR [rbp-0xa0]
  409144:	lea    rcx,[rip+0xfb85]        # 418cd0 <__bss_start@@Base+0xb78>
  40914b:	add    rcx,0x50
  409152:	lea    rdx,[rip+0x109a7]        # 419b00 <Unity@@Base>
  409159:	mov    rsi,QWORD PTR [rax]
  40915c:	add    rsi,0x1
  409163:	mov    QWORD PTR [rax],rsi
  409166:	mov    rax,QWORD PTR [rbp-0x18]
  40916a:	sub    rax,QWORD PTR [rbp-0x10]
  40916e:	cmp    rax,QWORD PTR [rbp-0x8]
  409172:	seta   dil
  409176:	and    dil,0x1
  40917a:	movzx  r8d,dil
  40917e:	movsxd rax,r8d
  409181:	mov    QWORD PTR [rdx+0x40],rax
  409185:	mov    QWORD PTR [rbp-0xb0],rcx
  40918c:	jmp    4091e0 <UnityAssertNumbersWithin@@Base+0x240>
  409191:	mov    rax,QWORD PTR [rbp-0xa8]
  409198:	lea    rcx,[rip+0xfb31]        # 418cd0 <__bss_start@@Base+0xb78>
  40919f:	add    rcx,0x58
  4091a6:	lea    rdx,[rip+0x10953]        # 419b00 <Unity@@Base>
  4091ad:	mov    rsi,QWORD PTR [rax]
  4091b0:	add    rsi,0x1
  4091b7:	mov    QWORD PTR [rax],rsi
  4091ba:	mov    rax,QWORD PTR [rbp-0x10]
  4091be:	sub    rax,QWORD PTR [rbp-0x18]
  4091c2:	cmp    rax,QWORD PTR [rbp-0x8]
  4091c6:	seta   dil
  4091ca:	and    dil,0x1
  4091ce:	movzx  r8d,dil
  4091d2:	movsxd rax,r8d
  4091d5:	mov    QWORD PTR [rdx+0x40],rax
  4091d9:	mov    QWORD PTR [rbp-0xb0],rcx
  4091e0:	mov    rax,QWORD PTR [rbp-0xb0]
  4091e7:	lea    rcx,[rip+0xfae2]        # 418cd0 <__bss_start@@Base+0xb78>
  4091ee:	add    rcx,0x60
  4091f5:	mov    rdx,QWORD PTR [rax]
  4091f8:	add    rdx,0x1
  4091ff:	mov    QWORD PTR [rax],rdx
  409202:	mov    QWORD PTR [rbp-0xb8],rcx
  409209:	jmp    409322 <UnityAssertNumbersWithin@@Base+0x382>
  40920e:	mov    rax,QWORD PTR [rbp-0x98]
  409215:	lea    rcx,[rip+0xfab4]        # 418cd0 <__bss_start@@Base+0xb78>
  40921c:	mov    rdx,rcx
  40921f:	add    rdx,0x68
  409226:	add    rcx,0x70
  40922d:	mov    rsi,QWORD PTR [rax]
  409230:	add    rsi,0x1
  409237:	mov    QWORD PTR [rax],rsi
  40923a:	mov    rax,QWORD PTR [rbp-0x18]
  40923e:	cmp    rax,QWORD PTR [rbp-0x10]
  409242:	mov    QWORD PTR [rbp-0xc0],rdx
  409249:	mov    QWORD PTR [rbp-0xc8],rcx
  409250:	jbe    4092aa <UnityAssertNumbersWithin@@Base+0x30a>
  409256:	mov    rax,QWORD PTR [rbp-0xc0]
  40925d:	lea    rcx,[rip+0xfa6c]        # 418cd0 <__bss_start@@Base+0xb78>
  409264:	add    rcx,0x78
  40926b:	lea    rdx,[rip+0x1088e]        # 419b00 <Unity@@Base>
  409272:	mov    rsi,QWORD PTR [rax]
  409275:	add    rsi,0x1
  40927c:	mov    QWORD PTR [rax],rsi
  40927f:	mov    rax,QWORD PTR [rbp-0x18]
  409283:	sub    rax,QWORD PTR [rbp-0x10]
  409287:	cmp    rax,QWORD PTR [rbp-0x8]
  40928b:	seta   dil
  40928f:	and    dil,0x1
  409293:	movzx  r8d,dil
  409297:	movsxd rax,r8d
  40929a:	mov    QWORD PTR [rdx+0x40],rax
  40929e:	mov    QWORD PTR [rbp-0xd0],rcx
  4092a5:	jmp    4092f9 <UnityAssertNumbersWithin@@Base+0x359>
  4092aa:	mov    rax,QWORD PTR [rbp-0xc8]
  4092b1:	lea    rcx,[rip+0xfa18]        # 418cd0 <__bss_start@@Base+0xb78>
  4092b8:	add    rcx,0x80
  4092bf:	lea    rdx,[rip+0x1083a]        # 419b00 <Unity@@Base>
  4092c6:	mov    rsi,QWORD PTR [rax]
  4092c9:	add    rsi,0x1
  4092d0:	mov    QWORD PTR [rax],rsi
  4092d3:	mov    rax,QWORD PTR [rbp-0x10]
  4092d7:	sub    rax,QWORD PTR [rbp-0x18]
  4092db:	cmp    rax,QWORD PTR [rbp-0x8]
  4092df:	seta   dil
  4092e3:	and    dil,0x1
  4092e7:	movzx  r8d,dil
  4092eb:	movsxd rax,r8d
  4092ee:	mov    QWORD PTR [rdx+0x40],rax
  4092f2:	mov    QWORD PTR [rbp-0xd0],rcx
  4092f9:	mov    rax,QWORD PTR [rbp-0xd0]
  409300:	lea    rcx,[rip+0xf9c9]        # 418cd0 <__bss_start@@Base+0xb78>
  409307:	add    rcx,0x88
  40930e:	mov    rdx,QWORD PTR [rax]
  409311:	add    rdx,0x1
  409318:	mov    QWORD PTR [rax],rdx
  40931b:	mov    QWORD PTR [rbp-0xb8],rcx
  409322:	mov    rax,QWORD PTR [rbp-0xb8]
  409329:	lea    rcx,[rip+0xf9a0]        # 418cd0 <__bss_start@@Base+0xb78>
  409330:	mov    rdx,rcx
  409333:	add    rdx,0x90
  40933a:	add    rcx,0x98
  409341:	lea    rsi,[rip+0x107b8]        # 419b00 <Unity@@Base>
  409348:	mov    rdi,QWORD PTR [rax]
  40934b:	add    rdi,0x1
  409352:	mov    QWORD PTR [rax],rdi
  409355:	cmp    QWORD PTR [rsi+0x40],0x0
  40935a:	mov    QWORD PTR [rbp-0xd8],rdx
  409361:	mov    QWORD PTR [rbp-0x88],rcx
  409368:	je     409402 <UnityAssertNumbersWithin@@Base+0x462>
  40936e:	mov    rax,QWORD PTR [rbp-0xd8]
  409375:	mov    rcx,QWORD PTR [rax]
  409378:	add    rcx,0x1
  40937f:	mov    QWORD PTR [rax],rcx
  409382:	mov    rdi,QWORD PTR [rbp-0x28]
  409386:	call   406d40 <UnityAssertBits@@Base+0x200>
  40938b:	lea    rdi,[rip+0xa0be]        # 413450 <UnityStrDelta@@Base>
  409392:	call   405480 <UnityPrint@@Base>
  409397:	mov    rdi,QWORD PTR [rbp-0x8]
  40939b:	mov    esi,DWORD PTR [rbp-0x2c]
  40939e:	call   405e80 <UnityPrintNumberByStyle@@Base>
  4093a3:	lea    rdi,[rip+0xa052]        # 4133fc <UnityStrExpected@@Base>
  4093aa:	call   405480 <UnityPrint@@Base>
  4093af:	mov    rdi,QWORD PTR [rbp-0x10]
  4093b3:	mov    esi,DWORD PTR [rbp-0x2c]
  4093b6:	call   405e80 <UnityPrintNumberByStyle@@Base>
  4093bb:	lea    rdi,[rip+0xa045]        # 413407 <UnityStrWas@@Base>
  4093c2:	call   405480 <UnityPrint@@Base>
  4093c7:	mov    rdi,QWORD PTR [rbp-0x18]
  4093cb:	mov    esi,DWORD PTR [rbp-0x2c]
  4093ce:	call   405e80 <UnityPrintNumberByStyle@@Base>
  4093d3:	mov    rdi,QWORD PTR [rbp-0x20]
  4093d7:	call   406dc0 <UnityAssertBits@@Base+0x280>
  4093dc:	lea    rax,[rip+0x1071d]        # 419b00 <Unity@@Base>
  4093e3:	mov    rcx,rax
  4093e6:	add    rcx,0x50
  4093ed:	mov    QWORD PTR [rax+0x40],0x1
  4093f5:	mov    rdi,rcx
  4093f8:	mov    esi,0x1
  4093fd:	call   403200 <longjmp@plt>
  409402:	mov    rax,QWORD PTR [rbp-0x88]
  409409:	mov    rcx,QWORD PTR [rax]
  40940c:	add    rcx,0x1
  409413:	mov    QWORD PTR [rax],rcx
  409416:	mov    rax,QWORD PTR [rip+0xf953]        # 418d70 <__bss_start@@Base+0xc18>
  40941d:	add    rax,0x1
  409423:	mov    QWORD PTR [rip+0xf946],rax        # 418d70 <__bss_start@@Base+0xc18>
  40942a:	add    rsp,0xe0
  409431:	pop    rbp
  409432:	ret    
  409433:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40943d:	nop    DWORD PTR [rax]

0000000000409440 <UnityAssertEqualString@@Base>:
  409440:	push   rbp
  409441:	mov    rbp,rsp
  409444:	sub    rsp,0xf0
  40944b:	lea    rax,[rip+0xf92e]        # 418d80 <__bss_start@@Base+0xc28>
  409452:	mov    QWORD PTR [rbp-0x30],rdi
  409456:	mov    QWORD PTR [rbp-0x38],rsi
  40945a:	mov    QWORD PTR [rbp-0x40],rdx
  40945e:	mov    QWORD PTR [rbp-0x48],rcx
  409462:	mov    QWORD PTR [rbp-0x50],rax
  409466:	mov    rax,QWORD PTR [rbp-0x50]
  40946a:	lea    rcx,[rip+0xf90f]        # 418d80 <__bss_start@@Base+0xc28>
  409471:	mov    rdx,rcx
  409474:	add    rdx,0x8
  40947b:	add    rcx,0x10
  409482:	lea    rsi,[rip+0x10677]        # 419b00 <Unity@@Base>
  409489:	mov    rdi,QWORD PTR [rax]
  40948c:	add    rdi,0x1
  409493:	mov    QWORD PTR [rax],rdi
  409496:	mov    rax,QWORD PTR [rbp-0x30]
  40949a:	mov    QWORD PTR [rbp-0x8],rax
  40949e:	mov    rdi,QWORD PTR [rbp-0x38]
  4094a2:	mov    QWORD PTR [rbp-0x10],rdi
  4094a6:	mov    r8,QWORD PTR [rbp-0x40]
  4094aa:	mov    QWORD PTR [rbp-0x18],r8
  4094ae:	mov    r9,QWORD PTR [rbp-0x48]
  4094b2:	mov    QWORD PTR [rbp-0x20],r9
  4094b6:	cmp    QWORD PTR [rsi+0x40],0x0
  4094bb:	mov    QWORD PTR [rbp-0x58],rcx
  4094bf:	mov    QWORD PTR [rbp-0x60],rdx
  4094c3:	jne    40950c <UnityAssertEqualString@@Base+0xcc>
  4094c9:	mov    rax,QWORD PTR [rbp-0x58]
  4094cd:	lea    rcx,[rip+0xf8ac]        # 418d80 <__bss_start@@Base+0xc28>
  4094d4:	mov    rdx,rcx
  4094d7:	add    rdx,0x18
  4094de:	add    rcx,0x20
  4094e5:	lea    rsi,[rip+0x10614]        # 419b00 <Unity@@Base>
  4094ec:	mov    rdi,QWORD PTR [rax]
  4094ef:	add    rdi,0x1
  4094f6:	mov    QWORD PTR [rax],rdi
  4094f9:	cmp    QWORD PTR [rsi+0x48],0x0
  4094fe:	mov    QWORD PTR [rbp-0x60],rdx
  409502:	mov    QWORD PTR [rbp-0x68],rcx
  409506:	je     409534 <UnityAssertEqualString@@Base+0xf4>
  40950c:	mov    rax,QWORD PTR [rbp-0x60]
  409510:	lea    rcx,[rip+0xf869]        # 418d80 <__bss_start@@Base+0xc28>
  409517:	add    rcx,0x28
  40951e:	mov    rdx,QWORD PTR [rax]
  409521:	add    rdx,0x1
  409528:	mov    QWORD PTR [rax],rdx
  40952b:	mov    QWORD PTR [rbp-0x70],rcx
  40952f:	jmp    40993d <UnityAssertEqualString@@Base+0x4fd>
  409534:	mov    rax,QWORD PTR [rbp-0x68]
  409538:	lea    rcx,[rip+0xf841]        # 418d80 <__bss_start@@Base+0xc28>
  40953f:	mov    rdx,rcx
  409542:	add    rdx,0x30
  409549:	add    rcx,0x38
  409550:	mov    rsi,QWORD PTR [rax]
  409553:	add    rsi,0x1
  40955a:	mov    QWORD PTR [rax],rsi
  40955d:	cmp    QWORD PTR [rbp-0x8],0x0
  409562:	mov    QWORD PTR [rbp-0x78],rdx
  409566:	mov    QWORD PTR [rbp-0x80],rcx
  40956a:	je     4097f5 <UnityAssertEqualString@@Base+0x3b5>
  409570:	mov    rax,QWORD PTR [rbp-0x78]
  409574:	lea    rcx,[rip+0xf805]        # 418d80 <__bss_start@@Base+0xc28>
  40957b:	mov    rdx,rcx
  40957e:	add    rdx,0x40
  409585:	add    rcx,0x48
  40958c:	mov    rsi,QWORD PTR [rax]
  40958f:	add    rsi,0x1
  409596:	mov    QWORD PTR [rax],rsi
  409599:	cmp    QWORD PTR [rbp-0x10],0x0
  40959e:	mov    QWORD PTR [rbp-0x88],rdx
  4095a5:	mov    QWORD PTR [rbp-0x80],rcx
  4095a9:	je     4097f5 <UnityAssertEqualString@@Base+0x3b5>
  4095af:	mov    rax,QWORD PTR [rbp-0x88]
  4095b6:	lea    rcx,[rip+0xf7c3]        # 418d80 <__bss_start@@Base+0xc28>
  4095bd:	add    rcx,0x50
  4095c4:	mov    rdx,QWORD PTR [rax]
  4095c7:	add    rdx,0x1
  4095ce:	mov    QWORD PTR [rax],rdx
  4095d1:	mov    DWORD PTR [rbp-0x24],0x0
  4095d8:	mov    QWORD PTR [rbp-0x90],rcx
  4095df:	mov    rax,QWORD PTR [rbp-0x90]
  4095e6:	lea    rcx,[rip+0xf793]        # 418d80 <__bss_start@@Base+0xc28>
  4095ed:	mov    rdx,rcx
  4095f0:	add    rdx,0x58
  4095f7:	add    rcx,0x60
  4095fe:	mov    rsi,QWORD PTR [rax]
  409601:	add    rsi,0x1
  409608:	mov    QWORD PTR [rax],rsi
  40960b:	mov    rax,QWORD PTR [rbp-0x8]
  40960f:	mov    edi,DWORD PTR [rbp-0x24]
  409612:	mov    esi,edi
  409614:	movsx  edi,BYTE PTR [rax+rsi*1]
  409618:	cmp    edi,0x0
  40961b:	mov    r8b,0x1
  40961e:	mov    QWORD PTR [rbp-0x98],rcx
  409625:	mov    QWORD PTR [rbp-0xa0],rdx
  40962c:	mov    BYTE PTR [rbp-0xa1],r8b
  409633:	jne    40967d <UnityAssertEqualString@@Base+0x23d>
  409639:	mov    rax,QWORD PTR [rbp-0x98]
  409640:	lea    rcx,[rip+0xf739]        # 418d80 <__bss_start@@Base+0xc28>
  409647:	add    rcx,0x68
  40964e:	mov    rdx,QWORD PTR [rax]
  409651:	add    rdx,0x1
  409658:	mov    QWORD PTR [rax],rdx
  40965b:	mov    rax,QWORD PTR [rbp-0x10]
  40965f:	mov    esi,DWORD PTR [rbp-0x24]
  409662:	mov    edx,esi
  409664:	movsx  esi,BYTE PTR [rax+rdx*1]
  409668:	cmp    esi,0x0
  40966b:	setne  dil
  40966f:	mov    QWORD PTR [rbp-0xa0],rcx
  409676:	mov    BYTE PTR [rbp-0xa1],dil
  40967d:	mov    al,BYTE PTR [rbp-0xa1]
  409683:	mov    rcx,QWORD PTR [rbp-0xa0]
  40968a:	lea    rdx,[rip+0xf6ef]        # 418d80 <__bss_start@@Base+0xc28>
  409691:	mov    rsi,rdx
  409694:	add    rsi,0x70
  40969b:	add    rdx,0x78
  4096a2:	mov    rdi,QWORD PTR [rcx]
  4096a5:	add    rdi,0x1
  4096ac:	mov    QWORD PTR [rcx],rdi
  4096af:	test   al,0x1
  4096b1:	mov    QWORD PTR [rbp-0xb0],rsi
  4096b8:	mov    QWORD PTR [rbp-0xb8],rdx
  4096bf:	jne    4096ca <UnityAssertEqualString@@Base+0x28a>
  4096c5:	jmp    4097c7 <UnityAssertEqualString@@Base+0x387>
  4096ca:	mov    rax,QWORD PTR [rbp-0xb0]
  4096d1:	lea    rcx,[rip+0xf6a8]        # 418d80 <__bss_start@@Base+0xc28>
  4096d8:	mov    rdx,rcx
  4096db:	add    rdx,0x80
  4096e2:	add    rcx,0x88
  4096e9:	mov    rsi,QWORD PTR [rax]
  4096ec:	add    rsi,0x1
  4096f3:	mov    QWORD PTR [rax],rsi
  4096f6:	mov    rax,QWORD PTR [rbp-0x8]
  4096fa:	mov    edi,DWORD PTR [rbp-0x24]
  4096fd:	mov    esi,edi
  4096ff:	movsx  edi,BYTE PTR [rax+rsi*1]
  409703:	mov    rax,QWORD PTR [rbp-0x10]
  409707:	mov    r8d,DWORD PTR [rbp-0x24]
  40970b:	mov    esi,r8d
  40970e:	movsx  r8d,BYTE PTR [rax+rsi*1]
  409713:	cmp    edi,r8d
  409716:	mov    QWORD PTR [rbp-0xc0],rdx
  40971d:	mov    QWORD PTR [rbp-0xc8],rcx
  409724:	je     409767 <UnityAssertEqualString@@Base+0x327>
  40972a:	mov    rax,QWORD PTR [rbp-0xc0]
  409731:	lea    rcx,[rip+0xf648]        # 418d80 <__bss_start@@Base+0xc28>
  409738:	add    rcx,0x90
  40973f:	lea    rdx,[rip+0x103ba]        # 419b00 <Unity@@Base>
  409746:	mov    rsi,QWORD PTR [rax]
  409749:	add    rsi,0x1
  409750:	mov    QWORD PTR [rax],rsi
  409753:	mov    QWORD PTR [rdx+0x40],0x1
  40975b:	mov    QWORD PTR [rbp-0xb8],rcx
  409762:	jmp    4097c7 <UnityAssertEqualString@@Base+0x387>
  409767:	mov    rax,QWORD PTR [rbp-0xc8]
  40976e:	lea    rcx,[rip+0xf60b]        # 418d80 <__bss_start@@Base+0xc28>
  409775:	add    rcx,0x98
  40977c:	mov    rdx,QWORD PTR [rax]
  40977f:	add    rdx,0x1
  409786:	mov    QWORD PTR [rax],rdx
  409789:	mov    QWORD PTR [rbp-0xd0],rcx
  409790:	mov    rax,QWORD PTR [rbp-0xd0]
  409797:	lea    rcx,[rip+0xf5e2]        # 418d80 <__bss_start@@Base+0xc28>
  40979e:	add    rcx,0xa0
  4097a5:	mov    rdx,QWORD PTR [rax]
  4097a8:	add    rdx,0x1
  4097af:	mov    QWORD PTR [rax],rdx
  4097b2:	mov    esi,DWORD PTR [rbp-0x24]
  4097b5:	add    esi,0x1
  4097b8:	mov    DWORD PTR [rbp-0x24],esi
  4097bb:	mov    QWORD PTR [rbp-0x90],rcx
  4097c2:	jmp    4095df <UnityAssertEqualString@@Base+0x19f>
  4097c7:	mov    rax,QWORD PTR [rbp-0xb8]
  4097ce:	lea    rcx,[rip+0xf5ab]        # 418d80 <__bss_start@@Base+0xc28>
  4097d5:	add    rcx,0xa8
  4097dc:	mov    rdx,QWORD PTR [rax]
  4097df:	add    rdx,0x1
  4097e6:	mov    QWORD PTR [rax],rdx
  4097e9:	mov    QWORD PTR [rbp-0xd8],rcx
  4097f0:	jmp    40989b <UnityAssertEqualString@@Base+0x45b>
  4097f5:	mov    rax,QWORD PTR [rbp-0x80]
  4097f9:	lea    rcx,[rip+0xf580]        # 418d80 <__bss_start@@Base+0xc28>
  409800:	mov    rdx,rcx
  409803:	add    rdx,0xb0
  40980a:	add    rcx,0xb8
  409811:	mov    rsi,QWORD PTR [rax]
  409814:	add    rsi,0x1
  40981b:	mov    QWORD PTR [rax],rsi
  40981e:	mov    rax,QWORD PTR [rbp-0x8]
  409822:	cmp    rax,QWORD PTR [rbp-0x10]
  409826:	mov    QWORD PTR [rbp-0xe0],rdx
  40982d:	mov    QWORD PTR [rbp-0xe8],rcx
  409834:	je     409872 <UnityAssertEqualString@@Base+0x432>
  40983a:	mov    rax,QWORD PTR [rbp-0xe0]
  409841:	lea    rcx,[rip+0xf538]        # 418d80 <__bss_start@@Base+0xc28>
  409848:	add    rcx,0xc0
  40984f:	lea    rdx,[rip+0x102aa]        # 419b00 <Unity@@Base>
  409856:	mov    rsi,QWORD PTR [rax]
  409859:	add    rsi,0x1
  409860:	mov    QWORD PTR [rax],rsi
  409863:	mov    QWORD PTR [rdx+0x40],0x1
  40986b:	mov    QWORD PTR [rbp-0xe8],rcx
  409872:	mov    rax,QWORD PTR [rbp-0xe8]
  409879:	lea    rcx,[rip+0xf500]        # 418d80 <__bss_start@@Base+0xc28>
  409880:	add    rcx,0xc8
  409887:	mov    rdx,QWORD PTR [rax]
  40988a:	add    rdx,0x1
  409891:	mov    QWORD PTR [rax],rdx
  409894:	mov    QWORD PTR [rbp-0xd8],rcx
  40989b:	mov    rax,QWORD PTR [rbp-0xd8]
  4098a2:	lea    rcx,[rip+0xf4d7]        # 418d80 <__bss_start@@Base+0xc28>
  4098a9:	mov    rdx,rcx
  4098ac:	add    rdx,0xd0
  4098b3:	add    rcx,0xd8
  4098ba:	lea    rsi,[rip+0x1023f]        # 419b00 <Unity@@Base>
  4098c1:	mov    rdi,QWORD PTR [rax]
  4098c4:	add    rdi,0x1
  4098cb:	mov    QWORD PTR [rax],rdi
  4098ce:	cmp    QWORD PTR [rsi+0x40],0x0
  4098d3:	mov    QWORD PTR [rbp-0xf0],rdx
  4098da:	mov    QWORD PTR [rbp-0x70],rcx
  4098de:	je     40993d <UnityAssertEqualString@@Base+0x4fd>
  4098e4:	mov    rax,QWORD PTR [rbp-0xf0]
  4098eb:	mov    rcx,QWORD PTR [rax]
  4098ee:	add    rcx,0x1
  4098f5:	mov    QWORD PTR [rax],rcx
  4098f8:	mov    rdi,QWORD PTR [rbp-0x20]
  4098fc:	call   406d40 <UnityAssertBits@@Base+0x200>
  409901:	mov    rdi,QWORD PTR [rbp-0x8]
  409905:	mov    rsi,QWORD PTR [rbp-0x10]
  409909:	call   409970 <UnityAssertEqualString@@Base+0x530>
  40990e:	mov    rdi,QWORD PTR [rbp-0x18]
  409912:	call   406dc0 <UnityAssertBits@@Base+0x280>
  409917:	lea    rax,[rip+0x101e2]        # 419b00 <Unity@@Base>
  40991e:	mov    rcx,rax
  409921:	add    rcx,0x50
  409928:	mov    QWORD PTR [rax+0x40],0x1
  409930:	mov    rdi,rcx
  409933:	mov    esi,0x1
  409938:	call   403200 <longjmp@plt>
  40993d:	mov    rax,QWORD PTR [rbp-0x70]
  409941:	mov    rcx,QWORD PTR [rax]
  409944:	add    rcx,0x1
  40994b:	mov    QWORD PTR [rax],rcx
  40994e:	mov    rax,QWORD PTR [rip+0xf50b]        # 418e60 <__bss_start@@Base+0xd08>
  409955:	add    rax,0x1
  40995b:	mov    QWORD PTR [rip+0xf4fe],rax        # 418e60 <__bss_start@@Base+0xd08>
  409962:	add    rsp,0xf0
  409969:	pop    rbp
  40996a:	ret    
  40996b:	nop    DWORD PTR [rax+rax*1+0x0]
  409970:	push   rbp
  409971:	mov    rbp,rsp
  409974:	sub    rsp,0x70
  409978:	lea    rax,[rip+0xf4f1]        # 418e70 <__bss_start@@Base+0xd18>
  40997f:	mov    QWORD PTR [rbp-0x18],rdi
  409983:	mov    QWORD PTR [rbp-0x20],rsi
  409987:	mov    QWORD PTR [rbp-0x28],rax
  40998b:	mov    rax,QWORD PTR [rbp-0x28]
  40998f:	lea    rdi,[rip+0x9a66]        # 4133fc <UnityStrExpected@@Base>
  409996:	mov    rcx,QWORD PTR [rax]
  409999:	add    rcx,0x1
  4099a0:	mov    QWORD PTR [rax],rcx
  4099a3:	mov    rax,QWORD PTR [rbp-0x18]
  4099a7:	mov    QWORD PTR [rbp-0x8],rax
  4099ab:	mov    rcx,QWORD PTR [rbp-0x20]
  4099af:	mov    QWORD PTR [rbp-0x10],rcx
  4099b3:	call   405480 <UnityPrint@@Base>
  4099b8:	lea    rax,[rip+0xf4b1]        # 418e70 <__bss_start@@Base+0xd18>
  4099bf:	mov    rcx,rax
  4099c2:	add    rcx,0x8
  4099c9:	add    rax,0x10
  4099cf:	cmp    QWORD PTR [rbp-0x8],0x0
  4099d4:	mov    QWORD PTR [rbp-0x30],rcx
  4099d8:	mov    QWORD PTR [rbp-0x38],rax
  4099dc:	je     409a2a <UnityAssertEqualString@@Base+0x5ea>
  4099e2:	mov    rax,QWORD PTR [rbp-0x30]
  4099e6:	mov    rcx,QWORD PTR [rax]
  4099e9:	add    rcx,0x1
  4099f0:	mov    QWORD PTR [rax],rcx
  4099f3:	mov    edi,0x27
  4099f8:	call   403050 <putchar@plt>
  4099fd:	mov    rdi,QWORD PTR [rbp-0x8]
  409a01:	mov    DWORD PTR [rbp-0x3c],eax
  409a04:	call   405480 <UnityPrint@@Base>
  409a09:	mov    edi,0x27
  409a0e:	call   403050 <putchar@plt>
  409a13:	lea    rcx,[rip+0xf456]        # 418e70 <__bss_start@@Base+0xd18>
  409a1a:	add    rcx,0x18
  409a21:	mov    QWORD PTR [rbp-0x48],rcx
  409a25:	jmp    409a58 <UnityAssertEqualString@@Base+0x618>
  409a2a:	mov    rax,QWORD PTR [rbp-0x38]
  409a2e:	lea    rdi,[rip+0x99bf]        # 4133f4 <UnityStrNull@@Base>
  409a35:	mov    rcx,QWORD PTR [rax]
  409a38:	add    rcx,0x1
  409a3f:	mov    QWORD PTR [rax],rcx
  409a42:	call   405480 <UnityPrint@@Base>
  409a47:	lea    rax,[rip+0xf422]        # 418e70 <__bss_start@@Base+0xd18>
  409a4e:	add    rax,0x20
  409a54:	mov    QWORD PTR [rbp-0x48],rax
  409a58:	mov    rax,QWORD PTR [rbp-0x48]
  409a5c:	lea    rdi,[rip+0x99a4]        # 413407 <UnityStrWas@@Base>
  409a63:	mov    rcx,QWORD PTR [rax]
  409a66:	add    rcx,0x1
  409a6d:	mov    QWORD PTR [rax],rcx
  409a70:	call   405480 <UnityPrint@@Base>
  409a75:	lea    rax,[rip+0xf3f4]        # 418e70 <__bss_start@@Base+0xd18>
  409a7c:	mov    rcx,rax
  409a7f:	add    rcx,0x28
  409a86:	add    rax,0x30
  409a8c:	cmp    QWORD PTR [rbp-0x10],0x0
  409a91:	mov    QWORD PTR [rbp-0x50],rcx
  409a95:	mov    QWORD PTR [rbp-0x58],rax
  409a99:	je     409ae7 <UnityAssertEqualString@@Base+0x6a7>
  409a9f:	mov    rax,QWORD PTR [rbp-0x50]
  409aa3:	mov    rcx,QWORD PTR [rax]
  409aa6:	add    rcx,0x1
  409aad:	mov    QWORD PTR [rax],rcx
  409ab0:	mov    edi,0x27
  409ab5:	call   403050 <putchar@plt>
  409aba:	mov    rdi,QWORD PTR [rbp-0x10]
  409abe:	mov    DWORD PTR [rbp-0x5c],eax
  409ac1:	call   405480 <UnityPrint@@Base>
  409ac6:	mov    edi,0x27
  409acb:	call   403050 <putchar@plt>
  409ad0:	lea    rcx,[rip+0xf399]        # 418e70 <__bss_start@@Base+0xd18>
  409ad7:	add    rcx,0x38
  409ade:	mov    QWORD PTR [rbp-0x68],rcx
  409ae2:	jmp    409b15 <UnityAssertEqualString@@Base+0x6d5>
  409ae7:	mov    rax,QWORD PTR [rbp-0x58]
  409aeb:	lea    rdi,[rip+0x9902]        # 4133f4 <UnityStrNull@@Base>
  409af2:	mov    rcx,QWORD PTR [rax]
  409af5:	add    rcx,0x1
  409afc:	mov    QWORD PTR [rax],rcx
  409aff:	call   405480 <UnityPrint@@Base>
  409b04:	lea    rax,[rip+0xf365]        # 418e70 <__bss_start@@Base+0xd18>
  409b0b:	add    rax,0x40
  409b11:	mov    QWORD PTR [rbp-0x68],rax
  409b15:	mov    rax,QWORD PTR [rbp-0x68]
  409b19:	mov    rcx,QWORD PTR [rax]
  409b1c:	add    rcx,0x1
  409b23:	mov    QWORD PTR [rax],rcx
  409b26:	mov    rax,QWORD PTR [rip+0xf38b]        # 418eb8 <__bss_start@@Base+0xd60>
  409b2d:	add    rax,0x1
  409b33:	mov    QWORD PTR [rip+0xf37e],rax        # 418eb8 <__bss_start@@Base+0xd60>
  409b3a:	add    rsp,0x70
  409b3e:	pop    rbp
  409b3f:	ret    

0000000000409b40 <UnityAssertEqualStringLen@@Base>:
  409b40:	push   rbp
  409b41:	mov    rbp,rsp
  409b44:	sub    rsp,0x110
  409b4b:	lea    rax,[rip+0xf36e]        # 418ec0 <__bss_start@@Base+0xd68>
  409b52:	mov    QWORD PTR [rbp-0x38],rdi
  409b56:	mov    QWORD PTR [rbp-0x40],rsi
  409b5a:	mov    DWORD PTR [rbp-0x44],edx
  409b5d:	mov    QWORD PTR [rbp-0x50],rcx
  409b61:	mov    QWORD PTR [rbp-0x58],r8
  409b65:	mov    QWORD PTR [rbp-0x60],rax
  409b69:	mov    rax,QWORD PTR [rbp-0x60]
  409b6d:	lea    rcx,[rip+0xf34c]        # 418ec0 <__bss_start@@Base+0xd68>
  409b74:	mov    rdx,rcx
  409b77:	add    rdx,0x8
  409b7e:	add    rcx,0x10
  409b85:	lea    rsi,[rip+0xff74]        # 419b00 <Unity@@Base>
  409b8c:	mov    rdi,QWORD PTR [rax]
  409b8f:	add    rdi,0x1
  409b96:	mov    QWORD PTR [rax],rdi
  409b99:	mov    rax,QWORD PTR [rbp-0x38]
  409b9d:	mov    QWORD PTR [rbp-0x8],rax
  409ba1:	mov    rdi,QWORD PTR [rbp-0x40]
  409ba5:	mov    QWORD PTR [rbp-0x10],rdi
  409ba9:	mov    r8d,DWORD PTR [rbp-0x44]
  409bad:	mov    DWORD PTR [rbp-0x14],r8d
  409bb1:	mov    r9,QWORD PTR [rbp-0x50]
  409bb5:	mov    QWORD PTR [rbp-0x20],r9
  409bb9:	mov    r10,QWORD PTR [rbp-0x58]
  409bbd:	mov    QWORD PTR [rbp-0x28],r10
  409bc1:	cmp    QWORD PTR [rsi+0x40],0x0
  409bc6:	mov    QWORD PTR [rbp-0x68],rcx
  409bca:	mov    QWORD PTR [rbp-0x70],rdx
  409bce:	jne    409c17 <UnityAssertEqualStringLen@@Base+0xd7>
  409bd4:	mov    rax,QWORD PTR [rbp-0x68]
  409bd8:	lea    rcx,[rip+0xf2e1]        # 418ec0 <__bss_start@@Base+0xd68>
  409bdf:	mov    rdx,rcx
  409be2:	add    rdx,0x18
  409be9:	add    rcx,0x20
  409bf0:	lea    rsi,[rip+0xff09]        # 419b00 <Unity@@Base>
  409bf7:	mov    rdi,QWORD PTR [rax]
  409bfa:	add    rdi,0x1
  409c01:	mov    QWORD PTR [rax],rdi
  409c04:	cmp    QWORD PTR [rsi+0x48],0x0
  409c09:	mov    QWORD PTR [rbp-0x70],rdx
  409c0d:	mov    QWORD PTR [rbp-0x78],rcx
  409c11:	je     409c3f <UnityAssertEqualStringLen@@Base+0xff>
  409c17:	mov    rax,QWORD PTR [rbp-0x70]
  409c1b:	lea    rcx,[rip+0xf29e]        # 418ec0 <__bss_start@@Base+0xd68>
  409c22:	add    rcx,0x28
  409c29:	mov    rdx,QWORD PTR [rax]
  409c2c:	add    rdx,0x1
  409c33:	mov    QWORD PTR [rax],rdx
  409c36:	mov    QWORD PTR [rbp-0x80],rcx
  409c3a:	jmp    40a0a3 <UnityAssertEqualStringLen@@Base+0x563>
  409c3f:	mov    rax,QWORD PTR [rbp-0x78]
  409c43:	lea    rcx,[rip+0xf276]        # 418ec0 <__bss_start@@Base+0xd68>
  409c4a:	mov    rdx,rcx
  409c4d:	add    rdx,0x30
  409c54:	add    rcx,0x38
  409c5b:	mov    rsi,QWORD PTR [rax]
  409c5e:	add    rsi,0x1
  409c65:	mov    QWORD PTR [rax],rsi
  409c68:	cmp    QWORD PTR [rbp-0x8],0x0
  409c6d:	mov    QWORD PTR [rbp-0x88],rdx
  409c74:	mov    QWORD PTR [rbp-0x90],rcx
  409c7b:	je     409f55 <UnityAssertEqualStringLen@@Base+0x415>
  409c81:	mov    rax,QWORD PTR [rbp-0x88]
  409c88:	lea    rcx,[rip+0xf231]        # 418ec0 <__bss_start@@Base+0xd68>
  409c8f:	mov    rdx,rcx
  409c92:	add    rdx,0x40
  409c99:	add    rcx,0x48
  409ca0:	mov    rsi,QWORD PTR [rax]
  409ca3:	add    rsi,0x1
  409caa:	mov    QWORD PTR [rax],rsi
  409cad:	cmp    QWORD PTR [rbp-0x10],0x0
  409cb2:	mov    QWORD PTR [rbp-0x98],rdx
  409cb9:	mov    QWORD PTR [rbp-0x90],rcx
  409cc0:	je     409f55 <UnityAssertEqualStringLen@@Base+0x415>
  409cc6:	mov    rax,QWORD PTR [rbp-0x98]
  409ccd:	lea    rcx,[rip+0xf1ec]        # 418ec0 <__bss_start@@Base+0xd68>
  409cd4:	add    rcx,0x50
  409cdb:	mov    rdx,QWORD PTR [rax]
  409cde:	add    rdx,0x1
  409ce5:	mov    QWORD PTR [rax],rdx
  409ce8:	mov    DWORD PTR [rbp-0x2c],0x0
  409cef:	mov    QWORD PTR [rbp-0xa0],rcx
  409cf6:	mov    rax,QWORD PTR [rbp-0xa0]
  409cfd:	lea    rcx,[rip+0xf1bc]        # 418ec0 <__bss_start@@Base+0xd68>
  409d04:	mov    rdx,rcx
  409d07:	add    rdx,0x58
  409d0e:	add    rcx,0x60
  409d15:	mov    rsi,QWORD PTR [rax]
  409d18:	add    rsi,0x1
  409d1f:	mov    QWORD PTR [rax],rsi
  409d22:	mov    rax,QWORD PTR [rbp-0x8]
  409d26:	mov    edi,DWORD PTR [rbp-0x2c]
  409d29:	mov    esi,edi
  409d2b:	movsx  edi,BYTE PTR [rax+rsi*1]
  409d2f:	cmp    edi,0x0
  409d32:	mov    QWORD PTR [rbp-0xa8],rcx
  409d39:	mov    QWORD PTR [rbp-0xb0],rdx
  409d40:	jne    409da3 <UnityAssertEqualStringLen@@Base+0x263>
  409d46:	mov    rax,QWORD PTR [rbp-0xa8]
  409d4d:	lea    rcx,[rip+0xf16c]        # 418ec0 <__bss_start@@Base+0xd68>
  409d54:	mov    rdx,rcx
  409d57:	add    rdx,0x68
  409d5e:	add    rcx,0x70
  409d65:	xor    esi,esi
  409d67:	mov    rdi,QWORD PTR [rax]
  409d6a:	add    rdi,0x1
  409d71:	mov    QWORD PTR [rax],rdi
  409d74:	mov    rax,QWORD PTR [rbp-0x10]
  409d78:	mov    r8d,DWORD PTR [rbp-0x2c]
  409d7c:	mov    edi,r8d
  409d7f:	movsx  r8d,BYTE PTR [rax+rdi*1]
  409d84:	cmp    r8d,0x0
  409d88:	mov    QWORD PTR [rbp-0xb0],rdx
  409d8f:	mov    QWORD PTR [rbp-0xb8],rcx
  409d96:	mov    BYTE PTR [rbp-0xb9],sil
  409d9d:	je     409ddd <UnityAssertEqualStringLen@@Base+0x29d>
  409da3:	mov    rax,QWORD PTR [rbp-0xb0]
  409daa:	lea    rcx,[rip+0xf10f]        # 418ec0 <__bss_start@@Base+0xd68>
  409db1:	add    rcx,0x78
  409db8:	mov    rdx,QWORD PTR [rax]
  409dbb:	add    rdx,0x1
  409dc2:	mov    QWORD PTR [rax],rdx
  409dc5:	mov    esi,DWORD PTR [rbp-0x2c]
  409dc8:	cmp    esi,DWORD PTR [rbp-0x14]
  409dcb:	setb   dil
  409dcf:	mov    QWORD PTR [rbp-0xb8],rcx
  409dd6:	mov    BYTE PTR [rbp-0xb9],dil
  409ddd:	mov    al,BYTE PTR [rbp-0xb9]
  409de3:	mov    rcx,QWORD PTR [rbp-0xb8]
  409dea:	lea    rdx,[rip+0xf0cf]        # 418ec0 <__bss_start@@Base+0xd68>
  409df1:	mov    rsi,rdx
  409df4:	add    rsi,0x80
  409dfb:	add    rdx,0x88
  409e02:	mov    rdi,QWORD PTR [rcx]
  409e05:	add    rdi,0x1
  409e0c:	mov    QWORD PTR [rcx],rdi
  409e0f:	test   al,0x1
  409e11:	mov    QWORD PTR [rbp-0xc8],rsi
  409e18:	mov    QWORD PTR [rbp-0xd0],rdx
  409e1f:	jne    409e2a <UnityAssertEqualStringLen@@Base+0x2ea>
  409e25:	jmp    409f27 <UnityAssertEqualStringLen@@Base+0x3e7>
  409e2a:	mov    rax,QWORD PTR [rbp-0xc8]
  409e31:	lea    rcx,[rip+0xf088]        # 418ec0 <__bss_start@@Base+0xd68>
  409e38:	mov    rdx,rcx
  409e3b:	add    rdx,0x90
  409e42:	add    rcx,0x98
  409e49:	mov    rsi,QWORD PTR [rax]
  409e4c:	add    rsi,0x1
  409e53:	mov    QWORD PTR [rax],rsi
  409e56:	mov    rax,QWORD PTR [rbp-0x8]
  409e5a:	mov    edi,DWORD PTR [rbp-0x2c]
  409e5d:	mov    esi,edi
  409e5f:	movsx  edi,BYTE PTR [rax+rsi*1]
  409e63:	mov    rax,QWORD PTR [rbp-0x10]
  409e67:	mov    r8d,DWORD PTR [rbp-0x2c]
  409e6b:	mov    esi,r8d
  409e6e:	movsx  r8d,BYTE PTR [rax+rsi*1]
  409e73:	cmp    edi,r8d
  409e76:	mov    QWORD PTR [rbp-0xd8],rdx
  409e7d:	mov    QWORD PTR [rbp-0xe0],rcx
  409e84:	je     409ec7 <UnityAssertEqualStringLen@@Base+0x387>
  409e8a:	mov    rax,QWORD PTR [rbp-0xd8]
  409e91:	lea    rcx,[rip+0xf028]        # 418ec0 <__bss_start@@Base+0xd68>
  409e98:	add    rcx,0xa0
  409e9f:	lea    rdx,[rip+0xfc5a]        # 419b00 <Unity@@Base>
  409ea6:	mov    rsi,QWORD PTR [rax]
  409ea9:	add    rsi,0x1
  409eb0:	mov    QWORD PTR [rax],rsi
  409eb3:	mov    QWORD PTR [rdx+0x40],0x1
  409ebb:	mov    QWORD PTR [rbp-0xd0],rcx
  409ec2:	jmp    409f27 <UnityAssertEqualStringLen@@Base+0x3e7>
  409ec7:	mov    rax,QWORD PTR [rbp-0xe0]
  409ece:	lea    rcx,[rip+0xefeb]        # 418ec0 <__bss_start@@Base+0xd68>
  409ed5:	add    rcx,0xa8
  409edc:	mov    rdx,QWORD PTR [rax]
  409edf:	add    rdx,0x1
  409ee6:	mov    QWORD PTR [rax],rdx
  409ee9:	mov    QWORD PTR [rbp-0xe8],rcx
  409ef0:	mov    rax,QWORD PTR [rbp-0xe8]
  409ef7:	lea    rcx,[rip+0xefc2]        # 418ec0 <__bss_start@@Base+0xd68>
  409efe:	add    rcx,0xb0
  409f05:	mov    rdx,QWORD PTR [rax]
  409f08:	add    rdx,0x1
  409f0f:	mov    QWORD PTR [rax],rdx
  409f12:	mov    esi,DWORD PTR [rbp-0x2c]
  409f15:	add    esi,0x1
  409f18:	mov    DWORD PTR [rbp-0x2c],esi
  409f1b:	mov    QWORD PTR [rbp-0xa0],rcx
  409f22:	jmp    409cf6 <UnityAssertEqualStringLen@@Base+0x1b6>
  409f27:	mov    rax,QWORD PTR [rbp-0xd0]
  409f2e:	lea    rcx,[rip+0xef8b]        # 418ec0 <__bss_start@@Base+0xd68>
  409f35:	add    rcx,0xb8
  409f3c:	mov    rdx,QWORD PTR [rax]
  409f3f:	add    rdx,0x1
  409f46:	mov    QWORD PTR [rax],rdx
  409f49:	mov    QWORD PTR [rbp-0xf0],rcx
  409f50:	jmp    409ffe <UnityAssertEqualStringLen@@Base+0x4be>
  409f55:	mov    rax,QWORD PTR [rbp-0x90]
  409f5c:	lea    rcx,[rip+0xef5d]        # 418ec0 <__bss_start@@Base+0xd68>
  409f63:	mov    rdx,rcx
  409f66:	add    rdx,0xc0
  409f6d:	add    rcx,0xc8
  409f74:	mov    rsi,QWORD PTR [rax]
  409f77:	add    rsi,0x1
  409f7e:	mov    QWORD PTR [rax],rsi
  409f81:	mov    rax,QWORD PTR [rbp-0x8]
  409f85:	cmp    rax,QWORD PTR [rbp-0x10]
  409f89:	mov    QWORD PTR [rbp-0xf8],rdx
  409f90:	mov    QWORD PTR [rbp-0x100],rcx
  409f97:	je     409fd5 <UnityAssertEqualStringLen@@Base+0x495>
  409f9d:	mov    rax,QWORD PTR [rbp-0xf8]
  409fa4:	lea    rcx,[rip+0xef15]        # 418ec0 <__bss_start@@Base+0xd68>
  409fab:	add    rcx,0xd0
  409fb2:	lea    rdx,[rip+0xfb47]        # 419b00 <Unity@@Base>
  409fb9:	mov    rsi,QWORD PTR [rax]
  409fbc:	add    rsi,0x1
  409fc3:	mov    QWORD PTR [rax],rsi
  409fc6:	mov    QWORD PTR [rdx+0x40],0x1
  409fce:	mov    QWORD PTR [rbp-0x100],rcx
  409fd5:	mov    rax,QWORD PTR [rbp-0x100]
  409fdc:	lea    rcx,[rip+0xeedd]        # 418ec0 <__bss_start@@Base+0xd68>
  409fe3:	add    rcx,0xd8
  409fea:	mov    rdx,QWORD PTR [rax]
  409fed:	add    rdx,0x1
  409ff4:	mov    QWORD PTR [rax],rdx
  409ff7:	mov    QWORD PTR [rbp-0xf0],rcx
  409ffe:	mov    rax,QWORD PTR [rbp-0xf0]
  40a005:	lea    rcx,[rip+0xeeb4]        # 418ec0 <__bss_start@@Base+0xd68>
  40a00c:	mov    rdx,rcx
  40a00f:	add    rdx,0xe0
  40a016:	add    rcx,0xe8
  40a01d:	lea    rsi,[rip+0xfadc]        # 419b00 <Unity@@Base>
  40a024:	mov    rdi,QWORD PTR [rax]
  40a027:	add    rdi,0x1
  40a02e:	mov    QWORD PTR [rax],rdi
  40a031:	cmp    QWORD PTR [rsi+0x40],0x0
  40a036:	mov    QWORD PTR [rbp-0x108],rdx
  40a03d:	mov    QWORD PTR [rbp-0x80],rcx
  40a041:	je     40a0a3 <UnityAssertEqualStringLen@@Base+0x563>
  40a047:	mov    rax,QWORD PTR [rbp-0x108]
  40a04e:	mov    rcx,QWORD PTR [rax]
  40a051:	add    rcx,0x1
  40a058:	mov    QWORD PTR [rax],rcx
  40a05b:	mov    rdi,QWORD PTR [rbp-0x28]
  40a05f:	call   406d40 <UnityAssertBits@@Base+0x200>
  40a064:	mov    rdi,QWORD PTR [rbp-0x8]
  40a068:	mov    rsi,QWORD PTR [rbp-0x10]
  40a06c:	mov    edx,DWORD PTR [rbp-0x14]
  40a06f:	call   40a0e0 <UnityAssertEqualStringLen@@Base+0x5a0>
  40a074:	mov    rdi,QWORD PTR [rbp-0x20]
  40a078:	call   406dc0 <UnityAssertBits@@Base+0x280>
  40a07d:	lea    rax,[rip+0xfa7c]        # 419b00 <Unity@@Base>
  40a084:	mov    rcx,rax
  40a087:	add    rcx,0x50
  40a08e:	mov    QWORD PTR [rax+0x40],0x1
  40a096:	mov    rdi,rcx
  40a099:	mov    esi,0x1
  40a09e:	call   403200 <longjmp@plt>
  40a0a3:	mov    rax,QWORD PTR [rbp-0x80]
  40a0a7:	mov    rcx,QWORD PTR [rax]
  40a0aa:	add    rcx,0x1
  40a0b1:	mov    QWORD PTR [rax],rcx
  40a0b4:	mov    rax,QWORD PTR [rip+0xeef5]        # 418fb0 <__bss_start@@Base+0xe58>
  40a0bb:	add    rax,0x1
  40a0c1:	mov    QWORD PTR [rip+0xeee8],rax        # 418fb0 <__bss_start@@Base+0xe58>
  40a0c8:	add    rsp,0x110
  40a0cf:	pop    rbp
  40a0d0:	ret    
  40a0d1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40a0db:	nop    DWORD PTR [rax+rax*1+0x0]
  40a0e0:	push   rbp
  40a0e1:	mov    rbp,rsp
  40a0e4:	sub    rsp,0x80
  40a0eb:	lea    rax,[rip+0xeece]        # 418fc0 <__bss_start@@Base+0xe68>
  40a0f2:	mov    QWORD PTR [rbp-0x20],rdi
  40a0f6:	mov    QWORD PTR [rbp-0x28],rsi
  40a0fa:	mov    DWORD PTR [rbp-0x2c],edx
  40a0fd:	mov    QWORD PTR [rbp-0x38],rax
  40a101:	mov    rax,QWORD PTR [rbp-0x38]
  40a105:	lea    rdi,[rip+0x92f0]        # 4133fc <UnityStrExpected@@Base>
  40a10c:	mov    rcx,QWORD PTR [rax]
  40a10f:	add    rcx,0x1
  40a116:	mov    QWORD PTR [rax],rcx
  40a119:	mov    rax,QWORD PTR [rbp-0x20]
  40a11d:	mov    QWORD PTR [rbp-0x8],rax
  40a121:	mov    rcx,QWORD PTR [rbp-0x28]
  40a125:	mov    QWORD PTR [rbp-0x10],rcx
  40a129:	mov    edx,DWORD PTR [rbp-0x2c]
  40a12c:	mov    DWORD PTR [rbp-0x14],edx
  40a12f:	call   405480 <UnityPrint@@Base>
  40a134:	lea    rax,[rip+0xee85]        # 418fc0 <__bss_start@@Base+0xe68>
  40a13b:	mov    rcx,rax
  40a13e:	add    rcx,0x8
  40a145:	add    rax,0x10
  40a14b:	cmp    QWORD PTR [rbp-0x8],0x0
  40a150:	mov    QWORD PTR [rbp-0x40],rcx
  40a154:	mov    QWORD PTR [rbp-0x48],rax
  40a158:	je     40a1a9 <UnityAssertEqualStringLen@@Base+0x669>
  40a15e:	mov    rax,QWORD PTR [rbp-0x40]
  40a162:	mov    rcx,QWORD PTR [rax]
  40a165:	add    rcx,0x1
  40a16c:	mov    QWORD PTR [rax],rcx
  40a16f:	mov    edi,0x27
  40a174:	call   403050 <putchar@plt>
  40a179:	mov    rdi,QWORD PTR [rbp-0x8]
  40a17d:	mov    esi,DWORD PTR [rbp-0x14]
  40a180:	mov    DWORD PTR [rbp-0x4c],eax
  40a183:	call   405a20 <UnityPrintLen@@Base>
  40a188:	mov    edi,0x27
  40a18d:	call   403050 <putchar@plt>
  40a192:	lea    rcx,[rip+0xee27]        # 418fc0 <__bss_start@@Base+0xe68>
  40a199:	add    rcx,0x18
  40a1a0:	mov    QWORD PTR [rbp-0x58],rcx
  40a1a4:	jmp    40a1d7 <UnityAssertEqualStringLen@@Base+0x697>
  40a1a9:	mov    rax,QWORD PTR [rbp-0x48]
  40a1ad:	lea    rdi,[rip+0x9240]        # 4133f4 <UnityStrNull@@Base>
  40a1b4:	mov    rcx,QWORD PTR [rax]
  40a1b7:	add    rcx,0x1
  40a1be:	mov    QWORD PTR [rax],rcx
  40a1c1:	call   405480 <UnityPrint@@Base>
  40a1c6:	lea    rax,[rip+0xedf3]        # 418fc0 <__bss_start@@Base+0xe68>
  40a1cd:	add    rax,0x20
  40a1d3:	mov    QWORD PTR [rbp-0x58],rax
  40a1d7:	mov    rax,QWORD PTR [rbp-0x58]
  40a1db:	lea    rdi,[rip+0x9225]        # 413407 <UnityStrWas@@Base>
  40a1e2:	mov    rcx,QWORD PTR [rax]
  40a1e5:	add    rcx,0x1
  40a1ec:	mov    QWORD PTR [rax],rcx
  40a1ef:	call   405480 <UnityPrint@@Base>
  40a1f4:	lea    rax,[rip+0xedc5]        # 418fc0 <__bss_start@@Base+0xe68>
  40a1fb:	mov    rcx,rax
  40a1fe:	add    rcx,0x28
  40a205:	add    rax,0x30
  40a20b:	cmp    QWORD PTR [rbp-0x10],0x0
  40a210:	mov    QWORD PTR [rbp-0x60],rcx
  40a214:	mov    QWORD PTR [rbp-0x68],rax
  40a218:	je     40a269 <UnityAssertEqualStringLen@@Base+0x729>
  40a21e:	mov    rax,QWORD PTR [rbp-0x60]
  40a222:	mov    rcx,QWORD PTR [rax]
  40a225:	add    rcx,0x1
  40a22c:	mov    QWORD PTR [rax],rcx
  40a22f:	mov    edi,0x27
  40a234:	call   403050 <putchar@plt>
  40a239:	mov    rdi,QWORD PTR [rbp-0x10]
  40a23d:	mov    esi,DWORD PTR [rbp-0x14]
  40a240:	mov    DWORD PTR [rbp-0x6c],eax
  40a243:	call   405a20 <UnityPrintLen@@Base>
  40a248:	mov    edi,0x27
  40a24d:	call   403050 <putchar@plt>
  40a252:	lea    rcx,[rip+0xed67]        # 418fc0 <__bss_start@@Base+0xe68>
  40a259:	add    rcx,0x38
  40a260:	mov    QWORD PTR [rbp-0x78],rcx
  40a264:	jmp    40a297 <UnityAssertEqualStringLen@@Base+0x757>
  40a269:	mov    rax,QWORD PTR [rbp-0x68]
  40a26d:	lea    rdi,[rip+0x9180]        # 4133f4 <UnityStrNull@@Base>
  40a274:	mov    rcx,QWORD PTR [rax]
  40a277:	add    rcx,0x1
  40a27e:	mov    QWORD PTR [rax],rcx
  40a281:	call   405480 <UnityPrint@@Base>
  40a286:	lea    rax,[rip+0xed33]        # 418fc0 <__bss_start@@Base+0xe68>
  40a28d:	add    rax,0x40
  40a293:	mov    QWORD PTR [rbp-0x78],rax
  40a297:	mov    rax,QWORD PTR [rbp-0x78]
  40a29b:	mov    rcx,QWORD PTR [rax]
  40a29e:	add    rcx,0x1
  40a2a5:	mov    QWORD PTR [rax],rcx
  40a2a8:	mov    rax,QWORD PTR [rip+0xed59]        # 419008 <__bss_start@@Base+0xeb0>
  40a2af:	add    rax,0x1
  40a2b5:	mov    QWORD PTR [rip+0xed4c],rax        # 419008 <__bss_start@@Base+0xeb0>
  40a2bc:	add    rsp,0x80
  40a2c3:	pop    rbp
  40a2c4:	ret    
  40a2c5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40a2cf:	nop

000000000040a2d0 <UnityAssertEqualStringArray@@Base>:
  40a2d0:	push   rbp
  40a2d1:	mov    rbp,rsp
  40a2d4:	sub    rsp,0x150
  40a2db:	lea    rax,[rip+0xed2e]        # 419010 <__bss_start@@Base+0xeb8>
  40a2e2:	mov    QWORD PTR [rbp-0x38],rdi
  40a2e6:	mov    QWORD PTR [rbp-0x40],rsi
  40a2ea:	mov    DWORD PTR [rbp-0x44],edx
  40a2ed:	mov    QWORD PTR [rbp-0x50],rcx
  40a2f1:	mov    QWORD PTR [rbp-0x58],r8
  40a2f5:	mov    QWORD PTR [rbp-0x60],rax
  40a2f9:	mov    rax,QWORD PTR [rbp-0x60]
  40a2fd:	lea    rcx,[rip+0xed0c]        # 419010 <__bss_start@@Base+0xeb8>
  40a304:	mov    rdx,rcx
  40a307:	add    rdx,0x8
  40a30e:	add    rcx,0x10
  40a315:	lea    rsi,[rip+0xf7e4]        # 419b00 <Unity@@Base>
  40a31c:	mov    rdi,QWORD PTR [rax]
  40a31f:	add    rdi,0x1
  40a326:	mov    QWORD PTR [rax],rdi
  40a329:	mov    rax,QWORD PTR [rbp-0x38]
  40a32d:	mov    QWORD PTR [rbp-0x8],rax
  40a331:	mov    rdi,QWORD PTR [rbp-0x40]
  40a335:	mov    QWORD PTR [rbp-0x10],rdi
  40a339:	mov    r8d,DWORD PTR [rbp-0x44]
  40a33d:	mov    DWORD PTR [rbp-0x14],r8d
  40a341:	mov    r9,QWORD PTR [rbp-0x50]
  40a345:	mov    QWORD PTR [rbp-0x20],r9
  40a349:	mov    r10,QWORD PTR [rbp-0x58]
  40a34d:	mov    QWORD PTR [rbp-0x28],r10
  40a351:	mov    DWORD PTR [rbp-0x30],0x0
  40a358:	cmp    QWORD PTR [rsi+0x40],0x0
  40a35d:	mov    QWORD PTR [rbp-0x68],rcx
  40a361:	mov    QWORD PTR [rbp-0x70],rdx
  40a365:	jne    40a3ae <UnityAssertEqualStringArray@@Base+0xde>
  40a36b:	mov    rax,QWORD PTR [rbp-0x68]
  40a36f:	lea    rcx,[rip+0xec9a]        # 419010 <__bss_start@@Base+0xeb8>
  40a376:	mov    rdx,rcx
  40a379:	add    rdx,0x18
  40a380:	add    rcx,0x20
  40a387:	lea    rsi,[rip+0xf772]        # 419b00 <Unity@@Base>
  40a38e:	mov    rdi,QWORD PTR [rax]
  40a391:	add    rdi,0x1
  40a398:	mov    QWORD PTR [rax],rdi
  40a39b:	cmp    QWORD PTR [rsi+0x48],0x0
  40a3a0:	mov    QWORD PTR [rbp-0x70],rdx
  40a3a4:	mov    QWORD PTR [rbp-0x78],rcx
  40a3a8:	je     40a3d6 <UnityAssertEqualStringArray@@Base+0x106>
  40a3ae:	mov    rax,QWORD PTR [rbp-0x70]
  40a3b2:	lea    rcx,[rip+0xec57]        # 419010 <__bss_start@@Base+0xeb8>
  40a3b9:	add    rcx,0x28
  40a3c0:	mov    rdx,QWORD PTR [rax]
  40a3c3:	add    rdx,0x1
  40a3ca:	mov    QWORD PTR [rax],rdx
  40a3cd:	mov    QWORD PTR [rbp-0x80],rcx
  40a3d1:	jmp    40aa9d <UnityAssertEqualStringArray@@Base+0x7cd>
  40a3d6:	mov    rax,QWORD PTR [rbp-0x78]
  40a3da:	lea    rcx,[rip+0xec2f]        # 419010 <__bss_start@@Base+0xeb8>
  40a3e1:	mov    rdx,rcx
  40a3e4:	add    rdx,0x30
  40a3eb:	add    rcx,0x38
  40a3f2:	mov    rsi,QWORD PTR [rax]
  40a3f5:	add    rsi,0x1
  40a3fc:	mov    QWORD PTR [rax],rsi
  40a3ff:	cmp    DWORD PTR [rbp-0x14],0x0
  40a403:	mov    QWORD PTR [rbp-0x88],rdx
  40a40a:	mov    QWORD PTR [rbp-0x90],rcx
  40a411:	jne    40a46f <UnityAssertEqualStringArray@@Base+0x19f>
  40a417:	mov    rax,QWORD PTR [rbp-0x88]
  40a41e:	mov    rcx,QWORD PTR [rax]
  40a421:	add    rcx,0x1
  40a428:	mov    QWORD PTR [rax],rcx
  40a42b:	mov    rdi,QWORD PTR [rbp-0x28]
  40a42f:	call   406d40 <UnityAssertBits@@Base+0x200>
  40a434:	lea    rdi,[rip+0x9035]        # 413470 <UnityStrPointless@@Base>
  40a43b:	call   405480 <UnityPrint@@Base>
  40a440:	mov    rdi,QWORD PTR [rbp-0x20]
  40a444:	call   406dc0 <UnityAssertBits@@Base+0x280>
  40a449:	lea    rax,[rip+0xf6b0]        # 419b00 <Unity@@Base>
  40a450:	mov    rcx,rax
  40a453:	add    rcx,0x50
  40a45a:	mov    QWORD PTR [rax+0x40],0x1
  40a462:	mov    rdi,rcx
  40a465:	mov    esi,0x1
  40a46a:	call   403200 <longjmp@plt>
  40a46f:	mov    rax,QWORD PTR [rbp-0x90]
  40a476:	mov    rcx,QWORD PTR [rax]
  40a479:	add    rcx,0x1
  40a480:	mov    QWORD PTR [rax],rcx
  40a483:	mov    rax,QWORD PTR [rbp-0x8]
  40a487:	mov    rcx,QWORD PTR [rbp-0x10]
  40a48b:	mov    rdx,QWORD PTR [rbp-0x28]
  40a48f:	mov    rsi,QWORD PTR [rbp-0x20]
  40a493:	mov    rdi,rax
  40a496:	mov    QWORD PTR [rbp-0x98],rsi
  40a49d:	mov    rsi,rcx
  40a4a0:	mov    rcx,QWORD PTR [rbp-0x98]
  40a4a7:	call   407d30 <UnityAssertEqualIntArray@@Base+0xbb0>
  40a4ac:	lea    rcx,[rip+0xeb5d]        # 419010 <__bss_start@@Base+0xeb8>
  40a4b3:	mov    rdx,rcx
  40a4b6:	add    rdx,0x40
  40a4bd:	add    rcx,0x48
  40a4c4:	cmp    eax,0x1
  40a4c7:	mov    QWORD PTR [rbp-0xa0],rdx
  40a4ce:	mov    QWORD PTR [rbp-0xa8],rcx
  40a4d5:	jne    40a506 <UnityAssertEqualStringArray@@Base+0x236>
  40a4db:	mov    rax,QWORD PTR [rbp-0xa0]
  40a4e2:	lea    rcx,[rip+0xeb27]        # 419010 <__bss_start@@Base+0xeb8>
  40a4e9:	add    rcx,0x50
  40a4f0:	mov    rdx,QWORD PTR [rax]
  40a4f3:	add    rdx,0x1
  40a4fa:	mov    QWORD PTR [rax],rdx
  40a4fd:	mov    QWORD PTR [rbp-0x80],rcx
  40a501:	jmp    40aa9d <UnityAssertEqualStringArray@@Base+0x7cd>
  40a506:	mov    rax,QWORD PTR [rbp-0xa8]
  40a50d:	lea    rcx,[rip+0xeafc]        # 419010 <__bss_start@@Base+0xeb8>
  40a514:	add    rcx,0x58
  40a51b:	mov    rdx,QWORD PTR [rax]
  40a51e:	add    rdx,0x1
  40a525:	mov    QWORD PTR [rax],rdx
  40a528:	mov    QWORD PTR [rbp-0xb0],rcx
  40a52f:	mov    rax,QWORD PTR [rbp-0xb0]
  40a536:	lea    rcx,[rip+0xead3]        # 419010 <__bss_start@@Base+0xeb8>
  40a53d:	mov    rdx,rcx
  40a540:	add    rdx,0x60
  40a547:	add    rcx,0x68
  40a54e:	mov    rsi,QWORD PTR [rax]
  40a551:	add    rsi,0x1
  40a558:	mov    QWORD PTR [rax],rsi
  40a55b:	mov    rax,QWORD PTR [rbp-0x8]
  40a55f:	mov    edi,DWORD PTR [rbp-0x30]
  40a562:	mov    esi,edi
  40a564:	cmp    QWORD PTR [rax+rsi*8],0x0
  40a569:	mov    QWORD PTR [rbp-0xb8],rdx
  40a570:	mov    QWORD PTR [rbp-0xc0],rcx
  40a577:	je     40a837 <UnityAssertEqualStringArray@@Base+0x567>
  40a57d:	mov    rax,QWORD PTR [rbp-0xb8]
  40a584:	lea    rcx,[rip+0xea85]        # 419010 <__bss_start@@Base+0xeb8>
  40a58b:	mov    rdx,rcx
  40a58e:	add    rdx,0x70
  40a595:	add    rcx,0x78
  40a59c:	mov    rsi,QWORD PTR [rax]
  40a59f:	add    rsi,0x1
  40a5a6:	mov    QWORD PTR [rax],rsi
  40a5a9:	mov    rax,QWORD PTR [rbp-0x10]
  40a5ad:	mov    edi,DWORD PTR [rbp-0x30]
  40a5b0:	mov    esi,edi
  40a5b2:	cmp    QWORD PTR [rax+rsi*8],0x0
  40a5b7:	mov    QWORD PTR [rbp-0xc8],rdx
  40a5be:	mov    QWORD PTR [rbp-0xc0],rcx
  40a5c5:	je     40a837 <UnityAssertEqualStringArray@@Base+0x567>
  40a5cb:	mov    rax,QWORD PTR [rbp-0xc8]
  40a5d2:	lea    rcx,[rip+0xea37]        # 419010 <__bss_start@@Base+0xeb8>
  40a5d9:	add    rcx,0x80
  40a5e0:	mov    rdx,QWORD PTR [rax]
  40a5e3:	add    rdx,0x1
  40a5ea:	mov    QWORD PTR [rax],rdx
  40a5ed:	mov    DWORD PTR [rbp-0x2c],0x0
  40a5f4:	mov    QWORD PTR [rbp-0xd0],rcx
  40a5fb:	mov    rax,QWORD PTR [rbp-0xd0]
  40a602:	lea    rcx,[rip+0xea07]        # 419010 <__bss_start@@Base+0xeb8>
  40a609:	mov    rdx,rcx
  40a60c:	add    rdx,0x88
  40a613:	add    rcx,0x90
  40a61a:	mov    rsi,QWORD PTR [rax]
  40a61d:	add    rsi,0x1
  40a624:	mov    QWORD PTR [rax],rsi
  40a627:	mov    rax,QWORD PTR [rbp-0x8]
  40a62b:	mov    edi,DWORD PTR [rbp-0x30]
  40a62e:	mov    esi,edi
  40a630:	mov    rax,QWORD PTR [rax+rsi*8]
  40a634:	mov    edi,DWORD PTR [rbp-0x2c]
  40a637:	mov    esi,edi
  40a639:	movsx  edi,BYTE PTR [rax+rsi*1]
  40a63d:	cmp    edi,0x0
  40a640:	mov    r8b,0x1
  40a643:	mov    QWORD PTR [rbp-0xd8],rcx
  40a64a:	mov    QWORD PTR [rbp-0xe0],rdx
  40a651:	mov    BYTE PTR [rbp-0xe1],r8b
  40a658:	jne    40a6ab <UnityAssertEqualStringArray@@Base+0x3db>
  40a65e:	mov    rax,QWORD PTR [rbp-0xd8]
  40a665:	lea    rcx,[rip+0xe9a4]        # 419010 <__bss_start@@Base+0xeb8>
  40a66c:	add    rcx,0x98
  40a673:	mov    rdx,QWORD PTR [rax]
  40a676:	add    rdx,0x1
  40a67d:	mov    QWORD PTR [rax],rdx
  40a680:	mov    rax,QWORD PTR [rbp-0x10]
  40a684:	mov    esi,DWORD PTR [rbp-0x30]
  40a687:	mov    edx,esi
  40a689:	mov    rax,QWORD PTR [rax+rdx*8]
  40a68d:	mov    esi,DWORD PTR [rbp-0x2c]
  40a690:	mov    edx,esi
  40a692:	movsx  esi,BYTE PTR [rax+rdx*1]
  40a696:	cmp    esi,0x0
  40a699:	setne  dil
  40a69d:	mov    QWORD PTR [rbp-0xe0],rcx
  40a6a4:	mov    BYTE PTR [rbp-0xe1],dil
  40a6ab:	mov    al,BYTE PTR [rbp-0xe1]
  40a6b1:	mov    rcx,QWORD PTR [rbp-0xe0]
  40a6b8:	lea    rdx,[rip+0xe951]        # 419010 <__bss_start@@Base+0xeb8>
  40a6bf:	mov    rsi,rdx
  40a6c2:	add    rsi,0xa0
  40a6c9:	add    rdx,0xa8
  40a6d0:	mov    rdi,QWORD PTR [rcx]
  40a6d3:	add    rdi,0x1
  40a6da:	mov    QWORD PTR [rcx],rdi
  40a6dd:	test   al,0x1
  40a6df:	mov    QWORD PTR [rbp-0xf0],rsi
  40a6e6:	mov    QWORD PTR [rbp-0xf8],rdx
  40a6ed:	jne    40a6f8 <UnityAssertEqualStringArray@@Base+0x428>
  40a6f3:	jmp    40a809 <UnityAssertEqualStringArray@@Base+0x539>
  40a6f8:	mov    rax,QWORD PTR [rbp-0xf0]
  40a6ff:	lea    rcx,[rip+0xe90a]        # 419010 <__bss_start@@Base+0xeb8>
  40a706:	mov    rdx,rcx
  40a709:	add    rdx,0xb0
  40a710:	add    rcx,0xb8
  40a717:	mov    rsi,QWORD PTR [rax]
  40a71a:	add    rsi,0x1
  40a721:	mov    QWORD PTR [rax],rsi
  40a724:	mov    rax,QWORD PTR [rbp-0x8]
  40a728:	mov    edi,DWORD PTR [rbp-0x30]
  40a72b:	mov    esi,edi
  40a72d:	mov    rax,QWORD PTR [rax+rsi*8]
  40a731:	mov    edi,DWORD PTR [rbp-0x2c]
  40a734:	mov    esi,edi
  40a736:	movsx  edi,BYTE PTR [rax+rsi*1]
  40a73a:	mov    rax,QWORD PTR [rbp-0x10]
  40a73e:	mov    r8d,DWORD PTR [rbp-0x30]
  40a742:	mov    esi,r8d
  40a745:	mov    rax,QWORD PTR [rax+rsi*8]
  40a749:	mov    r8d,DWORD PTR [rbp-0x2c]
  40a74d:	mov    esi,r8d
  40a750:	movsx  r8d,BYTE PTR [rax+rsi*1]
  40a755:	cmp    edi,r8d
  40a758:	mov    QWORD PTR [rbp-0x100],rdx
  40a75f:	mov    QWORD PTR [rbp-0x108],rcx
  40a766:	je     40a7a9 <UnityAssertEqualStringArray@@Base+0x4d9>
  40a76c:	mov    rax,QWORD PTR [rbp-0x100]
  40a773:	lea    rcx,[rip+0xe896]        # 419010 <__bss_start@@Base+0xeb8>
  40a77a:	add    rcx,0xc0
  40a781:	lea    rdx,[rip+0xf378]        # 419b00 <Unity@@Base>
  40a788:	mov    rsi,QWORD PTR [rax]
  40a78b:	add    rsi,0x1
  40a792:	mov    QWORD PTR [rax],rsi
  40a795:	mov    QWORD PTR [rdx+0x40],0x1
  40a79d:	mov    QWORD PTR [rbp-0xf8],rcx
  40a7a4:	jmp    40a809 <UnityAssertEqualStringArray@@Base+0x539>
  40a7a9:	mov    rax,QWORD PTR [rbp-0x108]
  40a7b0:	lea    rcx,[rip+0xe859]        # 419010 <__bss_start@@Base+0xeb8>
  40a7b7:	add    rcx,0xc8
  40a7be:	mov    rdx,QWORD PTR [rax]
  40a7c1:	add    rdx,0x1
  40a7c8:	mov    QWORD PTR [rax],rdx
  40a7cb:	mov    QWORD PTR [rbp-0x110],rcx
  40a7d2:	mov    rax,QWORD PTR [rbp-0x110]
  40a7d9:	lea    rcx,[rip+0xe830]        # 419010 <__bss_start@@Base+0xeb8>
  40a7e0:	add    rcx,0xd0
  40a7e7:	mov    rdx,QWORD PTR [rax]
  40a7ea:	add    rdx,0x1
  40a7f1:	mov    QWORD PTR [rax],rdx
  40a7f4:	mov    esi,DWORD PTR [rbp-0x2c]
  40a7f7:	add    esi,0x1
  40a7fa:	mov    DWORD PTR [rbp-0x2c],esi
  40a7fd:	mov    QWORD PTR [rbp-0xd0],rcx
  40a804:	jmp    40a5fb <UnityAssertEqualStringArray@@Base+0x32b>
  40a809:	mov    rax,QWORD PTR [rbp-0xf8]
  40a810:	lea    rcx,[rip+0xe7f9]        # 419010 <__bss_start@@Base+0xeb8>
  40a817:	add    rcx,0xd8
  40a81e:	mov    rdx,QWORD PTR [rax]
  40a821:	add    rdx,0x1
  40a828:	mov    QWORD PTR [rax],rdx
  40a82b:	mov    QWORD PTR [rbp-0x118],rcx
  40a832:	jmp    40a8f3 <UnityAssertEqualStringArray@@Base+0x623>
  40a837:	mov    rax,QWORD PTR [rbp-0xc0]
  40a83e:	lea    rcx,[rip+0xe7cb]        # 419010 <__bss_start@@Base+0xeb8>
  40a845:	mov    rdx,rcx
  40a848:	add    rdx,0xe0
  40a84f:	add    rcx,0xe8
  40a856:	mov    rsi,QWORD PTR [rax]
  40a859:	add    rsi,0x1
  40a860:	mov    QWORD PTR [rax],rsi
  40a863:	mov    rax,QWORD PTR [rbp-0x8]
  40a867:	mov    edi,DWORD PTR [rbp-0x30]
  40a86a:	mov    esi,edi
  40a86c:	mov    rax,QWORD PTR [rax+rsi*8]
  40a870:	mov    rsi,QWORD PTR [rbp-0x10]
  40a874:	mov    edi,DWORD PTR [rbp-0x30]
  40a877:	mov    r8d,edi
  40a87a:	cmp    rax,QWORD PTR [rsi+r8*8]
  40a87e:	mov    QWORD PTR [rbp-0x120],rdx
  40a885:	mov    QWORD PTR [rbp-0x128],rcx
  40a88c:	je     40a8ca <UnityAssertEqualStringArray@@Base+0x5fa>
  40a892:	mov    rax,QWORD PTR [rbp-0x120]
  40a899:	lea    rcx,[rip+0xe770]        # 419010 <__bss_start@@Base+0xeb8>
  40a8a0:	add    rcx,0xf0
  40a8a7:	lea    rdx,[rip+0xf252]        # 419b00 <Unity@@Base>
  40a8ae:	mov    rsi,QWORD PTR [rax]
  40a8b1:	add    rsi,0x1
  40a8b8:	mov    QWORD PTR [rax],rsi
  40a8bb:	mov    QWORD PTR [rdx+0x40],0x1
  40a8c3:	mov    QWORD PTR [rbp-0x128],rcx
  40a8ca:	mov    rax,QWORD PTR [rbp-0x128]
  40a8d1:	lea    rcx,[rip+0xe738]        # 419010 <__bss_start@@Base+0xeb8>
  40a8d8:	add    rcx,0xf8
  40a8df:	mov    rdx,QWORD PTR [rax]
  40a8e2:	add    rdx,0x1
  40a8e9:	mov    QWORD PTR [rax],rdx
  40a8ec:	mov    QWORD PTR [rbp-0x118],rcx
  40a8f3:	mov    rax,QWORD PTR [rbp-0x118]
  40a8fa:	lea    rcx,[rip+0xe70f]        # 419010 <__bss_start@@Base+0xeb8>
  40a901:	mov    rdx,rcx
  40a904:	add    rdx,0x100
  40a90b:	add    rcx,0x108
  40a912:	lea    rsi,[rip+0xf1e7]        # 419b00 <Unity@@Base>
  40a919:	mov    rdi,QWORD PTR [rax]
  40a91c:	add    rdi,0x1
  40a923:	mov    QWORD PTR [rax],rdi
  40a926:	cmp    QWORD PTR [rsi+0x40],0x0
  40a92b:	mov    QWORD PTR [rbp-0x130],rdx
  40a932:	mov    QWORD PTR [rbp-0x138],rcx
  40a939:	je     40aa2b <UnityAssertEqualStringArray@@Base+0x75b>
  40a93f:	mov    rax,QWORD PTR [rbp-0x130]
  40a946:	mov    rcx,QWORD PTR [rax]
  40a949:	add    rcx,0x1
  40a950:	mov    QWORD PTR [rax],rcx
  40a953:	mov    rdi,QWORD PTR [rbp-0x28]
  40a957:	call   406d40 <UnityAssertBits@@Base+0x200>
  40a95c:	lea    rax,[rip+0xe6ad]        # 419010 <__bss_start@@Base+0xeb8>
  40a963:	mov    rcx,rax
  40a966:	add    rcx,0x110
  40a96d:	add    rax,0x118
  40a973:	cmp    DWORD PTR [rbp-0x14],0x1
  40a977:	mov    QWORD PTR [rbp-0x140],rcx
  40a97e:	mov    QWORD PTR [rbp-0x148],rax
  40a985:	jbe    40a9c9 <UnityAssertEqualStringArray@@Base+0x6f9>
  40a98b:	mov    rax,QWORD PTR [rbp-0x140]
  40a992:	lea    rdi,[rip+0x8a79]        # 413412 <UnityStrElement@@Base>
  40a999:	mov    rcx,QWORD PTR [rax]
  40a99c:	add    rcx,0x1
  40a9a3:	mov    QWORD PTR [rax],rcx
  40a9a6:	call   405480 <UnityPrint@@Base>
  40a9ab:	mov    edx,DWORD PTR [rbp-0x30]
  40a9ae:	mov    edi,edx
  40a9b0:	call   406360 <UnityPrintNumberUnsigned@@Base>
  40a9b5:	lea    rax,[rip+0xe654]        # 419010 <__bss_start@@Base+0xeb8>
  40a9bc:	add    rax,0x120
  40a9c2:	mov    QWORD PTR [rbp-0x148],rax
  40a9c9:	mov    rax,QWORD PTR [rbp-0x148]
  40a9d0:	mov    rcx,QWORD PTR [rax]
  40a9d3:	add    rcx,0x1
  40a9da:	mov    QWORD PTR [rax],rcx
  40a9dd:	mov    rax,QWORD PTR [rbp-0x8]
  40a9e1:	mov    edx,DWORD PTR [rbp-0x30]
  40a9e4:	mov    ecx,edx
  40a9e6:	mov    rdi,QWORD PTR [rax+rcx*8]
  40a9ea:	mov    rax,QWORD PTR [rbp-0x10]
  40a9ee:	mov    edx,DWORD PTR [rbp-0x30]
  40a9f1:	mov    ecx,edx
  40a9f3:	mov    rsi,QWORD PTR [rax+rcx*8]
  40a9f7:	call   409970 <UnityAssertEqualString@@Base+0x530>
  40a9fc:	mov    rdi,QWORD PTR [rbp-0x20]
  40aa00:	call   406dc0 <UnityAssertBits@@Base+0x280>
  40aa05:	lea    rax,[rip+0xf0f4]        # 419b00 <Unity@@Base>
  40aa0c:	mov    rcx,rax
  40aa0f:	add    rcx,0x50
  40aa16:	mov    QWORD PTR [rax+0x40],0x1
  40aa1e:	mov    rdi,rcx
  40aa21:	mov    esi,0x1
  40aa26:	call   403200 <longjmp@plt>
  40aa2b:	mov    rax,QWORD PTR [rbp-0x138]
  40aa32:	lea    rcx,[rip+0xe5d7]        # 419010 <__bss_start@@Base+0xeb8>
  40aa39:	add    rcx,0x128
  40aa40:	mov    rdx,QWORD PTR [rax]
  40aa43:	add    rdx,0x1
  40aa4a:	mov    QWORD PTR [rax],rdx
  40aa4d:	mov    QWORD PTR [rbp-0x150],rcx
  40aa54:	mov    rax,QWORD PTR [rbp-0x150]
  40aa5b:	lea    rcx,[rip+0xe5ae]        # 419010 <__bss_start@@Base+0xeb8>
  40aa62:	mov    rdx,rcx
  40aa65:	add    rdx,0x130
  40aa6c:	add    rcx,0x138
  40aa73:	mov    rsi,QWORD PTR [rax]
  40aa76:	add    rsi,0x1
  40aa7d:	mov    QWORD PTR [rax],rsi
  40aa80:	mov    edi,DWORD PTR [rbp-0x30]
  40aa83:	add    edi,0x1
  40aa86:	mov    DWORD PTR [rbp-0x30],edi
  40aa89:	cmp    edi,DWORD PTR [rbp-0x14]
  40aa8c:	mov    QWORD PTR [rbp-0xb0],rdx
  40aa93:	mov    QWORD PTR [rbp-0x80],rcx
  40aa97:	jb     40a52f <UnityAssertEqualStringArray@@Base+0x25f>
  40aa9d:	mov    rax,QWORD PTR [rbp-0x80]
  40aaa1:	mov    rcx,QWORD PTR [rax]
  40aaa4:	add    rcx,0x1
  40aaab:	mov    QWORD PTR [rax],rcx
  40aaae:	mov    rax,QWORD PTR [rip+0xe69b]        # 419150 <__bss_start@@Base+0xff8>
  40aab5:	add    rax,0x1
  40aabb:	mov    QWORD PTR [rip+0xe68e],rax        # 419150 <__bss_start@@Base+0xff8>
  40aac2:	add    rsp,0x150
  40aac9:	pop    rbp
  40aaca:	ret    
  40aacb:	nop    DWORD PTR [rax+rax*1+0x0]

000000000040aad0 <UnityAssertEqualMemory@@Base>:
  40aad0:	push   rbp
  40aad1:	mov    rbp,rsp
  40aad4:	push   r14
  40aad6:	push   rbx
  40aad7:	sub    rsp,0x100
  40aade:	lea    rax,[rip+0xe67b]        # 419160 <__bss_start@@Base+0x1008>
  40aae5:	mov    QWORD PTR [rbp-0x58],rdi
  40aae9:	mov    QWORD PTR [rbp-0x60],rsi
  40aaed:	mov    DWORD PTR [rbp-0x64],edx
  40aaf0:	mov    DWORD PTR [rbp-0x68],ecx
  40aaf3:	mov    QWORD PTR [rbp-0x70],r8
  40aaf7:	mov    QWORD PTR [rbp-0x78],r9
  40aafb:	mov    QWORD PTR [rbp-0x80],rax
  40aaff:	mov    rax,QWORD PTR [rbp-0x80]
  40ab03:	lea    rcx,[rip+0xe656]        # 419160 <__bss_start@@Base+0x1008>
  40ab0a:	mov    rdx,rcx
  40ab0d:	add    rdx,0x8
  40ab14:	add    rcx,0x10
  40ab1b:	lea    rsi,[rip+0xefde]        # 419b00 <Unity@@Base>
  40ab22:	mov    rdi,QWORD PTR [rax]
  40ab25:	add    rdi,0x1
  40ab2c:	mov    QWORD PTR [rax],rdi
  40ab2f:	mov    rax,QWORD PTR [rbp-0x58]
  40ab33:	mov    QWORD PTR [rbp-0x18],rax
  40ab37:	mov    rdi,QWORD PTR [rbp-0x60]
  40ab3b:	mov    QWORD PTR [rbp-0x20],rdi
  40ab3f:	mov    r8d,DWORD PTR [rbp-0x64]
  40ab43:	mov    DWORD PTR [rbp-0x24],r8d
  40ab47:	mov    r9d,DWORD PTR [rbp-0x68]
  40ab4b:	mov    DWORD PTR [rbp-0x28],r9d
  40ab4f:	mov    r10,QWORD PTR [rbp-0x70]
  40ab53:	mov    QWORD PTR [rbp-0x30],r10
  40ab57:	mov    r11,QWORD PTR [rbp-0x78]
  40ab5b:	mov    QWORD PTR [rbp-0x38],r11
  40ab5f:	mov    rbx,QWORD PTR [rbp-0x18]
  40ab63:	mov    QWORD PTR [rbp-0x40],rbx
  40ab67:	mov    rbx,QWORD PTR [rbp-0x20]
  40ab6b:	mov    QWORD PTR [rbp-0x48],rbx
  40ab6f:	mov    r14d,DWORD PTR [rbp-0x28]
  40ab73:	mov    DWORD PTR [rbp-0x4c],r14d
  40ab77:	cmp    QWORD PTR [rsi+0x40],0x0
  40ab7c:	mov    QWORD PTR [rbp-0x88],rcx
  40ab83:	mov    QWORD PTR [rbp-0x90],rdx
  40ab8a:	jne    40abdc <UnityAssertEqualMemory@@Base+0x10c>
  40ab90:	mov    rax,QWORD PTR [rbp-0x88]
  40ab97:	lea    rcx,[rip+0xe5c2]        # 419160 <__bss_start@@Base+0x1008>
  40ab9e:	mov    rdx,rcx
  40aba1:	add    rdx,0x18
  40aba8:	add    rcx,0x20
  40abaf:	lea    rsi,[rip+0xef4a]        # 419b00 <Unity@@Base>
  40abb6:	mov    rdi,QWORD PTR [rax]
  40abb9:	add    rdi,0x1
  40abc0:	mov    QWORD PTR [rax],rdi
  40abc3:	cmp    QWORD PTR [rsi+0x48],0x0
  40abc8:	mov    QWORD PTR [rbp-0x90],rdx
  40abcf:	mov    QWORD PTR [rbp-0x98],rcx
  40abd6:	je     40ac0a <UnityAssertEqualMemory@@Base+0x13a>
  40abdc:	mov    rax,QWORD PTR [rbp-0x90]
  40abe3:	lea    rcx,[rip+0xe576]        # 419160 <__bss_start@@Base+0x1008>
  40abea:	add    rcx,0x28
  40abf1:	mov    rdx,QWORD PTR [rax]
  40abf4:	add    rdx,0x1
  40abfb:	mov    QWORD PTR [rax],rdx
  40abfe:	mov    QWORD PTR [rbp-0xa0],rcx
  40ac05:	jmp    40b071 <UnityAssertEqualMemory@@Base+0x5a1>
  40ac0a:	mov    rax,QWORD PTR [rbp-0x98]
  40ac11:	lea    rcx,[rip+0xe548]        # 419160 <__bss_start@@Base+0x1008>
  40ac18:	mov    rdx,rcx
  40ac1b:	add    rdx,0x30
  40ac22:	add    rcx,0x38
  40ac29:	mov    rsi,QWORD PTR [rax]
  40ac2c:	add    rsi,0x1
  40ac33:	mov    QWORD PTR [rax],rsi
  40ac36:	cmp    DWORD PTR [rbp-0x4c],0x0
  40ac3a:	mov    QWORD PTR [rbp-0xa8],rcx
  40ac41:	mov    QWORD PTR [rbp-0xb0],rdx
  40ac48:	je     40ac92 <UnityAssertEqualMemory@@Base+0x1c2>
  40ac4e:	mov    rax,QWORD PTR [rbp-0xa8]
  40ac55:	lea    rcx,[rip+0xe504]        # 419160 <__bss_start@@Base+0x1008>
  40ac5c:	mov    rdx,rcx
  40ac5f:	add    rdx,0x40
  40ac66:	add    rcx,0x48
  40ac6d:	mov    rsi,QWORD PTR [rax]
  40ac70:	add    rsi,0x1
  40ac77:	mov    QWORD PTR [rax],rsi
  40ac7a:	cmp    DWORD PTR [rbp-0x24],0x0
  40ac7e:	mov    QWORD PTR [rbp-0xb0],rdx
  40ac85:	mov    QWORD PTR [rbp-0xb8],rcx
  40ac8c:	jne    40acea <UnityAssertEqualMemory@@Base+0x21a>
  40ac92:	mov    rax,QWORD PTR [rbp-0xb0]
  40ac99:	mov    rcx,QWORD PTR [rax]
  40ac9c:	add    rcx,0x1
  40aca3:	mov    QWORD PTR [rax],rcx
  40aca6:	mov    rdi,QWORD PTR [rbp-0x38]
  40acaa:	call   406d40 <UnityAssertBits@@Base+0x200>
  40acaf:	lea    rdi,[rip+0x87ba]        # 413470 <UnityStrPointless@@Base>
  40acb6:	call   405480 <UnityPrint@@Base>
  40acbb:	mov    rdi,QWORD PTR [rbp-0x30]
  40acbf:	call   406dc0 <UnityAssertBits@@Base+0x280>
  40acc4:	lea    rax,[rip+0xee35]        # 419b00 <Unity@@Base>
  40accb:	mov    rcx,rax
  40acce:	add    rcx,0x50
  40acd5:	mov    QWORD PTR [rax+0x40],0x1
  40acdd:	mov    rdi,rcx
  40ace0:	mov    esi,0x1
  40ace5:	call   403200 <longjmp@plt>
  40acea:	mov    rax,QWORD PTR [rbp-0xb8]
  40acf1:	mov    rcx,QWORD PTR [rax]
  40acf4:	add    rcx,0x1
  40acfb:	mov    QWORD PTR [rax],rcx
  40acfe:	mov    rdi,QWORD PTR [rbp-0x18]
  40ad02:	mov    rsi,QWORD PTR [rbp-0x20]
  40ad06:	mov    rdx,QWORD PTR [rbp-0x38]
  40ad0a:	mov    rcx,QWORD PTR [rbp-0x30]
  40ad0e:	call   407d30 <UnityAssertEqualIntArray@@Base+0xbb0>
  40ad13:	lea    rcx,[rip+0xe446]        # 419160 <__bss_start@@Base+0x1008>
  40ad1a:	mov    rdx,rcx
  40ad1d:	add    rdx,0x50
  40ad24:	add    rcx,0x58
  40ad2b:	cmp    eax,0x1
  40ad2e:	mov    QWORD PTR [rbp-0xc0],rdx
  40ad35:	mov    QWORD PTR [rbp-0xc8],rcx
  40ad3c:	jne    40ad70 <UnityAssertEqualMemory@@Base+0x2a0>
  40ad42:	mov    rax,QWORD PTR [rbp-0xc0]
  40ad49:	lea    rcx,[rip+0xe410]        # 419160 <__bss_start@@Base+0x1008>
  40ad50:	add    rcx,0x60
  40ad57:	mov    rdx,QWORD PTR [rax]
  40ad5a:	add    rdx,0x1
  40ad61:	mov    QWORD PTR [rax],rdx
  40ad64:	mov    QWORD PTR [rbp-0xa0],rcx
  40ad6b:	jmp    40b071 <UnityAssertEqualMemory@@Base+0x5a1>
  40ad70:	mov    rax,QWORD PTR [rbp-0xc8]
  40ad77:	lea    rcx,[rip+0xe3e2]        # 419160 <__bss_start@@Base+0x1008>
  40ad7e:	add    rcx,0x68
  40ad85:	mov    rdx,QWORD PTR [rax]
  40ad88:	add    rdx,0x1
  40ad8f:	mov    QWORD PTR [rax],rdx
  40ad92:	mov    QWORD PTR [rbp-0xd0],rcx
  40ad99:	mov    rax,QWORD PTR [rbp-0xd0]
  40ada0:	lea    rcx,[rip+0xe3b9]        # 419160 <__bss_start@@Base+0x1008>
  40ada7:	mov    rdx,rcx
  40adaa:	add    rdx,0x70
  40adb1:	add    rcx,0x78
  40adb8:	mov    rsi,QWORD PTR [rax]
  40adbb:	add    rsi,0x1
  40adc2:	mov    QWORD PTR [rax],rsi
  40adc5:	mov    edi,DWORD PTR [rbp-0x4c]
  40adc8:	mov    r8d,edi
  40adcb:	add    r8d,0xffffffff
  40adcf:	mov    DWORD PTR [rbp-0x4c],r8d
  40add3:	cmp    edi,0x0
  40add6:	mov    QWORD PTR [rbp-0xd8],rdx
  40addd:	mov    QWORD PTR [rbp-0xa0],rcx
  40ade4:	je     40b071 <UnityAssertEqualMemory@@Base+0x5a1>
  40adea:	mov    rax,QWORD PTR [rbp-0xd8]
  40adf1:	lea    rcx,[rip+0xe368]        # 419160 <__bss_start@@Base+0x1008>
  40adf8:	add    rcx,0x80
  40adff:	mov    rdx,QWORD PTR [rax]
  40ae02:	add    rdx,0x1
  40ae09:	mov    QWORD PTR [rax],rdx
  40ae0c:	mov    esi,DWORD PTR [rbp-0x24]
  40ae0f:	mov    DWORD PTR [rbp-0x50],esi
  40ae12:	mov    QWORD PTR [rbp-0xe0],rcx
  40ae19:	mov    rax,QWORD PTR [rbp-0xe0]
  40ae20:	lea    rcx,[rip+0xe339]        # 419160 <__bss_start@@Base+0x1008>
  40ae27:	mov    rdx,rcx
  40ae2a:	add    rdx,0x88
  40ae31:	add    rcx,0x90
  40ae38:	mov    rsi,QWORD PTR [rax]
  40ae3b:	add    rsi,0x1
  40ae42:	mov    QWORD PTR [rax],rsi
  40ae45:	mov    edi,DWORD PTR [rbp-0x50]
  40ae48:	mov    r8d,edi
  40ae4b:	add    r8d,0xffffffff
  40ae4f:	mov    DWORD PTR [rbp-0x50],r8d
  40ae53:	cmp    edi,0x0
  40ae56:	mov    QWORD PTR [rbp-0xe8],rdx
  40ae5d:	mov    QWORD PTR [rbp-0xf0],rcx
  40ae64:	je     40b043 <UnityAssertEqualMemory@@Base+0x573>
  40ae6a:	mov    rax,QWORD PTR [rbp-0xe8]
  40ae71:	lea    rcx,[rip+0xe2e8]        # 419160 <__bss_start@@Base+0x1008>
  40ae78:	mov    rdx,rcx
  40ae7b:	add    rdx,0x98
  40ae82:	add    rcx,0xa0
  40ae89:	mov    rsi,QWORD PTR [rax]
  40ae8c:	add    rsi,0x1
  40ae93:	mov    QWORD PTR [rax],rsi
  40ae96:	mov    rax,QWORD PTR [rbp-0x40]
  40ae9a:	movzx  edi,BYTE PTR [rax]
  40ae9d:	mov    rax,QWORD PTR [rbp-0x48]
  40aea1:	movzx  r8d,BYTE PTR [rax]
  40aea5:	cmp    edi,r8d
  40aea8:	mov    QWORD PTR [rbp-0xf8],rdx
  40aeaf:	mov    QWORD PTR [rbp-0x100],rcx
  40aeb6:	je     40aff9 <UnityAssertEqualMemory@@Base+0x529>
  40aebc:	mov    rax,QWORD PTR [rbp-0xf8]
  40aec3:	mov    rcx,QWORD PTR [rax]
  40aec6:	add    rcx,0x1
  40aecd:	mov    QWORD PTR [rax],rcx
  40aed0:	mov    rdi,QWORD PTR [rbp-0x38]
  40aed4:	call   406d40 <UnityAssertBits@@Base+0x200>
  40aed9:	lea    rdi,[rip+0x8550]        # 413430 <UnityStrMemory@@Base>
  40aee0:	call   405480 <UnityPrint@@Base>
  40aee5:	lea    rax,[rip+0xe274]        # 419160 <__bss_start@@Base+0x1008>
  40aeec:	mov    rcx,rax
  40aeef:	add    rcx,0xa8
  40aef6:	add    rax,0xb0
  40aefc:	cmp    DWORD PTR [rbp-0x28],0x1
  40af00:	mov    QWORD PTR [rbp-0x108],rcx
  40af07:	mov    QWORD PTR [rbp-0x110],rax
  40af0e:	jbe    40af5a <UnityAssertEqualMemory@@Base+0x48a>
  40af14:	mov    rax,QWORD PTR [rbp-0x108]
  40af1b:	lea    rdi,[rip+0x84f0]        # 413412 <UnityStrElement@@Base>
  40af22:	mov    rcx,QWORD PTR [rax]
  40af25:	add    rcx,0x1
  40af2c:	mov    QWORD PTR [rax],rcx
  40af2f:	call   405480 <UnityPrint@@Base>
  40af34:	mov    edx,DWORD PTR [rbp-0x28]
  40af37:	sub    edx,DWORD PTR [rbp-0x4c]
  40af3a:	sub    edx,0x1
  40af3d:	mov    edx,edx
  40af3f:	mov    edi,edx
  40af41:	call   406360 <UnityPrintNumberUnsigned@@Base>
  40af46:	lea    rax,[rip+0xe213]        # 419160 <__bss_start@@Base+0x1008>
  40af4d:	add    rax,0xb8
  40af53:	mov    QWORD PTR [rbp-0x110],rax
  40af5a:	mov    rax,QWORD PTR [rbp-0x110]
  40af61:	lea    rdi,[rip+0x84b4]        # 41341c <UnityStrByte@@Base>
  40af68:	mov    rcx,QWORD PTR [rax]
  40af6b:	add    rcx,0x1
  40af72:	mov    QWORD PTR [rax],rcx
  40af75:	call   405480 <UnityPrint@@Base>
  40af7a:	mov    edx,DWORD PTR [rbp-0x24]
  40af7d:	sub    edx,DWORD PTR [rbp-0x50]
  40af80:	sub    edx,0x1
  40af83:	mov    edx,edx
  40af85:	mov    edi,edx
  40af87:	call   406360 <UnityPrintNumberUnsigned@@Base>
  40af8c:	lea    rdi,[rip+0x8469]        # 4133fc <UnityStrExpected@@Base>
  40af93:	call   405480 <UnityPrint@@Base>
  40af98:	mov    rax,QWORD PTR [rbp-0x40]
  40af9c:	movzx  edx,BYTE PTR [rax]
  40af9f:	mov    edi,edx
  40afa1:	mov    esi,0x41
  40afa6:	call   405e80 <UnityPrintNumberByStyle@@Base>
  40afab:	lea    rdi,[rip+0x8455]        # 413407 <UnityStrWas@@Base>
  40afb2:	call   405480 <UnityPrint@@Base>
  40afb7:	mov    rax,QWORD PTR [rbp-0x48]
  40afbb:	movzx  edx,BYTE PTR [rax]
  40afbe:	mov    edi,edx
  40afc0:	mov    esi,0x41
  40afc5:	call   405e80 <UnityPrintNumberByStyle@@Base>
  40afca:	mov    rdi,QWORD PTR [rbp-0x30]
  40afce:	call   406dc0 <UnityAssertBits@@Base+0x280>
  40afd3:	lea    rax,[rip+0xeb26]        # 419b00 <Unity@@Base>
  40afda:	mov    rcx,rax
  40afdd:	add    rcx,0x50
  40afe4:	mov    QWORD PTR [rax+0x40],0x1
  40afec:	mov    rdi,rcx
  40afef:	mov    esi,0x1
  40aff4:	call   403200 <longjmp@plt>
  40aff9:	mov    rax,QWORD PTR [rbp-0x100]
  40b000:	lea    rcx,[rip+0xe159]        # 419160 <__bss_start@@Base+0x1008>
  40b007:	add    rcx,0xc0
  40b00e:	mov    rdx,QWORD PTR [rax]
  40b011:	add    rdx,0x1
  40b018:	mov    QWORD PTR [rax],rdx
  40b01b:	mov    rax,QWORD PTR [rbp-0x40]
  40b01f:	add    rax,0x1
  40b025:	mov    QWORD PTR [rbp-0x40],rax
  40b029:	mov    rax,QWORD PTR [rbp-0x48]
  40b02d:	add    rax,0x1
  40b033:	mov    QWORD PTR [rbp-0x48],rax
  40b037:	mov    QWORD PTR [rbp-0xe0],rcx
  40b03e:	jmp    40ae19 <UnityAssertEqualMemory@@Base+0x349>
  40b043:	mov    rax,QWORD PTR [rbp-0xf0]
  40b04a:	lea    rcx,[rip+0xe10f]        # 419160 <__bss_start@@Base+0x1008>
  40b051:	add    rcx,0xc8
  40b058:	mov    rdx,QWORD PTR [rax]
  40b05b:	add    rdx,0x1
  40b062:	mov    QWORD PTR [rax],rdx
  40b065:	mov    QWORD PTR [rbp-0xd0],rcx
  40b06c:	jmp    40ad99 <UnityAssertEqualMemory@@Base+0x2c9>
  40b071:	mov    rax,QWORD PTR [rbp-0xa0]
  40b078:	mov    rcx,QWORD PTR [rax]
  40b07b:	add    rcx,0x1
  40b082:	mov    QWORD PTR [rax],rcx
  40b085:	mov    rax,QWORD PTR [rip+0xe1a4]        # 419230 <__bss_start@@Base+0x10d8>
  40b08c:	add    rax,0x1
  40b092:	mov    QWORD PTR [rip+0xe197],rax        # 419230 <__bss_start@@Base+0x10d8>
  40b099:	add    rsp,0x100
  40b0a0:	pop    rbx
  40b0a1:	pop    r14
  40b0a3:	pop    rbp
  40b0a4:	ret    
  40b0a5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40b0af:	nop

000000000040b0b0 <UnityFail@@Base>:
  40b0b0:	push   rbp
  40b0b1:	mov    rbp,rsp
  40b0b4:	sub    rsp,0x80
  40b0bb:	lea    rax,[rip+0xe17e]        # 419240 <__bss_start@@Base+0x10e8>
  40b0c2:	mov    QWORD PTR [rbp-0x18],rdi
  40b0c6:	mov    QWORD PTR [rbp-0x20],rsi
  40b0ca:	mov    QWORD PTR [rbp-0x28],rax
  40b0ce:	mov    rax,QWORD PTR [rbp-0x28]
  40b0d2:	lea    rcx,[rip+0xe167]        # 419240 <__bss_start@@Base+0x10e8>
  40b0d9:	mov    rdx,rcx
  40b0dc:	add    rdx,0x8
  40b0e3:	add    rcx,0x10
  40b0ea:	lea    rsi,[rip+0xea0f]        # 419b00 <Unity@@Base>
  40b0f1:	mov    rdi,QWORD PTR [rax]
  40b0f4:	add    rdi,0x1
  40b0fb:	mov    QWORD PTR [rax],rdi
  40b0fe:	mov    rax,QWORD PTR [rbp-0x18]
  40b102:	mov    QWORD PTR [rbp-0x8],rax
  40b106:	mov    rdi,QWORD PTR [rbp-0x20]
  40b10a:	mov    QWORD PTR [rbp-0x10],rdi
  40b10e:	cmp    QWORD PTR [rsi+0x40],0x0
  40b113:	mov    QWORD PTR [rbp-0x30],rcx
  40b117:	mov    QWORD PTR [rbp-0x38],rdx
  40b11b:	jne    40b164 <UnityFail@@Base+0xb4>
  40b121:	mov    rax,QWORD PTR [rbp-0x30]
  40b125:	lea    rcx,[rip+0xe114]        # 419240 <__bss_start@@Base+0x10e8>
  40b12c:	mov    rdx,rcx
  40b12f:	add    rdx,0x18
  40b136:	add    rcx,0x20
  40b13d:	lea    rsi,[rip+0xe9bc]        # 419b00 <Unity@@Base>
  40b144:	mov    rdi,QWORD PTR [rax]
  40b147:	add    rdi,0x1
  40b14e:	mov    QWORD PTR [rax],rdi
  40b151:	cmp    QWORD PTR [rsi+0x48],0x0
  40b156:	mov    QWORD PTR [rbp-0x38],rdx
  40b15a:	mov    QWORD PTR [rbp-0x40],rcx
  40b15e:	je     40b192 <UnityFail@@Base+0xe2>
  40b164:	mov    rax,QWORD PTR [rbp-0x38]
  40b168:	mov    rcx,QWORD PTR [rax]
  40b16b:	add    rcx,0x1
  40b172:	mov    QWORD PTR [rax],rcx
  40b175:	mov    rax,QWORD PTR [rip+0xe0ec]        # 419268 <__bss_start@@Base+0x1110>
  40b17c:	add    rax,0x1
  40b182:	mov    QWORD PTR [rip+0xe0df],rax        # 419268 <__bss_start@@Base+0x1110>
  40b189:	add    rsp,0x80
  40b190:	pop    rbp
  40b191:	ret    
  40b192:	mov    rax,QWORD PTR [rbp-0x40]
  40b196:	lea    rcx,[rip+0xe963]        # 419b00 <Unity@@Base>
  40b19d:	mov    rdx,QWORD PTR [rax]
  40b1a0:	add    rdx,0x1
  40b1a7:	mov    QWORD PTR [rax],rdx
  40b1aa:	mov    rdi,QWORD PTR [rcx]
  40b1ad:	mov    rsi,QWORD PTR [rbp-0x10]
  40b1b1:	call   406aa0 <UnityConcludeTest@@Base+0x1d0>
  40b1b6:	call   406830 <UnityPrintFail@@Base>
  40b1bb:	lea    rax,[rip+0xe07e]        # 419240 <__bss_start@@Base+0x10e8>
  40b1c2:	mov    rcx,rax
  40b1c5:	add    rcx,0x30
  40b1cc:	add    rax,0x38
  40b1d2:	cmp    QWORD PTR [rbp-0x8],0x0
  40b1d7:	mov    QWORD PTR [rbp-0x48],rcx
  40b1db:	mov    QWORD PTR [rbp-0x50],rax
  40b1df:	je     40b395 <UnityFail@@Base+0x2e5>
  40b1e5:	mov    rax,QWORD PTR [rbp-0x48]
  40b1e9:	mov    rcx,QWORD PTR [rax]
  40b1ec:	add    rcx,0x1
  40b1f3:	mov    QWORD PTR [rax],rcx
  40b1f6:	mov    edi,0x3a
  40b1fb:	call   403050 <putchar@plt>
  40b200:	lea    rcx,[rip+0xe039]        # 419240 <__bss_start@@Base+0x10e8>
  40b207:	mov    rdx,rcx
  40b20a:	add    rdx,0x40
  40b211:	add    rcx,0x48
  40b218:	lea    rsi,[rip+0xe8e1]        # 419b00 <Unity@@Base>
  40b21f:	cmp    QWORD PTR [rsi+0x10],0x0
  40b224:	mov    QWORD PTR [rbp-0x58],rdx
  40b228:	mov    QWORD PTR [rbp-0x60],rcx
  40b22c:	je     40b2fc <UnityFail@@Base+0x24c>
  40b232:	mov    rax,QWORD PTR [rbp-0x58]
  40b236:	lea    rdi,[rip+0x83a8]        # 4135e5 <UnityStrDetail1Name@@Base>
  40b23d:	mov    rcx,QWORD PTR [rax]
  40b240:	add    rcx,0x1
  40b247:	mov    QWORD PTR [rax],rcx
  40b24a:	call   405480 <UnityPrint@@Base>
  40b24f:	lea    rax,[rip+0xe8aa]        # 419b00 <Unity@@Base>
  40b256:	mov    rdi,QWORD PTR [rax+0x10]
  40b25a:	call   405480 <UnityPrint@@Base>
  40b25f:	lea    rax,[rip+0xdfda]        # 419240 <__bss_start@@Base+0x10e8>
  40b266:	mov    rcx,rax
  40b269:	add    rcx,0x50
  40b270:	add    rax,0x58
  40b276:	lea    rdx,[rip+0xe883]        # 419b00 <Unity@@Base>
  40b27d:	cmp    QWORD PTR [rdx+0x18],0x0
  40b282:	mov    QWORD PTR [rbp-0x68],rcx
  40b286:	mov    QWORD PTR [rbp-0x70],rax
  40b28a:	je     40b2ce <UnityFail@@Base+0x21e>
  40b290:	mov    rax,QWORD PTR [rbp-0x68]
  40b294:	lea    rdi,[rip+0x8354]        # 4135ef <UnityStrDetail2Name@@Base>
  40b29b:	mov    rcx,QWORD PTR [rax]
  40b29e:	add    rcx,0x1
  40b2a5:	mov    QWORD PTR [rax],rcx
  40b2a8:	call   405480 <UnityPrint@@Base>
  40b2ad:	lea    rax,[rip+0xe84c]        # 419b00 <Unity@@Base>
  40b2b4:	mov    rdi,QWORD PTR [rax+0x18]
  40b2b8:	call   405480 <UnityPrint@@Base>
  40b2bd:	lea    rax,[rip+0xdf7c]        # 419240 <__bss_start@@Base+0x10e8>
  40b2c4:	add    rax,0x60
  40b2ca:	mov    QWORD PTR [rbp-0x70],rax
  40b2ce:	mov    rax,QWORD PTR [rbp-0x70]
  40b2d2:	lea    rdi,[rip+0x8120]        # 4133f9 <UnityStrSpacer@@Base>
  40b2d9:	mov    rcx,QWORD PTR [rax]
  40b2dc:	add    rcx,0x1
  40b2e3:	mov    QWORD PTR [rax],rcx
  40b2e6:	call   405480 <UnityPrint@@Base>
  40b2eb:	lea    rax,[rip+0xdf4e]        # 419240 <__bss_start@@Base+0x10e8>
  40b2f2:	add    rax,0x68
  40b2f8:	mov    QWORD PTR [rbp-0x60],rax
  40b2fc:	mov    rax,QWORD PTR [rbp-0x60]
  40b300:	lea    rcx,[rip+0xdf39]        # 419240 <__bss_start@@Base+0x10e8>
  40b307:	mov    rdx,rcx
  40b30a:	add    rdx,0x70
  40b311:	add    rcx,0x78
  40b318:	mov    rsi,QWORD PTR [rax]
  40b31b:	add    rsi,0x1
  40b322:	mov    QWORD PTR [rax],rsi
  40b325:	mov    rax,QWORD PTR [rbp-0x8]
  40b329:	movsx  edi,BYTE PTR [rax]
  40b32c:	cmp    edi,0x20
  40b32f:	mov    QWORD PTR [rbp-0x78],rdx
  40b333:	mov    QWORD PTR [rbp-0x80],rcx
  40b337:	je     40b36a <UnityFail@@Base+0x2ba>
  40b33d:	mov    rax,QWORD PTR [rbp-0x78]
  40b341:	mov    rcx,QWORD PTR [rax]
  40b344:	add    rcx,0x1
  40b34b:	mov    QWORD PTR [rax],rcx
  40b34e:	mov    edi,0x20
  40b353:	call   403050 <putchar@plt>
  40b358:	lea    rcx,[rip+0xdee1]        # 419240 <__bss_start@@Base+0x10e8>
  40b35f:	add    rcx,0x80
  40b366:	mov    QWORD PTR [rbp-0x80],rcx
  40b36a:	mov    rax,QWORD PTR [rbp-0x80]
  40b36e:	mov    rcx,QWORD PTR [rax]
  40b371:	add    rcx,0x1
  40b378:	mov    QWORD PTR [rax],rcx
  40b37b:	mov    rdi,QWORD PTR [rbp-0x8]
  40b37f:	call   405480 <UnityPrint@@Base>
  40b384:	lea    rax,[rip+0xdeb5]        # 419240 <__bss_start@@Base+0x10e8>
  40b38b:	add    rax,0x88
  40b391:	mov    QWORD PTR [rbp-0x50],rax
  40b395:	mov    rax,QWORD PTR [rbp-0x50]
  40b399:	lea    rcx,[rip+0xe760]        # 419b00 <Unity@@Base>
  40b3a0:	mov    rdx,rcx
  40b3a3:	add    rdx,0x50
  40b3aa:	mov    rsi,QWORD PTR [rax]
  40b3ad:	add    rsi,0x1
  40b3b4:	mov    QWORD PTR [rax],rsi
  40b3b7:	mov    QWORD PTR [rcx+0x40],0x1
  40b3bf:	mov    rdi,rdx
  40b3c2:	mov    esi,0x1
  40b3c7:	call   403200 <longjmp@plt>
  40b3cc:	nop    DWORD PTR [rax+0x0]

000000000040b3d0 <UnityIgnore@@Base>:
  40b3d0:	push   rbp
  40b3d1:	mov    rbp,rsp
  40b3d4:	sub    rsp,0x60
  40b3d8:	lea    rax,[rip+0xdef1]        # 4192d0 <__bss_start@@Base+0x1178>
  40b3df:	mov    QWORD PTR [rbp-0x18],rdi
  40b3e3:	mov    QWORD PTR [rbp-0x20],rsi
  40b3e7:	mov    QWORD PTR [rbp-0x28],rax
  40b3eb:	mov    rax,QWORD PTR [rbp-0x28]
  40b3ef:	lea    rcx,[rip+0xdeda]        # 4192d0 <__bss_start@@Base+0x1178>
  40b3f6:	mov    rdx,rcx
  40b3f9:	add    rdx,0x8
  40b400:	add    rcx,0x10
  40b407:	lea    rsi,[rip+0xe6f2]        # 419b00 <Unity@@Base>
  40b40e:	mov    rdi,QWORD PTR [rax]
  40b411:	add    rdi,0x1
  40b418:	mov    QWORD PTR [rax],rdi
  40b41b:	mov    rax,QWORD PTR [rbp-0x18]
  40b41f:	mov    QWORD PTR [rbp-0x8],rax
  40b423:	mov    rdi,QWORD PTR [rbp-0x20]
  40b427:	mov    QWORD PTR [rbp-0x10],rdi
  40b42b:	cmp    QWORD PTR [rsi+0x40],0x0
  40b430:	mov    QWORD PTR [rbp-0x30],rcx
  40b434:	mov    QWORD PTR [rbp-0x38],rdx
  40b438:	jne    40b481 <UnityIgnore@@Base+0xb1>
  40b43e:	mov    rax,QWORD PTR [rbp-0x30]
  40b442:	lea    rcx,[rip+0xde87]        # 4192d0 <__bss_start@@Base+0x1178>
  40b449:	mov    rdx,rcx
  40b44c:	add    rdx,0x18
  40b453:	add    rcx,0x20
  40b45a:	lea    rsi,[rip+0xe69f]        # 419b00 <Unity@@Base>
  40b461:	mov    rdi,QWORD PTR [rax]
  40b464:	add    rdi,0x1
  40b46b:	mov    QWORD PTR [rax],rdi
  40b46e:	cmp    QWORD PTR [rsi+0x48],0x0
  40b473:	mov    QWORD PTR [rbp-0x38],rdx
  40b477:	mov    QWORD PTR [rbp-0x40],rcx
  40b47b:	je     40b4ac <UnityIgnore@@Base+0xdc>
  40b481:	mov    rax,QWORD PTR [rbp-0x38]
  40b485:	mov    rcx,QWORD PTR [rax]
  40b488:	add    rcx,0x1
  40b48f:	mov    QWORD PTR [rax],rcx
  40b492:	mov    rax,QWORD PTR [rip+0xde5f]        # 4192f8 <__bss_start@@Base+0x11a0>
  40b499:	add    rax,0x1
  40b49f:	mov    QWORD PTR [rip+0xde52],rax        # 4192f8 <__bss_start@@Base+0x11a0>
  40b4a6:	add    rsp,0x60
  40b4aa:	pop    rbp
  40b4ab:	ret    
  40b4ac:	mov    rax,QWORD PTR [rbp-0x40]
  40b4b0:	lea    rcx,[rip+0xe649]        # 419b00 <Unity@@Base>
  40b4b7:	mov    rdx,QWORD PTR [rax]
  40b4ba:	add    rdx,0x1
  40b4c1:	mov    QWORD PTR [rax],rdx
  40b4c4:	mov    rdi,QWORD PTR [rcx]
  40b4c7:	mov    rsi,QWORD PTR [rbp-0x10]
  40b4cb:	call   406aa0 <UnityConcludeTest@@Base+0x1d0>
  40b4d0:	lea    rdi,[rip+0x7f16]        # 4133ed <UnityStrIgnore@@Base>
  40b4d7:	call   405480 <UnityPrint@@Base>
  40b4dc:	lea    rax,[rip+0xdded]        # 4192d0 <__bss_start@@Base+0x1178>
  40b4e3:	mov    rcx,rax
  40b4e6:	add    rcx,0x30
  40b4ed:	add    rax,0x38
  40b4f3:	cmp    QWORD PTR [rbp-0x8],0x0
  40b4f8:	mov    QWORD PTR [rbp-0x48],rcx
  40b4fc:	mov    QWORD PTR [rbp-0x50],rax
  40b500:	je     40b54c <UnityIgnore@@Base+0x17c>
  40b506:	mov    rax,QWORD PTR [rbp-0x48]
  40b50a:	mov    rcx,QWORD PTR [rax]
  40b50d:	add    rcx,0x1
  40b514:	mov    QWORD PTR [rax],rcx
  40b517:	mov    edi,0x3a
  40b51c:	call   403050 <putchar@plt>
  40b521:	mov    edi,0x20
  40b526:	mov    DWORD PTR [rbp-0x54],eax
  40b529:	call   403050 <putchar@plt>
  40b52e:	mov    rdi,QWORD PTR [rbp-0x8]
  40b532:	mov    DWORD PTR [rbp-0x58],eax
  40b535:	call   405480 <UnityPrint@@Base>
  40b53a:	lea    rcx,[rip+0xdd8f]        # 4192d0 <__bss_start@@Base+0x1178>
  40b541:	add    rcx,0x40
  40b548:	mov    QWORD PTR [rbp-0x50],rcx
  40b54c:	mov    rax,QWORD PTR [rbp-0x50]
  40b550:	lea    rcx,[rip+0xe5a9]        # 419b00 <Unity@@Base>
  40b557:	mov    rdx,rcx
  40b55a:	add    rdx,0x50
  40b561:	mov    rsi,QWORD PTR [rax]
  40b564:	add    rsi,0x1
  40b56b:	mov    QWORD PTR [rax],rsi
  40b56e:	mov    QWORD PTR [rcx+0x48],0x1
  40b576:	mov    rdi,rdx
  40b579:	mov    esi,0x1
  40b57e:	call   403200 <longjmp@plt>
  40b583:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40b58d:	nop    DWORD PTR [rax]

000000000040b590 <setUp@@Base>:
  40b590:	push   rbp
  40b591:	mov    rbp,rsp
  40b594:	lea    rax,[rip+0xdd7d]        # 419318 <__bss_start@@Base+0x11c0>
  40b59b:	mov    QWORD PTR [rbp-0x8],rax
  40b59f:	jmp    40b5a4 <setUp@@Base+0x14>
  40b5a4:	mov    rax,QWORD PTR [rbp-0x8]
  40b5a8:	mov    rcx,QWORD PTR [rax]
  40b5ab:	add    rcx,0x1
  40b5b2:	mov    QWORD PTR [rax],rcx
  40b5b5:	mov    rax,QWORD PTR [rip+0xdd64]        # 419320 <__bss_start@@Base+0x11c8>
  40b5bc:	add    rax,0x1
  40b5c2:	mov    QWORD PTR [rip+0xdd57],rax        # 419320 <__bss_start@@Base+0x11c8>
  40b5c9:	pop    rbp
  40b5ca:	ret    
  40b5cb:	nop    DWORD PTR [rax+rax*1+0x0]

000000000040b5d0 <tearDown@@Base>:
  40b5d0:	push   rbp
  40b5d1:	mov    rbp,rsp
  40b5d4:	lea    rax,[rip+0xdd4d]        # 419328 <__bss_start@@Base+0x11d0>
  40b5db:	mov    QWORD PTR [rbp-0x8],rax
  40b5df:	jmp    40b5e4 <tearDown@@Base+0x14>
  40b5e4:	mov    rax,QWORD PTR [rbp-0x8]
  40b5e8:	mov    rcx,QWORD PTR [rax]
  40b5eb:	add    rcx,0x1
  40b5f2:	mov    QWORD PTR [rax],rcx
  40b5f5:	mov    rax,QWORD PTR [rip+0xdd34]        # 419330 <__bss_start@@Base+0x11d8>
  40b5fc:	add    rax,0x1
  40b602:	mov    QWORD PTR [rip+0xdd27],rax        # 419330 <__bss_start@@Base+0x11d8>
  40b609:	pop    rbp
  40b60a:	ret    
  40b60b:	nop    DWORD PTR [rax+rax*1+0x0]

000000000040b610 <UnityDefaultTestRun@@Base>:
  40b610:	push   rbp
  40b611:	mov    rbp,rsp
  40b614:	sub    rsp,0x60
  40b618:	lea    rax,[rip+0xdd21]        # 419340 <__bss_start@@Base+0x11e8>
  40b61f:	mov    QWORD PTR [rbp-0x20],rdi
  40b623:	mov    QWORD PTR [rbp-0x28],rsi
  40b627:	mov    DWORD PTR [rbp-0x2c],edx
  40b62a:	mov    QWORD PTR [rbp-0x38],rax
  40b62e:	mov    rax,QWORD PTR [rbp-0x38]
  40b632:	lea    rcx,[rip+0xe4c7]        # 419b00 <Unity@@Base>
  40b639:	mov    rdx,rcx
  40b63c:	add    rdx,0x50
  40b643:	mov    rsi,QWORD PTR [rax]
  40b646:	add    rsi,0x1
  40b64d:	mov    QWORD PTR [rax],rsi
  40b650:	mov    rax,QWORD PTR [rbp-0x20]
  40b654:	mov    QWORD PTR [rbp-0x8],rax
  40b658:	mov    rsi,QWORD PTR [rbp-0x28]
  40b65c:	mov    QWORD PTR [rbp-0x10],rsi
  40b660:	mov    edi,DWORD PTR [rbp-0x2c]
  40b663:	mov    DWORD PTR [rbp-0x14],edi
  40b666:	mov    r8,QWORD PTR [rbp-0x10]
  40b66a:	mov    QWORD PTR [rcx+0x8],r8
  40b66e:	movsxd r8,DWORD PTR [rbp-0x14]
  40b672:	mov    QWORD PTR [rcx+0x20],r8
  40b676:	mov    r8,QWORD PTR [rcx+0x28]
  40b67a:	add    r8,0x1
  40b681:	mov    QWORD PTR [rcx+0x28],r8
  40b685:	mov    QWORD PTR [rcx+0x10],0x0
  40b68d:	mov    QWORD PTR [rcx+0x18],0x0
  40b695:	mov    rdi,rdx
  40b698:	call   403130 <_setjmp@plt>
  40b69d:	lea    rcx,[rip+0xdc9c]        # 419340 <__bss_start@@Base+0x11e8>
  40b6a4:	mov    rdx,rcx
  40b6a7:	add    rdx,0x8
  40b6ae:	add    rcx,0x10
  40b6b5:	cmp    eax,0x0
  40b6b8:	mov    QWORD PTR [rbp-0x40],rdx
  40b6bc:	mov    QWORD PTR [rbp-0x48],rcx
  40b6c0:	jne    40b6f0 <UnityDefaultTestRun@@Base+0xe0>
  40b6c6:	mov    rax,QWORD PTR [rbp-0x40]
  40b6ca:	mov    rcx,QWORD PTR [rax]
  40b6cd:	add    rcx,0x1
  40b6d4:	mov    QWORD PTR [rax],rcx
  40b6d7:	call   40b590 <setUp@@Base>
  40b6dc:	call   QWORD PTR [rbp-0x8]
  40b6df:	lea    rax,[rip+0xdc5a]        # 419340 <__bss_start@@Base+0x11e8>
  40b6e6:	add    rax,0x18
  40b6ec:	mov    QWORD PTR [rbp-0x48],rax
  40b6f0:	mov    rax,QWORD PTR [rbp-0x48]
  40b6f4:	lea    rcx,[rip+0xe405]        # 419b00 <Unity@@Base>
  40b6fb:	add    rcx,0x50
  40b702:	mov    rdx,QWORD PTR [rax]
  40b705:	add    rdx,0x1
  40b70c:	mov    QWORD PTR [rax],rdx
  40b70f:	mov    rdi,rcx
  40b712:	call   403130 <_setjmp@plt>
  40b717:	lea    rcx,[rip+0xdc22]        # 419340 <__bss_start@@Base+0x11e8>
  40b71e:	mov    rdx,rcx
  40b721:	add    rdx,0x20
  40b728:	add    rcx,0x28
  40b72f:	cmp    eax,0x0
  40b732:	mov    QWORD PTR [rbp-0x50],rdx
  40b736:	mov    QWORD PTR [rbp-0x58],rcx
  40b73a:	jne    40b7aa <UnityDefaultTestRun@@Base+0x19a>
  40b740:	mov    rax,QWORD PTR [rbp-0x50]
  40b744:	lea    rcx,[rip+0xdbf5]        # 419340 <__bss_start@@Base+0x11e8>
  40b74b:	mov    rdx,rcx
  40b74e:	add    rdx,0x30
  40b755:	add    rcx,0x38
  40b75c:	lea    rsi,[rip+0xe39d]        # 419b00 <Unity@@Base>
  40b763:	mov    rdi,QWORD PTR [rax]
  40b766:	add    rdi,0x1
  40b76d:	mov    QWORD PTR [rax],rdi
  40b770:	cmp    QWORD PTR [rsi+0x48],0x0
  40b775:	mov    QWORD PTR [rbp-0x60],rcx
  40b779:	mov    QWORD PTR [rbp-0x58],rdx
  40b77d:	jne    40b7aa <UnityDefaultTestRun@@Base+0x19a>
  40b783:	mov    rax,QWORD PTR [rbp-0x60]
  40b787:	mov    rcx,QWORD PTR [rax]
  40b78a:	add    rcx,0x1
  40b791:	mov    QWORD PTR [rax],rcx
  40b794:	call   40b5d0 <tearDown@@Base>
  40b799:	lea    rax,[rip+0xdba0]        # 419340 <__bss_start@@Base+0x11e8>
  40b7a0:	add    rax,0x40
  40b7a6:	mov    QWORD PTR [rbp-0x58],rax
  40b7aa:	mov    rax,QWORD PTR [rbp-0x58]
  40b7ae:	mov    rcx,QWORD PTR [rax]
  40b7b1:	add    rcx,0x1
  40b7b8:	mov    QWORD PTR [rax],rcx
  40b7bb:	mov    rax,QWORD PTR [rip+0xdbc6]        # 419388 <__bss_start@@Base+0x1230>
  40b7c2:	add    rax,0x1
  40b7c8:	mov    QWORD PTR [rip+0xdbb9],rax        # 419388 <__bss_start@@Base+0x1230>
  40b7cf:	call   4068d0 <UnityConcludeTest@@Base>
  40b7d4:	add    rsp,0x60
  40b7d8:	pop    rbp
  40b7d9:	ret    
  40b7da:	nop    WORD PTR [rax+rax*1+0x0]

000000000040b7e0 <UnityBegin@@Base>:
  40b7e0:	push   rbp
  40b7e1:	mov    rbp,rsp
  40b7e4:	lea    rax,[rip+0xdba5]        # 419390 <__bss_start@@Base+0x1238>
  40b7eb:	mov    QWORD PTR [rbp-0x10],rdi
  40b7ef:	mov    QWORD PTR [rbp-0x18],rax
  40b7f3:	mov    rax,QWORD PTR [rbp-0x18]
  40b7f7:	lea    rcx,[rip+0xe302]        # 419b00 <Unity@@Base>
  40b7fe:	mov    rdx,QWORD PTR [rax]
  40b801:	add    rdx,0x1
  40b808:	mov    QWORD PTR [rax],rdx
  40b80b:	mov    rax,QWORD PTR [rip+0xdb86]        # 419398 <__bss_start@@Base+0x1240>
  40b812:	add    rax,0x1
  40b818:	mov    QWORD PTR [rip+0xdb79],rax        # 419398 <__bss_start@@Base+0x1240>
  40b81f:	mov    rax,QWORD PTR [rbp-0x10]
  40b823:	mov    QWORD PTR [rbp-0x8],rax
  40b827:	mov    rdx,QWORD PTR [rbp-0x8]
  40b82b:	mov    QWORD PTR [rcx],rdx
  40b82e:	mov    QWORD PTR [rcx+0x8],0x0
  40b836:	mov    QWORD PTR [rcx+0x20],0x0
  40b83e:	mov    QWORD PTR [rcx+0x28],0x0
  40b846:	mov    QWORD PTR [rcx+0x30],0x0
  40b84e:	mov    QWORD PTR [rcx+0x38],0x0
  40b856:	mov    QWORD PTR [rcx+0x40],0x0
  40b85e:	mov    QWORD PTR [rcx+0x48],0x0
  40b866:	mov    QWORD PTR [rcx+0x10],0x0
  40b86e:	mov    QWORD PTR [rcx+0x18],0x0
  40b876:	pop    rbp
  40b877:	ret    
  40b878:	nop    DWORD PTR [rax+rax*1+0x0]

000000000040b880 <UnityEnd@@Base>:
  40b880:	push   rbp
  40b881:	mov    rbp,rsp
  40b884:	sub    rsp,0x30
  40b888:	lea    rax,[rip+0xdb11]        # 4193a0 <__bss_start@@Base+0x1248>
  40b88f:	mov    QWORD PTR [rbp-0x8],rax
  40b893:	jmp    40b898 <UnityEnd@@Base+0x18>
  40b898:	mov    rax,QWORD PTR [rbp-0x8]
  40b89c:	mov    rcx,QWORD PTR [rax]
  40b89f:	add    rcx,0x1
  40b8a6:	mov    QWORD PTR [rax],rcx
  40b8a9:	mov    edi,0xa
  40b8ae:	call   403050 <putchar@plt>
  40b8b3:	lea    rdi,[rip+0x7cf6]        # 4135b0 <UnityStrBreaker@@Base>
  40b8ba:	mov    DWORD PTR [rbp-0xc],eax
  40b8bd:	call   405480 <UnityPrint@@Base>
  40b8c2:	mov    edi,0xa
  40b8c7:	call   403050 <putchar@plt>
  40b8cc:	lea    rcx,[rip+0xe22d]        # 419b00 <Unity@@Base>
  40b8d3:	mov    rdi,QWORD PTR [rcx+0x28]
  40b8d7:	mov    DWORD PTR [rbp-0x10],eax
  40b8da:	call   406040 <UnityPrintNumber@@Base>
  40b8df:	lea    rdi,[rip+0x7ce2]        # 4135c8 <UnityStrResultsTests@@Base>
  40b8e6:	call   405480 <UnityPrint@@Base>
  40b8eb:	lea    rcx,[rip+0xe20e]        # 419b00 <Unity@@Base>
  40b8f2:	mov    rdi,QWORD PTR [rcx+0x30]
  40b8f6:	call   406040 <UnityPrintNumber@@Base>
  40b8fb:	lea    rdi,[rip+0x7cce]        # 4135d0 <UnityStrResultsFailures@@Base>
  40b902:	call   405480 <UnityPrint@@Base>
  40b907:	lea    rcx,[rip+0xe1f2]        # 419b00 <Unity@@Base>
  40b90e:	mov    rdi,QWORD PTR [rcx+0x38]
  40b912:	call   406040 <UnityPrintNumber@@Base>
  40b917:	lea    rdi,[rip+0x7cbd]        # 4135db <UnityStrResultsIgnored@@Base>
  40b91e:	call   405480 <UnityPrint@@Base>
  40b923:	mov    edi,0xa
  40b928:	call   403050 <putchar@plt>
  40b92d:	lea    rcx,[rip+0xda6c]        # 4193a0 <__bss_start@@Base+0x1248>
  40b934:	mov    rdx,rcx
  40b937:	add    rdx,0x8
  40b93e:	add    rcx,0x10
  40b945:	lea    rsi,[rip+0xe1b4]        # 419b00 <Unity@@Base>
  40b94c:	cmp    QWORD PTR [rsi+0x30],0x0
  40b951:	mov    QWORD PTR [rbp-0x18],rdx
  40b955:	mov    QWORD PTR [rbp-0x20],rcx
  40b959:	jne    40b98b <UnityEnd@@Base+0x10b>
  40b95f:	mov    rax,QWORD PTR [rbp-0x18]
  40b963:	mov    rcx,QWORD PTR [rax]
  40b966:	add    rcx,0x1
  40b96d:	mov    QWORD PTR [rax],rcx
  40b970:	call   406880 <UnityPrintOk@@Base>
  40b975:	lea    rax,[rip+0xda24]        # 4193a0 <__bss_start@@Base+0x1248>
  40b97c:	add    rax,0x18
  40b982:	mov    QWORD PTR [rbp-0x28],rax
  40b986:	jmp    40b9b2 <UnityEnd@@Base+0x132>
  40b98b:	mov    rax,QWORD PTR [rbp-0x20]
  40b98f:	mov    rcx,QWORD PTR [rax]
  40b992:	add    rcx,0x1
  40b999:	mov    QWORD PTR [rax],rcx
  40b99c:	call   406830 <UnityPrintFail@@Base>
  40b9a1:	lea    rax,[rip+0xd9f8]        # 4193a0 <__bss_start@@Base+0x1248>
  40b9a8:	add    rax,0x20
  40b9ae:	mov    QWORD PTR [rbp-0x28],rax
  40b9b2:	mov    rax,QWORD PTR [rbp-0x28]
  40b9b6:	mov    rcx,QWORD PTR [rax]
  40b9b9:	add    rcx,0x1
  40b9c0:	mov    QWORD PTR [rax],rcx
  40b9c3:	mov    rax,QWORD PTR [rip+0xd9fe]        # 4193c8 <__bss_start@@Base+0x1270>
  40b9ca:	add    rax,0x1
  40b9d0:	mov    QWORD PTR [rip+0xd9f1],rax        # 4193c8 <__bss_start@@Base+0x1270>
  40b9d7:	mov    edi,0xa
  40b9dc:	call   403050 <putchar@plt>
  40b9e1:	lea    rcx,[rip+0xe118]        # 419b00 <Unity@@Base>
  40b9e8:	mov    rcx,QWORD PTR [rcx+0x30]
  40b9ec:	mov    DWORD PTR [rbp-0x2c],eax
  40b9ef:	mov    eax,ecx
  40b9f1:	add    rsp,0x30
  40b9f5:	pop    rbp
  40b9f6:	ret    
  40b9f7:	nop    WORD PTR [rax+rax*1+0x0]
  40ba00:	sub    rsp,0x38
  40ba04:	xor    eax,eax
  40ba06:	mov    DWORD PTR [rsp+0x34],eax
  40ba0a:	jmp    40ba0f <UnityEnd@@Base+0x18f>
  40ba0f:	mov    eax,DWORD PTR [rsp+0x34]
  40ba13:	movsxd rcx,eax
  40ba16:	imul   rcx,rcx,0x30
  40ba1d:	lea    rdx,[rip+0xbcec]        # 417710 <UnitySizeMask@@Base+0x4110>
  40ba24:	add    rdx,rcx
  40ba27:	mov    rdi,QWORD PTR [rdx]
  40ba2a:	mov    rsi,QWORD PTR [rdx+0x8]
  40ba2e:	mov    r8d,DWORD PTR [rdx+0x10]
  40ba32:	mov    QWORD PTR [rsp+0x28],rdx
  40ba37:	mov    edx,r8d
  40ba3a:	mov    DWORD PTR [rsp+0x24],eax
  40ba3e:	call   410d80 <next@@Base+0x2a90>
  40ba43:	xor    eax,eax
  40ba45:	mov    rcx,QWORD PTR [rsp+0x28]
  40ba4a:	mov    edx,DWORD PTR [rcx+0x18]
  40ba4d:	mov    rsi,QWORD PTR [rcx+0x20]
  40ba51:	mov    rdi,QWORD PTR [rcx+0x28]
  40ba55:	cmp    eax,edx
  40ba57:	mov    DWORD PTR [rsp+0x20],edx
  40ba5b:	mov    QWORD PTR [rsp+0x18],rsi
  40ba60:	mov    QWORD PTR [rsp+0x10],rdi
  40ba65:	mov    DWORD PTR [rsp+0xc],eax
  40ba69:	jge    40badd <UnityEnd@@Base+0x25d>
  40ba6f:	mov    eax,DWORD PTR [rsp+0xc]
  40ba73:	movsxd rcx,eax
  40ba76:	shl    rcx,0x5
  40ba7a:	mov    rdx,QWORD PTR [rsp+0x18]
  40ba7f:	add    rdx,rcx
  40ba82:	mov    edi,DWORD PTR [rdx]
  40ba84:	mov    rsi,QWORD PTR [rdx+0x8]
  40ba88:	mov    r8d,DWORD PTR [rdx+0x10]
  40ba8c:	mov    r9b,BYTE PTR [rdx+0x14]
  40ba90:	mov    r10d,DWORD PTR [rdx+0x18]
  40ba94:	mov    edx,r8d
  40ba97:	movzx  ecx,r9b
  40ba9b:	mov    r8d,r10d
  40ba9e:	mov    DWORD PTR [rsp+0x8],eax
  40baa2:	call   4111d0 <next@@Base+0x2ee0>
  40baa7:	mov    eax,DWORD PTR [rsp+0x8]
  40baab:	movsxd rsi,eax
  40baae:	shl    rsi,0x4
  40bab2:	mov    r11,QWORD PTR [rsp+0x10]
  40bab7:	add    r11,rsi
  40baba:	mov    edi,DWORD PTR [r11]
  40babd:	mov    rsi,QWORD PTR [r11+0x8]
  40bac1:	call   4115f0 <next@@Base+0x3300>
  40bac6:	mov    eax,DWORD PTR [rsp+0x8]
  40baca:	add    eax,0x1
  40bacd:	mov    ecx,DWORD PTR [rsp+0x20]
  40bad1:	cmp    eax,ecx
  40bad3:	mov    DWORD PTR [rsp+0xc],eax
  40bad7:	jl     40ba6f <UnityEnd@@Base+0x1ef>
  40badd:	call   411a00 <next@@Base+0x3710>
  40bae2:	call   4121a0 <next@@Base+0x3eb0>
  40bae7:	mov    eax,DWORD PTR [rsp+0x24]
  40baeb:	add    eax,0x1
  40baee:	cmp    eax,0x1
  40baf1:	mov    DWORD PTR [rsp+0x34],eax
  40baf5:	jl     40ba0f <UnityEnd@@Base+0x18f>
  40bafb:	add    rsp,0x38
  40baff:	ret    
  40bb00:	push   rax
  40bb01:	call   40ba00 <UnityEnd@@Base+0x180>
  40bb06:	mov    QWORD PTR [rip+0xc8cf],0x0        # 4183e0 <__bss_start@@Base+0x288>
  40bb11:	mov    QWORD PTR [rip+0xc8bc],0x0        # 4183d8 <__bss_start@@Base+0x280>
  40bb1c:	mov    QWORD PTR [rip+0xc8a9],0x0        # 4183d0 <__bss_start@@Base+0x278>
  40bb27:	mov    QWORD PTR [rip+0xc896],0x0        # 4183c8 <__bss_start@@Base+0x270>
  40bb32:	mov    QWORD PTR [rip+0xc883],0x0        # 4183c0 <__bss_start@@Base+0x268>
  40bb3d:	mov    QWORD PTR [rip+0xc870],0x0        # 4183b8 <__bss_start@@Base+0x260>
  40bb48:	mov    QWORD PTR [rip+0xc85d],0x0        # 4183b0 <__bss_start@@Base+0x258>
  40bb53:	mov    QWORD PTR [rip+0xc84a],0x0        # 4183a8 <__bss_start@@Base+0x250>
  40bb5e:	mov    QWORD PTR [rip+0xc837],0x0        # 4183a0 <__bss_start@@Base+0x248>
  40bb69:	mov    QWORD PTR [rip+0xc824],0x0        # 418398 <__bss_start@@Base+0x240>
  40bb74:	mov    QWORD PTR [rip+0xc811],0x0        # 418390 <__bss_start@@Base+0x238>
  40bb7f:	mov    QWORD PTR [rip+0xc7fe],0x0        # 418388 <__bss_start@@Base+0x230>
  40bb8a:	mov    QWORD PTR [rip+0xc7eb],0x0        # 418380 <__bss_start@@Base+0x228>
  40bb95:	mov    QWORD PTR [rip+0xc7d8],0x0        # 418378 <__bss_start@@Base+0x220>
  40bba0:	mov    QWORD PTR [rip+0xc7c5],0x0        # 418370 <__bss_start@@Base+0x218>
  40bbab:	mov    QWORD PTR [rip+0xc7b2],0x0        # 418368 <__bss_start@@Base+0x210>
  40bbb6:	mov    QWORD PTR [rip+0xc79f],0x0        # 418360 <__bss_start@@Base+0x208>
  40bbc1:	mov    QWORD PTR [rip+0xc78c],0x0        # 418358 <__bss_start@@Base+0x200>
  40bbcc:	mov    QWORD PTR [rip+0xc779],0x0        # 418350 <__bss_start@@Base+0x1f8>
  40bbd7:	mov    QWORD PTR [rip+0xc766],0x0        # 418348 <__bss_start@@Base+0x1f0>
  40bbe2:	mov    QWORD PTR [rip+0xc753],0x0        # 418340 <__bss_start@@Base+0x1e8>
  40bbed:	mov    QWORD PTR [rip+0xc740],0x0        # 418338 <__bss_start@@Base+0x1e0>
  40bbf8:	mov    QWORD PTR [rip+0xc72d],0x0        # 418330 <__bss_start@@Base+0x1d8>
  40bc03:	mov    QWORD PTR [rip+0xc82a],0x0        # 418438 <__bss_start@@Base+0x2e0>
  40bc0e:	mov    QWORD PTR [rip+0xc817],0x0        # 418430 <__bss_start@@Base+0x2d8>
  40bc19:	mov    QWORD PTR [rip+0xc804],0x0        # 418428 <__bss_start@@Base+0x2d0>
  40bc24:	mov    QWORD PTR [rip+0xc7f1],0x0        # 418420 <__bss_start@@Base+0x2c8>
  40bc2f:	mov    QWORD PTR [rip+0xc7de],0x0        # 418418 <__bss_start@@Base+0x2c0>
  40bc3a:	mov    QWORD PTR [rip+0xc7cb],0x0        # 418410 <__bss_start@@Base+0x2b8>
  40bc45:	mov    QWORD PTR [rip+0xc7b8],0x0        # 418408 <__bss_start@@Base+0x2b0>
  40bc50:	mov    QWORD PTR [rip+0xc7a5],0x0        # 418400 <__bss_start@@Base+0x2a8>
  40bc5b:	mov    QWORD PTR [rip+0xc792],0x0        # 4183f8 <__bss_start@@Base+0x2a0>
  40bc66:	mov    QWORD PTR [rip+0xc77f],0x0        # 4183f0 <__bss_start@@Base+0x298>
  40bc71:	mov    QWORD PTR [rip+0xc88c],0x0        # 418508 <__bss_start@@Base+0x3b0>
  40bc7c:	mov    QWORD PTR [rip+0xc879],0x0        # 418500 <__bss_start@@Base+0x3a8>
  40bc87:	mov    QWORD PTR [rip+0xc866],0x0        # 4184f8 <__bss_start@@Base+0x3a0>
  40bc92:	mov    QWORD PTR [rip+0xc853],0x0        # 4184f0 <__bss_start@@Base+0x398>
  40bc9d:	mov    QWORD PTR [rip+0xc840],0x0        # 4184e8 <__bss_start@@Base+0x390>
  40bca8:	mov    QWORD PTR [rip+0xc82d],0x0        # 4184e0 <__bss_start@@Base+0x388>
  40bcb3:	mov    QWORD PTR [rip+0xc81a],0x0        # 4184d8 <__bss_start@@Base+0x380>
  40bcbe:	mov    QWORD PTR [rip+0xc807],0x0        # 4184d0 <__bss_start@@Base+0x378>
  40bcc9:	mov    QWORD PTR [rip+0xc7f4],0x0        # 4184c8 <__bss_start@@Base+0x370>
  40bcd4:	mov    QWORD PTR [rip+0xc7e1],0x0        # 4184c0 <__bss_start@@Base+0x368>
  40bcdf:	mov    QWORD PTR [rip+0xc7ce],0x0        # 4184b8 <__bss_start@@Base+0x360>
  40bcea:	mov    QWORD PTR [rip+0xc7bb],0x0        # 4184b0 <__bss_start@@Base+0x358>
  40bcf5:	mov    QWORD PTR [rip+0xc7a8],0x0        # 4184a8 <__bss_start@@Base+0x350>
  40bd00:	mov    QWORD PTR [rip+0xc795],0x0        # 4184a0 <__bss_start@@Base+0x348>
  40bd0b:	mov    QWORD PTR [rip+0xc782],0x0        # 418498 <__bss_start@@Base+0x340>
  40bd16:	mov    QWORD PTR [rip+0xc76f],0x0        # 418490 <__bss_start@@Base+0x338>
  40bd21:	mov    QWORD PTR [rip+0xc75c],0x0        # 418488 <__bss_start@@Base+0x330>
  40bd2c:	mov    QWORD PTR [rip+0xc749],0x0        # 418480 <__bss_start@@Base+0x328>
  40bd37:	mov    QWORD PTR [rip+0xc736],0x0        # 418478 <__bss_start@@Base+0x320>
  40bd42:	mov    QWORD PTR [rip+0xc723],0x0        # 418470 <__bss_start@@Base+0x318>
  40bd4d:	mov    QWORD PTR [rip+0xc710],0x0        # 418468 <__bss_start@@Base+0x310>
  40bd58:	mov    QWORD PTR [rip+0xc6fd],0x0        # 418460 <__bss_start@@Base+0x308>
  40bd63:	mov    QWORD PTR [rip+0xc6ea],0x0        # 418458 <__bss_start@@Base+0x300>
  40bd6e:	mov    QWORD PTR [rip+0xc6d7],0x0        # 418450 <__bss_start@@Base+0x2f8>
  40bd79:	mov    QWORD PTR [rip+0xc6c4],0x0        # 418448 <__bss_start@@Base+0x2f0>
  40bd84:	mov    QWORD PTR [rip+0xc6b1],0x0        # 418440 <__bss_start@@Base+0x2e8>
  40bd8f:	mov    QWORD PTR [rip+0xc7be],0x0        # 418558 <__bss_start@@Base+0x400>
  40bd9a:	mov    QWORD PTR [rip+0xc7ab],0x0        # 418550 <__bss_start@@Base+0x3f8>
  40bda5:	mov    QWORD PTR [rip+0xc798],0x0        # 418548 <__bss_start@@Base+0x3f0>
  40bdb0:	mov    QWORD PTR [rip+0xc785],0x0        # 418540 <__bss_start@@Base+0x3e8>
  40bdbb:	mov    QWORD PTR [rip+0xc772],0x0        # 418538 <__bss_start@@Base+0x3e0>
  40bdc6:	mov    QWORD PTR [rip+0xc75f],0x0        # 418530 <__bss_start@@Base+0x3d8>
  40bdd1:	mov    QWORD PTR [rip+0xc74c],0x0        # 418528 <__bss_start@@Base+0x3d0>
  40bddc:	mov    QWORD PTR [rip+0xc739],0x0        # 418520 <__bss_start@@Base+0x3c8>
  40bde7:	mov    QWORD PTR [rip+0xc726],0x0        # 418518 <__bss_start@@Base+0x3c0>
  40bdf2:	mov    QWORD PTR [rip+0xc713],0x0        # 418510 <__bss_start@@Base+0x3b8>
  40bdfd:	mov    QWORD PTR [rip+0xc7e0],0x0        # 4185e8 <__bss_start@@Base+0x490>
  40be08:	mov    QWORD PTR [rip+0xc7cd],0x0        # 4185e0 <__bss_start@@Base+0x488>
  40be13:	mov    QWORD PTR [rip+0xc7ba],0x0        # 4185d8 <__bss_start@@Base+0x480>
  40be1e:	mov    QWORD PTR [rip+0xc7a7],0x0        # 4185d0 <__bss_start@@Base+0x478>
  40be29:	mov    QWORD PTR [rip+0xc794],0x0        # 4185c8 <__bss_start@@Base+0x470>
  40be34:	mov    QWORD PTR [rip+0xc781],0x0        # 4185c0 <__bss_start@@Base+0x468>
  40be3f:	mov    QWORD PTR [rip+0xc76e],0x0        # 4185b8 <__bss_start@@Base+0x460>
  40be4a:	mov    QWORD PTR [rip+0xc75b],0x0        # 4185b0 <__bss_start@@Base+0x458>
  40be55:	mov    QWORD PTR [rip+0xc748],0x0        # 4185a8 <__bss_start@@Base+0x450>
  40be60:	mov    QWORD PTR [rip+0xc735],0x0        # 4185a0 <__bss_start@@Base+0x448>
  40be6b:	mov    QWORD PTR [rip+0xc722],0x0        # 418598 <__bss_start@@Base+0x440>
  40be76:	mov    QWORD PTR [rip+0xc70f],0x0        # 418590 <__bss_start@@Base+0x438>
  40be81:	mov    QWORD PTR [rip+0xc6fc],0x0        # 418588 <__bss_start@@Base+0x430>
  40be8c:	mov    QWORD PTR [rip+0xc6e9],0x0        # 418580 <__bss_start@@Base+0x428>
  40be97:	mov    QWORD PTR [rip+0xc6d6],0x0        # 418578 <__bss_start@@Base+0x420>
  40bea2:	mov    QWORD PTR [rip+0xc6c3],0x0        # 418570 <__bss_start@@Base+0x418>
  40bead:	mov    QWORD PTR [rip+0xc6b0],0x0        # 418568 <__bss_start@@Base+0x410>
  40beb8:	mov    QWORD PTR [rip+0xc69d],0x0        # 418560 <__bss_start@@Base+0x408>
  40bec3:	mov    QWORD PTR [rip+0xc78a],0x0        # 418658 <__bss_start@@Base+0x500>
  40bece:	mov    QWORD PTR [rip+0xc777],0x0        # 418650 <__bss_start@@Base+0x4f8>
  40bed9:	mov    QWORD PTR [rip+0xc764],0x0        # 418648 <__bss_start@@Base+0x4f0>
  40bee4:	mov    QWORD PTR [rip+0xc751],0x0        # 418640 <__bss_start@@Base+0x4e8>
  40beef:	mov    QWORD PTR [rip+0xc73e],0x0        # 418638 <__bss_start@@Base+0x4e0>
  40befa:	mov    QWORD PTR [rip+0xc72b],0x0        # 418630 <__bss_start@@Base+0x4d8>
  40bf05:	mov    QWORD PTR [rip+0xc718],0x0        # 418628 <__bss_start@@Base+0x4d0>
  40bf10:	mov    QWORD PTR [rip+0xc705],0x0        # 418620 <__bss_start@@Base+0x4c8>
  40bf1b:	mov    QWORD PTR [rip+0xc6f2],0x0        # 418618 <__bss_start@@Base+0x4c0>
  40bf26:	mov    QWORD PTR [rip+0xc6df],0x0        # 418610 <__bss_start@@Base+0x4b8>
  40bf31:	mov    QWORD PTR [rip+0xc6cc],0x0        # 418608 <__bss_start@@Base+0x4b0>
  40bf3c:	mov    QWORD PTR [rip+0xc6b9],0x0        # 418600 <__bss_start@@Base+0x4a8>
  40bf47:	mov    QWORD PTR [rip+0xc6a6],0x0        # 4185f8 <__bss_start@@Base+0x4a0>
  40bf52:	mov    QWORD PTR [rip+0xc693],0x0        # 4185f0 <__bss_start@@Base+0x498>
  40bf5d:	mov    QWORD PTR [rip+0xc768],0x0        # 4186d0 <__bss_start@@Base+0x578>
  40bf68:	mov    QWORD PTR [rip+0xc755],0x0        # 4186c8 <__bss_start@@Base+0x570>
  40bf73:	mov    QWORD PTR [rip+0xc742],0x0        # 4186c0 <__bss_start@@Base+0x568>
  40bf7e:	mov    QWORD PTR [rip+0xc72f],0x0        # 4186b8 <__bss_start@@Base+0x560>
  40bf89:	mov    QWORD PTR [rip+0xc71c],0x0        # 4186b0 <__bss_start@@Base+0x558>
  40bf94:	mov    QWORD PTR [rip+0xc709],0x0        # 4186a8 <__bss_start@@Base+0x550>
  40bf9f:	mov    QWORD PTR [rip+0xc6f6],0x0        # 4186a0 <__bss_start@@Base+0x548>
  40bfaa:	mov    QWORD PTR [rip+0xc6e3],0x0        # 418698 <__bss_start@@Base+0x540>
  40bfb5:	mov    QWORD PTR [rip+0xc6d0],0x0        # 418690 <__bss_start@@Base+0x538>
  40bfc0:	mov    QWORD PTR [rip+0xc6bd],0x0        # 418688 <__bss_start@@Base+0x530>
  40bfcb:	mov    QWORD PTR [rip+0xc6aa],0x0        # 418680 <__bss_start@@Base+0x528>
  40bfd6:	mov    QWORD PTR [rip+0xc697],0x0        # 418678 <__bss_start@@Base+0x520>
  40bfe1:	mov    QWORD PTR [rip+0xc684],0x0        # 418670 <__bss_start@@Base+0x518>
  40bfec:	mov    QWORD PTR [rip+0xc671],0x0        # 418668 <__bss_start@@Base+0x510>
  40bff7:	mov    QWORD PTR [rip+0xc65e],0x0        # 418660 <__bss_start@@Base+0x508>
  40c002:	mov    QWORD PTR [rip+0xc6d3],0x0        # 4186e0 <__bss_start@@Base+0x588>
  40c00d:	mov    QWORD PTR [rip+0xc6c0],0x0        # 4186d8 <__bss_start@@Base+0x580>
  40c018:	mov    QWORD PTR [rip+0xc6cd],0x0        # 4186f0 <__bss_start@@Base+0x598>
  40c023:	mov    QWORD PTR [rip+0xc6ba],0x0        # 4186e8 <__bss_start@@Base+0x590>
  40c02e:	mov    QWORD PTR [rip+0xc70f],0x0        # 418748 <__bss_start@@Base+0x5f0>
  40c039:	mov    QWORD PTR [rip+0xc6fc],0x0        # 418740 <__bss_start@@Base+0x5e8>
  40c044:	mov    QWORD PTR [rip+0xc6e9],0x0        # 418738 <__bss_start@@Base+0x5e0>
  40c04f:	mov    QWORD PTR [rip+0xc6d6],0x0        # 418730 <__bss_start@@Base+0x5d8>
  40c05a:	mov    QWORD PTR [rip+0xc6c3],0x0        # 418728 <__bss_start@@Base+0x5d0>
  40c065:	mov    QWORD PTR [rip+0xc6b0],0x0        # 418720 <__bss_start@@Base+0x5c8>
  40c070:	mov    QWORD PTR [rip+0xc69d],0x0        # 418718 <__bss_start@@Base+0x5c0>
  40c07b:	mov    QWORD PTR [rip+0xc68a],0x0        # 418710 <__bss_start@@Base+0x5b8>
  40c086:	mov    QWORD PTR [rip+0xc677],0x0        # 418708 <__bss_start@@Base+0x5b0>
  40c091:	mov    QWORD PTR [rip+0xc664],0x0        # 418700 <__bss_start@@Base+0x5a8>
  40c09c:	mov    QWORD PTR [rip+0xc6b1],0x0        # 418758 <__bss_start@@Base+0x600>
  40c0a7:	mov    QWORD PTR [rip+0xc69e],0x0        # 418750 <__bss_start@@Base+0x5f8>
  40c0b2:	mov    QWORD PTR [rip+0xc6e3],0x0        # 4187a0 <__bss_start@@Base+0x648>
  40c0bd:	mov    QWORD PTR [rip+0xc6d0],0x0        # 418798 <__bss_start@@Base+0x640>
  40c0c8:	mov    QWORD PTR [rip+0xc6bd],0x0        # 418790 <__bss_start@@Base+0x638>
  40c0d3:	mov    QWORD PTR [rip+0xc6aa],0x0        # 418788 <__bss_start@@Base+0x630>
  40c0de:	mov    QWORD PTR [rip+0xc697],0x0        # 418780 <__bss_start@@Base+0x628>
  40c0e9:	mov    QWORD PTR [rip+0xc684],0x0        # 418778 <__bss_start@@Base+0x620>
  40c0f4:	mov    QWORD PTR [rip+0xc671],0x0        # 418770 <__bss_start@@Base+0x618>
  40c0ff:	mov    QWORD PTR [rip+0xc65e],0x0        # 418768 <__bss_start@@Base+0x610>
  40c10a:	mov    QWORD PTR [rip+0xc64b],0x0        # 418760 <__bss_start@@Base+0x608>
  40c115:	mov    QWORD PTR [rip+0xc690],0x0        # 4187b0 <__bss_start@@Base+0x658>
  40c120:	mov    QWORD PTR [rip+0xc67d],0x0        # 4187a8 <__bss_start@@Base+0x650>
  40c12b:	mov    QWORD PTR [rip+0xc6da],0x0        # 418810 <__bss_start@@Base+0x6b8>
  40c136:	mov    QWORD PTR [rip+0xc6c7],0x0        # 418808 <__bss_start@@Base+0x6b0>
  40c141:	mov    QWORD PTR [rip+0xc6b4],0x0        # 418800 <__bss_start@@Base+0x6a8>
  40c14c:	mov    QWORD PTR [rip+0xc6a1],0x0        # 4187f8 <__bss_start@@Base+0x6a0>
  40c157:	mov    QWORD PTR [rip+0xc68e],0x0        # 4187f0 <__bss_start@@Base+0x698>
  40c162:	mov    QWORD PTR [rip+0xc67b],0x0        # 4187e8 <__bss_start@@Base+0x690>
  40c16d:	mov    QWORD PTR [rip+0xc668],0x0        # 4187e0 <__bss_start@@Base+0x688>
  40c178:	mov    QWORD PTR [rip+0xc655],0x0        # 4187d8 <__bss_start@@Base+0x680>
  40c183:	mov    QWORD PTR [rip+0xc642],0x0        # 4187d0 <__bss_start@@Base+0x678>
  40c18e:	mov    QWORD PTR [rip+0xc62f],0x0        # 4187c8 <__bss_start@@Base+0x670>
  40c199:	mov    QWORD PTR [rip+0xc61c],0x0        # 4187c0 <__bss_start@@Base+0x668>
  40c1a4:	mov    QWORD PTR [rip+0xc6b1],0x0        # 418860 <__bss_start@@Base+0x708>
  40c1af:	mov    QWORD PTR [rip+0xc69e],0x0        # 418858 <__bss_start@@Base+0x700>
  40c1ba:	mov    QWORD PTR [rip+0xc68b],0x0        # 418850 <__bss_start@@Base+0x6f8>
  40c1c5:	mov    QWORD PTR [rip+0xc678],0x0        # 418848 <__bss_start@@Base+0x6f0>
  40c1d0:	mov    QWORD PTR [rip+0xc665],0x0        # 418840 <__bss_start@@Base+0x6e8>
  40c1db:	mov    QWORD PTR [rip+0xc652],0x0        # 418838 <__bss_start@@Base+0x6e0>
  40c1e6:	mov    QWORD PTR [rip+0xc63f],0x0        # 418830 <__bss_start@@Base+0x6d8>
  40c1f1:	mov    QWORD PTR [rip+0xc62c],0x0        # 418828 <__bss_start@@Base+0x6d0>
  40c1fc:	mov    QWORD PTR [rip+0xc619],0x0        # 418820 <__bss_start@@Base+0x6c8>
  40c207:	mov    QWORD PTR [rip+0xc7e6],0x0        # 4189f8 <__bss_start@@Base+0x8a0>
  40c212:	mov    QWORD PTR [rip+0xc7d3],0x0        # 4189f0 <__bss_start@@Base+0x898>
  40c21d:	mov    QWORD PTR [rip+0xc7c0],0x0        # 4189e8 <__bss_start@@Base+0x890>
  40c228:	mov    QWORD PTR [rip+0xc7ad],0x0        # 4189e0 <__bss_start@@Base+0x888>
  40c233:	mov    QWORD PTR [rip+0xc79a],0x0        # 4189d8 <__bss_start@@Base+0x880>
  40c23e:	mov    QWORD PTR [rip+0xc787],0x0        # 4189d0 <__bss_start@@Base+0x878>
  40c249:	mov    QWORD PTR [rip+0xc774],0x0        # 4189c8 <__bss_start@@Base+0x870>
  40c254:	mov    QWORD PTR [rip+0xc761],0x0        # 4189c0 <__bss_start@@Base+0x868>
  40c25f:	mov    QWORD PTR [rip+0xc74e],0x0        # 4189b8 <__bss_start@@Base+0x860>
  40c26a:	mov    QWORD PTR [rip+0xc73b],0x0        # 4189b0 <__bss_start@@Base+0x858>
  40c275:	mov    QWORD PTR [rip+0xc728],0x0        # 4189a8 <__bss_start@@Base+0x850>
  40c280:	mov    QWORD PTR [rip+0xc715],0x0        # 4189a0 <__bss_start@@Base+0x848>
  40c28b:	mov    QWORD PTR [rip+0xc702],0x0        # 418998 <__bss_start@@Base+0x840>
  40c296:	mov    QWORD PTR [rip+0xc6ef],0x0        # 418990 <__bss_start@@Base+0x838>
  40c2a1:	mov    QWORD PTR [rip+0xc6dc],0x0        # 418988 <__bss_start@@Base+0x830>
  40c2ac:	mov    QWORD PTR [rip+0xc6c9],0x0        # 418980 <__bss_start@@Base+0x828>
  40c2b7:	mov    QWORD PTR [rip+0xc6b6],0x0        # 418978 <__bss_start@@Base+0x820>
  40c2c2:	mov    QWORD PTR [rip+0xc6a3],0x0        # 418970 <__bss_start@@Base+0x818>
  40c2cd:	mov    QWORD PTR [rip+0xc690],0x0        # 418968 <__bss_start@@Base+0x810>
  40c2d8:	mov    QWORD PTR [rip+0xc67d],0x0        # 418960 <__bss_start@@Base+0x808>
  40c2e3:	mov    QWORD PTR [rip+0xc66a],0x0        # 418958 <__bss_start@@Base+0x800>
  40c2ee:	mov    QWORD PTR [rip+0xc657],0x0        # 418950 <__bss_start@@Base+0x7f8>
  40c2f9:	mov    QWORD PTR [rip+0xc644],0x0        # 418948 <__bss_start@@Base+0x7f0>
  40c304:	mov    QWORD PTR [rip+0xc631],0x0        # 418940 <__bss_start@@Base+0x7e8>
  40c30f:	mov    QWORD PTR [rip+0xc61e],0x0        # 418938 <__bss_start@@Base+0x7e0>
  40c31a:	mov    QWORD PTR [rip+0xc60b],0x0        # 418930 <__bss_start@@Base+0x7d8>
  40c325:	mov    QWORD PTR [rip+0xc5f8],0x0        # 418928 <__bss_start@@Base+0x7d0>
  40c330:	mov    QWORD PTR [rip+0xc5e5],0x0        # 418920 <__bss_start@@Base+0x7c8>
  40c33b:	mov    QWORD PTR [rip+0xc5d2],0x0        # 418918 <__bss_start@@Base+0x7c0>
  40c346:	mov    QWORD PTR [rip+0xc5bf],0x0        # 418910 <__bss_start@@Base+0x7b8>
  40c351:	mov    QWORD PTR [rip+0xc5ac],0x0        # 418908 <__bss_start@@Base+0x7b0>
  40c35c:	mov    QWORD PTR [rip+0xc599],0x0        # 418900 <__bss_start@@Base+0x7a8>
  40c367:	mov    QWORD PTR [rip+0xc586],0x0        # 4188f8 <__bss_start@@Base+0x7a0>
  40c372:	mov    QWORD PTR [rip+0xc573],0x0        # 4188f0 <__bss_start@@Base+0x798>
  40c37d:	mov    QWORD PTR [rip+0xc560],0x0        # 4188e8 <__bss_start@@Base+0x790>
  40c388:	mov    QWORD PTR [rip+0xc54d],0x0        # 4188e0 <__bss_start@@Base+0x788>
  40c393:	mov    QWORD PTR [rip+0xc53a],0x0        # 4188d8 <__bss_start@@Base+0x780>
  40c39e:	mov    QWORD PTR [rip+0xc527],0x0        # 4188d0 <__bss_start@@Base+0x778>
  40c3a9:	mov    QWORD PTR [rip+0xc514],0x0        # 4188c8 <__bss_start@@Base+0x770>
  40c3b4:	mov    QWORD PTR [rip+0xc501],0x0        # 4188c0 <__bss_start@@Base+0x768>
  40c3bf:	mov    QWORD PTR [rip+0xc4ee],0x0        # 4188b8 <__bss_start@@Base+0x760>
  40c3ca:	mov    QWORD PTR [rip+0xc4db],0x0        # 4188b0 <__bss_start@@Base+0x758>
  40c3d5:	mov    QWORD PTR [rip+0xc4c8],0x0        # 4188a8 <__bss_start@@Base+0x750>
  40c3e0:	mov    QWORD PTR [rip+0xc4b5],0x0        # 4188a0 <__bss_start@@Base+0x748>
  40c3eb:	mov    QWORD PTR [rip+0xc4a2],0x0        # 418898 <__bss_start@@Base+0x740>
  40c3f6:	mov    QWORD PTR [rip+0xc48f],0x0        # 418890 <__bss_start@@Base+0x738>
  40c401:	mov    QWORD PTR [rip+0xc47c],0x0        # 418888 <__bss_start@@Base+0x730>
  40c40c:	mov    QWORD PTR [rip+0xc469],0x0        # 418880 <__bss_start@@Base+0x728>
  40c417:	mov    QWORD PTR [rip+0xc456],0x0        # 418878 <__bss_start@@Base+0x720>
  40c422:	mov    QWORD PTR [rip+0xc443],0x0        # 418870 <__bss_start@@Base+0x718>
  40c42d:	mov    QWORD PTR [rip+0xc620],0x0        # 418a58 <__bss_start@@Base+0x900>
  40c438:	mov    QWORD PTR [rip+0xc60d],0x0        # 418a50 <__bss_start@@Base+0x8f8>
  40c443:	mov    QWORD PTR [rip+0xc5fa],0x0        # 418a48 <__bss_start@@Base+0x8f0>
  40c44e:	mov    QWORD PTR [rip+0xc5e7],0x0        # 418a40 <__bss_start@@Base+0x8e8>
  40c459:	mov    QWORD PTR [rip+0xc5d4],0x0        # 418a38 <__bss_start@@Base+0x8e0>
  40c464:	mov    QWORD PTR [rip+0xc5c1],0x0        # 418a30 <__bss_start@@Base+0x8d8>
  40c46f:	mov    QWORD PTR [rip+0xc5ae],0x0        # 418a28 <__bss_start@@Base+0x8d0>
  40c47a:	mov    QWORD PTR [rip+0xc59b],0x0        # 418a20 <__bss_start@@Base+0x8c8>
  40c485:	mov    QWORD PTR [rip+0xc588],0x0        # 418a18 <__bss_start@@Base+0x8c0>
  40c490:	mov    QWORD PTR [rip+0xc575],0x0        # 418a10 <__bss_start@@Base+0x8b8>
  40c49b:	mov    QWORD PTR [rip+0xc562],0x0        # 418a08 <__bss_start@@Base+0x8b0>
  40c4a6:	mov    QWORD PTR [rip+0xc54f],0x0        # 418a00 <__bss_start@@Base+0x8a8>
  40c4b1:	mov    QWORD PTR [rip+0xc66c],0x0        # 418b28 <__bss_start@@Base+0x9d0>
  40c4bc:	mov    QWORD PTR [rip+0xc659],0x0        # 418b20 <__bss_start@@Base+0x9c8>
  40c4c7:	mov    QWORD PTR [rip+0xc646],0x0        # 418b18 <__bss_start@@Base+0x9c0>
  40c4d2:	mov    QWORD PTR [rip+0xc633],0x0        # 418b10 <__bss_start@@Base+0x9b8>
  40c4dd:	mov    QWORD PTR [rip+0xc620],0x0        # 418b08 <__bss_start@@Base+0x9b0>
  40c4e8:	mov    QWORD PTR [rip+0xc60d],0x0        # 418b00 <__bss_start@@Base+0x9a8>
  40c4f3:	mov    QWORD PTR [rip+0xc5fa],0x0        # 418af8 <__bss_start@@Base+0x9a0>
  40c4fe:	mov    QWORD PTR [rip+0xc5e7],0x0        # 418af0 <__bss_start@@Base+0x998>
  40c509:	mov    QWORD PTR [rip+0xc5d4],0x0        # 418ae8 <__bss_start@@Base+0x990>
  40c514:	mov    QWORD PTR [rip+0xc5c1],0x0        # 418ae0 <__bss_start@@Base+0x988>
  40c51f:	mov    QWORD PTR [rip+0xc5ae],0x0        # 418ad8 <__bss_start@@Base+0x980>
  40c52a:	mov    QWORD PTR [rip+0xc59b],0x0        # 418ad0 <__bss_start@@Base+0x978>
  40c535:	mov    QWORD PTR [rip+0xc588],0x0        # 418ac8 <__bss_start@@Base+0x970>
  40c540:	mov    QWORD PTR [rip+0xc575],0x0        # 418ac0 <__bss_start@@Base+0x968>
  40c54b:	mov    QWORD PTR [rip+0xc562],0x0        # 418ab8 <__bss_start@@Base+0x960>
  40c556:	mov    QWORD PTR [rip+0xc54f],0x0        # 418ab0 <__bss_start@@Base+0x958>
  40c561:	mov    QWORD PTR [rip+0xc53c],0x0        # 418aa8 <__bss_start@@Base+0x950>
  40c56c:	mov    QWORD PTR [rip+0xc529],0x0        # 418aa0 <__bss_start@@Base+0x948>
  40c577:	mov    QWORD PTR [rip+0xc516],0x0        # 418a98 <__bss_start@@Base+0x940>
  40c582:	mov    QWORD PTR [rip+0xc503],0x0        # 418a90 <__bss_start@@Base+0x938>
  40c58d:	mov    QWORD PTR [rip+0xc4f0],0x0        # 418a88 <__bss_start@@Base+0x930>
  40c598:	mov    QWORD PTR [rip+0xc4dd],0x0        # 418a80 <__bss_start@@Base+0x928>
  40c5a3:	mov    QWORD PTR [rip+0xc4ca],0x0        # 418a78 <__bss_start@@Base+0x920>
  40c5ae:	mov    QWORD PTR [rip+0xc4b7],0x0        # 418a70 <__bss_start@@Base+0x918>
  40c5b9:	mov    QWORD PTR [rip+0xc4a4],0x0        # 418a68 <__bss_start@@Base+0x910>
  40c5c4:	mov    QWORD PTR [rip+0xc491],0x0        # 418a60 <__bss_start@@Base+0x908>
  40c5cf:	mov    QWORD PTR [rip+0xc5d6],0x0        # 418bb0 <__bss_start@@Base+0xa58>
  40c5da:	mov    QWORD PTR [rip+0xc5c3],0x0        # 418ba8 <__bss_start@@Base+0xa50>
  40c5e5:	mov    QWORD PTR [rip+0xc5b0],0x0        # 418ba0 <__bss_start@@Base+0xa48>
  40c5f0:	mov    QWORD PTR [rip+0xc59d],0x0        # 418b98 <__bss_start@@Base+0xa40>
  40c5fb:	mov    QWORD PTR [rip+0xc58a],0x0        # 418b90 <__bss_start@@Base+0xa38>
  40c606:	mov    QWORD PTR [rip+0xc577],0x0        # 418b88 <__bss_start@@Base+0xa30>
  40c611:	mov    QWORD PTR [rip+0xc564],0x0        # 418b80 <__bss_start@@Base+0xa28>
  40c61c:	mov    QWORD PTR [rip+0xc551],0x0        # 418b78 <__bss_start@@Base+0xa20>
  40c627:	mov    QWORD PTR [rip+0xc53e],0x0        # 418b70 <__bss_start@@Base+0xa18>
  40c632:	mov    QWORD PTR [rip+0xc52b],0x0        # 418b68 <__bss_start@@Base+0xa10>
  40c63d:	mov    QWORD PTR [rip+0xc518],0x0        # 418b60 <__bss_start@@Base+0xa08>
  40c648:	mov    QWORD PTR [rip+0xc505],0x0        # 418b58 <__bss_start@@Base+0xa00>
  40c653:	mov    QWORD PTR [rip+0xc4f2],0x0        # 418b50 <__bss_start@@Base+0x9f8>
  40c65e:	mov    QWORD PTR [rip+0xc4df],0x0        # 418b48 <__bss_start@@Base+0x9f0>
  40c669:	mov    QWORD PTR [rip+0xc4cc],0x0        # 418b40 <__bss_start@@Base+0x9e8>
  40c674:	mov    QWORD PTR [rip+0xc4b9],0x0        # 418b38 <__bss_start@@Base+0x9e0>
  40c67f:	mov    QWORD PTR [rip+0xc4a6],0x0        # 418b30 <__bss_start@@Base+0x9d8>
  40c68a:	mov    QWORD PTR [rip+0xc62b],0x0        # 418cc0 <__bss_start@@Base+0xb68>
  40c695:	mov    QWORD PTR [rip+0xc618],0x0        # 418cb8 <__bss_start@@Base+0xb60>
  40c6a0:	mov    QWORD PTR [rip+0xc605],0x0        # 418cb0 <__bss_start@@Base+0xb58>
  40c6ab:	mov    QWORD PTR [rip+0xc5f2],0x0        # 418ca8 <__bss_start@@Base+0xb50>
  40c6b6:	mov    QWORD PTR [rip+0xc5df],0x0        # 418ca0 <__bss_start@@Base+0xb48>
  40c6c1:	mov    QWORD PTR [rip+0xc5cc],0x0        # 418c98 <__bss_start@@Base+0xb40>
  40c6cc:	mov    QWORD PTR [rip+0xc5b9],0x0        # 418c90 <__bss_start@@Base+0xb38>
  40c6d7:	mov    QWORD PTR [rip+0xc5a6],0x0        # 418c88 <__bss_start@@Base+0xb30>
  40c6e2:	mov    QWORD PTR [rip+0xc593],0x0        # 418c80 <__bss_start@@Base+0xb28>
  40c6ed:	mov    QWORD PTR [rip+0xc580],0x0        # 418c78 <__bss_start@@Base+0xb20>
  40c6f8:	mov    QWORD PTR [rip+0xc56d],0x0        # 418c70 <__bss_start@@Base+0xb18>
  40c703:	mov    QWORD PTR [rip+0xc55a],0x0        # 418c68 <__bss_start@@Base+0xb10>
  40c70e:	mov    QWORD PTR [rip+0xc547],0x0        # 418c60 <__bss_start@@Base+0xb08>
  40c719:	mov    QWORD PTR [rip+0xc534],0x0        # 418c58 <__bss_start@@Base+0xb00>
  40c724:	mov    QWORD PTR [rip+0xc521],0x0        # 418c50 <__bss_start@@Base+0xaf8>
  40c72f:	mov    QWORD PTR [rip+0xc50e],0x0        # 418c48 <__bss_start@@Base+0xaf0>
  40c73a:	mov    QWORD PTR [rip+0xc4fb],0x0        # 418c40 <__bss_start@@Base+0xae8>
  40c745:	mov    QWORD PTR [rip+0xc4e8],0x0        # 418c38 <__bss_start@@Base+0xae0>
  40c750:	mov    QWORD PTR [rip+0xc4d5],0x0        # 418c30 <__bss_start@@Base+0xad8>
  40c75b:	mov    QWORD PTR [rip+0xc4c2],0x0        # 418c28 <__bss_start@@Base+0xad0>
  40c766:	mov    QWORD PTR [rip+0xc4af],0x0        # 418c20 <__bss_start@@Base+0xac8>
  40c771:	mov    QWORD PTR [rip+0xc49c],0x0        # 418c18 <__bss_start@@Base+0xac0>
  40c77c:	mov    QWORD PTR [rip+0xc489],0x0        # 418c10 <__bss_start@@Base+0xab8>
  40c787:	mov    QWORD PTR [rip+0xc476],0x0        # 418c08 <__bss_start@@Base+0xab0>
  40c792:	mov    QWORD PTR [rip+0xc463],0x0        # 418c00 <__bss_start@@Base+0xaa8>
  40c79d:	mov    QWORD PTR [rip+0xc450],0x0        # 418bf8 <__bss_start@@Base+0xaa0>
  40c7a8:	mov    QWORD PTR [rip+0xc43d],0x0        # 418bf0 <__bss_start@@Base+0xa98>
  40c7b3:	mov    QWORD PTR [rip+0xc42a],0x0        # 418be8 <__bss_start@@Base+0xa90>
  40c7be:	mov    QWORD PTR [rip+0xc417],0x0        # 418be0 <__bss_start@@Base+0xa88>
  40c7c9:	mov    QWORD PTR [rip+0xc404],0x0        # 418bd8 <__bss_start@@Base+0xa80>
  40c7d4:	mov    QWORD PTR [rip+0xc3f1],0x0        # 418bd0 <__bss_start@@Base+0xa78>
  40c7df:	mov    QWORD PTR [rip+0xc3de],0x0        # 418bc8 <__bss_start@@Base+0xa70>
  40c7ea:	mov    QWORD PTR [rip+0xc3cb],0x0        # 418bc0 <__bss_start@@Base+0xa68>
  40c7f5:	mov    QWORD PTR [rip+0xc570],0x0        # 418d70 <__bss_start@@Base+0xc18>
  40c800:	mov    QWORD PTR [rip+0xc55d],0x0        # 418d68 <__bss_start@@Base+0xc10>
  40c80b:	mov    QWORD PTR [rip+0xc54a],0x0        # 418d60 <__bss_start@@Base+0xc08>
  40c816:	mov    QWORD PTR [rip+0xc537],0x0        # 418d58 <__bss_start@@Base+0xc00>
  40c821:	mov    QWORD PTR [rip+0xc524],0x0        # 418d50 <__bss_start@@Base+0xbf8>
  40c82c:	mov    QWORD PTR [rip+0xc511],0x0        # 418d48 <__bss_start@@Base+0xbf0>
  40c837:	mov    QWORD PTR [rip+0xc4fe],0x0        # 418d40 <__bss_start@@Base+0xbe8>
  40c842:	mov    QWORD PTR [rip+0xc4eb],0x0        # 418d38 <__bss_start@@Base+0xbe0>
  40c84d:	mov    QWORD PTR [rip+0xc4d8],0x0        # 418d30 <__bss_start@@Base+0xbd8>
  40c858:	mov    QWORD PTR [rip+0xc4c5],0x0        # 418d28 <__bss_start@@Base+0xbd0>
  40c863:	mov    QWORD PTR [rip+0xc4b2],0x0        # 418d20 <__bss_start@@Base+0xbc8>
  40c86e:	mov    QWORD PTR [rip+0xc49f],0x0        # 418d18 <__bss_start@@Base+0xbc0>
  40c879:	mov    QWORD PTR [rip+0xc48c],0x0        # 418d10 <__bss_start@@Base+0xbb8>
  40c884:	mov    QWORD PTR [rip+0xc479],0x0        # 418d08 <__bss_start@@Base+0xbb0>
  40c88f:	mov    QWORD PTR [rip+0xc466],0x0        # 418d00 <__bss_start@@Base+0xba8>
  40c89a:	mov    QWORD PTR [rip+0xc453],0x0        # 418cf8 <__bss_start@@Base+0xba0>
  40c8a5:	mov    QWORD PTR [rip+0xc440],0x0        # 418cf0 <__bss_start@@Base+0xb98>
  40c8b0:	mov    QWORD PTR [rip+0xc42d],0x0        # 418ce8 <__bss_start@@Base+0xb90>
  40c8bb:	mov    QWORD PTR [rip+0xc41a],0x0        # 418ce0 <__bss_start@@Base+0xb88>
  40c8c6:	mov    QWORD PTR [rip+0xc407],0x0        # 418cd8 <__bss_start@@Base+0xb80>
  40c8d1:	mov    QWORD PTR [rip+0xc3f4],0x0        # 418cd0 <__bss_start@@Base+0xb78>
  40c8dc:	mov    QWORD PTR [rip+0xc579],0x0        # 418e60 <__bss_start@@Base+0xd08>
  40c8e7:	mov    QWORD PTR [rip+0xc566],0x0        # 418e58 <__bss_start@@Base+0xd00>
  40c8f2:	mov    QWORD PTR [rip+0xc553],0x0        # 418e50 <__bss_start@@Base+0xcf8>
  40c8fd:	mov    QWORD PTR [rip+0xc540],0x0        # 418e48 <__bss_start@@Base+0xcf0>
  40c908:	mov    QWORD PTR [rip+0xc52d],0x0        # 418e40 <__bss_start@@Base+0xce8>
  40c913:	mov    QWORD PTR [rip+0xc51a],0x0        # 418e38 <__bss_start@@Base+0xce0>
  40c91e:	mov    QWORD PTR [rip+0xc507],0x0        # 418e30 <__bss_start@@Base+0xcd8>
  40c929:	mov    QWORD PTR [rip+0xc4f4],0x0        # 418e28 <__bss_start@@Base+0xcd0>
  40c934:	mov    QWORD PTR [rip+0xc4e1],0x0        # 418e20 <__bss_start@@Base+0xcc8>
  40c93f:	mov    QWORD PTR [rip+0xc4ce],0x0        # 418e18 <__bss_start@@Base+0xcc0>
  40c94a:	mov    QWORD PTR [rip+0xc4bb],0x0        # 418e10 <__bss_start@@Base+0xcb8>
  40c955:	mov    QWORD PTR [rip+0xc4a8],0x0        # 418e08 <__bss_start@@Base+0xcb0>
  40c960:	mov    QWORD PTR [rip+0xc495],0x0        # 418e00 <__bss_start@@Base+0xca8>
  40c96b:	mov    QWORD PTR [rip+0xc482],0x0        # 418df8 <__bss_start@@Base+0xca0>
  40c976:	mov    QWORD PTR [rip+0xc46f],0x0        # 418df0 <__bss_start@@Base+0xc98>
  40c981:	mov    QWORD PTR [rip+0xc45c],0x0        # 418de8 <__bss_start@@Base+0xc90>
  40c98c:	mov    QWORD PTR [rip+0xc449],0x0        # 418de0 <__bss_start@@Base+0xc88>
  40c997:	mov    QWORD PTR [rip+0xc436],0x0        # 418dd8 <__bss_start@@Base+0xc80>
  40c9a2:	mov    QWORD PTR [rip+0xc423],0x0        # 418dd0 <__bss_start@@Base+0xc78>
  40c9ad:	mov    QWORD PTR [rip+0xc410],0x0        # 418dc8 <__bss_start@@Base+0xc70>
  40c9b8:	mov    QWORD PTR [rip+0xc3fd],0x0        # 418dc0 <__bss_start@@Base+0xc68>
  40c9c3:	mov    QWORD PTR [rip+0xc3ea],0x0        # 418db8 <__bss_start@@Base+0xc60>
  40c9ce:	mov    QWORD PTR [rip+0xc3d7],0x0        # 418db0 <__bss_start@@Base+0xc58>
  40c9d9:	mov    QWORD PTR [rip+0xc3c4],0x0        # 418da8 <__bss_start@@Base+0xc50>
  40c9e4:	mov    QWORD PTR [rip+0xc3b1],0x0        # 418da0 <__bss_start@@Base+0xc48>
  40c9ef:	mov    QWORD PTR [rip+0xc39e],0x0        # 418d98 <__bss_start@@Base+0xc40>
  40c9fa:	mov    QWORD PTR [rip+0xc38b],0x0        # 418d90 <__bss_start@@Base+0xc38>
  40ca05:	mov    QWORD PTR [rip+0xc378],0x0        # 418d88 <__bss_start@@Base+0xc30>
  40ca10:	mov    QWORD PTR [rip+0xc365],0x0        # 418d80 <__bss_start@@Base+0xc28>
  40ca1b:	mov    QWORD PTR [rip+0xc492],0x0        # 418eb8 <__bss_start@@Base+0xd60>
  40ca26:	mov    QWORD PTR [rip+0xc47f],0x0        # 418eb0 <__bss_start@@Base+0xd58>
  40ca31:	mov    QWORD PTR [rip+0xc46c],0x0        # 418ea8 <__bss_start@@Base+0xd50>
  40ca3c:	mov    QWORD PTR [rip+0xc459],0x0        # 418ea0 <__bss_start@@Base+0xd48>
  40ca47:	mov    QWORD PTR [rip+0xc446],0x0        # 418e98 <__bss_start@@Base+0xd40>
  40ca52:	mov    QWORD PTR [rip+0xc433],0x0        # 418e90 <__bss_start@@Base+0xd38>
  40ca5d:	mov    QWORD PTR [rip+0xc420],0x0        # 418e88 <__bss_start@@Base+0xd30>
  40ca68:	mov    QWORD PTR [rip+0xc40d],0x0        # 418e80 <__bss_start@@Base+0xd28>
  40ca73:	mov    QWORD PTR [rip+0xc3fa],0x0        # 418e78 <__bss_start@@Base+0xd20>
  40ca7e:	mov    QWORD PTR [rip+0xc3e7],0x0        # 418e70 <__bss_start@@Base+0xd18>
  40ca89:	mov    QWORD PTR [rip+0xc51c],0x0        # 418fb0 <__bss_start@@Base+0xe58>
  40ca94:	mov    QWORD PTR [rip+0xc509],0x0        # 418fa8 <__bss_start@@Base+0xe50>
  40ca9f:	mov    QWORD PTR [rip+0xc4f6],0x0        # 418fa0 <__bss_start@@Base+0xe48>
  40caaa:	mov    QWORD PTR [rip+0xc4e3],0x0        # 418f98 <__bss_start@@Base+0xe40>
  40cab5:	mov    QWORD PTR [rip+0xc4d0],0x0        # 418f90 <__bss_start@@Base+0xe38>
  40cac0:	mov    QWORD PTR [rip+0xc4bd],0x0        # 418f88 <__bss_start@@Base+0xe30>
  40cacb:	mov    QWORD PTR [rip+0xc4aa],0x0        # 418f80 <__bss_start@@Base+0xe28>
  40cad6:	mov    QWORD PTR [rip+0xc497],0x0        # 418f78 <__bss_start@@Base+0xe20>
  40cae1:	mov    QWORD PTR [rip+0xc484],0x0        # 418f70 <__bss_start@@Base+0xe18>
  40caec:	mov    QWORD PTR [rip+0xc471],0x0        # 418f68 <__bss_start@@Base+0xe10>
  40caf7:	mov    QWORD PTR [rip+0xc45e],0x0        # 418f60 <__bss_start@@Base+0xe08>
  40cb02:	mov    QWORD PTR [rip+0xc44b],0x0        # 418f58 <__bss_start@@Base+0xe00>
  40cb0d:	mov    QWORD PTR [rip+0xc438],0x0        # 418f50 <__bss_start@@Base+0xdf8>
  40cb18:	mov    QWORD PTR [rip+0xc425],0x0        # 418f48 <__bss_start@@Base+0xdf0>
  40cb23:	mov    QWORD PTR [rip+0xc412],0x0        # 418f40 <__bss_start@@Base+0xde8>
  40cb2e:	mov    QWORD PTR [rip+0xc3ff],0x0        # 418f38 <__bss_start@@Base+0xde0>
  40cb39:	mov    QWORD PTR [rip+0xc3ec],0x0        # 418f30 <__bss_start@@Base+0xdd8>
  40cb44:	mov    QWORD PTR [rip+0xc3d9],0x0        # 418f28 <__bss_start@@Base+0xdd0>
  40cb4f:	mov    QWORD PTR [rip+0xc3c6],0x0        # 418f20 <__bss_start@@Base+0xdc8>
  40cb5a:	mov    QWORD PTR [rip+0xc3b3],0x0        # 418f18 <__bss_start@@Base+0xdc0>
  40cb65:	mov    QWORD PTR [rip+0xc3a0],0x0        # 418f10 <__bss_start@@Base+0xdb8>
  40cb70:	mov    QWORD PTR [rip+0xc38d],0x0        # 418f08 <__bss_start@@Base+0xdb0>
  40cb7b:	mov    QWORD PTR [rip+0xc37a],0x0        # 418f00 <__bss_start@@Base+0xda8>
  40cb86:	mov    QWORD PTR [rip+0xc367],0x0        # 418ef8 <__bss_start@@Base+0xda0>
  40cb91:	mov    QWORD PTR [rip+0xc354],0x0        # 418ef0 <__bss_start@@Base+0xd98>
  40cb9c:	mov    QWORD PTR [rip+0xc341],0x0        # 418ee8 <__bss_start@@Base+0xd90>
  40cba7:	mov    QWORD PTR [rip+0xc32e],0x0        # 418ee0 <__bss_start@@Base+0xd88>
  40cbb2:	mov    QWORD PTR [rip+0xc31b],0x0        # 418ed8 <__bss_start@@Base+0xd80>
  40cbbd:	mov    QWORD PTR [rip+0xc308],0x0        # 418ed0 <__bss_start@@Base+0xd78>
  40cbc8:	mov    QWORD PTR [rip+0xc2f5],0x0        # 418ec8 <__bss_start@@Base+0xd70>
  40cbd3:	mov    QWORD PTR [rip+0xc2e2],0x0        # 418ec0 <__bss_start@@Base+0xd68>
  40cbde:	mov    QWORD PTR [rip+0xc41f],0x0        # 419008 <__bss_start@@Base+0xeb0>
  40cbe9:	mov    QWORD PTR [rip+0xc40c],0x0        # 419000 <__bss_start@@Base+0xea8>
  40cbf4:	mov    QWORD PTR [rip+0xc3f9],0x0        # 418ff8 <__bss_start@@Base+0xea0>
  40cbff:	mov    QWORD PTR [rip+0xc3e6],0x0        # 418ff0 <__bss_start@@Base+0xe98>
  40cc0a:	mov    QWORD PTR [rip+0xc3d3],0x0        # 418fe8 <__bss_start@@Base+0xe90>
  40cc15:	mov    QWORD PTR [rip+0xc3c0],0x0        # 418fe0 <__bss_start@@Base+0xe88>
  40cc20:	mov    QWORD PTR [rip+0xc3ad],0x0        # 418fd8 <__bss_start@@Base+0xe80>
  40cc2b:	mov    QWORD PTR [rip+0xc39a],0x0        # 418fd0 <__bss_start@@Base+0xe78>
  40cc36:	mov    QWORD PTR [rip+0xc387],0x0        # 418fc8 <__bss_start@@Base+0xe70>
  40cc41:	mov    QWORD PTR [rip+0xc374],0x0        # 418fc0 <__bss_start@@Base+0xe68>
  40cc4c:	mov    QWORD PTR [rip+0xc4f9],0x0        # 419150 <__bss_start@@Base+0xff8>
  40cc57:	mov    QWORD PTR [rip+0xc4e6],0x0        # 419148 <__bss_start@@Base+0xff0>
  40cc62:	mov    QWORD PTR [rip+0xc4d3],0x0        # 419140 <__bss_start@@Base+0xfe8>
  40cc6d:	mov    QWORD PTR [rip+0xc4c0],0x0        # 419138 <__bss_start@@Base+0xfe0>
  40cc78:	mov    QWORD PTR [rip+0xc4ad],0x0        # 419130 <__bss_start@@Base+0xfd8>
  40cc83:	mov    QWORD PTR [rip+0xc49a],0x0        # 419128 <__bss_start@@Base+0xfd0>
  40cc8e:	mov    QWORD PTR [rip+0xc487],0x0        # 419120 <__bss_start@@Base+0xfc8>
  40cc99:	mov    QWORD PTR [rip+0xc474],0x0        # 419118 <__bss_start@@Base+0xfc0>
  40cca4:	mov    QWORD PTR [rip+0xc461],0x0        # 419110 <__bss_start@@Base+0xfb8>
  40ccaf:	mov    QWORD PTR [rip+0xc44e],0x0        # 419108 <__bss_start@@Base+0xfb0>
  40ccba:	mov    QWORD PTR [rip+0xc43b],0x0        # 419100 <__bss_start@@Base+0xfa8>
  40ccc5:	mov    QWORD PTR [rip+0xc428],0x0        # 4190f8 <__bss_start@@Base+0xfa0>
  40ccd0:	mov    QWORD PTR [rip+0xc415],0x0        # 4190f0 <__bss_start@@Base+0xf98>
  40ccdb:	mov    QWORD PTR [rip+0xc402],0x0        # 4190e8 <__bss_start@@Base+0xf90>
  40cce6:	mov    QWORD PTR [rip+0xc3ef],0x0        # 4190e0 <__bss_start@@Base+0xf88>
  40ccf1:	mov    QWORD PTR [rip+0xc3dc],0x0        # 4190d8 <__bss_start@@Base+0xf80>
  40ccfc:	mov    QWORD PTR [rip+0xc3c9],0x0        # 4190d0 <__bss_start@@Base+0xf78>
  40cd07:	mov    QWORD PTR [rip+0xc3b6],0x0        # 4190c8 <__bss_start@@Base+0xf70>
  40cd12:	mov    QWORD PTR [rip+0xc3a3],0x0        # 4190c0 <__bss_start@@Base+0xf68>
  40cd1d:	mov    QWORD PTR [rip+0xc390],0x0        # 4190b8 <__bss_start@@Base+0xf60>
  40cd28:	mov    QWORD PTR [rip+0xc37d],0x0        # 4190b0 <__bss_start@@Base+0xf58>
  40cd33:	mov    QWORD PTR [rip+0xc36a],0x0        # 4190a8 <__bss_start@@Base+0xf50>
  40cd3e:	mov    QWORD PTR [rip+0xc357],0x0        # 4190a0 <__bss_start@@Base+0xf48>
  40cd49:	mov    QWORD PTR [rip+0xc344],0x0        # 419098 <__bss_start@@Base+0xf40>
  40cd54:	mov    QWORD PTR [rip+0xc331],0x0        # 419090 <__bss_start@@Base+0xf38>
  40cd5f:	mov    QWORD PTR [rip+0xc31e],0x0        # 419088 <__bss_start@@Base+0xf30>
  40cd6a:	mov    QWORD PTR [rip+0xc30b],0x0        # 419080 <__bss_start@@Base+0xf28>
  40cd75:	mov    QWORD PTR [rip+0xc2f8],0x0        # 419078 <__bss_start@@Base+0xf20>
  40cd80:	mov    QWORD PTR [rip+0xc2e5],0x0        # 419070 <__bss_start@@Base+0xf18>
  40cd8b:	mov    QWORD PTR [rip+0xc2d2],0x0        # 419068 <__bss_start@@Base+0xf10>
  40cd96:	mov    QWORD PTR [rip+0xc2bf],0x0        # 419060 <__bss_start@@Base+0xf08>
  40cda1:	mov    QWORD PTR [rip+0xc2ac],0x0        # 419058 <__bss_start@@Base+0xf00>
  40cdac:	mov    QWORD PTR [rip+0xc299],0x0        # 419050 <__bss_start@@Base+0xef8>
  40cdb7:	mov    QWORD PTR [rip+0xc286],0x0        # 419048 <__bss_start@@Base+0xef0>
  40cdc2:	mov    QWORD PTR [rip+0xc273],0x0        # 419040 <__bss_start@@Base+0xee8>
  40cdcd:	mov    QWORD PTR [rip+0xc260],0x0        # 419038 <__bss_start@@Base+0xee0>
  40cdd8:	mov    QWORD PTR [rip+0xc24d],0x0        # 419030 <__bss_start@@Base+0xed8>
  40cde3:	mov    QWORD PTR [rip+0xc23a],0x0        # 419028 <__bss_start@@Base+0xed0>
  40cdee:	mov    QWORD PTR [rip+0xc227],0x0        # 419020 <__bss_start@@Base+0xec8>
  40cdf9:	mov    QWORD PTR [rip+0xc214],0x0        # 419018 <__bss_start@@Base+0xec0>
  40ce04:	mov    QWORD PTR [rip+0xc201],0x0        # 419010 <__bss_start@@Base+0xeb8>
  40ce0f:	mov    QWORD PTR [rip+0xc416],0x0        # 419230 <__bss_start@@Base+0x10d8>
  40ce1a:	mov    QWORD PTR [rip+0xc403],0x0        # 419228 <__bss_start@@Base+0x10d0>
  40ce25:	mov    QWORD PTR [rip+0xc3f0],0x0        # 419220 <__bss_start@@Base+0x10c8>
  40ce30:	mov    QWORD PTR [rip+0xc3dd],0x0        # 419218 <__bss_start@@Base+0x10c0>
  40ce3b:	mov    QWORD PTR [rip+0xc3ca],0x0        # 419210 <__bss_start@@Base+0x10b8>
  40ce46:	mov    QWORD PTR [rip+0xc3b7],0x0        # 419208 <__bss_start@@Base+0x10b0>
  40ce51:	mov    QWORD PTR [rip+0xc3a4],0x0        # 419200 <__bss_start@@Base+0x10a8>
  40ce5c:	mov    QWORD PTR [rip+0xc391],0x0        # 4191f8 <__bss_start@@Base+0x10a0>
  40ce67:	mov    QWORD PTR [rip+0xc37e],0x0        # 4191f0 <__bss_start@@Base+0x1098>
  40ce72:	mov    QWORD PTR [rip+0xc36b],0x0        # 4191e8 <__bss_start@@Base+0x1090>
  40ce7d:	mov    QWORD PTR [rip+0xc358],0x0        # 4191e0 <__bss_start@@Base+0x1088>
  40ce88:	mov    QWORD PTR [rip+0xc345],0x0        # 4191d8 <__bss_start@@Base+0x1080>
  40ce93:	mov    QWORD PTR [rip+0xc332],0x0        # 4191d0 <__bss_start@@Base+0x1078>
  40ce9e:	mov    QWORD PTR [rip+0xc31f],0x0        # 4191c8 <__bss_start@@Base+0x1070>
  40cea9:	mov    QWORD PTR [rip+0xc30c],0x0        # 4191c0 <__bss_start@@Base+0x1068>
  40ceb4:	mov    QWORD PTR [rip+0xc2f9],0x0        # 4191b8 <__bss_start@@Base+0x1060>
  40cebf:	mov    QWORD PTR [rip+0xc2e6],0x0        # 4191b0 <__bss_start@@Base+0x1058>
  40ceca:	mov    QWORD PTR [rip+0xc2d3],0x0        # 4191a8 <__bss_start@@Base+0x1050>
  40ced5:	mov    QWORD PTR [rip+0xc2c0],0x0        # 4191a0 <__bss_start@@Base+0x1048>
  40cee0:	mov    QWORD PTR [rip+0xc2ad],0x0        # 419198 <__bss_start@@Base+0x1040>
  40ceeb:	mov    QWORD PTR [rip+0xc29a],0x0        # 419190 <__bss_start@@Base+0x1038>
  40cef6:	mov    QWORD PTR [rip+0xc287],0x0        # 419188 <__bss_start@@Base+0x1030>
  40cf01:	mov    QWORD PTR [rip+0xc274],0x0        # 419180 <__bss_start@@Base+0x1028>
  40cf0c:	mov    QWORD PTR [rip+0xc261],0x0        # 419178 <__bss_start@@Base+0x1020>
  40cf17:	mov    QWORD PTR [rip+0xc24e],0x0        # 419170 <__bss_start@@Base+0x1018>
  40cf22:	mov    QWORD PTR [rip+0xc23b],0x0        # 419168 <__bss_start@@Base+0x1010>
  40cf2d:	mov    QWORD PTR [rip+0xc228],0x0        # 419160 <__bss_start@@Base+0x1008>
  40cf38:	mov    QWORD PTR [rip+0xc385],0x0        # 4192c8 <__bss_start@@Base+0x1170>
  40cf43:	mov    QWORD PTR [rip+0xc372],0x0        # 4192c0 <__bss_start@@Base+0x1168>
  40cf4e:	mov    QWORD PTR [rip+0xc35f],0x0        # 4192b8 <__bss_start@@Base+0x1160>
  40cf59:	mov    QWORD PTR [rip+0xc34c],0x0        # 4192b0 <__bss_start@@Base+0x1158>
  40cf64:	mov    QWORD PTR [rip+0xc339],0x0        # 4192a8 <__bss_start@@Base+0x1150>
  40cf6f:	mov    QWORD PTR [rip+0xc326],0x0        # 4192a0 <__bss_start@@Base+0x1148>
  40cf7a:	mov    QWORD PTR [rip+0xc313],0x0        # 419298 <__bss_start@@Base+0x1140>
  40cf85:	mov    QWORD PTR [rip+0xc300],0x0        # 419290 <__bss_start@@Base+0x1138>
  40cf90:	mov    QWORD PTR [rip+0xc2ed],0x0        # 419288 <__bss_start@@Base+0x1130>
  40cf9b:	mov    QWORD PTR [rip+0xc2da],0x0        # 419280 <__bss_start@@Base+0x1128>
  40cfa6:	mov    QWORD PTR [rip+0xc2c7],0x0        # 419278 <__bss_start@@Base+0x1120>
  40cfb1:	mov    QWORD PTR [rip+0xc2b4],0x0        # 419270 <__bss_start@@Base+0x1118>
  40cfbc:	mov    QWORD PTR [rip+0xc2a1],0x0        # 419268 <__bss_start@@Base+0x1110>
  40cfc7:	mov    QWORD PTR [rip+0xc28e],0x0        # 419260 <__bss_start@@Base+0x1108>
  40cfd2:	mov    QWORD PTR [rip+0xc27b],0x0        # 419258 <__bss_start@@Base+0x1100>
  40cfdd:	mov    QWORD PTR [rip+0xc268],0x0        # 419250 <__bss_start@@Base+0x10f8>
  40cfe8:	mov    QWORD PTR [rip+0xc255],0x0        # 419248 <__bss_start@@Base+0x10f0>
  40cff3:	mov    QWORD PTR [rip+0xc242],0x0        # 419240 <__bss_start@@Base+0x10e8>
  40cffe:	mov    QWORD PTR [rip+0xc307],0x0        # 419310 <__bss_start@@Base+0x11b8>
  40d009:	mov    QWORD PTR [rip+0xc2f4],0x0        # 419308 <__bss_start@@Base+0x11b0>
  40d014:	mov    QWORD PTR [rip+0xc2e1],0x0        # 419300 <__bss_start@@Base+0x11a8>
  40d01f:	mov    QWORD PTR [rip+0xc2ce],0x0        # 4192f8 <__bss_start@@Base+0x11a0>
  40d02a:	mov    QWORD PTR [rip+0xc2bb],0x0        # 4192f0 <__bss_start@@Base+0x1198>
  40d035:	mov    QWORD PTR [rip+0xc2a8],0x0        # 4192e8 <__bss_start@@Base+0x1190>
  40d040:	mov    QWORD PTR [rip+0xc295],0x0        # 4192e0 <__bss_start@@Base+0x1188>
  40d04b:	mov    QWORD PTR [rip+0xc282],0x0        # 4192d8 <__bss_start@@Base+0x1180>
  40d056:	mov    QWORD PTR [rip+0xc26f],0x0        # 4192d0 <__bss_start@@Base+0x1178>
  40d061:	mov    QWORD PTR [rip+0xc2b4],0x0        # 419320 <__bss_start@@Base+0x11c8>
  40d06c:	mov    QWORD PTR [rip+0xc2a1],0x0        # 419318 <__bss_start@@Base+0x11c0>
  40d077:	mov    QWORD PTR [rip+0xc2ae],0x0        # 419330 <__bss_start@@Base+0x11d8>
  40d082:	mov    QWORD PTR [rip+0xc29b],0x0        # 419328 <__bss_start@@Base+0x11d0>
  40d08d:	mov    QWORD PTR [rip+0xc2f0],0x0        # 419388 <__bss_start@@Base+0x1230>
  40d098:	mov    QWORD PTR [rip+0xc2dd],0x0        # 419380 <__bss_start@@Base+0x1228>
  40d0a3:	mov    QWORD PTR [rip+0xc2ca],0x0        # 419378 <__bss_start@@Base+0x1220>
  40d0ae:	mov    QWORD PTR [rip+0xc2b7],0x0        # 419370 <__bss_start@@Base+0x1218>
  40d0b9:	mov    QWORD PTR [rip+0xc2a4],0x0        # 419368 <__bss_start@@Base+0x1210>
  40d0c4:	mov    QWORD PTR [rip+0xc291],0x0        # 419360 <__bss_start@@Base+0x1208>
  40d0cf:	mov    QWORD PTR [rip+0xc27e],0x0        # 419358 <__bss_start@@Base+0x1200>
  40d0da:	mov    QWORD PTR [rip+0xc26b],0x0        # 419350 <__bss_start@@Base+0x11f8>
  40d0e5:	mov    QWORD PTR [rip+0xc258],0x0        # 419348 <__bss_start@@Base+0x11f0>
  40d0f0:	mov    QWORD PTR [rip+0xc245],0x0        # 419340 <__bss_start@@Base+0x11e8>
  40d0fb:	mov    QWORD PTR [rip+0xc292],0x0        # 419398 <__bss_start@@Base+0x1240>
  40d106:	mov    QWORD PTR [rip+0xc27f],0x0        # 419390 <__bss_start@@Base+0x1238>
  40d111:	mov    QWORD PTR [rip+0xc2ac],0x0        # 4193c8 <__bss_start@@Base+0x1270>
  40d11c:	mov    QWORD PTR [rip+0xc299],0x0        # 4193c0 <__bss_start@@Base+0x1268>
  40d127:	mov    QWORD PTR [rip+0xc286],0x0        # 4193b8 <__bss_start@@Base+0x1260>
  40d132:	mov    QWORD PTR [rip+0xc273],0x0        # 4193b0 <__bss_start@@Base+0x1258>
  40d13d:	mov    QWORD PTR [rip+0xc260],0x0        # 4193a8 <__bss_start@@Base+0x1250>
  40d148:	mov    QWORD PTR [rip+0xc24d],0x0        # 4193a0 <__bss_start@@Base+0x1248>
  40d153:	pop    rax
  40d154:	ret    
  40d155:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40d15f:	nop
  40d160:	push   rax
  40d161:	lea    rdi,[rip+0xffffffffffffe898]        # 40ba00 <UnityEnd@@Base+0x180>
  40d168:	lea    rsi,[rip+0xffffffffffffe991]        # 40bb00 <UnityEnd@@Base+0x280>
  40d16f:	call   412580 <__gcov_flush@@Base+0xb0>
  40d174:	pop    rax
  40d175:	ret    
  40d176:	nop    WORD PTR cs:[rax+rax*1+0x0]

000000000040d180 <init_token_int_type@@Base>:
  40d180:	push   rbp
  40d181:	mov    rbp,rsp
  40d184:	lea    rax,[rip+0xc245]        # 4193d0 <__bss_start@@Base+0x1278>
  40d18b:	mov    QWORD PTR [rbp-0x10],rdi
  40d18f:	mov    QWORD PTR [rbp-0x18],rax
  40d193:	mov    rax,QWORD PTR [rbp-0x18]
  40d197:	mov    rcx,QWORD PTR [rax]
  40d19a:	add    rcx,0x1
  40d1a1:	mov    QWORD PTR [rax],rcx
  40d1a4:	mov    rax,QWORD PTR [rip+0xc22d]        # 4193d8 <__bss_start@@Base+0x1280>
  40d1ab:	add    rax,0x1
  40d1b1:	mov    QWORD PTR [rip+0xc220],rax        # 4193d8 <__bss_start@@Base+0x1280>
  40d1b8:	mov    rax,QWORD PTR [rbp-0x10]
  40d1bc:	mov    QWORD PTR [rbp-0x8],rax
  40d1c0:	mov    rcx,QWORD PTR [rbp-0x8]
  40d1c4:	mov    DWORD PTR [rcx],0x0
  40d1ca:	pop    rbp
  40d1cb:	ret    
  40d1cc:	nop    DWORD PTR [rax+0x0]

000000000040d1d0 <init_token_int_value@@Base>:
  40d1d0:	push   rbp
  40d1d1:	mov    rbp,rsp
  40d1d4:	lea    rax,[rip+0xc205]        # 4193e0 <__bss_start@@Base+0x1288>
  40d1db:	mov    QWORD PTR [rbp-0x18],rdi
  40d1df:	mov    DWORD PTR [rbp-0x1c],esi
  40d1e2:	mov    QWORD PTR [rbp-0x28],rax
  40d1e6:	mov    rax,QWORD PTR [rbp-0x28]
  40d1ea:	mov    rcx,QWORD PTR [rax]
  40d1ed:	add    rcx,0x1
  40d1f4:	mov    QWORD PTR [rax],rcx
  40d1f7:	mov    rax,QWORD PTR [rip+0xc1ea]        # 4193e8 <__bss_start@@Base+0x1290>
  40d1fe:	add    rax,0x1
  40d204:	mov    QWORD PTR [rip+0xc1dd],rax        # 4193e8 <__bss_start@@Base+0x1290>
  40d20b:	mov    rax,QWORD PTR [rbp-0x18]
  40d20f:	mov    QWORD PTR [rbp-0x8],rax
  40d213:	mov    edx,DWORD PTR [rbp-0x1c]
  40d216:	mov    DWORD PTR [rbp-0xc],edx
  40d219:	mov    rcx,QWORD PTR [rbp-0x8]
  40d21d:	mov    DWORD PTR [rcx],0x1
  40d223:	mov    esi,DWORD PTR [rbp-0xc]
  40d226:	mov    rcx,QWORD PTR [rbp-0x8]
  40d22a:	mov    DWORD PTR [rcx+0x4],esi
  40d22d:	pop    rbp
  40d22e:	ret    
  40d22f:	nop

000000000040d230 <init_token_function@@Base>:
  40d230:	push   rbp
  40d231:	mov    rbp,rsp
  40d234:	lea    rax,[rip+0xc1b5]        # 4193f0 <__bss_start@@Base+0x1298>
  40d23b:	mov    QWORD PTR [rbp-0x18],rdi
  40d23f:	mov    QWORD PTR [rbp-0x20],rsi
  40d243:	mov    QWORD PTR [rbp-0x28],rax
  40d247:	mov    rax,QWORD PTR [rbp-0x28]
  40d24b:	mov    rcx,QWORD PTR [rax]
  40d24e:	add    rcx,0x1
  40d255:	mov    QWORD PTR [rax],rcx
  40d258:	mov    rax,QWORD PTR [rip+0xc199]        # 4193f8 <__bss_start@@Base+0x12a0>
  40d25f:	add    rax,0x1
  40d265:	mov    QWORD PTR [rip+0xc18c],rax        # 4193f8 <__bss_start@@Base+0x12a0>
  40d26c:	mov    rax,QWORD PTR [rbp-0x18]
  40d270:	mov    QWORD PTR [rbp-0x8],rax
  40d274:	mov    rcx,QWORD PTR [rbp-0x20]
  40d278:	mov    QWORD PTR [rbp-0x10],rcx
  40d27c:	mov    rdx,QWORD PTR [rbp-0x8]
  40d280:	mov    DWORD PTR [rdx],0x2
  40d286:	mov    rdx,QWORD PTR [rbp-0x10]
  40d28a:	mov    rsi,QWORD PTR [rbp-0x8]
  40d28e:	mov    QWORD PTR [rsi+0x8],rdx
  40d292:	pop    rbp
  40d293:	ret    
  40d294:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40d29e:	xchg   ax,ax

000000000040d2a0 <init_token_opar@@Base>:
  40d2a0:	push   rbp
  40d2a1:	mov    rbp,rsp
  40d2a4:	lea    rax,[rip+0xc155]        # 419400 <__bss_start@@Base+0x12a8>
  40d2ab:	mov    QWORD PTR [rbp-0x10],rdi
  40d2af:	mov    QWORD PTR [rbp-0x18],rax
  40d2b3:	mov    rax,QWORD PTR [rbp-0x18]
  40d2b7:	mov    rcx,QWORD PTR [rax]
  40d2ba:	add    rcx,0x1
  40d2c1:	mov    QWORD PTR [rax],rcx
  40d2c4:	mov    rax,QWORD PTR [rip+0xc13d]        # 419408 <__bss_start@@Base+0x12b0>
  40d2cb:	add    rax,0x1
  40d2d1:	mov    QWORD PTR [rip+0xc130],rax        # 419408 <__bss_start@@Base+0x12b0>
  40d2d8:	mov    rax,QWORD PTR [rbp-0x10]
  40d2dc:	mov    QWORD PTR [rbp-0x8],rax
  40d2e0:	mov    rcx,QWORD PTR [rbp-0x8]
  40d2e4:	mov    DWORD PTR [rcx],0x3
  40d2ea:	pop    rbp
  40d2eb:	ret    
  40d2ec:	nop    DWORD PTR [rax+0x0]

000000000040d2f0 <init_token_cpar@@Base>:
  40d2f0:	push   rbp
  40d2f1:	mov    rbp,rsp
  40d2f4:	lea    rax,[rip+0xc115]        # 419410 <__bss_start@@Base+0x12b8>
  40d2fb:	mov    QWORD PTR [rbp-0x10],rdi
  40d2ff:	mov    QWORD PTR [rbp-0x18],rax
  40d303:	mov    rax,QWORD PTR [rbp-0x18]
  40d307:	mov    rcx,QWORD PTR [rax]
  40d30a:	add    rcx,0x1
  40d311:	mov    QWORD PTR [rax],rcx
  40d314:	mov    rax,QWORD PTR [rip+0xc0fd]        # 419418 <__bss_start@@Base+0x12c0>
  40d31b:	add    rax,0x1
  40d321:	mov    QWORD PTR [rip+0xc0f0],rax        # 419418 <__bss_start@@Base+0x12c0>
  40d328:	mov    rax,QWORD PTR [rbp-0x10]
  40d32c:	mov    QWORD PTR [rbp-0x8],rax
  40d330:	mov    rcx,QWORD PTR [rbp-0x8]
  40d334:	mov    DWORD PTR [rcx],0x4
  40d33a:	pop    rbp
  40d33b:	ret    
  40d33c:	nop    DWORD PTR [rax+0x0]

000000000040d340 <init_token_obra@@Base>:
  40d340:	push   rbp
  40d341:	mov    rbp,rsp
  40d344:	lea    rax,[rip+0xc0d5]        # 419420 <__bss_start@@Base+0x12c8>
  40d34b:	mov    QWORD PTR [rbp-0x10],rdi
  40d34f:	mov    QWORD PTR [rbp-0x18],rax
  40d353:	mov    rax,QWORD PTR [rbp-0x18]
  40d357:	mov    rcx,QWORD PTR [rax]
  40d35a:	add    rcx,0x1
  40d361:	mov    QWORD PTR [rax],rcx
  40d364:	mov    rax,QWORD PTR [rip+0xc0bd]        # 419428 <__bss_start@@Base+0x12d0>
  40d36b:	add    rax,0x1
  40d371:	mov    QWORD PTR [rip+0xc0b0],rax        # 419428 <__bss_start@@Base+0x12d0>
  40d378:	mov    rax,QWORD PTR [rbp-0x10]
  40d37c:	mov    QWORD PTR [rbp-0x8],rax
  40d380:	mov    rcx,QWORD PTR [rbp-0x8]
  40d384:	mov    DWORD PTR [rcx],0x5
  40d38a:	pop    rbp
  40d38b:	ret    
  40d38c:	nop    DWORD PTR [rax+0x0]

000000000040d390 <init_token_cbra@@Base>:
  40d390:	push   rbp
  40d391:	mov    rbp,rsp
  40d394:	lea    rax,[rip+0xc095]        # 419430 <__bss_start@@Base+0x12d8>
  40d39b:	mov    QWORD PTR [rbp-0x10],rdi
  40d39f:	mov    QWORD PTR [rbp-0x18],rax
  40d3a3:	mov    rax,QWORD PTR [rbp-0x18]
  40d3a7:	mov    rcx,QWORD PTR [rax]
  40d3aa:	add    rcx,0x1
  40d3b1:	mov    QWORD PTR [rax],rcx
  40d3b4:	mov    rax,QWORD PTR [rip+0xc07d]        # 419438 <__bss_start@@Base+0x12e0>
  40d3bb:	add    rax,0x1
  40d3c1:	mov    QWORD PTR [rip+0xc070],rax        # 419438 <__bss_start@@Base+0x12e0>
  40d3c8:	mov    rax,QWORD PTR [rbp-0x10]
  40d3cc:	mov    QWORD PTR [rbp-0x8],rax
  40d3d0:	mov    rcx,QWORD PTR [rbp-0x8]
  40d3d4:	mov    DWORD PTR [rcx],0x6
  40d3da:	pop    rbp
  40d3db:	ret    
  40d3dc:	nop    DWORD PTR [rax+0x0]

000000000040d3e0 <init_token_return@@Base>:
  40d3e0:	push   rbp
  40d3e1:	mov    rbp,rsp
  40d3e4:	lea    rax,[rip+0xc055]        # 419440 <__bss_start@@Base+0x12e8>
  40d3eb:	mov    QWORD PTR [rbp-0x10],rdi
  40d3ef:	mov    QWORD PTR [rbp-0x18],rax
  40d3f3:	mov    rax,QWORD PTR [rbp-0x18]
  40d3f7:	mov    rcx,QWORD PTR [rax]
  40d3fa:	add    rcx,0x1
  40d401:	mov    QWORD PTR [rax],rcx
  40d404:	mov    rax,QWORD PTR [rip+0xc03d]        # 419448 <__bss_start@@Base+0x12f0>
  40d40b:	add    rax,0x1
  40d411:	mov    QWORD PTR [rip+0xc030],rax        # 419448 <__bss_start@@Base+0x12f0>
  40d418:	mov    rax,QWORD PTR [rbp-0x10]
  40d41c:	mov    QWORD PTR [rbp-0x8],rax
  40d420:	mov    rcx,QWORD PTR [rbp-0x8]
  40d424:	mov    DWORD PTR [rcx],0x7
  40d42a:	pop    rbp
  40d42b:	ret    
  40d42c:	nop    DWORD PTR [rax+0x0]

000000000040d430 <init_token_semicolon@@Base>:
  40d430:	push   rbp
  40d431:	mov    rbp,rsp
  40d434:	lea    rax,[rip+0xc015]        # 419450 <__bss_start@@Base+0x12f8>
  40d43b:	mov    QWORD PTR [rbp-0x10],rdi
  40d43f:	mov    QWORD PTR [rbp-0x18],rax
  40d443:	mov    rax,QWORD PTR [rbp-0x18]
  40d447:	mov    rcx,QWORD PTR [rax]
  40d44a:	add    rcx,0x1
  40d451:	mov    QWORD PTR [rax],rcx
  40d454:	mov    rax,QWORD PTR [rip+0xbffd]        # 419458 <__bss_start@@Base+0x1300>
  40d45b:	add    rax,0x1
  40d461:	mov    QWORD PTR [rip+0xbff0],rax        # 419458 <__bss_start@@Base+0x1300>
  40d468:	mov    rax,QWORD PTR [rbp-0x10]
  40d46c:	mov    QWORD PTR [rbp-0x8],rax
  40d470:	mov    rcx,QWORD PTR [rbp-0x8]
  40d474:	mov    DWORD PTR [rcx],0x8
  40d47a:	pop    rbp
  40d47b:	ret    
  40d47c:	nop    DWORD PTR [rax+0x0]

000000000040d480 <init_token_eof@@Base>:
  40d480:	push   rbp
  40d481:	mov    rbp,rsp
  40d484:	lea    rax,[rip+0xbfd5]        # 419460 <__bss_start@@Base+0x1308>
  40d48b:	mov    QWORD PTR [rbp-0x10],rdi
  40d48f:	mov    QWORD PTR [rbp-0x18],rax
  40d493:	mov    rax,QWORD PTR [rbp-0x18]
  40d497:	mov    rcx,QWORD PTR [rax]
  40d49a:	add    rcx,0x1
  40d4a1:	mov    QWORD PTR [rax],rcx
  40d4a4:	mov    rax,QWORD PTR [rip+0xbfbd]        # 419468 <__bss_start@@Base+0x1310>
  40d4ab:	add    rax,0x1
  40d4b1:	mov    QWORD PTR [rip+0xbfb0],rax        # 419468 <__bss_start@@Base+0x1310>
  40d4b8:	mov    rax,QWORD PTR [rbp-0x10]
  40d4bc:	mov    QWORD PTR [rbp-0x8],rax
  40d4c0:	mov    rcx,QWORD PTR [rbp-0x8]
  40d4c4:	mov    DWORD PTR [rcx],0x9
  40d4ca:	pop    rbp
  40d4cb:	ret    
  40d4cc:	nop    DWORD PTR [rax+0x0]

000000000040d4d0 <init_token_if@@Base>:
  40d4d0:	push   rbp
  40d4d1:	mov    rbp,rsp
  40d4d4:	lea    rax,[rip+0xbf95]        # 419470 <__bss_start@@Base+0x1318>
  40d4db:	mov    QWORD PTR [rbp-0x10],rdi
  40d4df:	mov    QWORD PTR [rbp-0x18],rax
  40d4e3:	mov    rax,QWORD PTR [rbp-0x18]
  40d4e7:	mov    rcx,QWORD PTR [rax]
  40d4ea:	add    rcx,0x1
  40d4f1:	mov    QWORD PTR [rax],rcx
  40d4f4:	mov    rax,QWORD PTR [rip+0xbf7d]        # 419478 <__bss_start@@Base+0x1320>
  40d4fb:	add    rax,0x1
  40d501:	mov    QWORD PTR [rip+0xbf70],rax        # 419478 <__bss_start@@Base+0x1320>
  40d508:	mov    rax,QWORD PTR [rbp-0x10]
  40d50c:	mov    QWORD PTR [rbp-0x8],rax
  40d510:	mov    rcx,QWORD PTR [rbp-0x8]
  40d514:	mov    DWORD PTR [rcx],0xa
  40d51a:	pop    rbp
  40d51b:	ret    
  40d51c:	nop    DWORD PTR [rax+0x0]

000000000040d520 <init_token_else@@Base>:
  40d520:	push   rbp
  40d521:	mov    rbp,rsp
  40d524:	lea    rax,[rip+0xbf55]        # 419480 <__bss_start@@Base+0x1328>
  40d52b:	mov    QWORD PTR [rbp-0x10],rdi
  40d52f:	mov    QWORD PTR [rbp-0x18],rax
  40d533:	mov    rax,QWORD PTR [rbp-0x18]
  40d537:	mov    rcx,QWORD PTR [rax]
  40d53a:	add    rcx,0x1
  40d541:	mov    QWORD PTR [rax],rcx
  40d544:	mov    rax,QWORD PTR [rip+0xbf3d]        # 419488 <__bss_start@@Base+0x1330>
  40d54b:	add    rax,0x1
  40d551:	mov    QWORD PTR [rip+0xbf30],rax        # 419488 <__bss_start@@Base+0x1330>
  40d558:	mov    rax,QWORD PTR [rbp-0x10]
  40d55c:	mov    QWORD PTR [rbp-0x8],rax
  40d560:	mov    rcx,QWORD PTR [rbp-0x8]
  40d564:	mov    DWORD PTR [rcx],0xb
  40d56a:	pop    rbp
  40d56b:	ret    
  40d56c:	nop    DWORD PTR [rax+0x0]

000000000040d570 <init_token_boolean_op@@Base>:
  40d570:	push   rbp
  40d571:	mov    rbp,rsp
  40d574:	lea    rax,[rip+0xbf15]        # 419490 <__bss_start@@Base+0x1338>
  40d57b:	mov    QWORD PTR [rbp-0x18],rdi
  40d57f:	mov    QWORD PTR [rbp-0x20],rsi
  40d583:	mov    QWORD PTR [rbp-0x28],rax
  40d587:	mov    rax,QWORD PTR [rbp-0x28]
  40d58b:	mov    rcx,QWORD PTR [rax]
  40d58e:	add    rcx,0x1
  40d595:	mov    QWORD PTR [rax],rcx
  40d598:	mov    rax,QWORD PTR [rip+0xbef9]        # 419498 <__bss_start@@Base+0x1340>
  40d59f:	add    rax,0x1
  40d5a5:	mov    QWORD PTR [rip+0xbeec],rax        # 419498 <__bss_start@@Base+0x1340>
  40d5ac:	mov    rax,QWORD PTR [rbp-0x18]
  40d5b0:	mov    QWORD PTR [rbp-0x8],rax
  40d5b4:	mov    rcx,QWORD PTR [rbp-0x20]
  40d5b8:	mov    QWORD PTR [rbp-0x10],rcx
  40d5bc:	mov    rdx,QWORD PTR [rbp-0x8]
  40d5c0:	mov    DWORD PTR [rdx],0xc
  40d5c6:	mov    rdx,QWORD PTR [rbp-0x10]
  40d5ca:	mov    rsi,QWORD PTR [rbp-0x8]
  40d5ce:	mov    QWORD PTR [rsi+0x8],rdx
  40d5d2:	pop    rbp
  40d5d3:	ret    
  40d5d4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40d5de:	xchg   ax,ax

000000000040d5e0 <free_token_int_type@@Base>:
  40d5e0:	push   rbp
  40d5e1:	mov    rbp,rsp
  40d5e4:	sub    rsp,0x20
  40d5e8:	lea    rax,[rip+0xbeb1]        # 4194a0 <__bss_start@@Base+0x1348>
  40d5ef:	mov    QWORD PTR [rbp-0x10],rdi
  40d5f3:	mov    QWORD PTR [rbp-0x18],rax
  40d5f7:	mov    rax,QWORD PTR [rbp-0x18]
  40d5fb:	mov    rcx,QWORD PTR [rax]
  40d5fe:	add    rcx,0x1
  40d605:	mov    QWORD PTR [rax],rcx
  40d608:	mov    rax,QWORD PTR [rip+0xbe99]        # 4194a8 <__bss_start@@Base+0x1350>
  40d60f:	add    rax,0x1
  40d615:	mov    QWORD PTR [rip+0xbe8c],rax        # 4194a8 <__bss_start@@Base+0x1350>
  40d61c:	mov    rax,QWORD PTR [rbp-0x10]
  40d620:	mov    QWORD PTR [rbp-0x8],rax
  40d624:	mov    rcx,QWORD PTR [rbp-0x8]
  40d628:	mov    rdi,rcx
  40d62b:	call   403040 <free@plt>
  40d630:	add    rsp,0x20
  40d634:	pop    rbp
  40d635:	ret    
  40d636:	nop    WORD PTR cs:[rax+rax*1+0x0]

000000000040d640 <free_token_int_value@@Base>:
  40d640:	push   rbp
  40d641:	mov    rbp,rsp
  40d644:	sub    rsp,0x20
  40d648:	lea    rax,[rip+0xbe61]        # 4194b0 <__bss_start@@Base+0x1358>
  40d64f:	mov    QWORD PTR [rbp-0x10],rdi
  40d653:	mov    QWORD PTR [rbp-0x18],rax
  40d657:	mov    rax,QWORD PTR [rbp-0x18]
  40d65b:	mov    rcx,QWORD PTR [rax]
  40d65e:	add    rcx,0x1
  40d665:	mov    QWORD PTR [rax],rcx
  40d668:	mov    rax,QWORD PTR [rip+0xbe49]        # 4194b8 <__bss_start@@Base+0x1360>
  40d66f:	add    rax,0x1
  40d675:	mov    QWORD PTR [rip+0xbe3c],rax        # 4194b8 <__bss_start@@Base+0x1360>
  40d67c:	mov    rax,QWORD PTR [rbp-0x10]
  40d680:	mov    QWORD PTR [rbp-0x8],rax
  40d684:	mov    rcx,QWORD PTR [rbp-0x8]
  40d688:	mov    rdi,rcx
  40d68b:	call   403040 <free@plt>
  40d690:	add    rsp,0x20
  40d694:	pop    rbp
  40d695:	ret    
  40d696:	nop    WORD PTR cs:[rax+rax*1+0x0]

000000000040d6a0 <free_token_function@@Base>:
  40d6a0:	push   rbp
  40d6a1:	mov    rbp,rsp
  40d6a4:	sub    rsp,0x20
  40d6a8:	lea    rax,[rip+0xbe11]        # 4194c0 <__bss_start@@Base+0x1368>
  40d6af:	mov    QWORD PTR [rbp-0x10],rdi
  40d6b3:	mov    QWORD PTR [rbp-0x18],rax
  40d6b7:	mov    rax,QWORD PTR [rbp-0x18]
  40d6bb:	mov    rcx,QWORD PTR [rax]
  40d6be:	add    rcx,0x1
  40d6c5:	mov    QWORD PTR [rax],rcx
  40d6c8:	mov    rax,QWORD PTR [rip+0xbdf9]        # 4194c8 <__bss_start@@Base+0x1370>
  40d6cf:	add    rax,0x1
  40d6d5:	mov    QWORD PTR [rip+0xbdec],rax        # 4194c8 <__bss_start@@Base+0x1370>
  40d6dc:	mov    rax,QWORD PTR [rbp-0x10]
  40d6e0:	mov    QWORD PTR [rbp-0x8],rax
  40d6e4:	mov    rcx,QWORD PTR [rbp-0x8]
  40d6e8:	mov    rdi,rcx
  40d6eb:	call   403040 <free@plt>
  40d6f0:	add    rsp,0x20
  40d6f4:	pop    rbp
  40d6f5:	ret    
  40d6f6:	nop    WORD PTR cs:[rax+rax*1+0x0]

000000000040d700 <free_token_opar@@Base>:
  40d700:	push   rbp
  40d701:	mov    rbp,rsp
  40d704:	sub    rsp,0x20
  40d708:	lea    rax,[rip+0xbdc1]        # 4194d0 <__bss_start@@Base+0x1378>
  40d70f:	mov    QWORD PTR [rbp-0x10],rdi
  40d713:	mov    QWORD PTR [rbp-0x18],rax
  40d717:	mov    rax,QWORD PTR [rbp-0x18]
  40d71b:	mov    rcx,QWORD PTR [rax]
  40d71e:	add    rcx,0x1
  40d725:	mov    QWORD PTR [rax],rcx
  40d728:	mov    rax,QWORD PTR [rip+0xbda9]        # 4194d8 <__bss_start@@Base+0x1380>
  40d72f:	add    rax,0x1
  40d735:	mov    QWORD PTR [rip+0xbd9c],rax        # 4194d8 <__bss_start@@Base+0x1380>
  40d73c:	mov    rax,QWORD PTR [rbp-0x10]
  40d740:	mov    QWORD PTR [rbp-0x8],rax
  40d744:	mov    rcx,QWORD PTR [rbp-0x8]
  40d748:	mov    rdi,rcx
  40d74b:	call   403040 <free@plt>
  40d750:	add    rsp,0x20
  40d754:	pop    rbp
  40d755:	ret    
  40d756:	nop    WORD PTR cs:[rax+rax*1+0x0]

000000000040d760 <free_token_cpar@@Base>:
  40d760:	push   rbp
  40d761:	mov    rbp,rsp
  40d764:	sub    rsp,0x20
  40d768:	lea    rax,[rip+0xbd71]        # 4194e0 <__bss_start@@Base+0x1388>
  40d76f:	mov    QWORD PTR [rbp-0x10],rdi
  40d773:	mov    QWORD PTR [rbp-0x18],rax
  40d777:	mov    rax,QWORD PTR [rbp-0x18]
  40d77b:	mov    rcx,QWORD PTR [rax]
  40d77e:	add    rcx,0x1
  40d785:	mov    QWORD PTR [rax],rcx
  40d788:	mov    rax,QWORD PTR [rip+0xbd59]        # 4194e8 <__bss_start@@Base+0x1390>
  40d78f:	add    rax,0x1
  40d795:	mov    QWORD PTR [rip+0xbd4c],rax        # 4194e8 <__bss_start@@Base+0x1390>
  40d79c:	mov    rax,QWORD PTR [rbp-0x10]
  40d7a0:	mov    QWORD PTR [rbp-0x8],rax
  40d7a4:	mov    rcx,QWORD PTR [rbp-0x8]
  40d7a8:	mov    rdi,rcx
  40d7ab:	call   403040 <free@plt>
  40d7b0:	add    rsp,0x20
  40d7b4:	pop    rbp
  40d7b5:	ret    
  40d7b6:	nop    WORD PTR cs:[rax+rax*1+0x0]

000000000040d7c0 <free_token_obra@@Base>:
  40d7c0:	push   rbp
  40d7c1:	mov    rbp,rsp
  40d7c4:	sub    rsp,0x20
  40d7c8:	lea    rax,[rip+0xbd21]        # 4194f0 <__bss_start@@Base+0x1398>
  40d7cf:	mov    QWORD PTR [rbp-0x10],rdi
  40d7d3:	mov    QWORD PTR [rbp-0x18],rax
  40d7d7:	mov    rax,QWORD PTR [rbp-0x18]
  40d7db:	mov    rcx,QWORD PTR [rax]
  40d7de:	add    rcx,0x1
  40d7e5:	mov    QWORD PTR [rax],rcx
  40d7e8:	mov    rax,QWORD PTR [rip+0xbd09]        # 4194f8 <__bss_start@@Base+0x13a0>
  40d7ef:	add    rax,0x1
  40d7f5:	mov    QWORD PTR [rip+0xbcfc],rax        # 4194f8 <__bss_start@@Base+0x13a0>
  40d7fc:	mov    rax,QWORD PTR [rbp-0x10]
  40d800:	mov    QWORD PTR [rbp-0x8],rax
  40d804:	mov    rcx,QWORD PTR [rbp-0x8]
  40d808:	mov    rdi,rcx
  40d80b:	call   403040 <free@plt>
  40d810:	add    rsp,0x20
  40d814:	pop    rbp
  40d815:	ret    
  40d816:	nop    WORD PTR cs:[rax+rax*1+0x0]

000000000040d820 <free_token_cbra@@Base>:
  40d820:	push   rbp
  40d821:	mov    rbp,rsp
  40d824:	sub    rsp,0x20
  40d828:	lea    rax,[rip+0xbcd1]        # 419500 <__bss_start@@Base+0x13a8>
  40d82f:	mov    QWORD PTR [rbp-0x10],rdi
  40d833:	mov    QWORD PTR [rbp-0x18],rax
  40d837:	mov    rax,QWORD PTR [rbp-0x18]
  40d83b:	mov    rcx,QWORD PTR [rax]
  40d83e:	add    rcx,0x1
  40d845:	mov    QWORD PTR [rax],rcx
  40d848:	mov    rax,QWORD PTR [rip+0xbcb9]        # 419508 <__bss_start@@Base+0x13b0>
  40d84f:	add    rax,0x1
  40d855:	mov    QWORD PTR [rip+0xbcac],rax        # 419508 <__bss_start@@Base+0x13b0>
  40d85c:	mov    rax,QWORD PTR [rbp-0x10]
  40d860:	mov    QWORD PTR [rbp-0x8],rax
  40d864:	mov    rcx,QWORD PTR [rbp-0x8]
  40d868:	mov    rdi,rcx
  40d86b:	call   403040 <free@plt>
  40d870:	add    rsp,0x20
  40d874:	pop    rbp
  40d875:	ret    
  40d876:	nop    WORD PTR cs:[rax+rax*1+0x0]

000000000040d880 <free_token_return@@Base>:
  40d880:	push   rbp
  40d881:	mov    rbp,rsp
  40d884:	sub    rsp,0x20
  40d888:	lea    rax,[rip+0xbc81]        # 419510 <__bss_start@@Base+0x13b8>
  40d88f:	mov    QWORD PTR [rbp-0x10],rdi
  40d893:	mov    QWORD PTR [rbp-0x18],rax
  40d897:	mov    rax,QWORD PTR [rbp-0x18]
  40d89b:	mov    rcx,QWORD PTR [rax]
  40d89e:	add    rcx,0x1
  40d8a5:	mov    QWORD PTR [rax],rcx
  40d8a8:	mov    rax,QWORD PTR [rip+0xbc69]        # 419518 <__bss_start@@Base+0x13c0>
  40d8af:	add    rax,0x1
  40d8b5:	mov    QWORD PTR [rip+0xbc5c],rax        # 419518 <__bss_start@@Base+0x13c0>
  40d8bc:	mov    rax,QWORD PTR [rbp-0x10]
  40d8c0:	mov    QWORD PTR [rbp-0x8],rax
  40d8c4:	mov    rcx,QWORD PTR [rbp-0x8]
  40d8c8:	mov    rdi,rcx
  40d8cb:	call   403040 <free@plt>
  40d8d0:	add    rsp,0x20
  40d8d4:	pop    rbp
  40d8d5:	ret    
  40d8d6:	nop    WORD PTR cs:[rax+rax*1+0x0]

000000000040d8e0 <free_token_semicolon@@Base>:
  40d8e0:	push   rbp
  40d8e1:	mov    rbp,rsp
  40d8e4:	sub    rsp,0x20
  40d8e8:	lea    rax,[rip+0xbc31]        # 419520 <__bss_start@@Base+0x13c8>
  40d8ef:	mov    QWORD PTR [rbp-0x10],rdi
  40d8f3:	mov    QWORD PTR [rbp-0x18],rax
  40d8f7:	mov    rax,QWORD PTR [rbp-0x18]
  40d8fb:	mov    rcx,QWORD PTR [rax]
  40d8fe:	add    rcx,0x1
  40d905:	mov    QWORD PTR [rax],rcx
  40d908:	mov    rax,QWORD PTR [rip+0xbc19]        # 419528 <__bss_start@@Base+0x13d0>
  40d90f:	add    rax,0x1
  40d915:	mov    QWORD PTR [rip+0xbc0c],rax        # 419528 <__bss_start@@Base+0x13d0>
  40d91c:	mov    rax,QWORD PTR [rbp-0x10]
  40d920:	mov    QWORD PTR [rbp-0x8],rax
  40d924:	mov    rcx,QWORD PTR [rbp-0x8]
  40d928:	mov    rdi,rcx
  40d92b:	call   403040 <free@plt>
  40d930:	add    rsp,0x20
  40d934:	pop    rbp
  40d935:	ret    
  40d936:	nop    WORD PTR cs:[rax+rax*1+0x0]

000000000040d940 <free_token_eof@@Base>:
  40d940:	push   rbp
  40d941:	mov    rbp,rsp
  40d944:	sub    rsp,0x20
  40d948:	lea    rax,[rip+0xbbe1]        # 419530 <__bss_start@@Base+0x13d8>
  40d94f:	mov    QWORD PTR [rbp-0x10],rdi
  40d953:	mov    QWORD PTR [rbp-0x18],rax
  40d957:	mov    rax,QWORD PTR [rbp-0x18]
  40d95b:	mov    rcx,QWORD PTR [rax]
  40d95e:	add    rcx,0x1
  40d965:	mov    QWORD PTR [rax],rcx
  40d968:	mov    rax,QWORD PTR [rip+0xbbc9]        # 419538 <__bss_start@@Base+0x13e0>
  40d96f:	add    rax,0x1
  40d975:	mov    QWORD PTR [rip+0xbbbc],rax        # 419538 <__bss_start@@Base+0x13e0>
  40d97c:	mov    rax,QWORD PTR [rbp-0x10]
  40d980:	mov    QWORD PTR [rbp-0x8],rax
  40d984:	mov    rcx,QWORD PTR [rbp-0x8]
  40d988:	mov    rdi,rcx
  40d98b:	call   403040 <free@plt>
  40d990:	add    rsp,0x20
  40d994:	pop    rbp
  40d995:	ret    
  40d996:	nop    WORD PTR cs:[rax+rax*1+0x0]

000000000040d9a0 <free_token_if@@Base>:
  40d9a0:	push   rbp
  40d9a1:	mov    rbp,rsp
  40d9a4:	sub    rsp,0x20
  40d9a8:	lea    rax,[rip+0xbb91]        # 419540 <__bss_start@@Base+0x13e8>
  40d9af:	mov    QWORD PTR [rbp-0x10],rdi
  40d9b3:	mov    QWORD PTR [rbp-0x18],rax
  40d9b7:	mov    rax,QWORD PTR [rbp-0x18]
  40d9bb:	mov    rcx,QWORD PTR [rax]
  40d9be:	add    rcx,0x1
  40d9c5:	mov    QWORD PTR [rax],rcx
  40d9c8:	mov    rax,QWORD PTR [rip+0xbb79]        # 419548 <__bss_start@@Base+0x13f0>
  40d9cf:	add    rax,0x1
  40d9d5:	mov    QWORD PTR [rip+0xbb6c],rax        # 419548 <__bss_start@@Base+0x13f0>
  40d9dc:	mov    rax,QWORD PTR [rbp-0x10]
  40d9e0:	mov    QWORD PTR [rbp-0x8],rax
  40d9e4:	mov    rcx,QWORD PTR [rbp-0x8]
  40d9e8:	mov    rdi,rcx
  40d9eb:	call   403040 <free@plt>
  40d9f0:	add    rsp,0x20
  40d9f4:	pop    rbp
  40d9f5:	ret    
  40d9f6:	nop    WORD PTR cs:[rax+rax*1+0x0]

000000000040da00 <free_token_else@@Base>:
  40da00:	push   rbp
  40da01:	mov    rbp,rsp
  40da04:	sub    rsp,0x20
  40da08:	lea    rax,[rip+0xbb41]        # 419550 <__bss_start@@Base+0x13f8>
  40da0f:	mov    QWORD PTR [rbp-0x10],rdi
  40da13:	mov    QWORD PTR [rbp-0x18],rax
  40da17:	mov    rax,QWORD PTR [rbp-0x18]
  40da1b:	mov    rcx,QWORD PTR [rax]
  40da1e:	add    rcx,0x1
  40da25:	mov    QWORD PTR [rax],rcx
  40da28:	mov    rax,QWORD PTR [rip+0xbb29]        # 419558 <__bss_start@@Base+0x1400>
  40da2f:	add    rax,0x1
  40da35:	mov    QWORD PTR [rip+0xbb1c],rax        # 419558 <__bss_start@@Base+0x1400>
  40da3c:	mov    rax,QWORD PTR [rbp-0x10]
  40da40:	mov    QWORD PTR [rbp-0x8],rax
  40da44:	mov    rcx,QWORD PTR [rbp-0x8]
  40da48:	mov    rdi,rcx
  40da4b:	call   403040 <free@plt>
  40da50:	add    rsp,0x20
  40da54:	pop    rbp
  40da55:	ret    
  40da56:	nop    WORD PTR cs:[rax+rax*1+0x0]

000000000040da60 <free_token_boolean_op@@Base>:
  40da60:	push   rbp
  40da61:	mov    rbp,rsp
  40da64:	sub    rsp,0x30
  40da68:	lea    rax,[rip+0xbaf1]        # 419560 <__bss_start@@Base+0x1408>
  40da6f:	mov    QWORD PTR [rbp-0x10],rdi
  40da73:	mov    QWORD PTR [rbp-0x18],rax
  40da77:	mov    rax,QWORD PTR [rbp-0x18]
  40da7b:	lea    rcx,[rip+0xbade]        # 419560 <__bss_start@@Base+0x1408>
  40da82:	mov    rdx,rcx
  40da85:	add    rdx,0x8
  40da8c:	add    rcx,0x10
  40da93:	mov    rsi,QWORD PTR [rax]
  40da96:	add    rsi,0x1
  40da9d:	mov    QWORD PTR [rax],rsi
  40daa0:	mov    rax,QWORD PTR [rbp-0x10]
  40daa4:	mov    QWORD PTR [rbp-0x8],rax
  40daa8:	mov    rsi,QWORD PTR [rbp-0x8]
  40daac:	cmp    QWORD PTR [rsi+0x8],0x0
  40dab1:	mov    QWORD PTR [rbp-0x20],rdx
  40dab5:	mov    QWORD PTR [rbp-0x28],rcx
  40dab9:	je     40daee <free_token_boolean_op@@Base+0x8e>
  40dabf:	mov    rax,QWORD PTR [rbp-0x20]
  40dac3:	mov    rcx,QWORD PTR [rax]
  40dac6:	add    rcx,0x1
  40dacd:	mov    QWORD PTR [rax],rcx
  40dad0:	mov    rax,QWORD PTR [rbp-0x8]
  40dad4:	mov    rdi,QWORD PTR [rax+0x8]
  40dad8:	call   403040 <free@plt>
  40dadd:	lea    rax,[rip+0xba7c]        # 419560 <__bss_start@@Base+0x1408>
  40dae4:	add    rax,0x18
  40daea:	mov    QWORD PTR [rbp-0x28],rax
  40daee:	mov    rax,QWORD PTR [rbp-0x28]
  40daf2:	mov    rcx,QWORD PTR [rax]
  40daf5:	add    rcx,0x1
  40dafc:	mov    QWORD PTR [rax],rcx
  40daff:	mov    rax,QWORD PTR [rip+0xba7a]        # 419580 <__bss_start@@Base+0x1428>
  40db06:	add    rax,0x1
  40db0c:	mov    QWORD PTR [rip+0xba6d],rax        # 419580 <__bss_start@@Base+0x1428>
  40db13:	mov    rax,QWORD PTR [rbp-0x8]
  40db17:	mov    rdi,rax
  40db1a:	call   403040 <free@plt>
  40db1f:	add    rsp,0x30
  40db23:	pop    rbp
  40db24:	ret    
  40db25:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40db2f:	nop
  40db30:	sub    rsp,0x38
  40db34:	xor    eax,eax
  40db36:	mov    DWORD PTR [rsp+0x34],eax
  40db3a:	jmp    40db3f <free_token_boolean_op@@Base+0xdf>
  40db3f:	mov    eax,DWORD PTR [rsp+0x34]
  40db43:	movsxd rcx,eax
  40db46:	imul   rcx,rcx,0x30
  40db4d:	lea    rdx,[rip+0xa0cc]        # 417c20 <UnitySizeMask@@Base+0x4620>
  40db54:	add    rdx,rcx
  40db57:	mov    rdi,QWORD PTR [rdx]
  40db5a:	mov    rsi,QWORD PTR [rdx+0x8]
  40db5e:	mov    r8d,DWORD PTR [rdx+0x10]
  40db62:	mov    QWORD PTR [rsp+0x28],rdx
  40db67:	mov    edx,r8d
  40db6a:	mov    DWORD PTR [rsp+0x24],eax
  40db6e:	call   410d80 <next@@Base+0x2a90>
  40db73:	xor    eax,eax
  40db75:	mov    rcx,QWORD PTR [rsp+0x28]
  40db7a:	mov    edx,DWORD PTR [rcx+0x18]
  40db7d:	mov    rsi,QWORD PTR [rcx+0x20]
  40db81:	mov    rdi,QWORD PTR [rcx+0x28]
  40db85:	cmp    eax,edx
  40db87:	mov    DWORD PTR [rsp+0x20],edx
  40db8b:	mov    QWORD PTR [rsp+0x18],rsi
  40db90:	mov    QWORD PTR [rsp+0x10],rdi
  40db95:	mov    DWORD PTR [rsp+0xc],eax
  40db99:	jge    40dc0d <free_token_boolean_op@@Base+0x1ad>
  40db9f:	mov    eax,DWORD PTR [rsp+0xc]
  40dba3:	movsxd rcx,eax
  40dba6:	shl    rcx,0x5
  40dbaa:	mov    rdx,QWORD PTR [rsp+0x18]
  40dbaf:	add    rdx,rcx
  40dbb2:	mov    edi,DWORD PTR [rdx]
  40dbb4:	mov    rsi,QWORD PTR [rdx+0x8]
  40dbb8:	mov    r8d,DWORD PTR [rdx+0x10]
  40dbbc:	mov    r9b,BYTE PTR [rdx+0x14]
  40dbc0:	mov    r10d,DWORD PTR [rdx+0x18]
  40dbc4:	mov    edx,r8d
  40dbc7:	movzx  ecx,r9b
  40dbcb:	mov    r8d,r10d
  40dbce:	mov    DWORD PTR [rsp+0x8],eax
  40dbd2:	call   4111d0 <next@@Base+0x2ee0>
  40dbd7:	mov    eax,DWORD PTR [rsp+0x8]
  40dbdb:	movsxd rsi,eax
  40dbde:	shl    rsi,0x4
  40dbe2:	mov    r11,QWORD PTR [rsp+0x10]
  40dbe7:	add    r11,rsi
  40dbea:	mov    edi,DWORD PTR [r11]
  40dbed:	mov    rsi,QWORD PTR [r11+0x8]
  40dbf1:	call   4115f0 <next@@Base+0x3300>
  40dbf6:	mov    eax,DWORD PTR [rsp+0x8]
  40dbfa:	add    eax,0x1
  40dbfd:	mov    ecx,DWORD PTR [rsp+0x20]
  40dc01:	cmp    eax,ecx
  40dc03:	mov    DWORD PTR [rsp+0xc],eax
  40dc07:	jl     40db9f <free_token_boolean_op@@Base+0x13f>
  40dc0d:	call   411a00 <next@@Base+0x3710>
  40dc12:	call   4121a0 <next@@Base+0x3eb0>
  40dc17:	mov    eax,DWORD PTR [rsp+0x24]
  40dc1b:	add    eax,0x1
  40dc1e:	cmp    eax,0x1
  40dc21:	mov    DWORD PTR [rsp+0x34],eax
  40dc25:	jl     40db3f <free_token_boolean_op@@Base+0xdf>
  40dc2b:	add    rsp,0x38
  40dc2f:	ret    
  40dc30:	push   rax
  40dc31:	call   40db30 <free_token_boolean_op@@Base+0xd0>
  40dc36:	mov    QWORD PTR [rip+0xb797],0x0        # 4193d8 <__bss_start@@Base+0x1280>
  40dc41:	mov    QWORD PTR [rip+0xb784],0x0        # 4193d0 <__bss_start@@Base+0x1278>
  40dc4c:	mov    QWORD PTR [rip+0xb791],0x0        # 4193e8 <__bss_start@@Base+0x1290>
  40dc57:	mov    QWORD PTR [rip+0xb77e],0x0        # 4193e0 <__bss_start@@Base+0x1288>
  40dc62:	mov    QWORD PTR [rip+0xb78b],0x0        # 4193f8 <__bss_start@@Base+0x12a0>
  40dc6d:	mov    QWORD PTR [rip+0xb778],0x0        # 4193f0 <__bss_start@@Base+0x1298>
  40dc78:	mov    QWORD PTR [rip+0xb785],0x0        # 419408 <__bss_start@@Base+0x12b0>
  40dc83:	mov    QWORD PTR [rip+0xb772],0x0        # 419400 <__bss_start@@Base+0x12a8>
  40dc8e:	mov    QWORD PTR [rip+0xb77f],0x0        # 419418 <__bss_start@@Base+0x12c0>
  40dc99:	mov    QWORD PTR [rip+0xb76c],0x0        # 419410 <__bss_start@@Base+0x12b8>
  40dca4:	mov    QWORD PTR [rip+0xb779],0x0        # 419428 <__bss_start@@Base+0x12d0>
  40dcaf:	mov    QWORD PTR [rip+0xb766],0x0        # 419420 <__bss_start@@Base+0x12c8>
  40dcba:	mov    QWORD PTR [rip+0xb773],0x0        # 419438 <__bss_start@@Base+0x12e0>
  40dcc5:	mov    QWORD PTR [rip+0xb760],0x0        # 419430 <__bss_start@@Base+0x12d8>
  40dcd0:	mov    QWORD PTR [rip+0xb76d],0x0        # 419448 <__bss_start@@Base+0x12f0>
  40dcdb:	mov    QWORD PTR [rip+0xb75a],0x0        # 419440 <__bss_start@@Base+0x12e8>
  40dce6:	mov    QWORD PTR [rip+0xb767],0x0        # 419458 <__bss_start@@Base+0x1300>
  40dcf1:	mov    QWORD PTR [rip+0xb754],0x0        # 419450 <__bss_start@@Base+0x12f8>
  40dcfc:	mov    QWORD PTR [rip+0xb761],0x0        # 419468 <__bss_start@@Base+0x1310>
  40dd07:	mov    QWORD PTR [rip+0xb74e],0x0        # 419460 <__bss_start@@Base+0x1308>
  40dd12:	mov    QWORD PTR [rip+0xb75b],0x0        # 419478 <__bss_start@@Base+0x1320>
  40dd1d:	mov    QWORD PTR [rip+0xb748],0x0        # 419470 <__bss_start@@Base+0x1318>
  40dd28:	mov    QWORD PTR [rip+0xb755],0x0        # 419488 <__bss_start@@Base+0x1330>
  40dd33:	mov    QWORD PTR [rip+0xb742],0x0        # 419480 <__bss_start@@Base+0x1328>
  40dd3e:	mov    QWORD PTR [rip+0xb74f],0x0        # 419498 <__bss_start@@Base+0x1340>
  40dd49:	mov    QWORD PTR [rip+0xb73c],0x0        # 419490 <__bss_start@@Base+0x1338>
  40dd54:	mov    QWORD PTR [rip+0xb749],0x0        # 4194a8 <__bss_start@@Base+0x1350>
  40dd5f:	mov    QWORD PTR [rip+0xb736],0x0        # 4194a0 <__bss_start@@Base+0x1348>
  40dd6a:	mov    QWORD PTR [rip+0xb743],0x0        # 4194b8 <__bss_start@@Base+0x1360>
  40dd75:	mov    QWORD PTR [rip+0xb730],0x0        # 4194b0 <__bss_start@@Base+0x1358>
  40dd80:	mov    QWORD PTR [rip+0xb73d],0x0        # 4194c8 <__bss_start@@Base+0x1370>
  40dd8b:	mov    QWORD PTR [rip+0xb72a],0x0        # 4194c0 <__bss_start@@Base+0x1368>
  40dd96:	mov    QWORD PTR [rip+0xb737],0x0        # 4194d8 <__bss_start@@Base+0x1380>
  40dda1:	mov    QWORD PTR [rip+0xb724],0x0        # 4194d0 <__bss_start@@Base+0x1378>
  40ddac:	mov    QWORD PTR [rip+0xb731],0x0        # 4194e8 <__bss_start@@Base+0x1390>
  40ddb7:	mov    QWORD PTR [rip+0xb71e],0x0        # 4194e0 <__bss_start@@Base+0x1388>
  40ddc2:	mov    QWORD PTR [rip+0xb72b],0x0        # 4194f8 <__bss_start@@Base+0x13a0>
  40ddcd:	mov    QWORD PTR [rip+0xb718],0x0        # 4194f0 <__bss_start@@Base+0x1398>
  40ddd8:	mov    QWORD PTR [rip+0xb725],0x0        # 419508 <__bss_start@@Base+0x13b0>
  40dde3:	mov    QWORD PTR [rip+0xb712],0x0        # 419500 <__bss_start@@Base+0x13a8>
  40ddee:	mov    QWORD PTR [rip+0xb71f],0x0        # 419518 <__bss_start@@Base+0x13c0>
  40ddf9:	mov    QWORD PTR [rip+0xb70c],0x0        # 419510 <__bss_start@@Base+0x13b8>
  40de04:	mov    QWORD PTR [rip+0xb719],0x0        # 419528 <__bss_start@@Base+0x13d0>
  40de0f:	mov    QWORD PTR [rip+0xb706],0x0        # 419520 <__bss_start@@Base+0x13c8>
  40de1a:	mov    QWORD PTR [rip+0xb713],0x0        # 419538 <__bss_start@@Base+0x13e0>
  40de25:	mov    QWORD PTR [rip+0xb700],0x0        # 419530 <__bss_start@@Base+0x13d8>
  40de30:	mov    QWORD PTR [rip+0xb70d],0x0        # 419548 <__bss_start@@Base+0x13f0>
  40de3b:	mov    QWORD PTR [rip+0xb6fa],0x0        # 419540 <__bss_start@@Base+0x13e8>
  40de46:	mov    QWORD PTR [rip+0xb707],0x0        # 419558 <__bss_start@@Base+0x1400>
  40de51:	mov    QWORD PTR [rip+0xb6f4],0x0        # 419550 <__bss_start@@Base+0x13f8>
  40de5c:	mov    QWORD PTR [rip+0xb719],0x0        # 419580 <__bss_start@@Base+0x1428>
  40de67:	mov    QWORD PTR [rip+0xb706],0x0        # 419578 <__bss_start@@Base+0x1420>
  40de72:	mov    QWORD PTR [rip+0xb6f3],0x0        # 419570 <__bss_start@@Base+0x1418>
  40de7d:	mov    QWORD PTR [rip+0xb6e0],0x0        # 419568 <__bss_start@@Base+0x1410>
  40de88:	mov    QWORD PTR [rip+0xb6cd],0x0        # 419560 <__bss_start@@Base+0x1408>
  40de93:	pop    rax
  40de94:	ret    
  40de95:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40de9f:	nop
  40dea0:	push   rax
  40dea1:	lea    rdi,[rip+0xfffffffffffffc88]        # 40db30 <free_token_boolean_op@@Base+0xd0>
  40dea8:	lea    rsi,[rip+0xfffffffffffffd81]        # 40dc30 <free_token_boolean_op@@Base+0x1d0>
  40deaf:	call   412580 <__gcov_flush@@Base+0xb0>
  40deb4:	pop    rax
  40deb5:	ret    
  40deb6:	nop    WORD PTR cs:[rax+rax*1+0x0]

000000000040dec0 <init_lexer@@Base>:
  40dec0:	push   rbp
  40dec1:	mov    rbp,rsp
  40dec4:	lea    rax,[rip+0xb6c5]        # 419590 <__bss_start@@Base+0x1438>
  40decb:	mov    QWORD PTR [rbp-0x18],rdi
  40decf:	mov    QWORD PTR [rbp-0x20],rsi
  40ded3:	mov    QWORD PTR [rbp-0x28],rax
  40ded7:	mov    rax,QWORD PTR [rbp-0x28]
  40dedb:	mov    rcx,QWORD PTR [rax]
  40dede:	add    rcx,0x1
  40dee5:	mov    QWORD PTR [rax],rcx
  40dee8:	mov    rax,QWORD PTR [rip+0xb6a9]        # 419598 <__bss_start@@Base+0x1440>
  40deef:	add    rax,0x1
  40def5:	mov    QWORD PTR [rip+0xb69c],rax        # 419598 <__bss_start@@Base+0x1440>
  40defc:	mov    rax,QWORD PTR [rbp-0x18]
  40df00:	mov    QWORD PTR [rbp-0x8],rax
  40df04:	mov    rcx,QWORD PTR [rbp-0x20]
  40df08:	mov    QWORD PTR [rbp-0x10],rcx
  40df0c:	mov    rdx,QWORD PTR [rbp-0x10]
  40df10:	mov    rsi,QWORD PTR [rbp-0x8]
  40df14:	mov    QWORD PTR [rsi],rdx
  40df17:	mov    rdx,QWORD PTR [rbp-0x8]
  40df1b:	mov    QWORD PTR [rdx+0x8],0x0
  40df23:	mov    rdx,QWORD PTR [rbp-0x8]
  40df27:	mov    QWORD PTR [rdx+0x10],0x0
  40df2f:	pop    rbp
  40df30:	ret    
  40df31:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40df3b:	nop    DWORD PTR [rax+rax*1+0x0]

000000000040df40 <destroy_lexer@@Base>:
  40df40:	push   rbp
  40df41:	mov    rbp,rsp
  40df44:	sub    rsp,0x40
  40df48:	lea    rax,[rip+0xb651]        # 4195a0 <__bss_start@@Base+0x1448>
  40df4f:	mov    QWORD PTR [rbp-0x20],rdi
  40df53:	mov    QWORD PTR [rbp-0x28],rax
  40df57:	mov    rax,QWORD PTR [rbp-0x28]
  40df5b:	lea    rcx,[rip+0xb63e]        # 4195a0 <__bss_start@@Base+0x1448>
  40df62:	mov    rdx,rcx
  40df65:	add    rdx,0x8
  40df6c:	add    rcx,0x10
  40df73:	mov    rsi,QWORD PTR [rax]
  40df76:	add    rsi,0x1
  40df7d:	mov    QWORD PTR [rax],rsi
  40df80:	mov    rax,QWORD PTR [rbp-0x20]
  40df84:	mov    QWORD PTR [rbp-0x8],rax
  40df88:	mov    QWORD PTR [rbp-0x10],0x0
  40df90:	mov    rsi,QWORD PTR [rbp-0x8]
  40df94:	mov    rsi,QWORD PTR [rsi+0x8]
  40df98:	mov    QWORD PTR [rbp-0x18],rsi
  40df9c:	cmp    QWORD PTR [rbp-0x18],0x0
  40dfa1:	mov    QWORD PTR [rbp-0x30],rdx
  40dfa5:	mov    QWORD PTR [rbp-0x38],rcx
  40dfa9:	je     40dfed <destroy_lexer@@Base+0xad>
  40dfaf:	mov    rax,QWORD PTR [rbp-0x30]
  40dfb3:	mov    rcx,QWORD PTR [rax]
  40dfb6:	add    rcx,0x1
  40dfbd:	mov    QWORD PTR [rax],rcx
  40dfc0:	mov    rax,QWORD PTR [rbp-0x18]
  40dfc4:	mov    QWORD PTR [rbp-0x10],rax
  40dfc8:	mov    rax,QWORD PTR [rbp-0x18]
  40dfcc:	mov    rax,QWORD PTR [rax]
  40dfcf:	mov    QWORD PTR [rbp-0x18],rax
  40dfd3:	mov    rdi,QWORD PTR [rbp-0x10]
  40dfd7:	call   40e020 <free_stack_base@@Base>
  40dfdc:	lea    rax,[rip+0xb5bd]        # 4195a0 <__bss_start@@Base+0x1448>
  40dfe3:	add    rax,0x18
  40dfe9:	mov    QWORD PTR [rbp-0x38],rax
  40dfed:	mov    rax,QWORD PTR [rbp-0x38]
  40dff1:	mov    rcx,QWORD PTR [rax]
  40dff4:	add    rcx,0x1
  40dffb:	mov    QWORD PTR [rax],rcx
  40dffe:	mov    rax,QWORD PTR [rip+0xb5bb]        # 4195c0 <__bss_start@@Base+0x1468>
  40e005:	add    rax,0x1
  40e00b:	mov    QWORD PTR [rip+0xb5ae],rax        # 4195c0 <__bss_start@@Base+0x1468>
  40e012:	add    rsp,0x40
  40e016:	pop    rbp
  40e017:	ret    
  40e018:	nop    DWORD PTR [rax+rax*1+0x0]

000000000040e020 <free_stack_base@@Base>:
  40e020:	push   rbp
  40e021:	mov    rbp,rsp
  40e024:	sub    rsp,0x20
  40e028:	lea    rax,[rip+0xb599]        # 4195c8 <__bss_start@@Base+0x1470>
  40e02f:	mov    QWORD PTR [rbp-0x10],rdi
  40e033:	mov    QWORD PTR [rbp-0x18],rax
  40e037:	mov    rax,QWORD PTR [rbp-0x18]
  40e03b:	mov    rcx,QWORD PTR [rax]
  40e03e:	add    rcx,0x1
  40e045:	mov    QWORD PTR [rax],rcx
  40e048:	mov    rax,QWORD PTR [rip+0xb581]        # 4195d0 <__bss_start@@Base+0x1478>
  40e04f:	add    rax,0x1
  40e055:	mov    QWORD PTR [rip+0xb574],rax        # 4195d0 <__bss_start@@Base+0x1478>
  40e05c:	mov    rax,QWORD PTR [rbp-0x10]
  40e060:	mov    QWORD PTR [rbp-0x8],rax
  40e064:	mov    rcx,QWORD PTR [rbp-0x8]
  40e068:	mov    rdi,rcx
  40e06b:	call   403040 <free@plt>
  40e070:	add    rsp,0x20
  40e074:	pop    rbp
  40e075:	ret    
  40e076:	nop    WORD PTR cs:[rax+rax*1+0x0]

000000000040e080 <push_back@@Base>:
  40e080:	push   rbp
  40e081:	mov    rbp,rsp
  40e084:	sub    rsp,0x30
  40e088:	lea    rax,[rip+0xb549]        # 4195d8 <__bss_start@@Base+0x1480>
  40e08f:	mov    QWORD PTR [rbp-0x20],rdi
  40e093:	mov    QWORD PTR [rbp-0x28],rsi
  40e097:	mov    QWORD PTR [rbp-0x30],rax
  40e09b:	mov    rax,QWORD PTR [rbp-0x30]
  40e09f:	mov    rcx,QWORD PTR [rax]
  40e0a2:	add    rcx,0x1
  40e0a9:	mov    QWORD PTR [rax],rcx
  40e0ac:	mov    rax,QWORD PTR [rip+0xb52d]        # 4195e0 <__bss_start@@Base+0x1488>
  40e0b3:	add    rax,0x1
  40e0b9:	mov    QWORD PTR [rip+0xb520],rax        # 4195e0 <__bss_start@@Base+0x1488>
  40e0c0:	mov    rax,QWORD PTR [rbp-0x20]
  40e0c4:	mov    QWORD PTR [rbp-0x8],rax
  40e0c8:	mov    rcx,QWORD PTR [rbp-0x28]
  40e0cc:	mov    QWORD PTR [rbp-0x10],rcx
  40e0d0:	mov    edi,0x10
  40e0d5:	call   4031a0 <malloc@plt>
  40e0da:	mov    QWORD PTR [rbp-0x18],rax
  40e0de:	mov    rax,QWORD PTR [rbp-0x10]
  40e0e2:	mov    rcx,QWORD PTR [rbp-0x18]
  40e0e6:	mov    QWORD PTR [rcx+0x8],rax
  40e0ea:	mov    rax,QWORD PTR [rbp-0x8]
  40e0ee:	mov    rax,QWORD PTR [rax+0x8]
  40e0f2:	mov    rcx,QWORD PTR [rbp-0x18]
  40e0f6:	mov    QWORD PTR [rcx],rax
  40e0f9:	mov    rax,QWORD PTR [rbp-0x18]
  40e0fd:	mov    rcx,QWORD PTR [rbp-0x8]
  40e101:	mov    QWORD PTR [rcx+0x8],rax
  40e105:	add    rsp,0x30
  40e109:	pop    rbp
  40e10a:	ret    
  40e10b:	nop    DWORD PTR [rax+rax*1+0x0]

000000000040e110 <get_char@@Base>:
  40e110:	push   rbp
  40e111:	mov    rbp,rsp
  40e114:	lea    rax,[rip+0xb4cd]        # 4195e8 <__bss_start@@Base+0x1490>
  40e11b:	mov    QWORD PTR [rbp-0x10],rdi
  40e11f:	mov    QWORD PTR [rbp-0x18],rax
  40e123:	mov    rax,QWORD PTR [rbp-0x18]
  40e127:	mov    rcx,QWORD PTR [rax]
  40e12a:	add    rcx,0x1
  40e131:	mov    QWORD PTR [rax],rcx
  40e134:	mov    rax,QWORD PTR [rip+0xb4b5]        # 4195f0 <__bss_start@@Base+0x1498>
  40e13b:	add    rax,0x1
  40e141:	mov    QWORD PTR [rip+0xb4a8],rax        # 4195f0 <__bss_start@@Base+0x1498>
  40e148:	mov    rax,QWORD PTR [rbp-0x10]
  40e14c:	mov    QWORD PTR [rbp-0x8],rax
  40e150:	mov    rcx,QWORD PTR [rbp-0x8]
  40e154:	mov    rcx,QWORD PTR [rcx]
  40e157:	mov    rdx,QWORD PTR [rbp-0x8]
  40e15b:	mov    rsi,QWORD PTR [rdx+0x10]
  40e15f:	mov    rdi,rsi
  40e162:	add    rdi,0x1
  40e169:	mov    QWORD PTR [rdx+0x10],rdi
  40e16d:	movsx  r8d,BYTE PTR [rcx+rsi*1]
  40e172:	mov    eax,r8d
  40e175:	pop    rbp
  40e176:	ret    
  40e177:	nop    WORD PTR [rax+rax*1+0x0]

000000000040e180 <push_back_chars@@Base>:
  40e180:	push   rbp
  40e181:	mov    rbp,rsp
  40e184:	sub    rsp,0x50
  40e188:	lea    rax,[rip+0xb471]        # 419600 <__bss_start@@Base+0x14a8>
  40e18f:	mov    QWORD PTR [rbp-0x18],rdi
  40e193:	mov    QWORD PTR [rbp-0x20],rsi
  40e197:	mov    QWORD PTR [rbp-0x28],rax
  40e19b:	mov    rax,QWORD PTR [rbp-0x28]
  40e19f:	lea    rcx,[rip+0xb45a]        # 419600 <__bss_start@@Base+0x14a8>
  40e1a6:	mov    rdx,rcx
  40e1a9:	add    rdx,0x8
  40e1b0:	add    rcx,0x10
  40e1b7:	mov    rsi,QWORD PTR [rax]
  40e1ba:	add    rsi,0x1
  40e1c1:	mov    QWORD PTR [rax],rsi
  40e1c4:	mov    rax,QWORD PTR [rbp-0x18]
  40e1c8:	mov    QWORD PTR [rbp-0x8],rax
  40e1cc:	mov    rsi,QWORD PTR [rbp-0x20]
  40e1d0:	mov    QWORD PTR [rbp-0x10],rsi
  40e1d4:	mov    rdi,QWORD PTR [rbp-0x8]
  40e1d8:	mov    rdi,QWORD PTR [rdi+0x10]
  40e1dc:	cmp    rdi,QWORD PTR [rbp-0x10]
  40e1e0:	mov    QWORD PTR [rbp-0x30],rdx
  40e1e4:	mov    QWORD PTR [rbp-0x38],rcx
  40e1e8:	jb     40e229 <push_back_chars@@Base+0xa9>
  40e1ee:	mov    rax,QWORD PTR [rbp-0x30]
  40e1f2:	lea    rcx,[rip+0xb407]        # 419600 <__bss_start@@Base+0x14a8>
  40e1f9:	add    rcx,0x18
  40e200:	mov    rdx,QWORD PTR [rax]
  40e203:	add    rdx,0x1
  40e20a:	mov    QWORD PTR [rax],rdx
  40e20d:	mov    rax,QWORD PTR [rbp-0x10]
  40e211:	mov    rdx,QWORD PTR [rbp-0x8]
  40e215:	mov    rsi,QWORD PTR [rdx+0x10]
  40e219:	sub    rsi,rax
  40e21c:	mov    QWORD PTR [rdx+0x10],rsi
  40e220:	mov    QWORD PTR [rbp-0x40],rcx
  40e224:	jmp    40e25f <push_back_chars@@Base+0xdf>
  40e229:	mov    rax,QWORD PTR [rbp-0x38]
  40e22d:	mov    rcx,QWORD PTR [rip+0x9dbc]        # 417ff0 <stderr@GLIBC_2.2.5>
  40e234:	mov    rdx,QWORD PTR [rax]
  40e237:	add    rdx,0x1
  40e23e:	mov    QWORD PTR [rax],rdx
  40e241:	mov    rdi,QWORD PTR [rcx]
  40e244:	lea    rsi,[rip+0x5971]        # 413bbc <UnitySizeMask@@Base+0x5bc>
  40e24b:	mov    al,0x0
  40e24d:	call   403140 <fprintf@plt>
  40e252:	mov    edi,0x1
  40e257:	mov    DWORD PTR [rbp-0x44],eax
  40e25a:	call   403240 <exit@plt>
  40e25f:	mov    rax,QWORD PTR [rbp-0x40]
  40e263:	mov    rcx,QWORD PTR [rax]
  40e266:	add    rcx,0x1
  40e26d:	mov    QWORD PTR [rax],rcx
  40e270:	mov    rax,QWORD PTR [rip+0xb3a9]        # 419620 <__bss_start@@Base+0x14c8>
  40e277:	add    rax,0x1
  40e27d:	mov    QWORD PTR [rip+0xb39c],rax        # 419620 <__bss_start@@Base+0x14c8>
  40e284:	add    rsp,0x50
  40e288:	pop    rbp
  40e289:	ret    
  40e28a:	nop    WORD PTR [rax+rax*1+0x0]

000000000040e290 <push_back_one_char@@Base>:
  40e290:	push   rbp
  40e291:	mov    rbp,rsp
  40e294:	sub    rsp,0x20
  40e298:	lea    rax,[rip+0xb389]        # 419628 <__bss_start@@Base+0x14d0>
  40e29f:	mov    QWORD PTR [rbp-0x10],rdi
  40e2a3:	mov    QWORD PTR [rbp-0x18],rax
  40e2a7:	mov    rax,QWORD PTR [rbp-0x18]
  40e2ab:	mov    rcx,QWORD PTR [rax]
  40e2ae:	add    rcx,0x1
  40e2b5:	mov    QWORD PTR [rax],rcx
  40e2b8:	mov    rax,QWORD PTR [rip+0xb371]        # 419630 <__bss_start@@Base+0x14d8>
  40e2bf:	add    rax,0x1
  40e2c5:	mov    QWORD PTR [rip+0xb364],rax        # 419630 <__bss_start@@Base+0x14d8>
  40e2cc:	mov    rax,QWORD PTR [rbp-0x10]
  40e2d0:	mov    QWORD PTR [rbp-0x8],rax
  40e2d4:	mov    rdi,QWORD PTR [rbp-0x8]
  40e2d8:	mov    esi,0x1
  40e2dd:	call   40e180 <push_back_chars@@Base>
  40e2e2:	add    rsp,0x20
  40e2e6:	pop    rbp
  40e2e7:	ret    
  40e2e8:	nop    DWORD PTR [rax+rax*1+0x0]

000000000040e2f0 <next@@Base>:
  40e2f0:	push   rbp
  40e2f1:	mov    rbp,rsp
  40e2f4:	sub    rsp,0x620
  40e2fb:	lea    rax,[rip+0xb33e]        # 419640 <__bss_start@@Base+0x14e8>
  40e302:	mov    QWORD PTR [rbp-0x250],rdi
  40e309:	mov    QWORD PTR [rbp-0x258],rax
  40e310:	mov    rax,QWORD PTR [rbp-0x258]
  40e317:	lea    rcx,[rip+0xb322]        # 419640 <__bss_start@@Base+0x14e8>
  40e31e:	mov    rdx,rcx
  40e321:	add    rdx,0x8
  40e328:	add    rcx,0x10
  40e32f:	mov    rsi,QWORD PTR [rax]
  40e332:	add    rsi,0x1
  40e339:	mov    QWORD PTR [rax],rsi
  40e33c:	mov    rax,QWORD PTR [rbp-0x250]
  40e343:	mov    QWORD PTR [rbp-0x10],rax
  40e347:	mov    QWORD PTR [rbp-0x218],0x0
  40e352:	mov    DWORD PTR [rbp-0x21c],0x0
  40e35c:	mov    QWORD PTR [rbp-0x228],0x0
  40e367:	mov    QWORD PTR [rbp-0x238],0x0
  40e372:	mov    QWORD PTR [rbp-0x240],0x0
  40e37d:	mov    rsi,QWORD PTR [rbp-0x10]
  40e381:	cmp    QWORD PTR [rsi+0x8],0x0
  40e386:	mov    QWORD PTR [rbp-0x260],rdx
  40e38d:	mov    QWORD PTR [rbp-0x268],rcx
  40e394:	je     40e421 <next@@Base+0x131>
  40e39a:	mov    rax,QWORD PTR [rbp-0x260]
  40e3a1:	mov    rcx,QWORD PTR [rax]
  40e3a4:	add    rcx,0x1
  40e3ab:	mov    QWORD PTR [rax],rcx
  40e3ae:	mov    rax,QWORD PTR [rbp-0x10]
  40e3b2:	mov    rax,QWORD PTR [rax+0x8]
  40e3b6:	mov    QWORD PTR [rbp-0x248],rax
  40e3bd:	mov    rax,QWORD PTR [rbp-0x10]
  40e3c1:	mov    rax,QWORD PTR [rax+0x8]
  40e3c5:	mov    rax,QWORD PTR [rax]
  40e3c8:	mov    rcx,QWORD PTR [rbp-0x10]
  40e3cc:	mov    QWORD PTR [rcx+0x8],rax
  40e3d0:	mov    rax,QWORD PTR [rbp-0x248]
  40e3d7:	mov    rax,QWORD PTR [rax+0x8]
  40e3db:	mov    QWORD PTR [rbp-0x238],rax
  40e3e2:	mov    rax,QWORD PTR [rbp-0x248]
  40e3e9:	mov    QWORD PTR [rax+0x8],0x0
  40e3f1:	mov    rdi,QWORD PTR [rbp-0x248]
  40e3f8:	call   40e020 <free_stack_base@@Base>
  40e3fd:	lea    rax,[rip+0xb23c]        # 419640 <__bss_start@@Base+0x14e8>
  40e404:	add    rax,0x18
  40e40a:	mov    rcx,QWORD PTR [rbp-0x238]
  40e411:	mov    QWORD PTR [rbp-0x8],rcx
  40e415:	mov    QWORD PTR [rbp-0x270],rax
  40e41c:	jmp    41052a <next@@Base+0x223a>
  40e421:	mov    rax,QWORD PTR [rbp-0x268]
  40e428:	mov    rcx,QWORD PTR [rax]
  40e42b:	add    rcx,0x1
  40e432:	mov    QWORD PTR [rax],rcx
  40e435:	mov    rdi,QWORD PTR [rbp-0x10]
  40e439:	call   40e110 <get_char@@Base>
  40e43e:	lea    rcx,[rip+0xb1fb]        # 419640 <__bss_start@@Base+0x14e8>
  40e445:	add    rcx,0x20
  40e44c:	mov    BYTE PTR [rbp-0x229],al
  40e452:	mov    QWORD PTR [rbp-0x278],rcx
  40e459:	mov    rax,QWORD PTR [rbp-0x278]
  40e460:	lea    rcx,[rip+0xb1d9]        # 419640 <__bss_start@@Base+0x14e8>
  40e467:	mov    rdx,rcx
  40e46a:	add    rdx,0x28
  40e471:	add    rcx,0x30
  40e478:	mov    rsi,QWORD PTR [rax]
  40e47b:	add    rsi,0x1
  40e482:	mov    QWORD PTR [rax],rsi
  40e485:	movsx  edi,BYTE PTR [rbp-0x229]
  40e48c:	cmp    edi,0x0
  40e48f:	mov    QWORD PTR [rbp-0x280],rdx
  40e496:	mov    QWORD PTR [rbp-0x288],rcx
  40e49d:	je     4104d7 <next@@Base+0x21e7>
  40e4a3:	mov    rax,QWORD PTR [rbp-0x280]
  40e4aa:	mov    rcx,QWORD PTR [rax]
  40e4ad:	inc    rcx
  40e4b0:	mov    QWORD PTR [rax],rcx
  40e4b3:	lea    rax,[rip+0xb1ee]        # 4196a8 <__bss_start@@Base+0x1550>
  40e4ba:	lea    rcx,[rip+0xb1df]        # 4196a0 <__bss_start@@Base+0x1548>
  40e4c1:	lea    rdx,[rip+0xb1d0]        # 419698 <__bss_start@@Base+0x1540>
  40e4c8:	lea    rsi,[rip+0xb1c1]        # 419690 <__bss_start@@Base+0x1538>
  40e4cf:	lea    rdi,[rip+0xb1b2]        # 419688 <__bss_start@@Base+0x1530>
  40e4d6:	lea    r8,[rip+0xb1a3]        # 419680 <__bss_start@@Base+0x1528>
  40e4dd:	lea    r9,[rip+0xb194]        # 419678 <__bss_start@@Base+0x1520>
  40e4e4:	mov    r10,QWORD PTR [rbp-0x228]
  40e4eb:	mov    r11,r10
  40e4ee:	sub    r11,0x5
  40e4f2:	mov    QWORD PTR [rbp-0x290],rax
  40e4f9:	mov    QWORD PTR [rbp-0x298],rcx
  40e500:	mov    QWORD PTR [rbp-0x2a0],rdx
  40e507:	mov    QWORD PTR [rbp-0x2a8],rsi
  40e50e:	mov    QWORD PTR [rbp-0x2b0],rdi
  40e515:	mov    QWORD PTR [rbp-0x2b8],r8
  40e51c:	mov    QWORD PTR [rbp-0x2c0],r10
  40e523:	mov    QWORD PTR [rbp-0x2c8],r9
  40e52a:	ja     4104a9 <next@@Base+0x21b9>
  40e530:	lea    rax,[rip+0x566d]        # 413ba4 <UnitySizeMask@@Base+0x5a4>
  40e537:	mov    rcx,QWORD PTR [rbp-0x2c0]
  40e53e:	movsxd rdx,DWORD PTR [rax+rcx*4]
  40e542:	add    rdx,rax
  40e545:	mov    rax,QWORD PTR [rbp-0x2b8]
  40e54c:	mov    rsi,QWORD PTR [rbp-0x2b0]
  40e553:	mov    rdi,QWORD PTR [rbp-0x2a8]
  40e55a:	mov    r8,QWORD PTR [rbp-0x2a0]
  40e561:	mov    r9,QWORD PTR [rbp-0x298]
  40e568:	mov    r10,QWORD PTR [rbp-0x290]
  40e56f:	mov    QWORD PTR [rbp-0x2d0],rax
  40e576:	mov    QWORD PTR [rbp-0x2d8],rsi
  40e57d:	mov    QWORD PTR [rbp-0x2e0],rdi
  40e584:	mov    QWORD PTR [rbp-0x2e8],r8
  40e58b:	mov    QWORD PTR [rbp-0x2f0],r9
  40e592:	mov    QWORD PTR [rbp-0x2f8],r10
  40e599:	jmp    rdx
  40e59b:	mov    rax,QWORD PTR [rbp-0x2d0]
  40e5a2:	lea    rcx,[rip+0xb097]        # 419640 <__bss_start@@Base+0x14e8>
  40e5a9:	mov    rdx,rcx
  40e5ac:	add    rdx,0x70
  40e5b3:	add    rcx,0x78
  40e5ba:	mov    rsi,QWORD PTR [rax]
  40e5bd:	add    rsi,0x1
  40e5c4:	mov    QWORD PTR [rax],rsi
  40e5c7:	movsx  edi,BYTE PTR [rbp-0x229]
  40e5ce:	cmp    edi,0x9
  40e5d1:	mov    QWORD PTR [rbp-0x300],rcx
  40e5d8:	mov    QWORD PTR [rbp-0x308],rdx
  40e5df:	je     40e679 <next@@Base+0x389>
  40e5e5:	mov    rax,QWORD PTR [rbp-0x300]
  40e5ec:	lea    rcx,[rip+0xb04d]        # 419640 <__bss_start@@Base+0x14e8>
  40e5f3:	mov    rdx,rcx
  40e5f6:	add    rdx,0x80
  40e5fd:	add    rcx,0x88
  40e604:	mov    rsi,QWORD PTR [rax]
  40e607:	add    rsi,0x1
  40e60e:	mov    QWORD PTR [rax],rsi
  40e611:	movsx  edi,BYTE PTR [rbp-0x229]
  40e618:	cmp    edi,0x20
  40e61b:	mov    QWORD PTR [rbp-0x310],rcx
  40e622:	mov    QWORD PTR [rbp-0x308],rdx
  40e629:	je     40e679 <next@@Base+0x389>
  40e62f:	mov    rax,QWORD PTR [rbp-0x310]
  40e636:	lea    rcx,[rip+0xb003]        # 419640 <__bss_start@@Base+0x14e8>
  40e63d:	mov    rdx,rcx
  40e640:	add    rdx,0x90
  40e647:	add    rcx,0x98
  40e64e:	mov    rsi,QWORD PTR [rax]
  40e651:	add    rsi,0x1
  40e658:	mov    QWORD PTR [rax],rsi
  40e65b:	movsx  edi,BYTE PTR [rbp-0x229]
  40e662:	cmp    edi,0xa
  40e665:	mov    QWORD PTR [rbp-0x308],rdx
  40e66c:	mov    QWORD PTR [rbp-0x318],rcx
  40e673:	jne    40e6b6 <next@@Base+0x3c6>
  40e679:	mov    rax,QWORD PTR [rbp-0x308]
  40e680:	mov    rcx,QWORD PTR [rax]
  40e683:	add    rcx,0x1
  40e68a:	mov    QWORD PTR [rax],rcx
  40e68d:	mov    rdi,QWORD PTR [rbp-0x10]
  40e691:	call   40e110 <get_char@@Base>
  40e696:	lea    rcx,[rip+0xafa3]        # 419640 <__bss_start@@Base+0x14e8>
  40e69d:	add    rcx,0xa0
  40e6a4:	mov    BYTE PTR [rbp-0x229],al
  40e6aa:	mov    QWORD PTR [rbp-0x320],rcx
  40e6b1:	jmp    40f8e3 <next@@Base+0x15f3>
  40e6b6:	mov    rax,QWORD PTR [rbp-0x318]
  40e6bd:	lea    rcx,[rip+0xaf7c]        # 419640 <__bss_start@@Base+0x14e8>
  40e6c4:	mov    rdx,rcx
  40e6c7:	add    rdx,0xa8
  40e6ce:	add    rcx,0xb0
  40e6d5:	mov    rsi,QWORD PTR [rax]
  40e6d8:	add    rsi,0x1
  40e6df:	mov    QWORD PTR [rax],rsi
  40e6e2:	movsx  edi,BYTE PTR [rbp-0x229]
  40e6e9:	cmp    edi,0x30
  40e6ec:	mov    QWORD PTR [rbp-0x328],rdx
  40e6f3:	mov    QWORD PTR [rbp-0x330],rcx
  40e6fa:	jne    40e75a <next@@Base+0x46a>
  40e700:	mov    rax,QWORD PTR [rbp-0x328]
  40e707:	mov    rcx,QWORD PTR [rax]
  40e70a:	add    rcx,0x1
  40e711:	mov    QWORD PTR [rax],rcx
  40e714:	mov    edi,0x8
  40e719:	call   4031a0 <malloc@plt>
  40e71e:	xor    esi,esi
  40e720:	mov    QWORD PTR [rbp-0x238],rax
  40e727:	mov    rax,QWORD PTR [rbp-0x238]
  40e72e:	mov    rdi,rax
  40e731:	call   40d1d0 <init_token_int_value@@Base>
  40e736:	lea    rax,[rip+0xaf03]        # 419640 <__bss_start@@Base+0x14e8>
  40e73d:	add    rax,0xb8
  40e743:	mov    rcx,QWORD PTR [rbp-0x238]
  40e74a:	mov    QWORD PTR [rbp-0x8],rcx
  40e74e:	mov    QWORD PTR [rbp-0x270],rax
  40e755:	jmp    41052a <next@@Base+0x223a>
  40e75a:	mov    rax,QWORD PTR [rbp-0x330]
  40e761:	lea    rcx,[rip+0xaed8]        # 419640 <__bss_start@@Base+0x14e8>
  40e768:	mov    rdx,rcx
  40e76b:	add    rdx,0xc0
  40e772:	add    rcx,0xc8
  40e779:	mov    rsi,QWORD PTR [rax]
  40e77c:	add    rsi,0x1
  40e783:	mov    QWORD PTR [rax],rsi
  40e786:	movsx  edi,BYTE PTR [rbp-0x229]
  40e78d:	cmp    edi,0x31
  40e790:	mov    QWORD PTR [rbp-0x338],rdx
  40e797:	mov    QWORD PTR [rbp-0x340],rcx
  40e79e:	jl     40e857 <next@@Base+0x567>
  40e7a4:	mov    rax,QWORD PTR [rbp-0x338]
  40e7ab:	lea    rcx,[rip+0xae8e]        # 419640 <__bss_start@@Base+0x14e8>
  40e7b2:	mov    rdx,rcx
  40e7b5:	add    rdx,0xd0
  40e7bc:	add    rcx,0xd8
  40e7c3:	mov    rsi,QWORD PTR [rax]
  40e7c6:	add    rsi,0x1
  40e7cd:	mov    QWORD PTR [rax],rsi
  40e7d0:	movsx  edi,BYTE PTR [rbp-0x229]
  40e7d7:	cmp    edi,0x39
  40e7da:	mov    QWORD PTR [rbp-0x348],rdx
  40e7e1:	mov    QWORD PTR [rbp-0x340],rcx
  40e7e8:	jg     40e857 <next@@Base+0x567>
  40e7ee:	mov    rax,QWORD PTR [rbp-0x348]
  40e7f5:	mov    rcx,QWORD PTR [rax]
  40e7f8:	add    rcx,0x1
  40e7ff:	mov    QWORD PTR [rax],rcx
  40e802:	mov    dl,BYTE PTR [rbp-0x229]
  40e808:	mov    esi,DWORD PTR [rbp-0x21c]
  40e80e:	mov    edi,esi
  40e810:	add    edi,0x1
  40e813:	mov    DWORD PTR [rbp-0x21c],edi
  40e819:	movsxd rax,esi
  40e81c:	mov    BYTE PTR [rbp+rax*1-0x210],dl
  40e823:	mov    rdi,QWORD PTR [rbp-0x10]
  40e827:	call   40e110 <get_char@@Base>
  40e82c:	lea    rcx,[rip+0xae0d]        # 419640 <__bss_start@@Base+0x14e8>
  40e833:	add    rcx,0xe0
  40e83a:	mov    BYTE PTR [rbp-0x229],al
  40e840:	mov    QWORD PTR [rbp-0x228],0x1
  40e84b:	mov    QWORD PTR [rbp-0x350],rcx
  40e852:	jmp    40f891 <next@@Base+0x15a1>
  40e857:	mov    rax,QWORD PTR [rbp-0x340]
  40e85e:	lea    rcx,[rip+0xaddb]        # 419640 <__bss_start@@Base+0x14e8>
  40e865:	mov    rdx,rcx
  40e868:	add    rdx,0xe8
  40e86f:	add    rcx,0xf0
  40e876:	mov    rsi,QWORD PTR [rax]
  40e879:	add    rsi,0x1
  40e880:	mov    QWORD PTR [rax],rsi
  40e883:	movsx  edi,BYTE PTR [rbp-0x229]
  40e88a:	cmp    edi,0x28
  40e88d:	mov    QWORD PTR [rbp-0x358],rdx
  40e894:	mov    QWORD PTR [rbp-0x360],rcx
  40e89b:	jne    40e8f9 <next@@Base+0x609>
  40e8a1:	mov    rax,QWORD PTR [rbp-0x358]
  40e8a8:	mov    rcx,QWORD PTR [rax]
  40e8ab:	add    rcx,0x1
  40e8b2:	mov    QWORD PTR [rax],rcx
  40e8b5:	mov    edi,0x4
  40e8ba:	call   4031a0 <malloc@plt>
  40e8bf:	mov    QWORD PTR [rbp-0x238],rax
  40e8c6:	mov    rax,QWORD PTR [rbp-0x238]
  40e8cd:	mov    rdi,rax
  40e8d0:	call   40d2a0 <init_token_opar@@Base>
  40e8d5:	lea    rax,[rip+0xad64]        # 419640 <__bss_start@@Base+0x14e8>
  40e8dc:	add    rax,0xf8
  40e8e2:	mov    rcx,QWORD PTR [rbp-0x238]
  40e8e9:	mov    QWORD PTR [rbp-0x8],rcx
  40e8ed:	mov    QWORD PTR [rbp-0x270],rax
  40e8f4:	jmp    41052a <next@@Base+0x223a>
  40e8f9:	mov    rax,QWORD PTR [rbp-0x360]
  40e900:	lea    rcx,[rip+0xad39]        # 419640 <__bss_start@@Base+0x14e8>
  40e907:	mov    rdx,rcx
  40e90a:	add    rdx,0x100
  40e911:	add    rcx,0x108
  40e918:	mov    rsi,QWORD PTR [rax]
  40e91b:	add    rsi,0x1
  40e922:	mov    QWORD PTR [rax],rsi
  40e925:	movsx  edi,BYTE PTR [rbp-0x229]
  40e92c:	cmp    edi,0x29
  40e92f:	mov    QWORD PTR [rbp-0x368],rdx
  40e936:	mov    QWORD PTR [rbp-0x370],rcx
  40e93d:	jne    40e99b <next@@Base+0x6ab>
  40e943:	mov    rax,QWORD PTR [rbp-0x368]
  40e94a:	mov    rcx,QWORD PTR [rax]
  40e94d:	add    rcx,0x1
  40e954:	mov    QWORD PTR [rax],rcx
  40e957:	mov    edi,0x4
  40e95c:	call   4031a0 <malloc@plt>
  40e961:	mov    QWORD PTR [rbp-0x238],rax
  40e968:	mov    rax,QWORD PTR [rbp-0x238]
  40e96f:	mov    rdi,rax
  40e972:	call   40d2f0 <init_token_cpar@@Base>
  40e977:	lea    rax,[rip+0xacc2]        # 419640 <__bss_start@@Base+0x14e8>
  40e97e:	add    rax,0x110
  40e984:	mov    rcx,QWORD PTR [rbp-0x238]
  40e98b:	mov    QWORD PTR [rbp-0x8],rcx
  40e98f:	mov    QWORD PTR [rbp-0x270],rax
  40e996:	jmp    41052a <next@@Base+0x223a>
  40e99b:	mov    rax,QWORD PTR [rbp-0x370]
  40e9a2:	lea    rcx,[rip+0xac97]        # 419640 <__bss_start@@Base+0x14e8>
  40e9a9:	mov    rdx,rcx
  40e9ac:	add    rdx,0x118
  40e9b3:	add    rcx,0x120
  40e9ba:	mov    rsi,QWORD PTR [rax]
  40e9bd:	add    rsi,0x1
  40e9c4:	mov    QWORD PTR [rax],rsi
  40e9c7:	movsx  edi,BYTE PTR [rbp-0x229]
  40e9ce:	cmp    edi,0x7b
  40e9d1:	mov    QWORD PTR [rbp-0x378],rdx
  40e9d8:	mov    QWORD PTR [rbp-0x380],rcx
  40e9df:	jne    40ea3d <next@@Base+0x74d>
  40e9e5:	mov    rax,QWORD PTR [rbp-0x378]
  40e9ec:	mov    rcx,QWORD PTR [rax]
  40e9ef:	add    rcx,0x1
  40e9f6:	mov    QWORD PTR [rax],rcx
  40e9f9:	mov    edi,0x4
  40e9fe:	call   4031a0 <malloc@plt>
  40ea03:	mov    QWORD PTR [rbp-0x238],rax
  40ea0a:	mov    rax,QWORD PTR [rbp-0x238]
  40ea11:	mov    rdi,rax
  40ea14:	call   40d340 <init_token_obra@@Base>
  40ea19:	lea    rax,[rip+0xac20]        # 419640 <__bss_start@@Base+0x14e8>
  40ea20:	add    rax,0x128
  40ea26:	mov    rcx,QWORD PTR [rbp-0x238]
  40ea2d:	mov    QWORD PTR [rbp-0x8],rcx
  40ea31:	mov    QWORD PTR [rbp-0x270],rax
  40ea38:	jmp    41052a <next@@Base+0x223a>
  40ea3d:	mov    rax,QWORD PTR [rbp-0x380]
  40ea44:	lea    rcx,[rip+0xabf5]        # 419640 <__bss_start@@Base+0x14e8>
  40ea4b:	mov    rdx,rcx
  40ea4e:	add    rdx,0x130
  40ea55:	add    rcx,0x138
  40ea5c:	mov    rsi,QWORD PTR [rax]
  40ea5f:	add    rsi,0x1
  40ea66:	mov    QWORD PTR [rax],rsi
  40ea69:	movsx  edi,BYTE PTR [rbp-0x229]
  40ea70:	cmp    edi,0x7d
  40ea73:	mov    QWORD PTR [rbp-0x388],rdx
  40ea7a:	mov    QWORD PTR [rbp-0x390],rcx
  40ea81:	jne    40eadf <next@@Base+0x7ef>
  40ea87:	mov    rax,QWORD PTR [rbp-0x388]
  40ea8e:	mov    rcx,QWORD PTR [rax]
  40ea91:	add    rcx,0x1
  40ea98:	mov    QWORD PTR [rax],rcx
  40ea9b:	mov    edi,0x4
  40eaa0:	call   4031a0 <malloc@plt>
  40eaa5:	mov    QWORD PTR [rbp-0x238],rax
  40eaac:	mov    rax,QWORD PTR [rbp-0x238]
  40eab3:	mov    rdi,rax
  40eab6:	call   40d390 <init_token_cbra@@Base>
  40eabb:	lea    rax,[rip+0xab7e]        # 419640 <__bss_start@@Base+0x14e8>
  40eac2:	add    rax,0x140
  40eac8:	mov    rcx,QWORD PTR [rbp-0x238]
  40eacf:	mov    QWORD PTR [rbp-0x8],rcx
  40ead3:	mov    QWORD PTR [rbp-0x270],rax
  40eada:	jmp    41052a <next@@Base+0x223a>
  40eadf:	mov    rax,QWORD PTR [rbp-0x390]
  40eae6:	lea    rcx,[rip+0xab53]        # 419640 <__bss_start@@Base+0x14e8>
  40eaed:	mov    rdx,rcx
  40eaf0:	add    rdx,0x148
  40eaf7:	add    rcx,0x150
  40eafe:	mov    rsi,QWORD PTR [rax]
  40eb01:	add    rsi,0x1
  40eb08:	mov    QWORD PTR [rax],rsi
  40eb0b:	movsx  edi,BYTE PTR [rbp-0x229]
  40eb12:	cmp    edi,0x3b
  40eb15:	mov    QWORD PTR [rbp-0x398],rdx
  40eb1c:	mov    QWORD PTR [rbp-0x3a0],rcx
  40eb23:	jne    40eb81 <next@@Base+0x891>
  40eb29:	mov    rax,QWORD PTR [rbp-0x398]
  40eb30:	mov    rcx,QWORD PTR [rax]
  40eb33:	add    rcx,0x1
  40eb3a:	mov    QWORD PTR [rax],rcx
  40eb3d:	mov    edi,0x4
  40eb42:	call   4031a0 <malloc@plt>
  40eb47:	mov    QWORD PTR [rbp-0x238],rax
  40eb4e:	mov    rax,QWORD PTR [rbp-0x238]
  40eb55:	mov    rdi,rax
  40eb58:	call   40d430 <init_token_semicolon@@Base>
  40eb5d:	lea    rax,[rip+0xaadc]        # 419640 <__bss_start@@Base+0x14e8>
  40eb64:	add    rax,0x158
  40eb6a:	mov    rcx,QWORD PTR [rbp-0x238]
  40eb71:	mov    QWORD PTR [rbp-0x8],rcx
  40eb75:	mov    QWORD PTR [rbp-0x270],rax
  40eb7c:	jmp    41052a <next@@Base+0x223a>
  40eb81:	mov    rax,QWORD PTR [rbp-0x3a0]
  40eb88:	lea    rcx,[rip+0xaab1]        # 419640 <__bss_start@@Base+0x14e8>
  40eb8f:	mov    rdx,rcx
  40eb92:	add    rdx,0x160
  40eb99:	add    rcx,0x168
  40eba0:	mov    rsi,QWORD PTR [rax]
  40eba3:	add    rsi,0x1
  40ebaa:	mov    QWORD PTR [rax],rsi
  40ebad:	movsx  edi,BYTE PTR [rbp-0x229]
  40ebb4:	cmp    edi,0x65
  40ebb7:	mov    QWORD PTR [rbp-0x3a8],rdx
  40ebbe:	mov    QWORD PTR [rbp-0x3b0],rcx
  40ebc5:	jne    40ec34 <next@@Base+0x944>
  40ebcb:	mov    rax,QWORD PTR [rbp-0x3a8]
  40ebd2:	mov    rcx,QWORD PTR [rax]
  40ebd5:	add    rcx,0x1
  40ebdc:	mov    QWORD PTR [rax],rcx
  40ebdf:	mov    dl,BYTE PTR [rbp-0x229]
  40ebe5:	mov    esi,DWORD PTR [rbp-0x21c]
  40ebeb:	mov    edi,esi
  40ebed:	add    edi,0x1
  40ebf0:	mov    DWORD PTR [rbp-0x21c],edi
  40ebf6:	movsxd rax,esi
  40ebf9:	mov    BYTE PTR [rbp+rax*1-0x210],dl
  40ec00:	mov    rdi,QWORD PTR [rbp-0x10]
  40ec04:	call   40e110 <get_char@@Base>
  40ec09:	lea    rcx,[rip+0xaa30]        # 419640 <__bss_start@@Base+0x14e8>
  40ec10:	add    rcx,0x170
  40ec17:	mov    BYTE PTR [rbp-0x229],al
  40ec1d:	mov    QWORD PTR [rbp-0x228],0x5
  40ec28:	mov    QWORD PTR [rbp-0x3b8],rcx
  40ec2f:	jmp    40f79b <next@@Base+0x14ab>
  40ec34:	mov    rax,QWORD PTR [rbp-0x3b0]
  40ec3b:	lea    rcx,[rip+0xa9fe]        # 419640 <__bss_start@@Base+0x14e8>
  40ec42:	mov    rdx,rcx
  40ec45:	add    rdx,0x178
  40ec4c:	add    rcx,0x180
  40ec53:	mov    rsi,QWORD PTR [rax]
  40ec56:	add    rsi,0x1
  40ec5d:	mov    QWORD PTR [rax],rsi
  40ec60:	movsx  edi,BYTE PTR [rbp-0x229]
  40ec67:	cmp    edi,0x69
  40ec6a:	mov    QWORD PTR [rbp-0x3c0],rdx
  40ec71:	mov    QWORD PTR [rbp-0x3c8],rcx
  40ec78:	jne    40ece7 <next@@Base+0x9f7>
  40ec7e:	mov    rax,QWORD PTR [rbp-0x3c0]
  40ec85:	mov    rcx,QWORD PTR [rax]
  40ec88:	add    rcx,0x1
  40ec8f:	mov    QWORD PTR [rax],rcx
  40ec92:	mov    dl,BYTE PTR [rbp-0x229]
  40ec98:	mov    esi,DWORD PTR [rbp-0x21c]
  40ec9e:	mov    edi,esi
  40eca0:	add    edi,0x1
  40eca3:	mov    DWORD PTR [rbp-0x21c],edi
  40eca9:	movsxd rax,esi
  40ecac:	mov    BYTE PTR [rbp+rax*1-0x210],dl
  40ecb3:	mov    rdi,QWORD PTR [rbp-0x10]
  40ecb7:	call   40e110 <get_char@@Base>
  40ecbc:	lea    rcx,[rip+0xa97d]        # 419640 <__bss_start@@Base+0x14e8>
  40ecc3:	add    rcx,0x188
  40ecca:	mov    BYTE PTR [rbp-0x229],al
  40ecd0:	mov    QWORD PTR [rbp-0x228],0x2
  40ecdb:	mov    QWORD PTR [rbp-0x3d0],rcx
  40ece2:	jmp    40f772 <next@@Base+0x1482>
  40ece7:	mov    rax,QWORD PTR [rbp-0x3c8]
  40ecee:	lea    rcx,[rip+0xa94b]        # 419640 <__bss_start@@Base+0x14e8>
  40ecf5:	mov    rdx,rcx
  40ecf8:	add    rdx,0x190
  40ecff:	add    rcx,0x198
  40ed06:	mov    rsi,QWORD PTR [rax]
  40ed09:	add    rsi,0x1
  40ed10:	mov    QWORD PTR [rax],rsi
  40ed13:	movsx  edi,BYTE PTR [rbp-0x229]
  40ed1a:	cmp    edi,0x6d
  40ed1d:	mov    QWORD PTR [rbp-0x3d8],rdx
  40ed24:	mov    QWORD PTR [rbp-0x3e0],rcx
  40ed2b:	jne    40ed9a <next@@Base+0xaaa>
  40ed31:	mov    rax,QWORD PTR [rbp-0x3d8]
  40ed38:	mov    rcx,QWORD PTR [rax]
  40ed3b:	add    rcx,0x1
  40ed42:	mov    QWORD PTR [rax],rcx
  40ed45:	mov    dl,BYTE PTR [rbp-0x229]
  40ed4b:	mov    esi,DWORD PTR [rbp-0x21c]
  40ed51:	mov    edi,esi
  40ed53:	add    edi,0x1
  40ed56:	mov    DWORD PTR [rbp-0x21c],edi
  40ed5c:	movsxd rax,esi
  40ed5f:	mov    BYTE PTR [rbp+rax*1-0x210],dl
  40ed66:	mov    rdi,QWORD PTR [rbp-0x10]
  40ed6a:	call   40e110 <get_char@@Base>
  40ed6f:	lea    rcx,[rip+0xa8ca]        # 419640 <__bss_start@@Base+0x14e8>
  40ed76:	add    rcx,0x1a0
  40ed7d:	mov    BYTE PTR [rbp-0x229],al
  40ed83:	mov    QWORD PTR [rbp-0x228],0x3
  40ed8e:	mov    QWORD PTR [rbp-0x3e8],rcx
  40ed95:	jmp    40f749 <next@@Base+0x1459>
  40ed9a:	mov    rax,QWORD PTR [rbp-0x3e0]
  40eda1:	lea    rcx,[rip+0xa898]        # 419640 <__bss_start@@Base+0x14e8>
  40eda8:	mov    rdx,rcx
  40edab:	add    rdx,0x1a8
  40edb2:	add    rcx,0x1b0
  40edb9:	mov    rsi,QWORD PTR [rax]
  40edbc:	add    rsi,0x1
  40edc3:	mov    QWORD PTR [rax],rsi
  40edc6:	movsx  edi,BYTE PTR [rbp-0x229]
  40edcd:	cmp    edi,0x72
  40edd0:	mov    QWORD PTR [rbp-0x3f0],rdx
  40edd7:	mov    QWORD PTR [rbp-0x3f8],rcx
  40edde:	jne    40ee4d <next@@Base+0xb5d>
  40ede4:	mov    rax,QWORD PTR [rbp-0x3f0]
  40edeb:	mov    rcx,QWORD PTR [rax]
  40edee:	add    rcx,0x1
  40edf5:	mov    QWORD PTR [rax],rcx
  40edf8:	mov    dl,BYTE PTR [rbp-0x229]
  40edfe:	mov    esi,DWORD PTR [rbp-0x21c]
  40ee04:	mov    edi,esi
  40ee06:	add    edi,0x1
  40ee09:	mov    DWORD PTR [rbp-0x21c],edi
  40ee0f:	movsxd rax,esi
  40ee12:	mov    BYTE PTR [rbp+rax*1-0x210],dl
  40ee19:	mov    rdi,QWORD PTR [rbp-0x10]
  40ee1d:	call   40e110 <get_char@@Base>
  40ee22:	lea    rcx,[rip+0xa817]        # 419640 <__bss_start@@Base+0x14e8>
  40ee29:	add    rcx,0x1b8
  40ee30:	mov    BYTE PTR [rbp-0x229],al
  40ee36:	mov    QWORD PTR [rbp-0x228],0x4
  40ee41:	mov    QWORD PTR [rbp-0x400],rcx
  40ee48:	jmp    40f720 <next@@Base+0x1430>
  40ee4d:	mov    rax,QWORD PTR [rbp-0x3f8]
  40ee54:	lea    rcx,[rip+0xa7e5]        # 419640 <__bss_start@@Base+0x14e8>
  40ee5b:	mov    rdx,rcx
  40ee5e:	add    rdx,0x1c0
  40ee65:	add    rcx,0x1c8
  40ee6c:	mov    rsi,QWORD PTR [rax]
  40ee6f:	add    rsi,0x1
  40ee76:	mov    QWORD PTR [rax],rsi
  40ee79:	movsx  edi,BYTE PTR [rbp-0x229]
  40ee80:	cmp    edi,0x21
  40ee83:	mov    QWORD PTR [rbp-0x408],rdx
  40ee8a:	mov    QWORD PTR [rbp-0x410],rcx
  40ee91:	jne    40f036 <next@@Base+0xd46>
  40ee97:	mov    rax,QWORD PTR [rbp-0x408]
  40ee9e:	mov    rcx,QWORD PTR [rax]
  40eea1:	add    rcx,0x1
  40eea8:	mov    QWORD PTR [rax],rcx
  40eeab:	mov    dl,BYTE PTR [rbp-0x229]
  40eeb1:	mov    esi,DWORD PTR [rbp-0x21c]
  40eeb7:	mov    edi,esi
  40eeb9:	add    edi,0x1
  40eebc:	mov    DWORD PTR [rbp-0x21c],edi
  40eec2:	movsxd rax,esi
  40eec5:	mov    BYTE PTR [rbp+rax*1-0x210],dl
  40eecc:	mov    rdi,QWORD PTR [rbp-0x10]
  40eed0:	call   40e110 <get_char@@Base>
  40eed5:	mov    BYTE PTR [rbp-0x229],al
  40eedb:	mov    edi,0x10
  40eee0:	call   4031a0 <malloc@plt>
  40eee5:	lea    rcx,[rip+0xa754]        # 419640 <__bss_start@@Base+0x14e8>
  40eeec:	mov    rdi,rcx
  40eeef:	add    rdi,0x1d0
  40eef6:	add    rcx,0x1d8
  40eefd:	mov    QWORD PTR [rbp-0x238],rax
  40ef04:	movsx  esi,BYTE PTR [rbp-0x229]
  40ef0b:	cmp    esi,0x3d
  40ef0e:	mov    QWORD PTR [rbp-0x418],rdi
  40ef15:	mov    QWORD PTR [rbp-0x420],rcx
  40ef1c:	je     40ef84 <next@@Base+0xc94>
  40ef22:	mov    rax,QWORD PTR [rbp-0x418]
  40ef29:	mov    rcx,QWORD PTR [rax]
  40ef2c:	add    rcx,0x1
  40ef33:	mov    QWORD PTR [rax],rcx
  40ef36:	mov    rdi,QWORD PTR [rbp-0x10]
  40ef3a:	call   40e290 <push_back_one_char@@Base>
  40ef3f:	mov    edi,0x2
  40ef44:	call   4031a0 <malloc@plt>
  40ef49:	lea    rcx,[rip+0xa6f0]        # 419640 <__bss_start@@Base+0x14e8>
  40ef50:	add    rcx,0x1e0
  40ef57:	mov    QWORD PTR [rbp-0x218],rax
  40ef5e:	mov    dl,BYTE PTR [rbp-0x210]
  40ef64:	mov    rax,QWORD PTR [rbp-0x218]
  40ef6b:	mov    BYTE PTR [rax],dl
  40ef6d:	mov    rax,QWORD PTR [rbp-0x218]
  40ef74:	mov    BYTE PTR [rax+0x1],0x0
  40ef78:	mov    QWORD PTR [rbp-0x428],rcx
  40ef7f:	jmp    40efe8 <next@@Base+0xcf8>
  40ef84:	mov    rax,QWORD PTR [rbp-0x420]
  40ef8b:	mov    rcx,QWORD PTR [rax]
  40ef8e:	add    rcx,0x1
  40ef95:	mov    QWORD PTR [rax],rcx
  40ef98:	mov    edi,0x3
  40ef9d:	call   4031a0 <malloc@plt>
  40efa2:	lea    rcx,[rip+0xa697]        # 419640 <__bss_start@@Base+0x14e8>
  40efa9:	add    rcx,0x1e8
  40efb0:	mov    QWORD PTR [rbp-0x218],rax
  40efb7:	mov    dl,BYTE PTR [rbp-0x210]
  40efbd:	mov    rax,QWORD PTR [rbp-0x218]
  40efc4:	mov    BYTE PTR [rax],dl
  40efc6:	mov    dl,BYTE PTR [rbp-0x229]
  40efcc:	mov    rax,QWORD PTR [rbp-0x218]
  40efd3:	mov    BYTE PTR [rax+0x1],dl
  40efd6:	mov    rax,QWORD PTR [rbp-0x218]
  40efdd:	mov    BYTE PTR [rax+0x2],0x0
  40efe1:	mov    QWORD PTR [rbp-0x428],rcx
  40efe8:	mov    rax,QWORD PTR [rbp-0x428]
  40efef:	mov    rcx,QWORD PTR [rax]
  40eff2:	add    rcx,0x1
  40eff9:	mov    QWORD PTR [rax],rcx
  40effc:	mov    rax,QWORD PTR [rbp-0x238]
  40f003:	mov    rsi,QWORD PTR [rbp-0x218]
  40f00a:	mov    rdi,rax
  40f00d:	call   40d570 <init_token_boolean_op@@Base>
  40f012:	lea    rax,[rip+0xa627]        # 419640 <__bss_start@@Base+0x14e8>
  40f019:	add    rax,0x1f0
  40f01f:	mov    rcx,QWORD PTR [rbp-0x238]
  40f026:	mov    QWORD PTR [rbp-0x8],rcx
  40f02a:	mov    QWORD PTR [rbp-0x270],rax
  40f031:	jmp    41052a <next@@Base+0x223a>
  40f036:	mov    rax,QWORD PTR [rbp-0x410]
  40f03d:	lea    rcx,[rip+0xa5fc]        # 419640 <__bss_start@@Base+0x14e8>
  40f044:	mov    rdx,rcx
  40f047:	add    rdx,0x1f8
  40f04e:	add    rcx,0x200
  40f055:	mov    rsi,QWORD PTR [rax]
  40f058:	add    rsi,0x1
  40f05f:	mov    QWORD PTR [rax],rsi
  40f062:	movsx  edi,BYTE PTR [rbp-0x229]
  40f069:	cmp    edi,0x3c
  40f06c:	mov    QWORD PTR [rbp-0x430],rcx
  40f073:	mov    QWORD PTR [rbp-0x438],rdx
  40f07a:	je     40f0ca <next@@Base+0xdda>
  40f080:	mov    rax,QWORD PTR [rbp-0x430]
  40f087:	lea    rcx,[rip+0xa5b2]        # 419640 <__bss_start@@Base+0x14e8>
  40f08e:	mov    rdx,rcx
  40f091:	add    rdx,0x208
  40f098:	add    rcx,0x210
  40f09f:	mov    rsi,QWORD PTR [rax]
  40f0a2:	add    rsi,0x1
  40f0a9:	mov    QWORD PTR [rax],rsi
  40f0ac:	movsx  edi,BYTE PTR [rbp-0x229]
  40f0b3:	cmp    edi,0x3e
  40f0b6:	mov    QWORD PTR [rbp-0x438],rdx
  40f0bd:	mov    QWORD PTR [rbp-0x440],rcx
  40f0c4:	jne    40f269 <next@@Base+0xf79>
  40f0ca:	mov    rax,QWORD PTR [rbp-0x438]
  40f0d1:	mov    rcx,QWORD PTR [rax]
  40f0d4:	add    rcx,0x1
  40f0db:	mov    QWORD PTR [rax],rcx
  40f0de:	mov    dl,BYTE PTR [rbp-0x229]
  40f0e4:	mov    esi,DWORD PTR [rbp-0x21c]
  40f0ea:	mov    edi,esi
  40f0ec:	add    edi,0x1
  40f0ef:	mov    DWORD PTR [rbp-0x21c],edi
  40f0f5:	movsxd rax,esi
  40f0f8:	mov    BYTE PTR [rbp+rax*1-0x210],dl
  40f0ff:	mov    rdi,QWORD PTR [rbp-0x10]
  40f103:	call   40e110 <get_char@@Base>
  40f108:	mov    BYTE PTR [rbp-0x229],al
  40f10e:	mov    edi,0x10
  40f113:	call   4031a0 <malloc@plt>
  40f118:	lea    rcx,[rip+0xa521]        # 419640 <__bss_start@@Base+0x14e8>
  40f11f:	mov    rdi,rcx
  40f122:	add    rdi,0x218
  40f129:	add    rcx,0x220
  40f130:	mov    QWORD PTR [rbp-0x238],rax
  40f137:	movsx  esi,BYTE PTR [rbp-0x229]
  40f13e:	cmp    esi,0x3d
  40f141:	mov    QWORD PTR [rbp-0x448],rdi
  40f148:	mov    QWORD PTR [rbp-0x450],rcx
  40f14f:	je     40f1b7 <next@@Base+0xec7>
  40f155:	mov    rax,QWORD PTR [rbp-0x448]
  40f15c:	mov    rcx,QWORD PTR [rax]
  40f15f:	add    rcx,0x1
  40f166:	mov    QWORD PTR [rax],rcx
  40f169:	mov    rdi,QWORD PTR [rbp-0x10]
  40f16d:	call   40e290 <push_back_one_char@@Base>
  40f172:	mov    edi,0x2
  40f177:	call   4031a0 <malloc@plt>
  40f17c:	lea    rcx,[rip+0xa4bd]        # 419640 <__bss_start@@Base+0x14e8>
  40f183:	add    rcx,0x228
  40f18a:	mov    QWORD PTR [rbp-0x218],rax
  40f191:	mov    dl,BYTE PTR [rbp-0x210]
  40f197:	mov    rax,QWORD PTR [rbp-0x218]
  40f19e:	mov    BYTE PTR [rax],dl
  40f1a0:	mov    rax,QWORD PTR [rbp-0x218]
  40f1a7:	mov    BYTE PTR [rax+0x1],0x0
  40f1ab:	mov    QWORD PTR [rbp-0x458],rcx
  40f1b2:	jmp    40f21b <next@@Base+0xf2b>
  40f1b7:	mov    rax,QWORD PTR [rbp-0x450]
  40f1be:	mov    rcx,QWORD PTR [rax]
  40f1c1:	add    rcx,0x1
  40f1c8:	mov    QWORD PTR [rax],rcx
  40f1cb:	mov    edi,0x3
  40f1d0:	call   4031a0 <malloc@plt>
  40f1d5:	lea    rcx,[rip+0xa464]        # 419640 <__bss_start@@Base+0x14e8>
  40f1dc:	add    rcx,0x230
  40f1e3:	mov    QWORD PTR [rbp-0x218],rax
  40f1ea:	mov    dl,BYTE PTR [rbp-0x210]
  40f1f0:	mov    rax,QWORD PTR [rbp-0x218]
  40f1f7:	mov    BYTE PTR [rax],dl
  40f1f9:	mov    dl,BYTE PTR [rbp-0x229]
  40f1ff:	mov    rax,QWORD PTR [rbp-0x218]
  40f206:	mov    BYTE PTR [rax+0x1],dl
  40f209:	mov    rax,QWORD PTR [rbp-0x218]
  40f210:	mov    BYTE PTR [rax+0x2],0x0
  40f214:	mov    QWORD PTR [rbp-0x458],rcx
  40f21b:	mov    rax,QWORD PTR [rbp-0x458]
  40f222:	mov    rcx,QWORD PTR [rax]
  40f225:	add    rcx,0x1
  40f22c:	mov    QWORD PTR [rax],rcx
  40f22f:	mov    rax,QWORD PTR [rbp-0x238]
  40f236:	mov    rsi,QWORD PTR [rbp-0x218]
  40f23d:	mov    rdi,rax
  40f240:	call   40d570 <init_token_boolean_op@@Base>
  40f245:	lea    rax,[rip+0xa3f4]        # 419640 <__bss_start@@Base+0x14e8>
  40f24c:	add    rax,0x238
  40f252:	mov    rcx,QWORD PTR [rbp-0x238]
  40f259:	mov    QWORD PTR [rbp-0x8],rcx
  40f25d:	mov    QWORD PTR [rbp-0x270],rax
  40f264:	jmp    41052a <next@@Base+0x223a>
  40f269:	mov    rax,QWORD PTR [rbp-0x440]
  40f270:	lea    rcx,[rip+0xa3c9]        # 419640 <__bss_start@@Base+0x14e8>
  40f277:	mov    rdx,rcx
  40f27a:	add    rdx,0x240
  40f281:	add    rcx,0x248
  40f288:	mov    rsi,QWORD PTR [rax]
  40f28b:	add    rsi,0x1
  40f292:	mov    QWORD PTR [rax],rsi
  40f295:	movsx  edi,BYTE PTR [rbp-0x229]
  40f29c:	cmp    edi,0x3d
  40f29f:	mov    QWORD PTR [rbp-0x460],rdx
  40f2a6:	mov    QWORD PTR [rbp-0x468],rcx
  40f2ad:	jne    40f3e5 <next@@Base+0x10f5>
  40f2b3:	mov    rax,QWORD PTR [rbp-0x460]
  40f2ba:	mov    rcx,QWORD PTR [rax]
  40f2bd:	add    rcx,0x1
  40f2c4:	mov    QWORD PTR [rax],rcx
  40f2c7:	mov    dl,BYTE PTR [rbp-0x229]
  40f2cd:	mov    esi,DWORD PTR [rbp-0x21c]
  40f2d3:	mov    edi,esi
  40f2d5:	add    edi,0x1
  40f2d8:	mov    DWORD PTR [rbp-0x21c],edi
  40f2de:	movsxd rax,esi
  40f2e1:	mov    BYTE PTR [rbp+rax*1-0x210],dl
  40f2e8:	mov    rdi,QWORD PTR [rbp-0x10]
  40f2ec:	call   40e110 <get_char@@Base>
  40f2f1:	mov    BYTE PTR [rbp-0x229],al
  40f2f7:	mov    edi,0x10
  40f2fc:	call   4031a0 <malloc@plt>
  40f301:	lea    rcx,[rip+0xa338]        # 419640 <__bss_start@@Base+0x14e8>
  40f308:	mov    rdi,rcx
  40f30b:	add    rdi,0x250
  40f312:	add    rcx,0x258
  40f319:	mov    QWORD PTR [rbp-0x238],rax
  40f320:	movsx  esi,BYTE PTR [rbp-0x229]
  40f327:	cmp    esi,0x3d
  40f32a:	mov    QWORD PTR [rbp-0x470],rdi
  40f331:	mov    QWORD PTR [rbp-0x478],rcx
  40f338:	je     40f35c <next@@Base+0x106c>
  40f33e:	mov    rax,QWORD PTR [rbp-0x470]
  40f345:	mov    rcx,QWORD PTR [rax]
  40f348:	add    rcx,0x1
  40f34f:	mov    QWORD PTR [rax],rcx
  40f352:	mov    edi,0x1
  40f357:	call   403240 <exit@plt>
  40f35c:	mov    rax,QWORD PTR [rbp-0x478]
  40f363:	mov    rcx,QWORD PTR [rax]
  40f366:	add    rcx,0x1
  40f36d:	mov    QWORD PTR [rax],rcx
  40f370:	mov    edi,0x3
  40f375:	call   4031a0 <malloc@plt>
  40f37a:	mov    QWORD PTR [rbp-0x218],rax
  40f381:	mov    dl,BYTE PTR [rbp-0x210]
  40f387:	mov    rax,QWORD PTR [rbp-0x218]
  40f38e:	mov    BYTE PTR [rax],dl
  40f390:	mov    dl,BYTE PTR [rbp-0x229]
  40f396:	mov    rax,QWORD PTR [rbp-0x218]
  40f39d:	mov    BYTE PTR [rax+0x1],dl
  40f3a0:	mov    rax,QWORD PTR [rbp-0x218]
  40f3a7:	mov    BYTE PTR [rax+0x2],0x0
  40f3ab:	mov    rax,QWORD PTR [rbp-0x238]
  40f3b2:	mov    rsi,QWORD PTR [rbp-0x218]
  40f3b9:	mov    rdi,rax
  40f3bc:	call   40d570 <init_token_boolean_op@@Base>
  40f3c1:	lea    rax,[rip+0xa278]        # 419640 <__bss_start@@Base+0x14e8>
  40f3c8:	add    rax,0x260
  40f3ce:	mov    rcx,QWORD PTR [rbp-0x238]
  40f3d5:	mov    QWORD PTR [rbp-0x8],rcx
  40f3d9:	mov    QWORD PTR [rbp-0x270],rax
  40f3e0:	jmp    41052a <next@@Base+0x223a>
  40f3e5:	mov    rax,QWORD PTR [rbp-0x468]
  40f3ec:	lea    rcx,[rip+0xa24d]        # 419640 <__bss_start@@Base+0x14e8>
  40f3f3:	mov    rdx,rcx
  40f3f6:	add    rdx,0x268
  40f3fd:	add    rcx,0x270
  40f404:	mov    rsi,QWORD PTR [rax]
  40f407:	add    rsi,0x1
  40f40e:	mov    QWORD PTR [rax],rsi
  40f411:	movsx  edi,BYTE PTR [rbp-0x229]
  40f418:	cmp    edi,0x7c
  40f41b:	mov    QWORD PTR [rbp-0x480],rdx
  40f422:	mov    QWORD PTR [rbp-0x488],rcx
  40f429:	jne    40f561 <next@@Base+0x1271>
  40f42f:	mov    rax,QWORD PTR [rbp-0x480]
  40f436:	mov    rcx,QWORD PTR [rax]
  40f439:	add    rcx,0x1
  40f440:	mov    QWORD PTR [rax],rcx
  40f443:	mov    dl,BYTE PTR [rbp-0x229]
  40f449:	mov    esi,DWORD PTR [rbp-0x21c]
  40f44f:	mov    edi,esi
  40f451:	add    edi,0x1
  40f454:	mov    DWORD PTR [rbp-0x21c],edi
  40f45a:	movsxd rax,esi
  40f45d:	mov    BYTE PTR [rbp+rax*1-0x210],dl
  40f464:	mov    rdi,QWORD PTR [rbp-0x10]
  40f468:	call   40e110 <get_char@@Base>
  40f46d:	mov    BYTE PTR [rbp-0x229],al
  40f473:	mov    edi,0x10
  40f478:	call   4031a0 <malloc@plt>
  40f47d:	lea    rcx,[rip+0xa1bc]        # 419640 <__bss_start@@Base+0x14e8>
  40f484:	mov    rdi,rcx
  40f487:	add    rdi,0x278
  40f48e:	add    rcx,0x280
  40f495:	mov    QWORD PTR [rbp-0x238],rax
  40f49c:	movsx  esi,BYTE PTR [rbp-0x229]
  40f4a3:	cmp    esi,0x7c
  40f4a6:	mov    QWORD PTR [rbp-0x490],rdi
  40f4ad:	mov    QWORD PTR [rbp-0x498],rcx
  40f4b4:	je     40f4d8 <next@@Base+0x11e8>
  40f4ba:	mov    rax,QWORD PTR [rbp-0x490]
  40f4c1:	mov    rcx,QWORD PTR [rax]
  40f4c4:	add    rcx,0x1
  40f4cb:	mov    QWORD PTR [rax],rcx
  40f4ce:	mov    edi,0x1
  40f4d3:	call   403240 <exit@plt>
  40f4d8:	mov    rax,QWORD PTR [rbp-0x498]
  40f4df:	mov    rcx,QWORD PTR [rax]
  40f4e2:	add    rcx,0x1
  40f4e9:	mov    QWORD PTR [rax],rcx
  40f4ec:	mov    edi,0x3
  40f4f1:	call   4031a0 <malloc@plt>
  40f4f6:	mov    QWORD PTR [rbp-0x218],rax
  40f4fd:	mov    dl,BYTE PTR [rbp-0x210]
  40f503:	mov    rax,QWORD PTR [rbp-0x218]
  40f50a:	mov    BYTE PTR [rax],dl
  40f50c:	mov    dl,BYTE PTR [rbp-0x229]
  40f512:	mov    rax,QWORD PTR [rbp-0x218]
  40f519:	mov    BYTE PTR [rax+0x1],dl
  40f51c:	mov    rax,QWORD PTR [rbp-0x218]
  40f523:	mov    BYTE PTR [rax+0x2],0x0
  40f527:	mov    rax,QWORD PTR [rbp-0x238]
  40f52e:	mov    rsi,QWORD PTR [rbp-0x218]
  40f535:	mov    rdi,rax
  40f538:	call   40d570 <init_token_boolean_op@@Base>
  40f53d:	lea    rax,[rip+0xa0fc]        # 419640 <__bss_start@@Base+0x14e8>
  40f544:	add    rax,0x288
  40f54a:	mov    rcx,QWORD PTR [rbp-0x238]
  40f551:	mov    QWORD PTR [rbp-0x8],rcx
  40f555:	mov    QWORD PTR [rbp-0x270],rax
  40f55c:	jmp    41052a <next@@Base+0x223a>
  40f561:	mov    rax,QWORD PTR [rbp-0x488]
  40f568:	lea    rcx,[rip+0xa0d1]        # 419640 <__bss_start@@Base+0x14e8>
  40f56f:	mov    rdx,rcx
  40f572:	add    rdx,0x290
  40f579:	add    rcx,0x298
  40f580:	mov    rsi,QWORD PTR [rax]
  40f583:	add    rsi,0x1
  40f58a:	mov    QWORD PTR [rax],rsi
  40f58d:	movsx  edi,BYTE PTR [rbp-0x229]
  40f594:	cmp    edi,0x26
  40f597:	mov    QWORD PTR [rbp-0x4a0],rdx
  40f59e:	mov    QWORD PTR [rbp-0x4a8],rcx
  40f5a5:	jne    40f6dd <next@@Base+0x13ed>
  40f5ab:	mov    rax,QWORD PTR [rbp-0x4a0]
  40f5b2:	mov    rcx,QWORD PTR [rax]
  40f5b5:	add    rcx,0x1
  40f5bc:	mov    QWORD PTR [rax],rcx
  40f5bf:	mov    dl,BYTE PTR [rbp-0x229]
  40f5c5:	mov    esi,DWORD PTR [rbp-0x21c]
  40f5cb:	mov    edi,esi
  40f5cd:	add    edi,0x1
  40f5d0:	mov    DWORD PTR [rbp-0x21c],edi
  40f5d6:	movsxd rax,esi
  40f5d9:	mov    BYTE PTR [rbp+rax*1-0x210],dl
  40f5e0:	mov    rdi,QWORD PTR [rbp-0x10]
  40f5e4:	call   40e110 <get_char@@Base>
  40f5e9:	mov    BYTE PTR [rbp-0x229],al
  40f5ef:	mov    edi,0x10
  40f5f4:	call   4031a0 <malloc@plt>
  40f5f9:	lea    rcx,[rip+0xa040]        # 419640 <__bss_start@@Base+0x14e8>
  40f600:	mov    rdi,rcx
  40f603:	add    rdi,0x2a0
  40f60a:	add    rcx,0x2a8
  40f611:	mov    QWORD PTR [rbp-0x238],rax
  40f618:	movsx  esi,BYTE PTR [rbp-0x229]
  40f61f:	cmp    esi,0x26
  40f622:	mov    QWORD PTR [rbp-0x4b0],rdi
  40f629:	mov    QWORD PTR [rbp-0x4b8],rcx
  40f630:	je     40f654 <next@@Base+0x1364>
  40f636:	mov    rax,QWORD PTR [rbp-0x4b0]
  40f63d:	mov    rcx,QWORD PTR [rax]
  40f640:	add    rcx,0x1
  40f647:	mov    QWORD PTR [rax],rcx
  40f64a:	mov    edi,0x1
  40f64f:	call   403240 <exit@plt>
  40f654:	mov    rax,QWORD PTR [rbp-0x4b8]
  40f65b:	mov    rcx,QWORD PTR [rax]
  40f65e:	add    rcx,0x1
  40f665:	mov    QWORD PTR [rax],rcx
  40f668:	mov    edi,0x3
  40f66d:	call   4031a0 <malloc@plt>
  40f672:	mov    QWORD PTR [rbp-0x218],rax
  40f679:	mov    dl,BYTE PTR [rbp-0x210]
  40f67f:	mov    rax,QWORD PTR [rbp-0x218]
  40f686:	mov    BYTE PTR [rax],dl
  40f688:	mov    dl,BYTE PTR [rbp-0x229]
  40f68e:	mov    rax,QWORD PTR [rbp-0x218]
  40f695:	mov    BYTE PTR [rax+0x1],dl
  40f698:	mov    rax,QWORD PTR [rbp-0x218]
  40f69f:	mov    BYTE PTR [rax+0x2],0x0
  40f6a3:	mov    rax,QWORD PTR [rbp-0x238]
  40f6aa:	mov    rsi,QWORD PTR [rbp-0x218]
  40f6b1:	mov    rdi,rax
  40f6b4:	call   40d570 <init_token_boolean_op@@Base>
  40f6b9:	lea    rax,[rip+0x9f80]        # 419640 <__bss_start@@Base+0x14e8>
  40f6c0:	add    rax,0x2b0
  40f6c6:	mov    rcx,QWORD PTR [rbp-0x238]
  40f6cd:	mov    QWORD PTR [rbp-0x8],rcx
  40f6d1:	mov    QWORD PTR [rbp-0x270],rax
  40f6d8:	jmp    41052a <next@@Base+0x223a>
  40f6dd:	mov    rax,QWORD PTR [rbp-0x4a8]
  40f6e4:	mov    rcx,QWORD PTR [rip+0x8905]        # 417ff0 <stderr@GLIBC_2.2.5>
  40f6eb:	mov    rdx,QWORD PTR [rax]
  40f6ee:	add    rdx,0x1
  40f6f5:	mov    QWORD PTR [rax],rdx
  40f6f8:	mov    rdi,QWORD PTR [rcx]
  40f6fb:	movsx  edx,BYTE PTR [rbp-0x229]
  40f702:	lea    rsi,[rip+0x44d4]        # 413bdd <UnitySizeMask@@Base+0x5dd>
  40f709:	mov    al,0x0
  40f70b:	call   403140 <fprintf@plt>
  40f710:	mov    edi,0x1
  40f715:	mov    DWORD PTR [rbp-0x4bc],eax
  40f71b:	call   403240 <exit@plt>
  40f720:	mov    rax,QWORD PTR [rbp-0x400]
  40f727:	lea    rcx,[rip+0x9f12]        # 419640 <__bss_start@@Base+0x14e8>
  40f72e:	add    rcx,0x2b8
  40f735:	mov    rdx,QWORD PTR [rax]
  40f738:	add    rdx,0x1
  40f73f:	mov    QWORD PTR [rax],rdx
  40f742:	mov    QWORD PTR [rbp-0x3e8],rcx
  40f749:	mov    rax,QWORD PTR [rbp-0x3e8]
  40f750:	lea    rcx,[rip+0x9ee9]        # 419640 <__bss_start@@Base+0x14e8>
  40f757:	add    rcx,0x2c0
  40f75e:	mov    rdx,QWORD PTR [rax]
  40f761:	add    rdx,0x1
  40f768:	mov    QWORD PTR [rax],rdx
  40f76b:	mov    QWORD PTR [rbp-0x3d0],rcx
  40f772:	mov    rax,QWORD PTR [rbp-0x3d0]
  40f779:	lea    rcx,[rip+0x9ec0]        # 419640 <__bss_start@@Base+0x14e8>
  40f780:	add    rcx,0x2c8
  40f787:	mov    rdx,QWORD PTR [rax]
  40f78a:	add    rdx,0x1
  40f791:	mov    QWORD PTR [rax],rdx
  40f794:	mov    QWORD PTR [rbp-0x3b8],rcx
  40f79b:	mov    rax,QWORD PTR [rbp-0x3b8]
  40f7a2:	lea    rcx,[rip+0x9e97]        # 419640 <__bss_start@@Base+0x14e8>
  40f7a9:	add    rcx,0x2d0
  40f7b0:	mov    rdx,QWORD PTR [rax]
  40f7b3:	add    rdx,0x1
  40f7ba:	mov    QWORD PTR [rax],rdx
  40f7bd:	mov    QWORD PTR [rbp-0x4c8],rcx
  40f7c4:	mov    rax,QWORD PTR [rbp-0x4c8]
  40f7cb:	lea    rcx,[rip+0x9e6e]        # 419640 <__bss_start@@Base+0x14e8>
  40f7d2:	add    rcx,0x2d8
  40f7d9:	mov    rdx,QWORD PTR [rax]
  40f7dc:	add    rdx,0x1
  40f7e3:	mov    QWORD PTR [rax],rdx
  40f7e6:	mov    QWORD PTR [rbp-0x4d0],rcx
  40f7ed:	mov    rax,QWORD PTR [rbp-0x4d0]
  40f7f4:	lea    rcx,[rip+0x9e45]        # 419640 <__bss_start@@Base+0x14e8>
  40f7fb:	add    rcx,0x2e0
  40f802:	mov    rdx,QWORD PTR [rax]
  40f805:	add    rdx,0x1
  40f80c:	mov    QWORD PTR [rax],rdx
  40f80f:	mov    QWORD PTR [rbp-0x4d8],rcx
  40f816:	mov    rax,QWORD PTR [rbp-0x4d8]
  40f81d:	lea    rcx,[rip+0x9e1c]        # 419640 <__bss_start@@Base+0x14e8>
  40f824:	add    rcx,0x2e8
  40f82b:	mov    rdx,QWORD PTR [rax]
  40f82e:	add    rdx,0x1
  40f835:	mov    QWORD PTR [rax],rdx
  40f838:	mov    QWORD PTR [rbp-0x4e0],rcx
  40f83f:	mov    rax,QWORD PTR [rbp-0x4e0]
  40f846:	lea    rcx,[rip+0x9df3]        # 419640 <__bss_start@@Base+0x14e8>
  40f84d:	add    rcx,0x2f0
  40f854:	mov    rdx,QWORD PTR [rax]
  40f857:	add    rdx,0x1
  40f85e:	mov    QWORD PTR [rax],rdx
  40f861:	mov    QWORD PTR [rbp-0x4e8],rcx
  40f868:	mov    rax,QWORD PTR [rbp-0x4e8]
  40f86f:	lea    rcx,[rip+0x9dca]        # 419640 <__bss_start@@Base+0x14e8>
  40f876:	add    rcx,0x2f8
  40f87d:	mov    rdx,QWORD PTR [rax]
  40f880:	add    rdx,0x1
  40f887:	mov    QWORD PTR [rax],rdx
  40f88a:	mov    QWORD PTR [rbp-0x350],rcx
  40f891:	mov    rax,QWORD PTR [rbp-0x350]
  40f898:	lea    rcx,[rip+0x9da1]        # 419640 <__bss_start@@Base+0x14e8>
  40f89f:	add    rcx,0x300
  40f8a6:	mov    rdx,QWORD PTR [rax]
  40f8a9:	add    rdx,0x1
  40f8b0:	mov    QWORD PTR [rax],rdx
  40f8b3:	mov    QWORD PTR [rbp-0x4f0],rcx
  40f8ba:	mov    rax,QWORD PTR [rbp-0x4f0]
  40f8c1:	lea    rcx,[rip+0x9d78]        # 419640 <__bss_start@@Base+0x14e8>
  40f8c8:	add    rcx,0x308
  40f8cf:	mov    rdx,QWORD PTR [rax]
  40f8d2:	add    rdx,0x1
  40f8d9:	mov    QWORD PTR [rax],rdx
  40f8dc:	mov    QWORD PTR [rbp-0x320],rcx
  40f8e3:	mov    rax,QWORD PTR [rbp-0x320]
  40f8ea:	lea    rcx,[rip+0x9d4f]        # 419640 <__bss_start@@Base+0x14e8>
  40f8f1:	add    rcx,0x310
  40f8f8:	mov    rdx,QWORD PTR [rax]
  40f8fb:	add    rdx,0x1
  40f902:	mov    QWORD PTR [rax],rdx
  40f905:	mov    QWORD PTR [rbp-0x2c8],rcx
  40f90c:	jmp    4104a9 <next@@Base+0x21b9>
  40f911:	mov    rax,QWORD PTR [rbp-0x2d8]
  40f918:	lea    rcx,[rip+0x9d21]        # 419640 <__bss_start@@Base+0x14e8>
  40f91f:	add    rcx,0x318
  40f926:	mov    rdx,QWORD PTR [rax]
  40f929:	add    rdx,0x1
  40f930:	mov    QWORD PTR [rax],rdx
  40f933:	mov    QWORD PTR [rbp-0x4f8],rcx
  40f93a:	mov    rax,QWORD PTR [rbp-0x4f8]
  40f941:	lea    rcx,[rip+0x9cf8]        # 419640 <__bss_start@@Base+0x14e8>
  40f948:	mov    rdx,rcx
  40f94b:	add    rdx,0x320
  40f952:	add    rcx,0x328
  40f959:	xor    esi,esi
  40f95b:	mov    rdi,QWORD PTR [rax]
  40f95e:	add    rdi,0x1
  40f965:	mov    QWORD PTR [rax],rdi
  40f968:	movsx  r8d,BYTE PTR [rbp-0x229]
  40f970:	cmp    r8d,0x30
  40f974:	mov    QWORD PTR [rbp-0x500],rdx
  40f97b:	mov    QWORD PTR [rbp-0x508],rcx
  40f982:	mov    BYTE PTR [rbp-0x509],sil
  40f989:	jl     40f9cd <next@@Base+0x16dd>
  40f98f:	mov    rax,QWORD PTR [rbp-0x500]
  40f996:	lea    rcx,[rip+0x9ca3]        # 419640 <__bss_start@@Base+0x14e8>
  40f99d:	add    rcx,0x330
  40f9a4:	mov    rdx,QWORD PTR [rax]
  40f9a7:	add    rdx,0x1
  40f9ae:	mov    QWORD PTR [rax],rdx
  40f9b1:	movsx  esi,BYTE PTR [rbp-0x229]
  40f9b8:	cmp    esi,0x39
  40f9bb:	setle  dil
  40f9bf:	mov    QWORD PTR [rbp-0x508],rcx
  40f9c6:	mov    BYTE PTR [rbp-0x509],dil
  40f9cd:	mov    al,BYTE PTR [rbp-0x509]
  40f9d3:	mov    rcx,QWORD PTR [rbp-0x508]
  40f9da:	lea    rdx,[rip+0x9c5f]        # 419640 <__bss_start@@Base+0x14e8>
  40f9e1:	mov    rsi,rdx
  40f9e4:	add    rsi,0x338
  40f9eb:	add    rdx,0x340
  40f9f2:	mov    rdi,QWORD PTR [rcx]
  40f9f5:	add    rdi,0x1
  40f9fc:	mov    QWORD PTR [rcx],rdi
  40f9ff:	test   al,0x1
  40fa01:	mov    QWORD PTR [rbp-0x518],rsi
  40fa08:	mov    QWORD PTR [rbp-0x520],rdx
  40fa0f:	jne    40fa1a <next@@Base+0x172a>
  40fa15:	jmp    40fa78 <next@@Base+0x1788>
  40fa1a:	mov    rax,QWORD PTR [rbp-0x518]
  40fa21:	mov    rcx,QWORD PTR [rax]
  40fa24:	add    rcx,0x1
  40fa2b:	mov    QWORD PTR [rax],rcx
  40fa2e:	mov    dl,BYTE PTR [rbp-0x229]
  40fa34:	mov    esi,DWORD PTR [rbp-0x21c]
  40fa3a:	mov    edi,esi
  40fa3c:	add    edi,0x1
  40fa3f:	mov    DWORD PTR [rbp-0x21c],edi
  40fa45:	movsxd rax,esi
  40fa48:	mov    BYTE PTR [rbp+rax*1-0x210],dl
  40fa4f:	mov    rdi,QWORD PTR [rbp-0x10]
  40fa53:	call   40e110 <get_char@@Base>
  40fa58:	lea    rcx,[rip+0x9be1]        # 419640 <__bss_start@@Base+0x14e8>
  40fa5f:	add    rcx,0x348
  40fa66:	mov    BYTE PTR [rbp-0x229],al
  40fa6c:	mov    QWORD PTR [rbp-0x4f8],rcx
  40fa73:	jmp    40f93a <next@@Base+0x164a>
  40fa78:	mov    rax,QWORD PTR [rbp-0x520]
  40fa7f:	mov    rcx,QWORD PTR [rax]
  40fa82:	add    rcx,0x1
  40fa89:	mov    QWORD PTR [rax],rcx
  40fa8c:	mov    rdi,QWORD PTR [rbp-0x10]
  40fa90:	call   40e290 <push_back_one_char@@Base>
  40fa95:	movsxd rax,DWORD PTR [rbp-0x21c]
  40fa9c:	mov    BYTE PTR [rbp+rax*1-0x210],0x0
  40faa4:	mov    edi,0x8
  40faa9:	call   4031a0 <malloc@plt>
  40faae:	lea    rdi,[rbp-0x210]
  40fab5:	mov    QWORD PTR [rbp-0x238],rax
  40fabc:	mov    rax,QWORD PTR [rbp-0x238]
  40fac3:	mov    QWORD PTR [rbp-0x528],rax
  40faca:	call   403230 <atoi@plt>
  40facf:	mov    rdi,QWORD PTR [rbp-0x528]
  40fad6:	mov    esi,eax
  40fad8:	call   40d1d0 <init_token_int_value@@Base>
  40fadd:	lea    rcx,[rip+0x9b5c]        # 419640 <__bss_start@@Base+0x14e8>
  40fae4:	add    rcx,0x350
  40faeb:	mov    rdx,QWORD PTR [rbp-0x238]
  40faf2:	mov    QWORD PTR [rbp-0x8],rdx
  40faf6:	mov    QWORD PTR [rbp-0x270],rcx
  40fafd:	jmp    41052a <next@@Base+0x223a>
  40fb02:	mov    rax,QWORD PTR [rbp-0x2e0]
  40fb09:	mov    rcx,QWORD PTR [rax]
  40fb0c:	inc    rcx
  40fb0f:	mov    QWORD PTR [rax],rcx
  40fb12:	movsx  edx,BYTE PTR [rbp-0x229]
  40fb19:	lea    rax,[rip+0x9e88]        # 4199a8 <__bss_start@@Base+0x1850>
  40fb20:	lea    rcx,[rip+0x9e79]        # 4199a0 <__bss_start@@Base+0x1848>
  40fb27:	lea    rsi,[rip+0x9e6a]        # 419998 <__bss_start@@Base+0x1840>
  40fb2e:	mov    edi,edx
  40fb30:	sub    edi,0x66
  40fb33:	mov    DWORD PTR [rbp-0x52c],edx
  40fb39:	mov    QWORD PTR [rbp-0x538],rcx
  40fb40:	mov    QWORD PTR [rbp-0x540],rsi
  40fb47:	mov    QWORD PTR [rbp-0x548],rax
  40fb4e:	je     40fc79 <next@@Base+0x1989>
  40fb54:	jmp    40fb59 <next@@Base+0x1869>
  40fb59:	mov    eax,DWORD PTR [rbp-0x52c]
  40fb5f:	sub    eax,0x6e
  40fb62:	mov    rcx,QWORD PTR [rbp-0x538]
  40fb69:	mov    rdx,QWORD PTR [rbp-0x540]
  40fb70:	mov    QWORD PTR [rbp-0x550],rcx
  40fb77:	mov    QWORD PTR [rbp-0x558],rdx
  40fb7e:	jne    40fd01 <next@@Base+0x1a11>
  40fb84:	jmp    40fb89 <next@@Base+0x1899>
  40fb89:	mov    rax,QWORD PTR [rbp-0x550]
  40fb90:	mov    rcx,QWORD PTR [rax]
  40fb93:	add    rcx,0x1
  40fb9a:	mov    QWORD PTR [rax],rcx
  40fb9d:	mov    dl,BYTE PTR [rbp-0x229]
  40fba3:	mov    esi,DWORD PTR [rbp-0x21c]
  40fba9:	mov    edi,esi
  40fbab:	add    edi,0x1
  40fbae:	mov    DWORD PTR [rbp-0x21c],edi
  40fbb4:	movsxd rax,esi
  40fbb7:	mov    BYTE PTR [rbp+rax*1-0x210],dl
  40fbbe:	mov    rdi,QWORD PTR [rbp-0x10]
  40fbc2:	call   40e110 <get_char@@Base>
  40fbc7:	lea    rcx,[rip+0x9a72]        # 419640 <__bss_start@@Base+0x14e8>
  40fbce:	mov    rdi,rcx
  40fbd1:	add    rdi,0x370
  40fbd8:	add    rcx,0x378
  40fbdf:	mov    BYTE PTR [rbp-0x229],al
  40fbe5:	movsx  esi,BYTE PTR [rbp-0x229]
  40fbec:	cmp    esi,0x74
  40fbef:	mov    QWORD PTR [rbp-0x560],rdi
  40fbf6:	mov    QWORD PTR [rbp-0x568],rcx
  40fbfd:	je     40fc21 <next@@Base+0x1931>
  40fc03:	mov    rax,QWORD PTR [rbp-0x560]
  40fc0a:	mov    rcx,QWORD PTR [rax]
  40fc0d:	add    rcx,0x1
  40fc14:	mov    QWORD PTR [rax],rcx
  40fc17:	mov    edi,0x1
  40fc1c:	call   403240 <exit@plt>
  40fc21:	mov    rax,QWORD PTR [rbp-0x568]
  40fc28:	mov    rcx,QWORD PTR [rax]
  40fc2b:	add    rcx,0x1
  40fc32:	mov    QWORD PTR [rax],rcx
  40fc35:	mov    edi,0x4
  40fc3a:	call   4031a0 <malloc@plt>
  40fc3f:	mov    QWORD PTR [rbp-0x238],rax
  40fc46:	mov    rax,QWORD PTR [rbp-0x238]
  40fc4d:	mov    rdi,rax
  40fc50:	call   40d180 <init_token_int_type@@Base>
  40fc55:	lea    rax,[rip+0x99e4]        # 419640 <__bss_start@@Base+0x14e8>
  40fc5c:	add    rax,0x380
  40fc62:	mov    rcx,QWORD PTR [rbp-0x238]
  40fc69:	mov    QWORD PTR [rbp-0x8],rcx
  40fc6d:	mov    QWORD PTR [rbp-0x270],rax
  40fc74:	jmp    41052a <next@@Base+0x223a>
  40fc79:	mov    rax,QWORD PTR [rbp-0x548]
  40fc80:	mov    rcx,QWORD PTR [rax]
  40fc83:	add    rcx,0x1
  40fc8a:	mov    QWORD PTR [rax],rcx
  40fc8d:	mov    dl,BYTE PTR [rbp-0x229]
  40fc93:	mov    esi,DWORD PTR [rbp-0x21c]
  40fc99:	mov    edi,esi
  40fc9b:	add    edi,0x1
  40fc9e:	mov    DWORD PTR [rbp-0x21c],edi
  40fca4:	movsxd rax,esi
  40fca7:	mov    BYTE PTR [rbp+rax*1-0x210],dl
  40fcae:	movsxd rax,DWORD PTR [rbp-0x21c]
  40fcb5:	mov    BYTE PTR [rbp+rax*1-0x210],0x0
  40fcbd:	mov    edi,0x4
  40fcc2:	call   4031a0 <malloc@plt>
  40fcc7:	mov    QWORD PTR [rbp-0x238],rax
  40fcce:	mov    rax,QWORD PTR [rbp-0x238]
  40fcd5:	mov    rdi,rax
  40fcd8:	call   40d4d0 <init_token_if@@Base>
  40fcdd:	lea    rax,[rip+0x995c]        # 419640 <__bss_start@@Base+0x14e8>
  40fce4:	add    rax,0x388
  40fcea:	mov    rcx,QWORD PTR [rbp-0x238]
  40fcf1:	mov    QWORD PTR [rbp-0x8],rcx
  40fcf5:	mov    QWORD PTR [rbp-0x270],rax
  40fcfc:	jmp    41052a <next@@Base+0x223a>
  40fd01:	mov    rax,QWORD PTR [rbp-0x558]
  40fd08:	mov    rcx,QWORD PTR [rax]
  40fd0b:	add    rcx,0x1
  40fd12:	mov    QWORD PTR [rax],rcx
  40fd15:	mov    edi,0x1
  40fd1a:	call   403240 <exit@plt>
  40fd1f:	mov    rax,QWORD PTR [rbp-0x2e8]
  40fd26:	lea    rcx,[rip+0x9913]        # 419640 <__bss_start@@Base+0x14e8>
  40fd2d:	mov    rdx,rcx
  40fd30:	add    rdx,0x390
  40fd37:	add    rcx,0x398
  40fd3e:	mov    rsi,QWORD PTR [rax]
  40fd41:	add    rsi,0x1
  40fd48:	mov    QWORD PTR [rax],rsi
  40fd4b:	movsx  edi,BYTE PTR [rbp-0x229]
  40fd52:	cmp    edi,0x61
  40fd55:	mov    QWORD PTR [rbp-0x570],rdx
  40fd5c:	mov    QWORD PTR [rbp-0x578],rcx
  40fd63:	je     40fd87 <next@@Base+0x1a97>
  40fd69:	mov    rax,QWORD PTR [rbp-0x570]
  40fd70:	mov    rcx,QWORD PTR [rax]
  40fd73:	add    rcx,0x1
  40fd7a:	mov    QWORD PTR [rax],rcx
  40fd7d:	mov    edi,0x1
  40fd82:	call   403240 <exit@plt>
  40fd87:	mov    rax,QWORD PTR [rbp-0x578]
  40fd8e:	mov    rcx,QWORD PTR [rax]
  40fd91:	add    rcx,0x1
  40fd98:	mov    QWORD PTR [rax],rcx
  40fd9b:	mov    dl,BYTE PTR [rbp-0x229]
  40fda1:	mov    esi,DWORD PTR [rbp-0x21c]
  40fda7:	mov    edi,esi
  40fda9:	add    edi,0x1
  40fdac:	mov    DWORD PTR [rbp-0x21c],edi
  40fdb2:	movsxd rax,esi
  40fdb5:	mov    BYTE PTR [rbp+rax*1-0x210],dl
  40fdbc:	mov    rdi,QWORD PTR [rbp-0x10]
  40fdc0:	call   40e110 <get_char@@Base>
  40fdc5:	lea    rcx,[rip+0x9874]        # 419640 <__bss_start@@Base+0x14e8>
  40fdcc:	mov    rdi,rcx
  40fdcf:	add    rdi,0x3a0
  40fdd6:	add    rcx,0x3a8
  40fddd:	mov    BYTE PTR [rbp-0x229],al
  40fde3:	movsx  esi,BYTE PTR [rbp-0x229]
  40fdea:	cmp    esi,0x69
  40fded:	mov    QWORD PTR [rbp-0x580],rdi
  40fdf4:	mov    QWORD PTR [rbp-0x588],rcx
  40fdfb:	je     40fe1f <next@@Base+0x1b2f>
  40fe01:	mov    rax,QWORD PTR [rbp-0x580]
  40fe08:	mov    rcx,QWORD PTR [rax]
  40fe0b:	add    rcx,0x1
  40fe12:	mov    QWORD PTR [rax],rcx
  40fe15:	mov    edi,0x1
  40fe1a:	call   403240 <exit@plt>
  40fe1f:	mov    rax,QWORD PTR [rbp-0x588]
  40fe26:	mov    rcx,QWORD PTR [rax]
  40fe29:	add    rcx,0x1
  40fe30:	mov    QWORD PTR [rax],rcx
  40fe33:	mov    dl,BYTE PTR [rbp-0x229]
  40fe39:	mov    esi,DWORD PTR [rbp-0x21c]
  40fe3f:	mov    edi,esi
  40fe41:	add    edi,0x1
  40fe44:	mov    DWORD PTR [rbp-0x21c],edi
  40fe4a:	movsxd rax,esi
  40fe4d:	mov    BYTE PTR [rbp+rax*1-0x210],dl
  40fe54:	mov    rdi,QWORD PTR [rbp-0x10]
  40fe58:	call   40e110 <get_char@@Base>
  40fe5d:	lea    rcx,[rip+0x97dc]        # 419640 <__bss_start@@Base+0x14e8>
  40fe64:	mov    rdi,rcx
  40fe67:	add    rdi,0x3b0
  40fe6e:	add    rcx,0x3b8
  40fe75:	mov    BYTE PTR [rbp-0x229],al
  40fe7b:	movsx  esi,BYTE PTR [rbp-0x229]
  40fe82:	cmp    esi,0x6e
  40fe85:	mov    QWORD PTR [rbp-0x590],rdi
  40fe8c:	mov    QWORD PTR [rbp-0x598],rcx
  40fe93:	je     40feb7 <next@@Base+0x1bc7>
  40fe99:	mov    rax,QWORD PTR [rbp-0x590]
  40fea0:	mov    rcx,QWORD PTR [rax]
  40fea3:	add    rcx,0x1
  40feaa:	mov    QWORD PTR [rax],rcx
  40fead:	mov    edi,0x1
  40feb2:	call   403240 <exit@plt>
  40feb7:	mov    rax,QWORD PTR [rbp-0x598]
  40febe:	mov    rcx,QWORD PTR [rax]
  40fec1:	add    rcx,0x1
  40fec8:	mov    QWORD PTR [rax],rcx
  40fecb:	mov    dl,BYTE PTR [rbp-0x229]
  40fed1:	mov    esi,DWORD PTR [rbp-0x21c]
  40fed7:	mov    edi,esi
  40fed9:	add    edi,0x1
  40fedc:	mov    DWORD PTR [rbp-0x21c],edi
  40fee2:	movsxd rax,esi
  40fee5:	mov    BYTE PTR [rbp+rax*1-0x210],dl
  40feec:	movsxd rax,DWORD PTR [rbp-0x21c]
  40fef3:	mov    BYTE PTR [rbp+rax*1-0x210],0x0
  40fefb:	movsxd rax,DWORD PTR [rbp-0x21c]
  40ff02:	shl    rax,0x0
  40ff06:	add    rax,0x1
  40ff0c:	mov    rdi,rax
  40ff0f:	call   4031a0 <malloc@plt>
  40ff14:	lea    rsi,[rbp-0x210]
  40ff1b:	mov    QWORD PTR [rbp-0x218],rax
  40ff22:	mov    rdi,QWORD PTR [rbp-0x218]
  40ff29:	movsxd rdx,DWORD PTR [rbp-0x21c]
  40ff30:	call   403070 <strncpy@plt>
  40ff35:	mov    rcx,QWORD PTR [rbp-0x218]
  40ff3c:	movsxd rdx,DWORD PTR [rbp-0x21c]
  40ff43:	mov    BYTE PTR [rcx+rdx*1],0x0
  40ff47:	mov    edi,0x10
  40ff4c:	mov    QWORD PTR [rbp-0x5a0],rax
  40ff53:	call   4031a0 <malloc@plt>
  40ff58:	mov    QWORD PTR [rbp-0x238],rax
  40ff5f:	mov    rax,QWORD PTR [rbp-0x238]
  40ff66:	mov    rsi,QWORD PTR [rbp-0x218]
  40ff6d:	mov    rdi,rax
  40ff70:	call   40d230 <init_token_function@@Base>
  40ff75:	lea    rax,[rip+0x96c4]        # 419640 <__bss_start@@Base+0x14e8>
  40ff7c:	add    rax,0x3c0
  40ff82:	mov    rcx,QWORD PTR [rbp-0x238]
  40ff89:	mov    QWORD PTR [rbp-0x8],rcx
  40ff8d:	mov    QWORD PTR [rbp-0x270],rax
  40ff94:	jmp    41052a <next@@Base+0x223a>
  40ff99:	mov    rax,QWORD PTR [rbp-0x2f0]
  40ffa0:	lea    rcx,[rip+0x9699]        # 419640 <__bss_start@@Base+0x14e8>
  40ffa7:	mov    rdx,rcx
  40ffaa:	add    rdx,0x3c8
  40ffb1:	add    rcx,0x3d0
  40ffb8:	mov    rsi,QWORD PTR [rax]
  40ffbb:	add    rsi,0x1
  40ffc2:	mov    QWORD PTR [rax],rsi
  40ffc5:	movsx  edi,BYTE PTR [rbp-0x229]
  40ffcc:	cmp    edi,0x65
  40ffcf:	mov    QWORD PTR [rbp-0x5a8],rdx
  40ffd6:	mov    QWORD PTR [rbp-0x5b0],rcx
  40ffdd:	je     410001 <next@@Base+0x1d11>
  40ffe3:	mov    rax,QWORD PTR [rbp-0x5a8]
  40ffea:	mov    rcx,QWORD PTR [rax]
  40ffed:	add    rcx,0x1
  40fff4:	mov    QWORD PTR [rax],rcx
  40fff7:	mov    edi,0x1
  40fffc:	call   403240 <exit@plt>
  410001:	mov    rax,QWORD PTR [rbp-0x5b0]
  410008:	mov    rcx,QWORD PTR [rax]
  41000b:	add    rcx,0x1
  410012:	mov    QWORD PTR [rax],rcx
  410015:	mov    dl,BYTE PTR [rbp-0x229]
  41001b:	mov    esi,DWORD PTR [rbp-0x21c]
  410021:	mov    edi,esi
  410023:	add    edi,0x1
  410026:	mov    DWORD PTR [rbp-0x21c],edi
  41002c:	movsxd rax,esi
  41002f:	mov    BYTE PTR [rbp+rax*1-0x210],dl
  410036:	mov    rdi,QWORD PTR [rbp-0x10]
  41003a:	call   40e110 <get_char@@Base>
  41003f:	lea    rcx,[rip+0x95fa]        # 419640 <__bss_start@@Base+0x14e8>
  410046:	mov    rdi,rcx
  410049:	add    rdi,0x3d8
  410050:	add    rcx,0x3e0
  410057:	mov    BYTE PTR [rbp-0x229],al
  41005d:	movsx  esi,BYTE PTR [rbp-0x229]
  410064:	cmp    esi,0x74
  410067:	mov    QWORD PTR [rbp-0x5b8],rdi
  41006e:	mov    QWORD PTR [rbp-0x5c0],rcx
  410075:	je     410099 <next@@Base+0x1da9>
  41007b:	mov    rax,QWORD PTR [rbp-0x5b8]
  410082:	mov    rcx,QWORD PTR [rax]
  410085:	add    rcx,0x1
  41008c:	mov    QWORD PTR [rax],rcx
  41008f:	mov    edi,0x1
  410094:	call   403240 <exit@plt>
  410099:	mov    rax,QWORD PTR [rbp-0x5c0]
  4100a0:	mov    rcx,QWORD PTR [rax]
  4100a3:	add    rcx,0x1
  4100aa:	mov    QWORD PTR [rax],rcx
  4100ad:	mov    dl,BYTE PTR [rbp-0x229]
  4100b3:	mov    esi,DWORD PTR [rbp-0x21c]
  4100b9:	mov    edi,esi
  4100bb:	add    edi,0x1
  4100be:	mov    DWORD PTR [rbp-0x21c],edi
  4100c4:	movsxd rax,esi
  4100c7:	mov    BYTE PTR [rbp+rax*1-0x210],dl
  4100ce:	mov    rdi,QWORD PTR [rbp-0x10]
  4100d2:	call   40e110 <get_char@@Base>
  4100d7:	lea    rcx,[rip+0x9562]        # 419640 <__bss_start@@Base+0x14e8>
  4100de:	mov    rdi,rcx
  4100e1:	add    rdi,0x3e8
  4100e8:	add    rcx,0x3f0
  4100ef:	mov    BYTE PTR [rbp-0x229],al
  4100f5:	movsx  esi,BYTE PTR [rbp-0x229]
  4100fc:	cmp    esi,0x75
  4100ff:	mov    QWORD PTR [rbp-0x5c8],rdi
  410106:	mov    QWORD PTR [rbp-0x5d0],rcx
  41010d:	je     410131 <next@@Base+0x1e41>
  410113:	mov    rax,QWORD PTR [rbp-0x5c8]
  41011a:	mov    rcx,QWORD PTR [rax]
  41011d:	add    rcx,0x1
  410124:	mov    QWORD PTR [rax],rcx
  410127:	mov    edi,0x1
  41012c:	call   403240 <exit@plt>
  410131:	mov    rax,QWORD PTR [rbp-0x5d0]
  410138:	mov    rcx,QWORD PTR [rax]
  41013b:	add    rcx,0x1
  410142:	mov    QWORD PTR [rax],rcx
  410145:	mov    dl,BYTE PTR [rbp-0x229]
  41014b:	mov    esi,DWORD PTR [rbp-0x21c]
  410151:	mov    edi,esi
  410153:	add    edi,0x1
  410156:	mov    DWORD PTR [rbp-0x21c],edi
  41015c:	movsxd rax,esi
  41015f:	mov    BYTE PTR [rbp+rax*1-0x210],dl
  410166:	mov    rdi,QWORD PTR [rbp-0x10]
  41016a:	call   40e110 <get_char@@Base>
  41016f:	lea    rcx,[rip+0x94ca]        # 419640 <__bss_start@@Base+0x14e8>
  410176:	mov    rdi,rcx
  410179:	add    rdi,0x3f8
  410180:	add    rcx,0x400
  410187:	mov    BYTE PTR [rbp-0x229],al
  41018d:	movsx  esi,BYTE PTR [rbp-0x229]
  410194:	cmp    esi,0x72
  410197:	mov    QWORD PTR [rbp-0x5d8],rdi
  41019e:	mov    QWORD PTR [rbp-0x5e0],rcx
  4101a5:	je     4101c9 <next@@Base+0x1ed9>
  4101ab:	mov    rax,QWORD PTR [rbp-0x5d8]
  4101b2:	mov    rcx,QWORD PTR [rax]
  4101b5:	add    rcx,0x1
  4101bc:	mov    QWORD PTR [rax],rcx
  4101bf:	mov    edi,0x1
  4101c4:	call   403240 <exit@plt>
  4101c9:	mov    rax,QWORD PTR [rbp-0x5e0]
  4101d0:	mov    rcx,QWORD PTR [rax]
  4101d3:	add    rcx,0x1
  4101da:	mov    QWORD PTR [rax],rcx
  4101dd:	mov    dl,BYTE PTR [rbp-0x229]
  4101e3:	mov    esi,DWORD PTR [rbp-0x21c]
  4101e9:	mov    edi,esi
  4101eb:	add    edi,0x1
  4101ee:	mov    DWORD PTR [rbp-0x21c],edi
  4101f4:	movsxd rax,esi
  4101f7:	mov    BYTE PTR [rbp+rax*1-0x210],dl
  4101fe:	mov    rdi,QWORD PTR [rbp-0x10]
  410202:	call   40e110 <get_char@@Base>
  410207:	lea    rcx,[rip+0x9432]        # 419640 <__bss_start@@Base+0x14e8>
  41020e:	mov    rdi,rcx
  410211:	add    rdi,0x408
  410218:	add    rcx,0x410
  41021f:	mov    BYTE PTR [rbp-0x229],al
  410225:	movsx  esi,BYTE PTR [rbp-0x229]
  41022c:	cmp    esi,0x6e
  41022f:	mov    QWORD PTR [rbp-0x5e8],rdi
  410236:	mov    QWORD PTR [rbp-0x5f0],rcx
  41023d:	je     410261 <next@@Base+0x1f71>
  410243:	mov    rax,QWORD PTR [rbp-0x5e8]
  41024a:	mov    rcx,QWORD PTR [rax]
  41024d:	add    rcx,0x1
  410254:	mov    QWORD PTR [rax],rcx
  410257:	mov    edi,0x1
  41025c:	call   403240 <exit@plt>
  410261:	mov    rax,QWORD PTR [rbp-0x5f0]
  410268:	mov    rcx,QWORD PTR [rax]
  41026b:	add    rcx,0x1
  410272:	mov    QWORD PTR [rax],rcx
  410275:	mov    edi,0x4
  41027a:	call   4031a0 <malloc@plt>
  41027f:	mov    QWORD PTR [rbp-0x238],rax
  410286:	mov    rax,QWORD PTR [rbp-0x238]
  41028d:	mov    rdi,rax
  410290:	call   40d3e0 <init_token_return@@Base>
  410295:	lea    rax,[rip+0x93a4]        # 419640 <__bss_start@@Base+0x14e8>
  41029c:	add    rax,0x418
  4102a2:	mov    rcx,QWORD PTR [rbp-0x238]
  4102a9:	mov    QWORD PTR [rbp-0x8],rcx
  4102ad:	mov    QWORD PTR [rbp-0x270],rax
  4102b4:	jmp    41052a <next@@Base+0x223a>
  4102b9:	mov    rax,QWORD PTR [rbp-0x2f8]
  4102c0:	lea    rcx,[rip+0x9379]        # 419640 <__bss_start@@Base+0x14e8>
  4102c7:	mov    rdx,rcx
  4102ca:	add    rdx,0x420
  4102d1:	add    rcx,0x428
  4102d8:	mov    rsi,QWORD PTR [rax]
  4102db:	add    rsi,0x1
  4102e2:	mov    QWORD PTR [rax],rsi
  4102e5:	movsx  edi,BYTE PTR [rbp-0x229]
  4102ec:	cmp    edi,0x6c
  4102ef:	mov    QWORD PTR [rbp-0x5f8],rdx
  4102f6:	mov    QWORD PTR [rbp-0x600],rcx
  4102fd:	je     410321 <next@@Base+0x2031>
  410303:	mov    rax,QWORD PTR [rbp-0x5f8]
  41030a:	mov    rcx,QWORD PTR [rax]
  41030d:	add    rcx,0x1
  410314:	mov    QWORD PTR [rax],rcx
  410317:	mov    edi,0x1
  41031c:	call   403240 <exit@plt>
  410321:	mov    rax,QWORD PTR [rbp-0x600]
  410328:	mov    rcx,QWORD PTR [rax]
  41032b:	add    rcx,0x1
  410332:	mov    QWORD PTR [rax],rcx
  410335:	mov    dl,BYTE PTR [rbp-0x229]
  41033b:	mov    esi,DWORD PTR [rbp-0x21c]
  410341:	mov    edi,esi
  410343:	add    edi,0x1
  410346:	mov    DWORD PTR [rbp-0x21c],edi
  41034c:	movsxd rax,esi
  41034f:	mov    BYTE PTR [rbp+rax*1-0x210],dl
  410356:	mov    rdi,QWORD PTR [rbp-0x10]
  41035a:	call   40e110 <get_char@@Base>
  41035f:	lea    rcx,[rip+0x92da]        # 419640 <__bss_start@@Base+0x14e8>
  410366:	mov    rdi,rcx
  410369:	add    rdi,0x430
  410370:	add    rcx,0x438
  410377:	mov    BYTE PTR [rbp-0x229],al
  41037d:	movsx  esi,BYTE PTR [rbp-0x229]
  410384:	cmp    esi,0x73
  410387:	mov    QWORD PTR [rbp-0x608],rdi
  41038e:	mov    QWORD PTR [rbp-0x610],rcx
  410395:	je     4103b9 <next@@Base+0x20c9>
  41039b:	mov    rax,QWORD PTR [rbp-0x608]
  4103a2:	mov    rcx,QWORD PTR [rax]
  4103a5:	add    rcx,0x1
  4103ac:	mov    QWORD PTR [rax],rcx
  4103af:	mov    edi,0x1
  4103b4:	call   403240 <exit@plt>
  4103b9:	mov    rax,QWORD PTR [rbp-0x610]
  4103c0:	mov    rcx,QWORD PTR [rax]
  4103c3:	add    rcx,0x1
  4103ca:	mov    QWORD PTR [rax],rcx
  4103cd:	mov    dl,BYTE PTR [rbp-0x229]
  4103d3:	mov    esi,DWORD PTR [rbp-0x21c]
  4103d9:	mov    edi,esi
  4103db:	add    edi,0x1
  4103de:	mov    DWORD PTR [rbp-0x21c],edi
  4103e4:	movsxd rax,esi
  4103e7:	mov    BYTE PTR [rbp+rax*1-0x210],dl
  4103ee:	mov    rdi,QWORD PTR [rbp-0x10]
  4103f2:	call   40e110 <get_char@@Base>
  4103f7:	lea    rcx,[rip+0x9242]        # 419640 <__bss_start@@Base+0x14e8>
  4103fe:	mov    rdi,rcx
  410401:	add    rdi,0x440
  410408:	add    rcx,0x448
  41040f:	mov    BYTE PTR [rbp-0x229],al
  410415:	movsx  esi,BYTE PTR [rbp-0x229]
  41041c:	cmp    esi,0x65
  41041f:	mov    QWORD PTR [rbp-0x618],rdi
  410426:	mov    QWORD PTR [rbp-0x620],rcx
  41042d:	je     410451 <next@@Base+0x2161>
  410433:	mov    rax,QWORD PTR [rbp-0x618]
  41043a:	mov    rcx,QWORD PTR [rax]
  41043d:	add    rcx,0x1
  410444:	mov    QWORD PTR [rax],rcx
  410447:	mov    edi,0x1
  41044c:	call   403240 <exit@plt>
  410451:	mov    rax,QWORD PTR [rbp-0x620]
  410458:	mov    rcx,QWORD PTR [rax]
  41045b:	add    rcx,0x1
  410462:	mov    QWORD PTR [rax],rcx
  410465:	mov    edi,0x4
  41046a:	call   4031a0 <malloc@plt>
  41046f:	mov    QWORD PTR [rbp-0x238],rax
  410476:	mov    rax,QWORD PTR [rbp-0x238]
  41047d:	mov    rdi,rax
  410480:	call   40d520 <init_token_else@@Base>
  410485:	lea    rax,[rip+0x91b4]        # 419640 <__bss_start@@Base+0x14e8>
  41048c:	add    rax,0x450
  410492:	mov    rcx,QWORD PTR [rbp-0x238]
  410499:	mov    QWORD PTR [rbp-0x8],rcx
  41049d:	mov    QWORD PTR [rbp-0x270],rax
  4104a4:	jmp    41052a <next@@Base+0x223a>
  4104a9:	mov    rax,QWORD PTR [rbp-0x2c8]
  4104b0:	lea    rcx,[rip+0x9189]        # 419640 <__bss_start@@Base+0x14e8>
  4104b7:	add    rcx,0x458
  4104be:	mov    rdx,QWORD PTR [rax]
  4104c1:	add    rdx,0x1
  4104c8:	mov    QWORD PTR [rax],rdx
  4104cb:	mov    QWORD PTR [rbp-0x278],rcx
  4104d2:	jmp    40e459 <next@@Base+0x169>
  4104d7:	mov    rax,QWORD PTR [rbp-0x288]
  4104de:	mov    rcx,QWORD PTR [rax]
  4104e1:	add    rcx,0x1
  4104e8:	mov    QWORD PTR [rax],rcx
  4104eb:	mov    edi,0x4
  4104f0:	call   4031a0 <malloc@plt>
  4104f5:	mov    QWORD PTR [rbp-0x238],rax
  4104fc:	mov    rax,QWORD PTR [rbp-0x238]
  410503:	mov    rdi,rax
  410506:	call   40d480 <init_token_eof@@Base>
  41050b:	lea    rax,[rip+0x912e]        # 419640 <__bss_start@@Base+0x14e8>
  410512:	add    rax,0x460
  410518:	mov    rcx,QWORD PTR [rbp-0x238]
  41051f:	mov    QWORD PTR [rbp-0x8],rcx
  410523:	mov    QWORD PTR [rbp-0x270],rax
  41052a:	mov    rax,QWORD PTR [rbp-0x270]
  410531:	mov    rcx,QWORD PTR [rax]
  410534:	add    rcx,0x1
  41053b:	mov    QWORD PTR [rax],rcx
  41053e:	mov    rax,QWORD PTR [rip+0x9563]        # 419aa8 <__bss_start@@Base+0x1950>
  410545:	add    rax,0x1
  41054b:	mov    QWORD PTR [rip+0x9556],rax        # 419aa8 <__bss_start@@Base+0x1950>
  410552:	mov    rax,QWORD PTR [rbp-0x8]
  410556:	add    rsp,0x620
  41055d:	pop    rbp
  41055e:	ret    
  41055f:	nop
  410560:	sub    rsp,0x38
  410564:	xor    eax,eax
  410566:	mov    DWORD PTR [rsp+0x34],eax
  41056a:	jmp    41056f <next@@Base+0x227f>
  41056f:	mov    eax,DWORD PTR [rsp+0x34]
  410573:	movsxd rcx,eax
  410576:	imul   rcx,rcx,0x30
  41057d:	lea    rdx,[rip+0x784c]        # 417dd0 <UnitySizeMask@@Base+0x47d0>
  410584:	add    rdx,rcx
  410587:	mov    rdi,QWORD PTR [rdx]
  41058a:	mov    rsi,QWORD PTR [rdx+0x8]
  41058e:	mov    r8d,DWORD PTR [rdx+0x10]
  410592:	mov    QWORD PTR [rsp+0x28],rdx
  410597:	mov    edx,r8d
  41059a:	mov    DWORD PTR [rsp+0x24],eax
  41059e:	call   410d80 <next@@Base+0x2a90>
  4105a3:	xor    eax,eax
  4105a5:	mov    rcx,QWORD PTR [rsp+0x28]
  4105aa:	mov    edx,DWORD PTR [rcx+0x18]
  4105ad:	mov    rsi,QWORD PTR [rcx+0x20]
  4105b1:	mov    rdi,QWORD PTR [rcx+0x28]
  4105b5:	cmp    eax,edx
  4105b7:	mov    DWORD PTR [rsp+0x20],edx
  4105bb:	mov    QWORD PTR [rsp+0x18],rsi
  4105c0:	mov    QWORD PTR [rsp+0x10],rdi
  4105c5:	mov    DWORD PTR [rsp+0xc],eax
  4105c9:	jge    41063d <next@@Base+0x234d>
  4105cf:	mov    eax,DWORD PTR [rsp+0xc]
  4105d3:	movsxd rcx,eax
  4105d6:	shl    rcx,0x5
  4105da:	mov    rdx,QWORD PTR [rsp+0x18]
  4105df:	add    rdx,rcx
  4105e2:	mov    edi,DWORD PTR [rdx]
  4105e4:	mov    rsi,QWORD PTR [rdx+0x8]
  4105e8:	mov    r8d,DWORD PTR [rdx+0x10]
  4105ec:	mov    r9b,BYTE PTR [rdx+0x14]
  4105f0:	mov    r10d,DWORD PTR [rdx+0x18]
  4105f4:	mov    edx,r8d
  4105f7:	movzx  ecx,r9b
  4105fb:	mov    r8d,r10d
  4105fe:	mov    DWORD PTR [rsp+0x8],eax
  410602:	call   4111d0 <next@@Base+0x2ee0>
  410607:	mov    eax,DWORD PTR [rsp+0x8]
  41060b:	movsxd rsi,eax
  41060e:	shl    rsi,0x4
  410612:	mov    r11,QWORD PTR [rsp+0x10]
  410617:	add    r11,rsi
  41061a:	mov    edi,DWORD PTR [r11]
  41061d:	mov    rsi,QWORD PTR [r11+0x8]
  410621:	call   4115f0 <next@@Base+0x3300>
  410626:	mov    eax,DWORD PTR [rsp+0x8]
  41062a:	add    eax,0x1
  41062d:	mov    ecx,DWORD PTR [rsp+0x20]
  410631:	cmp    eax,ecx
  410633:	mov    DWORD PTR [rsp+0xc],eax
  410637:	jl     4105cf <next@@Base+0x22df>
  41063d:	call   411a00 <next@@Base+0x3710>
  410642:	call   4121a0 <next@@Base+0x3eb0>
  410647:	mov    eax,DWORD PTR [rsp+0x24]
  41064b:	add    eax,0x1
  41064e:	cmp    eax,0x1
  410651:	mov    DWORD PTR [rsp+0x34],eax
  410655:	jl     41056f <next@@Base+0x227f>
  41065b:	add    rsp,0x38
  41065f:	ret    
  410660:	push   rax
  410661:	call   410560 <next@@Base+0x2270>
  410666:	mov    QWORD PTR [rip+0x8f27],0x0        # 419598 <__bss_start@@Base+0x1440>
  410671:	mov    QWORD PTR [rip+0x8f14],0x0        # 419590 <__bss_start@@Base+0x1438>
  41067c:	mov    QWORD PTR [rip+0x8f39],0x0        # 4195c0 <__bss_start@@Base+0x1468>
  410687:	mov    QWORD PTR [rip+0x8f26],0x0        # 4195b8 <__bss_start@@Base+0x1460>
  410692:	mov    QWORD PTR [rip+0x8f13],0x0        # 4195b0 <__bss_start@@Base+0x1458>
  41069d:	mov    QWORD PTR [rip+0x8f00],0x0        # 4195a8 <__bss_start@@Base+0x1450>
  4106a8:	mov    QWORD PTR [rip+0x8eed],0x0        # 4195a0 <__bss_start@@Base+0x1448>
  4106b3:	mov    QWORD PTR [rip+0x8f12],0x0        # 4195d0 <__bss_start@@Base+0x1478>
  4106be:	mov    QWORD PTR [rip+0x8eff],0x0        # 4195c8 <__bss_start@@Base+0x1470>
  4106c9:	mov    QWORD PTR [rip+0x8f0c],0x0        # 4195e0 <__bss_start@@Base+0x1488>
  4106d4:	mov    QWORD PTR [rip+0x8ef9],0x0        # 4195d8 <__bss_start@@Base+0x1480>
  4106df:	mov    QWORD PTR [rip+0x8f06],0x0        # 4195f0 <__bss_start@@Base+0x1498>
  4106ea:	mov    QWORD PTR [rip+0x8ef3],0x0        # 4195e8 <__bss_start@@Base+0x1490>
  4106f5:	mov    QWORD PTR [rip+0x8f20],0x0        # 419620 <__bss_start@@Base+0x14c8>
  410700:	mov    QWORD PTR [rip+0x8f0d],0x0        # 419618 <__bss_start@@Base+0x14c0>
  41070b:	mov    QWORD PTR [rip+0x8efa],0x0        # 419610 <__bss_start@@Base+0x14b8>
  410716:	mov    QWORD PTR [rip+0x8ee7],0x0        # 419608 <__bss_start@@Base+0x14b0>
  410721:	mov    QWORD PTR [rip+0x8ed4],0x0        # 419600 <__bss_start@@Base+0x14a8>
  41072c:	mov    QWORD PTR [rip+0x8ef9],0x0        # 419630 <__bss_start@@Base+0x14d8>
  410737:	mov    QWORD PTR [rip+0x8ee6],0x0        # 419628 <__bss_start@@Base+0x14d0>
  410742:	mov    QWORD PTR [rip+0x90eb],0x0        # 419838 <__bss_start@@Base+0x16e0>
  41074d:	mov    QWORD PTR [rip+0x90d8],0x0        # 419830 <__bss_start@@Base+0x16d8>
  410758:	mov    QWORD PTR [rip+0x90c5],0x0        # 419828 <__bss_start@@Base+0x16d0>
  410763:	mov    QWORD PTR [rip+0x90b2],0x0        # 419820 <__bss_start@@Base+0x16c8>
  41076e:	mov    QWORD PTR [rip+0x909f],0x0        # 419818 <__bss_start@@Base+0x16c0>
  410779:	mov    QWORD PTR [rip+0x908c],0x0        # 419810 <__bss_start@@Base+0x16b8>
  410784:	mov    QWORD PTR [rip+0x9079],0x0        # 419808 <__bss_start@@Base+0x16b0>
  41078f:	mov    QWORD PTR [rip+0x9066],0x0        # 419800 <__bss_start@@Base+0x16a8>
  41079a:	mov    QWORD PTR [rip+0x9053],0x0        # 4197f8 <__bss_start@@Base+0x16a0>
  4107a5:	mov    QWORD PTR [rip+0x9040],0x0        # 4197f0 <__bss_start@@Base+0x1698>
  4107b0:	mov    QWORD PTR [rip+0x902d],0x0        # 4197e8 <__bss_start@@Base+0x1690>
  4107bb:	mov    QWORD PTR [rip+0x901a],0x0        # 4197e0 <__bss_start@@Base+0x1688>
  4107c6:	mov    QWORD PTR [rip+0x9007],0x0        # 4197d8 <__bss_start@@Base+0x1680>
  4107d1:	mov    QWORD PTR [rip+0x8ff4],0x0        # 4197d0 <__bss_start@@Base+0x1678>
  4107dc:	mov    QWORD PTR [rip+0x8fe1],0x0        # 4197c8 <__bss_start@@Base+0x1670>
  4107e7:	mov    QWORD PTR [rip+0x8fce],0x0        # 4197c0 <__bss_start@@Base+0x1668>
  4107f2:	mov    QWORD PTR [rip+0x8fbb],0x0        # 4197b8 <__bss_start@@Base+0x1660>
  4107fd:	mov    QWORD PTR [rip+0x8fa8],0x0        # 4197b0 <__bss_start@@Base+0x1658>
  410808:	mov    QWORD PTR [rip+0x8f95],0x0        # 4197a8 <__bss_start@@Base+0x1650>
  410813:	mov    QWORD PTR [rip+0x8f82],0x0        # 4197a0 <__bss_start@@Base+0x1648>
  41081e:	mov    QWORD PTR [rip+0x8f6f],0x0        # 419798 <__bss_start@@Base+0x1640>
  410829:	mov    QWORD PTR [rip+0x8f5c],0x0        # 419790 <__bss_start@@Base+0x1638>
  410834:	mov    QWORD PTR [rip+0x8f49],0x0        # 419788 <__bss_start@@Base+0x1630>
  41083f:	mov    QWORD PTR [rip+0x8f36],0x0        # 419780 <__bss_start@@Base+0x1628>
  41084a:	mov    QWORD PTR [rip+0x8f23],0x0        # 419778 <__bss_start@@Base+0x1620>
  410855:	mov    QWORD PTR [rip+0x8f10],0x0        # 419770 <__bss_start@@Base+0x1618>
  410860:	mov    QWORD PTR [rip+0x8efd],0x0        # 419768 <__bss_start@@Base+0x1610>
  41086b:	mov    QWORD PTR [rip+0x8eea],0x0        # 419760 <__bss_start@@Base+0x1608>
  410876:	mov    QWORD PTR [rip+0x8ed7],0x0        # 419758 <__bss_start@@Base+0x1600>
  410881:	mov    QWORD PTR [rip+0x8ec4],0x0        # 419750 <__bss_start@@Base+0x15f8>
  41088c:	mov    QWORD PTR [rip+0x8eb1],0x0        # 419748 <__bss_start@@Base+0x15f0>
  410897:	mov    QWORD PTR [rip+0x8e9e],0x0        # 419740 <__bss_start@@Base+0x15e8>
  4108a2:	mov    QWORD PTR [rip+0x8e8b],0x0        # 419738 <__bss_start@@Base+0x15e0>
  4108ad:	mov    QWORD PTR [rip+0x8e78],0x0        # 419730 <__bss_start@@Base+0x15d8>
  4108b8:	mov    QWORD PTR [rip+0x8e65],0x0        # 419728 <__bss_start@@Base+0x15d0>
  4108c3:	mov    QWORD PTR [rip+0x8e52],0x0        # 419720 <__bss_start@@Base+0x15c8>
  4108ce:	mov    QWORD PTR [rip+0x8e3f],0x0        # 419718 <__bss_start@@Base+0x15c0>
  4108d9:	mov    QWORD PTR [rip+0x8e2c],0x0        # 419710 <__bss_start@@Base+0x15b8>
  4108e4:	mov    QWORD PTR [rip+0x8e19],0x0        # 419708 <__bss_start@@Base+0x15b0>
  4108ef:	mov    QWORD PTR [rip+0x8e06],0x0        # 419700 <__bss_start@@Base+0x15a8>
  4108fa:	mov    QWORD PTR [rip+0x8df3],0x0        # 4196f8 <__bss_start@@Base+0x15a0>
  410905:	mov    QWORD PTR [rip+0x8de0],0x0        # 4196f0 <__bss_start@@Base+0x1598>
  410910:	mov    QWORD PTR [rip+0x8dcd],0x0        # 4196e8 <__bss_start@@Base+0x1590>
  41091b:	mov    QWORD PTR [rip+0x8dba],0x0        # 4196e0 <__bss_start@@Base+0x1588>
  410926:	mov    QWORD PTR [rip+0x8da7],0x0        # 4196d8 <__bss_start@@Base+0x1580>
  410931:	mov    QWORD PTR [rip+0x8d94],0x0        # 4196d0 <__bss_start@@Base+0x1578>
  41093c:	mov    QWORD PTR [rip+0x8d81],0x0        # 4196c8 <__bss_start@@Base+0x1570>
  410947:	mov    QWORD PTR [rip+0x8d6e],0x0        # 4196c0 <__bss_start@@Base+0x1568>
  410952:	mov    QWORD PTR [rip+0x8d5b],0x0        # 4196b8 <__bss_start@@Base+0x1560>
  41095d:	mov    QWORD PTR [rip+0x8d48],0x0        # 4196b0 <__bss_start@@Base+0x1558>
  410968:	mov    QWORD PTR [rip+0x8d35],0x0        # 4196a8 <__bss_start@@Base+0x1550>
  410973:	mov    QWORD PTR [rip+0x8d22],0x0        # 4196a0 <__bss_start@@Base+0x1548>
  41097e:	mov    QWORD PTR [rip+0x8d0f],0x0        # 419698 <__bss_start@@Base+0x1540>
  410989:	mov    QWORD PTR [rip+0x8cfc],0x0        # 419690 <__bss_start@@Base+0x1538>
  410994:	mov    QWORD PTR [rip+0x8ce9],0x0        # 419688 <__bss_start@@Base+0x1530>
  41099f:	mov    QWORD PTR [rip+0x8cd6],0x0        # 419680 <__bss_start@@Base+0x1528>
  4109aa:	mov    QWORD PTR [rip+0x8cc3],0x0        # 419678 <__bss_start@@Base+0x1520>
  4109b5:	mov    QWORD PTR [rip+0x8cb0],0x0        # 419670 <__bss_start@@Base+0x1518>
  4109c0:	mov    QWORD PTR [rip+0x8c9d],0x0        # 419668 <__bss_start@@Base+0x1510>
  4109cb:	mov    QWORD PTR [rip+0x8c8a],0x0        # 419660 <__bss_start@@Base+0x1508>
  4109d6:	mov    QWORD PTR [rip+0x8c77],0x0        # 419658 <__bss_start@@Base+0x1500>
  4109e1:	mov    QWORD PTR [rip+0x8c64],0x0        # 419650 <__bss_start@@Base+0x14f8>
  4109ec:	mov    QWORD PTR [rip+0x8c51],0x0        # 419648 <__bss_start@@Base+0x14f0>
  4109f7:	mov    QWORD PTR [rip+0x8c3e],0x0        # 419640 <__bss_start@@Base+0x14e8>
  410a02:	mov    QWORD PTR [rip+0x902b],0x0        # 419a38 <__bss_start@@Base+0x18e0>
  410a0d:	mov    QWORD PTR [rip+0x9018],0x0        # 419a30 <__bss_start@@Base+0x18d8>
  410a18:	mov    QWORD PTR [rip+0x9005],0x0        # 419a28 <__bss_start@@Base+0x18d0>
  410a23:	mov    QWORD PTR [rip+0x8ff2],0x0        # 419a20 <__bss_start@@Base+0x18c8>
  410a2e:	mov    QWORD PTR [rip+0x8fdf],0x0        # 419a18 <__bss_start@@Base+0x18c0>
  410a39:	mov    QWORD PTR [rip+0x8fcc],0x0        # 419a10 <__bss_start@@Base+0x18b8>
  410a44:	mov    QWORD PTR [rip+0x8fb9],0x0        # 419a08 <__bss_start@@Base+0x18b0>
  410a4f:	mov    QWORD PTR [rip+0x8fa6],0x0        # 419a00 <__bss_start@@Base+0x18a8>
  410a5a:	mov    QWORD PTR [rip+0x8f93],0x0        # 4199f8 <__bss_start@@Base+0x18a0>
  410a65:	mov    QWORD PTR [rip+0x8f80],0x0        # 4199f0 <__bss_start@@Base+0x1898>
  410a70:	mov    QWORD PTR [rip+0x8f6d],0x0        # 4199e8 <__bss_start@@Base+0x1890>
  410a7b:	mov    QWORD PTR [rip+0x8f5a],0x0        # 4199e0 <__bss_start@@Base+0x1888>
  410a86:	mov    QWORD PTR [rip+0x8f47],0x0        # 4199d8 <__bss_start@@Base+0x1880>
  410a91:	mov    QWORD PTR [rip+0x8f34],0x0        # 4199d0 <__bss_start@@Base+0x1878>
  410a9c:	mov    QWORD PTR [rip+0x8f21],0x0        # 4199c8 <__bss_start@@Base+0x1870>
  410aa7:	mov    QWORD PTR [rip+0x8f0e],0x0        # 4199c0 <__bss_start@@Base+0x1868>
  410ab2:	mov    QWORD PTR [rip+0x8efb],0x0        # 4199b8 <__bss_start@@Base+0x1860>
  410abd:	mov    QWORD PTR [rip+0x8ee8],0x0        # 4199b0 <__bss_start@@Base+0x1858>
  410ac8:	mov    QWORD PTR [rip+0x8ed5],0x0        # 4199a8 <__bss_start@@Base+0x1850>
  410ad3:	mov    QWORD PTR [rip+0x8ec2],0x0        # 4199a0 <__bss_start@@Base+0x1848>
  410ade:	mov    QWORD PTR [rip+0x8eaf],0x0        # 419998 <__bss_start@@Base+0x1840>
  410ae9:	mov    QWORD PTR [rip+0x8e9c],0x0        # 419990 <__bss_start@@Base+0x1838>
  410af4:	mov    QWORD PTR [rip+0x8e89],0x0        # 419988 <__bss_start@@Base+0x1830>
  410aff:	mov    QWORD PTR [rip+0x8e76],0x0        # 419980 <__bss_start@@Base+0x1828>
  410b0a:	mov    QWORD PTR [rip+0x8e63],0x0        # 419978 <__bss_start@@Base+0x1820>
  410b15:	mov    QWORD PTR [rip+0x8e50],0x0        # 419970 <__bss_start@@Base+0x1818>
  410b20:	mov    QWORD PTR [rip+0x8e3d],0x0        # 419968 <__bss_start@@Base+0x1810>
  410b2b:	mov    QWORD PTR [rip+0x8e2a],0x0        # 419960 <__bss_start@@Base+0x1808>
  410b36:	mov    QWORD PTR [rip+0x8e17],0x0        # 419958 <__bss_start@@Base+0x1800>
  410b41:	mov    QWORD PTR [rip+0x8e04],0x0        # 419950 <__bss_start@@Base+0x17f8>
  410b4c:	mov    QWORD PTR [rip+0x8df1],0x0        # 419948 <__bss_start@@Base+0x17f0>
  410b57:	mov    QWORD PTR [rip+0x8dde],0x0        # 419940 <__bss_start@@Base+0x17e8>
  410b62:	mov    QWORD PTR [rip+0x8dcb],0x0        # 419938 <__bss_start@@Base+0x17e0>
  410b6d:	mov    QWORD PTR [rip+0x8db8],0x0        # 419930 <__bss_start@@Base+0x17d8>
  410b78:	mov    QWORD PTR [rip+0x8da5],0x0        # 419928 <__bss_start@@Base+0x17d0>
  410b83:	mov    QWORD PTR [rip+0x8d92],0x0        # 419920 <__bss_start@@Base+0x17c8>
  410b8e:	mov    QWORD PTR [rip+0x8d7f],0x0        # 419918 <__bss_start@@Base+0x17c0>
  410b99:	mov    QWORD PTR [rip+0x8d6c],0x0        # 419910 <__bss_start@@Base+0x17b8>
  410ba4:	mov    QWORD PTR [rip+0x8d59],0x0        # 419908 <__bss_start@@Base+0x17b0>
  410baf:	mov    QWORD PTR [rip+0x8d46],0x0        # 419900 <__bss_start@@Base+0x17a8>
  410bba:	mov    QWORD PTR [rip+0x8d33],0x0        # 4198f8 <__bss_start@@Base+0x17a0>
  410bc5:	mov    QWORD PTR [rip+0x8d20],0x0        # 4198f0 <__bss_start@@Base+0x1798>
  410bd0:	mov    QWORD PTR [rip+0x8d0d],0x0        # 4198e8 <__bss_start@@Base+0x1790>
  410bdb:	mov    QWORD PTR [rip+0x8cfa],0x0        # 4198e0 <__bss_start@@Base+0x1788>
  410be6:	mov    QWORD PTR [rip+0x8ce7],0x0        # 4198d8 <__bss_start@@Base+0x1780>
  410bf1:	mov    QWORD PTR [rip+0x8cd4],0x0        # 4198d0 <__bss_start@@Base+0x1778>
  410bfc:	mov    QWORD PTR [rip+0x8cc1],0x0        # 4198c8 <__bss_start@@Base+0x1770>
  410c07:	mov    QWORD PTR [rip+0x8cae],0x0        # 4198c0 <__bss_start@@Base+0x1768>
  410c12:	mov    QWORD PTR [rip+0x8c9b],0x0        # 4198b8 <__bss_start@@Base+0x1760>
  410c1d:	mov    QWORD PTR [rip+0x8c88],0x0        # 4198b0 <__bss_start@@Base+0x1758>
  410c28:	mov    QWORD PTR [rip+0x8c75],0x0        # 4198a8 <__bss_start@@Base+0x1750>
  410c33:	mov    QWORD PTR [rip+0x8c62],0x0        # 4198a0 <__bss_start@@Base+0x1748>
  410c3e:	mov    QWORD PTR [rip+0x8c4f],0x0        # 419898 <__bss_start@@Base+0x1740>
  410c49:	mov    QWORD PTR [rip+0x8c3c],0x0        # 419890 <__bss_start@@Base+0x1738>
  410c54:	mov    QWORD PTR [rip+0x8c29],0x0        # 419888 <__bss_start@@Base+0x1730>
  410c5f:	mov    QWORD PTR [rip+0x8c16],0x0        # 419880 <__bss_start@@Base+0x1728>
  410c6a:	mov    QWORD PTR [rip+0x8c03],0x0        # 419878 <__bss_start@@Base+0x1720>
  410c75:	mov    QWORD PTR [rip+0x8bf0],0x0        # 419870 <__bss_start@@Base+0x1718>
  410c80:	mov    QWORD PTR [rip+0x8bdd],0x0        # 419868 <__bss_start@@Base+0x1710>
  410c8b:	mov    QWORD PTR [rip+0x8bca],0x0        # 419860 <__bss_start@@Base+0x1708>
  410c96:	mov    QWORD PTR [rip+0x8bb7],0x0        # 419858 <__bss_start@@Base+0x1700>
  410ca1:	mov    QWORD PTR [rip+0x8ba4],0x0        # 419850 <__bss_start@@Base+0x16f8>
  410cac:	mov    QWORD PTR [rip+0x8b91],0x0        # 419848 <__bss_start@@Base+0x16f0>
  410cb7:	mov    QWORD PTR [rip+0x8b7e],0x0        # 419840 <__bss_start@@Base+0x16e8>
  410cc2:	mov    QWORD PTR [rip+0x8ddb],0x0        # 419aa8 <__bss_start@@Base+0x1950>
  410ccd:	mov    QWORD PTR [rip+0x8dc8],0x0        # 419aa0 <__bss_start@@Base+0x1948>
  410cd8:	mov    QWORD PTR [rip+0x8db5],0x0        # 419a98 <__bss_start@@Base+0x1940>
  410ce3:	mov    QWORD PTR [rip+0x8da2],0x0        # 419a90 <__bss_start@@Base+0x1938>
  410cee:	mov    QWORD PTR [rip+0x8d8f],0x0        # 419a88 <__bss_start@@Base+0x1930>
  410cf9:	mov    QWORD PTR [rip+0x8d7c],0x0        # 419a80 <__bss_start@@Base+0x1928>
  410d04:	mov    QWORD PTR [rip+0x8d69],0x0        # 419a78 <__bss_start@@Base+0x1920>
  410d0f:	mov    QWORD PTR [rip+0x8d56],0x0        # 419a70 <__bss_start@@Base+0x1918>
  410d1a:	mov    QWORD PTR [rip+0x8d43],0x0        # 419a68 <__bss_start@@Base+0x1910>
  410d25:	mov    QWORD PTR [rip+0x8d30],0x0        # 419a60 <__bss_start@@Base+0x1908>
  410d30:	mov    QWORD PTR [rip+0x8d1d],0x0        # 419a58 <__bss_start@@Base+0x1900>
  410d3b:	mov    QWORD PTR [rip+0x8d0a],0x0        # 419a50 <__bss_start@@Base+0x18f8>
  410d46:	mov    QWORD PTR [rip+0x8cf7],0x0        # 419a48 <__bss_start@@Base+0x18f0>
  410d51:	mov    QWORD PTR [rip+0x8ce4],0x0        # 419a40 <__bss_start@@Base+0x18e8>
  410d5c:	pop    rax
  410d5d:	ret    
  410d5e:	xchg   ax,ax
  410d60:	push   rax
  410d61:	lea    rdi,[rip+0xfffffffffffff7f8]        # 410560 <next@@Base+0x2270>
  410d68:	lea    rsi,[rip+0xfffffffffffff8f1]        # 410660 <next@@Base+0x2370>
  410d6f:	call   412580 <__gcov_flush@@Base+0xb0>
  410d74:	pop    rax
  410d75:	ret    
  410d76:	xchg   ax,ax
  410d78:	nop    DWORD PTR [rax+rax*1+0x0]
  410d80:	push   rbp
  410d81:	push   r15
  410d83:	push   r14
  410d85:	push   r13
  410d87:	push   r12
  410d89:	push   rbx
  410d8a:	sub    rsp,0x18
  410d8e:	mov    r14d,edx
  410d91:	mov    r15,rsi
  410d94:	mov    r12,rdi
  410d97:	lea    rdi,[rsp+0xc]
  410d9c:	lea    rsi,[rsp+0x10]
  410da1:	call   4129b0 <__gcov_flush@@Base+0x4e0>
  410da6:	test   rax,rax
  410da9:	je     410de3 <next@@Base+0x2af3>
  410dab:	mov    rbx,rax
  410dae:	mov    r13,QWORD PTR [rsp+0x10]
  410db3:	mov    rdi,r12
  410db6:	call   4030d0 <strlen@plt>
  410dbb:	lea    rdi,[rax+r13*1]
  410dbf:	add    rdi,0x2
  410dc3:	call   4031a0 <malloc@plt>
  410dc8:	mov    rbp,rax
  410dcb:	mov    r8d,DWORD PTR [rsp+0xc]
  410dd0:	mov    rdi,rax
  410dd3:	mov    rsi,r12
  410dd6:	mov    rdx,rbx
  410dd9:	mov    rcx,r13
  410ddc:	call   412a40 <__gcov_flush@@Base+0x570>
  410de1:	jmp    410dee <next@@Base+0x2afe>
  410de3:	mov    rdi,r12
  410de6:	call   403260 <strdup@plt>
  410deb:	mov    rbp,rax
  410dee:	mov    QWORD PTR [rip+0x8cbb],rbp        # 419ab0 <__bss_start@@Base+0x1958>
  410df5:	mov    BYTE PTR [rip+0x8cbc],0x0        # 419ab8 <__bss_start@@Base+0x1960>
  410dfc:	mov    rdi,rbp
  410dff:	mov    esi,0x2
  410e04:	xor    eax,eax
  410e06:	call   403210 <open@plt>
  410e0b:	mov    DWORD PTR [rip+0x733f],eax        # 418150 <__data_start@@Base+0x10>
  410e11:	cmp    eax,0xffffffff
  410e14:	je     410e1f <next@@Base+0x2b2f>
  410e16:	lea    rbx,[rip+0x2eb9]        # 413cd6 <UnitySizeMask@@Base+0x6d6>
  410e1d:	jmp    410e83 <next@@Base+0x2b93>
  410e1f:	mov    BYTE PTR [rip+0x8c92],0x1        # 419ab8 <__bss_start@@Base+0x1960>
  410e26:	mov    rdi,QWORD PTR [rip+0x8c83]        # 419ab0 <__bss_start@@Base+0x1958>
  410e2d:	mov    esi,0x42
  410e32:	mov    edx,0x1a4
  410e37:	xor    eax,eax
  410e39:	call   403210 <open@plt>
  410e3e:	mov    DWORD PTR [rip+0x730c],eax        # 418150 <__data_start@@Base+0x10>
  410e44:	lea    rbx,[rip+0x2e8f]        # 413cda <UnitySizeMask@@Base+0x6da>
  410e4b:	cmp    eax,0xffffffff
  410e4e:	jne    410e83 <next@@Base+0x2b93>
  410e50:	mov    rdi,QWORD PTR [rip+0x8c59]        # 419ab0 <__bss_start@@Base+0x1958>
  410e57:	call   412670 <__gcov_flush@@Base+0x1a0>
  410e5c:	mov    rdi,QWORD PTR [rip+0x8c4d]        # 419ab0 <__bss_start@@Base+0x1958>
  410e63:	mov    esi,0x42
  410e68:	mov    edx,0x1a4
  410e6d:	xor    eax,eax
  410e6f:	call   403210 <open@plt>
  410e74:	mov    DWORD PTR [rip+0x72d6],eax        # 418150 <__data_start@@Base+0x10>
  410e7a:	cmp    eax,0xffffffff
  410e7d:	je     411168 <next@@Base+0x2e78>
  410e83:	mov    edi,eax
  410e85:	call   412720 <__gcov_flush@@Base+0x250>
  410e8a:	mov    edi,DWORD PTR [rip+0x72c0]        # 418150 <__data_start@@Base+0x10>
  410e90:	mov    rsi,rbx
  410e93:	call   4031e0 <fdopen@plt>
  410e98:	mov    QWORD PTR [rip+0x8c21],rax        # 419ac0 <__bss_start@@Base+0x1968>
  410e9f:	mov    QWORD PTR [rip+0x8c1e],0x0        # 419ac8 <__bss_start@@Base+0x1970>
  410eaa:	mov    QWORD PTR [rip+0x8c1b],0x0        # 419ad0 <__bss_start@@Base+0x1978>
  410eb5:	mov    QWORD PTR [rip+0x8c18],0x0        # 419ad8 <__bss_start@@Base+0x1980>
  410ec0:	mov    ebx,0x20000
  410ec5:	cmp    BYTE PTR [rip+0x8bec],0x0        # 419ab8 <__bss_start@@Base+0x1960>
  410ecc:	je     410f69 <next@@Base+0x2c79>
  410ed2:	mov    rdi,rbx
  410ed5:	call   4031a0 <malloc@plt>
  410eda:	mov    r12,rax
  410edd:	mov    QWORD PTR [rip+0x8be4],rax        # 419ac8 <__bss_start@@Base+0x1970>
  410ee4:	mov    QWORD PTR [rip+0x8be5],rbx        # 419ad0 <__bss_start@@Base+0x1978>
  410eeb:	mov    edx,0x20000
  410ef0:	mov    rdi,r12
  410ef3:	xor    esi,esi
  410ef5:	call   403120 <memset@plt>
  410efa:	mov    rbx,QWORD PTR [rip+0x8bd7]        # 419ad8 <__bss_start@@Base+0x1980>
  410f01:	lea    rax,[rbx+0x4]
  410f05:	cmp    rax,QWORD PTR [rip+0x8bc4]        # 419ad0 <__bss_start@@Base+0x1978>
  410f0c:	jbe    411007 <next@@Base+0x2d17>
  410f12:	add    rbx,0x20003
  410f19:	and    rbx,0xfffffffffffe0000
  410f20:	mov    rdi,r12
  410f23:	mov    rsi,rbx
  410f26:	call   4031d0 <realloc@plt>
  410f2b:	mov    r12,rax
  410f2e:	mov    QWORD PTR [rip+0x8b93],rax        # 419ac8 <__bss_start@@Base+0x1970>
  410f35:	mov    QWORD PTR [rip+0x8b94],rbx        # 419ad0 <__bss_start@@Base+0x1978>
  410f3c:	mov    al,BYTE PTR [rip+0x8b76]        # 419ab8 <__bss_start@@Base+0x1960>
  410f42:	mov    rbp,QWORD PTR [rip+0x8b8f]        # 419ad8 <__bss_start@@Base+0x1980>
  410f49:	mov    DWORD PTR [r12+rbp*1],0x67636461
  410f51:	lea    rbx,[rbp+0x4]
  410f55:	mov    QWORD PTR [rip+0x8b7c],rbx        # 419ad8 <__bss_start@@Base+0x1980>
  410f5c:	cmp    al,0x1
  410f5e:	jne    410fed <next@@Base+0x2cfd>
  410f64:	jmp    411021 <next@@Base+0x2d31>
  410f69:	mov    rdi,rax
  410f6c:	xor    esi,esi
  410f6e:	mov    edx,0x2
  410f73:	call   4031c0 <fseek@plt>
  410f78:	mov    rdi,QWORD PTR [rip+0x8b41]        # 419ac0 <__bss_start@@Base+0x1968>
  410f7f:	call   403150 <ftell@plt>
  410f84:	mov    QWORD PTR [rip+0x8b6d],rax        # 419af8 <__bss_start@@Base+0x19a0>
  410f8b:	test   rax,rax
  410f8e:	je     411120 <next@@Base+0x2e30>
  410f94:	mov    r8d,DWORD PTR [rip+0x71b5]        # 418150 <__data_start@@Base+0x10>
  410f9b:	xor    edi,edi
  410f9d:	mov    rsi,rax
  410fa0:	mov    edx,0x3
  410fa5:	mov    ecx,0x1
  410faa:	xor    r9d,r9d
  410fad:	call   4030e0 <mmap@plt>
  410fb2:	mov    QWORD PTR [rip+0x8b0f],rax        # 419ac8 <__bss_start@@Base+0x1970>
  410fb9:	cmp    rax,0xffffffffffffffff
  410fbd:	je     4110ec <next@@Base+0x2dfc>
  410fc3:	mov    r12,rax
  410fc6:	cmp    BYTE PTR [rip+0x8aeb],0x0        # 419ab8 <__bss_start@@Base+0x1960>
  410fcd:	jne    410efa <next@@Base+0x2c0a>
  410fd3:	mov    rbx,QWORD PTR [rip+0x8afe]        # 419ad8 <__bss_start@@Base+0x1980>
  410fda:	mov    DWORD PTR [r12+rbx*1],0x67636461
  410fe2:	add    rbx,0x4
  410fe6:	mov    QWORD PTR [rip+0x8aeb],rbx        # 419ad8 <__bss_start@@Base+0x1980>
  410fed:	mov    eax,DWORD PTR [r15]
  410ff0:	mov    DWORD PTR [r12+rbx*1],eax
  410ff4:	add    rbx,0x4
  410ff8:	mov    QWORD PTR [rip+0x8ad9],rbx        # 419ad8 <__bss_start@@Base+0x1980>
  410fff:	mov    rax,rbx
  411002:	jmp    4110ce <next@@Base+0x2dde>
  411007:	mov    rbp,QWORD PTR [rip+0x8aca]        # 419ad8 <__bss_start@@Base+0x1980>
  41100e:	mov    DWORD PTR [r12+rbp*1],0x67636461
  411016:	lea    rbx,[rbp+0x4]
  41101a:	mov    QWORD PTR [rip+0x8ab7],rbx        # 419ad8 <__bss_start@@Base+0x1980>
  411021:	lea    rax,[rbp+0x8]
  411025:	cmp    rax,QWORD PTR [rip+0x8aa4]        # 419ad0 <__bss_start@@Base+0x1978>
  41102c:	jbe    41107e <next@@Base+0x2d8e>
  41102e:	add    rbp,0x20007
  411035:	and    rbp,0xfffffffffffe0000
  41103c:	mov    rdi,r12
  41103f:	mov    rsi,rbp
  411042:	call   4031d0 <realloc@plt>
  411047:	mov    r12,rax
  41104a:	mov    QWORD PTR [rip+0x8a77],rax        # 419ac8 <__bss_start@@Base+0x1970>
  411051:	mov    QWORD PTR [rip+0x8a78],rbp        # 419ad0 <__bss_start@@Base+0x1978>
  411058:	mov    rbx,QWORD PTR [rip+0x8a79]        # 419ad8 <__bss_start@@Base+0x1980>
  41105f:	mov    cl,BYTE PTR [rip+0x8a53]        # 419ab8 <__bss_start@@Base+0x1960>
  411065:	mov    eax,DWORD PTR [r15]
  411068:	mov    DWORD PTR [r12+rbx*1],eax
  41106c:	lea    rax,[rbx+0x4]
  411070:	mov    QWORD PTR [rip+0x8a61],rax        # 419ad8 <__bss_start@@Base+0x1980>
  411077:	cmp    cl,0x1
  41107a:	je     411090 <next@@Base+0x2da0>
  41107c:	jmp    4110ce <next@@Base+0x2dde>
  41107e:	mov    eax,DWORD PTR [r15]
  411081:	mov    DWORD PTR [r12+rbx*1],eax
  411085:	lea    rax,[rbx+0x4]
  411089:	mov    QWORD PTR [rip+0x8a48],rax        # 419ad8 <__bss_start@@Base+0x1980>
  411090:	lea    rcx,[rbx+0x8]
  411094:	cmp    rcx,QWORD PTR [rip+0x8a35]        # 419ad0 <__bss_start@@Base+0x1978>
  41109b:	jbe    4110ce <next@@Base+0x2dde>
  41109d:	add    rbx,0x20007
  4110a4:	and    rbx,0xfffffffffffe0000
  4110ab:	mov    rdi,r12
  4110ae:	mov    rsi,rbx
  4110b1:	call   4031d0 <realloc@plt>
  4110b6:	mov    r12,rax
  4110b9:	mov    QWORD PTR [rip+0x8a08],rax        # 419ac8 <__bss_start@@Base+0x1970>
  4110c0:	mov    QWORD PTR [rip+0x8a09],rbx        # 419ad0 <__bss_start@@Base+0x1978>
  4110c7:	mov    rax,QWORD PTR [rip+0x8a0a]        # 419ad8 <__bss_start@@Base+0x1980>
  4110ce:	mov    DWORD PTR [r12+rax*1],r14d
  4110d2:	add    rax,0x4
  4110d6:	mov    QWORD PTR [rip+0x89fb],rax        # 419ad8 <__bss_start@@Base+0x1980>
  4110dd:	add    rsp,0x18
  4110e1:	pop    rbx
  4110e2:	pop    r12
  4110e4:	pop    r13
  4110e6:	pop    r14
  4110e8:	pop    r15
  4110ea:	pop    rbp
  4110eb:	ret    
  4110ec:	call   403060 <__errno_location@plt>
  4110f1:	mov    edi,DWORD PTR [rax]
  4110f3:	mov    rax,QWORD PTR [rip+0x6ef6]        # 417ff0 <stderr@GLIBC_2.2.5>
  4110fa:	mov    rbx,QWORD PTR [rax]
  4110fd:	mov    rbp,QWORD PTR [rip+0x89ac]        # 419ab0 <__bss_start@@Base+0x1958>
  411104:	call   403270 <strerror@plt>
  411109:	lea    rsi,[rip+0x2d28]        # 413e38 <UnitySizeMask@@Base+0x838>
  411110:	mov    rdi,rbx
  411113:	mov    rdx,rbp
  411116:	mov    rcx,rax
  411119:	xor    eax,eax
  41111b:	call   403140 <fprintf@plt>
  411120:	mov    BYTE PTR [rip+0x8991],0x1        # 419ab8 <__bss_start@@Base+0x1960>
  411127:	mov    QWORD PTR [rip+0x8996],0x0        # 419ac8 <__bss_start@@Base+0x1970>
  411132:	mov    QWORD PTR [rip+0x8993],0x0        # 419ad0 <__bss_start@@Base+0x1978>
  41113d:	mov    rbx,QWORD PTR [rip+0x8994]        # 419ad8 <__bss_start@@Base+0x1980>
  411144:	cmp    rbx,0xfffffffffffe0000
  41114b:	jne    411155 <next@@Base+0x2e65>
  41114d:	xor    r12d,r12d
  411150:	jmp    410eeb <next@@Base+0x2bfb>
  411155:	add    rbx,0x3ffff
  41115c:	and    rbx,0xfffffffffffe0000
  411163:	jmp    410ed2 <next@@Base+0x2be2>
  411168:	call   403060 <__errno_location@plt>
  41116d:	mov    edi,DWORD PTR [rax]
  41116f:	mov    rax,QWORD PTR [rip+0x6e7a]        # 417ff0 <stderr@GLIBC_2.2.5>
  411176:	mov    rbx,QWORD PTR [rax]
  411179:	mov    rbp,QWORD PTR [rip+0x8930]        # 419ab0 <__bss_start@@Base+0x1958>
  411180:	call   403270 <strerror@plt>
  411185:	lea    rsi,[rip+0x2b52]        # 413cde <UnitySizeMask@@Base+0x6de>
  41118c:	mov    rdi,rbx
  41118f:	mov    rdx,rbp
  411192:	mov    rcx,rax
  411195:	xor    eax,eax
  411197:	call   403140 <fprintf@plt>
  41119c:	jmp    4110dd <next@@Base+0x2ded>
  4111a1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4111ab:	nop    DWORD PTR [rax+rax*1+0x0]
  4111b0:	mov    eax,DWORD PTR [rdi]
  4111b2:	mov    ecx,0xffffffff
  4111b7:	cmp    rax,rcx
  4111ba:	je     4111c9 <next@@Base+0x2ed9>
  4111bc:	mov    rax,QWORD PTR [rsi+rax*8]
  4111c0:	test   rax,rax
  4111c3:	je     4111c9 <next@@Base+0x2ed9>
  4111c5:	add    QWORD PTR [rax],0x1
  4111c9:	ret    
  4111ca:	nop    WORD PTR [rax+rax*1+0x0]
  4111d0:	push   rbp
  4111d1:	push   r15
  4111d3:	push   r14
  4111d5:	push   r13
  4111d7:	push   r12
  4111d9:	push   rbx
  4111da:	sub    rsp,0x18
  4111de:	mov    r15d,ecx
  4111e1:	xor    r14d,r14d
  4111e4:	test   r15b,r15b
  4111e7:	setne  al
  4111ea:	cmp    QWORD PTR [rip+0x88ce],0x0        # 419ac0 <__bss_start@@Base+0x1968>
  4111f2:	je     411513 <next@@Base+0x3223>
  4111f8:	mov    DWORD PTR [rsp+0x4],edi
  4111fc:	mov    DWORD PTR [rsp+0x14],edx
  411200:	mov    DWORD PTR [rsp],r8d
  411204:	mov    QWORD PTR [rsp+0x8],rsi
  411209:	mov    r14b,al
  41120c:	cmp    BYTE PTR [rip+0x88a5],0x1        # 419ab8 <__bss_start@@Base+0x1960>
  411213:	jne    411254 <next@@Base+0x2f64>
  411215:	mov    rbx,QWORD PTR [rip+0x88bc]        # 419ad8 <__bss_start@@Base+0x1980>
  41121c:	lea    rax,[rbx+0x4]
  411220:	cmp    rax,QWORD PTR [rip+0x88a9]        # 419ad0 <__bss_start@@Base+0x1978>
  411227:	jbe    411254 <next@@Base+0x2f64>
  411229:	add    rbx,0x20003
  411230:	and    rbx,0xfffffffffffe0000
  411237:	mov    rdi,QWORD PTR [rip+0x888a]        # 419ac8 <__bss_start@@Base+0x1970>
  41123e:	mov    rsi,rbx
  411241:	call   4031d0 <realloc@plt>
  411246:	mov    QWORD PTR [rip+0x887b],rax        # 419ac8 <__bss_start@@Base+0x1970>
  41124d:	mov    QWORD PTR [rip+0x887c],rbx        # 419ad0 <__bss_start@@Base+0x1978>
  411254:	or     r14d,0x2
  411258:	mov    r12,QWORD PTR [rip+0x8869]        # 419ac8 <__bss_start@@Base+0x1970>
  41125f:	mov    rbp,QWORD PTR [rip+0x8872]        # 419ad8 <__bss_start@@Base+0x1980>
  411266:	mov    DWORD PTR [r12+rbp*1],0x1000000
  41126e:	lea    r13,[rbp+0x4]
  411272:	mov    QWORD PTR [rip+0x885f],r13        # 419ad8 <__bss_start@@Base+0x1980>
  411279:	mov    rdi,QWORD PTR [rsp+0x8]
  41127e:	test   rdi,rdi
  411281:	je     411294 <next@@Base+0x2fa4>
  411283:	call   4030d0 <strlen@plt>
  411288:	shr    rax,0x2
  41128c:	lea    r14d,[r14+rax*1]
  411290:	add    r14d,0x2
  411294:	cmp    BYTE PTR [rip+0x881d],0x0        # 419ab8 <__bss_start@@Base+0x1960>
  41129b:	je     4112fd <next@@Base+0x300d>
  41129d:	lea    rbx,[rbp+0x8]
  4112a1:	cmp    rbx,QWORD PTR [rip+0x8828]        # 419ad0 <__bss_start@@Base+0x1978>
  4112a8:	jbe    411522 <next@@Base+0x3232>
  4112ae:	add    rbp,0x20007
  4112b5:	and    rbp,0xfffffffffffe0000
  4112bc:	mov    rdi,r12
  4112bf:	mov    rsi,rbp
  4112c2:	call   4031d0 <realloc@plt>
  4112c7:	mov    r12,rax
  4112ca:	mov    QWORD PTR [rip+0x87f7],rax        # 419ac8 <__bss_start@@Base+0x1970>
  4112d1:	mov    QWORD PTR [rip+0x87f8],rbp        # 419ad0 <__bss_start@@Base+0x1978>
  4112d8:	mov    r13,QWORD PTR [rip+0x87f9]        # 419ad8 <__bss_start@@Base+0x1980>
  4112df:	mov    al,BYTE PTR [rip+0x87d3]        # 419ab8 <__bss_start@@Base+0x1960>
  4112e5:	mov    DWORD PTR [r12+r13*1],r14d
  4112e9:	lea    rbx,[r13+0x4]
  4112ed:	mov    QWORD PTR [rip+0x87e4],rbx        # 419ad8 <__bss_start@@Base+0x1980>
  4112f4:	cmp    al,0x1
  4112f6:	jne    411310 <next@@Base+0x3020>
  4112f8:	jmp    41152e <next@@Base+0x323e>
  4112fd:	mov    DWORD PTR [r12+rbp*1+0x4],r14d
  411302:	add    rbp,0x8
  411306:	mov    QWORD PTR [rip+0x87cb],rbp        # 419ad8 <__bss_start@@Base+0x1980>
  41130d:	mov    rbx,rbp
  411310:	mov    eax,DWORD PTR [rsp+0x4]
  411314:	mov    DWORD PTR [r12+rbx*1],eax
  411318:	add    rbx,0x4
  41131c:	mov    QWORD PTR [rip+0x87b5],rbx        # 419ad8 <__bss_start@@Base+0x1980>
  411323:	mov    r13,rbx
  411326:	lea    rbp,[r13+0x4]
  41132a:	mov    eax,DWORD PTR [rsp+0x14]
  41132e:	mov    DWORD PTR [r12+r13*1],eax
  411332:	mov    QWORD PTR [rip+0x879f],rbp        # 419ad8 <__bss_start@@Base+0x1980>
  411339:	test   r15b,r15b
  41133c:	je     4113a6 <next@@Base+0x30b6>
  41133e:	cmp    BYTE PTR [rip+0x8773],0x1        # 419ab8 <__bss_start@@Base+0x1960>
  411345:	jne    411385 <next@@Base+0x3095>
  411347:	lea    rax,[r13+0x8]
  41134b:	cmp    rax,QWORD PTR [rip+0x877e]        # 419ad0 <__bss_start@@Base+0x1978>
  411352:	jbe    411385 <next@@Base+0x3095>
  411354:	add    r13,0x20007
  41135b:	and    r13,0xfffffffffffe0000
  411362:	mov    rdi,r12
  411365:	mov    rsi,r13
  411368:	call   4031d0 <realloc@plt>
  41136d:	mov    r12,rax
  411370:	mov    QWORD PTR [rip+0x8751],rax        # 419ac8 <__bss_start@@Base+0x1970>
  411377:	mov    QWORD PTR [rip+0x8752],r13        # 419ad0 <__bss_start@@Base+0x1978>
  41137e:	mov    rbp,QWORD PTR [rip+0x8753]        # 419ad8 <__bss_start@@Base+0x1980>
  411385:	mov    r13,QWORD PTR [rsp+0x8]
  41138a:	mov    eax,DWORD PTR [rsp]
  41138d:	mov    DWORD PTR [r12+rbp*1],eax
  411391:	add    rbp,0x4
  411395:	mov    QWORD PTR [rip+0x873c],rbp        # 419ad8 <__bss_start@@Base+0x1980>
  41139c:	test   r13,r13
  41139f:	jne    4113b4 <next@@Base+0x30c4>
  4113a1:	jmp    411513 <next@@Base+0x3223>
  4113a6:	mov    r13,QWORD PTR [rsp+0x8]
  4113ab:	test   r13,r13
  4113ae:	je     411513 <next@@Base+0x3223>
  4113b4:	mov    rdi,r13
  4113b7:	call   4030d0 <strlen@plt>
  4113bc:	mov    rbx,rax
  4113bf:	shr    rbx,0x2
  4113c3:	add    ebx,0x1
  4113c6:	cmp    BYTE PTR [rip+0x86eb],0x1        # 419ab8 <__bss_start@@Base+0x1960>
  4113cd:	jne    411419 <next@@Base+0x3129>
  4113cf:	lea    rax,[rbp+0x4]
  4113d3:	mov    r14b,0x1
  4113d6:	cmp    rax,QWORD PTR [rip+0x86f3]        # 419ad0 <__bss_start@@Base+0x1978>
  4113dd:	jbe    41141c <next@@Base+0x312c>
  4113df:	add    rbp,0x20003
  4113e6:	and    rbp,0xfffffffffffe0000
  4113ed:	mov    rdi,r12
  4113f0:	mov    rsi,rbp
  4113f3:	call   4031d0 <realloc@plt>
  4113f8:	mov    r12,rax
  4113fb:	mov    QWORD PTR [rip+0x86c6],rax        # 419ac8 <__bss_start@@Base+0x1970>
  411402:	mov    QWORD PTR [rip+0x86c7],rbp        # 419ad0 <__bss_start@@Base+0x1978>
  411409:	mov    r14b,BYTE PTR [rip+0x86a8]        # 419ab8 <__bss_start@@Base+0x1960>
  411410:	mov    rbp,QWORD PTR [rip+0x86c1]        # 419ad8 <__bss_start@@Base+0x1980>
  411417:	jmp    41141c <next@@Base+0x312c>
  411419:	xor    r14d,r14d
  41141c:	mov    DWORD PTR [r12+rbp*1],ebx
  411420:	add    rbp,0x4
  411424:	mov    QWORD PTR [rip+0x86ad],rbp        # 419ad8 <__bss_start@@Base+0x1980>
  41142b:	mov    rdi,r13
  41142e:	call   4030d0 <strlen@plt>
  411433:	mov    rbx,rax
  411436:	test   r14b,0x1
  41143a:	je     411486 <next@@Base+0x3196>
  41143c:	lea    r15,[rbx+rbp*1]
  411440:	mov    r14b,0x1
  411443:	cmp    r15,QWORD PTR [rip+0x8686]        # 419ad0 <__bss_start@@Base+0x1978>
  41144a:	jbe    411489 <next@@Base+0x3199>
  41144c:	add    r15,0x1ffff
  411453:	and    r15,0xfffffffffffe0000
  41145a:	mov    rdi,r12
  41145d:	mov    rsi,r15
  411460:	call   4031d0 <realloc@plt>
  411465:	mov    r12,rax
  411468:	mov    QWORD PTR [rip+0x8659],rax        # 419ac8 <__bss_start@@Base+0x1970>
  41146f:	mov    QWORD PTR [rip+0x865a],r15        # 419ad0 <__bss_start@@Base+0x1978>
  411476:	mov    rbp,QWORD PTR [rip+0x865b]        # 419ad8 <__bss_start@@Base+0x1980>
  41147d:	mov    r14b,BYTE PTR [rip+0x8634]        # 419ab8 <__bss_start@@Base+0x1960>
  411484:	jmp    411489 <next@@Base+0x3199>
  411486:	xor    r14d,r14d
  411489:	lea    rdi,[r12+rbp*1]
  41148d:	mov    rsi,r13
  411490:	mov    rdx,rbx
  411493:	call   403170 <memcpy@plt>
  411498:	add    rbx,rbp
  41149b:	mov    QWORD PTR [rip+0x8636],rbx        # 419ad8 <__bss_start@@Base+0x1980>
  4114a2:	mov    rdi,r13
  4114a5:	call   4030d0 <strlen@plt>
  4114aa:	and    eax,0x3
  4114ad:	mov    ebp,0x4
  4114b2:	sub    rbp,rax
  4114b5:	test   r14b,0x1
  4114b9:	je     4114f9 <next@@Base+0x3209>
  4114bb:	lea    r14,[rbx+rbp*1]
  4114bf:	cmp    r14,QWORD PTR [rip+0x860a]        # 419ad0 <__bss_start@@Base+0x1978>
  4114c6:	jbe    4114f9 <next@@Base+0x3209>
  4114c8:	add    r14,0x1ffff
  4114cf:	and    r14,0xfffffffffffe0000
  4114d6:	mov    rdi,r12
  4114d9:	mov    rsi,r14
  4114dc:	call   4031d0 <realloc@plt>
  4114e1:	mov    r12,rax
  4114e4:	mov    QWORD PTR [rip+0x85dd],rax        # 419ac8 <__bss_start@@Base+0x1970>
  4114eb:	mov    QWORD PTR [rip+0x85de],r14        # 419ad0 <__bss_start@@Base+0x1978>
  4114f2:	mov    rbx,QWORD PTR [rip+0x85df]        # 419ad8 <__bss_start@@Base+0x1980>
  4114f9:	add    r12,rbx
  4114fc:	mov    rdi,r12
  4114ff:	xor    esi,esi
  411501:	mov    rdx,rbp
  411504:	call   403120 <memset@plt>
  411509:	add    rbx,rbp
  41150c:	mov    QWORD PTR [rip+0x85c5],rbx        # 419ad8 <__bss_start@@Base+0x1980>
  411513:	add    rsp,0x18
  411517:	pop    rbx
  411518:	pop    r12
  41151a:	pop    r13
  41151c:	pop    r14
  41151e:	pop    r15
  411520:	pop    rbp
  411521:	ret    
  411522:	mov    DWORD PTR [r12+rbp*1+0x4],r14d
  411527:	mov    QWORD PTR [rip+0x85aa],rbx        # 419ad8 <__bss_start@@Base+0x1980>
  41152e:	lea    rax,[r13+0x8]
  411532:	cmp    rax,QWORD PTR [rip+0x8597]        # 419ad0 <__bss_start@@Base+0x1978>
  411539:	jbe    41158f <next@@Base+0x329f>
  41153b:	add    r13,0x20007
  411542:	and    r13,0xfffffffffffe0000
  411549:	mov    rdi,r12
  41154c:	mov    rsi,r13
  41154f:	call   4031d0 <realloc@plt>
  411554:	mov    r12,rax
  411557:	mov    QWORD PTR [rip+0x856a],rax        # 419ac8 <__bss_start@@Base+0x1970>
  41155e:	mov    QWORD PTR [rip+0x856b],r13        # 419ad0 <__bss_start@@Base+0x1978>
  411565:	mov    rbx,QWORD PTR [rip+0x856c]        # 419ad8 <__bss_start@@Base+0x1980>
  41156c:	mov    al,BYTE PTR [rip+0x8546]        # 419ab8 <__bss_start@@Base+0x1960>
  411572:	mov    ecx,DWORD PTR [rsp+0x4]
  411576:	mov    DWORD PTR [r12+rbx*1],ecx
  41157a:	lea    r13,[rbx+0x4]
  41157e:	mov    QWORD PTR [rip+0x8553],r13        # 419ad8 <__bss_start@@Base+0x1980>
  411585:	cmp    al,0x1
  411587:	jne    411326 <next@@Base+0x3036>
  41158d:	jmp    4115a2 <next@@Base+0x32b2>
  41158f:	mov    eax,DWORD PTR [rsp+0x4]
  411593:	mov    DWORD PTR [r12+rbx*1],eax
  411597:	lea    r13,[rbx+0x4]
  41159b:	mov    QWORD PTR [rip+0x8536],r13        # 419ad8 <__bss_start@@Base+0x1980>
  4115a2:	lea    rax,[rbx+0x8]
  4115a6:	cmp    rax,QWORD PTR [rip+0x8523]        # 419ad0 <__bss_start@@Base+0x1978>
  4115ad:	jbe    411326 <next@@Base+0x3036>
  4115b3:	add    rbx,0x20007
  4115ba:	and    rbx,0xfffffffffffe0000
  4115c1:	mov    rdi,r12
  4115c4:	mov    rsi,rbx
  4115c7:	call   4031d0 <realloc@plt>
  4115cc:	mov    r12,rax
  4115cf:	mov    QWORD PTR [rip+0x84f2],rax        # 419ac8 <__bss_start@@Base+0x1970>
  4115d6:	mov    QWORD PTR [rip+0x84f3],rbx        # 419ad0 <__bss_start@@Base+0x1978>
  4115dd:	mov    r13,QWORD PTR [rip+0x84f4]        # 419ad8 <__bss_start@@Base+0x1980>
  4115e4:	jmp    411326 <next@@Base+0x3036>
  4115e9:	nop    DWORD PTR [rax+0x0]
  4115f0:	push   rbp
  4115f1:	push   r15
  4115f3:	push   r14
  4115f5:	push   r13
  4115f7:	push   r12
  4115f9:	push   rbx
  4115fa:	sub    rsp,0x18
  4115fe:	cmp    QWORD PTR [rip+0x84ba],0x0        # 419ac0 <__bss_start@@Base+0x1968>
  411606:	je     4116aa <next@@Base+0x33ba>
  41160c:	mov    r13d,edi
  41160f:	mov    r14,QWORD PTR [rip+0x84c2]        # 419ad8 <__bss_start@@Base+0x1980>
  411616:	cmp    BYTE PTR [rip+0x849b],0x0        # 419ab8 <__bss_start@@Base+0x1960>
  41161d:	mov    QWORD PTR [rsp+0x8],rsi
  411622:	je     4116b9 <next@@Base+0x33c9>
  411628:	lea    rbx,[r14+0x4]
  41162c:	cmp    rbx,QWORD PTR [rip+0x849d]        # 419ad0 <__bss_start@@Base+0x1978>
  411633:	jbe    411741 <next@@Base+0x3451>
  411639:	add    r14,0x20003
  411640:	and    r14,0xfffffffffffe0000
  411647:	mov    rdi,QWORD PTR [rip+0x847a]        # 419ac8 <__bss_start@@Base+0x1970>
  41164e:	mov    rsi,r14
  411651:	call   4031d0 <realloc@plt>
  411656:	mov    rsi,QWORD PTR [rsp+0x8]
  41165b:	mov    r15,rax
  41165e:	mov    QWORD PTR [rip+0x8463],rax        # 419ac8 <__bss_start@@Base+0x1970>
  411665:	mov    QWORD PTR [rip+0x8464],r14        # 419ad0 <__bss_start@@Base+0x1978>
  41166c:	mov    r14,QWORD PTR [rip+0x8465]        # 419ad8 <__bss_start@@Base+0x1980>
  411673:	mov    al,BYTE PTR [rip+0x843f]        # 419ab8 <__bss_start@@Base+0x1960>
  411679:	lea    rbx,[r14+0x4]
  41167d:	mov    DWORD PTR [r15+r14*1],0x1a10000
  411685:	mov    QWORD PTR [rip+0x844c],rbx        # 419ad8 <__bss_start@@Base+0x1980>
  41168c:	lea    ebp,[r13+r13*1+0x0]
  411691:	xor    ecx,ecx
  411693:	mov    QWORD PTR [rsp],rcx
  411697:	mov    r12d,0x0
  41169d:	cmp    al,0x1
  41169f:	je     41175c <next@@Base+0x346c>
  4116a5:	jmp    41188f <next@@Base+0x359f>
  4116aa:	add    rsp,0x18
  4116ae:	pop    rbx
  4116af:	pop    r12
  4116b1:	pop    r13
  4116b3:	pop    r14
  4116b5:	pop    r15
  4116b7:	pop    rbp
  4116b8:	ret    
  4116b9:	mov    r15,QWORD PTR [rip+0x8408]        # 419ac8 <__bss_start@@Base+0x1970>
  4116c0:	mov    ecx,DWORD PTR [r15+r14*1]
  4116c4:	lea    rbx,[r14+0x4]
  4116c8:	mov    QWORD PTR [rip+0x8409],rbx        # 419ad8 <__bss_start@@Base+0x1980>
  4116cf:	cmp    ecx,0xffffffff
  4116d2:	je     4117b5 <next@@Base+0x34c5>
  4116d8:	cmp    ecx,0x1a10000
  4116de:	jne    4117c3 <next@@Base+0x34d3>
  4116e4:	mov    ecx,DWORD PTR [r15+r14*1+0x4]
  4116e9:	lea    rbp,[r14+0x8]
  4116ed:	mov    QWORD PTR [rip+0x83e4],rbp        # 419ad8 <__bss_start@@Base+0x1980>
  4116f4:	cmp    ecx,0xffffffff
  4116f7:	je     4117dd <next@@Base+0x34ed>
  4116fd:	mov    eax,ecx
  4116ff:	shr    eax,1
  411701:	cmp    eax,r13d
  411704:	jne    4117dd <next@@Base+0x34ed>
  41170a:	mov    r12d,r13d
  41170d:	lea    rdi,[r12*8+0x0]
  411715:	call   4031a0 <malloc@plt>
  41171a:	test   r13d,r13d
  41171d:	mov    rcx,rax
  411720:	mov    QWORD PTR [rsp],rax
  411724:	je     41180a <next@@Base+0x351a>
  41172a:	mov    eax,r12d
  41172d:	and    eax,0x1
  411730:	cmp    r13d,0x1
  411734:	jne    411814 <next@@Base+0x3524>
  41173a:	xor    ecx,ecx
  41173c:	jmp    411853 <next@@Base+0x3563>
  411741:	mov    r15,QWORD PTR [rip+0x8380]        # 419ac8 <__bss_start@@Base+0x1970>
  411748:	mov    DWORD PTR [r15+r14*1],0x1a10000
  411750:	mov    QWORD PTR [rip+0x8381],rbx        # 419ad8 <__bss_start@@Base+0x1980>
  411757:	lea    ebp,[r13+r13*1+0x0]
  41175c:	lea    rax,[r14+0x8]
  411760:	cmp    rax,QWORD PTR [rip+0x8369]        # 419ad0 <__bss_start@@Base+0x1978>
  411767:	jbe    4117a7 <next@@Base+0x34b7>
  411769:	add    r14,0x20007
  411770:	and    r14,0xfffffffffffe0000
  411777:	mov    rdi,r15
  41177a:	mov    rsi,r14
  41177d:	call   4031d0 <realloc@plt>
  411782:	mov    rsi,QWORD PTR [rsp+0x8]
  411787:	mov    r15,rax
  41178a:	mov    QWORD PTR [rip+0x8337],rax        # 419ac8 <__bss_start@@Base+0x1970>
  411791:	mov    QWORD PTR [rip+0x8338],r14        # 419ad0 <__bss_start@@Base+0x1978>
  411798:	xor    eax,eax
  41179a:	mov    QWORD PTR [rsp],rax
  41179e:	mov    rbx,QWORD PTR [rip+0x8333]        # 419ad8 <__bss_start@@Base+0x1980>
  4117a5:	jmp    4117ad <next@@Base+0x34bd>
  4117a7:	xor    eax,eax
  4117a9:	mov    QWORD PTR [rsp],rax
  4117ad:	xor    r12d,r12d
  4117b0:	jmp    41188f <next@@Base+0x359f>
  4117b5:	xor    r12d,r12d
  4117b8:	xor    eax,eax
  4117ba:	mov    QWORD PTR [rsp],rax
  4117be:	jmp    411874 <next@@Base+0x3584>
  4117c3:	mov    rax,QWORD PTR [rip+0x6826]        # 417ff0 <stderr@GLIBC_2.2.5>
  4117ca:	mov    rdi,QWORD PTR [rax]
  4117cd:	mov    rdx,QWORD PTR [rip+0x82dc]        # 419ab0 <__bss_start@@Base+0x1958>
  4117d4:	lea    rsi,[rip+0x2523]        # 413cfe <UnitySizeMask@@Base+0x6fe>
  4117db:	jmp    4117f5 <next@@Base+0x3505>
  4117dd:	mov    rax,QWORD PTR [rip+0x680c]        # 417ff0 <stderr@GLIBC_2.2.5>
  4117e4:	mov    rdi,QWORD PTR [rax]
  4117e7:	mov    rdx,QWORD PTR [rip+0x82c2]        # 419ab0 <__bss_start@@Base+0x1958>
  4117ee:	lea    rsi,[rip+0x2553]        # 413d48 <UnitySizeMask@@Base+0x748>
  4117f5:	xor    eax,eax
  4117f7:	add    rsp,0x18
  4117fb:	pop    rbx
  4117fc:	pop    r12
  4117fe:	pop    r13
  411800:	pop    r14
  411802:	pop    r15
  411804:	pop    rbp
  411805:	jmp    403140 <fprintf@plt>
  41180a:	mov    r12,rax
  41180d:	mov    rsi,QWORD PTR [rsp+0x8]
  411812:	jmp    411874 <next@@Base+0x3584>
  411814:	mov    rbp,0xfffffffffffffff8
  41181b:	sub    rbp,r14
  41181e:	lea    rdx,[r14+r15*1]
  411822:	add    rdx,0x14
  411826:	sub    r12,rax
  411829:	xor    ecx,ecx
  41182b:	mov    rdi,QWORD PTR [rsp]
  41182f:	nop
  411830:	mov    rsi,QWORD PTR [rdx+rcx*8-0xc]
  411835:	mov    QWORD PTR [rdi+rcx*8],rsi
  411839:	mov    rsi,QWORD PTR [rdx+rcx*8-0x4]
  41183e:	mov    QWORD PTR [rdi+rcx*8+0x8],rsi
  411843:	add    rcx,0x2
  411847:	add    rbp,0xfffffffffffffff0
  41184b:	cmp    r12,rcx
  41184e:	jne    411830 <next@@Base+0x3540>
  411850:	neg    rbp
  411853:	mov    rsi,QWORD PTR [rsp+0x8]
  411858:	test   rax,rax
  41185b:	mov    r12,QWORD PTR [rsp]
  41185f:	je     41186d <next@@Base+0x357d>
  411861:	mov    rax,QWORD PTR [r15+rbp*1]
  411865:	mov    QWORD PTR [r12+rcx*8],rax
  411869:	add    rbp,0x8
  41186d:	mov    QWORD PTR [rip+0x8264],rbp        # 419ad8 <__bss_start@@Base+0x1980>
  411874:	mov    QWORD PTR [rip+0x825d],r14        # 419ad8 <__bss_start@@Base+0x1980>
  41187b:	mov    DWORD PTR [r15+r14*1],0x1a10000
  411883:	mov    QWORD PTR [rip+0x824e],rbx        # 419ad8 <__bss_start@@Base+0x1980>
  41188a:	lea    ebp,[r13+r13*1+0x0]
  41188f:	mov    DWORD PTR [r15+rbx*1],ebp
  411893:	add    rbx,0x4
  411897:	mov    QWORD PTR [rip+0x823a],rbx        # 419ad8 <__bss_start@@Base+0x1980>
  41189e:	test   r13d,r13d
  4118a1:	je     4119e8 <next@@Base+0x36f8>
  4118a7:	mov    edi,r13d
  4118aa:	xor    ebp,ebp
  4118ac:	mov    QWORD PTR [rsp+0x10],rdi
  4118b1:	test   r12,r12
  4118b4:	jne    4118f6 <next@@Base+0x3606>
  4118b6:	jmp    411900 <next@@Base+0x3610>
  4118b8:	nop    DWORD PTR [rax+rax*1+0x0]
  4118c0:	mov    DWORD PTR [r15+rbx*1],r14d
  4118c4:	add    rbx,0x4
  4118c8:	mov    QWORD PTR [rip+0x8209],rbx        # 419ad8 <__bss_start@@Base+0x1980>
  4118cf:	mov    rax,rbx
  4118d2:	mov    DWORD PTR [r15+rax*1],r13d
  4118d6:	add    rax,0x4
  4118da:	mov    QWORD PTR [rip+0x81f7],rax        # 419ad8 <__bss_start@@Base+0x1980>
  4118e1:	add    rbp,0x1
  4118e5:	mov    rbx,rax
  4118e8:	cmp    rdi,rbp
  4118eb:	je     4119e8 <next@@Base+0x36f8>
  4118f1:	test   r12,r12
  4118f4:	je     411900 <next@@Base+0x3610>
  4118f6:	mov    r14,QWORD PTR [r12+rbp*8]
  4118fa:	jmp    411903 <next@@Base+0x3613>
  4118fc:	nop    DWORD PTR [rax+0x0]
  411900:	xor    r14d,r14d
  411903:	add    r14,QWORD PTR [rsi+rbp*8]
  411907:	mov    QWORD PTR [rsi+rbp*8],r14
  41190b:	mov    r13,r14
  41190e:	shr    r13,0x20
  411912:	cmp    BYTE PTR [rip+0x819f],0x0        # 419ab8 <__bss_start@@Base+0x1960>
  411919:	je     4118c0 <next@@Base+0x35d0>
  41191b:	lea    rax,[rbx+0x4]
  41191f:	mov    rcx,QWORD PTR [rip+0x81aa]        # 419ad0 <__bss_start@@Base+0x1978>
  411926:	cmp    rax,rcx
  411929:	jbe    411990 <next@@Base+0x36a0>
  41192b:	add    rbx,0x20003
  411932:	and    rbx,0xfffffffffffe0000
  411939:	mov    rdi,r15
  41193c:	mov    rsi,rbx
  41193f:	call   4031d0 <realloc@plt>
  411944:	mov    rdi,QWORD PTR [rsp+0x10]
  411949:	mov    rsi,QWORD PTR [rsp+0x8]
  41194e:	mov    r15,rax
  411951:	mov    QWORD PTR [rip+0x8170],rax        # 419ac8 <__bss_start@@Base+0x1970>
  411958:	mov    QWORD PTR [rip+0x8171],rbx        # 419ad0 <__bss_start@@Base+0x1978>
  41195f:	mov    dl,BYTE PTR [rip+0x8153]        # 419ab8 <__bss_start@@Base+0x1960>
  411965:	mov    rcx,rbx
  411968:	mov    rbx,QWORD PTR [rip+0x8169]        # 419ad8 <__bss_start@@Base+0x1980>
  41196f:	mov    DWORD PTR [rax+rbx*1],r14d
  411973:	lea    rax,[rbx+0x4]
  411977:	mov    QWORD PTR [rip+0x815a],rax        # 419ad8 <__bss_start@@Base+0x1980>
  41197e:	cmp    dl,0x1
  411981:	jne    4118d2 <next@@Base+0x35e2>
  411987:	jmp    41199b <next@@Base+0x36ab>
  411989:	nop    DWORD PTR [rax+0x0]
  411990:	mov    DWORD PTR [r15+rbx*1],r14d
  411994:	mov    QWORD PTR [rip+0x813d],rax        # 419ad8 <__bss_start@@Base+0x1980>
  41199b:	lea    rdx,[rbx+0x8]
  41199f:	cmp    rdx,rcx
  4119a2:	jbe    4118d2 <next@@Base+0x35e2>
  4119a8:	add    rbx,0x20007
  4119af:	and    rbx,0xfffffffffffe0000
  4119b6:	mov    rdi,r15
  4119b9:	mov    rsi,rbx
  4119bc:	call   4031d0 <realloc@plt>
  4119c1:	mov    rdi,QWORD PTR [rsp+0x10]
  4119c6:	mov    rsi,QWORD PTR [rsp+0x8]
  4119cb:	mov    r15,rax
  4119ce:	mov    QWORD PTR [rip+0x80f3],rax        # 419ac8 <__bss_start@@Base+0x1970>
  4119d5:	mov    QWORD PTR [rip+0x80f4],rbx        # 419ad0 <__bss_start@@Base+0x1978>
  4119dc:	mov    rax,QWORD PTR [rip+0x80f5]        # 419ad8 <__bss_start@@Base+0x1980>
  4119e3:	jmp    4118d2 <next@@Base+0x35e2>
  4119e8:	mov    rdi,QWORD PTR [rsp]
  4119ec:	add    rsp,0x18
  4119f0:	pop    rbx
  4119f1:	pop    r12
  4119f3:	pop    r13
  4119f5:	pop    r14
  4119f7:	pop    r15
  4119f9:	pop    rbp
  4119fa:	jmp    403040 <free@plt>
  4119ff:	nop
  411a00:	push   rbp
  411a01:	push   r15
  411a03:	push   r14
  411a05:	push   rbx
  411a06:	push   rax
  411a07:	cmp    QWORD PTR [rip+0x80b1],0x0        # 419ac0 <__bss_start@@Base+0x1968>
  411a0f:	je     411d86 <next@@Base+0x3a96>
  411a15:	mov    rbx,QWORD PTR [rip+0x80bc]        # 419ad8 <__bss_start@@Base+0x1980>
  411a1c:	cmp    BYTE PTR [rip+0x8095],0x0        # 419ab8 <__bss_start@@Base+0x1960>
  411a23:	je     411a8f <next@@Base+0x379f>
  411a25:	lea    r14,[rbx+0x4]
  411a29:	cmp    r14,QWORD PTR [rip+0x80a0]        # 419ad0 <__bss_start@@Base+0x1978>
  411a30:	jbe    411adb <next@@Base+0x37eb>
  411a36:	add    rbx,0x20003
  411a3d:	and    rbx,0xfffffffffffe0000
  411a44:	mov    rdi,QWORD PTR [rip+0x807d]        # 419ac8 <__bss_start@@Base+0x1970>
  411a4b:	mov    rsi,rbx
  411a4e:	call   4031d0 <realloc@plt>
  411a53:	mov    QWORD PTR [rip+0x806e],rax        # 419ac8 <__bss_start@@Base+0x1970>
  411a5a:	mov    QWORD PTR [rip+0x806f],rbx        # 419ad0 <__bss_start@@Base+0x1978>
  411a61:	mov    rbx,QWORD PTR [rip+0x8070]        # 419ad8 <__bss_start@@Base+0x1980>
  411a68:	mov    cl,BYTE PTR [rip+0x804a]        # 419ab8 <__bss_start@@Base+0x1960>
  411a6e:	lea    r14,[rbx+0x4]
  411a72:	mov    DWORD PTR [rax+rbx*1],0xa1000000
  411a79:	mov    QWORD PTR [rip+0x8058],r14        # 419ad8 <__bss_start@@Base+0x1980>
  411a80:	mov    ebp,0x1
  411a85:	cmp    cl,0x1
  411a88:	je     411af0 <next@@Base+0x3800>
  411a8a:	jmp    411c0b <next@@Base+0x391b>
  411a8f:	mov    rax,QWORD PTR [rip+0x8032]        # 419ac8 <__bss_start@@Base+0x1970>
  411a96:	mov    ecx,DWORD PTR [rax+rbx*1]
  411a99:	lea    r14,[rbx+0x4]
  411a9d:	mov    QWORD PTR [rip+0x8034],r14        # 419ad8 <__bss_start@@Base+0x1980>
  411aa4:	cmp    ecx,0xa1000000
  411aaa:	je     411bcc <next@@Base+0x38dc>
  411ab0:	mov    ebp,0x1
  411ab5:	cmp    ecx,0xffffffff
  411ab8:	je     411bfd <next@@Base+0x390d>
  411abe:	mov    rax,QWORD PTR [rip+0x652b]        # 417ff0 <stderr@GLIBC_2.2.5>
  411ac5:	mov    rdi,QWORD PTR [rax]
  411ac8:	mov    rdx,QWORD PTR [rip+0x7fe1]        # 419ab0 <__bss_start@@Base+0x1958>
  411acf:	lea    rsi,[rip+0x22c6]        # 413d9c <UnitySizeMask@@Base+0x79c>
  411ad6:	jmp    411fe5 <next@@Base+0x3cf5>
  411adb:	mov    rax,QWORD PTR [rip+0x7fe6]        # 419ac8 <__bss_start@@Base+0x1970>
  411ae2:	mov    DWORD PTR [rax+rbx*1],0xa1000000
  411ae9:	mov    QWORD PTR [rip+0x7fe8],r14        # 419ad8 <__bss_start@@Base+0x1980>
  411af0:	lea    rcx,[rbx+0x8]
  411af4:	cmp    rcx,QWORD PTR [rip+0x7fd5]        # 419ad0 <__bss_start@@Base+0x1978>
  411afb:	jbe    411b53 <next@@Base+0x3863>
  411afd:	add    rbx,0x20007
  411b04:	and    rbx,0xfffffffffffe0000
  411b0b:	mov    rdi,rax
  411b0e:	mov    rsi,rbx
  411b11:	call   4031d0 <realloc@plt>
  411b16:	mov    QWORD PTR [rip+0x7fab],rax        # 419ac8 <__bss_start@@Base+0x1970>
  411b1d:	mov    QWORD PTR [rip+0x7fac],rbx        # 419ad0 <__bss_start@@Base+0x1978>
  411b24:	mov    r14,QWORD PTR [rip+0x7fad]        # 419ad8 <__bss_start@@Base+0x1980>
  411b2b:	mov    cl,BYTE PTR [rip+0x7f87]        # 419ab8 <__bss_start@@Base+0x1960>
  411b31:	mov    DWORD PTR [rax+r14*1],0x9
  411b39:	lea    rbx,[r14+0x4]
  411b3d:	mov    QWORD PTR [rip+0x7f94],rbx        # 419ad8 <__bss_start@@Base+0x1980>
  411b44:	mov    ebp,0x1
  411b49:	cmp    cl,0x1
  411b4c:	je     411b66 <next@@Base+0x3876>
  411b4e:	jmp    411c21 <next@@Base+0x3931>
  411b53:	mov    DWORD PTR [rax+r14*1],0x9
  411b5b:	lea    rbx,[r14+0x4]
  411b5f:	mov    QWORD PTR [rip+0x7f72],rbx        # 419ad8 <__bss_start@@Base+0x1980>
  411b66:	lea    rcx,[r14+0x8]
  411b6a:	cmp    rcx,QWORD PTR [rip+0x7f5f]        # 419ad0 <__bss_start@@Base+0x1978>
  411b71:	jbe    411e0d <next@@Base+0x3b1d>
  411b77:	add    r14,0x20007
  411b7e:	and    r14,0xfffffffffffe0000
  411b85:	mov    rdi,rax
  411b88:	mov    rsi,r14
  411b8b:	call   4031d0 <realloc@plt>
  411b90:	mov    QWORD PTR [rip+0x7f31],rax        # 419ac8 <__bss_start@@Base+0x1970>
  411b97:	mov    QWORD PTR [rip+0x7f32],r14        # 419ad0 <__bss_start@@Base+0x1978>
  411b9e:	mov    rbx,QWORD PTR [rip+0x7f33]        # 419ad8 <__bss_start@@Base+0x1980>
  411ba5:	mov    cl,BYTE PTR [rip+0x7f0d]        # 419ab8 <__bss_start@@Base+0x1960>
  411bab:	mov    DWORD PTR [rax+rbx*1],0x0
  411bb2:	lea    r14,[rbx+0x4]
  411bb6:	mov    QWORD PTR [rip+0x7f1b],r14        # 419ad8 <__bss_start@@Base+0x1980>
  411bbd:	mov    ebp,0x1
  411bc2:	cmp    cl,0x1
  411bc5:	jne    411c36 <next@@Base+0x3946>
  411bc7:	jmp    411e1f <next@@Base+0x3b2f>
  411bcc:	mov    ecx,DWORD PTR [rax+rbx*1+0x4]
  411bd0:	lea    rdx,[rbx+0x8]
  411bd4:	mov    QWORD PTR [rip+0x7efd],rdx        # 419ad8 <__bss_start@@Base+0x1980>
  411bdb:	cmp    ecx,0x9
  411bde:	jne    411fcd <next@@Base+0x3cdd>
  411be4:	lea    rcx,[rbx+0x14]
  411be8:	movzx  ebp,BYTE PTR [rip+0x7ef1]        # 419ae0 <__bss_start@@Base+0x1988>
  411bef:	xor    ebp,0x1
  411bf2:	add    ebp,DWORD PTR [rbx+rax*1+0x10]
  411bf6:	mov    QWORD PTR [rip+0x7edb],rcx        # 419ad8 <__bss_start@@Base+0x1980>
  411bfd:	mov    DWORD PTR [rax+rbx*1],0xa1000000
  411c04:	mov    QWORD PTR [rip+0x7ecd],r14        # 419ad8 <__bss_start@@Base+0x1980>
  411c0b:	mov    DWORD PTR [rax+r14*1],0x9
  411c13:	add    r14,0x4
  411c17:	mov    QWORD PTR [rip+0x7eba],r14        # 419ad8 <__bss_start@@Base+0x1980>
  411c1e:	mov    rbx,r14
  411c21:	mov    DWORD PTR [rax+rbx*1],0x0
  411c28:	add    rbx,0x4
  411c2c:	mov    QWORD PTR [rip+0x7ea5],rbx        # 419ad8 <__bss_start@@Base+0x1980>
  411c33:	mov    r14,rbx
  411c36:	mov    DWORD PTR [rax+r14*1],0x0
  411c3e:	add    r14,0x4
  411c42:	mov    QWORD PTR [rip+0x7e8f],r14        # 419ad8 <__bss_start@@Base+0x1980>
  411c49:	mov    rbx,r14
  411c4c:	mov    DWORD PTR [rax+rbx*1],ebp
  411c4f:	lea    r14,[rbx+0x4]
  411c53:	mov    QWORD PTR [rip+0x7e7e],r14        # 419ad8 <__bss_start@@Base+0x1980>
  411c5a:	cmp    BYTE PTR [rip+0x7e57],0x0        # 419ab8 <__bss_start@@Base+0x1960>
  411c61:	je     411cc7 <next@@Base+0x39d7>
  411c63:	lea    r15,[rbx+0x8]
  411c67:	cmp    r15,QWORD PTR [rip+0x7e62]        # 419ad0 <__bss_start@@Base+0x1978>
  411c6e:	jbe    411d91 <next@@Base+0x3aa1>
  411c74:	add    rbx,0x20007
  411c7b:	and    rbx,0xfffffffffffe0000
  411c82:	mov    rdi,QWORD PTR [rip+0x7e3f]        # 419ac8 <__bss_start@@Base+0x1970>
  411c89:	mov    rsi,rbx
  411c8c:	call   4031d0 <realloc@plt>
  411c91:	mov    QWORD PTR [rip+0x7e30],rax        # 419ac8 <__bss_start@@Base+0x1970>
  411c98:	mov    QWORD PTR [rip+0x7e31],rbx        # 419ad0 <__bss_start@@Base+0x1978>
  411c9f:	mov    r14,QWORD PTR [rip+0x7e32]        # 419ad8 <__bss_start@@Base+0x1980>
  411ca6:	lea    r15,[r14+0x4]
  411caa:	cmp    BYTE PTR [rip+0x7e07],0x0        # 419ab8 <__bss_start@@Base+0x1960>
  411cb1:	mov    DWORD PTR [rax+r14*1],0x0
  411cb9:	mov    QWORD PTR [rip+0x7e18],r15        # 419ad8 <__bss_start@@Base+0x1980>
  411cc0:	je     411ce4 <next@@Base+0x39f4>
  411cc2:	jmp    411da7 <next@@Base+0x3ab7>
  411cc7:	mov    rax,QWORD PTR [rip+0x7dfa]        # 419ac8 <__bss_start@@Base+0x1970>
  411cce:	mov    DWORD PTR [rax+rbx*1+0x4],0x0
  411cd6:	add    rbx,0x8
  411cda:	mov    QWORD PTR [rip+0x7df7],rbx        # 419ad8 <__bss_start@@Base+0x1980>
  411ce1:	mov    r15,rbx
  411ce4:	mov    DWORD PTR [rax+r15*1],0x0
  411cec:	add    r15,0x4
  411cf0:	mov    QWORD PTR [rip+0x7de1],r15        # 419ad8 <__bss_start@@Base+0x1980>
  411cf7:	mov    r14,r15
  411cfa:	mov    DWORD PTR [rax+r14*1],0x0
  411d02:	add    r14,0x4
  411d06:	mov    QWORD PTR [rip+0x7dcb],r14        # 419ad8 <__bss_start@@Base+0x1980>
  411d0d:	mov    rbx,r14
  411d10:	mov    DWORD PTR [rax+rbx*1],0x0
  411d17:	add    rbx,0x4
  411d1b:	mov    QWORD PTR [rip+0x7db6],rbx        # 419ad8 <__bss_start@@Base+0x1980>
  411d22:	mov    r14,rbx
  411d25:	mov    DWORD PTR [rax+r14*1],0x0
  411d2d:	add    r14,0x4
  411d31:	mov    QWORD PTR [rip+0x7da0],r14        # 419ad8 <__bss_start@@Base+0x1980>
  411d38:	mov    rbx,r14
  411d3b:	mov    DWORD PTR [rax+rbx*1],0x0
  411d42:	add    rbx,0x4
  411d46:	mov    QWORD PTR [rip+0x7d8b],rbx        # 419ad8 <__bss_start@@Base+0x1980>
  411d4d:	mov    r14,rbx
  411d50:	mov    DWORD PTR [rax+r14*1],0xa3000000
  411d58:	add    r14,0x4
  411d5c:	mov    QWORD PTR [rip+0x7d75],r14        # 419ad8 <__bss_start@@Base+0x1980>
  411d63:	mov    rcx,r14
  411d66:	mov    rax,QWORD PTR [rip+0x7d5b]        # 419ac8 <__bss_start@@Base+0x1970>
  411d6d:	mov    DWORD PTR [rax+rcx*1],0x0
  411d74:	add    rcx,0x4
  411d78:	mov    QWORD PTR [rip+0x7d59],rcx        # 419ad8 <__bss_start@@Base+0x1980>
  411d7f:	mov    BYTE PTR [rip+0x7d5a],0x1        # 419ae0 <__bss_start@@Base+0x1988>
  411d86:	add    rsp,0x8
  411d8a:	pop    rbx
  411d8b:	pop    r14
  411d8d:	pop    r15
  411d8f:	pop    rbp
  411d90:	ret    
  411d91:	mov    rax,QWORD PTR [rip+0x7d30]        # 419ac8 <__bss_start@@Base+0x1970>
  411d98:	mov    DWORD PTR [rax+rbx*1+0x4],0x0
  411da0:	mov    QWORD PTR [rip+0x7d31],r15        # 419ad8 <__bss_start@@Base+0x1980>
  411da7:	lea    rcx,[r14+0x8]
  411dab:	cmp    rcx,QWORD PTR [rip+0x7d1e]        # 419ad0 <__bss_start@@Base+0x1978>
  411db2:	jbe    411e8a <next@@Base+0x3b9a>
  411db8:	add    r14,0x20007
  411dbf:	and    r14,0xfffffffffffe0000
  411dc6:	mov    rdi,rax
  411dc9:	mov    rsi,r14
  411dcc:	call   4031d0 <realloc@plt>
  411dd1:	mov    QWORD PTR [rip+0x7cf0],rax        # 419ac8 <__bss_start@@Base+0x1970>
  411dd8:	mov    QWORD PTR [rip+0x7cf1],r14        # 419ad0 <__bss_start@@Base+0x1978>
  411ddf:	mov    r15,QWORD PTR [rip+0x7cf2]        # 419ad8 <__bss_start@@Base+0x1980>
  411de6:	mov    cl,BYTE PTR [rip+0x7ccc]        # 419ab8 <__bss_start@@Base+0x1960>
  411dec:	mov    DWORD PTR [rax+r15*1],0x0
  411df4:	lea    r14,[r15+0x4]
  411df8:	mov    QWORD PTR [rip+0x7cd9],r14        # 419ad8 <__bss_start@@Base+0x1980>
  411dff:	cmp    cl,0x1
  411e02:	jne    411cfa <next@@Base+0x3a0a>
  411e08:	jmp    411e9d <next@@Base+0x3bad>
  411e0d:	mov    DWORD PTR [rax+rbx*1],0x0
  411e14:	lea    r14,[rbx+0x4]
  411e18:	mov    QWORD PTR [rip+0x7cb9],r14        # 419ad8 <__bss_start@@Base+0x1980>
  411e1f:	lea    rcx,[rbx+0x8]
  411e23:	cmp    rcx,QWORD PTR [rip+0x7ca6]        # 419ad0 <__bss_start@@Base+0x1978>
  411e2a:	jbe    411f00 <next@@Base+0x3c10>
  411e30:	add    rbx,0x20007
  411e37:	and    rbx,0xfffffffffffe0000
  411e3e:	mov    rdi,rax
  411e41:	mov    rsi,rbx
  411e44:	call   4031d0 <realloc@plt>
  411e49:	mov    QWORD PTR [rip+0x7c78],rax        # 419ac8 <__bss_start@@Base+0x1970>
  411e50:	mov    QWORD PTR [rip+0x7c79],rbx        # 419ad0 <__bss_start@@Base+0x1978>
  411e57:	mov    r14,QWORD PTR [rip+0x7c7a]        # 419ad8 <__bss_start@@Base+0x1980>
  411e5e:	mov    cl,BYTE PTR [rip+0x7c54]        # 419ab8 <__bss_start@@Base+0x1960>
  411e64:	mov    DWORD PTR [rax+r14*1],0x0
  411e6c:	lea    rbx,[r14+0x4]
  411e70:	mov    QWORD PTR [rip+0x7c61],rbx        # 419ad8 <__bss_start@@Base+0x1980>
  411e77:	mov    ebp,0x1
  411e7c:	cmp    cl,0x1
  411e7f:	jne    411c4c <next@@Base+0x395c>
  411e85:	jmp    411f13 <next@@Base+0x3c23>
  411e8a:	mov    DWORD PTR [rax+r15*1],0x0
  411e92:	lea    r14,[r15+0x4]
  411e96:	mov    QWORD PTR [rip+0x7c3b],r14        # 419ad8 <__bss_start@@Base+0x1980>
  411e9d:	lea    rcx,[r15+0x8]
  411ea1:	cmp    rcx,QWORD PTR [rip+0x7c28]        # 419ad0 <__bss_start@@Base+0x1978>
  411ea8:	jbe    411f5c <next@@Base+0x3c6c>
  411eae:	add    r15,0x20007
  411eb5:	and    r15,0xfffffffffffe0000
  411ebc:	mov    rdi,rax
  411ebf:	mov    rsi,r15
  411ec2:	call   4031d0 <realloc@plt>
  411ec7:	mov    QWORD PTR [rip+0x7bfa],rax        # 419ac8 <__bss_start@@Base+0x1970>
  411ece:	mov    QWORD PTR [rip+0x7bfb],r15        # 419ad0 <__bss_start@@Base+0x1978>
  411ed5:	mov    r14,QWORD PTR [rip+0x7bfc]        # 419ad8 <__bss_start@@Base+0x1980>
  411edc:	mov    cl,BYTE PTR [rip+0x7bd6]        # 419ab8 <__bss_start@@Base+0x1960>
  411ee2:	mov    DWORD PTR [rax+r14*1],0x0
  411eea:	lea    rbx,[r14+0x4]
  411eee:	mov    QWORD PTR [rip+0x7be3],rbx        # 419ad8 <__bss_start@@Base+0x1980>
  411ef5:	cmp    cl,0x1
  411ef8:	jne    411d10 <next@@Base+0x3a20>
  411efe:	jmp    411f6f <next@@Base+0x3c7f>
  411f00:	mov    DWORD PTR [rax+r14*1],0x0
  411f08:	lea    rbx,[r14+0x4]
  411f0c:	mov    QWORD PTR [rip+0x7bc5],rbx        # 419ad8 <__bss_start@@Base+0x1980>
  411f13:	lea    rcx,[r14+0x8]
  411f17:	mov    ebp,0x1
  411f1c:	cmp    rcx,QWORD PTR [rip+0x7bad]        # 419ad0 <__bss_start@@Base+0x1978>
  411f23:	jbe    411c4c <next@@Base+0x395c>
  411f29:	add    r14,0x20007
  411f30:	and    r14,0xfffffffffffe0000
  411f37:	mov    rdi,rax
  411f3a:	mov    rsi,r14
  411f3d:	call   4031d0 <realloc@plt>
  411f42:	mov    QWORD PTR [rip+0x7b7f],rax        # 419ac8 <__bss_start@@Base+0x1970>
  411f49:	mov    QWORD PTR [rip+0x7b80],r14        # 419ad0 <__bss_start@@Base+0x1978>
  411f50:	mov    rbx,QWORD PTR [rip+0x7b81]        # 419ad8 <__bss_start@@Base+0x1980>
  411f57:	jmp    411c4c <next@@Base+0x395c>
  411f5c:	mov    DWORD PTR [rax+r14*1],0x0
  411f64:	lea    rbx,[r14+0x4]
  411f68:	mov    QWORD PTR [rip+0x7b69],rbx        # 419ad8 <__bss_start@@Base+0x1980>
  411f6f:	lea    rcx,[r14+0x8]
  411f73:	cmp    rcx,QWORD PTR [rip+0x7b56]        # 419ad0 <__bss_start@@Base+0x1978>
  411f7a:	jbe    411ff6 <next@@Base+0x3d06>
  411f7c:	add    r14,0x20007
  411f83:	and    r14,0xfffffffffffe0000
  411f8a:	mov    rdi,rax
  411f8d:	mov    rsi,r14
  411f90:	call   4031d0 <realloc@plt>
  411f95:	mov    QWORD PTR [rip+0x7b2c],rax        # 419ac8 <__bss_start@@Base+0x1970>
  411f9c:	mov    QWORD PTR [rip+0x7b2d],r14        # 419ad0 <__bss_start@@Base+0x1978>
  411fa3:	mov    rbx,QWORD PTR [rip+0x7b2e]        # 419ad8 <__bss_start@@Base+0x1980>
  411faa:	mov    cl,BYTE PTR [rip+0x7b08]        # 419ab8 <__bss_start@@Base+0x1960>
  411fb0:	mov    DWORD PTR [rax+rbx*1],0x0
  411fb7:	lea    r14,[rbx+0x4]
  411fbb:	mov    QWORD PTR [rip+0x7b16],r14        # 419ad8 <__bss_start@@Base+0x1980>
  411fc2:	cmp    cl,0x1
  411fc5:	jne    411d25 <next@@Base+0x3a35>
  411fcb:	jmp    412008 <next@@Base+0x3d18>
  411fcd:	mov    rax,QWORD PTR [rip+0x601c]        # 417ff0 <stderr@GLIBC_2.2.5>
  411fd4:	mov    rdi,QWORD PTR [rax]
  411fd7:	mov    rdx,QWORD PTR [rip+0x7ad2]        # 419ab0 <__bss_start@@Base+0x1958>
  411fde:	lea    rsi,[rip+0x1e04]        # 413de9 <UnitySizeMask@@Base+0x7e9>
  411fe5:	xor    eax,eax
  411fe7:	add    rsp,0x8
  411feb:	pop    rbx
  411fec:	pop    r14
  411fee:	pop    r15
  411ff0:	pop    rbp
  411ff1:	jmp    403140 <fprintf@plt>
  411ff6:	mov    DWORD PTR [rax+rbx*1],0x0
  411ffd:	lea    r14,[rbx+0x4]
  412001:	mov    QWORD PTR [rip+0x7ad0],r14        # 419ad8 <__bss_start@@Base+0x1980>
  412008:	lea    rcx,[rbx+0x8]
  41200c:	cmp    rcx,QWORD PTR [rip+0x7abd]        # 419ad0 <__bss_start@@Base+0x1978>
  412013:	jbe    412067 <next@@Base+0x3d77>
  412015:	add    rbx,0x20007
  41201c:	and    rbx,0xfffffffffffe0000
  412023:	mov    rdi,rax
  412026:	mov    rsi,rbx
  412029:	call   4031d0 <realloc@plt>
  41202e:	mov    QWORD PTR [rip+0x7a93],rax        # 419ac8 <__bss_start@@Base+0x1970>
  412035:	mov    QWORD PTR [rip+0x7a94],rbx        # 419ad0 <__bss_start@@Base+0x1978>
  41203c:	mov    r14,QWORD PTR [rip+0x7a95]        # 419ad8 <__bss_start@@Base+0x1980>
  412043:	mov    cl,BYTE PTR [rip+0x7a6f]        # 419ab8 <__bss_start@@Base+0x1960>
  412049:	mov    DWORD PTR [rax+r14*1],0x0
  412051:	lea    rbx,[r14+0x4]
  412055:	mov    QWORD PTR [rip+0x7a7c],rbx        # 419ad8 <__bss_start@@Base+0x1980>
  41205c:	cmp    cl,0x1
  41205f:	jne    411d3b <next@@Base+0x3a4b>
  412065:	jmp    41207a <next@@Base+0x3d8a>
  412067:	mov    DWORD PTR [rax+r14*1],0x0
  41206f:	lea    rbx,[r14+0x4]
  412073:	mov    QWORD PTR [rip+0x7a5e],rbx        # 419ad8 <__bss_start@@Base+0x1980>
  41207a:	lea    rcx,[r14+0x8]
  41207e:	cmp    rcx,QWORD PTR [rip+0x7a4b]        # 419ad0 <__bss_start@@Base+0x1978>
  412085:	jbe    4120d6 <next@@Base+0x3de6>
  412087:	add    r14,0x20007
  41208e:	and    r14,0xfffffffffffe0000
  412095:	mov    rdi,rax
  412098:	mov    rsi,r14
  41209b:	call   4031d0 <realloc@plt>
  4120a0:	mov    QWORD PTR [rip+0x7a21],rax        # 419ac8 <__bss_start@@Base+0x1970>
  4120a7:	mov    QWORD PTR [rip+0x7a22],r14        # 419ad0 <__bss_start@@Base+0x1978>
  4120ae:	mov    rbx,QWORD PTR [rip+0x7a23]        # 419ad8 <__bss_start@@Base+0x1980>
  4120b5:	lea    r14,[rbx+0x4]
  4120b9:	cmp    BYTE PTR [rip+0x79f8],0x0        # 419ab8 <__bss_start@@Base+0x1960>
  4120c0:	mov    DWORD PTR [rax+rbx*1],0x0
  4120c7:	mov    QWORD PTR [rip+0x7a0a],r14        # 419ad8 <__bss_start@@Base+0x1980>
  4120ce:	je     411d50 <next@@Base+0x3a60>
  4120d4:	jmp    4120e8 <next@@Base+0x3df8>
  4120d6:	mov    DWORD PTR [rax+rbx*1],0x0
  4120dd:	lea    r14,[rbx+0x4]
  4120e1:	mov    QWORD PTR [rip+0x79f0],r14        # 419ad8 <__bss_start@@Base+0x1980>
  4120e8:	lea    rcx,[rbx+0x8]
  4120ec:	cmp    rcx,QWORD PTR [rip+0x79dd]        # 419ad0 <__bss_start@@Base+0x1978>
  4120f3:	jbe    412147 <next@@Base+0x3e57>
  4120f5:	add    rbx,0x20007
  4120fc:	and    rbx,0xfffffffffffe0000
  412103:	mov    rdi,rax
  412106:	mov    rsi,rbx
  412109:	call   4031d0 <realloc@plt>
  41210e:	mov    QWORD PTR [rip+0x79b3],rax        # 419ac8 <__bss_start@@Base+0x1970>
  412115:	mov    QWORD PTR [rip+0x79b4],rbx        # 419ad0 <__bss_start@@Base+0x1978>
  41211c:	mov    dl,BYTE PTR [rip+0x7996]        # 419ab8 <__bss_start@@Base+0x1960>
  412122:	mov    r14,QWORD PTR [rip+0x79af]        # 419ad8 <__bss_start@@Base+0x1980>
  412129:	mov    DWORD PTR [rax+r14*1],0xa3000000
  412131:	lea    rcx,[r14+0x4]
  412135:	mov    QWORD PTR [rip+0x799c],rcx        # 419ad8 <__bss_start@@Base+0x1980>
  41213c:	cmp    dl,0x1
  41213f:	jne    411d66 <next@@Base+0x3a76>
  412145:	jmp    41215a <next@@Base+0x3e6a>
  412147:	mov    DWORD PTR [rax+r14*1],0xa3000000
  41214f:	lea    rcx,[r14+0x4]
  412153:	mov    QWORD PTR [rip+0x797e],rcx        # 419ad8 <__bss_start@@Base+0x1980>
  41215a:	lea    rdx,[r14+0x8]
  41215e:	cmp    rdx,QWORD PTR [rip+0x796b]        # 419ad0 <__bss_start@@Base+0x1978>
  412165:	jbe    411d66 <next@@Base+0x3a76>
  41216b:	add    r14,0x20007
  412172:	and    r14,0xfffffffffffe0000
  412179:	mov    rdi,rax
  41217c:	mov    rsi,r14
  41217f:	call   4031d0 <realloc@plt>
  412184:	mov    QWORD PTR [rip+0x793d],rax        # 419ac8 <__bss_start@@Base+0x1970>
  41218b:	mov    QWORD PTR [rip+0x793e],r14        # 419ad0 <__bss_start@@Base+0x1978>
  412192:	mov    rcx,QWORD PTR [rip+0x793f]        # 419ad8 <__bss_start@@Base+0x1980>
  412199:	jmp    411d66 <next@@Base+0x3a76>
  41219e:	xchg   ax,ax
  4121a0:	push   r14
  4121a2:	push   rbx
  4121a3:	push   rax
  4121a4:	cmp    QWORD PTR [rip+0x7914],0x0        # 419ac0 <__bss_start@@Base+0x1968>
  4121ac:	je     412307 <next@@Base+0x4017>
  4121b2:	cmp    BYTE PTR [rip+0x78ff],0x0        # 419ab8 <__bss_start@@Base+0x1960>
  4121b9:	je     41222a <next@@Base+0x3f3a>
  4121bb:	mov    rbx,QWORD PTR [rip+0x7916]        # 419ad8 <__bss_start@@Base+0x1980>
  4121c2:	lea    rax,[rbx+0x8]
  4121c6:	cmp    rax,QWORD PTR [rip+0x7903]        # 419ad0 <__bss_start@@Base+0x1978>
  4121cd:	jbe    412290 <next@@Base+0x3fa0>
  4121d3:	add    rbx,0x20007
  4121da:	and    rbx,0xfffffffffffe0000
  4121e1:	mov    rdi,QWORD PTR [rip+0x78e0]        # 419ac8 <__bss_start@@Base+0x1970>
  4121e8:	mov    rsi,rbx
  4121eb:	call   4031d0 <realloc@plt>
  4121f0:	mov    rdi,rax
  4121f3:	mov    QWORD PTR [rip+0x78ce],rax        # 419ac8 <__bss_start@@Base+0x1970>
  4121fa:	mov    QWORD PTR [rip+0x78cf],rbx        # 419ad0 <__bss_start@@Base+0x1978>
  412201:	mov    al,BYTE PTR [rip+0x78b1]        # 419ab8 <__bss_start@@Base+0x1960>
  412207:	mov    rsi,QWORD PTR [rip+0x78ca]        # 419ad8 <__bss_start@@Base+0x1980>
  41220e:	mov    QWORD PTR [rdi+rsi*1],0x0
  412216:	add    rsi,0x8
  41221a:	mov    QWORD PTR [rip+0x78b7],rsi        # 419ad8 <__bss_start@@Base+0x1980>
  412221:	cmp    al,0x1
  412223:	jne    41224b <next@@Base+0x3f5b>
  412225:	jmp    4122b1 <next@@Base+0x3fc1>
  41222a:	mov    rdi,QWORD PTR [rip+0x7897]        # 419ac8 <__bss_start@@Base+0x1970>
  412231:	mov    rax,QWORD PTR [rip+0x78a0]        # 419ad8 <__bss_start@@Base+0x1980>
  412238:	mov    QWORD PTR [rdi+rax*1],0x0
  412240:	add    rax,0x8
  412244:	mov    QWORD PTR [rip+0x788d],rax        # 419ad8 <__bss_start@@Base+0x1980>
  41224b:	mov    rsi,QWORD PTR [rip+0x78a6]        # 419af8 <__bss_start@@Base+0x19a0>
  412252:	mov    edx,0x4
  412257:	call   4030c0 <msync@plt>
  41225c:	cmp    eax,0xffffffff
  41225f:	je     41231a <next@@Base+0x402a>
  412265:	mov    rdi,QWORD PTR [rip+0x785c]        # 419ac8 <__bss_start@@Base+0x1970>
  41226c:	mov    rsi,QWORD PTR [rip+0x7885]        # 419af8 <__bss_start@@Base+0x19a0>
  412273:	call   4031f0 <munmap@plt>
  412278:	mov    QWORD PTR [rip+0x7845],0x0        # 419ac8 <__bss_start@@Base+0x1970>
  412283:	mov    QWORD PTR [rip+0x786a],0x0        # 419af8 <__bss_start@@Base+0x19a0>
  41228e:	jmp    4122ce <next@@Base+0x3fde>
  412290:	mov    rdi,QWORD PTR [rip+0x7831]        # 419ac8 <__bss_start@@Base+0x1970>
  412297:	mov    rsi,QWORD PTR [rip+0x783a]        # 419ad8 <__bss_start@@Base+0x1980>
  41229e:	mov    QWORD PTR [rdi+rsi*1],0x0
  4122a6:	add    rsi,0x8
  4122aa:	mov    QWORD PTR [rip+0x7827],rsi        # 419ad8 <__bss_start@@Base+0x1980>
  4122b1:	mov    rcx,QWORD PTR [rip+0x7808]        # 419ac0 <__bss_start@@Base+0x1968>
  4122b8:	mov    edx,0x1
  4122bd:	call   403250 <fwrite@plt>
  4122c2:	mov    rdi,QWORD PTR [rip+0x77ff]        # 419ac8 <__bss_start@@Base+0x1970>
  4122c9:	call   403040 <free@plt>
  4122ce:	mov    rdi,QWORD PTR [rip+0x77eb]        # 419ac0 <__bss_start@@Base+0x1968>
  4122d5:	call   4031b0 <fflush@plt>
  4122da:	mov    edi,DWORD PTR [rip+0x5e70]        # 418150 <__data_start@@Base+0x10>
  4122e0:	call   412790 <__gcov_flush@@Base+0x2c0>
  4122e5:	mov    rdi,QWORD PTR [rip+0x77d4]        # 419ac0 <__bss_start@@Base+0x1968>
  4122ec:	call   4030b0 <fclose@plt>
  4122f1:	mov    QWORD PTR [rip+0x77c4],0x0        # 419ac0 <__bss_start@@Base+0x1968>
  4122fc:	mov    QWORD PTR [rip+0x77c1],0x0        # 419ac8 <__bss_start@@Base+0x1970>
  412307:	mov    rdi,QWORD PTR [rip+0x77a2]        # 419ab0 <__bss_start@@Base+0x1958>
  41230e:	add    rsp,0x8
  412312:	pop    rbx
  412313:	pop    r14
  412315:	jmp    403040 <free@plt>
  41231a:	call   403060 <__errno_location@plt>
  41231f:	mov    edi,DWORD PTR [rax]
  412321:	mov    rax,QWORD PTR [rip+0x5cc8]        # 417ff0 <stderr@GLIBC_2.2.5>
  412328:	mov    rbx,QWORD PTR [rax]
  41232b:	mov    r14,QWORD PTR [rip+0x777e]        # 419ab0 <__bss_start@@Base+0x1958>
  412332:	call   403270 <strerror@plt>
  412337:	lea    rsi,[rip+0x1b19]        # 413e57 <UnitySizeMask@@Base+0x857>
  41233e:	mov    rdi,rbx
  412341:	mov    rdx,r14
  412344:	mov    rcx,rax
  412347:	xor    eax,eax
  412349:	call   403140 <fprintf@plt>
  41234e:	jmp    412265 <next@@Base+0x3f75>
  412353:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41235d:	nop    DWORD PTR [rax]
  412360:	push   rbx
  412361:	mov    rbx,rdi
  412364:	mov    edi,0x18
  412369:	call   4031a0 <malloc@plt>
  41236e:	mov    QWORD PTR [rax+0x8],rbx
  412372:	mov    QWORD PTR [rax+0x10],0x0
  41237a:	lea    rcx,[rip+0x7767]        # 419ae8 <__bss_start@@Base+0x1990>
  412381:	mov    QWORD PTR [rax],rcx
  412384:	lea    rcx,[rip+0x789d]        # 419c28 <writeout_fn_list@@Base>
  41238b:	lea    rdx,[rcx+0x8]
  41238f:	mov    rsi,QWORD PTR [rcx+0x8]
  412393:	add    rsi,0x10
  412397:	xor    edi,edi
  412399:	cmp    QWORD PTR [rcx],0x0
  41239d:	setne  dil
  4123a1:	cmove  rsi,rdx
  4123a5:	mov    QWORD PTR [rsi],rax
  4123a8:	mov    QWORD PTR [rcx+rdi*8],rax
  4123ac:	pop    rbx
  4123ad:	ret    
  4123ae:	xchg   ax,ax
  4123b0:	push   r14
  4123b2:	push   rbx
  4123b3:	push   rax
  4123b4:	lea    rax,[rip+0x786d]        # 419c28 <writeout_fn_list@@Base>
  4123bb:	mov    rbx,QWORD PTR [rax]
  4123be:	test   rbx,rbx
  4123c1:	je     4123e5 <next@@Base+0x40f5>
  4123c3:	lea    r14,[rip+0x771e]        # 419ae8 <__bss_start@@Base+0x1990>
  4123ca:	cmp    QWORD PTR [rbx],r14
  4123cd:	je     4123de <next@@Base+0x40ee>
  4123cf:	nop
  4123d0:	mov    rbx,QWORD PTR [rbx+0x10]
  4123d4:	test   rbx,rbx
  4123d7:	je     4123e5 <next@@Base+0x40f5>
  4123d9:	cmp    QWORD PTR [rbx],r14
  4123dc:	jne    4123d0 <next@@Base+0x40e0>
  4123de:	xor    eax,eax
  4123e0:	call   QWORD PTR [rbx+0x8]
  4123e3:	jmp    4123d0 <next@@Base+0x40e0>
  4123e5:	add    rsp,0x8
  4123e9:	pop    rbx
  4123ea:	pop    r14
  4123ec:	ret    
  4123ed:	nop    DWORD PTR [rax]
  4123f0:	push   r15
  4123f2:	push   r14
  4123f4:	push   r12
  4123f6:	push   rbx
  4123f7:	push   rax
  4123f8:	lea    r14,[rip+0x7829]        # 419c28 <writeout_fn_list@@Base>
  4123ff:	mov    rdi,QWORD PTR [r14]
  412402:	test   rdi,rdi
  412405:	je     41246b <next@@Base+0x417b>
  412407:	xor    r12d,r12d
  41240a:	lea    r15,[rip+0x76d7]        # 419ae8 <__bss_start@@Base+0x1990>
  412411:	jmp    41242d <next@@Base+0x413d>
  412413:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41241d:	nop    DWORD PTR [rax]
  412420:	call   403040 <free@plt>
  412425:	mov    rdi,rbx
  412428:	test   rbx,rbx
  41242b:	je     41246b <next@@Base+0x417b>
  41242d:	mov    rbx,QWORD PTR [rdi+0x10]
  412431:	cmp    QWORD PTR [rdi],r15
  412434:	je     412440 <next@@Base+0x4150>
  412436:	mov    r12,rdi
  412439:	jmp    412425 <next@@Base+0x4135>
  41243b:	nop    DWORD PTR [rax+rax*1+0x0]
  412440:	cmp    rdi,QWORD PTR [r14]
  412443:	je     412452 <next@@Base+0x4162>
  412445:	cmp    rdi,QWORD PTR [r14+0x8]
  412449:	je     41245b <next@@Base+0x416b>
  41244b:	test   r12,r12
  41244e:	jne    412464 <next@@Base+0x4174>
  412450:	jmp    412420 <next@@Base+0x4130>
  412452:	mov    QWORD PTR [r14],rbx
  412455:	cmp    rdi,QWORD PTR [r14+0x8]
  412459:	jne    41244b <next@@Base+0x415b>
  41245b:	mov    QWORD PTR [r14+0x8],r12
  41245f:	test   r12,r12
  412462:	je     412420 <next@@Base+0x4130>
  412464:	mov    QWORD PTR [r12+0x10],rbx
  412469:	jmp    412420 <next@@Base+0x4130>
  41246b:	add    rsp,0x8
  41246f:	pop    rbx
  412470:	pop    r12
  412472:	pop    r14
  412474:	pop    r15
  412476:	ret    
  412477:	nop    WORD PTR [rax+rax*1+0x0]
  412480:	push   rbx
  412481:	mov    rbx,rdi
  412484:	mov    edi,0x18
  412489:	call   4031a0 <malloc@plt>
  41248e:	mov    QWORD PTR [rax+0x8],rbx
  412492:	mov    QWORD PTR [rax+0x10],0x0
  41249a:	lea    rcx,[rip+0x7647]        # 419ae8 <__bss_start@@Base+0x1990>
  4124a1:	mov    QWORD PTR [rax],rcx
  4124a4:	lea    rcx,[rip+0x776d]        # 419c18 <flush_fn_list@@Base>
  4124ab:	lea    rdx,[rcx+0x8]
  4124af:	mov    rsi,QWORD PTR [rcx+0x8]
  4124b3:	add    rsi,0x10
  4124b7:	xor    edi,edi
  4124b9:	cmp    QWORD PTR [rcx],0x0
  4124bd:	setne  dil
  4124c1:	cmove  rsi,rdx
  4124c5:	mov    QWORD PTR [rsi],rax
  4124c8:	mov    QWORD PTR [rcx+rdi*8],rax
  4124cc:	pop    rbx
  4124cd:	ret    
  4124ce:	xchg   ax,ax

00000000004124d0 <__gcov_flush@@Base>:
  4124d0:	push   rbx
  4124d1:	lea    rax,[rip+0x7740]        # 419c18 <flush_fn_list@@Base>
  4124d8:	mov    rbx,QWORD PTR [rax]
  4124db:	test   rbx,rbx
  4124de:	je     4124ee <__gcov_flush@@Base+0x1e>
  4124e0:	xor    eax,eax
  4124e2:	call   QWORD PTR [rbx+0x8]
  4124e5:	mov    rbx,QWORD PTR [rbx+0x10]
  4124e9:	test   rbx,rbx
  4124ec:	jne    4124e0 <__gcov_flush@@Base+0x10>
  4124ee:	pop    rbx
  4124ef:	ret    
  4124f0:	push   r15
  4124f2:	push   r14
  4124f4:	push   r12
  4124f6:	push   rbx
  4124f7:	push   rax
  4124f8:	lea    r14,[rip+0x7719]        # 419c18 <flush_fn_list@@Base>
  4124ff:	mov    rdi,QWORD PTR [r14]
  412502:	test   rdi,rdi
  412505:	je     41256b <__gcov_flush@@Base+0x9b>
  412507:	xor    r12d,r12d
  41250a:	lea    r15,[rip+0x75d7]        # 419ae8 <__bss_start@@Base+0x1990>
  412511:	jmp    41252d <__gcov_flush@@Base+0x5d>
  412513:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41251d:	nop    DWORD PTR [rax]
  412520:	call   403040 <free@plt>
  412525:	mov    rdi,rbx
  412528:	test   rbx,rbx
  41252b:	je     41256b <__gcov_flush@@Base+0x9b>
  41252d:	mov    rbx,QWORD PTR [rdi+0x10]
  412531:	cmp    QWORD PTR [rdi],r15
  412534:	je     412540 <__gcov_flush@@Base+0x70>
  412536:	mov    r12,rdi
  412539:	jmp    412525 <__gcov_flush@@Base+0x55>
  41253b:	nop    DWORD PTR [rax+rax*1+0x0]
  412540:	cmp    rdi,QWORD PTR [r14]
  412543:	je     412552 <__gcov_flush@@Base+0x82>
  412545:	cmp    rdi,QWORD PTR [r14+0x8]
  412549:	je     41255b <__gcov_flush@@Base+0x8b>
  41254b:	test   r12,r12
  41254e:	jne    412564 <__gcov_flush@@Base+0x94>
  412550:	jmp    412520 <__gcov_flush@@Base+0x50>
  412552:	mov    QWORD PTR [r14],rbx
  412555:	cmp    rdi,QWORD PTR [r14+0x8]
  412559:	jne    41254b <__gcov_flush@@Base+0x7b>
  41255b:	mov    QWORD PTR [r14+0x8],r12
  41255f:	test   r12,r12
  412562:	je     412520 <__gcov_flush@@Base+0x50>
  412564:	mov    QWORD PTR [r12+0x10],rbx
  412569:	jmp    412520 <__gcov_flush@@Base+0x50>
  41256b:	add    rsp,0x8
  41256f:	pop    rbx
  412570:	pop    r12
  412572:	pop    r14
  412574:	pop    r15
  412576:	ret    
  412577:	nop    WORD PTR [rax+rax*1+0x0]
  412580:	push   r14
  412582:	push   rbx
  412583:	push   rax
  412584:	mov    r14,rsi
  412587:	test   rdi,rdi
  41258a:	je     4125d7 <__gcov_flush@@Base+0x107>
  41258c:	mov    rbx,rdi
  41258f:	mov    edi,0x18
  412594:	call   4031a0 <malloc@plt>
  412599:	mov    QWORD PTR [rax+0x8],rbx
  41259d:	mov    QWORD PTR [rax+0x10],0x0
  4125a5:	lea    rcx,[rip+0x753c]        # 419ae8 <__bss_start@@Base+0x1990>
  4125ac:	mov    QWORD PTR [rax],rcx
  4125af:	lea    rcx,[rip+0x7672]        # 419c28 <writeout_fn_list@@Base>
  4125b6:	lea    rdx,[rcx+0x8]
  4125ba:	mov    rsi,QWORD PTR [rcx+0x8]
  4125be:	add    rsi,0x10
  4125c2:	xor    edi,edi
  4125c4:	cmp    QWORD PTR [rcx],0x0
  4125c8:	setne  dil
  4125cc:	cmove  rsi,rdx
  4125d0:	mov    QWORD PTR [rsi],rax
  4125d3:	mov    QWORD PTR [rcx+rdi*8],rax
  4125d7:	test   r14,r14
  4125da:	je     412624 <__gcov_flush@@Base+0x154>
  4125dc:	mov    edi,0x18
  4125e1:	call   4031a0 <malloc@plt>
  4125e6:	mov    QWORD PTR [rax+0x8],r14
  4125ea:	mov    QWORD PTR [rax+0x10],0x0
  4125f2:	lea    rcx,[rip+0x74ef]        # 419ae8 <__bss_start@@Base+0x1990>
  4125f9:	mov    QWORD PTR [rax],rcx
  4125fc:	lea    rcx,[rip+0x7615]        # 419c18 <flush_fn_list@@Base>
  412603:	lea    rdx,[rcx+0x8]
  412607:	mov    rsi,QWORD PTR [rcx+0x8]
  41260b:	add    rsi,0x10
  41260f:	xor    edi,edi
  412611:	cmp    QWORD PTR [rcx],0x0
  412615:	setne  dil
  412619:	cmove  rsi,rdx
  41261d:	mov    QWORD PTR [rsi],rax
  412620:	mov    QWORD PTR [rcx+rdi*8],rax
  412624:	cmp    BYTE PTR [rip+0x74c5],0x0        # 419af0 <__bss_start@@Base+0x1998>
  41262b:	je     412635 <__gcov_flush@@Base+0x165>
  41262d:	add    rsp,0x8
  412631:	pop    rbx
  412632:	pop    r14
  412634:	ret    
  412635:	mov    BYTE PTR [rip+0x74b4],0x1        # 419af0 <__bss_start@@Base+0x1998>
  41263c:	lea    rdi,[rip+0xfffffffffffffead]        # 4124f0 <__gcov_flush@@Base+0x20>
  412643:	call   412be0 <__libc_csu_fini@@Base+0x10>
  412648:	lea    rdi,[rip+0xfffffffffffffda1]        # 4123f0 <next@@Base+0x4100>
  41264f:	call   412be0 <__libc_csu_fini@@Base+0x10>
  412654:	lea    rdi,[rip+0xfffffffffffffd55]        # 4123b0 <next@@Base+0x40c0>
  41265b:	add    rsp,0x8
  41265f:	pop    rbx
  412660:	pop    r14
  412662:	jmp    412be0 <__libc_csu_fini@@Base+0x10>
  412667:	nop
  412668:	nop    DWORD PTR [rax+rax*1+0x0]
  412670:	push   r15
  412672:	push   r14
  412674:	push   rbx
  412675:	mov    r14,rdi
  412678:	lea    rbx,[rdi+0x1]
  41267c:	lea    r15,[rip+0x5ad1]        # 418154 <lprofDirMode@@Base>
  412683:	jmp    4126a5 <__gcov_flush@@Base+0x1d5>
  412685:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41268f:	nop
  412690:	mov    BYTE PTR [rbx],0x0
  412693:	mov    esi,DWORD PTR [r15]
  412696:	mov    rdi,r14
  412699:	call   403080 <mkdir@plt>
  41269e:	mov    BYTE PTR [rbx],0x2f
  4126a1:	add    rbx,0x1
  4126a5:	movzx  eax,BYTE PTR [rbx]
  4126a8:	cmp    al,0x2f
  4126aa:	je     412690 <__gcov_flush@@Base+0x1c0>
  4126ac:	test   al,al
  4126ae:	jne    4126a1 <__gcov_flush@@Base+0x1d1>
  4126b0:	pop    rbx
  4126b1:	pop    r14
  4126b3:	pop    r15
  4126b5:	ret    
  4126b6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4126c0:	lea    rax,[rip+0x5a8d]        # 418154 <lprofDirMode@@Base>
  4126c7:	mov    eax,DWORD PTR [rax]
  4126c9:	ret    
  4126ca:	nop    WORD PTR [rax+rax*1+0x0]
  4126d0:	lea    rax,[rip+0x5a7d]        # 418154 <lprofDirMode@@Base>
  4126d7:	mov    DWORD PTR [rax],edi
  4126d9:	ret    
  4126da:	nop    WORD PTR [rax+rax*1+0x0]
  4126e0:	push   rbp
  4126e1:	push   rbx
  4126e2:	sub    rsp,0x188
  4126e9:	mov    ebp,esi
  4126eb:	mov    rbx,rdi
  4126ee:	mov    rdi,rsp
  4126f1:	call   403110 <uname@plt>
  4126f6:	test   eax,eax
  4126f8:	js     41270c <__gcov_flush@@Base+0x23c>
  4126fa:	lea    rsi,[rsp+0x41]
  4126ff:	movsxd rdx,ebp
  412702:	mov    rdi,rbx
  412705:	call   403070 <strncpy@plt>
  41270a:	xor    eax,eax
  41270c:	add    rsp,0x188
  412713:	pop    rbx
  412714:	pop    rbp
  412715:	ret    
  412716:	nop    WORD PTR cs:[rax+rax*1+0x0]
  412720:	push   rbp
  412721:	push   r14
  412723:	push   rbx
  412724:	sub    rsp,0x20
  412728:	mov    ebx,edi
  41272a:	mov    WORD PTR [rsp+0x2],0x0
  412731:	xorps  xmm0,xmm0
  412734:	movups XMMWORD PTR [rsp+0x8],xmm0
  412739:	call   4030a0 <getpid@plt>
  41273e:	mov    DWORD PTR [rsp+0x18],eax
  412742:	mov    WORD PTR [rsp],0x1
  412748:	mov    r14,rsp
  41274b:	xor    ebp,ebp
  41274d:	nop    DWORD PTR [rax]
  412750:	mov    edi,ebx
  412752:	mov    esi,0x7
  412757:	mov    rdx,r14
  41275a:	xor    eax,eax
  41275c:	call   403090 <fcntl@plt>
  412761:	cmp    eax,0xffffffff
  412764:	jne    41277c <__gcov_flush@@Base+0x2ac>
  412766:	call   403060 <__errno_location@plt>
  41276b:	mov    eax,DWORD PTR [rax]
  41276d:	cmp    eax,0x4
  412770:	je     412750 <__gcov_flush@@Base+0x280>
  412772:	cmp    eax,0x25
  412775:	jne    41277c <__gcov_flush@@Base+0x2ac>
  412777:	mov    ebp,0xffffffff
  41277c:	mov    eax,ebp
  41277e:	add    rsp,0x20
  412782:	pop    rbx
  412783:	pop    r14
  412785:	pop    rbp
  412786:	ret    
  412787:	nop    WORD PTR [rax+rax*1+0x0]
  412790:	push   rbp
  412791:	push   r14
  412793:	push   rbx
  412794:	sub    rsp,0x20
  412798:	mov    ebx,edi
  41279a:	mov    WORD PTR [rsp+0x2],0x0
  4127a1:	xorps  xmm0,xmm0
  4127a4:	movups XMMWORD PTR [rsp+0x8],xmm0
  4127a9:	call   4030a0 <getpid@plt>
  4127ae:	mov    DWORD PTR [rsp+0x18],eax
  4127b2:	mov    WORD PTR [rsp],0x2
  4127b8:	mov    r14,rsp
  4127bb:	xor    ebp,ebp
  4127bd:	nop    DWORD PTR [rax]
  4127c0:	mov    edi,ebx
  4127c2:	mov    esi,0x7
  4127c7:	mov    rdx,r14
  4127ca:	xor    eax,eax
  4127cc:	call   403090 <fcntl@plt>
  4127d1:	cmp    eax,0xffffffff
  4127d4:	jne    4127ec <__gcov_flush@@Base+0x31c>
  4127d6:	call   403060 <__errno_location@plt>
  4127db:	mov    eax,DWORD PTR [rax]
  4127dd:	cmp    eax,0x4
  4127e0:	je     4127c0 <__gcov_flush@@Base+0x2f0>
  4127e2:	cmp    eax,0x25
  4127e5:	jne    4127ec <__gcov_flush@@Base+0x31c>
  4127e7:	mov    ebp,0xffffffff
  4127ec:	mov    eax,ebp
  4127ee:	add    rsp,0x20
  4127f2:	pop    rbx
  4127f3:	pop    r14
  4127f5:	pop    rbp
  4127f6:	ret    
  4127f7:	nop    WORD PTR [rax+rax*1+0x0]
  412800:	push   rbp
  412801:	push   r14
  412803:	push   rbx
  412804:	sub    rsp,0x20
  412808:	call   403190 <fileno@plt>
  41280d:	mov    ebx,eax
  41280f:	mov    WORD PTR [rsp+0x2],0x0
  412816:	xorps  xmm0,xmm0
  412819:	movups XMMWORD PTR [rsp+0x8],xmm0
  41281e:	call   4030a0 <getpid@plt>
  412823:	mov    DWORD PTR [rsp+0x18],eax
  412827:	mov    WORD PTR [rsp],0x1
  41282d:	mov    r14,rsp
  412830:	xor    ebp,ebp
  412832:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41283c:	nop    DWORD PTR [rax+0x0]
  412840:	mov    edi,ebx
  412842:	mov    esi,0x7
  412847:	mov    rdx,r14
  41284a:	xor    eax,eax
  41284c:	call   403090 <fcntl@plt>
  412851:	cmp    eax,0xffffffff
  412854:	jne    41286c <__gcov_flush@@Base+0x39c>
  412856:	call   403060 <__errno_location@plt>
  41285b:	mov    eax,DWORD PTR [rax]
  41285d:	cmp    eax,0x4
  412860:	je     412840 <__gcov_flush@@Base+0x370>
  412862:	cmp    eax,0x25
  412865:	jne    41286c <__gcov_flush@@Base+0x39c>
  412867:	mov    ebp,0xffffffff
  41286c:	mov    eax,ebp
  41286e:	add    rsp,0x20
  412872:	pop    rbx
  412873:	pop    r14
  412875:	pop    rbp
  412876:	ret    
  412877:	nop    WORD PTR [rax+rax*1+0x0]
  412880:	push   rbp
  412881:	push   r14
  412883:	push   rbx
  412884:	sub    rsp,0x20
  412888:	call   403190 <fileno@plt>
  41288d:	mov    ebx,eax
  41288f:	mov    WORD PTR [rsp+0x2],0x0
  412896:	xorps  xmm0,xmm0
  412899:	movups XMMWORD PTR [rsp+0x8],xmm0
  41289e:	call   4030a0 <getpid@plt>
  4128a3:	mov    DWORD PTR [rsp+0x18],eax
  4128a7:	mov    WORD PTR [rsp],0x2
  4128ad:	mov    r14,rsp
  4128b0:	xor    ebp,ebp
  4128b2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4128bc:	nop    DWORD PTR [rax+0x0]
  4128c0:	mov    edi,ebx
  4128c2:	mov    esi,0x7
  4128c7:	mov    rdx,r14
  4128ca:	xor    eax,eax
  4128cc:	call   403090 <fcntl@plt>
  4128d1:	cmp    eax,0xffffffff
  4128d4:	jne    4128ec <__gcov_flush@@Base+0x41c>
  4128d6:	call   403060 <__errno_location@plt>
  4128db:	mov    eax,DWORD PTR [rax]
  4128dd:	cmp    eax,0x4
  4128e0:	je     4128c0 <__gcov_flush@@Base+0x3f0>
  4128e2:	cmp    eax,0x25
  4128e5:	jne    4128ec <__gcov_flush@@Base+0x41c>
  4128e7:	mov    ebp,0xffffffff
  4128ec:	mov    eax,ebp
  4128ee:	add    rsp,0x20
  4128f2:	pop    rbx
  4128f3:	pop    r14
  4128f5:	pop    rbp
  4128f6:	ret    
  4128f7:	nop    WORD PTR [rax+rax*1+0x0]
  412900:	push   rbp
  412901:	push   r14
  412903:	push   rbx
  412904:	sub    rsp,0x20
  412908:	xor    ebx,ebx
  41290a:	mov    esi,0x42
  41290f:	mov    edx,0x1b6
  412914:	xor    eax,eax
  412916:	call   403210 <open@plt>
  41291b:	test   eax,eax
  41291d:	js     41297a <__gcov_flush@@Base+0x4aa>
  41291f:	mov    ebp,eax
  412921:	mov    WORD PTR [rsp+0x2],0x0
  412928:	xorps  xmm0,xmm0
  41292b:	movups XMMWORD PTR [rsp+0x8],xmm0
  412930:	call   4030a0 <getpid@plt>
  412935:	mov    DWORD PTR [rsp+0x18],eax
  412939:	mov    WORD PTR [rsp],0x1
  41293f:	mov    r14,rsp
  412942:	mov    edi,ebp
  412944:	mov    esi,0x7
  412949:	mov    rdx,r14
  41294c:	xor    eax,eax
  41294e:	call   403090 <fcntl@plt>
  412953:	cmp    eax,0xffffffff
  412956:	jne    412969 <__gcov_flush@@Base+0x499>
  412958:	call   403060 <__errno_location@plt>
  41295d:	mov    eax,DWORD PTR [rax]
  41295f:	cmp    eax,0x4
  412962:	je     412942 <__gcov_flush@@Base+0x472>
  412964:	cmp    eax,0x25
  412967:	je     412986 <__gcov_flush@@Base+0x4b6>
  412969:	lea    rsi,[rip+0x1366]        # 413cd6 <UnitySizeMask@@Base+0x6d6>
  412970:	mov    edi,ebp
  412972:	call   4031e0 <fdopen@plt>
  412977:	mov    rbx,rax
  41297a:	mov    rax,rbx
  41297d:	add    rsp,0x20
  412981:	pop    rbx
  412982:	pop    r14
  412984:	pop    rbp
  412985:	ret    
  412986:	mov    rax,QWORD PTR [rip+0x5663]        # 417ff0 <stderr@GLIBC_2.2.5>
  41298d:	mov    rdi,QWORD PTR [rax]
  412990:	lea    rsi,[rip+0x14e1]        # 413e78 <UnitySizeMask@@Base+0x878>
  412997:	lea    rdx,[rip+0x1523]        # 413ec1 <UnitySizeMask@@Base+0x8c1>
  41299e:	xor    eax,eax
  4129a0:	call   403140 <fprintf@plt>
  4129a5:	jmp    412969 <__gcov_flush@@Base+0x499>
  4129a7:	nop    WORD PTR [rax+rax*1+0x0]
  4129b0:	push   r15
  4129b2:	push   r14
  4129b4:	push   r12
  4129b6:	push   rbx
  4129b7:	push   rax
  4129b8:	mov    r14,rsi
  4129bb:	mov    r15,rdi
  4129be:	lea    rdi,[rip+0x152a]        # 413eef <UnitySizeMask@@Base+0x8ef>
  4129c5:	call   403030 <getenv@plt>
  4129ca:	mov    rbx,rax
  4129cd:	lea    rdi,[rip+0x1527]        # 413efb <UnitySizeMask@@Base+0x8fb>
  4129d4:	call   403030 <getenv@plt>
  4129d9:	mov    QWORD PTR [r14],0x0
  4129e0:	mov    DWORD PTR [r15],0x0
  4129e7:	test   rbx,rbx
  4129ea:	je     412a21 <__gcov_flush@@Base+0x551>
  4129ec:	xor    r12d,r12d
  4129ef:	cmp    BYTE PTR [rbx],0x0
  4129f2:	je     412a21 <__gcov_flush@@Base+0x551>
  4129f4:	test   rax,rax
  4129f7:	je     412a11 <__gcov_flush@@Base+0x541>
  4129f9:	xor    r12d,r12d
  4129fc:	mov    rdi,rax
  4129ff:	xor    esi,esi
  412a01:	mov    edx,0xa
  412a06:	call   403160 <strtol@plt>
  412a0b:	test   eax,eax
  412a0d:	cmovns r12d,eax
  412a11:	mov    DWORD PTR [r15],r12d
  412a14:	mov    rdi,rbx
  412a17:	call   4030d0 <strlen@plt>
  412a1c:	mov    QWORD PTR [r14],rax
  412a1f:	jmp    412a23 <__gcov_flush@@Base+0x553>
  412a21:	xor    ebx,ebx
  412a23:	mov    rax,rbx
  412a26:	add    rsp,0x8
  412a2a:	pop    rbx
  412a2b:	pop    r12
  412a2d:	pop    r14
  412a2f:	pop    r15
  412a31:	ret    
  412a32:	nop    WORD PTR cs:[rax+rax*1+0x0]
  412a3c:	nop    DWORD PTR [rax+0x0]
  412a40:	push   r15
  412a42:	push   r14
  412a44:	push   r12
  412a46:	push   rbx
  412a47:	push   rax
  412a48:	mov    r15,rcx
  412a4b:	mov    r12,rdx
  412a4e:	mov    rbx,rsi
  412a51:	mov    r14,rdi
  412a54:	test   r8d,r8d
  412a57:	jle    412a8b <__gcov_flush@@Base+0x5bb>
  412a59:	lea    rax,[rbx+0x1]
  412a5d:	xor    ecx,ecx
  412a5f:	jmp    412a7f <__gcov_flush@@Base+0x5af>
  412a61:	nop    WORD PTR cs:[rax+rax*1+0x0]
  412a6b:	nop    DWORD PTR [rax+rax*1+0x0]
  412a70:	add    ecx,0x1
  412a73:	mov    rbx,rax
  412a76:	add    rax,0x1
  412a7a:	cmp    ecx,r8d
  412a7d:	jge    412a8b <__gcov_flush@@Base+0x5bb>
  412a7f:	movzx  edx,BYTE PTR [rax]
  412a82:	cmp    dl,0x2f
  412a85:	je     412a70 <__gcov_flush@@Base+0x5a0>
  412a87:	test   dl,dl
  412a89:	jne    412a76 <__gcov_flush@@Base+0x5a6>
  412a8b:	mov    rdi,r14
  412a8e:	mov    rsi,r12
  412a91:	mov    rdx,r15
  412a94:	call   403170 <memcpy@plt>
  412a99:	cmp    BYTE PTR [r15+r12*1-0x1],0x2f
  412a9f:	je     412aaa <__gcov_flush@@Base+0x5da>
  412aa1:	mov    BYTE PTR [r14+r15*1],0x2f
  412aa6:	add    r15,0x1
  412aaa:	add    r14,r15
  412aad:	mov    rdi,rbx
  412ab0:	call   4030d0 <strlen@plt>
  412ab5:	lea    rdx,[rax+0x1]
  412ab9:	mov    rdi,r14
  412abc:	mov    rsi,rbx
  412abf:	add    rsp,0x8
  412ac3:	pop    rbx
  412ac4:	pop    r12
  412ac6:	pop    r14
  412ac8:	pop    r15
  412aca:	jmp    403170 <memcpy@plt>
  412acf:	nop
  412ad0:	mov    esi,0x2f
  412ad5:	jmp    4030f0 <strchr@plt>
  412ada:	nop    WORD PTR [rax+rax*1+0x0]
  412ae0:	mov    esi,0x2f
  412ae5:	jmp    403100 <strrchr@plt>
  412aea:	nop    WORD PTR [rax+rax*1+0x0]
  412af0:	push   rax
  412af1:	mov    DWORD PTR [rsp+0x4],0x0
  412af9:	lea    rsi,[rsp+0x4]
  412afe:	mov    edi,0x2
  412b03:	xor    eax,eax
  412b05:	call   403180 <prctl@plt>
  412b0a:	mov    ecx,DWORD PTR [rsp+0x4]
  412b0e:	test   eax,eax
  412b10:	jne    412b29 <__gcov_flush@@Base+0x659>
  412b12:	cmp    ecx,0x9
  412b15:	jne    412b29 <__gcov_flush@@Base+0x659>
  412b17:	mov    edi,0x1
  412b1c:	xor    esi,esi
  412b1e:	xor    eax,eax
  412b20:	call   403180 <prctl@plt>
  412b25:	mov    ecx,DWORD PTR [rsp+0x4]
  412b29:	xor    eax,eax
  412b2b:	cmp    ecx,0x9
  412b2e:	sete   al
  412b31:	pop    rcx
  412b32:	ret    
  412b33:	nop    WORD PTR cs:[rax+rax*1+0x0]
  412b3d:	nop    DWORD PTR [rax]
  412b40:	mov    edi,0x1
  412b45:	mov    esi,0x9
  412b4a:	xor    eax,eax
  412b4c:	jmp    403180 <prctl@plt>
  412b51:	nop    WORD PTR cs:[rax+rax*1+0x0]
  412b5b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000412b60 <__libc_csu_init@@Base>:
  412b60:	endbr64 
  412b64:	push   r15
  412b66:	lea    r15,[rip+0x3f83]        # 416af0 <UnitySizeMask@@Base+0x34f0>
  412b6d:	push   r14
  412b6f:	mov    r14,rdx
  412b72:	push   r13
  412b74:	mov    r13,rsi
  412b77:	push   r12
  412b79:	mov    r12d,edi
  412b7c:	push   rbp
  412b7d:	lea    rbp,[rip+0x3f94]        # 416b18 <UnitySizeMask@@Base+0x3518>
  412b84:	push   rbx
  412b85:	sub    rbp,r15
  412b88:	sub    rsp,0x8
  412b8c:	call   403000 <getenv@plt-0x30>
  412b91:	sar    rbp,0x3
  412b95:	je     412bb6 <__libc_csu_init@@Base+0x56>
  412b97:	xor    ebx,ebx
  412b99:	nop    DWORD PTR [rax+0x0]
  412ba0:	mov    rdx,r14
  412ba3:	mov    rsi,r13
  412ba6:	mov    edi,r12d
  412ba9:	call   QWORD PTR [r15+rbx*8]
  412bad:	add    rbx,0x1
  412bb1:	cmp    rbp,rbx
  412bb4:	jne    412ba0 <__libc_csu_init@@Base+0x40>
  412bb6:	add    rsp,0x8
  412bba:	pop    rbx
  412bbb:	pop    rbp
  412bbc:	pop    r12
  412bbe:	pop    r13
  412bc0:	pop    r14
  412bc2:	pop    r15
  412bc4:	ret    
  412bc5:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

0000000000412bd0 <__libc_csu_fini@@Base>:
  412bd0:	endbr64 
  412bd4:	ret    
  412bd5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  412bdf:	nop
  412be0:	endbr64 
  412be4:	mov    rdx,QWORD PTR [rip+0x555d]        # 418148 <__data_start@@Base+0x8>
  412beb:	xor    esi,esi
  412bed:	jmp    403220 <__cxa_atexit@plt>

Disassembly of section .fini:

0000000000412bf4 <.fini>:
  412bf4:	endbr64 
  412bf8:	sub    rsp,0x8
  412bfc:	add    rsp,0x8
  412c00:	ret    
